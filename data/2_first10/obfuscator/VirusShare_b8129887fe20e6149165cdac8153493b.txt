add
inc
aas
jno
popa
ja
movsl
into
or
mov
xchg
loope
ret
addr16
sbb
xor
jge
cmpsl
push
shll
cmpsb
adc
dec
and
dec
in
dec
movsb
icebp
or
push
and
xchg
fld
mov
mov
inc
cltd
xchg
adc
ret
jnp
out
syscall
xor
xor
leave
xor
call
or
jmp
xchg
or
xchg
dec
ret
sbb
adc
mull
jns
and
lcall
enter
in
loop
or
xchg
rol
fadds
aad
std
jmp
cmp
aaa
insl
fucomi
cltd
pushl
add
adc
xor
xor
cmp
inc
xchg
aad
xor
fs
lcall
aaa
stc
incl
roll
insb
cmp
cli
jle
mov
fdivl
call
insl
outsb
pop
mov
movsl
xor
and
cmp
mov
int
jmp
jbe
sbb
cmpsb
pop
sub
dec
outsb
mov
fistps
test
in
sbb
jmp
mov
xor
pop
add
push
push
sbb
ljmp
inc
repz
push
pop
mov
sti
mov
imul
dec
addr16
dec
sub
lret
jb
mov
dec
lods
adc
adc
mov
xor
jne
ljmp
dec
divl
adc
cmp
pushf
xchg
xor
shrb
pop
mov
out
imul
cld
lock
hlt
push
or
lods
sub
dec
xchg
mov
mov
call
inc
int3
xchg
dec
push
cmp
inc
cmp
jg
xchg
clc
jo
mov
inc
lods
xchg
push
ljmp
sbb
arpl
stos
xchg
dec
insb
fsubrs
insb
leave
xchg
popf
cmpb
push
les
imul
lock
icebp
stos
mov
xchg
xchg
mov
inc
movsl
adc
or
lds
mov
sti
push
std
inc
pop
repz
sti
shrl
out
lret
lods
sahf
push
cltd
sub
add
pop
sti
test
popf
push
cmp
jp
js
sub
jle
inc
imul
mov
jmp
cmc
repz
inc
mov
mov
pop
test
in
test
or
pushf
pusha
cmp
movb
lea
ja
rcl
sub
mov
add
sar
jmp
not
movsbw
movb
lahf
movzbw
seta
jmp
pusha
jmp
movsl
in
out
mov
aam
fcoml
pop
pusha
mov
mov
mov
inc
lret
mov
aas
outsl
cmc
in
insb
mov
xchg
cmc
mov
arpl
pusha
cmp
iret
pop
ds
rolb
test
mov
push
or
cmp
pushf
jne
dec
cltd
and
ljmp
leave
push
jl
and
shll
scas
shl
or
mov
mov
mov
sub
aam
dec
repz
mov
adc
xchg
push
mov
dec
cli
test
adc
rolb
pop
sbb
cs
test
popf
scas
shl
or
xor
mov
nop
je
add
mov
cli
mov
fwait
add
adc
jle
shl
xor
aas
lock
push
bound
jno
xchg
outsl
jg
scas
and
adc
xchg
pop
jno
xchg
add
xor
cmp
imul
hlt
add
mov
mov
inc
mov
xor
or
xchg
sub
enter
data16
mov
jg
pop
gs
out
test
mov
ja
aaa
or
add
jp
in
sub
fldl
mov
pop
sub
fwait
xchg
mov
adc
insb
dec
fsubr
xchg
pop
andb
cmpsb
negl
jb
dec
xor
sbb
ret
scas
mov
leave
dec
sub
and
inc
out
bound
out
xchg
mov
pop
mov
scas
cltd
push
cmpsb
pop
jg
popf
push
loope
int
xchg
pop
dec
mov
sahf
and
icebp
aad
adc
pop
nop
test
xor
and
test
sti
addl
jbe
mov
pop
ror
mov
mov
call
xchg
or
fmull
adc
push
cmp
les
dec
dec
sub
shlb
daa
stc
pop
and
cmp
lret
and
lret
ljmp
adc
jns
in
mov
sbb
lods
sub
xchg
jns
xchg
mov
mov
roll
mov
cwtl
dec
mov
sub
decl
lret
fs
cld
in
pop
loopne
mov
enter
jb
mov
jg
xchg
gs
push
and
mov
mov
sub
xchg
cmpsl
fwait
jle
jo
data16
call
push
inc
cmpl
outsb
mov
or
clc
push
jne
fstps
outsb
insl
clc
ss
add
clc
ret
dec
ja
dec
mov
adc
int3
and
cmp
sbb
lahf
lret
lock
inc
hlt
call
cmp
sub
scas
sub
xor
loop
sti
mov
arpl
jge
lods
outsl
rcrb
shll
outsl
cmp
mov
xchg
and
sub
andb
hlt
fsub
daa
fs
mov
mov
test
mov
scas
scas
stc
and
inc
sahf
mov
in
adc
std
lds
shlb
adc
mov
sarb
cmp
je
mov
imul
bound
mov
adc
pop
rorb
loope
scas
mov
mov
pushf
cmp
std
nop
push
addl
mov
aaa
xchg
mov
into
cs
pop
inc
adcl
mov
inc
lahf
xchg
mov
mov
jp
repz
xchg
sbb
lret
mov
cmc
rorl
jp
mov
lret
repnz
mov
and
jne
jge
cmp
mov
popa
pop
mov
push
inc
pop
fwait
ret
cmp
cmp
ljmp
fwait
mov
xlat
adc
cmpsl
cmp
jle
adc
adc
and
bound
hlt
sbb
cmp
icebp
es
push
mov
inc
xlat
push
out
cli
push
pop
mov
sub
loopne
fistpll
mov
cmp
add
add
cmp
bt
clc
xor
call
not
mov
pushf
lea
jmp
call
mov
movb
pushf
pushf
mov
pushl
ret
pusha
lea
ja
pushf
bt
imul
clc
cmp
cmc
cmp
add
movb
movb
lea
jmp
mov
bt
cmc
test
pushf
jmp
rolb
pop
mov
outsl
sub
sbb
push
add
cmp
add
sub
out
loopne
jnp
divb
cmc
cmp
mov
icebp
push
jmp
andb
lock
mov
cld
out
stos
add
mov
sub
in
test
pop
mov
int
push
lcall
arpl
sbb
rcll
mov
add
scas
mov
jno
inc
xchg
or
adc
div
aas
lock
or
sbb
push
daa
andb
mov
sub
ss
mov
sahf
or
sub
fs
jp
inc
xor
testl
push
sarl
cli
push
mov
jne
inc
push
add
add
xchg
roll
outsb
xchg
mov
popl
and
cmc
jl
loope
sti
jne
or
inc
or
cmp
ret
rolb
jp
sbbl
pop
dec
int
stos
mov
imul
pushf
cmp
xor
cmpsb
popa
ret
addr16
sub
lock
push
pop
sbb
jne
mov
mov
loopne
syscall
stos
iret
xor
imul
sub
xor
jp
mov
dec
add
and
std
loope
dec
pop
dec
lcall
jp
movsl
das
outsl
fisubs
repz
pop
incl
out
add
lret
xor
cmpsl
jbe
std
in
inc
jge
jecxz
pop
rclb
aaa
sub
xchg
aad
out
jae
push
mov
xchg
or
cmc
pop
jp
jmp
xlat
add
fnstsw
jge
push
stos
inc
and
popa
inc
xchg
insb
into
pop
push
bound
pusha
push
das
rolb
push
dec
add
fucomi
ljmp
pop
add
cmp
aas
and
pop
jge
mov
xlat
enter
dec
jne
ret
mov
aaa
xchg
add
in
not
pop
lea
lods
inc
and
push
test
sub
sub
in
mov
bound
sub
scas
sbbl
movsb
push
aam
sub
sub
mov
inc
daa
movb
idiv
fsubr
clc
inc
loopne
mov
inc
mov
jge
add
stos
add
jns
fidivrl
hlt
sahf
cld
jno
jne
mov
pop
cmc
ret
dec
popa
stc
ret
push
add
push
addr16
loop
adc
sbb
inc
adc
imul
adc
dec
fdivrs
int3
dec
xor
sub
cmc
clc
cs
out
dec
pop
adc
aaa
mov
into
loope
inc
js
sub
nop
dec
sti
xor
inc
lahf
cli
mov
int
leave
outsb
xchg
loopne
push
xchg
pop
xor
leave
out
adc
jecxz
popa
test
bound
inc
mov
lds
add
loopne
ss
pop
dec
lret
fldenv
loop
and
nop
mov
imul
cmp
mov
jbe
xchg
push
cmc
movsl
adcb
push
addr16
aad
mov
jle
pop
sub
ret
mov
or
out
cld
mov
stos
sub
lea
stc
inc
es
xchg
pop
out
sbb
cmpsl
aad
or
mov
gs
xor
arpl
and
pop
push
add
jp
ja
ss
inc
test
arpl
inc
push
xchg
lret
lea
imul
mov
inc
jp
lcall
movsb
inc
andps
jns
insl
or
loopne
mov
pop
dec
mov
mov
mov
sbb
inc
enter
add
xor
cmp
cmc
xor
dec
sub
scas
push
xchg
cwtl
outsb
jno
push
dec
sub
xchg
cmc
inc
sub
cwtl
xchg
pop
incb
popa
icebp
ret
mov
out
pusha
test
addl
cmc
leave
push
imul
movb
aaa
or
dec
jb
inc
jge
dec
xchg
cs
xchg
mov
popa
push
mov
xor
sbb
leave
imul
dec
add
mov
xchg
out
sub
jne
xor
mov
cmc
or
out
push
sub
add
inc
loope
int
lds
jecxz
dec
add
pop
pop
inc
and
inc
jne
cld
sub
mov
bound
inc
mov
mov
inc
inc
test
mov
mov
jg
inc
cmpsl
jge
insl
xor
sbb
loopne
jne
xchg
pop
jmp
call
data16
push
xorb
inc
outsl
inc
bound
dec
fdivrp
push
pop
test
sub
sbb
fxch
jbe
jle
mov
sub
push
adcb
push
jp
dec
arpl
xor
enter
inc
xor
jne
xchg
test
mov
push
insl
nop
and
sub
jne
int3
dec
push
mov
push
add
or
pop
test
cmp
loope
and
add
push
in
pop
outsl
adc
nop
in
cmc
mov
xchg
stos
add
popa
in
pop
mov
jge
sbb
xor
ljmp
inc
movb
xchg
dec
mov
jecxz
dec
jne
mov
pop
push
inc
scas
jns
jne
stc
pop
leave
jbe
lret
subl
test
inc
ficoml
daa
mov
and
jecxz
pop
cmc
pushf
sub
pop
xor
pop
shrl
mov
xchg
dec
jne
adc
std
add
scas
or
add
cli
cmp
mov
mov
fisubl
sub
xchg
pop
cmp
mov
lcall
dec
cmc
adc
dec
push
out
pop
jge
jb
push
xchg
insl
ljmp
int
pop
push
aaa
jecxz
sub
scas
fisubl
inc
jne
jp
xchg
push
gs
pusha
test
and
and
sti
sbb
sub
pop
push
sub
aam
add
sahf
adc
popf
push
insl
gs
movb
add
pop
cmp
xor
jmp
popa
push
jg
pop
jge
pop
pop
into
push
mov
imul
push
sbb
orl
call
arpl
dec
jnp
and
mov
sub
mov
push
cmp
enter
inc
out
pop
pop
decl
cwtl
mov
inc
cwtl
cmp
imul
add
dec
jne
gs
test
inc
or
rcll
pop
xor
mov
repz
xor
fimull
daa
add
into
jne
pop
inc
loope
lds
lret
cmp
xor
pop
icebp
mov
push
adc
pop
fisttps
or
adc
jge
jle
ja
jg
jnp
cld
sub
cmc
cmp
fistl
xor
adc
das
nop
mov
daa
arpl
scas
movsb
xor
and
sti
push
mov
movsl
fisubrs
add
and
in
or
movsb
inc
loopne
mov
inc
push
cli
enter
iret
je
or
test
xchg
and
stos
pop
fwait
lods
sub
mov
in
sub
pusha
cltd
fucomi
fldt
lret
push
inc
xor
test
nop
jmp
and
jp
movsl
pop
mov
fiadds
mov
pop
pop
mov
xor
mov
xor
inc
test
add
les
or
push
sub
js
dec
cli
xchg
mov
jne
mov
adc
inc
fnsave
mov
std
fnstenv
std
mov
push
dec
cmp
outsl
mov
add
push
push
push
mov
iret
xchg
and
inc
loope
xor
rcpps
inc
outsb
or
xor
adcb
push
xchg
xor
leave
inc
mov
push
or
fs
mov
sti
shll
cmp
inc
xor
or
inc
jge
ret
lahf
cmp
or
pop
test
jbe
aas
xchg
and
pop
mov
fadds
dec
sub
xchg
xor
mov
and
mov
jno
push
int
push
divl
sbb
xor
mov
and
or
sub
pop
ja
iret
call
xchg
test
pusha
and
cwtl
ja
insl
push
push
roll
in
add
xor
jmp
arpl
push
pop
adc
push
push
shll
xchg
jl
or
add
cmc
in
and
cwtl
data16
inc
xor
mov
test
add
enter
xchg
shl
or
xchg
imul
push
repz
add
xchg
xchg
test
adc
out
push
repnz
int3
sub
js
cmp
pop
jb
out
jne
cli
mov
mov
inc
inc
xor
sbb
in
mov
les
xor
push
stc
push
inc
test
add
push
sahf
fldt
inc
jae
into
addr16
and
mov
insb
jns
dec
out
inc
pop
mov
jecxz
out
bound
dec
adc
addb
add
popa
dec
bound
ret
and
pop
lret
jne
cli
push
xor
jno
lret
cmp
add
xor
dec
rcr
push
jle
shll
outsb
cmpl
jp
insl
out
sub
push
inc
test
pop
shl
cmc
loope
push
sub
xchg
clc
mov
mov
cwtl
or
pop
das
dec
cmp
xchg
push
loope
sbb
aad
in
popa
out
ja
rorl
pushl
out
mov
daa
jne
add
xor
xor
imul
dec
lret
xor
sub
dec
pop
rcll
xor
sbb
mov
or
cmp
inc
in
push
pop
push
push
xor
xchg
inc
and
in
pop
inc
sbb
movl
adc
popf
mov
es
dec
icebp
nop
and
andb
loope
imul
xor
jns
inc
sub
xor
outsb
or
lds
incl
add
cmc
dec
lods
dec
push
dec
loop
mov
add
xor
sub
cmpsl
xor
push
or
in
xor
and
jns
mov
pop
orb
mov
adc
loope
add
test
sbb
push
int
add
sahf
mov
sahf
cmp
das
xor
dec
inc
jp
dec
xchg
xchg
sarl
push
orb
je
ret
mov
call
aad
cmpsl
mov
push
add
loope
adc
xor
loop
sbb
jns
ret
jp
inc
jl
icebp
pop
xchg
inc
mov
lret
icebp
jne
stc
cmp
dec
add
test
jo
fwait
jge
push
dec
jne
add
loope
ret
sub
movsb
and
enter
mov
rorl
arpl
insl
shrb
imul
inc
cmc
adc
add
addb
dec
jno
fsts
lret
inc
dec
xor
mov
cli
stc
jne
mov
mov
mov
inc
and
aam
xchg
xchg
sbbb
dec
xchg
sub
push
pop
dec
sbb
dec
cld
lret
xor
lds
add
dec
aaa
iret
cmp
jmp
dec
cli
xor
incl
pop
mov
lahf
jl
lret
add
sti
sar
mov
jecxz
jecxz
lret
ret
int
inc
stc
inc
shl
insl
lahf
push
sub
pop
call
popa
push
cld
push
sub
jne
rclb
nop
sub
dec
jecxz
cs
aas
adc
js
and
lea
movsb
test
xchg
lret
inc
sub
enter
shll
fwait
add
test
cld
sbb
hlt
es
adc
std
mov
and
xor
mov
pop
push
lret
fisttpl
inc
mov
and
ja
into
xor
jb
das
js
sub
and
call
outsb
jne
lods
dec
cmpsb
mov
dec
sbb
push
mov
or
push
scas
jmp
sbb
push
jnp
out
testl
xchg
rolb
int3
sbb
push
lahf
cmp
pushf
xchg
popf
fcomps
orb
and
xchg
fidivs
loop
mov
dec
and
pop
xor
cmp
enter
cs
scas
inc
cmpb
shl
es
mov
cmc
or
imull
into
in
cli
jno
adc
mov
xor
sub
imul
outsb
lods
xlat
shrl
adc
cli
xor
mov
dec
jbe
jb
add
gs
push
lods
out
pop
popa
dec
mov
jmp
je
ret
out
hlt
adc
paddb
dec
or
outsl
cmpsl
xchg
fmul
leave
push
sub
out
jecxz
dec
shr
and
fs
lahf
lcall
push
xchg
arpl
sub
xor
sub
fildl
jge
out
xor
in
decb
inc
sbb
repz
push
push
sbb
mov
xor
lahf
and
fmull
lock
inc
sahf
hlt
cmpl
loope
test
daa
sbb
test
add
ret
jne
imulb
jge
sub
sub
push
push
xor
adc
xchg
andl
daa
dec
movsl
xorb
sub
iret
and
xchg
jl
lds
bound
xchg
inc
jne
mov
stos
out
incb
shlb
and
mov
sbb
cs
std
push
flds
lret
shrb
xchg
xor
pusha
pop
jae
add
mov
jne
popf
scas
fsts
push
sub
cmpl
sub
rclb
jne
cmp
jg
cwtl
inc
je
xor
jno
mov
jns
jne
pop
sbb
addb
ret
and
sub
shrb
jle
sub
cmp
xchg
add
add
mov
pop
jecxz
mov
inc
fisubrs
add
cmp
xor
xor
sbb
or
rolb
rcr
cmc
stos
inc
push
shrb
mov
incl
loop
test
adc
mov
out
leave
jmp
and
ret
sbb
pop
jnp
xchg
xor
pusha
xor
cmc
sbb
push
sahf
pusha
cmp
cmp
cltd
sbb
xor
xor
ss
mov
push
mov
xor
stos
test
pop
ror
imul
popa
jo
xchg
sti
mov
xchg
sbb
sbb
adc
jne
sub
lods
mov
je
das
insb
movsb
pop
or
cmp
bound
push
push
aam
mov
lea
pop
cmc
xlat
outsl
enter
xchg
shlb
inc
sahf
js
cli
lea
and
leave
div
or
outsb
sar
xchg
popa
enter
roll
mov
daa
and
cmp
cs
pop
sub
les
das
add
addr16
inc
jp
push
loope
push
push
sti
sub
ret
andb
push
pop
push
mov
ljmp
xchg
jnp
or
inc
mov
jns
mov
jae
cli
pop
push
mov
pushf
test
xor
xor
jbe
adc
in
cmpsb
jge
adc
repz
ljmp
outsl
cmpsl
push
das
and
jne
fscale
xchg
repz
std
cmpsl
dec
inc
inc
push
push
fwait
sub
out
push
repnz
imul
popl
data16
xor
pop
push
insl
hlt
or
sbb
jle
cmpsl
gs
popa
jmp
xor
inc
push
adc
mov
insl
int
mov
adc
push
loopne
mov
addr16
popa
xchg
in
movsb
push
popf
xor
pop
sub
inc
test
roll
sub
mov
fnstsw
test
cmp
mov
xchg
jne
jge
cmpsb
les
stos
bound
out
lods
movsl
xor
add
test
bound
xor
mov
lret
pop
mov
popa
push
js
adc
inc
pusha
icebp
or
push
mov
pop
sub
pusha
hlt
push
std
xor
cmp
mov
cmc
adc
sub
mov
sub
inc
in
mov
xor
pop
sub
outsl
ljmp
in
mov
shlb
sbb
cwtl
addr16
lods
lahf
leave
shll
adc
jns
mov
mov
dec
test
insb
jb
push
pusha
pop
stc
cld
jmp
xor
lret
dec
insb
or
inc
cmc
push
mov
or
mov
pop
xchg
xor
js
dec
and
cmp
daa
lds
inc
xor
sub
daa
subl
sub
xchg
test
xlat
adc
daa
lods
sub
add
xor
push
or
or
je
and
mov
or
std
pop
mov
xorb
ret
fistps
in
mov
pop
push
out
std
cmc
sub
push
jmp
xchg
daa
xor
lods
sub
mov
add
xor
lock
outsl
dec
dec
leave
iret
fcomps
and
ss
loop
outsb
minps
dec
icebp
mov
add
jmp
and
bound
jo
mov
outsl
out
lcall
ret
movsl
inc
enter
stos
add
cltd
fcomp
sbb
sti
lcall
pop
lock
and
shrl
cmp
and
or
push
adc
push
dec
outsl
in
add
das
cmp
movb
mov
in
lret
loopne
lcall
dec
xlat
inc
andb
es
ret
pusha
and
cmpsb
mov
dec
call
push
and
adc
mov
jo
sbb
ja
sub
in
pusha
or
ljmp
pop
cmp
aam
jnp
push
sbb
jns
sbb
mov
cmc
pop
and
rorb
pusha
lock
popa
jp
xchg
mull
pop
arpl
or
clc
and
andl
js
jo
jg
subl
push
inc
repnz
pop
lods
sbb
les
outsl
push
fisubrl
sbb
inc
loop
or
or
movb
test
dec
pop
xlat
mov
fs
leave
ljmp
sti
push
add
jle
mov
pop
push
push
add
aaa
add
cmc
jl
adcl
sub
and
insl
pop
jno
cmc
aam
out
and
ret
sbb
jb
xor
cli
insl
call
xchg
rclb
jbe
cmpl
iret
lea
jo
jae
push
push
popa
inc
ret
aas
push
push
push
jo
int3
out
ljmp
jo
mov
pop
and
xor
cmc
decl
dec
rcr
lret
shll
ss
mov
cmp
jns
arpl
pop
faddp
cmc
xchg
jle
jae
call
adc
add
insl
into
add
addb
inc
bnd
mov
push
xlat
add
mov
shrl
andl
lds
push
lods
repnz
incb
mov
dec
imul
xor
mov
jne
cmc
lock
jae
jns
decl
add
popa
icebp
inc
sbb
je
pop
fldenv
cmpsl
mov
jecxz
out
xor
add
jmp
jmp
adc
inc
jne
dec
xorl
xor
cmp
test
pop
and
mov
stos
test
push
movsb
cmp
inc
xor
fs
push
bound
pusha
les
jne
xor
les
xor
mov
sub
repnz
dec
add
movb
and
or
test
and
jne
arpl
push
test
mov
in
fcmovb
popa
test
inc
mov
mov
rcrb
mov
dec
rorb
jne
sti
xor
push
scas
repnz
cmc
inc
cmpsb
cltd
mov
pop
inc
test
xchg
and
ret
xor
and
ret
jge
stc
imul
lahf
mov
sub
xchg
fbstp
or
push
ret
stc
dec
andb
cli
push
ja
jmp
lods
push
sti
lods
cmpl
inc
mov
inc
jmp
sub
lret
lds
loop
add
aas
inc
lea
add
fwait
mov
mov
mov
popa
je
sub
les
push
icebp
sub
cmc
lods
and
push
mov
push
rolb
adc
dec
inc
xor
jnp
cmc
push
daa
hlt
scas
cltd
cwtl
pop
xor
cmpsl
jb
ret
push
sbb
gs
cwtl
push
dec
test
imul
mov
adc
and
or
gs
sub
xchg
stos
test
dec
xchg
out
inc
xchg
repz
adc
mov
out
call
je
out
lods
push
sbb
mov
mov
jp
and
es
add
mov
xchg
pop
jbe
cmc
fisubrl
jns
sti
divb
lods
push
ret
pop
outsb
jne
push
fidivrl
sub
icebp
fwait
push
pushf
and
xchg
and
movsb
and
add
jl
inc
loopne
cli
outsb
pop
jnp
dec
sub
pop
mov
adc
fdivs
test
insl
dec
in
jns
std
mov
rolb
or
mov
sbb
push
sub
and
pop
shll
aam
fistps
cmc
fs
divb
roll
inc
test
out
mov
sti
dec
and
scas
jne
push
sub
loop
add
push
adc
inc
clc
xor
mov
xor
inc
aas
sub
std
mov
pop
popa
inc
outsl
adc
and
mov
sub
aaa
test
push
cmp
popa
pusha
ret
push
inc
lds
adc
stc
push
sub
cmpsl
roll
lods
push
inc
jne
fildl
jbe
xor
push
cmc
scas
hlt
xchg
jnp
pop
leave
inc
shlb
inc
sub
xor
lea
fnsave
mov
loopne
sbbb
pop
jns
inc
add
in
shrl
lods
lea
push
daa
lea
dec
and
scas
movsl
int3
rol
push
shll
scas
or
and
psrlq
ror
mov
jge
push
roll
imul
and
cmp
and
insb
shll
lods
data16
pop
std
push
jbe
lods
inc
mull
jne
pop
mov
pop
inc
sub
dec
icebp
je
aas
aad
inc
xor
test
pop
jmp
aad
rclb
xchg
test
pop
negb
jge
push
adc
xor
push
inc
add
mov
add
stc
inc
jnp
push
and
scas
and
orb
sub
lcall
pop
xor
lds
jne
and
push
add
inc
sub
mov
mov
push
std
pop
dec
xor
jne
enter
push
loope
or
dec
dec
movb
inc
or
add
les
out
mov
dec
jbe
aad
push
inc
mov
inc
cmp
ds
dec
pop
lahf
pop
or
jp
jne
push
incb
xchg
pop
sub
adc
out
cmp
inc
adc
roll
push
jle
pusha
dec
cmp
push
popa
jo
ror
leave
in
movsb
aaa
push
push
cmc
mov
dec
and
inc
in
mov
cmp
xlat
test
mov
insl
or
xchg
inc
lcall
and
dec
stos
pop
inc
xor
xor
sub
xchg
ljmp
mov
or
add
xor
push
ss
dec
xlat
outsb
test
or
movsb
pop
gs
inc
fwait
adc
sub
dec
fimull
daa
test
aas
mov
and
inc
sti
push
loopne
mov
leave
xor
push
xlat
mov
jp
dec
out
mov
cmp
into
jnp
insl
lods
sti
sub
aaa
and
jge
pop
div
pop
xchg
pop
and
or
xchg
and
gs
popa
dec
std
push
sti
movsb
sub
mov
stos
jne
aaa
adc
movsb
push
mov
out
inc
lret
inc
mov
stos
movsb
sbb
push
addr16
sub
int
add
mov
enter
in
dec
pop
mov
bound
int3
rolb
add
addb
mov
pop
mov
pop
add
push
icebp
dec
pop
fistpll
pusha
push
dec
rorl
inc
dec
pop
loopne
fnsave
adc
xor
and
fnstenv
fsubrl
sub
jne
or
shll
mov
nop
ret
mov
add
and
xchg
or
jmp
cld
sub
daa
cmc
loope
lahf
cmpsb
ds
push
loope
adc
test
sub
mov
fnstcw
pop
js
push
xor
dec
sarb
push
and
ret
pop
cmc
add
sub
addr16
add
push
push
jecxz
xor
leave
jne
movsb
stc
negl
jp
sbb
add
push
and
cs
push
xor
rolb
mov
and
imul
or
test
ret
inc
pop
cmpb
data16
push
insb
add
jns
adc
cmp
lds
subl
push
jl
in
mov
movsb
inc
adcl
cmc
lock
xchg
sub
fimull
mov
sub
shlb
ret
or
jo
xchg
jle
call
rcrb
pop
xchg
sub
push
mov
rolb
sbb
cmp
or
xor
repnz
imul
cmc
jno
and
cmpsl
inc
inc
mov
adc
and
mov
pusha
lea
push
jae
inc
fisubs
ret
fisubrl
fldenv
pop
and
xor
iret
loope
push
je
or
imul
inc
cmp
mov
push
add
test
or
shll
dec
add
lds
adc
and
ds
mov
jge
cmp
pop
xor
popa
lret
push
shll
mov
or
mov
xor
jecxz
dec
add
fs
and
daa
pop
daa
jle
arpl
adc
insb
push
lods
xor
rorb
daa
lods
fcmovne
jo
push
xor
lds
adc
and
cmp
mov
ficompl
push
test
nop
lcall
mov
sub
out
mov
pushf
popf
push
pop
les
fcmovbe
xor
data16
or
xchg
in
add
inc
mov
inc
xor
jne
scas
subb
loopne
xchg
adc
and
shrl
push
xchg
nop
dec
inc
sub
push
xor
in
je
jno
push
es
jecxz
jmp
add
mov
xchg
dec
inc
popa
imul
xor
inc
movb
mov
sbb
push
jo
lcall
loop
cltd
jne
or
roll
cmc
popf
jg
dec
sub
adc
aas
fsubrs
cmp
cwtl
sbb
pop
les
jge
fidivrs
jl
cwtl
out
in
xorl
loope
std
mov
aas
mov
lea
pop
xchg
orl
lahf
js
jo
jno
sub
add
xchg
repz
sbb
fisubrs
pop
test
js
push
sub
push
les
add
adc
test
jne
fs
mov
std
inc
orl
dec
outsb
movsb
mov
mov
bound
icebp
jmp
push
push
popf
jmp
ds
inc
lcall
call
add
stos
add
insb
test
mov
lock
dec
icebp
call
xchg
lret
lret
insl
aaa
jle
or
ficompl
xor
dec
call
sarl
dec
mov
loop
imul
jecxz
punpcklwd
dec
sti
sub
push
mov
repnz
loopne
dec
add
scas
pop
add
push
xlat
jp
or
pusha
pop
inc
cmp
test
js
push
movl
in
push
xor
sbb
lock
push
inc
int3
bswap
push
dec
push
push
stos
pop
and
push
add
cmp
sti
mov
out
sbbl
mov
push
icebp
cmp
push
leave
jp
or
xor
je
sti
jbe
push
pop
test
mov
inc
adc
cmp
in
dec
rcrb
adc
push
push
dec
shll
fisttpll
xor
add
insl
push
imul
pop
jb
clc
jecxz
addr16
mov
sbb
inc
jne
cmpsb
jne
popa
xor
adc
mov
jne
mov
cmpsb
dec
or
jg
movsb
test
add
mov
bound
push
xor
mov
cli
sub
mov
loopne
mov
cs
jmp
xchg
and
jns
xor
or
lds
or
cmp
jmp
inc
pop
inc
and
sbb
inc
stos
xor
xchg
pop
lock
loop
iret
lds
ret
jb
cmpsl
add
push
jno
dec
push
cmc
pop
and
cwtl
loope
test
lret
jne
mov
pusha
sub
fxch
rcll
in
inc
push
in
xchg
cmp
shlb
mov
or
icebp
inc
mov
aas
gs
std
add
pop
pop
mov
push
int
adcl
dec
cmp
mov
mov
out
add
push
jg
iret
into
insl
push
and
add
jo
mov
mov
roll
xor
xchg
xor
mov
ret
popa
cmp
jne
cmpsl
insb
fmul
repz
addb
pop
inc
cmp
pop
movsb
sub
les
cmpsl
data16
jecxz
hlt
jg
and
sbb
jno
gs
arpl
loop
cmc
lods
in
xor
jmp
or
icebp
xlat
in
aad
mov
roll
inc
xchg
cmc
inc
popa
test
in
mov
push
fldenv
pop
cmc
inc
push
jmp
stc
push
loope
bnd
add
lds
andl
je
imul
gs
lret
xor
sti
add
inc
sbb
inc
jecxz
lcall
mov
and
cmc
and
ret
jne
repnz
pop
dec
ret
lods
sbb
imulb
mov
sahf
push
dec
pop
scas
pop
ja
jne
popa
push
cmc
scas
dec
enter
cltd
add
notl
test
add
or
pop
mov
stos
dec
cmp
xor
movsb
std
repz
imul
pushf
or
pop
dec
pop
add
or
loop
test
ds
push
pop
jecxz
cmc
pusha
scas
mov
pushf
push
inc
test
dec
jne,pn
jae
and
call
dec
dec
divb
es
mov
dec
movsb
nop
push
pop
ja
bound
repz
and
cmc
iret
and
push
dec
xchg
addl
cwtl
xor
adcb
imul
add
lahf
jns
jl
jno
jne
xor
aad
or
and
adc
shrl
pop
mov
or
in
push
dec
xchg
mov
out
fnstenv
int
push
fsubrp
xor
cmp
inc
or
push
movsb
jnp
xor
cmp
rcll
popa
sub
mov
mov
dec
xorl
xor
pop
xchg
add
ljmp
jne
lock
xor
inc
lods
push
and
pop
cltd
jae
jne
dec
mov
adc
sbb
sbb
xchg
cli
aam
push
and
pop
sub
gs
xlat
sti
test
and
cmp
inc
xor
mov
dec
adc
lock
movsb
xchg
les
mov
cmp
cwtl
dec
mov
das
pushf
dec
call
inc
std
addr16
sub
push
das
hlt
dec
out
lods
cmpsb
mov
and
es
mov
inc
out
int
jmp
xchg
pop
push
pop
inc
and
jmp
je
lret
test
pop
dec
cmc
stc
pop
cmpsb
add
and
xor
inc
mov
cld
push
insb
adc
or
jecxz
sub
push
int
jne
in
mov
add
xor
loope
cmp
jne
ds
inc
stos
inc
aad
cmp
push
nop
push
mov
add
lcall
sahf
xlat
imul
cmpb
jle
popa
ja
or
ljmp
jb
mov
fucomi
movsb
daa
enter
push
movsb
sbb
sbb
inc
mov
push
in
pop
pop
arpl
push
xor
jne
addr16
rol
inc
mov
inc
jb
cmpsb
inc
les
cmp
or
dec
outsl
pop
and
cmp
sub
adc
adc
imul
and
push
popf
mov
xor
scas
or
sub
pop
push
inc
ret
xor
xchg
cmc
pop
add
cmc
xchg
rorl
xchg
stos
xorl
enter
dec
outsb
test
outsb
aas
arpl
push
lods
push
jl
mov
roll
lds
add
sub
add
insb
push
subl
out
movsl
mov
pop
out
inc
xchg
or
je
movsb
lret
jns
xchg
or
pop
mov
adc
in
push
loop
or
les
loopne
inc
mov
jne
fldcw
sahf
and
xchg
lret
loop
mov
push
jecxz
push
pop
jmp
mov
test
ja
andl
sub
sub
add
clc
mov
dec
shll
mov
pop
jle
repnz
stc
push
into
fucomip
mov
loop
adc
sub
rorl
and
fcomps
push
shrb
jo
outsl
hlt
xor
push
nop
pop
push
test
daa
and
dec
xor
dec
pop
jge
arpl
pop
shll
pop
sbb
inc
rolb
lea
adc
lret
sbb
xchg
daa
fisttpl
jae
in
xor
push
cmp
in
dec
sub
popf
mov
and
mov
pop
mov
mov
testb
fldt
aad
xchg
pop
pop
and
je
add
insl
aaa
stos
or
and
sub
outsb
push
xor
dec
jne
push
in
data16
pusha
or
psubsb
dec
out
and
xor
pop
rol
pop
in
or
test
sub
jne
mov
xor
add
cmpb
js
frstor
and
mov
sub
sub
mov
fldl
inc
pop
in
jns
dec
add
stos
sbb
mov
aad
dec
into
sub
daa
lds
pusha
push
cmp
shll
sbb
rclb
loop
cmc
pop
push
fisubrs
fmul
stos
test
adc
pop
cmpsb
ljmp
insb
and
mov
adc
addb
push
dec
and
icebp
dec
les
mov
sar
rep
shrb
orl
dec
adcb
jne
xor
lret
imul
stos
pop
gs
subb
mov
push
mov
push
das
mov
pop
sar
mov
pop
lea
xlat
in
sbb
pop
sbb
xor
lock
inc
in
test
jge
rolb
imul
filds
cli
push
sti
adc
mov
imulb
jne
mov
test
enter
rcrl
rcrb
out
pop
int3
ret
or
sarl
or
xor
lds
xor
lds
lock
push
pop
rcr
pop
mov
jne
iret
xor
mov
sti
in
push
cmp
dec
enter
inc
push
gs
loopne
shr
mov
pop
dec
stos
dec
xchg
xor
mov
sub
in
subb
jle
inc
shrl
sub
jp
jne
jns
xchg
cmc
shl
pop
aam
aas
inc
jnp
pcmpgtw
cmpsl
icebp
mov
imul
pop
mov
push
sbb
cmp
les
dec
jne
sbb
xor
ret
xor
sbb
lret
adc
jle
std
xorb
jecxz
jns
xor
push
jp
add
cli
adc
xorl
add
loopne
mull
xor
mov
jge
out
push
mov
push
jmp
sbb
push
bound
sarb
lods
leave
jge
pop
jge
mov
xchg
jmp
push
add
shll
cmpsl
push
pop
pop
jae
sbb
mov
insl
test
pop
vpsrad
frstor
pusha
xor
inc
push
jg
js
cmp
push
mov
loop
insb
imul
shr
psraw
mov
shl
add
push
std
xor
xor
cmc
jae
das
push
in
decl
xchg
pop
pusha
pop
shll
cmc
sub
push
rcll
cmp
xchg
xlat
lea
dec
jge
mov
jae
call
dec
aam
sbb
stos
jp
dec
loope
test
jno
sarl
adc
add
jb
mov
sbb
ret
xlat
popa
pushl
inc
mov
mov
testl
push
xor
fsincos
std
test
je
addr16
js
ficoms
pop
mov
enter
vmovq
lcall
sub
jbe
fsubrs
adc
mov
push
pop
cmpsl
mov
scas
aam
imul
rolb
ret
push
and
inc
arpl
andl
data16
test
add
cltd
lods
mov
lret
add
shll
push
aam
cmpsl
daa
lahf
addl
xor
subl
cwtl
mulb
stos
subl
push
mov
xor
sub
adc
or
lods
mov
mov
mov
testb
aas
mov
lret
sub
jne
hlt
adc
lods
inc
xchg
ret
jmp
xorb
gs
push
or
jge
sbb
leave
xor
pop
lods
push
mov
enter
or
pop
push
std
mov
aas
lods
cmp
dec
cs
dec
sbb
fwait
inc
jae
popf
insl
movsb
in
mov
cmc
pop
enter
mov
stc
pop
gs
sub
mov
sti
arpl
es
out
mov
push
test
movsb
ja
lret
or
dec
push
sub
and
sbb
mov
jle
enter
in
lret
jnp
addr16
jle
xor
jle
xor
xor
mov
push
loope
fbstp
addl
push
loopne
sub
inc
loop
mov
out
ret
or
stos
adc
push
sahf
mov
jne
cwtl
xor
je
inc
out
cltd
out
xor
loope
hlt
stos
mov
cmp
push
add
jge
rorl
icebp
insb
enter
fsubr
cmp
jg
push
push
add
mov
iret
int3
jne
mov
ficomps
fwait
cltd
sbbl
pop
mov
push
dec
cmc
enter
push
and
and
mov
cltd
pop
cmc
xchg
hlt
cmpsb
and
xor
stos
aad
dec
sti
cmc
add
int3
andl
les
xor
out
subl
add
mov
dec
cltd
cmp
mov
and
repnz
mov
xchg
sbb
inc
pop
xorl
sub
rorl
jge
jmp
js
stos
ja
ret
movsb
cmc
divb
and
sti
jp
adcb
pop
xchg
jb
das
mov
cmp
inc
sub
pusha
cmp
xor
dec
mov
mov
andb
jnp
jle
vunpcklps
jg
jns
lret
movsl
add
jmp
sub
jae
push
mov
pop
pop
aaa
xor
jmp
jo
sub
jecxz
jno
imul
add
incl
jo
movsb
mov
cwtl
push
loope
lds
mov
pop
adc
mov
sub
mov
sbb
bound
push
xor
and
add
add
jge
shrl
and
stc
sbb
test
out
sub
xchg
lods
leave
shrb
inc
sbb
pop
push
not
insb
and
pop
inc
lock
push
dec
inc
sub
mov
xchg
aaa
mov
add
mov
dec
jmp
stos
xor
pop
dec
in
jle
cs
out
data16
imul
int
and
mov
adc
fst
dec
jp
and
push
push
mov
cmc
sbb
inc
push
mov
cmp
popa
in
inc
dec
je
push
in
cmc
pop
push
xchg
addl
rol
rcll
push
into
fs
rclb
loope
pop
ret
dec
and
out
add
loop
xchg
rcrl
adc
js
or
jne
and
xor
les
scas
xor
jne
in
push
loope
es
push
mov
in
jmp
jne
xlat
rol
or
mov
sub
dec
mov
shl
xchg
rcrb
push
push
mov
inc
lcall
pop
jbe
movsb
xor
pop
popl
push
sub
roll
pop
decl
add
rcr
insl
inc
mov
cmpsb
imul
aaa
mov
or
cld
pop
mov
insl
sbb
mov
cmc
repnz
fadds
jo
push
jge
iret
subl
popa
jecxz
ret
pop
pop
addr16
stos
outsl
push
jge
fldenv
into
loope
dec
inc
sbb
xchg
xchg
lea
fwait
rorb
inc
js
popa
outsl
inc
push
add
push
mov
xor
das
not
mov
in
push
inc
lahf
out
push
loopne
pop
daa
pusha
fdivl
or
mov
pcmpeqd
push
ja
pop
shll
test
xchg
cmpsl
jne
fdivs
popa
daa
jnp
cmp
jns
push
leave
jb
pop
jl
push
outsb
gs
out
adc
insl
push
cmc
rcl
xor
sbb
jne
nop
js
jge
push
adc
aaa
fiadds
add
pop
push
mov
repz
mov
lcall
in
repnz
inc
add
faddl
push
mov
jp
and
outsb
dec
shl
std
lock
movsb
shll
inc
outsb
or
outsl
fistpl
sbb
xor
xlat
xor
push
cmc
jp
cmp
jo
fwait
xorb
push
sti
test
iret
cmp
inc
jno
test
lcall
ret
std
pop
loope
cmp
mov
dec
pushw
jge
sbb
js
sub
mov
cmc
add
aam
test
loope
xchg
inc
inc
dec
popf
inc
in
inc
lock
ffree
jne
sub
sbb
ret
xor
xchg
stos
jmp
sub
pop
adc
dec
jne
or
mov
push
jb
inc
push
test
cli
xchg
mov
or
adcb
pop
outsb
ret
push
mov
push
sbb
or
dec
adc
push
call
je
cs
addl
popf
push
ret
cmc
adc
shll
inc
sub
popa
dec
adc
fwait
adc
sahf
insl
push
enter
add
xchg
adc
das
or
pop
adc
jge
lds
and
inc
and
jne
mov
aad
fs
lret
jb
leave
inc
aad
dec
out
mov
shrl
add
dec
arpl
jge
push
insl
insl
pop
sbbl
push
mov
jnp
inc
mov
xchg
inc
out
xor
enter
xchg
xlat
or
test
cld
jmp
adc
or
jmp
sar
adc
jae
mov
cltd
mov
mov
add
hlt
imul
test
test
pop
mov
fisttpll
pusha
mov
dec
xor
enter
cmc
cmpsb
inc
sti
jp
sbbl
shlb
dec
fwait
aas
daa
adc
and
jmp
sub
call
mov
stc
mov
push
into
aad
fidivl
std
mov
pop
and
test
add
jnp
mov
dec
jmp
repnz
add
es
std
cmpsb
mov
adc
cmpl
xor
inc
sbbl
pop
add
fcoml
inc
fdivrp
cmc
loop
icebp
shlb
jge
add
je
push
dec
mov
movsb
dec
xchg
jmp
mov
ret
xor
jbe
add
cs
add
out
inc
dec
hlt
loope
inc
cmp
sbb
mov
mov
fwait
ljmp
push
hlt
push
ror
sbb
shl
in
ss
ds
xor
mov
test
dec
movsb
es
mov
or
jecxz
outsb
cltd
jbe
dec
lods
add
add
inc
mov
inc
xchg
or
and
filds
or
mov
mov
inc
ljmp
sbb
ljmp
cwtl
ficoms
nop
cs
jge
or
sub
and
xor
rorl
jmp
pop
subb
test
test
pop
stos
std
cmp
jle
enter
cmp
outsb
inc
lret
adc
xchg
pop
adc
in
pop
out
nop
mov
xor
cmp
lcall
inc
sub
adc
sub
jo
and
flds
jbe
cmpsb
outsl
adc
test
adc
mov
cmp
push
pop
push
dec
jne
jnp
add
and
popa
cmpsl
jle
sbb
cmpsl
dec
aaa
popa
xorb
leave
mov
sub
pusha
loope
jns
push
jnp
mov
negb
js
xlat
lock
gs
fisubs
insl
jne
cli
pop
mov
leave
jns
cmc
or
popa
ja
std
or
push
ret
sarl
xchg
pop
sub
push
cmp
push
lds
insl
jno
xor
mov
xchg
adc
arpl
xchg
xor
cmc
push
mov
imul
in
test
mov
daa
push
das
roll
aad
btc
cwtl
inc
sbb
cmp
lds
jae
enter
jge
mov
mov
add
sbb
imul
pop
insl
stos
lret
ljmp
push
mov
jp
pop
jno
push
add
mov
int
mov
push
pop
loopne
leave
jo
movsw
pusha
std
or
enter
pop
pop
cmp
shlb
imul
jne
jns
movb
jp
sbb
pushf
or
jecxz
pop
inc
popa
push
ret
push
outsb
in
xor
cmc
pop
shl
addb
push
mov
es
andl
pusha
out
xor
cmp
cmpsl
jg
jne
shll
outsb
imul
or
sbb
mov
sar
movb
mov
stc
loop
sbb
xor
and
aad
mov
inc
mov
sar
leave
sbb
push
mov
cmpsl
pop
jno
std
jg
jns
ret
gs
cmc
ret
mov
jnp
sbb
xchg
pop
push
push
lock
adc
sub
jae
or
dec
mov
shrb
sbbl
add
bswap
stos
cmc
fisubl
lret
pop
jmp
and
iret
cmc
out
sbb
xor
outsb
dec
cmp
or
and
and
mov
rolb
pusha
add
mov
or
es
adc
mov
xchg
sub
push
pop
dec
imul
mov
mov
out
rcr
repz
and
and
clc
mov
mov
lds
cmp
pop
push
sbb
sub
inc
jb
jae
pop
cmp
clc
lods
mov
jmp
jecxz
lods
out
cmp
jge
cmp
add
repnz
pop
ja
shll
dec
std
pop
stc
xor
inc
stos
add
mov
mov
and
push
sti
lods
push
jno
mov
pusha
mov
cmp
aas
push
pop
dec
data16
sub
jl
or
daa
mov
jne
loopne
jmp
aad
push
mov
movsl
daa
mov
and
andl
mov
je
dec
jno
imul
cmp
gs
add
mov
dec
jle
ss
or
rolb
lret
cwtl
mov
js
sarl
sub
lret
movsb
loope
cmc
inc
adc
mov
jne
add
inc
or
and
fs
inc
mov
inc
pop
lea
fsubrs
arpl
inc
sahf
pusha
fwait
rcll
icebp
cwtl
xchg
cwtl
lods
test
xchg
mov
testb
push
mov
push
xchg
push
push
mov
pop
lds
mov
cmp
dec
enter
or
push
addr16
xor
fs
decb
jne
hlt
rcrl
lock
cmpl
fnstsw
mov
sbb
pop
pop
mov
arpl
and
cmpsb
mov
ss
push
clc
sub
cmc
mov
out
mov
push
cmpsb
push
fwait
test
test
inc
decl
sub
sub
jg
and
scas
inc
leave
bound
lds
cs
je
inc
adc
mov
inc
outsl
add
add
andb
imul
stos
sti
jnp
ret
cmc
insb
pusha
sti
pop
imul
gs
jle
movsl
call
or
pop
pop
test
arpl
shl
sub
subl
clc
jecxz
cmp
jno
push
mov
jge
insl
shll
push
sub
cld
or
xchg
xor
packsswb
cmc
aam
mov
nop
mov
test
xor
rcr
cmc
jo
ret
jne
lcall
lret
dec
push
scas
jns
add
lods
push
sbb
repz
imul
jmp
mov
daa
adc
int3
jo
aad
xchg
xchg
rcrl
jo
icebp
std
aas
ret
mov
sub
jmp
adc
std
dec
icebp
leave
jg
mov
fwait
xchg
xor
push
mov
stc
xlat
in
rcrb
lods
std
dec
out
mov
push
and
outsl
xlat
dec
jmp
lea
dec
in
jne
icebp
add
dec
mov
mov
stos
xchg
inc
dec
cmc
mov
xchg
ljmp
aaa
jmp
jp
ss
cmc
cmpsl
sub
enter
orl
jle
movswl
mov
pop
jns
xchg
jb
bound
push
lret
mov
push
fsubrs
xchg
push
sub
or
es
add
mov
jo
jp
std
push
xchg
xchg
orb
jns
jb
sarl
ret
test
enter
mov
push
arpl
imul
inc
jge
mov
mov
je
xor
pop
das
push
outsl
pop
jne
mov
or
sbbb
insb
jmp
mov
fmul
sahf
jbe
jno
pop
mulb
sbb
mov
loopne
xchg
xorl
pusha
lea
xor
mov
shlb
add
popa
mov
push
jne
push
push
jge
inc
pop
jle
xor
sahf
test
fsts
sbb
jae
int3
cmc
and
pop
push
into
push
outsb
test
jne
shlb
fidivrl
sub
xor
jp
fucomp
std
cmc
gs
sub
inc
xor
or
xlat
jae
loopne
popa
gs
ds
daa
xchg
push
lds
loope
inc
andl
jne
or
xor
aaa
adc
jmp
dec
in
sbb
rorb
ret
enter
jo
dec
out
lret
insb
jp
popa
lds
popa
bound
test
add
pop
in
test
sti
dec
xorb
xchg
clc
dec
jne
mov
leave
ret
cmc
rorb
xchg
sub
jne
push
sbb
sbb
stos
sti
fsubl
arpl
and
in
pop
orl
sbb
ret
pop
pop
inc
stos
dec
scas
inc
ret
sbb
xor
cs
loope
sbb
xchg
xor
daa
call
pop
loopne
and
outsb
data16
push
loope
sbb
and
sahf
or
sub
or
js
lds
cmc
scas
pop
mov
xlat
cmc
pop
xchg
negl
loopne
in
jge
mov
test
push
aas
ljmp
mov
cmp
jae
scas
jmp
mov
gs
jge
mov
call
inc
add
dec
push
jg
mov
je
in
rol
and
rol
adc
in
push
loop
cmpsb
jp
push
sbb
imul
out
pop
nop
cmc
ds
jl
push
push
in
or
xchg
das
dec
jne
mov
xor
lret
sub
xor
arpl
mov
jle
aas
daa
cwtl
sbb
or
jbe
pop
mov
sub
shrb
inc
pop
or
jecxz
or
rorb
sahf
jge
cmp
lods
fistpll
aaa
mov
sti
and
push
ret
cltd
inc
insb
sbb
dec
sbb
jne
xor
out
pop
mov
mov
lds
inc
and
mov
mov
jne
sarl
sbb
or
je
lcall
pop
shlb
sub
iret
icebp
inc
xlat
pop
jo
jle
movsl
pop
outsl
ja
pop
mov
jmp
cltd
cmc
das
mov
and
xchg
dec
imul
adc
data16
fnstenv
mov
jle
dec
gs
out
leave
pop
push
repnz
xchg
hlt
jbe
mov
cld
push
fcomps
xchg
int
inc
inc
andb
push
outsb
inc
das
pop
fnstenv
jge
inc
and
pop
fs
loope
inc
je
push
jmp
inc
cmc
inc
or
adc
mov
inc
xor
test
push
cmc
xlat
jb
fsubr
jno
loopne
xchg
push
pop
mov
jo
dec
stos
es
sahf
mov
int
push
test
loope
sti
bound
in
cmc
sub
sub
in
js
fwait
mov
in
jge
outsb
jl
xor
xor
mov
rolb
inc
pop
inc
xor
sbb
pop
sub
push
jno
cli
movsb
pusha
test
into
out
mov
stc
mov
addb
cmc
clc
mov
idivl
in
test
xor
pop
lods
out
rorl
pop
lods
mov
shrb
jae
clc
ljmp
cmc
out
lret
fcmovnb
roll
cmpsb
pop
dec
push
rol
mov
inc
pop
int3
aaa
dec
sbb
into
test
in
dec
xchg
leave
inc
xor
cwtl
xor
inc
movsl
xchg
xlat
sub
pop
mov
inc
cmp
in
arpl
clc
mov
cmp
jne
popa
or
mov
xor
enter
cmpl
dec
rclb
gs
and
lods
mov
xchg
repnz
mull
xor
mov
jge
cmc
leave
repnz
aad
js
out
stc
push
xchg
stc
jl
cmpsl
shll
lret
popa
and
inc
popa
test
xor
repnz
aad
adcl
push
dec
xor
bound
movsb
shlb
cmp
pop
enter
cmp
lds
pop
or
cs
mov
aas
aam
dec
sbb
pop
jne
jns
cmc
and
test
out
inc
push
mov
jecxz
mov
xor
aas
subb
sub
ret
fwait
inc
gs
push
sarl
cmpsl
xchg
mov
loop
xchg
push
xchg
fisubrl
sub
inc
jge
daa
cmc
movsb
sti
hlt
inc
gs
movsb
jne
xor
jo
inc
cmc
stc
add
mov
imul
xor
mov
es
mov
jno
std
stos
mov
xor
stc
push
add
adc
pop
cli
mov
jo
movsb
jnp
add
insl
movb
xor
test
fs
or
iret
rcll
sub
jg
xor
jle
andb
inc
mov
test
and
dec
sahf
fdivp
jge
push
xorl
cs
jb
push
or
xchg
dec
hlt
dec
jne
cmpsl
pop
cmp
les
mov
fsubrl
pop
cli
mov
xchg
cli
jo
jmp
xlat
jg
ja
cs
outsl
mov
pop
xor
xor
mov
rorl
xor
pop
daa
push
dec
leave
out
jo
rcll
andb
push
and
nop
push
sub
fidivs
cs
mov
dec
js
dec
xor
not
jmp
adc
xor
les
jecxz
or
ja
inc
cmp
jmp
pop
test
cmc
dec
jge
adc
pop
add
scas
scas
fisubrs
dec
stos
push
or
cwtl
loopne
filds
add
mov
es
lahf
mov
inc
into
mov
cmp
ljmp
stc
in
jp
daa
addl
and
or
leave
jne
subb
inc
xor
test
sub
push
jns
dec
lea
ud0
push
shl
movsl
dec
test
inc
shl
xor
xor
xchg
and
mov
aaa
and
int3
into
push
mov
imul
xor
pusha
rolb
lea
mov
hlt
leave
jns
shlb
movsb
imul
daa
arpl
inc
xchg
pop
movsl
xlat
xor
mov
stos
dec
jo
ror
jg
pop
fisubrl
jg
scas
jp
movsb
jne
sub
jbe
xor
aam
stos
cmp
in
rolb
dec
incl
aam
std
jne
mov
xchg
xor
add
inc
push
xor
stc
jo
sti
add
add
xor
xchg
fistpl
xchg
fimull
push
push
movsl
in
pop
add
repnz
movb
subl
test
inc
lahf
jg
or
cli
dec
dec
loope
ja
push
sub
mul
jl
call
mov
pop
scas
les
mov
and
lcall
test
stc
sub
add
stos
fwait
iret
cmc
jp
call
sbb
xor
cmp
push
adc
data16
cmc
jle
in
stc
notb
aaa
sbb
and
sbb
aad
sub
cmc
xlat
arpl
fucomi
add
ret
gs
int3
jne
daa
jmp
jo
fimuls
lock
clc
lahf
push
enter
rclb
lods
insb
shrb
lret
cmc
cltd
push
pop
cmp
imul
lods
xchg
jb
pop
call
std
or
pop
and
loope
jle
inc
data16
xchg
pop
cmc
js
rcll
inc
push
insl
or
or
stos
loop
sub
cmp
or
dec
faddl
aad
xchg
adc
and
xlat
jae
and
dec
lcall
add
push
cmp
jno
addr16
std
fstpt
call
jae
ds
gs
mov
mov
sub
lcall
add
bound
hlt
dec
std
lods
jge
sub
lds
add
adc
jmp
sub
sti
repnz
imul
imul
jmp
aad
xor
jge
gs
shll
pop
jmp
jg
mov
inc
dec
pushl
imul
int
test
xor
and
or
adcl
jmp
and
idivl
mov
push
mov
jno
jne
lret
popa
arpl
gs
jae
xor
or
movsb
ds
mov
jl
add
xor
lods
mov
xor
xchg
pop
sub
lahf
pop
icebp
rcll
mov
jae
add
sub
jno
data16
fwait
adc
xchg
inc
stos
leave
push
inc
mov
push
addr16
pop
push
inc
stos
pop
jo
stos
jb
cltd
and
mov
out
test
dec
lahf
loopne
jmp
mov
andl
cmc
popf
cmp
push
lds
popf
add
stos
sub
pop
cwtl
mov
xchg
dec
jbe
arpl
imul
in
push
push
xchg
repz
enter
xchg
jg
je
or
sahf
sub
rcrb
sbb
mov
cmp
xchg
inc
es
lcall
add
dec
call
xor
pop
mov
in
clc
push
std
out
inc
vdivpd
xor
mov
test
jae
in
dec
xchg
jmp
stos
scas
pusha
xchg
dec
sbb
jg
rorl
fstps
adc
jge
and
arpl
mov
jnp
fstps
lret
jno
shll
in
pop
add
mov
cmpsl
mov
cmpb
mov
lea
cmc
inc
js
jnp
xor
mov
and
inc
mov
sti
aas
movsl
and
jnp
mov
xor
and
fwait
push
test
popa
scas
cli
loope
inc
mov
call
inc
mov
movl
mov
sbb
add
out
push
dec
cmc
pop
in
jne
lods
add
jp
loop
pop
ret
adc
aad
mov
sbb
popa
repnz
lahf
add
jns
stc
and
inc
out
ds
rorb
dec
xchg
mov
in
jg
stos
add
pop
imul
mov
and
rorl
push
sub
daa
ret
jne
ljmp
push
jle
push
jg
cmp
stos
andl
ja
push
inc
subb
jp
pushf
pop
les
movsb
jp
add
push
imul
pop
in
add
push
dec
and
fld
loopne
pop
in
aam
jp
daa
adc
adc
aas
shll
mov
xor
mov
cltd
sbb
lds
sahf
mov
inc
aad
xor
ss
in
lea
lods
jge
cmp
pop
int
dec
sub
inc
add
dec
call
ret
repz
sub
add
jbe
ss
add
aad
lods
and
adc
outsl
push
dec
out
pushf
xchg
sub
popl
inc
dec
jecxz
mov
scas
sub
mov
repz
faddl
dec
pop
push
ret
loopne
jne
dec
in
sbb
lods
ret
std
int3
jg
dec
out
outsb
imul
popa
leave
cmp
cmp
xchg
test
mov
aam
cli
loopne
mov
imul
pop
outsb
and
jmp
rcrb
fcmovne
imul
je
loopne
pop
mov
jmp
mov
push
cld
add
rorl
push
push
outsl
ficomps
popa
insl
int3
les
pop
in
ljmp
push
out
and
xchg
sahf
xlat
add
enter
jns
stc
subl
adc
enter
mov
stos
xor
adc
xor
int
jmp
cmp
or
icebp
mov
stos
rol
dec
jp
cmp
insl
dec
sub
jbe
lret
addr16
xor
sub
aam
mov
int
and
ljmp
or
pop
and
xor
pop
jecxz
mov
dec
jne
movsb
jno
out
cmc
ds
sbb
and
leave
pop
fsubs
or
mov
loop
jge
or
add
out
push
push
sti
jmp
inc
mov
add
dec
mov
scas
stos
cmp
fisubs
xchg
xor
sub
shrl
cmp
mov
push
dec
imul
jecxz
mov
shlb
sbb
sbb
rcl
call
jbe
loop
inc
fst
stos
outsb
leave
aas
js
inc
sti
fsubs
sbb
lea
inc
shld
adc
dec
pop
jae
inc
je
ja
push
xorb
and
cli
xchg
lret
add
icebp
jl
arpl
imul
cmpsl
movq
popa
and
aam
out
es
aaa
std
fimull
mov
scas
xchg
sub
dec
push
mov
push
xchg
xor
dec
push
mov
test
iret
rcl
jle
test
sbb
rcl
arpl
stc
and
add
jbe
pop
jecxz
fldcw
mov
into
jmp
cmp
and
dec
push
lods
dec
add
loopne
sub
sub
pop
and
subl
cmp
inc
xorb
testb
pop
rorb
clc
jecxz
xor
adc
jmp
mov
mov
in
dec
ret
mov
addr16
imul
lds
cli
dec
lock
pop
sbb
enter
stos
lods
cli
xchg
repnz
xchg
enter
loope
xor
xor
mov
cmc
scas
mov
fwait
or
adc
mov
xor
xor
popf
fildll
shll
inc
out
les
mov
fimull
adc
fcoms
sarl
fimuls
mov
mulb
mov
orl
test
push
xchg
pop
jne
cmpsl
pop
jge
pop
fwait
xchg
jno
xor
mov
sbb
iret
in
jle
inc
icebp
xchg
mov
int
push
bound
stos
mov
cmp
cmp
push
cli
bound
fisubl
fidivs
mov
ja
mov
test
jle
xor
xor
mov
rcrl
clflush
lods
movsl
push
xchg
dec
push
pop
inc
dec
cmc
xchg
ljmp
and
in
mov
shl
rcrl
and
jp
push
push
sbb
push
lahf
sti
push
and
cmc
popf
lret
jge
int3
dec
add
or
icebp
jno
xor
in
inc
repnz
pop
adc
movsl
dec
sub
sbb
repz
pop
fists
jne
cmp
loope
lea
push
sub
and
ja
shll
add
xorl
jne
mov
aam
or
repnz
xor
test
test
mov
loop
lcall
xchg
push
sbb
pusha
or
jb
nop
icebp
dec
mov
inc
or
jle
es
xchg
outsl
pmuludq
inc
es
mov
popa
and
cmc
mov
and
bound
jp
repnz
movsb
lock
ljmp
jne
add
aas
inc
sbb
lock
and
lds
mov
sub
out
cmpsb
adc
xor
ret
daa
gs
push
add
and
add
fcmovu
int
jle
mov
dec
mov
cmp
mov
sub
add
mov
popf
ss
ja
lcall
jle
ds
fimuls
aam
int3
rorl
sti
jne
or
adc
add
inc
or
lods
mov
pushf
outsl
incb
call
jp
int
xchg
inc
xorl
add
jbe
or
jmp
cmpsl
xchg
add
shl
xor
jo
in
adc
icebp
sub
push
shlb
xchg
pusha
xor
mov
rcr
repz
dec
mov
sub
push
jecxz
nop
inc
dec
int
xchg
push
shll
push
sbbb
in
scas
push
testl
nop
adc
jo
xor
js
dec
call
jecxz
ja
sar
jge
repnz
lods
jb
inc
push
mov
xchg
dec
arpl
xchg
cld
adc
mov
outsl
dec
arpl
pop
adc
arpl
add
mov
jge
fnstcw
jl
fimull
xor
lods
or
xchg
je
js
dec
loope
inc
test
inc
mov
pop
lods
je
shrl
lods
jo
shrl
push
and
ss
js
popa
jo
repz
or
lret
clc
push
or
push
push
popf
test
or
adcl
or
cmpsb
push
pop
cs
jbe
push
adc
outsb
out
dec
repnz
cmc
shrb
lahf
xor
test
xor
or
imul
add
jb
scas
test
push
inc
dec
xor
adc
pop
imull
cmpsb
scas
mov
aad
rcll
xor
xor
mov
mov
sti
pop
mov
or
loopne
pop
cmp
gs
lcall
bound
jns
decb
push
lret
stc
cmc
test
enter
sbb
pop
shl
mov
mov
jne
lahf
pushf
dec
cmpl
xor
in
jecxz
push
pop
fistl
xlat
je
in
lea
dec
jne
shll
inc
out
rolb
and
and
repz
stc
and
xchg
cwtl
pop
aas
cmc
cmpsb
repz
push
gs
and
jnp
xchg
xor
cmpsb
dec
mov
and
mov
jl
push
aad
pushf
dec
loope
stc
fsts
sahf
imul
jo
push
stc
ret
sti
mov
jge
movsl
out
xor
inc
pop
ret
das
stos
dec
pusha
jl
outsb
data16
xorl
and
shrd
rcll
in
inc
dec
test
push
inc
call
aaa
imul
cli
rol
sub
or
or
je
cmc
mov
popa
inc
xor
add
add
pop
fucomp
inc
cmp
pop
insb
outsl
xchg
pop
mov
nop
stos
push
sub
stc
adcl
jge
movb
jmp
and
jne
lock
js
shll
mov
mov
inc
insb
inc
nop
lret
dec
xor
inc
lock
or
inc
fmulp
xchg
sub
test
mov
stos
jns
adc
mov
negb
jmp
cwtl
adc
lods
pusha
and
mov
ficompl
xchg
das
in
cmp
scas
lret
add
cmp
inc
cmp
jp
sub
jle
xlat
sub
roll
xchg
fimuls
sahf
aaa
and
sub
mov
add
mov
gs
sub
xchg
add
mov
cmc
lds
imul
call
xchg
mov
andl
mov
xor
daa
mov
shlb
mov
data16
inc
dec
push
and
popf
notb
lret
call
stc
add
std
shrl
push
jle
cmc
pop
in
stos
push
mov
loopne
inc
testb
xor
icebp
jne
imul
and
push
test
ja
repz
sub
std
or
xchg
push
dec
jg
sti
xchg
in
out
aad
xchg
rolb
pop
mov
xchg
push
cmpsl
push
xor
cld
inc
loop
inc
loop
push
adc
xor
xor
or
lds
lds
int
flds
insl
jno
jge
cli
imul
push
les
jne
inc
mov
outsl
xor
dec
cmc
stos
jne
push
loopne
xor
mov
in
nop
pop
mov
jl
mov
pop
insl
std
enter
stos
daa
mov
adc
and
and
sub
lock
push
and
mov
push
or
fsubs
icebp
sub
inc
push
pop
dec
ret
pop
mov
in
xor
adc
push
pop
jge
push
lods
inc
in
dec
iret
popa
js
adc
shrb
outsb
std
xchg
jns
push
addb
dec
insl
pop
xor
pop
test
mov
push
mov
cmp
mov
jae
mov
stos
sub
ljmp
sub
jne
cmpsl
mull
pop
out
fwait
sahf
xchg
mov
cmpsl
push
cmp
sub
lds
mov
sub
pusha
cmpsb
inc
ja
jecxz
test
xor
rorb
cmp
and
jge
pop
jne
icebp
push
imul
adc
bound
inc
or
add
pop
stc
adc
psubsw
sbb
xor
int
jecxz
rol
jl
sub
mov
xchg
jnp
sub
adc
mov
pop
sbb
push
jbe
and
adc
pushw
lahf
fxch
and
call
arpl
dec
mov
xchg
xlat
sbb
fwait
sub
add
xor
xchg
cmpsb
mov
fchs
andl
cmp
mov
sub
mov
popf
xchg
in
xor
jb
shll
mov
enter
and
push
pop
xor
popa
mov
sbb
pop
rcll
inc
xchg
or
mov
push
xlat
push
bound
mov
in
xor
push
and
xlat
std
dec
fcoml
mov
loopne
fs
fs
not
fs
cs
xor
xchg
mov
clc
into
lea
rcrl
nop
aaa
lret
sarl
ss
movsb
addr16
insl
repnz
jne
xor
std
cmc
pop
jmp
popa
popa
xor
test
xor
punpckhbw
and
cmp
push
dec
mov
inc
sbb
and
scas
ss
dec
jne
ja
sti
add
mov
or
and
pusha
movsl
gs
int
xchg
xchg
cmp
mov
ja
cmc
push
xchg
stc
in
adc
mov
jg
and
cmp
jne
lcall
xchg
call
sbb
mov
ja
inc
pop
shlb
adc
xor
scas
dec
flds
cmpsb
popf
gs
push
pop
out
js
lods
dec
add
nop
lds
call
mov
inc
xor
and
inc
pop
xor
sub
fwait
push
cmc
xor
adc
ljmp
pop
sbb
jge
add
adc
das
lcall
out
enter
les
jp
call
out
shl
jbe
lock
out
jo
or
shlb
and
pop
ficomps
aaa
stc
lds
std
gs
jo
jmp
jnp
xor
cwtl
sub
icebp
dec
cmc
in
scas
mov
and
add
adc
sbb
stc
mov
inc
jne
jge
dec
xorl
gs
js
lds
jg
mov
push
rcl
loopne
movsb
cmp
xor
xor
ljmp
dec
cmp
sbb
wrmsr
dec
push
iret
imul
dec
imul
aaa
gs
leave
mov
cwtl
dec
cmpsb
repz
dec
mov
in
sbb
jge
adc
rcrl
mov
dec
out
in
lahf
aas
adcw
jbe
je,pt
adc
push
ja
cmp
shll
shll
sub
add
rorb
cld
xchg
sbbl
sbb
sar
jae
scas
shlb
sub
jns
aaa
push
push
lds
and
sbb
mov
ss
subl
imul
fidivrs
jp
movsb
sbb
dec
jbe
push
xor
add
in
lret
jle
sub
inc
xor
dec
and
xorb
popf
dec
sub
std
cli
arpl
js
push
xchg
mov
xor
dec
xorl
into
jbe
int3
inc
pop
push
insl
fstl
push
jmp
shll
pop
mov
nop
jne
xchg
mov
inc
popa
fs
ret
cwtl
gs
jp
adc
movsb
fwait
jne
sub
cld
fnstcw
leave
ljmp
adc
in
or
add
lock
push
inc
dec
mov
aaa
test
pop
sub
insl
inc
xchg
pop
cmp
push
les
cs
cmp
jnp
cmc
data16
cmp
push
cmp
pusha
dec
inc
ret
repnz
jg
push
movsb
std
push
xchg
push
mov
cld
xlat
lods
sbb
ljmp
sub
sbb
pop
sbbl
jo
xor
roll
insl
imul
xor
mov
lock
sbb
cmc
pop
ja
enter
lahf
test
pop
dec
pop
add
mov
cmp
movsb
cs
xchg
test
cmpsb
mov
cwtl
sub
xor
je
ljmp
adc
adc
adc
add
scas
sbb
test
jbe
aad
les
clc
adc
out
and
outsb
inc
sbb
jbe
xor
les
into
jns
push
ss
dec
out
adc
sub
js
fs
jle
leave
scas
mov
and
sub
or
stc
inc
fdivrl
sub
sbb
outsb
cltd
pop
dec
add
push
cmpsb
nop
inc
and
push
lahf
push
sarl
mov
enter
leave
clc
rolb
pusha
test
inc
test
vhsubps
idivb
inc
xor
repz
andb
mov
lods
mov
jne
and
enter
dec
std
mov
mov
jb
push
imul
pop
jb
xchg
jae
cltd
or
cli
adc
mov
xor
or
cmc
mov
outsl
cmp
sub
clc
test
push
mov
mov
xlat
xlat
rcll
inc
movb
cs
fwait
stc
arpl
ss
pop
popa
std
std
stos
cmp
ds
and
cmc
dec
scas
pop
pop
daa
test
dec
imul
cmp
dec
mov
pop
mov
pop
or
clc
xchg
add
outsl
scas
adc
out
inc
jmp
mov
sti
inc
inc
xor
leave
cmp
push
scas
lea
or
adc
ljmp
in
cwtl
test
pop
mov
inc
sub
mov
pop
mov
dec
jo
push
sbbl
xor
in
cmpsb
aam
pop
ljmp
in
std
push
xchg
fstpl
jae
mov
push
dec
ss
jmp
add
lea
lret
pop
push
loope
xor
cwtl
jg
or
lea
in
xchg
xor
aaa
jb
push
dec
mov
imul
pop
icebp
jl
jl
inc
xor
xorb
popf
push
cmc
inc
mov
imul
arpl
dec
out
sbb
push
xorl
sub
fsts
pushl
jnp
adc
inc
sub
nop
inc
in
les
ja
push
icebp
ret
ljmp
loop
pusha
jns
sub
dec
aas
inc
std
movsb
jne
jge
pavgw
pop
in
xor
pop
ret
jle
enter
add
dec
pop
inc
and
cmp
push
jbe
mov
pop
repz
push
clc
insb
and
rcll
rolb
jo
ja
jg
push
cld
mov
inc
cmp
loop
cwtl
mulb
push
jle
push
inc
test
xchg
xor
xchg
jno
cmc
ljmp
ficoml
cwtl
sub
jo
insb
movsl
test
inc
jne
insl
daa
dec
movb
xor
and
or
sub
jp
inc
inc
cltd
jbe
and
popf
fwait
or
mov
sub
fldt
cmc
jmp
xor
sub
mov
inc
push
mov
cmpsl
inc
add
ffree
out
daa
sub
xchg
fiadds
fldcw
push
cmp
imull
cmp
xchg
test
inc
xorb
xchg
cs
mov
sti
xchg
push
das
cwtl
adc
or
add
xor
or
dec
inc
out
xrelease
loope
sub
mov
xchg
pop
shl
leave
cmc
aas
cltd
jns
add
sub
push
aas
pop
nop
sbb
sbb
sbb
mov
lods
bound
cmc
mov
cmpl
or
ja
orb
mov
add
xor
mov
mov
stc
inc
xchg
es
das
out
lea
mov
xor
adc
jbe
pop
mov
add
adc
adcl
mov
mov
divb
sbbl
push
lea
mov
daa
notl
in
aad
cmpsl
cli
loopne
addr16
sti
push
add
adc
mov
inc
std
lahf
jns
sti
lds
rcrl
mov
ds
and
inc
inc
stc
stos
or
pop
out
xlat
mov
jns
inc
gs
xor
pop
stc
das
test
imulb
xor
cs
loope
loopne
push
nop
out
cli
out
dec
push
sbb
call
loope
inc
lret
lahf
and
jge
add
movsl
add
mov
notl
lcall
imul
xchg
sbb
ret
push
enter
jns
adc
xchg
fcomi
jecxz
imul
mov
push
mov
add
and
or
in
jmp
loopne
cmp
std
addr16
fisubl
andl
push
test
sub
or
cltd
cltd
sti
xlat
xor
push
jo
dec
push
xchg
dec
dec
pop
cmp
lret
fs
and
sub
dec
gs
faddp
incl
adc
aad
cwtl
mov
push
sub
ds
push
jne
cmpsl
add
pushf
je
subl
sub
call
pop
xorl
xor
and
movsl
imul
fwait
aas
and
jbe
scas
js
fisubrs
cltd
jno
imul
jge
jecxz
pop
and
fs
shll
mov
dec
cmpsb
sbb
fs
inc
push
push
ret
ja
sub
dec
adc
lods
lds
les
add
movsb
cmpsb
dec
pop
pusha
pop
enter
bound
in
mov
xchg
xchg
insb
insb
mov
dec
sub
lea
and
mov
mov
pop
ss
jne
inc
jnp
xor
loope
icebp
faddl
sub
xor
push
insl
lret
jge
in
loopne
lea
cld
cmp
ja
loopne
cmp
cmp
push
stos
rorb
and
add
lds
sub
ss
les
lock
dec
arpl
loop
xchg
cmpsl
xchg
jmp
arpl
jb
cs
cmpsl
cmpsl
shrb
mov
jns
sub
lret
pop
stos
cmc
movsb
xor
push
ret
cwtl
call
lahf
iret
loopne
xchg
shll
jp
loop
enter
adc
popa
shrb
popa
mov
lea
sub
jae
out
outsl
or
cltd
test
mov
test
dec
inc
and
dec
aad
dec
std
clc
inc
add
lahf
push
push
push
adc
cmpl
bound
jecxz
pop
subb
fnstenv
shrl
inc
adc
push
cltd
and
sub
mov
lret
mov
adc
dec
scas
cmp
sti
inc
dec
ret
sub
inc
mov
dec
insb
mov
mov
dec
jnp
pop
mov
dec
xchg
push
cltd
inc
xchg
push
push
mov
push
xchg
addl
xor
jbe
adc
and
sub
xor
cmpsl
aas
and
fwait
add
cltd
addr16
mov
cmp
xchg
mov
lds
xor
xor
test
loop
push
shl
jne
inc
inc
cltd
mov
xor
inc
in
xchg
aaa
mov
and
ja
jns
popf
cmpl
lahf
dec
xor
dec
aad
push
xor
inc
xchg
popf
sub
sub
mov
jae
imul
mov
inc
xor
lret
lahf
and
xor
lods
inc
dec
lahf
add
inc
fcompl
jg
pop
inc
orl
lds
test
subl
dec
cmp
xchg
lds
jno
cmp
int
insl
xor
dec
inc
pop
sub
lret
gs
mov
push
jg
sub
jne
gs
pop
dec
xchg
sub
arpl
sub
inc
roll
mov
psrlw
popf
movb
push
sub
and
mov
push
and
subl
daa
dec
andl
cmp
mov
enter
dec
xor
pop
and
dec
pop
add
test
jge
dec
testl
mov
dec
jmp
ljmp
bound
mov
out
sub
mov
test
add
inc
cmc
lds
jne
jne
into
add
out
push
test
jle
mov
xor
xchg
sahf
popf
lock
in
jnp
hlt
dec
rorl
repnz
cmp
popf
cmc
xchg
mov
mov
ja
aad
out
dec
movsl
jmp
xorl
jge
es
add
cmpsl
cmp
cmc
push
int3
pop
sub
fadds
or
mov
mov
adc
cmc
sub
jne
pop
stc
xchg
pop
push
movsl
rcr
inc
push
xor
punpckldq
in
aaa
faddp
dec
out
sub
rclb
icebp
lret
push
lea
imul
dec
ret
inc
sub
or
sti
cmc
sahf
rorb
add
fdivrp
pop
push
push
lods
add
rcl
xchg
add
inc
xor
jne
jo
cltd
cmc
ljmp
inc
push
sub
xchg
divb
push
movb
loopne
imul
and
ljmp
mov
jnp
ficoml
push
adc
sub
out
mov
pusha
jge
daa
jno
sub
dec
stc
xchg
shl
cwtl
push
ret
jp
push
xor
aam
lret
inc
jbe
or
push
stc
in
mov
testl
fwait
inc
add
loop
xchg
test
jo
movsl
cmc
pop
mov
sub
inc
enter
test
and
fidivrs
sbbl
sahf
les
mulb
pop
aad
enter
cmpsb
jecxz
mov
dec
pop
andb
cld
or
xor
adc
dec
inc
fwait
out
scas
in
cwtl
std
scas
mov
ss
jne
pop
repnz
cs
jge
insl
pop
in
popa
arpl
jno
rcr
add
movsb
and
xor
sbb
xor
ficoml
jg
jp
adc
pop
pusha
pusha
jle
les
inc
push
into
stos
xchg
dec
add
mov
les
sti
xor
shll
cltd
lret
loope
imul
in
and
faddl
sti
dec
push
lock
adc
bsr
icebp
testl
jmp
lds
push
mov
mov
mov
shll
cmp
jp
ficomps
xor
jecxz
popf
in
jl
xchg
xor
ret
std
jg
xchg
inc
mov
dec
roll
lds
jne
sarb
in
inc
or
xchg
adc
pop
push
inc
push
fisttpl
int
call
inc
repnz
fldt
jmp
mov
sub
popf
int3
sbb
lea
cmc
jne
shll
scas
mov
mov
jne
sarl
sub
jp
mov
std
push
sub
stc
cmp
adc
icebp
shll
pop
sub
into
fsubrp
lods
mov
mov
mov
jne
dec
mov
pop
xor
out
mov
cmc
jns
cs
fiadds
sahf
scas
ss
jp
mov
push
cmc
movsb
dec
xchg
inc
fs
jnp
adcl
bound
sti
repz
mov
repnz
adc
in
stos
pop
rcll
xor
mov
int
leave
clc
cltd
mov
and
xor
inc
pushf
and
cmc
cmp
mov
rcll
out
xor
clc
nop
scas
jo
mov
add
dec
sub
dec
sbb
loope
inc
jne
movsl
cmp
xor
mov
hlt
test
cmc
aaa
mov
and
mov
mov
xor
sub
mov
or
mov
add
adc
jb
scas
inc
lea
leave
jne
jg
sub
aad
xchg
je
jle
sub
xor
subb
push
or
movsb
cld
imul
pop
pop
add
das
lods
inc
xor
xor
test
in
dec
pop
loopne
cltd
mov
or
jl
and
sbb
xor
mov
imul
and
ljmp
ja
add
jge
xchg
call
enter
cmp
inc
popl
outsb
mov
addr16
out
xchg
push
popa
movb
gs
mov
cwtl
push
in
push
jae
popa
lret
cmc
shll
fsubl
inc
or
jg
movsb
inc
push
out
push
scas
xor
insl
lds
bound
add
mov
dec
scas
xor
and
jmp
push
xchg
jo
lret
xor
call
push
ja
dec
and
and
adc
or
shll
cmp
sbb
jp
adc
inc
cmc
mov
or
pop
insl
push
inc
inc
sar
push
js
in
sub
jne
ljmp
sbb
dec
movsb
lock
or
mov
xor
add
xlat
call
xchg
xor
xchg
cld
test
xor
dec
jle
xchg
inc
pop
rcl
jne
sbb
int3
xlat
jne
jne
das
jg
or
xlat
xor
ljmp
fistpll
jge
xor
arpl
jnp
into
psubsw
xorb
cmpsb
shll
and
mov
jg
ret
movaps
push
mov
cmc
xor
popa
test
and
adc
add
cmc
jo
pop
ljmp
push
sbb
push
nop
aas
jp
stos
js
inc
push
andl
cmc
lods
cltd
popa
push
and
dec
xorl
arpl
add
into
add
mov
push
test
pop
sub
sbb
mov
ret
jno
or
xchg
dec
xor
outsl
not
add
jg
dec
dec
loope
icebp
xor
xchg
insb
add
adc
xor
sub
fsubrl
mov
push
pop
inc
add
dec
push
lcall
and
cmp
cmp
inc
push
dec
and
rol
pop
and
add
xchg
orb
int3
fidivrs
movsb
sub
push
adc
cmpl
es
pop
ljmp
sbb
sbb
fsubs
mov
scas
andb
pop
xchg
xchg
mov
jne
scas
into
popf
and
pop
mov
nop
adc
in
fmull
fnstcw
jbe
and
lods
loope
imul
sub
mov
rcrl
lret
mov
mov
dec
ret
imul
jne
movsb
test
icebp
xorl
and
lahf
pop
jge
sub
add
cs
push
aas
adc
rcll
mulb
movsl
call
cmp
xchg
xchg
fisttpl
testl
xor
out
mov
lcall
fwait
pop
adc
and
cmc
add
jmp
dec
fcmovnb
fidivs
loope
jge
xor
js
xor
and
xchg
lds
decl
fimuls
or
shrl
jge
mov
pop
jmp
xor
aad
push
clc
aad
enter
push
jmp
enter
inc
dec
cmc
repnz
add
outsl
add
loop
fucomp
repnz
jecxz
insl
xor
enter
hlt
fsts
mov
jb
ret
push
cmc
cmp
outsl
roll
xchg
push
rcl
out
inc
add
or
cld
pop
inc
pop
subl
aad
imul
mov
movsl
sbb
xor
inc
aad
xchg
mov
int3
jp
loopne
test
mov
fisubs
push
nop
incb
push
stos
arpl
ds
fldenv
cmpsb
je
dec
stos
ret
pop
inc
push
mov
inc
jno
jecxz
test
mov
rorb
sti
jle
ja
shlb
push
adc
pop
cmc
xor
dec
sbb
aas
lods
stos
push
call
call
ret
or
mov
add
jg
call
sub
int3
jne
mov
jl
imul
push
sub
pop
imul
and
test
push
shlb
jge
add
test
shlb
sub
adc
adc
xor
js
and
mov
xor
pop
and
popa
out
cmpsl
arpl
jge
cmc
lds
test
cmp
lods
ljmp
test
xchg
gs
fildll
or
stos
cltd
jecxz
nop
pop
or
cmpsb
push
add
lcall
dec
dec
jo
adc
pop
mov
lret
insl
fld
xor
gs
jne
sbb
es
pop
dec
iret
sbb
mov
arpl
loope
fs
push
imul
xchg
pop
pop
insl
lret
jbe
and
mov
xor
mov
stos
push
adc
jg
daa
inc
pop
sub
adc
mov
cmc
sub
lea
mov
dec
enter
decl
test
push
mov
aad
lcall
rolb
in
js
orb
lods
test
daa
ret
lahf
xchg
movsb
js
shll
mov
fdivrl
mov
js
or
pop
jecxz
xchg
adc
mov
popa
jno
inc
jne
cs
rorl
cmp
jmp
stos
pop
in
adc
mov
push
push
add
adc
and
add
mov
add
mov
cmpsl
filds
add
sti
inc
pushf
lods
sub
jne
xchg
out
inc
jge
dec
inc
daa
adc
and
shrb
iret
sbb
or
insl
xor
jl
push
addr16
push
mov
adc
aam
imul
sbb
dec
dec
ret
je
es
inc
sbb
sub
jecxz
mov
shll
stos
xor
xchg
ja
das
and
arpl
cmp
movb
mov
push
dec
in
jno
xor
jbe
adc
popa
test
xorl
das
pop
call
or
gs
mov
cmc
sub
adc
inc
jne
aad
add
in
sarw
lea
mov
lods
gs
std
call
iret
imul
call
gs
insb
jne
jbe
popf
fbld
adcl
jns
cmp
jg
jb
cmc
ja
fwait
pushf
cmp
push
rol
cmc
xor
bound
enter
outsl
rcr
ja
xlat
call
inc
mov
cmp
shrl
jp
xchg
enter
ja
test
ljmp
sbb
imull
shl
jle
xor
gs
jg
adc
loope
push
je
shlb
push
jne
daa
or
inc
movsb
xchg
push
popa
inc
adc
int
add
pop
pop
jp
dec
scas
and
fimull
or
out
inc
cmp
xchg
imul
jae
or
repz
enter
sbb
pop
mov
or
push
mov
ds
cli
arpl
loope
ss
pop
mov
cmpsl
sti
imul
cld
lahf
sti
xchg
add
test
int
ss
mov
movsl
subl
roll
pop
pusha
sti
pop
xorl
mov
les
test
loopw
lahf
fwait
and
and
sub
out
mov
movsb
aam
cmp
repz
dec
test
ror
sti
sarl
in
jle
sbb
leave
cmpsl
mov
cmp
push
sbb
push
or
cmp
dec
js
ljmp
punpcklwd
test
std
jns
sub
test
out
adc
mov
stos
sbb
fwait
jbe
cmp
mov
les
sahf
scas
and
jle
mov
sub
xchg
cmp
mov
shll
jne
call
dec
fildll
mov
out
nop
lcall
push
outsl
loopne
mov
xor
nop
sbbl
add
shl
in
dec
fdiv
notl
sub
push
cmc
aaa
lret
cmp
fs
insb
stc
insl
dec
pop
inc
pop
dec
enter
lods
scas
lock
outsl
lods
sar
pop
cli
mov
add
fiaddl
test
and
push
inc
aad
mov
inc
ret
cld
dec
std
fildl
and
dec
xchg
pushf
addb
lods
or
and
and
xchg
xchg
xor
bound
and
mov
jne
xorl
cld
pop
cmp
pop
inc
daa
push
insl
orl
jecxz
loope
roll
mov
cmp
push
aaa
test
shll
inc
jbe
inc
pusha
rcrl
inc
mov
sub
add
dec
addb
xor
inc
in
push
mov
push
xchg
gs
xlat
jecxz
out
push
push
cmp
adcl
and
test
rcrl
mov
movsl
push
adc
out
push
imul
int
mov
popa
dec
movsl
insb
xchg
pop
xorl
and
adcl
daa
pop
and
xchg
pop
xorb
and
and
aas
pop
adc
xchg
xor
aas
mov
int3
dec
inc
and
sbbl
mov
push
and
mov
orl
mov
arpl
mov
xlat
repz
aas
mov
cmp
orl
out
lds
inc
xor
ja
mov
fsubs
inc
sbb
fwait
dec
mov
lea
movsl
aas
and
fwait
sub
and
movsl
push
rorl
orl
xchg
xlat
xchg
mov
popf
dec
xor
push
mov
sbb
outsl
shlb
xor
insl
dec
sub
xor
clc
mov
shll
jne
inc
lds
inc
cltd
xor
xchg
xchg
push
dec
inc
xorl
lds
pop
dec
push
sbbb
test
cmpsl
mov
lahf
in
test
sti
add
dec
cmc
mov
lahf
mov
movsb
mov
icebp
subl
add
mov
or
cli
jle
ja
loope
sbb
loopne
ror
rcll
jno
loope
into
add
mov
mov
sub
add
inc
ja
cltd
cmp
jp
ds
repz
addl
dec
aaa
mov
fidivrl
cmpsb
ja
dec
stc
jno
jbe
adcl
sub
mov
ds
es
dec
es
fnstcw
std
xlat
and
out
idiv
ds
scas
out
push
je
movsb
jb
xor
jbe
xor
fs
jl
aas
inc
add
push
xlat
xchg
les
sbb
lds
pop
mov
cmpsl
sub
mov
cwtl
lahf
test
inc
xchg
in
ja
popa
or
adc
jp
or
and
xchg
ret
push
inc
mov
imull
ljmp
lds
hlt
xchg
js
cmp
insb
lods
push
cwtl
dec
das
sbb
int
repz
jno
jle
jge
fldcw
inc
jmp
mov
dec
lds
sub
cli
jecxz
scas
push
xchg
adc
ret
xor
adc
jo
scas
push
push
fnstenv
jnp
sub
and
movsb
fiaddl
inc
pop
inc
xor
sub
fdivs
cmpsl
pop
addr16
adc
and
adc
jae
loop
in
jae
addb
xor
scas
lods
repnz
shlb
aad
pop
jne
repz
clc
jp
jecxz
mov
fcoms
js
in
xor
dec
ss
cli
mov
jle
sub
cmpsl
inc
xor
fdivrs
rcrl
inc
mov
repz
jmp
sub
xchg
in
or
mov
sbb
push
mov
roll
test
xor
lahf
jae
jns
mov
test
jne
inc
xor
mov
or
lods
repz
nop
mov
dec
js
jne
or
mov
cwtl
dec
or
enter
mov
xchg
fimuls
and
stos
or
daa
adc
out
dec
dec
cmc
dec
cmpsb
mov
mov
inc
sub
sarb
add
xchg
lahf
scas
xor
insl
lds
pusha
adc
jp
sub
stos
arpl
aam
sub
xor
and
scas
ja
or
mov
out
jecxz
jecxz
pop
mov
movsl
dec
lock
sbb
dec
inc
out
or
jmp
fisttps
scas
push
int3
lea
pop
addl
cmp
jecxz
jnp
int
jne
push
dec
sbb
dec
sub
xchg
in
add
add
xor
lock
xor
std
pop
mov
sub
xor
lahf
push
xchg
or
sbb
adc
es
push
push
pop
rcrb
mov
or
rclb
int3
pop
jno
pop
cltd
or
pop
loop
pop
sbb
jbe
mov
in
or
or
and
lods
push
ret
or
fwait
insb
test
es
push
jg
mov
stc
jp
popa
repz
ret
dec
in
xor
imul
pushw
icebp
mov
into
mov
sahf
pop
push
pop
jne
mov
les
movsb
or
pop
adc
fs
pop
adc
mov
hlt
gs
popf
dec
mov
les
add
aam
jmp
and
enter
cwtl
fstl
enter
inc
daa
repnz
es
leave
lock
mov
sti
add
adc
and
in
add
mov
lea
push
data16
cltd
sub
jecxz
add
push
and
jl
pop
ljmp
jne
mov
es
andl
std
sub
pop
mov
subl
push
popf
scas
push
adc
sbb
mov
popa
pop
test
push
popf
cmpsb
pop
jb
aas
scas
outsl
adc
ds
insl
leave
jne
orb
mov
mov
mov
loop
and
std
push
test
or
mov
jge
jae
mov
sbb
sub
clc
inc
filds
int3
stos
roll
gs
push
push
adc
mov
push
jge
gs
push
and
xchg
popa
mov
shrl
cmc
cli
pop
xchg
add
mov
rolb
sarl
test
test
in
insl
xor
loope
jmp
or
lahf
mov
jne
xor
jbe
jae
sub
rorb
into
mov
jp
lret
jge
dec
lahf
add
aas
sbb
bound
lock
xor
leave
mov
jle
mov
adc
nop
mov
sbb
mov
loopne
jp
shll
or
cwtl
jge
cwtl
shll
sub
cmc
fisttps
mov
pop
mov
push
push
arpl
fwait
inc
cmp
jg
or
dec
mov
fists
jmp
pop
mov
fwait
adc
sub
int
sarl
xchg
shrb
push
fstpt
push
mov
inc
lds
pusha
ljmp
pop
pop
and
insb
add
pop
loopne
jmp
push
lds
ret
add
inc
test
mov
sahf
enter
pop
scas
out
xor
in
ret
negb
dec
inc
push
mov
jle
dec
andb
pop
fld
sub
push
push
inc
dec
dec
insl
test
push
mov
push
push
js
addl
mov
test
dec
inc
cld
stc
dec
mov
add
scas
not
fwait
dec
push
pop
cmp
mov
lds
adc
cmp
mov
push
and
mov
inc
add
lods
flds
shlb
mov
xchg
and
pop
push
arpl
roll
mov
inc
jge
loopne
cmp
sub
leave
shrb
call
or
pusha
cwtl
lods
cwtl
xchg
ret
dec
sub
mov
dec
inc
adc
mov
mov
stos
mov
jmp
mov
aas
jnp
push
pop
lret
xor
cmp
inc
xchg
jno
inc
popa
jnp
add
cmpsb
mov
dec
jno
push
adc
mov
sti
fwait
sub
xchg
test
pushf
loope
fistl
popf
dec
pop
cmp
xchg
lret
pop
das
arpl
xor
jae
xchg
outsl
test
inc
dec
fwait
out
lds
dec
xor
dec
xchg
aam
push
inc
test
push
xorb
inc
dec
xchg
aam
iret
cmc
and
orl
and
mov
lds
xor
sub
je
rcll
xor
dec
inc
stos
or
and
popa
leave
jl
mov
and
and
push
xor
inc
xchg
adcl
leave
push
orl
dec
and
aam
push
orl
nop
inc
dec
inc
inc
arpl
test
mov
outsl
mov
and
xchg
pop
imul
sbb
movsl
mov
mov
orl
dec
dec
lds
sub
sub
movsl
inc
movsl
inc
test
xor
bound
xchg
push
sub
inc
and
and
inc
lods
pop
jl
xor
ja
jmp
xor
jp,pn
sub
js
mov
test
jmp
push
adc
lcall
fidivrl
es
jge
xorl
mov
adc
js
pop
pop
mov
push
les
mov
subb
fldcw
pop
js
inc
fisubl
mov
shl
jge
popa
jmp
xor
and
cmp
xchg
xor
shrb
std
into
xor
jp
shlb
jl
scas
jno
xor
test
dec
icebp
or
xchg
js
js
out
add
sarl
icebp
mov
stc
enter
les
imul
rcll
pop
jne
sub
xor
ljmp
pop
and
push
pop
xor
mov
rolb
mov
add
xchg
lahf
scas
lds
pop
enter
or
xchg
test
icebp
in
inc
stos
out
or
insb
repz
loopne
dec
ljmp
test
and
sbb
rclb
inc
xchg
sarl
jp
das
testb
jae
in
xor
hlt
insl
aad
lret
mov
cmp
push
push
inc
jge
cmpsl
xchg
sbb
mov
xchg
shll
test
test
adc
mov
insb
sti
sahf
sub
dec
pop
sahf
and
jg
or
cmc
out
cli
sbb
xlat
ds
adc
lods
test
lock
sbb
mov
mov
xchg
gs
dec
lahf
div
mov
xchg
loopne
push
jecxz
sub
incl
daa
ss
cmp
jg
jne
js,pt
pop
sub
test
xor
shlb
mov
cmc
rorb
mov
out
mov
jno
and
cli
arpl
mulb
and
add
subl
loop
xchg
mov
movsb
aaa
shrl
repz
mov
movb
lock
sti
sbb
rorl
incl
es
sub
int3
add
inc
xchg
loope
into
lahf
popa
imul
jle
mov
loopne
in
fwait
mov
mov
add
mov
stos
cmp
mov
cli
cwtl
andb
lea
push
ss
je
jnp
test
jmp
jle
in
orl
inc
subl
sub
popf
js
std
sti
inc
in
jecxz
loope
jne
inc
push
pop
popa
cmc
insb
js
inc
mov
pop
popf
xchg
xchg
cli
inc
loope
mov
jno
test
mov
mov
add
pop
shrl
pop
pop
add
pop
dec
mov
fs
bound
pusha
pop
aas
insb
inc
inc
test
loopne
xchg
insl
and
fdivl
sub
sub
or
pop
dec
lods
roll
jecxz
xchg
lds
push
imul
sbb
pop
inc
push
adc
mov
and
dec
jg
xor
jns
std
rcr
cmpl
je
mov
push
cmp
shl
mov
outsl
cmp
int3
sbb
adc
mov
loope
sub
repnz
inc
call
pop
and
fxch
jo
fs
inc
jne
popa
or
fldt
mov
add
ret
xor
cld
mov
mov
mov
cmpl
mov
add
insb
inc
and
jnp
ret
xorb
xor
imul
popl
and
cmc
sbb
mov
shll
jbe
xlat
push
xchg
xchg
in
outsb
inc
cmp
repz
xor
pop
loopne
movsl
scas
mulb
clc
xchg
loope
jo
dec
pop
shlb
fwait
stos
std
sbb
fstpl
aad
daa
adc
xor
cmp
gs
scas
sbb
jns
add
test
add
xor
fstl
outsl
xchg
mov
dec
push
loope
sbb
xchg
push
xchg
pop
loope
xor
ja
fstpt
add
jne
push
sbb
sub
and
ja
xlat
inc
mov
jbe
mov
popa
mov
push
or
outsb
cmp
outsl
cmp
int
shll
or
xchg
xlat
popa
or
loop
cli
mov
jne
shll
fisttps
dec
into
orb
or
add
jle,pt
xorb
and
gs
lret
sbb
ja
movsb
gs
shlb
xchg
out
xchg
sub
andl
leave
imul
jmp
stos
cmc
es
pop
jbe
xor
movsl
mov
cli
clc
push
lods
ljmp
incb
mov
lods
dec
sbb
mov
jns
cmp
test
lods
rol
out
sahf
das
mov
or
fisubl
pop
das
inc
out
push
inc
xor
cld
ja
ret
js
int3
scas
add
push
and
shll
outsb
xor
sti
into
pop
imul
icebp
mov
inc
sbb
jns
shlb
jge
push
pushf
jo
xor
mov
int3
subb
xor
roll
sbb
test
push
scas
and
pusha
dec
xor
add
lods
scas
add
push
cmp
sub
scas
cltd
stos
inc
sbb
inc
arpl
jnp
rcl
imul
xchg
add
fwait
inc
loop
push
add
pushf
scas
inc
inc
pop
cmpsl
jge
pop
out
arpl
xchg
pop
daa
stc
push
stc
adc
adc
inc
sbb
mov
dec
sub
rcrl
imul
fdivrs
cli
mov
adc
cmpsb
popf
sbb
mov
mov
out
jae
daa
jne
movsb
lcall
enter
cmpsb
xor
rcrl
sahf
mov
mov
les
ret
movb
fwait
pusha
adc
jp
xchg
aas
pop
enter
sbb
mov
addr16
push
outsl
int3
stc
dec
shlb
jo
adc
xchg
jmp
xchg
xchg
mov
push
outsb
push
lea
aas
incl
xchg
add
aad
lret
sbb
dec
jne
rorb
pushf
cmp
fildl
xor
add
nop
mov
mov
mov
dec
pop
arpl
movb
pop
ds
pop
add
stos
push
insl
and
xchg
loope
lock
xchg
mov
out
and
orl
adcb
outsb
xor
sub
add
xchg
adc
pop
andl
ficomps
std
cli
ljmp
gs
in
clc
xchg
dec
popa
pop
repz
insb
push
rcrb
xchg
int
and
push
enter
imul
out
lods
jne
cmc
xchg
pop
or
aas
shrb
jg
inc
sti
test
shll
push
ja
lods
jg
aam
repnz
scas
lods
popa
shll
test
or
ds
push
rcrl
andps
subl
lahf
sub
jge
ret
lods
outsb
and
clc
sarb
mov
mov
push
test
pop
xchg
popa
sub
xor
xor
jns
mov
cwtl
push
xchg
adc
sbb
pop
jns
dec
mov
in
pop
mov
popf
jns
sbb
pusha
mov
mov
inc
popa
lcall
out
aam
fisttpll
loope
xor
ss
jg
in
mov
jo
inc
push
jne
int3
fimuls
fwait
mov
fistl
fnsave
sti
jae
icebp
xchg
adc
xor
stc
test
dec
cmp
xchg
pusha
add
cmc
jno
mov
out
lods
test
aaa
lds
insb
cmp
sbb
inc
fsubs
jne
movups
or
popa
sbb
cwtl
xor
xlat
cld
dec
add
xchg
adc
jne
sets
mov
sahf
cwtl
or
mov
imul
push
and
lds
jge
push
mov
bound
mov
mov
push
repnz
fs
je
xor
daa
mov
inc
in
sub
pop
js
movsl
sbb
pop
jecxz
or
icebp
or
shr
int
sarl
int3
addl
in
cmp
dec
in
jne
popf
lock
pop
pop
jg
dec
lahf
repnz
push
clc
aad
pop
lea
and
dec
jle
scas
cltd
jecxz
sbbl
int3
mov
das
fs
adc
out
in
add
jno
rorb
cld
sub
test
add
shll
inc
and
fs
push
or
aas
stos
push
popf
mov
push
jbe
mov
hlt
in
cmp
sbbb
pushf
jo
pusha
cmp
enter
and
and
iret
enter
sub
int
mov
icebp
scas
inc
test
or
inc
adc
ja
adcb
inc
add
adc
xor
test
cmp
mov
or
hlt
jge
cmp
cld
stc
inc
jp
sbb
out
xor
cmpsb
stc
or
bound
mov
jp
es
push
cmpsl
jge
jae
cmp
pop
int
cmc
je
xchg
xchg
mov
pop
enter
jle
mov
and
outsl
daa
dec
add
add
cmp
xor
out
popf
xchg
push
or
loope
imul
arpl
jne
cmp
in
and
or
mov
insb
mov
mov
ret
xchg
mov
inc
xor
popf
push
jmp
inc
andl
jne
sub
movsb
lds
out
jb
lods
mov
repz
push
cmpb
mov
pop
and
and
test
dec
insb
inc
jne
mov
sbb
ljmp
insb
push
sahf
mov
xchg
insb
cmpsb
popf
ret
push
ret
js
test
mov
in
ret
stos
dec
cmpsb
insb
adc
push
jge
cmc
xor
add
jno
add
sub
movsb
sar
push
imul
or
popf
out
out
addr16
dec
xchg
lds
and
je
sub
ja
jmp
jp
cmp
push
xchg
lds
jbe
jns
std
mov
subl
dec
xchg
jle
add
ror
add
decl
ret
sbb
punpckhdq
add
std
and
mov
testl
cltd
xor
pop
jns
dec
sarb
add
nop
out
repz
sahf
push
test
rcl
das
jp
loope
inc
add
movsl
test
push
jecxz
insl
dec
sahf
hlt
jmp
out
and
int
cmp
das
ret
fsts
dec
lea
push
xchg
subl
pop
xor
adc
out
add
cmp
dec
xchg
shll
ljmp
push
je
scas
mov
dec
mov
push
pop
mov
test
cmc
or
pop
gs
loope
mov
jge
pusha
mov
sahf
sbbl
pop
inc
cmp
fimuls
sub
popa
inc
jp
bound
les
jl
sub
stc
inc
sub
pop
push
sub
mov
mov
push
mov
cs
aad
test
das
push
sub
icebp
sbb
fildl
or
enter
mov
mov
stc
pop
in
pop
stos
jno
xchg
pop
push
shrl
inc
int
aaa
ja
mov
cwtl
add
or
mov
imul
ds
dec
popa
test
bound
pop
lret
imul
nop
aas
icebp
int3
adcl
and
test
add
in
pop
push
arpl
outsl
jmp
sub
inc
cmpsl
repnz
jae
mov
sbb
cmp
rorl
jg
or
scas
outsl
mov
mov
xor
inc
loopne
and
popa
push
clc
test
xlat
mov
push
jg
dec
fldt
xchg
call
or
mov
out
addl
lods
sahf
cltd
pushf
or
dec
out
xchg
out
jmp
pop
shrb
repz
and
add
in
inc
cmpb
jmp
mov
mov
icebp
xor
mov
xchg
xor
repnz
add
out
cld
or
sahf
push
vfrczsd
cmp
insl
movb
ret
dec
es
xor
jae
adc
retw
data16
js
ficoml
dec
stos
jae
push
cli
jmp
cmc
cmpsb
fmul
inc
daa
cmp
xor
fdivs
lods
dec
loopne
pop
movsb
jl
fidivl
sub
jns
rolb
pop
cmpsl
mov
call
jb
call
and
movsb
pop
int3
push
xchg
sbb
sub
xor
adc
stc
inc
into
xor
ja,pn
mov
mov
dec
push
loopne
aad
add
cmp
inc
outsl
nop
xor
xchg
std
add
jne
push
ret
add
bound
mov
sbb
push
mov
lcall
hlt
cld
pop
mov
dec
divb
pop
add
jmp
jle
cmp
leave
xchg
or
inc
push
stc
mov
pop
mov
aaa
sub
add
push
loope
inc
jg
and
lret
loope
dec
daa
repnz
std
std
or
mov
in
mov
sub
ja
inc
ljmp
sub
shrb
movsb
or
xor
pop
jg
or
pop
push
incl
cld
push
cmc
lods
jne
addr16
adc
repnz
jge
negb
mov
int
jl
sbb
inc
shl
mov
xchg
xor
push
xchg
pop
enter
sbb
lret
repnz
adc
jo
add
add
add
icebp
test
insb
mov
pusha
mov
add
movsl
xchg
sub
or
lea
fisttpl
pop
cmpsl
xchg
lret
mov
nop
pop
jne
dec
jmp
pop
pop
pop
add
out
arpl
int3
mov
adc
hlt
dec
in
shrb
in
xchg
lds
mov
out
xchg
stos
in
arpl
xorl
enter
adcl
jmp
dec
test
jp
jmp
push
stos
test
xlat
movl
xchg
bound
stos
lcall
testl
out
pop
and
pop
out
jb
cs
pop
add
scas
imul
es
lds
jecxz
lds
mov
jl
xor
mov
icebp
aad
inc
mov
addr16
mov
or
mov
das
scas
shll
jo
aad
cltd
xor
shll
mov
stos
rcll
cwtl
pop
popl
mov
testb
pop
push
adc
or
rcr
mov
lcall
push
popl
hlt
shll
sub
xchg
xor
in
subb
insb
arpl
dec
cmp
xchg
test
push
or
push
nop
pop
movsl
mov
clc
mov
push
test
shrb
dec
dec
cld
insl
or
outsb
int3
ds
cmpb
daa
roll
cmc
sbb
enter
push
adc
mov
push
xchg
fcmovb
sti
clts
jne
mov
sarl
js
loope
inc
lahf
dec
loope
jo
movd
jge
mov
fcmovne
insl
sub
add
dec
std
popf
insl
out
add
mov
pop
and
repz
xchg
add
divl
mov
or
dec
es
xlat
ret
and
ret
push
or
cmp
arpl
xlat
mov
xor
xchg
pop
jp
in
or
cmp
and
push
sub
sub
rcr
out
mov
jecxz
andl
cltd
pushf
ja
fimull
cmp
xor
out
and
xchg
stc
cmp
xchg
sbb
mov
jge
out
xchg
xor
inc
cli
jecxz
mov
xchg
rcr
shr
xchg
decl
push
or
dec
push
mov
mov
push
bound
call
in
xor
fwait
jp
pop
jns
sub
in
inc
cs
pop
jno
repz
inc
pop
das
std
lahf
dec
clc
jo
jne
cltd
xchg
sub
hlt
lcall
stc
inc
loopne
nop
insb
test
inc
in
not
cmc
adc
sub
or
clc
sub
and
mov
inc
jmp
enter
imul
insl
popf
cmp
js
mov
inc
mov
push
lret
inc
out
push
pop
jbe
das
inc
cmp
in
inc
loope
in
mov
adc
inc
mov
lea
lret
mov
icebp
movsb
inc
xchg
bound
fidivl
cld
repz
or
and
sti
cld
push
cmc
ljmp
dec
inc
test
sbb
fst
sub
mov
in
lock
mov
push
jae
jnp
xchg
and
repz
imul
inc
popl
mov
jle
ficompl
stc
xorl
daa
mov
push
sbb
scas
ljmp
aad
cmc
cmp
repz
xor
push
cs
mov
shrl
test
stos
sti
std
xchg
inc
sti
stc
dec
adc
push
loope
cltd
cmp
sub
rdpmc
adc
or
and
mov
or
in
xor
hlt
inc
sub
jg
sti
mov
dec
xchg
imul
ffreep
jne
bound
xor
and
bound
cmc
jl
packssdw
xor
pushf
jecxz
inc
adc
cmc
cmp
push
mov
lea
dec
ret
push
movb
jnp
sub
imul
dec
add
mov
push
xchg
sub
jge
in
sti
dec
jp
aaa
repz
call
and
jge
lea
add
inc
fmull
mov
sbb
jmp
cmpl
imul
and
loopne
push
jne
adc
repnz
cs
jne
add
je
outsl
sbb
ds
cmp
inc
or
cmpb
aaa
dec
push
dec
fwait
push
adc
dec
mov
dec
jb
mov
lret
push
push
jge
push
add
repz
mov
cmpsb
imul
cmpsb
shll
push
repz
xor
cmpsb
cli
jne
es
sub
push
pop
and
adc
mov
lock
movnti
fs
in
das
jo
das
mov
and
out
fs
shll
les
pop
mov
lahf
jno
lods
mov
pop
sub
clc
cmp
in
inc
and
out
mov
lods
jmp
mov
scas
in
jb
lea
dec
icebp
aam
mov
fnstcw
mov
mov
jns
sub
imul
dec
incl
loop
fpatan
inc
mov
add
stc
pop
std
adc
fidivrl
ret
mov
out
mov
rcrl
loop
xlat
push
scas
inc
add
jbe
repz
enter
push
cmpl
push
jmp
or
bound
push
mov
icebp
es
mov
icebp
xchg
clc
inc
dec
cmc
adc
inc
pop
jne
cmpsl
xchg
lret
stc
push
popa
inc
insl
xor
pop
data16
movsl
jp
jg
xor
enter
lds
ja
jne
push
sbb
popa
outsl
data16
je
outsb
lret
pop
insl
mov
push
imul
xor
or
call
jmp
es
pop
jb
loope
dec
hlt
lea
jl
jge
mov
push
cmpsb
sbb
movq
dec
jo
out
mov
push
xchg
in
dec
popf
pop
cs
add
add
push
mov
pop
mov
push
jg
aad
test
sarb
or
fucomip
je
daa
dec
push
sub
loope
mov
lds
frstor
push
cltd
adc
jno
outsl
xor
jmp
xchg
pushf
mov
pop
push
int3
out
fldt
adc
mov
adc
mov
mov
std
inc
mov
aaa
add
cld
hlt
xor
push
mov
ds
popa
pop
pop
outsl
popa
jae
sbb
push
cli
fdiv
movsb
je
cmp
sub
and
rorl
mov
jmp
in
inc
mov
xchg
lret
mov
jae
je
das
dec
mov
dec
jnp
pop
pop
or
sahf
lods
pop
and
cmc
cld
adc
push
push
inc
ja
dec
stos
sub
sub
cmp
std
jmp
shlb
jae
loop
popa
data16
and
jo
dec
sub
lahf
xchg
cmpsl
jmp
inc
push
lods
decl
lahf
data16
xor
sbbl
arpl
hlt
jmp
mov
out
push
loope
fmull
jl
mov
add
and
xlat
xchg
and
xor
sarl
jmp
loope
out
dec
mov
sbb
adcl
cs
clc
scas
fidivs
mov
inc
outsb
gs
sub
fstps
js
add
sti
xor
dec
xor
out
jo
cs
in
xlat
mov
bnd
insl
jno
aas
arpl
pop
push
push
mov
test
es
arpl
in
mov
mov
push
in
scas
and
adc
push
insl
inc
shrl
clts
pop
sti
inc
pop
adc
insl
dec
les
testb
cmp
sti
pushf
pop
cmc
ret
sahf
fs
lret
jmp
loope
sarl
dec
fs
gs
lods
and
push
outsl
icebp
int
inc
js
scas
repz
jne
mov
mov
stos
adc
cmc
loop
fdivr
mov
push
mov
in
dec
push
sub
xchg
xor
in
stos
nop
sahf
sub
cmp
hlt
sub
dec
jne
sub
add
pop
jge
mov
dec
and
scas
mov
enter
fldcw
cmp
sub
enter
and
dec
pop
adc
lods
pop
mov
or
dec
lret
xor
movsb
cmpsb
lock
pop
xchg
jns
jne
cli
dec
call
cmc
pop
cmp
fcoms
jo
jnp
adc
mov
arpl
imul
dec
pop
in
call
std
lock
mov
mov
push
mov
call
and
or
int3
popl
add
xor
push
cmpsb
dec
cld
dec
stos
xchg
into
and
or
clc
mov
cwtl
cmp
xor
lods
cs
sti
adc
jne
sti
and
movsl
jp
mov
xor
sarb
inc
fsts
push
fs
and
or
dec
aas
cmpsb
dec
jne
sbb
cwtl
fwait
add
mov
xchg
dec
cmp
cmc
xlat
jle
pop
lret
sub
lahf
in
cld
lds
jmp
enter
xor
jo
add
call
mov
dec
sarb
add
dec
pop
cld
ret
insb
je
cmp
jne
cmp
xchg
or
ljmp
jge
subl
push
iret
loope
movsl
mov
cmpsb
fs
dec
adc
dec
mulb
jl
inc
mov
scas
or
inc
jne
pcmpeqd
mov
movsl
out
mov
decl
aad
mov
inc
adc
arpl
in
fcos
pop
mov
or
pusha
xor
pop
rcl
pop
jle
jae
pop
fs
jns
shlb
je
loope
jae
jge
stos
mov
fcomps
rol
cmp
fidivs
inc
cli
pop
inc
jns
enter
ja
and
out
and
popf
daa
add
sub
clc
mov
daa
loope
idivl
inc
lret
cmp
add
mov
xchg
cmc
lahf
and
pop
add
mov
sbbl
js
call
insb
lret
int3
sub
dec
ja
xor
test
sub
jge
movsl
ss
xor
dec
cltd
mov
in
mov
and
xor
dec
xchg
fwait
mov
std
xchg
call
xor
pop
lret
es
in
and
mov
inc
mov
sbb
xor
daa
xchg
pop
aad
pop
jne
imul
sbb
sub
jmp
iret
jne
push
jle
dec
push
push
ret
movb
push
stc
hlt
jae
and
clc
fst
xor
fnstenv
add
and
inc
xor
push
mov
push
pushf
mov
cmp
lfs
mov
scas
push
shl
push
sbb
dec
sti
push
push
xor
cmpsb
jne
fnstenv
les
daa
je
repnz
popf
dec
mov
je
idivl
data16
sbb
in
test
dec
inc
dec
test
mov
loope
dec
sub
xor
add
pusha
sbbl
lds
scas
jmp
xchg
or
jecxz
scas
push
or
dec
jp
shrl
xor
xchg
and
sub
cmc
jb
arpl
pop
in
fmull
cmpsb
pop
fdiv
mov
jmp
rolb
mov
xchg
out
or
lret
fimuls
les
or
testb
aam
outsb
cmpsb
add
xor
mov
jg
jecxz
jne
lea
hlt
push
pop
cmc
lret
cmp
cmpsb
jbe
lret
dec
push
loop
fsubp
jnp
xchg
lret
fcomp
jg
daa
jecxz
sbb
bnd
loopne
test
mov
rol
cli
dec
dec
xor
sbb
outsl
and
lds
nop
pop
pop
mov
mov
out
push
outsb
and
and
push
gs
test
jns
shl
push
push
sbb
xchg
dec
add
std
ds
sbbl
loop
arpl
sbbb
inc
xor
repz
mov
test
cltd
xchg
xchg
cmpsl
pop
sbb
or
dec
pusha
jmp
mov
jle
inc
test
and
mov
sbb
cmp
mov
mov
mov
test
xor
jecxz
xor
jge
mov
fs
in
xor
arpl
inc
test
pop
jnp
xchg
das
dec
insb
xchg
pop
or
dec
push
std
aam
daa
cmc
outsb
test
jge
xlat
cs
jne
scas
push
ds
sti
and
push
jae
out
push
xor
pop
dec
mov
xchg
imul
jle
push
lahf
mov
test
push
pop
test
mov
test
ret
scas
jns
cmc
mov
mov
je
fwait
es
add
fwait
movsb
push
orb
imul
call
mov
add
popa
aad
subl
add
enter
push
jp
and
roll
sti
jne
pop
cli
sbb
hlt
add
jle,pn
outsl
dec
jae
nop
mov
in
sbb
push
jne
add
push
pusha
stos
mov
inc
adc
push
sub
inc
cli
sub
lahf
notb
daa
cli
push
fists
repz
loop
inc
scas
xor
cmp
addb
add
psrlq
and
mov
pop
push
xorb
inc
test
loope
jge
xchg
inc
lock
ret
repz
pop
outsl
stc
ret
jecxz
pop
js
dec
lret
sub
mov
push
std
or
adc
push
stos
inc
lcall
mov
cmp
divl
ret
lret
ret
enter
jp
test
out
xchg
pusha
or
lds
mov
scas
push
push
pop
dec
sahf
arpl
movsb
sub
jne
sbb
icebp
fwait
push
pop
dec
cmc
lock
sub
movsb
std
je
push
jl
add
dec
inc
xchg
xor
sar
dec
movsl
inc
call
in
inc
xorl
in
add
or
push
and
dec
sbb
mov
aam
sub
mov
mov
mov
inc
jmp
arpl
jg
jne
fildll
das
jmp
mov
mov
inc
aas
icebp
popa
xchg
mov
mov
das
dec
mov
test
push
test
inc
lods
xor
es
sub
lods
testb
ret
jno
xchg
dec
inc
hlt
xlat
and
xchg
mov
jae
jo
lahf
mov
dec
sub
jp
rcrl
in
lock
test
out
jle
mov
je
outsl
aad
dec
jb
inc
mov
movsb
call
pop
imul
int3
jp
xchg
or
jmp
or
stos
add
inc
xor
jg
sbb
or
out
repz
clc
loopne
adc
std
jge
pusha
xchg
xchg
sub
jns
and
ds
xor
lods
rcrb
pop
mov
lea
push
inc
lods
cwtl
dec
or
popf
pusha
shrl
xor
repnz
in
popa
xchg
lea
mov
jne
inc
jecxz
and
mov
xor
shll
in
sub
sbb
out
jp
mov
ljmp
xlat
hlt
pop
rorb
sbb
pcmpeqd
push
sti
scas
inc
push
aad
sbb
sub
jge
call
push
mov
xchg
xor
lock
fsub
sub
sahf
push
subl
or
loopne
popa
push
shll
shll
or
mov
shll
lret
outsb
dec
popf
inc
in
pusha
test
add
mov
dec
or
rcr
jns
lock
aas
mov
fbstp
enter
and
mov
dec
mov
popa
cmpsb
adc
adcb
imul
les
or
sahf
adc
test
sub
push
sub
imul
jmp
push
mov
xchg
gs
inc
jge
icebp
divb
mov
cs
ja
and
cmc
les
xorb
insl
fistpll
inc
in
inc
mov
xchg
and
in
loop
pop
stc
inc
push
cmpb
leave
lret
inc
ss
dec
jno
stos
es
dec
sbb
std
xor
sub
inc
jbe
xor
in
out
mov
mov
add
jb
notl
sahf
adc
lods
mov
sub
xchg
jge
cmpsb
sti
stos
out
das
insl
cmpsb
loop
out
mov
push
lcall
inc
sbb
jmp
dec
pop
lods
dec
dec
test
dec
fsub
lds
push
sti
popf
lods
inc
popa
jmp
loope
outsb
mov
or
sar
mov
dec
jge
adc
les
cmp
pop
sbb
cltd
sub
into
out
add
xor
mov
pop
inc
mov
lea
push
addr16
je
mov
push
jno
push
xor
cmp
in
ss
scas
movb
jp
add
adc
gs
jp
out
cmova
fcoms
or
sbbl
dec
jne
notb
test
push
add
cmp
inc
insb
orb
test
pop
cmpsb
pop
mov
sbb
inc
ror
add
cltd
inc
add
je
arpl
shll
sbb
fsts
sub
xor
ret
cmp
mov
or
lret
inc
adc
testb
lds
push
jl
jno
fs
test
adc
pop
xchg
push
pop
add
pop
js
adc
decb
push
into
jbe
push
int
push
add
xchg
sbb
jl
movsl
stc
cmp
in
lds
mov
xchg
pop
std
pop
ret
mov
mov
mov
imul
or
add
clc
mov
sbb
lahf
aas
cltd
and
push
outsb
jmp
xor
inc
addr16
je
fsubrl
and
xor
cmp
addr16
cmp
gs
cmp
dec
inc
hlt
out
and
xchg
push
out
aas
addl
jbe
mov
ja
inc
in
mov
add
loop
jge
sbb
jle
clc
dec
rclb
jno
mov
inc
mov
in
arpl
out
pop
and
jecxz
mov
fadds
cmpsb
nop
jnp
es
and
sub
es
xor
pop
or
xor
pop
shlb
icebp
ret
test
fcomip
aaa
or
pop
insl
outsb
dec
jne
pop
xlat
sub
jecxz
sbb
xchg
pop
imul
inc
loope
dec
mov
lcall
or
push
imul
leave
mov
rolb
xor
mov
pop
xlat
mov
popf
rcrb
ljmp
imul
jecxz
ret
jmp
xor
add
pop
cmc
adc
jne
mov
loopne
push
std
je
in
dec
outsl
cwtl
add
mov
pushf
repnz
adc
sub
and
stos
int
mov
xor
popa
mov
add
nop
movb
inc
jle
adc
pop
insl
out
out
sahf
cmp
push
pusha
xor
xchg
push
xchg
xchg
je
jl
lea
or
cmp
out
ficomps
jne
cmc
sub
and
xchg
sub
popf
hlt
sbb
int3
sub
add
xor
xor
jg
loope
push
int
out
scas
push
out
fmull
pop
inc
or
and
clc
cmpsl
inc
dec
cmc
ds
sbb
mov
dec
in
jb
in
sub
jnp
sahf
adc
inc
lods
push
adc
stc
out
movsb
pop
jmp
repz
push
cmp
addl
inc
popf
pushf
dec
sub
loop
rolb
sub
sbb
xchg
push
sbb
mov
js
aam
and
stos
in
jae
subb
cmp
imul
inc
xor
shr
mov
jmp
adc
int3
jne
dec
les
aam
lds
sub
sbb
popa
imul
adc
or
lcall
add
popf
xor
bound
aaa
and
lret
sub
pop
std
cli
xor
jne
sub
in
stos
ljmp
sbb
push
popa
push
ficoms
or
cmpsb
ss
cmp
and
push
mov
cmc
aas
dec
pop
test
in
mov
aas
xchg
fldl
popa
inc
pop
ficoms
ja
cmove
xor
stos
mov
or
andl
adc
test
pop
mov
mov
popa
imul
pushf
fs
into
or
lock
push
arpl
mov
dec
push
cld
scas
xor
mov
cmp
fs
mov
xorl
scas
add
imul
jne
fistps
lcall
xlat
xorl
mov
test
lds
cmc
aam
call
sarl
jb
adc
and
fs
ja
enter
sbb
sbb
inc
xor
out
movsl
mov
mov
fisttps
sbb
add
out
sub
sub
out
jg
jmp
add
dec
sbb
into
popa
in
sub
shr
mulb
jle
scas
lret
inc
jnp
or
rorb
jge
pop
bound
xchg
mov
inc
dec
add
arpl
les
ret
or
pop
jnp
ja
lahf
lahf
int3
adc
sub
fnstsw
lea
cmp
and
cmc
addr16
rorb
sub
mov
push
clc
sub
ss
or
jne
sbb
push
and
push
xor
pop
shll
and
subb
je
add
and
nop
mov
popf
xchg
insl
sub
adc
xor
pushf
pop
jp
jns
cmp
jne
mov
push
inc
insl
subl
pusha
mov
inc
aas
fcomi
and
test
inc
dec
add
sahf
jl
lods
dec
xchg
and
cmpsl
dec
lds
inc
jmp
aaa
nop
movd
push
push
lds
lods
repz
and
out
adc
mov
adc
mov
jne
cli
nop
push
xlat
aaa
sbb
jge
out
adc
push
ljmp
daa
les
pusha
out
rcll
pushf
je
push
jg
xor
lret
movsl
addb
pop
sbbb
or
push
mov
ret
pop
inc
test
jg
cmc
or
pop
jno
ffree
lock
icebp
cli
jo
lret
push
movsb
xchg
addr16
and
sub
rorb
inc
xor
js
jne
or
fdivs
inc
popf
lahf
push
cmc
push
pushf
inc
popf
mov
out
xor
xlat
stos
cmp
dec
je
pop
or
les
cmc
call
test
sub
ja
movb
fildl
sbb
mov
aas
out
push
inc
pop
jge
movsl
or
pusha
insl
stos
dec
loop
xchg
lahf
stos
mov
add
je
int3
mov
xor
mov
mul
rcll
aas
mov
jne
cmp
jns
pop
pushf
push
sahf
jl
and
stos
insl
mov
jnp
mov
cmp
iret
xor
dec
fldpi
add
xorl
cli
lods
stos
arpl
pop
sub
int
dec
sbb
sti
adc
inc
cmp
cmp
inc
lahf
mov
call
outsb
push
mov
lea
std
pop
xchg
cmp
sbb
inc
stos
xor
orb
fadd
cmc
xchg
jnp
cmpsl
lods
int3
shll
test
xlat
cmp
test
stos
dec
loope
push
imul
into
inc
dec
scas
fnstsw
into
cmpb
push
outsb
mov
or
sub
mov
jle
and
flds
scas
sub
and
leave
inc
lds
dec
lea
mov
adc
lds
cmp
push
push
xlat
and
pmuludq
add
out
mov
jp
sub
xchg
cli
inc
loopne
daa
test
je
inc
jne
and
sub
aad
gs
test
leave
jp
je
lds
sbb
mov
jne
mov
xor
repnz
push
mov
mov
outsb
xorl
popf
jb
xchg
push
mov
icebp
scas
pop
lock
or
pop
pop
sbb
add
and
nop
pop
pop
cs
push
jle
jno
rcl
dec
mov
in
dec
cmpsb
jo
and
cmpl
cwtl
push
jge
pop
jne
or
push
add
xchg
ja
pop
nop
sub
mov
inc
repz
or
ds
mov
cli
repz
jne
in
aas
sub
aas
fnstcw
pop
gs
jae
sarl
iret
mov
shrb
jne
movsb
xor
inc
xor
cmc
leave
push
int3
scas
ja
addl
cmp
scas
cld
lea
add
ror
ss
cmpsl
push
popf
loopne
addr16
pop
dec
cmc
dec
and
icebp
cmp
loopne
sub
fdivp
out
cmp
sub
cmp
add
push
xor
or
inc
into
imul
lea
sbb
sbb
mov
push
popa
or
push
push
pop
xchg
stc
les
insl
cmc
js
sub
mov
adc
push
popa
sarb
mov
ret
xor
out
arpl
hlt
mov
test
pop
cmpsb
dec
sub
sbbl
out
xor
xor
lret
cmp
cmpsb
gs
pop
dec
ds
sahf
jbe
pop
cld
insb
cli
dec
jne
cs
mov
stos
dec
pop
inc
mov
shlb
out
aas
mov
push
adc
and
mov
int3
dec
sub
in
xor
gs
cs
jmp
lods
insl
or
sub
pop
mov
adc
movsl
pop
movsb
cld
or
loope
scas
pop
jne
or
mov
xchg
and
sti
jge
pop
loope
out
jb
push
rcrl
push
in
idivb
jns
negl
lds
aad
or
std
aam
imul
pop
push
jg
adc
lea
mov
movsl
push
test
push
imul
test
stos
inc
pop
jne
or
ret
shlb
les
jb
test
fsubrs
pop
jp
hlt
xor
inc
stos
jp
sub
jge
insl
bound
out
orl
call
jecxz
call
test
in
testb
loopne
insb
pop
repz
adc
adc
les
inc
jl
cmpsb
inc
sbb
ret
andl
jge
jnp
push
subl
iret
mov
cwtl
push
cmp
dec
jne
pop
xchg
lock
aas
adc
sub
bnd
and
jb
adc
inc
lods
clc
push
mov
xor
mov
or
mov
jno
jmp
ja
pop
push
pushf
and
and
arpl
mov
or
jp
xor
popa
retw
adc
jg
test
push
sarl
jnp,pt
mov
shll
fldt
rcrb
add
idiv
aas
test
or
out
jmp
xor
mov
sbb
inc
inc
movsb
and
fdivp
out
scas
dec
sub
push
or
fdivrs
mov
outsb
cwtl
xchg
xor
hlt
dec
mov
arpl
and
shl
mov
push
lea
pop
std
cmp
ja
add
lock
pushf
sti
loope
adc
ds
outsl
daa
aam
movsb
mov
dec
rorl
cld
dec
inc
sbb
fsts
pop
cwtl
call
sub
adc
mov
ds
lcall
lret
add
out
push
cli
pushf
push
mov
lods
inc
pop
rclb
fnstenv
add
pop
lret
stos
sbb
adc
mov
inc
jne
aad
sub
popa
push
pop
in
stc
repz
push
imul
adc
jecxz
test
adcb
testb
sbbb
fs
inc
test
jl
sbb
lret
xchg
rolb
cs
les
and
and
fwait
shlb
mov
sbb
shlb
xchg
mov
inc
jecxz
ja
hlt
int
pop
push
lret
adc
sbb
cmp
pusha
rcl
imul
pop
mov
mov
les
inc
imull
jnp
clc
fwait
rolb
adc
lret
xchg
inc
mov
dec
imul
sbb
sbb
dec
movb
divb
inc
push
sti
push
jo
imul
inc
xchg
insl
popf
dec
ret
xchg
testb
andb
mov
sub
daa
ljmp
testb
jnp
jg
in
xchg
enter
xor
and
pop
push
bound
std
pop
push
push
pop
push
and
nop
adc
testl
frstpm(287
nop
iret
lret
nop
imul
add
add
mov
call
xor
enter
jp
jbe
push
aam
mov
popa
dec
xchg
pop
adc
icebp
movsl
and
das
les
mov
fidivrs
push
jb
sub
jae
push
rdpmc
test
xlat
push
push
fidivl
cwtl
pop
aam
add
sbb
inc
xor
test
notb
shll
add
sub
sub
sar
cltd
jns
mov
mov
xchg
jbe
sub
and
sbb
mov
ds
ficoms
inc
pop
scas
jmp
rcrl
ja
mov
xor
sbb
iret
and
cmc
dec
cmp
adc
repz
pop
leave
imul
add
xor
mov
popf
xchg
leave
aad
mov
stos
mov
imul
adc
lods
mov
or
addl
xchg
test
enter
sbb
adc
jge
jne
sub
sub
clc
and
sub
or
cmpl
push
add
cmp
push
jg
sbb
inc
dec
loopne
outsb
gs
sub
jne
push
push
pop
sub
pop
mov
dec
loopne
lods
pop
in
sub
pop
test
adc
pop
pusha
sub
push
cmp
mov
inc
cmc
loop
test
popa
or
cs
adc
inc
loopne
mov
std
xchg
xchg
lahf
movsb
rorl
mov
push
and
and
jge
loop
sub
out
inc
xor
shrb
call
sbb
xlat
mov
test
bound
mov
andl
arpl
loopne
xor
out
pop
cmc
sub
repz
jne
andl
les
inc
sub
push
scas
fnstenv
cs
loopne
sarb
mov
and
add
out
xor
sti
xlat
jne
insl
jns
imul
cmc
add
mul
rorl
inc
dec
xchg
call
cmp
sbb
jge
lret
and
jle
and
and
add
xorl
idivl
pop
lret
iret
sbb
stc
inc
lods
sub
inc
in
push
push
jmp
inc
lcall
repz
push
loope
sbbl
xchg
add
add
xor
jno
mov
and
dec
out
xchg
pop
inc
jne
mov
loopne
pop
xlat
and
in
test
push
js
mov
ja
stos
cmp
lods
js
sub
pop
sti
subb
xlat
imul
mov
sarl
inc
addl
cmc
out
cmp
add
in
arpl
cmp
je
sbb
inc
cld
inc
push
jle
adc
pushf
je
roll
lods
std
inc
ljmp
stos
pop
arpl
jp
repnz
push
rcrb
sbb
jne
mov
cmp
jbe
scas
mov
xchg
cmpsl
pop
xchg
int3
sub
outsl
or
out
jns
cmp
cltd
iret
pop
sbb
inc
loopne
imul
pusha
inc
xchg
daa
mov
popa
xor
sub
loop
in
aaa
loop
imulb
lahf
push
add
scas
and
aas
pop
rcr
mov
loop
dec
push
pop
xorl
shlb
and
js
inc
insl
sti
stc
leave
sahf
pop
mov
jmp
dec
daa
mov
aam
pusha
or
add
mov
fbld
mov
cld
addr16
cmc
jae
push
pusha
pop
sti
out
aaa
mov
aas
ret
xchg
mov
pop
cmp
jp
fldl2e
cmp
cmc
aas
lods
gs
pop
enter
cwtl
repnz
addr16
andl
cmp
xchg
cmc
or
mov
aaa
xchg
ret
out
imul
push
xor
dec
jne
adc
je
shl
mov
repz
or
inc
sbb
aad
xor
les
add
jle
pop
pop
sbb
mov
addb
sub
push
pop
xchg
ret
inc
push
push
jne
std
xor
sti
xor
aas
push
mov
push
cld
jbe
aam
cmp
pushf
mov
je
pushf
mov
push
lds
shr
cltd
inc
fiadds
jne
jg
sub
mov
ret
gs
call
out
cs
jle
popa
push
dec
dec
or
xchg
push
mulb
cmp
fbld
fucomp
scas
adcb
jns
push
pop
dec
sub
jne
mov
cmc
mov
movb
loop
dec
out
dec
stos
repz
movsl
push
xor
pusha
xchg
ljmp
xor
test
push
ja
movsb
jbe
outsl
inc
ljmp
pop
les
lods
pusha
gs
js
sub
insl
push
daa
jp
sbb
icebp
clc
fcoms
jno
cmc
leave
out
test
add
and
cld
flds
je
ret
mulb
sbb
jne
xor
and
hlt
mov
jno
movsl
xlat
ret
and
and
add
js
sub
int3
mov
jle
ror
mov
push
cmp
icebp
push
push
imul
adc
jge
cmpsl
add
adcl
push
mov
jmp
ss
insb
inc
andl
mov
mov
movsb
nop
clc
stos
push
mov
repz
add
test
xor
sbb
std
imul
jl
clc
xor
sub
add
inc
stc
xor
cs
jecxz
adc
inc
stos
cld
shr
lds
shrb
gs
cmc
mov
pop
vpcmpeqw
mov
scas
mov
ds
cmpl
roll
jge
lods
inc
mov
out
sbb
pusha
les
xchg
or
das
push
push
jg
inc
out
and
push
add
jo
lds
jbe
xchg
adc
mov
movsb
jmp
cwtl
cmp
hlt
pop
scas
jbe
rcrl
dec
mov
mov
loope
pop
stos
xchg
adc
cmpsl
xor
stos
mov
pop
push
nop
fwait
jp
sbb
pop
nop
xchg
or
jnp
xchg
dec
or
inc
or
xor
xor
lods
xchg
les
and
repnz
dec
insl
sahf
mov
mov
pop
ret
out
icebp
mov
jbe
fldl
lods
negl
fiadds
sbb
add
js
pop
aaa
dec
cld
scas
mov
xor
sbbl
or
pop
jbe
push
int
mov
bound
and
cld
in
cmpsb
fdivp
inc
add
or
jl
xor
rcrl
jne
in
pop
out
lea
hlt
jle
rcl
adc
out
dec
pop
sti
dec
stos
test
push
xor
pop
data16
shll
xor
pushf
mov
nop
ret
or
andl
jge
mov
cmp
xchg
jne
subb
cs
gs
add
sahf
xor
into
imul
sbb
add
dec
ret
and
inc
jne
mov
pop
nop
ss
addr16
cmc
mov
cld
jo
push
dec
scas
sahf
dec
sbb
je
lahf
into
xchg
repnz
inc
lds
sub
xor
sbb
xchg
out
and
adc
push
test
test
or
push
cld
sub
mov
in
xorl
push
xor
mov
dec
pop
mov
sub
in
inc
adc
mov
lds
sti
mov
adc
call
cmp
cmpxchg
pop
mov
mov
push
jo
pop
test
and
inc
xor
test
rcll
cli
or
add
pop
xor
xor
adc
push
cmc
pop
icebp
stos
xor
ljmp
clc
xlat
je
jne
add
fisubrs
jnp
int3
or
lds
lahf
push
cmpsb
hlt
and
outsb
scas
or
scas
mov
std
mov
adc
inc
adc
loope
iret
sti
dec
or
repz
add
adc
pop
lds
roll
cmc
out
cmpb
mov
inc
sbbb
pop
insl
mov
imul
jnp
pop
inc
add
lea
addr16
cmpsb
iret
imul
dec
dec
dec
les
pushf
fistl
mov
push
scas
cmp
adc
push
jne
jp
fs
push
ret
xor
incl
aas
out
push
inc
aad
mov
sub
in
sub
add
jmp
jne
lea
popa
icebp
jo
adc
push
inc
shll
stos
out
and
or
jecxz
sbb
jo
mov
imul
out
mov
xor
push
scas
and
or
ffree
jge
pop
imul
enter
rorb
clc
pop
sub
sarb
cmp
hlt
jl
inc
dec
push
insl
sub
jecxz
push
and
in
imul
cwtl
sti
mov
in
subl
std
mov
push
lcall
xchg
js
cmpsb
xchg
push
mov
cmc
dec
jnp
pop
pop
sub
jmp
xor
pop
or
adc
xchg
lret
pop
out
aam
mov
sub
shrl
inc
mov
les
xor
fsubs
mov
push
adc
sbb
nop
inc
call
cmp
imul
add
add
imul
faddl
inc
call
push
inc
xor
xor
mov
fndisi(8087
popf
dec
cmpsb
negl
fidivrs
dec
jg
ja
sub
mov
adcl
jg
in
jmp
arpl
rorl
hlt
pop
repnz
lret
and
xchg
outsb
lret
jmp
jg
xor
rcll
mov
push
out
mov
mov
add
push
jae
or
ret
out
fnstenv
rorb
jne
add
cmc
mov
dec
cmp
or
jl
imul
sub
pop
sbb
xlat
into
stos
dec
mov
cmpsb
add
pop
mov
and
mov
orb
ret
hlt
adc
mov
push
xorl
and
insb
add
inc
or
mov
bound
and
mov
add
sub
js
cmp
ret
pop
in
inc
jnp
mov
mov
xchg
mov
popa
fcomi
add
push
and
stos
add
and
out
lods
jno
or
xor
dec
mov
or
xor
lods
stos
test
imul
pop
jns
add
push
mov
and
cwtl
sub
lods
ljmp
cmp
mov
push
cmp
std
cmp
andl
cmp
in
call
popa
sbb
push
jb
cld
stos
and
sbb
mov
ret
gs
jge
fildl
sub
mov
bound
sbb
je,pn
sbb
sbb
mov
adc
scas
mov
and
dec
pop
ja
repz
fistps
inc
jge
cltd
sbb
loope
int3
sub
push
mov
pop
ret
add
xchg
gs
add
pusha
mov
int3
jne
iret
mov
incb
jae
lret
outsb
mov
mov
jnp
ret
ss
or
test
push
push
cmp
shrl
loopne
bound
lock
fs
xorb
lcall
incl
sbb
cli
mov
cld
jecxz
cld
sahf
or
pop
shll
test
int
dec
loop
push
flds
mov
inc
cld
subl
pop
sbb
lret
loope
inc
pushf
mov
testl
dec
pop
popf
fs
jp
std
mov
sub
js
mov
add
adc
jge
xchg
and
dec
lods
popf
cmp
sub
xor
inc
xor
imul
sub
mov
sbb
pop
jmp
sbbb
pop
and
sti
xlat
sbb
mov
loopne
jle
pop
cmpl
cmc
enter
jp
ret
repnz
cli
xchg
call
xchg
inc
sahf
loop
sbb
and
dec
fwait
push
shll
stos
leave
pop
sbb
jbe
outsb
test
sar
xchg
xchg
mov
push
sub
xchg
scas
fs
scas
push
cli
pop
push
inc
flds
fstps
mov
jb
aaa
pop
lret
jg
mov
lahf
mov
addr16
pop
and
sub
negb
or
dec
out
push
mov
out
pop
pop
cld
lds
ss
push
cli
cmpl
ds
sti
in
addr16
daa
dec
mov
inc
mov
movsl
adc
cmpsb
loopne
xorl
xchg
push
lcall
or
lds
and
rcl
jle
pop
fisubl
or
out
jne
mov
xor
pop
jns
sbb
inc
and
cli
xor
outsb
pop
sbb
sbb
xor
mov
ret
into
sub
mov
sahf
xorb
mov
inc
lret
inc
testb
jl
sub
sti
lock
inc
cmc
repnz
insl
into
dec
outsl
arpl
push
add
xchg
fsubrl
push
inc
imul
loop
sub
stc
ds
pop
call
in
or
pop
mov
jns
push
ja
imul
jnp
jne
mov
or
xlat
in
cltd
jne
mov
mov
hlt
pop
pushl
cmc
rcl
mov
inc
pop
mul
shl
pusha
jge
stos
mov
call
ja
cltd
sqrtps
sub
inc
push
lahf
scas
pushf
sbb
jno
jp
daa
popf
xchg
inc
xor
stos
insb
jnp
cmp
and
insl
fiadds
mov
push
ja
in
dec
mov
dec
es
out
push
push
cltd
jb
mov
mov
xchg
jmp
sahf
mov
xor
pop
or
pushf
or
les
dec
lcall
lods
sbb
mov
test
xor
dec
push
or
inc
ds
and
movsb
jno
xchg
mov
mov
aas
jg
cmp
in
ret
dec
inc
push
or
xchg
cmpl
jle
sub
jp
lcall
push
and
push
cmc
adc
pusha
inc
lcall
cmp
inc
xchg
push
mov
repz
aam
das
imul
sbb
mov
push
inc
fwait
mov
pusha
out
stos
push
dec
cld
mov
add
pop
sub
cmp
fwait
cmp
mov
pop
movsb
scas
popl
cmp
cmc
jmp
mov
fsubs
sbb
xor
jle
push
loopne
incb
lcall
cmc
inc
test
pusha
inc
cmpl
add
pop
shrl
adc
ficoml
xor
jnp
pushf
lds
shrl
ss
lock
int3
jge
or
stos
pop
lds
cld
test
dec
pop
push
lds
shll
shll
inc
sbb
mov
stc
mov
scas
sbb
lods
inc
inc
jne
cmp
getsec
insl
xchg
pop
cld
xor
lods
add
mov
in
xor
cld
jo
push
adc
rolb
cmc
inc
jge
sahf
fistl
xchg
add
sub
push
cmpsl
or
cmp
call
jne
inc
pop
push
aaa
pop
cmp
sub
sub
and
rcrl
aad
jmp
mov
dec
jbe
imul
dec
cli
outsb
insb
enter
mov
lea
and
out
mov
ds
pop
fsubl
sti
or
out
xchg
int3
enter
pop
mov
lcall
out
into
lds
cld
sbb
xor
xchg
xor
mov
mov
pushf
mov
stc
roll
cmc
cwtl
cvtpi2ps
xchg
sbb
lret
jg
cmc
xor
add
stos
mov
jne
cmc
cmpsl
icebp
pop
add
loope
pop
add
mov
push
std
jge
push
fbld
bound
adc
cmpsb
popf
sub
lods
rcrl
pushf
and
add
sub
icebp
les
jl
jne
mov
push
push
int3
rorl
aam
lret
outsl
lahf
cmc
push
inc
loopne
movsb
imul
std
outsb
addr16
in
and
mov
inc
or
inc
jp
int3
inc
insb
xor
jbe
xor
xchg
cltd
push
mov
jge
mull
hlt
cmp
pop
lret
and
out
add
inc
leave
aaa
mov
scas
sub
or
ret
xor
push
in
add
add
fstpl
dec
pusha
inc
push
add
lahf
and
jae
test
dec
popa
sub
inc
inc
jl
outsb
add
push
mov
test
push
push
out
dec
dec
inc
frstor
shlb
jl
sti
and
sbb
cmp
push
mov
sub
mov
adc
frstor
inc
adc
pop
lret
or
gs
xchg
mov
or
das
pop
loopne
js
or
lret
and
or
imul
mov
pop
stc
mov
push
dec
test
fchs
and
or
add
xchg
repz
xor
out
push
fbld
pop
lret
in
pop
dec
push
xlat
pop
addb
daa
aad
sub
sbb
mov
leave
xchg
daa
xchg
and
fucomp
mov
add
sti
sub
shrb
add
mov
or
mov
inc
mov
imul
sti
jl
push
mov
movl
lods
mov
jo
scas
and
ret
xor
xchg
push
iret
jge
movsl
xlat
adcl
and
jmp
lcall
cs
cmp
pop
enter
hlt
push
push
lret
enter
and
inc
mov
les
xchg
dec
popa
xor
je
pop
pop
test
sub
hlt
and
shl
int3
out
xor
add
push
rcll
or
insl
mov
xchg
jge
icebp
loope
mov
cwtl
jmp
sbb
fldenv
jnp
scas
sub
add
jne
loop
adc
mov
mov
adc
cli
sub
scas
pop
ja
mov
arpl
incb
sub
inc
test
pop
ret
cmp
add
orl
mov
sti
jo
pop
jo
sub
mov
les
xor
loopne
fsts
dec
and
std
xlat
inc
idivb
lret
cmc
mov
jne
adc
pop
jg
adc
test
inc
lods
leave
adc
mov
push
pop
repnz
sub
dec
shlb
bound
loope
test
adc
call
and
bound
pop
loope
add
das
pusha
add
loopne
js
scas
daa
jns
fwait
es
scas
push
ss
fistpl
xchg
push
sub
jle
imul
cld
add
pushf
shlb
movsb
sub
push
imul
or
mov
sub
std
scas
and
ja
outsl
xor
push
mov
cmp
cmc
push
or
and
dec
jne
or
and
loope
cmc
stos
mov
nop
and
pop
stc
jb
cmp
shll
flds
outsb
clc
sbb
mov
sahf
std
sub
add
rcll
test
xor
xchg
sub
idivb
nop
mov
sbb
pop
jle
lods
push
orl
sub
shrl
les
jae
fsubp
jecxz
pop
in
hlt
xchg
sbb
jno
sti
dec
cmpl
xchg
mov
addr16
jo
jp
and
xor
sbb
adc
and
mov
mov
int3
lret
lahf
and
adc
je
mov
icebp
inc
jmp
sub
decb
pop
or
sti
cmp
popa
jg
xor
jae
xor
dec
push
mov
and
imul
and
pop
ds
outsl
inc
ficoml
add
and
ljmp
inc
cwtl
jae
loopne
cmc
add
popa
je
xor
pop
mov
and
inc
lea
or
jge
dec
dec
add
rclb
and
push
stos
dec
push
xchg
adc
add
inc
test
push
mov
push
loope
cmc
mov
test
push
mov
divl
jecxz
es
call
dec
add
test
stos
pop
xlat
cs
dec
cmpsl
dec
ret
xchg
adc
in
fnsave
rcll
sbb
ljmp
scas
aaa
add
mov
gs
lock
clc
stos
shlb
pop
xchg
shll
mov
push
or
sbb
push
inc
imul
xchg
adc
jne
cmp
das
std
xchg
arpl
jns
dec
es
fdiv
jge
dec
inc
dec
jb
jbe
scas
add
inc
xor
ljmp
dec
push
xor
xor
inc
xor
jp
imul
daa
jp
mov
bound
jecxz
mov
icebp
cld
rcrb
cld
out
sub
jb
dec
mov
pop
push
pusha
mov
popa
pop
mov
out
sbb
xor
repnz
out
mov
mov
out
pop
inc
loop
stos
daa
icebp
push
lretw
adc
lods
sub
fcompl
xor
jbe
and
mov
inc
jns
or
push
pop
cmp
lock
cmc
cmpsb
movsb
jl
cli
push
popa
rolb
lret
inc
pop
jo
sti
lods
sbb
jbe
jne
roll
dec
jp
ss
shl
add
repz
jb
xor
cmp
mov
mov
loopne
xchg
mov
bound
mov
aam
cmp
cmp
cmp
push
mov
test
insl
push
push
mov
pop
and
outsb
rolb
push
sti
push
xorw
pop
test
out
xchg
inc
icebp
das
test
into
sub
bound
movsb
jb
sub
cmp
add
xchg
xchg
loopne
test
cmc
repz
cltd
dec
cmp
gs
dec
mov
sbb
add
cltd
and
sbb
decb
out
sti
jle
ficoms
cmc
call
jno
in
push
lret
xor
cmp
int
stos
out
in
inc
aad
xor
push
rcll
shrl
adc
sbb
js
call
adc
imul
popf
xchg
int
xlat
push
mov
jnp,pt
cmp
sbb
jp
cmp
adcl
jg
jb
fiaddl
inc
es
mov
ds
mov
femms
mov
cld
imul
dec
leave
push
dec
mov
lods
daa
fsubl
aad
lods
inc
mov
sbb
inc
adc
out
push
inc
loopne
sub
aam
aad
inc
adc
mov
rcrl
lcall
push
nop
dec
xlat
jle
fwait
in
cld
inc
insb
push
dec
cmc
fcmovnbe
negb
andb
add
pop
ret
jo
jns
xchg
and
sahf
cmc
je
sbb
cmpl
mov
insb
subl
lret
xchg
inc
aam
ds
mov
cmc
pusha
ret
loope
std
sbb
mov
add
or
mov
lds
inc
scas
fdivl
inc
daa
xrelease
scas
cmpsl
lret
inc
cltd
lods
loop
mov
sbb
lds
jl
rorb
popf
test
push
sahf
adc
pop
inc
sbb
in
xor
gs
jne
pop
loope
xor
or
and
xor
andl
sahf
mov
stc
dec
cmc
jecxz
ja
or
gs
or
mov
jns
mov
jg
in
adc
push
xchg
dec
clc
mov
out
repnz
rcl
push
xchg
setge
movsb
inc
dec
inc
ds
in
fldl
pushf
xchg
divb
cmc
shrb
imul
sub
sub
xor
shl
in
std
cmp
fs
loopne
jge
jns
arpl
imul
cmp
xor
sub
and
sbb
xor
push
inc
mov
lahf
mov
shlb
pushf
clc
xchg
rcrl
rcrl
sbb
xchg
push
jbe
push
push
inc
shlb
jne
sbb
imul
insb
jns
sub
rcl
pop
xchg
stos
fs
call
and
xor
js
push
cmc
add
adc
outsl
jne
loop
mov
fwait
std
pushf
scas
xchg
push
filds
xchg
add
jne
fwait
jl
test
adcl
jno
sti
movsb
and
adc
or
jnp
jo
jo
jae
xchg
adc
mov
dec
push
mov
les
test
mov
sub
lods
push
push
push
fcmovnb
orb
and
mov
inc
bnd
jns
cltd
mov
aad
jmp
arpl
mov
into
adc
push
jne
scas
jg
xor
cmc
mov
sbb
jo
inc
mov
imul
in
xor
movsl
mov
adc
andb
dec
inc
test
add
xchg
imul
lret
sahf
pop
leave
xor
aas
subl
lea
imul
ljmp
push
int3
std
insl
shl
ror
push
pop
and
loopne
jge
inc
mov
push
loope
into
jp
pop
dec
in
int3
mov
push
pushf
or
push
fcoms
add
in
loopne
test
sarl
jp
dec
stos
xchg
push
xor
jnp
dec
add
stos
xor
lret
scas
test
rorl
jg
cmp
rcrb
jge
popa
cld
test
xchg
push
sub
pusha
ss
sub
add
stos
mov
inc
add
xor
push
clc
stos
sub
push
pushf
addl
cwtl
dec
mov
shrb
clc
ljmp
int3
jge
or
call
xor
movb
clc
popa
leave
fs
or
imul
dec
inc
imul
mov
outsl
mulb
mov
stc
cmpsl
dec
aas
dec
jne
test
or
xor
es
jae
inc
jne
stc
or
jg
dec
jp
xor
sbb
inc
xchg
sub
popa
fs
pop
ret
orl
imul
in
mov
or
je,pn
aas
pusha
shrl
movsb
xchg
shll
jne
popf
add
loopne
jmp
inc
dec
jl
pop
jge
push
cmpsl
sbb
int
xor
mov
sub
std
movsb
sub
cs
push
data16
ret
test
jmp
xor
jo
mov
mov
leave
push
fcoml
pushf
mov
lret
and
cmpl
scas
xor
add
push
mov
ret
and
lds
jg
mov
std
cli
ljmp
cli
and
xchg
stos
lret
mov
mov
push
dec
dec
inc
jne
mov
push
pop
pop
mov
xor
cli
pusha
inc
negl
xor
dec
lret
or
loope
addr16
dec
das
inc
ret
test
dec
lret
pushf
out
or
push
inc
mov
adc
xorl
lods
cmp
test
subb
bound
add
inc
xor
sbb
cmpsl
pop
inc
jne
lret
outsb
cmp
and
sbb
insb
pop
lods
in
pushf
sub
aam
mov
outsb
pop
popa
add
pop
dec
push
jecxz
popl
ss
add
add
jae
and
out
lock
adc
jne
mov
stos
dec
push
adc
cmp
mov
mov
sub
data16
jbe
pop
mov
mov
mov
test
sbb
in
fisubrs
sbb
push
inc
cmp
aad
inc
mov
and
lahf
pop
mov
es
sbb
cmp
adc
inc
dec
xchg
xchg
bound
cmp
in
add
adc
mov
pusha
popf
dec
cmp
gs
lods
outsb
cltd
and
add
jne
xor
call
fs
dec
lds
out
loope
loopne
shr
popa
xchg
cmc
testl
fcoml
hlt
subl
bound
fmuls
movsb
in
andb
mov
jge
std
aas
inc
mov
mov
int3
sub
loopne
adc
fisubl
xlat
adc
adcb
outsl
pop
cltd
cmpl
sbb
imul
xlat
hlt
fldlg2
outsl
pop
push
stc
repz
jno
or
inc
pusha
rcll
sbb
push
push
sub
lock
mov
sub
jmp
mov
sub
or
mov
pop
mov
pop
adc
arpl
xorl
imul
adc
sub
sbb
push
jl
scas
push
xchg
or
add
adc
inc
enter
mov
clc
jge
mov
cmc
jecxz
cmc
cmp
mov
mov
and
push
je
xlat
cltd
fucomip
aam
stos
mov
out
daa
pop
adc
mov
mov
in
cmp
add
sbb
loope
add
push
sar
fdivl
adc
mov
addr16
ret
dec
sub
mov
xor
mov
shll
mov
sbb
mov
sbb
jnp
and
hlt
shr
inc
test
outsb
clc
cmpsb
and
cmc
add
scas
dec
lock
jmp
push
movb
jae
xor
sahf
fisttps
xchg
fists
movsl
add
aam
outsb
jle
repz
xor
jne
push
jecxz
repnz
cs
add
add
mov
movsb
outsl
add
add
lret
dec
ljmp
jle
gs
loop
stos
ja
cwtl
lods
shlb
and
mov
jne
cmc
movsl
xchg
xchg
push
insl
sbb
data16
mov
or
clc
stc
ret
lods
mov
sti
fxch
push
push
jo
mov
jg
or
je
add
or
adc
push
pop
dec
lods
stc
mov
jecxz
mov
inc
cmp
scas
dec
rorb
or
jp
and
add
cmp
mov
std
add
jg
mov
dec
mov
in
adc
jb
and
out
cli
daa
sti
aas
push
out
shrl
outsb
jmp
inc
inc
sub
xorl
popa
pop
loope
mov
jle
dec
inc
push
and
adc
dec
add
call
sbbb
sbbb
mov
dec
daa
and
dec
hlt
enter
subl
test
mov
adc
push
pop
add
movsb
rolb
pop
aaa
jle
loop
jle
push
mov
pop
xchg
lret
ja
inc
xor
bound
jmp
cli
push
lock
mov
dec
and
pop
sti
scas
jne
jne
mov
inc
jp
pushf
pop
in
xchg
pop
xchg
and
rcrl
pusha
xor
fisubs
popa
push
jb
jb
subl
dec
fs
ret
pop
push
in
and
dec
mov
andps
and
push
into
dec
enter
sahf
fstp
push
dec
cmc
pushf
addb
sahf
push
addr16
cmc
jge
mov
out
cmp
jb
clc
out
scas
inc
jle
ja
mov
xchg
out
scas
leave
leave
out
xor
ffree
adc
cli
cmp
adc
repnz
jge
inc
mov
sarb
loope
ficoms
mov
xorl
mov
mov
ret
loopne
call
pop
pop
inc
outsb
cs
repnz
inc
xor
sti
push
roll
hlt
clc
lret
push
stos
ret
and
jb
movsl
pop
add
cmp
cltd
lahf
and
xor
add
loop
sub
mov
jecxz
pop
ret
sarl
bound
mov
xchg
dec
addr16
or
mov
cmpl
or
fbstp
mov
jae
jns
das
jl
mov
pop
adc
inc
mov
insl
jbe
jo
bound
lret
and
arpl
push
shl
inc
xor
stos
sbb
mov
and
inc
inc
es
xor
pop
stc
xor
test
arpl
add
and
fisttpl
xor
or
in
mov
sub
add
popa
pop
xlat
lret
lds
jns
push
adc
mov
imul
add
xchg
and
lret
sbb
test
push
push
fdivl
int3
jbe
test
rclb
subl
push
ss
xchg
cmp
cmc
jno
loopne
hlt
xchg
std
bnd
adc
xor
pop
mov
sub
adc
jb
cmp
insb
pop
loope
cli
xchg
test
pop
inc
sbb
call
inc
and
lds
add
push
dec
adc
dec
mov
test
sub
pop
fsubrs
dec
pushf
mov
xor
inc
add
lret
ficomps
sub
sbb
dec
popf
inc
push
fsubl
in
xor
mov
imul
inc
add
pop
and
dec
inc
dec
push
aam
lret
and
inc
sbb
out
dec
nop
daa
inc
jmp
cmpsl
mov
mov
pop
adc
inc
lods
loope
es
or
dec
adc
push
pop
jmp
xchg
dec
inc
and
xchg
sub
ja
dec
inc
dec
xchg
dec
stc
repnz
and
test
popa
sub
pop
pop
inc
es
xor
or
lcall
dec
dec
in
lret
mov
outsl
and
or
dec
inc
dec
stos
ficoml
aas
sub
rolb
push
je
test
cmp
popa
hlt
and
mov
inc
neg
das
cmpsl
movsl
cmp
inc
xchg
xchg
movsl
das
and
pop
and
inc
mov
push
mov
and
adc
aas
mov
jge
aam
push
jne
negb
sub
test
gs
das
push
push
push
sub
push
sub
pop
mov
mov
outsl
gs
aas
push
jge
cmp
popl
fwait
and
imul
dec
cmpsl
xor
lods
dec
roll
sub
lods
pop
adc
xor
dec
cmp
xchg
roll
dec
inc
in
inc
mov
sbb
lret
jg
mov
subl
mov
lahf
ja
push
adc
shlb
sub
cmp
push
pop
push
push
in
dec
xchg
out
pop
cmp
jne
cmp
mov
sbb
add
xchg
out
sarl
jbe
mov
inc
scas
les
or
imul
inc
jnp
fucomip
lds
mov
sbb
loope
lret
pmulhw
sti
jg
inc
into
sub
stos
and
sub
rclb
jno
cld
push
jge
cmpsb
out
loopne
push
outsl
cmc
add
out
dec
es
jge
xchg
in
rcr
je
orb
shr
test
pop
cmc
loopne
ud0
jno
dec
sub
mov
xchg
fnstenv
fs
adc
in
cmpsb
je
adc
in
pop
pop
cmc
in
jmp
in
std
push
test
ret
xor
sarb
jne
inc
cs
sbb
add
test
pop
mov
cmp
rorl
mov
cmp
xor
test
xlat
sub
cli
sbb
repnz
pop
pop
sahf
mov
iret
inc
xor
xorl
cs
sbb
stc
push
bound
mov
into
fst
imul
lods
neg
add
loope
jne
xchg
inc
push
sahf
jae
in
mov
rcrb
icebp
cmc
mov
mov
nop
faddp
cmpl
mov
adc
adc
imul
pop
sti
mov
cmc
sbb
or
jmp
bound
pushf
bnd
or
lcall
cwtl
push
stos
sti
aam
aam
or
push
jns
loopne
shlb
xor
rorb
aaa
lock
mov
fsub
stc
push
jge
addl
test
sbb
dec
cmc
cmp
mov
pushl
fwait
jmp
loopne
or
pop
jne
jecxz
lcall
sub
sahf
mov
jne
mov
ret
loopne
dec
inc
ja
ret
cmp
xchg
push
in
mov
loop
mov
pop
icebp
sub
and
dec
xchg
insl
or
xor
ret
and
mov
push
call
movsb
outsb
clc
cs
das
int
mov
dec
in
and
cmc
mov
lahf
pop
jno
inc
pop
dec
mov
cwtl
sub
xchg
pop
jnp
inc
add
fcmovb
push
imul
xor
shr
test
mov
cwtl
daa
out
cltd
pop
push
pop
mov
call
orb
je
push
push
les
mov
nop
in
inc
scas
cmp
jle
mov
int
lds
fstpl
sub
movsb
pop
dec
outsl
out
pusha
add
xor
push
mov
inc
imul
es
or
pop
add
inc
lods
dec
in
jns
jle
sub
sbb
dec
cmp
loop
mov
xchg
dec
subl
inc
jne
loop
mov
and
lods
cmp
test
push
xor
sbb
rcrl
jmp
xchg
and
xor
dec
sbb
rcl
cmp
push
xchg
inc
inc
xlat
jb
jp
mov
push
mov
jge
roll
imul
fs
cli
and
mov
jp
lret
mov
jne
cltd
or
sub
fsubrp
sbb
call
gs
nop
daa
pop
sahf
in
clc
aas
xor
mov
jnp
push
popf
incb
lds
sub
adcl
idivb
fldl
das
je
mov
repz
stc
add
cmp
scas
shr
in
adc
xchg
vmwrite
lods
daa
std
mov
das
loope
loope
xor
and
adc
hlt
jne
and
js
pop
xchg
adc
jne
stc
mov
mov
movsb
mov
dec
mov
mov
push
xchg
fnstenv
std
add
cmc
scas
shrb
mov
sbb
lcall
or
xor
lds
movsb
jle
es
or
jmp
pop
sub
into
enter
dec
xor
cmpsl
inc
loope
add
lods
ljmp
stos
or
gs
or
mov
outsb
repz
out
inc
inc
or
mov
mov
je
stos
cs
jo
mov
add
in
stc
adcl
leave
jp
pop
sbb
repnz
pushf
push
sar
xchg
xorl
or
ret
cmc
lret
mov
sub
adc
push
inc
cmc
sub
arpl
jl
pop
in
scas
cld
cmp
out
in
xor
jmp
jae
xor
repnz
dec
dec
inc
dec
movb
popa
fwait
jbe
adc
xchg
adc
sahf
push
ret
xchg
xchg
loopne
add
xchg
dec
repz
mov
jns
xor
lret
jmp
icebp
jp
xchg
cli
out
call
cmc
sti
inc
sub
rcll
in
sbb
lahf
dec
lds
push
out
xor
loop
stc
push
mul
test
push
aam
jg
xchg
jge
pusha
out
bound
stc
or
xor
movsb
fdivl
sbb
out
and
mov
pop
scas
or
pop
addb
mov
adc
cmc
xor
stc
shr
cli
jmp
ja
mov
inc
xchg
mov
and
dec
and
jge
repz
js
imul
xchg
cwtl
cld
and
in
push
movsb
cmp
lods
in
jge
into
jne
cmp
jmp
jp
adc
rcl
dec
decl
int3
shrl
mov
repnz
jge
stos
mov
and
fcomps
insb
or
inc
imul
sti
insl
jo
sbb
cmc
pop
cmpsb
icebp
test
shlb
xchg
dec
fimull
fmul
and
jo
cmpsb
ja
arpl
inc
jne
cmpsl
out
mov
std
aas
mov
inc
lods
imul
push
push
and
mov
mov
jne
pop
nop
jns
lret
dec
pusha
movsl
pushf
xchg
xchg
dec
nop
jge
pusha
arpl
mov
insl
sub
pop
dec
push
inc
mov
inc
loopne
push
popl
mov
jge
pusha
xor
sub
push
adc
in
fcmovne
loope
jne
arpl
je
das
inc
sbb
add
jecxz
cmp
out
jp
adc
cmc
dec
sub
shrb
ljmp
pop
push
negl
stc
jle
mov
sub
pusha
ljmp
movsl
add
dec
aaa
xor
push
xorl
arpl
jne
negb
cmp
inc
xor
test
push
jne
popf
jb
test
cmp
add
inc
mov
cmp
enter
push
cmc
and
dec
out
cmpb
mov
mov
jle
lods
add
add
inc
cld
aam
jbe
mov
pop
sti
std
das
add
popa
inc
das
push
loope
mov
sub
rcl
sbb
push
dec
js
popa
bound
xchg
out
test
ljmp
add
repz
jne
xchg
into
les
sti
sub
mov
aas
shrb
test
mov
fs
jb
std
outsb
lret
jne,pn
push
sub
pop
or
scas
and
inc
iret
daa
push
push
and
stc
aam
lret
cli
cmp
daa
xor
fwait
inc
sub
mov
addl
cltd
pop
sub
pop
subb
aas
push
stos
fistpll
mulb
scas
cltd
pmaddwd
std
xor
inc
andl
jl
add
xlat
out
js
inc
xchg
shll
or
pop
mov
orb
lock
cmp
and
fisubrl
pop
mov
lret
fidivs
push
cmp
or
and
test
test
ja
hlt
dec
cmc
pop
cmpsb
dec
push
or
dec
es
xchg
push
inc
addr16
das
and
cmc
mov
and
lds
aas
arpl
fwait
cmp
dec
movb
and
mov
or
les
cltd
ds
sub
out
cmp
and
es
jge
popf
jg
jmp
mov
out
addb
jo
in
jge
or
or
jb
cmp
mov
stos
mov
ret
jmp
push
in
push
xor
inc
xor
mov
push
pop
sub
clc
push
imul
scas
inc
add
jne
jp
faddl
ret
lods
add
rcrb
push
jp
fidivs
in
pop
aas
pop
dec
lods
jle
cmp
inc
into
enter
inc
nop
xor
cmp
shrl
sahf
insb
jno
pop
mov
xchg
lcall
add
inc
es
sti
jne
inc
add
push
hlt
mov
cmp
or
sbb
adc
enter
add
and
pop
pop
inc
xor
daa
add
xchg
fistpll
lds
cmp
add
jne
xor
push
pop
sub
sbb
sub
and
fsubp
dec
repnz
mov
cmc
jne
mov
fmuls
jb
stos
cmc
sub
lahf
dec
xorb
pop
inc
aad
and
aam
in
data16
int3
addb
inc
xor
cli
std
lods
cmpb
in
mov
pop
inc
sbb
sub
jg
shlb
mov
pop
push
insb
rcll
rcrl
fdivl
push
movb
test
or
ljmp
jp
sarl
add
adc
sub
std
and
mov
lret
cmc
cwtl
gs
or
dec
pop
jns
adc
test
fmul
xchg
call
xchg
push
fmull
jge
in
jmp
push
add
dec
jge
mov
and
cmc
jbe
mov
in
sub
cmpsb
daa
jne
xorb
xchg
jl
in
xchg
scas
jl
xlat
jge
or
aam
pop
stc
std
std
ret
data16
scas
shl
cli
mov
das
mov
lods
sub
xor
dec
clc
add
cmp
and
enter
cld
push
mov
pop
adc
add
lods
pop
xor
inc
popa
arpl
pusha
and
jbe
push
test
sarb
aad
fsubl
push
push
pushf
ret
push
loop
sub
lods
jle
or
push
pop
ds
push
xchg
inc
pop
push
loope
xor
ja
ss
jecxz
dec
and
jae
sahf
movsb
mov
push
jg
lret
push
shlb
inc
imul
sbbl
jle
and
mov
mov
loopne
fnstsw
bound
xchg
sbb
cmp
sahf
gs
jle
push
pop
mov
rorb
push
jo
test
and
loope
lcall
jmp
in
outsl
orb
sbb
movsl
inc
or
fs
jge
in
movsl
cmp
flds
pop
lret
shl
xor
sti
or
mov
jo
mov
outsl
mov
inc
lock
rolb
lods
sbb
sti
add
int3
pop
inc
pop
subb
nop
sahf
scas
test
push
in
cmp
xor
scas
push
xor
xor
int
icebp
jne
pop
cwtl
mov
call
push
add
fnstenv
roll
scas
or
pop
xchg
mov
lds
ds
sub
insl
xchg
pushf
cmp
scas
jmp
ret
movsl
je
xor
and
xor
push
aad
adc
aas
xor
scas
andb
xor
mov
repnz
jbe
test
bound
mov
adc
mov
lea
sbbl
inc
jne
push
pushf
mov
js
jge
fisttpll
popa
or
cmp
mov
lds
subb
cmp
inc
aam
mov
das
dec
movsb
mov
loope
shl
in
mov
arpl
xchg
ret
push
loop
dec
fs
xor
jg
mov
clc
xchg
mov
and
jns
cmpps
lret
push
adc
lcall
inc
lock
shll
fidivrl
or
jo
cmp
add
pop
sub
lea
xchg
cmp
inc
jl
cmc
xor
sbb
xor
jmp
xor
push
notb
sbb
jb
mov
lcall
push
imul
addl
jbe
incl
andb
sbb
mov
jmp
roll
dec
pusha
divb
cs
push
shrb
push
jne
xor
inc
adc
ja
cli
pop
jg
xchg
loop
cli
outsb
add
sahf
dec
in
dec
mov
adc
push
pop
sub
repnz
inc
insl
in
push
imul
and
push
mov
jns
cld
lea
push
repnz
jle
aam
jo
popa
mov
sub
push
lahf
lds
outsb
mov
call
sbb
das
ret
push
mov
cmpsl
mov
xchg
cmp
inc
shrl
aam
imul
les
inc
scas
pop
lock
pop
outsb
inc
hlt
std
shl
xor
jecxz
pop
lds
xchg
cld
inc
pusha
xlat
insl
out
lds
mov
dec
push
push
gs
ss
jb,pt
dec
inc
dec
popf
sub
sbb
mov
fildll
push
and
dec
addr16
dec
or
out
sbb
sarl
jg
stos
mov
push
out
dec
xchg
jecxz
inc
mov
test
add
mov
fsubs
inc
mov
mov
mov
xchg
clc
mov
or
enter
xchg
pop
mov
in
pusha
push
dec
adcl
push
sub
adc
inc
jne
and
sub
jg
sub
fidivrs
imul
arpl
ljmp
inc
mov
sub
es
jg
outsl
bound
and
or
ret
fwait
pop
xor
sub
faddl
push
sbb
jl
or
out
sbb
jle
gs
enter
mov
dec
cmp
jle
inc
inc
movb
jo
stos
cmp
jp
lods
mov
cwtl
cs
and
je
inc
stc
lret
pushf
int
mov
inc
sti
in
mov
dec
lock
pusha
adc
push
jge
inc
test
sbb
jb
mov
jge
test
pushf
push
add
mulb
mov
repnz
push
jle
jp
popf
inc
shll
std
jae
inc
xor
jne
push
call
inc
dec
xchg
xchg
sar
pop
imul
std
stc
push
xchg
lods
insl
jle
adc
test
popa
push
cli
insb
mov
adc
sahf
and
mov
jno
fdiv
push
shll
dec
push
daa
mov
jl
lea
add
shll
sub
je
stos
repz
jne
js
dec
cmp
and
mov
sarb
clc
out
xlat
ja
xchg
push
clc
mov
popa
das
cmp
mov
stos
mov
xchg
clc
popa
je
inc
loope
dec
les
push
lahf
stos
sbb
divb
rcr
test
lahf
scas
cmc
movsl
adc
lock
popf
adc
ljmp
scas
bt
inc
frstor
inc
repnz
push
cmp
sbb
outsl
loope
jecxz
bound
std
les
mov
popa
xchg
neg
dec
cmc
sub
and
outsb
jne
dec
pop
sbb
jmp
pop
dec
outsl
stos
inc
ljmp
adc
sub
mov
dec
call
fsubrp
cli
test
xor
ljmp
les
pop
xor
push
sbb
aam
leave
xor
shll
pusha
xor
mov
inc
pop
ret
jne
insb
pop
cmp
push
mov
add
in
icebp
pop
sbb
mov
lds
sbb
rol
dec
lods
mov
dec
inc
movsb
xor
sbb
jbe
inc
mov
subl
pop
mov
movsb
cmpsl
add
popf
fwait
call
and
lcall
cmpsl
pop
sub
test
movsl
adc
pop
mov
cmpsl
addps
push
fimuls
int3
mov
adcl
pusha
mov
xor
push
dec
cs
and
pop
sbb
sbb
shl
movsb
xor
clc
or
push
sbb
push
pop
inc
xchg
mov
jecxz
mov
mov
inc
movsl
out
ret
jg
push
xchg
xchg
rol
leave
das
les
movsl
sti
and
push
outsb
mov
shl
int3
add
shll
icebp
fldcw
sub
push
int3
pop
test
sahf
dec
xchg
aad
pop
sub
push
scas
sub
fiadds
popa
in
sbb
add
and
jg
rcll
cmpl
jno
push
mov
mov
adc
jns
or
add
ljmp
lret
jmp
ljmp
jae
call
sar
sub
cmp
and
shrl
mov
test
inc
out
popa
js
test
mov
and
les
popa
movsl
sar
sbb
sti
lock
jg
push
movsb
jb
lret
push
jmp
pop
out
push
and
out
xorl
inc
adc
cld
popf
into
mov
lods
sbb
sub
cmp
rcrl
pop
ss
add
push
add
jno
call
pusha
push
clc
std
sub
push
popa
jge
dec
adc
icebp
inc
sti
cmc
hlt
insb
jl
adc
iret
or
decb
add
je
call
test
popa
xchg
dec
dec
adc
xor
or
lahf
xor
and
sub
xlat
sti
sub
cmc
push
cmp
mov
enter
xchg
repnz
sub
sti
shl
pop
mov
inc
mov
scas
mov
push
mov
xchg
leave
loope
pop
test
faddl
xchg
add
jge
cli
imul
sub
or
leave
in
loope
mov
sar
sub
pop
cmc
push
cmpsl
mov
cmp
jne
and
push
fs
xor
shr
das
aad
jns
sti
fbld
xor
xchg
test
das
jp
jb
mov
rcll
push
xlat
stc
xor
ret
xlat
or
mov
repz
adc
lds
loope
test
mov
fwait
xor
push
rcl
inc
dec
out
lds
popf
push
add
test
imul
cmp
jle,pn
adc
cmp
adc
jb
inc
inc
imul
scas
pop
xlat
sbb
bnd
jo
cmp
xor
xor
and
adc
adcl
pop
es
mov
test
push
xchg
daa
fbstp
fisttps
jmp
repz
int
mov
popa
push
add
or
scas
adc
add
push
jae
xchg
sarb
andl
jge
dec
mov
fnstenv
sbb
inc
jne
outsl
rcr
mov
sbb
mov
aam
pop
cmc
sub
pushf
xor
and
adc
add
xchg
inc
xchg
lds
mov
cmpl
jecxz
add
xchg
lea
scas
sub
xor
jp
xor
cltd
and
je
test
or
jmp
fisubrl
outsl
pop
pop
shrl
cmp
insl
add
fs
imul
popa
jbe
push
je
insl
inc
cmpl
loopne
push
push
push
jns
sub
enter
pop
adc
lock
push
imul
mov
xchg
mov
negb
pop
xchg
pop
push
or
popa
add
addr16
inc
xchg
sbb
std
mov
imul
adc
mov
pop
rcrb
jp
loope
cmc
leave
push
cmpsb
xor
mov
sti
pop
pop
loope
test
adc
mov
enter
test
lcall
cld
mov
pop
push
cmp
loope
sbb
hlt
push
and
or
loope
inc
pop
aad
lods
cltd
inc
lahf
movsb
adc
and
imul
clc
add
mov
imul
fisubrl
pop
inc
add
add
jno
lret
fcoms
scas
xor
bound
ds
lret
imulb
or
adc
shll
cmp
loopne
rcrl
imull
xor
inc
pushf
pop
and
cmc
mov
shll
std
hlt
lea
imul
in
xor
dec
fimuls
std
stos
lret
gs
dec
stc
ret
decl
in
jns
push
aam
shl
xor
or
xor
or
inc
jp
lods
dec
scas
insb
mov
in
std
rcll
mov
les
stos
sahf
jnp
sarl
push
adc
movsl
add
movl
sub
push
xorl
addr16
xor
test
inc
jnp
lahf
mov
add
in
jnp
imul
add
xor
lds
jno
fsubrs
mov
into
dec
outsl
jo
dec
inc
lods
icebp
les
mov
sub
nop
xchg
daa
sbbb
lcall
imul
xor
add
cli
int3
or
daa
ja
mov
lahf
xlat
cli
test
adc
mov
daa
xchg
sti
stos
int
lds
push
jp
fmull
test
rcrl
enter
dec
or
outsb
rcrb
cltd
dec
jmp
push
test
pushf
mov
das
adc
bound
xor
pop
out
inc
xor
xchg
or
pop
ret
cld
aas
testb
xor
sub
xlat
das
dec
movsl
adc
cmc
in
cmpsb
xor
push
push
int3
sbb
and
hlt
push
lret
jge
mov
int
nop
add
sub
cmc
shll
jge
in
xor
cmpsl
roll
sub
pop
fimuls
pop
xchg
adc
call
push
adc
lea
push
push
ja
imul
jne
pop
lods
sub
pop
shrd
gs
cs
enter
cmpsl
inc
sub
inc
decl
sbb
sub
incb
inc
and
pusha
push
pushf
add
inc
mov
iret
scas
mov
pusha
adc
and
decb
dec
popf
jl
push
dec
push
sbb
xor
and
lods
push
arpl
je
dec
std
jp
push
imull
cmp
push
pop
jmp
push
push
mov
jb
fdiv
xchg
test
add
jne
cs
fsubs
jl
push
hlt
pop
pop
out
dec
mov
loopne
test
cmc
aaa
movsl
sti
jb
in
or
imul
jg
jecxz
aam
jno
jne
dec
sar
pop
out
mov
test
popa
or
push
and
faddl
je
cmp
inc
imul
mov
push
xor
mov
push
out
clc
in
and
and
inc
xchg
mov
popf
cmpl
pushf
push
mov
push
rolb
push
sbbb
mov
cmp
js
inc
sub
xor
sub
loopne
fs
xor
adc
push
enter
cmc
rcrl
mov
or
les
push
stos
mov
call
hlt
mov
adc
push
lea
aaa
jae
xor
dec
sti
mov
cmp
push
mov
jp
std
jae
sbb
xor
xchg
or
xor
sub
cmpsl
adc
pushf
fiadds
pop
js
adc
pop
cmp
dec
icebp
push
hlt
push
pop
xor
jne
mov
dec
sub
shll
test
push
pop
adc
ficoms
push
cmp
xchg
mov
scas
shr
es
cmp
movsl
xorb
aas
fcoml
pop
cmp
iret
sti
fdivs
in
pop
popf
imull
mov
add
jne
xchg
cmp
sbb
xor
and
subb
pop
enter
scas
adc
jns
sti
sbb
xlat
inc
pushf
repz
mov
sub
test
inc
add
xchg
add
imul
jge
sub
jge
xor
shrl
mov
pop
arpl
scas
push
jo
push
jg
adc
and
jg
insl
fldl
or
cmpsl
cmc
stos
cltd
mov
in
arpl
or
je
push
jno
mov
mov
jbe
pop
cmc
inc
mov
adc
frstor
ss
jl
nop
jmp
dec
jp
pusha
cmp
jb
repz
pusha
jae
outsl
inc
sub
repz
fmuls
enter
cwtl
inc
les
subb
test
push
js
inc
jl
sub
push
in
loope
imul
bound
outsl
cmp
rcrl
aas
mov
lds
or
fsubl
mov
mov
dec
xor
es
sub
fwait
sub
rol
pop
loopne
jo
loop
scas
inc
sbbl
data16
xlat
leave
shll
sub
adc
add
mov
ja
int
pop
and
jnp
sub
ja
push
inc
push
roll
lret
xor
inc
adc
xor
xchg
inc
inc
mov
int
addr16
dec
stos
xor
push
rorb
dec
dec
push
mov
test
xchg
loope
pop
rorb
dec
inc
mov
sbb
adcl
xor
call
das
push
push
jle
xchg
push
orl
shlb
int
rcll
inc
and
push
and
mov
sahf
inc
and
addr16
adc
dec
and
rcll
jl
push
sub
roll
sub
jnp
xchg
dec
adcb
jecxz
mov
push
test
dec
and
aas
inc
jno
out
lds
inc
xor
das
mov
popf
dec
out
fdivs
mov
dec
pop
xchg
inc
and
lea
rcrl
inc
jae
movsl
mov
and
lods
aas
and
or
mov
and
and
and
dec
fwait
mov
jno
jnp
jb
push
aad
dec
push
ja
xchg
nop
dec
cwtl
addr16
push
or
cwtl
jnp
dec
jns
sbb
aaa
sub
movsb
sbbl
xchg
push
xorb
inc
jns
xor
push
push
arpl
and
pop
sub
mov
adc
insl
xchg
inc
and
aam
into
in
xor
and
and
pop
dec
mov
pop
sub
pop
dec
mov
addl
push
outsl
mov
mov
jnp
xchg
lahf
nop
mov
pop
pop
and
push
popf
and
push
cmp
jns
pop
mov
and
xor
inc
mov
pop
jg
popf
xchg
addl
lds
ret
pop
cmc
dec
repnz
je
jne
cmp
inc
or
cwtl
mov
iret
aam
ljmp
aas
and
sbb
shll
pusha
clc
mov
arpl
int3
dec
mov
cltd
mov
lods
adc
orb
push
xor
daa
sbb
dec
adc
xchg
clc
fimuls
je
repnz
mov
pop
xchg
and
std
jne
sbb
mov
js
lds
sbb
sub
jnp
mov
aas
loop
and
or
dec
fcmove
inc
lret
sbb
pop
addr16
cli
bound
and
movsb
sti
gs
cld
xor
xor
adc
cli
imul
push
mov
mov
jns
popa
add
jmp
dec
cmpb
std
push
push
inc
inc
out
fsubl
inc
mov
sti
xchg
xchg
push
or
dec
mov
inc
jp
push
inc
mov
cli
jle
jge
fidivl
push
test
movsb
ljmp
cmc
negb
push
xlat
xor
int
pop
or
aad
jns
lds
cltd
and
cs
sbb
das
leave
scas
test
sarl
ss
dec
sub
jbe
push
add
daa
insl
mov
or
rol
test
push
mov
push
mov
rol
add
push
das
mov
popa
mov
movsb
jbe
xor
ljmp
testb
cmc
vpsrlq
inc
xor
sub
lret
lret
xchg
mov
xchg
js
cmp
push
xor
push
jno
loope
pop
push
jge
push
es
adc
push
and
dec
pop
inc
andl
jmp
lods
sub
iret
ljmp
pop
dec
call
fstpt
mov
ljmp
divl
xchg
jns
inc
dec
icebp
int3
stos
xchg
movsb
jns
icebp
outsl
call
inc
jle
pop
xchg
or
cmc
cmp
inc
cwtl
iret
dec
jae
sub
cltd
sti
push
cwtl
jp
enter
xchg
test
lcall
add
inc
cwtl
stos
addr16
sbb
out
stc
dec
sbb
cmp
sbb
popa
pop
cmc
out
in
jge
add
idivl
sbb
xchg
or
jae
xor
mov
xor
pop
mov
lds
sarl
fisttps
push
xorl
xor
jge
inc
xor
pop
xor
pop
movsb
inc
pop
test
pop
fidivs
lret
gs
inc
or
mov
cmp
push
cmpsb
push
lahf
mov
adc
les
mov
stos
sub
sbb
movd
dec
push
adc
imul
stos
in
mov
arpl
cmp
xchg
add
in
dec
aam
imul
test
mov
jl
and
xor
add
stc
sub
push
jge
mov
jbe
sbb
add
cmp
add
or
daa
test
push
fidivrl
jne
shll
jne
pop
cmc
jmp
xlat
fmulp
scas
mov
xor
movq
cltd
js
mov
mov
xlat
jmp
push
mov
xor
jne
push
arpl
and
sub
xchg
in
push
test
std
xchg
or
jo
shll
scas
in
add
mov
pop
dec
sbb
inc
dec
aad
add
inc
fsts
cmp
sti
inc
test
dec
mov
inc
adc
jg
cmp
pop
add
push
xor
inc
mov
inc
in
inc
and
adc
adc
mov
fnstenv
aad
int3
daa
inc
mov
push
xor
inc
or
jno
mov
push
jmp
sub
inc
add
lea
iret
daa
dec
mov
sbb
xor
mov
mov
bnd
pop
xchg
xchg
sbbb
inc
rolb
daa
sub
dec
fsts
insl
addl
pop
push
and
mov
sub
inc
fwait
sub
and
adc
pop
pop
inc
daa
and
xchg
and
mov
dec
rcll
push
int
dec
push
dec
dec
popa
inc
mov
inc
inc
mov
adc
jg
push
aaa
cltd
inc
int3
sub
xchg
aam
push
xchg
arpl
lea
clc
push
pop
leave
inc
popf
andl
push
xchg
inc
aas
shll
lret
xor
lea
mov
push
and
and
xor
aad
shll
fstpt
xor
lret
popl
movsl
lea
push
dec
push
xchg
inc
leave
push
adc
popf
mov
mov
and
adcl
aaa
and
pop
popf
out
lods
pop
adc
xchg
push
arpl
cltd
push
jne
push
adcl
cwtl
test
jne
xor
and
mov
lret
push
sub
dec
jne
inc
and
jne
mov
mov
and
daa
and
and
imul
cmp
jne
divl
gs
lahf
dec
mov
movsb
add
in
sahf
mov
jmp
icebp
shr
loope
inc
subl
out
adc
out
shr
jp
adc
xor
mov
into
mov
mov
mov
push
push
insb
mov
inc
push
lret
or
and
outsb
sub
not
jmp
sub
arpl
repnz
jp
mov
pop
sub
ret
ret
push
mov
sarl
adc
push
sbb
jbe
jno
jne
loope
xchg
testb
popa
inc
sbb
dec
das
xchg
rorl
or
dec
xor
push
jae
sub
cmp
mov
or
mov
xor
aas
mov
dec
mov
and
xchg
in
and
sub
inc
addr16
loopne
jbe
jg
mov
cmp
std
arpl
sbb
notb
icebp
dec
pushf
test
call
and
jmp
cmp
and
adc
xchg
add
add
cmp
push
jge
mov
popa
jne
mov
mov
cltd
testb
push
xchg
mov
and
add
stos
jge
mov
jl
xchg
xor
movsb
daa
cmpl
add
sti
and
inc
jne
ja
pop
cmpsb
imul
std
pop
inc
test
and
shl
cmp
cmp
stos
push
lea
data16
out
sbb
out
jge
fsubl
outsb
fadds
cmp
jmp
sbb
jg
cmp
mov
sbb
lods
imul
push
mov
sub
push
xchg
ljmp
and
push
add
and
not
jp
fidivrl
and
cs
jne
pop
popf
lods
add
call
std
mov
xchg
push
mov
dec
push
scas
hlt
ja
xor
movsl
stos
test
fsts
aas
test
stc
inc
addr16
xor
fsubrl
movb
xor
or
and
and
cmc
arpl
jb
sub
push
lds
jne
xchg
scas
jae
sub
dec
cmp
cmp
push
into
icebp
sti
cli
loope
stc
pop
jl
push
push
repz
call
mov
jmp
cmp
out
out
decl
popa
sub
and
adcb
mov
or
and
shl
rolb
sbb
cmpsb
add
mov
xorb
push
test
xchg
push
add
xlat
scas
add
or
add
lods
push
and
shl
js
popa
add
pop
adc
xchg
mul
movl
mov
xor
add
sub
test
cmc
fisubrl
popa
test
cmp
pop
outsl
jp
mov
cwtl
xchg
clc
cli
cs
ds
jae
sbb
lcall
push
inc
je
mov
cmpsl
and
pop
mov
pop
stos
adcb
mov
addr16
inc
pop
fidivrl
dec
or
jnp
jne
or
inc
push
xor
sti
sbb
cmp
inc
clc
and
sbb
xchg
es
out
cmpsl
mov
mov
jae
andl
movsl
stos
inc
mov
jg
push
mov
gs
pusha
loope
jmp
mov
arpl
and
add
test
and
sub
mov
lods
test
pusha
jns
pop
enter
mov
push
jnp
adc
aam
inc
enter
and
and
mov
adc
dec
sbb
pop
dec
mov
arpl
rolb
sahf
inc
lds
mov
add
inc
test
dec
imul
icebp
bound
pop
inc
pop
xor
stos
push
rorl
and
sub
jb
call
leave
inc
xchg
pop
shlb
daa
aad
testl
adc
test
test
xchg
or
add
pop
mov
cmp
inc
insl
lret
rorl
jge
mov
xor
dec
aam
adc
and
aas
mov
mov
cld
inc
mov
lahf
xor
xor
and
push
ret
daa
dec
add
jae
jne
push
cmp
in
inc
enter
sub
inc
xchg
and
leave
cmp
mov
cmp
daa
mov
inc
and
xor
dec
mov
dec
je
inc
jne
imul
pop
inc
cmpb
sub
mov
imul
and
xchg
xchg
imul
and
dec
pop
es
sub
lahf
or
push
subl
xor
fwait
inc
insl
les
inc
daa
sub
inc
dec
cmp
inc
pop
xchg
lea
fs
nop
xor
push
pop
xchg
xor
xor
fwait
push
and
mov
lahf
movsl
xor
fwait
mov
push
aad
dec
dec
mov
xor
xor
push
xchg
repz
adc
sbbl
out
daa
addl
pop
mov
dec
xchg
inc
orb
sub
gs
iret
xorb
sub
inc
push
orl
subl
or
loope
push
mov
add
add
pop
dec
push
loope
sbb
jnp
rcrb
jo
pop
rorl
fsubr
mov
shll
add
pop
jle
nop
inc
cmpsb
sbb
jne
push
push
popa
jbe
shr
mov
adc
ljmp
pop
in
cltd
inc
mov
or
inc
sub
adc
aam
cmp
mov
inc
movsl
and
in
in
pop
enter
ficomps
xor
xor
imul
sti
add
adc
icebp
call
bound
sti
or
inc
mov
cmp
and
sub
cli
add
jge
cld
xchg
std
and
je,pn
cmp
out
ret
add
arpl
dec
add
shlb
mov
sti
inc
int3
xchg
out
ror
jmp
and
add
sbb
movsl
xor
jo
xor
repnz
clc
add
push
jo
dec
loope
xchg
xchg
push
enter
or
inc
cli
aad
jbe
lds
jl
jmp
test
inc
call
push
jg
jmp
aad
xor
enter
jae
xchg
nop
out
sbbl
and
push
pop
push
stos
sub
mov
stos
jne
cltd
imul
shl
push
mov
loop
lea
push
or
add
insb
xchg
cmpsb
shlb
js
dec
imul
js
test
fs
mov
fwait
movsb
pop
mov
bound
pop
jne
xor
jmp
dec
imul
aad
ret
je
jne
incb
pop
idivl
pop
add
push
movsb
imul
repnz
sub
inc
repz
push
push
sahf
rclb
scas
mov
ljmp
lret
adc
cmp
inc
adc
in
lea
aad
into
jmp
adc
inc
mov
movsb
fwait
push
and
push
push
sub
sti
xorl
lea
loope
jne
jge
cmc
add
xchg
mov
sub
test
int3
mov
hlt
enter
scas
ja
jecxz
and
jb
push
pusha
dec
notl
outsb
mov
clc
les
popf
jae
xlat
sub
dec
std
ja
call
xor
fisubs
push
dec
push
fldcw
cld
cmpb
fnstenv
jg
insb
pop
inc
inc
add
daa
adc
insl
cmp
dec
lret
dec
stos
mov
negb
pusha
push
popa
cmc
std
sub
push
das
xchg
into
xor
xchg
adc
data16
jae
mov
rorb
push
cmp
inc
test
cmpsl
jnp
jge
jle
sub
sbb
fidivs
ja
or
jnp
sahf
or
jl
jp
les
arpl
pusha
mov
movsl
scas
bound
mov
leave
xor
pop
jecxz
xchg
jp
or
out
jp
xor
scas
mov
xchg
shll
cmc
in
imul
repnz
fnsave
sbb
cmc
shll
jne
mov
jae
ficompl
sbb
jns
jge
pop
jle
movsl
xchg
aaa
mov
dec
sbb
xchg
imul
stos
or
push
cs
dec
adc
and
pop
fwait
sub
add
shl
enter
push
jl
cld
push
out
push
out
add
test
inc
xchg
xor
hlt
test
jp
call
pusha
mov
addr16
sbbl
pusha
fsubs
sub
mov
xor
xor
outsl
sahf
in
ret
xor
cmp
stos
subl
xor
cmp
xor
mov
je
sbb
insb
sahf
rcrb
insl
roll
scas
pop
popa
xor
pop
inc
mov
mov
push
sbb
sti
jg
ss
pop
cmc
scas
jl
sub
enter
dec
clc
xlat
fnclex
mov
xor
repz
inc
jbe
rolb
mov
xchg
cmp
dec
cli
pop
loopne
cmc
push
add
adc
ret
je
data16
push
nop
cmp
les
dec
adc
push
sub
or
sbb
call
and
clc
push
arpl
jmp
push
push
test
push
jmp
dec
mov
lret
mov
enter
loop
ss
cmp
jne
lea
leave
int3
or
add
sub
das
or
or
jae
sub
aaa
mov
imull
pop
add
inc
push
dec
repnz
push
nop
push
lock
lahf
pusha
popa
jne
outsl
hlt
sbb
jo
pop
out
push
jb
push
movsl
ret
jno
xchg
push
dec
or
adc
push
jb
add
dec
sub
mov
adc
aam
leave
sbb
xor
mov
inc
mov
les
clc
fidivs
sbb
js
or
inc
xlat
into
adc
sbb
xchg
cmpsl
dec
cmpsb
xchg
adc
push
ret
jg
push
into
cmpb
cmpsl
jge
or
xchg
pop
movsb
add
pop
add
rclb
mov
dec
push
sbb
sti
dec
add
lret
mov
les
xchg
xor
push
mov
shl
mov
mov
sti
ret
arpl
jnp
pop
sbb
idiv
pusha
in
test
notb
repnz
dec
aaa
sub
inc
xor
hlt
fwait
std
cld
les
xchg
fcomps
push
aas
das
out
dec
movsb
jno
dec
jae
std
sub
lcall
loop
rcr
stc
cmpsb
fs
inc
mov
notb
popf
addr16
jo
in
inc
xchg
pop
gs
jmp
lock
lods
mov
cmc
adc
repnz
push
jne
push
xchg
out
negb
iret
arpl
les
dec
xchg
testl
shr
lret
jmp
push
sbb
outsb
add
jle
xor
int
mov
dec
clc
std
sbb
testl
jp
int
mov
cmc
mov
cmp
pushf
leave
dec
popa
pusha
ret
jne
mov
inc
in
jg
inc
das
mov
jp
ret
call
pop
push
test
ljmp
xchg
push
xchg
pop
add
in
and
rorl
jecxz
mov
cs
sbbb
push
xor
sub
mov
out
jne
mov
mov
ret
in
repz
xor
pop
sub
sbb
pop
cli
push
xchg
shll
ds
imul
xchg
adc
push
inc
sti
loope
jmp
iret
ret
adc
bnd
sub
ret
popf
or
jmp
jge
stc
pop
movsb
sub
mov
aam
mov
test
in
fildll
ja
mov
pop
cwtl
pop
inc
inc
scas
iret
in
mov
push
movsb
add
cmp
jle
inc
adc
mov
das
cmp
sub
mov
pop
jne
cmp
enter
mov
jb
and
adc
mov
mov
and
pop
js
jmp
out
stos
aas
lret
push
push
incb
inc
mov
mov
add
mov
xor
pop
rorb
cmpsb
dec
das
stos
sub
js
shll
and
and
push
jp
cmp
cmp
sbb
movsb
push
mov
lock
sbb
sahf
lds
and
jp
test
mov
dec
mov
push
mov
cmp
jne
mov
cmpl
cltd
enter
nop
adc
clc
push
mov
je
jle
xchg
or
xchg
scas
movsb
jmp
aaa
addl
fmuls
and
mov
adc
push
pop
sub
loopne
cld
and
add
push
adcl
loope
fimull
fucomi
aam
mov
iret
scas
xor
xchg
aaa
icebp
insl
aam
jns
mov
push
je
jmp
jns
ret
xor
sub
and
out
and
pop
ret
std
cld
adc
sub
jmp
call
out
ja
sub
fwait
dec
adc
movsb
sbb
mov
mov
scas
jecxz
fnstsw
enter
movsl
out
and
cmp
fiaddl
sub
adc
inc
psrad
call
pop
cli
ljmp
shl
jns
sub
frstor
sub
xchg
test
jae
add
jnp
or
dec
test
cwtl
in
xor
xchg
push
inc
lcall
jns
inc
sbb
mov
cmc
sbb
movsl
mov
or
aaa
mov
roll
insb
lds
jmp
cld
cmp
imul
sub
arpl
adc
and
lods
mov
sub
je
dec
cmc
out
test
mov
dec
fwait
dec
and
les
into
push
test
inc
lds
jge
icebp
call
xor
cmpsb
mov
dec
jl
and
cmc
push
cmpl
inc
loope
push
add
adc
cmp
stos
imul
mov
and
xor
sub
mov
push
test
mov
sbb
popf
repz
fs
jge
mov
icebp
or
mov
cwtl
shrb
xchg
in
ljmp
mov
ret
std
xchg
pop
popa
rclb
aam
adc
and
cmp
dec
or
pop
mull
push
iret
mov
inc
fsubrl
inc
xchg
push
popf
inc
loope
cmp
xchg
mov
sub
imul
xor
jns
pshufw
add
xchg
in
xor
push
add
sub
jle
jne
loop
in
addr16
mov
xchg
ds
outsb
jle
addl
mov
in
lds
or
aam
pushf
adc
jae
pop
sbb
sub
scas
jp
outsl
mov
lcall
cld
sub
inc
stos
out
mov
push
cmp
inc
psrlw
push
icebp
xchg
nop
inc
pusha
add
add
mov
jae
int
test
pop
js
mov
push
adc
push
addl
test
lds
push
movsl
sub
adc
jmp
cmpsl
mov
mov
mov
xor
mov
and
ss
push
dec
xchg
enter
cmp
mov
cli
je
push
insl
jne
loope
gs
insl
mul
xor
jnp
jge
mov
out
ret
sbb
mov
lds
hlt
insb
xor
dec
pushf
jl
xchg
cmp
adc
ret
lahf
push
xchg
push
je
test
add
mov
mov
add
jno
ret
bound
add
jns
cmp
loopne
neg
cwtl
popa
pop
fs
push
xchg
jns
jge
or
dec
lret
push
push
dec
movb
sbb
jnp
addl
pop
jae
cmpsl
jecxz
jle
or
out
loope
mov
push
mov
xchg
jns
mov
dec
xor
sti
test
push
push
lahf
xor
mov
dec
sahf
out
pop
pushl
dec
or
inc
leave
addr16
mov
jp
cmc
sbb
mov
push
sub
loope
es
xor
sub
xor
ja
repz
dec
fmuls
lods
add
sbb
or
pop
jecxz
cltd
iret
dec
inc
es
hlt
fptan
fistps
aam
jg
sbb
test
sub
icebp
cmp
ds
lds
mov
loopne
jae
bound
lcall
loope
outsb
xchg
icebp
jmp
jne
jb
scas
std
stos
push
ffree
cld
cmp
fisubrl
pop
rclb
sub
sub
sub
dec
mov
cld
mov
inc
inc
jp
and
xor
repz
xor
lret
add
mov
xor
add
pop
xlat
out
popa
jae
frstor
jbe
movl
pushf
je
lahf
sbb
fcoms
mov
rcll
lds
sarb
xlat
mov
shlb
scas
lods
or
lea
fiadds
pop
into
ss
push
dec
cld
and
das
popf
repz
icebp
adc
push
mov
jle
shl
and
jmp
scas
lahf
idivl
in
jne
in
repnz
testl
xchg
mov
daa
fs
std
and
in
cmpl
sbb
and
test
adc
pop
fs
jp
and
icebp
cmp
movsl
mov
xor
in
add
je
movb
adc
imul
jle
and
add
pushf
xor
mov
jg
and
sub
cmp
loope
sbbl
pop
ds
fadds
xorb
adc
in
sub
into
sbb
mov
sub
addr16
or
pop
mov
in
sbb
test
aad
and
xchg
pop
sbbl
sahf
pushf
test
xlat
cmp
jg
sar
jle
hlt
mov
push
push
xchg
sbb
enter
notb
jl
hlt
and
inc
popa
stos
ret
cmc
add
std
sub
and
nop
jmp
push
push
pop
lods
cmp
inc
call
scas
sbb
loop
jge
dec
fdivrl
add
add
dec
or
std
and
xchg
ret
add
jb
insb
shld
inc
mov
movsb
or
sti
jne
push
mov
and
outsb
lcall
loope
pusha
movsb
inc
xchg
imul
mov
push
push
jg
xorl
sti
push
mov
jp
ret
jb
popf
repz
inc
mov
push
loop
and
dec
or
jg
sbb
adc
pop
cltd
or
in
jl
imul
pop
push
sbb
pop
call
xor
aaa
adc
mov
inc
xor
jnp
add
jno
pop
mov
cmc
shll
and
fisttps
mov
in
rorb
popa
jnp
xchg
sahf
into
dec
jno
jne
dec
mov
xchg
jp
inc
pop
insl
and
add
std
mul
and
jge
or
das
test
popa
loope
inc
loope
loopne
dec
jae
dec
incl
imul
add
mov
sub
enter
cs
dec
je
xchg
std
out
cmc
and
inc
out
test
dec
dec
xor
std
xchg
cmpl
sbb
pop
outsl
das
jecxz
jne
xchg
fucomp
mov
sub
mov
cmc
fnsave
lcall
inc
and
sbb
jge
loop
movsb
scas
movsb
sub
inc
dec
pop
cltd
movl
test
lea
pop
arpl
sub
ja
mov
pop
subl
je,pt
pop
lea
jge
outsl
inc
jo
push
pusha
xor
sub
cmc
sahf
cld
jle
bound
inc
int
jp
out
daa
lds
test
jno
cmp
test
cmpsl
loope
repnz
jns
or
sub
mov
mov
jge
mov
dec
inc
and
cmp
xchg
out
sbb
sub
sbb
push
inc
xchg
xor
xor
push
jns
mov
sti
dec
dec
jne
sub
bound
aas
cmp
push
sahf
es
push
shlb
fs
push
lahf
mov
dec
fnstenv
and
test
dec
aaa
mov
outsl
dec
stos
test
dec
and
xchg
stos
jns
add
sub
push
subl
pop
xchg
jne
jp
xchg
push
push
mov
sub
dec
popa
sub
inc
mov
addl
push
cmp
test
and
mov
dec
push
rorb
xor
xchg
jo
inc
mov
daa
insb
dec
adcl
test
push
jne
xchg
dec
loop
in
pop
orl
sbb
in
dec
xor
insl
jae
pop
mov
test
mov
xchg
push
push
pop
dec
test
sub
fwait
test
jae
pop
push
xchg
xchg
inc
push
xor
xor
pop
xor
lea
xchg
xchg
inc
sub
lea
nop
inc
xchg
orl
test
pop
stos
xchg
test
outsl
pop
rcrl
leave
sbbb
and
mov
and
push
sub
mov
xchg
aas
mov
sub
movsl
pop
inc
jnp
xchg
leave
jg
andl
dec
sbb
jnp
das
mov
dec
sbbl
popa
fwait
sbb
dec
push
inc
push
ret
xor
push
dec
pop
enter
jmp
xchg
push
push
or
xchg
dec
and
arpl
xchg
xchg
push
jns
dec
adcb
and
pop
imul
ja
xor
xor
sub
xchg
insb
cltd
aaa
xchg
xchg
xchg
push
jb
std
or
mov
stos
and
shl
mov
push
call
test
les
mov
mov
pop
dec
lea
xchg
lock
mov
ret
aaa
stc
push
inc
xor
jp
roll
xor
packuswb
xlat
scas
lea
cmc
in
mov
sarl
and
cmp
sub
loopne
mov
pop
test
clc
pusha
cmp
sub
sub
push
xlat
cmc
mov
jnp
xlat
sub
roll
fdivr
or
in
xor
mov
pop
fistpl
je
inc
adc
mov
dec
out
push
inc
out
fwait
push
shlb
leave
sbb
mov
add
frstpm(287
inc
punpckhwd
sti
fnstcw
pop
or
lahf
sub
xor
scas
dec
lcall
lods
fwait
jae
xor
fnstenv
jne
dec
packsswb
adc
jae
cld
aaa
jecxz
std
jecxz
inc
adc
in
jb
xchg
fsubr
pop
add
or
pushf
xor
js
push
fldenv
imul
xor
jg
pop
data16
scas
cltd
push
rorl
inc
mov
mov
jmp
aas
jne
icebp
pop
pop
pop
movb
sub
std
add
popa
xor
fwait
sbb
jae
mov
je
and
adc
add
and
cmc
ficoml
jg
adc
ds
and
adc
dec
dec
cmc
xor
xor
repz
ret
dec
in
and
jne
jmp
or
je
shll
imul
in
mov
push
sub
aaa
and
lea
xchg
cmc
mov
adc
dec
aam
ja
lret
inc
mov
in
and
push
jne
or
push
rorl
pushl
cmp
les
leave
test
mov
shlb
sbb
jb
mov
ret
mov
sbb
lret
xchg
dec
jb
mov
pop
mov
mov
nop
cmc
pop
xor
scas
sbb
xor
fldenv
sti
xor
xchg
daa
insl
cmc
movsl
pushf
loopne
ja
arpl
xchg
outsl
enter
adcl
sarb
icebp
call
push
repnz
inc
out
adc
vmovups
dec
jne
or
les
xchg
inc
and
insb
aaa
dec
push
mov
jns
fisubl
mov
inc
repz
or
sub
mov
mov
fs
pop
add
xor
outsb
les
icebp
push
add
push
lahf
jge
aad
inc
mov
imul
and
pusha
cli
test
xlat
pop
mov
sub
std
insb
mov
mov
pushf
jp
sbb
jns,pt
data16
cmpsl
mov
insl
and
int
es
xchg
aas
or
lods
and
lcall
inc
daa
xchg
push
aam
sti
cmpsb
test
xchg
jg
vpxor
out
std
sbb
std
jecxz
sti
into
je
xor
add
and
jle
decl
sar
scas
xor
or
dec
mov
sbb
out
lods
ss
pusha
inc
push
mov
leave
xor
sub
mov
call
jns
xor
pushaw
jge
test
test
mov
sbb
mov
movsl
push
lcall
add
sbb
aas
jle
adcl
arpl
mov
adc
pushf
je
sbb
daa
jb
movsb
sbb
jge
push
jae
cmp
sbb
mov
adc
push
sbb
aas
mov
sti
mov
push
inc
lret
movl
js
pop
add
jp
ljmp
jp
aas
ficoms
or
call
divb
jl
inc
pushf
xor
pop
sti
or
aad
jns
stos
idivb
in
push
pop
test
cltd
mov
loopne
or
inc
ja
repz
mov
dec
enter
in
xchg
xor
mov
sub
pop
lea
adc
out
ret
dec
gs
popa
lds
stos
push
arpl
out
cmp
jb
sbb
xchg
adc
dec
xor
stos
xchg
add
xor
cs
lods
push
add
pop
jae,pt
sarl
popl
arpl
inc
fcoml
je
pop
sub
sbb
frstor
push
pop
jle
mov
mov
ja
jbe
cwtl
lret
lds
jle
call
scas
add
and
notl
xlat
xor
jae
rolb
fbld
mov
loopne
jp
mov
mov
inc
jbe
jle
dec
out
inc
rcrl
mov
or
jne
mov
jle
inc
xorb
mov
lds
stos
push
mov
cmp
mov
aad
pop
pop
gs
sahf
xchg
adc
icebp
les
or
xchg
jae
cmp
pop
inc
adcb
pop
subl
shll
push
adc
inc
ret
or
jecxz
or
cmp
sti
or
adc
add
push
cmpsb
nop
adc
inc
sub
fstps
push
mov
mov
inc
xorl
movsl
push
cmpsb
mov
cmp
je
dec
gs
lds
outsl
push
leave
xor
aam
xchg
outsb
adc
fs
pop
jmp
mov
icebp
inc
cmpl
fnstsw
movsb
mov
xchg
movb
movsb
dec
cmc
nop
test
pop
push
mov
mov
orb
pop
adc
movsb
fldl
mov
jle
push
mov
dec
add
xor
push
sbb
adc
jno
and
pop
adc
arpl
and
mov
hlt
gs
push
sbb
cltd
movsb
fsubr
cmc
ficomps
popaw
bound
pop
aad
rolb
out
dec
pusha
sbb
cmpb
mov
mov
inc
pop
enter
cmp
lods
movl
dec
cmpsb
push
xchg
gs
cltd
xor
clc
xchg
orb
mov
test
cmc
pop
pop
xlat
add
cltd
cmp
push
sub
ret
inc
xchg
cmc
daa
mov
dec
xchg
loopne
xor
inc
xor
mov
or
cmc
test
xlat
fisubs
sub
sti
roll
popa
xor
adc
stos
sub
rolb
stos
push
cmp
repz
out
jle
xor
pop
sbbl
jg,pt
sbb
ficomps
add
xchg
js
les
jb
lret
inc
xchg
or
pop
inc
xchg
dec
sti
fldenv
iret
out
xor
adc
push
lea
lret
add
imul
pop
cmpsl
inc
fsqrt
orl
aas
mov
jno
inc
into
in
push
mov
leave
and
or
into
das
push
xchg
push
push
ljmp
ljmp
mov
inc
inc
dec
dec
pop
jmp
sub
inc
and
push
loope
add
xor
adc
and
pop
faddp
fsts
imul
pop
and
or
and
pop
xor
fdivr
or
inc
daa
and
push
jecxz
bound
dec
adc
and
stc
xchg
pop
shl
xchg
pop
xor
test
sub
mov
add
lock
cltd
sti
push
xor
inc
inc
and
jae
cltd
adcl
fwait
mov
test
pop
iret
adc
test
outsl
cmp
inc
pop
out
dec
dec
je
inc
inc
fwait
aas
sub
popa
cmp
xor
daa
mov
pop
sub
dec
movsl
push
pop
mov
fadds
jnp
jae
movsl
mov
mov
pop
sbbl
popf
xorl
stos
mov
jno
xor
dec
daa
test
lea
dec
test
dec
dec
sub
sub
jnp
dec
lds
jge
dec
int
lds
sub
xchg
inc
pop
and
aad
and
rcll
pop
mov
push
and
stc
daa
xchg
popa
aam
lds
std
cltd
and
cmp
fcoms
test
jge
lea
out
mov
aad
inc
addr16
in
inc
jnp
andl
test
xchg
addr16
pop
push
xchg
cmp
test
pop
aaa
test
test
mov
addr16
popa
nop
dec
adcb
mov
pop
orl
sub
daa
jae
dec
mov
inc
xor
das
imul
scas
sub
addr16
or
cmp
sahf
xlat
adc
cmp
int
push
cltd
or
mov
add
sub
adc
aas
loope
cmc
dec
fstps
pop
div
fldl
out
pop
data16
mov
dec
test
lds
cltd
mov
ds
pop
xor
out
aaa
je
cwtl
scas
cmpl
sub
add
push
out
inc
mov
and
jmp
inc
push
mov
fs
les
cmp
aas
jne
shlb
lahf
stos
add
lahf
adc
fisttpll
adc
xor
int3
rcrl
aaa
xor
icebp
mov
jne
ds
fdivs
inc
xor
pop
daa
mov
push
fnstenv
and
mov
movsb
pop
jbe
arpl
jecxz
sarb
popl
test
movsl
mov
aam
fisubl
mov
test
jne
sbb
stos
dec
out
call
ret
xor
xchg
js
push
ret
cmp
adc
or
ds
or
ljmp
das
mov
xchg
cs
jg
subl
mov
jno
gs
sbb
dec
jne
das
xor
sub
push
mov
add
mov
in
insb
stos
xor
imul
jne
add
into
jge
imul
push
ljmp
xchg
test
xor
adc
or
sbb
cmp
or
cmc
sub
addr16
jecxz
push
pop
lock
test
dec
jg
push
lcall
jge
js
movsl
movsb
ja
lea
inc
cltd
add
xlat
inc
sti
cmc
pop
call
les
pop
jle
sub
hlt
fidivl
sti
mov
outsb
repnz
fcoms
xor
mov
out
shll
lahf
mov
inc
stos
push
mov
adc
push
dec
jne
insb
ss
mov
dec
stos
sub
sub
enter
test
test
or
sub
data16
sub
cmc
enter
adc
or
pop
subb
jb
insl
inc
xor
xor
nop
cmp
in
pushf
jae
jne
and
jo
sbb
jno
inc
pop
inc
out
inc
subl
testb
fisttps
test
iret
insl
xor
icebp
enter
jge
shll
jecxz
xchg
mov
enter
cmc
stos
das
and
inc
or
test
sbb
jmp
add
testb
lcall
imul
pop
out
xchg
push
pop
rorb
mov
in
cld
loop
inc
cmp
jbe
add
sbb
push
mov
ljmp
push
stos
lret
xchg
lods
sbb
pop
adc
xor
cmp
cmp
and
test
push
js
and
lock
inc
jne
mov
nop
jmp
adc
or
sti
mov
xchg
lret
sbbb
movsl
sub
rolb
andb
or
cmp
sbb
pushf
lds
adc
subb
scas
ret
sbb
lea
adc
ljmp
hlt
inc
jmp
int
out
daa
fdivp
push
or
outsl
sbb
inc
sub
mov
xor
push
mov
arpl
addr16
clc
mov
inc
les
mov
loopne
mov
pop
inc
mov
in
lods
nop
das
dec
cmc
mov
add
mov
lea
sub
nop
ljmp
cmp
scas
add
jp
pop
cld
mov
das
movsb
sbb
jo
test
call
or
jle
push
lds
pop
cmp
stos
push
push
mov
or
sarb
mov
pop
dec
stos
jno
test
xchg
xchg
scas
sub
and
andl
rcr
push
out
mov
add
sub
xchg
push
cld
cmp
loopne
into
xchg
jno
and
popl
xlat
sbb
jne
insl
cltd
aam
ret
jne
and
dec
out
ljmp
jge
mov
xor
sbb
sbb
daa
popf
aam
and
lods
movsb
lock
push
fdivs
sarl
xor
std
sahf
test
adc
sbb
sahf
xchg
sub
hlt
fldcw
adc
jae
lock
jmp
daa
mov
movsl
inc
adc
test
and
or
or
inc
ja
sub
push
xchg
ja
jg
and
jp
ljmp
jns
movb
ret
dec
fldenv
icebp
std
xor
xor
cmc
jne
mov
insl
inc
xchg
js
das
rcl
sub
arpl
or
rclb
cli
enter
and
fsts
jg
enter
pop
and
dec
sub
das
pop
push
push
lahf
push
leave
scas
out
les
pop
scas
or
jmp
sbb
pushf
movsb
pushf
clc
js
dec
outsl
pop
cmp
cmp
push
jo
and
test
test
xchg
mov
adc
push
xor
lret
mov
or
ljmp
dec
add
je
add
dec
or
popf
popa
or
ret
dec
inc
dec
xor
test
fwait
mov
add
pop
ret
repnz
adc
in
and
sub
xchg
lret
jl
adc
insb
mov
sub
push
pop
dec
cmc
lret
out
cmpsb
pop
ljmp
pop
jne
sub
bound
sbb
scas
dec
shll
inc
sub
enter
and
cmp
mov
ret
xchg
arpl
xchg
call
xchg
ret
inc
hlt
popa
adc
stc
ret
loope
iret
pop
jl
xchg
add
les
jne
loope
cmc
and
sub
fcomps
push
scas
push
call
gs
cmp
dec
mov
lock
out
cmp
lds
add
outsl
and
mov
dec
sub
mov
adc
lea
cmp
jmp
js
std
fcompl
out
jbe
add
cmp
or
arpl
popf
pop
js
jo
sub
ret
mov
or
push
popa
int
inc
mov
test
xor
pop
xorl
pop
sub
or
add
push
lret
enter
dec
movsl
mov
sub
arpl
cmp
cld
xor
sti
fnstsw
clc
pop
sbb
mov
cmp
call
xor
xchg
adcl
push
repz
lock
dec
dec
les
sub
cld
fcmovnb
jle
rorl
sbb
mov
xor
cmp
push
or
out
mov
cmpsl
jl
mulb
lods
xor
int3
cmc
mov
jbe
dec
hlt
add
repz
imul
add
mov
lahf
jb
jne
mov
add
push
pop
and
inc
push
cmp
fs
pop
inc
arpl
push
pop
adc
call
xchg
in
inc
jo
test
loopne
insl
jb
outsb
les
xchg
sub
bound
popf
adc
ljmp
inc
xchg
mov
test
xchg
ds
test
mov
sti
cltd
mov
cmc
and
and
jmp
shl
xchg
jo
lahf
flds
pop
add
cs
popf
pop
sbb
xchg
out
adc
mov
popa
arpl
ss
adc
call
les
cltd
jo
out
mov
jae
jp
lea
inc
les
sub
or
movsl
sbb
cmpsl
sbb
int
cmc
pop
dec
decl
add
pop
cli
jl
mov
adc
shl
addr16
test
fisttps
cwtl
push
negl
cmp
jo
cltd
sahf
mov
cwtl
or
cmpl
sub
repnz
subb
pop
jae
sub
fiadds
sub
jl
or
test
test
ljmp
xor
push
cmpsb
inc
xor
out
and
mov
jne
adc
push
push
les
cs
ret
jp
push
adc
es
stos
cwtl
in
xor
mov
bound
add
dec
fiaddl
int
xchg
ja
inc
ds
mov
inc
sti
lea
cmp
and
loopne
mov
std
clc
inc
dec
xor
scas
ja
push
adc
in
faddl
push
mov
xchg
push
call
das
sbb
jns
lods
xchg
rorb
xchg
mov
test
call
scas
and
inc
adc
cmp
push
fmull
xor
idivl
adc
int
outsb
sti
mov
sub
add
dec
out
andl
ret
subl
pop
jmp
add
icebp
fcmovb
pop
jno
adc
mov
movsl
jp
xor
jb
test
dec
je
inc
xor
jl
ficompl
push
rol
movsb
sub
pop
or
outsl
cmp
xor
test
jae
and
mov
sub
cmp
xchg
pushf
lds
lds
xor
dec
jbe
dec
jg
pop
int
in
lds
leave
dec
cmp
inc
push
cld
daa
pusha
dec
pop
jle
inc
movsb
daa
mov
add
pop
jnp
loope
das
xor
sbb
int
fwait
or
xor
jnp
adc
movsl
mov
cli
sti
dec
pop
jl
mov
inc
jecxz
ss
arpl
dec
jmp
out
cmpsb
sbb
out
jmp
dec
inc
ret
dec
mov
xor
lcall
repnz
frstor
pop
insb
xchg
jns
mov
mov
dec
stc
sbb
pop
pusha
sub
inc
jbe
add
xorb
loop
out
ja
ret
fldcw
inc
pop
addr16
subb
fcoms
iret
xor
bound
or
mov
out
xor
jo
inc
aad
jle
dec
out
dec
test
mov
iret
push
mov
inc
insl
and
jno
mov
mov
inc
pop
xor
ljmp
xchg
lods
loope
cmc
ret
cwtl
insb
daa
mov
or
lea
xor
xchg
dec
sahf
shrl
and
enter
cld
orb
jmp
in
les
pop
xor
lods
xchg
aad
daa
pushw
push
fisubs
add
jmp
dec
xchg
ljmp
xchg
cmc
pop
push
add
pop
xchg
sbb
mov
jo
sahf
in
int
adc
hlt
add
jle
outsb
stos
movsb
xor
mov
inc
jmp
sub
les
outsl
jne
scas
hlt
sbb
unpcklps
cs
das
enter
leave
adc
stos
shl
xchg
movb
testl
dec
push
cmp
sahf
jo
mov
movsl
test
fmull
xor
push
out
aas
cli
or
in
mov
sub
push
dec
cmp
icebp
xor
stos
cwtl
add
into
push
mov
leave
or
rclb
js
ret
imul
jnp
jns
movsl
sbb
mov
push
flds
mov
addr16
loopne
xor
cmp
iret
add
push
pop
push
push
out
addr16
or
outsl
dec
pextrw
sub
xchg
leave
mov
into
push
push
pop
fnstenv
and
mov
inc
sbb
test
and
pop
fcoml
jns
push
test
adc
pop
outsl
stc
out
jg
stc
addb
adc
mov
cwtl
sbb
jb
cli
imul
stc
loope
jne
push
mov
shrl
fstpt
fldenv
mov
out
orl
shlb
out
fwait
add
push
pop
cmp
je
movb
out
fimull
repz
fwait
loope
loope
out
popa
neg
xor
rcll
int
mov
dec
adc
sahf
add
add
mov
popa
adc
jo
arpl
in
xchg
test
jle
mov
adc
addr16
inc
dec
cmc
iret
movsl
sub
cs
cltd
ror
lds
out
jecxz
testb
setl
fldt
jo
lahf
or
sbb
out
jecxz
das
and
jmp
notb
xchg
or
mov
inc
mov
inc
jp
pop
inc
or
cmp
lret
pushf
in
jle
jp
sub
jbe
mov
movsl
cmpsl
push
cmp
and
dec
es
and
je
xor
popa
in
lock
add
push
cmpl
ds
sbb
xchg
into
xor
outsl
or
dec
into
sbbb
adc
xor
into
sbb
or
out
cmpl
sar
push
adc
mov
dec
mov
rclb
loopne
js
mov
out
pusha
jmp
mov
adc
mov
xor
imul
cltd
aas
test
lea
xor
jle
cwtl
cltd
pusha
inc
cmc
mov
jno
jne
imul
dec
das
scas
jp
xchg
push
rcrb
out
and
pop
movsb
clc
xchg
pop
mov
mov
imul
dec
push
mov
loope
inc
clc
mov
push
adc
cmp
outsb
sbb
xlat
sahf
jne
adc
sub
cmpl
mov
std
cwtl
pop
mov
and
and
cmp
movsb
stos
pop
push
jmp
jle
and
arpl
test
cs
out
rolb
mov
stc
shlb
cli
in
push
scas
fnstcw
ret
call
jae
pop
ret
shl
sub
rolb
cli
outsb
cmp
pop
scas
dec
cmp
out
popa
push
jae
or
fsub
adc
int
or
cld
in
insb
lret
jne
xlat
in
adc
dec
insl
sub
out
sub
lock
push
incl
jns
push
cld
push
pop
mov
out
push
inc
aas
testl
inc
sbb
sub
and
mov
cld
dec
call
pusha
xchg
cmp
int
insb
sarl
popa
pop
and
adc
pop
arpl
jne
jne
mov
repnz
imul
sahf
rorl
xor
mov
imul
imul
dec
xchg
je
push
sub
jo
fs
je
js
or
jmp
fs
sar
pop
das
outsb
add
popa
aaa
and
pop
pusha
jp
pushf
js
flds
popa
sti
cli
jg
insb
adc
xor
add
ret
subl
and
pop
xchg
mov
fisubrs
mov
or
push
mov
adc
stos
cltd
lahf
pop
incb
jge
rorb
and
shrl
lea
addb
jno
dec
seto
jne
pop
or
jo
dec
push
jne
or
sbb
mov
sbb
shlb
not
lcall
jmp
scas
or
nop
xchg
adc
jnp
mov
fimull
mov
lods
data16
call
jbe
adc
jg
push
cmp
mov
vmulsd
lahf
or
push
movb
pop
pusha
jmp
adc
lods
mov
xlat
pop
call
enter
dec
ret
xor
xchg
cs
xchg
in
jge
sbb
iret
xor
mov
pop
bound
fwait
test
pusha
aas
stos
shl
das
or
fsubrl
mov
jno
sti
rcr
jecxz
dec
loopne
mov
jp
jae
rolb
push
jo
outsl
imul
arpl
cmpsb
insl
sbb
mov
pusha
incb
arpl
aad
or
inc
nop
push
xor
mov
jne
cs
pop
shrl
es
loop
mov
es
adc
andb
cmpsl
ja
std
cmc
xchg
jl
and
pusha
fstpt
std
sbb
out
and
fnstenv
cmc
imul
insb
inc
lahf
or
cmp
pusha
mov
mov
jle
jg
shlb
dec
popa
jb
push
scas
xchg
mov
mov
or
test
aam
aas
stos
and
popf
lods
int3
or
std
aaa
dec
dec
inc
xchg
data16
jle
adc
sahf
xchg
daa
pop
cmc
cmp
push
jecxz
jne
lock
test
test
js
lss
mov
lret
pop
fcmovnb
sahf
in
mov
and
sti
iret
xor
sarl
and
xor
push
aas
fists
or
imull
test
push
sub
shl
sub
stc
je
xor
push
aad
sbb
jne
lcall
nop
test
push
xchg
or
je
push
mov
cmp
jne
push
out
xor
sub
imul
scas
push
shlb
jbe
mov
push
repz
or
push
mull
inc
lfs
push
stos
cmpsb
push
adc
shll
push
mov
push
fdivrl
movsl
ljmp
rcll
jns
es
in
and
xchg
int
mov
adc
fs
cmp
call
and
inc
scas
ds
pop
hlt
jge
mov
repz
push
mov
adc
push
scas
sahf
nop
sarl
gs
xchg
in
and
scas
mov
sahf
and
mov
and
notl
sti
test
sub
mov
loop
xor
xorl
ret
cmp
pop
ja
movb
jmp
pusha
popl
cmp
or
movsl
or
clc
mov
mov
js
xchg
mov
push
jge
imul
popa
cltd
imul
pop
or
inc
decb
jb
lds
repnz
scas
xor
xor
es
push
shlb
in
fbstp
cli
loope
icebp
add
and
lcall
jmp
jge
rcll
shlb
add
je
xchg
ret
push
push
test
jl
jne
jmp
sub
les
bound
dec
cmc
xor
mulb
jne
mov
scas
bound
and
enter
pop
sub
sub
adc
push
jno
jecxz
push
idivb
bound
xor
in
pop
std
outsb
xchg
fs
push
shlb
out
dec
cmp
cs
sub
cmc
ljmp
dec
sbb
pusha
inc
inc
movsl
pop
loope
aam
in
es
or
pop
pop
push
loop
popa
stos
arpl
sub
mov
dec
xor
clc
insl
lret
add
xor
xor
mov
inc
jne
fstpl
mov
cmpb
mov
pop
sbb
rol
insl
dec
daa
pop
mov
out
jb
fldenv
sub
jge
or
xor
in
rolb
cmp
fsub
xchg
sbb
popa
xchg
jno
mov
mov
jb
stos
jg
js
stos
dec
dec
stos
cs
pop
aad
insl
cmpl
in
sub
gs
scas
sbb
mov
pop
shrb
jp
mov
ja
or
sub
sti
cli
outsb
inc
xorl
sti
bound
add
adc
mov
daa
jae
inc
add
push
push
data16
fimull
mov
dec
sbb
pop
testb
dec
jbe
ja
popa
add
jns
push
inc
loopne
repnz
mov
dec
stos
adcl
jge
je
push
jae
add
pusha
or
insl
jne
xchg
jle
decb
push
add
das
rcrb
adc
sub
or
sti
sbb
gs
pop
push
ss
dec
add
outsb
mov
pop
cmc
cmp
bound
rclb
ljmp
jo
imul
aaa
pop
cltd
jae
inc
jbe
test
mov
inc
orl
enter
adc
rcll
xor
cmpb
mov
jecxz
jl
and
ja
mov
jmp
mov
push
pusha
shll
jne
and
push
in
daa
push
sbb
insl
adc
or
xchg
dec
adc
addl
imul
sub
mov
mov
dec
sarl
fildll
out
lea
popl
jne
sbb
outsb
fisubrl
xor
pushl
loopne
roll
add
inc
fnstcw
push
mov
xlat
and
inc
repz
mulb
jecxz
push
and
pop
stc
mov
mov
sub
inc
mov
lods
sbb
mov
les
inc
jg
push
dec
add
loop
dec
mov
dec
or
push
movsb
pop
jbe
adc
outsl
fsubl
in
and
rcrl
icebp
call
clc
fistpll
lahf
outsb
push
loopne
lods
push
xchg
inc
xor
popa
ret
push
fld
cltd
int3
mov
rorb
gs
leave
inc
pop
movb
arpl
push
xor
push
cs
int
in
jp
es
ficoml
test
nop
inc
xor
arpl
xchg
fdivrl
pop
xor
mov
jb
jmp
pop
stos
addl
into
inc
cmc
pop
aaa
popa
add
dec
jp
mov
jne
enter
pop
jecxz
push
ret
xor
in
push
je
idivb
ss
popa
cli
pusha
xor
mov
div
xchg
jg
lds
sti
movsl
cmp
loopne
ss
push
add
repz
pop
mov
dec
push
sar
nop
jns
xor
jne
jle
pop
adc
ds
les
sub
xchg
int
cmpl
sarl
sbb
shlb
rcll
and
mov
aad
mov
and
or
test
dec
and
mov
fucomp
cmp
dec
in
jne
xor
and
aad
xor
les
stos
mov
loop
stos
pop
adc
and
cmp
sub
xchg
scas
pop
or
push
les
or
mov
push
sbb
ja
loope
dec
pop
lods
sahf
add
xor
dec
les
shrl
jge
push
mov
mov
movsl
mov
rcr
cli
loopne
push
jmp
ds
dec
jb
andb
pop
es
push
xlat
lds
xchg
mov
fsubl
dec
call
test
and
in
gs
push
fwait
inc
arpl
out
add
jl
push
test
mov
scas
addl
popl
jne
xor
int
xor
xchg
jge
addl
je
jle
pushf
sti
and
lock
mov
sub
cmpsb
jne
ret
stos
mov
arpl
imul
mov
push
bswap
in
adc
xorl
pushf
adc
into
pop
fs
popa
jmp
jmp
xchg
cmc
sbb
daa
rolb
dec
mov
data16
es
pop
cmpsl
lods
je
stos
add
cld
mov
cmpsl
les
push
jecxz
push
or
ret
ds
stc
imul
dec
jle
std
call
xchg
jae
inc
icebp
adc
sbbl
mov
loope
in
lahf
das
dec
call
inc
xor
hlt
jmp
xchg
add
dec
mov
fimull
mov
push
in
jno
push
stc
scas
add
inc
in
jl
popa
lods
xchg
sub
rorl
icebp
mov
push
pusha
in
ret
jg
and
in
add
out
mov
jne
cmp
outsl
xchg
sbb
pop
xchg
cmpl
fidivrl
dec
mov
push
xorb
cli
pop
pop
cli
pop
enter
cld
andb
popa
je
test
push
mov
add
jne
inc
pop
lock
mov
push
repz
sbb
jp
pop
and
sbb
xor
or
testl
lcall
xor
jns
nop
xor
andb
inc
cmp
lret
int3
roll
cmp
in
jmp
test
rclb
inc
lea
pop
fildl
dec
or
lret
push
addr16
add
jle
inc
iret
dec
push
adc
sar
inc
dec
cmp
inc
xchg
daa
pop
rcr
push
and
and
sub
push
and
and
jmp
arpl
xor
fldenv
jl
inc
lock
insl
and
mov
aas
sti
xchg
jno
or
inc
fbstp
and
xor
scas
or
int
inc
pop
xchg
sub
rorl
rcrl
pop
dec
mov
push
mov
inc
xor
inc
int3
jge
push
call
lock
jo
and
popl
dec
lret
lea
xchg
pop
fxch
stos
inc
lret
push
cmp
lea
lds
mov
inc
sub
adc
mov
xor
inc
xchg
sub
gs
fwait
popa
out
inc
xor
and
sarl
adc
pop
mov
mov
push
inc
ja
pop
add
aad
push
subl
mov
leave
inc
jno
jns
xchg
and
roll
inc
xchg
sub
jge
push
pop
cmpsl
or
push
mov
push
mov
int3
ja
test
xchg
or
jno
mov
mov
xor
dec
cltd
mov
and
push
int
adc
les
dec
and
xor
popa
add
popf
mov
test
dec
and
xor
sbb
mov
and
mov
xchg
test
lea
aas
or
sub
jne
iret
stos
mov
push
in
imul
repnz
dec
pop
inc
and
cmp
mov
adcl
adcl
cld
jmp
pop
sub
sbb
adc
into
icebp
xchg
loope
lret
push
int3
addb
incb
cmp
inc
xchg
data16
or
gs
cltd
xchg
push
cli
enter
sahf
imul
pop
adc
inc
jne
ja
and
cmpsb
es
test
add
ds
sbb
imul
xlat
dec
orl
jmp
stc
xchg
add
dec
jg
jnp
jecxz
stos
xchg
xor
inc
xchg
es
cld
push
lds
insb
sbb
rorl
pop
or
jne
dec
cmc
loopne
pop
push
clc
lahf
sbb
fs
ret
sbb
int
test
pushf
sar
sti
les
add
popa
jl
mov
inc
lea
xlat
lcall
jmp
sub
xor
and
adc
mov
add
sti
andl
jp
cmc
add
les
into
cmc
int
pop
xchg
inc
lcall
movsb
sahf
test
jg
pushf
scas
mov
jne
cli
ret
ljmp
ret
xchg
add
insl
xorl
test
aam
lods
xchg
dec
or
mov
lds
and
fwait
imulb
or
cli
popf
mov
data16
and
cmpsl
and
sub
les
dec
jmp
or
xchg
movsl
inc
xor
andb
stos
and
push
push
vpsraw
jo
sti
mov
adcb
push
lds
daa
jno
hlt
and
cmp
sbb
sbb
ret
movsb
lods
or
sti
pop
sbb
lahf
or
ja
pop
stos
inc
push
out
sbb
jae
mov
stos
std
insl
push
jge
mov
jle
push
jns
je
mov
push
aas
stc
fs
shrw
adc
out
dec
testl
out
mov
test
push
mov
loopne
outsb
xchg
add
cli
aam
icebp
scas
and
jge
in
mov
xlat
fucomp
jle
adc
bound
mov
inc
jbe
cwtl
clc
addl
pop
dec
xchg
in
xor
shll
mov
ret
loope
or
mov
adc
and
add
cld
roll
cmp
add
sbb
loope
and
pop
inc
push
mov
lea
mov
loop
in
cmp
daa
dec
inc
adc
lds
scas
sbb
cmp
push
xor
push
lret
inc
xor
std
push
popf
rorl
mov
test
mov
fldcw
mov
jbe
stos
gs
es
stos
adc
push
push
ljmp
mov
jmp
ret
dec
test
shll
incl
sub
dec
sub
sub
jae
scas
xchg
mov
jp
test
xor
xor
lods
jecxz
inc
std
fwait
jg
xchg
scas
dec
je
mov
pop
sti
daa
addr16
push
mov
mov
mov
fwait
inc
ss
addl
jo
scas
ss
or
xchg
rorb
gs
nop
sub
movsb
jnp
mov
test
loope
push
iret
bound
sarl
push
aam
test
cmc
cmp
dec
jne
dec
and
leave
jge
cmpl
jb
aad
ljmp
rorl
call
fsubl
push
cmc
stos
fmull
je
fistpll
xor
jnp
and
in
icebp
xchg
sti
out
dec
popa
xchg
loope
cmpsb
inc
repz
or
insl
les
jecxz
jne
xchg
and
pop
lods
adc
int
lret
jb
les
dec
jp
dec
jnp
xor
les
popa
mov
and
ljmp
inc
les
lret
inc
shl
jne
mov
push
mov
sub
lds
imul
inc
jmp
or
pop
incl
movsl
stos
stc
and
jo
mov
je
out
repz
dec
or
pop
movsb
gs
loopne
mov
xlat
incl
or
mov
xor
testl
pop
ret
push
inc
sti
xchg
cmp
sub
sbb
icebp
jge
mov
push
lods
pop
pop
sub
jb
sub
cwtl
pop
inc
jne
imul
sbb
pop
push
out
xor
insb
push
test
outsb
insb
rep
and
adc
jne
xorb
test
incl
sbb
aad
movsb
mov
adc
or
and
cmc
jp
sbb
es
test
mov
xchg
xor
pushf
jne
roll
xor
mov
add
jne
aaa
and
pop
dec
pop
movsl
mov
aad
ret
sub
sub
jne
outsb
push
fwait
aas
pop
cmp
push
dec
xor
test
mov
push
das
xchg
mov
pushf
jae
xchg
push
hlt
sbb
sbb
pop
stos
xor
cmp
loope
cwtl
repz
xor
outsb
and
jge
mov
das
and
mov
push
das
sbb
and
es
jmp
mov
sbb
movsl
stos
ss
mov
mov
test
cmp
sub
xor
in
jae
test
mov
scas
mov
movsl
outsb
iret
push
inc
or
fbld
and
and
and
add
movsb
bound
scas
ret
daa
inc
gs
jp
lret
push
repnz
ficoms
push
movsb
paddsb
and
jb
push
ljmp
and
add
dec
adc
int
xor
in
into
fs
lods
pop
hlt
iret
loope
inc
jle
js
hlt
int3
adcb
and
mov
popf
and
ffree
cs
xchg
into
push
pop
push
jne
sub
adc
sti
jbe
out
push
push
mov
pop
stos
sub
xor
je
mov
jp,pn
add
mov
sbb
bound
xchg
loopnew
rcrl
fsub
shrb
pushf
pop
enter
and
inc
sub
push
add
cs
xchg
xchg
aaa
jno
jbe
jns
cmpsb
out
xchg
rolb
fidivrs
sbb
and
mov
and
fimull
ret
jno
js
gs
inc
jns
xchg
es
cmp
inc
jne
ljmp
sub
jo
ret
inc
cwtl
and
cmpsl
xor
push
jp
out
insl
dec
inc
mov
loope
xor
out
cmp
sbb
push
pop
pop
cmc
mov
mov
mov
ss
mov
cmp
add
cmc
stc
mov
jl
adc
icebp
add
sbb
or
fsin
push
xchg
sub
fwait
enter
add
pop
jnp
mov
jne
or
fcompl
adc
inc
jge
xor
lods
stos
inc
sub
pop
jns
adc
push
or
jne
in
cmc
rolb
stc
jle
aam
or
or
pushf
loop
pop
mov
add
or
jmp
jg
pop
mov
inc
popa
adc
cwtl
dec
sub
xlat
sti
dec
cmp
push
xor
cmc
fcoms
js
enter
ljmp
jne
icebp
jo
mov
xchg
in
dec
addr16
and
aas
pop
imul
aaa
xorl
stos
jp
mov
int3
mov
add
mov
push
ljmp
jne
jmp
lds
gs
and
pop
ret
int
inc
rorb
arpl
cwtl
lahf
in
orb
pop
aam
dec
cltd
in
mov
xchg
enter
pop
cmc
inc
mov
mov
shlb
xchg
jp
jae
lcall
jns
shlb
shlb
arpl
dec
les
in
andb
add
mov
push
push
jecxz
lds
cmpsl
xor
and
lds
jmp
mov
cmp
sub
andb
inc
movsl
nop
pop
rcrl
dec
std
cmc
pop
push
sbb
add
mov
mov
sub
push
xchg
adc
sbb
cwtl
add
loopne
adc
pop
jle
sbb
les
dec
mov
jle
lret
adc
fmuls
sbb
adc
cmp
inc
push
mov
adc
insl
pop
pop
das
cmc
mov
movb
mov
imul
xlat
rolb
mov
out
jne
jnp
rorl
lret
inc
mov
lods
xor
sbb
jle
pop
push
mov
shrb
xor
test
gs
sub
test
or
lock
rcll
sbbl
inc
repnz
shl
jmp
cld
xchg
mov
inc
scas
fisubrl
and
jle
fcoms
and
mov
mov
popa
aas
and
push
adc
mov
daa
inc
jne
add
xor
xchg
add
adc
push
xor
sub
mov
out
scas
sub
lret
pop
fs
insb
sbb
repz
cli
sub
scas
jb
and
data16
mov
mov
mov
faddl
cs
sti
das
jge
leave
out
add
repz
test
xchg
int
jmp
sbb
jmp
dec
stos
rolb
out
ret
outsl
out
sub
xor
inc
decb
inc
push
pop
xchg
imul
fldenv
pop
daa
pop
pop
sbb
mov
imul
loope
lret
aad
lahf
cs
cmpsb
inc
cli
and
and
push
iret
shrb
cmp
out
cmp
jne
sub
loope
cmc
imull
mov
jne,pn
orl
cli
adcl
fwait
add
dec
inc
push
adc
xor
rorl
xchg
xor
stos
sar
jge
sbbb
mov
and
mov
shld
sahf
clc
adc
mov
jmp
pop
popa
das
jge
out
xor
push
xchg
lock
imul
je
lds
jae
movsl
push
cltd
jmp
das
pop
les
mov
addr16
rcl
int3
dec
mov
adc
addr16
and
inc
sti
imul
mov
and
adc
push
pop
xor
sbb
mov
mov
cmp
mov
push
aaa
mov
loope
fldcw
cmp
push
fstpl
shrb
jo
roll
test
mov
cs
mov
fdivp
jns
jl
pusha
or
repnz
jne
lret
lods
pop
arpl
jl
arpl
push
adc
pop
lret
jge
shrl
inc
jge
imul
dec
outsb
call
lods
sti
pop
stos
push
add
insl
xchg
aam
pop
test
pop
les
pop
loopne
sbb
sub
pop
call
cmp
fsubl
imul
xchg
ret
mov
jmp
pop
int3
pushf
push
pusha
arpl
std
pop
push
push
pop
bound
stc
inc
inc
je
subl
decl
lret
xchg
mov
jbe
xlat
fcoml
imul
js
scas
pusha
and
push
in
lret
add
jo
stc
push
cmpl
fimull
jge
movsb
inc
fidivrs
stos
loop
nop
subb
mov
inc
idiv
out
loope
ljmp
gs
dec
jmp
pop
inc
dec
jge
es
or
mov
or
addr16
outsb
mov
ficoms
das
sti
ret
cmpsb
add
add
push
int3
out
add
test
in
xlat
cmp
ss
out
repz
movsl
inc
mov
xchg
inc
inc
jne
gs
xchg
pop
lret
inc
jge
push
lret
sbb
inc
cwtl
sbbl
cmp
xor
push
pop
dec
dec
xor
mov
inc
xchg
jp
add
sub
rolb
jl
dec
cmp
xor
mov
and
mov
sub
mov
pop
pop
shrl
pop
jge
mov
add
mov
jmp
or
test
push
pushf
inc
or
cld
pop
leave
stc
push
inc
xchg
or
dec
or
push
inc
cmc
pop
sub
jb
lods
loop
fildll
test
mov
fisttpll
std
sahf
nop
cmp
sub
jbe
inc
int
pop
and
jle
jmp
mov
mov
nop
sub
rorb
pop
adc
popa
mov
lock
jecxz
xor
xchg
fstpt
mov
jne
or
dec
mov
stos
cmc
lea
jne
cmp
push
out
mov
mov
scas
dec
stos
jnp
jl
pop
or
sbb
fimuls
sahf
mov
xor
ret
adcb
or
cmc
or
shrb
push
cmpsl
or
and
shrb
sub
fldenv
fwait
sti
cmp
sbb
lcall
stos
out
mov
pop
sub
sbb
mov
stos
lds
das
inc
pop
xor
loopne
jmp
or
xor
xor
sbb
pop
mov
movsl
aad
and
stos
test
test
mov
scas
jge
popa
out
sbb
jb
shll
dec
out
mov
or
jne
shll
daa
lods
pop
xor
es
sti
jmp
pusha
cmc
xchg
jge
incb
gs
mov
aas
in
xchg
pop
js
push
or
mov
hlt
inc
lcall
mov
out
stc
or
xor
jne
inc
call
jge
cmc
out
and
shrb
outsb
imul
in
xchg
stc
or
jle
call
xchg
adc
mov
ss
add
out
mov
pop
mov
movsl
push
push
adc
out
pop
and
cmpsb
loop
pop
aad
out
lea
xor
test
rcrl
or
stc
or
roll
or
xor
mov
ja
sub
sub
test
ljmp
in
icebp
rolb
leave
ss
repz
dec
mov
ss
std
js
mov
dec
jl
pop
ss
add
cmc
iret
aas
adc
xor
pop
and
or
pusha
fs
clc
xchg
sub
jp
divb
inc
iret
cmp
scas
cmp
mov
lods
push
pop
push
notb
pop
pushf
das
and
insb
inc
add
pop
pop
es
pop
shrl
add
mov
pop
test
push
xchg
mov
mov
lods
test
dec
mov
lods
cmp
sarl
popl
insl
insl
jle
mov
jne
xor
pop
outsl
mov
xlat
sahf
nop
sub
inc
mov
lock
sbb
in
into
in
icebp
lea
pop
or
jg
xchg
iret
data16
mov
roll
cmp
imul
stos
mov
rolb
fst
leave
cld
lea
or
xor
decl
xchg
dec
pop
jmp
lcall
jmp
in
jnp
mov
dec
cmc
ja
cltd
gs
js
mov
fs
jae
subl
fadds
or
and
das
mov
sbb
roll
jp
arpl
scas
ficoml
pop
mov
out
mov
addl
mov
adc
test
outsb
sbb
rolb
dec
push
jo
jae
mov
daa
lea
mov
rcrl
dec
enter
add
es
mov
int
jno
arpl
ljmp
adc
sarb
and
or
cmc
in
cmp
je
mov
ja
in
addl
outsb
aam
movsb
ret
xor
jne
out
inc
test
inc
pop
repnz
cmc
out
xor
pop
int3
xchg
sub
daa
jne
data16
push
push
das
sti
xlat
xor
aaa
cmp
ret
sbb
pusha
push
lea
cs
test
loope
sub
call
or
jbe
std
adc
stos
sub
or
out
jmp
cmp
cltd
inc
adc
adc
pop
and
jge
out
ja
lret
mov
mov
jns
cmp
jge,pt
jg
mov
test
pusha
push
icebp
aad
jae
fwait
nop
mov
addl
test
and
cmc
mov
popa
jns
jne
cltd
sbb
jge
and
inc
xchg
test
outsl
hlt
insb
out
lea
out
pop
mov
jl
repnz
outsl
aas
imul
je
mov
dec
mov
rcll
imul
lea
or
movsl
mov
ficomps
pop
mov
inc
xchg
jle
in
and
loopne
jle
cld
call
faddl
mov
and
out
daa
xor
add
and
mov
and
adc
in
je
xor
or
es
nop
std
dec
jae
push
insb
fsubr
fcompl
mov
ret
or
add
push
jp
push
es
lods
addr16
mov
popl
cmc
adc
jo
insb
or
test
add
xor
push
test
cmpb
pop
pavgb
outsb
dec
enter
xchg
push
scas
out
or
pop
mov
sub
fs
pop
or
int3
loopne
sub
push
push
adc
and
lds
lret
popa
mov
or
popf
icebp
dec
mov
test
jl
push
pop
xor
and
in
inc
and
cmc
sbb
ret
xor
sub
pop
movsl
mov
add
arpl
xchg
and
shll
push
mov
pop
js,pn
or
sub
cmc
xchg
divb
sub
fs
xor
cmp
or
jl
mov
mov
test
movsl
mov
stos
sbb
mov
mov
and
jo
pop
popf
xor
and
add
mov
es
icebp
decl
sub
dec
jno
ljmp
test
not
jge
sahf
dec
roll
mov
lret
cmc
sub
cld
jb
fists
or
aaa
sbb
inc
cmc
std
bswap
jbe
shlb
mov
adc
mov
dec
insb
mov
and
rcll
dec
je
xor
push
xor
lret
adc
cmc
rep
sbb
mov
loope
sbb
ss
je
push
out
and
addr16
stos
mov
outsl
outsb
and
imul
lods
add
cs
lods
push
dec
cmc
push
jge
add
mov
add
sti
les
mov
mov
mov
out
push
ret
xchg
inc
sahf
mov
and
dec
push
into
int
popa
jae
inc
push
lahf
loop
xlat
jge
cwtl
xchg
das
sub
imulb
push
jno
mov
call
or
std
dec
lcall
sub
add
cmp
push
clc
push
adc
cwtl
enter
ror
dec
jne
fldt
js
pushf
fcmovnb
jl
fs
int
cmp
gs
or
or
inc
xor
cmp
inc
and
jbe
and
jl
mov
mov
dec
push
popf
sub
jns
cmc
scas
enter
pop
pop
data16
dec
lret
or
mov
inc
shll
iret
roll
mov
cmp
push
popf
xor
inc
add
test
testb
mov
xchg
insb
jbe
dec
push
pop
pop
dec
pop
movsl
mov
xor
xchg
add
roll
or
out
popa
je
dec
out
movsb
push
mov
jmp
fiadds
add
test
rcrl
pusha
sti
xchg
xchg
psubusb
cmp
mov
jp
rcrl
shrl
add
les
xchg
dec
jb
xor
stc
jne
sub
lods
push
cmc
nop
xor
loopne
fdiv
in
pop
pop
popa
add
push
add
call
in
mov
push
mov
test
movsb
shr
cmpsb
jle
rorl
push
jno
test
jge
pop
mov
fwait
xlat
xor
out
and
jmp
rcll
in
jmp
lds
pop
and
jmp
test
stos
jno
adc
cmp
test
loopne
outsl
hlt
nop
decl
pop
lock
inc
lcall
mov
in
push
xchg
or
jecxz
icebp
xchg
push
cmovs
jmp
and
xchg
lea
jg
mov
insl
js
lods
shlb
es
cltd
dec
fxch
loopne
shlb
test
xchg
loopne
mov
mov
ret
jne
mov
dec
xchg
jbe
test
xor
sbbb
inc
or
cmc
sub
iret
daa
cld
std
adc
js
cmp
pusha
jge
iret
idivb
pop
mov
or
mov
mov
fs
add
sti
push
xlat
dec
lds
xor
pushf
xchg
mov
out
xor
jns
mov
mov
lock
jg
sbb
sub
dec
dec
je
inc
xor
mov
pop
xchg
sub
stos
mov
addl
xchg
adc
rcrl
aas
bound
and
mov
je
insl
adc
adc
je
xchg
fdivrp
sub
aad
adc
jge
pushl
pop
jge
push
and
adc
mov
mov
fld
xchg
sbb
mov
sub
inc
mov
pop
sti
pop
push
mov
int
ret
inc
les
cmc
lds
daa
xor
ds
loope
cmp
jo
jge
push
mov
sub
bound
mov
lea
adc
movsb
movsl
xchg
pop
outsb
movsl
stos
ss
imul
or
jnp
jbe
pop
push
jns
jp
sahf
jns
xorl
hlt
subl
popa
sbb
inc
or
loop
xor
jo
outsl
loope
mov
dec
data16
loopne
out
adcl
mov
pop
leave
sub
push
lahf
jecxz
filds
arpl
xor
cmp
sbb
cmp
aas
sub
add
xchg
int3
dec
fldenv
addr16
adc
inc
repz
out
dec
loop
cld
mov
mov
lret
jb
lods
mov
mov
xor
and
in
das
xor
add
xchg
xor
push
xlat
mov
es
std
sub
enter
sub
jmp
push
pop
jno
pop
xor
cltd
jmp
dec
pop
or
or
fdivl
fwait
jle
ljmp
xchg
push
jmp
sahf
push
jb
lahf
test
pop
stos
xor
and
retw
jno
adc
outsb
fisttps
das
adc
rolb
aad
lret
lds
mov
push
popl
and
ficompl
in
inc
aas
dec
jecxz
pushf
jmp
hlt
and
insl
jo
mov
mov
or
shrl
push
and
cmc
mov
and
jne
fdivr
sub
cmp
pop
mov
ss
sub
mov
push
push
add
jg
stc
add
mov
pop
std
jne
xor
pop
pop
divl
iret
fcmovb
cs
dec
scas
cmp
cld
dec
sub
pop
xchg
aad
inc
outsl
mov
loopne
out
sahf
insb
es
test
stos
push
faddl
dec
jp
cmp
jo
mov
jne
fnstsw
enter
pop
xchg
jb
push
mov
test
movsl
cmp
pop
xor
mov
lret
and
dec
pop
sbb
fwait
pop
mov
push
cmp
jg
pushf
dec
and
decb
mov
add
xchg
jo
lds
stc
ljmp
scas
cmp
fisttpl
cmc
div
push
cmpsb
mov
and
mov
inc
into
mov
cltd
inc
push
sahf
lcall
cli
imul
jle
addb
inc
test
insl
mov
mov
cwtl
jne
mov
addr16
and
add
dec
jle
adcl
xor
pop
add
lock
jg
jne
push
and
aas
testb
xchg
lcall
pop
gs
and
pop
push
push
xchg
stos
das
xor
dec
pop
lods
xor
xor
scas
andl
pop
out
cmp
movsl
jne
lea
jo
rcrl
mov
je
cwtl
inc
pushf
jbe
cld
pop
cs
movsb
xchg
jge
lret
xor
shlb
pushf
sti
data16
dec
sub
sbb
shll
push
jge
inc
inc
std
or
add
hlt
ljmp
lds
insl
cmc
mov
daa
push
js
or
dec
cmpsl
pop
add
pop
enter
and
inc
lahf
dec
inc
jp
sbb
repnz
sbb
pop
shrl
jp
stc
pop
arpl
test
ds
cmp
jge
sti
xchg
loopne
out
pop
or
and
inc
jae
lds
test
jp
adc
imul
fstps
dec
push
je
cmp
xchg
pushf
adc
jecxz
mov
sub
pusha
pushf
cwtl
and
mov
xor
ret
test
les
mov
inc
and
dec
cmc
jp
sbb
inc
loope
pop
jg
jle
dec
into
mov
std
stos
adc
mov
sub
jne
pop
out
sub
push
ret
clc
xlat
lret
xchg
fstps
mov
jmp
or
mov
jno
xchg
bound
mov
xchg
mov
push
bound
out
aaa
incb
xor
mov
and
call
jle
pop
cmp
dec
out
cli
pop
frstpm(287
dec
jecxz
call
jge
jae
aas
lcall
test
mov
nop
shll
cmp
mov
mov
sub
testb
jae
push
push
into
rcll
stos
mov
mov
xchg
subl
sti
xor
popf
out
dec
dec
lret
inc
push
mov
cmpsl
xchg
fsubs
subb
test
leave
jecxz
adcl
insb
fs
ljmp
addb
stos
aam
fldl
loope
sub
push
mov
ljmp
xchg
xor
sub
mov
add
sbb
xchg
jb
inc
pushf
jo
sti
pusha
mov
movl
push
push
js
adc
lahf
imul
mov
dec
xchg
popa
inc
popa
retw
inc
scas
das
jmp
aas
mov
or
cwtl
rolb
xchg
cmc
adc
push
into
imul
vpcmpeqw
add
xchg
lcall
push
in
jnp
fisttpl
mov
adc
jle
loopne
sahf
mov
jne
fwait
push
inc
pop
xchg
add
xor
jmp
fimull
js
sbb
xchg
pop
inc
jp
sub
cltd
push
frstor
incb
mov
jns
push
inc
push
jo
sbb
dec
sbb
sbb
push
push
mov
lods
out
jb
rcl
fwait
leave
pop
pop
add
jae
or
push
mov
cmp
stc
push
jle
addb
dec
jne
stos
pop
cmp
push
xchg
repz
shll
lcall
adc
aad
and
icebp
adc
mov
fistl
mulb
fidivs
xchg
adc
xor
inc
push
mov
dec
test
cmp
outsb
mov
aad
lods
mov
cwtl
loopne
testl
arpl
dec
sbb
dec
std
jle
fsubl
or
roll
scas
dec
ljmp
cmc
xor
into
sbb
shll
jge
or
lcall
test
lcall
mov
jne
cmp
inc
dec
sub
leave
add
popa
loop
sbb
cmp
sbb
dec
stos
jmp
popf
adc
sub
xchg
adcb
gs
test
and
popl
hlt
and
pop
sti
decl
push
loope
and
push
xchg
mov
push
and
adc
xor
mov
and
pusha
insl
nop
jne
sub
js
sub
mov
imul
pop
sbb
cmp
fs
jp
pusha
jne
insl
fldt
jle
and
cmc
stos
in
stos
ror
movb
dec
outsb
stos
imul
pop
jmp
push
pop
xlat
das
cmc
sbb
iret
data16
sti
or
add
push
mov
jae
cmp
and
cmc
stc
les
out
inc
inc
pop
cmc
push
pushl
and
push
push
cmp
ds
cmp
rcll
imul
ret
sti
repnz
ret
repz
add
in
das
xchg
pop
xor
mov
or
sbb
sti
jg
mov
add
inc
rolb
test
or
dec
scas
push
nop
jle
cmp
jl
and
inc
inc
inc
xchg
jl
int3
rcrl
mov
xchg
data16
push
dec
inc
push
mov
jl
cli
enter
inc
dec
xchg
mov
add
dec
cld
hlt
call
pop
adc
inc
or
mov
or
adc
icebp
imul
pop
loop
lock
sub
loope
jb
faddl
sarb
dec
push
mov
pop
mov
mov
inc
shld
sti
jae
cmp
inc
and
cwtl
mov
leave
jge
in
adc
pusha
sbbl
push
inc
gs
rorb
int3
inc
adc
enter
loope
je
cmc
mov
inc
stc
imul
dec
and
or
mov
sahf
popf
mov
fwait
rcll
insb
in
add
dec
push
push
or
pop
inc
and
movb
xchg
xchg
adc
mov
pusha
mov
pop
mov
movntps
fwait
mov
arpl
jl
jns,pt
jle
pop
adc
mov
divb
enter
sbb
jno
sub
mov
xlat
out
inc
dec
or
or
sbb
aaa
mov
and
jns
mov
aaa
push
dec
lret
adc
adc
lods
enter
dec
nop
mov
xchg
inc
movsb
aam
js
int
mov
rol
mov
inc
bound
inc
stc
sbb
roll
iret
xchg
in
inc
jns
sbb
mov
ficompl
es
rol
mov
xorb
test
or
imul
mov
bound
mov
inc
outsl
xchg
pop
mov
inc
mov
test
pop
aas
cmc
cltd
mov
rorl
push
movsb
cwtl
mov
push
add
popf
mov
jae
jae
push
push
scas
xchg
and
pop
jno
hlt
aaa
jae
adc
fidivrl
mov
mov
inc
fnstenv
roll
out
jmp
dec
das
mov
stos
les
int
xor
adc
jb
popa
mov
or
and
adc
iret
leave
addr16
out
sub
rolb
fdivs
and
pusha
cltd
add
stos
mov
cmc
test
fidivl
ror
mov
mov
pop
ja
in
arpl
rorl
or
enter
aas
ja
lods
or
fnstenv
sahf
outsb
int3
inc
xor
mov
mov
roll
pop
cmc
in
ret
and
push
xchg
push
mov
sar
popa
mov
pop
inc
ss
adc
lea
push
inc
stc
subl
mov
xchg
shrb
test
inc
imul
pop
mov
adc
cmp
sti
bound
js
inc
into
dec
ss
dec
and
fs
popa
roll
das
orb
aaa
fadd
addr16
cmp
ror
idiv
std
xor
jo
and
insl
or
cmpsb
pop
adc
popa
enter
pop
inc
push
dec
in
rorl
push
stos
mov
inc
pushf
jbe
inc
jmp
mov
xchg
push
pop
add
xchg
lcall
shrb
faddl
inc
leave
jp
ficoms
sub
push
xchg
add
inc
jne
push
call
inc
adc
fbld
pop
clc
ja
inc
leave
cmpsl
aas
xlat
roll
push
dec
divl
inc
addr16
sub
faddl
push
xor
jge
roll
inc
sti
loop
mov
jne
mov
je
pop
mov
ret
fimuls
add
mov
xor
roll
push
cmovle
out
jnp
test
pop
xchg
inc
rcrl
es
aaa
xchg
test
scas
mov
ret
push
jmp
inc
push
inc
fwait
add
push
mov
xchg
xchg
sbb
enter
add
inc
pop
test
lds
shrl
and
fimuls
out
frstor
arpl
sarl
push
xor
shrl
dec
cmp
lcall
push
push
ljmp
fwait
js
push
cmp
mov
ds
xchg
push
jne
dec
nop
jae
lcall
mov
cmp
sahf
xorb
dec
imul
sub
dec
jl
cld
int
in
arpl
ljmp
movsb
bound
rclb
das
push
inc
inc
enter
add
cmpsl
push
inc
jo
clc
cmp
cmc
aas
out
dec
lret
lods
testl
add
add
enter
rorb
fadd
or
sahf
push
pop
filds
sar
xchg
add
iret
fwait
inc
enter
in
aaa
adc
push
inc
js
aas
mov
scas
or
xor
fcmovbe
testb
add
sub
mov
out
jbe
mov
mov
or
xor
es
and
fwait
push
inc
mov
roll
loope
sbb
rcrl
orl
clc
fadd
iret
rorb
out
sbbl
inc
aaa
scas
xchg
xchg
lods
out
sbb
ljmp
popf
cmp
pushf
sbb
ret
outsb
dec
das
incb
add
dec
jno
pop
mov
mov
xorl
add
inc
popa
fcoms
cmc
sbb
jl
xchg
or
mov
iret
js
outsb
cld
inc
mov
lods
jnp
shll
fmull
xlat
repz
enter
mov
inc
lds
pop
addb
sbb
pop
cmp
subl
dec
push
fists
mov
in
jns
mov
jl
fcomps
enter
inc
inc
out
std
and
in
xor
xchg
out
xchg
sub
shrl
loope
roll
mov
dec
inc
enter
out
fadd
addl
and
les
test
sarb
add
xor
ret
dec
cmp
enter
mov
inc
clc
cs
push
idivl
sub
jno
push
pop
jl
dec
mov
imul
inc
mov
insl
push
add
outsb
fnstenv
test
cmp
loop
shr
sub
pop
push
and
push
adc
pop
jnp
mov
xchg
sbb
inc
aas
sub
cmpsl
push
sub
dec
cmpl
out
inc
cmpsb
pop
mov
jae
lcall
jb
xchg
test
rclb
mov
aam
and
fists
pop
and
pop
pop
add
inc
scas
fwait
movsl
mov
rol
popa
addr16
shll
jbe
add
inc
inc
ret
incl
pop
jp
xor
mov
inc
pop
sub
shll
dec
xor
es
dec
icebp
movsb
cld
inc
ret
ljmp
pushf
pop
and
push
mov
insb
adc
in
dec
inc
dec
jg
ret
push
loopne
xchg
fsubs
fcmovb
add
lahf
add
push
mov
or
fwait
js
inc
popa
out
outsb
insb
mov
inc
and
add
subb
xor
imul
inc
les
test
xor
int3
xchg
je
rol
stos
xchg
ds
jb
mov
dec
add
and
jb
fcmovb
xor
in
inc
aam
iret
arpl
push
inc
or
out
ds
dec
add
mov
test
sbb
in
sti
cmp
inc
in
rorb
ljmp
push
dec
mov
lea
rolb
hlt
xlat
cmpb
pop
fmulp
push
adc
insl
mov
mov
js
inc
cltd
xor
push
shl
sahf
jns
nop
ret
out
cmp
inc
cmp
mov
sub
dec
cltd
sahf
mov
movsb
push
lds
jnp
sarb
fidivrl
mov
dec
int3
jge
lods
lret
js
pop
adc
repnz
scas
inc
or
insl
leave
repnz
jg
dec
adc
in
enter
xor
pop
inc
push
cmp
loope
sub
int
sub
leave
inc
add
icebp
mov
inc
arpl
popa
fidivrl
and
inc
mov
inc
out
jg
dec
xchg
inc
mov
mov
aaa
lods
orl
mov
dec
mov
pushf
xchg
pop
sarl
cmc
pop
sub
push
lahf
insl
add
test
mov
js,pt
push
mov
cmp
int3
push
sti
out
sub
pop
jo
inc
mov
jb
jge
adc
enter
insl
sub
cs
jge
mov
and
jo
sarl
gs
mov
dec
pop
cmpsl
aam
inc
mov
sarl
pop
popa
add
stc
sbb
andl
cmp
outsb
je
mov
incl
gs
movsb
rorl
in
out
fiaddl
inc
push
mov
push
rorl
mov
rcrl
rol
sbb
jnp
mov
movsl
insl
xor
mov
jl
sbb
add
xchg
into
sub
jge
lods
and
iret
mov
push
stos
leave
sub
push
lock
ret
les
cmpsl
add
data16
gs
call
jle
sti
lods
test
in
leave
lea
mov
cmp
sbb
pop
cmp
out
sub
mov
and
push
shll
jp
mov
ror
dec
dec
insl
imul
cltd
sbb
cmpsl
push
dec
jecxz
push
jae
dec
and
pop
push
fsubl
mov
insb
add
rolb
xchg
adc
std
test
loopne
out
xor
int3
jno
adc
mov
pop
jecxz
std
push
lds
rol
mov
repz
pushf
pop
lahf
ds
call
mov
sbb
arpl
sarb
inc
mov
or
mov
inc
sub
ret
xorl
rolb
cmp
fwait
lret
or
lahf
pop
pop
push
sbbb
int
inc
add
jge
dec
les
bound
sbb
faddl
aas
jp
jno
xor
int3
into
in
ds
add
int3
or
cmc
cmpsl
mov
sbb
xchg
inc
mov
cmpl
rcl
cld
push
repnz
leave
insl
in
mov
mov
dec
pop
pop
out
rcrl
xchg
xlat
inc
or
pop
inc
outsb
and
mov
lods
bsf
and
fadds
jp
ja
dec
inc
xor
pop
int3
add
push
sub
js
mov
jb
mov
popa
rorl
icebp
outsb
and
imul
adc
add
mov
mov
dec
scas
or
push
add
faddp
call
in
inc
sbb
lock
pop
jnp
xor
jle
jnp
leave
push
adc
add
inc
jl
sub
lcall
or
rorl
iret
and
push
out
mov
std
lahf
inc
or
stos
adc
fnstenv
movsl
jle
rclb
insb
add
jg
gs
outsl
jo
insl
jno
loopne
or
int3
sub
jp
imul
stos
xorb
inc
pop
data16
jle
and
popa
push
jp
sub
gs
ret
xor
inc
pop
leave
adc
popa
int3
insl
cmpsl
inc
xor
lods
hlt
xchg
gs
cmp
fmuls
sar
adc
sbb
inc
sbb
cmpl
inc
push
lock
test
jl
or
jecxz
cmp
inc
test
pop
cld
push
push
fisttpll
fwait
push
ja
add
jbe
inc
jb
fmul
dec
adc
xchg
add
add
lods
jge
inc
jecxz
push
iret
inc
xor
push
mov
sub
inc
mov
and
pop
xchg
lcall
cmpsl
xor
push
addb
or
repz
mov
adc
jecxz
incl
cwtl
scas
jnp
inc
mov
repnz
lds
faddl
adc
add
jnp
in
jg
jge
inc
shrb
mov
cld
pop
push
std
rolb
fisttps
popa
mov
pop
clc
mov
jl
cmp
popa
fiaddl
popa
sarl
shld
pop
mov
loop
mov
fcom
and
incl
fwait
cmp
add
inc
jl
mov
xchg
push
hlt
dec
insl
hlt
mov
fisubrl
and
mov
jne
lea
jp
mov
rorl
ja
into
cmp
std
inc
and
or
test
das
sarl
sbb
pop
js
enter
cwtl
lods
int
mov
inc
adc
mov
enter
popf
sti
testl
rolb
int3
lods
test
push
and
or
clc
jle
dec
call
sub
pop
dec
data16
push
cmp
cmp
jns
mov
jle
push
pop
pop
mov
or
aas
cmpsl
notl
and
sub
incb
fld
in
sar
rcrb
enter
xchg
mov
cld
inc
mov
xchg
jne
lds
add
xchg
xchg
dec
ret
dec
icebp
movsb
popa
jns
jle
xchg
mov
inc
mov
xor
jle
and
insl
or
ss
dec
adc
push
imul
popf
mov
ja
movsl
jge
lret
pop
mov
orl
lcall
mov
jle
push
faddl
call
inc
adc
pop
imul
add
out
mov
jg
jl
fldt
mov
je
cld
xchg
mov
cmp
outsl
cmpsb
std
lods
movsl
xchg
add
imul
out
mov
xlat
mov
cmpl
decb
jae
mov
sub
or
sarl
stos
mov
jg
xchg
rcrl
jae
movsl
inc
cs
mov
dec
inc
or
sbb
ret
dec
and
loop
fwait
add
adc
dec
push
push
and
aaa
cmp
outsb
enter
pop
clc
push
inc
mov
addr16
lret
gs
mov
fcompl
ds
loopne
jp
sub
jecxz
and
mov
pop
rclb
mov
into
sbb
pop
gs
mov
dec
pop
dec
lret
dec
inc
or
pop
inc
push
jl
and
inc
add
rcrb
mov
mov
loop
enter
pop
inc
leave
sub
mov
jno
mov
dec
mov
cwtl
in
and
shrl
cmp
sbb
mov
mov
mov
push
inc
movsl
jl
xchg
mov
xchg
popa
lods
movsb
arpl
and
xor
mov
push
aas
mov
xor
sarb
cmpsb
arpl
jo
jle
mov
repz
inc
fcom
add
jge
dec
std
pop
aam
enter
inc
imul
push
in
gs
shll
pop
add
ds
cmp
dec
lds
dec
pop
pop
mov
cltd
cmp
push
jp
adc
sbb
sbb
jb
mov
ret
test
sar
lahf
mov
mov
dec
mov
movsb
sub
enter
sub
sbb
mov
xor
das
push
js
mov
test
les
stos
mov
cmp
xchg
ss
inc
imul
fiaddl
jns
lahf
scas
pop
push
jle
add
add
mov
pusha
cwtl
xchg
faddl
mov
out
popa
mov
jbe
dec
sub
aaa
js
inc
xor
fucomi
sub
popf
lahf
pop
mov
cltd
lods
rcr
rol
mov
add
imul
mov
fiaddl
stos
ds
ficompl
movsl
jp
lea
add
lret
push
movsl
decl
mov
gs
dec
cmp
sbb
daa
jmp
mov
dec
mov
stos
or
clc
aaa
fimull
mov
fmul
push
loopne
lds
out
outsl
dec
inc
add
push
stos
push
dec
stos
mov
sub
add
and
into
lock
jp
subl
pop
mov
pop
cmpl
xchg
pop
push
enter
fidivrs
jp
inc
mov
sahf
mov
mov
xor
mov
jg
jge
ret
das
mov
mov
adc
jo
lcall
call
mov
clc
int3
rcl
cltd
jbe
sub
cmpb
in
sbb
dec
add
jno
or
pushf
push
xchg
dec
insl
mov
and
inc
jne
fidivrl
repnz
add
adc
xor
std
xor
dec
fldenv
fidivl
sub
daa
mov
test
mov
jge
mov
ret
pop
dec
inc
or
sub
inc
xlat
adc
faddl
das
pop
and
sarl
leave
add
jg
or
nop
cmp
js
inc
data16
add
clc
ja
sbb
or
mov
insl
aas
sahf
xor
inc
mov
lea
bound
addr16
add
int
das
in
jl
jp
shll
loopne
insl
scas
add
lock
jg
cmp
add
and
out
inc
sub
jle
inc
jbe
pop
outsb
and
mov
inc
cld
and
fidivl
roll
jl
adc
jp
outsb
aaa
mov
xor
pop
adc
mov
or
add
cld
iret
jg
out
js
mov
mov
adc
fadd
cld
jecxz
pop
dec
sub
cmpsl
cmp
mov
mov
lods
add
orl
sub
nop
xchg
or
out
popa
dec
xchg
andb
push
or
push
cld
leave
inc
pop
jl
rcll
cld
insl
adc
clc
mov
sbb
cld
shll
pop
movsl
cld
inc
push
pop
xor
fadd
xor
push
sbb
addl
ror
call
inc
jg
adc
cmc
dec
cld
out
jmp
dec
lods
mov
fisttpl
scas
loop
nop
or
dec
add
fistpll
sbb
mov
jmp
inc
ds
inc
or
pop
cmp
xor
xchg
leave
sub
shlb
fld
fbstp
mov
std
xor
add
lahf
je
jge
shll
inc
mov
or
sbb
out
enter
into
movl
jo
lret
rcl
cmp
xor
orb
inc
jb
cmp
bound
sbb
enter
jae
adc
int3
xor
pop
jae
jge
mov
sub
sbb
xchg
pop
lret
int3
cmp
inc
cmp
scas
add
dec
push
lods
jle
inc
in
popf
sbb
xchg
fadd
xor
loope
or
dec
aaa
neg
xor
xchg
mov
jne
fadd
sahf
mov
cmpl
cmp
xorb
push
pop
aas
nop
rol
mov
lea
adc
or
dec
dec
cmp
push
pop
mov
ljmp
fisubl
jmp
in
out
jge
dec
je
dec
xchg
shl
aaa
or
dec
lcall
jmp
or
enter
jbe
inc
mov
mov
je
imul
mov
inc
jle
ret
cmc
idivl
out
dec
sub
and
es
ss
lds
sti
cmp
je
or
adcl
sbb
cmp
jne
fimuls
dec
pop
clc
fsubl
int
mov
jmp
lods
mov
inc
dec
or
fistl
mov
adc
cmpsl
faddl
pop
dec
inc
sbb
and
fmull
movsl
mov
mov
call
and
dec
cmp
fsubrs
cmpsb
jg
xor
lock
cmp
int3
xor
in
nop
in
aad
jle
or
repnz
scas
clc
outsb
dec
and
jnp
subb
adc
sub
das
in
pop
add
push
xchg
dec
mov
fdivl
adc
ljmp
cmp
push
enter
ljmp
push
popa
push
jp
inc
in
fldt
xchg
dec
xchg
xor
enter
xchg
dec
push
addr16
sbb
sub
imul
movsl
fisubrl
mov
xchg
int3
je
pushl
xor
xor
rorl
mov
iret
sub
cmpl
add
fildl
cmp
loop
gs
sbb
xor
push
shll
in
mov
jg
cmpl
xchg
lds
jne
fildl
push
push
inc
repnz
ss
or
and
and
bound
xchg
cmpsb
xor
push
jne
pusha
and
xlat
fbstp
lea
push
stc
pop
roll
dec
jne
rol
lret
inc
inc
mov
sarb
aaa
arpl
xchg
shll
adc
mov
push
push
inc
add
sahf
sub
pushf
xor
or
popf
arpl
ret
cs
dec
das
divb
shlb
sub
arpl
and
sahf
cmc
jnp
fwait
xor
or
mov
fcomip
add
enter
pop
or
loopne
les
popf
lds
mov
sub
ror
popa
dec
dec
es
nop
inc
jne
add
cmp
sti
inc
mov
outsb
loop
inc
sbb
pop
cmpsb
push
mov
js
inc
jne
and
dec
lea
inc
je
inc
inc
jae
in
lahf
mov
adc
mov
push
jnp
xchg
loope
pusha
ret
repz
mov
pop
jne
xchg
jp
shll
js
popa
lret
shrl
xchg
pop
mov
aam
adc
mov
insb
inc
cs
inc
mov
sahf
dec
xchg
cmp
jle
bound
movsb
test
cmpl
sub
pop
das
ja
jmp
or
pop
imull
xchg
shrb
xor
jecxz
xchg
dec
fadds
shlb
pop
inc
loop
test
adc
ret
xchg
mov
inc
data16
inc
and
fsubrl
mull
push
ljmp
adc
cmc
cmpsl
jno
mov
popa
or
in
lock
and
mov
cmp
loope
and
adc
inc
outsb
pop
cwtl
jns
mov
out
inc
sub
shrb
pop
dec
inc
cmpsl
addl
pop
and
lret
and
imul
inc
xchg
out
mov
popa
ss
lret
ret
mov
sbb
sbbw
inc
mov
mov
movsb
jae
fistpll
push
inc
xchg
mov
loope
or
les
mov
cli
jb
sub
inc
fs
sbb
js
cmp
sbb
cld
mov
addl
ret
and
adc
xchg
mov
imul
xchg
cltd
cmp
js
adc
aam
and
xchg
outsb
out
mov
pop
adcl
push
or
test
lods
stos
jns
pop
shll
mov
fdivr
push
lds
lret
roll
mov
out
popa
insl
jecxz
ret
lea
roll
pop
ljmp
inc
cltd
xlat
faddl
add
repz
mov
int
mov
add
jb
inc
int3
fstl
xor
lock
inc
jmp
cmp
mov
inc
loopne
or
mov
lea
or
inc
fldcw
mov
or
jge
jp
inc
cmp
xor
xchg
mov
subl
mov
inc
add
stos
aad
test
cmp
adc
rcrb
sbb
inc
mov
push
lds
sub
inc
loopne
inc
cmp
pop
push
cmp
std
lret
sub
jns
mov
dec
sbb
sbb
fsubs
scas
js
inc
ret
aam
movsb
xchg
inc
movsl
test
orb
jbe
shll
out
pop
out
inc
inc
outsb
dec
ljmp
sbb
lock
mov
mov
jb
lret
or
aas
add
pushf
xchg
push
adc
lcall
dec
std
test
inc
push
ja
pop
jne
nop
push
repz
iret
daa
lret
scas
pop
xor
adc
push
and
inc
mov
mov
shr
std
xchg
int
and
lret
popf
mov
mov
fimull
scas
dec
lcall
and
pop
cwtl
inc
push
mov
inc
mov
in
mov
cli
mov
cld
mov
dec
adc
push
aas
xchg
cltd
inc
mov
gs
imul
add
popa
or
pop
xor
dec
out
sbb
push
hlt
cmp
sub
jg
into
out
daa
roll
push
jns
xor
sbb
sbb
out
inc
or
xor
push
into
hlt
fldl
jmp
jg
mov
in
push
js
hlt
or
aad
xor
sti
out
ret
pushf
add
jae
push
adc
cwtl
das
inc
ljmp
adc
sbb
pusha
mov
and
push
je
lods
xorl
mov
aad
push
sbb
adc
inc
or
and
jl
push
gs
mov
scas
or
mov
stc
mov
push
xor
out
aaa
pop
adc
int
pusha
sub
stos
push
sub
ret
ljmp
dec
add
inc
mov
push
into
dec
pusha
jne
cmp
jns
or
xor
dec
shll
je
ja
dec
jecxz
pop
iret
rorb
jmp
and
sbb
inc
push
xchg
jg
adc
cwtl
flds
inc
popf
mov
jne,pt
cs
mov
in
mov
imul
jecxz
int3
sub
jle
enter
popf
mov
or
shrl
das
xchg
lods
jp
sbb
stos
jne
test
clc
iret
sarl
add
mov
cs
ja
lret
adcl
mov
push
jbe
cmp
push
sbb
sub
mov
cmc
es
or
jg
push
or
mov
xor
mov
sbb
cmp
push
pop
out
mov
jne
push
add
in
sub
lea
movsl
es
enter
or
pop
and
rcrl
sub
fs
sbb
in
test
push
push
mov
push
aam
cwtl
mov
xlat
lods
lret
inc
dec
cmpsl
out
cwtl
pop
stos
pop
or
sbb
xchg
out
mov
pop
push
pop
scas
sarl
xor
jne
adc
pop
add
js
int
lds
pop
ds
adc
cmp
cmp
xorl
inc
pop
add
sbb
cmp
ficomps
out
push
sarl
mov
jmp
fnstsw
rorl
mov
out
test
sti
sub
in
pusha
sub
jecxz
push
xchg
jbe
sub
mov
mov
adc
cmpsl
insb
jne
push
jecxz
fdivl
cmc
cltd
imull
cmp
inc
dec
or
icebp
cmc
jle
daa
or
mov
sub
or
pop
fiaddl
andb
xorl
lods
jle
lods
jns
pushf
mov
out
xchg
out
rolb
enter
inc
add
adc
xchg
nop
fwait
xchg
add
dec
push
jecxz
das
push
fwait
cld
cmpb
mov
sti
stc
out
xor
popa
ljmp
mov
adc
or
sub
jns
repnz
push
stos
or
inc
jae
popa
mov
jne
push
data16
fsts
jg
icebp
pushf
ss
push
xchg
es
inc
into
cmp
inc
mov
jbe
inc
push
dec
ret
or
inc
ss
inc
ret
jns
xchg
out
dec
test
shr
fldt
popa
push
cmpsb
push
shr
out
mov
jp
enter
xchg
fbstp
aas
jecxz
sbb
sbb
inc
mov
or
push
add
pop
inc
insb
mov
mov
or
bound
pop
sahf
jns
jge
loope
dec
jp
insb
orl
pop
mov
subb
movsl
stc
inc
insb
data16
rol
fsubs
shrl
cmp
movsl
sti
in
and
movq
dec
orl
and
dec
xchg
orl
leave
movsl
call
mov
fabs
int
xchg
mov
inc
inc
call
loopne
pop
jmp
pop
xchg
xor
leave
sti
sub
inc
cmpl
push
leave
sub
ljmp
popa
je
mov
cmp
loope
sbb
nop
lea
or
mov
push
pop
das
mov
sub
mov
int
aas
sahf
mov
popa
xor
jno
jo
dec
cli
mov
mov
dec
es
cmp
dec
push
pushf
adc
subb
into
flds
movsb
nop
popl
jg
int
not
mov
cmpsl
inc
insl
enter
xchg
xchg
mov
inc
lahf
fsubrp
loop
mov
jmp
insl
dec
inc
fimuls
mov
pop
pop
incb
subl
jae
push
and
decb
xchg
dec
dec
js
rolb
movsl
inc
pop
jne
out
sbbb
cld
cmpl
das
mov
xor
jle
push
xchg
jne
pop
cmp
lret
cmpsl
fisubs
fnsave
enter
jmp
popf
les
shlb
inc
pop
xor
rcll
stos
dec
js
stos
enter
lcall
test
pusha
and
roll
sub
push
les
mov
push
aaa
push
aas
push
icebp
pop
and
inc
or
push
pop
mov
mov
outsb
ficoml
or
sbb
lahf
std
inc
xor
fcompl
shll
sbb
mov
or
xchg
mov
mov
dec
pop
inc
repnz
jmp
mov
inc
dec
sub
pop
pop
incb
lock
sub
inc
mov
sarb
std
push
push
in
dec
dec
mov
out
inc
mov
xor
lock
stos
int
loope
pop
pop
inc
sbb
leave
rcrl
inc
inc
rcll
loopne
stos
lcall
and
pop
push
bound
xor
sarl
arpl
sub
xor
insb
pop
adc
jbe
ret
mov
mov
xchg
inc
inc
mov
cmc
jg
outsl
fs
dec
pop
imul
inc
lds
imul
and
mov
test
push
xor
ret
push
ja
popa
dec
pop
popl
mov
inc
arpl
adc
popa
adc
push
cmpsl
xchg
inc
mov
inc
imul
push
repnz
xchg
inc
movsl
mov
inc
mov
adc
lret
jb
add
out
outsb
sub
shlb
or
into
sbb
pop
jp
mov
mov
test
sti
cmp
adc
aas
mov
jbe
aas
imul
sbb
sti
stos
out
sbb
inc
inc
outsl
dec
daa
jae
mov
and
xchg
push
pmaxsw
ret
mov
andb
cmpsb
mov
sbb
jae
xor
add
inc
mov
out
inc
sub
adc
mov
test
mov
xorl
lahf
mov
test
dec
and
and
mov
inc
fs
mov
mov
mov
push
aam
subb
inc
adc
add
loopne
imul
ds
jmp
inc
call
xchg
xchg
xor
aas
shll
cmp
imul
dec
lahf
push
jbe
sub
push
lea
inc
ficoms
popf
mov
dec
pop
repnz
movsb
jnp
add
sbb
lret
push
rclb
stc
mov
and
rorb
sub
cld
push
sbb
inc
bound
jl
inc
outsb
mov
ss
xor
and
jp
rcl
lea
popf
push
imul
lret
mov
mov
cwtl
inc
adc
ret
and
mov
push
inc
xchg
scas
jecxz
push
jne
hlt
inc
push
test
sbb
inc
and
jo
je
mov
fmull
dec
xchg
lods
xor
ss
and
das
mov
add
imul
jno
xchg
mov
push
inc
out
rcll
daa
inc
ffree
stos
jle
inc
aam
inc
dec
std
into
js
dec
lods
iret
dec
shlb
adc
push
jae
dec
inc
xor
mov
inc
fdivrl
adc
xchg
stos
pop
cmp
shr
pusha
inc
ds
inc
std
mov
pop
xchg
inc
mov
dec
out
inc
cmpsb
incb
mov
loope
mov
xchg
xlat
cs
push
mov
bound
dec
add
jge
mov
and
aam
xor
sahf
inc
or
lods
test
mov
mov
aad
and
sbb
hlt
fdivrs
inc
sbb
cmp
aad
or
cmp
add
pop
pop
daa
inc
addr16
cmp
pop
in
dec
inc
jbe
lds
lret
pop
jp
jno
rolb
xchg
push
ss
inc
movsl
xchg
into
xor
call
fwait
pop
pop
or
cmpb
add
sbb
loopne
cwtl
in
imul
imul
and
push
bound
push
inc
push
and
push
xor
inc
push
out
testb
mov
dec
mov
out
dec
mov
jnp
inc
or
dec
mov
hlt
shlb
in
pop
int3
in
inc
stc
ret
xor
inc
lahf
xor
and
sub
dec
push
cmp
test
jg
adc
mov
sbb
iret
fwait
push
xchg
pushf
jg
and
xchg
aam
cmc
cli
or
fcoms
rolb
ret
rol
mov
inc
cmp
movsl
hlt
mov
inc
fwait
mov
in
lret
ffree
leave
hlt
ficomps
xchg
xchg
aas
loop
lret
mov
dec
jnp
inc
xor
jbe
xchg
rol
subb
xor
nop
stos
pop
arpl
jne
dec
daa
or
dec
test
pop
or
inc
stc
mov
shrb
loope
xchg
jns
cmp
jg
fimull
ljmp
popa
cmp
pop
mov
fs
lds
jl
rolb
and
mov
jmp
inc
out
icebp
dec
ja
fwait
arpl
ret
and
mov
call
sub
xor
fcomip
inc
add
jns
ficoms
lret
add
movlps
inc
leave
inc
and
inc
dec
mov
js
cmp
mov
xchg
adc
inc
dec
testl
movsb
stos
jmp
aad
orl
cmp
movsb
mov
pop
pop
mov
or
jl
mov
loopne
mov
je
shrl
jne
pusha
mov
cmc
push
mov
clc
xchg
mov
hlt
cmpb
sub
jl
leave
pop
cwtl
ds
push
dec
pop
dec
and
lahf
addr16
add
jne
cmp
pop
dec
cmpsb
pop
in
sti
addr16
fwait
jnp
mov
cmc
mov
inc
add
sub
rorb
ds
outsb
sub
stos
test
add
mulps
and
mov
pop
mov
jbe
or
inc
xchg
pop
dec
movd
jmp
pusha
roll
out
arpl
mov
mov
test
popf
aad
out
rolb
jae
popf
ret
aam
or
or
jge
adcb
aad
jle
aaa
xor
sub
stos
and
int3
and
subl
pop
shlb
jp
push
and
fwait
and
movsb
rcll
sarb
stc
and
cmpsb
xor
pop
sbb
push
pusha
pop
dec
dec
sub
and
push
daa
jl
inc
adc
sbb
adc
test
push
adc
and
jne
xor
dec
cmc
cwtl
js
pop
jnp
mov
imul
add
lds
xchg
and
icebp
orl
add
and
xor
xor
lret
xor
pop
jne
pop
adc
sub
sbb
sub
mov
push
mov
and
add
int3
cmp
and
dec
adc
out
std
mov
out
jle
jb
ds
add
lds
sbb
xor
mov
testb
cli
sbbl
inc
js
xchg
mov
stc
adc
and
decl
pusha
adc
std
icebp
test
addr16
sbb
sbb
push
sub
lcall
movsl
jno
adc
lods
ret
ds
sub
xor
xor
mov
inc
aaa
sahf
aad
fisttpll
imul
xor
push
mov
cmc
adc
mov
imul
push
xchg
pop
push
fidivs
hlt
dec
dec
sbb
xor
mov
pop
testl
imul
ret
out
dec
test
sahf
int
cmp
xchg
cmp
cli
mov
rorl
dec
lcall
pushf
loopne
jl
push
or
lods
xor
inc
fdivs
lret
jle
fildl
xchg
stc
lea
mov
movsl
or
sbb
pusha
xor
and
and
xchg
xor
sbb
js
lea
xchg
enter
stos
xchg
icebp
popa
cmp
mov
scas
ds
mov
jl
adc
stos
sub
icebp
pop
fdivr
xor
scas
pop
outsl
mov
or
cwtl
js
jmp
scas
xchg
and
mov
imul
add
add
bnd
adc
in
ds
mov
pop
sub
push
cwtl
mov
inc
lahf
mov
jno
jl
cmp
dec
stos
scas
sub
xor
ljmp
and
inc
scas
push
jno
xchg
aam
nop
jg
inc
pop
lds
inc
inc
sbb
aas
in
and
xchg
inc
jge
mov
xchg
jo
inc
es
iret
inc
aas
imul
out
sbb
les
sti
sub
mov
inc
xchg
pushf
into
jmp
fbstp
sub
cmp
push
jl
arpl
inc
mov
xor
add
outsl
sub
add
inc
sub
xchg
push
movl
stc
push
jae
pop
inc
inc
clc
daa
jle
push
imul
pop
int3
roll
dec
jle
andb
inc
jg
lret
icebp
sub
into
ljmp
or
xor
xlat
cmp
mov
mov
js
adc
loope
xchg
test
sub
jno,pt
inc
inc
sbb
lret
pop
adc
pop
push
push
fldl
push
mov
enter
cmp
inc
in
in
lea
sub
inc
xor
or
bnd
imul
fldcw
cmp
sahf
jecxz
inc
push
das
imul
mov
xchg
inc
sbb
lret
xor
inc
mov
sbb
inc
rclb
mov
and
int
xor
add
loopne
push
jo
jp
fisubs
jg
sub
xor
dec
rcrb
adc
push
cltd
mov
or
dec
popf
popa
sarb
rol
push
jne
call
sub
fimull
push
or
push
loope
xchg
lahf
aas
outsl
inc
mov
cmp
inc
cmc
fmull
roll
fmulp
shll
fs
into
shll
sbb
mull
out
nop
outsl
xor
in
fwait
cmp
sarl
cmp
fildl
add
dec
mov
int3
gs
cwtl
jae
testl
dec
stos
movsb
dec
pop
ret
insl
imul
popa
push
into
es
xchg
pop
shlb
add
jge
or
divb
cmp
jne
popa
cltd
jecxz
sbb
test
ds
dec
cmp
inc
daa
int
pop
jecxz
xor
inc
lret
jno
out
cltd
xor
test
mov
push
test
add
xor
dec
sbb
sbb
call
adc
lcall
inc
testb
mov
inc
or
scas
daa
jne
fwait
orb
std
inc
jle
pop
popf
adc
out
nop
dec
adc
push
sbbb
jne
inc
inc
loopne
sub
popa
or
popf
sub
jne
jno
fs
mov
xchg
cli
dec
rclb
jbe
inc
pop
cmc
adc
fsub
inc
push
jne
cmpsb
mov
adc
pop
in
jmp
sbbb
sbb
roll
nop
inc
adc
and
jbe
mov
inc
test
dec
mov
cld
stc
xchg
adc
push
aas
sbb
pop
xchg
pop
xchg
mov
aas
mov
fimull
xlat
xchg
inc
add
cmpsb
sbb
or
out
ja
and
in
and
ss
mov
loope
lods
mov
lret
push
inc
fistl
in
xchg
xor
inc
mov
push
daa
cmpsl
ss
cmpl
out
andb
ds
pop
inc
jecxz
stc
das
or
enter
or
cmp
xchg
mov
inc
in
adc
inc
sbb
inc
aam
pop
sub
mov
jae
inc
icebp
add
jns
shll
xlat
shufps
jmp
inc
scas
bound
mov
jno
inc
movsl
fstps
inc
cwtl
mov
sbb
mov
rcl
cmp
or
pop
shr
loopne
cld
scas
loopne
insl
jp
mov
shrl
push
loop
inc
lret
mov
dec
int3
pop
inc
popa
test
ficoms
and
jo
decl
rcrl
sub
xchg
xor
mov
sarb
rcrb
lret
pop
nop
jo
inc
xchg
and
insl
movsl
mov
lock
imul
sarl
lea
jmp
dec
inc
add
cmp
cltd
inc
idivl
fistps
adc
in
ljmp
xchg
jne
cmp
inc
add
cld
xlat
fdiv
imul
pop
test
and
es
add
test
xor
xchg
inc
cli
cmpsb
add
mov
ret
xchg
jp
pop
popf
cwtl
popa
cmp
push
adc
imul
push
roll
cmp
dec
push
mov
lods
xor
xorb
lret
adc
pop
dec
nop
jns
imul
fwait
mov
fcmovbe
inc
adc
lock
inc
lods
cs
rcl
push
pop
mov
jns
sbb
subl
mov
pop
inc
cvtps2pi
fldl
enter
aaa
adc
inc
sbb
sub
inc
fmul
faddl
cmpsl
loope
inc
mov
stos
cs
shrl
pop
dec
and
faddl
push
inc
jbe
data16
flds
aam
mov
mov
ss
xor
push
bound
fcmovne
cmp
test
inc
in
fisttpll
push
iret
sub
inc
mov
daa
ret
inc
daa
mov
lret
mov
shlb
xchg
sub
ret
inc
push
xor
xor
fimuls
lds
push
add
xchg
push
je
jo
inc
adc
test
je
fcompl
xchg
pop
stos
mov
loop
jns
popa
mov
cld
cmc
shrb
mov
mov
adc
cmp
xchg
lret
jp
xchg
sub
or
jle
mov
shl
fiadds
cwtl
iret
sbb
xchg
in
jle
insb
aas
inc
mov
das
adc
popf
cs
std
shll
scas
mov
rcll
inc
sarl
outsl
xchg
mov
stc
rcr
or
test
sub
sub
jnp
adc
mov
or
ret
dec
and
add
aaa
jmp
xchg
jb
and
test
xor
shl
or
insl
popf
lahf
arpl
repz
pop
aam
inc
xor
cmp
push
jle
out
cmpsb
gs
push
faddl
sbbb
rcrl
jne
add
cmpsb
cmp
test
dec
sarb
inc
fidivrs
nop
outsb
jnp
call
mov
mov
inc
or
inc
arpl
aas
jle
xchg
inc
xchg
pop
lods
outsb
jo
mov
les
xchg
dec
shll
mov
gs
cli
daa
sub
pop
popa
push
repnz
aam
cmp
cmp
addl
gs
iret
and
and
jns
inc
xchg
rorl
mov
mov
pushf
dec
pop
inc
jae
lret
cmpsb
push
addr16
and
outsb
cltd
insb
cmp
stos
scas
adc
negb
jne
dec
rolb
cmp
push
jns
adcb
mov
scas
dec
jmp
push
cwtl
and
loop
ror
adc
add
dec
xor
inc
jae
outsl
xchg
cmp
pop
aad
inc
fiaddl
test
mov
push
leave
xchg
cmp
pop
or
imul
inc
mov
rolb
ja
mov
mov
jb
cs
popa
dec
dec
out
inc
cmp
jmp
iret
inc
sub
push
cld
and
push
jp
or
inc
movsb
inc
pshufw
fcomps
or
inc
test
pop
adc
shrl
in
stc
jmp
lcall
or
movsb
aas
mov
popf
mov
inc
jo
sti
imulb
outsl
xchg
subl
jo
inc
mov
pop
add
mov
iret
sarb
inc
xor
fcoms
popa
mov
ljmp
inc
mov
mov
jns
dec
adc
lahf
inc
cltd
pop
adc
inc
cmp
ret
call
stc
mov
imul
push
sub
or
mov
pushf
cmp
ss
imul
je
xchg
and
xchg
aam
and
dec
inc
inc
popa
and
insb
dec
xor
repnz
sbb
lea
scas
and
mov
rorb
sub
mov
imul
pop
xor
pop
or
cmp
xchg
cmp
adc
int3
lcall
inc
xchg
iret
fwait
or
push
fmuls
mov
dec
sub
sub
mov
mov
inc
pushf
ljmp
xchg
sbb
mov
out
sbbb
xchg
mov
fistpll
aaa
push
inc
mov
cmc
push
dec
stos
dec
popf
nop
shrl
andl
xor
cmp
sbb
das
les
sbb
push
push
call
mov
jp
fwait
inc
icebp
aam
xchg
adc
inc
in
stos
cmp
sbb
xlat
ret
mov
sbb
inc
hlt
rol
push
dec
fwait
adc
mov
add
sbb
inc
ds
and
lret
roll
push
inc
rorb
fwait
push
cmp
cmpsl
inc
dec
scas
add
pop
ret
sub
nop
mov
xchg
ja
inc
push
push
jg
lcall
push
shrl
pop
or
or
sub
or
adc
mov
mov
jmp
cltd
cmpsb
repz
addr16
pop
data16
loopne
cmp
cmc
pop
jmp
inc
add
and
fnsetpm(287
mov
inc
xchg
sbb
and
inc
xchg
sbb
lret
pop
lea
lahf
inc
shll
cmc
outsl
scas
cmp
inc
in
mov
icebp
adc
iret
pop
std
fcmovnb
add
mov
bound
jnp
mov
test
inc
pop
pop
xor
sti
pop
ret
or
std
jae
inc
mov
cmp
sub
call
test
cmc
rcr
ja
fs
pushl
ret
pop
mov
mov
jb
cmc
pop
js
repnz
or
ja
lahf
rorb
fisttps
cli
inc
popa
cmp
xor
push
inc
mov
push
jle
test
xor
inc
jne
jno
xchg
js
or
fwait
sub
in
push
bound
cmpsb
cwtl
insl
int
vpscatterdq
shl
xchg
mov
mov
mov
js
jne
movl
xor
pop
dec
rcr
dec
cmc
mov
sub
push
or
in
aam
imul
sub
jne
sub
dec
push
jnp
lock
shrl
stc
adc
aas
add
pop
adcb
ret
cmp
sbb
push
sahf
imul
jne
sbb
pop
jge
mov
test
in
pop
cs
mov
add
sti
adc
jp
sub
mov
xlat
add
or
test
addb
sbb
arpl
mov
sub
lcall
dec
xchg
cmp
xchg
inc
mov
pushf
cmp
aaa
jp
pop
syscall
mov
jo
jne
xchg
push
out
or
inc
xchg
push
pop
movntps
add
sahf
fwait
cmc
dec
add
test
ret
jne
mov
mov
imul
push
clc
add
aaa
mov
sub
js
pop
pop
jp
fsubl
inc
adc
clc
in
std
xchg
mov
imul
cmc
daa
mov
and
in
fs
jno
jo
mov
cltd
pop
sub
pop
or
cmpb
mov
xchg
stc
inc
add
cmc
push
pop
jns
mov
hlt
test
sbb
adc
faddl
jecxz
ficompl
lods
or
insl
or
dec
and
lea
dec
dec
ljmp
cmc
test
jmp
mov
outsl
repz
ds
sub
call
jne
inc
shll
xchg
mov
push
test
xor
push
mov
push
xorb
lcall
in
out
sbb
loope
ret
sub
xchg
outsl
inc
cltd
pop
push
mov
push
mov
lock
and
mov
pop
pop
ss
cs
popf
inc
out
cmpsl
pop
lret
lret
gs
push
jbe
xchg
lds
pusha
xor
or
int3
mov
jns
mov
push
ja
mov
fdivrp
int3
inc
push
shll
daa
cmp
jg
loop
lds
mov
push
add
add
jnp
pop
mov
mov
jne
mov
pop
ljmp
inc
xor
jmp
jg
negl
push
shll
dec
pusha
sub
icebp
and
or
sbb
idivl
and
mov
jne
lds
push
ret
jmp
xchg
movsl
push
out
pop
mov
xchg
inc
fisubrl
fsts
adc
push
fyl2x
mov
hlt
and
lcall
orb
rcrb
andl
adc
insl
inc
xchg
push
call
jne
cld
inc
adc
or
outsl
inc
jmp
lods
jg
icebp
hlt
jnp
inc
add
inc
adc
in
inc
stos
sub
push
cmpsl
dec
pop
imul
sbbl
sbb
pop
scas
fiaddl
scas
sahf
bound
sti
rolb
add
xor
mov
mov
sahf
push
popf
daa
mov
popa
lods
loopne
cs
outsl
arpl
xor
lock
inc
sti
add
je
inc
inc
sbb
xchg
in
push
popl
std
sub
dec
push
mov
inc
push
fwait
ret
sbb
in
ret
xor
icebp
inc
pop
flds
jp
bound
sbb
jns
dec
push
and
incl
mov
in
cwtl
and
ficomps
cltd
push
mov
imul
dec
cmp
inc
pop
push
fs
insl
in
call
lds
xchg
jmp
and
pop
inc
test
mov
add
popf
inc
pop
xor
sub
mov
iret
xchg
and
add
out
fisubl
insb
cwtl
pop
movsb
mov
cmp
and
pushl
les
sbbb
and
pushf
mov
xor
mov
pop
test
insl
jp
roll
pop
adc
mov
jae
lock
cs
or
sahf
and
ljmp
inc
jnp
cmp
movsb
mov
xchg
push
out
inc
call
out
mov
xchg
inc
mov
cs
mov
mov
dec
inc
xchg
out
dec
hlt
out
or
xchg
dec
shrl
jle
ret
dec
cltd
repnz
adcb
inc
mov
gs
out
mov
testb
xor
rol
fcmovne
xor
add
pop
cmp
xor
jle
pop
into
in
mov
and
sti
iret
and
pusha
jno
inc
jo
mov
fsts
test
xlat
or
lahf
jge
sub
pop
sahf
rcrl
cmp
dec
rcrl
mov
mov
cwtl
fbld
jl
test
loop
movsl
mov
inc
inc
cmp
fldt
push
stos
inc
insb
dec
mov
sbb
mov
push
cmpsb
rcrb
inc
adc
sbb
or
leave
subb
add
mov
add
inc
dec
mov
cmp
mov
out
in
ret
sahf
mov
mov
mov
lds
enter
into
dec
ret
cld
loope
aaa
mov
push
shrb
popa
push
xlat
jmp
pop
mov
or
xchg
popa
push
pop
lret
lcall
out
add
jae
and
inc
sbb
in
and
inc
adc
inc
lock
rolb
jno
xchg
clc
sti
into
out
pop
add
dec
xchg
test
inc
adc
roll
mov
fisttpl
lret
loope
xchg
and
das
xchg
dec
inc
ljmp
inc
dec
popa
inc
sub
in
xor
xchg
popf
fs
jp
pusha
mov
inc
jae
stos
scas
orb
pop
dec
xor
ljmp
pop
and
mov
add
inc
xchg
test
bound
pusha
dec
jnp
jb
inc
roll
jg
fucomi
inc
pop
aas
rolb
or
sbb
movsl
mov
jge
pop
adc
inc
scas
pushw
mov
repz
cli
sbb
and
pop
or
dec
xor
cltd
add
xor
ret
pop
push
and
mov
int
sbbb
pop
stos
test
inc
pop
mov
xchg
pop
in
clc
inc
jl
push
jnp
pop
mov
cmp
in
in
test
out
js
adc
aaa
sbb
pop
loopne
orl
inc
dec
ret
in
dec
sub
jge
ret
jle
pushl
ret
dec
xchg
inc
push
inc
jo
adc
adcl
jle
jbe
loopne
mov
add
pop
test
loope
inc
mov
aaa
pop
sub
inc
in
jnp
outsl
hlt
push
ret
cmpsl
jp
mov
inc
pop
mov
stos
popf
push
dec
bnd
popa
mov
out
ljmp
pusha
rcl
mov
xor
lock
push
inc
and
out
lods
cmp
push
rorb
jae
cmp
cltd
mov
xchg
dec
incb
inc
sbb
jb
shl
arpl
dec
add
inc
push
aad
in
std
push
out
mov
or
sbb
insl
repnz
inc
jo
inc
fnstsw
iret
push
push
mov
pop
push
jnp
fistpll
inc
arpl
push
inc
and
cwtl
sub
xchg
rcrl
jge
mov
mov
call
lea
dec
cmp
inc
mov
pop
inc
stos
sbb
sarl
icebp
mov
mov
in
imul
cmp
scas
iret
cmp
cmovle
je
nop
stc
stos
dec
jg
aam
lods
add
xor
bnd
shll
les
jbe
inc
loope
push
faddl
rcll
insb
cmc
xor
inc
sub
dec
inc
pop
fcmovnb
rcl
add
inc
enter
fsubl
xlat
das
ja
test
inc
push
or
cmp
adc
inc
outsb
xor
aad
mov
inc
add
fucomi
out
pop
inc
inc
lods
andb
pop
mov
add
inc
cmpsl
in
stos
jle
fisubs
inc
out
or
jmp
push
cmp
dec
inc
and
adc
cld
in
mov
inc
push
repz
fsubp
cwtl
ja
sub
adc
jg
jnp
xor
mov
pop
pop
aad
pop
sub
shll
bound
xor
jno
inc
sbb
or
fcompl
add
adc
addr16
sub
sub
mov
ret
or
or
outsb
stc
inc
cmpsb
or
mov
mov
std
sub
sub
xor
andl
sub
leave
fdivs
incl
cmp
mov
js
data16
push
loop
fisubrl
inc
movsb
hlt
mov
std
jo
inc
xor
insb
jne
inc
cltd
xor
ljmp
sarb
inc
pop
mov
mov
daa
xor
fbld
fwait
arpl
je
test
inc
in
icebp
cmp
stos
lods
jmp
jecxz
or
das
repz
push
popa
inc
inc
pop
out
jns
lahf
out
sbb
rolb
mov
lock
enter
inc
mov
push
jae
imul
icebp
in
adc
adc
shrl
imul
fsubs
mov
mov
out
scas
test
and
js
stos
push
fildl
xlat
mov
pop
ljmp
pop
mov
push
iret
mov
sbb
or
sti
inc
xor
iret
pop
dec
inc
jne
push
xor
lcall
mov
roll
lds
cltd
pop
pop
inc
xchg
out
imul
rorl
inc
fwait
and
cli
jne
inc
std
int3
add
inc
jne
inc
adc
pusha
mov
inc
dec
add
inc
push
outsb
cmp
add
xor
mov
inc
push
ss
inc
mov
xchg
cwtl
shrb
jae
rclb
fsubrs
aaa
mov
andb
jl
subl
xchg
jae
ljmp
sbb
jbe
pop
ja
inc
mov
arpl
filds
xchg
mov
iret
cld
fs
pop
push
pop
inc
pushf
and
outsb
sahf
jle
push
inc
xchg
pop
ds
inc
jmp
jp
jae
dec
mov
push
mov
inc
xchg
dec
imul
mov
jmp
inc
cmc
mov
jge
xchg
inc
inc
push
fwait
push
pop
add
xchg
stos
and
xor
push
inc
adc
inc
sahf
dec
jb
rcrl
les
enter
ret
mov
popa
inc
ret
scas
cwtl
mov
mov
push
int
pushf
dec
subl
push
adc
sub
inc
arpl
shl
loopne
jnp
or
xlat
es
les
inc
dec
bound
pop
inc
int3
out
lds
testb
outsb
cmp
inc
repnz
iret
lea
sub
or
aad
mov
push
clc
sbb
inc
addr16
cmp
mov
fs
mov
jb
cmp
mov
sbb
cmpsl
jge
pop
mov
loop
in
mov
ret
push
mov
sub
cmp
push
jp
inc
loop
mov
movsl
std
inc
cld
dec
lock
insl
and
or
pop
jl
les
cli
lds
add
clc
dec
jns
mov
ds
pop
adc
shll
es
adc
jecxz
sbb
inc
ffreep
lods
std
dec
xor
inc
and
pop
or
aas
inc
adc
mov
cs
sub
insl
mov
dec
fidivrs
sub
mov
addl
sarb
jne
add
push
sub
mov
jno
push
xchg
inc
pop
sub
mov
jp
addb
insb
push
loop
and
sub
sub
adc
mov
mov
sub
push
xor
push
outsl
lahf
mov
pusha
dec
pusha
in
aam
inc
sbb
jp
or
sbb
xor
cmp
scas
xor
sub
lcall
cmp
es
xchg
lahf
fidivl
rcll
jmp
pop
push
and
jmp
dec
test
outsb
xlat
xor
loop
stos
mov
fistpl
fdivrl
sub
call
imul
jnp
lea
sub
mov
rorb
lea
mov
mov
pop
dec
push
push
adc
sahf
xchg
mov
mov
fidivrs
les
mov
and
scas
add
sarl
mov
inc
lret
out
cmc
xor
fstl
pop
test
add
mov
clc
imul
rorb
sbb
ja
mov
stc
stos
cmc
add
lea
inc
ret
sub
pop
int3
jne
mov
xor
jg
inc
or
aas
nop
test
xchg
jle
mov
std
sub
scas
arpl
cmp
mov
cmc
lods
sub
push
dec
mov
mov
cmp
pop
xchg
dec
push
jne
out
cmpsb
xchg
mov
xchg
mov
ud0
sub
stos
jmp
adc
rorb
cmc
jne
jl
jecxz
push
adc
fisttpl
xor
sub
or
add
loopne
jg
push
and
pop
xor
adc
mov
js
sub
popf
mov
add
subl
or
int
cmp
je
cs
sub
in
xor
mov
popf
adc
cmp
rorl
inc
sahf
loopne
loope
mov
cmp
test
test
les
jne
repz
es
jnp
or
xor
cmpl
shl
sub
les
xchg
push
mov
cmc
push
scas
ljmp
imulb
aad
and
mov
and
pushf
into
xchg
pop
scas
xor
lods
bound
in
push
arpl
out
je
cmp
add
push
jmp
adc
es
test
test
shlb
or
mov
lret
jae
imul
pusha
mov
jnp
jmp
push
xor
std
adc
and
cli
test
pop
and
cwtl
loope
jns
jmp
loop
mov
fwait
cli
jns
cmpl
and
or
dec
sbb
popa
pop
inc
dec
cmp
cmp
es
cmp
imul
cmp
lret
test
repnz
mov
leave
inc
inc
fadd
pop
and
inc
shlb
dec
hlt
adc
and
mov
hlt
ja
iret
jmp
ss
test
mov
dec
fwait
aam
pusha
mov
mov
inc
loopne
iret
push
mov
inc
push
push
pop
jg
inc
mov
outsl
into
and
sub
lret
jge
sub
sbb
in
dec
ret
push
rorb
or
adcb
pop
add
fs
leave
xchg
mov
cmpsb
pop
adcb
inc
mov
fwait
cld
pusha
mov
jg
out
prefetcht1
loope
inc
inc
adc
gs
push
je
aas
inc
outsl
cmp
repz
and
shrl
outsl
imulb
ror
popl
sbbl
add
rclb
jae
cmp
addl
repz
inc
in
flds
and
repnz
inc
cmpl
xor
sbb
xor
inc
movsl
scas
lahf
dec
mov
and
push
xor
sub
jae
outsl
insl
mov
add
or
outsb
inc
cmp
jb
test
inc
nop
or
addr16
add
dec
mov
addl
inc
push
ret
dec
fwait
mov
cmp
aam
out
out
iret
mov
flds
add
and
inc
ficoml
mov
add
sub
test
out
insl
xlat
inc
lret
popf
mov
add
inc
stc
fldcw
rclb
test
adcb
lret
fmuls
popa
dec
jge
and
lahf
pop
test
rcrb
mov
jo
xor
inc
or
call
jns
push
scas
push
popf
cmp
outsl
inc
outsl
movsl
dec
push
movsl
xchg
and
arpl
in
aam
popf
mov
outsl
inc
and
iret
mov
rorb
dec
sarb
jmp
push
inc
sbb
sub
and
aam
outsb
outsl
dec
pop
inc
and
rcrl
dec
mov
out
pop
call
roll
pusha
sar
sub
push
pop
repz
rclb
cvttps2pi
bound
push
inc
lret
sub
push
push
inc
sbb
shlb
arpl
icebp
test
xchg
sbb
push
push
inc
int3
stos
xchg
push
lret
orb
outsl
dec
dec
in
movsl
arpl
stos
inc
pusha
ljmp
inc
loop
fists
adc
mov
lret
mov
dec
cmpsl
mov
es
push
das
dec
imul
out
imul
popa
mov
fbstp
orl
outsl
push
call
inc
sti
jp
pop
test
push
addb
lahf
enter
jns
insb
sbb
mov
inc
and
cmp
or
icebp
xor
inc
sub
xor
ret
fs
adc
mov
sarl
std
dec
cmp
inc
nop
dec
or
iret
xor
inc
mov
test
aaa
inc
mov
mov
in
lock
lea
roll
jle
pshufw
lock
push
inc
dec
mov
or
ret
in
push
in
imul
fwait
test
rol
lahf
sub
ja,pt
inc
pop
or
and
test
inc
push
pop
sbb
outsb
test
add
lahf
sbb
jns
scas
gs
test
adc
mov
fwait
cmp
pop
cmpsl
pop
shrb
test
and
popa
mov
scas
inc
jnp
push
sub
and
sti
sub
mov
cmp
mov
movsb
fsub
jnp
jbe
andl
mov
inc
iret
xchg
ficomps
jno
cli
lock
inc
arpl
ret
push
enter
movsb
inc
sub
xchg
mov
inc
and
sbb
mov
out
push
inc
cmc
sub
stos
mov
and
add
adc
jnp
xor
inc
popa
jno
ret
add
mov
jle
inc
cmp
shll
out
mov
repnz
xlat
lds
sub
adc
inc
loopne
aaa
lds
mov
jmp
mov
cmp
aam
jbe
ror
inc
push
fwait
lds
enter
dec
addl
cmp
inc
out
dec
incb
lret
ret
jl
adc
es
in
pop
xor
and
jmp
sub
lret
mov
pop
sub
dec
outsb
xchg
shl
std
jno
sub
inc
dec
ret
mov
and
lret
dec
dec
mov
aam
jmp
repnz
cli
push
mov
and
inc
sub
pop
shr
or
push
sub
test
and
jae
sahf
inc
loop
arpl
push
in
in
inc
sbbb
and
int
pop
and
stos
aam
xor
inc
push
cmc
sub
xor
mov
popa
or
sbb
jo
push
inc
xor
arpl
mov
push
add
adc
fnstsw
pusha
inc
data16
cmpsl
test
mov
mov
sub
inc
movsb
xchg
cmp
mov
outsb
dec
nop
pop
mov
repnz
inc
clc
and
push
sbb
icebp
dec
notl
in
shr
sbb
cwtl
push
inc
addr16
pop
lods
rorb
add
cmp
xchg
inc
ja
fdivl
dec
jmp
cld
popa
mov
inc
outsb
pop
add
inc
outsl
std
jae
sti
lock
test
xchg
adc
dec
bound
mov
shl
xor
jmp
fisttpll
shrl
into
scas
xchg
rcrl
js
outsb
test
shrl
mov
shll
push
popa
sub
and
cmpb
mov
sbb
push
mov
inc
cmc
scas
mov
and
sarb
push
loope
inc
push
mov
jl
adc
inc
sub
sub
lock
push
lret
inc
xchg
inc
pop
and
dec
iret
lods
jae
ret
jne
cmp
shlb
inc
add
push
pushf
imul
pop
mov
inc
scas
arpl
push
in
cmc
push
enter
pop
pop
inc
test
pop
and
ds
sbb
inc
fimull
or
push
ja
xor
mov
push
dec
pop
inc
mov
add
inc
inc
ljmp
bound
shl
sti
xchg
push
sub
jmp
pop
es
shrb
cmpsb
push
iret
xchg
xorl
in
push
mov
xchg
inc
adc
mov
inc
pop
andl
out
test
clc
loop
add
xchg
jbe
shrl
pop
inc
loopne
in
and
mov
iret
int3
jns
or
push
mov
std
out
dec
inc
test
xchg
sarl
jne
push
dec
mov
push
call
jecxz
fwait
pop
inc
xor
shlb
popa
jmp
mov
push
adc
mov
jo
xchg
popa
pop
movsb
icebp
rolb
xlat
mov
or
loope
lds
aas
adcb
rcll
sub
test
loope
xor
adc
mov
in
mov
inc
pusha
fwait
and
lods
sub
inc
mov
inc
ja
inc
fnsave
or
sub
xor
or
mov
inc
mov
sbb
xor
push
jne
stos
adc
pop
jne
inc
push
test
sub
dec
mov
inc
jo
jb
outsb
jne
in
out
and
mov
out
jne
fisttpl
jg
jle
movsb
inc
adc
inc
rorl
test
pop
push
ret
add
outsl
inc
lds
mov
jg
pop
jnp
mov
xlat
lret
push
cmp
mov
mov
or
fs
lea
rorl
mov
enter
ret
testb
inc
nop
insl
mov
jmp
jno
sbb
bsr
push
scas
jp
jno
push
js
inc
adc
jae
fstpl
mov
jnp
aaa
inc
inc
int3
adc
cmp
lods
inc
mov
inc
cmp
mov
inc
mov
push
scas
and
pop
add
pop
push
inc
push
in
leave
lret
mov
and
jp
ja
pop
mov
mov
mov
inc
xor
jno
add
jmp
clc
in
cmp
jae
xchg
mov
loop
test
shll
shrl
popa
and
mov
xor
cmpsb
iret
testl
incl
shll
loop
inc
push
cmp
inc
shrl
mov
add
jne
popf
jbe
inc
inc
stos
in
inc
call
dec
cltd
sbb
pop
and
cli
shlb
cmp
mov
mov
push
and
jl
sbb
inc
add
cs
stos
scas
sbb
mov
jno
inc
xchg
adcl
cmpsl
mov
ljmp
add
aaa
inc
hlt
adc
dec
xchg
mov
add
pop
stc
xor
je
sbb
test
or
inc
cs
inc
shr
jae
lcall
loop
lret
mov
mov
popa
aaa
push
fldl
push
data16
and
sub
cltd
aaa
das
test
addb
movsl
sti
inc
add
notb
xchg
into
cwtl
mov
mov
inc
push
test
lea
movsb
xor
iret
imul
shlb
pusha
test
add
popa
faddp
push
inc
and
loop
insl
jle
and
or
sbb
scas
push
inc
mov
stos
lock
aam
dec
popa
or
ds
mov
inc
and
rcl
aaa
inc
pop
push
inc
cmc
sub
gs
or
jp,pn
pop
cmp
inc
filds
insl
ret
and
scas
xchg
sti
push
mov
rorb
push
and
jb
mov
inc
mov
fidivrl
ret
arpl
shll
leave
insl
pop
push
dec
aam
cmp
int
jo
ror
shlb
mov
push
insl
adc
dec
in
shr
call
ret
sbb
inc
cmp
and
lds
out
shlb
cltd
popa
sbb
lds
test
repnz
sti
imul
xchg
lods
xchg
or
mov
xchg
sub
mov
push
cmp
imul
jp
outsb
insl
inc
mov
ja
lods
pop
inc
xchg
fdivp
and
dec
push
add
lea
testb
lock
popa
cmp
xor
inc
inc
scas
loop
inc
shlb
inc
and
push
or
push
dec
mull
or
fists
in
inc
cmp
hlt
sbb
add
movl
adc
mov
pop
cmp
xchg
dec
ffreep
fimuls
push
adc
fstps
or
xchg
pop
pop
fdivrs
pop
cmpsl
pop
mov
lods
fbstp
mov
push
add
xchg
fldenv
fadds
fisttpl
iret
inc
fstpl
pop
outsb
inc
jno
jge
negl
shlb
add
in
out
xor
cs
dec
dec
fcmovbe
adc
pop
xchg
mov
inc
push
mov
lods
pop
aaa
repz
and
frstor
inc
fmull
mov
rcr
cmp
cmp
mov
pop
test
jno
cmpsl
pop
testb
pop
or
inc
pop
dec
and
cli
mov
mov
shlb
fldl
fcoml
and
inc
cmp
fdivrs
rcr
pop
mov
xchg
or
fstpl
pop
xchg
orl
repz
pop
sbb
rcr
fadd
pop
jp
mov
data16
cmc
push
fmull
pop
cmp
fadds
sub
dec
xchg
cmp
pop
jae
fstpl
pop
push
xchg
adc
cltd
pop
dec
and
inc
rcr
jb
jge
xchg
fstp
fwait
pop
and
outsl
fnstcw
ja
push
pop
push
and
gs
insb
pop
ja
sbbb
mov
jno
ret
imul
ficoml
and
pop
xchg
pop
fcmovnu
fbstp
push
pop
pop
mov
inc
fsubs
insl
ret
notl
or
push
jae
fstpl
adc
pop
test
dec
or
xor
ret
aam
repnz
jle
ror
fnsave
jmp
movsl
pop
cmp
movsl
test
mov
dec
mov
addps
sub
pop
pop
add
cmpsb
sbb
rorl
fstpl
dec
int
push
aam
and
cli
add
pop
rcll
ds
xchg
pop
cmp
adc
ret
lcall
jnp
fistpll
push
dec
mov
cmp
pop
fiadds
add
mov
fcos
adc
loope
stos
pop
daa
xor
dec
pop
or
mov
in
push
jbe
mov
testl
cmp
pop
xchg
frstor
and
loop
push
fcmovnu
rcrb
mov
inc
pop
int
fcoml
xor
shll
pop
adc
inc
pop
adc
jno
pop
dec
sub
push
or
pop
or
data16
mov
mov
fstp
ficoms
jno
andl
pop
or
sub
rorb
cli
mov
fnstsw
lret
dec
inc
fmull
jns
inc
pop
sub
popa
pop
cmp
xchg
ficomps
push
lea
cmp
add
pop
mov
or
push
and
cmpsl
jno
or
shll
inc
ret
fldl
pop
pop
js
inc
rcrl
dec
cmp
fsts
dec
xor
sbb
cmp
jns
movsl
fiadds
loope
pop
call
mov
mov
adc
dec
js
push
inc
dec
shll
ret
jnp
or
fistpll
sbb
div
adc
mov
cwtl
push
insl
arpl
flds
xchg
shrb
pop
pop
dec
mov
jne
call
or
ja
pop
pop
mov
test
rclb
mov
sbb
jbe
xor
jae
pop
inc
ret
das
dec
push
dec
bound
mov
mov
fstpl
pop
outsl
inc
dec
fcmovu
sub
into
shr
popa
inc
dec
setl
xadd
push
ror
shl
rol
push
dec
pushf
lea
xchg
shr
push
sub
neg
sbb
mov
call
push
pusha
movl
call
ja
je
mov
xlat
lds
fdivp
pop
cmp
aas
outsl
push
jne
fiadds
xchg
rorl
ret
cwtl
ja
mov
je
in
cld
mov
jp
into
test
mov
les
ret
mov
dec
pop
xor
negl
aaa
idivl
ja
push
ds
adc
mul
or
jae
iret
add
shrl
lods
mov
pop
add
std
out
pop
add
mov
add
pusha
pusha
pushl
dec
pushl
rol
pushl
cmc
cmc
add
bt
movb
rol
jmp
call
inc
sub
bts
mov
mov
test
pusha
cmpb
push
lea
jne
rcl
cwtl
xor
daa
bts
or
mov
pusha
setp
rol
add
mov
adc
inc
mov
cmc
cmp
pushl
push
test
pushf
pushl
pushf
lea
jmp
cmp
push
bswap
pop
not
lea
not
setno
push
pop
mov
movb
mov
pushf
lea
ja
jmp
stc
pushf
cmc
or
jmp
bt
rol
pushl
bt
pushf
add
call
cmp
jmp
call
bt
cmc
or
pushf
pusha
lea
je
not
pusha
mov
movsbw
lea
push
pushl
jmp
jmp
adc
scas
mov
adc
iret
or
mov
add
sahf
mov
shrl
and
ret
addr16
test
or
push
aad
es
cmp
js
jp
addr16
adc
sub
lea
jne
inc
lea
mov
test
jmp
mov
lea
jne
call
not
setne
not
lods
jmp
jmp
pushf
mov
call
clc
rol
mov
inc
clc
cmp
cmp
test
neg
cmc
cmp
cmc
movb
cmp
mov
pop
lea
bswap
mov
mov
mov
movb
lea
ja
jmp
jmp
cmp
clc
mov
stc
neg
mov
add
mov
pusha
bt
mov
stc
stc
call
jb
clc
push
test
cmpb
pushf
lea
jne
rcl
mov
bt
bt
add
pusha
call
jmp
cmp
pusha
jmp
dec
xchg
inc
scas
mov
jge
and
adc
fiaddl
jl
mov
out
pop
jb
dec
pop
outsb
into
lcall
and
out
jae
pop
shrl
add
out
mov
mov
pop
fistpl
dec
cs
mov
popa
cmp
insb
bound
jge
pushf
mov
cmp
or
lcall
push
mov
mov
ds
pop
pop
jmp
mov
dec
add
jge
out
and
mov
jne
mov
in
loope
jbe
add
jl
roll
xchg
mov
sub
xlat
orl
mov
pop
or
xor
jge
pop
add
or
and
sbb
arpl
add
imul
out
pop
inc
xor
fs
stos
nop
xchg
mov
cltd
mov
or
repz
xchg
pop
pop
sub
jnp
movsl
ljmp
mov
pop
and
lea
loop
push
add
das
adc
adc
addr16
jecxz
sbb
int
mov
std
fs
mov
add
pop
xor
xchg
lcall
clc
es
pop
push
negb
sbb
mov
mov
mov
inc
dec
paddusb
inc
inc
pushf
xor
insb
icebp
dec
add
or
adc
and
cld
push
popl
push
les
add
out
mov
js
outsb
ljmp
fistps
sub
mov
dec
loop
lods
mov
and
adc
mov
imul
fimuls
and
movsl
jb
je
xchg
add
or
and
push
dec
pop
push
je
mov
dec
rcll
pop
pop
sarb
daa
push
add
daa
out
xchg
mov
adc
fmull
sbb
cs
ss
data16
stos
inc
mov
shlb
lods
jne
mov
mov
insb
cmpsb
aas
sub
mov
or
cmp
inc
inc
addr16
ficoml
in
sarl
punpckhbw
sbb
bound
shlb
mov
xor
out
aas
sbb
mov
inc
xor
lret
aas
or
clc
arpl
fcmove
sbb
push
cli
cmp
outsl
jnp
push
adc
leave
lods
push
cmpsb
shll
ret
jno
or
dec
insb
f2xm1
insl
fiaddl
stos
mov
mov
outsb
hlt
sub
jb
add
lods
dec
jno
repnz
inc
xchg
outsl
test
adc
out
fsubrl
add
dec
mov
out
add
hlt
int
cmp
pop
test
daa
jae
add
dec
mov
pop
repz
jl
dec
jecxz
cmc
push
jle
bound
push
fisubl
jnp
idivl
and
push
subb
fmul
or
xor
ljmp
notb
add
mov
xchg
dec
or
daa
ds
daa
das
push
mov
pushf
cmp
cmc
jmp
pusha
push
mov
pusha
mov
pushf
pushl
ret
pushl
movb
add
bt
cmp
pushl
xor
clc
bt
ror
test
shr
movb
movb
jmp
lea
jae
stc
pusha
stc
sub
push
pusha
movw
lea
call
jmp
movzbw
mov
lea
movzbw
mov
movsbw
mov
jmp
push
lea
jae
push
call
movl
mov
mov
pushf
push
movl
pushl
ret
adc
jmp
mov
jnp
mov
cs
xchg
add
rcrb
movsl
leave
outsl
sub
enter
cmc
out
or
add
mov
loop
jns
push
mov
lcall
cmp
xchg
xorl
stc
or
lods
jmp
pushf
cmp
jmp
leave
stos
adcl
push
mov
inc
subb
data16
adc
pop
inc
nop
jnp
mov
loop
xchg
cld
mov
imul
fwait
push
data16
push
adc
imul
and
sahf
push
dec
xlat
or
imul
sub
test
lds
movsb
in
inc
lea
call
lea
pushf
movw
mov
pushl
push
mov
jmp
mov
lea
jbe
shl
add
lea
bts
mov
bsr
rcr
add
not
rcr
mov
movzbw
mov
sub
add
test
btr
movl
ror
bsr
mov
jmp
push
test
test
call
je
mov
push
jge
hlt
fs
inc
add
pop
jl
fwait
adc
jg
sbb
in
mov
dec
imul
adc
les
jns
push
pop
in
shrl
out
jmp
aaa
test
inc
dec
jnp
popf
mov
shll
dec
push
adc
ret
notb
das
rcrl
or
je
call
daa
pop
mov
outsb
test
call
cmpsl
push
jmp
scas
jge
mov
test
cld
or
and
pushf
pusha
out
loopne
lcall
xor
lds
jge
xchg
pop
out
mov
shll
imul
in
inc
dec
and
mov
data16
decl
imull
inc
out
rcll
out
adc
stc
jb
pushf
and
fdivs
es
fcomi
xlat
add
iret
or
out
pusha
pusha
movw
movl
pushl
pushf
push
movl
pushl
push
push
mov
lea
jmp
call
pusha
jmp
pushf
lea
jne
movsbl
mov
bt
add
jmp
mov
xor
mov
bt
call
pushl
popl
lea
call
jmp
adc
push
mov
movw
lea
jmp
pusha
xor
lea
jmp
fcmovnu
mov
lret
xor
jle
xchg
pop
imul
xchg
data16
loop
jg
sbb
sub
jmp
push
popa
jnp
mov
leave
cmc
loopne
adc
daa
xor
add
rolb
push
cld
push
fsubr
stos
idiv
decl
test
test
decl
mov
andb
cwtl
dec
clc
lret
or
sub
xchg
jno
push
pop
lret
pop
pop
or
ret
mov
jno
hlt
gs
cmpsl
lahf
push
add
scas
push
mov
jns
pop
cmpnleps
adc
add
push
push
lds
int
lds
into
jmp
js
je
sub
pusha
xor
pop
push
fcomi
sahf
jns
jl
add
add
cs
je
shrl
mov
call
cld
dec
mov
sub
push
icebp
mov
cmp
test
fbstp
pop
lods
pop
push
jmp
es
adc
push
imul
cmp
cmc
test
push
mov
ja
mov
adc
xchg
pop
mov
mov
adc
popf
xchg
pop
push
lea
lods
pop
js
leave
pusha
pop
out
add
and
or
jmp
add
pusha
push
push
mov
movw
jmp
pushf
sub
mov
push
bt
call
icebp
movsl
mov
push
insb
clc
ret
pop
and
pop
scas
lret
mov
ds
fwait
cmpsb
mov
mov
jb
scas
or
xor
ja
out
cmp
sub
add
jmp
push
in
out
mov
call
push
cli
xchg
or
popa
jp
insb
mov
cmc
xor
xchg
mov
insl
sub
inc
scas
addr16
mov
imul
stos
dec
jle
lea
mov
icebp
push
les
mov
out
mov
ss
mov
pusha
fsubl
ret
or
ss
mov
je
mov
test
and
test
push
call
cmp
lea
jle
pusha
lea
ja
jmp
dec
loopne
movsb
mov
cld
jne
fiaddl
push
jb
pusha
movsl
push
push
inc
cmp
xor
and
inc
xor
aad
sbb
in
andl
inc
test
add
dec
xchg
dec
sbb
cmp
arpl
fadd
mov
rorb
sbb
in
pusha
nop
pop
stos
repz
jb
fsubl
add
xlat
sarb
je
mov
ror
push
gs
loop
mov
push
lea
jae
lea
mov
neg
cmc
dec
mov
rol
mov
call
add
inc
push
add
push
add
inc
push
add
or
add
add
add
add
and
push
mov
pusha
lea
call
push
mov
pushf
pushf
lea
jmp
pusha
or
pusha
pushf
pushf
pushf
lea
jne
neg
mov
call
mov
mov
ljmp
inc
sbb
loope
lds
xor
push
pop
pop
ret
mov
mov
addr16
fisubrl
pop
daa
aam
sarb
sbbl
or
daa
pop
jns
sub
fldl
sub
adc
add
insb
popa
fimuls
inc
ja
lea
ds
loope
xchg
or
testl
imul
testl
ret
in
lods
outsb
pop
popa
sub
test
bt
repnz
movw
lea
jne
clc
mov
add
inc
test
sub
rol
shl
add
sub
mov
pushf
sub
pushf
stc
pushl
popl
clc
cmp
mov
mov
jmp
push
lock
std
std
xorl
jne
mov
popf
and
pushf
mov
pop
mov
xor
ficomps
or
jno
dec
dec
sbb
cmp
pop
pop
enter
sub
test
push
pop
test
fstl
add
clc
inc
inc
xchg
adc
xchg
push
xchg
mov
pop
testl
lods
push
fiadds
mov
adc
xor
ret
int
in
not
jnp
mov
or
in
add
sbb
or
inc
sarb
xchg
mov
push
notl
jne
push
gs
test
int
add
xor
sbb
lret
xor
mov
pushl
adc
lea
pusha
movb
pushl
ret
pusha
lea
jbe
pusha
movzbw
movsbw
clc
sub
pusha
rol
xchg
mov
movsbl
mov
bts
add
btr
bsf
call
pushf
lea
jae
stc
pushf
mov
stc
cmp
jmp
add
mov
push
adc
aam
dec
in
ja
mov
or
lcall
pop
ljmp
xchg
icebp
popf
mov
add
adcl
aad
sbb
push
test
push
xor
ljmp
int
icebp
inc
xchg
bound
mov
mov
fs
pop
les
je
mov
lret
fidivl
xchg
cmpsb
dec
in
pop
and
insl
jle
or
outsl
and
mov
jne,pt
mov
icebp
lcall
pusha
pushf
call
jb
test
pushf
cmpb
lea
jae
jne
xor
clc
bsf
jmp
pusha
push
lea
je
test
call
test
and
shrb
mov
sbb
add
fildl
mov
fisubrs
cmp
mov
xchg
insl
stc
popf
add
adc
test
cwtl
xlat
roll
adc
rcrl
xchg
mov
nop
xor
popa
fldl
mov
jp
fdivs
inc
jp
lods
ja
icebp
imul
pop
jne
mov
push
xchg
inc
mov
ja
xor
mov
xor
fnstenv
and
mov
push
pop
cmp
mov
cmp
xor
or
jle
sub
add
xchg
or
push
out
rclb
adc
jge
pop
scas
add
dec
xchg
fnstcw
sbbb
mov
jmp
add
sub
or
aaa
inc
clc
ja
add
sub
mov
insb
sub
and
xor
mov
add
movsl
add
or
aad
adc
inc
mov
cmp
mov
nop
inc
lock
les
aam
fdivs
into
mov
xor
sub
in
movsl
outsl
fwait
aaa
out
push
pop
fistl
jae
sbb
mov
pop
add
pushf
mov
mov
mov
pushl
stc
stc
cmp
pusha
lea
jbe
neg
mov
sub
stc
btc
lea
add
sbb
shr
xor
mov
cmp
movzbw
add
or
rcr
inc
lea
movl
shld
rcr
btc
shl
mov
bt
stc
cmp
pusha
pushf
pushf
lea
jbe
inc
sub
push
bts
sub
stc
mov
xor
bsf
adc
mov
bswap
add
btc
pusha
or
shr
sub
xor
rcr
btr
mov
rcr
sbb
shrd
add
pushl
lea
movsbl
call
xchg
inc
mov
js
cmp
xor
sub
dec
adc
push
mov
popa
pop
out
pop
test
adc
dec
pop
sbb
sbb
adc
add
lcall
cmp
gs
cli
xor
sbb
ja
push
sahf
cmpb
adc
neg
enter
shll
mov
mov
jae
ljmp
mov
mov
cmpsl
xchg
pop
push
inc
hlt
stc
dec
lea
and
inc
repnz
xor
mov
mov
repz
rolb
rorl
add
dec
test
add
movsb
rorl
sub
lea
not
push
mov
movsbl
not
mov
movzbl
lea
mov
lea
push
pushf
not
mov
pushf
call
lea
jae
cmc
clc
cmc
cmc
xor
js
pushf
pushf
pushf
lea
call
pusha
call
mov
test
cmc
cmp
jmp
push
call
movw
call
int
sahf
mov
cmp
push
pop
adc
lods
pop
dec
or
test
adc
jge
shlb
push
outsl
cmp
pop
in
push
push
das
insl
inc
inc
pop
push
andb
push
push
dec
adc
es
addr16
movsl
subl
addr16
fdiv
popf
mov
leave
aam
mov
fistps
enter
imul
lahf
mov
ficomps
ret
imul
aam
sub
ja
iret
mov
in
sbb
jp
jp
xchg
int
jno
sarb
xorl
sbb
aam
ficompl
and
sti
add
dec
or
and
stc
out
repnz
lods
mov
les
pop
test
aas
mov
rcr
out
fildll
fidivl
mov
jecxz
data16
aam
mov
mov
fdivs
andb
mov
into
or
xlat
cmpsl
mov
jo
and
pop
setbe
mov
out
push
xchg
testl
and
sbb
jl
and
mov
adc
scas
jp
xlat
ret
lea
jne
cwtl
setge
setae
movb
lea
push
movsbw
jl
movzbl
lea
push
jmp
lea
jae
bsf
mov
push
test
pusha
add
mov
bts
setl
adc
mov
cmc
cmc
sub
add
call
pushf
pushl
lea
jne
shld
bts
shl
bsf
mov
sub
test
or
sub
call
jne
cmp
bt
test
or
call
movsbw
movzbl
mov
movw
jmp
lea
setbe
mov
pushf
jmp
btc
mov
pushf
pushf
pushf
test
cmpb
call
lea
jne
btc
shr
adc
mov
push
jmp
lahf
jmp
mov
bswap
push
movl
jmp
str
call
push
lea
jne
lea
not
lahf
call
imul
bt
pusha
add
push
pushf
lea
jmp
jmp
adc
pusha
jmp
pop
stos
pusha
fwait
mov
iret
pop
shll
cmp
mov
mov
lcall
ret
out
imul
fldt
sahf
mov
inc
inc
sbb
pop
lcall
sub
mov
fmul
in
cmp
sbb
iret
and
add
and
dec
imul
xor
or
and
xor
lret
aam
xchg
in
inc
repnz
cmp
dec
enter
ror
shl
adc
loop
dec
jl
jmp
lea
je
push
pusha
jmp
cmp
repz
jno
xor
mov
xor
incl
jno
xor
mov
inc
xor
hlt
inc
repz
repnz
inc
xor
inc
xor
mov
icebp
bnd
xor
mov
inc
xor
mov
hlt
sar
add
dec
xchg
pop
js
mov
mov
xor
mov
add
pushf
sub
fldl
xchg
movsl
add
dec
shll
jbe
inc
aad
xchg
fsubrs
rcll
pop
aad
mov
int
imulb
int
lods
int
lret
in
sbb
mov
neg
fistl
sub
stos
test
jl
jecxz
fs
jp
out
std
mov
ret
out
mov
xchg
jbe
or
cld
lea
ja
pusha
push
lea
jb
pushf
pushf
cmpb
push
pushf
pushf
lea
jne
jne
shl
mov
bt
add
push
cmp
movzwl
sub
inc
sar
mov
stc
clc
add
pushf
mov
push
push
test
call
ret
orl
jl
and
push
adc
adc
pop
cmp
cmpsl
je
mov
mov
sub
dec
adc
outsl
sbb
int
push
pop
sbb
cltd
sti
loope
fwait
xchg
push
cld
cmp
cli
pop
mov
and
aas
add
int
mov
movsl
adc
or
push
ss
jno
xchg
imul
ret
dec
fwait
leave
notb
loopne
mov
mov
xor
out
pop
sbb
je
cmpl
jmp
notb
sbb
gs
cs
sar
lea
mov
jg
jbe
das
nop
adc
inc
clc
test
stc
cmpb
je
pusha
pusha
movb
lea
jne
shl
adc
bsr
mov
stc
add
bt
movzwl
bswap
push
shrd
mov
clc
test
cmp
test
add
pushf
jmp
bt
or
call
push
lea
jae
not
mov
movsbl
ror
mov
or
test
clc
neg
mov
call
cmpsl
pop
sub
pop
shlb
inc
lds
or
and
gs
ret
pushf
pop
rcrl
daa
popa
inc
sub
cmp
mov
mov
mov
mov
ss
cmpsb
cmp
xor
lea
test
mov
xor
push
daa
and
roll
sub
push
pop
fs
nop
jnp
cmpb
mov
xor
sub
pushf
mov
les
mov
jno
mov
or
dec
push
int3
and
xor
mov
lds
push
dec
and
jge
test
rolb
mov
pop
jg
and
push
xchg
test
cltd
inc
stos
sarl
inc
sbb
aam
push
sub
fnsave
into
or
push
push
jne
and
push
xor
lds
shll
mov
aam
mov
pushl
into
mov
insb
lods
and
mov
cmpsl
test
and
pop
pop
push
and
lock
sbb
out
push
orb
cmp
fnstenv
nop
icebp
or
dec
into
test
pop
fdivs
adc
mov
pop
cli
fcompl
lock
inc
xor
inc
mov
and
adc
inc
rcrb
test
mov
xor
mov
cmp
scas
jp
subl
fnstenv
or
add
shr
int
push
inc
dec
pushf
xchg
sub
dec
enter
aam
or
fbstp
frstor
loope
xor
and
lds
dec
dec
jge
pop
xchg
jp
xor
popa
mov
pop
mov
sbb
dec
divl
and
ja
add
stos
insl
pop
les
inc
sahf
xchg
inc
inc
inc
es
popf
shll
lret
leave
push
aad
add
and
sub
dec
aad
inc
test
push
dec
and
mov
dec
aam
mov
shll
dec
rcrl
pop
sub
pop
inc
fwait
andb
arpl
popf
pop
int
inc
mov
mov
rorl
das
pop
test
jns
ja
mov
insl
rcrl
xor
pop
imul
inc
dec
andb
cmp
xor
int
inc
xchg
andb
gs
xor
cltd
int
inc
pop
andb
gs
xor
xchg
xor
int
inc
and
xor
xorb
jns
inc
mov
cmp
movsl
pop
popa
mov
pop
inc
inc
inc
jo
daa
mov
mov
dec
mov
dec
sarl
xchg
fstps
es
mull
mov
daa
pushf
and
lock
adc
cmpsl
xchg
movsb
adc
inc
mov
fadd
push
xor
leave
sbb
xchg
xorl
cmp
mov
ret
shlb
cmp
inc
and
jg
pusha
out
je
out
int
or
rclb
push
add
add
xlat
or
mov
dec
push
rcr
and
aad
lahf
pop
cmp
fdivs
xor
inc
jbe
inc
bound
pop
daa
pop
pop
cli
dec
cwtl
inc
fwait
jno
inc
ret
jmp
mov
inc
add
mov
iret
and
leave
push
gs
mov
sbb
adc
repz
or
fcmovnbe
jns
cmp
pop
mov
mov
inc
push
or
pop
dec
jno
cmp
mov
xor
lds
loop
jg
ja
fadds
sarl
push
lds
mov
cmp
dec
int
lea
dec
dec
movsl
dec
addr16
inc
cmp
push
xor
adc
test
mov
fmuls
arpl
xor
add
shll
ja
mov
ret
cmp
inc
jae
add
pop
inc
into
fstps
inc
dec
andl
popf
lds
inc
leave
inc
and
cmp
mov
das
dec
shlb
xchg
dec
push
popa
shl
or
insb
cmp
movsl
daa
push
lds
into
rorl
sarl
aas
stos
xor
aaa
push
inc
or
ret
cmc
adc
andl
inc
xor
leave
icebp
xor
cld
jnp
xchg
xor
ret
jnp
aad
mov
ret
ret
mov
leave
lea
and
test
aas
lret
sub
cltd
dec
mov
sub
cmp
push
movl
adc
lds
lods
mov
cmp
data16
cmp
xor
testb
leave
xor
and
sub
rcl
sbb
out
or
and
adc
fdivrl
cmp
xchg
lds
push
insl
stc
fwait
test
lds
jae
lds
test
and
fwait
push
mov
xchg
test
add
xor
lds
enter
add
pushf
nop
push
subl
and
pop
push
jbe
js
imul
adc
iret
loope
pop
and
mov
sub
inc
cld
jg
xchg
xor
loope
fadds
sbb
pop
das
sub
popa
and
cmp
add
cmp
ljmp
hlt
sbb
jmp
fnsave
pop
les
cmpsb
daa
sti
push
inc
or
mov
lds
shll
lds
pop
outsl
xorl
stos
xchg
push
inc
into
mov
cmp
add
fcomps
pop
daa
test
test
cmp
adc
imul
popa
inc
cmp
jno
fwait
jae
lods
jns
aas
aaa
imul
iret
cmp
dec
lds
fcoml
push
pop
inc
fs
dec
insb
inc
push
push
mov
imul
push
push
cmp
jno
in
aaa
xchg
lds
dec
dec
add
loope
dec
inc
xchg
push
mov
jno
mov
ss
test
add
popa
imul
mov
cmp
cs
addr16
imul
xchg
push
rcr
rorl
inc
decb
or
dec
inc
jne
repz
mov
scas
sarb
xor
lea
dec
mov
dec
mov
cmpsb
push
sarb
cmp
aam
push
dec
sub
dec
xor
rcrb
and
ret
cmp
mov
cmp
dec
lea
and
mov
dec
inc
sub
cmpsb
cmp
xchg
xchg
adc
adc
mull
push
adcl
push
popa
es
pop
or
jno
xchg
hlt
push
jp
mov
xchg
mov
repnz
cmpsl
mov
pop
pop
dec
push
push
popa
sub
ss
or
xchg
dec
rorl
dec
xchg
inc
sar
inc
push
and
lret
xor
es
dec
int
mov
dec
dec
xor
jae
push
inc
and
aad
and
xchg
insb
leave
push
pop
sub
int
shlb
stos
add
xor
adc
mov
inc
loope
daa
test
stos
js
sbb
mov
fdivrs
mov
inc
sub
daa
stos
inc
dec
jne
inc
insl
dec
gs
popf
pop
or
dec
sbbl
scas
lret
and
enter
fldcw
mov
sbb
out
jno
add
xchg
mov
or
dec
popl
mov
int
sub
lahf
fildl
add
dec
jno
rcrl
inc
insl
test
and
mov
ds
pop
hlt
rcl
mov
sub
fimull
mov
es
inc
inc
inc
jnp
ja
cs
and
pop
lods
add
lret
stc
cmpb
xchg
shll
dec
dec
add
fisubl
xchg
add
push
jbe
loop
jle
dec
and
les
pop
outsl
xchg
inc
fsubrs
arpl
popa
and
xchg
inc
rolb
mov
gs
mov
lret
mov
pop
mov
pop
adc
test
xchg
lahf
sub
sub
jo
bound
xor
scas
xlat
int
sub
lds
pop
imul
adc
push
sbb
push
xor
push
test
insl
sub
movaps
inc
and
add
xor
jno
dec
cltd
imul
push
sub
dec
outsl
test
push
dec
lahf
dec
jg
add
xor
push
add
add
call
push
daa
test
dec
mov
xchg
mov
mov
lods
dec
mov
lahf
outsb
mov
orl
xor
mov
sbbl
pop
cmc
push
pop
sbb
xor
or
fistpl
push
add
mov
test
and
add
mov
push
mov
jnp
push
xor
push
cmp
push
insl
sub
mov
orb
mov
mov
stos
mov
outsl
mov
sub
adc
popf
dec
and
and
iret
outsb
sub
test
and
push
add
inc
arpl
fbld
shrl
addr16
aaa
or
sbb
mov
push
adc
pop
add
lahf
and
std
or
push
mov
test
gs
sub
jecxz
mov
or
push
out
insl
add
imul
movsl
jl
mov
inc
and
lods
adc
sub
pop
je
clc
inc
hlt
ret
push
test
or
je
mov
push
pop
je
and
stos
insl
sub
aad
stos
and
in
je
mov
outsl
imul
nop
dec
fisttps
sti
pop
test
popf
stos
dec
popf
jo
lret
cmp
je
pop
mov
cmp
int3
sub
or
push
popf
leave
lahf
test
inc
std
mov
push
rcr
push
cmpsl
mov
cmp
test
int
test
pop
inc
int3
inc
add
andb
and
and
xchg
add
mov
andb
jle
or
xor
pop
lea
mov
out
push
or
daa
cmc
test
lea
lods
sbb
or
xchg
gs
and
push
inc
and
xor
stos
cmpsl
xor
pop
add
add
lds
loopne
xchg
addr16
fwait
leave
push
jge
mov
inc
stos
jnp
es
ret
cs
inc
sub
shll
and
bound
movl
inc
leave
inc
sahf
inc
fsubs
push
jne
inc
jae
and
gs
adc
sarl
jle
call
mov
and
pop
sub
loop
xchg
pop
sub
pop
addr16
inc
and
add
rcr
movb
imul
mov
jae
es
rcrl
fistl
pop
and
movsl
jge
cmp
sahf
xchg
fnstsw
push
test
test
ss
jns
aam
jmp
and
or
or
cwtl
mov
pop
or
rorb
inc
arpl
rcrl
xchg
push
lcall
or
inc
xlat
push
dec
and
push
and
push
cmp
inc
orl
push
arpl
and
push
jbe
inc
push
or
leave
mov
or
and
sub
enter
mov
nop
xor
fwait
or
push
inc
gs
dec
or
pop
and
cs
and
mov
adc
push
int
xor
add
mov
push
popf
xor
push
and
mov
mov
ds
xor
cmp
jo
jnp
das
jnp
fs
aam
mov
mov
js
pop
pop
pop
movsb
in
push
mov
adc
push
pop
movsb
push
mov
cmp
inc
jae
test
and
cli
xor
jge
pop
adc
pop
insb
mov
cmp
sub
push
jle
mov
mov
add
sub
imul
xor
aaa
mov
std
mov
push
testb
mov
and
ds
mov
sbb
fwait
push
inc
test
lahf
stc
mov
xor
imul
and
cmp
js
outsb
enter
test
pop
and
call
call
jp
sbbb
mov
in
dec
jl
xor
pop
xchg
enter
mov
dec
sbb
mov
dec
cmp
sbb
and
xchg
je
xchg
in
pop
rol
mov
inc
addl
push
test
cmp
repz
adcl
xchg
fstps
gs
fmuls
or
adc
sub
cwtl
rcll
inc
cmp
cmp
or
sub
inc
and
pop
icebp
and
push
cmp
push
shll
inc
jne
dec
pop
andl
sbb
loope
loope
pop
mov
loope
loope
lahf
shll
and
push
add
idivb
add
fwait
leave
pop
and
sub
shlb
or
push
es
daa
mov
dec
push
test
sub
fbstp
dec
cmp
dec
inc
xchg
dec
sub
sub
and
push
sub
pop
pop
lds
and
inc
xor
pop
mov
enter
es
call
pop
pop
push
inc
aaa
sub
daa
xor
push
repz
imul
xlat
pop
inc
push
inc
push
subl
mov
pop
push
jp
mov
inc
mov
pop
or
push
lahf
mov
aaa
filds
dec
and
iret
aad
adc
pop
out
cmpsb
jnp
push
jo
push
jg
dec
movsl
inc
je
dec
push
inc
fcomps
jns
cld
movsl
inc
push
es
lahf
sbb
popa
mov
cmpsl
xor
jg
ret
inc
enter
adc
stos
rcrb
inc
enter
insl
inc
jns
mov
loop
scas
lock
leave
inc
cmp
xchg
adc
adc
cwtl
jbe
ret
sub
pop
jge
shlb
ret
les
dec
loop
and
push
fstl
rclb
addl
pop
inc
test
inc
lea
mov
adc
mov
dec
mov
int3
jne
lock
xor
hlt
push
dec
gs
call
sarl
sbb
pop
inc
jg
mov
xchg
xchg
dec
inc
push
mov
imul
sar
cmp
sub
les
xchg
or
push
fimuls
lds
push
loope
jg
mov
dec
jge
fimuls
cltd
or
ja
or
icebp
cs
pop
repnz
lahf
xor
xor
jg
xchg
in
mov
jno
inc
rol
rol
inc
popa
inc
ret
mov
ffree
inc
dec
push
cmp
jno
rcrb
shll
mov
jb
out
jge
or
xchg
mov
pop
inc
lahf
cmp
les
sub
out
sub
sub
movb
daa
xchg
sub
lods
jnp
in
inc
xor
sbb
and
aad
jmp
xchg
movsl
addl
gs
dec
das
inc
insb
cmp
push
inc
mov
mov
push
imul
or
and
inc
je
push
test
jle
xor
push
lds
imul
test
leave
dec
push
pop
and
sub
xor
fldenv
dec
and
leave
je
insb
and
push
xchg
dec
push
xchg
and
push
inc
dec
inc
push
jge
inc
jb
insl
or
lcall
adcb
xor
daa
push
pop
and
push
inc
lret
js
leave
jae
imul
pushf
push
xchg
dec
mov
and
sub
push
dec
dec
push
jge
inc
jb
imul
push
xchg
and
ss
cs
push
and
test
stc
lds
bound
and
int
leave
inc
test
popf
lcall
loopne
aad
xor
pop
lds
and
test
inc
cmp
dec
andb
or
xor
jae
jp
inc
bound
and
pop
and
cmp
or
jno
jnp
inc
loop
dec
push
push
and
sub
xor
loopew
leave
mov
mov
fwait
push
arpl
and
sub
nop
push
xchg
aas
lds
pop
dec
and
xor
mov
xchg
jg
loope
push
jae
imul
cwtl
or
ds
cmp
push
pusha
cwtl
mov
jne
outsl
and
xchg
and
xor
and
jle
inc
jb
insb
jo,pn
xchg
mov
ds
cmp
and
push
and
and
jns
inc
push
or
lcall
aas
dec
fldcw
or
push
and
pop
push
push
dec
test
insl
loop
je
cmp
xor
or
push
and
test
add
insl
push
addr16
nop
and
xor
and
dec
and
and
jne
imul
or
addl
sub
or
push
pop
and
push
inc
leave
jp
inc
jo
push
push
nop
and
cs
sub
push
and
push
inc
leave
jp
inc
jae
imul
and
xor
loopne
ss
and
cwtl
lds
push
sub
dec
push
jl
and
push
arpl
sarl
and
lds
inc
fmuls
insb
and
push
xchg
dec
dec
sar
pop
dec
and
enter
push
gs
xchg
roll
sbb
xor
in
nop
and
or
or
mov
lods
and
push
adc
int
pop
adc
les
lds
inc
inc
push
lds
push
int3
sub
lea
lds
leave
pop
out
push
push
dec
and
jae
lds
and
push
test
xor
cmp
orl
push
xchg
and
js
inc
in
dec
and
and
cmp
and
and
add
and
daa
and
adcb
xchg
or
insb
push
jne
jnp
inc
out
dec
and
and
sub
push
aas
dec
mov
and
outsl
and
push
inc
test
dec
push
lds
and
es
lret
outsl
inc
test
mov
inc
inc
inc
inc
jne
fcomps
jo
stos
jne
add
cmp
adc
jns
ret
shl
pusha
jl
dec
test
scas
dec
sub
inc
fsubs
incb
push
sarb
inc
inc
movb
sub
bound
dec
mov
cmp
lret
rol
orb
leave
dec
inc
pop
int
inc
dec
sub
and
inc
mov
jg
int3
scas
loopne
push
pop
push
gs
aam
lds
inc
repnz
and
inc
add
in
sbb
adc
pop
stos
xor
fs
sbb
inc
cmp
xor
dec
insb
push
daa
ljmp
dec
stos
add
popf
subl
pop
mov
or
inc
inc
test
mov
rorb
fisttpl
add
dec
jle
inc
into
jne
add
aaa
dec
jne
cmp
pop
adc
and
out
loopne
add
dec
pop
push
fistps
fadds
inc
ds
push
scas
dec
dec
add
popa
sub
jne
push
addl
fcompl
cmc
cmp
jb
xchg
in
loop
rcrl
repz
and
or
push
sub
push
jno
gs
cmc
pushf
push
adc
jns
xor
cli
orb
jb
ret
test
dec
rcll
or
push
jne
mov
dec
xor
popa
jo
xor
repnz
frstor
hlt
cmp
jl
dec
jne
push
xchg
add
and
cmp
subl
test
push
iret
hlt
dec
sbb
aas
out
and
pop
sbb
mov
stos
mov
xchg
out
mov
lret
and
and
push
xor
or
inc
mov
adc
xor
pop
dec
ljmp
mov
dec
int
outsb
flds
es
mov
pop
push
add
loop
sbb
pop
jno
aaa
adc
pop
xchg
xor
inc
pop
add
test
addl
mov
mov
adc
cmc
xor
into
mov
jns
imul
test
enter
cli
xor
push
in
and
test
and
add
shll
adc
jle
mov
mov
mov
dec
mov
fcoml
dec
mov
jle
cmc
stos
mov
sub
rolb
cmp
inc
ret
pop
xchg
push
bound
xlat
mov
dec
inc
cmc
cltd
rolb
and
xorb
filds
sbb
stos
ss
int
mov
mov
test
int
leave
lock
pushf
jns
arpl
and
into
pop
rcll
push
andl
movsl
sbb
lods
js
push
cmp
lds
stos
mov
mov
adcb
mov
inc
add
push
add
leave
push
psllw
add
gs
pop
sarw
mov
leave
sbb
popa
dec
jns
pop
or
dec
cwtl
pop
pop
mov
fidivrl
pop
pop
or
js
pop
mov
rcrb
fidivrs
and
or
push
mov
push
popa
sbb
mov
pop
aam
dec
xor
push
jns
fiadds
cmp
add
repz
pop
mov
hlt
into
shl
jno
mov
xchg
adc
rclb
inc
pop
ret
fildl
mov
jno
mov
js
pop
mov
movsl
ljmp
jae
aas
daa
pop
or
js
pop
mov
stos
into
inc
sarl
mov
jnp
push
pop
add
std
or
mov
pop
or
cli
inc
outsl
adc
add
xor
shlb
jae
aas
mov
or
jns
mov
shlb
xor
and
imul
add
pop
jp
dec
push
cmp
push
adc
pop
fidivrs
mov
cld
lods
into
and
cmpsl
mov
test
adc
js
mov
lcall
push
add
dec
or
and
ss
shrl
imul
aaa
push
mov
sbb
das
sub
pop
mov
mov
or
sub
and
das
movaps
cmp
lock
out
push
sbbl
aaa
jle
lock
xchg
int3
push
outsb
adc
pop
push
pop
jae
sbb
sbb
imul
jmp
sbb
aaa
fldcw
shll
and
jg
negb
add
dec
insb
dec
jne
cmp
add
orb
sbb
and
movsl
inc
imul
mov
and
dec
push
dec
call
push
sub
fnsave
jno
aad
inc
sub
imul
dec
testl
cmp
and
or
inc
fs
add
movsb
dec
push
add
xor
addr16
and
sbb
pop
push
test
inc
jbe
pusha
test
xor
jg
jnp
jmp
dec
push
es
jnp
cmpsl
inc
xchg
shll
mov
or
scas
xor
pop
dec
mov
jge
pop
push
xor
ret
add
and
jno
pusha
stc
push
andb
inc
fadd
jns
add
lret
cli
cmpsl
sbb
fistpll
pop
leave
add
inc
scas
cs
pusha
ljmp
lods
aas
cltd
shrb
mov
sub
or
shl
cli
sub
cmp
push
and
add
jge
and
sbb
stos
or
jne
push
int
sub
out
ret
rcl
les
adc
pusha
or
enter
jg
addr16
adc
arpl
js
out
popa
int
and
ret
std
leave
and
jge
lea
and
and
mov
inc
stos
test
push
mov
mov
into
loopne
inc
sub
hlt
movsb
clc
jg
subl
or
mov
lods
bound
add
sub
jg
sahf
mov
xor
in
stos
outsb
mov
ljmp
xchg
sub
and
or
mov
aad
lods
out
sub
push
mov
or
shrl
inc
inc
lock
filds
push
push
sub
mov
repnz
mov
jns
sub
sub
or
push
sahf
xchg
scas
cmc
and
or
stos
jg
sub
das
mov
test
lods
add
dec
jne
mov
xchg
sub
and
xor
ja
inc
dec
dec
inc
mov
fbstp
inc
test
and
and
sbb
pop
cmc
xor
das
enter
adc
addl
xchg
sub
xchg
lea
cltd
mov
inc
jno
push
fcmovbe
and
movsl
mov
mov
into
popa
inc
ret
pusha
sub
xlat
jb
jne
clc
jle
inc
pop
cmc
repnz
out
sub
sahf
outsb
jns
xor
frstor
inc
iret
in
stos
xchg
jle
cmp
add
inc
inc
push
scas
jg
popf
add
xorb
cs
dec
and
fcom
push
add
jno
or
stc
cmpsb
and
roll
push
jb
push
pop
xlat
arpl
dec
popf
rclb
jle
xlat
add
push
iret
lock
add
xor
std
or
inc
dec
movsb
dec
insl
je
mov
mov
xor
into
cmc
sbb
cmp
cmpsb
push
vpavgb
ljmp
inc
cmp
js
and
push
sub
mov
fstp
loop
cmp
inc
int3
dec
push
push
xchg
inc
push
mov
xor
sub
sub
push
mov
adc
hlt
inc
adc
dec
or
inc
fidivrs
or
mov
scas
jp
add
iret
jnp
xor
leave
jge
popa
xchg
mov
xorl
dec
push
rcr
bound
inc
loope
inc
cmpsl
xchg
and
imul
push
lret
jae
jne
mov
shlb
mov
imul
subl
loope
inc
or
stc
sub
lret
sub
insl
in
into
inc
jge,pt
push
lds
mov
inc
cli
inc
subb
dec
inc
cmpl
mov
ret
mov
and
roll
loopne
frstor
and
mov
test
testb
push
pop
xorb
andl
sbb
jne
cs
xchg
sub
or
mov
dec
bound
inc
add
cmp
pop
pop
aaa
sub
push
idivl
and
push
cmp
rcll
das
inc
test
pop
popa
sub
inc
dec
xor
lea
push
pop
cmpsl
xor
inc
add
mov
aaa
mov
arpl
cmc
add
and
movsl
or
inc
dec
hlt
sbb
xchg
mov
inc
pop
sub
loop
add
jne
xchg
xor
mov
cmc
mov
shl
pop
mov
add
mov
movl
dec
leave
cmpsb
mov
ds
jle
xchg
dec
iret
xor
out
jge
push
sub
sahf
out
inc
add
lods
loop
mov
and
add
fmuls
push
stos
jns
xchg
or
dec
jle
or
xor
cmc
jb
xchg
fidivrl
xchg
xor
inc
test
scas
lods
insl
and
loopne
hlt
lods
or
xor
movsl
enter
lret
test
xchg
lods
test
cmpb
sub
push
adc
mov
ljmp
mov
mov
sub
int3
push
jg
mov
mov
lods
shl
jl
sub
cmp
rolb
inc
imulb
fdivs
fmul
or
out
inc
add
ret
fs
inc
bound
xchg
push
inc
lock
inc
dec
lods
dec
sub
push
or
inc
rorl
lds
or
adc
movsl
ljmp
adc
dec
dec
nop
inc
push
sbb
cmp
cmpl
ds
arpl
adc
inc
std
mov
inc
stos
pop
int
push
ds
inc
lds
jb
inc
add
cmp
stos
pop
pop
test
shrl
mov
inc
fstps
aaa
dec
rcr
std
inc
and
aam
xor
shl
sub
jae
push
push
cmp
jecxz
and
xor
pusha
mov
enter
add
and
hlt
insb
lods
repnz
es
nop
adc
cmpsb
insl
and
leave
add
xchg
xchg
movsb
inc
popf
test
mov
inc
fsubs
push
adc
cwtl
sbb
cmpsb
dec
inc
pop
dec
inc
mov
xor
jns
sub
jno
cwtl
pop
jl
adc
pop
pop
mov
xlat
hlt
sbb
es
dec
leave
mov
inc
mov
xchg
pop
and
mov
jns
jb
inc
mov
cmp
scas
aaa
mov
inc
cmp
or
add
std
ja
pop
add
xorl
mov
pusha
in
push
dec
mov
hlt
clc
popa
dec
bound
push
inc
push
mov
lods
dec
test
in
aas
xor
dec
inc
mov
adc
hlt
xor
dec
sub
mov
fisttpl
stc
sbb
inc
lahf
or
inc
fldt
cmpsb
popf
std
loopne
fwait
xor
test
jns
stc
sbb
test
mov
add
and
dec
jge
into
roll
stc
xor
pop
xchg
add
cmpsl
mov
rcrl
movsb
push
lods
inc
rorb
dec
ror
fsub
cmp
xor
push
jne
jne
stc
push
sarb
push
push
sub
dec
les
and
and
stc
hlt
je
mov
fiadds
xor
out
gs
dec
bound
es
adc
test
fwait
mov
ds
lods
iret
push
lret
or
les
pop
popf
sarl
and
fwait
int3
add
rcll
and
int3
jp
test
xchg
enter
int3
je
mov
push
mov
mov
push
sub
fwait
cli
inc
jne
push
fwait
pop
xchg
dec
pop
mov
test
gs
jl
ja
dec
jo
pop
inc
mov
or
pop
in
mov
cmp
add
mov
xchg
push
add
gs
or
jge
adc
lods
mov
pop
into
movsb
mov
jbe
hlt
fwait
xchg
and
aam
cmpsl
xlat
and
int3
filds
pop
dec
push
inc
lds
jne
push
daa
add
mov
cmpsw
adcl
jmp
pop
insl
xchg
movsl
fdivr
mov
aaa
and
jae
dec
jge
inc
scas
jecxz
sahf
loope
lahf
lds
loope
pop
dec
inc
adc
cmp
dec
bound
outsb
cmc
lds
ficompl
int3
sub
mov
shl
jno
xchg
ss
data16
lock
arpl
cli
xchg
dec
push
xchg
dec
push
fwait
add
cltd
xor
push
stc
into
mov
icebp
pusha
test
ret
call
div
add
xor
cmp
inc
dec
mov
pop
push
in
mov
mov
rolb
lret
xor
hlt
bound
push
lahf
je
shlb
pushf
pop
pop
sub
mov
fsubr
loope
mov
push
dec
dec
rcrl
inc
subl
or
dec
adc
leave
dec
out
cmp
lret
cld
dec
jp
jnp
rol
inc
loope
ret
dec
imul
xor
jecxz
or
dec
cli
mov
dec
int
addl
add
push
add
and
insb
ljmp
pop
and
and
fldcw
add
mov
cwtl
inc
repz
es
mov
sub
dec
loopne
mov
cmc
dec
shll
ss
push
fistps
inc
fimuls
outsl
mov
xor
cli
push
psubq
fs
es
inc
insl
js
rcl
imul
adc
push
loopne
push
jns
dec
cld
mov
dec
dec
fdivr
mov
sub
std
aaa
fstpt
gs
hlt
mov
or
sub
push
popa
enter
mov
dec
es
and
cmp
inc
sbbl
pushf
pop
movsl
inc
call
cmp
push
cmc
sub
push
and
push
movsl
jg
les
stc
mov
lahf
iret
add
mov
lods
xor
cmpsl
ret
xchg
ret
dec
mov
in
and
push
lret
insl
loopne
aam
cmp
push
mov
jp
sub
icebp
shl
add
inc
jmp
shl
xor
pop
cld
push
and
in
fnstenv
pop
test
rolb
cmp
mov
scas
jae
inc
jne
insl
sub
mov
aam
pop
fnstenv
mov
pop
mov
outsl
mov
and
pop
shll
dec
fmull
sbb
xorl
add
fsts
int3
popf
pop
inc
mov
stos
mov
push
sbb
xor
inc
lods
cmp
pop
out
int
iret
imul
lret
cmc
jns
push
mov
xor
inc
test
and
bound
push
hlt
popf
push
sti
sub
addr16
lock
ljmp
push
shrb
mov
or
ficoms
xor
adc
cltd
lods
lret
int
mov
test
mov
mov
cltd
cmc
pop
sti
jmp
cmp
mov
fcmovbe
adc
jmp
dec
ror
and
mov
je
mov
dec
adc
das
scas
out
jg
xor
fldcw
sbb
pusha
dec
mov
adc
test
mov
push
aad
cmp
push
sub
aas
in
dec
and
ss
dec
rcrb
outsb
mov
inc
pop
dec
mov
cmp
int
cmc
push
push
and
mov
and
sbb
sarl
inc
ret
inc
inc
push
and
roll
outsl
fldenv
andb
push
lds
mov
repz
ret
stos
sub
cmp
xor
lds
cs
cmp
inc
sub
iret
sbb
dec
insl
loope
out
int
mov
add
mov
xchg
mov
gs
mov
jbe
push
mov
inc
xor
inc
mov
test
mov
mov
subl
mov
popf
shlb
lahf
add
jmp
dec
test
std
mov
iret
loopne
xor
cmp
mov
mov
loope
test
cltd
ja
xchg
jae
xchg
aam
pusha
dec
jns
movsb
pushf
add
cmpsb
jle
outsl
sub
stos
inc
hlt
or
sub
inc
xchg
hlt
inc
jne
shrb
daa
sub
jle
shl
cmp
std
pop
cmp
stos
or
sub
imul
stos
ja
cmpsl
jns
lods
daa
dec
mov
test
das
dec
fs
sbb
dec
and
push
pop
adcl
push
or
jle
fcoml
inc
aas
adc
ja
das
stos
inc
pop
add
dec
roll
test
subb
orl
fs
decl
loope
mov
clc
jno
js
add
adcb
fdivrl
cmp
dec
mov
call
dec
mov
outsb
inc
cmpsl
ja
push
sahf
in
int
and
jmp
popa
cmpsl
add
or
dec
xor
add
mov
loope
mov
jno
cmpsb
inc
mov
pop
outsl
push
cmc
cmp
in
pushl
add
lods
mov
sub
mov
clc
aam
cmp
xor
adc
dec
rolb
inc
add
insl
test
adc
clc
push
dec
xchg
push
cmc
and
jmp
dec
lds
pop
inc
and
lds
sbb
loopne
fadds
rol
lds
xchg
fcmovbe
fcmovnb
aas
shll
addr16
cmp
jb
adc
push
insl
xor
int
mov
int
lds
push
insl
dec
out
mov
xor
inc
icebp
das
fmul
les
shll
dec
push
movsl
xor
xchg
nop
dec
add
cld
inc
pop
cmc
icebp
je
lcall
sub
mov
dec
sbb
bound
xchg
sbb
mov
mov
pop
push
and
fnstsw
cli
std
push
hlt
clc
mov
les
adc
jp
dec
push
jge
fdivp
sti
rol
icebp
stos
jb
mov
xor
out
inc
pop
sub
dec
xchg
pop
aam
jmp
repz
test
mov
pusha
cs
int3
sub
lret
sub
push
hlt
mul
pop
mov
cmp
jl
aad
adc
dec
stos
les
ret
jno
test
inc
ljmp
xchg
push
scas
test
test
mov
fsub
aas
decl
xor
inc
fstl
dec
mov
stos
push
xor
mov
rorl
adc
push
test
mov
or
xchg
pusha
push
loopne
stc
add
test
sbb
add
push
or
add
pop
jae
and
shrl
roll
bound
inc
jecxz
loope
add
jne
push
nop
push
fdivrs
dec
push
ret
roll
ret
fwait
jg
jns
dec
jecxz
and
pop
and
fcomi
aam
mov
xchg
in
add
mov
fs
cmp
popf
dec
push
and
jg
or
cmovl
shl
xor
int
push
and
in
dec
xchg
sub
adc
pop
pop
xor
cli
test
dec
rcrl
cmc
ficomps
push
mov
inc
out
into
add
inc
push
dec
jge
cmpsl
adc
xor
push
jp
and
leave
push
sub
inc
aas
scas
inc
cs
ja
pop
loop
gs
lds
xor
mov
test
jo
cwtl
mov
icebp
pop
cmp
pop
inc
les
push
and
mov
lds
push
push
push
lcall
gs
sbb
call
popa
outsl
addr16
fsubrs
aas
rcll
and
aam
aas
iret
xor
inc
sub
lods
push
popa
mov
add
cli
in
jl
rol
mov
push
es
cmp
cmp
sub
shrl
shl
push
jle
shrl
das
and
sbb
mov
roll
push
dec
sarb
enter
inc
test
jl
pop
sbb
inc
test
fists
push
fildl
test
add
inc
xor
outsb
ret
xor
adc
xor
lret
lcall
lods
mov
ror
mov
popa
xor
divl
add
pop
cmp
fstpl
and
rcr
imul
dec
adc
dec
imul
push
sar
stos
ret
cmp
clc
jmp
dec
hlt
popa
sbb
xchg
movsl
xchg
aas
and
cmpsb
sbb
movsl
popf
pop
add
es
push
mov
inc
stos
lcall
cmp
dec
lea
dec
push
xor
popa
mov
cmp
add
movb
aaa
add
mov
mov
xor
subb
shll
and
mov
mov
fdivrl
in
rolb
loop
fsubrs
pop
nop
shrl
push
icebp
push
dec
ret
mov
int
mov
arpl
orl
xchg
in
loope
hlt
icebp
fbstp
and
insb
adcb
inc
cmp
pop
std
jne
repnz
arpl
and
sbb
push
add
stc
aad
push
loope
mov
mov
or
daa
int
xor
lret
or
movsb
push
cmc
sub
mov
xchg
inc
and
cmpsb
dec
mov
push
mov
loope
in
jg
ret
jp
pop
add
arpl
mov
stos
dec
jae
dec
pop
dec
adc
fsubl
cmp
les
aaa
pop
iret
mov
sub
fs
andl
in
incl
fwait
mov
stc
test
in
out
and
cld
insl
outsl
in
fisttps
xor
sub
jnp
arpl
dec
es
sub
cmp
jmp
or
gs
pop
push
out
xchg
push
lret
rol
cli
jnp
push
add
add
aas
sub
popf
mov
mov
loop
aaa
mov
dec
jp
loop
mov
lea
or
jnp
ds
scas
jne
lock
push
shll
hlt
jnp
lds
mov
jmp
lods
or
inc
add
cmp
sahf
xor
inc
adc
in
iret
shrb
popa
jnp
add
push
mov
gs
fucomp
jb
mov
dec
mov
loopne
xchg
test
pop
push
sub
jmp
dec
test
movsb
shlb
nop
or
adc
dec
push
pop
sub
cld
sbb
inc
and
push
inc
push
cwtl
dec
cmc
add
or
dec
test
jge
or
dec
pop
sbb
jg
lods
lret
or
mov
insb
adc
icebp
fimuls
fdivrp
std
mov
movsl
enter
push
cmpsl
inc
jbe
mov
cs
mov
pop
add
loopne
and
divb
fsubrs
incb
and
jb
pop
cmp
jb
iret
xor
rcrl
mov
loopne
and
jp
inc
inc
xchg
leave
inc
jle
enter
mov
jge
rcr
pusha
stc
aaa
ret
mov
sub
xchg
jbe
cmp
mov
cmp
sub
adc
sbb
lock
push
out
mov
cmc
mov
or
jge
and
dec
aam
fsub
nop
loope
dec
popf
leave
sarb
xor
and
mov
push
subl
xor
pop
mov
sti
xor
sbb
push
dec
fsub
xchg
pop
imul
xchg
arpl
jg
mov
rolb
mov
push
fstp
aaa
test
popl
cli
inc
mov
pop
out
and
xchg
adc
test
test
jns
lret
push
outsl
std
sbb
frstor
sub
and
pop
sbb
aas
aad
inc
push
and
adc
pop
stos
mov
dec
mov
xchg
cmp
test
nop
gs
add
add
test
scas
outsl
cltd
or
xchg
cs
jne
arpl
lea
or
dec
outsl
dec
jbe
leave
mov
xor
lret
sub
and
and
and
jle
mov
lret
ret
subl
das
shll
or
mov
add
cli
ror
lea
icebp
dec
lret
lret
mov
lret
jne
push
test
out
jp
cmp
andb
mov
pop
lret
mov
dec
mov
leave
popf
xchg
sub
mov
dec
or
sbb
lcall
ja
ljmp
enter
and
mov
pop
dec
and
cmp
fldt
inc
lds
push
fsub
or
and
sub
mov
movsl
imul
jae
outsl
cmp
dec
mov
lds
adc
inc
jl
pushf
pusha
gs
mov
insl
int3
xor
dec
lret
daa
mov
or
fisubl
iret
and
icebp
xor
mov
mov
push
inc
sub
cwtl
rol
or
gs
jbe
clc
push
pop
pusha
or
pop
jle
mov
popf
or
fcoms
push
or
pop
lds
sahf
or
push
push
xchg
in
jp
dec
jmp
mov
pop
test
fisubrs
insb
inc
js
pusha
and
jp
jae
inc
pop
dec
push
popaw
mov
or
push
inc
lahf
imulb
clc
add
push
test
mov
hlt
pushf
mov
insb
adc
lcall
out
adc
push
outsb
ret
fsub
sub
cmp
loope
popf
ficomps
les
dec
push
pop
cmp
dec
cmc
xor
push
les
and
jmp
xchg
jp
pop
add
dec
dec
repz
mov
lret
pusha
push
mov
push
stos
insb
jns
push
dec
cmpsb
insl
hlt
pop
or
test
hlt
and
aad
outsl
jnp
dec
cmp
call
add
clc
dec
push
or
leave
cmp
jne
jl
inc
inc
aas
enter
or
mov
jae
leave
sbb
dec
adc
fdivrp
shlb
les
xchg
out
ljmp
rcll
ficomps
fwait
jle
popf
xchg
roll
shll
mov
sub
push
shlb
inc
mov
cltd
mov
jno
sahf
cmp
pushf
popa
popa
pop
inc
and
pop
sub
in
or
lret
push
jmp
pushf
pop
sbb
and
add
push
xchg
mov
dec
inc
cmp
and
xchg
dec
inc
sbb
shll
hlt
imulb
xlat
xchg
shlb
pop
loope
imul
lret
inc
push
cmp
and
movsl
and
and
aad
push
jp
push
dec
das
or
jmp
sub
hlt
inc
arpl
ret
subl
sub
inc
mov
hlt
loopne
push
rcrl
outsl
sub
xchg
loop
movsl
out
cmp
movsl
scas
push
int
xor
mov
dec
push
loop
lock
cmp
out
cmpsl
sti
aas
jge
popf
and
jns
daa
xor
sahf
lods
js
mov
fcoml
jns
xor
push
adc
or
enter
sub
jmp
insl
int3
fwait
mov
inc
lods
sbb
xchg
fildl
xor
popf
js
dec
aas
inc
and
cli
in
int3
in
pop
push
inc
jle
daa
aad
mov
adc
lea
mov
adcb
cltd
mov
cmp
dec
fld
ret
adcb
and
jb
iret
or
out
ret
lret
lea
fdivrs
push
bound
lods
xchg
notb
call
dec
roll
pop
xchg
and
or
lahf
rorl
orl
and
fsubrl
call
inc
jge
and
pushf
popa
movsl
aaa
andl
pop
repz
incb
mov
imul
jbe
lock
sub
rorl
cmp
loopne
cmpsl
cmc
jae
cmpsl
test
shlb
jp
push
ljmp
xchg
mov
jne
lcall
in
adc
sub
xchg
xor
push
dec
hlt
sti
shrl
mov
or
inc
push
mov
or
push
cmp
pop
scas
daa
add
aam
inc
mov
into
fs
xor
jb
pop
jge
aam
add
fdivrl
inc
lcall
mov
push
dec
add
dec
xor
ja
cli
sub
pop
adc
faddl
hlt
push
cmp
or
ds
subl
in
push
adc
addr16
inc
loopne
test
shll
sti
mov
xchg
aas
rcrl
js
and
rcr
cmp
rcrl
out
imul
les
mov
aas
adc
lods
shl
loop
mov
cmp
aad
filds
aas
mov
je
inc
ret
sub
or
and
js
aaa
pop
push
push
inc
in
orl
fisubs
loope
inc
les
push
ss
nop/reserved
inc
xchg
sbb
dec
and
push
outsl
mov
push
jge
out
jnp
imul
or
pop
or
flds
fnstsw
outsb
jb
fcompl
int
aaa
or
sub
sub
in
mov
add
add
dec
and
add
stos
and
popa
or
fs
xor
dec
rcl
scas
sub
xbegin
xchg
dec
out
or
or
mov
dec
jp
xlat
or
fsubrs
push
int3
push
sub
push
and
pop
xlat
test
aaa
inc
add
dec
test
jp
pop
mov
sub
and
push
lea
mov
clc
ds
xlat
ficompl
mov
lahf
pop
xchg
insl
jns
es
mov
test
sahf
xchg
adc
mov
inc
addb
or
popa
dec
push
adc
nop
xlat
dec
push
insl
jne
out
xchg
ds
jo
test
mov
inc
and
push
leave
or
lds
andl
cltd
dec
pop
cmp
jg
pop
stc
ja
xchg
pop
mov
pushf
gs
hlt
sahf
mov
inc
mov
xchg
inc
test
dec
movsl
mov
cmp
or
lret
incb
sar
pop
aad
stos
in
xchg
inc
add
psubusw
and
clc
inc
or
sbb
push
pop
out
lcall
int
pop
xlat
or
lea
loopne
cmp
in
jae
call
shrb
imulb
test
or
inc
or
mov
cli
push
sbb
lret
sub
add
fisttpll
cs
cmp
bound
ret
int3
jne
dec
inc
js
or
jnp
xor
inc
dec
repnz
dec
roll
adc
mov
mov
enter
mov
pusha
xchg
xchg
and
push
jg
mov
cwtl
dec
test
rorb
test
arpl
or
pop
mov
fimuls
cmp
sub
addl
stos
and
iret
push
jnp
cmp
int
loope
adcl
test
jb
mov
cmc
or
iret
test
inc
sar
jmp
adc
jne
pop
lea
xchg
and
cmc
dec
mov
adc
popa
rcll
mov
aas
pop
shll
pop
push
mov
cli
sbb
or
lods
inc
dec
stos
dec
popf
in
fnstcw
sahf
jns
jp
sar
and
dec
sub
xor
xor
inc
jne
xchg
inc
jp
inc
jge
push
pop
fst
lods
inc
cmp
mov
lret
insb
dec
jb
xor
and
pop
jns
cmp
sub
arpl
jge
int
flds
jb
and
and
xchg
mov
jnp
test
inc
dec
adc
mov
rorb
and
dec
adc
stos
jne
iret
push
and
dec
add
dec
dec
xor
stos
lahf
ret
pop
xor
mov
xchg
mov
popf
rol
jns
mov
cmpl
cmpsb
push
mov
mov
adc
or
nop
mov
jmp
loop
push
loope
mov
ret
pop
dec
dec
sub
mov
ffree
adc
dec
dec
adcl
xchg
int
loopne
jl
sahf
lods
push
pop
sub
shll
sbb
fbld
dec
pop
popf
xor
std
ficompl
loope
jmp
mov
flds
sti
and
add
mov
fildl
mov
gs
es
sub
mov
movsb
testb
inc
loop
gs
add
adc
jmp
pop
icebp
movsb
roll
xor
mov
ret
icebp
roll
out
jmp
lcall
dec
add
add
int
and
loop
dec
jno
sub
addl
dec
push
push
mov
push
push
and
add
and
push
dec
xor
push
add
mov
in
adc
mov
jg
insl
xchg
inc
xor
jne,pt
xlat
lods
test
cli
inc
sub
loope,pt
test
int
shlb
shrl
cmp
sbb
popa
mov
movsb
aad
push
dec
pop
sub
xchg
andb
or
and
loopne
cmp
fiadds
test
lds
dec
xor
shlb
xadd
xor
jg
fsubrs
fiadds
nop
mov
mov
loope
stc
flds
dec
dec
mov
mov
ret
or
adc
inc
fsubr
push
into
imul
adc
and
mov
shrb
mov
mov
jae
jp
adc
or
mov
xor
lds
std
lcall
orl
inc
daa
inc
jecxz
pop
pop
or
imul
dec
inc
rol
cmp
int
push
xchg
test
imul
add
mov
inc
push
pop
pushf
iret
mov
inc
jne
push
sub
pop
cmc
mov
push
je
rorl
inc
jg
lods
aad
es
mov
shrb
pop
bound
loop
or
std
inc
pop
test
push
lods
pop
jns
dec
cli
lods
outsl
dec
popf
mov
mov
and
imul
add
xchg
and
inc
pop
inc
push
lds
sub
into
or
in
xlat
fisttpll
sahf
inc
and
xor
std
mov
pop
xchg
sub
outsb
arpl
adc
nop
test
or
mov
repz
loopne
jle
lods
addl
mov
fimull
xchg
jl
stos
pop
out
dec
fcompl
sub
mov
stos
outsb
jno
jne
jb
add
cmp
icebp
xor
into
xor
xchg
cs
or
andl
shlb
lds
jg
mov
xchg
cmp
andb
jns
lcall
dec
out
dec
sbb
xchg
jno
jne
xchg
js
sbb
lds
fsubrs
or
inc
cwtl
push
xor
inc
lock
or
lret
push
lods
lds
adc
sub
enter
jmp
stos
jno
hlt
call
add
insl
cmp
leave
je
lcall
add
or
mov
xor
int
push
push
dec
xchg
sub
hlt
sub
push
daa
push
loop
mov
adcb
sbb
sahf
inc
sbb
and
or
lds
ret
movl
inc
xchg
push
cli
std
sub
popf
add
lods
out
dec
inc
outsb
and
xchg
mov
movsb
aad
mov
xchg
sti
jns
loopne
adc
in
push
shll
xor
pusha
sub
push
dec
add
push
cmc
mov
hlt
dec
dec
pop
and
insl
pop
cmpl
push
pop
ds
mov
push
xor
int3
cmpsl
es
dec
xchg
mov
mov
andl
add
imul
push
push
mov
gs
jmp
push
and
jb
sbb
movb
sub
lds
pop
popa
mov
mov
mov
mov
inc
mov
lret
dec
lods
in
rcrb
dec
call
rorl
loopne
divl
dec
push
cmc
mov
gs
dec
data16
gs
hlt
lahf
xor
dec
inc
xor
sub
aad
stos
fwait
roll
adc
xchg
fsubrs
or
fisttps
roll
in
and
gs
in
push
sub
dec
es
lret
xor
mov
orl
ret
into
mov
cmc
or
movsl
mov
mov
jmp
and
stos
mov
inc
and
scas
dec
daa
cmc
adc
sbb
xor
push
pop
push
subb
cmc
dec
and
clc
cld
scas
jmp
rcrl
and
add
adc
dec
inc
sub
push
and
push
out
push
push
dec
fdivl
icebp
fildll
jp
in
or
xchg
repnz
inc
js
cmp
mov
mov
aad
lret
xor
addr16
inc
jp
fistpll
xor
add
xchg
addb
xor
sbb
int
pop
push
cltd
push
and
test
int3
jne
lods
mov
pop
scas
and
pop
icebp
call
mov
addr16
ja
test
ret
cmpsb
imul
sti
shrl
shl
imul
cmp
mov
imul
in
dec
repz
push
jge
jg
dec
mov
push
mov
mov
movsl
dec
or
add
sub
add
jle
push
fnstenv
pop
mov
and
mov
cmp
test
fidivrs
mov
movsb
aaa
or
or
xchg
xchg
dec
dec
test
or
sbb
pop
rcrl
jl
je
dec
orb
dec
test
mov
cmp
inc
sub
out
lods
scas
or
test
ffreep
lods
inc
xchg
mov
dec
mov
inc
xor
loop
sub
es
dec
stos
dec
arpl
popf
push
push
add
rcrl
push
xchg
and
hlt
sub
stos
mov
xor
add
jmp
gs
push
xchg
lcall
mov
enter
xchg
cmp
andb
addl
jp
in
insb
adc
or
cmp
jne
rorb
shlb
dec
sub
dec
pop
jns
sbbl
and
dec
and
pop
sub
adc
test
dec
xor
xor
and
pop
push
and
aad
and
push
dec
sub
push
mov
aas
fdivl
mov
push
and
xor
mov
xor
and
add
xchg
dec
adc
daa
dec
popa
jle
mov
xchg
fsubrs
lea
andb
add
cmpl
rclb
scas
sbb
movsl
cltd
pop
loope
and
push
pop
les
push
dec
arpl
test
inc
loop
pop
sub
pop
pop
and
and
and
lret
sub
dec
das
push
arpl
dec
fisubl
mov
xchg
dec
xor
bound
xchg
jae
inc
add
push
dec
and
ret
gs
and
test
dec
mov
inc
mov
sub
xchg
arpl
test
xor
inc
xor
repz
cmp
xchg
lds
xor
pop
enter
or
fs
gs
xor
inc
addl
imul
scas
and
roll
jl
cmp
out
jge
mov
js
cltd
mov
dec
hlt
inc
loop
es
add
push
xor
inc
push
dec
push
out
pop
aas
pop
pop
iret
pop
mov
jne
dec
dec
sub
mov
loope
sbb
sub
js
jl
jb
dec
mov
cli
pop
inc
dec
and
in
push
push
push
dec
push
xor
cmp
jb
adc
jne
scas
push
cmp
loop
sub
inc
mov
gs
inc
dec
dec
push
dec
and
add
inc
pop
ret
sub
mov
out
dec
aaa
xor
in
mov
push
push
in
inc
cmp
aas
test
test
fsubr
mov
popf
andb
dec
mov
roll
dec
inc
mov
add
or
and
aam
cmp
push
cmc
mov
inc
push
cmp
hlt
pop
aas
mov
rcrl
cmc
jecxz
cld
pop
mov
pop
adc
dec
ret
inc
add
xchg
shlb
add
cmp
mov
lahf
or
test
sub
or
add
ret
cmp
jae
test
decl
aas
add
inc
and
cmp
and
xchg
jl
fisttpll
pop
pop
mov
adc
push
pop
es
dec
and
movsb
inc
lea
or
mov
dec
mov
clc
inc
cmp
mov
jno
xchg
fimuls
xchg
xor
pop
or
mov
or
cmc
das
or
jge
stos
add
dec
jecxz
adc
andl
jg
shr
fisttps
dec
or
add
dec
gs
xchg
pop
cmpsb
rorb
dec
inc
cmpsl
inc
add
scas
mov
lea
mov
xor
add
cmp
xchg
sarl
lds
loop
sub
mov
hlt
in
adc
fisttpll
xchg
pop
add
push
lods
sti
ret
push
adc
xchg
test
jp
sbb
pusha
sbb
mov
dec
nop
push
scas
test
lret
pop
mov
rolb
xchg
sub
mov
jl
fsubr
inc
xchg
sbb
roll
mov
scas
fisttps
gs
adc
add
inc
jge
pop
repz
subl
dec
movsl
mov
fsubl
in
jp
and
scas
mov
pop
aam
mov
pop
cmp
aas
push
movsb
cvtpi2ps
or
push
stos
mov
int
dec
and
shll
or
xor
aaa
xchg
or
and
jp
and
divl
and
test
lds
xor
fimull
adc
mov
cmpsb
xchg
or
adc
cld
popf
sti
fucom
pop
inc
in
out
lret
shll
stos
dec
outsb
les
sub
xor
dec
dec
sub
in
int
sbb
and
and
inc
hlt
dec
mov
outsl
xlat
lret
das
mov
inc
loope
sbb
mov
mov
and
mov
fcoml
xchg
dec
and
popa
xor
test
cld
ljmp
jbe
insb
pop
stos
sub
and
bound
and
xlat
jne
add
je
mov
mov
shlb
cli
push
push
fsub
movsb
lret
test
inc
adc
lds
iret
sub
sub
and
cltd
outsb
call
cmpsl
repz
rolb
and
dec
or
ret
es
sbb
xor
hlt
loopne
lret
sub
sub
or
lds
ret
xor
and
and
or
pop
xor
pop
mov
stos
mov
mov
daa
insb
rcll
and
mov
xchg
addl
inc
mov
ret
hlt
icebp
jbe
sub
dec
out
push
fst
mov
adc
stc
in
shlb
mov
adc
push
rorl
ret
inc
and
dec
jg
mov
lods
pop
js
mov
pop
test
push
orl
clc
cmpb
addl
sub
adc
xor
icebp
movsb
xor
inc
or
imul
loop
imul
cmp
int3
add
xor
add
test
dec
or
test
lds
test
mov
xor
and
mov
or
sar
inc
and
jne
xor
inc
in
xchg
aaa
jnp
xorb
bound
addr16
orl
mov
sbb
sub
xchg
xor
and
cmp
and
jge
adc
insl
test
xchg
xor
or
push
orb
dec
subl
fldcw
cltd
dec
xor
xor
push
or
inc
push
arpl
and
ret
push
and
jmp
xor
lret
iret
out
lret
jne
jns
sub
jae
push
mov
inc
inc
outsl
int
sub
push
xor
xor
les
and
xchg
jne
fmull
ret
xchg
xor
xor
xorl
cmp
jle
movsl
sub
std
mov
ds
test
and
rorl
lods
aad
xchg
ret
mov
mulb
jl
inc
fldt
jle
push
jge
arpl
inc
popa
and
test
mov
leave
ret
dec
dec
xor
xor
push
scas
fdivs
test
sbbl
shl
lcall
frstor
aad
inc
mov
sbb
in
xor
movsb
sbb
scas
dec
lods
jge
test
xor
fists
lret
lock
test
inc
rcr
and
leave
add
cmp
aas
pop
les
arpl
adc
mov
jo
mov
stc
push
jo
xlat
push
jne
xchg
push
subb
jl
lahf
mov
outsb
in
inc
fadd
xorl
sub
lds
cs
out
in
xor
lret
xchg
out
loope
xchg
cmpsb
fwait
pop
xchg
push
and
hlt
xor
pop
cwtl
mov
inc
fwait
pushf
dec
dec
lcall
ret
lahf
mov
mov
js
jp
addl
pop
cli
mov
dec
pop
int3
sahf
xchg
and
loopne
push
mov
dec
add
out
push
push
cmp
jp
hlt
inc
mov
scas
or
fucom
and
hlt
imul
sub
lods
jmp
shrl
jo
dec
pop
dec
jge
test
mov
mov
adc
mov
lret
fcmovne
test
les
inc
jge
jnp
mov
sbb
in
inc
jb
add
hlt
sbb
mov
ja
mov
fistpll
test
dec
push
mov
repz
pop
add
pop
push
push
ret
aas
sahf
jno
cmp
mov
mov
or
add
jne
mov
mov
adc
adc
cli
lret
div
sti
hlt
js
pop
mov
lods
iret
sub
insb
and
sub
mov
insl
ss
sub
mov
jge
jnp
sbb
cmp
push
test
add
iret
xchg
cmp
stos
test
lods
dec
loop
push
int3
fcmovnb
or
cmpl
jo
xor
mov
pop
xor
push
loopne
test
lret
cmp
xor
push
je
test
inc
mov
mov
xor
jnp
movsb
or
mov
call
iret
xor
cmp
lret
out
fnstsw
orb
ret
lret
addr16
adc
lret
mov
xchg
aaa
ja
sub
push
ret
add
les
inc
jge
aad
int
inc
dec
rol
mov
and
jge
mov
ja
cs
pop
jae
cmp
and
clc
inc
jge
mov
sti
jbe
imul
shll
sub
cmp
mov
jg
test
fdivr
in
shlb
dec
imul
jl
or
and
shrl
fldcw
insl
sub
jnp
ror
mov
adc
inc
sub
shrl
test
and
mov
xor
iret
add
mov
inc
mov
leave
fs
push
dec
js
mov
and
sub
int3
pop
push
push
lds
lret
and
enter
fld
mov
outsb
in
jp
inc
dec
push
outsb
mov
daa
icebp
pop
xor
aam
pop
mov
and
test
lret
dec
imul
adc
or
sub
xor
js
xor
jnp
jp
mov
jg
jle
cltd
inc
inc
pop
test
std
out
int3
inc
inc
frstor
mov
mov
leave
xor
pop
les
loope
mov
sub
xor
sahf
repnz
adc
mov
xor
or
mov
fists
lods
inc
jbe
add
stos
or
pop
insl
inc
inc
jg
or
add
or
leave
xor
out
out
sub
imul
mov
cmpsl
out
jg
or
sub
mov
and
pop
jmp
cli
in
xchg
inc
jge
popf
mov
xchg
dec
and
dec
ljmp
daa
sahf
ret
ja
and
test
push
xchg
test
js
pushfw
lds
and
cli
and
es
and
mov
out
cli
and
pop
iret
and
mov
mov
xchg
push
cmp
dec
stos
or
stos
mov
int3
pusha
cmp
sbb
fs
add
add
push
inc
arpl
mov
ljmp
jno
lahf
pop
rcll
inc
fs
sti
aad
outsl
fstpl
xchg
int
sbb
mov
sub
pushf
repz
lods
mov
pop
cmpsb
rclb
dec
fsub
cmc
in
adc
hlt
jns
gs
loope
aaa
cmpsb
xlat
sub
std
or
inc
inc
lahf
aad
pop
pop
mov
or
loope
hlt
jecxz
inc
int3
orb
mov
cmpsl
inc
add
iret
pop
cli
aaa
sbb
leave
or
xchg
sbbl
in
mov
inc
cmc
fsubr
xchg
xchg
and
inc
mov
inc
dec
jae
adc
repz
aas
inc
enter
call
insl
adc
cmp
gs
addr16
imul
xor
mov
jne,pt
and
dec
xchg
imulb
imul
dec
fsub
or
and
int3
pop
gs
arpl
jge
push
push
and
sub
fs
cmp
sahf
sti
clc
hlt
and
stos
push
sub
jecxz
leave
out
ss
fstps
arpl
aas
mov
xlat
sub
loop
jne
and
inc
mov
inc
mov
ljmp
cmp
sub
mov
out
test
mov
xor
movsl
stos
lahf
cwtl
mov
lret
leave
mov
sarb
or
push
pop
mov
fidivs
aas
in
mov
les
jne
cmp
inc
fisubl
out
push
dec
cmp
inc
push
enter
cmp
outsl
sbb
mov
xchg
xor
sub
cmpsb
lock
jp
dec
dec
cmp
cmp
mov
ret
mov
ret
rorl
imul
lock
lahf
out
in
loopne
frstor
negl
rcl
and
sub
sbb
es
push
adc
xchg
shll
test
sahf
add
mov
ficompl
inc
imull
push
mov
sub
std
call
dec
in
add
dec
clc
adc
cmp
xchg
clc
add
repnz
enter
arpl
cmp
pusha
inc
fsubrl
dec
dec
test
faddl
fdivr
jecxz
xor
icebp
pop
xchg
int3
jbe
ret
add
mov
ss
shl
and
jno
dec
xor
cmp
dec
sub
dec
adc
adc
shl
sbb
push
call
faddl
mov
push
scas
jns
inc
fsubp
sbb
shl
imul
jb
fdivl
sbb
sub
test
dec
jmp
cwtl
dec
rorl
filds
dec
dec
jae
fstl
jle
pop
int3
dec
xor
enter
lea
and
mov
fsubl
jle
xchg
enter
push
jp
push
mov
add
and
fucom
pop
cmp
lcall
cmp
lahf
sbb
pushf
mov
fs
cs
sarl
adcl
pop
push
lret
push
xlat
pusha
fsubr
dec
jno
insb
pop
aam
mov
mov
add
ds
mov
adc
fdivs
inc
mov
xchg
pop
lret
sub
enter
shl
cmpsl
dec
cmp
and
je
fisttpl
or
out
or
mov
push
mov
mov
mov
mov
and
mov
orb
xor
xchg
mov
incb
mov
shl
inc
orl
mov
and
imul
outsb
stos
xor
jg
ss
sar
pop
addr16
jnp
mov
ret
cld
xor
orb
test
inc
inc
fsubl
in
push
dec
push
hlt
es
pop
and
pusha
fs
and
insl
mov
mov
outsl
cltd
imul
test
dec
stos
jno
icebp
test
lret
jecxz,pt
mov
test
push
adc
mov
add
jg
pop
testl
jp
xor
mov
loopne
push
out
addr16
jno
jnp
aaa
jns
xchg
andl
cmpsl
xchg
jl
mov
jl
inc
aaa
or
mov
or
hlt
add
daa
stc
fdivrs
mov
hlt
negl
cs
sarl
and
lea
add
outsb
sub
fs
cmc
sub
call
add
xchg
lods
lret
inc
and
mov
hlt
movsb
imul
cmc
leave
and
sub
mov
mov
xor
stos
roll
cli
lock
pop
and
sbb
movsl
push
inc
fdivl
cmp
add
data16
xor
outsb
sarb
sub
push
hlt
aas
jnp
jg
enter
xchg
cmp
cs
cwtl
pop
sub
int3
xor
jecxz
sbb
inc
push
lahf
rclb
add
loope
lret
test
dec
jbe
test
push
pop
inc
sub
call
data16
inc
ljmp
mov
xlat
insl
push
cmp
add
divl
test
addr16
bound
mov
mov
or
cmp
add
int3
or
lcall
out
inc
cs
mov
adc
stos
test
les
ret
pop
xor
negl
pop
add
popa
les
sub
subl
push
adcl
xor
xor
jbe
mov
mov
and
xchg
cmpsb
xor
adc
cmp
imul
arpl
and
jae
mov
arpl
jnp
popf
mov
dec
inc
inc
loope
cmp
ja
lea
cwtl
shll
cwtl
adc
mov
andl
out
or
test
mov
les
rcll
or
test
ret
and
fisttpl
add
push
loopne
lods
add
lahf
pop
push
push
mov
jge
cs
mov
test
test
int
pop
aad
lret
lds
sbb
int
arpl
inc
in
push
imul
dec
cwtl
aam
dec
mov
pop
daa
nopl
xchg
cmp
and
cld
test
cli
bound
xchg
push
dec
sahf
movsl
mov
nop
add
les
add
rorl
push
push
xor
jecxz
dec
ror
push
into
dec
jne
sahf
push
rcl
dec
mov
enter
push
sub
in
inc
sub
cmpsb
jne
cmp
rcll
pop
pop
les
incb
xchg
shl
outsl
mov
mov
daa
dec
in
dec
sub
cmovae
test
in
cmp
aam
roll
and
dec
dec
mov
jg
adc
xchg
jle
mov
cmc
jnp
xchg
jle
scas
fnstsw
aaa
imul
out
cmp
cmp
dec
mov
cld
mov
shlb
jg
int3
jno
rcll
idivb
xor
mov
ja
in
fnstsw
xchg
push
sbb
xor
sub
inc
pusha
loopne
and
add
stc
rolb
je
data16
shl
dec
mov
scas
pop
pop
push
rcrl
xchg
or
lds
cmp
pop
shll
lahf
sub
es
xlat
arpl
cs
add
cld
dec
jge
add
sbb
and
test
sbb
sub
sub
push
rcl
dec
xor
cmc
sub
loopne
add
sub
or
inc
xchg
popa
out
xor
daa
rolb
stos
jp
xor
mov
xchg
lock
jnp
mov
ret
and
or
inc
inc
mov
push
jmp
shrl
in
inc
and
xor
add
ror
test
pop
push
inc
test
fists
pop
xor
dec
push
jne
push
lret
arpl
cwtl
dec
arpl
jmp
adc
sub
and
popf
push
mov
and
ret
dec
and
sbb
mov
dec
das
dec
pusha
xor
dec
xor
shll
cmp
add
xchg
inc
push
mov
cmp
push
lret
outsb
inc
repnz
push
pusha
outsb
int
lret
jmp
xchg
adc
fldenv
cmp
shlb
push
xor
inc
dec
pop
dec
int
inc
dec
andb
inc
addl
xor
dec
jge
iret
addb
pop
mov
mov
or
pop
and
rcrl
xchg
and
and
ss
les
push
push
lret
ficoml
dec
lods
rolb
or
jno
inc
daa
mov
lods
push
daa
lds
cwtl
lcall
cmc
ljmp
lea
movsb
xor
push
mov
outsb
test
inc
ret
and
ja
sub
sbb
inc
inc
inc
movsb
push
jo
mov
inc
subl
inc
jle
push
mov
jmp
loop
mov
pop
xchg
mov
stos
loop
mov
ja
jno
push
fisubs
pop
cmp
test
cmc
sarb
ret
hlt
and
test
cmp
icebp
ret
add
add
jno
or
shll
pop
adc
in
cld
scas
je
in
jecxz
subl
sarb
push
xor
pop
insb
add
xchg
inc
jl
push
popf
icebp
add
ljmp
xor
xchg
inc
lcall
jg
adc
inc
sub
mov
sbb
inc
add
push
cmc
scas
push
inc
in
jp
arpl
testb
rcll
push
jb
je
in
imul
pusha
jl
lds
jg
mov
xor
daa
insl
aad
repnz
cmpl
cmpb
lds
out
in
ja
push
lahf
push
sub
xor
and
in
sbbb
xorb
lods
cltd
repz
and
pusha
dec
add
in
inc
popa
loope
dec
les
push
push
xchg
movsb
mov
pop
sbb
push
iret
cwtl
lahf
jle
xchg
mov
add
call
shll
xchg
jle
outsb
adc
mov
adc
inc
sarb
fs
dec
mov
mov
xchg
fdivrs
mov
popa
inc
shlb
into
cli
mov
xor
adc
jle
xor
and
cmp
xlat
jle
in
mov
loope
or
dec
cmp
jne
and
xchg
jmp
stos
and
mov
mov
pop
fs
rcr
jb
dec
add
inc
sub
loopne
hlt
mov
sub
loopne
ja
aad
jbe
dec
aas
push
loopne
popf
sarb
jmp
rcrb
imull
mov
fdivs
das
lds
ds
insl
outsb
psubsw
and
mov
mov
add
pop
sahf
cwtl
mov
out
in
xor
fsubrs
cwtl
and
inc
pop
iret
push
outsb
sar
stc
cmp
dec
mov
and
inc
jne
sbb
xor
mov
jnp
push
cltd
int
add
pop
mov
pop
std
loop
pop
sbb
jno
ja
insb
pop
sub
add
push
add
xor
jo
jle
aaa
xor
jne
mov
dec
push
pop
xor
icebp
xor
in
or
mov
loopne
and
mov
jne
add
inc
les
xchg
icebp
popa
je
cmpsb
std
inc
cld
in
stos
pop
xchg
gs
sbb
loope
addr16
jp
pusha
push
sub
add
inc
inc
rorl
dec
xchg
ljmp
rcrb
xchg
xor
bound
hlt
inc
pop
push
add
mov
push
dec
pop
or
lahf
mov
into
movl
add
int3
addl
cmc
jbe
gs
sbb
out
and
and
aaa
dec
lcall
scas
inc
data16
movsb
lcall
or
xchg
dec
jge
testb
cmc
sti
call
jnp
pop
test
lock
pop
stc
outsl
xor
lret
and
or
movsl
popf
xchg
dec
cmp
in
jmp
sbb
jmp
inc
jae
add
stos
jne
movsb
inc
sub
repz
mov
and
cltd
pop
aaa
adc
add
inc
inc
scas
lods
out
and
leave
push
loopne
push
push
out
movsb
pop
sub
xor
sub
sub
test
xor
cmc
and
gs
popf
and
xchg
into
pushaw
add
push
jge
dec
cmc
leave
xor
ret
inc
mov
ret
js
enter
lret
cmpsl
aas
push
movsl
inc
mov
mov
add
aas
push
sbb
fadds
pop
pusha
jne
or
repnz
sbb
aam
cmp
sarl
stos
inc
inc
mov
addl
mulb
push
fwait
hlt
push
fisttps
and
inc
sub
rorb
stc
jle
jne
sub
shl
cli
out
aaa
hlt
jo
dec
lcall
add
aas
ret
ret
stos
push
cld
cmpb
xlat
push
mov
notb
mov
xor
xlat
jne
std
repnz
and
jge
sub
pop
pop
nop
push
push
ret
and
dec
pop
xchg
arpl
cmp
and
daa
shll
inc
sub
sub
shrl
cmp
xor
mov
inc
sti
inc
dec
jns
nop
insl
add
pop
mov
out
sub
lea
imul
aaa
imul
cmpsl
or
popf
leave
sub
shl
fdivs
cld
sub
push
sahf
cmp
andl
mov
mov
out
xlat
sbb
mov
aas
xchg
mov
xchg
or
add
inc
test
jmp
mov
insl
mov
jne
dec
hlt
mov
or
mov
gs
push
xchg
inc
dec
inc
or
pushl
gs
aaa
cwtl
into
cmp
push
sti
dec
shlb
mov
sub
lock
lahf
push
push
push
arpl
inc
and
test
out
push
pop
mov
jb
das
pop
stos
or
imul
int3
fildll
subb
mov
sub
xchg
es
cmp
sub
nop
push
jl
dec
lds
xor
pop
dec
mov
add
xchg
cmc
and
dec
cmp
lods
or
push
xchg
inc
sub
mov
pushf
cmpsb
in
pop
rorl
mov
jnp
test
xchg
and
shlb
or
call
ret
shrl
xlat
lods
jo
sub
arpl
xor
mov
xorl
push
mov
fildll
push
scas
adc
push
cmp
jbe
xchg
xor
in
push
lcall
cmp
and
stos
dec
imul
call
cwtl
and
push
fcomps
jo
scas
out
or
or
shl
xor
cs
movsl
fsub
push
mov
sub
sub
lahf
mov
outsl
inc
jno
je
xchg
lds
cld
incb
inc
pop
jne
subb
in
insl
mov
ljmp
pmulhw
js
lods
dec
mov
insb
mov
repz
popf
adc
rcll
lds
loop
xchg
andb
cs
test
shl
add
or
pop
push
test
sahf
jno
mov
das
sbb
jno
pop
adc
push
mov
jae
test
and
gs
xor
js
pop
es
cmpsb
jae
pop
xor
inc
jne
jne
xlat
add
je
and
loop
dec
dec
sarl
pop
fidivrl
shlb
out
pop
xchg
gs
test
pop
out
clc
ljmp
insl
xlat
pop
imul
inc
rcrl
mov
adc
xor
dec
fmul
sub
cmp
mov
xlat
add
mov
inc
inc
cmp
hlt
popf
mov
cltd
mov
mov
je
adc
nop
mov
and
inc
xor
mov
push
sub
cmp
adc
dec
push
fs
xor
and
orb
xchg
test
mov
xor
pop
ljmp
incb
adc
dec
aaa
movb
jge
cmpl
mov
push
or
cltd
es
inc
cmp
jge
inc
js
dec
cmpsb
xor
cmp
pop
roll
mov
mov
outsb
xchg
dec
mov
loop
push
push
ret
add
cwtl
imul
gs
xchg
pusha
mov
scas
mov
xor
pop
cs
jecxz
sahf
arpl
daa
pop
xchg
push
xchg
enter
dec
xorl
test
push
add
loope
sarb
and
jns
cmc
ficompl
inc
js
sbb
adc
pop
cwtl
jge
and
jb
push
inc
push
push
xor
in
push
gs
pop
js
nop
push
pop
or
je
outsb
push
adc
xchg
push
leave
insl
pop
xchg
dec
xor
test
ds
inc
mov
mov
loopne
pop
mov
add
fsubrl
push
fsubrs
icebp
and
and
cmp
xor
mov
xchg
cmpsb
insl
cmpb
daa
mov
inc
movsb
cltd
dec
jns
leave
dec
sub
dec
aam
dec
lods
xlat
ja
fistpl
pushl
inc
jb
es
or
pop
call
fldt
addr16
pop
jae
xchg
aad
jo
stos
add
jne
arpl
pop
test
push
inc
aas
and
repnz
fsub
lds
scas
jns
push
lods
add
sub
push
test
call
icebp
xor
sub
in
addl
scas
clc
test
ds
sub
jecxz
lock
dec
movsb
sbb
inc
insb
jge
sub
test
ret
push
inc
add
push
mov
out
xchg
xchg
dec
sar
lea
and
jns
lret
jecxz
cmc
mov
cmc
mov
clc
test
sahf
adc
inc
xchg
mov
sub
outsb
ret
dec
stos
inc
sbb
and
lahf
loope
inc
mov
std
mov
addr16
push
and
std
sahf
inc
mov
push
int
movl
enter
xor
and
lret
pusha
inc
dec
cmp
inc
dec
jge
push
push
lods
and
mov
js
in
les
shrl
push
jne
adcl
jl
sbb
scas
ret
push
push
dec
fld
ret
stc
sbbb
ret
pop
loopne
mov
enter
movsl
sub
jmp
loope
mov
xchg
push
dec
cwtl
inc
dec
or
je
push
sub
cmc
sub
pop
mov
xlat
in
hlt
lds
mov
dec
dec
dec
arpl
push
inc
sub
mov
ret
xchg
jns
push
mov
jne
push
insb
dec
dec
ror
mov
mov
mov
rorb
sbb
ret
test
popa
cmpsb
fadd
xor
std
mov
int
and
mov
test
inc
jnp
les
cmp
ret
xchg
fdivrl
sub
test
push
xorl
sbb
and
hlt
mov
push
scas
sahf
jge
pop
out
inc
jle
inc
int
jae
push
push
cmp
fwait
push
pop
fs
lea
xchg
xchg
xchg
or
fwait
push
dec
jg
movsl
cmp
scas
ret
subl
fbld
sarb
test
dec
ss
shrb
std
xor
adc
add
mov
xchg
push
out
jb
push
cmc
xchg
movsl
nop
stos
dec
ss
sarl
test
mov
mov
iret
cmp
jns
xor
push
cmc
lahf
adcb
inc
int
and
test
or
push
and
lret
daa
sbb
or
jbe
xor
sub
cmc
mov
fisubrs
sti
enter
loop
cli
push
lcall
xor
or
jae
adc
hlt
xlat
cmp
mov
in
mov
dec
dec
cwtl
mov
sbb
mov
mov
nop
loopne
cwtl
or
cs
fwait
inc
sahf
stos
push
pop
loop
inc
inc
adc
lret
lds
imul
add
cmp
sbb
dec
sub
ret
ret
jp
insl
push
outsb
inc
mov
sub
lods
test
push
test
subb
sub
mov
sahf
mov
push
push
push
lcall
mov
int3
xchg
lds
fildll
imul
clc
jecxz
and
sub
sub
hlt
xorl
shl
cmp
or
push
aas
xlat
movsb
jmp
sbb
ljmp
mov
sub
lods
cs
add
and
out
je
xchg
popf
ljmp
pop
add
aas
outsb
push
xchg
test
int3
mov
mov
push
sub
jp
cmp
dec
sbbl
out
ljmp
aam
jno
sarl
sub
dec
sub
stc
addl
and
or
pop
add
jmp
in
inc
inc
pusha
dec
dec
into
stos
and
push
scas
push
arpl
sub
mov
push
sub
xor
rorl
sbbb
bts
lods
xorl
cltd
mov
xor
add
push
mov
incb
and
rclb
push
inc
dec
dec
add
dec
dec
stc
stos
xchg
dec
push
jg
jp
jb
lods
popf
pop
pop
loop
push
loope
jno
and
clc
adc
imul
addb
dec
mov
pop
dec
adc
ds
mov
test
std
push
cs
shll
push
int
iret
cmp
sarl
jbe
cld
cmc
jmp
das
or
loop
xchg
inc
pusha
sbb
sub
push
sbb
add
push
add
jns
aam
addb
add
cmp
ljmp
lret
xchg
and
roll
movsb
add
inc
push
sti
mov
mov
daa
lods
stos
xchg
jne
push
es
sahf
fwait
and
dec
dec
es
xchg
fdivrl
sti
cmp
inc
cmp
cmc
adc
and
shrb
lret
je
aad
xchg
mov
mov
sbb
or
orb
rorl
add
dec
adcl
faddl
pop
out
loop
bound
call
fstpl
lret
or
xor
mov
mov
push
xor
mov
adc
jne
add
dec
mov
pop
cmp
das
shlb
jecxz
push
lcall
lret
add
pop
loop
hlt
add
push
stos
push
push
inc
sarb
fucomp
jle
daa
shlb
jns
ja
cld
pop
aas
inc
add
push
inc
aaa
test
push
add
ret
dec
lar
jg
sbb
mov
mov
test
negb
fsubr
mov
sub
lods
mov
enter
test
dec
jnp
pop
cmp
sbb
adc
dec
and
test
scas
orl
or
rcrl
jne
pop
dec
xor
dec
stc
loopne
mov
sbb
dec
inc
mov
sbb
js
mov
inc
jne
rol
cmp
sub
and
push
fwait
test
rdmsr
lods
addl
testb
fwait
lret
pop
jg
les
rcrb
pop
hlt
mov
jns
pop
add
inc
in
stos
sbb
dec
jge
push
and
mov
pusha
imul
sub
pop
int
add
push
dec
fwait
lret
xor
push
or
dec
xchg
stc
lds
sbb
inc
gs
xor
dec
push
xlat
imulb
xchg
dec
test
cld
fwait
xchg
push
jne
inc
jae
add
and
ds
fnstenv
mov
rcrb
add
fneni(8087
cmp
push
mov
and
gs
add
filds
sahf
jbe
fildl
shrl
pop
mov
lret
push
movb
lret
mov
lds
nop
ss
xor
fs
jae
fldt
outsl
es
mov
adc
pushf
andl
dec
or
inc
test
xlat
mov
in
repnz
push
mov
inc
popf
jecxz
cltd
pop
stos
and
push
add
adc
push
fs
and
into
xor
push
push
enter
and
xor
or
test
xor
dec
iret
in
cmp
pop
es
pop
aad
dec
xor
or
idivb
insl
out
test
mov
and
push
or
shll
loop
inc
out
jl
js
movsl
mov
adc
dec
popf
mov
aam
dec
sub
hlt
xor
cmp
stos
sub
in
out
or
dec
and
fnstsw
or
mov
cmpsb
bound
push
cmp
sub
push
cs
inc
lahf
pop
inc
dec
jne
xor
shrb
stos
cld
fstps
or
pusha
jne
lods
nop
dec
popf
mov
and
rcll
push
pop
lahf
movsl
and
xchg
nop
ret
aam
jge
lcall
imul
inc
dec
mov
push
loop
orl
pop
jne
into
adc
jns
ss
orl
mov
out
lods
push
inc
dec
in
jbe
cmp
inc
cmp
aas
aas
movsb
add
add
xchg
movb
mov
lea
or
jmp
and
stos
adc
cltd
add
jmp
push
mov
add
and
fisttpll
dec
xor
psrad
dec
pop
lods
sbb
loope
cmp
push
lret
add
push
add
dec
shl
clc
mov
rolb
nop
sarl
rolb
fcomps
jl
aaa
xchg
cmp
je
jae
adc
jae
sub
enter
jb
test
mov
mov
pop
mov
aaa
sarb
enter
or
dec
out
xor
mov
sub
fwait
iret
jg,pt
jp
std
icebp
stc
nop
sbb
aam
mov
pop
cmpsl
or
out
cs
and
insb
and
fs
mov
cmc
pop
lret
and
fdivs
adcb
out
cmp
push
dec
jge
adc
cmp
push
faddp
mov
sub
adc
fdivrp
outsl
xor
hlt
push
jne
ljmp
xchg
cmc
cmp
sub
xor
arpl
mov
popa
pop
dec
leave
push
test
inc
das
sub
test
inc
in
inc
dec
jo
mov
in
cmp
push
roll
test
movsl
dec
dec
and
outsb
xchg
dec
and
pop
clc
mov
pop
cmp
inc
fsubl
xor
stos
and
hlt
out
push
ljmp
jns
pop
leave
mov
jno
lret
mov
jns
push
repz
add
add
testb
pop
xlat
sub
jns
mov
sbb
jnp
adc
iret
mov
push
sub
aas
jmp
mov
or
xor
dec
stos
lret
xchg
in
hlt
adc
or
mov
lea
jb
cmpsb
push
in
push
mov
movsl
push
xor
xor
xchg
push
stos
icebp
cmpsb
push
and
out
aaa
and
sahf
fadds
aas
cmpsl
and
int3
cmp
ds
lods
rcrl
orl
outsl
mov
fidivl
cmp
das
test
stos
arpl
xchg
imul
js
scas
jno
call
dec
push
pop
sbb
lds
cmp
int
jns
lea
test
je
dec
and
popa
pop
mov
movb
lret
inc
add
out
mov
push
push
mov
jle
mov
xor
xchg
lds
imul
sub
movsb
jmp
ss
ss
and
lahf
fdivl
cmpb
push
jmp
clc
cmp
pop
xor
punpckhwd
lcall
lahf
mov
jp
mov
mov
xchg
daa
fnstcw
stos
adc
vmaxss
adc
rorb
test
push
lods
pusha
adc
and
jo
sub
stc
test
or
mov
loope
cwtl
xlat
cmp
ja
jnp
test
ss
fstpl
rcrb
and
jle
push
xchg
faddl
and
repz
push
mov
lret
pop
pop
loopne
or
mov
inc
popf
xor
xchg
lock
js
ja
int
out
out
stos
dec
dec
leave
push
ret
xchg
mov
jns
sub
leave
stos
lds
mov
dec
movsl
xor
leave
dec
xlat
jns
push
fwait
push
cmc
cmp
insl
pop
adc
jne
icebp
fcompl
jbe
xchg
fadd
mov
jno
fsubr
aad
lds
or
push
xchg
jnp
jnp
daa
jae
lods
sbb
inc
or
gs
and
cmpsl
inc
test
xchg
pop
rcr
cmp
sarb
push
mov
jmp
xchg
xor
sbb
dec
dec
test
testl
jbe
iret
xlat
dec
cwtl
int
out
fmul
outsl
mov
jl
cli
jo
shl
xchg
int
cmc
sub
mov
mov
jmp
insb
popf
push
bound
cli
sbb
call
pop
pop
leave
push
mov
ss
xor
pop
xor
sub
or
cltd
mov
sbb
pop
shll
mov
into
mov
cmp
or
filds
mov
and
mov
popa
pushf
and
aad
jns
dec
add
test
cs
sub
and
pop
mov
out
pop
nop
in
xor
outsl
ror
lods
and
clc
adc
js
dec
mul
adc
mov
and
int
pop
add
ret
loopne
dec
fiaddl
add
jbe
jge
inc
das
dec
sbb
xor
les
push
push
adc
nop
push
in
dec
push
dec
push
and
mov
andb
mov
cltd
test
repz
jo
mov
pop
jne
mov
xor
pop
jo
orb
dec
loope
xchg
or
dec
cltd
shlb
cmp
mov
xor
outsb
and
mov
jnp
push
sahf
pop
cmp
enter
cmp
jp
add
or
add
xor
push
shll
shrl
push
pop
xchg
xchg
js
add
dec
in
sub
fisttpl
sbb
inc
jbe
cmp
adc
mov
int3
test
fsts
and
clc
in
adc
addl
hlt
test
pop
jae
inc
sbb
test
sub
sbb
sbb
inc
sbb
xor
sti
gs
lea
or
gs
and
inc
or
adc
push
pop
in
test
inc
push
inc
aam
or
in
lea
cmp
cmp
mov
out
mov
fcmovnbe
and
addr16
pop
add
mov
mov
or
xor
push
inc
dec
rorl
dec
cmpsb
mov
and
sub
hlt
or
pop
loope
icebp
rcl
imul
out
add
xchg
cwtl
frstor
fnstenv
xor
xor
je
clc
shrl
aam
test
scas
adc
push
jne
aas
sub
mov
cs
mov
fidivl
jle
jmp
shlb
adc
cmp
push
mov
cmp
inc
std
rorb
pop
mov
sub
lahf
pop
jge
sub
je
sub
mov
add
lret
and
js
imul
fs
loop
and
add
into
jne
mov
ljmp
pop
mov
xor
sub
pop
or
addr16
punpckhbw
or
je
out
rcr
xor
jne
mov
lock
add
adc
jnp
mov
xchg
cmp
fs
rcrb
sub
cld
aas
int
jge
dec
lcall
inc
dec
xchg
xchg
loop
and
cld
lcall
inc
mov
into
lds
push
enter
subb
push
lds
push
push
rcrb
fcoml
xchg
jge
rol
push
rclb
dec
dec
dec
and
std
fsubrl
push
jne
push
sbb
hlt
in
ret
fld1
or
movsb
sti
jge
mov
cmpsb
and
xlat
mov
jge
adc
ret
inc
roll
sub
dec
data16
lods
arpl
mov
sub
mov
mov
and
jp
cmp
mov
movsb
fisttpl
pop
and
and
fildl
jle
clc
adc
mov
mov
in
sbb
mov
ret
xor
push
test
adc
jb
gs
and
test
sahf
lahf
dec
sub
nop
cmc
out
and
inc
jnp
dec
lds
add
loopne
cmp
dec
xchg
xor
inc
adc
lret
and
mov
stos
addr16
mov
cmp
or
stos
loope
jne
push
dec
repnz
pop
adc
jg
xlat
and
stos
mov
movsb
or
sub
aas
and
imul
in
ds
orb
inc
cli
out
xchg
test
mov
cmp
jne
xchg
lds
fcmovbe
push
push
push
call
mov
inc
call
cmp
or
lret
jmp
decl
and
xor
mov
mov
mov
push
dec
pop
push
scas
pop
xchg
sub
fistpll
js
sarb
pop
insb
inc
sarb
rcl
mov
jns
gs
dec
jg
fsts
cmp
mov
pop
or
clc
jge
test
mov
ds
adc
popf
push
push
xor
out
ror
push
addr16
or
insb
inc
xor
mov
sbb
jmp
decl
push
push
inc
xor
test
js
push
push
mov
lahf
lods
and
lret
fiaddl
cli
and
aam
dec
movsb
add
push
inc
jp
sub
adc
adc
frstor
pop
dec
jbe,pt
or
or
xchg
cmp
inc
jb
fcompl
jae
hlt
jns
mov
test
xor
movsl
xor
adc
enter
lock
xchg
sahf
push
xor
iret
adc
xchg
lret
add
out
push
mov
xchg
mov
pop
and
adc
or
bound
fsubrl
push
sub
inc
out
and
int
lock
fildll
dec
in
repnz
push
adcb
pop
adc
xor
bound
xlat
notl
int3
sahf
mov
xchg
push
test
int
rcrb
rcr
addr16
adc
pop
pop
fsubrp
sbbb
jns
addl
sub
scas
dec
mov
xor
rolb
lcall
orl
inc
mov
insl
cs
jecxz
jne
jae
mov
pusha
insb
pop
mov
or
pop
stc
sbb
popf
mov
data16
xchg
add
jne
push
mov
adc
rcll
xlat
cld
aas
cmp
std
ljmp
push
in
out
bound
push
inc
fdivr
stos
mov
mov
aam
inc
push
jmp
xchg
fdiv
xlat
jbe
cmp
shl
in
mov
xchg
dec
nop
sub
mov
dec
jmp
dec
aad
push
ljmp
xor
ret
pop
cs
stc
mov
add
rolb
mov
cmp
push
push
jge
add
shrl
sub
sbb
mov
scas
jmp
aad
xchg
push
and
or
lds
mov
dec
mov
cmp
movsl
or
dec
push
adc
pop
daa
pop
xor
lahf
ljmp
sbb
leave
mov
inc
rorl
mov
mov
out
nop
dec
rorl
fists
mov
and
jp
jns
xor
inc
nop
jb
popf
rorl
fidivl
or
mov
cmp
scas
sbb
or
cmp
mov
dec
sarl
mov
shlb
movsb
test
shll
lods
cmpsl
mov
mov
jecxz
sub
sbb
push
xlat
cmp
mov
push
inc
decb
pop
fdivs
adc
das
subl
shrb
in
mov
insl
jno
sub
lock
movsb
sbbl
inc
push
daa
sti
stc
hlt
adc
pop
fcmovne
hlt
enter
jne
and
scas
lds
jns
pop
leave
mov
scas
daa
add
or
jl
das
ss
addl
iret
or
in
insl
jb
and
sbb
je
fldt
imul
mov
cs
dec
cmpsl
add
rolb
push
push
sub
sahf
nop
cltd
out
mov
stos
scas
sub
pop
dec
cmp
and
and
mov
pop
add
bound
sub
push
cmp
mov
jo
and
push
daa
je
and
lds
pop
sub
push
and
sahf
lcall
or
es
lds
mov
push
pop
popa
inc
push
call
jl
fistpll
mov
daa
and
mov
jne
xorl
fistpl
or
add
and
dec
dec
cmp
sub
outsl
cmpsl
loop
jmp
test
cmp
test
xor
out
push
fwait
dec
fsubl
pop
call
push
enter
movsl
lds
dec
and
and
mov
xor
lret
xor
xchg
ret
mov
fcoml
rcr
pop
lret
mov
adc
dec
dec
and
hlt
xchg
mov
dec
enter
stc
mov
fsubl
out
std
jo
push
dec
cmc
push
test
sub
loopne
outsl
imul
push
fstpl
enter
sub
pop
jo
xchg
adc
jecxz
xor
mov
das
xor
and
and
gs
pop
pop
add
cs
lds
pop
mov
pop
inc
pop
inc
sub
stos
cld
adc
daa
addr16
sarl
and
adc
jle
ja
jg
mov
lds
decl
imul
jns
pop
adc
sub
sub
jae
cmpsb
push
jne
dec
mov
test
and
loope
inc
out
dec
sbb
rcrb
rorb
push
push
sti
pop
push
fsub
push
push
lods
test
dec
leave
mov
adc
fs
dec
xchg
push
mov
inc
fiadds
in
jg
dec
imul
xorl
xchg
add
dec
jne
not
jne
insl
lret
fcmovne
not
aam
adc
cmp
mov
in
push
aam
sbbl
in
jle
xchg
mov
popf
mov
push
push
movsb
push
sub
imulb
or
mov
or
arpl
mov
adc
js
mov
lods
push
and
je
pop
inc
dec
sbbl
nop
rcrb
stc
mov
pop
xchg
test
xor
mov
and
and
cmp
xchg
imul
push
pop
add
popa
aad
jae
jle
xor
cmc
sub
sbb
cmp
sub
lea
dec
xchg
imul
mov
in
ds
stos
scas
popf
fistps
sub
pop
mov
sub
test
xchg
icebp
in
adc
sub
pop
inc
aaa
dec
insb
daa
inc
sub
cmc
stc
arpl
jno
dec
aad
push
mov
icebp
inc
jno
and
fcmovnu
jne
or
aaa
xor
or
rorb
sarl
hlt
cmp
inc
sub
adc
stos
or
in
cmp
test
push
loop
test
push
mov
cmp
sti
fiaddl
xchg
inc
or
stos
xor
xchg
mov
leave
jnp
clc
dec
in
mov
xchg
data16
aad
sub
shll
aas
adc
pop
xor
adc
pop
nop
sbb
sbb
push
nop
fmull
popf
inc
push
lea
outsb
lds
add
cmpsb
shll
jnp
movsl
and
fs
fistl
lds
in
sub
out
dec
cmp
inc
ret
gs
mov
test
dec
cmc
sbb
push
xchg
or
das
dec
mov
pop
cli
daa
fildll
cmc
lds
sbb
jle
sub
pop
scas
sub
xor
cmc
pop
sub
and
in
jp
mov
push
and
fucom
xchg
mov
dec
jmp
aas
cmc
stos
push
out
push
scas
mov
push
cmp
icebp
jbe
rol
decl
dec
sub
xchg
pop
xor
sti
sbb
data16
gs
jnp
jne
sub
inc
popa
aam
insl
jb
pop
inc
shlb
mov
pop
inc
cmpsl
inc
push
mov
inc
pop
sub
sub
ljmp
push
mov
or
add
scas
cli
xchg
movsb
jno
roll
inc
sbbl
mov
sbb
push
or
dec
push
jg
mov
xor
ret
repz
xorl
in
aaa
ret
mov
cmpsb
lret
faddl
int
pop
aas
jmp
jne
cld
jae
jmp
jl
and
fldl
pop
inc
scas
mov
add
cmp
lds
push
xor
adc
lret
stos
jl
jl
push
aad
dec
leave
inc
sub
fwait
dec
push
dec
push
lret
adc
cltd
cmp
xor
in
inc
lods
jge
hlt
cmc
mov
cmpsl
push
es
inc
cmp
test
dec
jle
test
hlt
jo
pop
xchg
xorl
sbb
xor
movl
xchg
test
movsb
ds
out
dec
adc
inc
sbb
pop
aaa
push
dec
dec
or
fbstp
dec
mov
adc
pop
test
add
popa
adc
xchg
cmp
add
fdivl
jmp
dec
mov
lods
shrl
sub
and
fcoml
cmp
mov
push
mov
xchg
lret
push
xorb
std
aad
rcl
push
dec
pop
js
mov
sub
dec
push
xchg
imul
stos
mov
cmp
sub
sub
xor
sub
xor
sub
aaa
dec
push
or
sub
mov
sub
or
imul
fdivr
frstor
stos
xchg
jne
sub
mov
ficompl
dec
push
inc
jp
mov
jle
pop
push
repz
inc
lods
cmp
push
arpl
popf
push
and
pop
addl
or
push
dec
cmp
add
fmull
or
mov
inc
pop
in
inc
rorb
inc
ja
mov
fidivl
mov
sub
movsb
ljmp
insb
shlb
mov
lret
or
ja
sub
adc
loopne
jge
aad
cs
or
loopne
inc
inc
push
loop
mov
shrb
xor
bound
lahf
jg
or
stc
pop
push
jg
cmp
xor
rcrl
xor
repz
and
sub
xchg
cli
test
push
push
inc
jle
or
inc
fiaddl
cmp
cltd
rcll
adc
hlt
test
jmp
xchg
sahf
clc
xchg
jns
mov
stc
mov
push
loop
xchg
dec
dec
mov
mov
jmp
out
dec
mov
daa
outsb
test
jne
sar
inc
jb
stos
std
push
mov
imul
mov
orb
jge
xchg
or
ret
mov
dec
clc
or
xchg
or
push
inc
mov
push
cmc
pop
sbb
cmpsb
sub
in
fiadds
repnz
push
sbb
sbb
pop
aam
jnp
das
xor
jbe
inc
and
add
and
shrl
stc
and
sbb
les
shrl
mov
sbb
mov
insl
sbb
xor
test
cmpsl
outsl
imul
shll
push
sbb
fsubl
in
dec
jp
jb
movb
iret
repnz
add
fdivrp
add
imul
add
and
mov
jne
pusha
daa
fsts
mov
ret
sarb
loope
mov
add
js
lods
sbb
loope
push
shll
fmull
mov
adc
rolb
sub
mov
cld
jp
sub
and
mov
lods
dec
adc
xor
mov
xchg
and
add
jge
adc
inc
mov
outsb
lahf
insl
push
clc
jne
ja
cmp
aad
scas
inc
imul
pop
test
inc
test
dec
ficomps
je
inc
pop
cmc
mov
xor
adc
mov
ret
mov
sar
jecxz
lds
adc
daa
jle
push
imul
sub
movsl
push
jns
nop
test
std
daa
andl
divb
sub
or
ret
cmp
stos
mov
adc
xor
scas
sbb
ja
inc
pop
mov
pop
fsubl
loope
jl
xchg
push
cs
push
les
sbb
dec
push
xchg
sbb
xchg
gs
daa
mov
jae
mov
sbbb
mov
dec
scas
cwtl
dec
mov
lahf
lea
in
jmp
pop
imul
in
cs
dec
add
mov
cmpsb
mov
inc
jnp
sahf
sub
inc
mov
sahf
cltd
push
sbbb
lods
fwait
leave
cmc
sub
jmp
xchg
test
pmuludq
sub
sub
push
in
andb
jae
fisttpll
and
cmp
dec
inc
rclb
jns
mul
pop
add
inc
jge
inc
inc
imul
loopne
and
aas
popa
adc
fiaddl
pop
data16
pusha
cmp
xlat
int3
repz
shll
dec
xor
xor
leave
fnsave
decl
fdivrp
pop
test
loope
es
dec
sbb
gs
stos
ret
lret
inc
push
int
sub
in
popf
pop
movsb
dec
xor
pop
add
cs
pop
leave
mov
test
sub
ja
or
loop
add
push
dec
push
xchg
repz
stos
cmp
pop
out
inc
dec
sub
andb
adc
nop
mov
arpl
ds
fildl
fldl2e
push
mov
subb
push
ljmp
leave
subl
out
jno
add
inc
shlb
dec
mov
pusha
in
fcompl
test
es
sub
jns
jne
lcall
add
push
adc
loopne
lods
cmc
mov
clc
js
xchg
push
mov
mov
hlt
loopne,pt
dec
mov
lret
xchg
pop
dec
push
repnz
add
jb
inc
popf
test
movl
outsb
out
xor
cmc
push
call
add
inc
jno
adc
mov
movl
push
out
mov
adc
xchg
add
out
rorl
adc
ljmp
mov
cmp
mov
cmp
jl
inc
orb
xchg
cmp
ret
jne
mov
ucomiss
xchg
inc
shlb
mov
ja
xchg
jne
movsb
les
leave
adc
icebp
pop
inc
lds
sbb
insl
push
xchg
sub
imul
pop
adc
xchg
xchg
sbb
add
jnp
ss
fsubrs
rorl
add
and
jo
popl
and
scas
add
imul
jecxz
movb
mov
decl
inc
loope
shl
pusha
sub
and
scas
push
inc
subb
pop
mov
pop
mov
orl
xor
cmp
imul
sbb
and
sub
ljmp
jecxz
or
pop
ds
sub
fdivl
mov
or
pop
and
ret
test
mov
adc
or
inc
adc
inc
pop
pop
xor
jmp
shrl
and
fwait
in
fdivp
inc
roll
leave
adc
add
pop
pushf
inc
mov
das
and
test
nop
dec
mov
xor
sub
lahf
cmp
loopne
imul
mov
aas
int
dec
push
jmp
lods
repz
fs
dec
fdiv
lret
ret
fld
adc
fsubs
xor
add
xchg
push
ljmp
in
mov
dec
add
dec
push
or
lods
add
mov
inc
enter
inc
mov
xchg
int3
sbb
imul
ds
mov
sub
and
stos
mov
xor
dec
xchg
sarb
xor
stc
and
inc
push
rcr
sub
movsb
loop
ret
das
rol
stos
xor
call
fistpll
push
xor
lock
or
add
fs
jne
test
repz
or
out
ret
add
fwait
pop
push
xor
pop
inc
test
inc
push
iretw
dec
loope
movsl
xor
jg
dec
lds
pop
push
sub
push
lods
push
iret
mov
xor
or
test
mov
dec
jmp
and
pop
or
in
add
orl
jnp
jnp
sbb
inc
jne
test
arpl
repz
and
test
sub
std
ds
mov
push
dec
rolb
dec
ret
add
rol
movsl
and
shll
push
mov
dec
adc
or
mov
pop
movsb
mov
xchg
dec
xchg
push
cmp
hlt
lea
test
dec
daa
insl
pop
aaa
dec
add
jne
imul
push
es
popf
roll
adc
dec
pop
stos
sub
outsb
xchg
add
add
xor
mov
and
movsb
ljmp
pop
dec
mov
in
sub
sbb
add
fbstp
mov
and
xchg
rolb
xchg
daa
inc
mov
js
cmpsb
lea
add
xchg
push
xchg
push
pop
stc
out
shrb
mov
adc
incb
leave
shr
cltd
and
test
fbstp
aas
pop
lock
mov
popa
jae
dec
sub
add
fdivrl
push
push
xchg
mov
sub
test
add
bound
js
out
add
sub
in
inc
or
jg
dec
push
inc
mov
push
jne
ret
rol
add
addr16
add
arpl
int
xlat
adc
shl
movsl
dec
cltd
int3
sub
add
sub
mov
xor
and
pop
loop
dec
rclb
cmp
add
cmp
xor
test
mov
dec
adc
dec
sub
int
pop
inc
inc
push
add
mov
stc
cmp
repnz
mov
jns
xlat
pop
sub
fnstsw
sub
cmp
xor
lds
mov
mov
lods
dec
popf
repz
jmp
push
sbb
inc
movnti
dec
arpl
and
lret
mov
add
jmp
insb
in
cmp
ljmp
and
xor
dec
or
test
lcall
popf
pop
or
cmp
enter
iret
and
fisubrl
mov
inc
int3
fsubl
jecxz
pop
popa
inc
mov
aam
pop
xor
fnstcw
inc
add
ret
loopne
cmp
into
add
stos
jne
push
stc
insl
aad
mov
inc
stos
test
cmp
push
dec
aas
mov
mov
lds
and
push
and
fdivr
sar
pop
or
dec
push
mov
xchg
lods
and
pop
sarl
sbb
shlb
pop
push
testl
insl
push
add
push
inc
add
add
sbb
and
xchg
dec
sub
mov
xor
aas
arpl
ja
mov
add
fdiv
hlt
lret
popf
jp
mov
inc
pop
and
dec
sarb
testl
es
push
mov
movsl
negl
repnz
fs
xchg
lahf
jnp
ror
sti
sub
in
cmpb
add
mov
mov
sbb
dec
pop
pushf
or
mov
dec
sarb
or
ret
fcompl
lods
push
inc
shll
xor
push
cwtl
sub
adcl
jg
mov
les
push
xlat
push
mov
inc
adc
jno
iret
jnp
popf
sub
sub
mov
lret
push
fstp
subl
fildll
aas
push
and
cltd
xor
test
jg
push
mov
imul
rol
adcl
ss
xor
xchg
add
dec
in
ja
inc
jns
jne
jmp
pop
ds
cmpsl
dec
push
add
jl
sbb
mov
enter
add
roll
mov
xor
fwait
pop
jo
and
push
sub
xchg
aad
rolb
in
sub
loop
lret
push
test
es
lea
stc
dec
add
jne
mov
dec
roll
dec
mov
mov
inc
push
inc
sub
dec
xchg
cmp
or
pop
and
scas
adc
cs
stos
loop
dec
or
aaa
lods
inc
movsl
les
popa
add
dec
loop
jmp
ja
and
dec
dec
sbb
and
shl
test
pop
push
jp
dec
cmc
sbb
mov
mov
jo
cmpsl
orl
add
cmp
mov
lds
inc
gs
xchg
push
scas
push
cmp
loope
leave
icebp
lods
into
mov
flds
or
jmp
faddl
cmp
jnp
inc
lods
jno
add
cmp
xor
pop
sub
das
sbb
aaa
jmp
fsubr
cmc
hlt
push
pop
mov
and
cmc
jns
hlt
dec
jbe
icebp
popl
imul
test
fsub
push
add
jmp
popl
mov
pop
sbb
xchg
push
arpl
lahf
push
push
lret
out
fwait
lret
and
lock
mov
inc
imul
xchg
xor
dec
mov
popa
pop
fldcw
adc
adc
int
test
xor
les
shrl
outsl
adcl
les
pop
pop
filds
popa
stos
mov
sbb
fldcw
daa
mov
cwtl
push
sub
jp
inc
lds
add
stos
add
cmpsl
adc
cs
lods
roll
inc
xchg
lods
daa
lods
push
jl
sahf
inc
jge
xchg
cli
jmp
inc
shll
loope
cmp
pop
fucomip
jae
pusha
icebp
mov
sahf
mov
add
cmpl
xor
das
hlt
fld
scas
mov
xor
push
mov
mov
pop
jecxz
js
push
push
imul
stos
pop
pushf
ss
xor
jecxz
jne
fcomps
inc
je
orl
sahf
pop
loopne
pop
xchg
inc
dec
sub
cli
in
adc
enter
iret
std
mov
andl
fistps
xor
push
inc
dec
add
loope
xchg
pusha
testb
les
mov
hlt
jne
push
pushf
and
pop
push
mov
int
push
xchg
push
loope
jle
ret
add
and
nop
pop
dec
inc
popa
push
sbb
cltd
mov
mov
dec
loopnew,pn
mov
cmc
repz
or
in
mov
addr16
jne
lret
pushf
dec
mov
call
bound
cmp
fistpll
lret
xor
lcall
shll
cmpsb
xchg
aad
ficoml
ja
bound
mov
inc
xor
sub
aas
adc
jno
jbe
mov
xchg
jnp
mov
and
mov
fildll
dec
call
cmp
sub
sbb
and
dec
andl
cmp
lret
and
imul
or
fldt
inc
mov
popa
and
shrl
ret
inc
jne
and
mov
mov
in
dec
dec
mov
dec
sbb
dec
jne
mov
pop
push
adc
int
inc
and
cmp
aam
xchg
pushf
cs
jge
or
sub
cmp
pop
icebp
adc
pop
sbb
dec
aas
test
adc
movsb
cmp
jb
jne
or
mov
test
leave
push
sub
add
and
ror
sbb
ljmp
roll
ljmp
cmp
fbstp
cs
dec
mov
ja
test
into
xor
loopne,pt
ja
aad
jnp
xchg
enter
add
sbb
fistpll
dec
pop
fdivrl
and
and
aas
cmp
inc
stos
jne
adc
cmp
pop
mov
jne,pt
aam
xchg
loope
mov
fstl
push
jo
aam
lds
int
fcmovnu
sub
adc
fimuls
cmp
mov
repz
lea
mov
das
push
fisttpl
daa
sub
inc
mov
push
into
and
ret
lahf
fdivrl
jmp
push
repz
int
out
mov
push
leave
inc
jne
pop
rorl
pop
xor
lods
xchg
cmp
mov
push
or
pop
or
loope
jmp
dec
mov
loopne
xchg
pop
sar
push
xchg
pop
movsl
sub
mov
int
xchg
stos
lret
xchg
add
pop
fxch
pop
pop
mov
scas
rcrb
mov
push
inc
das
jp
sub
add
sub
in
dec
mov
jnp
fdivrl
dec
inc
test
test
mov
pop
dec
dec
add
cs
sbb
push
std
dec
mov
inc
fsub
mov
jmp
leave
sahf
ljmp
cmp
sbb
lahf
pushf
sbb
inc
mov
jl
jb
inc
push
or
cli
stc
rorb
mov
gs
inc
icebp
movb
outsb
js
dec
std
inc
and
and
repz
cmc
dec
dec
or
call
sbb
ffree
sbb
or
or
je
out
aaa
cli
addr16
ljmp
test
inc
push
cld
and
xor
fisttpll
and
jbe
scas
inc
xchg
pusha
inc
in
inc
rclb
push
cmc
stc
int
fildl
aam
ret
adc
imul
les
push
jne
arpl
xor
in
inc
xor
lds
xchg
jne
movsb
xchg
jg
or
inc
hlt
out
in
cmpl
and
imul
cmpsb
imul
jg
ret
xor
clc
adc
outsl
scas
dec
jns
and
jns
adc
mov
mov
jne,pn
or
mov
jne
ss
xlat
jne
sar
sbb
ljmp
rorb
cld
push
pushf
arpl
hlt
or
mov
icebp
push
and
or
pushl
or
sbb
inc
cltd
enter
jne
xchg
sahf
mov
adc
mov
inc
scas
rcrl
adc
mov
stos
int3
dec
jmp
leave
jg
push
jne
aam
test
das
push
shr
cmp
push
dec
mov
loopne
push
outsl
mov
mov
fisubrs
mov
mov
nop
outsl
push
cs
decl
js
inc
cmp
jnp
cwtl
and
jno
das
aad
shll
cs
test
sahf
push
insl
sbb
jmp
xor
cltd
ret
inc
sub
cmp
or
adc
fmuls
scas
cli
jp
in
scas
jns
adc
leave
xchg
mov
push
adc
add
stos
push
jmp
pop
mov
xchg
inc
mov
jge
jl
jg
jle
inc
dec
in
adc
mov
scas
xor
adcl
push
xor
movsl
pcmpeqw
stos
dec
cmp
cmpsb
mov
pop
das
sbb
pop
ja
push
sub
stos
sbb
dec
stos
jbe
lods
rorl
rcll
push
cmc
outsl
or
or
xor
pop
pop
int
dec
jbe
adc
dec
push
shll
and
test
or
and
int
lret
ret
xor
xchg
fbld
adc
inc
pop
sub
add
xor
scas
or
and
mov
mov
push
mov
nop
mov
fldl
fldt
pop
dec
stos
dec
mov
jmp
push
and
out
dec
push
inc
addr16
pop
test
pop
xor
pop
imul
stos
pop
movsl
aaa
pop
addr16
in
dec
and
aam
mov
fdivrs
sbb
mov
out
xchg
das
shll
stos
lds
call
repz
inc
jl
aas
dec
push
cli
adcb
insb
push
inc
call
push
push
inc
imul
and
sub
xor
pop
cmp
jne
push
shr
adc
mov
stc
das
mov
leave
sub
out
jo
leave
and
cld
into
shrb
das
test
push
and
xor
das
call
arpl
inc
outsl
ficoml
roll
mov
jb
enter
aad
mov
xor
sub
pop
xchg
test
lahf
xlat
in
test
aad
xor
jne
test
push
push
adc
sub
andl
pop
inc
leave
xchg
icebp
cmp
lret
insl
mov
xchg
inc
push
or
stc
andl
insb
lret
or
xchg
xor
popf
sub
adc
sub
push
add
push
call
xor
adc
pushf
adc
cltd
imull
pop
cwtl
daa
aam
add
jg
shrl
lret
shlb
or
shrl
out
sub
sub
cmp
dec
mov
enter
add
aad
lods
aam
scas
sub
stos
xor
pop
push
aaa
cs
or
pusha
or
insb
pop
dec
test
xchg
adc
mov
pop
scas
xchg
and
fstps
xchg
sub
loop
aad
movsb
popa
add
stos
andl
mov
ret
jne
jecxz
mov
sub
adc
movsl
stos
les
jg
shll
sub
aad
mov
xchg
fdivrl
pop
mov
ds
jb
arpl
xor
jne
sarl
mov
and
adc
sbb
inc
movb
fnstsw
jno,pn
stc
fsubrs
xchg
addb
cmp
filds
out
ja
jmp
int
add
cli
aas
pop
rcrl
in
leave
sbb
mov
and
lret
pop
adc
dec
fsts
ror
dec
cmc
js
test
pop
inc
js
gs
in
sub
pop
int
ret
imul
lret
enter
add
jne
les
dec
lret
sub
xchg
in
repnz
mov
xor
and
loopne
rcrb
aas
or
dec
mov
lcall
lahf
movsb
inc
test
mov
packssdw
fistps
ss
clc
cmp
std
iret
jo
test
and
scas
mov
sbb
jns
out
dec
xchg
dec
inc
insb
push
dec
aad
popa
mov
pop
mov
fsubl
fs
cmp
inc
inc
jnp
dec
or
jnp
add
mov
dec
dec
mov
sbbb
test
aas
jo
pop
js
inc
inc
cmp
and
mov
cs
lret
jne
pop
loopne
xlat
shlb
data16
popa
lea
out
leave
and
fisttps
loop
adc
and
cld
inc
and
fs
test
repz
shrb
lods
stos
jecxz
push
ffreep
pop
add
mov
pusha
or
int3
push
cmc
add
and
lds
pop
inc
clc
pop
es
cltd
gs
int
lods
popf
je
pop
jns
and
cmp
int3
ret
jmp
gs
lds
adc
cmp
cmpsb
add
adc
popf
in
or
or
adc
push
mov
inc
mov
or
xorb
test
inc
and
roll
dec
xor
addb
sub
xlat
xor
mov
adc
add
jbe
ds
lahf
pop
dec
test
push
arpl
push
inc
gs
shlb
push
lea
rorb
cmp
addl
mov
push
popf
and
add
daa
push
and
and
pop
inc
faddl
jb
dec
lds
pop
shrb
in
jl
mov
xor
or
xor
std
mov
add
mov
test
adc
jo
jge
dec
cmp
push
icebp
into
push
pop
inc
or
xor
pop
movsl
mov
push
stos
stos
rcrb
out
pop
cmp
inc
xor
xor
inc
adc
sbb
jo
mov
and
test
dec
jbe
ja
lods
ljmp
and
int3
cmc
dec
and
inc
push
bound
enter
mov
pushf
iret
mov
and
aaa
in
movsb
stos
leave
add
pop
jp
and
inc
push
xchg
adc
cmovae
addb
shlb
lret
fs
nop
dec
inc
pop
cmc
lahf
or
adc
stc
cltd
dec
mov
xor
insl
jbe
and
inc
mov
jne
lods
ret
cmc
or
mov
enter
nop
cmpsb
push
adc
dec
mov
es
dec
cmp
les
push
notb
aam
dec
stos
pop
hlt
dec
pop
mov
dec
scas
loope
sub
push
or
mov
imul
into
lret
call
mov
and
pop
fdivr
mov
dec
fsubl
cli
rol
sub
out
xchg
dec
add
sub
inc
daa
jle
mov
mov
inc
loope
mov
cmp
pushf
xor
fwait
inc
insl
shrb
pop
dec
xchg
adc
push
mov
mov
sbb
lds
stos
jne
aam
dec
cmp
movsl
outsl
sar
push
fwait
int
and
dec
or
cmp
cmc
iret
ja
dec
dec
xor
jbe
push
inc
shlb
push
popa
rorb
xchg
sbb
fmull
rolb
jp
orb
fucomi
cmpsl
or
daa
ds
loope
dec
es
jge
hlt
insb
int
in
cmp
adc
adc
out
es
xchg
ds
or
lahf
add
test
mov
push
mov
inc
lds
cmpsb
xchg
and
arpl
inc
scas
int3
and
outsb
cmp
pop
gs
sahf
adc
in
pop
imul
dec
das
pop
fdivp
insb
fwait
jmp
hlt
sbb
add
es
scas
inc
addb
pop
add
int
iret
mov
dec
adc
lcall
sbb
xchg
xchg
shl
cmc
icebp
insl
lods
sub
test
xor
and
popa
inc
and
loope
dec
xor
pop
pusha
jmp
or
cmc
sbb
jge
fs
ret
enter
mov
and
dec
add
nop
inc
and
mov
cmp
cmc
aaa
or
mov
int
adc
test
cmp
fstl
mov
lods
mov
pop
test
cmp
mov
xchg
popa
fdivrl
outsb
xchg
xlat
sbbl
cmc
mov
mov
or
or
cmc
pop
push
add
lret
lahf
xchg
adc
mov
dec
and
scas
ja
and
cli
cli
sbb
and
add
inc
inc
rclb
dec
ret
mov
dec
add
add
dec
push
mov
xor
std
out
stc
enter
addb
repz
stos
daa
push
and
xchg
mov
icebp
std
pop
inc
insl
fdivr
shr
sub
jl
enter
test
inc
addb
pop
inc
int
lret
pop
xchg
dec
fldt
fucomi
or
movsl
or
push
push
jne
push
or
push
sub
and
adc
push
or
test
hlt
xchg
dec
add
push
stos
push
mov
push
dec
jnp
leave
cmp
xorb
ds
repnz
mov
sbb
mov
and
rorb
js
and
sub
call
mov
or
and
icebp
gs
test
inc
cmp
and
clc
add
and
and
test
inc
and
sbb
jb
lds
cwtl
push
ds
imul
shll
int
xor
push
and
xor
ja
xor
dec
fnsave
jg
lea
cmp
dec
sbb
sub
or
xchg
pop
lds
dec
inc
push
push
xorl
jecxz
stos
stc
hlt
addr16
lds
stos
movsb
xorl
shlb
sub
scas
es
imul
jne
scas
fld
xorl
loop
cltd
call
ds
lods
rcrb
sahf
pop
out
sbb
mov
sub
scas
leave
sbb
cld
int
mov
pop
mov
aas
push
jecxz
cmp
sti
mov
push
je
fs
dec
pop
pop
jl
lret
out
sti
out
jo
scas
nop
sub
hlt
in
or
jmp
xchg
mov
dec
mov
ffreep
mov
pop
dec
test
inc
adc
add
sub
test
inc
sbb
add
xor
and
or
push
push
mov
clc
push
or
cmp
popa
leave
add
repnz
ffree
test
sub
orl
fldl
cwtl
pusha
test
in
pop
xor
push
or
and
mov
mov
cwtl
enter
pop
add
arpl
mov
test
and
lods
addl
push
fldl
mov
sub
sub
xlat
inc
mov
mov
sahf
orb
xchg
xlat
dec
dec
test
test
mov
cmp
xchg
les
aaa
sub
cmp
sub
xor
push
fldpi
jo
sub
pop
jge
add
call
inc
daa
push
dec
jbe
xchg
fs
and
int3
dec
jnp
xor
xor
test
jo
sub
pushf
fstpt
dec
xor
orl
jp
out
ja
iretw
inc
test
ret
pop
ret
inc
mov
loope
xlat
cli
jne
push
ret
sub
aam
in
scas
clc
sub
cs
imul
dec
push
xchg
pop
and
stos
sub
mov
mov
sub
adc
scas
dec
outsb
mov
mov
and
shrl
adc
cmp
mov
lret
rorl
xlat
decb
lret
pop
addl
mov
adc
or
push
pop
les
jae
aas
inc
stos
loope
jns
ss
iret
or
and
xor
ljmp
call
pop
add
es
sub
ja
xchg
sub
scas
scas
js
add
mov
dec
aad
pop
dec
out
dec
or
sub
dec
inc
inc
or
add
pusha
out
mov
popf
pop
shlb
push
pop
js
dec
fst
dec
orl
std
leavew
loopne
xchg
xorl
call
pop
int3
dec
xor
adc
dec
adc
insb
and
jle
xor
andb
pop
test
es
adcl
jo
shrl
sub
xchg
xor
inc
out
daa
xor
int
mov
mov
dec
rolb
jge
sub
cmp
lahf
cld
or
cltd
orl
push
roll
lods
sub
enter
gs
pop
add
cmpsb
jp
pop
jne
mov
comiss
mov
push
sarl
test
hlt
jb
cld
or
dec
in
popf
xor
push
xor
mov
hlt
repz
pop
sbb
inc
es
adc
cmp
inc
jl
aas
sub
and
add
dec
jnp
mov
mov
in
rolb
and
mov
ljmp
jge
sub
cs
inc
push
add
push
outsb
xchg
and
jl
sub
fdivr
push
ds
fwait
pop
mov
jne
add
pop
ja
dec
sub
sub
flds
xorl
bnd
pushf
fldcw
popf
push
pop
or
adc
roll
and
inc
push
sbb
or
xor
lds
cmpl
pop
fwait
cmp
xchg
lds
out
addb
sbb
mov
lods
das
push
cmp
aaa
dec
push
push
fisttpll
and
sub
or
ss
mov
hlt
jns
jbe
sub
sub
dec
aas
shlb
jne
sbb
and
jbe
in
push
std
data16
icebp
cmp
test
sub
xchg
test
xchg
testl
cmp
jge
test
movsl
loope
push
cmc
cmp
adc
outsb
and
rolb
dec
mov
lret
jb
xchg
mov
ficompl
dec
insb
xchg
jp
shll
movsb
xor
mov
cs
fiadds
pusha
pushf
daa
loope
lock
pop
cmp
stos
or
sbb
and
test
and
movsl
ret
jl
movsb
ret
nop
xchg
stos
mov
pop
jle
jl
cwtl
in
dec
and
lea
and
mov
ja
jl
sbb
sbb
andb
dec
jno
and
sub
adc
lods
pop
pop
test
pop
out
sti
or
loop
loope
repnz
sarl
mov
pop
xlat
call
cmpsl
adc
ljmp
mov
inc
repnz
gs
pop
int3
and
bound
mov
jle
lea
lock
test
push
add
out
pushf
pusha
cmpl
idiv
or
int3
dec
adcl
push
cmp
pushf
mov
pop
mov
fsubr
push
mov
ljmp
sbb
scas
pop
cmpsl
aad
rorl
out
dec
fdivl
push
sub
mov
inc
xchg
pushf
push
cmc
or
les
in
jmp
xchg
lret
sub
pop
test
in
ljmp
shlb
jp
jle
lret
lret
adc
xlat
jnp
movsl
movsl
jge
das
test
mov
and
inc
pop
or
mov
and
and
cmpsl
mov
in
and
adc
imul
jg
inc
xchg
jne
shll
mov
decb
test
xchg
int
rol
push
push
and
xlat
xchg
mov
dec
xor
adc
outsl
mov
and
cmp
mov
lods
mov
lea
sub
cmc
mov
daa
dec
cmp
stos
nop
pop
ds
sub
int
dec
push
adc
sbb
add
iret
sti
fcmovu
arpl
sahf
adc
pop
aaa
imul
out
dec
cmp
mov
shrb
push
mov
jg
xchg
js
mov
lds
or
ret
pop
pop
push
movsl
stc
jb
or
test
mov
xchg
mov
and
hlt
mov
pop
iret
dec
leave
mov
dec
test
mov
or
adc
test
fistps
xchg
pushf
adc
dec
mov
mov
icebp
int3
jmp
mulb
repnz
sti
rcll
sbb
lea
test
xchg
jo
mov
mov
and
inc
scas
or
test
cmp
sarb
arpl
sbb
pop
or
fiadds
fnstenv
inc
sarb
jg
lods
shlb
leave
imul
outsb
xor
mov
xor
lds
popa
daa
inc
rcll
lds
psubw
nop
leave
fiaddl
cmp
cmp
adcl
inc
sub
xor
lds
and
xor
lds
mov
pop
mov
xchg
dec
pop
or
sbb
jno
mov
pop
push
int
xchg
inc
std
xchg
push
mov
lds
mov
les
sbb
int
lds
inc
add
mov
imul
fdivs
popf
xor
adc
xor
bound
push
mov
xor
and
cmp
mov
pop
loopne
out
sub
push
mov
mov
xor
push
sub
adcl
data16
test
xchg
out
mov
jae
int
arpl
subl
sub
pop
stc
stos
lds
xlat
or
sub
push
addl
test
xchg
add
loope
jl
filds
clc
xor
and
nop
loope
movsl
mov
imul
sarl
push
ja
ds
and
fstpl
movsl
leave
movsb
mov
in
in
dec
pop
xchg
in
sub
inc
je
and
mov
xchg
xchg
add
rorb
lods
jb
lods
xchg
sbb
push
dec
jbe
lea
cmp
and
add
flds
shll
lret
mov
das
mov
mov
jo
and
fdivrl
cmc
gs
jne
xchg
in
lods
sub
test
cld
and
lds
outsb
lds
xchg
jmp
mov
push
sbb
aaa
inc
fmuls
arpl
xchg
sub
sub
inc
roll
jb
int3
enter
jbe
xchg
daa
dec
mov
mov
es
popa
inc
push
sub
adc
cld
adc
and
inc
mov
nop
out
negl
inc
jp
cltd
int3
inc
jge
sbb
icebp
movsb
scas
cltd
inc
arpl
fadds
adc
gs
push
test
fisttpll
push
push
bnd
das
mov
mov
cmp
je
arpl
dec
mov
call
xchg
dec
or
out
jg
pop
cli
push
dec
cltd
mov
stos
mov
or
push
mov
dec
jne
hlt
or
add
pop
shl
inc
pushf
les
cmovo
ret
adc
xchg
lods
dec
pusha
movsl
and
orl
sub
xchg
cmp
push
xor
popa
loop
adc
rolb
adc
and
xor
pop
lret
jle
mov
loope
inc
lret
cmc
scas
mov
andl
scas
sub
sarl
movsl
popa
scas
dec
or
popf
lock
loopne
jne
inc
sub
faddl
mov
mov
lds
das
lds
pop
scas
jns
fnstcw
sarl
mov
xlat
dec
cs
pop
dec
and
out
scas
mov
lahf
test
push
sub
xchg
cmc
mov
hlt
adc
fdiv
pop
icebp
mov
rorl
lods
test
pop
adc
and
jle
jmp
movq
arpl
and
add
call
inc
dec
pop
push
ret
int
pusha
push
inc
in
mov
dec
mov
lea
lods
push
and
pop
push
das
test
xor
mov
sub
jne
jb
cltd
pop
fnstenv
test
pop
popa
inc
push
dec
daa
pop
lds
test
jl
std
xor
mov
mov
negl
outsb
scas
xchg
enter
cmc
jmp
inc
mov
js
jl
shlb
pop
pop
dec
int3
es
in
lds
dec
ja
add
or
mov
cmp
fwait
push
enter
cmp
mov
lcall
jg
mov
and
test
daa
stc
mov
dec
or
pop
daa
and
into
jne,pn
ret
test
aas
mov
sbb
icebp
push
jne
mov
lea
imul
mov
daa
enter
stos
fimull
mov
lock
pushf
subl
inc
mov
adc
inc
subl
and
mov
mov
lcall
lds
dec
dec
xor
in
sti
sub
cmc
fistpl
jne
sub
fsubrl
mov
dec
cmp
inc
add
mov
or
cmovg
mov
shrb
sbb
mov
ret
movsb
ja
cmp
and
and
pop
jp
inc
cmp
xchg
push
adc
add
cld
xchg
mov
push
pop
jp
inc
jns
rclb
push
hlt
push
xchg
pusha
or
sqrtps
pop
cmpsb
out
sub
fcoml
lods
push
leave
inc
stos
cwtl
sub
adc
loop
fucom
add
xchg
and
loope
cli
cmp
stos
fsubl
shl
cld
pop
enter
dec
aas
dec
subb
jp
iret
pusha
push
les
dec
outsl
lods
in
push
xchg
popf
mov
pop
lret
repz
lret
dec
cmc
hlt
pop
lret
lods
jb
push
and
push
mov
hlt
iret
fstpl
in
clc
lahf
sub
cmp
adc
imul
rolb
rcrb
pop
pushfw
dec
aaa
inc
scas
std
enter
add
or
dec
inc
dec
pop
xchg
dec
shll
jg
xchg
dec
xor
in
add
mov
cmp
sbb
sti
adc
aad
fsubr
pop
addr16
adc
call
cmp
loope
or
fldl
jno
jae
inc
jne
rorl
stos
push
ds
sbb
movsb
xchg
stos
push
push
mov
sarb
lahf
xchg
lea
es
or
lret
or
rcrl
nop
jmp
sbb
andb
sbb
subb
pusha
inc
jmp
pop
rol
loopne
outsl
mov
call
and
loope
movsl
loop
icebp
jle
inc
inc
test
stos
adc
std
lea
mov
xchg
pop
mov
sub
iret
push
mov
add
inc
push
jmp
mov
xchg
out
nop
xlat
es
push
data16
sub
das
xchg
or
notb
es
lods
adc
push
hlt
in
movsl
mov
push
dec
scas
mov
fs
mov
inc
or
call
sub
test
jo
pop
std
fmul
and
pop
outsl
xchg
ljmp
jne
xor
enter
mov
lea
xchg
push
push
aas
jbe
xor
mov
jno
add
push
push
jge
int
cmc
lret
mov
ret
jnp
rcll
aas
aaa
add
jg
arpl
jo
imul
mov
je
sbb
scas
xchg
push
inc
pop
push
out
or
arpl
inc
aad
push
ss
cld
dec
xchg
mov
mov
ds
and
inc
loope
shrl
sub
fisttpll
pop
rcrl
mov
test
jbe
gs
leave
mov
lret
ds
imul
orb
push
sub
shrb
cld
ret
add
pop
ret
inc
movb
fldz
pop
roll
dec
dec
or
inc
add
jae
sbb
fstps
cmp
in
dec
and
int
cmp
shl
stos
fsubrs
adc
ret
jne
xor
sarl
cmpb
xchg
movsl
mov
iret
jnp
ror
ja
xchg
jae
mov
lock
jne
cwtl
push
jno
cmp
cmc
shr
xchg
in
dec
stc
sti
cmp
xor
inc
adc
mov
mov
mov
inc
cmp
repnz
or
in
push
out
and
dec
pop
add
sbb
roll
je
andb
pusha
pop
cs
stos
loope
test
xlat
push
mov
push
mov
mov
aad
faddl
inc
and
movsl
push
test
mov
pop
mov
add
add
mov
gs
andb
mov
mov
xor
sarl
bound
popf
xor
pop
add
dec
mov
sub
jl
xor
mov
cmpsl
xchg
dec
repnz
aaa
adc
enter
adc
sbb
cmc
fmuls
shrl
movsl
imul
adc
push
mov
stos
fs
ror
out
aam
jae
sub
inc
popf
lds
and
jno
xor
inc
add
pop
inc
sbb
out
lds
mov
sbb
sbb
lods
dec
aaa
in
pop
aas
aad
push
sub
in
sarb
fnstenv
or
testl
inc
or
add
cmp
dec
lds
hlt
ss
mov
dec
out
je
pop
dec
jne
fstl
and
fnstcw
jecxz
pushf
lods
lahf
lds
leave
xor
lods
lcall
in
arpl
std
inc
insb
cld
inc
les
dec
aad
test
inc
push
push
std
xor
add
lds
mov
add
push
pop
lahf
and
ret
test
nop
outsl
sub
sbb
das
and
aad
inc
mov
cmc
insb
xor
lds
cltd
lcall
lds
push
cmp
daa
leave
and
xchg
and
das
cmp
push
push
fstps
and
cmp
dec
pop
rorl
aad
cmp
js
jg
lds
push
daa
cmp
outsb
lds
out
jb
mov
stc
call
insb
dec
dec
cld
inc
das
out
test
insl
lds
cmp
lcall
mov
lea
nop
lds
xchg
test
inc
in
adc
pop
out
push
cmp
cmp
dec
adc
pop
dec
ficoms
dec
and
dec
push
js
xchg
and
fistpl
sbb
or
mov
incb
xor
imul
icebp
sub
add
inc
and
sub
subb
cmc
pusha
fstpt
ret
arpl
mov
or
gs
xchg
jecxz
inc
loope
xor
lds
lea
inc
jae
cs
xchg
nop
cmp
xchg
leave
inc
sbbl
xor
cmp
addr16
lds
gs
or
xchg
popf
push
or
and
pop
sbb
push
out
pushf
daa
cmpsl
ljmp
repz
into
aaa
pop
aad
fbld
xchg
orb
or
mov
shlb
lods
in
clc
jae
adc
popf
jge
and
cmp
push
mov
jle
ss
dec
jno
xor
loopne
inc
add
xor
jnp,pt
mov
lods
mov
ja
addr16
dec
mov
fwait
cmp
pop
push
inc
cmpl
cmp
jl
sbb
cmc
add
hlt
or
xor
jbe
jbe
sahf
ja
mov
and
dec
add
mov
test
cwtl
rcrl
scas
push
push
lds
xorl
or
jnp
shll
out
jo
cs
mov
cli
push
cli
mov
jp
leave
daa
in
scas
mov
movsl
addr16
aas
jb
scas
insb
pop
pop
scas
pushl
addr16
dec
in
lret
xor
out
xor
aas
pusha
mov
add
and
inc
mov
aad
jecxz
fcoms
push
lret
ja
icebp
and
in
fwait
pop
cltd
cld
in
mov
add
jp
push
add
sarl
sarb
xor
sbbl
fldl
loope
jo
jb
ret
jle
push
mov
dec
pop
push
jmp
andb
shl
xor
inc
and
adc
arpl
sarl
push
dec
stc
adc
jno
mov
lds
inc
push
lea
inc
adc
or
sub
push
push
dec
push
mov
push
test
pushf
outsl
add
ret
into
lds
xor
adc
gs
or
pop
dec
ret
lahf
nop
dec
adcb
sub
inc
dec
das
inc
push
push
fucom
popf
push
xor
mov
imul
dec
xor
xchg
outsl
xchg
call
testl
call
push
in
lds
fwait
xchg
xchg
addr16
bound
mov
lds
jecxz
xor
or
cmp
cmp
xchg
mov
lds
dec
fwait
xchg
push
addr16
pop
lds
sub
xor
dec
lds
inc
bound
ja
xchg
sub
es
jge
jne
cmp
lock
leave
test
lock
mov
es
imul
sbb
dec
daa
mov
adc
xchg
repz
push
adc
decb
pop
xchg
push
imul
mov
jo
inc
shll
xor
jmp
xchg
xchg
andb
mov
into
aas
dec
test
repz
mov
dec
in
inc
sub
insl
mov
xchg
mov
dec
sub
pop
push
mov
rcr
lods
cmp
or
int
mov
rcrl
daa
sub
xor
lea
xchg
jg
mov
lods
xor
and
push
leave
mov
sbbl
dec
dec
fdivs
mov
rclb
xchg
mov
inc
xor
cmp
mov
cltd
cltd
add
push
adcl
popf
dec
iret
mull
xlat
or
inc
mov
dec
pushf
jmp
int3
clc
fcompp
enter
loope
mov
pop
mov
and
out
loope
cwtl
or
dec
adc
loope
scas
bound
add
icebp
lahf
or
and
dec
sub
aad
pop
icebp
push
push
sahf
lahf
test
stos
aaa
mov
or
sbb
xchg
ss
scas
aam
std
dec
or
inc
inc
pop
std
push
lea
cs
vmread
xchg
je
test
jne
push
cmc
cmpsl
or
adc
adc
xor
jne
push
es
and
enter
or
fcomip
js
xlat
cmp
shrl
sbb
xor
pop
rclb
xchg
pop
es
mov
jns
fisubrl
push
and
cs
and
test
pop
pop
sbb
insl
inc
js
cmc
pushf
lods
fwait
cmp
aad
inc
imul
xor
pop
stc
mov
in
sub
inc
xchg
lea
in
pop
or
push
nop
pop
lret
cmc
shr
and
aas
je
inc
jbe
fdivl
addb
inc
fnstsw
pop
cmp
ret
pop
fsubl
call
daa
call
sub
test
in
movsb
cmp
sahf
test
andl
sbb
aaa
loop
shl
cs
loope
adc
push
xor
daa
pusha
enter
scas
pop
mov
xchg
push
roll
fisttpl
int3
aad
push
dec
xchg
mov
dec
push
mov
loopne
adcl
rolb
or
test
mov
aad
cmpsl
pop
sbbb
ret
adc
jae
cmp
inc
cltd
test
or
xor
lds
pushf
je
test
sub
pop
xor
xlat
aam
gs
mov
xor
dec
inc
pop
jns
in
push
iret
add
sub
ljmp
or
dec
pusha
push
popa
cmp
leave
jle
aaa
enter
xor
lds
popa
sahf
fmul
lds
pusha
popa
push
dec
jl
mov
xor
je
and
push
outsl
push
dec
mov
pusha
fldenv
mov
inc
mov
lods
sub
shlb
push
pop
lds
xor
iret
jle
push
pop
mov
xor
test
jp
scas
pop
sarl
data16
push
xchg
inc
scas
mov
inc
repnz
sub
popf
shl
loope
ja
xor
jmp
stos
pop
inc
jns
scas
push
inc
aas
push
vpackuswb
inc
cmp
vsubps
clc
js
lret
addr16
leave
fimull
add
cmc
mov
pop
pop
xor
scas
flds
mov
movsl
lea
out
and
jns
and
cmp
push
xor
inc
and
shll
fwait
divl
insl
lds
mov
pop
ffree
lods
popf
test
push
mov
rcll
mov
mov
inc
ret
cmc
rorb
cmp
lods
pop
daa
popf
dec
lds
jge
lods
inc
pop
mov
mov
mov
and
sub
addr16
sub
lds
leave
mov
dec
cmp
lock
repnz
push
std
push
aas
jmp
push
leave
fwait
or
jmp
and
mov
jns
xor
jb
sub
iret
stc
xor
xlat
imul
rolb
les
mov
push
ljmp
outsb
pop
mov
or
sub
sbb
fwait
sarb
inc
ljmp
adc
jb
in
dec
cli
in
int3
lahf
inc
ret
xchg
lods
andb
jg
lods
xchg
rol
stos
sub
cmp
jne
mov
roll
xchg
push
in
ja,pt
out
popa
pop
gs
or
push
popf
cmp
sbb
jnp
test
scas
stos
push
push
into
cmp
sub
cmp
mov
jnp
lret
fistl
jno
pop
adc
inc
dec
fcmovnu
cld
andb
inc
dec
jg
mov
push
jle
gs
jno
xchg
xchg
enter
jmp
jle
jmp
aam
sarb
and
rcrl
add
loop
sbb
ja
inc
stc
dec
jne
mov
dec
jge
sub
xchg
aad
or
fnstsw
test
shll
in
dec
pop
cmp
xchg
ror
push
mov
cmp
popa
sar
push
test
addr16
push
push
test
add
insl
test
sbb
jge
aam
push
stos
ja
inc
push
dec
mov
mov
out
mov
pop
aaa
dec
jns
shlb
or
cmp
lods
xlat
xchg
push
xor
sub
push
sarb
mov
jp
cmc
shll
hlt
inc
or
add
mov
xor
lods
int3
mov
rorl
mov
or
or
xchg
mov
xchg
popf
imul
sti
sarb
fbld
mov
push
sbb
sub
imul
sbb
dec
jp
add
xchg
or
and
sti
imul
out
push
add
stos
aaa
pushf
shl
pop
stos
popf
mov
mov
mov
mov
cmpsb
dec
jno
xor
stos
pushf
xor
fnstenv
xor
pop
pop
add
ds
push
in
shr
hlt
adc
es
cmp
out
mov
sub
add
xor
push
js
lret
ret
inc
xor
dec
dec
test
jns
xchg
inc
or
pop
shll
add
ret
add
scas
enter
pop
push
inc
stos
aam
mov
add
push
test
enter
and
dec
sub
leave
aam
sbb
dec
dec
cmp
imul
xor
and
pop
dec
psraw
test
dec
dec
mov
and
sub
aad
sub
xor
push
roll
je
movsl
mov
shlb
in
sets
dec
sub
iret
and
push
scas
repz
subl
iret
xchg
jne
enter
jmp
pop
adc
lret
add
ror
and
arpl
pop
or
ja
les
out
and
pop
jle
arpl
movsl
sub
hlt
arpl
loope
pop
subb
xchg
aaa
jle,pt
lcall
pop
mov
arpl
std
inc
hlt
lock
stc
test
xor
clc
sub
inc
cmp
mov
push
scas
imul
idivl
daa
dec
cli
bound
ffreep
or
jle
mov
dec
or
mov
iret
jmp
jle
int
add
roll
out
or
sbb
fld
hlt
adc
mov
inc
cmp
mov
leave
mov
push
lret
sbb
inc
adc
adcl
mov
lds
jmp
add
jmp
push
xchg
mov
sbb
and
sbbl
fnstenv
mov
cmp
cmp
cmpsl
lds
dec
and
pop
mov
dec
mov
inc
inc
adc
int
dec
test
jb
inc
xchg
lods
inc
inc
ss
rcll
test
pop
sub
mov
ja
stc
call
repz
and
add
lret
stos
inc
pop
lds
xor
addr16
sub
sahf
data16
in
or
pop
dec
int3
nop
dec
mov
js
cmc
sarb
jmp
dec
fs
cmp
push
gs
and
cmp
inc
mov
leave
std
push
lods
mov
int
xchg
pop
lods
push
or
adc
push
mov
fsubs
movsl
mov
lds
int
xchg
outsl
shll
jp
mov
popf
mov
gs
insb
adc
repnz
sbb
add
lock
pop
fldenv
imul
leave
sahf
pop
pop
xchg
cmpsb
or
mov
xchg
adc
add
gs
aaa
adc
and
es
mull
loopne
mov
fs
xor
adc
dec
jp
int
mov
lods
adc
xor
int3
fnstenv
js
adc
shl
gs
jo
add
ss
shr
inc
sbb
insl
int
and
es
data16
add
adc
insl
imul
or
test
pop
orl
cmp
cmp
xchg
jo
sbb
sarl
push
fstpt
dec
divl
shll
push
dec
lock
xor
imull
sub
mov
xchg
sub
jns
xchg
adc
cwtl
cmp
shll
pop
lds
inc
bound
cmc
push
cmp
dec
push
push
icebp
ret
mov
push
lahf
and
cmp
popa
repz
and
andb
xor
mov
xchg
dec
cmp
push
imul
test
xor
jae
rcrl
sti
mov
sub
subl
mov
xor
push
cmpsl
push
inc
rclb
push
leave
push
xchg
dec
arpl
subl
dec
rol
xchg
jmp
push
dec
xchg
pop
lods
or
push
push
cltd
ficoml
and
pop
or
int
jl
pop
test
ljmp
mov
adc
or
ret
inc
cmp
lea
xchg
lret
enter
pop
xor
lea
inc
mov
mov
adc
xchg
pusha
punpcklbw
xor
jge
push
inc
popf
dec
loopne
mov
xchg
inc
xchg
xchg
push
loop
lds
add
shll
jmp
xchg
add
in
inc
mov
dec
push
daa
mov
inc
je
lea
popa
sub
nop
or
out
enter
dec
dec
ljmp
pop
push
les
push
adc
insl
lds
cmp
imul
cmp
mov
xor
fnsave
stc
lds
dec
test
inc
fnstcw
cmp
push
xor
fcmovb
repnz
inc
fadds
aad
mov
loopne
out
or
inc
adc
pop
dec
lds
adc
dec
or
sub
nop
popf
cmp
pop
adc
xor
and
inc
add
insb
test
xor
cmpl
add
jp
aas
iret
mov
popa
fcoml
into
mov
pop
adc
dec
cmpl
fdivrs
push
inc
inc
xchg
aad
insl
push
sbbb
add
mull
imul
push
shlb
scas
add
jecxz
arpl
movsl
pop
adc
add
push
cmp
xchg
leave
int3
or
mov
sub
test
hlt
sbb
in
xor
sbb
or
shlb
pushf
test
imul
inc
inc
xor
pop
fs
dec
pop
aaa
incb
cmpsb
xor
push
lock
arpl
xchg
and
push
jmp
fwait
xor
outsl
subl
shlb
mov
push
and
jne
mov
pop
or
xor
adc
dec
cmp
rol
rcrb
cmp
test
cmp
pop
inc
adc
mov
xchg
push
fcoms
inc
cmp
aaa
and
mov
fiaddl
int3
xor
xchg
gs
jno
into
movsl
push
push
and
inc
mov
je,pn
xor
adc
cmp
inc
mov
jecxz
xchg
push
xor
pop
flds
push
cmp
daa
les
or
mov
scas
xchg
xor
pop
pop
sub
ja
icebp
repz
inc
xor
jne
insl
xor
cmpsl
xlat
ror
sub
xchg
cmp
int
divl
xchg
test
push
lahf
push
movsb
outsb
ljmp
je
repnz
and
movb
dec
sub
stc
add
loope
shlb
inc
add
inc
cld
lock
sub
xchg
popa
aas
dec
scas
cmpl
test
addb
data16
or
adc
pop
xor
cmpsb
mov
add
in
popf
pop
insl
mov
lahf
push
cmc
cmp
shll
adc
and
inc
sub
fsubl
xchg
int3
or
jge
jge
ret
enter
xchg
leave
inc
pop
jo
rolb
js
ret
dec
sti
arpl
addl
ret
ljmp
cmpsl
jns
popf
jbe
sub
or
xchg
adc
adc
or
test
loopne
dec
jae
jno
stos
movb
dec
pushf
xor
mov
ds
xlat
push
notl
cmp
mov
shlb
stos
es
jg
xor
adc
or
adc
call
addr16
int
jge
mov
push
fisubrs
jbe
fisubrl
sub
aam
push
call
repz
xor
or
and
push
and
sub
jb
xchg
lret
mov
pop
int3
cli
or
in
test
and
stos
inc
fsubl
inc
dec
mov
mov
add
loopne
cwtl
jl
test
push
push
inc
mov
cmp
shll
dec
dec
add
iret
lret
loope
mov
fbld
popa
pop
daa
sub
and
cli
cmp
add
inc
dec
mov
cmp
inc
imul
jno
aam
mov
out
mov
popa
fsub
xor
test
addr16
sbbl
cs
xchg
inc
mov
xchg
push
cs
add
repz
std
fsubrp
and
or
stc
shlb
pop
addl
dec
adc
mov
decb
or
enter
mov
cltd
les
jne
mov
dec
xchg
xor
int
aaa
dec
jne
push
cwtl
pop
ds
adcl
fstpt
adc
mov
mov
loope
out
jae
dec
mov
jecxz
ret
xchg
lods
cmp
cmc
loopne
aaa
sub
ds
mov
cmp
sbb
mov
and
mov
leave
mov
cmp
pop
aaa
fcomps
cmpsb
xor
xchg
mov
or
cmp
mov
push
mov
and
mov
cmc
adc
jge
add
pop
mov
ljmp
push
mov
cmpl
cltd
dec
fstl
stos
pop
das
cmp
and
and
jbe
rorb
cmp
pop
das
mov
scas
hlt
cltd
pop
flds
inc
mov
adc
dec
addr16
mov
push
xlat
scas
pop
hlt
data16
cmpsb
jecxz
loopne
hlt
lock
sbb
es
jne
sbb
shrl
popf
int3
jb
cwtl
mul
jge
mov
push
or
lods
mov
rolb
movsb
inc
mov
cmp
and
add
jp
lea
scas
pop
xchg
leave
clc
leave
add
or
adc
int
fsubrl
push
std
pop
xchg
push
mov
fsubrs
inc
dec
ret
outsl
mov
mov
inc
jmp
ljmp
cmp
jno
jl
idivl
sahf
mov
and
xchg
hlt
push
or
pop
push
mov
xlat
rolb
in
out
jae
or
aam
mov
roll
ds
mov
jae
loop
data16
arpl
and
inc
shlb
aas
mulb
out
mov
gs
mov
orb
nop
add
add
or
pop
shll
loopne
negl
stos
arpl
roll
hlt
je
dec
fadds
arpl
loop
pop
push
cmp
orl
jge
stos
and
aaa
in
mov
pop
in
stos
inc
add
dec
cmpsb
xor
enter
stos
daa
and
aaa
pop
or
adc
pop
dec
push
mov
sahf
clc
adcl
ljmp
leave
pop
pop
push
jge
stos
pusha
out
cmpsl
dec
mov
cmp
out
push
mov
andb
jl
data16
lret
test
xlat
or
sbb
pushf
mov
xchg
push
das
inc
jne
sub
imul
and
and
shll
lea
cmp
and
das
mov
pusha
xor
dec
xor
and
gs
or
popf
or
xchg
or
test
xor
dec
push
lret
jne
push
mov
mov
inc
pop
jns
and
nop
ret
dec
and
test
dec
mov
jns
inc
sub
arpl
xchg
fnstenv
mov
mov
cmpb
and
mov
aad
mov
xchg
inc
xor
xchg
int3
fwait
xor
aam
out
cli
movsl
jne
sbb
fstl
add
adc
push
shr
push
insb
lahf
and
xlat
loope
fldenv
dec
inc
mov
lret
ja
call
jns
lods
fs
clc
andb
sarl
dec
test
xor
jg
pop
lds
in
faddl
test
mov
inc
push
stos
cmp
and
mov
clc
push
push
adcb
xor
jnp
mov
cmp
mov
inc
rclb
jae
pop
sbb
inc
xchg
xchg
repz
xchg
push
dec
in
adc
loop
sbb
daa
push
push
add
mov
in
int3
cmpsl
push
sub
mov
lods
lods
repnz
add
cwtl
xchg
add
dec
and
ljmp
jge
jl
leave
fiadds
test
shr
xor
sub
cmp
jno
mov
pop
or
int
fidivrl
mov
jns
push
dec
push
test
push
es
ds
pop
and
dec
hlt
cmp
es
mov
sub
inc
cmp
in
fsts
adcl
push
insb
add
cmp
hlt
jo
mov
inc
rolb
pop
mov
mov
inc
cld
fwait
es
insl
or
cmp
xchg
out
adc
sbb
dec
cli
mov
nop
cld
jnp
ret
sarb
xchg
dec
dec
pop
mov
mov
in
aam
std
std
mov
jne,pt
cmpsb
adc
cmpsl
mov
roll
dec
shlb
bound
xchg
arpl
mov
dec
rcrl
subb
dec
cmpb
cmp
add
jmp
push
hlt
cmc
mov
mov
movsb
jmp
mov
fldcw
idivl
dec
aaa
stos
push
pop
inc
dec
ds
xchg
jg
cmp
fs
jmp
mov
push
cs
pop
aas
ja
daa
inc
cmp
pop
rcrl
dec
iret
cld
sub
xor
inc
fsub
pop
das
dec
inc
inc
add
or
int
push
xchg
cmpsl
push
xchg
rcll
nop
int
ds
dec
daa
mov
inc
out
mov
xor
cmp
jb
and
push
stos
lds
adc
jae,pn
or
fnstcw
sbb
sbb
jg
in
push
inc
inc
mov
and
mov
outsl
rcl
and
sbb
xor
iret
mov
cmpl
sahf
out
shl
jg
inc
add
cmpsb
aas
jmp
mov
test
cmpl
outsb
in
inc
leave
call
shrb
out
lcall
jle
sub
nop
xchg
cmp
pop
ds
mov
sbb
aad
push
mov
in
mov
sub
lods
scas
mov
scas
mov
and
fistps
aas
push
les
dec
icebp
pusha
mov
mov
adc
and
ljmp
test
and
rorl
jnp
aam
scas
dec
add
dec
add
ret
int
and
popa
sbbb
or
mov
and
insb
dec
das
sub
inc
sbb
adc
add
xchg
out
xchg
pop
pop
loope
add
mull
dec
cld
dec
sbb
test
pop
jl
ljmp
cs
fisubs
pop
push
and
mov
add
testb
inc
jge
inc
xor
leave
pushf
js
pop
push
das
out
es
xor
push
dec
or
xchg
mov
dec
add
mov
or
and
stos
or
cltd
adc
jae
test
xor
sub
ret
inc
mov
cli
aad
sahf
jp
inc
arpl
push
xor
dec
lcall
inc
aas
lods
test
cmp
ret
decb
jg
movsb
mov
data16
hlt
cs
push
cmp
int
movsb
jmp
jp
push
movsb
pop
hlt
shl
fwait
mov
out
jecxz
add
jae
lods
int
mov
xor
sarl
scas
inc
cli
sbbb
ljmp
frstor
jno
into
stos
dec
mov
jbe
je
repnz
out
nop
call
or
inc
dec
and
mov
pop
aas
xlat
xlat
mov
mov
pop
adc
jecxz
gs
movb
dec
orl
and
inc
andl
lock
cmpl
adc
pop
out
jle
pushf
fisubs
jp
and
inc
repnz
mov
pusha
fisubrs
mov
add
lock
pop
cmc
pop
les
mov
jp
and
cmp
test
push
xchg
lar
xlat
mov
shrl
sbb
add
negl
dec
push
sub
dec
push
sub
insl
cld
or
push
jne
sarb
fcmovnb
and
inc
dec
aam
or
js
in
imul
aam
add
orb
shlb
push
xchg
dec
jle
addb
push
xchg
xchg
xor
fcomip
mov
xor
push
mov
out
fsubr
push
int
roll
sarl
in
sbb
jecxz
mov
fisttpll
arpl
push
push
sub
fstl
ret
lea
xor
push
imul
jne
out
push
dec
fnstsw
push
mov
mov
and
incb
in
lret
jp
jg
lea
inc
test
push
inc
xchg
loopne
fdivrl
loopne
push
cmp
pop
push
xchg
mov
fs
or
push
sbb
das
arpl
push
testl
dec
jmp
push
in
cmp
cmp
xor
out
cs
add
mov
loope
push
jmp
xor
xor
test
stos
jns
out
rcr
inc
push
lds
scas
push
jne
int3
cli
xor
dec
sbb
les
sub
insl
jge
push
hlt
call
test
or
push
lahf
flds
jmp
ja
push
xlat
cmp
movb
out
xchg
and
dec
cmpb
rorb
loopne
push
cmpb
stc
add
enter
mov
leave
add
jge
cld
cmp
xor
mov
dec
lret
insl
lcall
xlat
inc
inc
stos
mov
add
ret
dec
jne
enter
xor
movsl
jmp
pushf
mov
xchg
aas
test
divb
shlb
and
ja
mov
mov
xor
fstl
dec
xor
decb
shl
or
mov
fcmovnu
rclb
xchg
mov
data16
fimull
xor
pop
push
int
dec
aaa
cmc
xor
cs
xlat
cli
push
mov
mov
xchg
outsl
test
sub
pop
xchg
call
dec
sub
lret
movsb
pusha
or
add
subb
es
nop
adc
bound
sub
scas
dec
rolb
pop
sub
ret
outsb
push
push
xlat
lds
mov
xchg
inc
push
ljmp
mov
subb
cmp
test
aas
imul
push
filds
and
push
pusha
xchg
xor
mov
stc
push
xor
in
pop
fwait
cwtl
stos
sub
fsubrp
leave
xor
xchg
stos
leave
mov
xorl
fsubs
fmuls
cmc
xor
int
inc
push
aad
mov
mov
mov
xchg
cmp
add
shr
cwtl
movsb
xchg
pop
hlt
leave
scas
xchg
mov
mov
push
arpl
inc
dec
inc
jp
sub
lret
int3
imul
bound
and
and
xor
movsb
jl
jge
clc
cmpsl
pop
daa
test
daa
mov
add
and
mov
xor
add
sbb
cmpsb
ja
and
pop
out
xor
fsubl
dec
pop
xchg
stos
inc
int3
cmpsb
shll
inc
sub
std
aam
jg
rcr
ds
cmc
in
fdiv
movsb
jns
outsl
and
cmp
inc
cmp
lds
jae
push
adc
xor
leave
push
or
xchg
sub
rorb
or
and
fwait
xor
cmc
stos
enter
push
addl
out
dec
das
and
pop
and
lods
adc
jmp
and
pop
mov
mull
aas
out
add
push
lds
stos
sub
sub
rcrl
pop
insb
cmpsb
pop
push
or
sbbl
pop
movsl
nop
in
cmc
lods
pop
inc
inc
je
ljmp
je
dec
fists
lds
cmp
lds
ja
aas
les
sub
dec
loopw
dec
inc
lret
jne
adc
enter
mov
cmc
in
mov
stos
rcll
test
and
pusha
lret
fsubrs
xlat
xchg
inc
movsl
dec
scas
loopne
pushf
popf
cmp
mov
clc
psrlw
repnz
jne
pop
arpl
roll
call
test
mov
push
popf
cld
dec
scas
rolb
mov
dec
pop
inc
out
dec
iret
test
pop
dec
sbb
jo
adc
shrl
outsb
iret
xor
jecxz
jge
cmp
imull
add
dec
fnsave
mov
adc
and
and
and
movsl
cmpsb
dec
scas
xor
fscale
push
add
or
stos
cmp
iret
mov
movsl
mov
movsb
push
pop
daa
mov
inc
add
jns
dec
inc
popa
dec
push
push
jno
push
add
inc
rorl
add
lret
outsl
sarb
lods
push
jne
lds
push
sbb
ljmp
dec
add
xchg
sbb
lea
lds
imul
daa
mov
lcall
push
arpl
sbb
or
pop
dec
ret
sbb
mov
movb
cmpb
mov
lea
addr16
fldl
loope
and
fimull
xchg
loop
push
aaa
popa
push
and
fcoml
gs
sbb
lahf
pop
dec
inc
popf
xor
push
dec
leave
xchg
mov
shll
or
jle
xchg
cs
sub
add
cmc
fsubrs
stc
dec
inc
mov
xor
out
dec
popf
aad
stos
xchg
jg
out
popf
cwtl
xchg
fnstsw
mov
sbb
inc
xchg
xchg
adc
xor
enter
fcoml
inc
and
lods
cmc
sub
leave
addr16
and
push
fwait
mov
jecxz
cli
int
cmp
or
repnz
jmp
lret
jns
add
xchg
enter
lds
enter
pusha
ja
add
mov
cmc
mov
loopne
insl
sbb
cmp
mov
leave
cmpsl
dec
iret
mov
or
fsubrl
scas
pop
or
jp
xchg
mov
jo
and
in
and
je
jb
sub
leave
add
push
push
xor
mov
je
xlat
jmp
test
ret
mov
sub
gs
fsubrl
push
inc
mov
jge
dec
fstl
lret
daa
fadd
mov
imul
pop
pop
inc
dec
xchg
jg
push
sbb
mov
fcmovnbe
divl
pop
aam
fnstcw
inc
imul
mov
add
pop
loop
out
pop
cmpsl
ja
inc
pusha
js
mov
sarb
mov
insb
push
push
cltd
aas
xchg
mov
xchg
ja
xor
jp
dec
movsb
lahf
jg
mov
stos
cltd
inc
out
mov
pop
pusha
push
xchg
xchg
pop
xchg
jge
mov
mov
inc
mov
and
cmpsl
lahf
mov
cmp
dec
into
pop
sub
int3
ret
push
add
mov
xchg
add
jnp
fstl
mov
ret
movb
mov
or
movsb
jl
pop
pushf
aad
dec
mov
lret
xorb
inc
imul
xchg
out
mov
cs
or
xchg
adc
ds
out
lret
push
fistpll
neg
inc
xchg
jbe
inc
mov
xor
xchg
add
xor
fcmovne
xchg
test
jge
enter
cli
in
mov
xor
adc
rolb
arpl
movsb
pushf
rol
dec
or
cwtl
into
inc
xchg
in
mov
jnp
pop
sub
adc
push
mov
xchg
add
rclb
xchg
lea
frndint
mov
insl
cmp
out
std
dec
push
fmull
push
push
add
xor
pop
enter
mov
pushf
push
pop
loope
xor
xchg
lods
dec
mov
jmp
inc
xchg
sarb
aas
hlt
mov
repz
in
imul
jns
andl
fadds
sbb
shr
imul
push
adc
push
hlt
pop
cmc
sarl
incb
or
xor
mov
mov
pushf
nop
jbe
stos
aam
scas
fwait
les
sbb
aam
addl
push
jge
jge
adc
pop
mov
shlb
in
push
dec
mov
movsl
add
sahf
lds
dec
dec
cmc
test
cmpsb
sarb
dec
int3
ljmp
add
addl
sub
fadds
lds
rclb
mov
cmovs
dec
sbb
lret
jne
cli
push
lret
push
inc
popa
or
jno
mov
fucompp
filds
ja
negl
pushf
sbb
pop
popf
pop
in
cmp
dec
mov
mov
dec
mov
push
mov
pop
cwtl
fiaddl
es
or
pop
or
ds
push
xor
dec
ds
test
sub
xlat
mov
ss
pop
mov
scas
or
inc
mov
sub
scas
lods
das
dec
inc
jno
and
hlt
push
dec
lods
sarb
dec
or
outsl
int3
sub
cmpsb
inc
pop
push
push
add
push
add
or
push
icebp
cmpsb
test
push
pusha
mov
negl
lcall
cmpsl
add
xor
cmpl
fmulp
pop
inc
pop
lret
mov
cmp
insl
test
sub
int3
hlt
sti
cwtl
insb
scas
mov
pop
xchg
xchg
mov
pop
js
push
or
jb
push
cs
cwtl
push
test
push
movsb
xchg
jne
mov
jl
pop
mull
lret
pop
test
insl
pop
push
and
push
jl
insl
xor
mov
dec
sbb
bound
adc
movd
adc
mov
test
dec
push
or
mov
jo
or
shlb
inc
rolb
mov
dec
int
inc
add
addr16
cmp
rolb
add
pop
inc
hlt
sub
pop
inc
jp
es
bnd
xchg
ret
js
insb
or
lods
out
inc
cli
rol
and
sub
popa
and
pop
mov
inc
and
dec
cltd
jno
icebp
addr16
mov
outsb
jp
or
enter
add
lahf
inc
push
vsqrtpd
xor
add
pop
gs
fsubl
cmp
push
or
fwait
lcall
push
xlat
sub
add
push
jl
in
adc
mov
cld
pop
int
mov
cltd
clc
sarl
stos
das
push
pop
mov
mov
stos
ja
cld
lahf
cltd
xchg
sub
and
jb
addb
pop
inc
aam
jecxz
sub
cmp
fmull
mov
adc
jmp
cmc
je
and
xchg
add
cmp
jp
into
jecxz
sub
test
test
dec
lock
inc
lods
cmp
cmpsl
dec
cltd
lods
mov
cs
jbe
daa
adcb
inc
inc
cmpsb
jno
jle
push
xor
inc
mov
idivl
ljmp
shlb
cmpsl
insl
mov
or
lahf
cmp
inc
xchg
fwait
xor
les
cld
and
mov
or
adc
test
lahf
cld
scas
jle
cmpsl
add
rcrl
rclb
das
push
inc
and
fst
hlt
imul
and
sbb
sbb
fcmovu
jp
sub
cmpsl
sbb
shlb
das
and
dec
lcall
popf
xchg
enter
mov
lahf
rcll
mov
int3
sub
xchg
arpl
pop
mov
je
xchg
int3
and
outsl
test
ret
in
loopne
icebp
inc
mov
dec
jg
jno
ljmp
cltd
fdivl
lock
test
pop
cmp
push
xchg
push
mov
rcr
int
je
cmpsl
xchg
gs
stos
in
mov
mov
scas
mov
cs
xchg
xchg
inc
sub
xchg
in
and
and
jo
inc
inc
aam
add
push
cmp
xchg
jne
lods
or
popa
mov
addr16
jae
jns
shlb
shlb
outsb
or
test
shlb
xor
shrb
mov
push
jle
loop
ret
and
and
movsl
scas
push
fisubs
and
icebp
rol
insb
gs
clc
outsl
adc
push
popf
jmp
or
sti
ret
ret
call
pushf
imul
cwtl
addr16
gs
sub
inc
jne
pop
push
fisttps
mov
push
inc
and
push
jl
dec
cmp
adc
inc
adcb
add
xchg
leave
mov
push
xchg
imul
dec
mov
iret
incb
leave
loopne
lahf
inc
lcall
sahf
leave
cltd
das
xchg
rcrb
cltd
jne
icebp
inc
or
add
mov
outsb
and
cmp
add
nop
lret
jne
sub
addl
insl
rcrb
loop
cmp
or
cmp
push
and
push
cmp
sub
aam
lret
xchg
push
and
insl
xchg
js
sub
gs
ja
hlt
jp
sarl
lds
imul
cld
sub
jmp
call
fwait
movsl
cltd
push
es
sub
lret
imulb
scas
loopne
and
jge
and
gs
aas
mov
mov
mov
test
fisubrs
adc
xchg
fs
inc
fcmovnu
and
jmp
div
lods
cmpsb
inc
xchg
xor
dec
mov
adc
ljmp
out
das
mov
xchg
ret
jl
stos
mov
push
cmpsb
adc
pop
push
sub
or
stos
stos
xor
pop
les
aaa
aam
lds
andl
daa
push
xor
out
pop
jmp
and
adc
inc
jbe
insb
adc
pushf
in
dec
cmc
daa
stos
cmp
mov
lock
pop
je
cmp
push
mov
push
aaa
leave
dec
test
add
or
push
cltd
leave
insb
mov
pop
aam
and
jns
jb
scas
add
jne
imul
push
movsl
xor
pushf
cli
int
push
test
push
lods
jmp
lret
inc
sub
adc
xor
das
iret
mov
sbb
lret
push
int3
stos
sbb
popf
mov
pop
movsb
lea
cmp
andl
push
jge
sbb
inc
xor
in
addr16
push
bnd
sub
push
add
cwtl
mov
hlt
test
dec
or
dec
jecxz
mov
pop
call
xchg
fimuls
inc
out
adc
jns
jp,pt
adcb
int
jo
scas
ja
sbb
fcompl
push
push
cmp
push
inc
out
or
dec
stos
loop
jle
xor
jae
repnz
cmp
and
and
pop
push
jo
mov
and
xor
iret
in
shlb
adc
lret
sbb
fadds
xor
loopne
aad
cld
jo
rcl
dec
adc
push
add
and
lea
pop
and
sbb
fdivr
cmp
add
inc
lods
loop
rclb
sbb
xchg
push
leave
push
insl
xchg
test
adc
dec
mov
push
int3
pop
rcrl
rcrb
fldenv
xchg
add
jns
sbb
xor
into
lret
xor
sub
out
push
bound
rcl
pop
dec
push
cmpsl
fwait
das
iret
lret
int
dec
xor
add
inc
sbb
pop
inc
pop
nop
aas
fimuls
mov
hlt
lfs
call
aam
dec
dec
loope
push
cmp
int3
clc
inc
mov
sarb
bound
fidivs
addb
jns
add
jo
xchg
movsb
je
push
and
or
adc
xor
mov
cmpsl
gs
pusha
fcomps
dec
push
push
sbbl
shlb
mov
mov
daa
pop
mov
mov
add
pop
sarl
iret
push
cmp
rcrb
sbb
mov
jmp
and
jecxz
jb
jl,pn
addl
sbb
pop
adc
pop
sbb
adc
jbe
lcall
jge
fnstcw
dec
or
xchg
popf
test
mov
sub
enter
in
push
mov
int
sub
push
fs
hlt
mov
pusha
jne
stos
and
dec
and
aad
insl
lds
loope
in
pop
es
inc
daa
push
ret
inc
sub
push
mov
test
ret
andl
fsubrs
sar
sarl
insb
out
push
lcall
inc
jle
cmp
jle
mov
mov
jbe
inc
sub
mov
nop
mov
loope
and
cmp
xor
jbe
les
sub
sarl
popa
sub
gs
hlt
loopne
sti
or
shrb
xchg
push
in
je
sub
push
cmp
dec
loopne
inc
sbb
xor
mov
in
push
orl
mov
and
dec
jmp
xor
subl
xchg
adc
sbb
xorl
or
dec
xchg
shrb
and
cmc
cli
loope
xor
lods
in
pop
fidivs
xor
scas
movsl
fwait
rorb
push
popa
sbb
dec
js
jge
xlat
jge
pop
int
std
sub
push
movsl
dec
and
add
ret
jnp
gs
and
mov
ret
mov
daa
in
pop
bnd
pop
cli
int
inc
ficomps
cwtl
push
aam
mov
mov
inc
xorl
stos
xor
push
add
sub
addr16
int
dec
and
push
inc
push
cld
enter
jbe
fcoml
cmp
push
inc
push
xchg
rcll
test
orb
mov
jle
pop
andl
and
rcr
sub
add
fadds
dec
ret
test
mov
les
leave
add
pop
inc
inc
push
push
les
mov
xchg
enter
mov
sub
pop
cmpsl
es
daa
shrl
test
mov
xchg
in
mov
jge
test
xchg
cmc
call
test
cmpsl
dec
inc
inc
push
orb
xor
popa
and
addb
jmp
inc
jle
jbe
cmc
cmc
loopne
cmpsl
inc
adc
adc
cmc
xchg
and
loope
inc
cmp
aaa
cmpsb
std
or
inc
and
and
and
les
out
adc
jmp
shrl
fsubrs
lods
stos
pop
test
adc
pusha
xorl
rolb
daa
lods
hlt
pop
jb
mov
sub
packsswb
mov
roll
in
cmc
dec
adc
aaa
cmpsl
push
xchg
es
imul
mov
lds
arpl
in
call
sbb
fisubrs
aaa
ljmp
sbb
inc
add
cmp
xlat
mov
and
inc
or
hlt
lds
add
out
movsb
test
fldt
into
jns
jge
cmp
xchg
leave
pop
movsb
cmp
mov
or
das
idivb
pop
mov
jp
mov
imul
imull
adc
fsubr
inc
imul
fdivrl
mov
adc
dec
mov
cli
fdiv
cld
push
inc
dec
lods
int3
hlt
xchg
add
lods
dec
push
lahf
dec
in
nop
jmp
mov
push
push
loopne
lahf
cmp
sub
fs
jne
push
in
stos
aaa
push
dec
dec
pop
sbb
pop
sarl
lds
stos
stc
dec
int
dec
aaa
sbb
insl
push
aad
test
enter
xor
push
gs
dec
sbbl
popf
or
xchg
push
repnz
xchg
dec
mov
push
push
cmp
jp
mov
xchg
xor
sub
std
loop
hlt
jno
lea
pop
shr
or
enter
xchg
mov
adc
ljmp
sub
fbstp
jne
lea
push
mov
jae
fwait
addl
lret
dec
cmp
xchg
lret
jne
lds
fcmovnbe
sti
hlt
outsl
pop
sub
adc
sbb
dec
adc
mov
xor
rclb
pcmpeqw
sub
hlt
nop
jne
getsec
ret
fdiv
movsb
sub
cmp
inc
xlat
imul
ss
rcrb
out
and
aam
imul
xor
cmp
push
inc
pop
fstl
fs
adc
dec
adc
or
faddl
ds
add
and
jne
loope
fsub
fiadds
iret
ret
dec
adc
pop
add
dec
and
je
xchg
enter
mov
dec
mov
fidivs
cmc
xor
xor
and
jnp
mov
sahf
pop
fwait
xchg
icebp
jle
cmp
ss
ja,pt
cmpl
nop
jge
pop
and
cmp
mov
ss
push
dec
push
push
xor
jp
cmp
mov
pop
cmp
aam
ds
inc
mov
ds
mov
pop
push
int
xchg
aad
xchg
pop
pop
movsl
mov
inc
test
ds
mov
jno
inc
dec
ja
dec
adc
jl
arpl
pusha
mov
rclb
daa
fisttpll
dec
add
jbe
sub
pop
fisubrs
cmp
cmc
mov
clc
pop
popa
aas
daa
dec
sub
xor
punpckhdq
in
xchg
inc
push
jne
mov
mov
push
rol
stos
test
lods
ds
adc
inc
mov
shll
lea
bound
or
mov
pop
rcll
xchg
xlat
sarl
loop
pop
dec
dec
rol
test
fldcw
shll
mov
sub
leave
stos
in
scas
in
arpl
inc
stos
or
dec
pop
inc
dec
stos
cwtl
mov
cli
dec
mov
enter
pop
hlt
out
sbb
hlt
sub
dec
dec
fistps
push
push
dec
sti
xchg
jl
xchg
sbb
or
vcvttps2dq
test
jmp
adc
push
and
rorl
dec
les
mov
dec
out
inc
push
inc
jae
ret
sarl
push
dec
imul
xor
push
pop
xor
sti
cmc
mov
jmp
jmp
shrl
scas
cs
popf
stos
jge
aas
leave
jge
xchg
inc
mov
lret
inc
inc
dec
dec
stos
pop
xchg
sbb
sub
sub
call
inc
aas
icebp
or
push
dec
movb
jge
mov
aaa
mov
xchg
mov
test
shll
jo
jge
jnp
pusha
aas
push
add
sahf
xchg
test
aas
mov
jg
inc
cmpsl
stos
dec
add
mov
andl
ljmp
movb
push
scas
pop
repz
xchg
jo
cmpsb
pop
pop
jbe
test
decl
add
lds
push
hlt
lret
sbb
out
inc
ss
sbb
add
call
cmpsb
sahf
adc
add
pop
fdivrs
bnd
inc
push
sub
aam
mov
add
jnp
sub
xchg
jae
adc
dec
mov
std
ret
xor
stos
pop
sub
insl
mov
xor
daa
aaa
dec
inc
bnd
push
in
test
fisubrl
jg
jle
and
and
shrb
rorb
inc
fsubrl
movsb
fsubr
fidivs
ss
loope
lds
adc
shl
outsb
and
insb
in
inc
mov
mov
xlat
mov
xor
jae
dec
dec
dec
rolb
xor
flds
or
inc
and
and
mov
shl
nop
cmc
loop
shrb
mov
xchg
imul
stos
push
add
movsb
jnp
outsl
leave
xchg
test
mov
shll
cli
mov
xor
test
lcall
xchg
fldenv
inc
sub
xorb
push
push
inc
test
mov
ret
mov
push
jle
dec
dec
xor
sub
rol
xchg
push
jmp
dec
mov
push
mov
pop
movsb
lea
and
sbb
clc
dec
xchg
adc
push
dec
jbe
enter
daa
daa
hlt
cs
hlt
push
enter
hlt
mov
roll
leave
xchg
dec
shlb
fnstenv
mov
pop
dec
in
out
mov
dec
daa
ljmp
lods
or
xlat
and
jmp
dec
xor
hlt
push
mov
js
dec
bound
pop
cmpsb
sbb
pop
repz
sub
xchg
rcrl
sbbl
xlat
movsb
jns
push
push
push
xor
dec
mov
mov
inc
fwait
push
pop
mov
insl
and
mov
xor
lods
aaa
pusha
pop
mov
mov
cmp
add
imul
mov
fcomi
cli
ss
or
push
arpl
fcom
mov
xor
aaa
dec
adc
pop
jne
push
lea
sbb
insl
ja
aas
and
popf
adc
adc
inc
fdivrl
into
and
inc
ja
jge
jge
xlat
aas
rcl
jl
inc
test
inc
popf
es
sub
push
cltd
inc
jge
out
sub
mov
insl
cmc
fiaddl
xchg
jns
faddp
jmp
jo
sub
and
hlt
sbb
jae
out
pop
out
and
inc
ficoms
jle
pop
notb
shl
jmp
adc
stc
and
mov
xor
jp
inc
inc
mov
aam
rorl
push
cmp
xor
lret
mov
push
xor
dec
andb
fdivl
fadd
mov
xchg
movsb
add
cmp
std
adc
mov
adc
cmp
mov
ss
jle
jg
mov
mov
push
jp
jnp
or
xor
jae
divb
or
hlt
push
ds
dec
pusha
push
pop
inc
push
and
sbb
dec
and
push
sub
scas
in
repz
cmp
mov
and
dec
lahf
and
cmp
and
jge
or
test
sbb
into
sbb
ja
daa
lahf
mov
mov
test
dec
mov
jne
enter
adc
adcl
leave
ja
push
hlt
xor
int
inc
pop
mov
subl
push
mov
gs
mov
mov
mov
lret
mov
stos
leave
or
orl
leave
jae
jb
and
push
and
pop
aas
insb
out
xlat
es
jns
loope
arpl
mov
lods
movb
adc
int
xchg
adc
daa
shlb
dec
xchg
stos
push
fildll
aas
pop
or
push
cmpsb
lret
out
pushf
pop
mov
orl
jg
mov
mov
and
inc
or
sti
sbb
xlat
ffree
push
mov
jb
rcrl
mov
popf
lds
mov
and
pop
fldt
adc
jno
cmp
scas
lods
xchg
fstl
mov
xchg
cmp
adc
icebp
rcrb
sbb
cli
nop
fldl
inc
and
add
adc
arpl
arpl
inc
or
mov
leave
adc
and
nop
add
mov
or
cmp
xchg
mov
push
dec
or
sahf
jo
rclb
mov
adc
les
mov
lods
cwtl
push
mov
icebp
fcoml
dec
sbb
stos
pop
mov
lds
push
out
dec
inc
or
ret
in
xchg
sbb
stos
xor
mov
shll
je
mov
xor
loope
imul
pop
js
mov
jne
test
jno
test
test
cmp
in
scas
pop
or
sub
xlat
inc
incl
jp
mov
repnz
cmpsl
mul
subb
jp
ret
gs
ret
fiadds
sarb
dec
std
je
inc
mov
imul
dec
cmp
pop
jl
pop
cmp
fdiv
sbb
add
jae
or
outsb
repz
es
dec
bound
and
jmp
idivb
and
popf
jae
jge
sbbb
sub
jle
sbb
aas
fnstsw
inc
xor
aaa
iret
pop
xchg
daa
sbb
jne
xor
dec
xchg
inc
pushl
mov
dec
sarl
xchg
in
jo
cmpsb
call
fnstsw
and
arpl
adc
mov
pusha
push
cmp
dec
mov
cld
pop
push
pop
dec
dec
pop
sar
cmp
and
aad
mov
mov
sbbl
cmc
cmp
fs
imul
or
fists
cltd
jl
sub
push
mov
in
lds
push
movsl
dec
jno
aas
mov
jns
gs
push
and
xchg
mov
jno
pop
pop
jmp
mov
and
add
ss
push
ljmp
ljmp
andl
movsb
jmp
test
pcmpeqw
sub
fwait
mov
and
sbb
sub
gs
sar
call
sub
popf
pop
push
je
mov
jge
inc
mov
std
bound
lods
fcoms
rcl
fstpt
sarl
outsl
pusha
xor
scas
mov
fs
xchg
or
mov
xchg
xor
inc
dec
test
mov
lea
adc
hlt
xor
or
jecxz
mov
sbb
repz
fwait
push
fldl
das
sub
hlt
mov
or
call
incl
ja
cs
add
lds
mov
jge
movsb
jg
sub
arpl
lock
sbb
shll
jno
cmp
ret
sbb
cmp
daa
xor
jo
and
and
xchg
mov
cmp
lret
push
sub
movsl
lods
test
jl
inc
test
cld
scas
repnz
roll
shl
movsb
push
jmp
and
push
dec
hlt
xor
xchg
fucom
cmp
jne
pop
test
ja
lret
subl
jnp
pop
mov
add
jg
in
imul
stos
mov
jg
mov
test
bound
outsb
sub
xor
out
popa
jno
sub
inc
nop
int3
push
xor
out
xchg
sub
and
jecxz
mov
push
push
lret
pop
das
inc
inc
push
push
arpl
out
cs
dec
not
inc
cmp
dec
arpl
jge
sub
or
sub
aas
psubsb
dec
xlat
jge
or
push
sub
aaa
jnp
cmpb
add
lret
push
shrl
nop
jle
hlt
int
cmc
jae
mov
xor
cmc
mov
jno
test
push
push
ds
roll
jle
shr
jge
les
push
sbb
test
cmp
jb
inc
jmp
jle
push
xchg
dec
and
cs
dec
dec
aad
scas
push
dec
inc
psubq
mov
push
or
add
jge
pusha
dec
rorl
inc
mov
iret
sub
and
testb
inc
pop
xchg
pop
xchg
and
xorb
dec
push
lods
popf
dec
pop
lret
ret
jge
cs
inc
and
dec
outsl
add
ret
les
push
add
sbb
cmp
sbb
jp
arpl
xchg
fsubrs
in
jnp
jae
cmp
ds
addb
int
cmp
sti
mov
loope
fwait
cmp
mov
adc
jl
adc
xor
mov
add
pop
inc
ret
pop
or
sub
flds
dec
and
arpl
mov
push
cmpsb
js
and
test
xor
stos
lret
daa
stos
insl
adc
jmp
pop
push
sbb
data16
cli
enter
aaa
jge
cmpsl
jnp
cmp
xor
cmp
mov
and
xor
mov
pop
sub
sarb
jge
test
xor
add
cmp
shr
sbb
scas
jg
call
lds
sarl
idivb
stos
loope
les
cs
jb
push
std
out
jmp
or
ret
mov
ret
int
sbb
call
push
inc
stos
cmp
adc
dec
fstpl
push
or
push
gs
mov
xor
jg
xchg
loopne
xchg
pop
inc
arpl
dec
loop
inc
fsubl
cltd
mov
fiadds
std
xor
xchg
push
pop
mov
xchg
jns
or
adc
mov
push
fisttpll
movb
ror
adc
hlt
cmp
lret
lods
mov
ja
mov
leave
mov
call
filds
jp
add
es
mov
stos
jne
mov
adc
leave
adc
test
mov
enter
lret
sbb
enter
adc
jns
imul
xor
push
aam
cmpsl
and
jne
pop
mov
rep
sub
dec
push
push
dec
scas
sti
sub
mov
lcall
jmp
add
jno
cmc
xchg
scas
xchg
in
lds
push
lret
pop
xor
aam
push
cli
add
pop
xchg
ret
movsl
mov
test
movsl
push
in
and
add
mov
and
or
or
sbb
mov
pop
add
test
movsl
push
cmp
daa
fwait
movsb
out
pushf
sbb
cltd
out
out
test
mov
sub
stos
and
cmpsl
mov
pop
mov
shll
jg
les
cli
mov
arpl
ret
lods
cld
jo
sbb
adc
testb
inc
dec
incl
mov
ficomps
adc
xor
rcll
stc
push
xchg
dec
sahf
add
or
sbb
popf
push
ja
inc
xor
loopne
fistl
or
xchg
xchg
sarb
dec
mov
xchg
mov
or
leave
insl
xor
sub
inc
nop
shrb
stos
sbb
les
mov
sub
rol
add
into
rcr
push
sub
dec
shll
ret
enter
dec
mov
cmp
lods
and
aad
das
lahf
movsl
scas
push
aaa
ja
sarl
outsb
push
sub
jno
mov
dec
mov
sbb
cli
mov
les
ja
std
das
jns
iret
cmpl
push
mov
scas
sub
daa
push
enter
notl
in
cld
mov
push
sub
leave
das
data16
arpl
dec
adc
mov
and
cmpsb
stos
insl
xor
xchg
cmp
push
loope
setp
jno
xchg
hlt
jb
xchg
pop
prefetch
cmp
mov
push
stos
das
in
aad
mov
insl
test
dec
pop
inc
fs
jle
movsb
insl
xor
popf
and
ja
and
jns
mov
fstp
mov
das
mov
xchg
and
or
dec
stos
ret
cmp
mov
adc
scas
addr16
imul
aas
stos
mov
stos
xor
mov
jge
clc
xor
adc
dec
mov
dec
cmp
pop
and
mov
iret
cmpsl
gs
push
dec
leave
mov
mov
daa
and
pop
cli
push
xchg
shrb
sbb
pop
inc
dec
xchg
orb
arpl
test
in
scas
mov
cmp
inc
xchg
jo
nop
jns
shll
ja
mov
xlat
cmc
mov
icebp
cmc
jnp
jns
scas
leave
mov
xchg
jnp
xor
cmc
jns
cmpsl
mov
aad
dec
dec
shll
es
sarl
rorb
fs
mov
and
mov
inc
cmp
inc
add
adc
dec
sbbb
cmc
cmc
sti
jmp
lds
add
lret
loop
pop
and
xlat
push
test
push
lods
and
inc
test
rclb
decl
subl
mov
cmc
and
adc
and
lock
xchg
pop
cmc
xor
push
pop
test
ljmp
mov
icebp
mov
add
jne
inc
mov
ret
cmc
cli
mov
pop
hlt
dec
xchg
pop
sbbl
or
je
aad
shll
sbb
out
pop
inc
inc
and
push
insl
mov
inc
dec
scas
andb
repz
aam
fistl
add
jg
mov
sub
std
js
xor
inc
dec
add
sarl
or
mov
lahf
lea
dec
xchg
xor
push
add
xor
push
xchg
out
movsl
mov
shll
inc
xchg
cs
jne
std
xor
cmc
sub
aad
repnz
fldenv
leave
outsl
add
add
rolb
jae
pusha
ljmp
call
adc
ljmp
les
stos
int
jge
cs
push
xor
push
in
xchg
fldcw
cltd
sub
aaa
stos
sbb
lods
test
inc
or
xor
mov
cs
pop
sahf
fcmovbe
out
lock
jns
stc
jnp
out
jmp
mov
jbe
call
add
push
int
loope
pop
pop
mov
push
jl
outsl
ds
sbb
sub
jns
push
aaa
cmc
aaa
inc
sub
hlt
jecxz
jl
je
xchg
call
fbld
or
inc
fdivrl
add
aas
and
cmp
and
add
push
aad
insl
ja
loopne
and
mov
mov
push
xlat
mov
add
mov
adc
ror
subl
shrb
fsubs
das
xor
lds
xor
jle
mov
cmc
out
ds
popa
inc
jne
lret
sub
sub
addb
dec
mov
add
cmp
sahf
gs
cmc
dec
ret
mov
stos
add
ds
mov
dec
and
aam
jae
push
orl
lods
add
cwtl
mov
shlb
scas
and
mov
inc
dec
cmc
daa
push
sbb
dec
dec
fmull
repz
imul
fisubrs
and
push
fsubs
jno
jg
jne
sti
push
push
lock
add
hlt
sub
xor
push
push
xchg
hlt
sub
add
sub
push
stc
mov
movsb
cmc
out
int
push
lods
jg
pop
cmp
mov
xchg
orb
sbb
push
adc
sub
lds
add
add
hlt
cmp
syscall
cmp
mov
or
mov
cltd
xchg
cmpb
mov
fsubs
divl
fisttpl
shl
pop
mov
cmp
sbb
dec
inc
or
or
push
xor
push
push
mov
mov
mov
les
jle
and
roll
lret
cmp
jbe
inc
hlt
pop
xor
scas
push
or
jne
xor
hlt
lcall
test
sub
mov
push
cmpb
push
jnp
and
cmc
jle
or
jb
fisubs
pop
xchg
and
ret
cmp
popa
mov
test
and
lcall
add
sbbl
aas
mov
mov
dec
dec
mov
pop
xor
test
arpl
add
pop
push
push
rcrl
xor
gs
add
repnz
cmpsl
mov
hlt
movsb
cwtl
sbb
jg
or
cmp
pop
mov
lods
stc
sub
scas
pop
dec
xchg
and
jle
push
sarb
into
mov
lret
push
jge
movsb
jl
dec
movsl
xchg
sahf
addr16
clc
push
sti
rclb
mov
ljmp
and
fadds
mov
push
inc
lea
insb
sbb
jmp
leave
adcl
sbb
lds
pop
or
movsl
dec
lds
jbe
or
and
push
movb
shll
mov
sub
pop
hlt
es
shl
sbb
cli
add
fs
and
lods
cld
sbb
mov
pop
add
lcall
std
stc
dec
and
in
mov
lods
sub
xor
dec
push
sub
jo
test
or
stc
xchg
rolb
mov
mov
inc
push
hlt
or
ljmp
mov
xor
out
dec
pop
fistl
push
sub
push
sbbl
icebp
leave
pushf
inc
stos
and
ljmp
add
push
mov
test
add
inc
sub
aad
ja
call
adcl
movsl
daa
inc
into
hlt
cltd
inc
push
mov
rorl
mov
frstor
push
stos
in
dec
enter
sarb
in
push
xchg
mov
and
addr16
cwtl
push
push
js
pop
fdivl
lahf
fidivrl
icebp
and
aam
clc
ret
adc
popf
xchg
mov
inc
fldl
sub
popa
mov
movsb
mov
mov
and
aad
mov
xlat
dec
inc
jne
mov
int3
xchg
dec
test
and
push
mov
pop
or
aam
jbe
popf
add
pop
stc
jns
shl
test
and
jp
dec
inc
pop
jo
out
mov
lds
fdivl
sti
push
rolb
mov
icebp
push
pop
sub
out
cmp
test
or
shlb
sti
and
mov
bound
hlt
mov
cmc
jg
sarl
sbb
adc
stos
and
andb
ficomps
in
sub
enter
sarl
hlt
jns
add
enter
shrl
mov
out
loopne
inc
push
sub
jno
cmp
shll
shll
pop
push
push
iret
dec
xlat
mov
jne
xor
jl
loop
pop
sub
inc
hlt
imul
sbb
icebp
imul
fs
aas
fstl
xchg
mov
jge
or
mov
insl
push
cmc
dec
aad
inc
pop
movsb
jmp
mull
xchg
pop
stc
mov
pop
and
and
lcall
push
into
hlt
pop
xchg
push
and
push
stos
xor
aam
mov
xchg
out
jns
out
adc
arpl
scas
aas
jnp
add
aad
jle
int
rorb
aam
pop
shrl
lods
jns
xchg
lods
push
movsb
mov
ja
push
inc
dec
aad
mov
push
mov
pop
xchg
bound
cmp
push
mov
aad
jns
sbb
xchg
imul
jecxz
push
mov
aas
cli
jno
lahf
push
adc
fcomp
sbb
fisubrl
ds
or
shlb
dec
lds
popf
push
lds
pop
pop
pop
int
mov
jge
vminpd
or
sbb
pop
test
fnstcw
or
dec
leave
rcll
jp
xchg
sbb
mov
lds
pop
leave
int
rcl
mov
addr16
jo
pop
ja
out
stc
fwait
fwait
mov
pop
dec
mov
loop
test
out
test
and
pop
push
inc
dec
test
pushf
add
in
sbb
add
pop
or
mov
adc
movsb
mov
icebp
push
or
sub
imul
dec
sbb
jo
xchg
mov
movsl
jnp
push
cmpsb
imul
daa
mov
and
mov
les
inc
leave
popf
pop
andb
xchg
test
and
jl
in
inc
incb
lahf
jne
dec
jo
addr16
fnstenv
push
fsts
or
pushf
xchg
pop
ja
fmuls
repz
dec
xor
and
scas
test
cmp
mov
test
xor
adc
cli
ss
mov
xor
movsl
mov
push
loopne
insl
push
lds
lods
jge
clc
push
dec
test
dec
xor
sub
inc
jb
lds
mov
mov
lds
xchg
or
cltd
jne
andl
jne
pop
roll
or
push
pop
adc
pop
dec
mov
push
lret
push
push
pop
sub
in
ss
inc
notb
mov
js
jp
aad
mov
xor
inc
daa
jnp
leave
fwait
and
and
mov
sbb
in
lds
mov
push
xor
sbb
jns
fisttpll
dec
add
mov
lea
int3
aad
rol
sub
insl
dec
roll
das
push
lods
cwtl
in
mov
vandnps
or
mov
scas
enter
push
cmpsb
aaa
jb
rorb
push
add
aad
and
icebp
fiadds
push
and
jae
inc
push
push
jl
leave
vsqrtsd
xchg
dec
mov
lds
xchg
lds
rorb
repz
inc
enter
out
sub
and
and
sub
stos
outsb
dec
js
or
scas
lret
jle
and
ss
js
out
mov
or
jmp
orb
jne
popf
cs
xchg
jno
stos
dec
loop
popa
test
jae
out
cli
mov
cmp
add
add
mov
cmp
dec
pop
jge
sbbl
and
fisubs
pusha
sub
dec
sub
shrl
xor
lea
addl
sbb
inc
rolb
lret
jne
push
adc
jge
or
call
and
cmp
mov
rcrl
mov
mov
mov
xor
jle
orb
dec
sbb
bound
push
mov
and
sbb
ss
mov
fwait
adc
sbb
adc
add
adc
push
fwait
stos
mov
cmp
sbb
and
push
jns
faddl
and
test
xor
xor
push
aad
cld
pop
or
mov
repnz
or
rcr
lods
fsub
pop
mov
and
cmp
lods
and
stos
scas
stos
pusha
and
push
pop
and
xchg
push
cmp
in
xor
xor
inc
xor
inc
pop
push
dec
and
fsubs
int3
or
outsb
cwtl
adc
sub
and
sarl
inc
or
cmp
sbb
jbe
loopne
outsb
frstor
enter
and
mov
subl
scas
sbb
push
mov
jl
sub
or
inc
les
jg
movsb
subb
xorl
movsl
imul
cmpsl
and
and
xchg
cmc
lds
sbb
mov
sub
jmp
xchg
add
aam
sub
jno
and
or
bound
dec
xor
sbb
jp
mov
or
jns
or
aam
mov
pop
xor
or
mov
dec
push
lret
imul
mov
sbb
mov
push
test
lods
cwtl
icebp
scas
fcompl
and
scas
push
and
pop
xchg
cli
xchg
lods
jne
arpl
push
call
sub
and
jne
xor
popf
enter
inc
insb
movsb
leave
and
shr
outsb
or
add
pop
inc
lock
inc
pop
cmpl
incb
lea
and
pop
push
mov
jne
jmp
mov
loope
lods
insl
inc
std
in
test
ret
lds
test
inc
push
mov
pusha
stc
dec
mov
sbb
stos
fwait
pop
push
pop
icebp
mov
mov
mov
xor
les
aam
imul
scas
pop
test
imul
bound
imul
pushf
and
out
jg
pop
scas
jb
sub
inc
mov
push
pop
ds
test
sub
shl
bnd
out
add
filds
ret
jae
loope
rol
imul
sti
ds
jge
dec
into
ljmp
lods
add
pop
inc
lret
cltd
push
lea
andl
test
or
push
xchg
cmpsb
pop
cmpsb
inc
push
rcll
loope
ret
push
and
addb
scas
mov
mov
pushf
lea
mov
add
mov
lods
inc
dec
inc
cmp
push
inc
aas
mov
cltd
jle
leave
imul
mov
nop
mov
cmp
lds
dec
scas
push
sub
movsl
jnp
shll
mov
mov
mov
cmpsl
inc
pop
loopne
imul
sbb
push
or
pushf
mov
jne
xor
inc
mov
outsb
dec
addl
pop
jmp
xor
test
jb
adc
leave
inc
cmp
test
inc
add
andl
shll
cmp
jle
xor
movb
insl
sbb
aad
sub
cmp
dec
xchg
outsb
dec
xchg
add
jg
testb
js
adc
out
dec
jg
loopne
mov
pop
jge
jno
fdivr
orl
mov
push
sub
mov
inc
xchg
mov
push
and
cmp
push
mov
fsubrl
cwtl
pop
stos
test
hlt
dec
xor
push
sahf
enter
shr
addr16
lds
push
in
xchg
and
jp
mov
scas
rcll
add
shlb
mov
or
push
fwait
inc
and
in
andl
loopne
das
xchg
sub
fmuls
leave
pop
cmpsb
hlt
mov
pop
push
sahf
push
pop
jno
push
and
pop
call
sub
test
pop
sahf
pusha
pop
shrl
out
rorb
mov
loope
leave
in
test
push
aas
mov
aas
mov
mov
mov
jp
in
fildll
jmp
add
adc
cmc
sub
sub
pusha
fwait
ljmp
or
mov
pushf
shlb
ljmp
daa
stos
sub
daa
inc
outsl
rcrl
aad
insl
fstpl
mov
dec
lds
mov
leave
fldl
sbb
cs
and
dec
adc
pop
jne
imul
xchg
mov
arpl
outsl
hlt
negl
xchg
out
fidivrs
xor
dec
pop
xchg
push
sub
mov
leave
dec
imul
lahf
push
mov
test
jmp
pushf
fisttpll
and
pop
cmp
sahf
imul
int3
xchg
orl
cwtl
out
dec
fldenv
cltd
das
cmp
or
add
addb
pop
inc
les
sbbl
into
mov
daa
cmc
and
jbe
dec
mov
lock
popa
push
int3
push
jecxz
jge
adc
hlt
test
mov
sti
and
data16
outsb
dec
sbb
sub
pop
dec
shll
dec
mov
add
shll
adc
repnz
mov
or
js
arpl
push
scas
jl
mov
push
cltd
outsb
mov
aam
scas
js
ss
jg
inc
cs
mov
inc
lcall
push
mov
out
and
push
mov
pop
push
inc
cs
test
fsubrl
call
loope
mov
mov
sbbl
vunpcklpd
adc
dec
shlb
inc
pusha
push
fnstsw
fsubl
insl
mov
push
jge
dec
mov
pop
push
jge
pop
xlat
dec
faddl
ja
dec
mov
fldenv
push
sub
test
movaps
or
icebp
pop
aam
cmp
sub
mov
cmpsl
jae
shll
inc
mov
shrb
jae
push
push
cmp
inc
push
imul
aam
ljmp
sbb
mov
xorl
out
nop
sbb
adc
fadd
stos
insl
push
pop
stos
outsl
and
imul
imul
bound
jne
mov
ljmp
xchg
push
sbb
enter
sbb
int3
hlt
xor
movsb
push
sbb
add
mov
test
test
mov
mov
bound
cwtl
inc
orl
xlat
xchg
fisubrs
or
pushf
jns
outsb
mov
pop
cwtl
jge
adc
pushf
dec
inc
or
aas
adc
inc
out
push
add
lahf
xchg
lcall
inc
test
aas
cwtl
jmp
push
mov
jecxz
xchg
mov
out
and
xorb
inc
addb
xchg
dec
cli
loop
rcl
jl
or
xor
sub
call
jge
mov
rorb
leave
orl
es
sbb
lea
dec
dec
sub
enter
stc
mov
mov
loopne
orl
fldenv
cmp
cmp
sahf
in
inc
xchg
sbb
add
mov
or
fildl
sahf
mov
jmp
ljmp
xor
cmpsl
pusha
rcrl
xchg
add
js
in
mov
push
xor
sbb
inc
cmpsb
pop
fcom
mov
adc
and
sbb
pop
and
sbb
jno
mov
pop
sbb
and
fstpl
dec
sub
push
xor
and
pop
xor
sub
add
leave
sbb
leave
dec
inc
int3
xor
fildll
sub
fsubs
imul
or
or
mov
xchg
stc
mov
test
mov
fs
and
pop
xor
mov
inc
mov
stos
dec
xor
jb
mov
add
and
or
rcrl
rclb
gs
push
dec
dec
stc
pop
sahf
inc
imul
inc
add
sub
xchg
imul
decl
sub
sub
push
popa
jl
scas
jnp
addr16
test
cmp
and
inc
movsl
adc
push
cmpsb
dec
sahf
sbb
add
xchg
and
and
lahf
es
inc
xlat
sbb
sbb
testl
adc
dec
fadd
aam
jg
xor
stos
js
ljmp
xchg
arpl
fcom
adc
in
fsubl
imul
imul
inc
fcomp
jecxz
pusha
xor
or
dec
in
shl
enter
mov
xchg
leave
xor
fdivs
xchg
inc
jge
jno
mov
fnstcw
pop
lods
dec
int
pop
rcll
jne
or
lods
xor
inc
and
scas
push
mov
divl
int3
stos
test
test
inc
sarl
mov
loopne
dec
dec
mov
loop
cmp
sbb
cmp
out
icebp
dec
dec
sbb
arpl
xor
hlt
fwait
sti
in
sarl
add
sub
adc
outsl
pop
cmc
out
mov
fimuls
jg
mov
push
in
inc
out
pop
out
dec
jo
push
jmp
pop
cltd
ds
mov
sbb
pop
adc
add
movsb
push
cmp
lret
fbld
pop
inc
sub
add
mov
sbb
in
pop
lcall
adc
pop
sbb
mov
daa
cwtl
lods
jle
cmp
add
jae
mov
addr16
subb
mov
dec
imul
push
cli
pop
dec
jmp
sbbl
inc
pop
enter
mov
stos
std
jp
sub
mov
xor
arpl
inc
sub
movb
inc
add
mov
push
inc
gs
push
jae
jne
mov
pop
movsl
xchg
loop
push
jg
lods
insl
inc
ljmp
push
cltd
and
adc
mov
add
cmc
popf
pushf
fidivrl
hlt
push
ficomps
lret
in
arpl
adc
mov
mov
pop
mov
push
outsl
jne
and
jp
add
cld
or
pop
pop
dec
jo
adc
xor
xor
loopne
sub
fs
loope
add
jne
sbb
xchg
lret
cmpsb
jns
and
lock
cmp
movb
ficomps
xor
out
aaa
xchg
and
insb
subl
aad
jg
ja
mov
jbe
push
or
lret
pop
sub
cmp
imul
push
mov
test
fsts
jno
out
dec
inc
stos
cs
es
std
and
insl
adc
mov
dec
xchg
or
push
cs
popa
jg
and
sub
xchg
js
movsl
orb
fisubs
push
js
lods
pushf
adc
or
fidivs
leave
pop
test
lahf
fadds
pop
xor
ret
ret
cmc
rolb
mov
push
or
and
testb
cmpsb
adc
sbb
sbb
repnz
jne
mov
push
out
sbb
dec
and
jne
cmpsb
jo
pop
jae
imul
lock
insl
fsts
lds
dec
dec
cmp
test
add
inc
addl
cwtl
fstpt
sets
das
jo
jb
sbb
cmp
lcall
es
movl
sub
clc
int
cmp
xor
sbb
sub
out
push
enter
mov
gs
add
das
cld
pusha
xchg
inc
cs
inc
and
addl
jo
loop
add
cli
xor
adc
jb
aam
cmpsb
add
mov
enter
jne
mov
mov
hlt
adc
dec
push
fstl
cld
xor
jbe
js
pop
xchg
jnp
and
xchg
jb
xchg
ja
in
ret
push
cmc
mov
imul
xor
sbb
pusha
pop
sbb
popf
fnstsw
or
arpl
popf
cltd
cmp
test
out
cmp
and
fwait
push
in
dec
shll
mov
inc
stos
mov
mov
dec
add
xchg
mov
rcpps
cli
inc
rorb
cmp
jp
push
inc
mov
push
dec
aad
hlt
push
or
push
push
movsl
lock
sub
mov
xchg
mov
sarl
idiv
lds
decl
sub
mov
lret
mov
mov
aam
stos
call
repnz
int3
fisttpll
jge
sarl
dec
cmp
and
cltd
push
int
xlat
vdivss
jmp
jae
add
jo
movb
adc
mov
bound
int
push
jg
stos
shrb
mov
pop
push
je
paddusw
sarl
and
cmovs
cwtl
xchg
inc
pop
mov
lahf
aas
dec
xor
sub
inc
popf
in
cmp
out
push
mov
lret
sub
and
shlb
cmp
test
lds
cmp
jne
andb
adc
popf
dec
les
mov
stos
ret
lds
rclb
ret
cmp
inc
nop
ret
stos
fwait
add
insl
insb
jmp
xor
or
aam
leave
jmp
stos
fs
jns
in
pop
test
mov
inc
cmpsb
int
sub
mov
mov
in
and
cmp
and
xchg
aad
inc
jmp
add
and
nop
es
loope
sub
lock
out
outsb
dec
cmpl
inc
or
out
rorl
push
mov
shr
std
push
sbb
pop
addr16
inc
cmovnp
cmc
push
jle
inc
cmc
dec
aam
adc
mov
sti
movl
or
push
out
sub
les
out
xor
loope
jb
cmp
inc
cmp
sbb
pop
std
mov
sbb
or
xor
das
sahf
in
loope
xchg
adc
mov
test
sub
dec
out
cmpb
ds
mov
sub
adc
loope
jns
xlat
ja
insb
call
sbb
jge
push
jb
pop
jnp
push
mov
push
bnd
dec
cld
dec
fwait
sahf
push
xchg
add
push
in
dec
lock
jo
and
dec
mov
adc
je
add
sbb
dec
or
addb
sbb
or
rcrb
int3
add
or
leave
shll
push
addr16
cld
add
int
dec
fs
mov
nop
test
mov
ret
adc
adc
ja
fwait
jl
xchg
les
mov
mov
movsl
cmp
dec
add
cmpsl
imull
ror
addr16
js
xchg
add
mov
push
xor
arpl
lahf
inc
stc
sub
jne
adcl
dec
mov
mov
push
imul
dec
xlat
mov
std
and
test
adc
add
adc
adc
pop
mov
jne
xchg
inc
and
shll
movsl
mov
lret
cmpsl
cmc
scas
iret
flds
or
rorl
jne
xor
leave
mov
in
scas
enter
into
xchg
dec
or
xor
out
nop
xchg
int
jle
adc
add
out
scas
sbb
mov
cmp
out
aas
mov
xchg
jo
repnz
rorl
inc
mov
popf
add
dec
push
incb
and
dec
lods
sbb
xor
jae
ret
push
inc
mov
and
lret
ja
into
fdivrs
adc
sbb
adc
jb
lds
add
sbb
xor
sub
enter
adc
int
pop
ret
dec
jo
mov
inc
into
daa
dec
jmp
cmc
xor
inc
push
or
int
push
sbb
sub
sub
xchg
and
out
xor
fistl
cmp
sub
and
outsl
aam
and
sbb
and
push
shlb
xlat
xor
leave
test
adc
insb
xor
outsb
cmp
and
dec
das
sbb
or
fcoml
sub
inc
pop
push
jle
xor
and
je
jae
push
lret
gs
pop
xchg
test
test
mov
insl
aad
repz
movsl
stos
add
push
cmp
fistl
into
shlb
rcr
xor
xor
roll
mov
xchg
xor
adc
lods
imull
imul
in
inc
out
dec
fsubl
icebp
pop
hlt
sbb
xchg
scas
dec
call
test
pushf
add
mov
mov
jno
scas
mov
sub
add
in
int3
fiaddl
sti
push
and
gs
in
add
xchg
rorl
jmp
ss
jb
push
mov
mov
scas
and
arpl
shl
add
sbb
sub
push
lea
pop
adc
int3
mov
rorl
leave
mov
cltd
sahf
adc
jle
push
inc
and
sub
dec
dec
cmp
push
mov
sub
and
outsb
int3
mov
xchg
xor
sbb
inc
push
insl
adc
cmc
jp
dec
and
mov
xchg
pop
insl
pop
je
gs
andb
hlt
add
xchg
adc
adc
mov
pop
in
xchg
ja
xchg
aad
insl
lret
inc
jo
in
lods
dec
arpl
inc
mov
dec
cmp
popf
fdivrl
dec
and
inc
pop
stos
aad
out
xchg
xor
cs
out
xchg
xchg
dec
sbb
dec
sbb
shrl
or
mov
sbb
cmp
roll
in
jne
mov
in
outsb
ret
and
movsb
icebp
test
jno
inc
in
dec
out
add
cmp
xchg
pop
pop
dec
sbb
inc
inc
and
jno
xchg
stc
xchg
int3
lds
pop
sub
push
push
rorl
sbb
adc
pushl
aas
jl
inc
pop
rorb
ret
cmp
mov
xchg
addl
lret
ljmp
cmpsl
scas
push
sbb
xor
insl
cs
aam
push
xor
sarl
mov
adc
xchg
lds
pop
and
fstpt
and
int
inc
jg
dec
fsub
cs
dec
imul
loop
dec
fnstsw
daa
movb
adc
rolb
in
xor
sub
in
stos
sti
stc
fcomps
stc
jl
call
pop
gs
adc
add
shll
daa
push
pop
loop
jne
cwtl
sbb
sub
cmp
lret
jg
or
rolb
ja
stos
in
addl
or
cmp
jl
dec
push
mov
cmp
add
push
cmpsl
jns
dec
lds
orb
sti
push
cmpb
xor
aam
leave
dec
jnp
jo
sti
addr16
stos
mov
roll
push
dec
mov
push
dec
dec
pop
jmp
sub
repnz
fcomps
les
push
orl
adc
dec
int3
popa
and
bound
ret
and
repnz
jp
imul
lds
cmc
sbb
xchg
push
mov
mov
jge
repnz
and
xor
add
icebp
sbb
push
cmp
inc
and
ds
push
scas
mov
clc
popa
mov
mov
incb
push
jecxz
ret
scas
ret
cld
int3
test
add
roll
testb
xor
stos
xor
adc
dec
cmp
cwtl
xlat
into
add
xchg
xor
xor
and
pop
mov
push
jns
shll
cs
mov
cmp
dec
push
insl
ja
pop
jecxz
push
or
and
add
and
pop
fsubrl
insl
fistpll
fldenv
pop
sbb
cmp
push
into
out
or
scas
inc
mov
in
inc
push
cmp
test
and
test
sbb
fisttpll
pop
stos
movsb
aad
cmp
gs
aas
cmp
in
push
and
data16
xchg
mov
sub
dec
mov
lret
jo
xchg
xor
cmpsl
mov
adc
adc
lcall
xor
xor
dec
jns
or
rorb
pop
lret
test
arpl
fldcw
test
pop
push
jmp
inc
push
adc
push
pop
aas
lret
shlb
movsl
pusha
pop
popf
mov
mov
add
push
mov
adc
clc
arpl
inc
in
xor
insl
sbb
out
inc
mov
xor
fcoms
lret
dec
xchg
cs
xchg
push
stc
jno
pop
divb
scas
push
push
fbld
xchg
sub
cmc
das
inc
aam
outsb
dec
mov
sahf
adc
cmp
dec
xor
lea
leave
inc
jge
ret
jo
loopne
fs
or
lods
and
inc
scas
dec
hlt
into
movhlps
mov
popf
push
aaa
es
ds
popa
jg
sbb
mov
lds
popa
int3
mov
inc
and
and
cmp
adc
or
adc
jmp
cltd
add
sahf
mov
aam
cmp
cs
std
not
xchg
pop
negl
push
in
mov
in
push
mov
adc
aas
in
into
sub
push
fstl
cltd
fcoms
arpl
jmp
sbb
jle
push
and
gs
imul
mov
and
sub
mov
int3
adc
popl
shrl
mov
icebp
aaa
push
ja
adc
mov
rcll
cmp
cmc
sub
movsb
dec
add
lds
cmp
cltd
movsl
mov
fimull
mov
pop
mov
pop
outsl
jl
xchg
jg
test
jne
testl
movsb
jg
arpl
scas
inc
jg
ret
outsl
adc
dec
hlt
lods
popf
lock
lods
fs
mov
xchg
arpl
test
mov
dec
jne
shll
mov
or
mov
jnp
pop
cmp
daa
dec
dec
pop
xchg
and
jns
rolb
inc
fnsave
mov
jns
dec
pop
pop
daa
loop
jl
adc
addr16
test
jne
jg
jne
cli
mov
jns
jg
push
sub
ficoms
and
arpl
xor
lcall
es
add
push
shrb
ret
enter
mov
repz
dec
add
or
sub
mov
add
loop
adc
scas
loopne
imul
enter
sub
aad
pop
mov
jne
push
enter
imul
popa
jl
popf
jnp
ss
aas
dec
sub
push
sub
pushf
hlt
push
shrl
imul
addr16
hlt
insl
fisubrl
mov
std
and
mov
xor
dec
sahf
mov
gs
lret
and
and
cwtl
in
cmp
dec
enter
inc
arpl
sbb
call
gs
aaa
or
pusha
addl
aam
or
inc
dec
xchg
ret
sahf
adc
fcompl
rorl
or
pop
sbb
imul
sub
and
es
push
inc
xor
xlat
inc
inc
loop
mov
jp
stmxcsr
sub
add
mov
cmpsl
outsl
jbe
pushf
insl
sub
mov
mov
vpmuludq
bound
mov
shlb
mov
add
push
or
xchg
mov
inc
imul
cmp
jne
pop
mov
int3
cmp
cmp
jg
shl
lret
adcl
and
pushf
and
es
sarl
movsl
dec
imul
push
fnstsw
into
outsl
ljmp
leave
xor
mov
push
or
pop
and
lds
xchg
scas
xchg
pushf
imul
pop
mov
push
adc
push
es
or
cwtl
push
es
jg
and
mov
sub
add
call
pop
roll
out
jae
inc
mov
xchg
imulb
or
mov
dec
hlt
ljmp
repz
dec
data16
jl
adc
xorb
dec
xchg
mov
adc
push
push
xchg
enter
hlt
call
jne
add
xlat
ljmp
cs
jns
test
ds
fadds
fs
fldl
rclb
fsubrl
push
call
jae
test
outsl
or
mov
push
or
leave
jmp
aas
and
inc
ret
fnstsw
dec
fisttpl
cmpsb
jne
push
call
jo
inc
xor
dec
inc
sarb
sub
mov
cwtl
push
rorb
gs
cmpl
dec
nop
pusha
and
xor
mov
pop
sbb
test
out
scas
push
aam
mov
imul
mov
inc
jae
imul
mov
outsl
or
les
xchg
enter
loope
or
mov
aam
movsl
jg
push
pop
sti
in
rcll
push
pop
shl
ret
fsubl
mov
xor
enter
popa
push
mov
dec
mov
lret
cmpsb
push
mov
mov
inc
xchg
movsb
dec
jge
loope
mov
or
jns
cli
and
cmp
pop
movsb
push
and
sbb
xchg
pop
daa
inc
lea
scas
dec
or
dec
cli
insl
dec
scas
xor
and
mov
lret
or
andb
aad
push
test
pop
dec
inc
lods
xor
and
pop
jl
push
sbbl
movsl
mov
shll
dec
adc
mov
imul
push
sub
xchg
in
pop
insl
mov
sub
xchg
and
shll
or
push
xlat
outsl
pop
or
movsl
loope
jb
push
add
out
push
mov
roll
aad
out
mov
test
xor
and
mov
pop
fsubs
jae
jg
imul
sbb
and
push
cmp
out
dec
mov
movsb
push
cld
sbb
inc
test
es
pop
test
add
into
jle
push
mov
push
xor
xor
mov
fbstp
sub
dec
cmp
dec
cmc
out
adc
xchg
insb
inc
pop
cmp
mov
les
out
and
add
mov
jbe
or
popa
add
sub
adc
inc
enter
and
inc
mov
jno
std
push
or
movsb
sbb
cmc
sub
faddl
leave
cltd
inc
add
mov
and
cli
jmp
call
mov
pop
inc
or
fs
lds
lods
adc
test
popf
shl
cmp
clc
stc
cmp
jne
sub
rorb
imul
aaa
xlat
mov
cmp
jecxz
push
dec
mov
dec
sbbl
shrl
ds
mov
dec
dec
jnp
hlt
ja
orb
xchg
fs
adc
push
sarb
icebp
std
jne
add
mov
in
cmp
lods
adc
jl
mov
aam
push
scas
jno
mov
sub
cs
enter
stos
ljmp
lods
inc
sub
push
xor
xor
mov
imul
scas
mov
stos
xor
cmp
ja
pop
sbb
rcrb
rorl
sub
rclb
and
xchg
pop
cmc
and
movsl
sbb
sti
jmp
cmc
cmp
pop
test
push
inc
pop
mov
js
push
sub
add
nop
fwait
lods
ss
push
xchg
dec
xor
inc
dec
jg
call
int3
jne
mov
sbb
sub
in
insl
test
daa
push
xchg
cwtl
stos
test
dec
mov
push
xchg
dec
stc
xchg
gs
dec
add
lcall
mov
test
test
pushf
mov
add
mov
inc
dec
adc
sbb
cmp
mov
addb
cmpsl
mov
les
iret
in
cmpsb
or
fadds
jge
add
aam
cmp
shll
stos
mov
mov
in
push
mov
sub
mov
xchg
leave
out
pop
sbb
push
leave
icebp
lds
xchg
jne
push
call
testb
lcall
jg
pop
push
xor
enter
lret
or
mov
lea
lds
aam
orps
ret
lods
pusha
xchg
loopne
out
cwtl
fsts
lds
test
imul
jle
sub
push
das
sbb
pop
push
test
dec
outsb
push
dec
mov
and
pop
dec
lahf
pop
dec
test
pop
shrl
sub
pop
inc
cmpl
repz
xchg
inc
xlat
inc
dec
fiaddl
pop
dec
and
push
test
adcl
lods
and
sbb
sbb
loope
jno
lds
sbb
mov
lea
inc
sbb
shll
cltd
xor
jnp
test
jns
sub
test
les
xor
pop
gs
xchg
xchg
push
jae
push
andl
xchg
mov
fdivs
fnstcw
push
lds
cmp
das
leave
xchg
hlt
lea
add
pop
pop
fldenv
dec
xor
push
lds
inc
addr16
inc
lds
stos
in
jae
arpl
lds
mov
mov
adc
and
sbb
sub
imul
pop
fstps
bound
cmp
cmp
lahf
add
jmp
stos
out
ja
sahf
and
cmc
push
js
ja
fs
popf
lea
mov
adc
or
imul
test
repnz
mov
lret
inc
push
pop
xor
mov
sbb
push
sub
fldl2t
push
dec
and
in
test
clc
gs
pop
testb
jno
mov
stc
pusha
lahf
add
jns
lcall
lds
mull
xchg
mov
pop
shll
fmuls
pop
aad
lds
arpl
sahf
fnstenv
jne
lds
leave
or
fdivrl
xchg
ret
in
push
push
xor
mov
mov
xchg
cmpb
das
inc
bound
bound
mov
leave
cmpsl
and
push
aaa
lds
mov
test
lea
pop
push
hlt
pusha
inc
sbb
xchg
fdivr
jp
lret
es
or
outsl
xor
pop
inc
xor
mov
mov
int
xchg
fadds
rcll
dec
test
xor
and
mov
pushw
test
mov
lds
jo
lds
push
andl
arpl
sbb
fldenv
pop
add
es
pop
orl
js
cld
or
js
fsubrs
cmp
nop
mov
sub
push
xchg
dec
mov
mov
adcl
jle
imul
inc
push
inc
shll
sub
pop
sub
cmp
inc
pop
cltd
loope
or
or
inc
dec
lods
cltd
mov
dec
lahf
gs
sub
jno
test
sbb
cmp
dec
and
push
scas
rcrb
xor
testl
dec
mov
lds
and
pop
shll
lds
push
aad
xor
movsl
sub
inc
cmp
xor
lds
xor
dec
lods
inc
inc
rolb
ret
lds
int3
xadd
inc
dec
leave
dec
inc
enter
lret
dec
or
pop
hlt
jge
or
insl
and
adc
push
testl
faddl
mov
ljmp
and
test
jo
jno
pop
ds
outsl
jne
aaa
jp
push
mov
ja
in
xchg
test
push
popa
popf
test
mov
mov
jne
sub
scas
mov
add
pop
nop
andl
xchg
or
shr
ficompl
icebp
mov
arpl
cmp
fisubs
shr
fsubl
xchg
int
fdivrs
jne
imul
outsb
add
and
lret
jne
pop
arpl
pop
test
lods
pusha
xorl
jl
popf
jl
push
test
cmc
stos
jmp
inc
add
sub
or
xchg
adcl
inc
push
es
addr16
xor
inc
test
jne
insb
subb
fstps
xchg
leave
int3
movsl
aas
bound
mov
mov
mov
mov
dec
loope
test
ljmp
divb
in
inc
cmp
aam
andb
lahf
scas
enter
enter
mov
icebp
jle
cmp
push
pop
jns
xor
and
mov
orb
ja
fwait
loopne
popa
mov
and
mov
mov
fmuls
dec
push
mov
dec
mov
push
mov
lods
jae
inc
push
push
sbb
lret
stc
or
lcall
mov
push
push
jge
cmp
ret
mov
lods
cs
testl
in
aas
aam
sar
pop
sub
add
rcrl
jge
shrb
ret
mov
add
mov
mov
cmp
jns
mov
cmp
insb
cli
mov
pop
mov
andb
sbb
cwtl
jns
jge
popf
jae
and
inc
ja
or
out
inc
les
scas
popf
adc
inc
jnp
add
repnz
loope
jle
cltd
lods
ret
cli
lods
push
sbb
dec
test
call
add
or
push
sub
pop
jb
lods
push
push
xor
and
and
gs
inc
sub
les
sub
push
inc
sbb
jbe
add
xor
mov
jns,pt
scas
or
mov
gs
inc
je
int
push
dec
and
inc
inc
insb
cs
test
inc
jg
and
leave
shl
jecxz
jle
jl
inc
pop
xchg
into
pop
xchg
rcrl
lahf
clc
add
hlt
inc
fisubs
xchg
push
clc
les
and
dec
dec
sub
inc
arpl
push
movsb
shl
inc
insl
adc
push
hlt
mov
push
arpl
fidivrl
lods
adc
daa
sbb
jae
es
mov
arpl
adcb
dec
ljmp
dec
xchg
jne
jle
jle
and
mov
stos
push
adc
mov
lcall
dec
inc
sbb
pushf
andb
inc
sub
dec
inc
push
mov
dec
dec
roll
cmp
roll
test
lret
or
andl
jae
pop
insb
movsl
xchg
hlt
xchg
pop
dec
lods
orl
xor
lods
daa
xor
xor
sub
enter
test
push
int
call
rorb
xor
shll
hlt
lcall
push
push
lahf
mov
jl
cs
cli
inc
mov
or
mov
inc
je
ret
rol
cmp
mov
push
cwtl
int3
push
insb
push
cmpsb
xchg
inc
jo
iret
movsl
out
icebp
fadd
cmpsl
les
les
cmpsb
jns
jge
in
fildl
sbb
push
fsubs
pop
sbb
rorl
xchg
add
stos
or
int
stc
mov
dec
xchg
leave
xor
xchg
roll
cmp
mov
dec
xor
xchg
in
push
push
jne
aad
jb
push
or
mov
and
cmp
xlat
stos
outsb
fadd
jns
push
jle
inc
es
in
mov
rcrl
mov
or
sub
push
xchg
vpsravd
fs
repnz
and
inc
inc
sub
in
push
jns
gs
mov
hlt
lcall
and
sbb
cmp
sub
fstp
add
push
and
ds
jne
inc
xor
push
push
cwtl
adcl
mov
fdivrl
dec
sbb
icebp
sbb
pop
add
and
adc
push
test
je
mov
jle
pop
push
push
mov
cmp
xchg
lea
nop
fmuls
and
xchg
lods
scas
sarl
imul
dec
cwtl
ds
js
je
cmp
cmpl
dec
dec
cli
imul
fsubs
cmc
test
hlt
dec
sub
test
xchg
cmpsb
adc
sahf
pop
pop
xchg
inc
sbb
pop
shll
sbb
lret
pop
lds
shr
inc
jle
jg
in
rcl
jnp
xchg
shlb
cmp
loope
cmpsb
adc
pop
sub
iret
ds
add
xchg
cmpsl
int3
pop
in
dec
dec
aam
xor
ret
jp
sub
inc
push
mov
sbb
add
jg
adc
orl
mov
sbb
hlt
xchg
pop
jmp
mov
sub
inc
mov
ret
pushf
mov
dec
subl
or
movsb
lret
ret
sub
jne
rcrl
and
add
mov
shlb
mov
inc
xlat
outsl
dec
test
lods
rorl
cmp
dec
cmc
cmpsl
lret
pop
fildll
dec
dec
lea
dec
add
dec
shll
dec
mov
enter
push
xlat
adc
and
pop
addb
add
mov
fs
xor
lret
and
dec
and
sub
shl
jae
movsl
dec
inc
cmp
mov
ret
mov
hlt
jmp
dec
hlt
insb
fidivl
add
mov
hlt
sbb
jecxz
and
inc
dec
dec
hlt
xchg
mov
cmp
adc
cmp
push
jl
mov
xlat
daa
mov
sub
enter
or
ret
nop
inc
pop
mov
xchg
dec
fildl
mov
aas
dec
dec
fmull
add
ds
fs
mov
cmp
xchg
dec
bound
and
stos
ljmp
dec
fiaddl
push
inc
mov
xor
les
add
and
mov
add
hlt
lock
fildll
add
fsubr
pop
adc
test
ds
ret
cmc
dec
cmp
push
movsb
add
dec
les
lods
dec
mov
dec
sarb
lds
push
mov
ljmp
shl
decb
jg
jb
or
push
push
pop
pop
jne
add
aaa
push
hlt
dec
or
mov
pop
lcall
arpl
lea
inc
cmp
mov
stos
imul
std
push
hlt
push
andb
mov
in
or
sub
pop
aad
cmp
dec
int3
cmp
dec
and
xchg
out
mov
inc
push
mov
and
mov
mov
imul
push
je
lret
loope
mov
into
sbb
lea
out
mov
add
insl
arpl
or
sahf
arpl
pop
adc
paddq
add
mov
inc
or
or
mov
cmp
sarb
cmpb
dec
jne
ret
movsl
cs
mov
or
enter
pop
cmpsb
stc
inc
pop
push
lods
push
sub
xchg
xor
dec
stos
jl
dec
xchg
sub
ret
out
and
ljmp
mov
pop
and
cmp
push
jns
sbbb
push
adcb
push
mov
add
into
adc
out
push
dec
jmp
loopne
push
mov
or
cmp
push
mov
call
dec
jge
fs
jnp
ja
movsb
add
jge
or
in
imul
push
add
dec
xorl
mov
jbe
test
shlb
js
pop
adc
ret
add
out
xor
jg
scas
xchg
pop
clc
inc
push
or
inc
push
fdivl
push
cmc
mov
mov
pop
push
mov
and
sub
dec
inc
fiaddl
dec
movsb
popf
fisttpl
mov
fsubrs
push
adc
push
sub
js
or
inc
inc
cmc
push
fiaddl
js
bound
icebp
loop
cmp
xor
aam
jnp
jne
mov
cmc
lret
or
xchg
in
nop
cmc
inc
or
pop
or
jo
jg
rorl
mov
dec
jne
stos
dec
jl
fisttps
sub
dec
leave
cmc
push
int
xchg
xchg
int
dec
mov
xor
jne
add
xchg
mov
fidivl
mov
ret
fsub
int
cs
imul
data16
mov
loopne
push
leave
push
mov
pop
mov
cmp
inc
nop
cs
jl
or
push
ss
add
add
cld
push
lret
and
cmp
daa
cmp
inc
mov
jne
mov
in
dec
in
rorl
fsub
les
daa
push
inc
out
mov
mov
inc
dec
cmc
add
xor
shlb
sub
dec
ss
push
loopne
test
ror
fisubrs
jmp
push
inc
loope
jge
and
arpl
add
jnp
add
and
jne
sbb
inc
roll
aas
jo
stos
cwtl
cwtl
xor
add
lock
hlt
push
stos
lods
fldenv
adc
inc
sarb
into
mov
cmp
mov
jae
test
mov
mov
test
push
cli
ret
xor
decb
movsb
lock
xchg
rorl
in
sti
add
dec
xor
enter
loopne
out
ret
fsubr
add
das
and
sbb
pop
sub
push
shll
into
gs
push
inc
mov
push
les
shl
xchg
int3
sub
gs
movsb
xchg
and
fdivrl
mov
loopne
hlt
adc
sahf
mov
flds
nop
push
push
sbbl
inc
hlt
ljmp
dec
sub
cmp
jnp
inc
mov
aam
and
dec
lret
adc
shrb
mov
mov
lcall
add
and
je
mov
addr16
imul
jg
add
fisttpll
outsb
jl
arpl
imul
in
nop
addl
mov
lods
loopne
jne
xor
hlt
add
les
fs
test
and
xor
inc
and
daa
or
sar
movsl
int3
mov
xor
inc
scas
pop
daa
sarb
or
fistpl
int
pop
loope
mov
daa
iret
and
mull
jnp
xor
push
jmp
jbe
inc
icebp
scas
jb
sbb
jbe
js
push
pop
rclb
lock
mov
sub
and
push
subb
roll
shl
clc
stos
ja
daa
loopne
push
aaa
les
xor
cmc
fs
fcom
dec
jo
cmp
mov
sbb
mov
out
sub
xchg
or
sarb
push
sti
xchg
shll
in
nop
inc
adc
cs
xor
loop
xchg
movsl
scas
jne
test
dec
mov
dec
ficompl
mov
enter
in
mov
xlat
and
mov
mov
and
mov
je
les
outsb
scas
sbb
ficomps
jns
loopne
arpl
in
dec
inc
push
repnz
ljmp
xchg
adc
fdiv
mov
sub
inc
sbb
mov
pop
and
out
test
lds
loop
or
cmc
cs
movsl
cmp
out
aad
mov
stos
push
cmp
dec
in
jge
xchg
cmp
mov
arpl
icebp
lock
dec
mov
fsubp
hlt
fcompl
movsb
shrb
cmpsb
or
xchg
and
jne
xor
popa
add
cmp
insl
pushf
mov
daa
pusha
cld
mov
jp
movsb
cmp
shrb
push
mov
mov
mov
pop
aad
add
nop
xchg
mov
dec
cs
mov
sbb
rcr
inc
fistl
jne
push
les
fidivl
rorb
jne
mov
add
fdivl
rorl
mov
adc
addr16
in
dec
addr16
sbb
sub
arpl
xor
roll
sub
mov
mov
fmulp
add
movsl
pop
push
adc
sub
xchg
push
push
mov
pop
addl
mov
cmp
orb
xor
and
cwtl
paddq
xchg
pop
dec
stc
mov
ficoms
andl
mov
clc
push
rcll
movsl
xchg
cs
dec
daa
and
sub
mov
xor
push
and
enter
cwtl
sbb
dec
es
xor
pop
add
or
js
xchg
inc
mov
or
int3
mov
xchg
cmpsb
adc
mov
dec
mov
jle
popa
inc
hlt
inc
lcall
mov
push
sar
cmp
mov
xor
int3
jl
test
leave
dec
inc
hlt
push
int
add
mov
sub
jge
sub
mov
cmpsb
lock
sbb
aad
imul
jne
les
jne
shl
imul
jns
shrb
xchg
loope
xchg
shll
jge
jmp
lahf
lock
pop
out
in
dec
dec
movsb
jne
sub
sub
push
ss
cmp
mov
cmp
push
sub
sbb
adc
sub
aam
imul
dec
inc
jnp
adc
scas
cmp
cmp
xchg
push
xor
rolb
in
in
lahf
or
fwait
push
sahf
or
in
mov
fildl
cmpsb
push
nop
cmp
lahf
imul
sbb
xor
sub
stos
fbstp
js
insb
sub
inc
push
fs
sbb
aam
dec
int
ret
stos
rorl
outsl
cmpsl
ret
in
aad
jns
mov
add
xor
arpl
add
push
jmp
ret
dec
sti
mov
cmp
jae
insl
jno
mov
mov
cmc
inc
add
jns
mov
push
add
lods
and
pop
daa
pop
jg
jnp
out
xor
inc
popf
inc
mov
movsl
aad
dec
in
inc
test
test
int
mov
out
in
pop
fildl
mov
and
push
jl,pn
add
mov
movb
in
jg
and
jno
or
dec
ds
mov
dec
jne
enter
outsl
jg
push
test
sub
and
enter
mov
repz
mov
lods
outsl
fnstenv
xchg
mov
jae
cmp
sbb
push
idiv
pop
stc
and
push
add
and
dec
cld
aam
and
popf
dec
xchg
dec
cmp
adcb
je
lock
push
lds
hlt
ror
dec
insl
push
sub
jge
xor
pop
aad
ljmp
fdivs
dec
cli
dec
push
and
and
ret
mov
add
mov
jmp
inc
int3
dec
lds
cmp
sbb
mov
and
lds
shll
cmp
pop
imul
ds
in
sub
ljmp
ss
leave
cmpsl
fldcw
sub
push
lds
inc
fstps
inc
xchg
lds
test
jbe
xor
adc
pop
and
xor
mov
in
fisttps
leave
and
stos
dec
jbe
and
repnz
fmul
push
vmovups
and
xchg
pusha
cmp
cmp
mull
lret
cli
xchg
fadd
ffree
xchg
divb
and
addr16
mov
xor
push
and
adc
adc
sbb
out
jb
mov
lahf
and
mov
inc
leave
mov
enter
iret
cmc
fsubl
and
mov
inc
inc
mov
add
jmp
and
test
push
mov
push
jnp
inc
cmp
addr16
sbb
insl
dec
les
sub
mov
push
push
loop
jae
cwtl
pop
push
add
mov
or
test
enter
enter
push
leave
or
popa
push
mov
cmp
inc
push
adc
and
inc
jne
pop
cmp
push
sub
and
int
dec
int3
and
fadds
fmul
inc
mov
scas
test
aam
inc
dec
jl
push
addr16
loop
fsts
cli
add
or
iret
pop
and
rolb
stos
enter
xchg
lds
push
jecxz
xchg
pusha
lds
or
fldpi
lds
imul
xchg
sarl
dec
clc
cltd
mov
notb
dec
jge
cmpb
dec
xor
arpl
sub
pop
jno
adc
cltd
test
test
push
int
pusha
dec
sub
ret
arpl
popf
fnstenv
xchg
inc
xor
mov
pop
sub
add
sub
push
rcl
inc
add
mov
popf
rclb
mov
sub
mov
pusha
iret
fldl
push
outsb
aad
neg
dec
dec
inc
dec
int
repnz
cs
aas
xor
addl
mov
jle
flds
jo
lret
popf
lds
stos
aas
sbb
fmull
pop
push
dec
bound
jge
arpl
sahf
sahf
aad
adc
das
pop
ret
loop
sub
dec
inc
push
and
test
and
mov
test
mov
mov
jne
mov
mov
dec
test
movsl
cmp
shr
mov
jne
jb
sub
clc
push
addb
inc
mov
stos
pop
aas
stos
dec
lea
cmp
js
xchg
dec
out
test
popa
push
cmp
imul
test
cltd
inc
lret
hlt
push
add
cs
mov
std
inc
insl
push
add
ffreep
sub
xchg
sub
out
jge
int
jns
xlat
push
push
xor
jg
gs
stos
mov
inc
inc
sub
mov
and
les
mov
xchg
out
mov
add
or
iret
or
roll
push
dec
gs
add
movsb
dec
mov
addl
mov
mov
mov
or
sub
push
ja
lret
cmc
inc
mov
pop
push
sub
xchg
lret
iret
loopne
and
out
add
insb
mov
jne
xor
inc
xor
add
cs
icebp
jg
sbb
test
pop
lods
roll
xchg
adc
std
add
push
xor
lods
push
cmp
cmp
mov
fsubp
or
pop
out
ret
xor
sub
cmpsb
inc
lock
push
push
sahf
add
jecxz
mov
orb
shll
stos
sbb
sbb
aas
and
ljmp
jno
or
pop
fwait
lcall
shlb
xor
mov
sbb
mov
cmc
mov
and
fdiv
stos
stos
and
dec
out
jl
cmp
aam
fsub
dec
movsb
aad
push
add
dec
push
cld
add
aad
fstps
imul
sub
int3
aad
movsb
or
xor
jle
dec
dec
mov
and
insb
dec
push
pushf
and
vpmulhw
test
lahf
push
xchg
lea
test
shll
jge
test
ja
sbb
mov
loopne
shll
insl
ds
out
sub
test
mov
jl
gs
push
cmp
add
mov
movsb
in
fimull
inc
pop
into
inc
in
mov
shrd
inc
xor
pushf
mov
mov
js
mov
and
fadd
xor
sub
jg
lods
out
jecxz
xlat
cli
fidivl
cmp
ror
xor
int3
shlb
or
into
add
aas
shlb
xlat
orb
leave
subb
rcl
mov
out
mov
sbb
nop
iret
stos
dec
imul
xlat
es
mov
sti
cld
sub
lret
aam
jg
iret
mov
push
push
sar
arpl
dec
xor
add
es
je
pop
cmp
lcall
push
pop
jb
in
add
bound
jge
cmp
pop
inc
inc
pop
jle
enter
xchg
mov
mov
aas
jns
push
hlt
lcall
lea
dec
push
xchg
add
inc
out
shll
ja
inc
add
imul
lret
sub
add
add
dec
xchg
cmp
jle
out
xchg
andb
xchg
pop
rorb
pusha
orl
psubusw
cmpsb
push
data16
push
jae
inc
aam
inc
or
dec
and
into
in
fisttpl
stos
or
orb
into
gs
push
xchg
cmpl
xchg
aaa
cwtl
les
icebp
inc
xchg
inc
ds
ret
push
leave
es
inc
cltd
xlat
movsl
dec
adc
push
mov
insb
in
mov
inc
push
add
inc
orl
pop
add
dec
mov
mov
mov
aaa
scas
cs
adc
xchg
int3
and
dec
cmc
jmp
outsl
es
xchg
imul
jge
sbb
enter
mov
mov
sub
mov
int3
xchg
rol
aad
dec
hlt
test
adc
mov
dec
frstor
fcoms
inc
adcb
xchg
cmp
push
shrl
aas
hlt
push
stos
xor
inc
dec
fbstp
or
cli
rcrl
jge
mov
cmp
fwait
in
loopne
sbb
fsts
xchg
dec
pushf
add
add
jg
and
mov
and
add
xchg
roll
adc
mov
cmp
addl
dec
cmc
mov
rcl
cmp
mov
inc
out
dec
ds
ret
leave
add
push
push
lds
jge
mov
test
lods
inc
aas
add
xchg
mov
xchg
rorl
adc
dec
pop
das
mov
enter
adc
push
outsb
add
xchg
mov
into
rcll
xchg
test
rcrl
dec
into
cwtl
sarb
sbb
and
xchg
adc
mov
divb
or
or
cltd
mov
pop
aad
xchg
rcll
clc
aaa
cmp
call
ljmp
pop
mov
push
pop
sbbb
mov
xor
cmp
lds
outsb
test
mov
add
rcl
push
shll
or
sub
jl
outsl
dec
pop
xchg
adc
cmp
jnp
pop
inc
rol
xor
push
add
push
xor
push
test
inc
daa
inc
mov
sarl
xchg
scas
fstpl
iret
xchg
roll
nop
movsb
lods
call
arpl
aad
loop
sub
ror
jge
popa
push
xchg
popf
push
js
sbbl
inc
cmp
aas
test
add
inc
jns
sbb
pop
cmp
mov
inc
and
mov
xorl
mov
lahf
cli
testb
inc
or
sbb
push
in
loop
insl
xchg
push
rclb
int3
mov
scas
xchg
movsb
dec
cmc
or
adc
push
jo
fcoms
shlb
dec
fistps
push
stc
xchg
add
xor
hlt
cmp
or
jbe
das
add
xor
in
movsl
pop
hlt
test
xchg
push
aas
mov
cmp
ljmp
mov
mov
gs
mov
or
add
in
mov
rorl
movsl
stos
mov
imul
add
ficoms
or
sbb
jmp
inc
pop
sub
cs
out
sahf
cmp
pop
push
or
stc
and
sbb
xchg
xor
and
mov
cmpsb
aam
inc
push
out
clc
pop
lds
fucomip
mov
sub
mov
bound
pop
xor
dec
ret
mov
fcoml
xchg
mov
into
shl
inc
rol
addl
sub
decl
es
je
sub
add
push
jl
ja
lcall
adc
das
test
sub
jl
xchg
outsl
add
sub
mov
jmp
movl
or
push
stos
push
and
xor
mov
sti
cmpsl
aaa
inc
inc
add
mov
test
sahf
mov
orb
scas
adc
int3
sub
es
add
dec
push
or
sub
ficompl
and
inc
pusha
push
pop
push
inc
push
jmp
xchg
pusha
mov
gs
js
inc
dec
xlat
test
jmp
sub
push
les
leave
aas
and
cmp
sub
loope
leave
test
jecxz
mov
bswap
sbb
imul
and
shll
aad
cs
aam
clc
cmpsl
add
xor
xor
sub
push
rcll
push
test
scas
ljmp
dec
inc
push
mov
and
movsl
jg
arpl
scas
and
xchg
mov
xorb
imul
push
decl
push
mov
out
dec
fsubs
aas
lds
xchg
pop
mov
push
xor
xor
js
jle
xchg
mov
lds
jo
mov
push
push
adc
clts
push
mov
add
sbb
cs
fsubrl
and
test
xor
jb
mov
dec
mov
hlt
fwait
or
and
mov
fsubl
add
int3
adc
cwtl
lahf
mov
shl
rep
enter
add
imul
add
dec
test
and
push
lret
xor
ja
movl
push
pop
xor
or
mov
pop
push
dec
ja
rorl
dec
cmp
les
push
cmp
jp
in
sub
out
out
jg
inc
aaa
jne
enter
dec
push
xchg
or
icebp
incb
sub
loope
add
inc
cs
lea
daa
push
push
out
repz
cmpl
adc
push
push
or
fnstsw
xor
jae
pop
out
les
mov
add
pop
pop
popa
aam
int
mov
enter
xor
lods
cmp
dec
jecxz
je
sub
xchg
hlt
sbb
rol
stos
jae
xor
jnp
andl
adc
xchg
adc
into
inc
pop
inc
sbb
dec
popf
pop
arpl
cs
mov
cmpsb
push
xchg
push
mov
jmp
dec
mov
inc
movsl
xchg
aas
das
jbe
in
xchg
pop
ret
lret
inc
mov
in
ja
and
aam
mov
jnp
mov
sahf
adc
rcll
inc
sarl
call
sar
bound
lods
mov
mov
sub
bound
mov
fdivl
in
leave
enter
outsb
or
mov
jno
or
es
pop
dec
inc
enter
dec
jbe
jnp
jae
dec
aad
cmc
sbb
or
jne
pop
sti
rorb
jle
inc
scas
jno
cmp
addb
scas
mul
aam
sti
push
sbb
sbb
pop
xor
pop
add
pusha
jns
sub
pop
sub
lods
shl
std
fcomp
notl
xchg
pop
mov
aad
push
outsl
jo
in
jnp
and
adc
cld
iret
inc
cmp
je
add
out
xchg
cltd
dec
bound
mov
lds
andb
fsub
les
add
jmp
imul
xor
int
xchg
and
enter
mov
jg
addl
cmp
loop
dec
mov
or
push
push
cmc
mov
addr16
mov
jg
and
pop
mov
ja
mov
hlt
cs
push
scas
subl
inc
movsl
mov
lds
pushf
mov
mov
pop
nop
or
adcb
xor
sarl
cmpsl
andb
daa
es
imul
das
movsl
and
insl
pop
imul
jp
iret
stos
inc
or
imul
jbe
nop
pushf
mov
cmc
mov
testb
lret
dec
test
dec
ds
pop
mov
xor
cmp
mov
add
cmp
xor
xor
shrl
lock
or
pop
jnp
add
and
test
in
clc
iret
cmp
xor
scas
pop
lahf
and
xor
rcrb
dec
xchg
cld
jle
or
mov
loop
cmp
sub
sarl
mov
dec
cmc
mov
pop
stos
stos
out
or
int3
sub
mov
lds
xchg
dec
jns
pop
cmp
pop
cmp
pop
shlb
movsb
inc
adcl
mov
dec
xchg
test
stos
and
fsubl
xchg
orb
inc
adc
aaa
lds
mov
pusha
stos
mov
adc
aaa
lret
jg
gs
cltd
mov
sub
jnp
pop
push
inc
cltd
inc
push
shlb
movsb
dec
loop
cli
and
ret
test
les
jo
push
pop
in
jo
popf
das
cld
and
push
test
xchg
jp
jle
dec
cmp
cmc
addr16
xchg
xchg
add
or
add
and
or
fildl
fwait
push
mov
rcl
inc
mov
outsl
inc
jae
test
xor
dec
cmc
loopne
cs
repz
fiaddl
or
mov
pop
push
out
dec
scas
ror
std
push
test
dec
push
clc
fisubs
mov
pop
inc
and
dec
xor
jno
test
mov
fildll
nop
push
dec
andl
add
push
and
mov
mov
push
xchg
scas
push
cld
mov
cmp
or
mov
fdivr
int
push
inc
test
add
hlt
imul
inc
je
fbld
add
andl
mov
lret
std
lret
stc
cmp
xchg
jecxz
pop
stos
mov
push
scas
jns
popf
ret
test
adc
mov
inc
inc
out
sub
and
xchg
add
int
jae
shlb
faddp
cmpsb
lcall
mov
mov
inc
jo
adc
outsl
mov
cmp
cmpxchg
adc
mov
jo
add
inc
push
xchg
cmp
ss
int
clc
lds
inc
flds
xchg
lds
stos
mov
test
lock
sub
sarb
es
cld
xchg
sub
es
nop
call
jp
pop
lods
mov
mov
or
xchg
or
cltd
mov
fistps
inc
sti
fldl
dec
aas
push
mov
aad
les
lods
mov
inc
and
outsl
sbb
jo,pt
movsb
xchg
adc
scas
pop
jo
mov
aad
jge
fsubl
xchg
add
and
into
jbe
test
xchg
xor
mulb
adc
jbe
pusha
cld
add
inc
rcrb
mov
mov
mov
adc
xor
add
mov
les
xor
push
iret
xchg
and
mov
scas
dec
pop
dec
add
aam
imull
push
jae
cli
mov
inc
add
int
fwait
inc
jne
xlat
and
fadds
cmp
or
test
sub
mov
inc
mov
daa
push
dec
std
mov
test
lock
sub
sarb
test
mov
jne
push
adc
roll
add
and
lods
sbb
mov
cmp
dec
inc
cwtl
xchg
pop
daa
mov
loopne
mov
in
inc
inc
andl
mov
shlb
jl
mov
arpl
inc
rol
mov
mov
sub
jno
rolb
dec
jne
jnp
lods
fisttpl
push
je
adc
xor
mov
dec
cwtl
sbb
and
cmpb
dec
lahf
or
dec
aaa
add
enter
fldcw
xchg
push
cmc
es
xor
and
mov
dec
inc
dec
sbb
sarl
ss
or
inc
loope
ret
call
jns
push
inc
pmaddwd
dec
in
dec
aad
enter
xchg
jp
or
cmp
cwtl
shl
lds
shl
push
inc
ret
xor
jl
lret
hlt
mov
xchg
dec
aad
shll
daa
or
hlt
xor
xor
cld
cmp
xor
mov
inc
jl
mov
and
jg
or
push
push
push
fisubs
mov
and
mov
xlat
nop
dec
mov
enter
ljmp
inc
xor
adc
mov
dec
dec
cmp
mov
aad
sbb
mov
rorb
mov
pop
shll
pop
arpl
shr
jecxz
push
mov
out
xor
lcall
add
push
pop
std
inc
cmp
inc
sub
xchg
sub
test
lahf
ficomps
dec
pop
rcll
stc
stos
push
push
sub
fs
dec
es
lds
call
or
sbb
mov
push
adc
add
add
push
ds
or
test
jne
dec
and
xchg
or
dec
popa
jne
ds
dec
jns
lods
pusha
lea
scas
cmc
in
inc
aad
xor
movb
scas
dec
dec
mov
test
mov
pop
call
inc
lcall
xchg
popf
bound
and
rcrl
mov
sahf
push
inc
add
and
lret
lret
add
das
sub
subb
inc
dec
lcall
xor
shrl
bound
inc
mov
int
into
and
daa
ret
mov
push
lds
adc
test
pop
inc
int3
addb
out
mov
call
pop
lea
push
flds
mov
les
mov
sub
test
jge
stos
sub
push
mov
movsb
xchg
std
mov
cmp
adcb
fsubrl
inc
inc
subl
aam
daa
jae
dec
mov
pop
stos
jle
call
fimuls
into
lret
jp
push
and
ds
pop
dec
pop
ljmp
sub
outsb
lea
mov
jne
jmp
sbb
in
arpl
test
leave
adc
test
sarl
popl
cltd
pop
cmc
mov
lods
sarl
inc
sbb
mov
movsb
dec
inc
push
lea
std
xor
and
pop
mov
cmpsb
mov
lods
insb
rclb
mov
add
enter
adc
int
notb
adc
outsb
push
inc
jle
test
inc
inc
pop
aad
sbb
adc
les
mov
rcl
and
jae
inc
sub
iret
add
cmp
and
sarb
call
inc
adc
jp
aas
adc
clc
dec
out
jg
insl
stos
jge
sub
cwtl
scas
mov
je
jne
je
sub
push
mov
lods
pop
bound
ds
scas
add
fcompl
data16
fldln2
and
loope
leave
hlt
and
push
fsubl
xchg
fildll
mov
das
sbb
imull
cmc
idivb
mov
dec
inc
add
inc
fsub
sub
mov
test
jne
adc
jge
or
dec
mov
push
mov
insl
dec
or
mov
icebp
mull
inc
scas
pop
ret
lahf
jp
dec
loopne
lcall
scas
hlt
xchg
inc
sahf
push
fsub
cmp
dec
dec
mov
into
cmp
ror
sti
dec
jae
popf
sbb
stos
add
sbb
cmp
enter
movsb
test
inc
sahf
es
out
sbb
movsl
xchg
sti
aas
adc
add
and
xchg
or
cmpsb
lret
mov
add
xor
lea
jne
pop
lods
inc
js
stos
and
sub
add
mov
mov
push
mov
inc
xchg
jmp
add
loope
xchg
mov
add
daa
cwtl
pop
dec
int3
and
aad
push
cld
jbe
inc
xchg
adc
sbb
ret
xchg
push
ja
repz
fidivrl
jl
repnz
scas
mov
or
push
dec
xor
jle
xchg
add
add
rorb
add
scas
repnz
inc
scas
mov
fiadds
sub
mov
sbb
call
lahf
mov
add
lret
sti
adc
divl
aas
inc
cli
ljmp
shll
add
mov
fdivr
cmp
movl
ret
mov
mov
aaa
popa
and
mov
lret
fstps
cmp
clc
inc
inc
pop
lea
and
aad
insb
pop
leave
adc
ret
inc
lods
popa
add
push
jecxz
mov
sub
inc
jp
adc
dec
pop
mov
xlat
dec
shlb
lahf
stc
dec
xor
stos
mov
jmp
js
sub
sbb
jle
mov
mov
mov
cmp
mov
push
gs
mov
ret
cmp
cmc
rorb
addr16
mov
sbb
frstor
inc
les
mov
lret
or
ds
xor
aaa
orb
sub
inc
sbb
in
mov
fldcw
dec
mov
inc
scas
dec
mov
inc
cmp
rcrl
mov
repz
popa
xor
cmpsl
cmp
pop
lods
cwtl
cmp
std
push
or
jno
xlat
jae
push
sub
jns
push
sarl
dec
fs
push
and
std
and
jl
sbb
sti
movsl
std
mov
pushf
jae
jg
jb
dec
sub
cltd
or
sbb
push
jnp
mov
aas
test
cld
xchg
inc
cmp
adc
scas
mov
out
test
test
pop
jbe,pt
gs
sub
dec
xor
mov
dec
repnz
jg
cs
adcb
push
xchg
lds
notb
and
inc
and
mov
mov
dec
lds
mov
es
dec
test
and
fldenv
fsubrs
stos
dec
ds
daa
and
shlb
pop
adc
and
sub
fldl
jmp
and
rcrl
and
xchg
sub
xchg
and
fldcw
jae
std
and
shll
lahf
lds
jmp
fmuls
xchg
pmaddwd
lods
push
leave
mov
mov
mov
fdecstp
xor
xchg
and
lret
sbb
test
cmp
dec
push
push
clc
lret
add
pop
or
and
and
push
and
lods
cmc
into
xchg
repnz
cmc
inc
aam
addr16
xchg
push
fwait
cwtl
adc
and
fsubr
or
fucomp
dec
mov
adc
enter
sarl
dec
fnstenv
cmc
inc
outsb
rol
jecxz
xor
and
dec
mov
lahf
std
push
cltd
sbb
push
cmovns
sub
sub
adc
dec
xchg
and
sbbl
hlt
std
les
addl
mov
and
cmp
fbstp
arpl
imul
xor
add
lds
adc
inc
mov
leave
das
push
push
inc
mov
lds
add
jbe
andb
pop
sub
xchg
push
mov
lds
test
cmpsb
cmc
jns
aas
pop
lods
sbb
and
add
push
sub
mov
mov
addr16
movsl
lds
xor
insl
imull
pop
inc
jp
inc
shlb
pop
ffree
lcall
js
mov
popf
xor
inc
fmuls
add
mov
shrl
jb
push
adc
pop
mov
add
int
cmc
dec
or
push
or
pop
push
fldl
and
test
or
and
cmpsl
push
lds
iret
or
adc
add
je
rcrb
daa
lds
bound
insl
jno
inc
in
mov
push
out
sbb
sti
push
jne
add
sahf
mov
cmc
cmp
pop
pop
adc
jb
cld
push
lds
faddl
lds
mov
call
out
leave
cld
dec
inc
jae
pop
rcrl
lds
push
icebp
mov
mov
hlt
sti
push
jge
push
mov
mov
stc
std
lock
mov
shrl
mov
lds
ror
clc
sub
pop
adc
adc
imul
lods
int
or
and
pop
imul
popl
adc
int
rcrb
aam
inc
ror
lds
lds
dec
lods
xchg
insl
push
rolb
test
popa
addr16
enter
xor
popf
ja
pop
popf
insl
adc
mov
mov
std
popf
cmp
jne,pt
dec
les
or
lods
xor
dec
xchg
mov
and
cli
iret
cmp
adc
pop
addr16
dec
adc
xor
xchg
push
push
push
cmp
iret
inc
push
lret
rcll
aad
inc
popa
mov
add
in
push
dec
movsl
loope
loope
mov
mov
rcrb
pop
lea
cmpsl
sub
mov
lea
iret
xor
mov
test
scas
inc
or
and
jg
lds
dec
push
push
and
xor
and
lds
cmp
add
and
push
lds
mov
push
ror
or
cmpsl
push
xor
lds
cmc
lds
aad
lds
int
dec
inc
jnp
and
ss
in
fbld
mov
push
jmp
and
push
iret
push
fldenv
push
int
push
leave
mov
lods
fstps
leave
mov
fimull
aad
leave
jb
lds
aad
or
clc
push
jle
int3
push
mov
or
enter
movsl
push
lods
mov
int
dec
test
roll
push
addl
pop
cmp
inc
mov
cmp
imul
push
mov
movsb
orl
add
es
add
xlat
and
dec
pop
jne
imul
dec
and
push
xor
mov
lods
xchg
aas
sbb
mov
es
icebp
sbb
xchg
mov
je
dec
pushf
insl
cmc
inc
xchg
dec
xlat
enter
xchg
roll
rol
cmp
or
push
shrb
inc
lret
jle
jecxz
push
jp
int3
out
fiadds
js
dec
iret
sarl
aas
adc
mov
jnp
add
push
pop
packssdw
mov
aam
outsl
sbb
and
dec
shrl
xchg
add
and
notb
lods
inc
xchg
xchg
push
jne
mov
nop
or
lock
cli
lret
cs
test
and
and
xchg
mov
xor
xchg
xor
xchg
lret
cs
cmc
push
hlt
aas
cltd
nop
pop
roll
sub
mov
push
push
stc
shlb
pop
vmovaps
js
into
push
push
jle
dec
rolb
test
pop
mov
fildl
xor
adc
and
inc
dec
das
jge
pop
dec
xor
xor
xor
sti
mov
inc
test
inc
fistpll
and
sub
ficoml
xchg
dec
gs
push
xor
dec
xorl
in
fcomip
pusha
and
add
dec
insl
xchg
dec
roll
inc
jbe
jp
pop
pop
fs
ret
addb
jnp
jns
push
loope
jmp
stos
jle
dec
xor
out
imul
inc
jmp
pop
mov
xchg
ror
sbb
stos
sbb
jae
cmp
lock
mov
jb,pt
out
stc
and
xor
sti
enter
cmpsb
les
les
xor
int3
loope
loop
jno
cmp
notl
and
adc
adc
test
daa
pop
mov
push
xchg
dec
movsb
add
enter
int
push
mov
test
dec
ror
int
ja
dec
sahf
shlb
imul
lods
cli
lds
scas
das
or
and
push
inc
test
rol
clc
das
ror
sub
inc
mov
mov
add
xchg
mov
push
inc
outsb
adc
mov
scas
jl
psubsb
inc
jmp
inc
xor
xchg
jl
cmp
or
mov
sub
int
inc
xchg
add
add
sub
sahf
ret
mov
mov
dec
sub
pop
sub
std
push
mov
pop
cmp
jne
xchg
jle
inc
mov
int3
push
mov
push
xchg
or
loope
bound
les
or
xor
imul
add
decb
inc
inc
xchg
mov
ret
or
dec
lea
loopne
repnz
in
icebp
aad
mov
loopne
aaa
lods
nop
sbb
test
inc
and
mov
push
loope
int3
push
enter
sbb
cmpsb
ja
in
test
sub
mov
shlb
push
enter
dec
inc
mov
neg
add
xor
incb
outsb
adc
and
dec
jmp
outsb
aas
pop
mov
js
mov
arpl
sub
cwtl
sub
push
push
aas
movb
bound
xor
dec
xor
loop
jns
incl
adc
xlat
jg
push
arpl
xor
jle
imul
stos
jne
push
fidivs
test
cmc
sub
cmp
shrl
mov
push
xchg
leave
add
je
cmp
push
jl
sub
mov
les
test
jmp
subl
dec
mov
push
xor
jnp
in
sub
call
stos
movb
cld
inc
and
sbb
sbb
pusha
dec
jb
sub
mov
xchg
popf
stos
test
bound
inc
lret
loop
inc
test
jg
js
stos
cli
test
cmp
push
loope
xorl
jae
jl
xor
les
push
cmp
jmp
out
lea
fsubrs
sub
lods
xor
shrl
out
subl
loope
add
cld
mov
cs
inc
dec
dec
dec
add
sub
subb
ret
aad
fmuls
loope
jb
jle
int3
inc
pop
mov
test
jmp
leave
inc
nop
dec
dec
and
rol
and
andl
test
out
inc
or
nop
pop
leave
inc
dec
rcll
mov
inc
mov
dec
push
adc
and
push
cld
and
push
lods
mov
push
ljmp
add
ret
enter
pop
loop
lods
les
lds
and
cmp
sbb
rcr
inc
jle
or
shrl
cmp
sbb
sbb
movsb
sbb
mov
jns
test
scas
mov
shll
push
lret
dec
jnp
fwait
jl
push
cmpsl
outsl
push
cmc
fdivrp
cmovne
sub
loop
cmp
sub
cwtl
ljmp
sub
push
int3
cs
push
jge
sub
or
fld
pop
sub
jp
popf
inc
aad
scas
and
daa
ja
dec
xor
daa
inc
jg
pop
add
sub
cli
js
inc
lds
jne,pn
cld
cmp
lret
sub
movsl
adc
or
je
cmp
push
inc
sbb
jns
add
in
push
sub
adc
fldl
ficomps
inc
shl
cmc
les
cmpsb
inc
mov
add
add
xchg
inc
push
cwtl
dec
shl
jg
xor
inc
scas
cs
add
xchg
xchg
popf
push
add
pop
sbb
iret
push
das
mov
dec
cmp
push
push
cmp
shll
inc
xor
jne
xchg
cmp
dec
cmp
ret
xor
sahf
enter
add
and
aad
or
clc
xor
sub
sub
cmp
xor
sub
or
lds
sub
and
jae
and
jnp
inc
arpl
pop
push
push
add
out
jns
xchg
xchg
dec
outsb
mov
mov
popf
xchg
pop
inc
pop
and
icebp
xor
lret
lods
inc
mov
shll
fsts
pushf
mov
stos
jle
rorl
mov
mov
lret
pop
cmp
je
fs
sub
sbb
inc
insl
shll
cmp
lret
cmp
stos
and
hlt
addr16
xor
inc
adc
fwait
push
sub
xor
push
idiv
xor
outsb
jo
sti
fidivl
stos
push
xchg
lea
sub
sti
std
push
adc
jae
movsl
inc
inc
pop
sbb
and
pop
rcll
jne
lret
cld
test
les
les
mov
test
dec
pop
or
testb
jle
lds
ss
pop
and
repnz
mov
push
push
adcl
sub
inc
and
test
fsubrs
and
cld
xor
jne
out
inc
je
dec
js
sub
cli
and
pop
movsb
xchg
lds
push
push
add
sub
xchg
or
mov
pop
push
fsubrs
in
add
shrb
lods
test
mov
xchg
into
cmp
xor
in
stos
sarl
inc
dec
repnz
addb
mov
push
stos
push
push
mov
dec
jg
clc
adc
mov
sbb
cmpsb
in
jbe
lea
daa
cmp
stos
lock
into
pop
mov
lock
dec
ret
arpl
hlt
out
fs
push
pop
and
sbb
pop
add
push
mov
xor
inc
jecxz
movsb
inc
jmp
ret
mov
gs
roll
sbb
mov
sbb
dec
dec
xor
mov
fbld
shrb
jae
push
sub
dec
inc
cmpsb
test
inc
pop
add
scas
xchg
faddl
rolb
imul
or
rcrl
or
lods
push
xor
add
cld
popa
mov
jne
mov
int
sbb
dec
sbb
push
sahf
shlb
repnz
dec
cmpsb
mov
push
mov
je
out
inc
loop
jns
loop
and
push
cmpsl
jge
cmp
mov
rol
pop
repz
jmp
test
and
pop
outsl
test
cmp
ja
es
fldt
adc
fwait
arpl
pop
jo
out
movsb
es
adc
cmpsl
jmp
call
push
dec
fsts
in
dec
push
xorl
sbb
aas
ror
mov
dec
popf
and
sti
jg
cmp
inc
push
inc
inc
ret
and
xchg
dec
rcrl
lods
rolb
mov
jl
jg
sbb
test
dec
out
fwait
pop
and
imul
in
cli
je
cmp
and
mov
push
inc
test
test
or
ret
push
xlat
leave
cmpsl
dec
fidivs
xor
inc
sbb
sub
pop
dec
push
sub
cmpsb
jmp
sub
push
mov
scas
jb
jbe,pn
sahf
sbb
mov
ds
adc
push
rcll
inc
test
sti
pusha
jno
push
adc
repnz
outsl
push
and
shlb
jns,pn
mov
rolb
inc
mov
xor
imul
sub
jge
popfw
jns
lea
cmp
and
out
imul
scas
fdivs
push
gs
inc
fistps
adc
inc
fbstp
shlb
mov
xlat
xchg
cld
in
jbe
scas
rorb
sub
xor
adc
dec
inc
inc
push
inc
cmp
add
push
push
into
and
popa
or
adc
popf
xchg
popf
push
leave
pop
ret
pushf
inc
mov
popf
stos
xor
add
inc
fs
xchg
jle
ffree
adc
dec
cmp
popa
lret
pusha
add
mov
xchg
js
gs
call
sub
fistps
and
repz
jl
cld
movsl
stc
scas
repnz
shrl
shlb
inc
aas
xor
filds
cltd
mov
pop
gs
pop
or
push
jo
nop
mov
push
lahf
sbb
cmp
loop
cmp
inc
loopne
scas
popa
popl
imul
jne
ljmp
nop
mov
fstpl
std
dec
pop
out
jno
cmp
fwait
xor
add
imul
aam
xchg
xor
mov
insb
jg
sahf
cmp
outsb
cs
push
dec
ljmp
push
test
dec
dec
and
push
inc
and
mov
xchg
dec
test
in
mov
push
pop
imul
iret
push
aam
dec
scas
xchg
les
or
xchg
nop
pop
cs
add
inc
jmp
inc
adc
xor
addr16
ja
imul
imul
gs
fcoml
inc
and
lea
xlat
mov
jge
lcall
dec
fcomps
sbb
dec
push
icebp
push
cmp
adc
fidivl
xchg
mov
int
cmp
pop
jmp
push
clc
adc
loope
cmp
fstps
push
sub
jns
iret
iret
add
and
loopne
lods
stos
cli
hlt
or
ljmp
cmc
dec
cmp
xor
sbb
sti
or
or
sbb
add
inc
adc
rcll
test
and
sub
pop
and
inc
mov
movsl
mov
sub
inc
mov
dec
mov
inc
into
inc
sub
repnz
jl
sbb
inc
cmp
xor
test
push
dec
incb
and
in
inc
xchg
push
shl
add
in
xchg
fisttps
movsl
xor
sbb
jnp
xchg
adc
dec
and
add
jmp
dec
loope
inc
xor
mov
dec
dec
inc
andb
and
push
push
scas
sahf
imul
les
dec
ja
add
xor
imul
and
jle
cmc
add
ds
add
std
popf
in
jnp
cmp
lea
mov
jmp
shrl
pop
pop
sbb
ror
hlt
imull
jg
sub
xor
sub
imul
lock
cli
inc
mov
jae
and
mov
adc
movsl
mov
xlat
in
xor
std
jne
pop
inc
add
adc
xor
and
xchg
mov
mov
push
jno
clc
lods
xlat
push
cmp
sbb
xlat
insl
dec
xor
lock
add
sub
mov
adc
dec
test
nop
gs
and
jmp
jg
jg
pop
pusha
and
scas
mov
dec
jge
gs
hlt
ficoml
fs
pop
or
call
jae
stos
ja
call
jo
popf
aas
sarl
fs
push
pushf
outsl
lods
js
cs
inc
inc
sbb
push
test
xor
js
pusha
cmp
ret
push
push
insl
fidivs
outsb
cmp
inc
or
pop
loop
in
jb
mov
mov
jae
subb
jno
shrb
test
rcrb
das
inc
inc
mov
imul
test
mov
or
xor
inc
pop
push
enter
stos
ja
loop
lret
pop
decb
push
cli
jle
and
inc
mov
lods
shll
jle
mov
sti
jno
jo
arpl
call
ja
fbstp
add
stos
mov
push
lcall
sub
inc
cmp
lahf
test
push
or
xchg
jns
xchg
mov
adc
hlt
movsl
loop
xor
call
cld
rorl
fnstsw
jle
rcll
lds
call
dec
cmp
push
push
add
pextrw
xor
inc
test
arpl
mov
cs
inc
mov
movsb
ja
mov
add
insl
addr16
mov
hlt
cmp
rcll
lds
cmp
aad
call
adc
or
mov
xchg
cmp
push
pop
rcr
lds
aad
pop
push
ret
leave
dec
or
into
es
pop
dec
shl
icebp
repnz
adc
pop
out
or
dec
sub
in
pop
or
in
vmovups
pop
push
adc
adc
jnp
add
or
or
xor
ss
fldcw
imulb
add
icebp
std
push
test
xor
test
pop
clc
mov
pop
cwtl
cmpsb
xchg
pop
ja
addr16
mov
mov
rorb
jne
sbb
xchg
popf
push
inc
pop
cmp
fimull
xor
xlat
cmpsb
xchg
pop
cld
dec
lahf
das
repnz
mov
xchg
insl
push
mov
lea
in
jbe
mov
inc
in
imul
test
stos
popa
arpl
inc
mov
ss
adc
fiadds
inc
stos
lret
xchg
das
mov
sub
inc
add
lds
or
push
mov
movsb
rol
out
and
dec
cmpsb
pop
add
sbb
sarb
push
jg
lret
inc
sahf
movsl
punpckhwd
test
adc
mov
ja
fidivs
adc
inc
add
jg
cmp
imul
sub
inc
pop
push
and
and
xchg
js
adc
sbb
push
inc
mov
sbb
popa
in
jb
cmpsb
xchg
push
xchg
insl
sahf
cltd
and
mov
push
shlb
mov
cmp
lods
cmc
andl
push
jno
sbb
ja
fbstp
and
ret
mov
xchg
sbb
test
adc
add
mov
xor
popa
stos
cmp
lret
or
jp
push
sub
fldcw
lahf
dec
mov
push
in
ja
inc
jge
nop
rclb
pop
mov
mov
mov
push
inc
cmp
jo
mov
inc
mov
into
xor
lret
mov
lock
imul
cld
je
jnp
mov
xor
adc
dec
jnp
jg
inc
inc
cmp
jbe
xor
shl
cmovns
popf
scas
adc
or
cmp
lds
and
outsl
add
pusha
mov
sub
dec
inc
inc
sub
mov
fmuls
flds
cmpsb
adc
aaa
and
icebp
mov
fbld
jle
dec
adc
jne
loop
push
cmp
dec
dec
mov
pop
test
rorb
mov
dec
inc
lahf
scas
and
cli
inc
ds
mov
ja
jge
add
cld
mov
addr16
imul
mov
pusha
cli
mov
lea
inc
sbb
sub
lahf
mov
loopne
xchg
ror
jecxz
repnz
or
fisttpll
sbb
test
stos
das
xor
aad
adc
cmpsl
sub
insl
imul
das
cmpsl
in
jno
mov
cmp
ljmp
jae
sub
add
clc
je
hlt
lock
jecxz
inc
mov
jl
addr16
cmp
divb
lcall
js
mov
push
leave
loop
cmpb
cmp
jno
fwait
test
mov
cwtl
dec
sub
les
jle
gs
xlat
cmp
or
rorl
mov
and
add
test
js
imul
xlat
dec
xchg
popa
popf
fstpl
sarb
adc
cmp
insb
inc
aam
and
xchg
mov
and
outsb
out
cmpsl
xor
sub
push
jae
jge
shlb
scas
push
mov
loope
imul
xchg
xchg
test
jne
sarb
xchg
mov
mov
cmp
es
lods
les
add
pop
add
test
mov
jmp
test
jg
add
dec
add
test
adc
repz
xchg
fldl
inc
mov
daa
and
pop
insl
jnp
shl
jg
aam
lods
mov
shll
inc
test
mov
push
pop
in
cmp
or
lret
shlb
rcl
lahf
pop
dec
jle
arpl
pop
jno
inc
aad
mov
xlat
test
sbb
imul
cmc
leave
xchg
xor
cmpl
movsb
add
adc
lahf
inc
sbb
inc
jae
movsb
dec
sub
sub
adc
dec
lret
mov
dec
jns
and
jbe
das
lds
lahf
in
inc
mov
xor
jne
ljmp
sbb
testb
sub
imul
hlt
les
ss
pop
aas
cmp
ss
xchg
jecxz
adc
cmc
mov
dec
jge
xchg
pop
test
add
jp
xchg
sub
pop
and
xchg
shll
jae
call
inc
scas
dec
in
mov
xor
xor
les
add
xor
shr
loope
ret
push
push
imul
out
jb
mov
dec
lahf
push
ret
scas
dec
test
inc
push
push
pop
or
test
addl
xchg
add
lds
push
fs
jle
daa
push
dec
add
test
xor
pop
orl
pop
mov
inc
dec
dec
add
test
cs
mov
and
loopne
cmp
ss
dec
pop
neg
jo
in
xor
call
popa
fsub
scas
mov
je
scas
lock
rclb
mov
inc
fisttpl
adc
mov
rorl
jbe
fildll
inc
push
dec
pop
lds
or
adc
xchg
mov
fisttpl
in
sbb
aam
stos
loope
dec
andl
mov
int3
sub
cmp
xchg
lds
je
jl
std
and
add
inc
xor
jne
call
dec
add
dec
add
jle
push
jmp
into
lods
pop
je
cmpsb
ret
dec
scas
popa
lea
add
inc
push
es
aas
inc
cli
xor
xor
jle
mov
test
imul
mov
lds
push
leave
sarl
cld
and
fimull
inc
mov
mov
mov
inc
outsl
push
adcl
dec
pop
dec
xor
pusha
cmc
add
cmp
shrb
jmp
lret
adc
pop
or
fwait
pop
xchg
or
dec
dec
or
sti
movsb
jbe
stos
bound
add
mov
mov
xchg
jmp
fisubl
imul
mov
ds
push
rcrl
push
loope
lea
push
pop
push
addb
sbb
push
sub
jg
add
add
jl
in
dec
in
or
cs
enter
jns
xchg
and
stos
jg
and
jne
dec
add
inc
push
dec
jnp
jge
fdivs
les
test
cmp
in
xchg
mov
rcrb
hlt
and
daa
fucom
and
sarb
add
push
jg
addr16
lret
or
dec
stos
leave
lock
stos
add
fbstp
mov
mov
aam
dec
int3
pushf
dec
push
mov
das
sbb
sub
adc
xor
add
mov
lods
pop
cmp
dec
mov
dec
or
push
push
or
sub
xchg
jg
fldenv
and
xor
dec
movl
add
pop
mov
out
pop
mov
cmpsb
push
cltd
and
ret
imul
pushf
jne
adc
and
sub
mov
sarb
int3
add
pop
rorl
sub
lret
adc
or
sarl
pop
rcll
add
cmc
movsl
mov
sbb
cmp
cmpsl
xor
leave
inc
test
adc
jno
add
add
push
dec
data16
dec
push
adc
push
fnsave
xor
jmp
loope
xor
cmpsl
fucom
xor
into
adc
xor
fidivl
adc
inc
or
arpl
dec
jno
pop
or
xchg
ffree
mov
lods
mov
cltd
hlt
adc
xlat
mov
repnz
push
loope
hlt
lahf
or
movsb
cld
and
rorl
mulb
cmpsb
lea
inc
push
es
jne
push
jle
lret
push
xchg
dec
test
pop
shll
movsb
cmp
jbe
push
sbb
mov
leave
cmpsl
add
mov
into
imul
ret
dec
add
aaa
jecxz
push
cltd
fmul
movb
dec
sbb
mov
int3
sbb
cs
fistps
ja
xchg
mov
cmp
in
inc
movb
jnp
cmp
push
mov
sub
inc
addr16
add
jne
je
scas
cmp
mov
test
push
rcll
mov
add
ljmp
fcompl
and
adc
jle
test
lods
ja
sarb
ja
enter
repnz
push
movsl
dec
loop
nop
inc
cwtl
fdivl
js
fwait
jle
rclb
test
dec
xchg
push
mov
mov
xor
inc
xchg
push
pop
xor
int
dec
cmpsb
xchg
shll
lds
jg
jo
pop
mov
adc
divl
inc
lahf
cmp
mov
or
and
xchg
lahf
adc
repnz
and
jo
pop
mov
sbb
aaa
ss
sarb
les
lds
repnz
xchg
and
xchg
lret
mov
mov
shll
or
xchg
movsb
mov
lret
sub
inc
movsb
shll
enter
sub
dec
add
ds
push
jp
shll
jmp
sahf
lea
dec
das
popf
ljmp
and
push
movsl
ret
aad
xchg
push
aas
adc
add
mov
xor
sbb
jmp
or
mov
stos
xor
test
les
sub
push
cmpsl
loopne
fcomps
xor
or
ficoms
push
sub
rcll
outsb
xchg
cmpsl
mov
fbld
fcompl
add
in
cld
out
inc
popa
sub
jns
ja
jno
hlt
jmp
xchg
pop
aad
mov
cmp
dec
jle
fistpll
cltd
xor
loopne
insl
inc
xor
mov
dec
inc
and
add
xchg
jbe
ja
roll
shrl
push
push
cmp
push
xorl
mov
rcll
lret
icebp
repz
icebp
jle
mov
and
hlt
jmp
pop
push
fists
sub
in
jle
or
roll
ret
push
mov
lods
pop
cmp
lcall
loope
iret
xchg
aam
movsl
std
out
and
mov
popa
adc
stos
ljmp
imul
add
lock
cmp
pop
push
sub
shlb
lods
add
pop
sbbl
shll
or
sbb
mov
icebp
mov
fsubrs
stos
or
cmp
push
dec
loopne
enter
xor
fdivs
add
shlb
cltd
dec
pop
mov
jae
mov
inc
xchg
add
ljmp
movsb
aaa
xor
sub
jle
mov
or
xchg
in
and
dec
icebp
pusha
xor
jmp
bound
stc
xchg
push
xlat
popa
test
dec
mov
je
fdiv
adc
sbb
ja
test
sub
xor
pop
data16
cmpsb
push
sbb
std
outsb
leave
fmuls
jle
lahf
push
fwait
pop
negl
cs
pop
jl
in
nop
inc
mov
jbe
adc
mov
lods
inc
xchg
jb
mov
in
jp
mov
push
inc
ficoml
add
daa
dec
fidivrl
inc
dec
fisttps
inc
jns
mov
jnp
fs
ja
adc
dec
stos
cmp
enter
clc
jmp
mov
adc
inc
das
xor
dec
scas
jae
and
mov
test
jmp
sbb
push
or
jl
pop
cmpsl
in
imul
xchg
dec
add
mov
loope
dec
cmpl
xlat
sub
sub
scas
push
push
mov
add
gs
adc
int3
mov
es
or
imul
pop
pushl
lea
and
jle
mov
scas
xchg
int
int3
daa
mov
mov
mov
stos
imul
inc
cmc
adc
hlt
out
mov
mov
pmuludq
in
fwait
std
add
sub
mov
int
pop
arpl
mov
das
gs
and
jg
push
cmp
aaa
inc
cli
lods
mov
bnd
sbb
adc
xor
dec
movb
add
and
and
xchg
push
mov
lods
jno
arpl
dec
leave
xchg
mov
lock
dec
lods
xchg
iret
inc
mov
outsl
or
and
cld
repz
adc
dec
add
pop
orb
lds
test
cmc
aad
jb
sub
sub
dec
dec
cmp
dec
mov
mov
and
add
dec
xor
push
xchg
rcll
inc
mov
lret
push
push
lret
jecxz
stc
or
mov
hlt
bound
add
mov
nop
call
int3
fildll
dec
or
jae
movsb
add
dec
sub
pop
mov
int
xor
inc
and
adc
sub
test
sbb
sub
and
das
mov
repz
push
aas
inc
push
adc
dec
push
sub
push
ja
dec
pop
and
pusha
push
pop
jp
mov
sarl
dec
test
daa
push
cmpsb
gs
xchg
hlt
clc
mov
inc
cmp
push
mov
stos
enter
enter
iret
shl
fsub
arpl
pop
pop
push
push
in
cmp
popf
sub
rcrl
inc
lret
jecxz
fs
and
jno
adc
dec
repz
mov
lahf
jnp
jp
cmp
dec
cmp
sti
mov
out
jae
pop
jnp
sbb
inc
dec
pop
pop
mov
and
xor
scas
pop
or
insb
jns
in
int3
fs
lock
fwait
pop
loopne
xor
mov
dec
aad
push
pop
adc
iret
jl
rorl
jge
pop
mov
cmp
push
mov
xchg
fsubs
out
xchg
stos
sub
cmpl
cmp
pop
and
mov
lds
movsl
xchg
mov
xor
lret
fnsave
lahf
pushf
pop
in
lea
push
loope
dec
ja
xor
mov
mov
pop
rcrb
xor
roll
test
mov
mov
pop
popf
cmc
lea
int
inc
xchg
mov
push
xchg
and
xchg
test
sbb
add
fwait
pusha
inc
incb
pop
xchg
xchg
or
nop
mov
xchg
popa
mov
xchg
add
jmp
outsl
mov
dec
imul
lcall
aad
ljmp
xchg
test
or
jae
fcmove
jle
dec
aad
push
test
or
and
es
stos
sti
cmp
or
adc
inc
or
arpl
leave
hlt
pop
xlat
aad
in
or
xchg
xor
incl
cmpsl
jge
push
xchg
jge
js
dec
test
adc
je
nop
xor
les
dec
jne
lret
dec
negl
push
mov
xchg
xor
cs
out
loope
rcrl
loop
xor
jb
in
jns
xlat
adc
push
cmc
movsl
adc
sub
sub
and
jge
cmpsb
jne
cmp
adc
inc
push
jle
cli
mov
incl
ja
sub
leave
sahf
adc
test
les
push
jbe
add
add
xor
jne
stc
jle
jne
jecxz
sub
es
xor
scas
cld
inc
movsb
inc
in
add
rorb
or
out
ret
dec
scas
decb
imulb
std
push
jne
sub
cmp
shll
inc
imul
les
mov
push
sbb
jmp
pop
jle
aaa
push
fistl
add
or
fstps
xchg
dec
and
dec
push
ss
push
push
cmp
cltd
xor
inc
inc
lds
push
in
aas
inc
lahf
movsb
pushf
xor
pop
sub
aas
dec
dec
in
sti
int
dec
mov
xchg
push
cmp
ja
mov
in
out
ds
mov
sahf
mov
xor
imul
mov
test
inc
loope
cmc
mov
mov
mov
pop
test
scas
cld
mov
mov
shll
in
push
rcl
std
dec
add
xchg
popa
sbb
jmp
movsl
push
mov
push
rcl
xor
pop
sub
or
sbb
lret
lds
push
mov
add
cmp
enter
lods
dec
xchg
dec
adc
sarb
out
pop
in
push
scas
std
jge
jae
daa
and
ret
addl
push
lret
push
imul
pmuludq
test
std
or
mov
inc
stos
in
lea
and
add
shrb
dec
movsb
add
xchg
ja
fst
and
dec
sahf
out
stc
xchg
in
cmp
pop
pop
and
dec
stos
lock
cmp
add
mov
lret
aas
jp
nop
pop
xor
std
mov
cmpsb
mov
and
jns
loopne
cmp
dec
or
pop
inc
or
dec
inc
roll
dec
inc
xor
mov
jecxz
fdivrs
adc
sub
imul
out
push
cltd
dec
mov
orl
enter
adc
test
fstp
push
roll
push
adc
lods
mov
call
push
sbb
mov
xchg
int
orb
xor
mov
mov
push
in
dec
adc
lcall
outsl
movb
decb
test
sarb
add
aaa
push
subl
dec
sub
mov
and
int3
push
fmul
ficomps
not
pop
scas
or
aam
gs
iret
push
sub
push
loope
mov
jmp
adc
hlt
dec
xor
roll
inc
fsub
dec
ja
scas
jns
cmc
mov
or
les
add
pop
mov
xor
push
jne
cld
mov
mov
jnp
jle
mov
cwtl
pusha
daa
negb
mov
cmpsl
in
movsb
pushf
call
xor
mov
mov
into
xorl
push
fwait
xor
push
mov
push
push
inc
xchg
add
rcll
addr16
mov
push
cmpl
ret
add
inc
mov
std
dec
inc
xor
xchg
sbb
movsl
lds
lods
xor
lods
add
cmc
cld
xor
insb
cmp
jb
lds
cmc
jp
mov
cs
data16
inc
adc
jge
or
rcl
cmc
divl
jne
push
test
mov
cmpsb
test
bound
push
cmp
adc
dec
das
daa
dec
push
xchg
mov
shl
call
mov
push
hlt
icebp
jecxz
inc
movsl
stos
xor
js
pop
loope
push
call
mov
xlat
lcall
inc
mov
add
push
leave
divl
mov
dec
cmc
adc
scas
and
andb
or
jb
fstpt
cli
bound
popa
fdivrs
push
lcall
inc
cmp
ljmp
fdivrl
sub
sbb
mov
aaa
mov
jnp
xchg
sub
fisubl
scas
lods
pushl
sub
stos
fcoms
loop
push
jle
loopne
or
sarl
inc
cs
mov
test
inc
adc
sub
cld
sub
loopne
mov
stos
xor
ret
in
leave
jnp
int
add
dec
inc
loopne
dec
int3
dec
mov
inc
mov
loopne
jp
cs
out
sbb
add
scas
test
stos
pushf
adc
push
lea
lret
adc
cmp
lods
push
daa
push
aas
test
xlat
out
lods
sahf
lea
gs
jne
movsb
stc
push
inc
sbb
sar
rorb
push
pop
xor
xchg
mov
fs
hlt
lds
pop
adc
mov
inc
lds
daa
out
dec
popf
lods
mov
mov
mov
push
rcll
fdiv
lret
jo
ret
inc
ret
cmp
add
cmp
sub
jl
pop
into
sarl
out
ja
xlat
add
inc
cmp
loope
jp
cmp
dec
test
int
fldl
lds
shlb
loop
or
cltd
mov
push
push
fsubl
cmp
stc
mov
mov
hlt
push
or
dec
rcll
orb
push
add
addb
test
push
inc
dec
pop
xor
sbb
ret
adc
enter
js
mov
fisttpll
cmpsb
out
shrb
push
xchg
jl
or
xchg
and
xchg
and
arpl
clc
vcvtsi2sd
out
test
jg
adc
mov
jbe
mulb
sarb
cmp
mov
std
pop
push
shl
stos
call
dec
repz
pop
cmc
test
push
cmp
movl
subl
hlt
jne
fsubrs
and
push
mov
mov
sbb
xchg
popa
popa
add
or
aaa
dec
cmp
push
movsb
xor
sbb
stos
mov
movsl
xchg
xchg
dec
sbb
std
rolb
adc
popf
push
outsb
aas
loopne
js
pusha
push
mov
mov
pop
xlat
test
xchg
mov
pop
mov
hlt
mov
sub
dec
hlt
clc
les
add
ja
cltd
fsubl
fildl
xor
adc
stos
and
shlb
pop
inc
and
ljmp
and
sub
std
lds
aad
and
cmp
mov
imul
xor
xor
sub
mov
mov
popf
loop
pop
cmpl
inc
pop
enter
jl
dec
and
nop
xchg
mov
decb
jne
pop
iret
in
push
dec
jae
shl
xor
sub
jbe
stos
inc
jp
stos
push
add
jmp
sarl
mov
scas
inc
mov
add
movsb
sub
adc
jl
stos
sahf
nop
dec
push
lret
xchg
cmpsl
sarl
sub
adc
ds
cltd
loope
push
mov
dec
xor
into
int3
popa
or
fisttpl
jne
movsb
xchg
mov
adc
dec
mov
jmp
test
in
and
mov
in
push
and
mov
rolb
xor
and
push
es
and
std
mov
push
xlat
push
and
xchg
dec
rorl
mov
rorb
sbbb
hlt
fwait
xchg
popf
es
cmp
cmp
js
fsubl
ja
push
add
mov
pop
sbb
aad
inc
cs
fidivs
sub
push
hlt
imul
jge
dec
repnz
sub
cmp
rorl
popf
xor
test
pop
cwtl
out
clc
push
cld
stc
and
dec
sub
inc
push
cli
push
sub
das
xorb
dec
stos
and
xor
xchg
lcall
aaa
dec
fstpt
je
xor
dec
inc
test
xchg
push
mov
xor
jg
or
pop
bnd
scas
dec
es
in
cmp
daa
outsb
sub
fdivs
add
xchg
iret
fistpll
test
int3
dec
xchg
push
insb
xchg
xlat
rcr
in
std
test
xchg
dec
icebp
insb
mov
fwait
mov
sbb
mov
dec
cmpl
movsb
sub
cld
rcrl
jmp
imul
scas
fsubr
aas
shlb
jle
enter
adc
loope
add
inc
cmpsb
movsb
out
or
rorl
push
and
hlt
jmp
push
cmp
shll
movsl
xchg
fs
daa
mov
cmc
dec
movsl
mov
je
daa
and
xchg
adc
int
mov
nop
adc
xor
enter
and
pop
ret
jp
es
cmp
adc
mov
enter
push
push
scas
mov
adc
inc
loope
xor
mov
test
test
mov
dec
adc
fdiv
cwtl
test
ss
and
cmpsb
dec
mov
jg
inc
mov
leave
adc
in
add
dec
mov
aas
je
lods
and
push
dec
shrb
cwtl
popa
dec
cmp
dec
ljmp
cmp
movsb
sub
aas
aad
and
fstpl
movl
stos
cmpsb
stc
push
loop
jmp
mov
sahf
enter
cmpl
shll
mov
into
jne
mov
jg
and
stos
adc
lea
cmpsb
inc
xlat
jg
insl
ret
push
popf
pop
ret
sbbl
inc
pop
push
mov
mov
or
mov
and
jne
in
bound
js
test
bound
test
jmp
cwtl
test
inc
jge
repnz
sub
jb
movsb
pop
in
aam
iret
mov
jnp
gs
lret
rorl
sahf
or
adc
sub
sahf
jnp
jne
fisttps
ss
fistpl
stos
jg
in
push
jge
inc
imul
sub
cwtl
mov
lock
ljmp
fcmovne
xor
sti
test
imul
rcll
leave
adcl
ret
ret
sub
adcl
int
adc
sub
sub
xor
mov
add
adc
shrl
adc
mov
sbb
sbb
mov
or
pop
je
xlat
xchg
ret
lock
js
push
movsl
xchg
stos
call
shrb
gs
inc
addl
xor
mov
xor
rcl
pop
cmp
stos
xor
popf
mov
cmpsb
std
sarb
mov
xor
js
lods
xchg
leave
jbe,pn
sbb
fwait
jmp
jo
orl
pop
xchg
push
xchg
rcrb
std
in
mov
outsl
sub
push
lcall
sbb
popf
orl
repz
sahf
clc
fsubrs
imul
incl
add
fs
out
cltd
and
in
sbb
lds
xchg
dec
loop
ds
mov
and
fcoms
scas
fldl
sbbb
clc
mov
jns
cs
es
sub
jnp
pop
es
xorps
enter
sub
inc
add
stos
pop
xchg
stos
stos
mov
cltd
movsl
dec
adc
movl
cmp
mov
pop
cld
pusha
dec
mov
fimull
and
xchg
fs
aas
or
sbbl
std
push
add
inc
pop
js
adc
inc
fdivl
pop
dec
or
test
aad
mov
pop
xchg
es
mov
pusha
cmp
jg
into
scas
dec
test
or
pushf
cmp
jp
or
rclb
and
dec
cmp
mov
xor
add
rcr
inc
mov
xchg
divb
xor
sti
shld
xchg
push
loop
movsl
adcl
add
cmp
loope
mov
and
add
xor
js
movsl
xchg
dec
cmpl
sti
sub
out
sub
and
mov
adc
dec
lret
pop
insl
push
std
mov
sbb
cmp
movsl
mov
mov
dec
es
movsb
cwtl
push
cmpsl
into
sarb
xor
scas
xor
daa
rorb
and
add
fs
daa
ret
inc
adc
int3
loop
fmull
aas
jmp
sub
push
sub
and
ljmp
add
add
and
xchg
daa
in
pop
or
out
cmc
or
movl
lahf
dec
pop
mov
add
jne
pop
dec
mov
lea
rorb
clc
dec
ds
cmp
stc
dec
mov
inc
push
pop
push
inc
cltd
mov
loope
and
inc
sub
mov
addb
dec
cmp
lret
xor
popa
mov
lcall
push
jne
cli
rcll
pop
cmp
loope
mov
imul
hlt
insb
mov
das
repnz
je
mov
out
sub
cmp
jae
shrl
inc
test
xor
lcall
ja
shrl
lea
xor
fstps
sti
inc
add
shll
jmp
insl
fwait
pop
sar
sbb
ficoml
ja
fsubs
pop
scas
inc
orb
cmp
ret
jge
std
pop
sarl
lcall
mov
jp
cmp
or
mov
int
jnp
mov
jp
xor
xchg
mov
mov
or
inc
enter
lahf
outsl
leave
sub
or
dec
cmc
ss
xor
inc
int
inc
es
jge
push
cmp
cmpsl
addl
push
ret
sub
cmp
sub
push
leave
jecxz
loopne
dec
add
fisttpll
push
das
mov
mov
pop
sub
pop
mov
inc
stos
push
cmp
js,pt
sub
or
xchg
xor
jno
push
add
push
inc
jns
push
insb
mov
push
jle
in
scas
rorb
imul
push
push
adc
aas
xor
inc
les
pop
dec
lds
or
ss
jns
in
push
jae
sub
add
mov
and
sbb
sub
and
xchg
lcall
ds
ja
xchg
jne
fidivs
clc
or
cwtl
stc
push
cmp
mov
call
xor
xchg
lds
ds
iret
cmp
push
push
lahf
mov
xchg
and
jp
push
and
or
addl
cwtl
push
fldenv
pop
mov
bound
fisubrl
int
mov
hlt
push
jge
lea
es
push
ds
scas
cmpsb
sarl
and
xor
cmp
and
ljmp
and
inc
xor
scas
mov
fcoml
sub
sub
adc
cmp
jo
or
lods
in
pop
rorb
repnz
inc
and
hlt
sbbb
movb
movb
cmc
mov
inc
es
push
popf
fwait
mov
sbb
adc
aam
lret
mov
iret
enter
pop
ds
sbb
pop
mov
push
fst
xor
shr
xor
test
dec
int
push
or
xchg
adc
sub
fs
pop
mov
lahf
loop
inc
push
lcall
rorl
sbb
and
aas
fwait
inc
xor
testb
movsb
pop
pop
ljmp
hlt
jge
adcl
pop
test
rclb
stos
mov
popa
dec
cmpsb
dec
or
stc
cmp
pop
shrl
test
pushf
cmpsb
fistpl
push
scas
push
cmp
addr16
jne
rorl
mov
add
fdivrl
and
ljmp
xor
loope
sub
cmp
sbb
cmp
push
scas
cmp
push
adc
ljmp
fistps
jge
insl
lods
inc
sarl
scas
jge
js
es
cmp
les
jbe
shl
cmc
jl
psubw
pop
adc
ss
push
cmpsb
xchg
jmp
testb
push
movsb
and
lds
cmp
push
cs
jno
pop
sub
jg
bound
push
int3
movb
mov
aas
inc
sarb
xor
fsubrs
lods
cli
stc
or
hlt
sbb
xor
mov
pop
xor
stos
adc
es
clc
add
cmp
cli
adc
sub
xchg
hlt
xor
and
enter
roll
xchg
rol
push
dec
shll
aam
push
push
xor
hlt
mov
push
add
dec
inc
enter
lock
ror
mov
hlt
je
int3
cmc
sbb
hlt
xchg
test
outsb
aad
jae
or
popf
out
in
incl
dec
out
mov
mov
mov
scas
cli
jae
pusha
fnsave
ja
add
push
aaa
shrb
jae
mov
test
dec
cmc
orl
ja
das
and
mov
dec
mov
leave
loop
cmp
or
mov
mov
cmp
aam
sbb
inc
sbb
dec
mov
push
xor
adc
int3
mov
xchg
sub
adc
adc
ret
fdivrs
cmc
les
xchg
movsb
dec
push
mov
pop
xorb
push
mov
or
lds
mov
cmp
mov
int3
mov
cmp
dec
es
xchg
filds
add
mov
dec
test
mov
aaa
jnp
ficomps
mov
jo
orl
xchg
mov
mov
ja
mov
mov
ds
lret
sbb
std
add
cmc
sub
cmc
xchg
dec
xchg
fsubl
mov
enter
inc
mov
stos
cld
fidivrl
jo
dec
mov
jo
fbstp
xchg
xor
dec
jb
out
dec
jge
mov
aas
and
fimuls
cmpsl
das
in
mov
xchg
dec
push
mov
pop
cmp
sbb
ret
xor
lods
aad
mov
sbb
rclb
jl
dec
fmull
inc
jg
sbb
test
aad
pop
clc
jo
andl
lret
adc
xor
loopne
xchg
cmpsb
frstor
dec
cmovo
sub
shl
adc
test
and
sub
orl
pusha
sub
dec
adc
inc
mov
and
push
ret
cmp
mov
lahf
cmc
mov
push
inc
sub
mov
mov
add
mov
iret
lods
lret
nop
repnz
sub
jp
stos
testb
rorl
fs
in
icebp
push
sbb
sub
xchg
mov
cmpsb
pop
jne
ss
push
xor
mov
pushf
test
enter
sub
sarl
inc
bound
xor
mov
push
sub
add
xchg
pop
aas
sbb
push
mov
adc
jae
lods
loopne
cmp
fdivrs
sub
mov
adc
fcomps
mov
add
adc
pop
aam
lods
push
bound
les
out
jo
ljmp
xor
movsb
test
and
xor
xor
jle
lods
mov
pop
dec
push
lea
xor
enter
imul
dec
insb
xor
jmp
gs
xlat
jne
movsl
test
jnp
movsb
stos
lock
xchg
dec
testb
pusha
test
stc
push
jb
or
cs
jne
jecxz
adc
fbld
repz
pop
cmpsb
add
lcall
mov
gs
jg
push
jb
jnp
cwtl
adc
ss
xor
fcmovnu
leave
ret
cmp
mov
and
adcl
sbb
push
cld
call
mov
notl
cs
das
into
dec
dec
test
and
subb
cmp
sti
test
in
xor
cltd
out
push
les
ljmp
sub
push
lds
push
es
movsl
mov
sbb
push
pop
inc
mov
sub
add
push
movsb
mov
lds
loope
mov
mov
leave
icebp
jae
inc
je
and
arpl
mov
xorl
jo
dec
mov
adc
shlb
wbinvd
pop
hlt
enter
in
push
pop
inc
enter
aas
insb
xchg
in
divl
sarb
cmpsb
cmc
arpl
mov
jo
mov
nop
insl
mov
cli
mov
fsubl
and
jne
mov
and
les
lahf
es
fists
sbb
jno
or
adc
test
mov
inc
or
call
hlt
nop
cmp
call
sub
add
xor
js
or
je
cmc
mov
jae,pn
lods
cmpsb
arpl
xchg
lods
faddl
lock
stos
xor
lret
rcrl
cmp
add
lods
inc
and
fiaddl
dec
push
repz
or
pushf
pop
sbb
dec
mov
inc
sub
gs
sub
push
leave
push
mov
or
jp
arpl
loopne
sbb
loope
cs
loopne
std
ljmp
xchg
loope
sahf
cmp
cmc
adc
dec
daa
jae
add
in
xlat
xlat
ja
cs
and
xchg
pop
and
jo
hlt
aad
cmp
xor
test
les
bound
mov
sub
ret
mov
mov
ljmp
fbld
xchg
push
nop
movsb
sub
jg
lods
cmp
push
or
stc
dec
mov
mov
or
cmp
push
pusha
leavew
mov
sti
lahf
test
les
sbb
add
pop
pop
es
sahf
test
jmp
pop
adc
mov
pop
flds
sti
and
repz
dec
and
and
int
test
cmp
xchg
mov
and
inc
xchg
je
xor
inc
inc
cli
push
aas
cmp
aas
add
mov
push
push
and
inc
shrb
jne
aas
lret
in
stos
ja
add
dec
scas
add
pop
ja
test
xchg
pop
into
pop
push
cli
jg
inc
dec
push
scas
inc
in
out
mov
enter
xchg
loopne
lods
gs
adc
mov
sbb
leave
aam
je
or
lock
notl
leave
ficomps
iret
pop
xor
rol
call
iret
ljmp
pop
mov
rcl
std
or
add
sub
lods
or
add
adc
pop
sub
and
aam
lret
lea
lods
push
sahf
pop
dec
lea
setge
call
popf
enter
cs
cmpsl
insl
mov
clc
rcl
gs
pop
test
mov
insl
shlb
arpl
xchg
xchg
gs
jmp
test
insl
xlat
insl
test
imul
mov
jmp
fxch
xchg
loopne
bound
add
iret
or
lock
popl
jne
xor
or
push
cmp
or
adc
and
push
jne
ja
lods
sub
jns
xchg
dec
ss
push
pusha
lret
adc
cmpsb
cmp
fstpt
int3
xchg
fisubl
aas
push
test
loope
xchg
mov
push
aas
mov
inc
sub
dec
stc
outsb
aam
ret
jne
sub
push
xlat
in
mov
sub
dec
push
jge
xchg
jne
add
iret
and
fadds
xor
movsl
add
sub
xchg
jb
daa
inc
daa
xchg
loopne
lret
sub
xchg
testb
lea
shlb
mov
sbb
inc
out
test
fcoms
sbb
insl
imul
push
jo
inc
cmpl
mov
mov
mov
imul
jg
lds
jg
sub
jne
jns
jne
cmc
or
xor
or
pushf
repz
dec
lods
sbb
es
cmp
test
popa
or
xchg
push
pop
lds
cmp
jo
sarl
inc
mov
sahf
push
jne
cwtl
lahf
js
adcl
ds
push
xlat
mov
scas
or
faddl
cmp
subb
lds
dec
jmp
vmovaps
push
out
xchg
cmp
bound
push
pop
cmc
push
daa
imul
sub
adc
ret
jle
adc
or
mov
inc
lds
hlt
inc
aas
aas
push
add
or
sbb
and
in
sahf
icebp
xchg
mov
push
mov
or
fildll
faddl
inc
sub
fs
ret
dec
jne
jge
dec
xor
lcall
in
xchg
sub
sbb
inc
test
test
ljmp
out
sti
xchg
push
pop
insl
test
aas
sbb
mov
mov
stos
push
outsb
and
ror
sahf
in
jmp
stos
outsb
mov
mov
scas
lods
test
sub
loope
push
mov
scas
ret
add
mov
adc
scas
mov
andl
rorb
sbb
xlat
pop
pop
dec
rcrb
outsl
movsb
lahf
pop
fwait
je
in
je
pusha
mov
add
enter
je
jecxz
sbbb
bound
sub
ret
inc
gs
sub
repz
aam
xchg
xor
mov
pop
sub
test
scas
dec
in
push
pop
add
jge
and
push
xchg
into
les
cmpsb
shll
arpl
aad
pop
xor
mov
inc
mov
or
dec
add
popf
bound
lods
inc
inc
movl
and
ret
add
aaa
int
jge
aad
lcall
cmp
ljmp
and
clc
daa
cmpsl
push
xlat
int
pop
jmp
push
or
cmp
cli
addb
movsl
or
fwait
pop
shr
test
mov
fs
test
add
cmpsb
jmp
es
mov
mov
push
dec
rcll
or
gs
mov
pop
dec
dec
or
fcoml
adc
test
xor
dec
inc
add
xchg
popa
rorb
dec
rcl
js
xchg
movsl
sub
sub
dec
xchg
pop
fabs
add
jne
dec
rolb
mov
in
lods
and
jne
lea
pop
cmpb
xor
jle
cmp
aas
sbb
je
scas
inc
aad
dec
push
dec
inc
cmpsb
xchg
out
sub
cs
cmp
loop
in
xor
xbegin
outsb
je
shll
jg
icebp
and
jg
sub
jne
lods
dec
loop
xor
dec
jns
mov
ljmp
stc
icebp
mov
lret
xchg
testl
fiaddl
xor
adc
ret
hlt
or
push
sbb
sbb
rep
repnz
jle
inc
fcmovbe
jne
rorb
mov
das
pop
test
pop
outsb
rorb
jns
leave
imul
jle
int3
mov
dec
cli
insl
jmp
inc
jnp
mov
cld
loop
dec
jnp
and
andb
adc
push
flds
push
adc
fnstcw
sbb
dec
xchg
popf
push
rcrl
xchg
lahf
adc
out
rorl
inc
jnp
dec
xchg
aam
popf
adc
loop
push
mov
fildl
std
decl
sarl
movsb
dec
loopne
shlb
inc
dec
inc
test
mov
lret
movl
inc
dec
andl
jge
dec
dec
pop
leave
ds
leave
mov
hlt
inc
jmp
shll
sarl
push
mov
or
add
pop
lds
xchg
roll
mov
and
dec
xor
inc
pusha
jne
add
jns
jecxz
ja
xorl
je
scas
mov
mov
sub
inc
xor
inc
inc
addl
lcall
dec
dec
out
add
xor
out
sub
sar
pop
minps
push
xlat
bound
into
outsb
in
pushf
nop
jle
movsl
ret
dec
scas
mov
xor
push
loop
push
in
pop
gs
aaa
rorb
xor
push
adc
dec
lea
fisttpll
sub
push
cmpsb
add
movsl
aad
sub
sbb
mov
mov
loopne
and
adc
aam
dec
mov
subl
adc
or
lahf
bound
pop
sub
imul
aad
xlat
jl
cmc
andl
out
call
popa
push
or
orb
push
cwtl
pop
lds
cmpl
push
imul
sti
jbe
add
cmpsb
xchg
or
xor
pusha
clc
jge
sarl
xor
jbe
add
jle
or
hlt
test
xor
jno
sub
fadds
ljmp
test
lock
int3
popa
jno
xor
dec
and
into
in
push
adc
mov
lcall
dec
cmpsl
enter
dec
out
in
jno
sbb
jge
aaa
add
repz
pop
ljmp
dec
mov
pushf
imul
out
mov
xchg
cmpsb
movsb
add
ficompl
std
ss
xchg
xchg
outsl
add
int3
in
mov
sub
sbb
cmp
mov
hlt
ja
lds
mov
or
inc
cmp
mov
push
sub
inc
mov
shll
fists
mov
cltd
push
and
es
sub
in
dec
cmp
mov
push
movsl
or
xchg
mov
mov
pop
in
mov
dec
sbb
mov
fidivrs
cltd
ret
inc
push
cmp
and
enter
test
mov
mov
fwait
sbb
and
and
fstpt
pop
subl
rcrl
int3
xor
iret
jnp
cli
push
inc
sub
sti
xor
add
mulb
frstor
jnp
cmp
mov
dec
add
int3
ja
add
xor
addr16
mov
lock
cmpl
insb
loope
add
mov
lcall
xor
jns
adcl
adc
and
test
loop
inc
dec
xchg
xor
leave
mov
rcl
inc
jp
inc
xor
arpl
adc
fmull
pusha
cmc
movsb
and
push
mov
mov
sbb
push
add
adc
mov
loop
shrl
sub
ret
dec
jecxz
mov
pop
es
mov
int
inc
adc
into
add
mov
push
outsb
cmp
cmc
scas
jae
adc
cmpb
stc
popa
scas
dec
shll
cmpb
inc
imul
jns
jbe
stos
stos
into
pushf
xor
lret
xchg
inc
lds
add
push
push
inc
xlat
mov
push
fcmovb
and
pop
in
pop
push
cmpsl
lret
mov
in
lds
jle
push
mov
sti
mov
in
mov
pop
jle
xchg
pop
mov
push
lahf
sahf
push
adcl
lret
xor
dec
xchg
es
xchg
movsb
xchg
inc
rolb
and
or
lods
cmp
jg
stos
cmpsl
xchg
adc
xor
fsubrl
fldcw
loope
xlat
dec
jnp
adc
push
mov
in
loopne
shlb
incb
add
loopne
lock
and
mov
cmp
lods
pop
lock
dec
sbbl
roll
hlt
xchg
sbbb
loope
jmp
loop
jp
pop
mov
xchg
hlt
push
adc
nop
inc
mov
lds
pop
subb
ds
test
popf
inc
lods
nop
jno
fmul
dec
or
inc
xlat
mov
sbb
stos
pop
mov
push
jbe
xor
bound
dec
inc
sub
lods
clc
mov
pop
sbb
push
in
rclb
repz
push
xchg
es
aam
push
push
mov
inc
and
adc
in
into
imul
flds
push
frstor
dec
and
cmpsb
inc
inc
xor
stc
pop
rcrb
lds
jnp
gs
ret
insl
jp
sub
xchg
stos
sub
sub
in
aam
stos
pop
imul
ret
inc
jle
adc
popf
outsb
out
in
dec
push
adc
getsec
sub
jns
jnp
addr16
sub
jne
push
push
sub
pop
xchg
imul
push
out
push
data16
mov
sub
icebp
sub
pop
sub
mov
xor
shrl
stos
cmp
lcall
pop
sub
push
pop
pop
inc
shr
push
cltd
cmpsl
dec
sbb
xor
inc
pop
clc
rorb
inc
test
inc
fucomp
je
nop
add
jle
in
fmull
loopne
sar
push
insb
xchg
inc
add
rclb
in
aas
stos
pop
add
jmp
pop
pushf
push
or
mov
pop
fs
je
arpl
shl
gs
inc
nop
dec
lcall
add
lret
and
xchg
int
jnp
jge
lods
pusha
dec
faddl
mov
in
ret
faddp
cmpsl
dec
inc
jl
loope
inc
test
or
mov
sbb
adc
test
neg
mov
cltd
stos
or
out
xchg
mov
jbe
rorl
push
xchg
dec
iret
sub
sbb
inc
or
lea
stos
dec
xchg
or
lahf
xchg
jp
xchg
jb
mov
mov
mov
ret
daa
hlt
pushf
adc
mov
rcrl
mov
dec
aas
test
adc
and
or
pop
and
jne
xchg
stos
mov
dec
pop
je
ret
pop
xchg
cmp
outsb
xor
jne
pop
dec
hlt
jne
mov
stos
adc
test
add
jae
push
test
scas
cmp
xor
ret
sbb
stos
mov
add
mov
fcom
cld
mov
push
jg
dec
rcl
insl
aam
imul
pop
rolb
add
xchg
mov
loopne
gs
dec
leave
mov
mov
mov
push
vmovaps
movsl
inc
mov
in
lock
dec
fisttpll
mov
sbb
nop
inc
xor
and
dec
jae
shll
and
les
hlt
add
movsb
sub
sub
pop
push
pop
dec
mov
mov
das
cwtl
jmp
pop
push
sub
xor
and
mov
dec
add
mov
dec
push
add
cwtl
sub
test
jmp
roll
div
and
mov
sar
mov
lods
out
add
int3
icebp
sar
aas
sbb
mov
jge
lods
lahf
test
lahf
pop
jecxz
sahf
jnp
ss
lret
inc
dec
rcr
ret
add
and
sub
inc
popa
mov
sub
and
push
xchg
fisubl
push
shlb
das
cltd
call
push
in
jbe
xor
ret
xor
push
lcall
sar
repz
addr16
xor
ret
lcall
int
outsb
int
jl
pop
and
ret
push
aad
pop
pop
stos
xor
push
aas
add
out
imul
pushf
cmp
daa
iret
push
cmp
es
rcr
aas
jg
sbb
loopne
jne
mov
orb
mov
or
leave
insl
shrb
jmp
lret
dec
and
pop
push
loopne
daa
dec
and
push
jl
and
jl
inc
ret
ret
push
sti
in
and
push
sub
or
push
cmp
pop
enter
jne
push
push
insl
test
jo
push
mov
add
jnp
xor
xor
stos
pop
xorl
cld
or
imul
sub
push
pop
stos
mov
shr
mov
mov
inc
stos
jge
cmc
popa
jmp
fmull
inc
or
repz
xor
sbb
mov
pop
mov
mov
movl
pop
dec
push
imulb
mov
movb
pop
fsub
add
sub
sbb
xchg
pusha
mov
sub
outsb
xchg
push
cmp
dec
ja
xorl
xchg
repnz
sub
cld
addl
adc
jg
bound
mov
inc
cmc
xor
inc
xor
xor
push
movsl
sahf
lods
test
fs
xor
and
push
push
imul
js
aas
ds
mov
sub
push
jl
adc
inc
dec
and
dec
and
test
xor
sub
pop
inc
and
out
mov
dec
cmpsl
idivb
js
lds
mov
adc
std
push
iret
jg
stos
mov
push
mov
inc
scas
dec
inc
fsubrs
jbe
pop
shrb
loopne
arpl
xor
and
popf
lcall
cs
jecxz
jge
psrld
cmp
ds
inc
fldcw
lahf
cmp
sub
or
in
and
mov
xchg
stos
sub
fcoms
test
stos
xchg
aad
aad
test
arpl
incl
cmp
sub
cmpl
and
mov
shl
je
jmp
pop
xchg
jp
movsl
ljmp
movsb
aaa
jl
pop
push
xorl
into
shlb
dec
and
scas
mov
sarl
jbe
cmp
shlb
mov
jbe
and
pop
dec
jg
test
fimull
mov
xchg
pop
or
xor
popf
or
daa
cmc
fcomps
cli
addr16
sub
sahf
adc
xor
rcl
out
dec
pop
movb
fs
movsb
and
lahf
shrl
jmp
pop
repz
inc
push
arpl
shrl
in
int
cltd
adc
dec
mov
movsl
fsubr
mov
aam
pop
push
adc
and
pop
push
lock
scas
ja
aas
ds
xchg
add
pop
mov
out
inc
call
icebp
push
mov
mov
lds
fsubr
iret
enter
leave
or
dec
notb
xchg
dec
ret
push
inc
and
lds
jne
dec
mov
jb
or
xor
cmp
xor
sahf
mov
xchg
mov
cmp
arpl
dec
inc
cmp
movsb
and
adc
in
mov
dec
fistps
inc
inc
xchg
pop
cmc
mov
mov
cltd
lods
add
mov
fisubl
or
jnp
dec
xchg
cli
test
xchg
imul
sub
enter
add
nop
out
clc
mov
pop
lret
and
aad
jne
iret
push
xchg
dec
xor
dec
fdivrs
cltd
inc
cmp
sub
and
inc
jnp
cmp
call
jg
xchg
push
and
add
xchg
iret
inc
or
out
xchg
fists
scas
icebp
ret
fidivs
dec
hlt
xchg
xor
xchg
xor
mov
cmpsb
and
sub
pushf
pop
cmp
pop
add
add
nop
inc
sti
movsl
outsb
stos
cmp
out
js,pn
rol
mov
insl
out
test
into
or
jle
cmp
push
cltd
adc
and
xchg
mov
stos
data16
or
ja
xlat
test
shl
jle
data16
fwait
out
inc
cmc
shrl
add
dec
fsts
lods
enter
sub
iret
push
pushf
ljmp
sbb
test
add
fs
adc
push
pushf
mov
je
fbld
inc
cmp
xor
pop
mov
lret
mov
push
in
inc
hlt
sbb
fwait
xlat
outsl
or
pop
out
push
out
dec
sbb
cli
outsb
xor
sbb
dec
jp
shlb
cmpsl
adc
in
add
inc
add
mov
insl
ds
push
les
xchg
shlb
lret
outsb
and
inc
dec
sub
cld
add
jbe
push
jp
lods
xchg
sarb
pop
sbb
movsl
ljmp
mov
outsb
mov
sub
mov
fwait
add
xchg
int3
frstor
mov
push
mov
inc
xor
test
and
jmp
inc
int3
pusha
sub
stos
jnp
sub
push
lds
dec
jge
rcl
loope
inc
mov
mov
rclb
stos
mov
inc
push
xchg
pop
or
shlb
jnp
testb
push
lret
rorl
ret
clc
inc
ficoms
push
jne
sbb
fadd
inc
fsub
shlb
cmpl
xor
pop
xchg
sub
inc
lock
cmp
jp
loope
jno
xlat
and
xchg
cmp
and
lahf
and
add
xlat
jne
outsl
sub
ja
lods
test
enter
mov
sub
mov
mov
add
adc
add
jp
test
pop
fbstp
xor
xchg
js
sub
enter
adc
jge
cmpsb
and
jle
inc
mov
mov
fsubp
jp
pop
test
cmp
into
mov
lea
cwtl
inc
sub
gs
jae
mov
inc
rcrl
pop
jg
mov
xor
xchg
ja
outsb
stos
push
pop
movsb
and
dec
jmp
pop
jno
push
or
ret
cmp
cmp
ret
inc
test
xor
jp
idiv
bound
jmp
hlt
cmc
xor
int
dec
cmp
xchg
andb
enter
in
jne
stos
shlb
sbb
cmc
in
cld
adc
inc
pushf
jne
inc
inc
into
and
sub
test
dec
xor
scas
inc
xor
mov
loopne
adc
pop
inc
in
dec
aad
shl
jns
ret
or
test
rorb
dec
xor
mov
and
sbb
ljmp
xchg
roll
scas
fprem1
cwtl
xlat
and
and
ja
into
test
imul
out
fdiv
fsubr
push
aaa
out
push
arpl
xor
cltd
sbb
mov
mov
xor
xor
and
ds
dec
stc
mov
out
jl
push
xchg
in
push
dec
xor
out
bound
jne
pop
call
stos
dec
je
jnp
adc
and
cld
inc
sub
incb
scas
imul
or
jl
fmul
mov
imul
and
dec
and
xchg
sbb
outsb
dec
push
jbe
rcll
or
sub
aam
pop
roll
inc
inc
inc
fcompp
inc
inc
test
aam
mov
pushf
add
inc
push
test
mov
dec
iret
mov
jg
repnz
cwtl
or
inc
xchg
fs
test
rorl
rolb
sbb
les
sub
or
push
cmpsb
jae
out
leave
pop
jb
lds
outsb
sbb
add
xor
or
inc
jg
dec
imul
arpl
inc
lret
xchg
jo
stc
out
sub
jns
mov
inc
lcall
not
movsl
push
incb
fildll
inc
mov
and
or
stos
movsb
jecxz
popa
icebp
jle
dec
stos
outsb
cwtl
adc
xor
enter
leave
push
mov
pop
sub
enter
mov
xchg
dec
dec
rorb
dec
and
xchg
fdivs
mov
push
hlt
outsb
mov
outsl
mov
xor
push
imul
jl
mov
scas
or
and
jns
iret
mov
orb
es
pop
sub
leave
sti
ret
or
fwait
add
and
xor
or
std
pop
hlt
notl
inc
dec
insl
hlt
addr16
bound
jno
inc
or
xor
dec
test
push
jg
add
sub
add
and
push
sbb
xchg
inc
xchg
mov
mov
jp
inc
sarb
cmp
frstor
and
repnz
sti
sub
stos
cmp
push
add
lds
pop
and
sbb
lret
or
mov
dec
adc
dec
cmp
xchg
dec
mov
aam
mov
cs
repnz
pop
movsb
lahf
loope
jg
xchg
enter
outsb
xor
out
mov
push
into
aaa
out
jns
dec
jge
in
jb
and
stc
andb
sbb
dec
dec
lahf
std
or
shl
inc
push
int3
push
and
aam
mov
sbb
or
pop
hlt
and
das
hlt
packssdw
lds
sti
and
clc
test
push
cmc
mov
ret
add
neg
sti
lret
gs
sar
inc
xchg
dec
dec
pop
jp
push
sub
adc
jne
mov
push
lea
dec
add
js,pn
ret
shll
and
out
xor
stos
nop
jmp
xchg
bswap
adc
arpl
es
aad
test
aad
sti
sub
cmovp
addl
roll
idiv
cmpsl
jge
int
cld
push
or
aad
push
dec
je
inc
push
or
cmp
out
jne
cmp
mov
testl
xlat
push
xor
adc
and
lret
daa
or
popf
mov
and
lea
inc
mov
jns
push
add
adc
ror
dec
jne
sub
jne
add
shll
mov
pop
and
pop
sub
lret
dec
jo
aad
jns
inc
and
jae
push
add
popf
cmpsb
sub
inc
test
adc
leave
pop
mov
cmc
pop
cmpsb
scas
sub
mov
jge
cmpsb
or
jl
cmc
subb
sbb
call
pop
movsl
mov
das
dec
enter
sub
dec
clc
dec
mov
dec
adc
js
test
addr16
inc
sub
inc
mov
push
bnd
loop
cmc
pusha
popf
push
or
jmp
movsb
sbb
movsl
jge
lds
jp
push
stos
xor
out
stos
loop
xor
or
lods
xor
dec
mov
mov
add
repnz
xchg
xor
lock
stc
pop
push
sahf
pop
or
std
inc
adc
pusha
pop
cmp
xor
jns
adc
mov
cmp
jne
hlt
and
popf
xchg
dec
cmpsb
out
neg
mov
imul
fwait
jns
xor
jne
je
push
test
mov
mov
and
ds
orb
sub
pop
rolb
cmp
jge
sub
mov
icebp
xor
adc
sbb
aad
rclb
xlat
bound
lea
push
fsubl
bound
ficompl
into
xchg
push
cmp
adc
xchg
cmp
push
mov
scas
daa
sbb
xor
andl
inc
loop
xor
movsb
je
jp
popa
roll
fimull
xchg
pop
test
add
lcall
push
sub
int
inc
mov
inc
jp
push
loope
popa
mov
and
jne
fcmovnb
adcl
inc
hlt
jo
lret
movsb
in
jecxz
jge
es
jmp
hlt
movsb
mov
and
inc
and
stos
iret
mov
mov
ss
xor
lcall
add
sub
into
popf
loopne
popa
pop
inc
sub
mov
ret
and
or
loopne
orb
push
fucom
mov
fwait
arpl
mul
lret
sub
and
jg
in
inc
jnp
push
mov
jns
fs
outsb
in
jno
popa
push
dec
adc
adc
add
ja
cvtps2pi
dec
pop
leave
push
pop
loop
push
mov
ds
xchg
ret
mov
cmp
cltd
es
cmpsb
push
sbb
test
inc
push
fistpll
sbb
shlb
test
dec
lods
dec
rcll
jnp
movsl
insb
in
mov
adc
iret
dec
cmp
add
xor
test
or
adc
movsb
dec
xor
jae
mov
dec
aad
inc
mov
pushf
lret
out
mov
push
or
mov
mov
or
cmc
mov
push
and
or
inc
outsl
push
dec
stos
and
mov
pusha
pop
mov
test
and
mov
in
in
sarb
flds
das
sub
push
mov
jb
inc
pop
or
into
or
sbb
mov
push
fnstsw
add
xchg
fsubrl
js
pop
sub
mov
inc
in
xchg
xlat
in
stc
fisttpl
iret
aaa
js,pn
or
sub
mov
push
inc
sbb
xor
xor
sbb
lea
sub
jne
xor
jl
jecxz
test
cmp
stos
sahf
fcomps
sahf
pop
addl
dec
or
and
out
bound
rorl
fwait
mov
iret
and
inc
mov
mov
xor
mov
dec
dec
es
daa
sbb
aam
stos
test
fistpll
sub
jne
mov
inc
push
pop
push
xchg
dec
xlat
cmp
and
mov
inc
xchg
adc
dec
shl
xor
gs
jns
movsl
mov
mov
sahf
stos
push
cmp
data16
push
dec
dec
sub
or
mov
ret
mov
push
pop
hlt
cmpsl
mov
xchg
out
or
push
or
jl
jmp
xor
and
addr16
frstor
jge
rcrl
xchg
jecxz
mov
aad
mov
inc
fsub
movsb
in
ja
cmp
pop
dec
fadd
inc
cltd
fisttpll
xor
mov
inc
rolb
jne
xchg
cmp
dec
pop
push
and
mov
and
inc
jmp
push
dec
popa
cmp
test
pop
or
fsub
jge
aaa
leave
xor
test
xchg
scas
push
or
imul
aas
lahf
call
div
and
add
adcl
ss
mov
dec
stos
incb
cmpsl
push
call
and
sub
shll
cld
jns
push
leave
in
lret
xor
movsb
loopne
int3
dec
scas
rclb
push
mov
inc
cmp
pop
xchg
andl
insl
xchg
out
sahf
mov
or
dec
dec
lods
popf
inc
push
test
and
cmp
sbb
sub
dec
fimull
hlt
push
out
stc
sbb
push
popf
les
cmp
push
pop
mov
mov
inc
mov
rcll
leave
ds
jo
push
decl
and
andl
sub
inc
dec
cs
jne
pop
bound
xor
ret
dec
loop
addr16
mov
shrb
repz
xchg
mov
and
jne
sub
es
das
xor
inc
push
adc
sub
dec
aam
xor
scas
leave
and
jnp
enter
add
mov
lds
push
dec
cmpb
and
or
mov
add
dec
rcrl
fsubl
cmp
jae
xorl
jae
adc
push
jp
bound
push
xlat
aaa
pushf
loop
fldl
push
mov
mov
sub
sub
icebp
lret
je
das
push
mov
pop
lock
frstor
cmp
adc
push
fs
mov
mov
adc
aad
jg
xchg
fmull
xchg
push
shll
mov
roll
mov
in
cwtl
addr16
fdivrl
xor
or
jb
cltd
or
in
daa
stos
repnz
cld
xor
ja
imul
pop
pop
push
cwtl
adcl
pop
test
cld
test
lods
mov
adc
xlat
mov
xor
and
sub
das
loop
fsubrs
pusha
push
push
add
sub
andb
add
pop
mov
xor
mov
push
lahf
lret
and
jbe
inc
and
dec
inc
adcl
cmpsb
inc
dec
dec
testl
out
cli
out
cs
imul
cmp
push
xchg
fcoml
mov
push
dec
jecxz
cmp
push
adc
ds
test
int
inc
push
cmp
dec
inc
adcb
rorl
xchg
pushf
test
movsb
mov
insb
or
dec
movsl
mov
jbe
lds
mov
dec
ja
btc
push
dec
int
dec
jp
mov
popf
xchg
pop
inc
and
mov
pop
movsb
mov
xchg
inc
lret
imul
ds
push
and
aad
sbb
or
gs
enter
push
mov
xor
and
mov
dec
jge
sbb
or
add
xchg
adc
xchg
loopne
xchg
ja
sahf
pusha
outsb
sbb
cmp
adc
cmp
lds
cli
insl
jl
ror
popa
das
ds
sbb
lahf
jmp
jno
adc
sbb
mov
shll
bound
mov
xchg
mov
and
imul
js
adc
inc
aas
mov
cwtl
pop
and
cmp
ljmp
add
xor
aaa
push
outsl
and
cmpsl
or
subb
xchg
xor
cli
jbe
push
jle
inc
pop
or
jae
fistpl
or
fimull
xlat
leave
sub
inc
test
dec
shll
xchg
je
jae
cmp
fs
push
movsl
mov
addr16
pop
arpl
test
enter
mov
test
testl
and
jbe
outsb
pushl
mov
add
cmp
sarl
lcall
mov
imul
lret
repnz
pop
std
stc
outsl
sbb
jmp
add
pop
cmpsb
inc
push
adc
sbb
pop
mov
lods
ljmp
mov
mov
iret
out
xor
imull
sub
insl
inc
pop
lahf
pop
lods
insl
test
add
negl
in
insb
add
adc
fiaddl
rcr
int
pusha
lret
mov
insl
dec
and
fcomp
loope
ss
xlat
sub
jae
cmp
sarb
call
add
adc
repz
fsub
inc
outsl
in
inc
push
mov
dec
test
loopne
scas
les
inc
in
mov
add
faddp
out
pusha
movl
bound
divl
cmovp
mov
sub
lds
mov
xchg
mov
in
push
mov
cli
push
lds
or
xchg
xchg
add
mov
into
pop
push
mov
cmc
inc
hlt
lock
sarb
scas
pop
jbe
insl
jmp
pop
xor
dec
cmc
mov
jge
mov
or
cltd
fdivrp
mov
pop
cmpsb
jle
int
fnstcw
cmp
sub
lret
cmp
es
xor
dec
dec
shl
pop
adc
jp
and
jl
xadd
cli
cmc
inc
aas
subl
stc
push
loop
add
jns
fsubl
xor
jle
iret
pop
or
iret
jmp
mov
xchg
xchg
push
shrb
jne
push
je
call
stos
je
movsb
mov
fwait
adc
in
xor
cmpsl
pop
jne
jae
das
imul
push
xor
sub
mov
rcl
add
or
xchg
ficoms
mov
or
sbb
fidivrl
adc
bound
test
inc
cmp
ds
pop
imul
in
dec
pop
hlt
jg
loope
xchg
and
jnp
sub
mov
dec
mov
scas
dec
jns
inc
xchg
out
mov
or
dec
sub
movsb
adc
dec
pop
sub
pop
mov
adc
mov
enter
cli
and
js
mov
aad
jne
dec
adc
lds
jmp
cmp
push
fdivrl
aas
movsl
and
fsubl
in
jnp
and
es
int
aaa
popf
ror
jmp
mov
ret
mov
pop
testl
adc
addb
imul
scas
lcall
mov
push
cwtl
out
mov
test
lret
hlt
cmp
push
cwtl
pop
insb
push
movsb
xchg
fists
dec
mov
les
dec
pop
sub
pop
dec
fcomp
imul
jnp
test
insb
ljmp
notl
jmp
arpl
pop
push
xor
pop
jns
sub
ja
lods
pop
sahf
into
stos
enter
dec
in
les
sub
push
repz
mov
pop
std
lahf
test
and
daa
xor
aad
ja
shrb
in
push
or
push
xchg
push
push
ja
js
push
or
cmp
lret
push
in
bound
add
cmc
ja
mov
push
cmp
fcmovnu
mov
xchg
enter
and
cmpsb
aaa
mov
sub
add
test
jo
shrb
les
mov
adc
cld
in
cmp
sarl
cmpb
and
lret
ret
dec
hlt
sbb
mov
xor
push
jae
clc
xchg
ret
sarb
xor
mov
sub
xchg
fsubl
dec
and
clc
xchg
bound
jno
inc
cmp
fidivrs
push
ret
adc
push
not
enter
scas
or
xchg
fwait
dec
lods
in
mov
into
mov
mov
stos
inc
ja
scas
std
pop
shl
stos
sub
je
out
andl
xchg
jmp
and
icebp
inc
push
cmpsl
ss
insl
out
aad
pushf
and
cmp
lea
mov
jmp
enter
push
shll
mov
cltd
mov
aas
dec
fbstp
adc
adc
rolb
push
mov
lods
cltd
add
xchg
inc
dec
mov
mov
cltd
push
cmp
adc
dec
mov
dec
push
adc
adc
lahf
inc
aas
pop
bound
or
in
sbb
xchg
adc
or
scas
cmpsl
popf
adc
xor
pop
mov
test
adc
in
test
pop
out
jge
xchg
sub
jo
adc
dec
mov
or
aas
cmp
sub
fsubrl
lods
js
sub
leave
pop
jp
shll
movsl
jecxz
mov
xchg
pop
push
adc
sbb
fdivrl
xor
stos
rclb
mov
jnp
cmpsl
mov
insb
add
fst
std
adc
and
xchg
push
add
inc
mov
gs
dec
push
mov
jbe
cli
notl
and
pop
add
push
push
cmp
sub
outsl
or
bswap
xchg
insl
roll
int3
jne
icebp
pop
xlat
mov
orl
mov
leave
fdiv
insl
movsb
cld
rorl
std
xchg
ja
sub
mov
dec
xor
or
push
sub
hlt
addr16
sbb
stos
xor
stos
add
in
push
and
push
mov
fsubrs
dec
aad
push
cmp
sbbl
fsubr
mov
pop
mov
imul
ret
int
add
or
and
fbstp
sub
jnp
push
and
cmpsl
xor
int
loope
dec
pop
push
loopne
mov
inc
jg
or
rep
addr16
orl
rorb
add
pop
daa
mov
pop
test
shlb
push
gs
push
insl
pop
das
jne
fwait
lret
aaa
jle
dec
add
jg
les
daa
inc
or
push
or
and
loopne
loope
scas
dec
imul
pop
rol
scas
add
push
mov
mov
mov
sub
testb
add
and
fistpll
and
xor
inc
pusha
pop
and
roll
dec
xor
or
mov
xor
dec
arpl
stos
cld
sbb
jle
mov
pushf
rcr
lds
pop
sbb
dec
jbe
js
pop
test
pop
mov
scas
xor
sti
fldl
mov
std
int3
inc
mul
in
push
dec
ja
jg
fnstsw
push
cltd
cmp
or
pop
dec
stos
lods
inc
add
adc
addb
inc
inc
repnz
dec
hlt
out
mov
dec
into
add
inc
in
add
mov
push
jmp
and
and
test
mov
sub
cwtl
push
lds
push
push
sub
pop
lds
and
adcb
gs
arpl
lods
fcmovbe
mov
pop
mov
pop
out
xlat
cmc
jg
nop
jnp
inc
mov
jo
es
dec
test
shrl
in
inc
cltd
negb
cs
push
lock
pop
shlb
lods
loopne
xchg
movsb
adc
mov
stos
jne
repz
jmp
cmc
and
js
int
dec
fsubl
scas
jle
in
mov
imul
loopne
pop
sub
ds
scas
xchg
loop
scas
test
ret
ret
mov
int
and
inc
imul
sub
stc
xor
mov
adc
stc
pop
mov
outsl
jmp
mov
stos
mov
es
aam
cmpsb
and
pop
xchg
mov
jecxz
aas
aad
pop
sub
in
aam
mov
mov
cwtl
shll
mov
lds
sub
mov
ret
pop
movsl
dec
jle
clc
jno
xchg
and
fnstenv
jp
push
je
in
popf
rcl
sub
push
rcll
pop
push
sbb
fiaddl
and
cmc
in
push
jne
scas
and
in
dec
scas
mov
enter
mov
xchg
sbb
and
jo
movsl
mov
je
push
hlt
ljmp
or
cmpsl
dec
xchg
outsb
cmpl
call
inc
sbb
out
ss
and
sbb
shl
stos
mov
jge
lods
repnz
roll
dec
push
fs
push
stos
inc
xchg
shrl
dec
cmovge
push
inc
mov
test
pop
sar
dec
cmp
lds
push
mov
jae
inc
pop
cmp
mov
leave
pop
mov
iret
push
sti
leave
es
aad
dec
test
test
push
hlt
adc
mov
and
xor
mov
and
fwait
test
outsb
or
and
pop
jg
cmc
ss
pop
and
cli
nop
int
xor
add
add
dec
cli
sub
cltd
lods
add
push
jae
cltd
mov
out
in
jne
jp
and
push
sub
bnd
xchg
in
inc
xchg
gs
or
in
cmpsb
pop
adc
push
xchg
cmc
mov
sbbl
pop
mov
nop
push
mov
push
or
mov
aaa
fsubr
shrl
cmpsl
xor
jo
push
adc
dec
mov
fsubl
pushf
add
icebp
leave
cmp
mov
dec
jbe
mov
pop
dec
adc
push
jmp
inc
in
mov
jl
mov
xchg
add
and
pusha
shl
mov
enter
cli
or
daa
out
push
stos
fadd
cmpsl
jnp
push
loopne
xchg
int3
scas
sub
xor
cs
movsb
sti
ja
pusha
das
lea
dec
popl
jno
mov
hlt
mov
in
les
ret
rclb
in
cmpsl
push
movl
sub
mov
xlat
cli
nop
mov
xor
adc
dec
dec
cmc
scas
push
dec
stos
pushf
outsl
shrb
sbb
ds
les
repnz
xchg
imul
jae
test
dec
xchg
add
push
subl
in
je
jb
fcomi
jno
test
lds
add
and
jecxz
push
ret
lahf
mov
push
dec
inc
insb
stos
imul
inc
push
sbb
leave
cmc
jmp
mov
out
mov
xchg
movsl
in
mov
cmpsl
pop
mov
enter
sbbb
fdivr
je
mov
push
jg
or
mov
idivb
repnz
push
in
icebp
lods
and
mov
orb
test
sbb
add
sub
jo
stos
lods
jae
jne
addb
rorl
push
and
loope
lds
stos
aam
test
shll
mov
jp
lcall
xor
mov
neg
sub
rcr
shll
jp
dec
xlat
ret
mov
push
add
jg
out
inc
ss
rclb
hlt
inc
jns
push
inc
fadd
ret
mov
pop
dec
and
roll
pop
add
loope
mov
jge
lahf
push
dec
or
hlt
arpl
mov
inc
or
jle
pop
pop
enter
icebp
mov
leave
mov
push
mov
scas
outsb
aam
hlt
bound
xchg
mov
insb
jae
sub
dec
repz
movsb
dec
sbbl
mov
or
sub
push
adc
add
dec
je
fs
push
push
lea
xor
lods
stos
sbb
arpl
jbe
addr16
test
mov
aaa
popa
shll
es
in
loop
loopne
mov
inc
pop
cmp
imull
cmp
sub
or
das
faddl
pop
cmc
nop
test
xor
aaa
mov
adc
inc
test
arpl
ljmp
lret
push
insl
xchg
xor
pop
test
dec
mov
out
das
out
jns
jg
fxch
rorb
test
shll
mov
int
sub
mov
inc
repnz
pushf
ret
out
cld
inc
xor
jns
jle
jle
gs
xchg
dec
push
lea
mov
enter
or
nop
hlt
cmp
mov
outsl
fdivrs
xlat
lea
imul
mov
loope
les
aaa
pop
pop
jae
test
loope
push
cli
sahf
incb
cmp
xlat
dec
mov
into
xchg
movsb
andb
popf
sub
lea
ret
jne
cmp
gs
gs
sub
pop
insl
inc
rorl
gs
xchg
pop
push
arpl
mov
leave
inc
add
lahf
out
das
call
inc
aas
mov
std
and
sub
jno
or
lret
lahf
test
sub
and
xor
mov
sub
adc
aas
push
and
mov
mov
incl
dec
in
cli
loop
sbb
sar
push
sub
xchg
cmc
lea
sbb
add
hlt
sbb
and
arpl
pop
mov
mov
lret
inc
inc
stos
mov
movsl
test
out
xchg
add
add
rcrl
cld
cmp
lds
xchg
fmuls
add
push
shr
mov
leave
js
inc
inc
dec
adc
mov
enter
movl
xchg
push
jnp
or
testl
push
sbb
jne
add
push
lods
scas
pop
adc
inc
test
push
xor
stos
mov
push
xorb
sub
cli
push
and
cs
fs
cmp
out
xchg
inc
and
cmc
inc
or
sbb
sub
cmc
push
leave
dec
cmp
pop
scas
jne
mov
icebp
cmp
imul
into
sbb
mov
push
push
dec
xor
add
cmp
push
dec
leave
or
mov
cmp
cmp
sbb
dec
sub
push
cmpsb
mov
inc
hlt
fs
sbb
xchg
out
loop
and
sub
inc
mov
or
inc
xchg
stc
aad
fwait
or
arpl
leave
into
cmc
aas
pop
stos
mov
shll
sti
pop
loope
sbb
rcl
pop
push
and
cmpsb
leave
arpl
std
jne
out
xor
mov
les
loopne
les
mov
jbe
lahf
and
les
push
add
dec
and
sub
es
hlt
push
dec
dec
mov
inc
inc
mov
cmp
push
scas
jp
lds
mov
xchg
cld
repnz
cmpsb
pop
xchg
rcr
push
scas
push
pop
jns
nop
sub
fs
xlat
xor
pop
dec
ret
pushf
nop
jnp
dec
dec
dec
mov
mov
std
nop
and
loop
scas
enter
add
sbb
ja
jnp
add
cwtl
rcl
cli
outsb
adc
loopne
pusha
dec
or
test
pop
test
aas
imull
xchg
fldcw
pop
iret
push
cwtl
in
int
push
nop
adc
lcall
daa
push
out
test
pop
pop
or
pop
sarb
and
fldl
lahf
xor
fnsave
mov
bound
dec
adc
mov
mov
pop
ffree
xlat
dec
lds
cmp
inc
push
push
fidivl
dec
inc
enter
mov
mov
dec
inc
jb
lods
cld
fnstcw
cmc
cld
fbstp
mov
popa
ret
test
push
test
jne
imul
arpl
test
inc
sbb
test
sub
jge
xchg
sbbl
rolb
jg
stos
and
adc
lds
sahf
cli
addr16
fidivrs
les
lods
dec
push
leave
add
jae
cmp
stos
jnp,pn
xor
ljmp
dec
adc
dec
aad
scas
add
and
sbb
mov
aam
pop
leave
pusha
push
jmp
or
pop
pop
es
dec
pop
test
std
xchg
xlat
data16
mov
popf
sub
mov
loop
js
scas
or
sbb
xor
fbld
jge
add
mov
adc
xor
jae
pop
outsl
stos
test
into
imul
push
mov
xlat
push
adc
inc
push
xchg
sar
gs
push
push
fnstenv
pop
mov
adc
sbb
mov
pusha
pop
or
jo
imul
jg
mov
lds
mov
pop
enter
rol
pop
out
jo
push
into
cmp
pop
adc
repz
aaa
xchg
negb
into
test
cmp
push
pop
sahf
iret
bound
cmpsb
jge
xor
stos
scas
jmp
aad
pop
xchg
scas
movsb
not
das
sub
push
cmpl
and
pop
jg
in
ds
sbb
lods
sahf
jnp
add
das
lret
sbb
xor
in
jne
rorb
in
addb
popa
ljmp
fwait
push
mov
stos
jmp
sar
ja
dec
inc
aas
or
and
dec
cmp
and
xor
push
sbb
lods
das
cld
fbstp
scas
jp
inc
test
in
mov
mov
add
xorl
hlt
or
aaa
pushf
pop
icebp
inc
cltd
popl
scas
dec
into
and
dec
xchg
cli
mov
fdivr
jl
les
add
xor
leave
inc
or
imul
je
push
xlat
mov
jge
fidivrl
add
push
les
or
es
hlt
mov
pusha
jne
enter
jno
xor
sbb
add
dec
and
xor
loope
pop
dec
jp
add
push
jl
push
inc
fcoml
adc
cltd
jmp
pop
cltd
dec
and
pop
dec
fdivp
mov
add
cli
test
es
js
es
sub
xor
dec
xor
popf
mov
push
lods
sub
sbb
mov
ret
jne
push
sub
adc
loopne
fsubrl
fdivrl
push
and
mov
cli
jne
jg
pop
ds
or
fdivrl
movsl
outsl
imul
rcrb
shrl
push
aaa
sub
nop
sub
stos
arpl
sub
ret
outsl
mov
subb
push
les
xchg
pop
lea
nop
mov
xor
jne
xor
in
cmc
out
push
sub
push
sub
fimuls
mov
sbb
add
sub
iret
inc
pop
jno
mov
and
jno
insl
push
cmc
cli
mov
sbb
clc
push
into
jp
inc
dec
cmp
xchg
ret
push
rolb
push
mov
testl
push
js
xchg
les
loop
adc
cmp
cmp
stc
mov
mov
and
mov
mov
add
stos
mov
xchg
mov
mov
inc
lahf
xchg
add
inc
outsl
push
pop
inc
repz
pop
adc
lds
mov
pop
addl
or
fwait
lods
push
inc
je
inc
push
dec
rclb
push
dec
add
dec
xor
dec
movl
int
push
scas
arpl
pop
dec
rcrl
cmp
xchg
and
inc
sti
xchg
mov
es
pop
mov
cmc
pop
pop
xlat
xor
and
pushf
xlat
js
dec
add
xorl
test
insl
push
adc
outsl
push
aad
pop
mov
sbb
pushf
adc
imul
add
cs
push
loopne
mov
jno
inc
les
mov
les
push
mov
addr16
bound
shrb
dec
jne
int3
xchg
fiaddl
push
orl
scas
test
xor
xor
and
daa
jecxz
push
mov
dec
push
jns
imul
cmp
shll
aas
cmp
fcoms
or
inc
and
cs
cmc
cmp
inc
and
mov
cmp
dec
mov
fwait
xor
inc
push
leave
imul
xchg
pop
or
in
test
or
dec
movb
jbe
sbb
dec
push
repnz
icebp
dec
xchg
idiv
dec
mov
xchg
rcll
mov
xchg
sarb
mov
test
fdivrl
jno
mov
xchg
and
in
jne
ret
hlt
push
add
arpl
sarl
pop
mov
inc
test
jmp
movsb
xchg
dec
and
push
xor
icebp
jae
stos
std
dec
movsl
inc
dec
jne
sub
adc
scas
sub
mov
sub
pop
inc
jo
iret
cltd
sbb
imul
jns
add
out
mov
inc
dec
xchg
mov
xchg
insl
pusha
popf
in
lock
jmp
movsb
push
inc
test
cli
xchg
movsb
dec
test
and
mov
pop
in
pop
cmp
stos
xor
jp
jecxz
pop
push
xchg
pop
roll
notb
jo
pop
mov
movsb
lods
popf
dec
sbb
mov
fiaddl
add
jo
outsb
or
sub
shrl
subb
jmp
ret
mov
imul
inc
push
insl
aad
inc
cmc
cli
lock
mov
ret
fsts
inc
ret
push
fldenv
ret
lret
fidivl
mov
inc
xor
mov
scas
idivl
adc
daa
cmp
loopne
das
pop
sub
push
add
xor
sahf
lahf
and
inc
cmpl
or
pop
cli
mov
adc
div
xchg
lret
stc
stos
in
movsb
xchg
mov
scas
push
out
or
or
daa
test
rorl
scas
jge
xor
xchg
and
cmp
push
push
xor
filds
mov
lret
les
fnstsw
xor
outsl
scas
jle
push
ja
cmpsl
dec
fisttpll
movaps
pop
sub
cmp
incb
or
adc
jb
and
ljmp
push
push
or
mov
pusha
xor
inc
xchg
shll
jl
xchg
inc
adc
outsb
push
jbe
xor
cmp
inc
insl
adc
iret
mov
shrb
inc
push
xor
leave
sbb
or
adc
mov
inc
ljmp
ja
xchg
pop
scas
jae
pop
imulb
jns
bound
push
mov
push
mov
push
xchg
and
push
cmpsb
cmp
and
push
sub
sbb
ljmp
loop
orl
xchg
js
add
dec
es
sbb
adc
push
xchg
and
mov
fimull
inc
jne
sub
adcb
cmc
repz
call
out
es
movsb
xor
sub
es
pop
inc
pusha
ljmp
nop
or
push
dec
and
ror
sub
lds
aas
in
xor
mov
and
dec
and
xchg
aad
frstor
sbb
adc
dec
cmpb
aad
mov
popl
mov
dec
outsb
adc
fcmovnb
test
aas
sub
sub
fdivrs
cmpl
into
ror
dec
test
arpl
adc
jl
sarb
icebp
jmp
jecxz
lcall
dec
jmp
mov
sbb
faddl
mov
xchg
dec
addr16
arpl
jge
leave
pusha
sub
mov
loop
outsl
shrl
call
xorl
push
addr16
daa
out
push
or
loope
push
jne
mov
cld
push
push
adcb
sub
xchg
push
jg
xlat
insl
enter
sub
shrl
mov
jne
adc
jnp
je
mull
push
rolb
fcompl
lret
lcall
hlt
or
roll
and
repnz
repz
lret
xor
dec
pop
inc
test
rol
xor
mov
mov
insl
aas
add
je
add
dec
lods
cli
addr16
adc
add
sbbb
cmpsb
inc
aam
xor
cs
lods
adc
xchg
cs
shrb
adc
push
cmpsb
jbe
sub
mul
dec
cmp
pop
xchg
fldt
shlb
rcrb
call
cli
fbstp
dec
cmpl
fdivrs
add
test
and
pop
ja
or
dec
daa
lret
pop
adcl
or
cmp
xor
or
push
shll
nop
inc
add
into
gs
movsb
dec
rcll
sub
lret
ljmp
stos
call
jge
push
sbb
jg
imul
jle
xchg
dec
cmp
ja
sub
xorl
stos
and
fwait
enter
lds
daa
sub
pushl
rorb
lds
and
outsl
test
mov
ljmp
repz
xchg
outsl
mov
push
xor
imul
and
sarl
inc
push
rorl
and
jo
inc
mov
and
out
jge
aad
mov
lock
push
stos
loop
rorb
sub
pop
mov
push
add
push
lock
lds
stos
xor
movsl
inc
xchg
sbb
mov
mov
pop
rcrl
lret
clc
jmp
inc
inc
inc
aad
dec
roll
push
inc
pop
or
ret
jne
xor
popa
stos
aam
xor
icebp
cmp
or
in
mov
out
mov
rcrb
push
sub
sub
inc
lahf
insl
or
pop
xchg
fsts
xor
jne
cmpsl
jo
mov
stos
andl
popf
adc
rcrl
pusha
lods
lret
xor
inc
or
imul
shrb
test
mov
popa
enter
or
in
sbb
call
cmc
hlt
stos
shll
mov
mov
test
push
sbb
inc
xchg
test
dec
cmc
data16
xor
out
push
mov
push
mov
push
push
flds
pop
mov
push
dec
push
mov
lret
sub
inc
lret
cwtl
fwait
and
fcoms
in
in
adc
jnp
cmc
add
jne
push
inc
addb
es
cmp
cmp
mov
adc
dec
xchg
cld
neg
pop
adc
add
stos
jae
cmp
jo
mov
pop
mov
dec
jg
push
push
pop
filds
aas
push
xor
test
and
movl
test
cmpsl
dec
jne
xchg
mov
dec
pop
frstor
cmp
in
inc
sub
stos
daa
jmp
jecxz
push
rol
hlt
add
jmp
push
aaa
shrb
sub
mov
mov
push
loope
hlt
test
jo
in
and
push
mov
jnp
or
leave
fwait
jae
xor
shll
addr16
push
or
add
ret
hlt
es
jbe
lds
fsubs
jae
xchg
leave
ret
cmp
xchg
stc
cmpsl
push
clc
dec
scas
dec
inc
cmp
adc
lock
add
xlat
or
ljmp
add
cli
sub
sbb
xchg
push
adc
sti
add
add
mov
fwait
pop
push
inc
add
push
dec
dec
inc
sarl
adc
xchg
dec
scas
fildl
mov
sar
lret
mov
pop
cmp
jmp
out
mov
lcall
cmp
mov
mov
cltd
scas
mov
and
int3
lods
jae
mov
hlt
add
data16
mov
jo
and
and
shrb
push
rclb
and
repz
and
tzcnt
xor
stos
push
ljmp
andl
roll
push
dec
and
add
scas
cs
jo
addb
movsb
sahf
insl
imul
mov
lret
lcall
cltd
xor
sahf
mov
shll
or
add
push
inc
jo
ljmp
jbe
pop
cld
pop
hlt
movsb
outsb
std
xchg
test
jg
shr
xchg
dec
imul
orb
sahf
mov
jns
dec
pusha
cmp
cli
test
test
push
xchg
sbb
loopne
inc
les
aam
xor
push
out
jae
sub
movsb
in
push
cmp
dec
loop
inc
xchg
les
aad
adc
subb
mov
scas
das
test
add
imul
lcall
sarb
lcall
lods
clc
inc
sub
call
inc
enter
lods
sub
stc
sti
pop
xchg
dec
fimull
mov
out
shr
shll
pop
ds
andl
push
mov
jge
mov
repz
outsb
hlt
clc
push
or
ds
sbb
add
fsubl
mov
fs
dec
mov
sbb
loopne
es
std
mov
sub
fsub
and
inc
sub
mov
fs
out
test
cmpsb
aam
bndldx
in
lahf
addr16
push
pushf
push
clc
xchg
push
push
lahf
and
xchg
out
mov
cmp
sbb
in
pop
or
mov
rol
orl
neg
movsb
aam
xchg
inc
or
ds
aam
sarl
stc
test
or
sub
dec
xchg
sub
out
scas
lds
cs
cmp
shlb
push
sbb
jg
popf
sub
fisubrl
sbb
jle
lret
inc
lcall
fsubs
and
mov
xor
mov
mov
xor
push
imull
leave
dec
imul
dec
hlt
sbb
popf
stos
jmp
mov
outsl
dec
xor
fs
pop
xchg
push
push
push
lahf
fnstsw
dec
push
add
nop
stos
jmp
xchg
outsb
push
xor
insl
iret
mov
lods
pop
pop
add
cmc
adc
out
add
add
push
dec
push
movsb
jge
mov
rorb
sub
add
aam
andb
and
pop
jge
cmp
cld
push
jecxz
lock
andl
add
dec
mov
jnp
popa
insl
push
icebp
sub
jp
cmpsl
shrb
in
hlt
sbb
cwtl
dec
jb
mov
sahf
and
inc
push
and
cmp
adc
jecxz
imul
rcr
adc
sbb
xchg
and
cmp
pop
dec
shlb
sbb
and
int
mov
mov
pop
inc
xor
lods
subl
or
push
add
inc
cmp
sub
or
hlt
push
push
mov
dec
inc
lahf
fimull
into
mov
sbb
jp
adc
xor
adc
clc
orl
sub
adc
mov
ja
or
cmpsl
push
xor
hlt
inc
jnp
add
jne
cmp
dec
cmpl
cmp
mov
inc
sbb
movsl
test
sub
cmp
sub
or
adc
add
pusha
mov
rolb
jns
adc
and
xchg
test
sbb
pusha
jne
inc
or
push
in
clc
xor
add
addl
dec
xchg
loop
enter
pop
jp
ret
lahf
sub
adc
rorl
push
add
mov
mov
movl
pop
or
push
and
push
das
rcr
adc
pop
adc
adc
sbb
or
lahf
mull
sub
enter
dec
orl
pushl
mov
lahf
inc
push
add
rorl
push
adc
lea
push
xchg
or
sub
push
pop
push
repz
ljmp
arpl
movl
push
mov
dec
cmc
scas
push
dec
dec
mov
mov
xor
jg
imul
cmpsl
lahf
cs
xor
adc
pop
daa
shl
sub
fildll
xchg
insl
push
jge
lahf
inc
int
xchg
aam
or
lret
addr16
cmp
dec
push
mov
pop
adc
movsb
cltd
and
vmwrite
cmp
lods
or
push
mov
cmpl
pop
jmp
jg
insb
cmp
aaa
jae
cmpsl
jae
mov
in
mov
in
dec
push
dec
inc
clc
push
leave
leave
dec
movsl
mov
push
jns
dec
or
stos
orl
cmp
lock
and
iret
dec
mov
imul
stos
add
mov
imul
ffree
mov
sub
or
push
ljmp
mov
pushf
xor
lret
push
push
sub
dec
sub
in
push
test
sbb
jge
test
cltd
lds
push
adc
lret
push
call
rolb
rcrb
dec
and
stos
mov
jg
shrb
js
mov
sbb
mov
das
test
outsb
aas
xor
ljmp
sub
lcall
jp
out
jno
loope
popl
loop
pushf
cs
push
add
adcl
ret
mov
jo
or
test
lods
cwtl
cmp
mov
sarb
cmpsl
hlt
jno
mov
aas
leave
repz
ja
shrb
mov
movsl
mov
fmull
sub
xor
inc
add
add
ss
dec
dec
cmc
sub
jbe
incl
ds
enter
xchg
sbbl
out
aam
lods
ja
sbbl
in
imul
mov
int
popa
add
sub
lds
pop
stos
mov
jae
pushl
adcb
sub
cmp
enter
push
fsubs
push
mov
insl
fdivr
fucomp
int3
mov
lods
lret
aam
pop
into
leave
mov
addb
pop
setae
jge
pop
or
addb
cmp
inc
pop
dec
aaa
aam
sub
icebp
movsl
push
sti
in
jmp
enter
xor
out
push
push
inc
insl
in
outsl
mov
popa
pop
fsub
les
and
jg
push
sahf
int3
xlat
aas
and
jle
aas
or
adc
pusha
inc
jge
rclb
mov
fisttpll
loop
xchg
stos
cmp
and
rcl
lret
cs
jecxz
xchg
cmp
inc
andb
push
jbe
jo
addl
mov
sbb
out
popa
fsubl
les
sahf
mov
inc
jg
in
out
sub
test
mov
push
rcrb
mov
dec
jg
addr16
jecxz
popa
aas
cmpsb
mov
cmpl
pop
xor
incb
jns
fcomip
sub
in
xchg
xchg
test
in
insb
inc
hlt
jae
inc
mov
cmc
dec
stos
cmp
mov
adc
ds
mov
push
imul
fidivs
pop
nop
out
mov
daa
mov
jl
and
test
add
fistpll
mov
inc
test
cmp
xor
sub
push
sti
ss
and
test
int3
scas
sub
pop
fs
pop
mov
mov
dec
fadd
add
dec
and
or
jp
pop
and
mov
and
pop
dec
in
sub
cmp
call
fstl
lds
pop
xchg
mov
pop
outsl
mov
inc
xor
sti
and
mov
push
jg
dec
sub
mov
add
pop
cmp
iret
addr16
int
fldl
jnp
mov
lds
pop
dec
push
movsb
fcomps
cmp
stos
into
lret
imul
insl
test
inc
inc
mov
push
dec
andb
cmp
cltd
orl
test
inc
and
push
cs
int
sub
xor
adc
jecxz
jbe
ljmp
push
or
ss
sub
add
in
test
lret
in
sub
jae
sub
lds
dec
xchg
test
lds
cmp
shlb
push
inc
pop
push
and
jg
push
add
lea
lds
paddusw
leave
mov
vpsubusw
mov
add
sub
lds
call
push
leave
inc
mov
fstps
cltd
dec
dec
insl
icebp
fisubrs
clc
lods
inc
xchg
push
rol
and
xchg
mov
push
or
or
push
push
and
test
cmp
sub
ret
fistpll
outsb
mov
imul
push
adc
fcmovne
jne
nop
and
xor
push
sbb
push
loope
mov
fmul
enter
lds
je
jne
jecxz
outsb
loopne
nop
dec
push
inc
lea
mov
in
xchg
pop
push
and
inc
inc
dec
das
dec
jg,pn
aaa
lds
add
leave
xor
lds
int
int3
dec
inc
push
add
in
mov
fwait
xchg
xchg
cmp
cltd
push
mov
dec
inc
inc
inc
pop
xchg
inc
add
or
fsts
cmp
int
lds
enter
lret
push
aam
popf
incl
cmp
shll
dec
dec
fisubs
jecxz
jbe
mov
scas
stos
xchg
pop
mov
imul
inc
inc
loopne
inc
pop
int
push
lock
cltd
shll
cs
inc
imul
push
aad
lds
dec
dec
rcrb
cmpsb
rcrb
adc
lds
jae
arpl
sbb
mov
and
lds
mov
mov
into
jb
rcr
lods
cmp
or
add
scas
or
cmpb
mov
je
cltd
push
pop
or
pop
pusha
mov
addl
add
sbb
pop
js
arpl
sbb
fsub
jns
add
mov
cmp
mov
or
xor
loope
scas
inc
lcall
and
mov
jp
ret
imul
into
mov
stos
push
enter
cltd
cmp
xor
cmp
icebp
jge
loope
test
pusha
mov
out
mov
out
dec
cs
jne
imul
mov
testb
iret
xchg
xor
or
xorl
mov
nop
push
or
dec
ret
jg
and
sbb
sub
aas
ficomps
jbe
test
jbe
jb
jns
xor
out
loope
ret
les
inc
or
shll
lret
aad
push
in
repnz
scas
mov
or
cld
out
das
mov
leave
dec
test
mov
out
xchg
jnp
mov
or
and
enter
aad
fdivl
jne
in
jo
dec
pop
lods
add
cwtl
or
fidivs
push
jecxz
xor
lods
jl
lret
add
popl
call
test
pop
shlb
out
test
sub
xchg
sub
ja
out
and
lcall
movb
hlt
jecxz
enter
lock
andl
hlt
scas
cwtl
sub
jbe
imul
or
outsl
push
mov
or
inc
and
xlat
mov
inc
push
addr16
and
push
fdivrl
outsl
and
dec
jge
int3
push
dec
pop
push
add
pop
mov
pusha
sub
push
add
and
adc
adc
into
pop
add
repz
sub
add
mov
arpl
enter
sub
or
outsb
push
push
inc
hlt
mov
gs
cmp
sbb
scas
push
fsubrl
test
xchg
fmull
inc
sarl
es
repz
call
xor
sub
mov
add
lods
addr16
mov
xchg
inc
andl
movb
mov
adc
call
cli
pop
jne
or
fisubs
dec
or
mov
and
adc
push
ret
faddl
mov
arpl
popf
orl
pop
fnstcw
adc
fsubr
adc
leave
mov
ss
int
movsl
ja
pop
shll
lods
imul
bound
dec
sbb
divl
inc
cmp
fldl
jb
in
scas
mov
xor
out
int
inc
inc
mov
sub
and
mov
inc
sub
cltd
jp
in
int3
movsl
repnz
jnp
push
es
jns
fsts
mov
outsb
stos
jmp
lret
les
es
xlat
jge
or
or
cld
sbb
icebp
push
sub
mov
jo
jle
mov
nop
pop
push
cmc
push
outsl
andl
bound
gs
movsb
ds
test
pop
mov
ret
and
std
or
push
dec
lock
jge
getsec
mov
sbb
and
lret
jge
push
enter
fsubl
inc
xor
cmp
jns
and
mov
xchg
push
and
movsb
lds
les
scas
jnp
push
imul
mov
das
inc
jae
hlt
addl
push
sahf
sub
add
js
movsb
lahf
mov
outsl
add
add
dec
inc
loop
cmpl
data16
jp
adc
or
pop
jne
ds
dec
inc
mov
pop
stos
adc
gs
sub
cmpsb
pop
xchg
inc
push
decl
xor
fisttpl
imul
xchg
inc
push
sub
pop
imul
iret
lea
hlt
adc
imul
mov
popf
arpl
dec
testl
jns
scas
mov
shll
hlt
sti
std
cmp
xchg
jno
sahf
jnp
enter
xor
subl
push
push
mov
es
jg
test
add
jbe
cmp
mov
or
jmp
xor
sub
pop
gs
shlb
inc
cs
stos
cli
insb
dec
jge
push
loop
fwait
adc
sub
add
jmp
xchg
jg
add
jne
sbb
jle
out
movsb
int
loopne
iret
cld
cs
fcompl
mov
fldl
xchg
xlat
stos
mov
or
inc
inc
lahf
stos
mov
inc
xchg
jge
nop
push
dec
fdivr
inc
cltd
ds
lock
xchg
xor
jbe
mov
pop
fildl
and
cmp
inc
dec
sub
dec
sti
aaa
ljmp
sbb
and
dec
pop
js
scas
sub
hlt
roll
cmp
and
loope
push
inc
and
out
add
push
int3
inc
or
jbe
rcrb
mov
push
std
popa
cmpsb
pop
or
pop
push
mov
push
sbb
push
les
aam
loope
and
lds
mov
ret
sub
mov
sub
cmp
leave
rorb
lods
mov
pop
roll
jl
cmp
mov
arpl
xor
into
iret
adc
cmp
lods
fidivrl
pop
push
push
xlat
inc
loopne
cmp
int3
or
push
push
dec
arpl
insb
ret
sub
enter
mov
mov
pop
lods
cmp
xor
adc
dec
add
mov
loope
xor
mov
xchg
cmp
stos
pop
and
cltd
in
test
pop
xchg
incl
mov
xor
stos
std
int3
fsubp
lcall
xor
or
movsl
pop
mov
jne
push
movsl
and
nop
sub
mov
jmp
xchg
ret
bound
mov
stos
shll
sub
shlb
mov
cmpsb
jl
fwait
dec
adc
aam
scas
mov
jp
in
xor
mov
add
movsb
xlat
orb
ret
dec
and
rcr
jg
add
fistps
fcoml
cmp
lret
rorl
add
xor
aas
lret
and
pop
xor
fwait
pop
lret
mov
mov
inc
push
hlt
call
clc
ss
ljmp
jae
cmp
test
rcll
add
mov
aas
inc
enter
leave
push
xchg
aam
push
cld
push
rcl
loop
or
dec
pushf
cli
sbb
loope
xor
icebp
cli
imul
test
fnstenv
bound
xor
mov
enter
into
mov
jle
into
scas
sbb
lods
je
scas
inc
cs
ret
mov
clc
pop
imul
xor
ja
and
mov
xor
arpl
dec
mov
jne
jnp
and
pop
dec
xchg
mov
or
pop
pop
jge
stos
push
or
rcr
pop
inc
xchg
dec
pop
add
or
cmp
jp
loope
cmp
inc
dec
inc
mov
orl
inc
js
jmp
add
out
in
xchg
mov
scas
jg
sub
mov
push
inc
add
mov
movd
sbb
adc
xlat
adc
sub
cwtl
jmp
lret
inc
shr
movl
ss
int
imul
fwait
std
call
pop
cmp
sahf
mov
push
cmp
push
adc
inc
call
jb
outsl
cmp
jns
cltd
scas
xchg
imul
cmp
inc
add
xor
js
or
xor
inc
jle
int3
stos
sub
pop
and
aad
cmp
out
fnstcw
dec
call
pop
dec
lret
sub
xor
adc
mov
mov
scas
and
movsl
mov
pusha
cwtl
stos
jle
sub
cmp
pusha
xchg
mov
inc
inc
mov
pop
pop
scas
cs
inc
xchg
sbb
enter
fsubrs
dec
xchg
nop
dec
push
les
pop
out
jl
add
add
or
pop
lods
jno
stos
pop
push
dec
fsub
insb
push
xor
fisubrl
leave
dec
gs
adcb
sub
shrb
shrb
and
lock
scas
jns
stc
cmp
jne
sbb
dec
aad
or
mov
mov
xor
les
or
daa
xor
fdivr
pop
mov
xor
inc
test
xchg
ja
inc
roll
movsl
in
push
sbb
xchg
xchg
mov
aas
pop
mov
or
ja
inc
add
ljmp
test
in
push
pop
arpl
dec
or
mov
jp
mov
adcl
out
jne
insl
add
adc
aaa
sbb
loope
pop
or
clc
and
adc
xchg
cmp
stc
cmp
testl
lock
pop
xchg
add
cmc
aam
add
fwait
daa
idivb
jnp
sub
jg
push
imul
aas
lods
push
stos
mov
mov
bound
fsubl
lods
cs
test
lock
ja
lds
jne
mov
mov
shrl
push
add
popl
jmp
sub
leave
fdivrs
lds
in
adcb
sbb
int
add
push
push
push
sbb
out
sbb
cmpl
jns
adc
nop
cmpb
test
mov
inc
jne
jp
jbe
push
dec
movsb
cmp
and
push
scas
jne
pop
mov
sub
sbbl
pop
jae
lods
test
push
call
out
add
or
ja
aaa
adc
mov
mov
stos
push
add
ljmp
pop
cli
inc
mov
faddl
stos
aas
fs
xchg
test
movsl
jb
jmp
cmpsl
sub
test
jl
or
loop
push
mov
push
sub
push
or
pop
sbb
xor
add
xchg
cwtl
push
call
inc
adc
and
frstor
sub
sti
adc
aam
andl
dec
cwtl
xchg
dec
out
sub
sub
jmp
mov
in
dec
jb,pn
push
data16
sub
pop
or
jecxz
dec
add
dec
push
push
shll
fs
cs
add
jb
cmp
das
or
jl
enter
xchg
fsubrl
jecxz
std
and
lret
sarl
and
movsl
stos
jne
dec
dec
add
pop
adc
sahf
dec
cld
cs
stos
jne
and
inc
lods
int
xor
dec
sahf
adc
scas
jecxz
or
out
stos
xchg
mov
dec
stos
cmp
fdivrs
sarl
mov
mov
aad
cmp
pushf
and
inc
inc
scas
in
movl
add
sub
insl
dec
outsl
inc
and
add
addr16
gs
adc
call
cmp
and
dec
cmpl
jl
stos
cwtl
cmpsl
jge
jnp
and
in
xadd
mov
adcl
lods
fs
ljmp
inc
dec
loopne
push
sbb
stos
mov
lret
fcoml
lahf
xchg
mov
aad
inc
ja
dec
xchg
push
inc
es
das
xorb
xor
cltd
jbe
jne
aas
push
arpl
and
xor
xor
adc
xchg
js
loope
pop
sub
jne
sbb
cmp
mov
pushf
mov
inc
push
insl
or
aam
jg
pop
ljmp
scas
pop
movsl
pop
stos
and
aas
mov
pop
push
jne
sahf
and
dec
jg
dec
hlt
dec
mov
lock
ror
gs
sub
dec
adc
cmpsb
lea
ss
jge
sbb
jg
outsb
cmp
cmpsl
clc
dec
cmpsb
fisubs
pop
aas
jle
mov
shlb
rcrb
jp
mov
repz
hlt
push
lret
mov
test
pop
repnz
cmpsb
jg
popf
daa
or
push
data16
push
push
sub
js
xlat
xchg
jmp
test
sub
dec
jo
mov
addr16
inc
jbe,pn
aas
jp
and
inc
repz
lret
xor
pop
rcrb
mov
not
push
cmc
loop
jecxz
sbb
enter
mov
or
push
sub
dec
mov
adc
pop
gs
push
push
fdivrl
imul
xlat
leave
push
test
mov
add
xlat
pop
out
mov
jnp
mov
outsl
test
jg
fmull
xchg
push
sub
in
aad
sbb
push
cmp
movsl
imul
mov
jnp
inc
add
jns
lds
stos
and
jl
test
lds
nop
add
fs
mov
inc
insl
jno
sub
dec
leave
mov
lahf
dec
mov
or
sbbb
fstl
ds
sahf
sub
inc
sub
shlb
mov
enter
xlat
jo
and
jae
jbe
add
inc
fisubrl
stos
filds
scas
mov
cmp
and
push
aas
lds
sub
push
or
add
enter
into
test
sub
dec
xchg
outsb
dec
ds
fwait
das
dec
lahf
addb
mov
xor
movsl
and
jns
pop
dec
aas
ja
push
ljmp
jae
test
jnp
ffreep
sub
pop
push
movsl
int
add
cmp
inc
lods
aas
sbb
mov
aad
push
push
cmpsb
xchg
fcmovbe
dec
xor
jmp
or
inc
push
push
sbb
adc
stc
hlt
lret
stos
cmpl
add
jae
jmp
inc
sar
insl
cmp
scas
and
mov
push
jno,pt
xchg
mov
dec
dec
cmp
cmpsb
and
add
in
mov
sub
sbb
mov
and
shlb
push
arpl
add
sub
inc
lret
scas
je
sti
push
xchg
mov
jne
xchg
sub
ljmp
out
and
fldl
xchg
mov
sub
xchg
mov
imul
jl
lret
cmp
enter
push
dec
jmp
cmp
insl
xchg
xchg
faddp
dec
es
mov
mov
adcl
cmpsb
sub
push
xchg
jb
push
adc
xor
xor
dec
daa
movsl
lds
inc
inc
outsb
mov
out
jnp
outsb
push
adc
jg
das
pop
bound
rcll
and
adc
fisttps
mov
les
jp
mov
daa
or
push
scas
sub
ret
dec
pop
fldl
test
mov
adc
jg
jb
lret
pop
jecxz
adc
enter
nop
sbb
inc
jne
xor
fimuls
or
sti
pop
push
stos
jecxz
jne
adc
test
and
cli
mov
stc
xchg
dec
jne
mov
shll
insb
and
xor
stos
mov
fcompl
testb
nop
mov
lods
mov
dec
cltd
pop
cmp
mov
lods
xor
mov
scas
jo
ror
int
or
mov
jo
test
dec
jae
xchg
call
jg
push
sbb
nop
idiv
fisttpl
hlt
out
push
lock
xlat
cltd
mov
fcomps
push
inc
push
dec
dec
inc
push
test
sbb
cmp
or
lea
cli
dec
push
mov
mov
dec
cmpsb
xor
adc
jns
sub
pusha
dec
sbb
xchg
mov
ret
in
aas
dec
rorl
dec
sub
addr16
mov
dec
and
fneni(8087
pop
out
push
pop
mov
push
mov
inc
xor
shlb
roll
rorl
mov
mov
xlat
mov
and
cmp
mov
mov
adc
fcom
inc
xor
cs
nop
jae
mov
jg
das
mov
dec
gs
cmpsl
pop
sub
and
sub
push
stos
scas
mov
sarl
mov
lock
adc
and
and
and
adc
mov
test
dec
test
iret
xor
push
les
es
push
mov
enter
aas
add
and
cmp
frstor
jecxz
cmp
lcall
and
xor
negb
fs
test
dec
arpl
adc
mov
ficomps
mov
ficomps
mov
test
shlb
sub
and
pop
and
push
or
adc
into
mov
sbb
mov
adcl
add
push
mov
mov
loop
pop
fiadds
jne
ror
ja
mov
push
and
or
xchg
pop
je
xor
xchg
cltd
cmp
xchg
pop
and
xchg
mov
cmc
mov
ljmp
or
ss
push
mov
or
fsubl
mov
rol
jge
push
push
ficompl
bound
aam
hlt
adc
loop
loopne
add
jle
lock
aaa
jo
jge
shrl
push
mov
cmp
dec
nop
icebp
mov
aam
ret
fs
and
push
sbb
jge
movsb
inc
loope
mov
xor
sbb
jnp
add
pop
ljmp
mov
in
pop
mov
popf
int
ret
push
push
lcall
add
hlt
les
dec
test
inc
sar
mov
jae
dec
nop
test
mov
mov
cmp
rorl
movsl
cmp
pop
xchg
xchg
push
jg
dec
jmp
imul
xor
in
mov
inc
ret
inc
add
push
arpl
inc
mov
cmp
jno
lock
rorb
or
andl
addl
mov
pushf
inc
xor
mov
test
xor
pop
jmp
mov
cli
nop
push
add
mov
inc
jb
mov
aad
mov
mov
push
dec
hlt
pushf
insb
aas
int3
push
sbb
adc
mov
xchg
pop
push
add
movsb
fisttps
xor
mov
sub
sub
and
sbb
int
arpl
jne
pop
cs
mov
dec
daa
push
add
jnp
pop
lods
out
jmp
sub
andl
ret
mov
push
or
pusha
stc
jnp
in
push
sbb
js
rcll
mov
dec
je
cmp
lret
call
xchg
movsb
jbe
scas
test
pop
mov
adc
mov
imul
rcrb
cwtl
sub
ja
fwait
sub
xor
cmp
xchg
mov
cli
jne
sub
or
and
negb
pop
cmp
xchg
fisubs
add
in
jle
push
mov
push
enter
add
mov
sub
jbe
and
imul
or
div
xchg
sub
sbb
cmp
pop
cmpl
hlt
repz
movsb
sub
pop
mov
lods
push
mov
xchg
dec
imul
in
jbe
jecxz
cmc
aas
jbe
mov
je
dec
sub
int
clc
repnz
stc
push
iret
stc
xchg
dec
xlat
pop
mov
ret
mov
mov
cmp
jge,pn
xchg
in
mov
mov
int
cs
call
sub
in
ja
and
loope
aas
mov
cmp
cmp
or
fbld
push
aas
sar
jg
or
orl
jae
cs
sub
hlt
adc
stos
jg,pn
sub
addr16
les
imul
into
mov
daa
jbe
pop
test
add
repnz
inc
push
hlt
and
xchg
push
jle
or
mov
and
cmp
out
adc
leave
mov
out
xor
mov
dec
sahf
ljmp
dec
jge
sbb
sbb
push
adc
sbb
sub
xchg
movsb
adc
fsubr
ret
mov
icebp
hlt
add
aam
xchg
or
add
cli
movsl
mov
xchg
enter
insl
pusha
mov
cmp
cmp
int3
sub
ficompl
mov
sub
cmpl
push
int3
leave
or
dec
paddsb
cs
pushf
cmpsl
rcll
and
jnp
mov
push
inc
imul
pop
idiv
addr16
fwait
mov
mov
jne
mov
lahf
mov
shrb
xor
pop
mov
jle
xor
std
sub
ja
mov
xor
loop
popf
mov
lds
cli
nop
sub
stos
je
test
dec
cli
pop
xchg
dec
xor
pcmpeqw
fdivr
mov
fidivrs
sbb
xlat
fnsave
mov
add
fs
and
arpl
jmp
push
push
test
bound
fdivrl
dec
sbb
or
push
dec
pop
push
sahf
push
inc
jne
cmovne
mov
repnz
jg
pop
fcoml
mov
ljmp
xchg
js
mov
stc
mov
sub
mov
xchg
mov
mov
mov
sarl
outsl
dec
sub
mov
xchg
cs
mov
jg
shrb
jg
jbe
add
mov
and
mov
mov
add
inc
sar
push
das
ja
test
and
mov
push
cmp
jns
jae
movsb
push
lock
add
dec
in
mov
in
sub
inc
cmp
adc
jno
hlt
das
inc
insl
fisttpll
or
push
es
mov
mov
aaa
decb
push
dec
and
inc
mov
mov
cmp
xor
aam
sbb
fsubr
xlat
shrb
pop
jae
pop
dec
aad
test
cld
xchg
pop
pusha
aam
cld
pop
adc
sub
mov
clc
xchg
xor
popf
movsb
xchg
outsl
xor
mov
popa
std
xchg
jg
dec
add
mov
inc
pop
jne
push
stos
ljmp
xor
jne
int
pshufw
orl
and
mov
inc
jno
fstpt
in
dec
dec
inc
or
aam
cmpsl
add
jb
and
arpl
sbb
imul
sub
xchg
lock
movsb
add
adc
adc
cmc
adc
push
pop
bnd
xor
shr
xchg
dec
sub
scas
mov
dec
push
nop
dec
sbb
dec
push
scas
imul
mov
sbb
cli
sti
call
cmc
shrl
mov
shrb
push
cmc
jno
or
lahf
lret
dec
call
pushf
jne
push
add
in
loopne
jge
and
fwait
imul
push
insl
ret
scas
outsl
adc
inc
jne
pusha
xchg
dec
aad
jg
mov
inc
scas
lea
fsub
fstpt
inc
jne
arpl
xor
orb
jne
int3
decb
insl
jg
subl
insb
inc
icebp
fstpl
les
imul
mov
jge
in
cmc
in
popf
pop
or
adc
lret
xchg
out
pop
sbb
pop
push
pop
cmp
sbb
xchg
js
and
sub
lret
aas
fdivrl
sahf
lock
xchg
pop
fnsave
jns
pop
mov
cmp
add
xchg
outsb
scas
xchg
sti
or
cs
int3
out
and
ret
mov
cwtl
dec
push
aam
xlat
das
or
out
dec
jp
insb
jnp
cmp
sub
rclb
push
cmp
and
and
incb
lods
test
add
and
stc
bound
pop
shr
mov
call
push
sbb
push
mov
xchg
enter
js
lahf
test
dec
aam
notl
push
mov
sbb
and
pop
push
js
dec
jae
mov
ja
fs
movsb
adc
cmp
adc
pop
jnp
test
sbb
add
mov
jg
push
pop
jmp
int
dec
pop
dec
xor
jp
jne
xchg
in
mov
inc
xchg
push
adc
push
mov
sbb
and
sarb
rorb
dec
test
out
mov
mov
cltd
js
jl
stos
xor
orps
xor
dec
dec
mov
adc
jge
cwtl
mov
rclb
lods
test
jno
in
std
ficoml
cmpsb
dec
js
xorb
and
jge
dec
out
fwait
mov
push
jmp
fidivrs
mov
sbb
cmpsl
bound
scas
pop
test
dec
dec
test
out
push
and
frstor
mov
mov
inc
out
add
fidivrl
sub
push
or
mov
or
fbstp
or
add
jecxz
mov
adc
adc
nop
pop
and
mov
jo
mov
and
es
les
lds
or
push
fwait
jns
dec
sbb
repnz
jo
addr16
dec
jne
sarb
fs
leave
jge
xchg
inc
inc
xor
or
jge
cs
es
daa
cmpsb
hlt
ret
jnp
test
jg
dec
adc
inc
mov
js
insl
stc
inc
dec
data16
cmc
dec
fs
in
mov
lods
push
pop
iret
or
sub
mov
sbb
push
pusha
push
sti
cmp
sub
add
inc
scas
cs
jo
stos
and
lods
stos
arpl
lret
out
in
dec
flds
notb
scas
or
push
or
mov
xor
or
shll
lds
adc
cs
jecxz
sbb
movsb
mov
jp
movsb
mov
sub
xlat
and
xchg
test
cld
mov
mov
xor
mov
xchg
pop
adc
stos
call
sti
insb
mov
or
xlat
inc
inc
jg
mov
xchg
cmp
lods
insl
pop
dec
pop
mov
movsl
dec
mov
insb
cmp
jp
lahf
addr16
sub
jmp
cmc
mov
or
inc
das
call
mov
popf
stc
jne
mov
std
lods
pop
das
xlat
mov
mov
test
inc
dec
or
mov
imul
inc
hlt
lea
rolb
fs
out
out
aaa
enter
cs
pop
loop
mov
lahf
dec
or
lcall
dec
cmc
cmp
mov
test
or
jbe
push
out
push
test
and
sub
adc
sub
repz
addr16
ja
and
shrl
jmp
mov
shrb
gs
jns
inc
inc
jnp
rcrb
enter
push
sub
es
sbb
out
lea
mov
jecxz
inc
scas
out
inc
inc
cmpsb
add
xchg
movsl
inc
jb
push
test
fs
add
jmp
decl
xor
dec
imul
inc
mov
inc
sarb
scas
mov
and
fs
dec
mov
popf
or
cltd
pop
add
mov
rcrl
and
pushf
fs
push
jp
aam
pop
or
loop
fbld
push
lret
aas
push
loop
cmp
jge
mov
sbb
stos
into
into
dec
sbb
es
dec
lret
cmp
enter
subb
jne
scas
jg
shrb
fwait
or
push
sbb
xor
push
mov
ds
dec
push
scas
jmp
sbb
es
pop
sti
sub
inc
dec
jne
cld
lahf
aam
subl
mov
mov
jle
call
fsubl
cltd
push
adc
shl
cmp
xor
or
pop
shrl
js
lret
xor
inc
xor
jo
pusha
sbb
push
push
cmc
cmp
fwait
aaa
jns
into
mov
inc
gs
movsb
jmp
xor
sahf
push
sbb
dec
add
sbb
ret
shl
repnz
arpl
push
and
xchg
xchg
mov
jle
dec
out
fdivr
jge
push
lret
or
cmp
sub
leave
fistpl
jg
xlat
test
lds
nop
pop
mov
lods
daa
add
ja
xchg
into
add
xchg
sbb
int3
sarb
je
mov
aam
sub
lds
fcmovne
pop
adcl
lret
cs
inc
ds
hlt
jecxz
test
mov
jge
or
lahf
push
add
rol
add
jne
adcl
sbbb
pop
roll
pop
and
stos
sbb
int
aad
dec
int3
xchg
clc
outsl
rorb
int3
xor
xor
and
clc
inc
or
xor
add
mov
int
dec
std
mov
cmpsl
arpl
lahf
dec
call
push
mov
leave
push
sub
push
fwait
mov
cmp
and
decb
int
xchg
inc
comiss
xor
roll
mov
and
addl
and
decb
mov
insl
mov
lcall
or
fildl
iret
mulb
jle
mov
xchg
sub
inc
leave
inc
scas
enter
fisubrl
loope
inc
push
dec
ret
into
out
mov
sarb
dec
cmp
inc
hlt
inc
push
insb
cli
sub
inc
pop
ret
dec
mov
lds
mov
les
mov
lods
dec
inc
inc
add
dec
gs
lods
push
inc
dec
add
loopne
leave
xor
dec
dec
mov
push
add
add
icebp
ret
and
scas
mov
movsb
stc
jg
sub
mov
jge
data16
loope
fisubrl
arpl
mov
mov
sti
and
sub
and
leave
mov
lods
icebp
xchg
or
mov
cld
mov
ss
mov
adc
jge
bound
fsub
sub
movsb
inc
fsubs
out
jl
mov
out
pop
xor
cld
push
sbb
imul
bound
dec
xor
inc
jb
add
sbb
xor
sbb
es
mov
pop
xor
or
loope
fsub
mov
enter
repnz
cmp
les
loop
dec
add
pop
int
xor
push
or
scas
test
pop
push
cmp
stos
fsubrl
test
jo
sub
nop
out
leave
into
xchg
mov
mov
fnstenv
mov
fdivs
leave
scas
test
xchg
fnsave
pop
data16
xor
mov
inc
sbb
jmp
mov
test
dec
loope
idivl
add
or
hlt
aas
movsb
cmc
push
cmp
and
or
adc
movsb
sub
dec
xchg
sahf
cmp
data16
inc
ljmp
insl
sarb
fsubr
aas
aad
stos
jne
insl
fldl
lds
pop
repnz
cmp
push
or
outsl
jl
pop
inc
test
inc
les
ljmp
push
cmpsb
xchg
or
mov
dec
mov
lahf
dec
cmpsb
loope
sub
mov
sub
loope
jne
mov
fiadds
scas
sub
cmp
and
ljmp
sub
jbe
mov
and
test
mov
pusha
xor
mov
rcll
jp
cmpsl
jae
pop
enter
push
addr16
ss
or
daa
sbb
movb
fsubs
fisttpll
inc
and
add
jne
inc
push
dec
mov
xlat
cmc
xchg
in
xchg
sbb
es
and
xlat
or
in
mov
enter
test
push
inc
dec
and
or
dec
xchg
xlat
inc
insl
and
test
add
std
push
push
xchg
fistpl
cmp
jnp
inc
cld
rcrl
shrb
es
stc
iret
xchg
xchg
lock
repz
jge
push
or
stos
and
cltd
in
les
xchg
dec
dec
jbe
cmp
mov
add
xchg
cmp
xor
sub
lret
fdivrs
or
int3
xor
aas
xchg
jmp
ljmp
and
lds
cltd
pop
xor
xchg
cwtl
adc
pusha
jne
movsb
outsl
jle
cmp
sub
mov
pop
enter
lea
xchg
or
pop
dec
frstor
mov
pop
mov
xchg
xchg
push
test
dec
shrl
leave
xor
push
cltd
add
aas
rol
mov
shrl
push
dec
fildl
cltd
movsb
inc
inc
loope
enter
ret
jmp
hlt
dec
add
stc
cs
cmp
lret
movsb
adc
test
gs
pop
inc
add
mov
int
sbb
cmpsb
xchg
rorl
incb
imul
iret
in
pop
inc
pop
iret
adc
aas
iret
fildl
xchg
jl
jle
fs
stos
adc
dec
mov
sbb
scas
repz
fisubrs
jg
xchg
pop
imul
and
push
jg
cmp
push
test
sub
jmp
xchg
test
pop
inc
dec
jle
dec
dec
xchg
and
ret
sarl
jp
pop
js
pusha
push
cmpsl
mov
lahf
je
cmp
or
mov
sub
pop
or
pop
jnp
jne
fidivl
cs
dec
aaa
push
jae
bswap
fcmove
adc
or
test
int3
rorl
or
loopne
fldln2
into
lds
and
push
sbb
cs
jo
sub
push
into
mov
movsl
mov
and
fisttpl
mov
call
cmp
cld
test
and
faddl
fdivrs
mov
jp
cwtl
test
push
fs
pusha
jns
lcall
movsb
jmp
pop
ficoms
mov
sub
rorl
aas
scas
ficomps
and
cmp
xor
lret
inc
xor
stos
mov
lods
test
imul
inc
cwtl
xchg
fiadds
cmp
mov
les
nop
outsl
pop
jnp
sti
pop
push
or
mov
cmp
shrl
nop
hlt
repnz
or
jp
mov
popl
push
out
and
mov
rcl
inc
push
fcomip
lahf
mov
inc
data16
dec
and
pop
jecxz
sbb
push
pop
mov
inc
loop
or
out
aas
cs
bnd
cmp
rcrb
xor
inc
test
aas
mov
adc
sarb
mov
js
adc
sbb
cmp
leave
xor
push
jno
bound
mov
fnsave
stos
mov
mov
mov
push
xlat
or
add
dec
xchg
jb
fwait
push
sub
jnp
or
fs
call
mov
xor
pop
dec
add
imul
inc
les
pop
js
mov
inc
movsl
pop
aas
dec
cmp
je
call
dec
icebp
xlat
xor
scas
pop
xor
xor
test
adc
call
iret
cmc
mov
popf
adc
cwtl
mov
ss
sub
imul
je
lock
sbb
dec
popa
in
es
cmpl
add
push
xchg
rcrb
test
cs
and
into
ffreep
arpl
in
arpl
fs
dec
pop
cmp
mov
cmp
cld
addr16
jne
repnz
addb
and
jecxz
pop
jp
sub
and
mov
adc
aaa
call
xchg
cmc
dec
jo
xor
dec
xor
and
mov
cmp
add
ret
lret
sub
shrl
scas
sbb
in
test
xchg
hlt
pop
cmp
lock
xchg
jl
stos
loop
sarb
ud1
dec
push
sub
movsb
lahf
clc
cmp
jnp
aad
lea
ret
cs
mov
lret
xor
in
aas
rorl
addr16
pop
inc
mov
lds
out
cwtl
lret
fmuls
loopne
jae
insb
adc
fs
inc
jmp
fdivr
sar
sbb
and
aaa
shl
cmp
movsb
jae
add
aas
mov
stos
adc
ret
mov
mov
repz
jl
lcall
adc
jne
jge
in
cmp
jo
or
jne
lahf
jmp
int3
mov
in
in
stos
insb
insb
pushf
in
dec
adc
fadds
push
enter
test
inc
sbbl
adc
in
stos
xor
insb
cmc
dec
test
enter
cmp
jmp
std
out
shrl
stc
inc
push
das
dec
faddl
cld
jmp
sub
xor
mov
pop
test
cmc
aas
adc
pop
cmc
cli
or
jp
stc
mov
cs
jb
mov
stos
in
lods
mov
test
ljmp
mov
test
pusha
sbb
dec
and
ljmp
test
movl
jmp
stos
pop
or
cmp
push
test
cwtl
rorl
aaa
xor
rcrl
lods
add
loop
mov
and
push
stos
xor
jns
stos
push
and
imull
xor
cmpsl
cmpl
test
xor
mov
dec
cmp
xorl
and
aad
shrl
arpl
xchg
gs
jmp
popf
cmp
or
or
xor
daa
dec
add
push
mov
xor
sahf
push
fsts
xor
mov
jecxz
aad
fidivrs
dec
aas
pop
mov
xlat
xchg
xor
xlat
je
and
dec
mov
sub
neg
add
xchg
icebp
jg
mov
je
and
and
daa
or
xor
icebp
arpl
subb
push
xor
push
and
fldcw
jp
jl
mov
jne
sarb
mov
in
loopne
jg
mov
lods
sub
cmpsb
and
pushf
mov
jmp
jo
add
sarl
dec
icebp
repnz
jmp
lea
jne
pop
jp
aas
push
test
xchg
inc
lret
push
out
push
and
cmc
jbe
add
mov
imul
daa
and
cs
cwtl
push
mov
inc
push
cwtl
jmp
sti
iret
jae
loope
inc
les
cmp
sub
add
dec
and
hlt
inc
or
out
pop
xchg
add
jle
imul
bound
adc
enter
inc
xor
pop
adc
lods
and
or
test
cmovne
andl
inc
sbb
cmp
je
cmpsl
ljmp
andl
adc
mov
and
cmp
push
test
dec
jge
cmp
inc
sub
lret
and
jne
sub
les
mov
mov
xchg
inc
call
enter
cmp
mov
pushf
xlat
mov
lods
shll
enter
es
fdivs
movsb
pop
or
dec
subl
aad
cmpsl
sbb
dec
rol
enter
nop
push
mov
fldln2
mov
call
jns
es
addr16
dec
and
and
dec
fdivl
or
or
insl
iret
lds
lods
rcl
dec
stc
xchg
gs
and
push
inc
filds
sbb
in
or
and
xchg
dec
jecxz
pop
inc
push
inc
scas
ret
cmpsl
ficoms
js
or
sub
les
and
movsb
pop
mov
adc
popa
push
push
mov
dec
mov
sti
in
mov
adc
arpl
pop
mov
add
cmc
sbb
xlat
aad
xchg
push
ret
add
sub
dec
xor
and
or
pop
add
lret
das
mov
loopne
mov
adc
push
shr
loopne
and
in
mov
jo
int
jnp
test
and
pop
stos
jl
xlat
inc
inc
jg
mov
sbb
mov
fistpl
inc
int3
pushf
jo
xlat
inc
ljmp
sbb
inc
je
sti
mov
ret
test
decb
mov
imul
jp
fisubrl
outsl
lock
es
fnstenv
mov
and
push
cmp
ds
pusha
aam
sub
lds
xchg
and
test
out
sbb
push
test
push
je
and
mov
popa
movsl
pop
test
shlb
in
inc
negb
xor
dec
jle
notb
cmc
inc
fs
int
leave
push
lahf
aaa
sbb
dec
jp
lods
popf
ret
lahf
lret
mov
jnp
rcr
fidivl
es
daa
cmp
stc
inc
movsl
add
int
jae
fs
or
jbe
arpl
leave
stc
rcl
push
and
sbb
adc
into
inc
ret
mov
push
inc
push
rorw
pop
xchg
xlat
fsubrl
fildl
mov
mov
loopne
add
sub
test
and
into
pusha
add
andl
cmp
xchg
jo
or
popf
shrb
outsl
rol
sbb
fcoml
popa
pop
stc
mov
inc
adc
leave
inc
dec
lods
loope
sbb
aam
rcr
lcall
hlt
xlat
ja
out
pusha
xchg
pop
and
call
push
and
cs
in
lock
stos
cmpsb
and
adc
lahf
je
jle
bound
jle
in
cld
cmp
fnstenv
ds
mov
insl
dec
fsubrl
aas
mov
dec
and
sbb
fsubl
shlb
mov
scas
mov
mov
inc
ds
mov
adc
sbb
mov
dec
cmp
loopne
cmpsb
enter
test
mov
sbb
rclb
jg
jbe
notl
imul
xorb
aam
dec
cmp
sti
dec
ror
mov
adc
xchg
mov
add
dec
sbb
jne
add
je
arpl
lret
dec
mov
fs
or
fstpt
arpl
nop
mov
pusha
inc
int
cwtl
push
add
mov
scas
inc
adc
sub
dec
sbb
ss
jne
sub
sbb
sub
mov
jo
jge
push
xchg
lods
push
add
and
xor
cmp
add
add
dec
xchg
int3
cmp
jle
rorl
add
inc
mov
add
inc
pop
daa
pop
add
mov
shll
cs
add
mov
xorb
or
pop
enter
sbb
das
std
outsl
adc
cmp
inc
adc
adc
pop
pop
mov
dec
cmp
adc
shrl
inc
and
mov
mov
shrb
icebp
jb
inc
imul
or
adc
xor
imul
xorl
cmpsl
cmpsb
inc
cli
dec
les
pop
in
push
or
fldt
jae
adcl
or
pusha
push
mov
xor
sbb
pop
sub
out
inc
mov
outsb
or
and
shl
call
in
test
ret
sbb
dec
pop
push
nop
movlps
inc
andl
test
add
jnp
jb
loope
jne
fidivrs
rol
jnp
jne
inc
daa
dec
mov
dec
nop
pop
pop
bndldx
inc
xlat
sbb
push
mov
dec
and
push
pop
jl
test
dec
out
enter
mov
lret
mov
mov
test
adc
jge
jge
lods
pop
mov
cmpb
shlb
push
icebp
fcoms
stos
inc
dec
cs
jg
popf
dec
shrb
dec
pop
push
aas
fcomip
sbb
or
inc
jle
pushl
imul
cmpsb
pop
push
leave
sarb
orl
dec
mov
mov
cli
and
pushf
fwait
ja
mov
shlb
rcr
adc
pushf
cmp
dec
cmp
xchg
inc
and
jge
scas
js
sub
jmp
jne
mov
jae
enter
outsl
sarb
lahf
es
lcall
cmpsl
jno
shlb
fsts
inc
jge
add
jnp
aam
add
and
xchg
sub
xchg
and
cli
or
cwtl
jge
cmp
add
ja
fisubrs
int3
das
leave
xor
loopne
imul
xor
pop
inc
icebp
shrl
or
enter
adcl
das
fdiv
mov
cmp
mov
leave
add
daa
inc
mov
sti
mov
mov
mov
mov
movsb
ja
lret
pop
or
aad
inc
push
jae
jne
pop
jbe
cmp
or
push
jae
test
push
xor
and
lds
out
in
push
loopne
insl
push
subb
dec
lods
out
jne
test
xor
jg
jl
lea
or
insl
add
mov
fdivrs
push
mov
les
and
daa
and
pmulhuw
and
imul
cmp
fs
jno
xchg
inc
adc
insl
xchg
cmc
movsb
loopne
outsl
aas
repnz
and
mov
lods
in
cld
mov
mov
mov
andb
aas
aam
mov
cmp
cmp
dec
xor
sub
stos
push
insb
in
mov
shll
and
jg
cmp
test
jmp
push
jge
inc
jae
jmp
jne
repz
ja
notb
ja
dec
ret
fnstcw
popf
ljmp
jae
das
adc
mov
lods
push
call
and
mov
jl
push
sbb
les
ljmp
and
jp
mov
push
stos
push
sbb
aad
or
cmp
adc
push
inc
add
les
loope
mov
inc
shrl
in
jecxz
mov
push
dec
jmp
and
orb
add
adc
mov
adc
mov
es
ja
pop
std
mov
jbe
mov
dec
xchg
pusha
in
xor
cmp
cld
fs
inc
xchg
sbb
sbb
das
inc
mov
js
test
jle
mov
pop
loope
jno
sbb
test
pop
bound
dec
jnp
scas
in
xlat
push
stc
sbb
pop
addb
mov
xchg
mov
sbb
pushf
shl
or
out
in
jae
mov
dec
in
sbbb
rcrb
sub
pusha
add
scas
dec
inc
jecxz
ljmp
enter
cmp
cmp
dec
inc
push
jp
xor
lret
imul
popa
addr16
dec
cmp
jecxz
sub
sbb
pop
push
cltd
fwait
dec
sti
push
push
mov
xchg
lahf
mov
or
or
dec
aam
shll
dec
shrb
inc
or
cmp
sub
add
test
xlat
inc
aaa
dec
test
sarb
pop
and
mov
rcll
or
paddsb
mov
sahf
xchg
ret
push
add
pop
out
mov
punpckhdq
scas
cwtl
inc
mov
jne
and
les
lret
cs
and
daa
lods
pop
fistpl
jns
adc
in
fisubrl
ja
or
cmp
nop
aam
bound
clc
inc
insl
mov
add
imul
jne
pop
xchg
xchg
inc
test
or
and
pushf
out
jecxz
sub
xor
cmp
out
jge
push
gs
pop
mov
int3
pop
hlt
xlat
sahf
lea
cmc
push
push
scas
xor
in
xchg
adc
dec
xchg
adc
and
stos
sbb
and
imul
jne
adc
push
inc
loop
dec
into
add
jmp
pop
ret
cmp
and
cmc
jno
inc
daa
mov
arpl
cmp
sub
sub
push
arpl
bnd
jecxz
arpl
jno
gs
cltd
pop
shr
mov
xchg
mov
jmp
loope
jne
ljmp
or
pop
inc
enter
xchg
leave
push
push
push
dec
mov
add
jg
popa
xlat
mov
inc
and
ret
pop
daa
jge
lcall
je
xchg
inc
out
or
push
and
lock
in
out
and
mov
sbb
cmp
push
or
pop
lea
lods
aad
push
jae
inc
mov
cmp
or
mov
jne
xor
push
cld
dec
jne
sbb
cmp
ja
sbb
movsb
rcll
call
js
jl
sbb
jle
stc
stc
add
pop
cmp
cwtl
xchg
stos
mov
idivl
movsb
enter
and
pusha
push
imul
pop
pop
je
dec
gs
scas
movl
dec
into
enter
push
outsb
enter
inc
sub
dec
and
pop
dec
int
in
aad
inc
dec
push
inc
cmp
or
cld
test
dec
js
push
adc
scas
popf
stos
outsl
jmp
ret
shll
hlt
addr16
xchg
aaa
add
in
rcrl
pop
cmp
cmp
das
in
mov
cmp
lcall
subb
test
stos
adc
mov
stos
lret
test
mov
fbstp
inc
push
push
mov
test
jne
lock
xlat
ss
scas
mov
mov
in
and
lea
scas
dec
sub
mov
and
jbe
or
fsubs
xchg
mov
dec
in
sub
mov
les
stos
push
jg
mov
adc
es
rorb
inc
xor
sub
add
pop
dec
dec
mov
mov
mov
mov
fadds
mov
mov
js
iret
subl
pushf
jmp
jle
idivb
fsub
je
push
jg
mov
mov
push
pop
imul
arpl
xor
pop
arpl
jne
jl
push
aas
xchg
movsb
sahf
in
cmpsb
je
in
scas
scas
dec
out
je
dec
add
into
mov
int
push
scas
dec
inc
jle
xchg
cmovne
lods
add
push
mov
movb
add
inc
aam
gs
mov
or
inc
xchg
push
push
mov
xchg
fmuls
add
test
int
pop
hlt
int
fsub
dec
dec
add
sbb
cmpsb
jl
sbb
cmp
inc
and
inc
pop
add
stc
push
movsb
std
add
aad
sub
xchg
insl
test
adcb
or
subl
daa
or
or
sbbb
ss
dec
cmp
ja
pop
mov
jnp
js
mov
cli
cmp
inc
fists
dec
das
inc
or
sbb
and
inc
mov
and
nop
lret
add
jnp
in
sub
mov
mov
bsf
iret
or
add
pop
lods
fidivl
scas
add
jne
addb
push
cmc
movsl
pushf
gs
jae
and
lahf
aam
jo
scas
das
popf
and
inc
cmc
xchg
in
dec
outsl
xchg
cmpsl
imull
and
adc
lret
and
pop
leave
xor
daa
fisttpl
push
dec
sub
push
mov
repz
mov
xor
pop
cmp
ljmp
cmp
lret
or
cmp
mov
mov
shrb
inc
lret
sbbl
filds
pop
mov
or
push
pop
add
leave
shlb
aaa
push
sbb
inc
jle
mov
cmc
ror
or
pusha
test
mov
sub
lea
cmpsb
leave
inc
push
jae
sub
and
popa
mov
inc
xchg
in
add
fwait
xchg
dec
inc
ret
out
xor
fmuls
pusha
lods
push
cmc
inc
xchg
movsb
sub
xor
fcoms
cmc
nop
mov
xlat
push
cmp
in
aam
out
push
lds
push
or
pusha
outsl
push
jl
sarl
add
ret
or
out
sbb
mov
dec
dec
sar
cmp
cmp
mov
shrb
incb
pop
jge
xchg
xchg
popf
inc
sub
add
pop
sbbl
jge
ret
jnp
add
push
push
inc
fdivr
cmp
push
cmc
ss
lret
test
pop
repz
sbb
dec
cmc
adc
xor
js
sar
push
dec
xchg
ds
js
and
ds
into
mov
out
insl
xor
jne
inc
cmp
aaa
dec
inc
bound
shlb
pop
out
push
movsl
sub
and
outsl
cmp
cli
pop
out
hlt
pop
add
test
fisubrl
cltd
rolb
ret
adc
les
aam
cwtl
xor
rol
sbb
mov
jae
sarb
cmc
xor
adc
push
mov
mov
lea
into
lcall
leave
mov
nop
iret
inc
rcll
or
push
cmp
test
addr16
cltd
xor
jge
stos
ret
jmp
les
add
and
push
mov
mov
and
rcrl
icebp
inc
test
push
aas
sbb
mov
push
add
mov
xchg
or
lret
aam
stos
inc
push
push
cmp
or
nop
fdivl
faddp
adc
into
movsb
sahf
pop
push
cmc
scas
sub
sub
jne
sub
push
imul
add
push
out
leave
xor
mov
mov
push
xor
enter
mov
dec
mov
arpl
dec
movsl
push
rcll
orl
mov
stos
jge
sbb
cmc
outsb
in
inc
in
movsl
das
xor
push
dec
add
push
aam
rcrb
shrb
pop
mov
sbb
and
push
stos
sarl
cmp
leave
por
sti
jae
jmp
and
insl
mov
shl
mov
shrb
pop
sub
fistps
lret
data16
inc
test
lcall
add
dec
mov
stc
mov
scas
sbb
inc
push
adc
test
cs
aad
pop
cwtl
pop
jmp
aas
or
xchg
dec
cld
movsl
inc
and
cmpsb
imul
psrld
pop
xchg
push
mov
inc
dec
jl
imul
jge
inc
xor
adc
shl
jnp
mov
pop
xor
test
cli
push
hlt
inc
aad
loope
je
insl
pop
inc
inc
or
xchg
outsl
mov
xor
xchg
xchg
out
in
mov
sub
or
dec
shr
jae
scas
std
cld
push
das
dec
sbb
cmp
mov
into
add
aas
jl
xchg
and
ret
decl
push
adc
test
stos
rorb
sub
xor
sti
lcall
shl
pop
push
dec
addl
test
mov
pop
and
xor
aad
jb
iret
inc
add
stos
cmp
inc
xor
mov
add
dec
or
mov
dec
mov
out
pop
sbb
cmp
add
icebp
cmc
insl
xor
es
scas
mov
and
inc
mov
xor
movsl
mov
mov
sub
xchg
pop
cmc
sbb
mov
inc
jo
push
or
mov
scas
pusha
daa
inc
and
inc
out
jle
and
xlat
scas
inc
insb
sub
adc
add
xor
inc
mov
imul
clc
mov
xor
imul
imul
dec
rorl
xor
scas
mov
test
fdivs
inc
mov
pop
mov
mov
sahf
jmp
mov
mov
sbb
xchg
daa
cld
hlt
movsb
xor
addb
inc
daa
dec
dec
sbb
mov
xor
lods
aam
loope
shll
in
shlb
dec
stc
repnz
xlat
ja
les
and
adc
sti
pusha
jae
mov
lret
call
and
inc
and
sub
insl
cmc
lcall
int3
mov
cmp
sar
pop
bound
push
push
jnp
loopne
push
dec
icebp
int
or
jo
push
push
mov
or
out
add
enter
sbb
sub
dec
fwait
aam
sbb
cmp
fldenv
jbe
pop
cwtl
add
jge
add
push
adc
out
mov
sbb
pop
shlb
mov
inc
popl
mov
mov
data16
mov
mov
and
add
in
enter
aam
imul
push
es
pop
mov
outsl
and
inc
xchg
rcrb
fisubl
and
inc
pop
jo
stos
imul
pop
dec
sub
jecxz
and
dec
and
xchg
shl
sub
das
jnp
mov
dec
sub
in
cltd
fistl
aad
push
push
data16
xchg
sbb
arpl
into
jb
popa
mov
pusha
jae
add
lret
cmpsl
in
leave
xchg
shlb
stc
ffreep
dec
jne
pop
sub
mov
stos
dec
sub
int3
xor
mov
sub
pop
ja
movsb
clc
and
movsb
nop
and
popl
mov
adcb
and
cmp
hlt
or
push
cmp
loopne
pop
cmpsb
sbb
inc
shrl
scas
or
cld
cmp
aad
shll
push
sub
and
shlb
jns
stc
mov
xchg
gs
in
lods
cmp
dec
test
sub
cld
inc
push
inc
addr16
jge
test
sbb
xchg
ljmp
je
cli
sti
fmuls
mov
push
jnp
arpl
mov
jge
rolb
ret
jp
cmpsb
sub
dec
hlt
test
aas
aas
jnp
xchg
inc
mov
icebp
lret
jle
pop
sub
xchg
jg
es
aas
or
mov
popa
mov
mov
sub
incl
sbb
and
cld
mov
sahf
jmp
add
cwtl
or
fcomps
mov
mov
mov
decb
fldl
pop
sbb
nop
in
push
mov
mov
sets
fisttpll
jecxz
xchg
jle
xor
enter
xchg
out
pushl
dec
mov
enter
js
push
loopne
ret
cmpsb
stos
pushf
sar
mov
sub
xor
int3
testl
sahf
push
aaa
pop
ds
es
and
sub
or
inc
pusha
mov
cmpb
mov
xor
jns
xor
sub
ds
es
stc
add
roll
and
jnp
popa
sbb
and
js
push
sbbl
getsec
push
test
test
mov
das
xchg
mov
and
add
inc
fdivrs
and
jge
enter
inc
and
leave
aad
push
fldenv
mov
jge
movsb
xchg
popl
es
cmp
fcmovnbe
pop
jns
lds
mov
xor
bound
pop
dec
ret
xlat
leave
int
inc
pusha
outsb
dec
je
pusha
add
cmp
test
aam
mov
dec
cmp
arpl
pop
test
addr16
inc
inc
lcall
mov
pop
sbb
ror
sbb
inc
ret
jg
or
pop
or
hlt
movsb
or
cmp
push
test
cmpl
mov
shrl
mov
inc
dec
jno
les
les
xlat
xor
fwait
hlt
bound
dec
jp
push
jmp
inc
mov
loope
repz
or
subl
mull
divb
cwtl
out
insl
and
xchg
cmpsl
jae
sub
popa
inc
fcmovu
jp
adc
ret
sub
jg
jae
insb
fsubs
xchg
rorl
movl
rcr
or
mov
pop
mov
xchg
scas
rcrl
jns
mov
jbe
rcll
mov
call
ja
dec
mov
xor
fwait
cld
fadd
data16
sub
add
jl
mov
sbb
xor
sub
fildl
roll
jne
ficomps
push
adc
insl
fwait
sti
add
mov
cs
mov
bound
jne
jnp
lcall
sub
dec
cmc
fdiv
mov
arpl
push
cmp
into
push
cld
enter
push
mov
mov
cmp
mov
lea
cmpsb
les
pop
mov
dec
and
iret
sub
sbb
je
std
nop
and
add
xchg
pop
movsb
loop
inc
pop
hlt
popfw
arpl
fsubrl
cmpsb
sahf
jmp
roll
xor
int3
cmp
dec
jae
mov
sub
test
xor
jge
test
inc
adc
mov
jne
dec
aam
adc
gs
xlat
fdivrs
jmp
xchg
cmc
cmpsl
cmp
pop
stos
rcll
mov
divl
mov
repnz
push
jg
push
pop
inc
imul
or
dec
inc
adcl
insl
nop
mov
cmp
xchg
fwait
xor
add
mov
cmc
push
cmp
cs
shll
aam
add
jb
xor
push
jo
es
enter
jnp
sub
movsb
xchg
in
dec
cmpsl
xchg
push
addr16
std
dec
bound
xor
and
dec
mov
mov
mov
jne
stos
adc
fsts
leave
jmp
in
std
hlt
push
in
sbb
jnp
mov
mov
jae
test
cmp
dec
adc
movsl
sub
outsl
mov
mov
fs
aas
cmc
xor
add
adc
and
repnz
fists
inc
fwait
mov
dec
or
cmp
push
jecxz
jle
and
call
push
movsl
cld
or
sub
pop
adc
out
mov
arpl
mov
shrb
je
jecxz
pop
xchg
orl
aam
arpl
ficompl
test
cmpsb
xchg
add
dec
xor
fs
jbe
sbb
xchg
push
mov
scas
sub
test
pop
cwtl
jg
test
incl
push
rcl
push
fld
sbb
inc
push
add
mov
imul
lahf
sub
sub
les
cltd
scas
jp
sub
add
scas
inc
scas
sbb
test
ss
fimuls
fildl
cmc
push
or
mov
mov
mov
in
push
ret
imul
stos
rcrb
jge
es
mov
repz
loopne
inc
out
repnz
dec
push
es
shlb
les
int
dec
outsb
stos
sbb
cmp
sub
gs
cmp
mov
push
stc
pop
pop
out
roll
or
xchg
dec
mov
mov
cmp
shrb
sub
push
mov
xor
mov
mov
jnp
int
andb
dec
xchg
sbb
inc
iret
jne
adc
out
dec
xchg
pop
sti
test
inc
or
fwait
not
jnp
jg
out
and
test
movsl
mov
decl
stos
mov
addl
add
ss
jno
pop
sub
jmp
jecxz
aad
push
pop
rcrl
xlat
scas
mov
sub
shrb
jg
in
xor
mov
push
add
push
add
jns
fidivs
mov
filds
test
in
js
fiadds
movsb
or
lret
add
fistl
pop
mov
push
cmp
mov
sbb
aaa
dec
test
mov
ja
fistl
mov
das
ds
push
stc
cltd
shlb
xor
push
fwait
mov
jo
imul
mov
stos
adc
mov
xchg
fldcw
repnz
and
out
pop
xor
jne
sub
mov
mov
push
xor
inc
fdivrl
movb
and
ja
ficoms
or
in
add
xchg
call
add
and
bound
sub
inc
inc
fsubp
shrl
mov
aam
arpl
fst
lcall
test
cmp
es
outsl
in
sub
jne
pop
pop
sub
ja
add
mov
cmp
xor
push
xor
cmp
pop
shrb
and
rcl
loope
inc
adc
mov
sbb
nop
je
sahf
loop
cmp
push
daa
adc
adc
loop
out
push
lret
ljmp
push
test
shlb
inc
mov
cmp
scas
jge
mov
dec
enter
adc
lcall
and
or
jbe
clc
ret
cltd
push
add
mov
mov
mov
sarb
jo
mov
and
jl
rcrl
iret
pop
lret
addr16
sbb
psubsb
test
jae
pop
jg
and
push
jnp
scas
jae
shll
ret
clc
sahf
repz
stos
cmp
dec
or
sub
sbb
movsl
jmp
bound
sti
cmpb
std
jo
xchg
xchg
fisttps
imulb
pop
pop
and
mov
aas
test
cltd
fwait
xor
or
ror
add
xor
jge
mov
sub
cltd
stos
outsb
mov
inc
fcoml
pop
push
sub
jl
jmp
or
sbb
push
cmp
stos
inc
cmpb
je
push
lcall
cmp
mov
jmp
and
xchg
xchg
gs
cmp
push
sbb
ret
jecxz
hlt
sbb
xorl
add
xlat
roll
test
cmp
test
test
and
inc
shl
daa
push
jo
es
stos
and
pop
lods
gs
rcrb
popf
pop
pusha
lock
or
test
xchg
ss
ret
add
and
aam
dec
pop
leave
les
aaa
push
pop
mov
mov
xrelease
jg
inc
repz
sub
or
cmp
mov
adc
aaa
mov
out
and
push
rorb
push
and
push
in
cmpsl
stos
fwait
movsl
push
inc
dec
sbb
out
sub
jne
jl
das
pop
je
enter
cmp
xor
push
mov
movl
jmp
mov
roll
jne
sahf
outsl
les
lds
add
insl
scas
mov
cmp
pop
push
das
xor
jmp
vpunpcklwd
pop
dec
lea
cmp
cmp
xchg
icebp
out
pop
xchg
pop
pop
cmp
and
jno
sub
and
fbld
ret
rcrb
xchg
push
or
pop
lods
notb
dec
call
adcl
lahf
shrl
stos
daa
aad
nop
sub
sbb
inc
aas
dec
insb
sub
and
mov
js
clc
jb
dec
and
mov
and
imulb
rol
pushf
push
mov
aas
aaa
shll
je
mov
cld
pop
popa
lea
leave
pop
inc
push
shll
mov
movsb
push
cmp
and
stc
push
jmp
mov
rcll
push
stos
jecxz
push
cmp
or
sub
mov
pop
sub
push
push
adc
jle
cmp
call
sub
js
push
in
into
mov
mov
int3
iret
faddp
loop
inc
daa
fiadds
xchg
in
or
xchg
aam
rorl
stos
sub
and
inc
out
sub
cmc
cmpb
push
js
sub
cmc
sahf
cmovb
xchg
ret
adc
push
test
dec
pop
mov
in
cmpsl
mov
mov
inc
orl
jo
les
mov
and
xchg
setne
arpl
scas
lret
dec
sub
adc
imull
add
xchg
jbe
enter
push
push
inc
inc
xor
or
mov
push
movsb
pop
outsl
add
out
cltd
cmp
dec
mov
shrb
scas
outsl
stos
repz
in
imul
mov
sub
les
inc
aas
jns
push
sbb
adc
jae
push
roll
dec
hlt
push
dec
popa
inc
jns
add
inc
pusha
imul
movsb
pushl
enter
push
lret
jge
lds
insl
sub
sbb
and
mov
leave
popa
roll
das
hlt
sub
adc
sahf
movsb
cmp
in
dec
mov
xchg
xchg
and
push
dec
mov
mov
mov
fdiv
test
and
inc
out
es
dec
push
enter
divl
leave
dec
outsb
outsb
scas
mov
dec
ficoms
test
test
jle
or
scas
dec
cmp
or
fnstenv
mov
aad
mov
push
lds
orl
fstpt
adcb
inc
bndldx
cmpsb
xorl
inc
cs
or
mov
jl
mull
sub
sub
pop
insb
and
ljmp
pop
mov
push
xchg
xchg
and
pmaddwd
cmp
jnp
pop
mov
rcll
lods
xchg
arpl
or
lahf
jbe
stc
mov
and
xor
js
cmp
add
dec
fmull
adc
outsl
add
scas
and
jne
mov
ja
andb
stos
dec
pop
repnz
in
insl
jle
cs
or
test
push
push
and
es
mov
stos
test
fisubrl
imul
pop
jle
out
nop
fadds
pop
xlat
outsl
mov
sbb
sub
cmp
dec
addb
inc
and
sqrtps
pmovmskb
jb
lcall
jne
inc
mov
rclb
loopne
lods
stos
jl
add
and
adc
test
mov
and
push
adc
push
lods
fiadds
add
xor
shll
sbb
cmp
xchg
push
add
cld
dec
inc
scas
cs
xlat
lds
jno
ja
mov
mov
lods
push
shll
sub
cmpsl
pop
ja
mov
jns
out
or
jge
arpl
and
xchg
mov
ret
testl
mov
inc
adc
add
dec
pop
jge
and
add
cmc
and
inc
enter
mov
les
test
fldcw
push
or
inc
xor
push
sbb
out
and
ljmp
fistps
ds
jo
adc
xorb
add
mov
fnstenv
jle
cmpsl
icebp
mov
lret
or
add
xchg
int
mov
mov
inc
call
add
aad
pop
add
mov
fiadds
les
mov
inc
pop
ja
dec
mov
sub
inc
push
mov
and
cmp
dec
hlt
popf
add
pushf
int3
imul
push
pop
dec
push
dec
dec
hlt
ud2
loopne
push
add
lahf
xor
sub
mov
cwtl
lods
jge
sti
jle
sub
cs
fstp
push
iret
pusha
mov
xchg
movsb
neg
sub
cmp
sub
mov
mov
xor
add
pop
inc
rolb
mov
movsl
adc
inc
hlt
jno
cmp
cs
push
cmp
addr16
imul
cs
mov
jg
add
mov
mov
inc
pop
out
jg
lret
insl
mov
bound
inc
mov
fsubl
fistps
inc
pop
fsubrs
add
cs
jmp
sbb
in
mov
mov
lods
int
mov
mov
cs
mov
loopne
add
xchg
pop
dec
lea
and
sbb
adc
mov
subl
dec
or
rcll
outsb
lods
fsin
xchg
xor
add
repz
clc
sbb
daa
push
insl
pop
ljmp
lahf
sub
mov
inc
test
pop
shlb
sbb
shrb
and
xchg
xchg
in
lods
or
and
dec
stos
stc
loopne
test
xor
sbb
test
cmpsb
and
in
or
and
hlt
insl
nop
mov
filds
push
lcall
or
mov
xor
and
lret
pusha
jle
pop
roll
or
cs
jmp
cmp
mov
push
sub
lock
mov
les
rolb
xor
and
pop
push
rcrl
pushf
loope
cmp
push
cmp
rolb
sarl
and
add
data16
pop
pushf
mov
add
push
adc
es
xor
sahf
imul
cld
push
fwait
mov
xchg
int3
and
sbb
push
daa
push
stc
mov
mov
jnp
adc
aaa
and
es
insl
and
lret
ja
xor
push
sbb
lcall
mov
addr16
cli
sbb
daa
dec
lods
or
mov
stos
sbb
scas
pop
cld
xlat
fcmovnu
adc
lods
dec
adc
jb
xchg
dec
dec
jmp
inc
inc
or
leave
roll
rorb
push
inc
call
lret
sahf
rorl
inc
addl
mov
insb
insl
mov
test
add
dec
fisttpl
fnsave
mov
cwtl
cli
xor
sahf
popf
rorl
jle
push
push
xchg
stos
mov
loope
jno
out
clc
mov
decb
ja
and
pushf
mov
iret
jge
into
gs
push
dec
sarl
mov
mov
mov
pop
push
stos
shr
jge
sub
or
mov
arpl
mov
push
call
aas
xor
sarb
mov
or
pusha
sub
inc
mov
cmpsb
insl
mov
int
inc
dec
shlb
in
ret
cmp
hlt
push
test
fadds
and
push
pop
fisttpl
or
test
push
sahf
xchg
cltd
and
out
test
mov
scas
pop
lret
jmp
shl
jno
jno
jmp
out
xchg
stos
js
and
ret
sbb
or
aas
out
cltd
imul
orb
push
add
sub
insl
rol
add
andb
xor
sub
dec
bsr
dec
loopne
jbe
cmpsb
jle
std
or
pop
sti
test
cli
ds
dec
or
or
lahf
xchg
mov
push
ret
push
sbb
cld
nopl
xchg
cld
fsts
lock
xor
loopne
stos
pop
pop
sub
jge
inc
xor
punpckhwd
into
sbbl
into
inc
in
ljmp
orb
jle
in
adc
subl
lret
and
push
dec
mov
push
fisttps
enter
adc
stc
jne
js
mov
jnp
mov
ss
lahf
sbb
xchg
jb
lret
enter
in
jp
jo
lret
inc
push
dec
xchg
bound
xor
nop
jp
jb
movsb
xchg
rorb
imul
and
test
movsl
jns
stos
jbe
xlat
xchg
or
mov
jp
cs
push
outsl
out
sbb
jo
jl
xor
int3
int3
add
jl
cmc
inc
cmp
dec
mov
addr16
or
pushl
cli
test
push
loope
cmp
add
orb
pop
lret
cli
unpckhps
mov
sub
dec
lret
or
pop
jl
andb
or
lret
jne
test
and
mov
jp
add
shrl
sbbb
dec
gs
leave
sub
dec
cmp
add
push
adc
jl
bound
dec
adc
test
in
xchg
dec
mov
insb
cld
int
rcll
dec
push
faddl
cmp
mov
pop
push
xchg
daa
jle
outsl
lds
movsb
dec
cld
inc
insl
sbb
mov
dec
push
es
push
lds
aad
inc
and
mov
in
push
jge
mov
inc
pop
push
out
inc
pop
lahf
rolb
xor
jp
ret
lea
jge
push
std
sar
pop
and
dec
jl
push
fcos
dec
mov
lds
sub
push
and
and
test
aas
cmovs
dec
iret
shrb
dec
xor
sub
sub
fisttpll
leave
rcrb
xor
fstps
pop
mov
sub
lds
clc
push
xor
push
inc
add
jne
rclb
shrb
bound
inc
xor
sahf
cltd
sbb
push
lds
flds
inc
rcll
adcb
cmp
fiaddl
push
and
and
lds
int3
add
test
pop
push
mov
in
in
arpl
dec
lds
xchg
xchg
mov
jne
daa
jae
movsl
add
decl
cwtl
es
mov
jge
rolb
push
and
int
ret
jg
xchg
push
push
inc
push
sti
pusha
inc
inc
mov
push
lret
les
sub
sub
test
leave
pop
push
mov
pop
and
rclb
xchg
push
ja
push
mov
vdivss
pop
jae
adc
xor
sbb
inc
pop
mov
xor
and
cmp
mov
sub
loopne
out
push
or
sarb
test
lea
sub
cwtl
add
lahf
inc
rcll
daa
sub
mov
inc
flds
int
mov
pop
mov
gs
inc
repz
dec
std
lds
sub
push
pop
stc
stos
lds
popf
inc
or
dec
jle
cmp
addr16
lds
pop
or
lods
and
in
test
xchg
int
leave
adc
roll
add
mov
dec
dec
jno
xor
popa
pop
decl
cltd
inc
or
mov
mov
lret
mov
mov
int
and
imul
or
xchg
daa
cmp
dec
xor
push
mov
cltd
fisttpll
movsb
mov
in
mov
ja
aam
sub
inc
push
je
pop
xchg
xchg
add
je
lds
outsl
mov
jbe
cmp
jecxz
stc
lea
pop
int
lds
outsb
adc
xchg
ljmp
lds
xchg
push
mov
jo
push
inc
push
inc
push
test
or
pop
or
sbb
addr16
cld
rcrl
leave
adc
push
xchg
clc
test
or
fdivrs
lds
rcr
pop
mov
sbb
aad
out
push
adc
pop
add
lds
lret
inc
and
inc
stos
mov
scas
cmp
in
loope
push
pop
push
popa
subl
mov
jg
shll
dec
push
jecxz
adc
inc
aam
or
and
loope
xor
inc
aad
mov
sub
imul
pop
outsl
roll
lds
jae
cmp
xchg
add
inc
xorl
cmp
lock
popa
fwait
xor
movsb
dec
data16
test
cmpsl
inc
jne
int
aad
pusha
lock
outsl
cltd
pop
mov
lds
loope
in
lods
push
addr16
push
das
dec
jg
and
jne
inc
iret
js
mov
fwait
lods
push
xchg
aas
cwtl
xorb
mov
lds
inc
in
lds
or
fadds
jmp
lods
je
ret
push
vcvtdq2ps
dec
xor
pop
daa
leave
mov
loope
sbb
test
leave
popf
mov
adc
push
ds
pushf
hlt
xchg
fadd
cltd
shll
push
aas
out
mov
mov
ja
pop
dec
clc
mov
sub
ss
in
and
in
fwait
xor
inc
in
fld
insl
iret
xchg
sahf
inc
out
cmp
dec
inc
insl
jns,pn
mov
xor
lcall
or
jecxz
jbe
lock
xor
mov
push
das
pop
jo
js
sbb
shl
pop
ss
sub
mov
test
dec
cs
cmpsb
pop
je
retw
test
shr
in
push
inc
roll
xchg
mov
xor
fs
xchg
das
mov
and
insl
and
inc
and
mov
rorl
test
enter
jae
push
mov
pusha
daa
outsb
jg
mov
stos
pop
fiaddl
aas
enter
dec
ja
cmp
cmc
lock
push
mov
mov
dec
insb
jae
xchg
add
xchg
inc
rorb
pop
or
inc
inc
sub
leave
or
inc
jbe
and
push
gs
sbb
insl
ret
leave
jne
out
jle
lea
fistps
sub
dec
js
fnstenv
add
cld
les
insl
push
jnp
xor
mov
xor
das
cmp
sub
mov
out
movsl
add
jl
xchg
mov
mov
cmc
rclb
out
shll
sub
mov
jo
enter
sti
dec
mov
xchg
insb
jnp
aas
cmp
mov
cmp
xchg
push
or
cmp
sbb
aad
cmp
mov
outsl
adc
rol
xor
pop
repnz
arpl
mov
aas
leave
mov
lock
push
loope
movsl
pop
stos
pop
jb
cwtl
dec
cmp
lods
jnp
aad
mov
sarl
xor
inc
imull
fisttps
pop
in
paddb
adc
stos
jae
inc
shrb
sub
andb
data16
aam
data16
dec
mov
inc
fdivrl
in
fsubr
dec
lret
or
xchg
ja
mov
lahf
std
fcmovnb
loop
adc
add
mov
xchg
jno
fiadds
ljmp
inc
push
lret
lods
orb
int
push
and
daa
imul
inc
cmp
mov
adc
dec
test
and
pop
sub
sbb
int3
inc
subl
das
movsb
std
jecxz
outsl
shll
xor
cmp
push
xlat
adc
aaa
ret
loopne
inc
add
bound
fwait
lods
jge
dec
mov
cmp
mov
adc
dec
jle
adc
lea
sub
ss
cld
fstl
xchg
stos
movsl
xor
xchg
insl
stos
mov
lret
fisubrs
leave
lret
je
pusha
jne
mov
and
dec
push
hlt
lods
rclb
dec
mov
lds
push
inc
or
mov
cmp
in
ds
out
inc
in
cmovne
sbb
lea
sbb
bound
dec
es
adc
add
roll
jne
cmp
mov
dec
mov
les
mov
pop
cmc
shl
jo
roll
cmp
loop
and
ljmp
rcrl
sahf
lahf
sahf
insb
hlt
fnstsw
sbb
rcl
sub
into
xor
aaa
and
mov
sub
ja
xchg
je
les
sarl
rolb
xor
adc
sub
push
or
pop
and
mov
lret
mov
mov
enter
lods
cmp
xchg
stos
xor
repz
inc
lret
pushf
push
inc
aas
dec
pop
shrl
cli
cmpsb
pop
jl
out
cmp
stos
sbb
iret
jle
inc
lret
psraw
test
arpl
sub
in
xchg
jl
push
enter
fsts
mov
lock
dec
mov
push
dec
movsl
ficoms
pop
and
jnp
loop
fcoml
xchg
std
movsb
jbe
mov
roll
pop
fistl
jl
jno
in
shll
pop
xor
sub
push
ror
mov
out
mov
mov
pop
dec
push
push
sub
sub
jne
movsb
sbb
aam
ret
or
dec
sub
adcb
mov
pop
movsb
test
call
jmp
pop
fcompl
mov
ja
push
stos
pop
mov
xor
mov
std
fidivl
inc
dec
mov
pop
sarl
ss
adc
and
aaa
adc
bswap
in
and
jle
adc
push
dec
movsl
into
leave
mov
flds
int3
test
push
mov
cmp
les
sub
arpl
out
test
insl
mov
leave
jno
and
cmp
mov
addr16
pop
xchg
cmpsb
dec
jge
sub
sbb
shlb
xor
pop
mov
cmc
jae
push
mov
cmp
dec
pop
outsl
and
aad
jne
adc
rolb
fdivr
arpl
and
fcompl
sbb
fsubl
cli
adc
leave
int
and
arpl
jnp
jge
cmp
adc
pop
mov
or
cmp
mov
mov
jbe
xor
push
push
mov
mov
mov
pop
aam
and
dec
xor
les
lods
cli
std
sub
dec
adc
sub
push
decl
pushf
nop
push
call
or
fidivrl
in
dec
fsubl
aad
ret
lret
pusha
jl
divl
lock
dec
in
cmc
shl
xor
les
adc
repnz
das
xor
fists
test
and
lea
xor
mov
ja
push
cli
inc
inc
mov
faddl
ds
jo
sti
test
sbb
sbb
cmpsb
pusha
sbb
pushf
stos
cmp
in
aad
scas
arpl
mov
sbb
cmp
lds
xor
int
inc
aaa
mov
sbb
ja
mov
les
jp
sub
push
xchg
mov
jmp
xor
xor
sub
inc
adc
ja
fs
push
pop
pop
in
aaa
xor
push
cli
frstor
dec
add
lock
cmp
xchg
jg
mov
test
es
sub
jae,pt
add
inc
ss
pop
mov
dec
mov
push
jl
sbb
xchg
sbb
or
sbb
int3
jbe
fcoml
pop
ja
push
mulb
sub
popf
push
es
or
push
cmpsl
xor
mov
or
add
xor
jne
sub
outsb
mov
rcrl
inc
call
or
push
mov
sub
bound
les
rcl
inc
fnstsw
decl
cmp
lods
shll
je
push
lods
adc
bswap
pop
int
fcmovnbe
dec
sub
mov
or
or
jg
outsb
out
pusha
xor
jg
jmp
imul
adcl
push
adc
divl
cmp
aam
push
mov
aaa
xchg
mov
jne
xchg
test
inc
xorl
fwait
cmp
pop
clc
adc
test
iret
int3
jno
test
inc
mov
sbb
rolb
dec
jge
jg
pop
cmp
sub
cmp
and
jl
pop
cmp
add
lret
inc
xor
xor
and
stos
xor
adc
adc
adc
movsb
cli
inc
add
pop
or
sti
jne
movsb
xor
in
cmp
dec
sub
cmp
sbb
adc
or
ljmp
fsubs
lds
pusha
popa
mov
and
mov
inc
mov
add
icebp
lret
and
xchg
adc
mov
xchg
inc
sbb
fsubrl
mov
fcomp
imul
sahf
in
lret
lock
call
dec
add
les
aas
mov
hlt
inc
xchg
imul
loop
arpl
fsubr
pop
test
xor
push
jmp
les
iret
test
jb
cs
adc
pop
ret
arpl
xor
pushf
repz
movsb
sbb
xor
in
jl
jl
mov
lret
in
mov
mov
cmp
or
ja
int3
mov
mov
sub
aam
xor
ss
clc
in
dec
lret
xor
dec
adc
jae
mov
stos
or
aad
pop
and
stc
in
mov
ljmp
addl
ljmp
jne
sub
mov
push
cmc
sub
mov
push
fsubrl
mov
and
clc
pop
popf
xchg
push
enter
cmc
ljmp
scas
lds
insb
or
dec
adc
frstor
mov
test
cmp
mov
push
lret
jg
jecxz
xor
gs
imul
cmp
xor
movsl
xor
push
int
jecxz
and
jnp
movsl
inc
and
pop
xchg
mov
aaa
pop
cmp
jne
jle
data16
imul
xchg
xor
and
adc
push
cli
inc
lret
data16
fsubr
cld
lahf
and
cmp
xor
scas
popf
insl
ljmp
in
jnp
lods
and
test
ror
rolb
mov
fildll
jbe
dec
push
push
xchg
fcoms
xor
sti
add
fdivrl
mov
jge
xchg
pop
sub
push
cmpsl
ja
fs
add
mov
xchg
bound
inc
xchg
pop
xchg
popf
cmp
shrl
push
fadds
cmp
sub
sub
and
xor
shlb
in
push
ror
or
pop
jnp
adc
mov
or
das
out
mov
adc
or
shll
push
outsb
jne
or
jmp
xor
clc
cld
arpl
test
lds
sbb
adc
mov
sub
stc
pop
mov
mov
scas
xor
or
xchg
les
or
jne
lahf
pop
loope
xchg
fwait
scas
push
push
andl
push
cld
push
pop
ret
scas
test
push
push
int3
or
dec
dec
xor
jl
cmpsb
in
push
add
test
xchg
cmpsl
and
xlat
enter
fs
push
mov
jg
sbb
shll
pop
and
xor
test
ss
mov
pop
mov
fisttps
and
sub
lcall
add
js
popa
ja
lret
popf
int
les
cmp
punpckhdq
repnz
mov
jmp
xorb
sub
xlat
sahf
pop
decb
push
pop
sub
xlat
fsubrl
enter
sub
loopne
mov
aaa
out
dec
sub
loopne
aad
push
scas
outsl
sarl
mov
inc
orb
lods
aas
pop
pop
jecxz
jbe
sahf
sub
jo
or
outsl
jb
nop
icebp
scas
ret
or
addb
inc
inc
jno
dec
mov
push
dec
imul
popf
and
lea
in
jmp
cwtl
xor
mov
in
jne
loopne
xchg
mov
add
lock
dec
or
pop
xlat
lret
test
scas
mov
xchg
fwait
loopne
movsb
loop
inc
mov
subl
push
xor
addr16
int3
in
jo
stos
arpl
inc
adc
imul
push
pop
mov
xchg
aad
push
jle
and
sahf
test
inc
sub
inc
push
scas
xor
dec
jp
push
scas
pop
mov
adc
jg
jnp
lock
insl
sub
inc
dec
jp
push
dec
ret
mov
fsubl
jne
and
dec
xor
dec
arpl
inc
lahf
enter
add
sarb
xchg
gs
jo
mov
xor
loope
sub
aas
push
ss
sub
or
hlt
add
ret
out
push
adc
mov
dec
add
imul
iret
and
inc
test
xorl
fisubl
cltd
aaa
push
in
or
sahf
shrb
sbb
and
mov
aas
pusha
or
cmp
shlb
repz
mov
jae
ret
inc
inc
push
das
test
mov
jl
fstps
int
iret
add
sbb
push
or
fisttps
and
arpl
dec
sub
jp
pop
jns
stos
lret
test
dec
pop
bnd
or
rcrl
jle
sbb
cmp
fstl
sub
mov
fimull
das
sub
fnsave
clc
jo
mov
mov
mov
or
mov
int
pop
ja
dec
jg
fistpl
sub
addr16
cmpl
xchg
or
mov
out
mov
pusha
imul
xchg
dec
popf
add
jno
xor
stos
or
or
dec
hlt
arpl
out
pop
adc
adc
jmp
loop
pushf
mov
stc
add
mov
mov
stos
cmp
lods
mov
out
mov
mov
xor
out
lcall
pop
rorl
sbb
lods
hlt
add
xor
xor
inc
scas
hlt
xchg
sbb
push
cmp
fnstsw
dec
out
in
xlat
movsl
xor
les
loop
jbe
adc
jle
pop
popa
fstp
stos
sub
loope
mov
jl
or
ret
jns
xor
cmpsb
dec
enter
mov
xor
call
out
inc
pop
cwtl
mov
hlt
loopne
push
testb
or
xchg
jns
popf
enter
movb
push
clc
sti
fcomi
int3
xchg
ja
sub
jg
sbb
out
mull
cmp
cmp
aaa
scas
and
mov
push
cmpsl
cli
sbb
jmp
adc
test
pop
dec
cs
pop
jecxz
stos
lahf
repz
lret
je
ljmp
pop
pop
rorb
shll
mov
int
cmp
xor
lods
dec
xchg
int
ret
mov
xchg
xchg
enter
out
mov
enter
adc
insl
pushf
xor
sbb
not
lret
mov
or
sub
out
xchg
sub
and
cmp
xchg
add
rcl
loope
sbb
daa
std
rcll
lock
pop
sub
inc
mov
test
sub
enter
into
dec
xor
or
sbbl
add
inc
mov
test
out
int3
lds
ret
lods
in
popa
fldt
hlt
xchg
scas
test
xor
test
loopne
push
xor
in
mov
outsl
test
dec
sub
xchg
ffree
sbb
inc
popa
js
lods
jno
ret
sar
mov
dec
jecxz
shr
rcrw
les
pop
andl
test
xchg
cld
add
xchg
inc
test
leave
mov
fxch
int3
pushf
les
pushf
and
shl
dec
push
jne
sub
mov
dec
jne
repnz
mov
nop
xlat
xchg
inc
dec
jne
mov
leave
inc
dec
sub
lods
add
cs
movsl
mov
adc
jge
adc
je
test
cld
lock
mov
mov
stos
sub
jmp
aad
jae
jg
addl
ds
pop
adc
mov
lret
aas
movsb
pop
cld
push
sub
iret
roll
xchg
test
roll
push
es
jecxz
hlt
and
pop
push
pop
pop
js
add
mov
cmp
push
aad
ret
cmpsl
push
loop
pop
push
cmp
fsubrs
pavgw
and
or
in
enter
dec
cmc
ss
push
mov
pop
push
ret
and
push
stc
add
and
xchg
mov
jns
jo
cmpsb
jg
xchg
outsl
lea
mov
add
add
gs
mov
fsubr
jo
aas
fsubs
mov
lret
andl
xlat
lds
mov
jne
arpl
pop
inc
leave
rolb
mov
cmp
dec
jg
jmp
adc
sub
inc
aam
sub
adc
rorb
jne
loope
popa
jne
fs
dec
cmp
mov
ds
xor
aaa
wbinvd
and
xor
std
xor
mov
cmpsl
mov
or
jg
sbb
push
popf
push
or
cmpsb
mov
push
test
mov
pop
call
scas
in
in
pushf
and
xchg
mov
pop
or
sub
movsb
jle
push
pushf
push
imull
jg
aas
and
outsb
cmpsb
lds
mov
popf
inc
dec
ja
mov
ret
rolb
adc
or
xor
iret
test
dec
xchg
movsl
cmc
sbb
fisubs
add
push
push
lret
xor
nop
jg
hlt
repz
mov
and
in
mov
xor
pop
xchg
dec
mov
xchg
in
leave
adc
inc
or
sub
dec
push
je
jle
xor
sub
dec
add
and
in
ss
ret
pushf
pop
pop
jmp
pop
push
mov
arpl
and
movsb
cmp
aaa
and
and
sub
cmp
xchg
test
push
xchg
cld
sti
fwait
mov
inc
xchg
push
push
das
mov
push
aaa
out
aas
sub
jg
imul
in
xor
xor
pextrw
inc
mov
xor
test
pop
jmp
cmc
xchg
fstpt
jge
adc
pop
jg
sti
add
in
jbe
sub
aad
mov
xor
ret
sarb
gs
sbb
sbb
mov
test
pop
stos
aam
jbe
movsb
jg
xchg
jg
jne
mov
and
inc
cmp
xor
push
mov
fld
xchg
shl
aam
pop
mov
push
sbb
mov
divb
and
gs
jns
pusha
and
out
mov
ret
mov
dec
fsubl
xor
jnp
jecxz
jne
push
je
pop
cmpsl
jnp
jp
test
adc
dec
jl
dec
negb
leave
xchg
sub
add
pop
fldcw
mov
jp
push
cltd
lcall
jne
sarl
pusha
daa
inc
hlt
mov
cmc
xlat
mov
mov
ret
adc
int3
test
push
fbld
push
je
push
into
xor
mov
jnp
mov
inc
cmp
push
int3
sub
fmul
rcr
aas
cmp
loope
inc
test
xor
push
and
cs
and
sub
mov
push
jge,pn
fists
pop
add
or
leave
outsl
mov
dec
add
inc
xor
dec
or
daa
jmp
sub
adc
mov
movsb
jg
insb
scas
jmp
test
jecxz,pt
xor
jmp
aas
stos
test
scas
push
jne
dec
sarl
es
hlt
aaa
jbe
mov
test
lret
fidivs
jo
pop
decb
lock
or
jne
mov
rcl
sub
jmp
cltd
daa
push
xchg
xor
pop
or
and
dec
mov
xor
sahf
and
adc
lcall
in
and
jne
xor
dec
xor
fistl
sbb
add
out
out
addr16
or
cmpsb
pop
test
gs
call
xchg
push
mov
mov
jp
shll
inc
pusha
mov
subl
xlat
mov
inc
rolb
push
xor
mov
push
push
sbb
jle
jg
das
movsb
cmp
xor
xor
sbb
lcall
jl
lds
lret
add
and
inc
sti
aaa
negl
rorb
xchg
lds
push
jp
pop
inc
jle
aad
movsl
pusha
repnz
imulb
push
jle
nop
jmp
repz
std
orb
jle
jb
sbb
jge
inc
daa
pop
dec
lea
mov
mov
lahf
jecxz,pn
dec
cmp
mov
into
cmp
mov
push
lea
mov
hlt
imul
in
push
mov
cli
cmp
jns
xchg
add
inc
and
andb
push
add
cltd
push
cs
push
jns
popa
push
bound
jg
cmp
mov
or
sahf
gs
fldt
aaa
cmp
addr16
or
pushf
mov
cmova
aad
lahf
sbb
pop
inc
into
movsl
cmp
push
jmp
cltd
shr
movsl
sub
inc
ds
or
arpl
mov
out
aas
incb
inc
inc
fwait
mov
cli
dec
pop
popa
enter
ds
int3
xor
sbb
sbb
cld
dec
ret
mov
or
cmp
xor
dec
fidivrs
jo
leave
push
rcrb
imul
decl
xchg
jle
xor
fs
andl
xchg
jnp
add
mov
rcrl
scas
cmp
dec
cmp
jg
xor
cmp
dec
add
lods
scas
std
sti
inc
ret
frstor
adc
mov
adc
call
sub
leave
or
shl
xchg
push
mov
fs
call
dec
push
mov
xchg
insl
movsb
push
pusha
or
add
and
dec
adc
mov
addb
add
imul
xchg
lret
mov
pop
nop
inc
push
lods
push
dec
dec
scas
aad
push
dec
clc
adc
cmp
and
inc
or
lds
movsl
and
jp
sbb
insb
jge
xchg
outsl
inc
js
daa
push
mov
xchg
mov
sub
jne
push
lret
scas
mov
repnz
or
jns
scas
test
repz
out
leave
or
pop
mov
fsubl
xchg
shll
push
cld
aaa
test
sbb
dec
test
and
test
orb
mov
jecxz
rcr
lds
sub
sbb
dec
rclb
jmp
in
pop
push
jae
mov
add
pop
pusha
test
add
mov
add
xchg
jo
lahf
adcl
outsb
or
scas
dec
xor
bound
pop
mov
lods
jnp
dec
xor
and
pop
int
nop
jae
insl
sub
out
js
jle
sbb
push
or
jbe
mov
or
bound
and
add
pop
dec
je
jle
pop
inc
push
out
popf
xor
rcl
test
in
stos
lret
mov
pop
adc
sbb
fmull
pop
push
mov
fstpl
mov
ret
je
ds
leave
dec
shrl
lds
das
stos
nop
test
jle
test
hlt
mov
add
mov
cmp
orl
enter
andl
add
test
and
jne
xchg
mov
daa
mov
add
or
leave
push
mov
xchg
pop
lahf
push
sub
xor
ds
mov
test
xor
mov
jmp
add
lds
and
pop
fstl
adcl
fiadds
jns
push
lods
decl
xchg
cwtl
out
add
or
dec
outsl
jb
inc
loope
inc
stos
ds
out
fs
sub
inc
fs
mov
jns
fstl
aaa
sub
push
cmpb
cmp
xor
ret
mov
and
inc
xchg
lock
xor
movsl
xchg
mov
jge
jmp
xor
fucomp
sahf
fs
mov
jo
inc
inc
add
sbb
and
pop
push
pop
or
push
inc
adcb
sub
pop
push
aad
mov
pusha
mov
or
movsb
mov
es
insl
xchg
push
mov
cltd
repnz
inc
cmp
jge
jp
mov
cmp
mov
jp
xor
mov
cmp
jns
int
dec
add
adc
rcll
mov
jp
pop
dec
jae
xchg
jnp
xchg
lods
in
inc
jnp
adc
xor
jg
cmp
rcrl
dec
push
xchg
fisttpl
sbb
movsb
testb
push
sbb
stos
lea
or
xchg
sti
jmp
movsb
mov
dec
stos
mov
and
orl
lods
push
dec
xor
push
hlt
add
fs
lods
sub
add
mov
jno
mov
push
int
inc
leave
arpl
and
push
dec
inc
push
jge
subb
stc
mov
cmp
aas
cmp
mov
and
add
imul
in
lods
or
movsb
lds
add
dec
lds
enter
shll
sti
arpl
push
in
xchg
mov
sar
pop
cmp
or
jg
cs
inc
shrb
xor
sub
add
inc
rol
dec
inc
pop
jnp
inc
inc
jge
dec
int
inc
test
jg
dec
and
pop
test
push
ret
pusha
vpmaddwd
jmp
mov
cli
inc
mov
cmp
or
mov
pusha
iret
popa
sub
mov
and
ja
and
bound
dec
stos
push
add
hlt
and
inc
lods
xor
popa
cltd
push
js
mull
rcrl
fldt
inc
xchg
ror
clc
adc
clc
sbb
fdivs
fsub
arpl
jle
inc
push
out
in
xchg
ret
mov
adc
fwait
xor
mov
mov
adc
jne
nop
sub
push
dec
and
dec
shrb
movsb
ja
mov
pop
into
int3
in
and
gs
iret
xor
mov
mov
aas
jno
fisttpl
pop
shrl
test
jg
add
rorb
sub
push
shll
cmpsb
hlt
sbb
test
jae
pop
jns
dec
lock
dec
nop
ja
arpl
inc
ja
mov
aad
je
push
addl
push
push
lods
aas
mov
mov
sub
addl
imul
xlat
and
push
stos
push
inc
aam
dec
push
pop
ds
sub
push
sub
sbb
xchg
mov
fdivr
lds
jge
add
ret
ja
xchg
lret
adc
stos
push
lahf
push
pusha
push
sbb
jae
xor
jno
xchg
or
dec
rorb
adc
les
xorl
add
addl
stos
call
push
jge
or
mov
push
or
xchg
je
jle
in
loop
cmp
inc
shlb
fwait
pop
jnp
dec
push
push
not
dec
inc
leave
test
sub
jns
or
inc
leave
ja
cli
inc
rcrb
xor
stos
mov
mov
insl
dec
shrl
shrl
lcall
out
nop
cmp
cwtl
jae
cmp
jnp
sbb
jge
aad
and
xor
dec
mov
mov
rcl
cmp
inc
shl
mov
shr
push
and
idivb
pop
in
dec
imul
xchg
push
loopne
or
fwait
in
je
cmp
add
out
xchg
bound
pushf
mov
dec
dec
out
jmp
sub
cmp
pop
xor
jne
stos
jg
push
pop
mov
je
aad
orb
mov
or
xor
cs
push
push
outsl
lods
into
cwtl
aaa
icebp
mov
push
enter
inc
and
aaa
popf
sbb
dec
push
cmp
jle
mov
inc
ljmp
ficomps
enter
sbbl
or
jae
in
sub
pop
fldenv
rcll
pop
and
add
inc
inc
orl
dec
xor
cmpsb
pop
or
pushf
loope
mov
sbb
xorl
fistpll
lret
rcrb
insb
add
jo
adc
fcomps
pop
paddusw
inc
xorl
and
out
lds
jg
mov
rorl
ds
inc
popf
es
sbb
test
dec
out
add
fdiv
dec
stos
fstl
jecxz
add
lea
out
sub
enter
leave
cs
test
daa
xor
aam
and
fwait
insb
inc
jbe
cmp
push
ret
cld
dec
scas
add
rcpps
das
stos
ret
mov
ret
pop
xor
popf
dec
mov
sub
imul
push
rcll
testl
ret
loope
dec
ret
test
ret
call
mov
dec
or
inc
adc
movsb
das
jb
adc
inc
pop
cmp
dec
push
ds
inc
sub
pop
clc
mov
scas
out
or
or
and
dec
data16
ror
and
inc
xchg
outsb
stc
outsl
adc
or
sahf
sar
inc
and
jecxz
cmp
sub
adc
inc
ds
cmp
jno
mov
inc
iret
leave
inc
dec
sub
int3
fstpt
sub
cmpsb
fwait
push
pop
pop
arpl
in
cmp
jns
sbb
xchg
add
leave
ret
gs
mov
mov
push
push
sbb
sbb
fimuls
sbb
divl
mov
imul
lcall
mov
sub
cltd
pop
testb
loopne
mov
stos
test
mov
sub
insl
shr
loope
rcr
shrb
pop
imul
dec
inc
frstor
xchg
int3
fstl
mov
cmpb
add
lock
cmc
push
dec
mov
aam
push
fucomp
shll
popf
xor
movsb
fstpl
jecxz
jbe
loopne
repz
jg
enter
ljmp
lahf
sub
hlt
sbb
daa
in
shl
fsubr
mov
jo
push
addr16
dec
aas
and
jle
nop
rorb
or
dec
adc
mov
cmp
enter
mov
lods
xchg
test
cmpsl
gs
push
in
sub
stos
lock
xchg
push
jne
cwtl
push
out
or
dec
xor
push
push
lret
lcall
mov
ss
push
dec
mov
dec
loop
push
adc
sbb
pusha
xchg
inc
and
add
push
mov
pop
movsl
inc
push
insb
enter
jmp
sub
in
clc
add
mov
push
shlb
mov
aam
cmp
pop
push
inc
cmp
mov
push
clc
add
or
push
idivb
mov
repnz
cld
inc
insb
lock
dec
dec
add
enter
ja
andb
mov
pop
jne
movsb
divl
push
test
pop
mov
je
jp
mov
call
jmp
sahf
xchg
xchg
xor
test
jg
mov
jae
addr16
loopne
dec
push
lret
xlat
jo
jl
in
rolb
icebp
insl
pop
mov
jns
jnp
cmp
loop
divb
adc
hlt
sbb
sbb
mov
push
mov
mov
shrl
cmp
mov
add
cmpsb
popf
mov
mov
xor
ds
rcrb
inc
inc
int3
sub
dec
ret
jp
and
cld
lods
daa
mov
push
shr
and
sbb
lods
dec
pop
xchg
cmpsb
incl
add
outsb
mov
and
hlt
rorb
rolb
sbb
hlt
pop
sar
insl
out
arpl
nop
jmp
stos
jp
jnp
sarl
in
and
pop
jne
js
push
xor
pop
cmp
xor
fs
ret
add
loop
stos
bound
mov
jmp
gs
divb
pop
lret
loope
in
rep
fistl
cmp
dec
cmpsl
cmp
xlat
cmp
outsb
mov
orl
dec
movsl
sbb
test
enter
sub
test
add
notl
push
sbb
inc
fisttps
fmul
scas
adc
and
add
xorl
adc
push
lret
or
sub
stos
test
jns
movsl
lods
jecxz
shlb
push
hlt
movsb
jno
aad
and
mov
push
dec
xor
ret
dec
dec
jg
mov
dec
jle
inc
sahf
dec
insb
nop
jne
and
sbb
nop
dec
xchg
mov
leave
mov
in
scas
mov
cmpsb
jmp
push
aas
and
ja
ljmp
jnp
addl
cmp
mov
test
add
int3
sarl
jge
jns
cmp
and
push
test
test
inc
cmc
inc
ja
shll
mov
inc
fs
leave
xchg
aam
inc
inc
arpl
push
xchg
and
setbe
sub
inc
popa
add
pop
cmp
lods
push
fcoml
push
inc
inc
cmc
adc
jg
push
mov
arpl
mov
mov
shr
dec
pop
and
gs
loopne
repnz
dec
mov
icebp
ret
ljmp
stc
xor
inc
push
dec
jl
popa
lahf
cmpsl
popa
call
xchg
test
dec
sub
arpl
jno
mov
mov
ja
push
movsb
mov
xor
arpl
dec
data16
js
ljmp
aas
movsl
mov
or
cmp
sub
adc
or
popf
xor
sub
outsl
popf
popf
add
fcom
xor
int3
sub
add
iret
pop
ret
mov
push
outsl
and
cwtl
inc
addr16
or
inc
jnp
dec
ja
dec
jae
out
fstpl
xor
jno
push
jge
loopne
subl
test
cmp
or
fwait
dec
add
dec
inc
dec
lahf
arpl
mov
cld
push
and
mov
lret
and
stc
test
fwait
lods
cld
fdiv
jg
sbb
int
aad
icebp
iret
rorb
movsl
jo
inc
cmpsb
dec
jne
xchg
dec
test
mov
sub
mov
xchg
shll
xchg
jg
sub
pop
aad
push
outsl
pushf
pshufw
mov
inc
xorw
les
test
movl
dec
test
loopne
fcoml
jbe
inc
iret
or
xchg
bound
jg
and
jnp
mov
dec
sub
adc
xor
lcall
and
sbb
ret
xor
aam
push
inc
in
ret
jns
adc
jle
addr16
adc
cmovbe
call
jnp
cltd
mov
add
ljmp
imul
xchg
push
push
pop
and
int3
xor
sub
push
mov
and
mov
sbb
xor
or
sub
fiaddl
jle
cmp
sub
aad
cmc
idivb
leave
or
push
xor
mov
hlt
pop
xchg
push
mov
cmp
push
mov
pop
adc
bound
stos
sbb
sbb
xchg
jae
cld
and
pushf
gs
lret
movsb
mov
fwait
std
dec
xor
jbe
and
add
dec
fnstsw
pop
mov
test
dec
inc
fsubl
fidivl
add
mov
mov
push
push
push
gs
add
frstor
mov
or
inc
mov
push
push
inc
stos
in
hlt
push
and
xchg
cli
mov
jp
xor
les
mov
test
shrl
testb
mov
cld
or
jge
lock
push
jne
jnp
xor
in
pop
gs
jg
ja
imul
jge
test
popf
sbb
jno
gs
dec
popa
add
dec
lock
adc
aaa
pop
rorl
stos
mov
test
imul
mov
mov
xor
test
or
cld
loop
stos
fsub
imul
in
inc
pop
sbb
loopne
mov
xor
jl
and
shl
cmp
dec
gs
dec
std
sarb
test
cmp
int3
mov
cmp
cs
pop
mov
xchg
add
hlt
adc
inc
imul
bound
jns
mov
sarb
jns
ds
sbbl
inc
jecxz
insl
insb
push
lcall
pop
xor
test
mov
fstps
gs
or
sbb
pop
and
cwtl
xchg
test
nop
insl
push
dec
cmpsl
imul
xor
popf
lock
push
pop
mov
outsl
mov
hlt
inc
sti
cmpb
dec
aad
add
idiv
inc
out
lods
add
jmp
in
call
in
inc
mov
scas
adcl
or
dec
sbb
or
push
mov
jne
xor
imul
mov
sub
nop
in
outsb
aas
mov
sbb
dec
add
fscale
cmp
outsl
sub
ficoml
push
xchg
sub
push
stos
sbb
mov
movsb
popf
inc
ljmp
mov
cmp
pushf
pop
sbb
sub
mov
dec
mov
add
loop
jne
cmp
push
sub
sub
ret
xchg
add
incl
mov
and
jge
or
and
ss
adc
jne
xor
cli
out
or
and
jbe
xchg
xchg
test
call
cmpsb
xchg
mov
sahf
out
sub
dec
pop
and
and
cmpsl
faddp
es
outsb
andl
jg
lock
xchg
aas
lds
movsb
pop
fst
pop
dec
dec
ds
popf
cmp
outsb
call
adc
loop
pop
daa
xchg
cmp
or
dec
loopne
jmp
outsl
iret
jne
shrb
rclb
push
mov
add
xor
stc
push
int3
mov
dec
imul
jno
jge
push
xchg
pop
sub
int
les
iret
fldenv
mov
add
mov
xchg
cmpsb
cmpsl
dec
pop
and
aas
pop
sub
ja
arpl
sarb
xchg
and
insl
out
sbb
into
cmpsl
pusha
push
enter
jle
xor
mov
aas
ret
or
test
enter
es
jbe
test
sub
int3
and
cmpl
mov
rcll
cmpsb
jl
mov
mov
mov
pop
and
push
adc
sbb
or
decb
sbbb
dec
inc
arpl
and
push
cs
lods
jns
les
and
and
jp
and
or
shrl
movsl
shrb
test
xor
xchg
lds
jmp
aaa
imul
shrb
ljmp
cmp
movsb
enter
xor
pushf
shll
inc
aaa
push
add
inc
adc
adc
xchg
rolb
test
out
rorl
jo
lret
iret
imul
test
ja
popf
inc
rolb
jg
test
sub
dec
xor
mov
or
sub
jnp
push
sbb
sbb
push
test
lret
pop
ret
ds
in
dec
cmpsb
insb
lahf
or
xchg
sub
fwait
jne
jge
test
icebp
jg
punpcklbw
jo
pop
jns
fs
xchg
xchg
push
ror
push
cmp
test
push
ljmp
sbb
push
jns
and
dec
xchg
add
cmp
mov
adc
call
mov
adc
test
mov
cmp
cmpl
mov
sbb
rorl
push
das
and
stos
jo
mov
add
int
js
dec
push
pop
mov
or
insl
sub
adc
rcrl
sahf
push
mov
cmp
xchg
xor
sub
adc
pushf
scas
mov
pop
jb
sbbl
mov
or
and
jns
lahf
xchg
and
dec
jb
and
shrb
cs
shll
lds
inc
dec
in
mov
adc
dec
push
jns
sarl
packssdw
jg
mov
pop
ss
and
insl
scas
ret
hlt
jne
add
mov
xchg
push
jne
cmp
stos
cmp
xchg
mov
fisttpll
or
enter
clc
xchg
jmp
sbb
sarb
pop
inc
pop
aas
fs
pushf
add
mov
pop
loope
dec
xor
je
push
adc
mov
cld
push
xchg
or
inc
push
fsubl
push
push
movsb
daa
adc
mov
xor
xorb
pop
add
cmp
push
sarl
or
inc
inc
xor
mov
mov
jmp
test
hlt
adc
mov
lret
aad
mov
mov
sbb
mov
xchg
rol
pop
xor
andb
sbb
es
push
hlt
subb
inc
sub
sbb
outsb
les
shr
rcr
xchg
pop
dec
fsts
jl
cmpsb
enter
aas
sub
push
adc
cs
xor
xchg
pop
xchg
movsl
mov
push
movsb
ret
movsl
push
hlt
in
jbe
jmp
sti
or
inc
inc
iret
sub
notb
mov
adc
dec
cltd
lcall
in
dec
sbb
mov
test
jg
push
lcall
pop
inc
xchg
scas
cmp
mov
pop
cmc
ljmp
lea
fst
iret
jp
push
inc
shlb
lds
rcrl
roll
pop
xchg
cmp
xlat
jnp
sub
mov
aad
jb
stos
scas
stc
mov
imul
test
jns
push
aam
int
pop
and
pop
cmpsl
imul
ljmp
hlt
ret
cmp
mov
push
add
push
xchg
sub
mov
pop
adc
out
addr16
push
scas
lahf
mov
add
pushl
dec
jbe
jbe
cltd
int3
arpl
inc
push
ret
pop
fstps
dec
sub
adc
lock
mov
cmc
orl
pop
and
inc
cs
cmp
cmp
pop
dec
jne
xchg
add
add
je
aad
cmp
add
mov
in
inc
xchg
sbb
add
jmp
push
cmpsl
orl
jne
push
fsubrs
cmc
jecxz
xchg
loopne
es
xorb
test
dec
fprem
hlt
lret
xchg
xor
pop
jae
pop
dec
jne
xchg
leave
and
xchg
shr
adc
ret
and
xchg
mov
mov
dec
xor
sub
and
xlat
push
jl
push
xchg
mov
addr16
in
mov
pop
es
rcrb
jp
cwtl
mov
es
shrb
mov
mov
push
shrl
fs
lods
jl
push
mov
cmc
and
and
jp
xor
xor
je
pushf
push
cmc
stos
jo
mov
out
pop
sbb
add
in
scas
jg
leave
mov
cmp
fstps
jne
fsubr
fnsave
sub
cs
push
dec
fnstenv
test
loopne
dec
loope
inc
out
xor
inc
inc
dec
scas
lds
sub
imul
mov
inc
or
jle
inc
cld
jg
sub
xorb
or
test
jp
jg
sarl
mov
fcmovb
andl
add
dec
cmp
popa
xchg
dec
shl
and
roll
movsb
and
adc
dec
push
or
add
mov
hlt
or
insl
bnd
pop
js
push
dec
scas
in
aam
jns
cmp
subl
jne
sub
xchg
push
add
lds
rol
sar
mov
sub
cmp
icebp
add
jl
jns
mov
or
stos
dec
inc
mov
dec
mov
arpl
xchg
sub
int3
and
lds
mov
sub
inc
test
mov
jne
cmp
hlt
test
lods
ds
rorb
cwtl
int
outsb
add
lahf
push
mov
sub
cmc
sub
mov
adc
xor
or
lea
inc
lea
test
std
mov
or
sub
inc
push
pop
dec
lods
push
arpl
lahf
mov
and
out
and
ljmp
cmp
cld
incb
sub
add
rcll
mov
adc
jge
jns
ja
arpl
inc
xchg
jno
aam
out
pop
nop
sbb
pop
fldl
sbb
je
movsl
pushf
mov
jnp
je
cmp
rorl
xchg
xchg
dec
dec
or
stos
aas
pop
mov
jmp
jl
mov
sbb
adc
jecxz
mov
insb
xchg
fstpt
dec
stos
aas
jmp
mov
cmc
scas
addr16
dec
ljmp
lods
and
test
or
scas
shl
inc
inc
jg
loope
push
sub
xor
mov
mov
add
jecxz
movsl
popl
inc
ror
push
fs
inc
neg
cmp
mull
lret
lds
ds
adc
es
ret
jne
sarb
dec
mov
inc
pop
jg
xchg
mov
hlt
and
lock
mov
cmpl
pushf
push
xchg
es
inc
int3
pop
jecxz
popf
and
push
xor
nop
xor
xchg
push
cmp
lods
ror
mov
cs
sbb
push
jl
cmp
hlt
loop
mov
ljmp
cld
outsl
push
sub
repz
cmp
sbb
dec
mov
das
enter
ret
dec
xchg
rcl
add
popf
pop
or
stos
nop
std
xchg
repz
lds
jecxz
fsub
add
dec
rorb
ror
xchg
test
adc
jge
adc
arpl
and
sar
jle,pn
adc
addl
aas
hlt
in
dec
imul
pop
jle
push
fiaddl
imul
aam
out
lds
xor
cmc
mov
jmp
fimull
mov
les
leave
lcall
mov
dec
xchg
clc
xchg
jns
jne
mov
cmp
cmc
sbb
js
inc
adc
pop
pop
aad
test
clc
psrlq
add
cmpsb
cld
inc
mov
pop
sub
mov
popf
cwtl
out
push
ret
cmpl
cmp
enter
or
or
out
push
fsts
push
mov
shr
lret
pop
mov
inc
lea
sub
andb
fidivrs
out
jge
xchg
bound
pop
stc
sub
cmp
dec
sub
mov
push
popf
fsubl
and
sahf
mov
and
adc
and
sub
jae
pusha
add
sbb
mov
movsl
mov
adc
inc
leave
jle
dec
pop
cmc
jne
stos
dec
daa
aad
loop
mov
lods
sub
sbb
xchg
shl
out
pop
xchg
mov
imul
xchg
xchg
fildl
test
movsb
lock
out
mov
pop
jns
pop
test
aam
push
inc
fwait
dec
push
cmp
or
sarl
push
or
ss
inc
loop
push
inc
mov
pop
test
sbb
push
inc
dec
xor
pop
ror
test
rcrl
and
daa
flds
dec
sub
jne
les
and
inc
hlt
and
jns
popa
dec
cwtl
in
cmc
sbb
adc
repz
inc
push
pop
int3
mov
inc
int
shll
push
adc
inc
leave
sub
xchg
push
imull
je
scas
outsl
shl
fs
ror
sbb
inc
xchg
mov
lds
or
repnz
aad
imul
stos
pushf
or
rcr
mov
pop
jne
xchg
enter
cwtl
scas
lods
sub
repz
movsb
data16
cmc
ljmp
and
push
pop
mov
shlb
jp
gs
cld
or
or
ret
aaa
rcr
leave
mov
inc
movsb
leave
jge
sbb
sbb
test
in
xor
sub
imul
les
sarb
sub
push
addl
movsl
leave
inc
stc
lds
pop
push
scas
loop
rep
inc
mov
sar
adc
jmp
xchg
push
adc
add
sbb
mov
xchg
jbe
sub
mov
lcall
mov
xorb
ret
jae
das
js
rolb
mov
xor
daa
sti
adc
and
sub
adc
test
jp
sahf
pop
sub
xor
xchg
xchg
jnp
sub
pusha
lds
add
dec
pop
dec
cmp
sbb
add
addl
repz
inc
sub
sub
lahf
push
stos
dec
in
outsl
icebp
fcoml
mov
int3
loope
xchg
xor
push
mov
popf
cmp
orl
pop
aad
pop
or
and
mov
mov
or
mov
pop
mov
push
lods
fcmovnu
in
mov
adc
sbb
movsl
ss
mov
xchg
lret
inc
lock
test
or
movsl
outsb
sahf
sub
jecxz
and
cmp
hlt
jp
mov
rorl
sub
aad
aas
xor
or
jo
mov
insb
xor
or
xchg
je
fisttpll
add
aaa
push
mov
pusha
jne
aas
sbb
cmp
inc
out
leave
test
imul
inc
andl
lds
pop
xchg
test
push
mov
idivb
jg
popa
xor
sub
jbe
dec
jns
scas
cmp
cmp
xor
aam
aaa
jne
sti
dec
add
fdivs
pop
xor
nop
mov
daa
add
cmpsb
pushf
pop
imul
nop
push
or
aaa
das
inc
xor
test
and
subl
fs
aam
aaa
and
enter
sub
or
stos
addr16
aas
xchg
loope
mov
inc
enter
sbb
xor
mov
jo
jmp
lea
sub
int
insb
call
adc
lds
fcmovnu
push
jp
outsb
std
ret
mov
shll
xor
sub
cmp
in
mov
fldcw
hlt
jne
add
andl
std
aad
dec
mov
clc
xor
insl
mov
pop
cld
add
pop
lret
and
add
enter
jmp
sbbl
dec
pop
das
sbb
push
add
in
sub
pusha
xchg
pusha
or
mov
clc
inc
andl
push
pop
or
fists
lock
mov
adcl
push
out
lods
and
imul
cmpsb
stos
mov
push
push
and
pusha
mov
dec
ret
jge
jnp
or
das
test
or
xchg
or
jne
gs
ds
sarb
scas
es
mov
sti
stc
and
pop
scas
cmpsl
push
test
mov
xchg
mov
arpl
inc
lahf
es
pop
ljmp
dec
add
cmpsb
stos
sar
push
arpl
not
jo
outsl
dec
or
test
movsl
subb
cmpsb
mov
and
jg
icebp
dec
mov
mov
ss
shrb
push
mov
shll
mov
sub
push
jne
in
les
das
add
sub
iret
sarb
test
jmp
inc
and
dec
mov
adc
sub
inc
cmpsb
jle
clc
repnz
gs
adc
andl
or
sahf
sub
mov
push
andl
cmpsb
ss
xchg
push
add
cmp
xchg
aam
loope
movntps
lods
pushf
in
xchg
fisubs
fwait
cmp
add
es
movsl
imulb
inc
addr16
inc
shlb
mov
lret
iret
mov
cs
push
push
loopne
pop
sti
fwait
xchg
cs
inc
pop
push
lretw
testl
fidivl
mov
insl
mov
push
jle
in
cmp
push
dec
in
gs
out
sub
es
inc
pusha
leave
push
dec
popf
fsts
iret
stos
pop
inc
mov
cli
jne
add
mov
orl
cli
cmp
or
leave
shl
xchg
movsb
inc
jle
fdiv
sti
cld
sbb
rcr
jmp
mov
adc
mov
jge
int3
mov
add
inc
lret
add
push
add
adc
mov
pop
mov
sti
pusha
push
cmpsl
sti
aad
sti
loop
xlat
ljmp
pushf
push
rorl
std
imul
mov
push
orb
push
lock
mov
push
xchg
je
loop
outsb
mov
sbb
xorl
jl
lods
jp
mov
push
mov
aas
cmpsl
adc
test
dec
xchg
and
push
aas
rorb
loop
rorl
inc
mov
inc
insl
in
sbb
in
dec
sbbb
lea
ret
sarb
jg
and
jge
pop
loopne
test
push
lret
out
push
faddl
jne
cld
pop
scas
imul
sbb
pop
mov
ja
and
loopne
je
es
sub
fsubr
or
cmp
fdivl
bound
movsl
xor
xchg
das
mov
jg
fistl
mov
xor
mov
fstps
jecxz
test
xor
mov
mov
mov
sub
imul
insl
or
and
add
sub
add
out
test
inc
into
mov
and
and
call
les
inc
xchg
xlat
in
movsb
shll
pop
testl
aaa
jl
mov
enter
xchg
shl
cld
adc
mov
pusha
xor
lret
inc
hlt
mov
icebp
jnp
les
mov
dec
push
dec
adc
mov
sbb
scas
push
addl
ds
xor
outsl
mov
pop
inc
or
mov
mov
jmp
mov
es
dec
jae
mov
stos
lods
inc
xor
add
pop
sti
inc
cmp
mov
dec
pop
and
scas
iret
push
xchg
in
mov
xor
sahf
ja
int
movsl
jo
jne
mov
xchg
test
mov
jb
aaa
cmp
and
lret
jge
and
lea
stc
adc
mov
mov
es
xlat
dec
scas
jg
mov
pop
dec
stos
jmp
pop
sarb
mov
xor
arpl
aam
sbb
fisubl
dec
push
lods
push
leave
pop
repz
ret
test
push
fisubs
insl
ds
or
dec
pop
and
or
inc
sub
inc
inc
mov
outsb
or
cmp
xor
nop
inc
inc
in
mov
and
es
push
movsl
cli
inc
out
push
mov
sarl
aas
xorl
aad
ret
xor
jne
cmp
jle
leavew
sub
scas
push
jp
mov
or
push
push
jge
xor
inc
leave
shlb
jae
jmp
sub
xchg
and
js
dec
jp
cmpsl
xchg
int
cld
and
gs
dec
out
cmc
shrb
test
dec
movsl
inc
inc
dec
inc
xchg
repnz
out
in
adc
xor
scas
testb
sbb
adc
dec
and
dec
dec
popf
shll
inc
ds
imul
xor
das
add
loope
or
add
jmp
inc
push
or
inc
add
inc
sarl
cmp
sub
add
add
test
dec
jge
out
data16
inc
push
add
shlb
ja
cmp
ja
dec
hlt
sar
fnstenv
sub
outsb
out
mov
jae
pop
insb
lods
mov
push
and
loope
int
and
mov
incl
incb
cs
lahf
fdivrs
jp
call
cmc
and
add
cwtl
es
mov
adc
add
sti
fstl
mov
int
dec
orl
icebp
gs
cmp
mov
pop
inc
dec
mov
in
test
pop
cwtl
scas
cwtl
inc
ljmp
ljmp
jae
fnsave
jle
leave
repz
or
push
inc
pop
lcall
imulb
and
add
mov
push
roll
mov
sub
inc
ja
call
cmp
int
pop
nop
mov
mov
stc
cmp
mov
add
cmpsb
dec
nop
addr16
mov
scas
repnz
cs
aas
dec
jmp
mov
jle
aad
aam
cltd
nop
loop
in
pop
sahf
adc
mov
hlt
pushf
or
inc
test
lret
push
dec
dec
dec
xor
pop
add
je
dec
sbb
rcrb
mov
sub
inc
sbb
rolb
dec
inc
sub
into
dec
leave
xor
xor
push
push
and
cmpl
jge
sarl
xchg
inc
jae
mov
fldcw
cltd
daa
clc
rolb
aam
cmp
push
jmp
pop
mov
jecxz
pop
xchg
inc
shll
and
jge
sbb
and
add
adc
arpl
aaa
and
aam
sahf
mov
gs
loop
xor
dec
adc
mov
ret
xchg
add
pop
mov
test
xchg
push
mov
xlat
push
cmp
sub
cmpsb
mov
mov
lock
jl
js
pushf
rcll
pop
mov
mov
dec
in
xor
and
adc
call
push
adc
lahf
int
jns
in
dec
addl
xor
xor
dec
mov
xchg
imul
mov
cs
psraw
stos
mov
inc
push
jns
inc
leave
adc
leave
pusha
push
ljmp
icebp
dec
movsb
cli
cmc
shrb
mov
push
not
inc
mov
jge
jbe
andl
movsb
pop
insl
xor
shrb
lock
sti
cmp
pop
push
scas
jbe
cmp
add
xchg
lret
push
mov
lret
inc
or
subb
iret
add
cmp
lock
add
cltd
iret
into
shrl
test
test
andl
jns
shll
mov
cmp
lret
stos
cmp
arpl
imul
jle
add
mov
inc
gs
pop
mov
pusha
xchg
outsl
and
mov
or
inc
sarb
pop
mov
mov
xor
outsl
cld
es
ja
sbb
out
dec
and
ss
push
or
sub
jmp
scas
fs
inc
xor
shll
inc
or
cwtl
dec
dec
js
sahf
mov
iret
sarl
test
fisttps
sub
jne
shrb
pop
pop
push
xchg
addb
push
xbegin
sbb
dec
pop
rcrb
and
xor
lds
sbb
rcr
test
cmc
inc
push
imul
pop
or
mov
xchg
jg
xchg
aaa
decl
fs
les
lds
mov
pusha
lret
push
dec
jg
hlt
pusha
dec
adcl
jbe
pop
fldenv
jecxz
fs
push
dec
dec
jp
arpl
arpl
inc
out
cmpsb
subl
jp
add
pop
dec
xor
shll
rcl
mov
or
aas
dec
int
leave
pop
dec
xor
inc
mov
inc
in
fcompl
cmp
push
sbb
das
test
scas
or
test
aas
jne
cmpsl
xor
sar
mov
les
add
add
jb
and
inc
fsubp
mov
fidivl
xchg
dec
fidivl
test
sub
leave
ljmp
jmp
dec
gs
js
pop
pop
mov
mov
xor
xor
call
mov
and
and
push
scas
sub
inc
inc
insl
mov
rorl
in
pusha
lret
add
push
sub
mov
pushf
pop
xchg
dec
stos
push
pop
add
lcall
movsb
jp
xorl
push
subb
xchg
inc
mov
cld
mov
sub
les
jb
inc
leave
sti
imul
dec
loopne
fldenv
popa
fldl
mov
inc
sbb
jbe
push
dec
rol
push
cmpsb
lahf
mov
iret
fcompl
cmp
les
xor
xchg
xchg
sub
imul
sbb
dec
jp
enter
xchg
mov
dec
xor
lods
push
or
adc
stos
cltd
out
dec
insb
xlat
inc
sti
mov
xchg
cmc
ja
mov
lret
or
inc
mov
cmp
mov
and
les
sbb
jl
jns
movq
pusha
jne
xlat
push
push
adc
mov
or
jl
xor
bound
mov
cmp
pop
push
fistpl
pop
nop
nop
adc
insb
cld
leave
movsl
fsubl
adcl
test
les
je
pop
ja
mov
mov
adcl
ror
cli
inc
xchg
or
cwtl
out
push
add
inc
mulb
cli
es
jge
in
rcr
jae
imul
xchg
sbb
loop
inc
movsl
add
push
fcomip
push
push
fisubs
cmpsb
daa
mov
or
dec
icebp
je
dec
add
dec
dec
es
jle
xchg
mov
pop
popf
dec
jne
movsb
icebp
lock
shrb
sub
pop
fsubrs
jp
ret
mov
adc
pop
xor
out
push
add
test
push
xchg
orl
leave
dec
pop
dec
or
sbb
shlb
inc
add
adc
popa
jne
fstpt
fcomps
jno
and
cwtl
adc
ja
clc
push
in
stos
jbe
inc
sub
adc
or
or
in
jp
dec
popf
lahf
push
iret
sub
ret
mov
fisttpl
jp
or
cs
cld
mov
fdivrl
xor
inc
xor
cmc
and
aad
jbe
push
push
and
out
dec
xchg
xor
fistpll
test
es
fdivr
scas
js
xlat
push
hlt
jo
mov
sub
and
pop
push
dec
jle
push
lahf
mov
and
push
dec
pop
adc
leave
gs
bound
int
mov
cmp
aaa
loopne
hlt
pop
xor
inc
cmp
cmpb
mov
inc
xor
sub
and
into
nop
es
lods
pop
adc
ret
mov
adc
enter
std
pop
test
es
xchg
jb
out
ss
push
or
jns
shrb
sbb
dec
or
shlb
sub
or
scas
mulb
pop
fs
mov
mov
and
xchg
movsl
imul
lea
xor
roll
cmc
push
pop
and
lahf
dec
jne
xchg
ljmp
mov
leave
mov
repnz
ret
into
pop
mov
lock
mov
outsl
iret
xchg
js
shlb
arpl
push
dec
mov
outsb
test
xor
lahf
sbb
stc
shrl
mov
movb
mov
mov
mov
orl
pop
dec
mov
jmp
shr
jecxz
xor
push
aam
ret
lret
cmp
xchg
or
sbb
flds
ret
test
adc
in
sub
mov
xor
or
shll
cli
sahf
inc
lea
adc
mov
rolb
rcll
lret
xor
adc
xchg
ret
mov
movsl
xor
shll
shlb
jl
fwait
or
lcall
lea
ds
cld
addr16
ror
daa
jmp
ret
dec
ljmp
js
enter
insl
iret
aad
xchg
shr
adc
xchg
hlt
adc
push
mov
js
cld
jge,pn
push
sbb
enter
sub
scas
out
lock
fucom
or
cltd
mov
shlb
test
bnd
pop
jno
arpl
imul
xor
leave
test
inc
pop
icebp
cld
mov
fstpt
cmpsb
or
xchg
cmp
add
jp
lret
push
std
push
fidivl
mulb
push
mov
mov
mov
lock
scas
movsl
sub
pop
cmc
pop
jmp
lods
adc
inc
cmp
hlt
stos
insl
or
imul
mov
and
es
test
sbb
pop
sub
cltd
inc
xchg
dec
movb
push
out
filds
sbb
jle
add
cltd
ret
scas
jecxz
dec
shlb
push
dec
cs
mov
xor
and
fwait
push
cmpl
pop
jge
add
dec
test
les
fnstenv
cs
in
sub
dec
dec
repnz
mov
dec
pop
dec
jbe
scas
cmpb
mov
mov
add
das
cld
fistl
push
hlt
mov
dec
das
push
js
sbbl
je
popl
inc
push
clc
push
sub
scas
dec
fsubs
das
outsb
mov
add
cmp
sbb
cs
xor
or
loop
jle
push
dec
push
lea
movsb
mov
push
dec
push
loopne
fsubl
aam
jmp
stos
jbe
xchg
pop
mov
call
jecxz
adc
lahf
ss
mov
pop
push
add
sti
rorb
inc
xchg
call
pop
xor
and
mov
stos
or
cmp
lret
jo
or
mov
cmp
dec
aam
and
pop
jl
inc
enter
add
cmpsl
dec
shl
jns
std
iret
fxch
insl
fs
jns
pop
jecxz
add
inc
adc
not
aam
bound
xchg
jne
dec
xor
mov
inc
inc
push
jo
jle
adc
test
mov
add
push
push
pop
pop
dec
or
sarb
std
cwtl
test
fs
inc
stos
dec
shrb
sbb
popa
repz
insl
fnstsw
int
xor
xchg
push
dec
jns
sub
and
loope
scas
jnp
aaa
push
rolb
mov
pop
call
and
and
cmp
sub
mov
pop
sbb
mov
mov
pushf
dec
and
mov
sarl
mov
dec
mov
inc
jp
inc
inc
adc
ret
in
sub
cmpsl
popl
pop
and
or
add
xchg
mov
jg
inc
push
cmc
ret
cmc
push
jb
cmp
repnz
stos
call
popf
in
hlt
ja
add
les
daa
in
jle
enter
mov
test
xor
dec
fwait
push
jle
pushf
addb
movsl
add
orl
mov
call
push
mov
mov
inc
xchg
andb
xor
push
es
and
mov
push
dec
or
ja
mov
loop
xchg
push
push
mov
aas
pop
inc
jno
mov
sub
ret
pop
pusha
daa
fldl
adc
das
mov
mov
jle
loopne
push
push
dec
sbb
cmc
das
jle
pop
add
jo
jns
lea
mov
sbb
mov
adc
std
mov
mov
mov
xchg
dec
test
scas
jge
or
inc
stc
subl
dec
jbe
lods
dec
inc
test
jmp
pop
ljmp
add
mov
sbb
push
sbb
sbb
xor
lock
iret
or
pop
cmc
mov
xor
daa
and
mov
es
cmova
dec
mov
mov
inc
loopne
jb
cmpsl
and
js
rcrl
sbb
add
flds
adc
mov
jp
push
mulb
sub
out
xorl
fcmovbe
xor
xor
sbb
add
jns
cmc
test
subl
mov
lret
xchg
xlat
imul
xor
pop
inc
lods
mov
adc
outsl
jne
ljmp
test
mov
es
dec
push
mov
int3
shlb
rorb
dec
dec
repz
sbb
jne
aaa
insl
pop
dec
cmpsb
cltd
je
loope
xchg
aas
aam
cmpl
test
and
lds
cmp
lods
cli
inc
xchg
hlt
adc
int
shrl
push
cmp
jo
subb
scas
cltd
jbe
jl
movsb
hlt
xchg
inc
mov
cmp
pop
xchg
and
mov
pop
pop
add
jbe
lret
test
pop
int
mov
hlt
jns
inc
cwtl
pop
add
movsb
mov
add
dec
inc
xor
dec
pop
mov
lret
add
ljmp
cs
cltd
int3
adc
dec
and
push
sub
add
fs
mov
and
dec
sti
gs
and
cltd
es
stos
jae
testb
jne
cwtl
mov
xor
adc
mov
test
lret
cmp
mov
adc
ja
dec
jne
jns
mov
sub
pop
pushf
movsb
ror
cli
mov
mov
aam
imul
hlt
xchg
jle
inc
mov
xlat
addl
dec
jno
hlt
movsb
add
sarb
pop
icebp
mov
xchg
hlt
out
subl
les
mov
icebp
push
jae
jns
in
inc
xchg
or
insl
test
pop
xchg
xchg
cs
push
and
mov
scas
mov
jns
sub
mov
mov
leave
mull
fidivs
rolb
jns
cmp
inc
cs
popa
jno
dec
inc
loope
scas
imul
addb
hlt
cmp
sub
jbe
nop
jne
adc
sub
lea
fisubrl
loope
inc
es
ja
movsb
jne
mov
inc
insl
add
jnp
dec
shlb
dec
cmpsb
ja
and
and
and
rolb
leave
pop
xor
scas
pop
and
xchg
arpl
shlb
and
xchg
dec
push
fildll
aam
test
and
sub
dec
cmp
push
test
cltd
inc
movsl
dec
aam
loope
and
out
loop
cwtl
test
mov
fidivrs
xor
pop
xor
jmp
cs
js
and
lods
test
mov
repnz
pop
mulb
lret
add
dec
shlb
mov
jns
inc
add
je
addr16
push
test
add
cmpsl
sub
dec
cmp
and
sub
push
push
add
mov
sbb
inc
les
rclb
cmp
jmp
mov
xor
es
adc
push
inc
popf
mov
add
or
out
dec
pop
and
movsb
cs
xchg
out
fcmovne
lock
ljmp
and
sbb
sti
loop
adc
neg
stc
sub
xor
mov
ret
xchg
jae
je
xchg
or
mov
cmpsb
and
daa
inc
jmp
cmp
xchg
push
mov
xchg
jge
push
sbbb
adc
call
pushf
fcomp
pusha
or
jbe
xlat
dec
xchg
push
jmp
fsubrl
dec
sbb
mov
cmp
movsb
add
add
or
repz
push
and
cmp
bound
int
push
faddl
jp
dec
sarb
or
gs
ret
aam
xchg
dec
fstl
enter
repnz
cmp
or
xor
subb
dec
mov
sub
or
dec
cwtl
cmp
dec
add
dec
andl
push
pop
insl
in
outsl
mov
mov
lds
inc
xor
mov
sub
push
dec
xor
jp
mov
addb
lea
push
and
inc
inc
test
fadds
ret
jb
stos
and
dec
inc
sbb
and
sahf
inc
push
or
sarb
jb
ja
mov
iret
add
out
mov
aam
jle
aaa
aas
loope
mov
and
push
jo
adcl
fdivp
dec
fsub
mov
push
aas
xor
xor
inc
mov
jbe
push
jge
xorl
sub
movsl
and
sub
add
jne
ds
jle
push
std
addl
rcll
cltd
popa
loopne
iret
add
mov
adc
jae
pushf
xchg
sbbb
or
push
sub
or
fdivrp
sub
and
and
cld
xor
mov
loopne
ljmp
pop
cmc
mov
mov
or
add
rcll
shlb
jle
ljmp
decl
loopne
pop
push
scas
cmp
mov
adc
jg
mov
stos
cmp
jae
jb
or
cltd
loope
pusha
and
add
rcrl
imul
pop
in
inc
push
add
mov
mov
dec
mov
pop
mov
scas
cli
adc
jno
test
cli
or
addr16
dec
dec
push
jge
mov
dec
mov
out
pop
movsl
xchg
mov
sbb
loopne
lret
or
popf
mov
and
je
sbb
xchg
push
mov
push
push
cmc
mov
shrl
lds
movsb
pusha
mov
cwtl
aaa
dec
and
mov
inc
dec
dec
mov
mov
fnstenv
leave
gs
fnstcw
dec
ljmp
int3
fst
test
or
shll
fs
aad
stos
popa
ja
ret
les
sbb
and
out
sarb
stos
xchg
movsl
jb
cmp
ret
repnz
cld
loope
pop
outsl
stc
hlt
test
xor
push
and
pusha
cmp
dec
or
popf
mov
dec
cmp
daa
testb
pop
push
pop
test
fiaddl
xor
loopne
jne
add
mov
add
sbb
gs
xlat
rclb
lcall
arpl
push
pop
cmp
fdivl
add
test
stos
in
stc
nop
add
subb
insl
sub
lods
ficoml
xor
jae
mov
pop
push
inc
call
jg
and
cmp
inc
xchg
cmpsb
into
add
cmp
xlat
in
nop
jae
dec
lcall
and
addl
or
out
out
rcl
ret
addl
call
push
push
push
in
jecxz
sub
dec
mov
and
hlt
clc
push
in
pop
mov
std
into
push
adcl
lds
jno
cld
cmp
push
ret
das
sbb
mov
mov
ret
ficoms
loope
inc
stc
mov
aad
stc
aas
test
dec
sarb
mov
xor
mov
xchg
cltd
imulb
sarl
dec
cmp
xor
or
xchg
xor
fmul
push
pop
cmp
fisubl
mov
pop
adc
lret
std
in
pop
jmp
or
sahf
ds
lock
sub
js
sbb
dec
leave
dec
sbb
and
addr16
aaa
pop
out
jmp
stc
loop
loope
jg
mov
lock
rolb
shlb
aaa
inc
lods
or
stos
fmuls
dec
pop
adc
addr16
dec
lods
and
cmc
xchg
xor
inc
jmp
insb
pop
addr16
lods
xor
das
cmp
sbb
or
push
mov
push
push
imul
sarb
pop
stos
adc
notb
in
mov
jge
mov
or
dec
stos
or
les
xorl
sub
jb
inc
jg
jns
xchg
sbb
jo
scas
sub
or
pop
cmpsl
js
les
xchg
nop
jns
icebp
push
hlt
dec
xor
ja
insb
jno
popa
scas
mov
adc
mov
jnp
push
sub
mov
icebp
sarb
test
cmc
out
std
sub
or
pop
dec
ja
shl
in
jmp
lea
movsb
dec
xchg
pop
imul
mov
jg
mov
jbe
std
fmuls
jnp
or
inc
call
mov
fdivs
fcmovnb
adc
test
icebp
pop
out
jle
outsl
mov
idivb
arpl
iret
mov
leave
jle
xchg
ret
cmp
jae
cmp
jae
jle
dec
daa
mov
and
cmp
xchg
ljmp
movsb
dec
adc
in
lods
fsubrs
insl
lret
dec
lret
add
add
in
ror
pop
push
jp
shll
fstl
sbb
mov
jmp
ret
outsl
data16
out
and
test
fcompl
pusha
filds
sub
push
icebp
shll
adc
in
loope
pop
daa
int3
ret
rclb
adc
push
addr16
test
dec
orb
mov
jne
push
shrl
fisubs
sbb
adc
aaa
add
and
stos
inc
jnp
sbb
dec
sub
cwtl
push
dec
jge
or
push
xchg
dec
inc
popa
mov
dec
sahf
test
sbb
jo
dec
lahf
and
and
fwait
xor
subl
sub
inc
repnz
lahf
xor
jno
mov
mov
mov
popf
call
sub
push
dec
sub
or
dec
movsl
push
and
push
lret
and
stos
sbb
pop
xor
sub
mov
cmpsb
sub
mov
stc
in
inc
rorl
rclb
adc
lret
jmp
sarl
popf
mov
fcoml
int3
int
lea
lcall
outsb
ret
xchg
je
icebp
outsb
push
mov
fcomi
xchg
rcrb
pop
movsb
xchg
add
repz
mov
mov
adc
mov
mov
cmpsl
jnp
outsl
jge
mov
jno
cli
test
inc
hlt
dec
std
in
add
push
jl
subl
test
sub
jge
pushl
ror
inc
fst
push
mov
add
xchg
ret
clc
cwtl
and
add
push
sbb
subb
xchg
jmp
xchg
xlat
cmp
les
jle
ret
adc
in
arpl
jge
enter
jp
loope
ljmp
aaa
xchg
stos
or
test
jecxz
les
push
popa
int
mov
mov
jle
add
ss
arpl
jge
xlat
addr16
pop
movsb
jp
and
xchg
mov
outsl
jl
call
dec
dec
lods
out
pop
cmp
fistl
adc
or
xchg
and
push
and
lret
sbb
pop
rorb
imul
test
mov
pop
lahf
lea
sti
lods
mov
je
pop
push
pop
rcr
jne
sbb
jge
dec
or
and
mov
enter
shrl
lahf
movsl
and
sub
jnp
enter
cmp
xor
in
mov
pushf
push
stos
enter
jno
jnp
pop
or
and
dec
sbb
jecxz
jns
and
mov
dec
dec
xor
in
jno
notb
inc
cltd
andl
push
cmp
sahf
and
stc
adc
sub
je
and
daa
inc
adcl
mov
mov
xorb
jne
movsb
movsl
xchg
jge
scas
push
inc
or
clc
and
jle
in
ffreep
movsl
inc
sbb
dec
mov
movl
ret
je
mov
pop
mov
mov
or
ss
fstpt
mov
fisubrs
pop
xor
mov
jmp
mov
or
sbb
imul
ljmp
lcall
shlb
shrb
in
push
mov
shr
push
or
test
cmpsl
sarl
xchg
lea
ror
int3
jp
lock
push
dec
popa
leave
mov
jle
or
shl
sbb
fs
cmpl
xor
mov
mov
inc
mov
xlat
jmp
jp
addr16
add
in
ror
inc
xchg
mov
inc
pop
cmc
adcl
pop
dec
mov
push
inc
mov
pop
xchg
or
adc
inc
fs
pop
push
clc
lods
cmpsb
jg
movsb
push
mov
inc
stos
add
inc
xor
jo
enter
lret
dec
fcomp
jne
add
inc
fcompl
pop
testb
xor
pop
jg
mov
adc
loopne
xchg
or
cltd
jle
pop
mov
lds
push
leave
mov
call
push
shlb
mov
lds
or
mov
jae,pt
adcl
rcl
pop
and
cmp
add
and
sub
jnp
int
mov
mov
pop
dec
xchg
fucom
jne
fbld
or
enter
xor
and
jae
inc
jns
lret
cmc
mov
push
add
loope
inc
dec
stc
insb
dec
orl
xchg
jp
dec
pop
xor
mov
dec
orb
or
mov
aas
xor
jle
jg
push
push
mov
push
inc
jno
lret
leave
cmpsb
fldenv
cmp
bound
push
dec
mov
das
scas
das
jecxz
and
dec
jno
and
adc
adc
fldt
scas
lret
sub
cmc
xor
lret
out
sbbl
flds
lahf
in
dec
in
xchg
in
jbe
xchg
pop
hlt
xor
sub
imul
imul
jo
in
out
dec
pop
pop
jle
mov
inc
stc
test
sub
in
and
xor
mov
jne
or
in
sub
leave
or
jne
in
pop
inc
mov
mov
jne
jns
mov
dec
jne
jge
mov
pop
pop
push
xchg
sbb
add
sahf
inc
in
ret
mov
leave
popa
rcrl
xchg
orb
ds
scas
xchg
push
xor
xchg
sbb
fsubl
mov
addb
fdivrs
lahf
hlt
jae
inc
jge
sub
mov
xchg
xchg
nop
daa
lods
hlt
daa
sub
dec
xchg
and
gs
jae
arpl
sub
rcll
pop
ret
adc
in
js
test
adc
pop
inc
sbb
xchg
xchg
cwtl
sub
test
or
dec
jge
sbb
push
mov
out
dec
adc
mov
cmc
inc
mov
ds
or
xchg
add
sbb
xor
mov
sahf
mov
pop
and
add
push
sbb
pusha
dec
add
adc
sub
push
push
sub
shlb
jmp
mov
dec
sbb
push
and
cli
enter
push
pop
pop
add
ljmp
cwtl
push
dec
insl
xor
or
mov
dec
loopne
sub
jns
daa
pop
dec
dec
or
dec
pusha
push
cmp
bound
xchg
xor
jns
cmp
ret
or
inc
xchg
or
stc
pusha
xchg
cmpb
mov
test
push
sbb
or
sarl
dec
or
bound
jge
outsb
adc
mov
xchg
arpl
xor
jg
push
mov
and
fisttpll
mov
jb
push
inc
mov
ret
cmp
out
call
add
jl
pop
into
push
jb
test
inc
jge
adc
cmp
pop
in
loop
inc
es
mov
pop
test
stos
mov
push
xchg
pop
xor
cmpsb
push
lcall
push
aas
or
dec
lret
ss
mov
jnp
lods
mov
jns
out
and
push
out
or
cmpsl
mov
cs
pop
scas
imul
iret
int
shrl
in
dec
jne
or
mov
fsub
push
aas
adc
mov
inc
sub
dec
xchg
fs
imul
pop
dec
into
jle
or
orl
popf
cmp
add
scas
mov
mov
inc
cmc
insl
adc
cwtl
stos
mov
or
fcmovnbe
leave
push
pop
jnp
fwait
and
mov
dec
test
les
push
pop
ficompl
sar
dec
js
fadds
daa
int3
shl
push
pop
loopne
popa
mov
jmp
pop
das
inc
cs
jne
add
lods
bound
pop
pop
aas
cmpsb
add
ret
adc
or
vpaddw
int3
or
fildl
ja
fisubrs
stos
pop
dec
and
dec
repz
stc
mov
and
push
push
imul
cwtl
and
pop
testb
aas
imul
push
shrl
sub
lahf
loopne
pop
roll
inc
xor
push
shll
mov
xor
jne
out
int
jp
ljmp
mov
xchg
pop
nop
mov
dec
adcl
cs
insl
add
lea
clc
repz
sahf
and
pop
jge
xchg
lds
push
gs
mov
cltd
aas
das
inc
subl
xlat
and
sbb
mov
sub
int
push
mov
sbb
mov
aas
test
shll
pushf
adc
dec
or
jmp
xchg
shlb
repz
dec
mov
adcl
pusha
cld
fdivp
stos
dec
mov
stos
jg
or
ja
mov
dec
loope
fdivs
lods
jne
dec
in
outsb
in
mov
jecxz
dec
push
mov
leave
imul
sub
xchg
or
push
test
adc
add
test
jne
jg
leave
bound
lret
or
in
out
adc
sub
mov
fdivs
jne
pop
and
lahf
push
stos
and
fdivr
imul
cmpsb
js
scas
addr16
sbb
jecxz
popa
add
mov
popa
inc
mov
imul
sbb
inc
inc
jae
filds
mov
xchg
cmp
inc
sbb
and
mov
adc
out
and
je
xchg
js
cmp
test
enter
xor
ret
jb
lahf
jo
jl
mov
push
andb
icebp
nop
imul
sbb
mov
xchg
loopne
insb
lret
sub
loope
scas
test
dec
hlt
in
jmp
xor
jns
inc
stos
test
fstpt
xor
cmc
ljmp
inc
xor
pop
insl
leave
and
leave
sub
into
sar
pop
push
mov
jp
dec
jo
iret
inc
lcall
jne
mov
and
mov
sub
dec
cmpsl
sbb
add
or
aas
movsb
cs
fs
cmp
jge
xor
insb
ss
jb
pop
dec
mov
pop
loopw
rorl
or
and
addr16
pusha
sbb
mov
dec
hlt
xchg
add
jle
movsb
cs
shrb
inc
fsubrl
loope
mov
int3
lcall
xchg
sub
mov
rclb
add
test
outsl
xor
decb
out
sbb
mov
cmp
ret
in
mov
mov
sbb
dec
sub
flds
rcll
xchg
movsb
sub
sub
scas
jge
mov
inc
fiadds
push
inc
je
mov
inc
and
mov
dec
mov
test
sbb
loope
push
loopne
movsb
and
scas
push
push
ja
imul
pop
inc
ror
and
pop
xchg
dec
ret
push
lret
mov
aad
jno
rolb
test
mov
fidivrl
ds
push
dec
in
mov
out
test
xchg
jne
sub
addr16
hlt
dec
xor
xchg
pop
jnp
xchg
movsb
cmp
push
xchg
xor
and
mov
arpl
xchg
nop
fmuls
xchg
dec
das
add
add
sub
inc
iret
shrb
shrl
movsb
xchg
aaa
mov
push
sbb
jns
scas
xchg
js
filds
addb
mov
iret
push
xlat
mov
mov
shr
mov
jmp
jns
jp
dec
push
or
xchg
icebp
jp
lret
cmc
loopne
adc
stos
loop
adc
int
in
shrl
inc
sbb
xor
mov
stc
out
cmp
cmpsl
add
sbb
int3
xlat
push
ret
adc
add
cmp
mov
cltd
pop
repz
insb
and
cwtl
fwait
mov
sbb
arpl
pop
pop
cli
dec
adcl
test
gs
roll
imul
ljmp
mov
shlb
fbstp
jb
sub
push
mov
or
fwait
icebp
cmp
shll
jecxz
fcomp
cli
xor
dec
mov
bound
and
int3
shrb
and
outsl
fdivr
and
adc
cmp
mov
pop
lcall
mov
jb
jns
dec
test
ss
imul
sti
push
sub
pop
push
xor
push
fs
outsl
adc
imul
decl
stc
mov
out
xchg
fisttpll
pop
pop
loopne
jne
not
in
lds
cld
mov
xor
cmpsl
ret
mov
repnz
mov
fldl
sti
cltd
and
aas
push
push
push
dec
pop
cmpl
inc
roll
test
push
and
movsb
push
mov
imul
jnp
test
in
jnp
roll
sub
pop
and
lods
add
pop
dec
aas
daa
ret
out
iret
loop
fcoml
scas
bound
and
xor
jae
push
pop
ljmp
aas
pop
test
dec
push
pop
jno
fnstsw
shrb
dec
lret
add
fnstcw
nop
xchg
adc
and
loope
aaa
vpsrld
cwtl
fwait
lods
adc
mov
dec
jg
in
ja
loop
mov
outsl
shl
cmc
add
add
push
stos
jnp
cmpsl
stos
insl
fsubl
mov
add
cmp
in
das
std
enter
push
dec
or
add
inc
and
mov
cmp
xlat
fnstsw
push
lds
cmpl
or
xchg
jl
xor
jg
cwtl
xlat
aas
cwtl
cmpsl
dec
xchg
and
or
dec
scas
xchg
lcall
fidivrl
pop
loop
jns
lods
div
lahf
or
adc
push
pusha
jg
sub
movsl
push
add
push
sub
mov
and
scas
push
mov
jno
dec
movsl
sub
jno
push
sub
cmp
mov
mov
cmpsb
lock
mov
xchg
pusha
test
stos
movsl
pop
jns
faddl
inc
mov
jo
ds
or
and
mov
xorb
addb
adc
jecxz
ret
jecxz
cmc
mov
mov
pushf
xchg
int
cmp
outsb
mov
dec
inc
loope
sbb
lds
pop
cmp
pop
into
and
dec
dec
inc
cmp
inc
push
add
xor
jb
add
sbb
push
pop
mov
scas
mov
in
sbb
xor
xchg
dec
inc
push
cmp
cmp
cmpsl
lret
lds
xlat
lret
leave
dec
sub
lock
pushf
and
insl
inc
sub
xor
push
pop
cmp
and
cmc
lods
fistps
sub
push
sbb
or
out
sbb
aam
fsubrl
dec
pop
mov
fnstcw
dec
pop
sbbb
sbb
hlt
outsb
hlt
in
xchg
jae
scas
jno
jno
jno
jno
jno
icebp
rcll
adc
scas
rcrb
ja
push
and
pop
popf
lds
aam
sar
das
cmp
aas
cmc
mov
out
sarl
arpl
in
mov
mov
cwtl
adc
cld
mov
out
loopne
fiaddl
push
mov
add
filds
dec
add
jae
cmp
add
inc
push
xlat
ret
push
add
dec
sarb
cmp
or
sub
jno
xor
push
mov
cmp
daa
test
and
mov
pop
cmp
pop
xlat
mov
jo
loopne
fstp
fiaddl
jp
push
lock
and
popa
push
mov
mov
cmp
inc
fcomps
push
xlat
adc
ret
pop
inc
pop
mov
jg
stc
push
ret
mov
and
adc
int3
sub
enter
nop
scas
cwtl
cmpsl
out
daa
mov
scas
enter
rol
push
mov
push
mov
stc
xlat
pop
loopne
cmc
sub
dec
jge
jle
cmp
rep
into
sub
fdivrs
sub
jo
mov
andl
sahf
lods
loopne
lret
mov
aad
push
fistpll
jae
inc
pop
pop
and
lds
dec
sub
jecxz
sub
adc
jp
xchg
roll
cwtl
sub
aad
sub
das
add
push
aas
dec
stos
and
mov
shll
xchg
or
out
or
sahf
pop
adc
cld
mov
push
mov
std
xchg
jg
popl
cmc
mov
xchg
xlat
and
and
out
adc
sub
leave
jl
or
and
imul
enter
cwtl
aas
push
and
ljmp
jmp
orb
shlb
fidivl
push
or
aad
dec
les
in
loope
int
xorl
test
jae
or
mov
cmc
mov
lea
sbb
and
inc
dec
sbb
test
sub
cmc
in
sub
xchg
insb
pop
lret
mov
mov
jmp
enter
enter
sbb
xchg
negb
xor
xchg
aaa
gs
pop
lret
fmulp
stos
dec
rolb
xchg
ljmp
pop
push
adc
js
dec
jne
xchg
sub
mov
sbb
hlt
aad
xchg
fnstenv
sbb
test
mov
push
insb
lea
inc
push
ds
arpl
mov
jle
into
pop
jl
imul
ds
jns
dec
push
xorl
jle
daa
jne
cmc
test
test
pusha
test
cmc
pop
rcll
arpl
sbb
pop
jb
fldt
mov
jp
rorl
sub
sbb
fildl
insb
fwait
jle
out
lods
pop
cmp
dec
icebp
rcrb
cmpsb
test
daa
dec
jns
cwtl
push
leave
cs
dec
xor
jge
jno
adc
xchg
and
imul
xchg
in
mov
stc
or
int
pop
pop
mov
mov
fldpi
stc
cmpb
jno
jae
and
shrb
daa
and
mov
es
adc
adc
push
hlt
mov
sahf
xchg
arpl
sbb
addr16
inc
xor
dec
cmc
push
filds
xchg
int3
nop
dec
mov
lds
jne
aam
cmp
add
push
xchg
lcall
aad
in
pop
test
pop
imul
pop
imul
jg
popf
sub
pop
test
xor
jle
push
adc
xchg
stos
sub
aad
mov
fyl2xp1
adc
sub
lds
pop
mov
pusha
inc
les
adc
add
pop
jle
pop
sub
jne
pop
clc
xchg
cmovb
incl
sbb
scas
ss
arpl
pop
xor
lods
lcall
fnstenv
dec
jge
dec
fadd
and
outsb
dec
fmul
fcompl
int3
xchg
inc
inc
add
cmc
pop
sub
mov
fsubrl
out
sub
movsb
nop
scas
cmp
push
and
add
cld
dec
mov
push
dec
xor
fwait
and
adc
mov
xor
rcrb
std
dec
sbb
dec
negb
decl
push
and
mull
adc
dec
push
into
mov
mov
test
dec
int3
pop
lock
stos
sbb
test
mov
xor
push
xchg
mov
fildll
push
push
mov
and
cltd
enter
jp
leave
or
ficomps
testb
or
push
inc
jg
xchg
cli
insl
aad
andl
lahf
jbe
pushf
sub
fwait
sub
scas
jns
push
out
jne
or
cmpb
fwait
xchg
das
test
xor
sub
aam
or
xchg
stos
add
lds
test
push
push
leave
les
and
loope
or
lret
xor
mov
mov
movsb
lods
fadds
ret
roll
movsl
sub
dec
push
and
xor
and
test
cmc
push
push
mov
push
out
jo
dec
insl
roll
inc
jg
cmp
jge
out
jecxz,pt
add
inc
in
push
out
int
int3
mov
xor
push
lret
loopne
scas
or
push
and
xchg
and
push
xor
pop
dec
pop
or
mov
push
add
xor
rorl
addb
inc
icebp
or
adc
lock
push
inc
imul
stos
sqrtps
push
xchg
push
pop
and
jae
cmp
sub
add
sub
inc
roll
lret
xchg
fsubr
xor
sub
inc
mov
subl
pop
in
test
xor
cwtl
arpl
mov
sub
mov
pop
shr
dec
outsb
sub
sbb
clc
mov
daa
dec
cmpsb
mov
sarl
sarb
push
cmc
iret
rclb
ret
enter
inc
into
imul
bnd
cmp
inc
inc
mov
sbb
addr16
mov
test
push
clc
ds
test
into
pop
imul
stc
or
rcrl
pop
aad
dec
jmp
ret
repnz
jae
xor
xchg
aad
shrl
dec
inc
insl
lahf
sub
jne
enter
mov
mov
adc
inc
out
ret
and
mov
in
test
std
clc
sbb
sbb
mov
xchg
cmpsb
call
sarl
mov
fdivl
jns
inc
and
pop
sti
jne
and
sahf
gs
cmpsb
daa
xchg
out
aam
and
xor
xor
ja
arpl
pop
cltd
scas
add
ret
or
lea
xor
and
xchg
add
test
pushf
insl
test
mov
xor
in
or
and
xor
push
sbb
inc
ficompl
push
dec
fildl
xor
fdivrs
mov
fisubrl
movq
adc
mov
or
mov
leave
sbb
jle
inc
stos
cli
outsb
jbe
add
negb
mov
push
test
xchg
arpl
jnp
push
xchg
or
stc
test
outsl
iret
jle
arpl
sub
xor
test
push
jns
shrl
ja
fldl
filds
int
mov
loopne
cli
cli
out
and
movsb
arpl
das
jg,pt
jg
sti
pushf
into
adc
rorb
subl
jg
add
dec
addl
mov
rorb
mov
sar
sub
dec
jne
push
addr16
and
test
icebp
ret
sbb
mov
xchg
adc
mov
stos
pop
mov
dec
or
xchg
shlb
cmp
movsl
xchg
sub
decb
stos
dec
fsubs
incb
inc
mov
bound
mov
addr16
xchg
mov
xor
xchg
mov
mov
and
stos
jae
mov
push
adc
xor
cmp
clc
mov
mov
and
adc
inc
ret
mov
and
mov
jbe
dec
adcb
adc
jg
and
fmull
mov
inc
sti
les
push
cmp
mov
cmp
outsb
cmc
push
xchg
mov
imul
mov
cmpsb
sbb
sbb
in
aad
lret
push
xor
mov
mov
dec
pop
loop
into
add
jge
mov
cltd
imul
push
dec
les
popf
add
mov
lret
or
sub
cli
int3
cmc
lods
les
mov
test
jge
je
mov
cmpsb
dec
mov
add
fldl
orl
movsb
pop
roll
icebp
xor
push
clc
sbb
sbb
and
mov
arpl
gs
sbb
xor
pop
xor
or
mov
popa
int
cmc
insb
ljmp
sahf
js
push
cli
pop
dec
push
push
loope
js
mov
std
lcall
nop
int
xchg
daa
inc
stos
jne
xchg
adc
fiaddl
xchg
mov
xor
push
inc
or
cmp
in
lock
push
sbbb
fs
pusha
shll
inc
push
jp
das
add
idiv
scas
sbb
adc
int3
test
inc
pop
xchg
cmc
add
push
mov
mov
add
movntq
out
pop
fbld
mov
push
dec
out
or
fisubs
inc
mov
mov
adc
push
adc
mov
add
std
or
or
push
popf
dec
shrl
outsl
push
in
jmp
cmc
push
fldenv
mov
mov
sarb
adc
xchg
cld
mov
add
inc
push
cmpsb
add
gs
pop
testb
nop
mov
fs
outsl
sbb
jne
ljmp
icebp
fldl
sub
push
stos
sbb
inc
or
xchg
xchg
lea
and
iret
fsub
or
cmpsl
jns
adc
dec
inc
jge
push
adc
cmp
xchg
jle
sub
mov
jle
and
push
and
les
mov
push
adc
stos
lods
sub
xor
and
add
cwtl
fisubrs
idivb
push
mov
jno
scas
xor
sbb
pop
outsb
lret
xor
aad
ss
inc
sub
cmc
push
clc
pop
xor
xchg
push
add
scas
rolb
jbe
inc
xor
pop
call
jbe
adc
scas
leave
sub
hlt
adc
fdivs
sarb
sub
loope
loop
cmc
cs
mov
or
inc
cmc
repz
xchg
pop
mov
push
rcl
out
push
jg
xchg
mov
push
sbb
mov
adc
or
and
fsub
lds
inc
mov
cmp
cmp
cmpb
dec
cs
xchg
sbb
aas
xchg
adc
add
or
int3
adc
ja
rdmsr
inc
and
das
add
sub
mov
pop
or
je
scas
cmc
rorl
jecxz
push
pop
insl
aad
cmp
ljmp
xchg
xchg
inc
mov
inc
inc
cs
mov
test
jl
mov
push
enter
mov
shlb
mov
xlat
ret
lret
inc
cmc
stos
in
adcl
xor
out
inc
repnz
pop
jge
and
mov
imul
test
dec
cmc
xor
cmp
popa
push
ja
imul
and
test
jge
xor
shrb
or
jmp
add
imul
mov
std
push
push
jnp
and
testl
xchg
mov
test
les
outsl
lds
scas
jae
cmp
push
dec
mov
inc
or
ud0
push
lret
jle
and
sahf
nop
inc
xchg
leave
pop
push
mov
push
mov
cmp
in
ret
jno
cmc
scas
sub
and
ja
dec
sub
cmp
dec
mov
ret
dec
push
fstpl
jno
mov
xchg
ret
dec
dec
rolb
dec
dec
mov
ret
jnp
test
shufps
mov
mov
push
xor
xchg
sahf
idivb
cwtl
lret
mov
mov
adc
push
inc
add
jne
lret
push
repz
sub
scas
pop
sub
jne
sub
sarb
add
sahf
dec
outsb
xor
xchg
imul
call
cmc
mov
and
lahf
decb
nop
mov
adc
xor
insl
cmc
jmp
mov
pmaddwd
or
sahf
pop
adc
jp
bound
scas
mov
enter
aam
fcmovnbe
bound
aas
ljmp
xchg
testb
nop
repz
inc
arpl
xlat
aaa
pop
sub
fyl2x
jmp
lods
xlat
pop
aam
inc
dec
or
js
mov
nop
subl
add
sub
push
divl
or
dec
jne
cmp
pushf
fsubrl
rorl
dec
push
lods
add
mov
push
leave
pop
aam
xchg
or
and
cmpsl
inc
jg
jne
adc
arpl
or
add
sbb
inc
arpl
and
stos
jnp
mov
fadd
push
mov
dec
jae
mov
push
xchg
lods
loop
jb
aas
iret
add
fwait
xor
inc
pushf
ret
sbb
mov
ja
mov
jne
cs
push
push
mov
push
push
das
shlb
dec
movq
xor
stos
in
inc
push
int
xor
jl
fwait
pop
rol
inc
add
inc
sti
inc
pop
jnp
inc
stc
cmp
inc
fstpl
push
mov
data16
lods
pop
jge
popa
xor
mov
push
les
jmp
imul
or
and
ja
add
sti
mov
jle
fsubrl
mov
jge
popa
mov
pop
loopne
cli
cltd
idivl
in
insl
jg
and
pop
xor
jge
jle
pop
incb
int
push
jae
xchg
movq
mov
push
testb
out
push
lods
rolb
pop
shl
arpl
lods
pop
xor
sbb
or
es
sbb
xchg
pop
cmpsl
cmp
inc
in
rclb
dec
mov
mov
xor
fwait
shll
mov
pop
xchg
sub
cmpsb
test
dec
outsb
sti
test
jge
call
cmpsb
punpcklwd
jae
dec
das
jmp
push
aam
mov
xchg
inc
jne
iret
in
push
call
sarl
sbb
xor
and
dec
jge
stc
hlt
arpl
push
test
sub
jg
mov
gs
ret
dec
int3
inc
dec
jne
nop
mov
sub
cmp
xchg
sub
dec
xchg
xchg
cmpsb
aad
cmc
mov
pop
sbb
and
imul
or
lret
cmpsl
sarl
vminss
dec
mov
adc
ret
insb
sub
fisubrl
loop
loope
enter
sub
mov
cmc
xor
cmp
mov
and
cmpsl
dec
jge
or
sbb
stos
clc
ss
cmp
jecxz
dec
fldl
aaa
insl
ret
call
push
aaa
insb
dec
cmc
cwtl
test
sub
movsl
cmpsl
push
mov
dec
ja
addb
test
xor
pop
jmp
mov
test
pop
popf
leave
sbb
sub
loope
ret
jnp
gs
roll
dec
jne
lahf
jp
or
lods
lcall
loope
divb
jns
push
sbb
cs
jne
stc
push
cmp
xor
push
push
aam
xlat
dec
leave
xor
cmc
inc
into
adc
cmp
cmc
cltd
rcrl
stos
ret
mov
add
repz
ret
hlt
jb
gs
inc
movd
xchg
pop
and
cmc
stos
shll
jno
imul
lds
sub
rorb
fsubrs
inc
ja
andl
dec
fucom
xchg
mov
shlb
sbb
mov
in
test
pop
cmc
pop
int
push
ss
or
icebp
in
arpl
pop
sub
sbb
inc
iret
hlt
or
push
dec
xor
cmp
cmp
xor
loop
and
mov
sub
sar
xor
fisttpl
and
or
les
faddl
pushf
dec
inc
arpl
scas
enter
jno
mov
loope
dec
ja
dec
fs
fucomi
insl
cwtl
push
stc
cmc
jmp
hlt
jae
sahf
stos
jae
je
sbb
push
pop
xor
dec
sbb
ss
inc
add
pusha
push
test
adc
test
int
daa
fisubs
xchg
movsl
stos
sbb
adc
inc
xorb
stos
dec
adc
sub
sub
enter
daa
pop
dec
or
mov
popl
and
enter
rcll
loope
mov
stos
insl
mov
cmp
jg
arpl
int
shrl
test
pushf
ljmp
jl
loopne
test
and
jne
mov
fistpll
mov
add
jg
push
mov
lds
sbb
pop
scas
daa
jg
ja
pop
les
jp
enter
pop
clc
cli
push
in
pop
ja
push
cwtl
call
ret
loopne
ljmp
out
mov
push
push
xchg
mov
lds
xor
sub
or
cmpb
das
popf
cmp
xor
jnp
ss
jne
jno
lods
sub
call
jecxz
andl
jns
fwait
push
into
hlt
subl
or
popa
cmp
sub
push
cmc
mov
cmpsb
faddl
or
pop
xor
pop
or
sbb
test
xchg
adc
pop
push
adc
adc
mov
gs
mov
fld
cmpsb
add
bound
inc
cld
and
mov
cmc
push
xchg
stos
pop
adc
movl
push
xchg
mov
pusha
push
clc
jns
pop
push
frstor
jecxz
rolb
pop
les
jne
xchg
push
popa
sub
cmc
sub
xchg
sub
test
pop
xchg
adc
fildl
cmc
aaa
xchg
aad
fldt
jg
adc
mov
lret
cld
sbb
popf
loop
cmc
and
lods
push
stos
sahf
pop
cmp
and
mov
iret
inc
loope
loopne
or
dec
pop
dec
cmp
jno
push
mov
dec
inc
push
mov
or
push
insl
mov
test
aas
aas
pop
pop
dec
mov
inc
push
and
repz
xor
push
pop
mov
sbb
fcmove
out
lea
mov
xchg
leave
shrb
jle
test
inc
adc
push
dec
out
shrb
sub
pusha
jle
push
cltd
dec
test
sbb
mov
int
arpl
lods
aas
adc
jle
xchg
repz
jne
paddb
jne
xor
xor
sub
xlat
xor
dec
sub
dec
mov
and
xchg
cmp
jb
scas
xchg
inc
fldl
stc
leave
inc
jno
dec
rclb
scas
jge
and
jp
sub
xorl
dec
cmp
ja
shll
out
fldl
iret
repz
nop
dec
fs
into
add
arpl
mov
jle
pop
xchg
push
fbld
push
and
adc
cmp
xor
int
scas
add
mov
addb
cmp
add
pop
test
rcl
dec
fnstsw
xor
lds
iret
insl
les
inc
push
mov
fdivp
sbb
inc
cmp
mov
lods
mov
push
add
push
inc
ficompl
jecxz
jg
mov
inc
push
arpl
xor
and
loop
inc
jg
xor
jne
xchg
pushf
in
ds
loopne
fldt
mov
or
lock
lret
imul
add
sbb
pop
roll
mov
sub
adc
and
cs
pop
adc
fstl
cmp
js
add
inc
shll
fcompl
dec
sub
leave
pop
hlt
sbb
test
cs
imul
mov
mov
insb
sbb
ljmp
inc
push
lds
pusha
cmp
stos
push
dec
flds
mov
add
adc
insl
inc
pop
imul
or
mov
rorb
dec
sub
sbb
mov
std
jp
test
xlat
je
sbb
xor
cld
shlb
inc
push
pop
cmc
js
xor
adc
jp
mov
ds
lea
push
iret
mov
mov
lcall
add
xor
fcmove
xchg
or
mov
aam
mov
pop
ror
subb
add
and
mov
leave
stc
test
test
dec
rolb
dec
leave
movb
and
mov
loope
nop
fnstsw
jno
es
adc
imul
lret
inc
xchg
jg
lret
pushf
roll
cmp
or
sarb
mov
push
adc
arpl
out
mov
pop
or
sahf
cmp
mov
enter
and
fisttpl
das
lock
xchg
dec
stos
insb
lock
rolb
stc
sbb
cmp
aam
sub
pop
sub
adc
or
ror
jge
out
push
fs
jns
or
mov
gs
pop
sub
pop
xlat
jne
cmc
dec
cld
jmp
enter
mov
in
leave
mov
idivl
push
test
and
pop
sbb
pop
insb
fisubrs
nop
xor
and
imul
scas
cmp
rcr
cmc
pop
cmp
inc
mov
scas
stc
ds
mov
mov
scas
roll
dec
pop
push
xlat
pusha
push
fwait
push
arpl
jnp
dec
sub
lock
clc
je
movsl
mov
nop
xchg
mov
cmp
push
inc
sahf
nop
xlat
inc
cmp
sbb
fucomp
dec
mov
in
push
dec
adc
adc
push
jns
mov
and
mov
dec
orl
and
popl
cmp
and
clc
add
lret
sbb
adc
jno
cmc
iret
sub
adc
out
movsb
aas
inc
les
or
imul
add
add
leave
negl
test
jp
xor
cmp
cs
pop
mov
xchg
sub
int3
jp
jno
xchg
ja
ret
nop
mov
movsl
fmul
fidivs
iret
push
aaa
xchg
or
aas
int
aam
sub
daa
xor
fwait
or
lods
inc
push
push
lahf
jno
or
in
add
rcll
stos
fdivl
loop
mov
mov
or
popf
adc
add
xchg
movsl
aam
or
loope
inc
sub
jno
cmpsl
lahf
mov
bsr
je
insl
nop
mov
mulb
into
mov
pop
lods
push
insl
fs
arpl
jae
and
icebp
jle
push
jnp
or
xchg
jg
pop
jns
inc
fsub
jo
push
nop
pusha
test
dec
jo
stos
inc
scas
dec
dec
jne
repz
cli
push
out
dec
int
adc
into
addl
jns
fldenv
sbb
cmpsl
test
add
cmc
mov
sbb
lahf
int3
sbb
aaa
fnstsw
add
add
repz
decl
sarl
std
xor
cld
ss
add
add
and
and
mov
push
incl
sub
out
and
subb
rcr
subb
les
push
out
ds
inc
add
jg
addr16
cmp
ja
ja
cs
in
push
mov
cmp
xchg
loop
inc
inc
sub
jecxz
mov
test
test
xor
pop
sbb
and
dec
jo
cmp
xor
test
cmp
xchg
test
imul
or
jnp
fisttpll
pop
ds
stos
mov
push
sub
leave
int
jl
mov
jns
cwtl
or
cmp
fwait
mov
mov
ret
cli
fcmovbe
aad
or
adc
xchg
dec
jnp
mov
mov
cmp
dec
in
cmp
pop
mov
fisttpl
lret
push
cmp
jne
mov
gs
mov
subl
mov
lcall
xchg
movsb
test
lret
push
mov
jae
dec
jb
mov
test
and
adc
enter
xorl
sbb
pop
pop
push
packsswb
push
jns
enter
mov
add
test
sub
mov
ljmp
sbb
xor
pop
aad
into
push
dec
sbb
and
jmp
in
pop
aas
movsb
fwait
inc
xchg
lds
loop
dec
jle
jg
scas
dec
test
push
adcl
xchg
cmp
add
mov
dec
push
xchg
mov
call
iret
jmp
sbb
mov
jg
dec
push
mov
dec
mov
bound
add
and
fisttpll
and
adc
ss
rorl
fdivl
and
or
and
shr
nop
xorl
jo
sub
inc
lods
mov
adc
icebp
jge
daa
repz
or
fadds
stos
cmp
aad
popf
jbe
scas
dec
xchg
mov
mov
push
in
inc
dec
jge
sub
and
rdpmc
adc
and
cld
xchg
leave
sbb
hlt
inc
mov
stc
cmpsb
inc
push
inc
js
inc
cmpl
cld
jnp
jg
iret
testl
push
push
cmc
add
pop
ss
xorb
mov
push
enter
mov
sub
arpl
pop
push
andl
aad
cwtl
sub
dec
mov
iret
rcll
bound
xchg
sbb
jp
rolb
inc
cmp
xchg
inc
cmp
add
js
dec
or
inc
decb
pop
movsl
mov
not
jecxz
pop
sub
cmp
jg
into
inc
stos
test
or
cmp
xchg
addb
xchg
sub
adc
sbb
ja
jo
lods
test
mov
sbb
lret
fucomip
and
push
fwait
into
pop
and
inc
pop
cmpl
mov
push
lods
or
cmpsl
jns
dec
test
or
inc
mov
inc
cmp
add
xchg
xor
inc
push
je
pop
lds
cmpsl
pop
insb
sbb
push
mov
mov
mov
xchg
cmp
repz
sub
les
jmp
jp
aad
addb
sub
cmp
shll
sbb
movsl
dec
std
mov
ror
je
push
pop
sarl
lahf
in
ret
sbb
mov
ja
ja
dec
pop
and
push
jne
sub
les
or
lods
push
incl
add
ret
add
and
inc
or
in
push
pop
shl
push
out
sarl
dec
call
xor
xor
jnp
out
ja
mov
inc
stc
pop
in
xor
std
subl
cs
lds
jmp
and
add
loope
addl
out
push
repz
push
jne
lcall
shrl
repnz
icebp
jle
push
out
inc
inc
test
lods
ficompl
mov
or
or
inc
xchg
shr
les
mov
push
jae
sub
add
fs
test
xor
inc
test
cmc
lds
sub
xor
xchg
lret
test
dec
or
movsb
sbb
enter
out
push
xchg
call
or
pop
test
jnp
jnp
mulb
cmp
je
fcmovnbe
sbb
push
pop
push
ja
cmp
jae
xchg
dec
xlat
aam
loopne
push
push
push
dec
stc
mov
jnp
jo
push
fs
out
pusha
movsb
jne
jne
negb
dec
insl
sbbb
xor
jns
sub
inc
xor
xor
dec
lahf
mov
test
sti
lds
hlt
jle
push
mov
xor
jge
fs
inc
shr
pop
int
cltd
add
inc
adc
enter
ret
inc
rcrb
ljmp
pop
add
or
sbb
mov
push
cmc
push
out
jnp
fsubrl
adc
cmp
loop
cmp
push
cmp
mov
sub
sub
fdiv
dec
or
ds
into
orb
clc
cmpsb
pop
mov
pushf
lds
test
cmpsb
shlb
mov
sub
inc
jl
adc
xchg
not
repz
mov
into
mov
mov
or
popf
pusha
cmp
sahf
xor
xchg
in
pop
shll
jecxz
push
mov
sbb
clc
roll
movl
xor
ja
fwait
sbb
imul
enter
or
mov
and
in
xchg
lcall
leave
or
daa
push
sub
push
js
hlt
pop
aas
imul
addb
xchg
mov
cmc
dec
pop
sub
into
jp
adc
imul
jle
out
cmpb
cmp
sub
outsb
fistps
push
or
insb
cmpsb
pop
inc
lods
pop
sub
vpinsrw
dec
jbe
cmp
loopne
add
imul
and
mov
cmp
adc
cmp
mov
repz
in
xchg
jns
push
or
pop
xchg
add
adc
sbb
and
sub
inc
gs
xor
bound
das
loop
hlt
in
pop
inc
rorb
rcrl
xchg
or
fisttpll
inc
push
dec
hlt
adc
inc
roll
fadd
and
adc
mov
mov
aad
lds
cmp
js
fildl
fidivs
mov
stos
jl
xchg
out
cmc
cwtl
call
inc
jle
dec
adc
jns
push
and
cmp
subl
pop
mov
pop
cmc
and
cs
xchg
inc
inc
pop
cmc
and
fsubr
mov
imul
add
dec
mov
inc
or
lret
sbb
pop
leave
add
and
fldl
jns
add
lds
mov
push
push
xchg
lds
push
arpl
cltd
jae
dec
lcall
add
and
mov
adc
shl
jbe
sahf
repnz
rclb
loopne,pt
les
fs
jle
sub
divl
btc
sahf
cmp
stos
mov
cmpsb
clc
leave
or
xor
cmp
js
inc
xorl
mov
push
test
inc
push
mov
jnp
jp
lods
dec
aas
dec
loopne
sub
add
fwait
lret
clc
adc
jle
and
inc
inc
jecxz
cld
arpl
cmc
lcall
xor
push
pop
dec
jg
xchg
cmpb
jp
arpl
roll
xor
ds
fwait
adc
pop
stos
stos
mov
aad
xchg
out
daa
clc
incl
leave
cmc
push
push
add
fadds
cmp
out
arpl
and
lea
or
push
shr
adc
sub
jae
xchg
out
lds
xor
movsl
dec
hlt
cwtl
rorl
inc
jo
sahf
or
mov
sbb
imul
imul
mov
mov
in
xlat
push
jbe
push
or
xchg
cmc
push
mov
mov
jg
jp
push
les
and
dec
out
mov
cmc
mov
cmc
pop
sbb
incb
adc
jno
cmpsl
scas
xor
dec
xchg
mov
xchg
cmp
adc
mov
adc
repz
shr
dec
shll
adc
dec
xor
arpl
cltd
ljmp
or
cmpsl
mov
mov
xlat
mov
clc
inc
adc
std
stc
push
test
cmc
cmp
movsb
ljmp
or
cmp
mov
loope
shrb
xlat
ds
or
and
xchg
or
inc
mov
cld
mov
jle
in
gs
dec
push
xchg
sar
and
nop
jns
adc
psubsb
add
inc
cmp
cmpsb
mov
xchg
and
stos
add
dec
dec
cmc
inc
mov
ljmp
xor
inc
push
repz
test
fdivrs
adc
inc
jo
cltd
push
idivb
cld
add
xor
mov
cs
cmp
push
hlt
dec
add
test
inc
fwait
jecxz
sbb
sbb
popf
sbbl
push
ljmp
and
ljmp
mov
cmp
imul
cmc
aam
imul
lahf
ret
arpl
sub
xorl
push
add
inc
cmp
test
js
or
mov
inc
pop
sub
push
gs
adc
mov
dec
orb
call
int3
sbb
push
daa
mov
add
pop
push
dec
imul
and
test
and
jnp
ret
sbb
cmp
mov
or
jns
pop
cmp
out
in
mov
push
and
or
mov
push
int3
in
push
stos
movsb
mov
test
sub
and
sub
test
pop
jb
enter
push
cmpsl
imul
mov
xchg
pushf
jo
mov
and
cld
add
idivb
dec
add
das
stc
cmpsl
pop
jg
push
add
test
pop
inc
jns
pop
sub
aas
idiv
and
mov
dec
cmp
mov
lret
idivb
sbb
jns
dec
fwait
push
packssdw
push
cmp
enter
cmp
pusha
test
xchg
ret
xchg
jbe
arpl
mov
sub
rorl
in
rcr
inc
xchg
test
stos
mov
out
push
aad
shl
jnp
add
sub
ljmp
mov
enter
loop
inc
dec
sbb
testb
mov
cs
xchg
addr16
cmc
sbb
aam
rcrl
daa
iret
push
and
rep
jo
repz
int3
les
mov
cmp
jp
pop
cmp
dec
add
push
andb
in
cmc
sti
cmpsl
sbb
cmp
cmp
push
sbb
lock
cmc
aas
negb
cmpl
lret
jae
outsb
es
mov
xchg
pop
jecxz
cmpsb
jo
inc
sub
cld
push
pop
mulps
mov
arpl
vpxor
int
into
fdivl
fisttpl
mov
push
mov
sub
jle
cmpsb
push
rorl
push
push
cld
jp
jne
or
insl
cmp
adc
cld
push
outsl
hlt
data16
inc
inc
and
aas
dec
push
ds
fsub
dec
lret
mov
aad
mov
mov
pop
test
les
dec
adc
pop
dec
jl
mov
jl
or
mov
push
orl
jae
jnp
std
clc
lods
iret
aam
jl
repnz
dec
jnp
jg
mov
xchg
push
fbld
sbb
jbe
xchg
fwait
jo
pop
scas
pop
addr16
cmp
cld
push
xchg
in
scas
xor
xchg
in
add
icebp
cmc
jmp
scas
cmc
or
xorb
imul
adc
int
stc
data16
cld
mov
add
jl
adc
cmp
ja
lret
push
dec
shlb
xor
sbb
lahf
aaa
mov
jno
clc
jg
xor
mov
stc
movsb
js
jp
psubsw
push
push
dec
mov
or
rolb
cmp
jns
mov
push
inc
dec
ljmp
xor
andl
jg,pn
push
and
lea
mov
push
ja
inc
pop
roll
sub
out
inc
mov
pop
mov
mov
lahf
mov
loopne
xor
bound
push
push
test
jle
loope
dec
xlat
outsl
mov
pop
mov
push
sti
mov
leave
xchg
dec
scas
sbb
mov
sub
fisubs
xchg
adc
mov
insb
cwtl
fmull
pusha
push
inc
fsubrs
outsl
mov
cs
push
cmc
and
sbb
in
jns
adc
jb
mov
sbb
insl
xchg
adcb
sub
jno
js
add
cmpb
cmp
gs
pop
cmp
sbb
cld
mov
in
inc
mov
stos
or
dec
dec
fidivs
cli
jb
adc
in
inc
shrb
notl
mov
push
popf
xchg
arpl
mov
cli
xchg
nop
xchg
mov
or
xchg
sti
pop
rcrl
je
lods
push
roll
leave
cmc
jmp
push
stc
jbe
jg
aad
or
test
mov
leave
or
jge
add
test
sbb
out
pusha
inc
bound
into
pop
mov
cmc
sub
adc
adc
fnstcw
push
leave
ds
jge
dec
adc
xchg
and
pop
jnp
roll
xchg
leave
addr16
mov
je
mov
push
rcrl
stc
push
shlb
std
xor
dec
pusha
rcrl
xor
add
dec
inc
test
cmc
xor
into
push
stos
cmp
flds
mov
int
dec
inc
sahf
xorb
jns
cltd
push
decb
adc
in
fiadds
in
testl
shll
mov
aas
adc
insb
pop
jg
dec
or
test
shll
sub
dec
jnp
cmc
scas
aad
ljmp
lcallw
pop
and
inc
sub
aad
push
sbbb
bound
xchg
xor
xor
movsb
pop
cmc
test
test
pop
and
rcrl
pop
fsubl
and
xlat
pop
test
pop
lds
cld
outsl
jb
pop
cmc
and
leave
insl
in
mov
cmp
xchg
in
dec
mov
test
test
cmc
push
pop
sub
fwait
mov
sahf
scas
xor
fisubl
jge
arpl
icebp
pusha
imul
xor
shll
or
adc
lret
gs
cmc
mov
fnstenv
and
dec
lods
fldpi
cmc
cmp
xlat
andl
and
adc
inc
push
dec
pop
add
pusha
mov
pop
dec
sub
add
sub
rol
jnp
int
push
mov
mov
enter
test
shll
push
sti
subl
sahf
or
call
xchg
jecxz
lea
minps
push
repnz
dec
push
sub
outsb
scas
addr16
xor
andb
or
mov
cmp
hlt
dec
pop
daa
push
clc
xchg
inc
inc
and
cmp
decb
cmp
arpl
cmc
cmp
and
out
faddl
cmp
popa
xor
pop
leave
sarl
sub
add
xor
hlt
jl
add
aam
sti
dec
out
adc
lods
mov
add
sub
testl
iret
push
add
shl
jnp
rorl
jge
add
lcall
sub
mov
add
jle
fs
dec
cmp
inc
int3
and
dec
stos
jbe
add
mov
imul
leave
and
mov
ret
fldl
push
and
sbb
sub
sub
fists
push
dec
push
insb
int
int
or
scas
inc
sbbl
mov
inc
loopne
xchg
scas
pop
cmp
imul
xor
sub
inc
cs
mov
mov
inc
jne
dec
pushf
nop
pushf
loopne
and
mov
rolb
inc
cmp
cmp
cmp
mov
dec
xchg
dec
dec
dec
jnp
popf
cmp
outsl
xlat
imul
dec
das
xchg
aas
and
mov
dec
ds
mov
loop
pop
js
push
push
leave
mov
test
scas
cmp
lds
dec
ss
movsb
mov
les
call
stos
test
cmp
nop
nop
and
repz
test
jnp
and
loop
imulb
jg
pusha
jnp
in
jo
jns
or
and
cmpl
mov
out
pop
ja
add
insb
aas
das
sarb
lods
mov
push
ds
std
cltd
in
out
adc
cmp
cmc
or
fnstcw
xor
sub
fcmovu
xorb
js
push
in
lcall
lock
push
adcl
frstor
push
fimuls
pop
pusha
cld
adc
fcmovne
or
push
jle
push
jg
and
pop
dec
pop
je
sahf
xor
mov
outsl
aam
inc
btr
and
jl
inc
xor
test
pop
jae
test
jo
and
jecxz
ret
test
mov
loopne
andl
jno
ss
in
sub
pop
jmp
subl
inc
jecxz
xor
push
std
or
mov
insl
cmc
inc
pop
insl
pop
xor
or
dec
jne
scas
or
xor
jnp
jle
bound
or
mov
push
data16
imul
dec
es
push
dec
popa
dec
nop
arpl
xor
arpl
jno
inc
xor
addr16
sub
das
dec
loop
es
jge
mov
inc
sub
jbe
aam
mov
cmp
mov
fldcw
jge
xchg
popa
and
comiss
inc
enter
cmp
sbbl
xchg
mov
add
mov
in
je
xorl
fldl
and
fstps
lret
mov
cmp
fucomip
push
adc
push
ljmp
shll
xor
dec
xor
pop
fimuls
sbb
add
cmp
cmpsl
jge
lcall
jge
arpl
sub
negb
insl
or
mov
ja
xchg
andb
push
dec
jno
xchg
cmc
in
test
push
jb
imul
jb
mov
dec
xchg
mov
clc
mov
push
clc
push
jns
fistl
or
cltd
icebp
cmp
mov
fists
or
pop
dec
test
or
gs
pop
cmpsb
inc
push
sbb
pop
in
mov
mov
jne
pop
jle
pop
call
mov
adc
mov
scas
in
subl
in
xor
aaa
cmp
jb
cmpsl
sub
cmp
nop
jecxz
dec
cmovp
and
lret
sub
lock
mov
add
jecxz
leave
cmp
adc
js
push
mov
jmp
and
jp
xchg
out
adcl
std
add
add
and
xchg
adc
adc
pusha
ds
sub
aas
push
mov
push
push
fistpll
or
push
push
or
sub
and
fadds
cmpsb
pusha
push
mov
arpl
push
and
pop
bound
aas
je
push
cmc
les
jmp
or
stc
sub
and
push
sahf
push
nop
xchg
and
cmp
jno
mov
shlb
scas
hlt
dec
jbe
mov
les
mov
out
mov
inc
jne
notl
mov
sbb
add
shlb
imul
xor
xlat
push
sub
cmp
mov
inc
les
mov
add
or
in
insb
xchg
pop
lcall
dec
push
ja
add
int3
jg
jae
es
addr16
push
shlb
or
outsl
in
cmp
mov
sub
insl
movsb
outsl
hlt
test
mov
pop
das
aam
sub
push
movsb
push
cmp
lock
in
stos
pop
jno
mov
in
sahf
cmp
xorb
xchg
xchg
and
cmc
sub
imul
pop
jmp
xchg
movsl
jge
pop
cmpsl
sarb
push
add
shll
or
jno
cmc
dec
mov
xchg
add
pop
mov
dec
in
orb
cld
adc
les
clc
push
push
adc
ret
jne
cmc
jbe
movsb
sbb
stos
and
adc
cmpsl
mov
call
fwait
add
mov
mov
pop
es
add
jge
mov
aas
mov
sarl
imul
and
addl
popa
jecxz
jge
insb
mov
inc
cmp
repz
arpl
push
or
xchg
pop
or
fucomp
mov
adcl
cmpsl
xchg
dec
movsb
in
cld
in
xchg
insl
ds
pop
scas
mov
pop
dec
pop
enter
aas
or
aas
out
dec
icebp
jbe
inc
adc
into
aam
movsb
or
adc
jne
rolb
dec
mov
cmp
or
test
add
jno
inc
jg
jo
and
pop
jp
popf
xor
xor
cmp
lds
xor
sahf
fwait
mov
in
hlt
flds
sub
int
aas
pop
gs
cmpsl
fwait
cmpsb
cld
ja
js
out
jae
or
pop
push
xchg
mov
sub
or
or
jp
and
cmp
dec
dec
insb
pop
mov
jmp
cmc
mov
stos
orb
adc
dec
jae
inc
mov
mov
sub
cmc
fs
add
sbbl
fld
xchg
mov
movsl
jg
adc
add
hlt
jmp
outsl
lock
shrb
sbb
daa
cmpl
das
jb
or
shll
mov
dec
jne
cwtl
cld
sti
jmp
aas
and
mov
lock
lret
add
leave
fildl
sbb
and
dec
and
test
sbbb
cvtps2pi
fsubrp
jg
adc
stos
outsb
pop
sub
push
sub
je
stos
push
sbb
loop
inc
out
jne
jns
popa
cmc
xchg
sbb
mov
or
pop
add
jne
rcr
push
shll
ret
rol
jae
sarb
test
mov
cld
enter
insl
push
shr
roll
loopne
ret
out
dec
and
sub
aaa
ret
out
int3
sarl
jbe
jbe
pusha
lock
cld
push
loopne
jno
push
in
jg
out
aam
add
push
addr16
xchg
cmc
mov
lret
push
and
sub
push
dec
dec
xorl
jle
pop
inc
outsl
push
jg
jno
push
and
test
push
inc
arpl
test
or
cltd
cmp
les
mov
data16
push
inc
stos
or
pop
or
pop
lcall
inc
roll
addl
dec
test
jne
xlat
xor
sbb
pop
cmp
aas
sub
mov
gs
cld
fcoml
andb
roll
sti
push
adcl
mov
jg
leave
clc
push
scas
inc
xchg
cmp
rorl
inc
jg
sub
inc
push
jbe
arpl
js
testl
mov
fidivs
sbb
xor
mov
sbb
adc
iret
or
jle
mov
je
cwtl
inc
test
lods
jge
pop
sbb
jle
and
punpckldq
iret
dec
inc
add
and
mov
jno
shrb
outsb
xor
xchg
loopne
scas
shrl
insl
inc
in
cmp
dec
test
add
xor
sub
addr16
fst
mov
hlt
out
movb
cld
test
mov
stc
negl
and
and
xchg
mov
add
les
movsb
mov
hlt
sahf
fwait
dec
scas
xlat
mov
sub
test
jno
mov
mov
movsb
fidivl
cmc
dec
popf
xlat
mov
cmp
cmp
iret
push
xlat
cli
dec
je
push
sbb
gs
lcall
inc
jae
xchg
sbbb
push
sahf
aaa
icebp
iret
inc
adc
stc
icebp
add
lods
loopne
insb
jl
mov
push
wrmsr
xorl
sub
mov
push
lock
and
inc
js
leave
pop
inc
leave
test
add
sahf
push
dec
jbe
sub
nop
mov
les
xor
xchg
repz
imulb
test
orb
das
pop
daa
enter
fistpl
push
fnstsw
dec
ret
add
xchg
and
inc
addl
sub
and
shrb
dec
sbb
push
ds
das
les
dec
in
sbb
outsb
sub
and
int3
push
ret
sti
lods
cld
inc
into
xor
inc
stos
xchg
aam
cmc
pusha
sahf
nop
dec
pop
mov
iret
fcomps
sub
ret
cmp
adc
add
fiaddl
mov
add
lods
jne
je
jmp
insb
inc
push
into
jns
mov
and
cwtl
mov
pusha
inc
sbb
add
or
inc
leave
in
gs
xchg
push
cmp
hlt
repz
mov
cltd
test
outsb
dec
xor
cmc
nop
lods
jo
icebp
inc
subl
adcl
inc
jae
cmp
sbb
sub
iret
or
mov
fwait
pop
scas
mov
shrl
in
push
int
and
lea
sub
shl
sbb
inc
sub
test
add
jb
mov
jmp
lds
enter
dec
jecxz
push
dec
jnp
nop
call
ret
inc
sbb
daa
and
mov
push
imul
test
pop
shll
ds
jg
repz
hlt
stos
and
in
ds
sub
js
adc
jo
inc
pusha
shrb
call
sahf
and
and
jbe
xor
ja
movsb
cmp
dec
ss
xchg
mov
xor
adc
nop
orl
daa
popl
imul
aad
adc
lods
inc
cmp
push
jae
sbb
ds
iret
test
lret
into
jbe
xchg
sub
push
and
xor
scas
fsubrl
dec
idiv
dec
xor
fmuls
dec
mov
push
jmp
dec
push
cmp
rcrl
aam
mov
inc
fisttps
stos
rolb
and
fs
mov
sbb
popf
lret
fsub
pop
addr16
fildll
adc
in
push
ficoms
dec
and
mov
sbb
xchg
sub
lret
push
cmc
cmpsl
rcl
mov
test
pop
out
cli
stos
imul
nop
je
jno
iret
sub
sbb
pop
mov
into
dec
push
outsl
sub
movsl
mov
and
xor
ret
xchg
xchg
push
test
sbb
fcmovnbe
mov
es
nop
out
adc
lret
out
and
int
and
mov
mov
fdivr
mov
cmpsl
leave
scas
aam
popa
add
mov
int3
pop
nop
inc
dec
or
sub
insl
mov
adc
inc
mov
cld
inc
push
test
icebp
test
ficoms
inc
and
int
rolb
add
nop
leave
clc
aad
rolb
ret
inc
inc
or
gs
inc
cmpsl
call
call
pop
incb
jge
gs
aam
jo
mov
nop
das
adc
mov
fs
mov
adc
xor
mov
jge
std
fwait
or
fdivrs
in
adc
scas
fstps
sbb
rcrl
test
pop
arpl
incb
pop
sbb
push
dec
inc
test
in
jne
insb
jmp
jnp
data16
jg
scas
xor
push
sub
sbb
cmpl
xchg
push
push
dec
jnp
data16
and
test
test
inc
mov
pop
fcom
add
aad
mov
adc
into
inc
add
loop
sahf
mov
rclb
lods
js
sarl
cmpsl
or
cli
loope
insl
push
adc
loope
out
dec
sbb
jno
andb
lret
or
jne
jns
gs
dec
fwait
test
xchg
gs
leave
aad
jg
xlat
sahf
sahf
cli
dec
inc
lahf
bound
sub
adc
jno
cmc
sbb
popa
hlt
inc
fnstsw
mov
jle
jne
dec
mov
mov
inc
xorb
aad
andl
fbstp
pusha
pop
lock
mov
jae
imul
sbb
jns
jae
jmp
mov
inc
popf
subb
fidivl
inc
stc
ss
rorb
xchg
mov
stc
or
xchg
aam
add
insb
mov
stos
hlt
aad
jbe
addr16
mov
test
xor
mov
push
loopne
je
out
dec
add
cld
push
orb
push
add
and
call
and
or
mov
leave
dec
rorb
jb
mov
sbb
mov
shrl
mov
sub
negl
dec
cli
jge
cmp
loope
xor
mov
and
orl
shll
xchg
sti
inc
cmc
jno
lret
or
popa
xchg
mov
add
fdivrl
icebp
and
jo
dec
add
cwtl
stc
fisubs
adc
pop
xorl
adc
jecxz
mov
mov
jecxz
fs
into
push
xor
push
pop
decl
push
adc
test
push
jne
pop
and
cmp
repz
cmp
popf
cmpsl
jns
ljmp
cltd
icebp
dec
pop
jns
dec
lcall
or
movd
xchg
dec
hlt
jo
addr16
cmc
rolb
in
test
sub
dec
fsubl
push
cmc
jg
inc
in
bound
jl
test
scas
test
call
push
or
fcompp
or
fdivp
and
push
jae
mov
jg
cmp
cld
mov
dec
stos
ss
ret
cmp
lret
dec
push
jnp
pushf
movzbl
shll
mov
pop
or
mov
fdivr
pop
hlt
cmpsb
std
cmp
test
xor
repnz
loope
and
outsb
sbb
test
mov
lret
mov
cmp
pusha
pop
push
inc
mov
test
push
ljmp
cmpsb
rcrb
mov
inc
push
subl
mov
mov
fidivrs
nop
dec
sbb
inc
es
pushf
outsl
ret
push
xlat
mov
jp
and
and
imul
sbb
aas
ss
stos
push
idiv
and
lods
xchg
lods
xchg
and
aas
outsb
mov
mov
push
pop
mov
xor
mov
dec
std
cmp
ss
or
push
sahf
aaa
mov
aam
sub
sbb
dec
inc
mov
sbb
xor
jle
sahf
sarl
insl
pushf
cmp
jle
xchg
add
or
aad
lods
dec
aam
jp
xor
inc
fwait
cmc
das
cltd
xor
jne
addr16
icebp
cmc
and
sub
outsl
fninit
loope
je
dec
jl
shll
cmp
push
or
mov
mov
push
or
inc
push
shlb
lcall
pop
dec
movb
aam
imul
aas
loope
jne
cmpb
push
add
cmp
shll
test
jno
cmc
fisubs
xor
mov
loopne
dec
in
ret
popf
mov
filds
xor
in
jnp
inc
or
inc
push
roll
xchg
mov
dec
xor
push
sub
cmpl
mov
ret
vmwrite
jne
mov
mov
sarl
dec
div
outsl
xor
push
pop
fdivrs
and
or
aas
les
or
fstpt
cmpsb
sarb
cmp
roll
pop
es
orl
shlb
pop
mov
jge
or
aas
or
sbb
cmp
fildl
dec
loope
cld
cmp
adc
jbe
adc
dec
test
mov
fsts
cmp
and
or
pop
inc
gs
pop
adcl
sub
scas
xchg
sti
inc
js
xchg
jl
push
cmp
dec
popa
mov
cmp
dec
sub
addl
cmp
scas
dec
leave
inc
aam
add
ret
ja
icebp
movsl
mov
movb
add
dec
jne
iret
out
dec
imul
or
pop
jg
fcom
aas
xchg
lret
dec
add
jbe
add
mov
push
pop
sbb
addr16
das
fldenv
fsubrs
leave
test
pop
stos
xor
xchg
push
jbe
mov
jae
mov
fwait
sub
fs
dec
pop
sub
cmp
rcll
inc
inc
mov
rorl
rclb
cwtl
scas
jnp
leave
push
outsl
add
push
inc
mov
fdivrl
nop
mov
roll
lahf
sarl
leave
inc
popa
dec
out
ret
subl
lea
add
sbb
lret
mov
mov
popl
mov
adc
ret
stc
dec
cli
aad
pop
js
stos
stos
and
jle
and
mov
adc
and
or
mov
xor
mov
filds
lock
sub
in
and
mov
pop
jle
add
mov
push
dec
sub
jnp
jb
jae
fsubr
repnz
add
jns
mov
jne
shlb
mov
aad
or
cmpl
outsl
lods
in
loope
mov
or
sbb
dec
adcb
mov
push
cmpsl
cmpl
inc
mov
and
out
sub
dec
inc
pop
mov
pop
mov
clc
pop
jnp
xchg
pop
repz
dec
test
into
mov
xor
and
stc
or
dec
hlt
lahf
dec
andb
negl
stos
fs
dec
mov
adc
jb
stos
arpl
pop
dec
adc
arpl
xor
jae
or
les
fdivs
rolb
andb
inc
cmpsb
inc
jno
out
decl
cmc
bound
ret
pop
inc
inc
jg
subl
addb
sbb
rorb
sub
into
and
pop
incl
roll
shl
adc
pop
xchg
push
mov
mov
xor
adc
enter
cmpsb
icebp
pop
popa
inc
cmpsl
add
pop
sub
push
shlb
lret
sub
cmpsl
cwtl
ja
ja
push
push
add
xchg
das
mov
in
loopne
push
and
adc
and
cmp
movsb
dec
xchg
in
push
or
sbb
push
shrb
in
cmp
jae
pop
std
imul
fsubr
out
arpl
cmp
test
dec
fistps
inc
add
push
addb
into
dec
mov
js
lahf
and
adc
add
pop
mov
inc
pop
pop
jle
adc
mov
gs
xchg
cmp
into
std
js
push
dec
enter
sti
xor
dec
or
xor
jno
or
jecxz
jle
sahf
push
sti
ret
jne
xchg
sub
inc
sub
mov
pop
push
negl
loope,pn
inc
xchg
sbb
push
jo
mov
mov
sbbb
mov
out
xor
dec
enter
dec
adc
sbb
mov
aad
ret
addr16
inc
sbb
dec
pop
or
jae
fdivl
test
jo
pop
and
cwtl
push
fnstsw
std
dec
mov
insb
push
sarb
and
dec
test
mov
inc
xchg
pop
insl
mov
popf
push
sar
test
jbe
outsl
call
fisubl
cld
adc
pop
outsl
fistpll
sbb
jne
aad
cmp
hlt
out
push
mov
mov
add
jne
adc
and
rep
inc
fldl
dec
pop
popf
adc
push
dec
cmp
pop
push
arpl
cs
test
jb
or
leave
push
and
xchg
push
inc
add
xor
mov
call
add
sub
push
pop
sub
lret
push
test
sub
cmp
cmpsb
jns
imul
repz
cld
dec
sub
pop
popa
and
std
les
test
shll
dec
gs
dec
je
or
cmp
add
dec
mov
push
std
loope
cmp
inc
adc
inc
dec
adc
addl
stos
pop
into
leave
and
sbb
shl
movsb
jae
jnp
pop
test
nop
jg
jne
fdivrp
std
movl
ret
push
pop
mov
cmc
xor
sbb
pop
add
push
rcll
jle
pop
in
rorb
shl
and
aam
adc
arpl
rcll
mov
adc
push
fwait
adc
rol
sub
daa
pop
mov
xor
jno
pop
sub
sub
mov
mov
andl
popf
push
out
lods
adc
push
jae
fstpl
movsb
ret
cmc
aas
xchg
dec
xor
pop
mov
xchg
mov
sub
call
das
mull
jnp
add
addr16
and
int
lret
push
out
mov
imul
xchg
stc
in
test
inc
shrb
mov
cmpsl
dec
jns
lods
es
dec
pop
fnstsw
mov
mov
sub
mov
aaa
pop
xchg
icebp
inc
inc
or
jae
push
cltd
add
add
sarb
inc
lea
adc
cmpsb
pop
ja
js
or
xor
je
xor
enter
out
jecxz
fwait
or
inc
inc
js
adc
repnz
and
or
gs
jne
sbb
cmpsl
mov
push
scas
hlt
call
push
mov
mov
push
mov
jnp
sbb
adc
sbb
jge
jns
repz
gs
sub
insl
or
xor
sub
pop
outsl
ljmp
stc
fcmovne
enter
int3
xchg
dec
push
jle
xchg
add
inc
cmp
and
stos
shlb
cltd
fnstenv
cmpl
jns
sbb
aaa
roll
cmp
dec
jmp
inc
cmp
stos
push
adcb
mov
shrb
push
dec
lret
and
dec
xchg
daa
ss
jp
stc
dec
pop
jne
loope
cmc
adc
cmc
cmc
cmpsl
xor
push
movsb
jnp
mov
xor
jmp
orl
jecxz
sbb
mov
mov
dec
je
test
imul
push
repnz
loop
loop
mov
ljmp
lds
cmp
cmp
into
inc
test
mov
pusha
dec
mov
stc
inc
call
pop
and
das
lds
enter
add
movb
addl
mov
insb
inc
sahf
xlat
test
or
sbb
mov
icebp
pushf
sbbb
or
roll
adc
mov
arpl
into
shrb
outsb
cld
mov
cmp
inc
and
sub
jl
mov
and
aad
adc
dec
or
push
jno
ljmp
out
xor
sub
xchg
mov
scas
jno
daa
fxch
decb
les
sbb
cmp
out
mov
dec
scas
leave
ffreep
sub
pop
push
out
adc
mov
ret
dec
rcl
in
dec
leave
cld
lret
add
ja
stos
or
fs
adc
xchg
cmp
into
scas
dec
cmpsb
cli
push
fwait
inc
into
mov
mov
cli
dec
inc
gs
data16
sub
insl
pop
in
push
push
jae
adc
add
inc
test
mov
gs
stos
mov
cmp
and
cmc
repnz
enter
aas
std
mov
dec
cmp
jns
jb
das
sbb
cmc
xlat
and
insb
or
mov
std
mov
fimull
or
push
mov
outsl
pop
jge
push
imul
sbb
test
pop
in
jmp
aam
jle,pn
jmp
or
insl
jbe
movsb
jle
pusha
xchg
in
daa
mov
orb
pushf
outsl
incb
mov
leave
push
test
out
add
mov
ret
and
cmc
sbb
lds
jne
mov
enter
fcoml
pop
xor
push
je
push
movsl
mov
sbb
xor
aaa
aas
mov
inc
and
and
xchg
mov
cmp
les
in
and
in
pop
clc
in
jmp
xchg
movsb
pusha
jno
jne
aad
mov
mov
cli
cmpl
pop
int
mov
jg
aad
roll
cmp
push
jne
aaa
sub
add
inc
mov
fisubrs
sub
popf
xor
cmc
cmp
in
and
adcl
frstor
imul
aas
hlt
pop
lods
cmp
dec
push
sub
cltd
jns
pop
jbe
flds
bswap
clc
gs
mov
shl
in
dec
enter
cmc
xlat
push
pop
cli
inc
push
adc
movsb
inc
dec
or
addb
leave
rorl
pop
test
das
pop
pop
les
scas
sub
xor
clc
push
adc
push
in
inc
jne
push
lret
inc
and
mov
adc
cmp
and
inc
fmul
pop
jno
xor
test
mov
cmc
jae
aam
lcall
aad
rcrl
int3
push
pop
mov
push
jp
aad
pop
cmpb
rcl
in
loope
clc
out
sub
push
dec
shrl
repz
int3
push
daa
push
punpcklbw
lods
pop
dec
dec
xchg
pop
jle
and
jmp
cld
mov
sub
sub
push
test
mov
fildl
fcoms
popf
daa
stos
ds
xchg
int
pop
cmp
add
xor
or
pop
mov
inc
mov
sbb
mov
jns
cmp
sub
push
push
and
fwait
sub
inc
jl
cmc
movsl
push
mov
cmp
push
and
outsl
and
cmc
movlps
sub
dec
jg
cmc
cmp
inc
add
std
aas
dec
mov
std
in
xor
ds
add
rcrl
pop
and
stos
fstpt
repnz
inc
xor
fxch
xchg
int
mov
inc
mov
lea
and
xor
xor
dec
push
mov
cmpsl
jge
dec
hlt
push
imul
xchg
jnp
imul
std
fldcw
int3
hlt
insb
push
stos
pop
add
jecxz
add
or
jns
ljmp
mov
and
jg
pusha
out
xchg
je
xor
jle
cmp
cmp
dec
dec
add
add
mov
out
fcmovbe
scas
sub
add
inc
fdivrl
fstpt
xchg
inc
mov
int3
popa
dec
daa
xchg
insl
and
mov
iret
ret
imul
push
dec
int3
adc
fists
iret
in
xor
cmp
shl
mov
pusha
popa
dec
mov
loop
mov
les
sub
movsl
pop
lods
sub
fdivs
push
ror
jl
lgs
imul
mov
mov
dec
bound
add
lret
aam
sbb
and
rolb
gs
icebp
mov
hlt
jbe
insb
pushf
push
rcl
mov
les
add
jo
dec
mov
fadd
push
lods
cmp
fwait
iret
dec
push
cmpsl
cmp
shll
adc
mov
fisttpll
and
loop
inc
cmp
das
out
cmp
push
pop
lods
inc
xor
cmp
and
pop
sub
dec
cmp
add
dec
cwtl
inc
ffree
sub
adc
test
shrl
pop
arpl
jg
int3
fistpll
sub
xchg
dec
test
mov
push
and
shrl
mov
xlat
adc
leave
cmpsb
and
xor
sub
sub
ret
push
cmp
inc
mov
lret
or
mov
js
inc
icebp
dec
nop
insl
dec
cmp
xchg
pusha
sbb
lea
xchg
les
stos
imull
mov
gs
lods
popf
dec
add
mov
inc
mov
and
das
add
add
nop
dec
push
lret
into
jno
into
aaa
dec
roll
inc
insb
push
push
dec
push
fdiv
jmp
pushf
mov
mov
add
mov
jne
mov
cmc
in
rcrl
jp
xchg
jl
hlt
testl
jns
jp
mov
cmpsb
mov
inc
popf
mov
mov
and
les
hlt
pop
jp
jl
sbb
movsl
gs
fwait
add
xchg
add
aad
jge
xchg
addr16
mov
inc
inc
mov
shlb
rcr
dec
mov
push
movsb
and
dec
dec
xchg
sub
fistps
cmp
stos
jle
or
cmc
jg
jl
out
arpl
xchg
imul
jg
jl
call
lcall
inc
xchg
or
sub
loope
push
movsl
mov
and
xor
rorb
mov
add
dec
add
xchg
sti
mov
testl
jns
cmc
test
dec
push
repnz
aad
push
or
aad
dec
cmc
sub
dec
sarl
push
ret
xor
shl
popl
mov
sub
loop
push
je
movsb
stos
sub
shl
pop
pop
pop
mov
push
push
test
stos
mov
iret
xor
imul
push
fdivrl
addr16
inc
lods
sub
ret
mov
inc
and
hlt
testl
jnp
fdivs
scas
sub
test
push
rcll
loopne
pop
mov
push
and
xor
enter
push
add
dec
or
or
cmp
dec
mov
les
cmp
lret
inc
jg
jo
lea
cmp
cmc
loop
mov
cmc
scas
push
movsl
and
dec
rcr
and
pop
popf
dec
and
or
xor
add
add
mov
insb
arpl
lahf
jge
xchg
rclb
mov
push
push
popf
shl
dec
and
scas
orb
dec
push
dec
sbbl
pop
fdivr
jl
addb
nop
cmc
pop
inc
dec
outsl
cli
outsb
mov
jp
clc
pusha
nop
cmp
lret
das
stos
mov
push
lahf
insb
pop
stos
fcomp
xor
lods
sbb
or
testb
pop
push
sbb
movsb
and
push
xlat
sub
fsubr
push
stos
lea
sahf
aam
cmpsb
in
test
and
ds
or
daa
jge
sarb
add
addr16
dec
cmp
inc
mov
push
out
lcall
mov
movsl
mov
rcrl
nop
shl
jl
dec
jae
push
in
push
rolb
jmp
les
jo
addr16
stos
xchg
lock
lret
jge
mov
add
popf
or
lods
shrb
cmpsb
arpl
pop
pop
fldcw
xor
pop
add
dec
fnstcw
pushf
inc
lods
jmp
icebp
ret
vxorpd
das
inc
js
and
pop
aam
loop
sbb
add
and
movsl
sub
pushf
rol
shrb
clc
andl
sbb
std
clc
push
lds
dec
push
rorb
pop
adcl
sbb
data16
stos
mov
xchg
or
lcall
andl
sarl
outsl
mov
cmp
imul
fs
inc
and
pop
mov
aam
insl
jb,pt
mov
cmovns
add
xor
dec
cmc
push
mov
jb
ret
and
stos
add
cwtl
sub
inc
pop
lea
and
sub
test
jp
cmpsl
sub
sub
cmp
fildll
adc
cmp
ljmp
cmpsl
in
pop
lret
test
aad
test
jmp
and
cmp
nop
sbb
add
dec
cmp
shlb
xor
jae
ljmp
fwait
insl
inc
js
dec
add
aam
sub
jne
sub
inc
mov
dec
out
and
imul
mov
push
and
mov
in
xor
fldl
mov
jle
cmp
adcl
movsb
pop
pop
jnp
push
lea
and
jb
pushl
dec
mov
jmp
pushl
sub
es
or
and
stos
push
jae
and
test
mov
ss
call
add
iret
jp
ret
add
jle
in
enter
popf
sbb
inc
or
and
sub
inc
add
mov
xor
or
push
fadd
das
mov
and
jo
mov
filds
cmp
iret
xchg
stos
imul
sti
sub
jb
lods
pop
pop
pop
dec
fists
xchg
dec
adc
shll
ret
cmp
push
insb
pop
imul
push
imul
cli
xchg
lods
dec
daa
mov
mov
sbb
call
dec
sub
call
cmp
inc
sub
movsl
outsb
inc
cmpsl
jb
push
loopne
lods
inc
add
dec
pop
arpl
mov
das
shl
cmc
xchg
rcrb
xlat
add
aad
sub
jne
xchg
sub
pop
mov
push
lods
add
xor
adc
cmp
mov
test
les
roll
lods
cmp
jge
or
sub
mov
sbb
inc
fdivs
inc
pop
aaa
and
mov
sbb
lods
adc
shlb
lds
lcall
cwtl
push
stos
mov
ljmp
loop
aad
jle
or
cmpsb
adc
gs
and
push
xchg
imul
int
jbe
push
dec
mov
enter
jo
sbb
aam
mov
jne
fbld
dec
pop
sbb
dec
dec
jnp
mov
clc
roll
lret
inc
push
push
inc
andl
hlt
xor
mov
das
leave
stos
arpl
imul
cs
cmc
mov
and
and
dec
hlt
mov
dec
push
stos
js
sbb
pslld
leave
cld
fstl
mov
fcoml
mov
pop
cmp
notl
icebp
sub
jnp
rorb
sub
stos
inc
out
arpl
xor
add
jae
xor
cmp
xor
jl
and
dec
fdivr
push
mov
jg
xor
dec
clc
xchg
sub
mov
shll
jns
adc
xor
mov
cmp
add
pop
or
xchg
inc
in
imul
insl
mov
popf
rcll
in
pop
sbbb
mov
xchg
sbb
push
xchg
insl
lret
test
ljmp
std
in
test
leave
iret
in
gs
adcl
fwait
dec
jnp
dec
add
jmp
mov
xor
cld
or
sbb
jg
and
nop
pop
pop
lea
daa
and
push
enter
pop
imul
adc
jnp
movsl
add
push
mov
adc
inc
lea
daa
push
inc
movsb
or
mov
pop
inc
and
inc
jb
call
push
pop
sub
adc
out
stos
mov
and
xor
pop
hlt
jp
subw
mov
xor
jbe
push
and
add
add
repz
pop
in
and
adc
xor
jge
into
cmp
mov
movb
aam
lds
pop
test
into
dec
outsb
lds
dec
jns
mov
lds
sar
sti
in
push
mov
adc
xor
fsubrp
arpl
adc
rcrl
int
in
dec
add
loope
lock
call
repnz
test
popl
test
inc
xchg
dec
inc
push
idivl
in
and
xor
jb
add
stos
in
cs
out
scas
sub
mov
xchg
mov
push
xlat
daa
mov
xchg
into
cmc
stos
push
les
lret
out
fidivs
mov
dec
test
rcrb
enter
inc
adcl
addb
cmc
aas
and
fimull
inc
fdiv
test
add
xchg
inc
xchg
or
enter
and
push
or
pop
dec
hlt
jb
popf
or
movsl
jg
dec
mov
stos
nop
xchg
mov
enter
outsb
xor
sbb
fsubrs
test
xchg
cli
ficomps
popa
xchg
rolb
fprem1
dec
stos
push
ret
mov
sub
pushf
push
outsb
roll
stc
inc
push
dec
xchg
and
push
roll
icebp
aas
push
rcrl
pusha
dec
push
pop
push
ffreep
add
mov
ljmp
testb
in
jmp
mov
lea
jno,pt
xchg
xor
scas
insb
dec
adc
add
mov
lret
add
or
xlat
cmc
rolb
or
pushf
or
sbb
add
mov
fldenv
stos
mov
inc
repnz
cmp
mov
aas
mov
sbb
inc
push
fucomp
rep
mov
add
adc
add
leave
ljmp
int
outsl
movsb
mov
mov
repz
pop
sbb
loope
jp
sbb
leave
dec
sbb
add
stos
sub
test
push
inc
sar
dec
mov
inc
or
lds
mov
add
inc
int3
test
jne
inc
mov
daa
pop
stos
aad
jle
mov
and
mov
dec
or
insb
adc
inc
clc
aas
test
arpl
adcl
sub
mov
roll
add
or
xchg
cmp
cmpsl
sub
mov
push
aas
dec
push
fs
xchg
popf
sub
ret
jge
stos
movsl
and
imul
mov
or
xlat
add
mov
stos
dec
popf
cmp
cmp
jl
sub
int
sbb
shll
call
ljmp
push
sahf
test
mov
pop
adc
sbbb
sbb
test
xchg
xchg
dec
aaa
inc
rorl
orl
int
icebp
adc
cltd
or
scas
jge
in
cmc
cltd
push
push
fnstenv
jmp
push
push
popa
push
jg
fldt
add
icebp
std
pushf
mov
cmp
popl
ja
adc
mov
jp
mov
adc
aas
das
xchg
js
shl
push
fiaddl
dec
dec
cmc
lock
out
loope
inc
jmp
push
pop
mov
pop
and
jnp
add
loop
out
mov
inc
fidivl
sub
jae
ljmp
dec
cmp
xor
jns
ret
fiadds
mov
cmp
and
mov
jne
ret
in
test
inc
inc
cmc
jl
aad
mov
sar
mov
fcomps
aaa
push
pop
rolb
xor
push
push
fisttps
inc
leave
push
inc
fsub
jg
jae
in
aas
rcll
cmpsl
xchg
cmp
cwtl
sub
cmc
das
sbb
rolb
dec
xor
jmp
outsb
into
mov
xor
jle
aad
ja
je
fnstenv
xchg
push
call
mov
dec
stos
fistpll
mov
lret
add
inc
jno
jbe
inc
push
jg
inc
jne
cmp
les
xor
scas
cmc
je
inc
inc
hlt
jp
dec
dec
dec
enter
cmc
xor
jne
pop
adc
cmp
jnp
or
xor
push
and
stc
or
jl
pushf
push
mov
fst
dec
pop
and
add
jge
int
xlat
and
stos
jnp
push
gs
mov
xor
cmpsl
sub
sub
mov
jnp
movsl
xchg
mov
stc
jb
and
cwtl
ds
jb
iret
sarb
xchg
xchg
stc
lea
fstpl
or
xor
int
loopne
xor
popf
mov
lcall
cwtl
jecxz
push
push
and
push
mov
subl
test
fcomi
sub
into
daa
sbb
int
inc
jne
xchg
cmpb
jl
mov
fcomp
daa
jno
std
in
dec
call
dec
push
test
pop
xchg
rcll
push
mov
decl
out
enter
div
lods
jns,pn
push
xchg
and
adc
xchg
pusha
test
adc
cmp
daa
xchg
inc
jp
std
mov
dec
sahf
jb
mov
out
mov
adc
mov
loop
sbb
dec
fnstsw
test
xchg
adc
dec
andl
sar
shll
xor
sti
rclb
outsl
ljmp
jmp
and
in
mov
js
ds
mov
loopne
mov
je
dec
jg
xchg
fiadds
into
mov
movsb
cmc
aaa
jecxz
and
cs
adc
loopne
inc
push
xchg
lahf
and
loopne
mov
shlb
std
movsl
cmpsl
adc
xor
push
push
stos
imul
and
rcrl
mov
jne
xchg
les
xchg
xor
cmc
clc
push
xchg
xor
add
daa
push
daa
arpl
dec
adc
mov
test
xchg
insb
add
cld
cmp
pop
pusha
lahf
sbb
dec
push
dec
mov
loopne
cmpsl
subb
out
repnz
xlat
sub
cmpsl
mov
lret
sarb
mov
xor
shrb
mov
push
fnstcw
sub
dec
dec
or
mov
lods
inc
clc
ficoms
sbb
xchg
aad
mov
adc
sub
test
inc
iret
xor
cs
idivl
and
dec
fwait
xchg
cmp
jl
mov
inc
cmp
fsubrs
inc
sub
cmp
pop
cmp
and
stos
jg
js
outsb
dec
add
fbld
fs
jmp
add
xor
dec
jo
imul
call
adc
cli
or
dec
inc
cmp
inc
scas
inc
das
ret
shlb
dec
jg
cmpsl
ficomps
sub
jg
das
mov
popf
mov
sahf
iret
fimuls
das
pop
addb
dec
daa
dec
dec
cmc
xchg
enter
test
sti
adc
movl
ds
pop
cmp
xchg
inc
xor
add
cmp
out
lretw
push
jge
stos
arpl
les
dec
or
push
and
fiadds
and
test
cmc
mov
fdivrl
movsb
lret
cltd
and
dec
mov
or
xor
jo
shr
sbb
insl
out
jno
gs
pxor
outsl
and
sahf
cmp
jne
cmpsb
lock
shl
push
add
cmp
lea
sub
mov
movb
add
inc
dec
and
cltd
scas
cmpsb
loopne
loope
dec
frstor
sub
push
fidivrl
and
enter
popl
xor
movsl
inc
cmpsl
mov
sub
int
stos
shlb
mov
rcrl
dec
sbb
aad
xor
or
stc
add
mov
addr16
out
xor
xchg
ret
jl
sahf
jns
xchg
mov
cmc
push
xchg
mov
sub
lret
sbb
inc
dec
dec
scas
add
sub
push
les
outsl
enter
mov
call
cmpsl
jae
xchg
pop
mov
gs
jne
mov
cltd
pusha
outsl
jns
loope
stos
lock
sub
ss
loope
jno
shlb
mov
mov
push
scas
stc
xchg
and
int3
bound
mov
xchg
jo
cmp
inc
dec
cmp
mov
bound
ljmp
cmp
iret
cmpsl
jge
int3
adc
es
pushf
mov
ret
fwait
jne
jge
pop
lods
dec
dec
mov
sbb
es
jnp
int3
and
testl
pop
mov
fadd
enter
jae
jge
stos
dec
scas
out
daa
cmpsl
dec
push
test
mov
cmp
gs
push
popf
outsb
scas
dec
jmp
hlt
rdmsr
fstp
and
jge
jmp
test
jo
les
ds
int3
ja
jg
inc
dec
vpshufhw
outsl
push
jg
and
std
and
jp
mov
hlt
daa
push
cs
es
xchg
jle
inc
shll
testl
push
and
sub
mov
popa
xchg
push
dec
add
xor
or
mov
and
clc
out
decl
hlt
repz
pop
pop
and
aaa
xchg
pop
dec
and
adc
push
movsb
mov
cmp
and
ljmp
push
cmpsl
inc
inc
addb
lret
mov
dec
outsl
inc
dec
pop
leave
mov
and
aad
subl
js
dec
hlt
js
push
sub
xlat
ret
dec
in
das
adc
sub
cli
mov
cld
dec
xor
or
fwait
mov
mov
mov
and
orb
pop
jnp
jo
pop
dec
or
enter
idivb
dec
nop
jg
jno
sub
cmpsl
jge
jg
or
loop
lahf
add
aas
xor
pushf
mov
cmp
xchg
cmp
pop
dec
sub
mov
xchg
xchg
iret
pop
mov
je
jb
jb
xchg
mov
xor
push
lds
xchg
adc
popf
popf
int
adc
rcl
loope
ss
fimuls
adc
cmpsb
mov
mov
faddp
adc
or
enter
adc
inc
inc
mov
adc
sbb
nop
mov
xor
icebp
mov
add
je
js
dec
stos
jg
vpmaddwd
sub
shl
rorb
testl
jne
add
out
dec
addr16
add
dec
jge
xchg
into
testb
mov
inc
ret
fdivr
movb
in
dec
cmp
push
jp
int
push
push
sub
in
or
iret
sbbl
cltd
jo
xchg
xor
pop
js
incl
add
sahf
repz
aas
mov
and
mov
dec
data16
nop
sub
loopne
sahf
add
dec
xor
es
fs
sbb
adcb
jne
imul
sub
int
bound
dec
loop
push
jecxz
test
add
dec
add
cmpb
adc
push
add
rcll
aas
mov
jecxz
xchg
push
xchg
cmpsl
push
push
and
sbb
jmp
inc
dec
mov
mov
inc
shll
cltd
jo
inc
loope
ret
add
or
sti
inc
jmp
sub
push
ret
lret
test
shlb
add
and
sub
hlt
pop
xchg
push
out
icebp
dec
or
cmp
test
inc
and
mov
and
movb
aas
inc
lds
fimuls
or
xchg
mov
mov
pop
fcoms
jne
jb
into
inc
test
push
cmp
pop
and
pop
sbb
lret
inc
mov
and
aas
inc
test
inc
test
ret
cli
dec
cli
dec
jl
xor
bound
inc
les
sbbl
dec
xchg
pop
fadd
mov
push
push
sti
lock
cmpsl
push
xchg
add
push
pop
repz
into
push
push
les
mov
xlat
int
jg
nop
adc
outsb
psraw
test
dec
and
dec
pop
pop
lret
pop
xor
in
sub
lea
test
lds
xchg
ja
rorl
out
incl
sarl
stos
push
xlat
outsl
ret
jne
mov
jno
inc
orl
push
lret
xor
idiv
cld
rcl
in
shrb
and
sbb
or
into
clc
adc
lock
cmpl
test
gs
shll
shll
arpl
cltd
or
addl
test
loope
imul
inc
cmp
sub
sbb
adc
jg
ja
sbb
jns
pushf
test
add
push
or
jne
cmp
mov
ja
xchg
inc
adc
dec
push
jecxz
dec
jb
or
mov
inc
mov
push
add
enter
fwait
scas
cmp
popf
inc
iret
cmc
pop
scas
test
shr
outsl
xchg
mov
int
xchg
push
inc
loopne
pop
andb
in
and
mov
aas
adc
mov
loopne
inc
mov
inc
daa
mov
test
icebp
loopne
inc
dec
push
cmpsl
jge
jns
aam
hlt
lcall
popa
adc
mov
cmpl
loope
cmp
subl
popf
xchg
adc
lret
adc
xchg
pop
xchg
inc
leave
jne
pop
aaa
jge
inc
notb
sbb
sti
push
adc
rcll
popa
push
sub
addr16
scas
stos
loopne
roll
and
push
ret
aad
mov
xor
jbe
sub
in
test
inc
shll
xor
mov
sbb
jnp
xchg
inc
add
pop
and
lret
je
push
pop
inc
fsts
xor
arpl
pop
xor
jne
stc
and
mov
scas
and
inc
cmc
mov
inc
shll
cltd
incb
jp
xlat
inc
push
cmc
shlb
xor
sub
push
add
xlat
push
cmp
jp
inc
xor
jns
jns
push
adc
adc
add
imul
fcmovne
pushf
jnp
scas
pusha
dec
cmp
shlb
mov
mov
loopne
into
inc
cmp
lahf
jae
xor
mov
ficompl
loop
or
xor
xor
push
sahf
lds
sub
or
push
es
loope
xor
mov
lods
popl
cmp
cld
adc
add
cltd
cmc
jne
add
bound
and
popf
inc
cmp
sub
mov
jns
aam
push
add
movsb
movsl
jnp
inc
add
xchg
dec
scas
mov
pop
cmc
dec
pushf
fdivrl
aad
inc
int
insb
scas
jge
mov
inc
js
lock
rorb
inc
jmp
jmp
mov
frstor
and
jns
bound
inc
loope
inc
xor
mov
ret
sarl
sub
js
sub
push
pop
inc
fs
or
decl
inc
or
bound
push
rorl
pop
inc
stc
mov
daa
add
inc
es
mov
add
push
lods
xlat
daa
roll
inc
add
incb
cmp
sbb
pop
lcall
insb
cld
shl
aam
mulb
insb
bound
pop
or
mov
push
dec
std
repz
cli
cmpsl
or
scas
xchg
icebp
inc
lahf
mov
inc
dec
iret
pop
insl
das
fs
andl
xor
cmp
ss
mov
mov
push
std
jg
dec
add
aaa
push
dec
and
cmpsb
inc
jne,pt
or
dec
pusha
jge
fdivl
add
insb
add
dec
dec
gs
out
cmp
jno
cmp
cmp
dec
insb
movb
push
imul
jmp
rcll
pop
rorb
pop
xor
xor
fs
stos
ret
push
mov
andl
pusha
and
loop
ljmp
and
popl
sbb
jecxz
inc
and
sahf
mov
xchg
lret
div
js
mov
inc
enter
xor
mov
push
addl
inc
dec
jne
pop
loope
adc
dec
fsts
jne
pop
callw
push
mov
cmc
mov
rcrb
dec
sbb
fisubrs
push
ljmp
jne
ja
lods
lret
push
and
out
cwtl
and
dec
xor
fldenv
dec
xchg
pop
mov
dec
mov
imul
sub
ret
sub
sub
addb
xchg
pop
cmpsl
popf
fcoml
cwtl
xor
push
mov
inc
sbb
push
add
mov
shl
xchg
mov
jp
inc
xor
pop
sahf
add
loope
les
shll
mov
cmp
fists
incl
cmp
scas
mov
daa
pop
and
leave
lcall
int
inc
cmp
inc
xchg
imul
and
xor
xchg
lods
dec
inc
lods
shll
and
dec
sbb
jnp
and
push
xor
orl
push
cwtl
push
push
in
inc
or
and
inc
int
ret
jne
cltd
cld
adc
aam
fnsave
int3
xor
xor
mov
dec
aam
sub
push
aaa
dec
mov
sbbl
push
es
test
xor
pop
xor
dec
stos
sbb
call
sub
out
push
imul
bound
es
adc
lret
pop
lret
mov
xlat
mov
roll
jne
data16
cltd
jo
pop
cmp
pop
fcomp
sub
or
jge
imul
pop
inc
mov
out
cmp
xor
xor
imul
outsl
inc
loop
pop
rcll
lret
lret
xor
outsl
sbb
push
add
enter
inc
shll
jne
ja
es
dec
ret
pop
sbb
and
sub
mov
dec
mov
int3
outsl
and
mov
lds
dec
push
popa
inc
fs
dec
dec
push
and
push
ja
push
cmp
push
push
fidivl
push
aas
push
sub
inc
jne
pop
or
pop
inc
arpl
mov
scas
icebp
add
dec
dec
or
add
jno
lret
and
out
and
and
pop
adc
jns
fsubr
fstpl
inc
ds
and
rolb
je
lcall
mov
fsubrl
adc
mov
push
inc
popa
add
sub
mov
dec
xchg
test
jl
out
xor
es
or
pop
xor
popa
push
cmpsb
call
les
mov
dec
mov
into
stos
add
ret
cs
jl
into
fsubp
xchg
imul
jno
rcll
clc
adc
pop
inc
test
cmp
xorl
cmp
pop
imul
xor
sub
lret
popf
or
sub
add
arpl
int
inc
push
pop
stos
fidivl
add
rol
pop
jns
and
push
dec
pop
enter
addr16
sub
sub
xchg
inc
cld
inc
push
ret
arpl
insb
push
sbb
rolb
sarl
pop
out
shl
inc
fstpt
jne
xchg
push
rcrb
adc
and
les
push
bnd
gs
push
pop
mov
ret
pop
or
mov
inc
push
lret
jns
inc
cmc
sub
dec
cmp
push
rclb
jne
xor
loop
or
xor
mov
sub
insl
loop
push
lcall
stos
jne
mov
pop
mov
call
mov
cs
or
icebp
lret
loopne
mov
xchg
pop
mov
stc
in
or
and
ficoml
movsb
xor
fsubs
bound
into
test
mov
add
mov
push
add
adc
inc
sbb
les
push
fildl
pusha
cmc
push
movsb
outsb
arpl
js
movb
push
xchg
mov
mov
iret
mov
jle
mov
mov
sbb
jmp
xor
popa
jns
subl
inc
mov
cld
sbb
shll
jb
adcb
daa
cmp
inc
out
inc
push
fwait
push
test
insl
xor
pop
leave
inc
pop
adc
fiaddl
sub
push
call
stos
inc
shrb
sub
cwtl
xor
mov
loop
dec
pop
popf
pop
aad
push
daa
pop
test
cltd
mov
fsubrl
dec
arpl
pop
push
and
sbb
push
push
and
and
int3
inc
test
iret
mov
jp
push
add
imul
xchg
into
aam
or
xor
loop
and
scas
shll
popa
jle
es
mov
push
lds
pop
fs
inc
pop
push
rcr
mov
or
outsl
dec
inc
dec
andb
and
movsb
sarb
dec
mov
pop
mov
mov
subb
aas
frstor
jg
fldenv
add
or
inc
jle
cmpl
pop
xchg
and
sarl
mov
jno
push
dec
pop
inc
push
cmpsl
mov
jg
push
fsubr
mov
mov
shl
es
jnp
popa
sbb
nop
xor
sub
and
pmulhw
xchg
movsl
andb
fwait
xchg
xchg
repz
jae
mov
int
mov
popa
mov
xor
push
jo
add
sub
sub
or
divl
lret
sbb
cmc
sbb
adc
fistps
dec
pop
xchg
add
and
mov
pop
shrb
stos
sub
ljmp
lea
jmp
bound
xlat
stos
fnstcw
scas
dec
xor
fistpl
pop
unpckhps
and
inc
and
push
int3
jnp
push
mov
jns
mov
mov
cmc
insl
test
pushf
inc
jne
mov
mov
xor
mov
in
jb
out
inc
out
lods
lds
mov
insl
sbb
jg
inc
jle
pop
icebp
cmc
mov
popf
cmc
dec
jg
pusha
fdivl
cs
xor
sti
dec
xchg
xor
pop
or
icebp
movsb
repz
and
test
pop
inc
fcomps
stos
ljmp
sub
std
dec
jbe
repnz
lea
bound
push
ffreep
sub
cmpsb
imul
add
jne
aam
xchg
inc
inc
fistps
and
sub
adc
lods
js
stos
lea
push
test
imul
fcmovnbe
shr
sarl
dec
pop
cwtl
test
fsubr
jno
push
jnp
daa
xor
imul
ficompl
adc
test
mov
pop
ret
lods
lret
outsl
sub
sub
dec
and
insb
adc
cmp
inc
jge
fnstcw
hlt
imul
int
push
or
leave
pop
pop
or
push
mov
into
imul
adc
cmp
push
mov
mov
pop
faddl
sti
and
sbb
cmc
sbb
and
xchg
mov
push
pop
cmp
mov
or
jns
xlat
test
scas
lds
in
mov
push
or
rorl
data16
or
adc
push
sub
adcb
pop
cmp
ret
add
mov
ljmp
pop
cmc
add
cmp
jno
ret
mov
or
push
scas
pop
orb
mov
data16
cs
rcrb
int
ficompl
jne
push
bound
add
sub
cltd
dec
xchg
sub
add
inc
fwait
sbb
jne
lods
es
and
mov
scas
ret
sar
jl
sarl
out
sub
sahf
fldenv
xor
fdivp
fcmove
mov
inc
cmc
int
mov
jmp
daa
and
push
aaa
push
lret
mov
cmc
sbb
jp
movsl
leave
adc
mov
shrl
int3
push
jp
dec
push
loopne
jecxz
adc
int3
adc
cmp
push
dec
or
fisubl
and
xor
call
add
mov
enter
jno
jle
xchg
jge
adc
cwtl
fiadds
push
pop
push
add
jl
xchg
int
inc
js
sub
lds
xchg
fbld
xor
jne
inc
xor
add
outsl
aas
xchg
push
adc
sarl
lcall
jo
ja
jecxz
jae
arpl
pop
sbb
push
jno
push
adc
shl
jl
mov
dec
push
movsb
dec
adc
inc
inc
ja
dec
mov
jns
dec
mov
jnp
dec
xchg
inc
inc
jae
inc
out
and
aam
sub
dec
imul
jmp
push
sub
jp
ret
stos
or
sarb
stos
jle
dec
pop
jne
test
es
and
inc
neg
jecxz
dec
stos
mov
xchg
cmp
rcpps
jns
jp
sbb
shrb
dec
mov
cmp
lds
jl
cmp
gs
test
enter
sub
sbb
push
inc
in
test
dec
ret
mov
mov
inc
xchg
ret
jne
and
push
push
push
sbb
outsb
pusha
push
mov
inc
stos
dec
push
cmp
dec
xor
rorl
pop
add
and
sar
or
lret
iret
hlt
out
arpl
sub
xor
ret
cli
movb
dec
pop
rolb
xchg
cli
outsb
insb
lods
lret
sarb
jne
adc
pop
sahf
movsl
pop
jle
push
mov
or
cmc
xchg
or
mov
out
sub
xor
mov
inc
dec
xchg
pop
push
xlat
ds
iret
dec
cwtl
pop
test
fadds
lret
mov
xor
cmc
dec
sub
and
scas
cmp
lret
aad
mov
cmp
pop
add
fisttps
jb
mov
cmp
aam
push
xchg
dec
pop
sahf
mov
scas
mov
pop
inc
pop
sbb
sub
inc
push
jns
andb
add
loope
dec
push
jge
std
or
and
add
sbb
dec
cmpsl
dec
lret
gs
mov
push
stc
inc
pop
ret
scas
dec
mov
popf
jp
shrb
aam
in
jmp
xor
out
ret
aad
mov
jmp
aam
in
add
std
shr
out
push
adc
dec
pop
enter
jge
arpl
push
mov
sti
pop
cmc
cmpsb
shlb
mov
leave
mov
add
test
pusha
xor
ja
movb
xchg
leave
sub
add
and
push
call
mov
iret
dec
mov
andl
sti
dec
jne
inc
push
mov
adc
dec
popf
jnp
int
sub
inc
lret
sub
pushf
xchg
jne
lahf
dec
das
shlb
fsubl
xchg
iret
mov
or
icebp
shrl
inc
shrb
es
mov
fisubrl
ret
cmp
dec
jne
dec
jle
shrb
pop
cmpsl
dec
sub
sub
repz
scas
rcrl
push
mov
sub
stc
pop
jge
sub
cmp
mov
pop
pop
dec
inc
xor
jae
test
pop
inc
pop
xor
push
imul
fmull
mov
mov
xor
int3
xor
cmp
mov
adc
in
int
xchg
inc
es
dec
adc
vorps
ja
stos
mov
icebp
les
xorl
xchg
je
loopne
dec
cs
xor
rol
rcrb
pop
icebp
adc
mov
xchg
dec
lods
sbb
rcll
inc
pop
xchg
jne
inc
xorl
movsb
cmp
xor
ja
inc
jl
jns
sub
mov
mov
or
and
ret
xchg
shlb
jp
mov
fimuls
cmp
sub
jae
or
push
mov
push
call
subb
push
or
dec
andb
xchg
aam
or
push
insl
hlt
push
jmp
inc
cmp
cmc
outsl
fst
test
add
insb
dec
pushf
lcall
int
sbbb
pop
les
sahf
dec
inc
jmp
sub
imul
jge
pop
mov
push
es
shrl
xchg
leave
push
inc
ds
cmc
pusha
and
inc
pushf
sbb
jl
jg
pusha
lret
pop
aas
in
inc
xor
adcb
or
ret
add
add
and
mov
xor
dec
mov
shll
add
jb
leave
fists
mov
and
push
fwait
test
roll
cli
cli
out
cmp
aas
sub
lods
adc
xchg
out
fyl2x
pop
cwtl
cld
je
sub
fidivl
dec
fcoml
test
ds
into
inc
test
mov
xor
fdivs
and
int
cmp
insl
leave
shl
aam
push
xor
xchg
sub
insb
mov
movsl
xor
shlb
lods
movsb
inc
cmpsl
jle
mov
cmp
int3
ljmp
sub
stos
jne
inc
aaa
adc
adc
xchg
jl
int3
push
add
shlb
mov
loop
push
loope
push
push
xorb
out
cwtl
rcr
inc
leave
fs
je
rorl
dec
repz
iret
xchg
and
and
sarb
jmp
jle
adc
sub
jne
inc
out
inc
sbb
xlat
jae
dec
insl
sub
fs
dec
jecxz
leave
jmp
enter
leave
in
lods
push
dec
stc
out
inc
add
pop
jg
push
outsl
jnp
aaa
mov
das
rclb
or
xchg
sahf
shll
inc
push
addr16
lcall
je
ret
test
test
adc
or
lds
cmp
lock
and
cs
cmp
loope
adc
adc
sub
inc
xchg
add
out
dec
pop
lcall
adc
sbb
out
in
movntps
cltd
in
sti
add
cmc
xlat
fs
int
shl
mov
adc
ja
mov
mov
inc
ja
subb
cmc
in
push
fst
xlat
das
mov
and
addb
jmp
test
arpl
pop
gs
bound
into
add
xchg
and
push
stos
fadd
push
mov
pop
push
fabs
mov
xor
ror
or
add
cmp
lret
loope
jno
mov
mov
dec
mov
int
lret
leave
hlt
cmc
sub
mov
pop
and
or
xor
pop
sub
mov
sti
popf
xchg
adc
and
inc
out
dec
mov
aam
insl
mov
mov
es
loope
test
adc
or
repz
and
and
les
stos
add
std
jmp
pop
test
cmp
aaa
test
ficoml
cmc
xor
add
dec
pop
pushf
and
pusha
jae
pop
data16
add
sub
mov
pusha
push
sti
pop
fcmovnbe
adc
repnz
leave
and
adc
arpl
push
push
jbe
mov
lret
push
push
cmc
mov
dec
mov
pushf
lret
cmc
dec
sub
call
inc
ds
jns
pusha
mov
ljmp
rcrb
xchg
adc
add
xchg
lods
add
add
leave
dec
icebp
popa
mov
cld
mov
or
cli
inc
cmpsb
jmp
and
pop
into
lret
sar
es
mov
mov
int
dec
pop
mov
fidivl
cmpsb
mov
out
mov
test
mov
cmp
int
or
and
push
mov
xchg
cmpl
adc
call
add
fnstsw
mov
test
lret
pop
mov
iret
xorb
adc
and
bound
or
jle
fwait
pop
repnz
lret
mov
gs
fsubs
push
dec
ret
loopne
and
jno
stc
in
sbb
adc
sbb
arpl
mov
frstor
movb
mov
shll
enter
inc
or
fcompl
mov
loop
or
aad
pop
add
mov
cmp
push
loopne
push
adc
add
or
sarb
out
pop
andb
fmuls
fists
push
mov
loopne
mov
insb
sbbl
mov
incl
jnp
dec
hlt
inc
jmp
ret
enter
push
leave
shlb
sbb
jo
aam
movsl
out
aaa
imull
inc
gs
loope
cli
xchg
loopne
enter
mov
insl
arpl
fists
jl
aas
gs
sub
cmc
inc
daa
rorb
pop
add
movsb
mov
add
lret
div
mov
leave
pop
outsb
in
out
std
push
and
or
push
xor
inc
push
dec
and
fisubl
scas
add
jae
loop
outsl
jne
loope
xor
int
outsl
jne
fdivs
imul
pop
jp
pop
lods
jge
test
ficoms
sarl
adc
aam
jmp
mov
cwtl
push
and
add
mov
inc
push
out
fistpl
cmovne
jecxz
mov
or
std
jp
dec
lds
cs
jle
mov
insl
sarb
shrb
in
movsb
cmp
cmp
aas
push
mov
push
jnp
out
in
lcall
stc
insl
xor
push
and
inc
popf
in
test
mov
lret
adc
daa
pop
stos
lods
inc
push
mov
lret
xchg
mov
subl
sti
dec
mov
test
lea
sub
jno
mov
jle
mov
mov
and
adc
or
or
out
lods
sti
ret
dec
pop
cmp
cmp
push
lods
cli
std
sbb
xchg
add
cmp
jae
mov
push
xchg
jne
jne
mov
jp
orb
loop
fimull
mov
lret
lds
sbb
jbe
mov
mov
mov
push
dec
mov
ljmp
int3
add
js
sub
sub
test
js
leave
sar
dec
inc
add
inc
icebp
cmp
dec
add
lds
les
lock
lret
lret
cmp
inc
or
iret
or
pop
sbb
ds
add
mov
movsb
rcll
pop
cmc
xlat
mov
mov
inc
adc
dec
xor
jmp
push
inc
xor
int3
lret
rcr
movsb
xor
lret
test
xchg
pop
fs
lret
pop
test
pop
push
xor
stos
mov
ja
mov
cmp
int
aaa
xor
push
cmc
scas
filds
jge
shll
fdivrl
test
or
fldcw
cmp
ljmp
insl
jl
pop
sub
daa
xor
cmpsl
jb
dec
and
in
insl
hlt
fwait
aam
scas
outsl
mov
sbb
stos
les
add
pushf
xorl
rorb
test
add
and
pop
gs
mov
sbb
fcompl
pop
loop
push
fstpl
or
and
mov
insb
jb
sub
inc
jnp
test
fwait
xchg
dec
mov
cmpsb
mov
jno
pop
cmp
outsb
jge
loopne
push
mov
xchg
subb
mov
xchg
and
xchg
and
out
xor
loope
xor
aam
mov
rorb
leave
mov
or
add
push
xor
xor
pop
js
inc
scas
sbb
ss
pop
fadds
fsubl
and
je
les
cmc
in
aam
shlb
popa
push
lods
xchg
mov
addr16
push
fistpll
lds
gs
sbb
add
aad
imul
add
add
cmp
push
cmp
test
lret
nop
adc
xor
decl
rcr
subl
dec
dec
push
jno
adcl
movb
inc
sub
inc
int3
xchg
lahf
shl
popf
loop
aas
inc
add
out
sbb
sbb
cmpsl
and
imul
push
mov
mov
ja
lods
subb
pushf
outsb
lock
dec
dec
std
or
ss
scas
out
or
dec
inc
cmp
lcall
push
and
in
pop
jo
hlt
sti
iret
adc
lods
inc
es
fdivs
cmpsb
leave
pop
test
lret
mov
ljmp
pop
adc
fs
in
vpsubusb
leave
stos
in
jecxz
mov
and
in
add
gs
es
mov
pusha
mov
mov
push
sub
sub
test
leave
push
insl
push
fldt
ja
test
test
pop
add
hlt
sahf
adc
dec
arpl
push
insb
xor
adc
mov
cmp
xor
rorb
lcall
imul
fdivrl
xor
enter
inc
jne
push
xchg
push
js
pop
popa
mov
or
mov
jo
mov
add
jmp
out
rolb
jne
add
jb
iret
lret
rol
aam
loopne
movsb
cld
cmpsb
faddl
dec
mov
xor
lds
fs
jle
and
lret
cmp
ja
dec
sbb
sbb
ljmp
cmp
insl
stc
cwtl
orb
test
mulb
pop
add
and
jnp
leave
push
nop
ds
xor
dec
mov
pop
je
fwait
pop
and
daa
leave
or
mov
pop
dec
movsb
pop
mov
mov
jns
and
fldcw
inc
fs
hlt
lock
aad
jb
sub
cmpsl
enter
loopne
and
pop
push
leave
add
add
shl
adc
scas
jo
push
mov
inc
inc
cwtl
test
lahf
mov
sub
mov
mov
rorl
xchg
inc
and
sub
jl
pop
pushf
dec
jbe
xor
loope
ret
cmp
je
shll
dec
inc
out
jns
ret
add
fistps
insl
lds
add
or
push
imul
or
cltd
sbb
mov
jbe
mov
add
dec
push
cmc
jne
ffree
fadd
cmpsl
in
jns
pop
jp
push
pop
inc
xor
xor
in
push
shl
push
mov
or
lahf
xor
fimull
testl
cmp
push
fbld
je
ret
mov
or
test
jg
push
cmp
jne
or
enter
insl
scas
add
cmc
and
stc
fs
sub
push
loopne
andl
enter
stc
cmpsl
adc
int
inc
inc
sub
enter
mov
rclb
testb
push
leave
xchg
daa
sbb
dec
inc
sub
fnstcw
mov
lds
icebp
rcr
sbb
cmc
loope
push
test
popa
jno
leave
rorl
pop
aad
icebp
lds
adc
lds
leave
fsts
pop
es
jno
inc
or
movl
push
add
cmp
ds
pop
imul
nop
lahf
hlt
jns
mov
and
xchg
push
inc
hlt
negl
lock
add
xor
and
jo
or
add
fidivs
mov
cmp
insb
push
stos
mov
fwait
jl
cmp
pop
clc
pusha
nop
mov
mov
bound
add
and
pop
xor
xor
in
sub
popa
mov
cmc
punpckldq
mov
dec
test
push
cmc
xor
ja
bound
rorl
rorb
lret
sub
jp
push
xor
fisubrs
inc
cmp
sub
and
iret
mov
add
add
mov
cmpsl
nop
pop
into
pop
int
scas
and
cli
ret
jg
mov
cmp
icebp
adc
dec
mov
sbb
inc
leave
les
imul
or
push
rorb
call
lea
mov
and
sbb
pop
dec
loop
nop
lahf
aad
xchg
mov
jne
neg
and
mov
int3
and
push
nop
mov
cmpsb
and
pop
mov
inc
cmc
mov
xor
xchg
pop
inc
adc
addr16
xorb
and
dec
xor
jge,pt
sub
cmp
lds
jae
pop
and
push
jnp
pop
cmp
pop
mov
and
jg
inc
lds
sbb
fsubrl
loope
dec
stos
leave
cmpsb
dec
dec
dec
pop
leave
xor
popf
cld
mov
leave
ljmp
lock
mov
lret
std
jo
xorb
or
andl
sti
in
ds
lods
push
inc
popf
cmp
or
aaa
mov
inc
xor
adc
int
nop
shrb
mov
js
ret
and
clc
and
inc
dec
movsl
test
test
cmp
or
lret
sbb
les
pop
cmpsl
fs
lret
pusha
add
sbb
fsubs
ret
fwait
and
imul
inc
and
fs
xor
dec
cmc
jmp
into
addr16
aam
test
fdivl
fisubrl
sahf
sub
pop
jp
aad
enter
in
sbb
test
mov
and
pop
inc
negl
aad
cmpsb
imul
inc
jns
imul
dec
enter
jno
aam
pop
in
mov
add
cmpsb
sar
mov
fidivrs
dec
test
sub
incl
je
test
sub
sbb
inc
adc
movsl
imul
aam
loopne
mov
mov
enter
push
and
push
mov
xchg
imul
pop
mov
inc
mov
dec
cli
rolb
daa
loop
fdivrl
push
add
iret
fadds
ffree
inc
mov
dec
pop
add
loopne
sub
inc
addl
xor
cmpsb
inc
and
int
push
faddl
inc
inc
test
push
test
mov
jo
adc
push
pop
fdiv
fsub
jl
push
mov
inc
xor
test
dec
inc
push
xor
ja
outsb
cmp
orb
sub
sub
mov
mov
hlt
ljmp
pop
jle
mov
pop
push
adc
jns
push
inc
jne
pop
pushl
jge
pop
cmpsl
jg
rclb
out
push
and
fisubl
dec
cmpsl
shlb
cmc
fs
cmpl
std
sbbb
push
sbb
je
in
sbb
push
call
mov
pop
enter
inc
push
dec
mov
mov
xor
and
mov
ret
and
fsubrl
pushf
bound
mov
aas
add
dec
stos
jne
pushf
repz
jnp
pop
pop
mov
xor
dec
or
jmp
fiadds
jne
gs
adc
and
mov
lods
test
pop
adc
fbstp
enter
pop
jno
sbb
xchg
fisubrs
neg
adc
cli
sarl
aad
mov
push
mov
xor
inc
sti
nop
xchg
outsb
mov
inc
lds
iret
mov
movsb
enter
iret
inc
inc
push
ds
dec
pusha
sub
mov
jb
cmp
mov
je
jns
faddl
dec
inc
roll
mov
or
push
sarl
add
dec
pop
xchg
loop
dec
lds
cmp
test
sub
cmp
arpl
mov
and
aad
call
xor
bnd
and
cmc
dec
call
out
xchg
sarl
xlat
adc
mov
or
fadds
cld
inc
cli
cmc
in
mov
js
call
outsl
addr16
orl
dec
adc
into
fadds
movsw
xlat
pop
sub
mov
cmc
mov
or
xchg
lahf
lret
test
mov
adc
add
pop
stos
cmp
xchg
sbb
cmp
les
xlat
mov
dec
add
xchg
or
lods
mov
dec
or
int
cltd
sbb
and
and
test
adc
fwait
cmpb
and
pop
and
aad
lgs
jne
mov
inc
sub
in
cld
jae
pextrw
mov
adc
push
ljmp
inc
daa
imul
lahf
enter
daa
leave
push
mov
fldcw
xor
ljmp
cmp
dec
loop
fstpt
call
cmc
dec
daa
push
add
mov
std
stos
sub
pop
sub
lods
push
cmpsl
ljmp
je
out
movsb
ja
aam
or
jne
sbbb
orb
sbb
test
adc
jae
flds
dec
and
jge
icebp
lds
add
and
popa
pop
addb
movsl
out
leave
imul
adc
arpl
aaa
mov
ljmp
popa
add
push
pop
cli
aam
pop
sbb
sbbb
bound
stos
adc
lds
push
jo
mov
jmp
dec
call
sbb
adc
fildl
je
or
xlat
enter
pop
and
inc
movsl
cwtl
xlat
mov
inc
inc
push
cltd
lret
jecxz
lret
dec
fimull
pop
imul
xchg
push
and
mov
dec
nop
cli
stos
lea
lock
fsubr
pop
pop
fdivrs
jbe
loopne
jb
mov
jnp
and
mov
add
movsl
mov
gs
gs
test
mov
mov
xchg
repnz
dec
cmp
sahf
xor
cmc
mov
xlat
lea
pusha
sub
insl
xchg
hlt
and
adc
movsl
push
lret
pop
and
and
xchg
add
hlt
inc
adc
mov
dec
adc
sti
xchg
fidivl
push
xor
fbstp
repz
cmovo
xorl
push
add
fcoms
jne
nop
inc
push
int
add
or
cltd
movsb
push
insl
xchg
sti
fcmovbe
int
loope
sbb
and
xchg
lock
dec
leave
sub
dec
or
cmp
dec
sbb
add
sub
aas
dec
leave
sbb
xlat
and
fldcw
mov
push
outsl
in
dec
jg
daa
push
sahf
orl
cmp
iret
xorl
sub
xor
rcrl
fildll
cmc
lcall
scas
xchg
adc
mov
cmp
jge
add
xchg
mov
mov
mov
sbb
icebp
arpl
inc
in
dec
adcb
jb
adc
mov
bound
inc
stos
dec
pop
pop
pusha
pop
test
dec
pusha
ret
mov
pop
mov
cmp
xor
pop
outsb
xor
jge
jle
or
hlt
nop
xchg
addb
dec
sti
js
or
lock
xor
jmp
mov
stos
lock
addb
mov
mov
and
jo
int
cmc
shll
jae
xlat
lret
push
xor
inc
and
mov
nop
and
add
push
arpl
pop
std
jmp
jge
push
sub
push
mov
sbb
sbb
stos
mov
sub
jl
sbb
dec
push
inc
nop
pop
lds
lock
insb
mov
cwtl
xchg
mov
cld
insl
ret
lret
inc
adc
mov
xchg
les
or
shl
cmp
pop
add
push
xchg
in
mov
push
hlt
push
jge
std
sbb
cli
push
test
and
or
repnz
jp
sub
outsb
mov
mov
mov
inc
inc
rcll
jg
sub
adc
jle
inc
inc
test
scas
idivl
les
dec
xchg
leave
lods
xor
mov
push
movsb
cmp
pusha
sahf
dec
stc
jle
dec
dec
inc
aam
add
cltd
nop
in
jae
shll
sbb
test
ljmp
dec
jne
cltd
sbb
fwait
mov
dec
mov
fwait
and
pop
push
sub
and
jns
shrl
cmp
pusha
mov
push
pop
inc
jno
out
add
test
jmp
popa
push
xor
push
aad
xor
and
je
xchg
fldl
loopne
or
addr16
inc
xchg
divl
cmp
xchg
pop
push
je
test
inc
in
cmpsb
xor
push
jg
mov
add
cmp
cs
jne
push
cmp
cmpsb
mov
cmp
in
idivb
aas
movsb
adc
ss
inc
test
mov
gs
and
out
pop
xchg
fmull
cmp
fnsave
insl
outsb
lahf
popf
push
pop
add
or
filds
leave
adc
rdpmc
pusha
dec
mov
or
jne
adc
or
cmp
mov
imul
mov
mov
sar
pop
rcll
push
pop
mov
mov
ret
rorb
test
in
adc
fsubrl
inc
test
jmp
stos
fs
mov
push
test
cmpsl
and
jne
js
dec
jae
and
int
aaa
inc
test
xchg
mov
inc
cmp
cmp
jl
dec
cli
inc
inc
inc
inc
inc
repnz
out
out
ficoml
push
jge
inc
inc
btrl
je
shll
insb
pusha
pop
cmc
shll
and
mov
and
cmp
cmp
ret
xchg
jp
cltd
outsl
fsubrl
add
pop
pop
ljmp
dec
xchg
sub
cmc
sub
push
and
and
addr16
add
and
mov
std
ret
jp
clc
mov
add
mov
aad
xchg
and
push
mov
ljmp
loope
push
lahf
pop
mov
xorl
add
push
push
rorl
stos
mov
shll
adc
xchg
add
sub
addl
rol
add
cs
inc
cmp
stos
or
pop
ljmp
cmp
dec
imul
cmc
int
add
aas
pop
mov
call
jge
daa
mov
cmc
inc
shrl
cwtl
push
mov
repz
cmp
push
leave
and
iret
xchg
push
cmp
pushf
pusha
sub
push
lcall
cmp
inc
cmp
jle
dec
or
rsm
dec
out
cmc
xor
inc
gs
mov
pop
mov
shlb
cli
call
js
xchg
inc
pop
fsubrl
sub
cltd
inc
cmp
inc
inc
pop
jge
mov
inc
and
push
scas
sbb
frstor
movsb
adc
mov
int3
nopl
adc
or
jne
or
xor
fcompl
cs
sub
adc
sbb
pop
mov
xchg
shl
outsl
popa
mov
cld
mov
dec
inc
aad
inc
sub
mov
icebp
repnz
jl
push
addr16
ds
jns,pt
test
jne
dec
mov
push
ds
mov
test
push
test
repnz
addb
sbb
xchg
cmp
daa
mov
fists
add
cld
lods
popf
inc
sbb
pusha
cld
mov
hlt
out
add
lret
push
ljmp
and
push
inc
jae
xchg
sub
jno
popl
mov
mov
fdivr
ds
icebp
stos
dec
shr
js
sub
fs
fwait
cmp
add
inc
jg
inc
hlt
roll
jb
cmpsb
inc
stc
aad
add
mov
imul
jns
and
or
hlt
sub
insl
testl
push
and
and
mov
arpl
les
jae,pn
aas
pop
jg
call
lods
stc
popa
sub
movb
fsubl
lds
cmc
mov
inc
sbb
add
mov
insl
and
jno
cmp
fidivrs
fchs
jae
fcom
mov
or
imul
mov
mov
dec
push
dec
sti
lds
mov
mov
adc
inc
cs
push
lea
or
in
add
stc
sbb
mov
cwtl
pop
mov
xchg
add
iret
stos
or
stos
hlt
mov
xchg
call
jo
dec
mov
sti
mov
push
mov
mov
or
and
enter
dec
movsl
fsubr
sbb
scas
inc
or
lds
mov
jge
add
cmp
out
mov
xlat
mov
mov
pop
pusha
mov
pop
push
or
sbb
ret
loop
cmc
fimuls
test
aaa
push
mov
dec
sub
ret
loopne
inc
hlt
jbe
lret
jne
dec
mov
imul
stc
dec
cmp
add
movsl
or
scas
lahf
test
pop
leave
cld
dec
mov
dec
adc
insb
push
adc
xor
movsb
iret
pop
cmp
xor
mov
and
push
inc
cmc
rcl
mov
jp
mov
xchg
xchg
mov
dec
das
out
mov
inc
and
mov
xchg
insl
push
xor
push
mov
pop
push
test
ja
xor
xor
outsb
mov
aam
adcl
arpl
jo
rcr
pop
cwtl
addl
or
mov
arpl
enter
xor
aam
add
pop
cmpsl
mov
fsubr
mov
popf
pushf
popa
das
sub
dec
test
pop
add
fst
mov
push
bound
sub
insl
xor
into
ret
fisubrl
add
push
inc
jbe
dec
aam
push
insl
cmc
ret
xchg
add
inc
and
xor
out
test
xchg
push
mov
add
outsb
incl
mov
pop
cmp
orl
sbb
jne
ja
lds
cmc
shl
or
jae
push
jnp
inc
jae
push
add
jl
ja
mov
push
outsb
mov
test
add
push
faddp
dec
sub
push
pusha
mov
ret
and
out
push
sbb
add
pop
cmpsb
jmp
adc
sub
pop
inc
outsl
lea
or
jge
fdivrs
gs
push
jp
pop
mov
lahf
jns
out
test
ljmp
aaa
rolb
push
cwtl
fadds
cmc
mov
add
mov
ror
adc
jl
xchg
das
or
add
mov
rclb
push
lock
lret
mov
jnp
or
arpl
inc
clc
or
ja
xchg
dec
js
hlt
fstpl
pop
push
xchg
js
add
xor
in
outsl
mov
iret
push
cs
add
inc
repz
jno
add
jle
nop
outsl
dec
ljmp
ds
sbb
push
pusha
and
cmpsl
jl
sti
push
int
ja
sbb
mov
mov
mov
addb
cmpsl
mov
jle
pop
jmp
xor
and
adc
mov
outsb
sarb
stos
pushl
sub
sbb
or
lea
loope
and
lahf
cmp
cmpsb
aad
jl
ret
lret
jne
inc
mov
ds
test
fidivl
repz
scas
fwait
mov
dec
mov
dec
shll
push
xlat
jg
sar
in
inc
xorb
mov
jg
std
xchg
in
outsl
sbb
inc
add
mov
arpl
sbb
dec
lds
jmp
hlt
icebp
sahf
adc
dec
cmc
mov
dec
jp
out
and
ds
dec
push
decl
push
daa
in
lret
test
lds
jg
xlat
mov
push
in
xor
push
push
repnz
ret
dec
cmc
lahf
push
incl
imul
inc
ljmp
mov
mov
sti
mov
mov
ja
inc
jno
aam
test
push
dec
add
outsb
pop
popf
loopne
icebp
pop
dec
inc
fdivl
jg
push
cmpl
push
pop
icebp
fisttpl
and
ret
fisttpl
inc
cmpl
jge
cmovs
cmp
pop
movsb
dec
arpl
and
add
inc
sti
push
loop
jle
cmpsl
add
jne
jno
in
mov
es
or
or
xor
andl
inc
cmp
inc
lods
cwtl
out
and
in
dec
faddl
inc
icebp
dec
xor
lods
cmc
xlat
sub
dec
stos
popf
leave
sbb
sbb
mov
xor
jbe
cmp
xor
orb
cmpl
cld
push
out
inc
jb
ror
test
mov
dec
out
daa
ljmp
xor
mov
fidivrs
mov
adc
add
xor
sub
sahf
dec
mov
cld
dec
push
shlb
movsb
movsb
lret
jae
and
fcoml
movb
add
loope
cmc
xlat
push
dec
test
sub
add
push
xchg
push
imul
xchg
inc
scas
sub
stc
sub
ja
jne
push
je
mov
or
cmp
mov
mov
movsl
mov
pop
mov
jge
mov
dec
pop
out
stos
add
mov
cltd
and
test
pop
cmp
cwtl
stc
xor
fsubl
push
loop
sub
xor
into
pop
mov
lret
jg
outsl
dec
jecxz
dec
pop
xor
rolb
lods
xor
adc
stos
dec
dec
int
or
mov
mov
arpl
out
das
movsl
js
out
and
push
outsl
nop
dec
outsb
sbb
or
inc
vpunpckhwd
and
dec
mov
lods
cmc
shlb
rolb
in
push
jge
bound
std
and
cmpl
aad
outsl
sbb
aam
push
adcl
lea
addr16
jae
cwtl
sub
mov
sub
inc
shlb
es
xchg
jp
les
repz
and
xor
movsl
cli
insl
aaa
mov
dec
mov
in
popf
outsl
out
add
push
and
xlat
or
mov
imulb
sarl
iret
movsl
mov
adc
xchg
into
dec
mov
scas
cmc
faddl
push
hlt
jp
roll
js
push
inc
jbe
roll
xor
pop
lods
rol
and
fs
push
jae
sbb
push
enter
shlb
sbb
hlt
cmp
stos
dec
roll
pop
nop
in
cmp
jno
jge
nop
outsb
add
and
mov
dec
fdiv
psrad
mov
pop
inc
or
push
stc
inc
jns
inc
popf
push
roll
sub
dec
add
push
pop
dec
sub
leave
xor
fsts
cmp
fsubs
imul
dec
dec
movsb
pop
ret
and
stos
pop
cmp
test
dec
jle
mov
cmc
jge
pop
xor
cwtl
push
mov
scas
inc
mov
stos
sbb
lahf
test
hlt
into
shr
leave
inc
or
push
aam
imul
inc
pusha
push
stos
jnp
sarl
sub
and
loope
mov
dec
ds
xor
into
sbb
repnz
movsb
xlat
push
mov
test
das
sarl
cwtl
mov
int3
push
pop
dec
fldcw
adc
mov
xchg
out
bnd
dec
lds
pusha
je
pop
das
nop
stos
daa
cld
scas
adc
push
cmp
adc
popa
imul
jno
lret
hlt
out
push
cmc
mov
adc
fs
and
inc
mov
dec
pop
inc
add
stc
rorl
dec
pop
sbbl
xchg
daa
or
add
sbb
sub
jns
shlb
xlat
pop
out
fsubrp
stos
xor
cld
cmp
dec
jne
jns
cld
out
test
cmc
sub
std
insl
jbe
test
xlat
fwait
inc
loopne
or
lock
outsb
dec
out
pop
ljmp
jle
daa
xchg
and
jae
pop
aad
mov
inc
push
dec
cmp
mov
jp
xor
add
sahf
mov
mov
in
xchg
dec
lcall
repz
cmp
aam
xchg
push
int3
scas
xlat
pop
gs
and
icebp
dec
push
cltd
inc
lock
push
sbb
shrl
aam
and
imul
ficoml
mov
sahf
jg
adc
sub
sub
call
loopne
cmc
pop
mov
cmp
pop
scas
cmp
push
xchg
lret
aam
inc
or
push
lahf
pop
push
mov
shlb
jo
adc
and
or
jmp
pop
fsubr
pop
aad
add
int
in
push
sub
jmp
inc
push
pop
push
xor
push
repz
mov
in
cmp
push
test
fisttpl
jo
fs
adc
test
pusha
sub
inc
mov
jl
adc
daa
and
leave
add
push
decb
cltd
fisubs
xorl
icebp
sub
test
push
xor
inc
cld
inc
pop
inc
dec
pop
lret
inc
jae
sub
jge
lods
test
js
xchg
daa
and
imul
jnp
push
and
out
dec
sbb
xor
cld
push
mov
rcll
cli
cmp
in
xchg
shll
cmpsl
aaa
aam
pop
and
sub
aas
inc
and
subb
imul
adc
bound
push
adc
mov
push
arpl
ror
test
hlt
xor
jnp
fsts
out
test
call
inc
les
fists
shl
and
cmp
sbb
pop
aas
pop
fwait
iret
lds
loop
dec
cmp
mov
inc
mov
add
sub
xor
inc
pop
mov
pushl
mov
mov
sarl
pusha
fcomps
shll
xor
push
imul
pop
xor
jns
int
cmp
cld
sub
adcl
inc
out
das
xchg
add
mov
adc
or
dec
pop
daa
push
out
and
aaa
cmp
je
ljmp
sbb
sbb
repnz
std
js
leavew
or
dec
rorb
stos
aas
sbb
inc
cmp
pop
cmpsl
vpandn
mov
xor
test
mov
stos
xorb
sub
push
popa
mov
int
inc
inc
pop
sub
addl
shlb
lret
dec
fsubl
mov
inc
jae
sbb
lret
cmp
push
lea
lods
add
fwait
push
pusha
flds
mov
push
inc
leave
or
add
or
adcb
int
and
imul
stos
and
jne
scas
xor
cld
cmp
les
lcall
clc
andb
jo
daa
push
popf
loop
mov
mov
inc
lock
add
xchg
sub
int
mov
jg
mov
pop
divl
ja
inc
aam
jns
jp
xor
sub
aam
out
pop
jp
sub
std
mov
stos
shll
movsl
xchg
ss
fnstsw
add
inc
add
mov
loop
and
jb,pn
les
or
sub
mov
jne
adc
cmc
movsb
inc
pushf
xor
or
and
push
dec
cmpsb
jge
push
hlt
cmp
xor
xchg
ljmp
and
mov
xchg
lods
push
orl
sub
jns
dec
mov
add
mov
pop
xlat
jg
push
dec
dec
push
imul
sub
mov
jle
mov
in
sub
cmc
push
cwtl
movsl
fstpt
lock
cmp
clc
mov
lds
leave
imul
push
xchg
or
shl
cmc
inc
or
shl
enter
push
mov
inc
test
in
pop
and
inc
inc
out
dec
dec
nop
in
push
jecxz
mov
shrl
xor
test
xchg
add
jg
push
sti
rol
int3
aam
shll
into
xchg
insl
pop
leave
xor
lret
sub
dec
cli
cmp
dec
cmp
xor
movl
dec
mov
pusha
sbb
inc
mov
push
mov
mov
xor
push
pop
shll
jno
nop
inc
dec
xor
stos
dec
std
loopne
pop
inc
loop
sub
or
or
pushf
loope,pn
add
insb
pop
es
push
and
cmp
dec
rorl
shlb
lds
scas
mov
clc
sbb
shll
sbb
cmc
xor
orb
paddw
sub
inc
enter
or
inc
pop
cli
rcrb
cmc
xlat
movsl
aam
mov
outsb
int3
out
imul
fsts
rcrl
adc
aad
jns
aam
bound
and
mov
cltd
testb
mov
test
hlt
imul
xor
sub
fistps
fisubrs
sbb
mov
mov
ficoml
jecxz
lods
movsb
push
test
pushf
add
arpl
jmp
enter
xchg
mov
and
add
mov
test
jo
inc
jae
lods
dec
sahf
sub
sbb
mov
fdivrl
dec
aas
rolb
push
orb
frstor
xchg
sbbl
lret
lea
jbe
jae
enter
lods
ljmp
inc
in
dec
xlat
and
lods
sbb
sub
ds
dec
and
hlt
lfs
dec
roll
xchg
popf
out
rcpps
xchg
or
je
xchg
cwtl
cmc
hlt
movsb
cmp
ret
lret
in
negb
pop
mov
push
cmc
in
roll
insb
enter
lds
imul
enter
inc
xor
das
mov
cltd
inc
cmp
push
sbb
iret
aad
aad
add
cmp
inc
pop
jno
pushf
cld
pop
jnp
in
iret
or
xchg
mov
push
pop
mov
roll
pop
mov
xchg
inc
inc
sbb
add
ss
xchg
xor
pop
jo
push
enter
out
jmp
add
cwtl
ret
lods
add
lock
mov
pop
rcl
inc
jp
inc
dec
jne
ljmp
int
push
mov
and
mov
sbb
mov
popa
jp
or
add
leave
add
add
leave
movsb
fnsave
addr16
dec
mov
test
out
ret
jns
jo
mov
adc
mov
ds
outsl
roll
loope
and
bound
mov
mov
inc
jns
lods
shrb
test
dec
fmuls
sub
xchg
dec
dec
jno
dec
dec
daa
inc
jnp
daa
and
pop
lret
inc
ljmp
pop
lods
orl
sub
jne
push
pop
cmp
jp
adc
cld
jl
shlb
sub
cmpsl
cmp
inc
add
lret
icebp
dec
ja
shl
or
jns
inc
clts
sub
mov
inc
mov
int3
dec
ss
sub
sub
mov
mov
dec
pusha
mov
mov
int
xor
and
push
bound
pmaddwd
flds
decl
das
add
fwait
dec
lret
adc
xchg
mov
pop
fimuls
or
push
and
inc
daa
pop
fld
mov
dec
cmpl
mov
subl
stc
pop
int3
lret
jge
mov
adc
push
add
mov
sbb
xchg
jb
cmp
sub
push
push
pop
pusha
outsb
xchg
pushf
push
stos
and
jmp
into
push
leave
mov
push
jbe
test
es
mov
int3
cmp
xor
daa
popf
fnsave
movsb
jno
push
in
push
mov
sbb
jae
iret
xchg
mov
pop
int3
inc
fsubl
clc
scas
push
dec
inc
cmp
and
pusha
movsl
add
stos
movsl
movsl
pop
push
repnz
and
mov
push
test
cmp
dec
cmc
sti
mov
pop
xchg
inc
and
add
call
arpl
enter
sbbl
jg
xchg
push
xor
popf
cmp
mov
test
push
xchg
pop
aas
frstor
lds
jno
fucomp
dec
rclb
jp
and
leave
jno
mov
gs
mov
push
dec
and
pop
pushf
imul
push
outsl
add
dec
dec
push
call
xor
mov
cmp
addr16
add
pop
push
adc
jp
lds
lods
or
aad
or
adc
adc
add
inc
dec
mov
xlat
mov
pop
cltd
push
push
adc
dec
mov
insl
push
hlt
adc
and
scas
daa
push
popa
xor
add
and
lcall
inc
vmwrite
add
jns
mov
mov
inc
out
mov
xor
xchg
and
mov
adc
es
jl
add
push
and
pop
adc
mov
pop
dec
inc
inc
ds
xchg
subl
ds
mov
lahf
aad
jnp
push
pusha
xchg
lahf
lea
ficompl
mov
mov
lds
stos
js
aad
dec
or
lahf
jle
imul
xchg
and
push
lret
lahf
in
test
mov
mov
jle
fstpt
mov
cmp
imul
sarl
sbb
je
outsb
rcll
cmp
push
add
push
ljmp
outsl
jmp
ja
in
and
sub
add
inc
push
fnstsw
push
adc
negl
xchg
in
std
std
lret
loop
rolb
movsb
mov
int
adc
push
inc
scas
xorl
and
mov
push
out
pop
cli
lahf
in
pop
inc
or
jg
adc
xchg
push
inc
test
dec
and
xchg
in
and
or
inc
jg
repnz
dec
imul
or
push
sub
jns
cmp
pop
inc
cs
rcrb
mov
add
addl
xor
jns
jg
pop
push
xchg
dec
addr16
jne
cli
jl
lds
addr16
push
lcall
bound
rol
xchg
test
push
mov
mov
insl
adc
or
xchg
aam
push
aam
imul
add
inc
insl
clc
repz
arpl
imul
cmp
or
pop
int
mov
dec
jno
sub
and
les
test
jg
push
test
pop
enter
xchg
jnp
xchg
lds
in
dec
cmc
mov
mov
and
mov
cmc
mov
rol
clc
cli
call
daa
bound
inc
sbb
lret
add
leave
push
gs
pop
shll
iret
jne
and
dec
cltd
sbb
xchg
push
add
mov
leave
sub
push
and
adc
cmp
rcll
leave
adc
xchg
stos
bound
cmp
jg
in
iret
aas
lret
inc
lds
gs
sbb
adc
loop
lret
add
and
lds
jecxz
clc
mov
vmovd
push
cmp
xor
fsubrl
push
popf
lret
or
mov
mov
into
mov
rcrl
test
es
cmp
mov
shrl
cwtl
mov
nop
cli
inc
ljmp
sbb
push
jne
or
dec
in
roll
nop
push
or
dec
fsubrl
cmc
aaa
scas
jl
test
xlat
stos
add
add
and
mov
mov
jp
cmpsb
into
fsubrs
bound
test
or
andb
test
push
dec
mov
push
jne
ja
mov
out
test
inc
icebp
sbb
lock
pusha
int3
inc
scas
test
je
cmpsb
pop
push
movsb
cli
dec
sub
lock
jbe
mov
jbe
mov
inc
lds
rcrb
leave
arpl
mov
adc
cli
xchg
outsl
mov
add
jno
and
cmp
andb
inc
xchg
add
mov
dec
fcompl
addb
arpl
pop
pop
leave
fsubrs
cmp
mov
loop
sub
push
push
mov
add
dec
fsubrl
cmp
jmp
mov
hlt
in
ljmp
mov
mov
sarb
aaa
cli
out
xchg
sbb
insl
jge
cmp
mov
mov
or
or
pop
xor
xor
out
xor
leave
push
add
push
int
cmp
push
dec
out
jnp
rorb
xorl
dec
enter
push
dec
cmpsb
push
inc
loopne
sub
lods
mov
and
ljmp
out
lock
jno
sub
add
sub
cli
lods
fcoml
dec
hlt
popl
push
cmpsl
ret
push
rorl
inc
enter
push
fwait
inc
add
movb
enter
push
hlt
xchg
and
push
lods
notb
pop
scas
std
mov
xchg
xchg
mov
mov
scas
sbbb
scas
sub
and
fbld
push
or
in
imul
loop
mov
inc
jne
iret
push
xchg
cmp
in
shl
adc
mov
lds
jno
jmp
stc
das
bnd
and
imul
test
push
xor
push
outsl
jne
das
mov
lahf
jle
dec
inc
cmp
fsubp
ljmp
jnp
or
daa
dec
xchg
dec
dec
daa
add
shl
sub
adc
xchg
inc
and
into
adc
or
mov
scas
push
movsb
sbb
dec
xchg
and
or
stos
bound
or
lahf
nop
outsb
sahf
call
mov
xchg
or
ja
inc
jnp
push
rol
jge
jg
adc
xor
jne
mov
inc
call
and
and
pop
inc
xchg
cmp
xor
leave
add
inc
xchg
shr
add
lret
jne
xorb
pop
cmc
orb
daa
mov
divb
cmc
xchg
lock
es
fs
mov
out
jg
pop
imul
inc
iret
mov
adcb
stos
pop
xchg
mov
mov
fimull
dec
sub
and
mov
mov
or
push
test
dec
lock
xchg
mov
dec
xor
fisubs
imul
jns
mov
and
xor
out
and
and
vmovddup
jns
dec
mov
roll
repz
pop
mov
test
adc
inc
and
cmp
dec
cmp
jl
test
iret
adc
xchg
push
push
pop
repnz
add
movsl
das
cmpsl
mov
jne
popf
mov
cmp
mov
cmc
mov
arpl
outsl
daa
sub
cmp
iret
call
xchg
daa
ds
test
mov
pop
fsubrl
dec
roll
test
adc
scas
add
sub
popf
in
lea
xor
flds
cmpsb
aaa
mov
cmc
push
adc
add
pop
mov
in
leave
pop
push
push
sbb
or
ds
movsb
insb
xlat
sub
inc
xchg
popf
cmpsb
pop
pop
inc
cltd
cwtl
pop
pop
leave
sub
repnz
pop
xor
adc
xor
repz
lds
push
adc
or
inc
into
leave
lods
int3
shrl
dec
inc
fs
xchg
mov
or
push
shll
enter
add
ret
push
out
cmp
mov
lods
xchg
xor
add
icebp
icebp
mov
jmp
jnp
and
aam
mov
sub
clc
jg
xchg
xlat
cmp
jg
cltd
jge
mov
dec
sub
das
sbb
xor
lods
push
sub
lds
adc
scas
inc
mov
out
mov
out
adc
sub
sbb
hlt
int
dec
xor
xor
add
jb
in
flds
or
mov
arpl
cli
dec
arpl
pop
pop
mov
fsub
rorb
cmc
adc
cwtl
or
pop
shr
xor
fnsetpm(287
iret
inc
loope
leave
fbld
add
adc
sub
enter
rcrb
adc
shrl
push
inc
push
dec
cmc
int3
mov
xor
cmp
ja
fs
std
cmpsb
ja
inc
xor
and
test
push
sbb
inc
mov
sub
xchg
dec
fistl
pop
cmpsl
and
add
pop
leave
push
rcrb
dec
rorl
in
rclb
sti
push
ds
and
scas
mov
dec
jns
inc
stos
loopne
das
leave
push
in
mov
or
dec
hlt
dec
out
pop
cmc
jecxz
lcall
and
mov
xor
jge
adc
dec
pop
jns
push
xchg
mov
inc
sti
inc
fsts
mov
dec
inc
scas
mov
stos
inc
sub
push
sahf
push
push
in
xor
repnz
mov
xchg
dec
cmc
fcoms
sub
insb
pusha
test
or
mov
insb
jl
movsl
pusha
adc
jbe
mov
mov
pop
push
lcall
mov
js
popf
iret
stc
cltd
xor
mov
fadd
pop
push
cld
mov
sbb
jg
pushl
gs
and
or
ljmp
sahf
mov
test
inc
dec
lret
pop
push
popf
xchg
cs
insb
rcr
mov
dec
mov
addr16
rcrb
cmp
pop
bound
inc
insl
aam
faddl
ds
mov
dec
idivl
mov
test
and
pop
push
flds
shrb
sbb
mov
std
mov
fidivs
xor
mov
pusha
sub
jl
jg
inc
jae
ja
mov
sub
lret
out
adc
jne
adc
sbb
call
sbb
push
dec
jbe
aas
fnstcw
testl
inc
filds
in
push
pop
adc
mov
int3
mov
cmp
lahf
scas
xlat
stos
test
scas
sahf
mov
mov
mov
jmp
jne
sub
fcomps
roll
rorb
push
sub
pop
lods
xor
inc
scas
xchg
filds
aaa
cli
push
nop
jno
fisubs
enter
sahf
fsts
jb
mov
dec
sbb
shlb
adc
cmpsl
das
int
sarb
inc
cltd
les
sub
scas
jne
or
add
sub
add
outsb
sub
sti
cmp
idivl
adcb
testb
push
sub
lret
cmc
dec
leave
sub
mov
ret
scas
and
or
inc
mov
test
ljmp
xchg
sarb
cwtl
push
rcl
cmp
mov
xorl
lret
addl
push
dec
mov
jmp
add
das
xor
or
stos
cmp
jl
daa
push
leave
hlt
movl
aam
dec
cmc
add
stos
das
mov
push
mov
push
mov
cmc
pop
ss
inc
inc
or
aas
pop
ret
dec
cmp
and
or
movsb
imul
mov
jne
sbbl
fimull
stos
push
inc
push
test
fisttps
push
mov
push
xchg
mov
stc
jae
adc
push
jecxz
les
ss
push
pop
ljmp
add
inc
hlt
sub
dec
insl
cmc
imul
and
sbbl
int3
insb
loop
dec
ret
cmp
push
jne
daa
aaa
rcrl
cmp
xchg
push
stos
push
mov
add
inc
cmp
rcrb
push
lods
aas
jb
loop
jo
aam
or
inc
mov
insl
push
sbb
xchg
xchg
into
sbb
aaa
int
shrl
mov
inc
imull
or
js
test
or
aam
rclb
dec
les
dec
stos
jb
lds
inc
cmp
mov
sub
mov
sub
lret
pop
fnstcw
or
push
das
out
adc
stos
xor
jo
outsb
jle
dec
movl
addr16
sbb
pop
sub
nop
push
sub
dec
bound
and
loope
pop
xor
xchg
ss
push
into
lods
push
mov
xchg
push
scas
mov
jo
scas
loope
cli
fbld
cmc
movsl
fildl
iret
push
lds
outsl
inc
cli
in
cmc
jl
dec
and
sub
push
fdivrs
sub
out
lret
dec
cmpsl
push
add
cmpl
fistl
pushf
inc
popa
dec
and
fldt
aam
or
int
xchg
cmp
sahf
sarl
pop
jg
push
dec
aas
jo,pn
xchg
inc
adc
adc
fcmovbe
enter
or
sbb
push
aad
test
add
push
inc
pop
mov
fmul
xor
lret
mov
out
int3
popf
mull
aas
scas
cltd
add
and
faddp
scas
jns
mov
in
inc
pusha
adcl
movsl
add
sbb
sub
cmp
leave
add
leave
loope
push
pop
stos
fcmove
dec
jge
dec
inc
shlb
inc
jl
xor
push
test
and
or
xchg
or
aaa
jl
arpl
daa
call
cmc
in
jle
push
dec
loope
scas
and
scas
pushf
mov
rcl
daa
aas
pop
push
xor
jg
adc
or
push
int3
xor
subb
pushf
es
mov
xchg
sub
je
repz
ret
or
ret
ds
lret
xor
loope
adc
sub
hlt
adc
call
cmp
adc
aad
dec
fisttps
and
add
sbb
or
add
nop
xchg
in
outsb
sub
cli
sbbl
in
test
add
sub
inc
lds
bound
fldcw
cmp
push
cmp
mov
sbb
sub
jno
in
adc
pop
sbb
xor
aad
cmp
xchg
sub
jo
or
outsb
xlat
xchg
je
or
fdivrs
or
push
inc
mov
cmp
cmpsl
insl
imul
arpl
add
xor
dec
popf
xchg
push
popf
adc
jmp
cmp
dec
mov
rcll
jg
sub
shl
pop
jl
cmp
dec
fdivrl
xor
stos
xlat
push
cltd
push
push
adc
and
test
xlat
inc
mov
adcl
std
pop
test
and
dec
sub
icebp
sahf
mov
es
std
mov
out
loope
mov
dec
jno
jge
jl
jmp
push
add
fmul
push
sub
arpl
and
ja
push
popa
mov
fbld
and
ja
add
aas
mov
imul
sub
cmp
push
cltd
cmp
lret
or
push
test
mov
in
mov
mov
loopne
add
mov
push
xchg
jl
xlat
jle
mov
ja
and
call
dec
aam
mov
lret
dec
in
dec
push
mov
ja
mov
or
inc
push
dec
movsl
leave
or
pop
push
xchg
shlb
sub
and
sti
in
loop
lea
pop
push
mov
and
ss
sar
adcl
rclb
pop
mov
xor
mov
lcall
jo
or
test
push
xchg
pop
test
daa
or
fidivl
and
sbb
inc
inc
pop
aad
aam
jno
cmc
xchg
std
and
xchg
jge
pop
rclb
and
sbb
push
and
enter
cmc
movsl
out
sub
pop
lds
aam
mov
shl
sub
dec
add
aam
stos
ret
cmpb
dec
cmp
sarb
aaa
aas
and
scas
inc
add
mov
dec
push
repnz
mov
xor
or
in
mov
jno
cmc
cld
xchg
pmulhuw
adc
mov
mov
xor
ja
xor
inc
add
inc
cmp
and
inc
movsl
mov
mov
dec
aaa
sub
dec
mov
inc
test
pop
pop
inc
push
mov
js
cmp
cmp
sub
in
jns
iret
or
sub
adc
in
xor
jmp
loope
cli
outsb
int3
cmp
mov
roll
pusha
cmpsl
mov
xchg
mov
test
mov
push
pop
subl
push
jnp
lret
enter
bound
inc
or
sub
and
mov
nop
outsl
add
adc
aad
lods
fsubp
push
push
fisttpll
xchg
pop
add
cmc
sub
les
sub
hlt
pushf
or
cmp
rorl
add
enter
rclb
clc
add
adc
cli
rcrl
fmuls
call
lea
ud1
ret
mov
jle
pop
sub
lret
sub
and
mov
scas
enter
sub
add
in
mov
cld
scas
inc
mov
cltd
pop
cmc
icebp
push
cmc
test
and
add
inc
sub
mov
push
jge
jg
sbb
mov
test
loopne
lock
enter
scas
push
sbbl
jecxz
xchg
stos
xor
adc
dec
push
std
into
push
aam
add
push
push
xchg
dec
mov
add
xor
push
cli
push
rorl
cmc
jp
mov
movsb
jg
mov
dec
pop
rcrb
mov
cmc
jns
cwtl
and
outsb
jnp
jmp
xchg
add
xor
into
adc
idivb
ret
jae
out
xchg
les
pop
movsb
aaa
push
push
lret
nop
and
push
lock
jbe
ds
xor
cmp
add
stos
and
movaps
pop
ret
stos
in
push
hlt
ja
rorb
xorb
or
pop
xchg
cltd
leave
ss
enter
adc
shl
mov
xor
out
sub
dec
inc
and
inc
stos
jne
fisubrl
xchg
push
or
cli
inc
mov
xchg
xchg
testl
scas
or
sub
pop
dec
jne
sub
inc
sub
daa
int
popf
jnp
test
xor
lret
push
mov
mov
sub
xor
mov
dec
push
mov
inc
inc
push
mov
xchg
insl
imul
inc
insb
mov
es
cmc
xor
stos
adc
jp
push
inc
cltd
cmp
lock
orb
pushl
push
push
dec
mov
and
inc
ss
mov
dec
cltd
mov
jecxz
push
daa
xchg
into
fidivrs
and
and
rol
lods
mov
inc
xor
cltd
sbb
outsl
and
dec
mov
xlat
mov
dec
roll
mov
shlb
jno
inc
and
cmpsb
dec
mov
push
enter
push
in
shll
lahf
and
sub
mov
fcmovbe
jbe
in
push
xor
in
xchg
stos
inc
outsl
fsubrs
xchg
jno
push
mov
aam
or
cld
sbb
scas
mov
ret
test
aam
cmp
xor
dec
xadd
mov
ljmp
nop
fisubl
sub
mov
shl
ret
movsb
jg
mov
cmp
enter
in
rcl
mov
add
dec
xchg
dec
int3
test
xchg
rorb
push
fadds
xchg
js
dec
in
adcl
inc
fisubrl
push
flds
dec
ret
cmp
xor
int
dec
push
mov
push
xor
shll
gs
and
pop
add
add
xchg
lret
inc
inc
xor
dec
cmc
sbb
mov
lock
push
xor
lods
aas
dec
mov
dec
lea
push
fidivrs
sub
mov
dec
inc
sbb
nop
arpl
mov
mov
sub
mov
pop
mov
mov
and
jbe
and
or
xchg
das
xchg
bound
push
cld
fmuls
add
inc
adc
test
sub
fstpl
and
loopne
mov
jge
adc
xchg
push
stos
sbb
mov
push
push
imul
scas
movsl
and
inc
mov
dec
and
rol
scas
call
or
inc
add
les
incl
aam
inc
push
dec
and
test
daa
sub
std
jne
shlb
sub
cmp
shl
sub
sub
lahf
int
popf
sbb
pop
stos
xor
cmc
mov
les
mov
mov
mov
fidivrl
lahf
adc
sub
and
xchg
add
and
pushf
lret
pause
sarb
cmp
ror
dec
imul
pop
aaa
dec
lock
and
xchg
in
sub
cli
add
or
es
push
testl
hlt
adc
push
sub
lods
dec
mov
fwait
add
test
adc
clc
repnz
lods
test
jno
jne
xchg
aaa
jns
in
dec
fs
jno
inc
out
dec
adc
push
push
push
enter
push
inc
fsubrs
cli
jae
cld
and
sti
pop
and
sbb
or
ret
stc
xlat
ljmp
in
mov
dec
movsl
inc
xor
dec
sbb
cmp
adc
movsb
in
and
daa
push
inc
arpl
iret
pop
jnp
jae
and
mov
dec
out
es
sub
xor
lret
jg
aaa
and
mov
and
lock
arpl
cmc
sbb
andl
loope
mov
loopne
mov
adc
mov
jbe
out
cmc
fisubrs
xor
dec
xchg
flds
and
lret
mov
and
vrsqrtss
or
mov
insb
lods
sub
fs
cmc
js
testb
lds
sub
mov
jmp
dec
cmc
addb
push
jge
xchg
inc
push
and
xchg
ja
ss
pop
jne
pop
xor
adc
loope
sub
jp
movsl
scas
test
push
mov
es
xor
jae
mov
sub
scas
dec
cmc
xor
push
scas
adc
fidivl
sti
jo
mov
xor
out
fmull
popa
mov
cmc
push
mov
leave
xor
mov
les
mov
pop
adc
jo
xchg
test
mov
dec
sub
jns
jg
inc
fstpl
push
dec
mov
bound
lcall
cltd
hlt
pop
call
popf
cwtl
mov
adc
and
dec
popa
sub
arpl
fmuls
insl
jns,pn
push
ja
rcrl
addr16
mov
ret
sub
cmp
xchg
push
rcll
stc
push
push
addl
cvtdq2ps
push
xchg
shrl
dec
mov
add
mov
and
out
xor
dec
mov
shlb
dec
and
jne
dec
xor
push
adc
cld
jg
push
inc
decb
dec
jne
call
xchg
mov
js
or
dec
push
mov
andl
or
cmp
sbb
adc
incl
add
fdivp
sahf
ret
lret
pop
int
movsl
outsl
add
adc
xchg
sub
es
imul
insb
or
out
xchg
in
adc
push
dec
inc
in
push
dec
mov
loope
ljmp
test
mov
stos
and
mov
and
cwtl
pop
movsb
popa
cmp
mov
xchg
jle
loopne
inc
ret
jnp
sub
mov
mov
pushl
add
dec
mov
sub
and
push
int
xor
jmp
cli
int
xchg
aad
jle
insl
stos
inc
imulb
hlt
fisubrl
push
leave
data16
or
pushf
push
stos
adc
mov
jg
shrb
add
xchg
rcrb
cmp
or
pop
xchg
mov
out
push
mov
dec
test
leave
or
fsub
mov
or
dec
les
popa
push
push
fstp
xchg
subl
pop
and
stos
fbstp
dec
add
mov
xor
and
iret
pop
xor
adc
jecxz
cmp
push
mov
push
cmp
mov
dec
or
ret
xlat
xor
add
cs
xor
mov
pop
dec
xchg
pop
enter
adc
push
shrb
scas
dec
shll
es
jbe
loope
icebp
jns
mov
mov
jle
sahf
jne
adc
cmp
add
xor
dec
mov
pop
adc
mov
inc
fdiv
icebp
fisubrs
xor
addb
add
pop
or
and
cmc
arpl
test
jae
inc
inc
hlt
sahf
or
cli
pop
xor
in
lahf
mov
orb
aam
jnp
jg
xchg
dec
pop
xchg
cmpsb
sbb
lcall
mov
xchg
pusha
sub
rorl
pop
daa
stos
inc
and
push
xchg
shr
subb
push
shrl
imul
jno
push
xchg
rorl
sub
xchg
test
lret
mov
push
popf
pop
lret
xchg
popf
xlat
outsb
xor
mov
sbb
mov
cmp
into
rorb
cmpl
lret
std
push
leave
enter
mov
xor
inc
ds
push
cmp
adc
xor
pop
popa
inc
sbb
loope
test
cmp
frstor
lahf
mov
test
bound
cmc
sbb
cwtl
dec
subb
addr16
xchg
push
fsubrs
pop
sbb
leave
dec
out
mov
mov
xchg
shrb
inc
push
mov
jnp
adc
fwait
add
stos
jns
mov
lods
repz
lret
fs
inc
inc
aad
lods
das
jnp
dec
mov
push
jg
in
cmp
mov
ret
loopne
lea
and
mov
int
cmp
shr
rol
pop
and
lret
enter
addr16
inc
push
jg
add
mov
sub
jle
testl
mov
sub
add
aad
or
aad
les
push
jns
pusha
hlt
je
push
mov
xor
cmp
push
les
inc
dec
push
aam
hlt
loopne
lret
cmpsl
dec
dec
add
les
stos
sarl
xor
dec
or
lcall
or
mov
aam
xchg
arpl
aas
sbb
add
cmp
adc
dec
cwtl
mov
sub
int
hlt
loop
rol
imul
and
arpl
aaa
sbb
in
aam
push
add
ja
arpl
loope
push
add
cmpsb
aam
pop
mov
loopne
aas
test
hlt
lcall
scas
or
lds
xor
les
mov
mov
xchg
pop
mov
stos
les
mov
pop
sbb
aam
hlt
sub
add
sbbl
aas
es
jo
or
and
out
aas
xchg
clc
shll
push
addr16
and
leave
shlb
lahf
leave
dec
hlt
jp
and
bound
gs
or
pop
xor
pop
xor
mov
push
xchg
inc
loop
push
cmp
jno
sub
lret
rcll
test
add
js
sbb
add
ret
jne
insb
les
je,pt
andl
insb
imul
or
jp
out
mov
shrl
inc
in
sub
cmovp
shlb
test
pop
mov
int
in
into
sub
dec
inc
or
or
jnp
push
test
mov
cmpsb
enter
cmp
push
mov
sub
xor
and
leave
pop
lcall
aaa
fistps
dec
adc
incb
in
inc
lea
frstor
pusha
add
push
push
mov
mov
push
sub
cmp
in
dec
jl
sbbl
ds
js
ret
clc
mov
and
mov
mov
sbb
cmp
jno
in
rorb
jns
inc
cmp
cmp
pop
movsl
scas
or
pop
dec
xchg
dec
dec
dec
cmc
sub
xor
xor
outsb
dec
push
push
loopne
xor
imul
rcrl
leave
mull
mov
push
sarl
pop
addr16
sub
test
decl
and
scas
enter
cmp
movsl
and
in
push
dec
sbb
jge
xchg
adc
icebp
jne
lahf
cmp
repz
es
mov
fdivs
outsl
je
dec
cmovne
testl
test
adc
test
pusha
jle
gs
add
sbb
test
pop
shrl
scas
dec
lea
inc
shll
dec
jg
sub
movl
xchg
inc
mov
mov
xchg
push
fnsave
aam
push
dec
push
jle
sub
add
ucomiss
rol
mov
dec
cmc
aad
sbb
rorl
jg
mov
in
mov
sbb
mov
dec
adc
mov
push
mov
sbb
in
and
sub
shr
push
pop
xchg
pop
sar
dec
fcompl
and
notb
sub
fcmovnb
in
inc
sub
adc
mov
in
jne
les
ret
push
dec
adcb
rolb
jp
and
mov
jne
sbb
fcoml
pop
rclb
mov
xchg
jl
enter
sub
and
addr16
outsl
cmc
out
and
hlt
loope
pop
in
jmp
pop
mov
pop
sarb
sub
ret
or
xor
roll
jns
mov
or
inc
cmpsb
and
cli
mov
mov
jb
popa
cld
loope
pop
sbb
hlt
cli
pop
les
xchg
cmc
adc
orl
outsl
popf
fisttps
adc
add
mov
outsb
xor
and
inc
pusha
ja
and
insl
inc
subl
add
dec
push
and
roll
jg
test
mov
test
lea
mov
in
sbbb
cmp
add
daa
pop
fcmovb
int3
push
dec
jmp
ja
test
aas
inc
push
out
cwtl
enter
dec
xor
stos
insb
jg
pusha
push
push
sarb
xchg
add
es
xor
sahf
mov
sub
dec
mov
lds
cli
loopne
sub
cmc
jmp
mov
jnp
cmp
xchg
outsb
shlb
subl
xor
sub
int
ret
and
pop
jne
call
pop
mov
push
insl
dec
inc
cmc
aas
scas
test
mov
fscale
push
xorl
sarb
jle
sub
mov
andl
cmpsl
pushl
jne
and
insl
sub
adc
jne
fdivrl
mov
sub
mov
add
into
cmc
sub
bound
rclb
and
jnp
fldl
adcl
fldenv
rcr
mov
push
ret
aam
mov
std
push
dec
mov
mov
and
ja
cmc
inc
enter
add
lret
or
pop
test
lods
and
ret
icebp
adc
imul
xor
dec
sub
jo
sarl
shll
xor
sub
leave
inc
cmc
dec
stos
and
roll
or
mov
jnp
and
xorl
xchg
enter
ja
shlb
movsl
inc
gs
lods
inc
pusha
fld
add
jge
gs
xor
jno
xchg
aas
insb
stc
jmp
adc
mov
xchg
xchg
enter
pushl
add
out
inc
in
add
leave
test
push
enter
mov
sub
cld
ret
leave
rorb
shll
out
fdivrp
movsl
call
or
dec
add
xor
mov
xorl
stos
loope
gs
sbb
dec
clc
adc
push
addb
ror
mov
sbb
and
jecxz
pop
test
je
ds
lahf
es
push
add
imul
add
stos
mov
inc
sub
cld
shll
rcl
out
add
mov
add
shrl
pop
addl
std
adc
cmp
roll
ljmp
push
aad
out
and
and
jmp
inc
loope
out
leave
mov
lcall
dec
imul
imul
ret
and
dec
cltd
pushf
mov
dec
or
adc
popf
sub
test
xchg
and
inc
icebp
hlt
sbb
pop
cld
inc
test
sub
dec
clc
sub
push
dec
dec
cmc
fdivr
test
shlb
add
movsl
rcl
inc
cmp
sbb
cmp
mov
or
loopne
add
xchg
push
add
fcoms
mov
fnsave
push
dec
das
aad
in
test
fwait
sahf
ds
cmp
adc
popf
out
imul
bound
daa
inc
mov
in
cli
sbb
jl
pop
rclb
add
xor
xor
data16
shrl
test
cmp
sbb
cwtl
and
cltd
insl
inc
mov
and
dec
orb
xor
sub
mov
call
xchg
es
std
insl
aas
jnp
sbb
fsubl
stos
pop
mov
jl
aas
xor
push
cmc
scas
stc
add
inc
dec
adc
sub
stos
daa
int3
mov
daa
cmp
dec
xor
cmp
lds
scas
ret
cmp
loop
mov
cmp
dec
jb
lret
not
ljmp
inc
or
mov
inc
in
push
dec
xchg
inc
inc
and
inc
jle
inc
hlt
imull
inc
pop
inc
pop
push
and
add
cmpsl
icebp
pop
repnz
fidivrs
insb
mov
mov
jne
dec
or
andb
push
dec
hlt
cmpsb
fwait
dec
lods
cltd
int
fs
add
mov
das
bound
push
hlt
in
dec
shll
push
dec
fimull
mov
shl
lcall
sar
jno
imul
rorb
lahf
decb
push
inc
pop
xchg
std
mov
popa
push
movsl
mov
dec
jmp
loope
lds
fs
outsb
out
repnz
stc
shll
loopne
push
incl
and
push
cmp
mov
rcl
cmp
push
dec
imul
ret
jne
movsl
push
enter
cmp
lods
arpl
add
loop
inc
in
or
jbe
dec
clc
rolb
xchg
pusha
adc
jae
push
push
test
fnstsw
pop
cmp
pop
movsl
adc
shl
cwtl
pop
add
push
xor
sub
dec
in
cmp
dec
lcall
pop
ds
inc
push
jne
sub
xor
rcr
sbb
scas
inc
mov
mov
pop
imul
cmp
fxch
jno
stos
bound
inc
xor
ret
inc
jne
xchg
jg
pop
jns
dec
push
je
stos
arpl
test
fstpl
test
rolb
push
aaa
push
outsb
test
mov
dec
into
imul
loop
xor
mov
gs
scas
mov
add
cmp
iret
inc
xchg
mov
mov
rclb
push
fsub
jge
push
test
dec
push
cmpsl
push
inc
call
fistpl
int
mov
aad
and
lea
add
mov
aas
mov
int
test
hlt
xor
jne
repz
test
test
out
mov
mov
ljmp
loope
test
aam
sti
fmuls
add
mov
nop
inc
shrl
sub
scas
cmc
mov
test
push
lret
mov
mov
xchg
test
in
scas
add
pop
mov
lahf
sbbl
daa
adc
pusha
popa
aam
xor
sub
shl
jb
and
add
jp
push
add
adc
lret
mov
jns
js
xchg
jnp
inc
stos
ja
iret
mov
xor
frstor
js
lea
ror
frstor
lret
addr16
jbe
lds
add
shrb
sub
xchg
xchg
pop
pusha
loopne
xor
cmpsb
dec
or
mov
push
mov
bound
jp
enter
adc
out
in
test
push
push
and
sub
push
gs
jae
or
or
sbb
cmp
pop
cs
dec
dec
sarl
mov
test
lds
inc
rorb
jmp
sub
jae
jno
jne
sarb
js
mov
add
hlt
mov
mov
jmp
adc
mov
xchg
jno
dec
pop
cmc
scas
inc
bound
jl
ljmp
aas
pop
shll
or
mov
mov
pop
loope
adcb
dec
adc
movb
movsb
movsl
adcl
and
dec
or
push
jns
inc
pusha
aas
cmc
mov
popf
adc
dec
xor
sub
adc
enter
test
outsl
cs
push
add
push
push
pop
xlat
mov
test
aaa
les
movl
push
push
jg
test
xor
sub
ja
push
test
inc
outsb
xchg
jg
dec
into
xchg
data16
jp
xchg
ret
push
sbb
inc
test
lds
xor
jno
shl
jo
jbe
cwtl
sbb
cmc
xchg
cmpsb
rclb
pusha
dec
pop
xlat
icebp
imul
leave
jbe
inc
fsubl
addl
push
dec
cmp
cmc
repz
and
sub
imul
push
or
dec
into
mov
jno
push
mov
jnp
fisubl
adc
jne
fistpl
int3
jle
mov
hlt
jp
into
es
and
cmp
jne
daa
push
adc
fldcw
dec
jne
imul
test
push
pop
and
jge
rcl
mov
lret
test
cs
and
clc
std
mov
pop
loop
and
inc
mov
mov
cmc
outsl
cmp
mov
inc
pop
adc
inc
test
dec
add
cmc
and
add
xchg
pop
fstl
jnp
dec
xchg
les
ds
es
nop
test
outsb
loop
aam
enter
insl
dec
jns
and
and
sub
inc
push
add
pusha
dec
xchg
sub
stos
jne
sub
dec
cmc
hlt
aas
pop
mov
in
xchg
negb
fucom
xor
hlt
sbb
fistps
jge
imul
inc
cmp
fst
loopne
xchg
add
dec
adc
mov
inc
pop
xor
cmc
in
sarl
pop
pop
adc
add
pop
xchg
and
mov
sbb
les
loopne
loope
xlat
imul
jmp
popf
test
xchg
jg
outsl
scas
dec
dec
loope
dec
xchg
mov
xchg
mov
pop
mov
insl
or
cmc
dec
add
add
xchg
enter
xchg
mov
les
inc
xor
add
imul
push
scas
int3
lahf
dec
shrl
mov
imul
cmpsl
leave
test
sbb
cmc
pop
rorb
out
pusha
rolb
std
inc
jnp
lods
jmp
repz
jno
cmc
push
dec
push
sub
test
popf
les
mov
dec
stos
cmc
arpl
fldt
sbb
pop
cmpsl
dec
popf
int
jg
inc
inc
mov
push
push
imul
push
jl
dec
out
fldcw
scas
adc
push
fisubl
dec
sub
cmc
push
fimuls
ret
xchg
and
push
sub
lret
cmp
cli
jl
scas
dec
scas
loope
sub
add
adc
jecxz
rolb
sub
push
xor
leave
lea
mov
int
dec
jbe
jnp
or
cmp
dec
lahf
jecxz
pop
ja
aad
inc
push
push
nop
dec
or
icebp
ds
add
loop
xlat
fsubr
roll
cld
xor
or
adc
add
mov
loopne
pop
inc
add
aas
jmp
mov
mov
test
shll
xlat
push
jmp
movsb
ret
sbbb
sub
dec
push
lret
dec
fnstenv
les
inc
sbb
xor
rcll
lds
shll
mov
mov
dec
stos
lret
cld
fmull
stos
cmp
xchg
ficoms
pop
dec
push
iret
hlt
mov
movsl
mov
sbb
dec
bound
jle
ljmp
xchg
jo
pop
push
and
push
mov
movb
int
jns
add
movsb
shlb
into
enter
scas
scas
sub
lds
ficompl
mov
jb
and
xchg
lock
daa
lods
sar
cmc
call
inc
scas
hlt
js
xor
mov
aaa
dec
mov
scas
cmp
rcl
rcll
xor
mov
pop
cmc
ja
lcall
out
sbb
or
cmpsl
addr16
dec
out
push
xchg
test
fadd
es
push
es
push
xor
stos
aaa
sub
sub
and
cwtl
xlat
or
sbb
test
adc
xor
jecxz
jbe
push
dec
cmp
lods
xchg
push
pop
pop
aam
adc
and
in
fsubs
test
push
mov
cmp
gs
inc
xchg
adc
push
addr16
sti
aad
jl
dec
xchg
ljmp
xor
or
les
dec
addl
pop
push
push
icebp
icebp
and
lret
fnstsw
sub
push
push
subl
inc
push
movsb
mov
outsl
mov
dec
adc
or
xor
push
cmc
rorb
sub
push
bound
cmc
dec
enter
mov
stc
dec
fdiv
lds
test
cmpb
adc
jmp
push
iret
push
fiadds
add
push
loop
inc
cmp
imul
out
ja
mov
dec
push
xchg
inc
test
jmp
dec
popa
test
in
movsl
fimuls
hlt
xor
loopne
test
sbb
push
iret
cwtl
jp
rclb
xor
stos
addr16
push
xor
addl
mov
nop
xor
inc
fimull
xlat
cmpb
jg
mov
loop
lret
pop
adc
xchg
popa
cld
xchg
inc
mov
shll
aas
push
jb
loope
sarl
xchg
pop
fcmovnbe
sbbl
scas
popa
add
xor
shrl
inc
jnp
and
jle
iret
xor
std
sub
and
inc
test
lds
push
mov
sahf
daa
inc
mov
mov
pop
es
cmc
jb
maxps
fldt
lret
jne
dec
mov
dec
dec
pop
test
dec
cld
add
cltd
daa
cmp
inc
push
inc
ja
jns
inc
jnp
rcr
jge
add
lea
and
mov
push
pop
add
xor
sub
test
loopne
jne
push
fimuls
int
mov
shrl
or
fld
sbb
cmp
leave
or
jb
xor
dec
sub
jl
and
inc
jae
std
cmc
cltd
adc
add
sub
repz
fs
add
in
orb
sub
adcl
outsb
mov
push
into
push
mov
call
loop
ret
nop
mov
lret
aam
fsub
pop
shrl
ja
jne
mov
orb
jnp
fidivrl
rorl
mov
push
inc
xor
sbb
jbe
icebp
cmp
inc
ljmp
es
dec
cmp
jno
imul
hlt
fs
dec
cltd
pop
push
and
mov
outsl
inc
sarb
push
sub
int3
jne
rorb
inc
ja
xchg
xor
fwait
cmp
movsb
add
pop
fimuls
dec
push
mov
xchg
cmp
add
xor
bound
add
imul
adc
pop
leave
arpl
hlt
adc
sbb
mov
lret
and
pop
inc
mov
xchg
stos
fisttpll
pop
jnp
int
int
cli
dec
arpl
cmp
dec
or
dec
pop
mov
jnp
test
insl
shrd
fwait
push
cmp
lret
lods
fistpll
jg
jle
mov
push
test
fadds
jg
push
jle
test
xchg
fists
lret
jno
sbb
popa
popf
xorl
sub
inc
sahf
in
adc
cmp
xor
inc
subb
jo
lock
add
daa
dec
in
enter
scas
push
push
push
sub
xchg
push
fsubrl
jge
aad
dec
sbb
mov
fdivrs
test
loope
cmp
negb
daa
add
and
aas
xchg
add
dec
xlat
ja
xchg
push
test
sub
scas
and
jg
lret
xchg
jne
nop
addr16
pop
pop
shl
cmp
or
hlt
nop
mov
xorl
les
test
or
jp
lret
jbe
ror
aam
in
scas
push
xchg
xchg
roll
out
mov
nop
push
cmp
insl
cmc
inc
test
mov
xor
popf
shl
sub
pop
push
inc
sti
and
and
ss
into
mov
pop
cs
add
dec
pusha
das
or
cmp
mov
insl
mov
aam
push
rclb
mov
addb
or
ds
lea
dec
inc
mov
adc
stc
dec
inc
jmp
mov
or
push
lds
mov
jno
xchg
and
jmp
dec
fadd
pop
cmc
mov
push
jns
push
addb
jecxz
xchg
dec
add
enter
xor
ret
into
test
dec
jp
add
xchg
test
jle
xchg
inc
addr16
mov
mov
shrb
andb
addr16
pop
test
fildl
xorl
adc
ja
dec
pop
sarb
or
xchg
pop
push
mov
test
cltd
push
push
cmc
scas
or
sahf
pop
inc
mov
or
add
mov
roll
jns
or
xchg
sahf
mov
cld
push
inc
stos
push
inc
mov
mov
add
jle
adc
lock
insl
dec
dec
sub
inc
dec
sbb
stos
jmp
mov
fnsave
movsb
pop
add
push
and
inc
aad
and
popf
mov
or
test
stos
and
cld
adc
daa
xlat
fldt
jne
adc
cmp
sbb
pusha
push
mov
movsl
sub
sbb
or
insl
cmc
xor
xor
or
loope
inc
inc
mov
divb
or
jmp
adc
rolb
ret
scas
jmp
rcl
jnp
into
jns
or
jmp
inc
dec
jge
cmp
pushf
lods
rcrl
inc
and
fstpl
sbb
dec
call
add
cmpsb
push
cmp
mov
insb
hlt
lret
nop
lret
xchg
xchg
sarl
out
into
sub
xchg
push
add
pop
and
pusha
pop
nop
fcomp
push
and
repz
movl
das
push
sbb
sub
ja
psubw
in
jnp
rcl
mov
add
xor
test
cli
lea
or
and
and
pop
mov
inc
or
ds
cmpl
dec
mov
adc
cmc
mov
adc
movsl
inc
jmp
mov
dec
dec
icebp
cmpsb
sub
and
mov
adc
cs
pusha
out
add
sub
into
sbb
icebp
pop
dec
pop
cmp
cs
mov
fistpl
xchg
push
adc
pop
shrl
sbb
movsl
dec
negb
dec
ljmp
mov
mov
aad
inc
push
and
call
or
lock
rorl
test
jne
jne
mov
andl
divl
test
ljmp
das
cmc
sbbl
pop
mov
push
ljmp
ja
dec
jno
and
pop
lods
and
daa
sarl
push
pop
shl
imulb
add
mov
mov
push
dec
jns
insl
cmpsl
inc
pop
and
bound
xchg
jae
xchg
inc
and
xchg
sub
aam
inc
pop
cmp
adc
mov
rcr
jnp
stc
in
repz
cld
and
aam
test
push
lods
addb
dec
mov
loopne
push
les
cli
ljmp
sub
mov
sbb
push
lcall
and
pop
inc
cmc
lcall
sbb
fadd
inc
push
test
mov
mov
inc
popa
inc
push
lock
rcl
dec
clc
ret
mov
mov
push
cmp
push
rcl
mov
in
push
add
test
aad
movsb
repz
or
rorl
mov
int3
lahf
insl
mov
cmc
cmpsb
adc
and
hlt
lock
call
inc
lret
cmc
pop
mov
jg
in
cmp
cltd
imul
push
or
loop
test
xor
add
dec
test
dec
xchg
xchg
repnz
dec
xor
hlt
inc
dec
fsubrl
jo
jecxz
cmp
mov
and
mov
cmp
aam
jnp
gs
inc
cmc
orl
jp
ret
leave
sub
cmp
inc
mov
sbb
outsl
sub
jae
in
dec
test
add
inc
or
mov
fldl
and
push
push
fisubrl
test
push
sbb
xchg
adcb
rclb
lock
cmc
shrb
dec
pop
jmp
push
int
loop
inc
cmc
or
push
xlat
movsl
mov
pop
mov
xor
arpl
sub
jae
adc
sbb
lahf
sub
lods
in
sub
or
fidivl
int
ret
popa
movsb
test
or
rolb
dec
inc
add
sarb
adcl
ja
js
cmp
jns
jae
lock
in
xchg
mov
icebp
and
cmpsb
inc
cmc
cmp
pop
sub
stos
sbb
mov
inc
inc
sub
cmp
xlat
movb
dec
push
sbb
popa
movsb
mov
pop
dec
or
aad
je
scas
push
out
inc
mov
inc
jae
cmc
subl
dec
and
fdivl
cmpsl
inc
lods
and
push
dec
pop
xor
das
shrb
xchg
jg
add
cmc
cmp
sbb
or
ror
pop
in
push
ds
sub
test
push
add
aam
in
fdivrs
rcr
mov
enter
enter
shlb
shrl
mov
addr16
cmp
stos
ljmp
xchg
les
add
cld
aas
aaa
mov
int
andl
add
xor
int3
mov
sarl
dec
roll
popa
jl
xchg
push
les
mov
and
push
dec
push
xor
fmuls
inc
cwtl
sbb
sbb
into
adc
mov
sarb
into
or
inc
fsubrs
inc
mov
push
pop
fwait
push
ret
add
or
aas
repnz
adc
add
mov
aaa
imull
cmpsl
filds
jbe
popf
sub
adc
mov
je
imulb
sbb
cmpsl
ja
imulb
divb
xor
adc
sub
leave
xor
and
jno
dec
mov
mov
imul
mov
insl
inc
push
and
subl
pop
and
adc
jl
hlt
int
fdivs
ret
cmp
daa
ret
and
inc
outsb
aas
mov
push
push
js
lods
push
rorb
imul
movsl
in
and
cmc
mov
int
sub
stc
aas
mov
xor
xchg
mov
cmc
popa
xor
sbb
sub
loopne
sbbb
int
push
test
les
out
pop
add
stc
add
stc
call
test
jne
std
movsl
divb
push
push
cmp
enter
hlt
aad
push
xor
mov
loop
pop
and
inc
sub
shl
xchg
add
jmp
repnz
dec
pop
call
xlat
dec
clc
std
cmp
and
mov
mov
cmc
enter
pop
mov
insb
dec
js
xchg
lds
push
gs
in
cltd
in
ja
jl
iret
lods
ljmp
cwtl
insb
pop
ljmp
inc
mov
xchg
jae
clc
mov
aam
inc
scas
ja
pop
xchg
mov
xor
icebp
jne
shlb
rolb
rcrb
insb
int3
dec
ror
call
dec
xor
iret
pop
jne
aaa
lods
adc
inc
add
cmc
and
and
nop
cmp
ja
lea
and
pop
dec
jne
icebp
jne
jg
sub
lcall
jl
dec
and
sahf
add
push
sub
lahf
cmc
enter
dec
iret
hlt
lds
ljmp
notl
add
fistpll
rcrb
sbb
inc
sub
lock
add
fnstcw
repnz
dec
mov
test
jno
jge
and
xchg
lods
pop
psubsw
daa
push
xchg
roll
or
or
and
or
mov
movsb
add
daa
mov
dec
cmp
or
jnp
lds
icebp
cmpsb
and
and
jno
inc
fidivrs
xlat
addr16
push
sbb
sar
jecxz
inc
lret
mov
push
hlt
adc
lds
cmc
scas
rcrb
fwait
cmc
outsb
jne
jnp
pusha
test
stos
mov
test
outsb
add
iret
add
cmp
xchg
push
divb
cmp
and
daa
sub
repz
xchg
cltd
push
adc
add
xchg
je
fisttpll
sub
test
inc
test
sub
shrb
xor
inc
leave
pop
mov
xor
shll
js
adc
dec
cwtl
push
xorb
fdivl
adc
mov
in
cmp
movsl
cmpsb
aam
pop
mov
cli
repz
pop
lock
movsl
xchg
aaa
mov
scas
ret
daa
mov
dec
sub
push
push
pop
daa
and
loope
dec
mov
cmpsl
bound
cmc
mov
or
aas
lock
scas
pop
xchg
jo
sub
lea
adc
out
pop
or
xchg
push
cs
mov
andl
sub
lds
push
fdivrl
inc
add
inc
jo
pop
dec
iret
test
cwtl
lds
inc
out
fsub
test
test
mov
ret
cmp
ds
mov
and
mov
mov
dec
lock
or
test
cmc
ret
fistpll
ss
cltd
cmp
subl
aad
movsl
insb
fstpt
leave
test
out
outsb
arpl
cmc
push
dec
rclb
int
addr16
cmc
mov
mov
outsl
clc
adc
int
and
test
sub
ds
dec
cli
lret
popf
dec
push
mov
stos
cwtl
push
dec
ljmp
aas
and
aaa
cmp
inc
adc
xor
add
xchg
ret
addl
mov
xchg
cld
sub
add
jne
shrb
aas
sub
add
imul
shrb
fwait
clc
shll
shrl
jne
movsl
cmp
add
mov
jecxz
jle
push
ret
inc
jns
or
and
stos
or
mov
sub
jmp
div
shll
or
cmpsl
nop
jae
dec
sub
push
dec
jecxz
xchg
aam
sub
aas
insb
mov
push
cmc
cmp
xlat
cmc
pop
lcall
add
adc
inc
cmp
lock
xchg
xor
xor
sarb
iret
mov
mov
test
fstps
cmc
lret
inc
mov
cmp
repz
push
popl
xor
test
dec
sub
ja
shrb
pusha
jns
dec
dec
cmp
inc
pop
dec
sub
jnp
jae
or
xor
lret
add
mov
and
inc
pop
data16
or
lret
cmp
push
int
xor
push
inc
fnstenv
pop
cmc
sub
add
movsl
scas
loop
fldenv
sarl
mov
xor
pop
test
mov
sbb
sbb
aad
inc
or
cmc
iret
jmp
inc
sub
and
jne
ja
popa
sbb
and
or
in
stos
adc
cmp
fdivs
fadds
stos
push
cwtl
lret
mov
mov
xlat
xor
pushf
ret
movb
repz
jo
push
andb
lock
arpl
pusha
sub
out
stos
inc
lcall
lods
movsl
dec
pop
lock
mov
dec
aam
and
and
pop
pop
lock
adc
or
add
je
add
push
shlb
mov
js
lret
mov
or
outsb
cmp
loope
jb
add
outsl
jg
icebp
cld
xchg
movsl
arpl
inc
jae
pushf
jo
cmp
xchg
cwtl
cmp
push
leave
leave
cwtl
arpl
cmp
lds
test
push
push
lret
jp
stos
jo
dec
mov
fsubs
pop
int3
out
push
mov
addr16
loope
inc
icebp
dec
add
or
nop
les
and
test
jo
test
xor
cmovs
iret
leave
sbb
push
test
sar
mov
push
mov
fistl
xor
andl
stos
daa
lods
pop
xor
mov
mov
aas
cmp
mov
dec
add
cmp
test
into
push
push
sbb
sbb
dec
pusha
jb
pushl
cmp
dec
and
cmp
sub
movsb
leave
leave
daa
inc
rcl
sbb
pop
add
push
mov
dec
test
mov
jle
gs
jae
sub
ja
in
cltd
shlb
aam
mov
pusha
dec
icebp
aaa
dec
pop
in
xor
jno
jns
or
fildll
xchg
xor
mov
jge
and
adc
ljmp
loop
cmp
xchg
mov
roll
andb
adc
mov
jp
mov
dec
int3
cmc
mov
pop
jno
dec
rcrl
iret
jno
test
and
sarb
push
fsts
cmc
std
mov
ds
add
test
add
mov
flds
inc
enter
inc
add
inc
push
jb
icebp
fwait
aam
sub
xchg
jmp
mov
dec
movsl
lods
gs
sub
or
pop
dec
or
mov
enter
and
jge
pop
sub
dec
push
mov
mov
ret
inc
sub
enter
out
add
push
gs
push
call
fmul
aam
push
loope
push
cmc
popa
enter
iret
out
insl
pop
inc
jnp
lret
cli
cmp
sub
sub
in
enter
inc
and
add
test
or
add
hlt
xchg
mov
addr16
outsb
xlat
repnz
outsl
mov
mov
jae
clc
out
jp
loope
cmp
insl
jmp
xlat
fistpll
pop
xor
ljmp
out
xor
sub
and
fisubrl
cmc
xchg
cmp
and
fsubl
popf
sbb
adc
jl
gs
xchg
test
jg
mov
pop
rcrl
je
and
push
jb
fstl
push
iret
push
adc
arpl
and
into
not
jle
pop
sbb
jb
leave
mov
les
push
imul
movsb
xchg
or
movsl
in
cmpsb
jg
cmpsb
fwait
sahf
push
sub
cwtl
mov
into
ret
movsl
shr
rcl
and
dec
les
adc
lcall
cmp
add
rcrb
popa
push
jns
rcrl
inc
push
mov
sub
push
adc
adc
xor
push
insb
enter
imul
or
nop
ss
call
xlat
bound
push
int
pop
ja
enter
arpl
pushf
test
dec
push
popf
inc
fcmovne
std
ljmp
jge
cmpl
es
xchg
pusha
lret
gs
pop
jne
jge
pop
xchg
dec
adc
orl
xchg
outsb
adc
jnp
aad
lret
cs
jmp
jge
sub
mov
mov
jge
sahf
sub
daa
mov
mov
sub
test
cmp
aam
mov
scas
in
xchg
divb
pop
sbb
ja
jns
fnstsw
dec
iret
subl
andb
adc
out
xor
fsubrp
iret
push
ss
hlt
xorb
lret
inc
cmc
aam
and
gs
stos
xor
mov
jb
pusha
inc
int3
cmc
mov
xor
jg
ret
in
sarl
adc
sub
jae
dec
lcall
push
mov
aaa
ror
iret
es
mov
inc
int
inc
hlt
jns
adc
out
pop
rcrl
imul
jp
nop
rcrl
add
je
or
mov
test
inc
cmp
ljmp
adc
pop
xchg
push
add
cltd
push
es
mov
or
xor
loopne
cs
sbb
ret
sub
popa
adc
add
add
fld
lret
out
ret
cmp
mov
aad
lds
movsb
cmp
dec
imul
dec
nop
fisttpl
push
in
xor
cmpsl
mov
in
pusha
test
jo
je
aad
rcrl
push
ret
loope
sub
cmp
les
cli
stos
cli
ss
subb
push
dec
loope
and
aam
xor
out
mov
mov
cltd
xchg
fcompl
cmp
xlat
orl
mov
pop
rol
xchg
sub
sarb
in
sub
fcompl
or
hlt
sub
xchg
fldcw
cmpsl
or
vphaddwd
jmp
icebp
movsb
test
cmp
lea
or
mov
imul
cli
push
test
jns
mov
xchg
faddp
loope
aad
and
push
and
cmp
inc
xor
ret
das
dec
aaa
fsubrl
xlat
idivb
pop
and
mov
dec
adc
xchg
cld
sub
mov
repz
xor
jno
or
cmp
mov
jecxz
adc
xchg
xor
inc
mov
mov
cmpsl
inc
mov
xchg
into
push
inc
test
out
push
jne
sub
xchg
mov
hlt
js
mov
iret
mov
insb
mov
mov
jbe
rolb
add
pop
cmp
mov
push
adcb
dec
daa
jne
xor
push
js
cmc
scas
popa
push
xchg
outsl
notb
dec
add
div
dec
and
dec
cmp
shrb
push
enter
loop
loop
add
fisttpl
jge
push
xor
les
or
out
jbe
out
inc
les
mov
pop
imul
scas
cmp
dec
jne
xchg
xorb
jp
pop
mov
xchg
or
lcall
iret
arpl
push
inc
cmp
fsubs
and
mov
icebp
ljmp
loope
jns
inc
push
xor
dec
dec
and
roll
mov
dec
cld
gs
lret
ror
aam
enter
dec
adc
loopne
out
and
inc
pop
or
mov
cltd
mov
push
xlat
mov
int3
ljmp
sub
roll
ret
and
ret
mov
dec
ja
int
push
push
incb
adc
inc
cmpsb
or
xor
lods
test
es
inc
and
xchg
and
subb
xchg
lods
add
dec
lret
sub
jmp
scas
cld
int
jnp
inc
jno
gs
icebp
fadd
mov
les
xchg
rcl
das
mov
mul
lcall
imul
aad
in
jl
std
jle
int3
aaa
fsub
xlat
out
int3
fst
dec
cmc
jno
popf
adc
loope
pusha
pusha
sub
lea
outsl
lds
movsl
dec
rol
cmc
pop
push
cltd
xchg
icebp
push
inc
enter
sbb
imul
cmpsl
icebp
js
leave
add
mov
je
arpl
cmp
test
inc
mov
cmc
xchg
aam
loop
lds
pop
dec
stos
or
cmp
out
in
lahf
mov
cltd
iret
pusha
lea
inc
xor
xchg
lds
roll
ja
out
or
sti
xchg
scas
xchg
popf
pop
add
or
jge
jo
jl
je
scas
outsl
movsl
or
in
xchg
lds
std
or
add
pop
dec
lahf
loope
pop
cli
aad
and
leave
adc
dec
adcb
mov
dec
mov
sub
inc
rcrb
lods
sahf
xchg
int3
sbb
add
sub
loopne
or
or
xchg
or
adc
push
xchg
lea
lds
sub
mov
jmp
push
loope
vmwrite
cmc
sub
fwait
enter
and
xchg
leave
fsubl
mov
cmp
movsl
movl
stos
mov
test
pop
mov
jbe
pop
dec
rol
push
aam
mov
pop
cmove
xchg
push
lods
and
lods
dec
cmc
iret
xor
js
mov
mov
fiaddl
gs
push
xchg
fcomps
andl
or
mov
stc
shl
rorl
inc
jo
pusha
pusha
mov
jo
andb
fs
mov
outsl
sub
sbb
imul
in
inc
in
stos
pushf
outsl
push
or
pusha
aaa
test
cwtl
pusha
mov
loopne
orl
xchg
dec
pop
xor
xor
mov
xchg
loope
mov
dec
and
mov
daa
cmp
and
aaa
pop
pop
fdivs
jl
test
mov
adc
cmpsb
pushf
imull
sub
loopne
xchg
movsb
and
mov
jle
fdivs
push
and
dec
push
pop
adc
sbb
pop
jns
jae
fwait
or
dec
std
adc
xlat
icebp
push
rcrb
xchg
incb
dec
xchg
and
decb
mulb
cmpsl
out
enter
arpl
push
dec
movsl
lret
mov
pop
lret
shrl
addr16
ja
sbb
iret
lret
pop
pushf
orb
pusha
jne
mov
add
xor
fldl
loop
inc
dec
xor
int
xor
shl
shll
push
lea
sub
cltd
cmp
adc
xor
lret
sub
pop
mov
push
adc
dec
xor
xlat
jns
es
outsl
inc
jno
jae
jne
jb
or
andb
leave
inc
shlb
push
imul
push
mov
sub
xchg
add
repz
jbe
ficomps
or
pop
xchg
xchg
jl
out
mov
in
aad
mov
dec
repnz
shlb
in
cmpsl
leave
push
dec
icebp
popw
leave
in
je
leave
jns
es
or
insl
sub
and
pop
inc
or
push
add
and
lret
cmc
int3
enter
and
clc
or
and
sub
jge
push
cmpsl
and
fildl
pop
fsubrl
dec
clc
mov
cmp
pop
fcompl
dec
dec
inc
push
hlt
outsb
adc
jge
pusha
jne
out
push
movsl
inc
loopne
sbb
xchg
push
gs
adc
mov
sub
pop
pushf
ror
movsl
ljmp
push
scas
push
jns
push
inc
push
icebp
fisttpll
stos
nop
cmp
and
push
jge
sti
mov
xchg
call
out
enter
sbb
xlat
mov
jmp
sub
jns
dec
cmc
sub
push
movsb
pop
jnp
fucomp
mov
xchg
test
lret
cmc
xor
xor
arpl
andl
stos
enter
test
out
and
andb
push
or
lds
pop
sbb
pop
adc
push
fsubs
adc
and
aad
or
xor
push
arpl
lahf
pop
test
pushf
jmp
mov
inc
sub
int3
mov
push
test
push
xchg
mov
mov
aas
cld
and
add
jo
ffreep
cwtl
mov
adc
outsl
inc
iret
mov
enter
xor
dec
insb
add
std
out
enter
fildll
jg
dec
pop
arpl
movsl
push
or
mov
push
jp
sub
and
je
add
mov
inc
xor
inc
mov
push
popf
jg
mov
pushf
roll
cmp
jae
or
pop
jae
cmp
test
rcr
cmp
lret
sti
jnp
shrl
leave
lds
test
dec
sub
sahf
push
jns
std
js
cmp
jecxz
pop
fldenv
decb
push
fwait
sub
mov
sbbl
cmp
xor
sub
loope
add
aam
jbe
popf
mov
xchg
loop
dec
fcomps
lcall
and
or
sub
mov
je
je
repnz
shl
xor
dec
imulb
movsb
sub
xchg
pop
sub
dec
js
lret
pop
sub
loope
and
in
ja
shll
lahf
xchg
cmp
xlat
fistpll
mov
xor
xorl
xlat
andl
push
push
push
sbbb
aam
inc
jae
fisttps
test
aaa
sbb
fsubs
inc
jp
mov
and
jbe
into
pop
push
sbb
and
adc
add
inc
pop
pop
fs
aad
xchg
push
fadd
aad
inc
inc
xchg
hlt
dec
movsl
leave
enter
sub
jecxz
and
std
mov
popa
pop
imul
push
inc
pusha
out
and
or
add
jbe
or
daa
movsl
outsl
push
addr16
adc
in
sarb
dec
dec
add
addr16
in
enter
mov
lods
sub
jge
fwait
lods
push
xchg
sub
test
inc
adc
in
or
popf
iret
jne
or
xchg
in
cmpsl
sbb
in
test
icebp
pop
adc
mov
mov
dec
les
scas
insb
push
aas
mov
sub
xchg
pop
adc
out
xchg
scas
jl
xchg
ja
push
sub
sub
lret
imul
mov
enter
push
dec
lea
sbb
sarl
push
sahf
mov
cmp
xchg
addr16
or
fdivrl
fidivl
push
xchg
cmp
sbb
push
aam
add
jnp
arpl
sahf
daa
mov
push
inc
cmpsl
addr16
clc
dec
sub
jo
jp
int3
std
pusha
push
das
and
ficoml
mov
mov
shrb
dec
stos
arpl
test
out
shrb
scas
sub
repnz
js
lret
js
rorb
push
cmp
lret
jmp
inc
sarb
inc
mov
movsb
jg
rcr
fwait
push
push
dec
dec
popf
imul
push
and
fwait
or
or
jp
rclb
sub
stos
xchg
incb
sbb
jnp
xchg
lds
or
pop
mov
rolb
cltd
orl
sub
cli
add
sahf
cmp
enter
mov
cmpsb
xchg
dec
orl
dec
mov
dec
loopne
and
dec
hlt
adcl
jo
mov
push
inc
inc
add
icebp
pop
cld
xor
scas
sbb
fistps
lods
jns
adc
xchg
and
out
ljmp
sahf
mov
sub
loope
jmp
push
mov
andl
repz
xchg
jle
in
pop
ss
insl
sbb
pop
xchg
cli
cs
pusha
int
jb
inc
push
stc
xchg
lret
adc
inc
and
fsubrl
push
je
aam
mov
cli
dec
inc
stos
jg
jo
xor
xchg
pop
and
scas
add
jp
cmp
cmp
je
inc
add
push
cmc
andl
cmp
shl
lcall
inc
test
loop
dec
arpl
sbb
or
jg
lea
dec
inc
mov
shll
movsl
hlt
test
and
int3
pop
add
jo
or
fcomi
adc
push
sub
inc
cmp
pop
outsl
je
int
jmp
sbb
clc
dec
int
cmc
xchg
fsubrl
jnp
leave
andb
inc
sub
test
or
add
mov
imul
popa
inc
xchg
xchg
nop
iret
mov
push
pop
pusha
mov
movsb
push
dec
int3
xchg
or
pop
mov
inc
fwait
lds
into
dec
dec
fs
mov
outsl
fsubrl
inc
add
jno
imul
inc
hlt
adc
jl
lret
in
test
push
inc
or
xorl
lahf
cmc
mov
daa
leave
fisttps
jae
xor
push
inc
push
add
in
inc
mov
loope
jo
test
bound
cmc
sub
iret
add
das
loopne
lret
aas
push
std
stos
pop
xor
test
rcr
test
inc
dec
movsl
lds
add
jmp
shl
sbb
pop
hlt
cmc
dec
out
adc
sub
mov
rolb
out
push
imul
jecxz
or
xor
cltd
and
jne
in
int
jno
into
jne
cmp
or
es
jb
sub
dec
push
push
pop
jb
movb
cmp
cmpl
dec
dec
movb
shl
mov
pop
push
lahf
add
xlat
add
sbb
lret
xchg
shll
pop
cmpsl
mov
cmpb
pop
xchg
test
inc
outsb
jne
mulb
jne
push
push
cld
aad
mov
xchg
sbb
ja
mov
lea
aad
push
cmc
aaa
movl
push
es
jnp
test
aas
mov
scas
xor
ds
adc
icebp
fwait
pusha
rorb
scas
cmpl
mov
cmp
ja
xchg
jle
mov
aas
add
cmpl
and
daa
ss
sbb
push
lods
dec
and
and
int
dec
xlat
enter
and
dec
out
incb
sub
lret
xor
add
aad
insl
mov
mov
adc
stos
fwait
adc
mov
adc
and
jmp
shl
int3
les
fcom
loopne
enter
and
sub
push
mov
fistl
iret
mov
pop
dec
aam
shll
xchg
popf
mov
pop
icebp
arpl
adc
or
xlat
or
mov
cmc
frstor
xchg
cmp
and
sub
rolb
xchg
xlat
aam
lods
and
shlb
mov
mov
and
stos
mov
inc
loopne
leave
inc
hlt
gs
mov
push
or
scas
push
in
jo
jae
nop
imul
inc
nop
dec
and
push
xor
add
clc
out
mov
jne
mov
adc
lods
pop
mov
lock
inc
jne
xchg
xchg
sub
dec
sub
or
stos
pushf
lea
ud1
lret
push
fstpl
inc
lret
sti
mov
out
xor
jbe
clc
add
ret
mov
adc
push
lods
cmp
xchg
ret
inc
jg
xchg
pop
jno
cmpb
enter
xchg
fcomp
fcmovu
arpl
push
test
ja
or
mov
jle
pop
jae
inc
addr16
shrb
mov
nop
fcmovb
je
sub
arpl
cmp
pop
or
shlb
jmp
std
adc
imul
add
dec
mov
cmp
jnp
lock
sbb
lods
mov
cld
mov
or
nop
arpl
lret
sti
xor
ja
pop
jne
push
or
sbb
aam
lods
mov
mov
add
stos
add
ja
lcall
ficoms
mov
jle
rcrb
stos
xor
test
stos
pop
addr16
push
jge
jp
lds
cmpsb
mov
xchg
out
movsl
pop
ja
pushf
js
dec
add
or
xchg
push
and
dec
push
test
dec
cmc
push
mov
sbb
inc
js
mov
adc
lcall
dec
mov
dec
gs
xor
cmc
jo
addr16
mov
inc
push
lea
movsb
jb
push
add
pop
inc
ljmp
ret
xor
mov
lods
xor
inc
mov
adc
add
pop
push
sub
and
enter
pop
dec
push
popa
rorb
fstl
in
and
rcr
cli
adc
jle
ret
lds
lret
sub
jnp
bound
leave
rcrl
sahf
add
inc
mov
repnz
lcall
std
xchg
fldcw
add
pop
in
in
shll
xor
push
test
sahf
jl
jbe
or
imul
jno
cs
dec
mov
sub
push
testl
in
cmp
cli
call
je
sub
mov
lret
and
sahf
ret
sub
pop
mov
or
dec
shll
insb
jle
cmp
hlt
xchg
adcb
jmp
mov
jnp
jno
outsl
dec
addr16
inc
xchg
xor
cmc
mov
xchg
popa
ljmp
or
dec
or
into
pop
insb
xor
popa
lods
cltd
cmc
mov
das
jb
sub
lds
inc
sub
mov
rorb
pop
pop
out
add
and
notb
pop
sbbl
dec
mov
adc
aam
sub
aad
sbbl
cmp
dec
mov
imul
popa
mov
jne
sahf
testl
mov
jle
aaa
fdiv
push
cmc
jge
inc
sub
xchg
jl
push
pop
bound
mov
sbb
inc
push
loop
test
mov
shlb
dec
mov
aaa
cmp
mov
inc
push
lret
push
or
sub
into
int
sub
push
inc
aas
inc
lds
xchg
out
jmp
out
outsb
add
nop
shlb
and
pop
fcoml
test
xlat
xchg
call
inc
xchg
jp
sbb
jp
jecxz
inc
fs
ret
or
push
adc
mov
push
scas
nop
int
xor
outsl
pop
fs
xchg
jne
inc
xlat
pop
sahf
xchg
jg
outsb
push
into
les
push
mov
or
push
sbb
pop
fisttpl
mov
jae
xor
push
js
mov
mov
lds
push
cmp
dec
adc
out
lea
loope,pt
mov
mov
pop
sub
cmp
xor
js
addr16
aad
sub
rclb
dec
xor
inc
out
rolb
mov
out
cmp
mov
and
bound
inc
or
aas
adc
lcall
mov
dec
or
dec
xorl
leave
hlt
out
cwtl
lcall
subl
pop
dec
daa
xor
enter
pop
pop
test
iret
push
mov
orb
pusha
arpl
add
les
aam
add
les
ltr
adc
cmp
inc
adcl
dec
lds
inc
es
xor
sub
cmp
xor
add
fdivrs
dec
shrb
xchg
shl
add
jae
dec
int3
inc
loop
lds
dec
stc
add
mulb
sbb
scas
mov
call
in
push
mov
cmp
adc
mov
lret
and
cli
sub
xchg
cmc
test
pop
cmp
push
test
ds
mov
add
stos
xor
dec
or
or
lods
ret
ficoml
iret
add
test
call
rorb
or
mov
mov
xlat
sahf
adc
ja
dec
aaa
roll
dec
repz
hlt
xchg
lods
jecxz
std
movl
xchg
icebp
pop
decl
movsb
push
mov
cmpsl
push
aas
ds
fs
push
movsb
inc
fmul
enter
sbb
dec
hlt
test
shlb
xchg
dec
testl
int
loop
test
cmp
xor
xor
das
aad
cli
mov
add
aam
pslld
leave
add
insl
xlat
test
jmp
dec
inc
stos
addb
jnp
dec
cmpl
inc
jge
push
dec
aas
and
rclb
jo
dec
push
cltd
pop
hlt
mov
mov
cwtl
dec
movsl
test
mov
pop
cld
out
jp
ja
lcall
mov
dec
insb
xor
xor
dec
xor
push
push
les
std
and
mov
xor
add
pop
rorl
cld
xchg
adc
ret
shl
std
je
and
xchg
imul
sbb
scas
sub
jb
movb
ds
mov
push
das
loopne
addr16
cmpsl
rcrb
jne
add
inc
idivb
dec
pop
mov
dec
jo
ret
lea
fisubrs
fnstcw
insl
xchg
dec
mov
dec
pop
add
insb
lods
aaa
dec
out
pop
cltd
or
sbb
arpl
sub
and
jecxz
cmp
or
sarl
dec
sbbl
dec
ds
out
cmc
sbb
out
ss
adc
mov
fcmovbe
in
arpl
bound
add
inc
fsubrl
aad
mov
xchg
imul
adc
leave
inc
sub
sub
xor
popf
and
movsb
cmpsl
jge
int3
popa
shl
push
xchg
adc
sbb
lea
push
hlt
jns
mov
outsl
jle
mov
adc
dec
cmpsb
cltd
ret
inc
push
pop
and
lahf
inc
adc
cs
adc
fstps
sub
aas
dec
pop
rolb
mov
or
jmp
adc
imulb
mov
push
jns
push
adc
data16
pop
mov
jne
pusha
loop
inc
ds
pop
lea
clc
in
lret
xor
dec
pusha
inc
add
imul
jns
inc
fadds
aas
sbb
int3
insb
shrl
and
or
sub
inc
adc
mov
fisubrs
inc
insl
into
daa
inc
in
lcall
adc
les
mov
add
pop
movl
cmpsl
roll
insl
cmp
adc
out
stos
sbb
cwtl
ret
and
sbb
imul
lret
add
jns
dec
cltd
or
arpl
sub
in
inc
out
leave
inc
jno
mov
sti
cmp
gs
and
mov
sub
aam
mov
xor
mov
cld
out
fcmovnbe
rcr
and
xor
fbstp
mov
loop
loopne
mov
js
or
sbbl
dec
aas
in
mov
sarl
pop
pop
pop
add
fsub
cmp
ds
fdivrl
dec
dec
aam
xor
out
sub
aas
push
push
dec
inc
cmc
sti
and
xor
dec
push
jb
mov
in
jno
je
dec
outsb
rcl
test
leave
int3
jo
ds
pop
das
outsb
or
outsl
mov
test
in
repz
movsb
insb
test
sub
movl
clc
jge
into
insl
mov
subl
aad
adcl
xlat
orl
int
shrb
das
cmp
dec
daa
lret
lahf
cmpsl
outsl
pop
cmpsb
mov
mov
mov
xchg
add
jae
push
gs
cmp
int3
shl
dec
mov
scas
arpl
xor
adc
inc
outsb
add
pusha
shrb
pop
or
popf
pop
fs
inc
movsb
lock
push
sub
dec
xchg
imul
inc
mov
xor
push
ljmp
add
outsb
adc
jo
inc
mov
scas
std
push
adc
int
mov
mov
jno
push
imul
xchg
popf
mov
daa
adc
xlat
pusha
mov
sbbb
call
gs
sbb
cmc
shlb
bound
sarl
and
xor
popf
lret
lret
ja
inc
cmc
or
mov
or
push
cmp
inc
addl
ror
fnstsw
fnsave
jns
es
add
or
mov
orb
push
fs
mov
popa
jns
leave
popf
mov
in
xchg
leave
adc
jne
sbb
dec
cmpsl
imul
ja
shlb
shl
pop
xlat
fisttpll
mov
xchg
call
lock
vpackuswb
jle
and
xchg
les
mov
imul
inc
xlat
test
cmp
jg
stos
mov
inc
inc
loope
dec
jmp
sub
movsb
pop
cmc
rol
mov
insb
mov
vandnps
cmp
adc
pop
scas
xor
lret
decl
dec
mov
add
cltd
pop
jge
inc
sbbb
mov
les
cmp
push
js
cmp
add
dec
lods
cmp
sarl
jo
adc
lods
lea
push
in
push
mov
in
sahf
test
cli
push
mov
int3
sahf
jmp
adc
lret
ja
sub
bound
xor
xchg
xor
mov
dec
add
inc
cmc
mov
xchg
lods
dec
jne
pop
mov
jge
lret
xchg
push
sahf
in
dec
cwtl
xor
pop
cld
sub
fldt
or
or
lods
imul
jb
add
cmp
fistpl
fldcw
lret
insb
in
insb
int
int
sub
pop
xlat
dec
mov
jo
mov
xor
add
pop
jae
cmpsb
mov
jo
xor
inc
aaa
sub
xor
dec
lret
ret
sub
xor
ret
hlt
pushf
adc
fdivp
and
cmp
sub
push
ljmp
and
rolb
mov
aad
rorl
pop
dec
mov
js
pop
jns
push
idiv
testl
stos
mov
scas
jle
lods
addps
xchg
mov
lret
xor
aam
jns
xor
adc
loop
nop
enter
enter
jae
inc
and
lcall
jle
inc
sbb
shrb
add
and
push
and
gs
mov
aad
sub
adc
mov
arpl
sbbl
and
jns
dec
pop
lret
gs
loop
loope
jo
cli
imul
pop
fldenv
inc
aaa
cltd
hlt
cmpsb
cltd
xchg
jbe
popf
inc
or
fmuls
cmpsb
jns
scas
shll
stos
or
cmpl
pushf
loopne
add
aaa
aas
call
mov
inc
add
inc
sbb
push
and
in
inc
sbb
outsb
push
icebp
fcomps
dec
add
sarb
pusha
or
out
xchg
jecxz
or
fndisi(8087
icebp
lds
jmp
jmp
push
cld
rorb
inc
xor
mov
pop
adc
add
sub
fwait
lcall
jg
pop
arpl
nop
push
and
jg
mov
in
inc
test
xor
and
push
in
push
mov
mov
jne
hlt
std
pop
lock
xor
lcall
movsl
jne
mov
jno
add
lods
adc
ljmp
rol
pushf
pop
outsb
adc
sub
inc
loop
movsb
adc
repnz
sahf
stos
and
jge
or
pop
jns
inc
mov
das
jae
dec
pop
lods
xchg
stos
popf
add
std
ss
scas
nop
add
jo
js
outsl
sti
icebp
dec
push
pop
ret
jno
jae
xor
test
call
mov
stos
and
mov
inc
jp
pop
xor
nop
imul
mov
cmpsb
fdivrl
sbb
mov
sub
enter
decl
pop
push
cltd
xlat
jg
sbb
repz
pop
sbb
mov
cltd
adc
sbb
add
idiv
nop
fisubs
cmpsl
jp
sbb
cwtl
arpl
push
cmp
cmp
movl
xlat
push
cltd
xor
cltd
and
enter
adc
pop
push
inc
rcl
jnp
std
sub
dec
hlt
enter
adc
sub
das
adc
insb
cmp
and
out
in
xrelease
dec
scas
sub
lcall
cmpsb
fwait
arpl
pmulhw
aam
pop
dec
xor
push
mov
shll
movsl
mov
cmp
test
jne
mov
push
dec
test
loop
fwait
pushl
faddl
enter
hlt
fistpll
cmp
nop
das
sub
xlat
sub
fildl
ds
insb
pop
popa
adc
push
lea
xor
cltd
test
scas
rolb
hlt
rorl
out
ret
push
hlt
repnz
shrl
push
divb
push
xor
out
dec
push
stos
jmp
addr16
jmp
dec
xor
mov
xchg
call
nop
xorl
mov
and
cmp
xchg
or
inc
mov
pop
add
dec
insl
cld
test
inc
cli
cmp
inc
sahf
lods
ljmp
int3
jge
mov
jecxz
sub
call
push
push
pop
testl
add
pop
xor
test
xor
or
mov
in
add
cmc
pop
add
ret
cld
sub
js
aad
ret
or
xor
icebp
lret
inc
jmp
shrl
lds
sbb
push
and
ret
leave
dec
mov
push
pop
and
push
aam
fisttps
cmpsb
mov
push
ret
inc
repnz
test
cmpsb
call
int3
mov
cmp
mov
in
iret
dec
mov
mov
mov
mov
aaa
lret
pop
stos
jle
pop
xor
push
mov
decb
xor
mov
dec
dec
sub
mov
jle
push
cmp
dec
xor
mov
dec
rorl
dec
jmp
or
inc
pop
loope
rcrb
mov
cmpl
jae
sbb
cltd
mov
pop
or
dec
aas
add
or
pop
mov
add
fs
mov
lock
inc
xchg
mov
xchg
adc
xchg
into
rclb
icebp
sub
or
mov
shrb
add
and
pop
mov
adc
mov
adc
rol
dec
xor
shll
loop
push
lods
dec
dec
xchg
sub
xchg
or
adc
leave
xchg
xchg
in
push
jge
lea
js
lcall
lcall
adc
pop
fs
enter
add
ds
cmp
je
enter
aas
pop
cmpsb
or
bound
pop
sub
push
or
dec
cwtl
sub
sarl
rolb
sub
lea
leave
sbb
add
push
pop
shrl
sub
sbb
and
aaa
lret
and
dec
cwtl
inc
mov
sahf
mov
cltd
add
mov
dec
mov
subb
fs
icebp
cmpsl
out
xchg
insb
xor
inc
scas
and
enter
fcomps
lds
dec
int
push
mov
jmp
mov
push
shll
xchg
inc
xchg
jge
dec
lahf
cmp
dec
repnz
inc
shrl
push
and
add
dec
pop
inc
inc
movsb
xchg
push
icebp
movsb
add
rorl
dec
mov
mov
mov
movsl
shll
add
push
leave
mov
xlat
pop
and
lds
push
sub
push
lret
and
popf
and
jecxz
adc
and
movsb
lds
push
or
fwait
andb
or
xchg
dec
pushf
push
cli
mov
lret
dec
push
inc
dec
jge
les
fcoms
xor
and
fiaddl
push
sub
pop
push
das
jge
mov
inc
dec
shrb
lret
add
imul
lea
test
pop
pop
lods
fmull
movsl
jno
js
jne
xor
push
push
scas
xchg
push
test
test
push
cmp
faddl
and
cmpsl
mov
and
icebp
jb
xor
ret
mov
fldenv
cmp
inc
push
mov
lds
dec
dec
pop
es
mov
and
cmp
add
push
ret
inc
test
xor
pop
dec
cmp
cmp
movsb
and
dec
sub
sbb
dec
lea
lds
add
js
dec
enter
xor
popa
dec
cmc
lret
dec
std
lret
cli
popa
pop
pop
pusha
add
xor
test
mov
lret
sub
pop
flds
sbbl
rorl
inc
add
pop
leave
aas
addl
pusha
enter
and
and
cmp
jmp
imul
push
lret
roll
cmp
adc
jns
stos
xchg
xorl
xlat
inc
dec
pop
mov
jns
mov
mov
push
ret
inc
or
pop
inc
and
cmp
jne
popf
cmpsl
mov
ja
add
mov
or
pop
push
daa
test
push
pop
lea
cmc
and
icebp
mov
cmp
sbbl
pop
lcall
lahf
adcl
pusha
xor
icebp
mov
fprem1
test
addl
data16
cmp
data16
dec
fldcw
and
repnz
dec
gs
mov
pop
gs
dec
xchg
icebp
std
and
jl
xchg
sbbl
mov
inc
lock
inc
and
mov
mov
cmp
cltd
mov
sub
call
jge
mov
xor
push
and
jne
mov
nop
lcall
shl
cmpsb
jne
rclb
sbb
mov
test
push
add
lods
pop
js
call
test
scas
int3
gs
sub
push
inc
fbld
inc
push
orl
dec
imul
inc
rcr
cmpl
mov
xor
cmpsl
add
lahf
dec
and
jecxz
dec
mov
jne
xchg
inc
aam
leave
nop
aad
mov
stos
aas
imul
and
rclb
inc
sbbl
jno
xor
popa
inc
and
insl
int3
shl
aam
and
add
mov
rcrb
ret
loope
iret
ret
dec
add
or
ljmp
mov
shll
push
pushf
inc
jns
inc
mov
shll
inc
popf
sbb
int3
dec
add
rclb
xchg
or
dec
cwtl
lret
inc
gs
jge
sbb
push
pop
orl
jae
xchg
es
add
jb
mov
xchg
fdivs
movsl
mov
jecxz
dec
push
dec
pop
ds
mov
sub
push
fwait
xchg
lods
xchg
fldcw
and
out
icebp
and
fsubs
shrl
or
and
arpl
fbstp
inc
sub
ret
jnp
pop
cmpl
mov
sub
cmp
and
cmp
test
mov
test
daa
cmp
sub
push
adc
cs
xchg
int
xlat
dec
jp
jno
daa
mov
xchg
gs
jne
pop
jno
fwait
and
lds
popa
lock
outsl
xchg
cmp
test
and
js
imul
mov
inc
into
push
fsubl
jo
addr16
dec
vpsraw
test
mov
sub
arpl
or
mov
mov
mov
icebp
test
adc
mov
cmp
mov
jnp
arpl
add
xchg
decb
cwtl
shll
adc
int3
fdivs
pop
push
addr16
cmp
mov
push
imul
xor
sub
cmpsb
test
movsl
dec
ret
nop
movsl
mov
cmpsl
xor
sub
pop
pop
pop
dec
xlat
push
pusha
lea
mov
lods
fs
mulb
cmp
xor
pop
inc
push
fimull
mov
cmp
inc
mov
mov
xor
cmp
aad
mov
mov
pop
rcrl
mov
or
push
cmp
mov
cmp
and
push
repnz
pop
xor
outsb
sub
cwtl
ret
dec
lock
xor
fstl
jge
fdivrl
ja
xor
fidivl
push
lods
pop
int
xchg
orb
inc
push
ficompl
mov
aaa
sbb
xor
dec
push
mov
mov
or
push
in
scas
mov
cmp
cmpsb
mov
add
ficoml
pop
pop
push
cld
stos
push
and
sub
insl
and
push
pop
or
sarl
push
test
ss
pop
mov
fcmovnu
xor
rcr
sub
pusha
inc
pop
xor
sti
outsb
and
cmpsl
sub
call
daa
sub
lret
and
push
sub
jmp
pop
xchg
dec
push
inc
jno
adc
push
icebp
in
cmpsl
sub
mov
pop
pop
outsb
cmp
daa
mov
fsubs
sub
dec
dec
movsl
ja
mov
lcall
rol
mov
cmp
push
movsl
adc
push
aam
cmp
cwtl
imul
push
adc
dec
cs
push
int
or
or
stc
clc
orl
xchg
push
fadds
dec
repnz
lds
cltd
adc
mov
sbb
xor
aaa
dec
mov
mov
dec
cmp
add
dec
dec
lods
mov
xchg
inc
pop
test
xchg
or
mov
das
sub
adc
mov
mov
mov
inc
lods
mov
cmpsl
repnz
inc
lea
sbb
push
push
dec
and
orb
iret
xchg
cmpsl
adc
mov
add
and
stos
inc
mov
shll
aaa
rolb
push
jnp
dec
and
inc
sub
bound
dec
and
pushf
xchg
jp
xchg
dec
push
cmp
mov
mov
test
ss
pop
mov
sbb
es
cmp
cli
sti
mov
daa
ret
cmp
test
mov
dec
pop
xor
xor
stos
into
jno
mull
inc
je
addr16
daa
lds
adc
and
sub
mov
pop
mov
xchg
cld
shl
leave
iret
and
push
out
add
or
push
or
xchg
xchg
and
shrb
les
pop
iret
leavew
adc
subl
dec
mov
push
aam
dec
xor
rolb
jo
das
shlb
pcmpeqb
faddp
andb
pop
mov
push
sbb
xor
xor
ja
mov
je
sti
push
inc
dec
lods
pop
enter
dec
and
cmovle
add
cld
arpl
and
pushf
cmpsl
mov
rcll
pop
and
and
test
scas
dec
sub
pop
rcr
stos
movsb
cld
xchg
enter
std
mov
pop
mov
push
inc
cmp
fmul
ret
mov
loopne
rorl
vmovaps
jne
dec
jg
adc
push
mov
addl
push
aas
sub
test
jge
mov
gs
out
cmp
dec
lods
push
shl
mov
lods
and
daa
vpcmpeqw
repnz
insl
pop
enter
sub
cs
ficomps
subl
inc
add
lods
stos
clc
inc
js
add
mov
push
vmovaps
inc
push
movsl
pop
out
call
inc
js
pusha
dec
scas
jge
mov
sub
adc
pop
add
push
lods
xchg
in
clc
mov
fstpt
sub
pop
push
shl
sti
inc
push
fs
call
scas
daa
push
or
add
jle
pop
mov
ljmp
shlb
add
dec
mov
mov
loope
pop
in
inc
loope
push
jns
jnp
imul
lock
test
cmpsl
xor
jge
cmp
mov
push
push
pop
push
negb
dec
or
pushf
and
dec
and
xor
cs
hlt
cltd
mov
or
adcl
jge
and
inc
xor
inc
jno
mov
jne
insl
mov
scas
mov
gs
jns
das
push
dec
and
cli
insl
fmull
es
sti
dec
orl
mov
mov
pop
sub
out
loop
hlt
xchg
sti
mov
std
sub
adc
push
hlt
call
inc
xorb
inc
lds
loopne
iret
mov
arpl
add
jne
add
add
add
movsl
fistpll
mov
mov
xor
mov
and
lcall
std
insl
hlt
cwtl
fadd
dec
inc
sub
inc
add
sub
test
or
push
je
stos
inc
push
aas
jb
movsb
stos
pushf
push
xchg
out
xchg
cld
scas
mov
stc
mov
sahf
pop
and
loop
jge
dec
or
cs
jne
jle
ljmp
in
jbe
and
loop
xchg
xor
xchg
lock
xor
adcl
push
fsub
test
add
push
jns
sbbl
adc
cmpsb
mov
call
xchg
mov
push
cli
cmpsb
inc
ror
xchg
add
pop
jge
inc
ss
arpl
push
subb
mov
mov
daa
mov
and
jge
subl
cmp
mov
or
push
fdivs
inc
in
in
inc
int
data16
movsl
out
xor
adc
xor
nop
sub
inc
dec
and
mov
xchg
push
add
cs
push
enter
jge
pop
movsl
mov
std
pop
xchg
stos
aas
push
inc
int
and
loopne
jne
ljmp
adc
push
aas
and
sti
movsl
lahf
stc
jo
nop
mov
cmpsb
dec
loope
ds
mov
hlt
stos
pop
dec
push
inc
push
inc
dec
loop
jne
in
out
gs
movsl
out
xor
xor
jl
push
dec
mov
sub
jne
add
fwait
cmp
test
fwait
cmpsb
mov
ljmp
ds
fstpl
leave
push
or
push
xchg
test
test
or
xchg
pop
sahf
daa
loopne
inc
stos
fadd
xor
hlt
sbb
lea
push
cltd
inc
dec
push
mov
pop
or
cwtl
sub
inc
jne
push
ja
jae
addb
jmp
leave
dec
inc
mov
scas
add
push
cmc
xor
ret
push
dec
xor
aaa
in
fwait
mov
fnstcw
sbb
cli
dec
add
mov
imul
insb
jns
popf
sarl
push
push
pop
rcrl
inc
or
imul
idivb
stc
and
push
sub
addl
or
jle
pop
mov
outsb
insl
or
mov
ja
loope
cmp
push
lret
dec
cwtl
dec
orb
adc
cs
fdivrs
rorl
shll
pop
lea
adc
call
aaa
test
mov
sbb
mov
lds
mov
dec
mov
into
pop
jbe
push
lds
ss
ffree
mov
sub
cmp
xchg
and
outsb
pushf
fs
movsb
cld
lret
cmc
xor
xor
fmull
sub
sub
nop
pop
mov
xor
fwait
and
sub
xchg
test
imul
push
inc
fldenv
and
push
push
pop
movsl
int3
or
inc
inc
lret
add
push
adc
out
adc
pop
adc
int
and
push
repz
loopne
mov
push
loope
repnz
stos
sub
mov
jecxz
cmp
cmc
imul
mov
push
fldenv
incl
dec
gs
insl
jp
jg
inc
or
aam
sub
test
sub
iret
xor
inc
push
lods
pop
cs
cmpsb
mov
rorb
inc
imul
jg
in
ljmp
pop
movsl
mov
daa
ds
cmp
loop
cld
mov
ja
std
inc
aam
outsl
mov
aaa
cmc
mov
pusha
fimuls
imul
jne
xchg
shr
lret
test
cmp
pop
imul
stos
push
cmp
or
dec
push
imul
dec
shrb
mov
xchg
adcl
dec
cmc
push
push
dec
leave
inc
movsb
shlb
idivl
rcrl
xchg
fldl
leave
pusha
ljmp
out
pusha
and
dec
jge
push
inc
xor
cmp
dec
xor
jmp
dec
mov
mov
fcompl
add
aas
movsb
enter
shlb
mov
outsb
js
xor
inc
inc
xor
jmp
in
shlb
mov
mov
ds
scas
test
dec
cld
sub
js
add
xchg
pushf
sbb
xor
test
push
in
into
arpl
ror
and
ret
cmp
jnp
xchg
lds
outsl
jg
jae
in
dec
adc
jb
xchg
lock
inc
mov
dec
mov
ja
out
scas
test
xchg
push
sti
push
daa
jle
xlat
lods
iret
adc
loopne
cmp
push
mov
push
enter
test
stos
jne
fimull
dec
in
lods
std
dec
es
jne
int
jg
popa
fcompl
xor
int
in
or
sub
inc
dec
imul
cmpl
mov
jbe
pop
std
jbe
out
push
jno
test
mov
pop
mov
and
dec
xor
push
pop
shrl
jg
mov
rclb
stc
loop
stos
add
jl
sbb
push
shll
cmpsb
repz
fwait
push
xor
mov
fdivrl
pop
mov
arpl
shrb
arpl
push
lock
loopne
mov
leave
out
leave
sahf
aas
jnp
add
xchg
jno
dec
push
lea
jge
std
scas
dec
jae
lea
popf
sbb
arpl
gs
mov
imul
fsubs
aam
inc
sbbb
out
cmp
stos
shll
dec
sahf
jge
pushf
adc
shrb
in
pop
sub
and
mov
jns
test
xchg
arpl
rorb
mov
mov
jnp
jge
xor
mov
and
lret
dec
jb,pn
shlb
int
push
pop
push
arpl
adc
rcl
insl
inc
adc
and
adc
or
dec
cmp
adc
decb
mov
mov
sarb
dec
or
sahf
add
jne
roll
sar
addb
cmc
mov
test
dec
imul
dec
shrb
push
and
mov
aam
ds
adc
loop
and
imul
mov
and
push
xchg
push
sub
lret
adc
add
push
mov
imul
push
inc
push
xor
dec
dec
adc
dec
shufps
mov
inc
jmp
cmp
cmp
lds
xorb
enter
stos
aad
xor
sub
arpl
xlat
cmp
mov
outsl
test
push
icebp
jo
push
push
inc
mov
stc
jne
shl
cld
mov
sub
popf
push
test
in
mov
jne
inc
movsl
jl
lods
mov
or
inc
add
lds
lahf
xchg
shlb
cs
xchg
inc
or
das
mov
jb
adc
cmpsl
imulb
in
stos
sbb
xor
ljmp
xor
cmp
sbb
jg
jns
call
sub
xchg
jno
jne
jb
leave
pop
jae
add
xchg
sbb
mov
xor
or
push
pop
dec
fstps
cmp
stos
loop
lds
or
push
push
inc
mov
in
rorl
and
sub
daa
and
add
aas
mov
xor
ss
jg
cmp
lret
lods
xchg
cmp
and
shl
ret
pop
jl
mov
push
xor
or
xchg
cwtl
xchg
out
pop
jge
shl
push
and
lret
xchg
dec
stos
mov
xchg
fmull
aas
adc
mov
imul
xchg
shrb
mov
pusha
insb
addr16
pop
shll
xchg
cmp
jbe
push
jle
dec
lahf
xchg
ret
push
add
icebp
dec
stos
test
or
pop
mov
cltd
cli
mov
adc
in
repz
les
and
gs
arpl
jno
cmc
sub
or
out
and
inc
jo
pop
dec
test
dec
aad
sbb
mov
sbb
and
ret
test
cwtl
lods
add
cmp
sahf
and
pusha
sub
movsl
aad
jge
mov
das
repnz
leave
inc
fsubl
xor
sub
dec
and
rcll
push
mov
cmpsl
lods
xchg
push
and
call
mov
enter
push
ljmp
xchg
sti
out
sbb
ret
popa
into
xchg
push
shll
lret
or
jl
test
or
int
pop
sub
dec
pop
mov
mov
fsubs
sub
aam
enter
mov
add
jg
pop
dec
push
arpl
stos
inc
jno
loop
int
out
into
insl
mov
adc
xor
daa
inc
jg
out
and
inc
dec
and
add
adc
mov
or
jnp
push
int
pop
mov
xor
ret
enter
cwtl
and
test
mov
mov
int3
and
push
dec
call
stos
inc
mov
jg
sub
popf
add
or
cmp
inc
ret
cltd
dec
inc
mov
mov
or
movsl
jg
jle
and
subl
shrb
and
jmp
movsl
adc
pop
adc
xchg
test
mov
add
movsl
add
sbb
pop
xor
adc
cmp
push
cmc
arpl
cmp
arpl
dec
jb
xchg
dec
fdivs
push
loope
fstpl
xchg
nop
rorb
daa
movsb
shufps
jg
imul
xchg
sbb
cmp
outsb
dec
inc
mov
cwtl
ljmp
jns
jp
popa
gs
arpl
jno
cmc
movsl
mov
pop
xchg
dec
add
fnstcw
jno
cmpsl
arpl
xor
cld
xchg
popf
and
imul
push
add
pusha
jb
icebp
or
push
push
ds
sbb
pop
jp
inc
sub
data16
movsb
sbb
pusha
imul
pushf
jge
stc
icebp
lods
pop
mov
mov
arpl
jmp
stos
xor
inc
xchg
xor
pop
or
stc
sti
shrb
push
mov
inc
mov
ret
xor
stos
mov
cmp
add
push
dec
lret
insl
ja
mov
adc
jecxz
cld
in
mov
push
add
push
daa
and
popf
insl
mov
mov
mov
mov
rclb
je
insl
push
sahf
aaa
into
mov
jne
xor
push
sbb
test
stos
enter
sbb
inc
lret
adc
shrb
jne
mov
aad
xor
shlb
jno
and
or
xor
call
mov
adc
inc
js
dec
jne
imul
sbb
in
xor
outsl
mov
or
scas
pop
shrb
aad
andl
pop
jnp
daa
sbb
mov
mov
aad
push
and
fstps
lret
mov
mov
xor
sub
fisubrs
orb
push
ffree
pop
scas
ja
jge
loop
in
jno
mul
dec
loope
out
inc
inc
and
inc
or
bound
hlt
inc
jne
dec
add
je
rorb
ret
jae
inc
jl
xchg
sub
ja
cmp
add
leave
mov
add
loop
lds
xor
cmc
add
push
and
pop
pushf
cs
xor
xor
push
jge
ficoml
push
mov
icebp
lea
inc
cmp
fldl
and
and
inc
cmp
popa
mov
mov
pop
inc
sahf
mov
add
into
add
sti
ljmp
repnz
cmp
add
leave
xchg
push
mov
adcb
xchg
arpl
or
addr16
leave
in
lock
ja
mov
xchg
jno
xor
dec
mov
mov
pop
pop
mov
push
shl
push
in
sub
lcall
imul
data16
xor
lds
scas
jmp
jp
pop
xchg
sbb
bound
fnsave
lea
xor
shlb
inc
add
insl
ds
imul
addr16
add
xlat
and
push
adc
push
sbb
lret
scas
loopne
fdivr
ljmp
lret
test
push
mov
sub
movsb
into
jbe
jecxz
cmp
pop
jle
mov
jg
sub
rcl
push
test
xlat
xor
daa
push
mov
sub
dec
mov
or
pop
xchg
cld
push
cmp
cltd
inc
inc
ds
lahf
movl
sub
inc
test
dec
mov
repnz
fidivrs
cli
mov
mov
inc
mov
xor
or
and
jb
push
jecxz
inc
fstpt
shlb
addb
popf
dec
inc
leave
movsb
inc
ret
cmp
movsl
pop
roll
ret
dec
mov
loop
and
jb
dec
sahf
or
das
adc
mov
or
adc
lret
jne
inc
cmp
mov
sahf
test
in
in
test
xchg
cmp
add
sub
push
sbb
sub
push
sub
addl
stc
sub
push
push
and
test
mov
cltd
cmpsb
ret
cmp
movsb
dec
imul
push
dec
dec
jge
dec
pop
lds
insb
or
and
dec
loopne
scas
js
mov
arpl
pop
sub
cltd
mov
inc
insl
push
movb
xlat
inc
cli
mov
call
xchg
sbb
ljmp
push
adc
scas
pop
push
bound
dec
into
popf
int3
jnp
je
jnp
inc
cmpsl
jns
mov
sub
jg
xor
inc
jnp
bound
mov
and
ds
nop
mov
xor
jmp
jbe
inc
xor
sarl
xor
mov
sub
adc
mov
mov
aam
cmc
adc
rcll
sub
push
fstpl
stos
fnstenv
xchg
inc
sarl
xor
pop
mov
sub
or
cmp
push
ja
xor
jne
jno
ret
push
lods
stos
mov
stos
xchg
frstor
dec
js
mov
mov
cmc
shrb
or
fadds
pusha
fsubr
nop
and
pop
jle
movsl
ja
dec
push
cmc
adc
inc
pop
jnp
xchg
aas
pop
mov
jl
and
cli
or
iret
push
rcl
lea
scas
xchg
pop
gs
lods
ror
push
stos
pushf
xchg
movsb
ret
test
xor
call
fstpl
and
xchg
test
and
popf
dec
aad
inc
mov
mov
mov
cwtl
fbld
mov
cmp
test
test
movl
test
jmp
mov
sub
sbbb
dec
mov
cld
fimuls
std
pusha
cmovle
in
mov
cltd
shlb
movsb
rolb
and
dec
shlb
mov
sahf
pusha
cmpsb
addl
les
gs
push
add
cmpsl
or
push
fdivr
and
inc
fsubr
cmp
jnp
or
mov
sub
test
jge
sarl
add
xor
testb
cmp
mov
pop
or
and
push
gs
or
aam
xchg
imul
pusha
into
cmc
lods
dec
push
into
jg
adc
sahf
xchg
iret
cmc
fisttps
jae
je
nop
sbb
daa
ds
testb
jl
or
add
xchg
push
popf
jp
es
fsubl
cmp
scas
nop
icebp
lock
inc
push
adc
jne
adc
and
int
cmp
aad
push
jb
in
lock
sahf
xchg
loope
jne
fwait
push
mov
lret
movsl
push
outsb
xlat
pop
push
lods
pop
xor
mov
and
stc
xor
ds
and
dec
arpl
and
dec
cs
shll
hlt
loope
test
ds
add
bound
sub
mov
test
test
sbb
sbb
or
lea
test
jb
out
inc
push
mov
sub
push
dec
mov
push
es
cmp
testb
adc
dec
push
movsb
push
or
inc
xlat
hlt
push
sub
push
push
pop
les
cmp
xchg
sub
hlt
xchg
lahf
sub
sbb
add
sbb
sub
dec
movsl
imul
jge
iret
les
xor
test
lret
push
sbb
cmpb
scas
add
pop
mov
push
addb
xor
test
pop
adc
inc
lea
rolb
gs
inc
jge
sarl
into
cmp
mov
mov
or
arpl
or
xchg
sbb
out
jae
cli
popa
xchg
xor
stc
data16
jb
lds
pop
jl
push
insl
cwtl
das
mov
lds
mov
aam
jo
push
xor
jb
add
loope
jge
sub
idivl
dec
lahf
xor
lds
sbb
scas
cwtl
push
add
iret
and
test
and
inc
inc
hlt
xchg
adc
adc
pop
arpl
pop
inc
andl
and
inc
stos
sub
xchg
or
cmp
test
jle
adc
xchg
pop
jbe
sub
xor
sub
or
xchg
stc
jge
or
adc
loope
adc
and
mov
xor
or
les
inc
or
mov
pop
shr
fsubrl
into
js
mov
xor
xchg
inc
cmp
push
cltd
inc
pushf
sub
add
imul
addr16
test
pop
fwait
pop
int3
inc
push
inc
push
inc
rorl
dec
fld
addr16
xor
popf
lea
or
testb
test
in
ds
and
adc
in
and
mov
gs
jmp
mov
xchg
mov
rclb
xor
push
inc
pop
and
push
push
shrl
push
stos
push
negl
sub
aam
lock
or
cmp
ss
mov
jl
pop
cmp
push
lret
lret
es
push
xor
xor
mov
rolb
and
loopne
rcl
movsb
push
xchg
mov
into
test
pop
insb
es
mov
jmp
lret
arpl
or
sub
fildll
test
popa
insl
loope
dec
subl
xor
add
cmp
xor
xchg
cld
jmp
push
test
jo
mov
cs
lods
xor
es
adc
cmpsl
adc
cmp
push
enter
addr16
cmpsb
sahf
cmp
push
incl
add
and
push
jle
pushf
ss
mov
lea
and
sbb
stos
test
aam
push
pop
jo
je
cmp
pop
pop
inc
dec
jp
xchg
imul
roll
dec
push
mov
out
ljmp
add
cmp
subb
dec
nop
dec
pop
mov
arpl
ror
or
hlt
adc
cmp
lret
and
cld
add
addr16
imul
and
and
jl
dec
sbb
jbe
adc
in
sub
loopne
stos
loope
cmp
test
sub
push
inc
and
mov
and
test
mov
neg
mul
xlat
dec
mov
mov
dec
add
cmp
sbb
inc
fsubl
and
fcompl
fbstp
or
xor
dec
xor
pop
xchg
stc
push
leave
or
pop
inc
fsub
cmp
mov
adc
xor
aam
xor
iret
mov
jo
inc
lret
popa
lods
mov
mov
scas
pop
pop
test
rcr
lahf
mov
sahf
pop
cmp
mov
pusha
add
add
xor
rol
ljmp
divl
xchg
fisubrl
sub
movsl
bound
and
inc
xor
enter
push
and
subb
add
jp
xor
jns
lahf
adc
loopne
or
sub
daa
stc
sti
push
mov
das
add
inc
xor
lods
loopne
pop
popf
scas
lds
cmp
xchg
cmpsb
outsl
shll
and
scas
faddl
push
add
subb
icebp
inc
fisubs
jns
inc
ja
pop
or
and
dec
xor
sub
insl
mov
dec
iret
or
dec
xor
push
mov
popf
mov
push
pushf
xchg
and
imul
imul
rcl
sub
mov
sub
mov
leave
inc
inc
insl
gs
inc
dec
outsl
push
inc
mov
pop
dec
mov
loopne
mov
test
int
sub
andb
jge
pop
xchg
dec
dec
add
push
fwait
test
lret
xchg
dec
test
add
cmpsb
push
fiaddl
cmp
mov
xchg
fwait
dec
xchg
sbb
arpl
ja
mov
pop
lds
ljmp
stos
scas
mov
fimull
int3
sub
jne
dec
cmp
sub
xor
dec
sarl
cmp
and
sbb
daa
fimull
sub
jg
mov
out
jb
mov
xchg
jmp
jge
in
xor
mov
push
enter
cmc
rorl
and
cmp
jg
outsl
push
inc
mov
fadds
inc
and
cmp
mov
xchg
fdivrs
inc
mov
xchg
loop
aam
shlb
jecxz
repz
xor
adc
jle
xchg
ja
pop
or
outsl
sub
fisubrs
mov
mov
push
sahf
add
and
pop
mov
aam
jg
leave
out
ret
push
sub
cmc
jl
movsb
xor
in
inc
add
loop
push
jno
sub
jmp
cltd
or
test
and
or
lods
inc
pop
pop
and
daa
rclb
and
xlat
lret
cmp
gs
rolb
and
aam
dec
fistl
cmpl
mov
or
sahf
add
jle
jl
fs
sbb
or
call
and
sbb
lret
push
push
jnp
dec
sti
ret
pusha
push
xor
or
adc
in
cmp
sub
push
xchg
mov
fisttpl
daa
xchg
loope
cmp
sub
test
stos
pop
push
gs
jae
pop
insb
or
cmp
and
les
dec
roll
scas
pusha
sub
jmp
mov
dec
inc
outsb
sbb
push
cwtl
jmp
xchg
jno
and
lcall
es
cwtl
push
push
jae
push
inc
iret
jno
mov
cs
and
fs
hlt
xlat
imul
aas
test
loop
fdivrs
mov
mov
xchg
push
inc
lods
mov
sub
mov
out
cmpsb
sub
jne
push
pusha
xchg
and
dec
jg
and
mov
inc
insl
lds
add
cmp
lahf
fbstp
xchg
es
dec
ss
inc
popf
add
mov
jg
pop
movsb
je
in
mov
and
dec
shlb
dec
imul
test
dec
sub
xchg
js
imul
lcall
sbb
out
cmp
or
sbb
roll
ja
push
mov
adc
shll
xor
sbb
lods
cwtl
clc
push
inc
push
and
stc
mov
mov
xor
std
sub
test
jne
fadd
hlt
push
and
mov
loope
inc
cld
stc
popa
cmpsb
jecxz
sub
stc
orb
jno
call
and
inc
inc
jne
mov
push
mov
cmpb
push
pop
jle
dec
jb
test
push
xor
lahf
inc
xor
roll
in
mov
test
call
aaa
jne
add
sbb
push
arpl
jae
dec
icebp
daa
push
push
mov
cmp
loop
xorl
bound
inc
inc
cmp
test
jbe
adc
jge
scas
sbb
push
lods
or
cmp
jne
cli
push
shll
shr
bound
sub
mov
insl
pushf
int3
cmp
mov
in
adc
ret
sbb
jg
call
mov
ds
inc
inc
int3
sbb
hlt
xor
ljmp
cmp
loopne
inc
xor
dec
rorl
fldt
jo
push
mov
js
mov
and
sahf
pop
xchg
aad
mov
lods
enter
sbb
or
dec
imul
adc
insl
movsl
pop
scas
aad
dec
shll
push
and
dec
xchg
es
inc
cmp
sub
negb
dec
stos
das
je
mov
popw
mov
leave
pop
test
mov
gs
shrl
mov
cli
adc
dec
movsb
or
inc
inc
test
push
loop
xchg
lods
imul
lret
mov
jno
mov
adc
test
aad
dec
scas
push
mov
gs
das
dec
and
cmp
inc
cwtl
push
push
mov
dec
insl
test
adc
xchg
or
mov
out
jne
shll
cmp
push
mov
addr16
or
jo
cs
cmpsl
and
shrl
mov
jge
and
dec
aas
xchg
pusha
xchg
jne
lea
mov
ret
xor
xchg
xor
hlt
mov
push
insl
push
add
jne
cmp
ret
pusha
loope
faddl
sub
adcl
jbe
jae
push
jecxz
in
orb
add
les
fisttpll
outsl
stos
sub
movsb
jne
std
lds
pop
xchg
xor
push
push
mov
test
movsl
imul
in
jae
cmp
shll
icebp
sbb
sbb
sbb
and
inc
imul
popf
cmpsb
add
loopne
scas
sarl
mov
xor
jmp
inc
int3
or
aad
popa
pop
inc
ds
sar
push
dec
or
mov
ret
aas
xor
outsl
mov
in
lods
push
and
lods
loopne
scas
nop
xor
shll
and
dec
dec
inc
xchg
jo
or
mov
fsubrl
add
movsb
sub
cs
addb
or
fcoms
out
dec
and
movb
lcall
push
mov
daa
push
adc
and
fdivr
cmp
jle
test
push
sahf
subl
hlt
arpl
xchg
jbe,pn
iret
inc
xor
stos
dec
or
leave
test
cwtl
invd
test
enter
adc
add
or
je
mov
add
hlt
aad
mov
dec
and
xchg
arpl
out
inc
push
mov
cmp
sbb
inc
mov
sbbl
cmp
jb
enter
rol
ds
test
leave
sarb
mov
push
jp
jae
xor
mov
jae
mov
push
lahf
les
dec
je
adc
push
push
inc
cmp
mov
pusha
mov
popf
outsb
jb
pushaw
jne
cmp
bound
ja
add
inc
imul
mov
pop
pop
jne
ja
pop
add
and
lods
dec
rclb
mov
sbb
inc
aad
dec
mov
pop
stos
inc
dec
push
nop
jbe
and
daa
jnp
xchg
xchg
lods
bound
push
xchg
in
adc
leave
test
fwait
or
mov
cmp
xchg
arpl
test
clc
lea
pop
inc
adc
leave
into
push
jb
or
add
sub
adc
ss
xor
repz
and
add
jge
xchg
jns
cltd
loop
push
mov
or
enter
popf
adcb
test
mov
loop
fwait
xor
test
mov
ret
and
orl
cmp
mov
sbb
ret
lret
xchg
or
mov
and
jne
cmp
insl
xor
inc
dec
cs
jp
cmp
icebp
lret
fcoml
jne,pn
es
xor
cmp
and
cmp
xor
jnp
pop
and
shl
ret
push
popa
faddp
push
sbb
cltd
stos
dec
cld
dec
or
mov
mov
sbb
add
inc
xor
jnp
inc
or
mov
loop
out
rcrb
add
adc
mov
cs
orl
pusha
es
mov
out
dec
push
mov
cmp
sub
push
fbld
jg
dec
xchg
dec
nop
inc
fwait
int3
aad
pop
dec
or
mov
pusha
mov
int3
sub
test
test
gs
leave
inc
cli
jne
leave
sbb
and
jne
cs
shl
mov
jne
mov
inc
pop
insl
pop
dec
fabs
mov
sahf
iret
ror
sub
mov
mov
inc
pop
shlb
pop
mov
shrl
loope
movsb
mov
mov
aam
dec
std
fiaddl
or
stos
popa
test
push
lds
stc
mov
arpl
loop
pop
mov
stc
xchg
or
movsl
cmp
loopne
mov
movq
add
mov
je
aam
xchg
jne
cli
inc
jl
jge
push
aaa
push
push
jge
add
inc
fdivrl
xorl
sub
push
jne
xchg
mov
loopne
dec
cmpsl
popf
push
mov
ja
rorl
lcall
xchg
movsb
aaa
xchg
push
inc
sub
cmc
mov
sbb
ret
inc
cmp
aas
jg
mov
ja
and
insb
push
int
cmpsl
arpl
lret
nop
mov
sub
movsl
cwtl
cltd
dec
and
hlt
and
xchg
sub
and
or
int3
in
jle
xor
shll
mov
sbb
fisttps
data16
sbb
or
mov
nop
dec
sbb
xchg
xchg
jmp
push
cld
push
or
outsl
lret
xor
push
aad
movsb
cmp
jns
mov
adc
mov
fstpl
es
hlt
mov
mov
add
inc
sbb
shrb
test
lret
fstps
cltd
movsl
or
popa
scas
hlt
push
ds
hlt
pusha
jno
sar
xor
and
inc
rolb
fsubr
movb
movsl
int3
and
loopne
loope
and
leave
add
and
jo
les
cld
dec
inc
push
mov
cmp
or
xor
inc
and
push
lret
out
inc
adc
jns
mov
decl
stos
add
pop
pop
dec
call
pop
mov
lods
mov
mov
inc
xor
mov
stos
movsb
lock
daa
cmp
add
sbb
andl
dec
sbb
dec
movsl
mov
dec
pop
inc
mov
push
pop
and
jg
sbb
sub
mov
test
enter
lret
clc
cmp
cmp
out
ret
call
push
push
test
sbb
sbb
lds
sub
add
shr
pop
loopne
and
push
cmpl
and
outsl
add
loope
inc
cmpl
ret
pop
enter
mov
movsb
jecxz
das
pop
sub
hlt
jmp
rorl
dec
repz
cmp
push
jbe
popf
sti
add
adc
jns
roll
push
sbb
push
jg
in
cld
test
sbb
scas
push
cltd
push
adcl
das
rcl
jno
mov
mov
push
mov
shrb
loopnew
jge
in
fbld
out
mov
std
stos
xor
stos
dec
testb
mov
sbb
mov
lea
sub
mov
pop
lret
xchg
cld
js
leave
fisttps
add
leave
ja
jne
enter
popa
mov
cmc
pop
push
insb
pop
xchg
fstps
adc
test
pop
lea
cltd
fstl
xor
rorl
mov
mov
mov
daa
inc
pop
jnp
add
sbbb
shll
push
gs
and
sahf
mov
mov
mov
sbb
dec
lret
jo
test
cmp
add
sti
gs
and
test
dec
pop
sbb
pop
lock
stc
and
cld
cmp
cmp
mov
jo
pop
clc
xchg
movsl
dec
jb
pusha
mov
cmp
js
sub
popf
stos
jne
mov
push
dec
inc
push
add
dec
mov
dec
jne
inc
mov
loopne
push
cmp
dec
inc
fisubl
movsb
pop
dec
hlt
lock
xchg
sub
jmp
xchg
fincstp
pop
xlat
imul
jne
and
cmpsb
arpl
push
lods
arpl
sub
sahf
add
and
cmp
mov
dec
mov
jge
sbbl
jne
pop
cwtl
sub
mov
ret
inc
loopne
popf
sbb
adc
cli
fs
xchg
xor
das
popf
dec
stos
or
ds
and
mov
loopne
jno
push
cs
jle
sbb
jge
fmul
pop
lahf
loopne
jne
jl
sub
push
or
mov
divb
dec
pop
jnp
inc
mov
icebp
xchg
cmc
cli
rolb
add
jl
rol
xchg
nop
scas
mov
xor
and
test
pop
jns
sub
pop
movb
mov
ja
sub
fwait
jge
xchg
hlt
and
popa
or
jne
sub
inc
lahf
and
mov
aad
test
pop
gs
popf
enter
mov
les
lods
cmc
negl
jae
mov
mov
add
mov
aas
sub
fdivrs
adc
pop
cmp
jb
sub
xor
mov
shl
ret
sbb
ljmp
mov
pop
mov
push
adc
and
cmp
push
inc
push
rcrb
dec
dec
shll
icebp
lret
mov
aad
push
aaa
shrl
sbb
cmpl
idivb
leave
xchg
pop
or
jne
and
mov
or
movsb
add
add
mov
rorl
mov
roll
iret
bound
enter
cli
andl
movsl
cmpsb
jbe
xchg
loope
inc
push
test
push
push
sahf
dec
mov
mov
cmp
das
jmp
inc
xor
stos
add
sub
out
js
add
fninit
xchg
cmpsl
insl
test
cmpsb
and
rcrl
mov
dec
icebp
hlt
push
push
cmpsl
fucom
xor
in
pusha
out
adc
xchg
inc
mov
out
mov
pop
es
or
in
jne
dec
mov
fwait
in
test
jne
idivl
cld
adc
and
push
call
dec
mov
dec
pop
adc
cmp
fdivrs
mov
movsl
push
test
dec
mov
fldcw
decl
test
lret
enter
and
pop
adc
and
mov
or
add
roll
cmpsl
push
jbe
sbb
fadd
loopne
cmc
cmp
xchg
jecxz
pusha
gs
cwtl
mov
push
hlt
test
decl
ja
imul
test
xchg
sar
mov
fnsave
jl
lods
jae
int
adc
push
jl
aad
idivl
mov
push
cld
popf
and
sbb
aam
shll
fcomps
fcos
test
inc
shlb
sbb
lea
scas
cmc
sub
jecxz
or
sbb
sbb
xchg
es
push
cmpsl
out
jge
jae
cmp
test
dec
sbb
aaa
mov
xorl
mov
push
mov
lret
pop
hlt
pop
push
lret
mov
scas
rcl
hlt
jb
adc
shrl
pop
scas
inc
mov
stos
sbb
sub
or
sbb
fsubrl
int3
xchg
into
push
add
gs
ret
pusha
fcompp
int3
lret
and
into
sarl
in
ljmp
dec
mov
or
dec
mov
sub
js
lahf
leave
add
repz
and
stos
push
xlat
sarb
outsl
mov
mov
mov
mov
scas
arpl
add
faddl
mov
popf
std
test
imul
lret
mov
mov
add
pop
xchg
fcompl
add
std
outsb
xchg
cltd
push
and
rclb
or
dec
imul
push
call
pmaxub
loope
ret
ljmp
std
sbb
and
into
in
or
pushf
test
shrb
jl
mov
add
pop
lahf
adc
push
xor
add
ja
dec
je
cwtl
or
test
sbb
imul
push
scas
mov
aam
lcall
arpl
push
push
sti
inc
aam
inc
test
test
inc
cs
inc
fbstp
test
jae
push
xchg
xchg
and
cmp
jnp
add
sub
cmp
and
test
rcrl
sub
daa
xchg
xor
add
push
lods
push
push
adc
inc
jns
cmp
mov
in
js
fstpl
jns
sub
pop
inc
mov
mov
mov
adc
mov
mov
mov
in
and
push
xor
mov
jne
les
adc
dec
aaa
gs
dec
or
rorb
es
fcoms
cmp
push
and
inc
inc
aas
les
jb
jle
inc
jne
xor
leave
dec
gs
xorl
inc
mov
add
xchg
jne
aas
pop
push
pop
and
jno
jg
inc
jne
jp
cld
fmulp
and
sahf
cmpsl
cmp
mov
bound
loop
mov
ret
shlb
sub
idiv
es
repz
out
pop
lahf
and
jl
xchg
dec
sbb
jl
out
int
mov
sahf
or
imul
aaa
nop
imul
pop
in
js
ds
cmp
ret
cmp
insl
and
jne
xor
and
mov
xor
jl
cs
pop
add
dec
jbe,pt
inc
sub
sub
shl
push
ljmp
pop
repz
inc
add
inc
cmc
adc
shll
mov
jno
les
mov
test
fdivrl
repz
sar
pop
dec
mov
ffree
jl
jnp
dec
sarl
aad
add
inc
push
das
xor
movsb
fs
in
stc
int
stos
adc
imul
sub
das
loop
sub
mov
out
je
ret
pusha
ja
inc
das
xor
push
xchg
jl
add
movsb
dec
inc
dec
popa
ret
cltd
xor
dec
ret
das
dec
push
dec
xor
jne
mov
aad
sbb
mov
std
sub
inc
add
enter
loope
jmp
jnp
dec
fmul
jge
stos
sbb
lea
into
test
movsb
stos
pop
dec
and
jo
int3
inc
mov
insl
mov
add
hlt
lea
pop
mov
xchg
push
hlt
sbbb
pop
and
sbb
xor
aaa
mov
loopne
mov
scas
pop
sub
add
aaa
push
inc
inc
mov
lods
push
fcos
mov
daa
std
test
cmpsb
mov
push
mov
jle
pushf
mov
jae
mov
pop
ficomps
lret
test
mov
clc
and
mov
je
xchg
adc
push
sbb
scas
sbb
mov
sub
cmpsb
push
mov
shlb
loop
jnp
xchg
mov
jo
aaa
xchg
movsb
or
adc
xchg
dec
out
inc
les
pop
sbb
cwtl
cmp
cmp
mov
mov
add
or
mov
add
enter
ret
in
loope
xchg
mov
mov
push
inc
aaa
enter
push
and
aas
cmpsb
adc
or
and
xlat
add
sti
sbb
lea
insb
add
mov
add
mov
int
push
mov
lret
pop
sbb
inc
pop
inc
in
xor
jmp
jmp
mov
xchg
fwait
lds
roll
mov
dec
sub
or
jae
xorl
fdivl
sar
aaa
add
inc
inc
xor
pop
test
jecxz
mov
inc
ja
cltd
jl
outsl
push
jnp
int
fsubs
les
xcrypt-cfb
cmpsl
loope
pop
xor
les
jnp
into
nop
fildll
sarb
test
push
in
mov
sbb
jae
lret
inc
xor
mov
xchg
inc
mov
mov
inc
shl
pop
test
mov
and
sub
xchg
sti
test
sub
aas
cmp
xor
dec
jno
leave
loope
data16
hlt
mov
add
and
ja
and
jnp
or
sar
mov
das
pop
mov
push
fdivl
pushf
push
sub
leave
frstor
movsl
in
pusha
lods
jp
js
das
xorl
lahf
jne
push
mov
dec
cmc
dec
mov
mov
mov
and
sarl
push
xor
movsl
xchg
enter
sbb
mov
leave
scas
hlt
insb
jb
pop
out
loopne
jbe
enter
mov
add
jnp
jne
sub
mov
pop
ljmp
lret
sub
ss
scas
test
and
dec
mov
push
sub
cmpsb
dec
hlt
jne
jo
pop
mov
jne
gs
sarl
mov
push
es
jo
mov
pop
shlw
es
cltd
cmp
std
orl
jo
dec
jne
mov
push
in
dec
sub
in
fbstp
arpl
enter
add
mov
lods
mov
dec
cmpsb
pop
sahf
shll
sub
nop
adc
daa
hlt
clc
ss
repnz
ret
xchg
addr16
outsl
sbb
test
pop
pop
pushf
pop
cli
adc
outsl
loop
mov
test
sub
lahf
jns
mov
jae
sbbl
cmc
xchg
ss
adc
fdiv
push
xor
fs
popa
xor
jne
lods
push
jbe
hlt
xchg
es
cmp
arpl
or
std
jae
sub
or
mov
test
adc
roll
mov
push
insl
inc
in
dec
movsb
adc
sub
imul
mov
xchg
and
jne
add
lods
xchg
ret
lds
mov
mov
inc
cmp
xchg
mov
mov
cltd
cmp
add
lock
xor
and
icebp
mov
inc
add
pop
pop
sub
or
push
sub
popf
jne
sti
mov
sub
sarl
push
push
leave
shrb
scas
jp
out
insb
popf
test
dec
xchg
adc
inc
jl
pop
inc
xchg
push
cld
jb
push
stos
shrb
pop
dec
aam
lret
sti
jne
mov
inc
xor
fprem
data16
pop
fldt
inc
movsl
outsl
outsl
or
scas
xor
inc
movsb
popf
push
mov
mov
dec
mov
loope
xor
test
pop
adc
call
lods
jg
mov
pop
daa
movsb
cmp
mov
dec
pusha
sub
mov
ficoms
pushf
es
xchg
insl
and
test
in
xor
ret
shll
dec
hlt
or
cld
and
mov
aam
pushf
cltd
jbe
mov
shl
cmc
aas
xor
sbb
cli
cmp
mov
or
lods
mov
pop
mov
mov
es
mov
xchg
iret
shrb
mov
mov
sbb
inc
stos
jns
push
movb
test
sub
lods
cmp
and
sbb
xor
mov
jmp
dec
pop
cwtl
and
push
sub
stos
push
ljmp
sub
dec
mov
xlat
inc
arpl
sub
jl
push
aad
or
push
sub
std
iret
xor
add
xor
inc
movaps
nop
leave
push
inc
aad
push
push
cmp
mov
les
and
xchg
int3
clc
dec
adc
xchg
dec
insl
mov
pop
push
fwait
fwait
jne
sub
shr
adc
jnp
xchg
fisubs
and
insl
pushf
in
push
pop
dec
sbb
fmull
in
jle
push
dec
xor
divl
xchg
push
mov
jne
xor
push
test
add
mov
fdivrl
pop
pop
pop
inc
sbb
and
and
push
push
add
add
rclb
flds
push
dec
pop
inc
insb
rolb
inc
push
fisubs
cwtl
movsb
jnp,pn
mov
sahf
rolb
sbb
mov
and
jecxz
test
lock
dec
pop
je
and
and
push
dec
or
dec
mov
push
out
xor
rcl
ret
aad
push
fsts
inc
frstor
push
insl
mov
lcall
addl
mull
lods
in
dec
cld
cmpl
mov
outsb
add
or
pusha
mov
xchg
scas
retw
xor
jl
hlt
cmp
lahf
loope
fimull
mov
jl
adc
loopne
add
and
loopne
jge
sub
push
xchg
mov
inc
push
rolb
inc
out
hlt
adc
mov
es
lds
inc
arpl
xor
popf
test
push
gs
cmc
add
fs
inc
andb
inc
mov
pop
jnp
add
cs
cmp
xchg
inc
and
sub
inc
jae
push
pop
xchg
mov
and
xchg
push
push
outsl
and
test
mov
lods
popf
es
pop
out
dec
aad
arpl
xor
rcrb
dec
sarl
icebp
add
es
shlb
imul
and
movsb
lods
mov
out
xor
ret
jns
icebp
inc
mov
aas
push
pop
inc
dec
lods
add
xorl
std
xchg
int
xor
mov
mov
or
hlt
clc
pop
cli
mov
mov
stos
arpl
jl
jecxz
ds
add
loope
popa
inc
add
and
cmp
jns
fwait
xchg
sub
mov
sub
lods
add
movsl
push
or
inc
test
hlt
pop
movsb
jo
pushf
decl
jecxz
stos
les
sub
shrb
xor
mov
aad
jge
add
in
fwait
pop
xor
dec
inc
jg
lds
repz
repz
xchg
bound
daa
loop
test
cli
int
bnd
insb
in
sti
dec
arpl
xor
rolb
jne
ficoms
mov
mov
ret
cld
gs
fsubr
aam
add
mov
xor
pop
lock
or
out
xlat
pop
mov
jne
adc
push
fsub
mov
les
sbb
jns
test
mov
xlat
cwtl
imul
stos
adc
and
jno
mov
cmp
lock
sahf
repz
mov
hlt
dec
jge
sti
ds
xor
das
sub
xchg
cmp
movb
cmc
stos
jle
xor
xlat
in
sub
inc
push
daa
test
aam
inc
xor
and
les
jae
arpl
fwait
mov
xchg
push
mov
lret
aas
in
pop
ret
inc
xchg
adc
movsb
or
sub
adc
sub
add
dec
lea
and
test
pop
cmpl
jp
call
sub
loopne
sbb
mov
insl
pop
xchg
insb
sub
mov
inc
jae
jne
pop
xor
mov
cmp
fsubl
call
stos
test
or
loope
pop
push
adc
aad
sub
cs
movsl
sbb
dec
lret
xchg
jns
mov
lcall
gs
mov
fadds
lds
jo
inc
add
jno
fwait
pop
adc
xor
xchg
xor
in
pop
add
lds
add
out
aam
test
cld
call
pusha
shll
loope
cmp
pop
leave
jnp
addl
push
lods
scas
das
hlt
addl
jge
cld
sub
gs
adc
lods
mov
dec
cmp
aas
sbb
cld
lods
cltd
lahf
sub
test
insl
mov
loope
stc
gs
outsl
inc
push
and
add
dec
push
push
xor
loope
xchg
rorl
sub
jecxz
cmc
cmp
sub
mov
pop
mov
lret
imul
cld
cmp
sub
mov
inc
aam
les
sub
bound
sbb
pop
shld
pop
fs
call
leave
push
ret
aas
gs
jnp
and
xchg
pop
xlat
aas
mov
xorb
sub
sub
pop
xchg
xor
dec
aam
pop
jne
xor
mov
mov
ret
inc
sbb
mov
adc
mov
in
or
jl
andb
sub
mov
out
pop
jecxz
pop
pop
xor
mov
dec
jge
xchg
push
sub
cmp
call
lods
and
push
pop
sbb
fcoms
stc
cwtl
mov
bound
scas
clc
push
sub
xor
and
jbe
or
gs
test
cli
mov
movsl
nop
call
in
inc
sub
xchg
xorl
sbb
inc
push
pop
test
pop
aad
pop
jns
mov
ficompl
mov
ret
mov
mov
sbb
dec
popa
hlt
movsb
xor
cwtl
int3
cmp
mov
jnp
inc
jl
mov
lods
fadd
aas
das
push
data16
in
leave
fiadds
sarb
or
xchg
jp
dec
mov
shlb
roll
xor
out
sahf
xor
rcll
fistl
adc
minps
insl
push
mov
orb
shll
popa
jno
stc
xchg
adc
add
push
loope,pt
frstor
inc
lods
add
roll
hlt
icebp
inc
and
push
aas
repnz
inc
push
adc
faddp
lea
imul
push
fwait
or
xchg
xchg
and
sub
arpl
sbb
xor
and
inc
and
mov
jae
push
xchg
rorb
push
jge
pop
add
addr16
mov
mov
push
ret
pop
lds
and
stos
sub
andb
add
outsl
inc
and
lods
jns
add
dec
bound
shl
inc
aam
sbb
or
dec
inc
cmc
mov
cmp
movsl
dec
xchg
ret
adc
xchg
push
jmp
lcall
pusha
rolb
idivl
dec
push
mov
adc
lea
sub
adc
daa
scas
push
cmp
imul
fiadds
xchg
mov
in
std
repz
jmp
inc
or
inc
and
rclb
push
dec
cmp
frstor
or
les
idiv
inc
gs
lods
pop
iret
aam
in
mov
loope
mov
push
stos
sbb
and
in
xor
mov
xor
pop
xor
shrb
jbe
sar
dec
das
dec
js
mov
jb
cld
stos
insb
sub
sbb
dec
sub
cmc
mov
dec
faddl
incl
callw
and
imul
inc
rcrl
and
mov
add
in
fildl
jmp
loop
mov
pop
and
sarb
inc
fildll
mov
inc
and
fidivl
cmpsb
inc
out
and
add
mov
icebp
call
mov
xor
shrb
fwait
repz
lret
test
dec
xchg
and
pop
mov
mulb
cli
pop
movsb
cwtl
jp
icebp
lods
mov
icebp
hlt
dec
int
jbe
int3
inc
int
test
cmp
sti
xchg
dec
ret
xor
mov
xchg
movl
adc
inc
dec
inc
cmp
dec
ds
and
pop
inc
push
jne
pop
scas
xchg
rclb
or
lods
push
pop
movsb
sbb
das
insl
pop
or
dec
xlat
mov
jle
and
and
inc
mov
cld
or
bound
fsubl
xlat
mov
leave
push
or
test
and
jecxz
sub
push
inc
inc
xchg
jo
mov
jne
pop
lods
mov
mov
push
xchg
dec
mov
inc
jnp
aaa
leave
sub
jge
rcll
lods
cmp
imul
fisubs
fldl
mov
movsl
cmp
pop
pop
rolb
gs
cmp
popf
inc
jecxz
add
out
push
enter
jg
shrb
pusha
popf
and
mov
pop
inc
ret
cmp
movsb
lds
dec
popf
cld
fcompl
dec
mull
adc
inc
mov
stos
stos
fsts
int3
shll
inc
mov
dec
inc
push
aaa
insl
and
hlt
outsb
in
cwtl
enter
push
add
pop
cld
bound
jne
mov
cmp
mov
mov
out
or
dec
je
lret
pop
pop
aaa
test
and
je
sbb
inc
js
addr16
je
fsubl
pop
push
mov
aaa
push
mov
add
and
out
ss
dec
bound
outsl
aam
jge
xor
dec
jbe
mov
xlat
xchg
pushf
leave
test
push
push
lret
lcall
popa
enter
add
adc
inc
push
sarl
lock
daa
popf
and
add
dec
adc
test
inc
sub
scas
dec
test
cmp
stos
pop
add
cmpsl
adc
push
addb
rorl
inc
out
inc
shl
mov
lcall
daa
mov
out
inc
mov
cwtl
push
pop
mov
loope
inc
mov
fists
test
lea
xchg
inc
and
test
movl
shlb
lret
cmp
in
pop
js
fstpl
push
call
orl
inc
jmp
rorb
fwait
call
or
leave
inc
stc
aad
aaa
xor
test
into
leave
jo
push
push
adc
lahf
sbb
stos
dec
pop
es
sahf
lds
mov
jl
in
stos
or
sbb
dec
in
xchg
mov
out
loope
gs
mov
arpl
adc
mov
jnp
xor
sti
inc
pop
movsl
dec
cld
xor
rcrl
mov
dec
insb
dec
daa
or
push
push
dec
and
mov
dec
or
xlat
repz
inc
add
xchg
sbb
or
add
ja
std
mov
daa
add
mov
addl
cmpsb
enter
adc
pop
pop
push
sub
shrb
adc
je
stos
test
rol
xor
cmp
fistpl
fsub
daa
fwait
lret
lret
test
dec
repnz
adc
inc
adc
gs
sub
push
or
cltd
jo
pop
mov
push
nop
pop
pop
mov
xor
rcrl
mov
jg
test
lret
mov
ret
push
mov
pop
or
lods
add
movsb
mov
jge
add
aam
jns
test
sub
push
leave
and
cmp
dec
popa
inc
inc
sarb
sub
divb
pop
adc
add
cli
clc
jnp
ljmp
adc
mov
sub
mov
mov
and
push
stos
xchg
adc
out
and
jl
or
xor
int3
popa
mov
loope
loopne
xor
movsb
loop
addb
lods
aas
jg
into
sahf
stos
inc
mov
inc
cltd
lret
add
adcb
sub
jge
lea
or
xchg
nop
and
add
push
jmp
mov
jns
jno
pop
jg
sub
add
sub
jbe
or
jnp
aaa
or
add
mov
jecxz
adc
adcb
fsub
les
cmp
lods
cwtl
stc
insb
fdivrs
push
aam
jbe
movsb
pop
cltd
jnp
cmpsb
pop
jle
sub
imul
repnz
data16
aas
out
pop
dec
imul
push
cwtl
cld
cmp
orl
add
xchg
xor
pushf
dec
jl
xlat
sub
lea
push
sub
sahf
imul
fistps
adc
inc
and
and
inc
mov
pop
out
inc
and
xlat
jl
out
inc
and
pop
dec
push
inc
fadds
test
dec
inc
dec
bound
outsb
aam
adc
jmp
mov
pop
nop
ss
mov
lea
shll
cmpsb
pop
idivl
inc
popf
mov
sbb
push
aad
imul
aad
dec
mov
jno
push
cld
std
dec
fwait
xorl
test
mov
mov
pop
xor
pop
mov
and
into
movsl
std
mov
insl
lods
jo
mov
sub
fsub
jecxz
inc
add
sub
mov
scas
inc
xchg
lret
xlat
movsl
outsl
sbb
das
dec
mov
out
or
out
dec
mov
cmp
sahf
pop
push
and
enter
xchg
clc
mov
xor
jne
ss
mov
dec
cmp
sarb
xchg
lcall
adc
ljmp
sahf
leave
ja
pop
dec
mov
ljmp
xor
dec
lods
lret
adcl
or
scas
mov
fmuls
pop
pop
int
cli
cmp
loope
sub
dec
or
dec
mov
hlt
adc
mov
ret
repnz
and
xchg
rol
or
movsl
arpl
xchg
data16
add
jne
sbb
sarb
popf
loopne
mov
ret
insb
pop
insb
sbb
ljmp
cmpsl
mov
adc
inc
jge
xor
mov
xchg
aam
bnd
xchg
aas
xor
jg
sbb
xchg
or
mov
adc
test
mov
sbb
imul
mov
shll
shlb
push
sbb
lahf
sub
sbb
iret
scas
test
test
scas
xor
sub
adc
dec
adc
leave
jae
jne
cmpl
jg
sar
test
shrl
data16
sbb
push
lea
jge
push
repnz
stos
or
jl
jge
ficompl
adc
gs
cmp
shlb
ret
in
xchg
shrl
ret
sbb
pop
outsl
dec
or
aad
vmovntpd
or
lock
loop
sub
mov
xor
stos
test
in
divb
sar
push
adc
and
stos
mov
icebp
dec
jmp
lds
cmpsl
mov
outsl
arpl
dec
stos
sub
xchg
movsl
add
insl
fadd
outsb
cmp
push
inc
cmpsl
subl
pop
call
dec
andl
js
aas
cmpl
shll
lods
outsl
xor
ret
pop
test
pop
fdiv
stos
outsb
loop
sbb
sub
inc
mov
sub
rorb
push
stos
repnz
or
repz
inc
stc
cs
jbe
fwait
mov
inc
mov
cwtl
xor
jle
add
aam
test
subb
ja
shrl
ja
xorb
mov
aas
and
xchg
mov
sbb
pop
or
inc
negl
pop
jns
adc
fadds
add
popl
cmpsb
cmp
xor
movsl
addl
dec
xchg
js
enter
xor
outsb
push
push
aas
push
push
subl
insb
and
add
stos
test
adc
push
mov
cmc
cmp
jg
add
push
push
sbb
mov
xlat
daa
sbb
hlt
sbb
fsubs
pop
push
scas
push
xchg
jmp
mov
sbb
or
push
mov
mov
inc
mov
decl
test
push
push
loope
fldl
dec
mov
push
insl
lret
and
inc
dec
cmpsb
lds
push
stos
testl
sub
pop
test
xor
jne
xchg
popa
add
pusha
mov
xor
leave
lret
add
and
push
xlat
mov
lods
pop
insb
dec
mov
or
pop
stos
cmp
repz
add
push
jecxz
fnstsw
sar
sub
mov
and
jae
sub
movsl
cltd
shll
cmp
push
add
dec
mov
xor
pop
xchg
enter
sarl
xor
jne
mov
cmp
xlat
leave
xchg
idivb
push
inc
and
dec
xor
int
lds
lods
jle
sti
ja
add
dec
push
or
inc
es
stos
mov
in
scas
jne
cmpsb
xor
dec
gs
fimuls
mov
lahf
test
inc
lcall
xor
ds
sahf
sbb
jge
movsb
lcall
xor
add
pushf
jo
jp
in
dec
mov
negl
dec
push
cld
push
dec
pop
dec
daa
xchg
lret
fnsave
je
je
ja
and
jecxz
jo
push
inc
mov
sub
ja
nop
pop
stos
cld
xorb
lahf
stos
dec
mov
fidivrl
inc
cmpsb
fstl
mov
ss
out
jl
inc
setbe
dec
jns
sub
or
cld
jns
or
mov
adc
mov
shl
sbb
mov
test
pop
stos
inc
adc
js
sbb
movsl
fdivrl
mov
and
mov
shr
icebp
inc
cmpsl
dec
push
and
hlt
std
push
fsubs
inc
dec
jno
sub
sub
and
lret
ret
and
dec
push
hlt
jnp
xchg
mov
sub
dec
push
or
ret
nop
shrl
shl
dec
pop
dec
add
dec
xchg
pop
jge
mov
lock
adc
enter
je
lret
add
pusha
mov
pop
and
test
mov
mov
pop
arpl
rcl
jl
pop
or
jns
insl
push
sub
fsubr
jp
je
push
jge
pop
ret
int
sub
sub
fdivr
loope
xor
pop
add
cwtl
push
fnstsw
xor
stc
cwtl
dec
mov
jmp
jg
sub
repz
sub
loopne
cmp
movsl
mov
mov
push
push
rol
push
pop
push
dec
popa
lret
movsb
shlb
jb
adcl
pop
movsb
cld
and
push
enter
sahf
movsb
jnp
xchg
lret
mov
and
mov
stos
push
mov
mov
push
jl
push
shl
bound
jno
lods
pop
dec
aam
jne
cwtl
test
add
loope
inc
xchg
push
mov
mov
xor
dec
subl
lea
mov
imul
loop
mov
dec
add
mov
sahf
rolb
mov
sbb
or
mov
call
jmp
arpl
dec
xor
fcompl
rol
inc
cmp
pusha
loop
pop
in
stos
data16
fbld
push
jno
cmp
dec
je
insl
cmpsb
xchg
or
pop
add
inc
inc
sbb
push
in
jnp
push
and
add
xor
push
and
loope
mov
dec
hlt
pusha
aad
les
mov
lds
dec
test
add
nop
dec
jbe
mov
pop
or
movb
cmovo
xchg
pop
mov
mov
aam
jo
arpl
sbbb
xchg
sahf
inc
adc
rcrl
in
push
out
add
nop
enter
xchg
xchg
add
jne
pop
push
or
loope
jp
in
rorb
inc
cmp
xor
mov
mov
mov
aas
mov
incb
mov
dec
sub
ret
add
sti
pop
push
dec
pop
cmc
xor
pop
cld
dec
stc
fsub
push
hlt
repnz
je
xor
in
scas
sbb
aad
out
jge
daa
and
and
mov
bound
in
gs
pop
loop
mov
add
imul
inc
cmpsl
push
or
les
pusha
push
cmc
js
pop
gs
daa
fdivr
mov
push
sub
fildl
mov
lahf
stos
add
ficoml
hlt
scas
in
adc
insl
loope
cs
dec
loop
fstl
fwait
lods
jno
jne
push
lods
push
xchg
lods
cmc
push
sbb
or
scas
inc
in
push
cmp
pop
push
fdiv
pop
sbb
pop
sbb
jns
and
add
stos
cmpsl
in
jp
mov
xlat
pop
xor
ljmp
outsb
inc
mov
xchg
jb
jbe
and
cwtl
pop
mov
cld
movsb
add
jmp
push
or
xorb
jnp
pop
mov
sbb
stos
jle
clc
xor
push
lods
jge
lods
lea
lret
into
add
adc
xor
out
iret
mov
aas
mov
loope
rorb
push
les
mov
mov
pop
enter
ja
daa
addr16
and
jne
add
and
sbb
mov
push
dec
push
aad
dec
arpl
lret
add
jp
mov
nop
dec
fdivrl
icebp
xchg
push
fneni(8087
push
cmc
inc
and
cmp
and
std
inc
stc
xor
mov
dec
sahf
addr16
or
dec
ja
xchg
dec
push
mov
push
mov
and
jne
icebp
pop
icebp
dec
leave
jae
aad
lods
push
inc
je
mov
ret
lds
test
lret
fdivs
sbb
outsb
sahf
addl
push
imul
iret
cmc
mov
sbb
int
lret
jo
hlt
sub
mov
shr
push
dec
pop
stos
jns
and
xor
jno
ja
mov
pop
sub
in
pop
sub
stos
scas
sub
dec
xor
sub
dec
and
xchg
add
mov
lret
gs
jmp
sbb
add
enter
push
add
out
das
add
test
pop
pop
sbb
sbb
lock
aas
sub
add
add
pop
xor
mov
push
push
punpcklwd
ds
pop
insl
ret
cmp
push
pop
cmp
sbb
xor
push
hlt
arpl
dec
pop
push
inc
jp
dec
mov
sub
popf
mov
jbe
push
test
mov
xorl
lods
pop
nop
push
enter
jge
testl
and
imul
out
rcl
ds
jbe
test
mov
fcom
sub
jecxz
dec
cmp
test
xchg
sbb
bound
mov
mov
aad
mov
inc
clc
shlb
lods
jg
in
sub
adc
cli
add
ret
xor
sahf
leave
lods
ds
aad
sub
les
sub
mov
and
cmp
mov
ljmp
or
fldenv
or
pop
inc
fwait
push
ds
lea
lds
aad
dec
jo
and
popf
mov
cmp
sub
lahf
outsb
mov
rorl
in
gs
push
cmp
sub
jnp
pop
pop
roll
inc
aam
pop
leave
hlt
jno
sub
lods
imul
aas
jne
add
mov
gs
movsl
cltd
leave
rolb
stos
nop
cmp
stc
pop
enter
adc
inc
rclb
scas
nop
mov
add
gs
mov
push
and
push
inc
sub
sub
adc
pop
dec
int
repz
push
enter
sbb
hlt
sub
out
stos
xchg
pop
js
dec
add
mov
stc
sub
jae
add
mov
mov
es
out
xlat
daa
or
ss
sub
arpl
pop
inc
fs
leave
cmp
test
sbb
add
add
xor
orl
mov
inc
shrl
idiv
in
bound
push
adc
test
dec
and
addr16
pop
imul
sub
rcrl
xchg
inc
push
sub
and
int
cmp
dec
sub
stc
xchg
mov
dec
test
sbb
fidivs
xor
xor
aaa
dec
ja
inc
dec
mov
ror
stc
inc
test
mov
cmp
pop
rcrl
dec
and
xlat
push
xchg
aas
ss
test
shrl
or
aas
and
push
xlat
xchg
mov
pop
dec
ror
mov
push
pop
shl
lock
dec
cli
dec
enter
daa
sub
mov
andl
lds
mov
and
dec
mov
xor
sub
std
mov
mov
test
dec
pop
aaa
ret
cmp
ret
pop
pop
mov
inc
loop
fwait
outsb
xchg
sub
rorb
adc
frstor
xor
add
push
pop
jns
aam
sub
jnp
das
dec
and
adc
or
fnstsw
xchg
ja
or
dec
jne
popa
xor
push
test
arpl
gs
push
pop
jae
xor
dec
pop
inc
aam
pop
stc
xor
add
inc
shll
and
andl
insl
dec
xor
cld
aad
gs
bound
and
pusha
fnstsw
ss
rclb
cmpsb
dec
xchg
sarb
dec
rclb
sub
pop
xor
push
test
arpl
pop
insl
outsb
push
pop
jae
xor
add
cmp
int3
shll
sub
cmp
add
lret
call
sarl
pop
mov
sub
cmp
inc
sub
rorb
stos
xor
mov
mov
aas
rorb
jge
icebp
and
jg
and
jle
ja
inc
sarl
shlb
lret
jno
out
movsb
scas
aam
ret
and
outsl
adc
inc
rol
insl
pop
inc
add
imul
mov
shll
pop
xor
dec
sub
shll
pop
aad
dec
and
test
popf
arpl
push
add
arpl
xorl
dec
loope
push
scas
mov
movsl
sbb
jle
mov
icebp
nop
test
sbb
stos
mov
test
scas
ret
test
cmc
mov
add
sub
ret
popf
sub
mov
and
daa
hlt
push
pusha
mov
push
std
sub
push
hlt
xchg
daa
mov
sbbb
leave
in
sbb
dec
xlat
jle
les
dec
cmp
in
and
push
mov
sbb
test
xor
cmp
sarl
and
jge
shlb
imul
and
fiadds
cmc
cwtl
test
cmc
pop
dec
mov
aaa
test
mov
ja
xor
test
das
cmc
and
sub
mov
push
rcll
loope
dec
int
or
push
xchg
mov
andb
jae
mov
clc
in
xlat
sub
jns
cmc
out
call
adc
cmp
fwait
leave
pop
les
cmc
push
leave
pop
les
cmc
ds
rol
pusha
cmp
mov
push
les
cmc
and
cmp
flds
xor
mov
cmpsl
and
repnz
sbb
sbb
inc
xchg
jp
pop
repnz
cmpsb
pop
cltd
or
idivl
rcrb
push
push
or
out
push
mov
or
in
test
mov
jge
mov
cs
imul
or
add
adc
push
hlt
push
and
shll
dec
sahf
cmpsb
adc
lret
dec
pop
lahf
aad
scas
xor
lods
cmc
cmp
cmp
filds
loope
out
and
push
loop
adcl
pop
and
dec
xchg
push
adc
jle
stos
dec
push
inc
inc
sbb
add
mov
dec
xadd
mov
movsl
pop
push
ret
xchg
dec
rolb
in
lea
pop
push
inc
lea
pop
cmp
popf
repz
dec
push
fisttpl
cld
inc
push
jle
mov
sti
cmc
insl
xor
dec
test
sbb
push
push
rclb
push
xor
and
aam
xor
inc
push
cmp
das
leave
xor
stos
xchg
rorl
xor
and
lahf
cmp
test
arpl
lret
fwait
aam
std
test
xchg
fs
bnd
pop
rorl
cmp
dec
movb
mov
or
aad
test
sub
xor
dec
mov
cmp
daa
push
mov
dec
lea
and
fnsave
leave
dec
inc
sarb
dec
pop
cwtl
les
ror
jbe
cmp
push
out
and
pop
cmpsb
jns
cmp
push
rclb
arpl
mov
das
pop
popa
and
dec
inc
xlat
fisttpl
daa
mov
pop
and
shll
movsl
aaa
lret
cld
or
jle
in
xlat
dec
sbb
rcl
xchg
iret
xor
adc
and
and
push
pop
jbe
sbb
scas
adc
scas
or
jae
std
xor
rorb
adc
inc
xchg
or
cmp
lods
fdivl
xchg
outsb
out
mov
lret
and
sti
dec
in
jne
or
in
aam
fwait
scas
dec
sahf
or
mov
dec
xchg
rol
ror
push
inc
push
pop
cmp
clc
cld
dec
inc
push
sub
loop
dec
in
gs
inc
push
fadd
xor
cmpsb
and
fsubl
add
xchg
filds
lds
pop
mov
dec
cmp
rcll
sub
cltd
pop
and
jp
xor
add
mov
aad
push
ja
arpl
mov
test
pushf
dec
popf
adc
mov
jne
fs
outsl
loopne
cmp
xchg
mov
xchg
or
into
jp
sub
mov
push
adc
inc
or
arpl
andl
nop
fsubrl
mov
stos
jge
jae
movsb
sahf
out
leave
test
int3
push
push
jnp
mov
scas
jo
add
inc
add
and
dec
imul
or
add
jne
sub
inc
push
faddl
lods
sub
leave
fldl
inc
jbe
mov
pop
ret
inc
lret
movsb
xlat
add
lahf
or
add
cmc
dec
cmp
loope
mov
outsb
add
data16
inc
cmc
jle
sbb
pusha
stos
icebp
movl
hlt
fs
test
shl
gs
cwtl
scas
xor
mov
dec
mov
inc
stos
mov
dec
mov
mov
ds
stos
jnp
inc
aam
lret
fidivl
adc
fstpl
cltd
loopne
hlt
sub
xchg
adc
int
subl
rcrb
mov
xor
mov
jo
mov
adc
lods
and
sub
shlb
gs
dec
push
es
shrb
mov
movl
jg
iret
fcoms
pushf
in
jno
dec
mov
push
subl
int3
shrb
inc
dec
pop
mov
inc
addr16
and
fstl
into
movsb
jle
sbb
xor
sub
cmc
sub
das
gs
out
add
pop
lea
mov
xchg
std
outsl
cmp
cmp
int3
push
xchg
lods
push
adc
lds
push
xchg
mov
cmp
icebp
pushf
inc
inc
pop
test
dec
shll
dec
dec
xchg
jp
mov
int3
push
xchg
xorb
mov
inc
dec
jne
jns
push
xor
test
and
mov
sub
push
adc
mov
gs
insb
stos
insb
inc
pop
pop
add
arpl
jle
dec
cmp
jne
pop
mov
sti
cwtl
out
push
aaa
lds
mov
or
or
sub
pushf
mov
lea
int
mov
dec
fists
sub
loopne
jne
cwtl
jge
mov
jl
lret
rolb
dec
sub
pop
lahf
dec
push
mov
addr16
mov
cmp
call
stc
mov
outsb
push
dec
lds
mov
push
mov
jl
jmp
mov
jne
jg
pop
and
xchg
rorl
daa
dec
les
pusha
enter
out
mov
mov
push
fstpt
lods
jp
lds
mov
jle
and
pop
lahf
and
ljmp
hlt
pushf
xchg
add
mov
xchg
cmpsl
or
and
cmpsl
pop
aas
scas
cwtl
in
pop
cmp
push
mov
fdivrs
dec
sub
jnp
cld
xchg
inc
push
mov
adc
pop
mov
imul
test
andl
mov
test
cmp
xor
aam
jp
dec
dec
ret
and
iret
adcb
ret
stos
sbb
jo
and
adc
fwait
insl
xor
loop
sub
adc
das
and
xor
std
xchg
and
adc
mov
dec
cmpsl
fsubr
je
in
push
push
ljmp
mov
shrl
mov
shll
lea
adc
insl
or
push
xchg
xlat
fsubrs
ljmp
rcrb
pop
leave
cmp
fs
enter
aas
lret
fcompl
icebp
xor
cmp
arpl
jle
shr
jne
mov
and
sbb
or
bound
mov
mov
lods
add
shlb
dec
adc
das
fucom
nop
pop
flds
lods
adc
js
cmc
sub
mov
and
mov
inc
sbb
pop
mov
adc
xor
daa
inc
gs
test
mov
sarb
cld
aad
sub
imul
movsb
adc
int3
mov
sub
popf
ljmp
dec
rcrb
mov
cmpsl
cmp
and
hlt
jecxz
das
sub
int
inc
rcr
and
hlt
addr16
into
test
mov
decl
lea
adc
out
mov
sub
and
dec
jo
addl
xor
or
es
je
out
addr16
inc
pop
es
imul
aaa
call
sti
dec
test
push
cmc
rolb
in
mov
sub
add
dec
and
hlt
push
hlt
xchg
mov
mov
repz
mov
enter
outsl
in
jns
mov
out
dec
pop
loop
into
lret
push
jno
cmp
fimuls
imul
xor
push
cmp
jp
in
mov
push
shrl
inc
mov
jae
mov
stos
popl
cmp
test
push
dec
das
adc
jmp
in
push
iret
arpl
das
pop
test
push
xchg
leave
xor
sub
fcmovb
mov
or
test
mov
sub
jne
lret
dec
pop
push
cmp
shr
movsl
adc
add
jns
rclb
movsb
sbb
out
and
xor
cmc
pushf
cmp
push
push
inc
outsb
dec
and
call
shrd
fistpll
mov
jge
mov
aas
xor
dec
sbb
sub
dec
mov
mov
aaa
es
leave
xchg
cmc
xlat
popf
inc
mov
xor
in
js
sub
sbb
mov
cmp
sub
addr16
or
les
and
cmp
and
arpl
rcrl
dec
cmpsl
call
or
mov
movsb
add
pop
insl
cmc
cmpsl
sbb
xor
hlt
andb
xlat
nop
mov
loopne
pop
rol
sbb
and
pmaxub
stos
xor
jno
xchg
jl
and
sub
dec
fdivl
inc
lret
shll
xor
rcrl
dec
adc
das
xchg
push
out
pop
enter
xor
pop
fcoms
sti
xlat
or
aaa
and
push
xchg
sahf
rcrb
test
psraw
jmp
mov
sbb
jo
xchg
inc
ss
push
xchg
dec
imul
add
inc
ja
dec
aaa
fwait
jl
mov
es
xchg
mov
cli
cmp
test
mov
cmpsl
std
adc
test
adc
loop
cmc
lods
mov
or
in
inc
sub
test
push
lods
sub
inc
xchg
sar
or
xchg
pop
dec
push
shrb
xor
push
outsl
push
sub
pop
xor
test
sub
or
outsl
shlb
mov
lahf
lcall
test
xor
push
loopne
cltd
loope
jne
inc
inc
jp
mov
fimull
lcall
push
push
imul
cmpsl
enter
gs
xchg
dec
inc
in
xchg
call
push
adc
call
xor
iret
sbb
adc
or
dec
movsb
cld
shll
sub
push
xor
push
into
and
inc
mov
inc
mov
gs
hlt
jbe
push
pop
filds
push
dec
dec
test
iret
sub
cmp
xchg
and
rcrl
jne
repnz
push
out
shll
mov
mov
sbb
cmp
sarb
stos
jmp
mov
ret
fs
enter
ror
cmp
push
push
adc
cli
sbb
fs
dec
lds
jne
incb
cmp
sahf
xor
mov
xor
pop
cmpsb
jle
lea
hlt
sub
ss
add
mov
shl
cmp
fldl
addr16
xlat
sub
xchg
pop
xorl
mov
mov
cmpsl
imul
mov
dec
jne
jp
push
cmc
shrl
cmc
or
rolb
xor
and
loopne
cmp
rcr
and
rolb
jo
std
inc
ja
fs
fs
xor
sarb
pop
jmp
jb
push
or
shll
mov
sbb
cmc
pop
adc
adc
sarl
lock
arpl
inc
pop
movsl
aaa
inc
inc
pop
add
dec
rorb
xchg
and
and
jl
sub
inc
inc
and
dec
imul
cs
mov
push
sbb
sub
push
mov
cmc
hlt
push
cmp
push
out
xchg
mov
pop
push
stc
push
dec
cld
push
push
je
xor
enter
stc
mov
ds
add
and
dec
cmpl
cli
cmpb
hlt
int3
sub
cmpsb
stc
outsb
mov
dec
and
fst
test
fildl
push
mov
adc
adcb
mov
arpl
or
or
addr16
jmp
xchg
int
push
pop
lds
pop
cmc
push
fidivs
or
dec
hlt
inc
stos
out
leave
pop
leave
or
lcall
lods
inc
cmc
inc
lret
push
pop
cmp
and
mov
mov
fiadds
ret
enter
sti
jne
lahf
mov
fsub
cmc
cwtl
aad
and
mov
aaa
jmp
jle
popf
jnp
dec
nop
sahf
mov
std
incb
add
add
jne
popa
dec
xorl
pop
adc
inc
cmpsb
arpl
mov
ljmp
leave
push
jmp
outsl
inc
je
fcmovu
in
pop
mov
adcl
imul
mov
mov
add
pop
fbld
add
and
cmp
sub
ret
pop
das
push
loopne
xorl
mov
xor
inc
inc
js
lea
lar
jne
ret
dec
fdivr
fsubl
jo
fs
scas
mov
sub
test
push
jnp
push
cmp
sub
aaa
push
stos
xor
dec
ror
mov
jge
cs
lahf
cwtl
jns
decl
imul
lods
inc
test
scas
gs
push
adc
jg
scas
jecxz
mov
mov
dec
cwtl
dec
sbb
shll
push
into
dec
out
lock
cmp
dec
jle
rcrb
insl
scas
in
mov
lock
mov
cwtl
push
int3
cmp
lret
imul
rorl
roll
dec
jae
push
dec
and
sarb
arpl
dec
fwait
push
scas
test
test
add
imul
pop
push
lahf
lds
push
das
dec
cmpsb
adc
bound
pop
xlat
test
push
mov
xor
xor
cmc
push
xchg
rclb
jno
adc
and
mov
pop
xlat
jle
jne
xor
mov
add
out
shrb
sub
in
sar
sbb
jle
cld
stos
cmp
movsb
fld
in
out
adc
movsb
or
arpl
dec
mov
jns
fdivs
jecxz
and
sub
jno
repnz
lcall
xchg
push
insl
or
mov
push
fwait
andb
gs
fldcw
and
and
popf
pop
test
aad
jne
mov
test
jg
cli
icebp
dec
outsl
cmpb
dec
outsb
nop
imul
das
pop
jecxz
dec
addr16
jae
push
arpl
or
imul
lret
lahf
inc
xchg
add
mov
pop
movsl
int
xchg
add
lret
jns
push
fstpt
inc
test
rolb
lods
cmc
movsb
repz
scas
xor
and
and
dec
push
cmp
out
push
jmp
or
or
dec
popf
ret
and
adc
push
enter
and
mov
mov
cmpsb
sub
es
and
daa
or
pushf
lock
rcrl
sbb
sarb
cmp
arpl
popf
ljmp
fwait
add
imul
nop
jae
or
dec
and
mov
jne
or
jns
arpl
xor
icebp
mov
pop
imulb
test
inc
bound
xor
dec
and
push
jmp
jne
mov
in
xchg
cmp
adc
addr16
jp
lahf
mov
mov
sbb
fimuls
xchg
sub
push
lahf
jne
add
stos
aad
std
xor
fstl
push
sbb
mov
jb
sub
push
call
pop
dec
repz
and
sub
fwait
and
mov
xor
jno
stos
hlt
aad
and
sub
in
xor
dec
mov
setg
adc
movsb
aam
stc
les
jle
test
jge
jg
jge
push
enter
sbb
push
fdivr
icebp
inc
rclb
shlb
imul
roll
andl
pop
arpl
lock
cmpsl
insl
imul
adc
jp
movsl
push
xchg
scas
add
mov
xchg
jle
or
jl
dec
ret
addr16
call
scas
add
sbb
dec
sarl
mov
aas
lret
jnp
xchg
ds
push
call
xlat
push
scas
outsl
push
lds
jl
sub
jl
cs
fidivrs
ds
test
dec
ds
xor
add
ret
and
jno
hlt
xchg
xchg
movsb
add
push
fists
aas
mov
sarl
jo
and
gs
ret
inc
das
cmp
or
cmp
mov
dec
lock
dec
std
jno
fsubrs
mov
fdiv
js
push
inc
lock
movb
fidivs
jno
jne
call
pop
cmc
arpl
fimull
jg
cwtl
cmp
cli
push
movsl
xor
pop
hlt
out
inc
ret
xor
pop
mov
xorl
jle
aad
aam
inc
jns
mov
push
aaa
fld
aam
test
int
xor
mov
dec
push
add
add
mov
xchg
dec
jo
and
cmc
ljmp
pop
cmp
stc
test
dec
jecxz
mov
repnz
or
adc
pop
pusha
sarb
in
ds
sbb
jle
nop
dec
mov
sub
add
adc
arpl
xor
adc
cmp
sub
jge
sbb
mov
xor
adc
les
outsb
mov
push
fst
jne
mov
pop
cmp
sbb
subl
xchg
nop
orl
fwait
mov
xlat
mov
fstpt
dec
shll
mov
sbb
les
and
pop
cmp
mov
jne
andl
inc
test
and
mov
xlat
jmp
enter
inc
pop
pop
insb
mov
lcall
mov
cs
mov
cli
jo
std
pop
mov
fstpt
jg
jnp
jae
inc
mov
sub
cmc
mov
lret
iret
mov
movsl
inc
inc
sub
dec
es
stc
hlt
adc
jp
mov
iret
xchg
pop
and
aam
jl
adc
sub
push
fucomp
cmc
dec
ror
inc
js
les
and
mulb
lods
and
aad
inc
test
cs
fwait
inc
inc
push
aad
gs
enter
leave
jecxz
inc
dec
cltd
jp
rorl
std
push
and
and
mov
test
arpl
inc
jge
in
fsubs
lahf
push
or
inc
push
inc
jmp
mov
rcrl
fnstsw
mov
lea
cmp
fbld
mov
push
xorb
cli
cmpl
push
insl
cmp
roll
loop
into
ret
mov
lahf
test
popa
dec
add
stos
or
sub
rcr
or
rolb
imul
fldl
push
xor
or
leave
test
pop
jecxz
push
and
dec
sub
test
jno
hlt
jmp
xchg
mov
push
lret
push
lods
xor
add
jl
in
gs
inc
jns
or
aad
sbb
jp
push
pop
pop
movsb
repz
xchg
test
in
scas
subl
dec
sub
mov
xor
ficoml
les
repnz
imul
push
and
jg
jnp
sbb
or
pop
push
mov
scas
dec
xchg
shll
fbld
inc
dec
jne
mov
pop
out
mov
sub
xor
dec
and
das
das
stc
mov
xor
sub
sub
int
push
lahf
push
daa
movsl
mov
pop
xchg
sub
and
test
imul
and
push
jne
mov
dec
addr16
xlat
pushf
dec
int
dec
mov
leave
push
jae
and
jge
gs
imul
mov
mov
aam
or
iret
push
sub
jge
mov
lods
sbb
imul
xlat
mov
inc
cmp
mov
jg
dec
sbb
clc
icebp
dec
or
cmpsb
sahf
cmp
cmc
inc
jg
xor
test
iret
hlt
mov
jne
divb
gs
jmp
ja
pop
data16
rcr
adc
stc
in
push
jnp
js
jmp
add
shlb
lahf
lods
bound
dec
movsb
popa
pop
adc
shll
test
dec
or
shrl
sub
mov
rcl
cmp
bound
sub
or
arpl
imul
shrl
insl
xor
and
popf
mov
push
or
in
movsl
imul
loope
push
fmull
pop
mov
push
and
and
mov
jge
jne
sub
leave
push
dec
divb
jne
dec
stc
mov
cmp
jle
movsb
push
setl
add
mov
test
repnz
loop
cmc
push
pop
scas
test
fdivl
push
pop
vmovupd
jecxz
xchg
out
adc
sub
dec
nop
push
or
push
push
sub
ret
and
imul
stc
fs
push
push
sti
jg
jp
testb
pop
add
xor
lret
fwait
push
dec
mov
sub
dec
dec
sbb
rolb
jae
test
mov
iret
push
nop
insl
dec
mov
orl
jnp
stc
jnp
fsts
test
and
pop
jae
cmc
mov
xor
adc
lret
ja
call
mov
lock
ret
dec
pop
jno
mov
cmp
ds
mov
sarl
mov
push
cmc
ret
push
add
fsub
fstpl
cmp
mov
pop
das
das
dec
inc
hlt
or
lods
xchg
jmp
hlt
f2xm1
fdivr
cmp
dec
push
mov
and
inc
in
lods
fsub
mov
add
jle
sub
cltd
lret
mov
mov
mov
or
sub
shlb
or
ret
hlt
loopne
fwait
arpl
cmp
pop
pusha
jae
push
rorb
jle
fcmove
addl
xchg
je
icebp
test
xchg
addl
shl
sbb
jb
fs
test
nop
stos
pop
mov
aad
inc
adc
push
das
bound
pushf
loop
jns
cmc
lods
test
nop
jnp
nop
adc
in
mov
cs
out
inc
mov
mov
sbb
mov
jmp
lock
mov
jg
cs
xchg
push
cmp
sbb
stos
sub
in
popa
fldl
cmp
adc
ret
jmp
loop
mov
cmc
pusha
addr16
std
cltd
mov
shlb
push
ret
or
push
adcl
add
and
mov
into
lea
add
jne
andl
xchg
and
mov
jg
shll
ljmp
sbb
in
ja
push
nop
or
roll
jns
adc
call
arpl
test
and
popf
add
push
js
leave
inc
leave
mov
arpl
stc
test
popf
lds
sub
and
dec
test
dec
fdivs
jmp
test
test
es
xor
mov
lea
cmp
xor
stos
or
pop
sbb
addr16
inc
shl
sub
sbb
aam
adc
cltd
rolb
push
inc
and
dec
jne
mov
sbb
mov
and
out
adc
mov
sahf
out
push
jg
lds
push
cmp
arpl
or
push
mov
mov
dec
aad
sub
test
sahf
jp
and
imul
add
push
jg
add
pop
lcall
fisttpll
pop
sub
lret
jne
mov
push
in
sub
adc
nop
outsl
out
adc
stc
rolb
mov
xor
push
dec
jge
pop
mov
add
stc
fdivr
das
mov
mov
push
rol
inc
and
dec
lock
pop
jmp
and
mov
push
sub
sbb
ret
ss
roll
jp
rcrb
lock
in
sub
mov
sub
or
leave
hlt
je
lea
sbb
inc
gs
test
sbb
imul
aas
loope
dec
mov
daa
mov
les
cmp
mov
sub
pop
push
hlt
jbe
stc
sub
cltd
int3
or
and
and
xlat
xchg
cmc
sub
dec
push
and
fdivp
in
mov
adc
dec
aam
fcmovnu
lds
outsl
ljmp
or
decl
dec
hlt
cltd
in
loope
pop
cli
lret
inc
fsubs
lret
push
dec
enter
lods
inc
inc
pop
std
lds
jecxz
fisubrl
xchg
call
or
or
fdivrl
push
lret
sbb
inc
fcomi
loope
hlt
add
jbe
xchg
fnstcw
stos
jne
sub
adc
add
dec
bound
lea
icebp
sti
mov
dec
xor
aas
orl
xor
nop
lds
ret
lock
jae
repnz
mov
sbb
ss
js
into
xchg
pop
popa
inc
fsub
ds
and
bound
inc
les
sahf
test
push
jne
push
fs
movsb
cmp
test
sahf
mov
jne
leave
or
push
lods
or
pop
inc
outsl
aam
jge
adc
jmp
mov
repnz
cmp
int3
cmc
test
push
xor
xlat
adc
hlt
mov
cmc
call
jo
jmp
cmp
sub
cltd
popl
outsl
es
shlb
leave
adc
pminub
aas
add
in
ja
push
scas
popa
daa
jle
dec
jge
inc
sub
ret
out
pop
sarl
inc
ret
mov
dec
push
add
cmpl
ljmp
test
test
pop
sti
hlt
lods
push
mov
inc
ret
testb
ficomps
and
inc
pop
mov
add
push
cmpsl
inc
in
imul
fsubl
jmp
in
sub
add
xchg
mov
jns
jno
dec
scas
jne
rorl
jmp
fs
push
mov
lcall
shrl
rcrb
push
lahf
pop
push
sub
fcomi
push
and
sub
jmp
rol
xor
pop
fidivl
fs
jae
sahf
icebp
mov
sbb
jl
lret
jl
xchg
stc
jno
xor
jecxz
mov
add
imul
jo
xchg
pop
sti
or
jae
fdivrp
push
push
shll
jne
push
dec
aas
dec
or
dec
mov
jnp
popf
insl
push
movsl
adc
cmp
and
add
pop
pop
pop
xchg
xor
outsb
xor
push
dec
xlat
dec
cmp
int
aad
jns
and
push
addr16
sub
roll
mov
sub
push
fisttps
inc
outsl
add
xchg
fwait
packuswb
or
jae
loopne
jmp
or
dec
shrb
mov
icebp
imul
pop
arpl
outsl
das
mov
pushl
jle
leave
pushl
xchg
jne
gs
cmp
xchg
pop
gs
es
aas
insb
mov
xchg
jno
lcall
test
aad
loope
xor
in
test
xchg
push
mov
and
gs
js
jp
fildll
wrmsr
int
movsl
jne
pushf
fisttps
cmc
mov
lds
inc
xchg
cmc
lahf
je
stos
xor
js
mov
xchg
ljmp
add
dec
xchg
inc
mov
push
jmp
imul
xor
add
cmpsb
mov
lods
mov
lods
mov
lds
add
cmpsb
jge
inc
repz
scas
sbb
arpl
lahf
lods
sbb
lret
pushf
mov
mov
xchg
mov
test
cmpsl
lahf
push
jo
loop
inc
inc
fsubl
and
lahf
shl
mov
and
inc
lods
xor
mov
mov
daa
cs
sbb
int3
dec
cmpsb
push
pusha
popa
les
std
test
das
mov
mov
loop
mov
cmp
movsb
fcmovnb
stc
je
dec
roll
arpl
pop
sbb
in
and
push
seta
subl
push
out
xor
fwait
popf
mov
mov
repnz
and
mov
loope
xchg
inc
add
fidivs
sbb
je
cltd
inc
arpl
pop
push
clc
mov
and
call
mov
enter
or
stos
cmpsl
jge
outsb
mov
mov
nop
stos
pop
popf
push
mov
xchg
insb
gs
jne
cmp
add
je
jp
dec
mov
arpl
or
movsl
lods
push
inc
aad
sub
push
push
hlt
xchg
adc
lret
repz
les
or
js
dec
stos
fdivp
ss
jecxz
jae
shl
xchg
mov
cmc
mov
jp
ljmp
cmpl
std
nop
pushf
rcrb
or
mov
das
lret
dec
stc
and
xlat
dec
test
xor
jmp
out
cmpsl
js
jl
and
leave
imul
jae
and
sub
movsl
fildll
stos
cmp
sbb
lcall
xchg
sbb
mov
sub
scas
mov
sarl
test
fisttps
shlb
outsl
push
lret
faddl
popf
popa
mov
fidivs
shlb
das
jle
jbe
cltd
in
pop
mov
jns
inc
xor
and
aad
les
xchg
and
out
test
call
dec
xchg
push
gs
mov
outsb
andl
rorl
mov
jle
call
loop
jle
xchg
dec
test
ret
cmp
popl
or
lds
inc
hlt
or
xor
xor
clc
mov
sar
outsb
and
daa
xchg
and
mov
cmp
inc
adc
mov
adc
mov
ljmp
inc
dec
cmp
pop
push
xchg
dec
xor
cwtl
and
push
adc
pop
shl
stc
cld
ret
inc
inc
jno
daa
daa
dec
push
popf
mov
leave
push
xchg
pop
add
jae
fistl
stos
jne
and
xchg
outsb
int
lods
aas
dec
lock
getsec
rolb
dec
fdiv
test
mov
and
rolb
mov
lock
mov
imul
roll
lcall
lcall
mov
sbb
into
pop
data16
add
cs
enter
outsl
cltd
scas
cwtl
sub
jbe
mov
ret
xor
push
loop
push
lret
outsl
cmp
xchg
mov
insb
add
scas
mov
jnp
dec
jno
xchg
lahf
pusha
shll
enter
leave
rorl
icebp
jmp
or
addr16
mov
jnp
cmp
push
int
dec
cmpsb
jns
jp
inc
int
test
dec
dec
fisttpl
imul
dec
into
nop
popa
int
dec
lds
addr16
jecxz
dec
clc
sub
imul
cmp
loop
lcall
and
sbb
int
cmp
dec
inc
in
popa
xchg
hlt
bswap
insl
call
mov
fsubs
jae
xchg
arpl
mov
das
mov
xor
adc
int
js
lods
in
lea
cltd
xor
pop
pop
aam
jne
movsb
jmp
hlt
pop
roll
xor
mov
inc
push
sub
test
sub
aam
jnp
mov
lods
nop
mov
jae
jne
mov
adc
and
cmp
or
mov
cmc
stos
int
pop
cmp
leave
pop
lret
pop
dec
mov
aas
pop
incb
test
int
inc
mov
addr16
jl
mov
push
and
sub
xchg
cmpl
mov
push
aaa
stos
test
push
or
popf
mov
pop
adc
push
data16
and
sbb
sarb
int
pop
nop
lahf
push
lea
arpl
or
test
and
sub
loopne
mov
mov
nop
jle
test
sahf
push
test
inc
inc
gs
test
xor
xchg
rorb
leave
mov
add
ret
gs
popa
jg
shrb
pop
mov
repnz
jg
cmp
jg
or
inc
mov
movsb
out
pop
add
jmp
lds
push
test
sub
lret
jo
test
arpl
js
outsl
loop
mov
jnp
shlb
or
shrl
leave
jnp
icebp
jnp
jns
xchg
and
andb
stc
aam
arpl
imul
jns
jns
and
xor
lahf
fldcw
mov
push
jno
gs
sub
test
cli
aaa
xlat
imul
rol
pop
popa
cmpl
add
or
mov
or
and
dec
inc
cmpsb
insl
aad
dec
arpl
add
into
cltd
adc
jae
lock
inc
fwait
pop
jo
dec
popf
rcrl
mov
mov
jne
out
fdivs
cld
xlat
shll
add
jle
stos
xor
push
xchg
xor
sbb
in
xchg
daa
add
aaa
imul
cli
mov
mov
fnstcw
cmp
xchg
cmc
jp
jg
xchg
cltd
adc
xor
pop
mov
push
arpl
mov
xlat
adc
and
sbbl
cmp
divb
sbbb
cmpsl
jge
fldenv
xor
or
int3
lods
clc
inc
mov
mov
add
push
pop
mov
lret
jmp
and
mov
jecxz
push
or
repnz
push
push
xchg
and
adcl
arpl
xor
les
xlat
addr16
cmc
inc
and
jge
repz
clc
or
jge
jns
and
popa
shlb
push
adc
mov
dec
jnp
cmpsb
jo
mov
ret
jg
mov
or
mov
mov
sub
hlt
lea
jge
xor
ja
movsb
jg
or
jl
shlb
inc
hlt
add
nop
xor
and
hlt
and
jno
xor
xor
hlt
test
mov
inc
test
stos
icebp
pop
push
rcl
repz
inc
aas
lods
es
iret
loope
mov
mov
jne
aas
lret
adc
sbb
jge
jge
shrl
jae
daa
in
pop
xor
and
mov
arpl
sahf
jle
adc
cltd
pop
test
add
in
andb
push
sub
stos
fwait
pop
mov
gs
push
pop
and
mov
cwtl
push
dec
jmp
and
sub
sub
test
ret
inc
push
test
aaa
into
dec
inc
add
dec
outsl
jbe
psubsw
fwait
xor
fldcw
pop
xlat
jg
sbb
mov
sub
imul
loopne
lods
sbb
fldcw
lods
aam
jno
sbbb
insl
or
std
lea
add
outsb
adc
jge
inc
fnsave
aas
fnsave
es
mov
lcall
lret
sbb
or
pop
adc
xchg
sahf
sub
push
popf
aam
adc
test
jmp
or
cld
sub
jne
add
dec
pusha
xor
iret
add
jne
idivl
mov
lahf
dec
dec
test
push
sbb
inc
pop
xchg
sub
and
js
mov
xchg
inc
aad
and
das
or
lret
lods
pop
rcrl
jbe
jns
mov
pusha
or
ja
fwait
xchg
mov
mov
leave
xchg
sarl
adc
das
int3
and
mov
or
xchg
add
gs
xlat
pop
and
pushf
adcb
es
jb
cmp
and
jge
jecxz
incb
pop
sti
stc
popf
dec
or
pop
adc
inc
lahf
lret
outsl
fsubs
and
sub
fsubr
pop
push
pop
test
es
rolb
mov
hlt
stos
rcl
aam
push
test
inc
int
mov
push
adc
cmp
jecxz
dec
adcb
inc
sbb
adcb
imul
mov
mov
cmp
add
or
shr
and
mov
or
shlb
lds
scas
push
xor
daa
sub
test
mov
lcall
rcr
push
inc
loope
in
add
fadds
in
dec
sub
aas
mov
iret
das
mov
insl
mov
leave
shlb
cmc
mov
adc
aam
add
pop
cmp
xor
cld
mov
lock
jl
mov
xor
inc
and
pop
push
imul
insb
and
cmpsb
les
sub
mov
leave
int3
insl
bound
outsb
mov
dec
pop
fldenv
adc
xlat
add
fnstsw
lods
inc
push
xlat
shrl
adc
repz
insl
leave
jae
test
mov
push
stos
dec
push
stos
leave
mov
inc
jg
jae
shll
icebp
roll
add
jnp
mov
jnp
and
xchg
clc
addr16
xorl
addr16
xor
iret
filds
and
mov
sub
mov
cli
mov
inc
dec
ret
rorl
cmp
and
pop
xchg
mov
and
icebp
dec
dec
adcl
les
push
dec
jge
jg
push
shll
pop
andb
cmc
shr
jg
xor
jnp
and
xchg
scas
push
scas
push
xor
sub
and
cmp
dec
or
aas
aad
aam
daa
and
and
and
jge
les
enter
xor
mov
js
sub
cmpsl
mov
outsb
mov
leave
daa
push
push
lret
test
and
and
nop
jb
and
lea
jl
inc
sbb
push
push
sbb
icebp
sub
dec
outsb
and
add
pop
lea
xor
sbb
push
cmpsl
jns
jl
shlb
cld
or
mov
xchg
push
imul
xchg
and
out
or
add
jle
cmc
leave
cld
push
movsb
orl
jnp
push
lds
adc
stos
inc
pushf
pop
cwtl
movsb
repnz
in
aam
dec
mov
mov
stc
dec
shrb
enter
or
mov
jl
sub
or
movsl
mov
arpl
ret
sub
or
dec
popa
pop
lea
les
inc
leave
inc
cmc
jbe
lds
mov
iret
pop
fwait
cmpb
xor
push
cld
pop
testb
fwait
ja
pop
cmc
add
outsl
mov
jo
jnp
jno
cmc
cmp
stos
sub
clts
cld
cmp
and
push
out
mov
cmp
mov
lcall
dec
aas
pop
std
cld
xchg
pop
xchg
inc
xchg
or
sti
rcl
inc
aam
aaa
es
movsb
cmpl
jmp
daa
inc
icebp
dec
hlt
adc
pop
stos
outsl
repz
mov
dec
add
pop
xchg
mov
js
push
out
data16
scas
or
dec
jg
jae
lcall
scas
lret
gs
dec
gs
or
leave
pop
inc
stos
jne
pop
push
lock
gs
cmp
push
xor
pop
ret
jno
test
loope
das
pop
add
fwait
pop
and
out
lahf
mov
push
dec
stc
pusha
cmpsl
addr16
psraw
test
jno
clc
or
clc
sub
dec
jno
pusha
push
enter
lahf
arpl
push
in
cmpsb
aas
add
rcrb
fistps
push
fwait
mov
inc
ljmp
sbb
shl
add
pop
cmp
movsb
pop
clc
addr16
aas
ss
popf
dec
aas
xchg
mov
popf
xchg
inc
push
or
pop
popa
or
xor
aas
pop
xlat
mov
in
xchg
xor
jl
pop
mov
arpl
add
ficomps
aad
cmc
loope
in
jbe
scas
lahf
xchg
mov
sbb
xchg
test
jne
dec
sub
mov
shll
cmp
lahf
xor
cmp
sbb
or
shrl
cmc
cmp
push
loop
aaa
pop
add
fwait
jo
enter
imul
dec
stos
pop
pop
shrl
pop
je
mov
lret
mov
std
les
pop
out
jmp
jle
pop
mov
test
leave
mov
ljmp
jg
in
sar
bound
adc
xor
mov
shrl
or
push
mov
xchg
mov
aas
mov
ret
push
xchg
fwait
aaa
incl
jg
pop
decl
push
loope
andl
aaa
push
push
fistl
pop
lods
push
xor
push
pop
mov
fwait
int3
jnp
mov
push
mov
adc
dec
sub
out
lds
push
xor
xor
pop
leave
cs
test
or
push
sub
push
das
xchg
std
pop
jo
and
mov
xor
pushf
cmc
imul
push
dec
jae
dec
adc
xor
in
das
dec
cmc
repz
cmpsl
push
daa
sbb
pop
xlat
popa
loopne
cs
and
push
mov
or
jl
jge
dec
ret
mov
xchg
test
lahf
call
or
ja
arpl
hlt
cmp
out
sub
jnp
scas
lock
enter
ja
fwait
dec
adc
jno
dec
repz
push
outsl
in
fs
test
push
push
and
stos
pop
imul
test
jae
outsl
rorb
and
sub
inc
gs
test
inc
inc
pop
lock
and
adc
stos
imulb
xlat
scas
jbe
xchg
pop
mov
inc
inc
mov
les
lret
and
xchg
mov
scas
cmp
fsubr
and
sbb
outsb
dec
xor
lods
mov
cmpsl
sub
test
or
inc
dec
jge
roll
lock
or
neg
les
add
jle
cmp
scas
dec
inc
mov
mov
aas
mov
xchg
repnz
shr
mov
in
pusha
lret
inc
push
jo
test
rolb
fsub
inc
xchg
xlat
icebp
push
xchg
fisttpl
addr16
out
scas
inc
or
test
add
cmpsl
add
imul
test
sbb
rol
rol
std
mov
out
cmp
pop
mov
enter
and
and
shll
dec
add
jne
cltd
stos
mov
push
jle
adc
mov
mov
and
movsb
jnp
ret
lods
es
jp
inc
jg
loopne
dec
sbb
insl
adc
leave
xchg
imul
xchg
lret
jge
mov
jbe
and
call
add
push
daa
dec
in
icebp
dec
cmpsb
dec
dec
stos
hlt
push
fisttps
inc
push
dec
sub
fmuls
add
adc
lds
stos
outsl
aaa
push
rorl
das
mov
stos
xchg
mov
daa
dec
cmp
shrl
iret
dec
ljmp
mov
push
cli
or
stos
cmp
cs
lods
add
cmp
push
dec
into
mov
fildll
repnz
mov
xor
pop
or
in
test
wbinvd
sbb
and
out
pop
bnd
mov
in
mov
addl
jle
mov
push
aas
inc
stos
lods
test
push
idivb
jle,pn
xlat
jge
cmp
jne
push
jae
cmp
out
iret
jle
movsl
out
mov
cmp
ja
pushf
jg
outsl
mov
xchg
movsb
jmp
outsl
cmpsb
xchg
mov
cwtl
xchg
cmc
aam
cmpsl
rcll
subl
cmp
dec
outsb
push
dec
and
rcl
jnp
lea
mov
cmp
sarb
lods
pop
sub
mov
xor
dec
or
mov
shlb
mov
add
cmp
and
hlt
nop
mov
out
mov
cltd
or
fdivrs
inc
push
imul
daa
das
and
pop
rol
mov
addr16
gs
inc
jne
jle
hlt
jno
inc
push
mov
jnp
insl
push
mov
daa
sbb
or
jo
dec
sbb
or
sub
out
adc
aaa
ja
or
mov
mov
mov
imul
fwait
pop
mov
aam
adcb
sbbl
insb
mov
xchg
cwtl
imul
aam
push
sbb
adc
and
sbb
imul
sub
dec
pop
imul
jle
outsl
ds
pop
jnp
jno
out
popf
xor
jle
ror
xchg
pop
in
stos
aad
movb
push
inc
pop
pop
aas
aas
lods
fcmovbe
inc
lahf
jnp
push
nop
je
lahf
jecxz
sub
out
jmp
inc
cmc
jne
jecxz
je
pop
lret
adc
js
mov
out
mov
rcrb
xchg
decl
xor
rcr
sub
insl
test
adc
cmp
add
testb
or
jnp
in
loope
push
cmpsb
mov
sbb
mov
jae
push
add
addl
jne
lock
inc
in
sbb
arpl
and
leave
sub
ja
sub
faddl
or
jns
scas
xor
fistps
arpl
aam
push
mov
dec
in
xchg
rcrl
adc
in
js
pop
mov
and
cwtl
cmp
pop
lock
xor
imul
push
outsl
pop
xor
lcall
or
or
push
lcall
push
jp
aad
pop
mov
xchg
jmp
ljmp
push
push
dec
mov
dec
gs
test
add
outsl
not
fwait
lods
rol
adc
sbb
lcall
aaa
push
pusha
sub
fwait
mov
cmc
cmc
test
imull
fnsave
sub
add
xor
lret
sub
jp
and
scas
stos
jns
xchg
dec
in
rcll
aam
push
add
and
out
inc
sbb
cmc
mov
aam
xchg
inc
and
dec
xor
cmc
out
sbbb
xlat
or
xchg
leave
inc
jge
inc
and
ret
xchg
sbb
test
xchg
nop
pop
mov
dec
and
jmp
aam
cmpsb
les
xchg
jns
ds
inc
inc
cmp
inc
ret
or
ror
jmp
ds
cmp
mov
or
vaddps
dec
hlt
jo
out
pop
ds
add
inc
pop
das
dec
sbb
inc
outsl
negb
out
xchg
pop
sbb
out
adc
out
and
jle
mov
push
aas
lret
data16
loopne
mov
mov
inc
pop
std
sbb
arpl
pop
test
jnp
xor
arpl
popa
sbbb
nop
aas
add
test
aas
and
dec
cld
add
pop
pop
nop
jne
test
aad
call
cmp
loop
into
jnp
out
mov
hlt
push
sahf
push
cmp
jecxz
imul
stos
jbe
sti
pop
adc
stos
xor
add
mov
mulb
test
sbb
and
push
mov
sub
dec
ljmp
dec
rcrb
inc
hlt
adc
push
fsubr
push
dec
push
scas
and
adc
pop
and
stos
lds
mov
jne
nop
mov
shrl
leave
test
push
push
pop
fstl
xor
sarb
fwait
dec
stos
mov
xor
xchg
test
push
push
mov
test
mov
movsl
push
and
mov
ds
sbb
cmp
jl
and
mov
sub
add
adc
inc
stos
lods
dec
mov
test
xchg
sub
jl
add
cmc
rcll
cmp
in
inc
cmp
xlat
insb
xorl
and
adc
cmp
or
push
pop
push
lret
jle
lret
push
dec
and
popf
xor
jae
rcr
adc
pop
push
mov
mov
sub
paddw
out
push
adc
fbld
mov
jle
jns
add
jg
loope
and
adc
rolb
pop
arpl
dec
mov
push
fnstcw
test
iret
cmpsb
and
call
pop
stc
pop
sub
push
push
jbe
jb
xor
pop
je
and
adc
and
or
pop
jne
and
movsl
ljmp
and
int
inc
push
movl
xor
test
lds
pop
inc
ja
dec
xchg
daa
shll
or
jg
je
rcrb
jg
test
leave
jp
push
pop
insb
aad
stos
pop
test
mov
notb
mov
adc
inc
lods
call
adc
add
cltd
xchg
xchg
cmovnp
fs
adc
jg
jae
stos
stc
xchg
aam
aad
ror
push
int3
lods
lahf
out
inc
jns
lret
cmp
popf
sbb
inc
xlat
push
js
adcl
ret
cmpsb
icebp
inc
aam
mov
add
leave
push
cld
sub
mov
les
push
xor
into
test
test
sar
dec
inc
ljmp
cmc
xor
stos
sub
mov
add
fcomps
fisubl
les
jge
inc
insl
or
or
fld
pop
hlt
repnz
sub
lods
jp
push
leave
scas
adc
es
pop
inc
and
sub
enter
mov
jne
inc
mov
mov
cmp
and
shrb
dec
mov
pop
ret
dec
mov
cmpsb
pop
dec
and
mov
es
cmp
push
shlb
sbb
out
gs
int
sarl
lds
lods
clc
shrl
ror
cmp
stos
test
fimull
and
push
jge
push
pop
sbb
int3
push
cmp
inc
popf
aad
sbbl
pop
or
sar
fisttpll
mov
stc
inc
cld
jb
mov
adc
inc
test
mov
fists
pop
test
sub
stos
pop
jne
es
xchg
sub
inc
sub
mov
xor
fistl
xor
repnz
pop
dec
mov
adc
push
mov
push
testb
inc
andl
cmc
mov
dec
jno
movsb
iret
testb
inc
enter
or
fs
push
rcrl
sahf
insl
xchg
push
xchg
movsl
and
or
movsl
fldcw
push
pop
ret
sbb
jle
sbb
pop
jnp
xor
push
hlt
outsl
lds
inc
gs
push
inc
fmull
popf
stc
iret
inc
out
push
dec
ret
pop
cmp
inc
shrl
mov
mov
lcall
lret
sarl
hlt
mov
enter
les
or
rclb
or
push
inc
lahf
cmp
int3
xor
inc
xchg
xchg
mov
mov
movsb
ret
pop
xchg
sahf
and
mov
sub
stos
into
rcr
adc
dec
inc
pop
and
testb
jae
aad
dec
mov
mov
out
adc
cmc
dec
adc
hlt
jnp
jbe
or
mov
call
scas
pop
push
mov
inc
daa
inc
movsb
insb
popf
dec
in
xor
sub
cmc
popa
fistl
jno
mov
popa
outsl
mov
inc
stc
inc
dec
int3
loop
xor
test
xchg
in
aam
lret
insl
nop
fdivrl
idivb
test
jge
bnd
shll
fwait
lret
push
mov
sbb
int
push
xchg
enter
dec
in
lods
cmc
push
fs
inc
sarl
adc
bound
adc
sahf
stos
je
jno
js
add
rorb
or
jg
sub
mov
fstps
loope
adc
dec
fistl
jmp
cs
repz
cmp
lahf
xor
push
or
pop
cmp
aas
push
or
cmp
sub
pop
mov
dec
xor
pop
xchg
clc
lods
ds
test
xchg
and
and
and
or
in
cmpsb
xchg
out
pop
jg
push
ds
sbb
lahf
or
cmp
xlat
jp
xlat
sub
mov
jnp
sub
loope
jp
shrb
jmp
out
stc
jne
mov
pushf
mov
push
and
mov
add
mov
lds
cmp
mov
mov
fwait
mov
jae
aas
sub
ljmp
loope
hlt
lcall
out
mov
push
sub
movsl
jne
push
and
std
loop
aas
mov
xor
stc
fmuls
dec
pushf
pop
dec
push
mov
into
pop
hlt
add
repnz
enter
addr16
and
cli
mov
pop
lock
xchg
sahf
sbb
aas
arpl
insl
push
popa
mov
xor
leave
push
popa
jno
dec
loop
shrl
rorl
mov
mov
scas
in
or
mov
cs
cmp
pop
xchg
test
jne
outsl
mov
sahf
stos
lods
shrl
mov
xor
pop
sub
jno
fiaddl
movsl
scas
int
sbb
je
xchg
mov
jle
or
pushf
pop
dec
mov
xchg
outsl
sbb
push
and
pop
sub
je
rolb
lea
imul
add
arpl
mov
hlt
cli
or
push
and
or
mov
mov
jae
lds
pushl
xor
mov
add
test
inc
int3
cli
or
into
movzbl
imul
rolb
popf
movsl
sub
mov
jae
sub
mov
andb
jne
mov
add
add
js
cli
shr
cmp
lahf
lret
and
aas
or
clc
inc
and
jmp
push
enter
lock
lahf
adc
and
lods
xor
cld
adc
inc
or
jle
xor
ror
daa
mov
mov
int3
jne
mov
lret
or
or
adc
orl
test
pop
pop
aas
xchg
lea
sbb
ja
dec
mov
or
adc
ret
in
mov
fs
leave
fdivr
aam
push
movsl
adc
ret
mov
shll
int3
and
sbb
xchg
out
cmc
mov
test
arpl
imul
sti
jb
lahf
sahf
or
pop
loopne
in
inc
jno
dec
mov
push
inc
mov
lret
push
add
roll
inc
gs
lahf
mov
mov
imull
sbb
xor
cmpsl
add
sbb
push
js
adc
imul
sub
test
xchg
fcompl
and
mov
dec
test
pop
in
aas
inc
inc
dec
and
hlt
repnz
les
rorl
das
fs
sbb
jp
dec
dec
sbbl
clc
test
dec
hlt
test
xor
std
mov
stos
adc
mov
imul
enter
inc
pop
and
in
std
dec
pop
dec
add
test
pop
pop
popa
test
and
hlt
imul
push
cmpsl
lahf
sub
jb
cwtl
imul
cmpsb
daa
push
out
jnp
test
js
notl
popa
movsb
insl
movsb
mov
pop
jmp
xor
out
pop
pop
outsb
xchg
pop
rclb
into
arpl
jge
or
add
ja
jns
data16
adc
mov
push
push
ljmp
fwait
sub
inc
adc
popf
adc
clc
pop
inc
xchg
test
hlt
insl
cltd
push
call
jp
push
ds
mov
and
addb
dec
stos
js
cmc
mov
fistpll
mov
cmc
shl
pop
fadd
push
aas
inc
mov
bound
mov
push
lahf
lds
test
push
mov
sti
dec
sub
inc
jno
rcll
flds
iret
cmpsl
imul
aad
int
leave
popf
icebp
pop
in
outsb
sar
sub
clc
cmc
sbb
mov
into
dec
enter
push
dec
sub
dec
test
lahf
sub
js
lret
lahf
data16
push
int3
mov
sub
lock
mov
adcl
jne
sti
xchg
jg
add
or
andb
fsubl
daa
mov
mov
movsl
mov
inc
sub
dec
mov
lret
or
rolb
les
mov
mov
sbb
cmpl
push
adc
and
jnp
add
sub
push
and
mov
dec
jle
lea
subb
inc
mov
jno
ja
pop
jnp
sbb
int3
xor
mov
mov
adcl
pop
in
aas
push
shll
dec
mov
adc
pop
pop
jb
cmpsb
jae
fsubl
test
pusha
xor
xchg
roll
arpl
lret
rol
sub
jmp
push
iret
push
dec
inc
cmp
mov
aam
test
push
stos
dec
jp
cs
test
aaa
mov
pop
jge
cmp
xor
arpl
sub
scas
mull
dec
inc
sub
cli
std
cmp
or
pop
adc
movsb
shll
push
inc
cmpl
xor
sub
cmpl
xor
push
mov
adc
fistl
dec
mov
popf
inc
out
mov
fsubrl
ret
dec
inc
push
and
popf
aam
test
push
push
shlb
faddl
pop
outsb
jnp
xchg
loope
inc
and
mov
xchg
add
fdivrs
fiadds
inc
and
or
enter
push
adc
jno
xor
mov
inc
xchg
lds
jp
pop
jns
inc
mov
inc
sub
adcl
jne,pt
sbb
les
imul
xchg
leave
cmc
push
aam
aad
stos
ss
jg
cwtl
jnp
inc
ficoms
movsl
repz
jnp
pop
dec
std
incl
or
repz
sbb
pop
lds
push
das
pop
mov
sbb
push
mov
jb
bound
outsl
cmpsb
cmp
cmp
into
jno
cld
mov
and
jo
scas
mov
das
cmpsb
movsl
mov
stos
test
cltd
lods
mull
cs
cltd
mov
adc
movsb
stos
testb
sarb
and
sbb
mov
enter
inc
cmpl
inc
test
cmp
test
mov
lcall
push
and
xchg
inc
inc
int
sarl
adc
scas
dec
cmc
push
mov
dec
fimuls
jne
add
dec
push
sub
test
hlt
in
mov
and
ror
icebp
mov
mov
popfw
stc
xchg
dec
dec
test
imul
shrb
repnz
jge
popf
xor
mov
or
cli
push
scas
push
cld
jne
xchg
jg
orl
xor
sbb
pop
mov
push
xor
add
push
stc
xor
adc
data16
cmpsb
lods
sbbl
imul
xor
or
cwtl
out
pop
imul
add
scas
mov
repnz
inc
jae
shrl
add
inc
jl
aam
xlat
aas
sub
popl
clc
addb
das
dec
dec
aas
cmp
pop
xchg
ja
pop
push
js
scas
cmc
mov
shld
push
pop
ja
adc
in
outsl
xchg
pushf
lods
xchg
rol
stos
xor
dec
push
sub
test
lods
in
push
sahf
test
or
adc
and
shll
scas
add
scas
jg
adc
add
mov
pop
loopne
xchg
aad
dec
test
mov
adc
jl
jg
mov
xor
jne
test
lods
xlat
add
xor
cs
jl
enter
fwait
dec
add
sbb
cmpl
stos
mov
xchg
in
jnp
dec
aad
mov
dec
aaa
and
outsb
or
inc
dec
mov
jo
nop
jle
mov
push
dec
ret
rolb
fnstenv
inc
ds
and
dec
sarb
ret
in
sbb
enter
lea
xchg
sti
inc
cmp
repz
outsb
dec
addl
push
mul
lods
pop
or
xchg
jge
mov
gs
movsb
add
jge
repnz
lds
add
stos
movsl
adc
mov
in
xlat
xchg
cs
mov
lods
adc
scas
lret
and
sahf
dec
push
and
pop
xchg
jmp
popf
hlt
and
notl
fwait
dec
xchg
add
pop
mov
stos
cmp
and
arpl
test
fnstcw
lahf
loopne
in
loopne
fwait
sbb
cmp
and
subb
jle
or
xor
sbb
aam
ret
cmc
in
add
and
xor
mov
xchg
or
inc
pop
dec
pusha
sub
setl
mov
aaa
cs
movsl
ds
enter
or
add
gs
mov
push
push
ret
insl
inc
mov
push
mov
je
jge
add
mov
shlb
jno
ret
hlt
sbb
or
cwtl
ja
roll
andb
gs
inc
dec
shl
jae
add
int3
sarl
rolb
shrb
jns
roll
push
pop
sub
aas
mov
mov
add
rcll
xchg
inc
jns
jbe
sbb
shlb
in
mov
arpl
out
jle
fs
dec
popf
dec
test
mov
mov
xchg
pop
sub
jmp
test
mov
test
inc
lret
adc
pop
lret
and
and
adc
in
sti
aad
lret
nop
jns
mov
adc
imul
mov
cmp
cli
jmp
pushf
jne
aam
mov
add
pop
cs
fsubp
fwait
movsb
cmc
aad
sbb
mov
add
jns
out
mov
stos
cmp
sub
xor
jo
jle
add
and
enter
pop
mov
add
mov
arpl
cmp
dec
pop
sub
rolb
addl
leave
add
rcrb
or
inc
cmc
xor
mov
xchg
daa
int3
roll
jne
cmpsb
adc
jp
stc
movsb
jle
and
and
aaa
push
mov
mov
adc
xchg
cs
sbb
test
push
push
xchg
pop
xor
mov
js
mov
pop
das
das
sub
xchg
inc
mov
jnp
mov
mov
push
push
sub
push
xchg
popf
xchg
test
jae
pusha
push
enter
xchg
sarb
pop
jne
push
in
add
test
pop
mov
insl
dec
cmpsb
lods
stos
bound
inc
rcll
cmc
or
pop
lret
fxch
ds
std
rol
idiv
ret
cmpsb
mov
in
nop
inc
jp
mov
mov
orl
pop
mov
adc
test
cmp
add
movsb
push
add
pop
jmp
fbld
sbb
sub
fstpt
movsb
mov
pushf
adcl
hlt
push
lods
and
lahf
jne
pusha
andl
mov
and
ret
push
test
dec
mov
lcall
js
pusha
lods
mov
and
xor
mov
sub
leave
mov
push
inc
test
cmc
clc
out
dec
pop
mov
xor
sahf
lea
rcll
sarl
rcrb
mov
into
rclb
push
nop
ror
xchg
pop
insb
fimull
push
jo
add
sub
rorl
or
popf
and
std
in
aam
or
out
inc
add
out
cmpb
sahf
iret
out
cmp
cmp
fnstsw
aam
mov
cli
cmp
test
lods
xor
push
lcall
ss
iret
push
pop
aam
push
and
ljmp
jno
stos
loopne
fisubs
fsubl
push
insb
lods
and
add
aas
mov
and
popf
in
scas
aad
dec
dec
nop
lcall
and
push
aaa
enter
cmp
or
add
push
or
jg
stos
jne
sub
dec
adc
psrlw
cmp
or
leave
in
nop
addr16
les
push
cs
sub
pop
adc
xchg
xlat
jmp
xor
mov
aaa
adc
xor
xor
jnp
xor
jg
stos
cmp
ljmp
mov
mov
push
fmuls
insl
sahf
test
fmuls
lret
ja
inc
arpl
jmp
push
iret
ret
aad
movb
test
les
stos
out
lahf
pop
roll
mov
inc
xchg
shll
xor
cmc
lret
xchg
sbb
adc
leave
dec
popf
dec
xchg
pop
imul
das
xor
jne
mov
mov
dec
es
add
sarb
imul
mov
cmpsl
jbe
stc
scas
pop
sahf
leave
push
ret
and
push
xor
stos
jp
dec
stos
or
pop
dec
dec
pop
sub
test
aam
cmc
cmp
sbb
das
dec
icebp
pusha
pop
dec
gs
mov
sub
inc
pop
decl
fldcw
outsb
int
jl
mov
jg
cltd
js
inc
sti
inc
int
outsb
dec
shr
inc
push
or
sahf
loopne
test
sub
pop
test
es
and
cmp
or
xor
jecxz
xlat
pop
fsubs
dec
dec
imul
stos
inc
cmc
rclb
test
js
xor
cld
jecxz
lock
je
mov
sbb
push
or
pop
jle
aas
sbb
jg
fwait
scas
dec
icebp
mov
mov
pop
push
ljmp
or
jnp
ja
lods
sub
sub
cmpb
insl
pop
jns
pop
xor
imul
std
xor
adc
std
daa
test
jae
aaa
xchg
lea
pop
push
xchg
setnp
push
cli
xlat
pop
xchg
pop
repnz
pop
aas
fs
sti
ja
cs
jns
test
rolb
test
lock
testl
hlt
mov
sub
leave
lcall
sub
cmp
je
mov
xlat
adc
enter
sub
clc
sub
xor
mov
lods
mov
aas
fists
jb
in
mov
test
inc
inc
aas
test
pop
adc
test
nop
in
mov
inc
inc
inc
test
les
sets
into
and
jl
jo
mov
test
or
adc
mov
sahf
insb
mov
dec
and
mov
adc
push
pop
cli
jmp
pop
imul
xchg
inc
nop
int3
add
jne
test
shrb
loop
gs
leave
inc
inc
fwait
sahf
outsb
mov
jae
lods
pop
jecxz
inc
add
dec
or
pop
sub
and
leave
add
lcall
lcall
test
adc
cld
jp
adc
cmp
jge
mov
aad
mov
hlt
clc
or
xor
fistl
fldt
icebp
sahf
ja
jle
fs
cmp
add
dec
pop
inc
ret
mov
mov
cmp
adc
push
xor
cmp
xchg
mov
fisubrs
loop
orl
js
ret
out
dec
aas
push
test
sahf
mov
pop
cli
pop
jo
std
or
fidivl
push
movsl
addr16
xor
and
in
cmp
push
inc
sbb
clc
and
test
mov
cwtl
xor
out
pop
jns
push
push
push
inc
daa
leave
jne
push
ja
xchg
add
pop
shrl
popf
or
and
mov
mov
mov
test
and
pop
iret
mov
xchg
movsb
dec
adc
sub
cli
mov
pop
sub
mov
pop
lods
out
pusha
xchg
les
cmp
rolb
mov
inc
xlat
repz
andb
pop
or
pushl
das
and
or
pop
sub
and
test
in
test
lcall
ja
pop
ficomps
pop
sub
movsl
jne
ror
xchg
and
insl
pop
leave
add
ds
and
pop
arpl
scas
or
sbb
bound
gs
cmpsb
loope
fmuls
push
test
sbb
mov
shll
mov
pusha
mov
sti
dec
shlb
xlat
lock
cmp
fcompl
dec
or
pop
cmc
inc
add
mov
aad
jnp
inc
push
add
adc
les
shrb
dec
xor
out
ss
je
das
aam
mov
ljmp
ret
push
inc
leave
cmc
add
dec
push
cmp
add
test
lahf
and
xorl
pop
jle
mov
mov
aaa
or
mov
pop
sub
das
insb
fwait
mov
in
push
out
pop
das
ljmp
adc
dec
mov
leave
rol
fdivl
lret
hlt
aas
or
addl
add
mov
xchg
and
mov
inc
pop
adc
outsb
lret
leave
push
arpl
movsl
in
cmpsl
adc
mov
gs
fucomi
aad
sub
pop
pop
pop
test
mov
arpl
fprem1
lret
mov
leave
aam
icebp
push
cmp
fisttps
mov
dec
rorb
test
sbb
cli
jmp
loopne
adc
inc
decb
push
xlat
int3
jbe
inc
or
cmp
push
push
jne
mov
cmc
test
cltd
out
xor
cmp
inc
sarl
repz
test
mov
dec
test
outsl
shlb
cld
sub
fisubs
sbb
dec
dec
pop
and
push
xchg
loopne
xchg
sarl
subb
mov
inc
mov
outsl
inc
jnp
jae
jne
and
ja
andl
cmpsl
outsl
adc
jl
jne
mov
shr
pop
test
outsl
or
cmp
pusha
pop
add
repnz
adc
xorb
pop
adc
aaa
xor
jge
cld
add
dec
xor
lods
fstp
adc
orb
lds
cmp
xchg
jecxz
ja
inc
and
mov
scas
push
add
cwtl
fwait
pop
fcompl
or
bound
mov
fwait
cwtl
pop
dec
mov
dec
gs
mov
gs
in
int3
mov
sbb
pop
and
dec
mov
pusha
dec
lret
sarl
pop
add
adc
xchg
push
idivb
incl
fisubs
sti
push
fiadds
aas
out
pushf
shl
test
cmpsl
pop
jo
mov
push
pop
movsb
sti
or
pop
and
or
sub
popa
jo
sbb
je
mov
aaa
pop
fstl
sub
jo
scas
mov
fldenv
in
iret
enter
mov
pop
inc
jne
push
das
scas
jo
add
mov
sbb
push
jnp
fdivrs
aas
xor
jne
mov
jns
mov
iret
enter
es
out
sbb
jg
test
pop
inc
scas
ss
adc
xchg
push
lcall
inc
pop
mov
imul
sub
mov
iret
or
out
push
fcomps
add
jae
mov
sub
jge
cld
rcrl
mov
xlat
int3
jge
fsubrl
inc
sti
jae
sub
fstl
flds
dec
push
or
or
ja
xor
flds
iret
pop
xor
xor
out
call
cltd
mov
jnp
das
mov
cmc
fs
sarb
pop
ret
cli
push
aam
out
pop
jne
pop
jle
ss
pop
cmp
and
es
pushf
and
imul
aam
arpl
xchg
pop
pusha
test
xor
stos
mov
jb
mov
lds
mov
stos
pop
pop
mov
xor
or
stos
push
movsb
mov
pop
dec
sbb
mov
fnstenv
xorb
cli
xor
daa
aaa
negb
enter
andl
or
popf
nop
mov
or
jmp
imul
mov
call
arpl
ret
nop
ret
mov
inc
xchg
mov
and
shrb
push
out
pop
sub
lods
or
jnp
gs
ret
scas
jecxz
arpl
jb
mov
add
and
ja
int3
fwait
movsb
inc
dec
jl
out
lahf
fdivl
push
fwait
rcrb
into
cld
push
lods
sbb
pop
mov
js
js
mov
cli
int
fists
int
adc
sub
push
and
fwait
jecxz
or
mov
data16
mov
jge
fs
enter
rolb
add
xor
mov
or
daa
push
sub
nop
cmp
cmp
aam
jmp
sar
out
jp
push
jp
mov
and
and
jb
mov
sub
shrl
cmp
jge
or
and
mov
jb
or
pop
cmpb
lds
sub
inc
cmpb
push
out
or
stos
cmc
clc
test
pop
xor
stos
and
ret
cmp
sub
data16
in
sti
shll
push
imul
adc
mov
gs
cmp
sub
test
ds
pop
push
mov
aam
fldt
insb
dec
fldt
pop
push
stos
add
dec
ljmp
xor
stos
pop
dec
aad
xchg
stos
sahf
outsl
icebp
shlb
mov
dec
xchg
xor
lods
mov
movb
and
pop
out
subb
pusha
and
xor
fdivrs
pushf
rorl
mov
shrl
and
mov
popf
jne
jb
cmp
mov
xor
mov
enter
adc
push
cmp
push
movsb
pop
lods
aaa
fisttpll
cmp
fisttpl
push
test
cmc
adc
sahf
add
leave
gs
sbb
xchg
push
enter
xor
lret
les
es
subb
and
sti
mov
jg
icebp
hlt
test
rcll
or
das
or
imul
push
xor
popf
sub
xchg
xlat
lods
jge
sahf
jne
stos
mov
iret
pop
dec
or
and
sub
dec
mov
testb
aas
cmp
inc
fs
sub
hlt
sub
stos
ja
push
xor
adc
and
jmp
inc
xchg
xchg
jle
pop
cs
jbe
outsl
jne
faddl
imull
mov
leave
mov
arpl
insl
sub
jno
xchg
jle
stc
jo
rolb
repnz
sahf
mov
mov
cmc
daa
pop
lahf
ljmp
or
stos
addr16
insb
ss
mov
jne
pop
mov
xchg
lods
xchg
mov
add
cmp
jg
pop
out
test
leave
int
lret
aam
arpl
dec
push
jnp
xor
arpl
gs
add
xor
test
pop
ja
mov
xchg
lea
xchg
shll
dec
mov
rolb
test
fwait
scas
mov
dec
das
push
dec
jg
push
jb
mov
cwtl
mov
mov
xor
mov
pusha
push
sti
push
fildll
push
or
push
lcall
jbe
fmull
out
test
je
je
aam
lods
push
test
mov
xor
cmp
mov
xor
and
ret
jl
mov
mov
lds
cmc
mov
arpl
and
xor
ljmp
lret
cmpsl
aaa
push
sub
pop
adc
hlt
setbe
add
xor
int
mov
and
push
and
cmp
call
jge
push
cwtl
cld
or
fdivr
pop
mov
pop
jae
push
subb
xor
dec
pop
mov
xor
lods
sub
jo
xchg
dec
sbb
lds
xor
push
aam
dec
orl
and
mov
sbb
jae
cli
lock
pusha
adc
aad
pop
add
in
cmpl
nop
shlb
jmp
sub
ret
stc
mov
icebp
inc
mov
out
les
sub
add
ret
xchg
pushf
mov
cmp
push
xor
pop
and
push
xlat
or
das
push
enter
sub
cmp
in
adc
xchg
mov
adc
mov
insb
hlt
mov
int3
sub
jne
add
cwtl
in
mov
adc
xor
dec
dec
inc
popf
fs
mov
or
hlt
out
xor
jg
scas
insb
mov
and
xlat
sub
dec
lret
xor
jg
push
icebp
cmp
aad
test
cli
bound
mov
sub
cmpsb
add
and
dec
push
sbbl
adc
add
ret
icebp
repz
and
pop
push
mov
sbb
xchg
ret
dec
ret
mov
test
hlt
loopne
dec
inc
sub
sub
jne
push
mov
push
push
push
mov
jg
and
add
jl
das
into
in
popa
inc
inc
xor
out
repnz
xor
movsl
arpl
ja
stos
cld
mov
cmp
sarb
and
ficompl
mov
stos
jne
sub
loop
pop
jmp
test
push
cmp
push
jle
ds
std
hlt
gs
ja
shl
sbb
data16
ret
les
add
idivb
add
jl
xchg
jl
iret
sub
add
lret
or
loop
aas
leave
push
xor
push
inc
lds
adc
int3
shrl
pop
in
out
push
push
and
das
in
loopne
lcall
dec
movl
inc
add
incl
inc
lea
pop
xor
ficompl
mov
xchg
pop
xchg
xchg
imul
dec
jne
or
dec
jo
lds
lahf
mov
iret
mov
sti
or
add
inc
adc
xor
out
jmp
push
jnp
mov
sub
pop
daa
frstor
push
aam
mov
pop
orl
adc
lahf
outsb
xor
pop
es
dec
test
mov
imulb
cmp
loop
shrl
stc
loop
mov
cmp
gs
ja
inc
and
cmpsb
xchg
scas
das
inc
dec
push
push
pop
pop
fidivrs
fsubrs
stos
test
iret
lahf
mov
cmp
xor
mov
pop
fsub
das
mov
and
pop
lahf
pop
mov
xorb
pop
jmp
add
cmc
sbb
dec
xor
popa
imul
inc
lds
and
rorl
aam
rclb
std
cs
jbe
cld
jne
adc
stos
fs
orb
inc
jg
mov
leave
mov
test
lret
push
arpl
xchg
mov
sub
push
lret
pusha
and
and
ror
shr
push
inc
fldl
inc
jno
mov
iret
push
jmp
xchg
cwtl
sub
mov
mov
jg
pop
lods
dec
sbb
push
dec
sbb
cs
sub
das
inc
mov
lock
pop
pop
sbb
or
out
test
cmp
nop
inc
mov
mov
xor
mov
or
add
jge
iret
test
stc
dec
xor
sub
shll
mov
add
cld
dec
rcrb
rcl
or
fiaddl
popf
das
mov
pop
rorl
je
and
dec
pop
jbe
push
int3
outsb
mov
gs
lret
jl
add
pop
sub
jl
cmp
pop
aam
pop
ficoms
mov
push
pop
movsl
scas
stos
lret
inc
push
vcvttss2si
sbb
push
add
xchg
dec
cmp
lret
dec
or
and
dec
pop
or
sub
scas
stos
sbb
mov
and
mov
aaa
mov
or
and
mov
faddl
dec
out
dec
les
cmc
test
shr
add
hlt
roll
pop
in
dec
push
jl
pop
push
inc
cmp
jne
xchg
das
imull
and
dec
pop
mov
lds
dec
sub
fs
rcrl
popf
xor
scas
aas
pop
xor
push
or
ret
xor
inc
push
mov
xor
xor
mov
add
andl
add
arpl
or
enter
adc
pop
xor
rcll
jge
xorl
pop
jg
sub
jae
mov
xchg
rolb
add
movsb
push
scas
push
mov
fimull
sub
push
pop
mov
sbb
cmp
adc
mov
gs
adc
and
and
into
sbb
push
dec
aaa
test
mov
faddl
push
adc
adc
and
or
or
or
gs
std
jns
inc
mov
jl
incb
pusha
add
inc
out
loop
pusha
dec
fstpl
dec
add
jo
cmpsl
add
pop
xchg
ficoms
leave
jno
dec
adc
fwait
cmpsl
stc
xchg
and
test
repz
dec
cmp
dec
ds
push
or
lods
fucomip
adcl
loop
sbb
popf
int3
lods
aad
pop
int3
xchg
scas
sti
mov
into
mov
lahf
push
dec
sub
pop
ffree
or
push
inc
jne
aas
inc
and
int
lret
xchg
sbb
ror
jns
test
pop
xchg
mov
icebp
aam
push
test
jne
fs
or
dec
and
cs
add
xor
fnstsw
sub
lret
sub
sbb
cltd
aad
stos
rorl
add
pop
jne
lcall
fstpl
inc
aad
test
push
test
addr16
in
int
fcoms
sub
or
andl
mov
dec
cmp
mov
sbb
cld
adc
ljmp
leave
pop
inc
xchg
das
fsubr
jb
or
xchg
xor
mov
jge
mov
fwait
add
jae
mov
scas
jne
fdivrs
pop
mov
push
data16
movsl
imull
shlb
jnp
in
inc
mov
xchg
aad
jo
dec
das
xor
nop
add
lods
push
ds
stos
aam
jnp
enter
iret
hlt
xchg
pop
orl
jle
adc
inc
push
dec
dec
jl
xchg
loop
fisttpl
fistpl
pop
push
add
or
and
pop
xorl
clc
mov
jns
push
sub
ret
sub
push
daa
push
jmp
mov
loopne
and
es
add
jg
adc
mov
cmp
xchg
and
inc
rorl
out
and
jle
pop
dec
sub
fs
sarl
and
dec
sahf
xor
inc
or
sub
sub
cs
jnp
subb
ficoms
mov
sub
adc
inc
sbb
sub
andl
in
mov
dec
push
ret
dec
mov
sbb
ljmp
mov
test
jg
jg
sub
in
fisttpll
jg
hlt
or
mov
jne
bound
enter
xchg
shll
adcb
lret
push
mov
jns
sbb
add
pop
cmpsl
or
mov
insb
lock
call
mov
test
xchg
mov
es
jge
cwtl
cltd
sbb
enter
jbe
mov
add
stos
jne
jnp
daa
push
jg
pushf
push
jmp
cli
mov
mov
int
pop
push
cmpl
and
pop
leave
pop
hlt
ja
je
jg
imul
pop
stc
mov
mov
add
and
adc
pop
mov
dec
push
push
les
addr16
inc
sti
and
xchg
jecxz
sub
and
mov
int
inc
movsl
sbb
fstl
push
in
push
and
popl
mov
and
jno
imul
mov
push
dec
cmp
arpl
jo
and
lret
out
in
idivl
push
repnz
cltd
add
inc
icebp
cwtl
inc
inc
dec
mov
push
push
pop
insl
sbb
lock
and
ja
cmp
sbbl
hlt
jnp
loopne,pn
add
aaa
sub
xor
xor
add
lods
jl
sub
push
push
jne
xor
mov
cmpsb
push
dec
fisubl
xchg
ja
cltd
jmp
cmpsb
add
fnstsw
mov
je
jle
int3
or
and
pop
pop
mov
mov
push
jmp
orb
les
and
ss
arpl
subl
test
jnp
notl
push
jmp
pop
aas
jg
mov
sbb
cmpsl
repnz
cmp
cmpsl
call
test
jne
and
fs
adc
xchg
sbb
je
pop
sbb
in
shrl
mov
insb
pusha
add
xchg
cmp
pop
adc
cmpsb
js
and
mov
xchg
adc
fcom
outsl
aad
lret
sbb
and
or
je
pop
push
aaa
mov
add
push
rcrb
xchg
aad
inc
jo
xchg
or
jae
aaa
xchg
add
xchg
push
jge
insl
xor
sub
inc
fsubl
jmp
arpl
gs
int3
cmpsb
es
in
inc
enter
dec
add
adc
inc
sbb
xchg
push
jge
out
mov
push
xor
mov
xor
popf
stos
adc
insl
sbb
sub
xlat
clc
outsb
sub
and
leave
cmp
shrl
das
in
inc
cli
test
xor
mulb
cmp
or
dec
xor
enter
xor
push
loope
xor
in
inc
mov
inc
data16
pop
das
dec
mov
daa
xchg
mov
sub
mov
pushf
test
call
test
inc
fadd
test
pop
mov
or
rcrl
and
or
xchg
movsb
pop
in
xor
inc
xchg
js
arpl
leave
or
stc
jecxz
dec
cmp
inc
mov
xchg
cmc
aas
cmp
xor
rcl
pop
xchg
test
and
jp
int3
sub
test
push
aam
lds
inc
leave
lahf
leave
fcompl
push
push
fdivr
push
jno
lods
inc
jae
push
or
loope
dec
shrb
mov
rol
fpatan
dec
rclb
inc
push
ret
sbb
movsl
std
and
dec
inc
xor
ret
mov
dec
mov
outsl
aaa
xor
nop
add
out
push
daa
fadds
pusha
outsb
rorl
sti
rolb
movsb
cmp
hlt
jbe
mov
in
push
pop
movsl
sub
push
fldt
jp
pop
adc
xchg
cmp
add
add
add
bnd
jle
xchg
lea
cld
pop
lds
loopne
mov
and
adc
gs
mov
xchg
inc
adc
mov
dec
fisttps
enter
push
inc
ja
jae
mov
add
outsl
dec
repnz
imul
xchg
or
movsb
jmp
sbb
decb
scas
jb
not
xor
push
in
jbe
dec
shll
jns
add
fists
adc
sub
pusha
imul
roll
fstpl
jnp
lret
leave
add
push
fisttpll
sarb
dec
orl
dec
jge
dec
lret
fs
ds
lods
adc
shrb
pop
fsubr
test
push
and
mov
rorl
and
lods
adc
sub
push
inc
cmp
push
cmp
insl
sub
les
add
cli
mov
movl
loope
and
lock
add
inc
loop
add
mov
lds
add
and
dec
inc
decl
icebp
inc
addr16
add
inc
out
cmpsb
ljmp
into
add
adc
movsl
inc
leave
test
cmp
xor
and
xchg
aaa
and
cwtl
jne
andl
cmp
jns
xchg
mov
imul
xchg
push
sub
adc
mov
xchg
in
sbb
sarl
into
jo
jecxz
sti
add
add
mov
shlb
and
inc
aas
lea
mov
pop
addb
and
fldt
out
push
idivl
dec
sbb
test
aad
inc
xor
jne
neg
push
pop
into
dec
cmc
push
mov
js
pop
repnz
push
cmc
sub
push
jmp
jb
ret
dec
cmc
sbb
stos
mov
mov
jge
lea
and
pop
leave
push
mov
xchg
mov
decb
inc
xchg
lret
leave
and
ss
ret
int
rclb
push
fidivrs
xchg
sarl
cmp
aas
and
in
mov
dec
sub
mov
mov
jae
daa
or
imul
lret
dec
dec
and
das
pop
movd
into
sub
dec
mov
ret
and
mov
mov
adc
jecxz
and
out
inc
pop
lahf
adc
adc
jae
mov
inc
fwait
dec
divb
xor
shrb
into
cltd
mov
js
mov
pop
adc
dec
mov
outsb
push
and
inc
loop
xchg
popl
pop
mov
clc
scas
dec
loop
stc
inc
loope
jle
pop
test
shl
scas
mov
ret
lahf
pop
dec
arpl
dec
jne
out
and
ret
loope
in
pop
test
std
popa
repnz
rclb
fcoms
inc
mov
mov
mov
movsl
outsl
ret
ret
into
adc
popf
insb
or
cmp
popa
mov
cmp
mov
test
out
xor
mov
cmp
jg
mov
fstpt
xor
cmp
test
fwait
int
mov
xchg
xchg
add
sub
push
mov
cltd
cmpsb
or
shlb
fmul
jecxz
leave
decw
dec
rolb
ss
inc
rcrb
std
sbbl
and
and
sub
pop
jno
sbbl
das
cld
into
int3
inc
movsb
jnp
push
mov
loopne
test
or
mul
test
push
fwait
iret
or
rolb
aaa
stos
inc
test
pop
cmpsl
cmp
enter
inc
mov
lock
int3
and
xor
and
cld
push
es
lea
rcrl
ja
loope
cmc
and
xchg
inc
inc
jnp
test
sti
jl
inc
push
add
jbe
fisttps
push
nop
popf
push
dec
imul
gs
repnz
xchg
fs
aas
add
mov
pop
and
sarb
mov
xchg
mov
jl
pop
xorl
jge
dec
dec
mov
and
test
dec
fbld
aam
inc
test
test
push
sub
inc
aam
dec
mov
in
inc
push
inc
jae
push
popf
xchg
roll
js
add
pop
imul
add
dec
nop
in
and
dec
gs
add
xor
inc
in
inc
out
stc
js
jg
js
out
or
jno
rcrb
stc
and
add
cmc
out
cld
mov
push
andb
pusha
arpl
mov
inc
cmp
inc
mov
cmpsb
fdivs
cli
imul
jno
sub
lds
jne
jge
add
mov
pop
dec
jnp
pusha
sti
push
pusha
shrb
cmp
ja
push
add
jle
insb
mov
stc
cmp
nop
ret
hlt
xchg
add
decl
dec
jns
sbb
popa
push
xor
sahf
and
rol
jge
adc
jns
mov
dec
sahf
mov
adc
or
ja
sahf
xorl
xor
inc
push
loope
mov
aam
dec
test
insl
dec
cmp
cwtl
fisttpl
mulb
xor
and
jg
dec
lods
ret
jne
mov
add
cmpsl
in
inc
mov
lahf
fwait
in
jne
and
sub
fcomi
dec
pop
xchg
dec
or
dec
mov
rorl
xor
mov
data16
jge
add
add
stos
nop
or
subl
mov
repnz
push
inc
inc
adcl
cs
sub
cmp
insl
shll
mov
leave
sti
ret
lds
scas
jbe
inc
dec
hlt
stc
add
dec
lahf
adc
mov
icebp
and
mov
aaa
pushf
popf
cmp
fsub
mov
jo
mov
mov
cmp
dec
add
sub
mov
jno
pusha
mov
in
jl
jae
popa
or
data16
jae
push
sub
mov
das
push
scas
je
jp
aaa
adc
test
sbb
es
scas
fs
rorl
cwtl
inc
aam
jle
shl
stos
push
xor
cmpl
daa
popf
push
dec
pop
xchg
leave
popl
in
loope
dec
fisttpll
sbb
dec
hlt
nop
adc
jp
stos
daa
push
inc
stos
popf
mov
in
pop
lods
push
out
dec
ljmp
movsl
idiv
mov
stos
jp
fs
jge
ss
push
sahf
mov
inc
and
cmpsl
xchg
push
mov
mov
in
xor
jno
mov
out
test
sub
cli
shlb
or
fisubrs
andl
xchg
jne
ds
jmp
xor
jle
mov
cmpsb
test
adc
aam
movsb
imul
scas
ret
xchg
popf
aad
das
xor
loop
scas
scas
sahf
jb
repnz
mov
ret
dec
jp
ror
addr16
into
movsl
lods
sub
faddl
shrl
dec
pop
mov
and
lds
add
and
lahf
dec
fmul
inc
dec
push
push
push
cwtl
scas
push
scas
outsl
idivb
jno
enter
mov
inc
nop
mov
dec
push
jle
pop
jge
mov
sub
mov
cwtl
lods
and
or
cmp
fcmovne
inc
imul
call
dec
push
stos
lcall
out
push
sub
cld
fdivrl
mov
and
push
xchg
test
iret
ja
jne
xchg
test
jno
popf
dec
outsl
push
insl
mov
push
lahf
imul
push
loop
stos
xchg
test
xchg
mov
pop
add
gs
out
push
movsb
xor
int3
pop
mov
lahf
xor
jno
rclb
insl
adc
push
lret
add
mov
jge
mov
orl
dec
addr16
add
push
pusha
sub
push
fwait
sub
mov
faddp
mov
pop
dec
cs
push
mov
movsl
ljmp
loope
dec
push
into
dec
push
inc
or
jle
shr
and
subl
stc
mov
fs
jnp
inc
or
and
push
arpl
xor
mov
mov
repz
pop
pop
jmp
add
pop
in
cmp
lcall
icebp
mov
add
sub
arpl
insl
pop
push
bound
frstor
pop
push
addr16
sbb
ss
mov
stos
stc
inc
and
cmp
shll
mov
adc
sub
xchg
stos
dec
add
push
shll
outsl
and
popf
xor
push
cmp
aas
or
rcrl
sub
sbb
movsl
hlt
movsb
cmc
jne
gs
mov
mov
cmpsb
aas
test
push
rolb
mov
cwtl
pop
nop
inc
rolb
or
inc
cmp
gs
aad
jns
xor
sub
jnp
push
shlb
jge
rcrl
or
jle
jbe
xor
pop
sbb
mov
aaa
decb
add
mov
test
test
ja
jle
aaa
jle
ficoml
pop
outsl
mov
incb
mov
fdivl
shll
or
push
sub
or
sbb
cmp
lahf
inc
lods
adc
rorl
jle
shll
xor
sub
add
xchg
mov
push
mov
daa
out
push
imul
ret
movsb
in
mov
mov
or
jne
lods
aaa
xchg
push
push
push
cmpsl
sbb
jne
dec
iret
ja
les
nop
ja
fisttps
inc
push
jmp
fs
inc
xchg
and
adc
jl
pushf
cmpsb
push
and
cltd
out
mov
loope
pushf
movsl
cwtl
xor
or
jno
jnp
test
cli
bound
dec
sbbb
push
cwtl
and
inc
and
jl
imul
into
or
push
dec
stos
or
std
xlat
adcb
in
push
and
loopne
jp
inc
pop
cwtl
mov
aam
add
out
sbb
and
cmp
add
xor
out
mov
push
and
pop
sub
push
dec
stos
addr16
dec
inc
dec
add
push
stos
ds
bound
cld
jle
push
test
mov
ret
xor
mov
sti
sahf
and
pop
sub
dec
js
popa
sarl
jl
jge
jne
test
lret
sub
nop
hlt
ficoml
xchg
fisttpll
push
sub
push
xlat
cmc
mov
or
ja
and
fcmovnb
dec
fstpl
push
jp
rcl
leave
push
pushf
push
cmp
inc
enter
in
push
rcrb
nop
in
push
xor
int
das
jp
es
std
pop
add
imul
stos
jne
xor
sub
sahf
clc
jecxz
add
adc
push
les
stos
test
pop
je
rorl
decb
lea
movsb
jge
push
or
xchg
cmc
shll
movb
adc
mov
imul
mov
lods
dec
outsb
pop
fisubl
dec
flds
cmp
or
aad
mov
fnstsw
int
movsb
inc
and
mov
call
dec
cmp
fstps
inc
pop
lds
dec
mov
or
xor
xchg
ds
jnp
inc
push
or
ljmp
mov
push
mov
push
jle
imul
jmp
adc
movsb
in
xor
inc
and
scas
push
xchg
cmp
incb
insl
push
mov
and
loope
inc
lods
sub
test
or
cltd
imulb
mov
or
xchg
fnstcw
inc
inc
fildl
push
inc
push
mov
mov
add
repz
mov
sub
mov
sahf
mov
insb
addr16
jp
jns
add
dec
cmp
stos
mov
xor
mov
mov
add
test
movsb
sub
jle
je
out
mov
imul
jle
fxch
and
sti
mov
or
filds
jmp
cwtl
dec
push
call
lret
cmp
iret
inc
xchg
cwtl
mov
scas
or
pop
out
cmpsb
lods
and
cs
push
inc
shlb
frstor
dec
dec
fists
and
shr
sub
test
pop
sub
sub
add
cmp
adc
adcb
dec
mov
lds
xor
fsub
les
adc
mov
mov
jo
pop
jg
shlb
sbb
cmp
cmp
jg
idivb
test
cmp
pop
pop
pop
jne
stos
inc
loope
adc
stos
cld
adc
lret
fs
lods
cs
push
popa
lods
cmp
movsl
dec
je
xchg
fdivr
sbb
push
in
insb
mov
lret
test
push
jne
jle
jb
or
mov
inc
push
mov
test
xor
dec
pop
mov
mov
cmc
dec
xchg
jns
stos
sub
dec
push
cli
cmp
xchg
inc
loope
xor
inc
add
cmp
int3
push
lret
sbb
js
ja
and
push
jge
push
cmp
add
push
test
cmp
mov
pop
shl
fimull
add
or
clc
xor
sti
cwtl
jo
push
roll
add
mulb
or
add
mov
push
add
lret
jmp
mov
movsb
adc
jae
rolb
and
lods
gs
rolb
std
lds
cwtl
shrl
test
inc
jle
xor
pop
imulb
mov
dec
push
cmp
loope
push
test
out
mov
or
mov
les
mov
cwtl
int3
stos
mov
in
test
inc
or
and
cmp
scas
aam
and
fs
mov
jecxz
and
fists
push
cmp
xchg
out
stos
mov
loop
inc
adc
pop
stos
or
xor
add
shr
adc
jae
add
stos
sbb
push
roll
les
cmp
test
hlt
scas
out
ja
ljmp
jecxz
repz
shl
pop
jl
mov
cmp
xor
movsb
stos
hlt
add
inc
add
and
push
push
jl
jmp
ret
xchg
test
jmp
xor
enter
cmpsl
lret
das
mov
and
jne
push
int
and
fistpl
repnz
les
mov
pop
roll
add
sub
lea
push
dec
inc
rorl
lods
or
inc
insb
test
and
hlt
dec
xchg
int
cmpsl
enter
enter
in
mov
fcmovnu
ja
cmp
ret
rclb
jmp
mov
cmp
push
jp
pusha
add
push
cmp
cmp
push
lods
shlb
rcll
lret
out
dec
rcll
inc
inc
push
cmp
sub
push
in
in
pop
sub
in
rcl
cmp
je
scas
push
push
jae
sbb
mov
or
add
dec
and
sbb
cmp
jnp
decb
push
sub
push
inc
add
lret
clc
lea
mov
add
sub
lods
jne
imul
dec
dec
loopne
dec
movsl
push
inc
or
mov
mov
test
fistpll
or
nop
and
mov
push
js
mov
stos
push
jno
enter
nop
jno
dec
pop
xor
inc
xor
ret
dec
dec
rcl
inc
xchg
jne
mov
jl
hlt
sbb
jp
aam
pop
in
and
or
inc
bound
add
ret
loop
test
insb
push
inc
les
mov
dec
push
mov
add
pop
xor
push
inc
dec
inc
pop
add
int3
pop
scas
loop
sub
xor
cmp
das
aaa
xor
sub
iret
add
sarl
pop
xchg
jne
sub
sbb
hlt
jmp
mov
inc
mov
lret
lds
fsubrs
jns
and
jp
fistpl
cltd
aad
or
movsl
in
pop
or
mov
xor
xchg
roll
sarl
jo
in
movsl
cli
sti
scas
pop
sub
pop
inc
rol
cmc
push
lods
push
cmp
adc
fmull
call
stos
add
sub
or
cs
cmp
cld
push
sbb
data16
inc
cmp
das
popf
cmpsl
mov
cwtl
insb
jo
cs
cs
adc
popf
shlb
fdivl
lds
mov
xchg
push
pop
mov
mov
xor
hlt
fldt
lds
das
cmp
mov
xchg
in
mov
scas
cmp
cs
pop
dec
es
push
push
and
cs
stos
faddl
pop
inc
or
ja
push
mov
inc
pop
gs
add
dec
gs
or
mov
cmp
sarb
fstp
inc
hlt
mov
jmp
rcrl
jecxz
cmp
adc
xchg
enter
jno
ds
cmpsl
dec
mov
xchg
fwait
pop
inc
inc
enter
loopne
std
arpl
gs
mov
mov
ret
mov
adc
xchg
mov
sub
insl
inc
xor
mov
test
push
mov
xlat
inc
fidivs
add
cmpsl
jbe
gs
popf
in
xchg
add
nop
xchg
adc
sbb
pushf
push
mov
cmp
jne
popa
rolb
sarl
adc
dec
sti
in
xsavec
in
fsubl
rclb
add
popf
dec
lahf
test
mov
jne
and
popf
push
insl
hlt
icebp
cmovs
movsb
rclb
add
inc
adc
inc
iret
ret
xorl
pop
mov
sub
test
mov
scas
dec
sbb
push
xor
inc
das
in
insl
jbe
push
popa
loop
outsl
ret
and
adc
insb
mov
rorl
cmc
outsb
jl
xor
in
test
push
and
cmpl
dec
dec
int3
outsl
rorb
jbe
xor
les
sub
cmp
and
mov
lods
xchg
fwait
jno
dec
in
movsl
fistps
xchg
lret
adc
push
mov
fldt
xor
inc
or
and
push
fidivl
or
jnp
gs
push
lret
add
int3
adc
inc
test
lds
subb
dec
add
fildll
xchg
shrb
enter
mov
pop
mov
xchg
cmp
mov
les
push
push
je
cmpsb
js
add
bound
cmpsl
jnp
cli
push
push
push
push
mov
in
xor
and
imulb
add
and
jno
and
push
and
mov
add
jecxz
add
and
int
inc
cld
pushf
jp
lret
hlt
mov
stc
mov
cmp
xor
lds
into
into
xor
pop
push
cmp
test
out
dec
das
adc
mov
in
orl
sahf
aam
jae
jge
je
push
xchg
add
add
adcl
pop
negb
test
jo
scas
aad
jae
or
sub
test
leave
sbb
cmpsb
jnp
movsl
sub
sub
inc
xlat
push
ret
mov
xchg
or
dec
loop
orl
xor
mov
fidivrl
in
sub
mov
push
iret
lods
jb
adc
movsl
shr
into
pop
inc
cmpsb
add
xor
repz
cltd
cli
fidivrl
add
jne
or
sub
xor
xlat
mov
jns
mov
sbb
enter
jns
and
fistl
imul
dec
aas
sti
lods
pop
add
mov
dec
push
das
cmp
stos
inc
es
arpl
xchg
push
pop
sub
sub
rcrb
std
scas
and
cs
mov
mov
stos
jl
sub
xchg
aas
mov
out
and
loope
or
pusha
and
addr16
enter
push
sub
cmp
hlt
pop
mov
out
nop
movsb
into
mov
loope
incb
cmp
outsb
out
add
jne
push
dec
rolb
and
aas
dec
dec
add
dec
pop
inc
dec
mov
xchg
push
xor
hlt
call
mov
push
sbb
inc
es
enter
lahf
cmp
fs
and
inc
mov
sub
dec
addr16
inc
dec
add
dec
inc
push
xlat
es
addr16
rorl
stos
int
rcr
mov
movsl
sbb
adcl
push
stos
aam
pop
out
and
gs
sahf
and
mov
pop
mov
adcl
mov
les
sub
mov
sub
mov
movsb
repnz
imul
fsub
aas
cs
pop
aas
xor
sbb
ret
out
lock
pop
cli
ja
xchg
out
in
dec
out
lods
data16
int
aad
lods
cmp
mov
mov
cmp
cmp
jno
sub
mov
hlt
in
or
dec
add
lcall
add
pop
rcrb
shll
rorl
call
nop
roll
sarb
xorb
aas
call
pushf
jmp
xor
daa
gs
sahf
inc
int3
icebp
or
aad
pop
test
decb
rclb
dec
and
sahf
jno
add
push
popf
jno
pop
push
add
sahf
jne
push
hlt
pop
jbe
adc
popf
cmpsl
xor
sub
test
mov
jmp
mov
into
test
adc
movb
push
push
inc
int
xor
sub
enter
and
push
flds
pushf
add
xchg
rolb
int
lea
and
cld
aad
aas
sbb
jg
xor
fsubl
xor
fisttps
xlat
pop
dec
insb
mov
movsb
mov
cld
imul
lods
test
push
and
xor
and
or
fdivp
fdivl
aad
or
dec
jns
mov
icebp
xor
lret
std
sub
and
int
sbb
mov
popf
dec
fiaddl
xlat
push
ret
mov
xor
jnp
movsl
cmp
movsl
sarl
loope
icebp
sti
push
sarl
add
inc
pop
divb
movsb
push
jne
mov
in
and
int3
mov
and
int3
dec
and
mov
and
xchg
shl
cmp
pop
cmp
or
pop
rolb
mov
out
shll
jmp
dec
cwtl
push
dec
add
lds
dec
nop
int3
jp
push
xlat
mov
xor
scas
aam
xor
pop
push
mov
xchg
inc
fsubr
jp
ffree
push
or
cmp
inc
fcoml
lea
push
xorl
stos
es
lret
cmc
inc
push
outsl
hlt
sarl
fstpt
fcmovnb
push
sub
gs
xor
cmp
cmp
loope
xor
out
adc
test
sub
push
cmpsb
mov
push
stc
mov
ljmp
fwait
or
xchg
nop
or
pop
dec
jl
leave
cmp
sub
xchg
nop
into
xor
mov
or
rcll
dec
fisubs
mov
xchg
push
testl
icebp
pop
inc
add
in
test
data16
imul
sbb
jnp
adc
cmp
jne
int
mov
mov
jne
insl
or
imul
cmp
jge
push
mov
mov
aas
lods
scas
add
imul
les
aas
pop
or
nop
dec
jae
ret
scas
inc
sub
mov
movsl
mov
inc
cmp
push
push
addr16
stc
sub
insl
les
cli
lods
sbb
mov
pop
aas
cmpl
out
mov
dec
insb
outsb
dec
rcll
and
pop
lret
sarl
xor
adc
mov
mov
or
lods
arpl
inc
lods
or
mov
mov
add
insb
lods
rcl
dec
jmp
mov
and
test
jno
aad
mov
in
mov
fiadds
inc
adc
jle
fs
xlat
dec
adc
mov
and
cmpsl
decb
lahf
mov
int3
test
jle
rcll
mov
mov
sbb
movsb
pop
cld
and
pop
jle
cwtl
xor
scas
sahf
int3
std
shrb
nop
insl
in
mov
adc
fdivrs
jo
pop
int
cmp
push
inc
inc
cmc
aas
cmp
add
hlt
adc
and
sub
std
add
cmp
pop
dec
mov
orl
adc
xchg
and
roll
sbb
pusha
pop
shr
push
in
bound
jmp
jns
or
or
sub
sub
pop
xor
fistpl
push
fcoms
out
sahf
icebp
dec
cmc
adc
daa
push
shrb
lock
adc
cs
testb
xchg
cltd
cmc
cld
cld
sbb
es
test
aaa
push
jg
es
arpl
gs
ss
pop
je
je
lds
dec
jns
jno
push
push
in
loop
jg
imul
dec
fs
push
add
fwait
imul
mov
jno
ds
jae
dec
std
pop
pop
icebp
hlt
mov
cmp
cmp
std
loop
aas
jb
dec
fadds
cltd
mov
cmpsb
les
das
js
mov
or
dec
lret
movsb
into
sahf
mov
rcrb
mov
dec
mov
dec
pusha
mov
mov
mov
push
cmp
out
sub
dec
adcl
push
jnp
pop
loope
js
movsl
shrl
sbb
or
jmp
cltd
aad
lods
fwait
dec
pushf
in
xor
loope
pop
std
out
call
adc
push
arpl
and
outsb
mov
jne
adc
inc
fwait
inc
cmp
lcall
aad
clc
call
sbb
nop
loopne
jle
xchg
in
incl
fsubl
lret
rcrb
vcvttss2si
out
call
add
roll
or
or
mov
cmc
fnstsw
xor
jge
pop
xor
fbstp
sub
lods
outsl
and
aas
add
pop
pop
pop
jge
dec
inc
cmc
push
daa
loope
sarb
jle
jge
jae
mov
xchg
jecxz
push
pop
adc
push
bound
mov
leave
rclb
cmp
aas
mov
xchg
inc
mov
fwait
dec
jle
jns
cmp
mov
leave
push
and
frstor
jnp
inc
adc
and
push
mov
push
pop
pushf
sub
jns
adc
cmp
lcall
dec
cmc
mov
push
lds
pusha
pop
jae
in
push
xchg
test
jno
push
sub
and
sub
test
ja
out
stos
push
dec
push
in
mov
jno
mov
mov
mov
dec
dec
sub
push
loope
push
and
loopne
mov
inc
aad
dec
stos
dec
call
mov
aas
pop
and
aad
push
mov
out
lea
aam
sbb
sub
imul
jno
adc
sub
inc
rcrb
mov
inc
mov
or
pop
sarb
xchg
pushf
movl
xchg
inc
sbb
sarb
ret
mov
adc
jae
lret
shlb
mov
int
cmp
push
cwtl
hlt
sbb
mov
inc
dec
push
dec
jle
push
push
dec
mov
dec
ret
out
jno
int
sti
mov
pop
fsubrs
daa
lods
mov
push
sub
repz
je
mov
dec
xchg
aad
test
pop
stos
cmp
push
pusha
pop
and
push
mov
pop
inc
movsb
pop
xor
shrl
shll
call
das
arpl
push
and
je
xchg
mov
xchg
or
xchg
sub
add
sub
mov
aad
and
mov
shlb
xchg
xchg
xor
push
rolb
cli
aam
mov
push
cmp
shlb
dec
adc
imull
lock
jg
lret
jp
addb
and
stos
push
lret
xchg
movl
fnstsw
xchg
test
push
aam
rcrl
dec
push
dec
popf
mov
cmp
into
lret
addr16
fsubrs
ficompl
leave
loopne
sub
adc
hlt
inc
negl
sahf
rolb
pop
and
lret
nop
xor
mov
adc
adc
xchg
push
jge
xor
inc
rorb
add
repnz
in
pop
mov
imul
jmp
mov
scas
sbb
inc
xchg
inc
xchg
les
dec
fs
jmp
aad
and
lahf
dec
enter
jnp
xchg
sub
and
push
adc
xor
aad
scas
and
mov
shll
xchg
push
jo
sub
or
test
cmc
ds
sub
inc
xlat
aaa
dec
lods
das
mov
or
scas
jp
mov
lds
mov
movl
into
shrb
fisubrs
xor
movsl
sub
mov
notb
imul
arpl
dec
lea
shr
in
mov
repz
jnp
outsl
xchg
mov
shrl
dec
jle
push
aam
adc
sbb
mov
jle
sahf
sbb
pop
or
cmp
dec
mov
insl
roll
cmc
imul
outsl
add
push
cmp
pop
xchg
addl
in
out
dec
jnp
movsb
sbb
pop
in
and
mov
fldt
shrl
stos
adc
test
xor
loop
addr16
fmull
pop
outsb
gs
test
jg
sub
dec
out
xor
lds
mov
dec
mov
addr16
pop
test
mov
fdivrp
sbb
hlt
arpl
test
repz
or
pop
rcl
int
dec
test
push
fstpl
sbb
aad
mov
pop
xor
push
xchg
xor
sub
sbb
pop
or
push
jge
xor
test
test
shll
dec
gs
scas
xchg
mov
cmpsb
jge
shr
lds
and
icebp
dec
hlt
sub
jns
inc
add
test
enter
cmpsb
mov
sbb
test
ds
jge
xchg
cmp
cmpsl
jns
jp
dec
and
cmpsb
in
dec
sub
jb
inc
js
cli
push
fadds
loopne
ror
inc
mov
int
fs
xchg
adc
adc
sbb
scas
ja
jno
pop
pop
cmp
jo
dec
jbe
xchg
dec
ja
pop
xchg
jns
dec
in
fnstsw
in
pop
pusha
xor
and
nop
dec
dec
dec
gs
lock
and
dec
es
push
mov
add
loopne
sbb
nop
shr
sub
das
fstpl
cmp
test
lea
sbb
out
out
adc
andl
dec
push
fnstsw
rclb
mov
in
imul
aam
sub
dec
aas
xchg
inc
out
inc
movsl
les
add
dec
shr
push
subb
xlat
std
in
or
repz
xlat
insb
sti
nop
decb
int3
adc
adc
xor
add
and
ficompl
sarl
add
or
xchg
fidivl
out
inc
inc
shrb
add
inc
push
or
xchg
aas
imul
mov
lds
inc
lods
or
dec
bound
adc
add
jg
scas
add
scas
mov
test
mov
ds
sub
cmp
ja
bound
add
xor
xchg
int
inc
mov
in
insl
dec
aaa
add
lret
imul
jg
jl
adc
std
lcall
cs
scas
push
test
pushf
jecxz
sbb
xchg
jp
in
inc
lea
sbb
pop
addr16
push
ror
sub
add
push
sub
xor
xor
test
incl
in
cmc
jmp
test
insl
scas
inc
lahf
cmp
cmp
imul
pop
in
repz
test
testl
xor
inc
enter
movsb
adc
jge
mov
mov
mov
ja
xor
sti
mov
lahf
in
adc
mov
push
iret
and
dec
lret
leave
or
push
add
cmp
push
xchg
mov
ljmp
push
jno
ljmp
fadds
jns
scas
and
pusha
mov
mov
add
insb
js
fildll
jecxz
inc
xor
sbb
xor
push
mov
pop
and
scas
mov
stc
xchg
cli
jge
std
fadds
testl
push
pushf
dec
xchg
sbb
stos
cwtl
test
adc
les
je
mov
imul
mov
test
pop
add
and
jge
inc
adc
xchg
movsb
mov
in
cmp
enter
bound
jnp
push
push
daa
pop
push
push
dec
xchg
and
cmpsb
mov
jne
or
push
fs
or
add
jmp
popa
mov
jge
add
js
ljmp
aas
leave
cmp
mov
ret
mov
filds
pusha
push
sub
jl
jl
movsb
ret
adc
fisttpl
aad
jge
pop
sbb
dec
sbb
lea
and
dec
jl
test
jno
in
sub
jecxz
stos
std
add
inc
out
fcomi
repnz
dec
and
mov
mov
pushf
cli
xorl
fstl
jo
hlt
lcall
fstpl
aam
shrb
movsb
aas
rorb
in
and
jne
push
movsl
mov
les
rorl
dec
loopne
push
andl
stos
pop
xor
lods
sub
xor
jo
dec
dec
lcall
sbbl
aaa
mov
push
dec
sub
fistpll
lods
call
push
lret
push
sub
and
jne
sbb
adc
pop
loopne
rclb
push
movsb
pop
test
pop
cs
cmp
fs
dec
mov
iret
shlb
por
pop
xchg
mov
test
xchg
test
xor
lret
inc
sbb
ret
and
fiadds
sbb
xor
push
mov
pop
and
cs
cs
mov
dec
fsubl
pop
pop
ret
mov
fmull
sub
jbe
fldl
add
jns
jmp
iret
lods
or
xchg
adc
repz
push
sbb
je
push
int
cmp
out
pop
mov
shll
cmp
sub
jo
dec
lods
ret
cltd
sub
inc
arpl
in
mov
ds
or
pushf
gs
in
frstor
jae
mov
cmp
paddq
lahf
dec
or
sbb
fimull
je
cmc
mov
mov
inc
les
int3
in
add
popa
pop
mov
mov
xchg
push
jp
shlb
mov
insl
push
popf
push
mov
es
sbb
mov
and
push
sbb
sbb
std
fidivrs
or
movsb
pushf
xchg
add
sub
fldt
sub
xor
es
dec
jbe
sub
lds
and
jns
jp
pop
dec
pop
inc
aaa
push
andl
or
inc
enter
rcrl
sbb
xor
scas
cwtl
mov
sub
insl
outsl
or
ret
ffree
insl
cmp
in
pop
cli
out
in
or
and
pop
xchg
aam
push
clc
cmp
movsl
cmp
jb
stos
mov
add
sub
hlt
fisubs
cmp
out
scas
pop
jnp
bound
xchg
pop
mov
xchg
fcmovnb
add
aas
out
jge
push
cs
dec
inc
hlt
pusha
xchg
xor
dec
fdivrs
imul
sub
jnp
repz
mov
mov
push
ds
ret
lds
rcl
lds
xchg
sub
inc
push
in
mov
xchg
lds
dec
sub
xlat
sub
adc
out
lds
loopne
in
movsl
push
adc
in
dec
movb
int
push
pop
popf
call
mov
js
lds
push
or
cmp
hlt
adc
cmc
shll
dec
imul
test
shr
dec
addl
pop
jne
xchg
popf
cmp
cld
shll
push
push
push
and
notl
lods
push
xchg
std
lds
scas
in
or
mov
mov
xor
sub
adc
inc
outsl
shll
das
out
test
pop
inc
fsubr
xor
shrl
jge
shrb
adcb
inc
sub
scas
mov
leave
xor
mov
mov
out
bound
sub
dec
mov
roll
dec
and
xchg
rclb
push
push
idivl
aas
sti
outsl
mov
pop
jns
cld
mov
mov
js
or
pop
stos
movsb
jnp
inc
popf
js
shll
dec
jle
movsl
xor
dec
packsswb
push
js
xor
add
fistpl
dec
push
push
fildll
adc
testl
jae
jae
rcrb
jecxz
lret
jne
aad
hlt
sbb
outsl
adc
mov
jle
jno
pop
sub
aas
ffree
mov
lds
inc
sbb
cwtl
lahf
sarb
aas
lea
or
arpl
std
cs
and
push
ljmp
xor
sub
or
imul
xlat
outsl
or
sub
data16
lock
iret
xchg
sub
xlat
jbe
addl
add
rorb
cmc
lods
sahf
mov
sub
sub
fwait
dec
xchg
fsubs
nop
loope
adc
imul
ss
xor
lret
jb
push
mov
push
js
push
gs
and
shrl
or
fwait
pop
xor
sub
popa
jae
adc
push
adc
push
adc
pop
and
lret
add
sbb
inc
cmc
cmp
dec
xor
test
sub
out
adc
hlt
mov
xchg
xor
lock
mov
pop
popf
mov
mov
sub
mov
cmpl
lret
out
incl
and
cld
dec
dec
pcmpgtb
sti
fadds
pop
jg
das
cmp
popf
xchg
push
aad
out
cld
notl
roll
dec
jg
and
push
ds
shll
das
mov
out
scas
enter
repnz
daa
and
mov
or
mov
dec
jne
xchg
fisttpll
pop
inc
inc
pop
xchg
jp
xor
aas
cld
xor
or
xchg
and
xor
lods
lea
mov
pusha
inc
jnp
addl
rcll
inc
inc
aam
mov
lds
push
pop
mov
addr16
nop
leave
xchg
imul
call
push
loopne
lds
pop
loop
movsb
mov
test
fwait
xchg
sar
loopne
gs
mov
mov
lea
pop
xor
out
mov
mov
popl
rclb
mov
aaa
xor
insl
inc
and
xor
push
adcb
and
stos
sub
rcrl
or
int
inc
jg
rcll
fdivrs
fnstcw
pop
or
mov
xor
adc
adc
adc
sub
cmp
leave
jbe
call
dec
or
jae
pusha
ljmp
lahf
push
aaa
inc
dec
jg
mov
inc
movb
mov
xchg
cli
negb
and
push
movsl
cmc
iret
inc
leave
pop
pop
dec
mov
lods
xchg
and
cltd
sarl
sub
mov
push
mov
repz
pop
jl
js
sbb
fbstp
out
inc
mov
arpl
daa
cmp
jl
pop
cltd
scas
bound
inc
pop
mov
popa
out
push
loop
sbb
loope
notl
cmp
add
test
pop
aas
dec
or
add
pop
jle
jns
fistpl
jo
sub
ja
out
mov
inc
aaa
xor
cs
fmuls
nop
push
mov
popa
popa
xor
leave
inc
dec
or
fmull
xlat
push
inc
jne
hlt
ucomiss
dec
scas
mov
lret
stos
and
call
mov
enter
push
fdivl
scas
sub
and
dec
or
mov
adc
in
leave
xor
lds
sub
sub
push
xchg
xlat
jb
push
aas
dec
faddl
xor
bound
dec
adc
js
adc
sarb
lcall
shlb
xchg
out
mov
push
cmp
mov
test
daa
adc
mov
inc
push
jne
iret
movsb
jbe
push
mov
or
notb
inc
mov
cmp
xorl
stc
loope
aam
pop
fwait
mov
ret
dec
mov
dec
inc
imul
mov
inc
mov
jnp
push
jne
cwtl
sbb
pop
pop
shrb
sbb
dec
inc
inc
jne
or
lods
mov
ficoms
repz
dec
test
cmp
push
loop
inc
out
sub
daa
loope
dec
cmpsl
jg
cmpsb
fdivrs
pop
inc
cmp
inc
push
dec
leave
jg
pinsrw
sub
js
dec
jl
outsb
arpl
rol
loop
pop
and
arpl
xchg
xlat
and
pop
xchg
loopne
jp
pop
sbb
fstpl
les
stos
inc
lds
sub
and
ds
xor
dec
xchg
mov
push
push
ret
addl
loope
jns
iret
cs
scas
dec
mov
rolb
ds
stos
jge
push
push
pushf
int
mov
lds
pop
cmp
mov
inc
iret
jne
and
sub
or
mov
xchg
mov
test
aas
aam
andl
arpl
pop
xor
inc
nop
movsb
dec
xchg
imulb
dec
lds
outsl
pop
data16
xor
push
pop
mov
lds
rolb
sbb
daa
sub
test
sub
or
dec
sub
jno
fnstsw
test
mov
or
inc
jne
movsl
ret
inc
dec
stc
inc
fcmovb
out
call
jnp
ret
cmp
leave
or
jge
lds
dec
rcrb
ficoml
push
inc
lret
dec
mov
xchg
test
enter
xchg
adc
mov
push
aaa
dec
cmp
jns
inc
mov
add
enter
inc
cmp
dec
stc
movsl
ret
and
inc
aad
pop
fcmovnu
inc
sub
fadd
xor
jge
rclb
xchg
enter
pusha
and
push
mov
adc
sbb
mov
mov
int3
outsb
mov
dec
cmpsl
nop
jae,pn
pcmpgtw
hlt
xchg
push
dec
std
dec
inc
fwait
mov
jne
call
shl
pop
dec
lds
loop
pop
jns
push
mov
dec
and
mov
push
and
movsl
inc
lcall
ret
imul
pop
xchg
xchg
ret
cmp
sti
inc
add
loope
cmp
test
pushf
subl
dec
pusha
and
daa
jb
push
pushf
in
xorps
repnz
sahf
mov
push
pop
popf
inc
mov
test
and
push
int
jo
push
jmp
push
test
in
cs
dec
addl
inc
or
leave
push
jge
sbb
jmp
push
out
push
lcall
arpl
add
sar
jecxz
inc
pop
mov
pop
inc
push
mov
jo
lods
cwtl
cmpsb
aad
mov
testl
push
bound
sbb
or
cmp
mov
dec
jmp
adc
push
push
mov
mov
movsb
pop
push
inc
fwait
xor
mov
dec
jg
pop
sub
jge
pop
dec
dec
xchg
cwtl
mov
dec
xchg
lods
or
mov
loop
sahf
enter
mov
in
pop
dec
popa
mov
bound
pop
and
pop
aas
repnz
inc
add
xchg
push
sub
hlt
or
stos
push
pop
test
out
and
out
add
sbb
ds
mov
into
fsubrl
and
iret
and
jns
and
inc
jge
repnz
sahf
dec
fstl
inc
sub
jg
push
dec
mov
ljmp
mov
adc
fstpl
mov
imul
mov
jae
aas
cs
xchg
in
js
adc
inc
ja
cmpb
repz
call
xchg
cmp
lret
mov
jle
jns
sbb
ret
mov
inc
sbb
xor
sub
fdiv
in
repz
and
movsb
lret
lds
add
fcmovb
xchg
hlt
rorl
loope,pn
out
and
aas
mov
popa
jns
and
hlt
bnd
add
dec
loop
fwait
jb
std
cmp
sbb
xor
mov
cmp
stos
pusha
jg
mov
push
rcl
pop
outsl
cmp
sub
sub
inc
jne
hlt
xchg
data16
xchg
adc
ficomps
and
gs
or
sub
sbb
jle
sub
ljmp
lcall
mov
movsl
mov
fmull
inc
ja
rcl
bound
addr16
add
push
xchg
std
int3
sarb
push
cmpsl
andl
lret
insl
mov
lds
hlt
pop
mov
mov
xchg
movsb
inc
jne
mov
fcoml
aad
dec
lods
test
add
iret
add
rorb
or
sub
sar
jmp
xchg
dec
lds
stc
jno
cmp
xor
inc
fisttpll
orl
dec
sbb
add
mov
in
or
mov
sub
outsb
push
add
inc
aam
shrl
gs
add
jne
push
xchg
pop
popa
lahf
mov
jns
push
fdivr
mov
xchg
mov
jne
lcall
jae
lea
and
push
call
jae
fmuls
cmp
das
push
aaa
aas
sub
mov
imul
lock
shrb
inc
hlt
stos
mov
pop
xor
pusha
add
sub
inc
iret
xchg
cmp
mov
ljmp
mov
or
fwait
jge
xor
sarl
xchg
add
les
fistps
sub
cmp
fistpll
cmp
pop
jns
bound
imul
dec
push
dec
lock
push
push
ja
hlt
ret
jmp
add
jp
out
mov
xor
push
fcmovnb
lret
inc
inc
and
xor
insb
mov
push
enter
hlt
xchg
xor
mov
in
and
jg
movsb
sub
push
bound
xor
add
outsl
pop
fisubs
or
inc
and
dec
cmc
shrl
hlt
lock
mov
add
push
add
dec
push
je
pushf
cmc
xchg
out
pop
pop
dec
mov
lods
call
faddp
mov
outsb
stc
mov
daa
inc
mov
ficoml
gs
sub
and
jns
and
stos
dec
xchg
adc
sub
imul
jno
jge
pop
aas
dec
inc
sarb
add
jmp
rol
and
inc
cmp
push
lret
in
and
shll
lret
jne
jle
gs
lret
dec
cli
ss
sub
sub
or
xor
xchg
fmulp
cltd
mov
sbb
inc
fists
jne
dec
sub
adc
lret
test
pushf
or
push
stos
lahf
cld
add
push
lahf
and
outsl
mov
and
inc
dec
add
mov
cwtl
mov
mov
mov
mov
pop
xor
ret
mov
jbe
iret
dec
repnz
dec
enter
push
fwait
mov
push
xor
adc
or
push
stos
jne
cld
add
jnp
movq
or
jo
stos
inc
iret
dec
orl
push
push
sub
mov
fimuls
jb
in
fnstcw
arpl
mov
out
adc
roll
fs
popa
out
mov
leave
call
pop
cs
or
lret
jg
cmpsl
add
mov
mov
ret
adcb
enter
dec
jno
add
jo
xchg
das
or
xchg
pop
jle
and
int
mov
std
mov
or
imul
aaa
mov
fdivs
push
mov
cld
jo
mov
in
jl
nop
xlat
icebp
or
adc
in
and
jne
movsl
mov
and
push
mov
add
sub
pop
adc
leave
mov
lea
and
in
ret
movsl
mov
and
js
or
and
xchg
test
inc
mov
shlb
stos
dec
outsb
test
movsl
out
jl
sbb
es
push
mov
lret
xor
std
pop
sub
sub
stos
pushf
jb
push
push
inc
sub
cmp
daa
mov
sub
int3
adc
mov
aas
cmp
outsl
xorb
xor
pop
rcr
cmp
adcb
adc
pop
xor
shrb
mov
popa
lret
dec
rol
jns
dec
jne
adc
loopne
movsl
shrb
and
jmp
xor
sbb
pusha
fiadds
sbb
xchg
les
jp
les
rcl
mov
inc
mov
decl
push
addl
xchg
in
xchg
jg
cmpsb
movl
push
mov
push
pop
out
out
sbb
add
inc
push
shlb
and
shll
scas
adc
add
inc
pop
movsl
adc
adc
inc
hlt
fisttpll
stc
cmp
insl
dec
dec
aaa
push
sub
add
or
dec
mov
adc
mov
push
daa
data16
and
or
adc
hlt
cltd
and
scas
push
xchg
fs
or
bnd
xor
dec
repnz
dec
scas
icebp
dec
fstl
les
jne
xchg
sbb
inc
jp
cwtl
pop
pop
cmc
icebp
int
sub
ficomps
push
inc
hlt
lock
add
enter
and
inc
push
ret
push
dec
xor
dec
ljmp
inc
inc
mov
into
sub
loope
add
add
and
sbb
xor
clc
je
or
jb
dec
inc
push
ds
mov
xor
shr
jmp
arpl
cmc
aad
adc
and
int
sbb
xchg
ficoml
mov
inc
sbb
aam
lods
fs
test
mov
dec
cwtl
insl
popa
das
cli
aam
mov
pop
mov
push
push
cmp
mov
scas
jne
bound
jns
mov
mov
add
repz
ja
push
xor
inc
jecxz
fistpl
out
int
mov
ss
add
fdivrs
fdivrs
stos
mov
mov
mov
push
jnp
in
stos
andl
incb
and
arpl
out
mov
insl
dec
adc
mov
dec
jle
jge
hlt
mov
aaa
xchg
sbb
in
xchg
mov
repnz
sub
mov
scas
or
and
ljmp
jno
pop
cmc
cmp
fstpl
mov
adc
mov
lds
leave
cmp
push
lds
cli
movsb
jae
and
inc
push
cmp
ror
mov
xor
jne
subb
sub
pop
jecxz,pn
insl
sub
push
pop
inc
ret
pop
repz
jmp
push
loop
jns
jne
xor
lods
scas
sub
dec
lods
gs
push
sbb
inc
mov
pop
or
and
jae
imul
xor
mov
stos
shr
xor
outsb
cmp
mov
leave
les
or
mov
outsl
sub
sbb
cmp
inc
cli
int
dec
pop
into
cmpsl
cmp
mov
pop
das
arpl
test
test
lds
fsubs
addr16
dec
imul
pusha
sarl
dec
jg
jnp
jl
add
push
mov
mov
jae
out
cwtl
inc
jge
cmp
inc
sahf
addb
and
lds
or
ljmp
test
jnp
lds
cmp
inc
sar
push
jne
mov
pop
fisubrs
pop
or
fbld
fcoml
and
mov
mov
jecxz
cmc
xchg
jl
push
movsl
movsb
test
movd
in
das
sbb
shlb
popa
pop
xchg
js
shll
mov
cld
stos
in
pop
inc
lods
lret
mov
sub
push
ds
enter
inc
adc
inc
jae
and
xchg
xor
adc
popa
movsb
inc
or
arpl
cmc
mov
outsl
or
xor
sub
jp
shlb
xchg
nop
sub
sub
or
mov
js
testl
push
test
popf
mov
mov
cmp
das
push
pop
aaa
xor
jge
out
bnd
lods
enter
xchg
mov
xchg
out
mov
inc
sub
pop
xor
pop
and
andl
inc
fmuls
pop
push
pop
mov
push
fcoms
test
data16
or
rolb
xor
add
mov
jae
mov
fisttpll
and
out
imul
jns
add
hlt
push
sub
imul
and
rclb
pop
pop
mov
aaa
mov
out
pop
mov
mov
inc
mov
inc
mov
addr16
hlt
aaa
lds
bound
inc
and
aas
or
rclb
push
dec
ret
cli
dec
or
hlt
aaa
cmp
adc
mov
stos
popa
dec
mov
mov
push
jg
stos
or
inc
je
out
aaa
std
add
das
clts
cmp
cmp
les
jle
imull
mov
add
mov
js
scas
xchg
test
adc
xchg
dec
psubw
lret
push
pop
lahf
dec
mov
inc
fisttpll
sbb
or
inc
jne
fwait
hlt
and
mov
out
dec
jge
push
inc
jne
add
inc
xchg
je
shll
cld
xor
fwait
and
cli
shrd
iret
dec
scas
add
sbb
ss
cs
adc
xchg
push
mov
jae
cs
and
pop
and
dec
and
loope
js
es
arpl
test
ds
cmp
shl
cmpsl
cmp
fs
mov
pop
aas
lock
stos
cmpsl
sbbl
pusha
inc
scas
hlt
mov
mov
movsb
mov
push
lcall
and
loopne
jb
add
insl
fcomps
in
inc
test
fistps
push
pop
inc
lods
add
sbb
dec
dec
dec
mov
and
mov
aad
dec
scas
add
xchg
fdivrl
cltd
imul
pop
and
xchg
mov
aaa
jne
xor
sub
jno
gs
out
xchg
frstor
add
shl
mov
inc
push
int
sub
in
lret
iret
aas
ljmp
loopne
inc
pop
or
incl
adc
jmp
xor
push
mov
xchg
int
mov
xor
cmc
daa
push
orb
enter
jne
jns
movsl
insl
jnp
in
cltd
mov
jmp
je
jne
fdivl
jecxz
xor
adc
pop
dec
cs
rcll
lods
mov
adc
pop
pop
aam
mov
pushf
push
pop
sbb
mov
ret
or
testb
push
pop
loop
add
dec
cmpb
dec
inc
pop
and
jb
pop
mov
and
mov
popf
dec
push
xchg
mov
mov
lea
push
rol
and
jbe
adc
push
mov
hlt
sub
jo
cmpsb
lret
shrb
and
mov
std
std
enter
inc
out
dec
push
and
cmpsb
inc
jae
push
mov
call
mov
int
cmp
bound
lret
push
out
call
sub
scas
bound
bound
dec
loop,pn
xorb
or
sub
es
dec
lds
ret
mov
and
mov
mov
or
in
push
sti
sbb
test
test
push
inc
jnp
in
pop
arpl
pop
lahf
insb
mov
push
and
mov
pop
mov
ljmp
jne
push
pop
push
inc
inc
or
es
mov
dec
es
xchg
cli
and
shll
lret
push
ljmp
lds
push
adc
lods
pop
lods
pop
test
int
dec
das
pop
xor
inc
scas
push
arpl
pop
push
scas
fs
cmpsl
dec
rcr
insb
int3
enter
out
and
loop
cmp
loopne
inc
push
or
pop
loop
insb
cmp
dec
dec
hlt
adc
mov
sahf
incl
push
hlt
scas
insl
and
ret
cli
pusha
cmc
cmp
aas
adc
loop
cmp
mov
jbe
insl
cmc
dec
mov
push
jge
pop
jne
test
mov
add
dec
pop
sub
xchg
pushf
jne
inc
nop
aad
push
ja
and
sub
or
and
sub
inc
scas
lea
enter
sbb
push
pop
mov
imul
xor
push
push
lret
dec
jmp
push
mov
dec
xchg
xchg
fwait
add
push
push
sbb
xchg
cwtl
xor
sub
test
mov
jno
iret
mov
lods
dec
or
sub
xchg
ljmp
or
mov
push
jecxz
cmp
dec
hlt
mov
das
loope
sti
lret
hlt
and
test
fcomip
decb
notl
dec
xchg
cld
gs
xor
pop
test
hlt
ret
das
popa
test
int3
jns
std
xchg
sub
stc
pop
loopne
mov
xchg
sub
mov
fcoml
and
add
fs
enter
hlt
shll
sub
cmp
jne
clc
push
mov
sub
pop
or
pop
subb
shl
dec
push
jbe
loopne
in
xor
lret
mov
lea
add
lret
inc
push
stc
push
cltd
sbb
inc
shr
mov
jmp
imul
mov
fwait
lret
push
sbb
push
add
jbe
cltd
xor
push
pusha
sahf
int3
popa
xor
xor
xor
and
test
ds
sub
movsl
xor
dec
in
cmp
outsl
push
hlt
popf
mov
stc
fistps
cli
daa
gs
push
mov
sbb
xor
loope
loope
jecxz
das
and
mov
xchg
cld
sti
push
pusha
adc
mov
cmp
in
cmp
dec
fwait
lret
or
mov
lods
inc
jne
cli
add
sub
cmc
pop
addr16
dec
inc
push
xchg
adc
xchg
cs
faddl
cs
sub
sub
sbb
mov
and
push
cmp
scas
dec
push
stos
jae
adc
xor
push
sub
leave
leave
cmp
push
xlat
movsl
push
test
push
sub
dec
popf
fisubs
dec
inc
fwait
mov
push
into
lods
dec
fwait
adc
xor
mov
and
dec
and
add
adc
mov
ja
push
fwait
ret
aas
ret
popf
xor
adc
mov
outsb
add
arpl
mov
xor
dec
adc
in
mov
jo
mov
dec
jle
in
dec
push
pop
stos
fwait
adc
push
inc
cs
jb
xor
insl
mov
or
inc
inc
fisubs
ret
inc
push
mov
dec
ds
push
mov
test
inc
cmp
jne
cmc
xor
mov
imul
sahf
cltd
add
cltd
mov
and
js
fwait
mov
push
inc
pop
pop
xor
jne
js
das
cmp
inc
sub
or
inc
jo
and
add
bound
jae
fwait
sub
mov
js
push
movsb
jne
inc
push
stos
sub
inc
fcomps
jge
rorl
jl
addr16
inc
jae
cmp
mov
rorb
sti
cmc
insl
add
inc
aaa
pop
ds
add
gs
in
sbb
xchg
lds
movsb
adc
push
subb
dec
shlb
add
add
sahf
movsb
push
je
scas
test
shll
leave
jne
jge
xchg
and
out
cld
sub
cmp
push
inc
xor
add
lret
cltd
rorl
jg
xor
adc
xchg
dec
out
jle
sbb
adc
dec
push
mull
jo
push
jae
sbbb
dec
mov
or
adc
sarl
nop
push
push
dec
hlt
adc
xor
lcall
arpl
sbb
add
adc
lds
and
mov
and
mov
cmpsb
ret
mov
hlt
out
aas
jns
jne
mov
mov
add
test
decb
xchg
mov
add
ds
xlat
mov
pop
mov
mov
xor
add
es
out
stos
dec
or
sbb
mov
mov
jno
mov
push
cmp
ds
test
adc
clc
mov
ffree
add
inc
cmp
and
cs
mov
push
add
mov
dec
push
cmp
sub
cld
addr16
or
jnp
lret
adc
xor
je
addr16
dec
adc
mov
add
fmuls
ja
cmp
xchg
push
out
lock
je
lds
inc
fdivr
dec
outsl
mov
push
pop
fsub
jne
mov
lahf
mov
xor
lret
xchg
xlat
pusha
pop
mov
fisttpll
ljmp
jne
and
sub
fs
dec
or
lea
inc
lods
fadd
adc
aas
in
ljmp
jne
inc
adc
lret
dec
jecxz
sub
test
jbe
cmc
lods
sbb
push
sub
popf
rclb
lods
dec
jg
xchg
rorl
out
sbbb
ds
jns
andb
inc
push
into
into
repnz
jge
xchg
pushw
lods
dec
xor
mov
pop
mov
xor
push
cwtl
call
push
push
into
cltd
pop
insl
and
push
out
xor
pop
mov
push
xchg
and
push
movsb
movsb
jg
shlb
mov
dec
mov
daa
stos
mov
xlat
enter
jmp
call
push
jmp
into
inc
add
pop
jecxz
nop
imul
movl
add
call
cmp
out
inc
bound
jbe
icebp
pusha
rcl
mov
sbb
shlb
lahf
or
cld
inc
push
mov
xchg
and
pop
int
ret
fdivl
adc
xchg
add
or
pushf
xlat
aad
adc
jo
in
sub
pop
xchg
rolb
movb
pop
sarb
lods
repnz
xchg
xor
stos
jb
lret
jnp
test
shlb
push
repz
lret
shll
mov
psrld
xchg
test
bound
addr16
fcoml
jo
pop
jns
and
rcl
xchg
fwait
or
cmpsb
leave
out
movsb
add
and
in
mov
dec
jb
std
clc
arpl
push
nop
dec
xchg
adc
jbe
inc
cwtl
dec
int
iret
inc
xchg
or
pop
ljmp
popa
movb
mov
pop
and
cs
xchg
les
sbb
rorl
lea
lds
inc
mov
sbbb
inc
jmp
int
cmp
imul
mov
xor
dec
add
push
inc
inc
mov
je
xchg
push
jns
mov
rcll
sbb
les
int3
int3
lds
mov
inc
aas
loop
mov
dec
inc
sub
dec
mov
mov
sub
cmp
or
inc
mov
daa
mov
dec
jmp
fs
dec
aas
rorl
sar
rcl
mov
test
cmp
nop
pop
stc
push
movsl
insb
int
lret
rcrb
divl
inc
pop
stos
ret
cmp
jne
aas
outsb
add
xor
dec
aam
movsl
mov
sbb
adc
push
and
jns
dec
jne
jmp
pop
inc
enter
push
hlt
mov
jae
jne
aam
jae
cmpsl
test
mov
sbb
mov
or
cmp
hlt
repz
pop
xchg
aaa
stos
or
pop
sub
push
es
and
popf
mov
inc
imul
scas
push
sbb
movsl
push
adc
popa
xor
add
divb
push
dec
sbb
xchg
jge
sub
test
mov
xor
imul
mov
psubsb
out
cmc
cmp
test
lock
es
in
xor
cmp
mov
stc
arpl
adc
pop
test
mov
push
hlt
sbb
jmp
lea
rcll
mull
fdivl
xchg
jne
sbb
dec
inc
jle
clc
movsl
cmp
stos
lock
cmp
int
test
pop
xor
aas
jmp
daa
ljmp
das
insb
ljmp
dec
loopne
les
orl
mov
mov
pop
xor
pop
jae
push
adc
push
or
inc
add
push
dec
outsl
dec
dec
sub
gs
mov
mov
stos
pop
in
cmp
int3
popf
ret
aam
and
jne
rol
xchg
dec
and
out
mov
sahf
sub
adc
bound
dec
es
and
fistps
jg
mov
inc
shrb
pop
loope
movsb
and
les
in
mov
aas
jno
aas
mov
jg
cmp
dec
push
mov
shlb
xchg
dec
jbe
aas
cs
mov
scas
das
jl
cs
adc
fnstcw
cmp
xchg
sub
cmpsb
je
jle
mov
outsl
sbb
sub
loop
pop
xchg
cmp
xchg
shll
ds
mov
pop
xor
imul
adc
and
cmp
xchg
push
insl
mov
jge
movsl
lea
add
xchg
xchg
fwait
fs
pusha
pusha
adc
out
in
mov
pop
mov
test
inc
or
push
sbb
negl
addl
pop
dec
rorb
in
xor
cmpsb
lahf
xor
adc
inc
and
ud0
inc
jl
lret
and
sbb
dec
pop
test
lahf
adc
xchg
inc
aam
inc
or
imul
cmp
xor
daa
inc
fmuls
and
jne
or
cmp
mov
sahf
imul
popa
insb
mov
movsb
cmp
int
mov
push
in
push
inc
loope
add
lods
xchg
fildll
pop
jge
arpl
pop
sbb
push
fadds
jmp
fs
jnp
mov
and
stos
jbe
adc
movsb
dec
in
jle
sbb
test
pop
mov
ror
scas
jne
or
cli
imul
and
in
xor
xor
add
sbb
jne
aam
pop
push
dec
xor
sahf
popf
out
mov
sbbl
std
pop
add
pop
bound
push
fidivrs
shlb
dec
aad
sti
out
leave
xchg
shll
fisttpll
add
mov
cmp
outsb
mov
jae
mov
in
ret
mov
and
shlb
loope
fildll
push
lods
dec
xor
xor
mov
push
xor
gs
inc
dec
popf
out
in
lahf
dec
ja
ret
mov
loop
mov
loope
adc
sarb
push
insb
ds
imul
jge
in
scas
pushf
mov
aam
inc
mov
mov
or
sub
in
stc
push
mov
gs
pop
lock
push
iret
mov
cmp
popf
cwtl
dec
adc
mov
imulb
xchg
or
mov
outsl
inc
cmpsl
outsb
loope
loope
ret
and
enter
cwtl
divb
rcl
add
out
and
outsb
dec
stos
out
cwtl
xchg
dec
imul
xchg
test
dec
jmp
inc
push
xchg
add
jo
inc
cltd
popf
xchg
mov
cltd
fcomps
lahf
decb
bound
rclb
mov
pop
cmp
inc
and
jae
and
or
stc
inc
and
ljmp
jge
ret
icebp
pop
shrb
sub
and
xor
or
add
xchg
mov
and
dec
push
cmp
jno
and
ja
push
jne
ja
and
in
ss
sbb
add
sbb
jmp
mov
dec
shrl
inc
sub
push
cmp
push
or
mov
jns
push
lods
mov
or
mov
cmc
xor
pop
mov
scas
popf
lods
ret
jle
push
cmp
xchg
and
lcall
test
xor
repnz
fs
sub
and
lea
test
es
test
and
mov
jg
mov
fs
inc
data16
mov
out
or
and
mov
hlt
mov
outsb
roll
test
cmp
push
dec
daa
fisttpl
mov
mov
jle
add
stos
push
fimuls
lds
sub
popa
mov
cltd
lods
fdiv
popf
pop
imul
xor
and
mov
xchg
bound
xchg
mov
out
push
pop
enter
xchg
sbb
cwtl
les
repz
adc
in
jne
lods
and
fs
stos
mov
or
add
lahf
sub
push
push
imull
lahf
out
jne
adc
xchg
and
test
leave
push
aaa
cmp
rcll
rorb
jae
in
inc
push
enter
imul
pop
sub
shrb
icebp
repz
add
enter
divl
and
jle
or
mov
and
dec
mov
dec
inc
repnz
data16
mov
hlt
out
jl
adc
addr16
movsb
ja
sarb
pop
das
test
lods
mov
cs
push
sbb
pop
dec
out
mov
push
pop
mov
mov
lret
sahf
mov
xchg
adc
mov
mov
mov
ficoms
gs
or
push
xor
and
adc
sahf
pop
rclb
push
mov
cli
jl
aad
inc
xlat
add
sub
or
fildl
flds
sub
test
into
mov
orl
fsubp
lock
in
fsubrs
inc
mov
cmp
cltd
mov
push
fmul
mov
pusha
loopne
inc
fmull
icebp
cmp
inc
push
xchg
mov
loope
inc
fldcw
xchg
icebp
out
pop
adc
dec
fstpt
popa
test
mov
fnsave
ja
inc
inc
sbb
xor
xor
inc
mov
add
movsb
pusha
incb
jg
fisttpll
mov
sbb
inc
cmp
add
loop
nop
fs
mov
mov
lock
inc
inc
test
mov
sbb
and
outsb
and
std
xor
inc
xorl
dec
pusha
inc
sub
subb
icebp
loop
xchg
ficomps
push
sub
popl
xor
jp
add
or
fwait
movb
fldl
pop
or
mov
inc
and
shrb
inc
cs
cmc
rcrb
inc
hlt
je
popf
scas
cmc
push
addr16
inc
inc
inc
xchg
adc
adc
push
in
mov
jno
push
jae
xchg
dec
lods
push
jge
and
push
insl
stos
jo
and
icebp
xor
ret
jb
inc
push
jns
mov
inc
or
xlat
cli
adc
rolb
and
sub
adc
aas
shll
std
mov
adc
dec
mov
sub
xor
mov
pop
loope
xor
push
pop
fildll
sarb
dec
jns
inc
jno
cmp
shrb
inc
insl
or
loope
add
jg
mov
mov
inc
mov
jmp
xorb
or
ss
add
fstpt
decl
js
adc
arpl
inc
mov
std
inc
cmp
mov
push
mov
jg
in
call
int3
inc
gs
aam
andl
pusha
movsl
mov
faddl
adc
add
inc
sub
cmc
and
adc
negb
or
addr16
and
in
insl
adc
fwait
xchg
push
xchg
add
xor
pop
pop
scas
dec
mov
in
push
xor
shlb
mov
or
repz
jmp
aaa
inc
mov
sbb
cmp
adc
sbb
push
mov
jle
mov
shl
shll
fistl
sub
add
adc
push
fsub
dec
das
push
inc
pop
cmp
arpl
out
aas
test
pop
mov
pop
push
mov
leave
jns
add
loopne
pop
ret
mov
imul
movsb
inc
mov
call
inc
aad
in
dec
scas
or
cli
and
or
mov
xor
mov
xchg
jge
cmp
mov
dec
jb
dec
scas
cs
inc
popa
cmp
cmp
sub
js
fadds
sub
dec
and
inc
mov
ret
cmp
pop
dec
push
repz
repz
repnz
mov
dec
hlt
adc
fstps
stc
mov
xchg
mov
push
lret
or
btr
arpl
inc
loopne
jg
jmp
lahf
adc
inc
jg
adcl
mov
int3
jne
and
mov
push
push
cmp
push
movl
mov
loope
enter
inc
pop
push
and
cltd
mov
lret
xchg
dec
enter
jne
in
fs
dec
sub
cmp
cmp
cld
mov
cmp
mov
xchg
xchg
pop
in
sbb
dec
test
test
leave
pop
test
add
and
add
or
jbe
cld
ret
sub
add
test
push
or
popf
leave
xchg
mov
inc
sub
mov
dec
push
mov
push
push
pop
das
ficompl
shll
inc
rorb
and
xor
insl
inc
inc
jns
adc
adc
dec
xchg
jno
ret
jne
ja
jns
fimull
cld
enter
mov
xor
dec
les
ja
sbb
imul
sbb
das
add
ja
stos
popf
jge
insb
jl
std
fdiv
cmp
in
aas
jge
mov
push
cmp
fs
testl
pop
adcb
notl
push
add
xchg
insl
push
fwait
push
xor
push
clc
cmpb
sahf
mov
lret
or
cmp
movsb
adc
push
inc
sti
and
sub
dec
mov
inc
movsl
xor
add
push
popf
ret
xor
in
in
push
push
scas
mov
push
inc
leave
sahf
cmp
mov
fnstcw
aam
or
cmc
in
in
cld
out
inc
enter
in
sbb
mov
rcrl
xchg
pop
xor
add
lcall
pop
in
dec
pop
xchg
pop
push
idivl
rcr
and
pop
sub
jne
rcrl
xchg
lret
inc
fs
cmp
jecxz
dec
xlat
lea
lret
xchg
imul
movsl
jl
mov
dec
xor
fistps
lds
fmul
lea
sub
inc
loope
jge
sub
jo
int3
dec
ds
mov
mov
pop
xchg
leave
sbb
cwtl
orl
xor
jl
cmp
cld
sub
fstp
sub
sub
sub
les
dec
jle
jo
inc
rcll
xor
cltd
and
cmp
ss
int
test
fisubrs
lods
and
mov
loop
dec
test
test
roll
mov
xchg
push
mov
aas
sbb
jns
mov
pop
push
mov
cmpl
sti
inc
mov
loop
add
and
push
ret
inc
and
sub
dec
mov
and
inc
add
pop
les
jbe
cmp
mov
mov
cmp
cmp
pop
push
nop
xlat
or
fisttpll
cmp
and
ja
jns
ret
sub
and
test
cltd
push
cmp
and
decb
sbb
pop
push
stos
mov
call
mov
test
nop
jne
dec
xchg
js
sub
cmp
xor
xchg
inc
int3
adc
mov
adc
in
dec
call
adc
leave
ret
test
dec
jmp
lret
enter
test
adc
jp
sar
inc
stos
faddp
xchg
cmp
xchg
or
jno
cli
bound
mov
mov
inc
and
nop
movsb
shl
stc
xchg
movsl
mov
rorl
xlat
mov
adc
lock
lock
cli
test
and
cmp
mov
paddq
inc
sub
lret
xor
pushf
jle
ds
lret
imul
push
jno
jo
inc
cmp
push
into
fdivr
pusha
pop
test
xchg
aad
inc
dec
mov
gs
ret
mov
push
add
jo
dec
lret
outsl
lret
roll
pop
loop
enter
mov
push
push
dec
xor
icebp
out
pop
lea
and
sahf
mov
inc
pop
and
nop
sarl
push
push
enter
loop
pop
jnp
mov
fucomip
add
jge
out
test
push
iret
pop
movsb
sub
xor
pushl
xor
jg
xchg
pop
pop
dec
xchg
jae
add
dec
jge
mov
adc
fidivs
jmp
loopne
pop
popa
loope
jb
dec
sar
jbe
cmc
add
stos
int
push
pop
dec
rolb
sub
fsubs
ljmp
pushf
or
mov
das
je
jbe
data16
xor
inc
push
shrl
movsb
imul
jp
push
cs
mov
mov
mov
nop
dec
popa
ljmp
mov
enter
daa
xchg
xchg
sub
addr16
fwait
mov
fldenv
push
fists
mov
into
les
pop
add
dec
stos
shll
push
or
stos
rcl
fsubr
stos
xor
cmp
vsqrtpd
int3
dec
inc
test
mov
pop
out
push
push
daa
pop
std
movsl
lret
push
xchg
adc
inc
push
jle
adc
cltd
or
ror
jp
lret
push
sub
pop
mov
add
add
push
push
jge
ret
fsub
mov
adcl
push
outsb
sbb
test
add
aam
add
mov
jns
mov
aam
mov
mov
ja
sub
dec
rol
sub
ja
or
test
cltd
fcomps
mov
popa
hlt
aam
jge
fdivrs
add
dec
fcmovu
dec
stos
pop
xchg
xchg
jns
and
shlb
ret
xchg
mov
cmpsl
mov
pop
test
and
lret
dec
enter
dec
aas
lods
jne
subl
cmp
adc
and
push
into
aam
lods
leave
push
cmp
sbb
fildl
jp
and
subl
and
mov
mov
cmc
mov
inc
or
cmp
xchg
xrelease
inc
mov
setns
enter
and
push
sbb
mov
ret
inc
loope
dec
cmp
sub
inc
daa
push
int
cmpsb
xor
cmp
sub
faddl
inc
sbb
jb
push
or
enter
sub
bound
test
adcl
in
stos
popa
mov
fstl
out
rorl
push
bound
aad
sar
pop
dec
movsb
js
mov
nop
inc
cs
test
xlat
gs
mov
fs
lret
dec
pop
push
cmp
pushf
clc
inc
subl
test
lret
fwait
jnp
mov
jae
fimull
lock
cmpl
add
loop
pop
dec
adc
mov
sti
hlt
repz
popa
push
out
jne
rorl
mov
sub
lcall
fsub
mov
sbb
test
loope
mov
add
test
nop
movsl
sub
pop
fidivs
ret
push
mov
sub
andl
aad
push
rol
enter
and
or
rcrl
pop
or
dec
push
inc
ljmp
and
int3
mov
push
cmp
out
sbb
push
sub
and
jns
enter
jmp
add
jne
xchg
stos
pusha
stc
lret
or
lahf
test
cmp
leave
fs
rcrl
int3
je
xchg
dec
xor
push
add
push
lcall
add
inc
xlat
adc
adc
rcll
sub
shl
pushf
aad
add
sub
test
cwtl
std
pop
add
or
enter
sub
fnstsw
fisubs
pop
sbb
xchg
adc
inc
icebp
incl
jb
mov
or
icebp
out
lret
outsb
adc
inc
dec
inc
ss
xlat
push
mov
inc
enter
add
das
mov
out
dec
or
nop
fcoml
push
or
mov
cli
mov
push
lret
mov
test
dec
shlb
mov
stos
sub
scas
arpl
aas
lds
cmp
fsubl
ds
add
dec
out
bound
jne
or
aad
xchg
mov
mov
nop
sbb
test
push
push
repz
or
int3
inc
sti
push
jns
fists
inc
mov
add
push
add
jne
push
sub
adc
stos
inc
add
cmp
or
test
insl
xchg
sbb
push
leave
outsl
dec
iret
push
jne
mov
dec
into
stos
jae
xor
repz
pop
push
jno
aam
jmp
adc
mov
dec
add
mov
cmc
mov
inc
cmp
cmp
test
cvtpi2ps
test
and
imul
arpl
sub
fisubs
push
dec
outsl
repz
sti
push
cmp
ror
inc
fidivl
and
xor
push
cmp
stos
loopne
lret
fcmovne
xchg
jle
in
bound
or
stos
or
nop
iret
fldl
call
jns
pop
ljmp
lret
xor
fisttps
xlat
daa
or
stos
testb
inc
fnstcw
push
mov
jecxz
xchg
dec
dec
in
int
or
fbld
dec
hlt
xlat
jle
movsl
das
and
and
addb
movl
cmp
sbb
iret
mov
or
cmpsb
fildl
fdivl
test
cmpsb
rcll
jge
push
mov
nop
mov
mov
test
xchg
fnstenv
and
inc
pop
and
fnstenv
int
pop
bound
movsl
shlb
movsb
cld
neg
into
icebp
cltd
mov
mul
fstpt
add
add
orl
pop
push
cmp
pop
sti
and
arpl
sub
jae
andb
add
pop
out
enter
lds
cmp
inc
dec
inc
pop
les
fnstenv
sub
pop
lods
cld
and
adc
mov
inc
pop
add
nop
mov
pop
clc
mov
cmp
sub
ret
cmpb
jge
dec
add
sub
sbb
inc
mov
out
xchg
add
ja
inc
aas
int
cli
std
and
sbbl
sbb
inc
hlt
rorl
inc
test
xor
orb
lock
pop
dec
sub
inc
add
in
dec
cld
inc
popa
jecxz
jle
les
dec
aad
fstl
xchg
add
arpl
or
adc
aad
cmpsl
and
iret
lods
cli
stc
lods
in
lds
test
sub
inc
xor
clc
xchg
dec
inc
and
loope
inc
mov
ret
roll
decb
push
cltd
cs
daa
push
aad
push
jmp
adc
pop
jnp
ret
jbe
push
std
sub
jae
decb
mov
inc
jg
popa
fsubl
xchg
pop
cmc
sub
jl
jns
push
xor
push
aam
rorb
push
int
dec
dec
mov
mov
and
ret
pop
and
aaa
dec
movsl
stos
sbb
mov
cli
xchg
inc
xor
mov
dec
leave
mov
pop
mov
adc
dec
testl
add
outsl
mov
push
inc
cmp
lds
les
xor
push
or
jae
mov
rclb
cmp
fadd
push
sub
inc
pop
jge
test
inc
pop
test
das
jle
lods
lahf
xchg
or
sbb
pop
add
andb
daa
xlat
dec
sbb
stc
daa
mov
sbb
xor
inc
pop
aad
inc
mov
mov
xchg
ds
push
sbb
call
hlt
push
cmc
push
cmc
fldl
inc
dec
jmp
add
sbb
push
inc
lock
sar
push
pop
and
shlb
jno
test
and
xchg
out
xor
push
in
push
dec
gs
daa
aam
push
pop
and
test
xor
in
call
ret
sub
dec
inc
loope
ret
shlb
loopne
ret
les
loop
mov
in
ds
jnp
stos
mov
mov
dec
or
inc
jmp
push
and
inc
and
mov
call
movsb
adc
and
imul
int3
out
push
dec
push
insb
mov
dec
dec
dec
dec
add
es
jo
loope
stos
ret
jge
mov
outsb
push
incb
call
add
pop
sar
lock
ret
repnz
xlat
add
pop
loop
pusha
push
jge
incl
movsb
push
mov
push
dec
xchg
rol
push
dec
push
sub
jb
jle
and
cmc
dec
in
mov
sub
push
jnp
rcr
rol
and
push
push
inc
mov
cmp
push
mov
inc
les
out
adc
push
pop
add
aaa
dec
inc
pop
xor
dec
mov
das
jns
ja
jbe
ret
jno
insl
push
cmpsl
jne
ja
movsl
sub
jle
fnstsw
and
mov
cwtl
jmp
push
ss
sti
pop
xchg
lds
enter
lds
adc
nop
and
push
out
xor
xor
xor
mov
sub
pop
and
xchg
push
fstpt
je
mov
cmp
xor
mov
fdivrl
inc
inc
inc
mov
std
jecxz
push
mov
cld
aas
cmp
sbb
dec
dec
mov
sbb
xor
sbb
test
dec
lock
jne
and
sub
pop
push
in
push
mov
jne
daa
dec
in
stos
jg
adc
add
lret
lods
xchg
xor
stos
loopne
mov
jbe
pop
inc
sub
jg
movsl
movsl
jns
xor
dec
push
push
pop
dec
jnp
jb
push
push
out
in
rcll
and
test
leave
cmp
std
add
cmp
hlt
out
mov
sbb
dec
or
sub
push
inc
or
mov
sub
ja
push
cmp
lret
test
xchg
test
pop
add
mov
test
and
shl
sahf
mov
je
sbb
dec
jo
test
xor
inc
outsl
loopne
xor
dec
inc
jno
js
xor
cmp
jne
loope
orl
adc
loopne
inc
jno
push
fcmovnu
inc
jne
das
and
insl
lret
adc
or
fbld
outsl
inc
inc
jne
filds
mov
fsub
cmp
pop
test
pop
pop
enter
push
jne
pop
shrb
je
clc
jne
or
mov
notl
xchg
test
ret
pop
jge
dec
iret
dec
mov
xchg
cmpsl
lret
dec
int
xor
movl
ret
inc
leave
mov
inc
or
imul
test
fwait
mov
pop
cmp
adc
mov
rcll
bound
add
sub
inc
addr16
lcall
in
fwait
aas
mov
push
enter
push
test
movsl
inc
mov
roll
mov
jne
out
shlb
and
gs
pop
adc
outsl
and
jle
call
push
ja
daa
mov
or
repz
fdivrl
out
fidivrl
das
and
push
mov
in
test
scas
imul
jne
scas
xor
cmp
rorb
xchg
pop
arpl
push
pop
lea
stos
in
mov
fldl2t
and
dec
mov
lea
pop
xor
mov
pop
cmpsl
mov
and
jne
js
jg
insl
loopne
rol
mov
dec
push
mov
jg
jp
jnp
pop
imul
lahf
push
jnp
cmp
shrl
dec
jnp
xlat
arpl
mov
cmp
push
xchg
fsubrs
mov
into
or
mov
add
push
xchg
mov
or
int3
mov
and
dec
sarl
xchg
fsubrs
call
push
lret
test
cmc
insl
andl
inc
push
leave
inc
xlat
dec
sub
jg
dec
cmp
dec
jne
sti
shl
bound
jge
push
cmp
scas
adc
adc
scas
dec
xchg
iret
inc
pop
sub
xchg
push
lds
rclb
mov
pop
inc
roll
add
sbb
xchg
cli
cmp
daa
push
mov
sbb
mov
add
dec
dec
sub
mov
push
in
mov
scas
jg
cmpsb
ljmp
aam
pop
stos
call
xor
aam
dec
mov
jne
int
jge
xor
jecxz
icebp
adcl
pop
jno
pop
or
push
insb
xorb
jge
dec
xchg
outsl
xchg
jmp
mov
or
jno
fidivrs
addr16
xor
lods
into
fwait
lds
mov
push
fcoml
jge
xchg
es
pop
jae
and
mov
imul
lods
hlt
stos
gs
cmp
bound
sbb
fmuls
mov
jecxz
sub
es
dec
adc
dec
movsb
pop
cmc
lds
push
lret
cmc
out
add
sub
xlat
sub
xchg
or
inc
fadd
xor
inc
es
aad
push
pop
nop
arpl
add
sub
push
inc
push
mov
daa
lock
jo
sub
push
cmp
mov
cli
bound
xchg
movsl
dec
jp
cmp
add
ret
jb
stos
clc
repnz
add
lretw
test
in
mov
cmp
rcrl
push
mov
out
adc
bound
lret
dec
clc
lahf
xor
add
and
cld
shlb
icebp
cmpsl
mov
push
cmp
jl
jmp
mov
jg
cmpsb
cli
push
call
test
add
and
cmp
cmp
lods
movsl
add
stos
dec
push
sub
lods
cmp
pusha
push
dec
dec
repnz
test
int
sbb
dec
stos
sbb
adc
ror
loope
inc
fnsave
ljmp
inc
ss
pop
pop
ds
pop
bound
pop
jne
test
test
aas
aad
pop
test
mov
xchg
sub
pusha
mov
cmc
imul
mov
cmp
jo
sahf
rcl
inc
adc
mov
pop
push
roll
rorl
dec
ret
call
xchg
sbb
outsl
je
dec
movsl
movsl
sub
or
sub
cs
scas
rcr
dec
jg
dec
test
or
xor
enter
daa
fsubrs
in
jg
dec
icebp
cmp
jns
sbb
sub
inc
shr
push
roll
dec
mov
inc
test
sbb
push
inc
rcrl
lds
jns
pop
stc
cmpsb
iret
mov
mov
cld
dec
xor
pop
aam
sub
arpl
ror
es
aam
jnp
mov
jns
repz
push
sahf
adc
imul
mov
jl
scas
dec
or
es
xchg
lods
xor
sub
out
push
mov
jns
rorl
pop
pop
pusha
push
pop
mov
mov
pop
xor
fidivrl
fisttpl
stos
pop
dec
or
sbb
inc
dec
add
push
loopne
fdivl
xor
or
enter
loope
xor
xor
mov
push
fldcw
push
pop
or
shl
testl
mov
sub
cmpsb
jno
xchg
es
push
js
ds
jmp
cmpsb
lret
xor
sti
aaa
pop
pop
cmp
xor
jne
out
std
std
cmp
jge
or
xchg
push
fsubr
stos
jae
mov
and
icebp
dec
cmp
jl
scas
add
adc
fs
cmpsb
pop
mov
sub
aas
adc
stos
inc
push
leave
rcll
sahf
inc
add
sbb
cli
out
int3
ja
filds
dec
mov
add
fldenv
push
cmp
dec
jnp
outsl
dec
pop
xchg
dec
or
cmc
fdivrs
mov
testb
enter
mov
mov
mov
push
dec
data16
add
and
jg
push
inc
imul
xchg
sbb
xchg
xor
shrb
stos
jne
adc
cmpb
xor
fisubl
cmp
aaa
jp
xor
imul
xchg
pop
fcmovbe
sti
push
add
sbb
xor
mov
cwtl
jmp
cmp
aad
rcl
sar
aad
lods
jg
icebp
jne
push
bswap
cs
repnz
xlat
cmp
ffree
mov
dec
xor
mov
adc
sub
test
fisubs
add
cmpsl
arpl
inc
test
js
aas
pop
sub
jns
scas
adc
inc
test
cmpsl
movsl
mov
cltd
arpl
leave
stc
sbb
aad
stc
adc
mov
out
inc
push
mov
hlt
pusha
mov
dec
xor
inc
push
pop
mov
dec
test
dec
bound
popf
sarb
sub
mov
push
or
and
and
scas
mov
jne
pop
jg
mov
and
dec
jae
pop
jno
in
mov
outsl
push
push
cmp
lret
jp
cwtl
and
outsb
mov
dec
pushf
pop
enter
loope
mov
leave
pop
cmpsb
inc
sti
jmp
inc
sub
fsubl
xor
add
movsl
push
incb
cmp
push
loopne,pn
cmp
jne
mov
scas
mov
jne
lods
inc
sar
sarb
mov
jnp
inc
in
inc
stos
xor
mov
cmp
dec
fmull
inc
push
adc
leave
cmpsl
or
int3
pop
in
inc
mov
sub
pop
dec
hlt
fstpt
cmp
stos
ret
jo
shlb
out
dec
dec
orb
inc
push
sbb
imul
pusha
movb
cmp
inc
push
jmp
rolb
gs
xlat
or
daa
ss
je
push
stos
arpl
hlt
test
gs
lock
push
inc
rorb
mov
push
sub
add
cmc
and
inc
ret
sub
pop
push
dec
jg
and
ficomps
jge
cmc
scas
rcrb
daa
sbb
roll
jns
scas
cmp
cmp
mov
faddl
ljmp
pop
cmp
cmp
cmp
subb
cs
jmp
inc
testb
dec
jecxz
sub
lret
pop
aam
cwtl
stos
and
push
fmulp
enter
testb
mov
cltd
mov
hlt
push
addr16
jmp
cmp
xor
xlat
push
and
fwait
movsb
pushf
addr16
jge
jne
inc
shll
push
jge
pop
sarl
mov
pop
and
dec
mull
dec
loope
out
xor
xchg
mov
cmp
in
xor
jp
mov
in
push
dec
mov
and
pop
std
gs
jnp
pop
xor
mov
xor
dec
adc
imull
xor
push
pop
fdivrs
lea
push
fdivrl
push
pop
jge
in
sub
std
cmp
movsb
and
or
dec
fnstsw
cltd
xor
pusha
jns
push
lcall
addb
adc
mov
sub
mov
hlt
gs
cmp
jp
push
pop
insb
orl
sbb
nop
mov
movsb
mov
in
or
je
and
push
sarl
pop
jns
pop
std
lahf
subb
scas
mov
lcall
mov
ljmp
jnp
jne
cmp
in
fst
push
mov
rolb
leave
mov
dec
push
inc
inc
call
stos
or
fcoms
dec
lea
aaa
pop
xor
sub
daa
fwait
pop
cmpsb
aad
inc
in
iret
stos
inc
fists
mov
sbb
in
xchg
sbb
push
ret
movsb
data16
pop
jecxz
xor
jmp
sbb
jl
mov
add
aas
pop
outsb
rcll
mov
xor
xlat
mov
in
push
addr16
ret
inc
mov
ja
das
pop
mov
xorl
idivl
mov
mov
repnz
ret
push
mov
shll
cltd
push
aam
adc
enter
and
fdivl
mov
push
insb
mov
sub
mov
sub
or
insl
rcl
cmp
or
push
dec
xchg
sbb
in
sub
cld
add
mov
push
add
sbb
sti
lods
dec
int3
xor
push
test
addr16
or
dec
or
aad
sarl
lds
call
das
xchg
mov
aam
cmp
cmp
mov
push
jge
xchg
xchg
jns
lods
arpl
sub
sahf
jge
inc
fistpll
inc
imul
xor
pushf
ds
jns
loope
cmp
pop
lock
jmp
inc
out
and
test
sahf
and
push
add
sti
in
xchg
lcall
inc
adc
ljmp
addr16
jne
cmc
test
movsb
jne
fdiv
push
inc
xchg
add
inc
out
inc
sub
lds
cmp
inc
jle
cmp
test
ja
ret
mov
add
test
fisttps
adc
fnstsw
push
and
xchg
and
mov
inc
pop
adcl
in
mov
cmp
sub
inc
lret
dec
and
shlb
hlt
add
jne
shl
data16
or
stc
call
and
mov
sub
push
mov
aad
adc
xor
leave
mov
and
push
mov
mov
dec
fbstp
mov
das
sub
add
and
lds
dec
mov
enter
push
push
adc
loopne
jg
in
mov
dec
jne
lock
mov
ret
fwait
ljmp
jl
cmp
adc
lahf
and
fstps
sub
sub
scas
dec
mov
mov
ds
push
jno
aam
xor
xor
jle
fnstcw
sub
mov
add
ds
push
mov
mov
sbbl
sbb
dec
mov
popf
xchg
mov
push
iret
lods
xchg
mov
ret
or
push
sarl
cmpsl
sahf
and
xchg
das
xor
jae
int3
movsb
fs
outsb
sub
in
dec
mov
sub
jne
insb
push
sar
mov
mov
xor
pushf
dec
jae
jne
xlat
cmp
stc
and
pushf
mov
add
mov
data16
ds
ja
aaa
xchg
sub
jmp
mov
and
mov
bound
mov
dec
mov
insb
and
test
imul
sarb
sub
shlb
sahf
enter
or
xor
add
jle
into
inc
insb
outsl
xchg
add
imul
push
jae
rcrl
push
shl
pop
test
ret
mov
push
pusha
pop
loopne
ss
fs
add
in
adc
test
leave
adc
movsl
cmp
cmp
lret
xchg
xor
push
std
jne,pn
insb
pop
push
scas
jg
adc
mov
mov
loope
repnz
rolb
and
stc
and
adc
sti
das
enter
dec
adc
gs
lods
add
lock
mov
xor
inc
rol
jecxz,pn
pop
inc
add
jle
add
aad
mov
test
test
mov
pop
xor
push
cmp
mov
pop
or
cmpsb
push
push
outsb
xlat
cmp
in
popf
inc
into
cmp
push
jne
xorb
mov
shrl
fs
add
pop
mov
xor
xchg
mov
std
mov
inc
dec
mov
hlt
lahf
xchg
mov
pop
sbb
mov
push
add
or
mov
sub
lea
pop
popa
stos
sub
dec
loop
jle
adc
mov
rcl
shrl
mov
fbstp
jno
addl
stos
push
ds
popa
daa
sahf
and
push
sbb
sbb
jb
ds
lods
sub
std
mov
add
andb
and
bound
jne
mov
sbb
imul
in
xor
stos
mov
and
fsubl
jns
mov
push
pop
inc
jg
mov
jge
mov
jo
lods
jae
and
outsb
xor
cs
and
fadd
mov
mov
xor
aas
inc
js
popa
sub
dec
rclb
xor
lock
lds
sbb
shll
daa
lret
jle
and
inc
xchg
jle
nop
andb
xor
ret
sbb
and
pusha
lods
repnz
cmpb
push
stos
dec
in
adc
movsb
push
pusha
loopne
in
pop
mov
movb
jns
push
push
movsb
shrl
mov
jb
mov
pop
mov
add
mov
cmpsb
dec
pop
mov
push
mov
push
dec
sub
cmpsb
aad
pop
push
mov
mov
fdivl
lods
inc
icebp
pop
or
in
stos
sub
jp
int3
jp
xchg
cmp
push
pop
dec
out
arpl
adcb
hlt
sbb
cmc
xchg
andl
pop
subb
fidivrl
inc
in
push
inc
daa
xlat
mov
gs
mov
mov
cmpsb
test
mov
dec
and
jg
push
enter
pop
jle
cmp
or
pushf
test
sbb
je
sub
push
and
dec
movsb
in
gs
inc
lods
mov
cmp
mov
xchg
mov
jne
jl
icebp
loopne
fcomps
pushl
cli
dec
ja
mov
adc
or
mov
mov
ds
mov
sub
aas
pop
sahf
cmpl
cmp
rclb
push
mov
mov
pusha
lret
jl
sbb
xchg
ja
xor
inc
push
inc
sub
shlb
jl
pop
jecxz
and
jle
outsl
sub
xor
daa
fcomps
out
xchg
mov
inc
fidivs
loop
push
push
sbb
gs
mov
cltd
insl
fnstcw
inc
hlt
mov
mov
movsb
xor
mov
cmpl
fsub
pop
bound
fstl
bound
std
xchg
sub
addr16
pushl
testb
arpl
insl
roll
in
xor
mov
pop
cmp
loope
into
pop
pop
mov
jl
lock
sar
test
rolb
mov
fwait
pop
hlt
xchg
pop
sar
out
mov
dec
add
inc
push
adc
out
ja
lea
lds
cmp
int
and
aaa
mov
mov
fisubs
sub
push
jns
mov
std
test
rcl
jae
leave
xor
lods
cmp
inc
adc
xchg
push
fidivs
adc
adc
movsb
or
push
data16
mov
add
or
push
mov
test
dec
cmpsl
jae
and
js
and
inc
and
and
cmc
mov
mov
fwait
mov
and
fnstcw
int3
mov
roll
das
nop
sbb
inc
imul
cmpsb
sub
inc
enter
and
sub
mov
stos
mov
loope
dec
les
cld
xor
jmp
xchg
loopne
cld
push
out
rcl
popf
adc
pop
add
inc
sbb
mov
test
xchg
inc
jge
daa
mov
std
mov
test
popf
shrl
movsl
pop
push
cmp
lret
add
mov
cmp
jnp
cmp
movsl
cld
push
adc
dec
pop
mov
sbb
rorl
cmpb
xor
inc
push
mov
fsubs
mov
rcrl
pop
rcrl
test
test
or
movsb
pop
cmp
or
lods
dec
sub
pop
jge
outsl
jb
dec
fistps
or
xor
and
lret
imul
gs
aaa
and
outsb
xor
jmp
jne
popa
and
jg
ret
push
mov
mov
mov
push
mov
xchg
cmp
sub
pop
inc
and
push
jae
add
dec
xor
xor
mov
cmpsb
cmp
pop
and
pop
jecxz
pop
mov
ds
push
and
arpl
call
jg
add
dec
dec
outsl
mov
pusha
loopne
scas
cmp
out
lock
push
sbb
ljmp
sbb
cs
add
lods
xchg
andl
jmp
jmp
jge
decb
incl
or
push
outsl
fbstp
stos
push
sub
shlb
or
push
push
jnp
faddl
mov
xor
iret
flds
cmpsb
jle
xchg
push
ja
xchg
es
lea
dec
hlt
mov
fiadds
sub
fcomi
ficomps
std
xchg
sub
loopne
pmaddwd
mov
cmp
jne
rorl
test
orl
fadds
ja
bound
outsb
sti
xchg
int3
mov
scas
add
xor
add
xor
in
add
jne
and
cmp
push
out
sbb
dec
into
ret
imul
pop
pushf
and
xchg
icebp
test
jle
jno
sbb
inc
call
ja
pop
inc
jnp
bound
mov
push
out
inc
std
mov
nop
leave
arpl
dec
jmp
stos
imul
pop
or
xchg
mov
addl
ret
jle
test
mov
dec
mov
sarl
pop
push
or
sbb
fsubl
aas
jno
or
shrl
cli
sbb
cltd
test
rcrl
sub
jg
pop
mov
mov
lds
ss
les
icebp
sub
outsl
cs
sbb
enter
inc
jnp
nopl
movq
out
add
inc
addl
lret
xorl
pop
pop
aas
shlb
rcrl
fldenv
inc
mov
pop
loope
pop
imul
outsb
or
lea
enter
dec
mov
push
cwtl
test
fnsave
xor
cltd
stos
adc
lds
mov
mov
xchg
add
push
xor
incb
push
inc
fdivr
xor
call
inc
or
maskmovq
testl
ret
inc
rorb
dec
adc
and
das
cltd
lret
popf
dec
push
lds
popa
dec
lock
enter
js
mov
pushf
gs
cmp
lods
mov
mov
stos
loopne
rol
rcrl
in
js
leave
cmp
sub
jo
push
aas
insb
out
fisttps
in
hlt
fadds
bound
xchg
enter
pushf
add
outsl
xorl
movl
fildl
roll
dec
lods
mov
fisubrl
je
xlat
xor
inc
movsb
mov
and
mov
push
and
daa
shrb
cmpsb
fs
pop
enter
ret
jnp
and
add
push
sub
adc
mov
lret
or
arpl
cmp
lds
xor
outsl
mov
ret
inc
mov
and
ljmp
fldl
inc
adc
dec
ljmp
insb
pop
jle
jecxz
dec
inc
jge
xor
into
jns
call
adc
sub
jg
push
or
xorl
cwtl
inc
add
scas
fs
pop
int3
das
or
stos
cmpsb
mov
cmc
dec
scas
lods
cmp
push
hlt
ja
mov
xchg
and
sub
lds
pop
and
repnz
iret
jne
aas
dec
cmc
jno
test
aad
inc
jnp
leave
lret
shll
stos
cmc
popa
test
pop
mov
pop
rorb
pusha
and
lods
xlat
imul
dec
xchg
push
and
fisubrl
loop
js
xor
gs
sbb
dec
inc
stc
jno
mov
mov
dec
xor
cwtl
int3
enter
mov
aam
xor
and
mov
loope
cmpsl
dec
mov
call
xor
cmp
test
sub
daa
pop
orl
xor
dec
mov
xor
rol
inc
dec
jnp
cmpsb
dec
icebp
adc
sbbl
sbb
arpl
dec
xor
adcb
ret
sbb
ljmp
lock
das
sbb
stos
nop
mov
stos
stos
xorl
push
not
xor
jo
push
sbbl
and
pusha
js
aaa
insl
sbb
and
lods
sub
add
xor
pusha
or
or
cmpsb
dec
arpl
in
jbe
fadds
push
adc
mov
imul
jl
cld
xchg
jae
adc
int3
jae
push
ret
ja
mov
mov
fcmovbe
inc
std
mov
popf
pop
fiadds
jb
push
aad
jne
jmp
pop
mov
and
mov
das
leave
mov
or
sub
ds
mov
fstl
ljmp
stc
dec
test
ret
in
in
rorb
dec
and
adcb
aas
repz
mov
sbbl
fdivl
inc
xorl
mov
cwtl
lea
push
dec
data16
mov
popa
jnp
pop
lods
xchg
and
hlt
push
xor
inc
hlt
jecxz
loopne
stos
push
fsubrs
mov
mov
lods
push
sub
inc
cwtl
lods
and
inc
movsl
cld
cmp
pop
and
dec
mov
jmp
imul
dec
adc
subl
fs
fildl
aaa
mov
inc
dec
ja
jne
dec
push
cli
repz
jp
movsl
imul
jns
shr
in
sar
push
fstps
mov
push
mov
add
xchg
lods
cmp
inc
test
xchg
add
mov
sub
sub
popf
popa
sbbl
pop
sbb
fisttpll
add
add
push
mov
clc
incl
inc
pop
testl
cmpb
test
in
adc
add
mov
add
dec
cmp
jno
sub
es
cmc
jl
cmc
scas
scas
out
ror
add
inc
cli
push
adc
and
std
jl
inc
ja
or
pop
mov
shl
xor
push
jg
fcom
cmp
adc
ss
xor
add
in
js
adc
std
inc
hlt
jo
inc
mov
xor
mov
add
ja
ret
inc
fbld
sub
cld
jmp
pop
jge
mov
cmpsl
sbb
ret
or
mov
imul
pop
stos
jl
lcall
cmp
loope
inc
rorb
sub
mov
fldt
aam
mov
fisttpl
inc
pop
pop
mov
fdivr
out
jmp
ficoml
jae
mov
xor
fisttpll
and
sbb
add
push
bts
xlat
jge
dec
aaa
mov
and
add
cmp
inc
fnstsw
sub
jae
cmp
adc
add
dec
cltd
mov
push
aas
nop
lea
jmp
int
and
sarb
imull
sub
mov
lods
adc
gs
cmp
inc
push
xchg
mov
pushf
add
or
sub
shlb
xchg
inc
sub
out
jns
aad
jb
or
xor
pop
cmp
imul
inc
xor
xor
jno
push
in
ljmp
jge
add
cmc
cmp
sub
ljmp
out
inc
sub
cmp
sbb
ljmp
adc
push
out
push
or
jno
push
dec
push
mov
xor
jae
sbb
shlb
ret
push
push
mov
and
jo
js
sub
daa
pop
rorb
add
test
test
std
cmp
push
push
sarl
dec
dec
arpl
cmc
cmp
xor
cwtl
inc
push
inc
inc
dec
inc
hlt
mov
int3
inc
push
mov
or
enter
gs
orb
and
outsb
adc
push
inc
xor
fs
and
xchg
shrl
cld
dec
xchg
sub
and
mov
cmp
inc
lret
or
ja
call
adc
mov
mov
push
jns
dec
xor
mov
je
mov
ja
sbbb
xor
dec
inc
xor
mov
or
inc
call
sbb
repnz
and
and
decb
inc
stos
push
add
add
mov
push
or
mov
xchg
fs
jle
mov
jne
lcall
xor
and
add
lds
ds
mov
aad
stos
jb
sub
xchg
out
sub
push
push
cmp
xlat
cmpsl
pop
push
repnz
sahf
fists
nop
mov
nop
xor
pop
sub
clc
push
mov
jg
test
push
push
jecxz
icebp
in
push
fs
fldl
rcll
pop
test
fbld
pop
mov
pop
and
jne
jecxz
adc
pop
or
fst
or
and
pop
test
shrb
push
push
mulb
xchg
cmpsb
shll
lds
or
sti
sbb
jne
nop
testl
bound
jb
and
clc
ljmp
inc
mov
movsb
jl
pop
jo
sbb
hlt
ljmp
adc
xor
adc
or
pop
mov
xor
push
inc
out
cmp
lods
and
test
rclb
and
enter
ja
cmp
push
push
loope
addl
lahf
pop
les
es
insl
fsubr
insl
dec
sarl
cmp
rcl
fbld
and
lcall
sub
sbb
dec
movsb
jnp
jl
and
push
test
les
fadd
fwait
xchg
test
lods
xchg
mov
push
sahf
jnp
mov
push
cmp
cmp
ds
imul
stos
push
mov
in
sub
mov
jne
ja
ret
inc
imul
add
sub
inc
jge
push
or
scas
rcrl
arpl
outsl
ds
mov
xchg
sub
jmp
jecxz
hlt
or
sub
xor
inc
sbb
dec
data16
pop
inc
cld
jmp
inc
or
cmp
leave
shll
enter
mov
dec
xor
mov
adc
gs
ja
insl
mov
jno
mov
cmp
pusha
dec
mov
pop
sbb
jg
xlat
xor
enter
pop
icebp
push
ljmp
push
adc
scas
loope
outsl
and
aam
inc
rol
push
les
dec
orl
rclb
dec
push
sarb
sahf
rcll
pop
push
cmpb
into
mov
add
mov
inc
leave
xchg
sub
inc
pop
jbe
shl
and
sti
xor
mov
arpl
inc
push
sub
cmc
inc
stos
cmp
push
imul
xor
xor
adcb
decl
push
xor
js
les
aad
stc
cmpb
shrb
push
dec
push
inc
mov
inc
inc
loop
cltd
lret
in
js
mov
jb
adc
jge
push
insl
ljmp
fistps
jne
sbb
lahf
outsl
icebp
test
add
inc
xor
inc
rolb
push
out
push
enter
xor
mov
cmp
lods
lret
mov
movsb
cmp
gs
xchg
lret
add
mov
fs
rclb
cltd
lods
or
lea
pop
mov
or
and
and
add
cli
jo
cli
addb
enter
add
add
hlt
sbb
and
xlat
hlt
out
mov
fiaddl
mov
add
dec
jne
sub
orb
sub
dec
outsl
dec
xchg
mov
mov
cmpb
and
inc
mov
push
pusha
xchg
jns
pop
pop
sub
xor
dec
aam
add
mov
xchg
add
notb
fwait
lea
push
add
cmc
mov
sub
inc
push
aas
or
int
jnp
sub
pop
cmpb
cmc
gs
fisubs
cmp
jge
mov
push
cmp
inc
inc
cmp
push
mov
add
sub
lret
movl
cmc
cmp
stos
push
xchg
mov
pop
movb
hlt
icebp
out
popf
adc
dec
mov
lret
cld
pop
or
sbb
push
cmp
stos
dec
inc
cmc
push
mov
or
mov
pusha
mov
jns
paddusw
push
lret
rol
call
or
rorl
pop
popf
pop
push
dec
enter
hlt
sub
push
sbb
cmp
add
sbb
adc
lods
mov
sub
dec
sub
adc
pop
fdivrl
popa
pop
push
lret
pop
or
push
iret
cmp
push
out
jno
bnd
test
sbb
imul
leave
and
hlt
jge
mov
jmp
sbb
int3
push
push
int3
xor
pop
mov
mov
in
inc
push
inc
mov
adc
mov
sub
push
das
jle
data16
roll
mov
dec
xchg
inc
push
sub
and
and
rcl
jae
jp
imul
jo
cmp
or
pop
adc
icebp
xor
out
in
loope
or
into
aad
push
insb
test
push
aaa
arpl
fwait
jns
add
test
add
lds
scas
leave
xor
in
fdivrs
xor
push
stos
pop
mov
xchg
sub
adc
dec
mov
dec
mov
pusha
add
sarl
xchg
das
sub
push
fcoml
lret
push
fsubs
pusha
adc
dec
lea
pop
cmp
jno
inc
into
int3
mov
xor
xchg
pop
sbb
dec
cmc
test
pusha
sub
pop
arpl
cmc
add
cmp
arpl
hlt
insl
aas
aas
mov
mov
dec
and
adc
xchg
or
mov
leave
popf
adcb
jge
sarl
dec
gs
sarl
sub
push
and
sbb
enter
cmpsb
cmp
push
lea
cld
push
test
push
es
mov
xor
cmc
cmpsb
xchg
inc
mov
lea
sbb
int
aam
push
rcrl
inc
insl
jb
push
adc
popf
dec
gs
xchg
ret
mov
in
push
fldenv
push
mov
dec
dec
adc
add
jno
adcl
adc
pop
loope
xchg
bound
dec
mov
aad
xchg
push
adc
cwtl
cmp
popf
ljmp
xchg
cmp
fimull
push
int
es
inc
mov
leave
ret
push
sub
fstpt
jns
jmp
dec
push
push
jg
xor
inc
add
fstl
xor
test
fisttpl
xchg
jo
jns
pop
dec
pusha
loope
loopne
jnp
enter
jp
mov
dec
jle
aas
popa
jecxz
ds
or
mov
mov
inc
sub
jne
cmp
ret
cli
std
rcr
sar
inc
pop
mov
and
inc
sub
sub
nop
push
fstpt
iret
dec
leave
in
pop
mov
hlt
fxam
xchg
mov
ret
xchg
mov
fldt
pop
inc
lds
fcoml
in
xor
and
xchg
nop
push
push
lds
pop
pop
sub
pop
push
mov
sti
push
popa
enter
xchg
subl
push
cld
lret
lret
in
ds
mov
sbb
jecxz
jmp
nop
dec
sti
add
lods
ret
jnp
adc
mov
gs
aaa
inc
jne
popa
test
ja
inc
lock
fxch
add
inc
adc
push
xchg
adc
jne
test
flds
add
cmp
mov
sub
insb
and
mov
inc
fiaddl
dec
mov
add
cmp
pop
and
inc
lret
fstpt
imul
add
inc
rorb
sub
sbb
push
xchg
adcb
push
mov
clc
fwait
push
and
fcoms
pop
mov
pop
or
inc
sub
jne
or
idivb
push
xchg
in
int
cmp
and
stos
mov
mov
xchg
fdivr
dec
fsubl
mov
mov
pop
aam
xchg
push
inc
fcmovnu
aad
leave
dec
inc
icebp
cmpxchg
push
sbb
cmpsl
inc
lods
aas
or
sub
test
mov
std
dec
cmp
std
sbb
test
iret
stos
stc
mov
shl
add
cmp
aad
adc
notb
cmc
push
or
and
cmpsb
in
pop
fsts
sbb
xor
cmp
dec
xchg
mov
je
leave
cmc
add
add
cmc
cmpsl
lds
push
mov
pop
sub
sbb
cmpsl
andl
add
add
ds
or
add
xor
dec
es
popa
cmc
sub
out
enter
xchg
imul
xchg
inc
inc
loopne
dec
mov
into
jb
enter
push
push
inc
cmpl
popa
aas
aad
outsl
xor
stos
jl
pop
cmc
adc
mov
dec
movsl
mov
mov
movsl
dec
pop
stos
test
in
cmc
xor
jge
icebp
inc
pop
dec
sti
inc
jge
sub
repnz
fcoml
lahf
sbb
fwait
clc
dec
mov
test
cmc
mov
out
test
cli
clc
je
mov
sbb
dec
mov
in
jo
dec
nop
scas
mov
decl
push
sbbb
mov
xchg
out
inc
sahf
pusha
push
add
out
pop
xchg
and
icebp
fwait
sub
xchg
cmc
test
arpl
pop
push
nop
adcl
jl
psrlq
outsl
jb
dec
cli
int
add
popa
dec
gs
imul
jno
rcrl
int3
cwtl
inc
sub
and
out
leave
pop
icebp
add
push
pushf
and
push
ror
mov
cmp
int3
mov
dec
pop
mov
xchg
mov
sbbb
and
jbe
dec
jns
push
fcmovne
jp
pop
cmpsl
aad
pop
mov
jecxz
push
mov
ds
sub
pushf
push
frstor
popf
jp
xchg
sti
sahf
std
add
inc
mov
push
mov
shrl
daa
daa
insb
xchg
std
das
clc
setnp
pop
or
cmc
cmp
mov
int
cmp
popa
test
jnp
sbb
cmpsb
mov
int3
in
push
jnp
mov
ljmp
push
push
sbb
std
xor
jp
out
add
push
enter
lret
jnp
dec
xorb
push
xor
sahf
leave
push
inc
icebp
xor
test
sti
lock
scas
jae
or
lods
and
push
dec
dec
cmp
and
jb
test
hlt
mov
lea
push
xor
fisttpl
loop
fldenv
dec
inc
stos
jg
dec
push
mov
call
ffree
inc
inc
inc
push
lds
mov
push
inc
in
dec
push
pop
std
dec
xor
sar
push
jno
cwtl
inc
std
lods
popl
stos
nop
sub
mov
shl
addl
jp
inc
pop
xor
pop
psubw
pop
lret
movsb
dec
nop
ret
cmp
rcr
lret
fildll
inc
push
popf
adc
add
mov
test
push
pop
pop
lahf
test
rorb
adc
inc
cmpsl
inc
xchg
inc
cmp
sub
mov
dec
mov
imul
ja
and
or
xor
add
cmp
enter
test
insl
inc
or
leave
rcrl
or
inc
cmp
dec
push
sti
je
xor
ret
and
jmp
and
and
push
loop
insb
mov
xlat
inc
fadds
fsub
sub
add
push
loop
popf
cli
push
mov
or
xchg
aad
movsl
dec
jnp
sub
jp
push
mov
pop
popf
mov
mov
idivl
adc
fwait
loope
inc
jg
mov
or
dec
xchg
pop
or
insb
int
dec
cmpsl
lret
mov
popa
imul
loope
fcomp
out
mov
push
subl
scas
cmpsb
lds
test
and
mov
into
mov
movsb
int3
jl
stc
inc
dec
sub
fsubr
add
mov
mov
shlb
adc
mov
aad
jg
push
and
cs
insl
cmp
enter
icebp
pop
pop
movsb
and
rcrl
inc
mov
xchg
dec
push
cli
loopne
inc
arpl
mov
jo
dec
inc
sbb
sub
mov
mov
jne,pn
jg
mov
push
jg
or
stos
imul
dec
sbb
mov
or
push
mov
xor
sub
pop
fcmovnb
inc
into
sub
outsb
pop
dec
and
gs
cmp
lret
fbld
xor
jae
rorb
ret
or
push
cld
adc
inc
push
sub
sub
das
push
mov
mov
out
sbb
in
dec
test
pop
lea
inc
xor
lret
repz
jns
aad
pop
cmp
push
fldt
dec
arpl
push
sti
ja
jge
mov
popf
movsb
push
or
cli
std
fcompl
rclb
xchg
lcall
das
cltd
mov
dec
aam
stos
and
leave
jge
lods
xchg
push
jmp
mov
dec
pop
sub
add
shlb
push
sbb
fwait
imul
jl
lds
ret
std
data16
and
cmp
mov
or
popa
shll
test
enter
inc
inc
add
jo,pt
jge,pt
sub
scas
in
push
outsb
inc
loopne
popf
xchg
fdivl
xchg
inc
add
arpl
sub
inc
add
xor
or
imul
push
cmp
push
cmp
mov
ret
lds
aas
test
xchg
popa
stc
dec
mov
and
jno
arpl
or
aas
jecxz
out
push
pop
adc
dec
push
insl
aam
adc
jp
mov
popa
add
lahf
or
jo
nop
and
ret
push
push
jb
imul
es
pop
andb
or
sbb
insl
pop
test
push
mov
pop
adc
ja
mov
pushf
cs
xor
inc
popa
enter
adc
lds
out
loope
lods
insl
jmp
es
mov
inc
xchg
lret
ret
xchg
cltd
sub
sub
inc
add
inc
and
sti
out
fsubp
or
xor
shrl
and
call
mov
jp
sub
mov
das
xchg
test
jnp
sub
xchg
push
jnp
and
mov
addr16
jge
dec
leave
rorb
jmp
dec
push
jnp
imul
fistpll
leave
test
lods
js
in
mov
pop
inc
jns
movsb
pop
push
test
push
xor
adcl
cltd
pop
push
rorl
push
jnp
lret
cwtl
sub
adcl
inc
push
push
mov
inc
add
and
xlat
and
and
aam
fsubr
push
mov
xchg
adc
rcrl
xor
mov
mov
add
test
nop
add
subl
ret
sub
test
leave
scas
pop
jae
gs
shl
andl
mov
fldenv
test
repz
mov
push
adc
ret
subl
pop
mov
ret
lds
lds
sbb
sub
sub
mov
inc
cli
lea
add
mov
outsb
mov
jge
or
add
aas
cmpsl
gs
pop
push
jmp
jge
lea
sbb
outsl
cltd
xchg
jle
pop
int
aam
rolb
nop
mov
addr16
mov
xchg
aad
dec
mov
jns
sbb
add
bound
jecxz
pop
sbb
xor
and
xchg
push
loope
test
lods
or
fs
pop
daa
popf
xlat
jmp
pop
in
jae
rol
mov
mov
jle
jl
lret
jg
fdivl
inc
jns
jge
insl
dec
out
daa
xchg
movsb
xchg
jmp
lret
dec
inc
or
movb
aaa
mov
stc
xor
jo
xor
ja
lds
pop
outsl
ja
into
ret
jne
xchg
jle
leave
mov
pop
jge
dec
shll
repnz
in
mov
fsubrl
push
jle
movsl
pop
mov
xchg
outsl
cwtl
and
and
jge
cmpsb
pop
inc
adc
xlat
lcall
insl
pop
arpl
push
jbe
pop
dec
push
push
add
pop
rcr
test
sbb
mov
pop
enter
cmp
inc
or
jnp
call
jnp
sbb
dec
pop
inc
into
add
pop
mov
loopne
push
scas
jae
push
adc
bound
xchg
xor
mov
sbb
jmp
pusha
push
test
fbld
shll
push
std
int
xchg
nop
xchg
js
or
xchg
dec
lea
add
pop
dec
lods
scas
repz
scas
and
and
int
pop
nop
pop
add
inc
push
jnp
xor
sub
or
int
jne
orb
mov
mov
xor
jle
mov
dec
dec
xor
cmp
dec
leave
and
fwait
shll
cltd
mov
sub
movsl
rcrl
test
insb
push
inc
sub
sbb
add
push
outsl
jne
xchg
and
xor
into
fadds
sbb
dec
mov
xchg
pop
mov
lret
test
adc
loop
pop
in
or
pop
dec
imul
fwait
dec
jnp
sub
fwait
lret
add
jge
inc
ret
xchg
dec
dec
inc
cwtl
push
iret
outsb
mov
fs
sub
push
stos
imul
mov
gs
cmp
dec
xchg
cs
pop
jge
push
and
jne
xor
inc
mov
and
push
rcll
test
push
stos
and
sub
es
shll
xor
mov
jo
and
and
lret
lods
lret
shl
dec
sbbb
hlt
ss
mov
xchg
outsl
xchg
hlt
les
faddp
hlt
sbb
clc
ror
hlt
adc
js
pop
mov
outsb
shll
pop
inc
mov
rdpmc
and
dec
test
mov
mov
push
and
mov
fmuls
push
push
aam
sub
jge
jno
js
sub
xchg
mov
or
fwait
inc
push
rcl
hlt
pusha
cmp
mov
cmpl
add
hlt
scas
aaa
out
jg
cwtl
arpl
inc
movb
popf
shrl
mov
mov
std
addl
mov
xor
mov
pop
mov
pop
das
dec
rcrl
or
mov
mov
mov
sub
sarb
xlat
xchg
dec
xor
insl
or
xor
cs
dec
rorl
push
sub
xchg
movsb
stos
push
psllw
out
adc
out
inc
fnstsw
or
xor
sub
outsl
mov
pop
insl
dec
push
movsl
xchg
or
mov
aam
mov
nop
dec
cs
dec
inc
mov
gs
pop
dec
push
cmc
push
insl
dec
sti
pop
mov
std
or
nop
mov
push
cmp
jo
and
dec
imul
dec
dec
roll
adc
sti
mov
arpl
movsb
lret
sbb
mov
push
daa
xor
jne
xchg
test
jmp
ds
test
iret
stc
pop
into
dec
inc
xchg
mov
mov
pop
imul
lods
sub
ds
push
xor
dec
fsubs
jns
arpl
fdivl
loope
xchg
sbb
pop
ss
or
ret
es
dec
xor
out
in
pop
addr16
mov
rcrb
js
in
mov
in
cmc
pop
and
lret
or
jmp
mov
xor
addr16
or
mov
sub
and
sub
cmc
jg
adc
mov
imul
fstp
xor
mov
gs
inc
cmpsl
jle
push
rol
fnstenv
loop
test
jmp
cmc
fcmovu
dec
dec
outsb
push
sahf
out
in
cld
shrl
cmc
and
int
daa
inc
leave
jp
dec
xor
xor
in
test
pop
inc
jp
inc
inc
popa
lret
cmp
movsb
in
ds
lcall
inc
jle
mov
shrl
inc
add
dec
pop
mov
add
inc
mov
in
clc
push
dec
outsb
imulb
test
adc
ljmp
movsl
sub
jo
lret
inc
add
xchg
int
sbb
fdiv
push
mov
nop
mov
or
popf
movsb
pop
xor
leave
popf
xor
xor
dec
and
mov
ret
add
lret
xchg
sub
and
dec
push
dec
je
mov
inc
push
jne
scas
js
andl
lcall
movsl
mov
and
or
jo
sub
cli
fistps
pop
sub
hlt
push
inc
cmp
test
dec
int
and
jnp
and
mov
add
and
loopne
idiv
xor
stos
fimull
xchg
rcr
pusha
nop
inc
ret
dec
add
dec
js
push
cmp
dec
daa
fdivl
shlb
and
and
loop
les
jbe
ja
and
test
mov
inc
cs
vpperm
cmc
sbb
jl
xchg
mov
sbb
push
icebp
push
ficompl
pop
fstpt
call
push
imul
mov
push
int
loope
push
test
stc
sub
dec
jnp
adc
idiv
xor
pop
ja
mov
stos
int
lods
mov
fnstenv
adc
in
sbb
push
outsl
sbb
orl
shr
cltd
or
or
das
orb
or
or
jp
sbb
push
into
cmp
xlat
cmp
out
in
fsubl
cmp
dec
loop
inc
mov
or
inc
jne
pop
shll
xlat
dec
shlb
fsubl
nop
enter
daa
fstl
inc
ret
xbegin
adc
fcompl
xchg
idivl
pop
daa
adc
lcall
jnp
test
mov
xchg
push
inc
cmpsb
pusha
or
jmp
ret
sbb
shrb
jl
inc
lea
adcb
movsl
call
sub
mov
push
cmpsl
pop
and
or
xchg
icebp
movb
and
cmp
cmp
cmp
test
mov
jnp
sub
ja
and
insb
or
lods
xchg
lret
jns
and
push
out
stos
and
or
push
ret
nop
hlt
cltd
hlt
jo
or
xchg
lret
xor
mov
lds
fcom
push
cmp
fs
lret
inc
stos
inc
sar
mov
mov
flds
dec
rcr
addb
into
jne
pop
cmc
and
mov
cwtl
fdivs
push
mov
lds
addr16
lret
inc
ret
xchg
cmp
and
jae
clc
xor
inc
cmp
push
outsl
jo
lods
pop
fs
negb
push
loop
xor
les
jg
jne
mov
inc
cmp
je
ret
xor
xor
add
and
inc
test
shlb
std
and
push
sbb
xor
pop
xor
scas
xchg
iret
mov
adc
decl
mov
jg
mov
stos
adcb
sub
xchg
lock
push
xchg
leave
shlb
and
jno
es
iret
jmp
imul
cmp
cmc
test
fstpl
xchg
pop
push
cmp
push
fisttps
and
lds
mov
inc
roll
or
pop
dec
and
and
sarb
inc
add
sub
leave
sub
xchg
scas
fisubrs
xchg
inc
mov
ret
fldcw
jbe
push
sub
stos
cld
add
test
inc
jb
sub
jae
xor
mov
out
xchg
gs
out
or
cwtl
or
movsl
sub
je
sub
cmp
or
and
jge
shl
adc
adcb
lret
mov
mov
xor
popf
push
repnz
shrb
outsl
test
mov
call
push
cmp
test
jne
out
addr16
movsl
dec
mov
add
jae
fisubl
and
scas
into
mov
cltd
mov
roll
ds
test
mov
pusha
cmp
add
push
dec
adc
mov
xchg
dec
sub
xor
push
fisubrs
out
xchg
sbb
imul
mov
roll
mov
and
andb
mov
ret
dec
mov
sub
and
push
mov
lds
popa
or
les
jb
and
lahf
es
arpl
popf
xor
rorl
scas
jnp
xchg
aad
xor
xor
mov
sub
in
insb
pop
sub
les
fnstsw
inc
and
clc
add
mov
dec
jg
dec
and
push
sub
mov
cmp
and
imul
jae
mov
nop
mov
jo
jl
jb
cmp
int3
inc
lods
repnz
inc
xchg
les
dec
jns
pushf
and
dec
mov
in
sub
and
loope
dec
push
jbe
or
push
xchg
test
push
fisttpll
dec
sbb
rcll
push
sbb
xor
aam
jb
pop
inc
cmp
add
aas
mov
lds
jle
sub
test
aam
sub
push
aam
or
sbb
aas
inc
lods
cmp
or
adc
in
scas
push
ror
mov
addr16
push
leave
jno
xlat
adcb
inc
andb
push
jl
out
dec
push
push
mov
dec
inc
sbb
es
jl
push
dec
int
inc
dec
jp
outsl
movb
add
xchg
stos
outsb
daa
sub
sub
test
push
xchg
dec
xor
sbb
pop
inc
rolb
bound
cmpl
clc
sarb
inc
sarl
push
mov
out
pop
and
mov
sub
or
xor
ds
pop
enter
cmpsl
xor
xor
and
cs
xchg
jmp
and
addr16
roll
mov
fisttpl
fildl
dec
test
icebp
sbb
cmp
jns
dec
fstpl
loopne
jg
mov
pushf
push
push
mov
jnp
outsl
jecxz
aam
enter
or
mov
xor
push
loopne
dec
mov
mov
sbbl
stc
adc
fsts
sbb
fbstp
movsl
lret
jg
loope
cs
test
jg
inc
jmp
jp
es
or
aam
dec
pop
push
mov
add
sbb
inc
ljmp
repnz
mov
scas
xor
ret
movsb
sahf
mov
mov
xchg
test
dec
or
lcall
pop
xchg
enter
int3
jbe
rclb
aam
push
dec
xor
test
mov
adc
shlb
or
aas
xor
aas
mov
outsb
push
into
push
jbe
lret
test
test
sub
push
adc
aam
or
xchg
xor
mov
push
das
dec
and
int
dec
sub
test
or
push
jp
incl
xor
dec
mov
insl
dec
cmpsl
js
jne
aad
ja
push
jg
sbb
mov
sbb
xchg
sbb
inc
dec
in
jl
pop
xchg
arpl
pushf
jp
cs
aam
mul
jo
lods
sub
imul
and
push
adc
add
inc
sub
xor
pop
aam
gs
sub
jb
ret
cmp
flds
fsts
mov
cmp
sbb
push
mov
out
mov
nop
stos
xor
inc
leave
jnp
cmp
inc
sbb
xor
arpl
jg
mov
stos
aad
jg
orb
add
add
pop
push
mov
jae
push
cmp
fwait
or
outsb
cmc
imul
jne
aad
cmp
ror
dec
es
adc
dec
iret
xchg
orb
and
repnz
or
rclb
mov
jno
shl
xor
outsl
std
dec
hlt
pop
inc
jl
push
mov
push
ficoms
jmp
frndint
xchg
jae
sub
loope
into
stos
add
mov
je
nopl
sbb
mov
pusha
pushf
lods
scas
test
das
mov
dec
xor
dec
clc
fisttps
jae
fwait
test
lock
add
sub
ja
cltd
inc
cmc
sub
pop
outsb
sub
push
movsl
cmp
repnz
imul
imul
mov
sub
adcl
push
lcall
call
and
sbb
std
xlat
inc
inc
push
xchg
inc
or
mov
or
dec
push
test
andl
lea
mov
sahf
and
pop
xorb
push
jg
test
mov
dec
imul
stos
push
aad
dec
test
sbb
mov
adc
xchg
inc
xchg
jne
sub
add
pop
or
lea
and
sub
or
popf
sub
mov
push
push
inc
cmp
xor
push
lods
subl
jp
jo
sub
movsb
inc
cmpsb
inc
lods
jns
cmp
adc
push
push
jmp
dec
cwtl
xchg
lods
push
mov
pop
push
fs
lods
ror
cli
cld
enter
xchg
mov
dec
imul
jnp
arpl
push
imul
sub
xchg
dec
stos
adc
imulb
xchg
push
xor
adc
push
testb
xor
mov
stos
sbb
sbb
cmp
and
push
cmc
pop
shlb
inc
enter
and
arpl
and
js
insb
add
fsubl
in
jo
xchg
inc
or
pop
addb
lret
mov
aas
leave
jle
mov
dec
hlt
lock
repnz
out
adc
rcll
fwait
mov
adc
push
mov
xbegin
mov
rcll
sbb
dec
dec
stos
jns
dec
inc
andb
repz
iret
js
movlps
hlt
test
push
cmpsb
iret
push
jbe
sub
jp
adc
int
push
jb
mov
lahf
rorl
mov
jle
jb
push
rorl
sub
movsl
fs
rol
mov
enter
popf
insb
or
add
inc
jne
dec
push
cmp
popf
outsb
enter
or
movsb
adc
fsubrs
js
pop
jae
testb
jno
rcrl
or
ljmp
jmp
jne
mov
lcall
pop
xlat
bound
fcmovbe
pop
or
sti
loope
shlb
insl
pop
jp
ret
mov
outsl
mov
mov
cwtl
mov
sub
pusha
jle
push
lods
cmc
pop
sbb
inc
pop
inc
lock
icebp
rolb
sub
sub
jo
mov
repnz
mov
xor
xchg
xor
and
aam
notl
jno
scas
shll
cmc
adc
inc
stos
add
mov
out
push
cmp
jle
std
jle
push
mov
jb
dec
xor
mov
out
cli
lcall
inc
hlt
in
das
mov
inc
cmp
popa
dec
mov
jo
sub
cld
jecxz
icebp
inc
and
dec
pushf
and
out
pop
je
mov
popf
shlb
xchg
leave
cli
cmp
es
adc
pop
jne
add
cld
pop
rorl
inc
out
mov
movsb
mov
pop
jmp
outsl
cmp
cli
cltd
out
sbbl
gs
pop
jno
push
mov
jne
mov
add
mov
dec
sarl
ficomps
das
add
int3
jl
dec
jg
adc
push
mov
dec
sahf
pusha
mov
cmp
sbb
xlat
jnp
cmp
cwtl
rcrl
push
fadd
add
inc
cmp
lds
add
lods
test
lret
pushf
mov
cmp
jne
pop
rol
cmpsb
jp
enter
in
or
xor
mov
shl
test
les
in
out
cwtl
cmp
adc
jmp
sub
cmp
xchg
pop
icebp
loope
xchg
setge
imul
jbe
xchg
xchg
icebp
lods
out
dec
mov
sbb
inc
push
idivl
test
inc
jno
inc
sub
and
popa
mov
ja
fimull
xchg
mov
insb
mov
inc
adc
jl
jnp
jne
jmp
ds
int
push
test
jns
cli
stc
sbb
jbe
insl
cmp
cs
stos
shrb
push
rcrl
jnp
inc
fnstenv
push
fsubrs
addr16
pop
cmp
lretw
push
or
dec
cld
mov
pop
or
stos
int
dec
cli
xchg
add
xchg
mov
cld
xor
shlb
cmc
mov
mov
roll
pop
cwtl
dec
dec
cmp
testb
adc
clc
leave
leave
outsl
rcrb
or
mov
aas
leave
aad
lcall
adc
xlat
jns
stos
push
xchg
test
test
enter
pop
in
pop
lods
in
inc
cmp
or
jle
jns
cli
shlb
jno
lret
popf
push
sarl
xchg
xor
jbe
or
push
mov
xlat
mov
int
jp
aas
ret
rcrl
dec
dec
xchg
ds
mov
lcall
loope
adc
jns
cmp
aam
sub
cmp
dec
add
sbb
sub
fisubl
mov
daa
mov
lret
and
int
cmp
cmc
js
rcrb
outsl
insl
stc
aam
pop
hlt
popa
sub
cmovs
inc
cmc
push
dec
mull
rorl
cmp
cltd
fstpt
mov
aad
mov
sahf
push
dec
scas
push
mov
movsb
pop
enter
mov
and
push
pop
fisubrl
mov
loope
pop
cmp
pop
or
sarl
gs
jge
cmp
sub
sbb
sub
imul
xchg
daa
xor
or
inc
or
call
pop
stc
test
mov
inc
in
jp
mov
mov
inc
dec
inc
dec
jne
dec
mov
push
sub
sub
mov
lds
cmp
dec
pushf
ja
es
imul
hlt
lods
xor
es
mov
push
mov
pop
leave
iret
push
sbb
mov
fcomps
frstor
add
rcrl
add
push
jo
leave
stos
and
xchg
js
jns
bound
repnz
mov
mov
iret
cld
lock
arpl
dec
push
ret
sbbl
pop
int3
jb
lods
pushf
movsb
or
ret
stos
cmp
cmp
adc
insl
test
jg
inc
mov
je
shrb
or
nop
push
push
xchg
insl
xchg
pop
mov
sbb
jp
xchg
ss
andl
andl
jae
xchg
lods
fisubs
inc
fsubr
mov
push
xchg
add
test
or
jmp
pop
hlt
sahf
test
mov
sub
lea
dec
mov
fs
mov
lea
push
sahf
lea
jge
imul
mov
insl
dec
add
sub
cmp
add
in
inc
cwtl
push
rorb
mov
fsub
jbe
push
adc
lahf
mov
aad
push
mov
inc
inc
decl
xor
inc
xor
xor
and
add
sbb
ficoms
je
cwtl
sub
aam
mov
insl
push
sarb
int
test
cmpsl
ja
inc
fnstenv
inc
and
sarl
push
outsl
inc
rorb
hlt
lods
test
xchg
sub
pop
mov
rcrb
cmp
popf
sub
dec
mov
stc
mov
aad
jp
xchg
push
mov
add
push
jne
int
dec
hlt
push
enter
jmp
pusha
movb
ret
push
mov
aad
fsubl
lcall
ss
and
js
adc
dec
xchg
cmpsb
sarb
pop
int3
sbb
dec
test
fstps
sbb
scas
jae
push
test
dec
mov
cmc
data16
cld
jp
mov
jl
xchg
jne
pop
xlat
stos
imul
dec
jne
dec
lcall
push
adc
out
cmp
sub
test
dec
mov
push
dec
lock
cmc
in
enter
xchg
in
fcoml
jne
je
sti
scas
pop
cmp
nop
jae
sbb
mov
dec
mov
mov
outsl
cli
mov
insl
jmp
inc
push
rol
jo
push
xchg
adc
loope
scas
sub
arpl
jno
into
push
dec
xor
dec
data16
daa
pop
jne
je
mov
rol
les
ficoml
lcall
jbe
incb
cmc
mov
cmp
add
jne
je
dec
mov
jns
adc
fsub
mov
dec
inc
hlt
in
xlat
inc
pushl
xchg
cmp
xlat
jl
jecxz
inc
inc
xor
shlb
add
js
rorl
and
leave
les
xor
or
dec
call
adc
pusha
sti
js
dec
jne
cmc
lea
xchg
cmp
lcall
jo
or
sub
aam
pusha
dec
hlt
loop
int
push
cmp
pushf
mov
sbb
int3
test
jle
test
add
xor
and
mov
sub
shlb
or
jb
jae
or
lock
insb
xchg
cmp
lods
pop
push
outsl
sbb
mov
bound
xor
pop
faddl
add
xor
mov
mov
mov
aam
cmpsl
fadd
and
dec
and
addr16
adc
bnd
jne
xor
jg
addr16
cli
adc
out
xor
jne
js
xor
mov
pop
icebp
adc
or
mov
jno
movsb
mov
dec
addr16
add
lahf
xor
jecxz
lea
fisubs
or
in
fildll
iret
lea
cltd
sbb
cmpsl
adc
add
test
mov
mov
and
dec
adc
sbb
dec
ret
fsubs
cmpsb
std
cmc
push
jecxz
xor
testb
xrstor
push
inc
mov
inc
cmpsb
inc
mov
iret
mov
loop
push
dec
pusha
sbb
sti
sub
scas
pop
jnp
repnz
in
dec
xchg
int3
dec
xchg
les
mov
pop
push
inc
loope
mov
or
out
push
sub
mov
jge
test
mov
inc
push
add
xor
jnp
daa
cs
inc
mov
mov
pop
fnsave
mov
dec
popa
sub
and
hlt
xchg
xchg
ja
adc
sbb
cli
sbb
sahf
inc
addl
pop
mov
pop
rcrb
sbb
push
dec
inc
loope
outsb
stos
lods
sbbb
add
cmp
mov
ret
rcrb
enter
je
or
lods
pop
xchg
ja
and
inc
sar
xor
xor
xchg
fs
sub
pop
mov
mov
adc
xchg
or
mov
test
sbbl
dec
mov
stos
inc
cmpsl
sarl
inc
sub
loop
sti
xchg
js
dec
and
frstor
push
mov
pop
fistl
adc
sbb
test
mov
int
mov
or
inc
fdivs
cs
jbe
arpl
push
xchg
xchg
adc
rolb
mov
inc
push
and
inc
pop
test
add
rclb
cmc
mov
fildl
xor
push
xchg
inc
addb
jo
inc
rcrl
aam
push
pop
or
fwait
push
fdivs
and
divl
fdivs
dec
and
loope
movb
arpl
ret
and
fildll
stc
or
pop
int3
add
arpl
pop
shll
xor
out
fsubrl
push
addl
xor
out
scas
xor
les
orb
sub
inc
test
jbe
jnp
pop
cmp
addl
pop
or
cs
push
sub
daa
dec
out
cmpb
mov
jl
mov
mov
in
sbb
mov
loope
sbb
shrl
mov
jg
inc
aad
shlb
pop
lret
pop
roll
stc
add
movsl
dec
inc
mov
xchg
push
adc
ret
test
rcll
int
mov
push
push
xchg
or
cltd
and
mov
hlt
out
pop
push
push
mov
and
dec
fistl
lahf
int
adc
and
ljmp
lea
pusha
scas
jnp
cmp
pushf
pusha
mov
adc
mov
es
in
fimuls
out
cli
insl
push
lods
xchg
int
cs
sbb
pop
out
mov
in
out
mov
mov
sbb
andl
ss
adc
inc
mov
pop
add
dec
ss
xchg
mov
sub
cmp
jp
pop
mov
mov
dec
dec
sbb
sub
rorl
dec
inc
bound
add
ds
add
xchg
in
rorb
imul
fcmovnbe
add
push
arpl
mov
pop
rorb
mov
add
sarl
pop
nop
xor
xor
loop
mov
cmp
insl
lret
clc
xchg
lds
lock
stc
test
aas
inc
pop
fnstcw
and
mov
add
sub
std
sub
in
mov
sarb
jae
dec
jge
ds
jle
add
sub
xor
add
das
addb
sti
sub
and
add
inc
mov
push
mov
pop
xchg
inc
fwait
sarl
push
inc
popa
ja
and
fcoms
aas
push
rorb
fstl
ds
dec
mov
aad
or
cmpsl
lcall
add
xchg
rol
ficoms
test
push
loop
popa
jne
xchg
fldt
inc
leave
iret
icebp
or
pop
and
xchg
xchg
push
testl
xor
lds
pop
adc
inc
arpl
lds
push
arpl
les
cmpl
dec
lods
addr16
mov
je
hlt
call
comiss
jbe
inc
lods
jg
arpl
es
push
push
push
xor
dec
jne
add
pop
pop
mov
mov
movb
fsubl
dec
mov
mov
daa
dec
inc
inc
cltd
popf
outsl
dec
jbe
fimull
and
nop
mov
mov
pop
push
mov
lock
xor
pop
mov
js
sub
iret
inc
enter
cmp
push
lret
mov
dec
test
leave
and
pop
test
mov
lea
les
aad
and
push
push
pushl
popf
jmp
inc
and
pop
jmp
inc
xor
aas
or
bound
cs
clc
add
std
inc
dec
sub
in
and
hlt
fsubrl
cmpsl
jnp
lods
push
or
dec
add
ds
ds
push
dec
addr16
out
fs
or
int
movsb
std
adc
and
jne
sahf
push
mov
xor
xchg
xor
icebp
rcl
call
in
ret
sub
pop
in
jae
push
mov
lds
sbb
std
icebp
sbb
xchg
mov
popf
cs
test
adc
xchg
gs
fwait
popa
dec
add
xchg
outsl
add
add
fidivrs
and
add
inc
jo
lds
jne
pop
ret
cli
push
xor
or
pop
push
int3
push
lret
js
push
dec
push
push
jp
adc
jnp
push
pop
enter
push
pop
and
mov
shrl
test
add
mov
mov
sbbb
push
jae
popl
lret
jnp
add
addr16
push
mov
cmp
push
dec
sub
insl
popa
test
jecxz
jne
rcrl
dec
loopne
and
popa
inc
sarb
sbb
mov
push
push
mov
daa
lock
nop
std
out
sub
xor
dec
xchg
lret
adc
imul
xchg
sub
jl
pop
bound
mov
and
in
leave
pop
scas
int3
aad
push
push
inc
int
aam
xor
dec
inc
mov
jge
loopne
dec
hlt
lock
idivb
cmpsb
xchg
mov
call
test
inc
enter
data16
fsub
cmp
frstor
loop
loopne
pop
jl
pushl
sbb
xchg
inc
movsl
mov
jmp
bound
fwait
mov
hlt
imul
pop
inc
pop
push
xor
enter
xchg
mov
and
stos
jne
rorb
imul
rclb
iret
dec
inc
add
jne
inc
inc
adc
inc
lahf
mov
xor
add
test
cltd
out
fdivrl
push
mov
std
or
jnp
lahf
xor
jg
inc
sub
push
add
cmp
inc
and
fmuls
ja
mov
jge
add
fwait
movsl
aad
mov
subl
testl
sbb
jle
sub
xchg
dec
imul
sub
cli
insl
pop
and
test
in
jl
cltd
fisttpl
sbb
dec
inc
inc
aam
cmpsb
rcrb
mov
pop
add
mov
cmp
jne
test
arpl
adc
pop
rcrb
sahf
push
adc
imul
imul
loope
jo
xchg
cmpsb
mov
shll
sub
dec
cld
and
dec
jg
fs
sbb
ja
in
int3
fs
jge
pop
clc
pop
sar
int
fwait
push
sbb
mov
aad
jmp
fists
imul
xorl
add
mov
push
movsl
dec
fmul
jg
cmc
cmc
lock
je
int3
pop
outsb
pusha
test
jg
std
lret
mov
inc
scas
cli
std
loope,pn
test
mov
scas
xchg
mov
push
mov
hlt
xor
push
fdivrs
add
mov
shr
jae
cmp
je
stos
mov
add
fcmovnu
xchg
pop
cmp
pushf
js
and
jae
sub
negb
aad
sub
stos
lea
pop
mov
in
mov
repnz
xor
adc
push
cmp
adc
sub
mov
pop
pop
jl
or
fcmovnu
jno
jns
out
sub
ja
call
ja
lret
or
shrl
mov
sbb
rcl
jl
icebp
sahf
lret
out
sti
sbb
pop
pop
mov
fildll
cmp
rcr
das
push
cld
nop
stos
sub
scas
arpl
lret
cltd
leave
push
sbb
sub
fdivl
jg
adc
std
xchg
inc
ret
test
mov
xchg
outsl
cmc
in
insl
mov
stos
push
gs
xchg
add
lds
xchg
fisttps
cmp
pop
jg
xorl
bound
shlb
iret
or
in
mov
dec
idivb
add
es
adc
repnz
or
aam
inc
push
mov
pusha
or
loop
and
or
cmc
sahf
stc
xor
mov
lret
or
or
mov
pop
enter
pop
lock
and
mov
rcll
push
xchg
popa
fdivs
jle
jp
add
mov
mov
ror
fnstenv
scas
scas
lret
jno
aas
mov
subb
xchg
ret
orl
cmp
sbb
lcall
cmp
mov
ror
fistpll
es
bound
pop
push
les
movsl
loope
icebp
inc
movb
prefetch
enter
xchg
orb
push
lods
mov
andb
push
hlt
popa
or
test
ss
push
lret
scas
aas
jne
xlat
xor
orl
xchg
push
repz
cmpl
inc
fidivl
xlat
cld
imul
inc
add
fsubrs
ds
and
mov
inc
pop
pop
fsubrl
js
xor
lods
das
inc
es
clc
nop
addl
inc
lret
pop
lea
sbb
xchg
lcall
add
fdivr
adc
push
mov
insb
push
orb
push
subl
jle
movb
mov
dec
inc
subl
cmp
dec
not
dec
inc
shl
mov
dec
push
pop
inc
roll
xor
call
test
add
nop
lret
and
ja
fdivr
xchg
xchg
data16
sar
lods
cmp
vpsraw
incl
pusha
add
push
push
cmp
sub
xor
xchg
outsb
dec
cmp
sub
imul
xchg
mov
sub
xchg
dec
mov
das
iret
cwtl
and
and
shlb
rorl
jns
icebp
pop
stos
fmull
es
sbb
cwtl
test
cmp
inc
pop
dec
adc
push
jg
xlat
xor
lods
rol
popa
aam
outsb
icebp
jb
aad
push
hlt
sub
arpl
dec
test
push
or
ljmp
call
lret
add
jbe
dec
mov
lock
es
sti
lret
mov
and
imul
sub
or
and
push
adc
push
mov
das
fs
mov
sub
push
nop
pusha
test
pop
lret
and
imul
mov
sbb
jge
mov
lds
inc
fnstenv
cmpsl
jg
inc
inc
push
inc
ds
mov
stos
adc
icebp
lock
xor
pop
flds
xchg
mov
rorl
leave
add
enter
add
scas
inc
jg
sbb
add
jno
pop
sbbb
call
mov
repz
jne
mov
cmp
stc
xchg
sbb
jmp
xor
cmp
or
jecxz
xlat
adc
and
pusha
sub
xchg
pop
push
or
xor
dec
fnstenv
mov
cmc
test
les
sub
fdivrl
xor
mov
movl
jae
mov
inc
lock
dec
mov
dec
hlt
sub
clc
jle
xor
test
cmpsl
lcall
aad
add
push
pop
jnp
lahf
mov
aad
ret
add
mov
push
mov
mov
cli
cmp
mov
sbb
mov
and
stc
leave
pusha
scas
ja
call
not
cmp
inc
push
ss
xchg
push
ds
out
dec
aad
xor
mov
test
jg
mov
dec
test
jg
aam
add
insl
mov
sti
repnz
int
aad
mov
dec
jns
push
mov
push
and
push
xchg
jg
xor
outsb
jge
mov
sbb
int3
cmc
mov
xchg
dec
stos
cmp
iret
add
add
pop
lret
and
or
and
test
sub
xor
pop
mov
push
cmc
in
enter
je
lods
mov
pop
mov
jle
les
jae
fs
gs
pop
cmp
in
movsb
cli
push
dec
cmpsl
jnp
mov
icebp
pop
push
inc
push
fiadds
loopne
inc
lds
andb
jl
adc
push
orl
inc
pop
fmuls
mov
into
add
inc
dec
mov
pusha
mov
aad
mov
mov
dec
andl
or
mov
lret
xor
push
add
notl
push
inc
sub
mov
and
jle
sub
jg
test
les
and
fs
sbbb
jo
out
insl
jne
cmc
addl
xchg
enter
aam
adc
cmp
es
jne
imul
sbb
xor
pop
pop
sti
int
inc
ja
mov
push
jp
loope
leave
pop
adc
pusha
push
cli
sub
icebp
adc
lock
or
or
test
fucom
inc
shlb
xchg
inc
cmp
pop
and
ret
or
testb
inc
les
call
sbb
inc
adc
xlat
inc
test
push
movsb
pop
ret
sub
cmpl
dec
movl
int3
push
xlat
push
jge
sub
and
test
mov
sub
movb
dec
fmull
pop
dec
xchg
jbe
dec
inc
mov
cmp
push
mov
inc
mov
dec
add
pop
repnz
xchg
push
lods
out
xor
enter
lds
sub
inc
call
jl
pop
mov
js
shrl
mov
mov
xor
inc
test
mov
leave
out
in
fildl
movsl
pop
inc
push
push
pop
and
test
pop
add
dec
pop
push
xchg
and
lahf
adc
cs
xor
popa
mov
xor
jge
or
sub
mov
sahf
shl
add
push
rorl
mov
cmp
xchg
mov
or
fldl
cmpsl
addl
std
adc
push
lock
jge
es
cmp
loope
cs
fsubr
push
fadd
pop
addl
addl
xor
sub
test
xor
pop
lea
pop
dec
mov
loop
xor
jae
add
das
fcoml
mov
std
bound
and
pop
movl
push
push
push
lahf
ja
rcrb
inc
push
fiaddl
xchg
pop
repz
mov
sub
push
xor
inc
jb
and
adc
insl
adc
movsl
xchg
popa
cmp
les
mov
jo
inc
inc
push
icebp
sbb
jle
loopne
popa
sub
add
lds
mov
inc
inc
stos
jmp
hlt
call
fiaddl
sub
jae
sub
add
add
inc
cmp
sub
cmpsb
adc
mov
pop
leave
subl
and
cmp
inc
xor
hlt
jmp
into
add
mov
ret
aad
pusha
popa
xchg
movsl
cmpsb
push
test
add
pusha
cli
xchg
std
cs
loop
movsl
mov
or
ret
mov
sbb
or
add
push
ret
repnz
into
inc
sbb
clc
push
mov
nop
and
ret
push
and
rcll
test
pop
test
lea
loope
inc
sahf
push
adc
rclb
dec
mov
sub
adc
xor
dec
inc
div
push
or
push
jecxz
lret
jmp
nop
jno
inc
js
test
jg
ror
ret
aam
lds
xchg
xchg
xchg
shrl
and
js
push
sub
inc
mov
pop
sarb
or
and
xlat
rolb
push
dec
dec
dec
ret
mov
scas
arpl
orl
mov
dec
xchg
dec
sbbb
cli
and
push
cltd
cmpsl
dec
xchg
loop
insb
push
sarb
mov
rcl
clc
mov
inc
or
sub
pop
push
add
lea
or
dec
loope
jns
jnp
out
cmpsb
jno
mov
inc
clc
shrb
imul
ds
or
in
or
imul
add
movsl
mov
das
or
imul
and
pushf
movsb
and
mov
xlat
cmc
jne
clc
loope
rcl
fidivrl
cmc
lock
icebp
cmp
nop
inc
pop
jno
jae
pop
movsb
pop
sti
jnp
dec
jl
adc
dec
ja
es
frstor
mov
pusha
cmc
fnstsw
xchg
jae
jbe
loopne
mov
cwtl
mov
sub
push
jo
mov
arpl
add
dec
mov
stc
jb
js
std
rorl
ret
xchg
test
les
pop
sbb
into
inc
in
sbb
push
popf
lret
mov
jb
sbb
pushf
sbb
imul
rclb
mov
stos
inc
mov
shrl
jl
cld
js
xchg
push
jb
push
ja
in
jp
sbb
push
cmc
lds
xchg
out
and
dec
movsb
mov
insl
mov
and
mov
inc
mov
imul
cwtl
jle
mov
mov
pop
rol
or
in
push
sub
sti
lods
jbe
out
add
inc
popf
push
adc
xor
and
jg
xchg
cli
mov
xchg
fsubl
push
inc
and
arpl
fisubrs
leave
push
fs
hlt
stos
dec
lock
fucomi
sub
mov
push
cs
push
idivl
mov
add
leave
and
xor
test
adc
and
test
push
movsb
insb
sub
adc
icebp
out
xor
bound
sub
aaa
jbe
aam
lret
popa
mov
loop
add
fnstsw
and
imul
cmp
and
and
mov
pushf
in
mov
cmovo
sub
ja
push
xchg
bound
and
sbb
enter
divb
lods
in
outsl
jle
lods
dec
push
out
push
stos
outsb
adc
inc
hlt
mov
ja
add
jns
mov
bound
std
ljmp
sbb
dec
push
adc
push
icebp
dec
punpcklwd
inc
add
mov
std
xchg
dec
cmp
dec
nop
pop
pop
inc
dec
std
ret
xchg
add
leave
rorl
cltd
imul
or
cmpsb
mov
gs
repnz
imul
mov
aam
dec
test
rclb
int
cmpsb
test
xchg
cmc
mov
and
sbb
nop
stos
or
jnp
push
mov
ds
and
out
pop
das
iret
aam
cs
jmp
or
das
and
sub
xor
sbb
xchg
mov
push
mov
int
adc
test
and
mov
mov
inc
aam
fstl
or
jp
jmp
jnp
and
push
pusha
hlt
int3
pop
mov
test
pop
xchg
sub
andl
pop
push
cmc
ret
int
dec
xchg
push
mov
dec
and
repz
mov
cmpsb
jp
mov
mov
sub
xor
adc
pop
cmp
test
mov
mov
adc
lods
test
add
andb
push
dec
iret
movsb
lea
add
cmp
inc
and
sbb
xchg
sub
cltd
adc
dec
mov
test
mov
mov
or
and
test
lock
outsl
ret
fisubs
pop
mov
test
cmp
paddw
int3
les
jns
arpl
stc
stos
and
mov
out
mov
aam
push
adcb
or
clc
xchg
or
adc
orl
pop
in
ds
and
add
ljmp
nop
mov
or
lahf
or
movsl
jge
iret
inc
mov
dec
shrb
popf
cmpsl
outsl
fstpt
in
xor
cld
into
fsub
ds
sbb
imul
stc
insl
and
lds
xor
cli
xor
nop
shlb
push
push
inc
pop
mov
mov
push
imul
aam
gs
and
stos
loope
mov
mov
inc
adc
dec
and
or
sub
push
popa
movsb
mov
push
movsl
pop
lcall
xchg
scas
bnd
mov
mov
inc
lds
jle
orl
adc
pop
add
sub
int
inc
xlat
inc
incb
scas
out
test
cwtl
out
mov
jg
fwait
push
lret
aad
push
jp
add
and
pop
push
push
adc
in
leave
sub
loop
cmc
pushf
ficompl
fs
in
push
mov
hlt
mov
std
cmpsl
mov
ja
mov
sbb
stos
jecxz
shl
push
pop
mov
xchg
out
xchg
or
leave
mov
cmp
pop
icebp
inc
hlt
add
mov
lds
fimull
insb
mov
sub
sub
sbb
cs
and
inc
jecxz
div
jae
pop
add
sbb
cmpsb
push
lds
hlt
loop
or
mov
sub
fwait
jae
sbb
sub
dec
sub
lock
xchg
lea
xchg
mov
shrl
mov
lret
cmp
sub
pop
mov
cs
rorb
push
push
stos
int3
adc
orb
adc
cmp
inc
push
outsb
and
fldenv
jae
hlt
add
js
mov
dec
jb
fisubs
aas
cs
xchg
ret
in
gs
into
add
xor
daa
xchg
inc
enter
dec
sarl
jb
ds
jmp
dec
fcmovnu
add
ret
andb
xchg
les
inc
test
sub
je
adc
out
adc
sahf
push
xchg
daa
pop
inc
out
fs
lock
or
loop
sub
jnp
jp
sbbl
test
es
or
shrl
inc
add
sbbl
lcall
add
aam
inc
dec
dec
icebp
dec
ja
aas
mov
inc
fnstsw
andl
movsb
mov
mov
xorl
inc
inc
test
xor
in
jg
ret
cmp
sub
push
sti
push
pop
imul
bound
push
out
mov
jmp
jne
xchg
cmp
xor
cld
mov
test
jo
push
lahf
add
cmp
sbb
inc
sub
shll
bound
jnp
clc
jle
push
fisubrl
mov
mov
mov
aas
lret
cmpsl
inc
iret
xor
cli
jo
inc
fs
js
add
push
pop
mov
sar
xchg
pop
int
les
dec
dec
ja
inc
cs
and
je
sub
mov
cmp
insb
sub
dec
arpl
fsubr
xorb
and
ds
jg
pop
sbb
cwtl
lahf
scas
sbb
fwait
inc
std
and
lock
or
enter
fcmovu
in
aad
in
xchg
or
mov
jne
imul
daa
add
iret
xchg
or
xchg
inc
arpl
jnp
sbb
inc
and
ds
push
rorl
cmp
test
ret
mov
cmp
loope
jo
inc
mov
movsb
icebp
inc
mov
test
adc
out
mov
fwait
iret
push
push
add
or
push
sub
jae
adc
add
les
stc
fs
pop
dec
adc
add
dec
out
pop
inc
outsl
push
add
mov
icebp
jge
and
jbe
cmp
pop
pop
dec
movsb
inc
dec
push
jle
dec
ret
stc
lret
pop
sbb
sahf
inc
incb
movsl
mov
push
dec
xor
and
das
or
imul
mov
mov
inc
sarb
and
dec
jbe
ss
adc
mov
jl
mov
mov
sti
inc
mov
ljmp
dec
out
sub
xchg
xor
int
inc
mov
or
jge
dec
cld
or
mov
push
inc
mov
ret
cmpl
push
mov
xchg
scas
xchg
inc
sarb
sbb
mov
inc
mov
jbe
cmpsb
ficomps
xchg
pop
mov
push
dec
inc
or
add
and
sti
cmpb
daa
mov
push
push
sbb
out
xor
push
mov
add
aad
std
jne
mov
xchg
push
sarb
nop
mov
jne
in
mov
mov
clc
hlt
dec
jmp
stc
xchg
inc
jno
cli
cmpsb
ds
aaa
leave
cmc
jg
jno,pt
sub
stos
ret
cmc
stos
repz
push
jge
mov
add
mov
dec
inc
insl
inc
incb
pop
mov
cld
iret
ja
push
or
mov
test
add
xchg
push
and
jmp
or
jo,pt
in
cli
pop
pop
inc
dec
jns
push
fnsave
iret
mov
dec
stos
arpl
lds
cmp
cmp
inc
cmp
pop
dec
out
mov
cmp
and
cmp
cs
fwait
movsb
and
add
cmp
pop
xor
push
mov
push
dec
movntps
mov
je
mov
adc
push
insl
or
in
test
and
and
dec
daa
dec
pop
inc
inc
stos
jo
or
cmp
insb
cmp
fnstsw
mov
mov
jae
repz
outsl
push
leave
jnp
jle
rcll
inc
xor
xor
arpl
dec
sub
or
lcall
leave
inc
push
adc
push
call
and
fmuls
aas
mull
pop
sarl
outsb
push
aas
sub
sub
mov
mov
add
divb
gs
or
stos
mov
xor
jno,pn
arpl
cltd
leave
sub
lret
fwait
leave
mov
xor
aam
jnp
sbb
jle
and
push
jg
hlt
mov
out
dec
adc
test
mov
mul
test
inc
and
jo
les
sub
in
pop
lods
add
cmp
cmpsb
inc
jbe
aas
or
dec
call
mov
cmp
mov
dec
dec
lds
pop
jp
xor
mov
pop
mov
inc
sub
push
cwtl
hlt
icebp
stos
jno,pt
mov
adc
adc
xchg
push
pop
mov
test
add
lahf
dec
fwait
jbe
push
hlt
push
leave
fnstsw
dec
gs
adc
and
rorb
mov
dec
mov
inc
cmpb
cmp
ljmp
aas
mov
inc
sub
mov
or
std
push
cmp
lcall
aas
push
mov
xor
shll
jle
stos
pop
pop
pop
push
les
xchg
hlt
ljmp
jp
addr16
mov
fldl
cmp
pop
and
dec
add
jb
aaa
and
loope
push
jg
dec
ja
adc
push
add
stos
dec
aas
in
pop
imul
test
inc
and
sub
std
aad
sti
rcll
adc
and
scas
pop
out
stos
xor
add
sbb
inc
jne
xor
in
lret
int
lods
xchg
add
mov
test
subl
mov
stos
popf
mov
push
and
sub
nop
or
push
dec
out
int3
inc
movl
pop
dec
out
js
mov
pusha
imul
adc
rcll
jb
cmp
lods
jecxz
sub
mov
stc
push
mov
sub
pushf
or
cmp
cmpsl
daa
jns
inc
mov
jbe
pop
stos
loope
test
pusha
les
inc
in
movsb
out
mov
call
pop
push
stos
andl
and
and
jnp
and
sub
sarl
pop
loope
aam
pop
stc
xor
loop
out
fsub
push
test
dec
push
pop
shl
leave
notb
aas
insl
dec
sbb
cmp
mov
cmc
mov
sub
cmp
push
enter
or
add
push
daa
movsb
cltd
js
sub
pop
ds
mov
pop
shlb
push
pop
repnz
adc
gs
mov
mov
cld
sbb
xor
das
add
xchg
out
push
dec
mov
mov
and
and
into
push
mov
adc
nop
sub
neg
aaa
lcall
ret
mov
movsb
std
daa
pop
mov
pop
and
les
sti
or
imull
xor
dec
nop
add
mov
inc
dec
leave
out
jg
fsubl
adc
std
rcr
xchg
int3
insl
dec
sub
push
int
and
loop
jle
inc
fsubrl
lret
mov
inc
jae
js
out
push
mov
and
dec
add
stos
lods
and
jge
and
xchg
shrl
jg
xchg
cs
inc
mov
jle
rorl
scas
loop
lds
inc
xchg
outsb
adc
fwait
xor
es
cmp
pop
push
cmpsl
dec
adc
push
outsl
inc
and
into
lcall
scas
ret
stos
push
gs
mov
xchg
aam
imul
ds
xor
xor
loopne
inc
jne
ljmp
or
cmp
cmp
push
and
pop
mov
push
insl
scas
test
pop
jne
roll
dec
cmpb
addr16
xchg
call
sbb
mov
stc
pop
rcr
outsb
push
xor
lds
cmp
xor
or
out
inc
mov
or
dec
push
dec
ljmp
leave
push
hlt
cmp
sub
or
xor
inc
cmpsb
sbb
fidivs
movsb
xchg
sub
clc
rorb
jno
bnd
in
int
imul
sahf
xor
fistl
xor
imulb
mov
fisubrl
add
cmc
push
inc
mov
or
stos
jne
into
jge
lock
fsubl
mov
adc
fildl
shl
push
cwtl
push
or
mov
in
jp
adcl
push
or
xchg
stc
rol
ss
leave
jne
cmp
and
jp
std
aam
rcl
xchg
dec
jp
stos
ret
int3
mov
xlat
gs
aas
pop
dec
jne
nop
add
scas
dec
iret
push
inc
cltd
jnp
insl
sbb
dec
mov
xor
or
adc
stc
cli
sub
roll
out
xchg
sub
test
sub
aaa
dec
lods
gs
outsl
cmc
cmp
sub
leave
sub
dec
push
push
std
jl
inc
mov
mov
mov
aas
mov
sarb
es
in
dec
inc
cmp
ss
cmpsb
insl
pop
in
aas
mov
push
mov
iret
jge
and
stos
xor
sub
push
into
xchg
xor
jbe
mov
lods
cmp
jns
push
mov
mov
and
test
js
mov
add
adc
sbbb
and
mov
xor
pop
hlt
jmp
ljmp
xchg
jns
pushf
mov
scas
or
test
hlt
xlat
push
aam
leave
loopne
adcl
sub
xor
push
mov
jle
mov
dec
mov
andb
lods
push
mov
or
jecxz
les
aam
xchg
enter
rcll
icebp
andb
mov
call
insb
cmp
faddp
jge
fdivrs
int
test
sbb
pop
sbb
jl
iret
daa
leave
dec
inc
hlt
and
xchg
popa
std
mov
add
sub
roll
insb
cmp
and
leave
andb
inc
roll
pusha
lret
mov
jle
aam
cmc
push
mov
adc
pushf
lods
ja
bound
lds
andb
push
ljmp
lods
aas
xchg
in
inc
roll
mov
cmp
ret
fdivrs
push
int3
xor
inc
pop
mov
push
pop
shl
lds
or
cltd
push
cmp
jl
enter
sbb
lret
push
cwtl
push
in
sub
in
sub
aad
jmp
ret
add
jp
inc
inc
mov
lahf
in
xchg
ret
roll
xchg
jne
mov
cmpl
inc
lds
repnz
popa
rorb
movsl
mov
mov
sub
daa
dec
or
and
or
sub
in
hlt
and
dec
cmp
inc
int3
cmp
push
sub
les
fisttpl
iret
and
xchg
jge
insl
dec
sub
shll
and
or
pop
pop
jl
rorb
scas
xchg
sbb
inc
cmp
add
fisttps
enter
leavew
or
pop
lahf
aam
je
sarl
mov
jbe
fistps
rorb
int3
in
xlat
fadds
jg
loope
movb
arpl
add
imul
std
jae
es
popa
in
jmp
ror
test
loope
jg
loopne
ss
jle
iret
jns
xor
pop
imul
ret
inc
shl
jns
dec
adc
push
pushl
movsl
jmp
mov
xor
xor
enter
fbstp
movsb
and
repz
hlt
and
xchg
inc
divb
push
nop
lret
inc
and
bound
aad
push
shr
xor
enter
adcb
jp
subl
mov
push
test
xlat
popa
push
mov
adc
mov
push
ds
mov
fadd
movsb
rcrl
mov
push
cmp
lds
scas
jne
cmpl
je
enter
movsl
dec
subl
in
test
push
ss
and
xor
dec
test
imul
cmpsl
inc
gs
popa
or
push
lahf
out
push
xchg
into
and
in
pop
scas
incb
mov
sub
test
inc
icebp
push
inc
mov
sub
mov
ret
mov
mov
adc
inc
inc
shlb
repz
iret
mov
inc
ret
xor
jae
xor
inc
and
push
inc
pop
hlt
imul
cmp
dec
stos
rcll
lcall
and
jne
inc
movsl
cmp
and
dec
inc
cmp
in
je
mov
aam
mov
mov
jno
jmp
mov
push
fcoml
loope
inc
sub
jle
add
xor
repz
movsb
shl
cli
out
cs
cmp
pusha
loop
jnp
dec
jg
inc
push
enter
jp
cmc
pop
stos
pop
loope
insl
and
cld
ja
pop
les
das
fsubl
pop
andl
jl
stos
fs
pop
pop
and
sub
aam
out
inc
adc
je
scas
cld
mov
inc
sar
out
addr16
or
enter
mov
cld
push
data16
jle
mov
push
enter
mov
adc
int
mov
jne
in
js
in
pop
push
and
out
sub
shr
inc
and
push
jno
xchg
sub
lahf
fwait
rcl
cmp
fimuls
gs
sub
sub
inc
mov
test
or
scas
std
andl
dec
daa
ret
movsb
lods
dec
add
test
sbb
xor
out
ret
jns
inc
mov
sahf
xor
rol
jns
xlat
mov
dec
jae
stos
cmp
test
std
popa
mov
jmp
mov
push
dec
rcrl
in
sbb
add
imul
jecxz
test
mov
mov
divl
vmovss
leave
pop
int3
cmc
imul
jns
and
adc
adc
lret
leave
jg
inc
jnp
lods
sub
popf
ja
outsl
xor
jnp
into
push
push
ds
add
scas
daa
push
arpl
ror
cmp
or
and
xor
imul
pushf
push
stos
popa
mov
faddl
cmp
or
jge
daa
sub
fbstp
sub
ret
imul
rorl
scas
sub
bound
xchg
lods
lods
lret
inc
in
lret
inc
inc
mov
add
dec
call
leave
nop
lds
jo
cmp
hlt
stos
shl
divb
jp
mov
lds
out
test
and
into
push
sub
xchg
fs
or
je
imul
push
and
inc
add
mov
xchg
push
std
push
pop
push
push
push
cmp
xor
cmpsl
adc
inc
and
jne
add
push
push
inc
rol
add
out
sbb
enter
and
xchg
add
sub
leave
adcb
jne
add
and
clc
pop
inc
jne
mov
cmc
mov
ret
les
adc
int3
std
push
xchg
xor
faddl
push
jb
shl
leave
imul
out
jle
movsb
rol
std
inc
mov
shrb
repz
cmp
inc
cmp
or
dec
adc
push
push
push
cmpsb
sub
shlb
hlt
out
inc
mov
cmpsb
hlt
dec
pop
cmp
or
lock
mov
lods
mov
inc
hlt
push
jg
sbb
lds
repz
mov
rcrl
cli
movsl
mov
mov
push
push
and
pop
sti
pop
jns
icebp
imul
jnp
data16
ret
loopne
pop
lds
push
xlat
mov
dec
dec
adc
inc
mov
add
and
xchg
mov
sub
gs
stos
leave
sub
scas
sbb
fists
and
push
push
xor
push
add
aas
ret
ret
dec
push
hlt
js
mov
push
cmp
dec
dec
xor
and
in
jle
movsb
imul
inc
sub
dec
mov
dec
mov
cmp
and
daa
dec
insb
push
jns,pn
inc
testb
xchg
pop
xlat
hlt
repz
lods
gs
fsubl
add
pushf
lret
inc
mov
pop
sub
insb
push
out
subl
icebp
xorl
push
call
or
rorb
add
mov
cmp
push
inc
pop
test
or
movsl
cld
cs
clc
add
mov
jnp
mov
or
stos
aam
sub
lcall
rorb
add
lcall
dec
xchg
lea
iret
inc
push
mov
test
and
mov
xchg
or
rol
cmp
pop
int3
sbb
pop
arpl
push
dec
push
in
repz
out
arpl
jo
xchg
jg
rep
sbb
add
xchg
cli
shlb
push
pop
je
push
popw
jnp
xor
sbb
xor
push
cmp
clc
sbb
cvtps2pd
movsb
pushf
sub
lret
add
shrb
inc
fnstsw
push
mov
gs
fsubs
cmp
inc
pop
xor
jo
or
push
out
mov
cld
jecxz
enter
mov
xchg
jg
rcll
jae
and
int
aad
es
lods
lret
out
daa
cltd
call
sub
test
vrsqrtps
xor
std
repz
inc
jmp
nop
sub
dec
hlt
push
adc
js
push
dec
loopne
cmpb
out
jne
cmp
mov
loop
add
mov
leave
popf
jnp
dec
mov
movsb
xchg
xchg
cmp
dec
xchg
xor
xchg
mov
ljmp
in
cmp
ret
cmpsl
ja
sbb
push
jae
mov
xor
xor
pop
jmp
sbb
mov
orl
mov
enter
test
inc
or
dec
cs
xor
xchg
cltd
lret
jmp
imul
jmp
arpl
pop
or
fwait
push
inc
pusha
inc
and
xchg
dec
scas
testb
inc
es
lea
mov
dec
mov
iret
xchg
test
scas
popf
stc
movsb
dec
sahf
mov
dec
ret
pop
dec
fwait
jae
inc
es
push
mov
jmp
fmull
cmpsb
jbe
movsl
mov
sub
mov
mov
frstor
push
lock
add
test
int3
mov
jne
jmp
scas
fstl
out
imul
cmpsl
pusha
dec
add
subl
jnp
inc
add
inc
jge
or
mov
scas
push
xor
dec
ljmp
inc
leave
dec
inc
adc
mov
or
fsub
push
inc
add
cli
shrl
lret
jge
push
lock
add
arpl
sbb
lcall
call
inc
mov
mov
xchg
inc
loope
or
sar
test
sbb
cs
pop
sahf
cmpb
adc
jnp
lds
jl
and
xor
or
test
sub
sahf
jecxz
orb
push
bound
xchg
shlb
lods
lret
sub
mov
lods
fcoms
pop
and
push
add
jnp
push
xlat
stos
test
fcmovb
aam
xor
sub
push
hlt
mov
stc
rcl
jb
cmpb
gs
xchg
scas
mov
imull
je
in
pop
xor
scas
aas
jg
repz
jge
jle
sbb
push
incb
cld
mov
das
cs
jecxz
adc
lock
and
push
push
fidivrs
sub
inc
jns
jne
loopne
fstpl
mov
mov
xor
fsin
cmp
bound
movsl
sbb
daa
add
jge,pn
lds
loope
inc
jnp
outsl
jne
daa
sub
es
pushf
mov
cmp
int
inc
cmp
or
shrl
sti
addr16
jae
pop
xor
jmp
jnp
hlt
sub
xor
icebp
mov
enter
movsl
aam
jl
gs
pop
xor
sti
popf
andb
repz
ljmp
pop
sbb
adc
cmpsb
in
mov
or
mov
add
fildll
loope
inc
ljmp
mov
rcll
out
dec
xor
inc
lds
jae
inc
adcl
mov
inc
jae
mov
xchg
test
fisubl
push
xor
sbb
dec
leave
add
add
add
or
and
cmpsl
or
mov
jnp
aad
dec
jl
jle
in
or
adc
cmpsl
mov
data16
mov
xlat
mov
call
movsl
and
sbb
sub
and
xchg
mov
xlat
pop
lods
in
inc
cmpsl
aad
es
cs
hlt
lods
inc
and
mov
add
sbb
mov
push
les
pop
jne
aas
dec
rcll
les
or
scas
fucomi
pop
andl
jge
mov
test
cmp
inc
jno
andb
out
movsb
bound
sub
out
jae
sub
push
cmp
lret
sahf
rcll
push
std
mov
sarb
dec
cs
clc
mov
jb
cmpsb
jle
ret
dec
and
inc
push
es
xor
lds
sti
pop
movsl
adc
insl
push
negb
hlt
push
xchg
cmp
inc
int3
adc
inc
pop
incb
jge
cltd
imul
push
jns
sub
push
push
jnp
cmp
in
mov
sub
das
adc
test
out
jae
cmp
jnp
jl
push
lret
jp
shll
xor
movsl
test
outsl
dec
dec
in
lret
and
mov
roll
test
fcmovbe
sbb
stc
sbb
sub
dec
test
inc
lods
hlt
stc
or
aam
dec
repz
test
inc
sbb
push
jl
sub
jge
leave
mov
dec
add
mov
shll
shll
pop
testb
dec
imul
or
xchg
mov
aas
lods
and
pop
ljmp
addr16
outsl
aam
loope
xor
jae
sub
jl
cmp
fistpll
sarb
and
sarl
sub
xlat
fsub
xchg
mov
mov
jbe
movsl
or
fmuls
outsl
shrb
jae
push
jle
push
push
hlt
iret
les
lea
aam
bound
push
jle
insb
inc
jno
hlt
mov
mov
xchg
test
orb
test
jae
xor
and
jne
adc
and
add
cltd
jp
sub
sbb
sahf
push
push
and
negb
stos
popf
aaa
arpl
jmp
notl
dec
sbb
push
pop
ds
mov
pop
in
icebp
inc
sub
addl
push
cmc
fisttpl
jecxz
sarl
andl
and
mov
ror
jle
mov
sub
pop
insl
push
dec
or
sbb
sub
pop
dec
add
test
movsb
jecxz
stos
cwtl
jl
fdivrs
and
inc
roll
daa
jl
out
sbb
test
int
cwtl
ret
cwtl
cmp
cli
int
or
cmpsl
fldl
mov
fcom
imul
adc
fldl
cmp
jmp
cmp
xor
mov
or
enter
je
inc
loop
enter
cwtl
or
jae
orb
hlt
shlb
in
jge
mov
mov
fsubl
stos
xor
xor
daa
inc
pusha
push
mov
enter
hlt
gs
sub
jns
add
ror
or
fidivrs
lods
in
adc
xorb
mov
loope
pop
gs
loopne
cmp
push
xor
inc
test
adc
scas
add
lds
dec
push
mov
xchg
mov
aas
dec
mov
aad
sub
stos
mov
mov
xor
ljmp
cmp
jo
or
push
push
lods
adc
dec
stos
push
bound
divb
xchg
and
or
sub
pop
rcr
pop
cmp
xchg
cld
aas
rorb
sbb
repz
fidivrs
aam
cmp
sub
cltd
sbb
push
pushf
scas
nop
or
lahf
add
loop
push
or
stos
je
mov
lret
hlt
insl
fcoml
cmp
mov
cltd
rorl
sub
arpl
mov
xchg
inc
dec
scas
loop
fnsave
mov
jl
testb
inc
aam
push
rorb
fmul
mov
sub
push
jne
dec
or
lods
or
leave
xchg
lahf
ret
cwtl
out
xor
addr16
push
cmpb
imul
xchg
mov
add
enter
aad
rclb
sbb
xor
insl
repnz
cmp
jp
mov
sub
jge
repz
fs
xor
push
lret
test
jecxz
xor
repz
bound
int3
xchg
in
push
rcll
data16
pop
pop
jp
cmp
lods
fdivs
stc
and
and
ret
clc
or
das
or
adc
loope
fsts
shr
or
jmp
mov
jl
xchg
jle
sub
mov
test
movsl
aaa
xor
mov
jp
or
dec
cmp
into
push
mov
rcrb
aam
outsl
push
jle
into
xlat
js
jbe
cs
jo
sbb
jne
jge
and
stc
xchg
scas
sub
shl
jo
mov
lea
cld
cmp
cmp
loopne
xor
adc
pop
pop
cmp
xlat
sub
pop
nop
out
add
fdivrs
sub
push
adc
mov
push
push
imul
or
cli
mov
leave
jmp
in
jmp
mov
xlat
sub
add
gs
mov
inc
test
dec
xchg
xchg
sbb
jecxz
scas
jnp
loopne
ljmp
xchg
xor
sbb
push
imul
mov
jae
xor
inc
add
aas
rcll
inc
sub
cld
push
int
rolb
jno
inc
push
add
jecxz
sub
cmpsb
mov
mov
cs
push
lea
xor
add
cmpsl
dec
leave
es
sbb
test
stos
pop
cs
adc
jle
inc
sub
out
inc
push
mov
and
jge
pop
movsb
aam
lahf
mov
enter
sub
mov
sub
and
cmp
outsl
iret
enter
outsb
sub
test
hlt
movsb
cli
sahf
in
es
mov
adc
cmp
addb
hlt
sub
roll
xor
shrb
std
repnz
and
inc
enter
xor
inc
hlt
jae
sub
and
lock
mov
mov
iret
xchg
and
and
xor
pop
sahf
pop
mov
fsubl
je
jge
cmp
cltd
aad
ds
inc
inc
mov
mov
and
pusha
sub
sub
lcall
dec
jecxz
ds
add
mov
jge
jnp
pusha
aam
loope
frstor
sbb
jne
test
in
cld
scas
push
push
jae
stos
inc
lret
push
in
add
dec
dec
test
int3
cmc
enter
mov
cmp
xor
jle
mov
and
stc
and
dec
leave
movsl
push
dec
nop
inc
cli
in
cli
bound
insb
pop
or
sub
add
or
pop
ja
push
push
hlt
jno
xchg
xchg
mov
sub
sti
mov
std
mov
xor
jne
divl
jmp
add
mov
outsl
aam
sub
adc
subb
mov
les
ljmp
fabs
lods
inc
aam
addl
pop
sbb
pushf
inc
or
aad
or
call
dec
popa
sub
ljmp
call
inc
mov
dec
xchg
add
xorb
imul
sbb
dec
mov
filds
rcr
mov
ss
jnp
or
imul
fbld
jecxz
jbe
jmp
push
movsl
test
pop
shll
push
lahf
ror
sub
dec
inc
mov
enter
test
cwtl
incb
sub
not
push
in
push
orl
jge
sub
jle
cltd
sub
pop
frstor
pushf
xchg
sub
fldcw
test
mov
push
push
imul
test
iret
stos
add
pop
xor
outsl
sbb
adc
aam
call
push
sub
push
push
mov
jle
in
pop
ret
es
and
mov
adc
jns
xor
rcll
xor
icebp
add
jne
push
lahf
jp
adc
jmp
mov
dec
dec
cltd
adc
sub
lret
mov
test
add
inc
mov
ja
mov
cmpsb
and
out
aam
cmp
add
and
mov
lret
or
cmpsb
aad
movsb
hlt
inc
jge
push
mov
aam
and
bound
cmp
xchg
out
jnp
lds
lock
pop
aaa
iret
pushf
push
inc
js
mov
rorl
leave
push
js
inc
rol
scas
adc
insb
lret
mov
mov
stos
loope
aam
sar
cmp
pop
dec
inc
jle
ret
mov
cltd
cmp
enter
movsb
sub
sahf
loopne
inc
loope
dec
mov
cmp
mov
sub
sub
daa
int
xchg
cmp
and
and
dec
and
ret
lods
loop
or
mov
pop
pop
pop
sub
loop
dec
aas
cwtl
push
int3
rclb
stos
stc
pop
xchg
jl
data16
pusha
shl
or
bound
jg
push
jecxz
jae
aas
pop
cmp
mov
push
dec
ja
push
shr
jbe
ret
and
aad
mov
mov
loop
ret
iret
mov
hlt
sahf
cmpl
adc
xchg
nop
insl
or
lds
mov
es
adc
push
add
insb
dec
dec
jg
push
dec
mov
add
xlat
stos
mov
in
xor
xchg
push
notb
mov
lods
pop
mov
dec
fimull
cmp
mov
jns
push
push
nop
xchg
inc
mov
or
lods
jno
sub
call
mov
dec
out
inc
scas
vaddsubps
jo
outsb
je
lahf
in
jnp
lods
sbb
mov
lock
pop
jge
iret
mov
es
daa
lds
aaa
dec
cmp
addr16
loop
pop
jge
mov
cmp
aad
adc
jnp
in
imul
ret
mov
je
or
mov
inc
dec
test
out
std
dec
nopl
aas
push
gs
mov
das
inc
inc
cmp
nop
add
test
or
or
add
xor
popf
aam
fidivrl
rcrl
or
loopne
dec
pop
pop
inc
adc
xor
imul
jns
sbb
lds
xchg
jl
pop
dec
push
enter
js
xchg
jle
gs
cltd
and
hlt
pop
mov
rorl
loopne
and
inc
movb
fnsave
cmp
je
mov
cltd
fwait
es
push
mov
mov
aad
pop
lds
sub
jl
dec
and
push
aas
cmp
bound
xor
cmc
mov
fs
dec
enter
leave
and
ds
mov
in
adc
mov
dec
rorl
lds
rcr
popa
xchg
cltd
mov
mov
or
shrl
stos
leave
pop
push
mov
ret
jp
std
push
add
roll
and
jae
pop
mov
insl
mov
pop
les
hlt
arpl
or
sbb
insb
lret
xchg
mov
imul
rcll
xor
jmp
dec
aam
adc
adc
sbbb
xor
add
nop
push
jge
sbb
cwtl
xchg
shlb
repnz
push
rcr
js
cmp
in
mov
jo
xor
orl
sub
pusha
push
fcomp
push
mov
xchg
mov
xchg
jae
mov
fsub
adc
scas
aaa
xchg
fs
add
push
and
std
fcoml
outsb
sbb
inc
sahf
ja
insb
data16
pop
lea
cmpb
jb
leave
sbb
or
cmp
shl
fimuls
fadds
sub
xor
or
and
scas
mov
mov
loop
or
xchg
push
push
fmul
pusha
aas
inc
jl
cmpsb
sub
aam
cmpsl
dec
vpsrld
cmp
lcall
ds
or
fsubr
mov
ret
xchg
jg
lret
xor
das
leave
aam
leave
cmc
sub
cmpsb
xchg
push
mov
int
and
nop
test
iret
push
aaa
int
xchg
jmp
movsb
inc
pop
in
dec
inc
mov
jge
xchg
popa
out
lods
push
fdivrs
push
xor
popa
lods
add
pop
cmp
xchg
adc
in
push
cmp
test
adc
inc
fidivrl
aad
data16
push
pop
test
lret
jae
xor
jb
pop
mov
hlt
jae
out
int3
std
and
ljmp
pop
test
mov
sti
je
ljmp
loop
dec
in
in
mov
pop
mov
lret
fistpll
push
pop
jbe
add
imul
jecxz
or
xchg
inc
jp
mov
js
inc
ret
adc
add
jmp
sbb
cmp
int3
mov
pop
repnz
adc
cmpsl
xor
in
push
sbb
mov
out
mov
inc
pop
or
hlt
js
xor
push
mov
add
push
add
xor
sub
sarl
inc
and
in
inc
pop
dec
addb
and
or
xor
dec
rcll
orb
inc
and
xor
push
subl
jle
dec
lea
mov
and
popf
xchg
test
jne
dec
and
inc
hlt
add
pop
rcl
ret
or
dec
psraw
ds
mov
dec
lds
shrb
fstpl
lret
inc
inc
mov
jne
and
test
mov
add
inc
lea
in
push
outsb
xchg
xor
jge
pop
mov
cs
mov
xchg
and
push
sub
notl
add
movsl
adc
leave
cmp
mov
sbb
cmc
mov
sbb
rcll
sbb
fucomp
inc
mov
and
scas
jae
add
cmp
mov
xchg
xchg
sub
daa
sbb
out
sub
or
sbb
mov
mov
lret
mov
mov
inc
xchg
push
mov
or
subb
dec
jmp
fdivrl
loop
jge
ret
push
sbbb
mov
lret
sbb
mov
shrl
xchg
idiv
test
mov
jo
jge,pn
and
fdivl
fildl
rcrl
and
outsl
lret
mov
mov
cld
fdivrl
fisttpll
push
push
cs
push
dec
lods
sbb
insl
pop
pop
push
sarb
jno
jbe
mov
mov
das
mov
adc
cli
cld
cmp
xchg
mov
cmpsb
inc
es
mov
lahf
shrl
add
test
cmpsb
push
fmul
sarl
or
and
dec
push
sub
int
adc
dec
add
leave
call
stos
popa
lods
cs
hlt
inc
lahf
fsubr
and
incb
jno
js
psllw
dec
xor
pop
insl
mov
ror
cmp
dec
stos
ret
mov
xchg
insl
movb
or
lea
sbb
mov
aam
and
cwtl
xchg
push
mov
arpl
push
addr16
aad
mov
mov
inc
inc
test
or
pop
and
mov
inc
sarb
jne
cmp
fwait
popf
sarb
fcoml
mov
push
adc
and
bound
mov
jmp
and
jge
push
add
gs
pop
sub
mov
ds
cmpsl
cld
in
mov
or
fists
fwait
sar
aad
and
call
jnp
mov
hlt
loop
push
fdivrs
enter
push
ds
nop
jg
loopne
lahf
nop
dec
test
add
insl
test
ret
xchg
gs
cmc
push
and
dec
cmpsb
xchg
inc
jno
push
jae
mov
add
repz
adc
and
orb
mov
mov
mov
decl
in
push
xor
ds
icebp
rcll
xchg
cmpsb
cwtl
inc
add
sub
test
insl
and
test
in
pop
mov
inc
cs
jne
lds
je
or
movsb
push
shl
cmp
cwtl
push
jo
push
subl
dec
ds
pop
iret
testb
rorl
push
or
je
jno
sbb
nop
dec
ja
ret
test
add
inc
inc
xchg
xchg
push
push
lds
daa
xor
mov
inc
adc
mov
adc
cmp
fsubs
popf
or
push
push
rcr
jp
cmc
pop
jns
pusha
dec
jne
jl
mov
inc
jnp
xorw
add
jae
pop
jl
iret
or
pop
out
cmp
mov
sub
xor
or
loopne
out
in
xchg
mov
jecxz
cli
jmp
jl
and
leave
add
xchg
lods
push
scas
and
inc
or
lods
jne
xor
enter
jl
xor
cmp
cmc
hlt
mov
sbb
xor
call
cmp
jnp
sbb
stos
popa
sahf
sub
ret
xchg
movsb
or
jns
fbstp
push
sub
jno
jnp
jae
jge
decl
and
lock
ds
cmovs
dec
mov
and
and
in
lds
xchg
jnp
xor
scas
add
or
adc
mov
push
in
push
sbb
mov
and
xchg
adc
fstps
in
cwtl
inc
or
mov
jl
xchg
lret
testl
js
das
es
ret
or
nop
push
ret
ja
xor
sub
xchg
cmp
push
test
jge
test
ljmp
or
jo
and
ss
inc
mov
mov
decl
sub
je
ds
inc
orl
insl
hlt
leave
jne
and
pop
dec
lods
hlt
cmp
xchg
stos
pop
add
dec
lods
pop
dec
addr16
mov
das
inc
sarl
cli
les
loope
push
pusha
mov
add
ret
ret
loopne
lret
inc
int
sub
sahf
add
out
add
or
mov
push
inc
loop
pop
std
lods
sbb
or
jb
inc
sub
jne
sarl
adc
inc
sub
push
andb
flds
jno
jge
sbb
cmpsb
cld
shlb
mov
or
mov
inc
sahf
pushf
fisubs
cmovl
inc
inc
in
cmp
stos
jmp
pop
loopne
aam
pop
icebp
pusha
mov
out
jae
ret
test
out
mov
std
test
sub
arpl
cmc
xor
adc
popf
mov
sbb
jecxz
push
sub
bound
stos
aad
inc
rcrl
mov
mov
lret
cmpsb
cmp
jne
jo
test
rcl
movsb
dec
int3
hlt
jo
je
dec
fwait
pop
int3
inc
les
adc
xchg
shrb
jle
dec
stos
pop
jp
xchg
jmp
movsb
les
inc
cmp
xor
sub
inc
and
test
jns
dec
xlat
add
mov
or
pop
cltd
leave
sbb
push
mov
jle
dec
gs
jno
out
in
mov
push
and
dec
aaa
xor
stos
lods
adc
mov
pop
pop
adc
mov
push
enter
inc
and
add
lds
lret
mov
in
push
outsb
aaa
test
sub
cli
icebp
dec
xlat
sub
jge
inc
adc
push
lret
rclb
add
sbb
ss
call
les
test
test
sahf
repz
std
mov
push
pop
loop
xchg
cmc
jne
inc
ja
mov
orb
fiadds
xor
dec
movsl
je
sub
shll
add
pop
lcall
jne
and
iret
push
dec
leave
jnp
cmc
inc
add
jle
jbe
lea
testl
adc
sbb
enter
cmp
xorl
sahf
in
and
pop
jmp
test
pop
iret
sarl
xchg
mov
ficompl
xor
imul
xchg
cmpsb
test
fisubrl
jb
and
and
xor
mov
and
mov
mov
jb
test
jl
imul
dec
jecxz
push
cmovae
scas
std
test
and
aam
push
xor
lods
hlt
or
sub
xlat
fildl
in
jmp
lret
ja
leave
xorb
jno
repnz
rorb
add
xchg
lret
lcall
jbe
or
dec
add
sti
int
inc
aas
or
add
mov
jb
mov
int3
les
jbe
jle
clc
jp
enter
inc
scas
lahf
pop
xlat
sti
sub
inc
jp
and
decl
dec
lods
cs
pop
testb
out
andl
fmull
stc
lea
fsubp
leave
jne
or
lcall
push
test
call
or
xchg
test
repz
cmc
test
inc
sub
stos
jne
fistps
nop
lds
cs
mov
lds
xor
or
scas
jnp
cmpsl
inc
xor
jne
and
cld
shll
movsl
outsl
mov
mov
sbb
sub
lock
int3
cs
enter
stc
fisttps
aam
stos
pusha
xor
sbb
loope
mov
mov
inc
mov
hlt
rcr
ljmp
stc
pop
imul
inc
fcmovbe
jp
repnz
les
aam
jmp
fidivs
xchg
jns
add
adc
xchg
pop
push
enter
xchg
and
imul
cmp
scas
mov
inc
jns
sbb
dec
aam
fcmovne
jnp
inc
lock
inc
fistpl
out
test
mov
inc
fs
mov
arpl
lret
jle
mov
ljmp
inc
ljmp
and
or
gs
xor
jle
cmpsb
sub
dec
dec
jp
push
push
scas
insl
cmp
pop
add
inc
and
lea
add
call
push
xchg
cmpsl
fwait
or
loopne
insb
imul
int
xchg
fbstp
movsb
or
xor
shrl
aam
mov
es
outsl
stc
fmull
pusha
pop
leave
and
stos
mov
aaa
push
mov
dec
adc
adc
faddl
lods
mov
jge
xchg
mov
add
imul
jbe
xchg
sbb
hlt
fisttpl
aad
call
insl
fistps
scas
je
dec
mov
sbb
add
loopne
adcb
pop
adc
mov
ds
shlb
mov
add
sub
cmp
lahf
inc
dec
aad
cmpsl
fistps
lods
dec
push
fidivrl
out
out
xor
aam
mov
subl
inc
and
mov
shrl
loopne
push
cmp
pop
push
and
push
fsub
cmovns
loop
jo
and
add
insl
fstps
cmp
mov
aaa
push
jecxz
add
dec
xor
push
push
jp
pop
push
repz
fcoml
ss
push
sub
mov
push
clc
and
dec
xchg
mov
mov
pushf
pop
in
xchg
pop
std
mov
mov
sbb
inc
aas
cld
cmp
push
mov
inc
jge
movsb
jmp
in
add
mov
out
addb
inc
cmp
fwait
push
and
or
lahf
push
sti
mov
xchg
scas
fs
cmp
pop
add
cmpl
jo
dec
fisubs
push
add
aas
movsb
add
jge
ret
sub
rcll
mov
jae
ja
inc
in
test
mulb
cmp
and
cs
ja
insl
pop
jnp
dec
ja
std
shlb
xor
test
jne
mov
xor
push
adc
jnp
pop
push
cmpsb
or
rclb
es
enter
ds
cmc
cld
jmp
in
in
xor
dec
jne
or
lea
inc
inc
ss
imul
add
sbb
ficoms
movsl
cmp
cld
xlat
lea
nop
loope
push
mov
mov
mov
pop
out
aad
mov
cmp
mov
je
mov
hlt
imul
je
mov
push
stos
stos
enter
cmc
lock
add
enter
insl
dec
cmp
push
insl
dec
lcall
rol
or
jns
bswap
xchg
lds
repz
cld
mov
mov
push
adc
cld
push
mov
out
push
and
fistpll
iret
sub
xor
xor
iret
shr
sbb
sbb
sahf
mov
push
cmp
lret
loop
sub
fisubl
test
push
cmp
sub
arpl
cs
pop
sbb
adc
push
sbb
inc
push
sub
gs
in
les
inc
lret
pusha
xchg
push
hlt
lock
cld
and
mov
mov
pop
inc
std
jg
jge
and
xlat
inc
mov
xor
imul
jne
mov
xor
lret
lret
ja
sti
jmp
jge
test
sub
mov
pop
aad
adc
aaa
adc
pop
push
imul
dec
xor
cmc
mov
call
inc
push
data16
das
popa
sbb
and
sub
cmp
xor
lret
jno
insl
test
aam
cmp
and
fisubl
insl
bound
pop
xchg
enter
addb
aas
jb
and
add
xorb
scas
sbb
cwtl
dec
gs
jg
xor
movsl
int3
test
cs
shlb
test
xchg
nop
in
or
push
xorb
ds
xchg
in
sub
inc
sbb
imul
and
adc
rcll
and
repz
fwait
pop
inc
addl
ja
push
hlt
pop
jge
add
xchg
leave
sub
stos
push
cld
push
mov
push
mov
sbb
push
or
and
xor
push
cs
pop
mov
jno
lret
mov
mov
outsl
and
jae
ja
gs
jge
inc
repnz
add
inc
jno
push
mov
sahf
sarl
cli
shlb
inc
jno
push
test
push
xchg
mov
shrb
lds
daa
insl
in
repz
xor
mov
pushf
imul
pop
and
add
or
test
js
sti
mov
xchg
xor
inc
into
insb
iret
and
repz
lcall
pushf
int3
xchg
or
jge
les
xchg
xor
popf
sub
or
mov
push
stos
sti
stc
pop
sbb
scas
loopne
push
stos
lds
mov
clc
test
fistps
cmp
dec
sub
push
lcall
pop
ret
rolb
aaa
dec
mov
lcall
push
mov
rcrb
call
fsubl
leave
jns
lea
sbb
addb
mov
aas
jbe
icebp
add
sub
mov
pop
inc
cmpsb
stos
test
pop
or
sahf
xor
jg
insl
push
dec
mov
lods
sahf
push
int
sub
sbb
pop
inc
jns
sbb
icebp
pop
cmp
xorb
push
lds
or
inc
sub
les
test
cmpsl
mov
mov
sub
les
roll
std
xor
mov
adc
sub
pop
cmc
pushf
pop
inc
aaa
in
sub
inc
idivl
insl
jl
lods
adc
mov
mov
or
nop
push
mov
es
ffree
inc
in
xor
dec
jg
lcall
jge
push
cmc
pop
xchg
adcb
dec
in
dec
imul
insl
xor
mov
insl
push
fsts
cmp
pusha
inc
xor
or
popa
fisttpll
loope
leave
push
cmp
mov
add
and
push
dec
or
in
jae
loopne
mov
push
sub
mov
cmp
inc
stc
mov
in
ja
inc
adc
ds
incb
mov
mov
cmp
aad
leave
mov
call
aad
hlt
movsb
mov
pop
sbb
adc
fxtract
or
sub
pop
ss
hlt
jno
loopne
or
push
sub
dec
mov
cltd
push
ja
mov
cmp
stos
mov
movsb
and
push
loop
hlt
jne
ds
test
dec
push
pop
test
inc
mov
enter
ret
fldenv
jo
xor
pop
cmp
and
je
mov
popa
xor
shl
inc
inc
jg
scas
movsl
jp
mov
cwtl
dec
or
pop
and
jb
clc
push
mov
push
pusha
cmp
jg
push
push
arpl
incl
cmp
cmc
fwait
xchg
jne
dec
addr16
pop
call
shll
xchg
sbb
fstps
push
jmp
hlt
xor
inc
dec
pop
ret
dec
icebp
jae
leave
sbb
imul
nop
dec
addl
ret
push
lds
les
dec
repnz
insb
sbb
loope
inc
daa
pusha
data16
mov
mov
adc
jo
or
repnz
cs
sbb
adc
jle
cmp
es
add
dec
sub
imul
mov
cli
ret
adcl
dec
push
adc
in
jns
adc
xor
mov
scas
xchg
in
lea
lret
sub
jb
pop
jne
fwait
or
sbb
mov
mov
add
pushf
movsb
push
sti
cmp
jnp
and
movsb
lret
jecxz
jne
xlat
loope
cs
and
hlt
push
sbbl
pop
cli
sti
inc
jmp
popf
mov
jne
movsl
mov
test
push
adc
outsl
negb
mov
pop
push
xlat
mov
push
dec
xor
movsb
jns
mov
push
push
add
cltd
imul
enter
sub
cmp
imul
push
push
push
in
movsl
adc
cmp
addr16
ds
stos
popa
fisubl
hlt
jne
mov
pop
negb
jle
mov
out
push
or
orb
mov
ljmp
inc
dec
cmp
outsl
fwait
add
icebp
adc
mov
ja
popa
inc
jne
pop
pop
jle
movsl
dec
pop
les
adc
mov
imul
std
sti
and
rclb
fdivl
lret
sbb
cmp
loopne
incl
sti
mov
popl
out
dec
or
cli
pop
and
push
adc
ljmp
push
loop
xchg
loop
div
test
outsl
das
in
mov
mov
test
add
inc
mov
clc
pop
inc
int3
jge
jmp
in
xor
ljmp
cmp
pop
pop
mov
clc
das
push
inc
cmp
adc
jbe
es
rcrl
xlat
and
imul
mov
xchg
push
add
xlat
lds
in
mov
shrb
je
sbb
cs
mov
repnz
pushf
and
push
adc
insl
xchg
or
adc
dec
push
fisttpl
push
push
fdiv
int
dec
stos
es
loope
pushf
pop
xchg
add
into
pop
lahf
xor
push
daa
scas
pop
push
sub
sbb
jnp
mov
dec
adcl
fcomps
and
inc
xchg
iret
andb
push
mov
cs
jecxz
testb
shrl
push
mov
into
or
enter
inc
aaa
test
jno
int3
sub
aad
mov
and
mov
xor
jp
out
jle
push
leave
inc
and
xor
xlat
dec
vpunpckhbw
gs
mov
cli
jo
adc
dec
push
push
in
pop
mov
mov
xchg
dec
mov
hlt
pop
mov
add
sbb
aad
into
int
jecxz
or
pusha
daa
lahf
sub
ret
add
ss
aaa
inc
dec
inc
andb
call
mov
rcl
gs
push
jns
mov
jnp
out
inc
mov
scas
mov
add
aas
push
aam
pop
fs
dec
jge
xchg
pop
dec
inc
mov
js
stc
hlt
push
leave
insb
sbb
repz
and
jb
add
imul
sub
outsb
xchg
or
sub
mov
nop
mov
jae
incb
loop
les
test
pop
lods
jp
roll
inc
insl
jge
je
cwtl
dec
shl
adc
rcrb
xchg
push
mov
nop
jns
std
repz
push
sub
dec
xor
mov
scas
dec
gs
enter
sub
adc
leave
int3
cld
repz
cli
aam
xchg
push
cmp
mov
mov
movb
sbb
cmp
fs
sub
xchg
or
dec
xchg
dec
adc
rcll
mov
pop
inc
lods
cmpsl
adc
dec
ds
dec
lret
jnp
nop
cltd
and
push
xor
mov
xor
or
mov
out
les
loope
pushf
leave
cmp
outsl
into
cmp
ret
xchg
sbb
pop
adc
sti
int3
sarl
add
pusha
mov
sub
xchg
out
ds
popa
std
cwtl
push
jns
fs
lret
imul
mov
divl
mov
arpl
sub
imul
inc
insl
or
fdivrl
mov
addr16
xlat
scas
js
pop
imul
stos
sbb
inc
frstor
aas
fisubrl
lret
fidivrl
out
lea
pop
insl
fsubrl
js
lds
shrb
nop
mov
dec
mov
fsubl
int3
ja
xor
insl
mov
jo
int3
jmp
or
jge
push
ror
cmpsl
addr16
enter
add
orl
in
in
nop
push
or
mov
cmpsb
sub
rcll
xor
jne
into
mov
std
add
pop
aam
leave
jg
inc
sarl
orl
outsl
rcl
mov
xor
pusha
pop
arpl
stc
out
pop
push
fmul
ret
inc
dec
jbe
andb
push
inc
adc
xchg
lret
mov
or
mov
adc
add
imul
xchg
and
xchg
in
pop
daa
stos
jns
imul
dec
inc
push
gs
lahf
mov
dec
xor
or
test
add
jne
jmp
test
ds
aas
test
dec
lret
push
jge
frstor
dec
ljmp
test
jle
add
jp
popl
aas
add
sub
scas
add
cltd
std
xor
stos
mov
scas
mov
inc
inc
rcll
push
fnstsw
daa
stos
cs
lret
jns
inc
xchg
jne
mov
add
sbbb
lods
cli
outsb
and
ja
adc
add
cli
xlat
subl
xor
mov
mov
jp
dec
ljmp
adc
lds
inc
leave
lds
cwtl
mov
pusha
sbb
and
lea
stos
pop
and
inc
dec
lret
and
inc
dec
test
cmpsl
lret
mov
mov
andb
enter
pop
int3
decb
push
ret
lret
das
or
xor
sbb
iret
cmp
pop
xchg
inc
xchg
sbb
dec
mov
push
fdivrl
jl
xor
int3
movsb
sbb
aad
xor
or
movb
lret
out
rol
push
sub
sub
xor
push
jge
mov
xlat
fs
imul
jne
xor
loope
insl
in
jmp
inc
push
shlb
arpl
xchg
fidivs
sub
dec
sub
mov
mov
rcl
sar
imul
push
sar
sub
packuswb
roll
or
jnp
rcr
mov
pop
adc
jp
test
outsb
dec
sahf
adc
aam
ds
jnp
fcmovb
push
sub
pop
insl
xchg
aad
ja
fs
loopne
jge
popa
cmpsl
sub
and
scas
pop
sub
das
int3
adc
pop
cltd
jp
lea
sbb
adcl
arpl
mov
addl
sbb
sub
push
fcmovu
stos
push
test
hlt
aad
fsubrp
dec
pop
dec
aad
cmpsb
push
pop
dec
push
dec
dec
xor
inc
jae
rcr
repz
out
dec
fnstsw
ret
dec
jge
movsb
aas
mov
xor
ds
inc
ret
inc
mov
dec
ret
dec
xlat
insb
and
push
lds
sub
xchg
lret
or
inc
mov
or
insb
dec
jns
mov
std
fcom
inc
dec
dec
xchg
push
movsb
cld
adc
xlat
dec
lds
jp
lret
inc
out
or
mov
mov
or
push
dec
inc
jge
inc
or
jmp
or
js
leave
aam
push
xlat
cs
shr
stc
ds
mov
cmc
jl
mov
jle
pop
in
pop
jle
mov
or
pop
call
pushf
push
das
xchg
add
mov
loope
or
addr16
insl
xlat
cmp
or
cmp
or
push
enter
xchg
loopew
push
xlat
ds
jae
mov
mov
lahf
xlat
push
stos
cmc
xchg
repnz
out
dec
jl
pop
aas
mov
mov
daa
test
dec
lock
adc
xchg
push
inc
sub
fistpll
loop
jl
mov
daa
das
jne
cmp
ljmp
jmp
hlt
stc
and
repz
pop
js
xor
aam
in
push
push
and
and
rcrb
mov
pop
lcall
mov
daa
jae
sbb
ljmp
push
mov
xchg
cmp
outsl
imul
jno
shll
hlt
ljmp
mov
sub
dec
jbe
je
popf
inc
cmpsb
inc
dec
imul
scas
test
sti
add
mov
es
or
fcompl
sub
xchg
movsl
jmp
test
jne
fs
sbb
add
movsl
add
pop
jge
cmp
jb
sub
sbb
addb
xchg
inc
arpl
sbb
mov
mov
ss
pusha
shrl
scas
icebp
js
mov
lds
imul
faddp
jne
jbe
push
jecxz
add
rcll
inc
jge
cwtl
outsl
dec
jg
lds
mov
mov
mov
shll
cmp
sarb
push
test
xor
mov
mov
add
xchg
dec
popa
arpl
push
xchg
push
xchg
mov
cltd
mov
adc
dec
push
lock
scas
notb
push
movl
sub
test
hlt
push
ljmp
push
push
or
leave
mov
mov
sub
lahf
pop
sub
xchg
dec
pop
xchg
add
add
inc
push
inc
jbe
xor
cmp
sbb
push
mov
inc
adc
inc
dec
sbb
sub
cli
pusha
aad
jae
xchg
int
dec
mov
adc
add
push
xor
mov
ja,pn
or
xchg
mov
cmp
cmp
or
pop
jne
out
or
scas
lds
pop
mov
sti
and
sbb
mov
dec
int3
pop
xchg
xor
jne
jle
stc
popf
adc
into
lret
dec
int3
adc
hlt
outsb
pop
mov
and
test
or
movsl
out
and
jno
dec
dec
xor
mov
fucomi
push
jl
adc
fisttpll
outsb
cmp
enter
arpl
xchg
xor
shl
mov
mov
add
cli
ljmp
dec
push
jge
enter
popf
mov
bound
test
jne
dec
movsl
popa
je
out
jbe
pushf
orl
imul
hlt
xor
and
ja
enter
and
rolb
pusha
fildll
es
movsb
cmp
cmpsb
aas
add
mov
dec
dec
enter
xor
mov
cmp
dec
inc
cmpsb
xlat
and
jno
mov
pop
adc
shll
movsb
pop
rcr
arpl
jbe
lea
xor
iret
add
push
fstpl
mov
dec
stos
pushf
out
mov
mov
rcrb
shll
enter
sti
roll
dec
test
dec
loope
dec
pop
gs
dec
and
dec
sub
xor
add
jo
push
popf
mov
sub
pop
jb
bound
mov
subb
ja
adc
fsub
loopne
insb
push
jecxz
sub
mov
mov
fnstsw
mov
xchg
inc
add
xchg
push
adc
outsl
je
out
jnp
ffree
sub
ljmp
shrb
lds
outsb
iret
pop
sub
jae
cmp
and
add
cltd
push
inc
jnp
mov
lret
ret
and
pop
jno
lock
hlt
mov
cmp
lahf
cmp
cmpsb
jle
xchg
lahf
or
dec
inc
mov
jno
stos
pop
test
add
test
xor
loope
lds
jge
rep
mov
sahf
in
pop
add
lds
sbb
mov
enter
hlt
jns
lods
ja
movsb
push
imul
xchg
push
pop
movsb
inc
jp
lods
adc
sbb
pop
orl
clc
pop
in
mov
in
das
push
nop
pop
inc
lahf
stc
jae
shll
push
push
push
push
int3
fs
adc
lds
imul
or
lock
addr16
jns
mov
imul
add
pusha
xor
js
fstpt
cld
adcl
pop
test
es
hlt
cmp
mov
scas
dec
adc
movsl
sub
or
sub
dec
mov
call
popa
sbb
and
pop
and
pop
test
test
add
mov
sub
loop
pop
test
daa
test
mov
sbb
or
and
or
pop
scas
icebp
push
pop
fisubs
jge
test
negb
rcrl
mov
jmp
dec
push
sarb
mov
loope
pop
insb
outsb
js
add
repz
jle
jg
cmp
add
cmc
xchg
pop
jg
addr16
ret
jp
and
push
orb
add
sub
xchg
loope
inc
andb
jb
xchg
roll
sub
arpl
cltd
aam
pusha
sbb
jp
bound
je
in
cs
pusha
shrb
nop
xor
cmp
lods
and
sti
xchg
xchg
enter
aam
das
xchg
push
push
cli
mov
push
mov
fnstenv
add
cmp
insl
and
jmp
and
jg
outsb
in
ret
and
and
dec
xor
movsb
leave
clc
sbb
and
xor
dec
lods
popf
repnz
mov
sub
clts
mov
pop
mov
xor
cmp
stos
inc
mov
add
stos
cmp
push
fiadds
aas
add
daa
loopne
out
push
nop
add
inc
inc
cmp
push
sti
and
mov
and
mov
in
movsl
jnp
xor
mov
pushf
std
xchg
cmp
shrl
push
addr16
jnp
aam
int
xor
and
fs
shll
xor
movsb
push
pop
jnp
les
mov
pop
jnp
dec
imul
popa
jb
mov
shll
and
je
sti
xor
push
out
mov
ljmp
iret
dec
add
fucomip
cmp
or
add
sub
sub
js
mov
andl
and
adc
or
push
movsb
dec
aas
mov
jns
pop
subb
stos
xor
and
cld
xor
cmp
sub
mov
mov
or
cmp
insl
inc
and
push
stos
in
jecxz
idiv
jle
ljmp
loopne
femms
int
xor
and
xchg
push
push
jb
push
rcll
add
push
dec
in
add
sbb
jmp
cmpsl
loope
jge
jbe
leave
dec
popa
mov
subb
dec
shrl
dec
push
std
arpl
loop
mov
pusha
insl
xchg
push
outsl
out
sti
and
cs
inc
bound
ds
jle
movsl
jmp
add
ret
sahf
shr
dec
jge
inc
jl
cmp
mov
mov
fstl
les
adc
mov
jg
es
mov
aas
shl
jnp
push
xor
rcl
push
jl
and
jnp
shl
mov
push
sub
dec
pop
cs
cmp
cli
add
enter
pop
inc
push
lret
fwait
dec
pop
cmp
cwtl
shlb
loopne
pushf
lds
cmp
pop
jne
aad
mov
or
push
mov
data16
daa
dec
adc
inc
dec
jle
dec
hlt
cmpsb
jbe
mov
cmp
xor
lds
mov
mov
dec
jne
outsl
jge
and
mov
dec
icebp
mov
addb
scas
jmp
adc
hlt
jmp
pop
lods
and
inc
sarl
adc
inc
pop
sbb
mov
and
stc
lret
lods
xchg
aaa
ret
dec
hlt
gs
add
inc
dec
and
push
outsb
mov
or
ret
jmp
add
mov
jmp
jne
loope
sbb
rorb
scas
add
inc
xchg
lahf
insb
pop
mov
sarb
dec
cli
inc
xchg
fmull
inc
fbstp
inc
sahf
out
cmp
xchg
in
jb
scas
daa
lock
cmpsl
pop
lea
test
nop
jle
mov
jg
inc
xor
pop
and
ds
out
lock
popf
mov
jb
xor
push
ja
or
xchg
cmp
je
mov
inc
call
int
xchg
jle
push
or
sti
dec
add
ret
fisubl
daa
mov
jg
dec
leave
fstpl
cltd
mov
and
add
lea
fucomp
xchg
test
ja
sub
mov
rol
xlat
aam
xchg
data16
push
pop
and
scas
lds
dec
stos
out
pop
movsb
inc
fimull
loop
hlt
pusha
aas
jnp
test
aas
push
pop
pmulhw
inc
sub
push
popa
insb
add
int3
fwait
pop
mov
shlb
in
mov
xchg
pop
or
stc
jo
popf
aad
icebp
and
xor
inc
pop
stos
jne
xchg
js
push
jno
aas
dec
xor
dec
mov
lret
inc
stc
pushf
xchg
ljmp
shll
ljmp
test
sub
fcmovb
fmull
mov
aam
push
iret
inc
outsl
xor
jnp
notl
inc
mov
adc
cmp
call
inc
sbb
shl
cs
cli
dec
out
inc
pushf
mov
insb
push
es
test
jg
cmc
cmpsb
dec
and
dec
fcmovu
stos
jns
aas
adc
aam
push
ljmp
insl
ja
hlt
movsb
add
or
jl
and
fisttpl
ret
adc
loop
rolb
xchg
dec
sub
jp
fsts
fsubrl
cmp
inc
addr16
push
aad
das
imul
fsubs
adc
sub
mov
and
push
or
aam
lds
sub
idivb
insl
or
aad
cmc
sub
mov
inc
mov
xor
cmpsl
inc
mov
jb
loope
scas
inc
jne
shrl
xor
xlat
dec
in
test
jnp
cmp
mov
mov
cltd
aam
mov
dec
inc
mov
add
jmp
jge
fdivs
inc
ss
out
ret
mov
test
xchg
movsl
scas
enter
mov
mov
lock
aaa
push
xchg
out
lods
ljmp
jns
jmp
add
pusha
xor
cs
cmp
in
mov
dec
xor
push
pop
pop
fwait
pop
jp
insb
addr16
add
arpl
xor
pop
out
dec
add
pop
cli
cmp
sbb
xor
fcomi
xchg
sbb
push
incb
std
fadd
mov
jae
and
dec
add
jno
mov
es
cmpsb
cmp
jne
stos
mov
adc
pop
gs
jg
test
and
and
aaa
xor
je
sub
add
push
and
cmp
rcr
int3
clc
mov
leave
and
xchg
inc
clc
dec
insb
leave
movsl
dec
and
aaa
in
mov
jo
pop
sub
dec
xchg
sbb
or
fsubs
inc
out
mov
mov
fdivr
inc
mov
pop
stos
std
mov
sub
mov
fs
mov
push
lods
sub
xor
jo
js
mov
dec
xor
lds
xchg
xorl
mov
push
mov
rcr
insb
lds
mov
in
leave
inc
cmp
push
or
add
xchg
xor
jns
sbb
mov
adc
lret
sti
jbe
jge
and
mov
or
rcrb
test
out
sub
test
or
pop
push
cmp
push
sub
sahf
sbb
stos
mov
jmp
leave
push
sti
imul
xor
or
lahf
xchg
xor
out
or
xchg
inc
shrb
insl
and
pop
adc
xchg
jl
imul
dec
insl
jl
xor
push
imul
fsubrp
dec
adc
pop
sbb
loopne
pop
ret
jmp
sub
rcl
rolb
inc
add
bound
sub
jne
inc
xor
in
pusha
adc
mov
fstpl
shll
cli
push
push
adc
sub
sahf
adc
pop
and
test
inc
and
cmpsb
mov
sbb
cld
mov
mov
xlat
adc
stos
int
lret
mov
inc
add
insl
dec
hlt
scas
adc
jbe
mov
out
dec
fxrstor
and
or
hlt
push
jg
sub
fidivl
lret
pop
add
pop
and
es
pop
and
adc
mov
jbe
sti
cwtl
inc
stos
dec
cmp
cmp
jae
jo
pop
lds
push
inc
shrb
adc
add
adc
les
dec
sub
adc
dec
bound
pusha
or
add
push
cmp
sbb
pop
adcl
les
daa
aas
popf
mov
popa
and
das
add
test
xor
sahf
subb
outsb
jne
out
fwait
loopne
out
dec
call
leave
repz
push
fwait
shlb
fs
fsubr
push
xchg
int3
and
jo
popa
jg
cmc
mov
or
add
cmp
jl
nop
leave
lds
out
adc
movb
and
daa
hlt
sbb
inc
stos
xchg
insl
adc
lods
sbb
mov
out
or
iret
ret
add
leave
xchg
fsub
mov
inc
das
mov
lret
test
decl
cli
imul
sub
gs
or
ds
xor
xor
scas
cmp
jge
or
shlb
and
and
cmp
movsl
and
and
pop
hlt
stos
ds
inc
add
push
mov
cmp
jp
and
aad
lahf
inc
pusha
add
cmp
add
fsubl
inc
jne
mov
shrb
push
hlt
adc
inc
scas
jb
mov
gs
pop
add
dec
int3
shlb
dec
and
imul
add
mov
jb
adc
cmp
aas
and
mov
mov
xchg
dec
dec
dec
mov
cmpl
mov
push
mov
push
add
mov
enter
lods
or
push
ret
cvttps2pi
arpl
inc
mov
shl
dec
jnp
adc
in
ljmp
lds
pop
jns
lret
out
in
fdiv
lret
or
icebp
xchg
aas
loopne
cmp
xor
bsr
jnp
out
cwtl
repz
dec
test
pop
jb
in
ljmp
in
mov
adc
jp
push
add
dec
push
inc
out
jecxz
test
dec
dec
add
jp
inc
mov
aam
push
and
or
lds
inc
xchg
ljmp
movsb
std
filds
fsub
sarb
jmp
and
sub
test
cmp
and
ret
pop
push
and
xor
negb
inc
sarl
jp
push
fadd
push
fsub
and
jb
adc
rol
aam
and
push
mov
pushf
shll
movsl
bound
movsb
mov
mov
cwtl
mov
mov
pop
jecxz
out
xchg
sbb
imul
scas
dec
adc
ss
push
xchg
divb
cltd
pop
std
add
movb
push
cmpsl
test
mov
add
int
push
add
aam
dec
adc
insl
rclb
scas
xor
adc
or
inc
test
lret
nop
push
push
dec
fcoms
and
push
mov
cli
insl
sub
ljmp
test
es
cmp
inc
loope
dec
fmull
ds
mov
insb
jmp
insb
cmpsl
dec
ret
fwait
pusha
pusha
and
pop
cmp
fsubrl
dec
xlat
cld
xchg
or
mov
imul
addr16
aam
das
addb
jne
in
mov
in
rcrl
aad
lds
push
movsl
in
outsl
mov
out
shll
aaa
xchg
mov
jg
xchg
push
in
mov
sbb
dec
fdivr
jp
and
sub
subb
repz
leave
dec
pop
dec
inc
pop
lahf
js
fnstcw
in
nop
or
push
and
mov
js
test
stos
inc
icebp
lods
popa
mov
das
loope
jo
xor
sarb
inc
daa
lods
or
and
dec
inc
jp
pop
push
cmp
add
jge
popa
pop
adc
xor
dec
sbb
movsl
jb
adc
arpl
cmpsl
mov
daa
lock
push
cs
lock
jae
mov
ficomps
dec
sar
in
insl
popf
dec
fwait
jnp
out
jge
jmp
lods
mov
mov
adc
les
fdivrl
xchg
mov
xlat
test
pop
sahf
pushf
dec
pop
pop
and
sbb
subl
ds
inc
cmpb
jo
mov
test
mov
call
mov
cmp
es
xor
sub
jecxz
dec
mov
add
loop
add
push
repnz
or
ja
mov
push
pusha
mov
rcll
dec
add
mov
xor
call
jbe
aas
mov
lea
jg
jae
cmp
ret
xor
push
aaa
mov
jbe
into
incl
add
fmuls
add
lods
mov
push
fsubrl
add
sub
inc
lods
vstmxcsr
mov
popa
xor
and
gs
test
leave
fdivrl
cmp
lds
pop
and
ja
mov
add
and
lahf
or
int
pop
movsl
jne
cmp
dec
fnsave
sub
push
jp
or
and
lds
push
jle
jecxz
out
xchg
inc
inc
jecxz
mov
faddp
cmpsb
aaa
in
pop
cmp
add
mov
int3
sbb
cmc
ret
cli
hlt
mov
int3
jnp
adc
test
aaa
sub
push
scas
adc
subb
jno
mov
xor
add
push
add
gs
cltd
test
hlt
aam
sahf
sub
lret
lcall
imul
cs
pop
cld
int3
push
add
cmpsb
mov
sarw
pusha
outsl
outsl
jp
cmc
xor
mov
dec
jge
movsb
pop
ss
pop
xchg
cmpl
mov
sahf
dec
loope
popf
xchg
sti
pop
cmpsl
repz
pop
jae
addr16
dec
inc
decb
nop
imul
xor
push
imul
stos
jnp
in
int
aad
cmp
mov
dec
shll
xor
movsb
jne
sahf
sbbl
pusha
out
inc
nop
ja
mov
dec
jnp
mulb
or
pop
jne
fld
inc
add
xor
sub
sub
arpl
jno
push
mov
orb
pop
insb
cmp
dec
jge
jno
leave
jge
cltd
mov
aam
int3
jecxz
lret
shrl
inc
inc
lock
push
fcompl
sub
cs
inc
dec
cs
and
out
loop
hlt
outsl
mov
test
lret
mov
aam
outsb
mov
daa
lds
mov
inc
test
outsl
lds
rcll
jg
inc
in
cli
cmc
popa
and
xchg
dec
jge
cmp
scas
push
mov
inc
mov
push
add
dec
std
cs
jl
stos
mov
lea
es
and
adc
cmp
push
cmp
push
cs
fs
leave
push
ljmp
mov
bound
add
inc
add
fsubrl
add
loop
cs
into
movsl
jmp
scas
jl
or
push
lock
ficomps
ret
mov
sbb
arpl
sbb
ficoms
sub
cmp
inc
jo
or
dec
xchg
mov
ret
lahf
hlt
and
cmp
mov
aam
imul
jge
push
push
cwtl
jecxz
das
lds
pusha
scas
push
adc
call
and
pop
xor
in
cmp
dec
in
push
xor
add
xchg
rcrl
jle
mov
xchg
scas
and
ret
xlat
lds
inc
inc
xorl
and
pop
mov
mov
dec
pop
adc
add
ds
filds
push
mov
push
loope
int
insb
test
add
leave
pop
sbb
ljmp
sub
xchg
or
and
cld
fistps
repz
adc
sub
stos
or
push
lock
hlt
enter
pop
test
into
add
imul
jl
jp
and
movsl
sbb
pop
insl
lea
repnz
push
aad
fnstcw
xor
mov
mov
out
push
push
mov
ds
pusha
gs
inc
pop
dec
or
daa
cmp
js
mov
in
pop
addl
dec
xor
jbe
push
xchg
add
jge
pop
adcl
mov
stos
cwtl
fs
pop
xchg
inc
stos
jne
cli
arpl
add
test
jle
cmp
les
inc
sbb
lods
sub
insb
sub
mov
mov
rcrl
push
xor
lahf
into
fisttps
pop
mov
ljmp
sub
sahf
fsts
jge
fwait
sub
mov
pusha
cwtl
stos
icebp
xlat
gs
xor
insl
ja
adc
push
mov
inc
mov
ret
inc
test
mov
inc
mov
mov
sub
cmp
mov
pop
cmpsb
cltd
loopne
lahf
mov
inc
popa
xchg
aam
xchg
push
mov
xchg
gs
xchg
dec
or
ja
sbbb
rcll
sbb
add
lret
aam
shlb
xor
mov
movsl
aam
and
mov
xchg
cmp
jnp
outsb
fisubs
xlat
int3
or
xchg
aam
stos
push
push
inc
mov
mov
test
and
roll
jns
push
and
xlat
xchg
inc
xchg
inc
imul
repz
xchg
outsl
push
negb
adc
loope
cmc
sarl
roll
sub
cmp
movsl
inc
jns
xchg
inc
mov
xchg
inc
mov
push
dec
cltd
dec
repz
or
xchg
cld
fwait
xrelease
dec
in
shll
adc
dec
cmc
push
jb
bts
aam
inc
js
or
imul
ficomps
pop
addb
ret
mov
fs
and
push
fnstsw
sub
push
push
cmpsb
xor
aas
sbb
jg
lahf
pop
dec
loop
addr16
adc
push
mov
pusha
lods
or
sbb
ds
scas
sub
movsl
sti
fs
sub
lret
and
adc
pop
addr16
push
outsb
add
dec
movsb
lods
push
insl
lock
into
ret
push
sarb
xchg
mov
js
iret
aaa
xchg
shlb
xchg
pop
arpl
jbe
adc
jbe
stos
pop
and
pop
pusha
int3
sub
and
cld
loop
in
out
mov
leave
in
mov
aam
sbbl
add
jecxz
push
dec
es
rclb
hlt
pop
dec
mov
ret
cmc
mov
push
pop
jge
out
cmpsl
jge
ffreep
int
jbe
dec
leave
jne
lret
js
ficoml
push
fisubs
sub
fstl
jo
rcll
test
or
or
mov
bnd
sarb
and
adc
inc
xchg
add
mov
jl
arpl
pop
mov
push
mov
aas
dec
xor
pop
jns
cmp
adc
out
aas
push
enter
adc
mov
and
dec
stos
inc
sub
loop
cvttps2pi
decl
lods
mov
sub
cmp
sahf
stos
pop
jb
stos
or
loop
nop
hlt
dec
add
cmpl
leave
aam
popa
jnp
ret
pop
mov
hlt
pop
add
add
xchg
ljmp
pusha
shlb
adc
cmpsl
adc
mov
add
mov
push
js
pusha
lea
xor
in
hlt
fdivl
push
inc
or
sarl
dec
mov
ljmp
and
insl
idivl
fsubs
sbb
icebp
adc
cli
les
or
inc
fdivs
rcll
sub
in
decl
pop
les
add
dec
mov
inc
push
in
adcb
bound
cmc
lret
lea
mov
repnz
pop
add
stc
jmp
pop
shlb
xchg
and
jge
cmpsb
scas
and
jle
data16
sub
and
lods
pop
push
test
test
and
cwtl
mov
mov
cmpsb
xchg
rolb
cwtl
or
push
arpl
daa
add
sahf
sub
lret
sub
dec
push
mov
jle
add
add
mov
movsl
and
jno
jg
popa
mov
scas
movsb
push
jmp
cltd
repnz
mov
or
pmuludq
subl
pop
js
jp
cmp
jnp
sbb
inc
cli
cmp
dec
mov
jmp
jle
xor
dec
jle
lret
xchg
or
mov
lret
repz
fisubrs
lcall
push
push
mov
adc
imul
out
nop
mov
rcll
inc
pusha
cld
ja
and
icebp
and
sbb
shll
pop
inc
hlt
in
nop
or
icebp
loope
mov
ffree
stos
and
or
or
stc
notb
int3
mov
mov
xor
pop
add
js
xchg
ds
mov
or
mov
cli
dec
call
dec
ss
push
or
pop
hlt
mov
jmp
dec
out
aas
mov
aam
lahf
jp
imul
out
shr
mov
dec
and
es
call
inc
jl
cmpl
lds
dec
mov
xchg
sbbl
jne
jb
inc
fnstsw
mov
sub
stos
inc
mov
fisubl
add
fidivrs
push
mov
adc
call
inc
aaa
inc
subl
lahf
mov
xor
lds
push
dec
inc
gs
dec
and
jge
rorb
pop
and
jge,pt
add
cmc
test
or
inc
fbld
inc
cld
out
xchg
mov
push
mov
enter
pop
push
sub
insl
sbb
lahf
xchg
add
sbb
imul
pop
mov
je
sbb
and
dec
inc
dec
add
inc
push
fstps
test
cmp
or
push
push
push
mov
jmp
and
repz
inc
pop
dec
sub
andl
roll
dec
pop
roll
das
push
and
mov
js
scas
sbb
dec
ret
adc
mov
sub
mov
dec
hlt
xchg
cmpsb
addr16
imul
mov
dec
into
lret
mov
fsubrl
test
sahf
push
fisubl
loop
mov
sbb
popa
inc
sub
rcr
push
push
stos
mov
fsubrl
sbb
ja
clc
cs
or
ljmp
mov
decb
mov
mov
movsl
pop
lods
mov
lock
dec
xchg
shrb
adc
fmull
pop
fmul
jnp
adc
pop
flds
cmc
and
jb
sub
sbb
push
inc
fsubs
mov
cmpsl
enter
and
stos
jp
pusha
dec
add
xchg
cmpsl
es
enter
and
add
shl
sub
mov
cmp
add
and
dec
sahf
and
cmp
in
push
popf
jne
and
sub
into
clc
jge
fnsave
mov
aad
sahf
mov
sbb
xor
inc
add
mov
inc
xorl
aam
inc
jge
add
inc
int
js
dec
lahf
pop
push
inc
xor
pop
outsl
mov
jmp
add
mov
xlat
mov
dec
or
adc
das
les
fsubl
insl
fistl
dec
popa
push
push
pusha
or
adc
or
lcall
sarb
ret
test
sbb
cmp
inc
mov
inc
test
mov
jecxz
addr16
pop
cs
fsubrl
es
stos
and
pop
and
gs
pop
arpl
pop
pop
fldcw
mov
dec
dec
in
and
sub
dec
push
ds
stos
incb
mov
loope
es
dec
fs
mov
bound
push
xchg
mov
int3
xor
xchg
jno
inc
fdiv
rorl
int
lcall
fsubs
orb
movsl
loope
push
pop
jnp
loope
sbb
and
pop
faddl
lret
and
adc
mov
pop
repz
fstps
push
dec
push
mov
arpl
ljmp
or
jg
pop
das
mov
sub
repz
jno
test
enter
cmp
and
push
fildl
std
or
push
ret
enter
incb
shl
pop
in
jmp
int
subl
mov
orb
cmp
movsl
enter
clc
push
mov
es
int
lahf
jno
daa
mov
or
or
xchg
cmp
push
out
sub
pop
daa
inc
addr16
sub
shl
leave
decl
pop
or
xor
adc
pop
mov
fdivrl
adc
adc
les
sarl
andb
jg
add
aam
push
leave
and
nop
or
sub
xor
xlat
lret
cmovns
ja
syscall
gs
nop
mov
mov
jae
inc
mov
mov
or
test
ret
mov
hlt
loop
movsb
loopne
nop
or
ficomps
out
adc
ljmp
test
adc
lret
filds
jne
sar
add
fdivr
shr
pop
pop
sub
aas
fsubl
mov
fwait
mov
push
out
jo
push
shl
inc
lods
dec
inc
dec
adc
dec
inc
inc
fiadds
fs
popa
pop
adc
mov
arpl
test
in
xchg
or
shlb
mov
inc
mov
movsl
sbb
inc
test
jle
dec
in
or
adc
and
fdivrs
lcall
xchg
add
mov
in
push
inc
sub
shl
mov
adcl
xor
adc
jge
dec
and
xor
dec
add
loope
or
mov
lods
cs
inc
xor
movsb
push
xorl
bound
dec
ficoml
js
rcrl
fnstsw
mov
cmp
mov
mov
push
mov
push
dec
and
pop
cmpsb
fldl
sub
mov
cwtl
adc
gs
xor
jge
sbb
test
lods
fs
pmuludq
test
mov
int
out
push
inc
test
jo
rcr
insl
pop
cmp
repnz
gs
in
sub
in
mov
dec
cli
add
fnstcw
adc
mov
and
frstor
push
dec
xor
shll
xor
dec
pop
stos
loop
sub
inc
mov
xor
add
dec
and
mov
lds
xorb
inc
leave
push
xlat
fistpl
std
and
mov
icebp
mov
not
sbb
xchg
pusha
xor
test
pop
mov
cmp
mov
push
clc
leave
test
mov
cs
mov
aam
jge
rcl
xor
push
cld
or
popf
imul
pop
loope
lock
pop
das
movb
cmp
loope
pop
push
inc
mov
push
sub
and
cmp
jle
push
xor
int3
push
add
sbb
mov
ljmp
popf
inc
inc
data16
mov
ljmp
bound
xchg
sub
dec
mulb
push
push
and
in
sub
add
leave
popa
mov
jg
dec
shll
aam
into
jnp
ret
and
push
push
dec
arpl
push
dec
popa
xlat
jo
dec
gs
es
cs
ljmp
mov
cmp
ljmp
push
cmp
cmpsl
jmp
rcll
cwtl
in
daa
out
mov
int
lock
push
or
inc
mov
leave
in
subb
out
add
mov
sbb
dec
or
fs
sbb
jle
push
jnp
bswap
sub
pushf
pop
xchg
leave
inc
enter
cwtl
or
cmp
and
in
jnp
pop
xchg
clc
mov
gs
rcrb
push
pop
scas
loopne
insb
mov
je
pop
dec
and
ret
sti
mov
cli
xlat
dec
inc
lcall
xlat
xchg
dec
add
add
das
push
popf
push
push
sub
int
cmc
aam
push
xor
xor
movsb
or
and
sub
aam
and
pop
pop
mov
lret
hlt
out
arpl
shll
cmp
je
dec
fmull
dec
stos
push
test
dec
jno
rcrb
test
xchg
jae
or
test
lods
mov
jo
jne
mov
push
xchg
pop
aam
testl
dec
jno
ret
sub
lock
aam
push
cmpsl
xchg
call
mov
leave
pop
cmp
mov
fsub
ds
mov
les
push
sub
jne
movsl
sbb
jne
push
incl
in
sub
dec
outsb
adc
jl
das
in
push
pop
fsubl
mov
out
xchg
lods
sub
mov
in
out
mov
clc
lods
cmc
mov
adc
leave
lock
pop
inc
xor
push
nop
filds
sbb
call
mov
mov
inc
mov
sbb
rcll
out
push
mov
or
popf
sahf
jnp
push
rcrl
fdivp
vcmppd
hlt
outsl
and
cs
movsl
inc
and
in
xor
cmp
lea
mov
and
data16
mov
mov
imul
cs
pushf
sub
pop
test
rcrl
jge
adc
sub
loopne
pop
add
inc
imul
xorl
test
jmp
cltd
iret
xchg
icebp
dec
loopne
mov
out
pop
pop
dec
ret
nop
xchg
mov
mov
dec
push
rcl
cli
fcompl
dec
bound
push
ret
shlb
rclb
mov
pop
and
hlt
bound
adc
shrl
decw
aaa
repnz
push
ja
mov
insb
or
inc
in
stos
xor
push
and
aam
mov
dec
pushf
stos
ret
push
push
fsts
mov
and
jno
scas
sub
fidivs
cld
push
movsl
xlat
ljmp
jg
pushf
stos
stos
inc
lea
mov
dec
ja
ficoms
cmp
jecxz
test
inc
popa
bound
mov
out
aaa
sub
in
mov
loope
jnp
jge
sub
cmp
ret
xchg
lret
pop
jle
mov
lock
inc
jmp
push
cld
int3
xor
stos
push
jne
add
clc
xchg
and
cmpsb
icebp
ds
lods
scas
faddl
xchg
and
stos
jo
arpl
call
add
gs
hlt
pop
and
scas
aad
sub
test
subb
test
mov
es
push
mov
mov
adc
mov
mov
ljmp
xchg
ret
mov
xor
addl
cmp
mov
cmpl
leave
test
or
jge
xchg
stos
dec
clc
adc
push
out
inc
out
sbb
adc
in
icebp
aam
push
fwait
or
gs
cmpsb
cmp
xchg
pop
lcall
mov
or
imul
push
fstl
adc
dec
addr16
dec
mov
pop
sub
cs
sub
adc
hlt
in
xlat
aad
outsl
int
add
dec
lock
test
fdivrs
test
mov
sub
addps
scas
pushf
out
scas
lds
fsubl
in
insl
popa
cmp
lock
jne
cmpsl
sahf
or
jbe
lcall
sti
or
nop
sbb
sub
mov
bound
insl
insb
mov
aas
mov
or
in
sbb
inc
and
and
ffreep
cltd
jo
push
xchg
jge
cmp
in
and
inc
and
pop
adc
sub
xchg
add
push
iret
icebp
sahf
out
movsb
push
xchg
out
add
push
jecxz
je
push
test
adc
add
mov
jp
xchg
in
das
aam
call
mov
mov
insl
inc
hlt
movsl
add
push
fnsave
mov
and
or
into
loopne
and
push
sbb
sbb
ret
mov
or
sub
ds
das
mov
jg
xchg
mov
arpl
into
push
push
push
push
mov
mov
push
inc
or
pop
or
aam
aam
shl
bound
adc
inc
pusha
adc
jnp
fdecstp
add
add
cmp
pop
fs
jns
aaa
shrb
scas
jbe
or
shl
out
addr16
or
mov
cmp
jp
cmpb
mov
lahf
pop
sti
scas
sti
popa
push
inc
xlat
cmpb
incb
mov
cmp
mov
pop
dec
in
mov
xchg
mov
aaa
popa
and
insb
int
mov
jns
lahf
fsubrl
push
loope
stos
aam
push
fs
jne
cmp
mov
mov
add
jge
mov
in
pushf
mov
inc
push
fidivl
sbb
shr
add
sbb
mov
shll
aad
mov
cld
in
popf
leave
and
mov
ds
fdivrl
dec
andl
sub
in
xor
gs
andl
fs
and
imul
in
dec
nop
pop
sbb
out
adcb
and
cmpsb
std
xor
in
stc
sarl
xor
out
sahf
es
arpl
movsb
and
stos
out
mov
dec
aad
adc
test
push
sub
test
enter
fdivp
shlb
dec
push
add
pop
adc
sub
in
cld
ja
jmp
fcoml
lods
add
jmp
inc
out
popa
mov
inc
xchg
jo
insl
jmp
fsubrs
nop
mov
sub
xor
push
push
bound
fwait
pop
cmp
ror
icebp
daa
cmc
shl
push
pop
mov
pop
inc
mov
jo
loop
loop
xlat
hlt
jp
pop
jb
adc
add
test
push
loop
cmc
push
lret
clc
test
sub
mov
dec
push
es
xchg
cmovs
nop
dec
stos
jb
lea
and
ljmp
mov
popf
mov
in
pop
sbbl
inc
div
inc
dec
lods
sub
sbb
fldt
insb
fdivl
lods
aad
gs
shrl
jnp
rorb
fucom
push
mov
mov
dec
pusha
or
outsl
mov
cmp
inc
clc
pop
pop
aam
fsubl
loopne
jns
inc
rorl
or
cld
mov
je
addr16
test
and
es
cs
inc
xor
inc
hlt
js
dec
cmp
movsl
mov
push
pop
test
faddl
addb
stc
cltd
jne
mov
adc
ds
std
imul
jo
jne
xorb
xor
arpl
push
xchg
jg
lret
mov
jnp,pn
and
jge
cmpl
fwait
scas
push
andb
je
add
cmp
xor
push
and
scas
xchg
inc
std
test
inc
jge
adc
push
stos
mov
mov
pop
jne
in
mov
push
in
fdivrp
test
nop
add
inc
in
fcompl
out
call
stos
or
push
mov
arpl
add
push
dec
xlat
jo
sub
push
cs
adc
andb
ret
and
push
mov
aam
jns
loope
js
push
js
or
sarb
xor
cmpsb
mov
hlt
das
divb
into
inc
mov
push
xchg
jo
cmpsb
sbb
in
jb
cmp
adc
cmp
jmp
push
outsl
mov
mov
sbb
imul
sbb
stos
aas
dec
arpl
sub
aam
addr16
push
sub
outsl
test
test
outsb
mov
add
add
fnsave
push
cmp
push
jecxz
and
fildl
xchg
lret
push
clc
inc
mov
cmpsb
or
inc
mov
aaa
test
or
or
sub
insb
sahf
cmp
xchg
movsb
int
sbb
push
pop
test
sbb
popf
or
add
adc
mov
ss
xor
add
or
pop
add
test
xor
push
xor
nop
dec
pop
fnstsw
dec
xchg
sar
sbb
add
mov
fimull
pushf
mov
and
mov
movsb
jno
inc
and
in
push
fsub
je
shrl
movsb
lods
push
or
dec
dec
adc
xchg
cmp
xchg
insl
leave
add
cmp
rcr
loop
rolb
mov
and
jl
xchg
and
or
or
jle
mov
subb
jb
lock
lea
xchg
aas
sub
xor
sub
jnp
pop
jo
mov
jle
push
inc
dec
inc
pop
sbb
or
outsl
cli
je
push
lret
imul
pop
je
out
jmp
and
push
lcall
mov
adc
jo
sub
lds
aam
dec
addl
clc
add
xor
inc
in
es
pop
movl
xor
jmp
in
shl
jns
dec
mov
cmpsl
inc
cwtl
inc
pop
push
es
dec
fsubrs
fstl
cmp
mov
push
pop
es
cmp
fwait
push
ljmp
popf
xchg
mov
add
cmp
dec
or
xor
ret
xor
inc
js
pusha
fsubs
and
pop
sub
scas
jne
lret
divb
jp
adc
arpl
add
mov
test
enter
xchg
cltd
popf
fildl
int3
leave
mov
jecxz
mov
ljmp
jge
xchg
hlt
repz
xchg
jge
xchg
enter
es
rol
push
and
ljmp
mov
inc
mov
push
fldcw
hlt
mov
xor
iret
out
push
decl
lcall
mov
inc
lret
mov
cmp
and
lock
cmp
jp
and
jl
clc
enter
mov
pop
push
and
mov
in
mov
cmp
sub
xor
xor
sub
cltd
jne
mov
or
negl
inc
aam
inc
ja
sub
fwait
inc
mov
and
repnz
mov
ja
jno
fildll
mov
jmp
jp
xchg
not
arpl
es
movb
and
into
mov
or
adcl
xchg
xor
out
or
push
dec
and
add
es
adc
jne
orb
mov
lret
aam
daa
in
ds
mov
add
sbb
decl
leave
adc
inc
xor
out
test
push
pop
xlat
add
cld
jmp
int3
mov
pusha
dec
add
decl
movsb
hlt
xchg
leave
mov
icebp
lret
adc
jnp
and
insb
out
mov
test
bound
cmp
sub
fsubr
inc
pop
push
int3
push
xlat
cltd
cwtl
test
sbb
mov
lods
insb
test
or
mov
xchg
mov
shlb
adc
call
and
pop
jp
sbb
and
sub
gs
pop
pushf
imul
adc
out
adc
xlat
xor
or
mov
jns,pn
sub
add
daa
bound
xor
popf
mov
enter
cmp
pop
mov
cmp
les
add
cli
daa
test
popa
or
and
aas
imul
xor
mov
pop
add
mov
pushf
sbb
std
cmp
push
inc
fs
in
stos
mov
xor
filds
popa
jo
cmp
or
icebp
push
dec
ret
adc
iret
mov
je
dec
iret
jge
mov
inc
dec
dec
cwtl
enter
pop
lret
movsl
xchg
out
mov
jp
xchg
sarb
add
and
ds
lahf
pop
push
adc
push
outsb
or
dec
lds
cwtl
aad
test
mov
mov
stos
sbb
imul
jne
movsl
mov
push
cs
loop
mov
jnp
push
in
lret
mov
dec
gs
das
xchg
lret
add
pop
fiaddl
xor
adc
mov
dec
aad
pop
stos
es
pop
cmp
outsl
jl
ret
xor
dec
push
loope
dec
ret
add
sbb
sbb
dec
popf
jl
popa
xchg
add
insl
sub
push
sub
xchg
sub
out
es
std
jp
iret
popf
mov
ljmp
sub
test
add
loop
jl
int3
push
push
nop
mov
push
push
shl
pop
cmc
sub
loopne
sub
xor
lods
decl
insl
dec
stos
pop
or
sub
movsl
rclb
ret
test
cld
std
xchg
add
scas
jne
aad
sub
or
cmc
dec
aaa
jns
push
fcoms
mov
mov
rcll
shll
push
frstor
int
dec
dec
push
mov
xlat
out
jmp
push
jbe,pt
aas
rorb
inc
xchg
add
push
sub
push
mov
mov
cmc
test
shlb
cmp
and
mov
or
and
dec
cmc
mov
inc
cmpsl
or
cwtl
mov
push
jne
sub
stos
mov
addb
test
jp
or
mov
lods
ret
mov
int
fwait
divb
in
outsb
jl
push
dec
dec
add
xchg
cmp
mov
mov
jmp
rorb
int
or
lea
roll
or
mov
sub
in
xchg
adc
mov
das
rorb
int
dec
cmp
mov
int3
sarl
test
loope
xor
test
dec
rcll
pop
in
imul
stos
jae
pop
subl
scas
cwtl
mov
mov
push
inc
aam
cmp
adc
adcb
es
rorb
xchg
leave
jle
dec
jg
in
xchg
push
enter
into
sub
leave
out
mov
pop
mov
arpl
mov
mov
adc
xchg
div
push
push
fdivs
icebp
or
xor
xor
add
dec
mov
jns
mov
dec
sub
or
int
jmp
arpl
sti
mov
fcoml
jo
inc
test
mov
adc
insl
dec
dec
cltd
inc
dec
in
push
inc
jl
mov
inc
out
sahf
fisubrl
cmc
outsb
push
pop
add
pop
in
inc
hlt
leave
inc
mov
inc
pop
rcrb
inc
roll
cmc
sti
jp
arpl
jmp
lcall
hlt
fisttpll
jle
icebp
pop
sub
ljmp
in
das
ret
adc
lahf
jg
repz
gs
lods
leave
jl
xlat
mov
cmp
pushf
leave
in
and
push
dec
in
pop
lods
cltd
ljmp
cmp
lds
push
outsb
and
add
ja
pop
rol
inc
leave
out
std
mov
push
sbb
add
addr16
push
scas
mov
mov
sub
nop
decb
sub
lds
js
pop
inc
xor
xor
xchg
and
pop
jmp
lock
inc
sarb
mov
xchg
lcall
mov
sarb
push
fnstsw
dec
leave
inc
inc
xchg
jl
pop
mov
decl
push
enter
orl
aas
stos
pop
hlt
cmp
outsl
xor
std
mov
aaa
or
and
loope
addl
stos
nop
mov
cli
jmp
dec
lods
lret
test
jno
dec
or
cmp
leave
jns
lods
jp
movsl
stc
repz
sbb
pop
adc
jb
fdivrs
jnp
xchg
inc
adc
fistl
jl
int3
pop
mov
pop
shll
sub
adc
cmp
andl
mov
test
js
jl
dec
das
xor
pop
adc
sub
push
jne
push
dec
jmp
mov
lret
fldenv
leave
add
add
je
xchg
mov
dec
inc
cmp
xor
xchg
dec
jno
add
adc
or
and
dec
mov
mov
xchg
mov
clc
out
pushf
pop
xlat
xchg
pop
xchg
cmpsl
cltd
add
dec
and
dec
popf
push
push
imul
mov
jne
mov
dec
adc
icebp
xor
mov
lods
pop
insl
sbbb
xorps
lds
and
cmp
andl
sub
or
pop
lds
das
and
cli
insb
aam
add
dec
sarb
cmp
lret
mov
cwtl
std
cs
sub
jne
idiv
jbe
push
or
lret
shl
out
aam
pop
rolb
dec
push
or
es
pop
inc
xorl
fisubs
mov
inc
aad
or
xor
xor
aad
into
push
adc
and
test
inc
shll
cwtl
lea
dec
addr16
rorb
std
jns
insl
pusha
and
push
add
int3
fidivrs
jns
nop
mov
aaa
fistps
push
mov
es
xabort
jmp
inc
cmp
push
int3
xchg
mov
push
jle
cmp
dec
dec
and
xchg
dec
rcrb
ror
lret
cmp
cmpsb
pop
jno
rolb
outsl
dec
xchg
sub
or
scas
das
xor
test
push
dec
mov
xchg
or
fnstsw
xor
mov
int3
jae
imul
jmp
jo
imul
pushf
adc
gs
jle
mov
jmp
gs
mov
lock
jb
test
loop
lods
and
loop
sub
push
xor
ja
jns
test
sub
and
sbb
push
mov
cmc
pop
pop
insl
xor
sti
fisubrs
incb
lret
and
aam
enter
std
mov
cmp
int
or
dec
jbe
roll
js
xor
movsb
out
mov
sbb
mov
and
mov
push
scas
lret
xchg
test
es
or
in
inc
jne
dec
xchg
in
xorb
and
adc
inc
loope
jae
inc
cmp
loopne
sarl
aas
andl
sbbl
std
jnp
xor
shlb
rcr
ret
push
lcall
fidivrl
xor
cmp
jnp
aam
les
test
lret
lcall
in
insb
call
and
test
lret
or
stc
sbb
mov
push
arpl
in
out
sar
add
popf
lods
xchg
test
fldl
gs
inc
xor
hlt
sub
rcll
xor
inc
pop
repnz
push
insl
pop
fs
xor
xchg
cld
movsb
test
stos
adc
aas
or
mov
add
arpl
adc
test
orb
repz
aaa
jg
vpcmpeqb
mov
inc
cmp
lea
rolb
subb
aad
or
pushf
cs
les
ss
adc
mov
stos
lods
cmp
mov
pop
rol
stos
and
insb
hlt
inc
mov
push
dec
pop
fimuls
pop
dec
xchg
inc
mov
dec
outsb
jmp
mov
xorl
xor
push
mov
and
idiv
jnp
je
sbb
imul
loope
popa
jbe
rcr
aaa
or
xchg
movsl
inc
idivb
insb
xor
flds
and
sub
test
dec
lea
arpl
stos
or
or
and
jge
push
aas
and
mov
mov
sbb
mov
dec
rcll
sbb
aas
mov
imul
jno
jno
lods
jle
inc
jae
add
out
mov
inc
sar
call
gs
ds
dec
xchg
and
lcall
push
fsubrl
pop
cltd
jno
fs
ja
dec
dec
or
xor
xchg
loop
das
rcrb
push
mov
sbb
push
lods
shl
imul
cmp
fcoml
add
pop
in
aas
sbbl
pop
dec
fsubl
mov
test
dec
xchg
dec
and
jne
xchg
test
ret
outsl
sub
or
sar
lods
mov
or
sarl
out
xchg
sbb
mov
movsl
fadd
jnp
hlt
jne
lock
mov
push
mov
icebp
fs
movsl
sub
push
lods
lds
ss
mov
and
dec
cmp
add
xchg
stos
enter
inc
movsl
add
in
clc
movsb
add
cmpb
push
ret
dec
dec
fadd
call
mov
sbbb
fmul
fs
mov
mov
ret
mov
div
icebp
and
les
pop
and
repz
mov
add
push
cmp
lea
inc
ret
add
push
ret
lock
cmp
pop
dec
loop
call
push
adc
lret
out
jo
hlt
cmc
enter
lret
cmp
clc
repz
jne
js
nop
cmp
fstpt
icebp
or
and
jle
lret
movsb
je
mov
mov
jle
cmc
ljmp
pop
pop
cmpsb
out
pop
and
jne
mov
imul
dec
jg
sbb
or
mov
inc
je
ljmp
sbb
dec
push
cmpsb
xchg
sub
mov
sub
inc
fstl
popf
test
cs
inc
xor
sub
xchg
or
stos
repz
adc
cmp
xchg
mov
cmp
dec
test
hlt
inc
notb
mov
adc
mov
mov
sub
ja
movsb
inc
and
xor
xchg
xchg
sbb
pop
mov
decl
push
jae
inc
sbb
sbb
pop
daa
aad
repnz
lods
addb
sbb
mov
in
ljmp
lcall
insb
inc
dec
ljmp
cmc
and
push
sub
ds
pop
in
test
adc
adc
dec
out
int3
lods
push
sarl
sbb
or
adc
fstpt
lea
dec
jge
in
in
sub
sub
inc
xor
pop
jbe
xchg
dec
ds
incb
scas
dec
push
jae
dec
aam
inc
cmp
add
push
cmp
ljmp
out
xchg
in
pop
and
mov
gs
jne
jmp
mov
push
push
test
and
movsb
divl
bound
lret
cmpsl
lock
fcompl
inc
sbb
pop
add
daa
imul
rol
stc
loop
and
jp
sub
sub
jp
mov
mov
ret
pop
jg
lods
jns
cmp
out
xchg
pushf
insb
scas
jmp
ljmp
mov
gs
jg
lahf
sbb
nop
push
out
mov
test
sub
mov
push
cs
and
add
sub
jne
add
pop
mov
xor
sarb
inc
push
dec
inc
inc
faddl
sbb
dec
cmp
inc
sbb
jg
push
mov
es
and
dec
push
sub
in
inc
aaa
lret
adc
hlt
outsl
jle
fst
aas
lods
cltd
imul
jne
in
mov
pop
loope
mov
adc
scas
inc
mov
mov
out
pop
push
or
add
lds
lret
sarb
insl
test
push
push
rclb
xor
gs
clc
mov
in
incl
dec
mov
push
std
jge
inc
outsl
movsb
cmp
fwait
jl
dec
lahf
jno
test
cmp
sbb
mov
and
cmp
bnd
orl
push
xchg
fwait
cmp
push
mov
scas
inc
sbb
cltd
push
ja
aam
imul
and
cmp
stc
pop
mov
cld
cwtl
pop
xor
sub
lods
adc
lods
in
js
pop
dec
mov
jmp
dec
aam
inc
mov
jmp
pop
mov
xor
mov
mov
mov
pusha
aas
imul
inc
jae
ja
add
cmp
jns
mov
hlt
orb
lret
dec
xor
out
int3
mov
push
ret
ret
fnstsw
into
enter
orl
jmp
mov
mov
loop
std
hlt
out
mov
dec
push
pop
xorl
outsl
cmp
ret
inc
test
mov
inc
jmp
jmp
lods
mull
sbb
sahf
jo
roll
fistl
cwtl
lret
xor
test
or
xchg
popl
cmp
dec
stos
fs
fwait
sub
fistpll
out
sub
cmp
imul
push
test
inc
jbe
mov
mov
ljmp
negb
ret
dec
mov
and
cs
xchg
xor
test
insl
add
pop
mov
dec
shrb
or
hlt
jge
jmp
mov
sar
inc
cmp
test
leave
scas
sub
test
cmp
iret
test
stos
cmp
mov
inc
cmp
inc
sarl
movsb
and
xorl
cmp
ret
jg
fiaddl
fcompl
inc
xor
mov
loopne
aad
stc
or
xor
mov
pusha
xchg
push
sti
push
xor
dec
lea
add
mov
push
and
fdivrs
popa
pop
cmp
arpl
push
lcall
adc
lret
mov
sub
mov
dec
mov
insl
add
movsl
dec
push
cmp
ret
je
imul
test
cwtl
mov
or
jecxz
inc
into
add
push
inc
test
dec
rcrb
dec
imul
lahf
jns
js
xchg
hlt
ret
daa
dec
dec
std
mov
repz
lret
ffree
or
in
aam
scas
dec
int3
inc
cmpsb
jo
sub
es
fsts
mov
loopne
inc
mov
xchg
dec
les
jmp
pop
mov
mov
test
inc
sbb
sahf
insl
rol
add
das
ret
in
add
dec
push
mov
push
gs
mov
inc
testb
scas
inc
testl
xor
inc
idiv
fildl
jnp
test
inc
jge
cwtl
leave
mov
inc
mov
enter
hlt
clc
jg
cmp
or
push
or
mov
ss
pop
jne
fcoms
leave
pop
rcrb
daa
mov
inc
mov
loopne
fdivl
sub
call
xor
repnz
mov
ds
or
mov
cmc
inc
jl
mov
or
jb
dec
cltd
cmp
mov
and
in
into
sarl
push
add
aam
and
out
push
fs
and
hlt
sub
incl
mov
pop
sbb
sahf
aas
inc
movsl
test
and
cmp
cmpsb
dec
clc
inc
movsb
jbe
lahf
dec
mov
cmp
and
cmp
xorl
imul
and
sub
pushl
and
rcrl
xchg
pop
sub
or
mov
movsb
jle
testl
pushf
adc
mov
imul
cmpsl
cltd
stos
aam
es
xchg
inc
adc
xchg
sub
ds
and
jge
cmp
jg
xchg
divb
bound
xor
les
jge
dec
xchg
aas
and
frstor
pop
push
xorb
addb
and
arpl
mov
mov
inc
stc
leave
orb
sub
in
or
mov
addl
or
adc
repz
les
mov
sbb
lea
es
mov
out
sbb
add
aam
add
test
jae
sub
sbb
pop
cmp
inc
loopne
pop
inc
inc
push
ds
push
sub
mov
fsubrl
dec
xor
cmc
adc
cmp
sub
adcb
jecxz
stc
pop
cmc
lods
cmp
es
adc
ds
lret
and
into
cmp
rcrb
sub
xor
xor
and
xchg
add
cli
push
cmp
addb
xchg
es
cmp
insb
add
jmp
mov
fldt
ficompl
jbe
mov
inc
inc
xchg
ret
mov
inc
jns
rolb
or
jnp
xchg
jne
clc
aad
pop
arpl
test
rcl
mov
dec
ret
cmp
fstpl
scas
add
aad
xor
push
inc
inc
xor
push
pop
jne
lock
lcall
cwtl
subb
sub
test
and
lds
push
jl
add
sub
sub
decb
sbb
popf
test
sub
or
in
jnp
dec
bound
or
test
test
loop
xchg
dec
cs
xor
mov
or
pop
jle
shlb
jmp
imul
ror
stos
sahf
xor
imull
scas
mov
stos
lahf
mov
mov
push
cmp
jne
inc
mov
popa
imul
data16
sarb
inc
scas
inc
cmp
dec
lahf
aad
das
pop
pop
aad
paddusw
int
pop
cmpsb
scas
test
pop
cltd
dec
frstor
movsl
jle
mov
inc
add
fidivs
aam
pop
and
add
jmp
fdivrl
xorb
and
loop
hlt
cmp
push
lods
jae
test
add
or
mov
dec
xor
mov
sarb
mov
push
sub
fsubl
adc
daa
mov
les
scas
push
sahf
adc
scas
popf
mov
adc
adc
mov
xor
jmp
push
aam
mov
bound
hlt
inc
roll
or
rolb
inc
mov
mov
jle
test
sbb
xchg
test
out
in
push
jno
cld
shll
test
incb
lahf
mov
stos
xlat
dec
ja
mov
mov
or
lods
insl
movsb
xor
xor
sbb
es
fisubrs
ret
cmp
shll
xor
mov
mov
push
and
mov
rcpps
loop
adc
cld
loopne
dec
movsb
push
test
and
dec
cmp
dec
test
cs
cwtl
cmpl
push
iret
out
mov
sti
push
mov
push
jle
rcl
cmc
rorl
jle
fnsave
nop
xor
test
or
frstor
mov
sarb
mov
mov
sub
test
shrl
xchg
push
aad
jnp
fisttpll
in
push
repnz
mov
push
cmpsl
dec
mov
pusha
aas
lret
aam
or
lock
rolb
int
inc
mov
je
xchg
fcoms
out
roll
cmc
leave
pop
lock
in
arpl
mov
data16
xor
add
mov
sarb
mov
push
and
rcl
lret
mov
shrb
xchg
aaa
push
lahf
sub
sub
cmpsw
fnsave
orb
push
xchg
mov
add
mov
scas
push
adc
aam
lahf
cmp
cmp
or
sti
in
js
out
in
mov
into
bound
into
jbe
popa
xor
xchg
pop
jl
mov
pop
ret
arpl
in
inc
in
cld
dec
cli
jl
hlt
test
mov
dec
loope
shlb
push
mov
jo
adc
pop
mov
fbstp
mov
mov
movsb
iret
insb
push
out
sub
lods
lds
xchg
jecxz
xchg
arpl
repnz
stos
jo
mov
cmp
les
dec
andb
push
mov
enter
testb
call
call
push
subb
mov
test
lea
push
and
ja
fdivrl
sub
mov
or
iret
mov
cli
xchg
push
dec
aas
push
pop
cmp
fwait
sbb
push
adc
aam
push
loopne
stos
outsb
in
lods
jg
bound
in
outsl
dec
sbb
and
jne
xchg
jp
xlat
sti
inc
movsb
sbb
jmp
mov
adc
or
mov
push
cmpsb
xchg
sbb
xchg
jae
mov
ja
jg
and
inc
rcl
mov
rorl
inc
push
popf
arpl
pop
dec
or
dec
je
sarb
or
fwait
stos
cmp
test
add
movb
add
ja
push
orps
leave
mov
scas
cmpsl
cwtl
push
xchg
adc
adc
mov
pop
dec
inc
mov
push
int3
inc
push
stos
inc
lds
add
insb
mov
xchg
pop
in
dec
lds
and
ret
mov
dec
pop
aas
insb
je
pop
dec
xor
loope
scas
push
sub
test
sbb
in
outsb
add
js
loope
push
scas
xor
dec
inc
fsubrs
pop
and
shl
dec
iret
lcall
add
dec
inc
fnstcw
bound
incl
popa
inc
dec
sub
xchg
mulb
stos
gs
shlb
push
ds
sbb
bound
xchg
push
jg
xor
add
incb
push
add
and
loop
shlb
inc
loope
es
sub
ds
push
add
jo
dec
fmul
jl
stos
mov
dec
popa
popa
xchg
dec
aas
je
test
and
or
loop
or
outsb
hlt
rcrl
fistl
movsl
mov
or
nop
lcall
shrb
jnp
sbb
ja
mov
sahf
mov
and
popa
test
push
adc
dec
dec
rcl
ljmp
xor
aad
jns
mov
mov
popf
jle
inc
lret
fadd
xor
inc
and
adc
inc
push
rcll
sub
out
inc
out
pop
jb
inc
mov
ja
dec
sub
cmc
xchg
js
cmp
jns
movsb
jle
ret
dec
xchg
push
mov
fnsave
cmp
test
inc
les
in
ss
cmpsb
aad
lret
dec
inc
sahf
lds
aaa
cmp
push
into
xor
jae
inc
insl
fsubl
pop
cmp
jle
xor
ret
and
mov
imulb
xchg
adc
sar
mov
jg
adc
in
mulb
hlt
in
les
sub
fst
mov
mov
inc
ret
ret
mov
fwait
inc
and
and
repnz
inc
cli
insl
sbb
aam
imul
fists
mov
inc
add
gs
loopne
inc
imul
mov
stc
or
addr16
cmp
inc
xchg
aad
sub
sub
stos
stos
mov
mov
dec
push
jae
aad
or
inc
inc
pop
fstl
cmp
scas
sub
mov
movsl
add
push
inc
inc
add
or
rcr
movb
dec
test
mov
std
test
ret
push
push
lret
lret
gs
dec
push
shll
sahf
dec
xchg
sub
test
jbe
call
sub
mov
lds
test
leave
sub
int3
std
dec
inc
xchg
mov
cmp
adc
ret
dec
fimuls
jp
inc
sub
aad
lods
and
cmp
add
and
das
xchg
mov
inc
dec
movsb
std
push
dec
and
hlt
adc
xor
jecxz
inc
push
dec
adc
ret
shl
negb
xor
icebp
or
mov
mov
mov
sbb
inc
xor
adc
pop
or
imul
inc
sub
roll
stos
sahf
jnp
cs
dec
jns
lahf
arpl
dec
leave
xor
int
cmp
pop
pop
inc
dec
add
lret
ret
mov
adc
mov
movsl
outsb
push
cwtl
jo
fisubrs
mov
call
pusha
mov
shrl
mov
mov
data16
shrb
scas
daa
aas
addb
push
mov
or
xchg
mov
scas
mov
movsb
sbb
les
sub
mov
ljmp
sbb
inc
inc
je
vmread
sub
dec
loop
out
adc
mov
dec
shrl
jle
jecxz
pop
js
add
mov
imulb
pop
mov
cmc
sbb
dec
xchg
popf
xor
xchg
lret
pop
mov
adc
inc
clc
pushf
sarb
jno
and
add
dec
stc
cmc
and
jl
pop
xor
shll
pop
into
outsb
pop
pusha
dec
inc
cmp
pop
xor
jne
movsb
and
out
dec
sbb
rolb
push
popf
mov
and
daa
cli
mov
imul
jg
outsb
sarl
clc
jle
and
cld
movsb
jmp
inc
inc
sarl
push
and
stos
aaa
or
test
jecxz
xchg
jb
jmp
imul
inc
inc
std
jle
push
sub
adc
dec
jne
cmp
and
dec
cmc
sbb
xchg
stc
rcl
jp
dec
dec
imul
nop
jmp
push
notb
pop
pusha
lret
lahf
pop
out
or
jecxz
ret
pushf
and
cmp
sbb
jo
mov
cvtps2pi
mov
cmp
jle
in
dec
pop
xchg
cmc
mov
sub
aad
dec
xchg
inc
shrl
hlt
pop
lea
les
cmp
push
or
aaa
sub
dec
mov
nop
add
std
adc
push
push
outsb
sbb
gs
mov
push
pop
cs
inc
xor
jge
hlt
push
sub
mov
lea
sub
mov
out
mov
xor
push
jg
cmc
rcrb
jb
or
testl
popa
push
and
out
jge
rcll
mov
stos
sub
mov
aas
xor
dec
inc
out
inc
orb
movsl
lret
dec
sbb
jae
std
enter
int
cmp
inc
faddl
gs
sarb
es
clc
inc
pop
enter
das
rclb
cwtl
sub
xor
fisttpll
es
cmc
test
iret
or
sub
call
test
popa
call
hlt
notb
sbb
dec
loopne
pushf
adc
rcll
and
sbbl
add
sbb
dec
push
mov
shrl
scas
ja
xchg
jecxz
pop
shld
clc
xchg
cmp
or
and
mov
test
cli
sub
adc
aas
sbb
xlat
js
test
jmp
ja
mov
lods
xchg
aad
pop
stos
lods
ret
popf
mov
mov
xchg
push
out
dec
shlb
ret
out
add
inc
cs
sbb
dec
sbb
push
mov
pop
sbb
hlt
push
push
shl
mov
stos
adc
mov
pop
arpl
push
daa
out
add
and
cmp
pop
repz
int
push
dec
pop
lcall
in
lahf
movsl
lods
in
idivb
mov
jl
jmp
mov
xchg
xchg
jecxz
notb
scas
dec
loopne
adc
rclb
in
shl
repnz
jmp
std
idivl
fistps
mov
or
out
jl
es
or
adc
fdivrp
in
decb
cwtl
stc
mov
out
ret
je
dec
dec
cmp
inc
push
notl
das
push
dec
dec
and
jno
add
mov
jg
movsb
outsl
imul
sub
push
cmpb
bsr
mov
mov
mov
js
pop
shrl
push
fwait
mov
push
mov
push
cmp
int
inc
or
dec
repnz
cmpsl
inc
push
sbb
fidivs
xchg
xchg
stc
ret
test
out
pop
jg
mov
std
add
mov
dec
daa
sbb
insl
push
inc
mov
push
adc
xchg
jne
cmp
jle
mov
leave
rol
les
iret
sub
sub
mov
push
inc
leave
lret
arpl
dec
loopne
or
test
ja
and
jae
sub
push
mov
flds
fcompl
pop
or
ds
add
movb
sub
mov
inc
loopne
jne
jne
faddl
imul
xchg
out
divl
jge
ds
inc
je
stos
out
fcompl
hlt
jmp
adc
push
enter
mov
add
sub
lcall
movsb
sub
scas
dec
pop
mov
inc
mov
mov
mov
ret
mov
mov
stos
push
add
add
sbb
mov
lock
les
aam
dec
shl
dec
mov
out
lds
push
and
xor
inc
lods
jne
call
clc
popf
sbb
sahf
or
leave
push
shll
inc
scas
cmp
in
push
loopne
inc
dec
cmp
inc
push
mov
imul
push
mov
cmp
or
inc
inc
sub
shlb
or
sub
or
cmp
adcb
aas
fiaddl
jbe
inc
rcrb
mov
inc
or
inc
fsubrl
sub
sub
xorb
mov
test
mov
aad
andl
push
out
add
hlt
loope
sub
movsl
dec
sub
pop
rcrl
loope
ds
cmc
mov
mov
incb
dec
rcl
daa
inc
mov
xchg
fimuls
inc
xchg
ds
sbb
adc
push
dec
inc
fldenv
push
sarl
daa
jg
cmc
and
dec
cmp
sbb
mov
adc
ret
arpl
je
mov
sub
xlat
gs
inc
pushf
and
pop
nop
dec
mov
mov
inc
cmp
xor
ret
test
inc
arpl
inc
cmp
stos
push
inc
cmp
dec
xchg
push
and
inc
cmp
and
add
test
in
insb
mov
mov
inc
jle
cmp
and
add
or
sub
xor
xor
scas
cli
incb
inc
dec
sahf
scas
mov
or
shll
cmp
xchg
mov
ss
cld
test
mov
cli
inc
out
sub
sub
cld
and
xchg
out
leave
add
adc
and
push
es
inc
sub
mov
push
inc
pop
xlat
mov
insl
inc
jbe
push
ds
add
add
gs
pop
sbb
aam
push
sub
sub
dec
rcrb
inc
xchg
jo
sarb
roll
mov
pop
aaa
pop
cli
lds
sti
daa
out
test
mov
scas
push
xchg
pusha
add
mov
lds
sbb
les
xor
push
and
xor
pop
lods
push
mov
cmp
pop
adc
insb
push
sti
adcl
lds
or
sub
or
mov
and
mov
shlb
fisttpl
cs
jle
push
xor
hlt
push
jnp
cmp
fiadds
cmc
inc
lods
xchg
ja
xlat
test
loopne
dec
scas
js
dec
jp
pop
in
jno
mov
ret
cs
gs
rcrl
lods
icebp
out
xor
jle
jno
mov
or
stos
mov
out
lds
jge
loop
out
mov
scas
jg
dec
cmp
pop
push
aaa
shll
xor
dec
outsl
fsubrl
sahf
xchg
or
int
lods
js
hlt
sbb
cld
int
aas
xlat
cmc
inc
push
inc
ds
aad
mov
in
aam
pop
dec
and
rcrb
jl
adc
adc
pusha
lahf
add
loopne
aas
mov
jbe
in
pop
cmp
add
mov
test
cwtl
pop
cmp
in
pushw
xor
and
pop
cwtl
fldcw
inc
lret
xchg
inc
fdivl
mov
jl
lret
rolb
and
pop
xor
and
in
push
dec
sbb
iret
sbb
sbb
jne
sarb
mov
mov
inc
das
adc
inc
jno
loop
mov
or
cli
dec
jg
push
add
mov
mov
lds
in
scas
addr16
dec
shl
sbb
or
mov
mov
loope
out
mov
inc
ret
jns
pop
sub
push
js
jl
or
les
jmp
popf
fnstsw
es
shlb
fimull
mov
rorb
rolb
lds
aad
cli
mov
popa
xchg
adc
bound
cmp
push
iret
adc
mov
inc
xlat
test
or
movsl
dec
lahf
sub
iret
sub
call
fldl
or
inc
jno
lcall
imul
stos
or
ljmp
pop
ss
fadd
out
cmp
mov
mov
das
pop
ret
lods
mov
es
push
sbb
inc
fdivrs
or
xor
fcoml
push
or
pop
addr16
and
add
fsubl
inc
push
shll
leave
push
cmpsb
cmp
orl
negb
cmp
sbb
push
imulb
in
jno
hlt
repz
mov
xchg
push
cli
adc
int
lea
pushf
packsswb
stc
pop
pop
or
cs
xor
dec
test
sub
inc
sarb
lret
popf
lods
jmp
mov
sbb
and
jae
ds
scas
out
test
pop
jo
jb
mov
js,pt
cs
or
xor
aam
and
test
gs
loop
add
push
dec
sarl
fadds
push
test
dec
push
push
push
fiaddl
pop
shlb
xlat
xor
cmp
mov
mov
std
sub
call
sub
loop
add
jg
mov
stos
dec
push
mov
push
lods
rolb
mov
push
lahf
ja
movsl
pop
test
dec
sub
mov
decl
xchg
insl
mov
mov
xor
ja
sbb
fisttpll
mov
or
nop
inc
sub
mov
and
jl
pop
movsl
out
xor
arpl
mov
clc
fcoml
cmp
test
lret
leave
or
das
xor
pop
xor
into
inc
xor
aaa
or
shrl
loop
dec
push
leave
jne
mov
mov
push
sbb
xor
mov
gs
push
shll
ljmp
mov
dec
inc
negb
mov
test
dec
dec
dec
inc
mov
mov
lret
and
cmc
shll
cmp
jmp
incl
dec
mov
pop
push
push
adcb
pusha
sub
dec
sarl
cmpb
mov
test
jg
sub
scas
xor
cmpsb
and
and
loope
popa
into
lods
fcoml
dec
mov
add
xchg
andb
fbstp
cmp
add
les
sub
and
xor
aaa
mov
andl
jmp
imul
add
sub
fcompl
les
std
jmp
inc
dec
jmp
std
cmp
mov
adcl
loope
sub
pop
adc
fldcw
and
pop
fmull
aas
stc
xchg
mov
push
movsb
arpl
test
pop
mov
or
mov
jno
or
ret
adc
inc
mov
push
mov
xchg
dec
jl
sub
lods
add
insb
mov
in
arpl
sbb
test
loop
and
sbb
adcb
icebp
jae
loopew
dec
inc
cmpl
xchg
ficoml
mov
popa
faddl
pop
xor
xchg
mov
jp
enter
repz
and
inc
aas
mov
or
mov
loope
cmp
bound
dec
jae
test
sub
jp
popa
inc
and
push
mov
xor
pop
sbb
bound
mov
jne
pop
push
movsb
jge
sahf
orb
and
into
mov
stos
jno
and
adc
pop
int
push
dec
iret
add
push
mov
mov
lods
mov
and
pop
aam
enter
subl
pusha
xor
push
mov
ja
jbe
jb
jne
gs
lods
pop
js,pt
cmp
fnstsw
push
cmp
mov
test
lds
pop
stos
sub
jbe
mov
outsl
mov
push
mov
sarl
and
add
push
jne
adc
xor
sub
lea
xor
mov
pop
jg
ljmp
push
dec
add
add
cmp
jns
add
mov
push
int3
adc
aam
and
ret
xchg
aaa
xor
imul
outsl
rcll
pop
add
scas
pop
cmp
and
or
popf
dec
cs
mov
sub
add
sub
iret
addr16
imul
stos
inc
jl
rcll
mov
mov
daa
stos
mov
std
pop
sbb
jne
in
adc
mov
inc
movb
add
and
inc
adc
inc
adc
dec
inc
xchg
push
sbb
movsl
mov
jne
add
pop
sbb
ss
stc
out
stc
lea
mov
jb
in
push
pop
hlt
dec
inc
jge
or
add
mov
cmc
push
or
fsubrl
inc
jo
cmp
adc
dec
ret
xchg
inc
cmp
int3
jnp
inc
int
inc
leave
sbbl
test
into
leave
cmc
je
ds
sub
decl
iret
subl
xchg
inc
repnz
bound
pop
lods
mov
cmp
rcr
jle
shll
shlb
push
cli
aas
cmpsb
sbb
popf
sub
jo
call
sbb
or
cmp
lods
jo
push
aam
test
cmp
pushf
xor
bound
fadds
lock
cmpsl
jecxz
ja
adcl
sbb
push
push
les
add
mov
and
add
jle
add
cmp
js
inc
jae
jge
idivl
addr16
or
pusha
xor
xor
mov
and
insb
mov
jmp
cmpsb
fnsave
insl
mov
sbb
inc
test
adc
out
mov
or
fcomip
outsb
test
push
lcall
in
in
popl
mov
clc
push
mov
or
jecxz
sub
mov
mov
jle
and
cmp
out
rclb
sub
jg
mov
shll
stc
imul
cmp
mov
cmpsb
or
xor
push
ja
cmp
inc
jne
push
jp
mov
push
stos
js
shrl
xor
das
test
fiaddl
jae
cs
mov
jmp
je
scas
dec
pop
pop
sub
mov
ljmp
int3
lret
or
stos
push
jbe
adc
sub
inc
inc
push
inc
push
cmp
stos
fdivs
roll
outsl
xor
cltd
dec
les
cmp
push
jp
lods
push
mov
add
in
xor
pop
jmp
jg
testl
inc
pop
mov
jmp
addr16
xchg
aam
fcoml
sub
rcll
adc
iret
out
ret
out
xor
div
xchg
les
fstl
fsubs
adc
out
xor
dec
fs
shrl
xlat
inc
cmp
mov
rorl
fmulp
and
sub
sar
push
add
fildll
xor
push
lods
leave
call
rorb
inc
push
loop
lds
mov
inc
pop
cmp
adc
lock
cld
mov
jno
int
or
ds
sub
test
inc
jmp
xchg
cmpsb
aad
sbb
inc
inc
add
stos
mov
mov
sarl
dec
pushf
xor
sarb
xchg
rdmsr
pusha
gs
jnp
cli
mov
mov
or
and
movb
les
orb
xorl
xor
jb
adc
cmp
scas
adc
sub
enter
push
jmp
sbbb
mov
pop
imul
cs
mov
cmp
es
push
jb
fnsave
sub
push
pusha
fdivr
add
ja
sub
mov
xor
dec
aas
out
jle
in
loopne
popa
sub
lds
stc
sti
cmp
pop
xor
scas
test
xor
loope
push
nop
push
pop
mov
andl
loopne
lods
sub
ja
es
aad
jbe
imul
lret
jnp
hlt
inc
hlt
enter
cli
lds
sti
cmp
pop
xor
inc
add
in
push
add
xor
cmpsb
dec
cwtl
push
jmp
into
pop
pop
pop
and
dec
mov
loopne
xor
inc
and
repnz
push
aas
popf
sbb
adc
int
jb
jbe
sti
push
fldt
hlt
add
shl
xor
cmp
lods
stos
call
jne
cmpsb
test
dec
pop
and
clc
dec
popf
and
dec
cmp
sub
sub
inc
or
es
shl
inc
in
gs
xor
dec
jo
mov
dec
or
xchg
mov
shl
push
add
jg
jnp
or
and
dec
arpl
dec
scas
cmc
mov
adc
cmp
mov
and
pushf
ret
and
movsl
pop
push
mov
dec
ljmp
sub
clc
pusha
les
adc
test
loop
aaa
push
jno
cwtl
dec
inc
test
repnz
hlt
addr16
dec
and
aam
sub
fiaddl
js
lds
push
nop
call
lods
test
push
in
jmp
mov
cmp
arpl
jg
push
dec
addr16
or
lea
mov
in
fstps
popf
adc
push
jns
daa
sub
mov
mov
lods
hlt
mov
out
scas
sub
push
outsl
cmp
outsb
ja
loop
arpl
cmp
adc
pushf
mov
clc
ficoms
insb
stos
xchg
dec
inc
xchg
lahf
xchg
or
test
pop
push
nop
dec
add
mov
push
subb
cli
dec
inc
mov
inc
mov
xor
lcall
fdivs
fst
fldt
js
lret
popf
push
jl
and
add
mov
dec
and
jp
int
popa
sub
jns
shll
lods
les
push
mov
pushf
adc
push
mov
cmpl
fsubrs
push
ret
shl
aaa
mov
add
mov
inc
dec
xor
xor
sbb
daa
std
std
inc
popf
add
mov
aaa
fildl
push
mov
push
cs
enter
jmp
dec
pushl
cs
lret
stos
pop
les
mov
mov
icebp
xor
xchg
je
jle
addr16
push
das
push
mov
push
pop
add
aam
jno
sbbb
push
inc
push
shll
inc
shl
and
or
lock
xchg
lret
ror
or
sub
outsl
or
add
subl
jno
sub
fs
std
mov
fisttpl
dec
shlb
movsl
mov
cwtl
push
test
popf
xchg
mov
mov
sbb
in
xor
mov
es
movsb
fsubrl
dec
dec
scas
ret
scas
insb
add
outsb
add
stos
mov
cmpsb
cmpsl
adc
inc
cmp
std
mov
and
dec
movd
lret
or
rcrb
or
ljmp
gs
std
std
mov
push
inc
mov
hlt
or
lock
dec
xchg
xchg
push
clc
dec
push
jno
hlt
loopne
inc
inc
push
sbb
jp
push
insl
jnp
test
push
jmp
aam
and
add
push
leave
pop
push
jg
mov
or
mov
sahf
adc
mov
scas
mov
lcall
jmp
inc
mulb
sub
inc
insb
fiadds
lock
cltd
das
or
popf
xchg
addb
stos
xor
fbstp
inc
pop
inc
inc
int
mov
pop
jge
loope
pop
cmpsl
and
dec
xchg
mov
lock
xchg
scas
and
hlt
sahf
mov
dec
jle
hlt
call
fsubl
xor
aas
clc
push
push
push
int
jmp
jge
inc
mov
mov
aas
inc
adc
push
or
or
mov
inc
sub
insl
or
arpl
mov
xchg
pop
jbe
add
fdiv
in
insb
scas
sti
inc
lret
cmp
sbb
mov
push
out
add
scas
dec
dec
hlt
or
bound
push
and
push
shlb
mov
out
ds
sahf
in
dec
add
jns
or
scas
outsb
aas
hlt
or
test
jg
data16
imul
je
cs
mov
sub
out
aaa
inc
push
icebp
or
and
rcll
enter
fdivp
inc
add
int3
in
jle
pop
jl
ss
add
jp
dec
dec
movsb
jns
addb
test
int3
adc
jne
push
rcrl
scas
jl
jge
cmpsb
addr16
inc
or
mov
fsubr
jg
outsb
jae
jnp
std
in
pop
cmpsl
mov
jns
sbb
jno
or
lahf
dec
sub
adc
leave
add
xchg
outsl
push
adc
fs
addb
es
jge
lahf
lds
cs
cmp
scas
inc
addr16
iret
cwtl
cmc
cmp
pop
pop
inc
std
aad
es
jge
shld
push
mov
aaa
orb
enter
hlt
in
leave
sub
inc
inc
mov
adc
mov
and
hlt
movb
inc
roll
push
test
xchg
dec
mov
lds
inc
popf
fsubl
ljmp
lret
movsb
lret
fldenv
cmc
pop
jl
jp
call
jge
fldenv
mov
roll
enter
rolb
pop
mov
pop
lret
xchg
mov
mov
arpl
repnz
popa
cmp
push
adc
aam
xor
movd
movsl
or
pop
cmp
iret
ljmp
jge
cs
fdivl
enter
mov
lock
fwait
scas
jg
scas
cmc
xchg
xchg
adc
incb
rorb
mov
lods
stos
push
adc
mov
mov
pop
cmp
divb
fs
aas
rcrb
insb
xchg
sub
pop
xor
cld
sbb
xorb
push
test
add
jl
dec
test
test
dec
das
push
mov
cmpsl
nop
cwtl
orb
addr16
mov
repz
lret
lock
das
std
out
add
sub
ljmp
add
sarl
cmc
pop
les
add
mov
int
pop
xchg
xor
les
lods
test
dec
lods
and
rolb
daa
cmovns
rclb
push
sbb
push
xchg
cmp
xchg
sbb
in
and
add
mov
push
dec
sub
cmpsb
sahf
sub
xor
mov
adc
xchg
movsb
pop
and
ds
xchg
xor
enterw
add
fs
and
dec
xlat
hlt
sbb
ljmp
xor
ja
mov
push
adc
hlt
pop
mov
insl
sbb
jg
dec
xor
stos
pop
jmp
inc
shll
ds
sub
push
push
cld
rorl
inc
xor
sbb
ss
loope
sub
fsubs
jp
pop
dec
jae
test
and
pop
fistps
test
fwait
push
inc
cmpsb
sahf
enter
push
ja
idivb
xor
loope
repz
ss
adc
sub
sbb
add
sahf
or
stos
dec
repnz
pop
test
mov
outsl
movsl
ret
push
jl
outsb
pusha
popa
sub
mov
imul
sti
push
sub
dec
rclb
out
cmpsl
imul
push
xor
hlt
mov
push
aad
leave
mov
inc
adc
dec
cltd
sti
movsb
cmc
cmp
jecxz
lret
outsl
push
push
mov
pop
insl
in
pop
push
sbb
sbb
pusha
and
sbb
sub
cmpb
mov
or
inc
adc
inc
adc
popf
add
es
sahf
jmp
sti
jne
pusha
aam
or
sete
or
sarb
cmp
test
xchg
psubw
cmp
mov
jg
sbb
fucomip
mov
jle
xlat
jno
jne
movsl
inc
xchg
pop
loop
int
cmp
mov
movsb
enter
fstl
fdivrs
fmull
dec
scas
int3
mov
jbe
inc
hlt
icebp
xchg
jne
jg
lea
test
jne
clc
stos
lret
jae
push
hlt
ficomps
add
jecxz
mov
inc
add
test
andb
adc
icebp
and
cmpsb
sub
add
xorb
cmp
jo
cmp
cmp
sbb
lret
ds
xorl
cmp
cld
shr
imul
incb
xor
adc
inc
mov
or
shlb
jno
nop
xchg
push
jmp
ret
sbb
cmp
sbb
repnz
cmp
out
stos
out
adc
xchg
and
xchg
popf
cli
lea
ror
add
and
arpl
mov
scas
mov
sub
lock
sti
add
push
inc
sarb
pusha
mov
sub
dec
cmp
jne
mov
jnp
add
fsubs
and
in
jle
imul
imul
mov
adc
in
push
push
xchg
or
and
inc
fbstp
ljmp
stos
sub
sbb
hlt
mov
mov
jne
mov
xchg
sbb
les
inc
aad
out
xor
push
sub
outsl
shr
dec
loop
lock
jge
pop
push
push
lahf
fildl
mov
icebp
js
cmp
add
into
pop
add
jmp
jbe
roll
cmpsb
cmp
sub
cmp
inc
andb
popf
sub
dec
rcl
mov
add
mov
sbb
sbb
sti
cmp
test
inc
loop
imul
adc
ftst
leave
push
mov
inc
imul
dec
inc
xor
cltd
inc
das
dec
add
aad
out
icebp
int
inc
fbstp
sbb
or
inc
insb
sbb
test
fcomps
mov
dec
cltd
sub
cli
lds
add
jecxz
xor
inc
je
mov
sbb
dec
test
cwtl
or
or
mov
loop
pop
add
xor
jg
aam
test
dec
cmp
jo
xor
sub
jge
push
mov
dec
lret
sub
cli
pop
xchg
stos
xchg
rolb
mov
out
test
jmp
dec
or
sti
mull
xchg
rorl
frndint
xor
xor
jl
out
pop
rcrl
cmp
popa
push
jne
call
xchg
mov
dec
xor
in
sbb
dec
xor
pop
enter
es
sub
and
jmp
or
sarl
pop
jo
stos
daa
xchg
add
int
jns
roll
clc
mov
shrb
test
ja
call
mov
popa
jg
push
das
push
xchg
dec
dec
nop
xlat
jns
mov
fucomip
loope
sbb
nop
cltd
push
push
jecxz
adc
cmp
push
out
xor
jne
xchg
pop
mov
pop
pop
nop
push
push
fisttpll
push
pushf
loopne
test
lcall
push
rcll
rolb
sahf
cli
sub
popf
mov
popa
xchg
cli
in
mov
sub
insl
in
scas
call
adc
mov
push
xchg
aas
adc
xchg
out
xor
push
mov
xchg
add
nop
and
jge
fsubrs
movsb
add
rol
cld
pushf
add
stos
mov
sbb
adc
cwtl
xor
push
clc
arpl
push
sbb
push
shrl
inc
mov
mov
lds
jmp
cmc
call
push
pop
aad
push
jl
addl
and
das
jge
imul
jl
bound
inc
imul
test
pop
jle
cmp
enter
xor
adc
sub
ds
pop
inc
test
cmpl
sub
std
push
and
fidivrl
pop
inc
dec
fdivrs
outsb
mov
test
popa
ja
es
aas
andl
sahf
ja
gs
mov
push
jae
inc
jno
mov
push
push
lret
or
test
xor
jnp
ret
aam
push
fsubl
inc
outsb
test
test
lock
fsubrl
aam
popf
cltd
pop
or
inc
mov
rorl
movsb
rcll
push
sar
shrl
addr16
andl
scas
sub
or
scas
and
push
dec
pop
lock
pop
outsl
xlat
gs
pop
shlb
xor
and
push
dec
xor
mov
loope
pop
aad
inc
inc
push
insl
sub
sarl
jae
jns
jnp
addr16
cmp
cmpsl
dec
shrl
or
cld
mov
pusha
repnz
xor
dec
rcrb
loopne
cmpsb
dec
mov
dec
mov
lahf
shl
mov
sti
movsl
mov
pushf
push
xorb
xchg
mov
push
gs
mov
cwtl
jge
push
jl
pop
mov
push
push
push
xchg
lret
push
cwtl
in
jno
dec
inc
jno,pt
jns
jl
push
dec
imul
lret
hlt
imul
push
pop
js
pop
mov
mov
fstpt
daa
fcoms
inc
pusha
inc
jne
push
into
sbb
mov
jns
or
mov
lahf
lret
cmp
and
pop
mov
test
dec
add
mov
xor
inc
shrl
mov
adc
insl
sub
fidivl
out
sahf
loop
mull
cmpb
enter
or
into
mov
test
dec
xorl
jmp
outsl
push
pop
inc
adc
daa
or
out
jo
push
adc
xchg
mov
push
gs
hlt
sti
dec
hlt
lret
or
push
ror
pop
push
xor
push
mov
mov
out
arpl
das
dec
movsl
daa
aad
inc
or
gs
sbb
sti
inc
add
fdivl
inc
jnp
or
or
lea
jg
adc
rcll
cmc
cwtl
arpl
xchg
jne
and
je
mov
push
ljmp
adc
leave
test
ljmp
jne
adc
add
sarb
aaa
sarl
sbb
subl
inc
xorl
fs
lret
hlt
xchg
pop
dec
mov
sub
enter
lds
xor
scas
gs
sbb
sbb
fs
ljmp
xchg
fimull
dec
dec
add
mov
ss
push
pusha
aaa
xchg
adc
mov
das
mov
testb
sarb
mov
jl,pt
xor
ds
stos
xchg
pop
test
jg
test
xchg
ret
leave
sarb
lahf
sti
mov
push
ret
xor
and
aad
in
pop
dec
subb
les
dec
stos
jl
xchg
or
flds
jmp
dec
jg
movsb
push
scas
sub
push
or
adc
mov
pop
sahf
aas
movsl
pushl
lods
jp
cmp
scas
enter
imul
xchg
mov
fsubrl
fisttps
in
lods
pop
mov
add
dec
ljmp
fcom
cs
jmp
mov
out
repnz
sbb
ljmp
decb
lahf
push
cwtl
sahf
orl
push
cmp
outsl
xor
jns
mov
loope
fsubs
jae
cmpsl
jns
popl
sbb
loope
rcrb
push
cs
xchg
cltd
adc
cmp
adc
mov
dec
dec
popf
and
sbb
dec
stos
arpl
sarb
mov
out
aad
scas
cmp
push
add
add
or
in
mov
inc
fwait
lret
shlb
shll
jecxz
jno
xor
push
sti
sbb
out
mov
mov
sbb
inc
fs
shl
aam
pop
sub
fwait
shl
dec
push
ja
sahf
gs
loop
shlb
lret
add
ret
jecxz
jle
mov
lea
es
jnp
push
hlt
je
mov
pushf
cli
mov
ja
and
jl
jg
pop
or
imul
jle
ds
adcb
ret
sub
mov
pushf
and
ret
fldz
xchg
test
sbb
adc
mov
out
mov
movsb
ja
rorl
xor
sbb
xchg
insb
dec
pop
jg
xor
pop
inc
and
pusha
fsubr
std
das
sarl
adc
inc
fmuls
and
xchg
add
loope
pop
scas
aaa
rclb
push
cltd
ja
jge
sbb
dec
std
lret
cwtl
dec
aas
push
or
mov
adc
sbb
and
cmp
ljmp
loope
and
sti
sub
inc
jne
xor
addr16
mov
cmp
ret
fdivs
xlat
je
push
aad
mov
pop
mov
or
cmp
ja
mov
and
xchg
pop
push
rcr
jno
push
push
ror
xor
or
jne
cltd
mov
xor
add
mov
mov
aad
cmc
bound
cmp
mov
repz
dec
inc
ficomps
lcall
mov
dec
mov
stos
xor
scas
outsl
mov
fildl
inc
pop
sbb
lret
push
jmp
hlt
sbb
repz
mov
inc
sbb
mov
inc
push
xor
lret
or
inc
outsb
jg
scas
add
cmpsb
xchg
movl
push
and
repz
sbb
lret
cli
mov
jns
inc
and
jne
inc
mov
adcl
and
aad
icebp
sub
stos
lds
data16
pop
fcomps
jle
adc
movsl
jnp
leave
mov
and
dec
mov
insb
push
movsb
scas
dec
inc
sbb
inc
inc
outsl
frstor
dec
mov
xlat
pop
daa
push
xchg
sub
add
inc
fsub
shrb
jle
fldenv
sti
sub
dec
jbe
repz
mov
cmp
push
pop
and
popf
jle
mov
inc
push
shrl
shlb
stos
dec
jp
jge
push
hlt
scas
xor
cmp
outsb
jo
push
pop
sti
addr16
or
inc
inc
lret
in
jmp
lcall
xor
xor
mov
mov
jns
add
pop
sbb
iret
or
aam
test
add
mov
ljmp
adc
loop
ret
ffreep
aas
cmp
nop
xor
xor
popa
movsl
inc
sbb
data16
rcrl
pop
adcb
inc
adc
dec
scas
inc
into
fmuls
xor
hlt
push
mov
adc
jle
stos
fsubrp
les
jae
add
xor
aam
mov
test
movsb
jne
mov
rol
cmpsb
mov
adc
es
pop
cmp
loopne
sub
jmp
pop
sbbl
jae
mov
add
push
mov
notl
or
sub
pop
adc
fnstenv
addl
in
jge
fistpl
jb
stos
cltd
sub
imul
pop
imul
inc
mov
pop
xor
arpl
adc
cmpsb
push
jecxz
xchg
outsl
and
or
lods
pop
aam
xlat
xlat
fisttpl
dec
sub
aas
in
insl
loopne
in
test
push
push
jg
enter
jl
xchg
je
sub
cmp
adc
push
clc
lods
mov
inc
shll
push
pusha
sub
mov
enter
mov
xchg
movsl
cmp
mov
mov
dec
js
call
push
pop
dec
popf
sbb
sbb
pop
pop
std
cwtl
mov
lods
lahf
loope
jnp
orl
in
fcompl
arpl
movsl
ljmp
mov
pop
jo
add
in
in
inc
insb
enter
xlat
loopne
data16
fstpl
mov
pusha
fsubr
movsl
pop
ret
nop
repz
aad
mov
dec
popa
dec
push
mov
pop
hlt
ljmp
and
add
inc
xor
jge
ljmp
jbe
aas
pushf
pop
fildl
scas
jns
std
dec
aam
sub
or
les
scas
in
jmp
xchg
into
fsub
mov
xor
insl
inc
test
adc
mov
and
sbb
jmp
push
jne
iret
dec
fs
or
add
shll
cmc
sarb
push
es
or
out
addl
lds
int
add
lcall
xchg
bound
adc
sbb
lret
sub
pop
sub
push
push
pop
test
pop
stc
andb
cli
popl
add
aam
push
dec
dec
mov
dec
movsl
cmp
subb
jb
enter
rcr
jp
push
add
cmp
dec
movsb
imul
jns
add
cmp
sarb
addr16
shlb
adc
cltd
imul
lds
xchg
pop
cmp
fdivr
mov
or
jne
jnp
jno
adc
dec
movsl
int3
pop
mov
and
pop
scas
lahf
pop
jo
stos
xor
push
mov
shl
in
ljmp
fdivrl
enter
inc
arpl
jne
adc
pop
dec
lock
inc
xchg
or
test
fsubrp
jno
faddl
mov
and
nop
xor
cmp
sti
cwtl
jmp
add
in
sbb
jmp
pop
ja
lods
and
scas
push
test
xchg
or
rclb
mov
jns
push
push
xchg
movsb
mov
fsubs
les
shr
and
dec
leave
fucomi
xchg
mov
jne
hlt
add
push
mov
mov
mov
mov
lock
jge
and
push
dec
pop
cmp
xchg
add
inc
lods
xor
int3
pusha
stc
mov
fcoms
cld
jmp
andb
and
ds
push
dec
sub
cld
frstor
inc
mov
inc
aas
int
imul
test
xchg
jecxz
fnstcw
negl
add
push
mov
xacquire
cmp
dec
add
jge
dec
mov
loopne
push
dec
rclb
out
or
jmp
iret
inc
lahf
dec
sub
sbb
fsubl
mov
test
dec
fucom
popf
mov
test
es
inc
aam
repz
xor
sub
mov
sti
inc
push
addr16
das
or
popa
dec
aas
mov
imulb
sub
mov
cmp
inc
dec
mov
fsubr
test
add
inc
fnstsw
fptan
add
sub
insl
jbe
jg
sub
nop
inc
out
mov
cmp
jle
mov
es
fidivrs
test
jl
inc
out
int3
mov
jle
push
mov
fidivrl
lret
out
inc
ss
xor
in
aam
or
inc
pop
in
icebp
adc
ja
sbb
icebp
add
xlat
inc
ds
int3
mov
xlat
and
jle
mov
arpl
loope
pop
or
inc
sub
leave
xor
pusha
hlt
ljmp
enter
inc
sub
jne
adc
addr16
or
stos
adc
inc
es
arpl
add
ficompl
mov
test
jbe
jbe
mov
leave
ja
xlat
scas
jnp
xor
ret
leave
sti
inc
jnp,pn
fnstsw
das
fs
cmpsb
lahf
xor
std
dec
pop
hlt
or
inc
adc
insb
xor
xchg
xor
adc
sub
or
out
rclb
aas
sarl
loope,pt
pop
and
mov
pusha
std
test
jl
hlt
sbb
iret
call
out
mov
inc
or
gs
pop
out
aam
pop
shll
lock
rorb
ljmp
pushf
pop
lret
push
ds
xor
bound
sub
daa
push
imul
mov
roll
pop
cmp
xor
jmp
negl
or
cs
mov
dec
push
jge
push
loopne
push
dec
inc
sarl
shl
insb
movsl
inc
jne
push
jle
mov
push
dec
jge
scas
ja
sub
das
lds
fimull
mov
xchg
lods
sub
fldcw
popf
movsl
xchg
das
push
and
fld
jmp
das
test
clc
mov
daa
int
pop
aam
pop
shll
js
movsb
repnz
mov
mov
lcall
aam
loop
and
mov
jns
repnz
dec
enter
lret
pop
pop
iret
push
and
mov
es
mov
push
dec
in
out
cltd
push
inc
sub
and
mov
fs
cmpsb
neg
dec
ficomps
xor
dec
mov
gs
inc
jg
fs
iret
dec
movsl
sub
xor
ljmp
jnp
je
push
ljmp
out
and
mov
push
mov
adc
inc
and
stc
inc
cmpsb
flds
aas
sub
adc
add
xor
sbb
cmp
and
mov
dec
jle
xor
or
aas
hlt
es
lds
loope
add
fnstsw
xor
cmp
enter
inc
mov
adc
jmp
cmpsb
and
sti
ja
sub
mov
mov
mov
popf
sti
mov
push
push
jno
mov
xchg
dec
push
xor
inc
clc
pop
sub
and
jg
sar
jnp
ds
add
std
jmp
push
loop
movsb
and
dec
dec
inc
pop
xor
scas
mov
outsl
mov
incb
sub
cltd
inc
addr16
lods
fwait
addl
int3
arpl
das
pop
iret
sti
fsts
addr16
fimuls
push
mov
adc
sub
out
mov
lret
push
shll
cmpsb
jg
push
scas
xchg
xchg
call
daa
outsl
mov
dec
cmp
add
mov
xchg
inc
mov
es
movsb
ret
cltd
jge
orb
call
mov
test
push
arpl
xchg
outsb
pop
setne
inc
lods
aad
and
cmp
lahf
pop
push
pop
jnp
xchg
nop
rol
imul
rcrb
dec
xlat
pop
sbb
lds
dec
aaa
jle
and
cli
outsb
add
data16
jge
xchg
mov
jmp
push
mov
mov
cld
cmp
movsl
aam
mov
movb
sbb
das
hlt
jo
push
sahf
adc
ja
cmp
mov
sub
fs
out
stos
xor
lods
pop
pop
sbb
push
add
incl
dec
push
jecxz
and
adc
mov
add
push
push
sub
jae
out
inc
jnp
rclb
into
fildl
push
push
cmp
cmp
pop
cld
jo
ljmp
jp
test
pop
decl
cmp
adc
push
mov
sbb
flds
idivb
sbb
cmp
dec
repz
in
xor
mov
or
xlat
and
fs
dec
fidivs
xchg
xchg
fisubs
hlt
popf
add
push
insl
xor
mov
call
mov
inc
rolb
push
mov
insl
pop
mov
pop
xlat
out
push
int
ret
aam
jns
sub
inc
add
or
sub
iret
roll
jge
rorb
and
add
inc
xchg
add
jns
test
sub
sub
add
cmp
xchg
mov
dec
xchg
andb
jno
mov
xchg
push
loop
pop
and
lahf
or
pop
loopne
cs
jbe
imul
pusha
mov
fcomp
cmp
insb
jl
push
iret
mov
inc
and
or
je
or
ret
test
mov
mov
jp
and
mov
fmul
dec
pushf
push
pusha
add
ljmp
mov
sub
mov
shrb
dec
cmc
cs
sbb
cmp
push
push
jg
arpl
mov
and
dec
shr
xchg
lahf
mov
pusha
xor
or
xor
dec
jno
test
xchg
sub
push
imul
ds
gs
daa
mov
fwait
fs
movsb
jne
push
jae
cmp
pushf
pop
fcmovu
iret
lea
sbb
mov
leave
cmc
xor
js
sub
vmulss
mov
xchg
push
aas
cmp
sbb
mov
push
test
mov
or
fisttpll
das
rorl
stos
adc
sub
mov
cmp
push
push
adc
repnz
cmp
mov
dec
fcompl
rorl
cmp
fsubl
sbb
arpl
test
popa
shlb
mov
int
stos
sbb
loop
xchg
pop
lar
adcl
rcrl
dec
ret
inc
jae
sub
imulb
lahf
lea
inc
pop
cmc
inc
sub
movsl
inc
mov
fldl
sub
nop
mov
jecxz
add
in
mov
push
call
fcomps
stos
dec
cmp
roll
push
dec
out
ffree
jne
and
lea
popa
xlat
aad
cmp
test
enter
jmp
mov
nop
iret
leave
rcll
gs
pop
mov
dec
cmp
fbstp
mov
sub
outsl
cltd
push
data16
imul
cmc
mov
leave
out
push
sub
shrd
loope
ja
cltd
dec
push
and
loope
fists
push
daa
sbb
imul
add
xchg
or
subl
cmp
add
cmc
cmp
arpl
out
cmp
movsl
sub
lods
push
dec
repnz
jae
movl
leave
movsl
mov
pusha
xchg
out
adcb
mov
mov
js
stc
shlb
dec
cmc
into
xlat
cwtl
pop
mov
mov
mov
mov
xchg
push
cmc
xchg
adc
xor
push
cmp
dec
xchg
outsl
out
jns
mov
xorl
and
lret
loop
test
movsb
out
sbb
push
sub
and
or
js
mov
push
jnp
hlt
inc
in
jl
or
sub
stos
inc
xor
jb
pushf
push
fildl
xor
mov
adc
xor
fwait
lcall
into
mov
add
push
add
and
adc
enter
and
xor
fs
gs
or
leave
movsl
cmp
and
or
mov
dec
dec
ret
inc
enter
cltd
sti
push
pop
addr16
lret
xchg
xchg
sub
cs
add
dec
scas
shl
lea
mov
dec
ret
jl
cmc
mov
sbb
sar
mov
add
cli
and
dec
mov
mov
dec
pop
loope
and
fs
pop
mov
imul
pop
call
fs
std
bound
and
jno
lret
cmp
je
add
xchg
jnp
call
lcall
pop
shl
jns
scas
cmp
push
pop
jge
lods
fldt
testb
sub
movsb
push
jp
mov
and
int
arpl
push
lret
sub
dec
or
rolb
add
cmpb
mov
subb
clc
sbb
dec
pop
push
jnp
sbb
inc
push
scas
jne
add
pop
xlat
lret
push
mov
fcom
dec
test
cmp
ja
out
pop
test
mov
add
xchg
push
test
mov
adc
mov
add
popl
pop
mov
pop
mov
dec
add
movsl
inc
xor
aaa
push
inc
cs
mov
jbe
push
push
add
rclb
jo
hlt
clc
sbb
ret
das
mov
or
dec
inc
mov
roll
cld
cli
jb
in
shrb
in
imul
xchg
xchg
into
aam
pop
shld
mov
mov
js
dec
inc
loop
shrb
adc
mov
fsubrl
xlat
jne
inc
inc
fnstsw
fildll
les
sub
jne
psubsb
push
jge
xor
and
shrb
test
adc
ret
push
insl
mov
mov
dec
add
rcl
mov
mov
incl
movb
xor
and
jb
push
inc
adc
fcom
jne
movsb
adc
mov
jle
aam
sub
fsubl
adc
jns
inc
dec
movb
imul
jmp
stos
hlt
pop
lret
and
testb
inc
mov
pop
fisttpl
ljmp
ss
bound
xchg
gs
sbb
rclb
sub
sub
sub
stc
test
inc
xrelease
leave
mov
fisttpl
fwait
ret
pop
mov
dec
les
outsl
scas
je
mov
pop
cwtl
xchg
sarb
mov
pop
and
ret
iret
cmc
add
push
xlat
inc
ja
fprem1
jno
fsubs
data16
stc
mov
and
sub
aaa
outsb
lret
and
mov
and
aas
jg
lcall
inc
push
push
js
mov
lods
sub
adc
fldt
dec
mov
stc
push
cmp
mov
mov
inc
mov
je
or
jnp
sahf
dec
lock
or
lcall
jb
js
push
jne
adc
call
xor
pop
cld
aaa
movsl
hlt
and
pop
in
into
xor
into
sahf
mov
push
arpl
inc
jo
adc
pop
test
fistpl
adc
sub
pop
movsl
adc
cmp
repz
jns
fadds
xchg
and
es
inc
shlb
es
or
cmp
sbb
inc
movsl
xchg
testb
push
xor
fildll
fsubr
inc
xchg
mov
leave
adc
dec
add
sub
jecxz
mov
push
dec
push
xchg
adc
pop
mov
sbb
outsl
inc
les
dec
aas
dec
movsl
mov
jbe
jne
js
push
mov
inc
je
daa
inc
dec
ljmp
mov
mov
add
cmc
sarb
gs
cmp
cltd
add
int
inc
dec
jnp
subl
and
dec
jle
movsb
xchg
jmp
sbb
mov
sub
ss
int
mov
shl
and
cmpsb
imul
imul
test
arpl
insl
je
and
ja
or
test
je
and
cmp
push
jae
push
std
xor
sbb
inc
mov
scas
enter
sbb
jbe
jecxz
and
jle
xor
cmp
jne
mov
leave
jg
fdivs
pop
das
cmp
in
aaa
pop
outsl
jge
or
shlb
scas
sub
inc
hlt
lahf
test
mov
cmp
shl
push
and
cmp
and
mov
push
pop
hlt
jo
or
mov
xor
in
xchg
sahf
movsl
mov
xor
rolb
add
gs
int3
enter
jmp
pop
push
fisubrs
leave
test
imul
sub
add
imul
add
hlt
add
inc
mov
dec
fwait
das
and
clc
ljmp
test
or
jno
cmp
dec
cs
mov
inc
js
ljmp
popa
pop
xor
jns
jb
lea
js
and
fdivr
pop
inc
and
xchg
jne
xchg
ja
arpl
cmpl
dec
push
mov
out
mul
cmp
stc
add
aam
inc
fnstsw
add
mov
cmp
mov
xchg
push
lcall
or
sub
aam
sbb
in
adc
or
pop
jbe
mov
repz
push
xor
decw
sbb
and
add
push
rorl
sti
add
sbb
repnz
lahf
movsl
jmp
jg
popf
leave
xchg
shl
or
push
ror
negb
sbb
cmpsb
adc
outsl
xchg
sub
in
dec
push
leave
ja
jbe
data16
cmp
icebp
shll
fldl
insb
inc
jns
xor
stos
dec
push
lahf
ds
in
es
sub
scas
mov
decl
or
xor
push
rcl
jg
int
cltd
ja
setae
xor
addr16
lds
mov
movsl
je
loope
test
push
jne
enter
mov
cmpsl
cmp
insb
out
not
dec
dec
cmp
in
into
movsl
ss
cmp
dec
sub
xchg
sbb
xchg
and
sbb
add
jb
cli
sub
jge
xor
addb
jbe
mov
stos
pushf
out
lret
pop
in
cli
nop
out
aas
sub
jp
xchg
addl
jge
insl
test
stos
mov
in
cmp
push
fidivrs
rcll
pushf
cltd
imul
fsubl
ret
lods
aas
lock
fstpt
in
adc
jle
movsb
xor
dec
mov
pop
xor
ds
dec
ljmp
and
cmp
inc
lock
xchg
loop
pop
inc
test
lods
cmpsb
jae
push
lcall
jae
xorl
or
shlb
jae
imul
aas
mov
ds
sub
lea
mov
push
cmp
push
ljmp
lret
sub
cmp
in
jnp
mov
and
rclb
mov
push
arpl
cmc
sub
cwtl
out
aaa
ja
dec
cmc
mov
shr
mov
rorl
inc
int3
jmp
aam
stos
mov
cmp
add
mov
or
jnp
sub
cmpsb
loopne
test
cli
jmp
adc
or
cmpsl
dec
ret
adc
mov
aas
rcll
mov
test
stc
and
xor
cmp
les
jle
iret
jne
subb
push
leave
inc
mov
or
arpl
es
pop
jne
and
and
mov
dec
faddl
jp
ret
mov
sub
ljmp
pushf
dec
out
xor
subb
xor
leave
ljmp
ficoml
add
inc
cld
shll
scas
aad
adc
and
fdivr
jp
in
inc
inc
and
in
cmp
sub
movl
mov
inc
or
jl
xchg
cmc
xor
pop
sub
popa
lock
call
es
xor
or
mov
adc
int
cmp
mov
jno
sub
adc
jg
sub
and
daa
push
arpl
ficomps
dec
add
inc
dec
and
xor
lds
mov
push
adc
ret
cmpsl
jne
or
jae
movsb
jmp
xor
aad
sbb
stc
jl
add
inc
cli
and
movsb
xchg
mov
stos
inc
mov
arpl
test
jle
push
dec
xor
pop
mov
xlat
sub
test
out
stos
test
pushf
arpl
sbb
xor
fcom
dec
popf
and
fadds
mov
rcrb
mov
cli
int
cwtl
js
fisttpll
divb
add
inc
mov
dec
adc
xchg
jne
in
cltd
adc
addl
inc
add
dec
jnp
add
je
sub
leave
cmp
insl
lcall
dec
je
jle
jp
and
dec
cmpsb
sbb
lds
dec
or
inc
push
dec
mov
in
sbbb
movsb
popf
xorb
mov
popa
pop
mov
leave
xchg
leave
addb
cmc
mov
jle
out
add
dec
popl
xlat
mov
inc
sub
add
mov
pop
add
jno
cmp
test
jns
ss
les
mov
cmc
cmp
pop
les
addr16
inc
pop
js
out
dec
jno
dec
and
inc
cmp
repz
push
xor
and
ret
outsb
dec
cmp
push
dec
add
stos
gs
out
cwtl
mov
aas
dec
adc
mov
cmc
movsb
mov
adc
mov
scas
popf
xchg
int
push
xor
cmp
cltd
sbb
pusha
rorl
xor
cli
push
jge
jne
int3
jge
mov
jae
psubsb
inc
std
lods
ret
sub
inc
dec
add
add
inc
lret
inc
inc
rorb
push
mov
dec
in
inc
xchg
ret
mov
jb
push
dec
mov
jg
in
je
call
pop
hlt
insb
sahf
scas
add
add
decl
popf
pop
jae
sahf
sub
imul
imul
lcall
sbb
xor
aam
add
push
sarb
imul
xchg
inc
enter
or
add
je
jmp
cltd
jo
pushl
jns
mov
sub
mov
test
cmp
cmp
inc
cmpsl
sahf
lahf
or
cmp
push
add
mov
inc
inc
rolb
insb
dec
jno
les
mov
and
fsubr
out
mov
mov
js
mov
sbb
xchg
push
and
dec
daa
cmc
addb
mov
subb
scas
xor
cmp
inc
or
add
in
test
inc
ret
add
and
outsl
movsl
mov
sub
test
aas
xchg
roll
cmp
loopne
pusha
mov
popa
mov
and
addr16
mov
pop
mov
and
mov
mov
loopne
lods
inc
testl
popf
out
in
xchg
iret
inc
mov
sahf
ss
jbe
aam
xor
test
push
add
cmc
mov
pop
aas
adc
mov
and
je
mov
pop
push
les
add
pop
les
divb
ret
inc
enter
cltd
adc
aas
jns,pt
rorl
mov
pusha
lods
rolb
or
inc
dec
or
lea
das
mov
and
in
sahf
sbb
cmp
arpl
shrl
mov
pop
jmp
movb
dec
sti
pop
mov
jns
pusha
aad
xchg
les
cmp
ja
es
mov
push
nop
inc
out
lods
or
inc
cmp
jb
scas
push
xchg
or
cmpsb
out
mov
movsb
mov
js
cs
jbe
jns
inc
pop
repz
in
test
fxch
aad
pop
mov
loop
test
ja
inc
adcb
int
sub
dec
mov
push
cmpsb
rcrl
clc
hlt
leave
mov
xchg
int
push
inc
pop
pop
xor
test
sbb
pop
dec
sub
cmc
call
jns
ret
int3
sbb
mov
inc
imul
push
inc
and
jne
dec
rolb
inc
scas
fwait
insl
cwtl
mov
and
xor
push
push
xor
jne
call
std
ds
mov
enter
and
or
push
std
fs
insl
sub
jne
add
rcl
pop
aam
mov
jae
inc
push
push
jae
aas
xchg
addr16
jnp
mov
sbb
fdivrl
mov
scas
loope
leave
in
cmpsl
sbb
jno
es
pop
ss
xchg
push
adc
and
movsb
jnp
aas
sub
xor
sub
ja
and
ror
mov
hlt
cmp
xchg
ja
in
jge
dec
sbb
pop
dec
out
jge
mov
outsl
pop
pusha
pop
cmp
jnp
lds
data16
shll
cmc
fucomp
std
mov
pop
xor
ret
cmpsb
dec
sbbb
jno
loopne
and
inc
xchg
shl
das
cs
xchg
test
rcrl
jne
push
xor
insl
inc
and
add
inc
jge
push
inc
jg
sub
aaa
daa
push
inc
sub
push
add
shr
sub
push
aaa
mov
scas
rclb
aas
mov
out
mov
fcmovbe
mov
sbb
xchg
dec
movsl
ds
rclb
nop
or
shrb
and
insl
aas
xlat
sbb
je
aam
das
out
and
add
mov
int3
inc
popa
fsubr
sarl
inc
icebp
adc
icebp
insb
add
cmp
mov
shl
bound
daa
or
rcrb
aas
scas
pusha
cmp
jmp
cld
jo
lods
push
jge
out
stos
jl
mov
mov
hlt
in
xchg
push
jno
cmpsb
jmp
inc
adcb
inc
mov
mov
push
sub
sbb
loope
call
or
cmpsl
push
jge
and
xor
dec
push
jl
cmc
stos
loop
adc
pop
aam
lahf
pop
imul
imul
stos
push
and
inc
and
mov
mov
pusha
push
imul
pop
mov
jge
insb
and
cmc
leave
push
iret
add
syscall
sub
inc
push
ror
lea
inc
pop
lods
push
push
sbb
pop
in
push
cmp
xor
lret
mov
test
inc
pop
in
jmp
mov
mov
pop
testb
into
inc
cwtl
mov
jl
adc
dec
leave
fsubrs
adc
mov
push
dec
pcmpgtd
push
xchg
rorb
mov
pop
push
icebp
xor
push
fdivrl
mov
imul
aam
scas
ja
movsb
add
cmp
mov
lahf
pushf
sub
test
xor
in
into
and
hlt
dec
or
mov
jl
sbb
ja
dec
cli
insl
movsl
jno
aas
int3
adc
icebp
addr16
push
nop
sbb
aas
cld
flds
pusha
fisubrs
mov
lahf
daa
sbb
test
jnp
test
hlt
dec
movb
aas
clc
adc
movsb
cld
jno
sub
addl
mov
jp
fmuls
int
cmp
jg
repz
inc
jns
jp
mov
push
int3
add
int3
fadds
jg
adc
push
jle
mov
gs
mov
inc
dec
sub
dec
push
inc
xchg
imul
and
ds
sub
dec
jne
imul
push
jp
or
or
popf
push
fsub
sarb
sbb
mov
mov
xor
dec
loope,pt
scas
sbb
movsl
xchg
mov
aad
scas
jmp
loopne
imul
push
xor
jnp
push
jecxz
sub
dec
sarb
shlb
sub
dec
jmp
aam
daa
add
add
mov
push
lret
xchg
and
or
mov
jae
mov
lret
popf
push
ljmp
shl
es
sbb
std
push
stos
aas
shrl
add
cmp
jae
and
lea
mov
inc
out
outsl
sahf
pop
jae
lret
mov
mov
and
clc
scas
arpl
data16
dec
inc
or
data16
xchg
push
mov
add
xchg
cmp
dec
cmp
leave
xchg
add
jecxz
out
insl
dec
inc
add
or
cwtl
mov
push
outsb
ds
jmp
adc
sbb
push
rcpps
xlat
mov
aaa
dec
push
or
es
push
or
clc
adcl
cmp
and
pop
push
dec
inc
scas
lock
imul
jl
adcb
fcoml
hlt
lock
dec
or
mov
xchg
xchg
addr16
jne
or
pop
jge
in
mov
stc
das
mov
addr16
aas
pop
outsl
push
or
xchg
stc
xchg
je
sahf
push
xlat
and
push
dec
stos
outsl
imul
xchg
add
in
fnsave
jecxz
push
out
and
jge
cld
fcompl
mov
inc
fidivs
popa
rcrl
iret
stos
lods
mov
push
sbb
test
shrd
add
sahf
std
enter
dec
add
jp
jg
sub
cmc
js
cli
leave
fistpll
cld
mov
fsubrl
xor
ljmp
test
je
sub
in
pop
test
sbb
rcrl
mov
lds
mov
push
add
jne
in
scas
or
cltd
imul
mov
xor
inc
aas
jns
int
jno
stos
imul
push
or
add
cli
push
xor
sub
je
sub
push
loop
mov
imull
push
ljmp
mov
and
jne
or
scas
inc
add
mov
cmp
mov
stos
test
adc
xchg
adc
and
push
xchg
cli
roll
rorl
add
add
popa
mov
pop
es
out
xor
shr
mov
pop
ss
in
mov
popf
sahf
xlat
bound
xchg
addb
fildll
movsl
fstpl
xlat
inc
lods
xor
jle
fcompl
mov
jne
daa
movb
iret
jne
sahf
inc
push
aaa
sub
xchg
bts
pop
negb
inc
inc
lds
pop
mov
fwait
or
in
jns
inc
test
pushf
mov
cmp
fwait
inc
cmove
sbb
inc
pushf
cltd
andl
xchg
sub
test
push
jne
jp
cli
outsl
jmp
jnp
xor
mov
sarb
clc
lods
pop
test
mov
xor
dec
stc
shll
pusha
push
jns
inc
icebp
sbb
dec
scas
cltd
clc
jp
sub
dec
push
fstp
shr
ret
pop
ret
sbb
sbb
dec
sub
cmpsl
inc
mov
and
sti
sahf
pop
push
and
xlat
xchg
xor
xchg
xchg
or
jno
push
jb
gs
in
movsb
xchg
pushf
add
jmp
cmp
cmp
xchg
fstps
pushf
jns
imul
jp
mov
adc
jne
test
ja
shrl
leave
add
mov
and
fmuls
xchg
jne
sarb
aaa
xor
cld
cmpsb
mov
sti
and
jmp
hlt
mov
data16
mov
ret
pop
rcrl
add
rcr
out
jg
pop
addb
in
cmp
and
push
subl
and
pop
test
arpl
xchg
sub
jne
pop
imul
lods
lea
enter
idiv
aam
xor
fsubr
mov
jb
daa
imulb
add
lds
outsl
inc
bound
addb
loope
pop
or
dec
pop
arpl
inc
adc
cmpsl
popa
test
sub
rorl
or
fwait
icebp
add
xchg
jecxz
mov
jmp
ds
lahf
jecxz
cwtl
cmpsb
movsl
lret
pop
mov
enter
hlt
lcall
xor
push
in
imul
rol
ds
dec
lahf
out
dec
mov
roll
in
dec
into
fcmovnbe
xchg
clc
scas
jnp
adc
xchg
roll
adc
sbb
jnp
out
mov
call
cmp
loope
mov
jp
andl
mov
xor
jge,pn
and
out
shrb
mov
pop
bound
sub
mov
jne
fwait
and
sarb
cltd
les
xchg
dec
fldl
dec
aam
jp
std
xor
dec
rcrl
mov
aad
inc
stos
subb
pop
mov
enter
dec
mov
and
jmp
mov
cmpsl
ret
jle
sub
cmp
cs
hlt
sub
dec
aas
inc
push
addb
inc
mov
sub
pushf
hlt
adc
daa
sarl
mov
test
aam
test
dec
inc
out
enter
cmc
rcll
gs
jge
xorl
sub
sub
push
xchg
subl
and
inc
out
jb
push
lds
jne
xor
shrl
and
mov
push
inc
insl
test
push
jo
push
mov
movsl
leave
movl
cmpsb
stc
sub
xor
mov
jnp
movsb
push
sbb
fstps
or
xor
imul
add
xlat
pop
add
pop
ret
cmc
pop
mov
cmp
shll
adc
incl
jecxz
or
dec
out
outsb
adc
jbe
out
fldenv
clc
push
pusha
fidivrs
or
push
sbb
xchg
adc
mov
in
dec
repz
cli
loop
and
nop
jb
adc
xor
movsb
stc
push
lret
xchg
outsl
mov
sarl
aas
lret
mov
es
inc
mov
mov
int
rolb
adc
inc
imul
push
fucomip
cmp
cltd
hlt
cmc
or
and
sub
add
sbb
movsb
ljmp
inc
or
adc
sbbl
mov
ljmp
adc
inc
xlat
in
add
out
test
shll
adc
rorb
gs
push
pop
or
movsl
push
xor
aam
adc
xor
in
push
sub
test
mov
jne
sub
pop
and
aam
fdivs
shlb
movb
pop
std
stos
mov
jge
ljmp
push
and
aam
jmp
sub
aaa
popf
xor
es
movsb
jle
jo
jmp
fcmovnu
loop
jo
addb
out
xlat
cmp
aaa
decl
mov
test
push
daa
jle
dec
add
dec
es
or
mov
enter
pop
adc
inc
xchg
jg
push
dec
leave
test
pop
and
aad
inc
xor
mov
push
inc
dec
dec
insb
leave
dec
push
dec
scas
cmc
cltd
in
pop
arpl
sub
dec
imul
fcoml
xchg
ret
test
lods
jo
xchg
fsubr
dec
sbbl
mov
cld
and
or
ljmp
inc
stos
mov
sarl
or
lods
push
in
mov
xchg
inc
or
cmp
add
sub
pop
stos
sub
pop
cmp
push
loop
mov
push
dec
aad
shr
jg
xor
dec
decb
cmp
pop
jnp
cmpsb
or
jae
cmpsl
jns
es
dec
cmp
popf
jne
or
dec
xor
xor
xor
in
into
loopne
call
dec
dec
dec
dec
ds
adc
push
xor
sbb
in
sbb
out
xchg
mov
jle
and
sub
pop
mov
pusha
popa
aas
mov
negb
xor
popa
or
aas
dec
cmpb
dec
inc
jg
std
mov
inc
mov
adc
lods
rclb
test
cmp
and
mov
jl
jp
cwtl
in
mov
and
test
dec
test
es
dec
jnp
fbstp
push
pop
into
in
jge
sbb
pushf
sbb
in
out
rorl
pop
sahf
inc
mov
cs
jp
pop
movsl
mov
scas
cmp
inc
ror
rcll
push
xor
dec
rorl
sub
and
xchg
int3
lods
gs
dec
test
test
push
loope
in
iret
cmpsb
sub
mov
enter
pop
pop
dec
lret
and
dec
nop
ret
lret
adc
mov
jno
push
or
cmp
pop
aad
sarl
inc
into
xchg
pop
push
and
adc
leave
xchg
dec
xchg
leave
dec
xor
xor
arpl
lea
dec
and
test
test
dec
jbe
xor
rol
mov
fcomps
pop
xor
lock
stos
test
dec
inc
pop
mov
mov
add
movsl
cltd
dec
cmpsb
daa
mov
inc
mov
mov
sub
shrb
bound
lds
push
imul
leave
inc
add
push
pop
and
xor
and
lds
dec
push
inc
leave
jg
inc
je
insb
and
xchg
and
xor
and
inc
and
and
push
lcall
and
daa
push
pop
and
inc
icebp
leave
js
inc
jae
imul
and
xor
or
push
and
and
arpl
and
cmp
ss
daa
dec
pop
push
push
and
jl
stc
push
lds
bound
lahf
rorb
lcall
popf
xor
daa
dec
leave
pop
lds
mov
jecxz
dec
add
dec
xchg
push
popa
and
jae
jp
and
push
dec
dec
push
push
pop
and
xor
cmp
xchg
push
lahf
and
jnp
inc
loop
dec
push
push
pop
dec
and
and
orl
mov
mov
push
arpl
and
sub
push
stos
aas
or
push
push
pop
and
push
cmp
push
mov
leave
jns
jae
imul
dec
nop
push
mov
cmp
pusha
mov
and
push
fs
lcall
push
cmp
xor
push
and
xchg
xchg
push
jle
and
add
mov
and
sub
and
push
push
and
leave
jns
inc
or
leave
lcall
push
dec
fldcw
dec
es
and
dec
lds
inc
je
cmp
lahf
push
sub
push
push
and
js
push
jae
insl
addr16
pushf
dec
xchg
push
nop
and
cmp
xor
push
and
push
dec
and
leave
jne
imul
fwait
push
nop
and
and
sub
es
and
and
inc
push
jp
and
push
popa
dec
cltd
push
nop
and
cmp
sub
and
push
push
and
inc
push
jp
and
push
pusha
dec
cltd
push
xchg
and
cmp
xor
loopne
push
jle
inc
roll
xor
push
pop
dec
push
push
dec
and
jne
insl
push
arpl
sarl
and
lds
inc
push
aad
ja
insb
and
xchg
add
push
xchg
dec
dec
dec
push
dec
and
dec
and
and
adc
sbb
int
lds
dec
fs
in
nop
or
push
or
or
push
nop
or
adc
inc
daa
adc
les
ret
inc
push
inc
and
inc
push
int3
dec
cwtl
lea
dec
aaa
lds
test
leave
push
push
dec
and
addr16
lds
gs
pushf
push
xchg
and
test
xor
cmp
and
sahf
push
push
dec
inc
in
dec
and
push
and
and
mov
cltd
popa
push
fs
jae
jnp
mov
push
and
push
daa
dec
sub
or
cwtl
push
sahf
dec
fs
insb
and
inc
out
dec
and
push
and
sub
xor
aas
or
gs
outsl
dec
jns
jg
inc
jae
dec
lds
push
and
mov
cmp
mov
imul
mov
dec
test
jecxz
mov
int3
xchg
sub
out
mov
dec
repz
ds
loop
sbb
mov
cmpl
pusha
cmp
dec
jns
stos
fdivs
pop
sub
das
and
je
mov
in
stos
or
xor
pop
mov
pop
pop
pop
daa
dec
cmp
mov
dec
pusha
dec
shll
cmp
push
ds
add
mov
xor
add
mov
cmp
dec
and
dec
mov
xor
cmp
adc
pop
add
xchg
mov
sub
shll
mov
pop
push
mov
rcl
adc
aad
es
push
cwtl
cmp
mov
xor
mov
sub
sbb
or
insl
xor
xchg
sbb
xchg
and
mov
xchg
and
rorl
dec
adc
andl
fs
lea
out
pop
andb
stos
and
mov
push
and
push
cmpsl
mov
and
es
xor
push
pop
and
test
xor
cmp
mov
bound
jp
cmp
rorl
mov
or
pop
mov
and
cld
fcomp
mov
xor
push
sub
orl
xor
jnp
xor
xchg
ret
xchg
mov
sub
dec
sub
or
and
push
inc
and
jle
cmp
push
and
and
fcoms
sub
pusha
mov
mov
xchg
popa
shrl
test
cmpsl
push
lds
stos
ss
mov
pusha
nop
test
movsl
add
mov
call
nop
int3
jno
or
xchg
or
hlt
daa
push
push
mov
jns
or
mov
dec
push
push
cli
sub
jo
sub
lcall
enter
dec
lret
movsb
imul
push
test
sbb
push
je
inc
or
xor
dec
movsl
test
cwtl
and
dec
mov
dec
inc
gs
pop
push
and
iret
cmp
idivb
sub
dec
iret
in
scas
mov
pop
lea
xchg
inc
adc
mov
push
dec
cmpsb
mov
and
xorl
xor
ret
lods
dec
sub
or
dec
xchg
test
dec
lock
cmc
sub
aaa
bound
ret
pop
mov
push
xor
xchg
xchg
loope
cs
sub
mov
sbb
sub
mov
jge
xor
xor
sbb
aam
mov
inc
ja
sub
push
test
outsl
lret
mov
lock
orb
mov
lods
and
shr
mov
ret
scas
pop
pop
xor
xor
xchg
cltd
cmpsl
cld
push
test
pusha
push
cmpsb
xor
adc
fidivs
push
sub
and
arpl
dec
mov
das
adc
mov
jo
mov
out
inc
enter
loopne
cmp
movsb
mov
inc
inc
addps
daa
cmp
in
repnz
addr16
mov
mov
dec
daa
mov
xchg
mov
mov
push
pop
push
mov
xor
cmpsb
push
push
xor
sbb
add
outsl
daa
adc
inc
xchg
or
insb
cmc
movb
sub
cmp
mov
dec
push
mov
in
mov
cmp
add
fwait
mov
mov
or
xchg
dec
mov
in
or
movsl
ja
addr16
dec
lea
sbb
fstpt
push
dec
insl
addb
repz
pop
js
cmp
fidivrs
jmp
sti
xor
mov
mov
inc
aad
fwait
add
xor
xor
adc
mov
lahf
and
pop
aad
inc
dec
dec
and
add
jae
add
test
rcll
in
gs
int
sub
stos
push
push
lret
scas
add
shll
mov
mov
movsl
pusha
pop
xor
leave
daa
xchg
es
and
xor
jge
sub
mov
cmc
mov
mov
adc
shlb
lods
out
iret
fcoms
push
out
sub
jbe
push
mov
int3
pop
xchg
repnz
pop
pop
xor
dec
test
outsb
dec
lret
xor
and
pop
mov
sbb
xor
sbb
pop
movsb
cmp
xor
fildll
cs
push
sub
mov
ss
xchg
and
movsl
roll
push
and
xor
mov
mov
lods
adcb
and
dec
sbbl
cmp
xchg
push
in
fisttps
pop
or
mov
mov
imul
ds
rcrl
scas
fstl
stc
xor
sub
or
and
aam
sarl
fs
jmp
mov
mov
inc
call
push
pusha
daa
es
mov
xchg
cmp
fs
leave
leave
inc
inc
loope
cld
decl
fwait
cwtl
push
subl
inc
xchg
jno
xchg
jnp
mov
xchg
ror
test
or
sbb
movsb
mov
pop
dec
or
outsl
and
inc
push
and
mov
dec
adc
dec
js
and
mov
pushf
outsl
xchg
add
shlb
mov
sub
addr16
rorl
fisubl
repnz
fwait
ljmp
push
xor
loope
movsb
dec
cmpsl
push
add
enter
xor
repnz
pop
in
inc
push
xor
shll
mov
stc
mov
shrl
jne
fwait
pop
dec
mov
mov
mov
push
sub
push
test
aaa
insl
shr
cmpsl
inc
pop
sub
pop
push
sub
out
pop
jo
add
rol
mov
lcall
lds
and
adc
mov
popf
pop
in
mov
cs
in
cwtl
into
mov
add
mov
xchg
xlat
push
xor
xor
leave
xor
or
push
int3
cwtl
and
sub
stos
in
pushf
or
jne
dec
inc
data16
jno
push
add
xorb
push
cmp
aam
dec
stos
aad
and
xchg
sbb
or
stos
inc
sub
cmp
sub
mov
stos
scas
cwtl
es
shrl
fs
mov
mov
xchg
lahf
repnz
les
repz
dec
jbe
movsl
bound
shl
sbb
fsubrs
sub
mov
sub
xchg
daa
xchg
cmp
mov
and
inc
fldt
xlat
dec
push
sub
push
and
sub
mov
and
cmp
inc
xchg
pop
and
sub
movsb
mov
push
xchg
cmpsl
mov
cli
cs
push
and
and
adc
xor
movsb
leave
roll
xor
dec
sar
ret
adc
push
sbb
scas
movsb
cmpsb
pusha
sbb
testb
gs
pusha
decb
out
movsl
sbb
push
fadds
push
lret
stc
xchg
arpl
and
lret
push
pop
adc
dec
rcll
inc
aad
icebp
in
xor
adc
pop
rclb
push
push
cmp
enter
mov
xchg
mov
mov
inc
mov
shrl
cwtl
inc
push
test
outsb
sub
fs
push
xor
dec
fwait
rorb
pop
cmpsl
push
bound
andb
js
les
incl
inc
dec
fmul
movsl
mov
sub
mov
addr16
mov
push
add
mov
add
fstpt
or
cld
pusha
iret
xor
lcall
gs
int
sbbb
popf
push
inc
arpl
in
out
jo
lods
and
lcall
lods
xlat
mov
mov
inc
ror
lods
jno
push
pop
es
mov
mov
popl
subb
dec
push
sub
pop
js
daa
test
sbb
nop
rcl
and
xchg
les
mov
lods
cmpsl
xchg
sub
gs
jae
pop
xchg
mov
mov
cmp
and
dec
mov
popa
cmpsb
cmp
xor
cmp
popl
dec
gs
shrl
mov
dec
fisttpll
mov
xchg
pop
add
cmpsb
ss
pusha
mov
push
inc
sbb
imul
das
mov
push
in
push
xchg
mov
or
sahf
orb
mov
mov
adc
and
rorb
push
movsb
or
rorl
inc
and
sub
stos
push
pop
mov
jae
enter
cmpsb
arpl
dec
dec
mov
push
xor
lds
out
push
rcrl
test
sub
fisttpl
rcl
movsb
sub
dec
inc
inc
lahf
arpl
push
clc
xchg
shll
enter
push
xor
and
fdivs
mov
cmp
mov
add
shl
mov
fistl
jbe
mov
dec
and
mov
dec
loop
bound
dec
mov
dec
push
or
pop
jae
mov
inc
xchg
sbb
je
adc
or
cwtl
push
das
add
lret
leave
adc
in
ss
fwait
cmp
dec
mov
pop
mov
xchg
addl
and
push
add
pop
sub
sbb
lret
movsb
test
leave
adcb
jl
std
jbe
jge
mov
cmp
mulb
outsl
incl
lret
into
push
sti
jnp
ret
sbbl
fwait
pop
enter
fcomps
incl
shll
push
sub
outsl
mov
cmc
sbb
xchg
imul
fs
pop
xchg
or
pop
lods
xchg
ja
lret
dec
jle
inc
sub
cltd
leave
shll
sub
scas
mov
push
es
std
and
fsubl
xor
or
movsl
stos
lret
movsl
sub
inc
lret
xchg
dec
mov
movsb
fstpt
mov
imul
mov
mov
dec
dec
or
fistl
xchg
movsl
stc
and
push
mov
push
mov
mov
adc
cs
push
dec
and
idivl
mov
jecxz
jo
mov
sbb
arpl
push
jecxz
mov
sub
and
imul
popa
dec
xorb
xor
sub
jnp
mov
xchg
cmp
add
dec
cmp
loop
cwtl
and
cmc
xlat
and
cmc
call
xlat
arpl
lahf
lods
aaa
inc
daa
push
and
xorl
scas
mov
lods
push
xor
les
jp
xor
enter
xor
sbb
xchg
fmull
test
cmp
orb
dec
bsr
dec
sub
clc
stos
xorb
das
mov
add
outsl
push
cmp
mov
dec
test
sub
popa
pop
cwtl
into
push
test
cltd
lahf
aad
vpsrlw
xor
pop
pop
xor
pop
loope
add
push
test
rol
xchg
dec
dec
inc
sbb
add
aaa
mov
gs
popf
xor
repz
fcompl
xchg
fsts
pop
xchg
imul
mov
mov
jae
inc
dec
imul
shrl
sub
pop
shlb
inc
mov
jne
and
insl
fimull
pop
lahf
or
ficoms
xchg
popf
mov
leave
fsubs
sub
insl
push
jne
push
inc
stos
aas
cmp
cltd
std
cmp
dec
ss
pop
addr16
pop
imul
fisubl
popf
inc
push
push
movl
dec
lahf
jge
jae
mov
jne
lods
inc
int3
gs
outsb
icebp
int3
gs
push
jnp
push
das
xchg
jne
jg
adc
gs
push
cmp
xor
adc
xor
fwait
push
lea
add
push
sbb
and
pop
cwtl
pop
into
push
push
pusha
jns
lods
pop
mov
mov
adc
inc
inc
das
push
aaa
and
insl
push
and
xor
fcomps
xchg
test
dec
cmp
or
or
jne
and
xchg
jae
and
push
push
movsb
pop
pop
sub
push
push
push
xor
xchg
pop
cwtl
pop
fimull
xchg
call
mov
inc
into
pop
fcomps
cmpl
or
cmpl
aaa
dec
mov
dec
aas
ret
shll
dec
int3
test
lea
fldt
cmp
inc
dec
mov
movsl
pop
outsl
ss
dec
mov
dec
and
mov
xor
rorl
push
nop
xor
mov
call
inc
push
and
cmp
ret
dec
push
and
mov
imul
movsb
popl
push
test
dec
mov
mov
lea
add
dec
mov
mov
jo
dec
pop
roll
push
gs
inc
leave
int
mov
sarb
adc
or
fchs
dec
dec
pop
ret
adc
or
gs
inc
fldl2t
loope
lock
push
xchg
leave
sti
int3
add
ret
push
mov
shrb
rol
push
ret
sub
inc
dec
inc
aaa
dec
rclb
jle
loopne
dec
mov
cmp
ret
push
push
and
inc
test
jae
cmp
push
inc
sub
inc
jne
and
test
inc
push
xor
xchg
jno
dec
xchg
inc
cmp
sub
test
sub
dec
fldcw
xchg
and
mov
push
push
dec
dec
and
ljmp
jne
xor
jns
leave
ror
insl
test
pop
push
in
xchg
lea
jae
mov
xchg
cltd
gs
jbe
in
dec
mov
pop
int3
sarb
jne
ja
dec
out
int
push
aad
inc
dec
push
push
sub
push
inc
cmp
add
or
xor
cmpsl
inc
shll
inc
push
jge
push
rcll
pop
and
inc
ret
shrb
and
xchg
mov
dec
adc
xor
cwtl
adc
xchg
inc
push
xor
and
fwait
mov
xchg
pop
push
dec
jl
pop
cmp
dec
dec
shlb
xchg
mov
bound
lods
jne
xchg
fbstp
ret
xor
dec
leave
divl
and
insl
movb
add
sub
pop
pushf
inc
lods
xor
adc
test
xor
add
lock
cmp
mov
sub
mov
lock
mov
dec
call
stos
adc
dec
cmpsl
add
ljmp
loopne
xchg
sbb
pop
jmp
xchg
pop
xchg
dec
repnz
xor
shll
std
push
push
pop
outsl
test
sarl
mov
movsb
stos
cmp
ret
jno
push
test
mov
stos
jae
ja
or
lds
repz
rorl
rclb
out
mov
jae
adc
xchg
iret
int
dec
jns
inc
xchg
and
sahf
daa
adcl
ja
lods
or
cmc
out
jmp
jo
pop
inc
inc
push
cmc
dec
pop
and
icebp
and
xchg
xchg
adc
xchg
push
xchg
jns
inc
mov
push
imul
dec
cwtl
inc
pop
or
mov
test
out
sub
shrl
lds
cmp
das
push
out
fldcw
xor
aas
push
cmpsl
jg
add
xchg
roll
hlt
lds
cmp
dec
ret
inc
popa
les
xchg
inc
xchg
jae
pop
mov
mov
jnp
rcll
in
daa
dec
xchg
sub
inc
leave
adc
add
jno
inc
and
orl
scas
jo
jle
inc
and
adc
in
mov
nop
cmp
dec
cmp
cmp
inc
mov
inc
xchg
cs
scas
out
inc
pop
das
inc
call
inc
fnstcw
cmp
hlt
cltd
ja,pn
out
inc
les
dec
mov
daa
out
mov
inc
xchg
pop
int
dec
or
sarb
or
sarl
dec
push
inc
lret
mov
scas
ss
aaa
dec
mov
mov
pop
push
addr16
fnstcw
test
pop
scas
add
cmp
aam
shrl
int
shll
and
pop
and
pop
mov
mov
repz
inc
test
mov
mov
or
popf
cmp
fsubs
push
sub
stos
mov
js
xor
test
lods
xor
and
sbb
out
lea
inc
and
and
mov
nop
test
dec
cwtl
push
cmp
sarl
xchg
and
mov
mov
cmp
pop
mov
xchg
cmp
push
stos
fcomp
xor
xor
and
xor
xlat
pushf
mov
sub
dec
or
ds
jg
fisttpl
push
dec
mov
dec
fs
pop
movsl
and
sbb
xchg
pop
xor
cmp
jne
jno
mov
xlat
mov
mov
xorb
pop
mov
pop
and
push
push
xor
dec
test
je
pop
aas
jne
jle
cmpsl
dec
lods
cmpb
sarl
stos
mov
lock
mov
pushf
push
dec
mov
cltd
pop
movsb
sarl
mov
js
fimull
pop
lcall
adc
sub
jno
push
inc
cmp
outsb
imul
xor
mov
add
es
xchg
inc
fs
cmp
loope
fsubrs
and
push
mov
std
mov
lea
cmp
sub
mov
mov
test
inc
and
lea
inc
aam
dec
xor
out
pop
xchg
flds
sarl
push
aad
movb
das
dec
sti
imull
push
ret
stos
cmpsl
scas
sbb
sub
lods
test
sub
inc
rcll
xlat
outsb
add
mov
cmp
push
xchg
iret
inc
inc
mov
pop
pushl
mov
mov
inc
mov
push
dec
and
mov
ret
gs
cmp
test
sub
scas
stos
mov
cmp
cmp
ja
jne
or
imul
sbb
mov
and
lds
dec
imul
shl
aas
gs
js
addb
lret
and
test
jno
imul
test
xchg
cmp
rol
dec
dec
push
push
rorb
inc
pop
cmp
rolb
dec
callw
mov
or
xchg
adc
adc
dec
jb
int
stos
cmp
mov
lods
mov
andl
sub
mov
xchg
dec
push
cmp
cmp
pop
lods
mov
push
mov
mov
cmp
sahf
push
stos
je
push
and
mov
mov
mov
movsl
dec
and
push
data16
sub
and
inc
push
cmp
fistl
dec
sub
inc
push
insl
aaa
sub
shll
popf
push
mov
xor
sarl
or
daa
rorl
cltd
and
push
lea
dec
and
dec
mov
push
xchg
cld
add
xorl
es
mov
mov
jno
or
ss
mov
jl
and
lcall
dec
cmp
mov
adcl
hlt
jno
pop
das
movsb
mov
push
xor
inc
xor
test
and
sub
js
dec
mov
push
rcrb
xchg
and
ss
inc
lcall
jl
xchg
and
xchg
adc
aaa
mov
inc
cmp
cmp
xor
cmpsb
mov
cmpsl
mov
and
mov
push
jo
ja
add
cmp
cli
out
jecxz
adc
pop
popf
outsb
xor
rclb
cmp
sub
daa
pop
std
cmp
cmpsl
and
mov
pop
xor
cltd
in
inc
lret
cmp
aad
jge
dec
pop
sub
cmp
dec
les
mov
xor
sbb
pusha
iret
into
int
mov
cmp
push
or
or
insl
rcll
popa
out
mov
jae
mov
xchg
mov
inc
test
inc
or
push
dec
cmp
test
cmp
inc
xchg
fs
or
sarl
add
xor
xorl
movsl
and
inc
lahf
xchg
push
inc
leave
ja
aad
sbb
lods
popa
dec
test
lea
push
mov
pusha
mov
dec
or
js
mov
jae
mov
fwait
xchg
mov
and
xchg
xor
sub
push
rcrb
adcl
shll
push
mov
sub
jae
dec
mov
add
pop
sub
ds
xor
insl
mov
js
and
mov
and
jno
dec
rorl
stos
sub
pop
xor
lods
sub
insb
xchg
push
insl
jmp
sub
dec
dec
and
xchg
mov
push
mov
pop
push
mov
in
popf
icebp
pop
gs
imul
inc
test
dec
shll
arpl
sbb
push
mov
and
and
xchg
and
mov
push
dec
sbb
sub
jno
rcrl
pop
aaa
sub
ret
mov
xchg
cmp
lds
test
and
lock
jge
mov
add
dec
movsl
cmp
test
sub
inc
mov
mov
cmp
jmp
xlat
ds
mov
dec
xchg
push
sbb
nop
xor
iret
push
dec
sub
aaa
test
push
jae
mov
mov
mov
cmp
les
andb
repz
into
cld
cmp
and
xlat
dec
dec
mov
mov
je
mov
mov
flds
push
push
and
mov
iret
xor
je
inc
dec
lds
adc
int
inc
das
adc
pop
sub
pop
inc
and
and
mov
cs
xchg
ret
adc
pop
in
mov
enter
xchg
cmp
sub
cmpsb
movsb
es
idivb
jb
sub
mov
call
adc
mov
sti
arpl
gs
jg
movsl
test
daa
push
mov
cmpsl
xchg
pop
jecxz
sbbl
mov
sub
or
mov
dec
shlb
repnz
in
xor
test
pop
push
sub
push
xlat
cmp
cmc
in
mov
stos
cld
sub
push
aas
cmp
jle
jne
not
pop
adc
mov
mov
mov
mov
adc
pop
or
and
dec
divb
pop
xchg
pop
pop
stc
js
dec
mov
mov
jmp
adc
arpl
out
sub
es
sbb
in
les
std
xchg
mov
xor
cmp
into
mov
pop
inc
sub
daa
test
aad
icebp
mov
adc
inc
dec
mov
mov
push
push
dec
adc
fs
fists
add
push
or
inc
xchg
lret
outsb
daa
adc
inc
bt
outsb
shrb
cmp
dec
jne
sub
adc
or
cs
inc
push
xchg
rolb
jns
cmp
aad
mov
sbb
rorb
int3
inc
clc
pop
xor
mov
pop
xchg
xchg
rorl
sub
xchg
mov
xchg
das
mov
push
mov
jge
mov
push
push
and
ljmp
inc
dec
jge
cs
inc
jo
sub
xchg
push
push
cmp
cmp
lds
add
dec
mov
stos
repz
dec
dec
stos
and
dec
repz
push
and
inc
shll
and
sub
mov
mov
movsl
mov
rcrb
test
fldenv
shrb
push
fdivr
push
xchg
test
xor
rcl
inc
push
jg
out
ror
mov
shrb
sub
and
mov
mov
xchg
pop
fadd
pop
push
push
dec
std
out
and
movsb
jmp
arpl
dec
rcrl
push
sub
inc
push
jge
inc
xchg
movsl
inc
mov
adc
cltd
dec
cmp
mov
cmp
frstor
arpl
xchg
cmp
lahf
imul
add
push
clc
pop
sbb
aas
xor
popf
mov
std
push
fidivrs
lock
stc
cmp
mov
outsl
xor
lock
xor
add
movsb
push
leave
popf
and
push
jle
pop
and
dec
shlb
leave
lret
cmp
jmp
mov
xor
xor
xor
inc
out
xchg
leave
pop
lea
xor
pop
gs
xor
pop
jge
dec
xchg
xor
xchg
pop
mov
mov
rorl
pop
pop
dec
mov
push
or
push
ret
xchg
mov
leave
mov
mov
leave
sub
cmp
xchg
and
sarb
test
in
leave
cmp
or
adc
push
and
jg
imul
ja
and
inc
insl
jnp
add
inc
inc
rorl
inc
pop
imul
or
jbe
data16
mov
cmp
and
inc
les
inc
addr16
ret
inc
add
sbb
inc
fnsave
dec
scas
jne
mov
rclb
pop
xchg
inc
inc
xchg
xchg
jo
shll
pop
xchg
push
cmp
orl
arpl
mov
sub
gs
xor
mov
push
ret
or
and
pusha
inc
inc
inc
repz
dec
scas
sub
dec
add
push
xchg
and
push
leave
dec
and
and
jnp
push
dec
mov
push
leave
dec
and
int3
push
push
dec
dec
sarl
xchg
sub
mov
push
addr16
and
and
push
inc
inc
xor
inc
ret
aas
dec
arpl
dec
ret
inc
fmull
fimull
mov
push
xor
or
and
and
push
dec
cmpsl
inc
inc
dec
rcr
dec
mov
sub
sub
test
mov
pop
xor
dec
mov
ja
cmp
mov
or
fwait
add
sbbb
fldl
aad
mov
dec
adc
mov
aam
xchg
mov
gs
inc
adc
arpl
mov
and
xlat
pop
pop
cmpsb
mov
add
sub
dec
and
faddl
sub
cmp
fldl
lods
pop
lds
push
mov
cld
adc
mov
shl
jo
mov
jns
pop
cmp
and
cmp
leave
inc
push
popa
and
sub
rol
popa
dec
inc
leave
inc
inc
inc
push
and
lea
dec
fiaddl
test
lret
push
dec
js
int
dec
xor
leave
inc
add
lea
pop
cltd
leave
ret
and
js
int
iret
std
ret
stc
dec
and
inc
or
dec
push
test
push
xchg
and
mov
jne
mov
xchg
pop
dec
leave
add
and
aas
ret
pop
mov
inc
nop
sbbl
pop
mov
les
and
and
push
jns
je
loop
test
leave
and
push
enter
dec
scas
xor
cmp
fbld
fnstenv
dec
gs
mov
jge
fs
dec
inc
inc
imul
push
call
sarl
dec
dec
test
and
popf
and
imul
lret
jg
outsb
int
leave
dec
dec
cs
pop
and
mov
xor
push
cmp
mov
and
popa
and
insl
push
push
dec
jns
shll
inc
inc
inc
xlat
or
cmp
pop
mov
inc
cmpsb
push
inc
push
xor
push
fldenv
lea
cltd
or
dec
push
gs
jno
dec
dec
jge
int3
and
inc
dec
or
iret
and
into
push
sub
and
mov
inc
popf
push
mov
and
and
push
dec
leave
and
inc
pop
push
mov
xor
movsl
dec
cmp
or
push
cmpsl
dec
insl
push
es
inc
push
sub
push
test
push
sub
sub
dec
stos
push
lea
stos
and
push
jno
lods
push
jge
sub
dec
xor
lods
push
push
das
dec
and
and
cmp
scas
test
xor
push
mov
popf
or
push
imul
lret
inc
mov
dec
push
xor
pop
mov
and
and
and
mov
or
mov
inc
dec
add
and
sub
cmp
insl
or
lea
mov
gs
mov
push
jge
lock
push
dec
enter
and
push
and
cwtl
inc
inc
sub
or
adc
leave
and
popf
test
and
and
bound
mov
mov
dec
and
mov
and
add
sub
mov
mov
insl
daa
xchg
leave
in
push
popa
dec
insb
push
insl
and
outsl
push
inc
lret
and
push
push
outsb
dec
pop
push
jo
sub
lock
xor
leave
mov
or
lds
sbbl
jne
gs
roll
stc
dec
gs
mov
mov
cmp
gs
mov
mov
mov
inc
mov
mov
pop
add
sub
cmp
into
mov
imul
sarl
inc
dec
add
push
std
pop
gs
xor
test
jae
xchg
std
popf
out
adc
insl
gs
mov
movb
pop
into
mov
xor
test
lea
mov
pop
mov
jne
jge
jo
dec
into
dec
dec
jg
add
and
xor
test
mov
popf
fidivrs
add
jne
jge
arpl
pop
rorl
push
gs
mov
mov
test
rorl
popf
ds
gs
mov
test
aas
mov
mov
and
shll
test
mov
mov
insl
jg
add
fimuls
iret
jge
add
pop
std
and
mov
mov
xchg
popf
cld
jnp
shrl
jne
gs
roll
stc
dec
gs
mov
mov
cmp
gs
mov
mov
mov
inc
mov
mov
pop
add
sub
cmp
into
mov
imul
sarl
inc
push
add
ficoms
dec
jge
les
adcl
or
gs
sbb
dec
xchg
jns
sbb
inc
popa
xchg
jns
cltd
pop
inc
sub
jns
dec
and
test
and
jno
inc
and
adc
inc
push
jns
or
inc
xchg
stc
jne
and
xor
rorl
dec
jns
dec
gs
icebp
popf
jecxz
dec
ret
inc
dec
imul
icebp
xchg
call
dec
inc
push
sub
add
enter
cltd
jmp
lea
cwtl
pop
mov
mov
mov
jns
pop
inc
pop
aas
jns
mov
ficoms
xchg
pusha
cmp
pop
inc
subl
add
mov
mov
jae
add
gs
dec
xchg
and
ret
xorl
ss
pop
test
sub
pop
mov
push
pop
xlat
test
sarl
fcom
dec
dec
xor
dec
ret
mov
sub
lret
cmpsl
xor
push
push
sub
aad
push
xor
and
push
movsl
xchg
adc
adc
test
inc
cmp
bound
add
icebp
xor
xor
pusha
stc
jg
test
sarl
and
xchg
pop
aad
pop
xor
and
xchg
push
dec
aaa
and
daa
dec
cmp
sbb
ss
scas
idiv
sub
mov
aas
dec
cltd
aaa
adc
jno
add
lahf
shrl
lock
roll
mov
int
mov
cmpl
sbb
clc
lahf
dec
mov
mov
popa
add
and
push
aad
lock
pop
push
jp
orl
ss
lods
ja
cltd
sub
jns
cmp
popf
push
sub
je
nop
scas
movsl
xchg
inc
inc
dec
push
orl
icebp
jns
shll
dec
pop
or
daa
popa
lock
pop
xor
sbb
dec
jo
inc
xor
loop
arpl
arpl
inc
cmp
lock
sbb
push
xchg
sub
arpl
adc
mov
lds
mov
jge
sub
cwtl
inc
pop
inc
and
and
roll
popa
aad
push
subb
and
inc
nop
mov
push
jne
sub
arpl
inc
insb
cmp
movsb
dec
dec
jae
aad
sub
das
scas
inc
cmp
push
imul
sbb
mov
popa
and
inc
pop
mov
mov
xchg
sub
cmpsb
jns
jno
push
jg
dec
cs
orb
dec
and
mov
push
test
pop
sub
mov
mov
shll
fwait
and
mov
outsl
xor
jno
push
xor
cmp
les
inc
sub
pushf
pop
sbb
dec
pop
and
mov
outsb
xchg
lock
cmp
pop
arpl
pop
mov
xchg
shll
shl
cmp
mov
icebp
xor
dec
lods
cmp
inc
adc
enter
inc
fwait
xchg
les
jg
pop
inc
and
jns
xchg
pop
inc
jnp
jns
cwtl
pop
inc
pop
sbb
sbb
inc
popf
mov
addl
push
aas
pop
inc
and
inc
xor
jns
mov
jns
sub
inc
arpl
insb
xor
sub
lods
push
push
push
mov
cmp
mov
and
les
xchg
cmpsb
lret
sub
fcmovnb
int
mov
push
xor
mov
xchg
dec
xor
pusha
push
jb
pop
mov
adc
cmp
push
gs
ss
mov
rorl
cmp
pop
jae
add
test
cmp
ss
mov
or
and
in
pop
mov
xor
in
fbstp
aad
mov
mov
xor
cmp
mov
ror
mov
pop
rcrb
pop
lret
push
push
lds
flds
or
lock
nop
mov
mov
mov
rcll
cwtl
das
sub
jmp
movsb
push
cmp
dec
fists
arpl
push
das
push
jle
loope
cwtl
cwtl
mov
test
lods
aaa
xchg
jle
cmpsb
push
mov
ds
cmp
in
fcompl
pusha
fwait
xchg
cs
or
sub
cmpsl
leave
test
aaa
imul
pop
stos
xor
into
jp
sub
add
aam
or
fwait
sarl
mov
mov
sub
lret
arpl
xor
cmc
mov
cmp
or
dec
push
aad
mov
enter
aad
mov
push
xchg
cmp
mov
shlb
dec
sub
sub
xor
jp
push
cmp
push
or
lret
push
test
dec
inc
sub
in
ja
inc
movsl
dec
push
mov
xchg
jmp
adc
outsl
mov
insb
push
push
fsubs
mov
insb
mov
sbb
fists
aas
mov
inc
sub
popl
mov
pop
xchg
dec
cltd
repz
jns
and
das
cmp
xchg
push
adc
mov
xor
mov
test
insb
or
cmpb
fwait
push
jns
lret
adc
xchg
cmp
mov
cmc
mov
push
das
es
mov
inc
mov
mov
int
aaa
scas
insb
xchg
scas
mov
in
insb
sbb
js
sahf
cmpsb
mov
mov
xchg
jge
mov
jo
pop
inc
cmpsb
mov
dec
xchg
test
jo
sub
clc
flds
push
fs
das
and
clc
xchg
imul
int3
roll
in
inc
mov
push
pop
push
lds
push
dec
aaa
adc
sbb
inc
jo
ret
enter
dec
inc
lds
sbb
ret
push
enter
test
fs
mov
insb
dec
inc
pop
test
dec
sti
fs
jmp
test
pop
push
push
jns
inc
push
rcrb
stc
out
push
jb
push
loop
xor
ficoml
dec
mov
or
enter
push
out
outsl
movsb
inc
sbb
adc
ret
dec
cwtl
sub
in
push
movsl
dec
dec
push
rclb
xor
jb
sub
mov
das
push
cmp
push
xor
push
jno
fs
push
mov
cmp
cmp
jno
adc
push
mov
ffree
fisttpl
push
xlat
or
adc
cmp
outsl
movsl
ja
add
cmp
push
push
push
and
push
xor
aaa
inc
shrl
mov
lret
cmp
or
incb
gs
jns
jp
sar
flds
mov
xchg
jo
mov
out
mov
adc
pop
xor
jno
inc
imul
inc
pop
cs
imul
jo
push
cmp
xor
out
out
push
aaa
sub
inc
xor
inc
sub
inc
iret
dec
cmp
mov
inc
cld
imul
aas
add
cmp
jnp
add
loop
pop
inc
pop
inc
inc
and
and
jle
imul
add
out
loop
fs
cld
push
sub
gs
pop
xor
shrl
xchg
push
sbb
cmp
xor
push
es
or
and
mov
sub
inc
loope
dec
inc
int
mov
pop
xchg
mov
aas
rcll
lret
xor
stos
cmpsb
mov
sub
rcll
out
push
cmp
mov
insb
bound
xor
lods
inc
out
push
or
cwtl
jbe
cmp
ret
mov
xchg
xor
add
or
push
divl
lret
pop
pop
inc
test
pop
xchg
aas
xor
fs
xchg
push
push
push
xchg
xchg
xor
outsl
sub
sub
push
rcrl
addr16
and
in
sub
jne
popa
pop
fwait
or
pcmpgtb
in
xor
cld
add
aam
lds
es
insb
or
movsb
mov
cmp
cmp
mov
and
insl
add
ljmp
test
and
ret
dec
mov
sbb
imul
ror
adc
push
lret
and
std
dec
push
or
daa
jg
xor
sub
lea
push
cs
mov
repz
cltd
ja
or
sbb
cmp
mov
mov
movsb
rorl
dec
push
add
hlt
dec
cmp
dec
xor
ss
sub
shrl
dec
addb
leave
pop
fsubrp
sub
inc
lahf
ficoms
pop
test
lods
cmp
icebp
insb
in
insb
sub
xor
jl
in
xor
mov
imul
adc
jo
into
mov
insb
dec
in
cmp
les
sbb
mov
mov
test
jae
filds
cmp
test
add
in
jns
xchg
cmp
and
test
dec
mov
inc
push
and
xor
addr16
add
inc
hlt
sub
pop
dec
cli
mov
dec
repz
xor
add
pop
leave
insb
mov
xchg
cmp
leave
shll
lock
jae
js
dec
push
and
xor
popf
lds
sbb
shll
test
cmpl
and
jno
scas
std
jmp
sarl
add
inc
mov
leave
adcl
dec
pop
jnp
mov
mov
jno
rol
gs
cmp
inc
ret
mov
out
ret
push
cmp
mov
inc
adc
fsubp
mov
lds
cs
aas
fwait
ret
xor
xchg
dec
rorl
repz
push
pop
push
or
out
shlb
and
push
es
or
es
arpl
shlb
jb
cltd
mov
leave
add
xchg
icebp
loop
xchg
fcmove
repz
push
mov
ret
inc
les
xor
dec
into
les
jns
inc
idivb
sbb
insb
das
cmp
and
icebp
sub
pop
or
dec
xchg
push
xchg
jns
inc
cmp
out
mov
pop
pop
cmc
dec
mov
pop
sbb
inc
dec
push
call
shll
imul
sbb
jge
inc
push
inc
cmp
cs
sarb
out
mov
iret
mov
adc
loopne
xchg
and
adc
stc
sub
ffreep
les
lcall
lret
aam
out
fsubp
test
sahf
mov
into
roll
push
add
lock
lods
les
andl
inc
xchg
cmpsl
leave
movsl
out
test
call
daa
lret
movsb
pop
movsl
es
pusha
shrl
es
dec
nop
add
xlat
mov
imul
push
hlt
shrb
xor
mov
jnp
in
ret
lret
rorb
movsl
mov
std
dec
cmp
pop
inc
das
or
leave
cmc
sub
pop
push
hlt
decl
dec
imul
mov
mov
testl
cmp
add
movsb
pop
clc
stos
cmp
push
mov
dec
mov
adc
dec
push
and
xor
sub
adc
inc
sbb
arpl
cmp
test
andl
jno
fs
xchg
mov
rcrl
hlt
test
cwtl
inc
adc
dec
rorb
popf
and
xor
inc
jl
lret
sub
and
std
xor
shl
dec
ret
inc
dec
mov
sub
shll
sub
leave
rcrb
dec
outsb
repnz
pop
inc
ficoml
and
rolb
push
jge
jns
push
push
jge
push
nop
ret
jle
adc
or
push
sbbb
daa
adc
push
scas
cmp
lods
inc
jl
mov
inc
inc
push
and
mov
pop
dec
cmp
sbb
cld
daa
inc
jno
inc
inc
jle
inc
jg
inc
movsl
cmp
xor
dec
vcomisd
fisubs
adc
rol
dec
push
into
and
and
xor
outsl
or
js
lret
lds
and
sbb
int
inc
aad
lds
sub
inc
push
dec
dec
pop
pop
andb
mov
jle
adc
and
inc
bound
inc
sub
movl
mov
sub
xor
inc
imul
inc
push
jmp
outsl
push
xor
inc
and
mov
xor
inc
inc
jae
lds
lret
push
push
dec
push
pop
sub
ss
mov
pop
push
popa
cmp
dec
ljmp
mov
popa
fcoms
addb
adc
pop
sub
and
mov
roll
ret
push
shll
xor
push
mov
jle
je
das
cmp
ret
fisubs
icebp
sarb
ret
rol
fadds
into
push
fidivrl
inc
in
push
insb
dec
insl
push
pop
sahf
cmp
movsb
adc
jo
rorl
jno
mov
gs
and
sub
fmulp
jge
std
push
and
or
js
mov
sub
and
mov
lds
inc
lds
rcll
cmpl
push
pextrw
pop
rcrb
mov
dec
dec
cmovnp
rcrl
or
inc
push
push
sub
xchg
inc
push
xchg
inc
and
daa
sub
inc
js
sbb
xor
andl
lods
xchg
ss
mov
and
sub
xor
xor
orb
pop
repnz
inc
xor
pop
cmc
and
out
push
lahf
jp
xorb
fdiv
lea
push
movsl
ficoml
inc
das
sbb
in
push
ds
xor
leavew
inc
sti
xor
fwait
inc
rolb
pop
push
jmp
mov
push
xchg
ds
stos
out
out
xchg
xor
imul
aas
fsubrs
pop
aaa
mov
movl
adc
push
or
dec
imul
adc
inc
mov
mov
pop
push
mov
inc
inc
cmp
movsl
mov
jns
add
js
outsb
jnp
lea
pcmpeqw
stos
dec
jne
xor
dec
and
sbb
sub
inc
or
mov
and
xor
and
xchg
sub
xchg
jae
xchg
test
popa
inc
xchg
add
mov
repnz
cmp
push
andb
and
cmp
and
add
mov
cmp
jbe
mov
addb
xchg
sub
mov
xchg
dec
mov
mov
mov
addb
push
push
push
add
frstor
lret
push
push
ret
pop
orl
pop
cmp
inc
jp
enter
xchg
gs
jg
test
inc
lock
aad
ss
lcall
xor
jne
daa
pop
jmp
xchg
fcmovne
roll
push
aaa
sub
inc
dec
das
dec
xchg
adc
inc
hlt
add
arpl
dec
jle
or
inc
and
dec
fs
jno
push
nop
mov
les
push
xchg
dec
dec
mov
add
mov
mov
inc
or
mov
add
pop
out
pop
inc
mov
pop
inc
cwtl
dec
sbb
xor
mov
push
fsubrl
test
jno
cltd
js
mov
stos
fcoml
and
sub
push
out
xor
xchg
mov
push
and
inc
sbb
decl
mov
pop
les
xchg
bound
pop
mov
pop
movsl
dec
sbb
les
push
sub
xchg
hlt
cli
std
enter
mov
fidivl
lea
push
sub
and
xchg
outsb
or
jbe
je
cltd
adc
xchg
les
es
inc
mov
popf
xchg
add
adcb
ja
mov
orb
jae
xchg
jno
inc
icebp
push
dec
in
int3
jp
jg
nop
xor
pop
rolb
mov
lcall
inc
sbbb
push
cmp
test
xor
popa
dec
and
mov
popf
fidivl
insb
cmp
jns
popf
jo
cmp
xchg
ss
dec
sbb
lcall
push
xchg
jmp
aaa
mov
inc
xor
sub
jno
mov
add
aaa
test
jo
xor
push
test
cmp
cmp
xor
pop
mov
fisubrs
cmp
dec
inc
leave
nop
jl
mov
mov
push
cltd
push
lahf
and
call
push
xor
dec
enter
xor
pusha
lret
mov
xchg
and
push
inc
jge
mov
or
push
stc
ret
or
dec
int
xorb
cmp
lds
ret
adc
push
inc
add
orb
decb
dec
les
pop
mov
xchg
ret
lds
fwait
push
dec
out
pop
jp
dec
std
cwtl
lds
inc
push
push
int
or
cmpsb
inc
inc
mov
inc
aas
adc
adc
inc
xor
dec
lds
cmp
data16
imul
inc
imul
xchg
inc
enter
cmp
incb
pop
sbb
xor
icebp
adc
leave
inc
roll
rolb
in
icebp
inc
in
push
and
jns
xchg
or
and
dec
mov
dec
cmp
sub
xor
and
lds
fldt
addl
les
test
bound
inc
inc
or
inc
nop
xchg
cmc
or
mov
add
or
push
inc
push
push
and
cmp
orl
ret
inc
dec
std
movsl
gs
mov
push
sar
orl
push
inc
and
xor
jno
in
ret
and
push
xchg
cmp
jge
sub
into
xchg
dec
sbb
inc
xchg
xchg
push
pusha
jmp
push
xor
push
dec
lea
leave
pop
psrlw
push
mov
rcll
jae
repnz
lds
leave
cmp
push
push
and
add
xor
sahf
inc
test
push
and
movb
xchg
aad
lods
ds
push
inc
and
push
inc
cmc
dec
test
mov
gs
jbe
aam
cwtl
push
xchg
xchg
je
inc
xchg
cmpsb
pop
push
sub
addr16
jge
inc
enter
imul
xor
inc
mov
pop
js
xchg
inc
mov
dec
inc
or
in
in
and
rorl
les
lds
daa
inc
aaa
in
sub
xchg
and
push
jne
movsl
dec
inc
sub
mov
nop
int
push
cld
into
or
mov
outsb
xchg
adc
adc
testb
xchg
pop
add
inc
jecxz
mov
fldcw
push
dec
lahf
test
or
adcl
mov
daa
inc
jbe
inc
mov
xchg
push
xor
push
or
mov
jp
cld
rclb
shlb
das
sti
and
xchg
test
push
ret
pop
jle
xor
push
inc
dec
lds
inc
dec
popa
add
divb
test
mov
mov
mov
mov
dec
test
xor
inc
xchg
xchg
push
push
xchg
std
stos
inc
cmpsl
push
mov
aaa
sti
lret
in
push
push
dec
aad
xchg
dec
xor
adc
cmpsl
nop
push
pop
movsl
jnp
inc
imul
and
fimull
inc
rcl
jo
xchg
pop
mov
cwtl
mov
or
jg
into
repnz
gs
mov
das
or
and
aaa
ret
xchg
arpl
jle
and
inc
stos
sub
pop
inc
or
mov
cmp
cld
les
xchg
inc
mov
ficomps
cmp
pusha
push
and
dec
xchg
bound
and
repz
and
nop
movsl
and
jp
and
and
inc
pushf
and
cltd
push
leave
or
dec
xor
inc
shll
cld
inc
enter
ss
ds
push
loope
movsb
shll
dec
mov
inc
addb
mov
mov
push
mov
pop
lock
and
dec
xor
sbb
inc
mov
xchg
int3
test
xchg
pop
fidivrs
and
pop
stos
mov
jmp
cli
sub
and
xor
jmp
stc
pop
pushf
cmpsl
insb
stos
mov
add
mov
inc
dec
das
pusha
jnp
nop
mov
lret
dec
mov
adc
push
ds
inc
xor
enter
jae
mov
loope
inc
or
inc
sbb
mov
int3
adc
dec
aas
enter
xor
dec
mov
cmp
inc
sbb
xor
mov
inc
sti
or
dec
sub
imul
mov
mov
cmp
pop
xor
lods
fs
inc
dec
mov
out
inc
xor
xor
inc
les
andb
fs
dec
adc
push
mov
leave
int3
mov
push
test
dec
daa
sub
rclb
iret
fwait
repz
out
sub
mov
sbb
jmp
mov
inc
mov
movl
fs
clc
stc
push
pop
mov
mov
pop
inc
inc
xchg
dec
loopne
inc
cmp
cmp
mov
mov
aad
and
fwait
gs
xlat
pop
lret
jp
inc
xchg
add
hlt
sub
lea
lret
push
les
sub
cmp
inc
inc
test
dec
mov
sbb
dec
push
xchg
cwtl
push
inc
inc
pop
pop
push
push
gs
and
push
xor
mov
inc
ret
push
lods
or
dec
sub
xchg
push
inc
and
cli
add
dec
inc
or
dec
inc
and
jns
lods
loop
pop
cltd
out
adc
push
mov
or
fadd
dec
stos
loope
pusha
or
mov
sahf
gs
xchg
cld
jnp
adc
popa
notl
pushf
and
out
dec
sahf
addb
sub
in
idiv
mov
jo
cwtl
mov
cmp
stos
xchg
in
jb
or
es
push
dec
dec
gs
push
lcall
adc
int
jns
popa
cmpsl
cmp
imul
mov
jne
cmp
inc
lds
push
fwait
dec
mov
push
dec
cltd
test
xchg
lret
leave
cli
adc
and
adc
push
dec
inc
push
orb
dec
adc
nop
push
pop
xchg
in
pop
push
popf
mov
jbe
jne
test
test
mov
lret
push
push
cwtl
jne
lcall
push
inc
pushf
in
dec
or
and
jmp
sub
dec
cli
pop
inc
scas
jl
inc
les
iret
push
fs
xchg
jl
xor
and
sbb
cs
idiv
fidivrl
test
cmp
cmp
ficompl
cmpsb
shrb
push
sub
inc
aam
or
scas
inc
inc
add
pop
movsl
inc
es
fiadds
in
clc
daa
pop
cs
ret
dec
cmp
jnp
mov
mov
push
push
push
and
jge
sub
xchg
and
ret
test
rcll
jae
xor
int
mov
inc
daa
xchg
inc
xor
aad
mov
jo
sub
int
pushf
in
lcall
in
jo
mov
aad
inc
xor
adc
dec
pop
jmp
inc
and
outsb
cltd
std
insl
imul
sub
mov
pop
jnp
stos
insl
cmp
fidivrs
movsb
dec
loop
cmc
daa
aas
mov
rep
mov
xorb
cmp
adc
xchg
and
popl
sub
xor
dec
inc
ret
dec
sbb
cmp
sbb
jns
dec
sub
cmp
fdivrp
or
jnp
out
nop
test
push
and
daa
mov
adc
or
dec
les
adc
mov
roll
xor
jge
inc
aaa
fwait
mov
fldl
mov
gs
xor
adc
adc
xchg
or
std
incb
lods
and
pop
pushf
add
gs
pusha
jp
xor
inc
arpl
xchg
jns
in
dec
mov
fildl
xor
sahf
kxorw
mov
leave
in
lcall
cmp
fldl
jae
xchg
cltd
ret
mov
xlat
cmp
push
cmp
xchg
pop
test
push
or
leave
mov
pop
push
cmp
pop
faddl
dec
clc
jns
push
inc
test
mov
roll
mov
and
js
ss
push
jns
jl
or
lret
int3
orb
jg
mov
inc
mov
insb
push
inc
orb
jne
mov
inc
test
mov
jl
cmp
xrelease
inc
dec
xchg
dec
mov
cmp
andb
insb
fsubl
jbe
mov
push
call
inc
cmp
addr16
inc
and
adc
stc
add
test
sub
or
add
inc
enter
cmp
jnp
nop
insb
dec
xor
sub
dec
shrl
rorb
cmp
push
adcb
dec
adc
mov
pop
mov
insb
ret
repz
filds
dec
xor
xor
jmp
xchg
arpl
adc
aas
jo
dec
or
xchg
jne
call
inc
dec
push
cmp
in
inc
fists
or
add
mov
test
sub
adcl
jge
nop
lds
sub
in
pop
cmpsl
pop
push
mov
aad
loop
adc
dec
xlat
and
sarl
lods
and
sub
fwait
sbb
popa
jns
xchg
cmp
popf
mov
pop
push
and
sub
sub
or
xchg
push
and
or
inc
addr16
arpl
mov
daa
pushf
push
and
ds
fwait
adc
and
sub
cmp
inc
push
ja
jp
xchg
pop
gs
sub
iret
push
lret
and
inc
xchg
dec
inc
jge
jnp
or
push
mov
lret
and
les
mov
and
cmp
pusha
add
inc
ja
mov
and
and
and
and
mov
sub
fsubl
aas
xchg
mov
sub
dec
and
xor
int
mov
and
sbb
sub
jp
add
int3
mov
bound
mov
push
out
and
xchg
inc
or
stos
js
inc
lcall
sbb
ret
inc
jge
and
mov
cmpsl
fnsave
push
adc
inc
pop
int3
xor
pop
mov
pop
and
xchg
mov
push
dec
sub
fnstsw
and
pop
ds
cmp
dec
inc
xor
testl
rcr
xchg
push
cmp
fs
jle
mov
dec
dec
dec
jecxz
cltd
sbb
js
rorb
lcall
popf
shll
in
or
push
inc
push
and
push
push
inc
lea
movsb
fwait
imul
xor
shrl
xor
lcall
sub
push
dec
mov
inc
mov
mov
fwait
adc
dec
adc
mov
mov
inc
arpl
mov
imul
fs
sbb
ds
jo
sbb
and
pop
and
pop
test
inc
andb
inc
sub
rclb
dec
and
mov
inc
mov
dec
shlb
jmp
inc
movb
imul
add
or
adc
xchg
imul
xor
mov
ds
push
lret
mov
jp
mov
inc
mov
jp
addb
mov
es
cwtl
pop
es
fisttpll
and
out
rcll
add
pop
dec
and
fs
dec
arpl
fnsave
sub
inc
pop
enter
packssdw
mov
mov
inc
es
dec
mov
inc
add
jle
pop
lahf
mov
pop
dec
inc
ficomps
mov
xor
or
xchg
push
adc
sbbl
jp
movsl
iret
pop
bound
mov
cmp
pop
inc
mov
int
fldenv
sbb
test
inc
mov
jne
adc
decl
cltd
js
push
lea
cmc
sti
repnz
addr16
stos
xchg
xchg
xor
sarl
jno
test
xlat
cld
insl
mov
je
jl
imul
ret
sub
adc
test
out
or
call
jne
xor
stc
mov
lods
jne
out
leave
or
sub
cmp
push
sahf
mov
mov
pop
sbb
add
dec
pop
dec
je
daa
pusha
inc
sarl
pop
addr16
aaa
mov
dec
mov
cmp
push
mov
mov
call
test
fs
jbe
adc
inc
xchg
push
punpckhdq
fs
cmp
shll
mov
das
push
fisubs
int
decb
clc
sub
cmp
pop
ret
inc
mov
xchg
push
push
xor
push
mov
cmpb
arpl
arpl
dec
imulb
cmp
cmp
xor
arpl
and
mov
addr16
push
sbb
pop
or
ss
lds
mov
icebp
push
dec
xor
das
xor
push
pop
rolb
aam
into
fldenv
fimuls
insl
and
fildl
pop
dec
xor
gs
lds
mov
lds
sub
push
rclb
jne
push
fwait
jmp
xor
inc
cmp
inc
leave
xchg
dec
inc
ret
and
cld
inc
lea
and
lds
test
leave
xchg
push
sub
and
push
jae
and
dec
inc
inc
cmp
leave
xchg
dec
inc
dec
push
xor
leave
mov
jge
das
dec
inc
popa
push
push
enter
ja
sub
fwait
dec
dec
lret
push
aas
and
and
test
add
dec
imul
inc
das
dec
int
xor
gs
and
jnp
sub
push
dec
inc
andl
cltd
dec
dec
dec
push
cmp
into
xchg
test
add
dec
imul
jg
xor
arpl
rclb
and
and
test
add
push
inc
xchg
and
inc
cmp
insl
dec
pop
push
push
xchg
push
inc
aad
xor
add
aam
popa
and
inc
test
push
ja
and
push
dec
jae
and
dec
dec
adc
inc
mov
adcl
les
adc
mov
pop
push
test
push
cmp
inc
xchg
inc
fnstsw
mov
adc
dec
jg
pop
sub
inc
inc
pop
xchg
adc
cmp
ret
outsl
pop
das
xchg
hlt
cmpsl
imul
sub
imul
nop
and
iret
push
pop
rcl
fwait
gs
daa
sub
addr16
gs
inc
xor
sbb
inc
mov
xor
mov
inc
and
leave
xor
jle
dec
pusha
push
push
inc
xchg
xor
nop
inc
lret
or
pop
lret
pop
rolb
aad
aas
lods
fisubl
sub
sbb
leave
add
mov
xchg
fnsave
mov
gs
dec
das
add
jno
out
loope
xor
pop
lds
xor
ja
mov
xor
xor
rorl
lds
xor
inc
inc
inc
scas
leave
insl
gs
jae
and
fcmovne
pop
and
xor
jns
sub
pop
call
cmc
jae
scas
mov
fs
inc
xor
cmp
push
lea
rorl
aam
push
mov
loope
xor
addb
xchg
mov
cmp
cmp
sub
push
test
leave
add
and
jle
inc
push
mov
gs
dec
cmc
or
push
test
push
test
cmc
scas
xor
cld
lds
cmp
xor
xchg
xor
push
inc
push
adc
inc
fwait
loope
test
push
mov
xchg
inc
inc
int
leave
mov
sub
lea
adc
jmp
and
in
inc
xor
mov
frstor
daa
xor
test
stos
dec
enter
lret
gs
int3
test
leave
cmp
push
push
dec
add
dec
mov
xor
jno
cmpsb
popa
mov
xchg
test
pop
add
and
inc
cmp
push
shlb
inc
cmp
ret
xor
andl
inc
sub
push
dec
adc
pop
dec
push
push
shll
gs
fs
test
xor
ret
ret
and
pop
gs
add
push
dec
bound
imul
arpl
or
out
test
dec
gs
aad
das
mov
gs
or
pop
and
mov
gs
add
sub
addr16
lods
lahf
out
loope
xor
cltd
sub
fisubl
cmp
sub
daa
push
push
int3
xor
sub
push
or
jne
push
dec
orl
enter
rcll
and
jle
iret
push
and
ja
xchg
pop
push
inc
fisttpll
xor
imul
adc
or
into
inc
xchg
fnsave
fdivrs
xchg
rolb
and
out
or
jns
insl
lahf
cmp
cs
iret
dec
rcrb
sbb
xchg
inc
dec
xor
daa
std
rorl
sub
dec
sub
daa
imul
xor
in
daa
sub
cmc
push
cmp
xorl
and
adc
push
xor
adc
stc
and
xor
andl
dec
aad
inc
gs
shlb
test
arpl
gs
jecxz,pt
and
test
cmp
push
mov
xchg
mov
rorb
xor
inc
push
mov
rolb
scas
test
cmp
push
and
gs
addl
xor
int3
mov
adc
xor
pcmpgtw
scas
leave
insl
fs
xor
icebp
inc
cltd
mov
mov
in
cmpl
inc
lret
jno
sbb
mov
daa
inc
push
ret
in
cltd
fsubrp
and
cmpsl
mov
adc
mov
push
dec
xor
and
jnp
fwait
lock
xor
imul
xor
xlat
inc
lea
jecxz
fisubs
cltd
nop
popa
lret
mov
jecxz
stc
sub
push
es
inc
jge
insb
loope
mov
test
adc
stc
xor
xor
in
or
mov
stc
cmpl
pop
dec
leave
shlb
jno
and
mov
ret
mov
inc
arpl
gs
jae
cmp
push
les
dec
sarl
mov
in
gs
xor
add
cmp
cmp
mov
add
lahf
jno
test
xor
mov
or
daa
enter
test
arpl
xor
subb
xor
dec
iret
lahf
dec
and
shrb
mov
pop
cmp
inc
push
mov
ds
fidivrl
add
fnstcw
jge
sbb
gs
test
lret
daa
pop
pop
xor
scas
ret
daa
add
inc
pop
gs
aas
outsl
fucomp
in
outsl
fs
xor
aad
inc
or
das
and
std
pop
dec
test
push
pushf
and
push
push
sahf
aad
xor
aaa
addr16
leave
out
loope
xor
pop
mov
leave
nop
ret
lret
or
and
add
xor
pop
filds
popf
outsl
lahf
fwait
xchg
xor
sub
xchg
cmp
push
pop
inc
xor
aaa
aaa
dec
add
imul
lahf
fwait
mov
sub
lahf
std
fisubs
xchg
add
jne
jo
gs
inc
dec
rcll
xor
jbe
inc
arpl
lahf
xor
mov
cmc
pop
inc
xchg
push
mov
xorl
xor
xchg
and
or
xchg
and
js
push
gs
daa
xor
mov
and
addr16
sahf
subl
sub
daa
sbb
add
les
push
xor
in
mov
xchg
popf
pop
xchg
pop
mov
aaa
sbb
das
test
stos
dec
and
jnp
test
mov
cmp
fiaddl
shrl
and
mov
dec
ret
push
add
inc
sbb
xor
jno
xchg
or
mov
dec
push
nop
aas
ja
xchg
xor
inc
inc
leave
arpl
cmc
inc
sbb
outsl
pop
or
and
push
push
xor
xchg
adc
pushf
sahf
leave
inc
ret
jae
and
daa
jno
and
push
ret
xor
inc
leave
ss
mov
cmpsl
add
cmp
int
add
ret
lea
cmp
or
and
inc
mov
and
inc
jo
lret
ret
pop
xor
push
pop
pop
inc
adc
and
sbb
jo
mov
sahf
rol
push
and
gs
cmp
ret
cmpsb
mov
mov
push
jae
cmp
xor
cmp
out
icebp
ret
adc
jbe
andl
dec
aad
les
aad
rcrb
xchg
and
popa
ds
test
aad
gs
mov
cld
sbbl
mov
xor
imul
gs
xchg
sub
in
loope
das
xor
adc
stos
adc
std
cmpl
xor
inc
mov
aam
aad
xor
je
mov
mov
lahf
dec
sub
sarb
or
sarl
js
gs
inc
xchg
mov
aam
pop
sub
bound
aam
push
popa
xchg
lds
inc
inc
mov
test
add
sub
xor
mov
stc
popa
and
fs
and
add
lret
cmp
outsl
push
xor
std
les
fnstsw
xor
mov
xor
das
in
aaa
sbb
in
dec
addr16
pop
add
push
dec
jl
jnp
ds
jg
popf
lahf
fs
xor
jne
mov
mov
push
push
add
add
inc
push
mov
mov
xchg
loop
movsl
mov
mov
xor
push
push
test
gs
and
jno
xor
in
xchg
in
add
push
mov
out
push
mov
inc
out
push
andl
cmp
xor
aam
mov
cwtl
and
ret
movsb
gs
fstpl
add
lret
xor
daa
push
pushf
aad
xor
imul
mov
inc
lret
pop
xor
ret
aaa
mov
jae
stc
lahf
sub
xor
gs
lret
lds
fnstenv
in
fistpl
outsl
insl
sbb
enter
in
clc
lahf
jns
lds
orl
addr16
leave
sbb
lahf
mov
orl
test
push
aad
gs
inc
test
push
push
mov
mov
jne
mov
aaa
push
insl
fstl
dec
sub
leave
xor
mov
push
lahf
lock
sub
jns
cmp
xor
push
cltd
std
and
mov
xchg
mov
pop
push
xchg
xchg
pop
aaa
dec
orl
test
sub
inc
lds
fwait
xchg
inc
mov
stos
dec
ss
das
shll
leave
sub
ds
inc
xor
daa
lods
mov
xor
inc
xor
in
push
mov
cmp
or
add
addl
leave
pop
loope
movsb
gs
outsl
jne
cmp
pop
xchg
scas
inc
andl
daa
iret
mov
leave
scas
loope
vrcpps
inc
and
inc
jecxz
fisubs
jne
cmp
dec
les
and
popf
mov
add
dec
das
inc
arpl
sub
sbb
push
js
pop
mov
jge
and
std
push
xor
or
popa
inc
sbb
sbb
addr16
xor
and
add
inc
push
or
inc
inc
sbb
rcrb
out
leave
test
lret
jecxz
cltd
test
xor
sbb
fstpl
mov
sbb
mov
sbb
jns
cmp
mov
loope
jnp
pusha
pop
shrb
push
rorb
or
insl
cmp
mov
adc
js
sub
inc
mov
xor
push
insl
and
push
xchg
fnstenv
dec
jecxz
mov
outsl
ret
rorl
dec
leave
and
or
xchg
dec
mov
test
arpl
aas
aaa
push
xor
mov
imul
inc
sbb
lea
and
xchg
cmp
lds
push
pop
mov
mov
add
xor
icebp
sbb
mov
f2xm1
into
rcrb
inc
dec
repz
or
dec
repnz
test
xchg
test
or
dec
sbb
inc
xor
test
hlt
aas
insl
xchg
dec
mov
lret
negl
dec
or
lcall
xchg
cmp
xor
lcall
into
fistps
mov
adc
mov
push
outsl
xchg
lcall
jo
dec
or
into
mov
push
enter
mov
push
lcall
into
dec
sub
mov
cltd
inc
push
pop
ret
fildl
dec
push
dec
lret
or
push
aas
clc
dec
push
pop
and
test
and
dec
lds
ja
sbb
xchg
push
lea
add
dec
sbb
cmp
imul
sbb
test
pop
and
and
sbb
popf
push
int
inc
mov
jne
ret
dec
int3
dec
pop
scas
and
or
xor
and
sbb
cmpsb
xchg
test
sbb
push
dec
jb
mov
add
js
sub
xchg
shlb
jo
int3
in
pop
or
dec
cwtl
lahf
push
cmp
add
mov
lahf
aam
dec
xor
jae
mov
iret
leave
imul
std
and
movsl
dec
xor
das
and
cmp
movsb
dec
cwtl
outsl
push
and
into
subb
sub
shlb
jo
push
les
cmpsb
dec
gs
push
jge
sub
push
imul
jno
pop
rcrl
in
lea
push
jg
and
push
bound
sub
arpl
sub
imul
lcall
push
mov
pushf
mov
dec
in
sub
inc
mov
aaa
dec
popf
push
lea
pop
xlat
dec
shll
jg
push
dec
orl
jae
sub
lahf
cmp
in
xchg
dec
jge
sub
or
mov
enter
xchg
test
sub
aad
xor
pop
xchg
jge
sub
xchg
dec
dec
push
shrl
or
enter
and
xor
xchg
adc
mov
test
jg
mov
sbb
xor
cmp
lret
mov
add
or
dec
sbb
aam
pop
and
dec
mov
mov
xor
test
push
pop
inc
stc
lods
adc
addr16
lods
dec
push
shll
ror
mov
sahf
dec
dec
add
pop
inc
adc
inc
dec
cwtl
stos
aad
sbbl
sbb
mov
test
inc
inc
shll
shrl
in
cmp
push
jecxz
inc
xor
dec
orl
cmp
leave
addl
orl
insl
sbb
xchg
jns
dec
add
ja
leave
xor
leave
pop
inc
sub
dec
lret
add
enter
and
lret
test
pop
dec
push
call
adc
dec
dec
dec
xor
enter
and
and
pusha
inc
push
pop
sub
arpl
push
adcl
sub
mov
dec
or
push
dec
dec
insl
shlb
xor
xor
and
inc
aad
addr16
dec
mov
pop
andl
fisttps
push
inc
lds
stc
outsb
adc
and
xchg
inc
jge
mov
ret
inc
outsb
mov
ret
push
arpl
inc
inc
or
lds
inc
push
inc
les
mov
dec
mov
mov
leave
push
mov
push
inc
enter
js
dec
mov
dec
ror
repz
push
cmp
dec
js
mov
dec
inc
and
mov
lods
shlb
rcll
push
add
mov
aam
rcll
xlat
pop
push
add
mov
fldenv
lods
fsubs
inc
push
lods
inc
insl
mov
mov
mov
stos
inc
aas
and
or
cmp
dec
fstl
pop
push
dec
and
push
movsl
mov
and
mov
jno
jge
cmpl
xchg
test
lods
xchg
and
faddp
xchg
and
add
aad
push
jmp
or
scas
push
push
inc
aam
jnp
sub
push
fldl
sti
aas
test
jg
int
sbb
push
aad
rorl
std
imul
ror
filds
ja
mov
das
pop
add
int
xchg
fimull
daa
mov
push
add
and
lds
test
sub
xor
fwait
std
dec
test
push
adc
popa
das
ror
addr16
push
mov
ja
cltd
fcoms
aas
roll
addr16
xchg
or
inc
jns
andl
aad
addr16
movsl
and
mov
stc
outsl
fs
int
pop
xorl
inc
push
cmp
push
std
jae
aaa
push
lds
lea
xor
outsl
test
mov
fdivl
fistpll
and
xor
dec
pop
fstl
mov
test
mov
mov
dec
daa
mov
dec
pop
cmp
pop
lahf
rol
sub
and
cltd
push
pop
adc
cmp
mov
int
cmp
lock
pop
mov
mov
and
cmp
jno
pop
sar
pop
iret
shlb
sbbl
mov
xor
mov
fwait
mov
lret
pop
shrl
out
and
mov
jne
adc
mov
enter
sti
imul
stos
lahf
push
orb
pop
add
pop
push
sarb
arpl
data16
push
or
ljmp
in
adc
mov
popa
dec
pop
push
cmp
and
pop
jle
xchg
dec
rcrl
lods
cltd
dec
leave
push
pop
inc
fcmovnbe
cmpsb
cmp
dec
ret
mov
jae
add
cmp
xchg
cmpsl
das
jmp
bound
dec
push
mov
and
mov
pusha
and
and
enter
sahf
adc
xorb
xchg
cmp
pop
sub
adc
xchg
leave
lcall
fsubl
dec
xchg
rorl
sbb
and
mov
mov
lds
out
movsl
mov
mov
arpl
pop
inc
jge
push
mov
enter
inc
mov
int3
or
dec
ret
ret
pop
mov
dec
pop
daa
pop
dec
sub
enter
test
inc
inc
cmp
enter
faddp
push
shrl
stos
pop
cmp
xchg
enter
pop
mov
sub
jl
aaa
pushf
sub
jnp
inc
push
cld
repz
mov
outsl
dec
int
pop
out
push
call
push
or
push
and
aad
movsl
aad
addl
dec
sbb
loopne
pop
pop
out
pop
int3
stos
insb
xchg
dec
test
shlb
js
pop
and
repz
enter
inc
mov
rorl
stos
je
lahf
cltd
xor
insb
jb
enter
dec
inc
pop
sbb
jg
mov
and
add
lret
xchg
sub
loope
mov
inc
dec
cmp
sbb
xor
repnz
add
mov
and
lock
lea
aad
stos
dec
and
pusha
mov
mov
inc
fs
fsubrs
cmpl
popa
orb
push
aad
in
popf
out
dec
lret
cmp
shl
or
mov
inc
loope
dec
fsubs
repz
lahf
lret
push
xchg
subb
push
and
mov
cmp
jecxz
and
sub
lret
pop
jmp
fwait
dec
push
jns
cld
jne
enter
mov
xor
fildll
lea
mov
mov
clc
lds
lret
dec
das
aad
mov
dec
and
jno
jb
xchg
xchg
push
test
add
and
pop
mov
pusha
mov
les
pop
sub
daa
mov
test
and
movsl
pop
push
mov
and
gs
mov
dec
adc
cmp
lods
into
dec
test
imul
cmp
in
es
inc
call
int
daa
push
aam
movsl
es
sub
hlt
sbb
cmp
jb
aad
scas
enter
int
xor
aad
dec
in
and
pop
add
mov
int3
pop
into
test
in
mov
pushf
push
sbb
jnp
dec
sub
push
mov
add
xor
call
dec
nop
push
stos
jle
mov
sbb
int3
push
cmp
jp
push
cmc
fsubrl
and
pop
xchg
movsl
mov
orl
loope
out
pop
sti
dec
xor
dec
pop
js
mov
jns
ss
in
fwait
push
popa
inc
inc
dec
pop
loop
push
iret
and
btc
adc
jmp
cltd
iret
add
arpl
push
dec
and
dec
push
jae
inc
sahf
movsl
mov
xchg
xor
inc
add
lret
dec
outsl
dec
push
fisubrs
pop
dec
lret
push
push
jns
stc
and
xchg
imul
jl
lret
push
xchg
cmp
cwtl
fnstenv
aad
and
xor
push
arpl
aad
xchg
push
lret
lds
or
shll
and
xor
int3
push
aam
dec
ret
pop
dec
fistps
fnstsw
cmp
loope
cmp
es
lret
xor
add
inc
pop
lea
dec
arpl
inc
push
icebp
push
es
mov
je
es
imul
push
ret
jae
pop
push
lret
aam
sub
loop
jnp
arpl
mov
mov
xchg
rcrl
pop
jne
cmp
lret
cmp
pop
rcll
mov
fdivs
sub
xchg
mov
repnz
xor
push
ds
and
or
and
stos
jno
push
or
imul
sbb
jno
inc
inc
arpl
pop
mov
xor
add
sub
loope
push
insl
shl
inc
inc
sub
repnz
mov
push
cs
mov
dec
test
push
sub
outsl
mov
and
pop
xor
pop
or
movsl
lock
push
xor
push
movsb
sbb
push
mov
lods
mov
xor
jae
push
mov
push
adc
popa
jmp
in
lea
and
mov
jo
es
push
daa
cmp
in
pop
push
stos
iret
dec
jae
popa
dec
lahf
ret
dec
movsl
shrl
stos
push
das
push
dec
xchg
pop
adc
adc
sarl
test
lahf
aad
mov
push
fmuls
mov
dec
pop
push
add
mov
adc
stos
dec
dec
jge
push
loopne
mov
cmpb
test
jp
stos
cmp
dec
pop
es
lds
sbb
and
mov
imul
xor
xor
add
cltd
cmp
outsl
ret
push
xor
and
fcmovnbe
cmp
adc
mov
vfrczps
gs
outsb
daa
mov
out
cmp
mov
std
aaa
movsl
jo
and
imul
mov
pop
jno
dec
popa
pop
cmp
vphaddbq
mov
aaa
push
dec
inc
push
dec
movl
xor
push
jnp
sbb
xor
and
push
add
mov
cmc
rolb
jmp
outsl
cmp
xchg
dec
out
mov
jb
cmp
dec
popa
and
xchg
add
ss
in
dec
sbb
inc
pop
stos
ss
xchg
inc
pop
dec
pop
jle
test
inc
aam
dec
movsb
cmp
add
pop
nopl
push
jnp
xorb
sub
aaa
fimull
jnp
mov
push
fstps
pop
pop
pop
sti
mov
dec
dec
imul
xchg
pop
and
mov
arpl
pusha
inc
mov
push
dec
int
enter
pop
mov
jne
hlt
icebp
aad
insl
addl
mov
xor
inc
pop
ss
mov
xchg
jne
pop
cld
adcb
xchg
ja
and
mov
sbb
fldenv
and
stos
cmp
rol
lods
xor
and
inc
mov
arpl
test
and
push
adc
inc
inc
dec
pop
push
pop
adc
flds
inc
push
pop
fucomi
xchg
test
and
sub
and
xchg
aas
aad
xchg
inc
shl
mov
push
mov
sahf
inc
and
mov
call
and
push
xor
movb
sbb
mov
and
pop
enter
jno
xchg
inc
adc
fcom
sub
cwtl
push
push
mov
mov
push
movsb
pop
push
mov
push
aaa
lret
push
mov
dec
cmp
int3
aaa
push
push
sub
mov
pop
sub
inc
mov
adc
mov
inc
xchg
or
rcl
and
addb
test
jne
dec
pop
mov
pushf
dec
insb
aaa
xor
nop
xor
aad
or
add
pop
frstor
decl
sub
outsl
mov
inc
mov
jnp
dec
cmp
dec
cmp
dec
xor
or
xchg
lods
xchg
mov
xor
jmp
sub
sbb
push
lret
inc
push
cmp
pop
jle
add
mov
xor
dec
dec
fwait
and
and
shrb
adc
dec
sti
std
js
dec
aad
inc
jae
push
aam
mov
imul
aad
dec
push
lahf
sub
daa
dec
popa
aas
xchg
sub
fnstsw
dec
jns
push
push
pop
imul
aam
mov
test
pop
fxsave
sbb
lea
inc
xlat
push
insb
daa
fbld
pop
imul
mov
mov
dec
das
add
mov
aad
inc
jns
into
dec
or
jne
cmp
andl
mov
xor
cmpsl
mov
dec
dec
push
dec
mov
xchg
jne
in
add
mov
sub
icebp
mov
push
and
inc
js
or
mov
lods
fwait
and
adc
lods
jge
and
push
xor
xchg
inc
mov
push
mov
cmp
push
jne
mov
adc
dec
imul
stos
roll
mov
daa
dec
sbb
repz
dec
sbb
sub
dec
jne
pusha
stos
mov
jne
mov
push
popf
push
cmp
inc
and
daa
xchg
add
push
es
addr16
dec
pop
test
and
cmp
push
shll
pushf
mov
mov
adcl
lds
aaa
insb
cmpsl
sub
or
dec
cmp
lock
and
mov
dec
lret
or
mov
sub
sub
leave
xor
push
mov
lea
lahf
lea
mov
mov
push
aas
pop
xchg
lea
pop
shll
mov
icebp
dec
movsb
mov
daa
lea
pop
orb
pop
sbb
push
cmp
lcall
shll
inc
addr16
push
push
xor
les
push
xor
mov
inc
jne
or
mov
lods
movsl
scas
inc
lahf
out
pop
mov
xchg
push
push
and
mov
xchg
add
movsb
mov
xchg
arpl
and
xor
and
addr16
jns
dec
popl
aaa
ljmp
xor
dec
aad
fisubrs
cltd
dec
fldenv
daa
call
addr16
test
push
imul
mov
test
add
les
stos
mov
dec
xor
inc
enter
xchg
fisttpll
insl
pop
sbb
dec
pop
ja
sub
pop
jge
sub
and
mov
xchg
iret
leave
inc
cmpsl
mov
adc
add
and
sub
lea
pop
jmp
ror
ja
push
arpl
outsl
ret
orl
aaa
sbb
inc
cmpb
and
arpl
dec
cs
dec
movsl
mov
and
and
fisttpll
mov
vmulss
cmpsb
aad
add
cmp
fistpll
cmp
add
mov
xchg
nop
sub
ljmp
mov
xchg
aam
es
daa
inc
mov
pop
pop
add
pop
test
push
mov
dec
dec
lahf
lret
sarl
out
es
push
sub
iret
xor
pop
outsl
push
ret
mov
hlt
xor
rorb
cmpsb
test
dec
lret
adc
and
dec
mov
push
ds
dec
js
push
in
xchg
push
cmp
dec
arpl
lahf
imul
mov
int3
enter
arpl
dec
push
push
inc
sub
dec
enter
mov
inc
popf
leave
mov
test
push
dec
cmp
shl
aas
rolb
xor
push
mov
pop
fidivs
xchg
rcll
imul
inc
sbbl
lcall
adcb
mov
pop
dec
dec
das
outsl
lret
xchg
cmp
cmp
and
sub
push
dec
and
mov
add
or
sbbb
rorb
push
dec
test
sbb
sbbb
int
or
xor
sub
mov
lea
jnp
mov
dec
and
jno
shll
pop
add
inc
jnp
jmp
sub
imul
dec
push
mov
xor
mov
loop
sti
mov
or
test
push
dec
and
ja
rclb
add
inc
jo
mov
and
imul
dec
xchg
push
outsb
fsubrl
jecxz
xchg
daa
cmp
push
mov
sbbl
xchg
les
movsb
imul
jp
xor
inc
out
mov
dec
pop
dec
fstps
push
arpl
cwtl
dec
and
inc
inc
sub
aas
subl
xor
xlat
addl
mov
cli
popfw
inc
dec
and
inc
inc
lret
mov
push
or
iret
lret
outsb
push
inc
lret
stc
inc
lahf
push
shrb
mov
add
call
sub
mov
arpl
das
cmp
add
insb
dec
imul
jne
mov
jle
loopne
addl
inc
dec
and
sbb
mov
lods
push
push
inc
fstp
sbb
push
mov
arpl
test
cmp
stos
outsb
lret
lds
cld
imul
inc
rorl
nop
xchg
mov
xor
and
int3
pop
sub
lock
popa
xchg
pop
aad
dec
gs
insl
sbb
gs
les
xor
fwait
and
mov
out
aas
subb
mov
dec
mov
jbe
xchg
xor
cmp
aad
xchg
lea
dec
mov
pop
mov
mov
pop
aad
dec
lea
jp
sub
arpl
shlb
bound
pop
cwtl
cmpsl
aad
dec
push
gs
xchg
aaa
mov
sti
mov
roll
dec
cmp
pop
pop
ja
dec
cmp
push
xchg
inc
dec
push
sub
fwait
lret
or
dec
xor
pop
inc
dec
int
lea
adc
adc
jp
sub
jecxz
jmp
jnp
inc
out
or
xchg
fstpt
repnz
or
xchg
or
sub
and
arpl
imul
mov
jno
test
push
mov
jecxz
xor
shl
aas
movsl
sub
enter
inc
in
cmp
pop
pop
daa
popf
jb
pop
and
cmc
shr
jge
orb
add
pop
aas
xchg
aas
pop
xor
mov
mov
sbb
adc
insl
sbb
mov
pop
dec
mov
pop
bound
push
das
and
roll
repz
mov
cmpsb
sub
aad
pop
push
dec
push
rclb
cmp
jmp
dec
aaa
dec
xchg
cmp
adc
or
dec
hlt
movsl
sub
dec
dec
ja
push
jae
jns
adc
inc
add
iret
roll
jb
push
popa
dec
dec
push
dec
shlb
lret
out
mov
push
push
xchg
in
dec
xchg
fnsave
test
mov
pop
fwait
dec
and
cmpl
inc
rol
sub
push
cmp
xchg
fstps
xorb
sub
pop
aaa
pop
push
push
cmp
pop
dec
jle
and
repnz
xchg
je
add
xor
test
push
push
aas
ja
xor
stos
aam
xchg
shrl
dec
push
jns
xlat
xchg
push
iret
sub
pop
imul
cmp
and
dec
push
das
or
ja
mov
and
sub
dec
xchg
jnp
fldt
lods
int3
popa
outsl
jb
mov
dec
rorl
mov
mov
bound
and
mov
inc
das
lods
adc
and
pop
xor
fwait
int
inc
push
jne
int
dec
mov
dec
mov
dec
inc
inc
push
or
adc
pop
push
loope
not
xor
xchg
lahf
jno
movsl
jp
xor
dec
insl
int3
fwait
ja
mov
fldenv
dec
xlat
mov
adc
insb
sub
pop
lahf
mov
pop
test
xchg
sbb
fnstsw
loope
dec
dec
rcrl
push
and
inc
xor
rcrl
and
les
dec
aad
pop
xor
push
jns
fwait
into
mov
stos
cmp
dec
push
dec
xchg
xchg
push
or
sub
dec
and
test
iret
and
aad
rorl
mov
fnstcw
lds
popf
aad
jae
push
daa
rol
xor
xchg
daa
xchg
push
xor
leave
pop
push
mov
pop
stos
pushf
xchg
inc
add
lods
push
popa
addr16
scas
dec
das
cmp
dec
xchg
ret
pop
orl
imul
jecxz
cmp
pop
jae
pop
xchg
dec
mov
dec
mov
cmp
jmp
jo
or
inc
cltd
es
mov
pop
sbb
push
xchg
nop
pop
shlb
cltd
push
ja
dec
and
push
pop
pop
xor
sub
dec
rcrl
xchg
shll
cltd
pusha
and
jb
lcall
or
xchg
pop
aas
in
lods
xchg
mov
andl
arpl
dec
movsl
mov
mov
pushf
mov
add
dec
inc
dec
mov
jle
xchg
movsl
stos
and
imul
dec
mov
imul
dec
and
push
add
cmpsl
out
int
cmpsb
jae
inc
dec
and
dec
xchg
or
clts
shrl
cmp
movsl
and
jg
dec
mov
or
cmpsl
xor
pop
inc
shlb
rorb
dec
shl
sub
nop
dec
push
pop
xchg
or
mov
sarb
cmp
xor
ret
enter
inc
mov
xchg
dec
or
insb
pop
int
dec
push
mov
cmp
and
xor
xlat
mov
roll
les
dec
rorl
dec
push
orb
dec
rcl
addl
and
mov
push
imul
adc
test
ret
dec
fwait
clc
jnp
xchg
push
xor
aas
add
lock
fsubrs
daa
imul
mov
shll
stos
rcrb
jl
lods
xchg
daa
bnd
jg
pop
stc
xchg
lahf
rcll
adc
call
xor
das
push
arpl
pop
xorl
xor
push
les
inc
and
dec
lds
inc
sahf
push
inc
xchg
mov
dec
sub
jae
lea
cmp
add
adc
mov
cmpsl
nop
ss
dec
and
push
cmp
jns
xor
lahf
aas
jns
mov
adc
mov
rcl
dec
or
addl
adc
jne
add
mov
jge
pop
and
jo
ret
pop
pop
addr16
sbb
outsb
xchg
popf
lds
mov
or
or
fldt
push
flds
xlat
cmp
sarl
inc
sbb
add
fsubs
addr16
and
test
lret
or
data16
and
imul
outsl
push
push
cmc
xlat
and
loopne
test
jp
fbstp
jge
cltd
loop
or
daa
or
or
pop
dec
push
clc
test
ret
sti
mov
dec
xchg
sub
dec
push
jecxz
repnz
dec
lock
incb
dec
xchg
xchg
or
jb
xchg
cmc
cmp
push
lahf
daa
add
push
push
out
mov
andb
dec
pop
mov
dec
jae
mov
xchg
popf
aad
mov
dec
rorl
test
pop
pop
and
int
enter
pop
mov
inc
cmp
mov
dec
cmp
pop
push
test
ds
adc
aaa
dec
and
cmp
xor
std
gs
and
inc
pop
push
bound
or
sub
cmp
mov
dec
push
sub
push
imul
mov
push
test
xchg
imul
dec
fs
or
test
imull
dec
lea
pop
sbb
push
and
and
shll
dec
add
roll
xor
dec
and
push
sub
mov
and
inc
aam
dec
dec
orb
push
movsb
roll
and
xchg
movsl
fs
lea
jns
dec
push
aad
dec
and
cmp
into
aad
inc
push
xchg
lahf
fistpl
shrb
sub
mov
arpl
insb
sub
sbb
aaa
incb
xor
outsb
bound
xor
xor
push
inc
arpl
dec
or
aaa
cwtl
out
xor
xchg
shrb
pop
push
insl
aad
les
cmpsl
mov
xor
mov
push
adc
sub
jb
out
push
popa
ror
or
cmp
mov
jne
jnp
mov
pop
push
test
adc
xchg
add
es
mov
mov
lods
and
mov
push
addl
jne
xchg
dec
mov
roll
adc
cmpsb
jne
and
xchg
mov
and
sub
xor
iret
imul
xchg
js
outsb
xchg
fnstenv
xor
xchg
es
pop
dec
aad
mov
inc
inc
pop
aas
cmp
mov
dec
jno
mov
cmp
std
xor
xchg
push
jecxz
push
inc
pop
mov
fs
and
ds
sub
pop
jge
dec
add
cmpsb
movsl
enter
fwait
add
adc
dec
inc
pop
scas
mov
dec
mov
pop
ljmp
mov
dec
dec
sub
inc
dec
pop
cwtl
pop
jne
jge
les
mov
or
gs
dec
cmp
add
sub
pop
and
nop
stos
mov
pop
aad
jge
cmp
stos
xor
lods
xchg
sub
pop
add
push
push
push
xchg
mov
push
stos
inc
dec
xchg
push
shll
dec
es
xchg
stos
stos
add
mov
mov
sub
mov
xor
imul
xlat
gs
mov
pop
push
dec
xchg
icebp
or
js
inc
aas
xchg
fcomps
popa
iret
cmpb
test
pop
xor
jno
lret
mov
inc
pop
or
xchg
fsubrp
movsl
adc
xor
subb
xor
xorl
xor
mov
ja
xor
lret
dec
pop
dec
xchg
inc
pop
arpl
roll
sub
and
pop
rolb
dec
add
inc
fldt
add
sbb
jmp
int3
shll
pop
jg
arpl
jp
mov
mov
xor
cmp
adc
pop
push
dec
repz
cwtl
das
dec
inc
cmp
mov
inc
fistps
loop
push
daa
sub
rorl
fsubl
mov
or
lds
sub
cwtl
or
into
fwait
push
mov
int3
jnp
pop
dec
sbb
out
rcrl
mov
dec
dec
push
aad
dec
or
xor
aas
and
lea
dec
and
or
ds
push
and
ds
sub
cmp
or
dec
mov
jns
sbbl
mov
push
insl
lods
jno
lds
push
xchg
push
push
imul
mov
daa
test
sub
pop
add
divps
fucomp
rorb
push
jge
dec
add
fistpll
adc
inc
icebp
aam
dec
nop
lret
push
pop
aad
jb
xchg
dec
mov
out
pop
or
or
dec
sub
push
inc
adcl
push
mov
test
roll
xor
push
shrl
jg
cmp
and
dec
pop
jmp
xor
sub
mov
and
sbb
xchg
fs
jmp
das
lcall
mov
push
push
pop
cmpb
imul
push
ja
test
and
dec
lret
push
lret
popa
push
jno
clc
orl
and
leave
dec
mov
dec
xor
mov
dec
rorl
dec
dec
cmp
sub
iret
imul
mov
je
mov
xchg
pop
shrl
inc
cmc
xor
and
aam
es
or
int
mov
shll
add
xchg
or
push
cmp
sub
cmp
scas
mov
push
push
and
fisttpll
xchg
scas
push
and
lds
pop
pop
aad
sub
push
mov
rorl
push
shlb
xchg
add
mov
sub
sub
std
leave
sub
inc
rorl
mov
lahf
pop
mov
sti
jnp
dec
push
aaa
movb
subl
pop
adc
jmp
inc
sbb
jae
sarb
and
mov
dec
dec
and
daa
mov
in
imul
sub
imul
sub
and
jmp
jge
dec
mov
pop
fcoms
cmp
dec
lahf
push
jns
add
and
test
popf
push
rcl
push
and
fwait
popf
pop
adc
dec
inc
push
xchg
xlat
dec
enter
addr16
imul
movsl
cltd
jg
or
sahf
adc
aas
push
push
mov
rorl
orb
mov
pop
mov
fsts
das
xor
aad
push
rorl
dec
mov
adc
arpl
sahf
push
test
dec
mov
stc
xlat
sub
fisttpl
xchg
cmp
dec
jg
ret
and
ja
imul
adc
fsubs
ret
cmp
cmc
in
or
aad
arpl
xchg
mov
dec
pop
cmpsl
arpl
jb
sub
insb
lea
cmp
xchg
dec
popa
sub
and
adc
jge
xchg
pop
dec
dec
ja
mov
lret
and
push
mov
add
leave
jns
and
dec
and
enter
mulb
int
dec
pop
jae
pop
push
mov
ja
pop
cmpb
jl
sbb
push
sub
mov
push
fsubl
sub
dec
pushf
push
inc
dec
outsl
inc
pop
inc
jns
adc
fstpl
orb
in
cmp
out
or
fsubs
dec
xchg
jae
push
add
imul
int
stos
sbb
insl
mov
dec
imul
leave
mov
mov
cmpsl
xlat
sub
lods
jge
xchg
lods
jg
inc
and
xor
jne
lret
decb
jae
dec
loopne
insb
cmp
pop
ss
outsl
dec
jmp
pop
lods
lcall
pop
and
lods
test
arpl
mov
dec
lret
push
and
add
roll
sub
xchg
dec
pop
jae
dec
dec
inc
dec
pop
aam
cmp
les
and
and
daa
insl
enter
loopne
cmp
sub
push
iret
add
into
fnsave
test
jge
gs
stc
fiadds
cs
push
inc
bound
loope
or
xchg
push
lods
mov
frstor
pop
fwait
sbb
aad
pop
imul
dec
xor
mov
pop
lea
dec
sub
mov
sbb
push
lret
nop
push
sub
dec
imul
dec
cmp
push
sub
sub
mov
cmp
xchg
shlb
dec
cmp
ss
das
sbb
mov
jnp
xlat
jnp
dec
inc
fisubl
add
fmuls
xor
mov
push
jns
cmp
push
scas
mov
xor
push
in
xor
aaa
inc
es
jge
push
fwait
xor
jne
enter
dec
xor
scas
popf
push
insl
dec
xchg
lock
push
push
mov
scas
or
sub
pop
daa
dec
cmp
push
and
mov
xlat
inc
shrl
outsb
outsb
mov
mov
xor
mov
jmp
mov
rorl
inc
jnp
push
push
xchg
inc
sub
fldl
mov
pushf
xchg
jg
xchg
pop
inc
add
dec
and
andl
insl
imul
add
sbb
insb
adc
aaa
das
pop
jmp
insl
pop
orb
out
sahf
popl
cmp
push
pop
pop
aaa
push
and
pop
cmp
push
xchg
imul
cmp
ror
lcall
mov
shll
cmp
lds
dec
dec
dec
loopne
push
xlat
pop
xor
jno
dec
cld
mov
pop
push
dec
pop
imul
inc
dec
xchg
fiaddl
daa
adc
push
fmull
std
jne
inc
xchg
dec
mov
jmp
pop
frstor
sub
cmpl
inc
stc
xchg
push
repnz
dec
dec
arpl
mov
inc
jo
dec
mov
lods
jo
stc
mov
sub
mov
arpl
aad
fs
dec
dec
lcall
jnp
xor
cmp
stos
pop
pop
fwait
dec
lahf
xor
mov
cmp
xchg
push
push
call
cmp
or
xlat
stos
inc
popa
pop
xchg
pop
int
cmpb
pop
cltd
and
mov
fs
fstps
and
cmp
push
nop
pop
inc
popf
les
out
lahf
dec
scas
add
jmp
dec
add
xor
dec
pop
sarb
aad
popf
sub
xor
popf
pop
adc
cmp
lret
jecxz
je
xor
jns
out
mov
addr16
out
inc
imul
mov
dec
ficoml
rclb
and
loopne
jne
dec
insb
pop
imul
fstps
mov
bound
fldenv
stc
lds
aad
mov
aaa
fs
and
adc
jae
ja
adc
fwait
and
addr16
fstp
mov
push
dec
dec
pop
dec
fabs
jne
pop
leave
les
dec
sbb
and
add
or
cmp
xor
push
inc
test
outsb
fcoml
lahf
imul
dec
sub
xor
inc
lret
inc
aaa
jmp
cmpsl
mov
lcall
jno
aaa
mov
aaa
cmp
pop
inc
pop
pop
daa
lds
int3
jle
ror
xchg
xchg
mov
insl
neg
lea
sbb
dec
and
mov
pushf
xor
xchg
mov
cmp
or
test
push
mov
mov
decb
mov
cmp
mov
outsl
rcrb
push
and
daa
test
sub
adcl
xor
hlt
imul
test
push
les
push
mov
rol
inc
mov
xor
cltd
or
mov
push
push
aad
pop
imul
cmovl
sti
push
cmp
xor
leave
mov
xchg
inc
dec
pop
pop
pop
mov
mov
dec
leave
insl
ret
ret
cwtl
push
pop
xor
adcb
aad
aaa
imul
test
dec
push
xchg
jge
sbb
test
rcll
dec
mov
jg
push
cmp
movsb
mov
adc
jg
test
std
jae
jnp
dec
sbb
add
mov
lds
bound
add
xor
dec
or
fildll
push
sub
test
arpl
dec
adc
dec
dec
cmpl
jae
ret
shlb
sub
add
test
rorl
mov
cltd
dec
xlat
mov
cmp
jnp
fadds
cmp
fisttpl
dec
jae
xchg
aaa
arpl
jno
mov
fstpt
xlat
test
xor
push
mov
xor
daa
jns
mov
pop
push
sarl
aad
rcrl
inc
cmp
fdivrl
mov
xor
inc
xor
ret
cmp
jg
add
ffreep
lret
aam
stos
ss
fstl
add
lret
dec
and
arpl
and
ficoms
popf
stos
and
xchg
xchg
add
mov
das
fwait
imul
mov
stos
decl
mov
pop
jo
rorb
dec
test
mov
xlat
sarb
mov
inc
aam
mov
add
xor
jg
ljmp
mov
xchg
sbb
mov
test
dec
cmp
into
adc
sub
imul
cli
mov
gs
dec
mov
dec
xor
mov
push
pushf
cmp
test
and
pop
gs
jge
imul
out
stc
inc
cmp
fcoml
dec
mov
and
ja
movb
cmc
int
pop
and
cmp
dec
sub
push
test
orb
or
popa
pop
xchg
dec
movsl
xchg
mov
xor
sub
js
and
and
or
cmp
push
push
mov
aaa
dec
adc
mov
mov
and
mov
mov
outsb
into
dec
in
int
into
pop
push
pop
mov
aad
test
es
daa
push
sbb
xchg
ret
pop
push
js
dec
dec
lret
mov
jg
test
add
dec
dec
xlat
mov
push
enter
mov
repnz
jg
xor
loop
rcl
loop
ret
mov
sahf
pop
test
push
pop
xlat
cmp
adc
mov
sub
into
mov
mov
rclb
imul
test
mov
mov
xor
sahf
fldenv
repnz
lahf
sub
mov
or
sahf
aad
inc
ficompl
push
daa
fsubs
pop
mov
outsb
and
xor
dec
es
xchg
cmp
imul
in
dec
pusha
jmp
sub
mov
enter
lret
jns
mov
ror
repz
pop
push
cli
out
fcoml
dec
fdivl
dec
out
and
lahf
push
aam
xchg
mov
je
sbb
xor
movsb
shll
mov
cmp
ss
data16
push
out
cmp
enter
mov
shlb
mov
test
jo
in
xlat
fmuls
fcomi
inc
das
cmp
daa
sub
mov
into
sar
pop
dec
push
jne
out
jae
cs
dec
push
movsb
push
test
iret
inc
dec
and
nop
rcrl
rcll
sub
lock
rolb
mov
sbb
mov
in
dec
xor
test
sbb
enter
cmp
imul
xchg
push
fwait
insb
enter
aam
adc
adc
js
pop
call
dec
pop
fldt
in
nop
pop
lret
test
dec
mov
mov
lret
imul
iret
jae
pop
sub
shlb
add
in
test
sub
in
mov
lahf
mov
xchg
cmp
js
xchg
stos
jbe
cs
pop
scas
mov
cld
cmp
cmpsl
pop
inc
xchg
movl
cmp
xor
dec
shlb
sub
xor
out
cmpsb
push
dec
fs
pushf
movsb
int3
or
cmp
xor
mov
xchg
sarl
cmpb
mov
out
xchg
out
adc
jg
test
es
sbb
jbe
int
pop
dec
movsb
in
mov
lcallw
xorl
or
xchg
inc
jge
mov
sub
push
or
aad
lods
cmp
aaa
and
enter
cmp
push
lret
xchg
xor
and
and
stos
pop
pop
imul
sahf
dec
mov
mov
ja
jle
nop
test
fcompl
imul
dec
sbbl
or
xlat
xchg
rcl
adc
stos
gs
mov
adc
addr16
adc
push
push
shl
cmp
mov
cli
imull
or
mov
push
iret
shr
xor
popa
movsl
xor
pop
out
popf
ret
xor
gs
mov
mov
lret
mov
xor
dec
xchg
fwait
insb
push
and
fwait
loopne
xor
or
and
cmp
mov
flds
mov
pop
mov
xor
lds
push
aas
subl
cmpsl
bound
xor
setne
mov
push
xor
xchg
mov
xor
pusha
adc
xchg
loop
repnz
int3
and
mov
cmp
test
and
xor
jo
sar
mov
data16
int3
cmp
xchg
xor
or
test
jge
mov
fdivs
stos
sti
xor
jo
imul
imul
push
sub
mov
pop
scas
arpl
mov
imul
xchg
lret
xor
and
jo
insb
dec
pop
cmp
lahf
inc
das
xchg
sbbb
stos
pop
push
mov
adc
inc
lods
and
pop
cltd
aad
and
pop
test
and
cmc
rsqrtps
push
jg
ja
sub
jp
daa
mov
shll
mov
fidivs
fistpl
stc
xchg
xlat
sbb
movsb
mov
pushf
push
adc
pop
jle,pt
push
jmp
sbb
mov
mov
fs
xlat
mov
push
mov
mov
outsb
dec
mov
jge
jno
sbb
jbe
je
js
mov
cmp
cmp
mov
dec
mov
push
mov
inc
and
or
stos
push
mov
pop
mov
mov
cmp
xchg
inc
fidivs
call
cwtl
pop
jo
mov
das
outsl
jae
sub
nop
and
das
stc
mov
test
adc
or
das
pusha
scas
bound
mov
pop
addr16
inc
icebp
ds
push
or
outsl
xchg
sub
test
mov
cbtw
cmp
popf
sub
insb
or
dec
dec
jno
movsb
xlat
push
adc
fnclex
dec
dec
mov
xor
add
dec
add
mov
stc
dec
cmpsl
dec
adc
jmp
fwait
pop
mov
mov
sahf
aad
in
mov
mov
rcrl
pop
push
xor
xchg
pushf
and
push
push
add
mov
push
mov
cltd
xchg
dec
ja
jmp
sub
push
nop
sbb
aad
sub
imul
mov
out
push
pop
push
mov
adc
inc
pusha
scas
jecxz
popl
outsl
add
and
pop
jae
xchg
stos
mov
push
loope
or
call
mov
test
fsubl
and
sub
stos
cmp
jl
add
cmp
es
leave
loope
popf
push
mov
mov
mov
out
pop
dec
fstl
jne
imul
cltd
or
iret
lret
int3
mov
arpl
cmp
push
stc
dec
adc
push
std
mov
mov
jge
arpl
pop
push
aad
mov
ficoms
fwait
dec
movsb
mov
sbb
xchg
and
test
push
xor
and
roll
fstpt
cmc
inc
cmp
ljmp
inc
add
cmp
mov
jno
shlb
xor
mov
cmpsl
jl
cmp
bound
std
add
pusha
aad
jo
imul
shll
sbb
mov
aas
xor
mov
dec
leave
or
sub
mov
std
or
or
test
mov
adc
das
and
mov
in
mov
repz
test
xchg
mov
aas
lahf
out
push
cli
shrl
xor
and
push
imulb
cmp
pop
arpl
sbb
stos
xlat
push
dec
mov
lock
dec
pop
xor
rcr
roll
jbe
xlat
mov
sbb
push
jp
aad
push
cmpsb
cli
mov
xor
sbb
push
dec
rcrl
sarb
fdivl
test
dec
and
mov
mov
mov
dec
lcall
rcrb
mov
mov
pop
sub
cmp
sub
dec
addb
jae
ffreep
xor
ficompl
or
repz
sub
ds
xor
scas
jbe
xchg
push
insb
push
xchg
xor
xchg
pop
daa
lea
mov
inc
cmp
je
test
stos
or
insl
mov
or
insl
xor
in
mov
sub
out
push
jo
cmp
cwtl
rorb
inc
push
clc
je
mov
jge
xor
stos
xor
rorb
push
mov
adc
mov
push
bound
es
sbb
cmc
adc
pop
mov
inc
jg
shll
xor
sub
push
fldl
lods
test
push
in
fs
jns
push
pop
mov
push
xor
pop
jbe
mov
cmpsl
push
jb
test
sub
in
and
ljmp
movsb
mov
mov
xchg
mov
push
sub
jnp
push
or
xchg
shlb
push
mov
movsl
sub
mov
mov
mov
add
imul
rcrb
jns,pn
gs
push
pusha
scas
es
or
movsb
test
fwait
scas
push
ja
or
fisttpll
adc
ljmp
cmp
mov
and
xor
or
mov
in
ret
mov
inc
cs
test
sahf
jge
or
insl
mov
push
or
jl
aas
or
cmp
mov
mov
xor
fs
cltd
movsb
pop
mov
das
mov
shlb
stos
aaa
push
dec
push
dec
push
leave
das
dec
push
jae
iret
in
mov
adc
add
add
push
mov
cmp
arpl
icebp
ss
daa
inc
fwait
xchg
movsb
lods
scas
mov
lds
stos
or
push
mov
sub
inc
nop
mov
sbb
fnstsw
in
sti
jmp
xor
push
push
das
mov
out
jl
pop
repz
fcom
xchg
add
cmpb
or
aam
and
adc
into
xor
daa
push
or
dec
xchg
mov
lock
in
fs
sub
aas
mov
in
jns
lods
and
push
call
mov
por
sbb
lret
push
and
push
dec
mov
push
adc
stos
xchg
adc
or
aad
sbb
in
push
aaa
lods
xor
xor
pop
dec
push
stos
mov
add
mov
shll
jmp
jmp
mov
xor
scas
mov
and
dec
hlt
jnp
push
fimuls
divb
lahf
adc
mov
imul
gs
and
mov
mov
adc
roll
mov
xchg
push
cmpsl
daa
das
jle
test
cwtl
scas
mov
cld
cmp
aad
test
insl
arpl
jne
adc
sbb
test
lahf
das
jbe
push
shll
or
lds
push
xlat
and
adc
pop
or
or
push
gs
pop
call
mov
inc
loop
push
cmc
lahf
or
mov
scas
and
aam
push
jmp
and
test
stos
mov
ffree
imul
das
stos
xchg
jle
xchg
mov
out
hlt
push
in
jp
pop
pop
xor
test
sub
mov
and
or
mov
es
adc
sti
mov
sub
xchg
mov
mov
mov
mov
sbb
cmpb
cwtl
loopne
punpckhwd
sub
ss
lahf
dec
sub
dec
lea
addr16
xchg
aam
pusha
cwtl
dec
test
xchg
xchg
das
mov
ss
mov
xor
sbb
or
xchg
sbbb
mov
mov
ds
addr16
mov
test
es
pop
cmc
mov
dec
xor
cld
lahf
fucom
outsb
mov
jb
mov
xchg
dec
xchg
push
jae
adc
mov
xor
mov
rorb
mov
je
test
test
pop
mov
inc
pop
xor
mov
or
sbb
pop
aas
cmpsl
shrb
inc
mov
pop
sub
or
cmpsl
lahf
inc
mov
mov
stos
mov
push
fsubl
repz
pop
and
jecxz
push
sarb
push
sbb
cwtl
out
jecxz
mov
push
mov
sbb
mov
xor
fadds
jnp
mov
nop
xchg
and
dec
lretw
dec
mov
dec
adcl
jnp
popf
movsb
std
test
int
sbbl
pop
and
rorl
xlat
stos
push
loop
in
int3
cmp
cmp
pop
xchg
jge
fisubrl
mov
pop
sub
out
test
cwtl
pop
outsb
push
or
or
repz
mov
sbb
push
inc
pop
xor
sub
mov
and
scas
pop
fldcw
or
aas
js
add
dec
bound
cmp
mov
into
sub
pushf
inc
cmc
loope
daa
and
imul
xor
clc
movsb
xchg
or
ficoms
push
fwait
outsl
das
or
jmp
mov
pushf
std
sub
pop
xor
das
sub
xchg
sbb
xchg
clc
jmp
and
mov
sahf
fs
fwait
cmpsb
mov
jecxz
and
mov
and
test
jmp
cltd
and
jae
decl
mov
stc
repz
nop
sti
or
sbb
mov
and
aaa
std
xor
into
and
in
loop
mov
pop
scas
xor
and
test
push
jno
sub
adc
push
dec
sub
adc
push
and
outsl
xchg
clc
adc
test
out
mov
xor
ret
push
stos
dec
xlat
push
push
dec
imul
jle
sub
pop
dec
sub
mov
mov
in
cs
and
or
ss
push
mov
outsb
test
adc
and
mov
mov
fwait
cmpsb
fwait
imul
push
movsl
iret
cltd
in
loope
sub
push
ja
and
mov
mov
mov
push
popa
jbe
nop
sbb
test
and
and
xchg
not
out
sub
pop
das
shl
in
repz
in
push
repz
fcomps
int3
mov
xor
push
stos
pop
into
popf
xlat
pop
pop
in
mov
mov
stos
out
push
pop
jnp
jecxz
add
shlb
pop
and
push
icebp
cmp
sbb
cmpsl
xor
jbe
icebp
sbb
adc
jne
xor
and
adc
mov
sub
es
sbbl
inc
and
pop
mov
cmp
movsl
xlat
pop
clc
or
rcl
in
push
pop
jmp
xchg
mov
mov
repnz
divl
data16
int
push
rcl
cmpsl
out
inc
xchg
mov
cmp
mov
in
mov
lea
sub
sub
addr16
mov
dec
fstp
xor
pop
xor
enter
shr
mov
xor
mov
jecxz
push
pop
dec
push
daa
ret
and
cmp
pop
test
mov
movsl
bound
arpl
negb
xor
outsl
and
or
cmp
adc
inc
xchg
sub
push
shrl
loope
stos
sub
lods
popf
cmpsb
lret
repnz
mov
cli
imulb
dec
mov
dec
ljmp
and
dec
push
sti
mov
cld
inc
xor
pop
in
int
mov
jp
rcr
xchg
xchg
fidivl
mov
sbb
in
sti
dec
and
lods
mov
dec
xchg
mov
push
add
push
xlat
daa
mov
clc
ja
imul
mov
rol
xchg
or
jne
movsb
cmpsb
sub
loop
les
ljmp
cmp
sub
arpl
xchg
inc
or
ja
dec
movsb
mov
xor
lods
jbe
mov
adc
cmp
lahf
arpl
push
pusha
mov
xor
mov
sub
xlat
fstpl
dec
lods
adc
adc
push
mov
lcall
out
or
sti
in
add
or
repz
or
js
inc
sti
or
cmovne
jo
sbb
movsl
repz
mov
cmp
inc
jmp
stos
lds
sub
lods
cmc
mov
xchg
dec
adc
mov
push
lret
data16
fidivrl
xor
adc
fsubp
xchg
sub
call
mov
iret
int
xchg
adc
mov
inc
push
sbb
push
sub
push
push
loopne
fsubrs
dec
fstpl
cmp
test
addr16
icebp
fdivl
or
jbe
or
mov
xchg
push
sub
ds
mov
mov
mov
cmpsb
call
leave
adc
inc
adc
aam
gs
push
das
sub
js
mov
cmc
rcll
shl
xchg
enter
rcrb
jb
adc
adc
aaa
xchg
jge
push
popf
mov
jnp
push
rcrb
sti
aam
mov
push
or
mov
es
mov
lock
fmull
pop
xchg
jne
popf
xor
jae
or
lret
add
mov
std
xchg
and
push
dec
jo
cmp
nop
xchg
xor
insl
pop
push
ss
and
pop
les
stos
xchg
into
pop
rcrl
inc
jl
xchg
adc
pop
sbb
jae
push
sti
cmp
xchg
movsb
fwait
inc
scas
jae
das
cs
cmp
add
mov
mov
dec
fcoms
pop
mov
xor
movsb
mov
xchg
lds
mov
mov
or
jp
sbb
sarl
enter
pop
push
sbb
cmp
push
cmp
xor
sbb
imull
aad
in
xchg
mov
jnp
cld
mov
pop
fisttpll
xor
adc
inc
pusha
out
mov
xchg
inc
push
fisttpll
dec
stos
sbb
arpl
pusha
mov
cmp
lods
inc
pusha
scas
jb
lds
or
mov
mov
pop
cmp
aam
mov
push
aaa
insl
cmpsb
xchg
mov
dec
xlat
dec
mov
inc
pop
xchg
je
sbb
int3
adc
rcr
mov
add
mov
daa
sti
dec
push
not
in
mov
incl
lods
inc
shll
mov
cmp
jg
pop
cmp
cmp
adc
inc
mov
pop
cmc
xchg
out
shll
dec
mov
int
mov
push
movsb
xchg
xor
lods
push
and
pop
dec
pop
or
push
stos
mov
fists
cmp
jo
mov
shl
mov
hlt
xlat
sub
push
cs
aad
xchg
push
scas
push
scas
pop
sbb
pop
push
push
aaa
shr
je
mov
cmp
aas
push
mov
insb
test
std
xchg
lret
xor
or
dec
fwait
je
push
movsb
cmp
lahf
icebp
xchg
lock
mov
ja
sbb
push
adc
scas
hlt
dec
cld
cmp
lods
movsl
xchg
xchg
xchg
lret
and
xchg
dec
cmp
dec
movsl
cltd
mov
inc
out
sarl
mov
imul
jle
and
mov
mov
cmp
xchg
or
fs
mov
in
jge
xlat
mov
test
jge
repz
push
cmp
push
stos
jp
sub
insl
xchg
lea
addr16
neg
inc
xchg
notl
cltd
mov
jne
mov
cmp
mov
pop
and
test
xchg
xor
enter
mov
ficomps
mov
getsec
movsb
jp
or
popf
pop
sbb
sub
fwait
imul
js
movsb
in
jnp
mov
cltd
cmp
sarb
mov
hlt
jmp
jbe
sbb
mov
popa
xorl
adc
in
mov
cli
sub
arpl
aaa
in
scas
mov
cmpsb
push
cmp
xor
fs
aas
mov
cmp
xor
sub
cmp
sbb
bsf
inc
pop
in
insb
jecxz
mov
xor
cmpsb
mov
mov
sbb
insb
inc
jns
mov
mov
sub
mov
lods
pop
sub
push
mov
push
movsb
and
xchg
mov
push
sbb
xchg
xchg
xchg
cmp
mov
adc
mov
jecxz
dec
dec
cmp
clc
movsb
pop
adc
mov
pop
popf
push
rcrl
aaa
in
subb
inc
dec
push
cmp
mov
xchg
mov
repnz
ss
inc
push
pop
mov
jecxz
shl
addr16
or
popf
xchg
xorl
cmp
pop
pop
mov
pop
pop
outsl
sub
jg
dec
and
test
jmp
arpl
cmp
or
lods
xor
movsb
push
dec
cs
pop
cmp
pop
mov
xor
mov
xchg
aam
mov
sbb
add
jne
push
pop
or
xor
in
mov
lods
sti
mov
lea
add
mov
adc
aas
jnp
dec
mov
adc
add
or
stos
cmc
fcoms
adc
and
push
mov
in
mov
lods
dec
mov
int
push
stos
mov
xchg
push
mov
mull
adc
sub
call
dec
xchg
ficoml
cmp
jp
fmul
push
xchg
int3
mov
ficomps
xchg
xchg
push
push
sub
js
jae
out
aam
adc
and
and
sahf
xchg
mov
movsb
cmp
popf
adc
dec
test
and
lods
and
cltd
jnp
rcrb
sbb
lds
xchg
mov
test
adc
mov
cltd
and
xchg
pop
or
adc
xchg
in
lret
push
fsts
scas
xor
mov
mov
aas
movsl
movsl
rcrl
pop
mov
stos
adc
imul
in
mov
outsl
and
adc
test
sub
sub
add
inc
push
lds
aad
mov
stos
pop
inc
cmpsb
xchg
xchg
insb
and
hlt
xchg
icebp
push
sbb
pop
ret
lock
addr16
retw
dec
xchg
rorb
sbb
js
mov
sub
mov
mov
cmp
jo
mov
pop
xchg
mov
add
adc
cmp
xchg
mov
mov
xchg
movsb
clc
mov
mov
adc
test
add
testl
add
int3
adc
sub
out
stc
push
shrb
push
mov
repz
dec
push
xor
push
aaa
in
sub
push
jo
mov
dec
push
arpl
jne
lock
mov
xchg
xlat
sub
sbb
daa
push
pop
or
scas
mov
cmp
push
sub
daa
xlat
cwtl
mov
lea
sbb
sub
add
add
push
sub
fildll
call
andl
mov
push
inc
mov
sbb
js
movsb
cwtl
fildll
mov
push
push
inc
mov
push
cmp
gs
push
sbb
add
push
fwait
and
mov
mov
mov
push
cltd
jp
mov
adc
aad
cltd
clc
movsb
les
xor
sbb
xlat
cmp
xchg
mov
es
ds
jo
xor
outsl
dec
cmp
in
ja
mov
sbb
aad
and
lahf
in
xor
data16
shll
sbb
sub
sahf
out
fdivrs
ss
mov
mov
cmp
stos
dec
jg
mov
in
sub
andb
sub
gs
pop
cmpl
mov
pop
adc
imul
mov
or
xchg
xor
sbb
lret
sarl
sub
adc
aam
pop
es
push
xchg
shlb
es
pop
mov
jge
lret
adc
mov
fnsave
mov
pushf
add
and
repnz
enter
xchg
adc
aam
xor
xchg
mov
xchg
pop
jl
testb
pop
shlb
sbb
ljmp
setg
cwtl
sub
inc
mov
cmpsl
adc
cs
in
nop
xlat
push
pop
inc
daa
lcall
in
mov
jns
or
sub
mov
pop
fistpll
stc
lods
int
in
fwait
cmp
or
ficomps
sbb
testb
repnz
pop
and
push
dec
or
shrb
sub
mov
lret
mov
jo
or
in
daa
jge
push
into
jns
scas
sub
or
and
adc
sbb
test
sbb
mov
and
cmpsb
mov
or
xchg
xor
popf
adc
pusha
stos
aam
inc
mov
pop
imul
aam
popa
sub
shrb
lret
arpl
sbb
inc
add
sbb
nop
and
stos
sbb
xlat
out
lock
jne
jbe
sub
xor
sbb
fs
cmp
xchg
fildl
jmp
std
xlat
push
adc
into
sbb
mov
and
pop
jg
roll
aad
iret
arpl
push
mov
mov
sets
data16
mov
mov
push
and
je
lahf
les
mov
dec
sub
es
jne
int
aas
push
lock
xor
push
fisubrl
mov
jb
push
aaa
mov
xor
jne
shrb
or
dec
mov
lret
imul
push
nop
daa
movsb
xchg
pop
in
mov
sbb
jp
xor
sub
xor
push
mov
jg
inc
lods
xchg
mov
and
test
daa
in
imul
lahf
mov
xor
sub
add
cmp
jns
movsb
mov
push
ljmp
sub
faddl
stos
ljmp
sub
imul
fwait
das
push
adcl
lahf
movsl
add
scas
dec
mov
mov
push
test
test
popf
jae
and
mov
inc
jl
mov
cmovae
push
divl
jl
add
cmpsl
and
adc
mov
movsl
arpl
pop
in
mov
push
out
mov
inc
and
fcoml
clc
sbb
setae
enter
ret
lcall
aad
pop
mov
pop
jae
cmpsb
and
push
mov
jle
test
push
push
dec
and
xor
aas
or
jb
xchg
cwtl
stc
sub
dec
js
mov
xchg
cmpsb
movsb
rcrb
in
cmpsb
lock
mov
outsb
push
adc
test
lods
fwait
xlat
aad
push
push
pop
arpl
cmp
xchg
jbe
popf
and
adc
sub
adc
dec
jae
pop
sub
pop
call
dec
inc
xchg
sub
stos
cmpsb
pop
lcall
fdivrp
aad
ds
in
xor
jnp
faddl
imul
jnp
xorl
jo
fwait
mov
adc
int
adc
jle
pop
outsl
inc
fcmovu
pop
lahf
and
jle
std
jns
paddsw
movsb
in
out
mov
pop
jns
nop
fwait
imul
xlat
push
scas
imul
jle,pt
sbb
push
int
sub
ljmp
push
lods
aaa
jecxz
cmpsl
jnp
imul
sarl
mov
movsb
lahf
sbb
jle
and
dec
adc
jb
sub
cmp
mov
pop
jnp
mov
aaa
cmp
jmp
mov
nop
xor
xor
sub
lods
es
testb
shrb
stos
or
nop
jl
setnp
data16
push
in
lret
das
sbb
inc
mov
in
mov
ljmp
arpl
or
and
out
or
push
xchg
xor
push
cmp
lcall
aaa
xchg
mov
das
sub
fisttpl
or
push
xor
mov
scas
mov
or
cmp
pop
mov
pop
cmp
xchg
int3
lcall
mov
jo
jo
out
lods
xchg
dec
pop
fcoml
cwtl
jp
mov
rorl
dec
leave
shlb
xchg
or
mov
aas
push
fidivl
xor
sub
ss
or
icebp
xlat
mov
mov
sti
ja
and
mov
xor
psubsb
sub
mov
pushf
sub
mov
or
push
rcl
jae
das
push
movsl
jmp
mov
push
sub
jb
push
push
or
sbb
lahf
or
inc
test
dec
out
xchg
push
movsb
scas
or
shl
aaa
enter
aaa
and
fsubrs
add
and
movsl
scas
push
inc
mov
dec
xchg
and
and
inc
add
sar
gs
les
dec
dec
cmp
inc
and
sbb
shl
inc
mov
fnsave
inc
arpl
cmp
dec
fs
dec
int
cmp
dec
roll
mov
xor
cmp
popf
addb
inc
xchg
popa
loop
xchg
lea
fadds
xlat
inc
leave
dec
jnp
dec
jge
cmp
imul
xor
daa
inc
fsts
dec
inc
and
rcrb
aaa
gs
xchg
test
inc
aam
cltd
mov
sub
pop
and
shll
inc
aad
xchg
dec
cltd
xchg
mov
mov
mov
add
jne
cmp
daa
dec
sub
leave
inc
inc
test
aad
inc
and
dec
arpl
xor
jl
pop
and
sub
xor
xchg
cmp
pop
insl
dec
addl
repz
fldenv
xor
sarb
leave
popa
gs
insl
cmp
dec
adc
xchg
dec
mov
rcrb
dec
cmp
loope
test
dec
leave
fwait
dec
test
sub
and
push
inc
popa
dec
pop
inc
dec
dec
push
enter
rolb
out
test
in
fstl
mov
gs
gs
rep
pop
and
jns
dec
rol
rcrl
sub
dec
dec
gs
testb
int
pop
pop
movsl
inc
inc
imul
push
dec
xchg
dec
sub
xor
cmp
shl
sbbl
loope
dec
xchg
xchg
pop
test
xor
inc
lret
dec
mov
popf
jecxz
fstps
rorl
test
dec
shlb
test
push
insl
arpl
scas
rorl
arpl
pop
ret
sub
and
push
dec
sub
inc
pop
dec
cmp
cmp
rolb
lahf
int3
xor
mov
add
jecxz
pop
dec
or
insl
daa
and
jne
or
push
mov
cmp
dec
gs
pop
pop
push
pop
fldl
dec
and
sub
gs
fnstcw
rcl
test
aaa
push
arpl
xchg
daa
cmp
push
dec
popa
dec
gs
rcr
insl
dec
jno
cmp
jns
push
shlb
jo
dec
adc
push
test
shll
pop
pop
and
sub
xor
xor
cmp
dec
test
cltd
dec
and
aad
push
or
gs
repz
fimull
repz
dec
aad
insl
daa
and
leave
addr16
jge
inc
inc
arpl
mov
mov
push
dec
cmpsl
jae
mov
xchg
pop
mov
xor
xor
push
dec
mov
cltd
das
aam
aaa
rorl
pop
pop
data16
arpl
rolb
lret
inc
imul
call
popa
or
pop
cmp
jmp
xchg
dec
and
push
lahf
mov
add
fnstsw
fwait
enter
lret
out
jbe
xor
inc
rcll
inc
gs
pop
stc
or
rolb
dec
aas
leave
and
push
sub
or
test
xchg
push
xchg
adc
leave
inc
inc
dec
pop
jno
xchg
and
and
mov
mov
mov
inc
dec
dec
jg
out
pusha
sbb
rcr
ret
pop
lds
cltd
lea
dec
or
cmp
popa
mov
mov
aaa
subl
std
sub
aas
inc
dec
ret
dec
subl
or
test
pop
pop
mov
or
daa
push
push
mov
sbb
dec
mov
pop
mov
and
mov
dec
fwait
gs
subl
addr16
or
shll
mov
fwait
and
mov
cmp
pop
adc
aaa
mov
xchg
fs
pop
or
cmp
ret
dec
fstps
inc
inc
pusha
out
lods
insl
push
xchg
test
push
aas
or
xchg
sub
es
and
jg
sub
sub
aaa
or
adc
ret
add
dec
xchg
cmp
sub
or
and
push
dec
mov
fstl
and
inc
aaa
cmp
sub
mov
jg
push
pop
push
test
and
nop
and
and
shlb
xor
xor
jl
sub
ret
or
and
andb
out
nop
and
gs
and
lods
int
int3
ds
sub
imul
rol
mov
push
lods
mov
inc
mov
push
das
and
pop
das
andb
out
nop
and
gs
in
jnp
mov
cs
int3
ds
scas
dec
sub
scas
rolb
jmp
xor
mov
push
mov
xchg
mov
or
in
mov
inc
inc
and
inc
push
ret
push
lds
inc
and
inc
push
dec
dec
push
daa
int3
xor
lds
push
fwait
and
push
jnp
inc
pop
lods
push
lds
sub
aas
fwait
sbb
sub
push
arpl
aam
rcll
push
sahf
cltd
push
popf
lds
jnp
pop
lds
xchg
xor
jge
jge
xor
dec
inc
push
mov
mov
sahf
xchg
xchg
and
jg
add
ja
inc
dec
pop
cmp
test
lcall
sub
gs
aaa
shr
ret
gs
push
aaa
arpl
inc
pop
cmp
ret
fldcw
pop
push
gs
adc
leave
sub
cmp
push
cmp
cmp
fldcw
aaa
lea
aam
mov
into
or
dec
push
enter
and
add
das
movsb
and
ds
in
mov
push
xchg
cmp
xchg
mov
push
cmp
push
popf
mov
inc
clc
and
xchg
jae
cmp
orb
xchg
cmp
inc
aad
xchg
mov
dec
push
cwtl
or
nop
insl
adc
add
inc
test
fldenv
push
cwtl
or
push
pop
xchg
add
push
lods
add
mov
mov
fnstcw
push
push
test
loope
dec
xchg
mov
push
push
pop
in
push
cmp
lds
cmp
push
imul
xchg
mov
add
add
roll
arpl
daa
push
in
into
xchg
pop
push
pop
sub
inc
xchg
imul
xor
sub
adc
arpl
lods
lds
shrl
ret
lds
jnp
gs
jo
xchg
lds
test
xor
test
lods
gs
insl
aas
roll
lds
and
shll
cmc
dec
das
dec
mov
mov
gs
add
add
or
test
push
popa
roll
or
insl
jae
pop
inc
pop
mov
pop
push
andb
gs
mov
out
inc
sbb
jno
push
call
adc
adc
inc
int3
push
nop
cmc
dec
cltd
dec
mov
adc
adc
dec
aaa
xchg
add
pop
xchg
andb
arpl
int3
lds
push
push
rorb
leave
scas
push
mov
enter
xchg
and
dec
or
enter
int
dec
enter
jnp
push
mov
dec
mov
push
or
daa
jae
pop
lret
dec
push
andb
gs
mov
mov
gs
dec
lret
fwait
js
int3
fwait
aaa
cmp
cmp
or
dec
cmp
jns
rorl
dec
cwtl
int3
push
or
dec
jo
int
int3
ds
iret
inc
dec
or
into
cmp
xchg
ror
sbb
and
mov
gs
in
jnp
push
roll
arpl
rcrl
shrb
push
pop
rolb
cltd
mov
inc
cltd
push
lods
lods
rcl
jne
leave
test
lds
lret
and
dec
and
dec
push
int3
dec
dec
push
iret
and
push
and
push
push
orl
xchg
lds
jno
inc
adc
push
lds
and
cltd
and
testb
push
das
fdivrs
lds
imul
inc
push
push
lds
or
outsl
push
jg
push
dec
push
popa
addr16
lds
gs
jne
push
cmp
pop
mov
clc
imul
cmp
movsl
fwait
popa
scas
std
jno
dec
push
pop
mov
lds
insl
aaa
mov
adc
sub
cmp
or
add
fldcw
cmp
pop
stc
or
mov
or
enter
test
stc
push
push
jae
xchg
push
push
mov
and
cmp
ficoml
stc
sub
aas
xchg
add
add
fwait
sub
cmp
lahf
mov
mov
push
arpl
adc
repnz
addr16
insb
push
mov
arpl
jge
add
imul
mov
shll
aas
filds
pop
push
lds
and
jg
adc
cli
inc
test
xchg
pop
rorb
popa
mov
inc
add
pop
push
and
pop
inc
int
dec
push
push
jns
andb
ja
int3
mov
inc
fnstsw
pop
shlb
roll
sbb
sub
cmp
lods
pop
and
fcoms
ds
dec
pop
xor
ret
das
pop
pop
xchg
jns
lods
pop
fs
popf
aad
jns
ret
or
pop
fwait
inc
dec
test
gs
cmp
pop
jns
inc
pop
lahf
adcl
xchg
js
jns
inc
clts
mov
mov
jnp
or
pop
and
pop
mov
and
pop
outsb
and
les
inc
or
outsl
dec
push
and
test
jae
xchg
sbb
pop
dec
stos
pop
push
sub
rolb
gs
stos
ret
xchg
daa
cmp
aam
pop
mov
xor
dec
sub
insl
or
aas
cmp
inc
sbb
inc
inc
add
leave
cwtl
xor
dec
inc
adc
popa
into
mov
aam
cmp
int
lods
pop
fs
in
enter
xor
xchg
test
js
dec
mov
jne
cmp
aaa
cmp
inc
inc
add
lret
pop
cmp
or
js
pop
dec
dec
add
dec
cwtl
cmp
lret
lods
pop
jmp
mov
xchg
rorb
dec
and
aas
mov
mov
and
pop
dec
int
dec
imul
sarl
mov
cwtl
or
mov
and
sub
xchg
inc
mov
iret
cltd
xchg
cmp
xchg
jge
sub
mov
or
jnp
dec
fwait
imul
mov
lds
jns
add
lea
pop
cwtl
push
dec
test
fwait
rcl
mov
jbe
int3
test
or
pop
add
jg
push
lods
xchg
inc
rolb
fwait
mov
cmp
mov
mov
scas
xor
xchg
gs
cmp
cltd
lcall
xor
cltd
cwtl
sub
push
pop
cmp
mov
push
fwait
lret
push
pop
add
xorl
pop
push
push
dec
mov
imul
fmull
pop
lahf
or
rcrb
push
adc
pop
in
sub
outsl
inc
dec
push
mov
push
arpl
push
fmuls
xor
aam
mov
pop
les
addr16
xlat
xor
and
inc
dec
dec
stos
xlat
pop
aad
jns
push
pop
add
dec
test
repz
jne
ds
pop
add
cwtl
insl
int
lods
pop
jmp
pop
or
cmp
leave
sub
and
aaa
xchg
cmp
jno
sub
js
mov
mov
cwtl
jae
cmp
popf
aas
adcl
pop
sbb
jns
pop
shll
pop
rclb
add
mov
push
cmp
push
cmp
or
jnp
fcmove
orb
pop
fwait
inc
dec
sub
lret
iret
cmp
inc
pop
sbb
and
xor
pop
int
or
jnp
cwtl
add
jle
push
add
dec
inc
mov
cltd
inc
test
jae
cmp
fldl
lds
or
inc
jae
pop
inc
xchg
inc
xor
dec
leave
and
fmulp
xchg
inc
mov
dec
gs
jae
and
mov
dec
dec
mov
jo
int
pop
dec
xor
popf
rorb
xor
mov
jae
orl
and
cltd
and
push
ja
push
and
sub
test
jae
mov
sub
xor
call
outsl
rorb
insl
mov
imul
call
push
and
xchg
stc
shrb
dec
inc
sub
push
jno
mov
lds
jae
pop
inc
inc
cmp
xchg
push
jne
push
lds
xor
rorl
lock
xchg
dec
das
inc
les
int
aas
jo
popf
lds
jnp
or
xchg
leave
jae
xchg
sub
and
insl
loopne
or
push
test
sarb
leave
dec
pop
in
sub
adc
fnsave
lods
pop
rclb
sbb
das
shrb
movsl
and
dec
das
ljmp
addb
arpl
cltd
cmp
pop
repz
pop
add
sbb
pop
and
clc
xor
mov
xor
and
push
inc
and
add
sub
xor
push
dec
andb
gs
mov
test
inc
pop
fwait
push
xchg
aas
fwait
or
push
dec
xchg
xor
pop
sbb
jnp
xor
xor
xchg
and
push
inc
aaa
mov
out
inc
mov
mov
sbb
dec
daa
adc
mov
dec
addr16
or
andb
xchg
pop
or
jne
cltd
pop
mov
and
and
mov
inc
or
rcrb
push
jge
pop
jno
add
push
pop
dec
int
or
imul
ja
jae
mov
or
jne
cwtl
call
fisttps
cmp
iret
push
jns
insl
gs
push
inc
and
loop
ret
push
sbbl
push
push
aas
xchg
jg
orl
aaa
xchg
or
adc
xchg
and
nop
push
adc
jno
mov
or
dec
push
enter
and
push
popa
dec
jge
sub
xor
sub
dec
into
push
push
sbb
dec
pop
daa
and
push
das
dec
lahf
test
gs
pop
adc
aaa
lds
xor
insl
js
dec
and
dec
mov
jge
into
ud2
insl
adc
lret
pop
add
sub
dec
sub
push
cmp
clts
insl
stos
call
and
cmpsl
aaa
fsubl
cmp
gs
mov
ljmp
and
popf
test
jp
add
or
cmp
lds
xor
inc
inc
andb
mov
and
stos
ret
pop
leave
ret
fs
dec
aaa
jmp
and
xchg
mov
push
aaa
leave
or
mov
cwtl
outsl
dec
mov
push
cmc
and
push
scas
pop
leave
push
mov
mov
and
sub
movsl
lahf
aas
dec
subl
inc
pop
and
shlb
addr16
xchg
jnp
cltd
push
xchg
xchg
sub
movsl
add
sbb
dec
push
and
push
arpl
rcl
xchg
sbbl
push
add
dec
shlb
sub
repnz
jle
push
pop
xchg
test
mov
sahf
push
aaa
lods
pop
push
sahf
addr16
push
outsl
test
sbbl
mov
mov
xor
sub
test
push
lods
pop
push
pop
dec
jo
push
outsl
test
cmpl
push
sub
test
popa
fnsave
test
and
xlat
mov
cwtl
jns
int
leave
push
push
dec
shl
mov
xchg
test
cmp
cmp
cmp
mov
aas
inc
push
shrl
push
cmp
cmp
or
and
popl
or
gs
ret
cmp
cmp
cmp
push
aaa
mov
test
lret
dec
pop
add
out
and
pop
mov
mov
add
xor
or
int
inc
bound
into
shlb
and
xor
pop
dec
sbb
out
mov
cmp
lret
xchg
outsl
or
aad
jno
inc
loop
popf
and
cmp
pop
pop
and
aas
mov
arpl
cmp
jg
jns
int
cltd
fs
pop
outsb
pop
jns
dec
cwtl
subl
ret
data16
adc
mov
jae
arpl
push
sarl
shlb
jae
mov
xchg
xchg
imul
mov
mov
dec
sbb
push
lds
fwait
xor
push
leave
outsl
push
dec
and
mov
addr16
inc
inc
leave
and
and
add
dec
xchg
push
jne
jns
mov
lods
adc
fs
aas
or
in
pop
inc
pop
flds
lods
adc
out
mov
out
mov
xchg
push
lods
ss
outsl
adcl
cmpsb
push
xchg
ja
dec
push
push
inc
pop
lds
dec
xor
cmpsb
mov
pop
imul
pop
jae
and
popl
xchg
mov
cmp
rorl
ficoms
sub
arpl
ficompl
push
jnp
js
scas
lahf
sub
scas
lahf
push
mov
push
cmc
and
lret
insb
addr16
test
js
dec
test
xor
add
pop
js
xor
call
jae
cmp
mov
in
dec
insb
into
pop
push
jnp
into
dec
sarl
lea
inc
dec
xchg
cltd
rorb
dec
adc
xchg
xor
xor
and
jae
xchg
dec
xor
dec
xor
push
push
inc
int
push
in
push
ja
imul
sub
pop
sti
cmp
insl
lahf
xchg
sarl
push
dec
shl
in
sub
subb
pop
js
scas
fistl
shll
jno
inc
dec
imul
dec
insb
stos
test
xchg
cs
adc
lods
pop
gs
jmp
in
push
imulb
lea
fwait
dec
cmp
pop
in
lea
jae
pop
jns
inc
push
pop
and
cwtl
lea
dec
fwait
pop
pop
and
das
xor
aad
pop
push
dec
cmp
mov
pop
or
mov
inc
lcall
pop
js
imul
aas
pop
insb
lds
fisttps
or
gs
aas
or
inc
or
xchg
es
jo
rorl
jns
jle
dec
inc
fs
mov
mov
outsl
shlb
and
pop
in
jnp
popa
mov
pusha
popf
inc
in
dec
cmp
or
xchg
mov
pop
test
cmp
xchg
cmp
pop
gs
mov
leave
push
xlat
jo
imul
jno
scas
fists
ret
clc
xchg
jae
cmp
aas
jl
dec
xor
out
imul
xchg
inc
cmp
lcall
push
pop
fcompl
push
lods
xchg
fs
jae
push
xchg
andb
inc
push
add
xchg
gs
xor
stos
gs
dec
pop
sub
rcrl
cltd
leave
xor
rorl
sub
test
push
push
pop
jmp
fwait
push
fcoml
das
sub
inc
test
ja
push
add
fwait
gs
xor
std
jl
js
scas
pop
lahf
subl
adc
push
dec
mov
mov
aam
nop
fiaddl
sahf
arpl
inc
rcll
pop
aad
pop
xchg
test
aam
shll
arpl
cwtl
push
dec
or
mov
and
jecxz
cmp
push
pop
mov
cs
movl
aad
fwait
mov
mov
xchg
jnp
dec
dec
inc
dec
testb
rcrl
inc
movsb
inc
pop
inc
flds
jno
pop
xor
imul
cmp
or
pop
lahf
dec
adc
or
pop
ret
inc
xchg
pop
jnp
cmp
mov
inc
popf
fwait
jae
addr16
mov
imul
xchg
pop
sub
outsl
or
xor
js
jae
inc
dec
jae
mov
xchg
jge
lds
les
xor
adc
push
cmp
pop
dec
jge
xchg
inc
rclb
leave
das
mov
cmp
stos
dec
pop
push
push
shll
and
subl
and
nop
jno
or
outsl
aad
push
inc
sarl
and
aaa
or
sarl
mov
push
or
pop
lds
pop
xor
sar
xor
push
dec
sbb
jns
imul
mov
pop
nop
pop
dec
inc
sarl
xchg
pop
gs
das
dec
jmp
ljmp
and
jp
test
xor
arpl
iret
push
mov
popf
arpl
js
or
adcl
loope
dec
jo
stos
fwait
push
mov
jecxz
dec
fnstenv
stos
pop
jnp
aaa
and
popf
ja
add
push
gs
out
mov
cwtl
push
int
int3
js
dec
mov
and
gs
xor
cmp
inc
dec
mov
and
jp
test
xor
and
fiaddl
fnstcw
sarl
aad
fs
pop
jae
pop
inc
int
dec
arpl
imul
mov
cmp
stos
lahf
push
mov
lds
push
ds
lea
pop
aam
pop
leave
mov
xchg
in
arpl
mov
and
push
arpl
mov
dec
cmp
pop
popf
call
imul
xchg
sub
pop
push
pop
jmp
pop
push
pop
imul
imul
jae
ficomps
and
push
pop
gs
sub
and
push
jne
dec
cmp
stos
or
test
ljmp
ljmp
fwait
inc
sub
imul
fisubl
arpl
and
inc
ds
inc
rclb
in
inc
pop
mov
and
insb
js
lret
aas
or
and
fwait
xlat
in
mov
cmp
pop
in
pop
or
and
addl
cs
sub
and
es
and
addl
cs
sub
and
jecxz
mov
push
outsb
cs
sub
and
stc
popf
and
aas
pop
arpl
jno
sub
outsb
push
imul
and
das
movsb
jno
pop
adc
push
test
pop
shl
mov
test
popf
and
popf
and
jg
jo
test
popf
and
stc
stos
lret
and
jg
lock
and
stc
jo
xchg
jae
test
dec
xor
or
and
push
xor
repz
inc
dec
cmp
sbb
push
jnp
cmp
cmp
cmp
leave
dec
fdivs
popaw
sub
imul
push
pop
mov
push
ja
repnz
push
sub
lcall
adc
imul
shrb
sti
adc
pop
js
pop
sti
punpckhwd
sbb
fiaddl
cmpsb
push
xchg
dec
push
mov
imul
imull
aam
pop
mov
adc
jne
fwait
cwtl
and
push
mov
mov
push
cmp
fisubrs
push
rolb
cmc
insl
pushl
shlb
inc
or
jne
xchg
xchg
inc
shlb
inc
shr
jns
adc
mov
lds
dec
ret
jg
bound
push
inc
inc
and
sub
or
das
rorl
aas
add
repnz
std
xchg
leave
ja
inc
jo
lret
jo
fcmove
pop
aad
cmp
and
push
pusha
or
lret
fisubrl
add
mov
nop
sub
inc
or
push
push
cld
scas
push
mov
or
adc
dec
mulb
test
add
or
push
pop
xchg
out
dec
mov
mov
fcmove
jae
push
repnz
ljmp
and
dec
xchg
lret
test
push
clc
push
hlt
repnz
xor
std
dec
stc
sub
pop
mov
and
cmp
push
lahf
scas
mov
fs
push
sub
into
pop
rol
xor
dec
test
fwait
js
es
dec
adc
std
dec
cs
fidivrl
call
pop
push
imul
sub
mov
rcrl
push
xchg
inc
mov
inc
fs
movsl
imul
test
xor
push
imul
cmp
outsl
ret
mov
cmpsb
jae
push
lea
add
adc
jns
negl
test
dec
scas
popf
mov
mov
jae
pop
lods
sbb
repnz
clc
jbe
test
xor
fsubrl
mov
ss
xor
mulb
fistpl
sahf
daa
sbb
into
pop
shrb
daa
or
fstpt
inc
dec
jne
lds
js
and
repz
lock
mov
pop
dec
arpl
daa
cmc
mov
js
repz
stc
fistpl
xchg
stc
sbb
inc
aad
inc
scas
pop
push
clc
imul
neg
imul
jnp
neg
imul
test
loop
adc
imul
adc
enter
aam
and
bnd
cld
jno
inc
adc
inc
push
sub
mov
mov
btr
push
pop
movq
or
js
cmp
insb
sub
xchg
das
sbb
pop
cmp
inc
pop
dec
pop
ds
ss
out
adc
inc
cmpsb
enter
cmp
cmp
pop
imul
sub
nop
xchg
jecxz
ret
push
inc
pop
cmp
outsl
xchg
ja
push
inc
and
andl
mov
arpl
inc
call
xor
dec
and
pop
pop
xor
push
inc
daa
addb
cli
lret
cmp
cmc
inc
nop
cmp
and
pop
aam
leave
jge
pushf
and
pop
sbb
and
repnz
insb
push
stos
or
jl
in
test
ret
cwtl
dec
int
inc
cld
test
add
jg
jae
push
hlt
ljmp
or
mov
aad
sub
js
add
mov
gs
jge
scas
lret
imul
jle
das
sarb
or
std
pop
mov
aas
xchg
scas
cmp
outsl
mov
stos
xchg
addl
adc
mov
sub
jo
aad
pop
xchg
lcall
jbe
pop
stc
inc
sub
dec
and
xor
rcrl
sbb
mov
inc
or
jns
insb
jg
inc
dec
inc
pop
popf
inc
sbb
adc
adc
aaa
sbb
cmc
in
cmp
in
aaa
std
sub
ss
dec
inc
mov
ds
and
mov
jns
ret
leave
pop
and
xlat
ret
cmp
and
adc
mov
cmp
fadd
insl
arpl
jg
inc
pop
pop
in
and
inc
xchg
std
lds
dec
mov
dec
push
push
inc
pop
xchg
or
inc
push
pop
push
and
pop
sahf
mov
pop
movl
mov
lea
xchg
and
sub
cwtl
dec
setno
leave
rcrl
leave
ficoms
mov
adc
enter
push
mov
jp
cmp
push
pop
push
in
pop
in
lret
mov
das
push
lcall
mov
xor
push
sbb
dec
in
adc
cwtl
adc
push
sub
popf
push
addr16
jno
jnp
inc
aam
pop
mov
mov
or
gs
mov
popl
aam
inc
test
sub
jns
int
test
dec
cmp
add
pop
stc
cmp
inc
stos
lea
fstpl
pop
push
dec
xor
inc
jp
pop
in
push
push
aas
inc
jle
int3
pop
jecxz
mov
aam
jae
xchg
pop
std
aam
jae
inc
xchg
pop
dec
test
dec
ss
sub
add
pusha
and
jns
int3
iret
test
push
repnz
pop
pop
sub
jns
dec
aam
and
dec
sub
push
sbb
jns
pop
mov
test
into
cmp
mov
sahf
mov
shrl
xor
sub
imul
aam
inc
jnp
arpl
push
pop
mov
inc
test
and
repnz
pop
xchg
pop
std
mov
inc
shll
push
pop
jnp
sub
cli
popa
push
pop
mov
test
push
cli
popa
push
pop
mov
sahf
mov
popf
inc
sbb
push
lods
and
add
cmp
push
push
test
push
call
cmp
pop
in
cltd
aas
inc
stos
int
test
push
push
jl
iret
inc
adc
xor
scas
fildl
sub
imul
lds
in
push
jle
mov
cmc
cmp
cmp
cmc
cmp
cmp
std
mov
inc
daa
xchg
push
aam
orl
sbb
adc
in
pop
scas
xor
inc
and
cmp
mov
jo
pop
loopne
push
arpl
cmp
xlat
dec
push
fbstp
adc
and
jo
xchg
add
test
add
xor
std
adc
mov
jne
popf
test
cltd
les
push
cmpsb
xor
xor
push
leave
push
pop
xor
cmp
movntps
pop
lahf
jge
ds
cmpsb
leave
xchg
pop
add
mov
test
aad
aas
ljmp
xchg
mov
pop
push
cmp
ja
pop
fcompl
add
ja
or
jb
lret
repnz
jecxz
mov
push
xchg
xchg
les
into
pop
sarl
xchg
in
add
popf
or
aaa
sub
std
mov
pop
mov
and
lret
xor
xchg
mov
fsubl
lret
out
cmpsb
ficomps
mov
leave
popf
pop
jae
dec
dec
xchg
add
xor
popf
psllq
test
inc
dec
push
mov
jp
pop
jecxz
push
cmp
mov
mov
jae
lods
jne
in
jge
sub
stos
mov
dec
jl
dec
adc
jns
inc
push
inc
leave
pop
ljmp
std
inc
push
mov
mov
aad
push
inc
inc
dec
xlat
pusha
cltd
int3
mov
push
and
aas
popf
push
jnp
lds
inc
xor
pop
out
dec
cmp
push
pop
pop
rorb
ss
or
and
int
push
cltd
lods
xor
mov
pop
iret
aaa
push
or
arpl
pop
insb
aaa
rcrl
shll
inc
dec
and
mov
push
xor
pop
mov
fwait
sub
cwtl
aas
idivl
pop
and
aas
sub
cmpl
sti
idivl
sti
ja
mov
xor
push
cmc
jp
or
jb
push
jno
mov
xchg
push
and
jae
popf
jae
jbe
adcl
jns
in
outsl
cmpl
xor
aaa
les
test
mov
xlat
into
or
inc
pop
jo
dec
and
xchg
sbb
sub
fs
aaa
cmp
sbb
xchg
xor
fstps
lods
pop
mov
xor
fldenv
sub
xor
cwtl
fnstenv
sub
xor
fnstcw
adc
pop
loopne
xor
push
xor
fcmovbe
fstps
push
xor
xlat
inc
lahf
lds
jnp
dec
push
inc
pop
push
sub
sub
jne
mov
pop
push
jge
pop
add
and
pop
faddl
jae
and
push
lods
pop
rclb
push
push
fisttps
push
std
xchg
push
inc
lahf
lds
jae
jg
rorl
lods
outsl
arpl
sub
pop
pop
mov
mov
push
lods
outsl
arpl
jnp
inc
sbb
aas
dec
sarb
sub
inc
orb
pop
or
pop
and
cld
mov
xchg
pop
mov
push
sub
push
daa
jns
sbb
mov
adc
mov
pop
xchg
fildl
lods
sub
xchg
pop
jnp
and
scas
testl
xchg
sub
pop
test
outsb
push
dec
xorl
and
pop
insb
inc
dec
sub
arpl
outsb
jp
pop
in
jo
outsl
jle
mov
rorb
mov
fwait
pop
pop
dec
sub
stos
fcoml
fstpt
and
add
into
pop
sarb
gs
sub
mov
dec
cmp
sbb
vpshaq
scas
negl
xchg
add
lea
sub
mov
idivl
mov
jl
pop
pop
add
sub
pusha
pop
and
or
fs
fwait
pop
pop
sub
cmp
pop
aaa
test
sub
das
lods
and
add
aas
out
adc
pop
aas
aaa
insb
mov
fwait
inc
xchg
xor
sbbl
jp
pop
in
xor
test
orl
sbb
adc
scas
jge
sbb
insl
fwait
jne
dec
imul
scas
sub
lret
cmc
fcoml
ljmp
ljmp
jo
fwait
enter
xchg
and
sahf
fdivl
mov
scas
lock
jo
cli
repz
fninit
cmp
call
add
pop
and
jg
add
sbbl
rcl
cmpsl
mov
test
inc
push
sbb
pop
imul
jg
inc
es
daa
gs
inc
jne
xlat
lods
test
jns
pop
outsb
cmpsl
jge
cwtl
push
dec
das
arpl
aad
outsb
rolb
mov
add
jecxz
jecxz
xchg
push
arpl
push
xor
aam
pop
sbb
xlat
cmp
sub
dec
lds
xlat
cwtl
xchg
fldcw
test
shrb
cltd
cmp
add
test
inc
scas
and
or
push
push
pop
test
orb
adc
es
and
gs
xor
fsubrs
lret
test
sub
ja
pop
mov
cmpl
dec
dec
ret
fsts
flds
adc
lahf
and
xchg
adc
cmpl
mov
aam
xchg
repz
mov
pop
fldenv
pop
shll
fcomps
shrb
fldt
int
lret
jo
fnstsw
rcrl
jnp
fistpl
pop
adc
andb
in
cli
lret
inc
aas
cmp
mov
and
xor
pop
andb
inc
mov
xchg
pop
arpl
push
fstpl
pop
adc
andb
gs
jae
xlat
fs
mov
cmp
cmp
and
popa
add
xchg
dec
jnp
xchg
add
sbb
maskmovq
pop
sub
call
push
mov
daa
jg,pn
pop
dec
dec
inc
nop
and
inc
add
arpl
aas
cs
ret
inc
pop
pusha
and
and
daa
pop
cmp
inc
sub
xchg
in
aas
popa
das
xor
inc
cltd
push
arpl
flds
sub
arpl
mov
mov
push
jno
dec
daa
xchg
mov
test
lds
mov
mov
lds
add
xor
push
sub
and
insb
push
cli
mov
sbb
pop
or
je
cltd
stos
fs
into
and
jg,pn
ja
fs
and
mov
pop
xchg
jg
daa
dec
inc
pop
stos
and
cmp
inc
jae
pop
inc
pop
sub
pop
sbb
jg
das
jecxz
fstpt
arpl
jg
das
xor
pushl
and
lods
fstpt
arpl
jg
cmp
inc
test
out
sbb
scas
lods
inc
mov
pop
cmp
addb
cs
inc
test
out
sbb
lea
pop
inc
das
mov
gs
xor
mov
inc
gs
ficoml
gs
inc
add
addr16
push
pop
andb
jg
add
and
out
mov
cwtl
and
leave
inc
js
dec
mov
mov
cwtl
daa
int
cmp
and
in
cli
pop
dec
pushl
sti
lret
lea
lods
push
test
pop
xor
and
push
pop
pop
orl
aas
imul
adcl
fsts
dec
push
stos
pop
pop
lods
xor
inc
inc
sbb
lds
ret
cs
lcall
adc
cmpl
ljmp
shrl
adc
lods
orl
ret
mov
cmp
repnz
inc
lods
xchg
clc
add
push
xchg
add
rcll
popf
and
fwait
or
fcomi
xor
int3
test
mov
sbb
pop
test
jae
cmp
and
xchg
xchg
xor
fcomi
xor
pop
cmp
jp
das
xchg
in
dec
xlat
pop
cmpl
and
arpl
aaa
sub
lea
xchg
test
sbb
pop
jmp
lods
cwtl
push
xchg
mov
test
mov
dec
dec
fcoms
pop
jae
test
xor
test
xor
inc
pusha
pop
fmuls
repnz
xor
push
cs
test
or
in
test
xlat
sub
dec
sub
pop
aaa
or
xchg
fsubr
test
dec
pop
add
pop
ja
xchg
push
mov
jge
in
mov
in
test
xlat
in
push
shlb
fstpt
cltd
sub
sub
test
add
xor
shll
push
ss
imul
push
xchg
cmp
push
clc
xchg
sti
adc
pop
js
xor
sub
mov
pop
nop
mov
pop
movsb
call
dec
mov
movsl
sub
sub
test
cmp
in
sub
and
jl
mov
mov
inc
cmp
pop
cmc
jns
sub
cmp
cmp
test
cmp
stc
sti
rcpps
cwtl
mov
pop
mov
push
mov
or
dec
pop
lahf
pop
add
push
pop
push
outsb
arpl
cmp
pop
in
xchg
sti
or
and
in
popf
pop
xchg
pop
add
test
pop
js
pop
scas
test
std
cmp
cmp
test
shr
lret
mov
mov
push
cmp
aaa
xchg
jns
xchg
movsb
stc
cmp
cltd
lret
sbb
cltd
cs
test
mov
push
sbb
jnp
mov
pop
pop
stos
xor
sub
leave
aas
leave
push
daa
jae
dec
pop
ret
inc
jge
lods
aam
xlat
or
test
das
fwait
push
stc
mov
scas
lods
pop
and
dec
and
shll
stc
pop
ds
mov
xor
push
add
mov
test
aad
fistpll
push
xchg
pop
xchg
pop
pop
movsb
adc
or
pop
cwtl
xchg
cmp
pop
pop
mov
cmp
xchg
push
xchg
pop
nop
or
jae
pop
or
xor
popf
jnp
cwtl
pop
mov
cs
mov
xor
scas
cmc
fidivl
mov
lret
dec
dec
int
mov
ss
imul
jg
push
fdivs
sub
xchg
xchg
imul
inc
pop
or
iret
call
das
std
dec
test
popf
pop
in
insl
adc
lahf
ds
mov
or
or
xor
lds
xchg
xor
push
jae
push
xchg
ret
das
lds
lea
dec
mov
popl
into
xchg
es
sbb
xchg
fnstenv
adc
or
pop
xchg
jge
fistpl
test
aaa
sbb
pop
in
mov
fstpt
movsb
fistl
jge
add
aad
push
xor
aaa
pop
lds
or
gs
imul
inc
push
bound
xchg
dec
loop
dec
cmpsb
adc
enter
push
gs
push
cwtl
gs
mov
fnstcw
movsb
push
shl
adc
push
lods
fs
push
cwtl
fs
mov
dec
test
xchg
or
pop
jnp
cwtl
gs
sbbl
dec
cmpl
mov
je
and
mov
les
test
mov
js
adc
or
test
pop
push
daa
rcll
dec
mov
jns
add
and
push
lods
xchg
popl
push
test
test
mov
xchg
jae
fwait
or
pop
cmpsb
imul
addr16
cwtl
mov
imul
dec
inc
pop
jo
sahf
xchg
sub
outsl
lds
add
sub
mov
inc
sub
ficoms
sub
fs
std
dec
or
test
and
push
adc
mov
xchg
jg
push
push
aad
cmp
xor
push
sub
pop
push
dec
push
sub
xlat
mov
sub
xchg
shl
xchg
and
pop
insb
inc
dec
xor
xacquire
sarl
pop
pop
enter
xchg
cmp
sbb
xchg
dec
cmpl
mov
sbb
cmp
sub
imul
xchg
js
xchg
or
pop
or
xchg
outsl
mov
outsl
cli
inc
leave
sbb
lret
test
adc
or
outsl
sub
pop
sarb
push
mov
mov
adc
sbb
das
and
sub
aas
or
test
push
jno
icebp
fs
pop
orl
setg
xor
xchg
shl
xchg
xchg
pop
push
and
dec
xchg
arpl
test
cmpsb
ja
sub
adc
xor
sldt
dec
aas
xchg
dec
xlat
nop
mov
popa
ret
inc
jnp
xchg
mov
sbb
cltd
and
mov
pop
outsl
xlat
adc
lea
cmp
or
outsl
outsb
add
cs
xlat
lods
dec
lods
and
pop
pop
outsl
xchg
xchg
fwait
mov
xchg
adc
adc
pop
js
xchg
stos
rep
mov
sbb
test
adc
xor
or
pop
add
xchg
inc
icebp
inc
sarl
sbb
inc
pop
push
xchg
or
pop
cwtl
xchg
out
or
shrb
pop
jnp
lcall
pop
mov
std
dec
mov
xchg
clc
outsl
xchg
pop
pop
stos
jno
cld
mov
mov
test
cmp
inc
jno
cmp
jns
sbb
testl
mov
ja
dec
dec
jns
es
cmpb
xchg
add
sbb
testl
inc
dec
add
scas
fiaddl
cmpsb
cmp
push
sbb
jnp
ljmp
sub
mov
xchg
dec
sbb
xchg
pop
test
mov
clc
xor
leave
shrl
std
mov
xchg
and
pop
jnp
xchg
push
pop
xchg
xchg
dec
or
jecxz
shrl
js
insl
shrl
jne
popf
sbb
aaa
push
pop
sub
jnp
pop
repz
mov
xor
and
xchg
cmp
scas
xchg
pop
arpl
pop
aad
and
std
xor
and
lods
pop
ss
dec
inc
pop
xchg
jns
jecxz
in
dec
fldt
and
cltd
push
xchg
js
es
subl
test
mov
add
and
and
pop
lods
adc
in
das
and
xchg
mov
daa
push
inc
or
fwait
std
cwtl
cmp
pop
xchg
pop
push
in
es
cltd
xchg
imul
sbb
jmp
cltd
sbb
sbb
mov
fbstp
dec
sarl
mov
fwait
jge
popf
fwait
or
loop
xchg
xchg
mov
inc
pop
xchg
lahf
lods
sbb
gs
int
les
mov
jp
cmpsb
and
jmp
lcall
mov
xchg
pop
mov
cmp
mov
shlb
stos
jecxz
add
push
fcoml
add
push
shll
jo
dec
sub
mov
pop
or
and
pushf
sub
xor
pop
mov
sub
mov
sbb
cmp
andb
rcrb
mov
cmp
cmp
xor
sbb
movsb
lods
and
jne
jmp
mov
addr16
jae
push
cmpsl
add
sub
outsb
or
int
inc
add
jg
rolb
test
test
or
pop
add
sub
sub
popa
leave
pop
stos
dec
and
mov
gs
jns
sub
sub
pusha
mov
or
cwtl
test
and
xor
and
pop
insb
inc
dec
cmp
decl
and
arpl
rcll
pop
mov
mov
sahf
rorb
js
dec
sarl
ror
pop
add
test
fwait
aad
pop
push
sub
lods
pop
insl
push
or
dec
addl
lods
out
mov
sub
push
hlt
imul
repz
cmp
pop
outsb
pop
mov
pop
or
hlt
imul
les
lds
call
jge
cwtl
enter
push
dec
inc
add
sub
pop
mov
jae
cmp
dec
mov
sarl
and
adc
inc
je
inc
leave
jge
or
jecxz
fstl
pop
cwtl
insl
jae
lcall
fst
inc
mov
push
inc
jnp
push
pop
xchg
mov
pop
test
hlt
imul
lds
dec
cs
arpl
push
gs
mov
push
imul
push
insl
out
mov
aad
pop
and
daa
jae
cmp
add
lret
push
or
das
push
lds
movsl
aas
push
lds
jae
daa
xor
cmp
jns
push
push
dec
and
dec
leave
inc
sub
test
leave
and
jg
pop
enter
lahf
pop
gs
push
daa
fnsave
lds
cli
fidivl
dec
sbb
les
ljmp
pop
fildl
cwtl
pop
sti
adc
or
dec
xchg
mov
dec
inc
sbb
das
mov
popf
pop
popf
sbb
cmp
lahf
jo
jo
fisttps
inc
pop
add
mov
xchg
ret
dec
gs
rcrb
mov
jbe
pop
pop
mov
popf
pop
popf
popa
or
inc
rcll
inc
dec
loope
pop
mov
xor
pusha
outsl
pop
das
add
mov
pop
test
cmp
gs
xor
mov
xchg
xor
mov
dec
std
inc
movb
dec
shll
or
gs
lods
and
or
cs
jb
test
mov
loope
mov
loopne
mov
cmp
pop
sbb
hlt
ficoms
lret
push
adc
inc
lods
push
sub
mov
jae
lock
out
sbb
pop
lea
adc
and
mov
insl
dec
push
xchg
in
lds
jno
push
dec
jge
shrb
out
lods
imul
out
cmp
push
test
or
arpl
xor
movsl
jg
jcxz,pn
mov
jns
inc
adc
ja
xchg
pop
sbb
xchg
hlt
mov
jne
bound
cmpl
push
das
mov
push
fistl
frstor
aam
inc
and
out
mov
das
or
xchg
jg
mov
jl
loop
or
add
jnp
jmp
call
push
scas
pop
sbbl
insb
into
pop
adc
lret
test
fs
sub
mov
or
xchg
imul
cmp
lea
sbb
stc
dec
cmp
test
fwait
addr16
add
add
test
mov
jae
out
subl
cmp
pop
out
ss
xchg
sbb
jae
push
ss
test
pop
push
out
pop
in
fnsave
les
adc
lahf
xchg
pop
xlat
imul
imul
je
test
dec
jmp
adc
pop
js
sub
dec
inc
push
push
lahf
xchg
test
cld
xchg
jge
fisttpl
sub
movsl
imul
sub
repnz
xor
xchg
stos
mov
pop
cmp
cmp
cmp
jg
in
int3
xor
xor
dec
sub
pop
scas
push
pop
adc
push
andl
push
roll
mov
xor
sub
inc
les
cmp
lds
sub
cmp
adc
jns
or
jnp
pop
mov
fwait
adc
jns
jmp
ret
das
mov
js
cmp
aas
jns
and
imul
adc
addr16
xchg
pop
mov
push
test
dec
mov
dec
ljmp
ljmp
out
push
xchg
stos
jnp
insb
push
out
out
adc
dec
insb
into
pop
push
mov
iret
dec
loope
push
lods
or
jg
xor
dec
test
mov
insl
je
lcall
test
hlt
cmp
dec
fists
pop
sub
pop
roll
out
push
xor
mov
xor
lea
xchg
inc
rclb
xchg
push
aad
lds
in
xor
mov
subl
and
push
push
xor
push
dec
es
push
inc
and
outsb
and
sub
rcrl
std
imul
pop
arpl
aas
in
test
testb
icebp
dec
aam
inc
cmp
outsl
mov
or
pop
lcall
jae
shrl
adc
cmp
lahf
fdivs
inc
push
mov
sub
jae
sub
jle
stos
shll
das
and
fs
lock
push
pop
push
fidivs
js
lret
pop
mov
pop
push
jno
ja
gs
inc
jge
lds
into
pop
push
and
dec
icebp
nop
pop
jo
sub
sub
xor
pop
clc
and
test
nop
jo
pop
das
call
xchg
pop
pop
cmpsb
jle
sub
lock
push
cmp
xor
std
aaa
mov
xor
pop
and
jge
push
push
fdivl
mov
push
xor
push
test
repz
shll
or
jne
scas
repnz
and
repnz
shll
xchg
xor
es
sti
je
xchg
arpl
ficompl
cmpsb
pop
sub
stc
cmp
xchg
lcall
test
push
or
imul
mov
xor
fwait
dec
sub
jl
inc
sahf
and
xchg
jae
gs
xchg
pop
movsl
inc
fistps
dec
mov
popa
pop
inc
rorb
cmpl
fcmovbe
arpl
pusha
push
fcmove
gs
aas
mov
test
leave
ja
inc
std
xchg
or
jge
lcall
fidivrs
cmp
adc
xchg
fidivl
aam
xor
pop
rcrl
fidivrl
adc
test
jge
xchg
scas
inc
clc
es
push
xchg
imul
fwait
test
push
sbb
pop
jge
cmpsb
ret
push
xchg
addr16
outsl
sbb
sbb
pop
xchg
lock
fwait
pop
pop
movsb
jg
pop
ficoml
test
sbb
inc
insb
into
pop
xlat
mov
cmp
scas
adc
xchg
adc
insb
mov
jne
sbb
push
pop
dec
xchg
cmp
pop
out
mov
inc
push
jmp
push
mov
jnp
xchg
fwait
pop
pop
mov
dec
adc
xchg
in
testb
xchg
adc
push
jno
cmpsb
jno
pop
stos
rol
push
cltd
sub
daa
cmc
ss
sbb
cmp
xchg
jl
jnp
mov
inc
movsl
mov
sub
add
clc
mov
les
dec
pop
sub
pushf
faddl
in
stos
mov
xor
sbb
lahf
cmp
cmp
jbe
mov
push
push
push
pop
lds
sub
sbb
les
pop
and
mov
dec
mov
fdivrp
das
fwait
pop
pop
cs
inc
test
cmp
test
pop
cmp
cmp
pop
out
push
pop
xchg
fnstcw
pop
push
mov
fidivrs
pop
in
pop
cmp
lods
pop
mov
daa
pop
mov
and
pop
out
imul
outsl
pop
fwait
inc
dec
push
ret
jns
ljmp
pop
test
lret
pop
leave
inc
lock
pop
nop
mov
cmp
lahf
pop
mov
addl
cmp
pop
fwait
pop
pop
sub
sub
imul
das
scas
fwait
push
mov
and
ss
xlat
lods
imul
xlat
sub
sbb
sub
sahf
cmp
jbe
pushf
cmp
cmc
inc
sbb
fnsave
dec
and
leave
xchg
or
std
dec
out
dec
push
aaa
push
adc
jns
sarl
add
into
pop
shr
jg
and
jge
xor
xor
jg
lods
push
cmp
shlb
arpl
adc
aad
dec
pop
mov
jmp
lret
pop
outsl
cmpsb
aas
sbb
jne
inc
and
in
repnz
push
push
psubsw
sarl
pop
push
xorl
ja
cltd
adc
in
in
imul
sti
repz
xor
pop
imul
orl
push
seta
cli
aas
cwtl
inc
int
fdivl
xchg
add
cmp
adc
mov
les
aam
mov
and
sub
mov
push
subl
call
daa
aaa
pop
add
mov
les
dec
outsl
mov
scas
cld
cmp
sub
andl
insb
ret
dec
lea
adc
or
push
sub
mov
cli
cmp
push
popf
jnp
adc
mov
jg
movd
mov
xor
fcmovnb
jns
jg
or
push
stc
inc
lret
push
push
inc
or
addr16
lds
mov
lds
jge
push
dec
movsb
push
roll
das
sub
jne
lds
xor
fiaddl
mov
imul
push
push
lods
mov
icebp
lahf
adc
push
addl
mov
adc
push
fcmovnbe
pop
xor
cmc
addl
std
sbb
or
and
sub
xor
xlat
mov
jae
pop
mov
outsl
imul
mov
pop
cmp
cmp
pop
in
cmp
and
mov
xor
xlat
fsubl
pop
jb
or
and
test
dec
dec
dec
inc
enter
addr16
pop
pop
xlat
dec
das
das
stos
leave
dec
aam
pop
xor
mov
popa
and
or
lahf
addr16
cmp
in
leave
shlb
insb
into
pop
fcmovnb
jne
xchg
push
dec
rolb
jecxz
fnstcw
addr16
stc
adc
imul
inc
dec
xchg
ret
jns
out
and
ret
mov
xor
jns
xorl
out
faddl
mulb
aad
dec
lock
mov
outsl
imul
sub
nop
dec
scas
jecxz
gs
inc
popa
ret
popa
xlat
sub
cmp
imul
jnp
rcrb
jno
sub
pop
xchg
ror
jg
das
ljmp
pop
scas
xchg
push
sub
rorl
aaa
das
scas
dec
popf
gs
dec
xchg
pop
sbb
xchg
cmp
pop
push
jg
mov
ljmp
aas
push
int
or
dec
push
sbb
lock
mov
sub
jbe
lahf
push
dec
mov
jl
pop
es
fwait
pop
pop
movsb
sbb
jbe
lahf
movsb
popf
jns
es
sbb
js
jne
sbb
imul
mov
pop
push
daa
mov
cwtl
fwait
int
inc
dec
test
in
scas
mov
sbb
aas
mov
pop
cwtl
iret
aam
or
mov
dec
test
pop
jmp
jno
or
mov
insb
aaa
test
ljmp
mov
and
stc
dec
sub
repnz
insb
scas
mov
sub
jns
pop
dec
bound
std
aam
dec
inc
lret
xchg
jnp
repnz
lahf
insl
or
push
sbb
test
mov
sub
rcrb
mov
inc
leave
xchg
and
rolb
cmp
or
addr16
in
gs
pushf
aas
ljmp
fwait
lds
pop
in
jne
mov
inc
adc
jle
scas
jmp
popl
cmp
xchg
int3
inc
inc
in
lds
into
fldt
ror
fstpt
push
fildl
push
fcmovnu
pusha
rcr
lret
fldt
rclb
das
rcl
fstpt
rcr
add
rcll
mov
rcr
add
rcr
aaa
pop
addb
push
test
dec
xor
push
insb
test
pop
xchg
shll
adc
mov
lea
and
xor
les
std
inc
rcrl
mov
pop
gs
sti
jae
push
pop
subb
jle
lea
stos
xchg
lcall
push
cmp
xchg
aas
sub
jle
xor
dec
test
xchg
add
aas
add
mov
xor
dec
push
mov
out
fwait
inc
or
pop
insl
mov
mov
ret
jo
insl
les
adc
xchg
mov
cli
mov
adc
cmp
orl
lea
shll
outsl
sbb
pop
lahf
adc
adc
imul
test
pop
pop
lea
and
fdivrl
test
fsubrl
push
and
std
pop
aam
out
shr
jnp
cmpsb
push
js
test
pop
pop
pop
test
push
pop
out
cmp
pop
std
push
dec
sub
fisubrs
imul
mov
mov
dec
and
xor
or
xor
and
pop
movsl
mov
test
mov
in
jne
into
pop
push
dec
sbb
pop
jl
daa
mov
inc
gs
mov
dec
imul
mov
dec
push
jns
sub
push
inc
lods
mov
and
dec
pop
cmpsl
push
dec
aaa
test
out
push
inc
cmc
jge
or
jno
pop
mov
jmp
and
mov
mov
and
push
sub
and
ja
cwtl
and
stc
jnp
and
and
and
jns
movsb
and
mov
push
fidivrl
mov
pop
or
jg
jbe
jne
jnp
pop
aad
push
xor
or
jmp
adc
cmp
mov
pop
call
sbb
rcrl
adc
ja
aaa
popa
mov
xor
jge
popf
pop
push
push
adc
in
cmp
repz
and
pop
das
push
fisubrl
xchg
push
out
idivl
aas
and
sub
inc
sub
jae
loop
add
lahf
cmpsb
cmp
das
xor
aas
push
sub
sub
outsl
pop
or
aaa
pop
movsl
add
and
mov
gs
aas
adc
mov
popa
lcall
pop
jnp
pop
mov
xchg
ss
roll
daa
lret
sub
rcll
mov
pop
sbbl
mov
inc
mov
and
push
fmull
mov
nop
cmpsl
cli
mov
mov
pop
js
xchg
ljmp
es
cmp
es
dec
xor
pop
jge
jae
pop
mov
jg
shll
inc
push
cmpsb
fidivrl
jl
cltd
or
mov
leave
aas
pop
lahf
vpcmpgtb
mov
dec
and
popa
xor
test
sub
arpl
xlat
push
arpl
cmpsb
and
test
and
inc
inc
mov
fs
pop
outsb
sub
popa
lods
test
pop
jmp
mov
pop
js
call
xor
imul
pop
dec
and
repz
andl
adc
stc
mov
cmp
test
xor
iret
incb
pushf
mov
icebp
ds
xchg
push
push
pop
ljmp
sbb
lock
pop
sub
pop
sbb
je
outsl
xorps
xor
adc
lods
pop
insb
cmp
xchg
push
test
jnp
dec
rcll
dec
pop
in
inc
jb
test
cmpsl
push
push
out
jno
rcrb
jp
cmp
pop
pop
ret
adc
add
sub
push
mov
pop
jle
inc
mov
in
inc
lods
inc
pusha
pop
mov
test
mov
stos
rcrb
ja
jnp
pop
scas
ja
lahf
mov
lods
fwait
test
js
dec
xchg
inc
rorb
decb
xor
inc
movsb
je
xchg
arpl
mov
sbbl
aad
test
gs
cmp
pop
dec
dec
jno
lahf
cmp
test
in
insl
mov
push
mov
addr16
add
mov
add
pop
mov
sub
mov
test
aad
mov
repnz
repz
xchg
push
cmp
stc
cltd
in
repz
lcall
cmp
inc
cmc
fidivl
adc
jl
loop
adc
ds
inc
rorb
in
dec
lret
adc
xor
ja
lahf
popf
push
ficomps
inc
push
addr16
roll
mov
cmpsb
ja
push
les
adc
mov
int
mov
scas
mov
jecxz
xchg
adc
sar
dec
jmp
outsl
dec
inc
jmp
cli
lods
xor
lcall
dec
lahf
leave
aaa
sarb
leave
xchg
mov
aad
push
ds
fnsave
pop
mov
add
cmp
mov
cmp
dec
in
jae
sub
scas
fisubl
xor
arpl
jmp
mov
or
mov
and
nop
daa
int
leave
xor
mov
ficoml
fcompl
jne
sbb
inc
add
jne
stos
lods
dec
push
mov
mov
ljmp
jae
add
jne
jp
mov
cmp
push
and
adc
adcl
jae
repnz
punpckhwd
or
pushf
mov
test
leave
cmp
xor
ret
push
out
aam
dec
xchg
call
shrl
pusha
fisttpl
je
fidivrs
sbb
iret
cltd
shll
fstpl
rclb
push
cmp
jno
push
in
inc
push
pop
inc
ret
push
push
push
fidivrl
xor
ja
and
test
es
sbbl
roll
inc
and
ret
jg
xchg
mov
jne
mull
inc
and
and
and
cld
shll
rol
daa
mov
dec
pop
mov
sub
rcrl
push
rcrl
pop
pop
pop
movsl
push
vandnpd
jb
push
mov
adcl
popa
insb
inc
dec
inc
lds
push
rolb
xor
cmp
mov
pop
test
ja
push
jecxz
test
roll
pop
je
gs
jge
mov
arpl
in
aam
jne
dec
jl
cmp
ret
ret
push
lds
mov
sub
jno
jno
sbb
dec
sub
inc
ret
mov
push
das
gs
xorb
es
sub
push
pop
push
and
int
ret
adc
mov
inc
pop
mov
add
and
dec
inc
push
add
test
mov
ret
mov
mov
popf
sub
int
inc
pop
inc
push
lods
push
daa
stos
cmp
int3
sub
movsb
jno
add
cmpsb
adc
loope
mov
mov
aaa
cmpsl
xor
shrl
push
movsb
in
lret
add
es
cld
inc
add
cmp
andl
xor
aaa
xor
push
dec
leave
pop
rcll
popa
push
push
mov
cmp
mov
dec
dec
cltd
jnp
pop
inc
and
push
xchg
jg
pop
loope
inc
rolb
add
test
mov
daa
push
test
lea
shl
dec
xchg
mov
xrelease
inc
filds
push
mov
subl
inc
inc
push
test
lret
sub
add
sub
and
and
mov
jnp
and
cmp
mov
or
push
movsl
mov
push
push
push
enter
aad
sub
mov
dec
mov
jge
push
xlat
gs
xchg
push
pop
xor
stos
mov
loope
sub
popf
movsl
mov
jnp
sub
add
xor
stc
jp
xchg
clc
inc
cmpsl
sub
sbb
cmp
sub
cmp
push
fs
jg
xchg
xor
sub
pop
test
or
pop
cmp
imul
xchg
scas
pop
pop
pop
pop
pop
adc
repnz
mov
nop
ljmp
cmp
xchg
and
ret
dec
push
sub
nop
xor
or
inc
rcll
rcrb
sub
in
outsl
fdivl
mov
fnsave
mov
in
and
inc
xchg
lds
fnsave
out
in
fsub
rol
push
daa
cmp
xor
mov
into
daa
push
fcoms
xchg
jg
daa
out
imul
shll
int
mov
xor
fcompl
rcll
mov
cmp
sub
push
sub
xor
test
mov
mov
pop
adc
pusha
js
xor
das
sub
cmc
inc
mov
sub
mov
jg
xchg
mov
dec
add
fistps
std
mov
cmp
add
jo
xor
std
pop
ja
outsl
xlat
sahf
daa
pop
ja
add
xchg
pop
adc
arpl
pop
cmp
and
test
int
cmpsl
arpl
fisubs
shr
and
lock
imul
jg
push
push
and
scas
stc
and
xor
les
push
imul
push
test
sub
call
xorl
or
mov
jnp
dec
test
lahf
mov
aaa
jge
cmp
push
jne
mov
dec
test
push
sub
and
mov
xor
mov
into
inc
sti
jno
or
ss
lahf
in
dec
jb
stos
cmpsl
dec
inc
push
jmp
and
orl
cmp
scas
inc
gs
rorb
mov
insl
push
mov
pop
rcrb
and
mov
inc
cmp
pop
sbb
cwtl
push
dec
mov
movsb
pop
inc
inc
pushf
xchg
or
inc
test
lods
push
xorl
sub
sub
sub
mov
and
leave
pop
pop
push
nop
and
adc
and
and
or
jns
pop
push
and
stos
or
xchg
mov
outsl
js
push
pop
xchg
orl
inc
mov
push
inc
xchg
xor
sub
aaa
or
xchg
pop
insb
inc
subl
cmp
lea
fwait
fwait
stos
pop
test
shrl
fwait
jo
lods
fwait
arpl
and
cmp
mov
push
mov
cmp
xchg
lea
sub
cmp
daa
pop
xorl
cmp
sub
inc
sub
scas
xlat
pusha
dec
mulb
or
nop
pop
in
repnz
and
mov
mov
pop
mov
es
movsb
dec
popf
add
aaa
adc
mov
gs
push
sbb
push
xchg
lret
insl
arpl
es
inc
cmp
es
jno
add
jae
or
push
sbb
sub
pushf
xchg
imul
pop
xlat
dec
cmp
cmp
lods
loopne
imul
dec
testb
push
pop
and
mov
xor
adc
and
pop
sub
inc
sub
and
pop
dec
shll
and
test
jno
push
cmp
sub
pop
shrb
movsb
cwtl
bound
sub
in
ret
sbb
or
fisubl
adc
leave
push
push
jae
imul
xor
xor
and
xor
in
and
and
sub
adc
sub
xor
cmp
cmpsl
dec
fwait
jg
in
stos
setnp
xchg
dec
cmpsb
mov
sub
mov
fsts
test
rcl
test
arpl
and
push
ret
stos
mov
and
and
js
mov
sub
adc
dec
pop
push
dec
aad
jne
push
outsb
xchg
mov
stc
pop
mov
push
mov
dec
test
jnp
mov
inc
dec
out
pop
imul
pop
scas
sub
mov
push
push
rolb
mov
lods
xchg
or
cmpsl
sbb
and
or
push
fnsave
cmp
cmpsl
mov
mov
ret
iret
push
xchg
adc
dec
mov
mov
add
mov
rol
sub
xor
or
in
dec
mov
test
or
leave
xchg
mov
push
push
push
push
cmp
and
jno
xchg
insl
das
popf
ja
movsl
and
aam
das
aad
and
out
pop
imul
andb
xchg
sbb
adcl
mov
jne
enter
push
dec
mov
push
aad
push
or
adc
mov
mov
dec
fcomps
das
movl
pusha
push
push
rorl
mov
pop
fwait
lret
aas
push
push
andb
fwait
lret
aas
push
push
andb
leave
inc
mov
cmp
movsl
std
mov
and
sub
das
xor
shrb
hlt
repz
jae
jbe
push
inc
test
mov
xor
das
in
int
arpl
gs
test
movsb
add
aaa
xchg
dec
add
inc
cmp
jno
jmp
jae
das
cmp
test
imul
test
hlt
mov
hlt
jmp
cmp
jbe
mov
cmp
pop
dec
inc
fbld
inc
sub
push
cmp
roll
cmp
pop
orb
inc
aam
ret
pop
lds
mov
jb
xor
pop
and
pop
mov
ja
pop
adc
xchg
lods
xor
and
mov
enter
popf
mov
mov
in
pop
and
and
inc
mov
clc
mov
pop
orl
dec
cli
cli
inc
rclb
das
lret
mov
mov
push
nop
dec
movsb
xchg
jge
inc
iret
add
mov
into
popfw
sub
push
sbb
sarl
push
sub
orl
xchg
insb
clc
das
sub
ja
push
and
xchg
cmp
outsb
outsl
push
push
insl
jle
xchg
dec
xchg
insl
add
jae
out
lcall
mov
stos
pop
daa
push
and
push
inc
mov
aas
adc
stc
pop
inc
rcll
xchg
xor
and
sub
imul
inc
data16
pop
mov
cmp
cmp
and
jge
xchg
stos
cmp
and
push
dec
mov
sub
jge
cmp
or
lods
rol
cmp
xchg
mov
orl
imul
pop
popf
and
mov
lea
push
or
imul
mov
push
mov
lods
ljmp
loop
inc
push
fisubrs
sub
inc
popf
mov
xchg
fidivrl
shlb
lods
jns
mov
add
test
jnp
xchg
add
fstps
aas
adc
push
adc
jge
lret
shl
lods
xchg
adc
sub
mov
jns
cmp
call
sub
xchg
mov
push
fdivrs
adc
sub
sbb
cwtl
test
dec
lods
outsl
xor
cmpsb
gs
rcr
dec
xchg
push
xor
pusha
push
lcall
cli
inc
xor
dec
stos
dec
cltd
xor
rorl
or
mov
dec
sub
lahf
xchg
in
push
xlat
or
sub
mov
pop
xchg
pop
pop
popf
or
mov
xlat
cmp
sub
add
cwtl
cmp
stc
jnp
ffree
fisttpl
inc
pop
push
xlat
icebp
es
push
mov
xchg
mov
push
cmp
shlb
inc
fistps
dec
xchg
fsubs
andb
into
jae
xchg
xchg
push
mull
enter
push
or
fimuls
aam
test
and
pop
or
push
and
push
insb
mov
pop
shll
xor
mov
lods
mov
rcll
in
xor
fwait
addr16
xor
mov
xchg
xor
mov
add
aas
daa
mov
mov
push
inc
mov
ja
movl
inc
roll
dec
sub
pop
jp
arpl
sub
dec
push
mov
test
enter
mov
inc
fwait
aad
push
jno
mov
push
es
lcall
dec
fwait
jge
jnp
daa
sub
jno
or
jns
daa
test
cs
insb
pop
daa
mov
jge
pushf
xchg
fsubs
push
test
sub
or
or
rorb
jnp
xor
sub
rorl
inc
cli
mov
cmpsb
sub
cmpsl
xchg
and
cmp
int
test
adc
lods
push
imul
mov
fldl
sub
dec
mov
popf
push
repz
dec
rclb
sub
xor
insl
fs
sub
mov
lahf
pop
ficoml
cmp
push
and
test
cmc
test
out
mov
ret
cltd
jge
and
xchg
sub
daa
lahf
and
negl
dec
data16
pop
jmp
sub
push
inc
out
nop
pop
sub
dec
sub
cmp
cmp
nop
dec
fwait
dec
add
sbbl
test
inc
test
rorb
sub
repnz
xchg
cmp
inc
jmp
pop
jo
dec
sub
and
sbb
sub
sahf
addr16
inc
mov
and
dec
scas
lret
and
gs
xor
lahf
imul
out
pop
cmp
andb
push
pop
addb
xor
jb
movsb
repnz
in
sub
dec
es
dec
and
mov
push
push
cmp
cmp
call
insb
sub
cmp
and
ja
xor
pop
lahf
fwait
stos
shrl
inc
inc
mov
dec
xchg
pop
aas
dec
inc
or
gs
das
add
dec
push
jnp
aam
push
inc
stos
ds
xchg
adc
jp
stos
stc
cmp
pop
aas
and
push
std
sub
and
mov
cmpl
dec
sub
shll
movsl
inc
mov
sub
push
adcl
es
xchg
sbb
xchg
daa
jno
adc
lods
inc
in
dec
lock
and
lahf
inc
adc
popf
dec
cmp
sti
ja
cwtl
into
imul
mov
xor
aas
or
gs
dec
push
mov
inc
rcl
push
cmpsb
xchg
sub
dec
jb
push
es
inc
ret
sbb
inc
or
lahf
jecxz
pop
jg
dec
test
mov
mov
negb
popa
stos
xor
in
push
sub
data16
lds
cwtl
mov
pop
jmp
aam
and
push
pop
cld
iret
pop
dec
fidivrl
mov
pop
xor
mov
sahf
inc
and
pop
popf
fwait
sub
xor
aas
cmp
orb
adc
jae
mov
fldenv
push
daa
call
push
cmovae
push
test
inc
call
inc
test
mov
ja
add
dec
cmc
fwait
orl
imul
mov
pop
dec
xor
test
and
inc
xorl
mov
leave
movsl
scas
insl
pop
cmp
fwait
js
or
jo
test
cmp
fstps
stos
jbe
cmp
sub
ret
loope
js
push
fcoml
out
push
ds
dec
mov
sarb
add
dec
and
xor
nop
fwait
ja
sbb
scas
cmp
cmp
and
push
mov
pop
cmpsl
push
mov
dec
xchg
adc
shll
das
mov
or
movsl
test
shlw
in
push
inc
or
sbb
mov
pop
in
mov
pop
or
push
sbb
or
or
nop
sub
mov
pop
sub
cs
inc
lret
pop
std
mov
gs
mov
cmp
dec
add
mov
lahf
popf
jge
cmp
test
or
mov
pop
out
inc
mov
faddl
and
sub
shlb
fwait
sub
test
pop
aaa
and
pop
scas
inc
pop
pop
push
sar
xor
enter
adc
mov
xor
pop
dec
dec
test
jp
pop
cli
mov
lret
dec
and
outsl
aad
mov
push
rcr
jae
test
rol
jo
push
jb
jne
enter
popf
movb
and
cmp
incl
cmp
or
fists
int3
and
jnp
adc
inc
orl
cld
out
fdivs
mov
pop
sub
xchg
xor
cltd
loopne
fsubrp
sub
sub
aas
dec
ret
inc
mov
ds
push
ret
and
push
jg
push
popa
sub
inc
xchg
movsl
jg
enter
pop
dec
mov
jae
mov
inc
and
imul
scas
dec
push
ljmp
mov
popl
mov
dec
aam
pusha
roll
dec
pop
sbb
jp
in
test
adcb
daa
mov
push
dec
lods
ret
mov
mov
jbe
enter
cmp
mov
dec
test
daa
in
sub
push
or
mov
cli
enter
mov
mov
int3
push
or
popa
jmp
es
mov
pop
jae
mov
mov
push
stos
shll
push
or
xchg
jno
adc
jae
adc
test
xor
ficoml
shll
cmp
jo
mov
lods
sub
mov
movsl
pop
outsb
xchg
jecxz
and
cmp
jnp
stc
push
mov
cmp
sub
lahf
jmp
and
mov
jo
or
push
mov
mov
xor
sbb
push
pop
lret
push
xor
outsl
outsb
sub
pop
push
gs
or
cmp
cmp
dec
push
sbb
fisubrs
or
mov
aas
cmp
jns
cwtl
mov
scas
xlat
jl
push
gs
sub
aam
cmp
aaa
xchg
adc
das
imul
and
push
out
push
jmp
pusha
movsl
cmp
jne
pop
cmp
xchg
xor
mov
mov
push
mov
lret
fsubrs
adc
cmp
arpl
movsl
jl
mov
fs
outsl
xchg
xor
dec
xor
gs
sbb
xor
add
shll
fwait
daa
mov
insb
mov
dec
sbb
and
fistpll
fs
xchg
sub
xor
dec
sahf
sub
movsl
das
imul
pop
mov
subb
pop
or
inc
lahf
dec
jo
stos
cmpsl
cmp
dec
enter
jae
cmp
inc
stos
dec
mov
pop
test
or
stos
jb
add
xchg
pop
lea
inc
sbb
xor
cmp
mov
mov
fs
subb
push
sub
and
das
pop
in
dec
dec
mov
dec
mov
mov
or
xor
or
mov
mov
popa
roll
pop
das
inc
mov
mov
data16
lahf
sbb
xchg
cmp
dec
pushf
or
mov
das
je
or
jb
xor
pushf
push
frstor
dec
aad
lret
popa
xlat
xor
aad
dec
pusha
dec
ud2
sub
push
mov
mov
addr16
push
or
xchg
lcall
xchg
xor
mov
xor
out
fisttpl
arpl
and
sub
push
lods
push
mov
imul
nop
lret
push
aas
adc
dec
push
jns
xchg
xlat
push
sub
adc
dec
fcomps
addr16
mov
xlat
sub
loop
xchg
fs
sub
mov
adc
cmp
je
mov
stos
cmpsl
xor
aad
ret
mov
in
frstor
push
scas
xor
jl
adc
xchg
adc
imul
or
jae
jno
dec
and
cmp
lods
push
xchg
mov
jne
testl
sbb
add
xor
aad
sarl
jp
mov
out
es
push
cmp
and
and
lret
sub
fdivrs
jno
cwtl
jl
movsl
xchg
in
outsl
enter
mov
aad
inc
or
pop
pop
out
pop
xor
or
sub
outsb
push
push
ror
cmp
add
jecxz
js
push
cmp
es
in
inc
cld
xchg
push
pop
sub
mov
data16
and
xchg
shll
lea
xlat
push
xchg
jl
cltd
mov
xor
mov
or
adc
or
mov
jns
cwtl
fwait
call
fwait
push
xchg
mov
insl
movsb
es
scas
mov
xor
pop
push
push
mov
xor
dec
cmp
pop
shrl
lods
aas
fs
cmp
xor
xchg
ds
xchg
lods
cmp
inc
mov
mov
xchg
sarl
sub
cwtl
sub
dec
rcrl
std
xchg
xor
test
jle
aas
pop
das
dec
mov
insl
aad
jp
mov
lds
mov
imul
jno
addr16
mov
and
xchg
jno
cmc
ja
mov
cmc
pop
cmp
jns
mov
mov
push
adc
in
mov
sub
and
push
xor
or
inc
jl
fbld
in
sub
sbb
and
fstpl
and
xor
push
aas
mov
xchg
adc
sub
mov
cmpsb
xor
xor
sub
push
movsb
mov
adc
rolb
mov
aas
andl
ficompl
dec
mov
mov
es
shll
mov
daa
dec
rcl
das
jp
xchg
sub
and
gs
mov
cwtl
adc
sbb
and
xor
xchg
in
cmp
push
push
xchg
in
lahf
push
test
scas
cmp
and
push
lcall
lret
imul
push
mov
ss
xor
dec
xlat
lods
xchg
movsl
aad
imul
xchg
dec
cmp
aaa
inc
scas
dec
sub
int3
repz
push
xchg
pop
es
cwtl
cmp
xor
jp
and
push
js
mov
jno
mov
cwtl
lods
push
in
xchg
inc
cmpl
loope
push
aad
es
and
pop
lret
mov
fcom
arpl
mov
fidivrl
repz
fnsave
push
mov
mov
sbb
in
dec
mov
aad
adc
mov
mov
xor
fstl
jnp
enter
sarl
cmp
lea
dec
sbb
addb
in
and
xor
ljmp
push
mov
pop
scas
fstpl
dec
into
mov
mov
ss
mov
fldl
outsb
fwait
aad
mov
dec
xlat
mov
cs
and
mov
cs
xor
mov
mov
and
imul
adc
inc
jnp
cmp
pop
xor
xlat
aaa
jno
cmp
mov
adc
push
in
and
cld
and
shll
xlat
mov
inc
insb
push
push
and
mov
mov
push
in
mov
or
je
addl
xchg
xchg
xlat
mov
dec
mov
xchg
jge,pt
push
xchg
cmp
pop
xchg
xchg
and
cmp
jnp
xchg
push
mov
mov
cmp
ds
and
adc
xor
sahf
test
lahf
ficoml
cmc
fnstsw
jo
imul
jle
cmp
mov
test
ss
js
cmp
and
pop
or
subl
and
scas
rolb
push
dec
or
sub
jno
imul
ss
stos
mov
pop
xor
xchg
cmp
outsl
cmp
movsb
sub
mov
inc
hlt
xchg
lds
cwtl
imul
rcl
test
xchg
or
jnp
sub
stos
arpl
das
or
push
and
add
shrb
js
or
pop
mov
lea
jo
or
or
ja
and
rorl
mov
lcall
and
movsl
insb
jl
xor
pop
cmp
xor
pop
sub
dec
shll
cmp
cmpsb
test
inc
mov
lds
popf
and
inc
cmp
shrl
push
push
mov
mov
push
lods
mov
xor
sub
sbb
bswap
inc
out
xor
sbb
cs
jne
or
mov
push
flds
mov
xor
fwait
cmpsb
fs
enter
mov
pop
das
mov
sbb
in
cmp
in
dec
xlat
mov
pushf
push
aam
imul
mov
sub
push
popa
mov
sahf
fs
movsl
xchg
cmp
repz
mov
inc
mov
sarb
dec
xchg
or
pop
imul
push
lods
pushf
and
pop
js
nop
cmp
sub
les
mov
pusha
fwait
js
insb
lea
cwtl
push
adcb
movsb
cmpsb
sub
jne
xor
pop
jnp
das
cmp
dec
repz
sbb
imul
test
mov
shll
mov
jb
push
icebp
jno
push
xchg
insb
sti
and
mov
mov
sbb
jne
jo
insb
stos
adc
xor
jae
fistps
fsubl
out
xlat
aaa
mov
mov
jne
cmc
dec
lcall
dec
xor
bound
stc
lea
dec
addr16
pop
test
mov
sub
sub
jo
adc
aaa
lcall
add
js
adc
mov
lods
popa
cmpsl
sahf
sbb
cmp
xlat
cmovnp
sbb
inc
sub
jns
sub
and
or
imul
popl
mov
jns
cmp
push
pop
es
xchg
push
dec
repz
in
inc
mov
outsl
xor
and
mov
dec
std
pop
data16
in
aaa
movsb
jp
jmp
lods
xor
sub
idivb
push
frstor
xchg
xchg
mov
popf
mov
pop
repz
xor
push
mov
jle
mov
mov
push
std
cmpb
addb
es
pop
sahf
jae
mov
xor
lret
mov
aas
or
jecxz
outsl
jnp
aaa
test
or
gs
dec
push
call
outsl
fsubp
dec
push
xor
scas
and
lcall
cmp
cmp
daa
sbb
push
push
jp
mov
xor
fwait
xchg
test
mov
xchg
xchg
sbb
inc
push
movsb
dec
in
sub
pop
jp
or
fs
test
nop
pop
push
jnp
mov
hlt
xlat
enter
mov
pop
xchg
mov
push
cmp
xor
and
xchg
cmp
daa
mov
aam
gs
ja
push
fisubl
push
or
cwtl
mov
jnp
jg
dec
and
pop
push
insb
or
pop
in
mov
pop
jo
jecxz
insb
adc
add
mov
xor
es
bound
mov
sbb
arpl
xchg
mov
cwtl
xchg
xchg
or
xlat
cmp
pop
mov
and
in
push
pop
lahf
cwtl
iret
stos
adc
push
xlat
in
cmpb
in
mov
sti
loop
push
and
sub
ja
push
sub
cmp
sti
setg
xchg
mov
sbb
sarl
outsl
ss
mov
inc
mov
or
sub
push
in
sti
lahf
push
movsb
sub
lcall
pop
lods
lock
hlt
xor
xlat
dec
pop
leave
divl
in
xchg
and
pop
outsl
cmp
sbb
jo
or
and
fs
push
sub
add
and
inc
shl
dec
push
xor
cwtl
test
sub
outsl
sub
test
and
pop
xchg
maskmovq
testl
jmp
jae
and
or
sarl
xchg
sti
push
lea
lods
stos
push
mov
xlat
pusha
insb
dec
dec
movsb
dec
pop
and
je
and
mov
ds
aad
mov
sub
mov
ret
mov
mov
outsl
test
push
mov
ret
xor
ja
pop
mov
or
jbe
xor
test
cmp
std
xlat
mov
rolb
arpl
inc
pop
push
pop
and
in
pop
leave
sub
es
lret
push
push
sahf
adc
dec
sub
jp
lds
ds
mov
es
rorl
js
repnz
pop
std
test
pusha
imul
dec
sbb
jecxz
cld
push
pop
push
sbb
dec
jbe
data16
mov
pusha
in
push
mov
inc
add
ja
inc
push
inc
xor
pop
jnp
dec
jb
adc
mov
stc
jp
pop
push
cmpsb
jnp
cs
stos
out
sbb
mov
fbstp
cltd
mov
xchg
sub
xor
inc
sub
aad
xchg
cli
pop
lds
sub
cmpsb
lcall
cld
mov
cs
fs
pop
cmp
mov
daa
lock
test
insl
out
adc
cltd
adc
mov
jp
pop
jp
mov
pop
inc
sub
lahf
jne
js
push
sbb
jb
mov
das
sbb
movsl
push
xchg
push
push
jmp
popf
shll
cs
popf
sub
push
insb
xor
jecxz
push
jbe
cwtl
adcb
jg
ds
xor
push
xlat
xchg
ss
es
or
jmp
movsb
adc
popf
js
hlt
pop
xchg
cmpsb
jecxz
jge
jle
outsl
jns
fwait
subl
xchg
or
mov
xchg
test
cmpsl
sahf
jmp
aaa
and
add
push
sbb
repz
pop
and
rolb
shrb
xchg
push
cmp
gs
sub
cwtl
scas
mov
cwtl
push
sti
mov
xlat
shl
cmp
call
incl
push
arpl
imull
push
mov
mov
call
mov
repz
mov
pop
cld
push
mov
pop
jae
mov
mov
sbb
cmp
jmp
inc
es
cmp
mov
rorl
push
movsl
and
pop
dec
das
pop
push
popl
cmp
sub
inc
das
mov
inc
je
sbb
fwait
xchg
in
push
jae
scas
test
stos
nop
jbe
cwtl
scas
js
jnp
cmp
daa
jns
push
or
xchg
neg
push
mov
dec
xor
xchg
add
pusha
sub
inc
std
sub
icebp
jl
cmp
push
xor
mov
xchg
mov
mov
movsb
std
jg
repnz
ja
add
movb
outsb
fsub
cmp
push
xchg
adc
fwait
lods
xchg
push
cltd
mov
mov
mov
inc
mov
cmp
cltd
mov
mov
es
mov
inc
dec
pop
mov
push
mov
sbb
in
mov
test
cmpsl
jl
mov
fisubrs
mov
mov
jle
cwtl
pop
push
in
lcall
aad
dec
push
sub
push
scas
or
rcrl
scas
lret
cmp
test
jnp
es
pop
or
push
dec
cwtl
mov
enter
adc
mov
cmp
pop
and
arpl
outsb
aaa
push
lds
xor
data16
cmp
xor
pop
xchg
mov
add
inc
in
in
xchg
pop
sbb
cmp
fiadds
ds
and
pop
lret
cltd
jns
xor
jl
jns
dec
cmp
stos
fs
cs
xor
mov
cmp
arpl
pop
xchg
xor
inc
mull
fs
pop
jecxz
rol
cltd
sub
stos
shr
inc
mov
push
xchg
and
testl
jbe
pop
or
cmpsb
jg
mov
mov
scas
or
mulb
into
mov
push
cmp
mov
and
mov
jg
push
mov
add
adc
sahf
das
mov
fadds
neg
aaa
dec
xchg
xor
pop
adc
mov
dec
jp
aam
mov
xor
ss
pop
pop
testl
aaa
mov
xchg
or
test
mov
jbe
xchg
bound
xor
sub
fsubrp
daa
pop
sub
xchg
xlat
sarb
push
cmp
push
je
outsl
mov
adc
jle
popf
and
mov
out
aaa
sarb
ja
cmpsb
push
lahf
inc
std
mov
arpl
test
jae
mov
sub
sbb
mov
inc
lods
test
xchg
jle
jl
dec
mov
pop
movsl
aad
jnp
ljmp
fidivs
sub
jecxz
mov
pushf
and
sar
add
movsb
cmp
add
sub
dec
repz
jae
inc
das
sbb
daa
mov
imul
pop
imul
mov
pop
shrb
cmpsb
push
pop
jp
mov
sbb
mov
mov
cmp
cmp
xor
pop
jg
pop
je
int
push
jae
mov
aam
push
hlt
lods
xor
xchg
scas
ret
jg
jo
mov
and
in
test
lds
cmp
sub
aam
sub
xor
push
inc
aas
push
push
dec
add
dec
rcrb
stos
ss
mov
or
xchg
sarl
test
cmp
pop
adc
push
jecxz
mov
push
pop
adc
cmpsb
lahf
out
pop
movsb
jge
xchg
hlt
xchg
xor
loop
repnz
inc
and
push
adc
xchg
movsl
into
jle
lods
pop
mov
push
mov
jae
jge
mov
sbb
pop
jmp
scas
nop
xchg
nop
cmp
sub
sahf
test
push
movsl
loop
dec
mov
push
inc
cmpsb
aam
and
es
mov
sub
ds
data16
sub
mov
cwtl
xor
je
jb
into
xor
sarb
sbb
add
in
aam
xor
jnp
pusha
test
sbb
mov
rolb
mov
adc
add
subb
dec
das
pop
cwtl
and
ss
xchg
shrb
daa
fs
stos
out
cmpsl
inc
cmp
sbb
push
daa
mov
jp
ss
inc
push
cmp
mov
cwtl
mov
push
aaa
xlat
jnp
ds
adc
xchg
es
dec
in
scas
lahf
outsb
adc
insb
add
rep
xchg
in
out
lret
mov
pop
mov
add
pop
rcrl
jb
sahf
and
pop
jle
xor
cmp
js
mov
insb
test
out
mov
test
jae
mov
mov
push
mov
sahf
jle
mov
cltd
cld
mov
or
inc
lods
jbe
iret
stos
mov
popf
dec
jge
or
cvtpi2ps
sbb
jno
jmp
cs
push
adc
sti
pop
jb
call
stos
xor
cmpsl
sub
xchg
and
xchg
jo
repz
dec
mov
je
inc
ljmp
insb
stc
dec
cmp
dec
scas
jl
cmpsl
cs
or
icebp
aaa
cmp
push
sub
cs
call
sub
in
pushf
ljmpw
out
and
inc
fildll
lahf
sub
jo
mov
cmpsb
pop
hlt
in
dec
sub
fs
scas
dec
mov
sahf
add
stos
lahf
pop
sbb
xchg
sub
repnz
lods
dec
cmc
mov
aam
sub
test
sub
out
mov
loop
in
mov
sub
dec
ljmp
sbb
mov
repz
fbstp
push
das
sub
ficoms
nop
and
push
adc
dec
xor
jbe
pusha
movsb
cwtl
jne
push
imul
xor
or
sub
mov
pop
je
and
popf
sub
mov
and
insb
stos
mov
insb
sti
jo
mov
cmpsl
dec
mov
cs
lret
and
jg
sub
test
sbb
mov
jo
das
jg
or
xor
shll
jmp
cmpsb
xchg
imul
mov
cwtl
mov
mov
pop
cmpsb
popf
mov
mov
jnp
pop
xchg
ds
jecxz
outsb
and
or
mov
and
dec
test
mov
subl
dec
xor
mov
scas
lcall
push
jge,pn
mov
push
mov
jno
push
repnz
mov
nop
jae
hlt
mov
into
jne
push
mov
mov
pop
psrld
aad
ds
push
push
and
sub
mov
jne
adc
cmp
sbb
iret
pop
shlb
jle
mov
outsl
adc
lods
push
outsl
or
jg
push
fiaddl
aam
cmp
push
pop
xchg
xchg
xor
mov
and
nop
std
push
aam
dec
hlt
and
xchg
xchg
adc
mov
outsl
movsb
jo
mov
sbb
dec
cs
inc
cmp
cld
mov
sub
cmp
repz
cmp
push
dec
cli
pop
push
and
pop
push
js
out
lods
inc
sub
sub
inc
notl
dec
es
cmc
orl
xchg
push
in
pop
pop
es
shll
repz
js
aaa
adc
pop
jnp
cs
in
dec
jne
jg
dec
cvtps2pi
and
xor
or
mov
xchg
and
sub
cmc
sbb
sahf
and
fiadds
jge
sub
movsl
stos
xchg
imul
mov
jns
aaa
sub
push
mov
xchg
jo
add
jne
sbb
pop
jnp
mov
mov
jp
repz
jp
andl
insb
add
call
sub
test
stos
adc
pop
hlt
mov
adc
cmp
pushf
cs
insb
jne
outsl
xor
rcr
cmp
mov
lret
xor
js
mov
cmpsl
test
hlt
stos
cmovno
sub
aam
cs
sub
pop
mov
andb
lcall
adc
addr16
and
push
mov
pop
ljmp
stc
lahf
mov
jnp
pop
pop
lods
pop
adc
movsl
mov
pause
movsl
mov
pop
xchg
jo
dec
jne
subb
cs
ds
add
ja
scas
mov
cmc
cmp
aad
lods
aaa
fdivp
and
adc
out
jnp
mov
add
enter
mov
aaa
orb
pop
dec
mov
inc
push
cmpsl
push
sub
pop
movsb
jmp
xchg
sbb
cmp
scas
pop
and
or
and
push
test
sub
mov
add
lahf
push
push
rclb
lahf
sub
jle
xchg
int
push
xor
stos
lcall
aaa
xor
int3
add
cs
dec
dec
pop
inc
push
rclb
pop
xor
pop
push
pop
push
sub
pop
mov
insb
arpl
arpl
cli
or
mov
movsb
cmp
call
adc
add
test
adc
and
fwait
movsb
ja
nop
mov
fstpt
es
jp
push
jo
sti
jle
dec
and
mov
arpl
xor
daa
loop
pop
sub
and
insb
add
jg
sbb
sub
pop
fcoml
sub
sub
pusha
mov
mov
mov
cmpsl
cltd
adc
jae,pt
xchg
pop
pushf
xchg
hlt
sbb
cmc
mov
adc
pop
and
std
dec
sahf
cs
xchg
pop
pop
jae
xor
inc
and
push
lcall
outsl
movsb
ficomps
push
xchg
jg
pop
arpl
dec
mov
sub
stos
mov
jecxz
mov
jb
lods
int
test
adc
pop
add
inc
decb
fcompl
push
fwait
xchg
mov
aaa
push
push
xchg
xchg
mov
ret
ret
xor
sub
arpl
mov
je
gs
sub
sbb
pushf
sub
dec
lods
cmp
js,pt
push
push
sbb
pop
sub
mov
mov
lcall
stos
aas
xchg
mov
aaa
movsl
cmp
movsb
xchg
adcb
nop
js
pop
xor
es
fists
cmp
out
dec
mov
xor
adc
sbb
std
push
or
xchg
bound
inc
jmp
cmp
sahf
cs
mov
xchg
aam
pusha
cmc
cmp
cmp
arpl
dec
mov
pusha
fwait
jge
cmpsb
xchg
sub
jne
push
pushf
ds
movsb
stos
lret
xor
mov
pushf
mov
mov
fsubrl
outsl
js
pop
add
pop
lods
dec
mov
sub
jp
sub
push
imul
popa
cmpsb
subl
call
hlt
fidivrs
sub
pop
xchg
ljmp
das
scas
arpl
nop
and
ja
jle
pop
fwait
sahf
sbb
ficomps
test
sahf
pop
cmp
push
popa
jl
mov
fidivs
sub
or
addr16
sahf
inc
push
sub
cmp
dec
out
dec
xor
jne
pop
push
stos
mov
and
jl
dec
and
adc
sahf
cmp
out
adc
pop
adc
bound
cmp
push
inc
cmp
xor
addr16
or
imul
push
and
hlt
mov
std
mov
jg
mov
in
mov
ljmp
sbb
aad
push
xchg
push
push
repnz
scas
jo
pushf
cwtl
mov
cmp
aas
mov
mov
arpl
add
popf
mov
push
test
cmp
or
inc
xchg
cmpb
xchg
mov
fs
and
jg
scas
xlat
negl
mov
xchg
xchg
sbb
je
and
push
js
jl
lods
mov
imul
nop
or
das
push
gs
cmp
fmuls
adcl
mov
inc
sahf
stos
push
or
imul
xchg
and
mov
out
aaa
orb
push
outsl
sub
outsb
xchg
in
push
cmp
test
cwtl
mov
dec
popf
sub
je
push
jnp
lret
and
arpl
push
pop
lahf
sub
aad
aam
adcb
pop
hlt
xlat
enter
cmpsb
loopne
mov
mov
ds
imul
jmp
jo
movsl
pop
dec
pop
xor
push
and
jecxz
sbb
push
mov
repnz
lea
and
mov
outsl
mov
les
or
cmp
ret
pop
cs
outsl
lret
sahf
sub
xor
cmovbe
ss
mov
aaa
xchg
sub
daa
insl
pop
xor
stos
fwait
add
xor
test
fimuls
rcrb
aas
das
and
mov
sub
test
xor
movsb
adc
cmp
inc
std
push
test
call
sub
pop
xor
scas
xlat
mov
cld
mov
mov
test
adc
shrb
das
adc
clc
fwait
lahf
mov
and
mov
pop
shll
or
cmp
es
xchg
sarb
pop
sub
xor
xchg
xor
outsl
mov
mov
push
lahf
scas
pop
and
ljmp
std
fs
mov
cmp
jl
arpl
push
push
and
lahf
imul
in
daa
xchg
sbb
inc
or
das
in
sub
mov
aaa
js
es
test
add
repnz
xor
nop
dec
call
fisubrs
movsb
xchg
push
mov
mov
mov
fmull
push
jbe
pop
jg
sbb
xchg
xchg
mov
cmp
sbb
push
jnp
mov
jmp
and
dec
cwtl
fisubrs
cmp
cli
mov
xchg
and
mov
push
sbb
jge
add
and
xor
fwait
pop
mov
jmp
jl
lea
push
mulb
mov
xchg
scas
adc
and
or
test
pop
bound
les
mov
and
pop
cmpsb
cwtl
pusha
jle
jl
popa
xchg
dec
mov
sbb
and
and
sti
cld
insb
sub
jg
mov
insb
mov
insl
js
fistpl
cmpsb
fs
dec
push
adc
in
cmp
jmp
push
mov
test
lods
insl
push
jb
sti
mov
adc
mov
ds
popf
xor
ds
push
cmpsb
cmpsb
mov
jle
cltd
js
mov
adc
das
adc
jecxz
cmp
mov
cmp
and
mov
dec
js
add
subb
jle
pop
aam
and
mov
xor
xchg
xchg
hlt
fidivrs
adc
shrl
jle
mov
fldt
dec
pop
ljmp
out
fs
movsb
jbe
mov
sbb
push
hlt
scas
divl
cld
js
mov
in
rolb
out
iret
and
adc
mov
comiss
in
cmpsl
inc
and
das
or
jle
or
xchg
mov
imul
sbb
mov
xor
sbb
nop
inc
jo
lcall
mov
xor
sbb
inc
mov
jnp
dec
shll
hlt
xlat
fs
lods
mov
sahf
xor
cltd
jne
jmp
negl
nop
test
popa
sbb
dec
jmp
aad
xchg
dec
mov
sub
lock
in
jnp
scas
jecxz
xlat
xor
push
mov
fs
inc
cli
adc
xor
or
shll
mov
sub
ucomiss
xchg
lcall
or
jmp
fs
cmp
push
xchg
sub
mov
sbbl
push
sub
sub
and
dec
cmp
xchg
and
push
push
jo
pop
call
hlt
push
int3
push
cmp
pop
js
pop
or
jne
stos
shrl
scas
jne
sub
jmp
int
jne
jne
scas
xchg
cmp
dec
lcall
sub
sub
nop
pop
or
mov
aaa
test
das
cmp
jg
sub
sub
hlt
adc
sbb
and
mov
cmp
les
mov
and
addr16
sbbb
push
push
pop
in
dec
and
gs
movb
sub
lret
xchg
xchg
lock
push
mov
fs
ljmp
or
lods
lock
mov
xor
jecxz
mov
repz
jb
jae
jno
icebp
xchg
adc
pushf
pop
lahf
ds
cmp
mov
aad
cmp
xor
data16
popf
popf
mull
jo
jbe
imul
fwait
xchg
push
call
popa
xchg
nop
and
pop
scas
jmp
jo
push
out
test
push
mov
jge
adc
sub
mov
adc
cwtl
add
pop
pop
or
pop
jg
xor
pop
push
ljmp
xlat
shlb
dec
mov
cmp
xchg
mov
and
lods
icebp
jae
push
cs
dec
scas
pop
popf
adc
enter
or
repz
sub
push
stc
jge,pt
sbb
mov
push
sbb
sub
push
jnp
std
xor
stos
sbb
adc
mov
jp
sbb
je
hlt
xlat
das
xor
push
xchg
fs
sub
sbb
cs
cltd
and
cld
xlat
outsb
cmp
sub
cmc
and
std
test
mov
popa
adc
and
imul
negb
insl
jo
mov
cmp
xor
cli
sbb
shll
cld
xchg
jmp
push
aas
ds
sbb
or
cmpsl
xor
into
outsb
push
cmp
adc
inc
mov
mov
stos
es
xchg
jno
test
lock
xlat
stos
into
inc
adc
std
xor
cltd
adc
jae
out
cltd
pop
fs
inc
fabs
pop
sarb
sub
push
xorl
in
rolb
in
xor
movsl
mov
and
test
mov
sub
aam
pop
sarb
mov
cmpl
cmp
dec
popf
or
xor
xchg
or
dec
aas
in
pop
scas
mov
pop
cmc
out
jecxz
mov
ss
jbe,pn
sub
testb
pop
cli
fbstp
dec
stc
fidivrl
jge
mov
not
js
sbb
xor
dec
push
js
pushf
cs
shrl
pusha
in
cmpsb
test
sti
loop
mov
push
adc
repz
push
xchg
or
mov
xchg
xchg
out
test
ds
pop
mov
fbld
test
push
push
mov
dec
scas
xchg
jle,pn
xchg
sub
and
mov
inc
mov
sarl
inc
pop
sbb
mov
scas
neg
push
fisttpl
sbb
sub
leave
clc
jp
sub
ja
and
sub
ljmp
pop
clc
pusha
jl
aam
rcll
sub
xor
loope
pop
lods
aam
mov
cmp
xchg
jae
cmp
inc
mov
repnz
out
or
adc
cmpsl
jo
andl
inc
sarb
test
mov
das
sub
je,pn
rorb
jno
cmp
jne
push
xlat
sahf
in
xchg
mov
pop
jne
push
popf
es
in
inc
lahf
mov
jae
sub
xlat
sbb
xchg
movsb
stos
mov
in
insb
mov
inc
push
adc
sub
imul
pop
jp
adc
aad
ja
push
js
addr16
decl
lcall
push
mov
rclb
das
pop
cwtl
jnp
lock
mov
mov
inc
push
push
cmp
push
in
lret
xchg
mov
cmc
dec
pop
push
push
and
and
in
xchg
xor
cld
xchg
je
fidivrs
push
pushf
cmp
sti
cld
js
mov
xchg
lea
xlat
lret
in
dec
std
scas
cmp
adc
mov
cmp
xchg
sub
sub
sub
inc
cwtl
movsl
loop
mov
movsb
add
xor
jnp
jne
adc
jp
xor
and
mov
stos
repnz
mov
adc
inc
imul
sbb
inc
aas
adc
jnp
add
jge
mov
push
xchg
xchg
in
jmp
dec
sarl
adc
sub
pop
popf
outsb
jae
xor
outsl
es
push
xchg
jl
or
stos
popl
mov
pop
imul
lcall
mov
jo
cmp
cld
inc
cld
jae
js
xchg
fcompl
jge
pop
sarb
push
push
and
jge
or
sub
xor
call
aaa
jnp
push
std
push
sbb
jle
push
push
les
pop
mov
xchg
pop
cwtl
sbb
js
add
insb
add
dec
mov
cmp
sub
or
aam
pop
mov
repz
xlat
xchg
push
mov
hlt
out
mov
in
fisttpl
pop
push
push
clc
dec
pop
in
inc
fsubrl
call
and
mov
and
insl
xchg
sbb
jo
push
xor
testb
ljmp
jle
mulb
pop
test
idivl
cld
aam
scas
jle
aas
sbb
subl
xor
mov
mov
mov
xor
jne
out
mov
sub
pop
sbb
das
add
and
fs
out
jne
les
jb
sbb
lret
out
cmpsb
jnp
cmpsl
inc
pusha
xchg
jle
jbe
je
sub
cmp
jge
in
inc
sub
jmp
cmpsb
cmp
cmpl
lcall
mov
lea
and
jbe
popa
out
jmp
aas
push
xor
push
sub
in
cmp
jno
out
and
cmp
and
test
jge
adc
and
xchg
jno
sbb
cwtl
xor
lcall
push
mov
or
cwtl
sub
mov
push
lret
and
and
outsb
addr16
cmp
pop
test
clc
mov
xchg
adc
scas
sbb
add
push
rcr
xchg
mov
cld
pop
test
cwtl
dec
xchg
adc
sub
push
jg
mov
mov
shrl
adc
mov
lcall
push
dec
push
adc
mov
cmp
aaa
fs
imul
pop
sub
xchg
fsubl
in
jp
scas
sarb
in
or
sbb
dec
jp
shll
mov
cmp
sti
inc
dec
roll
dec
or
xchg
xchg
das
imull
adc
shrl
daa
mov
mov
and
lock
dec
jg
aad
gs
adc
bnd
push
inc
aad
mov
out
pushf
mov
push
rol
mov
gs
dec
mov
mov
dec
pop
xchg
jmp
xor
sahf
lock
jge
fdivr
aaa
mov
adc
iret
sub
inc
divb
pop
test
jo
mov
inc
jmp
outsb
inc
sub
sub
push
sbb
enter
or
lret
xchg
xor
ror
insb
lret
xchg
push
xor
pop
jl
cli
adc
sub
enter
sbb
or
mov
cwtl
dec
in
mov
fldt
lret
int
sbb
push
inc
leave
jmp
lahf
fldt
sarl
fwait
ss
es
dec
and
cmc
pop
nop
jae
dec
inc
or
aaa
and
fs
xchg
mov
aas
adcb
repz
inc
mov
mov
push
pushf
leave
inc
mov
sub
mov
mov
and
push
sub
test
cmp
mov
enter
xchg
sub
aad
les
sbb
sbb
fwait
jns
and
gs
mov
and
pop
pop
dec
xor
adc
and
jae
pop
and
imul
leave
rolb
scas
mov
adc
popf
and
jbe
cmp
dec
push
sub
cmp
cmpsb
and
test
push
dec
imul
pop
adc
jae
or
sarl
mov
jge
stos
pushf
cmpl
jmp
out
ret
lods
pop
jp
movsb
sahf
test
movsl
cmp
push
sarl
orb
mov
inc
pop
sbb
insb
roll
shrl
pop
dec
add
sti
add
mov
add
inc
ffree
pop
cmp
cmp
add
add
add
or
or
adc
adc
sbb
sbb
loop,pt
in
out
call
ds
ds
or
popa
push
pop
iret
jbe
push
fcmovu
es
mov
mov
fnsave
data16
fdivrl
adc
fists
pop
jne
idiv
loopne
call
daa
clc
sub
sub
mov
clc
add
jp
int
into
jae
jne
ja
jns
jnp
jge
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
fstp
iret
ds
lock
xchg
mov
scas
or
in
pop
outsl
gs
sahf
cmpsl
mov
ljmp
jne
ja
fstpl
rcr
rcrl
pop
fcmovnu
fstp
mov
fisubs
fisubrs
fidivs
fidivrs
fidivrs
fiadds
fimuls
fimuls
fimuls
push
ficoms
ficoms
ficoms
push
ficomps
push
sbb
fcompl
pop
pop
or
adc
mov
pop
mov
add
in
leave
mov
inc
mov
xchg
jae
fstp
nop
inc
xor
xchg
loopne
fldt
rcrl
push
jne
ja
jns
jnp
fstp
rcrb
lods
pop
xor
movl
pop
mov
jg
dec
fnstsw
push
cmp
cmp
aas
cmp
cmp
ds
jge,pt
pusha
add
xchg
add
cmpsb
shlb
add
mov
mov
es
movb
xchg
pop
js
sub
cmpsb
jae
jne
ja
jns
jnp
jge
fstpl
aas
jne
ja
fstp
mov
pop
loopne
xchg
pop
fstpl
in
imul
jne
ja
dec
ret
adc
inc
and
mov
mov
adc
int3
pop
mov
sub
adc
in
push
xchg
sub
pop
sti
inc
fmull
test
fbstp
or
adc
sbb
jno
pop
les
jne
ja
jns
jnp
mov
sbb
imul
rep
ja
fidivrs
fiadds
movb
cmpsb
pop
or
fnstenv
inc
cmp
pop
into
rclb
ret
add
adc
loop
repnz
stos
repnz
ss
repnz
repnz
xchg
repnz
fwait
repnz
repnz
push
fnstcw
cli
dec
and
adc
punpckhdq
fadds
mov
ds
ds
ds
ds
ds
ds
ds
arpl
gs
jno
jne
ja
jns
jnp
jge
jg
pop
cmp
inc
cmp
dec
cmp
aas
dec
ds
ds
ds
ds
test
inc
push
pop
jg
jg
jg
jg
jg
jle
jg
jg
jg
jg
call
aaa
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
call
xchg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
mov
cmp
clc
jge
jg
rcr
or
inc
sbb
dec
call
push
clc
push
clc
push
clc
pop
clc
pop
clc
pop
clc
pop
clc
and
and
and
clc
sub
clc
xor
xor
clc
cmp
cmp
clc
cmp
clc
xchg
mov
mov
clc
clc
xchg
clc
xchg
clc
xchg
clc
xchg
clc
cltd
clc
fwait
clc
popf
clc
lahf
clc
popa
jns
pop
sti
jae
inc
fcmovb
pop
mov
out
jne
add
push
or
adc
loope
clc
out
insb
clc
jb
cli
clc
jle
rcrb
cwtl
dec
cmp
repnz
inc
rcr
es
xchg
into
push
cmpsb
xlat
pop
pop
in
inc
and
daa
std
sub
das
std
xor
mov
mov
std
jmp
jl
dec
rcrb
push
cmp
in
mov
sub
jg
jg
mov
and
lea
ficoms
ficomps
fisubs
arpl
fisubs
imul
outsl
fidivs
jae
jne
ja
jns
jnp
jge
fstp
inc
pop
inc
faddl
dec
fisttps
dec
fimuls
push
xor
push
xorps
pop
push
xor
js
cld
mov
cmp
aas
bound
push
jg
ret
ficoms
aaa
sub
aaa
mov
out
out
out
push
mov
imul
pop
int3
popf
sub
aaa
cmp
and
icebp
fidivs
cld
inc
rcr
es
xchg
out
into
jne
jge
jg
jg
jg
jg
cwtl
xor
jecxz
outsb
ds
dec
pop
pop
ficoms
nop
iret
cltd
mov
cmpsb
cmp
out
out
out
loopne
fadds
lret
adc
sbb
xlat
call
and
clc
mov
aaa
clc
cmp
mov
mov
icebp
std
repnz
cmp
push
xchg
out
lds
push
jb
fstpl
pop
pushf
fsubl
ficoml
out
insl
loopne
pop
pop
jae
jne
mov
mov
mov
or
pop
nop
jae
nop
push
roll
aam
and
mov
call
mov
jo
cmc
bnd
cli
bnd
in
jmp
push
hlt
push
inc
pop
push
xchg
nop
sub
das
xor
cmp
mov
jne
ja
jns
jnp
jge
jg
jg
jg
jg
mov
fucomi
adc
outsb
mov
dec
jp
cld
ret
leave
shlb
fimull
xchg
mov
dec
in
jmp
push
cmc
pop
mov
mov
and
or
cmpsb
jp
out
out
out
out
out
out
in
mov
std
test
xchg
mov
mov
std
std
xchg
std
xchg
std
xchg
std
xchg
std
cltd
std
fwait
std
popf
std
lahf
std
popa
std
arpl
gs
addr16
imul
outsl
std
jno
jae
lahf
ja
jns
jnp
repnz
adc
dec
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
and
and
sub
sub
clc
xor
test
test
xchg
mov
das
popf
jle
jecxz
jl
mov
iret
adc
push
adc
iret
mov
rclb
xlat
add
call
clc
adc
xchg
clc
pop
js
sub
in
push
ds
sti
jg,pt
inc
pop
dec
adc
mov
inc
mov
jg
ret
fmul
push
dec
xchg
and
sbbl
adc
jge
jg
add
in
jmp
dec
cmc
dec
stc
push
std
push
std
push
std
push
std
pop
std
pop
jl
cmp
and
and
std
sub
sub
std
xor
xor
cmp
jg
jg
jg
mov
mov
xchg
out
out
in
xchg
xchg
fwait
call
mov
gs
addr16
imul
dec
jno
jae
sahf
cmpsl
ja
fidivrs
jge
jg
fstp
inc
push
inc
gs
push
dec
dec
cmovge
dec
or
push
adc
repnz
repnz
repnz
repnz
call
clc
sub
mov
xor
xor
xor
outsb
mov
pop
into
mov
add
loopne
call
add
jecxz
push
das
lds
mov
jo
and
inc
movsl
fistl
pop
sub
rdmsr
mov
out
pop
rcr
gs
jne
sub
jbe
push
movsl
cmp
icebp
daa
test
std
mov
cmp
fiadds
add
fisubs
jmp
ret
pop
xchg
aaa
dec
fdivp
in
call
and
jae
jne
ja
jns
jnp
mov
into
setno
xchg
or
and
popf
ds
ds
lods
arpl
pop
push
fcompl
iret
orb
insl
pop
scas
fdivl
andl
jno
cltd
jg
jg
mov
ret
pop
stos
or
mov
mov
cmp
mov
cmp
je,pt
stc
jge,pt
inc
pop
inc
adc
push
bound
dec
push
setb
pop
add
stc
rcrl
test
pusha
push
aaa
arpl
lea
ds
ds
ds
ds
ds
ds
ds
ds
ds
outsb
mov
dec
pop
clc
fsubl
sbb
jb
int3
cmp
push
mov
and
lods
push
mov
das
cltd
add
jae
jne
rcrb
sub
mov
adc
adc
rcrb
pop
mov
pop
cmpsl
fcompl
incl
lret
pop
dec
or
sbb
lock
fstl
das
pop
data16
insb
inc
pop
dec
pop
inc
adc
inc
cmpsb
dec
dec
cmpsb
dec
add
repnz
repz
mov
pop
and
and
and
ds
or
fidivs
push
and
popa
cmpsb
pop
rcrb
fmul
rolb
or
cltd
in
cmp
fnstsw
je
clc
enter
loop
inc
imul
jbe
push
pop
divb
pop
adc
mov
mov
sub
cmp
or
mov
adc
push
pop
and
jno
add
fidivrs
ret
and
push
cmpsb
xchg
pop
outsb
pusha
inc
pop
les
fwait
mov
lea
xchg
movsb
mov
popf
inc
jae
jne
ja
jns
jnp
mov
outsb
add
faddl
mov
andl
jg
jne
ja
jns
jnp
jge
jg
jg
mov
test
int3
iret
rorl
insl
and
es
mov
std
mov
clc
cltd
clc
jne
stc
js
mov
in
push
push
repnz
repz
jno
insb
jg
jg
pushf
sub
and
stos
cmp
jle
jno
test
or
es
push
mov
decb
pop
rorl
aam
pop
and
sub
add
xchg
cltd
cltd
pop
cwtl
lods
and
scas
add
loop
repnz
pslld
repnz
call
imul
pop
scas
in
shrb
repnz
or
clc
out
js
cmp
dec
fisttpl
ror
xlat
or
loopne
and
cmp
mov
rorl
fiaddl
dec
jmp
loope
and
test
scas
std
mov
sub
jg
jg
mov
arpl
in
imul
popf
dec
pop
inc
adc
iret
rorb
mov
cmp
cmp
rorb
adc
sbb
add
push
jns
fisttpll
adc
and
cmp
mov
add
push
add
jns
lea
fidivs
and
and
push
lds
fsts
rorb
inc
and
mov
daa
call
ds
imul
outsl
std
jno
jae
jne
ja
jns
jnp
pop
jg
lret
fistpll
mov
add
or
adc
loopne
pop
fisubl
pop
xor
pop
nop
fistps
rorb
cs
xor
sbb
loopne
fs
imul
les
mov
xchg
cmp
xchg
sub
popfw
ljmp
gs
out
out
out
in
mov
std
jns
jnp
jge
add
inc
in
pop
lahf
xchg
sahf
cmp
xchg
inc
popf
jg
jg
fstpl
sub
cmp
je
into
xor
mov
sbbl
push
into
mov
lea
setno
xchg
adcb
imul
adc
inc
ficoms
pop
jmp
ja
mov
jns
in
sub
out
repnz
repnz
pop
pop
cmp
cmp
cmp
cmp
jne
push
add
jae
std
or
ficomps
nop
notl
out
out
out
out
in
repnz
lret
push
fwait
rsqrtps
jae
push
or
cs
push
mov
mov
mov
lea
inc
pop
inc
sub
dec
cmp
aas
dec
ds
movsb
push
jno
out
out
in
pop
nop
out
out
in
mov
std
sub
sub
std
xor
pop
gs
into
orl
ja
jge
setae
xchg
seta
cltd
setnp
popf
setg
popa
packsswb
packuswb
imul
xchg
add
jne
ja
jns
jnp
lea
popa
fiaddl
inc
jne
pushf
sub
push
sub
push
push
pop
sub
cmpsb
das
and
and
sub
sub
xor
ret
repz
ss
js
cmc
cmp
mov
cwtl
and
xchg
and
lds
mov
fwait
std
popf
std
lahf
std
popa
std
gs
addr16
imul
jg
jg
jg
jg
pushf
mov
jge
jg
fldl
inc
mov
or
mov
outsb
sub
outsl
fwait
jo
call
push
and
ret
jbe
loope
fcompl
mov
push
ljmp
bnd
ret
rolb
inc
mov
add
add
dec
repnz
jae
jno
push
jg
loope
ljmp
and
sub
xor
xor
xor
cmp
and
ss
mov
fisubrs
es
dec
rorl
pop
mov
push
imul
fnstenv
outsb
test
mov
xchg
mov
mov
or
mov
cmc
pop
mov
mov
lds
pop
mov
xchg
lods
arpl
gs
addr16
fisubrs
insl
add
jae
cltd
imul
jg
dec
pop
inc
adc
inc
mov
dec
cmovg
push
rcpps
push
xorps
pop
mov
dec
pop
or
fwait
ret
repnz
sub
sub
repnz
xor
repnz
cmp
repnz
xacquire
lahf
insb
rorb
lock
push
jg
dec
cmp
cmp
cmp
push
daa
inc
fdivl
fidivl
popf
jns
popa
or
dec
repnz
add
jae
insl
ja
jns
dec
into
jge
jg
dec
aaa
dec
out
test
in
dec
or
xchg
loope
cmp
cmp
fidivrs
fiadds
xchg
mov
jge
fimuls
mov
addr16
shrb
xchg
outsl
std
jno
jae
jne
lds
jge
dec
inc
fiadds
test
inc
mov
dec
or
xchg
push
jg
jg
cmpps
repnz
jne
fisubrs
push
xor
aaa
jno
ja
jge
or
cltd
sbb
cwtl
popf
repnz
repz
xchg
popf
fisubs
addr16
rep
xchg
jae,pt
jne
ja
jns
jge
jg
dec
dec
push
dec
dec
ror
inc
jae
jne
ja
stc
jl
dec
lock
clc
push
clc
push
clc
push
clc
push
jp
daa
pop
jecxz
add
and
and
and
sub
sub
into
xor
clc
cmp
scas
into
or
push
imul
outsl
jg
jg
jg
sahf
addr16
jns
jnp
jge
jg
dec
flds
inc
enter
dec
sti
cmp
push
jg
jg
adc
ja
minps
fisubs
shlb
mov
std
sub
jnp
out
out
out
out
out
out
out
out
out
out
in
jge
ds
sub
add
xchg
clc
xchg
clc
cltd
js
imul
packuswb
imul
outsl
pcmpeqw
ja
jns
imul
push
or
mov
push
inc
jo
add
lods
mov
add
adc
fsubp
jmp
ds
inc
fcmovnb
es
xchg
out
cmpsb
movsl
das
loop
in
and
insb
sub
rorl
jae
repnz
pop
jae
jne
mov
sbb
sub
xchg
and
loope
js
xor
cmp
cmp
cmp
and
add
pusha
loope
sarl
adc
xchg
push
ss
or
xchg
pop
mov
push
dec
pop
inc
cmp
ret
out
addr16
packuswb
xorl
mov
jnp
push
nop
negl
pop
mov
push
jg
in
jl
pop
jge
dec
loop
jmp
addr16
jle
fimull
lods
cmpsl
xor
insb
xor
mov
fiadds
adc
mov
push
sub
call
jno
push
pop
scas
mov
scas
jle
lret
cmp
pop
xorl
icebp
ss
rol
add
mov
ss
mov
loope
pop
std
call
dec
loop
data16
fildll
sbb
loopne
push
mov
lods
mov
jp
clc
sbb
cmp
loopne
call
jb
cli
aas
pop
ret
dec
ror
mov
nop
rclb
ret
repnz
repnz
push
idivl
jg
push
cmp
cmc
leave
mov
jmp
cmp
mov
xor
fimuls
jo
pop
sbb
mov
cwtl
sub
pusha
addr16
or
mov
in
mov
and
pop
push
in
pop
pmuludq
push
ret
adc
and
cmc
push
mov
jg
jg
adc
and
faddl
sub
lods
mov
repnz
cmpl
js
mov
paddw
fadds
inc
lea
repnz
mov
ds
cmp
fldl
xlat
pop
add
add
cltd
inc
mov
jns
jnp
fwait
jnp
mov
cmp
clc
mov
imul
ret
jae
adc
fcomp
pop
or
jp
mov
dec
pop
push
jo
rcrl
inc
and
and
in
mov
std
ds
sahf
xchg
mov
cwtl
ds
stc
loopne
js
cmp
sub
mov
ret
jae
fstpl
xor
jge
push
mov
or
pop
cmp
cmp
addb
cmpsb
pop
adc
adc
jmp
out
repnz
repnz
repnz
ret
ror
mov
sub
mov
push
sbb
sahf
jno
ja
and
cltd
xor
lsl
pop
adc
loop
repnz
jae
jno
clc
jg
jg
cmp
xchg
cmp
push
push
jno
inc
fstpl
and
mov
dec
fadd
insl
pop
das
shll
adcl
pop
dec
xor
xor
cmp
add
push
pusha
inc
adc
jl
pop
int
fcom
in
inc
cmp
push
cmc
jle
jno
sub
movsb
aaa
xchg
sub
adc
and
lds
je
sub
es
inc
pop
dec
movsl
icebp
pop
and
push
stos
and
mov
xor
pop
cltd
insb
in
jmp
jg
jg
push
xchg
ret
push
loopne
shll
cmc
sub
std
mov
mov
std
or
pop
adc
call
jg
push
pop
dec
je
xor
ss
inc
pop
cwtl
cwtl
sub
insl
jno
into
movb
fsubl
cmpl
jg
stos
ret
outsl
mov
sbb
out
jae
jmp
loopne
js
mov
xchg
outsl
sarb
pop
mov
cltd
push
fisubrs
jns
shll
push
pop
lods
and
xor
jne
fnstcw
sbb
loope
insb
lret
bound
push
fstp
lods
pop
mov
popf
movups
push
mov
jns
popa
mov
push
repz
jns
out
out
in
sub
dec
andl
mov
adcl
or
das
mov
dec
inc
mov
xchg
in
add
call
outsl
xchg
dec
rcrb
mov
sahf
insl
pop
repz
fs
ljmp
icebp
add
mov
in
cmp
cmp
test
popf
lcall
movsb
mov
andl
sub
inc
jmp
sti
mov
mov
jne
aas
jo
pop
ljmp
gs
test
jnp
mov
lea
orl
xorl
dec
dec
pop
sub
push
insl
pop
ret
rclb
pop
shll
fbstp
jge,pt
jg
push
fwait
stos
in
jmp
test
pop
sub
mov
fstp
xlat
dec
mov
push
faddp
push
push
pop
sub
add
fcompl
movsl
add
repz
ds
scas
ret
adc
add
xchg
jns
cltd
fwait
inc
lret
dec
and
repnz
inc
pop
lret
sahf
dec
iret
add
insb
loopne
cli
jo
xor
push
mov
enter
xor
push
ret
aaa
scas
or
loopne
imul
jg
jns
das
push
call
jmp
xchg
pop
ljmp
and
jl
lar
pop
mov
test
cmp
arpl
inc
imulb
jl
mov
sub
jp
inc
mov
push
cld
mov
fwait
jl
test
jg
and
je
mov
test
fdivl
mov
cmp
loope
or
mov
jecxz
aas
call
sub
add
pop
push
lret
and
les
mov
sbbb
and
pusha
ss
jbe
insb
dec
inc
fcmovb
mov
sub
rcrl
lahf
scas
jg
xlat
pop
and
inc
loopne
in
add
push
push
pop
add
imul
push
iret
sbb
jae
jne
ja
cwtl
outsb
lea
inc
pop
sarb
test
jle
dec
cmp
pop
js
fimull
arpl
and
push
mov
scas
cmpl
push
fsts
sub
and
cltd
add
mov
jge
fdivrs
mov
or
pop
in
lock
sti
jge
shlb
out
cli
cmpsb
jle
inc
arpl
sub
es
inc
pop
push
sub
adc
das
xchg
dec
call
pop
movsb
shrb
aas
ds
movsl
pop
push
in
call
adc
lcall
fstpl
loopne
imul
popa
into
pop
push
lcall
xchg
movntq
out
call
jp
xchg
ret
rorb
int
push
jge
push
push
call
std
sub
cs
xor
and
push
into
pop
setp
test
test
sete
xor
jnp
jne
lcall
mov
mov
cmp
and
orb
sbb
pop
movsb
and
popa
cli
ret
ret
enter
and
pop
inc
fcmovu
sub
scas
add
add
xchg
jl
enter
ja
cwtl
inc
mov
add
jne
into
pop
push
adc
fbld
and
lret
imul
icebp
in
sti
xor
cltd
std
push
les
push
inc
pop
imul
mov
xchg
movsb
push
imul
jnp
push
pop
adc
pusha
inc
inc
jns
jmp
imul
xchg
movsb
inc
jns
xlat
or
lea
sbb
es
subb
and
jae
hlt
jg
adc
movb
rcrb
sahf
mov
sub
inc
inc
sub
icebp
xchg
outsb
pop
lahf
xor
sbb
inc
push
jo
sub
mov
xchg
sub
sbb
xchg
lods
mov
dec
in
dec
push
dec
adc
xchg
mov
lods
mov
int
jnp
mov
jae
dec
and
jae
xchg
test
mov
test
cmpb
adc
andb
and
xchg
push
notl
hlt
roll
push
xchg
mov
loopne
jge
cltd
pusha
sub
cmp
dec
xchg
imul
addr16
ljmp
jne
rcrl
icebp
jle
cmp
in
je
inc
cmc
cmp
jo
cmp
sub
inc
scas
cmpsb
lds
cmp
test
into
icebp
addl
lahf
ds
and
subb
stos
bnd
lahf
cmp
mov
icebp
aaa
pop
std
mov
daa
xchg
imul
data16
jns
cmp
cmpl
and
mov
adcb
fisttps
jns
in
xor
jnp
mul
jns
and
jecxz
jg
dec
add
inc
or
ljmp
push
pop
scas
into
icebp
or
pusha
aas
out
cmp
fndisi(8087
jge
enter
mov
repz
pusha
cmp
jmp
lcall
dec
cmp
fnstsw
mov
sbb
dec
mov
dec
enter
push
ja
jns
xlat
pop
stos
sub
inc
popa
gs
inc
push
movsl
icebp
mov
push
add
mov
movsl
pop
adc
cmc
pop
push
fs
cmp
push
fs
lahf
inc
or
inc
movsl
in
mov
sti
adc
mov
mov
mov
or
in
xchg
jmp
outsl
jp
jo
jle
outsl
scas
daa
cmp
jle
out
ret
pop
shlb
xchg
sub
add
cmp
xor
in
sub
xchg
adc
push
in
push
fsubrp
fdivp
fidivrs
dec
pop
iret
es
add
cmc
test
or
aaa
loopne
out
ljmp
clc
sbb
and
jo
cwtl
iret
scas
inc
data16
sub
out
out
out
in
jge
and
pusha
jl
mov
pushl
jno
inc
sahf
iret
and
or
in
stos
leave
insl
inc
jae
pop
sbb
xlat
out
mov
push
dec
pop
rcr
repz
fwait
daa
push
inc
push
xchg
enter
pop
xlat
popf
jbe
test
pop
inc
push
fdivr
pop
scas
jns
nop
mov
cli
jge
fidivs
cmp
fwait
xor
enter
push
fldcw
jae
data16
cmp
es
dec
pop
popf
mov
lock
adc
xchg
push
jge
fidivrl
lods
lret
xorl
pop
mov
ds
xchg
pusha
sub
or
loop
jp
mov
pop
imul
jle
adc
pop
fdivrs
sub
mov
dec
jmp
stc
dec
sub
add
lods
dec
mov
inc
mov
inc
mov
sub
out
xchg
dec
stos
adc
test
dec
xchg
dec
stos
xchg
dec
scas
xor
inc
dec
fstp
push
xlat
and
xchg
cmp
js
add
dec
imul
ds
dec
and
icebp
ds
ss
jo
mov
jle
sahf
cmp
add
fmulp
shlb
xorb
ret
ret
jns
mov
cmp
dec
in
pshufw
pusha
xor
aas
xor
enter
push
into
pop
pandn
mov
cltd
jp
jg
sbb
popf
or
out
fidivs
not
ret
ret
mov
js
mov
pop
mov
xchg
xchg
pushf
jg
sbb
pop
cmp
sub
xor
mov
jl
ds
das
or
pop
cs
cmp
pop
xor
mov
ss
and
je
cmp
cmp
cmp
cmp
bound
mov
and
sbb
movsl
pop
jge
xor
subl
push
add
movsb
cmc
aas
fs
push
cmp
adcb
adc
and
dec
adc
in
popa
push
fstp
cmp
rcl
or
ror
sub
call
insl
pop
pop
inc
mov
mov
ss
mov
fs
push
mov
icebp
cltd
dec
negb
call
push
dec
mov
push
pusha
inc
pop
sub
jb
das
stos
sub
es
pusha
inc
adc
shll
pop
sub
inc
sub
mov
ret
jns
cmp
push
cmpsl
sti
inc
jae
inc
inc
js
mov
mov
insb
xchg
lea
jecxz
jle
aas
in
cmp
loop
cmp
pop
ja
add
jecxz
in
and
and
std
mov
ret
dec
rcrl
pop
xlat
aaa
out
cmp
mov
mov
mov
pushf
xor
jg
push
xchg
psubw
jle
dec
pop
into
or
test
lcall
aam
fnsave
pop
movsb
jnp
add
pop
mov
sbb
push
int3
aaa
inc
pop
rcl
fcmovnb
daa
mov
ficoms
ficoms
push
push
inc
pop
push
and
jne
mov
imul
xchg
sub
loopne
fcoml
js
lret
jns
cmpsl
mov
or
je
jno
orl
jge,pt
dec
lds
mov
cmp
loop
lds
jge
cmp
popf
cwtl
cmpsl
dec
dec
shlb
addr16
cwtl
fistps
push
loop
and
inc
cmp
mov
cmp
test
ljmp
mov
dec
jns
insl
jne
rcr
mov
add
jl
sub
gs
nop
jle
into
in
dec
icebp
jg
cmp
fdivrl
fildll
mov
test
sbb
inc
jbe
xchg
push
insb
or
cmp
xor
addl
cmp
lds
rolb
imul
je
dec
shll
es
jmp
mov
loope
add
jg
add
push
ret
inc
pop
dec
pushf
les
outsb
mov
or
lahf
inc
pop
sbb
out
jge
test
les
cmp
ret
imul
fstp
sub
rcrb
add
xor
lcall
or
insl
gs
push
push
addl
pop
dec
jns
push
pushf
dec
lods
cmpsb
je
popl
add
jg
and
in
push
pusha
push
fstp
fcom
sbb
or
loop
fidivrl
rclb
cmpsb
mov
jno
cmp
es
nop
xor
inc
loope
fsubrl
add
mov
pop
adc
cwtl
aas
jae
cli
loope
aam
mov
loope
or
rcr
aam
inc
mov
andl
adc
andl
add
push
mov
mov
daa
pop
adc
out
jmp
int
dec
jle
iret
out
dec
pop
push
fmull
dec
enter
pushf
adc
sbb
pusha
push
cmc
push
mov
jle
jo
sub
fidivrs
add
add
push
pop
cmp
push
hlt
inc
sub
jmp
ja
sbb
bound
pop
dec
nop
sub
ret
push
pop
js
out
xchg
rcr
sbb
sub
inc
jno
nop
ja
adc
insb
lret
rclb
mov
adc
ds
pop
pop
xorl
pushf
jae
xchg
push
xlat
insl
jge
and
dec
mov
dec
cmp
ret
lods
shrl
lds
xchg
and
pop
cmp
lret
adc
and
in
cmp
lea
dec
ret
pop
dec
cwtl
jne
test
pop
xlat
or
addb
sub
mov
inc
bound
sub
dec
fdivp
sarl
gs
roll
orl
addl
scas
sahf
inc
xchg
xor
jo
cmp
popa
cs
adc
pop
gs
pop
xor
sub
fsubrl
push
shlb
test
ret
fcmovne
mov
lahf
aaa
dec
cmp
out
loopne
pop
rorb
push
cmc
or
adcb
test
cltd
dec
lcall
insb
std
icebp
cmp
push
movsb
pop
movsb
icebp
sub
lods
cmp
andb
ljmp
in
adc
dec
faddl
push
mov
dec
cmp
mov
mov
dec
sbbb
dec
inc
and
loop
rcl
mov
fstps
pushf
cmp
pop
mov
test
pop
or
cs
dec
pop
rcll
push
fistpl
sub
xor
jb
popl
pop
pop
lret
sarb
mov
inc
pop
xchg
pushf
enter
mov
dec
rcr
xchg
xor
mov
cmp
or
and
mov
cmp
movsb
mov
ret
frstor
pop
adc
adc
arpl
push
fisttps
sub
enter
pop
rclb
push
inc
cltd
mov
sbb
jne
cmp
xor
inc
pushf
imul
cmpsb
or
xor
xchg
cli
nop
aad
dec
movsb
xchg
orb
lcall
in
and
mov
rcrl
nop
push
pop
and
movsl
ret
repz
jno
push
jg
mov
sub
push
pop
ficoms
adc
scas
pop
or
imul
rorl
popa
pop
jne
or
cwtl
xor
dec
sub
mov
fnsave
jle
lret
ds
sbbb
data16
repnz
sti
jge
dec
rcr
or
popa
mov
incb
fistps
sbb
mov
xchg
or
negl
fs
mov
jno
data16
cmp
sub
mov
rep
xchg
cmp
movsl
pop
xchg
xlat
pop
rol
and
push
mov
cmp
test
xor
aam
call
in
push
xchg
aam
xchg
test
ss
xchg
push
dec
sbb
adc
or
ss
cli
xor
push
cmp
mov
aaa
orb
je
cmp
and
sub
push
mov
adc
outsl
sub
ljmp
arpl
je
sub
jae
cmp
repz
or
or
nop
cmp
inc
aas
movsb
add
cmc
jp
test
pmaddwd
jne
rcr
sarb
and
add
jmp
imul
inc
inc
sub
movsl
push
pusha
push
add
pop
fisubrs
xchg
cmp
jno
cmp
mov
loopne
lcall
jmp
shlb
popf
nop
push
pop
int
rcrb
mov
cmp
pop
fcoml
sbb
xchg
aas
jo
xchg
popf
jns
ds
xchg
iret
jmp
mov
lea
and
cmp
insb
lock
cltd
fs
mov
xchg
adcb
inc
add
rcr
push
push
jnp
inc
test
mov
subb
dec
cwtl
or
jmp
sbb
xor
int
push
leave
lcall
fstp
test
int3
sub
jns
fwait
pop
into
std
mov
dec
pop
popf
mov
xor
xchg
xchg
shlb
xchg
arpl
lcall
cmp
xor
leave
ficoms
cmp
mov
xchg
inc
jno
xchg
test
dec
mov
mov
movsb
pop
adc
sbb
les
mov
pop
dec
sbb
lds
aas
jb
mov
inc
or
mov
pop
aam
fisubrs
in
sub
and
push
ret
push
mov
sub
or
movsl
inc
sub
xor
cmp
cmc
inc
cltd
fdivl
clc
jge
mov
lods
cmp
aas
xchg
and
ja
sarb
shll
pop
mov
cmp
dec
sbb
push
inc
iret
jne
dec
mov
mov
push
jns
sti
sahf
push
dec
or
mov
movsl
xchg
int
xor
ret
sub
jno
repz
jnp
push
fildl
outsb
xchg
push
sti
movsb
cwtl
inc
adc
mov
shlb
mov
cmc
inc
mov
dec
cmp
xchg
sbb
inc
nop
pushf
enter
sar
cs
dec
sub
and
jb
jge
sti
jge
mov
mov
dec
ret
dec
sub
cmpsl
pushf
js
out
sar
mov
or
push
sub
popf
mov
add
pop
lds
fsts
loope
ja
sti
faddl
push
mov
insl
aas
cmp
lea
loopne
jnp
insl
fistpl
inc
push
jl
add
or
pop
jb
inc
cmp
cmp
xor
xlat
add
cmp
sahf
mov
mov
insb
mov
sbb
jp
and
inc
orb
js
pop
stos
xlat
das
addl
stc
repz
push
pushl
pop
jae
cltd
fidivrl
and
les
icebp
insb
xor
mov
jg
js
loopne
mov
loop
xchg
pop
notb
andb
inc
pop
push
adc
mov
jp,pn
sbb
popf
outsb
cmc
push
aam
ja
rcrb
inc
pop
sub
pop
cmpsb
adc
adc
lds
insl
dec
movsb
push
loopne
loop
fdivrl
xor
test
pop
or
mov
adc
test
sbb
pushf
loope,pt
in
mov
cmp
pop
in
pop
cmp
mov
push
scas
mov
cmc
mov
adc
push
sbb
outsb
sbb
cwtl
sbb
pop
stos
adc
push
mov
sbb
sub
jecxz
lods
test
in
scas
icebp
mov
les
sub
dec
mov
mov
cs
loopne
or
in
adc
data16
push
add
sbb
rcrl
jge
loope,pt
jecxz
insb
out
jge
jg
fists
cltd
rorl
mov
lods
cmc
std
jecxz
dec
arpl
rolb
xchg
es
pusha
dec
mov
xchg
and
mov
xchg
and
jnp
pushf
push
ds
cltd
jns
movsb
outsl
fdivrl
or
inc
imul
xchg
push
push
nop
jne
loopne
out
pop
into
jle
jno
or
nop
mov
ret
fistpl
shlb
adc
mov
loopne
cmp
inc
mov
inc
cmpsl
movb
dec
fisubs
jno
jns
dec
pop
movsb
pop
rorb
sbb
imul
cwtl
cmpsl
sbb
dec
mov
sub
adc
mov
imul
xlat
in
mov
mov
ret
mov
and
or
adc
cwtl
mov
loop
jae
jns
lcall
mov
sub
xchg
jl
sbb
pusha
sub
push
pop
push
mov
jns
cmp
push
pop
rcr
shlb
pop
sarb
xor
dec
cmp
pushf
inc
dec
or
xorb
mov
sbb
cmpl
pop
movsbl
lret
daa
call
pop
cmp
mov
cmp
lds
in
faddp
ja
push
cmpsb
sbb
loop
lahf
sub
cltd
push
stos
xchg
dec
inc
gs
adc
pop
dec
movsl
jle
push
rcl
or
push
sub
adc
fs
test
insl
jmp
repz
push
movsl
xor
jmp
loopne
out
xchg
pusha
pusha
mov
ret
pop
xor
jne
ja
xor
fadds
inc
dec
inc
or
xor
or
xlat
fnstenv
mov
xor
roll
add
push
fstpt
cmp
sub
imul
inc
pushf
inc
imul
scas
in
cmp
adc
out
ret
and
popf
insb
daa
pop
push
xor
mov
pop
jl
sub
xchg
bound
fisttps
jo
sbb
inc
data16
push
gs
add
xchg
imul
pop
sbb
dec
pop
movsb
cmc
inc
xor
push
jbe
pop
cmpsl
or
nop
sbb
mov
loopne
or
jae
fwait
push
iret
cld
lret
inc
xor
js
and
adc
mov
lea
in
cltd
pop
inc
test
ljmp
bound
jne
ja
lahf
push
inc
lds
jno
lret
lcall
pushf
dec
xlat
ja
fimuls
push
xchg
loop
inc
cmp
and
lds
mov
ret
ficoms
imul
jno
loop
add
mov
les
loope
fcoml
les
insl
insb
lods
outsl
cltd
xorl
enter
scas
lcall
outsl
lret
dec
and
jno
pop
adc
xor
add
fnstenv
aaa
lcall
pusha
sbb
inc
dec
in
jns
xor
imul
xchg
cmpsb
dec
sub
daa
jb
pop
ret
inc
imul
jecxz
leave
add
sbbb
dec
fisubrs
jno
icebp
push
and
sub
mov
cs
inc
inc
andl
das
and
test
cmp
movsl
in
shll
add
movsl
ret
push
cmp
lds
test
cmp
adc
fbld
ss
sub
lds
inc
jmp
sub
mov
pop
nop
ret
mov
jg
ror
add
and
dec
ret
aas
pop
loop
pusha
mov
xor
pusha
mov
xchg
cbtw
insb
orb
std
pop
mov
in
jmp
in
xor
sub
cmp
cmp
sbb
xchg
mov
movsb
lret
xor
dec
push
fwait
push
pop
dec
xor
push
fmull
enter
sub
outsb
adc
cli
add
adc
cwtl
jae
xchg
cmp
ret
adc
xor
cmpsb
out
push
push
sub
xor
es
or
push
xchg
push
sbb
push
pop
inc
pop
xchg
jne
idivl
add
rclb
mov
outsl
add
cltd
test
xlat
xor
sbb
sub
mov
mov
push
mov
into
xchg
nopl
psraw
mov
jge
adc
and
es
xchg
out
mul
jle
push
inc
pop
mov
cli
xchg
pop
je
dec
adc
dec
out
pusha
cmp
in
fucompp
sub
pop
ds
std
jge
pop
cs
dec
add
mov
sub
pop
aam
mov
dec
cmp
dec
push
cltd
push
dec
jle
xor
xchg
cltd
and
mov
fcompl
int3
loope
cmpb
inc
call
cltd
sub
inc
fcmovnb
adc
iret
aad
and
xor
mov
dec
loopne
mov
sahf
or
bound
hlt
inc
popa
repnz
or
outsb
mov
popa
into
pop
xchg
cltd
xor
jae
jne
mov
dec
je
push
jno
ja
test
into
or
cmpsb
pushf
movsl
pop
cmpsb
in
adc
jnp
xor
sub
xchg
pop
adc
fsts
xorl
call
imul
cltd
push
pop
jns
jnp
xlat
pop
inc
sub
mov
imul
add
lds
push
sub
push
daa
pop
jmp
sti
jnp
lret
sbb
cmp
jbe
push
dec
imul
lods
loop
inc
popa
jno
dec
dec
jo
outsb
push
dec
push
cltd
push
popf
cmc
mov
mov
jmp
stos
add
nop
pushf
scas
jae
movsl
rolb
xlat
mov
sub
jb
ret
xchg
ds
jle
sub
je
pop
subb
test
or
inc
aas
jno
jb
inc
pop
sahf
xchg
lcall
imul
mov
add
loopne
bnd
ds
enter
movsb
rcrb
inc
pop
cltd
mov
mov
push
ss
mov
jns
cmp
push
pop
mov
rcl
pop
inc
mov
inc
pop
nop
mov
jns
cmp
icebp
insb
sahf
in
mov
lea
sub
out
jmp
cmp
ss
sub
fs
jno
leave
xchg
daa
dec
fnstsw
and
fldcw
das
jl
cmp
stos
fsubr
scas
xchg
xchg
repnz
scas
xchg
inc
pop
ja
inc
ret
sub
and
lahf
push
enter
rcr
mov
sub
push
es
mov
pop
inc
ja
add
push
aas
pusha
and
pop
std
mov
fsubrl
inc
dec
or
adc
pusha
and
in
xor
filds
push
fs
jo
jns
jnp
fstp
add
lcall
mov
mov
cmp
pop
cld
inc
lret
fdivrs
pop
cmpsb
fldt
dec
dec
xlat
pop
mov
pop
scas
add
arpl
dec
std
jl
pop
push
mov
xor
add
daa
sbb
sub
dec
fstl
pusha
inc
mov
or
sti
sbb
cli
pop
jl
inc
das
jbe
pop
fisubs
movsl
dec
ret
loope
mov
test
enter
sub
or
or
add
stc
shrl
es
jne
push
push
adc
xchg
shr
icebp
xchg
neg
nop
mov
and
mov
jmp
dec
les
add
sub
fstpl
push
movsl
sub
dec
push
das
inc
lret
imul
lretw
negl
aas
xor
jns
nop
fistps
lcall
imul
inc
fidivrs
mov
jle
dec
gs
out
or
push
popa
dec
ret
sbb
leave
pop
lods
lret
inc
fiaddl
add
sbb
pusha
outsl
test
add
add
pop
pop
popf
xlat
fcmovne
imul
jge
mov
sahf
jnp
cs
je
outsl
vphaddubd
lds
mov
sub
cmp
movsl
mov
push
aad
es
xchg
nop
xorb
mov
test
mov
xchg
jp
jns
inc
fistpll
or
insb
xchg
push
add
faddp
mov
ja
arpl
stos
shll
inc
pop
neg
cld
les
dec
jns
and
pusha
mov
repz
lods
in
mov
cmp
xlat
pop
cmp
lods
dec
loopne
outsb
cwtl
jb
jbe
lds
fidivrs
and
add
xlat
lahf
xor
xor
pop
adc
jnp
into
pop
std
xor
cmp
pop
jge
rcr
mov
jl
adc
cmp
sahf
sahf
enter
sub
jo
les
xlat
icebp
dec
pop
in
rcrb
push
cmp
mov
je
jb
loope
lds
mov
aaa
js
cmp
shll
and
pusha
push
jno
dec
inc
and
dec
fs
xchg
dec
pop
ret
js
pop
inc
xlat
cmpsl
push
jp
shrb
mov
inc
jle
pop
xor
push
insb
in
mov
push
sbb
sub
cld
lds
sub
movsl
cmp
or
ficoms
sbbb
xchg
add
adc
jb
imul
sub
inc
outsl
ficoms
sub
mov
insl
imul
icebp
pop
dec
push
and
jne
rcrb
sub
leave
jno
pop
or
aaa
add
pop
inc
mov
loop,pn
mov
sbb
retw
cmp
fwait
mov
push
mov
jnp
jge
mov
ficoml
call
movsb
jo
jns
jnp
ret
fstp
aad
jae
cmp
aas
mov
mov
xlat
mov
and
cmpl
je
jle
push
fwait
jmp
jg
jecxz
call
sub
mov
push
into
orl
or
xchg
inc
nop
adc
cltd
dec
pop
rcrb
shrl
fidivrl
and
push
arpl
pop
cmc
and
xlat
xorl
inc
jge
jno
ret
dec
xchg
jne
idivl
sub
and
cmpsl
gs
jg
jg
mov
test
sub
dec
sbb
ja
enter
les
aam
fstpt
mov
pusha
test
inc
ss
dec
jp
lret
popf
inc
fcmove
das
cmp
pop
cltd
xchg
rcrl
loope
pop
aam
jp
and
pusha
xor
sub
adcl
mov
dec
add
pop
stos
xchg
xchg
jecxz
and
enter
cmp
scas
jmp
jns
pop
mov
ds
lret
ljmp
arpl
data16
push
rcr
repz
fwait
jnp
es
out
inc
dec
dec
lahf
jb
mov
add
xchg
pop
pushf
push
rorl
xchg
inc
sub
in
pusha
test
push
dec
jmp
pop
ret
xchg
cmp
sbb
push
dec
dec
daa
sub
xor
mov
cmp
sbb
inc
out
dec
pop
mov
nop
cmpsb
or
xchg
and
mov
in
jge
mov
loopne
cltd
or
push
lahf
fwait
shll
sub
adc
xor
xchg
enter
push
fmuls
ja
movsl
add
aas
mov
mov
xchg
lret
rcrb
aas
jbe
pop
ret
xchg
jl
push
pop
inc
xlat
inc
jge
cmp
aas
dec
ds
ds
cmpsb
push
les
test
cmpsb
fisubrs
in
mov
xchg
inc
addl
data16
pusha
and
adc
push
cwtl
ret
pop
pop
mov
xchg
les
sub
dec
pop
iret
adc
jp
xchg
dec
andb
enter
nop
adc
movsb
call
dec
cs
lock
ja
push
inc
addl
xor
filds
ja
inc
xlat
cmp
or
cmp
push
push
aam
mov
sub
je
pop
enter
mov
pop
add
pusha
sbb
jge
cwtd
xchg
or
or
leave
push
fst
pop
fsts
pop
mov
pusha
dec
jmp
inc
inc
xrelease
movsb
mov
call
js
cmp
pop
out
shl
icebp
iret
in
jmp
mov
imul
call
inc
jmp
dec
jge
cmpsb
mov
mov
ret
mov
call
arpl
mov
popa
jno
pop
lret
jne
mov
jmp
lods
mov
fldt
push
in
jb
ja
fcoms
mov
clc
mov
adc
dec
out
jb
jnp
mov
add
push
mov
sub
test
outsb
cmp
xchg
lret
push
lds
xchg
fs
je
mov
jmp
cmc
push
xor
test
add
mov
and
orb
pop
movsl
xlat
mov
xor
sub
adcl
mov
fldl
outsb
cmc
repnz
xchg
and
insb
mov
pop
adc
jno
push
fildll
pop
loopne
xor
cmc
ret
mov
xor
lahf
or
popa
scas
fdivs
adcl
lret
cmp
and
xchg
popa
dec
test
inc
rcr
ret
imul
insl
cwtl
movsl
leave
popa
push
inc
lahf
or
hlt
inc
cmp
xlat
pop
notl
faddl
cltd
mov
pop
aad
loop
mov
push
icebp
pusha
cmc
jmp
hlt
std
cli
pop
jnp
xchg
gs
rcrl
dec
jne
ja
fwait
jg
mov
fidivrs
xlat
mov
xchg
or
fwait
lea
std
jbe
xchg
dec
pop
pushf
andl
andl
push
push
pop
nop
fistpl
jae
or
and
iret
jns
mov
xlat
sub
mov
dec
sbb
fst
xchg
push
pop
cmc
lds
xchg
movsb
push
les
scas
es
and
push
das
dec
pop
cmp
mov
insl
add
mov
dec
loope
out
pusha
es
mov
inc
nop
imul
les
xor
sub
arpl
movsb
dec
addb
jge
test
jge
shl
cwtl
adc
xchg
pop
inc
fcomip
push
dec
fs
xchg
pushf
pop
out
scas
xchg
and
inc
jae
xchg
xorb
aas
aas
lret
xor
pop
lret
nop
mov
dec
dec
adc
sbb
gs
fsubl
jo
xlat
lea
push
push
arpl
jnp
or
and
inc
in
vaddsubpd
into
xchg
xlat
loope
stos
pop
push
inc
popf
lret
dec
iret
xlat
mov
fisubl
rorl
mov
std
pop
push
inc
sub
add
xor
inc
fstl
push
jecxz
jbe
ficompl
je
outsl
mov
push
iret
sub
pop
or
cmp
rorb
movsb
jno
daa
mov
into
sub
std
ss
xor
repz
fwait
cmp
push
lods
cmp
imul
in
jns
push
pop
sub
pusha
pusha
jno
ret
arpl
enter
aas
imul
lret
insb
fs
xchg
mov
sub
pop
cmp
arpl
pop
sbb
outsb
pop
adc
fidivs
jg
movsb
inc
test
fldcw
inc
mov
mov
les
inc
popa
shlb
fcoms
inc
fcmovnbe
xchg
cmpl
jne
das
shlb
adcb
sbb
mov
les
mov
test
pusha
sarl
imul
subb
sub
dec
xlat
pop
cmp
std
mov
mov
sahf
jle
mov
dec
movsl
mov
or
fsubrp
push
sub
sub
add
pop
scas
testb
dec
pop
imull
pop
mov
inc
jne
pop
and
add
pop
imul
and
cmpsb
inc
movsl
pop
icebp
pop
cmpsl
in
push
sub
ret
push
adc
addr16
fcomps
mov
out
push
push
ret
jo
and
icebp
jnp
std
pop
aam
mov
outsb
push
les
cmp
mov
mov
jge
cwtl
dec
imul
and
mov
xchg
dec
dec
cmpsb
dec
push
dec
sub
jne
jg
jg
jg
mov
or
movsl
nop
sub
xor
jp
in
mov
cmpl
xchg
in
out
or
dec
popa
jne
fisubs
loopew
imul
pop
lds
jno
imul
inc
jns
jnp
and
jl
ds
jp
or
adc
dec
adc
cmp
jecxz
adc
cmp
jge
mov
jp
repz
outsl
jnp
stos
loop
mov
cs
outsl
fwait
jbe
jns
bnd
sub
adc
jo
jnp
aam
es
call
mov
fwait
adc
mov
and
pop
pop
movsb
jg
neg
add
sbb
mov
and
push
cmpsb
jo
ljmp
push
mov
add
ss
xlat
dec
ds
push
ja
adc
pushf
pop
jbe
sub
cmc
cmp
out
pop
cmp
aas
gs
cmp
xchg
fcompl
out
gs
mov
cmp
inc
and
dec
popl
shll
sub
loop
cmc
lahf
popf
lret
loop
xor
sub
les
rcrb
pop
mov
add
ja
push
xor
push
mov
jl
aam
ds
movsb
xchg
outsl
mov
mov
fstp
lcall
cmc
xlat
div
insb
vpaddq
inc
sub
xchg
and
jge
dec
mov
repz
add
sub
shll
mov
mov
inc
xchg
dec
sti
or
test
daa
xlat
add
ficoms
int3
cmc
insb
xchg
cmp
movsb
pop
cwtl
or
lahf
lahf
dec
jmp
movsb
mov
icebp
xchg
jne
fisttps
pop
xlat
mull
push
lea
dec
lret
sbb
cmp
xchg
cltd
scas
sbb
dec
inc
fadds
ljmp
or
das
bnd
mov
jmp
inc
pop
lods
jne
cmp
adc
and
hlt
mov
addb
fwait
mov
push
in
jmp
lods
pop
mov
jge
cmpl
mov
xchg
add
lds
cmp
or
inc
fstl
cmp
rorl
cmp
jno
jl
jg
mov
mov
xchg
in
in
push
daa
inc
sub
lahf
mov
bound
cmp
xchg
fucomp
shr
mov
pop
adc
lds
adc
lock
and
shlb
mov
or
inc
jp
in
mov
sbbb
jb
lcall
outsl
je
clc
xchg
bound
insl
pushf
cmc
cld
sbb
loop
movsb
test
or
jne
lcall
push
sub
cmc
insl
jl
in
arpl
jae
arpl
and
adc
mov
inc
fxch
adc
or
cwtl
jnp
ss
insb
aaa
dec
frstor
shlb
js
ficoms
into
gs
mov
fs
xchg
sub
push
add
xchg
add
or
cmp
push
lret
jno
stos
jne
pop
add
loope
pop
xor
adc
pop
mov
in
out
rol
loope
shr
push
jo
cmp
aas
punpckldq
add
jnp
std
loopne
aam
jle
sub
add
jnp
shrl
jae
lret
and
nop
sbb
xor
repnz
sub
cmpsb
push
popf
cmp
in
cmp
es
nop
push
adc
les
ljmp
xor
je
movsb
das
mov
gs
js
cmp
insb
xchg
sub
adc
pop
and
jae
movsb
in
jecxz
les
imul
daa
sub
pushf
mov
jns
or
subb
push
movsl
fwait
lahf
pop
je
mov
add
jno
das
dec
fdivrs
iret
out
push
dec
dec
dec
movsl
andl
jnp
add
dec
lds
mov
sbb
pop
lock
icebp
and
fisubrl
in
jo
add
fmuls
cli
jno
dec
sbb
pop
pop
xchg
pop
add
lds
sahf
jne
popf
dec
fwait
outsb
mov
inc
push
cmpsb
xlat
mov
in
pop
inc
add
and
xchg
push
sbb
sahf
jo
ffree
movsl
int3
sub
inc
outsl
out
xchg
jnp
push
out
and
jnp
fisubrs
xchg
scas
mov
lahf
pop
cmc
jp
xor
mov
dec
xchg
sbb
popf
dec
inc
fisttps
test
lods
jno
push
or
popf
push
xor
push
es
enter
push
loopne
sub
cmpsb
cmp
inc
bound
rcrb
ret
outsb
inc
xchg
xor
out
stc
movsb
mov
mov
fistpl
dec
shrl
push
out
loope
push
pop
lds
jg
enter
sbb
and
pop
lds
imul
xchg
cwtl
lret
pushf
inc
aas
pop
in
mov
sti
jns
pop
and
add
jb
idivl
lds
mov
push
and
xchg
pushf
or
xchg
fstpt
sub
xlat
fisubs
and
leave
test
loope
or
dec
mov
sbb
dec
rorb
jmp
or
dec
pop
xchg
and
cmc
adc
push
jge
sarb
incl
and
or
adc
into
cli
inc
rcrb
pop
pop
mov
mov
cmp
loop,pt
inc
loopne
mov
je
cs
fwait
mov
dec
pusha
dec
add
sti
icebp
jae
jle
push
jno
test
push
movsb
mov
inc
cmpsb
outsb
arpl
data16
sbbb
imul
sub
push
inc
aam
test
mov
cltd
les
fcoms
and
cmp
push
js
inc
pop
insb
mov
fwait
testb
nop
daa
aas
cmp
ss
pop
lods
ja
fmull
rcrb
mov
cli
stc
imul
cmp
leave
mov
push
mov
mov
inc
push
xchg
push
pop
lcall
jecxz
in
cs
ret
rcr
xchg
dec
scas
call
xchg
movsl
andb
jbe
jne
outsl
push
xchg
arpl
cmc
ja
aaa
ds
xor
cwtl
rolb
cmp
dec
imull
movsb
andb
fs
mov
jg
xchg
dec
inc
jae
mov
movsl
nop
data16
jge
mov
push
xor
ret
pusha
lods
jne
fmull
std
pop
jne
sahf
xor
xchg
je
jne
or
js
mov
cmpsb
ret
inc
adc
cmp
xchg
jge
sbb
je
and
xor
jns
xchg
inc
xor
in
xchg
sub
mov
push
sbb
pop
mov
loop
in
les
cmp
inc
int
jnp
sar
pusha
pop
push
lods
mov
mov
pop
loopne
dec
mov
dec
cmp
dec
adc
push
jns
fistl
mov
push
push
inc
and
dec
fbld
xchg
daa
ljmp
jmp
je
inc
add
xchg
movsl
mov
push
mov
repnz
mov
icebp
jae
jne
divl
sti
pop
inc
fdivrp
inc
rcrl
popf
test
add
cmp
out
cmp
fs
push
lds
sub
addr16
pop
xor
sub
pop
mov
xchg
enter
popa
push
inc
das
ds
cltd
push
testb
inc
daa
iret
jno
orl
fidivs
inc
pop
lds
sub
cmp
mov
popf
push
mov
fcoml
lret
pop
sub
lea
cli
mov
lds
cmp
cmp
or
ss
insl
jg
insb
cmp
fistpl
shll
stc
adc
icebp
gs
les
das
lahf
push
sbb
mov
cli
inc
pop
fbld
push
pusha
mov
xor
ss
sub
and
xorb
push
outsl
jmp
push
mov
xchg
cmp
jmp
mov
sub
push
imul
std
dec
pop
mov
push
psubsb
jge
add
jmp
jne
sbb
inc
negl
and
rcll
pop
sti
xlat
and
mov
subl
cltd
and
or
popf
cs
loopne
add
sub
dec
add
ret
mov
jecxz
lcall
pop
sub
in
addr16
sub
jae
adc
jno
push
fwait
cmp
mov
jns
push
jp
dec
fstpl
pop
sub
mov
mov
je
mov
jge
sub
jns
add
popf
mov
and
pop
movsb
das
pop
push
inc
or
mov
pop
push
cs
sarb
fistpl
fsubrl
out
fbstp
xlat
jnp
dec
push
jno
or
movsb
popf
pop
xlat
add
cmp
xor
cwtl
mov
mov
or
or
mov
inc
addr16
mov
dec
nop
or
add
sti
inc
cmp
ja
jns
sbb
jns
pop
pop
sub
outsb
lret
jne
daa
adc
xchg
frstor
mov
nop
mov
cltd
fisubrl
sbb
js
dec
sub
mov
sub
inc
xor
jge
pop
test
pop
lahf
adc
jns
xor
mov
jns
cs
adcl
cmpsl
jns
or
pushf
xor
mov
xchg
and
add
fwait
pop
push
xchg
and
jp
adc
mov
sbb
cmpl
push
aas
inc
pop
movsb
jg
add
sbb
push
jnp
xchg
and
add
ficoms
mov
inc
je
pop
fldl
pop
movsb
loopne
xchg
es
jns
pop
sbb
xlat
popa
xor
add
sarl
or
clc
fsubl
or
push
sub
adc
pop
call
cmp
rcrl
push
lahf
xor
xlat
lock
sub
sbb
cmp
push
dec
fstpl
or
test
shrl
lahf
dec
pop
pop
fadd
mov
bound
lret
sub
sahf
mov
addr16
aas
and
add
or
jbe
jne
movsb
divl
and
mov
aaa
sbb
fwait
scas
xchg
pusha
pusha
jae
mov
push
scas
push
subb
hlt
inc
inc
in
into
imul
inc
xchg
sub
cmp
vmptrst
cwtl
cmp
ja
fwait
jns
vphaddubd
cs
dec
xlat
mov
and
sub
addb
fmul
mov
ss
movsb
push
sbbb
ret
push
mov
sub
das
cmpsb
and
outsb
jae
cmp
jno
aad
xor
sbb
xchg
sub
jae
add
adc
lea
je
fisttpl
rcr
mov
xchg
dec
imul
jae
jne
ja
sbb
xchg
shll
fcmovu
cmp
pop
in
and
mov
jns
cltd
or
push
mul
pop
fcomps
mov
mov
inc
pop
rcrb
xchg
scas
push
or
pop
ret
mov
ja
rcrl
ret
gs
into
insl
xlat
add
mov
sub
dec
lds
sub
push
sahf
in
mov
loopne
cmp
xchg
in
mov
mov
and
dec
subl
into
pop
push
jge
sub
adcb
fs
jns
mov
pushf
inc
and
cltd
mov
sbb
das
ret
jnp
xchg
imul
es
mov
repz
rorb
js
cmp
pusha
es
add
cwtl
mov
xchg
mov
jp
hlt
lds
stc
dec
fiadds
cmpb
fs
in
cmc
xchg
std
stc
shlb
cmp
sub
jae
in
aad
cli
rclb
ror
add
xor
pop
xchg
out
out
in
sub
rorl
test
mov
dec
pop
mov
inc
xchg
jg
cmp
mov
in
cmp
cli
cs
pusha
sahf
push
cmc
pop
mov
jle
into
adc
loopne
fs
sub
xor
add
or
xchg
xor
inc
test
dec
outsl
lock
add
js
jecxz
jl
jp
sbb
and
cmpb
ds
cmpsb
cwtl
xorb
aas
sub
cmp
xchg
pop
fistl
jle
pop
cmpsl
in
mov
aaa
ja
lahf
icebp
clc
aaa
lea
cmp
cmpsl
xor
rcrl
arpl
inc
cs
rep
cld
cwtl
sub
and
les
add
xor
in
jge
es
les
loope
push
icebp
in
repnz
pop
daa
js
pop
add
mov
add
adc
jbe
mov
inc
push
jnp
jge
mov
sub
dec
inc
sarl
push
jl
and
push
scas
addl
jle
insl
lea
punpcklbw
insl
das
movsb
loope
jo
jg
jg
mov
into
sti
or
ja
xlat
lds
jo
scas
xor
outsl
mov
mov
lcall
test
pusha
xor
dec
dec
rolb
es
inc
test
add
pop
int
push
cltd
jns
jns
pop
xor
and
cltd
pop
push
cwtl
push
ds
out
xor
shlb
loopne
push
call
push
jge
pop
loope
loope
pusha
leave
dec
xor
lsl
adc
jg
shl
ret
push
mov
add
in
ficoms
xlat
test
jl
fadds
dec
aas
jne
dec
pop
dec
sahf
cmp
es
adc
and
jge
movsl
mov
sarb
jo
push
js
adc
xor
pop
adcb
push
fsubrp
shll
sbb
add
cmp
xchg
xrelease
xchg
cmp
mov
mov
lds
cwtl
and
jno
bound
je
dec
cltd
shrl
cmp
push
jg
pop
test
lods
mov
mov
insl
ss
lret
loopne
xchg
nop
xchg
adc
xlat
jnp
inc
jge
rclb
xor
pop
lds
fs
bound
fcmovne
icebp
xchg
stos
push
jo
mov
xchg
in
dec
pop
push
roll
add
pusha
ja
xlat
icebp
add
fisubl
cmp
test
mov
dec
pop
pop
adc
xchg
orb
adc
lahf
sbb
andb
and
dec
aam
inc
rcr
mov
cmpsb
push
lds
jnp
dec
mov
jle
sub
stos
ret
mov
inc
aas
test
jecxz
inc
inc
lcall
movb
jo
push
call
sbbb
ret
mov
testb
hlt
cmp
leave
sbb
outsl
dec
hlt
xchg
jnp
xchg
rcll
pusha
nop
outsl
push
enter
lds
adc
cmpsb
ja
push
mov
push
xchg
xchg
cmc
cmp
std
repz
jns
push
cmp
cmp
dec
es
xchg
arpl
imul
or
jge
jp
fnstsw
cmp
dec
xchg
pusha
lods
sbb
jne
push
inc
xor
jne
pushf
pop
and
xchg
mov
pop
pop
icebp
jo
ljmp
xchg
cmc
cmpsl
sub
adc
adcl
and
jno
and
ss
dec
in
fsubrl
pop
adc
jne
push
xchg
ja
cwtl
nop
adc
cmp
lcall
add
dec
xchg
adcb
mov
xor
dec
push
pop
push
in
cmp
jo
imul
movsb
pusha
xor
mov
push
pop
pop
jns
imul
sub
inc
nop
cmp
xchg
push
xchg
arpl
jge
cmpsb
dec
jno
stos
or
xchg
stc
out
fsubl
inc
sti
xor
jne
daa
pop
jns,pn
out
ja
or
insb
xchg
lahf
dec
pop
jmp
mov
xchg
lret
cmpsb
dec
cltd
fs
aas
outsl
and
lahf
push
dec
ret
xor
cmp
test
xor
ja
sbb
jo
jecxz
popf
insb
ficomps
inc
loope
fstpl
pop
add
daa
jle
fnstcw
cld
jle
sub
js
jne
ja
adc
jg
push
ja
xor
jl
xchg
cltd
loop
xorb
xor
lcall
aas
or
test
sar
insl
mov
inc
stos
pop
xchg
sbb
dec
mulb
and
fmull
xor
jge
inc
cmp
std
and
and
and
inc
dec
vmwrite
lahf
xchg
lods
subl
iret
fdivrs
je
pop
xchg
sub
xlat
pop
push
add
fmull
mov
jp
push
inc
into
pop
pop
push
roll
pop
out
testb
sbb
and
sub
cwtl
push
sub
sahf
insl
movsb
and
adcb
es
jae
mov
dec
jnp
dec
xchg
dec
sub
outsl
mov
rolb
cmp
outsl
xor
mov
arpl
cli
scas
incl
fcomip
cmp
cmp
jae
jne
cmpps
push
notb
dec
das
jp
mov
cmp
jns
sbb
sub
and
mov
lds
imul
inc
push
jg,pn
xor
add
xchg
mov
cmp
and
adc
and
cmp
jl
push
pusha
xchg
or
push
sarb
mov
cltd
and
pop
mov
push
lds
imul
cmpsb
cmp
ret
and
push
pop
push
test
pusha
pop
icebp
scas
icebp
dec
iret
cmp
jae
jo
inc
insl
xchg
and
pop
mov
pushf
iret
jge
sbb
ficompl
inc
jb
adc
aas
aas
jae
hlt
xchg
pop
rorl
xor
cmp
inc
xor
pushf
sbbl
adc
loope
loope
int
inc
pop
pop
push
mov
pusha
push
jle
sub
mov
xchg
xchg
loopne
inc
xor
lods
pop
les
into
push
fstps
mov
jbe
popf
xor
dec
jge
pop
inc
fmulp
xchg
mov
sarb
sub
rcl
cmp
push
adc
xchg
cltd
xor
lret
inc
push
hlt
xchg
inc
sahf
push
in
insl
inc
scas
movsb
lds
std
rorl
xor
ret
arpl
cwtl
gs
das
push
les
insl
push
out
sbb
inc
sub
loopne
push
nop
pop
xor
inc
imulb
mov
mov
xchg
xchg
mov
cltd
sbb
cli
jns
sbb
sarb
andl
inc
ficoms
push
iret
jns
andl
cmp
cmp
ret
push
dec
jne
rcl
inc
sub
inc
cmp
dec
cmp
lods
cmp
dec
aas
jno
std
pop
and
mov
jo
cmp
add
add
mov
xchg
inc
xlat
stc
and
fildll
dec
jg
push
lea
and
rcl
pop
mov
xchg
ds
mov
jbe
jge
cs
push
xlat
ds
js
cmp
cs
ss
dec
inc
leave
jno
push
mov
daa
pop
xchg
shrl
mov
pop
jo
roll
loope
divps
sub
fsts
cmp
rcrb
push
sub
mov
les
adc
jmp
fcmovbe
insl
inc
cmpsb
mov
jle
push
test
pop
orl
dec
cmp
sahf
mov
cs
test
mov
es
cmp
icebp
test
pop
orl
mov
sub
pop
lods
push
pusha
pop
fidivrl
xor
and
xor
mov
push
scas
xchg
sbb
cmp
xor
js
filds
push
jmp
loopne
int
push
adc
sbb
pusha
xchg
movsl
xor
pop
add
jno
and
imul
or
ret
repz
jno
addr16
lcall
mov
or
movsl
aas
fidivrl
insb
and
les
mov
imul
xchg
pop
cwtl
cmp
xor
xlat
cmp
xchg
rcrb
jno
rcl
lds
int
gs
jge
xchg
lret
in
in
jne
les
imul
jge
pop
and
xor
sarb
mov
pop
gs
lahf
jg
sbb
xorb
jbe
inc
mov
dec
xchg
xchg
pop
fisubl
xor
aas
xchg
xchg
jg
pushf
inc
ds
ds
jp
sub
inc
sub
out
jg
push
imul
decl
xlat
pop
inc
push
mov
or
pusha
xor
stos
jae
cmpsl
adc
sbb
popa
ret
sahf
insb
push
es
dec
leave
jge
cmp
scas
mov
lahf
inc
sub
lret
jo
sarl
ja
ja
cltd
cmp
nop
fdivs
cmc
xchg
stc
xchg
std
add
rcl
jno
mov
icebp
jl
std
nop
pop
push
pusha
call
ja
xlat
inc
inc
xchg
xchg
dec
lock
sbb
dec
sahf
jns
pusha
pop
inc
and
or
xchg
into
sbb
sbbl
les
pop
lods
cmp
nop
push
push
mov
in
pusha
push
aas
popa
enter
or
jae
fmull
aaa
xor
lds
cld
in
les
loope
jae
push
sarl
fwait
push
or
inc
add
pushf
aaa
pop
fistpll
push
fldenv
sub
out
scas
push
inc
les
cmpsb
shll
lahf
pop
push
pop
jne
repz
fidivl
and
movsb
pop
lds
adc
lods
test
lahf
icebp
cltd
repz
divl
inc
pushf
inc
fisubl
mov
gs
cmpb
je
movb
mov
pop
test
jae
pop
add
out
dec
inc
lcall
xorb
das
dec
rclb
xor
jle
pushl
outsb
scas
jle
sbb
outsb
jno
xor
jnp
lahf
push
enter
imul
sub
lds
push
andl
jle
xchg
fstps
or
push
loopne
pusha
cwtl
xor
sub
movsb
loop
dec
sar
mov
lahf
gs
pop
cmp
movsb
dec
subb
push
dec
sbb
fiaddl
jge
cmpsl
xchg
xchg
imul
mov
lcall
pop
fwait
je
cli
subb
inc
lret
inc
popa
push
add
xchg
fsubp
cwtl
inc
es
push
ds
add
lock
es
pop
sub
mov
cmp
mov
pop
and
xchg
inc
push
fdivl
jns
mov
pop
add
out
inc
pop
test
adc
mov
push
lds
sub
pop
push
in
icebp
dec
in
lahf
jne
jns
dec
aad
lds
and
or
imul
mov
or
push
iret
mov
enter
dec
stos
add
movsl
lahf
push
test
faddp
jl
sub
aad
push
lahf
mov
clc
icebp
dec
pop
jno
ficoms
xchg
xchg
icebp
call
imul
cmp
cmpb
jl
inc
pop
inc
push
rcrl
sbb
mov
push
push
lea
jno
mov
jl
jno
xchg
adc
xor
or
lahf
in
icebp
push
aad
xor
and
test
pop
xchg
andl
cmp
mov
inc
dec
int
das
push
stos
inc
and
jne
sub
pop
lds
cmp
movsl
leave
and
lcall
pusha
imul
jns
les
dec
lds
xor
andl
daa
sub
inc
sub
subl
fdivrl
cwtl
iret
jb
clc
icebp
jg
fwait
mov
lret
das
sub
adc
add
push
inc
cmp
push
xchg
shrb
iret
jne
dec
cltd
vphsubbw
pushf
cltd
sbb
dec
add
sub
jecxz
push
push
js
pop
lds
dec
cmp
fsts
inc
stos
or
dec
and
sub
subb
jle
dec
dec
lahf
push
push
xchg
xchg
mov
cltd
push
nop
subl
push
inc
lret
gs
aas
xor
repz
je
mov
std
andb
loopne
scas
pusha
mov
inc
ds
cs
orb
insl
iret
or
jno
pop
push
outsb
pop
les
mov
loope
clc
xor
mov
movsl
out
inc
dec
ficomps
xchg
in
mov
mov
xlat
pop
pop
inc
insb
nop
enter
jne
push
cmpsl
insb
mov
or
pop
xor
lcall
subb
mov
lret
push
fisubrl
push
ret
mov
ja
jns
mov
pusha
insb
outsl
cs
cmp
mov
jg
movsb
jle
iret
orb
mov
les
jno
push
stc
adc
ret
dec
push
cs
dec
fidivrl
cmpsb
ret
repnz
repnz
lds
mov
inc
insl
push
cmp
sub
addb
addb
dec
mov
data16
or
jbe
fsubl
push
cmp
ds
inc
loop
nop
es
xchg
xchg
shrl
sub
nop
jns
pusha
jg
mov
inc
sbb
jge
lcall
xor
cmp
bound
ret
cs
iret
test
fwait
sub
jmp
jne
cmp
and
aam
ret
jae
sbb
or
daa
cmp
push
sub
roll
xor
dec
push
inc
fistpll
rorb
mov
daa
rcl
cmp
rcrb
pusha
pop
mov
mov
mov
cmp
ljmp
adc
add
enter
xchg
dec
fidivs
cmp
loope
pop
cmp
sub
out
loopne
add
pop
inc
fstl
cmp
movsb
loopne
xchg
sbb
and
xchg
test
les
sub
pop
push
jle
jno
inc
sbb
mov
xlat
mov
dec
pop
pushl
jno
mov
or
cmp
fiadds
loop
lret
push
js
pop
ret
decb
cltd
pushf
fisttps
test
jle
movzbl
insl
dec
cmp
movsl
dec
xchg
rcr
lds
sbb
adc
pushf
iret
testb
pusha
daa
xchg
sub
cmpsb
dec
loopne
mov
mov
mov
sub
xchg
enter
jno
addr16
pop
cmpsl
mov
inc
fcoml
fistps
add
jae
insl
xlat
inc
sbbb
dec
pop
and
bound
mov
ror
sub
dec
xlat
jge
rcll
es
lds
into
sub
movsl
sub
aaa
xor
cmp
lea
inc
xlat
jp
mov
jp
dec
jno
stos
popf
xor
fisttps
xchg
mov
sub
xchg
mov
lods
xor
xor
das
dec
scas
ret
xor
call
cmp
std
rorl
add
pop
mov
les
ja
pop
ja
and
inc
and
adc
jbe
push
dec
jns
lds
icebp
xchg
push
les
cmp
jb
mov
std
pop
mov
in
jno
rcr
movsb
scas
pusha
and
scas
adcl
inc
dec
les
sub
cld
xchg
adc
mov
scas
ret
mov
sub
sarb
push
dec
fildl
push
jns
add
cmp
ljmp
mov
mov
dec
add
sub
arpl
jge
and
lds
cmp
jae
maxps
jg
xlat
outsb
mov
or
inc
mov
xchg
jne
js
addr16
cmp
and
jns
fcomps
inc
xlat
int
popf
add
les
les
cmp
ja
mov
cld
imul
lret
pop
mov
xlat
add
mov
dec
clc
xchg
mov
fcompl
mov
xchg
imul
les
pop
push
sub
cmp
add
pop
push
push
pop
jbe
jnp
aad
jae
xchg
jle
les
xlat
test
jnp
pop
lds
les
inc
pusha
pop
dec
jnp
dec
xor
outsl
add
fildl
lods
mov
xchg
mov
adc
dec
cmp
inc
dec
lahf
sbb
and
xchg
cmp
jo
dec
push
pop
fsubrl
mov
xchg
cmp
dec
inc
fistpll
mov
mov
lds
or
mov
adc
dec
jbe
inc
or
lcall
cmp
lods
jle
push
push
cmp
push
or
dec
or
roll
test
imul
imul
pop
or
push
rorb
nop
pop
mov
mov
dec
aam
icebp
test
xor
inc
jne
xlat
cmp
mov
xor
sub
and
mov
and
mov
cmp
mov
mov
or
movsb
cli
pusha
sub
imul
in
leave
ljmp
jae
push
mov
dec
lret
jg
push
lea
ja
jae
aaa
mov
adc
cmc
xor
cmp
dec
and
cmp
lret
cmp
sahf
ret
shl
sbb
fwait
lods
pop
xor
ret
mov
pop
int3
aas
mov
pop
shll
les
lock
fidivrs
mov
jg
sub
and
adc
sub
pusha
fsubrs
jg
lret
inc
shll
es
xchg
js
movsl
jl
inc
inc
pop
inc
movsl
inc
inc
out
les
jbe
mov
es
in
push
jo
pushf
push
and
and
sub
adc
sbb
out
repz
push
push
xor
in
cltd
mov
or
loopne,pn
and
inc
xor
je
cmc
inc
xor
daa
xchg
xor
fstl
inc
and
cmp
or
inc
and
fs
popf
leave
pop
cmp
inc
fdivs
jge
vpand
fidivl
ss
sub
push
andl
cmp
repz
xor
data16
popf
xchg
outsb
ret
test
or
jp
cwtl
xchg
test
js
jg
mov
stos
movsl
xor
add
rorl
dec
push
fistl
cmpsb
jno
cmpsb
lahf
cmp
imul
cld
jae
push
enter
rolb
bound
insb
mov
inc
jbe
cltd
iret
sub
es
outsb
pop
dec
and
lea
mov
adcl
lahf
add
mov
subb
jg
sbb
dec
nop
push
insl
popf
jg
mov
push
dec
cmp
sub
sub
lea
popf
adc
push
lcall
rcrb
add
xchg
cwtl
xlat
ja
inc
or
push
adc
es
cmp
mov
xor
add
enter
gs
sub
jl
mov
fcompl
stos
jne
ja
jns
jnp
cs
jae
mov
faddp
jne
add
inc
sbb
jne
push
jo
aaa
mov
or
das
push
lret
pop
enter
add
inc
and
inc
sub
cltd
pop
cmp
stc
and
out
ljmp
add
fnstcw
pop
ficoms
and
sub
fidivs
pushf
dec
and
roll
sub
sahf
out
jmp
push
into
icebp
mov
outsb
call
mov
jno
cmp
nop
or
or
sub
dec
mov
orb
xchg
or
ret
enter
jle
in
lds
fsubrp
stc
xchg
push
cltd
and
rcr
push
inc
xchg
or
sub
nop
mov
cmp
in
inc
dec
lds
mov
mov
cmp
push
jae
mov
mov
add
loop
pop
clc
mov
lods
jg
rorl
lahf
jp
nop
cmp
sub
pusha
mov
out
inc
push
jo
or
push
int
jb
pop
add
inc
lret
jno
in
icebp
shlb
push
movsb
stos
loopne
xor
mov
fildll
xchg
jno
out
and
cmp
pop
lods
daa
pusha
cmp
or
call
cli
add
fs
rorl
or
inc
aas
jno
inc
das
popa
dec
ficompl
lahf
xchg
lret
pop
movsl
psllw
aas
icebp
mov
inc
insb
ret
lods
xchg
xor
lds
and
cmp
jns
mov
mov
imul
fsubr
inc
dec
ficoml
adc
popf
dec
mov
cmp
es
jle
cmp
loopne
inc
inc
pop
shll
insb
or
xchg
fidivs
ja
or
mov
inc
xchg
pusha
mov
dec
imul
mov
dec
js
adcl
cmpsl
fisubrl
sub
cmpl
das
jns
mov
lea
and
fisttps
cmc
mov
in
ss
xor
addl
xor
xlat
mov
and
xchg
inc
inc
movsb
mov
sub
rolb
push
xchg
fbld
mov
das
cmp
xchg
xchg
pop
push
add
lret
ja
shrb
xorl
or
std
and
xor
lcall
ja
mov
jge
subl
pop
cmpl
pop
sar
icebp
mov
aam
mov
lret
dec
jecxz
push
or
gs
mov
push
inc
cmp
insl
rcrl
pop
cmpsb
movsb
les
jb
jle
push
pop
push
xchg
push
pop
adc
xchg
xchg
das
enter
arpl
mov
mov
mov
cmpsb
sbb
xchg
ja
inc
into
fsubrl
inc
add
shl
lds
imul
fiadds
popf
cmp
cmpsb
jb
xorl
aam
xor
scas
add
adc
loope
jb
insb
fsts
xchg
fnsave
pop
ret
nop
das
xchg
jns
jg
lcall
sub
fnstenv
es
rcl
or
push
adc
bound
addr16
cmp
call
adc
push
icebp
fst
jo
shlb
imul
jmp
adc
cwtl
imul
push
lret
or
sub
push
sbbb
pop
out
in
loope
jmp
sub
aaa
dec
inc
rorl
xchg
lods
and
push
cmp
ljmp
addr16
dec
ja
imul
push
jns
sbb
inc
pop
in
imul
xlat
push
lods
push
cmpb
cmp
jae
std
jns
dec
cmpsb
ja
in
sub
aaa
sub
xchg
testb
push
add
dec
movsb
push
sub
sub
movsl
and
jae
mov
dec
pop
ja
pop
mov
mov
xchg
les
sub
ja
popf
dec
scas
daa
movsb
pop
cmc
popa
pop
xor
aaa
mov
xchg
nop
fisubs
addr16
dec
jns
popa
add
and
push
test
arpl
dec
add
push
pop
mov
aaa
jl
inc
mov
or
jge
popf
pushf
pop
push
jno
lcall
addb
lds
mov
jge
out
in
push
and
xchg
imul
sub
nop
xlat
push
das
pop
loop
repz
xor
mov
xchg
xchg
push
popa
cli
jae
outsl
and
jbe
nop
dec
jge
lea
pop
loopne
and
cmc
pusha
das
xor
aaa
aaa
das
es
aas
xchg
nop
fiadds
xchg
repz
cltd
xchg
lahf
jg
fwait
xchg
imul
push
dec
jg
pop
inc
sbb
inc
dec
xchg
les
push
xchg
jae
and
mov
sub
pusha
jne
incb
cmp
fwait
pop
and
cmpxchg
cli
dec
mov
dec
pushf
mov
or
jb
push
or
fwait
xchg
jae
call
pop
xchg
ja
mov
xor
insl
arpl
ja
sub
adc
ficomps
and
push
sub
add
pushf
push
and
jecxz
pushf
shll
pushf
dec
and
or
dec
push
jne
mov
es
pop
push
popf
dec
sahf
aas
mov
ja
les
in
pop
cmp
xorl
xchg
xchg
push
xchg
xlat
push
and
xor
mov
les
add
xor
inc
push
xchg
jno
push
pop
inc
fmuls
mov
addr16
dec
jo,pn
lahf
push
jg
enter
xchg
icebp
sub
and
push
mov
jl
push
test
cwtl
les
dec
popa
sub
adc
cld
call
sub
xchg
inc
push
jo
xchg
lahf
arpl
jg
push
dec
dec
hlt
fiadds
push
xor
popf
dec
jnp
ss
aaa
pop
push
inc
lods
xchg
std
lahf
pop
inc
fwait
mov
inc
xchg
or
cmp
and
jle
mov
jbe
push
inc
je
dec
sub
push
pop
jno
outsb
sub
das
xor
push
mov
jae
mov
push
and
sub
xor
push
cmp
mov
pop
lds
inc
shll
ljmp
xor
movsb
mov
inc
je
sub
cmp
daa
inc
lds
jae
inc
mov
mov
rcr
flds
inc
inc
inc
or
xchg
ds
inc
aam
roll
ficompl
xchg
lods
fstpl
aad
dec
mov
lock
out
inc
xchg
push
nop
dec
pop
orl
adc
data16
inc
pop
sub
addl
push
nop
ds
adc
xor
std
jg
orl
push
inc
inc
cmp
rorb
push
dec
adc
scas
mov
adc
movsb
pop
xor
mov
into
xchg
iret
inc
sarb
sub
mov
ss
sub
mov
jle
mov
lret
lret
rol
ror
inc
mov
mov
mov
int
rcrb
mov
sahf
xchg
mov
cmp
mov
jns
loop
sub
pop
sub
inc
aam
cmpsb
push
daa
movsl
mov
sub
mov
xchg
push
es
fldcw
pop
dec
lret
pop
xchg
xor
sub
dec
out
mov
cmp
das
push
add
cmp
mov
add
and
lock
xor
jno
sbb
adc
sbb
stos
insb
test
ret
in
push
jns
jp
lods
ret
cmc
mov
inc
imul
out
jp
sbb
inc
popa
add
hlt
mov
xor
in
lret
jmp
jp
ds
add
xor
xchg
mov
andl
pushf
inc
xchg
fwait
cmpsl
and
jbe
push
inc
sbb
push
rorl
inc
mov
pop
jmp
dec
inc
fisttpll
sahf
enter
mov
stos
inc
pop
mov
ror
xchg
imul
js
jne
inc
jae
cmp
adc
cmp
lods
mulb
shl
mov
in
es
sbb
sub
inc
sub
push
mov
mov
mov
cltd
inc
or
test
notl
inc
fs
lds
inc
sbb
push
mov
aad
inc
mov
pushf
mov
and
jae
mov
or
mov
cmpsb
sbb
stos
mov
lahf
dec
inc
inc
inc
shlb
dec
inc
inc
cmp
das
mov
or
mov
fsub
jbe
es
pop
aad
lahf
jecxz
pop
fs
xchg
test
les
fcompl
sbbl
mov
push
mov
repnz
pop
pop
mov
and
pop
dec
mov
mov
push
mov
mov
push
dec
add
mov
js
xchg
push
mov
daa
push
icebp
or
inc
inc
inc
incb
add
loopne
shlb
addl
mov
sbb
dec
add
cmp
and
jne
adc
pop
cs
inc
stc
sbb
mov
lock
es
pop
or
popf
mov
xlat
jb
shrb
cmp
mov
jne
inc
stos
push
add
inc
repnz
clc
rol
daa
ret
push
outsl
int3
enter
cltd
notb
iret
cmpsl
lock
dec
jno
push
xor
push
cmp
pop
and
mov
push
xchg
push
cmpb
add
inc
xchg
and
ficomps
inc
daa
sbb
mov
ret
jae
mov
ja
add
cmp
inc
mov
dec
in
addr16
push
mov
fists
shlb
and
xchg
cmpsb
mov
cmovs
std
mov
add
inc
inc
daa
mov
into
sub
movsb
rcll
cmp
or
mov
adc
popf
mov
inc
and
inc
in
ret
aad
push
orps
das
hlt
dec
pop
mov
and
xchg
xchg
mov
dec
pop
gs
test
lds
iret
lods
enter
and
les
fbstp
jne
les
sbb
sbb
push
xchg
lods
rclb
dec
jbe
push
pop
enter
inc
inc
stos
inc
fadds
ror
lret
dec
movb
inc
xchg
popa
inc
cs
xlat
clc
cmpsb
mov
push
dec
insb
sar
sub
inc
hlt
addr16
mov
add
shl
pop
and
out
dec
cmpsl
sahf
clc
aas
cmp
and
dec
xor
inc
push
jns
popf
fdivl
pop
sarb
roll
inc
repz
pop
leave
leave
xor
jns
in
cmc
sarb
aad
and
adc
pop
fisttpll
inc
mov
pop
xchg
pop
inc
loop
pop
mov
insb
push
jmp
adc
jo
lock
inc
push
dec
rolb
push
aaa
dec
loope
add
jmp
ja
and
ret
aam
aad
lds
mov
dec
mov
dec
shlb
in
cmpsl
imul
insb
push
pop
push
leave
add
lret
sbb
movb
jno
pop
into
sbb
dec
dec
push
adc
inc
pop
hlt
mov
mov
mov
clc
hlt
sbb
push
call
adc
iret
push
addl
js
es
push
ud2
cmp
nop
push
or
scas
jge
inc
or
adc
pop
adc
push
pop
aas
test
xor
mov
and
mov
in
insb
js
popl
xorl
jecxz
inc
cmp
shrb
pop
outsb
movb
jne
arpl
xlat
xor
push
imul
loope
and
inc
pop
pop
mov
push
fldl
ja
add
lock
sbb
xchg
cmpb
adc
xlat
mov
les
fmull
dec
movnti
repnz
dec
add
lea
ret
mov
iret
fisubrl
add
adc
inc
mov
int3
call
sbb
addl
es
call
iret
cmp
cmp
dec
addr16
push
cmp
inc
stos
mov
mov
sbb
pop
sub
lods
cld
xchg
xor
inc
inc
xchg
push
lcall
inc
insb
jp
xchg
addl
push
dec
inc
cmp
pop
fs
jns
adc
add
add
enter
adc
xchg
adc
inc
nop
mov
fdivr
mov
or
testb
mov
test
cmpsl
xchg
in
in
popa
mov
shlb
inc
or
les
clc
or
fcomi
popf
add
mov
pop
jle
ret
or
jb
js
stos
or
sbb
mov
ljmp
pop
sub
fsubp
and
inc
or
cmovns
xor
jle
dec
cmpsb
dec
mov
jg
mov
push
xor
pop
xchg
inc
int
aam
rcl
sahf
mov
adc
popa
mov
cli
sub
std
shl
push
clc
sub
ret
lret
repz
test
sub
inc
repnz
addl
dec
iret
jmp
inc
adc
xorl
sbb
gs
jbe
mov
loop
sub
dec
decb
ds
or
ret
push
jae
push
xchg
mov
inc
imul
jno
mov
int3
xchg
in
adc
imul
pop
mov
pop
cmpsl
jge
inc
xor
inc
nop
xchg
jmp
into
fisubs
out
stos
xchg
cmp
dec
pop
roll
mov
cmp
add
xor
push
cmpsb
popa
subl
and
xchg
out
push
inc
xchg
lret
push
pop
inc
test
and
leave
icebp
inc
imul
ljmp
inc
stos
mov
es
dec
rcrl
inc
ret
sub
sub
movsb
xor
lret
repnz
pop
shll
loop
dec
pop
xor
cli
sub
hlt
pop
jmp
mov
or
insl
xchg
in
pop
inc
or
pop
int3
pusha
clc
mov
cmpsl
jno
xchg
call
jae
ret
into
push
loop
adc
ja
ds
cmp
dec
dec
test
cwtl
fwait
xchg
sbb
es
inc
jnp
pop
cld
out
in
int3
xchg
adc
in
and
ficomps
jne
mov
movsl
js
adc
call
jns
stos
fiaddl
xor
xorl
sbb
inc
mov
sbb
inc
adc
dec
pop
xchg
icebp
add
jge
es
leave
sbb
sub
mov
loop
add
or
std
ret
shlb
xor
pop
addr16
js
mov
inc
sbb
push
inc
mov
loop
int3
inc
iret
adc
inc
or
fimuls
filds
cmp
jb
xchg
and
inc
xor
mov
cmp
sar
ret
stc
stc
and
lret
popa
jno
inc
insb
cmpsb
jae
and
adc
push
mov
push
xor
dec
dec
xchg
sbbb
ljmp
jge
jg
inc
aad
push
int3
lcall
lods
mov
dec
arpl
pop
not
int
test
stc
les
stos
xor
mov
mov
arpl
push
sbb
mov
xchg
mov
mov
and
xchg
jb
jecxz
fwait
dec
mov
inc
adc
std
inc
rorb
nop
jae
pop
test
push
and
push
push
shl
push
fs
popf
pop
jno
inc
add
in
test
inc
call
add
and
xor
andl
push
mov
aam
sbb
mov
cmp
inc
in
sar
push
orl
inc
sub
mov
dec
pop
pop
orb
adc
jae
inc
mov
cs
mov
pop
into
sub
mov
repnz
pop
in
adc
dec
and
mov
jbe
popa
seta
inc
pushf
leave
sbb
jae
jmp
enter
iret
das
subl
int3
sub
adc
xor
lret
movb
hlt
nop
sbb
fldenv
fists
pop
mov
inc
mov
push
add
fsincos
pop
in
cs
inc
mov
mov
and
cld
xchg
pop
int3
or
xor
mov
sar
roll
mov
mov
movsb
add
xchg
jbe
jle
aas
mov
push
jle
fdivs
into
sahf
rcll
mov
mov
push
mov
fstl
aam
les
fimuls
mov
jmp
pop
cmp
or
xchg
movsb
fisubrs
cmpsb
mov
addr16
mov
inc
pop
dec
push
jge
js
scas
call
lahf
pop
outsb
jle
rcrb
imul
sbb
int
rorb
cltd
fldl
pop
mov
aam
aad
lret
mov
adc
sub
add
pushf
into
cmc
pop
jp
fildl
es
add
pop
lcall
sub
call
inc
out
xchg
add
mov
shrb
mov
out
mov
cmp
and
fs
and
stos
test
inc
gs
and
and
jne
push
mov
cmc
xor
sub
out
pop
pop
outsl
int3
pop
cmc
jmp
push
push
mov
inc
mov
in
imul
movsl
sbbb
inc
ja
shlb
loop
jo
jb
ret
adc
dec
and
sti
stos
jne
movsl
mov
inc
mov
bound
call
cs
inc
cwtl
popf
add
aad
dec
push
adcb
mov
lret
sbb
xchg
cmpsb
pop
cs
mov
sub
fadd
neg
xchg
and
sbb
call
push
mov
mov
mov
and
loop
xor
push
pop
push
cmpsl
push
pop
push
fsubr
jb
enter
dec
sub
cmc
outsl
jns
inc
dec
cmp
jl
sbb
inc
pop
gs
repz
sar
in
jno
push
xchg
or
hlt
andb
shl
and
loop
or
movsl
inc
mov
scas
cltd
clc
inc
pop
inc
fisttps
iret
adc
jae
inc
adc
mov
or
or
inc
push
idivb
and
in
sbb
inc
andl
outsl
inc
inc
addb
lock
inc
scas
popf
inc
push
mov
aaa
ss
jecxz
jge
test
roll
xchg
pop
sbb
adc
mov
sbb
inc
mov
aam
sub
aaa
scas
call
popf
rolb
leave
mov
push
rorb
popa
add
dec
iret
aam
dec
pop
sub
mov
adc
es
adcb
jl
xor
in
cmp
es
inc
inc
popf
xchg
xor
and
or
nop
adc
rorb
cmpsl
mov
push
sahf
xor
jle
inc
adc
std
fwait
jae
sti
adc
aam
daa
fdivr
sbb
add
jp
adcl
rcr
push
cmp
xchg
inc
lods
les
js
mov
dec
inc
dec
sti
out
test
and
add
stos
sub
sbb
push
inc
inc
fldcw
pop
sub
pop
sbbl
mov
cmp
sbb
adc
push
push
loop
xchg
inc
loop
cmp
mov
inc
jno
inc
mov
mov
mov
push
ret
push
xor
sbb
cmpsb
std
outsb
inc
orl
in
mov
push
or
or
in
jmp
adc
les
inc
jp
test
push
es
clc
jae
xor
and
push
pop
jl
pop
gs
ljmp
iret
xchg
xchg
nop
inc
lock
add
jmp
enter
aaa
jg
inc
sbb
pushf
inc
inc
mov
stos
jnp
fadd
adc
hlt
loopne
pop
je
xorb
test
jne
loope
mov
bnd
scas
loopne
push
and
jae
dec
enter
cmpsl
mov
imul
pushf
mov
sbb
xor
stos
mov
clc
xor
pop
rep
in
inc
fstl
fbld
jne
andb
faddl
and
add
iret
inc
lcall
aaa
dec
jle
dec
and
mov
cmpsb
push
adc
adc
adc
push
rcr
popa
xor
jg
je
jg
push
rcrb
mov
lret
fs
dec
dec
xchg
ret
fld
jl
cmp
sbb
inc
pop
jl
mov
mov
pop
popf
push
scas
in
add
mov
jp
xorl
aad
xor
xchg
jnp
jmp
cli
inc
inc
jmp
sub
jo
and
into
adc
lret
dec
add
cs
dec
inc
int
je
jge
sub
add
push
shll
shl
jecxz
cmp
out
push
add
pop
fimuls
pop
arpl
dec
addb
shlb
in
dec
xchg
xor
xor
test
mov
ret
mov
lcall
dec
or
sub
jne
inc
adc
notl
inc
xlat
add
xchg
or
pop
inc
movsb
mov
push
outsl
mov
shl
je
jp
leave
pop
xchg
inc
daa
shll
outsl
arpl
push
in
push
push
popa
pushf
scas
je
push
or
push
cmp
dec
mov
shrb
jne
lahf
xchg
push
icebp
mov
and
fimuls
jmp
popf
mov
aaa
dec
mov
sar
addl
call
adc
inc
jmp
popa
stc
inc
mov
pop
sub
sbb
pop
push
dec
popf
testl
inc
or
sar
cmp
push
pusha
push
push
lret
adc
nop
cmp
lahf
push
cmp
adc
incl
ret
mov
ljmp
in
movsl
pop
mov
scas
mov
repnz
ret
aad
adc
divl
mov
lahf
sbb
dec
inc
cmc
ljmp
dec
cwtl
stc
arpl
lret
sbbb
push
push
jmp
add
jno
jb
mov
ljmp
pushfw
cmp
jne
dec
mov
xchg
insl
scas
adc
add
xlat
ret
hlt
xchg
mov
gs
jbe
imul
outsl
jecxz
pop
ret
adc
insb
pmaxub
mov
lahf
es
mov
add
and
jae
sbb
sub
pop
in
pop
loop
into
popa
adc
inc
cmp
sbb
mov
stos
sbb
insl
sub
subb
insb
ret
fdivp
mov
dec
add
mov
je
jmp
push
das
pop
movsl
pushf
mov
xlat
adcl
jnp
fistl
push
clc
mov
mov
ds
jo
adc
push
popf
dec
sbb
cwtl
lods
xor
cwtl
jle
insl
jo
cmpb
pop
fs
inc
add
ficoml
inc
mov
and
fs
je
ror
sar
sub
bswap
aaa
xor
jmp
call
fstl
or
sub
pop
sti
out
loope
mov
pop
es
inc
insl
jae
push
cmp
in
imul
mov
outsb
mov
mov
sbb
es
rolb
cli
mov
jge
and
and
jnp
pop
sub
call
stos
repz
xor
mov
test
pop
pop
es
inc
insl
jae
dec
ds
mov
sub
mov
push
lcall
or
jecxz
loope
sti
cmp
bound
icebp
jbe
pop
inc
aas
sahf
rcr
and
cs
fxch
jnp
xchg
arpl
lret
rolb
push
sahf
fsubl
sbbb
jg
stos
push
neg
mov
loop
in
mov
ficoms
movsl
cli
lods
lcall
mov
pushf
call
jecxz
test
cwtl
call
jo
test
or
fnstcw
out
testb
fs
sbb
and
das
imul
fidivs
jb
jbe
cld
out
or
rorl
pop
sub
lea
ja
jmp
lea
je
add
push
call
mov
lea
jae
cmp
add
call
pusha
mov
lea
jbe
clc
cmp
rol
jmp
out
negb
jge
subb
int3
xchg
mov
and
jbe
mov
mov
sub
inc
pop
shl
jb
sub
mov
xlat
fnsave
icebp
push
and
mov
and
enter
int3
inc
ficoms
or
jb
xchg
mov
sub
sbb
pop
js
cwtl
call
inc
in
cmpsb
xchg
fwait
scas
leave
xchg
push
aad
or
outsl
jmp
fs
cmpsb
pop
xchg
push
mov
stos
out
add
mov
mov
mov
dec
inc
jge
loopne
pop
adc
xchg
jno
addr16
xorb
add
pushl
mov
pushf
lea
jmp
call
int3
ljmp
aam
pushf
clc
repz
jecxz
rolb
and
test
xorl
mov
test
shrl
and
and
sub
add
add
nop
and
or
fdivr
out
repnz
in
xlat
push
sbb
lret
nop
sub
jle
or
xor
ds
or
ret
ja
sbb
das
aaa
add
or
je
lahf
int
popf
sti
sub
jle
or
dec
inc
mov
xchg
mov
xor
ljmp
icebp
imul
roll
push
inc
mov
sub
adc
mov
and
mov
mov
adc
les
sub
dec
ss
jne
or
sbbb
jl
fcompl
xchg
mov
and
xor
enter
jo
leave
mov
xchg
inc
or
adc
and
daa
mov
rcrl
test
pushf
clc
movzwl
pushf
mov
stc
add
cmp
movb
jmp
and
push
add
sub
stc
pushf
test
add
pushl
dec
pushl
pushf
call
lea
ja
not
pushf
mov
movzbw
pushf
seta
mov
mov
movzbw
lea
movsbl
mov
pushf
movsbw
mov
jmp
pushf
pusha
pushf
lea
call
call
dec
push
jmp
mov
and
and
push
shr
or
jo
movzbw
push
and
movsbl
rcr
sub
lahf
lahf
lea
push
jmp
mov
jmp
test
in
cwtl
call
mov
xchg
pop
les
jle
mov
add
bswap
push
and
cmpsb
mov
ficoml
mov
inc
push
and
test
sbb
mov
push
test
and
mov
xchg
leave
mov
clc
xchg
aas
cmpsl
sub
aam
push
lret
or
ja
out
dec
je
push
push
dec
push
xchg
jge
cmpl
imul
es
aaa
jmp
mov
inc
mov
rcl
bt
sub
lea
push
pushf
lods
not
not
rol
clc
add
not
neg
xor
setbe
ror
pushf
stos
not
pusha
push
mov
lea
jmp
jbe
pop
repz
call
sub
fs
dec
lds
push
jb
pop
lcall
aas
pop
fstp
sbb
out
jg
test
push
ja
xor
add
xchg
test
inc
sbb
push
lods
jns
aaa
push
or
js
mov
cwtl
cltd
dec
icebp
adc
and
pop
int
jno
sub
int3
mov
xchg
pop
mov
clc
xchg
out
push
xchg
mov
insl
int
and
cmp
es
int
ret
je
mov
pop
call
mov
fucomip
jns
cmpsw
lret
mov
pushf
jmp
lea
je
cmp
cmp
pusha
push
pushl
ret
cmp
add
cmc
stc
jmp
outsb
pushf
fdivp
cwtl
call
dec
jae
push
loop
stos
cmc
cmpsb
dec
mov
pushl
nop
xorl
mov
shl
movsb
pop
cmp
cmpsb
out
repnz
cmp
cmpsl
shr
movb
and
daa
fisubrl
xor
mov
loope
jg
outsl
jnp
push
xchg
cli
jnp
shl
cwtl
call
jae
jns
push
stos
push
nop
shlb
mov
mov
and
fisubrl
aaa
xchg
xor
popf
lahf
es
addb
cmpsl
lock
sbb
daa
in
ror
mov
cmp
les
imul
mov
icebp
adc
and
sub
fcmovu
lods
not
adc
ficoml
pop
dec
outsb
xchg
mov
hlt
sub
adc
in
mov
mov
sub
jmp
mov
inc
icebp
cwtl
call
stos
xchg
js
int
inc
mov
andb
fnstcw
stc
or
or
push
push
daa
pop
data16
out
scas
outsb
sbb
sti
les
nop
dec
push
mov
icebp
cwtl
call
xchg
push
cmp
stos
sbb
in
shrd
inc
adc
add
add
jbe
sbb
cli
out
or
dec
fwait
test
stos
out
inc
das
sti
fstps
roll
and
push
shll
scas
xor
xchg
sahf
push
jns
push
dec
mov
dec
testb
into
bound
or
in
fsubs
sub
dec
in
xor
pop
les
cmpsl
sbb
iret
add
sarb
xor
cmp
test
bound
lahf
ja
xor
scas
dec
and
out
cltd
add
push
loop
lds
lahf
rol
jmp
pop
add
cmc
sti
outsl
jnp
pop
mov
out
cwtl
call
fbstp
in
out
push
les
and
fiaddl
out
or
push
push
mov
sbb
dec
xor
xchg
mov
mov
mov
pop
movsb
inc
xchg
add
jg
dec
mov
and
in
scas
aaa
sub
sub
jnp
ret
dec
fstps
pusha
shrl
int
or
xlat
inc
mov
mov
mov
mov
lods
stos
or
fwait
and
and
leave
jmp
movsb
daa
cmp
mov
and
in
jnp
sbb
dec
adc
xor
fsubl
ja
jl
rcr
mov
dec
aad
mov
inc
add
push
add
mov
test
cwtl
call
flds
xchg
add
jecxz
mov
das
decl
test
adc
adc
xchg
pop
inc
shlb
jb
mov
sub
out
sbb
js
mov
test
xchg
stc
gs
insb
mov
mov
xor
test
mov
pusha
clc
cmp
call
cmp
pusha
cmpb
movl
pushl
pushf
push
lea
jne
neg
sub
sar
inc
mov
not
shr
sar
add
clc
shl
mov
stc
test
pusha
push
movb
lea
je
test
jmp
lahf
jmp
jae
ja
cwtl
call
push
imul
and
cs
jb
push
pop
icebp
repnz
imul
adc
mov
imul
and
add
push
pop
sbb
imul
cld
push
sbb
or
jmp
jno
xor
sub
jecxz
mov
cs
loopne
addr16
dec
int3
xchg
out
push
push
pop
enter
sub
mov
rorb
fidivs
addl
adc
mov
xchg
cli
or
in
xchg
xor
lea
sub
aas
stos
add
scas
in
mov
xor
xchg
loopne
sbb
sahf
jge
sbb
aad
shl
iret
seto
jnp
icebp
jl
mov
sarb
sbb
iret
shlb
div
dec
xchg
adc
rclb
cwtl
call
faddl
push
in
sbb
stos
daa
xchg
ds
add
xor
sbb
jge
stc
adc
aaa
xchg
inc
fiaddl
push
fcompl
shrb
sbb
lds
cmp
aaa
or
adc
ja
pop
outsl
pop
imull
jmp
sub
jp
adc
or
mov
inc
lock
cmp
xorl
jle
inc
fisttpll
push
leave
inc
fmuls
outsl
je
rcrl
pop
jne
sbb
outsl
enter
push
sub
nop
shl
inc
adc
inc
arpl
mov
pop
lods
mov
sbb
test
dec
dec
add
data16
adc
sub
aaa
js
adc
nop
ja
insb
in
push
in
sbb
inc
rcll
xor
stc
rorl
jecxz
loopne
or
in
loopne
inc
push
push
rorb
repz
fildll
lds
pushf
mov
pop
js
xchg
jmp
jp
rol
popf
orl
mov
adcl
out
and
sub
mov
outsw
or
push
mov
xlat
push
pop
add
ja
push
xchg
ret
sub
jbe
movl
movl
movl
pushf
pushf
pusha
lea
jmp
pushf
jmp
pushf
pushl
jmp
lea
call
pushf
call
clc
sub
bt
ror
jmp
lods
add
addb
add
xchg
push
add
add
add
lds
add
push
add
loop
add
out
push
add
lock
add
add
add
movb
movl
pusha
pushl
movl
pushf
pushf
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
add
push
pushf
pushf
lea
je
bsr
mov
btc
ror
add
movzbw
or
dec
test
mov
push
test
mov
test
test
mov
pushf
pusha
lea
je
cmc
add
movzbl
or
pusha
mov
pusha
cmc
pushf
add
pushf
call
sub
call
mov
lea
jae
bsr
bts
inc
sub
mov
sbb
shl
not
neg
mov
movzbw
cmc
stc
cmc
mov
cmc
push
call
lods
pushf
pushl
dec
pushf
jmp
pushl
push
lea
ja
bt
imul
cmc
bt
add
pusha
mov
movl
lea
jmp
push
pushl
mov
movw
push
pusha
pushl
lea
jmp
movl
pushf
pushl
popl
pusha
pushf
pushl
ret
jns
push
ljmp
daa
xchg
fsubrl
jge
ja
repz
pop
cli
lcall
aad
lods
xchg
cmp
ja
inc
jl
mov
ret
xor
push
adc
cld
leave
pop
bound
lret
popa
cmpsb
push
psllq
inc
mov
jb
add
cmpsb
mov
into
push
push
xchg
out
in
icebp
xchg
dec
imul
test
cmp
lea
pushf
pushl
jo
push
pushf
pushl
ret
push
pushf
mov
push
pushf
pushf
pusha
lea
jmp
push
pusha
movl
pushf
lea
jmp
push
fdiv
jmp
imul
dec
pop
fwait
inc
mov
imull
push
jb
lcall
add
dec
jb
inc
shrb
popf
push
mov
loope
mov
fs
xchg
mov
sbb
and
leave
or
in
loopne
std
popa
int
and
cmp
mov
dec
add
nop
cwtl
rcl
ret
gs
push
mov
imul
test
sub
lods
dec
fucomip
dec
stc
shll
sub
fisubl
push
jecxz
pop
sbb
mov
lret
aad
iret
stc
call
insb
movsb
jge
cwtl
call
das
cwtl
inc
mov
cmpsb
inc
das
add
aam
out
jmp
pop
inc
std
mov
or
mov
ss
mov
push
mov
pop
mov
inc
mov
add
arpl
mov
pop
enter
inc
pop
dec
data16
mov
inc
xchg
xlat
push
cmpsl
sub
mov
lret
mov
add
inc
inc
jmp
dec
shl
imul
xor
data16
les
or
rolb
mov
cmp
aad
js
decl
gs
scas
pop
les
add
aas
and
leave
sbb
add
test
cmc
movzwl
bt
mov
push
bt
push
add
test
push
movl
mov
pushf
test
push
lea
je
jmp
jmp
mov
push
pusha
movb
pushl
ret
mov
push
movb
lea
call
jmp
pushf
push
jmp
xorl
call
insb
xchg
sarb
cld
add
es
xchg
push
and
int
lds
mov
sbb
pop
aad
adc
xor
cmp
das
xor
or
test
pop
and
lds
mov
add
shlb
negl
cmp
popa
fldl
lods
mov
ljmp
dec
stos
jnp
dec
sbbb
mov
xchg
cmp
pop
iret
sub
in
in
push
out
call
orl
pop
dec
mov
xchg
rorb
jmp
pop
sub
push
dec
adc
int3
sahf
inc
xchg
or
jnp
cld
lea
fsubrs
push
jno
inc
test
fsubrl
push
pop
dec
xor
sbb
xchg
push
ficomps
jno
cli
push
ja
lea
ljmp
mov
icebp
gs
xchg
xor
pop
mov
mov
pop
mov
repnz
addr16
call
std
imul
push
int
sarb
mov
rcll
inc
add
push
icebp
xchg
jb
data16
negb
pop
cmpb
pop
shrl
outsb
pop
imul
decb
arpl
adc
stc
mov
inc
sbb
or
push
push
cmp
xor
mov
mov
push
ret
xor
xchg
imul
push
pop
ror
jo
insl
mov
fildl
icebp
push
fistps
sarb
jle
insb
std
out
popf
cmpsl
or
dec
push
clc
sub
cwtl
call
ret
mov
cmp
inc
cwtl
lds
add
sub
sbb
cmpl
dec
and
jp
cmp
jmp
and
or
call
fistpl
movsl
fistpl
or
cmp
jle
jae
sti
mov
lods
mov
cmp
mull
lods
js
add
jmp
lea
ja
clc
clc
imul
jmp
pusha
call
jne
ror
shrd
mov
clc
stc
test
test
add
stc
push
movzwl
shld
mov
call
lahf
add
push
shr
rcl
bswap
mov
aas
neg
ror
add
sub
lea
lahf
push
add
push
btr
adc
rcr
bsf
push
aad
rcl
pusha
mov
bsr
shl
bsr
and
mov
jmp
xchg
sbb
adc
sbb
push
mov
dec
push
ffreep
in
es
or
or
mov
sub
stos
leave
bound
push
repnz
ds
mov
mov
cmc
fisttps
dec
not
push
lea
call
loope
jl
cwtl
call
or
jo
xor
push
jl
aad
push
stos
and
cld
sub
lahf
lock
inc
or
or
xchg
mov
mov
out
test
in
cltd
xor
xlat
lds
out
shll
mov
jae
outsl
mov
scas
jbe
and
data16
sti
cmp
push
inc
pop
in
cmp
sub
out
mov
lret
aaa
bound
mov
dec
mov
cmp
dec
jmp
mov
pop
lea
jb
pusha
jmp
push
pusha
lea
jne
pushf
mov
push
pushl
lea
jmp
add
add
rcl
mov
rcl
jmp
pushf
movb
rep
movsbl
pop
movzbw
pusha
mov
pushl
mov
push
lea
jmp
lahf
movl
pop
cwtl
cwtl
lea
call
mov
test
mov
add
push
mov
pop
std
push
repz
daa
test
ja
cltd
ret
xchg
xchg
repnz
aas
rcrl
mov
push
insl
ret
mov
mov
stc
stos
arpl
add
pop
push
sbb
gs
enter
pushf
push
movl
push
lea
jmp
mov
call
fcomi
loopne
test
and
inc
xor
shrl
cwtl
ljmp
sbb
mov
lret
cmp
fdivrl
inc
add
test
jg
mov
xor
outsb
fsubl
sbb
das
lods
leave
push
sub
sub
pop
loope
mov
rolb
into
xor
pop
mov
jecxz
call
inc
rcrb
mov
and
pop
dec
mov
test
add
inc
ret
ficomps
fmul
mov
mov
jg
scas
lahf
jns
jae,pt
dec
pop
sub
mov
mov
jae
andl
xchg
in
add
call
adc
call
pusha
call
lea
jbe
push
movl
pushf
movw
pusha
pushf
lea
jmp
call
push
ss
loope
call
cmp
popf
xchg
mov
cmpsb
out
in
pop
cmp
andb
mov
movsb
adc
push
sbb
in
xor
sub
xchg
leave
jge
outsl
jnp
sub
icebp
xchg
cmp
cwtl
call
mov
xchg
and
inc
add
push
pop
subb
pop
sbb
pop
test
xchg
sub
adc
jmp
in
xchg
test
add
xchg
jnp
add
sub
daa
idivl
sub
cli
gs
jae
movntq
jmp
jnp
shlb
stc
add
pop
icebp
dec
cmc
inc
test
notb
sub
push
shrl
mov
and
lret
xchg
jle
ljmp
in
loop
mov
pushf
pushf
lea
jmp
call
jmp
mov
sar
mov
bsf
push
shr
add
inc
test
mov
bt
bt
or
call
call
pushf
pushf
pushl
mov
not
jmp
call
fwait
mov
ja
nop
sbb
jp
fisttps
fstl
jb
test
es
jbe
scas
mov
push
sahf
lds
adc
adc
jns
or
sahf
int
sub
fwait
mov
cli
aam
xchg
data16
sti
jne
jns
mov
fdiv
jg
add
stos
pushf
jecxz
fs
rclb
jge
xor
out
leave
or
and
xchg
and
les
icebp
popa
fwait
into
aaa
add
cltd
les
jmp
fldenv
je
add
dec
adc
pop
and
add
clc
bt
cmp
jmp
add
xor
or
push
mov
pop
cld
shlb
inc
mov
and
adc
loopne
sbb
mov
mov
movsl
cmc
inc
ret
ds
out
mov
sti
add
jnp
jge
cmp
dec
cld
push
dec
xchg
xor
cmp
imul
pop
sbb
jl
and
jle
and
mov
jmp
mov
pop
fdivs
popf
notl
int3
xchg
add
add
push
add
mov
add
push
add
rcrb
add
push
add
add
add
lock
cwtl
call
dec
mov
mov
push
mov
push
jb
test
js
int3
sbb
mov
jmp
push
jno
scas
xchg
fbld
lods
dec
cmp
hlt
adc
adc
sbb
stc
lea
fsubr
adc
xchg
push
das
stos
iret
sbb
mov
mov
sbb
cld
ds
sahf
int3
xchg
pop
mov
mov
jecxz
dec
xchg
jmp
imulb
call
jne
gs
xor
fs
insb
add
call
push
pusha
movl
pushf
movl
mov
pusha
lea
jmp
arpl
fisubrs
lret
pop
mov
ss
push
out
adc
in
push
jo
test
mov
roll
inc
jl
xchg
pop
mov
push
inc
mov
js
adc
outsl
pop
aad
arpl
add
ret
inc
ror
jge
addr16
xor
hlt
cwtl
call
mov
fcoms
stos
shll
sub
mov
inc
imul
mov
cmpsb
aas
or
jmp
and
pop
std
pop
inc
sbbl
push
sti
add
mov
add
daa
or
clc
sub
cmp
decl
xor
outsl
jnp
andl
call
xchg
xor
sarl
dec
mov
add
gs
or
sar
ja
je
mov
icebp
mov
outsb
lds
mov
push
xchg
add
pop
and
push
inc
icebp
push
add
int
xlat
cmpsb
loope
dec
leave
js
aad
fildll
mov
mov
xchg
adc
add
cmpsl
inc
insb
jg
push
mov
les
repnz
xor
sub
or
push
dec
or
icebp
jnp
fnsave
push
or
sbb
arpl
lock
ret
inc
or
push
aaa
pop
rcrl
inc
ret
jb
mov
sbb
std
add
lea
jae
xchg
not
jmp
pushf
pushf
stc
imul
test
cmp
clc
cmc
add
pushf
lea
jmp
push
lock
std
std
mov
mov
mov
jns
xor
lret
popf
sub
pushf
mov
pop
shll
lret
inc
xchg
outsl
lods
in
jge
fxam
cmpl
iret
add
loop
sub
or
das
insl
popf
xor
push
mov
pop
dec
inc
inc
cmpsb
push
ret
in
xchg
push
push
scas
add
icebp
xor
into
dec
inc
sarb
loopne
jmp
adc
dec
test
stc
cmp
pusha
push
movb
lea
ja
rol
add
cmp
bt
mov
cmp
push
pushf
cmp
pusha
mov
mov
pushf
lea
jb
test
pusha
cmp
pusha
call
jmp
lea
jb
cmc
cmp
push
mov
push
lea
jae
mov
mov
jmp
push
lea
je
xchg
xchg
lea
call
push
call
sub
jmp
mov
pusha
cmp
test
clc
add
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jne
movb
call
mov
pushf
lea
jne
or
rcl
bsf
xor
shr
bsr
xor
mov
stc
stc
add
adc
call
pushf
push
call
and
ficompl
clc
xchg
lret
ja
stos
inc
jge
sbb
out
lock
cmp
jmp
jecxz
sarl
insl
iret
mov
ffree
add
jle
dec
and
negl
push
push
inc
mov
xchg
push
push
loopne
pop
or
xor
inc
xor
jno
repz
shl
repz
sar
xor
mov
inc
add
inc
je
pushl
xor
mov
inc
inc
mov
inc
xor
hlt
inc
repz
repnz
inc
xor
inc
xor
mov
icebp
bnd
xor
mov
inc
xor
mov
hlt
sar
add
dec
jmp
push
rcr
call
xorl
xor
sub
pop
ret
xchg
gs
test
push
pop
add
movsl
sbb
dec
fadds
jae
aad
push
fcmovnu
jnp
repz
dec
mov
mov
mov
dec
mov
leave
mov
and
adc
sti
repz
leave
push
call
ret
inc
mov
adc
stos
and
pop
ror
cmpsl
mov
mov
inc
call
push
stos
sub
cwtl
call
push
pop
test
sub
sbb
push
subl
sbb
xchg
ljmp
push
push
stc
mov
pop
dec
ror
test
sbb
mov
test
push
add
popf
push
jo
xor
pushl
ret
sbb
inc
ficompl
dec
cltd
xchg
fucom
xor
xchg
pushf
xchg
jecxz
or
xorl
xchg
cmp
lret
loop
inc
stos
dec
test
cmpsl
push
or
dec
out
xlat
int3
lods
out
loopne
lea
push
and
dec
fucomp
push
iret
stos
or
inc
in
xchg
into
fdiv
dec
cmp
xchg
push
insb
push
add
jp
cwtl
call
sbb
mov
cmp
mov
jecxz
out
lea
mov
and
inc
mov
mov
test
xor
cmp
dec
mov
add
xor
xchg
subl
push
mov
iret
push
sub
fistl
cmpsb
rorb
int3
pushf
add
pushf
mov
movb
pushf
lea
jmp
jmp
jmp
push
lea
jne
and
not
dec
mov
jmp
cmp
sub
call
jmp
pushf
lea
jne
rol
bt
add
mov
pushf
bt
movw
clc
add
pushf
clc
push
movzwl
neg
dec
mov
pushf
bt
pushf
add
stc
push
clc
mov
push
test
test
call
pop
repnz
cwtl
call
cmp
out
js
outsb
cmp
clc
jl
rorl
sbb
mov
add
pushf
addr16
mov
mov
out
xchg
scas
sets
dec
cmpsl
mov
mov
rorl
scas
in
js
addr16
sub
call
push
push
mov
lea
iret
mov
xchg
sub
sub
jge
test
inc
jge
jno
dec
imul
push
lret
or
push
jl
pop
aaa
push
xor
lds
repz
cmp
repnz
outsl
sub
sub
inc
mov
adc
jno
or
lock
es
test
insl
lcall
sub
popf
fcoms
add
imul
loopne
inc
and
imul
ret
movl
dec
and
lea
jmp
movl
pusha
pushf
push
lea
jmp
xor
add
add
cmpsl
outsb
popf
and
jne
movsl
in
lahf
mov
adc
add
movsb
push
nop
mov
cmp
add
jns
mov
xlat
cwtl
call
xchg
ja
movsb
test
cmp
push
pop
mov
jbe
stos
aam
jnp
inc
pop
popa
mov
mov
jge
lods
xchg
xchg
xchg
and
jo
lock
cwtl
in
sti
popa
in
or
push
and
and
outsl
jnp
in
mov
cwtl
call
daa
mov
into
lcall
lock
fildll
lcall
adc
or
daa
jno
test
fisttps
mov
push
or
xchg
sbb
mov
repnz
push
dec
jno
cmp
sub
mov
pop
inc
loope
jnp
jmp
stos
aad
call
ja
fisubl
insl
cmp
inc
cli
jp
test
or
push
dec
inc
mov
decl
jle
ljmp
imul
push
xchg
hlt
pop
inc
out
in
je
sbb
push
fsubl
cmp
dec
cmp
arpl
pop
sub
repnz
lcall
add
es
clc
pop
ret
sbb
aad
clc
inc
and
out
test
jg
in
fmul
in
imul
test
adc
xor
cmp
jmp
or
shrb
out
ss
aam
std
adc
insb
jbe
ds
sub
sub
dec
cmp
subb
lods
xlat
adc
mov
bswap
cmp
movzbw
pusha
mov
movw
pushf
test
stc
sub
push
pushl
pushf
movw
lea
jmp
and
aad
call
subb
mov
enter
jecxz
mov
lods
mov
aam
cmp
fadds
scas
mov
ds
add
mov
repz
dec
pop
lds
fidivrl
nop
inc
mov
xchg
xlat
xor
pusha
xor
mov
cmp
leave
mov
xor
inc
add
jmp
hlt
stc
bound
or
into
mov
sbbl
sbb
add
pop
lea
jbe
test
mov
sub
call
jmp
cmp
bswap
jmp
pusha
push
call
lea
mov
push
movb
movl
pushf
call
push
pushf
movl
call
sarl
cwtl
call
test
lcall
loopne
shll
cmpsb
mov
mov
mov
xchg
pusha
pop
sub
push
int3
arpl
xchg
mov
jl
pusha
mov
xor
cld
rcl
imul
mov
daa
jmp
cwtl
call
fcoms
adc
les
xchg
pusha
mov
ss
insb
stos
call
mov
mov
rolb
rcll
stos
stos
mov
mov
pop
or
aaa
mov
add
lret
mov
lock
push
push
cs
subl
xchg
mov
add
out
jl
jle
xchg
push
xchg
mov
shlb
rcl
cs
jo
sbb
pop
test
mov
jl
repnz
xor
add
cwtl
call
pop
cwtl
xchg
popf
push
xor
loop
ror
repnz
movsb
repz
mov
sbb
cltd
aas
jnp
adc
and
add
and
test
sbb
daa
std
xchg
mov
mov
stos
mov
aad
jge
aam
aaa
repz
pop
jo
subl
xchg
add
nop
push
int
cwtl
call
sbb
pop
loop
push
mov
cmpsb
jg
mov
out
push
or
xchg
clc
js
cmp
sbb
scas
test
adc
jnp
fst
push
out
sbb
ffree
or
dec
lea
rcrl
add
add
pusha
push
pushf
pushl
ret
sahf
mov
cwtl
call
pusha
jnp
jo
test
ja
lcall
dec
adc
cmp
lds
insb
push
inc
inc
adc
out
incb
xor
cld
data16
icebp
divb
fs
stc
mov
xchg
and
xchg
fisubrl
inc
repz
mov
or
jmp
lea
je
call
mov
pop
rcrb
fcompl
mov
push
repz
pusha
out
hlt
adc
or
sbb
pop
jo
lea
test
cmp
jmp
dec
dec
or
ss
xlat
pop
mov
dec
push
movsl
jnp
adc
pop
cmpsb
and
in
xchg
push
pop
mov
dec
repnz
dec
adc
jmp
fldt
xchg
push
les
outsl
mov
or
dec
jb
pop
jns
jnp
mov
push
and
lahf
jb
pop
jo
cmpsb
adc
jecxz
xlat
lods
cltd
jbe
mov
mov
xchg
les
test
ds
xor
add
dec
add
stc
scas
mov
push
pop
inc
sbb
pusha
out
stos
pop
jae
inc
jns
mov
addb
xchg
xor
cmp
andl
pusha
movw
lea
je
test
call
pusha
stc
bt
repnz
pusha
pushf
jmp
cmp
pushf
jmp
push
jecxz
rcrb
adc
or
fdivl
xchg
adc
jo
jg
inc
jmp
sahf
addr16
mov
mov
push
cmp
js
sbb
lock
clc
add
ret
addr16
cmp
jmp
inc
pop
sbb
cwtl
call
push
pop
ss
sbb
icebp
mov
cmp
mov
leave
xchg
and
cmp
lock
out
test
ss
or
and
mov
cmpsl
cmp
imul
mov
dec
and
mov
add
stc
call
test
mov
clc
cmp
pushf
test
pusha
pushf
lea
je
stc
sub
jmp
movl
call
or
pusha
pushf
jmp
movl
pushf
pushf
mov
pushf
push
pushl
ret
adc
rcrb
adc
inc
outsl
mov
loope
mov
mov
in
jl
sbb
dec
jb
arpl
scas
and
mov
ja
out
loope
cmpsb
sbb
cmp
lahf
or
leave
or
cmp
loopne
adc
outsb
jle
mov
cmp
jmp
aaa
sbb
inc
sbb
lea
lods
xor
lret
jbe
jnp
jbe
xlat
xchg
sarb
xchg
jb
push
cwtl
lea
mov
call
call
std
xor
or
push
cmp
xor
arpl
shll
dec
xchg
pop
ret
outsb
scas
push
negb
inc
inc
push
adc
cmp
insb
lock
aas
jns
adc
lret
imul
mov
and
loopw
adc
lea
ja
pushf
pushf
pushl
lea
jb
jmp
pusha
pusha
xchg
call
pushl
popl
push
pushl
push
pushl
ret
pushf
pushf
mov
movsbw
call
add
dec
outsl
arpl
inc
jb
add
andl
test
clc
call
enter
adc
add
shr
sar
mov
clc
shld
rol
add
bswap
lea
mov
pushf
mov
jmp
pushf
jmp
call
call
lock
into
cwtl
call
iret
sub
ret
repnz
out
cmp
xchg
iret
aas
jmp
jo
mov
add
mov
sub
out
pop
xor
sub
xor
lods
aaa
popf
mov
fwait
cmp
popf
dec
clc
shl
lret
rcrb
xchg
cld
mov
jo
cld
pop
scas
add
xchg
mov
pop
imul
pop
movsb
adc
dec
data16
or
mov
call
and
call
push
pushf
pushf
lea
jne
lea
lea
mov
push
movb
pusha
push
lea
jmp
inc
bt
neg
jmp
popf
cpuid
nop
pushf
pushf
pushf
pusha
movl
mov
movl
push
push
pushf
push
lea
jmp
not
mov
stc
cmp
and
cmc
cmp
add
pushf
push
lea
jmp
push
call
and
imul
add
dec
or
sbb
dec
pushf
movsb
push
and
add
lods
sbb
testb
add
or
ss
repnz
nop
xchg
sbb
pop
xchg
xchg
outsb
ret
movsl
fisubrl
enter
mov
pop
xlat
add
inc
inc
and
pop
lds
movb
pusha
pushl
movb
pushl
popl
pushf
pushl
ret
push
lea
jb
call
cmp
cmp
mov
movb
mov
lea
jb
bt
pusha
pusha
bt
cmp
call
out
call
jp
dec
sub
insb
and
jae
mov
insl
jb
mov
jle
loopne
add
fmul
xor
push
xchg
fimuls
pop
fildll
mov
test
test
inc
mov
test
mov
shlb
xchg
mov
and
and
cltd
pop
hlt
mov
inc
or
enter
cvtdq2ps
lret
imul
add
or
scas
rcll
fadd
jg
mov
scas
inc
cmp
loopne
inc
mov
sub
pushf
fdivr
popf
cmc
cmpsl
popa
push
or
repz
adc
lahf
cmpl
test
aad
add
add
movl
call
mov
setge
sub
add
pusha
and
sar
mov
mov
cmc
test
test
test
jmp
pushl
popl
mov
pushl
ret
pushf
jmp
call
call
loopne
aad
sbb
adc
mov
cmpsb
sub
lea
or
iret
mov
xchg
addr16
sbb
lock
or
jl
or
adc
movl
jmp
cld
ds
sbb
pop
repnz
and
push
pop
ljmp
mov
or
lahf
sbb
jb
adc
adc
sbb
and
sbb
or
add
xor
add
arpl
or
xor
stos
sub
cwtl
call
lds
call
cmp
adc
and
ljmp
jb
pop
and
mov
stos
cmpsb
mov
aas
repnz
ss
dec
jmp
lods
pop
daa
lods
xor
leave
mov
mov
cmpsb
ljmp
inc
out
pop
xor
mov
sbb
ficoml
mov
cmp
sub
sub
mov
jnp
pop
push
or
inc
aad
xor
pop
inc
mov
scas
add
or
sbb
push
push
out
lret
xor
cmp
test
mov
fistl
sbb
xchg
popa
mov
fstps
inc
ret
jmp
loop
push
loopne
ja
adc
push
inc
push
jecxz
jle
dec
nop
push
cmpsb
out
or
loope
fcmovbe
fiadds
sub
cltd
aad
lahf
outsb
hlt
push
mov
fistpll
push
inc
gs
insl
adc
fwait
add
mov
ret
inc
cmp
in
dec
sahf
jns
les
les
sbb
adc
push
cmp
cmpsl
setno
sub
jne
test
lock
cmpsl
ja
mov
jl
sahf
sarl
and
dec
push
mov
in
xchg
xchg
vpcomled
jmp
int3
outsl
cli
int
shlb
and
push
sub
test
movw
stc
stc
pushl
popl
test
bt
bt
pushl
cmp
movb
lea
ja
rcl
and
cmc
sub
mov
setbe
add
bsf
ror
shl
mov
rcr
shl
not
mov
pusha
clc
repnz
push
movb
call
lret
mov
enter
dec
jno
movsb
cmp
cmp
into
pop
and
mov
fnstsw
sarl
or
lret
inc
neg
inc
pushl
mov
cltd
dec
add
in
jns
sub
mov
in
dec
shrb
and
fxch
pop
add
pushf
mov
pushf
mov
pushl
ret
pushl
call
inc
and
pusha
adc
sub
xchg
lea
adc
sub
movzbw
aaa
mov
dec
mov
mov
cmp
push
stc
mov
movsbw
bsf
rcl
dec
mov
push
pushf
sub
jmp
mov
movb
pushl
pushf
pushf
lea
jmp
sbb
rol
cwtl
call
dec
aam
push
outsb
inc
cmp
addl
mov
movsb
pusha
dec
aam
cli
jbe
lcall
xor
fisttpll
and
jo
js
lcall
adc
cmp
lret
fwait
lock
xchg
fnstcw
addr16
adc
cmp
xor
mov
pop
outsb
int
daa
xor
test
insb
pop
mov
or
sub
out
mov
mov
dec
sti
gs
imul
gs
xor
cs
insb
add
loopne
mov
sbb
sbb
clc
jmp
fs
call
jmp
lock
cwtl
call
notb
das
fcoms
push
nop
mov
sahf
fists
cld
test
xchg
jo
test
jb
mov
cmpsb
cmp
xor
cli
push
cwtl
xor
lahf
pop
out
pop
rorb
mov
leave
add
add
test
roll
pusha
movsl
ret
pop
push
outsb
shlb
cld
es
sbb
dec
add
adc
xchg
gs
pop
and
ss
dec
add
sbb
sbb
stos
xchg
xor
jecxz
xchg
scas
and
cwtl
call
jecxz
fcmovnb
xchg
cmp
sbb
adc
push
stc
mov
addl
and
fsubrl
mov
pop
jae
scas
inc
mov
sbb
add
mov
xor
mov
add
out
les
dec
leave
push
sbb
lret
iret
movsl
popa
aad
pop
xchg
dec
fiaddl
mov
hlt
pushf
stos
dec
add
add
dec
gs
popa
addr16
outsl
js
add
in
cmp
push
sbb
add
push
inc
push
dec
xor
inc
dec
dec
add
test
add
add
xchg
pushf
test
setno
xor
pop
shld
mov
rcr
sar
add
clc
adc
mov
pushf
call
mov
call
je
sbb
lret
lock
out
test
pop
sub
mov
imul
and
cmc
push
cmp
cs
out
jge
cld
mov
icebp
aas
sarb
aaa
fiaddl
sub
daa
loope
xlat
dec
sub
or
es
jno
rolb
imul
adc
pop
push
imulb
movsb
cmp
inc
aaa
sbb
jo
stos
imul
dec
ljmp
sub
ret
push
jl
and
add
call
sub
cld
sbb
pushf
push
pushl
movl
pushl
pusha
push
movl
mov
mov
pushf
lea
jmp
lods
lock
inc
scas
jle
ljmp
add
jbe
and
inc
sbb
test
fwait
mov
sub
push
std
adc
repnz
scas
sbb
mov
push
cs
jp
insb
or
mov
mov
pop
roll
inc
test
inc
das
iret
sub
or
lea
fldt
shrl
mov
pop
mov
push
jb
dec
movsl
test
jmp
inc
dec
aad
cwtl
in
inc
loopne
test
add
in
test
lds
push
in
and
mov
pusha
mov
fbld
cmp
fsub
out
adcb
data16
sub
pop
mov
jge
loop
mov
cmc
pop
xchg
daa
dec
test
sub
mov
sub
out
and
push
les
pop
add
jnp
loop
or
xchg
das
popa
sbb
jmp
ficoms
cwtl
out
cmp
jnp
jo
adc
ja
das
ljmp
sub
push
inc
movsl
pop
shlb
movsl
lahf
fisubs
jle
cmp
and
push
addr16
and
xchg
fidivrl
xor
add
dec
mov
int
and
loope
add
mov
idiv
push
call
out
adc
cwtl
call
add
xchg
inc
jge
aam
repnz
xor
jle
and
dec
lahf
sub
adc
call
pop
mov
lcall
cmpsb
decl
out
push
rcr
or
call
adc
ss
rep
repnz
dec
icebp
hlt
xorb
push
add
xchg
data16
sbb
xchg
jecxz
filds
mov
divl
gs
icebp
repnz
repnz
ret
scas
movsb
fldenv
xor
mov
call
test
adc
pop
sbb
sbb
bound
clc
jmp
or
push
ret
cwtl
call
movsl
jg
into
xor
repz
pop
inc
jae
jl
jle
cmpsb
mov
xor
repnz
ret
or
call
xlat
arpl
pop
push
dec
dec
filds
sbb
xchg
repz
sahf
stos
adc
pop
in
int3
stos
adc
inc
jmp
std
push
xor
data16
inc
xchg
mov
inc
adc
adc
in
and
clc
mov
popaw
mov
cmp
sub
xlat
ret
movsbl
lea
call
lea
call
pushf
push
lea
jae
cmc
jmp
neg
mov
clc
cmp
pusha
cmpb
lea
jnp
jne
daa
sub
lea
or
mov
sbb
shr
ror
add
call
add
inc
gs
outsl
fs
gs
imul
add
fsubs
enter
xor
mov
into
jo
enter
aad
decl
cmpsl
sbb
lcall
pusha
lea
jmp
add
inc
js
je
jb
arpl
jae
lea
jae
pushf
call
clc
test
stc
jge
or
pusha
call
or
rcrb
je
sub
popf
ss
lds
jae
cmp
dec
sub
dec
cli
inc
push
arpl
pop
mov
mov
xchg
in
hlt
jnp
adc
aam
lahf
in
ror
xchg
les
jbe
adc
push
int3
outsl
jnp
pop
ds
data16
cwtl
call
xor
bound
inc
lahf
adc
cmp
mov
out
mov
dec
test
sub
push
inc
aaa
push
adc
adc
inc
lods
in
xchg
dec
sbb
mov
jb
xchg
mulb
cs
pushf
daa
sbb
add
lea
out
and
push
mov
sahf
ret
pop
sub
mov
aas
mov
jne
pop
mov
fmull
lcall
pop
and
sahf
inc
nop
aam
sbb
xchg
int3
push
push
dec
in
ret
jne
push
jo
mov
mov
pusha
add
call
pushf
repnz
pusha
lea
jne
jmp
int3
popf
jmp
movl
jmp
pushf
push
inc
clc
clc
cmp
cmp
mov
call
pushf
call
pushf
lea
je
cmp
add
push
push
push
lea
jmp
jmp
pushf
lea
ja
push
call
pusha
jmp
mov
adc
cwtl
call
fnstenv
outsb
loop
cld
mov
inc
call
cld
lods
aam
cmpsl
lret
loopne
cmpsb
repnz
js
pop
inc
hlt
out
xchg
adcl
sub
dec
jg
pop
inc
push
mov
ljmp
or
add
arpl
adc
dec
xor
pop
cmp
or
xchg
cmp
dec
sub
pop
xorb
cmp
add
adc
out
das
and
pop
sub
mov
pop
in
xor
inc
pop
jp
stc
outsb
inc
lahf
xor
cwtl
call
and
add
movsl
jb
add
xchg
in
movsl
in
dec
pushf
outsb
lcall
adc
sub
call
push
int
mov
aas
fwait
mov
stc
bound
dec
shrl
pop
and
cmpsb
push
mov
or
lea
add
pusha
mov
push
lea
jmp
jmp
cmp
pusha
lea
ja
dec
dec
inc
jmp
add
pusha
call
adc
mov
fmull
mov
aad
pop
add
es
or
rep
pusha
pop
rcll
sub
sub
mov
mov
push
mov
adc
xor
pop
pop
fs
add
jne
xchg
cmp
or
mov
fdiv
stc
dec
pop
lds
leave
test
push
and
xor
push
pop
inc
hlt
ret
mov
cli
jg
jae
decl
bswap
setbe
pop
bswap
mov
not
lea
push
pop
lea
pushf
pushf
push
pushf
mov
movzbw
movl
cwtl
jmp
movb
call
xor
mov
scas
cwtl
in
lret
xor
mov
inc
int3
int
aam
arpl
jge
into
out
or
sub
out
or
push
and
jbe
pushf
clc
mov
mov
or
bswap
mov
setns
mov
lea
jge
mov
lea
pop
pusha
push
pushl
ret
push
pushf
lea
jne
pusha
pusha
pushf
call
clc
add
pusha
jmp
pusha
jmp
xchg
movsb
mov
dec
cmpsb
subb
pop
push
loop
cltd
jb
shrb
push
daa
mov
mov
cltd
rcll
cwtl
jns
push
jae
fildl
mov
sub
cwtl
mov
aam
out
mov
jecxz
mov
cmp
fldcw
sbb
xchg
rclb
jb
fidivrs
dec
stc
add
daa
xor
add
jno
jmp
pushl
lea
jb
stc
jmp
mov
rol
xor
ror
bsf
add
sets
pusha
or
mov
clc
test
call
lea
je
test
pusha
add
bt
cmp
pusha
movw
lea
jb
call
mov
call
out
lods
mov
xchg
xor
pop
sbb
push
ret
sub
and
lock
adc
xor
imul
test
jae
addb
inc
shll
adc
or
sbb
testl
shrl
mov
cmpsb
sti
mov
xchg
lahf
mov
stos
les
push
jne
adc
in
ljmp
jecxz
das
sbb
je
cmp
cltd
xor
pop
push
mov
faddl
and
jae
movsbw
mov
push
lea
jmp
pushf
pushl
movl
movl
pushl
call
push
lea
jae
dec
pushf
pushf
movb
mov
pusha
dec
inc
jmp
pushf
lea
je
bt
push
sub
pushf
pushf
bt
test
cmp
pushl
lea
ja
call
mov
call
int3
les
push
aas
xchg
loopne
ficoms
pop
inc
daa
or
push
sahf
js
aas
sbb
sbb
movsb
jnp
jge
mov
loope
mov
in
clc
out
xchg
scas
lods
mov
cmp
lret
aaa
das
pop
dec
mov
ljmp
sbb
lcall
xchg
stc
fisubl
jns
repnz
pop
sarb
pop
popf
arpl
mov
mov
clc
inc
andl
sbb
mov
adc
cli
push
rcll
xchg
or
sbb
sub
sub
lds
and
lret
pop
pop
js
mov
leave
fs
inc
cmpsb
scas
adc
out
cmp
aad
sbb
pop
mov
out
jae
jmp
das
je
push
inc
xor
cmp
pop
cmpsb
adc
lods
stos
imul
nopl
lock
mov
push
ret
lods
mov
repz
call
clc
sahf
adc
pop
mov
adc
imul
push
bt
pushf
pushf
add
pusha
lea
jmp
jmp
lea
jbe
inc
cmc
mov
rol
stc
movzbw
bt
add
adc
shl
clc
lea
mov
bsr
add
add
btr
neg
movl
call
test
cmp
sub
setle
setl
cmp
sub
add
clc
clc
adc
rol
mov
add
sar
rol
pusha
mov
jmp
in
call
cmc
test
cmp
jmp
xlat
mov
mov
mov
fs
jmp
xor
scas
icebp
and
cli
jbe
mov
leave
xchg
adc
and
mov
xchg
mov
repnz
arpl
sub
out
mov
int3
test
bts
push
pushf
lea
jbe
btc
mov
xadd
add
cmc
ror
adc
or
mov
sar
push
add
bt
rcr
movl
movzbw
shr
mov
lea
jmp
jmp
mov
call
or
inc
int
nop
or
lea
stc
push
jb
jp
pop
movsl
sbb
mov
bnd
xchg
add
lcall
sub
xor
lret
icebp
add
test
jmp
daa
xor
xchg
cmp
ret
movsb
xchg
inc
mov
es
popa
mov
xchg
andb
testl
in
sub
rolb
loopne
jp
jl
xor
leave
bound
scas
icebp
mov
roll
xchg
adc
test
rolb
faddl
add
and
rcr
rcl
sbb
push
bsf
and
mov
sub
mov
movsbw
lea
pushf
push
pushf
mov
mov
pusha
jmp
call
push
lea
je
pushf
and
dec
add
bsr
sub
shl
add
shr
sub
or
lea
ror
mov
pushf
not
add
bsr
add
lea
shld
mov
clc
call
movl
jmp
inc
fsqrt
mov
call
ret
imul
mov
add
gs
out
stos
dec
rcl
inc
sbb
adc
fisubl
mov
and
in
inc
aad
or
into
push
jns
js
fistpl
into
dec
or
jg
loope
add
sbb
mov
pusha
xor
dec
sti
cmpsb
xchg
adc
adc
lods
stos
xchg
popa
icebp
pop
sub
cmp
push
xor
sbb
mov
call
gs
popl
cwtl
call
push
jge
jae
sub
lahf
in
push
mov
xchg
popa
icebp
cmp
mov
daa
cmp
inc
or
lds
popa
fstl
outsl
dec
call
add
mov
push
lret
mov
flds
in
cmp
xchg
jae
cmp
repz
aas
stos
aaa
test
push
lcall
xchg
out
jmp
jnp
cmpsl
adc
fstpt
and
shrl
repz
test
mov
cwtl
call
hlt
ljmp
mov
dec
cmpsl
lds
sbb
jnp
dec
push
sub
movsl
push
or
or
xchg
lods
jnp
ljmp
mov
push
dec
stos
xchg
sbb
setno
fnstcw
add
lcall
pusha
lods
fnstcw
inc
push
rcr
pop
xor
push
lds
and
jne
repz
jb
mov
xchg
test
and
pop
sahf
add
outsl
jnp
add
out
addr16
call
fildll
xchg
jl
fsubrl
ja
and
pop
leave
dec
xor
insl
jb
adc
mov
sub
nop
jno
scas
cmp
cmp
sahf
pop
mov
sub
mov
push
mov
add
add
test
xorl
in
mov
adc
lods
repz
jecxz
xchg
int3
mov
ja
test
dec
outsb
lods
sbb
stos
adc
mov
cmpsl
and
xchg
adc
pop
push
lods
ljmp
rcr
test
add
bsr
mov
clc
cmpb
pusha
call
pushl
pushf
pushl
popl
mov
pushf
pushf
pushf
pushl
ret
std
roll
mov
call
punpckhdq
in
lds
cmc
push
jb
mov
mov
enter
leave
add
adc
testl
les
sub
cmpsb
es
jecxz
repnz
jecxz
push
pop
sbbb
mov
sahf
cs
insb
das
push
mov
or
idivb
pop
lret
xor
mov
pop
ss
mov
and
add
repz
dec
fildll
pop
lock
cmc
push
mov
jge
xor
cmp
jmp
call
das
int3
jg
cmc
dec
mov
mov
leave
or
add
das
jo
sub
mov
push
ljmp
add
call
in
mov
pushf
lods
cs
aad
or
add
inc
pop
outsl
mov
mov
shr
js
lahf
fsts
loope
sbb
mov
fdivl
imul
lock
or
or
lcall
imul
pop
das
dec
and
cmp
push
xchg
add
jb
std
sahf
pop
sub
fdivp
fcoml
mov
adc
and
sbb
push
lret
inc
pop
mov
sbbl
push
pop
dec
lea
or
cltd
mov
pop
inc
and
loopne
ret
pop
pop
mov
jmp
scas
fdivr
sbb
mov
call
xchg
or
xor
dec
fnsave
test
lods
test
mov
adc
jae
push
adc
fidivs
sbb
mov
mov
lock
pop
add
mov
aaa
leave
mov
lret
mov
xor
data16
mov
push
cmp
sub
test
lret
add
setae
mov
bswap
lea
pushf
mov
cwtl
cwtl
call
lret
add
mov
call
inc
rcrl
jle
add
mov
into
shl
fists
std
in
adc
push
adc
mov
adc
pusha
adc
shr
mov
xchg
ret
inc
and
push
add
insb
and
mov
pop
in
add
jle
and
push
outsb
jecxz
add
jo
imul
fimull
ret
pop
cmp
hlt
push
fiaddl
pushf
jns
ljmp
cwtl
call
popf
sbb
in
inc
xor
fldt
cwtl
lds
push
jb
cwtl
dec
pop
sub
sbb
divl
loopne
inc
sbb
sub
sub
popa
movsb
movb
outsb
cmp
xor
jecxz
pop
adc
ja
cmpsb
bound
cli
adc
int3
sub
imul
out
adc
sarl
sub
loopne
ljmp
mov
xchg
movsl
ja
je
adc
subb
mov
inc
cmp
call
lea
jmp
or
xchg
fs
mov
js
stos
cmpsb
push
xchg
sbb
call
hlt
les
andb
nop
jg
xchg
jmp
out
xor
idiv
pop
js
sti
test
outsl
cmp
bswap
movsb
lcall
addl
mov
call
insb
jbe
or
dec
mov
bound
das
xchg
or
mov
movsl
dec
notl
push
negb
cmp
dec
mov
xor
aam
fwait
insb
xchg
jp
xchg
and
push
and
pushf
or
jns
dec
xchg
dec
lcall
stos
fcomip
fistpl
mov
pushf
pusha
lea
call
jmp
cmc
test
pusha
mov
shl
clc
test
shld
mov
cmp
cmp
jmp
jmp
shld
adc
rcl
mov
call
jmp
mov
call
fcoms
ja
xchg
jns
dec
pop
in
add
mov
out
pop
mov
test
pusha
xchg
xchg
and
out
shl
cmp
or
cmc
mov
jb
test
iret
cmp
adc
adc
xor
inc
bsr
not
bts
mov
cmp
pusha
push
jmp
jmp
movl
push
jmp
cld
hlt
fildll
sbb
std
or
push
inc
shlb
mov
cmpsl
test
sub
cmpb
push
adcl
mull
orb
cmp
arpl
dec
mov
jo
in
lret
sbb
xchg
cmp
xchg
and
rcrl
nop
jmp
sub
rorl
inc
ljmp
stos
iret
fisubrs
mov
pop
cwtl
cmp
aad
rcr
sbb
sbb
push
xor
cli
mov
inc
jmp
mov
mov
cs
rol
fcmovnbe
and
adc
and
ljmp
ss
cs
dec
sbb
sbb
in
or
call
fcoml
in
decb
cmc
sahf
ret
push
mov
mov
or
mov
jae
cmpsb
insb
pop
test
jp
jae
imul
mov
scas
jmp
cmpsb
js
test
mov
es
mov
mov
inc
arpl
in
ja
xor
loope
jae
ret
cmpsb
out
mov
inc
out
add
divl
pop
je
stos
cmpsb
sub
inc
add
test
xor
fisttpll
mov
mov
mull
mov
insb
push
in
mov
xchg
or
jnp
jg
cmc
es
daa
nop
ljmp
jno
push
pop
inc
stc
xchg
fadds
aad
inc
inc
and
testl
jecxz
inc
jge
lods
cwtl
call
test
xlat
add
loop
call
data16
or
sub
stc
inc
mov
pop
mov
es
cwtl
add
in
std
inc
adc
imul
arpl
lds
cwtl
stos
aam
sarw
xlat
cmp
addl
sbbb
jb
into
and
push
add
inc
jl
mov
xor
push
movsl
adc
sbb
xchg
pop
les
jp
sub
outsl
fwait
cmp
decb
sarl
scas
pop
push
xchg
clc
test
call
add
add
pushl
movl
jmp
cmc
ror
mov
call
stc
cmp
test
mov
pushf
pushf
push
lea
je
pushf
cmp
sub
push
cmp
movb
pushf
lea
ja
pushf
pusha
push
imul
test
mov
pushf
add
pushf
lea
jmp
cmp
pushf
lea
jb
pushf
cmp
jmp
mov
lods
cwtl
call
sub
mov
or
fiadds
sub
mov
rorl
mov
fucom
cmpsl
stos
push
inc
jmp
fdivs
push
jbe
push
and
rclb
stos
xor
movsbl
movzbw
setbe
push
mov
pusha
mov
mov
call
mov
sbb
test
pop
lret
or
shl
lock
sbb
sbb
add
add
push
pusha
cmp
cwtl
out
push
daa
in
and
cmpsl
pop
js
popf
mov
pop
pushf
push
in
lds
xchg
xchg
jecxz
fistps
sub
lods
and
sub
sbb
dec
data16
cmp
inc
xchg
call
mov
insl
sub
inc
pop
mov
mov
sarb
movzwl
sub
mov
push
pusha
add
push
clc
mov
cmc
clc
clc
stc
test
jmp
pushf
xor
mov
push
inc
das
add
xchg
in
das
call
dec
xor
lcall
dec
notl
int3
mov
ret
xchg
fstp
dec
xor
sbb
mov
into
sub
jne
cmc
popa
push
mov
popf
xlat
repnz
std
ficoms
and
xchg
loop
and
add
rcrb
testl
jae
sbb
js
sub
mov
js
mov
in
pusha
mov
movl
jmp
aad
stos
cwtl
call
add
xchg
adc
push
stos
sbb
insl
and
mov
pusha
rorb
inc
push
insl
hlt
je
push
out
clc
sbb
aas
jns
dec
cmp
loopne
scas
mov
aas
leave
xor
and
in
out
testb
and
lods
pusha
dec
xlat
mov
push
pusha
jmp
add
pusha
pushf
mov
lea
jmp
call
add
pop
add
add
add
add
add
add
add
push
pop
add
push
pop
add
push
pop
add
add
add
add
push
pop
add
in
sbb
mov
dec
test
mov
mov
cmp
mov
call
cmp
gs
ret
xchg
adc
popa
xchg
mov
xor
rcrb
mov
adcb
aad
int
cmpsb
jge
sti
aas
stc
xchg
sbb
scas
add
add
in
mov
and
ljmp
sub
inc
add
mov
jg
icebp
ljmp
jns
dec
out
or
mov
aaa
jnp
jecxz
push
xchg
sbb
andl
push
pop
jno
or
sub
imul
test
pop
sub
jge
ret
mov
lods
and
pop
lods
xor
pop
sbb
dec
lcall
pop
mov
adc
int
and
mov
fs
xchg
out
pop
std
out
or
cmp
enter
lods
into
xlat
insl
mov
jo,pn
mov
aas
sti
xor
movsl
jno
or
bound
dec
andb
decl
mov
or
jl
and
out
push
lds
jmp
push
out
imul
mov
mov
sbb
stc
mov
mov
fdiv
sti
pop
lcall
push
aad
outsl
out
out
jns
je
mov
mov
roll
sar
pusha
add
pop
xchg
fs
movsl
test
pushw
mov
or
or
mov
mov
cmpl
push
enter
outsl
aad
fldcw
xchg
pop
cmpsl
lods
sbbb
daa
pop
mov
push
out
test
cmpsb
xchg
in
in
daa
jecxz
jecxz
xor
jecxz
inc
fwait
push
sbb
cmc
xchg
imul
ljmp
call
cmpl
sub
cmpb
push
push
xlat
lret
push
or
test
push
sbb
xor
push
adc
mov
orb
jecxz
iret
jb
push
jns
arpl
adc
outsl
jb
aas
aas
scas
dec
mov
call
ss
pusha
lods
dec
inc
push
dec
mov
push
fisubrl
movsb
and
pop
dec
popf
insl
les
push
ljmp
jg
movsb
jb
xchg
push
dec
jb
repz
push
pop
lds
pop
rclb
adcl
jno
pop
jp
test
in
repnz
or
sub
rclb
cmp
push
aad
scas
mov
sbbl
pusha
sub
out
or
in
mov
scas
popf
xchg
cmpsb
mov
loop
push
loope
mov
cmp
jns
loop
js
xchg
xchg
ret
je
adc
jno
pop
sub
mov
sub
pusha
int
imul
jmp
mov
xor
idivb
rcrl
push
roll
cmp
and
inc
insl
pop
pop
mov
xorb
and
lahf
pop
push
xchg
data16
aad
loopne
out
and
aad
inc
inc
aas
push
add
sub
clc
mov
add
add
sbb
mov
imul
xor
imul
jno
sarl
add
dec
inc
jl
sub
push
cmp
daa
bound
addr16
cmp
rorb
add
arpl
xor
ret
xorl
icebp
lods
pushf
xchg
mov
xchg
outsl
mov
mov
or
push
add
js
or
dec
jae
test
rorb
mov
cmp
inc
jbe
insl
addr16
sti
std
icebp
and
jae
aaa
pop
mov
sbb
push
enter
xchg
push
push
inc
enter
sub
xchg
mov
into
rcll
outsl
push
sbb
fsubrs
pop
pop
xor
mov
mov
rcll
sub
mov
sub
pop
mov
jg
push
add
es
fs
and
push
adc
mov
mov
nop
insl
sbb
lea
push
aas
sbb
incb
je
repnz
sub
push
add
add
negb
jo
rclb
loope
nop
mov
xor
cmp
add
push
and
clc
cli
mov
xlat
or
xor
mov
pop
into
out
in
popa
sub
test
fbld
push
outsb
lea
push
mov
mov
test
ja
cltd
aaa
jnp
xor
loope
inc
add
cs
xchg
call
jns
xlat
pop
or
roll
inc
divb
int
outsl
in
inc
out
call
xchg
out
push
out
mov
cwtl
repz
out
daa
loope
jle
xor
call
dec
shlb
inc
cmpsb
sub
push
ret
sub
inc
push
cli
sbb
repnz
xchg
pop
int3
adc
lahf
loopne
or
mov
mov
imul
xchg
jmp
or
ja
movsb
ret
pop
pop
mov
or
sahf
sub
mov
mov
loope
add
mov
mulb
xor
push
out
leave
in
push
insb
arpl
cmp
or
cmp
in
cwtl
arpl
dec
jbe
and
bound
push
daa
ret
mov
lret
lock
mov
push
sub
frstor
mov
lahf
dec
stc
mov
and
sbb
pop
out
movsl
mov
xchg
sub
and
pxor
movsl
and
movsl
shrl
jns
jb
fiadds
daa
jb
jo
jmp
stc
adc
lock
fucomip
outsl
js
in
cli
data16
adc
scas
xor
adc
push
insb
push
cmp
pop
push
aas
stos
dec
faddp
inc
or
xchg
pop
jmp
xor
adc
push
ljmp
push
loop
xlat
push
cmc
into
aad
movb
xor
xor
xor
fiaddl
or
mov
xchg
repz
cli
ret
xor
sbb
mov
leave
add
pop
cli
stos
lret
das
inc
mov
bound
add
sub
add
repnz
dec
stc
inc
test
sbb
ret
je
das
dec
outsb
pop
lret
movsl
or
xchg
pop
stc
ja
mov
mov
dec
xor
outsl
cmp
loopne
jb
repz
and
outsl
jle
loopne
xor
mov
aas
mov
mov
cmpl
iret
stos
push
ja
xor
xchg
mov
mov
orb
fcmovb
push
xchg
mov
insb
jg
arpl
lods
add
or
xchg
push
int
ror
mov
jg
das
jp
out
fwait
sub
lods
push
lea
test
stos
shlb
icebp
adc
sbb
rcll
sbb
xor
popf
fstps
call
and
cmp
xchg
in
cltd
xchg
mov
xlat
fs
in
adc
popa
push
movsl
aad
test
cmc
popa
push
leave
jecxz
popf
dec
leave
in
sbb
jns
imul
push
jl
mov
mov
xor
pop
ret
dec
adc
out
ficoms
and
mov
seto
adc
sarl
pop
push
adc
mov
scas
std
sbb
xchg
adc
js
test
lret
sbb
out
and
imulb
lods
sub
sub
xchg
sub
int
cmp
dec
xor
arpl
adc
arpl
popl
push
dec
push
jle
mov
bound
outsb
enter
mov
pushf
inc
leave
rcl
iret
mov
sarb
cmp
sbb
add
xor
sbb
add
inc
jno
mov
and
xor
les
fwait
testl
fisubrl
movsl
insb
movsb
xor
jle
xor
dec
mov
mov
pushf
xchg
lea
movsl
pushf
mov
sub
flds
sbb
sbb
push
js
sbb
in
push
aaa
orl
leave
jle
inc
sbb
shlb
addl
cmp
push
and
icebp
mov
es
aas
fisttpll
cmp
popa
and
push
xor
stc
sbb
mov
push
cmp
add
dec
push
pusha
lret
lods
rcrl
popa
dec
and
stos
inc
fsts
and
pushf
mov
aaa
inc
adc
jl
lcall
add
sarb
in
insl
rorb
mov
jae
mov
adc
js
bound
sub
shlb
xchg
sub
sbb
mov
mov
cmp
xor
inc
lahf
sbb
cmpsl
pusha
add
inc
jae
mov
pop
aaa
push
dec
fldenv
fwait
push
dec
imul
pop
movsb
in
adc
mov
mov
sbb
jo
dec
ja
inc
jge
sahf
mov
cmp
pop
lods
daa
sbb
fmull
pop
adc
add
push
inc
icebp
mov
cmp
pop
mov
jmp
mov
enter
mov
cwtl
mov
insb
int3
bound
pusha
or
gs
and
mov
arpl
fstpl
jnp
cwtl
jle
inc
insl
incb
xor
adcl
mov
xchg
jno
and
mov
mov
mov
mov
mov
push
push
and
nop
push
inc
dec
inc
jp
dec
mov
adc
sbbb
cmp
rclb
push
cmp
mov
dec
pushf
nop
inc
js
jg
and
loopne
mov
hlt
and
int3
fwait
rolb
mov
sub
sbb
in
int3
sub
sbb
stos
fiaddl
pop
mov
pop
jl
cld
mov
inc
insl
push
gs
inc
arpl
cmpsl
insb
fdivp
fists
push
adc
xor
push
rolb
sbb
shld
aam
dec
outsl
ffree
pop
and
test
jae
sub
pop
insl
or
cmpl
push
inc
dec
jnp
repnz
pop
xor
push
js
jecxz
pop
out
sub
inc
xor
and
addr16
adc
out
add
testl
cmpsb
lods
ds
jg
ret
cmp
cmp
enter
ror
pop
rol
popf
repnz
lods
mov
insb
xchg
sub
es
mov
into
movsl
add
cmpsb
dec
adc
sbb
imul
nop
mov
jp
cmpl
imul
inc
jle
mov
mov
add
xor
pop
xchg
xlat
in
sbb
and
mov
add
dec
icebp
push
outsl
pop
jmp
inc
mov
iret
sbb
push
aam
out
stc
jbe
xorps
lods
cmpsb
outsl
mov
into
mov
push
sub
loopne
xchg
add
add
xchg
lea
rol
bt
shr
sbb
shl
add
adc
mov
cmp
xor
add
pusha
movsbw
bswap
mov
jmp
lea
call
jmp
lea
je
not
shld
sar
add
lea
jbe
cmp
mov
bt
add
je
mov
sbb
mov
cmc
pushf
cmp
pusha
cmp
call
test
sub
jmp
xchg
pusha
movl
mov
movl
mov
mov
mov
lea
jmp
jmp
xor
mov
insl
cwtl
push
std
mov
mov
jo
inc
add
jo
fwait
cmp
gs
rcll
aam
movsb
sbb
fldl
adc
dec
jo
sbb
aaa
stc
push
icebp
lea
test
add
test
imul
lea
ja
pushf
pusha
imul
test
cmp
add
push
lea
jmp
cmpsl
in
pushf
cwtl
call
divb
sbb
mov
fsts
dec
leave
jge
jo
sbb
outsb
cwtl
fbld
mov
sub
pop
test
lods
ja
ret
jmp
and
outsb
pushl
cwtl
sub
enter
push
mov
orl
sub
lcall
add
and
xchg
jg
xchg
cwtl
je
sete
jmp
lea
je
xchg
setns
setg
jmp
cmc
dec
pop
cmp
test
testl
iret
pop
inc
roll
push
in
lea
xor
adc
cmc
mov
sub
fsubs
inc
cmpl
cmp
xor
inc
xchg
cmp
jbe
out
inc
jb
inc
pop
jno
inc
testb
xchg
shll
lcall
inc
js
aas
in
inc
movsl
insl
cmc
adc
loope
pop
in
jne
sbb
les
shrl
mov
dec
cmp
outsb
dec
popa
jge
mov
inc
aaa
loop
jne
inc
stos
sbb
out
imul
je
pop
mov
push
inc
jl
cwtl
mov
dec
addr16
out
inc
mov
test
inc
mov
int3
int3
in
mov
xchg
ror
shl
stc
int
inc
dec
sub
sub
fists
sbb
push
shrb
mov
pushf
pop
fnstenv
mov
push
xchg
imul
addl
xchg
and
add
loop
or
pop
inc
adcl
and
or
popa
push
xchg
sbb
xchg
inc
xchg
movsb
dec
fwait
pop
and
leave
jae
xchg
insl
arpl
push
flds
dec
mov
and
sarl
jp
mov
lods
test
mov
mov
cli
sbbb
lea
push
sub
fcmovnbe
inc
jns
cmp
pop
mov
mov
mov
push
pop
clc
inc
add
and
xor
jns
dec
decb
fadd
cmc
dec
leave
jne
pop
arpl
inc
das
leave
cmp
addl
movsb
test
mov
cmp
xor
or
imul
jno
xchg
push
test
mov
insl
orl
xor
in
or
inc
lahf
jnp
pop
insl
out
and
push
add
and
in
cmp
and
jns
mov
inc
pop
leave
push
pop
clc
dec
sbb
sbb
orl
ret
or
xlat
pop
push
aas
and
mov
inc
mov
mov
push
dec
movsl
or
or
add
les
loope
movsl
inc
ror
push
lea
and
add
ret
pop
inc
decl
dec
mov
fildl
lret
xor
mov
inc
fldl
movsl
mov
mov
mov
jg
aaa
mov
mov
inc
pusha
dec
push
lret
fs
test
loope
cmpsl
shll
inc
dec
mov
lret
lds
aaa
fistl
xor
inc
xchg
push
inc
sub
mov
inc
leave
popl
xor
fnstsw
cltd
push
popf
xor
insl
daa
addr16
dec
mov
xchg
fstl
and
addr16
popa
lds
mov
and
lea
push
popa
shll
addr16
gs
imul
lds
jae
jg
lods
je
dec
fadd
push
dec
inc
dec
adc
das
dec
push
push
pop
leave
lds
sub
push
cmp
and
fwait
and
test
add
ds
daa
dec
sub
popf
daa
imul
lds
orl
and
les
cmp
and
movsl
andl
inc
sub
fldenv
into
sub
imul
mov
pop
aas
icebp
imul
dec
arpl
dec
inc
sub
fcoml
icebp
imul
arpl
pop
enter
cmp
xchg
sub
dec
sub
mov
xor
and
xchg
mov
pop
add
repz
les
iret
cmp
daa
xor
cmp
sarl
lods
inc
push
pop
sub
and
leave
ja
dec
mov
or
scas
ret
jge
popf
leave
pop
fsubs
dec
pop
xchg
push
test
iret
add
sbb
xor
into
je
pusha
and
ret
cltd
outsl
sub
push
add
push
mov
roll
fstps
dec
inc
dec
fdivs
cltd
xor
ja
jno
sub
test
push
pop
add
push
pop
int
lds
or
andl
outsl
rcrl
and
pop
int
lds
test
pop
fs
cmp
lds
jg
dec
faddl
or
jae
xchg
fcmovnb
insl
push
sbb
das
or
xor
and
addl
leave
xchg
lds
inc
mov
push
das
or
or
inc
xchg
or
and
popa
xchg
jae
lds
jae
xchg
sub
xchg
and
inc
pop
std
lds
or
push
lea
insl
inc
and
push
push
cmp
std
or
fwait
push
jae
pop
mov
outsl
test
sub
xchg
gs
dec
or
jg
dec
and
rol
dec
fcom
push
lds
int
lds
push
xchg
addr16
xchg
lds
jne
dec
mov
arpl
faddl
daa
subl
lahf
and
push
cmp
xor
or
and
test
fwait
and
pop
int
lds
cltd
push
popf
fsts
fsubrs
in
xchg
arpl
aaa
adc
push
arpl
inc
lea
daa
pop
xchg
int
lods
xchg
rolb
and
push
dec
in
push
fnstcw
cwtl
addr16
popf
and
dec
xor
enter
xchg
mov
arpl
clc
pop
fsts
gs
imul
pop
push
dec
popf
xchg
dec
add
dec
inc
add
mov
xor
lds
dec
leave
xchg
xchg
push
fldcw
inc
movsb
push
dec
das
rclb
test
dec
and
xchg
ja
dec
inc
push
cltd
jae
pop
das
and
jge
xchg
push
mov
outsl
cmp
xchg
ret
rcrb
rorl
fs
mov
xchg
sub
mov
push
push
mov
push
shlb
dec
js
fstl
dec
push
cmp
test
arpl
inc
jae
cmp
shlb
ror
pop
rorb
imul
insb
push
lret
cmp
mov
and
jae
pop
xor
mov
arpl
sub
std
and
movsb
push
dec
push
aad
jne
cmp
push
jae
sti
rolb
inc
into
sbb
test
inc
adc
inc
in
test
dec
xor
ja
gs
cmp
xchg
fisttpl
sbb
in
vmovmskps
push
ret
int3
push
mov
and
adc
sbb
cli
push
les
into
and
lods
pop
mov
leave
inc
pop
lds
mov
cmp
test
mov
xor
outsl
aam
xchg
gs
ds
shl
cmp
inc
xor
arpl
mov
xchg
cli
gs
jae
ds
push
jnp
and
sarl
pop
cmpl
jge
push
std
dec
ja
add
aam
stc
lahf
push
xor
aad
xor
fwait
and
jg
mov
xor
pop
imul
mov
cwtl
xchg
into
mov
cmpl
mov
and
popf
ja
push
das
pushf
shll
mov
cmp
adc
stc
insl
das
imul
arpl
popf
dec
xor
dec
fsubs
jae
xor
push
dec
faddl
jne
dec
test
shll
push
daa
dec
and
outsl
mov
pop
dec
xor
xor
inc
mov
push
cmp
test
dec
rorl
xor
adcl
rcrl
xor
cmp
mov
push
push
shrl
fwait
and
lea
add
cmp
xchg
dec
mov
cltd
inc
rcrl
push
test
enter
jae
push
rcll
pushf
inc
and
xchg
sarb
push
loopne
addb
lahf
repnz
add
lds
fs
inc
lds
and
push
inc
nop
xchg
push
and
dec
xchg
pop
xorl
mov
fldt
push
aas
rsqrtps
add
inc
sarl
mov
mov
and
cmp
jge
imul
pusha
and
and
lret
xor
movsb
pop
ret
ret
cmpsb
jge
pop
test
pop
sub
pop
sub
pop
sub
xlat
mov
pop
mov
xor
mov
lds
inc
cmp
inc
xor
mov
jnp
mov
lods
mov
and
add
cmpb
sub
mov
cmp
xchg
pop
jno
jno
add
fisttpll
dec
inc
inc
inc
aaa
inc
inc
lock
xchg
mov
cmp
addr16
fcomp
pop
push
int
lea
add
movsl
xchg
push
jge
xor
lds
mov
popa
int3
les
inc
jno
je
mov
imul
mov
dec
xor
xor
xor
lods
adcl
push
inc
dec
cmp
add
lret
lds
pop
pushf
inc
into
es
mov
mov
or
jo
pop
sub
sub
adc
sub
sub
movsl
cmp
push
xchg
sub
pop
dec
vmovntps
cmp
xor
pop
mov
push
sub
dec
shll
arpl
aaa
mov
sub
and
push
and
xor
insl
jl
ja
add
movsl
xchg
shlb
test
dec
ss
mov
shrl
pop
dec
cmp
dec
aas
icebp
push
pop
dec
push
int3
mov
orl
xor
adcl
mov
pop
cmp
sarl
ss
fmulp
inc
outsb
pusha
jnp
and
popf
mov
xor
jmp
cmc
jge
ljmp
push
pop
inc
inc
push
mov
mov
ss
sub
inc
push
subb
sub
mov
mov
mov
dec
mov
scas
mov
das
mov
push
cmp
sub
push
push
lret
mov
lds
xor
mov
inc
push
adc
dec
icebp
inc
cmp
and
or
inc
dec
lds
mov
popf
sub
inc
sub
mov
daa
addr16
xchg
mov
inc
rcl
cld
sarl
xor
push
aam
fdivrs
ret
and
roll
sbb
push
xor
fmul
sbb
mov
mov
sub
lahf
dec
test
mov
inc
mov
push
push
mov
imul
imul
sub
sub
insb
test
inc
xor
shld
dec
sbb
mov
ds
or
aaa
inc
mov
inc
add
lods
lcall
adc
xor
in
inc
scas
das
nop
xchg
push
and
adc
or
dec
pmaddwd
shlb
pusha
mov
mov
icebp
pushf
push
mov
sbb
dec
cmp
pop
inc
mov
fimuls
rclb
pop
sub
sbb
les
sbb
addr16
pop
jge
rcrl
stos
push
jg
lea
sub
clc
popf
and
mov
ja
and
xchg
jmp
jno
mov
cltd
mov
xor
mov
aam
movsl
sub
les
ss
shrl
dec
insb
es
xor
inc
aad
sub
mov
adc
adc
leave
pop
fdivs
push
faddl
pusha
push
inc
pop
rcr
jae
push
pop
andl
dec
aad
dec
mov
dec
std
jg
cmp
rcr
or
fcmove
js
sti
push
xchg
mov
inc
inc
mov
sub
dec
icebp
lret
push
inc
fsubs
imul
les
dec
xchg
cmp
and
push
and
and
das
and
xor
xor
and
ret
les
add
rcrb
test
pop
cmp
mov
lods
xchg
add
fisttpll
pop
inc
push
das
cmp
jmp
xor
arpl
dec
xchg
xor
adc
fcmovnu
push
inc
dec
and
aaa
sub
adc
daa
aam
shll
gs
sub
test
cmp
inc
int
lds
sbb
cmp
push
test
mov
bound
pop
sar
xchg
xor
inc
xor
cmpl
test
ja
push
mov
add
jbe
lea
jno
jmp
pop
add
adc
xor
out
test
jg
jl
xchg
fldl
or
sub
or
daa
cmp
jmp
push
dec
xor
out
sub
lea
and
pop
jns
or
test
cmpsl
sub
pop
inc
mov
mov
inc
imul
xchg
cltd
xchg
aaa
fldcw
test
and
jp
test
pop
sub
jne
mov
stc
mov
push
xor
cmp
frstor
js
mov
jae
shrb
sub
mov
mov
pop
test
mov
push
cmp
imull
xor
lods
or
test
xchg
xchg
dec
or
cmp
mov
mov
aaa
andb
test
xchg
push
xor
mov
xchg
aas
xchg
jns
jl
pop
xor
js
pop
ss
mov
daa
inc
mov
sub
int
xor
inc
pop
and
mov
mov
mov
xchg
push
pop
push
js
insb
push
je
mov
xor
fcomps
insl
movsl
mov
inc
cmp
and
pop
flds
cltd
inc
pop
dec
dec
xor
push
lods
shrb
mov
push
dec
xor
add
lds
add
add
sbb
jp
js
sbbl
xor
int3
cs
cmp
xor
daa
mov
mov
push
xchg
inc
pop
push
cmpsl
inc
or
inc
es
lahf
aad
jnp
scas
imulb
imul
popl
insb
inc
sub
in
jecxz
imul
subl
ds
xor
xchg
push
jp
dec
mov
push
xchg
push
xchg
push
test
jge
andl
push
cs
mov
je
and
pop
cltd
push
fldcw
inc
add
dec
pop
xchg
xchg
or
jae
and
inc
or
xchg
dec
clc
inc
inc
inc
je
xchg
sub
push
cmp
test
pushf
iret
mulb
in
pop
mov
xorl
lea
push
sub
add
adc
sub
test
das
cmpsb
or
mov
jle
mov
sub
cmp
sub
adcl
or
in
pop
sub
stos
xchg
fsubs
dec
jbe
xchg
and
es
lahf
pop
movsb
push
insl
ret
sahf
push
outsb
dec
jns
and
cwtl
push
xchg
inc
cmpsl
into
mov
and
pushf
jmp
push
adc
and
mov
dec
push
daa
cld
sub
or
cmp
mov
cs
xchg
testb
xchg
out
xchg
jg
test
dec
daa
push
daa
and
cs
xor
push
mov
das
mov
xchg
in
xchg
pop
sub
cmp
lea
mov
pop
dec
lods
ja
test
mov
push
pop
cmc
andb
test
fsubs
add
decl
addb
test
add
dec
es
mov
pushf
xchg
and
sarb
mov
ss
mov
ja
pop
lahf
inc
inc
dec
cmpsl
mov
mov
fsts
in
daa
cmp
xor
pop
mov
stos
mov
dec
nop
xor
cmp
jnp
xor
jns
xor
imul
movsl
xor
push
xchg
and
mov
dec
ror
sahf
push
jnp
push
out
inc
imul
cmpsl
xor
dec
mov
xchg
mov
inc
jg
add
movsb
and
xchg
xor
stos
xchg
test
gs
daa
xchg
pop
jbe
xchg
xor
add
scas
pop
arpl
cld
aas
inc
xchg
mov
arpl
push
push
sahf
aam
lahf
mov
test
popa
mov
cmp
stc
pop
fadds
and
jnp
dec
add
xlat
imul
scas
pop
daa
sub
test
xor
cltd
push
xchg
cmp
mov
pop
mov
add
loope
scas
mov
dec
xor
mov
cmp
leave
fistps
xchg
inc
push
fldl
test
js
and
leave
mov
nop
rcll
dec
cmp
daa
sub
and
sub
cmp
jae
into
mov
lods
cmp
xor
sub
push
sub
push
frstor
pushf
inc
sub
dec
jb
enter
arpl
push
xlat
or
cmp
dec
pop
adc
mov
push
lods
repz
push
rcll
test
das
and
rorl
mov
mov
mov
ret
push
cs
mov
sub
imul
lods
mov
xchg
pop
mov
cmp
test
hlt
mov
repz
xchg
test
dec
mul
adc
std
adc
sbb
mov
bound
or
sub
insl
jge
push
int
lcall
aaa
cwtl
inc
cmp
mov
andl
daa
add
scas
pop
push
push
xchg
dec
pop
dec
xorl
pop
pop
push
and
pop
sahf
mov
sub
aaa
shrl
push
push
and
add
lret
push
push
mov
push
dec
and
cmp
cmp
daa
das
outsl
dec
sub
or
icebp
dec
inc
dec
lock
dec
imul
cmc
jb
std
sub
dec
mov
xchg
aad
inc
pop
fstpl
loop
push
and
movsl
imul
inc
sub
popf
sub
mov
inc
xor
aaa
outsl
in
sub
lock
dec
das
cmp
in
aad
pop
pop
je
push
int3
jae
pop
and
repnz
and
add
push
in
addr16
sbb
inc
inc
xchg
jecxz
fwait
mov
add
jne
mov
inc
xchg
jne
icebp
sub
imul
pushf
stos
jne
inc
aaa
lods
outsl
push
pop
inc
mov
jno
aad
andl
inc
mov
mov
insl
andl
inc
and
xchg
imul
push
add
xor
popa
loop
dec
fwait
mov
cltd
adc
xchg
mov
and
imul
or
cwtl
jae
jno
imul
pop
dec
fwait
repnz
jb
sub
outsl
gs
addr16
lods
imul
push
daa
fistl
dec
pop
add
aas
mov
stc
cmpsl
jns
mov
cmp
pop
xchg
or
pop
mov
jne
inc
int3
imul
loope
out
fwait
mov
xchg
xor
outsb
int
adc
lods
push
xchg
mov
xchg
push
lock
pop
inc
xor
push
repz
push
inc
adc
frstor
inc
pop
pop
dec
jg
test
mov
pop
popa
sub
push
xchg
jge
es
push
pop
push
push
mov
add
lock
and
xchg
sub
push
cmp
sub
stos
mov
popf
cmp
pop
sub
addr16
adc
inc
sub
outsb
aad
adc
imul
push
xchg
test
and
dec
fdivrs
fwait
inc
add
xchg
mov
or
xor
dec
cmp
push
icebp
adc
xchg
push
lahf
push
mov
pop
iret
push
push
daa
insb
insb
mov
and
adc
sbbb
imul
insl
jno
xor
mov
mov
jae
push
outsl
jmp
jno
sbb
xchg
or
adc
imul
imul
push
popa
mov
xchg
jnp
mov
adc
bound
lahf
sub
lea
subb
aad
cmp
push
push
push
adc
pop
dec
xor
jo
in
jo
stc
mov
decl
cmp
inc
sar
inc
dec
dec
leave
jle
mov
movl
int
icebp
into
lahf
enter
pop
sar
addb
add
pop
inc
xchg
add
inc
inc
pop
add
jmp
and
dec
pushl
int
jp
loop
subl
aam
in
cmp
sub
or
inc
into
or
test
mov
inc
push
shr
dec
movl
inc
adc
xorl
jne
ret
add
inc
xlat
xorl
cmp
xor
dec
cmp
nop
andl
jp
lret
push
mov
iret
push
leave
ret
enter
jo
or
xchg
mov
orl
mov
aam
roll
xchg
sahf
popa
les
mov
jae
adc
jg
jmp
loopne
repz
orb
mov
and
push
in
ret
mov
xchg
andl
ja
dec
add
lret
dec
cmpb
std
test
sbbl
aam
mov
mov
dec
ret
orb
ljmp
rorl
mov
les
inc
loopne
jecxz
mov
push
int
cs
sbbb
add
inc
add
rclb
cmp
lret
orb
lret
xchg
mov
out
popf
lea
test
jp
xchg
inc
add
outsb
dec
pop
xchg
mov
push
dec
pusha
wbinvd
add
out
mov
into
test
ret
lret
xchg
or
pop
xchg
mov
jle
sbb
mov
dec
mov
loop
enter
xorl
rol
push
ffreep
ret
pop
inc
inc
iret
add
add
lods
arpl
add
mov
xchg
dec
inc
or
inc
idivl
sahf
cmp
leave
or
xchg
xor
leave
inc
mov
push
shrb
xchg
mov
enter
dec
or
add
int
addb
mov
inc
cmp
pop
test
mov
aad
and
inc
aad
out
xchg
lea
or
inc
inc
shl
fisttps
leave
aam
pop
int
dec
dec
sub
xchg
ret
push
ror
arpl
mov
cmpsl
mov
aad
adc
inc
dec
pop
mov
lds
faddl
shll
mov
dec
inc
mov
imul
mov
int
add
mov
adc
lret
inc
sbb
mov
sarb
cmp
maskmovq
testl
inc
stos
adc
rol
push
cmpsl
adc
jmp
or
popa
pop
lahf
ret
or
incb
mov
mov
pop
mov
mov
xchg
mov
nop
inc
test
popa
sti
adcb
loope
iret
pop
mov
inc
scas
ds
xchg
loope
pop
fdivl
orb
test
pop
pop
hlt
inc
pop
mov
jno
and
pusha
incb
cmp
int
pop
jnp
xchg
push
dec
add
pop
shll
mov
sbb
les
int
in
inc
in
sub
sub
insb
sbb
mov
xchg
jp
pop
push
dec
lods
clc
cmp
adc
fistps
add
push
dec
add
mov
mov
leave
sbb
ret
lds
adcl
mov
or
outsb
rorb
iret
fcmovb
add
inc
push
lret
xchg
test
pusha
jb
movsl
add
pop
stc
xor
inc
jo
mov
or
shrb
leave
int
inc
je
sahf
and
inc
lock
sub
data16
rorl
xchg
push
test
sbbl
inc
rolb
xchg
test
or
imul
xor
in
cmp
pop
pop
inc
test
lds
jp
mov
int
popf
jno
xchg
sbb
pusha
sbb
adc
pop
pop
adc
adc
xor
adc
sbb
sbbb
gs
imul
or
cmp
aas
or
mov
dec
sbb
int
dec
push
mov
ljmp
dec
push
jp
mov
mov
insl
xlat
inc
or
inc
inc
out
xlat
jb
or
mov
pop
mov
test
pusha
iret
xor
xchg
dec
int
inc
aam
add
or
jecxz
ljmp
mov
enter
cwtl
mov
sar
adc
insb
outsl
jno
inc
inc
or
ficoms
mov
inc
jecxz
add
fsubl
dec
add
jecxz
in
push
inc
in
xchg
jg
xor
mov
add
mov
inc
outsl
inc
sub
aad
xchg
push
push
adc
outsb
push
jg
lcall
xchg
push
outsb
imul
test
jo
or
dec
popf
movsl
test
mov
mov
xchg
js
dec
inc
jl
rcll
jp
add
in
push
or
dec
add
lods
xchg
and
xchg
dec
adc
push
push
jg
sbb
sbb
ret
add
or
mov
xchg
or
repnz
xchg
and
imul
std
jns
pop
add
inc
popf
inc
daa
push
jle
xchg
movb
dec
mov
test
add
adc
dec
iret
push
ret
push
inc
lret
inc
popa
xchg
inc
aam
jb
cmc
xor
mov
inc
dec
aad
jp
add
xor
movsl
aaa
iret
mov
ret
adcl
and
loop
int
xchg
mov
sbb
ret
cmc
test
inc
mov
add
adc
inc
sarb
inc
dec
mov
nop
mov
std
push
repz
icebp
dec
add
sub
int
cmpl
test
adc
and
inc
movl
sbb
inc
cltd
inc
iret
add
jns
dec
jae
nop
sbbb
shll
adc
mov
insl
mov
sub
jmp
in
push
and
mov
iret
fs
jno
test
jl
adc
add
lea
dec
das
mov
in
cli
test
out
or
xchg
inc
scas
push
mov
xchg
adc
cmc
mov
inc
inc
mov
pop
stc
push
js
shlb
push
or
dec
dec
iret
add
push
sub
dec
jnp
inc
stos
or
daa
enter
mov
ja
andl
or
pop
sbb
inc
jbe
inc
add
fs
addl
dec
mov
inc
xor
add
aas
int
movsb
push
pop
jp
push
inc
das
dec
add
addl
sub
or
inc
jmp
jg
jmp
mov
add
orl
lods
enter
push
xchg
or
insl
lret
jne
pop
lret
push
in
xor
dec
mov
leave
lock
test
popf
xor
or
pop
fcmovne
inc
lds
cmp
or
xchg
popf
ret
cmp
nop
iret
insl
lret
and
setge
inc
xchg
inc
int
xchg
adc
adc
mov
jne
and
dec
push
mov
push
or
shl
and
add
cmp
es
flds
xchg
lcall
cld
push
sub
xchg
aam
and
icebp
xchg
leave
push
fstps
adc
mov
lods
xchg
cmp
push
cli
mov
movsl
arpl
push
sbb
adc
arpl
sbb
pop
in
arpl
subl
push
or
int
lret
jno
pushf
cltd
dec
ret
mov
xchg
mov
int
mov
pop
adc
lahf
sbb
inc
inc
sahf
js
les
xchg
jns,pn
pop
arpl
fs
push
test
enter
add
adcl
test
subl
pop
add
arpl
mov
inc
outsl
pop
andl
xor
mov
push
std
inc
dec
lret
or
mov
ja
mov
cli
insb
xchg
ljmp
dec
cmp
mov
lret
fmulp
mov
iret
jle
or
xchg
lcall
sub
sbb
push
cs
insl
lret
dec
or
push
inc
pop
inc
int3
mov
nop
pop
sbb
xchg
loope
int
pusha
add
xor
pop
jns
inc
xchg
mov
pushf
cmp
push
ret
push
daa
divl
aas
or
pop
imul
jmp
dec
mov
test
fsubrl
test
inc
add
mov
pusha
lds
mov
decl
or
jecxz
xor
repz
push
rolb
xchg
ds
or
xchg
das
sbb
jae
mov
pop
jg
push
test
int3
js
icebp
sbb
lds
jbe
subl
sub
lea
leave
pop
pop
xor
mov
lods
outsl
lods
xchg
mov
popf
mov
arpl
movsb
adc
int3
or
decl
ficompl
xorl
or
dec
push
dec
ret
pop
scas
pusha
pop
shll
out
push
sti
sbbl
shrb
pop
pop
cs
lahf
pop
lds
or
ljmp
or
lret
inc
pop
sbbl
shll
mov
fwait
sub
aaa
xlat
lcall
loope
movsb
lods
mov
push
or
xchg
cmpsl
jg
xchg
inc
js
in
cs
lret
xchg
and
jl
xchg
bnd
rcr
gs
or
or
dec
xchg
push
jbe
cmp
push
mov
rol
adc
xchg
movsl
imul
mov
aam
push
lea
cwtl
sarb
cmpsl
push
or
adc
dec
add
int
shrl
or
inc
cmpsb
js
cmp
inc
rorb
sub
ja
add
aam
sbbl
sar
outsb
cmc
pop
clc
repnz
dec
mov
std
mov
rorl
add
mov
leave
or
cmp
cmc
cmp
shrl
inc
push
iret
cmp
test
mov
jecxz
into
add
pop
flds
into
xorl
jle
sbb
into
xorl
add
inc
inc
inc
pusha
add
fidivrs
sarl
test
dec
jp
vmread
pop
mov
mov
pusha
scas
sbb
loopne
loopne
add
mov
cmp
add
inc
into
in
add
stc
jo
dec
addb
and
dec
jg
subl
dec
cmpl
ret
jg
dec
jle
dec
std
loopne
mov
into
mov
inc
ret
pop
mov
or
popa
dec
shl
ja
pop
push
adc
movsb
scas
mov
cmpl
jno
gs
divb
loopne
daa
fnstsw
sahf
jns
mov
xor
jle
fnstenv
or
and
insl
dec
cmp
xor
fcmove
pop
push
into
and
xor
movsl
jge
fs
mov
cmpsb
xchg
shll
aad
inc
arpl
adcl
shlb
test
aad
mov
or
rorb
xor
or
mov
clc
push
xor
jg
outsb
adc
sbb
dec
jg
cli
movsl
dec
inc
imul
fidivs
xor
jnp
rcll
fdivl
lods
adc
dec
popa
mov
rorl
jge
fwait
addl
dec
aas
sbb
ret
mov
dec
jle
xchg
dec
mov
test
jg
orl
lcall
push
jne
dec
xchg
fsub
push
jno
inc
cmpsl
repnz
add
inc
mov
dec
mov
leave
add
movsl
dec
push
lret
loopne
adc
jle
xchg
jg
andb
push
jno
stc
imul
popa
shl
dec
icebp
and
addl
jecxz
pop
into
inc
je
dec
xor
mov
orl
xor
jns
add
and
xor
add
fadd
mov
stos
rorb
cmp
shrl
mov
out
cmp
or
and
dec
sahf
and
mov
testl
mov
cli
lret
dec
sarl
cmp
dec
rcll
jb
push
out
rol
sbb
dec
outsl
jle
xchg
dec
jmp
jg
les
cmp
gs
into
sbb
in
nop
dec
and
loope
icebp
int
in
xchg
xchg
dec
mov
aad
rcll
dec
xor
or
into
dec
jno
orl
out
sub
mov
ja
inc
mov
add
xchg
mov
xchg
add
popa
mov
jno
icebp
fidivs
jnp
rcr
cmpsl
mov
and
jg
jae
ja
jnp
mov
enter
mov
inc
inc
lock
dec
inc
xor
dec
dec
or
dec
pop
test
mov
jmp
jae
into
jo
jno
lock
and
sub
jl
jns
xchg
iret
push
push
fstl
loop
dec
dec
lcall
scas
movsl
and
loop
push
repnz
pop
dec
or
repnz
mov
dec
add
inc
push
pop
xor
loop
push
addl
scas
lock
imul
jmp
int3
fstpl
dec
imul
pop
in
or
call
dec
rcl
adc
std
sbb
sub
push
cmc
push
push
insl
add
sbb
inc
int
and
imul
insl
sub
mov
pop
fstpt
sub
fdivp
dec
mov
pop
inc
test
and
jmp
ljmp
add
mov
push
addr16
jmp
leave
insl
push
xor
imul
jmp
lock
fcomps
pop
and
sbb
aad
push
popf
insl
sar
cwtl
or
jg
xlat
mov
push
mov
jl
imul
adc
fldenv
mov
mov
pop
or
rcl
push
mov
inc
push
inc
mov
push
push
test
push
addr16
push
cld
nop
and
and
pop
dec
xchg
push
mov
mov
fisubs
cmp
fcomps
inc
push
inc
jae
mov
push
xchg
inc
psrlw
inc
outsl
cmc
lods
int3
aam
insl
xchg
pop
or
inc
popf
and
or
xchg
andl
arpl
jecxz
fadds
push
test
stc
xchg
out
pop
pop
mov
enter
xchg
or
sbb
dec
pop
fistps
and
lahf
imul
push
jne
mov
sub
fs
sub
mov
jg
push
push
lock
mov
psraw
hlt
mov
lock
pop
or
mov
xorl
test
xchg
pop
fsubs
or
xchg
cmp
xchg
ds
gs
sub
aaa
add
dec
inc
jg
les
mov
imul
imul
and
mov
inc
popl
xor
cmp
sub
sub
add
pop
sub
sub
push
adcb
dec
sub
sub
push
sub
push
and
mov
and
aad
adc
inc
lds
dec
andb
and
jno
xchg
cwtl
mov
xor
mov
mov
rolb
mov
pop
popa
sbb
push
push
repnz
sub
stos
and
inc
dec
mov
pop
fistpl
enter
jl
iret
lahf
scas
jno
enter
test
repnz
mov
mov
sahf
aad
ficoml
xchg
jb
ret
xor
leave
test
push
inc
rclb
push
sbb
dec
movsl
into
movsl
lret
mov
pusha
je
mov
push
imul
add
dec
movsl
lret
jmp
lret
push
sbb
inc
js
pushf
sub
mov
ret
jle
sarb
push
out
mov
adc
inc
inc
loopne
pop
pop
loop
lds
or
aam
pop
jle
clc
icebp
outsb
into
jo
sub
jge
clc
cmp
fdivp
jb
mov
cmp
imul
adc
inc
out
out
popa
mov
out
add
mov
or
stc
stc
fistps
test
inc
mov
xchg
movsb
dec
xor
call
or
xchg
movsl
xor
arpl
xor
mov
xor
push
dec
in
pop
orl
adc
push
data16
das
stos
pop
fcoms
xchg
ljmp
leave
xor
jmp
push
fcomps
cmp
dec
test
cmpl
sub
xchg
inc
mov
and
jne
rcr
dec
inc
inc
mov
ret
inc
or
or
pop
jnp
stos
das
aam
das
xlat
xchg
orb
das
cli
fs
leave
aaa
xor
inc
inc
test
xor
cmp
das
sti
incb
xor
mov
rcrb
or
xchg
jp
leave
enter
pop
aaa
inc
inc
jnp
xor
sub
cwtl
xchg
fadd
push
pop
inc
daa
and
xchg
sub
cmp
andl
dec
cmp
scas
arpl
inc
xor
mov
jae
cmp
cli
dec
testb
or
cltd
data16
dec
push
lret
aaa
jae
aas
lret
mov
xchg
aaa
and
pushf
popf
mov
dec
int
xor
das
cmp
dec
push
imul
dec
adc
push
pop
sbb
aam
popf
mov
jbe
jae
mov
das
cmp
jmp
mov
dec
push
cmp
xchg
aaa
and
push
popf
cld
rorb
jbe
fs
das
mov
cmp
jae
jno
xchg
sub
rorb
dec
dec
xor
push
jg
jae
cmp
sub
inc
sbb
aas
push
sub
inc
xchg
lds
pop
rorb
push
dec
int3
fadd
dec
xchg
adc
dec
lret
inc
dec
pop
dec
stos
loope
mov
aam
enter
mov
or
pop
inc
cmpsl
dec
mov
lds
roll
lret
in
ds
lds
inc
cld
push
jge
inc
out
push
cli
and
inc
loopne
fisttpll
clc
mov
xchg
pop
scas
push
xor
rol
xchg
testb
movsl
jo
pop
shrl
es
add
sub
mov
jmp
sub
jmp
aaa
dec
icebp
xchg
dec
dec
rol
cs
dec
push
and
adc
popa
not
sub
aad
sub
jge
pop
out
jmp
mov
call
jg
adc
dec
rcl
dec
push
pop
insl
sar
inc
imul
add
adc
outsb
push
lds
sub
adc
cli
rol
lea
shrl
jno
jle
jo
pop
pop
int
pop
stos
into
fs
add
shll
popa
testb
pop
jmp
pushl
leave
arpl
fisubs
xchg
cmc
ja
jecxz
push
xlat
out
and
pop
sub
adc
push
xchg
dec
inc
or
aas
popa
mov
xor
gs
mov
popf
rcrb
and
mov
mov
das
push
push
sar
and
mov
pop
mov
push
and
arpl
jecxz
movsl
imul
ret
inc
in
repnz
incb
shlb
out
lds
loop
shl
in
push
addr16
or
inc
popf
ljmp
ret
iret
mov
test
popa
cmp
pop
in
roll
stos
add
movsl
inc
rcrb
jno
cltd
sub
pop
adc
shr
jmp
jae
pop
and
lahf
push
xor
mov
and
pop
movl
or
pop
inc
adc
test
cltd
dec
aad
ljmp
daa
shr
cmp
sbb
xchg
daa
fwait
inc
jb
jmp
jg
arpl
mov
sub
jo
push
lahf
cmpsb
out
push
shll
push
jge
jo
inc
xchg
jns
mov
and
ret
xchg
popa
cmp
cltd
add
pop
rcr
cs
dec
push
xchg
and
sahf
addr16
stc
or
push
or
mov
cmpb
jne
mov
ret
call
shll
in
das
shl
pop
rcrb
or
cmp
fldt
dec
cmpsl
decb
mov
pop
and
das
dec
hlt
xchg
xchg
sbb
mov
outsb
add
push
cmpl
roll
jle
push
push
into
add
int
mov
xchg
shll
pop
fwait
adc
pop
sub
test
inc
fwait
sub
icebp
lods
and
loop
mov
addb
and
add
pop
dec
jmp
shlb
jno
or
dec
imul
sahf
xchg
jno
jge
push
test
mov
aas
lods
sbb
xor
jecxz
xor
aas
sub
xor
outsl
lock
dec
push
insb
inc
cmp
inc
adc
jno
jo
daa
ret
addr16
in
leave
fcoms
cmpsl
stc
xor
sbb
xor
rcrl
daa
dec
and
mov
subl
mov
xchg
xchg
sub
stos
add
jmp
cmpxchg
cltd
lods
ss
mov
inc
mov
ljmp
sub
or
xlat
cmp
mov
mov
in
xlat
xor
or
imul
in
bound
outsl
insl
add
in
sbb
and
sbb
aas
dec
mov
push
cmpsl
mov
pop
lahf
inc
mov
pusha
sub
adc
test
imul
mov
inc
pop
ljmp
insb
mov
sbb
push
pushf
shrl
mov
movsl
cmp
adcl
push
inc
ljmp
incb
jmp
popa
mov
or
xchg
sbb
xchg
pop
dec
icebp
nop
jae
xor
adc
imul
shlb
scas
push
outsb
inc
sbb
lds
inc
mov
push
out
addr16
push
push
addr16
jno
arpl
xchg
outsb
dec
sahf
dec
push
scas
fsubrs
mov
out
mov
sti
orl
jg
or
push
addr16
push
ljmp
lahf
mov
repz
movsl
cmp
push
jno
in
lret
xchg
ja
aas
xor
inc
push
insl
xchg
out
into
jecxz
stos
and
sub
test
pop
dec
mov
mov
push
arpl
pop
int
lds
addl
jg
inc
int3
shlb
xchg
push
lds
dec
ljmp
jb
xor
or
out
mov
sbb
outsl
add
outsl
lds
ret
jns
and
cmp
pop
dec
jg
test
mov
out
push
xchg
sub
jmp
das
mov
adc
call
aaa
lods
imul
cmc
push
leave
mov
adc
push
mov
inc
add
movsb
rcrb
add
lds
mov
sub
jo
daa
ret
sub
popa
not
jns
cmp
rclb
arpl
js
mov
ret
aas
insl
adc
sub
call
sub
das
xor
add
aas
xlat
inc
je
in
adc
lds
jno
das
lds
or
rol
aam
mov
inc
sti
jg
enter
cmp
jns
mov
ljmp
inc
jne
popa
pop
inc
imul
std
lea
and
imul
cwtl
inc
and
push
pop
pop
push
int
cmc
pop
xchg
ja
cmpsl
dec
pop
push
lds
arpl
popa
xchg
jmp
pop
les
cmp
push
jno
push
lret
insl
jge
dec
ljmp
daa
sub
mov
nop
lahf
and
inc
in
mov
icebp
rcrb
dec
inc
cmp
lea
loope
sub
fisubrs
sub
sub
notl
imul
push
cmp
lahf
push
push
inc
dec
dec
push
jns
mov
leave
bound
inc
inc
xchg
lock
xor
outsl
lea
movups
pop
lret
imul
dec
loope
daa
jo
roll
int
ss
lods
popa
outsl
shrl
adc
insb
pop
outsl
repz
and
jle
fmul
mov
lahf
sub
nop
mov
out
imul
inc
adc
cmp
jne
push
jecxz
jno
sub
pop
jns
popf
xchg
push
in
gs
lcall
cmpsl
gs
sub
push
daa
xlat
sub
xor
mov
or
mov
add
jno
dec
rcll
pop
rorb
sub
jle
ja
mov
dec
aad
mov
imul
fwait
jns
and
scas
out
dec
insb
fwait
sub
xchg
sbb
ja
mov
bound
jne
push
arpl
call
push
popf
jbe
push
imul
jmp
xor
mov
push
inc
lret
in
xchg
jmp
mov
outsl
push
test
push
sub
daa
mov
aad
lret
push
ljmp
and
inc
mov
dec
push
andl
repz
jmp
les
cmc
mov
mov
mov
popa
pop
imul
in
mov
jg
jno
mov
pop
rorb
test
push
in
sub
push
and
push
jg
adc
sbb
popa
outsb
push
movsl
jae
sub
pop
inc
sbb
cmp
adc
sub
std
xor
inc
nop
addr16
dec
mov
xchg
dec
aas
mov
jge
hlt
add
pop
lea
icebp
inc
test
fs
in
outsl
push
insl
cmp
mov
push
jno
jg
pop
movsb
mov
outsl
push
xchg
and
call
xor
mov
xchg
xor
mov
and
xchg
in
inc
pushf
sub
daa
push
cltd
push
mov
jle
test
push
push
xchg
push
arpl
imul
xor
incb
arpl
and
mov
inc
cmpsl
adc
pusha
mov
aas
movsb
inc
rolb
insb
push
movsl
imul
ljmp
sub
lahf
bound
jmp
cltd
pop
mov
cltd
xchg
pop
push
inc
call
popf
push
ja
jne
mov
and
movsb
arpl
in
testl
bound
sub
cmp
jno
test
and
jle
sub
test
push
mov
dec
push
and
cs
add
inc
shll
add
or
push
push
push
adc
imul
rclb
mov
aad
and
data16
rcr
mov
not
pop
push
and
inc
icebp
sbbl
inc
xorl
xchg
int
and
add
dec
dec
push
jmp
sbb
lahf
mov
cmp
popl
lds
jns
dec
out
popf
dec
dec
imul
lea
lods
xchg
loopne
cmp
push
xchg
push
mov
mov
and
and
dec
lods
and
jo
push
int3
and
cmpsl
sub
mov
dec
movsl
mov
mov
push
pop
or
cmp
mov
lds
in
sub
jg
add
fcom
lret
jge
sub
xchg
xor
push
cld
mov
add
add
cmp
dec
adc
pop
enter
icebp
rcrb
cs
push
jge
push
pusha
cmp
xchg
pop
inc
jg
shl
shrb
test
sti
and
inc
ja
dec
sbb
mov
subb
push
jp
mov
test
xor
jns
inc
xchg
das
push
push
and
push
adc
cmp
cmp
fimuls
dec
mov
mov
push
inc
dec
dec
add
inc
js
dec
std
dec
fiaddl
jle
xor
xlat
dec
adc
dec
cmp
and
das
add
mov
push
xchg
cmp
popf
cmp
popa
out
popa
movsl
and
dec
aaa
imul
xchg
daa
insb
xchg
dec
push
jle
mov
pop
push
insl
sbb
jmpw
rcrl
cmc
cltd
inc
push
sahf
dec
xchg
dec
out
test
adc
cmp
inc
xor
push
jae
das
dec
cmovge
mov
xor
outsb
add
xrelease
push
movsl
and
scas
push
lea
pusha
inc
pusha
js
or
xchg
cs
push
pop
mov
push
add
fwait
or
in
outsl
sub
sub
adc
dec
lea
jmp
int3
int
lea
xchg
jle
ja
push
cmp
loope
in
jge
cmp
and
and
xchg
dec
and
roll
dec
dec
add
jg
pop
hlt
add
ljmp
insb
xchg
inc
pop
xchg
xlat
rclb
mov
int
int
push
inc
and
iret
inc
pop
inc
or
or
push
dec
sub
add
mov
mov
scas
add
xchg
cmp
pop
pop
mov
arpl
jns
insb
mov
test
mov
popl
and
xchg
in
hlt
icebp
xchg
mull
or
inc
movsb
xor
movsl
push
fnstcw
mov
inc
or
rcll
imul
mov
movsl
cmpl
fisttps
lods
rclb
add
and
jmp
xlat
cmp
mov
out
mov
sbb
stos
lea
das
push
loopne
ljmp
popf
je
dec
adc
jb
adc
scas
fildl
out
mov
pop
daa
xchg
inc
sub
shrb
cmp
xor
test
orb
popf
cmp
xor
sub
mov
push
and
cmp
or
mov
sahf
mov
sub
mov
lods
inc
dec
push
shrl
aas
pop
leave
mov
in
testl
xchg
out
pop
xchg
aad
rcrl
cltd
jge
cli
xor
push
in
call
adc
test
aas
in
cmp
sbb
pop
shll
bound
push
addr16
faddl
or
std
mov
sbb
jne
pop
je
push
push
adc
push
les
roll
arpl
mov
arpl
or
roll
sub
push
ja
push
inc
addr16
outsl
out
fwait
pop
mov
push
inc
xor
mov
popa
subl
push
movsl
jge
push
pushl
mov
push
ficomps
outsl
testl
mov
ret
sub
cmc
ljmp
popf
jmp
pop
aam
sbb
and
inc
xor
adc
loope
ret
mov
imul
cmpb
aas
dec
inc
inc
fstpl
xchg
sbb
outsl
mov
xchg
ret
mov
push
dec
push
jge
mov
dec
mov
icebp
and
lods
popa
repz
addr16
popa
insb
inc
ret
pop
push
push
and
in
dec
add
daa
out
xchg
mov
mov
ret
jno
mov
xchg
std
clc
xor
out
xchg
dec
adc
push
push
stc
xor
insb
cmp
xchg
popf
movsl
aaa
cmpsb
inc
xchg
adc
repz
xor
cmpsb
rcrl
fdivrl
xchg
and
cmpsb
in
bound
cmp
dec
subl
mov
ja
mov
in
mov
and
xchg
pop
aad
std
xchg
sub
and
dec
add
push
in
imulb
or
notl
sub
adc
xchg
rol
pop
add
sti
and
lock
dec
lock
or
lds
scas
lea
xchg
mov
jg
inc
xchg
push
add
nop
mov
pusha
sub
sbb
rol
fwait
lret
insl
in
mov
cmpsb
sbb
inc
imul
xor
popa
sub
test
pop
or
jns
test
inc
ror
inc
cmpsb
bound
xchg
fwait
jl
movsl
jle
push
jp
mov
pop
cmpsl
cmp
outsl
inc
push
aaa
dec
and
in
lahf
pop
cmp
popa
movsb
dec
pop
cmp
aam
dec
inc
cmp
adc
pop
mov
insb
js
cwtl
pop
out
sbb
shr
iret
or
pop
in
mov
rcrl
dec
sub
imul
lds
das
adc
fwait
cs
cmp
outsl
sahf
sub
stos
adc
inc
lret
jge
jge
lret
hlt
test
jns
insl
sub
lds
mov
adc
call
outsl
dec
movsl
jo
cmp
aad
stos
mov
jg
push
pusha
dec
out
in
sahf
pop
imul
inc
xchg
shrl
pop
jmp
xchg
pop
dec
xor
sbb
in
test
adc
arpl
imul
adc
aad
popa
ljmp
and
outsl
movsb
pop
loopne
movsl
xchg
leave
inc
aas
jmp
pusha
aas
mov
repnz
sar
or
jb
mov
fmulp
enter
jno
inc
jg
pop
jle
and
and
pop
inc
pop
inc
jno
or
rolb
cmc
cli
repnz
xor
jge
lock
dec
push
jns
jne
fs
mov
pop
pop
inc
out
push
push
jns
test
add
inc
xor
jle
dec
and
jb
loopne
cmpsb
sbb
shr
es
jb
and
jns
jno
mov
mov
xchg
dec
bnd
jnp
and
mov
dec
cld
dec
dec
adc
popa
ret
lock
mov
roll
mulb
dec
xchg
test
lcall
jo
dec
loopne,pt
inc
mov
test
lcall
lret
imul
das
xchg
fwait
lds
imul
push
xchg
push
sub
dec
jmp
jge
xlat
or
push
push
mov
sub
xchg
js
jnp
sub
out
cmpl
loope
inc
addr16
pop
pushf
jecxz
sub
popa
or
lahf
shll
ss
push
dec
cs
cmp
mov
push
lret
jge
sub
inc
es
pusha
lea
cmp
push
or
test
inc
jo
push
movsl
js
pextrw
pop
mov
shll
xor
imul
xor
jge
shl
sub
push
dec
sub
subl
jo
aas
xchg
pop
push
jmp
leave
and
adc
inc
jle
pop
stos
xchg
movsl
inc
out
xchg
cmpsb
imul
cmp
mov
jge
movsb
pusha
jae
test
in
not
imul
lds
das
or
or
xor
cwtl
jne
out
mov
jne
cmpsb
shll
orl
xchg
xor
cmp
push
das
ds
jge
xor
test
das
pop
cs
das
movsb
mov
lds
push
movnti
sbb
push
vmovddup
sub
jae
add
jge
int
mov
add
insl
add
xor
pop
push
insb
pop
push
pop
data16
adc
adc
out
xor
jmp
imul
pushf
insl
mov
loope
fs
inc
jbe
sub
and
pop
adc
shrb
push
xchg
and
mov
inc
adc
cmp
jno
les
insl
subl
shlb
adcl
gs
pop
cmpsb
or
movsl
xchg
jno
add
push
popa
orl
mov
ret
xor
out
pop
dec
xchg
cmpsl
aas
jl
push
xor
movsl
xchg
mov
and
dec
or
gs
and
incb
pop
dec
movsb
icebp
and
popf
xor
dec
jge
xchg
mov
adc
push
outsl
inc
lds
jg
loopne
mov
or
popa
or
pop
pop
cmp
jno
inc
and
sub
mov
cmpl
push
cmp
flds
xchg
mov
jns
xor
and
push
call
jge
outsl
stos
or
jmp
test
jo
mov
or
arpl
ficoml
in
and
pop
outsl
sarb
test
pop
adc
pop
inc
rcrb
out
lahf
xchg
pop
mov
inc
xor
push
push
subl
subb
ljmp
gs
sub
lods
adc
mov
arpl
int
pop
ljmp
jns
adc
and
enter
les
push
jno
lds
popa
adc
inc
rorl
ficoms
lea
in
lods
andl
push
fidivl
popa
mov
xorl
mov
pop
mov
xlat
aam
lea
lret
cmp
dec
out
cmp
xchg
push
mov
jmp
jecxz
dec
ja
or
movsb
mov
insb
xchg
dec
cmpsl
cmp
xor
pop
push
mov
mov
addr16
decb
sbbl
lea
push
pop
cmp
adc
outsb
inc
enter
aas
cmp
sbb
sub
mov
outsl
movsl
test
inc
cmpsb
push
mov
adcl
xlat
jcxz,pt
in
push
inc
push
inc
popf
mov
pmaddwd
cltd
push
push
in
xchg
mov
xchg
aam
push
jno
jo
xorps
push
xor
pop
xchg
jge
xlat
jb
mov
movsb
adc
mov
sub
mov
mov
test
test
addr16
in
mov
cmp
pop
and
lods
andb
pusha
xchg
les
xor
dec
mov
stc
fadds
add
or
push
push
xchg
orl
sbb
xlat
inc
fisttpl
sub
lds
sub
das
mov
addr16
movsl
adcl
pop
outsl
mov
push
cmp
loope
mov
pop
jle
and
test
push
add
inc
cmpsb
push
push
insl
lahf
pop
mov
xchg
lds
cmpl
popf
jmp
call
xchg
insl
pop
push
mov
fnstenv
imul
dec
xchg
movsb
and
aad
mov
orps
int
pushf
jns
and
int3
jecxz
jmp
cmpsl
stc
xchg
call
fiadds
mov
test
bound
pop
xor
sbb
push
mov
xor
outsb
xchg
mov
pop
xchg
xchg
fsub
aas
mov
cmp
jne
sub
cmp
mov
lds
pop
insb
test
dec
arpl
cmp
je
cmp
int3
adc
dec
gs
popa
rcr
jge
data16
pop
inc
cltd
mov
out
rorb
jo
lds
push
cwtl
lds
test
sbb
lahf
lds
and
mov
and
sub
jmp
das
movsl
jne
loop
lea
loope
mov
cmp
mov
mov
and
cmp
pop
in
int3
cmc
jge
cmp
outsl
xor
pop
out
mov
sub
inc
aaa
test
test
jnp
inc
imul
mov
inc
cltd
cmp
inc
outsl
outsl
in
aad
mov
repz
push
stos
lds
pop
dec
addr16
call
sub
jle
popl
leave
inc
ja
jmp
add
mov
mov
insl
xchg
dec
rclb
sub
mov
sbb
daa
dec
pop
inc
dec
lea
cwtl
das
add
xor
xchg
bound
sub
jns
dec
dec
dec
mov
inc
xchg
test
xchg
sbb
push
jnp
cmovb
je
mov
outsl
jp
popf
add
pop
aas
sub
ljmp
cltd
or
or
add
mov
dec
push
sub
subl
jecxz
notl
pop
xor
jge
fwait
push
and
jge
sub
jmp
inc
mov
movsl
jns
adc
cmpsl
push
pop
movsl
sub
daa
sub
cmp
mov
cmpsb
enter
ja
mov
jg
pop
shll
jno
pushf
and
insb
fwait
mov
in
mov
cmp
cwtl
dec
or
daa
pop
rorl
pop
xchg
xchg
in
lods
rorb
push
push
push
orl
and
mov
inc
jnp
imul
ljmp
push
pop
or
pop
lea
in
movsl
pushf
jns
ljmp
aam
sub
outsl
and
scas
push
xlat
sbbl
and
lods
orl
push
mov
das
dec
pop
inc
dec
scas
xor
inc
inc
jae
cwtl
shlb
fisttpl
arpl
dec
mov
and
mov
inc
arpl
arpl
add
mov
jge
xchg
pop
rol
sub
sbbw
ret
mov
dec
mov
push
inc
xchg
dec
jmp
sub
mov
adc
sub
mov
scas
dec
xor
shrl
subl
pop
mov
sub
jno
lea
wbinvd
insl
lods
xchg
in
mov
cmc
dec
xor
stos
outsl
aaa
push
fbld
movsb
add
lea
adc
int
inc
mov
and
adc
jmp
lea
imul
and
lds
ljmp
das
insb
or
lahf
inc
push
ja
dec
lds
jmp
xorl
xor
cmpb
dec
fwait
lds
jl
or
outsl
idivl
mov
inc
out
sub
jg
cmp
pop
push
imul
lahf
aaa
shrl
lea
cmpsl
insl
push
out
cwtl
lahf
daa
inc
out
enter
subl
mov
dec
xor
lahf
mov
or
movsb
jne
das
mov
gs
jl
cltd
aas
scas
jmp
daa
aas
and
les
icebp
jnp
mov
jno
int
rcl
aad
mov
fsub
xchg
xor
xor
ror
xor
sub
push
enter
movsb
arpl
adc
inc
xor
insl
mov
sub
sub
bound
int3
add
dec
push
imul
sbb
subl
xor
and
insl
movb
cmc
mov
dec
push
dec
and
loopne
icebp
mov
pop
jle
dec
and
imul
add
xchg
lods
inc
sub
dec
mov
mov
ja
pop
es
push
add
mov
dec
xchg
gs
xchg
dec
add
lea
or
push
inc
hlt
cmp
call
and
cmc
mov
scas
xchg
fcmovnu
mov
rclb
jno
add
jns
pop
push
sbb
jne
sub
mov
cmp
and
push
dec
cs
stos
daa
lahf
mov
daa
fnstcw
popf
jmp
in
arpl
outsl
daa
dec
jno
popa
xor
fldcw
add
sub
loopne
ror
push
sbb
mov
ja
adcl
xchg
movsb
add
and
lock
into
jg
das
arpl
xchg
inc
adc
push
movsl
into
arpl
push
and
or
aaa
jmp
int
xchg
lds
push
mov
ljmp
push
in
xchg
cmpsb
scas
cltd
push
xor
xchg
andl
pop
jmp
test
pop
ror
cmp
mov
lds
adc
jmp
daa
inc
adc
pop
or
add
inc
jb
es
cmp
ljmp
iret
push
mov
popa
mov
call
mov
imul
orl
jno
inc
lea
add
sub
or
andl
add
jecxz
movsb
and
and
sub
mov
test
pop
pop
les
rcll
xchg
clc
add
ds
push
push
mov
out
fidivrs
mov
dec
and
fiadds
push
push
mov
sbb
fadds
dec
out
loope
jmp
loope
or
and
stc
mov
ret
lds
ret
cmp
sub
sarl
mov
dec
add
inc
aas
shlb
inc
es
je
rol
add
gs
iret
repnz
xchg
shll
cmp
xchg
xlat
mov
out
mov
cltd
sub
sbb
sub
inc
adc
mov
xchg
inc
cmp
movsb
cmc
ret
sbb
daa
bound
and
shll
rcrb
inc
sahf
xchg
xchg
leave
insl
push
jno
adc
dec
rol
push
das
loopne
shl
pop
mov
das
imul
sar
dec
mov
lea
int3
inc
sysenter
dec
push
push
gs
and
push
cmp
pop
sub
rorl
add
xchg
fdivl
dec
dec
inc
mov
inc
push
sub
inc
cmp
mov
cmpsb
push
rcrb
inc
push
jl
clc
dec
dec
pop
pop
clc
aad
xchg
sarl
mov
pushf
inc
mov
stos
rclb
dec
out
push
call
notb
das
jecxz
push
pop
sub
daa
clc
xor
xlat
divl
dec
imul
jbe
rolb
stos
sbbl
inc
inc
vpaddsb
cmpsb
ror
les
lret
out
mov
dec
out
mov
shl
fiaddl
ss
xchg
dec
mov
mov
imul
leave
inc
mov
push
mov
inc
out
test
inc
sbb
fidivs
stos
roll
movsl
out
inc
push
sbb
sub
iret
fs
or
iret
test
testl
inc
fcomps
leave
pop
rorl
jl
inc
test
add
inc
dec
or
sbb
rclb
inc
sub
xor
pop
cmp
rorl
inc
mov
fisttpl
cwtl
add
and
sub
mov
pop
lret
jo
js
inc
and
mov
inc
mov
imul
adc
jecxz
repz
sub
cmp
push
jb
fisubl
inc
or
sbb
ljmp
xchg
lock
mov
subb
dec
sub
mov
pop
add
dec
inc
loope
sub
jns
push
xor
and
mov
pop
stc
roll
add
push
lret
add
adc
add
pop
cmp
and
pop
add
and
cmp
sub
movsl
mov
pushl
sbb
mov
jl
push
cmp
add
sahf
rep
xchg
sti
inc
pop
xchg
sbb
ja
mov
imul
insb
inc
ljmp
mov
pop
outsb
popa
out
cli
lods
scas
mov
ror
sub
pop
jg
inc
cld
fcomp
daa
mov
add
push
jmp
cmc
inc
push
mov
inc
icebp
jecxz
xchg
fidivl
aam
scas
ficoms
inc
sbb
dec
lods
mov
mov
rol
jnp
xchg
out
neg
std
xchg
loop
pop
mov
push
cmp
inc
pop
mov
out
test
in
pop
jge
je
inc
push
das
mov
lods
fidivs
mov
sub
rolb
mov
add
jp
sbb
add
inc
in
add
insb
push
inc
loopne
insl
icebp
stos
mov
andb
cmp
clc
xor
xor
jno
inc
xor
jge
xor
sbb
cmpsl
je
jb
dec
insb
inc
bswap
out
lods
mov
or
test
sbb
mov
sub
adc
sub
in
gs
sub
daa
inc
fnstsw
mov
push
iret
out
movsl
ss
and
loop
cmp
inc
push
and
adc
scas
orl
ljmp
cmp
push
xchg
jnp
imulb
gs
lret
fadds
out
cmp
inc
pop
adc
add
ret
or
inc
and
stos
fwait
cmpsb
clc
pop
jno
mov
and
xor
dec
mov
icebp
or
mov
fucomip
add
xchg
movsb
mov
dec
pop
mov
sbb
jl
fidivl
inc
stc
and
or
jno
mov
inc
push
add
mov
and
dec
inc
aas
xorl
enter
and
aas
andb
jae
rolb
mov
mov
daa
repnz
push
ret
mov
popa
pusha
rcrl
inc
sbb
xlat
es
jb
rolb
cli
pop
lahf
stos
popf
xchg
inc
in
inc
mov
mov
sub
mov
inc
addb
dec
or
push
pop
adc
xchg
sti
outsb
sahf
push
push
mov
into
inc
and
pop
insb
das
aam
stc
lds
add
in
call
test
cmc
out
test
inc
lea
xor
jg
mov
xchg
div
inc
ljmp
sub
sbb
subb
sbb
mov
dec
dec
rolb
add
in
mov
ret
jmp
fisubrs
inc
imul
sbb
inc
cmp
adc
ret
mull
sbb
xchg
pusha
pop
cmp
jp
add
bound
adc
add
xchg
lods
jns
jmp
shlb
jge
mov
inc
fisttps
cli
mov
fcoml
je
sub
add
sbb
nop
inc
leave
or
adc
unpcklps
xchg
cmp
xor
jb
inc
data16
push
cwtl
out
inc
sti
into
cmc
ds
dec
pop
push
pop
jne
sbbl
sar
or
imul
mov
in
jmp
inc
shl
ja
cmp
or
cmovno
imul
outsl
subl
pop
inc
xor
and
js
cmp
outsb
cmpps
jp
push
pop
shll
mov
mov
jb
scas
push
mov
orb
nop
sahf
faddl
or
inc
out
and
inc
xchg
push
outsb
popf
jle
inc
ljmp
sbb
jg
mov
jg
shr
outsb
lock
xor
sahf
inc
push
or
mov
je
int
popa
pop
and
inc
jns
out
sbb
test
jbe
pushf
pop
and
hlt
inc
sbb
mov
je
or
call
test
sub
and
arpl
inc
sub
fidivl
pop
test
cwtl
mov
mov
ror
leave
je
inc
into
sub
sbb
mov
pop
xor
ret
xchg
sbb
popa
jle
dec
push
jmp
popf
ret
mov
lock
inc
mov
cmp
jbe
icebp
loope
insb
and
sbb
and
jecxz
lods
ficomps
cltd
dec
xchg
bound
ljmp
hlt
ds
or
lods
aaa
mov
cmpl
adc
push
xor
popf
es
ret
xchg
addr16
push
sbb
cmp
bound
add
sub
std
inc
cmpsb
jne
xchg
movsb
ss
pop
shl
inc
rcrl
roll
cmp
das
fidivl
push
psubq
sub
mov
mov
lods
inc
mov
fsubrl
add
sbb
jne
inc
ds
jnp
inc
popa
mov
mov
ret
mov
popf
xchg
cmpsb
hlt
sub
mov
inc
fnclex
jl
mov
mov
mov
imul
mov
adc
add
pop
insl
fiadds
mov
mov
inc
sub
loope
rcrb
jns
inc
inc
ret
or
xchg
mov
stos
daa
popf
jge
push
out
in
inc
stc
pop
mov
and
loopne
iret
mov
mov
inc
ficoms
out
lret
cmpsb
push
gs
inc
xchg
mov
popf
ss
push
mov
lahf
and
inc
jl
imul
fsubrl
fcmovnb
fwait
or
jp
ja
xchg
nop
xadd
xchg
xchg
pop
adc
clc
mov
arpl
inc
js
push
mov
and
loop
lock
inc
jl
call
xchg
popf
or
rorb
inc
dec
test
jle
repnz
aam
mov
inc
mov
inc
insl
fsts
xchg
xor
inc
inc
movsl
loop
cmp
mov
mov
into
push
jle
and
js
dec
mov
rclb
test
adc
popf
sbb
mov
movsl
jle
xchg
repz
push
cli
mov
mov
addr16
into
jle
inc
les
cmp
dec
in
pop
aaa
ror
fisubs
test
adc
inc
mov
stc
mov
aaa
iret
cmp
std
mov
mov
pop
push
repz
xchg
pushl
dec
add
lock
ret
pop
stc
into
jle
xchg
xchg
dec
cmp
scas
xor
add
sub
push
ljmp
test
xor
rorl
repz
cmp
mov
cli
sar
push
sahf
xor
pop
outsl
sub
loope
dec
pop
and
mov
jl
push
mov
jp
rep
dec
jo
loope
mov
ret
lret
rcrb
jno
jge
jg
and
push
push
mov
jl
sbb
ss
dec
inc
in
and
mov
idivb
mov
stc
mov
fistps
add
js
in
jae
xlat
das
mov
rcrl
cmpsl
inc
push
sbb
and
rclb
mov
or
inc
inc
push
pop
mov
fiadds
sbbb
int
sar
lds
test
and
xchg
mov
test
and
shrb
pop
movl
push
and
and
fisttpl
jge
cmp
inc
lods
rolb
jnp
mov
inc
and
dec
mov
pop
inc
dec
dec
andl
add
sub
repnz
fwait
loopne
test
das
push
sub
adc
gs
lret
pop
rcrl
adc
or
aaa
cld
lcall
call
mov
push
cltd
pmullw
fstps
and
call
mov
mov
cmp
and
imul
xor
inc
mov
jmp
in
daa
jb
xor
enter
ret
movsl
and
ret
adc
cmp
cmp
pusha
mov
iret
inc
mov
sub
sub
mov
aas
cmp
cmp
xlat
or
and
mov
push
xor
jns
mov
mov
xor
mov
cltd
inc
mov
cmp
adc
inc
sbb
cmp
test
inc
int
lret
mov
push
cmp
mulb
fldenv
ret
push
pop
imul
sub
sbb
and
cltd
les
mov
mov
ror
inc
and
es
lds
inc
sarb
cmpsb
mov
inc
push
movsl
adc
inc
into
insl
jae
adc
les
push
and
cld
add
jns
dec
test
xchg
andb
dec
lds
mov
cmp
std
and
cmc
sahf
xchg
jae
pusha
rcl
mov
enter
outsb
xor
xor
mov
and
mov
inc
cmpb
stc
and
dec
inc
xor
arpl
mov
jb
mov
mov
les
cmp
fldenv
dec
addr16
sub
push
pop
cmp
negb
xor
dec
mov
jne
cmp
ja
jne
pop
sub
xor
ficomps
pop
fnstsw
sbb
mov
or
dec
xor
dec
test
shlb
mov
sub
lahf
jne
fwait
mov
xchg
jno
xlat
pop
pop
push
add
cmp
out
sub
imul
and
cmpsb
in
iret
mov
inc
push
xchg
cmp
cwtl
int3
fldl
pop
pop
lock
mov
imul
pop
or
mov
jbe
call
dec
mov
mov
mov
dec
push
push
dec
and
add
out
cmp
ret
pop
test
fisttpl
pop
xlat
xor
xchg
pop
sbb
mov
fucomp
mov
pop
mov
mov
in
rclb
mov
inc
mov
push
push
add
pop
aas
sub
loope
pop
pop
fucom
or
add
fistpl
mov
cmc
in
jns
sub
nop
lcall
lret
fsubs
lods
pop
pop
xor
push
rolb
push
hlt
arpl
xor
into
insb
fcoms
push
fwait
cmc
mov
pop
dec
into
cmpsb
sbb
mov
dec
cmp
dec
or
pop
push
xorb
movsl
jp
or
jns
mov
iret
addb
mov
nop
and
pop
fcomps
lods
pop
dec
adc
mov
dec
test
pop
pop
and
repz
cmp
daa
iret
subb
rol
pop
sub
mov
shlb
je
mov
std
inc
sbb
fbld
mov
inc
adc
gs
sub
fcomip
pop
xor
push
sub
add
and
aaa
pop
or
mov
dec
push
sub
cmp
outsl
xchg
aaa
sub
mov
aad
xor
fsub
mov
pop
mov
jle
sbb
add
xor
inc
idivb
xor
mov
out
shlb
test
mov
sub
test
mov
pop
xor
mov
ficomps
inc
mov
pop
xor
cmp
cltd
gs
movsl
mov
jb
mov
adc
in
mov
cmp
lods
mov
jo
add
inc
shll
inc
xchg
ret
mov
inc
arpl
mov
inc
inc
repnz
iret
inc
aam
jo
rolb
lds
in
pop
or
imull
dec
fcmovb
gs
jo,pn
pop
and
movsb
ret
in
pop
ret
mov
jp
mov
out
fdivrp
sub
cli
ljmp
ret
cmp
mov
and
or
ret
adc
inc
icebp
fmuls
jns
cmp
stc
shll
inc
cwtl
mov
pusha
rorb
inc
adc
pop
lret
cmp
inc
push
xchg
inc
dec
int
mov
sub
stos
push
dec
js
clc
or
add
jmp
jns
and
test
insl
jne
aad
movsl
lods
mov
mov
in
cmc
inc
std
push
pop
and
xor
test
mov
push
out
mov
xor
add
ja
xchg
mov
inc
and
or
inc
sbb
loope
inc
shlb
lret
sub
cmp
fcoms
mov
test
nop
mov
pusha
ret
push
ret
sbb
inc
push
adc
dec
rcrb
loopne
aad
dec
pop
add
and
dec
gs
push
sbb
cmp
test
stos
insl
rcll
scas
sub
inc
scas
imul
sub
pop
xchg
dec
std
mov
or
mov
pop
or
insb
outsb
out
lods
addr16
xchg
xor
sbb
inc
mov
adc
popf
inc
jmp
adc
out
je
inc
les
imul
jmp
incb
pop
xor
icebp
jb
inc
mov
aad
dec
pop
xor
inc
inc
rcll
pop
cltd
xor
repz
ret
inc
nop
outsb
hlt
or
loopne
add
pop
cmp
mov
mov
dec
in
mov
xchg
scas
inc
lods
add
push
inc
inc
insb
pop
inc
or
rcr
inc
out
fisubrl
inc
loop
mov
or
popa
jp
loopne
inc
cmp
loop
cwtl
jp
inc
mov
pusha
shll
aam
pop
inc
std
js
jle
mov
add
ficoms
addr16
sarb
mov
push
data16
inc
subb
fwait
lcall
xchg
cmpsb
push
mov
shrb
jno
pop
add
sbb
inc
push
cmp
inc
mov
mov
jno
jo
inc
insl
cwtl
cmpsb
fisubs
and
mov
sbb
lret
insb
popa
mov
inc
inc
movsl
push
push
jb
xchg
out
inc
cmc
fmuls
xchg
push
adc
adc
pop
into
mov
lret
loop
inc
and
ror
inc
mov
mov
into
inc
movsb
or
pop
push
push
push
xor
shrb
jge
sti
int
ss
cltd
scas
mov
popf
packuswb
dec
gs
adc
pushf
jmp
and
daa
push
inc
inc
jmp
lds
inc
inc
push
lods
rolb
sub
cld
fstpl
out
inc
sub
popf
sbb
movb
jg
in
xchg
jmp
psubb
push
mov
lret
hlt
xchg
in
adc
icebp
ja
adc
shrl
in
pop
jg
ljmp
mov
ds
jb
inc
clc
scas
mov
loopne
sbb
inc
bound
xchg
pop
inc
dec
das
in
xchg
shll
aad
out
aaa
bound
mov
push
leave
inc
xchg
sbb
es
pop
mov
pop
dec
pushf
ja
std
jno
add
mov
jo
inc
movsl
cmpsl
and
fs
mov
in
fisttpl
pop
jnp
popf
addr16
rcrb
sbb
ja
mov
jnp
or
xlat
pop
fstpl
push
mov
inc
cmc
dec
push
in
fs
sub
xchg
fiadds
add
iret
adc
loope
dec
insl
sbb
xlat
push
pushf
inc
pop
xor
mov
in
scas
adc
lock
jo
xchg
mulb
iret
jecxz
push
popa
dec
dec
jo
ds
jns
daa
and
jb
push
mov
push
negl
fnsetpm(287
xchg
mov
cmp
dec
push
imulb
int3
or
icebp
dec
and
cmc
repz
popa
jno
inc
in
fmuls
mov
push
mov
insb
jnp
inc
arpl
sub
inc
and
pop
dec
icebp
movb
push
bound
and
clc
push
sbb
in
lea
adc
mov
cs
and
cmp
in
inc
lret
pop
les
es
pop
fdivl
scas
xor
ss
or
xchg
icebp
bound
jbe
inc
out
mov
jp
inc
cwtl
pop
aaa
push
fdivs
push
pop
jge
fidivs
sub
lret
pusha
hlt
jl
jb
lahf
mov
mov
mov
mov
inc
cmc
dec
mov
movsb
pop
aam
xchg
dec
orl
dec
cmp
push
loop
inc
sub
jge
into
mov
inc
push
cmp
inc
or
push
iret
rcrl
pop
push
out
push
add
lds
ret
imul
pop
fs
lret
xor
xor
lahf
xlat
jle
std
inc
or
inc
add
fcomi
lcall
sub
lods
ret
shll
mov
pop
inc
addb
aam
inc
or
popa
mov
fwait
dec
arpl
scas
add
add
dec
popf
orl
out
in
push
ret
pop
pop
xor
lods
pop
repz
push
mov
in
sbbb
adc
push
repz
inc
jb
int
jns
jl
inc
jecxz
cmp
jp
adc
push
stc
icebp
in
fucomi
inc
xorb
loop
add
js
xchg
pop
jmp
ficompl
cmpsl
mov
dec
out
pusha
pop
ret
jo
gs
xchg
andb
inc
mov
mov
push
ret
imul
cmp
inc
xchg
sahf
clc
shrl
jae
mov
and
daa
lahf
imul
cmp
push
jo
ljmp
xor
mov
ret
incl
inc
mov
push
jmp
fxch
orl
push
dec
movsl
jae
ror
jb
nop
outsl
ret
clc
add
icebp
divb
lret
fnstcw
arpl
jmp
lret
push
in
test
add
dec
inc
mov
jo
faddp
cmc
or
push
call
outsl
inc
rol
orl
fildl
in
popa
mov
pop
cmc
imul
or
loop
shll
adc
jmp
inc
mov
jnp
inc
or
adc
cli
leave
add
movsb
andb
jge
adc
and
stc
xor
pop
rcl
pop
push
cmp
out
adc
imul
cmp
inc
push
xchg
dec
push
fdivl
pop
ffree
fiadds
cmp
iret
shlb
mov
call
add
fwait
imul
adc
inc
stos
sub
ret
mov
imul
inc
lock
mov
out
fldenv
test
or
imul
arpl
xchg
mov
js
repnz
out
mov
inc
jbe
lods
pushl
push
iret
ret
fpatan
cltd
lcall
push
or
inc
scas
mov
inc
nop
dec
push
and
ds
push
adc
inc
insb
test
push
lret
inc
jo
outsl
out
inc
mov
sbb
mov
daa
popa
push
cltd
das
inc
add
test
pop
sub
sbbl
jp
mov
cmp
ss
scas
in
outsb
clc
xchg
ret
test
mov
jns
sbb
push
movsl
fadds
jbe
dec
sub
and
pop
adc
lock
test
xchg
xor
std
ss
repnz
xor
cmp
rol
loop
mov
jg
push
je
enter
inc
jae
in
popf
sbb
pop
cmp
sbb
xor
mov
jo
movl
dec
adc
inc
mov
mov
lods
inc
faddl
lods
add
add
add
mov
dec
fcompl
and
mov
inc
jge
mov
rcrl
stos
scas
clc
mov
jle
inc
push
push
ret
les
xchg
and
xor
xor
ss
inc
or
push
ret
inc
fdivrl
adc
ja
and
mov
add
xchg
or
loopne
jno
cltd
push
ret
iret
arpl
movsb
fnstenv
xchg
aas
jne
inc
mov
out
scas
inc
pop
xor
xor
sbb
xchg
aam
cmc
jp
imul
dec
dec
cmp
sbb
iret
add
shll
lds
pop
or
mov
lock
in
and
sub
addr16
inc
add
aad
test
dec
push
mov
scas
jg
jae
xchg
dec
ret
and
xchg
outsb
inc
and
push
cmc
cmpsb
lret
int3
jne
mov
jae
pop
sbb
jg
fprem1
push
mov
int
inc
aaa
pop
sbb
cmp
mov
addl
mov
sub
sbb
out
mov
je,pn
ret
sti
mov
adc
mov
nop
jge
mov
dec
inc
fstl
enter
ret
popa
pop
or
push
cmp
in
clc
inc
xchg
fxch
and
out
fwait
in
loope
jp
stos
test
pop
mov
pop
sti
pop
push
inc
mov
xchg
and
adc
movsl
cltd
adc
cwtl
pop
clc
addb
sbb
xchg
or
lcall
lods
lods
mov
pop
mov
popa
push
adc
mov
dec
ja
arpl
ss
xor
dec
in
jae
fisttps
popa
fwait
rolb
int
rcll
enter
and
jmp
or
jmp
sub
pop
cmpl
cmpsb
mov
outsb
repz
jne
insl
div
inc
inc
ret
and
dec
lds
in
pop
mov
inc
dec
dec
pop
and
sbb
mov
cmp
popa
mov
mov
cli
sub
dec
loop
cmpsb
scas
push
das
in
in
loope
mov
std
inc
adc
dec
push
faddl
mov
dec
in
loopne
cwtl
inc
and
rcrl
fucom
ficomps
in
mov
js
ret
ja
inc
repnz
out
fnstcw
dec
sbbl
fwait
cwtl
decl
mov
mov
jp
test
or
cmp
and
mov
xor
adc
int
jecxz
or
cmp
dec
aas
inc
and
stos
movsl
xor
jp
cmc
pop
jno
popf
jg
call
push
push
fildl
in
mov
mov
sbbb
int
ja
bound
cmpsb
inc
jg
cld
and
jns
shl
push
or
loop
sbb
or
cmp
jnp
sarl
into
jmp
add
imul
inc
dec
jmp
lea
popa
stos
aad
clc
mov
mov
push
dec
cltd
imul
mov
inc
cmp
fcmovnu
ja
daa
adc
mov
and
into
popw
lock
sar
jns
push
cwtl
arpl
cmp
ret
push
adc
test
in
lahf
jbe
xchg
sub
pushf
adc
cmp
jno
mov
fimull
mov
or
sub
pop
ror
push
sub
inc
lock
dec
leave
mov
sbb
inc
movsb
xchg
out
int
dec
and
or
cld
mov
ja
xor
movsl
jno
ret
mov
in
flds
push
mov
fisubs
inc
fs
jg
je
popf
stos
popf
leave
inc
pushf
scas
or
mov
mov
mov
dec
mov
cli
cmp
mov
mov
and
mov
dec
stc
xor
rolb
jge
adc
sbb
mov
mov
mov
pop
push
js
mov
add
mov
scas
loopne
xchg
movsb
xchg
lea
inc
fstps
xlat
jg
orl
or
sbb
push
fistpll
cmp
insb
int3
mov
in
adc
dec
mov
xor
ljmp
push
std
cltd
jge
inc
mov
inc
movsl
rcr
out
mov
lods
ja
cmp
add
cvtps2pd
cmpsl
les
gs
xchg
test
or
pusha
and
andb
pusha
inc
ret
sbb
dec
jne
inc
mov
mov
cmpb
add
hlt
inc
subb
movsb
xchg
push
jbe
or
inc
jae
mov
inc
pop
sbb
inc
inc
flds
jo
out
gs
mov
inc
jge
xor
or
push
sub
fldl
lds
xor
and
rorb
std
adc
sarb
dec
xor
inc
fbstp
inc
les
sbb
into
fbld
lods
sbb
ret
repz
int3
inc
or
dec
imul
inc
clc
fisubs
out
push
enter
mov
test
push
fiaddl
imul
hlt
sbb
add
cmp
dec
and
dec
jl
inc
inc
mov
pushf
xchg
jbe
dec
ljmp
xor
mov
nop
mov
lcall
shr
lret
in
pop
jne
aam
inc
pop
add
xchg
cmp
in
mov
xor
dec
push
xchg
scas
js
jne
inc
mov
hlt
sti
mov
mov
lock
test
or
add
je
pop
hlt
les
push
ficoms
pop
inc
push
inc
xchg
cmpsb
lret
mov
add
mov
push
push
dec
movsl
stc
inc
inc
shll
call
fidivl
scas
dec
push
shrb
test
rolb
push
mov
and
pop
inc
dec
daa
shll
jns
inc
jae
pop
ficoms
dec
pop
jle
lods
ds
dec
pop
ret
xor
adc
inc
iret
push
stos
mov
inc
push
xchg
add
cmpsl
andb
es
loope
dec
pop
ss
fidivrl
mov
call
rorb
pusha
pop
inc
inc
das
jge
les
out
mov
pop
mov
ret
movb
lods
das
add
push
popf
fwait
mov
inc
push
dec
jg
sbb
sti
jbe
push
jae
addr16
or
rcrb
popf
jbe
out
das
or
into
mov
pop
pop
ja
xchg
pop
lret
xlat
and
and
xor
pop
push
pop
mov
push
mov
inc
xchg
mov
sar
inc
imul
call
mov
inc
andl
sbb
push
pop
sub
push
add
mov
and
addr16
std
ret
push
and
jns
jp
inc
inc
adc
pop
mov
pop
jb
rcrb
xchg
inc
popa
mov
or
bound
test
and
jno
jne
rcl
ss
mov
arpl
inc
mov
and
cmpsl
popa
jle
repnz
lock
stos
inc
sub
repz
cmp
xlat
inc
push
mov
sbb
mov
sahf
xchg
loopne
jns
fidivl
jns
aaa
cwtl
cmp
push
mov
jmp
inc
iret
arpl
cli
inc
mov
test
rorb
in
and
mull
inc
fcomp
cwtl
xor
std
sub
fcom
mov
jne
jl
inc
call
jae
fldl
lods
sbb
push
adc
jo
in
push
or
iret
jb
inc
jl
fs
jp
push
mov
fisttpl
inc
mov
jle
shll
xchg
mov
mov
adc
jecxz
xor
ds
imul
pmuludq
inc
into
mov
cmp
lock
cli
xchg
insl
mov
pop
jno
addl
or
pop
inc
mov
fs
cli
pop
or
out
movsl
mov
pop
inc
lahf
jecxz
scas
outsl
jbe
inc
or
sbb
inc
dec
icebp
in
testl
shl
cld
inc
iret
cmp
cmp
inc
aaa
sub
adc
inc
shlb
push
clc
add
mov
scas
sub
mov
sub
inc
jle
dec
mov
and
inc
cld
mov
mov
pushf
pop
clc
inc
jns
imull
lock
ret
into
cli
adc
shl
vrcpss
cmp
inc
mull
mov
inc
test
outsb
push
jg
std
push
imul
loope
insb
pop
push
addb
pushf
inc
pop
into
imulb
pop
push
pop
xor
inc
mov
inc
data16
popa
in
push
js
loop
or
mov
cmpsb
sbb
sti
mov
inc
shlb
fimuls
and
daa
sub
inc
pop
je
into
js
fists
lss
and
jg
sub
inc
ja
adc
es
test
xchg
sbb
xor
ss
jmp
cmpsb
jo
inc
jno
testl
xor
ret
pop
je
sub
xchg
push
ja
push
ret
and
dec
jmp
sar
imul
sub
and
lods
mov
inc
pop
xchg
mov
js
aad
adc
push
fistpll
addr16
xchg
arpl
jb
mov
dec
into
sbb
ds
xchg
ljmp
pop
cs
inc
popl
mov
mov
add
xor
imul
add
or
mov
push
cmpsl
movsl
rcrb
dec
mov
loop
sbb
add
sub
pop
rol
lds
loop
add
dec
push
cmp
scas
inc
mov
mov
mov
cmp
jge
ret
or
push
inc
pop
lods
lds
imul
jbe
ljmp
addr16
aaa
out
popa
sub
aas
sbb
sti
mov
jns
pop
dec
dec
inc
push
push
xor
inc
inc
pop
divb
sar
cld
in
jne
jns
jnp
fildll
orb
jno
xlat
and
or
cmp
dec
inc
shrl
pop
fmull
pop
ja
mov
test
mov
mov
out
jge
cmpsb
pop
dec
addl
pop
dec
iret
jmp
es
jecxz
gs
notb
sbb
daa
add
dec
mov
add
inc
fldenv
mov
aam
or
daa
fdivs
inc
mov
sbb
lea
inc
push
jp
xor
inc
push
cmp
inc
lret
adc
insb
lods
in
insl
mov
xchg
pop
sub
inc
inc
mov
xor
inc
cmp
inc
pop
cmpsl
or
cmp
jb
jg
inc
jg
pop
dec
out
ja
ja
movsb
in
push
cli
add
dec
imul
dec
scas
fcmove
sar
push
inc
jp
inc
sbb
fidivs
jg
xor
add
es
xor
push
pop
rcl
shrb
std
inc
dec
inc
or
jecxz
ret
enter
dec
dec
shlb
sub
imul
and
rol
test
push
mov
imul
into
dec
cmp
popf
and
imul
shrl
dec
mov
fmulp
jns
into
jge
push
popa
dec
arpl
int
mov
jle
sti
inc
adc
jle
shl
jne
push
xchg
test
imul
xor
and
xchg
push
mov
rol
inc
addl
ljmp
test
add
nop
adc
inc
lret
inc
dec
scas
inc
mov
movsl
lds
inc
les
std
dec
dec
add
push
inc
sub
inc
inc
shll
dec
ret
test
test
push
add
dec
and
fdivs
add
imul
daa
in
shll
sbb
push
fwait
jns
jl
cli
cltd
jb
xchg
add
jne
xchg
or
gs
pop
or
pop
sub
in
addr16
add
inc
jg
and
rol
or
fwait
dec
xor
add
pop
lds
dec
rcrl
cltd
mul
in
sub
xchg
push
mov
inc
cmpl
mov
cmp
test
dec
inc
rolb
lods
ror
adcl
and
pop
and
icebp
push
sbb
push
mov
dec
test
dec
pop
mov
mov
lods
shl
cmp
xor
and
std
mov
mov
imul
imul
iret
mov
enter
mov
push
add
lods
mov
inc
push
loop
or
add
jl
imul
in
addr16
pusha
aad
insl
stos
and
fwait
cmp
inc
inc
lcall
cmp
and
decl
push
mov
ds
pop
xor
arpl
dec
push
mov
sahf
movsb
adc
into
xor
mov
mov
jmp
xor
push
insl
stos
xchg
jg
push
xchg
stos
mov
xor
xor
lret
insl
sub
cltd
aas
mov
sub
jno
arpl
sbb
sbb
out
jecxz
inc
ret
sub
inc
cmpsb
mov
push
dec
dec
rorl
out
add
icebp
xchg
push
hlt
addl
xor
dec
or
or
xchg
cmp
and
cmp
mov
scas
out
mov
mov
inc
inc
fadd
pop
mov
test
inc
inc
and
leave
roll
pop
rol
add
push
aaa
xor
fsubl
xor
fnsave
and
xchg
jg
out
push
xchg
xlat
daa
and
pop
stos
roll
pop
dec
inc
leave
imull
rolb
bound
inc
sub
test
sub
sahf
cwtl
popf
cmpb
cmp
int
pop
into
insl
push
dec
push
push
rorb
jbe
add
mov
add
push
dec
lret
cwtl
jge
xlat
inc
mov
ret
and
mov
stos
sbbl
inc
mov
shlb
aaa
int
orl
push
xchg
sub
enter
rolb
popf
test
lods
or
xchg
dec
lret
fisubs
dec
xchg
faddl
shll
ja
jo
inc
decl
xor
push
arpl
imul
das
jg
pop
mov
jecxz
dec
dec
cmpsl
movsl
pop
ss
cmpsl
in
xor
and
inc
jnp
rol
inc
ror
cmp
jae
in
dec
dec
dec
and
out
push
mov
mov
enter
rcll
aaa
int
ret
aam
push
xor
and
cmc
push
sub
dec
fmull
sti
les
mov
test
adc
inc
inc
cmpsb
or
cmp
neg
mov
sub
cwtl
xor
sub
popf
mov
int3
shl
dec
push
loope
pop
mov
mov
jb
outsl
xor
jle
push
es
push
cmpsl
cwtl
test
add
rcrl
fs
dec
subb
mov
lds
pop
dec
jge
int
and
rcll
cltd
jbe
rcrb
popf
test
lahf
dec
shrb
inc
jnp
hlt
sbb
jne
into
cld
jb
sub
push
xor
sbb
mov
push
mov
leave
push
xor
inc
inc
pop
inc
int3
xor
insl
insl
and
and
fidivl
cmp
pop
icebp
test
movsb
in
add
cmp
mov
sti
rcrb
dec
inc
inc
pop
inc
inc
inc
dec
rolb
stos
jg
in
hlt
jb
divl
idiv
ret
cmp
pop
push
mov
push
rcl
loop
cmp
dec
sbb
jle
push
lret
xchg
push
andb
push
or
sti
or
jle
dec
pop
daa
out
xor
inc
sti
jne
int3
add
inc
pop
rclb
xchg
add
cmp
inc
add
sub
jb
sub
andb
lcall
ss
mul
cmp
gs
xor
addl
cmp
lds
movsl
daa
daa
addr16
lds
aas
mov
das
jle
add
mov
outsb
and
sub
mov
push
add
jno
mov
add
bound
xchg
sbb
fs
mov
out
pop
fcoml
dec
push
dec
mov
fsubrp
mov
movsb
bound
inc
jbe
lea
das
and
inc
xor
dec
cmp
add
dec
or
add
int
and
dec
movsb
sub
adc
pop
cld
fiaddl
pusha
xchg
sub
cmc
inc
inc
inc
sub
push
dec
das
jecxz
cs
movsb
add
adc
jg
test
push
pushl
popf
push
mov
pop
xchg
lcall
dec
add
cmp
and
dec
sub
xor
pop
cmp
xchg
lahf
das
lds
sub
daa
push
xor
rcrl
push
jae
mov
lret
pop
in
lret
movsl
ja
dec
inc
int3
inc
or
cmp
xor
stos
mov
enter
cld
iret
jb
pop
ss
or
insl
dec
rcrl
or
xor
add
stc
in
aas
leave
fldcw
gs
dec
cmc
ja
jae
sbbl
aam
jae
dec
pop
inc
lods
inc
movsl
push
aaa
pusha
jae
or
sahf
test
aaa
nop
xor
daa
push
inc
xor
jae
xor
jno
stos
jmp
and
jp
fisttpl
inc
mov
cltd
xor
hlt
ss
jb
repz
push
push
sub
dec
leave
mov
push
pop
cmpsl
mov
sarb
test
push
add
dec
sub
leave
add
xlat
insl
mov
cs
dec
int
dec
push
nop
push
jno
xchg
and
dec
shll
pushf
xchg
lret
pop
jns
dec
int
les
jno
cmp
inc
xor
adc
push
xchg
cmp
or
inc
or
pop
pop
lret
xor
mov
das
xchg
dec
sub
adc
dec
jge
cmpsl
add
jo
mov
inc
mov
insb
arpl
sub
stos
xor
dec
dec
xchg
dec
mov
enter
and
rcrl
mov
and
jnp
mov
data16
into
dec
enter
xor
imull
sbb
test
dec
adc
mov
test
leave
sti
sti
and
inc
lret
sti
test
cmp
fiadds
insl
mov
sub
dec
push
add
movsl
or
push
iret
mov
push
push
inc
pushl
dec
xchg
pop
inc
aas
jle
pop
pop
pushf
das
inc
gs
adc
data16
mov
roll
inc
sti
lds
dec
pop
dec
lods
xchg
mov
sub
jo
inc
test
pop
dec
or
aaa
leave
pop
inc
push
mov
push
stos
mov
les
daa
and
pop
and
lds
push
pop
push
shlb
mov
push
pop
xor
and
xor
adc
dec
dec
inc
sbb
pop
outsl
mov
test
andl
dec
cmp
pop
sub
cmpsl
and
sbb
pop
inc
sub
cmp
dec
xchg
jmp
pop
addr16
lret
mov
pop
pop
dec
xor
pop
ret
dec
xor
inc
lods
or
js
das
push
dec
add
mov
xorl
sar
into
lcall
lret
sub
push
jg
pop
dec
mov
add
dec
jmp
sti
js
ror
cs
cmp
ljmp
adc
loop
dec
xlat
push
in
cmp
cmp
mov
dec
cmc
sub
inc
mov
test
and
add
mov
pop
pop
jecxz
outsl
jle
xor
mov
inc
mov
imul
roll
inc
int3
movsl
mov
sub
filds
dec
mov
shll
int3
push
dec
daa
cmp
stc
test
pop
pop
mov
lds
lds
imul
lahf
xchg
test
sub
es
mov
rorl
inc
addr16
fcmovbe
push
mov
outsl
in
dec
into
das
inc
call
adc
inc
mov
test
int
and
dec
inc
add
or
inc
mov
push
cmpsb
push
inc
sbb
leave
arpl
inc
lret
mov
mov
ret
inc
dec
movsl
and
inc
test
fnstsw
les
push
push
cwtl
pop
jne
test
ret
ret
jae
cs
sbb
sbb
sub
mov
and
lahf
sub
dec
lds
dec
test
and
fisubrl
or
and
jae
dec
and
jg
inc
dec
fbstp
mov
push
shll
les
sub
lods
fimull
inc
xlat
dec
sarb
fstps
add
or
lods
jne
addr16
adc
rcrb
inc
jae
daa
outsl
push
mov
daa
dec
xor
call
xchg
mov
imul
dec
adc
xor
dec
popf
jne
pop
aas
pop
aas
inc
stc
pop
call
xor
test
enter
xor
jno
pop
out
test
ret
sahf
insl
fsts
ss
das
push
sub
ret
jne
mov
push
daa
fldcw
dec
xor
es
bound
add
xor
mov
pop
fwait
ret
movsb
push
les
insb
test
dec
cmpsb
dec
ljmp
push
das
inc
ret
inc
rclb
mov
cltd
sub
pushf
int
dec
lret
xor
pop
pop
scas
icebp
in
bound
cs
fnstsw
push
push
mov
inc
pop
inc
sbb
insb
sub
mov
and
add
inc
sbb
test
push
ja
mov
sti
pop
inc
clc
adc
xchg
es
lds
loop
dec
dec
xor
rorb
outsl
jnp
lds
es
xchg
ficomps
push
mov
cwtl
cmp
dec
pop
mov
das
jb
cmp
push
imul
inc
rclb
dec
cmpsb
inc
cli
int
jnp
pop
and
es
ds
orl
xchg
fstpl
test
cmpsb
pop
lret
incl
aam
sub
fdivrl
add
dec
cmpsl
or
cli
int3
test
mov
lds
mov
pusha
xchg
pop
ja
push
jnp
cmp
pop
push
push
dec
and
enter
out
loop
dec
mov
xchg
mov
mov
mov
repnz
es
inc
push
xchg
into
pop
push
ret
jle
push
sti
enter
les
dec
scas
jns
and
or
dec
push
mov
pop
dec
cmpsl
xor
mov
leave
jg
jno
jg
inc
in
shl
add
and
jae
fldt
cmpsl
aaa
dec
jbe
jmp
dec
insl
xchg
xchg
lds
sub
pop
aaa
pop
enter
mov
mov
or
dec
roll
dec
inc
repnz
lods
iret
das
and
jno
mov
sti
dec
jg
jbe
xchg
in
mov
xchg
mov
dec
fsts
pop
shlb
add
and
dec
aam
push
jbe
push
orb
pop
or
xor
lea
inc
dec
and
fs
cmc
cmp
inc
adc
pusha
dec
dec
xor
roll
test
jo
dec
mov
dec
inc
movsl
xchg
mov
psubsw
arpl
xor
and
cli
les
loope
pop
push
pop
addl
push
mov
pop
lods
mov
imul
cmpsb
pop
sub
and
jg
jno
roll
push
inc
sub
test
leave
pop
dec
mov
test
rorb
jp
jo
rclb
pop
dec
xchg
mov
out
cmpsb
rcrb
dec
outsb
ret
cmp
xchg
mov
push
inc
xchg
jae
test
mov
inc
sahf
lods
inc
push
pop
push
in
aaa
pop
cmpsl
inc
rorb
popf
imul
push
jne
cs
mov
dec
gs
inc
rcrb
das
and
mov
cmp
sub
push
test
jle
inc
lahf
inc
pop
jae
mov
shrb
dec
mov
inc
inc
dec
ja
pop
out
imul
mov
lret
rolb
rcrb
pushl
pop
sarb
sti
jle
loope
dec
add
xchg
mov
lea
and
jmp
push
shll
add
mov
xor
or
sti
cmp
and
xor
xor
adc
push
cmpsl
inc
mov
or
fwait
mov
movsb
in
shll
dec
xor
inc
aaa
in
sub
add
jns
outsb
mov
mov
and
pusha
bound
mov
cmp
push
dec
mov
and
push
dec
scas
push
xchg
inc
scas
lods
push
mov
and
jo
sub
sub
lcall
in
mov
leave
adc
daa
arpl
xchg
mov
pop
test
xchg
gs
adc
and
gs
push
andl
push
jno
aad
sub
pop
mov
adc
movsl
cmp
inc
lcall
fisttpll
inc
and
iret
sub
push
cmp
mov
xchg
pop
add
xchg
pop
add
ret
add
fcmovnbe
aam
fs
lret
mov
xchg
pop
sbb
xor
and
cwtl
pop
dec
and
pop
dec
and
push
sub
fcompl
pop
pop
shrl
movsl
jge
fsubl
int3
fistps
daa
rcrb
inc
inc
dec
dec
pop
test
pop
mov
inc
xor
add
shll
jae
push
cltd
inc
das
aad
cwtl
int3
xchg
push
mov
fistl
inc
daa
add
inc
xor
xor
xor
stc
or
cmp
popa
pop
dec
mov
shlb
pop
inc
inc
pop
push
push
jno
nop
not
cld
sti
fwait
cli
int3
mov
inc
and
add
and
mov
xor
or
push
sub
lahf
lcall
lahf
dec
push
dec
dec
sub
addr16
inc
and
pop
cmpl
shll
pop
paddusw
das
mov
sub
sub
and
fistpl
sub
add
test
jns
jp
xchg
jg
push
popa
leave
inc
cs
xor
enter
sub
cmp
dec
mov
or
jnp
or
inc
cmovl
cmp
jp
cmpsl
push
clc
aad
rcl
and
xchg
xchg
mov
scas
cld
fsub
fisttpl
xor
push
cs
in
loop
mov
mov
xchg
sti
bound
push
cmp
shll
fwait
int
cmp
pushw
int
loope
pop
cld
mov
jnp
divl
aaa
sub
xchg
jecxz
aam
and
fwait
adc
fcomps
cmp
cmp
and
pop
pop
push
stc
mov
dec
test
stos
arpl
mov
cmp
and
clc
test
cltd
mov
push
sub
das
cltd
bound
daa
es
push
lods
sbb
lret
sbb
jnp
dec
pop
inc
mov
mov
pop
jns
arpl
push
push
imul
cmovae
push
dec
bnd
and
xor
mov
push
fldenv
cmp
and
mov
into
ret
int3
in
add
push
jge
add
rcll
int
ror
mov
imul
movsl
fimuls
movsb
jg
xchg
sahf
xor
data16
leave
pop
mov
adc
rcl
and
stos
dec
arpl
lahf
arpl
cmp
arpl
dec
js
fbstp
fists
add
xchg
leave
pop
ret
cmc
xchg
pop
fistpll
fs
push
fucomip
xor
dec
aad
mov
xor
cmp
jnp
pop
mov
outsl
lahf
xor
shrl
pop
sbb
pop
outsl
inc
xor
clc
mov
push
imul
sbbb
movsb
jne
xchg
xor
or
push
pop
mov
mov
je
xor
cmpsl
xchg
xchg
sub
jbe
pop
push
inc
push
stos
sbb
xchg
mov
dec
inc
push
and
pop
dec
jae
js
pop
xor
mov
push
es
push
sub
push
inc
inc
jbe
fisubrl
inc
push
lret
sbb
xchg
xchg
mov
inc
fcomps
and
dec
mov
and
or
push
push
into
dec
test
in
push
movb
add
rorl
in
and
and
sbb
sub
fcoms
test
push
aaa
and
shrb
lahf
and
cli
rcrb
andb
and
add
repz
inc
fnsave
fidivrl
mov
or
adc
mov
add
ds
shr
imul
orb
sub
rcrb
or
xchg
fwait
jg
adc
out
adc
mov
dec
lock
imul
xchg
repz
push
xor
insb
mov
lret
jg
imul
dec
cmp
ret
test
arpl
cmp
jnp
mov
test
mov
movsb
shll
inc
icebp
dec
stos
ret
loope
fsubrs
pop
and
scas
fsubs
mov
sbb
and
cmc
jmp
shl
dec
stos
adc
cmp
xchg
shrl
mov
pop
lods
add
add
pop
dec
fs
dec
lcall
inc
xor
sbb
and
sbb
ficoml
inc
arpl
popa
addl
aam
cmp
sarb
or
push
jnp
push
xchg
shrl
inc
jmp
addr16
xor
cmp
inc
adc
mov
dec
inc
mov
lret
jl
xchg
shl
pop
clc
in
sub
jle
insl
into
cs
dec
xchg
mov
mov
daa
lcall
cmp
mov
or
or
inc
repz
jae
and
xor
mov
jno
adc
xchg
les
and
dec
in
ret
out
inc
pop
mov
mov
addr16
nop
mov
dec
push
pushaw
fadd
test
insl
iret
inc
add
mov
inc
add
or
std
inc
dec
mov
dec
imul
mov
adc
inc
pushw
and
iret
xlat
jp
xor
les
xor
sub
mov
jne
jmp
dec
movsl
out
int3
scas
pop
jno
pop
sub
fildl
ret
into
js
mov
jp
int
inc
push
iret
sahf
popa
roll
mov
inc
int3
push
iret
mov
out
or
lds
fmull
andb
cmc
mov
es
lods
xor
in
lds
mov
jge
andl
jge
add
push
mov
sbbl
inc
xor
adc
aad
add
stos
xlat
push
inc
fnstsw
adc
arpl
push
outsl
or
jge
and
sbb
into
sbbl
std
icebp
les
and
add
inc
js
test
shl
lcall
pop
call
test
add
lcall
xor
sub
mov
xchg
jae
push
andl
ds
int
inc
sub
and
sub
and
add
cmc
lcall
lcall
jecxz
xchg
cmp
shrb
pop
lock
fcmovnb
cmpsl
scas
cmp
cmp
xor
push
sbbb
in
push
pop
addl
jae
mov
push
fistl
sub
pop
mov
addr16
xchg
lds
arpl
in
xor
jns
push
imul
inc
inc
and
sub
dec
xor
and
rcll
shll
jb
dec
mov
push
pop
or
dec
int3
jnp
mov
push
pop
dec
jmp
jo
leave
and
add
jle
push
insl
dec
pop
adc
dec
fnstsw
xorl
dec
mov
jle
pop
xchg
lret
dec
mov
dec
sub
xor
lds
push
outsb
arpl
inc
fisubrl
fld
sti
xchg
test
mov
sub
cmp
repnz
je
inc
pop
pop
push
ror
int
sub
pop
in
sti
dec
sub
lock
pop
cld
mov
and
imul
dec
inc
push
aad
lea
iret
fwait
enter
push
pop
xor
push
int3
dec
pop
sbb
pop
mov
stos
nop
into
fimull
jnp
pop
jne
mov
dec
cmp
or
pop
rcl
cmp
imul
push
xor
pop
push
out
adc
in
lret
dec
insl
scas
dec
inc
cmp
test
xor
ds
and
sub
jo
dec
adc
pop
mov
dec
and
jg
add
je
jae
mov
pop
nop
pop
xor
rcl
sub
in
in
xor
aad
pop
pop
enter
das
jp
addr16
cs
fs
cmp
ret
fldcw
cwtl
ss
xchg
imul
push
leave
ret
and
xchg
fmull
pushl
mov
lea
clc
jno
shll
leave
and
divl
push
lods
pop
jb
mov
inc
dec
out
mov
movsb
sbb
outsl
nop
jmp
fldt
arpl
mov
fidivrs
pop
dec
add
add
pop
fisubrl
xlat
mov
sub
inc
xor
testb
xchg
pop
jns
pop
and
xor
inc
and
push
lds
pop
mov
lcall
gs
popf
add
jg
ficoml
pop
daa
push
pop
lcall
cmpb
xor
setae
dec
dec
mov
nop
push
imul
movsb
in
add
test
xor
popf
xchg
add
dec
shr
mov
mov
xor
cmpl
pshufw
mov
xchg
fsubl
mov
jns
cmp
sbb
idivl
fildll
pop
dec
xchg
lahf
in
arpl
xchg
and
shlb
inc
inc
gs
test
mov
rcll
outsl
dec
fidivrl
push
mov
push
xchg
test
sti
aaa
ret
cmp
ss
lret
sub
sti
lods
add
repnz
hlt
fidivrl
ret
sti
fadd
lea
mov
dec
stos
notl
stos
leave
popl
les
clc
fwait
adc
stc
les
push
cmpsb
and
into
dec
mov
or
gs
daa
dec
push
or
mov
xchg
neg
pop
mov
shlb
ror
push
jmp
dec
rclb
push
cltd
and
push
insb
dec
inc
dec
aam
dec
dec
adc
or
push
lcall
test
mov
test
xchg
and
add
xor
faddl
push
insb
lret
fcoml
adc
sub
ror
arpl
faddl
xchg
push
add
push
inc
jo
fmulp
das
std
pop
dec
and
test
mov
inc
scas
lea
fcoml
loop
inc
and
sbb
shl
test
sbb
cmpsl
dec
xchg
lahf
fldcw
sbb
arpl
aad
jb
orb
or
xchg
in
add
shrl
cmpsb
test
and
test
daa
and
cmp
inc
nop
sub
dec
stos
cwtl
into
pop
xchg
and
les
lret
and
aad
mov
out
adc
jo
test
jbe
push
inc
mov
push
adc
xchg
int
sub
xchg
orb
shll
shlb
ror
lods
mov
and
cmp
inc
mov
movsb
and
adc
rcll
inc
jle
pop
mov
lods
mov
push
jnp
xor
dec
adc
cltd
mov
sarl
lock
nop
dec
xchg
lcall
sarl
adc
mov
daa
ja
push
stos
shl
or
pop
or
xchg
dec
enter
int
js
nop
imul
pop
int3
movsb
out
sub
cli
test
cwtl
in
jmp
push
adc
mov
and
arpl
dec
cltd
sub
enter
lahf
and
add
inc
dec
pop
popa
adc
adc
mov
mov
push
test
dec
imul
test
cmp
dec
pop
dec
and
mov
push
insb
jg
leave
sti
push
add
aad
pop
enter
dec
dec
mov
xchg
or
mov
je
and
stos
dec
adc
pusha
mov
inc
jne
cmp
adc
or
jo
nop
pop
mov
cmp
imul
pop
dec
push
fistpl
jne
cmpsl
push
pop
stos
mov
mov
sbb
out
and
or
adc
frstor
jnp
dec
gs
mov
push
add
test
pop
xor
pop
lea
sub
cmpl
call
loop
push
xchg
push
push
adc
dec
popa
lret
xor
rcl
jl
xor
test
mov
mov
add
mov
mov
cltd
sti
dec
fwait
lret
outsb
aas
test
sbb
and
pusha
dec
es
add
cmpsl
cmp
jb
fidivrs
and
add
and
sbb
jg
adc
push
jle
push
mov
push
cmp
pop
adc
fisttpl
jno
mov
mov
or
jne
inc
aaa
cmp
sbb
in
fadds
cmc
fsubp
jno
das
test
dec
sub
sub
cmp
and
sub
in
pop
sub
xchg
jle
inc
lahf
cmp
xor
pop
lds
push
push
push
push
dec
push
push
dec
and
push
aas
out
in
push
stos
sbb
arpl
test
cmp
and
inc
insl
or
sub
mov
mov
mov
rorl
inc
imul
mov
pop
data16
daa
mov
xor
test
push
inc
dec
push
cmp
gs
mov
fstpl
push
int
rcrl
inc
int
lds
dec
out
ss
lret
and
push
xor
mov
leave
mov
mov
add
jecxz
test
xor
cmc
and
add
jg
jge
inc
aad
std
jne
fiaddl
fwait
rorl
popa
xor
ds
popa
inc
lcall
and
push
dec
pop
pop
mov
movb
in
and
rcll
loopne
popl
rolb
sub
and
push
shrb
cmp
jns
insl
cltd
add
cmp
gs
xchg
je
lock
inc
lds
icebp
lret
loopne
dec
orl
lock
sub
int3
jne
inc
ds
or
push
iret
aam
mov
mov
sets
pop
jno
repnz
nop
mov
lods
jmp
out
es
and
xchg
jp
push
or
pop
call
scas
jno
or
adc
aam
ljmp
insb
or
mov
push
test
jecxz
bound
nop
aad
add
xor
dec
xchg
enter
or
ret
inc
pop
fidivrl
and
sahf
and
push
mov
cmc
sahf
mov
popf
adcl
rcrl
mov
xchg
push
mov
or
lds
movsl
lds
loope
daa
push
loop
push
in
icebp
jmp
cmp
inc
mov
sbb
and
adc
and
test
push
xlat
jmp
lods
lock
scas
mov
jl
jne
movsb
ds
fsubs
sub
mov
jne
nop
sub
inc
popf
and
jb
add
xor
push
pop
push
je
jns
packssdw
fninit
xchg
add
pushf
dec
mov
add
sbb
aam
sub
push
lods
test
popf
or
xchg
lahf
stos
pop
adc
jbe
dec
mov
cmp
lret
aad
insb
xor
fimuls
stc
in
or
jl
pop
dec
push
or
jne
outsb
dec
ja
xor
xor
inc
cmp
fiaddl
jp
inc
xor
sub
pop
xor
mov
aaa
sbb
ret
imulb
nop
addr16
enter
mov
inc
push
sarl
pop
out
sub
push
leave
popf
adc
arpl
add
sbb
mov
mov
outsl
mov
jmp
ficoms
call
jmp
je
or
movw
lea
je
bt
pushf
pusha
or
pushf
call
push
push
pushf
movl
mov
lea
jmp
lea
call
pushf
jmp
pushf
lea
je
cmc
pushf
stc
sub
test
cmc
bt
cmc
cmp
pushf
call
add
testl
push
inc
push
sub
jecxz
cmp
push
pop
dec
or
mov
or
push
bound
loope
mov
out
mov
add
and
sub
cltd
fmuls
xchg
push
and
loopne
sbb
xchg
mov
scas
mov
sbb
cmp
lcall
cmpsl
lahf
sbb
mov
pop
inc
cltd
dec
push
and
sub
mov
push
lahf
flds
mov
add
mov
sbb
mov
fildll
movsw
in
fildll
and
pusha
jp
bound
enter
or
call
add
sub
cli
cltd
push
inc
adc
cmp
outsl
mov
iret
pop
adc
aad
mov
pop
cltd
mov
ret
lock
sbb
icebp
jae
jg
ucomiss
cmp
pop
xor
ret
insb
sbb
ss
mov
push
inc
ljmp
inc
lea
je
xchg
lea
call
or
jmp
inc
mov
or
call
pop
test
jae
int
mov
int
xchg
or
lret
and
inc
ljmp
push
and
xor
lcall
adc
sbb
outsl
mov
ret
lods
xlat
or
std
fnstenv
ficompl
int
dec
inc
xchg
pop
and
addr16
xchg
xor
cmp
cmp
mov
imul
mov
or
out
jno
xchg
lods
xor
int3
cmp
or
cmpsb
rol
mov
imul
insl
pushf
movl
mov
lea
jmp
push
cmp
pusha
lea
ja
pushf
pushf
lea
jo
imul
cmp
add
pusha
push
push
lea
jmp
pushf
lods
jmp
movl
pushl
call
or
fimuls
cwtl
call
or
stc
push
in
push
and
test
push
shrl
in
pop
ret
in
inc
inc
dec
int3
das
xchg
xor
jbe
xor
push
outsl
pusha
dec
adc
out
xchg
pop
test
add
cmp
mov
inc
or
lods
pop
dec
cli
push
aaa
cwtl
les
insl
adc
mov
xor
pop
cwtl
sahf
push
mov
xor
xor
dec
loopne
sahf
jnp
xchg
ljmp
insl
mov
stos
sbb
enter
leave
scas
cwtl
fs
mov
data16
mov
fisubl
addr16
jge
inc
bnd
add
xchg
adc
inc
out
ds
inc
jbe
movsb
sbb
jg
or
sub
ljmp
push
rcll
ljmp
into
xchg
insl
add
sti
pop
mov
xlat
les
push
in
test
dec
std
mov
stc
or
mov
and
sahf
clc
rcl
arpl
mov
movsl
or
out
lds
addr16
dec
shll
out
ret
push
fwait
cmp
add
inc
mov
mov
loope
push
jnp
aaa
cltd
insl
out
pop
pop
aad
xor
adc
ljmp
stos
cmp
bnd
jne
call
and
push
gs
out
rorl
lea
call
call
call
movw
cmp
movzwl
shr
mov
movb
stc
test
pusha
add
bt
cmp
cmc
mov
bt
test
jmp
lea
jmp
jmp
movb
cwtl
lea
pusha
mov
lahf
lea
seto
movsbl
lea
push
jmp
lea
jnp
pusha
push
lea
ja
sar
shl
rcr
rol
sub
shr
pusha
setb
call
pushf
call
stc
cmc
sub
jae
push
cmp
cmp
call
add
dec
outsl
popa
fs
imul
add
cmpsl
or
mov
lds
push
inc
sub
sub
mov
adc
stos
adc
mov
test
jno
push
jno
jl
aam
jp
out
jle
mov
xor
jmp
shrb
or
and
movsl
out
xchg
dec
cli
sbb
jmp
xchg
popl
mov
or
jno
arpl
enter
pop
sbb
mov
cmp
jb
ss
jnp
fcompp
xchg
dec
pop
pop
sub
fs
cli
aam
cld
xlat
loope
sbb
mov
int3
lea
test
stc
push
cmp
aas
sbb
lea
pop
call
adc
adc
scas
es
rclb
and
and
or
pop
fbld
dec
mov
in
adc
cwtl
call
push
or
lock
mov
cmp
idivl
mov
push
rcrl
out
jp
mov
sbbl
cwtl
inc
push
push
xchg
fsts
jg
repnz
je
in
mov
mov
ds
lods
pushf
dec
mov
lret
enter
inc
sarb
xchg
sub
fwait
ss
xlat
mov
pop
stc
mov
into
mov
sub
in
cmpsb
ja
pusha
jno
mov
dec
outsb
ret
jl
inc
and
mov
and
jo
mov
aam
push
mov
clc
cmc
repnz
movb
pusha
push
lea
jne
pusha
bswap
jmp
lea
jne
push
call
cmp
or
jno
xor
add
add
pop
push
xchg
push
fcomip
fisubrs
scas
dec
js
cmpsl
mul
push
sub
ret
xchg
push
sub
add
sbb
lds
inc
xor
mov
sbb
pop
xchg
sub
inc
mov
test
add
or
ret
mov
cmp
xchg
xchg
mov
sahf
xchg
pusha
and
jmp
pop
mov
cmp
xor
pop
fldl2e
dec
lret
hlt
cmp
dec
hlt
filds
test
xchg
lods
cmpsl
daa
cmp
xchg
push
jb
dec
lods
sbb
repnz
mov
fs
fistpl
pop
jp
in
je
mov
mov
out
push
push
jecxz
mov
pop
mov
insb
push
add
icebp
pusha
bt
cmc
cmp
jmp
cmc
bt
cmp
lea
je
pushf
lea
jae
not
mov
movsbl
mov
pusha
pushf
lea
jmp
cmc
or
jmp
inc
call
call
push
movl
lea
ja
push
pushf
push
movw
pusha
pushl
ret
mov
jmp
push
movl
pushf
lea
jmp
xchg
movsb
add
call
loope
ss
mov
leave
ljmp
or
adc
xchg
sub
lahf
je
insb
outsb
out
pusha
test
sbb
lock
loopne
loopne
das
cmp
addr16
sarl
inc
test
out
out
rep
in
ret
call
iret
insl
or
sub
pop
movsl
outsl
pop
xchg
in
gs
fdivs
mov
mov
jns
lea
jne
mov
jmp
pusha
movb
dec
jmp
push
lea
je
call
mov
call
ds
jbe
dec
ss
subb
and
lahf
inc
push
jb
addb
repnz
adc
jns
sub
in
add
in
mov
repz
imul
int3
push
jle
aad
inc
in
push
and
into
sub
daa
rolb
pop
dec
ficompl
add
fs
imul
gs
fiadds
inc
ficoml
rol
in
loope
push
dec
xor
aaa
aam
sub
outsb
inc
je
adc
pushf
out
les
jae
std
pop
xchg
pop
stos
out
push
in
call
fstpl
ljmp
cltd
pop
cmp
inc
push
sbb
aad
pavgb
mov
inc
les
jmp
outsb
cmp
repz
sbb
mov
mov
push
add
test
lea
out
lahf
notl
cld
cli
in
dec
pop
ret
sub
movsb
std
jbe
pushf
dec
and
cltd
test
sub
bound
mov
test
ret
jg
inc
and
in
fs
je
bt
cmp
pusha
lea
je
pushf
cmp
cmp
pusha
push
lea
je
pusha
pushf
movb
movw
lea
jmp
pushf
movl
movb
pusha
movw
lea
jmp
cmp
call
pushf
jmp
call
push
rol
stc
cmp
cmc
add
pushl
cmc
push
jmp
shl
jmp
pushf
jmp
mov
movb
cmp
test
pushl
lea
je
clc
pusha
call
add
movb
stc
stc
call
lea
jo
call
movsb
cmp
cwtl
call
sub
push
dec
arpl
pop
cmp
imul
repz
xor
pushf
xchg
addr16
dec
cmpsl
daa
xor
out
lret
sub
int3
xor
fidivrl
lcall
inc
dec
outsl
sbb
cmp
push
adc
rorl
out
pop
sub
inc
adc
jmp
lea
jne
setne
lea
lahf
push
mov
pushf
lea
jmp
lea
je
pusha
jmp
pushf
mov
lea
call
add
add
aas
push
xchg
mov
mov
rol
sub
push
jmp
lea
je
stc
cmc
add
pushf
stc
cmc
cmp
jmp
jmp
pusha
mov
lods
dec
inc
adc
aam
js
ljmp
mov
cltd
pop
shlb
xor
xchg
xor
pop
or
lock
mov
mov
push
std
inc
inc
or
mov
jp
and
cmp
mov
movsl
ret
push
and
pop
int3
testb
sti
jl
add
in
or
mov
shrl
inc
cmc
daa
negl
and
sets
rcr
mov
cmc
rol
clc
add
pusha
cmc
xor
pushl
clc
stc
ror
std
pushw
popfw
mov
push
pushf
push
inc
call
mov
pusha
cmc
shl
pushf
movb
movb
lea
je
pushf
pusha
call
jmp
mov
bswap
mov
pushl
mov
pushl
ret
pusha
lea
jne
adc
sar
mov
clc
call
fistpl
add
cmp
cmp
sub
mov
dec
cmpb
ror
aam
outsb
ljmp
out
insb
or
insl
or
je
out
dec
ret
adc
in
dec
pop
daa
adc
cmp
out
jne
imul
das
in
jb
std
insb
nop
insb
cmp
scas
jmp
rep
or
cltd
cmp
xchg
call
add
fwait
push
inc
jno
cmp
sub
jae
testl
add
jo
sub
mov
or
int3
out
imul
clc
repnz
aas
cmpsl
sub
cwtl
call
cld
mov
mov
sbb
mov
sub
inc
in
sbb
fs
add
mov
jge
inc
lcall
or
clc
test
jo
out
lock
ret
cmp
mov
inc
test
in
and
mov
lds
pop
leave
imul
mov
and
jp
cs
pushf
sbb
or
dec
jle
int
shl
mov
gs
movsl
mov
jmp
stc
test
lea
jnp
push
movw
movb
lea
je
jmp
adc
cmp
xchg
call
int
mov
cltd
jecxz
push
movsl
xchg
scas
adc
dec
aas
push
jb
cmc
pop
fucomip
sbb
int3
jmp
mov
adc
inc
mov
and
cs
or
popa
adc
mov
mov
xchg
inc
xchg
xor
push
sbb
cmpsl
lock
push
dec
ret
fidivs
adc
les
outsb
add
jbe
stc
pop
leave
or
sahf
into
outsb
cmpsb
and
jns
test
out
mov
leave
inc
pusha
or
lahf
jmp
mov
lds
incb
bsf
sub
mov
bt
shl
clc
push
ror
bsr
bts
push
shrd
mov
and
inc
mov
clc
bt
mov
stc
test
cmp
bt
or
call
in
xchg
call
sub
and
outsb
ljmp
shrl
dec
gs
out
jb
aaa
rcrb
pop
or
out
ds
call
fs
jnp
jnp
fstps
xor
scas
mov
mov
cmp
xor
xchg
adc
pop
fnsave
and
aaa
sub
sbb
nop
dec
cmc
out
icebp
cld
cmp
ret
add
lods
add
addb
add
xchg
push
add
add
add
lds
add
push
add
loop
add
out
push
add
lock
add
add
add
pop
pop
idiv
and
call
inc
mov
add
push
imul
sbb
xor
mov
lahf
jo
test
pop
add
mov
aad
push
dec
and
sub
mov
dec
jae,pn
jne
mov
jl
cld
mov
jno
jp
or
mov
ja
std
xchg
call
lods
push
rcrb
xchg
sub
pop
ret
bound
jae
mov
aas
neg
pop
lret
bound
mov
loope
stc
jnp
or
negb
mov
sub
mov
pop
test
jmp
je
aaa
enter
pop
and
mov
sbb
or
stos
mov
sbb
pop
ja
mov
cmc
mov
cltd
rolb
pop
iret
in
push
or
mov
mov
pop
mov
mov
dec
sarl
push
mov
pushw
aaa
sbb
mov
adc
jmp
mov
rclb
cld
loop
or
jmp
out
add
xorl
xor
pop
xor
xchg
lds
push
mov
leave
mov
mov
loop
sub
loopne
pop
push
add
push
cld
faddl
fidivrl
push
push
push
xlat
mov
and
mov
xchg
inc
shr
in
xchg
mov
sahf
loope
pop
mov
test
push
jg
pop
inc
push
dec
ret
push
out
add
sbb
inc
and
xor
xor
rol
pushf
pushf
inc
movb
neg
jmp
bt
cmc
cmp
call
movl
call
scas
mov
or
adc
add
out
out
mov
pop
dec
addr16
add
mov
push
popf
popa
std
adc
dec
loopne
lret
test
je
jno
inc
inc
sub
lods
inc
cmp
push
jmp
adc
ss
stc
es
frstor
dec
shll
in
sub
add
leave
les
insl
pop
outsl
jnp
movsb
and
out
add
xchg
call
fldenv
loopne
cli
push
arpl
or
adc
inc
test
xchg
push
mov
add
pushf
add
xchg
repnz
repz
loope
nop
and
jae
dec
jg
shr
lret
mov
pop
ret
pop
pop
andb
inc
clc
shll
jg
xor
sub
jecxz
sub
sub
sti
jae
insl
mov
mov
mov
inc
cmpb
adc
in
bound
in
in
mov
xchg
std
cmp
bound
cmp
test
mov
adc
mov
and
cmp
bt
jmp
movl
pusha
lea
jmp
jmp
call
mov
call
pop
cmc
pop
xchg
push
jge
inc
ds
out
or
mov
mov
gs
subl
pop
jae
inc
xor
xchg
out
sub
jns
std
push
icebp
or
int
pusha
imul
xlat
fldt
pop
and
in
push
pop
push
lea
je
clc
jns
cmc
pushf
add
cmp
clc
cmp
cmp
pushf
lea
jb
pushf
cmp
jmp
jmp
call
adc
dec
imul
pop
mov
rcr
adc
insb
mov
dec
mov
xchg
fnstcw
xor
mov
jle
jns
xorl
aad
fs
pop
sub
lahf
cmc
addl
xchg
cmp
mov
lds
lods
xlat
lock
test
mov
mov
sub
stc
dec
pop
rorl
mov
push
xchg
inc
out
cmp
movsb
imul
arpl
ret
adc
daa
xor
adc
loop
cmp
hlt
insb
cld
loop
das
mov
add
fstpl
xchg
das
jmp
jl
push
into
das
stc
in
pop
cmpl
jne
fnstcw
sbb
cmp
xchg
call
insl
sbb
inc
lds
pop
xor
in
notl
call
sbb
mov
pop
popf
scas
loop
mov
in
out
jge
xchg
sub
out
insb
imul
sub
and
sahf
jno
xor
ja
pusha
add
lea
stc
clc
clc
jmp
mov
call
jge
orl
pop
or
xchg
push
jb
sbb
jne
out
imul
sbb
xchg
into
cmpsl
mov
mov
lods
test
lods
sub
mov
cmp
mov
fdivr
xchg
call
mov
bt
sbbb
in
sub
pop
clc
add
loop
sbb
bound
idivb
and
push
pop
inc
mov
test
loopne
dec
cmpsb
mov
aad
add
sbb
fildl
out
push
adc
ret
adc
fwait
adc
incl
pushl
movb
lea
jmp
mov
call
jb
dec
add
or
mov
xor
js
sbb
shrl
inc
xchg
adc
pushf
das
je
test
pop
dec
test
push
pusha
mov
lahf
or
sbb
xchg
push
cs
push
mov
bts
jmp
mov
lea
jne
call
btc
movsbw
mov
adc
mov
jmp
adc
push
xchg
call
cmp
push
loopne
mov
xor
scas
mov
add
sub
je
bswap
repz
xchg
add
cltd
std
outsl
scas
sbb
mov
jmp
cmpsl
inc
and
dec
stos
jle
mov
cs
or
wrmsr
jl
or
and
adc
stos
int
cmpsb
pusha
mov
lret
xchg
icebp
push
icebp
xchg
xor
mov
adc
inc
movsb
ss
sub
xchg
ret
jb
adc
lds
rcll
loopne
test
xchg
mov
bound
mov
jns
or
pushf
shll
mov
cs
test
scas
notl
mov
sarl
add
cmp
shrl
imul
cmp
sbb
lea
inc
mov
mov
mov
push
sti
pop
jno
sahf
js
std
lds
out
dec
sbb
cmp
ret
aas
stc
movsb
fstpl
jg
jcxz
cmp
pusha
pushf
movb
movzbw
mov
lahf
call
push
pushf
lea
call
cmp
call
pushf
pushl
ret
xor
jmp
cmp
pushf
pushl
lea
jae
jmp
pushl
popl
call
pusha
test
add
call
neg
cmp
bt
cmp
call
push
repz
xchg
call
int3
ss
ret
jns
ja
push
xlat
popf
popa
sbb
loop
imul
loopne
into
js
dec
aaa
aam
loope,pn
movb
dec
dec
mov
lahf
sbb
jp
or
cmp
adc
cmpb
cmp
xlat
add
in
es
jae
adc
ljmp
xchg
lret
and
ret
pop
push
mov
and
leave
jmp
add
pushf
lahf
fmuls
cs
bt
repnz
movb
jmp
movl
call
lea
je
cmp
push
mov
clc
add
lea
bt
cmp
pusha
pusha
pushf
lea
jb
push
pushl
pushf
pushf
cmp
pusha
pushl
call
repnz
movb
pushf
lea
jne
jmp
mov
inc
stc
cmp
call
call
xor
adc
xchg
call
add
and
xor
nop
mov
rorb
clc
mov
test
das
sti
push
mov
in
xchg
add
and
xor
pushl
cmp
outsl
xchg
mov
cli
and
xor
jno
jmp
ror
cs
xchg
lret
inc
pop
imul
jle
mulb
push
and
and
lret
pop
into
jg
cmp
sbb
cmpb
xchg
jl
icebp
jg
test
cmp
jnp
xor
call
and
sbb
or
das
and
aam
arpl
mov
mov
rcll
lea
lods
imul
fs
aaa
add
inc
popa
cltd
inc
aad
fs
or
push
pop
mov
mov
jecxz
add
sbb
dec
aam
clc
and
stc
xchg
cmpb
push
dec
lret
clc
or
addr16
rorl
data16
inc
sbb
bound
shr
ja
jae
sub
loopne
repnz
or
movl
xchg
cwtl
movzbw
pushf
pop
mov
pop
seto
lea
pusha
push
mov
lahf
movl
mov
sete
movsbl
movb
lea
lea
jg
pushf
mov
movl
push
jmp
bt
or
pushf
call
cs
repz
call
sub
dec
leave
mov
xchg
or
xor
add
add
imul
mov
xchg
sub
xlat
gs
jns
popf
xchg
mov
xchg
cmp
inc
and
call
movl
pusha
mov
movb
push
pushf
pushl
ret
and
call
xor
ljmp
adc
outsl
pop
cmp
jg
shlb
int
shlb
push
cmp
cmp
ret
jl
addr16
mov
pop
jb
push
inc
push
stc
test
gs
sub
int
out
push
jle
fnstenv
subl
add
pusha
push
movw
lea
jmp
js
pushf
movl
call
or
icebp
xchg
call
es
xor
add
push
jb
push
adc
pop
lahf
push
mov
push
xchg
xlat
mov
icebp
outsl
lcall
pop
stos
and
lods
add
jg
jle
mov
inc
adc
test
icebp
pop
sbb
add
jmp
repz
xchg
es
insl
dec
outsb
mov
cmp
add
mov
xchg
cmp
mov
ss
push
mov
lret
loopne
je
pop
inc
add
mov
lods
aaa
pushf
jmp
lea
jne
pusha
jmp
mov
movl
push
lea
mov
mov
movl
jmp
pushf
call
pushf
pusha
mov
not
not
not
lods
movb
dec
clc
clc
stc
stc
rol
stc
mov
cmc
add
mov
call
ret
inc
aaa
icebp
xchg
call
cmp
pop
test
sub
out
jne
sub
or
aas
scas
adcl
int3
out
cmc
push
pop
adc
enter
add
scas
jge
jecxz
sarb
pop
aaa
mov
inc
outsl
pop
js
xchg
fadds
adc
lahf
bound
in
jae
mov
inc
mov
adc
gs
adc
dec
les
movsb
jae
and
adc
add
out
inc
popa
jbe
outsb
jnp
cwtl
dec
inc
xchg
pop
das
sub
adc
pop
sub
clc
xchg
aaa
xchg
lods
push
lret
dec
xchg
push
add
arpl
lds
mov
dec
test
push
iret
iret
dec
sbb
fiaddl
sub
les
jecxz
adc
lcall
cltd
xor
sbb
in
jo
xchg
add
std
leave
movsl
cmc
stos
sub
sbb
clc
lea
test
das
push
cmp
call
jmp
mov
xor
movzbl
push
shld
call
cmp
clc
add
push
lea
jmp
lea
jae
pusha
lea
jmp
call
pushf
aaa
lock
call
adc
loop
fadd
int
loope
aas
or
jl
dec
pop
stc
ds
leave
ret
sbb
or
aaa
pushf
insl
cltd
cmp
pop
fsts
lret
xchg
pop
xchg
dec
jmp
lds
jecxz
or
lea
inc
sub
xchg
mov
testb
rcrb
add
cwtl
sbb
aaa
inc
cwtl
push
sbb
or
sbb
push
xchg
dec
cltd
add
outsl
mov
or
add
push
bts
shl
sub
lea
jmp
push
jae
out
xchg
call
push
inc
int
push
cld
jno
xchg
mov
andb
inc
inc
jmp
subl
hlt
sbbb
stc
repz
js
sub
jae
xchg
icebp
mov
aas
movsb
lret
xchg
pop
xchg
push
test
and
fcoml
fwait
cld
sbb
dec
push
test
push
mov
mov
cld
inc
subl
jg
dec
xor
dec
idiv
lea
call
call
pusha
movl
pushf
pushf
lea
jmp
sbb
btr
mov
mov
jmp
movb
pushf
pushl
popl
pushf
push
pushf
pushl
ret
bt
jmp
jne
push
out
xchg
call
push
icebp
jp
int3
mov
jnp
sarl
data16
adc
push
daa
ret
or
clc
popf
lock
sahf
xchg
cltd
fcomps
shlb
cmpsb
cmpsl
mov
pop
sbbb
dec
mov
out
pop
leave
dec
and
and
adcb
mov
out
adc
xchg
insl
sbbb
sbb
lret
add
xchg
call
sbb
mov
lahf
cmpsl
jae
add
test
xchg
psubq
aam
or
es
pop
fs
push
lods
mov
fldl
adc
aaa
jno
enter
dec
aad
jecxz
or
les
ljmp
fdivrp
add
and
stos
arpl
movd
sbb
ret
or
insl
sub
in
test
arpl
adc
cmp
push
cmp
fsubr
cmp
push
cmp
jae
push
adc
aas
pop
cs
ficoml
xchg
cmp
fwait
out
mov
lcall
lcall
or
sub
test
xchg
in
mov
ror
jmp
xor
cs
into
in
mov
dec
aam
insl
addb
mov
addb
gs
imul
push
stc
outsb
jnp
outsb
aas
adcb
in
xchg
call
push
fdivs
dec
pop
sub
stos
repz
xchg
sub
xchg
push
fwait
loopne
xor
outsb
test
das
mov
arpl
cmp
push
out
mov
xchg
fisttps
pop
xor
testl
das
and
adc
mov
lock
in
popa
js
sbb
pop
stos
and
ret
dec
push
leave
or
or
add
mov
movsl
mov
add
and
loop
daa
mov
jecxz
jnp
xchg
pop
mov
shll
adc
lods
pushf
jmp
pusha
lea
movzwl
lea
lea
jmp
jmp
lea
jae
pushf
jmp
lahf
lahf
mov
lea
not
pop
not
call
call
in
hlt
fucomip
xchg
call
ss
inc
xor
in
inc
jecxz
into
pop
nop
sahf
push
jge
mul
fwait
or
scas
sbb
cmpsl
jecxz
sbb
mov
cmp
cmpl
mov
jbe
ljmp
and
mov
push
mov
add
jae
cmpsl
and
inc
xor
lret
cmpsl
adc
ret
mov
fstpt
cmpsb
scas
jbe
mov
daa
inc
les
inc
add
adc
or
sbb
mov
xchg
dec
in
sbb
dec
dec
or
sub
mov
stc
xchg
sarb
or
pushf
jg
xchg
sbb
push
lea
jne
jmp
aad
ljmp
outsl
pop
xor
dec
add
stos
push
repnz
inc
pop
cld
lods
sti
or
xchg
lock
cmp
enter
mov
scas
daa
mov
push
sub
cltd
lahf
cmp
inc
inc
fiaddl
stos
adc
aaa
repz
nop
mov
mov
add
pop
rclb
mov
movl
jmp
jmp
mov
movzbw
rcr
sub
shld
sar
lea
cmp
pushf
pushl
jmp
call
lea
jne
test
cmc
sub
push
mov
push
setnp
add
sar
shl
cmc
mov
cmc
pusha
bt
test
pushf
movw
movb
push
lea
jmp
rol
movw
push
jmp
cmp
and
call
mov
call
sub
rcl
jp
add
test
ret
fldenv
lcall
or
sbbb
or
int
fdivrs
adc
je
or
pop
lock
sub
arpl
inc
mov
loopne
adc
dec
rcr
lods
cld
xchg
and
pop
push
hlt
xchg
stos
xor
bound
ss
andb
pushl
mov
mov
push
nop
sbb
dec
lock
jbe
pop
mov
add
lds
mov
lea
jmp
mov
pushf
cmp
add
cmc
movzwl
not
sar
xor
mov
jmp
pusha
movl
pusha
movb
mov
movb
lea
jmp
lea
jne
clc
btr
sub
bsf
xor
and
sbb
bt
movsbw
mov
or
pushf
add
push
mov
mov
stc
pusha
call
call
pusha
mov
mov
movb
movb
movb
pushl
ret
movl
movl
push
pusha
movb
lea
jmp
pusha
push
lea
je
cmc
add
push
lea
jmp
pusha
push
mov
movsbw
movzbw
pop
pusha
push
pusha
push
pushl
ret
jmp
pushf
pushf
inc
lea
pusha
call
dec
and
stos
xchg
dec
mov
and
je
jo
inc
mov
cltd
xor
cmp
pushf
dec
inc
faddl
std
cmp
hlt
outsb
jnp
ret
pop
push
popf
push
loope
mov
push
lcall
icebp
jp
dec
xchg
xlat
std
mull
subb
ljmp
sbb
xchg
adc
rcr
lds
pop
push
rep
jnp
fisubl
out
call
add
dec
or
dec
inc
sub
aad
sbb
data16
fnsave
fs
sar
clc
inc
sahf
lret
cmpsb
je
rorb
idivb
aam
and
je
arpl
arpl
adc
mov
cmp
fs
inc
filds
bsf
bsf
mov
cmc
bt
cmpb
push
call
cmc
pushf
jmp
mov
push
movb
push
xchg
pop
movl
lahf
mov
setns
lea
jmp
dec
int3
aas
out
call
jge
add
cwtl
and
pop
inc
in
psubusb
sub
cmp
cmpsb
mov
cmp
int
pusha
push
in
stos
cmp
sbb
dec
and
shlb
mov
dec
in
pop
xor
fldenv
pop
scas
push
pop
ficoml
inc
jmp
add
call
cmc
pusha
test
test
sub
add
push
or
pushf
lea
je
pusha
jmp
in
sub
xchg
call
adc
or
push
icebp
inc
clc
pop
pop
data16
cmp
or
js
popf
pop
sub
mov
jno
lret
and
mov
roll
cmp
mov
sub
push
push
jge
idivb
jae
aaa
lret
cmpsb
push
pop
ljmp
std
cmp
or
ret
imul
mov
jo
mov
push
shrl
pop
jno
xor
js
mov
fwait
roll
add
orl
insl
movl
aas
rolb
lods
arpl
pop
fld
sbb
mov
mov
aam
mov
jmp
mov
lea
movsbw
shl
not
sar
mov
btr
bsf
lea
add
cmp
shr
xchg
xadd
mov
bsf
add
movzbw
movzbl
movzbw
movsbw
mov
jmp
movw
movl
push
pusha
lea
jmp
jmp
lea
ja
bt
imul
stc
pushf
call
pushl
jmp
pushf
shl
jmp
xchg
mov
out
cld
int
stos
sub
addr16
stc
jp
sub
push
pop
test
cs
mov
xchg
pop
inc
push
xor
pop
movl
cli
xchg
out
push
push
call
sub
pop
inc
mov
les
in
insb
or
jae
xchg
cltd
jns
pop
mov
popa
and
jmp
leave
jae
and
loope
xorl
xchg
jle
ret
int
test
leave
out
js
scas
and
mov
xor
jecxz
decl
ljmp
xchg
pop
cmp
and
movsl
and
add
xor
xchg
call
bound
pop
fildl
outsl
lds
sbb
push
push
repnz
jb
cmp
jae
sub
in
push
ret
popf
sub
push
xor
xchg
fucomip
insb
mov
pop
mov
in
xor
outsb
jnp
cwtl
repnz
pop
jbe
xchg
call
push
sbb
or
aam
inc
and
test
hlt
push
mov
pusha
pop
rorb
sbb
lock
ds
mov
mov
vpshaw
sahf
cli
dec
push
dec
jbe
mov
pop
loop
xor
pop
xchg
dec
dec
pop
jbe
or
shl
add
ss
jg
lods
test
push
dec
mov
in
aam
stos
cwtl
stc
cwtl
add
jge
out
mov
xchg
call
mov
hlt
inc
ljmp
pop
cmpsl
inc
and
dec
inc
std
call
sbb
xchg
add
xchg
loope
inc
loopne
mov
mov
mov
push
sbb
xchg
test
xchg
xor
int3
pop
adc
ret
push
sub
inc
jnp
aaa
ljmp
cmc
dec
imul
dec
ds
xchg
fadds
ja
insb
jp
idiv
dec
ficompl
sarb
stos
xchg
cltd
icebp
push
cmpsl
cwtl
stc
lock
fcomip
pushf
pushf
call
mov
call
outsl
and
sbb
repz
dec
in
in
nop
in
mov
inc
popa
aaa
xlat
test
call
mov
push
mov
int3
out
sub
xchg
cmp
inc
pop
out
outsb
jnp
stos
bound
or
cmp
test
cmp
jmp
movl
pushf
lea
jae
push
pusha
pushl
lea
jmp
pushf
lea
call
call
push
jmp
pushf
movw
pusha
mov
movl
pusha
movb
pushf
movl
pushl
pushf
lea
jmp
jmp
lea
jne
ror
shrd
shld
cmp
sub
sub
mov
clc
add
cmc
inc
ror
mov
cmp
cmp
test
push
lea
je
bt
stc
sub
test
pushf
cmc
cmc
cmp
push
pushf
pusha
push
lea
ja
stc
bt
push
imul
bt
pusha
pushf
test
add
movw
lea
jmp
lods
sbb
loope
call
flds
out
lds
int
sbbl
loopne
or
mov
xchg
ja
in
or
sbb
out
lret
pop
fstpl
mul
shll
push
imul
popf
insl
adc
or
inc
add
pop
push
in
mov
jae
push
cmp
jg
je
xchg
dec
fwait
push
dec
push
push
pushf
sar
sbb
pop
orl
sub
sbb
push
or
mov
or
xchg
push
mov
dec
arpl
nop
mov
jo
xor
xor
inc
lahf
sub
cwtl
clc
scas
mov
movsl
push
movb
bswap
mov
lahf
cwtl
bswap
call
lea
mov
xchg
movzwl
jb
lea
lea
pushf
push
bswap
mov
jmp
mov
clc
cmp
mov
test
call
es
loopne
call
rcrb
adc
js
ret
jmp
push
aad
add
pop
sub
adc
ds
cmpsb
shlb
jbe
pushf
sub
jb
sti
xchg
popf
xor
test
adc
lahf
sbb
cmpsb
dec
sub
cltd
mov
dec
adc
call
ja
cmp
cmp
xor
cmpsb
mov
std
movl
mov
pusha
lea
jmp
test
test
call
pusha
movb
lahf
bswap
mov
cwtl
cwtl
cwtl
lea
lea
jae
pushf
pushf
pusha
movl
call
mov
lea
call
pusha
stc
pusha
stc
cmp
pushf
push
jmp
test
fcomp
xchg
call
loopne
add
loope
mov
sub
cmc
cltd
fwait
out
lret
sbb
aad
pusha
lcall
hlt
mov
lea
xchg
and
adc
in
xchg
push
stos
popa
mov
mov
daa
call
mov
test
popf
clc
addr16
or
adc
fnstcw
lods
mov
jmp
fmuls
jo
xchg
cmpsl
int3
cmp
outsb
enter
fsubrs
scas
mov
cmpb
cmpsb
push
out
xor
call
jmp
call
lea
mov
push
movb
pushf
movl
mov
mov
pushf
pushf
pushl
ret
movzbl
mov
mov
movb
lea
ja
jmp
cmp
pop
fists
pop
mov
ret
and
pop
dec
or
inc
orl
popf
mull
push
jo
in
aas
ret
push
cmp
sub
dec
pop
scas
movsl
dec
in
jge
rcl
adc
sub
mov
jmp
fldcw
fnstenv
jne
jmp
mov
dec
fists
adc
mov
lret
repz
imul
addr16
inc
daa
pop
mov
call
loop
in
fadds
insb
mov
imul
adc
dec
das
dec
or
cmp
stos
add
cwtl
xchg
pop
cwtl
jg
mov
sub
sbb
sbbb
frstor
mov
mov
xchg
push
imul
fcoms
call
sub
repz
test
adc
fnsave
fwait
scas
sub
inc
and
adc
xchg
test
in
jp
or
dec
sar
and
ret
inc
int3
jecxz
or
mov
pop
mov
decb
mov
jb
lock
push
mov
xchg
and
stos
std
or
cli
sbb
jnp
pushf
aad
add
fstl
xor
jmp
mov
jle
decb
loope
dec
je
fwait
and
push
fistl
fcomps
jnp
lea
flds
insb
jecxz
out
or
stc
jge
fs
xchg
xor
mov
mov
xchg
or
repz
mov
dec
dec
push
adc
sbb
mov
or
sub
notl
out
xor
pop
js
mov
jae
mov
enter
in
pop
or
sbb
and
push
and
xchg
push
pop
out
out
outsl
cmp
sbb
fdivr
pop
daa
dec
popa
in
dec
mov
pop
push
mov
dec
mov
xor
lret
xchg
lea
add
xchg
mov
ja
add
cmp
sub
test
stc
add
bswap
stc
lea
neg
mov
not
setns
jmp
pusha
sarb
sub
add
ds
push
out
jmp
outsb
inc
repz
stos
push
and
movsb
sub
in
imul
rcrb
pushf
mov
out
pop
fdiv
nop
mov
mov
and
jp
pop
stc
loopne
std
aad
in
movsb
into
and
sub
out
lret
outsl
imul
cltd
add
not
pop
pusha
push
pushl
ret
push
stos
pushl
pusha
pushf
mov
lea
jmp
lea
jne
bswap
btc
clc
mov
cmp
lea
sub
not
rol
mov
cmc
bt
test
sub
cmc
pushl
push
pushl
cmp
call
mov
pushl
popl
push
pushl
ret
push
cmpsl
arpl
jmp
add
lods
arpl
pop
js
arpl
or
pop
jg
inc
mov
or
les
jecxz
insb
or
scas
pop
adc
fwait
rolb
insb
or
pop
mov
cmp
fldt
or
mov
sti
ja
imul
push
clc
mov
add
or
pop
pop
xchg
xor
or
pop
pop
mov
cmp
leave
arpl
mov
cmp
inc
adc
jb
or
add
es
arpl
pop
pop
in
cs
loope
insl
or
mov
or
mov
ret
insb
or
fistl
orl
pop
pop
jge
ljmp
popa
pop
pop
es
bound
cmc
pop
push
add
test
aam
and
mov
loope
pop
adc
in
ret
or
inc
mov
or
js
aam
hlt
pop
pop
fisubrl
or
mov
insb
or
pop
jge
inc
or
or
pop
jp
outsb
repz
arpl
test
push
inc
sbb
pop
pop
cmp
arpl
or
pop
shlb
or
or
adcb
jg
pop
inc
das
jns
or
dec
pop
sub
arpl
pop
pop
jp
loop
cmp
arpl
pop
pop
sub
mov
bound
hlt
pop
xor
push
dec
adc
insb
or
cmp
cs
call
or
push
das
dec
sub
lea
arpl
push
push
mov
xor
insb
or
push
pop
inc
imul
fildll
or
jp
sbb
pop
add
arpl
cwtl
push
mov
inc
pop
sub
insb
or
outsb
sbb
mov
jb
or
pop
out
loope
sub
adcl
sub
insb
or
cmp
das
inc
xor
enter
rolb
inc
clc
cmp
add
clc
rol
mov
inc
cmc
neg
bt
test
cmp
cmp
mov
movzbw
lea
pop
movsbw
mov
call
adc
jmp
jmp
pushf
sub
cmc
movw
pushf
bt
repnz
push
lea
jne
call
mov
inc
inc
inc
jmp
repnz
or
scas
in
dec
mov
sbbb
test
xchg
mov
or
mov
mov
dec
testb
xchg
shr
inc
xor
xor
imul
mov
mov
fldcw
jno
sti
adc
lock
lret
out
sub
mov
into
pop
andb
out
sub
stos
or
les
add
in
in
sub
test
sar
fcomps
sbb
xchg
sbb
das
stos
test
fcmovnu
adc
stos
std
mov
push
mov
fbstp
mov
stos
pop
push
lods
sbb
and
jb
jg
outsl
ret
push
cmp
mov
dec
xor
mov
stc
ja
dec
push
dec
jl
pop
imul
dec
mov
xor
pop
in
xchg
jnp
push
cmpl
cltd
lea
jne
shlb
imul
repnz
xchg
dec
xchg
arpl
jns
or
add
bound
int3
lcall
push
into
aad
enter
push
stc
cmc
rol
call
jb
pushf
stc
cmpb
jmp
or
je
frstor
push
aaa
ja
js
cli
mov
dec
push
sub
xlat
in
sub
inc
xchg
insb
mov
inc
push
out
and
lods
leave
es
jmp
aam
in
mov
clc
aas
push
into
add
outsb
cmp
xchg
add
push
push
pop
push
inc
push
ds
fisttpll
sub
iret
sub
pop
je
cwtl
outsb
sub
xor
add
mov
jg
sbb
xchg
mov
movl
pusha
lea
jmp
jmp
jmp
btr
btr
mov
push
mov
pushf
add
jae
add
sar
sbb
sar
btr
shr
clc
shl
neg
add
mov
or
dec
cmc
add
mov
not
mov
call
cmp
pusha
cmpb
mov
call
sub
clc
bt
repnz
jmp
xchg
push
setle
pushl
popl
pusha
mov
not
not
call
mov
call
xchg
inc
test
add
movsb
in
pop
fildl
dec
dec
js
imul
in
addr16
paddq
ljmp
adc
fldenv
jecxz
in
in
stos
ss
bound
dec
add
mov
jnp
scas
xor
adc
jns
stos
ret
test
jg
and
jae
mov
mov
scas
fnstsw
dec
outsb
push
adc
adc
jae
int3
in
and
test
jns
pop
xchg
pop
cli
push
dec
mov
jno
xchg
call
movb
mov
jmp
call
mov
call
pusha
push
pusha
mov
pushf
lea
jmp
setg
cmc
mov
stc
sub
call
mov
push
pushf
pushf
lea
jmp
sub
call
cld
call
pusha
pushl
mov
jmp
bt
stc
sub
cmc
sub
push
push
pushf
call
mov
pushf
push
push
movb
lea
jmp
jmp
mov
clc
mov
pusha
sub
pushf
lea
jne
cmc
cmc
xor
pusha
xchg
push
pusha
movl
pushl
call
movb
repz
popl
push
mov
mov
jmp
push
pusha
repz
popl
jmp
push
btc
push
mov
stc
jmp
clc
sub
clc
cmc
mov
jmp
mov
pushf
add
sub
dec
add
lea
ror
rol
dec
call
mov
cmp
clc
add
jmp
shl
shrd
shl
mov
test
stc
dec
mov
jmp
mov
movw
mov
mov
movb
pushf
mov
movl
pushl
ret
bt
cmc
pushl
ror
cmp
sub
test
mov
pushf
pushf
cmc
jmp
jmp
pushf
mov
movb
call
test
mov
call
stc
add
pushf
jmp
pushl
pushf
pushl
popl
pushl
push
push
pushf
lea
jmp
sub
pushl
pushf
pushl
pusha
inc
call
movzbw
inc
movzbw
movsbw
shld
mov
test
add
pusha
pushl
mov
pushf
movl
mov
lea
jmp
bt
xor
pushl
call
pusha
jmp
rol
pusha
movb
sub
cmp
cmp
cmp
sub
jmp
mov
bswap
pushf
mov
mov
mov
pushf
pusha
mov
push
mov
mov
lea
jmp
jmp
rol
sub
rcr
not
and
jmp
jmp
bswap
or
neg
daa
mov
shr
mov
cmc
stc
call
movb
inc
pusha
ror
jmp
clc
xor
mov
shld
push
lea
mov
clc
not
rcr
mov
pushf
mov
seto
bsr
mov
btr
mov
pushf
rcr
mov
setns
shl
shld
mov
movzbw
bt
cwtl
mov
cmc
std
or
mov
rol
push
btc
mov
cmc
std
pushl
popf
push
mov
pushf
pushl
ret
cmc
cmp
and
movl
mov
push
pushf
popl
movl
pushl
popl
push
mov
lea
jmp
pushf
pusha
mov
pushl
movb
pushf
popl
pushf
pushl
popl
movb
pushf
movw
movl
lea
jmp
sub
movb
mov
jmp
push
push
pushf
popl
lea
jno
popl
push
pushf
push
lea
jmp
push
pushf
mov
pusha
pushf
pushf
mov
mov
pushf
pushl
lea
jmp
pushl
popl
pushf
pusha
lea
jmp
not
dec
pushf
rcl
not
dec
jmp
lea
jne
bsr
rcl
movzbw
bsf
mov
pushf
push
and
call
bsr
mov
bt
add
pusha
lea
jmp
mov
jmp
mov
push
pushl
lea
jmp
movzbw
movzbw
mov
push
push
lea
push
movb
movw
mov
push
lea
jmp
sar
sbb
add
movzww
jb
clc
sub
clc
jmp
bt
sub
test
cmc
bt
xchg
cmc
mov
test
cmp
sub
pushf
jmp
dec
and
incl
pop
mov
decl
and
decl
or
mov
incl
adc
lcall
mov
jmp
sbb
std
adc
pushl
or
incl
adc
lcall
push
std
adc
ds
mov
decl
and
pushl
adc
decl
or
decl
add
mov
ljmp
mov
jmp
mov
jmp
and
incl
mov
incl
push
mov
mov
and
jmp
and
lcall
adc
lcall
push
cmp
mov
pushl
and
inc
and
decl
and
decl
add
mov
cmp
mov
decl
or
lcall
adc
jmp
pushl
mov
lcall
mov
decl
add
mov
jmp
mov
jmp
lcall
adc
ljmp
mov
lcall
pop
mov
decl
adc
mov
dec
adc
dec
adc
inc
sbb
fistps
mov
call
and
decl
and
inc
pop
mov
decl
add
mov
ljmp
mov
jmp
mov
incl
add
decl
and
decl
pop
mov
decl
sbb
decl
sbb
inc
add
lcall
mov
ds
mov
ljmp
sbb
fistps
mov
decl
add
mov
decl
add
mov
ljmp
or
ljmp
pop
mov
call
push
mov
jmp
push
decl
and
decl
and
jmp
and
ljmp
sbb
ljmp
or
pushl
pop
mov
decl
add
mov
decl
add
mov
lcall
mov
ljmp
mov
decl
mov
ljmp
or
ljmp
mov
lcall
or
jmp
add
mov
call
push
pushl
add
fistps
mov
dec
or
call
add
mov
decl
add
mov
jmp
and
jmp
inc
pop
mov
dec
or
fistps
mov
lcall
mov
decl
sbb
decl
pop
mov
jmp
and
lcall
mov
decl
pop
mov
decl
pop
mov
jmp
adc
incl
pop
mov
pushl
pop
mov
inc
pop
mov
lcall
push
mov
decl
fs
jmp
jmp
mov
pushl
lea
jmp
push
pusha
mov
pushf
mov
lea
jmp
adc
mov
pushf
sub
call
mov
jmp
mov
pusha
call
push
jmp
push
pusha
pushf
call
repz
popl
test
cmp
jmp
jmp
stc
bt
add
cmc
sub
pushf
mov
push
pusha
lea
jmp
mov
call
jmp
rol
sbb
and
ror
btc
cmp
mov
clc
jmp
jmp
pushf
mov
pushl
popl
pushl
pushl
lea
jmp
add
pushf
pushl
push
lea
jmp
shrd
not
bts
mov
push
setg
add
xor
mov
add
js
sub
cmc
jmp
cmp
stc
cwtl
cmp
sub
mov
jmp
pushf
push
mov
test
cmc
pusha
add
pushf
pushf
push
push
lea
jmp
mov
jmp
pushf
pushf
pusha
pushl
popl
pushf
lea
jmp
pusha
pushl
popl
pushf
pushf
push
lea
jmp
jmp
mov
push
pushf
lea
jmp
rcr
bsr
add
rcr
mov
stc
pusha
test
add
pushf
pushf
pushf
pushl
lea
jmp
adc
xadd
mov
cmc
xor
bsr
adc
mov
jmp
movw
mov
pusha
pushf
pushf
popl
pushf
pushf
pushl
popl
pushf
movb
pushl
push
lea
jmp
cmc
add
push
push
mov
pushf
pusha
lea
jmp
pushf
popl
mov
push
call
pushf
call
mov
push
movb
push
mov
pushl
pushl
push
mov
pusha
call
mov
push
pushf
popl
push
jmp
pushf
popl
lea
js
pushf
pushf
push
pushl
popl
movb
pusha
movw
lea
jmp
pushf
movw
lea
jne
cmc
xor
call
pusha
call
cmc
cmp
add
pushf
mov
pushf
pusha
lea
jmp
xchg
test
cmc
sub
bt
bt
cwtl
pushf
push
sub
jmp
shld
shl
stc
mov
xor
mov
call
mov
pushl
pushf
movb
pushf
lea
jmp
jmp
mov
call
add
call
mov
call
call
cmc
cmp
pusha
lea
ja
not
shld
shl
mov
rcr
rcr
lea
setnp
sub
bts
neg
lea
bswap
adc
sar
test
and
bswap
sub
lea
not
mov
not
call
or
sub
mov
push
cmc
add
jmp
btr
rcl
mov
stc
bt
clc
add
push
mov
pusha
push
lea
jmp
stc
add
push
push
movb
push
lea
jmp
jmp
aaa
mov
shr
push
movzbw
mov
bt
add
pusha
jmp
mov
call
btc
shl
rcl
bts
mov
stc
test
cmp
clc
add
pushf
pushf
lea
jmp
pushl
pushl
popl
pushl
pushl
movb
lea
jmp
push
mov
jmp
bsr
aaa
bswap
and
mov
shl
mov
cmp
not
call
pusha
rcr
mov
call
push
sub
push
and
pusha
push
call
pushf
popl
push
pushl
popl
push
push
lea
jmp
call
mov
call
mov
not
stc
call
clc
mov
neg
mov
sbb
push
neg
mov
clc
sub
jmp
mov
lea
je
push
pushf
popl
pusha
pushl
popl
mov
pusha
mov
push
lea
jmp
call
div
pusha
jmp
mov
pusha
lea
jmp
jmp
add
pushf
pusha
push
jmp
lea
push
setae
dec
bt
movsbw
call
jmp
mov
cmp
cmp
add
pusha
push
pushf
movb
lea
jmp
shl
mov
stc
sub
bt
stc
bt
add
pushf
jmp
jmp
rep
btc
mov
cmc
bts
mov
cmc
bt
pushl
popf
movb
push
lea
jmp
or
bsr
cbtw
mov
pushf
sub
call
call
push
setp
mov
jmp
inc
jmp
clc
cmc
add
pushf
mov
pushf
lea
jmp
pusha
mov
jmp
pushl
popl
push
pushf
pushl
lea
jmp
mov
movb
pusha
movw
push
lea
jmp
pusha
pushl
mov
pushf
lea
jmp
push
mov
pusha
mov
lea
jmp
shl
jmp
rdtsc
xadd
bts
mov
bt
or
bt
mov
jmp
pushf
repz
popl
call
call
sar
mov
bt
sub
jmp
call
pushl
pusha
mov
movb
lea
jmp
call
mov
push
mov
lea
jo
pusha
mov
movb
pushf
lea
jmp
jmp
mov
mov
push
mov
pusha
mov
push
lea
jmp
add
mov
cmp
sub
cmc
jmp
lea
ja
pushf
movb
lea
je
clc
cmc
sub
stc
cmp
cmp
bt
xchg
call
jae
bsr
shrd
mov
cmp
pusha
stc
sub
call
cmc
shrd
pusha
mov
lea
je
pushf
pusha
jmp
sub
bt
pushf
pushf
bt
mul
pushf
movb
mov
jmp
pushl
popl
pushl
mov
mov
push
lea
jmp
xadd
xadd
xchg
xadd
mov
shr
shl
shl
mov
pusha
cmc
stc
call
lea
pushf
jmp
mov
mov
mov
pushf
pushf
lea
jmp
pushl
popl
movw
lea
jmp
repz
popl
pushf
pushf
movb
jmp
cmp
add
cmc
call
pusha
mov
pusha
pushf
mov
pushf
pushl
mov
push
call
call
call
movw
jmp
xor
cmp
add
mov
stc
add
call
jmp
push
push
call
not
pusha
jmp
clc
cmp
test
stc
pushl
stc
call
pusha
call
call
pushf
pushf
popl
jmp
mov
pushl
call
mov
pusha
pushf
mov
mov
movw
push
mov
mov
pusha
pushf
pushf
lea
jmp
pushf
jmp
mov
pushf
mov
jmp
shr
movw
jmp
lea
pushf
popl
movzbw
pushf
std
xchg
lea
mov
not
bswap
not
movsbw
lea
pushf
pushf
movw
cld
mov
pop
lea
movzbw
lea
mov
pusha
jmp
jmp
clc
cmc
add
mov
cmc
pushl
popf
pusha
push
lea
jmp
cmp
test
or
jmp
shl
push
call
jmp
mov
push
mov
mov
lea
jmp
mov
mov
push
lea
jmp
pushf
call
jmp
push
movb
repz
popl
jmp
jmp
add
add
mov
push
pusha
push
lea
jmp
lea
pusha
pushl
jmp
inc
jmp
dec
rol
jmp
add
notl
bswap
mov
test
sub
push
and
call
shl
test
cmc
movb
shr
bt
clc
cmc
or
cmc
jmp
rcl
btr
mov
shl
cmp
mov
pusha
add
jmp
pushf
call
pusha
repz
popl
pusha
mov
jmp
call
cmc
push
shl
shl
movsbw
push
mov
stc
btc
push
cmp
push
bsf
bswap
push
shl
push
pushf
dec
rcr
mov
sub
shld
add
push
pushf
pushl
popl
xadd
cmc
cmc
push
cmc
movzbw
adc
dec
mov
rcl
bswap
xadd
adc
dec
test
add
setg
test
or
shrd
bswap
sub
mov
movsbw
sub
mov
pusha
sbb
lea
add
sbb
xchg
xchg
mov
stc
add
jmp
jmp
pushl
popl
mov
push
pushf
movw
lea
jmp
mov
pushf
pushl
mov
jmp
test
movzbl
jmp
dec
cmc
not
call
call
pushf
jmp
bswap
bswap
movzbw
push
call
movb
mov
pushf
movl
pushf
pushf
popl
pushf
lea
jp
pushf
pusha
pushl
popl
mov
lea
jmp
pusha
movb
pushf
popl
call
mov
pushf
pushf
call
adc
rol
shld
jmp
push
add
pushf
movb
pushl
lea
jmp
pusha
repz
popl
movb
movb
mov
pushl
pushl
jmp
clc
cbtw
bt
bt
cwtl
bt
pushf
sub
push
movb
push
mov
movb
mov
pushf
push
lea
jmp
lea
cpuid
pusha
sub
movb
cmc
cmpl
pushf
mov
mov
call
pushf
sub
clc
rol
clc
jmp
mov
pushf
lea
jmp
sar
btr
mov
pusha
shl
dec
mov
clc
pusha
pushf
add
call
push
pushl
pushf
call
mov
pushl
call
mov
mov
push
pushf
lea
jmp
not
cmp
mov
pushf
add
bt
sub
pushf
cmc
pushl
xor
test
clc
jmp
pushf
push
mov
push
push
call
btc
not
sbb
sub
movsbw
inc
pusha
or
shr
sub
movzbl
sub
mov
stc
neg
clc
cmp
bt
jmp
mov
mov
pushl
pushf
jmp
mov
call
mov
jmp
btr
das
not
mov
inc
aaa
mov
jmp
test
cmp
pushl
pushf
push
lea
jne
clc
not
shl
dec
xorb
push
pushf
pop
movzbl
mov
mov
push
pusha
push
lea
jmp
pushf
pusha
movb
mov
pushf
pushf
lea
jmp
mov
jmp
pusha
call
ror
pushf
dec
jmp
call
jmp
call
pushf
popl
call
jmp
jmp
call
bsr
shl
bsf
and
mov
and
bt
mov
test
pushf
push
stc
sub
bt
shr
pushf
pushl
pusha
pushl
mov
call
pushf
mov
mov
pushl
pushl
movb
lea
jmp
mov
pushf
lea
jmp
sbb
push
mov
bt
pusha
mov
cmc
jmp
pushf
mov
jmp
pusha
lea
js
push
repz
popl
jmp
call
xchg
call
stc
inc
shl
mov
cmp
pushf
cmp
cmp
add
push
push
movb
lea
jmp
movw
stc
add
pushl
mov
stc
xor
test
bt
pushf
sub
push
mov
mov
movb
pushf
mov
inc
mov
pushf
lea
jmp
call
add
mov
jmp
pushf
pushl
push
mov
push
pushf
lea
jmp
pushf
pushl
popl
pushf
lea
jmp
mov
jmp
pusha
rol
stc
mov
add
pushf
clc
mov
ror
pushf
lea
jns
pusha
add
pusha
sub
pushf
movb
mov
push
pushf
mov
lea
jmp
pushl
popl
mov
pushl
pushf
lea
jmp
push
push
mov
repz
popl
movb
call
movb
jmp
repz
popl
pushf
mov
jmp
jmp
jmp
stc
not
rdtsc
test
sub
push
lea
jo
mov
pusha
call
jmp
mov
mov
mov
pushl
jmp
mov
push
pushf
mov
lea
jmp
pusha
lea
je
test
clc
cmc
clc
xor
stc
xchg
pusha
cmp
cmc
mov
pushf
bt
sub
jmp
stc
call
push
call
mov
movb
pushl
lea
jmp
pushf
lea
jl
mov
pushf
mov
pushf
mov
mov
pusha
lea
jmp
add
pushf
mov
pusha
lea
js
pusha
movw
mov
mov
lea
jmp
cmp
shld
add
sub
rcr
xor
lea
movzbl
mov
call
test
pushf
mov
xor
mov
push
pusha
movb
dec
test
movb
cmp
call
lea
cwtl
mov
pusha
cmp
sub
jmp
sub
movb
push
mov
jmp
cmp
pusha
add
mov
pushf
pushf
mov
pushf
sub
movb
movb
movl
lea
jmp
jmp
call
bsr
bsf
pushf
mov
and
pop
movzbw
add
shld
test
sbb
movzbl
xor
bts
and
shr
sub
mov
cmp
call
jmp
pushf
neg
cmp
movzbl
stc
bt
cmc
xor
pusha
jmp
movb
repz
popl
jmp
mov
jmp
ror
mov
clc
clc
add
shl
mov
cmp
sub
push
jmp
mov
mov
pushl
mov
jmp
push
push
push
repz
popl
pushf
mov
call
push
pushf
pushf
popl
pusha
mov
lea
jge
popl
push
pusha
pusha
mov
lea
jmp
add
btc
mov
neg
pushf
cmp
movzbw
mov
and
bt
neg
neg
mov
call
mov
call
rcl
movzww
call
cmp
test
sub
pusha
jmp
repz
popl
push
jmp
cmc
bsr
shr
mov
pushf
pushf
push
bt
add
jmp
call
push
movl
pushf
push
mov
mov
pushf
pushl
ret
mov
pushl
call
setns
bt
movzbl
rol
dec
shld
xor
jmp
decl
pushf
pushf
movb
lea
jne
push
mov
movw
lea
jmp
mov
mov
jmp
call
mov
mov
movw
jmp
mov
push
jmp
pusha
call
sub
clc
bt
stc
shl
pushf
push
movl
mov
push
call
setno
mov
not
bsr
bswap
mov
push
jmp
push
pushl
popl
pushf
pushf
lea
jmp
pushf
mov
movb
mov
movl
pushf
call
jmp
call
call
mov
pushf
jmp
push
dec
call
movb
pushl
popl
movw
lea
jmp
and
cmp
push
movzbl
shld
rol
btc
sub
cmc
bts
ror
push
dec
rcr
ror
neg
sub
jmp
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
jmp
pushf
push
mov
pushf
lea
jmp
bswap
add
mov
pusha
call
movb
mov
jmp
cmc
cmp
call
pop
push
pop
mov
pusha
jmp
jmp
sar
bsr
not
shl
mov
ror
bt
sub
movzbw
inc
mov
ror
pushf
movzbw
dec
dec
rol
sub
sub
sub
call
mov
pusha
pushl
pushf
movw
mov
mov
movb
mov
call
push
pushf
call
aam
btr
mov
or
test
sar
mov
test
add
call
call
clc
pushf
cmc
add
jmp
cmc
rol
cmc
sub
pusha
clc
pushf
xchg
cmp
jmp
mov
pushl
pushf
pushf
lea
jmp
pushf
stc
test
shr
mov
jmp
ror
xor
movsbw
not
jmp
call
pushl
jmp
pushf
popl
movl
push
push
jmp
pusha
call
mov
pushl
pushf
pushf
pushl
ret
bt
bts
not
mov
rol
add
mov
mov
call
clc
not
clc
pushf
pushf
not
movw
cmc
call
cmc
jmp
rcl
test
xor
call
mov
pushf
pusha
mov
pushf
lea
jmp
pusha
call
movsbl
mov
lea
push
mov
pusha
divl
jmp
cmp
inc
movzbw
mov
stc
clc
add
push
movb
lea
jmp
sub
cmc
add
jmp
call
pushf
popl
jmp
stc
push
shl
pushl
mov
pusha
pushf
jmp
stc
pusha
sub
jmp
call
sub
mov
test
call
pushf
pushl
jmp
mov
pushf
lea
jmp
jmp
aam
lea
jmp
movb
mov
movb
pushl
pushl
lea
jmp
call
push
call
mov
pushf
call
sub
jmp
push
mov
movb
pusha
lea
jmp
mov
mov
lea
jmp
mov
push
mov
movb
lea
jmp
lea
jl
mov
pushf
pushf
popl
call
pushf
pushf
mov
call
rol
sub
movzbw
shl
mov
movsbw
shr
mov
stc
neg
shl
mov
cmc
add
cmp
clc
cmc
shld
pushf
pushl
pushf
pushf
mov
push
pusha
pushf
popl
jmp
pushf
mov
mov
pushl
lea
jmp
pushf
pushl
mov
push
pushf
pushf
pushf
lea
jmp
push
movb
pushf
popl
pushl
call
movw
mov
push
pushf
movb
mov
lea
jmp
pushf
pushf
popl
pusha
pushl
popl
pusha
lea
jmp
