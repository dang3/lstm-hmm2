jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
test
je
call
mov
call
mov
push
call
mov
ret
lea
mov
test
je
cmpl
je
mov
push
call
test
je
push
call
ret
mov
test
je
call
cmpl
je
mov
push
call
ret
nop
mov
call
ret
nop
mov
call
mov
cmp
je
test
je
push
call
ret
mov
push
mov
push
push
mov
mov
movb
movb
mov
xor
mov
xor
mov
mov
mov
test
je
mov
call
cmp
jne
call
jmp
test
jne
call
or
pop
pop
pop
ret
nop
mov
call
ret
nop
mov
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
xchg
call
ret
nop
xor
call
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
test
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
sbb
inc
add
and
add
and
add
inc
add
and
inc
add
and
add
inc
add
inc
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
inc
inc
add
inc
add
and
add
and
add
and
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
and
inc
add
and
inc
add
add
dec
inc
add
push
inc
add
inc
add
add
add
add
add
add
add
add
push
inc
jns
outsl
bound
rorb
push
inc
jns
outsl
bound
cmp
test
inc
add
add
jne
jns
outsl
bound
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
sbb
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
es
add
es
add
daa
inc
add
es
add
es
add
inc
add
inc
inc
add
es
add
add
inc
add
inc
add
inc
add
daa
inc
add
daa
inc
add
inc
add
daa
inc
add
daa
inc
add
inc
add
inc
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
inc
add
sub
je
inc
add
add
inc
add
add
inc
add
inc
inc
add
inc
add
add
add
es
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
sub
hlt
sub
cld
sub
add
inc
add
inc
add
sub
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
es
add
es
add
inc
add
inc
add
inc
add
push
inc
popa
je
dec
imul
inc
add
or
je
dec
imul
mov
add
jne
jns
outsl
bound
add
test
inc
add
add
add
adc
push
adc
pop
adc
pusha
adc
dec
adc
adc
inc
add
adc
adc
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
inc
add
inc
add
inc
add
es
add
es
add
inc
add
inc
add
es
add
es
add
inc
add
inc
inc
add
es
add
add
inc
add
inc
add
inc
add
daa
inc
add
daa
inc
add
inc
add
daa
inc
add
daa
inc
add
inc
add
inc
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
inc
add
sub
je
inc
add
add
inc
add
add
inc
add
inc
inc
add
add
add
es
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
sub
hlt
sub
cld
sub
add
inc
add
inc
add
sub
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
es
add
es
add
inc
add
inc
add
inc
add
push
inc
popa
je
dec
imul
gs
ds
add
andps
popa
dec
imul
gs
cmp
inc
add
add
jne
jns
outsl
bound
add
inc
add
add
add
pushf
jmp
inc
add
inc
add
inc
add
inc
add
inc
add
adc
sbb
inc
add
inc
add
inc
add
inc
add
inc
inc
add
add
inc
inc
add
add
inc
add
inc
add
inc
add
add
add
add
add
push
inc
popa
je
dec
imul
inc
add
or
je
dec
imul
add
add
jne
jns
outsl
bound
add
aas
inc
add
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
sbb
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
es
add
es
add
daa
inc
add
es
add
es
add
inc
add
inc
inc
add
es
add
add
inc
add
inc
add
inc
add
daa
inc
add
daa
inc
add
inc
add
daa
inc
add
daa
inc
add
inc
add
inc
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
inc
add
sub
je
inc
add
add
inc
add
add
inc
add
push
inc
add
inc
add
add
add
es
add
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
sub
hlt
sub
cld
sub
add
inc
add
inc
add
sub
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
es
add
es
add
inc
add
inc
add
inc
add
push
inc
popa
je
dec
imul
inc
add
or
je
dec
imul
add
pop
jne
jns
outsl
bound
add
mov
mov
dec
cmp
jl
mov
mov
call
call
test
je
mov
mov
call
call
call
mov
mov
call
xor
call
dec
cmp
jne
mov
call
pop
pop
ret
mov
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
xor
push
push
pushl
mov
push
mov
mov
mov
call
mov
push
push
mov
call
lea
mov
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
lea
mov
mov
call
mov
mov
mov
call
test
je
mov
jmp
mov
mov
call
mov
lea
push
lea
or
mov
call
mov
push
push
push
push
push
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
push
push
lea
push
mov
mov
mov
call
mov
push
push
push
push
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
pop
mov
pop
ret
incl
add
add
add
incl
add
add
add
add
decl
add
add
outsl
bound
call
decl
add
add
inc
popa
je
dec
imul
decl
add
add
fs
outsl
bound
add
add
mov
mov
mov
mov
call
mov
call
pop
pop
ret
lea
push
mov
push
push
push
push
push
mov
mov
mov
call
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
xor
mov
mov
call
jne
push
push
lea
push
mov
mov
mov
call
mov
push
push
push
push
mov
mov
mov
call
mov
test
jne
lea
push
lea
or
mov
call
mov
push
push
push
push
push
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
pop
ret
add
incl
add
add
add
add
decl
add
add
outsl
bound
call
decl
add
add
inc
popa
je
dec
imul
decl
add
add
fs
outsl
bound
add
add
incl
add
add
add
call
ret
mov
push
push
mov
mov
mov
mov
call
mov
call
pop
pop
ret
lea
push
mov
push
mov
mov
mov
call
mov
mov
mov
mov
call
mov
pop
ret
call
ret
mov
push
mov
mov
xchg
call
mov
pop
ret
nop
push
mov
mov
call
movb
pop
ret
nop
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
call
mov
pop
pop
pop
pop
pop
ret
call
ret
mov
push
mov
mov
call
test
je
mov
call
call
xor
mov
call
mov
call
pop
ret
push
push
push
mov
mov
push
mov
mov
mov
call
mov
mov
test
je
mov
call
mov
mov
mov
call
mov
pop
pop
pop
ret
mov
ret
mov
ret
mov
mov
ret
mov
push
mov
mov
call
movb
movb
pop
ret
mov
call
ret
mov
ret
lea
push
push
mov
mov
call
mov
call
mov
lea
mov
call
mov
pop
pop
ret
push
mov
add
mov
xor
push
push
pushl
mov
mov
call
mov
mov
push
push
mov
mov
mov
call
lea
mov
mov
call
addl
xor
pop
pop
pop
mov
push
pushl
pushl
mov
call
ret
jmp
jmp
mov
mov
pop
ret
nop
push
mov
push
mov
mov
mov
call
mov
mov
mov
mov
call
mov
pop
ret
mov
push
mov
push
push
push
push
push
mov
xor
push
push
pushl
mov
push
lea
push
mov
mov
mov
call
lea
call
lea
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
push
push
push
mov
xor
push
push
pushl
mov
cmp
jne
movl
lea
xor
mov
call
mov
mov
mov
call
call
push
lea
push
mov
mov
call
mov
mov
mov
call
lea
call
mov
mov
mov
call
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
mov
pop
ret
push
mov
push
mov
push
push
dec
jne
xchg
push
push
push
mov
lea
movsl
movsl
movsl
movsl
mov
mov
lea
call
xor
push
push
pushl
mov
cmp
jne
movl
lea
xor
mov
call
mov
lea
lea
call
mov
call
mov
mov
mov
call
mov
push
mov
mov
call
call
push
lea
push
lea
mov
mov
call
lea
mov
mov
call
mov
mov
call
mov
call
xor
mov
call
call
mov
mov
mov
call
call
add
mov
mov
push
lea
mov
mov
call
add
mov
mov
mov
call
mov
mov
call
call
mov
add
push
lea
mov
mov
call
add
push
lea
mov
mov
call
add
mov
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
mov
call
lea
call
lea
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
push
push
dec
jne
push
push
push
push
mov
mov
xor
push
push
pushl
mov
mov
mov
mov
mov
call
call
push
lea
push
mov
mov
call
mov
mov
mov
call
lea
call
mov
mov
mov
call
mov
call
mov
mov
mov
call
call
push
lea
push
mov
mov
call
mov
mov
mov
call
lea
mov
call
xor
pop
pop
pop
mov
push
lea
mov
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
push
dec
jne
push
xchg
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
movl
lea
mov
call
lea
push
mov
inc
mov
movb
lea
xor
mov
call
mov
lea
call
mov
lea
mov
mov
call
lea
lea
call
mov
call
mov
mov
add
push
mov
add
mov
mov
call
add
mov
mov
mov
call
xor
mov
mov
mov
dec
test
jl
inc
mov
movl
mov
mov
call
mov
mov
mov
cmp
je
xor
push
push
pushl
mov
lea
mov
call
lea
push
mov
inc
mov
movb
lea
xor
mov
call
mov
lea
call
mov
lea
mov
mov
call
lea
lea
call
mov
sub
jb
je
dec
je
jmp
lea
mov
call
jmp
lea
mov
mov
call
jmp
mov
mov
call
lea
mov
call
xor
pop
pop
pop
mov
jmp
jmp
lea
mov
mov
call
call
mov
mov
push
mov
call
push
lea
push
mov
mov
lea
mov
call
mov
call
add
incl
decl
jne
mov
mov
test
je
mov
push
mov
push
push
mov
mov
mov
call
mov
push
mov
mov
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
incl
add
add
insb
jne
and
in
push
mov
push
push
dec
jne
xchg
push
push
push
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
xor
mov
mov
mov
dec
test
jl
inc
xor
mov
mov
call
mov
mov
cmp
jne
mov
mov
mov
call
mov
inc
lea
mov
call
jmp
mov
sub
jb
je
dec
je
jmp
lea
mov
mov
call
mov
lea
call
jmp
mov
call
push
lea
push
mov
mov
mov
mov
mov
call
jmp
lea
mov
mov
call
mov
lea
call
lea
push
lea
mov
movb
lea
xor
mov
call
mov
lea
call
mov
push
lea
lea
call
mov
lea
call
lea
mov
pop
mov
call
mov
call
add
inc
dec
jne
mov
mov
test
je
mov
push
mov
push
push
mov
mov
mov
call
mov
push
mov
mov
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
lea
call
lea
call
lea
mov
call
lea
call
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
incl
add
add
insb
jne
and
mov
mov
mov
mov
mov
call
pop
pop
ret
mov
mov
call
ret
mov
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
call
xor
push
push
pushl
mov
xor
mov
mov
mov
call
test
jne
lea
push
push
lea
push
mov
mov
mov
call
mov
push
mov
mov
movb
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
mov
pop
call
mov
xor
xor
call
jmp
mov
mov
call
je
lea
push
push
lea
push
mov
mov
mov
call
mov
push
mov
mov
movb
mov
mov
movb
lea
mov
pop
call
mov
xor
xor
call
jmp
mov
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
mov
pop
ret
cmp
add
mov
into
repz
fs
je
mov
and
mov
and
pop
mov
mov
and
jae
and
and
les
and
and
add
add
decl
outsb
jbe
insb
imul
add
add
incl
add
add
outsl
bound
add
pushl
add
add
fs
je
mov
and
mov
movsl
and
mov
mov
and
and
les
pop
add
add
decl
outsb
jbe
insb
imul
add
add
clc
mov
push
movb
movb
lea
xor
mov
call
pop
pop
pop
ret
add
add
lcall
add
jp
fs
outsl
bound
inc
popa
je
dec
imul
jb
imul
add
push
mov
mov
call
movb
movb
movb
pop
ret
mov
push
push
push
mov
mov
call
movl
movl
mov
mov
push
push
push
push
push
push
push
push
mov
mov
mov
call
mov
mov
call
push
push
push
push
push
push
push
push
mov
mov
mov
call
mov
mov
call
mov
dec
mov
call
movb
push
push
push
push
push
push
push
push
mov
mov
mov
call
mov
mov
call
mov
dec
mov
push
push
push
push
push
push
push
push
mov
mov
mov
call
mov
mov
call
mov
dec
mov
mov
mov
call
xor
call
mov
mov
call
xor
mov
mov
mov
call
mov
call
push
push
push
push
push
push
push
push
mov
mov
mov
call
mov
mov
call
mov
dec
mov
mov
mov
call
xor
call
mov
mov
call
movl
mov
mov
call
mov
call
mov
mov
call
movl
xor
mov
mov
mov
mov
mov
call
movl
mov
mov
call
movb
pop
pop
pop
ret
add
incl
add
add
add
incl
add
mov
mov
add
add
incl
add
into
les
incl
add
shl
mov
add
incl
add
int3
stc
int
add
add
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
mov
add
add
push
inc
add
pop
inc
add
add
add
add
adc
inc
add
adc
add
inc
add
inc
add
inc
add
pop
inc
add
adc
sbb
inc
add
add
inc
add
add
inc
add
add
add
add
adc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
adc
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
inc
add
inc
add
inc
add
inc
add
pop
inc
add
adc
inc
add
pop
inc
add
adc
inc
add
pop
inc
add
add
adc
inc
add
inc
add
inc
add
pop
inc
add
add
add
inc
add
inc
add
pop
inc
add
pop
inc
add
das
inc
add
inc
add
add
add
inc
add
xor
in
xor
hlt
xor
cld
xor
add
inc
add
inc
add
das
inc
add
das
inc
add
inc
add
inc
add
add
inc
add
addr16
add
inc
add
jle
add
inc
add
add
inc
add
inc
add
addb
xor
lods
xor
adc
inc
add
inc
add
inc
add
inc
add
insb
inc
add
inc
add
inc
add
add
pop
inc
add
inc
add
add
outsb
inc
add
inc
add
outsb
inc
add
add
add
outsl
inc
add
jp
add
add
add
inc
add
inc
add
das
inc
add
das
inc
add
das
inc
add
inc
add
add
inc
add
inc
add
add
add
add
add
add
add
add
push
popa
outsb
gs
xor
add
add
pop
popa
arpl
outsb
arpl
add
add
add
popa
arpl
outsb
cmp
add
add
pop
popa
arpl
jbe
inc
add
add
add
popa
arpl
fs
outsl
jo
inc
add
add
add
arpl
fs
outsb
jae
jb
dec
add
add
add
popa
arpl
insb
gs
dec
add
add
add
popa
arpl
gs
jb
add
add
add
push
popa
outsb
gs
xor
add
add
push
popa
outsb
gs
xor
add
add
push
jae
dec
outsb
jne
add
add
add
jo
insb
inc
popa
je
pusha
add
add
add
push
popa
outsb
gs
xor
add
add
add
push
popa
outsb
gs
ss
add
bound
jne
jb
insb
add
add
dec
je
insl
dec
inc
jo
add
add
dec
je
insl
dec
popa
insl
gs
add
push
add
gs
je
insl
dec
inc
js
add
push
add
gs
je
insl
dec
popa
insl
gs
add
add
pop
jo
insb
dec
outsb
jne
add
add
add
je
gs
outsb
jne
add
add
add
gs
popa
addr16
outsl
mov
add
add
pop
bound
jb
jbe
add
add
pop
bound
gs
nop
add
add
add
addr16
outsl
jne
je
add
add
add
popa
arpl
gs
cwtl
add
add
add
arpl
je
push
pushf
add
add
or
outsb
inc
fs
outsl
jo
mov
add
je
inc
fs
outsb
jae
jb
movsb
add
add
or
outsb
inc
insb
gs
jb
add
add
or
outsb
inc
gs
gs
lods
add
add
or
je
inc
popa
je
push
mov
add
add
or
outsb
inc
js
outsl
jb
mov
add
add
or
outsb
dec
insl
jo
jb
mov
add
popa
arpl
jo
jb
mov
add
popa
arpl
jo
jb
rolb
add
pop
bound
jo
outsb
les
add
add
pop
bound
popa
jbe
enter
add
or
outsb
push
outsl
outsl
insb
jae
add
add
add
popa
arpl
inc
push
add
add
or
outsb
dec
inc
inc
push
add
add
popa
arpl
outsb
inc
js
arpl
gs
add
popa
arpl
jbe
inc
js
arpl
adc
sbb
inc
add
je
push
jb
jbe
insb
imul
inc
add
je
dec
gs
inc
insb
imul
inc
add
popa
arpl
insb
gs
inc
js
arpl
gs
add
inc
add
popa
arpl
gs
jb
js
arpl
gs
add
jns
add
popa
arpl
gs
inc
js
arpl
gs
add
fs
popa
addr16
outsl
dec
gs
outsl
ja
sbb
cmpb
adc
je
fs
outsb
jae
jb
inc
js
arpl
sbb
cwtl
jp
add
popa
arpl
fs
outsl
jo
inc
js
arpl
sbb
sarb
adc
je
popa
je
push
inc
js
arpl
gs
add
jnp
add
popa
arpl
jo
jb
inc
js
arpl
gs
add
inc
add
popa
arpl
jo
jb
inc
js
arpl
gs
pop
jnp
add
outsl
outsl
insb
jae
insb
imul
inc
add
popa
arpl
inc
push
js
arpl
sbb
inc
addb
push
jb
gs
jne
je
insl
inc
jb
ja
gs
insb
or
jns
outsl
bound
outsl
jb
or
mov
inc
add
add
inc
add
inc
add
loopne
add
loopne
add
inc
add
or
jns
outsl
bound
outsl
jb
mov
out
inc
add
or
jns
outsl
bound
outsl
jb
add
lea
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
sub
jb
jne
mov
mov
mov
call
mov
test
je
mov
mov
call
lea
push
mov
mov
call
mov
movb
lea
xor
mov
call
mov
mov
mov
call
jmp
mov
call
test
jle
xor
mov
call
mov
mov
call
jmp
jmp
push
dec
and
or
add
add
add
push
dec
and
jmp
cwtl
mov
test
mov
mov
mov
clc
pushf
call
bt
clc
sub
pushf
lea
jmp
mov
pushf
pushf
push
lea
jmp
call
movb
call
pusha
jmp
push
dec
and
or
add
add
and
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
mov
pop
ret
add
add
lcall
add
add
ljmp
mov
enter
mov
and
mov
mov
push
push
dec
jne
push
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
mov
mov
mov
dec
test
jl
inc
mov
xor
mov
mov
call
mov
movl
mov
mov
call
mov
movl
mov
mov
call
mov
movl
mov
mov
call
mov
mov
mov
call
inc
decl
jne
mov
mov
cmpb
je
xor
push
push
pushl
mov
mov
mov
call
mov
lea
push
mov
mov
mov
movb
lea
xor
mov
call
mov
mov
mov
call
mov
mov
dec
test
jl
inc
mov
xor
mov
mov
call
mov
mov
mov
call
push
mov
call
pop
cmp
jne
lea
mov
call
jmp
lea
push
mov
mov
call
push
mov
call
pop
sub
mov
movb
lea
xor
mov
call
lea
push
push
lea
push
mov
mov
mov
call
mov
mov
movb
push
lea
push
mov
mov
mov
call
mov
mov
movb
push
lea
push
lea
push
mov
mov
call
mov
movb
lea
xor
mov
call
mov
mov
mov
call
mov
mov
movb
push
lea
push
lea
push
mov
mov
movb
lea
xor
mov
call
mov
mov
mov
call
mov
mov
movb
push
lea
push
lea
push
lea
mov
movb
lea
xor
mov
call
mov
mov
mov
call
mov
mov
movb
push
lea
push
lea
push
lea
mov
movb
lea
xor
mov
call
mov
mov
mov
call
mov
mov
movb
push
lea
push
lea
push
lea
mov
movb
lea
xor
mov
call
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
lea
mov
mov
call
mov
mov
mov
call
inc
decl
jne
xor
pop
pop
pop
mov
push
lea
push
mov
mov
mov
movb
lea
mov
call
mov
mov
movb
lea
mov
mov
call
mov
mov
mov
call
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
lea
call
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
decl
add
add
jb
imul
add
incl
add
add
incl
add
add
sub
add
incl
add
add
add
add
incl
add
add
add
add
jae
and
outsl
arpl
and
sarl
mov
and
lret
and
mov
cmp
and
shr
mov
add
decl
add
add
je,pn
je
add
push
mov
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
nop
push
mov
mov
push
push
dec
jne
push
push
mov
xor
push
push
pushl
mov
jmp
push
dec
and
or
add
add
add
push
dec
and
jmp
shr
xchg
cmc
neg
push
sbb
bswap
or
push
ror
pushl
seta
and
test
push
rol
clc
mov
shl
shrd
add
ror
btr
btc
bsf
bswap
xchg
xor
xchg
mov
movsbl
lea
not
sub
test
mov
xadd
mov
ror
lea
shrd
lea
add
test
btc
rcl
mov
neg
adc
inc
xor
not
rol
call
mov
mov
movzbw
push
call
pushf
sete
pusha
mov
pushf
call
mov
movw
pushf
pushf
lea
jmp
cmc
xchg
movb
mov
stc
test
sub
pushf
lea
jno
pushf
lea
jne
jmp
pushl
popl
pusha
lea
jmp
xor
pushf
call
rol
pusha
jmp
push
mov
pushf
pusha
push
jmp
call
pusha
mov
pushf
mov
call
pushf
lea
jne
sub
mov
push
and
call
movzbl
mov
pushf
call
call
mov
mov
add
call
call
add
add
jmp
push
dec
and
or
add
add
and
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
jmp
add
push
outsl
outsl
je
dec
imul
imul
and
outsb
inc
imul
add
add
call
add
add
les
aam
mov
in
mov
and
push
mov
mov
push
push
dec
jne
push
mov
xor
push
push
pushl
mov
jmp
push
dec
and
or
add
add
add
push
dec
and
jmp
cmc
ror
mov
add
cmc
clc
stc
neg
stc
pushf
clc
cmp
sub
bt
cmc
cwtl
test
clc
pushl
test
sub
pushf
jmp
lea
jne
call
neg
xor
bsr
xor
or
stc
call
pusha
movb
lea
jnp
pushf
pusha
pusha
pushl
popl
pushf
lea
jmp
add
pushf
push
call
call
rcl
and
shl
btc
and
mov
clc
bt
pushf
pusha
sub
push
mov
pushf
push
mov
push
pushf
lea
jmp
pusha
mov
movb
jmp
mov
push
pushf
pushf
mov
mov
jmp
movl
movb
mov
pushf
mov
xchg
pop
jmp
pushf
popl
jmp
pushf
pushf
pushf
mov
pusha
push
push
lea
jmp
pushl
popl
pushl
mov
mov
lea
jmp
pushf
popl
mov
pushl
popl
pushf
push
pushl
push
lea
jmp
mov
movb
mov
pusha
jmp
call
jmp
movzbw
mov
not
bswap
pushf
popl
shrd
xchg
bswap
pushf
or
mov
clc
neg
not
mov
adc
add
pushl
rcr
push
call
sub
call
shl
call
aaa
iret
jmp
push
dec
and
or
add
add
and
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
jmp
add
push
outsl
outsl
je
dec
imul
imul
and
jbe
inc
imul
add
add
lcall
add
add
leave
mov
mov
mov
mov
and
add
decl
add
add
leave
mov
add
fsubr
adc
and
or
add
add
add
push
dec
and
jmp
mov
movw
pushf
lea
jmp
xor
and
sub
lea
stc
call
mov
pushf
movl
pushl
lea
jmp
mov
mov
lea
jmp
jmp
jmp
push
dec
and
or
add
add
and
pop
ret
add
add
ljmp
add
jns
inc
dec
inc
dec
xor
addr16
dec
inc
push
xor
push
imul
xor
fs
jp
push
inc
inc
jp
inc
push
push
push
inc
push
push
dec
add
add
cmp
add
cmp
inc
inc
dec
jns
imul
push
jp
push
js
push
xor
push
jp
inc
js
push
inc
dec
inc
dec
inc
push
inc
push
inc
push
push
push
xor
dec
xor
push
dec
add
add
ljmp
add
cmp
push
jp
xor
dec
push
push
xor
push
inc
js
push
inc
push
push
dec
inc
push
inc
dec
inc
dec
inc
dec
xor
dec
inc
dec
jp
add
add
call
add
inc
dec
ja
xor
arpl
jp
inc
dec
xor
push
push
inc
push
push
dec
inc
push
push
dec
jns
push
push
inc
push
push
push
inc
push
push
dec
inc
dec
xor
dec
inc
dec
js
inc
push
jns
push
dec
jp
push
xor
dec
inc
push
push
jns
inc
dec
inc
push
push
dec
xor
dec
add
add
push
mov
mov
incl
mov
mov
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
jmp
push
dec
and
or
add
add
add
push
dec
and
jmp
pushf
pop
mov
not
push
call
cmc
mov
jmp
test
sub
call
pushf
popl
call
mov
movb
pushf
lea
jmp
stc
mov
mov
jmp
setnp
mov
jmp
pusha
pushf
pushf
mov
call
pusha
mov
jmp
cmp
add
stc
sub
jmp
bswap
mov
push
shl
dec
add
jmp
mov
call
mov
jmp
bswap
mov
pusha
mov
pushf
jmp
stc
neg
mov
sar
sbb
rol
mov
jmp
pushf
pushl
popl
push
pushf
lea
jmp
test
movb
shr
mov
pushl
pusha
mov
mov
pushf
popl
movw
jmp
mov
push
push
movb
mov
lea
jmp
inc
clc
movl
add
clc
pushf
pushf
sub
call
test
clc
shl
push
pushf
pusha
push
mov
pushf
push
pushf
popl
call
btr
xchg
mov
ror
mov
pushf
jmp
movl
call
call
aad
test
and
aad
mov
sbb
mov
call
jmp
lea
mov
inc
sbb
mov
adc
cmp
sbb
shl
mov
btc
pushl
popl
add
movl
btc
bswap
xadd
call
dec
lea
pop
inc
bswap
lea
inc
cmp
lahf
sub
ror
bt
lahf
aas
lea
shrd
adc
btr
and
shl
btc
cmp
sub
pushf
lea
pop
lea
mov
bswap
movsbw
lea
movsbw
pushf
bswap
jmp
sub
add
jbe
test
pusha
cmc
mov
clc
stc
sub
pushl
pusha
pushf
lea
jmp
pushf
push
pushf
mov
push
push
pushl
ret
push
pusha
pushl
push
mov
mov
mov
pushf
mov
jmp
mov
call
jmp
call
call
pushf
call
jmp
push
dec
and
or
add
add
and
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
call
mov
mov
call
mov
xor
mov
mov
call
mov
mov
mov
push
push
push
push
push
push
push
push
mov
mov
mov
call
mov
mov
call
push
push
push
push
push
push
push
push
mov
mov
mov
call
mov
mov
call
push
push
push
push
push
push
push
push
mov
mov
mov
call
mov
mov
call
xor
mov
call
movl
xor
mov
call
movl
mov
mov
call
xor
mov
mov
mov
call
movl
mov
mov
call
movl
mov
mov
call
movl
mov
dec
test
jl
inc
xor
mov
mov
call
mov
call
inc
dec
jne
mov
mov
mov
mov
call
mov
mov
mov
call
pop
pop
pop
pop
ret
add
add
incl
add
shl
mov
add
incl
add
ret
sti
mov
add
add
incl
add
lret
mov
push
push
mov
mov
test
je
call
xor
mov
mov
test
je
call
xor
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
call
pop
pop
ret
push
mov
mov
mov
mov
call
pop
ret
push
mov
mov
mov
call
pop
ret
add
add
call
add
add
popa
insl
imul
je
cs
je
add
fimull
jmp
call
pop
ret
push
push
push
mov
mov
mov
mov
call
cmp
je
mov
test
je
mov
call
cmp
jne
mov
mov
call
pop
pop
pop
ret
nop
push
mov
push
mov
push
push
dec
jne
push
xchg
push
push
push
mov
mov
mov
xor
push
push
pushl
mov
test
je
mov
mov
xor
mov
call
cmpb
je
xor
mov
call
mov
push
lea
mov
call
lea
mov
pop
call
mov
mov
call
cmpb
je
mov
mov
call
mov
push
lea
mov
call
lea
mov
pop
call
mov
mov
call
cmpb
je
lea
push
mov
mov
movb
lea
xor
mov
call
mov
lea
call
lea
push
mov
mov
call
mov
mov
pop
call
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
mov
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
mov
add
push
push
xor
mov
mov
mov
xor
push
push
pushl
mov
test
je
mov
mov
call
test
jne
mov
mov
mov
test
jle
mov
mov
mov
cmp
jg
lea
push
mov
movb
lea
xor
mov
call
mov
xor
mov
call
cmp
jne
xor
push
push
pushl
mov
mov
mov
xor
mov
call
mov
call
test
jne
mov
mov
mov
mov
call
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
call
mov
mov
movl
mov
call
call
or
push
mov
call
pop
call
mov
call
call
mov
call
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
lea
push
mov
mov
call
mov
movb
lea
xor
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
mov
mov
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
cmp
scas
mov
mov
mov
stos
mov
sub
mov
sub
fmul
mov
in
enter
std
mov
icebp
mov
aam
mov
add
and
lcall
add
add
ljmp
mov
enter
mov
and
mov
xor
push
push
push
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
pushl
mov
test
jne
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
lea
mov
call
cmpl
setne
mov
mov
call
lea
mov
call
cmpl
setne
mov
mov
call
mov
mov
test
je
call
mov
lea
push
mov
movb
lea
xor
mov
call
mov
mov
call
lea
push
mov
mov
movb
lea
xor
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
lea
mov
call
cmpl
setne
mov
mov
call
lea
mov
call
cmpl
setne
mov
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
mov
xor
mov
call
cmpb
jne
cmpb
jne
xor
jmp
mov
mov
call
mov
xor
mov
call
mov
xor
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
add
mov
add
push
push
xor
mov
mov
mov
xor
push
push
pushl
mov
lea
push
mov
mov
movb
lea
xor
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
add
incl
add
add
nop
aam
add
test
je
mov
dec
mov
mov
call
ret
mov
test
je
mov
inc
mov
mov
call
ret
push
mov
add
push
push
xor
mov
mov
mov
xor
push
push
pushl
mov
lea
push
mov
movb
lea
xor
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
incl
add
add
push
push
mov
test
je
test
je
mov
call
mov
mov
dec
test
jl
inc
xor
mov
mov
call
cmpb
je
mov
mov
call
push
mov
call
mov
mov
pop
call
inc
dec
jne
jmp
mov
call
mov
dec
test
jl
inc
xor
mov
mov
call
mov
push
mov
mov
call
mov
mov
pop
call
inc
dec
jne
pop
pop
pop
ret
lea
push
mov
add
push
push
xor
mov
mov
xor
push
push
pushl
mov
mov
test
je
mov
call
mov
call
dec
jl
lea
push
mov
call
mov
call
mov
movb
lea
xor
mov
call
mov
xor
mov
call
cmp
jne
mov
test
je
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
add
jmp
add
add
and
cli
lret
icebp
enter
shrb
shll
and
mov
add
in
push
push
mov
xor
push
push
pushl
mov
cmpl
je
lea
push
lea
or
mov
call
mov
xor
mov
call
cmp
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
lcall
add
add
and
cli
lret
icebp
enter
shrb
lret
stc
rcl
mov
add
in
push
push
push
push
push
mov
xor
push
push
pushl
mov
cmpl
je
mov
mov
call
test
je
lea
mov
call
mov
mov
call
test
je
lea
mov
call
mov
push
mov
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
nop
push
mov
add
push
xor
mov
mov
mov
xor
push
push
pushl
mov
cmpw
jne
cmpl
je
lea
mov
call
mov
lea
call
test
jne
mov
mov
mov
lea
push
mov
mov
movb
lea
xor
mov
call
mov
mov
call
jmp
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
mov
pop
ret
add
incl
add
add
mov
test
je
mov
mov
call
pop
ret
nop
push
mov
test
je
mov
mov
call
pop
ret
nop
mov
mov
call
ret
mov
push
mov
test
je
mov
mov
call
pop
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
test
je
mov
call
cmp
jne
mov
mov
call
test
je
mov
mov
mov
mov
call
pop
pop
pop
ret
mov
mov
test
je
mov
mov
call
ret
lea
mov
test
je
mov
mov
call
ret
lea
mov
call
ret
lea
mov
mov
ret
mov
push
push
mov
mov
mov
mov
call
mov
mov
call
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
push
push
push
push
mov
xor
push
push
pushl
mov
mov
call
xor
mov
mov
call
lea
mov
call
lea
call
lea
call
xor
movb
xor
push
push
pushl
mov
xor
mov
mov
call
mov
mov
call
push
lea
push
lea
or
mov
call
mov
push
push
mov
xor
mov
mov
call
mov
mov
call
mov
push
mov
push
mov
push
lea
push
push
push
mov
push
lea
lea
mov
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
call
add
add
gs
outsb
je
insl
outsl
fs
jae
jo
imul
lcall
add
add
jmp
aam
repz
fidivrl
dec
into
les
add
in
push
push
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
jmp
push
dec
and
or
add
add
add
push
dec
and
jmp
push
jmp
push
inc
jmp
rcrl
mov
mov
mov
call
mov
jmp
call
pusha
jmp
mov
xchg
jmp
push
dec
and
or
add
add
and
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
jmp
push
dec
and
or
add
add
add
push
dec
and
jmp
lea
cpuid
cmp
push
sub
jmp
mov
mov
mov
call
mov
jmp
shld
call
call
dec
jmp
push
dec
and
or
add
add
and
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
jmp
push
dec
and
or
add
add
add
push
dec
and
jmp
bt
push
cbtw
jmp
in
mov
mov
mov
call
mov
jmp
pusha
push
mov
call
cmp
test
and
or
add
add
and
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
mov
mov
mov
call
xor
push
push
pushl
mov
jmp
push
dec
and
or
add
add
add
push
dec
and
jmp
xchg
lea
movsbw
jmp
mov
mov
mov
call
mov
jmp
xorb
pushl
jmp
add
adc
and
or
add
add
and
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
call
test
je
mov
mov
call
mov
cmp
jne
mov
call
mov
mov
call
pop
pop
pop
ret
push
mov
add
push
push
push
mov
lea
movsl
movsl
mov
test
jle
mov
mov
mov
call
jmp
test
jge
mov
mov
mov
call
pop
pop
pop
pop
pop
pop
ret
nop
mov
test
je
mov
mov
call
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movsl
movsl
movsl
movsl
mov
mov
mov
xor
push
push
pushl
mov
mov
test
je
mov
mov
call
mov
test
je
mov
mov
cmpl
je
mov
mov
mov
mov
call
mov
cmp
jne
lea
mov
call
mov
call
test
jne
lea
mov
call
lea
mov
mov
call
lea
push
lea
call
mov
mov
movb
lea
mov
call
mov
lea
call
mov
lea
mov
call
mov
mov
movb
lea
mov
mov
call
mov
mov
movb
lea
mov
mov
call
mov
xor
mov
push
mov
push
mov
push
lea
push
push
push
push
lea
lea
mov
call
mov
test
je
lea
mov
call
jmp
mov
xor
push
push
pushl
mov
mov
mov
call
mov
xor
push
push
pushl
mov
dec
jne
mov
mov
mov
call
lea
mov
mov
call
mov
movb
xor
pop
pop
pop
mov
jmp
jmp
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
call
add
add
gs
outsb
je
insl
outsl
fs
jae
jo
imul
incl
add
add
add
incl
add
cs
add
add
incl
add
add
and
in
xor
push
push
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
pushl
mov
mov
test
je
mov
mov
call
mov
mov
mov
call
test
je
mov
mov
call
mov
mov
call
mov
cmpl
je
mov
mov
mov
call
mov
mov
call
cmpl
je
mov
mov
mov
call
mov
cmp
jne
mov
mov
mov
mov
call
lea
call
lea
mov
mov
call
lea
call
lea
mov
call
mov
push
mov
push
mov
push
push
push
push
lea
mov
mov
call
test
je
lea
call
mov
mov
mov
mov
call
push
mov
mov
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
incl
add
add
int3
stc
int
add
in
mov
push
push
dec
jne
push
push
push
mov
mov
xor
push
push
pushl
mov
lea
mov
mov
call
lea
push
lea
call
mov
mov
movb
lea
mov
mov
mov
call
mov
lea
call
mov
lea
mov
call
mov
mov
movb
lea
mov
mov
call
mov
mov
movb
lea
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
incl
add
add
add
incl
add
cs
add
add
incl
add
add
and
in
push
mov
push
push
dec
jne
xchg
push
push
push
mov
lea
movsl
movsl
movsl
movsl
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
mov
call
test
je
mov
mov
call
mov
mov
call
test
jne
mov
call
mov
or
mov
call
mov
mov
test
je
mov
cmpl
je
mov
mov
mov
call
mov
mov
cmp
jne
push
lea
mov
call
pop
mov
lea
call
mov
call
test
jne
lea
mov
call
lea
mov
mov
call
lea
push
lea
call
mov
mov
movb
lea
mov
mov
call
mov
lea
call
mov
lea
mov
call
mov
mov
movb
lea
mov
mov
call
mov
mov
movb
lea
mov
mov
call
mov
xor
mov
push
mov
push
mov
push
lea
push
push
push
push
mov
add
mov
add
mov
call
mov
jmp
mov
xor
push
push
pushl
mov
mov
mov
call
mov
xor
push
push
pushl
mov
dec
jne
mov
mov
mov
call
lea
mov
mov
call
mov
movb
xor
pop
pop
pop
mov
jmp
jmp
call
xor
pop
pop
pop
mov
push
mov
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
add
add
add
call
add
add
gs
outsb
je
insl
outsl
fs
jae
jo
imul
incl
add
add
add
incl
add
cs
add
add
incl
add
add
and
in
xor
push
push
pushl
mov
incl
jne
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
jae
mov
call
ret
xchg
add
jo
inc
add
inc
add
adc
cmp
inc
add
adc
jl
inc
add
add
add
inc
add
inc
add
inc
add
adc
hlt
adc
in
adc
fs
add
add
add
add
inc
add
inc
add
adc
add
adc
add
adc
add
adc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
push
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
sbb
mov
sbb
lods
sbb
jl
inc
add
add
add
inc
add
sbb
mov
sbb
test
inc
add
add
add
add
inc
add
inc
add
sbb
int3
sbb
pushf
sbb
add
inc
add
sbb
dec
sbb
inc
sbb
or
inc
add
inc
add
sbb
hlt
sbb
in
sbb
in
inc
add
sbb
les
inc
add
inc
add
inc
add
inc
add
sbb
aam
inc
add
inc
add
sbb
int3
sbb
movsb
sbb
pushf
sbb
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
inc
add
push
inc
add
inc
add
add
add
inc
add
and
int3
and
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
add
add
and
aam
inc
add
and
les
inc
add
inc
add
and
hlt
and
sbb
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
and
in
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
and
hlt
and
in
and
in
inc
add
and
les
inc
add
and
aam
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
and
fsubl
inc
add
and
int3
and
les
inc
add
inc
add
inc
add
inc
add
add
sbb
add
sbb
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
and
hlt
and
and
pop
and
mov
and
or
inc
add
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
add
cmp
fdivrl
inc
add
cmp
int3
cmp
les
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
hlt
cmp
in
cmp
adc
inc
add
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
inc
add
aaa
inc
add
aaa
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
push
inc
add
push
inc
add
inc
add
inc
add
add
add
add
add
sbb
inc
add
sbb
inc
add
inc
add
sbb
inc
add
sbb
inc
add
inc
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
sub
in
sub
inc
sub
cmp
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
cs
add
cs
add
inc
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
inc
add
inc
add
sub
inc
add
inc
add
inc
add
inc
add
sub
inc
add
sub
inc
add
sub
inc
add
sub
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
add
add
inc
add
inc
add
sub
int3
sub
push
sub
inc
add
sub
in
sub
adc
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
sub
in
inc
add
sub
push
sub
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
hlt
sub
in
sub
in
inc
add
sub
aam
inc
add
sub
les
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
sub
mov
sub
dec
sub
fs
inc
add
inc
add
inc
add
inc
add
sub
xor
inc
add
inc
add
sub
fsubrl
inc
add
sub
int3
sub
les
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
inc
add
ss
add
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
hlt
xor
in
xor
in
inc
add
xor
aam
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
les
inc
add
add
add
add
add
add
add
inc
add
add
add
inc
add
inc
add
xor
in
inc
add
inc
add
inc
add
inc
add
inc
add
xor
aam
inc
add
xor
les
inc
add
inc
add
inc
add
add
add
xor
hlt
xor
pushf
xor
xchg
xor
mov
inc
add
inc
add
add
add
add
add
add
inc
add
inc
add
xor
les
inc
add
inc
add
inc
add
inc
add
xor
hlt
xor
lods
xor
movsb
xor
in
xor
in
inc
add
inc
add
xor
aam
inc
add
inc
add
inc
add
xor
inc
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
xor
inc
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
xor
add
xor
add
add
add
add
add
inc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
add
inc
add
add
add
inc
add
inc
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
add
inc
add
inc
add
add
add
aaa
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
add
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
sbb
hlt
sbb
dec
push
inc
add
inc
add
mov
mov
ret
mov
mov
call
ret
nop
mov
call
ret
nop
jmp
lea
mov
movsbw
pop
movsbw
pushf
popl
clc
rcl
mov
xchg
stc
mov
not
cmp
call
shr
clc
mov
push
pusha
sub
pushl
pushf
pushf
movw
mov
push
pushf
pushf
lea
jmp
clc
sub
pushf
lea
jne
call
lea
jne
xor
bsf
mov
pusha
and
push
stc
mov
mov
cmp
mov
push
pushf
mov
lea
jne
pusha
rcr
pusha
clc
xorb
lea
movsbl
movsbw
pushf
mov
mov
pushf
pusha
lea
jmp
movb
mov
movb
lea
jmp
bt
shl
pushf
and
mov
clc
sub
stc
stc
push
rol
pushf
movw
cmp
add
jl
add
pusha
call
pushf
pushf
popl
push
pushf
pushf
pushf
pushl
popl
pushl
movb
pushf
pushf
lea
jmp
btr
mov
bt
add
pusha
pushl
mov
pusha
lea
jmp
pusha
mov
movb
pusha
push
lea
jmp
pushf
pushf
mov
push
pusha
mov
pushl
mov
pusha
mov
pushl
lea
jmp
mov
lea
pushf
pop
push
pushf
popl
xor
shrd
push
xor
mov
movzbw
shr
dec
mov
sub
or
mov
bsr
pushl
popl
stc
bsr
movl
bts
pusha
mov
btr
add
not
and
bswap
btc
test
xor
cmp
btc
lea
stc
cmp
jmp
pushl
popl
pushl
push
lea
jmp
bt
or
xadd
mov
sbb
sbb
mov
cmp
sub
test
push
cmp
shr
pusha
movb
mov
pushl
pushl
pushl
jmp
mov
mov
push
mov
lea
jmp
pusha
push
push
mov
pushl
pushf
mov
bswap
pushf
popl
jmp
pushf
pushf
pushf
mov
jmp
movw
movl
mov
stc
sub
jmp
add
jmp
adc
movzbl
jmp
push
mov
call
call
pushf
movb
pushl
popl
movb
lea
jmp
pushf
pushf
mov
pushf
jmp
mov
mov
call
mov
bt
inc
shl
lea
mov
setge
mov
aad
rdtsc
cld
mov
call
mov
pushf
inc
stc
pushf
pushl
call
jmp
mov
cmc
mov
shl
sub
bswap
rol
shld
rol
bts
sbb
xor
not
bswap
inc
pushf
not
call
mov
pusha
movb
push
lea
jmp
pop
lea
call
pushl
add
movb
pushf
lea
jmp
clc
pusha
pusha
jmp
call
sar
das
cwtl
adc
mov
bt
bt
add
call
and
call
bt
bt
sub
cmc
stc
jmp
js
pusha
movb
mov
mov
pusha
movb
pushf
mov
pushf
pushf
mov
call
not
mov
mov
pushf
add
lea
js
mov
push
pushf
lea
jmp
pushf
popl
jmp
mov
pushf
movb
push
mov
lea
jmp
mov
push
pusha
push
lea
jmp
movzbw
mov
pop
mov
movzbw
pushf
popl
rol
bswap
push
rcr
xchg
pop
mov
shl
movsbw
mov
shrd
pop
pushl
popl
xchg
movl
mov
mov
sbb
movsbl
bsf
stc
add
movzbw
movsbl
clc
rol
bswap
ror
call
pushl
mov
pushf
lea
jmp
pushf
pushf
jmp
bsf
or
btc
mov
ror
btc
pushl
popf
jmp
jmp
shl
bsr
movsbw
mov
shld
cmp
add
shl
add
not
inc
bswap
sub
jmp
push
push
mov
jmp
pushl
popl
push
pushf
lea
jmp
mov
push
push
lea
lea
jb
push
movsbw
jmp
pushf
not
pushf
movb
call
push
pushf
mov
call
jmp
bswap
mov
push
jmp
cmp
sub
lea
jb
pusha
mov
pusha
pushf
pushf
pushl
ret
and
mov
ror
shl
mov
clc
add
call
push
mov
call
mov
movw
movw
pusha
pushf
mov
pusha
jmp
bt
mov
rcl
ror
clc
pusha
mov
test
sub
call
bts
shl
bt
bts
mov
not
pusha
neg
shr
add
push
mov
mov
jmp
xadd
pusha
movzbl
shl
add
test
sub
push
rol
rol
not
rol
cmc
bt
movsbw
add
bts
push
movzbw
not
rol
bt
sub
movsbw
mov
mov
movw
jmp
ja
mov
bswap
mov
call
cld
pushf
jmp
jmp
sar
rcl
xor
btr
mov
jmp
push
jmp
pushf
mov
pushf
lea
jne
add
mov
push
bt
bt
and
cmp
bt
mov
cmp
call
mov
or
rcr
sar
push
rcl
pushl
ror
cmc
clc
push
dec
mov
rcr
add
inc
ror
bswap
shrd
bt
ror
lea
xor
or
movsbl
shr
sub
mov
clc
test
push
sub
push
movb
push
push
lea
jmp
inc
shld
movzww
jmp
lea
cmp
jmp
mov
pusha
bswap
push
call
pushf
jmp
call
call
xor
cmc
bt
not
bt
stc
sub
clc
test
sub
jmp
mov
pusha
lea
jmp
adc
rcr
btc
mov
adc
inc
sub
mov
stc
pusha
sub
test
jmp
jmp
pushf
popl
movl
jmp
and
or
stc
neg
mov
cmc
sub
sub
ror
mov
bt
cmp
sub
pushf
call
cmc
sub
call
xchg
jmp
and
xor
mov
lea
call
cmc
jmp
call
bts
shl
mov
setbe
push
btc
mov
mov
cmp
bt
pusha
add
pusha
mov
movb
push
movl
pushl
lea
jmp
pushf
push
jmp
movsbw
adc
add
rcr
notl
adc
test
aam
sbb
mov
cmc
sub
call
lea
pushf
popl
add
movzbw
btc
btr
mov
cmp
mov
xadd
xor
shl
mov
sar
add
btr
pushl
popl
sar
cmp
movl
inc
mov
mov
sub
inc
pushf
add
btr
bt
not
bsr
bswap
shl
cmc
test
xor
cmc
lea
pusha
jmp
pushf
popl
movb
mov
movl
pushl
popl
mov
lea
jmp
cmc
bt
test
not
bt
lea
clc
neg
jmp
lea
jp
push
call
cmp
pushf
jmp
pusha
pushf
pusha
mov
mov
mov
call
cmp
xor
cmc
call
shr
mov
sar
and
bt
mov
pop
neg
btc
rol
mov
clc
jmp
call
push
call
mov
sub
mov
movb
pushf
mov
pushf
mov
pusha
lea
jmp
lea
aad
pusha
mov
test
bt
test
test
add
movb
call
jmp
rcr
mov
stc
call
call
stc
push
sub
mov
lea
jns
pusha
cmp
add
push
pusha
pushf
mov
jmp
mov
movl
mov
pushf
lea
jmp
mov
bt
clc
add
pushf
mov
pushl
pushf
lea
jmp
call
movsbw
rcr
mov
cmc
push
sub
pushf
pusha
test
clc
add
call
jmp
pushl
popl
movb
mov
pusha
pushf
lea
jmp
cmp
cmc
sub
cmp
shr
jmp
call
pusha
movw
xchg
call
jmp
stc
test
pusha
add
call
rep
inc
adc
rol
mov
and
mov
mov
pushl
popf
pushf
mov
movl
pushf
lea
jmp
push
test
not
cmp
stc
jmp
push
call
pushf
jmp
movb
pusha
mov
pusha
mov
pushl
mov
pushf
push
lea
jmp
mov
sub
test
call
push
pushl
mov
mov
movl
lea
jmp
push
mov
mov
pushf
popl
jmp
jmp
mov
jmp
pushl
popl
push
pushl
lea
jmp
setns
mov
cmp
push
pusha
bt
add
mov
call
mov
pushl
mov
pushf
movb
mov
jmp
pusha
push
jmp
jmp
movsbw
movsbl
pushf
popl
rol
mov
test
mov
or
movzbw
mov
shl
mov
btc
sub
pop
jmp
push
pushf
popl
pusha
pushf
pushl
popl
pushf
lea
jmp
shld
inc
mov
btc
rol
sub
sets
add
test
add
dec
inc
movzbw
xor
bswap
neg
bswap
add
call
xchg
pushf
mov
pushl
mov
movl
jmp
pushf
popl
movw
btr
shl
lea
xchg
rol
xchg
mov
lea
inc
rcr
or
mov
push
jmp
push
movb
pushl
pushf
popl
call
xchg
mov
lea
test
pop
movzbw
and
cld
pop
lahf
ror
ror
pop
pushf
and
cmp
stc
mov
btc
add
pushl
popf
xchg
call
pusha
mov
push
mov
not
pop
pusha
call
push
jmp
pusha
pusha
mov
pushf
mov
movzbw
call
push
mov
pusha
lea
jmp
mov
add
pusha
pushf
mov
push
pushf
popl
pushl
pushl
popl
push
pushf
mov
movw
lea
jmp
mov
movb
push
pushl
movw
lea
jmp
mov
pusha
push
mov
call
jg
neg
mov
call
cmp
cwtl
lea
je
cmc
push
pushf
sub
cmp
stc
jmp
movb
mov
jmp
pusha
mov
push
jmp
pusha
sub
pusha
mov
jmp
pusha
pusha
add
pushf
push
lea
jmp
shld
shrd
add
rdtsc
pusha
push
bt
sub
jmp
call
aaa
mov
bsf
mov
sbb
add
mov
test
pushf
not
test
jmp
rol
movb
rol
bts
btc
pushl
not
inc
inc
movsbw
neg
xor
movsbw
dec
push
pop
inc
shr
test
add
cmc
shld
movzbl
push
test
mov
test
pusha
call
pushl
mov
mov
pushf
lea
jmp
sar
test
mov
clc
clc
test
add
pushf
pushf
dec
cmc
rol
pusha
bt
add
cmc
jmp
sub
pusha
pushl
call
xor
rcr
rcr
btc
lea
clc
pusha
cmp
sub
push
push
movb
pushf
lea
jmp
add
jno
bswap
mov
and
lea
rcr
xor
btc
add
pushf
lea
bt
clc
sub
push
push
pusha
pushf
lea
jmp
push
push
pushl
pushl
call
pushf
push
jmp
jmp
pushf
mov
jmp
mov
mov
pushl
jmp
pushl
popl
mov
movb
pushf
push
lea
jmp
lea
pushf
mov
call
pushf
mov
movb
lea
jmp
movzbw
push
push
movsbl
not
movzbw
mov
lea
pushf
bswap
rol
btr
push
movzbw
sete
not
push
rcr
rcr
clc
bswap
pushl
btc
push
bswap
call
push
add
mov
mov
push
push
push
movl
lea
jmp
ror
bsf
mov
shr
stc
and
xadd
add
add
add
bsr
lea
setg
mov
btc
btr
bsf
xor
sub
setns
bswap
ror
jmp
movl
jmp
pushf
pushf
mov
movb
lea
jmp
call
mov
pushl
movb
pushl
mov
pushl
ret
pushl
popl
mov
movb
lea
jmp
push
pushf
mov
pushl
pushf
pushl
ret
movl
and
mov
shr
bsr
bts
add
ror
or
bswap
add
xor
sar
bt
shr
lea
push
bt
push
movb
sub
push
lea
jmp
mov
pushf
lea
jne
cmc
call
pushf
sub
jmp
add
pusha
mov
call
jmp
mov
mov
mov
lea
jmp
clc
rol
cmp
cmc
cmp
lea
jge
pusha
stc
not
lea
jo
pushf
xor
pushf
pushf
clc
stc
add
test
sub
jmp
mov
pushl
mov
pop
pushf
popl
shl
xchg
xor
not
jmp
sub
mov
pushf
movl
pushf
sub
pusha
lea
jmp
sub
push
pushl
movb
lea
jmp
movw
pushl
popl
mov
pushf
push
push
lea
jmp
pushf
jmp
push
rol
cmp
pusha
push
sub
mov
xor
cmp
sub
cmp
clc
pushf
pushf
sub
cmc
bt
sub
mov
pushf
mov
pushf
push
pushf
lea
jmp
call
neg
shr
mov
xadd
mov
sub
mov
test
clc
add
stc
shld
push
call
cmc
bt
sub
test
test
add
js
pusha
push
pushf
popl
jmp
pushl
mov
rcr
shrd
add
mov
bsr
rol
xchg
pushl
popl
movsbw
movl
xadd
test
bt
shl
mov
cmp
pushf
add
mov
shld
shl
clc
bswap
not
xor
rcr
cmc
movzbl
mov
lea
cmp
bt
call
push
movb
mov
lea
jns
pushf
mov
mov
pushf
movl
pushf
lea
jmp
jmp
clc
mov
cmp
clc
stc
add
pushf
mov
jmp
push
mov
pushf
popl
movl
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
jmp
not
cmc
sub
movb
cmp
jmp
mov
jmp
movb
lea
jne
bt
or
lea
xorb
movzbl
pushf
setge
mov
pusha
lea
jmp
mov
pusha
call
pushf
popl
btc
mov
shl
shl
jmp
call
call
call
lea
jne
pushf
movzbw
lea
bsr
mov
stc
cmp
and
cmc
cmp
jmp
jmp
stc
add
pushf
pusha
xor
movl
jmp
push
pushf
push
mov
movw
push
mov
call
jbe
pushl
call
push
mov
pushf
push
pushf
lea
jmp
jmp
pusha
bswap
mov
jmp
jmp
cld
jmp
push
rep
pop
mov
xor
rcl
not
movsbw
mov
cmp
std
pushl
popf
mov
mov
mov
lea
jmp
mov
call
call
pusha
call
call
mov
push
pushf
pushf
mov
push
pusha
pushf
push
mov
push
pushf
pushl
lea
jmp
bt
add
push
shld
mov
and
xor
mov
jmp
rcl
lea
test
dec
mov
clc
add
jmp
push
mov
pushf
mov
mov
mov
pushf
pushl
push
lea
jmp
pusha
pusha
pushf
mov
pushf
pushf
mov
push
push
mov
push
push
mov
mov
lea
jmp
not
mov
sete
setl
cmp
add
call
pushf
lea
je
test
stc
cmc
call
lea
jne
shl
inc
cmc
stc
xorb
push
pusha
mov
mov
movw
pushf
lea
jmp
sbb
bt
bt
movzww
clc
add
jmp
cmp
xor
call
push
jmp
push
push
mov
pushf
pushf
pushf
lea
jmp
pushf
mov
pushf
jmp
mov
test
push
sub
pushf
pusha
pushf
lea
jmp
push
stc
mov
sub
pushf
stc
pusha
cmpl
push
jmp
xchg
bts
movzbw
mov
shl
pusha
rcr
add
mov
clc
sub
bt
shl
pusha
lea
jp
mov
push
pushf
push
pushf
popl
pusha
movl
mov
pushl
popl
mov
movb
push
pushf
lea
jmp
btc
shl
shrd
shl
mov
rcl
call
pushf
pushf
mov
call
call
mov
call
call
and
sbb
add
mov
stc
cmc
sub
cmp
call
inc
cmc
jmp
call
lahf
push
lahf
mov
pushf
mov
movb
pushf
jmp
cmp
pusha
pusha
sub
stc
cmp
xchg
cmc
stc
test
mov
test
call
mov
movw
movb
lea
jmp
bt
push
bt
mov
cmp
add
mov
pusha
pushf
mov
lea
jmp
mov
movsbw
call
sub
aad
aas
mov
ror
movsbw
mov
call
mov
mov
pushf
pushl
lea
jmp
call
pusha
lea
jne
cmp
sub
jle
push
pusha
xchg
mov
pusha
jmp
mov
pushf
pushf
popl
movb
pushl
popl
movb
pushf
movb
lea
jmp
mov
mov
lea
jmp
movw
mov
pushf
pusha
jmp
pusha
mov
mov
mov
movb
pushf
pushl
ret
call
xadd
btc
aad
mov
push
mov
call
shr
btr
shld
mov
test
jmp
pushl
jmp
mov
sub
bsr
or
add
rcr
shld
dec
bswap
bsr
pop
xor
call
mov
jmp
pushl
sub
cmc
mov
jmp
pusha
cmp
pushf
lea
jne
shl
xorb
pushf
movzbw
mov
pushf
lea
jmp
pusha
cmp
bt
add
jmp
pushl
jmp
btc
pushl
popl
pop
jmp
sub
pusha
push
push
lea
jmp
pushf
pushf
mov
pusha
lea
jmp
cwtl
mov
call
xor
pushf
not
cmc
sub
movb
add
jno
pusha
pusha
cbtw
test
call
clc
push
mov
jmp
mov
cld
pusha
mov
cld
pushf
call
lea
push
call
mov
mov
pushf
lea
jmp
mov
push
mov
lea
jmp
movzbw
mov
pushf
btc
push
call
pushl
popl
mov
pushf
pusha
lea
jmp
movb
movb
jmp
dec
bt
mov
movb
pushf
rol
jmp
jmp
cmc
test
bt
sub
pushf
mov
push
pushf
lea
jmp
pushf
popl
jmp
pushf
inc
clc
clc
call
lea
bts
mov
clc
add
pusha
pushl
push
pushf
lea
jmp
pusha
sub
clc
push
mov
call
mov
jmp
movb
mov
push
xchg
movzbw
pusha
push
call
add
pushl
pushf
add
stc
push
push
mov
clc
bt
cmc
test
sub
lea
ja
pusha
pusha
pushf
mov
push
pushf
pushf
movl
lea
jmp
lea
jp
pushf
pushf
popl
pusha
pusha
call
cmp
add
push
pushf
cmc
shrd
pushl
pushl
pushf
pushf
mov
pushf
push
pushf
popl
push
pushf
pushf
mov
pushl
popl
pushf
mov
lea
jmp
mov
push
call
shrd
call
push
pusha
sub
mov
jmp
movb
xchg
pushf
lea
pop
mov
movzbw
pushf
mov
bswap
pushf
popl
pusha
rcl
rcl
mov
shr
movsbw
mov
shld
mov
sbb
inc
xadd
stc
pushl
popl
pop
adc
push
xadd
movl
dec
test
bt
mov
pushf
ror
mov
or
add
call
jmp
sub
call
lea
je
call
mov
jmp
movzbw
movzbw
seta
rcl
neg
not
rol
xor
cmp
btc
add
clc
mov
and
rcl
mov
cmc
call
lea
test
sub
push
lea
jmp
pushf
push
mov
pusha
pushl
jmp
pushf
call
pushf
mov
push
pushf
push
lea
jmp
inc
jmp
call
sub
pushf
add
je
bt
test
shl
push
mov
pusha
jmp
pusha
xor
clc
mov
neg
bt
add
pusha
call
movzbw
push
not
xchg
cmc
stc
rol
shl
not
neg
movzbw
rcr
bsr
lea
pusha
bts
sub
clc
setbe
not
mov
call
mov
lea
jg
mov
pushf
movb
mov
call
jle
pushf
mov
call
pusha
push
lea
jl
popl
pushf
pushl
movb
movw
lea
jmp
ror
mov
cmp
jmp
movzbl
lea
mov
cmp
and
clc
cmp
push
mov
jmp
stc
bt
cmp
sub
pusha
pushf
pusha
lea
jmp
lea
jae
mov
pusha
pushf
lea
jmp
pusha
call
aaa
movsbw
movsbw
mov
test
sub
call
jmp
jmp
mov
pusha
lea
jmp
pusha
not
bt
call
pushf
popl
neg
call
not
stc
pushl
stc
pusha
not
cmc
sub
call
shrd
push
call
add
call
call
mov
pusha
mov
pushl
lea
jmp
mov
stc
clc
pusha
lea
call
lea
jl
push
cld
mov
pushf
pushl
mov
cld
jmp
movw
push
rep
sbb
xor
movsbw
btc
mov
lea
mov
std
cmp
bt
pushl
popf
push
pusha
push
push
lea
jmp
sub
jmp
push
pushf
sub
pushf
pushf
pushf
pushf
lea
jmp
pusha
mov
push
jmp
pushf
popl
pushf
movb
movb
pushf
pushl
popl
pushf
push
pushf
lea
jmp
jmp
jmp
mov
push
lea
jmp
mov
mov
movw
movw
lea
jmp
lea
mov
cmc
not
jmp
setne
shr
cmp
sub
rcl
setge
ror
bt
pushf
and
shr
pushf
bt
add
mov
bt
test
pusha
add
push
mov
pushl
lea
jmp
mov
pushf
mov
movb
push
pushf
pushf
lea
jmp
movzbw
bswap
push
mov
lea
jmp
pushf
mov
mov
pushf
mov
movw
lea
jne
shr
btc
mov
call
call
push
push
call
call
pusha
movzbw
mov
mov
pushf
lea
jmp
rdtsc
mov
cltd
add
mov
and
sbb
or
mov
push
jmp
mov
not
pushf
pusha
pusha
mov
pushf
divl
mov
call
call
call
sub
movb
call
mov
pushf
mov
movw
jmp
sub
bt
bt
call
mov
mov
lea
jmp
mov
push
jmp
inc
pushf
sub
cmc
cmc
call
ror
shr
mov
movsbl
mov
jmp
shl
pushf
jmp
jmp
rol
rcr
mov
push
xor
cmp
add
bswap
call
lea
mov
movsbw
mov
jns
pusha
divl
mov
mov
jmp
push
jmp
call
mov
stc
movzbl
xadd
neg
pushl
popl
or
adc
or
btc
movl
or
bsf
sbb
mov
rol
pop
add
btc
adc
bswap
bts
clc
lea
xor
rol
sub
bts
ror
lea
pushf
clc
cmp
test
sub
pusha
pusha
push
lea
jmp
call
pusha
pushl
mov
pushf
mov
push
pushf
mov
push
lea
je
push
call
call
stc
add
pushf
call
mov
pushf
lea
jmp
push
push
pushf
pushf
mov
pushl
jmp
add
jmp
mov
push
movb
lea
jmp
mov
mov
push
push
lea
jmp
add
call
inc
jmp
shrd
cbtw
test
jmp
call
inc
dec
shl
shld
pushf
sub
or
mov
cmp
clc
cmp
add
call
clc
sub
pushf
call
shl
mov
jmp
pushf
mov
mov
lea
jmp
not
mov
call
pushf
mov
pusha
push
movb
mov
call
pushf
mov
push
call
call
mov
stc
add
jmp
call
inc
btr
mov
jmp
xor
test
add
stc
cbtw
cmp
cmc
cwtl
cmc
test
call
push
jmp
mov
mov
add
cmc
mov
call
call
mov
mov
push
call
bt
pusha
sub
test
shr
pushf
mov
mov
pusha
pushf
popl
pushl
push
lea
jne
popl
pusha
push
pushf
mov
lea
jmp
inc
clc
jmp
lea
lea
setl
pop
pushf
pushl
ret
mov
call
mov
pushl
mov
pushl
movw
mov
movw
lea
jmp
push
pushf
mov
pushf
mov
jmp
shrd
mov
mov
push
pusha
pushf
popl
pushf
mov
call
pusha
call
or
call
mov
mov
pusha
pushf
popl
jmp
mov
jmp
push
push
mov
bswap
call
pusha
pushl
popf
pushf
lea
jmp
pusha
mov
push
pusha
mov
setb
not
movzbl
pushf
mov
jmp
mov
call
call
call
dec
bswap
adc
bswap
lea
dec
not
rcr
sbb
shl
pushf
sub
inc
or
movzbl
or
or
dec
mov
clc
call
stc
rol
clc
stc
jmp
mov
pushl
pushf
lea
jmp
movb
mov
push
pushf
pusha
lea
jmp
sub
pusha
push
lea
jmp
push
jmp
call
cld
jmp
pushf
call
mov
jmp
mov
pusha
pushf
mov
pushf
mov
call
push
push
movb
pusha
call
jmp
jmp
jmp
push
movb
pushf
popl
pushf
pusha
mov
pushl
popl
movb
pushf
pushf
lea
jmp
mov
pushf
movb
pushl
lea
jmp
pushl
mov
pushf
push
lea
jmp
pushf
call
pusha
clc
bt
pushl
popl
pusha
movb
bt
stc
add
cld
cmc
cmp
pushl
popf
push
push
lea
jmp
pushf
movw
jmp
jmp
sub
ja
clc
cmpl
jmp
jmp
push
call
lea
je
sub
pushf
mov
pusha
push
push
push
lea
jmp
pushf
pushf
add
jmp
jmp
jne
bt
cmp
cmc
add
pusha
rol
pusha
jmp
pushf
pushl
mov
call
sub
push
pusha
lea
jmp
call
movsbw
pushf
movzbl
pusha
inc
mov
push
jmp
mov
pushl
push
pushf
pushl
pushl
ret
bt
add
mov
ror
mov
jmp
pusha
pop
pusha
mov
bswap
jmp
jmp
push
pop
movzbl
mov
pushf
lea
mov
jmp
and
test
cmp
jmp
stc
or
mov
clc
add
jae
add
jmp
cmc
lea
pusha
cmp
movb
lea
ja
setbe
rol
rcl
mov
xadd
rol
lea
adc
sub
clc
lea
stc
shrd
and
inc
sub
rcr
sub
movsbw
movsbl
movzbw
mov
movsbw
pushf
lea
pushf
mov
mov
push
mov
call
bsf
mov
dec
call
mov
mov
pushl
lea
jmp
mov
pushf
lea
jmp
jmp
movb
movb
mov
movb
lea
jmp
pusha
jmp
jmp
aaa
push
mov
jmp
jae
cbtw
stc
pusha
stc
stc
cwtl
pushl
sub
stc
clc
clc
mov
clc
pusha
sub
push
movw
pushf
lea
jmp
pushf
jmp
push
pushf
pushf
mov
call
pusha
pushf
mov
call
xchg
sar
movsbw
mov
mov
btr
rcr
mov
add
clc
mov
pusha
add
movw
stc
jmp
mov
jmp
add
jmp
mov
pushl
call
pushf
mov
jmp
clc
pusha
stc
rol
pusha
jmp
bswap
pusha
cwtl
btc
mov
cmc
shrd
stc
stc
mov
mov
add
mov
mov
call
pushf
popl
pushl
push
pushf
pushf
pushl
popl
movb
pushf
lea
jmp
pusha
mov
pushf
lea
jmp
inc
jmp
push
call
pushf
pusha
pushf
pushf
popl
pusha
call
call
add
push
pusha
pushl
pushf
popl
call
push
movsbw
call
lea
jl
inc
bt
cmc
call
frstor
push
sbb
daa
push
sbb
es
stos
test
push
cmp
push
push
add
push
stos
test
push
mov
gs
push
sub
daa
push
sarl
mov
gs
push
sarl
loope
daa
push
subl
cmp
push
insb
daa
push
fstpl
push
in
es
cmp
push
mov
daa
push
subl
mov
and
push
xchg
mov
push
jo
daa
push
adc
push
cmp
push
nop
push
push
sbb
daa
push
jle
daa
push
cmp
push
rolb
push
jo
daa
push
rolb
push
stos
imul
stos
test
push
sbb
es
int3
je
push
repz
push
sbb
daa
push
clc
mov
push
insb
daa
push
clc
mov
push
sub
daa
push
aas
pop
daa
push
pop
adc
push
cmp
push
repz
push
subl
jo
daa
push
cmp
push
stos
test
push
stos
test
push
cs
daa
push
mov
bound
push
inc
mov
push
cmp
push
movb
push
mov
daa
push
jle
daa
push
cmp
push
xchg
add
daa
push
sbb
es
clc
mov
push
adc
daa
push
int3
je
push
xchg
push
xlat
jg
push
rolb
push
xlat
jg
push
or
push
xchg
mov
push
sub
daa
push
xlat
jg
push
ret
or
push
clc
mov
push
mov
test
push
sub
daa
push
and
push
movb
push
aas
pop
daa
push
std
fs
push
fnstenv
clc
mov
push
insb
daa
push
stos
test
push
insb
daa
push
mov
and
push
loope
daa
push
jo
daa
push
push
add
push
or
push
xchg
mov
push
fstpl
push
pop
adc
push
mov
add
push
mov
daa
push
adc
daa
push
loope
daa
push
mov
daa
push
and
push
int3
je
push
int3
je
push
mov
and
push
sbb
es
sbb
es
jecxz
daa
push
and
daa
push
mov
daa
push
jo
daa
push
mov
daa
push
rolb
push
xchg
push
movb
push
fnstenv
pop
adc
push
pop
adc
push
stos
imul
xchg
add
daa
push
xchg
pop
daa
push
mov
daa
push
insb
daa
push
xchg
pop
daa
push
sub
daa
push
sarl
mov
daa
push
cs
daa
push
or
push
movb
push
and
daa
push
inc
mov
push
sbb
es
xchg
push
xchg
mov
push
pop
adc
push
adc
push
ret
or
push
cs
es
pop
add
push
or
push
xchg
add
daa
push
adc
push
adc
daa
push
mov
daa
push
mov
mov
push
std
fs
push
cs
daa
push
mov
daa
push
jo
daa
push
frstor
push
stos
imul
mov
daa
push
jo
daa
push
frstor
push
jecxz
daa
push
xor
push
mov
daa
push
frstor
push
mov
mov
push
pop
add
push
fnstenv
adc
daa
push
int3
je
push
rolb
push
loope
daa
push
adc
daa
push
mov
daa
push
in
es
mov
daa
push
sub
daa
push
and
daa
push
and
push
mov
daa
push
rolb
push
sbb
es
or
daa
push
mov
and
push
stos
test
push
xchg
add
daa
push
subl
pop
adc
push
and
daa
push
frstor
push
aas
pop
daa
push
xchg
pop
daa
push
mov
and
push
mov
pop
daa
push
or
daa
push
frstor
push
jecxz
daa
push
rolb
push
cs
daa
push
adc
push
push
add
push
mov
daa
push
frstor
push
mov
mov
push
push
add
push
frstor
push
sbb
daa
push
pop
adc
push
xchg
mov
push
frstor
push
loope
daa
push
cs
daa
push
cmp
push
xchg
pop
daa
push
adc
daa
push
jecxz
daa
push
cmp
push
adc
push
adc
push
xor
push
cmp
push
mov
add
push
int3
je
push
frstor
push
and
push
loope
daa
push
cs
daa
push
jle
daa
push
mov
popa
daa
push
frstor
push
mov
pop
daa
push
inc
mov
push
frstor
push
xchg
add
daa
push
and
daa
push
mov
lea
jl
push
pushf
pushf
popl
pushf
pusha
push
pushf
pushl
popl
mov
pushf
push
lea
jmp
mov
push
pushl
movw
movb
pushl
ret
bswap
rdtsc
mov
bswap
pushf
setnp
xchg
mov
pushf
mov
mov
pop
xchg
mov
pop
mov
push
movw
pushf
pushl
ret
jmp
pushl
call
pushl
mov
pushf
lea
jle
push
pushf
popl
pusha
pushl
popl
pushl
movb
lea
jmp
mov
bt
clc
sub
mov
jmp
btr
aaa
add
rdtsc
cmp
sub
push
mov
pushf
mov
pushl
push
mov
pushl
pushf
pushf
push
lea
jmp
mov
pushf
movb
movl
movb
lea
jmp
call
push
jmp
call
bswap
call
pusha
pushl
add
movb
test
call
push
pushl
popl
pushf
pushf
pushf
lea
jmp
call
call
mov
mov
mov
pushl
pushf
lea
jmp
mov
push
call
pusha
add
mov
lea
jmp
jmp
movl
call
cld
xchg
mov
call
call
inc
pushf
call
mov
push
pushf
movzbw
lea
mov
pop
pushf
popl
bts
xchg
movzbl
bt
movw
mov
bt
mov
bt
pushl
popl
shl
sar
pushf
xor
movl
neg
cmp
xchg
mov
pushf
movsbw
add
bswap
rol
cmc
bswap
call
mov
push
pushl
mov
pusha
lea
jmp
lea
ja
btr
call
call
or
sub
mov
cmp
stc
push
sub
lea
je
bt
push
rol
pushl
jmp
pusha
mov
movb
lea
jmp
push
pusha
jmp
jmp
bt
movl
not
pusha
cmp
push
pushf
sub
cmp
mov
stc
and
jmp
rol
xorb
pushf
mov
pushf
pushf
pushf
pusha
lea
jmp
mov
movw
mov
lea
jmp
push
pusha
push
mov
pushf
call
pushf
mov
pusha
mov
movb
mov
pusha
jmp
inc
test
cmp
cmp
neg
test
add
pusha
mov
stc
sub
jmp
push
not
inc
shl
shrd
xor
and
xor
pop
inc
dec
movzbl
movzbl
pusha
mov
pusha
jmp
jmp
dec
mov
mov
sbb
ror
mov
bt
cmc
clc
stc
sub
call
mov
pushf
lea
jmp
shr
movw
pusha
push
movb
mov
jmp
push
jmp
test
add
call
bts
ror
neg
sub
add
sub
mov
bt
ror
jmp
lea
bt
pushl
popl
rcr
xadd
movl
sub
push
and
mov
clc
cmc
mov
neg
add
mov
clc
bswap
btc
xor
cmc
mov
xor
lea
call
jmp
push
pushl
mov
call
pusha
jmp
push
pushf
pushl
popl
mov
pushf
pushl
pushf
lea
jmp
btr
inc
mov
movzbw
bsf
bts
sub
bswap
mov
inc
seta
adc
sbb
push
xor
ror
inc
not
and
sub
rcr
sbb
movzbl
clc
movzbl
jmp
not
mov
and
pushf
pusha
mov
push
push
pushf
popl
pushf
pushl
popl
push
pushf
movb
mov
lea
jmp
mov
pushf
pushl
pushf
lea
jmp
pushf
call
cmc
jmp
stc
call
pushf
mov
mov
jmp
cld
pop
inc
add
inc
add
add
inc
add
ja
add
inc
add
inc
add
inc
add
inc
add
inc
add
testb
repz
add
inc
add
incl
fcoml
add
testb
pop
inc
add
push
inc
add
bound
pop
stc
inc
add
jle
add
push
inc
add
popa
inc
add
repnz
add
inc
add
testb
push
add
inc
add
pop
inc
add
inc
add
inc
add
inc
add
pop
inc
add
jge
add
addb
stc
inc
add
lock
add
cli
inc
add
repnz
add
testb
addb
cld
inc
add
jge
add
inc
add
inc
add
inc
add
popa
inc
add
inc
add
ja
add
inc
add
popa
inc
add
bound
cmp
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
jbe
add
cld
inc
add
pop
inc
add
cli
inc
add
repnz
add
jle
add
inc
add
cli
inc
add
ja
add
push
inc
add
bound
xor
push
add
inc
add
push
inc
add
bound
or
inc
add
ja
add
push
inc
add
add
inc
add
inc
add
cld
inc
add
inc
add
cld
inc
add
stc
inc
add
ja
add
jbe
add
jns
add
sti
inc
add
pop
inc
add
push
inc
add
pop
inc
add
inc
add
cld
inc
add
testb
jge
add
testb
stc
inc
add
cli
inc
add
push
inc
add
inc
add
testl
inc
bound
mov
ja
add
inc
add
inc
add
imul
and
inc
add
jle
add
inc
add
ja
add
inc
add
cld
inc
add
testl
cwtl
pop
inc
add
imul
inc
bound
lds
add
imul
imul
or
add
repz
add
testb
bound
dec
insb
inc
add
inc
add
testb
testb
pop
inc
add
cli
inc
add
testb
pop
inc
add
jbe
add
testl
or
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
testl
inc
jb
add
testb
pop
inc
add
popa
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
repnz
add
inc
add
inc
add
jne
add
popa
inc
add
push
inc
add
inc
add
imul
pop
jbe
add
inc
add
jle
add
push
inc
add
jbe
add
bound
cld
inc
add
add
inc
add
inc
add
pop
inc
add
repz
add
inc
add
jns
add
repnz
add
add
jle
add
testb
push
add
add
inc
add
ja
add
popa
inc
add
add
inc
add
insb
inc
add
insb
inc
add
insb
inc
add
insb
inc
add
insb
inc
add
insb
inc
add
insb
inc
add
lock
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
ja
add
jle
add
imul
sbb
add
jb
add
inc
add
pop
inc
add
repz
add
leave
jmp
push
pushl
popl
mov
push
movb
lea
jmp
clc
rol
mov
mov
adc
sbb
mov
clc
pushf
bt
add
push
jmp
pushf
mov
jmp
call
sub
cmc
pushf
shl
jmp
bt
stc
notl
cmp
cbtw
daa
shl
mov
pusha
movb
cmp
sub
cmc
stc
mov
stc
and
push
pushf
popl
pusha
push
pushf
push
pushl
popl
movw
movb
mov
mov
lea
jmp
push
call
pushl
mov
pushf
push
push
call
pusha
movb
pusha
mov
pushf
push
movb
mov
lea
jmp
mov
call
dec
or
mov
shr
mov
stc
stc
add
pushf
jmp
pushf
mov
mov
pusha
pushf
lea
jmp
pushl
popl
pusha
push
pushf
mov
lea
jmp
call
mov
xor
clc
bt
shrd
mov
sub
btc
pushl
popl
btr
sub
xadd
movl
add
bsr
mov
shl
lea
stc
test
add
bt
bswap
sar
xor
bt
rcl
lea
push
clc
mov
test
sub
pushf
lea
jmp
pushl
mov
mov
call
pushf
pop
movzbw
mov
movzbl
lea
mov
xchg
mov
lea
je
movsbw
xchg
pusha
pushf
popl
or
cmc
bts
bsf
mov
pushf
neg
cmp
mov
sbb
lea
xchg
mov
movsbw
pushl
popl
shl
xchg
movl
or
bswap
xchg
mov
pop
add
cmc
btr
bswap
rcr
xor
xor
btc
inc
rol
bts
lea
rcr
bts
sar
sub
xchg
mov
rcl
or
btr
mov
push
pop
stc
add
test
add
mov
setne
btr
xor
movsbl
stc
mov
pushf
rol
lea
movw
setne
inc
push
xor
shl
shl
shl
xor
call
setg
jmp
sub
jmp
rcr
mov
cmc
mov
call
pushf
mov
call
pushf
clc
stc
shl
push
mov
pushf
mov
call
call
mov
push
pushf
pushf
pushf
lea
jmp
pusha
mov
push
movb
call
sub
pushf
mov
pusha
pushf
lea
jmp
mov
cmc
stc
sub
push
movb
mov
mov
pushl
movl
lea
jmp
jmp
jmp
inc
call
movl
pushf
push
pushf
pushf
mov
push
movw
pushl
ret
mov
push
call
cwtl
movzbw
aam
mov
shl
mov
clc
test
pusha
pusha
add
pushf
push
movw
mov
mov
push
lea
jmp
movsbw
setle
mov
push
pusha
mov
pushf
call
jmp
add
clc
pushl
popf
pushf
push
movb
pushl
lea
jmp
call
call
movzbl
pushf
mov
call
pushf
call
pusha
pusha
movzbw
mov
bswap
pushf
popl
mov
and
shr
xchg
neg
mov
bts
shld
movzbw
mov
call
jmp
jmp
pusha
movl
pushf
popl
jmp
jmp
push
pushl
popl
push
lea
jmp
movsbw
mov
pusha
push
call
pushl
mov
test
add
push
mov
pusha
lea
jmp
push
mov
lea
call
bts
mov
shr
bsr
sar
jmp
stc
ror
sub
and
lea
pushf
cmc
cmp
push
call
mov
pusha
movb
call
mov
push
lea
jmp
lea
jne
push
call
push
mov
jmp
btr
bt
bsr
mov
cmc
mov
call
mov
jmp
ror
mov
cmc
jmp
call
stc
call
mov
pushf
push
push
lea
jmp
mov
movb
push
movw
jmp
bts
mov
cmp
cmp
btr
add
bt
add
bswap
dec
rol
btc
push
pusha
rol
sub
add
add
push
cmc
bsf
sub
add
bswap
mov
call
mov
pushf
push
pushf
mov
xchg
movzbw
mov
bswap
pushf
popl
bts
add
bt
movzbw
push
shld
sub
shl
xchg
push
pushf
clc
mov
lea
bsf
xadd
clc
pushl
xadd
push
movsbw
adc
or
and
mov
stc
add
cmp
shrd
bswap
sbb
movzbw
bt
bsf
xor
movzbw
mov
push
sub
push
pusha
lea
jmp
test
cmpl
push
pusha
jmp
mov
pushl
pushf
pushf
pushf
mov
push
movw
push
pushf
lea
jmp
pushl
popl
movb
pushf
push
pushf
lea
jmp
stc
add
jl
add
call
cwtl
bt
jmp
mov
lea
mov
pushf
pushf
pushf
movsbw
mov
lea
jne
pusha
bswap
mov
pushf
pushf
movw
pushf
pushl
ret
mov
mov
call
mov
jmp
bt
add
test
jmp
movb
push
mov
pusha
pushf
popl
pushf
jmp
lahf
setae
mov
call
push
btc
pushl
ror
jmp
inc
cmp
xor
call
push
mov
pushf
popl
ror
test
add
xchg
rol
xchg
btr
clc
mov
rol
shl
sbb
mov
pushf
bsr
pushl
popl
cmp
bswap
pushf
adc
movl
lea
pusha
add
mov
cmc
cmc
movzbw
add
mov
test
bsr
bswap
shr
bt
movsbw
xor
test
lea
pushf
lea
je
bt
sub
push
pusha
pusha
push
lea
jmp
stc
cmc
mov
push
clc
cmp
sub
pusha
push
pushf
lea
jmp
jmp
mov
pushf
mov
push
pushf
jmp
pushf
push
pushf
popl
call
pushf
movb
mov
movw
mov
pushf
lea
jmp
xor
pushf
cmp
add
pusha
sub
pushf
lea
jno
push
mov
mov
pushf
pusha
lea
jmp
call
and
push
lea
js
pusha
pushl
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
mov
pusha
push
pushf
mov
pushf
call
xchg
push
mov
call
test
sub
pushf
jmp
call
cmp
sbb
mov
pushf
sub
clc
push
test
add
clc
movb
rol
call
mov
shl
pusha
rol
mov
cmp
jmp
and
inc
ror
bsr
mov
call
mov
add
jo
cmc
sub
pusha
call
mov
pusha
lea
jmp
lea
mov
pusha
test
pop
mov
cmc
setns
inc
not
mov
bt
lea
jne
add
call
pushl
popl
btr
movl
adc
and
mov
rcl
shl
shl
dec
add
and
movw
bswap
shld
rcr
shl
xor
add
shl
lea
pushf
movb
sub
pusha
push
pushl
push
lea
jmp
pushf
mov
pushf
lea
jmp
mov
jmp
pusha
mov
call
mov
push
lea
jmp
mov
cmp
test
sub
call
shr
bswap
clc
neg
xor
and
jmp
neg
pusha
pushl
cmp
add
cmp
stc
jmp
add
cmp
mov
cmc
cmc
pusha
cmc
sub
pushf
shr
call
bswap
pusha
mov
bswap
not
mov
jmp
test
mov
jmp
pusha
not
cmc
bt
cmc
xor
test
stc
add
movw
pusha
sub
movb
mov
mov
mov
movl
pushf
pushl
pushf
lea
jmp
das
mov
push
and
mov
stc
cmp
add
pusha
call
mov
jmp
pushl
popl
mov
mov
pushl
pushf
lea
jmp
jmp
shrd
seta
movzww
test
sub
stc
clc
bt
lea
clc
push
ror
test
add
cmp
neg
call
pushf
call
jmp
mov
mov
movb
pushf
movl
lea
jmp
add
call
mov
mov
pushf
pushf
popl
pushl
pushl
popl
pushl
mov
pushl
lea
jmp
mov
push
mov
pushf
movl
mov
call
mov
jmp
inc
jmp
cmc
test
clc
not
clc
clc
movb
sub
test
mov
jmp
mov
call
pushf
add
stc
xadd
mov
dec
shld
mov
test
add
call
not
movzbl
pushf
popl
push
sar
mov
xor
bsf
shrd
cmc
mov
rcl
shl
inc
pop
mov
clc
rol
pushl
popl
bswap
movl
shrd
mov
rol
movzbl
shld
add
inc
adc
bswap
pushf
bts
xor
rol
cmc
shrd
shr
lea
cmp
test
stc
cmp
sub
pushf
push
pushl
lea
jmp
mov
pusha
mov
push
movl
lea
jmp
lea
jmp
add
bt
cmc
cwtl
bt
stc
pushf
cmp
sub
jmp
divl
movb
mov
jmp
shr
call
cmc
add
pushl
sub
push
jmp
lea
jo
push
pushf
pushl
pushl
pushl
ret
push
mov
pushf
jmp
call
jmp
call
push
pushf
popl
push
pushl
popl
pushf
lea
jmp
call
pushf
push
mov
jmp
jmp
stc
mov
not
rol
sbb
pusha
mov
call
jmp
mov
call
xor
mov
stc
not
clc
cmp
cmc
sub
call
pusha
pusha
movsbl
pushf
mov
push
mov
movb
lea
pushf
movb
jmp
add
mov
pushf
pushl
bt
rol
jmp
mov
movw
pushf
lea
jmp
mov
call
cmp
sub
bt
movb
call
cld
std
push
lea
jmp
pushl
popl
pusha
mov
call
mov
jmp
mov
jmp
push
pushf
pushf
mov
pushl
pushl
push
movb
lea
jmp
pusha
mov
jmp
pushl
mov
pushf
pushf
lea
jl
mov
pushf
movb
call
call
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
lea
cpuid
call
lea
push
pop
mov
call
pusha
sub
call
mov
lea
jge
mov
push
push
push
lea
jmp
call
jmp
test
ror
movzbl
cmp
sub
jg
bt
add
cmc
jmp
bt
not
cmc
cmp
cmp
pusha
not
mov
clc
cmp
test
and
jmp
stc
push
sub
push
mov
pushf
push
lea
jmp
sub
test
pushf
mov
mov
sub
call
mov
bsr
pushl
popl
bts
movl
ror
mov
mov
cmc
add
ror
bswap
ror
bts
pushl
shl
xor
shld
mov
rcl
dec
lea
cmp
movb
sub
pushf
lea
jmp
mov
pushl
movb
lea
jmp
mov
pushl
mov
lea
jmp
add
pushf
pushf
mov
pushf
lea
jmp
lea
jg
cpuid
pushf
sub
cmp
cmc
cmpl
pushf
pushf
pushf
mov
pusha
mov
jmp
neg
stc
clc
clc
mov
add
stc
cmp
bt
test
mov
jmp
push
movl
mov
lea
jmp
call
movl
pusha
mov
movl
push
pushf
lea
jmp
leave
push
ja
pop
inc
shlb
jbe
je
mov
push
je
jb
hlt
cmp
adc
cmpsb
xchg
pop
xor
or
fs
fmulp
rclb
cmp
ss
clc
push
cmp
sub
sbb
inc
and
lea
jmp
jmp
push
pusha
call
push
pushf
pusha
push
movl
pushl
movl
pushf
movb
lea
jmp
xor
pop
aas
push
std
pushf
fwait
mov
jo
bnd
rol
test
dec
sbb
jb
jge
aaa
aad
sbb
adc
call
sbb
add
outsl
iretw
inc
xchg
cmp
outsl
and
sbb
and
jns
mov
in
inc
arpl
mov
mov
lahf
ss
xor
mov
jecxz
xor
mov
xchg
fiadds
jmp
jle
clc
imul
sarb
dec
loope
cmp
inc
mov
lds
js
xchg
inc
cmp
sahf
sbb
xchg
gs
out
cmpsb
xor
and
cs
mov
cmp
add
movl
mov
pushf
push
lea
jmp
das
push
jnp
xchg
mov
hlt
cmpsl
in
mov
movsb
mov
cmp
insb
pop
pop
xor
xchg
jecxz
sbb
jmp
adc
ja
xchg
xlat
imul
movw
movl
pusha
pushf
lea
jmp
movl
pusha
pushf
call
call
bound
fstpl
inc
push
xchg
lea
cmc
mov
loop
lds
jbe
lods
pop
xchg
insl
aaa
inc
mov
shrl
push
jmp
mov
xor
xchg
or
mov
jecxz
and
arpl
lock
movl
pusha
pushf
lea
jmp
movl
pusha
lea
jmp
movl
call
movl
push
pushf
push
pusha
lea
jmp
call
jmp
add
inc
sarl
pop
aaa
aad
push
jl
mov
lret
cmc
sbb
int
and
fwait
jno
pop
dec
neg
dec
shlb
inc
cmp
or
ret
mov
mov
mov
dec
arpl
dec
pop
or
fistpl
inc
push
gs
call
subb
es
push
out
mov
fisttps
xor
or
aad
ret
inc
test
hlt
fnstcw
push
jge
jp
aas
nop
inc
movl
jmp
icebp
sub
pop
inc
test
ret
sub
mov
loope
aaa
add
add
push
clc
push
aas
xchg
mov
xchg
add
inc
sti
adc
mov
stc
adc
aam
cltd
mov
scas
cltd
outsl
xchg
insl
movsb
add
mov
or
add
test
outsl
into
test
out
sub
push
or
cmp
mov
mov
lea
jmp
movl
push
movb
movl
push
pusha
lea
jmp
push
lahf
insb
jle
xchg
adc
push
mov
or
movsb
mov
popf
add
mov
pop
idivl
inc
sbb
and
aam
pop
mov
popa
xchg
adc
scas
sbb
fstl
dec
test
xchg
jmp
enter
dec
push
jns
jns
je
mov
pop
inc
pop
add
les
jecxz
daa
xchg
cld
loop
std
xchg
xlat
mov
fs
sar
pushf
push
jno
dec
out
into
pushf
jno
mov
je
push
out
out
adc
pop
add
mov
dec
bound
daa
mov
mov
or
dec
mov
push
dec
scas
push
cli
xlat
jne
cmc
adc
stc
xchg
out
out
cmc
add
mov
movl
pusha
pushf
push
push
lea
jmp
push
movl
pusha
pushf
push
jmp
jmp
push
pushl
movl
pusha
movl
pusha
pushl
push
lea
jmp
movl
pushf
mov
mov
lea
jmp
pusha
push
movl
jmp
push
movb
push
jmp
rolb
lcall
cmp
clc
ret
inc
sub
mov
mov
dec
addr16
and
jnp
je
js
loopne
and
sbb
jmp
mov
clc
xchg
mov
cmp
shlb
pushf
imull
sub
jg
xchg
xchg
pop
cmp
pop
xchg
or
dec
lcall
pushf
jmp
jmp
sub
adc
pop
inc
xor
push
negl
cmp
cmp
or
shll
xor
inc
rorl
and
jns
cmc
int
push
ret
in
data16
iret
and
loopne
and
adc
push
repz
xor
mov
cwtl
sar
pop
inc
push
lds
mov
nop
mov
xchg
cmp
ret
lock
inc
mov
jmp
xor
xor
fldl
pushf
aaa
gs
mov
data16
adc
push
mov
cltd
lock
testl
jg
inc
and
scas
sbb
sub
add
test
jmp
pusha
movb
pusha
movl
jmp
cltd
shl
pop
inc
test
cmpsb
enter
mov
add
icebp
cwtl
sub
push
mov
imul
out
lcall
xor
jecxz
sbb
test
in
sbb
push
leave
fsubr
mov
cmp
jo
outsb
outsl
adcb
bound
mov
aas
pop
jo
cmp
testb
stc
enter
push
or
jmp
pusha
pushl
movl
mov
pushf
pushf
pushf
lea
jmp
xor
mov
aam
popf
std
fs
popa
notb
js
out
cmpsl
ds
loope
lea
in
ss
jb
or
push
std
and
imul
loop
pop
pop
movsl
xor
mov
outsb
sbb
stos
lahf
pop
and
pop
insb
xchg
loope
das
outsb
sub
mov
inc
out
or
pop
popa
ljmp
inc
cwtl
lret
pop
inc
and
jecxz
and
inc
and
jecxz
das
ret
xor
jno
or
out
cmp
adc
xchg
rolb
fimull
and
mov
mov
mov
stos
lret
pusha
jmp
pusha
movl
pushf
pushf
pusha
movl
pushf
pushf
pushf
lea
jmp
lahf
lods
andb
cmc
and
popf
rolb
test
ljmp
and
mov
out
cmp
pop
mov
ljmp
push
adc
aaa
pop
testb
xchg
pop
hlt
push
mov
loop
xchg
mov
dec
sbb
add
movl
je
aad
insl
add
ret
out
sub
mov
subb
popf
xor
jge
stos
shr
insl
in
popa
nop
pusha
mov
inc
sbb
loope
out
ret
popf
test
and
cmpsl
jp
mov
inc
or
cli
clc
test
dec
push
into
mov
jnp
adc
dec
je
jno
jns
aad
je
pop
inc
subb
lods
and
dec
scas
cwtl
in
je
fildl
stos
fmuls
and
ret
enter
mov
daa
shr
scas
inc
iretw
out
ret
into
fwait
andl
cli
or
and
js
loopne
cltd
nop
cmp
inc
fdivrp
retw
jl
push
insb
add
jg
aad
ljmp
mov
lods
shr
jae
jecxz
lret
neg
pop
jp
and
jmp
add
test
js
fldcw
cmpsl
jp
pop
jns
out
dec
aas
jecxz
icebp
fwait
sti
inc
das
sti
jnp
jne
test
mov
les
add
bound
push
insb
pushf
dec
xchg
aaa
mov
pop
mov
sub
xchg
int3
dec
jns
or
imul
push
sti
stos
xchg
pop
and
pop
js
rcll
inc
cmpsl
adc
ljmp
jns
insb
jo
adc
xor
mov
jnp
leave
clc
jb
jecxz
jnp
cltd
dec
inc
jns
in
fs
sub
xchg
iret
sbb
in
dec
popa
mov
xchg
cli
fcoml
xchg
movsb
jecxz
mov
mov
xchg
dec
adc
enter
pusha
xchg
enter
enter
stc
lret
jmp
inc
mov
xchg
add
stos
adc
stos
stos
pusha
mov
push
ds
outsl
arpl
iret
dec
inc
jnp
in
jbe
cli
outsb
jg
mov
jg
add
mov
test
cmp
lods
popf
adc
inc
mov
mov
and
adc
fwait
popf
repz
pop
daa
inc
or
and
jmp
inc
push
or
cmp
sbb
lods
test
and
pop
sar
push
ds
iret
fnsave
outsl
fwait
mov
jmp
inc
xor
jno
adc
jo
jns
inc
xchg
jno
adc
adc
pop
xor
mov
scas
fneni(8087
jae
xor
adc
js
cmp
lea
pusha
jecxz
test
es
test
xchg
jbe
cmp
inc
add
ds
movsl
and
divl
das
push
xchg
sbb
ficoms
loopne
xchg
hlt
roll
jnp
pop
inc
sub
jnp
mov
mov
add
inc
and
pop
or
cld
mov
pusha
movl
movb
pushl
lea
jmp
int
out
test
xchg
add
cli
loop
fistl
dec
mov
or
inc
mov
sahf
inc
leave
lea
or
xchg
mov
hlt
sub
cmp
mov
nop
xlat
lea
jle
and
rcll
faddl
in
data16
pushf
cmp
xchg
or
mov
out
add
aaa
xor
sub
jl
in
lret
and
push
xor
call
pop
pop
lods
ss
dec
mov
into
adc
xchg
into
je
loop
cld
inc
dec
mov
idivb
lea
test
je
enter
fisubs
xor
stos
movsb
arpl
pushf
dec
xor
or
adc
dec
cmpb
jmp
pop
pop
jae
cmc
insb
pop
hlt
out
shl
or
cmc
aaa
sahf
mov
test
dec
jmp
xchg
shld
les
inc
pusha
adc
pop
add
push
pop
mov
cmp
add
out
and
mov
das
cmp
sub
add
xchg
or
fs
add
hlt
sbb
arpl
push
mov
into
leave
fwait
cmp
cmp
sub
push
inc
push
out
sub
pop
cmpsl
cmp
bnd
jae
jbe
mov
rorl
jae
in
outsb
sbb
idivb
cltd
xchg
jle
cmp
fxch
push
stc
cmp
ljmp
inc
or
fwait
mov
je
dec
mov
rolb
int3
inc
in
scas
andb
cli
jmp
cmp
mov
jle
pop
adc
xchg
stos
dec
inc
fdivrl
push
sbb
loop
cmp
in
mov
pop
add
inc
subl
xchg
jbe
jb
xlat
mov
add
dec
push
js
mov
inc
fistpll
dec
cmp
pop
fcoml
hlt
jl
xor
xor
sbb
sub
sub
jmp
push
movw
movl
pushf
pushl
pushl
call
xchg
xchg
xchg
push
shll
mov
lcall
test
cli
icebp
adc
loopne
dec
mov
pop
cmc
mov
clc
insl
frstor
sub
sbb
adc
xchg
enter
fs
jmp
jmp
movl
pushl
pushf
lea
jmp
pusha
movl
movw
lea
jmp
or
cltd
mov
xchg
push
jle
ficompl
icebp
push
sub
stc
mov
addr16
loope
lea
dec
fwait
or
aas
sbbb
stc
cltd
fs
push
xchg
mov
xchg
mov
in
cmp
std
divl
shl
in
lret
movsb
xchg
shr
cmpsl
aaa
pop
es
fs
arpl
imul
lock
pop
inc
or
cmpsb
dec
data16
fs
in
dec
and
insl
xchg
fsubl
mov
aas
call
data16
test
mov
cmpl
sbb
movsl
push
sti
fnstenv
xchg
push
and
add
mov
and
leave
lret
test
sub
lea
into
out
andb
inc
adc
fmuls
sar
jae
ss
iret
mov
test
adc
lods
and
sub
leave
sub
jne
lock
push
push
or
cmp
out
dec
arpl
fsqrt
ljmp
lods
pop
mov
pop
ret
mov
or
mov
fnclex
sbb
inc
jle
adc
pop
shr
ja
cwtl
xor
xor
mov
es
pop
sbb
leave
sub
sbb
sbb
nop
imul
jle
jmp
fbstp
inc
cmp
inc
mov
cs
sti
lods
clc
xchg
test
mov
xchg
jle
jbe
out
or
mov
decl
xor
xchg
cmp
adc
mov
loopne
mov
aam
dec
ja
dec
xchg
pushf
lods
adc
and
cmp
xor
push
cmp
adc
out
inc
sti
mov
add
pop
sti
add
daa
add
pop
loopne
mov
lods
xorb
inc
mov
pop
fwait
xchg
cli
mov
call
imul
fs
sarb
or
or
pop
add
inc
stc
aam
fadds
jne
lahf
stc
into
fcomi
aad
cmpl
xor
sbb
inc
or
fdivl
and
in
movl
call
pusha
mov
movl
pushf
push
pushf
lea
jmp
movl
push
call
pushf
pushf
movl
push
movl
mov
pushf
movb
lea
jmp
pushf
pusha
mov
movl
call
mov
movl
jmp
jmp
fisttps
into
pop
inc
stos
subl
and
mov
pop
movsb
jmp
mov
in
stos
and
repz
or
pop
jns
dec
mov
cmp
xchg
xor
mov
rcrb
add
add
push
or
push
jmp
jmp
mov
ljmp
xlat
cmp
je
sbb
mov
bound
insl
addr16
cld
dec
or
mov
rcl
and
mov
cmp
pushf
mov
mov
xchg
fldt
jl
mov
mov
sar
rcrl
pop
popa
adcb
out
push
movl
push
pusha
movw
pusha
lea
jmp
call
mov
movl
jmp
pusha
repz
int
inc
lcall
sarb
jne
popf
adc
lds
movsb
mov
movsb
mov
pop
and
and
jbe
outsl
subb
imul
movl
pusha
pushf
jmp
jmp
jmp
pushf
movl
call
movl
mov
movl
mov
movl
pusha
pushf
pushl
movl
lea
jmp
pushf
movl
pushf
push
push
lea
jmp
push
pushf
pusha
jmp
hlt
in
mov
xchg
sbb
xor
dec
leave
sub
mov
or
jl
jmp
lahf
mov
cwtl
adc
cmp
push
pusha
mov
call
data16
lea
xchg
ljmp
iret
js
mov
mov
push
pop
mov
adc
jecxz
pop
lahf
xor
inc
pop
adc
xchg
into
shll
lahf
loop
jo
or
xlat
adcb
xor
test
sbbb
and
popa
pushf
push
ret
movsb
push
mov
adc
sbb
int3
pop
inc
leave
outsl
add
ret
jmp
mov
push
push
xor
jns
mov
push
cmp
leave
and
das
and
fnstenv
adc
mov
ljmp
movl
pushf
lea
jmp
pushf
movl
push
pusha
pushl
pushf
lea
jmp
call
jmp
pushf
movl
pusha
jmp
pushf
call
pushf
movl
mov
push
movl
push
pushf
lea
jmp
movl
push
call
test
outsb
mov
xchg
mov
aaa
xchg
adc
pop
imull
or
dec
lcall
adc
mulb
fwait
adc
inc
jg
adc
push
call
jmp
pop
loope
xor
cmp
jne
in
push
pusha
movl
pusha
pushl
push
pushl
lea
jmp
movl
call
add
add
fcoml
pop
mov
popf
mov
mov
mov
inc
jmp
sbbb
lcall
and
idivl
dec
mov
aaa
lret
in
je
movsl
fnsave
sti
jg
add
in
jmp
mov
scas
and
test
nop
lock
jg
pushf
xlat
sbb
push
stos
cmc
inc
mov
movl
mov
push
pusha
movb
lea
jmp
pusha
jmp
movl
pushl
pushl
pushl
mov
lea
jmp
push
pushf
jmp
push
pusha
movl
pushf
mov
lea
jmp
jb
cmpsb
xchg
add
mov
pop
cmp
push
stos
lahf
xorl
popa
mov
orb
cli
faddp
sti
xor
out
or
adc
mov
fs
cs
shlb
mov
loope
adc
out
test
mov
mov
xor
jns
lock
das
push
or
dec
push
xlat
inc
add
sahf
add
mov
cli
rcll
std
es
bound
loope
jge
psrlq
dec
mov
mov
mov
push
sbb
ljmp
jno
fsubp
mov
jle
adc
out
push
rorb
lahf
pop
bound
jle
inc
cmp
sbb
mov
ljmp
add
xor
push
cmp
rorl
cmpl
insb
push
lahf
jb
cmp
int3
jne,pn
inc
test
lods
fscale
add
rcll
ds
push
jnp
mov
inc
xor
cmc
mov
pop
fnstcw
inc
stc
cmc
or
pop
fisttpll
hlt
inc
or
inc
pop
les
push
les
sub
sub
lcall
or
add
lret
sbb
lods
mull
xor
inc
push
xor
pop
call
fdivl
jne
jbe
pop
out
lret
mov
lret
insl
sarl
push
sbb
sub
es
es
int3
jo
sbb
mov
jl
push
adc
push
push
ret
rcrb
pop
imul
inc
xchg
push
pushf
movl
pusha
mov
lea
jmp
pushf
movl
mov
pushl
pusha
movw
movl
mov
pusha
pushf
lea
jmp
push
pushf
pushf
lea
jmp
leave
adc
push
mov
repz
cmp
aaa
fidivl
stc
push
mov
xor
subb
or
dec
mov
iret
out
push
pusha
jmp
lret
pop
inc
add
push
xchg
or
test
addr16
jecxz
push
aam
or
dec
pop
mov
aaa
shl
sub
mov
or
pop
pushl
movl
jmp
pushf
movl
mov
movl
movb
pusha
push
push
lea
jmp
jmp
call
or
and
pop
inc
insl
inc
fs
stos
dec
addr16
daa
inc
cmpsb
shlb
rorl
mov
stos
jl
mov
fdivs
inc
das
inc
in
addr16
and
dec
and
fucomip
psubsw
dec
xchg
jns
pop
inc
test
add
push
cmpsl
lds
loope
and
mov
xor
push
loop
mov
sub
nop
sub
shlb
or
movsl
mov
test
xchg
or
pop
nop
test
inc
sar
shrl
je
xor
push
mov
cmp
imulb
lds
inc
and
cmp
xor
lea
jmp
jmp
movl
pushl
pushf
pushl
pusha
movl
mov
pushf
lea
jmp
sub
xchg
push
jbe
fwait
sahf
pusha
xchg
or
xor
aaa
movsb
ss
mov
jmp
shl
ds
jecxz
fidivs
std
mov
cmp
dec
inc
jne
sbb
ret
jg
sub
mov
mov
pop
popf
ss
lcall
in
mov
out
imul
push
movl
cmp
popf
lods
popf
loope
cs
add
cltd
shr
xchg
push
out
je
ljmp
imul
sbb
inc
in
sbb
jmp
sti
pusha
adc
dec
and
xchg
in
inc
cmp
pop
xchg
sbb
inc
imul
xchg
xchg
and
pop
popa
ret
and
bound
out
rcr
pop
inc
sub
mov
test
inc
inc
and
cld
movl
pushf
movb
pushl
movb
lea
jmp
jmp
movl
call
pusha
mov
movl
pusha
push
movl
movw
lea
jmp
jae
pushf
movl
push
pusha
pusha
movl
pushf
push
push
pushf
lea
jmp
mov
in
xchg
xchg
mov
andb
jecxz
cmp
mov
subb
std
fsubrs
lea
stos
cli
call
sbb
mov
push
in
lcall
mov
mov
sub
imul
mov
int3
arpl
shlb
xlat
inc
ljmp
push
loop
push
add
mov
rolb
in
cmc
and
inc
xchg
into
push
cmp
mov
mov
pop
mov
xchg
fdivrs
fisubs
jo
or
mov
rcrb
cmp
sub
dec
test
cwtl
bound
dec
pushf
stos
mov
ret
scas
repnz
sbbb
mov
xor
in
test
and
inc
xchg
test
xor
shll
rcrl
rclb
mov
dec
in
mov
sbb
sbb
lods
add
or
lret
jl
mov
mov
mov
aad
lods
adc
cmp
push
fnsave
sti
adc
cmova
cmp
mov
je
loope
out
jbe
aad
les
lock
mov
and
test
int3
add
fs
pop
das
adc
xchg
les
mov
movlps
lods
pop
imul
and
lock
push
pop
adc
popl
lret
push
push
mov
sbb
xchg
adc
pop
or
movsl
ret
cmpsl
pop
cmp
jle
sub
adc
jne
mov
push
cmc
das
into
loop
aam
orl
lods
shlb
jns
imul
adc
jnp
xor
pop
lret
ret
jno
fdivrs
jno
mov
jo
inc
dec
xlat
xor
pushf
movl
jmp
push
pushf
mov
movl
pusha
pushl
call
jmp
movl
pushf
movl
push
lea
jmp
call
push
pushl
movl
movl
pushf
movl
call
pushl
call
fs
cs
stos
rclb
lods
sbb
mov
pop
lods
jmp
arpl
pop
mov
pshufw
hlt
mov
pop
push
dec
sbb
mov
xor
ss
add
int
dec
cmp
mov
xchg
and
xor
mov
mov
test
add
repnz
mov
addr16
xor
push
iret
pop
in
and
dec
out
mov
cli
lock
and
jmp
lds
shrb
popa
jno
into
sub
enter
push
movb
movl
pushf
movb
pushl
lea
jmp
gs
inc
and
insb
add
xchg
mov
xchg
jle
inc
jnp
out
adc
push
mov
adc
xor
ljmp
jbe
test
enter
mov
xor
push
fstpl
cmp
push
ljmp
jns
test
dec
and
cmpsl
out
in
dec
insb
nop
icebp
dec
call
pushf
movl
pushf
pushf
pusha
movl
push
lea
jmp
call
mov
cmpsb
xchg
mov
inc
inc
loop
pushf
add
jmp
ret
cld
mov
xor
lods
push
add
mov
out
in
xor
cld
test
lret
and
rclb
and
dec
arpl
jmp
add
mov
push
movsl
sbb
sbb
daa
pop
pop
push
push
mov
inc
and
leave
les
or
movl
lea
jmp
jmp
call
jns
aas
cltd
xchg
js
lods
mov
cmpsl
test
lea
lahf
dec
lock
sbb
dec
sti
aas
lea
jge
sub
mov
push
mov
subl
add
fs
mov
jo
into
or
loope
neg
pop
push
filds
fildll
dec
push
or
ret
inc
dec
add
lahf
sbb
lds
mov
pop
sbb
lea
fnstenv
clc
sub
ljmp
mov
nop
les
push
mov
cli
ret
adc
sbb
mov
lahf
test
or
pusha
ss
xchg
xchg
add
mov
push
or
mov
pusha
mov
push
or
test
pushf
outsl
cmp
icebp
add
push
and
andb
adc
mov
dec
mov
jge
pop
fildl
test
shll
ja
xchg
lret
test
jmp
add
and
xor
and
repz
jbe
and
jmp
lds
shrb
push
popa
jno
into
dec
push
imul
ss
mov
in
push
mov
xchg
inc
or
arpl
cli
add
xchg
mov
xorb
shl
fistps
xchg
icebp
lcall
inc
push
movl
pushf
lea
jmp
and
lret
xchg
xor
jp
mov
dec
fwait
mov
xchg
movl
and
or
rcrb
xor
ret
int
cli
push
insb
sub
push
cmp
xchg
adc
subl
pusha
inc
fbstp
inc
shr
jbe
add
call
push
loopne
ret
sub
dec
lods
and
pushf
movl
call
and
inc
lods
mov
adc
mov
mov
xchg
mov
xorl
xor
scas
add
out
add
es
lea
jbe
push
push
movl
push
mov
push
pusha
lea
jmp
call
imul
mov
mov
xor
and
dec
inc
scas
idiv
mov
repz
mov
movl
roll
sbb
cmp
leave
cmp
push
dec
inc
ds
movl
pushf
pushf
call
movl
jmp
push
jmp
movl
pushf
lea
jmp
pusha
call
pushf
movl
pusha
jmp
fidivrs
pushf
xchg
nop
mov
loope
movsb
adc
mov
mov
js
cmp
mov
lods
mov
fists
push
bound
dec
into
add
mov
shrb
add
push
jns
and
in
mov
sahf
jle
int3
mov
push
stos
cmc
dec
scas
jl
mov
and
jb
mov
outsb
xchg
sbb
test
or
adc
jmp
repz
decl
inc
fdivs
mov
fidivl
mov
into
or
adc
lcall
or
add
aas
push
push
in
sub
jmp
cmpsb
xor
movl
jbe
push
movl
push
pushl
lea
jmp
movl
mov
mov
lea
jmp
jmp
lret
mov
xor
cli
push
icebp
adc
xchg
mov
jle
stos
xchg
test
jae
xchg
lock
cwtl
and
or
mov
enter
inc
xor
mov
sahf
notb
xor
movl
mov
push
call
movl
mov
pushf
push
lea
jmp
pop
ficoms
pop
push
das
xchg
pop
popa
pop
hlt
add
add
std
pushf
repz
out
andl
addb
fadds
xor
or
insb
lret
leave
jg
adc
lahf
xlat
ret
shr
popf
xchg
mov
aas
out
dec
lcall
sbb
lret
lods
fisubl
arpl
xorb
out
pop
xchg
fs
cs
push
push
lods
sbb
push
mov
jmp
sbb
bound
test
or
in
clc
mov
xchg
or
mov
mov
mov
xorl
mov
insl
mov
mov
mov
daa
and
loopne
mov
pop
adc
clc
shrb
add
sti
inc
stos
xorl
and
pop
lds
mov
xchg
dec
out
mov
or
push
mov
cmc
adcb
jp
pop
or
xchg
lds
fsubrs
push
popa
jno
into
sbb
imul
cltd
xchg
mov
cmp
adc
mov
pop
mov
pusha
dec
mov
jae
xchg
lods
cmp
sbb
shll
lcall
daa
lret
dec
ja
push
mov
or
dec
loop
jno
js
xor
or
jno
xchg
cmpsl
adc
pop
shl
enter
repz
mov
in
lds
daa
add
test
inc
jl
outsb
dec
fiadds
push
cld
push
lahf
xchg
push
inc
push
cmp
pusha
or
rorb
jae
cmp
in
repnz
add
mov
cmp
mov
mov
inc
faddp
inc
and
outsl
aas
inc
test
lea
jmp
push
push
jmp
xor
mov
repnz
pop
subb
mov
sbb
les
pop
cwtl
sbb
pop
mov
mov
cwtl
lock
push
sub
repz
or
pop
mov
pop
jmp
xor
ja
mov
insl
jecxz
loop
stc
arpl
add
jg
jl
add
pop
and
loop
add
popa
mov
mov
mov
jns
jno
mov
push
insl
scas
out
jle
lods
sub
xor
es
sarb
roll
inc
lds
iret
mov
aad
ror
rorb
add
add
inc
outsb
mov
movl
push
movb
push
lea
jmp
push
pushf
push
movl
pushf
pusha
pushf
movl
mov
movw
lea
jmp
or
sti
lods
aam
or
fwait
or
dec
cmpsl
bound
push
pop
pop
pusha
ret
mov
shlb
xchg
sbb
pop
dec
je
pop
dec
ss
mull
fsubrl
movsb
jne
mov
inc
and
cs
lret
mov
mov
mov
movl
pusha
push
pushl
mov
lea
jmp
push
lock
std
std
add
pusha
lahf
mov
ret
jge
rcr
mov
jge
pusha
icebp
pushf
mov
pop
ss
idivl
mov
popa
dec
dec
dec
cmp
add
in
and
fcoms
mov
sahf
popa
subl
and
xchg
push
mov
xor
adc
sbb
int
popf
hlt
lock
xlat
dec
movl
mov
lea
jmp
pop
fists
inc
sub
mov
sahf
mov
gs
pop
xchg
adc
pop
inc
pop
cltd
sahf
mov
int3
pop
hlt
mov
mov
xor
inc
jns
out
jno
shlb
es
mov
mov
add
cs
xor
pusha
pushl
movl
pusha
lea
jmp
pushf
call
pushf
pushf
call
jmp
pusha
call
jmp
push
movl
pusha
push
movw
pushl
movl
push
pushl
lea
jmp
adcl
push
stos
dec
imul
mov
add
pop
mov
push
lcallw
xor
jns
mov
adc
iret
loopne
int3
int
and
inc
loop
cmp
sub
jne
lcall
cmpsl
cmp
xorb
jo
mov
push
mov
hlt
popf
out
adc
jns
add
das
or
scas
mov
popa
les
sbb
mov
ljmp
inc
sub
mov
inc
push
loop
ljmp
pop
mov
xchg
test
push
idivl
pop
jg
jno
jno
jnp
mov
pushf
mov
movw
movl
jmp
pushf
movb
call
movl
movb
pushf
pushf
pusha
lea
jmp
sbb
xchg
fwait
ss
adc
sti
mov
sub
mov
dec
fsubp
sub
and
imul
dec
lret
inc
mov
popa
stos
movl
jle
mov
int
scas
movl
push
movb
push
lea
jmp
sbb
mov
out
fwait
xor
lahf
or
sub
lock
fistps
aam
pusha
shr
mov
sti
add
movsl
mov
dec
xchg
push
xor
mov
xchg
repnz
mov
popa
sahf
and
xor
push
ljmp
and
lods
add
adc
sbb
xor
push
dec
mov
push
addl
mov
mov
add
adc
cmpsl
es
mov
mov
sbbl
and
add
inc
add
test
mov
test
ret
xchg
into
pop
pusha
ret
movl
pushf
pushf
jmp
push
push
movl
jmp
mov
movl
call
call
jmp
call
mov
fdivl
int
shl
bound
sub
loope
fsubl
push
jbe
movsl
add
push
mov
cwtl
outsb
lods
scas
or
test
mov
mov
std
pop
jne
jb
sub
test
or
movsb
xchg
mov
idiv
pushf
out
xor
lret
fwait
cwtl
lea
xchg
sbbl
das
adc
jne
push
mov
mov
mov
leave
cmp
popf
mov
mov
pop
pop
loopne
pushl
dec
jle
fdivr
jmp
mov
mov
movl
jmp
push
lock
std
std
mov
outsb
push
mov
ret
jb
and
daa
cltd
adc
pop
push
ss
outsl
fildll
and
dec
dec
push
and
aam
pop
rolb
xlat
and
mov
loop
std
sahf
rcll
test
mov
in
xchg
push
cmpsb
movsl
mov
push
pop
push
test
sbb
or
enter
filds
inc
and
cs
sub
jl
jmp
pusha
mov
movl
lea
jne
push
pushf
pushf
push
lea
jmp
push
sub
movsl
xchg
loope
add
mov
xchg
sub
insb
jae
outsb
inc
adc
js
cmpsb
jae
shlb
adc
sub
jbe
jo
test
mov
pmulhuw
sub
sbb
pusha
pop
lods
aas
fildl
push
jae
mov
cli
lods
insb
push
lods
rcll
sbb
mov
cmp
and
mov
pmaddwd
arpl
adc
jl
mov
fildll
or
xor
clc
cli
and
mov
add
jmp
mov
mov
jae
iret
aam
icebp
lods
fidivl
cmp
jle
psrld
cmp
outsl
ficomps
xor
cmp
xor
sub
or
add
jnp
dec
ljmp
xor
pop
mov
push
data16
jae
and
dec
test
mov
dec
sahf
xchg
inc
adc
lods
scas
ljmp
inc
cltd
aam
pop
jb
cmp
or
aam
out
jo
jne
jl
mov
sub
mov
push
fldenv
enter
ret
jmp
cmpsl
inc
movsb
xor
pushf
mov
adc
adc
jg
cmpsl
xchg
dec
in
cmp
sub
xchg
hlt
ja
xor
inc
out
sbb
out
cmp
fdivs
lods
pop
imul
test
pusha
cmpsl
xchg
idivb
js
out
or
or
add
pop
cmpb
scas
mov
add
mov
mov
fcomps
xchg
adc
cmp
push
addr16
sahf
and
sahf
fisubs
lea
ja
and
mov
add
insb
sbb
xor
mov
jno
fisubl
add
adc
inc
and
inc
and
imul
dec
sub
outsl
ret
outsl
pop
inc
adc
and
pop
cmpsl
repnz
scas
or
add
aas
in
fucomp
or
lds
add
dec
push
lods
jecxz
pushf
jmp
fs
cs
mov
adc
pusha
mov
xor
ss
mov
add
cmc
dec
call
xchg
notb
jl
dec
sbb
mov
dec
inc
jno
push
mov
stc
and
sub
sub
add
outsb
and
mov
mov
xlat
adc
mov
sub
mov
insl
pusha
push
mov
mov
les
test
xchg
les
push
mov
lock
dec
loope
ret
add
aam
mov
repz
mov
cmc
ret
and
jmp
lds
shrl
push
popa
jno
into
stos
jbe
imul
jo
mov
inc
pusha
in
fs
out
mov
and
movsb
dec
outsl
shll
pop
daa
adc
cli
fwait
ret
daa
pop
in
cmp
subl
push
scas
subl
imul
and
movsl
sub
movb
mov
pushf
push
lea
jmp
push
movl
jmp
call
pushf
movl
pusha
lea
jo
pusha
pusha
movl
push
push
push
push
lea
jmp
pushf
movl
movb
push
pushf
lea
jmp
jmp
pusha
pusha
call
fs
cs
sub
xor
mov
movsb
iret
push
out
bound
mov
push
mov
loope
cld
mov
jno
dec
sbb
mov
clc
jb
aam
and
sub
sbb
mov
xchg
and
nop
sub
scas
cmp
inc
iret
and
push
add
mov
inc
cmpsl
mov
shll
test
inc
lds
roll
repnz
and
add
adc
or
and
jae
daa
and
push
or
lds
lods
into
mov
jno
into
lret
imul
loope
add
push
mov
pushf
movl
call
movsl
test
es
in
test
inc
cmp
int
mov
push
sbb
jb
pop
movsb
xlat
adcl
insl
lods
aas
push
cmp
xchg
xchg
mov
inc
xchg
out
dec
push
std
sub
test
fisubrl
mov
loop
inc
push
mov
add
inc
in
mov
and
xlat
out
mov
or
dec
xchg
cwtl
mov
rolb
lds
jae
andb
push
push
inc
je
incl
scas
jp
test
adc
fsubl
iret
sbb
fwait
and
cltd
fdivs
xchg
dec
mov
cmp
adc
sti
testb
out
in
fnsave
inc
outsl
inc
das
pop
pop
mov
push
fbld
xchg
fcompl
pushf
movl
pushf
movl
push
pusha
lea
jmp
pusha
jmp
pusha
call
movw
pushf
movl
pushf
lea
jmp
pusha
movl
mov
pushf
mov
push
lea
jmp
push
movl
pushl
call
pushf
pushf
mov
call
dec
pusha
subb
jp
add
ret
and
mov
test
adc
mov
mov
push
daa
stos
cli
jmp
shll
ja
mov
mov
push
test
push
lock
sbbl
mov
out
sarl
filds
xor
dec
repnz
inc
push
add
stc
mov
shlb
mov
dec
mov
lea
adc
imul
dec
cmp
pop
mov
and
adc
bound
fcompl
dec
ret
imul
shll
inc
lods
cltd
ficompl
inc
add
dec
xor
pop
pop
mov
or
jb
out
pop
mov
loop
lods
nop
pusha
sbb
testb
arpl
fwait
dec
xchg
js
lahf
popa
fwait
in
mov
data16
mov
xor
data16
ljmp
push
and
push
sub
push
jmp
xchg
mov
test
or
jb
mov
scas
or
lcall
int3
test
mov
fwait
dec
jno
ss
pop
nop
jl
ds
fistpll
pop
out
and
xchg
ja
xchg
ljmp
and
repz
leave
jo
xchg
mov
lret
xor
sbb
sub
push
fcomps
mov
hlt
xchg
vcmpsd
insl
inc
or
je
adc
sbb
movsb
insb
shrb
push
repnz
mov
mov
icebp
lahf
daa
dec
and
mov
dec
les
cmp
jle
cmp
dec
icebp
iret
push
pop
stos
jle
cltd
mov
stos
pop
inc
fidivs
popf
jne
jp
jle
repnz
mov
hlt
int3
movl
pusha
push
sti
icebp
fwait
mov
cltd
mov
stos
pop
imul
cwtl
xor
je
xchg
lahf
enter
xchg
icebp
fbstp
jle
jne
mov
or
xchg
fcoml
xor
mov
xor
mov
xchg
jge
fsubr
sub
bound
enter
leave
clc
or
dec
sbb
mov
mov
or
or
cli
aas
xchg
cmpsb
jne
ljmp
and
sub
pop
mov
inc
cmc
sbb
mov
jo
pop
iret
add
call
pushf
jmp
pushf
pushf
call
outsl
jl
scas
xchg
xlat
ljmp
int3
mov
filds
movsb
push
popl
mov
lcall
mov
xor
in
jbe
pop
mov
pop
mov
mov
xchg
mov
add
and
pop
or
loop
add
imul
mov
xchg
sldt
movl
mov
pushf
lea
jmp
lods
cmpl
xchg
pop
int3
and
repz
pop
add
mov
enter
sbb
and
jo
pop
mov
pop
sbb
imul
dec
aam
mov
add
pushf
mov
movl
pushf
push
pusha
jmp
ror
scas
xchg
or
xlat
ljmp
ret
inc
jmp
mov
push
daa
mov
pushf
movl
pusha
movl
movb
pushl
lea
jmp
movl
pusha
lea
jmp
pusha
jmp
jmp
jmp
movl
mov
call
cmp
jecxz
xchg
int
sbb
mov
sbb
movsb
cmp
loopne
scas
or
test
int3
mov
test
pop
xchg
inc
pop
movsl
fnstsw
in
cmc
js
xchg
cmp
fbstp
mov
or
cwtl
inc
out
jns
scas
into
xor
add
dec
test
pop
daa
js
or
outsl
mov
mov
sub
push
pushf
movl
movb
pusha
lea
jb
push
pusha
pushl
pusha
lea
jmp
call
cmp
test
lcall
mov
gs
push
mov
jbe
mov
fidivl
jae
mov
test
push
add
and
lds
mov
add
cmp
je
imul
add
pop
inc
movl
pop
dec
aam
pop
inc
ja
js
xor
repnz
out
sbb
insl
xor
add
inc
push
and
or
dec
and
push
repz
dec
loopne
cmpb
xchg
and
mov
and
adc
and
shr
scas
enter
ss
gs
out
test
in
loop
aad
call
push
push
movl
pusha
lea
jmp
movl
pusha
pushf
pushf
push
movl
movb
pushf
movw
lea
jmp
movl
jmp
pop
jle
cmpsl
pop
inc
cmp
pop
xor
std
pop
cmc
fidivrl
xchg
loopne
fcmovbe
clc
adc
out
data16
jo
lods
or
mov
adc
pop
insb
dec
scas
push
fs
out
arpl
test
or
test
pop
loopne
js
pushl
pusha
mov
lea
jmp
movl
jmp
push
lock
std
std
xchg
xchg
arpl
fwait
ret
jg
xlat
jmp
cs
icebp
pushf
mov
pop
sub
xor
out
sbb
jge
imul
xor
ljmp
jmp
and
ja
movsb
fscale
sahf
add
mov
insl
sbb
mov
mov
cmpsb
xchg
gs
pop
jge
into
cwtl
cwtl
inc
sbb
adc
inc
push
pusha
mov
pusha
lea
jmp
mov
inc
call
cmp
sti
sbb
xchg
in
pusha
jecxz
les
jnp
repz
iret
cmp
rclb
inc
and
pusha
or
ret
adc
xor
call
jecxz
int
pop
inc
fnstenv
jbe
hlt
xchg
jns
repz
ret
popf
or
adc
daa
imul
inc
inc
mov
sti
fdivrs
lock
pushf
movb
movl
pusha
movl
pushf
pusha
pushf
pushl
lea
jmp
pusha
lea
js
pusha
movl
push
call
pushf
movl
mov
movb
mov
mov
lea
jmp
push
movl
pushf
push
movb
mov
lea
jmp
xor
inc
sbb
std
pop
jne
repz
jb
mov
stos
sbb
xchg
jnp
nop
enter
test
ds
push
jle
cli
sarl
pop
std
std
mov
bound
aaa
ret
jge
inc
clc
iret
ret
lcall
pusha
adc
pop
mov
xlat
and
aas
sbb
jge
pop
in
mov
adc
add
loopne
and
push
inc
xchg
int
mov
cs
mov
sbb
in
xchg
push
out
push
xchg
sti
pop
int3
dec
mov
test
xor
jo
jmp
sbb
call
adc
gs
and
imul
inc
movsl
comiss
sti
dec
inc
push
cmp
ljmp
sbb
mov
enter
adc
xchg
jno
mov
mov
ja
add
inc
inc
and
sti
in
add
movw
lea
jmp
movl
pusha
call
dec
pop
jno
xchg
into
cltd
jnp
xor
test
dec
sti
lods
cmpsb
jae
push
aam
addr16
jo
into
adc
sbb
sub
mov
xchg
fadds
sub
and
push
sbb
mov
out
jbe
cmp
xchg
out
cltd
dec
sub
or
sub
andb
in
stos
lret
pop
and
in
mov
push
imul
call
test
fbld
repnz
sub
stc
mov
cmc
out
jo
daa
inc
jns
adc
sub
mov
xchg
sar
dec
add
popf
pop
or
test
test
in
inc
and
and
adc
or
lods
add
inc
or
push
ss
jb
mov
test
lods
jmp
outsb
je
lea
jmp
pushf
movl
mov
lea
jmp
push
movl
call
jmp
movl
pushl
movl
lea
jmp
movl
pusha
lea
jmp
cmp
mov
les
mov
mov
xor
and
xchg
adc
inc
lds
jecxz
jmp
xor
enter
mov
add
in
jp
mov
dec
fst
shlb
imul
aad
push
mov
repnz
ss
mov
jbe
jge
aas
fcomps
outsl
out
in
inc
jno
mov
decl
xor
jmp
inc
and
cs
rcrb
mov
jmp
pushf
movl
push
pushf
push
push
lea
jmp
jbe
push
pusha
push
movl
mov
push
lea
jmp
jmp
jmp
pushf
movl
push
pusha
jmp
push
pusha
call
call
push
jmp
pusha
movl
pushf
movl
pushf
lea
jmp
movl
pushl
movb
push
lea
jmp
and
adc
push
cmp
aad
push
negl
push
repnz
sub
xchg
dec
jecxz
xchg
jo
add
popa
sbbb
test
sbb
cmp
pop
mov
aad
xchg
not
dec
jecxz
xchg
push
fsubrs
pop
sahf
dec
jno
or
rorl
dec
in
mov
sahf
pop
and
adc
outsb
movsl
mov
mov
inc
fmull
sbb
xor
out
mov
mov
pusha
pop
mov
mov
push
out
add
mov
iret
xlat
xor
iret
and
cmp
jbe
in
repz
xorl
stc
fidivrl
inc
cmpsb
in
push
push
push
sbb
rorb
mov
adc
jo
and
in
jne
pop
lds
addb
jnp
aas
pop
out
add
int3
adc
into
ret
mov
dec
mov
push
sbb
cmp
into
sbb
test
xlat
mov
xor
jo
pop
cwtl
pop
mov
js
sub
jle
push
dec
mov
mov
dec
xor
pop
jns
inc
pop
sbb
decb
int3
pop
aas
clc
adc
and
pop
cmp
aaa
dec
mov
xchg
movsl
pop
push
call
rcrl
pop
mov
push
fwait
mov
push
push
mov
xor
lock
addb
js
xchg
cmp
adcb
mov
aaa
enter
inc
and
cs
das
mov
in
fmuls
jecxz
push
cmp
lea
mov
xchg
adc
xor
daa
or
mov
les
std
popf
xchg
push
out
xchg
mov
push
insb
test
adcl
mov
or
aas
sbb
jne
jp
jecxz
add
push
lret
stc
pusha
add
test
pop
dec
mov
cmpsb
xchg
pop
xchg
movsl
push
pop
insb
inc
or
adc
cmp
xlat
lods
cmc
scas
sub
sbb
inc
and
and
gs
mov
push
std
xchg
xor
push
mov
inc
jecxz
jecxz
fwait
xor
ljmp
or
and
push
imul
jbe
insl
aad
xor
icebp
pop
out
xchg
push
sbb
shrl
mov
add
out
sbb
pushf
pop
and
int
xor
add
inc
fmull
shrb
test
cmp
out
andb
ret
xor
daa
mov
pusha
lret
mov
shr
jno
push
out
lcall
sbb
fs
lret
ss
subl
pop
cmp
cld
mov
or
bound
add
inc
cmp
loope
stos
push
fxch
mov
jnp
mov
out
ds
sbb
lods
hlt
jnp
sbb
pop
scas
movsl
jnp
leave
int
pop
add
xlat
xchg
cmpsl
stos
inc
mov
orb
es
push
divb
das
pop
push
andb
and
add
ds
leave
aaa
pop
mov
mov
push
dec
cmc
mov
test
ffreep
repz
sbbl
and
inc
jmp
mov
sub
and
es
jecxz
out
adc
push
pusha
cltd
push
jle
push
popf
lock
sti
fldenv
xchg
stos
add
mov
test
rcr
and
cmp
fbld
or
xor
xchg
lods
xchg
lcall
xor
push
dec
in
and
dec
test
lcall
out
cli
dec
addr16
sbb
lods
repnz
push
mov
xchg
clc
pop
std
shl
cmp
cmpsb
dec
cmp
mov
repnz
xchg
sbb
mov
insl
sarl
mov
cli
sub
xor
int3
fwait
push
and
cli
lcall
div
fstps
pop
push
sbb
mov
inc
xchg
xor
xchg
out
loope
fisubl
fs
popa
rol
xor
dec
and
inc
cmpsl
sti
mov
nop
sbb
dec
imul
js
movsb
insl
mov
xchg
push
mov
and
outsb
call
insb
adc
and
pop
scas
out
jbe
mov
or
pop
adc
ja
hlt
mov
clc
fbld
fs
jnp
push
movw
movl
pusha
jmp
call
jl
push
movl
push
pushl
push
push
movl
pushl
movb
lea
jmp
push
pushf
movb
push
lea
jmp
call
call
jmp
ds
pushf
pop
inc
or
dec
movsb
mov
add
test
fisubl
cld
outsb
lret
push
frstor
mov
shlb
adc
outsb
lret
sub
call
fs
clc
pop
in
scas
test
jns
popa
mov
mov
outsb
xchg
aam
fstpl
add
push
stc
jmp
pushf
les
sub
pop
pushf
imul
call
pusha
pusha
jmp
sbb
xchg
cmp
clc
mov
jmp
dec
sub
out
and
dec
cmp
ret
adc
or
ds
pop
inc
inc
daa
iret
inc
ret
xor
aam
in
xchg
aam
cld
sub
mov
ljmp
mov
dec
pusha
movl
mov
pushf
call
push
pushf
movl
pushf
push
pushf
lea
jmp
jmp
xorb
xchg
lret
stos
add
sahf
arpl
ret
mov
adc
or
mov
jns
dec
jmp
mov
sub
shlb
lods
stc
push
fld
pop
in
xchg
movl
pushf
movb
movb
lea
jmp
sbb
mov
hlt
sub
add
addb
in
jo
push
push
xlat
push
xchg
push
mov
sub
ds
jp
hlt
cld
jne
leave
lods
xor
ret
leave
sbb
in
push
jbe
mov
and
lcall
shlb
push
jns
cmp
adc
mov
push
jl
xchg
js
nop
pop
xchg
or
pop
test
jl
mov
jae
mov
xor
je
movl
pushf
pushf
pushf
movl
pushf
pusha
mov
lea
jmp
movl
mov
pushl
push
lea
jmp
movl
pushl
push
movw
lea
jmp
push
movl
pusha
jmp
pushf
push
movl
push
movw
pushf
lea
jmp
push
movl
pushf
pushf
movb
lea
jmp
jmp
push
pusha
movl
push
pushf
pushl
lea
jmp
jmp
in
mov
dec
xchg
inc
pop
fiaddl
push
and
pusha
fwait
xor
les
sbb
outsb
xor
jmp
xchg
push
pop
jmp
mov
mov
sub
fcomp
in
inc
mov
mov
adc
jnp
negb
mov
jno
and
add
shlb
push
movsb
xor
pusha
jmp
and
mov
or
test
dec
jle
mov
adc
pusha
call
call
idivb
stos
push
je
jg
cmpsb
ljmp
fimull
xlat
jmp
outsl
sahf
pop
shlb
sub
push
pop
int3
stos
rcrl
loope
cmp
dec
cwtl
and
leave
dec
push
xchg
mov
jo
xor
adc
sub
mov
inc
outsb
pop
or
jb
lret
in
fsubrl
out
stos
dec
mov
scas
cltd
or
pushf
mov
ret
call
mov
pushf
pushf
lea
jg
push
pusha
pusha
call
inc
test
cltd
pop
inc
rolb
dec
and
lret
out
and
push
cmp
jmp
adc
addr16
push
ret
popf
or
or
std
bswap
cmp
pop
repnz
jne
ds
jo
xor
cld
push
pop
pushf
jmp
ss
push
shlb
mov
in
adc
and
lcall
push
push
xchg
mov
adc
popf
inc
pop
jl
inc
and
push
jmp
cltd
pop
inc
push
mov
adc
pop
mov
xchg
xlat
movsl
jp
dec
cwtl
or
sbb
cltd
fwait
or
loop
pop
mov
dec
or
stos
xchg
inc
insl
inc
and
jmp
call
push
add
neg
cmp
push
mov
push
ss
mov
dec
and
mov
inc
movsb
mov
xchg
or
jnp
leave
inc
in
mov
movsb
add
jecxz
sub
mov
push
add
pusha
movb
movl
push
pushf
push
movl
pushl
pushf
lea
jmp
movl
push
movb
push
lea
jmp
pusha
movl
call
dec
das
dec
cwtl
pop
inc
push
clc
sbb
aaa
aam
fnstcw
in
test
mov
mov
cmc
iret
cmpl
outsl
xchg
push
and
adc
out
xchg
or
pop
ja
push
test
fwait
es
ljmp
dec
pusha
cmc
mov
pusha
movl
pushf
pushf
pushf
jmp
pusha
movb
movl
pushf
push
movl
pusha
movw
lea
jmp
inc
call
scas
mov
jne
inc
add
sti
in
sbb
cli
shr
shrd
jnp
pop
mov
pop
xlat
mov
imul
xor
in
stos
push
fwait
out
out
xchg
test
pop
inc
stos
shl
out
outsl
lea
and
inc
test
mov
inc
add
adc
std
add
mov
mov
jae
xchg
or
test
xchg
xchg
push
mov
and
bound
rcrl
and
pop
or
pusha
call
pusha
call
mov
xchg
sub
xlat
jb
ja
loop
js
and
jmp
icebp
mov
pop
mov
sbb
xchg
mov
add
pop
or
pop
pop
jmp
fildll
aad
mov
fsts
mov
add
jne
loope
jo
nop
loope
call
daa
hlt
shll
push
sbb
xor
add
and
sub
pop
mov
xchg
xlat
xor
ja
cli
pop
addr16
pop
pop
nop
clc
mov
adc
mov
xchg
xchg
pop
test
pushf
pop
movl
pushf
jmp
mov
add
dec
test
dec
das
or
int3
insb
xlat
out
sbb
arpl
inc
les
insb
xchg
lret
sub
cmc
pop
sub
xchg
lcall
push
fisubrl
movsl
mov
xor
pop
sub
out
pop
lahf
pop
dec
int
inc
sbb
in
repnz
mov
jle
notb
repnz
imull
pop
adc
adc
xchg
mov
shlb
mov
xchg
add
movsb
stc
ret
pop
lods
and
push
pop
cmp
fdivrs
push
mov
shlb
dec
sahf
dec
xor
sti
aaa
stos
adc
xor
shl
push
in
pop
push
pop
call
aas
add
ja
shrl
loop
jecxz
movl
mov
pushl
call
pushf
jmp
jmp
jmp
and
xchg
jmp
add
adcl
ja
dec
stos
cmp
sub
jno
inc
xchg
sbb
iret
jmp
jno
pop
mov
sbb
pop
sub
push
jnp
jmp
dec
xor
test
inc
dec
pop
pop
mov
loopne
dec
or
xchg
std
jmp
loope
push
pushf
pushf
movl
pusha
pushf
pushf
movl
pushf
lea
jmp
adc
pushf
les
xchg
fistpl
inc
jne
adc
andb
inc
pop
sarb
mov
ret
adc
pop
adc
jno
xchg
int3
push
pop
sbb
jns
lea
lret
xchg
movsl
dec
push
je
dec
mov
aaa
popa
pop
incl
mov
sub
jae
push
fwait
rcll
mov
into
imul
movsb
fsubrp
sbb
call
pushf
push
push
jmp
jmp
push
mov
pushl
movl
pusha
pusha
movl
mov
movw
pushf
lea
jmp
fcoml
lods
and
ss
aas
jg
pusha
aam
push
dec
inc
fisttpll
roll
or
repz
orb
or
sti
fwait
xchg
jns
inc
sbb
and
es
decb
jno
jbe
call
jmp
push
mov
mov
subb
cwtl
jmp
or
push
pop
loop
scas
aaa
mov
lcall
inc
jmp
add
aas
push
imul
mov
lds
daa
inc
sub
arpl
movsb
int
inc
sti
adc
mov
dec
sub
icebp
popf
mov
push
or
inc
push
dec
scas
int3
out
or
jg
incl
sub
shl
ja
xor
aaa
xor
into
hlt
scas
xlat
jle
icebp
fdivs
ljmp
mov
mov
repz
pop
sbb
xlat
fsubrl
ljmp
enter
sub
movsb
test
and
imul
xchg
mov
jmp
pushf
jmp
mov
xchg
mov
cld
xchg
adc
and
adc
out
mov
insb
insl
xchg
mov
or
jg
pop
enter
dec
aas
jmp
cmp
aad
xlat
ret
cwtl
xchg
bound
shlb
pop
cli
mov
sbb
loop
in
adc
inc
sbb
hlt
fisubrl
rol
es
mov
repz
or
arpl
imull
repz
subl
push
imul
iret
aam
mov
push
mov
jle
testb
push
pushf
xorl
test
add
jne
filds
icebp
add
jns
fcomp
adc
das
mov
das
int
cli
xchg
inc
in
repz
xchg
push
mov
decb
fiadds
dec
idiv
push
aad
rorl
in
nop
call
pusha
call
pusha
pushf
movl
jmp
pushf
movl
pushf
pusha
pushf
pushf
lea
jmp
int
sbb
add
loope
mov
xchg
daa
rorl
lcall
push
call
mov
fstpt
sbbb
mov
jg
gs
mov
mov
mov
jb
mov
inc
and
cs
ljmp
xchg
xchg
pusha
push
push
lea
jmp
jmp
pusha
jmp
call
pushl
movl
push
movb
lea
jmp
mov
movl
pusha
pusha
movb
lea
jmp
push
pushf
call
movl
pushf
pushf
pushl
lea
jmp
pusha
mov
movl
jmp
cmp
xchg
loop
or
dec
pop
idivl
push
sub
test
popf
dec
sub
pop
cmpb
sbb
ljmp
xorb
movsl
or
aad
cmp
das
pop
jmp
mov
inc
mov
dec
xor
inc
xchg
outsb
fadd
mov
add
jge
push
pop
sbb
fnsave
sub
sbb
int3
jb
rcrl
cs
js
sub
mov
push
clc
xchg
xchg
dec
jbe
xchg
cmp
or
jo
pusha
movl
call
pusha
movl
push
push
lea
jmp
pushl
jmp
jmp
push
movl
jmp
push
movl
mov
pushl
movw
lea
jmp
push
mov
pusha
push
stos
and
addb
out
inc
dec
inc
pop
add
jecxz
pop
imul
stos
adc
daa
negl
stc
test
test
pop
pop
movsl
or
or
sbb
fwait
dec
xchg
sub
sti
in
test
cmp
mov
jge
or
sub
lods
fists
mov
jp
inc
mov
fisttpl
and
movl
pushf
push
movl
mov
pushf
lea
jmp
push
lock
std
std
test
xchg
gs
bnd
jne
dec
cmpsb
sub
pushf
mov
pop
les
xor
add
popf
jge
dec
in
dec
dec
inc
xchg
and
aam
push
iret
add
in
fisubl
adc
test
out
pushf
mov
pop
push
add
inc
inc
jl
in
xchg
push
cmpsl
hlt
and
add
dec
xor
sbb
dec
call
cmp
sbb
xchg
in
pop
xor
psubsw
cld
mov
inc
or
rclb
xchg
fstps
mov
lock
cmp
pop
repz
repz
and
adc
mov
mov
lea
jmp
movl
pushf
movb
lea
jmp
jmp
pushf
jmp
movb
movl
pushf
lea
jmp
pushf
push
movl
jmp
movl
pushf
pusha
mov
lea
jmp
pusha
movl
push
mov
movl
mov
push
push
lea
jmp
jmp
add
mov
inc
popa
inc
push
mov
outsl
leave
lods
sub
mov
fadd
lret
push
or
cwtl
push
jb
mov
std
dec
cmp
jge
inc
cmpl
inc
cmp
inc
mov
push
jle
jmp
popf
rorl
dec
fdivrs
xchg
push
lock
std
std
mov
gs
mov
ret
jb
cltd
int3
iret
iret
jg
and
pushf
mov
pop
jbe
xor
repz
pushf
lods
jge
cltd
in
sub
lods
and
aam
pop
les
out
sub
test
xor
outsb
add
jnp
inc
es
xor
xchg
push
movsl
push
jne
and
ss
add
jmp
sbb
inc
call
push
movl
movw
pushf
pushf
pushf
lea
jmp
fs
cs
ljmp
inc
mov
xor
outsl
stos
mov
dec
mov
jl
pop
xchg
clc
call
xchg
out
jb
dec
sbb
mov
cwtl
push
insl
aam
aad
leave
sub
pop
lret
dec
and
test
mov
sbb
sub
mov
lea
jnp
mov
sbb
jp
xor
iret
je
movsl
cmp
rcrb
cmp
jp
imul
cmc
adc
cmp
je
push
or
in
pop
lods
jo
mov
popa
jno
into
lcall
hlt
mov
inc
es
loope
inc
jl
cmpsb
xor
adc
or
incb
push
pop
jae
in
add
add
pop
xor
in
xlat
xor
popa
lods
test
or
inc
jb
and
es
mov
jl
add
fwait
mov
shlb
pop
cmp
mov
sub
pop
movsl
outsl
int
add
inc
sub
fs
notb
sbb
jae
jo
push
jge
push
add
movsb
out
arpl
jecxz
mov
mov
mov
mov
addr16
nop
ljmp
jns
int
cmpsl
or
fs
jne
mov
and
xchg
mov
mov
adc
push
pushf
movl
movb
pushf
push
lea
jmp
push
movl
pusha
movl
pushf
pusha
lea
jmp
call
lea
jb
push
push
pushf
mov
pushl
lea
jmp
jmp
addr16
push
into
xchg
pop
adc
test
jge
xchg
mov
lcall
stos
push
mov
lds
sub
ljmp
dec
add
push
xchg
xchg
out
daa
or
rep
into
inc
sbb
ljmp
inc
jge
movl
pushf
movl
pushf
pushf
push
push
lea
jmp
movl
pusha
pushl
lea
jmp
push
pushf
movl
pushl
pushf
push
lea
jmp
jmp
xchg
hlt
ja
inc
nop
loopne
cld
out
test
rorl
fadd
std
xchg
in
push
das
inc
fcmovnb
add
xor
iret
and
push
add
movl
jmp
call
call
pusha
movl
pushf
push
pushf
movb
lea
jmp
fs
cs
sub
mov
mov
fs
xor
fisubs
pop
xchg
rdtsc
xchg
cli
mov
mov
pushf
mov
adc
and
pop
aam
mov
sub
cmp
rolb
and
add
mov
dec
and
cmp
and
inc
lods
lea
shll
mov
iret
push
adc
and
shl
dec
jecxz
ret
or
fiaddl
ljmp
dec
sbb
dec
cmc
rcrb
cmp
pop
ja
jns
pop
or
xchg
lds
fisubl
push
popa
jno
into
push
imul
movl
call
push
movl
call
pusha
jmp
pusha
jmp
movl
pushl
push
mov
lea
jmp
movsb
add
inc
jbe
sbb
xchg
jg
xor
cwtl
jns
js
xlat
mov
lret
imul
add
inc
mov
mov
outsb
fwait
andl
inc
jecxz
lods
inc
xlat
arpl
mov
inc
not
js
xlat
popf
adc
subl
pop
out
mov
push
cmp
push
repnz
sbb
fsts
std
mov
xchg
dec
mov
clc
sub
pop
fdivrp
pop
cmp
cmc
pop
mov
movl
mov
jmp
test
shlb
xchg
dec
popa
jno
cmp
in
mov
push
addl
ds
sbb
sbb
movsl
xlat
inc
jecxz
movsl
cmpsw
xor
jg
xor
lret
mov
imul
hlt
push
dec
roll
xchg
rorl
mov
xor
push
movb
outsl
pop
push
hlt
cs
sbb
dec
stos
cli
cwtl
mov
xor
xlat
cmp
mov
add
ljmp
push
idivl
jmp
and
test
jbe
aad
ljmp
jmp
xlat
push
lods
repnz
arpl
sub
sbb
pop
jb
lcall
idivb
cli
aas
fwait
mov
test
add
andb
or
xor
jecxz
push
inc
shl
adc
sub
ja
out
push
fdivrs
jo
sub
addb
cwtl
inc
mov
jns
push
dec
pop
testb
movsl
jmp
jo
bound
xor
lds
into
mov
ret
ljmp
push
rolb
mov
test
and
and
cmp
inc
pushf
out
sbb
or
je
aas
cmpsl
add
loope
xor
xor
movsl
lret
jo
fisubrs
imul
xchg
push
or
cwtl
mov
xor
jmp
lcall
adc
popf
cwtl
scas
idivl
sbb
xchg
and
clc
les
adc
insl
jbe
adc
pusha
add
push
fildl
xchg
orl
push
insl
cmp
bound
hlt
mov
imul
cmp
cmp
iret
xchg
nop
pop
mov
divl
mov
and
xchg
arpl
xchg
mov
cmpsb
push
add
sbb
cs
xor
dec
and
stos
jbe
les
sbb
adc
les
xlat
or
lods
xchg
jbe
push
lcall
add
roll
rorb
inc
lea
psubb
pushf
aaa
out
shlb
xchg
sbb
inc
addr16
xchg
sbb
stos
shrl
outsb
mov
jle
pop
repz
pop
int
push
xor
aaa
inc
repz
pop
or
into
dec
leave
pushf
or
push
int3
mov
repnz
inc
inc
and
push
or
movw
movl
push
lea
jmp
pop
dec
pop
xchg
inc
repnz
cli
pop
test
shrb
xchg
jnp
jmp
nop
xchg
jae
or
xor
mov
add
ds
lret
pop
jo
mov
rcl
mov
push
push
js
jg
cmp
mov
jp
inc
pusha
push
movl
pushl
lea
jmp
loop
rolb
xchg
ss
mov
lahf
repnz
test
outsl
sbb
pushf
xchg
xor
fwait
mov
loope
aam
push
ret
inc
ljmp
out
lds
andl
xchg
adc
adc
in
outsb
movsl
dec
jmp
cmc
sub
das
jbe
mov
inc
jno
cltd
mov
mov
call
add
dec
aaa
pop
bound
mov
test
arpl
xchg
sahf
das
nop
mov
pop
adc
jbe
aam
xchg
aaa
and
sti
dec
gs
hlt
and
cltd
test
mov
into
adc
in
outsl
aam
pop
jmp
dec
and
aam
inc
hlt
xchg
xor
inc
scas
cwtl
mov
dec
pop
int
pop
fidivs
call
push
push
pushf
pusha
lea
jmp
jae
ret
inc
test
mov
into
in
or
in
dec
mov
lock
push
cmpsl
gs
notl
push
xlat
xor
xchg
or
stos
add
sub
mov
les
add
xor
mov
je
leave
mov
mov
xchg
andl
in
sbb
jne
mov
int3
pushl
movl
pushf
push
pushl
pushf
lea
jmp
push
lock
std
std
mov
xchg
gs
mov
ret
jle
outsl
ret
lea
adc
pop
and
xor
aaa
pop
fdivrl
loope
dec
dec
cs
aam
pop
roll
shrl
adc
test
sub
mov
out
popa
add
dec
je
jbe
inc
in
xchg
push
lods
fs
loopne
mov
inc
pop
add
jmp
adc
enter
call
add
stc
insl
push
aaa
push
das
xchg
mov
add
daa
testl
movl
jmp
jmp
jmp
pushf
movl
lea
jb
pusha
pushf
pusha
movl
movb
push
lea
jmp
inc
scas
jnp
es
jmp
adcb
sahf
pop
cmpsl
sti
je
xchg
jmp
mov
cmp
pop
mov
jbe
popf
jp
notb
inc
sub
cli
jmp
or
inc
and
cli
enter
and
mov
lea
jmp
movl
pushl
pushf
pushf
push
movl
pushf
mov
pushf
lea
jmp
pushf
movl
pushf
call
scas
push
or
xchg
xchg
push
lcall
add
cmp
je
pop
imul
inc
enter
hlt
mov
lea
mov
jle
lods
js
js
fcmovnb
pop
jb
adc
in
popfw
and
andb
push
jo
movsl
mov
dec
icebp
sub
sub
movsb
test
or
lock
inc
out
ds
sub
xchg
push
sub
je
cmpsl
lcall
inc
xchg
pop
push
fmuls
inc
mov
outsb
jle
movsl
test
std
xlat
cli
jbe
xchg
adc
orb
adc
xchg
push
mov
es
jp
out
mov
jge
ss
mov
insl
cmpsl
test
cmp
inc
mov
push
lock
dec
sahf
push
in
adc
das
cmpsl
mov
dec
repz
cmp
rolb
repnz
fstpt
sub
adc
mov
xchg
mov
xchg
fsubs
xchg
pop
outsb
daa
imul
mov
mov
add
sbb
aas
inc
pop
sbb
pop
add
int3
ljmp
rcrl
adc
jno
cli
sbb
mov
daa
mov
fxch
pop
push
loope
xorl
pushf
jnp
xor
call
push
xchg
xlat
pop
shl
sbb
jg
imul
pmulhuw
scas
add
mov
mov
subb
mov
pop
subb
rorl
and
scas
xchg
inc
push
lea
ja
push
call
movw
movl
pusha
pushf
push
lea
jmp
movl
pushf
jmp
push
pusha
movl
pusha
pushf
lea
jmp
adc
jg
inc
xlat
shll
sbb
xchg
icebp
sarb
call
xor
xor
mov
stos
lret
das
inc
arpl
leave
test
fsubs
xchg
xchg
mov
dec
movsl
test
fbstp
add
fsts
mov
icebp
in
test
shl
jns
cmpsl
mov
push
movsl
mov
jns
imul
popf
jo
mov
mov
loop
imul
or
jge
xchg
inc
mov
inc
addb
jmp
aaa
mov
mov
lds
aad
add
iret
fwait
mov
mov
add
stos
mov
outsl
mov
jno
sbb
dec
xchg
fcmovb
cs
scas
rolb
push
cs
jp
jb
adc
mov
pop
xchg
mov
shrl
mov
cmp
out
std
mov
leave
add
mov
mov
daa
inc
out
aam
cmp
stc
and
popf
inc
dec
ljmp
adc
xchg
test
jbe
es
adc
mov
test
add
or
scas
xorl
xor
cmpsl
xor
inc
iret
in
dec
and
dec
out
ret
or
jl
stos
test
cmpsb
sbb
cmp
es
jns
jns
pop
or
into
lds
popa
jno
into
or
jg
pusha
movl
pushf
movl
pushf
pushf
pusha
lea
jmp
call
popa
cmp
jge
mov
out
test
loop
adc
sub
pop
ja
mov
leave
and
cltd
bound
and
push
jno
xchg
rclb
je
aas
lahf
pop
int3
je
xor
clc
xor
frstor
vmovddup
lds
jmp
test
add
and
dec
neg
es
lcall
cmp
inc
loop
dec
jg
inc
adc
push
stos
fnstsw
cltd
fisttpl
mov
xchg
sub
cmc
jns
mov
dec
jmp
pushf
pushf
call
push
jmp
push
movl
pushf
jmp
lea
jne
push
jmp
movl
movw
movw
call
push
jmp
test
loope
mov
inc
mov
dec
out
sbb
jp
scas
jnp
btr
movl
push
lea
jmp
jmp
out
enter
aam
push
jp
aaa
push
mov
dec
sbb
jmp
and
sub
sti
xchg
jbe
cmp
jg
mov
jp
nop
sarb
push
fisttps
xchg
aaa
shl
loopne
push
jmp
add
add
or
add
push
add
push
add
mov
add
add
add
xor
add
dec
push
add
sbb
add
lock
add
rclb
add
push
add
cmp
add
sub
add
dec
add
fs
add
jl
add
mov
add
add
add
add
add
add
inc
add
aam
add
int3
inc
add
mov
add
test
add
mov
inc
add
pusha
inc
add
xor
add
sub
add
clc
inc
add
in
add
rolb
add
inc
add
mov
inc
add
js
add
and
add
sbb
add
inc
add
movsb
inc
add
clc
aas
add
mov
add
xor
add
mov
cmp
add
hlt
cmp
add
cmp
add
add
mov
add
add
addb
inc
addb
sub
add
mov
add
jle
add
add
add
xchg
jnp
add
add
fs
add
add
inc
jnp
add
jnp
add
jp
add
jp
add
jp
add
jns
add
jns
add
add
jl
add
les
add
add
add
sbb
add
mov
jae
add
jo
add
add
xor
add
add
in
outsb
add
fsubrs
add
add
int3
insb
add
test
add
add
or
add
bound
add
add
in
add
pop
mov
add
push
add
enter
mov
xchg
add
test
add
mov
xchg
add
test
add
add
add
sub
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
and
and
add
add
add
or
push
add
add
add
add
add
add
add
cmp
cmp
cmp
push
add
inc
add
push
add
add
push
add
cmp
add
add
dec
add
pop
add
dec
add
dec
add
cmp
push
add
add
add
add
add
dec
add
inc
add
aas
add
inc
add
dec
add
add
xor
add
add
bound
data16
imul
ret
jmp
add
imul
add
adc
add
das
ljmp
addr16
xchg
ljmp
ljmp
inc
jmp
add
add
ja
add
lcall
add
add
xor
add
jo
add
mov
in
add
fsubr
add
add
in
add
mov
add
int
add
lock
add
sbb
add
popa
out
add
jbe
add
lcall
add
out
add
xchg
add
mov
out
add
jmp
add
adc
add
dec
lock
outsl
lock
nop
lock
shl
add
adc
add
test
repnz
jne
add
mov
add
shl
add
icebp
repnz
psllq
add
add
mov
add
add
add
sub
hlt
add
popf
hlt
add
fdiv
add
pop
cmc
add
inc
cmc
add
je
add
test
cmc
add
or
testb
jne
add
pop
testl
add
testl
add
add
movsb
clc
add
jmp
stc
add
jae
add
movsl
stc
add
iret
stc
add
sbb
add
push
cli
add
cmp
add
jnp
add
mov
cld
add
dec
cld
add
cld
add
sar
add
adc
add
push
std
add
lcall
add
incb
add
incb
add
add
xchg
incl
add
add
add
add
add
add
jns
add
xchg
add
add
add
add
add
add
add
add
js
and
xor
outsl
bound
push
inc
jns
outsl
bound
inc
and
jo
xor
push
fs
outsl
bound
push
inc
popa
je
dec
imul
jo
xor
push
fs
outsl
bound
push
inc
popa
je
dec
imul
js
and
cmp
jns
outsl
bound
push
inc
popa
je
dec
imul
js
and
xor
jns
outsl
bound
push
inc
popa
je
dec
imul
gs
inc
and
jo
xor
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
add
gs
popa
arpl
addr16
outsb
outsw
push
popa
bound
inc
push
fs
outsl
bound
inc
imul
je
outsl
outsb
and
jno
jbe
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
push
fs
outsl
bound
push
inc
popa
je
dec
imul
arpl
gs
fs
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
je
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
je
popa
outsb
addr16
addr16
gs
jno
jb
add
fs
outsl
bound
push
inc
popa
je
dec
imul
imul
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
imul
imul
jbe
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
fs
outsl
bound
push
inc
popa
je
dec
imul
dec
je
insl
and
jno
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
dec
gs
je
insl
and
jno
jbe
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
push
gs
fs
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
push
gs
fs
outsl
jne
je
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
je
jno
jb
add
fs
outsl
bound
push
inc
popa
je
dec
imul
gs
je
gs
insl
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
dec
je
insl
and
jno
imul
jns
outsl
bound
push
inc
jns
outsl
bound
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
outsb
imul
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
gs
add
fs
outsl
bound
push
inc
popa
je
dec
imul
gs
inc
gs
gs
je
insl
and
jno
jbe
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
gs
inc
gs
gs
fs
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
gs
inc
gs
gs
fs
outsl
jne
je
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
gs
inc
gs
jb
je
inc
outsl
jne
je
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
gs
dec
outsb
imul
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
gs
dec
outsb
imul
imul
jbe
inc
push
fs
outsl
bound
push
inc
popa
je
dec
imul
gs
push
popa
jbe
push
je
gs
insl
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
push
fs
outsl
bound
push
inc
popa
je
dec
imul
gs
jb
je
insl
jae
jno
jb
add
fs
outsl
bound
push
inc
popa
je
dec
imul
gs
je
dec
imul
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jns
outsl
bound
push
inc
popa
je
dec
imul
je
je
insl
and
jno
imul
outsb
outsl
bound
push
inc
popa
je
dec
imul
je
outsl
popa
fs
je
insl
dec
imul
jo
ss
fs
je
inc
push
dec
je
insl
dec
imul
fs
je
inc
push
dec
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
jns
outsl
bound
push
inc
popa
je
dec
imul
je
je
insl
and
jno
imul
jns
outsl
bound
push
inc
popa
je
dec
imul
jns
outsl
bound
push
inc
jns
outsl
bound
add
fs
outsl
bound
push
inc
jns
outsl
bound
inc
insb
outsl
outsb
gs
jno
jbe
inc
push
fs
outsl
bound
push
inc
jns
outsl
bound
inc
gs
inc
push
inc
imul
jno
jb
add
fs
outsl
bound
push
inc
jns
outsl
bound
inc
gs
imul
jne
inc
outsw
jb
and
jno
imul
jns
je
insl
inc
push
popa
jb
popa
outsb
je
inc
push
fs
outsl
bound
push
inc
jns
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
jno
jbe
inc
push
fs
outsl
bound
push
inc
jns
outsl
bound
inc
gs
gs
je
insl
and
jno
jbe
inc
push
fs
outsl
bound
push
inc
jns
outsl
bound
inc
gs
gs
gs
fs
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
jns
outsl
bound
inc
gs
gs
jb
je
inc
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
outsb
outsl
bound
push
inc
jns
outsl
bound
dec
outsl
popa
fs
jb
insl
pop
dec
dec
and
jno
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
fs
je
inc
push
inc
imul
je
outsl
add
fs
outsl
bound
push
inc
jns
outsl
bound
push
popa
jbe
push
outsl
pop
dec
dec
and
jno
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
fs
je
inc
push
inc
imul
je
outsl
add
fs
outsl
bound
push
inc
jns
outsl
bound
push
gs
inc
push
inc
imul
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jns
outsl
bound
push
inc
jns
outsl
bound
push
gs
imul
jne
inc
outsw
jb
and
jno
imul
jae
gs
inc
push
popa
jb
popa
outsb
je
imul
outsb
outsl
bound
imul
imul
and
jno
jbe
inc
push
jp
fs
outsl
bound
outsl
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
inc
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
push
push
push
and
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
push
imul
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
push
popa
arpl
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
jb
popa
je
dec
bound
and
jno
jbe
inc
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
popa
je
push
outsl
push
imul
outsl
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
gs
gs
push
gs
arpl
and
jno
jo
ss
js
insb
inc
push
fs
jb
gs
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
outsb
popa
bound
jne
arpl
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
jb
gs
bound
and
jno
jbe
inc
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
gs
jne
push
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
gs
gs
jne
je
js
and
jno
jbe
inc
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
gs
gs
jne
je
imul
jno
jb
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
gs
gs
jne
je
imul
jb
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
inc
gs
outsb
jne
imul
jno
jb
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
dec
outsb
imul
jno
jbe
inc
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
dec
outsl
popa
fs
popa
je
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
dec
outsb
inc
jne
je
insl
inc
jb
ja
gs
insb
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
ss
jb
jo
imul
outsb
jbe
jae
js
xor
gs
push
push
arpl
xor
insb
inc
push
fs
jb
gs
imul
jo
xor
insb
inc
push
fs
jb
gs
imul
insl
outsb
outsl
outsl
outsl
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jb
jo
imul
insb
outsl
jb
xor
jb
jo
imul
outsb
je
xor
inc
insb
popa
jae
gs
push
inc
insb
imul
jb
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
dec
outsb
dec
je
insl
inc
outsl
jne
je
push
and
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
dec
outsb
push
popa
addr16
push
and
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
dec
outsb
push
popa
addr16
outsl
jne
je
push
and
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
popa
jbe
inc
popa
je
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
popa
jbe
push
jb
gs
popa
je
and
jno
jo
ss
js
insb
inc
push
fs
jb
gs
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
gs
jne
jb
outsb
je
imul
jo
xor
push
fs
outsl
bound
push
inc
popa
je
dec
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
gs
popa
je
dec
imul
and
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
jo
xor
popa
inc
push
dec
je
insl
dec
imul
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
gs
outsb
jne
outsl
fs
jno
jb
outsl
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
gs
outsb
jne
imul
jno
jb
outsl
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
gs
imul
jbe
inc
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
push
je
dec
imul
and
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
jb
gs
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
jb
gs
jne
je
insl
inc
jb
ja
gs
insb
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
ss
jb
jo
imul
outsb
jbe
jae
js
xor
gs
push
push
arpl
xor
insb
inc
push
fs
jb
gs
imul
jo
xor
insb
inc
push
fs
jb
gs
imul
insl
outsb
outsl
outsl
outsl
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jb
jo
imul
insb
outsl
jb
xor
jb
jo
imul
outsb
je
xor
inc
insb
popa
jae
gs
push
inc
insb
imul
jb
add
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
push
jb
gs
bound
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
fs
outsl
jo
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
fs
outsb
jae
jb
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
je
push
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
gs
jb
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
insb
gs
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
jo
jb
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
inc
push
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
jo
jb
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
outsb
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
gs
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
popa
arpl
jbe
inc
js
arpl
gs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
bound
gs
inc
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
bound
jb
jbe
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
bound
outsl
outsl
insb
jae
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jp
fs
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
gs
popa
addr16
outsl
dec
gs
outsl
ja
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
jae
ss
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
js
jns
outsl
bound
outsl
jb
inc
push
pop
js
jns
outsl
bound
outsl
jb
inc
je
gs
outsl
jne
gs
push
jno
jb
xor
jns
je
insl
inc
push
dec
bound
arpl
push
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
xor
gs
push
push
outsl
imul
push
jp
fs
outsl
bound
outsl
jb
inc
pop
js
jns
outsl
bound
outsl
jb
add
jp
fs
outsl
bound
outsl
jb
inc
imul
imul
and
jno
jbe
inc
pop
js
jns
outsl
bound
inc
inc
gs
popa
arpl
addr16
outsb
outsw
push
popa
bound
jno
jb
add
js
jns
outsl
bound
inc
push
popa
arpl
addr16
outsl
popa
fs
jno
jbe
inc
pop
js
jns
outsl
bound
inc
push
popa
arpl
addr16
outsb
insb
outsl
popa
fs
jno
jbe
inc
pop
js
jns
outsl
bound
imul
imul
and
jno
jbe
inc
imul
add
imul
add
rorb
popa
jnp
ljmp
dec
adc
pop
mov
ljmp
lret
cs
call
loope
fdivs
dec
xchg
cmp
fs
dec
ret
xor
jbe
xor
mov
imul
inc
mov
bound
and
push
xor
mov
int3
and
dec
adc
lds
bnd
cmpsb
inc
mov
cmpsl
inc
mov
test
inc
mov
int
aam
sbb
push
ljmp
add
in
adc
jl
fstpt
or
add
adc
or
les
sbb
jnp
xor
arpl
fsubs
sbb
shrl
cmp
mov
xor
out
adc
fidivrl
cmp
fildll
mov
push
stc
cmp
and
incl
lds
mov
jmp
xchg
dec
or
push
dec
aas
push
cs
and
mov
es
mov
pushf
gs
cli
sbb
daa
arpl
adc
cmc
loopne
xchg
or
jmp
pop
push
lret
xchg
gs
or
fistps
fnstcw
data16
ret
out
xor
aas
out
leave
xchg
jl
in
jo
cltd
out
into
adc
push
cmp
roll
push
mov
leave
jge
imul
sub
push
aam
or
xor
lods
push
mov
lahf
stc
loope
lds
mov
mov
stos
test
sarb
add
sbb
sti
inc
xchg
addl
push
fwait
cmp
inc
outsl
mov
xchg
bound
mov
push
mov
pusha
pop
loopne
in
cmp
stc
xor
mov
ja
movsl
das
cmp
xchg
jle
and
jg
ret
sbb
mov
insl
hlt
frstor
inc
sbb
pop
push
lods
jge
cmc
fldl
shll
dec
mov
push
orl
fldl2e
xlat
test
inc
shll
gs
cmc
ss
xchg
out
gs
mov
aas
mov
add
ja
xchg
inc
pusha
outsb
mov
xor
jmp
inc
sbb
mov
jnp
adc
fsubl
ja
outsb
jp
jg
dec
insb
clc
test
sbb
insl
xchg
sbbb
into
dec
mov
movsl
std
push
jae
mov
cmp
int3
bnd
mov
pushf
shlb
movsl
lock
rdmsr
in
aas
outsb
popa
je
mov
movl
pop
aas
push
lcall
add
iret
daa
mov
inc
scas
jmp
xor
mov
add
outsb
inc
sub
sbb
loopne
shlb
lret
outsb
lds
mulb
lods
into
sarb
subl
or
adc
insb
mov
mov
jp
inc
ret
fdivl
sbb
jge
fcomp
ret
idivb
push
xchg
out
das
repnz
pop
cmp
or
dec
shll
lods
not
shr
cmp
mov
lret
repnz
adc
fistpl
cmpsb
mov
xchg
sub
je
sub
mov
ret
push
aaa
fbstp
daa
test
stc
inc
mov
inc
cltd
sub
fsubrl
div
push
xor
cmp
test
in
sub
pop
lds
adc
jno
mov
push
aas
data16
cltd
lods
rclw
enter
add
rcll
lahf
sbb
jecxz
dec
clc
adc
mov
outsl
cmp
and
loopne
mov
pushf
das
mov
mov
lods
sub
loope
mov
ret
mov
into
ret
movsl
stc
cmpsl
fs
sbb
mov
or
jns
xor
ficoml
push
je
cmp
add
jmp
fcom
mov
popf
lahf
jl
cmpb
ljmp
push
aas
push
addr16
xor
jno
inc
dec
or
mov
jmp
fdivrs
adc
mov
sub
pop
pop
mov
inc
addr16
fildl
xchg
lods
mov
subl
mov
sub
aam
leave
les
mov
jecxz
mov
add
jecxz
pop
and
outsl
decl
orl
jbe
fstpt
faddl
xchg
das
mov
in
pop
out
hlt
popf
iret
loop
test
and
jp
mov
push
mov
lock
mov
daa
mov
mov
mov
and
daa
pop
xor
jae
adc
cmp
js
or
movsb
iret
in
les
and
shll
sbb
test
movsb
in
inc
lret
xchg
mov
mov
ljmp
lods
addl
fldenv
ja
push
jne
mov
mov
lahf
inc
testl
inc
gs
fistl
pusha
xor
jmp
je
out
shlb
jb
sub
shlb
xor
mov
es
cmp
mov
adc
dec
and
push
data16
and
stos
push
lcall
out
bswap
stos
data16
and
push
repz
out
mov
mov
cmp
shrb
sbbl
xchg
mov
out
mov
cmp
inc
ror
push
push
mov
dec
sbb
add
lret
sub
add
dec
and
mov
inc
lahf
pop
inc
fwait
or
int
push
adc
rcrl
sbb
pop
int
mov
cwtl
lods
lock
jg
arpl
lds
shlb
stos
xchg
ds
lahf
sbb
stos
jnp
aam
push
push
push
mov
test
jecxz
cwtl
inc
lret
and
insb
mov
bnd
ss
xchg
xchg
in
loopne
add
inc
clc
or
jne
mov
pop
loop
jg
jg
and
adc
or
fistpl
out
pushf
mov
popl
clc
jo
adc
aas
adc
xor
cmp
mov
aad
bound
jo
dec
das
int3
inc
lods
xchg
xor
mov
imul
in
mov
jne
dec
mov
push
shrl
cli
iret
lahf
jo
and
sub
int3
xchg
fistps
xor
jmp
mov
test
dec
movsb
cmpsl
and
xlat
testl
xchg
lds
adc
or
std
mov
xor
cmp
xchg
scas
jne
cmp
mov
xchg
sar
xor
ret
mov
fsubl
in
sub
mov
rol
mov
fwait
lock
pop
mov
xchg
cmp
inc
ds
pop
cmp
push
mov
test
sub
inc
cmp
pushf
scas
push
mov
fs
movsl
cmp
paddsw
popa
xchg
in
pop
mov
mov
push
jo
decl
inc
inc
aam
mov
outsb
pop
sarl
xor
lds
jbe
add
imul
in
enter
stos
jmp
outsb
cmp
nop
enter
sub
adc
sbb
mul
repnz
repz
inc
aas
and
sbb
cmp
test
or
popa
enter
xor
jb
dec
addb
test
ds
xchg
js
adc
stc
pushw
test
pop
mov
fldcw
inc
sbb
cmpl
cmp
jle
stc
ficoml
loope
pop
push
push
sub
mov
mov
xor
lret
sbb
outsb
cli
sbbb
lds
lret
push
push
jg
jmp
cmp
aas
or
sub
xchg
loopne
nop
inc
mov
xchg
movsl
andl
add
pop
mov
out
lods
pop
cmc
lcall
out
pop
and
mov
jne
lds
or
or
mov
sbb
jbe
incl
xchg
dec
sahf
mov
repz
sbb
inc
inc
jecxz
loop
sub
xchg
mov
cmp
ret
mov
and
out
jecxz
repz
popa
mov
loopne
in
loope
ljmp
nop
lds
icebp
sti
xor
jo
jmp
stc
jae
mov
xchg
nop
jbe
mov
dec
setnp
aaa
or
pop
adc
lret
iret
test
xchg
fmul
fisttps
mov
lret
cs
jne
lret
xor
mov
lret
push
lods
sub
add
dec
mov
lahf
xlat
lahf
fnsave
add
mov
adc
cmpsb
repnz
je
psraw
out
add
insb
xchg
ret
pop
adcl
jl
repnz
xchg
sub
cmc
popa
dec
and
cmpsl
and
dec
pop
mov
mov
pop
xor
cmc
das
or
f2xm1
jo
jne
pop
xchg
mov
ret
cs
stos
mov
pop
fisttpll
aas
jecxz
add
mov
subb
sbb
lcall
js
leave
jne
push
adc
push
xchg
and
adc
inc
push
jbe
sub
mov
jl
andb
test
push
aaa
and
xlat
fnstsw
pop
or
std
push
aaa
call
out
pop
dec
fnstsw
jbe
xchg
jne,pn
repnz
sbb
in
sahf
stc
and
outsb
mov
push
adc
xor
iret
movsb
test
lods
push
mov
cmp
insl
lret
xchg
pusha
or
push
or
ss
sbb
pop
pop
inc
cltd
or
push
sub
shl
decb
imul
sub
enter
int
and
iret
ja
inc
cmp
mov
pop
outsb
dec
adc
test
pop
rclb
fisubrs
jbe
ss
addb
scas
adc
lahf
shrb
push
std
fwait
xchg
dec
sbb
sub
in
inc
out
mov
pop
mov
mov
mov
loope
mov
xchg
or
jns
mov
fsubrp
dec
dec
movsb
into
rorb
lret
or
inc
xchg
add
xchg
or
adc
dec
sub
out
cmp
cmp
xor
sbb
or
sub
int
push
lahf
xor
shr
mov
sbb
rcr
lahf
rcrb
ret
and
scas
and
cmp
mov
nop
sbb
xchg
cmp
repz
gs
popa
lret
mov
cmp
sub
lret
pop
pop
int
call
stos
mov
add
adc
jns
bnd
ss
cmp
mov
xor
xchg
adc
inc
sub
lret
and
jmp
cs
ds
push
mov
push
adc
sbb
pop
jne
push
push
ret
lods
dec
add
push
inc
mov
in
jo
dec
lods
inc
sub
stc
pop
adc
emms
lods
out
pop
aam
divl
adc
or
into
test
push
push
mov
sub
js
jns
outsl
bound
bound
dec
cmpb
pop
addr16
fisubl
cltd
adc
notb
cmp
mov
js
mov
leave
sbb
fdivl
icebp
inc
bnd
leave
dec
lods
cmp
inc
xlat
or
jmp
sub
pop
adc
adc
xlat
mov
jb
and
cmc
jp
paddusw
insl
fcoml
dec
rcr
test
mov
je
sbb
and
sub
inc
into
push
repnz
sbb
cwtl
pop
sub
sahf
mov
or
sbb
insb
mov
xchg
and
sahf
push
cld
dec
inc
stos
jmp
out
inc
fwait
rol
cmp
pop
test
mov
inc
jmp
mov
lds
xor
jno
adc
pop
mov
out
jnp
repz
dec
int
and
pop
pop
fwait
fwait
xor
mov
repz
mov
xchg
pop
add
popa
pop
loope
dec
jle
shl
cmpsl
xchg
push
push
mov
cwtl
inc
pop
inc
in
sub
dec
repz
mov
fbstp
fdivrl
aaa
xchg
xchg
mov
or
loopne
call
or
cmp
add
inc
call
pushf
dec
inc
sub
push
cs
gs
mov
inc
je
adc
sub
jp
sarl
loope
cwtl
ffree
pop
mov
aaa
inc
inc
pop
inc
dec
loopne
jmp
sub
iret
and
sub
sub
ficompl
aas
in
inc
in
cmpsl
ret
sub
mov
dec
shr
popa
inc
jae
fwait
dec
movsl
cmp
push
lea
inc
insb
out
push
ja
imul
push
inc
mov
dec
mov
xlat
xorb
jge
adc
push
dec
mov
mov
shll
sti
loop
fsubrl
pop
dec
and
mov
addr16
sahf
arpl
inc
xor
or
push
xchg
mov
mov
lea
and
clc
mov
inc
jae
leave
push
or
xor
fdivr
sub
cmp
jmp
mov
push
out
test
repz
icebp
pop
pushf
in
mov
shrl
mov
cld
adc
dec
inc
mov
mov
cmp
inc
jge
adc
xchg
movsl
push
inc
push
clc
std
push
clc
inc
out
gs
scas
push
outsb
add
xor
test
aam
ret
mov
insl
push
push
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jo
jb
insl
jae
insb
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
jb
gs
imul
add
inc
dec
insl
push
arpl
outsl
jb
imul
imul
and
jno
jbe
add
inc
inc
js
js
push
imul
imul
and
jno
jbe
movsbw
bswap
pop
pusha
pushl
ret
add
inc
inc
insb
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
pushl
mov
movb
pushf
pushl
ret
add
inc
dec
jbe
jns
gs
imul
imul
and
jno
jbe
add
inc
dec
jbe
popa
jae
fs
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
jne
je
outsb
jae
imul
imul
and
jno
jbe
dec
sarb
mov
mov
cmp
dec
mov
cwtl
sbb
xlat
mov
or
mov
xor
stc
sbb
fdiv
aam
pusha
movsb
cmpsl
or
pop
or
fcomps
xor
cld
es
xchg
mov
push
fnstsw
mov
mov
and
fistl
scas
aas
repnz
cs
leave
filds
and
adc
fcmovb
pop
ss
and
jo
ds
inc
xchg
cmp
cli
xchg
cmp
inc
pusha
mov
repnz
lret
mov
mov
inc
push
adc
fists
cmp
adc
xchg
es
push
mov
iret
and
cmp
adc
add
or
test
push
and
inc
jns
addr16
test
mov
gs
lahf
xchg
jo
in
lcall
mov
shrl
lret
xchg
bound
adc
add
push
negb
adc
pop
popa
push
pop
insb
orb
iret
push
mov
addr16
insl
and
fldl
lds
cmpsl
int3
insb
mov
fmulp
scas
xor
inc
outsb
fnstenv
dec
and
mov
popf
or
stos
enter
adc
push
fadds
jge
xchg
stos
test
lea
sbb
sub
dec
imul
or
add
je
mov
fs
je
inc
push
dec
je
insl
dec
imul
inc
outsl
jo
dec
outsl
fs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
je
add
out
aam
xchg
ja
cld
fstps
and
add
adc
bswap
test
xchg
mov
mov
cmpsb
cltd
enter
in
out
cld
fdivp
shlb
test
cs
sbb
adc
imul
andb
frstor
dec
test
enter
jmp
xlat
cmp
inc
sub
xchg
sti
loop
movb
loopne
cmp
pop
inc
scas
iret
out
sbb
stos
dec
pop
mov
in
cs
cmp
adc
sarl
pop
cmc
aad
out
xchg
idivb
aad
pop
pop
jecxz
mov
pop
mov
xorb
call
icebp
xchg
in
xchg
and
inc
jb
and
inc
push
push
shrl
popf
out
popa
ret
mov
stc
or
inc
loop
call
mov
add
mov
sub
stc
cmp
inc
push
jae
jg
scas
je
adc
imul
xlat
cmp
xchg
sub
mov
mov
mov
xchg
call
mov
mov
ret
inc
mov
xchg
ret
repnz
pusha
mov
mov
js
negb
dec
and
aam
push
ficomps
adc
aam
mov
mov
outsb
mov
mov
xchg
fsubs
cs
shrl
out
loop
int
mov
xchg
sub
das
or
mov
adc
or
xchg
push
add
add
cmc
shld
mov
cmp
cmpb
jmp
push
push
pushl
popl
movb
pushf
pushf
pushl
ret
add
inc
dec
jo
addr16
imul
imul
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
push
popa
arpl
addr16
outsb
insb
outsl
popa
fs
jno
jo
xor
push
jns
je
insl
inc
push
popa
arpl
addr16
outsb
outsw
push
popa
bound
xor
push
jns
je
insl
inc
push
dec
imul
add
inc
mov
icebp
push
cmp
sahf
sub
sbb
repnz
and
rcr
dec
push
aas
mov
sbb
cmpsb
fsubs
jnp
inc
pop
repnz
rclb
adc
add
movsb
or
insb
inc
cmp
push
ret
outsl
shrl
mov
test
sti
mov
add
movb
add
cmp
inc
fxch
pusha
mov
dec
sub
cmp
scas
lock
ret
outsl
cmpsb
faddl
stos
inc
pushf
mov
int3
ljmp
sti
jmp
xor
and
mov
mov
mov
call
pop
in
add
push
daa
mov
cmpsb
std
sbb
add
dec
pop
loopne
lcall
pop
pop
icebp
cltd
sub
push
and
xchg
mov
push
hlt
fidivs
int3
cmpsb
fildll
je
cmp
inc
cmpsb
dec
out
lods
xchg
pop
dec
adc
sub
aam
pop
ret
outsl
out
les
loop
push
add
sbb
push
jge
jp
in
xchg
daa
add
insb
jnp
mov
fs
push
mov
sub
mov
mov
sbb
cmp
jl
fs
cli
pop
and
loope
test
mov
daa
leave
cmp
rcl
test
lods
cmp
lock
and
pop
jmp
xchg
jmp
pop
movsl
fdiv
popf
mov
mov
xor
xor
xchg
dec
push
push
hlt
dec
cmpsl
loopne
mov
dec
jbe
outsl
insl
jo
outsb
outsb
je
imul
imul
and
jno
jbe
call
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
jns
inc
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
lea
jne
cmp
jmp
lea
jne
push
lea
jne
jne
push
push
pusha
inc
movw
inc
pushf
lea
jmp
adc
enter
test
dec
pop
push
loop
push
int
scas
push
repz
movsb
pop
push
and
test
out
imul
or
mov
mov
mov
push
ljmp
loope
push
imul
dec
addr16
pusha
sub
push
xor
sbb
jnp
adc
stc
fnsave
pop
aas
dec
mov
inc
and
stos
into
out
ljmp
push
jb
xor
test
ljmp
mov
cltd
sahf
xor
xchg
sarb
bnd
xchg
cmc
loop
inc
in
xchg
sbb
pop
sub
insl
xchg
ss
sti
pop
hlt
dec
mov
and
xor
rcl
xchg
mov
push
aas
sarl
pop
jl
xor
and
mov
cmp
inc
ljmp
dec
outsb
dec
fimull
cmp
jb
xor
mov
lods
sbb
mov
or
mov
lcall
xchg
les
shrl
mov
jecxz
mov
int3
xchg
pusha
in
jo
movsb
push
xor
xchg
or
insl
push
fimull
sahf
test
jno
or
loop
xor
dec
xchg
push
pushl
cmp
dec
push
dec
fwait
sahf
hlt
sbb
popa
add
add
loope
jo
pop
jg
bound
fs
je
inc
push
dec
je
insl
dec
imul
outsb
imul
add
inc
push
imul
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
test
aaa
pop
inc
mov
xor
cld
cwtl
jbe
mov
cmp
cld
xchg
mov
pop
add
jl
add
inc
mov
xlat
pushf
or
pop
or
shlb
icebp
insb
negl
ret
sub
test
data16
or
lea
adc
xchg
movb
push
fisubrl
int3
xor
fnstenv
arpl
push
xchg
enter
insb
adc
mov
test
dec
loopne
insl
jecxz
insb
inc
mov
and
xorb
add
sti
adc
pop
inc
and
fidivrl
out
add
ficoml
sahf
ljmp
lds
sbb
mov
movsb
jge
xchg
mov
inc
and
insb
mov
int3
int3
insb
and
sub
xchg
in
cmpb
ss
inc
inc
test
lret
jecxz
sahf
inc
mov
leave
data16
jg
scas
jmp
pop
repnz
mov
repz
jl
jnp
stos
imul
xor
jo
dec
sbb
adc
cmp
mov
movsl
pop
jns
repz
push
jp
arpl
push
test
jecxz
and
pop
idivl
adc
ja
in
not
xor
fstpt
ret
das
dec
bound
test
jle
sbb
mov
gs
js
imul
je
popa
insb
imul
and
jno
jbe
movzwl
movzbw
bt
pusha
mov
bt
stc
movb
cmp
add
cmc
jmp
add
inc
inc
js
popa
jae
gs
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
push
popa
addr16
outsl
jne
je
jno
jb
add
lods
mov
pop
inc
ret
in
data16
cmc
dec
jecxz
leave
mov
xchg
mov
adc
adc
adc
je
out
les
or
bound
lret
adc
in
cmp
pop
xchg
bound
sahf
xor
pop
aad
into
sub
dec
out
test
int
movb
pop
call
pop
inc
pushw
stos
test
imul
stos
fs
inc
sahf
xor
aad
aaa
dec
push
scas
inc
jno
mov
xor
mov
lcall
and
and
das
jns
pusha
std
xor
outsb
sbb
popf
jl
lds
lret
pusha
cmp
jg
test
lock
mov
pop
or
aam
jb
add
in
push
test
push
jmp
push
pop
daa
cmp
inc
add
xor
xchg
gs
xchg
test
and
gs
loope
das
ret
popa
fdivl
scas
or
and
mov
lea
lea
movzwl
pushf
lea
movzbw
lea
movsbw
lea
pushf
call
add
inc
push
jns
je
insl
inc
inc
dec
push
je
dec
outsb
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
popa
imul
outsl
ja
jno
jb
imul
pop
inc
inc
add
adc
mov
out
add
sub
xchg
mov
ja
mov
xchg
clc
out
sub
ljmp
inc
lret
fadds
imul
notl
gs
das
popf
aad
cmp
sub
lcall
add
ret
popa
cmpsl
push
rol
pop
jle
xor
push
jae
pop
inc
subl
jecxz
pop
sbb
mov
lea
jae
aad
call
jmp
or
mov
fimuls
xor
shll
inc
in
push
add
push
das
in
pop
cmp
mov
rorl
and
and
dec
fstpl
jl
mov
xor
pop
inc
inc
adc
push
xor
ss
aam
sahf
jbe
mov
das
and
pop
xor
push
mov
divb
pop
inc
push
scas
jmp
test
push
pop
jnp
int
cmp
cmp
aam
dec
or
hlt
xchg
jne
js
pusha
push
decb
xchg
es
insl
xchg
cltd
cld
xchg
sub
mov
mov
xchg
mov
inc
jo
mov
bound
jmp
pop
mov
imul
cs
popa
fbstp
fs
int3
in
push
xchg
cmp
inc
inc
jp
jb
in
inc
mov
inc
outsl
lods
xchg
stc
sbb
aaa
push
outsl
mov
add
inc
inc
bound
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
jp
imul
imul
imul
jbe
add
inc
dec
arpl
jb
outsb
arpl
jbe
jb
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
je
outsb
inc
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
add
jne
jo
outsl
addr16
jae
bound
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
jp
gs
popa
je
inc
imul
imul
and
jno
jbe
add
inc
push
jne
gs
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
push
jno
jbe
inc
push
aaa
pushf
mov
stc
sarb
adc
sti
dec
xchg
mov
addr16
notl
inc
leave
jo
sbb
xchg
js
pusha
out
xchg
or
pop
mov
dec
ljmp
scas
xlat
sbb
push
imul
out
and
or
mov
loop
bound
inc
insl
dec
sbb
and
add
adc
shll
push
std
jb
pop
inc
subb
sub
mov
in
enter
int3
push
data16
push
mov
sbb
bound
inc
mov
sbb
mov
in
mov
push
in
inc
es
scas
sbb
loop
push
nop
jo
dec
jo
mov
into
and
add
sbb
and
mov
pop
fstl
movsb
pop
shrl
arpl
repnz
mov
xchg
flds
sub
push
repz
xlat
orb
subb
push
dec
pop
sahf
or
fcomi
mov
subl
mov
addl
popa
push
test
int3
push
push
push
adc
test
insl
pusha
cmc
out
mov
scas
adcl
or
mov
mov
stc
mov
xor
push
mov
lahf
or
insl
sub
mov
movsb
hlt
movsb
pop
sub
or
ljmp
sub
sub
andb
insl
push
jo
jne
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jae
insl
insb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
ja
popa
jo
inc
imul
imul
and
jno
jbe
pusha
movb
pushf
push
mov
movb
lea
jno
call
push
jmp
add
inc
dec
jbe
je
je
jae
popa
jb
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
imul
fs
imul
jo
ss
fs
je
inc
push
inc
imul
je
add
inc
push
jns
je
insl
inc
dec
outsl
jbe
and
jno
jo
jbe
jbe
add
add
js
insl
popa
addr16
imul
imul
and
jno
jbe
add
inc
dec
arpl
arpl
imul
imul
imul
jbe
add
inc
dec
arpl
je
inc
imul
imul
and
jno
jbe
add
inc
dec
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jb
je
push
je
je
and
jno
jo
xor
jae
jae
push
push
jb
je
jb
add
inc
push
fs
je
inc
push
dec
je
insl
inc
dec
outsl
popa
fs
jb
insl
push
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
insb
popa
jae
gs
push
dec
imul
outsl
jb
jno
jb
xor
push
jns
je
insl
inc
push
dec
gs
inc
insb
popa
jae
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
push
jne
arpl
arpl
imul
imul
imul
and
jno
jbe
pop
lea
aad
pop
jno
xor
or
cmp
lret
xor
loopne
pop
les
mov
jb
test
in
gs
mov
inc
or
fdivrl
jp
cmp
mov
cmp
pop
shl
pop
inc
xor
jne
cmp
icebp
xchg
mov
pop
test
and
lock
test
shrb
xchg
or
pop
jnp
inc
xor
rcrb
mov
and
clc
push
dec
out
or
dec
in
js
mov
in
test
imul
adc
insl
mov
xchg
js
popa
enter
and
insl
or
sub
inc
in
xchg
xor
fidivrs
test
negl
sbb
and
jne
cmp
mov
cmp
mov
jne
lret
gs
sub
and
mov
out
bound
out
sbb
xor
sub
loopne
enter
adc
sahf
data16
pop
jb
cmp
lcall
adc
xchg
iret
mov
in
and
mov
sarb
sub
xor
mov
sub
inc
cmpsb
xchg
mov
insb
push
and
das
das
xchg
ret
aas
mull
sub
sub
ret
test
js
out
or
xchg
ljmp
and
insb
xchg
jle
cltd
lfs
movsb
dec
mov
outsl
inc
repz
popf
out
lret
loope
inc
push
gs
adc
xchg
cmp
or
mov
lods
loope
sub
xchg
and
incb
jo
pop
inc
jmp
in
aam
mov
push
ljmp
enter
dec
push
repz
fcoml
adc
jnp
lock
mov
cmp
inc
sahf
cmc
pop
cs
or
ror
stos
ljmp
and
inc
scas
and
das
daa
loope
rcr
push
in
push
icebp
popa
subb
popf
xchg
daa
mov
push
out
mov
movb
cs
js
sub
inc
fsincos
fnsave
jne
movsl
in
clc
rolb
je
addl
or
lods
test
and
insl
inc
movsb
stc
jmp
sbb
shll
dec
addr16
mov
pop
push
inc
iret
fs
jl
int3
in
ret
xchg
call
popa
fldl
pop
dec
pop
jo
and
or
fidivl
and
and
mov
cmpb
xlat
jp
movsl
xchg
dec
pop
sub
inc
scas
add
int
add
in
mov
frstor
mov
dec
mov
clc
fcomps
inc
pop
out
dec
and
call
pop
xchg
loop
lds
and
xchg
jno
lods
dec
jbe
mov
pusha
jge
mov
daa
repz
ljmp
dec
lds
mov
sub
mulb
push
inc
pop
jo
ja
sub
push
jge
cwtl
mov
movsl
ljmp
mov
mov
das
push
and
pop
call
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
jne
push
outsb
addr16
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
inc
js
imul
imul
jb
jo
jae
je
jb
imul
outsb
popa
insb
imul
and
jno
jbe
add
inc
dec
jbe
outsl
je
jb
arpl
gs
imul
inc
imul
je
outsl
outsb
and
jno
jbe
adc
mov
fdivr
adc
ja
or
out
negb
sahf
ljmp
sbb
aas
pop
ds
xor
shlb
cmpsb
mov
into
pop
adc
scas
mov
add
or
pop
gs
mov
lahf
jge
or
pop
movsb
dec
mov
vminsd
fdivs
mov
push
rclb
cmc
jne
js
add
mov
or
imul
xchg
cmp
push
ret
stos
adc
leave
or
ljmp
ljmp
js
daa
outsl
and
inc
mov
sbb
pop
lods
xchg
adc
js
push
jg
mov
mov
mov
sub
call
test
ljmp
test
fwait
sarl
insl
ret
jmp
in
insl
dec
outsl
inc
outsl
insl
pop
sub
dec
clc
pushf
dec
mov
inc
inc
js
data16
inc
inc
imul
je
outsl
outsb
and
jno
jbe
jbe
mov
outsb
lea
loopne
mov
cmp
out
ss
inc
lret
fnsave
mov
xchg
stc
push
cli
out
mov
inc
push
lds
mov
sbb
shr
fwait
jns
sbb
rorb
add
mov
into
mov
dec
stos
cld
imul
bound
mov
clc
pop
movb
pop
dec
cmc
sbbb
movsl
lds
or
in
or
cld
imul
sub
or
pop
mov
jge
mov
pop
jne
addl
in
cltd
in
shl
adc
xor
in
nop
mov
xlat
jns
cld
orb
push
loope
insl
xchg
clc
outsb
adc
das
scas
sbb
push
dec
mov
jns
mov
shll
jg
mov
dec
dec
jne
add
mov
pop
inc
lret
dec
jmp
insl
xorl
jns
stos
cld
imul
cmp
or
sahf
in
dec
and
insl
dec
test
pop
mov
push
inc
jmp
ja
adc
fsts
push
std
imul
xchg
stos
mov
lahf
dec
fwait
clc
xchg
ret
cwtl
push
mov
cs
push
xor
in
je
push
and
mov
popa
adc
data16
nop
mov
push
dec
aas
loop
adc
mov
pop
jp
xor
cmp
jp
mov
inc
scas
push
mov
add
add
push
pushf
lea
jmp
add
inc
dec
gs
jo
outsb
je
jae
imul
imul
and
jno
jbe
jo
shll
shll
mov
fs
leave
mov
enter
out
push
push
shrb
mov
lret
jmp
imul
pmaxsw
mov
shll
loope
inc
daa
into
fs
push
sbb
push
test
outsb
jmp
outsl
cs
pop
outsl
fsts
out
shr
out
cmp
test
loopne
lcall
jbe
shl
and
inc
or
push
or
xchg
and
shr
sub
clc
push
xor
push
xor
and
push
and
outsb
cmp
cmp
mov
setp
rclb
test
out
shlb
outsl
and
xor
pop
movsl
xchg
sub
pushf
pop
cmp
loopne
orl
int
inc
out
movsb
add
sarl
cmp
mov
fucomp
xor
in
xor
fiadds
pop
inc
dec
loopne
stos
xor
movsb
popf
bound
sahf
enter
ret
call
sub
push
out
inc
and
call
enter
and
pushf
add
cs
jnp
sbb
sbb
fnsave
ret
pop
cmpsl
xchg
cmp
mov
mov
sbb
sub
xlat
subb
aad
fsubrs
mov
or
mov
arpl
test
fnstsw
outsb
push
clc
add
test
lret
stos
dec
sub
inc
sbb
lods
add
push
test
fs
je
inc
push
dec
je
insl
dec
imul
push
popa
addr16
imul
js
add
add
insl
je
arpl
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
popa
insl
gs
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
and
inc
test
out
add
mov
scas
sbb
pusha
lret
cltd
imul
mov
fs
jl
dec
inc
sub
int
xorb
mov
inc
mov
mov
stos
inc
fldl
push
add
xlat
aas
sub
ret
push
lods
outsl
sbb
adc
cmpsl
inc
popa
sub
out
adc
movb
icebp
inc
push
mov
arpl
mov
inc
push
aas
sub
aam
icebp
call
or
inc
pop
xor
call
sub
das
jecxz
pusha
lret
icebp
push
fwait
mov
and
dec
bound
push
jge
aam
jo
shrb
and
cltd
pop
aaa
or
adc
loopne
pop
xchg
mov
push
sarb
es
and
dec
fs
cld
mov
sub
pop
inc
mov
adc
mov
and
cmp
aad
icebp
out
jo
xor
aaa
lods
xchg
sub
mov
sbb
pushf
sub
aam
add
outsl
cli
mov
pop
mov
les
jecxz
out
dec
xchg
ficoms
push
insb
xor
and
inc
cli
adc
aad
and
in
add
pop
pop
sub
sub
mov
mov
test
dec
addr16
sub
or
cmp
and
sub
cmc
mov
mov
push
add
inc
inc
js
jb
jo
imul
je
popa
insb
imul
and
jno
jbe
pop
xchg
and
inc
inc
lods
push
imul
and
popa
pop
cmpsl
or
cltd
dec
loop
push
sti
ret
adc
addb
int3
mov
mov
mov
shrl
loope
inc
sub
cmp
dec
incb
imul
dec
and
iret
xchg
scas
push
mov
test
stc
mov
jp
insl
inc
test
movb
xchg
imul
in
imul
shr
adc
sbb
sbb
jbe
dec
and
ret
arpl
das
pusha
mov
int3
sti
sbb
fbstp
add
lods
shll
mov
xor
fstpt
mov
inc
push
and
sub
sbb
inc
sti
lret
xor
fpatan
add
mov
or
lods
outsl
push
enter
mov
nop
jmp
pop
inc
inc
loope
push
jecxz
mov
add
inc
test
mov
push
into
stos
or
shl
gs
xor
push
aas
adc
jne
xor
push
lds
rclb
pop
ds
lods
stc
shlb
loop
mov
cld
mov
ret
jmp
mov
out
push
stos
in
mov
and
push
incl
sub
lock
push
sub
incl
test
push
clc
push
movsl
or
gs
arpl
sub
ret
dec
mov
decl
inc
dec
insl
imul
imul
outsb
popa
insb
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
jno
popa
insb
dec
inc
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
pop
pop
inc
ds
aaa
xchg
sub
lahf
stos
or
into
sarb
dec
sub
or
dec
out
shll
cmp
add
aam
inc
mov
mov
add
jmp
pushf
lea
dec
jne
in
movsb
out
mov
popf
xchg
das
hlt
in
aad
pop
jle
xchg
push
push
je
pop
inc
subb
movsl
xchg
js
push
insb
cmp
jae
movsb
and
cmp
mov
pop
mov
jne
mov
cmp
and
pop
pop
inc
sub
push
add
inc
mov
dec
mov
test
cmp
adc
add
es
stc
lret
adc
fistps
xlat
sbb
bound
mov
or
cs
insl
add
faddl
nop
cli
into
sub
pop
inc
repz
mov
push
test
xorl
adc
mov
loope
xor
mov
out
shrb
inc
xor
pushf
xor
ss
ret
add
out
mov
std
and
cmp
ds
jmp
lret
cmp
testl
xorps
fsub
sub
cmp
cwtl
add
inc
test
loope
sub
cmpsb
test
sbb
jge
notb
inc
test
js
popa
add
inc
push
jns
imul
imul
je
outsl
outsb
and
jno
jbe
andl
out
pop
or
add
jbe
xchg
cmp
add
hlt
int
lods
push
sbb
sarl
std
sahf
inc
test
xchg
rorl
jl
int
les
and
mov
test
or
xchg
sub
push
stc
adc
movsb
xor
leave
repz
cli
rclb
dec
pusha
fisubrl
movb
ja
loopne
test
push
pop
inc
and
ljmp
and
push
movsb
xor
sahf
imulb
in
jne
mov
push
mov
mov
cmp
jae
stc
push
ret
sub
sub
js
cltd
and
sub
hlt
adc
hlt
push
sub
xchg
mov
sub
pop
dec
icebp
cmp
dec
subb
ror
idivb
out
or
pop
mov
ss
aaa
push
push
xlat
xchg
ds
js
inc
lock
lods
xchg
mov
sbb
aad
adc
dec
push
push
jbe
lahf
pop
movsb
xor
jb
imul
inc
sub
or
dec
lods
or
call
sbb
movsb
pop
xchg
push
jmp
jl
loop
cmpsb
sbb
or
cmpsb
sahf
cmc
aaa
sbb
cmpsb
or
add
clc
push
pop
and
pusha
mov
stc
insb
test
and
xor
and
pop
add
cmp
jns
xor
push
stos
in
ds
mov
fwait
and
push
fs
je
inc
push
dec
je
insl
dec
imul
push
jb
gs
jno
jo
xor
inc
js
insb
inc
push
fs
jb
gs
imul
inc
js
arpl
imul
imul
imul
and
jno
jbe
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
jne
jb
jae
gs
inc
imul
je
outsl
outsb
and
jno
jbe
repnz
lock
inc
lret
shlb
jmp
inc
test
pop
mov
pop
hlt
gs
and
and
bound
and
or
jnp
jecxz
mov
nop
jns
lahf
inc
push
jmp
loope
daa
xor
cmp
xchg
inc
popf
movsl
push
cmp
xchg
add
sti
ret
lock
notl
movb
inc
jle
xchg
aaa
sbb
inc
mov
sbb
cltd
cmc
adc
cmp
fnstenv
movsl
jl
jecxz
bound
xchg
xchg
pop
ss
xchg
cmc
cltd
std
adc
xchg
fisubrl
mov
jmp
adc
test
aam
xor
pop
sub
sbb
outsl
push
jne
jno
bound
iret
adc
insl
pop
loop
push
mov
pushf
cmc
push
out
jmp
jecxz
and
push
mov
dec
xor
and
inc
xchg
mov
xor
mov
in
xchg
dec
inc
popf
movsl
shld
cmp
and
cld
mov
dec
xor
popf
pop
out
and
or
push
add
add
push
movsl
jo
jnp
lods
add
push
xchg
jge
sub
stos
stos
inc
es
loopne
outsb
pop
shrl
dec
addr16
cmc
aaa
jbe
adc
arpl
test
loopne
push
pop
repz
pusha
test
loope
sub
stos
popa
pop
lret
out
push
mov
add
js
insl
popa
arpl
bound
outsl
js
imul
imul
and
jno
jbe
add
inc
dec
jbe
jo
jne
je
outsb
jae
push
dec
jbe
push
inc
jne
je
outsb
inc
add
add
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
jae
imul
jno
jo
cmp
popa
jae
gs
push
push
gs
imul
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
dec
outsb
imul
outsl
jo
jno
jb
xor
inc
js
insb
inc
push
fs
jb
gs
imul
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
je
insl
pop
dec
dec
and
jno
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
fs
je
inc
push
dec
je
insl
outsl
outsl
add
inc
mov
shll
fildll
mov
data16
jno
push
shlb
pop
sbb
repnz
adc
gs
std
stos
sbb
iret
ret
dec
sub
imul
xchg
inc
and
and
push
and
push
dec
jecxz
testb
dec
insl
push
jae
insl
jo
gs
imul
imul
and
jno
jbe
add
inc
dec
insl
push
jo
jne
inc
imul
imul
and
jno
jbe
add
inc
push
jne
insl
popa
imul
imul
imul
and
jno
jbe
add
inc
push
jns
jne
imul
popa
je
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
jns
je
insl
inc
push
push
popa
jb
arpl
add
add
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
inc
outsl
arpl
gs
jno
jbe
cmp
pop
pop
inc
mov
popf
jle
negb
mov
xor
fistpl
push
in
inc
lcall
push
ljmp
aas
pop
outsl
subb
imul
pop
push
xchg
add
js
popa
insb
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
add
inc
inc
js
popa
jae
gs
popa
insb
imul
and
jno
jbe
bound
insb
aaa
xor
bound
add
add
insl
popa
imul
popa
insb
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
jne
jb
dec
outsb
je
jb
popa
arpl
jno
jae
js
pop
inc
push
dec
inc
jo
add
add
fs
je
inc
push
dec
je
insl
dec
imul
dec
je
insl
pop
dec
dec
dec
outsl
fs
jno
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
inc
inc
insb
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
popa
gs
popa
insb
insb
inc
js
gs
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
add
add
jns
je
insl
inc
push
imul
fs
gs
jno
jo
aaa
push
jns
je
insl
inc
push
dec
imul
add
add
jbe
arpl
imul
imul
imul
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsb
imul
jno
jo
aaa
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
add
add
bound
arpl
imul
imul
and
jno
jbe
add
inc
pop
insl
insb
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
dec
push
je
dec
inc
jae
and
jno
jo
jo
jbe
push
or
into
push
aam
das
and
cmp
sbbb
nop
lret
inc
fs
sub
loope
out
push
jae
or
std
push
lds
fcmovb
shlb
adc
push
add
add
push
in
fmul
xor
cld
cs
mov
jg
inc
ffreep
jne
mov
inc
mov
pop
xchg
inc
jmp
mov
inc
out
jns
jbe
cmp
clc
push
lock
cltd
test
stos
jae
mov
mov
jae
popa
lret
in
ss
pusha
add
ja
add
sub
lock
xor
add
pushf
aaa
frstor
pop
inc
xor
and
or
hlt
xor
mov
jmp
pop
repz
jae
mov
fmul
pop
pop
mov
lcall
pop
inc
jmp
inc
loope
sub
push
das
adc
or
mov
leave
adc
or
incl
push
out
call
xchg
mov
sub
or
mov
add
jns
mov
mov
push
push
push
pop
aaa
adc
mov
movsb
fdivrl
xchg
lds
jp
xor
pop
jecxz
arpl
adc
push
sub
xchg
hlt
aad
fnsave
xor
fcmovnbe
int
jl
xchg
fwait
in
pushf
mov
call
add
inc
inc
js
push
popa
outsb
popa
addr16
imul
imul
and
jno
jbe
push
or
jmp
jmp
cmp
mov
call
lea
adc
inc
mov
test
stc
stos
push
pushf
lods
stos
fdivl
mov
cwtl
or
push
cmc
push
xor
adc
rcl
rol
test
cmp
jo
and
xchg
aaa
loop
xorb
notb
cmpl
jmp
xor
dec
push
call
pop
imul
loop
enter
inc
sub
jmp
inc
repz
sub
jmp
cmp
pop
sahf
xchg
aaa
movsl
pop
fs
cmpsl
test
inc
movsl
or
outsb
dec
push
inc
sub
sbb
pop
lret
cli
jecxz
bound
sub
mov
cltd
mov
scas
xor
inc
pop
sbb
sti
push
add
jo
imul
mov
lcall
dec
hlt
aad
cwtl
mov
repnz
cmp
jle
mov
lret
mov
pop
adc
inc
movsl
scas
jbe
inc
dec
jo
out
fbld
sbb
std
pop
adc
outsl
push
andl
jecxz
stos
in
mov
jae
sarl
sarb
adc
arpl
call
dec
loop
xor
jnp
pop
or
stc
das
add
aad
xchg
imul
lahf
addr16
test
pop
enter
jge
mov
dec
loop
lcall
std
xchg
push
out
lods
rorl
dec
dec
mov
inc
inc
arpl
imul
je
outsl
outsb
inc
add
add
imul
inc
imul
je
outsl
outsb
and
jno
jbe
not
lea
pusha
movb
jmp
add
inc
inc
bound
insl
insl
outsl
outsb
inc
imul
imul
and
jno
jbe
add
inc
dec
jbe
jo
jae
outsl
jb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
mov
inc
lods
int3
daa
add
subl
jae
divb
sbb
push
negl
jae
hlt
add
lret
mov
mov
out
repnz
sahf
cwtl
jnp
dec
adcl
xchg
or
stos
enter
sub
push
lret
cmpsl
inc
or
out
inc
inc
cmp
imul
push
in
push
ret
ljmp
jg
addb
dec
and
dec
lds
test
movl
arpl
add
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
inc
outsl
jne
je
jno
jb
add
add
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
push
gs
outsb
outsw
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
js
popa
je
jne
imul
imul
imul
jbe
push
push
pushf
adc
inc
call
inc
outsb
mov
dec
out
or
fwait
call
mov
test
lock
dec
clc
pop
jle
stos
adc
das
and
in
pop
jecxz
shrb
dec
xchg
mov
push
add
movsl
add
outsb
in
xchg
insb
test
xor
xor
push
xchg
lock
adc
lods
movb
inc
test
adc
inc
adc
fidivrl
mov
fwait
jle
sub
cmp
xchg
lock
dec
mov
dec
mov
mov
mov
sbbl
arpl
mov
sub
xchg
and
sbb
push
xchg
cld
dec
test
cmp
aaa
fimuls
sub
mov
movsb
sbb
push
outsb
push
in
bound
enter
add
xor
test
mov
icebp
fnstenv
and
mov
xchg
sub
hlt
mov
push
lock
and
sub
addr16
sbb
lret
xchg
ds
or
fisttps
scas
out
stos
mov
es
sahf
sahf
mov
in
dec
inc
cmpsb
bound
jbe
shl
lret
cmp
mov
cmpsl
repz
mov
test
mov
movsb
mov
xchg
jle
mov
scas
mov
jle
sub
and
sub
stos
mov
daa
lret
arpl
clc
movsb
movl
pop
adc
push
pop
inc
push
movsb
inc
sub
movsb
lret
imul
popf
fistpl
pop
or
sbb
xorb
inc
add
dec
stc
xchg
sahf
inc
jnp
mov
lret
mov
xchg
in
cmc
pop
mov
loop
push
into
or
mov
pop
or
cmp
lock
or
call
frstor
jae
gs
inc
inc
dec
outsb
je
inc
fs
gs
jno
js
xor
gs
inc
and
push
gs
popa
arpl
je
aaa
push
jns
je
insl
inc
dec
dec
outsb
je
jb
popa
arpl
add
fisttpl
in
cmpb
pushf
lea
jmp
mov
shr
bsr
pusha
shr
mov
setns
mov
stc
xor
push
cmp
bt
stc
repnz
mov
lea
jne
add
clc
mov
inc
adc
sub
shl
dec
bt
sbb
mov
test
cmc
clc
sub
push
pusha
pushf
pushf
lea
jmp
add
inc
inc
js
gs
outsl
inc
imul
imul
and
jno
jbe
loope
ret
inc
and
mov
not
cmp
stc
xchg
mov
subl
jbe
aaa
lret
test
lods
jle
sub
sbb
imul
and
xor
leave
push
lods
xorb
ds
mov
adc
cli
jle
out
popf
add
add
inc
dec
jbe
jo
outsl
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
gs
jne
arpl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
pushf
lea
je
jb
pusha
cmc
cmp
lea
push
pushl
ret
jmp
add
inc
dec
jbe
jne
je
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
imul
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
call
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
gs
imul
jbe
add
inc
inc
js
fs
addr16
imul
imul
and
jno
jbe
add
inc
inc
outsl
arpl
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
dec
fucomp
or
inc
aas
xchg
xor
aas
xchg
icebp
push
mov
push
mov
xchg
push
push
pop
cmpsb
sbb
mov
mov
shlb
or
icebp
sahf
mov
call
pop
xchg
mov
fdivrs
nop
ret
push
push
push
in
mov
movb
sub
movsl
xchg
test
pop
and
push
or
inc
push
push
cli
xlat
mov
jb
je
in
and
imulb
jmp
xor
pop
std
pop
arpl
pop
int3
insl
add
out
stos
fwait
mov
mov
cmpsb
jb
sub
pop
mov
sub
adc
arpl
fninit
cmp
stc
sbbb
lds
sub
and
or
add
test
fidivs
push
mov
je
ja
xor
ljmp
cli
lret
fimull
pop
inc
sub
insl
test
loopne
out
push
push
in
adc
pop
mov
push
int3
gs
mov
dec
imul
mov
inc
push
adc
gs
mov
cmp
fsubrs
dec
pop
add
ss
test
xchg
inc
call
out
jmp
mov
les
scas
adc
sbb
test
push
js
leave
in
lods
push
popa
fcompl
inc
outsb
mov
and
jns
xchg
inc
mov
pop
outsl
stos
andb
push
jne
jae
sti
pop
cmp
repz
mov
lods
or
inc
scas
dec
loope
and
push
adc
sub
xchg
jno
scas
addb
cmc
xchg
mov
ss
icebp
test
popa
jno
test
sbb
mov
sub
lret
and
or
inc
fwait
push
repz
gs
jb
and
xchg
lock
xchg
xchg
inc
push
or
stos
dec
lds
int3
hlt
test
test
lret
ficoml
or
fwait
icebp
shl
pop
cmp
xor
roll
pop
sub
cmp
add
jbe
js
outsl
jb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
je
insl
inc
push
push
and
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
push
fs
je
inc
push
dec
je
insl
imul
mov
incl
add
insl
push
jo
jae
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
arpl
data16
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
outsb
arpl
gs
imul
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
imul
addr16
jno
jo
xor
popa
inc
push
push
imul
add
insl
insb
jae
push
imul
imul
and
jno
jbe
add
inc
dec
outsb
jne
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jne
insl
popa
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
popa
jb
popa
outsb
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
dec
outsl
je
imul
outsl
outsb
and
jno
jo
cmp
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
cmp
popa
jae
gs
push
dec
jo
jb
je
outsl
outsb
add
add
insl
insb
imul
je
popa
insb
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
push
gs
arpl
dec
outsl
fs
jno
jb
add
add
fs
je
inc
push
dec
je
insl
inc
dec
outsl
popa
fs
je
gs
insl
inc
data16
jb
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
pop
inc
sarl
pop
sti
aam
dec
movsb
xor
dec
bound
fs
inc
in
into
out
lods
dec
insb
add
fildll
rcll
dec
mov
inc
fnsave
fsubp
call
jecxz
xchg
add
cld
aad
or
gs
inc
mov
std
lahf
mov
sub
jge
cmp
inc
jle
mov
xchg
ss
sub
dec
nop
or
mov
push
or
pop
dec
mov
jmp
sub
jl
jne
dec
fistpl
lret
icebp
out
ret
xchg
jp
lea
stc
outsb
add
mov
ja
lea
and
pop
int3
sbb
dec
push
outsl
test
push
jno
and
inc
and
inc
mov
out
inc
jl
push
int
pop
inc
fyl2x
pop
jl
mov
mov
and
mulb
mov
lds
inc
xchg
outsl
pop
das
les
xor
cli
and
loop
lcall
and
and
xchg
repz
adc
int
pop
lahf
dec
add
shlb
lock
rorb
int3
call
fisttpl
ret
mov
xor
jbe
cli
jnp
addb
inc
test
ljmp
add
sub
mov
lret
ljmp
mov
mov
add
inc
dec
jbe
imul
outsb
popa
insb
imul
and
jno
jbe
add
inc
dec
insl
push
jo
jb
insl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
arpl
popa
je
inc
aaa
bound
add
inc
push
out
inc
cmpsl
inc
and
mov
ja
fcoms
fxch
mov
ret
xchg
es
in
inc
and
mov
inc
adcb
es
jg
jae
ficompl
rcl
push
ljmp
inc
mov
xor
jecxz
jb
daa
fs
movsb
pop
and
shl
mov
ds
idiv
out
movb
mov
add
inc
and
stos
or
add
jmp
adc
imul
xor
hlt
scas
fsub
inc
and
sub
and
inc
and
jne
sbb
xor
cmp
and
fs
test
lock
add
adc
xchg
push
xlat
out
adc
jmp
adc
adc
jb
add
hlt
stos
adc
dec
ljmp
inc
call
sub
mov
cltd
sub
add
mov
xchg
fimull
pop
cmp
and
fs
mov
sub
fnsave
add
fildll
subb
cmp
inc
stos
fwait
ljmp
xchg
inc
fsubl
and
mov
jg
setnp
nop
imul
xchg
test
lock
mov
adc
mov
shrl
loope
jmp
mov
push
xor
push
cmc
mov
dec
data16
dec
add
inc
push
fs
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
insl
outsl
bound
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
arpl
data16
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
cmp
inc
inc
imul
je
outsl
outsb
and
jno
jbe
bsr
mov
pusha
clc
clc
pushf
add
test
movzwl
btc
sbb
shl
and
mov
jmp
add
inc
push
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
inc
gs
jne
jb
outsb
je
imul
add
add
jbe
js
jb
fs
imul
imul
and
jno
jbe
jmp
add
inc
dec
insl
push
arpl
data16
outsb
imul
je
outsl
outsb
and
jno
jbe
not
mov
pop
movsbw
pop
jmp
add
inc
push
fs
je
inc
push
inc
imul
je
imul
gs
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
imul
jo
xor
popa
inc
push
dec
je
insl
dec
imul
and
je
pushf
cmp
call
add
inc
push
jo
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
jbe
push
je
gs
insl
inc
data16
jb
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
pop
inc
push
je
jne
stos
loope
pop
loopne
cmpsb
mov
outsb
imul
mov
xor
xor
mov
adc
xor
inc
pop
add
mov
in
dec
add
jne
loope
push
leave
in
gs
loopne
sahf
cmpsl
mov
in
pusha
dec
lods
dec
stos
mov
push
add
mov
push
pop
jb
sub
and
jns
movb
push
ljmp
mov
shl
shlb
jnp
fwait
mov
jb
dec
stos
mov
xchg
push
mov
pop
xchg
jnp
sti
fdivrl
adc
pop
loope
xlat
int3
mov
jp
mov
sar
call
mov
mov
jecxz
mov
mov
fcompl
push
int
and
lret
call
sarb
pop
jl
jg
jle
add
movsl
pop
mov
add
inc
ficompl
xchg
lods
jnp
dec
scas
aad
sahf
dec
stos
mov
add
mov
movsl
popf
sbb
adc
xchg
ds
jb
ja
mov
rorb
push
push
jl
int
mov
xor
jmp
push
jg
fmul
shrl
pop
lret
mov
stos
pop
pop
je
sub
adc
push
lea
and
test
jl
mov
mov
out
popa
push
int
fisttpll
loop
test
push
lods
add
mov
and
add
inc
dec
insl
popa
imul
imul
imul
and
jno
jbe
add
inc
inc
js
js
gs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
cmpb
call
jmp
inc
xor
cli
sahf
sbb
fwait
es
mov
fists
cmp
inc
cmp
pop
mov
adc
push
insb
or
stc
cwtl
xor
xor
fcomi
je
imul
loopne
jg
neg
stc
fcomp
xor
inc
ret
cwtl
into
jne
hlt
sbb
xchg
mov
jg
pop
mov
popf
movb
sahf
xor
add
inc
subb
sub
sub
mov
fcmovnbe
into
jne
mov
mov
leave
loopne
test
pop
sub
ret
pushf
int
xchg
push
dec
fs
pop
push
sar
or
or
mulb
push
imul
rcrb
nop
out
daa
adcb
and
jl
xchg
lods
add
jae
adc
sub
loopne
mov
out
jge
call
ds
push
inc
lds
inc
lock
mov
int
popa
mov
clc
xor
ds
maskmovq
mull
xor
xor
fs
aad
scas
jmp
cmpsb
repnz
dec
mov
test
call
aas
xor
lock
push
xchg
cmpsb
outsl
pusha
popa
and
push
jg
xlat
fbstp
popa
out
mov
and
and
cwtl
mov
sarl
cmp
sub
daa
mov
pop
pusha
ret
je
je
fnstsw
iret
inc
call
scas
sahf
cmc
dec
add
inc
dec
arpl
insl
gs
inc
imul
je
outsl
outsb
and
jno
jbe
lea
je
call
add
inc
dec
jbe
outsl
insl
arpl
jae
inc
imul
je
outsl
outsb
and
jno
jbe
movl
pushl
pushf
lea
jmp
add
inc
push
imul
imul
imul
and
jno
jbe
add
inc
push
jne
je
je
bound
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
outsl
jb
arpl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
test
pushf
push
cmc
cmp
pushf
pusha
lea
ja
pusha
add
clc
or
pushf
jmp
pushf
or
jmp
movb
lea
je
bt
sub
pusha
pusha
cmc
cmp
push
pushf
pushl
lea
ja
clc
imul
clc
pusha
clc
add
movw
lea
jmp
add
inc
push
jne
je
gs
gs
imul
imul
and
jno
jbe
bt
cmc
mov
rol
lea
js
clc
xor
cmc
bt
neg
cmc
clc
stc
stc
mov
test
add
pusha
stc
test
jmp
pushf
bt
add
cmc
movb
mov
cmp
movb
lea
jb
push
test
cmp
stc
cmp
pusha
call
add
inc
push
jne
je
gs
gs
imul
imul
and
jno
jbe
add
inc
dec
insl
popa
fs
gs
inc
imul
je
outsl
outsb
and
jno
jbe
adc
inc
std
fistpll
popf
sub
and
jnp
daa
xchg
xchg
xor
inc
mov
mov
jno
xor
jl
repz
or
mov
test
dec
mov
rcl
dec
ljmp
xchg
ja
ja
cmp
insb
cmp
pop
xchg
mov
push
and
mov
shlb
cld
mov
js
mov
inc
lds
or
cmp
test
pop
mov
and
daa
leave
pop
jns
fcmovnbe
mov
shlb
shl
push
jle
clc
inc
xor
icebp
adc
add
push
ret
addr16
jne
das
test
bound
xchg
test
pop
shr
xor
sbb
lods
dec
inc
leave
xchg
cli
loop
mov
or
iret
enter
jp
xlat
lods
cmp
push
inc
adc
lcall
push
and
jnp
test
shlb
mov
stc
push
mov
negl
mov
test
adc
dec
pop
adc
outsl
adc
lret
push
cmp
iret
shl
fldcw
xchg
cmp
ret
jl
pop
rcrl
cmovne
loope
sti
icebp
lret
data16
add
repz
push
cld
sub
push
mov
cmp
or
and
or
iret
and
ficomps
jp
in
aad
or
add
jne
je
outsb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
jns
add
push
inc
jecxz
fwait
mov
pusha
clc
shl
sbb
gs
add
rol
aam
jb
jo
xor
push
mov
mov
loopne
out
popa
or
cli
mov
les
mov
or
ret
push
add
push
jo
sbb
scas
push
mov
sub
push
xchg
mov
movb
ret
jns
sub
sti
push
inc
adcb
and
mov
push
fstp
xor
aad
fcomi
adc
and
push
and
movsl
lcall
mov
push
cmp
sub
pop
sub
rcrb
jae
or
push
jmp
inc
fimull
mov
mov
test
jmp
into
mov
imul
repz
push
inc
add
dec
sbb
inc
xlat
fisttpll
add
addr16
rol
sub
call
lret
in
adc
mov
add
aam
jmp
adcl
pop
xor
pusha
mov
pop
and
stos
loop
es
xchg
cmp
inc
rcrb
stc
push
in
pop
xchg
sub
es
inc
fimull
lcall
jne
jae
cmp
mov
fsubrl
mov
xor
and
add
inc
push
fs
je
inc
inc
gs
popa
insl
gs
imul
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
clc
push
inc
lret
sbb
cmc
pop
mov
fdivp
jg
lret
adc
shrb
roll
pop
fucomp
jg
daa
test
inc
out
inc
dec
icebp
fadd
gs
fisttpl
push
jle
jle
sbb
outsl
inc
jae
adc
and
pop
jae
sbbb
ret
arpl
loopne
xchg
cmp
pop
xchg
shrb
xchg
and
subl
test
adc
ss
cmp
dec
xchg
xlat
sub
add
inc
dec
jbe
jb
ja
outsw
insb
fs
inc
imul
je
outsl
outsb
and
jno
jbe
jmp
add
inc
dec
jbe
jb
outsb
jae
popa
je
jae
jb
outsb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
jne
jb
push
imul
jno
jb
add
add
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
dec
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
imul
je
outsl
insb
jne
imul
imul
imul
jbe
pushf
lea
jne
inc
bts
not
mov
shld
dec
add
sub
sub
clc
mov
pusha
push
stc
pusha
sub
stc
pushl
popl
pushf
lea
jge
cmc
test
cmp
pushf
lea
ja
ror
sub
jmp
add
inc
dec
insl
popa
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
imul
imul
and
jno
jbe
add
inc
dec
insl
push
insl
popa
jb
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
cmp
inc
imul
imul
and
jno
jbe
add
inc
inc
js
insb
inc
push
fs
jb
gs
imul
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
dec
outsb
jbe
insb
imul
jb
add
add
fs
je
inc
push
dec
je
insl
dec
imul
push
jb
je
push
outsl
jae
je
outsl
outsb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
jb
popa
je
dec
popa
outsb
fs
gs
jno
jbe
add
inc
dec
insl
popa
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
popa
insb
imul
popa
insl
gs
jno
jo
cmp
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
xchg
faddl
add
mov
jecxz
call
dec
mov
pusha
stc
pushf
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
push
gs
fs
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
fs
je
inc
push
inc
imul
je
gs
fs
outsb
insb
jns
jno
jb
outsl
add
inc
repz
xor
lret
mov
and
loope
pop
dec
sbb
mov
adc
das
jecxz
pop
or
insl
mov
shlb
ljmp
push
or
cmp
in
enter
clc
ret
or
mov
mov
movb
popa
mov
jg
data16
push
inc
mov
std
push
sti
sbb
loop
inc
or
ss
or
dec
mov
aam
je
jle
cmc
adc
add
popf
xor
push
push
jo
push
dec
adc
aad
movsl
nop
jg
ret
out
stc
ret
lods
add
add
push
gs
or
add
cld
test
or
cmp
shlb
popa
int3
movsb
les
outsb
dec
ljmp
lret
push
xor
mov
push
inc
scas
inc
lods
subb
pop
dec
sub
ss
frstor
push
add
sub
repz
cmp
jne
xor
xor
ret
roll
rcrb
pop
out
popf
xchg
fidivl
mov
jnp
popa
je
jle
mov
ret
adc
jnp
cmpsl
xor
dec
loope
clc
push
push
lods
int
roll
push
mov
xor
lret
add
add
test
jnp
or
out
popf
cmp
mov
dec
cmpsb
inc
addr16
sub
shrb
mov
push
inc
dec
fnstsw
ljmp
in
xor
push
sub
outsb
lds
sub
mov
dec
in
fstpt
pop
or
loopne
sub
inc
cmp
pop
jl
movsl
or
push
enter
mov
sti
fnstenv
cmp
pop
inc
out
or
call
test
add
jb
nop
movb
es
addr16
mov
loop
fstps
xchg
xor
mov
inc
push
test
aam
pop
jge
xor
or
hlt
mov
sub
jae
divl
test
add
popfw
push
mov
mov
test
movsb
addr16
add
std
add
pop
aas
adc
jg
hlt
push
mov
mov
clc
or
inc
push
gs
in
mov
jne
xor
aas
cmp
mov
shl
push
mov
sbb
push
mov
int
mov
movsb
pop
mov
sbb
in
loope
in
fldl
imul
adc
cmc
lret
daa
scas
outsl
cmc
pop
sbb
and
lret
pop
out
xchg
adc
sub
xor
add
stos
out
mov
mov
sar
fmull
sarl
cmpsl
mov
lret
mov
sub
clc
pop
mov
push
cmp
jbe
repnz
inc
sarb
sbb
rolb
aad
adc
pop
pop
lea
push
mov
je
cld
adc
inc
int3
pop
or
mov
shlb
mov
jecxz
mov
push
gs
mov
dec
pop
test
dec
in
bound
jecxz
push
ret
loope
mov
dec
and
pop
dec
cmpsb
fucomip
xor
push
inc
aas
sbb
lcall
xor
in
sbb
cwtl
dec
in
dec
in
in
imul
stc
xchg
je
push
dec
xlat
push
cli
mov
fidivrs
push
lea
sub
pop
dec
sahf
mov
and
jb
add
adc
jo
jnp
xlat
sub
shrb
leave
test
jl
jge
cli
push
neg
jle
jge
sub
in
and
xchg
in
mov
repnz
inc
call
int3
jg
shrl
lods
dec
in
hlt
faddl
and
ret
in
or
lcall
pop
testl
fbld
xchg
mulb
push
lcall
cmc
loopne
mov
ljmp
mov
adc
fisubrl
popf
les
mov
out
sbb
and
lock
nop
enter
jge
out
jge
or
in
int
pop
call
pop
mov
push
push
mov
in
inc
jle
add
jbe
js
outsl
insl
arpl
jae
imul
imul
and
jno
jbe
add
inc
inc
js
arpl
imul
popa
arpl
jns
inc
imul
je
outsl
outsb
and
jno
jbe
jbe
stos
icebp
push
inc
sti
adc
jnp
cmp
addr16
loopne
pop
aaa
mov
stos
sbb
std
sub
lds
or
adc
mov
mov
inc
ja
mov
call
push
addr16
jmp
xchg
mov
iret
xor
fbstp
mov
inc
jnp
mov
pop
or
out
push
inc
sar
adc
fdivl
cmp
sub
adc
out
leave
mov
jmp
fists
jne
and
and
dec
fldl
mov
adc
out
cmp
clc
lea
stos
inc
cmpsl
lahf
lahf
movsl
dec
scas
push
jge
push
mov
xchg
cmpl
lods
sbb
cmp
push
sub
sbb
push
mov
inc
xor
inc
test
xor
xchg
push
inc
mov
imul
shll
mov
or
fs
test
shrl
insl
into
arpl
lock
inc
push
mov
bound
pop
mov
jo
inc
inc
sbb
pop
inc
in
add
les
fbstp
dec
mov
cli
std
cmp
fbstp
jne
outsb
fbld
mov
int
fcoms
dec
xor
adc
add
insl
pop
mov
and
sbb
xor
mov
mov
popf
cmp
inc
je
add
sahf
sub
add
arpl
insb
gs
imul
insb
imul
and
jno
jbe
fwait
clc
ja
push
inc
xchg
punpckldq
sub
outsl
inc
dec
jno
icebp
pop
or
dec
push
ds
add
cmpsb
mov
loop
and
push
jmp
or
sti
adc
inc
stos
rolb
mov
push
ffreep
push
cmp
inc
ja
fbld
leave
push
jne
cwtl
in
shlb
xchg
sarl
lret
mov
mov
pop
adc
insl
shrl
inc
jmp
ret
out
or
cli
dec
cmpb
stos
inc
jbe
mov
sub
or
stos
xor
iret
jne
mov
push
imul
mov
pushf
pop
sub
xchg
cmp
mov
test
mov
inc
out
test
in
or
daa
inc
scas
push
mov
add
or
push
inc
inc
and
sub
inc
gs
lods
cmp
lods
sti
enter
sbb
xor
jmp
rclb
sbb
arpl
sarb
pusha
pop
lock
rol
out
mov
in
and
nop
ret
push
cmp
push
dec
mul
mov
in
mov
int3
mov
cmpsl
sbb
fdivrs
in
push
inc
cs
cmp
rolb
shlb
lret
dec
inc
mov
dec
jl
outsb
iret
inc
pop
xor
mov
dec
and
shl
sub
or
jge
loope
add
inc
inc
js
outsb
jo
popa
arpl
outsl
outsb
je
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
dec
push
je
inc
insb
jb
jno
jb
jbe
add
inc
dec
insl
push
insl
popa
jae
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
popa
je
jae
outsl
jb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
lea
jmp
lea
jle
pusha
lea
jne
jmp
adc
in
push
inc
xchg
stos
sbb
cmc
or
jmp
imulb
insl
in
mov
mov
cmp
negb
in
push
or
scas
add
pop
pop
aad
pop
lahf
adcl
fnstsw
popf
and
xchg
add
add
mov
mov
jno
dec
cmpsl
cltd
hlt
xor
mov
pop
or
and
push
inc
ret
sub
jo
pop
leave
test
jbe
xchg
ud2
mov
enter
xchg
inc
or
mov
sbb
pop
xchg
add
mov
mov
fistpll
lds
js
mov
mov
cmp
xor
imul
sbb
jo
sahf
mov
inc
outsl
int3
out
fs
push
pushf
xor
xlat
out
iret
cmp
js
in
push
inc
pop
xor
lock
jle
push
xor
daa
pop
mov
sti
dec
push
ud2
out
or
stc
lcall
mov
subb
into
lret
enter
les
nop
mov
loop
xor
leave
lcall
push
int3
scas
jno
mov
mov
push
shrb
gs
cmp
add
push
icebp
xor
imul
jns
js
addl
inc
jo
mov
sbb
pop
xchg
xor
ljmp
ljmp
or
shr
insl
mov
xchg
sahf
jmp
mov
xor
mov
shrl
decb
cmc
pop
xor
popf
cli
mov
out
mov
fsts
jg
sbb
pop
mov
cmp
push
sub
mov
mov
pop
pop
mov
add
iret
jecxz
std
xchg
mov
repnz
inc
mov
xor
push
test
call
add
inc
push
jns
jne
imul
je
push
outsl
dec
outsb
je
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
sbb
xchg
pop
push
pushl
popl
pusha
pushf
pushl
movsbl
mov
lahf
mov
lea
lahf
movl
mov
lea
jmp
pop
dec
aad
push
inc
jbe
mov
cld
mov
cmp
mov
call
push
aad
rol
test
mov
and
in
add
loopne
or
shrl
sahf
cld
lret
test
push
les
push
lahf
int3
push
leave
test
mov
call
adc
add
inc
and
pusha
pop
sub
cmpsb
in
jl
adc
xchg
pop
dec
mov
pop
sub
inc
pop
icebp
pop
jb
xor
repnz
and
mov
and
in
xor
mov
dec
bound
or
mov
add
movsl
pop
adc
shrl
push
lea
push
cmp
ret
and
repnz
inc
lret
or
int3
out
inc
xchg
test
push
aas
push
jg
outsl
inc
in
nop
sti
fwait
cli
adc
push
jo
test
cmp
dec
xor
sub
shr
push
inc
fnsave
sub
push
adc
inc
and
repz
nop
and
movsb
icebp
enter
inc
out
andb
stos
aad
out
repz
xor
xchg
in
add
ss
iret
test
or
insb
lret
fisttpll
lods
xor
cmpsl
je
rorl
add
mov
adc
mov
inc
movsl
lret
sti
mov
scas
cmpl
push
jne
xchg
out
push
ja
icebp
xchg
mov
cmp
fstpt
or
cmp
inc
cmpsl
xchg
add
inc
inc
js
imul
imul
imul
and
jno
jbe
add
inc
inc
js
js
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
bound
jb
jno
jb
add
movsbl
jmp
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
jb
gs
imul
jb
xor
inc
outsl
jb
jae
push
push
arpl
insb
insb
inc
outsl
js
xor
push
fs
je
inc
push
inc
imul
je
xor
push
fs
je
inc
push
inc
imul
je
add
inc
dec
insl
jp
je
insb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
nop
iret
push
call
fdivrs
push
jb
sahf
cmpsl
xor
inc
repz
inc
ss
aad
sar
mov
je
ljmp
test
insl
and
jle
xor
in
mov
inc
negb
aad
jb
stos
enter
jae
xor
pop
xor
xorb
data16
inc
jmp
in
add
or
fsubl
clc
lret
inc
fidivl
xlat
aaa
pop
jmp
mov
jb
jb
xor
add
inc
out
jno
negb
xor
inc
flds
jns
neg
movsb
lds
stos
iret
sahf
cld
cmpsl
or
pop
clc
lods
rep
push
dec
sbb
hlt
sub
xchg
mov
int
mul
mov
sbb
dec
pop
xchg
push
or
pop
pop
mov
es
sub
arpl
mov
mov
push
jecxz
pop
inc
xor
xor
jne
out
inc
lock
ds
cli
aam
pop
sti
and
push
scas
sub
inc
mov
push
jbe
cld
xorl
push
aad
and
ja
addr16
and
xor
fbstp
in
fnstsw
nop
inc
jns
sub
in
mov
shlb
out
dec
sbb
addb
fidivs
andb
pop
xchg
mov
push
loop
in
jbe
dec
mov
data16
sbb
jns
dec
addl
add
out
lds
pusha
mov
mov
pop
inc
outsl
sarb
movb
lea
jne
adc
shr
xor
lea
mov
sub
shr
test
add
sub
pusha
shl
neg
rcr
lea
bt
cmc
clc
sub
pusha
cmc
pushl
popl
cmp
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
inc
and
fs
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
imul
imul
jo
ss
fs
je
inc
push
inc
imul
je
xor
popa
inc
push
dec
je
insl
dec
imul
jae
gs
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
in
inc
push
in
outsb
cmpb
push
mov
movsb
addr16
pop
loope
outsb
jbe
outsb
or
sub
xchg
inc
add
shlb
in
cs
in
fwait
lods
push
lahf
repz
mov
inc
aam
outsb
and
jmp
push
je
loope
cld
adc
cli
test
dec
scas
test
add
mov
or
cmp
push
inc
sbb
aas
sarb
lods
or
jno
jmp
inc
iret
push
loope
fwait
mov
sbb
cwtl
sti
sbb
cmp
icebp
lret
lea
xchg
push
insb
mov
push
pushl
inc
mov
sti
mov
inc
repnz
addr16
outsl
xlat
cmp
jnp
fistl
scas
into
jae
mov
cmp
pop
hlt
fnstcw
adc
push
ret
leave
fs
enter
push
inc
xchg
test
and
movsl
repz
add
sub
lcall
jb
addr16
call
stc
dec
sbb
xchg
push
les
mov
mov
cwtl
pop
nop
icebp
fucomi
jge
jne
repz
jo
ret
mov
dec
imul
aam
addr16
push
ljmp
xchg
div
mov
xor
hlt
out
scas
jecxz
pcmpeqb
nop
inc
dec
and
jno
ss
ja
xor
in
rolb
mov
mov
bound
arpl
gs
add
xchg
rolb
add
imul
clc
jmp
add
inc
push
jne
gs
popa
insb
imul
and
jno
jbe
add
inc
dec
jbe
jb
jo
jb
jns
je
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jp
imul
outsb
popa
insb
imul
and
jno
jbe
add
inc
push
jo
outsl
arpl
jae
inc
imul
je
outsl
outsb
and
jno
jbe
hlt
insl
aas
jecxz
inc
mov
mov
arpl
dec
or
daa
fbld
enter
or
inc
add
dec
or
cmc
xchg
in
xchg
les
addr16
mov
pusha
movsb
push
add
inc
mov
sbb
jg
sbb
stos
xor
loope
push
or
data16
jg
pop
mov
scas
enter
and
add
sub
sbb
dec
gs
cbtw
sbb
adc
pop
and
jecxz
movsl
packsswb
adc
idivb
mov
inc
jecxz
je
pop
insl
stos
pusha
testl
inc
mov
sub
mov
rcrl
sbb
or
mov
xchg
imull
lods
add
xor
inc
stc
aad
cltd
xor
mov
fcomip
sbb
mov
and
push
inc
adc
pop
arpl
pmullw
fwait
stos
out
cmpsl
xchg
loopne
push
xchg
sub
in
mov
inc
in
mov
int3
cli
std
dec
sbb
insl
or
icebp
dec
les
adc
mov
xchg
mov
push
add
cmp
dec
mov
inc
mov
mov
inc
sbb
xchg
cs
leave
popf
mov
daa
fisubrl
sar
cltd
xor
lret
jl
and
push
popa
ret
daa
inc
out
inc
or
and
into
mov
dec
add
inc
dec
imul
imul
imul
and
jno
jbe
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
gs
outsb
jae
popa
outsb
arpl
jno
jb
xor
push
jns
je
insl
inc
push
dec
gs
inc
insb
popa
jae
add
add
fs
je
inc
push
dec
je
insl
dec
imul
pop
dec
dec
dec
outsl
fs
outsl
jne
je
jno
jb
cmp
jae
gs
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
inc
outsl
jb
jae
push
push
arpl
insb
insb
imul
outsl
outsb
je
outsl
insb
inc
inc
jne
outsl
push
arpl
insb
insb
dec
outsb
push
imul
jo
aaa
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
add
add
jbe
push
inc
imul
imul
and
jno
jbe
add
inc
inc
outsl
outsb
je
jb
inc
push
dec
bound
arpl
jae
inc
dec
outsl
je
data16
jno
jb
jbe
xor
jae
jae
push
dec
imul
imul
outsl
outsb
add
xor
pusha
movl
push
movl
pushl
pushf
lea
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
insb
outsl
arpl
imul
js
add
pop
mov
add
add
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
jne
je
insl
inc
insb
imul
je
outsl
outsb
and
jno
jo
aaa
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
jb
je
je
je
jb
xor
gs
push
push
arpl
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
insb
imul
add
lea
je
bswap
jmp
add
inc
dec
arpl
je
inc
imul
imul
and
jno
jbe
add
inc
push
insb
popa
outsb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jne
bound
je
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
enter
push
inc
mov
adc
fisttps
push
push
xor
shlb
xchg
pop
lahf
xchg
rcl
hlt
cld
shll
xchg
into
pushf
lea
sarl
jmp
inc
js
pop
jg
jecxz
pop
pop
mov
pusha
mov
pop
cmp
rolb
popf
inc
es
xor
sbb
sbb
out
fs
or
ss
mov
push
inc
js
ss
js
es
cmovae
in
in
xor
rol
sbb
insb
xlat
pop
je
ja
mov
xor
add
in
xor
fcoms
cli
shll
xchg
adc
mov
in
xor
test
gs
mov
sahf
cmp
iret
push
ret
andb
repz
pop
je
mov
add
jle
nop
jns
mov
ficomps
inc
xchg
shll
xchg
jle
movsb
cld
lds
push
js
inc
es
or
xchg
or
rcrb
mov
ret
jmp
push
sahf
push
pushf
mov
fsubl
pop
outsl
mov
push
dec
fs
or
testl
push
inc
xlat
xor
adc
jno
push
shr
je
int
mull
xchg
push
test
nop
jae
call
clc
inc
cwtl
or
sahf
ficomps
sub
iret
scas
push
outsb
in
inc
pusha
pop
cmp
jne
js
jno
repnz
and
cmpsb
mov
repz
push
pushf
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
push
jb
je
inc
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
push
inc
out
push
imul
sub
loopne
sub
sub
sbb
sarb
fnstcw
lret
push
out
insl
out
arpl
sahf
shr
movb
sub
call
xchg
std
imul
sbb
roll
enter
mov
in
push
std
scas
xchg
push
dec
mov
and
push
lods
or
pop
or
dec
xor
or
out
jge
int
inc
sete
fistps
xor
sub
sub
test
inc
lds
jno
push
mov
aam
adc
mov
shl
adc
push
adc
dec
rorl
flds
push
test
inc
mov
mov
cld
cld
or
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
arpl
jae
jae
jb
outsb
addr16
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
inc
push
outsl
dec
imul
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
jnp
ficompl
inc
xor
sahf
and
xchg
cmp
lods
aad
iret
adc
cmpsl
insb
pop
loope
inc
scas
inc
fs
out
sub
sub
loopne
push
inc
or
insb
or
rclb
shll
ja
clc
pop
mov
and
ret
test
cmc
inc
insb
cltd
and
sbb
dec
push
and
int3
insb
ja
pop
xchg
jge
xor
fistpl
inc
dec
and
sbb
ljmp
cmc
dec
mov
loope
inc
cmp
sbb
je
ljmp
in
inc
pop
insb
add
sub
pop
into
sub
and
lahf
je
push
pop
mov
lea
or
test
jo
adc
rcrl
sbb
fdivl
and
pop
adc
imul
mov
repz
jne
push
push
mov
add
imul
inc
jns
popa
icebp
in
fstps
inc
andl
scas
adc
adc
into
cmpsl
inc
enter
stc
jmp
sti
loope
jbe
lret
or
jecxz
jecxz
scas
test
fistpl
jbe
add
sbb
jle
mov
fstpt
pop
in
push
hlt
lea
aam
mov
mov
stos
mov
fnstenv
pop
and
and
or
inc
fwait
pusha
std
rorl
jp
shlb
test
dec
outsb
dec
movsb
add
hlt
add
push
out
xchg
loope
sti
add
inc
push
jne
imul
gs
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
add
insb
outsl
bound
jno
gs
inc
imul
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
gs
jp
outsb
addr16
jno
xor
inc
outsl
jb
jae
push
push
imul
popa
je
add
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
jb
gs
bound
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
xchg
push
inc
jo
clc
movsb
in
fnstcw
lock
dec
insl
rcrl
mov
stos
out
or
ljmp
sbb
pop
mov
mov
inc
in
fs
jmp
add
dec
insl
jno
sahf
push
repz
push
stos
adc
stos
inc
jmp
je
flds
fmul
lds
cmp
adc
cmp
gs
in
xchg
fstps
inc
mov
aaa
lcall
loop
popa
jnp
and
pop
fstps
fmulp
lds
stos
mov
dec
mov
adc
inc
jmp
sub
sub
xor
ljmp
movsl
pop
repnz
jmp
adc
aam
fldenv
scas
pop
xor
xchg
sub
test
jp
test
dec
sub
sbb
adc
push
mov
leave
sub
or
and
mov
sub
gs
inc
loope
mov
int3
movsl
cmp
testl
xlat
out
inc
sub
and
pop
or
jbe
cmp
sbb
into
movsb
mov
repz
xchg
sti
sahf
mov
scas
sub
cwtl
subb
ret
xor
mov
out
pop
cmp
repnz
out
cwtl
xor
mov
hlt
sub
or
push
push
xor
stos
jmp
push
sti
cwtl
repnz
xchg
cmp
js
shl
add
inc
dec
je
inc
imul
imul
and
jno
jbe
add
inc
push
jo
jb
insl
gs
je
popa
insb
imul
and
jno
jbe
add
inc
dec
insl
popa
imul
inc
imul
imul
and
jno
jbe
add
inc
inc
insl
je
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
mov
stc
add
push
call
add
inc
dec
insl
popa
imul
imul
imul
and
jno
jbe
add
inc
inc
bound
insl
insl
outsl
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
je
arpl
jae
imul
imul
and
jno
jbe
mov
stc
cmp
push
pusha
pushf
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
jb
insl
push
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
jns
jne
imul
outsl
dec
gs
jno
jb
imul
jae
insb
arpl
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
lea
jb
push
pusha
cmpb
jmp
pusha
lea
je
cmc
bt
stc
pushf
add
bt
call
add
inc
inc
js
gs
jb
imul
imul
and
jno
jbe
mov
call
movl
movw
push
lea
jmp
xchg
ja
aad
inc
xor
mov
mov
jbe
cmpb
pusha
add
stos
xchg
add
loope
dec
out
dec
daa
sub
and
mov
or
insb
add
pop
lcall
hlt
ja
add
inc
or
imul
push
clc
scas
mov
inc
fwait
sahf
leave
enter
bound
xor
mov
clc
adc
mov
jge
mov
sub
or
add
cmpsb
in
lds
dec
or
push
cmp
jge
mov
cmp
xchg
push
insb
test
lea
mov
adc
out
push
xchg
rolb
cmc
sbb
xchg
sub
sub
sub
test
sub
bound
sbb
pop
std
fidivs
aas
popf
stc
nopl
fs
hlt
inc
in
adc
inc
cmc
sbb
fdivl
stc
xlat
in
add
cmpsb
aaa
fld
pop
leave
enter
iret
jecxz
sti
sbb
adc
fdivl
jno
aad
stos
adc
fsubl
repz
mov
filds
sbb
imul
push
sub
inc
dec
in
cmpsb
call
mov
mov
sub
movsl
pop
ret
and
aas
mov
pop
mov
xchg
jp
call
adc
cld
and
clc
adc
add
inc
inc
js
popa
insb
arpl
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
inc
outsl
outsb
imul
add
add
fs
je
inc
push
dec
je
insl
dec
imul
fs
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
insl
push
gs
insl
addr16
imul
imul
and
jno
jbe
add
add
add
add
add
add
sar
add
push
add
cld
add
add
add
mov
add
add
add
cwtl
cld
add
add
add
mov
test
add
add
enter
in
push
add
add
hlt
cld
add
add
add
add
add
add
add
dec
std
add
add
add
pop
std
add
add
add
fs
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
pop
incb
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
add
add
add
add
cmp
add
add
add
inc
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sar
add
add
add
add
add
add
add
add
fdivr
add
add
add
add
add
add
add
cld
incl
add
add
or
push
add
add
add
add
add
push
add
lods
push
add
push
add
add
add
add
add
add
sub
push
add
lods
push
add
push
add
add
add
add
add
jle
add
add
push
add
jle
add
push
add
push
add
add
lods
push
add
add
mov
push
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
movsb
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
dec
add
mov
lods
push
add
dec
add
enter
lds
add
add
add
dec
add
aam
push
add
lods
push
add
dec
add
loopne
push
add
lods
push
add
add
in
add
add
lods
push
add
add
clc
add
add
lods
push
add
add
push
add
lods
push
add
add
adc
push
add
add
add
add
add
dec
add
sbb
push
add
lods
push
add
add
add
add
add
add
add
add
add
lods
push
add
add
add
add
add
add
add
add
add
push
add
add
pop
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
jle
add
lods
push
add
jle
add
push
add
jle
add
lods
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
push
add
add
add
lods
push
add
add
add
lods
push
add
add
add
lods
push
add
add
add
lods
push
add
push
add
lods
push
add
add
add
scas
push
add
out
add
add
add
add
add
add
add
push
add
push
add
scas
push
add
push
add
add
add
push
add
push
add
push
add
push
add
add
jl
push
add
push
add
jle
add
scas
push
add
jle
add
push
add
jle
add
scas
push
add
jle
add
push
add
add
add
add
add
add
add
mov
les
push
add
scas
push
add
mov
rolb
push
add
scas
push
add
mov
faddl
push
add
scas
push
add
mov
call
scas
push
add
mov
hlt
add
add
scas
push
add
mov
add
push
add
scas
push
add
mov
or
push
add
scas
push
add
add
add
add
add
add
add
add
add
scas
push
add
add
add
add
add
add
add
add
add
scas
push
add
add
add
push
add
adc
add
push
add
adc
add
push
add
adc
add
push
add
adc
add
push
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
scas
push
add
adc
add
scas
push
add
adc
add
scas
push
add
adc
add
scas
push
add
adc
add
scas
push
add
adc
add
adc
add
mov
add
adc
add
adc
add
mov
add
adc
add
adc
add
push
add
adc
add
push
add
adc
add
push
add
adc
add
push
add
adc
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
push
add
mov
add
add
add
mov
add
add
push
add
adc
add
adc
add
mov
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
push
add
jle
add
mov
add
jle
add
push
add
jle
add
mov
add
add
add
add
add
add
add
jle
add
mov
add
jle
add
push
add
jle
add
or
add
add
add
add
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
add
add
add
add
jle
add
push
add
mov
add
jle
add
or
add
add
add
add
add
jle
add
push
add
mov
add
jle
add
or
add
add
add
add
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
mov
add
jle
add
push
add
jle
add
mov
add
jle
add
push
add
jle
add
mov
add
jle
add
push
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
push
add
mov
add
jle
add
or
add
add
add
add
add
jle
add
push
add
mov
add
jle
add
or
add
add
add
add
add
jle
add
push
add
mov
add
jle
add
push
add
add
add
add
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
mov
add
jle
add
push
add
jle
add
mov
add
jle
add
push
add
jle
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
push
add
mov
add
jle
add
or
add
add
add
add
add
jle
add
push
add
mov
add
jle
add
or
add
add
add
add
add
jle
add
push
add
mov
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
push
add
jle
add
mov
add
jle
add
push
add
jle
add
mov
add
jle
add
push
add
jle
add
or
add
add
add
add
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
mov
add
jle
add
or
add
add
add
add
add
jle
add
push
add
mov
add
add
add
fidivrl
add
or
add
add
add
add
add
jle
add
push
add
mov
add
add
add
fidivrl
add
or
add
add
add
add
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
mov
add
add
add
fidivrl
add
push
add
jle
add
mov
add
add
add
fidivrl
add
push
add
or
add
mov
add
add
add
imul
add
or
add
mov
add
add
add
fidivrl
add
or
add
mov
add
add
add
fidivrl
add
or
push
add
jle
add
or
push
add
mov
aam
push
add
mov
add
add
add
fidivrl
add
or
push
add
ja
add
or
push
add
dec
add
cld
or
push
add
dec
add
or
push
add
add
add
add
add
dec
add
adc
push
add
mov
add
add
add
or
add
push
push
add
add
add
add
add
es
add
push
add
mov
add
add
add
es
add
push
push
add
add
add
add
add
es
add
add
push
add
dec
add
push
push
push
add
push
add
es
add
add
push
add
dec
add
push
mov
add
add
add
or
add
add
push
add
dec
add
orb
add
push
add
dec
add
mov
push
add
add
add
add
add
dec
add
cwtl
push
push
add
add
add
add
add
dec
add
movsb
push
push
add
add
add
add
add
mov
mov
push
add
add
add
add
add
mov
mov
mov
add
add
add
xchg
aas
add
enter
lds
add
add
add
mov
push
push
add
mov
add
add
add
mov
push
push
add
mov
add
add
add
mov
push
push
add
mov
add
add
add
mov
push
push
add
mov
add
add
add
mov
clts
add
mov
add
add
add
mov
clts
add
add
add
add
add
clts
add
mov
add
add
add
mov
clts
add
add
add
add
add
push
add
mov
add
add
add
xchg
aas
add
inc
clts
add
add
add
add
add
dec
add
dec
clts
add
push
add
dec
add
pop
clts
add
push
add
dec
add
fs
add
push
add
push
add
push
add
push
add
push
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
mov
add
add
add
xchg
aas
add
rorb
push
add
mov
add
add
add
mulb
add
fmull
push
add
mov
add
add
add
xchg
aas
add
call
mov
add
add
add
mulb
add
hlt
clts
add
mov
add
add
add
mulb
add
add
push
add
mov
add
add
add
xchg
aas
add
or
push
add
mov
add
add
add
or
add
adc
add
add
add
add
add
push
add
mov
add
add
add
or
add
adc
add
add
add
add
add
adc
add
mov
add
add
add
xchg
aas
add
dec
adc
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
mov
add
add
add
xchg
aas
add
fcoms
push
add
mov
add
add
add
xchg
aas
add
in
push
add
mov
add
add
add
xchg
aas
add
lock
add
mov
add
add
add
xchg
aas
add
cld
adc
add
mov
add
add
add
xchg
aas
add
or
push
add
add
add
add
add
push
add
mov
add
add
add
shll
add
adc
add
add
add
add
add
movl
add
mov
add
add
add
or
add
cmp
push
add
add
add
add
add
movl
add
push
add
movl
add
push
add
movl
add
push
add
push
add
push
add
adc
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
stos
jae
add
adc
add
mov
add
add
add
stos
jae
add
adc
add
mov
add
add
add
stos
jae
add
adc
add
mov
add
add
add
imul
add
adc
add
mov
add
add
add
stos
jae
add
push
add
mov
add
add
add
imul
add
adc
add
add
add
add
add
adc
add
mov
add
add
add
fidivrl
add
adc
add
add
add
add
add
push
add
mov
add
add
add
fidivrl
add
push
add
add
add
add
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
add
push
add
jle
add
push
add
push
add
jle
add
push
add
jle
add
mov
add
add
add
fidivrl
add
push
add
jle
add
mov
add
add
add
fidivrl
add
push
add
add
rclb
add
add
add
add
add
add
int3
adc
add
mov
add
add
add
jge
add
fcoms
push
add
mov
add
add
add
jge
add
in
push
add
mov
add
add
add
jge
add
lock
add
mov
add
add
add
jge
add
cld
adc
add
mov
add
add
add
jge
add
or
push
add
add
add
add
add
add
adc
push
add
mov
add
add
add
jge
add
and
push
add
add
add
add
add
add
sub
push
add
mov
add
add
add
jge
add
cmp
push
add
add
add
add
add
add
inc
adc
add
push
add
add
push
adc
add
push
add
add
pop
adc
add
push
add
add
push
mov
add
add
add
jge
add
je
push
add
push
add
add
adcb
add
push
add
add
mov
push
add
add
add
add
add
add
cwtl
adc
add
add
add
add
add
add
movsb
adc
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
mov
mov
add
add
add
fidivrl
add
adc
add
mov
add
add
add
test
add
adc
add
insl
popa
imul
popa
jae
inc
imul
je
outsl
outsb
and
jno
jbe
pop
mov
mov
inc
cmc
pop
mov
fdivl
mov
push
sahf
push
push
mov
lods
ds
movsb
dec
insb
sbbl
or
lds
jo
shl
out
out
das
js
mov
and
xchg
sub
add
lds
inc
cs
adc
into
jo
cmp
aas
xor
in
gs
xor
je
mov
hlt
pop
inc
xchg
cmp
jge
mov
lret
ja
test
pop
xor
fmuls
imul
inc
dec
imul
dec
jae
lea
cld
inc
arpl
scas
push
mov
in
je
js
jecxz
jns
mov
jne
jp
loope
stc
push
mov
pop
ret
in
inc
out
add
dec
daa
gs
sbbl
xchg
insb
mov
inc
fidivl
jo
hlt
fidivrs
fldt
lahf
pop
mull
jge
dec
fwait
popa
test
iret
imul
incl
lcall
lahf
jl
mov
sarb
pop
imul
mov
xor
nop
add
fidivs
cltd
in
aad
outsb
inc
test
and
cmpl
movsl
fiadds
popa
lds
cmpsb
push
fwait
xchg
jbe
dec
xor
pusha
cmc
push
mov
hlt
sbb
pop
test
dec
outsl
inc
sub
ret
jl
jmp
add
add
js
je
outsb
fs
jb
insl
popa
jae
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
popa
jo
jae
fs
imul
imul
and
jno
jbe
inc
pop
lods
mov
inc
stc
xchg
clc
pop
mov
cmp
xor
xlat
inc
mov
shll
imull
mov
or
pop
push
or
in
push
mov
inc
in
add
arpl
shl
stc
sbb
pop
mov
nop
mov
cld
jg
jecxz
jge
dec
mov
into
out
repnz
push
movb
jle
and
cmp
sbb
push
jb
inc
jmp
outsb
test
push
mov
push
clc
ffreep
sbb
jmp
popf
lds
dec
call
sbb
iret
sbb
and
inc
loope
jbe
jnp
fmulp
and
sbb
push
and
push
mov
xchg
loope
loopne
cld
lds
cmc
sbb
jp
insl
test
mov
mov
mov
shl
and
pop
xchg
jle
mov
mov
inc
negl
insl
jl
ljmp
add
jecxz
lds
add
or
leave
daa
test
mov
cmp
inc
dec
cltd
jp
int
sub
sbb
sbb
mov
call
gs
fdivrp
push
mov
cld
pop
call
dec
ja
stc
inc
cmpsb
leave
mov
adc
data16
fsubrp
pop
xchg
mov
pop
jnp
negb
loop
and
xchg
lods
and
push
negb
negl
jns
in
pop
xchg
cmpsb
pushf
mov
add
inc
inc
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
dec
outsl
fs
jno
imul
je
outsl
insb
jae
imul
imul
and
jno
jbe
add
inc
dec
insl
push
gs
inc
imul
imul
and
jno
jbe
sahf
mov
adc
clc
push
lock
mov
sti
divl
cmp
jb
scas
sub
or
int
inc
cmpsb
xor
or
out
xor
jg
push
les
or
popa
div
movsl
push
xchg
push
jo
fldt
inc
ja
push
jge
mov
stc
fisubl
inc
out
sub
test
movb
dec
and
out
lret
push
inc
push
and
loopne
arpl
in
test
insb
mov
dec
mov
sbb
mov
push
call
sarb
push
int3
push
ljmp
idiv
aad
jo
sub
daa
adc
leave
pop
cmp
sub
ljmp
and
aad
inc
ja
add
repnz
push
push
push
out
jg
fidivs
push
and
lods
shrb
dec
cmpl
push
test
scas
and
push
jecxz
sub
dec
fnsave
jo
fildl
lods
mov
incb
into
lods
add
jg
xchg
pop
mov
dec
or
orl
subl
es
mov
mov
mov
fwait
pusha
sub
notl
imul
negl
repz
ja
xor
cmp
push
dec
push
push
fdivs
or
mov
dec
stos
add
push
test
in
add
fwait
sub
mov
outsb
xchg
stc
xor
ss
add
cmp
dec
push
sub
or
xchg
and
pop
cld
push
or
pusha
lret
in
xchg
xchg
jno
inc
push
mov
mov
xchg
push
sbb
sbb
test
push
negb
mov
jns
in
xchg
cld
push
clc
pop
jnp
adc
dec
movb
icebp
adc
mov
ja
mov
mov
mov
cli
fsubs
mov
outsb
inc
push
sub
cmp
jge
test
push
jo
jae
test
sub
sbb
push
pushf
je
sub
lret
jo
pop
hlt
lods
push
adc
or
pop
cmp
or
or
loopne
lods
mov
pop
ljmp
outsb
pop
mov
xor
mov
sti
pop
sti
push
jg
outsb
jnp
push
jle
addr16
pop
sbb
stc
push
ss
aas
sahf
jbe
es
adc
cmpsl
fldenv
push
sarb
nop
mov
xchg
or
push
outsb
adc
push
cmp
jns
pusha
sahf
jb
lods
mov
inc
test
push
xchg
adc
push
stos
cmp
add
or
sub
shr
insl
pop
int3
arpl
push
mov
addr16
movsb
ret
jb
xchg
mov
lods
mov
mov
addr16
mov
sarb
pop
xor
mov
adc
jne
push
add
js
outsl
outsb
je
outsl
insb
jae
imul
imul
and
jno
jbe
push
jbe
scas
push
inc
jg
out
or
sub
pop
jbe
pop
test
dec
jg
push
xchg
fstpt
push
mov
jge
repnz
out
xor
or
je
sub
pop
outsb
shlb
push
push
cltd
xor
and
out
sbb
popa
sbb
add
out
orl
bound
push
dec
movb
xchg
scas
push
inc
test
js
mov
insl
cmc
jp
pop
cmpsb
cmp
pusha
sbb
dec
pop
cwtl
out
orl
adc
xlat
jns
insb
cwtl
jae
sbbl
testl
xchg
sub
sub
xor
adc
sub
push
xchg
push
enter
fisttpll
ja
scas
adc
lret
imul
push
lock
add
inc
aad
and
andb
test
mov
pop
sbb
jbe
inc
mov
jge
xlat
cmp
jne
repz
sub
jnp
push
divl
in
xchg
aad
sub
mov
inc
mov
das
or
inc
jbe
gs
notb
neg
in
mov
sahf
movsb
fsubl
fdivl
sarb
jecxz
dec
or
xchg
xor
push
lock
or
add
mov
push
lock
adc
je
add
leave
push
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
je
jne
jb
outsb
je
outsl
fs
jno
jbe
push
or
pop
jo
mov
pushf
aaa
ljmp
mov
repz
leave
xchg
mov
cmp
pop
mov
or
aad
popa
aam
sarb
jb
out
pop
push
jg
pusha
cmp
xlat
sub
popa
mov
lcall
cmpsb
xchg
js
add
dec
movb
dec
mov
lods
push
inc
imul
cwtl
shr
xor
lcall
inc
cmpsb
xchg
and
subl
fs
es
ret
fsubl
adc
cmc
jo
fistps
jbe
pop
pop
sub
test
dec
pop
repz
sub
jl
cli
outsb
and
stos
inc
jbe
mov
idivb
jg
xchg
xor
in
stos
lret
stos
lds
enter
jnp
xor
dec
and
dec
hlt
sbb
lcall
cmpsb
xchg
mov
mov
int3
sub
shrl
pop
repz
mov
and
push
dec
or
aaa
fsubl
cmpsb
mov
push
add
add
mov
or
jb
repz
xchg
scas
cmp
mov
xchg
mov
and
lods
adc
cmp
sub
mov
ljmp
subb
cmp
xchg
sti
sbb
mov
jle
push
cmpsl
insl
dec
cmp
push
or
lods
push
inc
xor
mov
sub
xlat
call
enter
xor
push
lock
jne
cwtl
jo
jge
jp
fnstcw
adc
shrl
popa
pop
les
and
add
stos
lds
add
xchg
push
add
xchg
sub
test
add
cmc
pop
lcall
insb
mov
cmpsb
cltd
call
inc
lcall
nop
shr
pop
jl
clc
xchg
sub
movsb
adc
mov
and
xchg
shrb
push
jne
pop
int3
cmp
push
sub
frstor
dec
lahf
cmpsb
pop
jno
adc
or
imul
mov
pop
and
xor
cmc
mov
test
and
jbe
ds
cmp
mov
out
jns
inc
xlat
push
in
aaa
xchg
add
stos
push
inc
push
mov
jo
jl
xchg
and
testl
cmc
call
sbb
push
ds
ja
jg
sub
mov
lea
cld
lds
ljmp
jne
dec
lods
cmp
test
sbb
cmp
cltd
aas
dec
mov
add
sbb
push
movsl
aaa
push
pop
xor
xor
jmp
inc
mov
and
mov
test
mov
in
lret
sub
out
out
xchg
mov
lds
ret
inc
cmp
inc
push
imul
outsl
jb
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
gs
jne
data16
popa
insb
jne
and
jno
xor
gs
inc
and
insl
imul
and
jne
and
xor
jns
je
insl
inc
push
popa
jb
popa
outsb
je
ss
fs
je
inc
push
inc
imul
imul
fs
je
inc
push
inc
imul
je
and
arpl
jno
jb
xor
popa
inc
push
dec
je
insl
dec
imul
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
gs
insb
imul
imul
add
add
jp
outsl
insl
insl
outsl
outsb
bound
insl
popa
jo
inc
imul
imul
and
jno
jbe
jmp
cmc
loopne
test
inc
sarb
push
jbe
lock
mov
jmp
sbb
cmpsl
cmpsl
and
xor
mov
mov
xor
adc
call
pop
mov
cwtl
cmc
fcomip
stos
setg
lea
movb
movzbl
mov
call
movl
cmc
sbb
clc
cmc
mov
pushf
clc
stc
bt
cmp
movb
jmp
add
inc
dec
arpl
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jo
bound
je
inc
imul
imul
and
jno
jbe
add
inc
inc
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
dec
jo
imul
jno
jb
xor
jae
gs
inc
and
je
xor
js
insb
inc
push
fs
jb
gs
imul
outsl
outsb
inc
js
imul
jne
and
xor
cmpsl
push
inc
rcll
sarb
shl
cmp
adc
cmc
mov
sub
lahf
push
ja
shr
adc
popa
shll
inc
fs
pop
shlb
jge
test
push
shl
shlb
cmp
testb
sub
sub
insb
push
std
add
movsl
add
nop
mov
daa
test
fidivrl
cmpsl
push
inc
push
cmpsb
lea
xchg
or
in
sbb
sub
insb
lahf
out
sbb
cmpsb
add
and
xchg
jns
ja
cmp
sti
sbb
xor
mov
mov
orl
jecxz
je
dec
cmpsb
aaa
fcompl
scas
sub
ret
repnz
inc
cmp
pop
bound
decb
scas
sub
ljmp
call
sahf
xor
testl
repz
dec
lods
test
adc
sub
daa
leave
insb
int
fists
movsb
add
sub
pop
mov
inc
daa
inc
mov
mov
xor
mov
repnz
add
arpl
int3
jcxz,pn
dec
push
js
lcall
repz
add
mov
mov
dec
add
pop
cmp
je
push
movsb
jmp
test
scas
sub
stc
inc
in
ljmp
push
js
sti
xchg
ds
jg
js
adc
and
filds
add
push
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
jb
addr16
outsl
fs
jno
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
jb
addr16
outsl
fs
inc
leave
mov
pop
mov
cmp
sub
clc
rorl
cmp
dec
and
stos
or
jecxz
aam
or
inc
insl
and
add
shlb
js
clc
push
cmp
ret
fldt
not
data16
and
lea
int
sbb
shll
inc
movb
popa
dec
xor
xchg
xor
sub
cmpsl
sbb
dec
xlat
data16
push
mov
lea
je
cs
add
sbb
hlt
cmp
push
data16
fildl
mov
imull
pushf
fidivl
pop
out
cli
and
dec
gs
cmp
xchg
ljmp
mov
xchg
ds
into
push
sub
lahf
mov
xor
cmp
jo
ficomps
nop
push
subl
arpl
movsl
push
inc
ficomps
mov
xor
cmc
xchg
cmp
xlat
data16
mov
lds
imul
pop
adc
cmpw
pop
xchg
in
jne
sub
dec
fiaddl
in
imul
dec
xchg
shlb
hlt
std
mov
and
pop
jnp
fdivp
xchg
inc
push
pop
mov
in
je
add
jb
insb
sbb
sub
orl
or
xor
jnp
xchg
repnz
xor
cmp
sub
cmp
in
hlt
in
jae
hlt
xor
add
clc
movsl
push
inc
mov
call
xchg
and
lock
imul
sbb
addr16
cwtl
int3
or
hlt
push
lret
loop
inc
out
mov
inc
das
subl
aaa
in
push
rolb
in
ss
push
pop
mov
gs
sbb
cmpsb
std
push
scas
jne
decb
push
or
cmp
inc
and
lods
sub
xchg
inc
movb
adc
mov
mov
mov
fnsave
scas
out
adc
loop
movsl
std
push
adc
sbb
mov
sbb
mov
inc
shrb
rsm
adc
and
cmp
std
stos
and
fsts
mov
nop
push
fstpt
fidivs
scas
jns
mov
xor
xor
push
cli
or
inc
jno
ror
jo
cli
sub
mov
xchg
clc
mov
cmp
imul
inc
cmp
mov
pushf
mov
push
add
sub
orl
xor
jae
xchg
test
aad
loope
adc
jnp
stos
bound
mov
lahf
push
mov
add
push
or
inc
xchg
inc
call
add
imul
loopne
jo
pushf
dec
clc
mov
iret
mov
enter
shll
fidivrs
clc
xlat
mov
sbb
lahf
clc
jbe
pop
mov
inc
inc
js
popa
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
push
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
popa
jb
outsl
outsb
fs
jno
jbe
cmp
call
cmp
cmp
push
inc
dec
mov
enter
dec
mov
lock
out
or
aam
insb
lds
js
mov
ljmp
or
movsl
pop
aas
cmp
sub
push
sti
inc
xor
mov
insb
test
sbb
cmp
pop
mov
fdivs
push
cmp
pop
gs
into
xor
stos
add
inc
inc
insb
popa
jae
gs
push
push
je
gs
insl
inc
push
gs
fs
jne
data16
jno
jb
jbe
add
add
arpl
arpl
imul
insb
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
push
popa
arpl
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
mov
cmp
scas
push
jbe
cli
cmp
les
jle
or
call
repnz
push
inc
pushf
mov
aas
cmp
mov
lods
popa
push
xor
mov
repnz
push
cs
das
push
sub
mov
out
mov
cli
sbb
mov
push
mov
cmp
mov
xchg
mov
adc
mov
lds
push
inc
or
push
scas
loopne
insb
lds
add
or
pop
inc
icebp
fsubs
xor
xor
sbb
mov
mov
cwtl
repz
insb
sbbb
xor
loopne
jns
cmp
das
mov
jecxz
fwait
les
ljmp
pop
lods
add
mov
enter
mov
jmp
mov
loop
mov
push
inc
mov
lahf
mov
add
cmc
jmp
cld
add
jmp
test
das
dec
sub
int
sarb
scas
pop
cmp
mov
andl
fistps
and
and
sbb
jecxz
jne
sub
sbb
lods
in
push
jge
outsb
repz
sub
mov
cltd
movsl
adc
subb
fists
fwait
add
ljmp
leave
insl
or
gs
xchg
test
lds
add
inc
inc
js
push
popa
outsb
popa
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
je
gs
insl
inc
data16
jb
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
insl
push
jae
insl
jo
gs
inc
imul
je
outsl
outsb
and
jno
jbe
xlat
hlt
add
sbb
ds
int
adc
insb
inc
jmp
rcrb
mov
out
shr
cmpsb
mov
cmp
testb
rol
int
aas
fcoms
inc
mov
inc
sbb
sti
push
mov
stc
sarb
jo
mov
mov
shr
mov
pushf
mov
dec
in
add
stc
or
pop
add
xchg
movsl
std
iret
sahf
push
inc
fcomip
mulb
mov
pusha
mov
pushf
add
inc
sbb
dec
in
adc
loop
es
lods
xchg
arpl
loop
leave
add
pop
push
fistpll
push
add
out
sub
adc
imul
add
lea
outsl
mov
mov
mov
add
loope
push
scas
add
fwait
jnp
std
sbb
jl
daa
xor
mov
pop
loopne
dec
lahf
push
inc
test
aad
push
movsl
inc
lea
roll
dec
enter
and
push
push
hlt
adc
push
mov
pop
hlt
inc
test
xchg
pop
mov
and
jns
lahf
adc
aam
fldenv
push
in
cmp
lret
xor
fistpll
jp
hlt
xchg
aaa
sub
lea
loope
adc
cs
xchg
mov
pop
xor
cmpb
adc
xlat
lahf
out
dec
bound
mov
xor
mov
xor
xchg
xchg
aaa
dec
mov
incl
add
fs
je
inc
push
dec
je
insl
dec
imul
inc
push
dec
je
insl
dec
outsl
fs
jno
jo
xor
popa
je
inc
push
dec
je
insl
jo
xor
insb
inc
push
fs
jb
gs
imul
jo
ss
fs
je
inc
push
inc
imul
je
outsl
add
loopne
jmp
cmp
pusha
movb
pusha
pushf
lea
jae
test
pushf
call
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
gs
outsl
outsl
insb
inc
popa
jb
imul
jno
jb
outsl
add
add
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
push
gs
popa
jb
outsb
je
popa
arpl
jb
jne
fs
jno
outsl
add
mov
pushf
mov
call
add
inc
inc
js
push
outsl
outsb
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
jo
gs
je
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
lea
je
bt
jmp
or
push
xchg
loopne
xchg
cmp
test
scas
or
sti
scas
inc
lods
xchg
aas
push
jo
cmp
pop
jle
je
or
add
rcrl
les
in
ret
xor
cmp
clc
cwtl
mov
cmp
shlb
sub
jge
xor
cltd
pop
popa
std
in
sbb
cli
std
call
repz
addr16
setge
push
insb
sti
xor
daa
push
mov
rcl
cmp
scas
adc
pop
nop
push
lcall
notl
repz
js
xor
mov
cmp
mov
icebp
pop
xchg
xchg
xlat
and
sub
and
shll
popa
add
sub
insl
clc
xor
xchg
xor
ret
ret
cli
stos
adc
mov
dec
mov
xchg
mov
out
pop
mov
fiaddl
insb
add
pop
in
aas
mov
leave
stos
push
cmp
jbe
sbb
jbe
pop
popa
shr
mov
ret
and
scas
xor
clc
es
movsb
pop
xchg
call
scas
mov
adc
cwtl
shrb
xchg
xchg
push
adc
lock
xor
leave
dec
inc
push
fsubs
ds
fsubrp
xor
fldenv
loopne
push
inc
sub
into
movsb
inc
inc
ffreep
inc
xor
dec
sti
pop
xor
push
jne
cmp
sub
jl
and
push
popa
addr16
outsl
outsb
je
outsl
insb
push
inc
dec
inc
aaa
bound
add
add
add
in
add
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
jb
gs
push
dec
outsl
fs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
xor
insb
inc
push
fs
jb
gs
imul
je
add
jb
push
inc
aad
adc
adc
push
xor
mov
inc
jp
push
ja
aam
and
or
sbb
js
fists
fdivrs
inc
lock
stos
sbb
loop
jo
pop
mov
and
sbb
or
fildll
movsb
out
inc
pop
pop
cmp
out
es
ret
sub
push
add
inc
push
data16
arpl
jb
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
imul
outsl
jo
jb
imul
jo
xor
insb
popa
jae
gs
push
inc
imul
pusha
lea
jmp
add
inc
inc
js
arpl
outsb
jae
jae
imul
imul
and
jno
jbe
add
inc
dec
jbe
jbe
insb
jne
imul
imul
imul
jbe
mov
not
setnp
not
lods
stc
neg
test
cmp
pushf
xor
pushl
ror
stc
mov
sub
mov
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
insb
outsl
arpl
imul
jbe
shl
jmp
add
inc
push
jne
imul
jno
outsl
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
add
xor
pushf
pushf
pushl
ret
add
inc
dec
arpl
jb
popa
insl
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
je
gs
insl
inc
data16
jb
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
xor
inc
add
ds
jmp
pop
cltd
push
inc
test
and
shrl
int
sbbb
and
push
xchg
push
insb
out
push
mov
xor
sbb
sbb
icebp
inc
mov
shrl
inc
pop
inc
ljmp
jmp
xchg
ret
or
scas
dec
sarb
aad
scas
xor
int
dec
jo
sbb
cmpsb
les
dec
ljmp
lods
mov
insb
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
and
arpl
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
add
add
insl
insb
jae
push
popa
addr16
imul
imul
and
jno
jbe
add
inc
dec
arpl
outsb
xor
inc
imul
imul
and
jno
jbe
mulb
cwtl
push
inc
push
lcall
pushf
xor
dec
scas
mov
inc
popa
push
xor
shlb
cltd
jno
hlt
adc
sbb
sub
inc
out
or
rolb
leave
xor
mov
mov
adc
sahf
and
jnp
scas
xchg
rcrb
inc
mov
and
push
arpl
ja
xchg
push
inc
arpl
push
mov
mov
xor
std
das
lods
xchg
popf
mull
mov
mov
and
mov
fucomip
sbbb
sub
into
imulb
std
push
mov
add
pop
outsb
jbe
mov
and
in
jecxz
in
push
xchg
aam
xchg
mov
aam
cmp
int
lret
subl
insl
popf
mov
push
je
cli
fnstenv
and
mov
push
inc
and
and
iret
out
rorl
icebp
pop
data16
sahf
and
inc
fisubl
and
sarl
bound
ret
mov
xchg
iret
jmp
mov
jmp
pop
jne
into
in
push
roll
add
cmp
adcl
xchg
aam
jbe
ja
loopne
stc
xchg
test
push
jp
insb
jl
lods
dec
xlat
xchg
jp
mov
cmpsb
lahf
enter
cmp
cmpsb
lds
daa
inc
mov
xchg
stc
xchg
mov
mov
dec
cld
and
mov
gs
aad
lcall
mov
xchg
fdivl
jnp
mov
pop
negl
pop
inc
test
dec
stos
sbb
pop
les
ret
sub
cltd
cli
cmp
adc
push
jbe
mov
lret
lods
xchg
push
pusha
adc
popa
popa
mov
imul
xor
pop
mov
lcall
xor
lock
out
in
lods
push
mov
pusha
xchg
fwait
insb
adc
mov
in
push
pop
xor
sub
mov
rcrl
addr16
cld
cltd
int
adc
push
test
out
push
jmp
xor
sub
add
ja
mov
dec
fidivl
and
push
dec
hlt
cmp
sbb
mov
outsb
mov
test
cld
cmp
int3
sub
mov
xchg
push
inc
daa
dec
call
std
dec
test
adc
popa
pusha
pop
movsb
cmp
jmp
aad
aad
lcall
out
rcll
icebp
pop
addb
and
ds
bound
out
js
lock
pop
cld
jns
stos
inc
inc
sub
gs
mov
or
loop
lcall
push
adc
xor
push
lcall
cld
jle
xor
sub
ss
icebp
fnsave
pop
cli
jne
stc
cmp
fwait
mov
sub
jne
je
je
bound
inc
imul
imul
and
jno
jbe
test
pusha
mov
pushf
push
test
cmp
call
not
movzbw
mov
movsbw
movsbw
setp
mov
lea
call
add
inc
inc
js
popa
jbe
addr16
je
jb
imul
imul
and
jno
jbe
add
inc
inc
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
dec
jo
imul
jno
jb
add
cmpsl
add
movsb
andl
imul
fidivs
mov
sahf
fwait
xor
jnp
not
repz
xchg
hlt
mov
and
andb
jecxz
sbb
sub
pusha
push
xchg
inc
data16
out
lds
sti
scas
shlb
fisubrl
push
push
andl
call
lahf
inc
xor
pop
lods
test
rclb
push
inc
mov
scas
or
or
sahf
jbe
aas
lods
ss
fimull
push
xchg
insb
jmp
or
dec
scas
add
roll
jg
lds
lcall
pop
js
repz
ds
jl
or
rcrl
cs
xlat
jl
fwait
in
push
outsb
popf
out
adc
push
jns
cmp
xor
dec
loop
addr16
stos
lahf
repnz
fwait
pusha
push
popf
lods
xorl
fucomp
xchg
push
inc
aas
xlat
mov
ja
cmp
fisubl
jno
std
adc
pop
js
mov
movsl
xchg
dec
and
xchg
pushf
cmpb
stc
push
add
add
pop
mov
xchg
roll
push
fildl
cli
dec
cmp
shrl
insb
cmp
aaa
xchg
sub
pop
jecxz
add
push
push
sub
sbb
imul
jns
cmc
fmull
add
or
movsl
subl
int
imul
jo
outsl
arpl
jae
imul
imul
and
jno
jbe
add
inc
dec
jbe
jbe
insb
jne
imul
insb
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
dec
outsl
fs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
jo
ss
js
insb
inc
push
fs
jb
gs
imul
test
and
add
iret
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
jb
arpl
jae
jno
jb
imul
je
insl
inc
inc
outsb
jae
push
je
imul
je
insb
inc
push
dec
outsb
outsw
push
jns
add
fs
jge
push
lea
jne
mov
mov
pusha
cmp
add
pusha
bt
movzwl
sub
jmp
add
mov
inc
in
ret
jne
cltd
data16
push
or
and
jge
sarb
push
xor
mov
cmp
cld
push
ja
cmp
repz
insl
in
cmp
pop
mov
dec
pop
pop
cs
test
scas
and
cmp
insl
addr16
ds
and
mov
inc
mov
in
fistpl
push
jmp
push
sbb
fs
dec
in
xchg
cmp
lock
out
mov
sbb
or
loop
and
jl
adc
mov
mov
das
xchg
push
inc
jg
cmc
xlat
adc
pop
inc
xchg
add
repnz
icebp
js
insb
std
push
push
mov
pop
std
pop
ss
je
mov
or
rcll
les
sub
dec
sub
ja
inc
shll
push
hlt
xchg
lock
dec
repnz
xor
out
pop
gs
out
dec
daa
pop
cmp
nop
sub
pop
ret
sbb
or
xchg
mov
sbb
sub
jnp
out
xchg
xor
dec
cld
push
or
push
hlt
aad
adc
loopne
sub
je
jmp
fnstcw
addr16
roll
out
push
adc
mov
add
jl
or
pop
mov
rolb
lret
mov
dec
addr16
shlb
push
ja
nop
cwtl
pop
dec
gs
fisttps
jle
lods
xor
inc
nop
push
inc
dec
cmpsb
insb
add
outsb
jno
shl
lea
aad
shrl
cmc
leave
call
or
loope
aad
xor
repz
push
push
int
mov
xor
insb
dec
push
sub
cs
mov
inc
loopne
imul
or
mov
push
jle
pop
mov
popf
or
je
shlb
pop
inc
xchg
out
clc
dec
cli
xor
pop
negb
in
mov
add
push
dec
gs
outsb
test
add
js
js
gs
inc
imul
imul
and
jno
jbe
jle
cld
mov
inc
jnp
jge
cmp
push
xor
cli
jecxz
fwait
mov
setp
out
fisubs
inc
ljmp
rcr
std
pop
mov
cs
int
out
cmp
or
popa
push
mov
xor
icebp
sarb
daa
cltd
ja
or
repnz
jmp
xchg
lods
xor
or
sbb
pop
sub
pop
hlt
scas
jg
pop
imul
and
aad
repz
jmp
push
xchg
lods
xor
andb
into
out
push
out
push
and
adc
bound
es
sbb
and
mov
inc
sbb
arpl
sahf
cmp
push
mov
adc
outsb
mov
inc
jne
pop
mov
and
aaa
pop
xor
jg
mov
das
int
pop
xor
xchg
negb
lds
sbb
jecxz
cmp
pusha
jmp
testl
push
or
xchg
out
fidivrl
mov
mov
cmc
int3
or
xchg
pop
jne
stos
pop
push
adc
and
aam
out
or
cmp
push
enter
mov
sahf
mov
add
mov
pop
xor
lret
ret
push
pop
mov
fwait
stos
add
scas
inc
pusha
dec
movsl
int
jmp
fwait
das
lea
jo
movsl
faddl
ret
fs
jmp
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
gs
insb
outsl
popa
je
outsb
addr16
jno
jbe
add
inc
dec
outsb
imul
inc
imul
je
outsl
outsb
and
jno
jbe
adc
out
push
inc
fidivs
sbb
mov
in
xchg
arpl
fidivrl
and
push
dec
mov
lock
xchg
jg
mov
stc
push
push
inc
cmpsl
add
shlb
fnstsw
test
fidivrl
negb
xchg
dec
mov
push
and
inc
insl
add
mov
and
nop
xor
pop
mov
lea
inc
pop
ja
icebp
cwtl
mov
insl
aaa
jae
mov
inc
sub
mov
lret
mov
shrl
imul
popa
mov
popf
mov
pop
inc
popf
mov
mov
icebp
cmpb
pop
xor
cld
lret
push
clc
and
pop
decb
xchg
cld
outsl
arpl
lods
push
mov
jnp
jb
xlat
js
lods
inc
and
gs
and
xor
adcb
mov
inc
fbstp
fidivs
nop
rolb
stos
and
dec
mov
sbb
mov
test
push
sub
and
imul
jno
or
and
jp
in
addr16
js
insl
in
xchg
loope
mov
cld
jp
jne
cmp
push
in
cmp
paddsw
sub
mov
iret
sbb
inc
movsl
or
lods
cmpsl
fwait
xor
rolb
fisttpll
xchg
nop
jle
mov
cli
xchg
mov
clc
jecxz
dec
mov
in
xor
add
inc
inc
js
outsl
outsb
je
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
gs
dec
dec
push
popa
je
push
popa
insb
jne
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
outsl
add
inc
or
shll
mov
inc
out
loopne
pop
xor
mov
cmp
rcr
in
das
push
out
in
inc
call
ficoml
jle
cltd
fmuls
jp
and
and
ds
test
xchg
insb
dec
sbb
inc
rol
loopne
sub
fsubr
push
scas
out
xchg
out
push
test
das
push
inc
repz
cmp
push
cmp
xchg
jg
mov
sbb
iret
out
lods
or
pop
mov
xor
adc
loop
cltd
jecxz
mov
add
jbe
jb
jo
jb
jns
je
jb
gs
inc
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
push
dec
outsl
fs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
je
add
add
jns
je
insl
inc
imul
imul
and
jno
jbe
xor
inc
clc
jge
icebp
sbb
mov
fwait
xchg
mov
cli
shr
cltd
mov
cmp
fdivs
aam
adc
push
icebp
or
add
das
dec
sarb
in
or
push
sbb
pop
hlt
push
cmp
adc
in
push
xor
xor
xchg
loope
ljmp
dec
jno
movb
inc
xorl
push
inc
mov
dec
cmpsl
repnz
mov
negb
call
ljmp
add
and
jmp
call
repz
pop
movsb
jge
pop
ja
lock
xor
movsb
out
add
lods
push
xor
cmpsb
mov
push
sbb
js
add
pextrw
jns
jmp
mov
mov
call
jne
icebp
xchg
xor
mov
and
in
push
inc
xor
dec
sbb
lea
pop
pushl
jle
loopne
ljmp
inc
daa
lret
loop
ljmp
sbb
push
fstps
fwait
mov
pop
mov
lea
adc
movsb
pop
xchg
dec
lods
mov
cwtl
out
jmp
pop
mov
mov
icebp
push
clc
dec
pushf
testb
inc
push
loop
xchg
add
loop
mov
clc
push
jmp
jecxz
inc
mov
adc
jnp
call
negb
cltd
sbb
leave
cld
cmpsb
test
subl
mov
push
inc
imul
mov
push
push
sbb
int
insl
into
jmp
dec
jne
mul
mov
fimuls
addr16
xor
and
xchg
mov
psubusw
sbb
push
and
sub
pop
std
jmp
fsubrl
mov
ret
cmp
bound
xlat
mov
mov
sub
mov
or
shl
mov
call
add
inc
pop
insb
imul
outsb
popa
insb
imul
and
jno
jbe
jmp
sets
movsbw
lahf
lahf
pushl
pusha
push
mov
bswap
movl
call
outsl
jp
mov
inc
push
mov
les
cwtl
mov
scas
leave
pusha
adc
mov
fwait
sbb
aam
lahf
xor
pop
mov
dec
mov
or
daa
jne
jl
add
adc
test
push
mov
aad
push
mov
lock
scas
scas
fstpl
inc
dec
movsl
call
lea
repz
pop
push
jne
jl
lock
inc
imul
jae
jns
jb
scas
scas
fstp
mov
sahf
inc
clc
les
xchg
shrb
outsb
or
lcall
ret
mov
inc
fisttpl
sar
inc
jo
pop
mov
fbstp
xor
mov
insl
inc
test
xor
cmc
jno
or
out
imul
fbstp
sbb
mov
addr16
rclb
into
in
fwait
out
xchg
inc
inc
push
xor
insl
test
scas
fisttpll
call
dec
fs
lret
push
test
xorb
inc
out
adc
mov
call
sarl
into
insl
das
pop
movsb
cmp
mov
cmp
lret
ds
negl
aam
clc
inc
cwtl
cmp
or
inc
in
out
or
test
inc
imul
ja
jle
jl
jbe
jo
jno
pop
into
fs
shlb
push
jne
xchg
inc
xchg
clc
fidivl
and
push
dec
xchg
dec
mov
je
mov
or
jne
dec
test
test
inc
outsl
adc
jecxz
or
push
stc
xchg
pop
cmp
rcrb
sub
add
xor
sbbb
cmp
jle
std
push
push
pop
dec
cmpl
adc
lret
insb
ss
enter
xor
sar
movb
mov
adc
js
xchg
inc
pop
xor
out
xchg
or
movsl
adc
add
jp
lock
enter
sarl
xchg
icebp
adc
repnz
mov
cmp
sbb
dec
jge
and
leave
movsl
test
xor
adc
shll
dec
mov
or
jne
add
dec
sbb
ss
ret
dec
mov
decb
mov
notb
push
xor
fidivrl
insl
mov
inc
ja
out
sti
leave
test
inc
andb
mov
pop
enter
clc
shll
mov
push
repnz
fists
cmp
daa
sub
adc
popf
enter
and
or
cli
mov
outsb
or
sub
fildll
clc
push
mov
nop
mov
ds
negb
bound
mov
mov
mov
setl
fwait
mov
push
cmc
push
clc
mov
imul
push
inc
inc
outsl
add
sbb
ret
push
test
pushf
sub
lea
insb
or
bound
in
or
adc
pop
mov
inc
les
mov
adc
insl
push
aam
in
aam
cmp
add
add
xor
mov
imul
sub
sbb
push
sub
int3
sbbl
cs
inc
push
stos
pop
ljmp
push
outsb
arpl
scas
xor
and
cld
addb
lods
or
pop
out
xor
loope
arpl
shrb
adc
push
dec
out
out
dec
loop
xchg
aas
xorl
jl
xchg
and
test
jnp,pt
cmp
movsb
add
and
dec
in
in
and
cmp
cmc
pop
test
inc
stos
inc
das
into
and
dec
int
das
push
aas
add
xchg
add
sbb
add
es
xchg
jb
out
push
pcmpgtb
xor
adc
mov
mov
decl
sbb
stc
repnz
js
lea
in
dec
add
outsb
test
cmpsl
inc
test
sub
jb
xor
test
xchg
rcrb
test
sub
subl
push
cmp
mov
dec
call
out
push
call
add
inc
inc
js
imul
je
jb
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
outsl
insl
arpl
jae
imul
imul
and
jno
jbe
add
cmc
test
mov
cmp
cmp
pushf
pushf
movb
jmp
add
inc
inc
js
insb
popa
jae
gs
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
and
arpl
jno
jb
xor
popa
inc
push
dec
je
insl
dec
imul
fs
je
inc
push
inc
imul
je
mov
mov
jb
cmp
push
fcmovbe
out
inc
cmp
mov
repz
loope
loop
pop
cmp
repnz
shl
push
pusha
sbb
or
sarb
xor
mov
loop
fmull
push
inc
imul
outsb
aas
add
nop
sub
jb
scas
stc
xor
aas
cltd
jnp
mov
movb
leave
xor
xchg
xor
xor
fbstp
cmp
push
push
xor
mov
into
scas
stc
insl
add
cmpsb
inc
and
sbb
cmp
cmp
enter
xor
mov
scas
jmp
cmpsb
push
mov
into
out
xlat
movsl
push
add
or
jecxz
mov
jbe
call
aas
ret
cli
adc
sahf
clc
sbb
cwtl
inc
push
mov
cmp
pusha
filds
ds
hlt
adc
fmull
pop
inc
xor
add
hlt
ljmp
lcall
gs
stos
cwtl
je
and
scas
js
iret
push
lds
pushf
cmpsb
add
in
xchg
clc
lock
mov
lock
das
push
dec
mull
or
shlb
outsl
mov
sub
mov
mov
and
add
call
inc
cmp
add
in
gs
fimull
mov
test
add
insl
jo
jae
insb
imul
imul
imul
jbe
add
inc
push
jne
je
popa
arpl
popa
jb
inc
imul
je
outsl
outsb
and
jno
jbe
out
lds
xchg
mov
push
mov
je
cmc
ror
push
das
push
fwait
ud1
sahf
push
or
sbb
out
inc
mov
popa
aas
shlb
je
or
push
jmp
fs
cmp
inc
fst
insl
xchg
cmpsl
imul
rol
jge
push
imul
out
sbb
pop
rcll
xor
push
sbbb
push
mov
sbb
sbb
push
in
xchg
inc
inc
fst
sub
inc
jno
dec
sar
movsl
into
or
inc
and
mov
nop
int
mov
mov
mov
imul
adc
cmp
adc
mov
mov
xchg
add
into
mov
or
xchg
cmp
into
mov
out
out
out
insl
sub
cmpsl
dec
or
pushl
shr
xor
inc
shll
pop
cmp
cmp
mov
dec
inc
fst
and
adc
jo
lret
bound
imul
jl
test
adc
jmp
add
jbe
adc
pop
repz
loope
ret
loopne
out
shrb
aas
je
leave
inc
inc
push
pop
mov
out
movsl
pop
mov
jo
stc
test
cmp
mov
xchg
mov
cmp
jge
insb
ljmp
pop
inc
xchg
out
out
xchg
push
movsl
dec
out
pushf
jns
xor
xor
cld
pushl
or
push
scas
push
jo
push
inc
mov
adc
lods
iret
mov
lock
xlat
es
clc
lea
push
icebp
sbb
shlb
jge
nop
cmp
or
arpl
push
lea
xor
mov
lea
js
outsl
and
js
xchg
out
xchg
ljmp
push
jne
lcall
xor
xchg
cli
lcall
test
insl
add
inc
pop
insb
imul
imul
imul
and
jno
jbe
add
inc
push
jne
arpl
bound
outsl
js
imul
imul
and
jno
jbe
out
mov
push
inc
das
es
jmp
cmpb
jne
cltd
push
cmp
push
call
jmp
loope
ljmp
jno
dec
loope
les
out
int
loop
jmp
inc
or
das
enter
add
cmpsb
std
xlat
je
mov
xchg
aam
and
adc
sub
movb
je
aaa
loopne
jle
inc
call
add
push
test
fildll
cmpsb
mov
xor
xchg
aas
push
sti
aam
lahf
not
push
mov
add
push
or
pop
lret
sbb
jmp
sub
jbe
aam
or
and
jg
add
cmp
not
scas
push
outsb
xchg
push
sub
add
jns
mov
jb
mov
mov
and
sarl
stc
sbb
shl
aas
lahf
xor
fs
pop
mov
insl
sbb
mov
xchg
jnp
aad
push
js
mov
sub
sub
mov
repnz
add
cwtl
shr
jno
push
test
or
or
in
adc
jp
pop
jl
aam
jb
inc
cwtl
mov
jno
pop
in
mov
sahf
es
aaa
and
popa
dec
mov
in
lds
lods
mov
cmp
sarl
mov
movsb
jecxz
pop
cmc
and
mov
inc
inc
js
outsl
outsl
imul
data16
jo
imul
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
gs
insb
outsl
arpl
imul
jbe
push
pop
not
mov
bt
pushf
push
cmpb
call
aaa
push
icebp
mov
jns
and
push
scas
xchg
iret
push
adc
push
sbb
aas
xchg
int
sbb
mov
pop
js
sub
or
das
mov
sub
les
aam
xor
pop
das
pop
push
fistpll
sahf
xchg
sub
pop
enter
pop
outsl
shrl
sbb
arpl
fldenv
stos
add
enter
pop
sbb
pop
mov
mov
push
inc
inc
xchg
movsb
enter
dec
in
add
stos
js
adc
sub
or
jns
adcb
jae
dec
push
fwait
repz
add
mov
mov
and
sub
adc
icebp
push
jno
xchg
jg
mov
jl
mov
loopne
nop
mov
lret
ja
cmp
out
jo
inc
nop
sub
xchg
mov
fst
or
test
mov
mov
cwtl
mov
jae
cli
pop
xor
xchg
mov
inc
je
adc
repz
inc
sarb
dec
call
mov
popf
js
cmp
shrb
sbb
mov
lcall
dec
dec
sti
ret
mov
mov
xor
aas
jbe
sbb
xchg
pop
xorl
ja
mov
into
ja
mov
dec
jg
xor
dec
repz
mov
pop
cmp
xchg
push
push
sub
dec
mov
push
inc
loop
in
ucomiss
add
hlt
ds
je
or
cmc
jb
jnp
fnstcw
repnz
loop
sarl
add
fsubrs
mov
add
arpl
push
sarl
cmp
std
pushf
cli
pop
dec
sbb
mov
dec
xchg
and
cli
shlb
xchg
ljmp
loopne
ss
sbb
push
lock
subb
dec
xchg
and
ret
cmp
mov
dec
sub
test
push
dec
test
pop
ss
and
test
js
pop
mov
inc
das
stc
cmpb
pop
gs
outsb
sub
fwait
inc
hlt
icebp
enter
mov
lcall
fwait
jl
adc
push
stos
inc
incl
inc
inc
insb
or
xchg
rorl
and
adc
fwait
adc
ret
cmp
and
cmp
pop
icebp
xchg
xor
jbe
jmp
lret
adc
aam
sahf
jbe
or
mov
xor
icebp
adc
mov
cmpsl
gs
add
lock
das
xchg
ja
inc
xor
out
sub
adc
insl
and
fdivrl
aad
sbb
leave
mov
cmpb
xchg
fwait
inc
sub
out
or
neg
mov
fistpll
popf
adc
pop
add
inc
dec
insl
push
insl
popa
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
outsl
outsl
imul
data16
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
push
insb
jae
insb
insb
outsl
arpl
add
inc
dec
insl
popa
fs
gs
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
push
gs
fs
outsl
jae
je
outsl
outsb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
jne
inc
outsl
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
mov
mov
loop
cs
clc
and
jb
push
jl
insl
mov
mov
sarb
pusha
in
fisttps
roll
sub
sbb
inc
arpl
lods
cvtpi2ps
call
cmp
mov
jae
repnz
in
mov
shrb
loope
and
subl
pop
sub
xor
inc
in
test
mov
dec
sub
push
ret
jnp
ret
repz
jo
lock
pop
stos
and
inc
cs
sub
popf
test
shrl
out
insl
push
mov
pop
leave
mov
jb
fnstenv
insl
xor
sbb
pop
loop
js
dec
pop
fstps
mov
out
scas
mov
lret
and
inc
loope
aas
inc
repz
sbb
int3
in
test
inc
shll
test
icebp
loope
rcr
and
ja
ds
es
pushl
fsub
xor
repnz
stc
mov
add
mov
mov
pushf
sub
mov
adc
in
je
ret
push
fcompl
repnz
mov
dec
pop
call
out
sbb
ja
pop
sbb
loop
mov
fcomi
in
adc
cmp
lcall
stc
fwait
pop
mov
in
aaa
call
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
jb
popa
je
push
imul
outsb
fs
gs
jno
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
jb
popa
je
push
popa
jb
insl
jae
lea
jb
push
bt
pushl
cmp
movb
movw
jmp
add
inc
inc
jb
fs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
insl
arpl
jae
inc
imul
imul
and
jno
jbe
pusha
sub
lea
bt
pushf
or
mov
lea
je
push
mov
lea
mov
pusha
movw
pusha
bswap
lea
mov
movl
movl
jmp
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
imul
fs
imul
jo
ss
fs
je
inc
push
inc
imul
je
xor
push
pushl
pushf
lea
jb
test
stc
clc
call
adc
inc
jmp
cs
imul
outsl
aaa
adc
xor
mov
sbb
loope
loope
mov
or
repz
dec
jae
xor
inc
es
cmpsl
out
pop
pop
xor
push
pop
jp
ds
mov
aaa
jbe
pop
leave
pusha
cmp
jl
mov
std
dec
mov
pop
pop
or
adc
pop
mov
push
and
sbb
adc
inc
push
mov
movsb
jl
mov
test
cltd
dec
mov
sbb
mov
lock
neg
cmp
enter
clc
insl
neg
mov
imull
out
insl
jecxz
push
sub
xchg
cmp
add
das
nop
add
lea
movsl
mov
xchg
outsl
lods
xchg
push
fdiv
push
ds
cmc
fisubrs
int3
fs
adcb
into
push
ljmp
pop
jp
out
mov
jne
inc
mov
cmp
lods
aam
out
jl
dec
jb
inc
notl
xor
xlat
jbe
mov
adc
push
stc
push
js
xchg
fsubr
inc
and
jbe
mov
insb
or
lods
jno
and
daa
pop
out
mov
dec
pop
std
sbb
sarl
xor
xchg
sub
icebp
lret
testl
movsl
mov
mov
xor
dec
xchg
dec
fidivl
sarl
mov
jle
cmp
add
into
push
add
inc
and
jo
xor
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
inc
gs
outsb
popa
bound
and
jno
jbe
les
je
inc
mov
sbb
aas
cmpsl
out
mov
jbe
std
jno
adc
cwtl
leave
sub
or
data16
xchg
pop
stos
fimuls
shrl
les
add
das
lock
mov
push
ljmp
adc
sbb
lcall
ds
out
out
out
movb
adc
push
jnp
jae
inc
mov
insb
push
cs
dec
hlt
xor
rcr
adc
or
jnp
fsub
outsl
inc
data16
int
ret
sub
mov
popf
pop
xorl
leave
stos
mov
add
out
and
lock
jae
dec
call
pop
adc
mov
das
or
mov
cmpsb
mov
das
dec
cmp
jg
mov
jne
xchg
mov
push
lea
jge
hlt
pop
pusha
pslld
inc
cltd
cwtl
mov
test
xchg
mov
lods
pop
jo
xor
jnp
jne
pop
mov
jo
cmp
push
lods
insl
pop
fwait
mov
in
fstpt
dec
mov
data16
push
pop
arpl
sar
and
cmpsb
adc
adc
mov
repz
movsl
stos
pop
mov
mov
inc
sarb
add
cmpsb
lock
bound
lds
xor
mov
nop
jne
clc
adc
dec
sub
lret
mov
add
inc
pop
insl
insb
arpl
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
arpl
insb
insb
bound
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
popa
imul
popa
bound
popa
jo
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
gs
jno
jb
add
add
fs
je
inc
push
dec
je
insl
dec
imul
je
outsb
push
jne
jb
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
fs
je
inc
push
inc
imul
setg
lea
pusha
jmp
movl
push
pushf
movb
call
test
hlt
jo
inc
add
inc
in
and
cmp
daa
jecxz
ret
clc
sbbl
mov
mov
hlt
push
repz
inc
and
daa
shrb
and
pop
cltd
xor
ja
jbe
ja
sub
dec
jmp
inc
mov
sbb
inc
lods
add
leave
insl
les
pop
cld
mov
ljmp
test
jmp
lods
iret
bound
ds
mov
out
dec
push
sbb
xchg
sbb
push
mov
lcall
sbb
popa
mov
xor
addr16
das
inc
xor
outsl
sub
inc
adc
test
shr
sbb
cmp
sahf
movsl
repnz
mov
andl
jbe
pop
bnd
sub
outsl
push
inc
sub
insb
lret
stos
inc
gs
cmpsb
paddsw
jo
aas
fidivs
stos
lret
out
dec
movsl
cmp
dec
push
sbb
ret
sub
imul
js
fcmovnu
pop
into
in
lcall
ret
xchg
lods
inc
sarl
adc
scas
cmpsl
pop
pop
les
pushf
push
push
inc
mov
inc
stos
mov
mov
pop
paddsw
pop
mov
push
jle
fidivl
in
pop
in
pop
mov
dec
jmp
add
add
push
iret
pop
repnz
dec
jno
push
fs
je
inc
push
dec
je
insl
dec
imul
popa
insb
dec
inc
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
dec
jbe
js
popa
jae
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
popa
jo
insl
imul
insb
imul
and
jno
jbe
pop
inc
lret
inc
lea
jmp
loope
popa
mov
dec
add
ljmp
jg
repz
cmp
in
aad
inc
fdivl
jecxz
and
rorb
jge
sub
mov
push
dec
and
jmp
mov
mov
cmp
dec
sub
sub
sub
pusha
jns
or
pop
xchg
mov
outsl
push
inc
push
inc
sub
cmp
shrb
xor
and
sub
fwait
mov
pushf
repnz
fnstenv
daa
xchg
int
lods
addr16
icebp
xchg
sti
sub
sbb
sub
ret
lret
inc
mov
cmc
loopne
ss
fdiv
inc
xor
add
outsb
test
shl
mov
adc
cltd
jg
xor
fnsave
cmc
xlat
insl
push
inc
daa
into
fs
mov
add
mov
pop
inc
dec
loopne
jmp
test
or
ja
lea
xlat
inc
iret
push
loope
cld
mov
mov
gs
clc
and
sub
in
inc
fndisi(8087
repz
je
lds
shlb
call
push
jmp
pop
popa
comiss
cmp
out
mov
hlt
nop
pop
mov
mov
repz
sub
jb
negl
pop
mov
pushf
fwait
inc
pusha
in
cmp
add
inc
push
jo
jne
imul
imul
imul
jbe
add
inc
dec
arpl
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
movl
pushl
pushl
lea
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
outsl
outsb
imul
je
jno
jb
add
inc
mov
or
les
andl
std
rolb
xor
loop
pop
and
daa
lret
loop
cld
icebp
cmp
or
cmc
sahf
ds
mov
daa
les
push
icebp
rcrb
loopne
add
scas
sbbl
mov
pop
inc
loope
lcall
bound
add
shrb
or
pop
out
xchg
loopne
lret
push
insl
push
inc
not
jb
mov
fsubrl
fldl
pop
inc
loope
dec
fwait
inc
outsl
xchg
jle
rorl
or
scas
sub
add
ret
andl
subl
stos
cwtl
mov
sub
pop
inc
xchg
mov
test
popl
and
sub
insb
sbb
out
dec
mov
arpl
push
in
lods
lahf
or
fcmovnu
sub
xor
inc
add
inc
loope
sub
iret
negb
mov
or
sbb
mov
jne
jnp
cmp
add
xor
shl
sub
fcomi
repnz
sub
aam
aaa
repz
cli
lcall
dec
mov
rcrl
dec
mov
adc
shll
outsl
inc
mov
inc
and
pop
repnz
loope
push
sbb
and
mov
pop
in
and
andl
addr16
loopne
out
inc
and
cmpsl
shrl
or
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
jne
push
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
dec
insl
push
insl
gs
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
insl
gs
imul
imul
and
jno
jbe
add
inc
dec
arpl
jae
inc
imul
imul
and
jno
jbe
add
inc
inc
js
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
insl
popa
jb
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
imul
outsb
gs
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
jae
gs
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
push
data16
arpl
jb
gs
imul
imul
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
insb
imul
xor
jb
insb
jae
push
inc
insb
imul
push
jmp
add
inc
inc
js
ja
popa
jo
inc
inc
imul
je
outsl
outsb
and
jno
jbe
movb
mov
pusha
movb
pushl
ret
xchg
lea
mov
call
add
inc
inc
bound
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
bound
xor
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
outsl
inc
imul
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
jb
gs
gs
outsl
ja
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
jae
ss
jns
je
insl
inc
and
je
cmp
popa
jae
gs
inc
insb
popa
jae
gs
pop
xor
jne
and
and
jne
and
and
dec
insl
push
je
insb
jae
imul
imul
and
jno
jbe
call
lods
movw
neg
pusha
xor
pushl
movl
ror
mov
call
add
inc
inc
outsl
imul
popa
insb
imul
and
jno
jbe
repz
inc
mov
dec
and
cmpsb
mov
insl
pop
xor
out
int
xor
sar
fsincos
nop
cmp
mov
push
add
sub
lea
cmpsl
adc
jge
loopne
int
lds
pusha
lret
jbe
daa
push
movb
jge
loope
cmp
push
dec
sub
scas
adc
xchg
xchg
xor
int
scas
rorl
addr16
loop
cmpsb
or
shrl
adc
xchg
pop
inc
test
mov
fdivs
stos
lock
shr
or
xchg
bound
shlb
dec
mov
mov
jp
sub
adc
xchg
lods
sub
insb
ja
dec
sub
imul
sbb
add
cmp
hlt
mov
jp
sbb
pop
popa
test
mov
add
dec
rorl
mov
bt
mov
cmp
call
add
inc
push
fs
je
inc
inc
arpl
inc
outsl
fs
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
dec
imul
gs
jo
imul
popa
insb
imul
and
jno
jbe
roll
jae
jnp
cmp
mov
jmp
mov
pop
notb
movsb
pop
loope
jecxz
loope
mull
pushf
mov
mov
iret
or
mov
enter
iret
sbb
out
xchg
push
mov
xor
push
stos
into
lock
mov
mov
idivb
adc
outsl
add
add
pop
into
daa
pushf
loope
mov
inc
cwtl
mov
jno
mov
add
sub
and
push
pop
jns
xor
aam
jb
scas
pop
rolb
pop
jp
mov
test
and
mov
je
out
and
xchg
inc
std
push
fs
adc
push
ljmp
sbb
pop
cmp
push
xlat
jecxz
xor
adc
push
inc
aaa
push
jnp
cli
lcall
iret
jbe
push
sub
lds
in
xchg
lea
call
test
cld
push
cli
inc
xchg
jmp
cmc
fsub
gs
lock
out
fidivrl
or
mov
inc
in
into
ret
sbb
and
mov
cmp
inc
xchg
add
notb
and
mov
inc
std
dec
in
pop
bound
mov
pop
push
addr16
scas
or
dec
scas
andl
mov
mov
dec
jecxz
repnz
pushf
lea
jne
cwtl
movb
cwtl
push
lea
mov
jmp
jecxz
test
inc
xchg
mov
fidivrl
mov
fldt
imul
mov
mov
cmp
data16
push
insb
lret
push
out
mov
pop
add
stc
mov
fdiv
aad
jno
fstl
aam
mov
xchg
and
gs
in
inc
daa
fdiv
ljmp
test
rcll
shr
imul
jle
pop
mov
jmp
and
pop
pop
inc
xchg
mov
inc
clc
lret
sti
das
ljmp
adc
lret
add
inc
addr16
loopne
enter
daa
fwait
mov
cs
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
gs
insb
imul
je
jno
jb
add
mov
movb
pushl
pushf
lahf
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
je
imul
je
data16
jb
jno
jb
add
add
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
gs
jb
jns
outsb
fs
jno
jbe
add
inc
dec
arpl
popa
jb
gs
inc
imul
imul
and
jno
jbe
cltd
or
mov
test
sub
rclb
xchg
int3
push
mov
dec
out
pop
and
dec
sub
pop
inc
int3
or
loope
in
fwait
and
arpl
dec
ja
lods
movsb
and
into
in
dec
dec
data16
dec
adc
or
jbe
cwtl
sub
pop
inc
dec
and
jne
cmp
add
pop
push
ljmp
fisubrs
inc
push
adc
nop
stc
fnstenv
ret
mov
cld
xchg
mov
xor
cmc
adc
xor
sub
adc
mov
cmp
or
ret
sbb
and
mov
cmp
jmp
sbb
jb
nop
in
inc
mov
push
xor
sti
push
insb
mov
jmp
mov
jno
ja
mov
stc
xlat
ja
popa
add
xlat
mov
fwait
hlt
xchg
aaa
sbb
inc
fs
fs
mov
loopne
jge
push
jle
push
int3
or
dec
xor
mov
xor
cli
shl
and
lods
movsb
in
xor
xor
jl
into
rol
popf
jo
xor
adc
add
jl
pop
mov
loope
add
dec
sbb
lret
add
mov
in
mov
fisttpl
inc
mov
sub
rolb
sub
in
loopne
lods
int
push
dec
jno
std
xlat
scas
insl
adc
aad
push
inc
and
mov
mov
push
or
iret
out
mov
mov
call
outsb
lds
subb
sub
adc
or
pop
aaa
fdivr
frstor
rcr
push
sbb
push
push
daa
inc
scas
or
or
mov
test
adc
inc
outsb
sbb
iret
jne
xchg
test
inc
pop
test
mov
bound
inc
fs
sub
dec
dec
jbe
sbb
adc
orl
pop
loopnew
popa
int3
in
ljmp
inc
xchg
mov
testb
data16
stc
test
ja
jge
xchg
mov
dec
out
pop
jl
jge
jg
xor
loop
cwtl
arpl
jecxz
pop
mov
push
in
mov
adc
cltd
jns
cmp
test
out
je
mov
cmpsl
bound
inc
mov
insl
push
rcll
adc
add
jle
mov
iret
lods
insb
xchg
jo
daa
lds
bound
scas
sahf
xor
outsl
pop
lds
data16
loope
sub
cmp
inc
pop
jnp
add
mov
xchg
imulb
aaa
or
cmp
xlat
or
addr16
jne
int3
xor
out
sar
fs
hlt
dec
out
xchg
arpl
ss
mov
xchg
js
push
ss
and
pop
and
outsb
add
inc
or
scas
out
cmc
pop
call
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
insb
outsl
bound
push
jne
jb
and
jno
jo
ss
fs
je
inc
push
dec
je
insl
dec
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
outsl
outsl
outsl
add
inc
popf
jge
notl
aaa
pop
je
cmc
ljmp
es
jge
xchg
xchg
mov
ds
rcrb
shrl
adc
les
out
mov
push
loopne
stos
add
xchg
mov
insl
xlat
xchg
sub
repz
fdiv
rcrb
push
mov
pusha
push
inc
inc
test
sub
mov
les
cmpsb
sub
jo
add
cmp
dec
mov
negl
fdivrl
aam
cmpsl
dec
xor
movsl
or
leave
cwtl
mov
cmp
in
bound
pop
mov
xchg
les
cmc
pop
sub
add
out
push
aad
xor
fbstp
xor
scas
or
add
cmc
pop
cmp
cmp
push
outsl
mov
popa
cwtl
mov
cmp
test
inc
xchg
stc
aad
xchg
jg
mov
mov
sub
repz
dec
arpl
cmpsl
xsha1
cmpsb
dec
out
int3
sub
daa
pop
adc
stc
sbb
mov
inc
and
out
push
rolb
and
inc
jle
cmp
push
push
mov
lret
push
xor
pushf
stos
fwait
dec
popf
xor
out
jg
lock
pop
mov
inc
push
pop
jb
jo
push
in
add
stos
or
enter
loopne
cmp
aas
pop
mov
push
sbb
lret
nop
xchg
mov
sti
bt
stc
call
jmp
add
inc
dec
insl
popa
imul
xor
xor
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
insb
popa
je
bound
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jp
push
je
insb
jae
imul
imul
and
jno
jbe
cmp
jg
mov
mov
shrl
rcr
jno
sbb
outsb
fbstp
jl
xor
inc
mov
fdivrl
or
ljmp
sbb
inc
scas
test
cmpsl
test
mov
push
or
loop
call
inc
pushf
stos
fnstcw
andl
push
adc
mov
xchg
repz
in
lds
pop
cmp
and
pop
push
inc
sub
shr
mov
filds
imul
xchg
insb
add
sub
and
hlt
test
js
mov
repnz
add
scas
or
add
xchg
xchg
icebp
dec
inc
stc
sbb
or
xchg
hlt
arpl
popf
loopne
in
mov
rorb
mov
add
pushf
or
adc
cmc
sbb
xchg
aas
dec
fcmovbe
pop
jo
sbb
jl,pn
push
inc
mov
ret
mov
ffree
sub
frstor
push
jno
mov
fs
scas
andb
fsubs
addr16
push
pushf
xor
adc
lret
popa
dec
pop
cli
loopne
pop
hlt
leave
push
jnp
dec
mov
sbb
ret
outsb
int
mov
and
neg
jae
imul
adc
or
mov
cli
sub
ret
insb
push
xor
pop
xchg
push
and
les
sti
push
jge
cmp
negb
cmp
rcrb
sub
popf
add
inc
dec
arpl
imul
imul
imul
jbe
add
inc
and
jo
xor
push
fs
je
inc
push
dec
je
insl
add
pop
push
inc
scas
test
lret
insb
aam
mov
hlt
pop
gs
xchg
popf
sarb
stos
js
jg
jns
jge
lock
or
or
repnz
in
jae
rcr
cmp
sub
xchg
jns
mov
fidivs
in
xchg
repz
mov
sub
sub
jb
cltd
inc
clc
lds
xchg
pop
testb
imul
push
inc
repz
outsl
and
repz
dec
adc
sbb
mov
das
push
and
fnstenv
repnz
pop
clc
cwtl
sub
out
sub
inc
pop
dec
fcoml
jmp
xchg
cltd
adc
movsl
sbb
ret
xor
mov
mov
jmp
sti
mov
incl
pusha
sbb
js
outsb
mov
or
outsb
inc
loope
inc
jnp
lcall
inc
repnz
xor
jae
push
inc
jo
andl
push
or
cld
dec
sbb
push
dec
xor
and
push
in
push
addr16
jns
or
cmp
pop
icebp
or
cmp
pushf
loope
fnstsw
out
and
enter
mov
dec
jns
aam
cmp
adc
add
and
out
jo
insl
cli
shr
jbe
test
or
out
out
sub
cld
inc
je
or
movsb
or
mov
nop
mov
xchg
xchg
lcall
es
xchg
stc
mov
add
insl
popa
imul
outsl
jb
addr16
jo
imul
popa
insb
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsl
jb
inc
popa
je
inc
data16
jb
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
add
add
jne
je
insl
outsl
outsb
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
arpl
jb
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
outsl
jb
popa
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
popa
jbe
push
je
gs
insl
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
jo
inc
add
dec
mov
add
add
jne
imul
jbe
inc
imul
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jae
gs
inc
inc
outsb
jae
push
je
imul
add
imul
imul
popa
insb
imul
and
jno
jbe
push
pusha
lea
jb
cmc
cmp
push
push
pusha
movb
lea
ja
dec
pusha
add
sub
shr
rol
sub
cmp
mov
pusha
pushl
cmc
cmc
cmp
pushl
lea
jb
jmp
add
inc
push
fs
je
inc
push
inc
imul
je
add
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
push
imul
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
js
js
push
inc
imul
je
outsl
outsb
and
jno
jbe
movl
jne
push
pusha
pusha
pushl
lea
jmp
add
inc
push
jp
outsl
insl
insl
outsl
outsb
bound
insl
popa
jo
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
popa
jb
popa
outsb
je
inc
inc
push
popa
jb
jb
insl
dec
push
je
and
jno
jb
push
push
popa
jb
popa
je
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
dec
popa
jae
inc
imul
imul
and
jno
jbe
jnp
notl
inc
hlt
jecxz
and
mov
pop
fsubs
mov
bound
mov
ljmp
in
in
or
sbb
adc
sbb
inc
fdiv
mov
fstl
push
jbe
je
fnstsw
test
lea
bound
loop
pop
push
lods
clc
ret
jge
adc
insb
push
sti
dec
fwait
sub
inc
inc
ret
andb
cmpsl
push
divl
add
pop
aaa
loop
incb
sub
push
cmp
icebp
xor
aaa
adc
adc
or
testl
sub
push
sti
adc
push
add
jne
jb
cmp
jp
jle
xchg
xchg
mov
or
xchg
rolb
repz
mov
test
into
insl
into
loope
test
cltd
add
xchg
testb
dec
xchg
jp
push
inc
fnstsw
sub
out
sbb
inc
rcrb
loop
dec
and
sub
insl
or
scas
clc
mulb
and
add
xchg
cmp
sbb
ja
fcomip
mov
mov
dec
andb
inc
pop
enter
aam
and
push
lcall
push
sbb
pop
cmpsl
sbb
cmp
nop
mov
cmp
rolb
inc
jmp
lret
add
or
jbe
mov
scas
jle
push
push
inc
stos
jl
mov
mov
aam
cwtl
sarb
pop
mov
mov
and
sub
outsl
inc
loope
sub
or
out
cmpsl
pushf
sbb
or
shlb
bound
pop
stos
mov
clc
push
pop
cmp
pusha
push
cmp
cs
push
inc
mov
je,pt
cmp
arpl
cmpsl
inc
mov
repnz
pop
adc
push
push
inc
lcall
xor
fdivs
call
push
mov
ds
pusha
mov
dec
lods
test
lea
iret
mov
and
cwtd
std
push
sub
push
fs
mov
dec
xchg
mov
test
dec
ja
or
popa
shlb
jl
scas
dec
mov
pop
mov
push
adc
xor
loope
jl
repz
stc
pop
xor
mov
dec
cmp
das
aas
out
push
push
inc
mov
repnz
jle
clc
call
sub
call
mov
mov
ds
or
loopne
sub
mov
stc
notl
lods
mov
stc
outsl
test
mov
xchg
repz
adc
push
sbb
outsl
xchg
sbb
sbb
mov
out
mov
pop
repz
pop
mov
sub
sbb
shll
cmp
jnp
hlt
aad
inc
mov
sub
xor
fs
je
inc
push
dec
je
insl
dec
imul
arpl
imul
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
jb
insl
inc
imul
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
push
inc
das
int
push
loopne
jb
enter
fsts
jecxz
xor
and
cmpsl
add
and
les
inc
adc
push
shl
xor
pop
adc
sub
jge
je
std
adc
mov
gs
cwtl
insb
stc
mov
and
push
cld
jmp
cmpsl
loope
icebp
lds
repnz
push
inc
fcmovnu
jae
inc
add
out
jmp
or
mov
in
aam
lret
adc
mov
call
or
ret
fistps
cmp
sbb
mov
test
lahf
mov
xor
mov
mov
inc
jecxz
and
mov
jge
cmpsl
aaa
pop
mov
jno
mov
fstpl
bound
out
mov
xchg
xor
xor
and
pushf
mov
push
inc
push
pop
mov
divl
adc
push
cmp
inc
mov
mov
lods
push
xchg
mov
and
cli
push
mov
mov
rcr
jno
out
mov
jl
inc
ja
inc
pop
dec
ss
sbb
sti
pop
inc
sbb
les
outsb
xor
lahf
jl
pushf
adc
mov
xchg
shll
addr16
pop
in
inc
pushw
sub
or
or
test
add
dec
imul
gs
jo
imul
imul
and
jno
jbe
push
in
push
inc
mov
jg
mov
iret
in
adc
mov
mov
jecxz
test
test
or
shl
pop
int
adc
sar
inc
popa
and
das
mov
cmp
mov
pop
mov
push
ret
push
dec
add
mov
dec
cmp
cmp
lock
xchg
subb
leave
das
push
push
inc
mov
jne
cmp
decb
xchg
insb
mov
dec
cmp
ret
push
or
cpuid
andb
cwtl
cltd
jno
into
popf
xlat
callw
jmp
pusha
in
popa
fdecstp
mov
cmc
pop
ss
xchg
sti
in
pushf
xor
mov
sarl
mov
andb
jmp
mov
pop
cmp
clc
stos
and
mov
arpl
sti
leave
push
push
inc
aad
xchg
ds
decb
pop
xor
add
in
or
scas
add
and
in
jmp
movsb
sbb
mov
cmp
cld
pop
jb
leave
inc
xchg
pop
ss
xor
push
sti
rcrl
xchg
add
and
scas
adc
pusha
pop
add
imul
mov
mov
cmp
repnz
mov
mov
xlat
push
clc
add
pusha
popf
movsl
mov
shll
fnsave
sahf
stc
in
and
mov
inc
pusha
push
push
inc
lods
pop
jmp
imul
decb
jo
test
sti
stos
sbbb
insl
mov
mov
mov
push
jo
xchg
add
inc
xor
push
adc
push
and
daa
inc
mov
inc
inc
jmp
cmpsb
mov
dec
xorb
jge
cs
xchg
lds
push
add
lods
cli
enter
andl
xchg
push
sti
rclb
je
xor
xchg
sub
and
mov
shlb
das
or
js
aad
sbb
sub
stos
xor
pop
cmp
fwait
xor
hlt
pop
or
add
lcall
sub
xor
das
mov
adc
push
pop
add
out
jns
push
push
inc
pop
jo
xor
xchg
jb
in
aas
cmpsb
mov
mov
xchg
adc
jno
push
sub
ljmp
mov
sbb
fs
arpl
ds
and
xchg
mov
cmp
addr16
sbb
loopne
in
cmpsl
int
outsb
adc
adc
mov
int3
pop
mov
stos
jg
or
jmp
shrl
stc
icebp
fisttpl
das
jb
in
mov
outsl
mov
punpcklwd
inc
jl
push
pop
out
jno
ljmp
jo
bound
inc
inc
imul
je
outsl
outsb
and
jno
jbe
jecxz
and
inc
cmp
aas
xchg
repnz
cmp
mov
daa
je
sub
push
mov
or
arpl
movsl
or
mov
mov
les
popf
mov
in
push
mov
xchg
lcall
mov
outsl
xchg
inc
sub
loopne
jmp
in
lds
sarb
aaa
sub
push
inc
fnstsw
fistpll
xchg
sub
adc
mov
sbb
int
mov
xor
cwtl
mov
int3
jno
jae,pn
repnz
sbb
or
in
cli
outsl
data16
ret
aaa
lret
daa
mov
push
sub
mov
aas
mov
pop
mov
cltd
sub
je
push
add
pop
sti
int
or
push
jecxz
arpl
std
lret
fdivrs
shl
jbe
xor
inc
inc
sub
scas
xchg
hlt
aas
inc
rorb
lcall
out
mov
pop
lods
xchg
push
push
pusha
mov
ljmp
lods
and
cld
cmp
mov
adc
mov
cmc
fucomp
sub
in
aaa
push
add
mov
in
fdivrl
rol
das
test
and
out
scas
lahf
cltd
and
ret
sahf
cld
test
pushl
adc
fwait
aaa
xchg
notb
fistps
lret
mov
sub
add
inc
dec
insl
push
arpl
insl
inc
imul
imul
and
jno
jbe
mov
mov
loope
scas
lds
lahf
xchg
sub
adc
insl
xchg
scas
ljmp
int
stos
mov
xor
mov
cli
xor
fiaddl
mov
or
xor
add
outsl
and
insl
add
jb
mov
add
add
loopne
icebp
lcall
outsb
ljmp
jne
push
inc
subl
add
inc
and
repnz
sti
es
sarb
mov
add
xchg
push
test
mov
add
lea
mov
addr16
leave
mov
push
ljmp
add
or
xchg
mov
mov
add
inc
inc
js
jb
gs
popa
insb
imul
and
jno
jbe
push
sbb
add
rorl
mov
mov
in
into
xor
sbb
stos
ret
fndisi(8087
xchg
test
dec
adc
mov
inc
inc
push
hlt
push
mov
rorb
loopne
and
popa
ret
cmpsb
mov
inc
dec
or
aad
enter
ficoms
add
pushf
inc
dec
xchg
push
xor
cmpsl
dec
or
jmp
bound
add
lock
mov
decb
fimuls
mov
ficoms
sbb
clc
lock
pushf
adc
fs
arpl
sub
int
pop
add
cwtl
pop
pop
mov
xchg
add
mov
jge
dec
push
sub
das
cli
mov
xchg
clc
popf
sbb
stc
cs
xchg
push
cmp
add
cmpsb
dec
lods
call
les
push
or
shll
push
mov
push
add
cld
hlt
jg
pushf
push
adc
out
mov
shll
fdivs
fisubs
cmpsl
fcompl
daa
insb
mov
cmp
ds
inc
sbb
js
stc
lods
mov
lea
mov
pop
jecxz
rcll
mov
push
xlat
stc
and
mov
inc
pusha
and
or
sahf
mov
arpl
sub
popa
push
fs
leave
hlt
orl
and
add
inc
inc
js
arpl
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
gs
gs
arpl
outsl
outsb
je
js
and
jno
jb
imul
setno
lea
jmp
jbe
cmc
dec
push
inc
ss
fistpl
dec
xchg
daa
aas
push
inc
mov
mov
push
iret
mov
ret
test
push
jns
mov
repnz
ss
or
mov
inc
je
mov
rcrb
cmp
xor
push
lock
xor
xchg
sbb
xchg
cmp
sti
push
sub
decl
addr16
add
ret
cli
out
pop
popa
or
lds
sub
dec
insb
or
mov
fldz
adc
and
lock
sub
push
into
and
jmp
scas
jmp
mov
lcall
mov
repz
adcl
or
push
adc
push
cld
add
cmp
adc
xor
jmp
roll
add
test
shll
pop
mov
sub
lds
xchg
jns
jne
mov
pop
mov
addl
sub
mov
sub
insb
push
dec
shr
push
add
adc
movsb
and
cli
push
xchg
iret
movsb
xor
out
rcl
loop
xor
ljmp
ret
scas
aam
adc
jge
clc
add
sub
push
hlt
mov
je
push
adc
ret
cmp
stos
cli
adc
mov
aad
adc
xchg
sti
push
negl
and
dec
arpl
mov
inc
and
xorl
dec
pop
dec
push
inc
stos
sub
scas
pusha
pop
lea
frstor
insl
and
cmp
sbb
in
mov
neg
cli
pop
jg
jns
or
fisttpll
lret
inc
shlb
divb
pop
inc
loopne
adc
dec
jmp
push
ljmp
fisubl
arpl
shll
xor
loop
jnp
xchg
or
lds
inc
add
xchg
daa
cmpl
fdivr
shll
loopne
mov
sbb
and
gs
sbb
fcomps
js
jbe
mov
mov
ds
push
movsl
out
ljmp
mov
mov
push
xchg
in
adc
dec
aas
subb
into
or
sub
sti
lock
psrld
cmp
ds
mov
je
mov
cmp
jge
aad
dec
jnp
fistps
dec
push
inc
mov
mov
or
arpl
adcl
pop
icebp
cwtl
cmp
mov
push
pop
jp
lret
aam
xor
inc
out
sub
out
pop
stos
ljmp
mov
mov
xchg
pop
dec
fnclex
sbb
testb
aad
icebp
adc
inc
mov
inc
lea
stos
jno
xchg
test
loop
ljmp
sbb
mov
imul
sub
sub
xlat
je
add
inc
push
push
inc
imul
imul
and
jno
jbe
lea
jne
bswap
clc
mov
pushf
sub
call
cmp
pusha
lea
jae
bt
not
mov
xadd
mov
shl
rcr
sar
mov
test
push
sub
test
jmp
add
inc
dec
insl
push
je
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
push
imul
imul
imul
and
jno
jbe
sub
mov
inc
xchg
cmp
jbe
sti
dec
stos
mov
out
mov
inc
je
subl
dec
sub
test
scas
sarb
jp
orb
stos
ret
pop
or
push
push
inc
addl
cwtl
cmpsb
add
inc
dec
insl
je
gs
imul
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
imul
insb
insb
inc
jne
arpl
jno
jbe
add
inc
dec
imul
gs
jo
imul
imul
and
jno
jbe
jmp
add
inc
push
jns
arpl
push
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
arpl
jae
imul
imul
and
jno
jbe
add
inc
push
jno
gs
imul
popa
insb
jne
inc
imul
imul
and
jno
jbe
call
mov
inc
leave
mov
inc
test
repnz
xchg
clc
lods
aam
adc
cltd
inc
inc
sub
dec
in
scas
lea
push
and
lods
or
add
add
rcrb
ret
fdiv
mov
cmpsl
and
mov
mov
mov
xor
sbb
in
push
cmp
xchg
std
mov
out
into
and
and
pop
xor
leave
xor
inc
cmpsl
int
or
dec
scas
int3
in
mov
dec
push
insb
adc
pop
call
add
mov
dec
jmp
mov
jo
jb
rorl
negb
dec
aaa
stos
sub
jno
shrl
and
sub
pop
movsl
push
cwtl
adcb
cmc
xchg
pop
je
hlt
fistpll
mov
adc
sub
dec
outsb
loope
push
inc
jp
icebp
push
xor
mov
lds
in
mov
dec
jp
add
mov
punpckhdq
hlt
adc
rol
push
je
adc
repnz
adc
xchg
or
inc
push
add
xchg
jae
mov
inc
mov
pushf
insl
stos
pushf
mov
push
cmp
aas
jmp
clc
arpl
rolw
push
push
fcompl
ds
dec
jp
xchg
push
pop
mov
js
jg
in
add
loopne
scas
xchg
scas
lret
testb
mov
in
jbe
inc
push
inc
notl
sahf
dec
push
push
jp
mov
inc
mov
jge
xchg
jae
mov
pop
repnz
shll
loop
addr16
clc
ret
inc
in
shrd
push
mov
fwait
inc
aam
or
rcll
pusha
sbb
and
aam
lret
adc
inc
xlat
orl
mov
lds
fistps
jns
ss
lret
les
fbstp
and
fsubrl
pop
sbb
and
adc
aam
scas
jns
stos
inc
test
outsb
push
fs
repnz
cmp
jmp
sbb
js
mov
stos
jecxz
insl
inc
arpl
jb
jb
inc
roll
dec
aaa
and
leave
dec
cltd
data16
out
xor
jb
test
out
mov
inc
jmp
dec
repz
pushf
mov
imul
inc
sbb
aam
xchg
jb
mov
mov
pop
sbb
fbstp
xorb
adc
mov
and
imul
fidivrs
lods
push
adc
mov
daa
out
jp
iret
or
lods
push
xor
jns
clc
mov
or
adc
out
push
out
in
push
mov
lods
scas
mov
lea
dec
ds
lds
lds
cmp
dec
cltd
inc
test
push
dec
xor
mov
mov
inc
sub
shll
repz
test
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
je
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
jo
xor
popa
je
inc
push
dec
je
insl
imul
push
inc
jbe
aas
adc
test
sbb
jno
push
int3
daa
test
or
add
mov
sbb
sahf
insl
scas
jne
or
scas
add
shlb
mov
andl
loopne
mov
clc
push
mov
xchg
dec
mov
jmp
adc
pop
sub
in
stos
add
loop
in
sub
or
fmul
pop
in
testl
and
push
pop
xor
jnp
sub
xor
add
dec
insl
xchg
enter
mov
std
fisttps
sbbl
fs
jo
lea
hlt
fidivs
or
mov
mov
enter
inc
icebp
mov
dec
fistpl
lods
leave
pop
cltd
xor
xrelease
dec
data16
sub
in
fdivs
sbb
inc
xor
cwtl
ds
mov
dec
or
lret
adcb
jno
orb
sbb
sbb
xchg
pop
xlat
ret
or
xchg
aaa
pop
inc
scas
mov
andl
test
mov
out
leave
divb
dec
and
pop
insl
stos
pop
xchg
jecxz
pop
xchg
icebp
lret
xchg
cmp
xchg
ds
icebp
dec
mov
test
aaa
dec
xor
es
leave
outsl
les
jns
notl
pop
stc
push
jne
pop
fisttpl
in
push
mov
call
push
jne
imul
addr16
dec
outsb
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
add
add
popa
jae
jne
imul
imul
imul
jbe
add
inc
dec
popa
jo
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
inc
imul
je
inc
gs
imul
gs
imul
imul
sub
daa
inc
add
inc
and
in
lret
out
push
push
pushl
popl
movb
pushl
ret
pushf
cmp
pushl
jmp
add
inc
dec
insl
push
insl
popa
imul
outsb
popa
insb
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
inc
imul
imul
and
jno
jbe
arpl
js
inc
imul
inc
aaa
bound
add
add
jns
je
insl
inc
inc
inc
imul
inc
jb
popa
jns
jno
jb
jbe
xor
add
inc
jp
cld
aad
adc
aas
mov
inc
sub
int3
jle
stos
jg
imulb
jmp
movsl
shrb
inc
std
cmpsl
or
push
repnz
pop
ss
sti
ret
inc
dec
fs
push
cli
stc
adc
adc
shrb
dec
outsl
add
inc
lahf
cs
je
and
mov
je
pop
jp
or
pop
cltd
mov
pop
inc
push
inc
std
pop
sbb
fidivs
jb
imul
and
push
enter
inc
out
jmp
scas
int
ret
test
cs
inc
imul
imul
in
jb
push
adc
mov
mov
sbb
sub
sahf
mov
sub
lock
push
idivb
xchg
push
lock
jnp
mov
xor
ror
insb
pop
repnz
jb
ds
inc
jle
call
push
add
fcomi
or
insb
adc
mov
int
sub
sub
jg
push
mov
int
xor
fisubl
push
jle
lods
out
psraw
nop
ret
sub
insl
lea
movl
sub
fnstsw
pop
or
mov
les
sub
sub
mov
mov
imul
in
add
xor
orb
mov
mov
dec
insl
push
arpl
jb
inc
imul
je
outsl
outsb
and
jno
jbe
sub
mov
push
inc
ret
and
test
or
xor
xor
ret
cmp
into
mov
clc
pop
aaa
sbb
mov
inc
and
inc
out
pop
insl
inc
rcrb
in
fistpl
push
fnsave
ljmp
call
out
xor
ffreep
outsl
outsl
inc
mov
stc
xchg
aaa
fcoml
mov
inc
js
add
cmp
push
sti
lods
sahf
mov
imul
fidivs
xchg
sub
leave
pushf
mov
xor
sub
pushf
jnp
inc
aad
icebp
mov
mov
ljmp
adc
shlb
sbb
and
cltd
mov
xchg
sbb
das
mov
out
inc
lods
loopne
mov
inc
jge
mov
jp
push
inc
fnstsw
sbb
pop
jl
or
sbb
push
fs
adc
pushf
lods
js
clc
push
xor
jmp
xchg
cli
inc
push
adc
stc
negl
cmp
movsl
sub
push
pop
pop
lret
stc
sahf
sti
wbinvd
add
daa
sahf
outsl
in
sti
nop
test
mov
mov
and
outsb
jp
mov
cltd
mov
adc
sbb
popa
mov
adc
call
adc
jns
bnd
cmp
add
inc
push
jns
arpl
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
inc
imul
je
inc
gs
je
insl
and
jno
imul
js
js
gs
imul
imul
and
jno
jbe
call
fs
cmp
imul
pop
mov
mov
flds
fwait
mov
lcall
cmp
mov
mov
std
jecxz
or
xor
mov
inc
xor
xchg
mov
and
lret
sbb
push
test
inc
repz
xor
inc
arpl
cld
xchg
jmp
lock
cmp
nop
popf
dec
fadd
pop
dec
pop
xor
mov
cld
cmp
inc
aas
cmp
mov
push
xor
and
inc
int3
je
lahf
inc
inc
repz
and
pop
jae
fnsave
fidivl
call
js
adc
ljmp
push
pop
repz
jne
push
cmp
mov
dec
cmpsl
nop
ljmp
dec
fucomp
push
cmp
jbe
addb
xor
je
jb
mov
lock
ja
sbb
rcl
or
push
inc
mov
popf
hlt
push
repz
add
pop
sar
inc
repz
mov
mov
dec
in
or
mov
ss
mov
cmpsb
jg
xchg
inc
cltd
sbb
ret
pop
mov
cmp
pop
cli
scas
lret
into
jns
pop
jnp
cs
aas
sbb
xor
jmp
jmp
dec
aaa
add
in
cmc
dec
xchg
dec
in
push
in
xchg
jnp
cmp
loop
sbb
add
or
sub
out
fildl
add
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
inc
outsl
arpl
gs
outsl
insb
jne
outsb
inc
bound
insb
jne
gs
outsb
fs
jno
jb
add
add
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
push
jno
jbe
add
inc
push
jne
je
gs
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
jb
addr16
jae
jne
imul
insb
imul
and
jno
jbe
bt
clc
or
ja
push
lea
je
push
movsbw
push
mov
movsbl
lea
mov
pusha
call
add
dec
outsl
arpl
inc
jb
add
add
fs
je
inc
push
dec
je
insl
dec
imul
push
jne
inc
outsl
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
inc
sbb
cmp
inc
push
sarl
std
push
xor
push
cli
int3
pushl
stos
adcb
sub
or
inc
xorb
push
stc
adc
push
out
sub
pop
xchg
gs
inc
xor
notl
mov
ljmp
add
lcall
dec
fisttpll
inc
jno
fildll
push
jge
jae
mov
movsl
fs
and
inc
mov
dec
out
jecxz
out
xchg
jg
or
inc
fdivs
popa
imulb
pop
cmpsl
lret
or
movsl
cmp
adc
sub
gs
adc
das
push
mov
xor
jbe
gs
push
pop
mov
idivb
fcompl
mov
xchg
xor
addr16
insl
in
sub
bndldx
scas
mov
lret
sbb
cmp
imul
cltd
mov
lret
sub
orl
test
pushf
adc
jo
sbb
fdivr
xor
push
dec
in
inc
test
lds
adc
dec
fld
scas
sbb
mov
shl
cltd
mov
mov
fsubrl
xchg
les
adc
test
mov
mov
arpl
neg
leave
xchg
mov
les
leave
pop
cld
das
pusha
jns
xchg
cmp
in
lds
mov
dec
jmp
cmpsb
leave
or
fldcw
out
lea
push
loope
add
jns
je
insl
inc
inc
push
jne
inc
jb
outsl
jb
jno
jb
arpl
add
inc
push
jne
insl
gs
outsl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
push
fs
insb
and
jno
jbe
add
inc
dec
insl
push
arpl
je
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
push
jb
gs
jno
jbe
fs
fs
inc
aaa
bound
add
add
popa
jb
popa
outsb
je
inc
inc
dec
insb
gs
popa
jb
jb
insl
dec
push
je
and
jno
jb
push
push
popa
jb
popa
je
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
bt
pushl
popl
clc
cmp
cmp
pushf
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
jne
jb
outsb
je
outsl
fs
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
gs
jb
je
inc
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
jbe
js
je
arpl
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jp
popa
bound
inc
imul
je
outsl
outsb
and
jno
jbe
jmp
inc
push
jbe
push
inc
xchg
jecxz
in
lods
iret
sub
std
and
jno
icebp
or
fisttps
cmp
cmp
std
imul
inc
inc
and
push
adc
out
test
and
dec
sub
push
lahf
mov
rcr
push
dec
or
mov
jg
pop
int
pop
ss
inc
fcmovu
loop
fwait
inc
jne
xor
pop
arpl
push
sub
inc
mov
jecxz
into
push
aas
shrb
adc
or
fcmovu
cwtl
fisubl
out
or
or
dec
cltd
or
ds
lds
sarb
mov
stc
test
jp
mov
mov
movsl
into
fisttps
imul
cmp
js
addr16
icebp
cmp
imul
or
pushf
test
or
shll
es
in
rcll
push
inc
addr16
inc
inc
xchg
lock
jle
adc
mov
test
pusha
int
xor
mov
inc
fcmovu
es
shrb
lret
in
or
add
pushf
arpl
jle
std
dec
aam
push
lret
loope
fwait
mov
push
aaa
jl
inc
pop
jle
stos
add
test
push
mov
jl
dec
aam
xor
sbb
sbb
subl
and
imul
push
or
shlb
inc
jecxz
lods
sub
or
scas
sbb
push
incl
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
gs
push
gs
arpl
and
jno
jo
ss
js
insb
inc
push
fs
jb
gs
imul
xor
je
ss
jp
sub
jae
jmp
mov
jo
dec
daa
pop
in
mov
jle
adc
adc
or
cmp
and
xchg
shl
ret
inc
pop
aaa
fcomps
adc
rorb
or
sbb
mov
push
push
or
outsb
add
addr16
jl
fs
in
pusha
and
mov
test
rcll
enter
andb
jo
ficompl
loop
push
call
pop
push
outsl
add
jae
dec
adc
dec
mov
daa
push
movsb
lret
mov
scas
mov
sbb
sbb
leave
mov
shrb
sbb
jl
fsubp
divb
mov
insl
cs
jae
and
hlt
fcomi
cmpsl
or
mov
shlb
repz
mov
push
popf
pop
pop
sbb
arpl
ret
xor
inc
jne
adc
push
cmp
mov
mov
dec
in
cs
push
jno
adcl
add
xor
iret
push
sub
insb
inc
out
std
decl
mov
div
leave
daa
or
cmp
xor
adc
outsl
movsb
dec
nop
mov
jbe
inc
outsl
jp
pop
repnz
push
leave
lock
repnz
movsl
pop
mov
sbb
loop
mov
adc
push
lcall
lock
fcomi
pop
shrb
icebp
xchg
clc
xchg
hlt
aam
fnsave
cmp
lock
popf
pop
sbb
out
sbb
fs
je
inc
push
dec
je
insl
inc
inc
gs
imul
jne
and
jno
imul
xor
inc
icebp
movsb
test
jbe
frstor
or
ss
loopne
ja
bswap
xchg
mov
sbbb
notb
in
dec
mov
pop
xlat
push
daa
mov
inc
adc
mov
cmp
stc
int3
outsl
das
add
jbe
or
enter
negl
or
outsl
mov
mov
or
or
in
add
xchg
sbb
in
push
sub
cmp
lea
es
pop
add
push
mov
inc
mov
popa
pop
xchg
adc
jg
lea
and
xchg
xor
inc
out
imul
xchg
xorl
xor
loope
ret
xor
in
jmp
ret
cmp
dec
pop
daa
jmp
dec
add
dec
jb
xchg
outsl
mov
std
cmc
xor
and
cmp
test
sbb
pop
mov
rcll
rcll
push
dec
mov
ss
mov
lds
mov
fistpl
adc
or
stos
cmp
lret
jo
arpl
inc
loopne
imul
into
mov
inc
mov
aas
pusha
jmp
add
inc
dec
jbe
jo
jae
outsl
jb
addr16
imul
imul
and
jno
jbe
jae,pn
xor
inc
scas
mov
fdiv
inc
push
andl
stos
lock
sbb
cld
insb
pop
mov
jnp
js
cmp
or
mov
ss
int
out
shlb
inc
jmp
imul
out
lahf
fdivp
dec
in
mov
mov
mov
loop
pcmpeqb
push
jb
xchg
xchg
int
pop
ret
dec
mov
inc
xor
fdivl
push
shr
decl
jg
mov
out
fstp
xor
push
mov
not
jbe
adc
mov
push
or
adc
and
add
inc
cmp
enter
in
repz
and
shll
cs
std
xor
push
test
mov
out
das
add
sub
popa
mov
mov
lods
fcomps
xor
inc
outsb
add
push
call
test
pop
push
mov
push
insl
sahf
test
or
xor
leave
sub
insl
dec
out
pop
imul
mov
cmp
hlt
push
dec
in
sub
cmc
xchg
hlt
xor
mov
cmc
push
mov
mov
mov
inc
shld
stc
lret
mov
js
jnp
sub
push
enter
xor
mull
sbb
jbe
test
sahf
jge
mov
aam
dec
or
int3
dec
test
add
inc
dec
insl
push
popa
jo
jae
fs
imul
imul
and
jno
jbe
xor
das
xor
inc
jg
mov
xor
mov
inc
cmp
jecxz
mov
notb
jnp
cmpsb
push
cltd
or
push
jl
sub
ds
inc
and
hlt
imul
insl
add
mov
pop
sbb
icebp
pop
xlat
insl
bound
jb
aas
sarl
int3
lds
jmp
push
jae
push
inc
subl
add
and
loop
dec
mov
jp
hlt
icebp
pop
or
arpl
dec
adc
loop
and
pop
cmp
adc
xchg
pop
pop
lock
call
mov
sub
mov
mov
shr
out
push
nop
clc
sub
lds
mov
adc
hlt
sbb
cwtl
int3
rcr
test
adc
test
lods
mov
cmpsb
lret
imul
jmp
sbb
push
scas
mov
ret
icebp
pop
push
cltd
mov
jp
cmovnp
ja
push
pop
mov
sbb
call
push
mov
outsb
inc
in
push
jp
sub
and
mov
jg
lods
inc
jae
fisubs
loop
cs
inc
cmpsl
pushf
mov
xchg
jae
adc
mov
mov
sub
sbb
cwtl
mov
notb
js
cmp
xor
rcr
jp
fwait
mov
ret
call
lea
je
pusha
mov
call
add
inc
dec
insl
jp
gs
popa
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
mov
inc
push
in
mov
or
xor
and
scas
sub
mov
fimull
adc
aad
cmpsl
or
out
lcall
test
stos
aam
ret
daa
adc
test
loope
mov
int
mov
iret
xor
or
movsl
test
inc
frstor
lret
push
sarb
and
cs
inc
mov
push
sahf
es
lahf
mov
and
jmp
mov
repz
fsubl
jmp
xchg
insl
pop
cli
out
popa
or
pop
rolb
out
inc
xor
out
subl
mov
loop
subb
enter
and
pop
addr16
push
hlt
setl
sarl
lahf
lcall
out
add
cmp
dec
fldt
daa
lea
out
push
mov
jge
and
jne
adc
and
add
add
into
out
into
addr16
insb
daa
or
je
and
sbb
jg
push
lods
mov
cmp
insb
add
outsb
std
mov
sub
xchg
negl
movsb
inc
and
rcr
stos
adc
cmpsl
mov
leave
inc
stc
push
ficompl
push
leave
pop
shrl
out
pop
std
aam
adc
jns
repz
cmp
add
inc
push
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
bt
clc
pushf
cmp
movw
pusha
pusha
lea
jae
shr
bsr
ror
btc
mov
pushf
lea
bsf
shr
mov
sar
rcr
movsbw
bts
mov
mov
pushf
xor
mov
test
repnz
pushl
jmp
add
inc
dec
jo
outsb
push
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
outsl
jb
popa
je
inc
imul
imul
and
jno
jbe
add
inc
push
jns
arpl
push
inc
imul
imul
and
jno
jbe
call
add
inc
dec
arpl
outsb
arpl
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
insb
popa
outsb
addr16
push
gs
fs
popa
outsb
addr16
je
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
outsl
add
add
jbe
popa
je
jae
jne
arpl
outsb
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
insl
popa
arpl
bound
outsl
js
inc
imul
je
outsl
outsb
and
jno
jbe
in
lock
push
inc
roll
mov
mov
cmp
mov
sbb
push
sarl
pushf
jl
cmp
cmp
xchg
or
cmp
xchg
ffree
shlb
cltd
dec
mov
ds
push
popf
les
mov
out
subl
sbb
shlb
pop
mov
jae
fisttpll
enter
pushf
xor
cmp
sub
inc
dec
in
out
dec
mov
xchg
and
xor
pop
pop
add
fistl
add
sarl
adc
xor
scas
push
jbe
js
into
imulb
mov
sbb
lods
jnp
sti
xchg
out
mov
xchg
cli
or
enter
cs
fcmovnu
fiadds
cmp
pop
jnp
dec
subb
xor
jl
repz
jo
cmpsl
stos
hlt
icebp
jmp
pop
outsl
dec
xor
inc
iret
or
test
loope
out
into
test
scas
jb
xor
xchg
sbb
cmp
icebp
popf
out
stos
push
dec
and
rorb
test
or
into
jecxz
aad
repnz
pushf
jbe
inc
fisttpl
jp
shr
popa
aam
cli
leave
loopne
and
add
lea
xchg
hlt
jo
cli
fidivs
cltd
mov
push
inc
or
fcmovnu
das
inc
xlat
data16
xor
rcrl
out
lock
loopne
push
movsl
hlt
icebp
out
mov
inc
js
je
jb
arpl
jae
add
inc
dec
insl
push
arpl
fs
inc
imul
je
outsl
outsb
and
jno
jbe
inc
push
lea
jmp
add
inc
push
jns
je
insl
inc
push
outsb
jb
imul
fs
gs
jno
jo
aaa
push
jns
je
insl
inc
push
dec
imul
gs
repz
push
inc
sub
enter
lea
scas
cmp
fwait
cli
shl
lcall
jle
push
mov
notl
or
pop
pop
in
dec
pop
int
ret
inc
inc
dec
in
jae
adc
add
lods
pop
bound
incb
aad
popa
pop
inc
js
mov
ss
jbe
cmp
lds
fnstenv
push
sub
inc
outsb
lds
out
sub
stos
ret
or
addr16
scas
pop
call
push
inc
dec
addl
ds
cmc
push
mov
rcrb
jno
aas
lret
filds
cld
ret
mov
jnp
enter
xchg
cli
insl
lea
inc
insl
leave
incb
nop
inc
sti
loopne
sub
mov
icebp
dec
dec
in
jo
cmp
sbb
ljmp
int
mov
inc
andb
sub
cltd
mov
xor
lock
xor
mov
and
mov
push
cli
inc
fldenv
sbb
jne
cmp
and
lahf
nop
xor
jb
imul
out
in
jo
lds
inc
push
repnz
rcr
subl
rcll
repnz
adc
out
scas
push
mov
sub
xchg
mov
int
push
xor
sbb
push
jg
stos
int3
mov
push
inc
dec
insl
push
jne
outsb
je
inc
imul
imul
and
jno
jbe
add
inc
push
jne
insb
imul
imul
imul
and
jno
jbe
movl
pushf
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
outsb
push
gs
outsl
outsb
imul
jb
jns
jo
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
and
add
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
gs
popa
outsb
addr16
imul
jbe
dec
xchg
aaa
daa
push
inc
inc
lods
lea
jecxz
jbe
jns
jecxz
push
ljmp
int
jg
js
mov
or
je
imul
sub
ret
rcrb
test
hlt
imul
test
stos
mov
in
ss
mov
rorb
sbb
inc
jnp
test
dec
pusha
or
mov
lds
neg
sub
inc
mov
jl
xchg
add
es
scas
mov
push
sub
add
push
scas
pop
insl
or
test
daa
repz
outsl
jle
mov
lea
ss
pmulhuw
out
and
adc
sbb
push
insl
adc
xchg
jle
insl
inc
pop
xor
jmp
pop
jns
mov
push
adc
adc
and
fisubs
cld
pop
out
es
inc
movsb
mov
or
inc
repz
pusha
inc
les
scas
mov
mov
cmp
inc
jecxz
rcrl
cwtl
jp
jno
mov
pop
cwtl
pop
imul
cmpsb
dec
push
cmp
ljmp
sar
pop
inc
push
ficompl
addr16
mov
cli
pop
leave
sahf
insl
lock
ja
mov
jge
dec
addr16
jmp
aaa
jge
jge
or
or
xor
or
jb
push
cmp
andl
dec
in
lds
popf
jle
add
xchg
bswap
pushf
lea
pushf
pusha
call
pusha
clc
cmp
push
call
add
inc
dec
jbe
je
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
je
outsl
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
mov
lea
jb
jmp
jbe,pn
and
xor
cmp
mov
fucom
fcmovbe
test
roll
clc
xlat
aas
pop
xor
mov
popa
mov
inc
lahf
subb
shlb
int3
in
insl
mov
imul
lret
loop
loopne
hlt
dec
movsb
gs
cmp
adc
mov
aam
insl
in
adcl
mov
xor
imul
fsubp
sbb
mov
stos
adc
in
loope
mov
in
test
mov
cmpsl
fstl
mov
xor
mull
outsb
fildll
jne
jecxz
hlt
imul
scas
push
inc
xchg
cmpsb
daa
xlat
push
popf
and
divb
cmp
sarb
cs
insb
mov
subb
pop
xor
ljmp
mov
cmp
inc
jb
sbb
mov
adc
or
lcall
dec
das
or
inc
cmpsb
add
add
add
sub
ljmp
stc
loopne
add
adc
call
mov
mov
mov
jnp
pop
mov
add
out
aaa
jg
fucom
add
jae
xchg
and
sbb
ds
pop
push
gs
cmc
xor
mov
out
lods
mov
enter
test
pop
out
aas
pop
out
lea
jns
pusha
pushl
lea
ja
shl
test
or
sub
btc
add
neg
test
add
mov
and
cmc
seto
shr
mov
push
mov
repnz
call
test
movb
mov
lea
je
bt
sub
bt
jmp
arpl
imul
inc
aaa
bound
add
add
popa
jb
popa
outsb
je
inc
inc
push
popa
jb
insb
jb
jno
jb
cmp
jb
popa
je
add
add
js
jne
je
outsb
jae
imul
imul
and
jno
jbe
add
inc
inc
outsl
insl
jae
jb
inc
imul
imul
and
jno
jbe
add
inc
inc
js
outsl
outsl
imul
imul
popa
insb
imul
and
jno
jbe
pop
out
push
inc
popa
andb
jl
add
or
inc
scas
pop
push
mov
cvtps2pi
mov
lods
test
ret
shlb
inc
xchg
cmp
pushf
aad
shlb
test
pop
pop
inc
ret
pusha
in
cmpsl
mov
push
insb
pop
call
testb
push
mov
scas
pop
scas
in
add
xchg
cmc
js
mov
insl
sbb
jmp
push
inc
lods
daa
push
lock
cmpsb
hlt
or
lds
jmp
scas
inc
push
call
andl
or
mov
adc
and
daa
popa
ret
notl
adcb
leave
ja
xchg
lea
xor
mov
push
stos
mov
cld
dec
mov
add
aas
mov
lods
inc
in
xor
cmp
ja
cmp
out
js
mov
arpl
mov
and
inc
lods
or
add
leave
les
test
lahf
inc
fstpt
and
ret
in
test
jecxz
insb
les
jg
lea
insl
mov
lret
jbe
push
sbbl
jmp
xor
repnz
aam
out
rolb
dec
push
in
daa
sub
fidivs
mov
in
mov
cmp
jb
mov
mov
outsl
pop
jmp
inc
sub
mov
jns
mov
fnsave
mov
repz
inc
dec
jbe
imul
inc
imul
imul
and
jno
jbe
add
inc
inc
js
imul
je
jb
imul
outsb
popa
insb
imul
and
jno
jbe
add
inc
inc
imul
je
popa
insb
imul
and
jno
jbe
add
inc
dec
insl
popa
imul
jae
imul
imul
and
jno
jbe
add
inc
dec
arpl
je
je
insl
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
jb
outsb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
insl
popa
jae
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
popa
jo
inc
imul
je
outsl
outsb
and
jno
jbe
jmp
add
inc
push
js
push
inc
imul
je
outsl
outsb
and
jno
jbe
fwait
or
dec
in
movsb
ret
in
push
mov
pop
xchg
or
sbb
mov
jae
or
cmp
xlat
dec
push
mov
fs
xchg
sub
cmc
cmp
int
sub
testb
imul
adc
xor
jae
repz
and
or
mov
cmpsb
sbb
or
sub
inc
popf
es
jecxz
mov
shlb
in
dec
ljmp
or
popf
jp
xchg
loope
rcl
in
leave
mov
push
lahf
mov
notl
shll
jne
pop
mov
fwait
push
movsl
sbb
or
inc
push
int3
addr16
das
lahf
jg
iret
push
in
je
pop
mov
push
test
fidivrs
fbstp
arpl
dec
add
mov
add
adc
test
cltd
xor
mov
cmpsl
cmp
mov
filds
mov
repnz
push
data16
xor
and
hlt
mov
jl
cli
push
mov
repz
push
mov
push
inc
jo
mov
stc
inc
inc
add
mov
call
into
xor
cmc
fnstenv
pop
jnp
loop
xchg
out
mov
xor
xor
xchg
test
fucom
jmp
daa
fadds
stos
add
add
dec
inc
pop
xchg
out
jmp
inc
xchg
dec
imul
push
ret
dec
lea
cmp
lock
loope
push
in
and
lahf
je
lea
das
add
xchg
int
popf
lock
adc
or
inc
loopne
movsl
or
andb
xchg
inc
add
inc
dec
jae
insl
insb
inc
imul
imul
and
jno
jbe
cmp
in
sbb
inc
cmp
sbb
xor
lahf
dec
mov
adc
mov
mov
xchg
jle
mov
push
das
test
inc
or
shlb
shr
xchg
xchg
add
imul
negl
dec
cli
lahf
orl
dec
das
lods
fsubs
les
and
xor
and
mov
pop
inc
inc
mov
in
sbb
cmp
inc
scas
jmp
fsubs
fnsave
cmp
dec
es
loopne
in
jmp
push
xchg
and
outsb
jae
adc
push
sub
pop
xchg
add
inc
cmp
dec
shr
push
jg
popf
aad
jp
out
stc
xor
inc
xchg
jl
and
push
pop
ja
es
xchg
push
pop
inc
sahf
sahf
movsb
repnz
mov
push
xor
sbb
add
jno
in
int3
sbb
sbb
mov
je
aas
subb
or
lods
fsubs
mov
xchg
jae
cmpsl
push
push
mov
xor
push
jns
mov
leave
push
xor
push
jnp
inc
inc
adc
mov
out
imul
pusha
and
repz
daa
aad
mov
ljmp
incb
or
loopne
xchg
andl
inc
adc
xor
das
push
stc
scas
inc
sbb
inc
outsb
jnp
test
push
movsl
dec
insb
subb
out
add
inc
jmp
adc
scas
push
pushf
lea
jne
jmp
add
inc
inc
insb
popa
jae
gs
push
imul
popa
jae
and
jno
jo
aaa
push
jns
je
insl
inc
push
dec
gs
inc
insb
popa
jae
add
sbb
add
jmp
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
gs
outsl
arpl
gs
outsl
outsb
je
outsl
insb
and
jno
jo
xor
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
add
add
fs
je
inc
push
dec
je
insl
dec
imul
push
jb
je
inc
outsl
jne
je
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
test
scas
movsl
add
add
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
and
arpl
jno
jb
add
add
js
insb
inc
push
fs
jb
gs
imul
inc
push
gs
popa
je
and
jno
jo
add
push
jae
push
inc
subl
dec
movsl
dec
sub
and
push
inc
dec
sbb
stc
aam
cmp
mov
ss
jl
push
xor
sbb
push
pop
jo
add
dec
sub
pusha
or
xor
cwtl
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
outsl
fs
jno
jb
outsl
add
pushf
pushf
mov
movb
mov
jmp
add
inc
inc
popa
je
jne
imul
insb
imul
and
jno
jbe
lea
jmp
sub
pusha
bsr
test
lea
sub
bt
push
bt
bt
sub
bt
pushf
pusha
pushl
popl
mov
pusha
cmp
lea
pusha
pushf
pushl
push
lea
ja
stc
inc
sub
shrd
add
movsbl
test
mov
pushf
and
rcr
inc
mov
pusha
repnz
lea
jae
push
pusha
pusha
lea
jne
movsbw
call
add
inc
push
jae
insb
arpl
je
inc
imul
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
push
gs
jne
jb
outsb
je
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
dec
insl
push
push
imul
imul
and
jno
jbe
subb
sbb
inc
pop
mov
cmp
push
jmp
adc
loopne
sub
mov
out
mov
or
test
outsb
mov
hlt
aam
rcrl
repz
ret
imul
mov
dec
das
mov
rcrb
jne
adc
add
xchg
jnp
cmp
daa
loope
mov
aad
xor
test
mov
xchg
insl
ficoml
out
test
subl
pop
icebp
es
lds
test
outsl
xchg
incl
add
popa
jb
popa
outsb
je
inc
inc
push
popa
jb
fs
gs
jno
jb
push
push
popa
jb
popa
je
add
add
fs
je
inc
push
dec
je
insl
inc
push
popa
jbe
push
outsl
inc
push
push
and
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
add
insl
popa
imul
popa
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
arpl
outsb
and
jno
jo
xor
popa
jae
gs
push
inc
popa
jae
arpl
je
outsl
outsb
add
mov
push
inc
cwtl
repnz
jge
testl
jne
mov
xchg
gs
push
or
adc
pop
aad
pushf
cli
or
jg
or
and
ret
shlb
dec
push
loope
cmpb
xor
cld
sbb
push
repz
push
pop
add
xor
shlb
jecxz
mov
pop
cmp
dec
jge
pop
lds
push
inc
xchg
add
dec
push
aaa
enter
push
xor
pusha
or
dec
add
sbb
cmp
cmp
xchg
jle
and
and
js
sub
cli
cltd
and
out
dec
mov
andl
loope
ds
daa
faddl
fildll
sub
sbb
popf
scas
adc
xchg
mov
xchg
mov
xchg
jne
dec
pop
sbb
shll
mov
test
push
inc
and
and
out
loopne
mov
and
xor
xchg
jl
mov
loopne
inc
ljmp
sbb
loope
mov
mov
sbb
ss
mov
pop
add
adc
sbb
and
pop
jmp
cmpsl
xor
daa
sub
jns
pop
hlt
stos
add
mov
andb
in
cli
fsubrl
dec
pop
aam
xor
rorb
xchg
mov
push
je
lods
jb
dec
in
xor
add
push
push
inc
and
and
jl
pop
fldenv
or
sbb
adc
addr16
int
jp
sbb
jg
xor
mov
mov
mov
dec
jbe
mov
shrl
sahf
aaa
push
xchg
adc
jnp
cmpl
dec
lods
or
push
out
ret
in
rorl
lcall
push
inc
adc
cli
shll
icebp
inc
mov
add
fwait
sbb
sub
or
mov
mov
add
inc
je
mov
shl
int3
sbbb
inc
sub
addb
pusha
add
imul
mov
sbb
ret
xor
ds
movsl
add
out
dec
or
cmp
mov
push
inc
rolb
or
adc
imul
cmp
jg
jmp
shll
out
ds
dec
movsb
inc
stos
mov
or
iret
inc
sub
add
push
mov
jnp
cmpsl
arpl
inc
fnsave
outsb
inc
jo
pop
aaa
cld
aad
inc
decb
xor
gs
pop
test
jnp
pop
inc
push
jp
pop
test
outsl
mov
or
dec
in
xchg
aam
ds
pop
dec
pop
adc
cmp
cmp
mov
mov
jp
push
sub
pop
mov
test
xor
pop
es
pop
cmp
add
lods
jb
into
and
or
test
ret
ljmp
cmp
loop
inc
mov
mov
cmc
dec
test
cmp
lret
inc
out
or
fists
or
aad
fnstenv
pop
mov
gs
cli
in
lods
pop
inc
rclb
loope
in
icebp
sahf
icebp
adc
xchg
aaa
mov
sub
or
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
je
and
jno
jo
ss
fs
je
inc
push
dec
je
insl
dec
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
outsl
imul
jne
je
popa
arpl
popa
jb
imul
imul
and
jno
jbe
add
dec
outsl
popa
fs
imul
add
add
jbe
js
outsl
outsb
je
outsl
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
inc
jb
gs
bound
and
jno
jbe
arpl
imul
inc
dec
inc
aaa
bound
add
add
jbe
jb
addr16
jae
jne
imul
imul
imul
jbe
add
inc
dec
jbe
js
outsl
jb
jae
imul
imul
and
jno
jbe
add
inc
dec
jbe
jo
outsl
jb
jne
imul
imul
imul
jbe
add
inc
inc
arpl
imul
je
popa
insb
imul
and
jno
jbe
pushf
call
add
inc
dec
jbe
insb
jbe
jb
imul
imul
and
jno
jbe
add
inc
dec
arpl
gs
insb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
jb
popa
je
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
insl
popa
jae
gs
imul
imul
and
jno
jbe
add
inc
push
imul
outsl
jb
imul
imul
and
jno
jbe
in
or
push
inc
sbb
mov
mov
cmp
insb
sub
cmpsb
xor
push
mov
mov
xor
pop
aaa
pop
xor
push
sbb
push
les
fs
jb
lahf
ret
mov
xor
mov
xchg
push
jne
add
loop
js
mov
dec
stos
int
lea
aas
fs
ss
push
stos
or
mov
dec
add
shll
scas
mov
pop
aas
or
inc
ret
jmp
out
mov
dec
loop
sbb
pop
subl
data16
inc
mov
sarl
repnz
or
xchg
cli
xchg
cmc
rol
inc
xchg
dec
out
mov
imul
push
ret
push
push
int
out
mov
sahf
xor
mov
push
stos
dec
and
add
sub
mov
push
inc
push
insl
int
lea
stos
inc
imul
test
push
int
sbb
mull
fstps
imul
jae
push
push
sbb
into
or
shr
cwtl
adcb
pushf
mov
cmp
popf
xor
loope
cld
dec
imull
testb
lods
add
fistl
imul
lds
enter
movsl
push
or
dec
push
jne
push
inc
sub
inc
cmpsb
imul
adc
insb
sbb
movsb
jnp
popf
mov
lea
daa
mov
mov
cmp
and
mov
outsb
inc
jmp
lret
cmp
sbb
jmp
cmp
pop
fldt
popa
mov
fnsave
and
mov
addl
decl
fbstp
mov
movsb
xor
add
push
daa
add
fcmovnb
cld
and
xchg
sub
jecxz
sub
test
gs
inc
popf
mov
add
outsl
jo
outsb
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jne
imul
outsb
gs
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
jo
jne
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
push
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
inc
jae
insb
popa
jae
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
aaa
push
jns
je
insl
inc
push
dec
gs
inc
insb
popa
jae
add
xor
movl
pushf
pushl
pushf
lea
jmp
pusha
push
lea
ja
cmc
test
sub
btc
neg
shld
add
cmp
rcl
call
test
nopl
ret
outsb
add
inc
cmc
adc
lock
loopne
or
mov
mov
xchg
imul
es
or
insb
test
pop
test
js
add
lock
repnz
add
outsl
add
mov
out
xchg
cli
call
lret
scas
mov
lret
pop
data16
adc
sub
push
dec
dec
lcall
test
pop
jne
inc
out
push
cmp
cmc
cmp
mov
pop
inc
test
pusha
stc
xchg
mov
fdivl
aad
outsl
cmp
and
sub
sbb
aas
xchg
pop
stos
sub
xchg
sti
push
push
pop
mov
int3
jbe
pop
add
push
inc
or
or
dec
jo
and
mov
sub
jl
int3
data16
movsl
add
and
insl
mov
sub
lret
dec
fwait
jnp
hlt
jl
insb
femms
fidivl
fwait
icebp
adc
inc
cli
xchg
testl
xchg
add
repnz
mov
xor
jne
push
inc
insb
dec
or
cmc
enter
cmpsb
inc
jbe
popa
mov
cmpsb
or
aaa
fcomip
inc
adc
in
rcrl
inc
sbb
sub
test
sar
adc
xor
mov
je
and
ss
fisubrs
or
and
sbb
dec
inc
cld
in
je
mov
aad
or
ja
xchg
sbb
sub
je
jg
sbb
in
and
test
adc
push
push
mov
xor
call
xchg
cli
pop
repz
vaddss
jecxz
jg
add
inc
inc
outsl
outsb
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
arpl
insl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
je
insl
pop
dec
dec
and
jno
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
fs
je
inc
push
dec
je
insl
outsl
outsl
add
add
js
popa
insb
arpl
imul
je
outsl
outsb
and
jno
jbe
lea
jbe
dec
dec
add
sub
sub
neg
not
pusha
mov
bts
bsf
bts
setne
mov
sar
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
inc
push
outsl
dec
imul
jo
ss
insb
popa
jae
gs
push
push
je
imul
fs
jne
jmp
add
inc
inc
js
js
fs
inc
imul
imul
and
jno
jbe
add
inc
dec
jbe
outsl
je
jb
arpl
gs
imul
imul
imul
and
jno
jbe
add
inc
inc
js
popa
je
jne
imul
insb
imul
and
jno
jbe
add
inc
dec
insl
push
arpl
je
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
jb
gs
popa
je
and
jno
jbe
add
inc
inc
arpl
imul
popa
insb
imul
and
jno
jbe
shld
add
inc
call
add
inc
inc
insb
popa
jae
gs
imul
imul
and
jno
jbe
add
inc
dec
arpl
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
sub
jl
add
clc
call
add
inc
dec
fs
je
popa
insb
imul
and
jno
jbe
add
inc
inc
js
je
outsb
fs
jb
insl
popa
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
outsb
arpl
gs
imul
imul
and
jno
jbe
add
inc
dec
arpl
fs
jb
outsb
addr16
imul
imul
and
jno
jbe
pusha
pushf
call
add
pusha
lea
jmp
add
inc
inc
js
imul
je
jae
imul
imul
and
jno
jbe
add
inc
push
jne
jo
outsl
addr16
jae
bound
inc
inc
imul
je
outsl
outsb
and
jno
jbe
arpl
xlat
or
inc
aam
push
ret
sub
data16
cmc
mov
lds
sub
insl
neg
pop
mov
lock
or
popa
inc
xlat
ja
clc
or
and
adc
xor
hlt
imul
outsb
or
pop
fs
or
and
mov
sbb
popa
add
movsl
lds
popf
mov
or
inc
jecxz
call
mov
jae
into
inc
inc
fisubrl
insb
mov
add
dec
popa
inc
fs
int
jmp
adc
sbb
ja
int
imul
repz
mov
enter
hlt
mov
dec
rorl
or
push
imul
int
int3
pop
fistps
mov
sbb
enter
inc
in
push
sub
lods
push
mov
xchg
push
jo
out
mov
jge
jg
mov
in
pop
clc
and
mov
sub
lahf
out
dec
ljmp
pop
cmpsl
adc
call
loope
push
lods
outsl
inc
scas
add
adc
fs
mov
leave
ljmp
jl
sbb
mov
adcb
movsb
inc
jae
js
nop
jmp
cmp
pushf
cmp
push
xor
mov
jbe
rolb
sbb
mov
pop
fucomip
push
sarb
leave
in
test
fs
sub
jo
enter
add
inc
dec
insl
popa
imul
jae
jae
imul
imul
and
jno
jbe
lahf
bswap
lea
call
daa
xor
push
inc
repz
push
das
movsl
mov
push
mov
add
ficomps
add
dec
cmc
pop
mov
outsb
pushf
jo
rorl
fmul
mov
adc
lods
cmp
imul
dec
loopne
stos
inc
xchg
mov
cwtl
cwtl
inc
mov
jle
pop
or
push
pop
sub
lds
push
pop
ja
movsl
pop
pop
push
inc
pop
jle
mov
lret
negl
jb
pop
or
movl
subl
pushf
test
cmpsl
icebp
enter
adc
mov
sbb
mov
adc
add
pop
pop
sub
jl
clc
mov
fptan
into
sbb
mov
mov
or
add
cmp
stc
shlb
push
sbb
shr
xor
and
sub
jge
negl
jle
or
hlt
push
ret
std
push
jno
jg
xor
clc
pop
stos
rcl
daa
mov
sub
fprem1
hlt
enter
je
in
fs
mov
add
not
cmp
dec
out
add
fs
testl
jmp
shrl
subb
les
insl
xchg
and
inc
out
into
sbb
mov
movsb
and
push
mov
pop
je
repz
sub
popf
xchg
pushf
mov
inc
dec
insl
popa
imul
outsl
jb
addr16
jo
imul
je
popa
insb
imul
and
jno
jbe
add
inc
dec
insl
push
jne
outsb
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
mov
push
jmp
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
jne
arpl
jo
imul
jo
xor
popa
je
inc
push
inc
jne
arpl
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
gs
popa
jb
outsb
je
jno
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
add
dec
rolb
inc
mov
inc
outsl
subb
xchg
pop
mov
out
and
imul
fisubrl
mov
add
and
out
or
inc
das
and
sub
and
hlt
sbb
aad
adcb
cwtl
jo
pop
cli
outsb
roll
mov
push
mov
dec
lahf
cmpb
mov
lds
dec
mov
lahf
lods
jl
add
push
icebp
xchg
cli
sub
scas
ja
xor
push
mov
lahf
cmpb
or
lods
insl
xorb
xchg
shlb
cmc
add
mov
or
jp
jge
jl
pushf
mov
mov
nop
jbe
cs
pop
int
xchg
mov
or
popa
mov
cli
shlb
pop
lcall
mov
les
jp
add
inc
xchg
dec
jne
adcl
mov
popf
cmpb
out
outsl
dec
and
imul
lock
dec
int
insl
aad
xor
lea
xchg
fildll
push
ret
jnp
or
mov
dec
or
sbb
jge
pop
inc
sub
dec
sub
fwait
les
mov
push
sub
shr
push
inc
repnz
cmp
sarb
mov
pop
test
jge
pushf
lods
mov
sbbl
subl
outsb
add
inc
imul
mov
mov
addr16
and
cmpsl
daa
scas
or
test
add
mov
dec
mov
mov
inc
sub
iret
pop
inc
loopne
ret
sbb
stc
mov
test
cmp
decl
push
mov
iret
add
xor
cld
hlt
out
lahf
lds
bound
lahf
in
leave
fildl
push
inc
jl
mov
adc
adc
imul
xor
or
dec
jno
jge
push
mov
xor
cmp
mov
out
or
xchg
lock
inc
imul
out
xchg
aas
and
inc
mov
inc
sub
addr16
xor
jns
mov
imul
xor
popa
inc
test
or
insb
sub
insl
aad
inc
aad
popa
add
inc
pop
mov
or
fs
inc
sub
dec
mov
stc
jl
orps
in
int
xchg
push
jecxz
nop
js
jmp
sub
out
cs
clc
xor
and
xchg
add
add
mov
jo
clc
pop
lock
mov
test
cmpsl
iret
data16
push
clc
pop
loopne
xchg
outsb
ja
cmp
nop
test
adc
aad
into
mov
and
lret
push
push
loop
sub
loope
outsb
inc
sub
pop
add
adc
xorl
inc
stc
das
ret
add
in
push
xchg
ja
mov
jmp
popa
lea
mov
mov
pop
jne
jl
and
lret
inc
push
mov
mov
mov
test
imul
jecxz
sub
adc
push
lods
sbb
mov
add
sahf
lds
and
add
inc
ljmp
popa
clc
ja
lods
sbb
sub
jp
jbe
aam
shl
sbb
xchg
movsb
xor
jo
push
pop
xor
push
negb
in
cmpsl
repnz
shll
stos
mull
sbb
loopne
into
mov
mov
adc
es
les
and
insb
mov
inc
mov
out
push
xor
das
fwait
dec
add
inc
jno
mov
push
das
mov
dec
mov
mov
jp
cmc
mov
adc
sti
xchg
mov
enter
mov
fisubs
sbb
cmp
bound
sbb
add
test
jge
je
aam
aam
das
add
lds
mov
into
dec
xor
jp
lcall
jecxz
fidivl
lahf
cmpsb
pop
lock
outsl
into
mov
repnz
inc
iret
and
mov
jp
cmp
mov
lcall
jg
out
sbb
add
jne
addr16
jne
bound
inc
inc
imul
je
outsl
outsb
and
jno
jbe
pop
or
lahf
std
sbb
sarb
sub
add
xor
loop
sbb
int
addr16
cmpsl
test
fisubrs
inc
mov
test
data16
stos
out
xchg
xchg
imul
bound
or
jnp
negl
outsl
xchg
mov
or
cmp
inc
ret
lds
jle
adc
push
das
and
scas
sbb
jmp
xchg
lods
loope
out
mov
mov
push
cltd
fs
and
das
inc
test
adc
jmp
out
insb
test
je
out
xchg
jns
orb
cld
jecxz
sub
xor
jnp
aaa
andb
xchg
cmpsb
int
sahf
push
cmpsb
fdivrl
cmp
xchg
sbb
push
out
int3
in
jno
cs
add
inc
test
sub
mov
add
jnp
cmc
pop
jne
mov
dec
adc
out
icebp
sbb
je
movsb
insb
pop
xchg
gs
dec
stos
in
nop
int
jb
aam
cmpb
ret
outsb
into
lods
xor
mov
push
mov
sbb
outsl
loopne
inc
xchg
cmp
pmulhw
repnz
inc
mov
out
mov
or
loop
pop
lcall
xchg
jg
stos
lret
scas
inc
addr16
inc
out
push
loopne
sar
lock
addr16
jb
arpl
add
jne
outsw
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
jmp
add
inc
dec
insl
push
arpl
je
imul
imul
and
jno
jbe
jbe
insb
push
addr16
xor
bound
add
test
push
movb
stc
movzwl
sar
test
shrd
pop
mov
pushf
add
cmc
pushl
clc
bt
mov
movb
mov
jmp
add
inc
push
jp
jb
gs
inc
imul
imul
and
jno
jbe
add
inc
inc
js
outsl
outsb
je
outsl
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
jb
gs
gs
fs
and
jno
jo
ss
js
insb
inc
push
fs
jb
gs
imul
fs
je
inc
push
inc
imul
je
and
sbb
ja
xor
js
mov
push
in
xchg
mov
xor
push
pop
fdivl
popf
ss
pop
repz
int
arpl
sarl
inc
xchg
rol
sub
and
int3
fwait
cmp
imul
aas
mov
push
mov
add
cmpsl
push
dec
addr16
cmc
pop
cmp
cltd
lds
push
and
pusha
out
cld
sbb
fnstcw
stos
mov
or
push
pop
aaa
dec
rcll
cmpsl
push
fs
cmp
xor
jge
mov
jnp
ret
xchg
cmpsl
es
adc
fiaddl
ds
sub
scas
sbb
mov
sbbl
ja
jecxz
icebp
out
xchg
mov
mov
popa
jo
cli
hlt
in
push
push
jnp
cwtl
and
mov
lcall
pop
xorb
pop
loop
arpl
sbb
out
cmpsb
add
inc
jnp
mov
mov
and
cmpsl
push
xor
outsb
add
sarb
iret
push
push
scas
add
stc
mov
xchg
cmp
into
dec
gs
ljmp
inc
add
daa
mov
pop
mov
sub
not
push
fbstp
and
mov
inc
adc
adc
les
adc
push
xchg
es
sub
add
mov
jecxz
fmull
jl
sub
add
fs
je
inc
push
dec
je
insl
dec
imul
ja
popa
addr16
jno
imul
add
jmp
add
inc
dec
insl
popa
imul
popa
jae
jae
imul
imul
and
jno
jbe
pushf
mov
jmp
add
inc
dec
insl
popa
imul
popa
jo
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
outsb
inc
imul
jno
js
outsb
jo
jno
jo
xor
popa
je
inc
push
dec
je
insl
jo
xor
insb
inc
push
fs
jb
gs
imul
and
add
add
insl
popa
imul
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
xchg
pushf
movzbw
movl
cwtl
bswap
movsbl
lea
pushf
pushl
jmp
mov
cli
sbb
push
pop
ds
add
cmc
mov
push
and
cmp
pop
mov
push
lock
xchg
add
mov
xchg
xor
aad
imul
roll
call
and
stc
inc
stos
cs
popf
je
pop
out
data16
add
dec
movsl
jecxz
xchg
lds
mov
sub
sbb
sarl
notl
dec
lcall
sbb
imul
fsubrs
mov
push
movsb
loope
out
aad
loope
out
push
subl
xor
pop
fbld
inc
in
nop
icebp
inc
into
out
dec
jns
sbb
push
cmp
cltd
ret
pop
mov
dec
shrb
sub
inc
lods
pop
xor
fdecstp
pop
repz
fadds
cmp
jecxz
lock
jp
cli
sbb
jne
mov
pop
xor
cltd
int3
adc
and
outsb
rcl
cmp
in
lock
jnp
dec
mov
pop
dec
push
fs
cmp
loopne
aas
jns
mov
out
jns
loope
negb
mov
jb
pop
sub
ss
lret
fs
push
jmp
ss
das
hlt
faddl
mov
loopne
and
pop
xor
sub
outsl
dec
sub
dec
in
jbe
cmc
fidivl
adc
les
addr16
mov
es
xor
mov
cmc
cmpb
pusha
pusha
lea
jne
bswap
aad
sub
aas
ror
setbe
mov
neg
test
add
rcl
add
test
mov
mov
cmp
call
add
pusha
mov
pusha
pushf
mov
lea
jmp
add
inc
push
jns
je
insl
inc
inc
dec
push
je
inc
popa
je
and
jno
jbe
shl
clc
sbb
mov
add
enter
mov
mov
fildll
and
dec
movsb
je
pusha
or
out
xchg
sub
fnsave
xor
dec
stos
xchg
and
or
movsb
out
repz
jg
dec
pushl
testb
push
fbld
xchg
lds
mov
pop
stc
sbb
sbb
aad
je
fs
pop
sbb
fists
mov
nop
jno
mov
cli
xchg
aaa
push
pop
addr16
dec
gs
jnp
inc
cld
push
cmc
lahf
das
cmp
ret
insl
pushf
xor
adc
in
add
mov
int3
push
dec
inc
and
sub
sbbb
popa
popf
cmp
jb
jnp
sti
fwait
cmp
push
ss
mov
into
fdiv
sbb
push
aas
arpl
pop
leave
daa
dec
aaa
mov
xchg
fdivs
negb
and
cmpsl
leave
test
lds
sub
mov
sub
add
pop
aam
jne
cmpsb
test
jmp
testl
notl
arpl
or
add
mov
ljmp
adc
stos
add
sbb
pop
mov
xor
mov
iret
jne
jecxz
add
imul
shll
fidivrl
xor
ss
xchg
fildll
sti
movl
pushf
movl
pushl
lea
jmp
rolb
mov
sbb
fidivrs
arpl
xchg
lahf
sahf
cmp
sub
add
fstpl
dec
out
scas
or
or
loopne
fnstsw
ret
inc
mov
jp
loope
pusha
addr16
in
ret
ljmp
mov
inc
popa
in
xchg
cli
addb
sbb
enter
xchg
lds
inc
out
lahf
cmpsb
mov
adc
pop
jnp
into
and
push
xlat
mov
incb
enter
repz
jl
mov
jle
mov
mov
arpl
inc
inc
out
sbb
ljmp
push
xor
mov
cmp
mulb
xor
cld
push
add
cltd
mov
jbe
mov
xor
or
icebp
out
add
xchg
negb
aam
jecxz
mov
adcl
mov
test
test
shrl
and
xchg
in
sarb
and
sub
fnstenv
push
ja
bound
bound
pusha
pusha
mov
lods
into
fdivl
sbb
and
mov
test
cmp
jge
xchg
rcrb
mulb
gs
adc
mov
xor
aas
shl
xchg
xor
mov
push
mov
ja
lret
inc
out
add
inc
inc
outsl
bound
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
popa
jne
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
outsl
insl
popa
jo
inc
inc
imul
je
outsl
outsb
and
jno
jbe
call
fiaddl
mov
sbb
pop
xchg
rcrl
cli
in
loopne
pop
mov
lahf
frstor
sub
loopne
mov
ds
cmp
adc
ljmp
or
mov
jnp
fcoms
push
lcall
dec
mov
sarl
iret
mov
out
add
sbb
inc
data16
imul
loopne
inc
call
iret
cwtl
sub
sbb
add
clc
adc
add
and
icebp
loop
daa
jl
cmpl
loop
pusha
lret
sub
cmp
pop
pop
or
shlb
sar
leave
ljmp
imul
inc
and
loop
pop
aad
repnz
sahf
jge
pop
pop
push
xchg
lds
cli
push
stos
roll
mov
sbb
jae
in
mov
imul
sahf
mov
leave
outsb
xchg
inc
stos
xchg
ret
adc
push
addl
aam
mov
inc
and
dec
mov
sbb
push
movsb
sbb
and
mov
sub
dec
xor
mov
repnz
add
gs
and
loope
dec
xchg
pop
mov
push
cmp
add
sbb
repz
jp
mov
repnz
je
mov
fdiv
shlb
push
jge
mov
repnz
fiaddl
cmpb
lret
and
jp
jecxz
and
xchg
loopne
push
movsl
aas
mov
lods
dec
push
mov
data16
cmpsl
cmp
aaa
mov
test
popa
mov
adc
pop
daa
mov
test
pop
and
and
mov
ds
pop
xor
jl
mov
aad
pop
mov
aam
or
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
imul
and
jno
jo
add
orl
out
rcr
push
sub
mov
movw
cmc
mov
and
movsbw
shrd
sar
mov
bt
sub
movw
repnz
jmp
fs
cs
ljmp
repnz
nopl
imul
dec
mov
roll
and
mov
in
dec
sbb
mov
push
bound
pop
and
ljmp
filds
xchg
and
subb
popa
enter
test
add
mov
inc
mov
lret
shll
mov
rcl
add
mov
nop
dec
ljmp
mov
adc
jg
sub
jmp
lds
fsubl
push
popa
jno
into
sbb
ss
jl
repnz
bound
inc
sti
pop
nop
sub
addb
call
add
sar
xchg
jne
sahf
jo
fstps
sarl
stos
ret
inc
push
mov
addr16
xchg
mov
sub
fwait
jo
pop
sub
mov
in
mov
scas
inc
push
adc
xchg
cmp
pop
cmp
mov
repnz
or
in
mov
in
popf
fdivl
xchg
jle
push
jae
jae
cmp
cmp
push
mov
mov
dec
cmp
xor
cmp
out
mov
dec
dec
jne
adc
stc
pop
clc
dec
loop
adc
and
jns
fisttps
mov
sub
xor
mov
and
imul
xchg
cmp
sub
push
out
repz
sbb
stc
xchg
je
aaa
adc
lods
inc
mov
or
daa
push
jae
lcall
test
jnp
loopne
inc
sub
scas
mov
fdivr
and
jle
push
and
jnp
mov
ret
sbb
jne
out
cmp
jo
add
gs
jmp
mov
into
xchg
sti
fstpt
enter
jnp
icebp
sarb
fwait
push
out
push
shrb
cltd
sbb
jae
shll
jne
push
call
xchg
xor
mov
xchg
add
je
sbb
js
and
cltd
jo
xchg
jno
aad
or
out
push
or
aad
push
aas
sahf
clc
add
daa
pop
or
call
mov
stc
js
xor
pusha
lock
push
lock
cmp
push
loope
cmp
mov
add
xchg
sbb
sahf
inc
push
insl
stc
cmpl
lds
and
push
imul
subb
pop
fimull
pop
and
cmp
sub
lock
mov
push
xor
xchg
fwait
push
cs
lods
xor
sub
aad
into
pop
cmp
push
add
dec
jge
lock
cmp
int3
arpl
in
jmp
pop
outsb
pop
jo
sbb
ljmp
pop
aas
xchg
xor
xchg
xchg
mov
adc
pusha
lock
pop
jb
mov
ds
hlt
push
adc
dec
mov
call
sahf
inc
and
xchg
jl
cmp
cmc
aam
push
mov
xor
jmp
push
movsb
or
and
lock
cmpsl
ds
xchg
inc
dec
mov
ss
mov
mov
fwait
jo
sbb
lock
add
xor
xchg
jg
cmovle
add
imul
movsb
add
dec
mov
sub
test
daa
inc
jmp
sub
subb
pop
js
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
gs
outsl
outsb
je
outsl
insb
inc
js
outsb
je
and
jno
jbe
add
inc
inc
push
jae
inc
imul
imul
and
jno
jbe
movl
jmp
add
inc
push
popa
jb
popa
outsb
je
inc
inc
push
popa
jb
outsl
dec
outsb
je
addr16
jno
jb
js
push
push
popa
jb
popa
je
add
add
fs
je
inc
push
inc
jne
arpl
gs
inc
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
out
sbb
push
mov
cmc
pop
mov
mov
outsl
push
mov
rorb
in
cld
xor
xchg
hlt
fnsave
lock
sub
mov
mov
enter
xor
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
insb
jae
jb
inc
imul
je
outsl
outsb
and
jno
jbe
pop
add
sbb
ljmp
jg
je
mov
sbb
sub
fs
in
leave
jecxz
and
push
pop
push
or
inc
lods
lds
inc
in
add
iret
stos
mov
add
jo
outsl
rorl
aaa
cwtl
pusha
jne
jp
mov
jl
scas
stos
sub
testb
les
int
adc
cmp
out
sbb
ss
cmp
aad
bt
je
dec
jge
scas
movsb
popf
pop
xor
sbb
and
pop
daa
das
loop
pop
cmp
push
std
mov
mov
ljmp
adcb
leave
cltd
icebp
loop
nop
cmp
sub
sbb
icebp
push
xor
out
jns
sbb
loopne
repz
out
mov
inc
dec
sub
out
sub
and
add
mov
jp
scas
xchg
dec
cmpsl
cmp
and
dec
insl
xlat
cltd
sub
adc
and
lock
add
out
je
inc
imul
lods
push
mov
push
inc
hlt
cmp
and
xor
xor
out
dec
sbb
dec
fists
cmp
repz
sbb
mov
ficomps
popf
aaa
out
ret
xchg
std
test
dec
jecxz
lret
js
clc
sbb
cmp
cld
out
sbb
adc
sub
add
inc
push
fs
je
inc
push
inc
imul
call
cmp
adc
jo
mov
daa
fsts
jnp
lcall
sub
or
jb
push
or
ja
into
cmpsb
push
push
nop
test
repnz
cwtl
jne
leave
imul
pop
test
movsl
into
movsb
fsubl
lret
mov
aad
push
cmp
mov
stc
mov
pop
pusha
mov
inc
pop
ds
mov
mov
test
movsl
push
cmp
inc
sub
mov
mov
fdiv
adc
mov
jmp
pop
and
fcoms
out
pop
mov
push
lods
aaa
pop
pop
out
nop
out
ret
daa
sahf
loop
mov
or
or
lods
jmp
add
fimuls
and
repz
js
aas
pop
ds
lock
icebp
arpl
dec
out
push
jae
inc
push
lods
in
sbb
iret
sub
push
mov
call
icebp
pop
cmpsb
lahf
je
dec
lcall
jo
mov
fs
pusha
paddusw
cmp
movsl
add
adc
movsb
mov
ljmp
xor
fsubs
pop
lret
ja
or
adc
imul
data16
jmp
test
test
iret
outsb
xchg
xchg
repnz
hlt
adc
xchg
jle
jns
aad
and
cmp
outsb
or
jp
and
sbb
inc
sub
ja
sbb
or
xor
mov
gs
push
fs
mov
xor
jns
jb
mov
or
out
xchg
inc
inc
movsl
ret
inc
pop
int3
cs
ror
push
mov
adc
sarl
cmp
mov
xor
sub
bound
leave
or
adc
dec
in
movl
aam
cmc
enter
sbb
ljmp
xchg
jmp
push
sub
inc
mov
leave
push
ljmp
pushf
mov
mul
pop
mov
shl
push
or
std
inc
enter
xor
sub
es
mov
imul
push
mov
je
xchg
lahf
sub
jle
push
xor
loopne
scas
test
ret
cmpsb
or
add
mov
and
dec
xchg
xor
sbb
dec
and
mov
ljmp
jecxz
xchg
leave
mov
sub
push
sub
call
xchg
jae
jg
in
pop
repnz
enter
add
stc
jle
int3
cmpsl
push
inc
push
shll
push
loope
jno
push
inc
sbb
ja
hlt
inc
jl
sub
aad
fbstp
data16
pop
imul
sub
fidivs
leave
jle
sbb
dec
adc
outsl
push
js
movsb
dec
sub
inc
inc
jns
int
fimull
mov
add
insl
push
arpl
fs
imul
imul
and
jno
jbe
lea
lea
lea
pusha
bswap
movzbw
mov
movzwl
bswap
bswap
lea
pushf
movzbw
pushf
movsbw
mov
mov
call
add
inc
inc
popa
jae
ss
imul
imul
and
jno
jbe
arpl
jmp
out
stos
dec
cmc
sub
xchg
out
repz
and
imul
pop
lock
nop
push
or
adc
adc
ret
inc
pop
ja
xchg
mov
imul
sub
pop
pop
gs
or
repnz
jmp
dec
fabs
pop
ds
jb
notl
pop
fcomi
lock
sbb
push
mov
push
aad
pop
fwait
mov
push
add
adc
sbb
into
outsb
lea
adc
call
cld
data16
cmp
inc
movsl
xchg
je
cmc
add
mov
inc
lods
add
sub
mov
and
jecxz
out
mov
mov
cmp
fcoms
shrb
sub
jecxz
sub
les
push
ss
popa
push
cmc
inc
call
push
mov
cmp
loop
fnstenv
and
cltd
into
jge
adc
fisubl
pop
mov
std
push
outsl
and
fidivrs
shll
addr16
aaa
ja
dec
push
movsl
cmpsl
sub
or
outsl
inc
lcall
dec
aam
outsb
inc
pop
fbstp
inc
jge
sub
sub
mov
mov
lret
pop
mov
lods
xchg
cs
cld
sub
sub
push
sub
push
cmp
pushf
mov
inc
gs
mov
int
cmpb
pop
ss
and
fs
je
inc
push
dec
je
insl
dec
imul
dec
gs
je
insl
dec
imul
jbe
add
inc
dec
insl
push
arpl
je
imul
imul
and
jno
jbe
pusha
push
push
pushl
popl
pushf
pushl
ret
and
test
pushf
movsbw
mov
test
stc
pushl
cmpb
pushf
call
add
inc
inc
js
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
sub
call
mov
bt
lea
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsl
bound
push
jne
jb
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
outsl
outsl
outsl
outsl
jns
jo
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
ss
jb
jo
imul
outsb
jbe
jae
js
xor
gs
push
push
arpl
xor
insb
inc
push
fs
jb
gs
imul
jo
xor
insb
inc
push
fs
jb
gs
imul
insl
outsb
outsl
outsl
outsl
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jb
jo
imul
insb
outsl
jb
xor
jb
jo
imul
outsb
je
xor
inc
insb
popa
jae
gs
push
inc
insb
imul
jb
and
add
add
add
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
popa
imul
imul
jno
jb
add
call
popf
mov
shlb
sbb
fadd
add
mov
add
inc
xor
sti
adc
pop
fidivs
aad
fwait
test
mov
inc
push
lret
add
jne
push
imul
or
xchg
and
xchg
mov
push
cmp
scas
push
mov
shlb
lds
mov
das
dec
in
inc
push
jle
ds
aaa
xchg
test
add
adc
jg
lods
push
mov
loopne
out
in
ret
ror
mov
bound
loopne
mov
sbb
dec
or
jg
xor
popf
cmp
cli
xor
sub
inc
mov
data16
ret
repnz
arpl
jge
mov
mov
in
cmpsb
or
sub
jge
fwait
test
sbb
in
insl
mov
fisubs
lcall
cmpsb
ret
mov
or
xrelease
lcall
mov
subb
sbb
out
mov
mov
pusha
xchg
sbb
jb
mov
pop
cmp
and
jns
or
data16
jle
movsl
jb
arpl
sub
clc
ret
test
call
shll
jne
clc
push
lods
jecxz
cmpsb
or
xlat
xlat
cmpsl
into
cmp
sbb
xor
mov
xchg
lahf
cmpsb
lock
fnstenv
lcall
or
fiaddl
add
xor
dec
or
sub
in
pop
sbb
push
pop
test
mov
mov
add
xor
fwait
test
sub
push
cli
mov
dec
xchg
mov
xchg
cli
push
mov
pop
sbb
inc
ja
icebp
loop
inc
cmp
lahf
cld
dec
push
daa
fdivs
push
push
jae
xor
xchg
mov
lods
subl
ret
call
cmp
and
mov
pusha
dec
cmpsb
aaa
out
add
aas
cmp
addr16
jne
inc
pop
mov
lea
mov
pop
es
ljmp
push
inc
std
push
int
xchg
fistpll
sbb
or
notl
cmp
sub
inc
mov
cmp
sbb
mov
mov
inc
push
jne
jae
xor
xchg
mov
and
mov
xchg
in
call
dec
gs
adc
xchg
mov
mov
jecxz
jl
loope
sar
arpl
pushl
sub
mov
sbb
fcoml
sbb
pop
lret
cltd
and
mov
nop
ret
das
push
arpl
ds
fildll
xchg
or
subb
sub
mov
xchg
out
add
inc
push
jno
gs
imul
popa
insb
jne
inc
inc
imul
je
outsl
outsb
and
jno
jbe
xor
jmp
sbb
movsb
in
call
lods
sbb
scas
mov
outsb
lret
ret
jne
pop
push
mov
repz
or
subb
aam
dec
or
sti
dec
xchg
ret
rclb
dec
jo
imul
loopne
scas
or
int3
sbb
test
add
pop
pop
push
push
aaa
mov
dec
jle
pop
mov
sub
inc
fs
inc
mov
mov
js
push
jp
lret
stos
sub
sbb
pop
pop
sub
test
lret
or
fisttps
sbb
shr
mov
shlb
inc
xorb
and
stos
sub
rcl
jne
mov
or
push
lret
jp
inc
mov
loopne
mov
sub
push
negl
addl
push
pop
mov
insb
mov
sbb
sub
xchg
fildll
fwait
cmp
add
pop
pop
pop
xchg
into
and
sub
lea
and
push
es
outsb
ficomps
fcom
stos
push
out
popa
pop
sbb
mov
rcr
or
cmp
loop
mov
mov
cs
or
adc
fstl
fld1
cs
fldt
push
cmpsb
pushf
aas
lahf
cmp
mov
jne
mov
loope
out
jae
scas
inc
ja
and
xchg
mov
jecxz
jne
dec
loope
push
mov
inc
lods
imul
or
sub
xor
sbb
sub
dec
or
ljmp
rcrb
xor
ret
pop
mov
lcall
xorl
cmp
shl
xchg
mov
inc
out
adc
mov
daa
cld
dec
fucomp
fistps
push
sti
dec
stos
mov
shl
out
aam
insl
add
out
and
add
in
movsl
xchg
lods
pop
xor
dec
loope
notb
scas
in
add
sub
xor
push
and
push
out
xchg
mov
adcl
loopne
dec
sub
imul
cs
mov
xor
mov
jns
cli
xchg
scas
mov
lret
imul
mov
dec
push
mov
ljmp
add
xor
sbb
push
jbe
cmp
dec
les
cmp
scas
js
pop
xor
dec
jmp
inc
std
mov
cli
sub
sub
adc
pop
mov
mov
jo
popf
mov
mov
sahf
ja
jnp
jnp
jle
xchg
push
adcl
lods
sub
dec
mov
test
sarb
cmp
cmp
mov
mov
inc
dec
insl
imul
jae
imul
imul
and
jno
jbe
push
popf
das
fistps
lds
call
push
jne
cs
mov
add
push
sub
inc
or
cwtl
jo
cmpsl
xchg
ret
shrb
imul
stos
imul
in
insb
inc
outsl
or
inc
jg
leave
mov
scas
gs
fisttpl
cmpsb
sbb
hlt
aad
sarl
ficomps
fidivl
mov
push
xlat
dec
scas
or
popf
outsb
xchg
cmpsb
push
gs
cmp
test
inc
and
repz
cwtl
loope
push
pop
xorb
repz
add
mov
in
adc
inc
xchg
outsl
mov
jbe
pop
pusha
mov
scas
pushf
pop
jbe
fldl
pop
fidivs
lds
leave
cmpsb
dec
push
mov
out
in
mov
insl
pop
sar
je
sbb
data16
data16
scas
dec
scas
daa
into
cmp
cmp
push
gs
fidivs
adc
xchg
xor
mov
xchg
out
jecxz
daa
lret
aas
sub
mov
push
fsubrs
xor
jecxz
push
jnp
mov
cmp
mov
pop
ds
mov
sbb
sub
cmp
add
sbb
aam
dec
lods
pop
es
mov
pop
paddusw
je
fdivl
inc
add
add
inc
dec
je
mov
movsb
inc
inc
std
fisubs
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
outsl
insb
jne
outsb
dec
outsb
fs
jno
jb
xor
inc
js
insb
inc
push
fs
jb
gs
imul
insl
outsb
jo
ss
js
insb
inc
push
fs
jb
gs
imul
dec
insl
push
arpl
jb
imul
imul
and
jno
jbe
dec
xchg
xor
sbb
pusha
add
mov
popa
inc
sub
pop
movsb
and
and
mov
xor
push
mov
jo
js
adc
jp
dec
in
ret
xchg
adc
inc
xchg
push
and
sbbl
and
cld
dec
xchg
rolb
ds
push
xchg
cmp
lods
popf
ret
inc
das
sti
sahf
jl
jo
stc
aad
or
insb
dec
push
add
inc
push
jns
je
insl
inc
inc
inc
outsl
outsb
gs
js
gs
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
gs
gs
fs
insb
outsl
arpl
imul
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
pushl
popl
jmp
mov
bt
bt
test
test
pushl
movw
pushf
lea
je
cmc
pusha
pushl
pusha
add
call
insl
js
jne
insb
outsl
outsl
imul
push
jb
pop
inc
aaa
bound
add
add
fs
je
inc
push
dec
je
insl
dec
imul
inc
outsl
outsb
imul
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
add
add
je
popa
arpl
inc
imul
imul
and
jno
jbe
add
inc
push
outsl
jo
outsb
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
outsl
outsl
imul
data16
jae
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
inc
imul
je
inc
gs
imul
gs
jno
jbe
add
inc
dec
arpl
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
fcompl
fistpl
inc
jecxz
call
jno
jge
rep
cmpsl
xchg
imul
mov
dec
sub
sub
pusha
adc
inc
or
fs
movsb
jno
mov
inc
mov
push
sbb
sarb
mov
clc
inc
std
pop
inc
outsl
aas
mov
fbstp
lret
loopne
pop
or
incl
mov
pop
jmp
jns
adc
call
inc
cmc
push
and
xor
aaa
popf
or
dec
and
or
add
dec
call
dec
sub
pushf
mov
mov
lods
mov
cmp
shll
jge
gs
adc
roll
sbb
jo
popa
push
sti
or
sub
mov
leave
and
jg
mov
cld
xlat
xor
xchg
sbb
xchg
into
adc
fstps
mov
mov
sti
roll
push
fbstp
dec
addr16
mov
xchg
dec
insl
add
andb
notl
cs
xchg
jne
jmp
adc
das
les
in
arpl
icebp
pop
sub
sub
and
push
or
push
push
pop
cmp
iret
out
inc
jge
js
push
jl
pop
sub
cwtl
subl
imul
mov
mov
mov
xchg
aaa
dec
lods
sub
gs
lods
stos
adc
sub
inc
dec
insl
push
arpl
je
imul
imul
and
jno
jbe
pushf
jmp
movzbw
cmp
bt
mov
add
add
pusha
shl
mov
movw
test
shl
add
shld
sbb
shrd
movl
btr
add
mov
call
add
inc
push
fs
je
inc
inc
gs
gs
jne
je
popa
insb
jne
and
jno
xor
push
fs
je
inc
push
inc
imul
add
add
insb
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
imul
je
jb
jno
jb
xor
popa
inc
push
dec
je
insl
dec
imul
jae
gs
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
sub
test
dec
add
jnp
xor
xchg
mov
pushl
inc
sbb
stc
fdivs
les
outsb
notl
mov
icebp
sbb
lods
sbb
adc
movsb
outsl
pop
data16
adc
or
mov
mov
dec
loope
mov
imul
jno
sub
popf
jae
test
in
add
adc
mov
pop
mov
xchg
ret
xchg
jl
sbb
jge
cmp
xor
stc
pop
testl
sub
xor
test
pop
loop
mov
andl
test
popa
in
int
jbe
fists
and
lahf
xlat
jge
ret
js
lahf
and
mov
std
inc
pushf
lret
dec
imul
and
sub
mov
lahf
mov
stos
lret
sub
and
nop
repnz
push
mov
sub
sbb
add
insl
inc
sub
mov
stc
fldcw
mov
out
xor
fidivl
test
outsb
mov
punpcklbw
ds
ret
bound
pushf
ja
mov
lea
mov
adc
and
add
or
jl
insb
not
xor
clc
xchg
dec
add
or
out
pushf
cmp
push
mov
mov
xchg
push
push
push
ja
push
cmpsl
lcall
cmp
dec
out
ljmp
cmpsl
nop
pop
jbe
sbb
jmp
clc
clc
stc
cmp
jmp
add
inc
dec
jne
je
insl
outsl
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
mov
in
aad
inc
cmp
jg
je
mov
mov
stc
dec
sarl
and
test
push
les
out
shrb
test
les
insb
adc
xchg
dec
cmc
dec
fisubl
xchg
out
jmp
mov
cmp
xchg
xor
xchg
jne
ret
lcall
mov
mov
pushl
movsbl
bswap
lea
lea
movw
mov
call
fs
inc
dec
push
insb
jne
inc
aaa
bound
add
add
fs
je
inc
push
dec
je
insl
dec
imul
gs
imul
je
jb
jno
jb
xor
popa
inc
push
dec
je
insl
dec
imul
jae
gs
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
aam
inc
cmp
jae
xor
mov
xor
dec
adc
mov
std
nop
mov
cmp
leave
cmp
inc
and
mov
ret
rol
enter
push
ja
imul
xchg
jno
mov
incl
mov
cld
test
push
push
lea
sbb
inc
jno
pop
clc
pop
and
mov
sbb
icebp
inc
mov
shlb
stc
sub
pop
lea
jnp
push
mov
aaa
shll
cmp
xchg
ficoml
mov
rcrb
lret
fldl
xchg
es
cmp
mulb
test
push
imulb
add
jecxz,pn
ret
xor
pop
std
dec
jecxz
pusha
shll
add
or
outsb
sahf
addl
inc
sbb
push
xor
cmpsb
mov
jno
adc
lea
push
out
arpl
mov
mov
pop
scas
sbb
xor
mov
sub
leave
and
outsb
dec
imul
push
leave
or
in
loop
inc
fsubrs
push
mov
fmull
and
fistpll
movsl
mov
jge
cmp
frstor
add
xor
dec
call
cltd
std
lcall
mov
std
pop
bound
gs
outsl
insl
jo
outsb
outsb
je
push
arpl
bound
add
mov
inc
push
ja
imul
imul
inc
jne
outsl
push
imul
jb
outsl
add
outsl
in
add
lods
call
sbb
and
pop
lcall
dec
or
mov
dec
fdivs
mov
lds
aad
jecxz
cmp
inc
jmp
jg
mov
jo
imul
sbb
xchg
xor
out
pop
imul
jbe
or
push
pop
xor
es
pop
cmc
mov
push
shlb
jle
fnstcw
mov
sbb
push
pop
lods
push
cwtl
icebp
push
mov
notb
fwait
mov
mov
cmpsl
pushf
cmc
cmpsl
xor
sub
or
and
mov
jp
push
dec
push
clc
push
mov
fwait
pop
and
mov
test
out
dec
data16
mov
mov
sti
fidivs
repnz
mov
jecxz
pop
repz
mov
scas
test
sbb
in
ret
add
xor
hlt
scas
out
pop
sbb
xchg
xor
pop
clc
pop
mov
mov
scas
dec
xchg
stc
jl
cmpsb
int3
or
mov
loopne
lahf
cld
fldl
sbb
cmc
daa
test
rclb
into
pop
mov
jmp
mov
lods
stc
push
adcb
jecxz
push
xchg
jge
loope
adc
mov
test
loope
sbb
lea
mov
pop
fdivrs
fsts
repz
sbb
lea
insl
insb
outsl
arpl
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
imul
inc
insb
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
out
sbb
test
mov
lea
add
stc
mov
jecxz
lret
les
in
les
int
mov
cmp
inc
push
pop
cmp
out
das
aaa
mov
rolb
inc
ret
jmp
pop
mov
imul
cli
push
aad
icebp
inc
cltd
xor
daa
je
or
mov
push
and
bound
outsb
lds
push
subl
inc
out
int3
out
inc
sub
sub
addr16
je
dec
das
lea
lods
je
cmpl
push
mov
mov
rorl
inc
notl
dec
loopne
mov
inc
lret
arpl
aas
push
jge
dec
scas
push
mov
xlat
aad
adc
jmp
and
andl
pop
cmp
mov
jns
js
mov
out
mov
cmp
jle
dec
scas
rcrb
daa
push
inc
aad
in
fimuls
gs
je
xchg
xor
scas
mov
movsl
xchg
int
add
inc
loope
or
dec
jo
push
xchg
mov
jo
loopne
fdivs
jle
aam
in
pop
aas
daa
sbb
lahf
inc
sbb
adc
int
mov
jns
mov
mov
int
sbb
fiaddl
sbb
test
cmpsb
mov
push
andl
adc
xchg
call
sar
push
mov
scas
pushf
cmp
push
test
add
insl
insb
arpl
jae
inc
imul
imul
and
jno
jbe
scas
mov
repnz
xor
sahf
cs
ss
xor
jns
xchg
mov
sub
and
clc
xor
cmp
inc
imul
pop
push
sbb
sbb
or
lret
das
add
sbb
cmp
adc
jle
add
lret
cmc
jge
scas
enter
sbb
insb
lds
push
cmp
jge
fs
sbb
shl
xchg
mov
pop
xor
hlt
leave
mov
out
mov
mov
sbb
aam
in
pop
gs
jl
sysexit
sarl
push
mov
xchg
fbld
jecxz
lahf
mov
test
mov
sub
xchg
std
pop
mov
sub
cmc
loopne,pn
and
cld
push
mov
popf
mov
jne
sub
inc
push
mov
das
jge
sbb
jne
mov
repnz
sub
xchg
cmp
add
xor
xchg
clc
xchg
mov
mov
sti
xchg
lods
ficomps
fdivrs
inc
inc
mov
call
mov
xchg
shlb
sub
ja
int
xchg
cmpsl
imul
sub
push
sub
mov
xchg
es
xchg
add
push
xchg
test
inc
pop
cmp
xor
orb
mov
pop
testb
les
inc
sub
mov
and
or
xchg
sub
add
js
je
insb
gs
imul
imul
and
jno
jbe
add
inc
inc
js
popa
arpl
inc
imul
imul
and
jno
jbe
add
inc
push
jno
je
insl
jae
inc
imul
imul
and
jno
jbe
add
inc
inc
js
imul
imul
je
outsl
outsb
and
jno
jbe
cmc
test
cmp
or
pusha
push
call
lea
jae
push
lea
ja
jmp
test
jmp
mov
inc
and
add
imul
xor
das
add
sub
lods
dec
sub
aaa
out
add
xchg
loopne
js
or
adc
sub
mov
fwait
std
insl
unpcklps
int3
and
pop
cltd
mov
dec
jp
fidivl
or
loopne
and
jae
or
popf
das
fwait
jg
pushf
movsb
icebp
rorl
out
aas
test
out
stos
adc
montmul
cmpsb
lds
mov
cmpsb
lods
int3
or
sub
add
inc
inc
js
imul
popa
jae
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
outsl
insl
gs
jns
inc
imul
je
outsl
outsb
and
jno
jbe
add
add
shld
lahf
push
sbb
sub
mov
lea
movsbw
sub
inc
push
pusha
pop
sbb
mov
pusha
sar
xor
mov
aad
rcr
sub
pop
lea
pushf
push
jmp
add
inc
inc
insb
popa
jae
gs
push
push
je
gs
insl
inc
push
jb
je
inc
jne
data16
jno
jb
js
imul
inc
and
mov
mov
pushl
ret
lea
jae
sub
mov
xchg
xadd
mov
not
btr
mov
cmc
pusha
xor
pusha
repnz
movl
lea
jne
btc
mov
shl
movzbw
sub
btr
call
add
inc
inc
js
popa
jbe
addr16
je
jb
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
and
jo
xor
jns
je
insl
inc
push
popa
jb
popa
outsb
je
add
inc
dec
jo
outsb
push
gs
imul
imul
and
jno
jbe
add
inc
inc
js
imul
popa
insb
imul
and
jno
jbe
jne
add
sbb
out
das
dec
sub
ja
cmpsb
cmp
enter
gs
inc
jnp
icebp
xchg
jl
negb
sarl
insb
cmc
push
add
ja
subl
imull
mov
fwait
adc
popf
mov
and
add
ja
mov
gs
and
mov
lds
test
inc
lret
sbb
sub
inc
test
rolb
scas
loopne
in
jmp
mov
loop
outsb
pusha
fstps
fidivl
cmc
jge
loope
push
jbe
dec
faddl
rcll
ror
mov
sbb
in
cmc
lods
test
dec
arpl
std
mov
or
adc
loopne
ljmp
dec
mov
lcall
cmp
inc
inc
daa
sahf
mov
add
ror
inc
int
shll
in
or
inc
adc
fwait
das
filds
popf
test
gs
pop
dec
push
pause
aaa
inc
leave
jge
enter
xchg
mov
adc
xchg
jo
adc
adc
sahf
insl
cmc
pop
insl
and
xchg
lea
out
jbe
cmp
push
in
ds
xor
dec
jmp
repnz
mov
out
rol
adc
in
pop
pop
fnstcw
ds
into
ja
cmpsl
lea
dec
mov
mov
in
mov
cmp
and
jns
add
inc
push
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
push
jb
arpl
jae
jb
addr16
imul
xor
inc
insb
popa
jae
gs
push
push
je
imul
popf
leave
sbb
or
subl
xor
or
mov
push
cmp
and
dec
gs
lods
fsubp
das
or
push
jnp
add
pop
inc
daa
stc
xchg
xor
dec
sub
mov
jmp
bound
mov
mov
test
jl
insl
cld
stc
jg
xchg
adc
pop
lds
mov
and
leave
sbb
ja
clc
pop
mov
push
out
adcl
dec
lcall
dec
inc
stos
dec
outsb
add
sbb
xor
jp
cli
fdivrl
mov
in
inc
xlat
push
jmp
in
mov
scas
xchg
sbb
and
jmp
push
mov
cmp
jecxz
das
or
scas
inc
movsb
insl
pop
movb
subl
jge
into
push
aaa
fnstsw
mov
mov
or
cmp
dec
insb
cld
stc
mov
push
aaa
push
jl
outsl
loopne
sbb
xchg
dec
rorb
jmp
push
or
lret
jae
inc
jmp
aas
mov
mov
or
xchg
jecxz,pt
jecxz
lock
xchg
sbb
notl
xor
aas
mov
test
mov
fimull
iret
xchg
push
stc
or
add
fs
mov
add
mov
arpl
inc
insb
insb
outsl
arpl
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
data16
jb
outsl
outsb
jae
jb
arpl
outsb
and
jno
jbe
movl
call
insl
mov
sbb
adc
xor
sbb
rcl
pop
shl
mov
loopne
cmpsl
mov
andl
das
or
jns
mov
inc
inc
out
lds
aad
fwait
imul
or
push
shr
xchg
jo
cli
add
and
repz
neg
mov
loop
lds
pop
add
inc
in
add
jg
inc
bound
and
dec
xor
xor
sahf
mov
push
lret
lcall
jb
or
fdivs
out
cmp
pop
cmp
cmp
inc
mov
mov
pop
aad
sub
test
add
adc
xor
mov
mov
dec
sub
cld
push
and
inc
test
test
pop
dec
bound
imul
test
sub
sbb
fbld
push
xchg
xchg
mov
das
sub
jg
pop
mov
fcomip
aad
cltd
dec
fwait
mov
push
mov
dec
and
jbe
mov
inc
pop
loop
cs
imul
les
push
and
lods
in
adc
arpl
cmpb
cmp
or
xchg
repz
mov
scas
dec
sub
jno
and
add
jo
arpl
popa
jb
insl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
je
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
jne
jb
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
add
scas
mov
sbb
sahf
mov
cmp
aad
pop
xor
xor
pushf
jne
in
sub
mov
pop
push
lahf
lret
lret
or
aas
pop
push
push
out
fs
fs
aas
cmpsb
inc
add
jno
stos
and
sub
test
xchg
jp
arpl
div
pop
pop
in
cmp
int
fpatan
fsubrs
int
lds
test
jmp
mov
incl
add
fs
je
inc
push
dec
je
insl
dec
imul
arpl
inc
dec
imul
jbe
pop
mov
lds
dec
push
aas
sub
sbb
aaa
fidivrs
dec
dec
pop
test
adc
jl
cli
pushf
mov
in
lds
or
lods
jne
dec
test
shrb
movsl
int
int3
xor
imul
mov
int
cmp
test
sbb
in
in
sub
xchg
lds
iret
gs
das
xor
mov
xchg
fcom
pop
pop
pop
nop
mov
js
aas
fwait
sub
jo
jae
jp
mov
jne
mov
inc
or
cld
pop
and
pop
cmp
shr
jno
int
mov
fs
mov
pop
clc
inc
int3
in
sbb
xor
mov
jns
jecxz
outsl
add
jnp
jg
push
jo
outsb
inc
xchg
in
leave
xor
cld
shlb
xchg
jb
rolb
mov
mov
les
lahf
mov
push
push
pop
mov
sub
lea
adc
xchg
jns
aaa
pop
out
mov
test
fwait
insl
adc
jno
in
sti
push
lods
bound
test
fnstenv
xor
push
pusha
call
rorb
sub
dec
add
dec
mov
enter
mov
outsl
add
jo
roll
jmp
inc
popa
cltd
mov
pop
hlt
jae
addl
inc
inc
js
insb
outsl
bound
imul
imul
and
jno
jbe
popa
dec
scas
ret
sbb
pop
je
cmp
xchg
and
dec
repnz
and
arpl
adc
push
push
js
mov
or
xor
mov
jae
jns
sarb
mov
rcrl
and
jnp
jo
mov
cmp
xchg
cwtl
and
sbb
pop
mov
push
jge
cwtl
dec
cmp
pop
outsl
dec
daa
push
sub
pop
mov
es
sbb
sbb
lock
adc
test
xchg
or
xor
jo
stc
push
stc
fwait
dec
jno
sub
adcl
adcb
push
jbe
iret
in
cli
rclb
inc
push
jnp
out
and
add
cmp
adc
ja
aaa
xchg
inc
xchg
push
scas
mov
lcall
js
cmc
adcl
jbe
xchg
ret
jecxz
loop
insb
mov
jo
sahf
out
into
mov
push
loope
repz
cmp
andl
pop
cltd
insl
push
pop
ss
mov
les
dec
out
out
inc
adc
addl
push
and
scas
mov
mov
adc
or
mov
push
sti
test
xor
jnp
aaa
sub
jo
or
xchg
inc
inc
adc
inc
mov
cld
push
cli
push
aaa
shlb
mov
and
insb
xchg
add
inc
inc
js
insb
inc
imul
imul
and
jno
jbe
mov
inc
ret
movsl
and
in
and
mov
mov
jle
inc
lret
and
lcall
dec
sub
pop
das
xchg
inc
sbb
xchg
adc
flds
cmp
mov
xlat
sub
call
jg
ljmp
and
push
subl
jmp
leave
fcmovnb
sbb
push
jbe
mov
std
xchg
jne
jecxz
push
mov
sub
dec
adc
arpl
sbb
js
hlt
push
push
mov
test
cmp
mov
pop
mov
cmp
or
ret
test
std
subb
daa
xorb
sbb
adc
and
sarb
das
mov
sub
mov
pop
xchg
dec
leave
orl
push
sahf
rorl
inc
lods
cmp
mov
arpl
js
adc
adc
push
sub
push
adc
pop
loopne
mov
test
fstp
lods
aas
push
mov
outsl
inc
fsin
jp
add
jg
pop
add
add
mov
jnp
inc
test
out
or
pop
push
pop
mov
cmp
dec
loope
std
je
add
adc
cltd
fstps
mov
dec
push
sarb
clc
pop
mov
dec
and
ret
orl
xchg
add
inc
inc
js
jb
jne
bound
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
add
inc
add
inc
add
adc
andb
add
add
add
inc
add
add
add
and
add
rcrb
jne
xor
icebp
cltd
js
sub
stos
out
mov
jnp
out
add
cs
dec
out
xchg
jno
or
jp
push
sub
jb
inc
add
adcb
mov
shr
sti
sbbb
cmc
push
mov
pop
mov
jecxz
aas
test
cmp
push
fcomps
js
inc
sti
dec
fdivrs
jae
mov
cltd
and
cltd
jno
xchg
adc
mov
cmc
fwait
js
mov
push
imul
je
cli
lods
dec
loope
loope
adc
xchg
xchg
sub
scas
cmp
mov
and
cmpsb
jbe
jle
mov
ss
int
push
addr16
lea
add
or
int3
sub
cmpl
adc
mov
xchg
ds
mov
jl
mov
cmc
push
testb
cmc
outsl
fwait
inc
add
fdivrs
sahf
hlt
lcall
dec
mov
dec
adc
cmp
push
mov
push
lods
adc
outsb
fildll
inc
dec
movsl
or
cmp
stos
adc
or
jb
mov
mov
push
jle
jns
sti
jmp
lahf
imul
inc
and
sub
and
xorl
inc
inc
js
arpl
imul
imul
je
outsl
outsb
and
jno
jbe
lret
mov
dec
imul
and
shl
push
cmp
daa
ficomps
push
es
mov
lea
loop
mov
jno
cld
outsl
hlt
jl
inc
sub
mov
fistpl
loop
pop
into
cld
loopne
jbe
test
ficoms
dec
jecxz
cltd
adc
repnz
jae
cmp
mov
je
dec
pop
lds
mov
scas
sahf
cmp
inc
sub
data16
mov
or
pop
xor
jno
sub
add
mov
sbb
pop
lret
inc
loope
mov
jb
sub
rcll
lret
xchg
mov
jnp
jg
cmp
pop
test
pop
out
inc
sub
data16
inc
mov
xchg
imul
ss
nop
js
mov
mov
inc
insb
dec
lods
subb
setp
xchg
mov
clc
jecxz
cltd
les
dec
lods
pop
push
and
shll
es
in
sti
popf
xchg
gs
mov
das
inc
jp
xchg
mov
stos
scas
popf
pop
stos
mov
pop
push
mov
hlt
hlt
dec
pop
inc
fwait
push
in
or
adc
xor
push
in
mov
andb
add
mov
sbb
idiv
push
jmp
pop
icebp
andb
imul
call
fwait
xor
mov
pushf
lea
call
pusha
pusha
mov
pushf
lea
jmp
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
gs
jne
jb
push
imul
jno
jb
outsl
add
add
insb
popa
jae
gs
push
push
je
imul
inc
add
push
out
incl
add
js
insb
inc
imul
imul
and
jno
jbe
stc
jmp
add
inc
dec
insl
push
imul
imul
je
outsl
outsb
and
jno
jbe
pop
add
mov
sbb
fldcw
push
cmp
cwtl
mov
ja
mov
mov
dec
sub
loop
shll
lods
sub
repnz
jno
lods
inc
fwait
jl
sub
lret
sub
sub
inc
stos
dec
mov
sbb
inc
movsb
add
adc
daa
leave
ret
pop
xor
gs
ss
rep
push
loope
lock
mov
insl
outsl
sub
mov
popf
incb
cmpsb
jle
dec
rolb
and
mov
mov
arpl
xor
and
push
pop
notb
mov
push
repnz
push
mov
ds
loope
cwtl
dec
push
cmp
or
push
xor
stos
xchg
cmp
xchg
mov
add
mov
outsb
push
xor
mov
fnstenv
adc
in
push
cmp
sub
repz
hlt
cmpl
popf
adc
fsubr
mov
add
xorl
inc
sub
js
xchg
out
cmp
mov
xlat
sub
adc
ss
jns
stc
sarl
push
mov
in
sbb
mov
or
add
mov
negb
pop
sahf
mov
rcrb
shll
lahf
hlt
push
stos
out
lds
stos
sbb
aaa
xchg
mov
and
push
and
sti
cmp
dec
mov
insl
sbb
cld
cs
pop
arpl
les
sbb
mov
mov
jle
inc
arpl
add
pop
stos
mov
pop
stos
inc
push
jbe
mov
int3
bound
mov
add
outsl
ficoms
insl
pop
cmp
movsl
sub
aaa
xchg
mov
pusha
shrb
and
inc
lds
repnz
pushf
out
outsb
ret
rol
inc
add
mov
push
in
pop
mov
out
pop
ss
push
pop
jb
jne
js
or
out
adc
testb
lret
xchg
cmp
mov
jge
std
push
mov
mov
in
test
push
jl
mov
jno
testl
pushf
mov
pop
int
movsb
mov
push
or
adc
mov
sti
inc
or
pop
je
sub
push
jnp
mov
andl
mov
push
mov
xchg
mov
and
es
ret
mov
arpl
nop
fldl
cmp
sbb
in
jecxz
fucompp
inc
adc
ret
dec
or
xor
inc
imul
add
dec
dec
xchg
push
aas
js
enter
imul
ret
xchg
gs
mov
and
shld
and
xchg
sub
mov
mov
push
jnp
out
in
ret
cltd
cs
testb
and
dec
jo
das
cs
icebp
pop
push
stc
push
mov
mov
lods
int
imul
data16
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
popa
fs
je
gs
insl
inc
data16
jb
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
add
lods
sti
bsf
mov
bt
sbb
bsr
add
sar
jmp
mov
inc
leave
jecxz
popa
dec
test
push
jmp
int
iret
testb
mov
scas
add
cmp
or
repz
shll
jno
adc
nop
aas
in
imul
pop
std
xchg
jge
or
out
mov
sub
cld
sbbl
fsubrs
or
cld
push
lds
addr16
mov
pop
mov
out
inc
and
sti
push
je
and
push
mov
outsb
inc
jmp
lea
pop
jmp
outsb
fsubrl
add
hlt
lods
lds
mov
mov
stc
push
mov
cmpsl
test
sbb
push
ret
outsb
movsl
mov
jge
pusha
mov
cmp
out
lods
inc
in
in
or
das
in
push
sbb
outsb
sbb
iret
mov
inc
mov
xchg
data16
fwait
and
mov
push
cmpb
push
xor
aas
fnstcw
mov
adc
lahf
mov
inc
ret
sar
subb
loopne
jl
movsb
add
rcrb
and
imul
and
xchg
xchg
fstpt
cmpsl
xor
mov
or
xor
js
pusha
cmp
enter
stc
pop
repnz
jb
cld
adc
in
push
jle
movsl
inc
mov
outsl
imul
je
popa
insb
imul
and
jno
jbe
add
inc
dec
arpl
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
jb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
lea
ja
cmc
call
add
inc
dec
arpl
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
test
test
mov
lea
je
shld
cmc
bsr
add
cmc
mov
pusha
jmp
jb
insb
aaa
xor
bound
add
add
js
imul
je
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
push
push
dec
push
popa
arpl
xor
add
fstpl
mov
inc
imul
outsl
shr
and
sub
repnz
push
and
sar
push
iret
cmpsb
jecxz
mov
popa
sar
fstpl
inc
popf
xor
insb
jmp
jbe
rcrb
int3
add
xor
int3
insb
add
lret
jne
les
mov
dec
inc
mov
arpl
imul
xor
mov
push
lds
in
test
sbb
out
push
and
jb
mov
dec
icebp
lods
fidivl
movsl
fstl
lods
and
ljmp
ret
stos
icebp
fnclex
es
fildl
xor
inc
out
jge
or
inc
fsub
cmp
repz
ljmp
mov
loope
dec
xor
cmp
imul
stos
jae
scas
fbstp
fidivrl
adc
arpl
and
ljmp
jae
mov
mull
insb
inc
mov
adc
movsl
fstp
and
inc
add
xchg
pop
sti
cwtl
aaa
pushf
jmp
xchg
sub
leave
popa
pop
inc
imul
push
dec
add
pop
dec
inc
sub
dec
loopne
scas
cmpsb
jne
inc
ret
cmp
fdivs
lret
push
jnp
call
shlb
sbbl
xor
lods
adc
cmp
xchg
ret
call
add
mov
scas
sarb
add
mov
btc
bt
bsr
add
mov
call
pusha
mov
seta
not
pop
lea
movw
pushl
xchg
movsbl
movzbw
lahf
pushl
popl
pop
movsbl
pop
movsbw
mov
lahf
setno
movzbw
movl
movsbw
lahf
lea
pusha
movl
pushl
mov
pushf
call
add
inc
push
jne
insl
gs
outsl
inc
imul
imul
and
jno
jbe
add
inc
push
bound
arpl
imul
popa
insb
imul
and
jno
jbe
mov
inc
out
cmpsl
xchg
add
push
dec
lret
mov
jb
inc
jns
dec
data16
pxor
cld
dec
sbb
sar
sbbl
ret
inc
stc
sub
jecxz
xchg
orl
mov
mov
push
out
fbstp
sub
add
mov
mov
cmp
mov
pop
dec
lds
jae
enter
mov
inc
or
hlt
sahf
aad
outsl
push
cmp
adc
pop
xchg
mov
xchg
adc
push
jnp
cmp
pop
jno
lahf
inc
notb
cld
jmp
and
xor
cld
fsubrl
inc
rcrl
lahf
lea
cmp
outsb
shl
pop
fidivl
sub
xor
repz
mov
mov
stos
add
lcall
and
or
cs
mov
mov
scas
hlt
sahf
out
in
fildll
mov
mov
or
into
mov
test
sub
out
ljmp
mov
lret
pop
gs
scas
scas
mov
cld
jb
mov
nop
shlb
in
sub
ja
add
aad
cmpsb
mov
mov
mov
adc
inc
push
pop
cs
sub
xchg
cmp
inc
stos
mov
pop
jl
mov
xor
push
mov
add
outsl
jb
jae
imul
imul
and
jno
jbe
jmp
add
inc
inc
js
arpl
imul
inc
imul
je
outsl
outsb
and
jno
jbe
rolb
sbb
add
insb
jp
nop
jg
cmpsb
fmul
imul
cltd
jge
jns
mov
ret
out
cmpsl
out
scas
ljmp
xrelease
stc
pushf
sub
pushf
pusha
movb
cmp
pushf
jmp
call
pushf
pushf
movl
jmp
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
inc
gs
arpl
outsb
and
jno
jbe
lea
jne
bt
rcl
shld
or
mov
call
add
inc
dec
jbe
gs
jne
arpl
inc
imul
imul
and
jno
jbe
add
inc
push
jne
bound
je
outsb
inc
imul
imul
and
jno
jbe
sub
dec
mov
inc
push
mov
lahf
repz
inc
xchg
hlt
lret
ffreep
jnp
inc
mov
loope
inc
dec
fs
mov
rcrb
sbb
roll
jp
ljmp
cltd
aas
jb
test
jbe
rcrb
shlb
mov
sahf
test
lods
ss
and
pop
dec
and
jnp
mov
movsb
cwtl
test
dec
lds
adc
jl
out
scas
sbb
ss
jp
inc
mov
xor
xchg
ret
mov
and
and
xlat
pop
cmc
sbb
push
hlt
adc
mov
xorl
ret
push
xor
daa
dec
subl
je
lea
mov
sub
xor
sub
pop
or
std
push
outsb
cltd
and
dec
jno
jno
adc
xchg
cld
sar
rol
sarl
cmp
jne
ds
jnp
xor
pop
mov
mov
inc
mov
inc
dec
data16
sub
mov
xor
and
out
fisttps
xor
mov
cld
fdivrp
xlat
insl
and
arpl
jg
aaa
pop
sbb
mov
adc
mov
cmpsl
popa
mov
sti
movsl
inc
int3
rol
stos
mov
push
inc
mov
aaa
cs
add
mov
jbe
repnz
enter
inc
mov
xor
pop
sbb
or
pop
sub
and
and
mov
jg
pusha
adc
scas
sbb
insl
dec
bound
sbb
adc
fwait
dec
mov
ljmp
dec
in
mov
inc
stos
adc
adc
ret
fstl
lods
out
jbe
sub
xchg
shll
xor
pop
dec
cmovle
mov
shlb
mov
inc
mov
pop
fcomps
dec
and
xor
mov
mov
xchg
cmp
lock
loope
inc
jo
scas
cltd
ret
dec
scas
sbb
jp
jns
cmc
xchg
jns
jmp
mov
loope
das
stc
pop
xchg
mov
xor
and
insb
push
repnz
jb
dec
push
add
insl
mov
fidivl
loopne
cli
or
dec
jae
adc
and
sub
fmuls
pop
add
lods
sbb
mov
negl
cmp
jb
loop
lcall
repz
mov
cmpsl
cmp
sahf
mov
jno
cli
mov
push
rcll
jg
ret
mov
sub
scas
add
pop
jne
add
jnp
lea
lahf
or
shrl
mov
lds
pop
jmp
and
xchg
int3
test
jnp
mov
fnstenv
mov
mov
lds
popf
mov
push
jb
outsb
je
jb
inc
imul
imul
and
jno
jbe
mov
pusha
lea
jbe
pusha
mov
mov
jmp
pusha
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
inc
dec
outsl
popa
fs
je
gs
insl
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
jne
arpl
bound
outsl
js
inc
imul
je
outsl
outsb
and
jno
jbe
pop
pop
mov
pusha
movw
mov
lea
jl
bswap
pop
pusha
push
pushf
pushl
ret
add
inc
inc
js
popa
je
inc
imul
imul
and
jno
jbe
or
mov
iret
pop
push
out
stos
push
ror
sbb
lret
pusha
mov
inc
push
cmp
jp
jl
aas
pop
std
adc
jmp
push
dec
xchg
or
ret
inc
movsb
jp
cmp
jmp
pop
insl
add
inc
addr16
fs
rolb
je
and
and
sub
sub
xor
lds
loope
push
insl
sbb
xchg
std
adc
jecxz
pop
cmpsb
gs
jne
and
sbb
or
ds
lahf
jnp
icebp
lahf
mov
xor
clc
outsb
ret
pushf
sahf
mov
pop
pushf
jo
inc
and
out
adc
in
rcll
subb
cmp
sub
and
je
ret
push
int3
call
sub
pushf
jmp
hlt
int
adc
push
mov
sbb
rcr
pop
mov
mov
movsb
pop
mov
lods
sbb
mov
mov
inc
test
sub
jo
jno
ja
mov
std
popf
mov
div
in
xchg
pop
xor
ret
pushf
pop
xor
mov
loope
pushf
mov
cld
xchg
push
lods
add
pmullw
dec
dec
dec
push
mov
and
imul
adc
pop
push
jns
loop
inc
bound
sub
xchg
jmp
sbb
lds
push
mov
je
jo
lahf
jbe
addr16
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
push
push
push
and
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
js
jne
jb
outsb
arpl
imul
imul
and
jno
jbe
push
xchg
xor
test
popa
add
and
fidivrs
movsl
je
aam
ljmp
je
loopne
gs
test
cmp
cmp
pop
adcl
xor
xlat
rorb
rcl
cmp
clc
sti
shll
fidivs
in
mov
jae
sub
pop
in
iret
inc
mov
jge
fistps
and
lcall
push
mul
iret
sbb
fisubrl
inc
jg
stc
out
xchg
sub
leave
jecxz
mov
and
leave
push
shr
mov
push
mov
add
inc
dec
insl
push
arpl
je
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
insl
popa
jae
gs
imul
imul
and
jno
jbe
sub
sbb
fsqrt
xchg
jno
ds
mov
and
je
xor
pop
jae
lock
pop
iret
movsb
dec
xlat
stos
or
add
addb
pop
mov
rorb
enter
movsb
notl
jle
mov
roll
dec
sbb
dec
jecxz
loope
imul
out
sub
ss
movsl
jno
mov
inc
lds
iret
es
fs
stos
sbb
add
std
loope
imul
movsl
into
inc
stc
jno
notb
cmp
neg
repz
cmp
jbe
sbb
cltd
mov
lds
loop
and
or
sub
pushf
pop
imul
mov
in
stc
xchg
subb
int
into
mov
repnz
test
daa
or
out
popa
fisubs
loopne
jge
mov
sbb
shl
dec
xchg
add
dec
stos
jmp
pop
hlt
addr16
push
je
insb
mov
outsl
inc
in
daa
test
ficoms
mov
movsl
movsl
int
mov
test
test
push
mov
xor
fistl
add
or
jp
mov
icebp
dec
mov
dec
mov
sahf
lock
int
push
pop
jbe
in
and
cmc
jae
or
jle
mov
mov
xchg
jl
cmp
mov
mov
stos
and
mov
push
pushf
test
cmpsb
punpckhbw
out
pop
sbbl
aas
fidivl
iret
mov
sbb
cmp
jb
or
mov
outsb
ret
inc
mov
sbb
cltd
imul
repnz
jp
sbb
andb
aam
cmp
mov
jno
xchg
test
xor
mov
lcall
sub
das
mov
test
inc
aaa
adc
mov
xchg
add
test
dec
aam
es
jns
and
outsb
push
mov
mov
mov
daa
cmp
adc
insb
loope
das
mov
xchg
xor
sarl
dec
or
mov
test
jl
mov
ds
mov
lods
inc
cmpsl
sbb
cltd
not
cmp
arpl
sub
and
mov
cmpsl
sbb
xchg
mov
int
ja
subb
xor
mov
enter
pusha
inc
movsb
popa
fucomi
cs
jo
jecxz
loopne
fcmovne
sub
aad
sub
fs
bound
xchg
cmpsl
mov
push
loop
inc
icebp
mov
pusha
mov
sub
iret
std
movsl
dec
loopne
or
jg
dec
sub
sahf
xchg
mov
mov
pop
mov
into
pusha
lret
insl
xchg
and
and
or
adc
add
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
gs
jb
jns
imul
outsb
fs
gs
jno
jbe
add
inc
dec
insl
popa
imul
popa
je
inc
imul
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
jb
gs
jno
jo
cmp
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
add
inc
inc
js
outsl
jb
inc
imul
imul
and
jno
jbe
add
inc
push
jne
jb
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
pushl
lea
je
jmp
add
inc
inc
js
imul
inc
imul
je
outsl
outsb
and
jno
jbe
stc
bt
test
cmp
pushf
call
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
outsb
popa
bound
and
jno
outsl
add
push
jae
sbb
jg
gs
out
cmp
outsb
xor
cmp
jl
jge
ds
push
sub
in
enter
inc
or
push
or
out
xchg
rclb
jbe
pop
test
add
xchg
test
jo
insl
aam
lahf
mov
test
sbb
push
sub
jecxz
and
dec
in
push
sub
shll
mov
lods
lds
lret
xchg
xchg
insl
aam
xchg
mov
xchg
sbb
sbb
push
jb
js
lret
test
adcl
jecxz
mov
sub
popa
pop
js
clc
or
lret
enterw
push
xchg
mov
jg
das
outsl
xor
jmp
ret
shl
push
push
jmp
mov
es
sar
f2xm1
pushf
aaa
xchg
mov
jns
mov
aad
cli
mov
push
imul
inc
scas
add
inc
bound
pop
and
dec
jg
or
in
movsl
lea
cmpb
add
jnp
and
les
cmc
jp
and
imul
les
lods
rolb
imul
rclb
cld
sub
sarb
mov
sti
repz
jno
and
popf
js
pop
sub
jg
add
mov
push
xchg
scas
iret
data16
das
xchg
cmpsb
mov
lcall
or
jecxz
mov
or
sbb
stc
hlt
test
adc
orb
mov
and
mov
mov
or
sbb
push
fldl
imul
insl
mov
imull
mov
cmp
sub
mov
inc
lds
mov
enter
inc
cmpsl
jecxz
jecxz
sar
xlat
inc
cs
pusha
mov
dec
aad
xchg
or
push
adc
cmp
fcmovnb
inc
xor
sbb
or
stc
pop
cmp
push
cmpb
inc
out
sti
and
dec
cmp
cmp
std
loope
cs
negl
pop
daa
pop
sub
sub
jnp
adc
or
frstor
jno
mov
loop
mov
mov
xchg
or
fadds
fidivs
negb
dec
out
lods
jne
add
aaa
loop
adc
dec
mov
lods
mov
mov
jecxz
mov
je
lds
push
ret
fcmovne
dec
loopne
cld
in
movsl
mov
and
jnp
rcrl
and
std
push
faddl
ret
sbb
outsb
les
mov
pushf
mov
mov
mov
add
ja
js
sbb
negl
addr16
insl
mov
fdivs
pop
cmp
mov
stos
cmpsb
cld
outsl
xchg
jbe
mov
js
xor
push
in
or
or
sub
xor
fs
inc
and
nop
cmp
mov
mov
incb
lods
dec
shrl
sbb
cmp
in
push
xor
jno
stc
push
mov
push
push
lds
lds
sub
ja
shl
mov
and
jmp
call
cltd
xchg
and
or
int3
mov
mov
mov
add
mov
dec
cltd
cmp
clc
pushf
es
pop
mov
xor
mov
ss
push
repnz
loopne
and
sub
push
stos
push
incb
add
nop
mov
popa
lret
jmp
call
lret
outsb
add
sub
shll
xchg
sbb
sahf
notl
sbbb
icebp
pop
mov
sbb
insb
push
mov
xor
mov
loopne
imul
mov
jp
adc
mov
aam
mov
cmp
fnstcw
sub
loop
ret
iret
jo
xchg
mov
adc
xchg
test
std
push
ljmp
pusha
inc
cmpsl
adc
add
int3
shrb
nop
fisttpll
fidivl
xchg
mov
xchg
mov
mov
sub
scas
lret
mov
sbb
out
ret
movsl
leave
jl
subb
xor
in
loopne
or
add
lock
push
repnz
mov
mov
dec
popf
push
push
lea
jle
adc
adc
inc
mov
loope
scas
loopne
dec
jae
cmpsl
jae
int3
in
or
sarb
and
push
xchg
inc
push
mov
add
push
pop
push
adc
push
jp
xchg
into
cmpsb
sub
jmp
jge
mov
mov
stos
xor
scas
sbb
push
add
popf
or
out
jbe
or
jmp
pop
cwtl
jbe
das
xchg
dec
push
xor
lret
out
fsubrl
push
mov
and
mov
insb
mov
xchg
mov
cmpsb
dec
sub
or
cltd
ret
clc
lret
movsl
sbb
sbb
cmpsb
test
leave
push
repz
shrb
mov
bound
xchg
adc
ret
imul
inc
jge
sarb
movsb
or
ret
rclb
dec
xchg
mov
push
mov
xchg
cmp
mov
bound
push
jecxz
movl
into
mov
out
adc
lds
mov
mov
mov
mov
movb
stos
sbb
into
mov
shll
sub
pusha
leave
fucompp
add
sub
sub
nop
test
push
lret
jmp
sub
pop
mov
sub
or
or
lret
icebp
test
cmp
xor
mov
inc
mov
mov
push
out
xchg
sbb
bound
stos
and
adc
std
adc
inc
adc
test
vrcpps
xor
xor
jnp
mov
es
pop
sub
dec
mov
repz
int
pop
js
add
sub
lret
icebp
loopne
or
jmp
xchg
inc
mov
cld
add
jae
xchg
or
inc
lods
int3
mov
inc
in
fidivrl
xchg
ret
or
imul
mov
dec
loope
mov
icebp
fdivrl
not
xor
cmp
sarb
mov
dec
push
bt
shr
bts
mov
cmc
pushf
cmp
add
jmp
add
inc
push
jo
jb
insl
gs
popa
insb
imul
and
jno
jbe
lea
jne
pusha
mov
pushf
movw
lea
jmp
add
inc
push
jns
jne
imul
inc
js
jae
jae
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
js
outsl
outsb
je
imul
outsb
popa
insb
imul
and
jno
jbe
call
clc
add
jmp
jae
push
sahf
sbb
test
xchg
stos
mov
test
std
inc
pop
mov
push
sbb
js
xor
or
arpl
ret
inc
ret
cwtl
repz
push
jns
cwtl
pop
imul
adc
and
or
dec
arpl
test
fcompl
adc
mov
mov
fmulp
testb
ret
outsb
dec
sub
loop
cmp
xor
std
push
fsubl
fsubs
sbb
loop
negb
jae
not
cmp
mov
mov
mov
cld
out
ret
pop
popf
push
sub
aas
mov
pop
jns
mov
nop
push
das
fwait
mov
xchg
std
pop
daa
bound
je
inc
pop
jp
push
int
hlt
fnstsw
in
shld
insb
test
cmp
push
mov
jno
xlat
push
lea
shll
sbb
insb
push
movsl
mov
xchg
push
lods
data16
xchg
arpl
mov
iret
je
nop
xor
fidivrs
sbb
mov
sbb
in
std
repz
xchg
add
pushf
or
jl
mov
andl
add
push
nop
mov
sahf
mov
aas
les
sti
dec
clc
scas
xchg
mov
int
push
mov
pop
sub
and
movsb
mov
mov
add
sub
push
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
inc
gs
outsb
outsw
and
jno
jbe
add
inc
dec
arpl
outsb
xor
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
jb
jo
outsl
ja
gs
popa
insb
imul
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
push
gs
imul
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
push
jno
jbe
add
inc
dec
insl
imul
jae
inc
imul
je
outsl
outsb
and
jno
jbe
sub
fwait
sbb
js
mov
inc
iret
mov
repz
sarl
add
mov
clc
sarl
add
inc
jb
cmp
sahf
push
ret
shrb
mov
cwtl
fwait
xchg
imul
call
push
mov
pop
jno
in
push
aad
mov
jl
jge
push
sub
sub
push
aaa
lds
inc
push
ds
jnp
sub
clc
pop
jle
addb
cmp
int
sbb
sarb
jae
adc
out
mov
xchg
scas
ret
adc
dec
cld
stos
aam
loop
in
and
clc
sti
and
in
cwtl
xchg
sub
and
bound
mov
lret
iret
and
or
adc
mov
mov
loope
es
inc
lods
or
ds
out
aaa
sti
stos
mov
sbb
and
dec
clc
in
jns
mov
adc
jno
push
jne
xor
stos
sub
scas
add
shrb
popl
loope
mul
mov
div
lea
rcr
xor
mov
xchg
push
fstpt
cltd
pop
in
sbb
adc
roll
pop
mov
das
pushl
dec
xor
mov
or
pop
cmc
loope
jo
out
mov
xchg
rcrb
pusha
inc
ljmp
or
fldt
sahf
push
in
fistpll
or
adc
repnz
decl
and
stos
fistpl
outsb
fwait
and
push
das
test
pop
mov
aam
xchg
cmp
jbe
or
jae
adc
pop
psrad
inc
cmpsl
ds
fdivrs
loop
addb
in
push
sbb
add
in
fbstp
jmp
push
cltd
movsb
and
mov
aas
push
mov
fnstsw
je
xchg
xchg
mov
cld
aad
test
add
inc
inc
js
popa
insb
outsb
fs
jb
imul
imul
and
jno
jbe
add
inc
inc
js
je
insb
gs
inc
imul
je
outsl
outsb
and
jno
jbe
les
cwtl
sbb
and
daa
xchg
call
xor
rcr
sub
or
mov
adc
imul
lds
je
repnz
and
lcall
mov
cmp
mov
push
cmp
int3
adc
adc
in
add
fnsave
rorb
in
sub
cld
out
add
sub
lods
or
xor
pop
sti
das
sbb
cmpsl
or
clc
add
int
mov
pop
fldcw
dec
cs
sbb
xchg
out
or
push
ret
jl
andb
and
lods
xor
ljmp
and
and
dec
call
popf
pop
pop
insl
add
jecxz
xchg
sbb
jns
mov
not
push
ret
leave
jo
leave
fwait
daa
pusha
jecxz
shrb
push
nop
or
mov
rorl
into
pusha
inc
xor
decb
shl
mov
jns
pop
ret
inc
lods
test
mov
add
add
notl
fcoms
lock
jmp
xchg
xor
mov
fcompl
pop
mov
xchg
xor
sbb
shrl
jae
int
cmp
rol
imul
push
push
sub
mov
iret
cmpsb
xchg
jmp
mov
adc
add
out
dec
stos
xchg
lods
pop
mov
lret
jo
inc
cs
xor
out
out
sub
int3
cmc
pop
loopne
add
aad
adc
in
dec
int
rcl
inc
jge
mov
stc
cltd
mov
rcrb
inc
cmpl
inc
xchg
jp
sbb
scas
ret
out
pop
add
jp
jmp
mov
pop
std
test
sub
xorb
or
sub
popf
mov
jl
addr16
push
and
jecxz
fcomps
jmp
addr16
arpl
add
or
cld
cli
sarl
push
add
sahf
je
outsb
inc
adc
fbstp
or
mov
stos
aaa
mov
jmp
mov
jl
sti
sbb
sti
pop
jl
jb
jle
jl
in
mov
inc
push
jp
push
outsb
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
and
pop
jo
xor
mov
xchg
xchg
and
push
scas
nop
lret
jg
pop
mov
jbe
das
subl
sbb
or
sbb
mov
inc
dec
ret
inc
enter
pop
add
mov
addr16
fistl
adc
jge
push
lcall
ret
cmp
fwait
imul
mov
or
cmpsl
xor
pop
sub
test
lret
sbb
push
mov
sti
xchg
xor
imul
in
push
push
cwtl
ret
add
std
pop
jl
ja
mov
pop
movsb
pop
cs
das
mov
insl
cltd
mov
jge
insl
jno
pop
xor
subb
adc
insb
add
loope
pop
xor
cmp
dec
xchg
or
xchg
jg
xchg
cld
into
dec
xchg
shl
cmpsl
add
popf
popf
std
sub
dec
pop
xchg
sbb
into
outsb
add
stos
dec
repnz
jle
push
push
push
cltd
hlt
add
add
jmp
scas
pop
fs
pop
mov
push
or
out
popa
orb
mov
mov
aam
jle
jo
bound
xchg
bound
jp
cmp
minps
repz
lods
inc
je
fbstp
pop
or
sub
iret
add
add
pop
fiaddl
pop
fsubl
lret
outsb
dec
and
and
sbb
popf
popf
jle
lds
sbb
add
fs
je
inc
push
dec
je
insl
inc
push
popa
jbe
push
je
gs
insl
inc
data16
jb
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
imul
sbb
shrb
mov
push
cltd
loopne
sbb
fsubl
and
mov
or
mov
or
les
or
jno
mov
pop
inc
push
ret
shlb
icebp
pop
insl
aaa
aam
imul
mov
js
inc
fnstenv
mov
and
fimull
inc
ja
cld
mov
dec
mov
xor
pop
cmc
xlat
and
inc
jmp
sub
add
add
sahf
loop
outsb
jnp
dec
ja
pushf
ret
sub
ret
out
out
loop
and
mov
imul
push
push
int3
dec
xchg
jnp
pop
sbb
jg
cltd
mov
push
cs
push
ds
sahf
jbe
sarb
in
add
icebp
sti
adc
int3
push
inc
lret
repnz
dec
and
cmc
pop
lock
xor
pop
mov
mov
out
sbb
push
sbb
cld
xchg
cmp
cmp
xor
add
and
sahf
loop
mov
jb
aas
push
test
cmpsl
dec
lods
add
sub
xchg
mov
daa
stc
negl
or
aas
xchg
lret
mov
jecxz
adc
push
adc
les
fidivl
cwtl
mov
inc
jl
adc
adc
ret
mov
repz
shl
push
outsb
enter
mov
sub
es
std
adc
fnsave
test
and
cmp
sarl
lds
push
neg
cmp
pop
cmc
lods
fnstcw
fistpl
add
stos
shrl
into
scas
xchg
rcll
inc
jne
xlat
push
ret
inc
negb
mov
sub
loope
jns
inc
out
shr
arpl
inc
push
inc
shrl
dec
push
inc
fildll
jmp
xchg
jle
pusha
addr16
das
lds
mov
adc
or
xlat
cmp
add
stos
cmp
push
lret
in
test
inc
adc
test
loop
orl
addr16
shll
js
sbb
jmp
mov
mov
push
jl
mov
add
aad
cld
add
out
adc
mov
aas
push
jg
mov
sbb
or
in
xchg
fimull
mov
mov
mov
inc
rorb
aad
fbld
push
sub
adc
cmp
dec
pusha
mov
outsb
dec
daa
mov
cmpsl
lock
and
mov
dec
sbb
or
dec
in
faddp
jl
push
dec
inc
mov
cmpsl
jne
adc
or
stos
inc
add
in
decb
sub
adc
push
and
pop
and
cmp
scas
push
xor
sub
push
pop
jbe
das
push
adc
in
pusha
mov
lods
dec
insb
sbb
or
repz
inc
push
jns
je
insl
inc
inc
dec
outsb
je
inc
insb
gs
jb
jno
jb
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
aaa
push
jns
je
insl
inc
dec
dec
outsb
je
jb
popa
arpl
add
lea
je
mov
mov
movsbw
call
lea
call
pusha
jmp
repz
out
nop
sbb
or
inc
repz
mov
jno
das
mov
cmp
xchg
fsub
leave
xor
adc
clc
or
push
incb
out
push
ret
rclb
xchg
faddl
das
mov
js
mov
mov
xlat
add
pop
mov
or
or
pop
xor
mov
dec
sub
imul
xchg
sbb
mov
lods
xchg
inc
call
sbb
add
mov
or
ljmp
push
mov
or
ds
xor
push
movsb
mov
mov
stos
clc
xchg
xchg
push
jecxz
lds
add
mov
lcall
jle
mov
pop
xor
push
mov
and
add
test
inc
and
lods
inc
sub
das
out
jnp
dec
fidivl
cltd
xor
repnz
fisubs
rcll
fs
rorb
mov
jb
dec
not
xchg
lods
lods
negb
fimuls
sub
enter
inc
sub
popf
icebp
out
call
out
fstpl
in
pop
sub
mov
out
test
inc
lcall
or
test
pop
scas
push
cs
sub
push
loopne
push
mov
jecxz
insb
ds
sbb
call
inc
loope
xor
aas
divl
pop
mov
xchg
xchg
pop
arpl
and
arpl
jg
clc
or
jbe
mov
adc
inc
xor
pop
mov
add
pushf
mov
cmp
shrb
ljmp
out
inc
das
jmp
xor
jecxz
lds
hlt
in
lock
pop
xor
xchg
cli
imul
cltd
cmp
out
imul
xchg
aas
popf
lcall
mov
mov
add
cmp
sbb
dec
mov
inc
xchg
push
js
xchg
cli
jmp
pop
hlt
dec
jl
sub
sbb
lcall
fisubrl
enter
scas
cmp
fnstsw
adc
sbb
mov
and
lcall
sub
sbb
aaa
les
jmp
jmp
ljmp
sub
repnz
mov
cmp
jp
lsl
stos
jne
lret
pusha
xor
adc
leave
mov
dec
in
les
fisttpl
xor
pop
inc
sbb
sub
sahf
outsl
out
fnsave
xchg
mov
decl
mov
push
jecxz
fidivl
mov
inc
cmp
rcrl
adc
shlb
sbb
mov
push
mov
clc
lcall
add
inc
push
fs
je
inc
inc
js
jb
arpl
insb
gs
jb
insl
push
arpl
jno
jb
jo
xor
popa
inc
push
dec
je
insl
dec
imul
inc
insb
popa
jae
gs
push
push
je
imul
jns
je
insl
inc
inc
outsb
jae
push
je
imul
je
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
fs
je
inc
push
inc
imul
jo
outsl
add
add
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
and
jno
jbe
je
jle
sbb
jmp
faddl
je
cmp
push
jnp
lret
out
jns
fptan
sbb
cmp
and
testb
xor
fimull
add
or
add
ds
lock
flds
out
nop
imulb
negb
or
loop
cmpsl
mov
lds
popa
cmp
insl
pop
inc
into
mov
mov
xor
sbb
jl
cld
in
dec
in
stos
out
or
xchg
sti
movb
sbb
sub
ret
mov
xchg
mov
mov
sahf
test
add
fwait
shlb
xchg
ficoms
and
cmp
stc
sarl
or
imul
fdivl
fimull
jge
sub
bndstx
xchg
clc
popf
jl
dec
fbstp
push
jne
mov
call
fidivrs
sbb
sarl
inc
mov
or
jne
adc
push
mov
sti
xchg
sahf
jl
out
cmp
mov
mov
pop
les
mov
stc
fnsetpm(287
aad
test
sbb
loopne
jl
push
mov
xorl
xchg
xor
sti
fdivrs
test
stos
cmp
stos
cmp
inc
stos
cld
rcrl
adc
jle
lock
les
push
pop
sbb
push
test
jl
lods
dec
push
scas
lds
inc
sub
mov
or
jmp
idivl
ret
inc
cwtl
lock
pop
test
cmp
cltd
cmp
ss
jae
cmp
mov
xchg
dec
cmpb
fldt
cmpsl
push
jp
fwait
lock
sub
cmp
mov
in
push
shrb
adc
test
xchg
out
adc
push
jp
push
fsubl
gs
test
subb
add
ret
aaa
stos
jae
inc
fbld
ljmp
inc
mov
push
stc
dec
iret
insl
mov
mov
or
jns
or
enter
xor
dec
aam
xor
outsb
or
out
sub
ljmp
roll
stos
movsb
mov
outsl
cmp
xchg
dec
movsb
mov
xor
pop
xchg
cmpsl
push
jp
add
movsb
push
loopne
stos
ret
and
pop
movsb
pusha
mov
jae
push
lret
pop
fsubl
mov
ret
test
and
out
dec
cmp
stc
out
mov
rclb
or
inc
cmp
shr
inc
std
jnp
jbe
int
fdiv
into
fidivs
hlt
cmp
dec
pushl
lret
pop
or
test
into
mov
movsb
jl
addr16
jb
mov
fcomip
sbb
or
icebp
test
insl
mov
add
js
jns
gs
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
jmp
mov
mov
cmpsb
or
das
xchg
aas
testl
in
loopne
rcl
in
mov
sbbl
push
cmp
inc
mov
inc
imul
in
cmc
push
lods
cmc
mov
cmp
mov
stos
inc
mov
out
imul
adc
into
in
mov
popa
adc
add
inc
mov
xchg
pusha
negl
push
pop
outsb
or
and
mov
push
ret
fdivl
mov
aad
sub
mov
mov
stos
shl
push
lret
push
mov
inc
cmpsb
in
arpl
sbb
out
test
push
adc
outsl
push
adc
sub
inc
sbb
inc
and
or
ljmp
mov
and
add
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
inc
jb
addr16
imul
jb
aaa
dec
gs
popa
addr16
push
dec
gs
popa
add
movw
pushf
jmp
shl
mov
lcall
pop
cs
mov
and
into
lds
mov
sub
mov
fldenv
pop
icebp
or
cs
jmp
fidivrl
fdivs
aaa
sub
addb
mov
ds
mov
enter
lahf
clc
push
pop
jae
insb
sub
lds
mov
scas
aam
pop
mov
inc
imul
mov
adcl
mov
clc
add
mov
lock
cmp
jo
mov
xchg
outsb
jbe
subb
mov
call
out
pop
leave
lret
jmp
adc
pop
cmp
adc
stc
jge
xor
xor
fdivl
sbb
lcall
xor
jae
cmp
repz
ja
adc
fidivs
les
ljmp
push
call
orl
stos
mov
add
add
sub
push
enter
and
ss
cltd
add
adc
aaa
jb
sbb
lods
or
pop
aaa
push
and
xor
sub
test
arpl
xchg
push
add
pop
mov
mov
aam
mov
rcll
cmp
outsl
hlt
pop
scas
xchg
mov
sbb
shr
dec
in
xor
jle
ds
push
negl
movsl
mov
jb
in
cltd
and
cmp
pop
push
add
in
sub
dec
sub
lods
xor
inc
xchg
sub
shll
xchg
jl
negl
rorb
sbb
cmpb
ret
shlb
movsl
int
inc
pop
push
imul
aad
ficompl
out
imull
or
je
out
push
out
push
sbb
xchg
daa
dec
outsl
addr16
and
pop
std
xor
fidivs
push
scas
pavgw
and
sahf
fbld
dec
push
xchg
or
je
mov
jp
sbb
fwait
repnz
jb
xor
fisttpll
in
notl
sbb
adc
insb
and
push
inc
sub
push
inc
sub
bound
push
inc
jns
inc
push
mov
cld
pop
bound
sbb
adc
mov
sbb
rorl
inc
push
or
sbb
or
inc
mov
xor
mov
jge
lahf
leave
cli
xchg
andl
je
sbb
insb
mov
int3
lods
ret
cs
movsl
fldcw
in
cmp
cmp
push
jmp
or
gs
ja
lret
mov
mov
scas
sub
sub
add
std
jecxz
aam
test
cwtl
lcall
xchg
cld
inc
cmp
mov
adc
and
sbb
and
bound
adc
or
nop
cmp
cltd
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
arpl
gs
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
js
imul
je
outsl
insb
jae
jb
inc
imul
imul
and
jno
jbe
mov
pushf
movb
pushf
lea
jmp
add
inc
dec
insl
push
jo
gs
je
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
jne
je
insl
fs
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
insb
popa
jae
gs
inc
imul
je
outsl
outsb
and
jno
jbe
ljmp
mov
cmp
negb
adcb
stc
rorb
pcmpeqw
cmpl
hlt
pop
xor
mov
mov
in
or
and
test
ret
rolb
push
pop
adc
mov
imul
rorl
push
jle
add
sbb
mov
and
jle
mov
xlat
push
and
pop
mov
cmp
sbb
js
negl
mov
adc
dec
aaa
pop
sub
sbb
lods
xchg
sarl
mov
pop
or
ret
xor
mov
inc
ds
push
jae
add
loop
bound
je
scas
lea
pop
mov
cld
mov
fs
stos
and
adc
or
dec
pop
lret
in
add
xchg
scas
or
in
test
jl
mov
mov
inc
xlat
push
cli
shlb
sarl
test
es
pop
pop
outsb
sbb
jmp
inc
movsl
lea
dec
sub
mov
movsb
in
xor
repz
lcall
adc
push
jns
sub
sub
mov
loope
mov
stc
and
cmp
mov
clc
mov
fildll
mov
lock
xchg
dec
cmpsb
and
cmpsb
iret
mov
lret
inc
mov
jmp
push
mov
mov
repz
mov
outsl
add
inc
inc
js
js
fs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
xor
scas
dec
inc
es
mov
push
sbb
imul
icebp
je
adc
xor
pop
cli
push
ja
dec
in
or
push
cli
push
xor
cmp
shlb
icebp
mov
mov
movsl
dec
imul
sub
jle
adcb
xlat
jb
mov
ja
jl
stos
sub
inc
jnp
es
pop
out
pop
lds
insb
pop
inc
xor
addr16
sbbl
lret
jmp
mov
push
addr16
add
jb
sti
mov
loopne
test
mov
push
aaa
push
icebp
xor
divps
push
shr
iret
into
sub
jecxz,pn
aad
or
xchg
jl
je
push
dec
xlat
xor
daa
cwtd
xor
or
aas
test
and
push
cmpb
data16
lret
mov
fwait
and
imul
xchg
ret
enter
stc
push
jp
xlat
jb
mov
xorb
pop
stc
lcall
sti
pop
jbe
push
inc
int
adc
loop
add
inc
bound
adc
and
test
mov
stos
lea
or
pop
jecxz
adc
push
in
mov
das
xchg
iret
negb
mov
ss
inc
adcb
xor
xchg
std
xlat
das
inc
insl
or
lods
dec
imul
and
lods
and
dec
das
mov
cmpsl
sahf
dec
repz
out
xor
mov
dec
push
jne
clc
cmp
mov
fidivrs
ljmp
dec
addr16
shrb
gs
mov
imul
aaa
popf
jge
mov
daa
clc
xchg
xchg
sbb
shrl
insb
inc
adc
fs
das
xorl
push
lds
fdivrl
repz
xchg
mov
sbb
push
dec
repz
push
inc
cmp
jb
cmp
pushf
cmp
movsb
xor
aam
cld
or
jns
stos
andl
and
mov
pop
shr
jg
cmpb
in
aad
mov
mov
jbe
mov
std
push
jne
cmp
repz
jl
stos
je
xor
sbb
je
dec
lcall
xchg
sbb
pop
das
fsubl
sbb
jne
sti
sbb
push
repz
aad
add
add
rcl
int
mov
repz
push
fdivrl
in
cmp
jno
fs
out
adc
aam
test
or
pop
mov
repnz
add
imul
out
and
ficoml
aam
jbe,pn
xchg
inc
jne
mov
in
hlt
xor
hlt
adc
repz
push
pusha
add
inc
dec
insl
imul
inc
imul
imul
and
jno
jbe
lock
call
pop
xor
mov
cld
insb
mov
xchg
mov
cltd
cmpl
cmp
mov
hlt
xchg
out
inc
fistpll
rorb
test
mov
inc
inc
daa
inc
subl
cmpsl
inc
cli
dec
inc
outsl
pop
mov
ljmp
lret
pop
mov
fsubs
lds
jno
dec
ja
in
sbbb
repnz
or
cmp
xchg
pop
outsb
pop
nop
or
imul
mov
lcall
push
fnstenv
ja
cwtl
dec
mov
push
cli
rcrl
mov
mov
ja
mov
pop
pop
xchg
adc
sbb
mov
ljmp
pop
jno
repnz
mov
lahf
nop
jae
sub
inc
cwtl
cmp
mov
aaa
adcl
xchg
pop
mov
mov
dec
inc
ljmp
or
inc
jmp
push
mov
pop
gs
jecxz
mov
mov
cmp
ret
int3
negl
cmpsl
dec
imul
cmp
aaa
dec
add
pop
mov
adc
shll
lods
xchg
lret
sub
sbb
mov
outsl
test
sbb
sahf
mov
out
outsb
pusha
mov
in
add
jbe
jb
outsb
jae
popa
je
jae
jb
outsb
addr16
imul
imul
and
jno
jbe
push
call
or
and
inc
lcall
test
std
cmc
fbstp
out
faddl
int3
sub
lret
mov
subl
or
sub
cwtl
mov
sub
arpl
and
outsl
add
adc
jg
inc
jecxz
mov
repz
push
fwait
cli
fstl
int3
sbb
pop
aaa
fisubs
jbe
jle
inc
mov
push
dec
in
add
ret
out
jecxz
inc
insb
mov
repz
pop
pusha
inc
mov
loope
push
jnp
arpl
stos
inc
pop
shr
and
pop
cmp
and
imul
xor
pop
mov
test
loopne
push
and
add
lcall
xor
loopne
sub
loopne
data16
inc
scas
es
lret
jo
nop
dec
daa
fbstp
jle
inc
scas
inc
and
add
inc
out
mov
cmpb
repz
loopne
sub
stos
leave
jl
dec
nop
jne
xchg
mov
iret
cltd
xchg
pop
cmp
std
and
arpl
jnp
add
push
int
mov
jecxz
insl
pop
lods
pop
adcb
mov
add
xchg
shrl
cmpsb
lahf
mov
jle
pop
repz
mov
mov
loop
movsb
test
iret
loopne
and
jo
sbb
js
cmpsl
popf
mov
inc
lods
sti
sahf
icebp
sbb
adc
mov
inc
xchg
xchg
and
movsb
dec
pusha
sbb
lret
jb
fldenv
clc
sub
inc
sti
aas
add
in
lock
cld
sarl
xchg
xor
jae
ja
sbb
rclb
inc
inc
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
inc
jb
fs
imul
jno
jb
add
add
jo
jb
insl
jae
insb
arpl
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
gs
jne
je
popa
outsb
fs
gs
jno
jb
jbe
add
inc
dec
popa
je
inc
imul
imul
and
jno
jbe
add
inc
inc
arpl
gs
inc
imul
je
outsl
outsb
and
jno
jbe
lea
jne
not
mov
pusha
pushf
push
mov
lea
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
je
insl
inc
gs
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
fs
je
inc
push
dec
je
insl
inc
push
gs
je
insl
dec
inc
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
repz
bswap
lea
cwtl
push
pushl
movsbl
mov
jmp
add
inc
dec
arpl
jae
jne
arpl
inc
imul
imul
and
jno
jbe
fs
outsl
jb
inc
aaa
bound
add
add
js
jne
insb
outsl
outsl
imul
jo
outsl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
pushl
cmp
mov
cmp
test
movb
jmp
add
inc
dec
jbe
je
imul
outsb
popa
insb
imul
and
jno
jbe
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
inc
push
popa
outsb
addr16
jno
jb
je
add
incl
add
fs
je
inc
arpl
imul
and
daa
or
dec
stos
ret
enter
stos
add
mov
pop
loope
ret
shrb
sub
or
xchg
ret
sar
jb
adc
inc
or
sbb
mov
stos
inc
ja
jnp
mov
xorb
sti
mov
es
add
hlt
jns
inc
add
flds
push
or
cli
sbbl
into
sub
imul
inc
and
mov
cwtl
pop
js
outsb
cmp
adc
pop
std
sti
shr
and
nop
cli
sbb
bound
ret
cmp
xchg
mov
mov
adc
je
stos
pop
addr16
in
and
test
jo
je
aas
sbb
xlat
mov
jnp
mov
imul
in
or
inc
sbb
sbbl
sub
fst
scas
mov
sbbb
js
xor
mov
imull
lret
int
or
cmp
rorb
je
dec
out
jb
adc
shrl
pop
insl
fstps
xchg
ds
cltd
or
aad
mov
andl
in
cmp
jne
fimuls
loopne
sbb
pop
mov
push
cwtl
mov
mov
jle
mov
fstpt
sbb
jo
js
mov
popa
pop
lock
add
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
jb
popa
je
push
outsb
fs
jno
jbe
add
inc
push
jns
je
insl
inc
inc
push
jb
inc
imul
js
je
jno
jb
add
lea
jbe
push
jne
pusha
lea
call
pushf
call
add
inc
push
je
arpl
jae
push
inc
imul
sbb
xchg
clc
sbb
push
pop
out
mov
cmp
shll
inc
inc
out
mov
inc
and
push
loope
rol
out
bnd
sub
inc
lds
roll
imul
movsb
mov
negb
sub
push
xor
in
call
cmp
lds
in
inc
adcb
shl
ja
inc
add
inc
stos
dec
es
scas
xchg
fucompp
inc
xchg
fadds
xchg
iret
in
rcll
in
loopne
pop
mov
push
aam
rcr
sub
adc
mov
jecxz
cmp
daa
scas
int3
je
cli
dec
push
rorb
adc
clc
ret
jecxz
mov
fdivr
aaa
addl
xchg
mov
mov
cmp
fildl
jne
fwait
xchg
subl
icebp
xchg
faddl
sbb
insb
dec
insb
ret
stos
or
subb
adc
sbb
insb
dec
cmpb
push
repz
jp
iret
in
sahf
pop
add
mov
movq
xchg
bound
ret
lods
and
mov
shl
jp
dec
push
jae
lret
ja
dec
mov
adc
shlb
aad
arpl
ds
adc
es
adc
fstpt
inc
sbb
cmpsl
mov
push
hlt
aaa
cmpl
gs
cmpsb
adc
jno
fwait
pop
pop
or
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
popa
fs
jb
insl
push
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
insl
push
arpl
outsl
jb
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
dec
outsl
popa
fs
jb
insl
inc
push
push
and
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
add
push
fsubs
rcrb
adc
test
add
decl
mov
btc
cmp
pusha
mov
movb
movw
or
pusha
pushl
pushl
lea
je
pushf
movzbw
xchg
call
add
inc
push
jne
je
bound
outsb
je
outsl
insb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
in
mov
adc
push
ss
stc
cltd
xor
jge
xchg
xlat
cmp
jecxz
cmp
xchg
lret
popa
dec
stos
or
adc
pop
mov
dec
xchg
push
mov
nop
fsubs
push
xorb
ljmp
xchg
ret
mov
adc
xchg
mov
mov
shll
push
adcb
in
outsl
in
jmp
jecxz
and
xor
dec
push
cmp
adc
es
loop
popa
inc
enter
cmpsb
push
bound
or
jmp
js
insl
popa
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
cmp
neg
test
pusha
test
xor
cmc
cmc
ror
pushf
jmp
adc
je
inc
add
arpl
sbb
and
fadds
lods
das
imul
pop
add
cmc
and
out
outsb
inc
sub
insb
inc
cmp
neg
scas
lods
xor
ret
inc
shlb
int3
jno
push
stos
pop
imul
xchg
test
cmc
outsb
je
sub
stos
insl
addr16
mov
adc
pop
in
xlat
jmp
lret
sbb
int
mov
ss
je
inc
in
pop
pop
and
rep
xchg
jge
sahf
aaa
push
mov
xor
lods
imul
and
clc
fs
fdivs
push
repz
mov
dec
and
loop
fisubs
movsb
jne
subl
aaa
sahf
lods
shlb
test
pop
and
rclb
dec
out
not
cmp
sar
xchg
mov
subl
cmpl
jae
inc
sub
imul
insl
je
jecxz
insb
cwtl
sub
stos
ds
jns
push
jl
jb
ds
cmp
jne
into
cmp
sbb
aaa
cli
into
jne
pop
and
jae
int3
in
inc
shrb
test
notl
jb
mov
loop
or
sbb
or
push
stos
jp
xor
leavew
jb
loope
xor
call
dec
mov
lahf
idivl
je
bound
imul
shlb
sub
das
mov
or
je
inc
sub
leave
lods
out
push
xchg
sub
pop
jg
inc
sub
loopne
mov
mov
adc
flds
fisttpll
inc
add
sub
shr
xchg
ss
aam
rcrb
and
adc
mul
push
dec
mov
jmp
test
xlat
xor
fiaddl
scas
pop
pextrw
pop
std
aaa
xchg
imul
jb
xor
roll
out
jbe
data16
scas
inc
lock
arpl
xor
or
adc
nop
cmp
pushf
mov
cltd
mov
sub
popa
xlat
xor
lods
jmp
mov
dec
int
dec
out
jmp
xchg
frstor
rorl
ret
fsubrl
je
outsl
shrb
push
mov
cltd
cmc
mov
in
test
or
fdivs
pop
imul
mov
fidivl
jl
mov
or
sahf
pop
int3
addr16
stos
push
movsb
test
stos
ror
icebp
pop
mov
ja
jno
and
stos
out
xchg
fcmovbe
pop
outsb
rolb
xchg
ret
add
loop
add
lcall
xchg
jge
jl
add
xor
sub
fmul
lea
insb
sub
lcall
rcr
je,pn
push
inc
push
fcoms
out
pushf
fdivp
cltd
loopne
sub
cs
inc
gs
adc
test
sub
lea
jbe
or
sub
adc
mov
lea
shrd
bts
mov
mov
add
pushf
btr
cmc
add
shr
shr
and
bswap
adc
mov
stc
add
bswap
mov
lea
call
call
add
inc
inc
js
imul
imul
popa
insb
imul
and
jno
jbe
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
je
jno
jb
add
insl
loop
sbb
std
shrl
adc
cli
adcl
adc
cmp
pop
mov
fisttpl
shll
push
cltd
ret
inc
cmc
xchg
sbb
xor
add
test
test
or
and
xor
cmc
lds
clc
shrb
pop
or
or
movsl
xchg
or
jno
inc
xor
mov
lods
gs
out
call
cld
lret
lret
xchg
mov
lds
fcomps
pop
std
fidivs
outsb
mov
ss
popf
inc
aaa
arpl
jmp
inc
cmp
movsl
fmuls
stos
mov
mov
inc
jecxz
std
or
inc
arpl
clc
lret
outsl
dec
loop
loope
mov
icebp
sbb
add
adc
push
push
pushf
jno
inc
call
inc
sub
xor
inc
cmp
inc
stc
movsb
inc
cmc
lds
int3
daa
xor
mov
mov
dec
jmp
fisubs
lcall
sub
xchg
ss
jmp
fdivrl
pop
pop
into
xchg
std
loope
sbb
xor
adcb
add
sbb
mov
xchg
jmp
pop
xor
in
mov
leave
je
fsub
cmp
addr16
jmp
inc
and
sahf
xor
movsl
mov
sub
add
ret
icebp
sbb
hlt
xchg
movsl
lea
jne
call
call
add
inc
inc
js
jb
jne
bound
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
gs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
xor
sub
icebp
dec
xchg
sbb
fmulp
into
dec
popf
rclb
andl
dec
fimull
rcll
mov
mov
inc
lcall
cwtl
aaa
imul
fwait
clc
mov
fimuls
dec
sub
rol
daa
mov
testb
mov
or
pop
adc
xor
push
mov
js
jne
xchg
sub
mov
negb
jnp
jle
mov
sbb
push
lea
lret
cmp
cmpsl
or
sbb
mov
enter
aas
adc
sub
mov
or
fisttpl
inc
lods
mov
mov
pop
mov
push
loopne
jmp
sub
in
std
pandn
movsb
or
outsl
sbb
push
in
xor
cmp
jns
mov
testb
icebp
pop
jl
cmp
mov
jae
xor
cmp
cmp
mov
adcb
mov
xchg
sub
scas
xchg
push
int
mov
es
loopne
mov
clc
lock
mov
aas
mov
cmc
sub
repz
or
sbb
pop
popf
cli
fsubrs
das
and
rclb
xor
cmp
in
pusha
lret
mov
jp
hlt
sti
adc
and
loope
sub
addr16
mov
sub
jns
je
insl
inc
inc
push
popa
arpl
addr16
outsl
popa
fs
jno
jo
xor
push
jns
je
insl
inc
push
popa
arpl
addr16
outsb
outsw
push
popa
bound
xor
push
jns
je
insl
inc
push
dec
imul
add
add
insl
imul
jae
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
and
jno
jbe
call
add
inc
push
jns
je
insl
inc
inc
dec
push
je
inc
jb
popa
jns
insb
jb
jno
jb
jbe
add
add
js
outsl
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
and
fs
and
jno
jbe
add
inc
inc
insb
popa
je
bound
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
imul
popa
insb
imul
and
jno
jbe
add
inc
push
js
push
imul
imul
and
jno
jbe
imul
insl
sbb
fidivs
test
sub
cmpl
dec
out
pop
pop
mov
xchg
jp
cmp
cltd
mov
hlt
test
inc
dec
scas
test
mov
and
inc
cwtl
jae
push
jge
mov
xor
mov
or
into
jg
and
mov
dec
mov
fisubrl
lea
f2xm1
pop
lahf
inc
or
pop
push
sbb
add
lcall
int3
sub
or
push
mov
inc
test
push
mov
xor
test
or
test
stos
lret
les
cmpsb
jge
shrl
dec
mov
and
cs
in
jecxz
ja
popa
cld
push
mov
icebp
pop
popa
mov
pop
das
mov
mov
inc
jnp
push
mov
pop
cmp
or
push
mov
cmp
xor
rorl
ljmp
cmp
sbb
into
and
add
shrl
dec
jo
popa
or
sbb
mov
pop
test
inc
or
mov
xor
inc
test
add
adc
ret
xchg
in
test
enter
mov
xor
add
xor
sub
xor
mov
dec
push
jae
rcrb
test
push
sti
scas
iret
mov
repz
data16
cmp
stos
xchg
stc
pop
jo
jae
hlt
push
jbe
sbb
in
and
stos
add
xchg
loope
add
popa
je
jne
imul
imul
imul
jbe
add
inc
inc
js
je
jb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
je
arpl
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
jo
gs
je
outsb
inc
imul
imul
and
jno
jbe
cmp
jmp
add
inc
inc
js
imul
popa
insb
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
outsb
inc
gs
imul
gs
data16
jb
jno
jb
jns
jo
jno
jo
xor
popa
je
inc
push
dec
je
insl
jo
xor
insb
inc
push
fs
jb
gs
imul
outsl
and
add
mov
ss
fsub
mov
insb
pop
mov
sbb
jmp
mov
xor
les
mov
lcall
adc
or
push
push
push
mov
ret
rclb
outsb
xor
mov
xor
mov
imul
add
outsl
mov
inc
jg
loope
outsl
leave
imul
pop
mov
xchg
mov
inc
pop
lock
mov
lock
jge
lcall
nopl
scas
inc
shlb
mov
dec
outsl
add
cld
xchg
jl
mov
push
sysret
or
ss
or
jb
stos
popa
pop
repnz
jg
or
mov
ret
aaa
mov
xlat
mov
jmp
xchg
and
call
sub
pop
test
push
and
shrl
inc
and
push
push
scas
inc
jecxz
dec
je
jne
lahf
mov
pop
inc
shlb
sar
pop
dec
outsl
sub
cmpsl
mov
lock
sahf
jb
data16
iret
daa
ss
sbb
cld
push
subb
sarb
jle
enter
pop
jns
mov
fs
in
fidivrs
xchg
cld
cmp
push
aad
outsl
add
mov
cltd
aaa
mov
xor
add
stos
cmc
popa
lret
lret
popa
lret
jb
cmp
fidivrl
xchg
js
sbb
inc
sub
repz
or
rorl
sbb
lret
in
ret
and
mov
icebp
xor
or
adc
mov
popf
nop
das
loop
xchg
inc
imul
mov
mov
jb
jle
cmp
inc
sahf
fldcw
add
mov
or
out
int3
jae
cld
push
aaa
push
xor
xchg
sbb
mov
fimull
sbb
sldt
inc
push
outsb
arpl
gs
inc
imul
je
outsl
outsb
and
jno
jbe
or
icebp
addr16
push
mov
pop
push
pop
xchg
pop
lds
pop
adcl
mov
sti
sbb
cli
pop
inc
nop
iret
or
dec
sarl
scas
sahf
das
and
inc
jb
jp
mov
call
pop
mov
mov
jb
ja
inc
fdivrl
mov
pop
xchg
leave
shrb
pop
imul
lds
mov
push
push
mov
dec
fcomps
shll
scas
inc
mov
aad
push
jge
jge
icebp
insl
xor
adcl
rcrb
sub
adc
mov
xor
cmc
sbbl
cmp
test
xorl
push
inc
imul
xchg
pop
cmp
jae
negl
jnp
sti
pop
adc
ja
js
mov
aad
sbb
dec
and
sti
dec
repnz
cltd
mov
scas
inc
and
mov
mov
ss
push
mov
fnstenv
lcall
cwtl
shlb
icebp
pop
mov
in
fiadds
pop
es
push
push
sub
xchg
sub
adc
in
pop
sub
loop
fnstenv
mov
adc
fbld
dec
mov
xorl
dec
data16
xchg
jmp
sbb
test
and
mov
popa
pop
mov
or
dec
gs
jo
outsb
je
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
inc
imul
jno
jb
jbe
arpl
add
inc
dec
insl
push
arpl
je
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
pop
insl
insb
outsl
insl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
sub
call
add
inc
dec
insl
jo
jae
insb
imul
insb
imul
and
jno
jbe
movl
mov
call
add
inc
inc
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
popa
jb
outsl
fs
jno
jb
add
pushf
jmp
fadd
dec
sbb
sub
dec
scas
inc
scas
mov
mov
out
rcr
sbb
inc
adcb
shlb
xor
addr16
insb
lock
outsb
dec
arpl
lcall
insb
jae
jb
inc
imul
imul
and
jno
jbe
add
inc
dec
popa
jb
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
data16
inc
imul
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
outsl
inc
gs
jb
jns
jno
jb
add
add
insl
popa
imul
popa
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
outsl
outsl
insb
gs
imul
and
jno
jbe
add
inc
inc
js
imul
outsl
outsb
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
jo
insb
jns
imul
jae
and
jno
jbe
add
inc
inc
insb
popa
jae
gs
inc
imul
je
outsl
outsb
and
jno
jbe
push
je
fs
and
mov
adc
gs
ret
jmp
shrb
push
loope
int3
or
cltd
inc
sub
pop
ret
inc
pop
cmp
mov
cmp
mov
lock
cmp
pop
mov
pop
ds
jb
push
mov
fnstcw
mov
ret
shrb
bound
lds
mov
adc
pop
fs
push
scas
inc
xchg
jg
jge
ds
dec
mov
call
mov
out
sub
shr
pop
xor
lret
push
sbb
mov
js
out
push
mov
adc
inc
push
insl
aad
cmp
jnp
outsb
cmp
dec
pushf
mov
and
mov
mov
negb
xor
stos
rclb
jns
scas
dec
out
ret
jmp
sub
imul
mov
inc
and
inc
and
arpl
jns
xlat
mov
in
lods
aam
orl
mov
xlat
xor
xchg
negl
arpl
out
lret
pop
imul
sub
or
outsb
cmp
scas
lds
sbb
push
add
cmp
push
sub
es
xlat
lods
cmp
data16
push
jp
sbb
jle
pop
leave
ret
jp
js
ret
lahf
jo
xchg
cmp
mov
bound
movsl
les
in
push
mov
sbb
sub
repz
sbb
mov
xor
shlb
in
loopne
jle
cmpb
mov
dec
jmp
das
lcall
rcrb
cltd
mov
insl
jb
aas
outsl
xchg
lods
mov
mov
out
lods
das
andl
xor
rorb
adc
sub
jg
xchg
mov
movsb
data16
xor
push
cmp
push
incb
fldenv
jg
sub
lcall
xor
push
negb
push
inc
lods
adc
inc
pushl
lea
jne
neg
clc
rol
test
mov
sar
push
sub
pusha
lea
clc
cmp
sub
pusha
pushf
lea
jmp
add
inc
inc
js
insb
outsl
bound
imul
popa
insb
imul
and
jno
jbe
mov
cmc
mov
bt
bt
cmp
repnz
pushf
lea
jne
bswap
call
add
inc
inc
js
gs
gs
imul
and
jno
jbe
add
inc
push
popa
jb
popa
outsb
je
inc
inc
push
popa
jb
outsl
dec
push
je
and
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
popa
jb
popa
je
add
call
cmc
call
add
inc
push
jns
gs
imul
imul
and
jno
jbe
cmp
arpl
inc
in
push
pushf
arpl
sbb
push
cs
jmp
leave
loope
stos
or
mov
leave
or
aas
jg
mov
lret
adc
sti
cli
sbb
imul
loopne
mov
add
call
sub
sbb
ljmp
xor
aad
inc
pop
dec
iret
xor
jae
sbb
mov
push
mov
mov
add
xchg
sbb
ficomps
or
nop
jbe
cld
push
ja
xchg
inc
mov
and
shl
or
cmp
pop
pop
cmpsl
jmp
lock
xchg
sub
inc
cmp
jae
mov
ss
in
mulb
jp
jge
ss
cmp
jmp
jge
insl
cli
push
jmp
lds
inc
and
push
cmc
push
cmpsl
inc
push
mov
mov
ja
add
mov
sub
stos
lds
cmpsb
loopne
xor
inc
mov
mov
xchg
push
rep
mov
jbe
mov
cmc
and
mov
js,pt
insl
loop
inc
js
fwait
pop
out
push
lods
in
push
mov
stos
test
mov
cmp
cmpl
mov
cmp
leave
in
ljmp
jge
not
add
add
inc
push
jne
imul
outsb
gs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
popa
jae
ss
inc
imul
je
outsl
outsb
and
jno
jbe
mov
pushf
lea
jne
pusha
lea
movb
pushf
call
add
inc
push
fs
je
inc
push
dec
je
insl
inc
add
mov
in
inc
or
aaa
outsl
jp
dec
sub
sub
movsb
outsb
notb
mov
add
dec
jmp
inc
push
xlat
mov
adc
rclb
jecxz
fildl
and
adc
mov
jns
cmp
xchg
sub
imul
push
test
lret
push
sub
xchg
xchg
sti
les
scas
dec
cmp
sbb
insb
xlat
cmp
inc
push
xor
imul
push
test
imul
dec
test
scas
inc
in
pop
popa
mov
pushf
mov
movsb
pop
sub
xchg
mov
ret
cld
sub
iret
data16
push
sti
push
jecxz
pop
outsl
ss
stc
mov
cmp
xchg
fs
gs
lcall
jns
stc
adc
popf
jb
sub
lret
mov
jecxz
jge
shl
pop
sbb
cmc
pusha
jmp
imul
push
test
fstpl
aad
xchg
jp
jne
std
adc
push
xchg
pop
outsl
jecxz
rcrb
or
jl
adc
xchg
mov
mov
iret
or
push
mov
lcall
cltd
cs
in
out
mov
fimull
jl
mov
scas
xor
outsl
mov
pop
push
lcall
outsl
dec
lods
add
sub
sbb
out
roll
add
insl
popa
imul
popa
jae
imul
imul
and
jno
jbe
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
cs
mov
pop
sbb
add
data16
add
mov
xor
and
cmp
or
movsb
or
xchg
rcr
les
roll
inc
cld
hlt
cmp
ret
inc
add
vcomiss
sub
daa
or
cmp
rorl
lods
test
mov
sub
leave
ja
cmp
enter
or
mov
pop
sbb
xchg
mov
jbe
jg
in
rolb
data16
lods
sarl
dec
jmp
and
mov
sbb
jl
adc
stos
rorl
sub
jg
xchg
popa
movsl
pop
cli
shl
inc
inc
push
ucomiss
mov
jg
add
xor
das
and
out
mov
jne
clc
xchg
repz
push
xor
aaa
imul
dec
std
mov
inc
dec
or
mov
pusha
ss
and
mov
sub
cmp
dec
dec
mov
int3
flds
bound
pop
lods
stos
test
pop
jne
leave
push
cmpsl
add
add
mov
mov
popf
sbb
xor
mov
sti
or
lea
mov
call
jl
fidivl
pushf
pop
in
sub
cmp
mov
pop
into
push
sub
and
push
lods
lret
stos
xchg
daa
ret
mulb
push
dec
sub
inc
add
inc
dec
arpl
insb
gs
imul
imul
imul
jbe
push
lea
jne
daa
aaa
dec
cwtl
sub
aaa
add
shl
mov
sub
cmc
sub
ror
add
sar
neg
mov
bt
pushf
test
lea
jbe
push
pushf
movb
lea
je
call
jmp
pop
mov
pop
sbb
into
xchg
in
lea
adc
icebp
sub
stc
cs
mov
dec
cs
rorb
push
mov
jp
xor
ffreep
pop
popf
inc
imul
jnp
subl
fnstenv
sub
sbb
mov
call
lret
les
out
call
pop
sbb
je
jne
aaa
push
dec
or
mov
dec
push
jp
mov
or
mov
loopne
and
ret
in
inc
xor
nop
cmp
lret
imul
mov
adc
jmp
test
loopne
stos
push
mov
test
cld
loop
sbb
scas
pop
jo
pop
mov
pop
cmp
sub
and
imul
insb
or
jmp
push
sub
inc
mov
mov
jp
icebp
push
ss
mov
pop
repnz
sarb
mov
lret
pop
sub
and
in
add
xchg
rcrl
cmc
add
mov
aam
mov
cli
leave
pushf
hlt
sbb
sub
or
nop
or
lock
jbe
jge
ljmp
cmpsb
jge
xor
jb
and
cld
imul
xchg
sbb
fucom
mov
xchg
xor
xor
rol
dec
xor
mov
inc
dec
insl
push
arpl
je
inc
imul
je
outsl
outsb
and
jno
jbe
and
inc
jne
mov
lds
je
bndstx
jbe
dec
hlt
sub
mov
hlt
pop
cmc
pop
js
xlat
sub
fcmovb
or
sahf
mov
mov
neg
idivl
popa
shr
sub
mov
xorb
xor
xorb
push
and
lock
push
cmc
les
ret
dec
hlt
insl
aas
pop
sbb
in
and
scas
xchg
sbb
push
cmp
enter
pop
fcompl
cmp
mov
aad
fiadds
cwtl
cmpsb
in
add
and
aas
adc
inc
lea
je
arpl
arpl
subb
hlt
scas
inc
fisttps
mov
push
imul
bound
xchg
xchg
cld
push
out
or
int
mov
lods
sub
mov
and
inc
rcl
nop
xor
or
mov
add
xor
mov
push
gs
ret
cmpsl
ret
ljmp
sarl
lea
mulb
xchg
jnp
pop
push
stc
and
xchg
int3
and
jmp
gs
cli
in
ja
popf
inc
and
jnp
shll
outsl
loop
ja
imul
jecxz
popf
jae
sub
push
sbb
call
jp
mov
mov
sub
loop
mov
fistpll
fistl
out
xchg
fbstp
add
jbe
popa
jae
fs
addr16
imul
imul
and
jno
jbe
mov
and
call
mov
lods
pop
sbb
test
into
in
int
loop
in
push
xchg
out
repz
loop
insl
stc
adcl
lret
arpl
aas
sub
ret
rorb
and
inc
pop
les
int
pop
dec
lock
movsb
iret
jmp
inc
xor
xor
icebp
inc
jns
add
cmc
lahf
movsl
dec
insl
push
mov
or
sbb
jl
mov
fsubl
sahf
orl
jns
pop
nop
lret
sub
sub
lret
arpl
push
push
dec
fsts
in
fistpll
xor
pusha
inc
jp
test
xorb
pop
xchg
test
cmpsb
adc
int
lods
pop
in
jmp
sbb
sbb
mov
mov
xchg
mov
dec
xlat
adc
shll
push
sbb
mov
subb
mov
pop
ficompl
mov
imul
mov
push
jp
cmc
sbb
mov
dec
xchg
add
hlt
insb
inc
loope
sub
dec
nop
ret
fdivs
mov
or
push
ss
jns
mov
stc
adc
inc
decb
jbe
xchg
scas
lcall
mov
dec
cmpsl
add
lret
scas
test
lods
xchg
mov
inc
sub
mov
pushl
push
pushl
pushf
lea
ja
pusha
pushf
lea
jb
bt
bt
cmc
cmpb
pushf
pushf
push
lea
jne
mov
shr
stc
mov
cmc
test
test
pushf
add
cmc
push
movzwl
movsbw
sub
mov
stc
clc
mov
add
call
pushl
popl
push
mov
pushl
ret
add
inc
dec
jbe
outsl
outsb
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
imul
sbb
inc
cs
cmpsb
mov
leave
adc
ss
into
cmp
rep
inc
xlat
sub
movsl
enter
add
jp
jl
ret
shrb
and
test
rol
or
add
xor
in
daa
add
in
into
or
fistps
inc
jno
cmp
adc
repnz
jge
mov
sbb
into
call
add
push
pop
and
jecxz
daa
xcrypt-ecb
cmpsl
mov
int3
or
fisttpl
in
cmpsb
ljmp
fists
mov
inc
out
sbb
cwtl
scas
lahf
push
mov
imul
jecxz
jl
sub
arpl
lahf
addr16
dec
jo
or
data16
je
jbe
aaa
pop
cmp
mov
pop
jno
ja
lretw
js
stos
xchg
add
inc
outsl
dec
loopne
pop
sti
sub
shl
jmp
or
xchg
sbb
into
or
fsubs
push
and
jmp
insl
leave
fs
je
add
ss
out
clc
and
pop
push
sub
mov
test
movsw
or
ljmp
fnstcw
mov
sarl
cs
xchg
retw
hlt
fistpll
out
mov
pop
gs
pop
bound
lret
jno
out
or
xlat
mov
jns
jae
cmc
cmp
imul
sarb
test
lea
je
stc
clc
clc
jmp
jmp
clc
clc
mov
pusha
test
pushf
movb
lea
jno
pushf
lea
je
stc
clc
add
cmp
pushf
cmp
movw
jmp
mov
inc
xchg
jbe
cli
sahf
jge
fistpll
pop
popf
inc
dec
mov
pop
pop
outsl
push
add
in
xor
cmpsl
ss
iret
mov
mov
dec
stos
inc
les
out
call
add
insb
gs
outsb
imul
je
outsl
outsb
and
jno
jbe
inc
shl
push
sbb
subb
push
fstl
repz
mov
in
outsl
mov
leave
cmp
pusha
add
xor
push
clc
popf
ja
ret
inc
xor
dec
sub
pop
and
or
and
cwtl
dec
inc
push
mov
cmp
push
cmp
pop
insl
dec
out
add
les
cmp
gs
sbb
fwait
mov
adcb
and
fists
shrl
adc
bound
lods
inc
in
dec
add
daa
push
repnz
sub
std
xchg
mov
adc
or
mov
sub
mov
and
and
pop
enter
cmp
ret
fisubs
lock
cmp
pop
jo
ss
notb
pop
fsts
jecxz
imul
lret
inc
adc
push
lock
cmp
scas
outsl
test
adc
pop
and
shll
pop
cmpb
cmp
xor
movl
shrl
fdiv
ret
sbb
ss
cmp
arpl
shr
lock
xchg
call
dec
test
cwtl
loopne
sub
test
cwtl
add
jnp
in
in
and
dec
cmpsb
mov
jbe
cmp
int3
push
out
pop
lods
lock
add
popf
xor
repz
push
push
jecxz
aad
mov
call
add
inc
push
popa
insb
gs
imul
and
jno
jbe
add
inc
inc
js
imul
inc
imul
je
outsl
outsb
and
jno
jbe
dec
arpl
bound
add
add
insl
push
arpl
je
imul
imul
and
jno
jbe
add
inc
dec
js
jne
insb
outsl
outsl
imul
jo
outsl
inc
imul
imul
and
jno
jbe
lea
je
pushf
mov
jmp
xchg
mov
push
sbb
or
dec
sub
std
fcoms
jecxz
xchg
or
mov
mov
xor
or
popf
mov
xchg
adc
shl
xchg
xor
xor
add
add
in
cmp
stos
xchg
ljmp
jo
xchg
outsl
add
dec
cmpsb
and
sub
bound
xchg
push
sbb
pop
xor
repz
mov
mov
jl
fwait
pop
movsb
or
and
mov
mov
mov
in
clc
ret
mov
insl
int
inc
pop
push
push
and
lcall
mov
xor
testl
or
test
aam
loopne
lcall
test
test
adc
jae
xor
gs
cmp
dec
mov
and
inc
push
cld
pop
mov
nop
xor
mov
cltd
dec
xchg
push
cmp
lods
jmp
mov
mov
stos
roll
add
jbe
add
mov
add
sub
nop
mov
fidivl
inc
out
xchg
lea
int
jae
mov
sbb
cld
outsb
push
lea
jnp
push
pop
out
cs
add
fdivl
or
pop
nop
jb
movsb
pop
sub
jmp
out
mov
daa
dec
jmp
or
or
pop
sti
cmp
notb
push
fs
je
inc
push
dec
je
insl
dec
imul
je
imul
je
jno
jb
add
not
dec
sbb
dec
daa
in
test
jne
xchg
and
jo
cld
jle
shrb
adc
les
in
stos
or
mov
inc
out
fistpll
dec
pop
pop
ret
shl
xchg
sub
sbb
sbb
and
push
mov
icebp
or
imul
es
dec
xor
xor
or
mov
pop
mov
les
lods
mov
dec
sbb
xchg
jg
stos
mov
in
adc
leave
es
loopne
pop
xor
or
mov
pop
jge
notb
jg
mov
cmp
adc
push
pop
inc
test
mov
dec
cmp
fiadds
sub
push
xor
inc
push
gs
mov
mov
loopne
xlat
or
test
sbbb
outsb
rol
push
stos
inc
jg
xor
jg
ds
or
test
cmp
loop
dec
sbb
es
psubusw
xchg
cmp
out
mov
or
pushl
mov
lahf
call
adc
fs
xor
lret
mov
stc
push
sub
fnstenv
jnp
js
inc
imul
lock
xlat
pop
xor
dec
imul
jb
jge
mov
adc
popf
mov
or
ret
imulb
mov
dec
jge
sbb
shl
jmp
jl
arpl
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
outsl
fs
jno
jb
add
add
fs
je
inc
push
dec
je
insl
dec
imul
dec
popa
outsb
addr16
addr16
gs
jno
jb
add
add
insl
insb
jae
push
popa
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jo
jne
imul
insb
imul
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
inc
gs
jb
addr16
insl
popa
addr16
jno
jb
add
add
jbe
jne
je
outsb
inc
imul
imul
and
jno
jbe
sbb
jo
hlt
lahf
and
ljmp
add
insb
inc
enter
enter
pop
ljmp
or
imul
ret
rcrb
adc
add
imul
mov
sti
jl
enter
adc
jg
and
xor
ret
shrl
mov
iret
cmpsl
pop
imul
mov
jmp
testb
inc
cmpb
xchg
lods
push
adc
push
xor
sub
shr
dec
in
sub
les
and
lahf
mov
dec
call
mov
adc
outsl
scas
pop
jbe
outsb
dec
filds
stc
push
test
aam
cmp
in
inc
int3
dec
jecxz
inc
shrl
les
jae
xor
pop
xor
mov
js
pavgw
mov
dec
sbb
mov
mov
and
sub
xor
mov
outsl
mov
xor
mov
ja
std
fisubrl
imul
arpl
into
xchg
jno
int
insb
cmp
jmp
sbb
and
push
and
movsb
cld
js
dec
and
mov
in
pop
lret
dec
vphaddwd
cmp
stos
cmp
cmpsb
mov
sbb
popa
or
sub
pop
fnstsw
fnsave
inc
es
xchg
xor
cmpsl
lea
andl
dec
cli
pop
cmpsl
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
je
insl
dec
outsl
fs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
jo
xor
popa
je
inc
push
dec
je
insl
outsl
outsl
add
add
fs
je
inc
push
dec
je
insl
dec
imul
dec
outsb
push
jne
jb
dec
je
insl
and
jno
js
outsb
jo
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
fs
je
inc
push
dec
je
insl
and
add
add
popa
jb
popa
outsb
je
inc
imul
imul
and
jno
jbe
xchg
sbb
or
shl
call
fmull
stos
fisttps
ret
adc
sbb
mov
or
ds
ret
inc
gs
xchg
xor
or
mov
or
call
les
xor
pop
iret
jp
leave
leave
arpl
jl
cmp
in
sbb
ret
loope
sbb
ret
push
inc
sub
fiadds
add
les
xor
inc
rcrb
iret
cmp
test
pop
in
int
xor
mov
and
nop
inc
ljmp
sub
add
push
cmc
data16
jb
jnp
sub
sbb
xchg
xor
call
rcl
data16
cmpl
mov
cwtl
je
mov
sub
mov
sub
sub
inc
inc
add
arpl
lods
mov
popf
pop
test
aad
aad
das
xor
sarl
negl
pop
es
push
notb
cmp
aad
sub
cmpb
cmp
lcall
mov
cmpsb
fidivl
xor
or
mov
and
out
out
mov
fdivr
fistpll
nop
mov
jb
push
inc
mov
outsb
xchg
xor
rcl
aad
cmp
f2xm1
fidivrs
sar
jae
nop
sub
bound
inc
and
pushf
mov
movb
pushf
pushl
ret
mov
inc
mov
push
cmc
pop
pop
int3
test
push
popf
inc
popa
mov
xlat
lahf
incb
daa
jnp
cmp
xor
xlat
scas
or
and
ret
shlb
dec
sbb
sbb
adc
ret
into
pop
ljmp
jmp
stos
ja
inc
js
xchg
test
les
pop
fdivr
lds
inc
mov
out
out
enter
sub
push
mov
test
cmp
pop
clc
fnstenv
clc
xchg
mov
cmp
in
in
imul
xor
mov
addr16
lock
inc
mov
fsubs
pop
movsb
push
and
dec
in
dec
das
mov
mov
in
push
cmpsl
dec
xor
cmc
fsubrl
into
bound
and
xlat
sub
pop
jp
cld
pop
jo
inc
push
rcrl
xor
add
sub
inc
call
jnp
lds
mov
ds
repnz
xchg
push
lea
in
loope
lods
pop
sub
adc
mov
fdivr
mov
fsubrl
mov
adc
out
xor
sbb
jns
pop
imul
lods
gs
add
mov
and
cmp
jae
add
fsubl
or
mov
xchg
into
bound
enter
cmc
adc
jns
notb
std
dec
loopne
sbb
repnz
jmp
lea
jne
ror
mov
pushf
lea
jmp
pusha
push
movl
movb
call
lea
je
push
pushf
lods
stc
neg
stc
stc
xor
pushf
clc
clc
pushf
ror
pusha
cmp
call
push
lock
std
std
xchg
data16
mov
ret
jle
adc
ret
dec
sub
pushf
mov
pop
es
cld
out
in
sbb
and
dec
inc
sub
cmpsl
aam
push
movb
adc
test
xchg
jle
add
mov
scas
lds
ret
mov
mov
enter
fmuls
add
arpl
jae
outsb
outsw
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
imul
imul
imul
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
push
jo
popa
je
and
jno
jbe
add
inc
push
jno
je
insl
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
inc
imul
arpl
jno
jb
xor
push
fs
je
inc
push
inc
imul
je
ss
fs
je
inc
push
inc
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
xor
ss
fs
je
inc
push
push
popa
insb
jne
push
jns
add
popa
inc
sbb
andb
mov
inc
pop
inc
and
bound
sbb
leave
scas
mov
fcomp
push
lods
or
clc
pop
xor
push
ret
rorb
push
into
pop
pop
push
fldcw
imul
fiaddl
cwtl
mov
add
mov
enter
jb
or
shrl
out
mov
les
mov
jp
jo
mov
and
in
insb
dec
and
push
aam
cs
cli
adc
mov
inc
lcall
rorl
loope
aaa
cmp
lahf
movsl
int3
cmpsb
adc
adc
les
jns
inc
addr16
add
in
std
shl
push
popf
push
sbb
mov
mov
mov
push
aas
pop
jno
jns
sbb
pop
inc
call
and
ds
sbb
sub
xchg
mov
lock
arpl
mov
xor
adc
ja
mov
jns
insl
push
or
or
movsb
sub
jbe
out
in
outsl
lahf
or
or
vcmpps
cmp
jge
insl
mov
es
push
nop
mov
out
cmp
std
pop
ljmp
imul
xchg
cmpl
popa
popf
fs
xlat
inc
jp
imul
inc
call
subl
push
mov
pushf
std
mov
inc
into
inc
sbb
in
ret
arpl
mov
enter
inc
or
jp
push
loope
idivl
aam
pop
jb
neg
cmp
inc
jmp
push
jb
subb
rcl
addr16
sbb
lock
in
pop
mov
xchg
fsubrs
in
xlat
imul
adc
add
or
les
dec
xchg
mov
inc
sbb
mov
dec
mov
fistpl
loopne
loopne
imul
arpl
in
stos
divl
add
data16
lret
int3
imul
addr16
cmp
mov
ret
das
clc
push
add
mov
pop
push
xchg
inc
jmp
int3
stos
cwtl
std
xchg
cmp
negb
mov
insl
mov
jne
outsb
icebp
inc
sbb
sbb
popa
xchg
movsl
loopne
fsubrs
aad
push
or
mov
test
push
mov
aas
inc
xchg
mov
pop
popf
push
repnz
insl
mov
mov
xor
call
pop
add
roll
mov
outsb
scas
aad
pop
arpl
push
jecxz
cmpsb
stos
jmp
cmp
or
outsl
cmpsb
inc
pop
pop
push
push
cmp
cltd
mov
dec
mov
inc
ret
mov
es
xor
sub
inc
je
je
xor
add
popa
repnz
imul
movsl
mov
jecxz
sub
cmpsl
comiss
or
mov
cmp
inc
pop
mov
or
mov
mov
cs
cmpsl
outsl
cmp
mov
dec
sub
out
les
mov
mov
xor
sbb
sbb
lds
and
jns
mov
addr16
test
push
jge
sti
lahf
jo
mov
inc
loop
sbb
mov
es
add
cs
repz
testl
sbb
icebp
cwtl
jl
dec
addps
pushw
jge
pop
call
push
stos
rcr
mov
sbbb
lret
jae
aas
xchg
mov
sbb
xlat
pop
mov
das
xchg
pusha
jl
inc
sbb
cld
adc
xor
in
adc
cmpsl
push
je
or
test
mov
mov
xlat
jmp
rorb
call
testb
int3
fstps
jg
pavgb
rcrb
shll
test
adc
and
push
shrb
jns
inc
es
xchg
in
inc
mov
mov
inc
cmpsb
push
call
aas
test
mov
pushl
out
push
std
mov
or
pusha
mov
jmp
adc
sub
cmp
pushf
pushf
movb
mov
lea
jmp
add
inc
push
jns
jne
imul
imul
imul
jbe
rolb
jmp
stc
shll
adc
rcrb
dec
push
mov
push
out
mov
ja
pop
fildl
movsb
lea
test
repz
or
jbe
ret
cmpsb
ret
xchg
xchg
daa
std
dec
push
jl
or
and
mov
xlat
mov
mov
push
push
cmp
ffree
pop
shr
mov
inc
mov
sbb
jno
dec
rol
outsb
or
and
adc
pusha
mov
mov
sub
xor
lea
xlat
cmp
nop
and
sub
xchg
mov
pop
jp
mov
insb
inc
leave
jo
clc
test
mov
push
push
lods
add
jmp
jmp
jae
aad
orl
cwtl
call
enter
or
cmc
dec
insb
fbld
inc
imul
les
repz
xchg
cmp
scas
ja
mov
mov
sub
ds
xor
or
xor
and
test
fcmovnbe
cmp
in
mov
cli
test
gs
xchg
mov
xlat
fmul
cmp
jp
andl
in
mov
jno
add
fcompl
or
jns
inc
call
jae
mov
cld
add
jmp
in
movsb
sbb
sub
xchg
sbb
lahf
pusha
ret
pusha
inc
lods
lret
in
dec
outsb
test
imul
xchg
incb
fidivrl
sbb
mov
mov
notb
jge
mov
loopne
xchg
test
icebp
mov
push
je
jae
cmp
mov
in
push
push
jg
clc
push
cmc
popa
lret
fdivrl
jae
or
inc
add
xchg
adc
outsb
and
add
mov
push
mov
out
lahf
sub
push
pop
adc
jo
and
insb
mov
push
jp
stos
add
shll
clc
ljmp
cmp
inc
inc
lods
subb
cmpl
sbb
xchg
inc
mov
pushf
cmp
mov
pop
dec
imulb
or
in
add
add
and
movsb
xchg
sub
aam
push
cltd
sti
xchg
inc
mov
push
and
stos
add
pop
cld
popf
movsl
pop
add
aas
sbb
pushf
jge
stc
inc
sbb
fidivs
and
std
xchg
sbb
popf
inc
mov
or
mov
push
subb
cmp
add
out
cmova
mov
fidivl
mov
xchg
inc
adc
or
aam
jmp
sub
int3
je
adc
push
mov
fmuls
xor
enter
fiaddl
lahf
mov
fisttps
iret
pop
outsb
cmp
insl
sbb
mov
jp
popa
add
inc
stc
cltd
mov
aas
push
cmp
xor
xchg
jmp
rol
push
add
fs
je
inc
push
dec
je
insl
dec
imul
arpl
gs
fs
jno
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
je
imul
js
outsl
insl
gs
jns
imul
imul
and
jno
jbe
jmp
add
inc
dec
arpl
jb
outsb
arpl
jbe
jb
imul
outsb
popa
insb
imul
and
jno
jbe
add
inc
dec
jbe
outsl
outsb
jae
jae
imul
imul
and
jno
jbe
add
inc
dec
insl
popa
imul
inc
imul
imul
and
jno
jbe
aam
or
xchg
cmp
inc
push
cwtl
or
xor
daa
and
and
mov
inc
bound
sub
push
adc
or
aaa
pushf
icebp
cs
ret
iret
jecxz
adc
icebp
mov
imul
push
mov
mov
arpl
out
pop
sarl
xorl
repz
lret
out
mov
pop
icebp
ds
and
shrl
call
xchg
pop
cmp
and
or
dec
in
mov
shrb
push
pop
lds
jns
dec
je
bound
ja
jle
mov
mov
xor
pop
call
bound
icebp
mov
cmc
dec
mov
clc
int3
mov
aad
mov
xlat
jge
mov
xchg
sub
outsl
xchg
cli
cmpsl
jg
popa
dec
mov
sub
mov
pop
mov
roll
fsubr
lds
std
out
pop
jmp
adc
ljmp
sar
lcall
repnz
add
cmc
mov
push
ljmp
les
pop
and
es
addr16
add
jo
clc
sbb
add
mov
cs
or
pop
mov
xor
orb
sub
pop
mov
dec
lahf
test
aad
mov
cld
lahf
cltd
mov
xchg
jmp
and
cs
push
aaa
pusha
pusha
lea
jbe
push
push
pusha
lea
jmp
and
cmp
or
jp
shrl
test
ss
arpl
lds
es
adcb
mov
mov
xor
out
ret
lods
mov
pop
inc
pop
sbb
push
mov
cwtl
hlt
inc
bnd
test
push
cmp
cmp
jno
mov
lcall
jae
sbb
testl
sub
test
fdivrl
push
jno
jns
aad
xlat
jb
mov
jno
negb
popf
xor
xor
pop
mov
cmp
push
mov
dec
repz
incb
dec
int
sbb
cmp
cltd
add
jno
cmp
subl
daa
or
out
test
sbb
xchg
stos
xorb
cmp
jb
and
rorb
push
mov
or
sbb
arpl
jae
notb
cli
sarl
icebp
ja
lret
aas
mov
out
aad
add
or
inc
mov
popf
xor
xlat
fistl
pop
mov
arpl
shlb
push
mov
mov
les
dec
jge
push
or
pop
popa
mov
test
pushl
hlt
dec
sbb
push
hlt
aam
adc
aam
pushf
pop
adcl
add
js
jb
gs
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
gs
popa
imul
imul
jno
jb
outsl
add
add
js
popa
je
jne
imul
imul
imul
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
outsb
push
gs
imul
gs
data16
jb
jno
jb
jns
jo
jno
jo
xor
popa
je
inc
push
dec
je
insl
jo
xor
insb
inc
push
fs
jb
gs
imul
outsl
outsl
and
add
mov
incl
add
popa
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jne
je
gs
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
insl
arpl
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
dec
popa
jae
jne
imul
insb
imul
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
dec
jae
insb
popa
jae
and
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
aaa
push
jns
je
insl
inc
push
dec
gs
inc
insb
popa
jae
add
add
js
imul
jae
jae
imul
imul
and
jno
jbe
add
inc
dec
arpl
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
jo
jae
arpl
imul
je
outsl
outsb
and
jno
jbe
add
inc
pop
insl
insb
outsl
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
push
int
sbb
negb
out
data16
mov
mov
xor
lret
mov
out
and
loope
out
mov
sahf
or
mov
addr16
ret
sub
dec
jbe
push
add
imul
stc
cmp
sub
pop
hlt
rorl
or
mov
das
or
ret
jmp
add
or
dec
shl
ss
popf
mov
mov
cmpsb
jno
and
sub
jmp
or
and
insl
xchg
popa
or
mov
cmp
dec
test
pop
sti
push
cmp
ljmp
icebp
dec
mov
pop
pop
push
imul
cli
xchg
clc
cmp
mov
test
test
call
or
inc
fildl
inc
push
jnp
cmp
push
ja
mov
lcall
mov
sub
das
and
or
cli
popf
cmp
aaa
movsb
adc
into
mov
adc
shrb
inc
xchg
xor
call
imul
add
and
loopne
aaa
das
lds
sahf
dec
mov
ljmpw
add
lahf
popa
aad
jno
jns
or
push
aas
xchg
xor
pop
movzwl
gs
sub
in
fs
sub
sti
std
repz
xor
es
add
jns
je
insl
inc
inc
dec
outsb
je
inc
outsl
jo
and
jno
jb
xor
gs
inc
and
push
gs
popa
arpl
je
aaa
push
jns
je
insl
inc
dec
dec
outsb
je
jb
popa
arpl
js
xor
gs
inc
and
push
gs
popa
arpl
je
aaa
push
jns
je
insl
inc
dec
dec
outsb
je
jb
popa
arpl
add
inc
or
cmp
inc
add
jl
in
loopne
add
lcall
fdivl
jns
clc
shl
mov
xlat
outsl
mov
jo
add
shr
mov
insl
pushf
or
sbb
lods
xor
ss
sbb
loope
cmp
inc
clc
push
pop
pop
fcomi
fidivs
mov
pushf
movsl
insl
push
pop
shlb
stc
repz
mov
dec
add
cmp
and
mov
dec
movsl
inc
pop
mov
xchg
repnz
bt
add
call
int3
popf
jp
pusha
pusha
movl
pushl
push
jmp
loope
push
xor
pushf
mov
notl
mov
push
xor
inc
xor
lds
js
xor
mov
insl
inc
aam
ljmp
jns
notb
sub
xor
lret
mov
pop
dec
fdivp
mov
dec
xor
dec
int3
in
sti
sar
mov
pop
ds
xor
inc
mov
cmp
jnp
xchg
xchg
scas
push
jp
dec
pop
dec
fiadds
sub
stos
ss
cltd
pop
test
das
inc
loope
scas
add
jle
add
sahf
fsubrs
jb
pop
adc
pop
popa
sahf
or
and
lcall
pusha
adc
xor
xchg
xor
out
mov
mov
sti
insl
cmp
lea
adc
test
add
subl
xor
clc
fistpl
dec
lods
push
ljmp
xor
inc
dec
popa
mov
mov
ds
pop
dec
fisubs
pop
cltd
mov
and
loop
nop
out
mov
sbb
mov
into
add
fidivs
jmp
mov
jns
add
subl
mov
sbb
jge
test
xchg
js
jmp
mov
mov
sub
bnd
mov
inc
jg
xorb
and
pushf
xor
fs
push
dec
scas
inc
sub
mov
enter
mov
add
js
imul
outsl
outsb
jae
jae
imul
imul
and
jno
jbe
add
inc
dec
insl
push
outsl
insl
popa
jo
inc
imul
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
jo
popa
je
inc
arpl
outsb
jae
jno
jb
add
add
jne
insb
imul
inc
imul
imul
and
jno
jbe
add
inc
push
popa
insb
gs
popa
insb
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
gs
popa
jb
outsb
je
imul
jno
jb
add
add
insl
imul
inc
imul
imul
and
jno
jbe
xchg
dec
shlb
sbb
cli
push
in
jne
lret
xchg
mov
je
inc
sub
stos
pop
sbb
inc
and
and
imul
inc
xchg
xor
ret
and
jns
pop
sbb
dec
jecxz
and
cmc
pushf
add
sub
xor
aad
sbb
or
dec
sub
iret
les
adc
aaa
xor
cs
ret
imulb
scas
lds
fwait
add
xchg
cld
aad
add
adc
or
gs
icebp
push
mov
push
ret
pop
icebp
ss
arpl
xchg
aad
in
lds
xor
push
fdivrp
aad
repnz
sub
iret
gs
add
add
addr16
rcr
mov
insb
test
cld
pop
push
icebp
sahf
xchg
mov
mov
cmp
shrb
mov
movsl
repnz
sbb
je
mov
adc
lcall
cli
aad
cmp
inc
imul
daa
mov
add
xor
mov
gs
fidivl
xor
int3
sbb
sahf
xchg
outsb
hlt
push
shlb
jg
add
mov
sub
std
test
mov
stos
cmp
mov
lds
cmp
test
pop
sahf
fwait
cmc
cmp
jmp
loop
add
push
jmp
and
xor
mov
sbb
xor
sbb
mov
push
ds
int
ss
sbb
inc
sbb
movsb
pop
dec
movsl
loopne
aaa
test
jbe
xchg
jg
xor
roll
into
icebp
ret
inc
add
lods
fmulp
pusha
adc
jmp
daa
xchg
or
out
or
arpl
stc
mov
stc
sbbl
pop
mov
iret
das
sbb
hlt
inc
movsb
outsl
push
add
mov
pop
jo
lea
js
insl
push
stc
cwtl
cmp
sbb
sbb
xchg
xor
sbb
push
pop
dec
shrb
scas
dec
adc
out
movsb
mov
std
sbb
in
ds
sahf
ds
jnp
inc
add
adc
js
lods
daa
mov
pop
sarl
ret
in
in
stos
add
or
outsl
push
mov
arpl
jne
xor
jne
pusha
aad
es
leave
popa
xchg
fstps
mov
jg
adc
pop
mov
sbb
mov
mov
push
pop
inc
cs
loope
js
ja
fs
fimuls
pop
cld
mov
int3
inc
and
add
ret
cwtl
and
add
pop
sub
dec
insl
push
jns
mov
outsb
pop
mov
cmc
mov
icebp
add
sub
xchg
mov
imul
sbb
cwtl
cmp
icebp
fnstcw
faddl
mov
mov
fs
cld
inc
lea
ja
pusha
jmp
add
inc
dec
insl
jp
outsb
data16
popa
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
arpl
imul
popa
arpl
jns
imul
imul
and
jno
jbe
fs
outsl
insl
outsb
inc
aaa
bound
add
add
js
arpl
imul
je
outsl
outsb
and
jno
jbe
iret
pop
outsb
das
sbb
push
mov
add
out
insl
pop
repnz
lock
add
mov
sti
frstor
jmp
xchg
cmp
cwtl
or
pop
pushf
cld
push
lods
outsl
mov
mov
lcall
and
out
out
outsl
push
loope
cltd
repz
cmp
out
cltd
adc
rol
cmp
pop
xor
sub
test
mov
mov
pop
jbe
dec
and
mov
out
les
shrl
mov
stos
xorl
mov
test
fwait
into
das
popf
mov
addl
add
std
xor
jbe
repnz
inc
mov
nop
or
dec
xor
push
lea
pop
lock
push
mov
das
xchg
cmp
ret
xor
sub
pop
adc
jge
pop
jbe
add
xchg
lods
ja
xchg
xchg
jl
mov
sbb
cld
clc
jmp
dec
jbe
lods
and
incb
enter
daa
push
sbb
je
xchg
xor
pop
shrb
pop
lcall
inc
add
inc
insl
pop
stc
insb
sbb
xor
in
rorl
xor
xor
mov
shrb
js
jo
push
xor
push
cmp
dec
xor
pop
jl
add
inc
dec
jbe
jo
jne
je
outsb
jae
imul
imul
and
jno
jbe
add
inc
inc
insb
popa
jae
gs
push
push
je
gs
insl
inc
push
gs
outsl
jae
je
outsl
outsb
and
jno
js
add
bswap
mov
not
lea
pushf
xchg
not
movw
movzbw
movl
lea
jne
pusha
movzbw
lea
mov
movb
mov
pushf
movl
movb
pusha
pushl
popl
push
pushf
pushl
ret
add
inc
dec
jbe
je
je
jae
popa
jb
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jp
push
outsb
je
inc
imul
imul
and
jno
jbe
dec
push
movsbw
mov
test
sub
shl
mov
rcr
daa
push
cwtl
push
btc
setae
push
sbb
push
rcr
lahf
aas
mov
push
test
test
push
mov
push
lea
je
add
xadd
mov
and
btr
adc
rcr
add
shl
mov
jmp
jne
pusha
setno
cmp
xor
stc
shrd
dec
xor
mov
cmp
call
add
inc
and
jo
xor
push
fs
je
inc
push
inc
jne
data16
fisttpll
lcall
andb
cmc
adc
and
movsb
sahf
ljmp
fistps
jp
dec
and
popf
sbbl
mov
push
inc
jecxz
pusha
dec
push
rorl
or
icebp
pop
orl
lods
scas
xor
nop
sti
xchg
or
enter
in
xor
andb
mov
insb
xchg
sub
xor
lods
xor
fs
adc
pop
jle
aas
aad
fidivl
call
sbb
das
sub
mov
dec
jne
cmc
fsub
push
aad
cmp
lcall
mov
push
repnz
cmp
cmp
lret
adc
jae
loope
inc
in
jmp
or
xor
aad
fwait
mov
subb
push
or
jle
in
dec
lds
sbb
insl
lret
xchg
push
cli
add
xchg
mov
lods
stos
jecxz
pop
mov
mov
fbstp
mov
addr16
and
xchg
in
daa
pop
adc
cmp
push
jp
dec
in
into
fstpl
mov
sub
fcomi
outsb
inc
lods
push
icebp
push
inc
mov
cs
fidivl
xchg
cmpsb
dec
inc
test
adc
and
fsubrs
inc
cmp
cmp
and
push
and
inc
loope
out
inc
xor
add
inc
dec
jbe
jo
jne
je
outsb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
test
movb
jmp
push
inc
sub
inc
loopne
out
lods
push
sbb
pop
dec
adc
push
jnp
icebp
xchg
pop
enter
or
fnstenv
xchg
cmp
mov
repnz
or
fmuls
ffreep
inc
repz
int
pusha
mov
xor
lock
add
inc
subl
outsb
clc
dec
or
xor
int3
xchg
int3
push
mov
mov
test
pop
out
sbb
inc
xchg
mov
cmp
outsb
test
jno
int3
push
mov
mov
outsl
mov
mov
push
mov
sub
xchg
mov
movsl
enter
shrb
mov
cmp
pop
jbe
leave
mov
mov
sub
push
call
pop
loope
rclb
cmp
push
cmpsl
push
out
and
imul
inc
jnp
mov
or
out
sub
sbb
inc
mov
adc
push
es
and
fxch
push
mov
xchg
jbe
mov
mov
call
leave
and
and
adcl
andl
into
cmpsb
mov
cwtl
shrl
jns
popf
sub
cwtl
jle
mov
push
push
ds
xchg
test
mov
rclb
ljmp
sbb
mov
imul
sub
mov
lcall
ljmp
mov
mov
pushl
ret
add
inc
inc
js
insb
inc
push
inc
jne
je
insl
fs
jb
gs
imul
jb
insb
inc
inc
gs
outsl
insb
jne
outsb
and
jno
imul
add
add
inc
dec
jbe
insb
jbe
jb
inc
imul
je
outsl
outsb
and
jno
jbe
and
pop
sub
sub
and
sub
ds
push
int3
or
out
sub
fnstsw
mov
jmp
mov
cmpsl
aaa
xchg
or
jnp
lret
stos
lahf
xchg
mov
ret
sbb
movsb
mov
negl
out
cwtl
sub
cmp
insb
aaa
xchg
popa
sub
leave
loope
call
icebp
ret
les
sbb
daa
sbb
jnp
js
mov
mov
mov
sbb
push
adc
push
dec
shrl
xchg
adc
dec
movsl
repnz
popf
sub
rolb
sbb
ret
and
push
leave
pop
xchg
mov
xor
mov
es
sti
ret
inc
scas
xor
and
dec
aad
imul
push
mov
aam
sbb
xchg
lock
sbb
les
daa
sbb
push
stc
adc
jmp
addr16
fdivs
pop
nop
stc
dec
sbbl
lfs
jne
loopne
sbb
cmc
pop
mov
es
adc
aad
lods
outsl
push
push
add
hlt
mov
cmp
push
push
mov
enter
xchg
cmp
mov
and
mov
xchg
repz
cli
pop
mov
loope
outsl
jle
dec
mov
sti
sbb
aaa
mov
jge
pop
jns
cmpsb
int3
in
scas
test
popa
pop
pop
imulb
xor
roll
add
fs
je
inc
push
dec
je
insl
dec
imul
jbe
push
outsl
push
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
fs
je
inc
push
dec
je
insl
dec
imul
popa
fs
je
gs
insl
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
sbb
ret
inc
jns
out
jbe
mov
cmp
test
scas
xchg
enter
pand
xchg
loope
jo
and
adc
ja
lcall
sbb
shrl
jns
sub
push
test
pop
test
inc
rol
push
pop
incb
loope
and
inc
sarl
cmp
outsb
xchg
lahf
shrl
and
call
xor
mov
dec
shlb
mov
pop
das
lcall
xchg
out
outsb
inc
or
lcall
dec
outsb
adc
loop
pop
sbb
inc
insb
mov
scas
cmp
inc
mov
sub
mov
adc
inc
pop
push
fisubrs
adc
das
mov
push
lds
mov
and
sub
fmuls
mov
jno
add
jle
or
cld
aad
push
xor
adc
aam
lret
das
aaa
and
xchg
mov
pop
mov
test
sbb
cmp
and
xor
xor
shlb
sbb
ret
lret
ret
push
imul
shll
ljmp
sti
add
cld
cld
in
mov
mov
sub
mov
imul
pop
insb
sub
and
inc
mov
aam
xchg
cld
fst
jmp
push
jecxz
cmp
adc
std
in
mov
mov
arpl
xchg
popa
les
aam
repnz
add
popf
inc
stos
mov
mov
decl
fldl
sarl
adc
or
das
leave
cmpsb
xchg
dec
enter
inc
mov
push
and
inc
pop
icebp
nop
cld
fdivl
mov
jns
in
jb
mov
dec
leave
les
outsl
int
sub
std
in
mov
push
push
fsubrl
jecxz
and
sbbb
xor
or
sbbb
mov
cmp
das
and
aam
mov
je
mov
popa
mov
dec
shr
pop
jle
ss
loopne
pop
adc
fstp
ss
mov
int
or
ret
call
sbb
ret
inc
dec
insl
popa
imul
je
popa
insb
imul
and
jno
jbe
dec
jbe
je
inc
je
insb
jae
xor
bound
add
add
gs
outsl
jb
imul
jo
imul
je
popa
insb
imul
and
jno
jbe
adc
and
mov
adcb
fidivrs
repnz
gs
jmp
in
iret
ja
xchg
mov
aad
pop
out
mov
add
rorb
cs
imul
push
cmp
xor
mov
push
outsb
sbb
add
pop
div
fldt
mov
push
and
lret
inc
adc
inc
stos
ds
dec
adc
cltd
mov
jl
adc
and
loop
loop
movsb
test
mov
fistl
les
fdivrs
mov
pop
mov
jnp
mov
lods
xchg
scas
adc
cli
sbb
loope
mov
movsl
loop
js
jmp
sarb
add
outsb
imul
or
sahf
hlt
xchg
mov
sbb
mov
xchg
iret
cltd
stos
add
push
outsb
sbb
insb
inc
xchg
in
es
dec
ja
pop
mov
shll
xor
sub
std
adc
movsl
out
out
js
inc
loope
lds
xchg
cli
fmull
cmpsb
faddp
jb
push
mov
jecxz
stos
pop
scas
sbb
loop
iret
fs
jl
aam
shr
hlt
pop
in
sbb
sbb
pushf
mov
mov
xor
test
out
sahf
jbe
jge
mov
mov
jg
cmc
imul
push
push
sahf
adc
add
inc
push
popa
jb
je
insb
jae
imul
imul
and
jno
jbe
es
and
inc
cmpsb
andl
test
and
das
addr16
or
add
xchg
shll
add
dec
and
push
push
mov
and
ret
cwtl
sub
mov
dec
xchg
mov
mov
jnp
push
add
or
push
in
cmp
lock
out
jo
xor
out
test
repz
nop
mov
aad
bound
insl
fidivrl
xchg
xor
fists
neg
lods
inc
sarb
fldl
add
insl
push
jb
outsl
jb
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jb
outsb
je
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
imul
gs
jo
imul
popa
insb
imul
and
jno
jbe
or
inc
out
test
shll
inc
mov
stos
xchg
push
fstpl
cmp
test
dec
and
insb
jae
xchg
rcr
call
ret
aam
fstl
cmp
ret
popf
add
loopne
push
cli
das
jns
pop
or
dec
test
fdivrs
pushf
mov
mov
dec
fnstsw
push
sbb
mov
dec
sub
jg
xchg
and
andb
xor
sub
jle
jecxz
push
adc
cmp
jns
js
dec
cmp
hlt
mov
ret
rorl
fcmovnbe
imul
jp
ljmp
cwtl
xchg
pop
or
je
mov
dec
fdivs
and
call
hlt
sbb
data16
adc
rcrb
sbb
push
mov
push
mov
pushf
or
add
lods
cld
andb
pop
das
shll
jle
jbe
cmp
lcall
inc
mov
out
xchg
fisubrl
pop
lret
pusha
int
and
scas
inc
xor
js
or
or
sub
icebp
fdivs
clc
ds
in
dec
out
push
or
sbb
push
xchg
pop
or
or
push
xor
inc
mov
push
mov
jl
mov
xchg
mov
adc
pop
scas
iret
ljmp
mov
adc
add
fs
je
inc
arpl
imul
jb
pushf
movzbw
lea
pushf
jmp
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
outsl
inc
jb
popa
je
and
jno
jbe
add
inc
inc
outsl
outsb
je
jb
inc
push
dec
bound
arpl
jae
inc
inc
fs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
outsl
outsl
insb
inc
popa
jb
imul
jno
jb
add
add
outsl
outsb
jae
jae
imul
imul
and
jno
jbe
jmp
sbb
xchg
repnz
xchg
lcall
adc
inc
sbbb
xchg
push
and
jbe
je
mov
loop
sarb
rcrb
add
fisubs
mov
not
xor
mov
std
movsl
repz
mov
jnp
dec
arpl
testl
bnd
mov
sbb
inc
cltd
cmp
cmp
dec
leave
call
add
cmp
addr16
scas
or
and
pop
in
or
rorb
cmp
fdivrs
lret
mov
dec
mov
xor
outsb
or
push
cmp
mov
test
xor
ds
arpl
ljmp
test
and
pop
lret
mov
mov
sbb
sbb
pop
inc
out
lock
add
call
movsb
add
cmp
cs
outsb
dec
scas
add
imul
jbe
xor
push
or
test
aam
mov
and
xchg
enter
xchg
lods
test
jmp
movsl
dec
dec
mov
iret
mov
pop
repnz
mov
inc
cltd
iret
lods
push
inc
jnp
int3
fs
jle
dec
lea
ret
and
dec
je
movl
push
jns
je
insl
inc
inc
dec
popa
outsb
fs
gs
outsb
jns
js
gs
imul
jbe
stc
push
mov
bt
test
pusha
lea
je
push
pusha
movb
add
cmc
test
pusha
test
cmp
push
mov
lea
jb
cmc
test
clc
clc
cmp
pusha
lea
jae
sbb
mov
cmc
mov
add
bt
mov
btr
sbb
btc
mov
test
stc
pusha
sub
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsb
gs
jno
jbe
popf
or
into
jmp
cs
pop
or
cld
je
pop
pusha
scas
les
push
xchg
imul
test
push
xchg
je
or
lret
in
into
ffree
rclb
addb
fnstsw
mov
fists
stc
add
push
lahf
scas
dec
pop
out
mov
and
fninit
mov
adc
mov
js
nop
outsl
in
mov
cmp
lcall
fidivs
jbe
cmp
clc
sbb
hlt
lods
sbb
or
pop
cmp
xor
sbb
addb
mov
jle
cltd
ss
mov
fdivs
pop
repnz
mov
dec
fwait
popf
insl
out
push
sub
push
inc
mov
shll
and
cmpb
add
lret
ja
ss
sbb
or
rolb
movsl
dec
jno
mov
out
xor
out
insb
and
inc
mov
sarl
xor
push
cmp
out
ret
sbb
xor
leave
ljmp
fstp
cmp
sahf
jge
mov
insb
loope
movsb
stos
xor
test
subl
sbb
cmp
shlb
out
push
push
jle
push
xor
call
dec
cmpsl
push
addb
inc
inc
jmp
sbb
jmp
mov
imul
mov
ret
sti
movsb
and
in
fs
sub
and
orl
jae
xchg
fadd
ror
lret
mov
push
stc
push
arpl
loop
mov
mov
adc
jle
repnz
jge
adc
xor
xchg
xchg
mov
pop
cld
and
or
sub
lcall
jbe
cmp
push
fnsave
repz
negl
or
mov
test
aaa
push
or
jle
out
cmp
outsl
add
test
mov
sbb
cmp
cmp
xlat
jns
das
xchg
stc
push
call
stc
fstp
add
mov
push
cmp
sbb
ret
cmp
inc
imul
dec
out
iret
pop
dec
pusha
jge
enter
call
int
pop
sub
fstpt
pop
xor
int
imul
je
scas
cli
sar
in
add
cs
gs
sahf
jne
push
sti
enter
iret
xor
stos
enter
mov
xchg
hlt
pop
cmpsl
sub
test
lods
inc
cmp
sarb
pop
outsb
mov
pop
aaa
push
je
cmp
cmc
lock
pop
xor
mov
test
sbb
sbb
lahf
stc
sbb
dec
cmpsl
mov
leave
cmp
xorl
jl
andl
test
out
imul
adc
jno
push
outsb
insb
push
jno
add
dec
xchg
mov
inc
lahf
mov
mov
popf
scas
out
cli
inc
incl
fistpll
push
xchg
lods
test
aas
fnstenv
mov
sbb
sub
push
add
xchg
cmp
add
inc
push
jne
jb
imul
inc
imul
imul
and
jno
jbe
add
inc
inc
js
arpl
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
imul
imul
and
jno
jbe
add
inc
inc
js
fs
jb
imul
imul
and
jno
jbe
add
inc
push
insb
popa
outsb
addr16
imul
imul
and
jno
jbe
lea
ja
pusha
movb
movb
pusha
lea
jb
push
pushl
call
add
inc
inc
js
imul
popa
jae
gs
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
je
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
jo
xor
popa
je
inc
push
dec
je
insl
imul
sbb
inc
in
mov
std
mov
or
and
movsl
sarl
inc
movsl
out
push
mov
mov
inc
cli
xor
ret
xor
mov
daa
or
sub
imul
push
jmp
ret
call
or
or
aas
push
xchg
incb
add
stc
mov
pop
or
lock
shl
adc
xchg
lock
cld
xchg
mov
addr16
mov
lret
repnz
add
push
std
std
xchg
repnz
cmp
stos
hlt
dec
mov
push
pop
xor
sbb
in
hlt
adc
push
das
sarb
or
mov
scas
dec
dec
sbb
imul
add
mov
cmpsb
mov
mov
mov
mov
inc
loope
lods
test
pop
mov
sub
xor
les
push
sbb
shlb
jg
notb
add
pop
in
sarb
stos
mov
pop
cmpsb
in
movsl
push
out
lds
fsubrs
fmuls
aaa
insl
push
mov
cmpsl
dec
adc
test
sub
jmp
jg
push
addl
loopne
jne
mov
xor
inc
mov
push
pop
mov
daa
cwtd
mov
or
stos
pop
or
scas
lds
mov
aad
popf
ja
sbb
mov
int
int
pop
mov
push
jns
jne
imul
insb
imul
and
jno
jbe
faddl
fdivrl
mov
push
jbe
daa
test
pop
add
adc
or
and
test
fisubrs
or
daa
or
cmp
aad
inc
int
in
inc
insl
cmc
scas
inc
sti
push
add
insb
inc
in
shr
ljmp
imul
inc
mov
sbbl
pop
mov
pop
xchg
les
adc
inc
outsl
lea
scas
xchg
add
fnstsw
or
pop
ret
inc
shrb
lods
mov
outsb
inc
data16
sbb
pop
bound
clc
sub
pop
call
out
xor
cmpsl
pushf
xchg
sub
fwait
stos
stc
xchg
adc
pop
gs
xchg
lods
mov
pop
movsl
mov
mov
shrb
push
jbe
aaa
push
aas
adc
or
xchg
xchg
mov
mov
adc
inc
push
aam
arpl
xchg
std
pop
fnstsw
lahf
mov
pop
ret
popf
mov
cmp
mov
mov
xchg
test
rorl
ss
sbb
sub
cmpsl
into
divl
movsb
dec
out
adc
dec
push
dec
xchg
mov
xor
int
sbb
or
cmp
add
lret
ja
push
cwtl
pusha
cli
dec
xor
gs
push
cmp
mov
test
mov
pop
sti
add
and
inc
imul
xchg
fists
test
sub
clc
pusha
call
call
add
inc
push
jns
je
insl
inc
inc
dec
popa
outsb
fs
gs
imul
jno
jb
add
inc
fnsave
lock
jp
ss
hlt
dec
movsb
lds
and
mov
lods
cmp
pop
sahf
inc
cmp
xchg
and
sbb
dec
cmp
inc
and
mov
dec
jmp
push
jne
imul
jo
popa
je
dec
popa
insl
gs
jno
jbe
add
inc
inc
outsl
outsb
je
jb
inc
push
dec
bound
arpl
jae
inc
push
gs
je
insl
and
jno
imul
je
insl
inc
push
dec
bound
arpl
add
insl
push
arpl
jb
imul
imul
and
jno
jbe
add
inc
inc
js
popa
jb
popa
outsb
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
bswap
pop
movl
mov
push
lea
pusha
mov
jmp
lods
inc
mov
sbb
jo
mov
mov
add
ljmp
mov
popf
packuswb
in
push
mov
pop
jnp
inc
hlt
bound
aas
cmp
fimull
cmp
aad
fisubrl
pop
test
arpl
dec
adc
int
cmp
and
arpl
dec
outsb
sub
xor
scas
mov
xchg
xor
mov
inc
dec
into
arpl
jno
loopne
ds
outsb
sarb
insl
cs
arpl
fbld
xchg
dec
imul
lret
daa
outsl
js
push
and
lcall
push
out
push
das
out
xchg
cmp
sub
rorl
mov
push
dec
add
lcall
lea
std
xchg
mov
cmp
jl
cmp
mov
popa
add
sbb
scas
or
pop
dec
stc
loope
push
xlat
mov
in
jbe
arpl
test
mov
sbb
lcall
and
mov
cmp
cld
rorb
cmp
in
fwait
testb
js
loopne
es
mov
mov
mov
push
mov
clc
stos
ret
push
and
data16
pop
movsb
shrb
cwtl
pop
and
jb
inc
ss
cwtl
adc
jnp
loopne
lock
mov
mov
xchg
push
shlb
cmp
sar
test
rorb
test
cmc
add
shrd
shl
mov
test
cmc
push
pusha
or
movb
lea
je
jmp
call
pusha
pusha
mov
pushf
mov
pushf
movb
lea
jmp
lea
jae
sar
push
movzbl
mov
xor
test
mov
shl
sub
shl
mov
cmp
pushf
xor
pushf
repnz
call
add
inc
push
imul
imul
imul
je
outsl
outsb
and
jno
jbe
popa
mov
adc
xchg
mov
loopne
sbb
sbb
leave
subb
rcr
das
adc
adc
lock
push
les
jbe
inc
push
xchg
cmc
shl
out
fnop
ret
dec
das
cmp
into
pop
jecxz
push
sub
addr16
call
fucom
sbb
add
cmp
xchg
stos
ret
lods
les
jecxz
lss
adc
cmp
xchg
sahf
or
push
call
or
mov
pop
jnp
xchg
mov
xchg
jbe
jp
ret
icebp
mov
lds
aad
mov
out
inc
popa
out
mov
cmp
dec
xor
lods
movsl
mov
sbb
loop
sahf
dec
mov
out
pushf
push
popa
and
add
or
pop
xor
cli
pushf
repnz
mov
sub
push
sbb
and
dec
test
leave
lahf
js
or
cmp
push
call
mov
enter
test
std
dec
sbb
test
pop
aas
mov
arpl
cmp
fdivrl
sbb
mov
out
jg
fcoml
xor
mov
push
repnz
popf
cmp
xchg
je
fisttpl
sti
in
dec
mov
flds
jb
iret
adc
or
fnsave
lcall
jp
mov
mov
lods
adc
add
arpl
imul
jae
outsl
insl
inc
arpl
outsb
inc
push
gs
outsb
popa
bound
and
jno
outsl
add
add
jns
je
insl
inc
inc
dec
push
je
inc
jae
and
jno
jo
jo
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
gs
outsl
data16
popa
jo
imul
jbe
add
inc
dec
insl
popa
imul
popa
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
outsb
imul
imul
imul
and
jno
jbe
in
or
inc
cmpsl
ret
outsl
int
mov
dec
repnz
push
sti
inc
sbb
aam
pop
int3
jno
sbbl
mov
aaa
xchg
nop
int3
fwait
mov
pop
add
out
add
jecxz
mov
ret
lock
stos
mov
dec
xor
pop
cmp
sub
lahf
int
or
sub
hlt
xchg
mov
sub
in
jae
sbb
mov
aam
std
jne
testl
mov
mov
cli
sar
cwtl
ds
pop
test
sti
fistpl
add
insl
push
insl
gs
gs
imul
imul
and
jno
jbe
add
inc
dec
insl
push
jo
jne
inc
imul
imul
and
jno
jbe
rclb
or
inc
cli
sub
enter
in
inc
adc
inc
mov
sbb
fnsave
jno
xor
jae
insb
xchg
inc
adc
mov
rolb
imul
subl
popa
lea
in
les
jmp
or
push
or
inc
sti
jl
mov
imul
mov
inc
mov
push
jae
ss
xchg
lods
xchg
mov
cmpb
jns
fs
sahf
aam
sahf
scas
add
adc
cld
enter
fistpl
pop
dec
and
xor
pop
xchg
cmp
inc
popf
int3
rclb
sbb
icebp
lret
push
fs
xchg
or
mov
push
lcall
iret
fimull
repnz
inc
xchg
jp
add
lods
mov
mov
or
mov
sub
scas
pop
rorl
lods
add
imul
cs
push
jp
in
lds
add
xchg
popa
pop
leave
xor
xor
add
ret
scas
or
lds
test
pop
and
dec
mov
sub
add
arpl
fs
jb
outsb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
outsl
outsl
insb
ja
outsb
inc
imul
imul
and
jno
jbe
add
inc
dec
arpl
outsb
jae
insb
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
jo
gs
je
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
outsb
dec
outsb
imul
dec
jbe
push
inc
je
insb
jae
xor
bound
add
incl
add
arpl
popa
jb
gs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
lea
jb
call
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
dec
outsb
imul
jno
jbe
pushl
jmp
add
inc
push
je
jne
imul
imul
imul
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
je
jne
jb
outsb
je
gs
imul
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
or
pop
jmp
push
dec
fsubrp
aas
ret
cmp
sbb
lret
sbb
pop
ds
xor
pop
jbe
add
xlat
aaa
popf
data16
jge
neg
push
mov
and
xchg
cmpsb
sub
ret
pop
cltd
fdiv
dec
cmpsb
je
mov
js,pn
or
arpl
and
sarb
dec
and
fucompp
ret
mov
and
loope
xor
es
pop
jnp
jge
mov
sbb
jne
sbb
outsl
cmp
push
mov
test
clc
jmp
adc
inc
repnz
aas
push
xor
add
in
sub
fsubl
in
push
les
mov
mov
push
xor
ret
cmp
cli
and
xchg
push
jmp
aad
cwtl
clc
xchg
mov
das
shrl
clc
iret
inc
addr16
cmp
push
in
xor
mov
sub
push
or
jo
aam
cwtl
lahf
cmpsb
mov
shl
movsb
pop
sub
mov
mov
xchg
push
cmp
fnsave
cmpsl
and
movsl
mull
sti
sub
add
lahf
mov
stc
outsl
iret
ja
inc
adc
addr16
mov
xor
mov
add
pop
mov
add
jns
fdivs
dec
jecxz
cmpsl
add
ret
ljmp
cld
pop
call
mov
sbb
jo
push
push
das
xchg
loop
pop
ds
std
xor
out
cmp
cli
xchg
push
jl
mov
aas
fcomip
adc
sbb
and
inc
ss
inc
js
push
pop
mull
mov
lahf
dec
adc
movsl
jbe
jmp
xor
mov
jne
push
jbe
inc
or
jmp
jo
mov
int
stos
ret
je
sbb
or
outsb
pop
bound
jns
or
fsub
dec
stc
xchg
mov
mov
fidivrl
outsb
lds
jno
imul
je
insb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jne
insb
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jne
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
jne
data16
outsb
addr16
and
jno
js
add
bt
stc
mov
mov
clc
clc
test
jmp
add
inc
inc
js
jb
ja
gs
jne
imul
imul
imul
jbe
pushf
sub
jl
cmp
push
pushf
mov
lea
ja
stc
call
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
jb
gs
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
gs
imul
gs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
outsl
add
inc
or
es
jbe
xchg
mov
insl
add
sub
call
pop
in
pop
pop
jo
roll
sbb
inc
xor
aas
cld
es
addb
mov
dec
xor
push
mov
pop
xor
test
mov
jns
les
sbb
out
shll
inc
sub
xchg
pushf
xchg
repz
sbb
and
imul
xor
cmp
stc
test
in
call
jge
addr16
arpl
mov
or
les
add
mov
iret
inc
jno
cwtl
mov
fsubrs
mov
andl
lcall
jo
cld
push
jp
mov
ja
sahf
inc
xor
xlat
pop
inc
call
jg
push
sbb
mov
sti
sbb
les
hlt
sbb
sub
imul
in
insl
dec
pusha
mov
mov
inc
adc
push
add
vmovsldup
bound
lods
fdivl
imul
and
imul
mov
and
out
sbb
mov
inc
inc
cld
xlat
cmp
add
pop
or
add
ret
push
mov
andl
ss
adc
mov
das
mov
pop
insl
sub
xor
xchg
cmp
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
gs
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
fs
call
call
sbbl
jecxz
pop
jge
mov
add
mov
pusha
fdivr
adc
adc
repnz
sar
push
lock
lret
shrl
and
mov
out
pop
test
fbld
fbld
sub
cld
fnstsw
adc
les
iret
sub
xor
xor
repnz
ret
in
sub
std
push
fsubs
and
mov
mov
xor
ja
mov
push
cmpsl
int
nop
fsubs
and
xor
add
pusha
mov
inc
or
add
sub
outsl
mov
pop
movsl
inc
or
and
ret
test
ss
jbe
cld
int
push
cltd
or
test
sub
xchg
insl
dec
popw
and
pusha
into
movsb
inc
sub
mov
and
bound
sbb
or
add
js
jne
je
outsb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
sub
inc
mov
fdivp
push
jl
repnz
mov
pushf
mov
and
lods
pop
aad
popa
loope
lea
mov
xchg
jne
repz
leave
imul
dec
lods
mov
ret
sub
push
call
mov
dec
das
test
or
add
mov
ret
xchg
rcrl
dec
test
mov
push
xchg
cmp
add
and
lea
movsb
dec
push
jg
rcrl
dec
test
add
xor
js
cld
push
icebp
popf
jg
xor
sub
jbe
ds
cwtl
mov
inc
fcomps
aaa
mov
pop
lea
mov
cmp
jmp
pop
dec
add
fldcw
mov
jle
clc
push
mov
nop
cmp
pop
mov
movsb
int3
jae
pop
adc
sbb
int
fsubs
xchg
add
jl
aad
test
pop
pop
mov
imul
out
sub
cmpsb
sub
mov
sub
fnsave
lds
or
es
pop
inc
in
mov
jge
add
loope
or
cmp
dec
out
fcom
jae
adc
dec
push
jl
pop
dec
and
push
lret
popf
and
pop
icebp
mov
fidivrs
fdivs
mov
mov
das
xlat
jle
xchg
jo
add
cmc
fdivl
repnz
pushf
je,pn
or
mov
cs
out
mov
xor
fdivl
mov
cmc
test
push
sub
mov
cwtl
xor
fisubrl
fld
and
movsb
mov
cltd
insb
cwtl
jno
outsb
inc
mov
push
xor
icebp
daa
cmpsb
int
testb
ret
sbb
cmp
test
or
mov
movsb
jecxz
lea
sbb
jbe
repz
bnd
mov
cli
add
setne
or
pop
dec
sbb
rorl
jp
mov
mov
cmp
data16
loop
subb
add
mov
out
jb
add
mov
aad
icebp
mov
and
in
test
xor
push
shrl
dec
sub
ret
enter
imul
shlb
imul
jb
cwtl
into
push
adc
sahf
in
or
andl
fdivrl
add
inc
sti
cmp
fdivl
dec
mov
or
and
pushf
cmc
push
push
pop
adc
lock
dec
sbb
jno
pop
daa
icebp
call
into
add
inc
testb
gs
mov
push
mov
pushf
mov
sti
fstpt
or
jne
fbld
ss
int3
cmpsb
mov
pop
mov
xchg
fidivs
and
test
sbb
jbe
negb
pop
lret
add
and
fcomp
jmp
inc
and
fisttpl
mov
test
in
push
push
scas
ds
movsb
pop
enter
das
or
sarl
fldl
aas
jmp
pop
loope
sti
pop
loope
hlt
mov
lcall
push
nop
xchg
notb
sub
mov
imul
and
pop
jl
sbb
dec
cmpsb
mov
xchg
add
inc
out
test
xchg
in
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
inc
gs
gs
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsb
fs
jns
inc
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
add
negl
sub
stos
add
pop
leave
cmp
stos
imul
jo
ja
pop
xor
adc
ret
imul
rcrl
fisubl
in
clc
ret
cmp
mov
dec
jmp
inc
test
in
nop
sub
test
push
hlt
fmull
mov
test
les
sub
fwait
stos
sbb
loope
sbb
sub
clc
dec
push
aas
out
push
mov
and
mov
pop
lock
jne
xor
icebp
push
mov
mov
dec
jecxz
mov
lock
ds
rcl
fldcw
push
mov
ret
push
test
movsb
cmpsb
add
shlb
out
enter
pop
les
xlat
stc
push
aaa
add
mov
enter
pop
cmp
hlt
cwtl
mov
cltd
inc
loope
scas
test
scas
pop
aaa
sub
sbb
xchg
mov
mov
inc
jle
jnp
cmp
push
repz
jg
xor
jne
jb
or
orps
sub
outsb
int3
push
pop
adc
and
jl
dec
sub
pop
dec
add
dec
fstl
push
ret
je
jge
cmpsb
adc
lods
push
clc
xchg
jmp
lea
mov
ja
loope
mov
cltd
jno
mov
sahf
cwtl
xor
loope
mov
xor
fidivs
xor
xchg
inc
and
dec
imul
jae
imul
imul
and
jno
jbe
push
movl
pushl
movl
movb
pushl
pushf
push
lea
jmp
add
inc
dec
imul
jae
inc
imul
je
outsl
outsb
and
jno
jbe
mov
ror
add
rcl
add
add
mov
push
pusha
cmc
test
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsl
jb
inc
popa
je
inc
data16
jb
jno
jb
xor
inc
insb
popa
jae
gs
push
inc
imul
insl
add
add
jne
imul
arpl
jae
inc
js
inc
insb
gs
jb
jno
jb
add
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
imul
outsw
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
outsl
jo
and
jno
jbe
or
adc
jl
jb
aas
xchg
dec
mov
push
push
inc
xchg
pop
cmpsb
aas
xor
pushf
jecxz
pop
leave
mov
inc
scas
dec
fstpl
or
xor
cmp
rcrb
loope
add
dec
xchg
xchg
push
push
push
jecxz
pop
lock
rolb
cmp
orl
int3
clc
nop
cltd
les
sti
adc
add
xchg
lds
aam
cmc
imul
xor
mov
out
andl
dec
xor
xlat
cmp
jge
xlat
xchg
pop
aam
xor
or
lea
stos
clc
push
mov
cmp
repnz
add
lahf
or
and
fwait
jns
mov
jne
and
outsb
lds
lods
dec
loop
data16
jne
int3
push
movsl
push
jl
sahf
mov
cld
sbb
popf
push
in
enter
mov
je
addr16
cmc
aas
jno
cmpl
xchg
call
fdivs
cwtl
mov
sarl
and
add
push
pusha
pusha
fmuls
add
shrl
mov
cwtl
test
sbb
push
sub
fs
addr16
insb
pop
mov
bound
sub
stos
cltd
fstpt
stos
cld
pop
repnz
lcall
bound
dec
andl
push
mov
jae
jle
xor
mov
jne
arpl
je
insl
add
inc
dec
arpl
jae
jne
arpl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
jb
ja
outsw
insb
fs
imul
imul
and
jno
jbe
add
inc
inc
insb
popa
jae
gs
push
dec
imul
popa
jb
jno
jb
add
push
pop
jb
inc
push
or
xor
out
and
xor
js
xlat
jge
mov
cmp
fwait
cli
inc
inc
sub
inc
mulb
add
ds
mov
sarb
dec
fcmovnb
fists
push
inc
fs
in
mov
test
mov
push
xor
jle
and
outsb
popf
xor
and
les
int
pop
xor
or
sub
ja
faddl
inc
mov
ret
jns
mov
nop
inc
jnp
mov
sbb
mov
add
pop
mov
into
mov
xchg
jne
jb
outsb
jle
pminub
bound
add
mov
push
lock
cmp
push
adc
push
jl
mov
xor
jnp
mov
imul
fnstcw
outsb
pop
jl
insl
mov
cli
sbb
sbb
aam
sbb
outsb
jb
gs
xchg
push
dec
movsb
fisubrl
cmpl
pop
mov
jl
mov
and
pop
mov
mov
inc
les
mov
or
or
sub
movsl
dec
repnz
ds
iret
push
je
test
int
fs
clc
insl
andl
pop
cmp
jecxz
sub
dec
xchg
std
fs
loopne
lock
jecxz
js
movsb
sub
sub
or
jnp
mov
mov
mov
lret
pop
out
ljmp
pushf
mov
push
not
lods
pushf
neg
pushl
call
add
inc
push
jns
je
insl
inc
inc
inc
jns
inc
jb
popa
jns
gs
outsb
addr16
and
jno
jbe
pushf
pushl
lea
jne
not
shrd
sub
push
mov
sub
add
and
cmp
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
insb
outsl
outsb
gs
jno
jbe
add
inc
pop
insl
insb
imul
outsb
popa
insb
imul
and
jno
jbe
mov
inc
ds
xor
jne
fldt
sar
sub
sub
mov
nop
ret
insb
add
cmpsl
or
int
add
or
sti
sbb
outsl
aam
ret
clc
sahf
push
jnp
mov
fisubrl
adc
adc
jae
or
inc
mov
test
test
cmc
cli
iret
mov
fsubrs
test
mov
les
out
lret
cmp
push
mov
sbb
shr
loopne
jmp
bound
pop
hlt
imul
cmc
das
jo
fnsave
adc
fimuls
ror
fiadds
pop
test
imul
test
pop
aaa
pop
mov
mov
loop
sub
xlat
cld
sub
insl
adc
popf
and
daa
fs
fbstp
dec
call
lea
push
inc
mov
push
popa
mov
out
test
sbb
out
lock
cltd
and
or
xor
ror
popa
fs
scas
psraw
push
and
pop
push
xor
mov
pop
xchg
or
adc
ljmp
stos
or
outsb
inc
cmc
pop
int
insl
mov
xchg
lea
jne
imul
mov
sub
adc
add
sub
fmull
push
mov
fistpll
pop
fstpt
lods
push
mov
dec
scas
negl
enter
push
leave
and
mov
cmp
out
ljmp
lahf
dec
jmp
push
lea
insb
hlt
xchg
mov
adc
mov
inc
stos
sarb
clc
and
push
mov
das
lods
lea
frstor
mov
scas
push
jle
iret
out
aaa
out
pop
in
or
pushf
xor
les
cmp
lret
xlat
cmc
and
sbb
psraw
mov
pop
and
pop
mov
les
push
scas
test
jmp
pushf
pushf
inc
call
mov
xchg
sbb
pusha
addr16
test
test
xor
imul
xchg
pop
mov
or
jno
jo
mov
pushf
xchg
push
pusha
or
mov
adcl
dec
cli
ret
jle
mov
mov
and
lret
fisttps
rorb
int
and
mov
test
out
cmp
jg
mov
les
and
lret
xlat
cmc
cmc
sbb
add
shl
and
mov
xor
mov
mov
leave
and
rclb
mov
mov
jbe
sbb
cli
divb
xchg
imulb
psubusw
add
js
pop
addb
sub
adc
inc
xchg
cli
shll
xlat
jg
lret
push
xchg
pop
ret
dec
mov
xchg
cmpsl
dec
sub
data16
enter
push
mov
xor
adc
dec
pop
insl
negb
mov
sbb
aas
adc
in
rorl
push
and
jo
les
jecxz
mov
xlat
mov
adcb
or
jbe
loopw
test
aad
sub
jge
inc
stos
or
xor
pusha
enter
xchg
add
fbstp
shlb
push
outsl
pusha
andl
rolb
cmp
sub
mov
inc
out
pop
push
fwait
mov
cld
adc
mov
and
orb
sbb
or
add
js
popa
arpl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
insb
imul
popa
insb
imul
and
jno
jbe
mov
inc
jno
fdiv
sbb
mov
das
scas
xor
mov
pop
repnz
popa
mov
push
sub
and
and
call
enter
pop
ret
imul
mov
andl
loopne
mov
cld
push
jbe
ss
sbb
test
in
hlt
dec
inc
lea
xor
xchg
les
std
fimull
int
in
sbb
xor
add
dec
xor
in
jle
stos
popf
pop
pop
movb
arpl
ja
cld
aam
pop
adc
test
nop
dec
orb
arpl
test
mov
xorb
pop
daa
pusha
idivl
push
xchg
in
dec
arpl
stos
bound
out
cs
or
push
pushf
dec
mov
sub
xchg
mov
iret
out
cmp
lods
jns
in
lret
loopne
hlt
sbb
pop
dec
in
in
inc
adc
int3
pop
scas
popa
das
in
stc
and
pushf
pop
pop
adc
in
dec
and
lea
addb
loopne
negl
scas
xchg
jbe
or
clc
mov
mov
add
ret
sub
mov
push
movsl
subb
and
loopne
pop
ja
mov
cltd
or
push
mov
xchg
add
dec
or
sbb
aad
and
movsl
pop
repnz
pop
repnz
fwait
mov
cmp
dec
repnz
inc
inc
js
arpl
outsb
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
push
movl
movb
call
gs
inc
repz
add
or
or
stc
mov
gs
cmpsl
int3
pop
adc
arpl
lods
push
sub
popa
mov
pop
or
dec
scas
iret
pop
lret
lods
ret
pop
jb
push
pop
pop
push
out
lret
sahf
and
pop
ret
pop
xchg
inc
pop
xchg
outsl
dec
mov
mov
fdivr
xchg
stc
fidivrs
mov
les
fbstp
mov
jnp
sbb
mov
and
xchg
popf
aam
or
xchg
inc
pop
subb
sub
call
mov
inc
mov
fwait
xchg
lcall
add
mov
insb
lods
jge
fs
imul
dec
popf
and
adc
push
and
lahf
pop
pop
loopne
fst
mov
or
and
sarb
mov
mov
aaa
repnz
inc
das
add
test
rol
jle
pop
fsubrs
xchg
inc
pop
popf
fs
xchg
push
int3
mov
incl
dec
popa
andb
xchg
jle
mov
imul
pusha
lahf
push
mov
mov
cmp
das
push
mov
mov
arpl
jecxz
pop
mov
repz
pop
notb
lret
mov
aaa
pop
inc
call
sbb
pop
inc
adc
and
and
cmp
push
repnz
adc
or
cltd
mov
popa
cwtl
movb
pushf
lea
ja
adc
pushf
sub
shld
inc
lea
add
not
shl
dec
dec
mov
rcr
mov
cmc
repnz
pushf
jmp
pusha
jmp
add
inc
dec
insl
popa
imul
jb
inc
imul
imul
and
jno
jbe
add
inc
inc
js
jne
je
outsb
gs
imul
and
jno
jbe
add
inc
inc
js
outsb
je
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
imul
xor
insb
inc
push
fs
jb
gs
imul
add
add
fs
je
inc
push
dec
je
insl
dec
imul
fs
je
gs
insl
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
push
jb
stc
bt
test
cmp
pushf
movb
jmp
jbe
insb
js
xor
bound
add
xchg
sbb
jbe
mov
arpl
mov
xor
sub
lods
xchg
mov
or
xchg
jns
arpl
cs
bound
jo
or
subb
rorb
aad
lods
notb
mov
and
sub
leave
shrb
add
dec
jo
and
pop
xchg
sub
mov
mov
pop
lahf
jbe
cmp
lock
xor
js
xor
mov
add
add
mov
aad
lahf
incl
lods
inc
add
subb
stos
int3
sub
negl
daa
cmp
cmp
ss
ljmp
or
jbe
xor
lcall
movsb
adc
mov
andb
mov
stos
sar
fnstcw
jno
mov
stc
cltd
pop
subl
pop
icebp
add
out
mov
jle
xor
std
push
aam
scas
sub
add
incl
fdiv
jo
cmp
jae
cs
pop
or
sub
sahf
pusha
cwtl
or
xchg
into
lods
push
ss
int3
xchg
std
pop
out
mov
es
clc
mov
push
test
and
jmp
push
fidivl
insb
arpl
push
push
mov
dec
adc
in
xchg
sbb
imul
shlb
inc
jmp
fildll
dec
js
inc
inc
jge
lods
dec
jbe
outsl
jb
aaa
xor
bound
add
inc
and
dec
sbb
and
jmp
add
inc
pop
insl
insb
jae
push
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
jbe
push
je
gs
insl
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
sbb
mov
mov
insl
pop
std
in
xor
cmpsl
sub
subl
imul
xor
shll
movb
or
inc
sbb
subl
lock
call
mov
xor
data16
add
pusha
cmp
mov
inc
sub
dec
int
mov
pop
nop
test
sbb
xchg
add
cmp
enter
fbstp
pop
jp
sub
lds
in
add
sub
push
fs
jge
aad
cmpsl
enter
call
sbb
mov
repz
and
in
cwtl
sahf
hlt
mov
dec
pusha
mov
daa
sub
sahf
lret
mov
pusha
or
leave
imul
in
sub
cld
mov
sub
mov
in
sbb
int3
cmpsb
inc
outsb
or
les
scas
dec
lret
arpl
jno
sbb
cmp
mov
int3
xchg
sub
lea
aad
and
stc
jecxz
shll
xchg
ss
and
xlat
cmc
adc
xor
sub
ss
push
cmp
xorb
dec
xchg
data16
adc
loop
popa
push
mov
mul
leave
out
pop
fnsave
mov
adc
and
push
int3
mov
ss
and
or
lds
das
dec
pop
and
sub
mov
mov
sbb
bound
in
add
dec
std
ja
jnp
xor
push
aas
jo
stc
fisubrs
xchg
sarl
adc
dec
push
or
aad
into
jg
ret
and
adc
push
and
insb
gs
ds
mov
int3
outsb
inc
sbb
adc
mov
pop
pop
hlt
push
mov
sub
sbb
jnp
xor
pushf
cmp
adc
movsb
fdivrs
mov
cld
mov
int3
xchg
fs
mov
das
outsb
push
push
leave
fwait
rorl
cmpsb
daa
jns
sbb
outsl
mov
dec
loope
shlb
in
pop
mov
test
sbb
sub
mull
xor
outsb
push
mov
ds
mov
or
pop
repnz
shlb
sahf
jae
mov
ja
mov
scas
int3
mov
xchg
loope
sbb
sub
dec
scas
lret
movsl
leave
jnp
pop
int3
sahf
adcb
lods
mov
dec
aaa
movsb
fbstp
jge
jb
add
in
or
lods
bound
xchg
inc
insb
insl
aas
cli
lcall
sbb
lods
fnstcw
imul
xchg
inc
sbb
lcall
imul
dec
sbb
sub
cmp
and
stos
and
and
mov
push
push
xor
repz
out
test
xchg
xor
add
dec
in
mov
mov
inc
das
nop
xor
jne
arpl
arpl
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
outsl
outsb
jae
jb
imul
imul
jb
je
je
je
add
add
fs
je
inc
push
dec
je
insl
dec
imul
js
jb
gs
imul
jo
add
mov
ret
mov
bt
push
test
jmp
add
inc
push
je
arpl
jae
jae
imul
imul
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
dec
push
je
inc
fs
gs
jno
jo
add
add
js
je
insb
jae
imul
imul
and
jno
jbe
fs
cs
mov
jbe
bound
repnz
outsb
addr16
jle
ss
mov
or
xchg
xor
mov
and
dec
sbb
mov
mov
mov
jmp
xchg
insb
mov
xchg
and
push
sub
pop
add
and
sbb
mov
jnp
lods
xorb
xor
xchg
into
mov
hlt
adc
loopne
dec
in
ret
add
sbb
push
arpl
sbb
int
repnz
inc
jne
pop
or
mov
stos
inc
dec
jl
push
popa
jno
into
jp
imul
add
bound
xor
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
push
arpl
insb
insb
imul
outsl
outsb
je
outsl
insb
inc
inc
jne
outsl
push
arpl
insb
insb
inc
outsb
popa
bound
and
jno
jbe
xchg
xchg
adc
pop
mov
js
insl
lea
xchg
pop
jge
adc
inc
out
mov
cld
inc
push
or
repz
mov
jbe
push
xlat
lcall
xor
pop
mov
cwtl
add
jnp
pop
xor
add
pop
out
inc
scas
dec
in
cs
popa
and
jmp
gs
lahf
mov
xor
aas
pop
jnp
sbb
fdivl
mov
cs
adc
add
jle
stc
push
mov
rorl
shll
xchg
mov
adc
mov
lea
cmp
xor
loop
add
mov
xchg
pop
jmp
mov
repz
dec
and
fwait
xor
mov
inc
push
and
popa
or
sti
push
aas
pop
push
mov
call
in
subb
and
dec
push
adc
nop
xor
lahf
jno
push
out
jp
pop
outsl
inc
xchg
outsb
dec
pusha
add
vpshab
shrb
push
push
sub
aas
stos
repz
mov
ret
push
fldenv
data16
sub
jo
cmp
mov
mov
mov
inc
add
movl
das
push
pop
stos
cld
cmc
dec
stos
add
and
pop
xor
xchg
xor
call
mov
push
mov
insb
dec
fisubs
mov
add
fs
je
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
jne
outsb
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
outsb
arpl
imul
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
dec
outsl
popa
fs
jno
jbe
add
inc
inc
js
imul
imul
and
jno
jbe
add
inc
push
jp
popa
bound
imul
imul
and
jno
jbe
add
inc
inc
js
imul
imul
imul
and
jno
jbe
mov
inc
xchg
call
fbstp
notb
hlt
rep
cmp
cld
fstps
icebp
dec
out
jge
sbb
sub
push
out
into
pop
mov
mov
or
and
gs
mov
mov
jge
shlb
push
mov
xchg
les
add
loop
daa
test
fs
out
loopnew
xchg
inc
cmp
movsb
lcall
xchg
sub
aad
adc
add
call
fidivs
add
out
imul
dec
or
and
ret
fnsave
jmp
push
repnz
jns
cli
xchg
movsb
popf
leave
and
jp
xchg
aas
leave
mov
insl
adc
push
push
pop
add
sub
outsl
jae
out
inc
or
shr
and
xchg
ja
jp
mov
mov
lret
fnstenv
pop
ljmp
lret
mov
repnz
inc
push
out
push
lea
jno
cli
xor
or
pop
jg
fwait
cmc
adc
bswap
in
push
popf
aaa
fsubs
movsl
fnstsw
xor
xchg
cmpsb
fimuls
icebp
rolb
sbb
inc
loope
loopne
cmpsl
test
shll
fucomi
mov
xchg
lock
jns
sbb
jae
pop
cmp
stos
xchg
cmp
shr
das
jp
jge
xchg
push
enter
shlb
arpl
jbe
icebp
push
cmp
mov
dec
pop
push
or
dec
test
mov
lds
jb
sbb
jnp
push
pop
clc
shrb
mov
out
mov
testl
lods
aaa
sub
or
push
xchg
xchg
sbb
rolb
ss
mov
cmpsb
inc
arpl
add
addr16
andb
or
flds
add
jb
fs
imul
imul
and
jno
jbe
mov
pusha
mov
push
pushf
lea
jmp
push
orb
add
jae
or
add
adcb
xor
lahf
and
xor
jnp
xor
fnstcw
or
or
insb
test
test
hlt
xchg
pop
lret
adc
pusha
fbstp
pop
aas
popf
neg
xor
aaa
rcrb
cmpsb
hlt
xor
fwait
pusha
jg
test
add
inc
adc
in
add
inc
pusha
adc
mov
in
inc
bound
dec
sub
and
pusha
dec
jecxz
enter
int
cmp
fwait
clc
fdivrs
lock
mov
add
ss
xor
push
sub
mov
mov
jns
cld
int3
and
sbb
sbb
loop
adc
sub
pop
inc
fwait
test
std
insb
add
in
ds
hlt
fnsave
xchg
lcall
jp
add
jecxz
out
jecxz
inc
aas
aad
pop
repz
mov
fwait
pusha
cwtl
bound
in
nop
add
mov
sti
pop
mov
mov
xor
push
dec
ljmp
jo
push
lds
lret
fdivr
nop
inc
dec
jnp
mov
std
sub
add
dec
jnp
sub
fldl
call
out
cmp
and
imul
ret
or
adc
bound
mov
mov
inc
sub
cmpsb
add
mov
ficompl
mov
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
imul
outsb
gs
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
jae
gs
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
push
fs
je
inc
push
dec
je
insl
inc
inc
jae
imul
fs
imul
jo
ss
fs
je
inc
push
inc
imul
je
add
inc
inc
js
outsb
je
gs
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
popa
jbe
push
outsl
push
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
sbb
mov
enter
xchg
push
push
cld
adc
adc
call
leave
repz
or
xchg
mov
stos
or
lret
dec
or
lret
xlat
loop
ret
and
in
add
xor
lods
push
cltd
js
mov
jge
xchg
ret
fsub
push
and
and
dec
out
and
cmp
clc
mov
pop
cmp
mov
outsb
subb
dec
out
jnp
icebp
bound
push
and
dec
sbb
pop
cmpsb
aaa
dec
and
cmpsl
dec
mov
jge
jmp
mov
cmp
xor
mov
push
notb
jo
mov
jno
xchg
stos
push
cld
mov
lea
push
arpl
addr16
insl
shll
in
dec
dec
jbe
xor
popf
je
test
loope
inc
xor
ja
mov
dec
imul
push
and
cmc
loopne
dec
out
and
movsl
mov
ljmp
sub
cmpsb
and
cmp
lods
push
test
xchg
sbb
dec
push
sbb
shll
cltd
ljmp
mov
dec
fisttps
dec
jns
subl
mov
mov
push
icebp
inc
pop
lock
pmuludq
xor
mov
enter
pop
push
xchg
or
cltd
jno
pushf
cmc
fnstcw
repz
cmp
push
sub
inc
insb
popa
jae
gs
push
inc
imul
insl
inc
and
arpl
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
aaa
sbb
sbb
mov
inc
jmp
lds
or
shl
in
loopne
aad
cmpsb
ss
mov
shrb
inc
and
clc
mov
jmp
rol
lea
dec
jae
outsb
cmpsl
sbb
lds
jge
movb
ljmp
hlt
arpl
das
mov
stc
push
inc
mov
ficompl
loope
inc
jle
add
add
push
xchg
cmc
iret
xlat
negb
mov
int
cltd
hlt
push
xor
pop
js
repnz
pop
fidivl
sbb
jecxz
hlt
aam
leave
sbb
mov
dec
add
je
mov
cmpsl
sbb
leave
call
adc
fptan
xlat
cmp
lret
dec
or
push
inc
pushf
ret
or
loopne
stos
mov
mov
loopne
xor
pop
xor
cmp
scas
ds
fcoml
or
adc
add
daa
jl
pop
imul
fistps
xor
mov
test
xchg
cmp
pop
int3
or
std
popa
or
loopne
in
mov
jl
in
xchg
add
les
ja
daa
les
adc
mov
fs
repnz
sti
xchg
mov
sub
ljmp
mov
pushf
dec
shlb
sarb
add
subl
mov
cmp
flds
mov
and
sbb
ds
fmull
out
dec
or
movsl
adc
mov
and
push
pushf
pop
imul
inc
leave
or
adc
gs
push
movsb
mov
mov
mov
jg
xchg
jns
lods
jmp
ret
pop
lcall
lcall
cli
lods
aaa
test
imull
lods
ja
pop
cmc
sub
fiaddl
fistpll
adc
cltd
ja
aad
jmp
movl
ficomps
sub
mov
inc
insb
dec
sub
movsl
and
push
mov
jp
add
stos
cwtl
les
popf
push
cs
xor
jp
jg
adc
pop
popa
les
or
xor
cld
sub
dec
dec
dec
mov
or
stos
dec
mov
loopne
push
aaa
or
cmp
sbb
lahf
clc
lcall
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
je
insl
inc
push
push
and
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
push
fs
je
inc
push
dec
je
insl
imul
fcompl
sarl
mov
cmp
cmp
mov
jo
xor
es
and
jno
cmp
call
mov
cld
inc
or
push
jns
dec
add
ret
hlt
fidivrs
cs
inc
cltd
push
aam
xchg
cmp
pop
es
push
mov
cmpsb
daa
dec
and
cmp
pop
test
inc
fstpl
mov
cmp
xchg
mov
testb
sbb
xor
cs
xlat
cmpsb
daa
add
mov
inc
daa
ret
jae
in
or
fidivs
cmp
dec
mov
into
ja
dec
stos
pop
lds
cli
push
mov
pop
loope
test
xorl
xchg
mov
arpl
or
push
xchg
test
cmc
sbb
push
in
sbb
xor
pop
mov
nopl
mov
imul
mov
mov
fcmovnbe
cmpsb
daa
cs
ret
pop
xor
aam
fstpl
add
jae
xor
add
mov
mov
jmp
movsl
nop
stos
mov
cmpsl
jl
xchg
jnp
mov
dec
arpl
rcrl
sarl
bound
divl
mov
jmp
cld
jbe
or
jecxz
testl
mov
clc
xchg
jp
hlt
xchg
jg
imul
inc
icebp
pop
negl
fistpl
fnsave
jo
jo
test
cltd
mov
iret
scas
jmp
lret
xor
es
int
andb
loop
or
sub
subb
adc
aaa
lcall
push
inc
xchg
lahf
leave
cli
xchg
je
test
xor
dec
fisubrs
leave
mov
scas
aam
fwait
jns
hlt
pop
cli
fstps
ja
pop
sbb
test
nop
fistpl
pushf
notl
pop
mov
xor
xor
mov
out
push
add
push
call
mov
movsb
inc
and
dec
cli
dec
push
pop
dec
fsubrl
and
cwtl
inc
in
mov
mov
lods
mov
iret
pop
mov
cmpsb
adc
data16
pop
jno
loopne
push
out
cld
add
fnstcw
pop
jno
mov
mov
xor
pop
test
sub
xchg
inc
fistpl
add
sub
and
pop
push
nop
cmc
faddl
test
xor
cwtl
push
imul
std
sbb
xor
fdivrs
jae
gs
fidivs
bound
fbstp
ror
enter
cmp
loopne
cmp
int
cli
mov
or
add
dec
and
es
xor
cli
aam
dec
push
adc
jae
mov
ja
ret
jnp
jge
jb
mov
fistps
test
jne
in
mov
inc
and
or
cmpsb
lahf
xor
sbb
pop
in
cmpb
or
xor
imul
push
popa
mov
rcll
xchg
imul
ret
pop
jp
or
push
aad
pop
jns
mov
fwait
cltd
sbb
aam
dec
lret
std
cmp
mov
les
movsl
add
ficompl
pop
daa
or
push
lock
pop
mov
cwtl
sub
lret
xor
lahf
jbe
clc
sbb
nop
push
xor
mov
sub
dec
mov
shll
push
jae
aas
sub
imul
dec
aad
fisubl
cmp
cmpsb
lock
aad
lods
jg
das
push
lock
clc
sbb
aas
adc
daa
adc
xorb
mov
cmp
adc
fcomps
and
dec
lahf
mov
test
mov
mov
outsb
push
loope
pusha
mov
xor
fdivs
jbe
pop
add
and
scas
mov
xchg
push
lret
and
mov
cli
lcall
sub
cli
jg
loopne
cmc
mov
or
fdiv
lret
cmpsb
mov
xor
aaa
or
cmpl
cmp
in
scas
aad
sub
pop
aaa
fistpll
xchg
icebp
push
rorb
xor
mov
mov
insl
push
arpl
outsl
jb
imul
imul
and
jno
jbe
add
inc
dec
fs
popa
insb
imul
and
jno
jbe
push
call
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
jb
popa
je
inc
imul
jb
xor
inc
outsl
jb
jae
push
push
arpl
insb
insb
inc
outsl
js
xor
push
fs
je
inc
push
inc
imul
je
xor
push
fs
je
inc
push
inc
imul
je
add
inc
push
jne
jb
jae
gs
imul
imul
and
jno
jbe
add
inc
push
jne
jae
fs
outsb
outsb
gs
inc
imul
imul
and
jno
jbe
add
inc
push
jp
imul
imul
je
outsl
outsb
and
jno
jbe
sbb
ret
inc
sar
aam
inc
push
insb
xchg
cmp
pop
leave
loopne
and
icebp
mov
fstps
jmp
mov
or
aas
or
stos
add
rcrb
jmp
insb
in
cltd
push
roll
nop
push
lret
out
push
and
dec
bound
push
arpl
push
repz
pop
dec
push
xlat
sbb
mov
dec
outsl
or
out
dec
ficoml
dec
mov
push
pushf
jbe
filds
adc
push
mov
jl
or
adc
ss
xor
rcll
nop
mov
dec
test
jg
pop
xor
clc
sbb
mov
ja
sub
xor
lahf
fdivs
dec
daa
subb
mov
lods
pop
mov
xlat
sbb
fwait
repz
fwait
mov
das
cmp
ret
mov
mov
mov
push
inc
in
in
jmp
inc
lods
aam
in
out
dec
mov
dec
ja
pop
mov
iret
mov
jge
fwait
mov
and
and
ficoms
lcall
xchg
mov
icebp
iret
or
and
adc
mov
push
out
pop
jg
lock
xor
mov
sbb
ljmp
lcall
cltd
jnp
cs
movsl
dec
and
mov
mov
movsl
add
add
jne
insl
outsb
jne
inc
imul
je
outsl
outsb
and
jno
jbe
movsl
push
stc
aad
inc
add
cmp
popf
test
xchg
and
das
data16
cmp
sub
inc
and
loop
lods
push
cmp
adc
popa
xchg
ret
repnz
ret
and
pop
mov
push
xchg
sti
add
jb
fisubs
daa
adc
and
inc
mov
popa
shlb
les
add
cmp
mov
mov
cmp
xchg
clc
push
ja
insl
orl
decl
bnd
and
fs
pop
mov
jg
mov
loopne
sub
push
sbb
cwtl
inc
outsb
sti
adc
addr16
mov
dec
mov
add
ffreep
arpl
jg
int
loopne
movsl
pop
jecxz
lcall
pop
nop
xor
lret
xor
popf
popf
insb
inc
shr
mov
xchg
aaa
pop
xor
push
sub
cmp
xor
ss
inc
aad
inc
add
shrl
and
fistl
loopne
test
inc
mov
test
int
lret
ss
ret
sbb
jge
orb
cmp
pushf
div
fs
or
sbb
testl
jl
dec
cs
outsb
lock
enter
xor
and
sub
push
pop
nop
fwait
repnz
add
call
mov
pop
jp
repz
jl
cmp
push
jmp
add
jo
bound
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
mov
lea
ja
call
mov
inc
pop
jp
clc
sbb
shlb
inc
mov
pop
neg
in
stos
pop
mov
ja
std
sbb
test
or
lock
shlb
pop
mov
fildl
cmp
inc
stos
int
xchg
sub
lea
fistpll
inc
loop
push
cld
pop
inc
ljmp
adc
and
jno
pop
xchg
or
inc
aam
inc
mov
cmpsb
enter
push
aaa
iret
fidivl
loop
sub
inc
out
mov
out
fcoml
dec
bound
mov
xchg
cmp
popf
dec
test
inc
jge
mov
cmp
bound
shlb
dec
icebp
loop
dec
mov
sub
popf
cmp
pushf
ja
push
dec
cmpsl
dec
out
insl
das
xchg
adc
inc
sbb
inc
mov
rcrl
pop
enter
subl
mul
aas
loop
aas
inc
aaa
cmp
mov
out
push
sub
lds
subb
scas
jbe
scas
sahf
pop
add
adc
cld
stos
add
xchg
aam
mov
jb
pop
stc
test
out
add
fwait
add
popa
out
dec
jne
pusha
and
push
cmp
das
and
push
pop
mov
mov
jmp
fidivrs
lock
or
stos
popf
xlat
lahf
shlb
out
test
dec
insl
add
mov
adc
mov
rcrl
mov
aas
xchg
negb
inc
xchg
lea
cmpsl
pop
jb
rol
in
add
repz
cmp
jne
std
adc
cmp
inc
inc
stos
ret
xor
shlb
into
adc
inc
out
loop
cmpsl
or
loopne
mov
repz
ds
mov
sub
mov
dec
mov
outsl
les
pop
cmc
xchg
push
rcrb
notl
fbstp
jl
push
test
dec
sub
fidivs
das
aad
fdivrp
xchg
mov
jl
cmp
repnz
jnp
shll
inc
pusha
stc
imul
ret
gs
mov
sbbl
and
inc
ret
sarb
push
dec
push
push
add
push
jne
arpl
adc
out
cmp
and
test
adc
inc
xor
in
xor
rcrb
fnstcw
popa
lcall
out
rcrb
leave
std
dec
sub
mov
jbe
repz
add
mov
xchg
scas
fcoml
jl
faddp
and
fisttps
pop
mov
je
inc
dec
lahf
jae
sub
cmpsl
ds
xor
mov
and
ror
jne
jecxz
mulb
cld
fnstenv
xchg
adc
and
ja
jle
add
push
xor
push
in
and
mov
stos
fstp
call
in
dec
repnz
inc
push
fs
je
inc
push
inc
jne
arpl
gs
popa
insl
gs
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
jns
jne
imul
popa
arpl
insb
gs
popa
insl
gs
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
std
std
mov
push
mov
ret
jns
fldcw
aas
or
mov
pop
mov
xor
adc
pushf
dec
jge
jmp
dec
arpl
aam
pop
movb
fsubl
adc
test
icebp
pop
xor
inc
addr16
mulb
push
lods
and
iret
daa
arpl
ret
sub
lret
jmp
pop
rorb
add
js
imul
je
insb
jae
imul
imul
and
jno
jbe
add
inc
dec
jbe
jns
gs
inc
imul
je
outsl
outsb
and
jno
jbe
pushf
pusha
lea
je
jmp
add
sub
cmc
or
pusha
lea
je
call
outsb
std
rcrb
in
push
in
cli
ljmp
movsb
xchg
out
leave
popf
fdivs
sbb
push
cmp
ja
cmp
cmp
shrl
in
filds
into
data16
inc
and
adc
stc
adc
mov
jmp
fadds
or
dec
xlat
int3
fs
and
mov
imul
pop
and
movsb
iret
sbb
movl
fisttps
xchg
fadd
lods
mov
push
mov
cmp
ss
lock
jne
jge
fs
jmp
xchg
rorl
mov
loopne
xchg
rolb
sbb
add
mov
adc
fildll
fidivl
xor
push
and
add
push
adc
inc
out
loope
es
sub
or
cmp
iret
sbb
sbb
pop
mov
lea
insl
loope
test
in
add
dec
xlat
int3
push
fnstenv
mov
jnp
xor
inc
xor
test
jg
aam
daa
jnp
scas
xchg
pop
add
add
lock
sub
jne
jge
data16
jb
cmp
jl
testl
fs
out
or
push
mov
dec
jne
sbb
xchg
cli
push
cmc
sbb
fbstp
mov
aaa
mov
add
fs
je
inc
push
dec
je
insl
dec
imul
dec
popa
outsb
addr16
imul
jbe
js
insb
jb
insb
aaa
xor
bound
add
enter
inc
push
jge
lock
test
in
gs
jbe
addr16
aam
dec
xor
std
fstpt
subb
outsb
mov
arpl
fnstcw
or
es
sbb
adc
xor
test
popa
rcrb
in
sbb
cs
lret
popa
sub
cmp
sbb
mov
mov
sub
stos
mov
dec
ds
popa
add
inc
dec
insl
jp
outsb
data16
popa
je
inc
imul
imul
and
jno
jbe
rcrl
into
sbb
cmc
pop
mov
pop
inc
test
mov
fisubrs
dec
out
xchg
into
cmpsl
imul
or
inc
loop
sub
or
inc
fbstp
xchg
inc
add
mov
pushf
push
pop
jns
fdivl
dec
push
shrb
adc
and
pop
fisubrs
lea
sub
inc
outsb
les
pop
jl
movsb
sar
jne
sbb
hlt
sarb
xchg
scas
xlat
into
mov
adc
push
decl
push
fisubrs
cmp
mov
enter
inc
push
push
arpl
lahf
dec
test
pop
xchg
sti
sub
or
xor
pop
shr
jne
jb
mov
aad
es
xchg
scas
imul
out
in
insb
adc
and
sarl
je
mov
pop
xchg
and
sub
mov
das
adc
pop
in
insb
in
sarl
adc
adc
in
aam
mov
mov
shr
pop
xchg
out
jmp
lods
dec
and
push
enter
mov
mov
and
mov
push
push
in
ret
das
rolb
push
into
and
jmp
and
in
push
push
jno
in
insb
xchg
stos
scas
jecxz
js
cmp
fistpll
push
std
fnstenv
jmp
mov
sub
inc
js
jo
outsb
gs
popa
insb
imul
and
jno
jbe
call
pushf
pop
lea
call
inc
push
inc
pusha
pushf
pushf
lea
jmp
add
inc
inc
js
popa
insb
outsb
fs
jb
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
popa
fs
jb
insl
inc
imul
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
and
add
cs
adc
lcall
inc
das
test
into
jo
cmp
mov
jp
mov
iret
stc
js
push
xchg
or
out
cmpsl
int
inc
in
inc
and
and
mov
xor
inc
pop
ja
dec
xchg
mov
shl
lret
rcr
ret
jns
push
nop
xchg
stc
rcll
mov
push
mov
xor
xchg
xor
push
les
ret
push
sub
dec
lret
sbb
pop
mov
mov
pop
aam
lret
dec
mov
inc
out
xchg
push
cld
xchg
or
loop
push
mov
lcall
sub
push
pop
fdivp
pop
mov
leave
lock
dec
loopne
xlat
fsub
add
enter
popf
jne
dec
and
fisttps
xchg
test
shlb
sbb
xchg
fwait
popf
clc
insl
jno
das
sahf
mov
out
dec
scas
lret
call
sbb
and
in
popf
xchg
push
sub
fcoml
xor
aam
fidivrs
mov
mov
in
or
ret
push
mov
cli
pop
sub
into
gs
or
cmp
dec
or
xor
cmp
lea
sahf
xrelease
jge
shr
cmp
or
inc
mov
and
outsl
mov
xchg
aaa
pop
jnp
ss
cld
pushf
ds
dec
hlt
insl
jno
icebp
shrl
lea
call
pusha
pusha
push
lea
jne
movsbl
jmp
add
inc
push
jne
insl
outsb
jne
imul
imul
and
jno
jbe
add
inc
inc
js
jo
outsb
gs
imul
and
jno
jbe
scas
cld
into
enter
cmc
push
jg
aaa
adc
repz
cmpsl
aam
dec
aad
mov
ljmp
outsl
icebp
imul
add
iret
testl
jne
add
mov
call
loopne
fyl2x
push
jge
jo
pop
movsb
hlt
fmulp
inc
lods
inc
cmp
mov
and
and
rorb
les
or
adc
sbb
aaa
xlat
cmp
xor
ja
andl
sarb
into
pop
lret
inc
lods
xchg
jp
or
nop
jb
jnp
fbstp
xor
repz
cmc
movsl
sub
adc
push
int
ja
arpl
inc
xor
mov
push
clc
xlat
outsl
xlat
sub
sub
push
cmc
inc
jge
sub
xchg
push
jb
pop
sub
cmc
push
fdivl
fs
mov
or
insb
push
loop
popf
int3
ds
jecxz
sbb
lcall
cmp
outsl
cmpsb
movsb
popf
bound
sbb
jne
loopne
shrl
stos
push
notl
and
jb
xchg
das
cmpsb
pop
std
lods
push
aas
push
cmp
and
mov
je
mov
pushf
ss
mov
dec
fnsave
insl
rol
jmp
xlat
lock
outsl
cmp
dec
dec
ja
mov
push
jb
or
mov
push
ret
pop
cld
lret
loop
sub
and
int3
ret
pop
xchg
enter
ret
daa
sub
imul
sub
mov
std
cmp
popf
sbb
mov
call
cwtl
add
mov
or
pop
pop
sub
popa
mov
cmpb
cld
xor
movsl
inc
pop
dec
out
add
inc
outsb
push
addr16
jns
lea
out
sub
arpl
sbb
les
add
sbb
out
outsb
mov
out
xchg
test
stc
mov
cmp
mov
pop
dec
out
jbe
fwait
adc
popa
outsb
push
shrb
sti
jmp
mov
mov
sahf
mov
mov
adc
adc
outsl
jp
insl
mov
repnz
out
paddw
pop
cmp
inc
push
mov
mov
into
stos
dec
andb
insl
xchg
out
rcr
pop
xor
bound
sbb
push
nop
ds
mov
sahf
mov
cmp
fstp
sti
adc
xor
cs
cmp
pop
xchg
mov
jecxz
test
push
ss
dec
cmp
mov
leave
and
or
mov
sbb
mov
stos
inc
test
inc
mov
jo
nop
mov
pop
cmp
in
inc
cmpl
test
push
xor
mov
jg
cmc
imul
into
fstps
mov
test
negb
sarl
outsl
jle
sar
test
je
imul
xor
inc
stc
shll
push
mov
mov
shrl
add
jo
ret
negb
sub
jnp
xor
or
cmc
jo
mov
inc
pop
pusha
ds
push
jnp
aas
shl
pop
jp
xchg
dec
les
mov
pop
call
inc
pop
lock
jo
mov
cwtl
or
popf
test
push
add
jno
mov
js
sbb
cmp
cmpsb
dec
and
sub
ss
lods
ret
mov
lock
sti
dec
test
lods
mov
int3
sub
cmpl
movsl
sti
iret
cmpsb
push
lods
xchg
pop
ja
pop
je
aam
add
and
and
scas
pop
gs
dec
aaa
xor
cmpl
jb
les
jle
jp
std
sbb
push
js
jae
mov
pushf
into
add
mov
sbb
and
out
mov
pop
movsl
and
fwait
outsl
mov
adc
and
add
repz
mov
sbb
xchg
mov
loop
mov
jns
mov
add
push
popa
push
outsl
fs
lods
cmc
std
xchg
add
sbb
inc
sub
aas
cmp
in
les
sub
movsl
sti
inc
fidivl
mov
or
mov
shll
out
xor
dec
push
stc
sub
movb
test
add
call
add
inc
push
fs
je
inc
push
inc
jne
arpl
gs
inc
and
jno
jbe
add
inc
push
jne
outsw
jb
inc
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
popa
jb
insl
add
add
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
data16
jb
outsl
outsb
jae
jb
arpl
outsb
and
jno
jbe
pusha
call
add
inc
dec
jbe
arpl
imul
insb
imul
and
jno
jbe
pop
test
les
and
test
outsl
inc
stos
or
cltd
insl
cltd
cmc
cmpsl
pop
inc
jl
lahf
out
or
in
les
add
sub
rorl
sbb
out
push
and
cwtl
mov
mov
pop
inc
jmp
repnz
push
stos
xor
repz
jmp
cli
rorl
sbb
out
push
xchg
mov
ret
sbb
lcall
mov
dec
sarb
add
xor
pop
mov
in
push
clc
cmp
mov
mov
pop
dec
aad
sbb
data16
cmpsb
mov
in
adc
pop
in
mov
cmp
pop
jns,pn
sarb
lds
cmp
jp
leave
subl
fidivrl
repnz
jge
mov
push
xlat
sbb
and
gs
jle
lods
or
sbb
call
dec
sub
popa
fidivs
movsl
or
xor
mov
mov
daa
cli
shrl
cmp
aas
pop
icebp
into
ud1
rorb
mov
xchg
mov
call
lods
jle
sahf
pop
out
fldenv
jmp
xchg
dec
movsb
lret
clc
dec
cmp
shrl
jmp
mov
sbb
inc
das
pop
clc
imul
movsb
add
aaa
jbe
mov
xchg
jnp
dec
mov
fdivl
fsubl
mov
pop
mov
adc
xchg
scas
or
add
inc
push
je
arpl
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
dec
push
je
inc
insl
jo
jno
jb
add
inc
and
fwait
xlat
lea
jne
shl
bsr
not
mov
bt
add
push
clc
movzwl
btc
bsr
rol
mov
test
bt
stc
add
clc
mov
pushf
pusha
test
jmp
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
popa
outsb
push
gs
jp
and
jno
jb
je
add
add
insl
push
jae
insl
jo
gs
imul
imul
and
jno
jbe
lea
je
clc
jmp
out
aas
ret
into
cs
subb
out
imul
in
mov
in
es
push
dec
ja
inc
sub
and
mov
sbb
xchg
clc
pop
lahf
mov
jle
push
icebp
std
adc
loope
or
stos
sahf
xchg
mov
jo
arpl
xchg
cmpb
imul
pop
pop
xor
mov
push
rcrl
bound
cmpsl
lret
sub
or
pop
mov
mov
xor
mov
dec
mov
xor
pop
jg
inc
jbe
push
fs
sub
push
xor
stos
sbb
enter
push
push
das
mov
xchg
dec
bound
stos
push
and
adc
icebp
xor
and
movl
fdivrs
cmp
jns
mov
fdivrs
push
mov
jno
pop
fs
ja
das
jge
sbb
mov
mov
mov
pop
add
pop
pop
ljmp
mov
jl
jo
xchg
jle
pop
xor
dec
add
in
xorb
or
fcoms
pop
cwtl
data16
jb
stos
inc
push
fcoml
sbb
sbb
sbb
mov
ja
jns
push
adc
add
fists
lds
sub
add
jle
movsl
fstpl
mov
push
dec
and
popa
lds
or
xchg
aad
pop
rcrb
dec
cmpsl
xchg
out
int3
loop
inc
jp
sub
pop
movsl
pop
sbb
jnp
push
push
scas
and
sub
inc
daa
or
dec
stos
sbb
or
jle
les
sahf
push
xchg
mov
sub
xor
and
cmpsl
or
dec
mov
mov
mov
or
pop
lret
mov
rcrb
add
add
scas
inc
push
lcall
pop
out
out
sub
jnp
mov
dec
mov
mov
mov
mov
jnp
pop
cli
lcall
sub
lock
and
cmp
loop
jge
je
ret
ljmp
jne
inc
loopne
stos
sbb
cmp
les
cmpb
sbb
fsubr
mov
push
lods
dec
jp
jne
cmp
fstpt
clc
jecxz
and
mov
aad
add
bound
sbb
pop
jae
mov
add
and
cmpsl
addr16
mov
cmp
mov
jg
mov
rorl
cs
xchg
mov
aaa
mov
in
imul
dec
rol
push
cli
jp
cmp
js
mov
stos
mov
push
ret
les
repnz
cmp
adc
inc
sbb
pop
popf
out
inc
sub
sbb
push
cmp
mov
std
cli
loope
and
pop
cmp
imul
inc
inc
js
arpl
jae
push
push
popa
outsb
gs
inc
add
or
cmp
push
call
bt
bt
jle
add
jge
push
pusha
lea
je
pusha
add
pushf
lea
jmp
mov
inc
mov
inc
in
dec
pop
pushf
dec
hlt
and
push
ret
sbb
and
pop
cmp
mov
std
sub
mov
jmp
ds
inc
or
call
pop
jle
loope
bound
adc
enter
ja
sub
xchg
pop
xchg
scas
dec
mov
jns
mov
mov
icebp
shlb
dec
movsl
mov
jle
add
inc
push
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
inc
gs
jb
addr16
bound
arpl
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
imul
imul
and
jno
jbe
add
inc
inc
insb
popa
jae
gs
push
push
gs
imul
inc
jae
imul
jo
cmp
popa
jae
gs
push
push
gs
imul
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
arpl
gs
popa
addr16
outsb
fs
jno
jb
imul
sbb
inc
jmp
jecxz
das
or
daa
iret
test
iret
push
xor
inc
xlat
inc
stos
out
out
lods
les
or
cs
mov
sarb
or
shrb
imul
imul
repz
mov
jb
lock
pop
sub
sbb
push
jle
mov
aaa
fdivrs
fnstenv
test
inc
cmpsl
into
push
mov
jae
xchg
outsb
adc
mov
scas
ret
in
push
lcall
xorl
outsb
cmpsl
fbstp
and
or
es
xor
adc
mov
cmp
adc
aam
insl
mov
xor
iret
xchg
jl
repz
jnp
mov
sti
push
repnz
rorb
add
dec
jge
test
mov
loop
lods
dec
and
dec
sub
mov
and
mov
jmp
loop
stos
popa
dec
ret
xchg
fldenv
ret
jmp
je
push
mov
test
mov
push
test
sub
adc
mov
jge
icebp
push
incl
addr16
dec
mov
cli
cmp
xor
sbb
mov
adc
cli
add
xchg
mov
aas
push
sub
sbb
inc
incb
add
arpl
gs
imul
imul
and
jno
jbe
stos
clc
lret
inc
lea
or
mov
ljmp
dec
and
test
dec
ror
xchg
adc
xor
or
mov
outsb
ret
cltd
jb
mov
cmp
and
mov
fdivs
cmc
xor
jg
in
test
mov
add
pushf
shrb
ja
incl
les
xchg
jle
jnp
outsb
mov
and
lock
daa
xor
push
out
fstps
test
push
push
xlat
mov
jg
nop
inc
lahf
sbb
scas
mov
call
in
sbb
movsl
mov
jecxz
xchg
inc
jmp
mov
popf
mov
push
idiv
decb
mov
sar
push
jnp
mov
jbe
cmp
jl
es
sbb
popa
sbb
ret
inc
sarb
fwait
jp
jg
das
loope
mov
mov
pushf
rcrb
mov
jb
sti
xchg
xor
mov
cmp
sub
or
imul
mov
inc
jmp
call
dec
mov
or
pusha
popf
mov
push
out
leave
push
scas
mov
sbb
rorl
arpl
aad
dec
mov
dec
jecxz
mov
pop
mov
repnz
js
jle
jp
outsb
mov
xchg
ret
xor
push
movl
pushf
movl
push
movb
lea
jmp
clc
sub
sbb
mov
mov
xchg
sub
push
sbb
and
pushf
inc
div
mov
dec
sub
stos
dec
mov
sub
inc
mov
cmp
enter
rcrb
jle
pop
fisubrs
jge
repz
pop
notb
xchg
icebp
dec
pop
out
xchg
mov
inc
xor
dec
div
pop
loope
add
cmc
or
idivl
mov
mov
fdivl
cmc
inc
inc
dec
pop
repz
xchg
xor
fisubs
or
push
into
jge
int3
sbb
shrl
popf
stos
pushf
mov
fcompl
js
fisubl
push
xor
jns
stos
ds
jmp
sub
movd
lahf
out
mov
aam
fidivs
mov
lods
mov
push
notl
mov
mov
sbb
cld
push
repz
inc
lods
mov
fdivl
outsl
testb
ret
push
mov
es
cmpsb
dec
insb
inc
mov
mov
xor
xchg
in
scas
xor
mov
mov
ret
addr16
sub
cs
sarb
addr16
movsl
xorb
rorl
mov
stos
xorl
jb
xor
lret
sbb
and
les
inc
cmpsb
imul
xor
pop
ss
jg
ss
dec
cmp
inc
push
je
popa
arpl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
arpl
outsl
jb
inc
imul
je
outsl
outsb
and
jno
jbe
popa
je
mov
cmpsl
mov
les
js
jns
xchg
mov
sbb
lea
mov
mov
push
ljmp
cli
push
and
shl
add
das
jno
inc
imul
sbbb
shlb
stos
repz
add
push
xor
cmp
out
inc
and
lret
repnz
les
sbb
mov
ljmp
push
mov
adc
mov
sbb
stos
add
add
popf
mov
adc
pop
jne
clc
pop
inc
test
bound
loope
push
jp
movsl
xchg
mov
daa
pop
negl
popf
notl
sub
fidivrl
jo
xchg
fidivl
adc
lods
faddl
mov
fprem
push
mov
in
or
lock
inc
out
int
int3
mov
adc
push
mov
dec
jmp
int
mov
mov
xor
pushf
bound
and
xchg
jns
pop
sbb
mov
aam
jmp
or
inc
pop
movsb
pop
test
popa
push
and
inc
lcall
movsb
jle
fsubl
jmp
cld
push
adc
adc
mov
stos
rol
cmpsl
int3
in
arpl
cmp
test
dec
test
dec
daa
dec
lds
sbb
sbb
inc
outsl
outsb
je
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
dec
popa
xchg
mov
inc
out
sub
fidivs
fisttps
scas
loop
out
andl
pop
xlat
mov
aam
xchg
cmp
jns
pop
pop
or
into
sbb
push
push
insl
ret
js
test
subb
jno
xor
lret
arpl
jg
hlt
je
out
or
mov
inc
mov
mov
inc
jnp
les
mov
and
sbb
pop
jo
aaa
sbb
add
or
stos
mov
push
das
sbb
or
sub
jmp
hlt
fdivs
pop
pop
push
or
and
push
add
fnsave
push
jecxz
and
pushf
aaa
aaa
dec
test
push
ret
jae
repnz
push
loope
sbb
mov
xchg
or
arpl
or
lret
stos
or
mov
xor
sub
fbstp
xchg
inc
imul
xorl
enter
adc
flds
or
add
pop
jo
mov
add
imul
sub
cmp
repnz
popa
cmp
push
dec
xchg
icebp
test
in
sub
xor
and
cs
ja
adcb
inc
ss
pop
dec
cmc
cmp
or
and
lea
sbb
add
sub
jo
js
std
adc
jbe
xlat
xor
je
push
jl
add
js
popa
insb
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
adc
pushf
mov
inc
call
jno
sub
mov
xor
gs
jno
mov
jl
or
xor
cmp
cmp
lcall
add
sbb
ret
and
mov
push
mov
stc
sbb
fisttpll
xchg
mov
imull
std
push
scas
mov
adc
pop
inc
mov
sbb
xchg
adc
loop
or
xor
push
mov
xor
imul
lock
xchg
shll
dec
out
notl
sbb
pop
push
inc
jno
shrb
ret
and
mov
lcall
outsl
mov
push
jae
adc
mov
fdivp
les
mov
inc
jmp
sbb
sbb
bound
mov
pop
mov
jecxz
pop
xchg
mov
bound
mov
movsb
punpcklwd
subl
cmp
filds
xchg
in
inc
cltd
je
int3
lcall
in
icebp
aas
mov
push
iret
ljmp
mov
and
and
xchg
jb
cmp
data16
arpl
mov
pop
jae
xchg
int3
repnz
sbb
int3
test
test
sbb
sbb
sbb
add
js
outsl
outsl
imul
imul
imul
and
jno
jbe
lea
jae
clc
test
call
pusha
lea
jbe
btc
jnp
call
lret
mov
inc
mov
xchg
jns
mov
xchg
scas
push
mov
loope
cmp
pushl
mov
jle
push
rcrl
pop
mov
js
call
sbb
inc
jae
add
mov
insl
ret
and
pop
xchg
push
insl
subb
out
push
inc
push
mov
in
stos
jmp
jb
shrb
mov
les
cmp
mov
inc
xor
out
movsl
in
lock
cmp
hlt
jnp
stc
leave
push
and
xchg
mov
sarb
pop
lcall
dec
sbb
icebp
xor
inc
push
mov
je
pop
into
mov
test
jge
cmpsl
int
xor
pusha
mov
mov
or
mov
jno
dec
icebp
dec
bound
sub
subb
aad
push
mov
inc
push
test
dec
sub
pop
dec
pop
mov
inc
std
pop
jp
cmc
xlat
pusha
insb
sub
push
mov
cld
push
aaa
jno
cli
leave
push
xchg
test
out
lea
sbb
rclb
pop
pop
loope
iret
dec
test
push
popf
jle
fisubl
lret
push
dec
sbb
xor
or
int3
cmpsb
scas
add
push
xor
mov
stc
dec
filds
imul
and
sbb
outsl
sar
mov
add
add
dec
bound
cmp
xchg
hlt
mov
inc
inc
push
lcall
add
insl
popa
imul
imul
insb
imul
and
jno
jbe
add
inc
dec
insl
push
insl
popa
imul
outsb
popa
insb
imul
and
jno
jbe
jmp
add
inc
inc
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jo
outsb
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
outsl
jb
arpl
inc
imul
imul
and
jno
jbe
movl
mov
push
lea
jmp
add
inc
push
jns
je
insl
inc
inc
inc
jns
inc
jb
popa
jns
insb
gs
jb
jno
jb
jo
jo
add
add
jo
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
call
mov
clc
scas
sbb
push
repz
push
js
mulb
xor
push
add
mov
xchg
cmp
add
test
pusha
in
pusha
dec
lahf
rcll
or
mov
insl
ret
sub
out
sbb
test
in
stos
lret
loope
sub
int
cmpsl
dec
dec
mov
out
jbe
pop
loopne
jl
cmp
mov
adc
sbb
pusha
int
add
sti
nop
mov
shrb
mov
adc
frstor
jmp
mov
push
adc
dec
cmp
mov
pop
mov
jne
inc
mov
add
sbb
subb
xor
jae
inc
cltd
jb
sub
int
iret
push
dec
cs
cmc
mov
repz
popa
sbb
ds
sbb
add
stos
mov
int
ret
adc
cmp
xchg
lods
shlb
iret
sub
in
lods
sbb
and
cmp
pop
neg
popf
movsb
pusha
mov
and
lods
adc
mov
pop
jge
test
push
sub
push
lahf
mov
pop
test
sbb
sub
cltd
xor
outsb
ds
mov
ss
mov
ljmp
mov
shrb
mov
adc
dec
jbe
jo
outsl
jb
jne
imul
insb
imul
and
jno
jbe
add
mov
xchg
dec
outsl
ret
and
out
pop
mov
fbld
xorb
mov
js
sbb
mov
mov
add
add
pop
outsb
ret
das
into
ljmpw
nop
push
pusha
shrd
outsl
leave
iret
mov
scas
xor
into
imul
and
cmp
repz
les
jg
adc
add
scas
sbb
push
mov
mov
mov
stc
xlat
aad
mov
jp
adc
jp
jae
insl
or
int3
cmpsb
or
mov
inc
mov
inc
mov
push
loop
das
les
jp
lret
mov
lret
xchg
push
scas
mov
sub
test
rcr
fwait
dec
sub
sbb
in
push
ret
mov
add
and
repnz
imul
inc
aas
popf
out
push
or
punpckhbw
cwtl
rclb
mov
and
and
div
adc
pusha
imul
cmp
push
jle
ss
filds
push
pop
mov
inc
xchg
push
lods
sub
xor
lds
aad
ficoml
jge
nop
test
adcb
push
out
and
imul
cmp
inc
aad
and
iretw
sbb
js
lahf
xchg
inc
subl
cmc
push
mov
push
call
adc
pushf
cmp
neg
and
mov
stc
pusha
stc
bt
cmpb
pusha
mov
pushf
lea
jmp
add
inc
inc
outsl
bound
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
jb
outsb
addr16
imul
imul
and
jno
jbe
xchg
setge
jo
jo
call
push
imul
push
lock
mov
stc
clc
adc
fdivrl
dec
adc
add
shr
sbb
and
push
fdivl
lods
adc
push
imul
js
fdivp
lods
movsl
or
addr16
loope
jmp
mov
pop
or
addr16
jmp
jp
out
mov
add
push
imul
pop
fdivp
lods
movsl
movsb
cmp
xchg
cmp
cmp
pop
ds
jae
cmp
shll
lea
jl
enter
fsubs
and
mov
enter
push
fwait
mov
dec
fimull
sahf
mov
jmp
aas
shl
or
push
ret
push
test
and
mov
mov
push
repz
sub
mov
mov
lods
sbb
in
in
and
sbb
mov
testb
imul
mov
movsl
pop
inc
fldl
lret
lods
or
mov
shll
cli
inc
xchg
mov
xor
add
push
inc
stos
xchg
aam
push
mov
dec
shll
mov
push
adc
mov
sub
mov
dec
xor
dec
imul
pop
lahf
or
testb
jge
or
lds
cmpsl
dec
lods
mov
or
test
xchg
stos
mov
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
push
gs
outsl
jne
fs
jno
jb
imul
and
jmp
inc
add
subb
pushf
lea
jne
push
inc
pusha
pusha
movb
inc
pushf
pushf
lea
jmp
add
inc
inc
insb
popa
jae
gs
push
push
je
gs
insl
inc
inc
gs
outsl
jae
je
outsl
outsb
and
jno
jbe
pusha
pushl
popl
pusha
push
pushl
ret
test
test
push
movb
lea
jne
pushf
pushf
mov
mov
pushf
mov
jmp
add
inc
inc
js
imul
je
outsl
insb
jae
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
js
outsl
outsb
je
outsl
insb
jae
imul
imul
and
jno
jbe
mov
setle
lea
push
movzwl
bswap
lea
bswap
pushf
mov
pusha
lea
call
pusha
call
sub
pusha
stos
sbb
sti
jp
cmp
adc
or
xchg
mov
or
sub
sub
lcall
adc
adc
rcrl
mov
ret
ret
sbb
loopne
sub
mov
popa
test
data16
cs
mov
js
outsb
rcrb
xchg
inc
les
sbb
dec
jp
mov
cli
pop
cmp
jge
int3
add
sbb
xor
adc
sub
outsb
and
fdivrp
sbb
mov
jecxz
xchg
push
ffree
iret
jno
dec
lahf
mov
stc
push
lea
mov
inc
lods
mov
inc
icebp
adc
fildl
mov
or
push
out
and
inc
jecxz
bound
addr16
xor
push
pop
clc
sbb
push
in
stos
insb
xchg
js
jl
adc
lock
outsb
sbb
sub
and
lods
inc
add
xchg
out
test
pop
xor
mov
shrl
inc
rorb
xor
mov
jecxz
mov
dec
jae
mov
push
call
out
aaa
in
xchg
test
push
pop
mov
repnz
inc
pop
or
inc
mov
nop
out
inc
out
inc
cmp
fidivl
push
mov
sub
repnz
dec
pop
dec
aad
sbb
rolb
and
jne
roll
insl
dec
inc
push
insb
mov
adc
das
lahf
push
cli
push
jle
fnsave
clc
sbb
imul
mov
ret
add
xchg
mov
push
or
xchg
xor
cmp
pop
out
xlat
xor
sbb
scas
gs
xchg
dec
inc
les
ret
adc
sbb
mov
jge
jne
mov
lods
dec
push
jp
and
sbb
loop
sub
inc
mov
int
jge
stos
lret
or
jae
jo
mov
paddsb
in
fldcw
xorb
pushf
mov
ljmp
cmpsb
xlat
leave
lahf
add
adc
test
adc
in
lcall
jns
sub
jecxz
stos
mov
int
data16
imul
cld
into
cmpsb
sbb
mov
mov
out
or
inc
cmpl
sar
hlt
data16
mov
mov
outsl
inc
and
cld
push
mov
cli
push
inc
stos
cmpsl
push
aas
mov
xchg
mov
rol
hlt
shlb
add
mov
lret
lret
mov
mov
push
mov
dec
mov
fdivs
jo
cmpsb
int
xor
call
sub
gs
cli
pop
mov
jl
stc
mov
aas
sbb
je
mov
xchg
jae
imul
outsb
nop
cmp
add
inc
dec
insl
push
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
es
cmpsb
sbb
xor
repz
mov
aad
imulb
push
jne
add
adc
je
xor
sbb
cwtl
jnp
clc
rolb
inc
wbinvd
sarl
jmp
ret
cmp
jbe
jne
shlb
daa
dec
cmp
inc
push
mov
insb
jl
push
push
mov
push
or
sub
xorl
leave
pop
jbe
xor
add
jp
cld
pushf
mov
inc
jecxz
ja
xlat
jnp
push
in
xchg
mov
push
sbb
push
mov
lahf
mov
jb
sti
mov
pop
cmp
test
subl
pop
in
xchg
mov
push
decl
mov
and
cmp
mov
test
aaa
mov
pop
icebp
fsubrs
add
insl
xor
pop
bound
aas
repnz
mov
sbb
xchg
xor
cmp
cwtl
fnstcw
subl
xchg
mov
enter
or
xchg
dec
sub
push
mov
test
popf
mov
mov
in
xor
inc
and
sahf
pop
dec
push
mov
iret
daa
iret
mov
push
arpl
xchg
jle
pop
std
push
out
fists
popf
fidivrs
mov
loop
pop
adc
push
cld
pop
mov
cltd
mov
xlat
stc
rcrb
lcall
insl
js
movsl
leave
jle
add
js
and
xor
popa
inc
push
dec
je
insl
dec
imul
push
je
jbe
test
xor
and
mov
rol
cmc
add
jmp
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
popa
outsb
je
push
gs
jno
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
jb
aaa
dec
gs
popa
addr16
push
dec
gs
popa
add
test
mov
sbb
ret
imul
xlat
add
xlat
fs
pop
or
gs
push
mov
adc
and
rcll
imul
mov
test
dec
xchg
push
hlt
adc
lods
movsl
int3
jne
or
xor
popa
subl
ds
les
popf
inc
shrl
pop
movsb
sbb
addr16
mov
in
dec
and
pop
xor
dec
and
mov
jae
into
mov
pop
mov
and
add
shr
repnz
leave
cmpb
out
data16
aad
pop
pusha
stos
or
enter
push
mov
mov
xlat
add
add
loope
mov
fs
ss
push
and
in
mov
das
add
push
mov
ljmp
cltd
jno
jg
lcall
pushf
ja
inc
add
mov
pop
inc
pop
out
aam
outsl
mov
pop
xchg
movsl
imul
fwait
xor
mov
shll
fwait
pushf
sahf
cmp
insb
and
movsl
dec
frstor
pop
cld
aaa
push
xor
fwait
jo
scas
inc
popa
lcall
or
pop
jae
dec
out
pop
cmpsb
lret
jl
repnz
mov
in
in
aad
lock
cmp
mov
xchg
insl
or
mov
inc
imul
xor
pop
push
lods
js
imul
jb
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
push
popa
addr16
outsl
jne
je
js
jno
jb
imul
insb
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
jb
popa
insl
jae
imul
imul
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
push
push
je
inc
jb
insl
dec
push
je
and
jno
jb
aaa
push
jns
je
insl
inc
push
imul
addr16
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
std
incl
add
js
insb
jae
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
stc
add
mov
bt
mov
call
add
inc
dec
insl
push
outsb
arpl
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
jne
jb
inc
inc
push
dec
insl
popa
addr16
jno
jo
ss
insb
popa
jae
gs
push
push
je
imul
xor
popa
inc
push
dec
gs
popa
insb
jne
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
je
outsl
jns
jo
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
ss
jb
jo
imul
outsb
jbe
jae
js
xor
gs
push
push
arpl
xor
insb
inc
push
fs
jb
gs
imul
jo
xor
insb
inc
push
fs
jb
gs
imul
insl
outsb
outsl
outsl
outsl
jb
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jb
jo
imul
insb
outsl
jb
xor
jb
jo
imul
outsb
je
inc
push
dec
insl
push
popa
jo
jae
fs
inc
imul
je
outsl
outsb
and
jno
jbe
and
mov
pushl
call
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
gs
fs
je
je
and
jno
jo
xor
jae
jae
push
push
gs
fs
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
popa
jb
outsl
fs
jno
jb
add
add
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
outsb
fs
jb
arpl
jno
jb
aaa
dec
gs
popa
addr16
push
dec
gs
popa
add
add
jbe
outsl
outsl
insb
gs
popa
insb
imul
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
push
push
outsb
je
outsl
insb
and
jno
jo
aaa
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
add
add
jp
imul
insb
imul
and
jno
jbe
je
aad
sbb
xlat
shll
lcall
addr16
ficomps
pop
mov
push
fisubl
leave
out
daa
int3
andb
mov
test
leave
in
or
rcrb
int3
shr
insl
push
inc
jl
mov
pop
pushf
out
pop
in
jle
xor
sub
or
push
lock
rcrl
sarl
pop
sub
shl
sahf
sbb
cmp
adc
add
ret
enter
adc
cmc
cmp
xor
sub
xlat
aas
pop
je
xor
lods
and
cmp
or
fidivl
push
popf
test
mov
int3
and
cltd
inc
shll
sbb
dec
jecxz
or
adc
in
insb
insb
push
fdivs
push
out
test
dec
cmpsl
ret
cmp
mov
xchg
mov
lahf
sbb
lods
add
pop
movsb
into
mov
add
into
je
ds
out
mov
jmp
fisubrs
push
pop
imul
mov
fisubrl
mov
imul
ds
xchg
shrb
jns
adc
bound
mov
cmp
pop
mov
mov
push
aad
xchg
icebp
push
and
out
es
jecxz
nop
imul
fldcw
leave
shlb
iret
and
out
pcmpgtw
int
icebp
jmp
sbb
cmp
add
fs
je
inc
push
dec
je
insl
inc
push
gs
je
insl
dec
popa
insl
gs
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
jp
outsl
insl
insl
outsl
outsb
inc
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
jae
imul
jo
xor
popa
je
inc
push
dec
je
insl
add
test
lahf
call
cmpsb
inc
ss
cmp
mov
mov
push
das
in
loop
movsl
psrad
loop
daa
leave
jb
ss
or
mov
aaa
sub
push
ret
add
pushf
mov
in
pop
push
ret
test
movsl
inc
sub
insb
in
int
xor
or
lods
xor
or
icebp
in
cmp
pop
test
aad
pushf
sbb
xor
jbe
mov
push
insb
dec
roll
mov
cli
lods
xor
or
inc
imul
aaa
xor
sub
xchg
push
push
jnp
cmp
ror
mov
lret
repnz
cmc
imul
je
xchg
and
mov
sub
inc
js
pusha
int3
loop
out
add
shlb
aaa
push
iret
jecxz
popf
sbb
popa
mov
mov
pushf
leave
or
xor
xor
and
test
ret
insl
dec
xor
push
mov
std
cli
and
enter
pushf
pop
mov
xor
jge
sbb
mov
ss
popa
cmp
inc
sbb
sbb
cmp
gs
js
or
out
xor
mov
add
and
xchg
imul
xor
fdecstp
pop
mov
rcll
loopne
cmp
negl
add
inc
dec
insl
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
gs
jne
je
popa
outsb
fs
gs
jno
jb
jbe
mov
pushf
pop
pop
pusha
pushl
ret
add
inc
dec
insl
push
gs
imul
insb
imul
and
jno
jbe
mov
stos
pushf
sbb
cli
shlb
jl
pop
xchg
lods
cli
addr16
lods
xchg
jo
dec
jnp
mov
push
test
lods
stc
fcmovbe
out
xor
sub
andl
mov
push
or
stc
lcall
daa
test
out
pop
sbb
ds
push
sbb
mov
ljmp
js
jns
cmc
dec
and
push
cmp
jno
mov
cmpsb
aaa
les
hlt
sub
fwait
sbb
in
pop
pusha
ret
in
sub
sub
jno
pop
add
inc
sti
xchg
enter
ja
inc
cmc
dec
xor
into
daa
xchg
leave
sbb
cmpsl
notb
data16
and
das
es
cld
xchg
aad
fsubs
lods
cmc
sbb
test
aaa
and
dec
neg
and
mov
test
lods
shlb
je
mov
je
scas
rolb
adc
push
je
sbb
sub
addr16
sub
and
out
push
mov
xchg
enter
add
inc
cmc
dec
push
subb
sub
cmpxchg
std
lea
mov
or
mov
ret
pop
fs
cld
in
push
aas
jmp
out
test
mov
or
jge
imul
mov
jmp
mov
in
or
aam
mov
pop
mov
movl
lock
inc
jmp
ret
stos
rolb
cs
add
insl
push
arpl
je
inc
imul
je
outsl
outsb
and
jno
jbe
pop
xchg
push
sub
data16
mov
insl
clc
dec
jno
pop
jb
pop
pop
arpl
push
jle
sub
stc
bound
mov
test
add
shrl
pop
ret
inc
stos
or
inc
loopne
push
xor
mov
inc
inc
mov
lods
adc
add
ja
push
mov
in
iret
test
pop
nop
ret
sub
xchg
lcall
aaa
pop
stc
cmc
adc
or
aaa
mov
mov
cmpsb
lahf
dec
cmc
cltd
cld
xchg
sti
pop
jg
loope
xor
sar
movsl
mov
std
sbb
fcompl
add
test
in
cltd
push
insb
lret
cmp
dec
negl
sarl
mov
cmpb
pop
not
mov
ds
lock
and
cmp
sub
mov
cltd
sbb
xor
jg
cmp
scas
stc
dec
jge
test
mov
js
mov
adc
fcomip
fidivrl
hlt
jne
or
jno
pop
mov
mov
sub
pushf
mov
mov
xchg
inc
jne
and
sbb
test
fsubrl
arpl
shl
aad
lret
and
and
cmp
or
sti
insb
pop
push
scas
pop
xor
jg
sbb
out
sub
mov
mov
loop
xor
fs
je
inc
push
dec
je
insl
dec
imul
outsb
arpl
gs
popa
insb
jne
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
fs
je
inc
push
inc
imul
in
xchg
sbb
cmp
mov
mov
fcmovne
lds
sbb
je
out
popa
out
xchg
jo
aaa
sbb
mov
or
shlb
ret
fnsave
clc
jp
push
mov
mov
cmc
pop
bound
out
outsb
in
xchg
cmp
outsb
inc
insl
sub
les
mov
popa
sbb
aaa
cwtl
sbb
inc
les
test
pop
dec
xor
cli
and
mov
xor
mov
call
jle
xor
add
loope
enter
sbb
push
ret
cli
add
push
adc
mov
cmp
ljmp
mov
mov
dec
inc
push
aam
inc
insb
shll
popa
dec
outsl
dec
insb
ret
sub
sbb
fnstsw
shlb
arpl
mov
lea
cs
jle
or
push
std
addr16
mov
push
mov
push
xor
xor
or
mov
adc
and
sub
fwait
pop
mov
add
loope
push
dec
push
dec
out
lock
icebp
mov
out
jmp
mov
sbb
out
adc
push
jbe
mov
aam
out
and
mov
lret
in
lods
add
mov
mov
jae
push
push
scas
sbb
ja
pusha
stc
bt
pusha
imul
mov
cmp
pushf
bt
add
mov
lea
jmp
mul
rcll
sub
ja
leave
mov
and
inc
cmp
xchg
fdivrp
xchg
jns
mov
iret
mov
cwtl
cmp
ret
mov
jne
rolb
sub
and
xor
xor
inc
roll
inc
in
ljmp
cmp
xor
pop
jnp
pusha
lcall
pusha
inc
imul
xchg
js
dec
mov
fs
lods
hlt
pusha
add
test
adc
xchg
mov
jno
rclb
xchg
pop
cs
stos
jge
mov
lods
imul
sub
jg
je
arpl
mov
mov
pushf
loopne
xchg
jo
mov
pop
pop
lret
pusha
gs
loopne
mov
mov
push
jle
mov
sbb
pop
inc
adc
xchg
sbb
insl
add
jmp
imull
cli
cmpl
add
scas
lea
in
movsl
in
popa
out
pop
repz
mov
mov
adc
ljmp
fnsave
popa
arpl
jg
ret
xchg
xchg
dec
mov
add
dec
stos
dec
cli
dec
cmp
jbe
push
sbb
dec
pop
pop
stc
sub
pop
cli
xorl
mov
mov
cltd
fcoms
mov
lret
out
jp
jge
std
pop
jbe
mov
push
pop
cmp
sbb
dec
std
fs
xchg
sbb
push
std
push
mov
mov
adc
add
or
adc
in
repz
dec
sbb
ja
ss
lock
mov
jp
push
clc
sti
or
cmp
xorl
dec
push
ret
or
lods
jp
sub
js
and
stc
repnz
xor
repnz
sbbb
popf
lock
std
test
jecxz
inc
mov
call
and
jnp
les
out
jns
adc
mov
dec
in
push
xor
and
xchg
jecxz
dec
mov
mov
and
sub
sub
mov
sbb
aam
adc
pop
mov
jae
pop
testb
nop
in
frstor
cwtl
jbe
cmp
cli
mov
jbe
cmp
add
daa
push
mov
lret
daa
aam
dec
dec
nop
xor
movsl
out
dec
insl
mov
adc
popf
push
lods
xchg
nop
enter
add
push
jne
rcl
xchg
inc
mov
test
aad
sub
mov
call
inc
sub
mov
lds
sub
movsb
adc
dec
adc
insb
imul
pop
dec
stc
sub
mov
pop
loope
divb
imul
dec
bound
and
daa
int
ss
imul
add
jg
xchg
sbb
jnp
jnp
mov
icebp
fprem
pop
xor
jno
lret
fisttpl
add
add
jl
sub
mov
aas
mov
sbb
inc
lfs
cmp
call
mov
sub
in
mov
in
shll
inc
inc
js
jb
jo
outsl
ja
gs
imul
and
jno
jbe
add
inc
dec
jbe
outsl
insl
jo
outsb
outsb
je
popa
jae
inc
imul
imul
and
jno
jbe
bt
push
clc
add
cmc
cmp
pusha
clc
cmp
pusha
jmp
add
inc
push
jne
imul
arpl
jae
inc
js
inc
insb
gs
jb
je
insl
jae
jno
jb
add
adc
fwait
cmp
mov
mov
cmp
cli
inc
addl
dec
clc
inc
xchg
repnz
sub
inc
aad
push
jnp
pop
jo
lods
push
lahf
sti
or
push
in
addr16
ret
mov
mov
ja
mov
fwait
cmp
clc
add
out
xchg
xchg
inc
xchg
cmc
jae
les
daa
jg
outsl
push
cmp
xchg
sbb
mov
push
aas
sbb
fiaddl
push
sub
mov
xor
ja
call
xor
jne
sbb
shrl
jle
add
pusha
jg
in
sbb
push
dec
pusha
outsb
jnp
fsubs
test
dec
test
mov
cmpl
int3
sbb
lret
enter
clc
inc
sbb
jno
aas
pop
js
jns
mov
mov
fucomi
sub
mov
jb
jp
add
xchg
clc
cmp
aaa
pop
aaa
sbb
or
add
xchg
dec
fs
call
decl
scas
ljmp
push
arpl
hlt
fidivrs
adc
push
lods
cmp
mov
cmp
dec
lds
dec
mov
arpl
inc
sarb
push
mov
pop
xchg
cld
xor
cmp
inc
push
les
int3
jl
mov
mov
cs
lods
push
push
movb
xor
adcl
iret
aaa
adc
aam
mov
mov
ret
mov
cmpsb
push
arpl
jo
xor
bound
add
or
incl
add
bound
outsb
jae
jae
imul
imul
and
jno
jbe
clc
xor
stc
test
clc
neg
call
add
inc
dec
jae
insl
insb
outsl
insl
inc
imul
imul
and
jno
jbe
call
adc
movsb
xchg
sbb
cmpsl
inc
sub
mull
jno
call
mov
mov
dec
mov
les
mov
ja
or
jmp
jmp
ret
xchg
sub
dec
push
jno
pusha
inc
lods
dec
and
pusha
sbb
and
jmp
fdivl
push
clc
push
mov
les
push
mov
cli
cmpsl
add
stc
adc
fistpll
imul
int3
xlat
cs
and
into
faddl
jg
adc
push
jo
cmp
daa
cmp
lock
cmp
mov
inc
and
mov
xor
clc
ss
arpl
and
stc
cmpb
cmp
push
xor
cmp
std
xchg
pop
mov
ljmp
subb
out
or
pushfw
std
enter
nop
sbb
mov
pop
cld
shrl
add
scas
iret
int3
push
cmp
inc
xchg
mov
pop
jmp
lea
sti
dec
cwtl
xchg
movl
jle
push
cmp
cmp
repz
dec
sub
imul
out
gs
stc
ret
fdivl
ret
sarl
dec
aas
add
sub
dec
lret
xor
push
adc
lret
jl
out
enter
lret
daa
test
iret
in
push
stos
add
add
fwait
add
inc
inc
js
insb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jae
insl
insb
outsl
insl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
sub
in
andb
out
imul
mov
cmp
repnz
sub
xchg
cvtps2pi
mov
xchg
in
adc
loope
pop
adc
cli
shr
adc
push
cmp
ret
jns
jmp
cmpsb
aad
sbb
add
push
outsb
lcall
inc
fdivs
rorb
sbb
mov
iret
cmp
mov
jg
sbb
xor
inc
outsl
dec
pusha
int
movsb
shll
xlat
ret
mov
lea
cmp
xor
adc
xor
pop
xchg
in
loopne
cs
adc
lock
xor
xchg
mov
pop
mov
push
jle
xor
lods
lods
push
jae
sar
or
push
pop
clc
sub
cs
inc
pop
xorb
stos
xor
stos
dec
and
push
sub
or
sbb
fadds
inc
notl
rclb
push
movsl
hlt
cwtl
sbb
into
add
leave
mov
push
mov
push
sbb
mov
cmpsl
lret
repz
js
imul
xor
clc
push
arpl
mov
pop
js
mov
push
push
and
in
repz
jne
xchg
outsb
fwait
std
clc
add
popa
inc
sub
cmp
inc
dec
test
fsubrl
stc
adc
repz
mov
push
jge
fmull
movsb
out
jno
int
mov
hlt
popf
push
cmp
sub
les
ret
pop
mov
icebp
aad
lea
pop
mov
jns
cmp
mov
lods
out
jno
add
loopne
mov
js
ds
fimuls
fs
jns
cwtl
stos
xchg
add
pop
std
cmpl
enter
loopne
jae
push
and
pop
mov
mov
xchg
rcrb
xchg
sub
push
std
xchg
cld
fstpt
fiaddl
jecxz
push
push
cmp
orl
push
cmp
cmp
mov
xchg
in
lcall
mov
push
lock
mov
mov
jno
mov
arpl
pusha
rorb
notb
push
scas
sti
out
xchg
je
daa
or
movsb
mov
adc
jno
enter
arpl
stos
inc
movsl
pop
shrb
inc
mov
fs
repnz
adc
sbb
cmpsb
out
icebp
pop
mov
movsl
andl
sub
push
in
add
push
mov
test
mov
add
jo
arpl
popa
jb
insl
inc
imul
imul
and
jno
jbe
ja
imul
cmp
push
dec
mov
mov
in
loopne
je
fucomi
mov
pop
lcall
or
or
out
jp
xchg
shl
push
hlt
arpl
jl
mov
lahf
fisubl
and
push
mov
js
call
push
mov
add
addr16
jp
test
rorl
push
aaa
sbb
jbe
dec
dec
xchg
ss
push
js
push
sub
pop
sbb
arpl
mov
les
in
shll
adc
inc
and
add
popa
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
call
pop
pushf
pusha
jmp
jl
dec
mov
or
jmp
inc
push
lods
hlt
les
push
adc
mov
leave
mov
lds
fwait
adc
repz
clc
shlb
imul
fwait
add
push
jl
mov
xchg
mov
icebp
int3
jne
es
daa
or
xchg
mov
mov
arpl
les
aaa
pushf
enter
inc
mov
push
cmp
cmp
dec
add
outsl
jp
jp
icebp
out
adc
sahf
daa
or
out
mov
cmpsl
lds
jns
jo
xor
cmp
xor
lds
mov
and
loopne
fbstp
outsb
xchg
cmp
movsl
in
mov
pop
pop
roll
outsb
test
and
xchg
cld
jno
mov
push
ret
sarl
imul
cmpsb
add
in
mov
lock
int3
fsubrp
mov
outsl
lret
movsb
add
pop
mov
icebp
arpl
cmp
pop
sahf
daa
or
mov
sub
out
lods
xchg
xchg
jno
cmp
lds
aad
insl
add
jmp
lea
mov
sub
shr
mov
insl
push
insb
sbb
pop
xchg
mov
mov
inc
jecxz,pt
cmpsl
pop
int
addl
sub
inc
mov
nop
stos
and
movsb
lcall
jp
xor
adc
xchg
mov
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
outsb
jae
jb
and
jno
jbe
stc
cmc
or
push
jmp
cmp
mov
call
jns
mov
mov
shl
push
jnp
mov
fmulp
push
mov
mov
fdivl
adc
add
shl
or
mov
ds
jge
nop
mov
push
loop
test
and
cld
stos
leave
icebp
and
cltd
add
pop
dec
es
and
pslld
sub
repnz
cmp
add
or
or
fsubrs
mov
xor
cmc
shlb
adc
adc
aaa
cltd
lret
andb
insl
imul
lods
xor
push
jmp
jmp
je
dec
or
arpl
jnp
sbb
push
aas
aam
jmp
mov
pop
outsb
inc
das
push
inc
inc
test
pop
xor
pusha
or
inc
popa
mov
test
cs
push
add
or
xlat
shlb
mov
rolb
xor
lret
icebp
cmpsb
mov
scas
dec
scas
lahf
fucomi
sub
cs
xchg
jnp
push
fsubrs
stos
inc
bound
mov
or
and
cwtl
imul
lahf
jg
mov
stos
dec
xor
popa
sbb
in
imul
imul
dec
push
test
inc
fisubl
shll
xorb
jmp
mov
jp
lock
xor
hlt
lcall
sbb
add
adc
add
inc
gs
popa
insb
jne
add
add
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
popa
outsb
inc
jne
outsl
push
imul
jb
je
add
jmp
add
inc
inc
js
jne
je
outsb
gs
popa
insb
imul
and
jno
jbe
iret
adc
gs
and
rcrb
fdiv
mov
test
pop
cmpsb
mov
sub
pop
test
dec
cmp
push
xor
ds
das
add
loopne
and
ja
pop
inc
jb
addb
and
out
insl
sbb
mov
sub
push
mov
mov
inc
push
scas
mov
xchg
sbb
jle
stc
fdiv
inc
xchg
ret
mov
and
push
jns
lock
mov
sub
stos
shrl
call
or
lds
aas
in
mov
add
rclb
inc
movsl
jge
jbe
popa
inc
jmp
and
stos
add
inc
push
cmc
xadd
xchg
xadd
sub
bswap
pop
not
pop
not
jmp
add
inc
inc
js
popa
je
arpl
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jne
insb
imul
inc
imul
je
outsl
outsb
and
jno
jbe
clc
jmp
and
xchg
test
inc
insl
enter
lret
jae
dec
and
lds
lahf
in
push
jle
adc
jmp
adc
and
sarb
sbb
bound
test
and
dec
loope
sub
jle
dec
call
or
out
push
fildll
xor
decl
mov
aas
xchg
mov
lret
jmp
or
push
insb
fidivrs
scas
add
lods
dec
and
xchg
jbe
movsl
incb
cmp
or
movsb
cmp
subb
xlat
cmp
test
cwtl
or
sub
fs
ja
adc
inc
mov
maxps
fdivrp
and
insb
inc
and
in
test
pop
jle
xor
cmp
cld
pushf
xor
pop
fisttpll
clc
fndisi(8087
aaa
fwait
xchg
test
adc
mov
xor
popa
dec
rcr
add
and
scas
lds
or
ss
popa
scas
jo
hlt
sub
mov
mov
push
xor
dec
in
push
je
loopne
mov
or
cmp
sbb
sbb
dec
sbb
ret
cmp
adc
int
movntq
and
xlat
or
enter
lds
ret
jl
cmp
mov
xor
imul
out
pop
stos
mov
add
fs
je
inc
push
dec
je
insl
dec
imul
insl
dec
popa
insl
gs
jne
jb
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
fs
je
inc
push
inc
imul
xor
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
inc
js
gs
gs
popa
insb
imul
and
jno
jbe
add
inc
dec
arpl
gs
insb
inc
imul
imul
and
jno
jbe
add
inc
push
jp
jb
gs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
in
mov
test
bound
xlat
add
fsubr
bound
jecxz
out
pop
xor
sbb
hlt
pop
std
push
daa
movsl
pusha
ljmp
lock
ret
aam
cmp
shl
jb
rorb
imul
test
fmull
push
out
scas
in
push
cmc
aam
jb
sub
pop
and
pop
shl
mov
inc
stc
xchg
jae
mov
ja
arpl
xchg
mov
insl
xchg
push
std
out
push
cmc
pinsrw
jecxz
and
cmc
shll
js
mov
into
dec
lea
inc
mov
out
sti
adc
clc
nop
and
loopne
and
mov
pop
aas
xchg
outsb
repnz
lcall
imul
sarb
lahf
push
lea
xor
sbbl
mov
push
cmp
adc
adc
ja
in
push
cmc
cmp
mov
insb
lret
mov
jne
xchg
ret
xchg
jg
mov
adc
les
jl
cmp
aaa
cmp
das
mov
fnsave
gs
cmp
mov
iret
insl
adc
xor
movsb
out
daa
cmp
addr16
jno
subl
dec
adc
rcrb
mov
cli
and
scas
add
sub
mov
aas
sub
fs
jne
lahf
mov
movb
push
pusha
pushl
lahf
mov
pushf
movsbw
sets
lea
pushf
call
outsb
jb
sbbl
jbe
jbe
sub
add
fwait
sbb
loop
enter
sti
sub
cmp
cmp
js
call
push
or
mov
xlat
fmuls
dec
push
push
cmp
fidivs
sti
dec
ret
and
add
repnz
xor
leave
loop
mov
jno
xchg
dec
push
les
into
scas
mov
sbbb
xchg
cmp
jns
mov
repz
adc
out
aas
dec
pushl
loope
pop
hlt
scas
adc
cmp
xor
mov
repz
xchg
aas
lods
aam
lds
pop
xor
loopne
mov
and
push
mov
mov
xor
andb
add
sub
fwait
pusha
sub
pop
test
jne
adc
mov
sbb
cmp
cmp
std
fisubl
cwtl
xchg
sbbl
loope
loope
popa
jp
adc
in
sbb
push
adc
push
xor
xor
lahf
pop
out
std
add
dec
das
or
and
push
mov
sub
and
fwait
mov
xchg
pop
push
lcall
adc
lea
cmc
aad
push
mov
lock
in
pshufw
dec
or
pop
shrb
imul
stc
sbb
inc
ja
daa
js
test
sub
cmpsb
dec
jg
test
lret
ss
std
iret
insb
shr
and
dec
in
imul
hlt
fsub
xorl
insl
push
push
imul
imul
and
jno
jbe
ja
out
sbb
lds
popf
xchg
lods
cmp
sub
pop
loop
push
cwtl
ja
cmp
jbe
jp
icebp
push
jg
hlt
xlat
outsb
call
dec
sub
ret
cmp
pop
push
push
jno
and
pop
or
or
lock
mov
and
xor
mov
imul
sbb
pop
out
enter
push
mov
std
push
xor
cmc
dec
movsl
mov
fdiv
test
sub
imul
cmp
je
mov
lea
enter
mov
inc
fs
clc
dec
add
cltd
popa
inc
outsl
pop
mov
nop
or
mov
xor
inc
mov
int3
out
test
repnz
pop
adc
loopne
dec
and
mov
jl
jg
mov
lret
add
mov
sbbb
jle
mov
mov
cmp
xchg
cmc
mov
sahf
inc
and
fdiv
sub
push
imul
mov
or
push
leave
clc
push
in
iret
jne
inc
adc
xor
adc
data16
hlt
push
cmp
fisubs
push
mov
dec
in
hlt
lret
rol
imul
scas
xchg
fnstcw
inc
imul
cmp
loop
pop
sbb
dec
push
lret
fcmovne
out
fwait
mov
add
lock
adc
xchg
xchg
mov
inc
push
stos
loop
movsl
scas
leave
in
mov
inc
insl
adc
mov
mov
movb
call
xchg
sbb
subb
mov
test
push
pop
jecxz
fwait
jnp
imul
mov
outsl
push
movsl
inc
pusha
movntq
out
fcompl
cmp
lret
pop
je
int3
sarb
test
add
popa
or
movb
insl
mov
lea
push
and
jbe
enter
sbb
les
fnsave
stc
sub
sbb
mov
andb
and
adc
lea
xchg
xchg
inc
fs
push
imul
or
and
les
out
gs
cs
mov
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
insb
imul
jb
insb
jae
jno
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
jb
xor
gs
push
push
arpl
add
insl
push
imul
outsb
popa
insb
imul
and
jno
jbe
inc
push
stc
jge
inc
add
jns
gs
jge
incb
cmpsl
lea
out
fs
scas
add
in
xchg
cmp
shll
pop
xchg
cmp
mov
pop
sbb
pusha
push
nop
not
sub
ret
push
int3
jg
xor
flds
iret
fnsave
xchg
in
jbe
sbb
pop
jns
shlb
sbb
add
leave
sub
mov
lret
jg
sbb
xlat
push
shrb
lret
jmp
test
xchg
and
push
popf
inc
scas
push
mov
subl
fistps
xor
test
jmp
mov
stc
adc
mov
rorl
add
ret
inc
imull
insb
push
jl
jo
js
jae
jl
mov
test
cmp
sarl
test
jge
inc
addl
sbb
cmp
sahf
out
pop
inc
adc
push
cmp
push
hlt
xchg
mov
adc
add
rcrl
push
pop
push
jnp
add
jo
int
dec
int
mov
arpl
and
jge
std
mov
dec
push
sub
hlt
call
push
dec
adc
test
dec
mov
repz
cmpsl
cld
cmp
scas
mov
lahf
push
inc
es
pusha
or
cmp
mov
in
mov
decl
hlt
push
pushl
push
pusha
lea
jmp
clc
mov
cmp
push
lea
jmp
add
inc
inc
js
jb
ja
gs
jne
imul
insb
imul
and
jno
jbe
mov
inc
ja
jb
cld
xchg
mov
int
mov
outsb
mov
aad
push
in
push
push
cmp
mov
xor
andb
icebp
add
inc
xchg
xchg
xor
outsb
dec
push
call
lea
and
or
pop
push
sub
mov
dec
cmpsb
mov
cmp
ficomps
les
aaa
int3
mov
stos
jl
inc
cli
push
cmp
repnz
mov
or
add
in
xor
mov
hlt
lahf
cld
push
jnp
jg
cmp
into
sub
jecxz
ljmp
jmp
loop
inc
fnsave
lea
ds
mov
lock
movsl
clc
push
inc
xor
lret
arpl
jg
mov
shrb
add
fwait
cmp
xor
xchg
mov
dec
sbb
lea
mov
jnp
inc
jp
xor
add
push
subb
add
add
xor
adc
stos
subl
jmp
insb
pop
pushl
inc
sarl
aam
xor
pop
dec
test
push
push
insb
imul
mov
dec
outsb
rcll
sub
add
pop
jnp
leave
imul
cs
enter
mov
mov
inc
cmp
sti
icebp
cmp
call
sbb
push
mov
ret
imul
lods
inc
loope
mov
dec
sbb
cmp
arpl
jb
add
outsb
insl
jo
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
popa
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
scas
dec
scas
jp
inc
test
shrl
xchg
or
add
inc
aaa
mov
inc
sbbb
movsl
das
fwait
int3
cmc
ror
sahf
cltd
lods
clc
fbld
cltd
push
xor
cmp
in
and
out
or
call
pop
in
rcll
inc
dec
outsb
jne
inc
imul
imul
and
jno
jbe
cmp
or
xor
cmp
mov
icebp
test
cs
in
mov
mov
push
lods
insb
and
and
gs
loope
shll
arpl
int
add
pop
xchg
pop
push
mov
jno
ds
in
cmp
pusha
jl
add
sbbl
jecxz
jmp
push
les
mov
xchg
js
sbb
ja
inc
in
daa
notb
mov
in
push
adc
icebp
push
repz
add
add
out
inc
sub
fs
into
lods
ja
mov
addl
add
stos
and
add
fdecstp
jecxz
outsl
nop
cmp
mov
sahf
inc
scas
push
dec
into
cli
test
aam
and
int3
xlat
sbb
scas
mov
pop
dec
sarl
test
cs
push
cmovge
mov
cmp
sbb
jns
js
icebp
pop
mov
push
shlb
sahf
out
push
rep
add
cld
mov
test
movntps
outsl
in
aas
lods
sbb
divl
in
push
pop
rcrb
fldcw
pop
test
outsb
adc
jge
jbe
push
scas
cmp
test
xchg
jp
add
push
inc
push
cld
ret
inc
insl
or
rcrl
jo
int
cs
xchg
sbb
aad
xchg
add
test
cmpsl
push
testl
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
jb
popa
je
push
popa
jb
insl
jae
jno
jb
xor
inc
outsl
outsb
je
outsl
insb
jae
push
inc
jb
popa
je
push
popa
jb
insl
jae
fs
js
inc
arpl
arpl
gs
and
sbb
loop
out
xor
jl
mov
into
fmull
shll
xchg
xor
hlt
dec
cmp
inc
mov
repz
xchg
sub
pusha
sbb
jle
mov
and
lahf
bound
jbe
xor
lret
push
rcll
pop
sbb
or
sub
sbb
mov
out
jnp
xchg
push
dec
loopne,pn
sbb
jmp
jge
jbe
cli
adc
pop
stc
pushf
xor
nop
pop
mov
negb
xchg
lcall
inc
inc
subb
aad
negl
cmp
mov
subl
add
xchg
call
mov
jne
stos
add
inc
movsl
add
and
test
xchg
inc
fdiv
sbb
add
mov
sub
inc
jp
jae
xor
ret
dec
cs
inc
repz
mov
sub
ja
stc
xchg
mov
fwait
out
xchg
rcll
xlat
pop
imul
fwait
push
iret
and
xor
test
mov
idiv
pop
test
out
pop
jbe
repz
lds
mov
out
into
and
mov
aas
movsb
jle
mov
add
lea
daa
iret
mov
xchg
lock
sbb
lods
xchg
out
int
cmc
cmp
pusha
mov
pushl
ret
sbb
fwait
ja
inc
mov
aam
push
jns
ja
jae
popa
jmp
sub
or
jo
paddsw
cmpsb
xchg
cmp
imul
movsb
cmpsb
rol
xchg
jge
test
xor
jne
addr16
xchg
pop
sub
adc
rorb
cmpsl
cmc
fdivr
ja
push
jns
push
adc
stc
mov
dec
add
pop
xor
fildll
add
sbb
lods
and
and
pop
leave
cmp
sbb
es
mov
mov
daa
sub
cmp
sub
clc
and
aam
shl
xchg
arpl
adc
das
je
push
pop
sti
imulb
lcall
mov
call
mov
mov
and
sub
jne
clc
mov
jnp
out
push
xorb
bound
mov
or
lcall
movsb
fnstcw
jbe
std
cmp
mov
adcb
clc
jg
push
loop
adc
cmp
fadds
daa
cli
dec
push
dec
test
imul
ja
addr16
sarb
or
fs
es
loopne
pop
pop
push
push
aas
push
xchg
stos
xchg
addr16
popa
je
inc
inc
imul
je
outsl
outsb
and
jno
jbe
call
add
inc
dec
arpl
imul
insb
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
push
jne
arpl
jno
jo
xor
insl
arpl
jae
push
push
outsl
outsl
insb
inc
jne
je
outsb
add
test
jmp
jmp
fnstcw
fstpt
xchg
ja
hlt
pop
xor
sbbl
call
test
push
adc
jmp
movsb
push
pop
or
or
push
out
test
cmp
shlb
movsb
jle
push
xchg
sub
adc
jmp
and
push
ds
push
push
popf
dec
mov
ja
cmc
pop
ss
mov
les
or
lahf
das
mov
je
inc
dec
ljmp
jecxz
xor
rorl
mov
in
out
push
push
ss
insb
subb
xchg
xor
xorl
mov
xor
out
push
pop
mov
jno
ja
mov
mov
ffreep
outsl
xor
sahf
insl
lods
ss
rcr
cs
hlt
mov
lea
mov
int3
mov
add
lock
sbb
loop
push
inc
test
cltd
je
mov
pop
mov
push
jge
pushf
mov
push
push
arpl
xor
lock
div
loope
inc
lock
movsl
push
adc
cwtl
mov
les
mov
or
aas
lock
lods
inc
push
jae
xchg
mov
or
push
data16
dec
loope
gs
dec
mov
mov
icebp
and
cmp
movl
outsb
popa
or
pop
xor
sar
pushf
fs
xchg
add
sub
add
lea
ja
pushf
lea
jb
pushf
test
cmpb
call
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
push
jne
arpl
jno
jo
xor
js
bound
je
outsb
jae
push
dec
jbe
push
inc
jne
je
outsb
add
add
jp
push
je
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
jb
jae
push
popa
addr16
outsl
jne
je
jno
jb
add
test
pop
call
pushf
movl
mov
mov
lea
jmp
and
inc
inc
test
iret
cmpsb
loopne
push
cld
es
stc
mov
loopne
les
mov
inc
or
jne
jb
add
pop
add
dec
imul
ret
jecxz
mov
les
push
dec
jb
inc
arpl
mov
into
in
into
and
lcall
mov
aaa
movsl
fisubs
fmull
leave
addr16
jl
or
inc
jmp
cmp
pop
ret
stos
or
xor
jns
std
cwtl
stc
push
icebp
or
dec
lahf
jecxz
push
aad
add
insb
outsl
insl
inc
imul
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
jb
popa
je
dec
gs
fs
and
jno
jo
ss
js
insb
inc
push
fs
jb
gs
imul
fs
je
inc
push
inc
imul
je
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsl
jb
inc
popa
je
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
je
outsl
fs
gs
imul
add
add
jne
imul
popa
insb
imul
and
jno
jbe
add
inc
inc
js
jne
jb
outsb
arpl
imul
popa
insb
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
outsb
popa
insb
jns
gs
imul
jae
and
jno
jbe
adc
inc
pusha
mov
call
adc
out
popa
pushf
fsts
push
outsb
popf
clc
fidivs
sarb
jg
cmp
scas
and
roll
push
xor
inc
push
cltd
js
mov
cmp
and
add
daa
ret
push
and
pop
dec
cwtl
dec
push
pushf
lret
loope
fmulp
push
add
push
cli
es
and
in
fs
insb
or
pop
xchg
jl
cmp
jo
inc
push
jnp
jb
jg
mov
rcll
push
pushf
xor
mov
insb
push
add
mov
sbb
aas
sarl
mov
mov
lret
jle
mov
mov
jns
loop
or
dec
clc
test
xor
iret
sub
pusha
int3
mov
aam
mov
inc
loopne
es
push
rorl
pushf
mov
add
xchg
mov
inc
ret
and
bound
adc
push
pushf
lret
pusha
push
add
fstl
out
cld
add
iret
jmp
dec
dec
dec
in
sub
das
fidivs
arpl
sar
sahf
inc
and
pop
dec
es
jae
xchg
mov
gs
pushf
test
nop
inc
or
outsl
inc
mov
rolb
xchg
ljmp
sbb
adc
cmpsl
outsb
jbe
mov
lahf
scas
gs
aam
mov
and
jno
jge
pop
jge
mov
pushf
mov
stos
rolb
add
insl
popa
imul
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsl
jb
inc
popa
je
inc
outsw
jb
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
add
mov
and
inc
popa
mov
push
inc
js
lods
ret
int
test
lds
gs
out
cli
ds
outsb
cmc
inc
ljmp
fisttpll
xchg
sub
das
in
fwait
mov
mov
out
aad
or
movsb
mov
shr
adc
sbb
mov
pusha
sbb
loope
and
in
add
jle
sbb
mov
mov
cmp
xchg
mov
enter
cmp
cwtl
cmpsb
or
sub
cmp
sbb
dec
mov
xor
es
sahf
xor
ljmp
and
addr16
popa
subb
add
push
mov
xchg
mov
sub
sbb
sbb
stos
lea
out
mov
pushf
in
pop
daa
jge
pop
nop
cmp
lahf
cmp
mov
aaa
pop
mov
mov
or
xor
addr16
xchg
xchg
push
add
pusha
and
mov
add
or
mov
insb
test
mov
stos
stos
rcll
inc
add
or
pop
push
stc
inc
mov
add
inc
or
sub
mov
into
mov
pop
xlat
stc
jnp
dec
cmp
dec
dec
in
loope
sub
addr16
push
or
inc
lock
orps
call
dec
addr16
lods
pop
cmpb
rcr
xchg
aaa
sbb
jns
mov
pop
add
das
pop
inc
mov
mov
push
lods
and
stos
pop
bound
and
stos
dec
das
push
and
adc
mov
jg
in
sbb
xor
pop
xor
inc
or
mov
outsl
xchg
dec
or
shlb
jp
jge
testl
stos
arpl
xchg
push
subb
pop
pop
lods
dec
mov
sbb
inc
ror
cs
pcmpeqd
pop
mov
mov
iret
ja
mov
mov
pusha
pop
and
jmp
sbb
insl
jp
push
push
inc
push
cmp
adc
inc
sub
movsl
andb
cmpsl
push
in
mov
cmp
adc
push
jae
cmpsb
sbb
test
insb
sbb
and
jmp
call
incl
push
enter
fldl
leave
xor
or
cmp
inc
jmp
inc
cmp
ds
or
sub
jne
imul
mov
out
dec
mov
dec
lods
test
out
or
pop
jecxz
pop
cmpsl
xor
lret
out
in
push
mov
mov
sahf
inc
fstp
mov
cld
dec
mov
pusha
mov
push
pushf
sub
roll
sbb
fbld
pop
xor
xchg
mov
test
or
jno
add
push
movsl
sbb
popa
dec
sahf
loop
add
ss
jbe
enter
icebp
lahf
mov
cmc
push
cmp
mov
repz
ljmp
and
movsb
push
imul
jl
xor
jbe
cmc
push
mov
mov
jmp
add
fisubl
or
dec
mov
mov
mov
cmc
cmp
pushl
jecxz
aas
xchg
shrl
adc
xor
sub
shlb
insl
notl
cmp
inc
jno
mov
mov
sbb
cmpsl
sbb
addr16
jb
xor
cwtl
gs
adc
scas
stos
inc
push
aad
jne
sbb
mov
xchg
mov
mov
pop
inc
ljmp
js
add
insl
imul
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
push
insb
jae
gs
popa
insb
jne
add
add
insl
popa
imul
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
popa
inc
imul
imul
and
jno
jbe
stc
cmc
sub
clc
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsl
jb
inc
popa
je
and
jno
jbe
mov
inc
es
lods
add
rcrb
pop
iret
xchg
hlt
push
iret
and
mov
out
push
or
fnstcw
pop
jnp
clc
push
incl
inc
xor
pshufw
ret
std
sbb
or
push
mov
xchg
push
psrld
and
movsl
ret
sub
lock
shrl
mov
pop
les
outsl
jmp
jp
sbb
fnstsw
cli
aad
push
push
inc
push
inc
dec
jno
dec
mov
mov
adc
enter
add
mov
fldl
xchg
mov
pushf
inc
and
loop
aam
fucom
and
add
dec
out
add
cmpsl
add
add
xlat
ss
frstor
pushf
sbb
add
test
inc
loope
stos
push
outsl
xchg
sbb
dec
mov
scas
push
ds
pushf
imul
xor
adc
insb
jecxz
mov
adc
rcrl
icebp
in
mov
xchg
jns
mov
dec
les
loopne
adc
in
mov
insb
sarb
inc
sub
scas
dec
adc
cmc
jae
repz
jle
mov
jl
int3
arpl
iret
fs
jl
mov
mov
ss
dec
pushf
cmp
mov
pop
imul
call
dec
mov
in
push
mov
pushf
or
push
pusha
movb
pushf
lea
je
movzbw
call
xchg
in
addr16
cmp
xlat
ds
mov
out
cmp
xchg
fldt
adc
fcoml
test
inc
and
insl
dec
test
rcl
out
fs
inc
sbb
push
push
rclb
inc
jae
push
pop
cld
cmp
lcall
arpl
mov
data16
cmpb
mov
fldl
pop
mov
dec
pop
push
out
mov
sahf
dec
dec
fcmove
andb
loopne
pop
mov
jo
and
sbb
fisttps
rorb
jp
push
fdivr
fwait
sub
and
mov
xchg
cmp
sub
lods
and
or
int3
and
adc
jl
pushf
cltd
xor
in
dec
movsb
into
outsl
and
ret
orl
sub
sbb
xchg
mov
fwait
mov
pop
dec
cld
cmpsb
mov
mov
cmc
sub
cmpb
cltd
jnp
lcall
mov
jge
test
inc
adcb
aad
inc
push
std
loop
dec
xchg
shlb
repnz
aam
sub
xchg
scas
in
fcompl
xor
call
iret
cmp
je
es
and
nop
int3
cmp
jnp
cmp
insl
into
mov
jo
mov
lock
cmp
add
orl
mov
add
fadds
add
xor
add
push
add
push
sub
add
cmp
add
add
add
add
add
hlt
mov
push
add
js
add
mov
add
cld
add
lret
add
push
add
add
add
pop
daa
add
pop
hlt
add
jbe
add
clc
test
pop
dec
add
add
imul
mov
movb
cs
add
or
add
add
jns
add
dec
push
add
add
jmp
xor
add
xchg
add
push
pop
push
add
add
add
clc
add
add
mov
add
add
xor
add
xchg
lcall
add
add
sub
push
add
add
add
inc
and
add
xchg
add
add
les
mov
mov
add
add
add
and
add
xchg
pop
add
add
leave
push
add
sub
mov
add
stos
sbb
add
add
add
add
add
inc
add
add
add
add
push
add
push
incb
dec
pop
push
add
add
and
add
mov
add
add
movsl
add
add
add
dec
addr16
add
push
add
cmpsb
add
add
add
std
cmpsb
add
add
add
add
inc
add
mulb
add
add
add
ja
add
add
add
add
jge
add
push
add
and
add
add
add
add
add
add
add
movsb
add
add
les
add
add
xchg
add
add
add
jae
add
add
jmp
imul
mov
ret
jno
add
add
rolb
mov
add
pop
incb
add
push
add
daa
add
es
push
add
jp
add
pop
add
add
push
add
push
add
lret
add
mov
add
add
add
push
add
loope
add
add
push
add
add
add
pop
push
add
lods
add
add
add
cmp
push
add
int3
push
add
inc
add
add
out
add
add
add
add
add
jo
add
add
add
xlat
stos
add
icebp
dec
add
imul
add
pop
push
add
xor
add
push
add
mov
add
das
add
in
add
call
mov
add
push
jmp
add
add
ret
add
icebp
pop
add
popf
mov
add
add
enter
roll
dec
jnp
add
add
hlt
inc
add
add
add
sbb
add
xchg
es
add
addl
add
add
add
sti
add
add
add
mov
add
and
add
add
add
add
add
add
repz
add
add
add
jns
add
rolb
add
add
add
add
mov
add
add
push
push
add
add
add
add
add
add
add
sbb
jge
add
dec
push
push
add
mov
add
mov
lahf
add
add
add
add
add
add
xchg
pop
stos
add
add
push
add
je
add
add
add
inc
add
add
push
add
add
add
add
dec
add
add
add
xchg
add
inc
cmc
add
add
add
out
add
add
add
add
insl
add
add
pop
add
add
add
jp
add
add
add
add
push
add
outsl
pop
add
add
add
add
add
sub
and
add
add
ljmp
add
add
add
test
add
pop
push
add
add
add
pop
add
add
gs
add
enter
dec
add
add
xchg
push
add
and
test
push
add
add
add
add
add
add
stc
add
add
add
andl
add
add
add
in
add
jbe
push
add
add
add
pushf
push
add
add
add
clc
add
fnstenv
add
add
add
push
mov
add
add
add
add
roll
add
add
add
sbb
add
add
add
add
aaa
dec
add
add
add
push
and
jmp
add
add
push
add
push
add
add
add
out
mov
add
xor
add
add
add
mov
add
add
add
imul
add
add
add
lock
add
add
mov
roll
add
inc
add
sahf
xor
add
add
add
add
add
add
lea
add
jae
add
add
add
add
out
add
add
add
add
add
cmp
add
add
add
add
sti
mov
add
push
add
test
add
add
add
in
dec
add
pop
in
add
add
addb
add
add
cmp
add
add
add
dec
add
add
add
add
add
add
add
add
jl
push
add
add
add
or
and
add
add
lret
fisttpll
add
mov
add
add
add
ljmp
add
add
add
cmpsb
add
imul
add
add
mov
add
test
add
gs
add
pop
daa
add
js
add
popf
aam
add
and
add
imul
add
add
std
xor
add
add
add
add
adc
add
clc
add
add
add
js
add
testb
add
add
add
inc
add
pop
cmc
add
add
add
pop
std
add
mov
add
add
xchg
push
push
add
add
add
and
mov
add
add
add
mov
add
add
add
inc
push
add
add
add
push
push
add
add
add
fiadds
add
mov
add
add
add
mov
add
fsubrp
add
add
ss
add
add
add
add
dec
add
add
add
popa
and
add
add
add
and
add
add
add
inc
push
add
add
add
xor
push
add
add
add
mov
add
add
add
add
add
add
add
testl
add
add
add
add
add
add
out
add
addr16
add
add
das
movb
add
add
mov
add
add
add
add
xchg
pop
add
ret
push
add
add
add
add
add
add
xor
add
and
add
add
add
sbb
add
xor
add
sarb
add
add
add
mov
pop
add
add
add
sbb
add
mov
add
add
add
inc
incb
add
add
add
add
add
add
add
push
add
add
add
add
push
push
add
add
add
add
xchg
xor
add
add
add
add
add
add
add
add
fiadds
add
add
add
and
add
push
add
add
sbb
add
add
add
out
add
add
add
cmp
add
push
add
push
add
add
add
mov
add
add
add
add
sub
add
pop
push
add
add
add
add
pusha
pop
add
add
add
cmpsb
jp
add
add
add
add
fs
add
shll
add
xor
dec
sahf
add
add
add
lock
add
add
add
mov
jmp
add
add
add
add
test
add
add
imul
add
add
lods
insb
add
add
add
sbb
add
mov
add
add
enter
jg
add
add
add
inc
push
add
add
add
cmp
add
add
add
inc
daa
add
es
add
add
add
rolb
add
add
add
add
xlat
daa
add
add
add
inc
xor
add
add
add
add
jp
add
pop
add
hlt
add
mov
add
push
add
add
cmp
add
jmp
add
xchg
add
add
pop
add
insb
push
push
add
jnp
add
xchg
add
push
add
stos
int3
push
add
popf
add
jmp
addl
add
mov
fisttpl
add
push
add
out
add
push
inc
push
add
cmp
inc
pop
add
add
add
sub
add
inc
push
add
and
add
add
lret
add
fs
add
add
add
add
lock
cmp
add
and
push
add
xchg
add
add
add
or
add
add
add
add
add
adc
add
out
roll
popf
pop
add
movsl
lock
rcr
add
add
add
add
data16
dec
add
inc
movsl
add
add
sub
add
dec
add
jae
push
add
enter
test
add
add
aam
add
jle
add
mov
add
pop
jnp
add
inc
add
add
add
js
add
es
add
jge
add
cltd
mov
add
add
push
dec
add
insb
sbb
add
add
ret
sbb
add
fwait
jno
add
stc
add
jnp
add
add
add
push
inc
push
add
jg
add
push
add
push
push
add
std
add
out
adc
add
adc
add
dec
add
mov
add
inc
dec
add
push
sub
add
jno
add
add
dec
push
add
add
out
add
leave
push
add
jle
add
push
add
pop
add
add
add
add
push
add
mov
add
xor
add
add
cwtl
and
add
add
adc
push
add
push
push
add
add
das
add
outsl
pop
add
add
in
add
filds
add
add
add
and
add
pop
and
jp
add
mov
xchg
add
add
sub
add
jae
add
jp
add
popf
add
add
cmp
add
mov
xlat
push
add
rolb
rolb
add
sahf
add
add
add
mov
mov
add
add
add
add
jne
add
ss
add
add
and
add
add
add
ror
add
bound
add
add
add
cmpsb
push
add
add
add
inc
add
sbb
add
add
add
dec
add
add
add
jle
add
test
add
add
add
in
push
add
add
add
push
add
add
jno
add
push
add
add
add
sub
pop
add
add
add
push
jno
add
add
add
es
add
add
leave
scas
add
mov
add
add
add
int3
mov
add
add
add
add
dec
das
add
add
add
add
pop
add
insl
rolb
into
mov
add
repz
add
add
pop
rolb
fadds
add
add
add
mov
add
cwtl
push
add
add
add
add
add
add
mov
push
add
add
add
push
add
add
add
jae
add
add
add
lods
add
negb
add
cmp
inc
add
add
add
add
js
add
add
ret
add
add
ljmp
add
add
add
add
test
add
add
push
push
add
add
add
adc
add
add
add
adc
mov
add
add
add
repnz
add
jns
add
add
add
add
add
add
add
push
dec
add
lock
add
add
add
add
outsl
pop
add
add
add
pop
pop
push
add
add
add
pop
add
add
add
mov
push
add
add
add
push
add
add
add
add
and
add
add
add
xchg
push
add
add
add
add
add
mov
add
add
add
pop
in
add
add
add
add
lcall
add
and
add
add
add
add
cmp
add
add
mov
add
add
add
dec
add
jae
add
add
add
push
add
add
add
add
and
add
add
push
mov
ja
add
add
add
xchg
arpl
dec
enter
add
add
add
add
add
add
add
push
add
add
add
and
add
add
stc
push
push
add
add
add
add
and
add
add
add
icebp
xor
add
add
add
add
add
add
sbb
push
add
add
add
cld
add
add
add
sub
add
sbb
add
add
add
andl
add
add
rcll
add
add
add
inc
add
add
add
mov
testl
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
jae
add
add
add
sahf
pop
add
repnz
add
add
fisubrl
add
push
add
add
add
add
stos
repz
add
clc
add
add
add
add
inc
push
add
add
add
add
add
add
lods
add
add
add
adc
add
add
add
add
add
add
push
ss
add
add
ds
add
add
add
adc
add
add
add
add
add
or
add
add
add
jp
add
add
add
xor
add
jecxz
add
add
add
dec
add
add
add
add
sbb
add
push
add
add
add
popa
add
mov
add
add
and
sub
add
cwtl
add
mov
dec
add
xorb
jmp
movb
push
add
sbb
add
pop
add
push
sub
add
es
add
add
add
add
shlb
add
add
add
add
xor
add
stos
scas
add
push
add
add
add
xor
add
call
add
inc
xor
add
sub
add
ret
jmp
add
frstor
add
add
imul
add
mov
add
add
inc
fs
and
add
icebp
add
add
mov
add
inc
rolb
add
add
or
push
add
add
daa
push
add
add
pop
push
add
out
add
add
test
out
nop
add
mov
add
cmp
testb
inc
cmp
add
pop
add
in
icebp
add
add
int3
push
add
push
add
aam
add
cmp
movb
xchg
push
add
add
add
push
add
cld
mov
add
add
add
sub
add
add
cmovnp
add
add
add
cmp
add
add
add
mov
add
add
add
add
rcrl
add
add
add
add
add
add
pop
lock
lea
add
add
add
add
and
add
add
add
cld
and
add
add
add
add
dec
push
add
add
add
xchg
aaa
jmp
add
daa
std
add
jecxz
add
add
add
lahf
in
add
push
add
add
add
and
add
xchg
add
add
add
and
add
add
add
add
add
add
add
mov
clc
add
add
add
add
out
add
add
add
add
add
add
add
xchg
add
add
add
inc
push
add
push
add
add
add
push
add
faddl
add
add
cmp
dec
add
add
push
add
fildl
add
push
add
push
push
add
add
add
inc
cwtl
push
add
add
add
add
xchg
add
pop
nop
push
add
add
add
sub
push
add
add
add
add
add
add
add
insl
jnp
add
add
add
xchg
add
add
add
add
sub
add
add
add
add
leave
pop
add
add
add
lret
pop
add
fdivrs
add
add
add
testl
add
adc
add
fldl
add
add
add
push
add
push
add
add
add
add
and
add
dec
movb
iret
add
add
sub
add
pushf
mov
add
add
add
pop
add
add
add
mov
add
cmp
add
add
mov
add
and
add
in
popa
add
add
add
cmpsl
and
add
add
add
clc
int
add
xchg
add
add
add
movsl
dec
push
add
add
add
add
cli
je
add
add
add
add
add
adc
add
add
add
pusha
mov
add
mov
add
dec
lret
cmpl
add
add
add
es
add
push
add
add
add
inc
add
add
add
fiaddl
add
add
add
add
std
in
add
add
add
icebp
enter
xchg
add
add
aas
add
jl
add
add
push
add
add
add
cwtl
add
add
icebp
add
add
add
add
pop
push
add
add
add
ss
add
add
addb
add
sahf
add
add
add
lods
add
add
add
add
xlat
add
add
add
aam
add
mov
add
add
cmp
add
out
add
add
add
mov
add
out
add
cmp
add
add
xor
add
movsb
add
add
add
push
enter
outsl
add
add
mov
add
add
add
add
add
add
add
inc
add
outsl
scas
add
add
add
add
add
add
add
lods
mov
add
mov
add
add
add
add
add
iret
arpl
add
add
add
jle
add
add
add
add
inc
ret
std
add
add
add
xor
add
add
add
add
dec
adc
add
add
add
sub
add
add
out
repnz
mov
add
jge
add
ss
add
add
sub
add
add
add
and
add
add
add
mov
add
add
add
pop
add
pop
pop
push
add
add
add
mov
add
ret
add
add
add
mov
add
add
add
add
in
add
add
add
dec
add
add
add
out
push
add
mov
add
loop
push
add
add
add
add
add
add
mov
add
push
add
add
add
mov
add
adc
add
add
add
pop
push
add
add
add
add
add
add
add
dec
add
inc
mov
add
add
add
add
mov
add
add
add
mov
add
add
loope
add
add
add
add
lock
add
add
add
mov
adc
add
add
jmp
add
add
add
add
add
add
add
fstps
add
add
inc
add
add
add
orb
leave
pop
add
add
add
mov
nop
push
add
add
add
add
roll
add
add
jg
add
add
add
add
add
add
sub
add
popa
add
add
add
ret
cmp
out
fildl
add
in
add
add
add
add
xchg
sub
add
pop
add
add
jecxz
add
add
add
mov
add
ret
xor
add
add
sbb
sbb
add
add
add
aad
add
mov
add
xchg
lcall
xchg
icebp
add
add
add
add
mov
lea
je
push
call
call
cmp
cmp
cmp
movsbl
setnp
lea
lahf
mov
call
lea
cwtl
mov
setnp
bswap
mov
push
mov
jmp
add
inc
push
popa
jb
je
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
imul
imul
je
outsl
outsb
and
jno
jbe
pusha
jmp
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
jb
gs
jno
jbe
xchg
dec
sbb
in
punpckhbw
loope
scas
add
xchg
int3
ja
or
int
insl
jne
adc
imul
ja
sbb
pop
clc
add
cmc
lahf
jns
xor
gs
push
push
jl
cmp
mov
xor
leave
loopne
ljmp
jo
adc
stc
jmp
in
inc
into
dec
sbb
sub
push
push
outsl
nop
jns
jl
xor
jle
cmc
push
sahf
data16
in
out
enter
into
out
andb
mov
jmp
dec
pushf
clc
lods
inc
push
jmp
sub
sti
sarl
or
sbb
sub
mov
sbb
mov
ds
mov
cwtl
adc
mov
iret
movsl
inc
addr16
mov
cmpsb
sbb
dec
lock
and
sbb
or
leave
lahf
jge
lds
nopl
fwait
jle
outsl
xchg
jg
cmc
dec
lea
pop
repz
fistpll
pop
std
dec
dec
cmp
sbb
sbbb
sbb
scas
xchg
push
fwait
mov
daa
cmp
les
mov
cmc
and
sbb
mov
dec
pop
jne
pop
inc
lods
add
imul
jnp
insb
or
loope
inc
lods
pop
and
imul
je
mov
push
cs
sbb
jae
adc
lds
add
inc
inc
js
popa
jb
popa
outsb
je
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
arpl
data16
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
arpl
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
inc
gs
insb
outsl
popa
je
outsb
addr16
outsl
arpl
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
fs
imul
jno
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
addr16
pop
xor
imul
push
inc
xchg
flds
pop
leave
ret
into
xor
icebp
xchg
mov
adc
mov
lods
or
ret
lahf
clc
jno
pop
mov
sub
int3
loop
outsl
push
test
dec
rcrb
and
dec
and
test
cwtl
fidivl
out
into
and
das
iret
mul
ret
pop
out
mov
dec
sbb
fisttpl
mov
lods
or
or
lcall
mov
inc
mov
cld
das
pop
cli
adc
pushf
jg
scas
and
aas
lahf
mov
pop
subl
xchg
cmpb
repz
notl
addr16
pop
inc
pop
clc
xchg
jle
xor
test
fwait
add
insb
int3
pusha
add
mov
dec
fidivs
shll
inc
and
pop
sub
test
pop
ret
cli
push
lods
mov
or
enter
mov
inc
sbb
sarb
fs
movsb
movb
movsl
jnp
outsl
xchg
enter
mov
sbbl
inc
je
popa
std
inc
mov
unpckhps
int
sub
jp
in
scas
xchg
aaa
adc
push
push
xor
adc
das
sbbb
push
xchg
dec
push
mov
cmp
push
scas
push
push
out
mov
mov
scas
inc
mov
fs
jae
push
lea
jmp
add
lods
dec
sbb
stc
adc
sbb
push
lods
adc
lods
push
and
pop
imul
pxor
inc
pop
add
insb
add
ror
dec
or
aad
sbb
sub
daa
mov
inc
test
xlat
je
in
push
push
xchg
jle
sub
jmp
mov
imul
adc
xchg
fs
inc
mov
push
mov
mov
mov
mov
or
repz
jmp
mov
cmp
sbb
push
mov
jmp
fwait
dec
fiaddl
es
jg
clc
dec
mov
scas
inc
cmp
jno
cs
imul
mov
cmp
rorb
sbb
fdivs
xchg
cmp
fstpl
lcall
sbb
adc
adc
out
pop
gs
je
ljmp
or
inc
push
push
stos
push
repnz
add
add
cmpsb
cmpsb
sbb
jno
lret
mov
xchg
jnp
pop
jbe
ret
jbe
jmp
fwait
in
pop
clc
in
sbb
xchg
jno
ret
adcl
int
out
add
pop
lret
xor
sahf
sub
lret
mov
add
cmp
sti
pop
jo
xor
daa
fnstenv
jno
pusha
fldenv
outsl
jb
insb
aaa
xor
bound
add
sub
movb
bt
clc
movw
cmp
pushf
seto
lea
jmp
add
inc
push
popa
jb
popa
outsb
je
inc
inc
push
popa
jb
jb
insl
dec
outsb
je
jno
jb
cmp
jb
popa
je
js
js
arpl
movb
imul
cmc
add
pusha
pushf
pushf
pushl
lea
jmp
add
inc
dec
insl
popa
imul
imul
imul
and
jno
jbe
add
inc
inc
arpl
imul
je
outsl
outsb
dec
imul
inc
push
jns
arpl
jae
inc
imul
imul
and
jno
jbe
pushf
pusha
pushf
call
arpl
cmp
inc
sbb
cmp
lcall
sbb
jnp
or
mov
es
cmpsb
adc
mov
lret
clc
sbb
outsb
add
jle
mov
and
sub
cmp
or
pushf
mov
jl
lahf
aas
mov
vshufps
scas
inc
sub
in
xlat
lods
adc
push
ja
insl
push
add
inc
inc
js
jb
jo
imul
popa
insb
imul
and
jno
jbe
aam
repnz
sbb
xor
icebp
inc
push
daa
lea
lods
mov
lods
dec
rcrb
xchg
clc
popf
ja
call
test
lods
or
ja
cmp
rolb
pop
sbb
cs
popa
flds
jnp
xchg
sbb
inc
mov
out
shr
mov
sbb
cmp
ret
pop
fiadds
xchg
and
inc
jbe
jne
xor
fldcw
imul
inc
out
xchg
stc
cmp
ffree
scas
dec
jno
and
push
repnz
xor
cltd
pop
mov
push
movsl
xor
data16
daa
fwait
dec
movsl
add
push
dec
cmp
rcr
movsl
mov
sbb
hlt
pop
push
rolb
data16
inc
sbb
out
push
pop
insl
test
mov
mov
or
lock
cs
mov
fidivs
xor
fbstp
xchg
test
xchg
adc
xchg
imul
and
sbb
and
fiadds
jno
lret
sti
adc
filds
jnp
add
inc
sub
int
int3
pop
xor
hlt
roll
xchg
enter
xchg
or
es
dec
nop
ljmp
pop
xor
sbb
call
clc
fidivrs
pop
hlt
rcrb
xlat
inc
mov
in
add
fs
je
inc
push
dec
je
insl
dec
imul
outsb
imul
and
jno
jo
xor
js
bound
je
outsb
jae
push
dec
jbe
push
inc
jne
je
outsb
add
cld
cli
inc
sbb
or
mov
xchg
jle
mov
das
pusha
sbb
jp
add
lret
adc
insl
cld
push
jge
repnz
jne
mov
call
inc
or
test
pop
repnz
add
pusha
out
mov
mov
xchg
fwait
jno
notb
or
cmp
mov
inc
jg
ret
pop
push
or
pop
in
dec
inc
sbb
mov
dec
scas
push
mov
aas
rcrb
inc
popa
dec
cmp
pushf
mov
cmp
xor
imul
push
lret
mov
xor
inc
out
mov
jo
adc
adc
jg
mov
mov
xchg
push
mov
iret
inc
jle
xchg
cmp
mov
ret
sub
mov
add
and
jnp
pusha
mov
inc
or
add
mov
popf
jb
out
negl
fwait
jno
fs
cmp
sub
dec
push
in
inc
out
ljmp
pop
or
mull
or
int3
daa
mov
hlt
cmpsb
dec
scas
mov
test
and
xor
fdivl
out
sub
arpl
cmp
or
gs
push
or
or
sahf
mov
mov
sbb
or
adc
xchg
xor
dec
xchg
shlb
cs
bound
and
cmpeqps
adc
adc
inc
cmp
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
push
gs
outsl
arpl
and
jno
jbe
and
bound
add
stos
enter
sbb
iret
scas
aas
or
mov
or
insl
jo
in
test
ret
push
loope
add
stc
pop
insb
mov
insl
in
mov
fstl
jb
mov
in
inc
jmp
andb
jge
sbb
inc
test
rcl
insb
rclb
sahf
jge
sub
dec
xorl
test
stos
clc
std
jg
sbb
jae
out
or
sub
insl
into
scas
shll
adc
imul
inc
inc
outsl
outsb
je
jb
inc
imul
imul
and
jno
jbe
cmp
mov
movsb
add
iret
cs
jle
xchg
shrl
rcrl
leave
inc
js
push
mov
pop
xor
test
inc
sbb
pushf
jbe
add
rcrb
mov
subb
loopne
push
movsl
clc
rcll
call
xchg
sbb
insb
mov
jge
hlt
xchg
mov
pop
insl
xchg
sbb
lea
xchg
sub
cmp
icebp
pop
mov
adc
or
jno
jbe
sti
cmp
aas
push
and
and
jmp
xor
shr
rorb
pop
or
stos
loope
adc
push
jns,pt
xchg
or
add
cltd
push
sub
xchg
push
mov
call
popf
cmp
push
sbb
js
cmp
push
sbb
fdivp
adc
neg
outsl
mov
lret
call
jns
add
adc
sbb
adc
dec
divb
cld
pop
jge
push
or
lahf
cmpsb
pushf
popf
outsl
jge
add
in
adc
xor
movsl
cmp
dec
push
and
jnp
ret
repz
mov
sub
cmp
jl
in
lcall
mov
data16
test
xor
pushf
mov
or
dec
leave
pop
sbb
or
push
fs
je
inc
push
dec
je
insl
inc
dec
outsb
imul
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
arpl
gs
imul
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
jb
jo
imul
outsb
jbe
jae
push
je
gs
push
and
jno
jb
xor
push
jns
gs
push
push
arpl
aaa
inc
jb
jo
imul
popa
jo
imul
js
fs
jb
inc
imul
je
outsl
outsb
and
jno
jbe
cmp
jp
aaa
push
mov
jbe
jge
push
jo
and
jne
mov
outsl
and
sub
outsb
fsub
jae
fildll
loop
ja
jecxz
cmp
dec
xchg
cmc
push
add
dec
push
ljmp
fstl
mov
add
xchg
cmpsb
adc
xchg
pop
shl
inc
pop
mov
repnz
aas
xchg
or
outsb
inc
call
add
mov
clc
pop
inc
pop
jno
test
add
insl
push
popa
jo
insl
imul
imul
imul
jbe
add
inc
dec
arpl
outsb
jae
insb
gs
imul
imul
and
jno
jbe
add
inc
dec
insl
jp
je
insb
inc
imul
imul
and
jno
jbe
add
inc
inc
outsl
outsb
je
jb
inc
push
dec
bound
arpl
jae
inc
dec
outsb
fs
data16
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
or
sbb
pusha
or
enter
mov
rolb
xor
pop
add
enter
dec
push
mov
jp
or
adc
cltd
or
cli
rol
andl
adc
addb
add
pop
packuswb
dec
xchg
xchg
fwait
mov
cmpsb
xlat
fst
into
icebp
js
dec
loopne
pop
xchg
ret
pop
xlat
cmc
mov
aas
sbb
mov
in
jbe
push
loope
stos
push
xchg
xchg
fwait
push
imul
aad
icebp
mov
mov
notb
sarl
pop
xor
sbb
ds
mov
stos
pop
pop
push
in
shrb
mov
loop
push
jmp
inc
loopne
sar
sub
test
dec
inc
insb
inc
xor
push
test
loopne
mov
mov
adc
adcl
pop
scas
adc
inc
mov
jnp
pop
out
mov
jne
mov
mov
xor
hlt
xchg
std
push
jb
mov
movsl
into
inc
test
mov
mov
ljmp
popf
push
stos
rorl
out
out
fwait
lret
loopne
leave
or
pop
lods
pop
dec
inc
insb
inc
fidivrs
lock
xchg
std
add
negb
jb
dec
inc
leave
icebp
dec
leave
jo
test
cmp
sub
add
hlt
das
test
inc
js
insb
inc
push
fs
jb
gs
imul
inc
push
gs
popa
insb
jne
and
jno
imul
jae
gs
inc
push
popa
jb
popa
outsb
je
inc
xlat
cmc
cmp
inc
add
stos
inc
mov
sbb
jae
mov
fwait
mov
dec
hlt
jne
mov
xchg
push
out
push
or
outsl
idivl
fwait
dec
movsl
xor
mov
dec
daa
outsb
and
rclb
fiaddl
adc
movsl
pop
lds
jp
inc
repz
or
adc
fwait
ja
xor
pop
icebp
xchg
push
aad
fdiv
add
push
add
pushf
cmp
pushl
push
lea
jb
bt
bt
stc
bt
cmp
call
add
inc
dec
insl
popa
imul
imul
imul
imul
jbe
add
inc
dec
insl
push
gs
imul
imul
imul
jbe
add
inc
inc
js
imul
gs
fs
jo
jae
je
jb
imul
imul
je
outsl
outsb
and
jno
jbe
mov
call
add
inc
inc
js
imul
je
outsl
insb
jne
imul
insb
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
push
arpl
insb
insb
imul
outsl
outsb
je
outsl
insb
inc
inc
fs
jae
inc
insb
imul
je
jno
jb
xor
push
jns
gs
push
push
arpl
js
push
aaa
bound
add
add
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
add
inc
es
call
repnz
mov
cmpsb
or
out
lock
ds
loopne
mov
mov
outsl
aas
adc
sbb
aam
ret
pusha
ret
pop
hlt
cmp
mov
inc
ret
cmpsb
mov
or
sbb
lret
sbb
mov
inc
scas
loope
jmp
jp
lock
sbb
imul
cld
add
into
arpl
into
jne
mov
cmpsl
pop
mov
adc
or
stos
es
jg
push
inc
out
inc
jg
cmc
xchg
mov
xchg
cmp
push
xor
add
inc
inc
bound
outsb
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
std
cwtl
fidivrs
sbb
jns
cmp
mov
outsb
jmp
sub
jg
mov
adc
aam
jmp
out
subb
loope
push
fisubs
mov
iret
sti
rol
and
jecxz
loopne
push
ljmp
adc
sbb
push
xchg
jnp
mov
movb
call
cmpsb
sarb
inc
adc
loop
push
xlat
ret
pop
and
pandn
cmp
outsb
dec
sub
dec
clc
cmp
add
call
pop
movsl
sarb
sbb
lods
adc
mov
lock
mov
mov
fldcw
arpl
bound
add
scas
xchg
pop
xor
adc
call
loopne
push
mov
call
testl
gs
sbb
rcl
and
cld
addr16
sub
push
out
pop
in
dec
imul
jnp
popa
adc
inc
mov
bound
testl
int3
call
rep
sarb
push
jge
fnstsw
ja
negb
clc
push
testl
jle
adc
cmc
fldl
cs
or
jb
cmpsl
dec
dec
in
ret
cmp
sti
arpl
push
or
insl
mov
sti
sbb
jmp
or
push
push
je
sbb
pop
lret
popf
mov
imul
scas
adc
push
push
sbb
dec
or
push
mov
in
shll
inc
sub
and
push
test
xchg
and
and
jo
xor
push
data16
arpl
jb
inc
push
inc
jne
arpl
jb
add
add
insl
popa
imul
inc
imul
je
outsl
outsb
and
jno
jbe
popa
jge
cmp
or
lahf
adcl
sbb
cmc
mov
and
ret
stos
or
scas
mov
shrb
test
mov
rcll
push
mov
or
popf
sub
push
adc
lods
shrb
sub
pop
push
repz
pop
je
sahf
or
cwtl
std
mov
aaa
sbb
pop
outsl
ret
in
pop
mov
shrb
sub
pop
push
repz
int
jg
mov
jg
mov
pop
cmp
hlt
jno
add
push
out
lea
mov
je
movsb
ljmp
aad
sub
mov
push
ret
js
lcall
jo
mov
mov
scas
ret
daa
inc
out
inc
sub
xor
lret
mov
cwtl
sub
sbb
sub
lds
inc
pop
rcl
das
sub
negb
repz
movsb
enter
iret
in
and
lock
sbb
pop
lret
add
mov
mov
lock
xlat
jp
dec
cmp
fdiv
fmuls
adc
cwtl
cmpsl
call
icebp
pushl
add
mov
add
in
cmp
arpl
pop
sbb
adc
cmpsb
out
mov
mov
mov
inc
pop
insl
lret
js
xor
jp
repz
push
js
pop
test
cmp
pop
or
int
sbb
mov
dec
in
popa
inc
lods
push
adc
in
call
loope
js
mov
dec
lods
or
shll
roll
and
push
imul
mov
loopne
lret
or
add
mov
mov
dec
in
test
test
sbb
sbb
fs
in
inc
sub
cmp
int3
and
dec
lret
adc
and
loopne
mov
push
sbb
sub
push
nop
shrd
adc
or
inc
sahf
cli
adc
add
stos
sbb
in
inc
jbe
icebp
mov
in
xchg
lea
notl
mov
jo
iret
xor
mov
in
sub
and
leave
sub
out
repnz
jae
insb
fwait
mov
les
fidivrl
xchg
and
iret
out
lea
dec
lret
mov
loope
ret
sbb
push
jge
lock
cmpsl
rclb
jmp
inc
sub
fcmovnbe
cmpsl
add
push
in
roll
cmp
cltd
mov
sti
push
daa
inc
adc
mov
mov
pusha
mov
js
jo
push
cmp
push
jle
out
lods
dec
xchg
cmp
xchg
bound
in
scas
push
jo
cmp
xor
addr16
jecxz
out
dec
push
popf
xor
xor
xchg
sbb
inc
arpl
sbb
mov
jg
jb
mov
pop
enter
js
mov
cmp
cmp
xchg
cli
fdivrs
mov
clc
or
test
jle
cs
dec
pop
in
mov
mov
mov
imull
jle
mov
push
jp
xor
loopnew
fbld
lock
inc
data16
push
mov
jle
cs
dec
sub
inc
jnp
stos
bound
in
or
test
insb
dec
movsb
dec
mov
pusha
in
scas
add
movsl
dec
das
adc
add
mov
aam
scas
mov
fisubs
rol
pop
insb
jbe
and
sbb
push
adc
fwait
mov
pop
pop
mov
xchg
insl
and
enter
xor
cmc
fnstsw
mov
popa
inc
xor
inc
mov
pop
jne
es
xchg
mov
xchg
in
test
sbb
rorl
rol
pop
fidivrl
xor
jns
xor
mov
in
mov
cld
sbb
xor
lcall
dec
das
test
clc
xchg
and
movsl
inc
popf
xor
ror
sbb
inc
clc
fcomi
jno
pusha
adcl
sbb
xchg
inc
stos
in
xchg
adcl
xchg
aas
lock
jp
adc
inc
addl
outsb
sarb
movsl
jb
repnz
sub
sarb
dec
sti
cmpl
mov
js
and
in
push
dec
pop
popf
or
pop
ficoml
clc
aam
mov
scas
cmp
push
cli
sbb
sbb
fdivl
clc
loop
lock
loop
inc
and
add
inc
add
cmp
jl
xor
inc
lods
js
lock
es
fdivs
pop
jns
fwait
and
push
dec
sub
or
lods
dec
fs
cmp
sub
roll
push
andb
mov
nop
rclb
xchg
add
jbe
lods
cmp
rolb
and
iret
ret
pop
xchg
pop
mov
mov
cwtl
xor
mov
jno
xor
icebp
sbb
add
lods
dec
sub
dec
pop
repz
xchg
andb
inc
in
imul
push
xchg
into
pop
adc
cmpsb
inc
lock
icebp
aam
xchg
and
icebp
pop
jmp
inc
jmp
sar
and
push
fistl
xchg
clc
cmp
incb
bound
or
cmpsb
into
push
sub
fucomi
mov
adc
xor
dec
sub
scas
inc
mov
sub
inc
sar
sub
push
lods
xchg
cmp
sti
adc
fdiv
fwait
xor
mov
mov
daa
adc
pop
mov
pop
push
dec
rcl
push
loop
fbstp
pushf
mov
and
hlt
add
sti
push
in
adc
int3
ljmp
add
scas
pop
rcll
arpl
pusha
jnp
fdivs
leave
sbb
jnp
je
data16
lea
dec
in
dec
outsb
push
js
xorl
inc
mov
fs
je
inc
push
dec
je
insl
inc
dec
outsl
popa
fs
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
sbb
in
cmp
mov
xlat
cmp
cs
lds
sbb
push
fists
and
enter
add
or
in
lods
lock
inc
or
out
lock
bound
push
insb
sub
in
out
cmc
mov
or
scas
call
test
add
stos
into
ret
pop
sar
shlb
mov
sub
addr16
jmp
fcmovne
and
mov
or
aas
sub
test
jne
incb
and
aaa
fdiv
pusha
dec
aad
in
aaa
push
out
sub
xor
or
icebp
leave
sub
test
pop
cli
cli
dec
add
push
add
xchg
imul
imul
jae
ds
jg
mov
jnp
dec
sub
popf
das
repnz
jne
jbe
clc
push
cmp
shrb
xchg
out
mov
sti
inc
ret
sti
pop
pop
rorl
mov
cmp
and
and
ja
jge
mov
js
loopne
push
shll
mov
add
popf
jle
and
or
jge
cmpsl
push
cld
cmpsb
and
xor
sub
shl
inc
jecxz
adc
pop
inc
sarl
fnstcw
xchg
jno
jle
mov
sub
sbb
add
pushf
call
pushf
cmp
call
movl
pushf
call
add
inc
inc
js
insb
jae
jb
imul
imul
and
jno
jbe
stos
cld
into
das
sbb
mov
push
mov
jns
fninit
sub
loop
cmp
cmp
jne
and
mov
aaa
push
jl
repnz
or
enter
xchg
repnz
pop
mov
outsb
jne
push
sbb
arpl
jmp
fcompl
dec
xor
xorb
pop
daa
xor
xor
cmp
faddl
int
pop
dec
xchg
sarl
sbb
fidivrs
fbstp
inc
mov
ss
mov
int
dec
xlat
mov
xchg
fsubrp
and
movsb
add
xlat
adc
jno
xor
out
lret
jmp
cld
lahf
fistps
cmp
push
lret
pusha
add
mov
mov
lret
mov
int
cmp
or
mov
aaa
lods
lret
into
and
cwtl
cld
push
cli
push
repz
xor
xchg
dec
jne
cld
dec
pop
jbe
in
pop
jg
in
cs
outsl
or
cs
movsl
test
stos
xchg
test
sub
xor
insl
push
dec
lea
jecxz
pop
aas
shll
clc
push
cmp
lcall
mov
push
or
mov
or
mov
mov
out
jmp
sub
sub
nop
cli
rcr
icebp
xlat
scas
call
add
sub
mov
je
jo
addr16
out
cmpb
cmp
lods
lret
or
mov
dec
scas
add
outsl
das
cld
negb
add
inc
push
jne
imul
je
add
das
sbb
mov
loop
mov
cmpsb
adc
movsb
stc
sbb
mov
sbbl
push
jp
cmp
mov
or
dec
pushf
xor
mov
in
rorb
mov
add
mov
jae
mov
repnz
cmp
push
leave
mov
stos
jecxz
mov
push
pop
sbb
lret
movsb
call
ds
and
cli
push
call
mov
pop
pop
jp
test
inc
insl
in
push
push
pusha
mov
inc
or
jmp
pop
mov
repnz
xor
mov
or
push
jg
sbbb
call
lds
pushf
ds
sub
shrl
jbe
mov
loopne
sbb
cmp
or
fistpll
xchg
cmc
adc
and
fs
sub
inc
arpl
sbb
mov
cmp
jp
sub
fdivs
mov
cmp
xor
push
push
cmp
xor
push
repnz
jg
in
ljmp
and
aam
repz
xchg
push
outsb
aam
mov
mulb
pop
mov
out
push
cmp
xlat
add
xlat
hlt
add
data16
stos
inc
push
jg
je
scas
jnp
cmp
or
mov
mov
sbb
add
pop
mov
andb
add
or
add
adc
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
dec
dec
push
popa
je
push
popa
insb
jne
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
outsl
add
lea
je
call
add
inc
dec
arpl
jae
jae
jb
outsb
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
mov
js
sbb
test
dec
and
dec
dec
je
pop
lret
mov
sub
sub
or
dec
push
imul
rcrl
into
call
rolb
leave
sbb
add
push
arpl
movsb
leave
and
add
pop
iret
jle
xchg
mov
mov
outsl
xchg
insb
fs
scas
add
addl
enter
or
sub
lcall
lods
test
ja
jp
pusha
lcall
ds
arpl
sub
mov
lock
inc
xchg
lahf
loopne
jg
and
mov
xor
sub
mov
push
mov
lods
adcl
ret
mov
or
push
call
pop
lahf
aaa
inc
aaa
fldcw
dec
daa
mov
xchg
cli
fbstp
xchg
sub
inc
jp
mov
je
insb
inc
pop
imul
push
adc
addr16
add
xchg
sub
out
scas
add
cli
sarl
pop
cmp
fcomps
and
fdivrs
mov
add
sti
pop
pop
xor
ljmp
sub
adc
adc
ret
jp
fsubs
loop
sub
jmp
and
insb
fists
outsb
lds
in
mov
jmp
mov
subl
and
inc
jle
jp
in
stc
pop
out
add
inc
inc
js
jne
je
insl
fs
je
inc
imul
imul
and
jno
jbe
movzbw
lea
pushf
mov
pushf
lea
jmp
pusha
movl
pushf
pushl
lea
jmp
add
inc
dec
arpl
jae
je
insb
jae
imul
imul
and
jno
jbe
lea
ja
cmc
pushf
imul
call
pushf
lea
jae
cmp
neg
btr
btr
mov
adc
sar
bts
shld
mov
bts
movsbw
not
mov
clc
test
bt
test
xor
test
cmc
pushf
repnz
movb
lea
jne
setl
push
xor
mov
btc
adc
sbb
sub
sbb
not
not
lea
cmp
sub
sub
pusha
pushl
popl
cmp
cmp
mov
pushf
lea
jmp
add
inc
dec
insl
push
jne
outsb
je
inc
imul
imul
and
jno
jbe
pop
dec
pop
sub
scas
lds
or
out
or
xchg
jnp
inc
es
sub
loopne,pn
xor
mov
inc
out
jae
adc
pop
js
das
sub
cs
aas
fucomip
roll
push
stc
std
and
push
xchg
clc
adc
lcall
or
jno
into
cmc
xchg
aam
mov
push
je
sub
ret
pop
pop
cmpsl
pop
jecxz
loope
sbb
sub
out
jp
dec
jno
shlb
sub
and
xor
mov
mov
push
mov
adc
pop
inc
lds
sbb
or
dec
repnz
fs
jae
test
cld
imul
je
jg
sbbl
xchg
clc
add
daa
push
cmpsb
pop
insl
mov
adc
movsb
push
jl,pn
sub
lods
cli
nop
call
adc
sbb
aad
pop
inc
rolb
loopne
inc
test
pop
insb
mov
loopne
imul
sub
lods
lds
inc
scas
enter
sub
push
mov
xchg
out
fimuls
leave
sub
in
imul
inc
dec
ja
sahf
not
loopne
push
inc
xchg
mov
and
mov
out
push
jg
cs
inc
in
xchg
mov
ds
sti
add
subb
insl
or
repnz
test
inc
push
mov
repnz
cld
fidivs
cmp
idiv
imul
in
fcmovbe
push
js
inc
mov
shrl
xchg
jnp
cld
dec
or
mov
sarl
jo
mul
roll
ficomps
push
lds
push
xchg
pusha
cmpsb
icebp
inc
dec
jno
popa
loopne
sub
testb
xor
push
stc
sarb
mov
sbb
inc
cmpsl
xsha1
cmpsb
mov
lret
daa
dec
ret
cli
in
js,pn
bound
test
stc
out
push
or
xor
mov
mov
pop
jns
mov
xor
dec
pop
negb
cmpsb
or
push
mov
stos
add
das
cmc
push
testb
cli
adc
add
jnp
mov
sbb
gs
sarb
sub
add
dec
loop
stos
lret
mov
xchg
scas
fdivrl
daa
sbb
mov
add
mov
inc
lods
add
divl
fucomip
sub
xor
mov
jne
negb
lret
xor
imul
imul
nop
add
outsb
add
hlt
push
cmp
aam
mov
in
stc
pop
test
inc
cmp
inc
jmp
test
inc
test
adc
mov
test
pop
sub
and
jns
pop
pop
jo
sub
subl
dec
xchg
insl
ret
add
js
insb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
popa
imul
inc
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
inc
gs
jne
data16
popa
insb
jne
and
jno
xor
gs
inc
and
insl
imul
and
jne
and
fs
je
inc
push
inc
imul
imul
and
lea
pop
mov
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
jb
jae
dec
je
insl
inc
outsl
jne
je
jno
jb
add
inc
pop
hlt
xchg
cmp
push
aaa
push
dec
in
mulb
movb
icebp
sub
sub
cwtl
add
and
mov
inc
lret
push
push
loope
sarb
xchg
push
inc
sti
add
xor
push
mov
cmp
mov
inc
imul
ret
ljmp
pusha
sub
popf
hlt
ret
and
pop
and
sbb
add
insl
inc
stos
xchg
cmp
popa
imul
dec
mov
mov
insb
leave
imul
jecxz
das
add
es
jo
dec
mov
lret
xor
stos
pop
mov
jp
and
repnz
mov
push
mov
mov
fs
imul
sub
push
addr16
je
in
dec
ljmp
shrb
int3
insb
mov
adc
push
sahf
andb
sbb
pop
pop
jns
jo
loop
or
push
rcrb
mov
xor
in
dec
mov
inc
and
cli
jp
xchg
inc
out
in
mov
aaa
ljmp
sub
pushf
les
psrad
cmc
test
dec
dec
lahf
and
les
test
in
outsl
xchg
ss
and
pop
or
mov
push
ret
mov
out
push
imul
and
push
xchg
cmp
mov
mov
out
push
stos
pop
adc
mov
insb
popa
jae
gs
push
inc
imul
insl
inc
add
fsubs
sbb
xlat
add
inc
mov
es
mov
test
je
je
aaa
sbb
sbb
pop
mov
and
dec
lret
push
or
out
jno
sbb
inc
mov
mov
fisubl
leave
add
mov
adc
jge
xchg
rorl
or
std
aam
sub
insl
xchg
jmp
add
adcb
sub
pushf
and
push
ss
jns
fwait
jb
movsb
push
and
addr16
jmp
add
inc
jns
icebp
pop
pop
jecxz
ds
mov
or
loopne
sub
mov
imul
test
imul
scas
das
or
sahf
js
ljmp
bound
and
push
jae
or
fnstsw
roll
mov
lods
in
xorb
sti
push
sar
adc
in
jo
sub
mov
dec
xchg
push
pop
inc
xor
sar
shrb
adc
repz
jne
movsb
mov
mov
test
and
adc
inc
sub
sbb
push
jle
test
mov
cmp
mov
xor
adc
mov
icebp
popa
loope
lea
cmp
sbb
add
aam
xchg
add
xor
cwtl
add
or
xor
jae
adc
in
call
subb
mov
cmp
push
movsl
inc
neg
xor
and
jle
cmp
adc
push
or
rcrb
sub
mov
add
inc
xor
jle
adc
mov
or
inc
subl
push
pop
out
aaa
mov
lret
jg
cmp
xor
faddl
daa
xchg
into
pushf
ss
addr16
mov
pop
movb
xchg
sahf
xor
dec
cs
ret
pusha
into
lods
fnsave
int3
xchg
out
pop
std
sbb
dec
and
call
fidivs
mov
jp
cmc
fstps
push
pop
cmp
leave
push
and
lea
jne
test
test
mov
call
add
inc
inc
js
imul
inc
imul
imul
and
jno
jbe
add
inc
inc
js
arpl
insb
insb
bound
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
outsl
jb
inc
popa
je
and
jno
jbe
add
inc
inc
js
insb
arpl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
popa
imul
popa
bound
popa
jo
inc
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
push
dec
je
insl
dec
outsl
fs
js
jno
jb
xor
push
fs
je
inc
push
dec
je
insl
jo
xor
insb
inc
push
fs
jb
gs
imul
jo
ss
fs
je
inc
push
inc
imul
je
outsl
add
xchg
xor
sbb
jl
jbe
jle
cmp
add
lcall
in
loopne
fs
push
xor
push
sub
gs
jg
js
test
jge
push
mov
push
out
push
cmpsl
movsl
mov
cwtl
inc
push
in
es
inc
inc
xchg
outsl
test
hlt
sbb
shlb
jo
leave
pop
testb
ss
stos
pop
adc
pop
mov
sbb
push
inc
push
jbe
in
pushf
sub
push
jns
loop
lods
leave
fsubl
pop
ficomps
fdivl
xor
add
xchg
add
mov
pusha
or
push
test
bound
add
insb
imul
imul
popa
insb
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
push
dec
outsl
fs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
imul
jne
je
bound
outsb
je
outsl
insb
inc
imul
imul
and
jno
jbe
add
inc
dec
jbe
jb
jo
jb
jns
je
jb
gs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jp
outsl
insl
insl
outsl
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
outsl
outsl
insb
ja
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
je
gs
inc
imul
je
outsl
outsb
and
jno
jbe
adc
shld
ror
mov
test
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
imul
imul
jo
ss
fs
je
inc
push
inc
imul
je
xor
popa
inc
push
dec
je
insl
dec
imul
jae
gs
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
inc
inc
js
push
outsl
js
imul
imul
and
jno
jbe
aad
fcomps
mov
mov
pop
inc
add
mov
lea
sbb
add
lock
sarb
fdivrl
add
test
shll
inc
sbb
add
mov
add
repz
sub
fists
cmpsl
xor
push
ret
jbe
xor
inc
mov
outsb
xchg
and
inc
scas
mov
dec
mov
call
push
insl
jl
ret
or
test
shll
out
loop
push
pop
aam
outsl
or
push
data16
jl
cmpb
repnz
cmp
enter
dec
push
jge
mov
adc
mov
arpl
int
dec
mov
and
cltd
jno
mov
push
mov
test
lahf
shlb
lret
cmc
shl
fstpl
inc
sub
test
int
pop
mov
cmpsl
xor
test
cmp
pop
repnz
xor
mov
mov
lret
dec
inc
xor
pop
or
out
out
and
sbb
sub
mov
rcrb
dec
sbb
data16
jbe
ret
call
cmp
add
cmc
pop
stc
add
test
xchg
fnstenv
imul
int
fimull
inc
pop
mov
pop
and
push
cld
push
sub
subb
test
lcall
jo
sbb
sbb
bound
in
mov
push
xchg
jge
push
test
pop
push
stos
pop
jne
imul
aaa
xor
or
cmpsb
push
xor
push
push
aad
dec
in
add
insl
mov
mov
mov
fiaddl
aas
mov
subb
adc
stc
jg
ret
pop
xchg
push
and
sub
aad
sbb
jbe
jg
notl
aaa
cmc
mov
orb
inc
mov
xor
aam
jle
cmp
std
adc
pop
test
cli
lock
lock
aam
call
mov
mov
out
movsl
xor
hlt
cmpb
outsb
mov
shrb
cmpsl
andl
add
cld
aad
push
jno
stc
pop
jg
mov
xor
fidivs
fsubr
jle
sbb
inc
pop
xor
push
jnp
mov
mov
adc
orl
sbb
clc
clc
xor
mov
stos
int3
sub
cld
dec
adc
adc
das
xchg
int3
add
jle
dec
insl
xlat
dec
in
call
push
cltd
movsl
test
enter
scas
lahf
push
mov
xchg
loopne
sti
in
popf
leave
in
ja
xchg
les
fsubs
insl
xchg
sub
jbe
mov
mov
leave
cmpsb
inc
jmp
insl
add
ds
add
xchg
mov
inc
cs
clc
xchg
mov
push
pushf
jmp
add
inc
inc
js
outsb
jo
popa
arpl
outsl
outsb
je
imul
outsb
popa
insb
imul
and
jno
jbe
subl
lods
cmp
aad
shlb
pusha
jmp
push
in
out
jbe
xor
jecxz
flds
out
scas
into
imul
adc
jmp
mov
cmp
adc
jns
pop
mov
insl
loope
dec
push
sar
scas
dec
sub
stos
dec
ret
cmp
jle
sbb
stos
xchg
les
std
in
in
push
fnsave
sub
lret
scas
das
xchg
mov
pop
std
in
mov
or
inc
scas
dec
imul
jp
ret
push
jg
in
std
in
cmp
lds
shll
sub
ret
movl
cmp
out
mov
push
and
xchg
mov
paddsw
fdivl
inc
jecxz
hlt
cmp
icebp
and
push
add
fnsave
sbb
mov
mov
push
movsb
sbb
shll
fimuls
mov
sbb
inc
pop
aas
cmp
ss
je
mov
fwait
hlt
cmp
add
dec
daa
xchg
mov
cmpsl
jb
sbb
or
or
in
and
rclb
sbb
jmp
dec
jbe
mov
push
push
cli
aam
sbb
pop
arpl
orl
fs
sub
fcmovne
rol
fs
pop
add
mov
pop
repnz
cli
push
jo
cld
xchg
lret
xchg
repnz
popa
sti
or
adc
mov
sub
ljmp
adc
cwtl
xchg
sbb
out
and
xor
test
sub
frstor
mov
push
leave
and
lret
outsb
xor
pop
pop
push
push
fists
cmp
jns
enter
adc
loope
push
push
mov
jns
mov
dec
stos
push
push
pop
push
out
sub
ret
leave
xchg
test
jle
pop
and
lahf
nop
cmp
mov
dec
sub
scas
xchg
cmc
add
sbb
push
mov
out
es
js
data16
incl
xchg
adc
mov
mov
and
in
pop
lods
mov
push
sub
sarb
cmp
aaa
xchg
cmp
sti
sbb
daa
test
adc
out
enter
gs
mov
adc
lcall
cld
xchg
jmp
adc
push
xor
jae
sbb
dec
lods
fldenv
pop
lds
orb
pop
add
cmp
in
jmp
sub
mov
out
dec
mov
jmp
cmc
xlat
pop
sbb
jo
ds
jb
jecxz
mov
stos
xchg
fnsave
ret
pop
inc
inc
xor
add
cmpsb
enter
pushf
push
lret
inc
push
mov
lret
rol
jmp
xchg
cmp
sbb
mov
js
xor
out
jle
push
jl
mov
xchg
leave
xor
mov
mov
nop
icebp
dec
jg
insl
sbb
dec
or
xor
addr16
xor
jle
and
imul
sub
roll
adc
cwtl
add
jnp
shrb
ret
mov
std
stos
mov
inc
test
push
cmp
inc
idivb
mov
jmp
enter
dec
insb
int3
and
adc
gs
jg
xchg
movsl
lret
mov
sbb
leave
arpl
jecxz
scas
into
jae
mov
in
jle
mov
xchg
imul
and
in
scas
adc
sbb
mov
pop
loope
or
adc
inc
add
or
jl
add
mov
popl
popa
jbe
movsl
int
xchg
mov
jg,pn
test
aaa
fnstsw
sub
mov
dec
mov
into
pop
mov
fisttps
xor
rcrb
pushf
mov
sub
and
mov
inc
jg
push
out
push
stc
or
int3
push
pop
sbb
hlt
xchg
cmp
add
sbb
mov
mov
jmp
scas
add
mov
cli
xchg
mov
mov
daa
je
or
jo
out
cli
rol
sarb
mov
xlat
pop
shll
and
xchg
jne
mov
repnz
mov
sub
fists
nop
loope
insl
movsb
push
cwtl
ret
or
mov
mov
pop
pop
cmp
xlat
adc
and
jnp
sbb
ljmp
int
ss
lock
pop
mov
shl
outsl
std
jno
in
loopne
mov
add
mov
mov
xor
push
negl
push
inc
shll
xor
test
or
pop
inc
stos
ds
loope,pn
cmc
pop
pop
ss
push
add
imul
lahf
push
out
popf
xor
push
sbb
push
add
repz
movsl
dec
adc
push
cwtl
cli
push
movsb
andl
imul
mov
cmp
inc
sub
xchg
sbb
add
negb
jno
push
fistl
and
inc
push
mov
insb
mov
push
dec
pop
cmp
loope
inc
pop
loop
cwtl
lds
popf
insb
pop
out
loope,pn
add
iret
lods
sbb
push
xor
xor
push
jle
xlat
sarb
insb
and
add
cmc
clc
xadd
bsf
shr
bt
bswap
mov
lea
add
call
push
imul
and
scas
sbb
push
cmp
in
loopne
xchg
xor
mov
pop
dec
and
lret
jmp
xor
dec
cmc
push
xchg
out
js
popa
stos
lds
xchg
cli
fcomi
pop
ljmp
add
js
je
jb
addr16
imul
imul
and
jno
jbe
clc
btr
lea
cmp
pusha
sub
clc
jmp
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
jb
gs
outsb
jae
popa
outsb
arpl
jno
jb
add
jo
data16
pushl
ret
pushf
mov
lea
jge
push
pushl
popl
setbe
push
not
push
mov
lea
pushf
movl
jmp
add
inc
inc
js
outsl
outsl
imul
data16
jo
imul
inc
imul
je
outsl
outsb
and
jno
jbe
lahf
mov
pushf
pushf
pusha
mov
lea
jmp
add
inc
inc
js
je
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
rol
dec
adc
inc
push
jl
xor
and
lahf
jnp
jmp
dec
repnz
xchg
xor
sbb
gs
shr
test
clc
rol
inc
ds
clc
jle
leave
pushf
xchg
cmc
loopnew
add
dec
imul
and
lods
inc
pop
jl
cmp
pop
xor
adc
pushf
mov
and
das
mov
pop
or
aam
sbb
pop
xchg
cmp
cmp
adc
pop
xor
sub
mov
scas
push
out
mov
dec
mov
or
cmp
insb
lods
int
imul
xor
addb
sbb
dec
push
jmp
pop
sbb
dec
fcmovu
cltd
add
mov
std
cmpsb
mov
test
xor
or
and
stos
inc
mov
jecxz
bound
adc
scas
push
jge
and
pop
xor
xor
mov
lea
into
out
jecxz
icebp
mov
inc
loopne
int3
sbbl
scas
subb
pop
adc
jmp
mov
in
loope
mov
or
test
movsb
push
jb
inc
fidivs
sahf
jbe
dec
push
jb
aad
sarl
fisubl
fidivl
jbe
shlb
lahf
pop
lahf
mov
sahf
mov
subl
scas
inc
addr16
mov
adc
add
popa
jo
inc
imul
imul
and
jno
jbe
add
inc
inc
js
arpl
jae
push
push
jo
imul
pop
repnz
xor
out
std
incl
add
fs
je
inc
push
dec
je
insl
dec
imul
arpl
jno
jb
add
add
jbe
push
inc
inc
imul
je
outsl
outsb
and
jno
jbe
pop
inc
adc
xchg
jmp
sub
mov
aam
mov
push
es
mov
aam
pop
xchg
lods
lods
xchg
mov
and
lock
or
mov
mov
leave
roll
mov
fisubs
nop
cld
adc
push
int3
mov
adc
fnstenv
and
in
add
lods
ret
pop
ss
scas
inc
mov
sbb
shrl
pmaxsw
sub
in
cmp
jno
cmp
push
popf
notl
into
mov
add
inc
xchg
scas
andb
dec
sti
lahf
adc
shrl
pop
jno
out
pusha
adc
arpl
pop
ja
imul
nop
add
test
stos
addl
movsl
xchg
loop
cmp
cmc
dec
mov
int
or
mov
mov
in
cmp
and
bound
sbb
inc
xchg
xor
xchg
js
cld
pop
mov
dec
or
test
push
negl
mov
dec
fs
mov
mov
sub
dec
lods
in
xor
lahf
sbb
xor
gs
js
mov
xchg
mov
add
xor
add
imul
andnps
adc
or
sahf
jne
xor
pop
pop
bound
leave
outsl
xlat
das
ljmp
cmp
std
int3
in
fs
jmp
jmp
lods
push
jno
mov
cwtl
repz
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
push
outsl
insb
jae
jno
jb
add
iret
mov
bsf
btr
bts
add
add
bsf
neg
cmp
mov
shrd
bts
movsbl
add
not
bswap
dec
pushf
movl
adc
mov
stc
jmp
add
inc
push
outsb
insl
jo
imul
imul
and
jno
jbe
lock
xchg
cmp
aas
adc
cmp
pop
jne
dec
cmp
dec
loope
inc
test
mov
les
xchg
rcll
roll
daa
dec
into
clc
cmp
cli
sbb
push
xor
xor
sbb
shrb
movsb
nop
outsl
loopne
shll
push
ret
pop
addr16
or
nopl
xchg
jne
stos
mov
jnp
ljmp
ja
add
shrl
shrb
dec
mov
mov
gs
scas
scas
adc
dec
push
xor
xor
js
ret
aam
hlt
pushf
add
pop
add
js
dec
loopne
and
pop
push
dec
enter
pop
dec
push
push
sub
lds
nop
xor
push
lock
sbb
pusha
sbb
subb
mov
mov
xlat
fnstcw
loop
rorl
popa
int
dec
sub
out
in
add
outsl
push
les
rolb
sahf
jg
mov
fdivl
and
scas
inc
fwait
jae
inc
inc
adc
int
or
cmpsl
movsl
popf
fidivrl
out
sbb
dec
adc
cli
ret
lret
addr16
lods
jg
repz
dec
aad
popa
imul
push
mov
adc
mov
mov
xchg
aas
out
or
cmp
push
sbb
ja
xor
jnp
mov
push
imul
insl
push
push
dec
sub
lds
mov
nop
cmp
fnstcw
or
bound
push
xchg
lret
mov
out
sub
pop
enter
loopne
cmp
sbb
nop
pop
js
test
mov
in
mov
adc
mov
inc
sub
in
subb
stos
ret
pop
rcr
dec
and
js
xor
mov
cwtl
sbb
adc
sbb
inc
enter
push
cwtl
dec
mov
lock
andnps
gs
mov
or
outsb
fbld
cmp
testb
inc
cmc
inc
movsl
js
mov
push
sar
or
andl
cmc
push
pop
sbb
xchg
aam
insb
adc
in
or
inc
cmp
mov
jne
mov
aam
test
nop
pop
xor
pusha
inc
in
mov
out
and
jnp
sbb
pop
adc
decb
adc
push
mov
push
cli
gs
sbb
cmc
lret
jbe
and
rcrl
pop
mov
rorb
shrb
sub
lcall
aad
sub
dec
out
adc
or
sbb
cs
dec
loopne
imul
mov
add
inc
inc
outsl
insl
arpl
jae
imul
imul
and
jno
jbe
add
inc
dec
insl
push
jo
jb
insl
inc
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
gs
je
insl
dec
inc
and
jno
jbe
add
inc
pop
insb
imul
inc
imul
imul
and
jno
jbe
sub
adc
inc
bound
and
xor
mov
inc
icebp
mov
out
cmp
lcall
cmp
loope
xorb
es
clc
mov
cmp
fadds
arpl
cmpsl
aad
add
scas
iret
and
cmp
idivl
mov
dec
loopne
mov
xor
and
rol
test
pop
cltd
aam
dec
jle
jnp
sbb
mov
or
dec
pushl
and
jge
pop
mov
loopne
sti
and
xchg
mov
test
mov
xchg
ss
shlb
mov
pop
out
cmpsl
push
pop
and
pop
sub
orb
out
cmp
fs
push
cmpsl
pop
push
scas
cmp
fs
mov
jp
jnp
mov
or
ljmp
xchg
aam
or
lods
das
into
and
dec
sbb
sub
push
mov
loopne
sbb
inc
push
push
cmc
std
lret
and
mov
pop
sbb
xchg
mov
add
mov
inc
jmp
push
rorl
aas
mov
fsts
fsubs
xchg
mov
aad
scas
add
in
sbb
into
xor
inc
push
xor
fs
roll
lods
cmp
sub
mov
std
fnstcw
push
mov
cld
fucomip
jl
cs
sbb
rolb
add
arpl
je
je
insl
gs
imul
imul
and
jno
jbe
xor
ret
inc
test
addl
push
xchg
push
inc
loopne
hlt
sarl
add
enter
jmp
dec
stos
dec
out
scas
or
or
retw
loop
cmpb
test
mov
leave
and
inc
push
cwtl
sub
pop
add
pop
add
hlt
push
loope
outsb
mov
jb
test
ret
pop
push
nop
xor
sbb
inc
out
or
into
lds
cs
jmp
push
loope
lds
movsl
fdivrs
rcl
mov
add
cld
in
inc
fdivl
dec
push
mov
inc
sbb
mov
inc
icebp
push
fsub
inc
movsb
sahf
test
lahf
pop
into
rol
scas
add
adc
aam
sahf
notb
jae
lock
jmp
push
mov
adc
scas
push
sub
cmpsb
mov
hlt
pop
loopne
sub
push
loope
push
pop
mov
mov
pop
jne
xor
xor
les
test
xor
pop
xor
in
data16
adc
xor
xor
sbb
mov
mov
mov
add
outsl
add
loop
es
pop
cli
es
mov
bound
adc
int3
rol
pushf
loope
inc
stos
pop
mov
mov
sbb
push
xor
ljmp
add
gs
outsl
jb
imul
jo
imul
popa
insb
imul
and
jno
jbe
add
inc
dec
insl
push
popa
jo
insl
imul
insb
imul
and
jno
jbe
add
inc
push
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
popa
jbe
push
jb
gs
popa
je
and
jno
jo
ss
js
insb
inc
push
fs
jb
gs
imul
dec
jbe
js
jb
fs
inc
imul
je
outsl
outsb
and
jno
jbe
stc
repnz
pushf
lea
jne
inc
bts
rol
mov
bts
call
add
inc
dec
insl
push
insl
popa
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
imul
je
popa
insb
imul
and
jno
jbe
ljmp
lods
xchg
xchg
iret
mulb
incl
data16
sbb
xor
popf
jge
sti
shlb
aam
or
mov
lea
leave
jge
roll
push
lock
sarb
xor
xor
mov
pop
mov
mov
mov
repnz
sbb
ret
pop
enter
mov
inc
add
add
inc
mov
jbe
inc
pop
leave
pop
mov
cmpsl
mov
mov
sub
sub
repz
mov
aas
mov
jo
mov
popa
enter
push
repz
push
cmp
dec
adc
mov
enter
jg
mov
mov
sarl
and
inc
out
jae
sti
pop
lock
mov
clc
sbb
mov
popf
arpl
outsl
cmp
and
mov
adc
mov
pop
mov
xchg
xchg
mov
sub
xchg
jp
mov
sti
dec
add
imul
fsts
or
xchg
adc
rcl
jp
insb
inc
inc
cmp
adc
lock
in
or
insl
jge
movzbl
in
cld
addr16
and
xchg
addr16
sar
in
jg
test
dec
xor
fdivl
out
sub
loop
in
fnsave
xchg
sti
inc
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
inc
jb
outsb
addr16
outsl
inc
jb
outsb
je
jno
jb
add
add
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
jo
popa
je
push
imul
jno
jo
aaa
push
jns
je
insl
inc
push
dec
gs
inc
insb
popa
jae
outsl
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
arpl
sbb
mov
mov
out
cmp
or
and
xlat
add
shr
gs
dec
push
inc
xchg
sti
outsb
or
lock
aam
mov
cmp
movsb
iret
pop
arpl
addr16
aaa
adc
push
jle
fdivp
sub
mov
stos
cmp
pusha
in
pop
push
cmp
jp
inc
push
in
mov
mov
sub
scas
add
mov
aaa
shll
insl
fs
jns
pop
pusha
in
pop
aad
sub
push
movsb
or
dec
push
imul
bound
in
pop
dec
xor
add
lock
mov
into
dec
int
adc
bound
or
pop
shll
and
shll
aad
ss
and
in
testb
push
mov
sbb
cmpsb
mov
cld
clc
fsubl
add
push
mov
pushf
std
adc
test
sbb
sar
or
fsubl
jnp
add
push
jae
cmp
sbb
mov
shrl
push
inc
push
movsb
or
stos
cmp
lods
ret
sbb
out
dec
mov
decb
testl
ficoml
xchg
mov
sbb
sbb
cld
adc
inc
stc
inc
sbb
stos
sub
clc
xchg
mov
test
mov
flds
mov
jg,pt
stos
xchg
mov
inc
dec
or
clc
scas
push
jb
loopne
test
imul
es
pop
sbb
and
adc
pusha
pusha
pushf
push
lea
jmp
add
inc
inc
js
gs
outsl
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
imul
popa
insb
imul
and
jno
jbe
mov
add
inc
or
sub
imul
ljmp
outsl
jp
out
inc
imul
andl
lcall
insl
ja
repz
mov
add
jo
rcrl
mov
dec
sub
mov
dec
cltd
sbb
cli
cmp
cmp
and
push
cld
xchg
popa
xchg
cmp
inc
movsb
cmp
pop
pop
or
icebp
pop
aaa
jbe
jecxz
sti
jg
lahf
in
add
fdivr
xlat
cmp
jns
jb
faddl
stc
push
push
leave
fwait
lock
inc
outsl
outsb
je
outsl
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
jo
imul
je
jb
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
and
jo
xor
push
jns
je
insl
inc
push
je
imul
pushl
pushf
push
lea
jmp
lea
jne
rcl
sar
mov
call
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
jb
dec
je
insl
and
jno
jo
xor
popa
je
inc
push
dec
je
insl
add
add
jbe
outsl
insl
jo
outsb
outsb
je
inc
imul
je
outsl
outsb
and
jno
jbe
fiadds
xor
or
fmull
into
cmpsl
xor
adc
arpl
ret
jno
sbb
push
mov
adc
or
lcall
shl
das
call
ret
mov
es
rclb
add
sbb
js
xor
sahf
ret
pop
sbb
xchg
sub
inc
mov
jne
xor
xchg
shr
jg
shll
loope
insl
jne
cmpsl
cmp
push
mov
std
push
cmp
test
ret
outsl
push
mov
jno
mov
add
pop
mov
cmc
sbb
inc
sub
mov
mov
push
divl
cmc
mov
push
and
outsb
add
and
push
dec
test
sub
sbb
imul
add
push
call
aas
sub
nop
insl
jne
ss
jl
imul
loop
loop
cli
std
or
mov
mov
push
or
cld
rcr
xor
mov
push
cmp
int3
leave
std
ret
scas
mov
pop
jo
out
ffreep
std
push
push
and
in
mov
inc
and
push
lock
cmpsb
iret
lret
push
sarb
icebp
je
mov
adc
and
jecxz
sub
jge
push
dec
in
mov
inc
inc
outsl
insl
arpl
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
insb
popa
jae
gs
push
inc
outsl
insl
jo
outsb
outsb
je
push
popa
gs
popa
insb
insb
inc
js
gs
imul
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
add
lea
sbb
cltd
repnz
decl
jb
imulb
stos
add
pop
iret
push
pop
in
or
insl
int
mov
out
xchg
push
push
inc
and
jmp
inc
jmp
xlat
lds
imul
dec
sub
jae
jo
push
pushf
adc
xchg
pop
in
pop
xor
pop
pushf
pop
mov
lcall
inc
pop
mov
jge
lret
popa
mov
insb
push
sub
sub
mov
mov
cmp
cld
fdivl
mov
and
push
ja
insb
inc
outsl
push
outsb
fcomps
xor
cmp
sub
mov
scas
adc
push
scas
les
xor
sub
jb
in
sub
dec
repnz
lret
push
and
aaa
pusha
or
or
mov
sbb
jbe
shlb
mov
pop
jb
in
sub
xor
dec
lea
scas
mov
dec
addr16
sub
sub
js
int3
sub
mov
xchg
inc
add
bound
mov
cs
lcall
mov
mov
cli
sbb
stos
sub
mov
imull
jle
jg
aaa
test
xchg
test
aaa
fdiv
inc
jb
arpl
xchg
xchg
cli
pop
ljmp
shll
pop
or
outsb
adc
sbb
dec
xor
movw
jmp
add
inc
inc
js
popa
je
arpl
jae
jae
imul
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
outsw
jb
inc
gs
jb
arpl
outsb
and
jno
jbe
add
inc
dec
jbe
js
outsl
insl
arpl
jae
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
ja
imul
imul
inc
push
jns
imul
outsb
popa
insb
imul
and
jno
jbe
out
lret
inc
fidivl
pop
cmp
jl
cmp
loopne
rcrl
sub
xchg
xchg
push
in
dec
test
xor
inc
mov
add
gs
fbld
xor
cmp
popf
or
inc
lahf
je
xchg
fnstcw
mov
or
mov
xchg
testl
lock
je
cmp
notl
shll
enter
cld
pusha
inc
in
and
and
and
arpl
sub
push
cmp
cmovs
stos
js
subl
push
cmc
aad
jne
sub
imul
sub
push
imul
sarb
cwtl
jb
incb
lea
js
jbe
cmc
cld
sbb
iret
ljmp
pop
insl
hlt
lret
fnstenv
cwtl
xlat
sbb
jge
mov
xchg
mov
frstor
movq
push
sarl
cmp
ljmp
jnp
sub
jno
addb
ljmp
cmp
cmp
adc
out
test
in
adc
gs
push
ljmp
jb
xchg
cmpsb
arpl
test
ljmp
jbe
incb
das
sub
arpl
xchg
subl
lock
stc
cld
sbb
sbb
pop
jmp
jge
mov
in
inc
push
lahf
movsl
pop
pop
dec
or
mov
ja
mov
sbb
dec
enter
shll
rol
mov
add
jbe
and
out
loopne
ret
out
andl
mov
push
ljmp
sub
divb
adc
sbb
ret
pop
sbb
dec
cmp
mov
push
mov
adc
stos
add
sub
cmp
adc
inc
cmpsl
sub
div
test
add
inc
out
cmpsb
dec
movsb
mov
pop
aam
clc
push
push
imull
mov
loopne
ror
pop
int
add
shll
jae
mov
inc
mov
xchg
sub
out
xchg
popa
dec
jle
mov
mov
jge
cmp
jg
and
sub
cmc
or
in
jae
sbb
int3
es
xor
test
test
fdivs
pop
jle
cmp
aas
mov
out
xor
iret
inc
jg
mull
add
fnstenv
mov
or
outsl
cmp
mov
out
mov
jb
out
mov
push
xor
inc
movsl
cmp
out
rcrl
shll
outsb
stos
mov
lods
ret
jmp
jp
aad
outsb
vsqrtss
pop
cli
lcall
pop
fisubl
mov
mov
mov
stc
stc
stc
pushf
repnz
pusha
lea
jne
movzbl
push
mov
movb
setns
not
mov
call
cmpsb
lds
sti
sbb
xlat
xor
mov
cld
inc
lods
push
push
pop
sub
js
dec
movsb
or
pop
xor
sar
aam
push
mov
cmp
jb
mov
xor
mov
rcr
cld
pop
adc
pop
les
dec
pusha
dec
sub
push
test
xor
mov
jl
iret
xor
cmpsl
pop
and
inc
xchg
ret
pop
test
inc
sti
sbb
xchg
mov
into
and
push
int
cltd
mov
dec
cmp
sub
xchg
mov
adc
push
gs
int
or
decb
stc
pop
lea
cmc
and
pop
jno
or
call
out
lock
or
cld
clc
ret
cmpsb
shr
popf
data16
aam
mov
jp
sub
mov
dec
sub
lods
psadbw
iret
cmp
sub
inc
push
mov
insl
cmp
negl
js
nop
xchg
xor
hlt
into
imul
sub
pop
aad
xor
mov
add
xchg
cli
push
or
in
jns
outsb
dec
and
jg
fiaddl
insl
lods
adc
pop
push
sub
pop
jbe
mov
lock
xor
loopne
sub
lahf
pushf
frstor
mov
sub
mov
cmp
push
pop
jle
mov
xor
aas
ljmp
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
jne
outsl
push
imul
outsl
add
add
jp
jb
data16
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
gs
jne
data16
outsb
addr16
and
jno
jbe
jmp
push
push
pushl
movl
pushf
lea
jmp
movl
jmp
cwtl
repnz
stc
sbb
repz
sbb
xlat
mov
xor
mov
imul
mov
fcmovnu
xor
icebp
push
sub
insb
bound
rorl
roll
and
fiadds
arpl
mov
insb
ret
and
lret
mov
lods
pop
mov
jnp
add
in
xchg
add
ret
sub
in
cmp
stc
sbb
shlb
dec
lret
std
dec
lods
jnp
lcall
inc
or
lods
inc
mov
inc
and
pop
xchg
fmuls
fs
and
or
rolb
popa
mov
lea
aaa
mov
andl
out
inc
xchg
das
in
call
pop
xor
test
mov
jecxz
test
mov
lret
mov
push
xor
push
in
dec
lods
add
adc
fwait
push
pop
jnp
sbb
xor
jae
jl
negl
sub
jbe
ret
push
cmp
mov
push
adc
mov
add
mov
or
jne
das
lahf
jl
add
repz
push
stc
test
xchg
lea
std
cmp
daa
mov
inc
aaa
in
adc
call
xchg
adc
cmp
dec
cmpsl
int3
js
mov
ss
pop
mov
cmp
sub
push
scas
ret
clc
add
inc
push
jns
jne
imul
addr16
imul
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
add
data16
arpl
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
gs
gs
je
insl
dec
imul
jbe
add
inc
push
jns
je
insl
inc
push
dec
bound
arpl
outsw
jb
inc
gs
jb
arpl
outsb
and
jno
jbe
add
inc
inc
js
gs
jb
inc
imul
je
outsl
outsb
and
jno
jbe
inc
and
cltd
into
movsl
test
xchg
push
sbb
jle
fwait
xor
mov
jmp
test
scas
inc
test
or
or
jo
xchg
mov
out
roll
jp
add
inc
xchg
mov
ret
lods
iret
jge
sub
and
test
lods
cmp
into
jp
cltd
popa
cmc
int
push
aaa
xchg
icebp
cld
out
ret
pop
stos
add
sub
aam
sbb
sub
inc
push
adc
jo
jecxz
into
jp
aas
cmp
mov
je
clc
pop
iret
in
cmp
ja
add
xor
scas
lahf
pop
cmp
sarb
and
pop
enter
imul
mov
arpl
push
adc
daa
adc
imul
leave
jo
imul
leave
jmp
out
xchg
mov
add
mov
shrl
ret
sbb
fdiv
fwait
mov
mov
hlt
loope
pop
int3
test
inc
popf
stos
sti
into
jp
test
dec
mov
mov
sbb
pop
clc
mov
mov
sub
mov
mov
inc
call
cmp
adc
push
ja
nop
ljmp
adc
xchg
insl
jg
pop
and
xchg
mov
gs
shl
pop
mov
adc
and
mull
pop
mov
fidivrl
cmc
adc
mov
sahf
lcall
mov
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
imul
jno
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
xor
insb
imul
dec
dec
inc
outsl
arpl
outsb
je
xor
push
jns
je
insl
inc
and
push
gs
popa
arpl
je
ss
insl
insb
imul
dec
dec
dec
outsl
fs
mov
xor
inc
xchg
mov
fincstp
fcomps
aaa
orl
cmpb
or
inc
into
mov
mov
sbb
adc
sarl
movsl
jp
test
inc
mov
scas
inc
mov
mov
pusha
aad
sbb
jl
decl
jno
dec
mov
movsb
movsl
jne
sbb
xchg
ja
nop
ret
pop
lods
and
icebp
repz
out
cmp
subl
dec
sub
sub
test
and
loop
scas
and
sub
add
push
pop
in
adc
jp
dec
sub
mov
lcall
jbe
imul
sarb
xchg
cld
lea
fisttps
out
ficoml
pop
lods
jo
outsl
adc
jae
jg
std
adc
pop
aas
pop
inc
mov
xor
lret
sbb
jl
test
add
pushw
sbb
outsl
call
cmp
mov
fcomi
push
addr16
adc
out
call
call
mov
outsb
into
aas
loope
imul
leave
push
pop
pop
cmc
jne
jp
shll
sub
mov
sub
add
xor
cmp
cmp
sbbl
push
lret
ficompl
shrb
inc
or
loopne
dec
in
cmp
lods
pop
scas
or
sub
repz
lret
and
inc
mov
movsb
dec
aad
je
fisubrl
pusha
sbb
pop
gs
lods
or
sbb
xchg
clc
push
in
repz
lock
dec
rcrb
in
gs
repz
push
enter
cltd
and
pop
cmc
jl
imul
push
adc
aad
fwait
xor
cmpsl
sbb
adc
or
jns
xchg
xchg
stos
xchg
sarl
jbe
pop
fs
sub
enter
xorl
shll
mov
fnstsw
jg
ds
lock
rol
je
test
sbb
hlt
sbb
enter
mov
iret
idivl
imul
push
mov
jge
mov
push
pop
or
xchg
mov
shl
iret
popa
loop
push
add
mov
loopne
ja
clc
pop
mov
sarl
rclb
cmpb
es
ss
jb
ret
pop
loop
pop
mov
sbb
scas
jne
popa
fcmovnu
and
inc
inc
in
pop
jo
inc
lret
mov
idivb
les
and
dec
sub
push
and
pop
adc
add
push
dec
es
jnp
ret
fisubs
push
xchg
jg
add
adcl
shll
push
sub
lods
leave
ljmp
loop
stos
cwtl
ss
ljmp
dec
adc
inc
lret
jmp
nop
cmp
push
mov
in
jnp
mov
mulb
xchg
push
mov
pop
sub
loope
pop
add
lock
mov
test
out
push
sub
outsb
movsl
push
test
and
movsb
movsb
inc
jg
dec
ret
in
mov
jl
insl
jmp
ss
jae
aaa
orl
mov
and
or
nop
mov
cwtl
ss
ss
iret
cmc
pushf
out
add
inc
push
jp
jb
data16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
gs
outsl
push
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
insl
popa
imul
outsb
imul
je
outsl
outsb
and
jno
jbe
inc
adc
sbb
pop
sti
fwait
es
shll
cmc
addb
xor
les
ds
pop
or
cli
sarl
roll
add
fisttps
loope
mov
es
scas
or
cltd
repnz
cs
out
and
sub
mov
jecxz
and
pop
mov
ret
pop
jp
sub
sbb
stos
pop
mulps
dec
jbe
and
dec
out
pop
insl
dec
sub
cmp
add
dec
jecxz
insl
dec
daa
add
inc
movsl
mov
xlat
xlat
dec
test
clc
loop
aam
or
subl
pop
cmpsl
mov
cmpsb
jl
cmc
enter
mov
dec
cwtl
lcall
jbe
mov
aaa
adc
pushw
gs
and
lods
leave
and
dec
jae
cmpsl
xchg
rorb
cwtl
lock
sub
dec
je
mov
or
jnp
dec
out
test
mov
cmp
xchg
cmpb
cli
fdivs
aad
or
mov
sbb
dec
cmc
and
cmp
add
mov
es
mov
sbb
movsb
cmpl
cmovs
in
out
mov
ljmp
fldl
sbb
cmpsl
negl
addr16
lods
jge
jae
mov
mov
insb
ret
insb
enter
dec
outsl
sbb
out
iret
aaa
shrl
add
inc
push
data16
arpl
jb
inc
push
inc
jne
arpl
jb
inc
inc
jb
popa
je
dec
bound
and
jno
jbe
add
inc
dec
insl
push
arpl
outsb
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
jae
insl
jo
gs
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
ja
imul
je
popa
insb
imul
and
jno
jbe
jno
inc
out
or
push
aam
arpl
ljmp
or
or
cmp
test
popf
adc
xor
adc
arpl
sarl
out
fwait
pop
pushf
mov
push
rclb
int
mov
or
fildll
and
cmp
std
inc
cmp
sbb
add
adc
cli
pop
mov
pop
cmp
cli
inc
sub
inc
pop
mov
jno
aaa
push
cmc
xchg
jae
hlt
inc
movsb
mov
addr16
jns
mov
aad
jle
adc
sbb
add
or
pop
clc
cwtl
leave
pop
mov
mov
jns
and
nop
mov
js
fcomi
leave
xchg
xor
cmpsl
out
xor
and
sti
bound
outsb
jne
jp
sub
loope
cs
pop
jp
mov
mov
mov
mov
ret
lods
inc
push
jmp
in
add
push
mov
push
jle
fistl
sbb
adc
sbb
outsb
xor
sbb
jecxz
sti
cld
pop
fwait
clc
iret
fs
sbb
add
scas
mov
or
xchg
dec
imul
xchg
popf
cmp
sub
das
xchg
stos
sbbl
pop
pop
push
mov
xchg
push
dec
cmc
clc
arpl
add
jo
mov
cmp
hlt
sbb
adcl
movsl
jmp
sbb
loopne
out
mov
adc
cs
ljmp
in
xchg
cwtl
cli
pushf
jne
mov
fs
or
lcall
roll
pop
jbe
arpl
push
adc
pop
mov
mov
and
in
sahf
pop
shll
xor
in
xchg
mov
cli
iret
ja
ret
jmp
inc
and
sar
sbb
mov
cmpsl
pop
sub
int3
shlb
fidivs
xor
cmp
or
pop
jmp
push
or
xchg
mov
xchg
fbld
enter
mov
pop
mov
lods
call
mov
lcall
lret
shrb
add
rcrb
mov
and
pop
mov
mov
ret
lods
push
repz
imull
in
sbb
jmp
lods
sub
jbe
pop
gs
mov
shlb
pop
jne
clc
push
mov
mov
gs
pusha
ja
sbb
jmp
fwait
shrb
jae
jne
sahf
mov
xchg
add
pop
imul
sub
xorb
inc
xchg
shrb
and
sbb
sub
xchg
mov
push
mov
push
scas
add
sub
sub
sub
and
inc
bt
mov
clc
bt
jmp
btr
shrd
seto
mov
bt
bt
clc
stc
xor
stc
repnz
push
jmp
add
inc
dec
insl
push
gs
outsb
outsl
bound
inc
imul
je
outsl
outsb
and
jno
jbe
cmp
push
lea
jbe
shl
shl
dec
sub
sub
sar
pusha
mov
adc
mov
btc
add
bts
pop
sub
shr
clc
shld
or
jmp
cmp
jmp
jmp
pusha
movl
jmp
call
xchg
orl
mov
xor
das
mov
aas
xlat
stos
test
in
cmp
push
leave
jmp
mov
push
or
ja
cmp
mov
mov
inc
push
push
shll
inc
loop
mov
push
hlt
push
mov
pop
imul
mov
mov
jnp
out
and
shlb
or
sbb
xchg
xor
in
and
and
stos
xchg
arpl
mov
cli
add
out
push
mov
xchg
cli
lods
and
call
xlat
inc
insb
outsb
test
fsubl
push
scas
push
push
daa
adc
sub
mov
fdivs
sbb
add
dec
dec
jb
xchg
ds
movsl
or
dec
out
or
jbe
cmp
fs
mov
mov
cmpsl
inc
test
mov
fstps
jle
popa
in
mov
pop
mov
cltd
lcall
jno
cs
popf
mov
fimuls
fs
sarl
mov
pop
mov
sub
pop
icebp
and
mov
inc
loop
fiaddl
fsubs
mov
icebp
pop
addr16
ds
popf
movsb
add
sbb
mov
fdivs
sbb
adc
in
mov
jno
push
repnz
dec
push
cmp
inc
movsl
lcall
icebp
xchg
aas
pop
or
lret
mov
add
inc
inc
jb
jo
imul
popa
insb
imul
and
jno
jbe
add
inc
push
je
jne
imul
insb
imul
and
jno
jbe
pusha
lea
ja
call
add
inc
dec
popa
jb
imul
outsb
popa
insb
imul
and
jno
jbe
add
inc
inc
js
imul
je
jae
inc
imul
je
outsl
outsb
and
jno
jbe
movl
pushf
pushf
lea
jmp
add
inc
push
fs
je
inc
push
inc
jne
arpl
gs
gs
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
inc
js
jns
gs
imul
inc
imul
imul
and
jno
jbe
add
inc
dec
arpl
imul
outsb
imul
je
popa
insb
imul
and
jno
jbe
add
inc
push
jns
je
insl
inc
inc
push
push
je
inc
insb
jb
jno
jb
jbe
add
inc
dec
jbe
js
je
arpl
jae
imul
imul
and
jno
jbe
movb
push
jmp
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
imul
jno
jb
aaa
inc
insb
popa
jae
gs
push
inc
imul
add
inc
inc
imul
imul
imul
and
jno
jbe
add
inc
push
jne
addr16
jne
bound
inc
imul
imul
and
jno
jbe
add
inc
push
je
arpl
jae
push
inc
push
outsl
js
add
add
jbe
jo
outsl
jb
inc
imul
imul
and
jno
jbe
imul
gs
xor
cs
insb
add
inc
pop
mov
testb
sbb
xchg
mov
xchg
pop
ljmp
mov
push
cmc
pop
mov
scas
sbb
or
arpl
pop
mov
rol
sti
xor
test
scas
rcrl
sarb
cmpl
adc
xor
mov
add
pop
jg
mov
ret
in
inc
sarl
lahf
mov
shll
andb
jle
sub
fbstp
loopne
or
repz
mov
cmp
push
pop
sbb
adc
inc
xor
ds
popa
or
arpl
cltd
aaa
fisubl
pop
inc
aam
pushf
outsw
inc
pop
push
xchg
push
in
lret
jle
mov
mov
stos
push
mov
into
stos
leave
sub
movsb
mov
in
xlat
outsl
out
xor
mov
cld
in
inc
or
inc
loopne
ljmp
xor
hlt
mov
lret
daa
sbb
add
fs
out
pusha
lea
ficoms
test
imul
les
iret
fidivl
test
inc
fs
jl
bound
dec
fdivrs
jbe
js
mov
sbb
cltd
sti
cmp
lret
bound
addr16
ss
jno
sbb
add
aam
xor
add
pop
out
loopne
mov
fnstcw
adc
push
and
insb
out
pop
pop
jbe
cmpsb
adc
fs
jae
rcl
lea
mov
bsr
xor
mov
jmp
add
inc
inc
js
imul
gs
fs
jo
jae
je
jb
imul
outsb
popa
insb
imul
and
jno
jbe
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
inc
dec
jbe
popa
je
jae
jne
arpl
outsb
je
inc
imul
imul
and
jno
jbe
add
inc
inc
jb
jo
imul
je
popa
insb
imul
and
jno
jbe
add
inc
dec
insl
popa
imul
xor
xor
inc
imul
imul
and
jno
jbe
add
inc
dec
jbe
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
jbe
outsl
insl
jo
outsb
outsb
je
popa
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
popa
jbe
push
je
gs
insl
and
jno
jo
cmp
popa
jae
gs
push
inc
imul
insl
imul
insl
imul
imul
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
push
inc
imul
gs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
jo
ss
fs
je
inc
push
inc
imul
je
outsl
add
mov
cld
pop
ss
jno
jns
cltd
mov
std
addr16
pop
in
sarl
cmp
fistpll
inc
mov
dec
sub
pop
mov
fiaddl
mov
test
add
sub
mov
pop
hlt
test
mov
in
hlt
les
inc
ljmp
popa
xchg
popa
repnz
jecxz
inc
pop
mov
test
ss
jae
or
or
dec
in
hlt
pop
sahf
sbb
xchg
jnp
xor
aas
xchg
inc
add
mov
pop
cmp
mov
cmc
inc
lret
add
pop
fsubs
cmpsl
xchg
shrb
in
cmpsl
pop
and
and
sub
or
mov
pop
mov
sbb
cmp
mov
xchg
insb
mov
in
sbb
mov
cmc
sbb
pushf
or
sub
out
add
hlt
pop
push
out
in
mov
andb
cmp
sti
inc
fisubrl
cmp
out
ror
adc
in
xchg
sbb
jbe
and
cmp
add
sub
jmp
push
pusha
in
mov
call
ss
cmp
aaa
lea
fst
lret
adc
mov
jp
xor
mov
pop
in
andl
add
mov
mov
sub
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
add
add
arpl
jae
jae
imul
imul
and
jno
jbe
jmp
inc
fwait
jb
xor
cmp
fsts
loope
or
mov
adc
je
push
enter
dec
outsb
mov
dec
or
mov
rol
inc
mov
push
mov
mov
repz
repz
inc
add
rcr
imul
push
mov
mov
xor
pop
pop
mov
mov
inc
or
enter
lea
sub
inc
add
rcr
imul
out
adc
push
cmc
cltd
jge
hlt
mov
into
iret
cmp
and
mov
jbe
jnp
ffreep
scas
xor
mov
sbb
or
mov
or
mov
mov
xchg
ds
aam
pop
xor
jl
adc
mov
stc
push
cmc
push
xor
clc
xor
pop
out
fdivrl
int3
sti
jae
rcr
imul
insl
les
inc
in
bound
fisubrs
lods
dec
xchg
pop
jne
push
sbb
pop
sub
pop
xor
and
pop
push
jl
or
mov
xchg
stos
fdivrs
arpl
ljmp
xor
pop
adc
cmpb
test
in
or
xchg
cmp
push
in
in
adc
lock
icebp
adc
mov
jecxz
jl
cmp
movl
pushf
push
push
lea
jmp
test
pushl
popl
call
stc
loopne
loopne
inc
mov
xlat
jl
je
std
lcall
stos
xor
mov
adc
jge
out
movsl
or
inc
or
nop
inc
imul
push
inc
outsb
xor
inc
pop
repz
jns
lret
repnz
sbb
shll
adc
xchg
clc
nop
or
mov
fxsave
out
jl
pop
lret
dec
jo
sbb
fdivl
cmp
adc
inc
sbb
shll
adc
xchg
loopne
pop
in
dec
insl
or
data16
nop
aam
sbb
stos
arpl
fs
push
ss
insb
test
je
daa
pop
cmp
inc
mov
cmp
insl
repnz
inc
pushf
push
aad
bound
and
and
mov
mov
sbb
nop
mov
fistps
inc
pop
sbb
aad
hlt
sbb
test
shll
sub
fnstcw
xchg
ja
jnp
in
rcr
jge
xchg
pop
outsl
popf
mov
mov
aas
xchg
lods
and
out
lahf
int3
xor
pop
and
mov
sbb
pusha
aaa
mov
mov
xchg
dec
ret
aad
jbe
or
xchg
subl
jno
jecxz
icebp
ret
fisubs
insl
repnz
push
jb
aad
push
fwait
pusha
and
nop
sti
adc
mov
mov
pushf
cmp
add
inc
push
jo
imul
je
jb
imul
imul
and
jno
jbe
dec
shl
fstpl
inc
cmp
aaa
sub
jp
cmpsb
xchg
mov
lods
in
sti
inc
shlb
pop
jnp
inc
dec
in
push
insb
pop
and
mov
pop
dec
or
int3
or
xchg
rol
cmp
mov
scas
mov
mov
pop
xor
iret
cmc
ror
sub
mov
leave
sub
jp
pop
mov
pop
ficomps
inc
scas
xchg
andl
cwtl
inc
cwtl
fldenv
dec
pusha
ret
in
add
push
cltd
sub
pop
stc
cltd
icebp
cmc
push
add
scas
ficompl
adc
bound
pop
in
popa
shr
fwait
xchg
pop
insb
xchg
push
lock
andl
cmp
sbb
mov
sub
xchg
lret
ja
or
xor
lock
pop
add
and
or
add
mov
adc
mov
fcmovnb
out
sbb
lods
subb
inc
fcoms
lea
push
jnp
jmp
dec
and
jne
jle
mov
jno
mov
lods
mov
push
cmp
mov
xchg
sbb
addr16
xchg
movsb
test
jmp
xchg
xor
dec
movsb
enter
fbstp
jo
jo
outsl
jne
add
pushf
loope
stos
inc
adc
mov
pop
sub
lock
dec
jmp
add
leave
mov
mov
xchg
mov
inc
js
mov
movntps
adc
cltd
mov
sub
ret
push
push
cmp
cli
adc
xor
inc
or
mov
add
outsb
cwtl
cltd
jbe
mov
insb
inc
iret
les
fisubrs
sbb
fsubrp
imul
jge
mov
sti
jp
ret
pop
adc
inc
push
mov
mov
xchg
jnp
xor
pop
lods
out
pop
xor
lods
mov
adc
pop
dec
stos
test
mov
dec
fisttps
lock
xchg
jp
out
jecxz
inc
stc
sbb
pushf
cmc
lret
ret
test
loop
shr
cmp
fstp
mov
inc
gs
std
adc
push
mov
int3
sbb
lea
fcompl
inc
push
jl
mov
pop
add
in
stos
xlat
lret
push
lods
out
push
mov
fsubrp
cmp
jg
testb
cmp
je
fcompl
mov
xor
dec
loop
or
mov
lfs
test
cmp
push
mov
rcl
imul
dec
fxtract
push
insl
jae
aas
mov
stos
jae
loop
pusha
pop
out
fst
fidivrl
vmovlps
cmp
sbb
push
mov
stc
mov
xor
pushf
push
push
pushl
ret
add
inc
push
fs
je
inc
push
inc
imul
je
imul
gs
jno
js
add
stc
repnz
jmp
add
inc
inc
js
imul
imul
imul
and
jno
jbe
mov
fistpl
inc
mov
xchg
mov
cmp
jg
dec
call
dec
cld
icebp
jmp
arpl
popa
sbb
and
out
lret
push
xchg
push
cmp
push
movb
fwait
mov
sbbl
scas
mov
sbb
pop
inc
ffree
insl
cmp
cmpsl
push
xor
adc
push
mov
sbb
cli
roll
cld
movsb
dec
jbe
cmpsl
test
inc
sub
shlb
int3
xchg
add
sbb
push
cmp
jp
inc
cwtl
mov
int
or
inc
or
aaa
pop
dec
cld
mov
sarb
xchg
inc
jg
rcrb
notb
sarl
mov
fstl
pop
mov
and
or
fwait
xlat
push
ja
pop
int3
xchg
jge
js
aas
ficompl
inc
sbb
shl
sbb
push
or
sti
ret
cmp
sbb
and
out
sub
scas
inc
andl
int
sub
rolb
add
mov
popf
cmpsl
jl
xor
lcall
mull
subb
sahf
or
cmp
ja
add
xchg
or
popf
cmp
mov
xor
sbb
push
es
addr16
rcr
sbb
movsb
dec
popa
in
leave
sbb
dec
push
inc
xchg
insl
jno
movsb
negb
fbld
lea
and
test
insl
mov
mov
push
mov
and
jne
testl
cmp
in
mov
repnz
test
cwtl
adc
out
into
jae
lret
push
fnsave
inc
dec
inc
std
insb
dec
jmp
pop
dec
pusha
inc
icebp
or
fnsave
fdivs
push
mov
lahf
addr16
test
push
jbe
mov
js
popf
pop
cs
jl
in
add
inc
js
imul
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
popa
jo
insl
imul
imul
imul
jbe
add
inc
dec
insl
push
push
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
arpl
gs
popa
insb
jne
and
jno
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
fs
je
inc
push
inc
imul
and
jae
push
pusha
call
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
imul
gs
jno
jo
xor
insb
inc
push
fs
jb
gs
imul
outsl
outsl
add
add
jne
jo
bound
inc
imul
imul
and
jno
jbe
jmp
add
inc
dec
jbe
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
arpl
imul
jno
jo
xor
popa
je
inc
push
dec
je
insl
jo
ss
fs
je
inc
push
inc
imul
je
outsl
add
add
arpl
jae
je
insb
jae
inc
imul
je
outsl
outsb
and
jno
jbe
gs
cmp
sbb
or
add
push
nop
mov
jmp
add
mov
dec
mov
sbbl
xchg
add
lret
mov
inc
cltd
or
and
addr16
mov
iret
lcall
xchg
outsl
sub
push
xchg
push
icebp
dec
es
inc
jp
mov
shlb
pop
ret
or
sbb
daa
lret
das
jmp
mov
loop
jg
xchg
outsl
sub
xchg
push
icebp
add
mov
cltd
cmp
insb
mov
push
dec
fdivr
fmuls
daa
sub
cmp
out
inc
out
push
subl
pop
out
bound
sti
hlt
xchg
cmp
lcall
mov
inc
jmp
movsl
jmp
dec
iret
mov
mov
add
sbb
add
add
mov
lret
popf
xchg
cmp
aam
xchg
outsl
sub
xchg
push
icebp
mov
inc
and
mov
test
jns
clc
sub
and
and
je
cmp
gs
int3
icebp
into
xchg
sti
dec
mov
sbb
pop
mov
inc
cmp
outsl
cmpb
popf
dec
lods
inc
cld
or
push
jb
sti
hlt
ja
call
mov
mov
push
cmp
repz
mov
dec
iret
cmp
and
inc
inc
js
outsl
insl
insl
outsl
outsb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
push
insb
jae
jb
gs
out
aam
inc
xchg
or
loope
or
pop
fcom
out
in
mov
fldcw
sub
pop
jo
cmp
sub
cmp
shll
jbe
daa
roll
xor
or
jb
mov
ret
sub
sbb
repz
out
ret
push
in
shrb
mov
xor
lret
pop
inc
jns
push
add
sbb
aad
push
add
loopne
cwtl
int
sbb
out
push
mov
inc
in
shrb
or
cld
cs
adc
cmp
aaa
push
sub
jae
cmpl
bound
out
xchg
mov
clc
add
xor
push
ja
loopne
movsl
inc
mov
in
jp
sarb
jo
gs
and
out
cmpsb
mov
lret
loop
loop
mov
fimull
push
inc
pop
lods
aad
inc
stc
push
jg
jle
fmuls
adc
add
out
iret
mov
inc
shr
shrb
cld
push
push
cld
push
mov
xchg
js
and
fistpl
js
fdiv
push
popf
cltd
imul
lds
cli
pushf
in
mov
mov
xlat
inc
or
frstor
das
inc
stos
adc
mov
lret
into
in
cmp
aad
scas
jnp
jo
sahf
enter
popa
dec
sbb
mov
or
dec
gs
xchg
cmpl
lods
add
dec
loopne
lods
mov
jecxz
pop
iret
push
fidivrl
adc
add
fs
je
inc
push
dec
je
insl
dec
imul
jbe
push
outsl
inc
imul
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
call
out
nop
aam
inc
outsl
cmp
adc
mov
ret
aas
dec
fcoml
out
push
jnp
or
out
jno
aad
xchg
aas
xchg
jno
mov
jge
or
outsl
std
pop
mov
sbb
sarb
js
daa
sub
xchg
mov
repz
push
jne
add
pop
call
adc
fadds
lahf
and
ret
pop
sub
add
lret
pop
rcrb
inc
and
in
test
jo
loope
or
mov
es
loopne
movsl
int3
loopne
das
test
jno
push
movsl
int3
inc
jecxz
inc
xor
fnstcw
imul
mov
mov
pop
dec
and
div
fwait
adc
add
jbe
cmp
in
xchg
xor
jo
subl
inc
imul
sub
xor
rcrl
inc
sbb
sbb
stos
push
jg
out
add
pop
add
out
adc
fs
scas
test
push
insl
into
call
in
les
pusha
pusha
lcall
rcrb
adc
test
insl
dec
jmp
es
jae
inc
push
les
aaa
pop
push
cld
xchg
jmp
push
scas
push
addr16
push
mov
push
jg
jbe
jne
sbb
sub
in
mov
sbb
and
dec
es
sub
pop
mov
mov
add
js
imul
outsb
popa
insb
imul
and
jno
jbe
mov
push
pushl
ret
movzwl
push
bswap
lea
push
pop
mov
push
push
pushf
lea
call
push
movb
movb
call
add
inc
push
jne
jae
fs
outsb
outsb
gs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
insb
arpl
inc
imul
imul
and
jno
jbe
add
inc
dec
insl
push
insl
popa
jb
gs
imul
imul
and
jno
jbe
sbb
sbb
outsb
lret
sub
sub
adc
push
pop
push
daa
dec
clc
xor
pop
sub
leave
xor
mov
mov
or
sbb
xchg
rol
lahf
jae
sub
sbb
cmpsl
dec
fchs
mov
pop
mov
je
sub
jl
in
lock
sbb
jp
jo
xor
inc
leave
insl
ret
pop
leave
andl
inc
cmpsb
or
sub
jecxz
loop
mov
arpl
pop
sub
jge
addb
or
nop
sub
test
add
jnp
shlb
xchg
mov
gs
mov
mov
or
mov
cli
xor
fs
dec
cs
sahf
fsts
xchg
sbb
push
and
mov
out
icebp
ror
sbb
jmp
movsl
int
int3
arpl
out
out
enter
xchg
inc
pop
sub
jge
push
inc
das
mov
adc
outsb
mov
dec
jg
pop
inc
out
bound
mov
mov
shll
sub
add
pop
lods
mov
xor
cmp
xchg
adc
insb
in
rol
push
cmpsl
sbb
lods
or
pop
jg
pop
dec
dec
mov
mov
adc
shrb
push
jg
mov
jl
clc
push
mov
mov
fildll
jbe
insb
aaa
xor
bound
add
add
sti
movb
movb
pushl
ret
jecxz
ror
inc
int3
popa
inc
fs
dec
test
fs
mov
lret
pop
and
cwtl
mov
jo
les
aad
xchg
stos
scas
xchg
cmp
inc
ljmp
shl
push
sub
loop
or
fistpll
jl
or
xor
sarb
cmc
cs
mov
jg
leave
daa
aam
xlat
std
xchg
cmp
push
fsubrs
pop
push
aaa
xchg
dec
sbb
pop
cmp
js
fmuls
js
cmc
jnp
mov
add
sahf
out
enter
in
imul
insb
bound
sub
jo
std
filds
xor
aas
popl
aas
push
popa
or
mov
les
icebp
insl
cmp
xchg
subb
orl
je
inc
fs
loop
repz
jg
jb
jno
cmp
xchg
lods
mov
adc
inc
repz
fcmove
sbb
arpl
sub
dec
add
mov
cwtl
cmc
add
cmp
out
mov
dec
mov
xor
sbb
push
push
jg
sbb
addb
adc
fs
push
dec
jmp
xchg
jnp
mov
dec
cld
adc
subb
cs
fmuls
std
mov
jecxz
repz
cmp
sti
aad
into
sahf
ljmp
shlb
out
pop
xchg
mov
or
iret
stos
andl
pop
xor
jmp
adc
inc
cmpsl
and
add
pop
xchg
lock
and
or
sbb
stos
incl
and
imul
sub
shll
pop
inc
xor
mov
addr16
movsl
or
and
lods
sbb
adc
dec
pusha
std
adc
inc
pop
dec
pop
int3
push
ss
adc
data16
pop
xchg
aam
dec
jns
ror
sbb
sub
pop
sbb
fwait
icebp
and
adc
push
sbb
arpl
dec
loope
imul
xor
mov
sbb
xlat
jae
dec
or
jecxz
cwtl
mov
sbb
movsl
xchg
in
mov
and
add
movsb
pushf
ret
popf
inc
xchg
sti
mov
adcl
ret
sti
adc
pop
jle
jae
cmp
pushf
rorl
push
or
es
fildll
ret
sbb
xchg
jae
lods
dec
push
push
sub
dec
pusha
sub
dec
pop
stc
loope
nop
mov
mov
movsl
inc
jo
test
adc
xchg
sbb
icebp
push
jo
jge
std
lea
out
mov
fistps
push
mov
and
pop
mov
arpl
sub
fs
lods
sbb
ja
pusha
inc
addl
enter
cmp
cmpsl
fnstenv
dec
in
in
inc
scas
xchg
pop
mov
or
mov
pop
xor
add
jne
imul
outsb
inc
imul
jno
jb
xor
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
jae
gs
inc
inc
outsb
jae
push
je
imul
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
push
gs
imul
outsw
and
jno
js
aaa
push
jns
je
insl
inc
inc
outsb
jae
push
je
imul
push
fs
je
inc
push
dec
je
insl
dec
imul
inc
insb
outsl
arpl
imul
js
add
js
int3
sbb
sbb
push
jb
dec
xchg
pop
imul
jmp
or
pop
sub
bound
aad
xchg
cmp
std
flds
adcl
inc
test
andb
mov
add
push
in
push
in
cmp
sahf
iret
in
scas
fcompl
cmp
jge
mov
js
pop
cmp
pop
adc
test
lret
mov
sbb
pop
jl
mov
subl
xor
lea
lods
push
pop
jl
mov
stos
mov
das
mov
mov
jnp
push
daa
adc
mov
inc
jns
jnp
test
mov
ljmp
inc
push
push
into
pop
xor
sbb
mov
and
jae
jg
icebp
xchg
repnz
iret
cwtl
push
push
insl
int
push
daa
push
adc
sbb
iret
ljmp
cld
pop
cmpxchg
or
mov
xchg
in
out
push
mov
adc
sbb
pushf
inc
sub
popl
dec
mov
sbb
in
ds
test
jl
fstp
jmp
dec
insl
stc
into
pop
enter
or
movsl
stos
inc
jbe
mov
imul
subb
int
xchg
xchg
lds
pop
xor
cmp
loopne
icebp
push
jnp
mov
fdivrl
fiaddl
xchg
push
push
push
add
inc
dec
insl
push
gs
insl
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
js
popa
je
jae
outsl
jb
addr16
imul
imul
and
jno
jbe
add
inc
push
fs
je
inc
push
dec
je
insl
inc
inc
gs
je
insl
inc
gs
and
jno
jbe
add
inc
dec
insl
push
gs
outsb
outsl
bound
imul
imul
and
jno
jbe
fprem1
add
sbb
xchg
inc
mov
leave
xchg
test
push
push
sub
je
in
xchg
stc
xor
mov
xor
sarl
xchg
mov
inc
jnp
idivl
scas
addr16
lcall
jb
cmp
cmp
pop
cmc
fidivs
add
jmp
inc
std
sbb
pop
xchg
push
lods
xchg
stos
dec
scas
leave
sbb
jecxz
and
cmp
push
dec
loop
scas
or
test
dec
add
shr
sub
push
sub
out
sub
iret
mov
lods
sub
shld
sbbl
out
dec
mov
xchg
arpl
ds
in
or
movsl
aaa
nop
outsl
add
popf
or
inc
sub
jnp,pn
sarl
int
ret
sub
test
andl
out
les
xor
sbb
lret
sub
js
pop
xchg
fwait
or
sub
insl
das
cs
jmp
test
data16
and
lcall
adc
ljmp
into
sbb
popa
sub
pushf
jle
lods
or
arpl
cmp
pop
lods
mov
cld
add
mov
cmp
mov
enter
adc
cmp
mov
adc
mov
cmp
test
repnz
das
dec
notb
arpl
int
test
mov
mov
fwait
callw
incl
add
js
popa
je
jne
imul
insb
imul
and
jno
jbe
add
inc
inc
js
push
outsl
js
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insl
push
insl
popa
jb
gs
imul
imul
and
jno
jbe
push
lea
jb
cmc
pusha
cmpb
jmp
mov
pop
enter
xchg
call
xchg
jno
rclb
out
inc
sub
insl
ficoms
popf
mov
int3
stc
clc
das
or
push
mov
gs
addr16
and
imul
loopnew
icebp
adc
mov
mov
insl
xor
jge
sbb
mov
push
xor
push
enter
xor
out
pushf
inc
lret
sbb
sbb
pop
jecxz
sarl
rorb
jo
cmpb
data16
sub
popa
test
lret
loope
and
mov
movb
inc
lods
clc
and
jno
test
mov
mov
or
sbb
std
xorb
lcall
xlat
sub
dec
insb
test
or
pop
pusha
inc
loop
and
and
inc
or
sub
dec
adc
dec
pop
sbb
stos
in
sbb
xchg
rcl
dec
mov
jbe
pusha
fsubrl
repz
xor
lods
inc
pusha
add
das
pop
and
add
xchg
rolb
in
xor
cmp
imul
mov
lret
mov
pop
dec
daa
mov
rclb
icebp
push
in
repnz
mov
sbb
adc
xlat
lret
lret
andl
sub
test
inc
out
scas
scas
bound
push
fisubrl
sahf
mov
push
cmpsl
add
inc
inc
outsl
arpl
jae
inc
imul
imul
and
jno
jbe
add
inc
inc
outsl
jb
jae
push
inc
jne
je
insl
inc
outsl
jb
inc
inc
insb
outsl
jae
push
jne
jb
and
jno
jbe
add
inc
dec
jbe
js
popa
jae
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
inc
outsl
insl
jae
jb
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
insb
gs
imul
je
outsl
outsb
and
jno
jbe
aad
nop
sbb
fisubl
imul
pop
popa
test
stc
cmp
or
test
mov
shll
loope
aaa
das
or
and
and
adc
je
in
and
sub
subl
jp
test
adc
shlb
xor
int
mov
lret
repnz
ret
pop
dec
in
sahf
movsl
mov
adc
pushf
stc
xchg
fimull
mov
mov
sbb
out
xchg
jge
int
sarb
aas
fstpt
push
stc
push
les
or
pop
add
dec
mov
mov
mov
adc
mov
daa
xchg
std
add
push
shrb
push
cmpsl
inc
mov
adcl
pop
hlt
xlat
mov
pop
xchg
dec
inc
jns
jecxz
sti
sbb
xor
cmc
fistpll
mov
jb
xor
sub
mov
fs
gs
add
ret
pop
loopne
mov
mov
jmp
mov
divl
sar
clc
push
mov
call
xor
shll
pop
jge
fidivs
sub
andb
mov
fdivp
fisubrl
in
sbb
sbbl
dec
cmp
inc
fidivs
shrb
dec
sub
lods
dec
out
sarl
jg
push
mov
sbb
loope
das
test
mov
cld
mov
das
fists
not
sub
leave
and
addr16
das
ret
lods
dec
cmp
sub
or
fidivs
inc
popl
fdivr
cmp
mov
test
ret
das
cmpsb
out
cmp
call
mov
stos
sbb
sahf
in
adc
stos
mov
pop
faddl
popa
ret
pop
mov
in
sahf
jmp
inc
neg
jnp
cmp
js
out
dec
je
data16
push
mov
adc
std
in
adc
frstor
inc
movsb
mov
aas
mov
sti
sbbb
xchg
popf
mov
lock
and
push
enter
pop
mov
mov
sahf
mov
sub
push
cmp
sbb
bswap
jmp
into
pop
jo
or
cmp
fidivrs
xchg
push
out
mov
jmp
or
sbb
andl
xchg
xchg
mov
push
mov
imul
and
adc
jg
inc
sub
sub
or
add
jg
jno
mov
shrb
cmp
fdiv
stc
push
add
sub
cs
sub
mov
sbbl
loope
or
shr
in
pop
mov
repnz
shrl
pusha
jg
ja
insb
cs
iret
mov
xlat
dec
loop
mov
bswap
lahf
mov
in
adc
pop
jmp
push
das
inc
test
jecxz
scas
subb
xchg
lods
sbb
add
insl
push
popa
jo
jae
fs
inc
imul
je
outsl
outsb
and
jno
jbe
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
add
mov
ret
xchg
shl
xchg
mov
pop
jge
sahf
enter
xchg
xchg
jb
loop
lcall
or
sti
shll
sub
inc
sub
out
sarl
test
rol
mov
sub
and
add
dec
out
xchg
push
out
push
dec
inc
xor
mov
ret
cmp
aaa
mov
sarb
sbb
jge
ret
pop
sbb
testl
inc
jbe
shrb
es
fdivl
sti
pop
cmp
pop
and
out
sub
movsl
dec
js
sub
mov
ret
jecxz
cwtl
inc
lods
inc
repnz
add
mov
insb
stc
xchg
aas
xchg
daa
negb
sub
scas
xchg
xchg
testl
and
or
pop
pop
push
mov
adc
ret
xor
lcall
pop
test
nop
jecxz
cs
sbb
cmp
mov
xchg
or
das
fdivl
sbb
add
movaps
cld
icebp
xchg
das
and
lcall
xchg
inc
and
mov
call
jns
inc
daa
mov
inc
sub
fs
push
add
addr16
jb
jbe
push
dec
cmpsl
push
sbb
out
stos
sbb
cmp
loope
add
mov
mov
xchg
cmp
out
sub
ret
inc
call
jp
movsl
sbb
lcall
mov
push
jge
mov
jo
inc
scas
movsb
insb
stc
into
mov
lods
lret
icebp
imul
jecxz
mov
sub
mov
or
ret
mov
rol
cmpsb
mov
out
movsl
loopnew
cmpsl
int
lret
cs
bound
loopne
sub
mov
arpl
cmova
pop
scas
mov
rcrb
dec
call
or
pop
and
packuswb
lods
in
mov
xlat
or
adc
xor
xchg
aas
ffree
out
rol
rolb
das
fstpt
mov
mov
sub
push
insl
dec
jecxz
adc
mov
xor
ret
test
jp
dec
inc
fcom
mov
into
jo
sub
xlat
cmp
push
mov
cmp
inc
inc
js
lcall
dec
sti
jmp
mov
inc
loopne
imul
repz
inc
movsb
pop
and
inc
mov
mov
in
aam
adc
sbb
pop
aaa
push
mov
mov
inc
pop
stc
xor
adc
lret
or
loopne
fnstenv
xchg
xor
sub
xchg
insl
adc
adcl
insl
test
ret
xchg
push
fs
mov
lods
jns
ds
xor
ss
lret
jo
inc
cmp
call
or
in
add
js
pop
outsb
aad
add
push
dec
inc
aaa
bound
add
add
outsl
insl
outsl
bound
imul
imul
and
jno
jbe
call
test
stc
xor
stc
push
movb
bt
ror
clc
bt
cmp
sub
mov
clc
clc
test
cmp
call
loope
mov
test
and
pop
push
mov
jb
sbb
aas
insb
lea
fdivrs
loope
cmp
lock
sub
shll
es
push
sub
inc
add
or
jl
jp
addr16
pop
sti
push
mov
test
out
and
movsb
sbbb
scas
aam
mov
mov
stc
in
ret
pop
pop
sti
xchg
inc
mov
xchg
push
rorb
sbb
lods
imul
insb
outsb
xchg
test
ljmp
test
negl
adc
fwait
std
inc
fildl
and
in
imul
mov
aad
ret
mov
inc
jmp
sbb
call
fnsave
jle
xchg
cmp
mov
ds
stc
push
sti
push
cmp
jae
sbb
and
sub
sbb
subl
push
in
lods
pop
pusha
int3
ja
mov
out
sub
stos
dec
bound
sub
pop
popl
inc
adc
dec
and
lcall
lods
or
cwtl
sbb
ss
jnp
inc
lods
je
pop
dec
movsb
pop
jae
dec
loop
cli
add
sbb
or
sti
lods
dec
jmp
jge
ja
push
mov
stos
sub
std
cmp
add
cli
inc
out
cmp
fstpt
mov
push
jns
ljmp
add
jmp
sbb
inc
push
test
hlt
fiadds
sbb
xor
js
mov
call
push
ja
and
inc
mov
rol
adc
adc
fmuls
iret
imul
or
xchg
ja
scas
xchg
xchg
mov
imul
mov
popa
push
out
mov
in
test
inc
gs
ret
fistl
sti
xchg
ja
jg
subb
ja
push
call
jo
xchg
adcb
add
dec
fstl
cmp
xchg
pop
mov
cmp
push
sub
jecxz
leave
adc
ret
inc
jo
mov
cltd
and
out
imul
es
sbbb
addr16
inc
loop
es
cs
sahf
push
mov
pop
mov
cmp
jl
mov
or
ja
sub
fcomps
addl
inc
jno
dec
push
cmp
fs
jo
add
sbb
popa
mov
sub
icebp
das
insb
cmp
mov
int3
pushf
adc
iret
cltd
xor
cmp
or
ret
sarb
fdivrs
and
xlat
movsl
ljmp
mov
push
stos
cmpsl
insb
aam
xchg
or
adc
adc
jne
aas
jp
sub
sahf
mov
add
popa
jne
gs
imul
imul
and
jno
jbe
lea
je
pushl
push
movb
mov
pusha
pushl
ret
rcl
mov
pusha
xchg
xlat
inc
cld
mov
inc
fwait
mov
lock
push
mov
in
fdivrs
fnsave
add
mov
push
jge
add
inc
push
insb
outsl
bound
jno
gs
inc
inc
imul
je
outsl
outsb
and
jno
jbe
pushf
pushf
pushf
lea
jne
bts
stc
call
and
add
repnz
add
push
add
push
sub
add
cmp
add
add
add
add
add
hlt
mov
push
add
js
add
mov
add
cld
add
lret
add
push
add
add
add
pop
daa
add
pop
hlt
add
jbe
add
clc
test
pop
dec
add
add
imul
mov
movb
cs
add
or
add
add
jns
add
dec
push
add
add
jmp
xor
add
xchg
add
push
pop
push
add
add
add
clc
add
add
mov
add
add
xor
add
xchg
lcall
add
add
sub
push
add
add
add
inc
and
add
xchg
add
add
les
mov
mov
add
add
add
and
add
xchg
pop
add
add
leave
push
add
sub
mov
add
stos
sbb
add
add
add
add
add
inc
add
add
add
add
push
add
push
incb
dec
pop
push
add
add
and
add
mov
add
add
movsl
add
add
add
dec
addr16
add
push
add
cmpsb
add
add
add
std
cmpsb
add
add
add
add
inc
add
mulb
add
add
add
ja
add
add
add
add
jge
add
push
add
and
add
add
add
add
add
add
add
movsb
add
add
les
add
add
xchg
add
add
add
jae
add
add
jmp
imul
mov
ret
jno
add
add
rolb
mov
add
pop
incb
add
push
add
daa
add
es
push
add
jp
add
pop
add
add
push
add
push
add
lret
add
mov
add
add
add
push
add
loope
add
add
push
add
add
add
pop
push
add
lods
add
add
add
cmp
push
add
int3
push
add
inc
add
add
out
add
add
add
add
add
jo
add
add
add
xlat
stos
add
icebp
dec
add
imul
add
pop
push
add
xor
add
push
add
mov
add
das
add
in
add
call
mov
add
push
jmp
add
add
ret
add
icebp
pop
add
popf
mov
add
add
enter
roll
dec
jnp
add
add
hlt
inc
add
add
add
sbb
add
xchg
es
add
addl
add
add
add
sti
add
add
add
mov
add
and
add
add
add
add
add
add
repz
add
add
add
jns
add
rolb
add
add
add
add
mov
add
add
push
push
add
add
add
add
add
add
add
sbb
jge
add
dec
push
push
add
mov
add
mov
lahf
add
add
add
add
add
add
xchg
pop
stos
add
add
push
add
je
add
add
add
inc
add
add
push
add
add
add
add
dec
add
add
add
xchg
add
inc
cmc
add
add
add
out
add
add
add
add
insl
add
add
pop
add
add
add
jp
add
add
add
add
push
add
outsl
pop
add
add
add
add
add
sub
and
add
add
ljmp
add
add
add
test
add
pop
push
add
add
add
pop
add
add
gs
add
enter
dec
add
add
xchg
push
add
and
test
push
add
add
add
add
add
add
stc
add
add
add
andl
add
add
add
in
add
jbe
push
add
add
add
pushf
push
add
add
add
clc
add
fnstenv
add
add
add
push
mov
add
add
add
add
roll
add
add
add
sbb
add
add
add
add
aaa
dec
add
add
add
push
and
jmp
add
add
push
add
push
add
add
add
out
mov
add
xor
add
add
add
mov
add
add
add
imul
add
add
add
lock
add
add
mov
roll
add
inc
add
sahf
xor
add
add
add
add
add
add
lea
add
jae
add
add
add
add
out
add
add
add
add
add
cmp
add
add
add
add
sti
mov
add
push
add
test
add
add
add
in
dec
add
pop
in
add
add
addb
add
add
cmp
add
add
add
dec
add
add
add
add
add
add
add
add
jl
push
add
add
add
or
and
add
add
lret
fisttpll
add
mov
add
add
add
ljmp
add
add
add
cmpsb
add
imul
add
add
mov
add
test
add
gs
add
pop
daa
add
js
add
popf
aam
add
and
add
imul
add
add
std
xor
add
add
add
add
adc
add
clc
add
add
add
js
add
testb
add
add
add
inc
add
pop
cmc
add
add
add
pop
std
add
mov
add
add
xchg
push
push
add
add
add
and
mov
add
add
add
mov
add
add
add
inc
push
add
add
add
push
push
add
add
add
fiadds
add
mov
add
add
add
mov
add
fsubrp
add
add
ss
add
add
add
add
dec
add
add
add
popa
and
add
add
add
and
add
add
add
inc
push
add
add
add
xor
push
add
add
add
mov
add
add
add
add
add
add
add
testl
add
add
add
add
add
add
out
add
addr16
add
add
das
movb
add
add
mov
add
add
add
add
xchg
pop
add
ret
push
add
add
add
add
add
add
xor
add
and
add
add
add
sbb
add
xor
add
sarb
add
add
add
mov
pop
add
add
add
sbb
add
mov
add
add
add
inc
incb
add
add
add
add
add
add
add
push
add
add
add
add
push
push
add
add
add
add
xchg
xor
add
add
add
add
add
add
add
add
fiadds
add
add
add
and
add
push
add
add
sbb
add
add
add
out
add
add
add
cmp
add
push
add
push
add
add
add
mov
add
add
add
add
sub
add
pop
push
add
add
add
add
pusha
pop
add
add
add
cmpsb
jp
add
add
add
add
fs
add
shll
add
xor
dec
sahf
add
add
add
lock
add
add
add
mov
jmp
add
add
add
add
test
add
add
imul
add
add
lods
insb
add
add
add
sbb
add
mov
add
add
enter
jg
add
add
add
inc
push
add
add
add
cmp
add
add
add
inc
daa
add
es
add
add
add
rolb
add
add
add
add
xlat
daa
add
add
add
inc
xor
add
add
add
add
jp
add
pop
add
hlt
add
mov
add
push
add
add
cmp
add
jmp
add
xchg
add
add
pop
add
insb
push
push
add
jnp
add
xchg
add
push
add
stos
int3
push
add
popf
add
jmp
addl
add
mov
fisttpl
add
push
add
out
add
push
inc
push
add
cmp
inc
pop
add
add
add
sub
add
inc
push
add
and
add
add
lret
add
fs
add
add
add
add
lock
cmp
add
and
push
add
xchg
add
add
add
or
add
add
add
add
add
adc
add
out
roll
popf
pop
add
movsl
lock
rcr
add
add
add
add
data16
dec
add
inc
movsl
add
add
sub
add
dec
add
jae
push
add
enter
test
add
add
aam
add
jle
add
mov
add
pop
jnp
add
inc
add
add
add
js
add
es
add
jge
add
cltd
mov
add
add
push
dec
add
insb
sbb
add
add
ret
sbb
add
fwait
jno
add
stc
add
jnp
add
add
add
push
inc
push
add
jg
add
push
add
push
push
add
std
add
out
adc
add
adc
add
dec
add
mov
add
inc
dec
add
push
sub
add
jno
add
add
dec
push
add
add
out
add
leave
push
add
jle
add
push
add
pop
add
add
add
add
push
add
mov
add
xor
add
add
cwtl
and
add
add
adc
push
add
push
push
add
add
das
add
outsl
pop
add
add
in
add
filds
add
add
add
and
add
pop
and
jp
add
mov
xchg
add
add
sub
add
jae
add
jp
add
popf
add
add
cmp
add
mov
xlat
push
add
rolb
rolb
add
sahf
add
add
add
mov
mov
add
add
add
add
jne
add
ss
add
add
and
add
add
add
ror
add
bound
add
add
add
cmpsb
push
add
add
add
inc
add
sbb
add
add
add
dec
add
add
add
jle
add
test
add
add
add
in
push
add
add
add
push
add
add
jno
add
push
add
add
add
sub
pop
add
add
add
push
jno
add
add
add
es
add
add
leave
scas
add
mov
add
add
add
int3
mov
add
add
add
add
dec
das
add
add
add
add
pop
add
insl
rolb
into
mov
add
repz
add
add
pop
rolb
fadds
add
add
add
mov
add
cwtl
push
add
add
add
add
add
add
mov
push
add
add
add
push
add
add
add
jae
add
add
add
lods
add
negb
add
cmp
inc
add
add
add
add
js
add
add
ret
add
add
ljmp
add
add
add
add
test
add
add
push
push
add
add
add
adc
add
add
add
adc
mov
add
add
add
repnz
add
jns
add
add
add
add
add
add
add
push
dec
add
lock
add
add
add
add
outsl
pop
add
add
add
pop
pop
push
add
add
add
pop
add
add
add
mov
push
add
add
add
push
add
add
add
add
and
add
add
add
xchg
push
add
add
add
add
add
mov
add
add
add
pop
in
add
add
add
add
lcall
add
and
add
add
add
add
cmp
add
add
mov
add
add
add
dec
add
jae
add
add
add
push
add
add
add
add
and
add
add
push
mov
ja
add
add
add
xchg
arpl
dec
enter
add
add
add
add
add
add
add
push
add
add
add
and
add
add
stc
push
push
add
add
add
add
and
add
add
add
icebp
xor
add
add
add
add
add
add
sbb
push
add
add
add
cld
add
add
add
sub
add
sbb
add
add
add
andl
add
add
rcll
add
add
add
inc
add
add
add
mov
testl
add
push
add
add
add
add
add
add
add
add
add
mov
add
add
add
jae
add
add
add
sahf
pop
add
repnz
add
add
fisubrl
add
push
add
add
add
add
stos
repz
add
clc
add
add
add
add
inc
push
add
add
add
add
add
add
lods
add
add
add
adc
add
add
add
add
add
add
push
ss
add
add
ds
add
add
add
adc
add
add
add
add
add
or
add
add
add
jp
add
add
add
xor
add
jecxz
add
add
add
dec
add
add
add
add
sbb
add
push
add
add
add
popa
add
mov
add
add
and
sub
add
cwtl
add
mov
dec
add
xorb
jmp
movb
push
add
sbb
add
pop
add
push
sub
add
es
add
add
add
add
shlb
add
add
add
add
xor
add
stos
scas
add
push
add
add
add
xor
add
call
add
inc
xor
add
sub
add
ret
jmp
add
frstor
add
add
imul
add
mov
add
add
inc
fs
and
add
icebp
add
add
mov
add
inc
rolb
add
add
or
push
add
add
daa
push
add
add
pop
push
add
out
add
add
test
out
nop
add
mov
add
cmp
testb
inc
cmp
add
pop
add
in
icebp
add
add
int3
push
add
push
add
aam
add
cmp
movb
xchg
push
add
add
add
push
add
cld
mov
add
add
add
sub
add
add
cmovnp
add
add
add
cmp
add
add
add
mov
add
add
add
add
rcrl
add
add
add
add
add
add
pop
lock
lea
add
add
add
add
and
add
add
add
cld
and
add
add
add
add
dec
push
add
add
add
xchg
aaa
jmp
add
daa
std
add
jecxz
add
add
add
lahf
in
add
push
add
add
add
and
add
xchg
add
add
add
and
add
add
add
add
add
add
add
mov
clc
add
add
add
add
out
add
add
add
add
add
add
add
xchg
add
add
add
inc
push
add
push
add
add
add
push
add
faddl
add
add
cmp
dec
add
add
push
add
fildl
add
push
add
push
push
add
add
add
inc
cwtl
push
add
add
add
add
xchg
add
pop
nop
push
add
add
add
sub
push
add
add
add
add
add
add
add
insl
jnp
add
add
add
xchg
add
add
add
add
sub
add
add
add
add
leave
pop
add
add
add
lret
pop
add
fdivrs
add
add
add
testl
add
adc
add
fldl
add
add
add
push
add
push
add
add
add
add
and
add
dec
movb
iret
add
add
sub
add
pushf
mov
add
add
add
pop
add
add
add
mov
add
cmp
add
add
mov
add
and
add
in
popa
add
add
add
cmpsl
and
add
add
add
clc
int
add
xchg
add
add
add
movsl
dec
push
add
add
add
add
cli
je
add
add
add
add
add
adc
add
add
add
pusha
mov
add
mov
add
dec
lret
cmpl
add
add
add
es
add
push
add
add
add
inc
add
add
add
fiaddl
add
add
add
add
std
in
add
add
add
icebp
enter
xchg
add
add
aas
add
jl
add
add
push
add
add
add
cwtl
add
add
icebp
add
add
add
add
pop
push
add
add
add
ss
add
add
addb
add
sahf
add
add
add
lods
add
add
add
add
xlat
add
add
add
aam
add
mov
add
add
cmp
add
out
add
add
add
mov
add
out
add
cmp
add
add
xor
add
movsb
add
add
add
push
enter
outsl
add
add
mov
add
add
add
add
add
add
add
inc
add
outsl
scas
add
add
add
add
add
add
add
lods
mov
add
mov
add
add
add
add
add
iret
arpl
add
add
add
jle
add
add
add
add
inc
ret
std
add
add
add
xor
add
add
add
add
dec
adc
add
add
add
sub
add
add
out
repnz
mov
add
jge
add
ss
add
add
sub
add
add
add
and
add
add
add
mov
add
add
add
pop
add
pop
pop
push
add
add
add
mov
add
ret
add
add
add
mov
add
add
add
add
in
add
add
add
dec
add
add
add
out
push
add
mov
add
loop
push
add
add
add
add
add
add
mov
add
push
add
add
add
mov
add
adc
add
add
add
pop
push
add
add
add
add
add
add
add
dec
add
inc
mov
add
add
add
add
mov
add
add
add
mov
add
add
loope
add
add
add
add
lock
add
add
add
mov
adc
add
add
jmp
add
add
add
add
add
add
add
fstps
add
add
inc
add
add
add
orb
leave
pop
add
add
add
mov
nop
push
add
add
add
add
roll
add
add
jg
add
add
add
add
add
add
sub
add
popa
add
add
add
ret
cmp
out
fildl
add
in
add
add
add
add
xchg
sub
add
pop
add
add
jecxz
add
add
add
mov
add
ret
xor
add
add
sbb
sbb
add
add
add
aad
add
mov
add
xchg
lcall
xchg
icebp
add
add
add
add
add
ja
imul
popa
insb
imul
and
jno
jbe
movl
pusha
pushf
pushf
lea
jmp
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
push
imul
outsl
insb
inc
inc
jne
je
insl
inc
insb
imul
jb
inc
outsw
jb
and
jno
jo
aaa
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
je
add
add
insl
push
jb
outsl
jb
imul
imul
and
jno
jbe
dec
sbb
adc
push
stc
fidivrs
fwait
jo
fidivs
and
sub
sbb
lods
insl
xchg
xlat
jge
mov
push
cmp
or
xchg
jp
in
icebp
pop
roll
jno
popf
test
cmpsb
jo
add
imul
std
inc
pop
loope
adc
pop
lock
push
or
push
inc
neg
je
jo
push
mov
ret
pop
lock
sub
add
test
in
dec
bound
movsb
pop
mov
sti
adc
test
mov
jbe
mov
imul
mov
add
aad
mov
add
sub
mov
jge
ret
gs
mov
nop
cltd
and
pop
rorl
int
mov
enter
inc
pusha
subl
gs
andb
subl
sbb
inc
jbe
lahf
cmc
fnstsw
sbb
in
nop
das
or
pop
es
adc
mov
mov
mov
xchg
jecxz
scas
js
inc
cmpl
push
inc
or
les
mov
mov
and
ds
jmp
mov
jb
push
arpl
int
shll
jl
cmp
add
out
cs
mov
xchg
ds
and
insl
sbb
repz
xor
xor
sarl
xchg
mov
out
stc
add
and
je
pusha
clc
pushf
add
pusha
pushf
lea
jmp
push
dec
xlat
lahf
sbb
jae
xor
loop
loopne
push
je
cmp
int3
cmpsb
ret
ljmp
icebp
sbb
ret
in
loopne
and
push
test
or
mov
xor
push
rol
jae
ja
mov
call
xor
test
push
sbb
push
lcall
mov
sub
iret
cmp
pop
addb
mov
adc
adc
sahf
jg
pop
fnstenv
das
out
imul
and
popf
aad
xchg
cmp
jge
std
sbb
xchg
call
movsl
fcoms
out
test
adc
jl
nop
add
fsts
movsb
repz
insb
pop
sub
in
xchg
xor
insb
out
adc
xor
dec
stos
sub
bound
jbe
mov
bound
out
repnz
inc
inc
push
in
pusha
sub
sarb
push
popa
in
push
sub
jmp
xlat
sub
and
mov
mov
sti
pop
inc
cmp
jno
sbb
enter
pop
jne
push
sub
gs
mov
cli
iret
or
fwait
insb
fistpl
adc
pop
mov
inc
cmp
jae
sbb
dec
sbb
xchg
xor
add
cmp
sub
jnp
daa
or
mov
mov
pop
lods
mov
mov
stos
pop
cmp
es
mov
add
xchg
mov
ds
pushf
inc
jnp
fsubrl
mov
mov
inc
insl
mov
lret
fcoms
xlat
pop
mov
jecxz
iret
inc
ret
and
add
push
repnz
inc
insl
mov
sbb
or
pushf
sub
call
js
push
sbb
adc
xchg
mov
cmp
pop
push
mov
popf
sbb
sbb
cmc
fnstsw
mov
pushf
sbb
xchg
mov
xchg
inc
sub
dec
sub
das
dec
and
mov
ret
pop
mov
lods
iret
pop
call
xchg
out
aam
jns
addr16
jb
xchg
int
pusha
and
mov
into
mull
cmc
stos
xor
pop
cltd
xchg
dec
scas
pop
add
sbb
std
sbb
add
mov
scas
dec
inc
xor
adc
adc
es
jle
xchg
mov
jmpw
leave
push
inc
fldl
imul
loope
xchg
mov
dec
jb
jmp
jno
daa
mov
xchg
add
stos
pushf
leave
xchg
sub
cwtl
pop
loope
flds
inc
mov
mov
push
pop
aaa
nop
ret
or
cli
xchg
push
fs
lcall
je
cmp
mov
mov
cmp
insb
adc
inc
mov
sbb
inc
sub
mov
insb
into
and
jmp
push
ret
pop
pusha
lahf
xor
sbb
pusha
out
sbb
fwait
xor
mov
gs
xchg
add
pop
arpl
sbb
in
icebp
dec
sbb
xchg
jo
xor
push
je
bnd
mov
sub
lret
mov
aas
and
push
inc
imul
inc
js
imul
inc
inc
imul
je
outsl
outsb
and
jno
jbe
add
inc
dec
arpl
jae
outsb
outsw
inc
imul
imul
and
jno
jbe
repnz
lret
pushf
sbb
sbb
hlt
push
pop
es
repz
rolb
dec
fidivrs
sbbb
push
cltd
sub
pop
dec
negb
notb
in
add
rol
lds
mov
lea
popa
addr16
xlat
mov
or
out
xchg
mov
loopne
jmp
mov
push
insb
inc
movsb
int3
out
cmpsb
cmp
pop
mov
add
adcb
sbb
push
icebp
xlat
stc
adc
xor
repnz
push
in
mov
mov
add
xchg
push
push
jle
call
adc
aas
sub
push
adc
adc
jl
stc
lds
test
hlt
fisubs
mov
dec
in
mov
nop
jp
mov
shrl
dec
out
repz
sub
jb
pop
cmp
lock
mov
jmp
pop
scas
in
mov
movl
sti
lret
mov
lods
dec
mov
mov
dec
xor
cltd
xchg
dec
mov
aas
fsubp
jle
sti
out
jb
xor
sub
jmp
les
sbb
call
inc
xlat
pop
divl
scas
add
jge
mov
inc
mov
or
jno
mov
mov
out
mov
fdiv
adc
xchg
shrb
call
sub
fwait
sbb
inc
call
mov
inc
add
sbb
stos
lcall
stc
xor
ret
jnp
jb
std
mov
negl
aaa
mov
popf
repz
fcomps
cmp
pop
cmc
lcall
iret
xor
fcmovbe
jg
jne
int
scas
bound
jl
stos
add
mov
cld
scas
jns
push
jb
sbb
inc
sub
or
adc
sub
cmp
inc
int
sbb
mov
add
repnz
enter
sub
xchg
mov
pop
arpl
mov
lret
stc
mov
xorb
jle
xchg
push
stos
insl
je
imul
jo
jle
and
or
test
cld
test
mov
fucomip
cltd
sbb
xor
xor
stc
lcall
inc
mov
mov
mov
arpl
loop
push
jg
mov
cltd
mov
add
stos
xchg
in
xchg
mov
and
addr16
enter
sbb
aas
out
rcrl
cmpsl
ret
mov
push
fnclex
xor
mov
scas
popa
add
shll
lea
add
stos
insl
pop
popf
inc
push
xor
push
push
test
std
adc
cmp
xor
fwait
fwait
shrb
inc
dec
jbe
jb
jo
jb
jns
je
jb
inc
imul
imul
and
jno
jbe
add
inc
inc
js
push
outsl
outsb
jae
jae
imul
imul
and
jno
jbe
xor
sub
sub
mov
movzbw
btr
lea
stc
jmp
add
inc
inc
insb
popa
jae
gs
push
outsb
push
imul
popa
jae
and
jno
jo
aaa
push
jns
je
insl
inc
push
dec
gs
inc
insb
popa
jae
add
add
insb
popa
jae
gs
push
dec
imul
ja
jno
jb
add
add
arpl
imul
outsb
imul
popa
insb
imul
and
jno
jbe
movzbl
movzbw
mov
jmp
add
inc
push
popa
jb
popa
outsb
je
inc
push
popa
jb
outsl
push
je
and
jno
jb
xor
jns
je
insl
inc
push
popa
jb
popa
outsb
je
add
inc
push
fs
je
inc
push
dec
je
insl
inc
push
gs
imul
jne
and
jno
imul
jae
gs
inc
push
popa
jb
popa
outsb
je
imul
js
outsl
insl
insl
outsl
outsb
inc
imul
imul
and
jno
jbe
add
inc
inc
js
imul
imul
jb
jo
jae
je
jb
imul
imul
je
outsl
outsb
and
jno
jbe
mov
jo
sbb
xor
shl
sbb
sbb
mov
cmp
jo
mov
jb
mov
sbb
push
cmp
rcrl
pop
roll
pop
mov
add
js
loopne
das
dec
sub
add
sbbl
sbb
add
dec
xchg
out
inc
hlt
push
jl
xchg
dec
xor
pop
in
push
aas
adcb
sbb
add
adc
imul
fwait
xor
adc
mov
adc
cld
lds
in
stos
dec
cmpsl
or
mov
pop
and
xchg
xchg
loope
loop
mov
mov
es
adc
dec
pusha
pop
or
jmp
sub
fidivrs
sub
jb
cs
insl
je
mov
jbe
out
scas
add
les
cmpb
scas
int3
fisttpll
sarl
sbb
icebp
shlb
push
mov
clc
in
xlat
dec
inc
lods
push
out
pop
scas
mov
sbb
pop
cmp
jne
icebp
iret
xorl
insb
xchg
xlat
in
inc
and
jp
mov
das
stc
push
arpl
arpl
daa
xchg
push
dec
and
or
adc
adc
aas
sbb
add
xchg
pop
jge
out
mov
es
jb
sbb
jne
or
daa
enter
adc
fidivrl
push
jnp
mov
adc
fisubrs
and
add
inc
inc
outsl
outsb
je
outsl
insb
jae
push
inc
outsl
outsb
je
outsl
insb
inc
push
gs
imul
jno
jb
add
add
data16
arpl
jb
gs
push
inc
jne
arpl
jb
inc
js
inc
gs
jne
arpl
outsw
and
jno
jo
xor
popa
je
inc
push
inc
jne
arpl
sub
mov
test
cmp
push
cmpb
lea
push
mov
pushf
lea
jne
aad
ror
shrd
rcl
sub
sub
jmp
add
inc
push
fs
je
inc
push
dec
je
insl
dec
imul
dec
je
insl
dec
inc
push
popa
outsb
addr16
jno
jo
xor
popa
inc
push
dec
je
insl
dec
imul
fs
je
inc
push
dec
je
insl
jb
add
add
outsl
outsb
je
jb
inc
push
dec
bound
arpl
jae
inc
inc
gs
je
insl
and
jno
imul
pushf
clc
sub
call
add
inc
inc
imul
imul
imul
and
jno
jbe
add
inc
dec
insl
popa
imul
inc
imul
je
outsl
outsb
and
jno
jbe
mov
call
jmp
cwtl
movzbw
aam
mov
shl
mov
clc
test
pusha
pusha
add
pushf
push
movw
mov
mov
push
lea
jmp
jmp
pushl
mov
pushf
lea
jmp
call
cmc
jmp
adc
movzbl
jmp
movb
call
btc
shl
shrd
shl
mov
rcl
call
pushf
popl
call
movzbw
mov
pop
mov
movzbw
pushf
popl
rol
bswap
push
rcr
xchg
pop
mov
shl
movsbw
mov
shrd
pop
pushl
popl
xchg
movl
mov
mov
sbb
movsbl
bsf
stc
add
movzbw
movsbl
clc
rol
bswap
ror
call
jae
cbtw
stc
pusha
stc
stc
cwtl
pushl
sub
stc
clc
clc
mov
clc
pusha
sub
push
movw
pushf
lea
jmp
mov
pushl
movb
pushl
mov
pushl
ret
lea
mov
inc
sbb
mov
adc
cmp
sbb
shl
mov
btc
pushl
popl
add
movl
btc
bswap
xadd
call
call
pusha
sub
pusha
mov
jmp
call
movb
push
mov
pusha
pushf
popl
pushf
jmp
mov
jmp
mov
movw
mov
lea
jmp
jmp
mov
movsbw
pop
movsbw
pushf
popl
clc
rcl
mov
xchg
stc
mov
not
cmp
call
sar
das
cwtl
adc
mov
bt
bt
add
call
call
mov
movw
movb
lea
jmp
jmp
cmp
cmc
sub
cmp
shr
jmp
mov
jmp
push
jmp
pushf
popl
movw
btr
shl
lea
xchg
rol
xchg
mov
lea
inc
rcr
or
mov
push
jmp
cmp
cwtl
lea
je
cmc
push
pushf
sub
cmp
stc
jmp
bts
mov
shr
bsr
sar
jmp
pushf
popl
neg
call
movzbl
mov
pushf
call
pushf
pop
movzbw
mov
movzbl
lea
mov
xchg
mov
lea
je
movsbw
xchg
pusha
pushf
popl
or
cmc
bts
bsf
mov
pushf
neg
cmp
mov
sbb
lea
xchg
mov
movsbw
pushl
popl
shl
xchg
movl
or
bswap
xchg
mov
pop
add
cmc
btr
bswap
rcr
xor
xor
btc
inc
rol
bts
lea
rcr
bts
sar
sub
xchg
mov
rcl
or
btr
mov
push
pop
stc
add
test
add
mov
setne
btr
xor
movsbl
stc
mov
pushf
rol
lea
movw
setne
inc
push
xor
shl
shl
shl
xor
call
das
mov
push
and
mov
stc
cmp
add
pusha
call
call
mov
call
call
or
call
mov
mov
push
mov
lea
jmp
bt
clc
sub
pushf
lea
jmp
pusha
movl
pushf
popl
jmp
push
pushf
pushf
mov
pushl
pushl
push
movb
lea
jmp
pusha
sub
call
pushf
popl
movl
jmp
stc
cmc
mov
push
clc
cmp
sub
pusha
push
pushf
lea
jmp
pushf
call
mov
mov
call
pushf
push
jmp
mov
push
pushf
pushf
mov
mov
jmp
add
call
bt
shl
pushf
and
mov
clc
sub
stc
stc
push
rol
pushf
movw
cmp
add
jl
add
pusha
call
mov
stc
movzbl
xadd
neg
pushl
popl
or
adc
or
btc
movl
or
bsf
sbb
mov
rol
pop
add
btc
adc
bswap
bts
clc
lea
xor
rol
sub
bts
ror
lea
pushf
clc
cmp
test
sub
pusha
pusha
push
lea
jmp
rcl
and
shl
btc
and
mov
clc
bt
pushf
pusha
sub
push
mov
pushf
push
mov
push
pushf
lea
jmp
stc
mov
not
rol
sbb
pusha
mov
call
pusha
add
mov
lea
jmp
mov
jmp
push
call
pusha
mov
movb
lea
jmp
call
cmc
add
pushl
sub
push
jmp
lea
mov
movsbw
mov
jns
pusha
divl
mov
mov
jmp
mov
movw
pushf
lea
jmp
xor
cmc
bt
not
bt
stc
sub
clc
test
sub
jmp
sub
push
pushl
movb
lea
jmp
mov
jmp
add
jmp
jmp
bswap
call
pusha
push
mov
call
sub
pushf
mov
pusha
pushf
lea
jmp
pusha
pushf
pusha
mov
mov
mov
call
btr
mov
bt
add
pusha
pushl
mov
pusha
lea
jmp
mov
call
mov
pushf
push
pushf
mov
xchg
movzbw
mov
bswap
pushf
popl
bts
add
bt
movzbw
push
shld
sub
shl
xchg
push
pushf
clc
mov
lea
bsf
xadd
clc
pushl
xadd
push
movsbw
adc
or
and
mov
stc
add
cmp
shrd
bswap
sbb
movzbw
bt
bsf
xor
movzbw
mov
push
sub
push
pusha
lea
jmp
add
add
jmp
call
mov
movb
pushf
lea
jmp
pushf
mov
jmp
mov
cld
pusha
mov
cld
pushf
call
movl
movb
mov
pushf
mov
xchg
pop
jmp
shl
mov
jmp
pushf
push
mov
jmp
mov
push
pushl
movw
movb
pushl
ret
shrd
seta
movzww
test
sub
stc
clc
bt
lea
clc
push
ror
test
add
cmp
neg
call
jmp
jmp
push
pusha
pushl
push
mov
mov
mov
pushf
mov
jmp
lea
jne
push
call
ror
shr
mov
movsbl
mov
jmp
jmp
inc
btr
mov
jmp
xor
and
sub
lea
stc
call
pushl
popl
movb
mov
pusha
pushf
lea
jmp
jmp
call
movb
xchg
pushf
lea
pop
mov
movzbw
pushf
mov
bswap
pushf
popl
pusha
rcl
rcl
mov
shr
movsbw
mov
shld
mov
sbb
inc
xadd
stc
pushl
popl
pop
adc
push
xadd
movl
dec
test
bt
mov
pushf
ror
mov
or
add
call
push
push
mov
bswap
call
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
push
pushf
pushl
popl
mov
pushf
pushl
pushf
lea
jmp
aaa
movsbw
movsbw
mov
test
sub
call
pushf
mov
mov
pushf
mov
movw
lea
jne
shr
btc
mov
call
push
mov
pushf
pusha
push
jmp
call
mov
push
jmp
lahf
setae
mov
call
jmp
mov
movw
pushf
pushf
lea
jmp
cmc
mov
jmp
mov
lea
pushf
pop
push
pushf
popl
xor
shrd
push
xor
mov
movzbw
shr
dec
mov
sub
or
mov
bsr
pushl
popl
stc
bsr
movl
bts
pusha
mov
btr
add
not
and
bswap
btc
test
xor
cmp
btc
lea
stc
cmp
jmp
lea
cpuid
call
mov
pusha
pushf
mov
pushf
mov
call
pushf
pushf
pushf
mov
jmp
jmp
push
call
test
sub
pushf
jmp
mov
sub
test
call
clc
push
mov
jmp
bswap
mov
push
shl
dec
add
jmp
pushl
call
cld
std
push
lea
jmp
mov
pushf
lea
jmp
push
push
pushl
pushl
call
bswap
rdtsc
mov
bswap
pushf
setnp
xchg
mov
pushf
mov
mov
pop
xchg
mov
pop
mov
push
movw
pushf
pushl
ret
and
xor
mov
lea
call
jmp
mov
stc
clc
pusha
lea
call
bswap
mov
pusha
mov
pushf
jmp
lea
jp
push
call
movsbw
adc
add
rcr
notl
adc
test
aam
sbb
mov
cmc
sub
call
bt
pusha
sub
test
shr
pushf
mov
mov
pusha
pushf
popl
pushl
push
lea
jne
popl
pusha
push
pushf
mov
lea
jmp
jmp
call
mov
jmp
pushf
movb
pushl
popl
movb
lea
jmp
mov
lea
jg
mov
pushf
movb
mov
call
pusha
mov
pushf
mov
call
call
mov
test
push
sub
pushf
pusha
pushf
lea
jmp
movsbw
pushf
movzbl
pusha
inc
mov
push
jmp
mov
bt
inc
shl
lea
mov
setge
mov
aad
rdtsc
cld
mov
call
lea
cmp
jmp
mov
mov
movzbw
push
call
stc
bt
cmp
sub
pusha
pushf
pusha
lea
jmp
pushf
sete
pusha
mov
pushf
call
pushl
mov
test
add
push
mov
pusha
lea
jmp
movb
movb
jmp
pusha
mov
jmp
call
pushf
call
jmp
bt
bt
sub
cmc
stc
jmp
pushf
jmp
test
clc
shl
push
pushf
pusha
push
mov
pushf
push
pushf
popl
call
stc
or
mov
clc
add
jae
add
jmp
pushf
mov
jmp
pusha
pusha
movzbw
mov
bswap
pushf
popl
mov
and
shr
xchg
neg
mov
bts
shld
movzbw
mov
call
pushf
call
call
push
mov
jmp
push
call
bt
mov
rcl
ror
clc
pusha
mov
test
sub
call
not
mov
mov
pushf
add
lea
js
mov
push
pushf
lea
jmp
call
jbe
pushl
call
push
pushf
popl
pusha
pushf
pushl
popl
pushf
lea
jmp
mov
call
mov
pushf
mov
movw
jmp
pushl
popl
pusha
mov
call
mov
pushl
mov
pop
pushf
popl
shl
xchg
xor
not
jmp
movl
and
mov
shr
bsr
bts
add
ror
or
bswap
add
xor
sar
bt
shr
lea
push
bt
push
movb
sub
push
lea
jmp
btr
inc
mov
movzbw
bsf
bts
sub
bswap
mov
inc
seta
adc
sbb
push
xor
ror
inc
not
and
sub
rcr
sbb
movzbl
clc
movzbl
jmp
and
mov
ror
shl
mov
clc
add
call
mov
sub
bsr
or
add
rcr
shld
dec
bswap
bsr
pop
xor
call
push
jmp
setne
shr
cmp
sub
rcl
setge
ror
bt
pushf
and
shr
pushf
bt
add
mov
bt
test
pusha
add
push
mov
pushl
lea
jmp
pusha
push
push
mov
pushl
pushf
mov
bswap
pushf
popl
jmp
shld
inc
mov
btc
rol
sub
sets
add
test
add
dec
inc
movzbw
xor
bswap
neg
bswap
add
call
divl
movb
mov
jmp
pusha
movw
xchg
call
call
pusha
mov
pushf
lea
jmp
and
test
cmp
jmp
mov
pushf
movb
movl
movb
lea
jmp
push
movsbw
call
xor
rcr
rcr
btc
lea
clc
pusha
cmp
sub
push
push
movb
pushf
lea
jmp
push
mov
pushf
popl
ror
test
add
xchg
rol
xchg
btr
clc
mov
rol
shl
sbb
mov
pushf
bsr
pushl
popl
cmp
bswap
pushf
adc
movl
lea
pusha
add
mov
cmc
cmc
movzbw
add
mov
test
bsr
bswap
shr
bt
movsbw
xor
test
lea
pushf
lea
je
bt
sub
push
pusha
pusha
push
lea
jmp
pusha
mov
movb
jmp
pusha
pusha
mov
pushf
mov
movzbw
call
mov
or
rcr
sar
push
rcl
pushl
ror
cmc
clc
push
dec
mov
rcr
add
inc
ror
bswap
shrd
bt
ror
lea
xor
or
movsbl
shr
sub
mov
clc
test
push
sub
push
movb
push
push
lea
jmp
mov
bsr
pushl
popl
bts
movl
ror
mov
mov
cmc
add
ror
bswap
ror
bts
pushl
shl
xor
shld
mov
rcl
dec
lea
cmp
movb
sub
pushf
lea
jmp
push
pusha
push
mov
pushf
call
pusha
cmp
bt
add
jmp
mov
movw
movw
pusha
pushf
mov
pusha
jmp
pushf
mov
mov
jmp
mov
push
push
lea
lea
jb
push
movsbw
jmp
lea
jne
xor
bsf
mov
pusha
and
push
stc
mov
mov
cmp
mov
push
pushf
mov
lea
jne
pusha
rcr
pusha
clc
xorb
lea
movsbl
movsbw
pushf
mov
mov
pushf
pusha
lea
jmp
pushf
push
pushf
mov
push
push
pushl
ret
jmp
jne
bt
cmp
cmc
add
pusha
rol
pusha
jmp
push
pushf
sub
pushf
pushf
pushf
pushf
lea
jmp
call
call
mov
pusha
lea
jmp
stc
mov
mov
jmp
not
stc
pushl
stc
pusha
not
cmc
sub
call
mov
jmp
pushf
call
btr
bt
bsr
mov
cmc
mov
call
jmp
lea
jne
pushf
movzbw
lea
bsr
mov
stc
cmp
and
cmc
cmp
jmp
pushf
mov
pusha
mov
movb
mov
pusha
jmp
mov
pusha
bswap
push
call
stc
neg
mov
sar
sbb
rol
mov
jmp
xchg
pushf
mov
pushl
mov
movl
jmp
lea
jl
push
cld
mov
pushf
pushl
mov
cld
jmp
sub
jmp
mov
jmp
bts
shl
bt
bts
mov
not
pusha
neg
shr
add
push
mov
mov
jmp
jmp
push
push
mov
pushf
pushf
pushf
lea
jmp
push
mov
mov
pushf
popl
jmp
call
add
clc
pushl
popf
pushf
push
movb
pushl
lea
jmp
mov
jmp
jmp
lea
jne
shl
inc
cmc
stc
xorb
push
pusha
mov
mov
movw
pushf
lea
jmp
mov
lea
jge
mov
push
push
push
lea
jmp
movsbw
movsbl
pushf
popl
rol
mov
test
mov
or
movzbw
mov
shl
mov
btc
sub
pop
jmp
mov
jmp
jmp
cmc
xchg
movb
mov
stc
test
sub
pushf
lea
jno
pushf
lea
jne
jmp
and
push
lea
js
pusha
pushl
pushf
popl
pusha
pushl
popl
pushf
lea
jmp
call
stos
inc
add
icebp
inc
add
in
inc
add
out
inc
add
faddl
xor
inc
add
repz
add
hlt
inc
add
fldl
lcall
add
inc
add
int
add
clc
inc
add
inc
add
int
add
cli
inc
add
inc
add
loop
add
int
add
int
add
inc
add
fldl
xor
inc
add
aam
add
cli
inc
add
faddl
ret
inc
add
in
inc
add
inc
add
inc
add
int
add
inc
add
clc
inc
add
loop
add
loop
add
inc
add
add
faddl
clc
icebp
inc
add
jecxz
add
repz
add
loop
add
jecxz
add
loop
add
fildl
jecxz
inc
add
faddl
adc
inc
add
in
inc
add
int
add
loop
add
inc
add
hlt
inc
add
int
add
testb
clc
inc
add
hlt
inc
add
inc
add
faddl
icebp
cli
inc
add
inc
add
clc
inc
add
fiadds
icebp
cli
inc
add
cli
inc
add
int
add
int
add
add
cli
inc
add
fildl
cmp
inc
add
fiaddl
dec
icebp
inc
add
inc
add
fadds
mov
inc
add
hlt
inc
add
fiadds
ret
inc
add
faddl
aaa
cli
inc
add
fldl
stos
roll
jecxz
inc
add
inc
add
hlt
inc
add
fiadds
cwtl
fiadds
mov
inc
add
inc
add
fildl
pop
testb
icebp
inc
add
add
repnz
add
cli
inc
add
hlt
inc
add
testb
testb
out
inc
add
jecxz
add
cli
inc
add
icebp
inc
add
repnz
add
in
inc
add
fildl
xor
inc
add
testb
inc
add
iret
inc
add
loop
add
cli
inc
add
add
clc
inc
add
cli
inc
add
in
inc
add
hlt
inc
add
in
inc
add
clc
inc
add
aam
add
inc
add
repnz
add
testl
fdiv
inc
add
testl
fdiv
inc
add
testl
fdiv
inc
add
testl
fdiv
inc
add
testl
fdiv
inc
add
testl
aaa
cli
inc
add
roll
cli
inc
add
inc
add
testb
in
inc
add
inc
add
int
add
add
jecxz
add
icebp
inc
add
fiadds
mov
inc
add
repnz
add
fadds
jb
inc
add
jecxz
add
int
add
inc
add
cli
inc
add
loop
add
inc
add
inc
add
inc
add
iret
inc
add
add
fadds
int
add
inc
add
clc
inc
add
inc
add
int
add
sti
inc
add
loop
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
inc
add
inc
add
inc
add
clc
inc
add
inc
add
repnz
add
icebp
inc
add
cli
inc
add
faddl
adc
inc
add
dec
add
je
add
adc
pushf
movb
mov
jmp
add
pusha
mov
call
mov
jmp
pushf
inc
clc
clc
call
pushl
popl
pushl
push
lea
jmp
jmp
movl
pushf
push
pushf
pushf
mov
push
movw
pushl
ret
inc
pushf
call
pushf
pushf
mov
movb
lea
jmp
call
sar
rcl
xor
btr
mov
jmp
shl
bsr
movsbw
mov
shld
cmp
add
shl
add
not
inc
bswap
sub
jmp
movb
mov
push
xchg
movzbw
pusha
push
call
pusha
sub
clc
push
mov
call
jmp
cmc
lea
pusha
cmp
movb
lea
ja
setbe
rol
rcl
mov
xadd
rol
lea
adc
sub
clc
lea
stc
shrd
and
inc
sub
rcr
sub
movsbw
movsbl
movzbw
mov
movsbw
pushf
lea
pushf
mov
mov
push
mov
call
jmp
xchg
push
mov
call
mov
jmp
pushf
pushf
mov
pushf
jmp
cwtl
bt
jmp
clc
sub
pushf
call
pusha
mov
push
mov
not
pop
pusha
call
pushl
popl
movb
pushf
push
pushf
lea
jmp
stc
add
pushf
pusha
xor
movl
jmp
call
inc
clc
movl
add
clc
pushf
pushf
sub
call
movb
movb
mov
movb
lea
jmp
call
rol
xorb
pushf
mov
pushf
pushf
pushf
pusha
lea
jmp
shl
pushf
jmp
pushl
popl
mov
pushf
pusha
lea
jmp
call
push
mov
pushf
mov
mov
mov
pushf
pushl
push
lea
jmp
push
push
mov
jmp
mov
mov
pushf
lea
jmp
mov
push
lea
jmp
push
pusha
sub
mov
jmp
mov
call
mov
pushf
inc
stc
pushf
pushl
call
pushl
mov
mov
call
lea
test
sub
push
lea
jmp
push
not
inc
shl
shrd
xor
and
xor
pop
inc
dec
movzbl
movzbl
pusha
mov
pusha
jmp
pushl
mov
pushf
lea
jle
push
pushf
popl
pusha
pushl
popl
pushl
movb
lea
jmp
pushl
popl
pusha
lea
jmp
shrd
cbtw
test
jmp
clc
mov
cmp
clc
stc
add
pushf
mov
jmp
mov
mov
pushf
pushl
lea
jmp
pushf
popl
movb
mov
movl
pushl
popl
mov
lea
jmp
push
mov
pushf
jmp
xor
pushf
not
cmc
sub
movb
add
jno
pusha
pusha
cbtw
test
call
shr
bswap
clc
neg
xor
and
jmp
pushl
popl
btr
movl
adc
and
mov
rcl
shl
shl
dec
add
and
movw
bswap
shld
rcr
shl
xor
add
shl
lea
pushf
movb
sub
pusha
push
pushl
push
lea
jmp
cwtl
mov
test
mov
mov
mov
clc
pushf
call
not
movzbl
pushf
popl
push
sar
mov
xor
bsf
shrd
cmc
mov
rcl
shl
inc
pop
mov
clc
rol
pushl
popl
bswap
movl
shrd
mov
rol
movzbl
shld
add
inc
adc
bswap
pushf
bts
xor
rol
cmc
shrd
shr
lea
cmp
test
stc
cmp
sub
pushf
push
pushl
lea
jmp
push
stc
mov
sub
pushf
stc
pusha
cmpl
push
jmp
mov
push
movb
lea
jmp
bts
ror
neg
sub
add
sub
mov
bt
ror
jmp
push
pop
movzbl
mov
pushf
lea
mov
jmp
cmp
sub
bt
movb
call
mov
cmp
test
sub
call
jmp
inc
call
call
pusha
mov
push
movb
call
push
mov
pushf
popl
movl
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
jmp
push
mov
call
push
inc
jmp
rol
pusha
jmp
call
stc
call
movsbw
mov
pusha
push
call
bt
not
cmc
cmp
cmp
pusha
not
mov
clc
cmp
test
and
jmp
pushf
mov
jmp
pusha
call
pusha
mov
push
jmp
shr
xchg
cmc
neg
push
sbb
bswap
or
push
ror
pushl
seta
and
test
push
rol
clc
mov
shl
shrd
add
ror
btr
btc
bsf
bswap
xchg
xor
xchg
mov
movsbl
lea
not
sub
test
mov
xadd
mov
ror
lea
shrd
lea
add
test
btc
rcl
mov
neg
adc
inc
xor
not
rol
call
pushf
popl
btc
mov
shl
shl
jmp
pushl
popl
mov
movb
lea
jmp
mov
stc
add
jmp
call
mov
mov
mov
pushl
pushf
lea
jmp
push
jmp
pushl
mov
mov
pushf
lea
jmp
sub
add
jbe
test
pusha
cmc
mov
clc
stc
sub
pushl
pusha
pushf
lea
jmp
inc
jmp
push
jmp
ror
mov
cmc
jmp
mov
mov
lea
jmp
mov
call
mov
jmp
mov
jmp
pusha
pusha
movsbl
pushf
mov
push
mov
movb
lea
pushf
movb
jmp
cmc
ror
mov
add
cmc
clc
stc
neg
stc
pushf
clc
cmp
sub
bt
cmc
cwtl
test
clc
pushl
test
sub
pushf
jmp
sub
mov
pushf
movl
pushf
sub
pusha
lea
jmp
rcr
mov
cmc
mov
call
inc
jmp
movzbl
pushf
mov
call
sub
aad
aas
mov
ror
movsbw
mov
call
call
movb
mov
movb
lea
jmp
push
pushl
popl
pushf
pushf
pushf
lea
jmp
lea
push
call
sub
bt
bt
call
pushl
jmp
sub
pusha
push
lea
jmp
mov
xor
clc
bt
shrd
mov
sub
btc
pushl
popl
btr
sub
xadd
movl
add
bsr
mov
shl
lea
stc
test
add
bt
bswap
sar
xor
bt
rcl
lea
push
clc
mov
test
sub
pushf
lea
jmp
movzbw
mov
pushf
btc
push
call
pusha
pushl
popf
pushf
lea
jmp
rep
inc
adc
rol
mov
and
mov
mov
pushl
popf
pushf
mov
movl
pushf
lea
jmp
pushf
pushf
popl
push
pushf
pushf
pushf
pushl
popl
pushl
movb
pushf
pushf
lea
jmp
call
call
shld
shrd
add
rdtsc
pusha
push
bt
sub
jmp
push
push
call
pusha
movzbw
mov
mov
pushf
lea
jmp
pushf
call
call
pushf
jmp
lea
bt
pushl
popl
rcr
xadd
movl
sub
push
and
mov
clc
cmc
mov
neg
add
mov
clc
bswap
btc
xor
cmc
mov
xor
lea
call
jmp
movzbw
mov
not
bswap
pushf
popl
shrd
xchg
bswap
pushf
or
mov
clc
neg
not
mov
adc
add
pushl
rcr
push
call
rcr
mov
stc
call
call
neg
stc
clc
clc
mov
add
stc
cmp
bt
test
mov
jmp
lea
aad
pusha
mov
test
bt
test
test
add
movb
call
cmp
sub
lea
jb
pusha
mov
pusha
pushf
pushf
pushl
ret
inc
jmp
cmc
test
bt
sub
pushf
mov
push
pushf
lea
jmp
mov
pusha
push
mov
call
call
sub
test
pushf
mov
mov
sub
call
call
dec
bt
mov
movb
pushf
rol
jmp
jmp
call
btc
pushl
popl
pop
jmp
mov
push
pushf
movzbw
lea
mov
pop
pushf
popl
bts
xchg
movzbl
bt
movw
mov
bt
mov
bt
pushl
popl
shl
sar
pushf
xor
movl
neg
cmp
xchg
mov
pushf
movsbw
add
bswap
rol
cmc
bswap
call
call
jmp
pushf
pop
mov
not
push
call
pushl
mov
rcr
shrd
add
mov
bsr
rol
xchg
pushl
popl
movsbw
movl
xadd
test
bt
shl
mov
cmp
pushf
add
mov
shld
shl
clc
bswap
not
xor
rcr
cmc
movzbl
mov
lea
cmp
bt
call
call
xor
pushf
call
push
jmp
cmc
bt
sub
test
test
add
js
pusha
push
pushf
popl
jmp
pusha
mov
push
pusha
mov
setb
not
movzbl
pushf
mov
jmp
call
add
mov
pushf
pushl
bt
rol
jmp
pushf
call
neg
shr
mov
xadd
mov
sub
mov
test
clc
add
stc
shld
push
call
add
cmp
mov
cmc
cmc
pusha
cmc
sub
pushf
shr
call
lea
jg
cpuid
pushf
sub
cmp
cmc
cmpl
pushf
pushf
pushf
mov
pusha
mov
jmp
pusha
pushf
mov
call
push
btc
pushl
ror
jmp
mov
call
cld
jmp
add
jno
bswap
mov
and
lea
rcr
xor
btc
add
pushf
lea
bt
clc
sub
push
push
pusha
pushf
lea
jmp
call
sub
movb
call
inc
test
cmp
cmp
neg
test
add
pusha
mov
stc
sub
jmp
sub
push
pusha
lea
jmp
sub
pusha
push
push
lea
jmp
call
clc
rol
mov
mov
adc
sbb
mov
clc
pushf
bt
add
push
jmp
sub
cmc
pushf
shl
jmp
xadd
pusha
movzbl
shl
add
test
sub
push
rol
rol
not
rol
cmc
bt
movsbw
add
bts
push
movzbw
not
rol
bt
sub
movsbw
mov
mov
movw
jmp
pusha
pushl
mov
pushf
mov
push
pushf
mov
push
lea
je
push
call
inc
pushf
sub
cmc
cmc
call
pushf
popl
jmp
mov
shl
pusha
rol
mov
cmp
jmp
not
mov
call
cmp
add
push
pushf
cmc
shrd
pushl
pushl
pushf
pushf
mov
pushf
push
pushf
popl
push
pushf
pushf
mov
pushl
popl
pushf
mov
lea
jmp
pushf
mov
movb
lea
jmp
push
mov
call
call
pushf
popl
mov
pushl
popl
pushf
push
pushl
push
lea
jmp
pusha
lea
jne
cmp
sub
jle
push
pusha
xchg
mov
pusha
jmp
and
call
setns
mov
cmp
push
pusha
bt
add
mov
call
mov
pushf
movb
pushl
lea
jmp
pushl
jmp
pushl
popl
pusha
push
pushf
mov
lea
jmp
shr
clc
mov
push
pusha
sub
pushl
pushf
pushf
movw
mov
push
pushf
pushf
lea
jmp
pop
lea
call
jmp
call
movl
call
mov
bt
clc
add
pushf
mov
pushl
pushf
lea
jmp
bsf
mov
dec
call
bswap
mov
push
jmp
movw
push
rep
sbb
xor
movsbw
btc
mov
lea
mov
std
cmp
bt
pushl
popf
push
pusha
push
push
lea
jmp
mov
push
push
movb
mov
lea
jmp
pushf
lea
je
test
stc
cmc
call
mov
mov
pushl
jmp
bsf
or
btc
mov
ror
btc
pushl
popf
jmp
bt
add
mov
ror
mov
jmp
test
sub
call
bt
push
cbtw
jmp
mov
mov
pusha
pushf
popl
jmp
sub
jmp
push
pushf
mov
pushl
pushf
pushl
ret
shr
mov
sar
and
bt
mov
pop
neg
btc
rol
mov
clc
jmp
pusha
pusha
add
pushf
push
lea
jmp
mov
mov
lea
jmp
mov
pushf
mov
push
pushf
jmp
lea
pushf
popl
add
movzbw
btc
btr
mov
cmp
mov
xadd
xor
shl
mov
sar
add
btr
pushl
popl
sar
cmp
movl
inc
mov
mov
sub
inc
pushf
add
btr
bt
not
bsr
bswap
shl
cmc
test
xor
cmc
lea
pusha
jmp
cmp
pushf
jmp
