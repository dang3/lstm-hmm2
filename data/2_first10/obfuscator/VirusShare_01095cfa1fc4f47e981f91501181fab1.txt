push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
xor
add
add
add
adc
add
mov
pop
add
adc
add
add
add
add
add
fsubl
lret
cmc
and
and
outsl
outsl
outsl
outsl
add
add
mov
add
add
add
add
add
add
add
orb
add
addb
addb
add
mov
add
add
add
add
sldt
push
sldt
nop
add
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
add
addb
add
mov
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cwtl
pop
add
add
mov
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
adc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
ds
add
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
pop
add
pop
add
pop
add
pop
add
add
add
lods
mov
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
mov
or
sbb
shrl
or
xor
popa
jne
hlt
lcall
pop
stc
ljmp
push
pop
daa
jp
cli
daa
push
xchg
in
pop
gs
pop
xorb
scas
xchg
dec
xchg
mov
xlat
arpl
loop
call
adc
adc
sbb
mov
mov
fdivrs
sub
inc
cmp
divl
sub
lcall
popa
jae
pushf
xchg
dec
or
jge
dec
cmp
add
mov
inc
jno
mov
mov
push
dec
fstps
fs
iret
out
int
test
shl
dec
repz
pop
xchg
mov
pop
mov
push
push
or
testl
xor
pop
jge
lret
push
mov
xchg
cmpsl
dec
xor
and
repz
daa
xchg
push
jbe
xor
in
dec
test
mov
clc
xchg
xor
and
movsl
mov
push
bound
shll
repnz
dec
push
pop
pop
and
or
mov
push
lea
and
mov
fwait
mov
add
sbbl
inc
xor
push
pushf
dec
add
sub
adc
aas
sti
xchg
rcrl
dec
mov
fdivp
daa
out
push
adcb
push
or
out
pop
aad
cld
or
xor
das
push
insb
dec
xchg
es
popl
and
cmpsb
jo
ds
sub
cli
xchg
loop
add
movb
js
jge
lods
lret
push
push
popa
in
push
pop
mov
xchg
sub
xor
arpl
hlt
addl
jbe
push
mov
and
fidivs
sub
adc
jmp
lahf
adc
ljmp
mov
push
ljmp
test
ja
pushf
out
push
adc
sbb
xor
pusha
sarl
mov
jno
repnz
jae
pop
xor
and
jl
xor
enter
ret
call
stos
sbb
hlt
mov
xchg
and
or
enter
jp
mov
loop
add
das
and
in
mov
movb
dec
imul
mov
sti
mov
sahf
insb
inc
xchg
sarl
pop
cmp
push
sahf
hlt
les
dec
xchg
push
mov
jbe
das
popa
mov
cs
popa
jae
mov
sbb
mov
sub
pop
inc
mov
ret
shrl
shl
insb
dec
mov
mov
adc
stos
cmp
push
xor
jl
xor
sbbb
test
insl
sbb
cmc
je
inc
loop
mov
mov
ljmp
mov
decl
lds
fbstp
and
sbb
pop
leave
jp
pop
or
call
int3
out
xor
mov
enter
sbb
into
and
rcl
adcb
shll
and
xchg
imul
mov
mov
push
mov
fisttpl
stos
jbe
cmc
adc
ja
test
xchg
xchg
sahf
je
xchg
fcmovnbe
lds
push
icebp
mov
aam
das
imul
movsb
outsb
jb
dec
movsl
in
ds
imul
add
cltd
or
insl
mov
inc
mov
mov
out
xor
inc
adc
xor
sahf
aas
daa
int3
out
icebp
inc
ds
mov
fsubrs
mov
out
repz
fcomip
sti
xor
stc
pusha
sbb
sub
int
xchg
js
or
loop
xchg
movsb
lahf
cmp
mov
push
mov
pop
stos
call
int3
jbe
jecxz
imul
pop
adcl
enter
stos
jns
add
push
jp
aam
roll
push
xlat
xor
test
rorl
sti
mov
mov
arpl
cld
nop
out
dec
adc
or
div
adc
repz
sbb
ds
add
mov
and
sbbb
insl
xchg
mov
push
push
inc
insb
pop
enter
bound
xchg
imul
outsb
sbb
ret
dec
jo
lds
lods
sbb
sahf
jne
and
cli
xchg
lock
jo
xchg
cmc
sbb
int3
fimuls
pop
in
cmpb
daa
push
inc
push
and
pop
imul
insb
pop
push
adc
adc
jle
push
cmp
or
loopne
cmpsl
cmpl
mov
mov
jb
and
and
add
lcall
test
mov
xchg
lods
test
jl
jno
fs
scas
rorl
les
xchg
push
mov
repnz
fs
fcoms
sete
cmpl
and
test
daa
jle
push
jecxz
hlt
into
jmp
loopne
sbb
aaa
into
lds
leave
lea
dec
mov
pop
push
jg
adc
movsb
dec
das
xor
ret
dec
in
and
jmp
lods
adc
loop
loop
add
sub
jecxz
fmulp
sub
cmc
cmp
inc
xchg
and
daa
xchg
push
mov
int3
ljmp
ret
loop
cld
or
sub
out
in
pop
sbb
xor
stc
xor
pop
cmpsl
mov
push
adc
xchg
repnz
or
int3
dec
mov
dec
clc
out
add
add
mov
add
add
add
add
add
add
add
orb
add
addb
addb
add
mov
add
add
add
add
sldt
push
sldt
nop
add
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
add
addb
add
mov
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cwtl
pop
add
add
mov
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
adc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
ds
add
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
pop
add
pop
add
pop
add
pop
add
add
add
lods
mov
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
mov
or
sbb
shrl
or
xor
popa
jne
hlt
lcall
pop
stc
ljmp
push
pop
daa
jp
cli
daa
push
xchg
in
pop
gs
pop
xorb
scas
xchg
dec
xchg
mov
xlat
arpl
loop
call
adc
adc
sbb
mov
mov
fdivrs
sub
inc
cmp
divl
sub
lcall
popa
jae
pushf
xchg
dec
or
jge
dec
cmp
add
mov
inc
jno
mov
mov
push
dec
fstps
fs
iret
out
int
test
shl
dec
repz
pop
xchg
mov
pop
mov
push
push
or
testl
xor
pop
jge
lret
push
mov
xchg
cmpsl
dec
xor
and
repz
daa
xchg
push
jbe
xor
in
dec
test
mov
clc
xchg
xor
and
movsl
mov
push
bound
shll
repnz
dec
push
pop
pop
and
or
mov
push
lea
and
mov
fwait
mov
add
sbbl
inc
xor
push
pushf
dec
add
sub
adc
aas
sti
xchg
rcrl
dec
mov
fdivp
daa
out
push
adcb
push
or
out
pop
aad
cld
or
xor
das
push
insb
dec
xchg
es
popl
and
cmpsb
jo
ds
sub
cli
xchg
loop
add
movb
js
jge
lods
lret
push
push
popa
in
push
pop
mov
xchg
sub
xor
arpl
hlt
addl
jbe
push
mov
and
fidivs
sub
adc
jmp
lahf
adc
ljmp
mov
push
ljmp
test
ja
pushf
out
push
adc
sbb
xor
pusha
sarl
mov
jno
repnz
jae
pop
xor
and
jl
xor
enter
ret
call
stos
sbb
hlt
mov
xchg
and
or
enter
jp
mov
loop
add
das
and
in
mov
movb
dec
imul
mov
sti
mov
sahf
insb
inc
xchg
sarl
pop
cmp
push
sahf
hlt
les
dec
xchg
push
mov
jbe
das
popa
mov
cs
popa
jae
mov
sbb
mov
sub
pop
inc
mov
ret
shrl
shl
insb
dec
mov
mov
adc
stos
cmp
push
xor
jl
xor
sbbb
test
insl
sbb
cmc
je
inc
loop
mov
mov
ljmp
mov
decl
lds
fbstp
and
sbb
pop
leave
jp
pop
or
call
int3
out
xor
mov
enter
sbb
into
and
rcl
adcb
shll
and
xchg
imul
mov
mov
push
mov
fisttpl
stos
jbe
cmc
adc
ja
test
xchg
xchg
sahf
je
xchg
fcmovnbe
lds
push
icebp
mov
aam
das
imul
movsb
outsb
jb
dec
movsl
in
ds
imul
add
cltd
or
insl
mov
inc
mov
mov
out
xor
inc
adc
xor
sahf
aas
daa
int3
out
icebp
inc
ds
mov
fsubrs
mov
out
repz
fcomip
sti
xor
stc
pusha
sbb
sub
int
xchg
js
or
loop
xchg
movsb
lahf
cmp
mov
push
mov
pop
stos
call
int3
jbe
jecxz
imul
pop
adcl
enter
stos
jns
add
push
jp
aam
roll
push
xlat
xor
test
rorl
sti
mov
mov
arpl
cld
nop
out
dec
adc
or
div
adc
repz
sbb
ds
add
mov
and
sbbb
insl
xchg
mov
push
push
inc
insb
pop
enter
bound
xchg
imul
outsb
sbb
ret
dec
jo
lds
lods
sbb
sahf
jne
and
cli
xchg
lock
jo
xchg
cmc
sbb
int3
fimuls
pop
in
cmpb
daa
push
inc
push
and
pop
imul
insb
pop
push
adc
adc
jle
push
cmp
or
loopne
cmpsl
cmpl
mov
mov
jb
and
and
add
lcall
test
mov
xchg
lods
test
jl
jno
fs
scas
rorl
les
xchg
push
mov
repnz
fs
fcoms
sete
cmpl
and
test
daa
jle
push
jecxz
hlt
into
jmp
loopne
sbb
aaa
into
lds
leave
lea
dec
mov
pop
push
jg
adc
movsb
dec
das
xor
ret
dec
in
and
jmp
lods
adc
loop
loop
add
sub
jecxz
fmulp
sub
cmc
cmp
inc
xchg
and
daa
xchg
push
mov
int3
ljmp
ret
loop
cld
or
sub
out
in
pop
sbb
xor
stc
xor
pop
cmpsl
mov
push
adc
xchg
repnz
or
int3
dec
mov
dec
clc
out
data16
and
mov
and
lret
fcoms
loopne
test
jg
adc
addb
inc
pusha
movsl
push
jecxz
jecxz
sub
cmpsb
push
push
dec
and
pushf
mov
xchg
lahf
fnstenv
scas
out
xor
cli
lcall
pop
pusha
mov
sbb
jl
inc
rorl
mov
and
hlt
bound
mov
adc
stc
push
mov
jl
divl
xchg
adc
cmc
xor
sub
fwait
xorb
test
call
mov
dec
movsl
data16
adc
je
ret
or
jbe
jo
fnstenv
xchg
and
dec
or
mov
cmpsl
pop
pop
sarl
sbb
out
mov
data16
push
add
adc
shl
and
cmp
sub
addr16
sti
sub
jno
push
jnp
dec
mov
addr16
ret
mov
sub
or
stos
ret
cltd
mov
mov
jl
dec
cmp
fucompp
mov
ret
jb
xchg
mov
xchg
and
scas
das
sbb
popa
je
or
aaa
xor
xor
jns,pn
out
inc
aad
sub
insl
and
lods
mov
scas
sub
xor
mov
push
jb
insl
iret
ja
pop
js
addl
sub
popa
jbe
adc
mov
imul
cmp
pop
pushf
lcall
mov
cmp
mov
test
jne
stos
cli
dec
repz
mov
out
mov
rorl
jbe
jo
es
test
leave
xor
mov
inc
je
fwait
mov
out
decb
pop
cmpsb
lcall
mov
aam
or
fistpl
jns
lret
fstps
ljmp
sub
pop
in
jp
test
mov
hlt
pop
stc
ss
mov
xchg
lds
stc
fdivrp
inc
cmpsl
xchg
lcall
stos
out
insb
push
ret
ficoml
xor
test
aaa
add
sbb
dec
xchg
js
adc
out
sub
ror
test
mov
push
and
mov
mov
push
cmc
or
daa
sbb
mov
shlb
out
pusha
in
xchg
mov
mov
lods
fidivrs
mov
mov
cmp
or
shrb
ja
jae
inc
aas
inc
xchg
add
sahf
mov
les
rcr
and
mov
xor
pop
ret
fisttpll
cmp
fstps
sbb
xchg
int
xor
daa
gs
xlat
in
jge
cmpsl
sub
add
xor
aad
adc
pushl
das
xor
mov
xorb
xchg
sbb
cmp
fidivrs
loopne
mov
int
add
mov
cmpb
add
mov
push
loopne
hlt
test
sub
fwait
fs
cmpsl
mov
push
int3
mov
mov
xchg
cltd
nop
jg
or
push
loop
jns
arpl
outsb
mov
fs
cmpsl
mov
es
mov
push
push
orl
imul
inc
rol
pmulhw
mov
.byte
gs
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
.byte
add
add
mov
add
add
add
add
add
add
add
orb
add
addb
addb
add
mov
add
add
add
add
sldt
push
sldt
nop
add
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
add
addb
add
mov
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cwtl
pop
add
add
mov
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
adc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
ds
add
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
pop
add
pop
add
pop
add
pop
add
add
add
lods
mov
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
mov
or
sbb
shrl
or
xor
popa
jne
hlt
lcall
pop
stc
ljmp
push
pop
daa
jp
cli
daa
push
xchg
in
pop
gs
pop
xorb
scas
xchg
dec
xchg
mov
xlat
arpl
loop
call
adc
adc
sbb
mov
mov
fdivrs
sub
inc
cmp
divl
sub
lcall
popa
jae
pushf
xchg
dec
or
jge
dec
cmp
add
mov
inc
jno
mov
mov
push
dec
fstps
fs
iret
out
int
test
shl
dec
repz
pop
xchg
mov
pop
mov
push
push
or
testl
xor
pop
jge
lret
push
mov
xchg
cmpsl
dec
xor
and
repz
daa
xchg
push
jbe
xor
in
dec
test
mov
clc
xchg
xor
and
movsl
mov
push
bound
shll
repnz
dec
push
pop
pop
and
or
mov
push
lea
and
mov
fwait
mov
add
sbbl
inc
xor
push
pushf
dec
add
sub
adc
aas
sti
xchg
rcrl
dec
mov
fdivp
daa
out
push
adcb
push
or
out
pop
aad
cld
or
xor
das
push
insb
dec
xchg
es
popl
and
cmpsb
jo
ds
sub
cli
xchg
loop
add
movb
js
jge
lods
lret
push
push
popa
in
push
pop
mov
xchg
sub
xor
arpl
hlt
addl
jbe
push
mov
and
fidivs
sub
adc
jmp
lahf
adc
ljmp
mov
push
ljmp
test
ja
pushf
out
push
adc
sbb
xor
pusha
sarl
mov
jno
repnz
jae
pop
xor
and
jl
xor
enter
ret
call
stos
sbb
hlt
mov
xchg
and
or
enter
jp
mov
loop
add
das
and
in
mov
movb
dec
imul
mov
sti
mov
sahf
insb
inc
xchg
sarl
pop
cmp
push
sahf
hlt
les
dec
xchg
push
mov
jbe
das
popa
mov
cs
popa
jae
mov
sbb
mov
sub
pop
inc
mov
ret
shrl
shl
insb
dec
mov
mov
adc
stos
cmp
push
xor
jl
xor
sbbb
test
insl
sbb
cmc
je
inc
loop
mov
mov
ljmp
mov
decl
lds
fbstp
and
sbb
pop
leave
jp
pop
or
call
int3
out
xor
mov
enter
sbb
into
and
rcl
adcb
shll
and
xchg
imul
mov
mov
push
mov
fisttpl
stos
jbe
cmc
adc
ja
test
xchg
xchg
sahf
je
xchg
fcmovnbe
lds
push
icebp
mov
aam
das
imul
movsb
outsb
jb
dec
movsl
in
ds
imul
add
cltd
or
insl
mov
inc
mov
mov
out
xor
inc
adc
xor
sahf
aas
daa
int3
out
icebp
inc
ds
mov
fsubrs
mov
out
repz
fcomip
sti
xor
stc
pusha
sbb
sub
int
xchg
js
or
loop
xchg
movsb
lahf
cmp
mov
push
mov
pop
stos
call
int3
jbe
jecxz
imul
pop
adcl
enter
stos
jns
add
push
jp
aam
roll
push
xlat
xor
test
rorl
sti
mov
mov
arpl
cld
nop
out
dec
adc
or
div
adc
repz
sbb
ds
add
mov
and
sbbb
insl
xchg
mov
push
push
inc
insb
pop
enter
bound
xchg
imul
outsb
sbb
ret
dec
jo
lds
lods
sbb
sahf
jne
and
cli
xchg
lock
jo
xchg
cmc
sbb
int3
fimuls
pop
in
cmpb
daa
push
inc
push
and
pop
imul
insb
pop
push
adc
adc
jle
push
cmp
or
loopne
cmpsl
cmpl
mov
mov
jb
and
and
add
lcall
test
mov
xchg
lods
test
jl
jno
fs
scas
rorl
les
xchg
push
mov
repnz
fs
fcoms
sete
cmpl
and
test
daa
jle
push
jecxz
hlt
into
jmp
loopne
sbb
aaa
into
lds
leave
lea
dec
mov
pop
push
jg
adc
movsb
dec
das
xor
ret
dec
in
and
jmp
lods
adc
loop
loop
add
sub
jecxz
fmulp
sub
cmc
cmp
inc
xchg
and
daa
xchg
push
mov
int3
ljmp
ret
loop
cld
or
sub
out
in
pop
sbb
xor
stc
xor
pop
cmpsl
mov
push
adc
xchg
repnz
or
int3
dec
mov
dec
clc
out
data16
and
mov
and
lret
fcoms
loopne
test
jg
adc
addb
inc
pusha
movsl
push
jecxz
jecxz
sub
cmpsb
push
push
dec
and
pushf
mov
xchg
lahf
fnstenv
scas
out
xor
cli
lcall
pop
pusha
mov
sbb
jl
inc
rorl
mov
and
hlt
bound
mov
adc
stc
push
mov
jl
divl
xchg
adc
cmc
xor
sub
fwait
xorb
test
call
mov
dec
movsl
data16
adc
je
ret
or
jbe
jo
fnstenv
xchg
and
dec
or
mov
cmpsl
pop
pop
sarl
sbb
out
mov
data16
push
add
adc
shl
and
cmp
sub
addr16
sti
sub
jno
push
jnp
dec
mov
addr16
ret
mov
sub
or
stos
ret
cltd
mov
mov
jl
dec
cmp
fucompp
mov
ret
jb
xchg
mov
xchg
and
scas
das
sbb
popa
je
or
aaa
xor
xor
jns,pn
out
inc
aad
sub
insl
and
lods
mov
scas
sub
xor
mov
push
jb
insl
iret
ja
pop
js
addl
sub
popa
jbe
adc
mov
imul
cmp
pop
pushf
lcall
mov
cmp
mov
test
jne
stos
cli
dec
repz
mov
out
mov
rorl
jbe
jo
es
test
leave
xor
mov
inc
je
fwait
mov
out
decb
pop
cmpsb
lcall
mov
aam
or
fistpl
jns
lret
fstps
ljmp
sub
pop
in
jp
test
mov
hlt
pop
stc
ss
mov
xchg
lds
stc
fdivrp
inc
cmpsl
xchg
lcall
stos
out
insb
push
ret
ficoml
xor
test
aaa
add
sbb
dec
xchg
js
adc
out
sub
ror
test
mov
push
and
mov
mov
push
cmc
or
daa
sbb
mov
shlb
out
pusha
in
xchg
mov
mov
lods
fidivrs
mov
mov
cmp
or
shrb
ja
jae
inc
aas
inc
xchg
add
sahf
mov
les
rcr
and
mov
xor
pop
ret
fisttpll
cmp
fstps
sbb
xchg
int
xor
daa
gs
xlat
in
jge
cmpsl
sub
add
xor
aad
adc
pushl
das
xor
mov
xorb
xchg
sbb
cmp
fidivrs
loopne
mov
int
add
mov
cmpb
add
mov
push
loopne
hlt
test
sub
fwait
fs
cmpsl
mov
push
int3
mov
mov
xchg
cltd
nop
jg
or
push
loop
jns
arpl
outsb
mov
fs
cmpsl
mov
es
mov
push
push
orl
imul
inc
rol
pmulhw
mov
adc
or
jae
inc
push
fisttps
dec
and
stos
or
clc
jp
test
push
inc
iret
je
leave
adc
cmp
insl
mov
xchg
sub
add
test
in
ljmp
mov
imul
loop
push
mov
ljmp
adc
popf
inc
aad
push
pop
mov
or
cmc
dec
add
insb
xor
popa
jbe
push
lods
daa
cmp
sti
fwait
scas
inc
ds
jae
mov
pop
push
and
clc
mov
and
arpl
mov
inc
outsl
xor
pop
inc
mov
orb
mov
ret
adc
cmc
mov
pusha
xorb
and
out
fwait
pop
inc
dec
sahf
adcb
into
outsl
imul
in
outsb
repnz
lahf
jbe
push
clc
movsl
lcall
ret
xchg
and
and
les
inc
icebp
hlt
pop
test
add
cmp
scas
ds
mov
or
aam
insb
std
rolb
jo
xchg
mov
ss
int
sub
xor
not
test
fs
add
loop
sti
dec
push
xchg
call
loop
xchg
push
jmp
xchg
push
scas
mov
lds
nop
scas
scas
jmp
push
daa
fld1
into
fldenv
out
lock
pop
sub
dec
out
adc
xchg
dec
inc
dec
std
mov
test
shlb
inc
cmpb
iret
push
test
aam
faddl
or
lods
shl
add
cmp
sbb
pop
sbb
xchg
xchg
add
fisubrs
int3
pop
xor
in
addr16
sub
jb
and
lock
cmc
mov
fwait
and
lods
jecxz
dec
inc
fsubl
fidivl
or
xchg
nop
loop
stos
ja
ds
call
xchg
inc
sbbb
ja
into
mov
pushf
mov
mov
adc
insl
lret
xlat
dec
test
ror
fstps
lds
je
ds
sub
xor
add
popa
sbb
imul
inc
js
mov
xchg
xor
cmpsb
add
mov
mov
jae
sub
mov
and
test
push
jmp
loope
xor
in
xchg
inc
stos
or
inc
fs
imul
mov
lds
xchg
dec
jb
adc
inc
xlat
mov
mov
call
out
in
mov
add
data16
xchg
jbe
lcall
loope
push
jp
push
das
cmp
ja
dec
outsb
lods
dec
es
mov
cmp
std
mov
cmp
andb
es
cmpsl
fdiv
sahf
push
rorb
push
push
push
enter
jle
xchg
adc
lcall
dec
adc
movsl
xchg
mov
adc
dec
mov
int3
xlat
or
movb
out
fsubp
stc
aad
and
pop
push
and
mov
lret
decb
cld
sbb
or
jle
xchg
je
mov
je
inc
dec
add
sbb
hlt
sbb
es
adc
cmp
push
out
adc
cmp
mov
or
jnp
shrb
push
fdivrl
pop
iret
dec
lods
push
fwait
dec
push
mov
xchg
add
inc
mov
sbb
jb
popf
popf
fsubr
adc
gs
rcrb
xchg
add
jno
outsl
jbe
out
mov
or
enter
cmp
js
insb
aad
jecxz
push
sar
xchg
cmp
xchg
and
mov
jp
xchg
into
int3
jmp
dec
out
add
sub
addl
rcl
mov
leave
sbb
cmpl
and
neg
enter
xchg
cmpsl
out
adcl
xor
in
scas
lea
mov
mov
sbbb
cmc
data16
outsw
ret
lret
movsbl
mov
repnz
in
cld
loopne
pop
int3
sahf
jno
push
mulb
imul
mov
jnp
or
and
and
mov
sti
add
dec
mov
shrb
call
jo
std
cli
gs
dec
movsl
pop
lods
leave
jns
imul
inc
push
sub
mov
sti
out
add
inc
sub
pop
std
push
pop
cmovle
fs
cld
dec
ficomps
adc
into
shr
mov
xchg
shll
stos
popf
push
ss
mov
clc
pop
push
mov
rcr
je
adc
es
test
lret
adcl
sbb
lea
movsb
sbbb
imul
push
xor
and
xorl
lret
push
cli
fdivs
jl
pop
movb
dec
sub
lea
xor
jg
push
lahf
add
movsb
mov
and
mov
imulb
iret
push
adc
incl
pop
adc
in
sti
mov
and
mov
and
push
or
rcll
sahf
cmpsb
cmp
insb
inc
push
inc
enter
jmp
das
gs
rcll
mov
push
call
fmull
loopne
mov
inc
push
cmpsl
jae
push
push
push
add
xchg
loope
aad
lcall
mov
jbe
fisubl
or
lret
dec
cmc
and
adc
xchg
inc
push
insl
fmul
test
push
push
jae
sub
pop
xchg
fadd
ret
mov
inc
cmpsb
xor
sub
dec
dec
xchg
inc
mov
push
stos
dec
mov
inc
test
inc
in
in
mov
shrb
in
rcrb
stc
xlat
sub
fsubrp
cmp
lds
cmp
xchg
ud0
cltd
push
xlat
lcall
cmp
in
out
cmp
das
xchg
iret
jecxz
mov
dec
in
push
mov
sahf
pop
push
andl
jge
hlt
push
lds
add
inc
add
cmpsl
cmp
inc
rcll
lods
ret
lcall
clc
xchg
shrb
add
dec
jb
lret
cld
add
inc
mov
ret
xor
inc
mov
cmp
or
xor
sub
fcoms
loop
js
cs
cmp
mov
mov
xor
sub
fsts
loop
mov
xor
add
push
sub
pop
data16
out
inc
pop
mov
xor
sub
aad
imul
xchg
cmpsl
xchg
insb
ffree
mov
je
bound
sbb
ja
push
cmp
jl
in
xchg
icebp
aaa
jmp
cltd
push
sub
movsb
arpl
inc
jns
test
pop
jg
jbe
ffreep
pop
adc
sbb
xor
dec
or
test
dec
xchg
adc
das
btl
daa
sub
or
divl
out
faddp
rcl
dec
test
roll
jle
imul
cwtl
popa
call
mulb
cmp
fimull
and
out
nop
cmp
mov
inc
inc
add
xor
pop
add
lret
in
fldcw
insl
push
scas
adc
bound
xchg
xor
sti
pop
add
add
lods
lods
sub
mov
or
repnz
nop
enter
push
jge
into
or
mov
jns
xchg
or
sarl
js
adc
adc
stos
test
push
mov
lds
in
dec
and
jo
adc
js
sbb
inc
hlt
scas
shl
xor
fcoms
shll
int3
into
sub
daa
cmp
fsubrs
xor
pop
lock
sbb
mov
ds
xchg
arpl
insl
xor
iret
pop
jo
addr16
mov
pop
aas
adc
fsubrs
int
xchg
icebp
int
in
jb
dec
xchg
sbb
inc
jb
icebp
push
and
repnz
xchg
push
pop
out
mov
mov
lods
inc
std
push
ret
inc
aad
or
sbb
inc
adc
leave
imul
xchg
mov
or
in
or
movsl
sub
sbb
push
xchg
loopne
jo
js
pop
movsb
roll
pop
jecxz
mov
pop
mov
adc
add
in
rclb
mov
aas
inc
cltd
pop
out
pop
je
out
in
jo
push
cmp
and
xchg
jns
fimull
aad
sbb
push
mov
jle
outsb
iret
shll
jmp
insb
cwtl
and
pop
inc
in
jmp
pop
xchg
in
mov
cmpb
pop
test
flds
mov
dec
loopne
repnz
stos
adc
sub
inc
cmpsl
push
jl
mov
pop
mov
insb
imul
dec
lock
andl
pop
pop
xchg
lret
fcoms
lods
mov
dec
xchg
xchg
sub
xchg
sbb
xchg
ja
sub
nop
adcb
fstpl
addr16
mov
mov
jp,pn
mov
sbb
jge
es
out
push
dec
popa
ss
aam
fistps
mov
mov
shl
push
insb
xor
call
in
cwtl
cwtl
sbb
sti
ja
xchg
mov
jno
sub
cmc
clc
faddl
inc
jmp
hlt
data16
insb
scas
in
imul
jno
mov
lahf
push
xor
sbb
test
loope
enter
or
and
cmp
pop
jnp
shll
lret
xor
dec
loopne
sbb
jo
cld
mov
sbb
mov
and
fists
jecxz
add
aad
dec
mov
in
je
fisttpl
lock
scas
mov
in
popa
sahf
xchg
mov
mov
jmp
dec
or
pop
push
shl
ss
and
jnp
.byte
xchg
.byte
movsb
pop
add
add
mov
add
add
add
add
add
add
add
orb
add
addb
addb
add
mov
add
add
add
add
sldt
push
sldt
nop
add
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
add
addb
add
mov
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cwtl
pop
add
add
mov
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
adc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
ds
add
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
pop
add
pop
add
pop
add
pop
add
add
add
lods
mov
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
mov
or
sbb
shrl
or
xor
popa
jne
hlt
lcall
pop
stc
ljmp
push
pop
daa
jp
cli
daa
push
xchg
in
pop
gs
pop
xorb
scas
xchg
dec
xchg
mov
xlat
arpl
loop
call
adc
adc
sbb
mov
mov
fdivrs
sub
inc
cmp
divl
sub
lcall
popa
jae
pushf
xchg
dec
or
jge
dec
cmp
add
mov
inc
jno
mov
mov
push
dec
fstps
fs
iret
out
int
test
shl
dec
repz
pop
xchg
mov
pop
mov
push
push
or
testl
xor
pop
jge
lret
push
mov
xchg
cmpsl
dec
xor
and
repz
daa
xchg
push
jbe
xor
in
dec
test
mov
clc
xchg
xor
and
movsl
mov
push
bound
shll
repnz
dec
push
pop
pop
and
or
mov
push
lea
and
mov
fwait
mov
add
sbbl
inc
xor
push
pushf
dec
add
sub
adc
aas
sti
xchg
rcrl
dec
mov
fdivp
daa
out
push
adcb
push
or
out
pop
aad
cld
or
xor
das
push
insb
dec
xchg
es
popl
and
cmpsb
jo
ds
sub
cli
xchg
loop
add
movb
js
jge
lods
lret
push
push
popa
in
push
pop
mov
xchg
sub
xor
arpl
hlt
addl
jbe
push
mov
and
fidivs
sub
adc
jmp
lahf
adc
ljmp
mov
push
ljmp
test
ja
pushf
out
push
adc
sbb
xor
pusha
sarl
mov
jno
repnz
jae
pop
xor
and
jl
xor
enter
ret
call
stos
sbb
hlt
mov
xchg
and
or
enter
jp
mov
loop
add
das
and
in
mov
movb
dec
imul
mov
sti
mov
sahf
insb
inc
xchg
sarl
pop
cmp
push
sahf
hlt
les
dec
xchg
push
mov
jbe
das
popa
mov
cs
popa
jae
mov
sbb
mov
sub
pop
inc
mov
ret
shrl
shl
insb
dec
mov
mov
adc
stos
cmp
push
xor
jl
xor
sbbb
test
insl
sbb
cmc
je
inc
loop
mov
mov
ljmp
mov
decl
lds
fbstp
and
sbb
pop
leave
jp
pop
or
call
int3
out
xor
mov
enter
sbb
into
and
rcl
adcb
shll
and
xchg
imul
mov
mov
push
mov
fisttpl
stos
jbe
cmc
adc
ja
test
xchg
xchg
sahf
je
xchg
fcmovnbe
lds
push
icebp
mov
aam
das
imul
movsb
outsb
jb
dec
movsl
in
ds
imul
add
cltd
or
insl
mov
inc
mov
mov
out
xor
inc
adc
xor
sahf
aas
daa
int3
out
icebp
inc
ds
mov
fsubrs
mov
out
repz
fcomip
sti
xor
stc
pusha
sbb
sub
int
xchg
js
or
loop
xchg
movsb
lahf
cmp
mov
push
mov
pop
stos
call
int3
jbe
jecxz
imul
pop
adcl
enter
stos
jns
add
push
jp
aam
roll
push
xlat
xor
test
rorl
sti
mov
mov
arpl
cld
nop
out
dec
adc
or
div
adc
repz
sbb
ds
add
mov
and
sbbb
insl
xchg
mov
push
push
inc
insb
pop
enter
bound
xchg
imul
outsb
sbb
ret
dec
jo
lds
lods
sbb
sahf
jne
and
cli
xchg
lock
jo
xchg
cmc
sbb
int3
fimuls
pop
in
cmpb
daa
push
inc
push
and
pop
imul
insb
pop
push
adc
adc
jle
push
cmp
or
loopne
cmpsl
cmpl
mov
mov
jb
and
and
add
lcall
test
mov
xchg
lods
test
jl
jno
fs
scas
rorl
les
xchg
push
mov
repnz
fs
fcoms
sete
cmpl
and
test
daa
jle
push
jecxz
hlt
into
jmp
loopne
sbb
aaa
into
lds
leave
lea
dec
mov
pop
push
jg
adc
movsb
dec
das
xor
ret
dec
in
and
jmp
lods
adc
loop
loop
add
sub
jecxz
fmulp
sub
cmc
cmp
inc
xchg
and
daa
xchg
push
mov
int3
ljmp
ret
loop
cld
or
sub
out
in
pop
sbb
xor
stc
xor
pop
cmpsl
mov
push
adc
xchg
repnz
or
int3
dec
mov
dec
clc
out
data16
and
mov
and
lret
fcoms
loopne
test
jg
adc
addb
inc
pusha
movsl
push
jecxz
jecxz
sub
cmpsb
push
push
dec
and
pushf
mov
xchg
lahf
fnstenv
scas
out
xor
cli
lcall
pop
pusha
mov
sbb
jl
inc
rorl
mov
and
hlt
bound
mov
adc
stc
push
mov
jl
divl
xchg
adc
cmc
xor
sub
fwait
xorb
test
call
mov
dec
movsl
data16
adc
je
ret
or
jbe
jo
fnstenv
xchg
and
dec
or
mov
cmpsl
pop
pop
sarl
sbb
out
mov
data16
push
add
adc
shl
and
cmp
sub
addr16
sti
sub
jno
push
jnp
dec
mov
addr16
ret
mov
sub
or
stos
ret
cltd
mov
mov
jl
dec
cmp
fucompp
mov
ret
jb
xchg
mov
xchg
and
scas
das
sbb
popa
je
or
aaa
xor
xor
jns,pn
out
inc
aad
sub
insl
and
lods
mov
scas
sub
xor
mov
push
jb
insl
iret
ja
pop
js
addl
sub
popa
jbe
adc
mov
imul
cmp
pop
pushf
lcall
mov
cmp
mov
test
jne
stos
cli
dec
repz
mov
out
mov
rorl
jbe
jo
es
test
leave
xor
mov
inc
je
fwait
mov
out
decb
pop
cmpsb
lcall
mov
aam
or
fistpl
jns
lret
fstps
ljmp
sub
pop
in
jp
test
mov
hlt
pop
stc
ss
mov
xchg
lds
stc
fdivrp
inc
cmpsl
xchg
lcall
stos
out
insb
push
ret
ficoml
xor
test
aaa
add
sbb
dec
xchg
js
adc
out
sub
ror
test
mov
push
and
mov
mov
push
cmc
or
daa
sbb
mov
shlb
out
pusha
in
xchg
mov
mov
lods
fidivrs
mov
mov
cmp
or
shrb
ja
jae
inc
aas
inc
xchg
add
sahf
mov
les
rcr
and
mov
xor
pop
ret
fisttpll
cmp
fstps
sbb
xchg
int
xor
daa
gs
xlat
in
jge
cmpsl
sub
add
xor
aad
adc
pushl
das
xor
mov
xorb
xchg
sbb
cmp
fidivrs
loopne
mov
int
add
mov
cmpb
add
mov
push
loopne
hlt
test
sub
fwait
fs
cmpsl
mov
push
int3
mov
mov
xchg
cltd
nop
jg
or
push
loop
jns
arpl
outsb
mov
fs
cmpsl
mov
es
mov
push
push
orl
imul
inc
rol
pmulhw
mov
adc
or
jae
inc
push
fisttps
dec
and
stos
or
clc
jp
test
push
inc
iret
je
leave
adc
cmp
insl
mov
xchg
sub
add
test
in
ljmp
mov
imul
loop
push
mov
ljmp
adc
popf
inc
aad
push
pop
mov
or
cmc
dec
add
insb
xor
popa
jbe
push
lods
daa
cmp
sti
fwait
scas
inc
ds
jae
mov
pop
push
and
clc
mov
and
arpl
mov
inc
outsl
xor
pop
inc
mov
orb
mov
ret
adc
cmc
mov
pusha
xorb
and
out
fwait
pop
inc
dec
sahf
adcb
into
outsl
imul
in
outsb
repnz
lahf
jbe
push
clc
movsl
lcall
ret
xchg
and
and
les
inc
icebp
hlt
pop
test
add
cmp
scas
ds
mov
or
aam
insb
std
rolb
jo
xchg
mov
ss
int
sub
xor
not
test
fs
add
loop
sti
dec
push
xchg
call
loop
xchg
push
jmp
xchg
push
scas
mov
lds
nop
scas
scas
jmp
push
daa
fld1
into
fldenv
out
lock
pop
sub
dec
out
adc
xchg
dec
inc
dec
std
mov
test
shlb
inc
cmpb
iret
push
test
aam
faddl
or
lods
shl
add
cmp
sbb
pop
sbb
xchg
xchg
add
fisubrs
int3
pop
xor
in
addr16
sub
jb
and
lock
cmc
mov
fwait
and
lods
jecxz
dec
inc
fsubl
fidivl
or
xchg
nop
loop
stos
ja
ds
call
xchg
inc
sbbb
ja
into
mov
pushf
mov
mov
adc
insl
lret
xlat
dec
test
ror
fstps
lds
je
ds
sub
xor
add
popa
sbb
imul
inc
js
mov
xchg
xor
cmpsb
add
mov
mov
jae
sub
mov
and
test
push
jmp
loope
xor
in
xchg
inc
stos
or
inc
fs
imul
mov
lds
xchg
dec
jb
adc
inc
xlat
mov
mov
call
out
in
mov
add
data16
xchg
jbe
lcall
loope
push
jp
push
das
cmp
ja
dec
outsb
lods
dec
es
mov
cmp
std
mov
cmp
andb
es
cmpsl
fdiv
sahf
push
rorb
push
push
push
enter
jle
xchg
adc
lcall
dec
adc
movsl
xchg
mov
adc
dec
mov
int3
xlat
or
movb
out
fsubp
stc
aad
and
pop
push
and
mov
lret
decb
cld
sbb
or
jle
xchg
je
mov
je
inc
dec
add
sbb
hlt
sbb
es
adc
cmp
push
out
adc
cmp
mov
or
jnp
shrb
push
fdivrl
pop
iret
dec
lods
push
fwait
dec
push
mov
xchg
add
inc
mov
sbb
jb
popf
popf
fsubr
adc
gs
rcrb
xchg
add
jno
outsl
jbe
out
mov
or
enter
cmp
js
insb
aad
jecxz
push
sar
xchg
cmp
xchg
and
mov
jp
xchg
into
int3
jmp
dec
out
add
sub
addl
rcl
mov
leave
sbb
cmpl
and
neg
enter
xchg
cmpsl
out
adcl
xor
in
scas
lea
mov
mov
sbbb
cmc
data16
outsw
ret
lret
movsbl
mov
repnz
in
cld
loopne
pop
int3
sahf
jno
push
mulb
imul
mov
jnp
or
and
and
mov
sti
add
dec
mov
shrb
call
jo
std
cli
gs
dec
movsl
pop
lods
leave
jns
imul
inc
push
sub
mov
sti
out
add
inc
sub
pop
std
push
pop
cmovle
fs
cld
dec
ficomps
adc
into
shr
mov
xchg
shll
stos
popf
push
ss
mov
clc
pop
push
mov
rcr
je
adc
es
test
lret
adcl
sbb
lea
movsb
sbbb
imul
push
xor
and
xorl
lret
push
cli
fdivs
jl
pop
movb
dec
sub
lea
xor
jg
push
lahf
add
movsb
mov
and
mov
imulb
iret
push
adc
incl
pop
adc
in
sti
mov
and
mov
and
push
or
rcll
sahf
cmpsb
cmp
insb
inc
push
inc
enter
jmp
das
gs
rcll
mov
push
call
fmull
loopne
mov
inc
push
cmpsl
jae
push
push
push
add
xchg
loope
aad
lcall
mov
jbe
fisubl
or
lret
dec
cmc
and
adc
xchg
inc
push
insl
fmul
test
push
push
jae
sub
pop
xchg
fadd
ret
mov
inc
cmpsb
xor
sub
dec
dec
xchg
inc
mov
push
stos
dec
mov
inc
test
inc
in
in
mov
shrb
in
rcrb
stc
xlat
sub
fsubrp
cmp
lds
cmp
xchg
ud0
cltd
push
xlat
lcall
cmp
in
out
cmp
das
xchg
iret
jecxz
mov
dec
in
push
mov
sahf
pop
push
andl
jge
hlt
push
lds
add
inc
add
cmpsl
cmp
inc
rcll
lods
ret
.byte
adc
.byte
data16
add
add
mov
add
add
add
add
add
add
add
orb
add
addb
addb
add
mov
add
add
add
add
sldt
push
sldt
nop
add
cmp
add
mov
sldt
loopne
add
or
add
xor
add
pop
add
addb
add
mov
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
cwtl
pop
add
add
mov
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
adc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
ds
add
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
pop
add
pop
add
pop
add
pop
add
add
add
lods
mov
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
jg
cmc
xchg
mov
or
sbb
shrl
or
xor
popa
jne
hlt
lcall
pop
stc
ljmp
push
pop
daa
jp
cli
daa
push
xchg
in
pop
gs
pop
xorb
scas
xchg
dec
xchg
mov
xlat
arpl
loop
call
adc
adc
sbb
mov
mov
fdivrs
sub
inc
cmp
divl
sub
lcall
popa
jae
pushf
xchg
dec
or
jge
dec
cmp
add
mov
inc
jno
mov
mov
push
dec
fstps
fs
iret
out
int
test
shl
dec
repz
pop
xchg
mov
pop
mov
push
push
or
testl
xor
pop
jge
lret
push
mov
xchg
cmpsl
dec
xor
and
repz
daa
xchg
push
jbe
xor
in
dec
test
mov
clc
xchg
xor
and
movsl
mov
push
bound
shll
repnz
dec
push
pop
pop
and
or
mov
push
lea
and
mov
fwait
mov
add
sbbl
inc
xor
push
pushf
dec
add
sub
adc
aas
sti
xchg
rcrl
dec
mov
fdivp
daa
out
push
adcb
push
or
out
pop
aad
cld
or
xor
das
push
insb
dec
xchg
es
popl
and
cmpsb
jo
ds
sub
cli
xchg
loop
add
movb
js
jge
lods
lret
push
push
popa
in
push
pop
mov
xchg
sub
xor
arpl
hlt
addl
jbe
push
mov
and
fidivs
sub
adc
jmp
lahf
adc
ljmp
mov
push
ljmp
test
ja
pushf
out
push
adc
sbb
xor
pusha
sarl
mov
jno
repnz
jae
pop
xor
and
jl
xor
enter
ret
call
stos
sbb
hlt
mov
xchg
and
or
enter
jp
mov
loop
add
das
and
in
mov
movb
dec
imul
mov
sti
mov
sahf
insb
inc
xchg
sarl
pop
cmp
push
sahf
hlt
les
dec
xchg
push
mov
jbe
das
popa
mov
cs
popa
jae
mov
sbb
mov
sub
pop
inc
mov
ret
shrl
shl
insb
dec
mov
mov
adc
stos
cmp
push
xor
jl
xor
sbbb
test
insl
sbb
cmc
je
inc
loop
mov
mov
ljmp
mov
decl
lds
fbstp
and
sbb
pop
leave
jp
pop
or
call
int3
out
xor
mov
enter
sbb
into
and
rcl
adcb
shll
and
xchg
imul
mov
mov
push
mov
fisttpl
stos
jbe
cmc
adc
ja
test
xchg
xchg
sahf
je
xchg
fcmovnbe
lds
push
icebp
mov
aam
das
imul
movsb
outsb
jb
dec
movsl
in
ds
imul
add
cltd
or
insl
mov
inc
mov
mov
out
xor
inc
adc
xor
sahf
aas
daa
int3
out
icebp
inc
ds
mov
fsubrs
mov
out
repz
fcomip
sti
xor
stc
pusha
sbb
sub
int
xchg
js
or
loop
xchg
movsb
lahf
cmp
mov
push
mov
pop
stos
call
int3
jbe
jecxz
imul
pop
adcl
enter
stos
jns
add
push
jp
aam
roll
push
xlat
xor
test
rorl
sti
mov
mov
arpl
cld
nop
out
dec
adc
or
div
adc
repz
sbb
ds
add
mov
and
sbbb
insl
xchg
mov
push
push
inc
insb
pop
enter
bound
xchg
imul
outsb
sbb
ret
dec
jo
lds
lods
sbb
sahf
jne
and
cli
xchg
lock
jo
xchg
cmc
sbb
int3
fimuls
pop
in
cmpb
daa
push
inc
push
and
pop
imul
insb
pop
push
adc
adc
jle
push
cmp
or
loopne
cmpsl
cmpl
mov
mov
jb
and
and
add
lcall
test
mov
xchg
lods
test
jl
jno
fs
scas
rorl
les
xchg
push
mov
repnz
fs
fcoms
sete
cmpl
and
test
daa
jle
push
jecxz
hlt
into
jmp
loopne
sbb
aaa
into
lds
leave
lea
dec
mov
pop
push
jg
adc
movsb
dec
das
xor
ret
dec
in
and
jmp
lods
adc
loop
loop
add
sub
jecxz
fmulp
sub
cmc
cmp
inc
xchg
and
daa
xchg
push
mov
int3
ljmp
ret
loop
cld
or
sub
out
in
pop
sbb
xor
stc
xor
pop
cmpsl
mov
push
adc
xchg
repnz
or
int3
dec
mov
dec
clc
out
data16
and
mov
and
lret
fcoms
loopne
test
jg
adc
addb
inc
pusha
movsl
push
jecxz
jecxz
sub
cmpsb
push
push
dec
and
pushf
mov
xchg
lahf
fnstenv
scas
out
xor
cli
lcall
pop
pusha
mov
sbb
jl
inc
rorl
mov
and
hlt
bound
mov
adc
stc
push
mov
jl
divl
xchg
adc
cmc
xor
sub
fwait
xorb
test
call
mov
dec
movsl
data16
adc
je
ret
or
jbe
jo
fnstenv
xchg
and
dec
or
mov
cmpsl
pop
pop
sarl
sbb
out
mov
data16
push
add
adc
shl
and
cmp
sub
addr16
sti
sub
jno
push
jnp
dec
mov
addr16
ret
mov
sub
or
stos
ret
cltd
mov
mov
jl
dec
cmp
fucompp
mov
ret
jb
xchg
mov
xchg
and
scas
das
sbb
popa
je
or
aaa
xor
xor
jns,pn
out
inc
aad
sub
insl
and
lods
mov
scas
sub
xor
mov
push
jb
insl
iret
ja
pop
js
addl
sub
popa
jbe
adc
mov
imul
cmp
pop
pushf
lcall
mov
cmp
mov
test
jne
stos
cli
dec
repz
mov
out
mov
rorl
jbe
jo
es
test
leave
xor
mov
inc
je
fwait
mov
out
decb
pop
cmpsb
lcall
mov
aam
or
fistpl
jns
lret
fstps
ljmp
sub
pop
in
jp
test
mov
hlt
pop
stc
ss
mov
xchg
lds
stc
fdivrp
inc
cmpsl
xchg
lcall
stos
out
insb
push
ret
ficoml
xor
test
aaa
add
sbb
dec
xchg
js
adc
out
sub
ror
test
mov
push
and
mov
mov
push
cmc
or
daa
sbb
mov
shlb
out
pusha
in
xchg
mov
mov
lods
fidivrs
mov
mov
cmp
or
shrb
ja
jae
inc
aas
inc
xchg
add
sahf
mov
les
rcr
and
mov
xor
pop
ret
fisttpll
cmp
fstps
sbb
xchg
int
xor
daa
gs
xlat
in
jge
cmpsl
sub
add
xor
aad
adc
pushl
das
xor
mov
xorb
xchg
sbb
cmp
fidivrs
loopne
mov
int
add
mov
cmpb
add
mov
push
loopne
hlt
test
sub
fwait
fs
cmpsl
mov
push
int3
mov
mov
xchg
cltd
nop
jg
or
push
loop
jns
arpl
outsb
mov
fs
cmpsl
mov
es
mov
push
push
orl
imul
inc
rol
pmulhw
mov
adc
or
jae
inc
push
fisttps
dec
and
stos
or
clc
jp
test
push
inc
iret
je
leave
adc
cmp
insl
mov
xchg
sub
add
test
in
ljmp
mov
imul
loop
push
mov
ljmp
adc
popf
inc
aad
push
pop
mov
or
cmc
dec
add
insb
xor
popa
jbe
push
lods
daa
cmp
sti
fwait
scas
inc
ds
jae
mov
pop
push
and
clc
mov
and
arpl
mov
inc
outsl
xor
pop
inc
mov
orb
mov
ret
adc
cmc
mov
pusha
xorb
and
out
fwait
pop
inc
dec
sahf
adcb
into
outsl
imul
in
outsb
repnz
lahf
jbe
push
clc
movsl
lcall
ret
xchg
and
and
les
inc
icebp
hlt
pop
test
add
cmp
scas
ds
mov
or
aam
insb
std
rolb
jo
xchg
mov
ss
int
sub
xor
not
test
fs
add
loop
sti
dec
push
xchg
call
loop
xchg
push
jmp
xchg
push
scas
mov
lds
nop
scas
scas
jmp
push
daa
fld1
into
fldenv
out
lock
pop
sub
dec
out
adc
xchg
dec
inc
dec
std
mov
test
shlb
inc
cmpb
iret
push
test
aam
faddl
or
lods
shl
add
cmp
sbb
pop
sbb
xchg
xchg
add
fisubrs
int3
pop
xor
in
addr16
sub
jb
and
lock
cmc
mov
fwait
and
lods
jecxz
dec
inc
fsubl
fidivl
or
xchg
nop
loop
stos
ja
ds
call
xchg
inc
sbbb
ja
into
mov
pushf
mov
mov
adc
insl
lret
xlat
dec
test
ror
fstps
lds
je
ds
sub
xor
add
popa
sbb
imul
inc
js
mov
xchg
xor
cmpsb
add
mov
mov
jae
sub
mov
and
test
push
jmp
loope
xor
in
xchg
inc
stos
or
inc
fs
imul
mov
lds
xchg
dec
jb
adc
inc
xlat
mov
mov
call
out
in
mov
add
data16
xchg
jbe
lcall
loope
push
jp
push
das
cmp
ja
dec
outsb
lods
dec
es
mov
cmp
std
mov
cmp
andb
es
cmpsl
fdiv
sahf
push
rorb
push
push
push
enter
jle
xchg
adc
lcall
dec
adc
movsl
xchg
mov
adc
dec
mov
int3
xlat
or
movb
out
fsubp
stc
aad
and
pop
push
and
mov
lret
decb
cld
sbb
or
jle
xchg
je
mov
je
inc
dec
add
sbb
hlt
sbb
es
adc
cmp
push
out
adc
cmp
mov
or
jnp
shrb
push
fdivrl
pop
iret
dec
lods
push
fwait
dec
push
mov
xchg
add
inc
mov
sbb
jb
popf
popf
fsubr
adc
gs
rcrb
xchg
add
jno
outsl
jbe
out
mov
or
enter
cmp
js
insb
aad
jecxz
push
sar
xchg
cmp
xchg
and
mov
jp
xchg
into
int3
jmp
dec
out
add
sub
addl
rcl
mov
leave
sbb
cmpl
and
neg
enter
xchg
cmpsl
out
adcl
xor
in
scas
lea
mov
mov
sbbb
cmc
data16
outsw
ret
lret
movsbl
mov
repnz
in
cld
loopne
pop
int3
sahf
jno
push
mulb
imul
mov
jnp
or
and
and
mov
sti
add
dec
mov
shrb
call
jo
std
cli
gs
dec
movsl
pop
lods
leave
jns
imul
inc
push
sub
mov
sti
out
add
inc
sub
pop
std
push
pop
cmovle
fs
cld
dec
ficomps
adc
into
shr
mov
xchg
shll
stos
popf
push
ss
mov
clc
pop
push
mov
rcr
je
adc
es
test
lret
adcl
sbb
lea
movsb
sbbb
imul
push
xor
and
xorl
lret
push
cli
fdivs
jl
pop
movb
dec
sub
lea
xor
jg
push
lahf
add
movsb
mov
and
mov
imulb
iret
push
adc
incl
pop
adc
in
sti
mov
and
mov
and
push
or
rcll
sahf
cmpsb
cmp
insb
inc
push
inc
enter
jmp
das
gs
rcll
mov
push
call
fmull
loopne
mov
inc
push
cmpsl
jae
push
push
push
add
xchg
loope
aad
lcall
mov
jbe
fisubl
or
lret
dec
cmc
and
adc
xchg
inc
push
insl
fmul
test
push
push
jae
sub
pop
xchg
fadd
ret
mov
inc
cmpsb
xor
sub
dec
dec
xchg
inc
mov
push
stos
dec
mov
inc
test
inc
in
in
mov
shrb
in
rcrb
stc
xlat
sub
fsubrp
cmp
lds
cmp
xchg
ud0
cltd
push
xlat
lcall
cmp
in
out
cmp
das
xchg
iret
jecxz
mov
dec
in
push
mov
sahf
pop
push
andl
jge
hlt
push
lds
add
inc
add
cmpsl
cmp
inc
rcll
lods
ret
lcall
clc
xchg
shrb
add
dec
jb
lret
cld
add
inc
mov
ret
xor
inc
mov
cmp
or
xor
sub
fcoms
loop
js
cs
cmp
mov
mov
xor
sub
fsts
loop
mov
xor
add
push
sub
pop
data16
out
inc
pop
mov
xor
sub
aad
imul
xchg
cmpsl
xchg
insb
ffree
mov
je
bound
sbb
ja
push
cmp
jl
in
xchg
icebp
aaa
jmp
cltd
push
sub
movsb
arpl
inc
jns
test
pop
jg
jbe
ffreep
pop
adc
sbb
xor
dec
or
test
dec
xchg
adc
das
btl
daa
sub
or
divl
out
faddp
rcl
dec
test
roll
jle
imul
cwtl
popa
call
mulb
cmp
fimull
and
out
nop
cmp
mov
inc
inc
add
xor
pop
add
lret
in
fldcw
insl
push
scas
adc
bound
xchg
xor
sti
pop
add
add
lods
lods
sub
mov
or
repnz
nop
enter
push
jge
into
or
mov
jns
xchg
or
sarl
js
adc
adc
stos
test
push
mov
lds
in
dec
and
jo
adc
js
sbb
inc
hlt
scas
shl
xor
fcoms
shll
int3
into
sub
daa
cmp
fsubrs
xor
pop
lock
sbb
mov
ds
xchg
arpl
insl
xor
iret
pop
jo
addr16
mov
pop
aas
adc
fsubrs
int
xchg
icebp
int
in
jb
dec
xchg
sbb
inc
jb
icebp
push
and
repnz
xchg
push
pop
out
mov
mov
lods
inc
std
push
ret
inc
aad
or
sbb
inc
adc
leave
imul
xchg
mov
or
in
or
movsl
sub
sbb
push
xchg
loopne
jo
js
pop
movsb
roll
pop
jecxz
mov
pop
mov
adc
add
in
rclb
mov
aas
inc
cltd
pop
out
pop
je
out
in
jo
push
cmp
and
xchg
jns
fimull
aad
sbb
push
mov
jle
outsb
iret
shll
jmp
insb
cwtl
and
pop
inc
in
jmp
pop
xchg
in
mov
cmpb
pop
test
flds
mov
dec
loopne
repnz
stos
adc
sub
inc
cmpsl
push
jl
mov
pop
mov
insb
imul
dec
lock
andl
pop
pop
xchg
lret
fcoms
lods
mov
dec
xchg
xchg
sub
xchg
sbb
xchg
ja
sub
nop
adcb
fstpl
addr16
mov
mov
jp,pn
mov
sbb
jge
es
out
push
dec
popa
ss
aam
fistps
mov
mov
shl
push
insb
xor
call
in
cwtl
cwtl
sbb
sti
ja
xchg
mov
jno
sub
cmc
clc
faddl
inc
jmp
hlt
data16
insb
scas
in
imul
jno
mov
lahf
push
xor
sbb
test
loope
enter
or
and
cmp
pop
jnp
shll
lret
xor
dec
loopne
sbb
jo
cld
mov
sbb
mov
and
fists
jecxz
add
aad
dec
mov
in
je
fisttpl
lock
scas
mov
in
popa
sahf
xchg
mov
mov
jmp
dec
or
pop
push
shl
ss
and
jnp
adcl
mov
jp
pop
or
or
fs
mov
mov
dec
sub
fisubl
movsb
pop
ljmp
sub
xchg
lret
xchg
pop
pop
popf
xor
sbb
rcrb
loop
test
mov
out
fstl
imul
cmpsb
in
adc
into
mov
cmpsl
fs
gs
push
out
sub
imul
pop
hlt
mov
popf
lea
push
adc
cmpsl
lcall
pop
mov
mov
add
je
scas
xchg
cmp
sub
pop
outsb
lret
mov
sar
xchg
push
vaddpd
dec
dec
mov
mov
or
out
inc
in
add
mov
lret
pop
lea
mov
lret
jmp
sub
dec
push
cmp
push
test
push
mov
test
fdivs
dec
and
xor
mov
test
incb
jbe
mov
add
popf
int3
jne
mov
and
pop
jecxz
xchg
dec
and
jne
cltd
jb
push
mov
pop
jp
sbb
fadds
ja
xor
test
xor
lcall
daa
adc
ficompl
ret
sbbb
sub
pop
icebp
loope
mov
shl
cmp
aad
xlat
outsl
adc
std
xor
mov
mov
stos
jae
rcll
and
xchg
popa
inc
mov
daa
out
sbb
xchg
jle
rcrb
mov
adc
sbb
rclb
pop
mov
inc
mov
mov
or
pop
ficompl
and
push
aaa
jecxz
scas
rcll
jg
stos
pop
test
mov
fldcw
jo
xlat
jmp
dec
ret
push
dec
inc
test
mov
jp
xchg
mov
addr16
pop
and
call
in
jl
aaa
fwait
dec
icebp
adc
aam
sub
cmpsl
mov
xor
outsb
add
xlat
push
sub
pop
outsb
xchg
dec
pushf
loope
and
xchg
mov
loopne
test
adc
pop
sahf
sbb
xchg
adc
jg
mov
jns
xor
cltd
mov
mov
pop
and
mov
sbb
pop
jg
minps
push
enter
push
adc
fwait
hlt
adc
aam
xchg
jno
dec
sub
fs
mov
aas
add
pop
nop
mov
mov
mov
cli
add
mov
dec
mov
repz
pusha
insb
ret
pop
lock
dec
daa
sub
addr16
popf
add
push
repnz
dec
sbb
mov
push
pop
fwait
push
add
add
stc
jle
adc
out
xor
pop
xor
mov
cltd
nop
les
push
mov
inc
inc
dec
repz
jns
and
push
into
pop
sbb
fsubs
jb
xchg
and
jbe
imul
int3
and
push
inc
xor
pop
into
jmp
cmp
jae
xchg
rcrb
add
pop
out
outsl
mov
fnstcw
out
lcall
into
mov
pop
mov
fdivrs
lds
sub
pusha
mov
jb
es
std
shl
mov
rorl
pop
and
fldt
adc
cmp
mov
cmp
mov
loope
pop
aaa
in
imul
jge
and
sbb
or
jmp
imul
icebp
into
sti
adc
ret
jmp
xchg
jle
mov
push
ret
insl
decl
lods
and
imul
out
ret
js
inc
pop
insb
arpl
add
rclb
pop
daa
lret
mov
jb
add
rolb
mov
xchg
roll
sbb
adc
rcrl
mov
mov
daa
sub
pusha
xchg
jmp
dec
sbb
add
push
cmpsw
add
or
das
jmp
mov
push
or
jge
xchg
std
or
adc
adc
or
sub
movsb
pop
lahf
divb
out
lahf
and
imul
lcall
xor
int
out
mov
push
xor
sar
lods
or
fdiv
push
dec
adc
jae
sub
data16
cmp
adc
cmc
cmp
sbb
xchg
jo
add
aaa
xchg
mov
push
pop
fisttpll
sbb
fdivrs
adc
mov
mov
pop
scas
mov
dec
xor
pop
xor
push
sbb
mov
shll
repnz
icebp
movsb
fisttpl
xchg
wbinvd
sbb
popf
loop
ret
cmp
mov
xchg
push
mov
dec
repz
mov
lods
sbb
lods
pop
std
shll
xor
add
mov
out
push
cmp
ljmp
mov
sub
or
cmpsb
orb
or
test
bnd
enter
pop
movsb
shlb
sbb
test
cs
iret
adc
fldt
jns
and
pop
test
fisubs
inc
mov
insb
xor
loope
and
adc
inc
pop
cmpsl
jo
gs
aam
inc
or
dec
in
mov
clc
jmp
xor
cmp
cs
jecxz
sbb
xor
es
cmpsl
lods
mov
mov
push
mov
loopne
pusha
ret
mov
ficompl
addb
dec
xchg
int3
xchg
sub
pop
cmpsl
test
push
addl
jecxz
jecxz
xchg
imul
dec
adc
cmp
std
xor
es
repz
int3
fstl
out
mov
fwait
arpl
imul
les
xchg
lds
sti
jge
pop
jo
cs
lds
fcmovb
pop
fisttpll
add
xchg
cld
es
and
jno
add
dec
out
xchg
cmpsb
lock
sahf
jle
mov
sub
and
cltd
jns
sub
cltd
cmp
enter
sbb
jb
xor
add
into
jbe
movsl
adc
cli
push
mov
xlat
mov
jno
sti
and
add
bound
mov
push
fmull
sahf
sbb
in
imul
addr16
mov
insb
add
mov
mov
or
mov
inc
dec
dec
insb
sbb
ficompl
sbb
incb
adc
in
mov
jno
adc
nop
sub
mov
test
fcoml
scas
fcmovnb
and
icebp
mov
imul
pusha
sub
xor
inc
leave
scas
sub
sub
in
xchg
or
mov
jae
inc
pop
aam
sti
ret
sbb
negl
je
dec
lea
push
in
jge
lcall
and
testl
inc
imul
sub
fiaddl
mov
jne
jbe
mov
mov
mov
lods
pop
cwtl
cmpsl
test
loop
mov
sbb
jg
pop
mov
out
dec
data16
and
jmp
out
mov
push
pop
sbb
js
mov
cmp
inc
inc
jl
inc
pop
pcmpgtw
rorl
mov
push
jge
cmp
fisubrl
mov
testl
ret
in
pop
add
dec
lahf
mov
sub
in
xchg
sti
sub
mov
xchg
cs
inc
jge
jge
repz
xlat
inc
and
in
enter
jl
outsl
xor
jns
push
outsl
xchg
cli
jg
stos
mov
sbb
add
jne
pop
in
in
lret
sub
cmp
xor
add
lahf
dec
dec
inc
out
inc
lods
add
lds
in
xor
push
xor
adc
faddl
sbb
add
xor
mov
inc
mov
ljmp
enter
push
and
inc
in
mov
imul
loopne
test
adc
jecxz
mov
dec
and
push
mov
xchg
jmp
jg
add
lock
in
cmpsb
fisttpl
and
je
and
jne
sbb
xchg
fmuls
and
mov
fisubrl
inc
xchg
int
std
jg
pop
and
add
ss
push
int
fwait
or
sub
mov
jp
pusha
cmp
add
ret
xor
jns
inc
shlb
shrl
push
aam
xchg
insb
insl
out
sbb
adc
and
daa
mov
ds
mov
enter
daa
stos
into
cwtl
sbb
cmp
imul
loope
xor
enter
xchg
inc
movsl
in
ja
jge
pusha
mov
push
pop
mov
mov
outsb
jae
adc
and
xchg
xorl
std
inc
sbb
mov
orl
mov
cmp
or
pop
out
std
out
test
test
repnz
jmp
jnp
faddl
xchg
mov
insb
jo
and
jns
pusha
pop
add
imul
fldt
shr
mov
mov
inc
popa
mov
xorl
and
mov
pop
and
negl
cmp
popa
frstor
js
dec
push
ficoms
mov
ss
repz
push
cld
pop
in
inc
pop
subl
sti
stos
iret
and
cmpsl
subl
popf
or
aaa
jcxz
jecxz
je
leave
pop
cwtl
lock
jmp
pop
jo
pop
lahf
jae
inc
push
pop
pop
jb
cwtl
add
inc
cli
aad
pop
add
outsb
movsb
xchg
jno
push
stc
dec
lret
sbb
jmp
fsub
cmp
and
jmp
scas
fwait
jecxz
pop
lds
mov
push
xor
push
ret
dec
push
and
mov
je
jne
jge
in
out
mov
icebp
ret
mov
xchg
mov
adc
adc
dec
pop
incb
mov
stc
out
aad
ror
mov
sti
inc
das
movsl
pop
pop
xchg
in
mov
outsb
shll
gs
push
bound
test
pop
mov
out
aaa
mov
shrb
frstor
ljmp
inc
shll
sub
testl
cltd
pop
iret
bound
iret
into
test
cs
das
in
mov
cmp
in
mov
add
leave
test
in
xor
sbb
sub
lret
cmp
shll
ficoml
addb
and
pop
and
jno
mov
lahf
ret
ljmp
dec
imul
cli
xor
sbb
shlb
popa
sti
push
cmp
or
mov
dec
sub
fsubl
xchg
mov
pop
sub
mov
or
jns
aad
push
mov
leave
test
bound
jae
mov
xchg
arpl
cli
inc
shll
sar
xchg
loop
sub
aad
xlat
cmp
xor
xor
sti
test
mov
or
imul
xchg
stos
cmc
faddp
sub
cmp
mov
cs
jno
sbb
jp
leave
lret
jg
jle
mov
lret
rcrl
pop
fsubrp
xchg
gs
aad
outsl
xchg
and
xor
cld
addr16
repnz
call
bound
enter
imul
xchg
xchg
jmp
xor
scas
push
gs
mov
pop
and
push
add
imul
sahf
paddsb
mov
xorb
xchg
xor
push
add
fdivr
imul
sbb
in
ds
mov
xor
subl
popf
mov
cmp
mov
adc
dec
sti
ret
test
or
pushf
fsubl
pop
sti
mov
test
aaa
loope
pop
xor
push
sahf
dec
bound
stos
push
dec
fistpll
pop
fistpll
pop
cmpsl
push
out
push
and
ficoms
sbb
rorb
jbe
push
jne
sub
and
lcall
enter
fs
ds
in
sub
movsl
divb
wrmsr
imul
jno
sub
fdivrl
sbb
mov
mov
rcrl
pusha
dec
inc
mov
jge
inc
aad
call
aas
xchg
roll
cmc
inc
aaa
add
rcll
or
and
iret
fdivrs
jae
pop
fldenv
in
test
flds
xor
rorl
shlb
or
subb
test
daa
scas
cmc
leave
mov
mov
loop
cmp
pop
xlat
popf
fsubs
sbb
mov
hlt
sub
jg
cmpsb
fsts
popa
add
or
adc
push
push
shll
mov
sbb
sbb
xchg
dec
sub
sbb
mov
dec
enter
imul
pop
ret
fldt
mov
adc
xchg
xchg
fstpt
data16
fildl
addr16
inc
in
bound
xchg
insl
sub
imul
sti
and
icebp
popw
jnp
mov
hlt
test
sysexit
insl
jl
jmp
dec
mov
mov
jae
mov
popf
flds
add
test
std
movl
mov
jge
push
lcall
dec
add
cltd
fcoml
mov
pop
add
cli
in
shll
gs
inc
xchg
outsl
or
or
inc
mov
repz
sarl
icebp
adc
add
fsubrs
dec
insb
mov
cld
xchg
or
fldenv
push
out
or
mov
jmp
push
pause
mov
int3
fs
dec
push
jp
adcl
pop
mov
sbb
dec
cmp
cmp
cmc
fs
shl
lods
xor
test
int
jp
pop
pushf
and
sbb
xor
xchg
adc
lahf
mov
iret
rcrb
je
fdivrl
sub
dec
enter
loopne
cmp
clc
mov
dec
outsl
aad
push
mov
les
pop
xor
push
adc
jmp
ljmp
xor
cld
aaa
and
or
xchg
loopne
pop
les
inc
xorb
push
popf
mov
pusha
mov
cmp
add
fldt
and
mov
fdiv
dec
jns
mov
jno
adc
jl
mov
roll
movsl
cmpsb
lret
aad
adc
and
das
addl
and
mov
sub
es
paddq
notl
rcr
and
test
adc
shlb
pop
xlat
mov
mov
addr16
gs
sbb
push
ds
cmpsb
sub
or
push
dec
and
jle
fmuls
es
adc
xchg
fstl
cwtl
pop
jl
and
jns
aam
mov
mov
loopne
and
pop
fidivrl
jecxz
jns
and
pop
fs
jae
cld
push
data16
sar
das
push
or
pop
xorb
xchg
insl
dec
cmp
push
xchg
icebp
cmp
cmpsb
popf
sub
cmp
pop
lcall
jae
ss
rcrl
xlat
fstps
mov
cld
out
enter
fisubl
aam
dec
pusha
lds
cld
sub
lret
sbb
xchg
ret
mov
pop
mov
stos
test
xor
mov
xor
stos
mov
mov
imulb
xor
jl
jg
mov
pop
aad
adcl
cmpsl
mov
pusha
mov
sbb
data16
movl
insl
mov
into
mov
aaa
xlat
xor
add
sbb
sbb
add
push
cmp
lods
jl
dec
popf
push
add
outsl
out
inc
enter
sbb
cwtl
push
test
jns
lods
dec
or
shrl
mov
sub
ret
stc
lcall
out
jne
outsl
loopne
mov
das
les
in
xchg
xchg
pop
sbb
addr16
in
flds
sub
mov
jae
pop
sub
inc
push
int
mov
outsl
jo
pusha
cmp
fildl
aad
lods
jbe
insl
jl
dec
aas
lahf
or
xor
scas
leave
inc
xchg
push
hlt
lret
cmp
hlt
test
add
cltd
andl
cmpsb
scas
movsl
dec
repz
xchg
pop
js
mov
out
aas
jecxz
or
pop
into
fimuls
sbb
or
iret
inc
cmp
rorl
out
mov
cmp
ret
adc
mov
loope
or
xlat
sti
pop
das
adc
lahf
pop
xchg
dec
mov
out
push
mov
add
cmp
push
lods
imul
xchg
ja
mov
cltd
arpl
rolb
add
sub
sahf
xchg
stos
pop
fld1
or
lcall
mov
in
int
mov
je
gs
jmp
outsb
insb
daa
in
add
and
push
mov
push
mov
mov
jb
mov
push
xor
mov
mov
xor
cli
nop
cmove
jmp
std
push
adc
pop
mov
mov
scas
inc
add
in
inc
push
and
sub
stos
cmpsb
leave
jns
incl
fstpl
jg
or
mov
adc
jp
sbb
movsl
repnz
and
dec
frstor
out
std
mov
mov
movsb
xchg
aad
mov
inc
lea
popf
cltd
roll
add
mov
lcall
pop
mov
dec
out
jmp
xchg
inc
ss
xchg
cli
xor
mov
out
dec
std
push
jl
icebp
cmc
xor
jg
in
jne
into
add
jnp
enter
fidivl
sub
xchg
stos
mov
pop
stos
push
mov
inc
in
popa
mov
jno
add
pand
fs
fcompl
ss
ret
push
inc
int
sbb
fisubs
cmpsb
ljmp
pop
fdivrs
fistl
xlat
pop
jae
cli
dec
movsl
iret
mov
pop
lods
movq
data16
mov
popa
sub
mov
xor
pop
cmpsb
mov
add
lcall
pop
mov
loope
jno
in
mov
test
cmp
and
mov
push
or
stc
cltd
cwtl
or
fcom
xor
jl
mov
jno
xor
std
fidivs
cs
add
test
push
lea
push
cmp
cli
mov
es
push
pop
test
repnz
xchg
daa
xor
repz
fyl2x
jle
fwait
push
fdivs
scas
mov
jmp
out
or
pop
jo
mov
sub
mov
dec
mov
shrl
inc
popf
lret
inc
mov
lods
xchg
push
cltd
pop
cmp
xchg
out
fisubrs
movsb
jb
dec
push
es
subb
aaa
mov
mov
adc
mov
aam
nop
ss
inc
mov
cmp
lret
add
gs
lret
aad
testb
subl
sub
popf
cmp
add
dec
imul
mov
xchg
cmp
ret
jp
mov
cmp
push
mov
iret
push
leave
xor
mov
ret
and
sub
fistps
xlat
mov
repnz
aaa
adc
adc
in
test
imul
ficoml
and
jl
int
xlat
cs
imul
inc
sbb
xchg
or
inc
jb
lods
push
cmc
lcall
popf
gs
inc
push
xor
dec
inc
lock
push
mov
in
fdiv
push
xor
call
mov
aaa
sarl
js
jae
push
rcl
xor
loope
test
jbe
movsl
sbb
mov
and
stc
mov
mov
push
add
or
push
xchg
sub
pop
inc
mov
and
aas
or
and
dec
pop
mov
lods
sbb
adcb
or
xor
dec
lahf
hlt
pop
add
mov
mov
xchg
in
push
or
xor
xchg
leave
cmpsb
mov
sar
sbbl
mov
adc
pop
adc
pop
in
lea
int
mov
cmp
arpl
xlat
idivb
adc
dec
repnz
shr
icebp
leave
lret
or
sub
stos
adc
mov
lods
jg
xchg
xor
fs
in
lret
inc
mov
lods
dec
lock
xor
mov
inc
sub
rcll
mov
adc
outsl
xlat
jno
pop
outsb
push
jbe
jmp
and
jns
gs
inc
ds
push
mov
mov
loope
je
lret
pop
sbb
pop
int3
cli
mov
mov
mov
mov
adc
fmuls
aam
das
pop
xor
xchg
decl
sbb
ficompl
decl
jns
xor
mov
mov
pop
dec
mov
cwtl
or
pop
xlat
mov
into
data16
inc
das
lock
add
ret
mov
cmp
mov
push
dec
aam
aas
adc
or
clc
mov
addr16
push
call
lcall
xchg
scas
in
iret
mov
or
mov
ljmp
cmp
scas
icebp
loope
jbe
aam
imul
int3
loopne
xchg
adc
cmc
daa
mov
adc
jb
xor
or
repz
mov
nop
cmc
pop
cmp
call
sub
test
movsb
out
inc
adc
lods
aaa
addr16
jmp
das
test
jge
int3
mov
inc
nop
cmp
outsb
mov
jmp
and
sbb
push
call
adc
out
orb
pop
xchg
je
adcl
or
dec
stos
xchg
sar
xor
into
jo
cmp
aas
jns
pop
xchg
jo,pn
dec
push
aad
mov
cli
mov
jo
sbbl
fstps
xor
cli
pop
sar
popf
push
pop
ss
ret
mov
rorl
push
repnz
fidivrl
push
cmovle
mov
inc
lock
fcoms
jecxz
fimuls
fisubrl
cli
pop
dec
cs
dec
dec
enter
pop
cwtl
aad
jp
cmp
or
cltd
mov
jg
movsb
call
cmp
push
inc
icebp
add
clc
ja
jnp
jnp
inc
and
sahf
mov
leave
dec
pop
adc
bound
popf
sub
call
subl
cmpb
inc
mov
or
cmp
repz
jae
sub
inc
test
repnz
cmp
pop
pop
dec
sbb
and
inc
jl
mov
or
add
in
mov
xchg
xchg
aas
rcrl
and
jge
test
pusha
mov
fistpl
std
lret
ljmp
mov
xchg
xchg
sbb
movsl
fisttpll
bound
and
sub
cltd
mov
mov
sub
pop
outsb
add
dec
out
inc
inc
xor
fs
jecxz
mov
mov
cmp
jmp
and
add
sbb
mov
repz
jmp
adc
adc
pushl
lcall
insb
jg
push
clc
icebp
pop
int3
pop
or
lds
jl
fsubp
or
jo
cmp
or
jge
cmp
sub
sub
jb
mov
ret
cmpsb
test
mov
jmp
push
mov
dec
push
lock
push
cmp
shl
jle
aad
dec
adc
int3
pop
ljmp
cwtl
push
fldl
stos
and
mov
sub
push
cmp
sahf
out
mov
scas
xlat
mov
paddd
aas
jb
jl
loope
fwait
movsb
cli
addb
lods
pop
and
pop
into
lods
int3
inc
adc
jnp
data16
stc
rcl
repnz
sahf
lahf
dec
test
scas
icebp
cwtl
mov
mov
add
jns
out
ds
or
inc
fadds
cs
shrl
dec
fsubs
push
jle
push
or
jle
pop
clc
xchg
popl
mov
mov
mov
stos
mov
pushf
push
shl
xlat
mov
bound
mov
scas
push
das
xchg
sarb
sbb
aaa
sub
sub
out
sub
mov
cmp
imul
movl
adc
sub
push
inc
je
pop
mov
out
jp
je
cmp
sub
iret
jne
ljmp
xlat
sbb
dec
add
inc
mov
sbb
leave
cli
cmp
xlat
lret
sbb
mov
aaa
stos
in
test
cmp
pusha
mov
jmp
push
sub
or
out
ja,pn
addb
loope
fildl
movsb
orb
lret
mov
or
imull
jmp
sub
mov
push
jecxz
inc
repnz
js
mov
fisttpll
mov
jle
in
stos
fs
and
sbbl
add
cmp
arpl
scas
push
cmp
xchg
and
inc
out
mov
cmp
mov
icebp
cmc
jmp
dec
mov
inc
add
mov
sahf
push
shr
jle
cmovno
or
add
lahf
or
cltd
jnp
pop
jge
jb
push
jnp
mov
dec
push
and
popa
dec
jecxz
ret
mov
inc
incb
cmp
push
sub
data16
lahf
cmp
cmp
clc
jns
mov
mov
cmpsl
or
jnp
repz
shrb
push
fdivrs
inc
xchg
stos
stc
inc
sbb
pop
in
xchg
pop
repz
mov
outsb
icebp
xor
inc
xor
xchg
xor
popa
push
andb
or
jge
mov
add
negl
xor
imul
sub
sahf
stos
cmc
adc
inc
testb
mov
in
mov
test
sti
xchg
sub
movsl
sub
cmc
pop
dec
clc
out
or
std
push
xchg
mov
pusha
or
sarl
movsl
mov
inc
or
lea
or
and
jle
dec
add
mov
cmp
aam
cld
pop
add
inc
dec
loop
pop
inc
ds
push
aas
aaa
and
lahf
mov
mov
aam
or
lret
push
addl
dec
shlb
je
push
test
outsb
loopne
mov
int3
add
aam
test
out
sti
or
pop
lret
inc
rorb
add
mov
sub
mov
jnp
jp
adc
dec
sbb
adc
mov
xchg
or
cltd
mov
sarl
xlat
push
lret
inc
adc
loope
imull
xchg
and
jecxz
sub
stos
jp
test
ret
icebp
xchg
popf
sbb
pop
in
cwtl
cmpb
add
lret
and
insb
jecxz
in
xor
inc
mov
arpl
adc
leave
inc
or
shrb
mov
inc
lods
dec
jecxz
mov
pop
loop
dec
add
adc
cmp
jmp
adc
xchg
mov
fwait
ret
mov
mov
sbb
fisttpl
mull
sbb
test
fwait
pop
inc
mov
in
into
sbb
mov
mov
dec
pop
dec
or
mov
out
push
and
pushf
pop
lock
jb
addb
push
clc
pop
push
stos
mov
fbld
xor
inc
adc
icebp
fldt
xchg
cmp
jae
roll
push
dec
or
push
push
fs
and
dec
in
ljmp
loope
stos
movsl
fbstp
xorb
sub
pop
pop
hlt
pop
into
cmp
in
sub
dec
xor
mov
shrl
jno
jnp
inc
xchg
cld
nop
mov
xchg
jmp
in
cmp
inc
push
push
and
xor
fcomip
push
shll
sbb
outsb
aam
ja
mov
adc
inc
add
imul
ja
or
cmpsb
xchg
and
or
aas
mov
push
jmp
jns
jno
int
hlt
xor
sbb
push
mov
add
push
ja
jge
pop
mov
popa
cmpsb
mov
push
stos
mov
rol
or
sar
outsb
add
jge
es
std
jp
mov
incl
in
clc
es
and
jae
outsl
js
jl
add
cmp
into
popa
mov
mov
mov
xor
imulb
jle
aam
cmp
sub
jae
lahf
xchg
mov
enter
or
mov
loope
add
in
outsl
test
ret
out
sbb
and
dec
pop
ret
jae
xor
insb
into
sub
xor
jnp
je
cmpsl
loop
add
gs
fwait
sub
inc
fs
adc
push
add
mov
leave
mov
and
jns
faddl
jle
mov
lods
jno
ljmp
mov
dec
inc
nop
test
pusha
mov
mov
push
mov
xchg
xlat
mov
inc
jnp
and
out
sub
hlt
pop
nop
stos
or
and
push
and
add
inc
push
mov
fbstp
pop
pop
sbb
dec
jo
test
dec
mov
leavew
pop
push
mov
mov
ss
test
dec
adc
cmp
ret
pushf
add
cltd
ret
dec
cmp
aas
int3
fs
ljmp
push
scas
xchg
adc
inc
in
gs
stos
push
in
mov
sbb
enter
movsl
mov
add
ja,pn
and
xchg
push
pushl
fwait
jecxz
mov
sbb
int
pop
mov
dec
ja
imul
pop
xor
inc
pop
movsl
sahf
or
int
enter
xorl
stc
das
icebp
insb
outsl
xchg
push
and
jge
inc
in
imul
add
jo
outsb
insl
movsb
out
lahf
mov
fwait
stc
ljmp
pop
sub
imul
jo
cmpsl
out
sbb
jnp
cmp
adc
push
xchg
sub
cltd
cmc
cmc
ret
mov
fcmovb
pop
das
je
push
xor
or
test
rcrb
and
xchg
cmp
jbe
movsl
add
jae
call
mov
inc
mov
mov
pop
mov
pop
es
xor
xor
pop
inc
lahf
sbb
ret
mov
loopne
out
lret
or
iret
aas
cmp
lahf
int
sbb
cs
jmp
aaa
out
pop
ja
dec
xor
in
push
stc
les
and
cmp
roll
lea
pop
cmpsl
inc
aam
ljmp
mov
loope
out
sbb
pop
and
bound
fdivs
pop
dec
insl
xchg
mov
mov
rclb
dec
pop
mov
out
stos
movl
mov
ja
lret
or
adc
lea
adcb
fdivrs
jo
push
cmpsl
popf
or
scas
jmp
inc
push
je
pop
jno
roll
dec
mov
pop
dec
rcr
mov
inc
push
sub
and
xor
mov
mov
iret
imul
xchg
pop
mov
iret
push
jmp
xorl
push
aaa
fbld
iret
pop
stos
gs
ficompl
fidivrs
rorb
xor
add
or
push
movsb
push
test
add
fsubrp
push
cmpsl
and
cmp
jecxz
repnz
mov
lods
lods
cmc
fldln2
or
lahf
fildll
int3
loope
shll
out
ljmp
push
xor
xorb
lret
xchg
push
add
cmc
cmp
into
and
adcb
sub
in
push
jmp
popa
scas
test
es
shrl
std
or
push
insl
xor
dec
jnp
std
mov
mov
aas
rclb
mov
xor
shlb
vmread
jg
jb
pop
xchg
mov
stos
es
inc
mov
rcl
dec
scas
push
lods
clc
out
dec
cltd
jno
loope
mov
in
pop
mov
movsl
fcoms
xchg
insl
xchg
ljmp
aaa
or
loope
aad
mov
insl
movsb
inc
sti
add
pop
loopne
adc
sub
adc
aas
fidivs
clc
xor
inc
fnsave
sbb
aam
jp
pop
xchg
dec
mov
ret
rorb
xchg
bswap
out
adc
adc
in
nop
adc
imul
lods
push
xchg
push
pushf
adc
adc
ljmp
xor
xlat
in
cmpsl
inc
push
mov
add
js
pop
dec
imul
out
mov
lcall
push
dec
pop
add
int
xor
jno
xchg
add
popa
push
loope
int3
adc
inc
xlat
ret
addr16
es
pushf
rclb
test
dec
xchg
mov
and
mov
repz
pushf
xorl
cmpsl
adc
sbb
outsb
or
pop
jge
and
pop
pop
mov
fidivrl
sub
jmp
inc
xlat
or
xchg
sub
xor
aaa
sub
inc
outsb
aaa
insb
jne
sub
scas
push
mov
pop
cld
xchg
scas
add
jo
push
cmc
pop
fcmovne
fs
mov
es
stos
leave
dec
push
xor
scas
es
mov
aad
je
cmp
cld
inc
aaa
sub
ss
push
dec
fwait
sti
call
pop
and
sub
jmp
push
movsl
cmp
movsb
daa
fcomi
add
mov
inc
insl
sub
jge
pop
mov
push
push
in
fidivrs
dec
lds
xacquire
inc
aam
mov
iret
dec
sbb
sahf
push
inc
add
xor
ljmp
add
aad
rolb
lods
jns
push
mov
insb
mov
mov
fimull
pop
in
mov
push
xor
lods
in
das
outsl
pop
dec
add
out
pop
sub
clc
dec
lea
ret
movsl
mov
pop
xor
in
lret
mov
push
xchg
cmp
out
lret
cmp
inc
pop
stos
fwait
dec
inc
pop
adc
jp
imul
mov
sub
loop
movsb
mov
outsl
xchg
daa
lods
stos
loop
out
jg
lea
das
mov
lret
mov
sub
jb
jns
xorl
and
shlb
push
add
cmp
fs
imul
dec
sbb
inc
jl
movsb
cmp
imull
int3
gs
addr16
xchg
mov
js
ss
sbb
call
inc
mov
xchg
mov
jns
mov
mov
sub
jo
xorl
int
pop
cmp
gs
rcr
dec
in
sub
and
out
ret
shr
mov
sub
mov
mov
jmp
loopne
push
imul
ficomps
scas
jb
mov
push
pop
rorl
loop
jne
imul
out
jne
insl
pop
std
inc
sub
xor
or
push
push
lcall
xor
inc
dec
loope
dec
aaa
inc
mul
rcll
mov
xchg
dec
aas
add
je
jo
jo
js
leave
cmp
pop
jle
in
mov
mov
test
xchg
or
out
dec
inc
ficompl
xorb
in
and
mov
fnstenv
adc
rcll
jecxz
jecxz
rorl
sub
insb
and
mov
add
fst
popf
popa
inc
xor
rcll
jl
js
jb
test
mov
cmp
inc
mov
dec
dec
outsb
outsl
leave
in
aam
push
xchg
pusha
adc
pop
arpl
xor
std
add
dec
daa
jo
mov
mov
inc
inc
push
pop
sahf
add
out
sbb
mov
dec
mov
sbb
add
push
xor
gs
movsb
rcrl
dec
xchg
lea
mov
jge
xor
and
xchg
adc
loope
outsb
adc
mov
std
stc
jae
mov
mov
out
negl
or
mov
aad
inc
out
cmpsb
jne
add
inc
cmc
pop
into
mov
dec
sub
cwtl
inc
in
in
sub
add
roll
iret
and
fnstenv
mov
data16
jo
test
ljmp
shll
shll
cmp
imul
loopne
aad
mov
pop
jmp
mov
inc
add
lods
jae
push
dec
add
mov
pop
lea
pop
testb
icebp
aaa
push
push
test
shlb
or
mov
test
and
push
pop
aaa
rol
imul
adc
mov
jl
test
push
xor
test
repz
pop
adc
ss
daa
push
sub
sub
push
mov
or
icebp
outsl
xlat
test
inc
movsl
aam
cmc
pop
adc
outsb
jno
cmp
lods
sarl
cmp
movsl
int3
stos
mov
lcall
push
dec
pop
push
outsb
cmp
in
mov
dec
popa
mov
into
cmp
sahf
xor
xlat
xor
inc
pxor
and
loopne
pop
divb
ja
rolb
movsl
pop
or
mov
pusha
adc
and
mov
cltd
repnz
add
add
stc
mov
add
imul
pop
cli
push
faddl
add
call
mov
incb
out
xchg
pushf
and
repnz
mov
mov
sub
mov
dec
inc
cwtl
or
test
stos
rorl
out
sbb
enter
es
test
or
in
adc
mov
cmc
fnstenv
xchg
adc
lds
lahf
outsl
cmp
mov
subl
das
jp
pop
xor
inc
or
mov
aad
mov
jg
scas
mov
pushf
in
pop
cmp
xor
xor
adc
jbe
mov
lea
pop
aam
cwtl
or
jb
std
mov
dec
and
fwait
xchg
xchg
sbb
sbb
movsb
push
xlat
xchg
or
ret
cs
stos
insb
xor
dec
jae
sub
test
xchg
push
aam
call
xor
push
sub
sbb
cwtl
dec
mov
adc
mov
shll
add
mov
clc
xchg
leave
mov
addr16
test
push
into
aas
inc
out
and
or
dec
mov
cmp
divb
idiv
cmpb
dec
loope
aad
out
loope
cmc
jae
jb
sbb
sub
jecxz
sarl
stos
xchg
ss
int3
adc
dec
in
push
inc
ret
mov
dec
lock
lret
es
mov
push
add
xor
add
xchg
test
out
mov
mov
adc
pop
adc
in
fwait
or
icebp
jecxz
pop
das
in
and
xor
and
out
sbb
fadds
pop
dec
fists
fcoml
xchg
pop
mov
or
mov
fstpt
leave
sub
jo
or
mov
dec
aad
or
fs
mov
mov
mov
jnp
lds
idivb
xor
movsb
fistpl
mov
push
sub
movsl
int3
stos
sbb
inc
test
and
jp
insl
sub
je
cli
xor
mov
jns
xor
mov
mov
lds
push
out
cmp
xchg
in
mov
fucom
add
les
out
and
pusha
inc
sub
cmp
cmp
xor
scas
push
xchg
gs
or
inc
inc
sbb
leave
and
mov
push
mov
xchg
pop
mov
jbe
dec
in
outsb
cltd
and
mov
ficomps
bound
rorl
inc
inc
movsb
imul
xchg
dec
cmpsb
push
mov
imul
jns
aas
add
sub
aas
push
pop
add
cmc
sub
in
in
xor
jle
jg
inc
aam
stos
shrl
dec
cmp
fiaddl
jmp
push
jbe
add
or
movsl
cmp
adc
xchg
outsl
das
mov
or
fisttpl
fcoml
xor
pop
mov
stc
and
std
clc
pop
lock
movsb
std
jmp
pop
sbb
out
ret
in
cmpsb
mov
pop
lea
adc
sub
insl
sub
imul
sbb
inc
inc
mov
push
jp
in
in
push
or
add
pop
imul
sti
dec
xor
jae
xor
int
cwtl
lods
mov
or
inc
mov
xchg
lock
push
and
mov
ret
mov
aam
fdivs
cli
test
xchg
pop
push
lods
ss
jno
mov
enter
repz
les
icebp
or
in
sbb
inc
and
sbb
cmp
les
subl
dec
push
jmp
das
orb
push
or
out
lret
mov
mov
or
stc
push
popa
insb
or
sub
sub
pushf
dec
shrl
mov
movsb
mov
aam
and
into
adc
mov
loop
mov
or
lahf
cmc
pop
mov
jb
pop
or
push
pop
and
xchg
cmp
gs
push
and
cmp
jge
prefetcht0
pushf
cmpsl
mov
and
imul
dec
pushf
sarb
add
out
sbb
imul
xor
cs
adcl
aas
jmp
fidivl
sbb
insb
test
adc
pop
aas
int3
push
or
jp
mov
inc
aad
xchg
ss
lds
pop
aam
jne
ret
mov
cwtl
int3
sbb
les
inc
mov
rcll
jmp
aam
mov
shll
and
mov
mov
in
lea
mov
insl
jp
xchg
xchg
pop
lock
mov
xchg
rol
mov
lcall
mov
adc
cmpsb
push
lods
fbstp
mov
popa
jge
outsb
iret
add
mov
dec
and
inc
es
enter
jmp
rcr
push
lods
arpl
stos
cmp
xlat
xor
lods
or
lds
shll
inc
jge
xor
xlat
insl
cmpb
fcomps
in
shlb
dec
jbe
rclb
fiadds
inc
push
fadd
xchg
and
arpl
cli
gs
push
lcall
xchg
outsl
nop
icebp
fwait
test
and
mov
xchg
fidivrs
imul
rcrb
xchg
adc
xor
push
wrmsr
jmp
out
dec
iret
and
data16
and
push
sbbb
mov
lahf
imul
cmp
adc
jecxz
cmpsb
inc
mov
inc
testl
sbb
add
xchg
scas
xchg
dec
push
mov
lahf
call
push
pop
or
arpl
xchg
inc
nop
ficoms
leave
pop
insb
xor
pop
mov
and
movsb
aaa
push
adc
movsb
fcmovnb
shrl
cmp
stos
lds
repnz
inc
dec
repz
mov
rcrl
jecxz
jg
mov
cld
ljmp
mov
sbb
lret
mov
subl
movsl
ret
jge
stc
mov
sbb
jmp
adcl
fisttpll
add
js
cwtl
mov
cld
adcl
mov
jle
pop
inc
xchg
cmp
sub
movq
sbb
out
push
pop
adc
data16
inc
popa
in
nop
pop
mov
xor
lods
sbb
pop
movsb
aad
aad
adc
pop
mov
cmp
insl
sbb
and
inc
icebp
add
add
mov
mov
dec
xchg
xchg
pop
repz
mov
push
mov
pusha
jo
or
sahf
scas
mov
mov
cmpb
cmp
push
cmpsb
jl
repz
xlat
push
nop
lret
std
negl
xor
add
int
jge
jno
cltd
test
int3
dec
iret
mov
data16
out
jns
nop
scas
aas
mov
adc
stc
xor
out
addr16
jno
jbe
js
scas
mov
sub
lock
pop
fstl
xor
repnz
shrl
ret
pushf
xchg
pop
xchg
xor
mov
in
sbb
imull
subb
sbb
xor
jl
cmp
idivb
xchg
push
andl
pop
lahf
mov
lret
xchg
cmp
aas
mov
clc
lods
in
pop
jle
mov
shr
mov
add
fistl
cmp
daa
pop
ja
dec
arpl
in
outsl
and
popf
xor
repz
mov
mov
mov
test
jbe
cwtl
xchg
inc
or
push
inc
shll
aaa
push
cmpsb
lret
dec
or
mov
es
xchg
cmp
loop
mov
lcall
aam
js
sbb
dec
sbb
dec
test
lret
sbb
test
test
fsts
iret
stos
push
jns
aam
lcall
loope
ja
and
hlt
mov
data16
lcall
loop
into
or
movsb
xor
aad
pop
add
je
shll
cmc
test
std
push
iret
adc
rorb
test
jns
das
and
push
movsb
sbb
subb
ficompl
lret
ljmp
add
call
xor
mov
sub
fldenv
jb
loope
sub
out
sar
cwtl
dec
arpl
xor
mov
fwait
mov
xchg
popa
addr16
rcr
in
shr
mov
inc
mov
pop
in
cmp
in
push
sub
xor
and
and
daa
or
repnz
icebp
mov
sub
cmp
lods
xor
addr16
inc
sti
pushf
cmp
mov
lea
add
xchg
in
roll
jp
and
out
mov
dec
aad
shr
jg
idiv
fwait
cmp
rol
in
cs
fistpl
pop
push
out
push
push
out
inc
les
shrl
cli
mov
rcr
inc
mov
push
lcall
mov
mov
xchg
dec
xor
sbb
jae
leave
jb
and
or
and
sbb
inc
lods
scas
xchg
arpl
push
in
out
loope
in
xor
fcmovnb
repnz
ret
int
ljmp
mov
sbb
mov
xchg
subb
fwait
xor
or
xchg
das
int
pop
cmp
insl
inc
test
xchg
jb
sbb
popa
pop
xchg
pop
out
add
sbbb
jb
pop
shlb
popa
mov
mov
out
inc
subl
hlt
sbb
cmp
loope
add
or
push
popa
sub
mov
push
dec
mov
std
xchg
arpl
cmpsb
cmc
inc
push
adc
add
push
sub
xor
shll
jae
fs
add
push
sub
push
push
pushf
inc
call
or
cmp
in
push
leave
jmp
or
add
in
mov
xor
out
loopne
stc
xchg
pop
test
xor
add
cwtl
fwait
sub
pop
jb
jl
addr16
pusha
mov
stos
mov
mov
pusha
scas
shll
jg
jbe
xchg
sub
sub
add
cmp
mov
push
cmpsl
sbb
xchg
jp
cs
test
sti
pop
cmp
into
push
sub
ret
jmp
inc
nop
jno
popa
sbb
jbe
lods
decb
stos
adc
adcl
test
lods
jns
popf
add
mov
xchg
js
adcl
sbb
add
gs
movsb
aas
imul
push
mov
fs
pusha
lahf
clc
inc
jo
daa
xchg
adc
sbb
dec
gs
add
jae
loope
add
mov
icebp
iret
lahf
jb
mov
and
push
icebp
xchg
dec
xlat
or
ds
adc
incb
dec
dec
jge,pt
test
int3
jle
sbb
fisttpll
dec
or
mov
scas
ljmp
sub
jle
test
mov
xlat
lret
xchg
sti
nop
data16
jns
bound
lea
sub
push
adc
imulb
js,pt
mov
subl
gs
cmp
push
pop
lods
jmp
mov
xchg
hlt
bound
call
push
sub
xchg
mov
push
jg
popf
clc
je
and
xor
js
cmpsl
adc
insb
push
shll
push
add
mov
ds
jg
hlt
mov
lock
dec
jnp
movsb
inc
insb
int
pop
xlat
cwtl
sbbb
jmp
test
xchg
lods
test
rorl
or
push
sbb
add
dec
loop
mov
lret
sbb
dec
mov
aaa
sub
push
fcomp
out
movsl
inc
mov
mov
in
iret
stos
aad
cmp
lcall
movsb
movsl
xchg
leave
lahf
push
idivl
jl
jno
sbb
loope
xor
cli
fdivrp
xchg
outsl
or
fisttpll
push
add
xchg
ret
outsb
cs
mov
and
mov
ljmp
ss
lock
xor
inc
test
test
subl
in
mov
daa
xor
jp
bound
pop
in
push
pop
xchg
pop
mov
stos
cli
fidivl
sbb
and
adc
sub
cmp
icebp
jae
push
cld
je
inc
and
jae
lret
sbb
inc
mov
das
fisttps
dec
sub
mov
and
cmp
out
sub
push
sub
mov
cltd
inc
addl
pop
daa
jno
sbb
and
leave
out
jecxz
lret
test
sbb
stos
scas
xchg
int3
cmc
fadds
fidivl
arpl
gs
mov
sbb
aas
inc
push
hlt
sbb
mov
push
mov
in
scas
scas
mov
add
mov
jecxz
dec
adc
out
and
mov
adc
lcall
leave
mov
sarb
add
sbb
in
dec
aaa
mov
xchg
pop
ds
push
and
lcall
jne
push
push
cmp
sahf
repz
mov
rolb
xchg
aas
pop
jns
jg
sahf
mov
rcrl
jp
dec
int
popa
jge
shl
add
inc
xlat
sub
push
repnz
add
cs
mov
cmp
cltd
xchg
mov
xor
jge
pop
mov
push
mov
aad
out
pusha
addr16
inc
and
sub
mov
ss
and
cmpsb
mov
push
lea
or
sub
mov
enter
mov
scas
mov
cmp
icebp
mov
std
vsubps
js
jle
pop
push
jle
adc
cmp
xor
mov
pop
ljmp
lock
shlb
inc
sbb
push
pop
mov
shr
repz
in
cli
inc
ror
int3
call
mov
push
jl
popa
fcmovnu
xchg
add
mov
fnstsw
pop
movsl
cli
add
shll
fsubs
jecxz
mov
adc
pushf
jno
dec
pop
mov
mov
mul
out
mov
jb
pop
mov
and
in
into
lea
rcr
test
jecxz
sbb
mov
cmp
pop
jg
mov
dec
add
pop
int3
dec
cmp
push
mov
adc
mov
aam
call
test
outsb
or
or
sbb
push
mov
fidivs
mov
sbb
icebp
mov
cs
bnd
push
jge
sbb
add
ja
push
les
cmp
shrl
mov
inc
and
shrb
jg
loopne
into
inc
mov
or
mov
mov
movsl
xor
push
lock
xor
and
loopne
fcmovnb
cld
outsl
dec
popa
mov
inc
jmp
sbb
mov
mov
imul
iret
or
lock
psrld
xor
shlb
mov
neg
movsb
decb
xor
addb
fldenv
xchg
lret
dec
cli
push
repz
dec
dec
out
fidivrl
and
pop
je
xlat
mov
shll
inc
push
lods
shrb
dec
adc
jp
jp
mov
xor
mov
inc
mov
out
sti
push
xchg
insb
mov
sbb
lock
xor
aaa
ds
imul
lea
lods
mov
lods
push
aas
jnp
shll
xchg
adc
cmp
lret
stos
mov
sub
inc
test
enter
sbb
or
adc
pushf
lds
xchg
mov
mov
ret
add
lret
mov
or
jns
int3
cs
mov
sub
pop
mov
xchg
adc
mov
clc
jb
mov
addr16
cwtl
mov
fldcw
leave
bound
jno
jns
sahf
cmp
fiadds
insl
push
les
call
frstor
xor
mov
insl
xchg
sbb
sub
out
add
pop
pop
sbb
ss
add
test
sahf
or
xchg
pushf
scas
lahf
xchg
ss
or
cs
jae
mov
ljmp
popf
pop
insl
sbb
mov
xor
jbe
cmp
out
dec
in
jns
adc
push
mov
dec
into
scas
pop
xchg
cltd
mov
movsb
adc
inc
xchg
je
pop
cmpb
loope
mov
add
and
enter
out
ds
mov
and
sbb
test
mov
leave
pop
fwait
mov
jmp
push
pusha
pause
fidivl
or
popa
ret
fisubl
divl
loope
sub
jecxz
xlat
ds
push
ficoml
lock
pop
adc
imul
push
add
add
ja
das
rclb
cmp
sbbl
stos
in
das
sbb
cmp
cld
pushf
dec
inc
cmp
jp
dec
divb
xchg
jbe
mov
mov
ret
mov
or
dec
clc
push
sbbl
sub
int3
xor
mov
fdivr
jne
imul
sub
jbe
in
jp
mov
and
or
test
mov
jo
add
pop
mov
adcb
add
stos
dec
mov
pop
push
scas
sub
fidivl
sbb
lods
imulb
lds
loopne
rorl
or
sbb
cmpsb
ljmp
sahf
scas
push
and
sbb
fxch
add
jp
jl
cmp
inc
rcrl
cmp
insl
xor
ljmp
test
repnz
jl
addr16
mov
enter
adc
insb
out
lcall
das
or
mov
mov
mov
shll
sbb
test
adc
xchg
addb
cmp
fcomps
daa
and
mov
mov
push
pushf
push
mov
in
mov
or
sub
addr16
mov
mov
in
nop
inc
cmpb
rcll
lea
daa
mov
adc
dec
fisubrs
adcl
push
stc
xchg
and
xchg
aas
outsl
cmp
pop
movsl
xor
fimuls
nop
jl
bound
test
call
adc
lret
mov
ljmp
add
ds
xchg
arpl
popa
mov
shr
shlb
mov
cmp
shlb
clc
cmpsb
cmpsl
mov
xor
push
inc
pop
xchg
ret
mov
mov
popa
and
pushf
notb
insl
data16
add
jns
push
or
popf
xor
cmpsb
int
add
in
cmpsb
add
in
jne
in
stos
inc
sub
lods
aas
cmpsl
pop
fwait
hlt
in
push
iret
lods
mull
sbb
popf
outsb
jbe
xor
ds
insl
or
mov
lock
or
adc
std
mov
dec
mov
out
inc
lds
in
pop
fs
inc
xlat
aaa
cmp
out
dec
nop
jecxz
and
pop
dec
aaa
dec
rcl
cmc
cmpsl
xchg
stos
pop
orl
xor
out
inc
andb
xchg
lods
xchg
jne
and
aam
int3
or
sbb
subb
xchg
mov
rol
mov
and
lock
iret
js
cmp
fcoms
add
jo
add
cmpsb
lahf
sub
loopne
dec
mov
xlat
lcall
cs
repz
addr16
mov
pusha
pop
int3
push
inc
cmpl
cmp
add
and
jmp
in
stos
in
test
add
and
test
add
inc
inc
lahf
xchg
mov
fistps
mov
mov
jp
sub
out
and
sub
roll
mov
outsl
shlb
ds
adc
scas
inc
out
ret
js
cmpl
repnz
jmp
mov
scas
sbb
jle
mov
into
and
and
mov
in
enter
lcall
lock
dec
pusha
call
adc
mov
cmp
mov
jb
lret
addb
mov
scas
sbb
ljmp
inc
cmp
push
stos
js
imul
bound
xor
and
ja
add
or
stos
sub
adc
mov
jl
xchg
int3
xorb
pop
lods
adc
adc
sub
jo
jmp
jge
push
adc
pop
int
jno
les
cmpsl
mov
out
testb
test
out
mov
xchg
data16
cmpsl
pop
push
sub
int3
out
jne
cmc
mulb
or
cs
pop
call
adc
jb
mov
fidivs
ljmp
icebp
push
outsl
sarl
call
mov
int3
jg
mov
int3
ljmp
lahf
lods
sub
mov
fimuls
sbb
lods
jae
sbbl
mov
xor
fwait
call
and
sbb
in
popf
insl
push
mov
sbb
mov
adc
out
mov
cmp
xchg
inc
xchg
aaa
fnstenv
mull
scas
push
cmc
pop
mov
push
out
adc
cmp
das
out
mov
cmpl
push
loop
fnstsw
cli
mov
xchg
xor
testb
cs
jmp
inc
xchg
enter
lods
int3
xchg
mov
addl
sub
xlat
out
cli
popf
imulb
testl
divl
or
pop
jo
test
mov
hlt
mov
and
outsl
xor
mov
sub
cmp
dec
cmc
out
cmp
adc
pop
lahf
or
ljmp
out
je
mov
out
mov
jnp
or
enter
dec
cld
mov
loopne
lods
ffree
mov
cmp
repz
mov
xor
mov
lods
stc
push
lds
and
lods
xchg
jge
lahf
mov
in
inc
push
mov
aas
push
adc
and
cmp
push
jae
xchg
sub
nop
mov
int3
pop
enter
mov
cltd
inc
repnz
lret
sbb
rcll
push
mov
in
aas
jnp
adc
fmull
imul
popf
or
aam
mov
mov
lods
lds
je
push
test
nop
push
xor
inc
hlt
rorb
sahf
mov
in
cmp
mov
mov
pop
mov
aas
in
loope
adc
jle
loope
pop
nop
testb
jo
shrb
scas
pushf
xchg
adc
bound
in
jnp
pop
rorb
jno
fdiv
mov
sar
inc
dec
mov
jmp
loopne
pop
xor
sahf
cmp
jle
setb
stos
xchg
jnp
repnz
sahf
mov
xor
rcrl
ficomps
aas
cmp
jne
push
mov
xor
cmp
popf
popa
addl
fimuls
inc
pop
cmpsb
mov
add
xlat
fidivs
inc
ljmp
adc
dec
add
and
push
and
sbb
test
mov
inc
cwtl
arpl
test
aam
sub
popa
adc
mov
out
pop
insl
mov
stos
or
jno
popa
lret
push
sub
xchg
out
jo
aaa
adc
out
lahf
sbb
and
adc
jecxz
push
icebp
sarl
mov
dec
sar
sbb
pop
in
mov
shr
dec
push
movsl
lea
arpl
dec
add
mov
jle
mov
jnp
xchg
push
push
lods
mov
and
mov
jg
out
mov
stos
outsl
xchg
adc
iret
pop
mov
sub
dec
mov
jmp
mov
inc
test
mov
stos
aad
sbb
adc
clc
xchg
mov
bound
lahf
mov
jle
inc
cmp
add
push
cmc
sbb
stos
and
sub
lock
mov
mov
popf
or
mov
xchg
pop
inc
fsts
mov
test
jns
mov
push
xor
ds
imul
cmpsb
repnz
push
addl
xor
repnz
enter
push
lock
dec
leave
mov
sbb
aam
out
js
loopne
mov
scas
scas
test
jo
test
inc
xchg
mov
cli
inc
iret
inc
imul
test
fstl
repz
lahf
inc
inc
fsubs
gs
imul
adc
inc
push
shlb
adc
push
jns
leave
popf
mov
mov
cmp
js
sub
dec
adc
jne
mov
mov
ret
lock
mov
push
aas
or
gs
jl
jg
ficoml
inc
lds
push
cmpsb
push
insl
popa
testl
gs
push
jnp
dec
fcomi
negl
imul
mov
jns
dec
xlat
shl
loope
fistpl
jl
mov
sub
mov
decb
scas
dec
mov
xor
mov
std
or
sahf
test
enter
jbe
movsb
loope
inc
pop
jle
sub
pusha
and
and
cmpsb
enter
clc
scas
in
pop
lods
push
cmpsb
sbb
rep
cld
cmp
fiadds
popl
sarl
xchg
mov
jo
dec
aad
cld
cld
push
fisubs
outsl
push
sub
gs
and
cmpl
mov
inc
pop
xchg
dec
sbb
and
repnz
decl
xchg
sbb
cmpsb
ret
popf
aas
adc
push
cld
arpl
push
mov
fadds
and
xchg
jecxz
shll
addr16
xchg
inc
jno
fimull
int
pop
mov
mov
dec
xor
mov
mov
je
fmuls
and
je
aad
arpl
add
outsb
enter
and
fimuls
mov
inc
rcl
xchg
jne
in
mov
hlt
lock
movsb
jne
xchg
repnz
sub
ret
pop
lahf
int
or
mov
dec
aaa
ficoml
or
aaa
jae
cltd
sti
or
push
loop
iret
xchg
iret
sahf
cmp
pop
lcall
pop
pop
pusha
into
jae
xor
sarl
ret
xor
call
mov
dec
cwtl
fmull
sbb
repnz
lods
aam
sbb
xor
stc
inc
push
lods
inc
and
orl
sbb
xor
leave
js
test
mov
ficompl
in
sub
jecxz
mov
fisttpll
test
inc
mov
js
outsl
adc
xlat
or
push
add
sub
push
hlt
je
gs
jo
xchg
inc
xchg
movsl
xlat
pop
popa
push
xor
inc
lret
mov
mov
jne
jo
nop
jmp
mov
addr16
fidivrs
and
inc
sbb
push
clc
inc
cmp
fmul
aas
stos
movsl
and
pop
dec
push
fbld
dec
stos
jbe
add
mov
int3
fsubrl
mov
pop
sahf
push
hlt
jae
and
mov
cmp
lods
mov
out
push
cmp
aad
jp
fdivrl
xchg
in
int
pushf
add
push
ss
hlt
xchg
mov
xchg
sbb
and
sahf
test
dec
lds
xor
dec
sub
sub
in
xchg
stos
mov
and
dec
pushf
cltd
xor
push
out
adc
adc
jge
loope
mov
jmp
mov
dec
sub
mov
mov
sbb
int3
les
in
pop
popf
dec
xchg
ret
outsb
or
adc
out
stos
xchg
jle
mov
movsl
test
insb
mov
and
iret
sbbl
or
jmp
imull
movsb
lret
push
dec
fstpl
mov
xchg
jp
negl
mov
push
xor
and
xchg
xor
push
xchg
add
xor
popa
setg
or
rorl
mov
mov
call
adc
xchg
gs
lock
mov
into
cmc
icebp
jmp
aaa
lods
push
pop
push
pop
cmpsb
ret
and
push
outsl
popf
das
ss
sbb
push
out
cli
mov
gs
adc
inc
or
iret
sbb
mov
mov
fdiv
mov
add
out
filds
out
dec
pop
out
test
outsb
adcl
stos
or
push
in
xor
push
xchg
outsl
data16
test
sbb
push
dec
sub
add
cltd
or
or
xchg
adc
js
xchg
bound
mov
insb
cmp
add
xchg
stc
stc
lock
or
pop
jp
inc
fdivrp
sbb
xchg
andl
rorb
jecxz
in
out
jmp
inc
cwtl
mov
cli
movsb
out
fwait
push
push
lods
dec
nop
lea
fs
int
sub
mov
fs
push
rclb
inc
cmp
and
sub
adc
xchg
fstpt
clc
sbb
mov
inc
inc
xchg
xor
xchg
xchg
movsb
dec
out
push
and
or
mov
shlb
sbb
xchg
popf
dec
add
insb
xchg
ret
test
mov
or
lret
push
jge
repnz
xchg
cwtl
xlat
fnstsw
ss
lods
adc
enter
cld
xor
dec
lock
mov
xor
lret
and
and
sub
cwtl
aaa
mov
iret
lods
rcrl
jnp
cmp
mov
sbb
cs
insl
cld
sbb
in
popf
es
lods
cwtl
sbb
jecxz
pop
sbb
mov
lea
cmp
pop
pop
inc
je
pop
dec
or
jl
adc
lea
pop
stos
not
mov
cmpsl
decl
push
jg
ret
xor
fwait
cmp
xlat
cmp
scas
test
push
inc
int
ss
fwait
push
rcrl
rorl
loope
aas
pop
sbb
and
and
jecxz
xchg
imul
cmpb
int3
push
mov
mov
cmpsl
xlat
and
mov
sub
sar
arpl
repz
mov
pop
lods
js
std
push
add
jmp
adc
cmp
daa
jo
repz
add
dec
lds
add
sub
dec
js
jbe
bound
sbb
mov
lods
jae
or
lahf
loopne
stos
xor
cld
add
lock
test
and
inc
dec
popa
insb
mov
jl
lahf
push
mov
iret
bound
pop
jnp
dec
mov
jae
aam
adc
xor
or
repz
loope
ret
cltd
add
shrb
scas
adc
fsts
mov
ss
sarb
mov
insl
push
push
mov
xchg
leave
aaa
mov
or
jnp
xor
dec
or
std
push
test
clc
rorl
loopne
sub
int3
pusha
les
je
mov
mov
outsl
insl
mov
ds
jne
jno
sbb
cs
int
icebp
jo
adc
or
je
call
lret
popa
ficoms
add
xchg
leave
or
gs
inc
jg
daa
stos
mov
xchg
lock
int3
pop
fildl
aam
inc
xor
mov
xor
outsl
lret
les
sahf
sbb
push
mov
sbb
icebp
fwait
xor
fldl
xor
xchg
fwait
or
icebp
inc
test
dec
fadds
jl,pn
movsl
and
aas
cmpb
in
lds
jbe
push
test
cmp
and
lret
sbb
out
out
jb
mov
fisttpl
popa
pop
push
mov
jne
test
dec
mov
fdivs
imul
jle
es
add
dec
xchg
call
icebp
int
dec
cmp
sub
sbb
in
loope
mov
mov
divb
aam
jb
popa
adc
ret
mov
into
xchg
and
fstpt
scas
sub
scas
jb
mov
fwait
rcll
ss
xchg
das
cmc
mov
das
or
mov
cs
cmp
scas
or
scas
sbb
pushl
lds
popf
cltd
mov
jge
or
jnp
mov
cli
push
das
pop
jmp
or
push
jnp
js
mov
pop
push
imul
cmp
sub
les
mov
sub
xor
scas
xor
loope
or
jns
into
pop
xor
xchg
or
add
dec
pop
inc
imul
test
out
insl
dec
fcmovnbe
das
jnp
aaa
jg
lcall
push
fistpl
cld
rolb
jb
dec
cmp
lods
push
mov
xchg
jae
test
orl
jo
movsb
sbb
jno
and
and
mov
aad
pop
cmp
mov
xchg
add
add
add
pop
cli
inc
arpl
mov
enter
sbb
pop
adc
imul
movsl
out
jp
loop
mov
sbb
inc
sbb
mov
jg
adc
sbb
push
jmp
cmc
add
jbe
daa
dec
jp
in
ret
mov
insl
mov
dec
sbb
cmpsb
dec
out
push
mov
xchg
mov
inc
test
test
jnp
imul
fistl
jl
pop
add
pop
sbbb
push
mov
xchg
fdiv
addr16
push
pop
rclb
rorb
push
xor
dec
scas
jp
shrb
test
push
into
adc
sub
cmpsb
aam
mov
cmp
subb
lret
and
ja
dec
xlat
jbe
or
stc
les
cmp
movsb
outsl
mull
pop
pop
dec
insb
pop
cmp
xchg
sbb
bound
push
lcall
sub
jno
sti
in
dec
pop
add
or
xchg
loopne
test
into
sbb
adc
sub
loope
lcall
lret
clc
and
out
ss
and
cmc
aaa
push
fcoms
clc
pusha
jnp
test
scas
lret
gs
mov
push
sub
cmp
sbb
leave
sub
adc
pop
ja
push
in
lret
aad
sbb
jbe
cli
fildl
sbb
mov
lods
or
into
jmp
lea
pop
cltd
adc
cmp
push
enter
mov
cld
imul
jmp
add
or
data16
lea
jne
sub
mov
fidivs
in
out
sub
ret
jl
xchg
cmp
insl
dec
cli
dec
shrl
lods
int3
nop
jmp
popf
push
cli
push
xchg
mov
outsb
mov
aas
sahf
ds
jae
fsubs
xchg
ss
lock
test
jmp
and
mov
orl
xchg
sub
out
dec
push
push
pop
cmp
jg
jp
xor
push
xbegin
cmp
leave
and
or
aam
repz
push
xchg
xor
sub
scas
xor
mov
mov
and
or
lods
dec
fs
lea
xchg
xor
in
sub
mov
nop
xor
in
xor
jmp
or
ja
xor
pop
cltd
mov
and
mov
ret
mov
iret
fistps
mov
sarl
jg
fistpl
jne
aam
movsb
pop
sub
ljmp
aad
sbb
fnstcw
pop
mov
push
or
xor
add
in
sbb
xchg
das
outsl
mov
xor
cmp
hlt
adc
inc
sub
aas
stos
cmpsb
cld
jbe
push
arpl
idivb
pop
xchg
ss
mov
rolb
sbb
xchg
cltd
add
jnp
icebp
stos
cmpl
inc
adc
mov
cmp
adc
or
pswapd
sub
je
push
mov
into
push
es
jnp
out
lods
icebp
out
fnstenv
cmpsb
outsl
dec
std
adc
pop
addr16
shlb
and
dec
mov
and
stc
sub
or
cmpsb
jns
mov
cmpsb
and
out
xchg
pop
mov
pop
ljmp
aad
dec
and
in
push
cmc
ret
push
dec
add
iret
out
sbb
aad
inc
dec
or
or
pop
fadd
cmp
outsl
push
sbbl
rorl
adc
mov
mov
outsl
icebp
jmp
mov
adc
lea
les
mov
insb
iret
outsb
call
lds
out
test
ss
jp
ja
rcrb
dec
and
cmp
mov
outsb
or
dec
push
pushf
cli
dec
xchg
scas
mov
shl
aad
es
jecxz
cmp
jl
out
fwait
test
or
mov
mov
pushf
pop
dec
mov
das
bound
adc
subb
sbb
sub
pop
pop
adc
add
test
pop
push
cmp
loopne
cmp
das
or
shlb
inc
std
mov
xchg
jl
ds
pusha
and
movsl
sub
adc
stc
test
mov
push
repnz
test
xchg
mov
jne
add
mov
mov
dec
in
dec
in
and
dec
sbb
cmp
mov
xor
adc
push
out
sub
and
xchg
dec
jnp
sub
inc
jl
cltd
push
pop
ja
cmc
and
cmp
lahf
cld
push
fdivl
mov
aaa
jo
es
jnp
jno
and
jge
or
addr16
xorl
sub
roll
adc
add
xchg
mov
xor
push
in
inc
inc
pop
and
pop
xchg
iret
mov
stos
xor
rorl
je
xchg
shl
insb
inc
inc
mov
and
mov
add
jecxz
mov
sub
sub
jb
mov
stc
xchg
not
mov
mov
push
outsb
pop
sub
fldenv
popf
in
fisttps
filds
adc
dec
push
imul
pop
mov
jle
mov
jns
fcmovnu
and
push
loop
mov
rcl
lock
mov
or
push
data16
ljmp
inc
repnz
movsl
enter
out
push
cmpsb
xchg
mov
jae
into
push
mov
loopne
adc
xor
adc
jmp
js
dec
aaa
leave
aaa
and
ljmp
sbb
mov
mov
push
jmp
nop
mov
in
adc
xor
rorl
xor
dec
inc
xor
insb
dec
sub
imul
ds
mov
stos
jmp
inc
jnp
push
push
dec
or
mov
ret
ja
hlt
dec
xchg
inc
jmp
lds
shlb
cmp
mov
mov
icebp
mov
inc
arpl
clc
or
int
sbb
imul
mov
add
and
or
shl
and
dec
cmp
pop
loopne
mov
aam
mov
outsb
fdivrs
inc
pop
mov
cltd
add
cmpsl
mov
mov
pop
mov
dec
sarb
lods
jmp
movsl
in
insl
orb
jo
mov
jl
or
and
jae
or
cmp
cmc
mov
iret
out
mulb
ret
hlt
cmc
addb
sbb
insb
push
and
sbb
xchg
dec
leave
push
push
sbb
cmp
add
sbb
push
cmpsb
das
mov
mov
push
pop
adc
jge
out
scas
xchg
pop
cmp
mov
insb
sti
pop
test
popf
iret
pop
inc
fwait
jnp
lods
sub
jecxz
mov
and
xchg
fs
mov
jne
mov
cmp
mov
inc
outsl
push
fldt
push
das
push
icebp
pop
cmp
in
fidivrs
jne
jno
or
negl
inc
clc
push
pop
dec
iret
repnz
ret
xor
loopne
lahf
pop
dec
xchg
ds
lcall
mov
not
pop
cwtl
sub
xchg
add
inc
jmp
jp
cmp
iret
mov
mov
xor
repz
ret
xor
xchg
adc
aas
push
adc
push
dec
push
sarl
or
sahf
adc
cmpsl
insl
dec
fwait
in
adc
adc
jo
xchg
sar
jg
ljmp
mov
inc
addr16
or
jbe
push
aam
jp
inc
and
das
jnp
mov
fstl
xor
test
pop
pop
mov
daa
iret
or
pop
lods
or
mov
cmp
add
add
sub
dec
xchg
adc
mov
bound
outsb
pop
or
cld
cltd
bound
sarb
add
pop
mov
or
pop
je
and
inc
and
nop
xchg
dec
loopne
dec
sbb
mov
cltd
mov
cmc
mov
and
dec
jecxz
jp
clc
jae
stos
xor
adc
sbbl
jns
inc
rcll
push
dec
add
iret
iret
lahf
push
ja
jmp
call
hlt
repz
jae
ret
fsubrl
icebp
ss
inc
jl
dec
adc
popa
cld
push
or
sbb
pop
mov
sbb
in
mov
jns
das
out
out
inc
cmpl
inc
in
ss
mov
cmp
out
inc
push
push
cltd
outsl
mov
arpl
jmp
subl
stos
repz
inc
jbe
dec
shlb
inc
int
cs
je
rcr
sbb
popa
lock
pop
int
or
and
dec
lock
or
rol
scas
lahf
data16
sbb
push
out
cmc
pop
sti
cld
add
inc
mov
mov
jmp
frstor
push
adc
push
std
dec
aas
mov
push
add
daa
pop
ror
movsb
sbb
test
or
adc
cli
add
and
mov
sub
pop
add
inc
and
sub
push
xchg
pusha
push
and
push
or
add
lods
sbbl
lea
data16
cmp
pop
xchg
mov
add
dec
pop
cmp
pop
push
mov
jbe
adc
mov
je
test
mov
xlat
cmpsb
fisttpl
mov
jmp
test
je
xor
inc
inc
ficoms
test
test
sub
repnz
pushf
xor
insb
movsb
in
cmp
sbb
out
mov
adc
pop
pop
aaa
add
and
mov
out
aas
loop
cs
inc
dec
popa
in
xchg
or
jmp
lods
or
xchg
cltd
push
outsl
leave
outsl
rcrb
adc
cmp
ret
dec
or
out
frstor
add
outsl
outsb
add
inc
inc
xchg
cmpsl
or
dec
xor
sbbb
sub
ljmp
jp
out
pop
iret
jns
dec
and
ret
lock
xchg
out
add
movsl
je
pop
add
adc
hlt
gs
jge
call
cs
lcall
lahf
lock
sub
shll
inc
fwait
mov
scas
fwait
dec
dec
and
push
rcll
test
sahf
fs
xchg
aad
pop
out
out
push
push
movsb
push
pop
mov
push
mov
jge
ficomps
in
push
imul
sub
lret
adc
fcmovb
clc
jbe
mov
jge
in
nop
leave
jbe
cmpsb
out
pop
push
pop
les
xor
and
and
scas
mov
mov
xchg
jb
imul
mov
popf
cmpsb
sbb
stos
movsl
clc
rcl
mov
push
jg
in
sub
and
mov
mov
mov
ror
fs
aad
add
scas
in
out
xor
xchg
push
fnstenv
jecxz
imul
ja
and
test
pop
aas
pop
test
fwait
mov
push
mov
sar
push
in
scas
pop
inc
push
xlat
fldl
mov
stos
inc
scas
mov
mov
sub
shrl
jo
lret
icebp
pusha
mov
ret
mov
mov
jecxz
fsubrl
sbb
inc
mov
cwtl
out
sub
push
sub
jmp
adc
xor
lahf
inc
dec
or
adc
mov
add
popa
xchg
mov
and
paddsb
sub
xor
stc
enter
xchg
adc
pop
stos
dec
ret
sub
mov
stos
lahf
iret
mov
out
mov
icebp
ret
mov
je
in
mov
mov
scas
int3
mov
sbb
or
sub
ss
lcall
test
pushf
enter
sbb
fsubrp
inc
fisttpl
and
lods
leave
xlat
roll
mov
xchg
adc
cmpsb
dec
mov
pop
xchg
adc
mov
pop
cli
ret
xchg
pushf
lea
dec
sub
icebp
add
out
mov
sub
cmpsb
push
lods
cli
cli
and
popf
cltd
mov
jae
aad
mov
mov
inc
aad
mov
or
iret
addb
fstps
loopne
xor
fistpll
sbb
pop
push
nop
popa
fisubs
pop
dec
aas
pop
xor
mov
ja
je
ds
sub
out
inc
and
out
cwtl
push
add
inc
lret
std
notb
mov
fwait
xor
jl
dec
xor
xchg
lahf
cmp
lds
jle
xchg
fmulp
stos
sbb
cmpsb
mov
inc
inc
lods
sbb
adc
xchg
mov
adc
jecxz
test
orb
stc
shlb
mov
cmpsb
cmpl
jl
sub
in
xchg
jno
xor
imul
xor
call
aam
push
fwait
stos
mov
fxch
out
mov
aaa
xor
jo
cltd
pop
cmc
push
cmp
in
xchg
fdivrl
sub
ss
push
fsubrl
mov
call
mov
lock
fimuls
cmp
mov
or
jae
out
jmp
mov
aam
push
nop
mov
mov
movsb
subb
and
mov
adc
mov
cmpsl
pop
adc
fldl
push
jp
sub
sbb
repnz
mov
xor
xchg
fistl
pop
pusha
push
sbb
js
mov
pop
mov
pop
xor
shlb
call
sub
adcl
out
scas
lret
xor
and
add
data16
mov
shrb
pop
mov
lret
fistps
into
lods
leave
push
mov
repnz
aas
cli
mov
xchg
sbb
cwtl
xor
xor
jg
xchg
pop
mov
sarl
stos
xchg
push
scas
dec
xchg
std
push
and
outsb
xor
cmc
push
lahf
mov
shl
or
cmc
cmp
outsl
and
add
xchg
adc
jl
jg
js
and
mov
mov
cmpl
pop
fidivrl
std
rol
push
dec
les
data16
pusha
in
push
pop
xor
and
insl
jmp
cli
subb
xchg
pop
insb
movsb
ljmp
cmp
es
fs
ret
in
gs
fildl
daa
insl
mov
sbb
push
push
bswap
in
mov
mov
mov
inc
aam
or
pop
in
pusha
scas
aaa
add
jns
popf
dec
repz
pop
ja
fsubr
sbb
sub
fdivs
sub
data16
jmp
out
addr16
vorps
xor
xchg
pushf
movsl
cwtl
icebp
inc
jp
mov
jecxz
daa
mov
xchg
push
fcmovne
aad
das
enter
int3
push
pop
inc
pop
lds
les
int
jge
fs
adc
js
stos
outsb
mov
jno
sbb
and
ja
mov
push
push
xor
xor
nop
mov
movsb
sbb
inc
sub
cltd
sbb
sbb
dec
icebp
pop
xlat
push
repnz
pop
jae
iret
mov
xor
and
cmpb
push
or
cwtl
and
adc
xor
loop
es
push
xchg
adc
sbb
mov
or
sarb
inc
ret
out
jae
testb
jmp
leave
mov
push
xor
xchg
fcoms
jbe
loop
in
cmp
adc
nop
lret
jmp
cmp
xchg
es
sbb
adc
mov
loop
inc
imul
jg
out
lea
jl
insb
mov
adc
jnp
es
movsb
stc
loopne
push
out
mulb
lret
cmpsl
fs
mov
sbb
cmpsl
and
rol
ja
jbe
call
adc
fcmovnu
xor
cmc
ficomps
scas
dec
inc
popf
mov
fisubrs
push
out
xor
cmc
xor
lret
sbb
ja
xchg
dec
pop
scas
repz
dec
pop
nop
nop
or
movntps
push
adc
ds
test
aam
out
scas
push
push
movhlps
subb
inc
add
jecxz
bound
rclb
popf
and
in
dec
or
sub
stc
push
xor
adc
aas
mov
pop
inc
aam
adcb
pop
add
push
insl
cld
imul
movsb
mov
fs
out
mov
scas
mov
in
and
test
in
adc
xor
or
arpl
push
mov
fimuls
jg
jno
pop
adc
movsl
and
daa
lcall
inc
pop
lcall
jmp
jno
daa
jno
loope
imul
sub
mov
cmp
ljmp
push
and
xor
fdivl
repz
inc
insb
in
scas
ja
and
int
stos
jnp
leave
dec
push
add
push
cmp
aam
pop
shrl
push
pop
add
ret
sbb
jb
push
jb
mov
cld
pusha
dec
ret
sbb
lods
fcoml
sbb
cmpb
xchg
test
out
mov
in
cmc
shl
mov
les
mov
mov
adc
mov
jbe
inc
pop
mov
jl
jmp
fidivs
sbb
shrb
xor
mov
loop
and
test
cmc
jae
out
outsl
fdivr
leave
outsl
mov
cmp
movsb
cli
push
mov
mov
iret
test
jae
or
sbb
andb
adc
pop
pop
xchg
xor
xchg
enter
dec
pop
popf
add
aam
sbb
adc
xor
mov
pop
push
test
inc
xchg
inc
int3
repz
test
sub
mov
inc
lea
push
fldl
fsubl
nop
push
lcall
addr16
mov
push
test
lcall
shll
cmp
fldcw
lea
imul
jle
xor
add
sub
arpl
cmp
cmp
ret
jnp
cmpl
arpl
gs
dec
and
jl
sub
daa
lahf
fldl
lret
push
jecxz
dec
dec
movsl
pop
pop
insb
jno
int3
mov
into
xor
mov
rol
pop
ja
jns
xor
test
gs
jge
call
sub
sub
in
sbb
mov
fsubs
jmp
pusha
std
sbbb
cmp
inc
adc
add
data16
outsl
mov
decl
mov
arpl
cmpl
cltd
pop
dec
jns
cmp
jne
icebp
mov
push
fwait
xor
das
mov
pop
or
and
cmp
mov
jns
fs
mov
adc
sbb
mov
cmp
cld
push
rcrl
adc
movl
fildll
add
and
cmc
xchg
add
sub
push
xor
xchg
add
and
adc
inc
inc
cmp
outsl
push
stos
adc
sti
pusha
adc
cmc
outsl
divl
cs
push
xchg
cmp
xor
out
add
and
js
mov
rorl
dec
fsubp
ds
popa
or
inc
imul
sub
scas
out
jg
hlt
mov
push
ja
fwait
push
push
mov
pop
add
mov
cmp
adc
loop
jmp
jecxz
mov
div
arpl
sub
call
daa
sub
jne
mov
xchg
or
push
push
dec
clc
cmp
add
les
push
push
dec
into
xlat
pushf
fcmove
imulb
cmp
xchg
in
popf
int3
scas
and
in
add
fistpll
cmp
add
and
xlat
daa
xchg
mov
xor
and
mov
insl
divl
aam
and
pop
out
addl
icebp
insl
pushf
psubusw
jmp
testb
into
xlat
jmp
adc
sahf
dec
ja
ror
aad
push
cmp
mov
fldenv
xchg
and
xchg
cmp
ja
cmp
in
stos
int
in
mov
inc
std
mov
nop
push
popa
outsb
mov
and
ficoms
and
loopne
xchg
mov
xor
pop
pop
cmpsl
jns
jb
cmp
cmc
add
sbb
inc
lock
mov
mov
mov
lcall
mov
mov
fucomi
leave
jne
movsl
xlat
outsl
outsl
shrb
jl
inc
dec
dec
push
xor
mov
fdivr
and
inc
cmp
pop
notl
mov
or
out
xchg
sub
iret
mov
fistpl
hlt
lods
stc
xor
iret
or
cmp
notb
mov
xchg
int3
push
mov
jge
xor
cli
ret
sahf
or
aam
xor
jge
cmpsl
loope
mov
push
call
xorl
or
mov
lahf
inc
add
sub
or
mov
jmp
xchg
aas
inc
pop
fisttpl
fldcw
jne
jns
cli
pop
dec
movsl
test
push
dec
jge
jnp
jnp
dec
push
sbbl
mov
loope
ret
outsl
jmp
inc
xor
jle
push
fstl
stos
call
push
xor
loopne
arpl
push
mov
xchg
sub
rorl
push
push
loop
or
sbbb
lahf
sub
jne
cmp
push
mov
mov
je
hlt
loopne
loop
adc
cmp
xchg
pop
fstpt
dec
pop
and
test
imul
orl
and
pop
and
dec
movsbl
stos
jle
xchg
dec
cmp
and
or
hlt
imul
cmp
inc
inc
inc
das
pop
xchg
jne
cmp
popf
xchg
push
jbe
lret
lsl
addb
ret
dec
inc
fwait
cmp
sti
addr16
scas
das
lret
sbb
sti
sbb
jg
inc
imul
test
mov
jns
popa
xchg
cmp
out
mov
or
loop
adc
in
mov
mov
dec
jns
mov
das
cmp
push
and
push
mov
inc
cmpsb
push
stc
xchg
fdiv
das
icebp
fmuls
jae
lret
add
push
xchg
repz
inc
movsb
jge
cmp
stos
pop
cmpsl
mov
jmp
in
repnz
icebp
adc
pusha
dec
lea
push
jp
aam
mov
jle
clc
inc
push
shll
mov
and
or
cmp
clc
or
inc
and
push
sub
movsl
mov
ljmp
je
or
adc
xchg
pop
cmpsb
mov
mov
setp
push
xchg
cmpsl
and
xor
mov
lret
sbb
pop
mov
add
or
jns
cmc
and
mov
pop
loope
daa
inc
add
leave
out
mov
adc
mov
pop
pop
addb
push
mov
or
call
imul
adc
mull
pop
jb
jmp
sbb
orb
fwait
push
push
test
or
and
lds
jb
mov
or
adc
xchg
jne
sbb
pop
insb
or
xor
mov
bound
pop
sub
nop
testl
push
jo
dec
or
in
repnz
hlt
imul
aam
mov
xchg
and
out
sub
push
mov
push
add
lds
mov
dec
daa
jecxz
xchg
aam
mov
mov
lock
lret
lcall
sahf
test
int3
insb
push
add
sub
aas
loopne
cmp
mov
inc
bound
iret
push
push
shlb
data16
push
in
pop
dec
pop
inc
out
js
add
push
mov
jnp
in
lret
mov
adc
cli
iret
dec
dec
pop
adc
test
ljmp
fwait
pop
popf
dec
lods
xchg
inc
sbb
cltd
scas
inc
or
xor
sub
or
and
inc
aam
or
cmp
dec
xchg
pop
lds
aaa
ss
enter
pop
mov
and
loope
jns
push
jno
or
push
clc
clc
mov
jne
push
cmpsl
pop
xor
and
stos
pop
cs
aaa
pop
scas
adc
and
mov
pop
imul
push
lea
aam
cmp
sbb
mov
in
xchg
jns
cld
sar
mov
cmp
mov
or
sub
pushf
and
jae
pop
jecxz
in
mov
mov
add
test
mov
call
or
ja
fstl
lcall
pusha
rolb
add
mov
cwtl
cld
imull
adc
loopne
dec
test
pusha
or
bound
and
sub
jbe
cmpsl
js
inc
cmp
or
pop
js
mov
loopne
pop
shrb
cmp
push
ss
mov
int
dec
mov
dec
lret
dec
mov
sbb
test
jo
dec
push
jg
dec
add
or
outsb
push
push
mov
sbb
cmc
mov
fwait
jg
jbe
andb
roll
aaa
or
dec
dec
in
adc
stos
rcll
sbb
pop
cmp
rcll
cld
or
ds
and
subl
inc
pop
mov
push
mov
jae
in
adc
inc
pop
ss
iret
sbb
lods
out
mov
dec
xchg
iret
test
popf
cmp
mov
sti
xchg
fcoml
and
bswap
lret
dec
in
leave
andb
scas
mov
popf
mov
cmpsb
mov
inc
dec
repz
cltd
out
aad
inc
mov
scas
xor
sbb
pushf
shrb
jge
xchg
or
push
or
push
gs
cmp
jno
and
int
inc
scas
or
call
data16
scas
mov
ret
add
pop
mov
dec
xchg
push
mov
fildl
stos
jno
das
repz
dec
repz
stos
add
add
mov
movsb
push
dec
ja
nop
and
stc
loop
inc
push
add
outsl
and
push
pop
sbb
cs
fmul
push
pusha
daa
lret
ret
xchg
mov
dec
push
daa
mulb
mov
adc
pusha
mov
push
mov
sbb
roll
push
mov
jecxz
xchg
cltd
push
int3
fists
mov
mov
ja
mov
imul
inc
add
cld
and
dec
dec
jge
xchg
xchg
or
jge
pop
pushf
sbb
and
pop
ja
shlb
filds
jne
lock
cwtl
test
inc
inc
ds
aaa
jns
xchg
sbb
cmpsb
or
jp
fstpt
push
ret
add
subb
and
cs
andb
push
fisttps
inc
in
mull
iret
push
lret
int
test
mov
imul
mov
pop
pop
jge
movsl
mov
inc
mov
xor
in
xor
pop
xchg
movhlps
dec
js
xor
xrelease
adc
or
ljmp
mov
pop
inc
pop
mov
lcall
outsl
rclb
pop
push
adc
in
xchg
push
push
cmp
sbb
mov
jo
dec
ror
lahf
ret
xchg
inc
sub
xlat
test
je
mov
jge
imul
pusha
cmc
cmp
sub
mov
arpl
sub
xlat
adcb
aad
sub
and
out
test
loopne
nop
ret
mov
fwait
lock
jno
sub
mov
mov
fidivl
fsub
in
cs
sub
xor
or
in
pop
jmp
fistpll
mov
ficoml
push
jns
ret
cmp
mov
xor
call
loopne
loopne
sbb
outsl
xchg
or
lahf
aam
stc
xlat
ret
gs
push
sahf
in
or
rcll
fisubrs
add
sub
sub
pop
jne
jl
mov
xchg
or
mov
xchg
mov
jl
inc
mov
or
cmp
cs
fidivrs
popf
mov
lcall
or
out
out
adc
stos
ss
pop
es
ljmp
dec
pop
mov
adc
push
outsb
test
dec
insl
hlt
testb
mov
test
sbb
jmp
cltd
outsb
nop
dec
jne
test
lcall
xorb
xor
mov
mov
mov
sti
adc
lds
fmul
inc
inc
and
ds
cs
jnp
orl
scas
or
dec
fidivs
rcr
add
dec
pusha
push
outsb
jmp
leave
stos
inc
cmpsl
mov
push
push
adc
xchg
mov
es
adc
lcall
mov
sbb
stos
lcall
adc
data16
ret
ret
adc
in
mov
adc
jle
mov
xchg
cs
ja
jp
mov
xor
sti
mov
jnp
xchg
jge
dec
pop
or
outsl
jne
rcrl
inc
push
push
orl
mov
dec
jge
xchg
outsl
fimuls
clc
aas
jl
or
pushl
or
ds
mov
push
pop
xchg
fwait
or
sbb
sbb
jb
jl
push
gs
jne
sti
cwtl
scas
in
push
pop
jno
aas
cmp
add
sarl
mov
pushf
mov
jg
sub
mov
movsb
shlb
popf
lret
add
je
mov
xor
ss
std
mov
cmpsl
jl
outsb
loop
push
ret
lret
pop
xchg
mov
jmp
sbb
pop
add
push
xor
dec
push
push
mov
lds
cmp
ficoml
daa
daa
mov
jns
rcll
test
xlat
outsl
addr16
adc
jb
rcll
add
xchg
cwtl
mov
into
xchg
jp
ret
adc
pusha
pop
dec
mov
add
jno
xchg
mov
mov
or
push
jmp
inc
sti
jge
scas
pop
or
rcr
lea
in
lock
xchg
jp
enter
loop
cmp
pop
xchg
push
mov
jp
loop
mov
pop
cmp
in
aas
jne
fstpt
add
mov
xchg
cli
add
aam
cmc
or
cmp
xchg
cli
outsb
daa
int
mov
sbb
mov
mov
sub
cwtl
jmp
dec
and
and
test
adc
add
out
test
dec
push
stc
js
sub
sbbb
test
xchg
mov
xchg
mov
sahf
outsl
fcomp
je
sbb
jge
pushf
repz
shll
pusha
push
flds
mov
inc
negb
ljmp
loop
mov
les
xchg
lea
jle
inc
hlt
js
stc
arpl
mov
pop
subps
pop
insb
subb
xchg
jne
in
jle
decb
add
jg
imul
scas
repz
nop
push
cmc
xchg
je
pcmpeqw
push
mov
ljmp
push
pop
movsb
dec
shrl
or
push
adc
mov
loop
aam
push
xor
push
xor
rorb
adc
pop
fcomip
mov
loopne
push
pop
testl
adc
pop
sbb
add
fadds
pop
data16
jnp
in
cld
mov
sbb
mov
or
dec
lods
cmp
lahf
dec
adc
fnstenv
bound
cmp
pusha
imul
mov
xor
cmpsb
fs
je
pop
adc
or
mov
jnp
cwtl
and
sbb
arpl
mov
cmp
pusha
dec
push
sub
sub
xchg
bound
adc
sbb
insb
cli
jns
int
inc
xchg
cmp
push
xchg
dec
mov
in
ss
add
or
adc
js,pn
jae
mov
pushf
mov
lea
loopne
les
nop
adc
ss
dec
das
inc
lock
sbbb
push
or
int
mov
cmp
and
aaa
jno
outsl
popa
mov
js
and
mov
sbb
mov
sub
xchg
cli
test
jp
imul
add
mov
inc
jl
mov
lock
dec
addr16
sbb
mov
xor
push
sahf
nop
jl
sub
push
mov
adcl
xor
xchg
pop
or
je
popa
mov
cmpsl
adc
xor
add
add
lahf
cli
out
or
cmpb
and
pop
mov
sbb
sarb
mov
sub
js
dec
data16
ljmp
in
outsl
add
push
or
sbb
mov
popa
adc
dec
mov
int
sub
das
xor
inc
cmc
mov
pop
cli
addr16
arpl
int
call
aaa
pop
mov
call
ret
mov
imul
mov
mov
pop
lods
shr
and
scas
mov
scas
sub
dec
fldt
ret
call
into
adc
lods
mov
into
mov
movsl
jge
test
movsb
mov
sbb
push
sbb
out
jge
mov
add
pop
mov
lret
and
xchg
cli
push
adc
push
into
aas
add
int
into
shl
fwait
dec
pop
or
mov
lea
inc
xor
push
inc
mov
cli
mov
loopne
sub
sub
repnz
int
jge
mov
mov
mov
xchg
xlat
into
iret
rorb
mov
ljmp
lods
scas
cmpl
xchg
gs
sub
out
scas
pop
aad
pop
add
xchg
jle
push
cmc
mov
pop
mov
out
inc
sub
loope
pop
fdivrp
rclb
loopne
pushf
inc
pop
fbstp
lret
push
push
js
jg
cmpsb
sub
neg
cmpb
in
in
jne
pop
xchg
add
add
lahf
or
call
cltd
add
ret
or
stos
pop
fcom
pop
in
and
in
push
aaa
mov
ja
lahf
mov
fistps
out
mov
sarb
add
mov
sbb
jnp
xlat
lock
insb
shll
xor
dec
mov
and
imul
ljmp
inc
and
sbb
cmc
clc
pop
sbb
sbb
pop
adc
mov
aad
gs
xchg
loop
test
in
cmpsl
push
adc
mov
inc
jnp
xchg
in
orb
test
arpl
popa
sbb
jb
mov
mov
inc
int
out
pop
daa
dec
jmp
daa
mov
jmp
test
inc
push
and
test
movsb
jp
push
or
push
lcall
pop
and
dec
js
mov
nop
mov
aam
cli
inc
push
in
jmp
or
sub
iret
push
or
adc
mov
jge
faddl
data16
sub
cmp
xorb
out
pushf
andb
rcrl
rol
push
ds
fldcw
add
ret
jmp
gs
test
jne
mov
sahf
js
push
ret
ds
cwtl
jne
or
inc
pushf
hlt
add
fcmovu
mov
sbb
cld
shlb
sahf
addb
and
or
out
pusha
mov
xor
popa
popa
test
mov
xchg
sbb
xor
popa
js
test
mov
lret
dec
mov
pxor
out
and
movsl
mov
xor
mov
lods
xor
dec
daa
xchg
adc
orl
nop
push
aam
dec
fldt
icebp
into
push
adc
cwtl
test
fmuls
jb
adc
lret
imul
shlb
sub
mov
push
out
xchg
pop
xchg
mov
inc
fwait
push
inc
fldl
mov
xchg
xchg
out
xchg
es
and
adc
lods
pop
loopne
mov
mov
mov
leave
dec
lret
aaa
adc
sbb
jnp
mov
mov
lret
stos
lret
xchg
in
mov
insl
xchg
add
mov
mov
in
cmpsb
cmpsl
out
ljmp
out
stc
ret
pushf
add
call
andb
xchg
xlat
mov
cmp
xor
stos
in
lahf
or
cmp
mov
adc
add
or
pop
fisubrs
sub
add
cmp
scas
int3
mov
jo
shll
sbb
push
je
sub
cmp
xor
jmp
int3
xor
rorl
add
pusha
loop
inc
cmp
push
or
mov
sub
arpl
sbb
jns
jno
xchg
loopne
shl
or
icebp
int3
aaa
pop
or
inc
mov
lods
or
inc
push
bound
push
mov
ror
mov
shlb
xor
test
test
and
mov
mov
mov
xlat
xchg
inc
or
scas
sub
cld
int
or
mov
push
pop
cmp
cli
repz
jae
adc
xchg
cs
jbe
repz
cmp
add
jge
fsub
xchg
sbb
adc
dec
jmp
sbb
push
jns
popf
fstpl
push
push
rcll
aas
mov
dec
pop
sub
mov
ficoml
jmp
jbe
aam
insb
push
aam
sbb
adc
push
leave
imul
push
lcall
test
sub
test
inc
cmp
ja
xor
arpl
test
fsubr
std
dec
test
adc
pop
mov
popf
adc
int3
pop
push
ret
divb
push
and
hlt
push
movsl
adc
inc
aad
lods
xor
out
data16
lods
xchg
out
mov
cmpsb
or
and
dec
incl
sub
loopne
jge
pop
mov
cmp
and
mov
cmpsb
dec
dec
addr16
inc
jge
sbb
ret
cmc
pop
pop
add
xchg
cmp
xchg
inc
inc
jo
xchg
mov
idivl
enter
mov
and
pop
test
or
daa
sbbl
stc
fidivrl
adc
sahf
and
mov
or
pop
ds
inc
outsb
adc
outsb
or
and
xlat
mov
sub
mov
rol
inc
inc
cwtl
jno
sub
inc
inc
pop
adc
lahf
mov
add
popa
pushf
add
sbb
leave
aad
mov
mov
bound
and
in
pushf
and
inc
jae
addr16
cmpl
pop
mov
addr16
movsb
xchg
xchg
mov
aaa
outsl
aaa
jecxz
fisttps
aas
mov
inc
leave
int
sub
xor
xchg
in
pop
mov
dec
stos
add
sub
jmp
jbe
in
adc
jge
jle
sar
scas
pop
in
in
mov
out
es
lea
psrlw
xchg
and
loopne
push
cmpsl
sti
xchg
add
lds
sbb
jle
insl
mov
and
sub
lock
enter
cmp
call
jle
add
cwtl
add
addr16
cmpl
inc
mov
out
xor
cli
jle
mov
push
mov
ret
and
xor
xor
pop
mov
lret
jo
scas
pop
pop
add
jp
jb
mov
test
bnd
loopne
mov
loop
in
fdivs
jl
test
popf
mov
pop
fcmovnu
repnz
sbbl
aaa
lds
in
dec
movsl
mov
cmp
sub
cmp
ficomps
arpl
in
sbb
pusha
dec
mov
js
jns
popf
mov
mov
xor
jne
xor
rol
out
add
dec
adc
arpl
xor
movups
arpl
test
xchg
jp
insb
jmp
adc
dec
lea
sub
push
hlt
pushw
mov
push
xorb
stos
cmpsb
insb
jle
pushf
mov
sub
insb
test
test
dec
push
push
mov
mov
push
pop
test
popa
push
sbb
das
int3
dec
sub
xchg
mov
insl
loopne
adc
xchg
ret
mov
movsl
mov
add
push
inc
stc
push
rcrl
daa
mov
imul
out
dec
adc
mov
adc
mov
mov
leave
loop
inc
sub
and
test
sub
jb
aad
std
roll
negl
mov
mov
and
dec
cld
mov
pop
cwtl
mov
xchg
mov
stos
jae
pop
adc
insb
xor
or
and
jnp
and
pop
push
test
ss
fs
movsb
xchg
jb
push
daa
sub
in
int
push
xchg
das
iret
add
mov
icebp
sbb
orb
fisttpll
sarl
lcall
push
push
and
adc
fists
jge
inc
push
rcll
xchg
les
sub
mov
xor
imul
aas
cmp
lods
ja
inc
dec
lds
jae
sbb
shrl
lahf
push
fsubrl
sbb
mov
gs
daa
mov
xor
and
jge
inc
cmp
clc
fnstcw
xchg
or
add
add
jne
xsavec
int3
repnz
inc
call
mov
pop
shrb
ret
std
and
cmp
and
imul
xor
into
xlat
in
mov
pop
inc
jge
mov
pop
mov
or
xchg
jo
xchg
xchg
sbb
sti
mov
ret
lods
js
xchg
out
lods
decb
xchg
cmp
mov
pop
pop
xchg
adc
cltd
mov
push
push
inc
mov
mov
stos
pop
or
fcoml
xchg
sub
lock
xchg
inc
sbb
mov
scas
jns
sbb
hlt
or
lods
stc
js
inc
arpl
fsubl
das
and
mov
out
daa
sub
sub
jg
mov
pop
push
outsb
push
jae
lock
xor
add
popa
xor
mov
jne
pop
xchg
jle
gs
mov
shll
negb
test
cld
push
inc
cmpsl
inc
test
outsl
jo
mov
insl
and
add
adc
sub
push
sub
xchg
jae
add
mov
sub
cmp
cmp
cmpl
and
push
bound
jp
jb
fstpt
sbb
lcall
imul
inc
xchg
pusha
xchg
fisttpl
push
movsl
stos
xor
insl
int
push
ljmp
pop
add
mov
mov
pop
jne
push
cmp
roll
insl
out
cs
mov
sub
jns
enter
test
cmp
cmpsl
xchg
adc
ds
sub
xor
ja
mov
shrb
mov
xor
lret
in
data16
fdivp
and
aaa
add
and
jb
out
addr16
popa
cltd
xchg
cmc
cmp
aad
sub
or
ret
sahf
sahf
mov
test
divl
lock
xchg
stc
inc
gs
cmc
jg
pop
cld
push
sub
cmp
les
roll
lret
imul
call
cwtl
leave
lahf
push
rcrb
in
mov
xchg
push
icebp
pop
out
ja
add
hlt
mov
dec
ds
mov
or
mov
aaa
sub
or
outsl
lods
bound
jmp
pop
sub
dec
lret
add
aaa
pop
add
ud2
xchg
add
aad
repnz
je
mov
cld
divl
sbb
cmpsb
addr16
std
in
jl
and
push
into
jl
lds
enter
jnp
sbb
enter
mov
inc
inc
lea
mov
in
jne
cmp
sub
xlat
es
sub
or
cs
adc
clc
cld
in
cmp
fcmovu
fisubrl
push
rcl
and
pop
mov
mov
push
adc
call
popf
adc
pop
aas
inc
cmp
aad
lods
imul
add
push
jne
mov
ret
ds
pushl
inc
or
adc
jmp
jnp
shll
jp
je
xor
call
adc
add
or
jl
or
push
pop
insb
fnstcw
xchg
leave
int3
cmc
or
test
shrb
adc
jmp
inc
aam
loop
cld
push
inc
ljmp
or
sub
popa
mov
outsl
jbe
pop
push
mov
sbb
dec
insb
lock
insb
xchg
cmp
mov
push
imul
dec
shr
dec
aad
pop
popf
loop
scas
fidivl
sub
or
adc
mov
xlat
aad
movsl
push
push
xor
popa
cld
repnz
cmp
add
add
sahf
mov
sub
out
mov
xchg
push
push
pop
mov
outsl
mov
cltd
and
lock
xchg
stos
popf
jb
mov
cmp
xor
stos
mov
dec
mov
mov
dec
mov
clc
hlt
jne
cs
movsb
adc
xlat
mov
xchg
dec
lret
push
mov
xor
xchg
test
arpl
mov
xor
lret
xor
or
fmull
fidivs
movsl
xchg
mov
inc
testb
dec
stos
xor
sahf
sub
ljmp
inc
movsb
test
shll
xor
repnz
int
and
sbb
ficoml
jle
stos
lds
les
stos
pop
dec
push
xchg
inc
fnstsw
mov
and
mov
fbstp
cmp
jo
jmp
pusha
mov
aad
adcb
jmp
mov
fldenv
add
and
jg
fnstsw
test
repz
imul
or
mov
movsb
mov
testl
cmc
stc
push
fcomip
cmc
out
cmpsb
mov
mov
loop
adc
add
scas
jp
outsl
add
stos
or
repz
push
mov
adc
sbb
xor
fnstenv
mov
test
jge
enter
lods
xchg
jne
mov
jg
fst
xlat
cmp
mov
xchg
lods
push
mov
jge
call
sbb
xor
stos
repz
int3
jne
jp
mov
or
dec
dec
mov
jnp
je
rcrb
or
dec
addr16
nop
jp
insl
addb
aaa
add
pop
xchg
and
or
mov
lods
je
mov
int
scas
inc
outsb
xchg
sarl
dec
sub
pop
dec
sub
insb
jne
jne
fsubl
or
sub
bound
sahf
cwtl
xchg
test
int3
mov
fstl
inc
or
push
inc
out
test
cltd
cmpsb
das
xchg
shll
jae
mov
adc
enter
jle
insl
xchg
in
pushf
pop
jmp
shlb
fiaddl
inc
mov
iret
rclb
jne
mov
jo
or
jl
dec
data16
inc
inc
fst
mov
gs
jg
pop
into
or
sub
test
dec
cltd
add
in
push
add
cmp
das
xchg
mov
icebp
in
mov
iret
inc
int
mov
outsb
mov
or
xor
pop
movsl
cli
jecxz
or
hlt
inc
lods
cmp
std
lock
and
inc
dec
xorb
xor
decb
mov
push
mov
cs
xchg
push
test
in
and
push
fdiv
fnstenv
mov
lret
cs
push
js,pt
fidivrs
add
pop
lea
push
add
das
xchg
mov
cld
movsb
imul
test
lock
call
clc
push
cmp
add
mov
pop
bound
jmp
pop
addb
mov
int3
jae
divl
mov
in
repz
adc
jae
dec
push
jge
leave
pop
mov
and
push
xor
fwait
mov
imul
mov
xor
xchg
shl
mov
in
push
wrmsr
pushf
cmp
daa
arpl
fsubr
add
xchg
lahf
shll
sbb
lcall
and
pop
mov
xor
push
mov
push
cld
inc
in
imul
dec
dec
imul
out
push
mov
leave
mov
pop
dec
pop
movsb
loopne
inc
xor
sti
xchg
xchg
xor
hlt
gs
mov
out
inc
es
pop
mov
lea
out
xor
cli
push
mov
mov
add
int
jecxz
or
lods
or
jmp
fidivl
hlt
scas
pop
sbb
rcll
cmp
mov
sbb
aaa
xorb
xchg
and
push
pop
test
or
clc
jl
loop
testb
addr16
cltd
dec
imul
call
movsl
cmc
psubw
mov
in
sarl
sbbb
ret
mov
or
arpl
ret
xchg
fwait
adc
and
cmpl
lock
or
mov
push
adc
mov
fcompl
pop
aaa
jmp
movb
mov
clc
sahf
negl
scas
jns
jbe
and
jbe
imul
jb
leave
std
cmp
cmpsl
push
mov
loope
iret
jne
xchg
adc
fs
mov
fadds
shll
push
mov
push
faddp
hlt
rol
mov
sbb
push
xor
popa
lret
mov
lods
iret
jnp
mov
lret
xor
cli
push
jmp
xlat
rorl
aas
jmp
sub
mov
ret
push
xchg
icebp
stc
aam
mov
add
in
fwait
push
dec
aaa
lcall
cmp
mov
cmpsl
nop
jno
shl
push
scas
dec
jo
push
test
addb
cmpb
sub
enter
loope
in
jmp
shll
pop
out
cmpsl
xor
cltd
ja
mov
inc
dec
cmpsb
lods
and
outsl
and
pop
mov
les
cmp
xor
mov
adcb
mov
ljmp
ret
lods
push
hlt
cmp
pop
orps
dec
fisubs
jecxz
loop
lcall
mov
sbb
mov
xchg
mov
mov
test
fcmovnu
adc
jle
das
fnstenv
out
or
test
mov
or
das
add
push
jno
xor
fsubl
nop
jnp
mov
sti
sub
push
adc
arpl
and
fadds
into
adc
mov
mov
mov
and
inc
xlat
xchg
sub
pushf
lret
jmp
or
orl
sub
push
loop
repz
pop
jo
mov
popl
jae,pn
lret
xchg
pop
sti
xor
imul
and
je
jp
jl
mov
jno
testb
es
jb
cld
inc
out
pop
das
cwtl
push
les
popf
insb
xor
jecxz
sub
cs
idivb
daa
jo
jmp
mov
dec
gs
jns
jg
test
push
jne
and
push
push
or
push
xchg
xchg
loop
ret
sbb
push
dec
fildll
outsb
cmp
mov
jle
add
mov
push
in
cltd
cltd
arpl
mov
cmp
pop
mov
pop
sarb
xchg
cld
cmp
mov
ss
jg
mov
fmuls
lods
and
add
test
mov
aad
push
mov
push
ret
push
mov
mov
in
les
cmp
mov
pop
scas
pop
cwtl
xor
adc
fiadds
test
xchg
mov
aaa
xchg
daa
ret
push
pop
test
ffreep
sbb
xorl
repz
addr16
pop
cli
jae
hlt
push
fistpl
fcoml
mov
jbe
nop
push
shlb
inc
call
aaa
jmp
mov
mov
movsl
cs
inc
cmp
jge
data16
push
cwtl
mov
mov
sbb
mov
sub
into
cli
js
pop
ss
in
ljmp
mov
dec
push
xor
fdivrs
push
cli
dec
sub
popf
movsb
int
ficoms
insb
out
rcr
fadds
in
push
fsubrp
shll
cli
gs
xchg
lret
cmp
mov
sti
int3
adc
je
push
and
aaa
dec
out
psrlw
push
push
mov
dec
xor
int
jae
add
adc
sbb
out
cltd
mov
jno
cmp
in
adc
xchg
inc
push
fsts
movsl
aas
les
icebp
mov
pop
pop
jae
divb
mov
adc
mov
aad
adc
xchg
sbb
adc
mov
push
push
arpl
or
test
fwait
pop
aas
test
push
sub
clc
repnz
push
cmpsb
sbb
aam
pop
sub
rclb
xchg
add
cmp
mov
sahf
inc
inc
mov
push
and
fwait
jp
fimuls
ds
dec
mov
jae
or
xor
bound
or
movsb
jbe
inc
sti
or
popf
inc
push
test
popa
cmp
mov
jle
lock
xchg
sbb
sub
mov
scas
mov
aad
push
and
sbb
aam
jae
xor
jb
jae
inc
subb
stc
es
mov
mov
je
gs
and
sbb
dec
outsl
iret
add
outsl
adc
lods
xchg
jbe
stc
es
orl
daa
xchg
popf
pop
pop
mov
leave
xchg
jecxz
imul
insb
xchg
mov
push
pop
loope
or
and
push
sub
popl
sub
xor
rorl
pop
mov
mov
shl
int3
icebp
adc
and
nop
mov
add
loop
sub
add
fildl
sbb
ss
shlb
orl
js
pop
pop
fisttpl
insl
cltd
cmpl
in
push
lahf
popf
lods
pop
std
inc
and
mov
mov
jae
shr
or
int3
sti
fsubs
add
aad
push
push
inc
push
pop
pop
pusha
nop
std
lods
out
lahf
sub
and
ss
ljmp
lods
jae
icebp
sub
push
jb
daa
pushf
sahf
push
mov
sbb
loope
lock
adc
mul
and
test
fwait
jns
test
sbb
scas
mov
pop
and
push
jge
ror
test
mov
mov
lahf
test
stos
mov
decb
push
push
or
dec
loopne
in
xchg
loopne
jo
sbb
iret
lds
pusha
or
pop
mov
sbb
sarb
jle
jnp
sbb
mov
sub
pop
adc
outsl
mov
or
push
addr16
fildl
jecxz
fcoml
fstl
cmp
gs
icebp
imul
inc
je
mov
or
adcb
iret
xlat
and
fstl
sti
mov
fdivrl
jl
mov
int
mov
sbb
cs
stos
lods
jg
cmp
and
mov
push
adc
lret
pop
mov
pop
arpl
pop
pop
inc
cmp
loope
mov
sbb
jns
or
repnz
push
cmp
aas
aad
call
sti
lods
pop
dec
shll
push
xor
xchg
xchg
dec
enter
jne
adc
shlb
vmwrite
adc
lret
pop
or
sub
call
adcb
push
add
adc
pop
push
stos
push
dec
mov
and
push
inc
sub
pop
cmp
mov
pop
clc
in
mov
add
add
xchg
jns
push
in
sub
notl
ljmp
in
mov
test
iret
cmp
add
inc
mov
mov
lret
or
pushf
stos
adc
pop
call
loop
test
out
pop
testb
cltd
mov
std
mov
lea
add
adc
and
out
pop
mov
loopne
js
cwtl
out
or
scas
scas
jle
imul
stos
into
inc
fcmovbe
rcrb
dec
fucom
push
call
mov
negb
or
jecxz
mov
fcmovbe
ds
xchg
dec
inc
adc
lock
mov
lods
dec
subb
inc
stos
popa
fsubs
dec
daa
pavgb
xorb
mov
int3
aaa
fidivrl
mov
mov
into
jbe
es
adc
mov
dec
nop
mov
pop
cmp
sti
pop
ficomps
data16
dec
ja
icebp
stos
xchg
xor
std
inc
and
shll
lods
dec
ljmp
mov
test
jecxz
pushw
lret
cmp
pop
lret
mov
inc
pop
xchg
rcr
iret
mov
mul
fiadds
mov
xchg
mov
inc
jb
xor
mov
push
out
push
xor
aas
add
xchg
ljmp
cmp
dec
or
loopew
outsb
icebp
jb
dec
and
gs
dec
loope
dec
mov
fcoms
dec
repnz
mov
int
outsb
jg
leave
push
dec
ja
push
mov
jp
push
aam
push
mov
mov
cwtl
mov
lea
push
stc
push
iret
imul
pop
push
mov
cmp
aam
mov
dec
pop
into
ss
cmp
jbe
jle
scas
incl
xor
mov
iret
popf
adc
enter
scas
out
in
mov
mov
ds
ja
add
stos
loop
dec
loop
jbe
push
sub
bound
add
pusha
std
rcrl
adc
fcmovb
stos
lea
imul
mov
add
test
mov
cltd
lods
cmc
fnsave
mov
dec
repnz
sbb
pop
sbb
test
pop
sbb
cmp
in
or
pop
sub
ficompl
cs
int
push
push
adc
dec
cltd
cmp
movsb
cmpsb
loop
movsl
mov
mov
add
mov
and
data16
sub
adc
and
xor
add
subb
mov
lods
shlb
push
lods
lret
mov
push
dec
ljmp
ror
push
testl
mov
jmp
fildll
lcall
sub
or
aaa
icebp
or
addb
add
jb
mov
cmp
outsb
xorb
mov
popa
testb
xor
ja
adc
sti
jecxz
or
imul
pop
sbb
rorl
js
divb
scas
fidivrl
add
dec
mov
mov
mov
sub
mov
xchg
adc
jecxz
xchg
adc
cmp
jp
imul
sub
jmp
in
gs
jne
inc
xchg
dec
bound
iret
jns
mov
movsb
fsubp
jmp
fimull
jns
mov
movsl
inc
je
cmc
jp,pn
aad
ds
adc
loope
dec
fistps
int
int
nop
pushf
cmp
xor
inc
mov
jmp
mov
fs
cmpl
test
popf
push
add
push
push
rdtsc
rcr
outsb
cmp
shlb
not
ds
add
lea
stos
dec
and
mov
scas
ret
jnp
and
es
lock
adcb
cld
iret
fs
or
push
or
cmpl
imul
test
dec
cs
xchg
inc
sbb
cltd
fs
mov
cmc
movsb
xchg
mulb
das
clc
xor
xor
mov
inc
and
lds
mov
sub
stos
or
mov
sbb
in
pusha
and
adc
shll
dec
ss
xor
xor
jns
push
jbe
mov
xor
xor
sti
stc
adc
xchg
jmp
jnp
repz
mov
jne
mov
outsl
ret
rdrand
inc
das
stc
or
lcall
mov
subb
clc
inc
sub
mov
add
sti
iret
jmp
js
jno,pn
or
enter
sarl
sub
jb
dec
inc
shrb
andb
add
mov
pusha
hlt
in
push
sarb
lret
push
sub
jecxz
xchg
adc
and
mov
mov
mov
bound
pop
fadd
xchg
bswap
push
mov
jb
mov
lods
xor
or
add
cltd
in
pop
je
push
pop
mov
lcall
push
aad
dec
out
pop
mov
lock
sbb
xor
xor
jbe
les
jnp
cmp
xchg
sbb
cmp
push
lock
lea
pop
xchg
int3
je
out
or
push
sub
clc
imulb
jo
xlat
or
movsl
dec
fnstsw
pop
jno
mov
and
and
sbbb
dec
add
sub
pusha
and
in
push
fwait
dec
cmpsb
add
cli
mov
scas
add
push
lcall
lahf
jg
movsb
in
mov
pop
pop
mov
push
jg
inc
mov
xor
aaa
imul
xchg
ljmp
movsb
jle
mov
into
lret
popa
dec
mov
into
jp
or
cli
mov
jecxz
mov
cmpsb
push
in
movsb
test
mov
popf
test
daa
xor
fnstenv
jns
add
imul
xor
and
scas
cmp
jb
sub
push
mov
jb
pop
dec
fisttps
cmp
lret
cli
cmp
in
sub
cmpsl
push
addb
movsb
push
outsb
int
fwait
mov
nop
int
sbb
add
inc
mov
sahf
lods
pop
fdiv
movl
pop
fnstcw
xchg
push
sbb
adc
stos
fmuls
mov
bound
jno
mov
adc
ret
add
hlt
sbb
arpl
in
inc
sbb
add
test
mov
mov
fistl
inc
cmp
fbld
shl
clc
in
repz
into
cmp
dec
dec
jmp
out
cmc
in
sub
pop
cmp
add
das
lods
jg
and
int
and
stos
jae
mulps
cmp
jge
mov
ljmp
and
xor
in
lret
pop
aam
push
int3
dec
test
jb
rcll
pop
xchg
loop
push
shrl
daa
pop
pop
fmull
shll
lea
fsubrl
pop
mov
scas
leave
das
aas
inc
fwait
cmp
roll
adc
push
push
xor
adc
sub
adc
out
out
inc
in
fisubs
clc
js
sbb
xlat
sarl
fs
adc
nop
dec
and
or
lock
adc
cld
call
movsb
out
dec
gs
sahf
movzbl
push
mov
ds
push
push
jp
movzbl
imul
cmpsb
ja
setge
xor
push
add
test
call
jns
sbb
mov
push
or
nop
inc
and
dec
push
cltd
jge
iret
jmp
in
mov
popf
lret
test
mov
jl
push
pushf
call
add
or
orb
lea
gs
in
fadd
fstps
mov
pushf
or
mov
push
repnz
ret
jl
lcall
and
mov
xchg
push
xor
in
idivl
mov
addr16
mov
mov
xchg
sbb
and
in
mov
shrb
sub
cmc
scas
cmpsb
fcmovnb
cs
insb
jns
or
lahf
mov
pop
lahf
pop
inc
xlat
and
pop
xor
mov
add
in
mov
jl
sub
repz
fwait
sbb
outsl
imul
rcl
add
addr16
add
insb
inc
movsl
daa
and
sarb
xor
push
aad
pop
and
scas
dec
push
add
sub
imul
inc
roll
lret
jns
dec
xchg
popf
jnp
and
or
xor
shlb
hlt
or
pushf
or
stos
shlb
cli
addr16
sub
shrb
pop
inc
cmpsl
jl
inc
adc
rorl
and
test
fnstenv
sub
xchg
adc
pop
mov
sub
fwait
mov
inc
or
imul
aam
es
dec
xchg
rcr
push
or
jg
div
aad
or
or
icebp
push
inc
xor
jmp
mov
inc
insl
mov
icebp
dec
add
cmpsl
jno
loope
jno
xor
mov
vdivps
xor
sbb
mov
jnp
lret
sbb
das
movsl
adc
inc
jae
int
repnz
lahf
add
jbe
sbb
cld
mov
add
lea
pop
in
adc
aas
cmpsl
inc
cmp
movntq
stos
and
push
test
js
sbbl
lods
or
mov
lods
andb
jmp
jle
iret
loopne
pop
jmp
lahf
pop
aas
shll
mov
mov
lret
sbb
mov
sub
mov
mov
aaa
lods
mov
and
mov
call
mov
mov
aam
movsl
ret
push
loopne
movsl
popf
mov
jno
or
notl
das
ja
je
cmc
cmpsb
xor
sbb
imul
pop
out
div
sub
ret
scas
ret
mov
in
lahf
add
inc
or
gs
shrl
mov
jo
mov
jnp
pop
adc
lahf
cmp
push
inc
pushf
push
jg
add
add
bound
mov
aaa
pop
hlt
mov
push
sti
fcomps
mov
out
arpl
or
xchg
add
push
sub
ljmp
insl
pop
push
mov
fsub
fs
movsb
mov
addr16
add
cmpsl
jns
outsb
jl
sbb
das
mov
cmp
fwait
data16
and
push
adc
stos
fildll
inc
fdivl
hlt
test
sbb
fwait
hlt
cmp
pop
rorb
es
gs
mov
mov
scas
rorb
int
ret
xor
and
divl
cmp
cld
notl
jmp
dec
vunpckhpd
cltd
das
pop
mov
cmpsb
add
xlat
cld
ret
mov
mov
roll
popf
sbb
sbb
push
dec
test
and
iret
lock
mov
lcall
or
outsb
jns
and
cmpsl
cmp
mov
lcall
push
push
out
xor
rcl
daa
xchg
push
notb
imul
xor
mov
es
mov
adc
aaa
inc
jo
pop
cli
lret
divb
sub
in
or
dec
mov
dec
iret
cmp
xor
filds
xor
push
jmp
lock
das
sbb
in
lahf
sub
push
inc
mov
push
fldl
xchg
nop
adc
jae
lea
sub
dec
popf
or
dec
ret
ljmp
daa
add
les
cmp
xor
mov
mov
fsubs
mov
mov
inc
lcall
and
pop
outsl
inc
inc
jmp
mov
testl
lret
pop
shlb
and
push
push
andb
mov
and
fsubl
mov
xor
fsubr
jg
and
jno
adc
scas
enter
adc
loop
ds
mov
jecxz
xchg
adc
fidivrl
std
in
adc
jecxz
aaa
pop
mov
mov
add
jge
int
out
addr16
inc
repnz
or
xor
out
push
cs
mov
jne
aas
adc
ljmp
das
jnp
fistpl
xor
mov
pop
and
popf
pop
sbb
scas
push
pop
adc
std
xchg
aam
mov
scas
popf
xor
mov
cld
push
ficompl
adc
inc
add
cmpsb
insb
jmp
cmp
and
lret
lock
repnz
popf
inc
cmc
cld
scas
ds
or
pop
jecxz
inc
jns
mov
jae
cld
sti
in
xor
push
insl
cwtl
scas
lcall
clc
fwait
ja
ljmp
mov
daa
ljmp
push
int3
pusha
mov
cmp
mov
shll
jmp
jo
mov
pop
cld
and
mov
pusha
sub
movsb
fidivl
fsubr
out
xor
sbb
ds
lahf
mov
dec
test
test
sub
cs
jg
cmpb
mov
pop
pop
rcrb
mov
push
loop
and
ss
add
pusha
movsb
sub
andb
sbb
imul
adc
dec
nop
repz
mov
mov
test
or
mov
dec
push
or
sti
jo
push
sbbl
mov
jno
sub
xor
mov
test
shlb
push
enter
aam
xor
scas
js
das
lret
mov
outsb
jne
loopne
mov
cmp
clc
inc
xchg
jae
xlat
cmp
sub
lahf
push
aas
mov
add
scas
clc
addl
dec
test
dec
mov
js
xor
adc
push
inc
or
mov
pusha
das
pushw
ret
pushf
lods
pop
pop
js
add
ja
fwait
js
or
push
cli
test
mov
xor
add
xchg
push
stos
or
mov
ficoms
inc
inc
xor
loope
mov
shll
dec
dec
dec
dec
fldt
cmpsb
cltd
add
xchg
sbb
pop
inc
jbe
mov
xor
inc
cmp
inc
xor
out
cmc
jae
sub
pop
aad
mov
pop
mov
les
pop
xor
adc
in
aaa
bound
inc
pop
sti
mov
popf
bound
bound
stos
jno
mov
fists
jns
fs
sub
punpckhdq
adc
or
sbb
cmp
xor
push
add
mov
fcmove
sarl
sub
jg
pop
cmp
dec
mov
mov
addl
mov
jmp
add
lahf
js
std
mov
lds
adc
dec
add
sbb
inc
cmp
dec
xchg
and
mov
push
addr16
jp
call
pusha
jg
fstpl
ja
mov
aad
in
jg
inc
jmp
xor
sti
inc
stc
out
rcrl
pop
test
lret
push
jmp
adc
mov
and
sub
mov
lcall
jecxz
mov
xchg
in
jae
or
adc
xor
sub
inc
mov
fwait
into
inc
arpl
xor
sbb
mov
push
dec
jl
addr16
call
pop
push
popa
jl
jne
jbe
fnstenv
inc
pop
insl
pop
fwait
icebp
loopne
repnz
cli
fdivrs
popa
test
or
push
and
mov
mov
inc
push
rcr
or
push
fstps
cmpsb
aas
inc
jl
hlt
in
sub
jge
dec
rcl
aaa
sbb
sti
inc
daa
bound
push
or
cmp
add
ja
cld
and
xchg
flds
out
push
js
mov
push
sub
cli
or
jne
pop
add
mov
mov
xchg
mov
out
stc
inc
cmp
clc
imul
pop
lods
sbb
pusha
sub
into
shrb
pop
xchg
divb
add
movsb
pop
std
repnz
dec
js
lods
mov
mov
enterw
inc
gs
pop
popf
dec
or
fwait
xchg
jbe
inc
xor
out
adc
ds
mov
xor
fsubl
shll
mov
jbe
movsl
or
jb
mov
push
aaa
pop
adc
pusha
call
fistpl
mov
popa
sub
imul
stos
stos
inc
shl
dec
inc
and
aam
pop
mov
arpl
fldcw
cmp
inc
add
jo
push
and
js
ret
sbb
sub
ljmp
adc
pop
iret
in
adc
xlat
aas
outsb
cmpsb
jmp
loope
xchg
push
sbb
in
cld
and
fcompl
mov
test
int
push
jb,pn
jnp
and
aam
loope
pusha
push
repz
xchg
outsb
in
push
inc
sub
arpl
test
into
jecxz
std
pop
pop
daa
cmp
pop
dec
test
mov
xchg
lea
xchg
dec
pop
das
aaa
mov
sahf
dec
push
inc
mov
les
dec
pop
jno
pop
in
xchg
je
inc
int
iret
daa
movsb
dec
dec
xchg
and
stos
mov
dec
cmp
nop
push
pop
mov
addl
rcl
inc
ret
lea
sub
ret
ror
pop
dec
pop
arpl
mov
mov
pop
or
dec
xchg
push
call
xor
daa
les
mov
pop
xor
scas
insl
push
xchg
and
mov
xchg
incl
mov
pushf
test
icebp
mov
jp
sub
in
cmp
insb
mov
xchg
fsts
fwait
and
or
and
pop
cmpsl
mov
imull
inc
or
sbb
xlat
jl
pop
jp
into
outsb
lcall
fs
inc
arpl
inc
outsb
add
push
enter
mov
les
dec
xchg
rclb
mov
mov
mov
pop
inc
mov
mov
adc
cmc
dec
pop
lcall
adc
rorl
xchg
push
in
add
outsb
loope
stc
stos
sti
dec
sbb
mov
out
loope
or
ja
out
stos
shll
mov
and
push
mov
and
pop
mov
jns
aam
cs
xchg
mov
xor
fisttpll
cmp
fsts
mov
jl
jge
cmp
addr16
in
rcll
jbe
xor
or
add
mov
iret
mov
fnstcw
ljmp
pop
stc
mov
push
or
dec
ficompl
sbb
les
sahf
xor
xor
cmp
hlt
adc
clc
test
daa
jb
pop
lea
mov
mov
mov
cmp
xor
adc
popa
xlat
or
or
pop
jns
push
dec
out
jnp
aas
dec
mov
imul
inc
pop
arpl
sub
and
mov
dec
lock
ljmp
jecxz
iret
jb
cwtl
dec
jmp
in
out
imul
mov
jg
lods
cmp
cmp
fidivl
cmp
ja
clc
pop
cmpsb
adc
xchg
add
iret
push
sub
mov
adc
xor
loope
jge
sub
out
xchg
ljmp
sbb
loopne
xorl
and
in
xchg
lahf
jb
sub
xchg
jle
dec
pop
shl
xor
sbb
xor
push
xchg
in
pop
xor
das
lock
imul
or
sti
and
fidivs
adc
jecxz
lcall
scas
push
sub
clc
enter
add
cmc
mov
push
xchg
lea
push
pop
mov
mov
mov
jbe
sub
bound
loop
aam
dec
and
or
test
shlb
mov
cmp
sub
insb
popl
xchg
push
cmp
mov
dec
cmpsb
ljmp
jb
inc
jno
mov
jle
ja
pop
pop
xorl
fiaddl
cwtl
sbb
inc
out
mov
dec
pop
jge
sub
push
or
outsb
stos
cld
in
add
fdivrl
mov
pop
add
das
orb
mov
mov
jo
mov
outsb
fistps
rcrl
mov
fld
add
cmp
and
sbb
fcomps
jae
dec
push
out
out
mov
adc
mov
jno
add
int3
xor
xorl
sahf
sbb
fstpt
add
sbb
adc
iret
push
push
adc
loope
mov
aaa
mov
or
sahf
movsl
mov
pop
fiaddl
das
mov
cwtl
cli
jae
lahf
jae
in
mov
out
jnp
dec
aam
rcll
mov
shrl
js
les
cs
mov
pop
mov
jnp
mov
out
or
inc
sbb
cmp
push
outsl
jle
hlt
mov
dec
xor
lret
pop
jne
inc
ja
add
mov
sub
in
cmc
cltd
fisttps
or
xor
out
dec
pop
ds
cs
xchg
dec
jne
sbb
and
pop
cmp
stos
pop
push
lahf
enter
std
cmp
into
sbb
cmp
push
sbb
push
fadds
or
scas
push
xchg
cmp
cmp
mov
jle
daa
loope
pop
fstpl
and
idiv
fldenv
add
lret
mov
insw
lods
jle
arpl
pop
aaa
jp
jecxz
push
arpl
push
mov
cmp
xor
movsl
dec
mov
mov
add
testb
roll
cltd
jge
adc
lret
add
shll
outsl
inc
sbb
pop
in
sub
jmp
out
jle
mul
and
sub
sbb
mov
xor
jo
gs
arpl
jecxz
lods
and
flds
mov
sub
cmc
dec
sub
and
adc
aam
jecxz
cmp
ret
sbb
mov
arpl
cmp
pop
xor
dec
in
aam
or
aaa
outsl
push
loope
cmpsl
sarb
scas
popf
or
sbb
push
cmp
iret
push
dec
fistps
into
mov
dec
fisubrs
mov
test
mov
push
jecxz
sar
push
jp
stos
xchg
lcall
incb
mov
dec
sti
and
dec
fcomp
lar
adc
mov
gs
cmp
ret
jg
jne
pusha
xchg
xchg
or
test
lea
aaa
add
adc
cmpsl
enter
xor
pop
dec
shrl
jl
mov
adc
mov
mov
mov
dec
nop
mov
inc
das
les
push
xchg
ja
rolb
stos
jb
push
pop
cmc
divl
and
fmuls
movsl
or
aam
adc
pop
loope
mov
xor
ljmp
mov
int
sbb
outsl
push
aas
and
dec
int
int
lret
fildl
movsl
ret
xchg
and
xchg
ja
sti
fidivs
mov
xchg
sub
mov
in
mov
push
cwtl
cmp
push
and
addr16
inc
fdiv
test
push
das
xchg
or
jnp
sub
fwait
mov
inc
scas
jo
int
mov
or
push
rcrb
jle
in
lret
adc
sar
adc
jae
loope
or
cmpsb
subl
dec
mov
lret
in
pop
pop
ss
cmp
or
repz
add
jmp
pop
pop
out
push
pop
andps
or
repz
lods
out
push
inc
rorl
jge
out
push
or
test
loope
jno
std
jecxz
cmpsl
cltd
inc
test
inc
test
aas
jnp
sbb
cltd
inc
hlt
or
xor
pop
adc
and
cmp
cmp
test
jg
adc
out
inc
je
lods
sbb
xchg
loopne
inc
or
mov
pop
lret
dec
daa
je
sub
daa
shr
jle
cltd
push
mov
push
aaa
add
inc
jae
adc
push
add
addr16
fwait
sbb
mov
out
sub
cs
or
test
cmp
fwait
loop
jmp
in
push
in
orl
shl
cmpsl
and
mov
aaa
add
out
and
mov
push
dec
int
xchg
mov
mov
mov
jg
inc
mov
in
pop
pusha
les
fistps
sub
lock
push
jmp
adc
add
outsb
adc
test
or
dec
and
ss
ja
cmp
lds
lds
adc
and
adc
outsb
out
idiv
imul
push
es
test
adc
or
test
add
test
mov
sub
sbb
push
inc
addr16
outsl
arpl
add
insb
in
dec
xor
test
cli
scas
inc
js
es
fidivl
mov
mov
xor
inc
xchg
outsb
mov
movsl
cmpsl
mov
inc
lret
data16
repnz
arpl
outsb
dec
ficomps
fildll
jp
adc
stos
sub
lahf
sbb
pop
out
sub
loopne
fwait
sbb
in
cmpb
pusha
test
movsl
mov
mov
decl
sbb
xchg
inc
jp
mov
iret
or
test
fwait
jle
sub
test
push
xlat
xor
lds
pop
add
and
jmp
cmc
out
inc
jns
out
add
mov
xchg
jg
sub
and
mov
repz
incb
xor
incl
push
sub
mov
and
fisttpl
out
xchg
aam
push
mov
test
lret
fwait
cmp
lods
push
popa
push
or
pop
and
sbb
or
js
push
push
mov
lds
arpl
ds
mov
mov
outsb
or
xchg
fistpl
cmp
jo
jnp
cmp
movsb
lea
fdivrl
xchg
mov
iret
xor
or
push
inc
push
xchg
xchg
mov
mov
aaa
xchg
adc
inc
push
dec
pop
dec
add
cli
popf
leave
fidivrl
lock
mov
xchg
ficompl
test
leave
je
mov
lret
daa
test
repnz
sarb
push
das
fidivrs
adc
dec
xchg
adc
jg
out
adc
xchg
dec
sbb
sahf
imul
in
stos
stc
mov
sbb
stos
jnp
into
and
dec
fldl2t
iret
adc
xchg
data16
fcmovb
gs
push
mov
sbb
jle
test
out
xor
sar
xchg
xchg
repnz
jle
fimuls
pusha
jbe
ficoms
inc
adc
shlb
pusha
sti
mov
mov
aaa
call
sub
fmul
into
hlt
inc
mov
stos
dec
push
add
xchg
mov
test
fmull
test
loop
and
xchg
or
adc
mov
lock
jmp
jae
pop
pusha
or
int3
fistpll
mov
lds
sub
dec
jp
imul
addl
pop
data16
push
push
xchg
add
addl
loop
sub
in
test
xchg
shr
inc
jo
xor
test
int3
cmp
fcmove
xchg
insl
aam
dec
jb
call
ds
inc
les
mov
nop
arpl
mov
push
push
mov
and
out
insl
jne
push
mov
pop
int
les
pop
cmp
mov
cmp
jae
cltd
push
nop
dec
or
insb
mov
adcl
jo
inc
mov
lahf
xchg
mov
lods
loop
js
push
jns
push
enter
popf
cmp
sub
leave
jp
loope
or
push
jmp
testb
sbb
pop
fcoms
or
fimuls
adc
pushf
add
imul
mov
cmpl
imul
xchg
pop
push
rcrb
loop
adc
add
adc
or
mov
inc
mov
in
int3
inc
xchg
or
cli
int
and
in
cltd
pop
test
test
ficoml
and
push
and
xor
sahf
dec
popa
mov
or
cmp
adc
popf
push
dec
std
gs
mov
out
mov
out
lods
adcl
mov
push
push
mov
ret
jp
popf
and
adc
data16
sub
xchg
adc
mov
mov
mov
cmp
jp
mov
sub
scas
test
test
xor
int3
pop
cmp
xchg
pop
insl
mov
lds
sbb
lock
test
xor
dec
fdivs
hlt
or
out
sub
pop
mov
inc
xor
mov
mov
sub
call
xorb
lcall
jo
mov
lods
das
das
movsb
cmpsb
push
push
andl
inc
out
jns
cmpl
subl
jo
pushf
cmp
pop
xlat
out
jbe
xor
rclb
movups
cld
cwtl
aas
mov
jb
push
pop
jae
dec
jns
push
sbbl
mov
into
lahf
sub
scas
mov
sbb
lock
aaa
lret
scas
inc
mov
test
cmpsl
cmc
fcmovnbe
or
mov
lret
ja
fwait
cmpsb
push
mov
in
in
mov
scas
xlat
dec
mov
inc
jl
fidivrs
loope
cli
popf
inc
fwait
lock
push
mov
add
lret
inc
cmpsl
ljmp
pushl
sarl
lret
movsb
mov
xchg
dec
or
scas
dec
movsl
fs
cmp
cld
pushf
mov
bound
lret
mov
or
mov
push
cmp
ss
add
add
lcall
mov
add
fildl
mov
xchg
repz
xchg
cltd
sub
or
jns
in
jg
in
adcl
rcl
add
popa
jmp
xor
aas
ss
cli
fnstcw
movsb
push
mov
sbb
enter
es
ljmp
and
fildl
test
jno
push
cmc
in
repz
pop
mov
xchg
ret
into
sub
pop
jb
adc
imul
mov
es
sarb
and
adc
test
dec
and
adc
loopne
testb
xchg
add
xchg
loop
mov
fmul
xchg
xchg
js
andb
pop
and
ds
xchg
and
mov
xor
mov
mov
and
int
or
jns
xchg
sbb
add
or
cmpsl
dec
xchg
add
int3
repnz
pop
jb
out
ljmp
iret
cmpsl
and
adc
xchg
stc
mov
pop
outsb
in
push
in
push
dec
push
loopnew
or
xchg
dec
and
sbbb
push
pop
adc
dec
addb
xor
jne
push
mov
loope
pop
sahf
add
scas
adc
pavgw
sub
cmpsb
popa
or
filds
hlt
xchg
hlt
inc
pop
inc
lcall
stos
in
mov
pop
xorl
loop
mov
pop
shr
imul
pop
test
lea
or
loop
dec
lret
jnp
nop
jbe
icebp
cmp
xlat
jg
insl
faddl
lock
imul
pop
inc
jle
mov
popf
jmp
scas
pop
cli
jmp
lds
daa
ficoms
dec
add
ficoml
rcrb
imulb
lea
cli
out
imul
mov
adc
and
sbb
sub
xchg
cmp
pop
cmp
xor
insl
push
mov
or
mov
orb
lods
push
dec
call
in
mov
std
rcrb
and
dec
out
sbb
or
dec
sbb
sub
and
jno
push
or
sarb
and
scas
repz
push
mov
sbb
push
add
xor
fs
xlat
ljmp
clc
cmp
lret
inc
test
addr16
je
jmp
sub
test
mov
fwait
jnp
je
pop
fldenv
pop
rol
in
iret
add
add
in
add
mov
mov
lret
inc
cmpb
xor
jl,pn
in
mul
pop
mov
stc
std
xchg
jmp
xchg
dec
fdivrs
icebp
jl
nop
jne
dec
imul
sbb
xchg
mov
cmp
insl
xchg
repnz
mov
push
jb
repz
insb
ss
dec
addl
test
lds
dec
pop
and
xlat
sbb
jl
pop
push
jb
scas
stos
mov
jp
jno
xor
add
mov
sbb
cmpsb
or
sbb
sub
add
push
fstl
push
mov
sbb
push
adc
adc
mov
divl
or
or
mov
add
xchg
test
ret
shll
nop
cmpsb
lcall
movsl
add
and
or
mov
outsb
push
cwtl
mov
xor
outsl
gs
cmpsb
or
adc
cmpsb
xchg
or
les
mov
inc
mov
jo
push
loope
jbe
mov
in
out
xchg
ds
jle
adc
xlat
lcall
test
lret
add
ret
mov
xchg
add
mov
cmp
inc
sarl
cmp
aad
jle
test
pop
call
pusha
fdivr
sub
lock
cmp
iret
mov
ret
aaa
dec
call
add
pop
ret
mov
xor
aam
sahf
aaa
cli
mov
pop
in
shrd
dec
pusha
shl
inc
mov
jbe
jnp
sahf
ljmp
jb
fildl
mov
mov
adc
jb
in
cltd
mov
wbinvd
aas
lock
mov
ret
mov
lgs
inc
ss
lcall
jmp
add
inc
xor
mov
fsubl
fcom
pop
pop
fadd
fadds
jnp
es
mov
xchg
test
pcmpeqd
inc
lea
cmp
dec
xor
sub
or
inc
movsl
dec
stc
add
xchg
iret
and
push
out
push
out
stos
xor
and
cs
jl
inc
jl
cmp
xchg
shl
xor
inc
push
dec
sti
iret
jae
inc
ret
jmp
cmpsl
loopne
movsl
jno
cmpb
in
xchg
sub
hlt
cmp
shr
jp
jo
sbb
mov
cmp
cmp
aam
push
cld
lret
hlt
mov
insl
ds
sub
mov
xchg
sub
jg
fidivs
mov
mov
sbb
movsl
lock
dec
push
ss
stc
idiv
mov
pusha
adc
jecxz
mov
xchg
inc
mov
add
movsl
jae
adc
pop
lods
and
out
jnp
arpl
stc
shll
int
mov
pop
push
sbb
mov
xor
mov
jo
mov
stc
mov
js
pop
jg
adc
repnz
inc
xchg
adc
adcl
lahf
mov
popf
lret
jmp
inc
outsl
jecxz
ficoms
mov
cmp
in
out
sbb
int3
je,pn
nop
imul
out
hlt
and
push
adc
popf
jecxz
or
cmp
mov
and
or
loopne
out
insb
and
outsl
inc
mov
push
lahf
pop
sbb
mov
dec
mov
inc
sbb
mov
sub
cmpl
xchg
outsl
out
cmp
mulb
xor
loop
js
loop
cmp
loope
cmp
xchg
cwtl
divl
add
fistpll
adc
les
testl
into
outsl
fwait
adc
dec
ja
pop
mov
mov
push
shlb
in
pop
leave
jo
nop
xchg
pushf
xchg
mov
xor
mov
imul
aad
test
cmp
jae
xor
les
mov
andb
outsl
insb
or
pop
stc
mov
pop
pushf
stos
andl
repnz
lods
enter
xor
or
mov
mov
add
popa
sahf
inc
lahf
popf
loope
jb
popa
aas
ret
out
jl
sbb
jp
ret
push
cwtl
mov
shll
aam
cmp
movsb
adc
sub
movsl
add
mov
popa
sbb
ss
pop
mov
ss
xchg
push
inc
pop
push
lods
or
jmp
mov
pop
adcb
cmpsl
lret
mov
stos
cmp
aaa
mov
fisubrl
mov
sub
lcall
pop
xchg
aaa
sub
out
cmp
ror
daa
cmp
ds
popf
icebp
push
xor
out
gs
das
imul
orl
aas
jl
cmp
or
jmp
mov
dec
sbb
insb
das
jno
add
pop
insb
push
push
dec
repnz
sub
lock
mov
in
in
lods
push
pop
pusha
scas
movsl
ror
scas
inc
insl
arpl
int
pop
dec
jo
pop
fwait
lods
pop
jo
loopne
xor
stos
cwtl
jne
push
rcrl
or
jo
add
cmp
shl
jb
xor
sub
jg
jl
fwait
incl
dec
ss
or
jbe
and
xchg
subb
leave
lds
fisubrl
and
test
js
add
in
dec
fcmove
and
shl
or
mov
inc
sbb
pop
fimull
mov
push
faddl
cld
mov
cmc
mov
jmp
or
jb
and
cmp
mov
lcall
scas
mov
sbb
mov
pop
sti
mov
pop
xor
dec
jg
inc
lods
mov
lret
xchg
and
sbb
leave
lea
fwait
xor
jmp
imul
bound
inc
or
movsb
lods
repnz
sbb
xorb
pusha
ds
jo
jnp
loopne
test
rcrl
mul
in
jo
lods
xchg
mov
sbb
es
mov
pop
adc
inc
cmp
ja
mov
push
jne
push
xchg
ret
sbb
push
and
ffreep
mov
inc
pop
sbb
stos
loop
out
hlt
jns
push
mov
pop
outsb
movsb
add
dec
test
mov
cld
aaa
ret
pop
pusha
pop
dec
sub
into
fmuls
cmp
sbb
std
inc
or
inc
dec
cmpsl
pop
push
roll
pop
decb
cmp
pushf
incb
aad
sbb
movsl
xor
sahf
xor
inc
icebp
imul
aas
or
lods
icebp
jno
jge
mov
mov
or
mov
fstps
popa
sbb
xchg
mov
fwait
sbbb
sub
fiadds
in
test
dec
faddl
inc
cmpsl
push
or
push
inc
loope
outsb
jp
pop
pusha
retw
pop
mov
scas
pop
xorb
int
test
leave
lds
jno
cld
pop
sbb
or
ret
test
mov
loop
push
mov
cmpsb
xchg
stos
cmp
adc
cltd
jl
jb
sahf
or
add
scas
out
and
push
push
add
xor
stos
lock
mov
testb
mov
test
mov
mov
jns
pop
outsl
push
jne
es
pop
jae
imul
add
add
loop
mov
data16
sub
and
mov
lcall
push
sti
sbb
add
dec
test
xor
push
push
xchg
xor
daa
stc
repnz
mov
mov
lret
sbb
data16
scas
sbb
mov
pop
or
cmp
adc
mov
hlt
or
mov
cmp
push
adc
mov
sbb
pushf
in
dec
test
adc
lods
outsb
scas
sahf
inc
jg
lock
push
xchg
adc
test
sub
cmp
je
push
lods
loopne
enter
les
and
xchg
shl
imul
jo
ds
insl
fwait
mov
adc
outsb
inc
in
aad
loop
in
jle
adc
or
push
or
pop
mov
cmp
es
push
inc
je
mov
scas
xchg
mull
mov
js
inc
fcompl
shl
scas
stos
das
or
push
nop
push
fnstenv
in
les
inc
or
add
inc
cmp
jb
pusha
sbb
xchg
sbb
movsb
jns
hlt
xchg
pop
pop
push
push
in
arpl
xchg
les
popf
stc
xchg
adc
pop
popf
and
lret
fnstsw
mov
mov
insb
imul
adc
cmp
add
cmp
loopne
push
and
stos
mov
jne
jmp
loope
mov
inc
xchg
ret
fcmovne
and
mov
aaa
rorb
out
sbb
xlat
clc
sahf
pop
inc
xchg
in
xor
addr16
pop
add
or
mov
int3
sub
sahf
cld
cmp
push
sbb
shrl
punpckhwd
in
pop
and
push
xchg
lods
repnz
xor
jo
jl
ret
jno
roll
leave
in
mov
and
xlat
mov
test
daa
sub
fnstsw
push
push
mov
popf
cli
fsts
aam
mov
pop
and
fwait
sub
mov
inc
gs
mov
mov
fisttpll
outsb
adc
jmp
xlat
jae
insl
aas
xor
cwtl
add
jae
adcl
xchg
int
cmp
sub
or
rorb
aam
iret
out
sub
push
repz
cmc
sbb
cmp
fistl
adc
mov
pop
sbb
xor
mov
enter
fstps
xchg
push
jmp
mov
push
mov
xchg
mov
icebp
pop
andb
decb
insb
pop
cmp
or
inc
rorb
xchg
xchg
les
test
out
rcrb
clc
mov
addr16
lcall
xor
out
mov
lea
fildll
mov
nop
outsl
or
pop
call
xchg
push
cltd
int
push
and
or
pop
ret
inc
cmp
icebp
cmp
pushf
mov
fiaddl
inc
repz
mov
or
mov
pushf
inc
inc
cmp
sbb
pop
js
adc
js
jnp
fisttpl
outsb
fistpl
inc
and
jb
xor
mov
fnstsw
int3
in
add
pop
call
test
add
data16
incb
test
jecxz
or
xchg
fsubrs
lods
inc
mov
clc
jno
add
hlt
adc
outsb
jge
sub
cmp
add
js
cmp
std
es
jne
fidivrs
jmp
push
jns
cmp
in
fmuls
pop
and
cld
pop
sub
pop
clc
jns
dec
fildll
mov
movsl
push
lods
lea
dec
add
cmpsl
in
jge
cmc
clc
xchg
inc
push
mov
cmpsl
xchg
std
xor
scas
inc
jg
nop
mov
or
or
inc
pop
dec
push
clc
adc
int3
pop
lods
stos
in
mov
xor
jno
push
sbb
jl
stos
std
cmp
aam
xor
pop
xchg
loopne
stos
add
and
loop
ds
ljmp
les
mov
mov
fadds
mov
aad
mov
jbe,pt
cmp
sysenter
lock
ret
je
aaa
jmp
fimuls
cli
adc
or
mov
xchg
arpl
cmp
popf
das
adc
enter
sub
int
mov
xor
push
push
xchg
out
inc
popa
xlat
imul
lahf
mov
clc
dec
xor
pusha
mov
aam
sbb
sub
mov
cs
or
mov
and
jae
pop
mov
mov
mov
sub
cmp
xor
push
sub
out
inc
insb
dec
jmp
out
lods
and
cmpsl
cmp
ds
fsub
lea
iret
sub
std
bound
sahf
and
cmp
xchg
gs
ret
popf
cmpsb
sbb
std
add
icebp
rcrl
test
adc
sub
mov
cmp
and
push
scas
adc
lock
inc
nop
push
lea
or
push
je
xor
jecxz
xchg
out
sub
arpl
xchg
adc
inc
popf
push
or
dec
loope
mov
stos
es
push
fidivl
and
sbb
and
mov
imull
dec
pushl
test
ds
enter
shl
fcoml
jmp
and
movsb
cmpsb
xor
mov
addr16
push
xor
incb
adc
mov
or
ret
in
arpl
xchg
xor
pop
push
ja
shrw
shll
push
sub
inc
loop
sub
aaa
sbb
lds
push
shll
out
xorb
test
dec
mov
xor
dec
dec
cmpsb
mov
mov
jl
fadd
les
mov
scas
mov
pop
enter
add
fisubs
popf
jnp
cwtl
mov
or
rorb
add
push
mov
pop
enter
xor
adc
jmp
pop
shll
inc
mov
jb
call
mov
mov
and
fisubrl
insb
xchg
ret
mov
push
inc
adc
adc
cmp
add
jecxz
or
lock
clc
push
mov
rcrb
mov
xchg
dec
insb
and
xlat
xor
cmp
sarb
test
ljmp
movl
dec
dec
mul
inc
cli
leave
dec
mov
insl
sbb
xor
in
xor
push
mov
int3
push
xor
addr16
gs
andb
adc
and
sbb
mov
cmp
lods
inc
sub
or
inc
inc
lcall
or
dec
cs
imul
xchg
cwtl
mov
flds
xchg
int3
or
add
xor
sbb
jno
aad
pop
mov
repz
stos
lock
mov
pop
lcall
sarb
cmpsl
xchg
sub
in
fstp
sub
xchg
sbb
sahf
mov
mov
sub
cld
inc
rolb
ss
jb
cs
outsb
or
movq
mov
inc
mov
stos
mov
insb
mov
aas
out
fstpt
repnz
jo
sub
fwait
mov
add
sub
mov
lods
push
int
mov
out
in
call
lcall
mov
push
dec
add
nop
insb
cmc
mov
push
push
cmc
ljmp
fistpll
sub
out
int3
adc
popa
and
mov
stos
popf
pop
or
jle
inc
int
cmp
jge
ja
push
in
add
add
sbb
push
sarb
xor
jnp
inc
mov
push
mov
ss
jp
sub
mov
xchg
orb
mov
stos
gs
lods
scas
pop
lods
int3
sbb
into
add
inc
add
inc
loopne
or
inc
jns
mov
pusha
mov
pop
adc
scas
mov
cmp
adc
inc
pop
daa
mov
pop
mov
shll
incl
jno
or
arpl
push
mov
cmovae
mov
mov
xor
dec
lods
dec
hlt
add
int3
xchg
cs
insl
sarl
jg
popf
int
push
cmpsl
cltd
fwait
push
clc
sbb
and
mov
cmc
mov
sahf
pop
sub
fnstcw
pop
sahf
mov
dec
and
push
sbb
daa
rolb
stos
das
pusha
loope
inc
push
imul
add
xchg
sbb
mov
int
bound
lcall
pop
ljmp
loop
icebp
xchg
pop
mov
mov
scas
add
and
enter
xor
sub
pop
aas
push
adc
ret
test
les
iret
imul
or
call
mov
mov
roll
cmp
jmp
arpl
sub
xor
cmc
fcom
repnz
jno
aaa
mulb
popf
jle
jl
mov
stc
jnp
ret
push
fsubrs
xchg
jbe
mov
sbb
in
sub
stc
xor
jmp
push
xchg
clc
lahf
dec
imul
mov
js
fwait
movsb
jmp
lahf
pop
movsb
iret
jo
jo
imulb
lods
test
les
stos
scas
mov
add
cmpsb
xor
pop
mov
out
mov
sbb
xchg
add
cmpsb
ds
mulb
xor
xor
cmc
add
and
pop
in
stc
mov
sahf
aad
xor
adc
pop
mov
push
dec
cmp
xchg
mov
fiaddl
lods
lods
push
xor
or
ja
pop
inc
sbb
or
outsl
out
add
ja
add
out
imul
outsl
xor
pop
sub
jp
jmp
in
fsubrs
popa
cmp
loopne
push
xchg
ret
mov
mov
hlt
push
inc
scas
fcoms
out
orl
out
sub
or
scas
rorb
cmpsl
in
ljmp
adc
and
xchg
xchg
xchg
dec
add
jns
test
inc
test
lret
sub
and
or
jg
dec
pop
scas
jb
push
add
pop
in
into
in
mov
sbb
push
mov
insl
mov
cld
push
mov
mov
scas
sub
sbb
call
add
repz
and
lcall
ljmp
adcb
push
in
mull
enter
sbb
push
nop
xchg
insl
sub
mov
xor
cmp
mov
pop
lcall
lret
pop
test
rcll
xor
shlb
push
pop
dec
in
sbb
dec
es
out
mov
xchg
and
or
out
outsb
scas
push
mov
sub
xor
inc
xchg
out
shll
lret
out
movsb
cli
lods
hlt
xor
pop
mov
aad
popa
and
inc
inc
rolb
clc
sbb
mov
mov
cld
adc
jmp
sub
dec
imul
mov
jnp
mov
insb
in
pushf
cmpsb
into
lock
mov
jae
dec
insl
mov
out
ret
call
aaa
leave
cmc
in
xor
jmp
jp
and
aam
mov
sbb
and
fsubr
lods
sbbb
push
jle
or
arpl
jmp
bound
idivl
cmp
xchg
js
hlt
sub
sub
xchg
or
add
or
sbb
jmp
fsubrs
fwait
add
cmpsl
inc
pop
push
xchg
dec
xor
stos
add
pop
ds
mov
sub
popf
jnp
aam
inc
xlat
mov
js
fsubrl
mov
ficoml
ret
jle
pop
push
ljmp
adc
loop
arpl
jge
mov
jmp
stos
outsb
push
incb
mov
sbb
xchg
jns
fisubrl
xchg
pop
add
xor
aad
insl
pushf
sub
loop
jne
pop
dec
ds
cmp
xlat
out
cmp
xor
movsl
dec
sbb
js
dec
jno
or
not
ljmp
shlb
adc
lods
jmp
out
sub
stos
in
pop
xchg
push
mov
xor
movsl
shl
ja
pop
out
outsb
mov
pusha
inc
in
sub
xor
xchg
lcall
inc
test
add
xor
xor
sub
insb
outsl
xor
mov
ret
adc
push
in
jno
out
inc
roll
stos
sub
push
pop
and
xor
inc
cmpsb
js
and
and
add
jg
ret
scas
fiaddl
fildll
xlat
xchg
out
dec
dec
and
xor
popa
ret
fistpll
fildl
push
or
and
bsf
pop
xor
mov
test
jge
lahf
cmc
adc
add
inc
jne
cwtl
push
xor
js
mov
push
mov
insl
cmpb
ss
mov
fimuls
out
addb
js
adc
add
stos
dec
insl
sub
ds
dec
xchg
jmp
fisttpl
movsl
imul
dec
mov
adc
test
out
addr16
cmp
jo
fcomps
mov
xor
and
push
adc
mov
cmp
fidivl
sbb
out
xchg
sbbl
sar
cmc
ret
fnsave
adc
mov
jg
jmp
mov
rcll
sahf
out
push
es
push
popa
icebp
lods
jge
mov
stc
imul
insb
xchg
pushf
popf
or
xchg
sub
sbb
dec
add
sub
add
sbb
push
fisttpll
lret
xchg
cmp
ret
cs
int3
push
stos
push
adc
out
pop
es
fbstp
adc
inc
loop
mov
test
jmp
fstps
push
rorl
ss
icebp
arpl
and
pop
dec
xor
ret
movsb
mov
rolb
jmp
add
imul
out
xchg
dec
xchg
andnps
cmpsl
mov
xchg
cmp
paddusw
push
ret
insl
cmpsb
pop
movsl
rcrl
and
leave
sbb
sbb
outsl
pop
xchg
pop
lds
lcall
mov
pop
jge
sub
inc
fs
jle
jne
push
mov
xchg
out
add
icebp
xor
jge
push
out
popa
mov
scas
fiaddl
data16
mov
mov
push
loopne
inc
shrb
fdivl
cld
test
fimuls
out
outsl
fs
ror
negl
mov
add
add
xor
mov
or
imul
pop
push
and
and
cwtl
dec
sbb
push
cmp
stos
roll
rorl
imul
dec
int3
or
test
bound
punpckhwd
pop
enter
ljmp
out
cmp
data16
xchg
mov
imul
pop
jns
jb
inc
fcomp
gs
jle
mov
cmp
aas
fisttpl
cmc
andb
pop
sbb
push
xor
sbb
lods
push
movsb
pop
ret
xor
fldl
cmp
jl
cld
and
jle
xor
jae
inc
sarl
test
jno
jb
inc
mov
int3
popf
sbb
jae
mov
std
out
mov
ljmp
in
adc
icebp
mov
cwtl
aas
shl
outsl
pop
test
and
out
addl
bound
aaa
out
bound
aas
adc
icebp
rolb
xor
and
adc
add
sbb
iret
dec
dec
out
movsb
aam
cmc
cmp
mov
fstl
inc
lods
sbb
push
mov
push
pusha
lock
pop
mov
dec
jne
fs
daa
fs
dec
sub
test
jnp
sub
ja
jle
lods
lret
or
jbe
mov
popa
xchg
xchg
push
cli
ljmp
lds
dec
pusha
stos
jmp
jo
nop
loop
sub
mov
mov
out
inc
pop
js
ret
sub
dec
out
imul
call
xchg
cmc
out
aas
dec
pop
add
inc
lods
fsubrs
lcall
inc
mov
repz
inc
or
xchg
cmc
jmp
sbb
shlb
loopne
and
shrb
add
dec
int
dec
adc
dec
xor
or
mov
or
cmp
mov
das
into
sbb
gs
xchg
scas
mov
cltd
jns
xchg
sti
mov
lahf
cld
test
jno
in
lcall
or
fcoml
sub
testb
cld
pop
sub
dec
cli
jo
mov
sbb
gs
xor
cld
int
cwtl
bound
fsubs
pop
dec
dec
andl
pusha
jb
clc
shll
repz
fwait
sub
jnp
push
out
jne
sahf
sub
push
jp
out
xor
std
mov
xchg
pusha
das
pushf
inc
xchg
sbb
mov
fildll
scas
negb
sub
lea
or
int
mov
add
pop
je
nop
jne
shlw
imul
mov
mov
inc
xor
mov
mov
sbb
or
mov
dec
and
hlt
push
xlat
mov
cmp
arpl
clc
data16
mov
sbb
push
sbb
jg
std
xor
cmp
les
mov
jno
jmp
mov
mov
popf
xor
imul
pop
or
sub
mov
cmpsw
sbb
or
fdiv
jl
mov
lds
outsl
cli
pop
mov
adc
dec
sbb
hlt
jg
clc
cltd
dec
pop
lahf
movsb
xor
lea
loopne
adcb
pop
subb
enter
mov
xchg
pop
xor
aad
in
add
dec
outsb
pushf
arpl
inc
jle
jne
inc
xchg
mov
mov
imul
mov
fneni(8087
or
xor
jle
push
js
pusha
out
int3
xchg
int3
sti
xlat
aaa
ds
or
push
js
jns
inc
sbb
adc
mov
jns
push
jnp
cmp
xor
sub
cmp
outsl
xor
stos
in
aad
mov
mov
sarl
jns
gs
sub
xlat
icebp
xchg
sub
inc
ret
and
push
loop
dec
les
mov
cmp
or
je
or
push
cmpsl
sahf
stos
sub
les
push
lret
cmpl
jg
or
cmpsb
scas
jmp
lods
std
test
sub
lret
aad
lods
mov
add
cmp
cmp
xor
sub
subb
movsb
adc
sbb
xchg
andl
mov
push
sub
cltd
jmp
and
std
stc
xchg
mov
mov
addr16
jg
outsb
lahf
add
mul
jo
xchg
or
sub
repnz
mov
mov
std
fimuls
push
lods
mov
jmp
test
xor
or
loopne
dec
jnp
dec
pop
es
std
xchg
imul
das
inc
clc
mov
inc
test
dec
xchg
jb
push
inc
into
lods
push
ss
aas
adc
adc
insb
sub
sarl
mov
push
clc
pop
or
push
pop
cwtl
cld
push
dec
cmc
gs
dec
data16
fnsetpm(287
add
add
addr16
push
mov
ja
repz
aam
das
test
mov
cmp
mov
mov
adc
loope
lods
testb
fs
lret
mov
imul
sbb
fcmovnb
call
pop
addr16
int
cmp
rorl
ja
cmp
push
lods
jl
fmul
inc
mov
addl
test
dec
jle
cltd
test
lock
ss
movsb
sub
xchg
mov
aam
cltd
mov
cmc
cltd
cmpsl
cmp
test
in
repz
jns
stos
rorb
mov
mov
or
or
adc
daa
int
pop
xor
pop
mov
in
stos
mov
xor
gs
sub
iret
adc
adc
push
cmp
fdivs
mov
mov
pop
lods
pop
xorl
clc
imull
or
cltd
test
xchg
fs
push
faddl
add
dec
xchg
push
xchg
roll
xchg
sub
mov
adc
shll
dec
xchg
fwait
mov
cmp
lods
jge
fisubs
mov
push
dec
push
js
push
add
sarl
fsubl
mov
sbb
imul
in
sub
adc
cld
jp
lahf
cmc
lret
push
in
adc
pop
cmp
and
xorb
mov
xchg
mov
jae
gs
je
pop
inc
push
push
and
lods
pushf
push
adc
insl
out
aam
shrb
jno
dec
test
sti
jns
fwait
xchg
mov
fidivrl
fidivrs
sbb
dec
pop
cmp
sub
ja
or
and
call
inc
mov
push
sbb
dec
scas
pop
jbe
inc
and
mov
cmp
hlt
xor
int3
cmpsb
add
movsb
imul
push
pop
ds
movsb
aam
es
test
adc
adcb
xor
and
xchg
push
push
add
rol
in
lods
repnz
or
aad
std
shlb
fisubrl
jl
inc
jnp
adc
or
push
imul
xchg
add
test
mov
or
jl
cmc
in
loop
les
out
out
inc
subb
push
jle
mov
aas
xlat
icebp
sbbb
incb
jp
xorb
lods
pop
adc
outsb
into
pop
addr16
cwtl
and
insb
shlb
mov
repnz
add
sub
test
lahf
outsl
out
pop
into
jnp
gs
test
push
mov
cld
push
push
enter
dec
test
and
lock
addr16
popf
mov
int3
cmp
dec
sbb
inc
shlb
or
int
mov
adc
roll
test
scas
sub
push
data16
dec
les
test
mov
xchg
pop
je
mov
ret
aam
fcoml
xchg
lock
shll
mov
ds
clc
ss
dec
xor
push
rcrb
cmp
mov
sub
movsb
test
jbe
in
shl
movups
lcall
out
xor
cmp
adc
mov
sahf
dec
and
or
or
out
pop
push
jnp
icebp
ds
and
adc
mov
mov
push
pop
xor
fistpl
pop
adc
or
insl
add
fstps
xor
mov
jae
adc
nop
fisttps
lea
xor
mov
sub
and
imulb
cltd
ljmp
pop
push
sbb
aaa
vandps
sub
scas
xor
flds
out
imul
and
mov
scas
int
push
out
sahf
mov
cltd
sub
mov
mov
xor
fiadds
mov
pop
out
jge
lods
xorl
cld
test
inc
movsb
push
and
add
divl
fldenv
jmp
sbb
mov
lods
rcrl
fnstcw
arpl
loop
aaa
cmpsb
push
movsl
xchg
outsl
xchg
xchg
cmp
or
add
fmull
dec
jl
adc
and
or
and
fisubl
lods
jle
cmpb
or
fmull
jns
mov
sbb
lock
ds
mov
cltd
and
lea
inc
lods
pop
jg
cmpsl
pop
push
rcr
adc
fstps
mov
jnp
lds
and
inc
sti
incl
fnstsw
sahf
cmc
push
sbb
inc
xchg
xchg
pop
push
or
cmpsb
xchg
aad
cs
nop
dec
and
repnz
or
shll
push
and
push
jns
insl
mov
sti
movsl
sbb
jae
mov
dec
push
fistpl
xchg
sbb
mov
stc
or
jnp
data16
aaa
aad
push
mov
xor
lahf
shl
fidivrs
cmp
pop
and
xor
mov
js
mov
rcrl
lcall
and
les
stos
add
lock
xor
xchg
lock
inc
lds
sarl
fidivl
push
cmp
lret
sahf
pop
ds
pushf
lcall
mov
dec
lds
jl
stos
stc
mov
sbb
xchg
inc
and
xchg
arpl
cld
adc
in
or
mov
setnp
sub
mov
in
sub
mov
dec
cltd
pop
xchg
ds
dec
lods
lsl
fs
fs
in
in
test
test
popf
push
mov
fisttps
jl
dec
scas
jae
gs
lds
scas
insb
stos
aas
xchg
div
aam
add
jl
mov
push
aas
setne
mov
jns
movsb
aad
int
loopne
cmp
inc
mov
movsl
lds
ja
push
add
fidivs
or
inc
sbb
sbb
xlat
imul
lret
test
mov
lret
popa
mov
jp
and
loopne
je
movsb
sbb
rcrb
in
push
sbb
push
pop
test
mov
jb
aad
test
inc
mov
mov
out
in
sbb
dec
fildl
push
dec
inc
dec
popa
cmp
mov
mov
das
in
in
or
inc
outsb
sarl
sub
rorl
pop
and
xchg
dec
or
add
mov
inc
dec
cli
fisubrl
ds
or
loopne
sahf
mov
cmp
inc
or
and
dec
dec
lds
sbb
xorl
leave
jp
fdivr
sbb
push
das
xor
sbb
fsts
dec
in
pop
bound
mov
fidivrs
lea
out
aad
mov
addr16
popa
aad
xorl
mov
test
sbb
lea
daa
inc
mov
xchg
inc
cmp
xor
mov
lock
scas
dec
test
push
insb
aad
mov
ror
jge
lds
mov
xor
dec
or
imul
add
call
mov
pop
jbe
sub
imulb
xchg
inc
and
dec
addr16
testb
mov
mov
sub
or
stos
int
and
adc
mov
sbb
lret
movsl
jno
add
mov
dec
jle
lock
jg
xchg
lahf
cmp
std
inc
xchg
stos
outsl
icebp
push
dec
sub
insl
mov
mov
jle
lods
xchg
cmpb
icebp
int
xor
cmp
mov
and
xor
sahf
stos
int3
enter
into
loop
lahf
lcall
pop
add
mov
push
mov
aaa
mov
rcrl
jle
jnp
lock
jle
outsl
push
ret
jp
mov
test
shll
repnz
fimull
inc
mov
pop
inc
ss
arpl
cs
sbb
ja
js
add
popf
loop
shrb
mov
push
xor
add
pop
xchg
cmc
loopne
sbb
pop
out
mov
dec
inc
xchg
xor
in
push
and
dec
int3
adc
pop
int
fsts
sbb
sub
mov
pop
popl
mov
insb
and
push
sub
and
lret
inc
pop
aad
pop
imul
repnz
mov
pop
arpl
fstps
in
adc
imul
mov
mov
mov
int
fidivrl
adc
dec
vpunpckhwd
ds
pop
in
xlat
int3
jle
test
jp
dec
mov
push
mov
lds
out
mov
int
pushf
lret
pop
dec
push
xor
mov
pop
shrl
xor
mov
cmp
shlb
xor
sahf
jp
int3
es
daa
sti
ret
shl
mov
pop
nop
outsb
mov
adc
and
arpl
fcmovu
add
and
dec
dec
inc
cmc
cmp
xor
inc
clc
pusha
frstor
fwait
pop
jb
aas
sub
push
loop
das
jo
inc
mov
jae
mov
shrl
or
jo
mov
jg
lods
pop
faddl
sar
dec
xchg
dec
cmp
sub
call
sub
clc
repnz
adc
shrl
fldenv
jns
push
cmp
sub
sbb
sahf
arpl
insb
sub
jle
sub
nop
cmp
stos
push
ffree
out
cmp
popa
iret
or
inc
pushf
cmp
or
movsb
jl
add
aam
or
and
imul
gs
jmp
jae
push
dec
sbb
jge
or
add
mov
imul
push
and
loop
adc
out
xchg
pop
mov
dec
xlat
mov
aaa
fld1
or
jae
call
lock
jns
add
push
popf
push
inc
inc
cmp
sub
in
mov
mov
or
push
les
sub
jns
cmc
mov
clc
and
dec
and
xor
sahf
shr
outsb
aas
mov
mov
pop
fptan
aam
jae
das
mov
adc
mov
sbb
lds
push
or
orb
mov
shr
sbb
cmp
sbb
jne
add
shr
std
jmp
inc
sub
je
arpl
pop
mov
dec
xchg
adc
xor
orl
pop
xchg
ja
sbb
popa
lret
pop
mov
add
icebp
push
clc
fucomp
ljmp
popf
jecxz
sbb
sbb
sub
mov
paddw
push
arpl
jmp
shll
mov
mov
jnp
out
je
mulb
cmp
lea
adc
je
fcomps
bswap
dec
jecxz
sahf
in
mov
lock
gs
das
xchg
test
mov
movsb
pop
xchg
mov
mov
inc
sbb
cmpsl
popf
sbb
dec
lods
test
pop
imul
sub
xchg
pop
or
push
pop
mov
lods
imul
adc
mov
jg
mov
mov
jnp
inc
outsb
jp
loop
jmp
jmp
cmp
hlt
cmp
xchg
cmpsl
hlt
shlb
popf
xchg
pop
mov
sbb
loope
add
push
shll
insb
jo
jl
ds
mov
cmc
std
pop
sbb
add
insl
and
xchg
inc
in
inc
jg
dec
mov
rorb
xor
je
xchg
imul
ds
xor
mov
cmp
xor
cmp
inc
xchg
xorb
roll
mov
jae
repnz
mov
aaa
push
shll
or
mov
fld
inc
xor
push
sar
test
in
mov
cmc
push
movl
hlt
or
push
push
out
dec
scas
inc
dec
xor
cmp
das
dec
adc
and
xchg
jno
xchg
or
or
ret
push
cmpsb
cmp
jmp
push
mov
into
clc
mov
and
lret
mulb
dec
fidivl
aas
fisubs
int
fstps
or
jge
inc
xor
jbe
add
or
sbb
in
sbb
ret
scas
mov
xor
sbb
mov
add
cli
fs
mov
add
jo
cmp
cmc
stos
pop
jle
or
ds
cli
sbb
jl
xor
push
dec
es
data16
pop
es
lock
aaa
push
ret
pop
clc
icebp
lds
jne
and
scas
jecxz
nop
repz
push
jle
and
add
aad
out
test
add
jmp
sub
movsl
loopne
and
cltd
pop
mov
pop
jne
test
push
push
lea
mov
push
pop
xor
adc
imul
sbb
mov
add
push
inc
loope
or
lret
xchg
and
dec
in
jecxz
lret
jp
add
insl
lcall
movsb
lret
sbb
mov
ljmp
pop
addb
xchg
inc
jae
dec
iret
adc
es
imul
adc
sbb
dec
popf
repnz
jb
std
js
inc
loope
sti
dec
inc
bound
inc
cmc
call
ret
add
stos
push
les
fucomip
pop
out
push
jecxz
mov
ret
sbb
add
lock
out
dec
pop
push
dec
pop
add
mov
xor
push
shrb
sbb
mov
out
clc
frndint
cli
mov
cli
bound
sub
inc
xchg
push
inc
pop
xor
pop
xchg
xchg
or
pop
js
orl
das
popa
call
mov
push
dec
pop
adc
sbb
lahf
cwtl
pop
add
push
xor
sub
xor
lcall
push
jle
jno
push
int
shl
and
sbb
mov
mov
pop
xchg
movsb
pop
pop
shll
daa
inc
or
push
ret
negl
addb
rorl
push
divl
daa
mov
in
lock
je
cs
mov
dec
mov
pop
pop
jecxz
adc
popa
jbe
rolb
js
lcall
or
pop
mov
mov
lret
aad
pop
shll
mov
xor
sbb
dec
cmp
pushf
mov
movsl
insb
in
inc
pop
push
hlt
dec
jo
sub
decl
and
sub
fsubr
sbbb
fimuls
inc
scas
pop
and
xor
vlddqu
inc
shl
montmul
cmpsb
add
fidivrs
dec
aaa
mov
push
pushf
ss
imul
fstps
in
movsb
mov
jmp
subb
mov
jns
aas
mov
sbb
mov
and
jp
mov
jp
dec
adc
loop
pushf
pushf
rorb
dec
or
mov
xchg
out
shrb
mov
push
dec
xor
xchg
aaa
fidivl
mov
xchg
mov
push
and
cs
cmp
inc
addl
notb
dec
xchg
push
jecxz
pop
nop
jo
lret
gs
leave
je
push
push
pop
fs
inc
movl
stos
lahf
leave
ljmp
inc
dec
andb
jmp
loop
mov
pop
jge
les
das
cmp
js
pushf
enter
or
dec
data16
rorl
lods
aas
jo
icebp
mov
hlt
mov
add
or
cmpsl
stos
mov
scas
std
int
outsl
ss
push
mov
push
adc
cmp
cmp
dec
fbld
incl
out
or
subb
subb
cld
fisttpl
mov
pusha
jae
lcall
lea
xor
ror
out
mov
les
test
mov
jnp
div
daa
jne
rorl
jmp
dec
test
test
aad
daa
sub
mov
pop
aaa
popa
lret
sub
add
jo
xchg
add
mov
mov
nop
mov
clc
push
arpl
inc
das
or
iret
dec
clc
mov
xor
adc
lds
add
or
aas
daa
imul
les
xorb
mov
les
lods
movsb
mov
sti
pop
jnp
jae
mov
mov
outsb
push
mov
ljmpw
inc
insb
dec
mov
jb
pop
adc
jmp
xchg
dec
mov
aas
xor
jb
divl
sbb
fwait
dec
and
pop
subl
pop
sar
outsl
sahf
add
dec
das
sbbb
lock
incl
mov
pop
mov
mov
sbb
dec
gs
outsb
xchg
aas
and
pop
inc
sub
imulb
dec
cmp
push
fimuls
xlat
outsb
fimull
add
and
sbb
ret
mov
pop
movsl
xchg
inc
or
jns
repz
sub
bound
jg
and
push
js
in
lods
scas
ss
test
hlt
adc
mov
push
mov
mov
lcall
mov
aaa
in
inc
xlat
xchg
sub
pushf
subl
or
pop
gs
mov
pop
push
sub
push
mov
outsl
or
mov
sbb
idiv
lahf
lret
pop
mov
xchg
jnp
mov
shrb
aam
xchg
sti
test
xchg
push
xchg
xor
and
adc
pop
inc
adcb
jl
pop
leave
lea
repnz
insb
mov
jno
xchg
jge
flds
jge
add
out
jmp
add
dec
dec
ret
inc
std
in
xchg
mov
dec
cmp
shll
jle
mov
push
lods
push
gs
pushf
ja
adc
xchg
cmpsl
ds
xchg
sti
ds
push
cmp
fistl
insb
jl
dec
ret
cmp
and
fs
xchg
arpl
testb
mov
jmp
lods
sub
jns
stc
jl
inc
add
cmp
fs
jb
mov
mov
inc
jae
fidivl
das
or
inc
cli
outsb
les
xor
jp
add
xlat
aaa
cmp
jl
fldt
xchg
sbb
adc
ret
pop
repz
jb
pusha
xchg
shrb
std
jg
jg
sti
stos
lcallw
fdivrs
mov
xchg
aaa
xchg
shll
jbe
push
xchg
mov
sub
ss
and
data16
mov
jge
mov
and
aam
dec
push
xlat
sbb
adc
stc
or
leave
adc
out
adc
sar
inc
sub
incl
mov
and
lahf
cmp
ljmp
ds
xor
outsl
mov
jecxz
dec
mov
mov
mov
in
pop
or
shll
mov
dec
jge
sub
xchg
pop
shlb
in
clc
imul
inc
xchg
loop
test
inc
das
ds
inc
add
adc
and
xlat
je
or
push
xchg
lock
stc
pop
push
mov
mov
add
int3
nop
pop
rep
cmpsl
jns
iret
mov
loopne
or
mov
dec
aad
insb
movsl
out
mov
push
aam
xchg
xchg
sub
lea
xchg
stos
mov
cmpsl
xlat
pop
out
data16
inc
mov
or
sbb
call
rolb
jbe
and
sub
popa
insl
cltd
fwait
inc
je
push
rcrb
lret
cld
into
jno
add
imul
inc
push
inc
cmp
loope
mov
add
mov
dec
bound
pop
stos
jbe
adc
pop
fistpll
iret
dec
pop
fisubl
xchg
dec
sbb
add
popa
pop
outsl
ss
cmpsb
inc
daa
or
xor
sub
jne
mov
dec
add
scas
sbb
sbb
das
dec
push
sub
lods
fwait
lcall
out
push
aam
xchg
sub
pop
xor
push
sub
cmc
mov
pop
add
push
sbb
xor
sub
push
std
pushf
fdivl
in
sahf
rcrl
pop
xor
aas
lods
cmpsb
scas
add
inc
xchg
add
adc
insl
movsb
in
jmp
das
int
jo
cld
cltd
out
xchg
lock
and
into
cmp
push
jae
cmp
fdivs
sub
push
jg
lods
xor
dec
lea
sbb
xor
jbe
adc
cmp
cmp
insb
adc
adc
jnp
addl
ret
sub
dec
addr16
jnp
mov
lock
inc
nop
xchg
aam
xorb
scas
arpl
push
fdivs
ljmp
xlat
in
pop
sub
in
lret
mov
or
inc
add
sub
out
adc
shlb
ja
fcomps
jno
das
lahf
nop
push
xor
push
mov
xchg
daa
xchg
push
push
cld
in
es
stc
push
cs
in
xchg
leave
xlat
push
dec
les
push
sub
mov
or
dec
jns
sbb
mov
jge
sub
lahf
inc
jae
mov
mov
push
mov
adc
fdivrl
inc
stc
andb
ss
sbb
test
outsb
test
or
repz
imul
inc
out
push
adc
loope
ficompl
sbb
call
jne
inc
jno
invd
add
or
ffree
loope
lods
mov
jne
jecxz
jae
icebp
cltd
jns
dec
fbld
jecxz
lods
pop
movb
adc
das
rol
adc
mov
pop
imul
mov
leave
rcl
inc
inc
lcall
orb
or
xchg
fidivrl
jb
xor
push
int3
in
and
jbe
mov
into
cmp
ret
jne
sarb
jmp
incb
or
dec
xor
ret
cmp
mov
mov
pop
pop
movsl
iret
xor
lock
stos
pop
cmp
mov
xor
outsb
push
arpl
dec
leave
fisubs
loopne
imulb
adc
lcall
mov
push
pop
ja
sub
pop
fists
dec
or
xchg
negb
adcb
mov
rcr
lods
testb
in
mov
adcb
jl
lret
or
mov
test
add
cwtl
lcall
mov
dec
in
cld
sti
stos
jns
adc
and
rcl
aad
dec
popa
mov
fwait
jne
ja
and
sub
and
push
mov
lret
xchg
dec
jecxz
jne
push
mov
pop
inc
rolb
xchg
inc
inc
inc
xchg
ja
rcrl
add
inc
aas
leave
xchg
push
test
or
push
mov
cmpsb
inc
in
add
std
pop
incl
jbe
lock
mov
push
repnz
stos
inc
push
rolb
enter
adc
gs
cwtl
pop
sbb
mov
inc
inc
xlat
inc
ljmp
mov
sarl
aad
sub
jecxz
movsb
xchg
stos
fsubrp
lods
push
add
or
inc
inc
inc
push
imul
movsb
cmp
pop
jge
cmpsl
test
in
cmp
sub
test
and
dec
pop
adc
test
xchg
pushf
fsts
fucomip
imul
push
mov
and
mov
in
xorb
push
and
shrb
sub
lahf
xor
sub
jge
xchg
fiaddl
jne
das
in
je
sub
cld
popa
out
jl
or
adc
orb
lea
pop
jae
fwait
bound
inc
pop
cld
sub
cmp
out
addr16
mov
dec
or
jns
pop
jne
in
inc
lahf
push
and
rcrl
mov
cmp
loopne
mov
mov
and
leave
out
lret
xchg
sub
cli
out
adc
iret
dec
fmull
pop
mov
mov
and
stos
int
mov
mov
lock
jmp
cs
xchg
repnz
xchg
sbb
test
stc
push
lods
insb
pop
dec
adc
jg
ljmp
jns
pop
xchg
in
inc
adc
test
inc
jne
add
je
loope
imul
and
hlt
push
mov
leave
push
xchg
or
movsl
inc
in
out
mov
mov
loope
cltd
or
fldt
inc
push
ja,pt
cmc
mov
movsb
lcall
mov
popl
ds
mov
sahf
adc
push
push
and
nop
xchg
loope
jmp
xor
jp
push
sti
jmp
aad
data16
jae
jg
sub
adc
pop
out
loop
and
push
mov
lret
jnp,pt
lods
inc
icebp
or
pop
popf
pop
adc
dec
and
or
pop
or
pop
pop
fnstenv
rcll
or
sbb
pop
dec
sub
popa
call
push
sub
stc
ds
lea
xchg
aad
clc
movsb
fidivl
lret
cmp
mov
and
and
and
or
add
push
repnz
mov
push
mov
rclb
pushf
mov
inc
mov
jo
xchg
sbb
xchg
rcrl
mov
mov
addb
shrl
inc
hlt
enter
stc
cs
mov
mov
adc
lret
jno
outsb
aam
jnp
fnsave
dec
pop
pop
shrl
push
and
mov
cmp
cmp
mov
xchg
inc
outsb
or
leave
fcoml
fnstsw
mov
xorl
jle
pop
cld
je
push
or
push
mov
push
adc
dec
das
insb
pop
das
mov
or
pushf
icebp
mov
add
lods
push
jp
fwait
movsl
testb
sahf
cmp
xchg
sub
lcall
mov
sbb
lahf
test
insl
movsb
out
push
lret
push
ljmp
adc
insb
es
jne
aas
shlb
and
push
add
sbb
cld
dec
imul
cmpsl
cli
out
popa
mov
inc
shufps
inc
jbe
imulb
push
jle
fiaddl
add
in
iret
pop
or
xor
es
push
push
lahf
roll
repz
scas
and
iret
mov
mov
mov
xor
or
cmp
pop
negl
mov
pop
mov
pop
xchg
and
test
mov
lods
jl
cmpsl
sub
loopne
xlat
ret
xchg
inc
cmp
rcll
rol
aad
ret
push
adc
sbb
mov
xor
or
sub
int3
in
xchg
dec
push
popf
pop
pop
pop
jle
or
dec
das
add
out
lcall
sub
sub
repnz
sbb
insb
jo
das
mov
xchg
inc
lret
adc
das
call
jns
xchg
iret
out
jge
pop
outsb
cli
insl
scas
or
or
pop
daa
gs
push
test
into
popf
inc
or
out
and
adc
int
mov
mov
cwtl
addr16
fwait
xchg
and
fsubs
call
sbb
ja
xchg
out
int
rcl
push
jg
mov
loopne
imul
xchg
inc
mov
pop
add
stos
fsubrs
pushl
sbb
and
movsb
pop
pop
push
movsl
test
sbb
out
push
xchg
je
icebp
jb
idivb
mov
data16
pop
in
lcall
outsb
pop
out
xchg
sbb
sbb
jb
clc
aas
mov
push
jmp
jne
stc
movsb
cwtl
popa
add
xor
push
test
jbe
adc
xchg
inc
fwait
cmp
mov
fwait
mov
jge
sbb
xor
mov
inc
mov
lret
sub
repnz
iret
pushl
mov
test
movsl
clc
pop
cmp
out
int3
mov
jmp
push
lea
cmp
push
lret
fcomps
aas
inc
iret
inc
mov
fldt
xor
jmp
jle
xor
cli
pop
sub
cmp
call
adc
aaa
and
mov
cltd
pop
mov
inc
mov
cwtl
adc
push
mov
outsb
mov
adc
dec
mov
pop
je
pop
int
shl
push
pop
fwait
test
fnstenv
into
jp
xor
bound
adc
jnp
addr16
sahf
mov
jge
pop
ret
mov
mov
mov
testl
jno
cmpsb
xchg
cltd
pushf
inc
int3
rol
test
mov
add
or
jbe
dec
inc
or
in
jae
xchg
mov
mov
cmc
mov
inc
mov
lcall
inc
lods
jle
sub
push
arpl
repnz
or
mov
inc
sbb
xor
inc
rorl
push
push
sbb
dec
jp
lds
push
cmp
push
mov
sub
jl
aas
push
push
jmp
shlb
leave
vpaddb
xchg
repnz
call
movnti
xor
adc
mov
jno
out
aas
add
pop
sub
rorb
out
push
xor
insb
or
test
pop
mov
std
xor
rcrl
fwait
clc
xor
cmp
or
ss
test
cmc
mov
cmp
fwait
imul
jo
ret
xor
outsl
shll
push
sub
clc
divb
daa
es
sbb
xchg
and
into
push
imul
jae
hlt
lods
std
cmpsb
inc
adc
pop
push
pop
in
jmp
lret
pop
xor
xchg
vunpckhps
sub
hlt
mov
cltd
mov
or
sbb
mov
sub
flds
pop
adc
aad
xchg
icebp
mov
xor
and
push
out
addr16
jo
sub
jp
fcomp
movsl
pop
inc
pop
lret
pop
outsb
cld
inc
fsts
lds
inc
ret
cmp
jmp
leave
ret
lods
dec
push
pop
addr16
gs
or
imul
dec
mov
and
ja
cwtl
add
adc
inc
inc
pop
out
pop
test
add
movsb
sti
mov
mov
push
pop
jmp
sbb
lcall
pop
adc
aaa
mov
aam
divl
mov
addr16
outsb
testb
adc
lcall
mov
mov
jmp
ret
xor
stc
add
int
mov
pop
cmpsl
pop
adc
lea
ss
sbb
adc
lods
pop
dec
in
outsl
xchg
or
jb
pop
and
les
lret
sbb
jne
sub
scas
pop
es
cwtl
incl
sahf
popf
cwtl
xchg
dec
std
inc
ss
jns
mov
adc
lock
mov
push
das
and
call
call
push
outsb
fisubrl
fdivrs
pop
pop
ljmp
movswl
inc
das
ss
stos
push
sub
hlt
call
xchg
stos
jle
dec
sbb
mov
dec
arpl
fsubrp
adc
movups
sbb
orl
push
mov
inc
dec
push
sub
jecxz
sahf
adc
es
xchg
rcrb
cwtl
xor
mov
imul
and
lret
js
mov
test
icebp
enter
adc
out
pop
in
adc
lods
cmp
ret
mov
adc
inc
outsb
addr16
movsl
pop
sub
cmpsb
jecxz
push
jno
adc
adcl
fdiv
mov
cmc
in
mov
adc
add
push
movups
lods
xchg
jp
out
mov
mov
add
jl
jl
daa
xchg
in
test
cmpb
adc
repz
scas
lcall
add
mov
out
hlt
jmp
cmp
lcall
cwtl
movsl
pop
dec
ljmp
mov
int
pop
mov
pop
mov
les
fsubrs
pop
int3
mov
xchg
enter
dec
push
fcmovnu
mov
into
mov
fistpl
pop
lock
daa
ret
jg
or
popl
add
ljmp
jno
in
in
adc
lods
cld
pop
loopne
int3
sub
cmp
jl
scas
mov
lcall
cmp
add
rcrb
lock
rcll
jnp
aas
push
pop
xchg
pop
sub
cmp
xchg
cs
scas
adc
fcoms
add
mov
leave
out
mov
jge
stc
mov
push
fwait
dec
xor
and
imull
push
push
repnz
mov
and
dec
jnp
and
scas
push
sub
xchg
xchg
int3
sahf
dec
pop
sbbb
scas
add
fcmovb
jo
inc
or
fwait
icebp
or
sahf
orb
inc
xchg
sbb
jl
dec
adc
jl
fistps
cmpsl
negl
clc
leave
fs
xchg
pop
pop
and
pop
jmp
mov
ret
lock
or
lds
std
cmp
lods
fwait
mov
cmc
aam
and
inc
fs
in
sub
cmp
add
xchg
jmp
mov
movsb
and
cmpsb
xchg
cmc
loop
rorb
outsb
sub
addr16
pop
lret
fiaddl
punpcklbw
mov
jg
mov
xchg
xchg
mov
xchg
pop
mov
mov
mov
rorb
pop
pushf
pop
lcall
push
inc
popf
cmpsl
inc
sti
scas
jno
bound
inc
test
pop
cwtl
dec
dec
movsb
sbb
ljmp
mov
adcl
aad
int3
roll
out
in
jb
call
and
adc
repnz
mov
adc
xor
jo
nop
in
xchg
push
out
ret
cmp
jb
andl
pushf
mov
aad
iret
popf
xchg
sbb
fists
and
out
xchg
mov
cmp
in
and
ds
pop
jae
movzbl
or
outsb
inc
mov
dec
icebp
filds
xchg
sbb
adc
arpl
je
lcall
cmp
repnz
loopne
dec
sarl
mov
pop
add
jle
and
cmp
stos
sub
in
adc
inc
dec
loope
inc
add
clc
repnz
aad
je
arpl
sbb
and
sub
out
cmp
fucomip
out
les
pop
js
sbb
fisubrl
xchg
cmpsb
test
mov
adc
aas
sub
iret
xchg
lea
push
iret
mov
inc
pop
mov
dec
dec
mov
arpl
pop
pop
stos
pop
jmp
cmp
popa
iret
mov
clc
movsl
stos
jp
pop
pop
inc
jnp
mov
cmp
mov
cmpsb
push
imul
cmc
lcall
dec
fstpt
outsb
addr16
cmp
inc
das
andb
sbb
cmp
push
jge
pusha
aaa
jl
jmp
sub
or
bound
jne
push
clc
sub
jb
aas
out
inc
xor
clc
or
push
push
scas
dec
pop
sbb
cmpsb
arpl
push
cltd
xchg
jg
mov
jmp
push
mov
in
jl
icebp
nop
push
or
adc
push
cltd
inc
mov
das
jb
jns
cmp
pop
push
mul
mov
push
add
fisubrl
mov
stos
or
dec
cltd
pushl
notb
dec
in
dec
arpl
cmp
enter
xchg
or
jle
and
adc
xor
pushf
xor
out
dec
notb
mov
fsub
aam
mov
add
mov
sbb
mov
sti
xchg
pop
lret
xor
mov
pushf
lods
mov
dec
adc
push
or
in
push
jge
enter
shlb
imul
add
mov
cmp
lock
adcl
std
in
cmpsl
stos
test
ffreep
orb
add
lcall
push
push
cmp
pop
add
dec
leave
daa
mov
fs
mov
imul
mov
out
fucomip
pop
mov
dec
lea
js
das
leave
xlat
mov
rclb
add
jmp
add
jecxz
pop
dec
sbb
jnp
pop
mov
pop
popf
adc
pop
into
pusha
dec
pop
pop
shl
push
fbstp
pop
iret
and
lds
sub
iret
mov
ds
push
lahf
lret
loopne
mov
scas
js
push
and
cmp
inc
mov
es
inc
xor
jmp
fwait
mov
dec
in
dec
and
sub
movsl
imul
jno
cltd
repz
shl
std
or
jle
outsb
fists
mov
loopne
repnz
xchg
mov
mov
cwtl
push
and
dec
pop
push
adc
lea
test
fistpl
fwait
adc
fbld
popa
mov
sbb
xchg
mov
popa
cmpb
repz
xor
mov
inc
popa
mov
outsb
dec
push
pop
xor
push
dec
xor
in
loopne
xchg
testl
pop
push
cmp
jge
sbb
loope
pop
in
mov
ljmp
sbb
add
cmp
dec
mov
mov
mov
adc
sbb
sub
lods
jns
jns
sbb
dec
or
inc
jb
out
dec
add
jne
lret
movsb
icebp
adc
mov
lods
adc
or
shlb
adc
mov
mov
mov
pop
sub
push
mov
pop
es
cli
jb
iret
sbb
int
xor
jb
jno
pushf
sbb
test
pushf
cld
xor
xchg
mov
push
addr16
xor
inc
pop
bound
and
adc
xchg
adc
call
cltd
lret
insb
cmp
sahf
cmp
mov
mov
mov
xor
stos
mov
inc
push
or
dec
cltd
adcl
lds
es
popf
mov
cltd
mov
or
lock
stc
sub
sarl
cli
add
jb
cmpsl
adc
pop
sub
stos
and
add
cmp
fildl
pop
pushf
mov
jne
push
cltd
lea
push
imul
out
int
repnz
gs
inc
push
jmp
movsb
subb
cltd
fildl
jno
nop
ret
into
jb
int
xor
mov
xor
and
lcall
inc
stc
inc
aaa
jbe
or
cmp
pop
inc
aas
lret
data16
xor
xor
pop
adc
hlt
daa
out
jp
fists
int3
ljmp
xchg
mov
movsl
xchg
rolb
xorb
pop
xor
pop
push
addr16
cli
push
jle
or
pop
in
cmc
fs
sahf
shll
lret
or
in
fisubrs
push
pop
cmp
pop
mov
jl
xlat
jl
cmp
loop
imul
sbb
push
loop
cmp
xor
sub
jmp
rcrl
inc
push
cmp
sub
push
imul
faddp
in
xchg
jmp
lods
sar
push
sub
imul
xchg
xlat
lahf
xor
and
hlt
mov
push
lds
rorl
push
popf
aas
pop
cltd
adc
cwtl
xchg
scas
outsb
push
rcrl
or
pop
stc
ljmp
insb
ljmp
mov
push
imul
mov
xor
inc
mov
mov
rcrb
cs
pop
inc
pop
in
adc
sbb
popa
pop
lods
dec
push
sub
lods
adc
push
aad
adc
inc
jl
loope
xor
cmp
mov
cmp
fsubrl
aad
test
sbb
inc
roll
inc
push
clc
fbld
inc
jbe
aaa
pop
int
mov
fwait
dec
or
icebp
mov
leave
loop
repnz
xchg
lock
outsl
push
or
jg
xchg
pop
jg
out
push
cmpsb
mov
cmp
mov
xor
push
push
rcrb
xchg
mov
test
popl
insl
cmp
mov
mov
xchg
sbb
pop
sbb
rcrb
mov
fisttpl
pop
xchg
leave
jmp
cmpsl
in
or
sahf
pop
cmc
sbb
push
xchg
fnstsw
insl
push
outsb
cmp
mov
pop
mov
es
lahf
nop
pop
sub
jp
adc
dec
adc
push
pushl
mov
call
ja
pop
notb
daa
lock
fwait
je
negl
loopne
sti
outsb
ljmp
push
sbb
rep
in
jno
repz
mov
test
shl
jmp
cmpsl
and
js
xchg
mov
shrb
cmp
dec
aam
rclb
vpunpckhwd
inc
pop
cmc
jp
std
je
lea
je
cmp
mov
pop
mov
jp
push
lret
ds
inc
mov
mov
xchg
pop
out
fisubs
repnz
xchg
dec
cmpsl
ficoml
out
push
xchg
pop
pop
jae
pop
sarb
rol
sar
lea
decb
insl
add
lea
mov
and
stc
sub
push
sbb
popf
int3
cmp
test
rorl
lcall
mov
adc
jp
push
fmull
or
out
jb
xchg
push
testb
out
dec
push
xchg
test
mov
mov
popa
icebp
mov
cmpsb
cmp
aam
jmp
scas
cmpsl
nop
inc
push
mov
fmul
sub
stos
popa
jmp
xlat
pop
mov
push
daa
jmp
xchg
mov
dec
loop
xor
sub
dec
mov
pop
push
lea
jmp
mov
jb
xchg
incb
adc
ss
xor
dec
cmp
jo
shlb
xchg
mov
fs
popa
push
lds
pop
mov
xor
add
shl
mov
cmc
jb
pop
mov
scas
testl
cmp
inc
shrb
sbb
out
sub
mov
fwait
mov
cmp
shlb
movsl
pop
sahf
pop
sub
fisubrl
xor
dec
stos
nop
pop
sub
outsb
adc
xchg
outsb
cmp
xchg
in
xor
in
add
mov
mov
mov
movsb
leave
mov
mov
sbb
add
xchg
fists
fcompl
mov
mov
cltd
dec
jns
push
adc
cmp
mov
mov
xchg
clc
fistps
adc
cmc
xchg
dec
shll
and
in
into
ja
jp
insl
sbb
sbb
fisttpll
jbe
imul
dec
mov
push
cmc
scas
repnz
idiv
imul
das
adc
mov
lods
out
adc
fimuls
cmp
mov
inc
or
mov
mov
push
inc
movsb
and
pop
ss
insl
out
sbb
add
outsb
fidivl
dec
bound
xchg
outsb
add
inc
inc
shr
push
push
jle
lods
xor
repnz
into
mov
pop
sub
inc
push
fs
int
pop
rep
xor
dec
sbb
repnz
pop
lds
sub
push
js
mov
pop
push
inc
adc
pop
in
push
out
jl
aas
cmpsl
sub
push
push
mov
insl
inc
push
xor
ret
sbb
in
and
dec
mov
movsl
dec
in
stos
shll
cmpb
je
cmp
pop
add
inc
enter
xor
dec
jmp
cs
jns
cmp
lea
pop
aas
add
mov
xor
std
ds
jge
push
jle
movb
test
pop
cmp
rcr
xchg
dec
in
xor
mov
xor
mov
hlt
lea
and
inc
movsl
fs
adc
push
xor
ret
push
push
aas
fdivrs
xchg
sub
and
dec
mov
cwtl
push
rcl
std
jl
sub
divl
lret
and
dec
xor
pop
inc
xchg
mov
mov
inc
subl
pusha
dec
sbb
cli
icebp
dec
jbe
sbb
mov
andb
xor
mov
adc
jg
lock
pushl
sub
or
push
lret
cli
push
or
push
jl
or
add
clc
sbb
jae
call
jmp
cld
jb
sub
sub
inc
adc
mov
out
add
pop
or
daa
sarb
shl
push
cs
dec
adc
mov
push
inc
mov
loope
jl
pop
sbb
xchg
mov
push
or
or
xchg
mov
sbb
jecxz
daa
pop
xorl
nop
jae
lods
iret
lcall
mov
sbb
cwtl
cli
sub
add
stc
or
ljmp
push
fstl
je
clc
shll
push
jp
push
dec
sub
sub
shl
jl
jp
cmc
inc
dec
xor
pop
dec
adc
andb
lods
cmpb
inc
jg
frstor
xchg
cmpsl
ds
cmp
arpl
push
hlt
mov
repnz
loope
pop
xor
adc
pop
push
jbe
add
or
dec
test
in
push
fildll
pop
cmp
mov
push
jae
cmp
repnz
lods
cmp
xor
scas
das
test
cltd
and
ret
aaa
mov
cwtl
jne
cmpsl
sub
inc
or
adcb
lea
outsl
sarl
push
mov
cltd
ljmp
pop
jno
and
add
hlt
ss
fld
mov
stc
adc
stos
les
add
pop
in
imul
or
stc
and
inc
int3
call
push
mov
mov
mov
lahf
flds
add
jns
repz
in
mov
and
ds
testl
fldt
mov
mov
or
pop
or
mov
or
int
daa
inc
and
inc
ret
jae
dec
outsb
movsb
pop
cli
pop
out
shrb
pop
test
jle
inc
sub
xchg
sub
shll
ret
push
aad
xor
pop
data16
in
inc
mov
aas
dec
mov
mov
push
push
push
test
jbe
pop
mov
or
add
jle
insb
shll
or
jno
push
je
pop
xchg
or
imul
add
in
dec
ret
dec
push
out
xchg
js
ja
iret
pop
dec
outsb
sbb
pop
adc
xchg
pop
mov
dec
sarl
and
movsl
subl
and
jns
adc
mov
insl
and
mov
aaa
add
fsubrs
mov
stc
dec
test
stos
jb
jecxz
and
mov
push
call
inc
jne
or
push
dec
xor
cmpb
cmpsl
ss
test
lahf
loop
rcrl
xor
mov
mov
nop
mov
jb
jae
addr16
pop
filds
aas
std
mov
into
dec
cmpsl
ds
and
mov
aas
push
dec
adcl
adc
xor
ljmp
mov
dec
ja
adc
mov
xor
xor
xor
popa
adc
bound
negb
pop
mov
dec
xor
ljmp
jo
js
je
sub
iret
scas
fwait
dec
mov
pop
mov
pop
add
rclb
or
outsl
or
sti
roll
cmp
sti
aas
mov
scas
lea
mov
mov
sarb
rclb
push
sub
ss
pop
adcl
jg
into
nop
jbe
fldt
mov
xchg
test
xchg
sub
jg
arpl
dec
lcall
push
jge
lahf
dec
sub
rcrl
inc
call
daa
scas
jle
popa
das
call
ja
insl
or
jb
pop
lea
lret
adc
ret
repnz
dec
clc
pushf
mov
iret
sbb
cmc
push
xchg
lret
adc
adc
cltd
test
frstor
jp
push
out
add
add
fnstcw
cmp
dec
paddusb
stos
fcompl
aam
cltd
popa
cld
cmp
lahf
cmp
sbb
leave
dec
sub
dec
xchg
mov
push
mov
push
mov
lret
gs
sub
enter
shll
xchg
adc
mov
scas
loop
mov
test
adc
and
mov
push
scas
insb
int3
pop
add
fiadds
cld
int3
popf
xor
add
mov
dec
add
mov
add
cltd
loopne
and
mov
push
daa
inc
pop
cltd
loopne
jo
xchg
arpl
sti
fwait
push
imul
fwait
push
ljmp
jbe
inc
push
jno
dec
mov
push
inc
mov
push
sbb
inc
mov
movb
xchg
je
lock
popf
js
nop
dec
jne
mov
xchg
cmpb
fisubl
mov
inc
pop
cmpsl
sbb
or
push
adc
xor
fstpl
dec
cmpsl
hlt
xor
js
fs
out
push
xor
pop
into
inc
fists
je
lcall
addl
fsubl
sub
cmp
les
jne
mov
inc
jge
outsl
lcall
inc
xor
pop
into
fdivrs
and
and
jno
ss
cmc
pop
cmp
loop
or
aas
popa
adc
xchg
cmp
adc
or
shlb
push
xchg
outsb
pop
push
push
mulb
pop
jns
stos
or
mov
jo
mov
mov
pop
into
out
or
adc
mov
jmp
xor
push
mov
and
push
enter
xor
and
mov
fimuls
push
das
movsl
or
xor
xchg
mov
mov
xor
es
xchg
enter
out
mov
adc
cld
test
stos
and
xor
jne
pop
jle
ds
movsl
das
lods
mov
daa
test
rcr
lahf
jge
cmc
inc
push
loop
mov
sbb
pop
sbb
leave
dec
sub
jnp
add
sbb
daa
lods
jle
jle
outsb
ret
xchg
adc
xor
mov
cmpsb
sti
movl
pop
cmc
push
mov
int3
cli
inc
add
mov
mov
push
jmp
lds
mov
or
xor
ror
mov
lahf
dec
mov
popf
push
xchg
push
das
hlt
mov
and
sbb
mov
cwtl
inc
divl
xchg
je
add
arpl
add
inc
jle
fistps
dec
push
mov
dec
cmpsb
push
les
xor
test
and
loope
push
jp
fucomip
and
jno
pop
in
lock
xchg
cmc
and
jmp
pop
int
xchg
lahf
mov
jmp
jg
sub
jae
or
and
inc
loopne,pn
xchg
and
jae
push
push
inc
cmpsl
test
aaa
adc
sbb
sbb
xchg
xchg
out
fsubp
jmp
insl
lods
push
jg
jnp
xchg
and
out
sub
je
js
sub
cmp
loopne
subb
and
test
repz
data16
addr16
mov
rclb
testl
push
ljmp
int
jns
dec
push
push
stc
cmp
adc
xorl
stos
pop
cmp
sbb
or
mov
cmp
jae
push
cmc
sti
adc
imul
pop
sbbl
and
inc
aas
xchg
out
out
gs
ss
sub
xor
inc
xor
jmp
push
lcall
xchg
pop
cmp
or
vsqrtsd
cmp
cltd
outsb
xchg
push
sub
sub
insl
sub
lds
inc
into
mov
aam
pop
icebp
sarl
jne
or
popf
mov
aas
fisttpl
ljmp
inc
fwait
cmpsl
pop
ljmp
cmpsb
xchg
xchg
dec
out
mov
addr16
nop
stos
mov
fiaddl
cltd
mov
sbb
out
es
jmp
cmc
cmp
sbbl
cli
pushf
add
rcll
hlt
int
aam
xor
sub
jno
fmuls
cmpsb
xchg
xor
or
mov
hlt
daa
sbb
add
jns
ret
mov
cmpsl
in
outsb
stos
std
popa
sarl
pop
mov
pop
mov
mov
stc
sub
aaa
and
dec
ds
adc
mov
mov
mov
push
mov
mov
push
fidivrs
and
push
cmpsb
xchg
les
test
loope
sub
pushf
push
sub
notl
scas
jne
hlt
xlat
stos
insl
add
pop
adc
inc
outsl
lahf
pop
adc
sub
data16
mov
add
shll
inc
fldl
into
xchg
mov
xchg
adc
dec
fidivrs
jo
and
pop
arpl
inc
add
dec
mov
jle
mov
sub
push
mov
ret
push
jmp
fsubr
xor
pop
add
mov
sarl
aas
sbb
std
pop
or
mov
sub
jecxz
mov
inc
adc
cmpsl
cmp
add
xchg
mov
adc
mov
inc
aam
ja
out
sub
jg
bnd
addb
cmp
and
sarb
push
add
mov
dec
test
clc
or
outsb
mov
xor
add
push
iret
in
mov
aas
lds
mov
shll
mov
test
push
mov
sbb
fsubrs
adc
push
add
xor
xchg
lods
iret
rorb
leave
pusha
sub
mov
push
mov
in
inc
gs
insb
push
xchg
push
dec
xor
movsl
inc
daa
adc
xchg
aaa
mov
inc
sub
mov
test
xchg
int3
int
dec
mov
xchg
adc
inc
aas
mov
xchg
sub
push
mov
sahf
inc
jnp
idiv
loopne
out
cltd
int3
push
pop
bswap
cmp
call
dec
jle
arpl
scas
xchg
push
into
add
movsl
stos
push
sub
rcl
pop
ret
insb
add
xor
lahf
xchg
mov
loop
push
lock
push
repnz
push
pop
das
fistpl
jno
xchg
icebp
test
mov
mov
or
jp
mov
imul
pop
leave
add
aas
xchg
push
jnp
setle
jg
xchg
inc
aas
push
les
mov
pop
inc
lods
and
add
rorb
sub
mov
sub
into
fcom
imul
pop
or
pop
add
and
push
adcl
divb
mov
add
ljmp
test
push
js
mov
in
mov
or
lret
adc
movsl
orb
sarb
sub
pop
jge
in
push
fnstsw
xor
xchg
addr16
adc
and
rclb
or
push
dec
dec
mov
xchg
cmp
pop
adc
sbb
push
ss
test
enter
push
loope
lahf
push
adc
push
das
sahf
jge
mov
das
push
repnz
and
out
sbb
fwait
js
mov
sub
sub
xchg
fisubl
insl
sub
stc
mov
fdivr
ret
pop
mov
fdivs
pushf
in
add
cmc
cmpsb
jb
fldl
push
push
jge
xor
fsubrs
rcll
insl
jno
cmpb
out
dec
and
divb
dec
sbb
aaa
or
test
and
sbb
loopne
fisubrs
and
insl
aaa
sti
es
xorb
in
or
test
cmpsl
add
pusha
je
push
mov
or
cmp
cmp
inc
pop
rcrb
cmp
mov
sbb
es
rcl
cwtl
ret
popf
or
jne
inc
sti
jg
in
outsl
fsubs
cmpsb
js
jbe
mov
fldl
daa
ss
dec
jb
adc
cmc
lret
scas
es
push
xor
cmpsl
rcll
or
push
add
cmp
jae
push
call
lret
sub
jnp
aas
jbe
and
push
cli
pop
sub
rorb
shlb
testb
ljmp
jmp
stc
stc
mov
std
xor
or
push
int
jmp
into
jge
mov
jmp
adc
test
sbb
sbb
fadds
jbe
push
mov
cld
ret
cmp
pop
es
cli
xchg
movsb
push
std
push
divl
add
add
cli
cld
test
add
push
add
xor
mov
imul
cltd
stos
pop
pop
pushf
jge
mov
clc
sub
pop
xor
cmp
fcmovb
jmp
ss
test
jae
rorl
mov
xchg
pop
pop
add
popf
xor
xchg
hlt
fsts
sub
movsl
aam
mov
ds
mov
xchg
sub
xchg
pop
dec
dec
lods
sub
fld
mov
lods
pop
addr16
xchg
fistps
decl
imul
inc
xor
into
and
pop
fldcw
std
add
jg
and
jne
fcmovnu
xor
cli
movsl
mov
fnstsw
jb
xorl
aaa
int
sub
sti
sbb
push
pop
lea
xchg
dec
add
jmp
and
and
cwtl
inc
call
lea
cmp
pop
and
lahf
or
ljmp
loopne
out
popf
incl
mov
push
mov
lea
jle
and
jnp
lea
movsl
mov
xchg
popa
xor
adc
je
in
xchg
jnp
sti
lods
jns
ss
and
icebp
jb
mov
loopne
mov
int3
out
movsb
mov
adc
sub
and
cmp
mov
shrl
stc
and
das
push
movsb
pop
movsb
rclb
outsl
jp
xlat
sub
mov
add
aas
lods
scas
rclb
mov
and
shlb
xor
dec
ss
xchg
cmpsl
loop
aaa
lds
fisubrl
jae
pop
shll
ja
nop
loopne
lds
adc
inc
test
fdivr
add
movsl
in
icebp
xor
negb
lods
jge
sarl
mov
add
xchg
fsub
dec
xor
mov
in
addr16
dec
jbe
imull
jge
cwtl
fwait
in
in
dec
in
pop
lock
xor
ret
sbb
dec
ljmp
mov
mov
adc
pop
rcr
cmp
stos
rclb
insb
lods
xchg
cmpb
mov
das
jnp
cmp
add
dec
std
cmpsl
popf
add
push
leave
pop
pop
mov
inc
cmc
lock
mov
aas
mov
sub
mov
or
fst
pop
je
je
mov
sub
arpl
shrl
jge
in
aas
cmpsb
jo
sub
xchg
dec
mov
pop
jno
loopne
xor
xchg
add
int
jno
pop
rclb
int
mov
notb
aas
pop
lods
ret
fisttps
rcl
stos
daa
sar
into
hlt
popf
xor
cmp
xchg
ret
sub
cmpsb
jp
push
pop
out
out
pop
scas
jecxz
jns
pop
jno
fcomip
push
add
mov
jnp
lods
mov
sub
fists
gs
mov
cmpsb
push
loope
shll
pop
test
lret
shll
mov
jnp
mov
ret
jmp
sbb
cld
ret
dec
movsb
rolb
mov
aam
and
stos
inc
mov
dec
cs
movsl
fldt
hlt
fidivrl
aam
inc
int3
stos
mov
adc
icebp
outsl
jbe
mov
test
mov
js
popf
insl
sub
fnsave
leave
xchg
jmp
repnz
insb
push
sub
stos
xlat
ret
pop
jbe
cmp
cmp
sbb
ss
clc
rcl
cmp
jge
mov
xchg
aam
cltd
clc
sub
cmp
outsl
jecxz
int3
out
mov
dec
mov
mov
or
cwtl
inc
or
adc
stos
push
sbb
popa
cwtl
cmp
push
pusha
int
test
pop
out
aas
jae
mov
fistps
sarb
jae
test
push
sub
sbb
aad
scas
mov
sti
punpckhdq
add
cmp
sub
mov
ja
mov
out
lahf
mov
pop
out
es
popf
rcll
dec
cmp
xchg
mov
xchg
pop
es
dec
or
insl
adc
shl
cwtl
scas
dec
pusha
fsubrl
mov
out
push
cmp
and
jns
jle
sbb
xor
fsub
mov
ffree
mov
or
scas
pop
fcom
imul
and
inc
ret
testl
dec
pop
xchg
jnp
or
inc
add
sarl
sub
ret
les
stos
xor
sub
jge
das
loopne
jne
xor
insl
xchg
push
push
inc
mov
cmp
mov
sub
out
jg
push
inc
add
sbb
mov
sub
dec
sbb
mov
mov
cs
stc
imul
and
iret
popa
and
sub
mov
lds
ljmp
push
jbe
sbb
mov
fwait
pop
inc
sbb
sub
in
cmp
testl
jecxz
inc
push
push
nop
mov
and
inc
fsubr
pop
aas
cwtl
inc
hlt
lds
inc
scas
lods
es
fisttpll
cli
mov
cli
mov
cli
inc
scas
or
mov
sbb
or
lods
fimull
sti
test
sti
arpl
pop
jecxz
mov
push
fsubrl
test
adc
or
mov
jge
push
adc
leave
sbb
sbbl
sub
or
jnp
jb
subl
cli
stc
in
inc
sub
mov
iret
flds
lock
cli
fiadds
in
xor
hlt
mov
or
cltd
mov
mov
mov
push
stc
push
iret
repz
add
cs
imul
and
outsl
mov
test
out
outsl
or
movsb
pop
add
inc
pop
leave
or
mov
call
add
mov
add
jmp
jae
stc
push
mov
cltd
push
add
stmxcsr
adc
rorb
xchg
dec
lock
mov
jae
clc
push
xchg
popf
orl
lods
inc
cmpsl
sub
frstor
mov
scas
adc
fwait
mov
daa
dec
and
lcall
enter
cltd
xor
das
repz
sub
adc
sbb
mov
add
stos
xchg
sub
push
xor
das
das
xchg
jmp
insl
push
clc
adc
mov
fmul
mov
cs
lcall
or
and
lret
pop
jl
jne
outsl
push
stos
mov
pop
insl
xor
sub
add
enter
jnp
arpl
cmp
test
inc
fisubrs
cmc
dec
stos
dec
in
cmp
cmp
bound
mov
xor
xchg
fadd
insl
fs
ljmp
adc
xor
rolb
jecxz
push
cmp
xor
dec
sbb
push
out
pop
mov
pop
jmp
inc
push
adc
and
mov
push
loopne
stos
adc
movsb
loopne
cmpsb
jge
push
mov
movsl
xchg
add
cmp
loop
jecxz
jae
push
push
out
out
mov
stos
push
sarb
addr16
mov
mov
pop
mov
and
std
jge
and
sub
out
je
pop
fisubrs
lcall
dec
pushf
fiaddl
cmp
sub
sub
jnp
fwait
push
andb
mov
jg
mov
jp
popa
sub
js
xchg
push
adcb
add
and
sub
aad
jp
aad
imul
mov
mov
pop
add
divb
gs
adc
mov
pop
xchg
mov
bound
and
test
cwtl
in
hlt
js
xchg
jns
push
bound
das
fisubl
or
or
jge
push
dec
or
outsl
mov
cld
lret
fists
test
cmc
out
aaa
adc
mov
jecxz
jecxz
sbb
stos
lret
mov
jb
push
int3
dec
jmp
mov
lahf
sti
xor
sbb
add
roll
mov
std
and
cmp
xchg
push
xor
adc
mov
in
add
lods
ljmp
mov
imul
sti
shll
inc
jg
jge
lock
mov
sub
xor
mov
pop
aaa
stc
das
ljmp
clc
jl
push
repz
leave
xor
jmp
adc
je
mov
std
push
mov
aas
mov
pop
jecxz
xchg
or
cmp
jae
mov
sub
stc
sbb
push
fchs
mov
lahf
dec
pop
cmpsb
sarl
sbb
dec
add
mov
jne
stos
push
xor
jne
xchg
or
add
sbb
cmc
jno
inc
mov
mov
jecxz
mov
movsb
notl
in
jbe
mov
push
cmc
and
test
sub
test
movzwl
sub
loope
jb
and
cwtl
faddl
stos
push
loop
loope
orb
mov
lods
rcll
repz
dec
xor
jns
lods
test
imul
ljmp
out
jo
stos
mov
lea
cwtl
scas
clc
adc
pop
mov
dec
lret
aaa
jmp
jo
cmp
ret
ds
inc
notl
xorl
ret
lret
cmp
lds
xlat
icebp
arpl
test
inc
mov
fwait
aas
xor
sti
pop
pop
mov
pop
sbbb
rcl
out
mov
push
sbb
and
pushf
outsb
inc
mov
push
scas
movsl
ret
sub
xor
and
and
pop
add
dec
push
nop
test
cmp
int
outsl
sub
mov
sbb
adc
sbb
or
adc
sub
push
push
in
mov
repz
mov
rcll
cmp
int
test
mov
fldt
push
les
outsl
call
jp
inc
add
pop
scas
push
aam
push
dec
cmp
popf
jne
sub
dec
sbb
pushf
dec
xchg
adc
xchg
insl
pop
mov
aam
xlat
mov
xor
fnstsw
and
icebp
inc
ret
dec
cmp
cli
cmp
or
outsb
pop
test
and
cmp
and
filds
pop
pop
or
test
sub
or
cs
gs
jbe
cmp
add
jge
test
adc
sub
daa
dec
xchg
pop
subb
cli
jnp
decl
cmc
jb
movsb
aas
adc
cltd
cmp
icebp
xor
sbb
add
test
into
add
cmp
sti
sahf
inc
lock
mov
std
into
mov
pop
push
jo
pop
push
cmp
ja
or
dec
icebp
add
mov
push
insl
xor
stos
jmp
outsl
subb
xchg
and
mov
push
leave
inc
and
cmp
sbb
sbb
dec
mov
jne
cmpsl
dec
mov
mov
mov
ficoms
cmpsb
add
push
cwtl
sub
nop
fcmovnu
and
addr16
sbb
mov
inc
test
shrl
insl
pop
cs
adcb
inc
dec
push
cmpl
mov
add
xchg
cltd
dec
sahf
sub
insb
out
add
movl
dec
loope
push
inc
lret
mov
jns
xchg
adc
adc
xor
inc
imul
mov
pop
fbld
or
sbb
sbb
jmp
jmp
or
ja
in
cmpsl
outsl
cmc
stos
or
lahf
cwtl
gs
insb
jb
pusha
dec
jbe
adc
inc
push
call
add
push
cwtl
fcmovb
mov
push
mov
xor
push
leave
mov
pop
gs
stc
notl
insb
int
aas
and
xor
mov
xchg
mov
mov
and
or
push
cmp
outsb
xor
pop
jne
adc
aad
pop
lea
cmp
cmp
mov
iret
fiadds
insl
out
adc
orb
mov
cmpsb
add
or
add
out
cmp
minps
push
outsl
adc
jmp
or
xchg
shlw
sbb
mov
in
lods
mov
dec
push
jg
jecxz
and
rcrl
std
mov
cs
xchg
pop
mov
inc
add
pop
mov
adc
mov
repnz
aad
out
inc
das
arpl
push
sbb
mov
lret
sub
in
xchg
shrl
js
jno
adc
lret
jno
lock
mov
pop
mov
mov
and
fdiv
sub
cmp
sbb
push
and
push
popf
ljmp
sti
dec
stos
add
xlat
repnz
stos
rorl
or
mov
cmp
xchg
mov
and
dec
shlb
rorb
insb
jnp
daa
popf
or
cmp
cmp
or
loop
push
je
and
cmp
mov
cmp
jno
push
repnz
push
pop
inc
lahf
int3
lret
rorl
test
pop
movsb
push
lods
cltd
and
cltd
xchg
push
push
hlt
push
cmp
sub
push
pop
out
out
dec
push
stc
mov
or
out
or
pop
sub
mov
or
push
sbb
jp
mov
cmp
sbb
push
sbb
push
mov
jle
icebp
and
xor
test
loopne
pop
loop
imul
pop
mov
aas
add
repnz
pop
dec
mov
pop
jb
and
lea
cwtl
push
xor
stos
pop
cltd
insl
add
mov
mov
inc
xorb
jle
dec
cmpsb
xorb
add
cmp
push
rol
mov
push
je
jp
scas
pushf
psrlq
add
imul
movsbl
cld
repz
mov
js
test
and
pop
xor
add
jae
shlb
sub
jl
inc
and
xchg
lods
adc
lea
jo
mov
sub
in
outsl
sti
insb
cmp
mov
aas
cltd
repnz
push
mov
push
sbb
sbb
js
pop
and
cmp
out
or
inc
mov
xchg
lds
rcrb
and
insl
dec
xor
aas
lret
movaps
pop
enter
adc
and
or
out
fimull
sahf
mov
arpl
cwtl
sahf
pop
inc
adc
jns
xchg
inc
in
sub
xor
xchg
mov
je
sub
les
xchg
pop
js
cmpsl
cwtl
pop
sti
in
sub
cvtps2pi
stos
xor
sahf
dec
mov
arpl
jo
and
xchg
addr16
mov
sub
cwtl
xchg
xchg
adc
ss
add
xchg
sub
xor
pop
dec
pop
mov
mov
xchg
sbb
and
stc
cmp
push
inc
rcrl
mov
adc
sub
cmpsb
cmp
or
push
sub
add
mov
dec
jne
add
mov
push
int3
mov
or
in
dec
dec
push
ret
aam
out
sahf
lahf
xor
imul
add
lea
mov
data16
pop
lds
scas
orb
jecxz
sbb
fwait
iret
movsl
cmp
mov
pop
push
outsb
fwait
orb
add
pop
dec
into
push
adc
jae
and
arpl
test
pop
cmp
jb
xor
inc
jo
clc
sub
insb
mov
jae
xchg
pusha
cmpsl
and
fdivl
insb
fsub
push
das
aaa
xchg
jle
ds
out
inc
push
inc
mov
mov
push
daa
mov
loopne
lret
pop
insl
lret
pop
dec
out
xor
rcll
mov
shll
inc
fmuls
dec
mov
cmp
cld
mov
or
fsubl
aas
iret
mov
rolb
add
push
jb
add
mov
jbe
mov
dec
jns
pop
and
pop
sarb
mov
sub
or
add
pop
mov
addr16
push
dec
inc
jge
and
lds
insb
jne
mov
jne
cs
inc
adc
shlb
pop
decl
jns
test
lods
xchg
mov
pushf
xor
xchg
scas
mov
pop
adc
cmp
inc
cltd
and
push
jns
adc
push
pop
mov
pop
gs
sub
mov
ds
sub
sub
mov
ret
dec
cs
out
aam
mov
adc
mov
jb
shrl
popf
rorb
daa
xor
cmp
pop
mov
ret
adc
out
jp
add
loop
das
push
mov
ds
nop
in
subb
or
mov
test
xor
xchg
mov
insb
lds
insl
mov
add
fst
bound
ret
fcompl
jge
xchg
stos
and
sub
repz
clc
pop
lds
add
mov
hlt
dec
cli
cld
call
adc
push
mov
sarl
ljmp
in
xchg
jmp
movsl
push
adc
fs
lods
add
add
adc
incl
jne
xor
sbb
mov
mov
dec
pop
mov
lock
das
jo
faddl
in
jb
adc
aam
js
inc
fstl
and
sahf
mov
mov
mov
adc
mov
nop
aas
xlat
aas
cmp
in
fisubrs
mov
arpl
or
iret
xchg
jbe
cmc
cmp
mov
adc
das
jne
test
inc
mov
lock
cmpsw
dec
mov
ss
cli
cmc
cmc
mov
nop
addr16
jbe
sub
push
cmp
shlb
mov
movsl
and
jae
sbb
or
lods
xchg
pop
outsl
pop
xor
out
std
sub
sbb
lret
icebp
jg
xchg
add
test
add
lahf
push
call
dec
sahf
lahf
ja
pop
xchg
test
xor
outsb
rcr
dec
pushf
or
dec
fcmovbe
gs
in
or
mov
adc
out
push
lods
int3
outsl
inc
adcb
pusha
pop
loop
mov
roll
push
xor
jle
jecxz
in
clc
add
stc
adc
mull
push
popf
mov
mov
add
int3
mov
mov
popf
jmp
insl
pop
add
add
cmpb
xor
aam
jle
mov
callw
dec
outsl
imul
dec
in
jno
in
xchg
mov
inc
cmp
cltd
xchg
inc
test
jg
hlt
sub
pushf
ret
fwait
mov
lock
movsb
jmp
hlt
dec
stos
mov
lods
jl
pop
sub
mov
leave
pop
fsubrl
mov
leave
push
xchg
addr16
jo
pop
decl
cmp
imul
mov
bound
lock
add
mov
lods
jp
repnz
mov
pop
inc
out
fidivl
fmull
xor
into
jge
int3
into
or
or
loope
jno
jp
adc
test
pop
cld
inc
mov
inc
stos
aam
or
push
lret
cmp
pop
ljmp
in
stc
gs
call
jl
adc
and
add
jmp
push
cltd
cmp
dec
cmpsb
and
lods
ja
int
mov
add
mov
mov
and
jno
mov
xor
les
cld
stos
bnd
push
jbe
mov
cmp
sbb
sub
imul
sbb
jle
adc
lds
pop
test
lods
fs
movl
aam
cmp
push
fbstp
pop
push
lret
and
pop
lcall
sbb
mov
pop
addr16
dec
mov
lret
ljmp
test
mov
popa
adc
sbb
xchg
xchg
adc
cmp
push
cltd
lcall
push
and
shrl
push
inc
mov
and
push
call
sbb
popa
mov
out
cmp
bound
pop
sarl
dec
das
mov
mov
outsl
dec
out
pop
xchg
in
js
xor
inc
pop
fcoms
out
lcall
movsl
fdivl
cltd
mov
cmp
xchg
int3
popa
into
xor
cmpsb
lock
push
push
out
std
repz
xor
pop
repz
popa
mov
fsubs
ja
lock
popf
mov
and
in
push
roll
mov
cmp
mov
and
and
cmp
lds
or
cld
xchg
call
test
or
jnp
push
insl
test
sbb
dec
sahf
stos
fnstsw
stos
sub
rolb
lock
lds
cmp
sbb
cs
push
add
fldl2e
dec
out
stos
ret
xchg
inc
fistps
fimuls
test
or
and
ret
loope
cmp
add
shr
mov
jmp
popa
push
and
cmp
lea
push
int
xlat
fwait
jnp
stos
mov
inc
jae
jmp
shl
push
mov
mov
jle
repz
xor
es
push
sti
arpl
xchg
mov
xchg
cs
cltd
out
push
jp
mov
mov
cwtl
push
popf
mov
ret
ds
add
jmp
or
fbstp
xor
test
lods
movsb
js
enter
aad
xlat
inc
pop
sbb
ss
jmp
into
dec
mov
fcmovnu
bound
mov
cmp
dec
hlt
mov
sbb
imul
fbld
pop
jbe
xor
mov
sub
scas
sub
pop
stos
dec
mov
pop
cmpsl
dec
sub
js
push
inc
inc
push
rcrb
in
or
lock
add
int3
push
sbb
dec
xor
add
mov
loop
cmpsb
pop
repz
lea
mov
and
test
or
pop
inc
sbb
inc
aad
lcall
inc
hlt
sub
push
push
es
das
scas
out
mov
xchg
mov
or
cmc
sub
sar
dec
pop
jo
dec
lret
pop
xor
pop
jle
rcl
and
dec
mov
aam
call
mov
roll
jo
fnstcw
ret
push
into
inc
int3
cld
and
dec
pop
jne
loope
inc
dec
cmpsl
mov
clc
jbe
scas
cmc
insb
enter
js
adc
cmpsl
movsl
test
xchg
jge
in
push
cmp
fwait
pop
mov
xchg
mov
mov
mov
shlb
movsl
lcall
push
into
add
jecxz
daa
bound
adc
push
pop
in
cmp
sbb
mov
adc
outsb
in
cmp
enter
jne
adc
pushf
aam
sbb
sbb
and
repz
mov
inc
mov
arpl
daa
pop
fcmovnb
mov
sbb
jne
stc
mov
add
xor
inc
pop
mov
sub
mov
xchg
lds
mov
mov
xor
add
pop
adc
leave
rcrb
cmpsl
out
cmp
mov
data16
jnp
aaa
sbb
sarb
and
jb
and
mov
inc
into
in
stos
or
push
lret
inc
std
mov
fwait
and
push
inc
push
adc
or
ret
sbb
xchg
xchg
cs
inc
std
mov
dec
push
outsb
mov
js
xor
loopne
jge
lods
jmp
test
inc
cmp
adc
pop
scas
adc
shll
xor
push
stos
pop
stos
arpl
push
dec
int
mov
mov
jecxz
and
sbb
out
out
and
fstpl
fldenv
push
push
mov
lcall
js
dec
jmp
es
xchg
cmp
mov
shlb
mov
das
sti
add
pop
mov
out
jge
ss
icebp
lret
mov
pop
mov
fs
mov
leave
dec
add
sahf
stc
pop
push
lods
leave
aas
cmpsb
mov
cmp
add
jno
enter
mov
or
aam
jmp
jp
push
sarb
mov
sbb
lock
sbb
mov
jecxz
sbb
cwtl
pop
scas
out
cmc
cmp
and
add
add
dec
popa
xchg
sbb
popf
adc
mov
sti
mov
mov
fcmovb
insl
dec
cmpsb
xchg
out
out
mov
cmc
nop
outsl
aad
or
js
icebp
mov
mov
callw
rcrb
cmp
repz
sub
gs
xor
movsb
aad
aad
xchg
sahf
in
fcoms
lahf
mov
inc
inc
shll
sbb
rcr
xor
mov
xor
in
mov
pop
mov
bound
int3
and
or
in
add
cmc
out
int3
lret
jnp
outsb
adc
mov
lidtl
inc
fcmovne
push
cld
mov
pop
out
dec
fnsave
insb
jne
pop
lods
inc
mov
nop
enter
sbb
inc
in
std
outsb
mov
fsubrl
sbb
sbbl
call
ss
push
mov
cli
and
outsl
cmp
pop
sahf
sbb
insb
call
push
mov
add
dec
inc
mov
sbb
fildll
pop
push
xchg
xor
les
ljmp
pop
sahf
sbb
clc
sub
sub
and
adc
subb
push
push
in
insl
mov
and
enter
push
dec
sbb
lods
jo
orb
sbb
and
cld
imul
jl
dec
inc
inc
lret
out
sbb
rol
arpl
fistpll
pusha
mov
mov
in
mov
xchg
inc
cs
into
mov
lods
lds
jbe
popa
test
lret
popa
pop
xor
adc
adc
pop
cmc
xchg
xchg
adc
sub
shl
repnz
jmp
jns
push
dec
cmpb
lcall
icebp
pop
lahf
repnz
loopne
movsl
ret
das
addl
xchg
lods
mov
lcall
lahf
lods
adc
mov
xchg
lods
mov
leave
jo
and
mov
sbb
push
imul
in
icebp
adc
jmp
xchg
lret
lret
insl
addr16
into
inc
mov
or
stc
pushf
xchg
cmp
movsb
xchg
jg
std
in
scas
pop
sbb
sub
jle
inc
dec
or
jp
faddp
xor
out
mov
fisttpll
cmpsb
dec
enter
icebp
sbb
adc
xor
adc
sub
or
inc
scas
dec
mov
and
into
xor
outsl
loopne
xchg
mov
lret
cmpsb
enter
adc
sbb
int
jg
push
leave
jecxz
mov
pop
add
xor
pushf
je
xor
xchg
mov
sub
das
shrb
inc
push
push
test
pop
push
int
mov
outsl
lcall
xchg
lahf
push
push
cmpsl
add
add
sbb
and
xchg
mov
scas
inc
stc
xchg
cs
add
dec
cmp
lcall
rcr
nop
add
mov
pusha
xchg
lret
leave
es
fildll
les
int
in
dec
insl
jecxz
dec
mov
add
cmp
lods
mov
lcall
xchg
frstor
sbb
adc
and
sbb
push
sbb
ret
aas
mov
dec
out
ret
fsts
pop
cmpl
inc
inc
sets
insb
push
or
xor
sbb
lahf
call
test
popa
mov
das
dec
push
pop
dec
pop
movsl
adc
add
mov
or
and
dec
setae
in
cmpsl
jmp
or
aam
mov
mov
mov
push
dec
dec
loop
out
ss
sarb
mov
movsb
fidivs
xchg
rcll
or
jp
push
push
das
outsl
or
or
push
mov
addr16
gs
test
cmp
push
not
fadds
aam
xchg
cmp
xchg
jbe
sbb
and
mov
out
sub
mov
pop
in
xchg
pop
xor
mov
xchg
jle
pop
out
adc
sbb
addb
push
push
scas
mov
push
pop
mov
mov
sar
data16
es
cmpsl
xchg
jge
lock
ret
sub
xchg
push
pop
push
rcll
mov
jecxz
std
jne
jns
ds
outsb
iret
xchg
int
dec
adc
lcall
ret
test
sahf
push
xlat
fcomip
cwtl
addr16
out
pop
aaa
cwtl
push
dec
pop
scas
pop
inc
aaa
int
pop
jb
cmp
lods
push
in
sbb
add
roll
test
div
cwtl
adc
cmpsl
fisubl
push
scas
push
mov
nop
jnp
xor
and
cli
mov
loope
iret
and
in
mov
adc
bound
adc
call
mov
cmp
call
test
mov
push
fdivrl
int
in
xor
push
xor
fs
lods
mov
mov
mov
mov
cmp
daa
mov
aad
mov
jbe
fsubrs
lods
lret
in
xor
fs
inc
stos
out
pop
push
dec
pop
lret
dec
cwtl
in
lds
and
out
outsl
aaa
pop
cwtl
sbb
xchg
add
pop
in
dec
arpl
pop
loopne
jp
or
xchg
data16
jo
rep
dec
fwait
xchg
jg
sub
cli
pop
ljmp
inc
push
cmc
or
and
push
push
stos
mov
fmul
test
mov
daa
or
lcall
popa
aad
xchg
dec
fs
cmp
std
xor
out
jb
cwtl
out
js
push
js
cmp
in
mov
movsb
xchg
sarb
push
subl
cmp
pop
fisubrs
and
clc
outsl
pop
jno
shll
pop
jns
test
call
jecxz
les
push
cli
inc
pop
sub
xchg
mov
jle
jno,pt
nop
pop
test
repz
test
mov
bound
sbb
dec
dec
sub
cwtl
leave
int3
iret
stc
cmc
cwtl
lahf
fiadds
xor
fucomip
popf
inc
push
or
je
mov
std
ret
scas
mov
lahf
cltd
adc
mov
leave
inc
jecxz
iret
sbb
cmp
icebp
movsb
jae
dec
mov
je
adc
stc
and
cmc
xchg
inc
dec
cmc
popa
push
adc
add
jp
clc
addr16
cmpsb
sar
loopw
pop
aaa
push
insb
nop
mov
xchg
out
jecxz
das
mov
std
fisttpll
push
minps
jns
enter
sub
idivl
leave
push
mov
out
push
lret
cs
arpl
dec
dec
jg
jae
xchg
cmpsb
jmp
mov
cs
inc
and
scas
stc
dec
dec
adc
pusha
sarl
jbe
mov
test
ss
pushf
add
pop
rcrb
xchg
xchg
adc
mov
jnp
and
es
or
cmp
cmp
shrl
mov
xchg
cli
call
mov
imul
or
sbb
ds
int
push
in
aas
xchg
cmp
mov
out
push
mov
sub
shll
dec
jns
sahf
sarb
xchg
fnstenv
out
mov
iret
sahf
sub
ficoms
mov
lret
int3
xor
push
mov
adc
sub
imul
sarb
push
adc
es
and
xchg
dec
and
inc
in
lret
sbb
ljmp
and
fstpl
mov
push
mov
mov
pop
and
cmpsb
fisubrl
xchg
inc
in
jmp
test
sub
lods
pop
in
int
leave
sbb
lret
adc
lock
fwait
mov
out
mov
sbb
and
mov
sub
cmp
push
ficompl
stos
add
inc
cmp
inc
shlb
mov
mov
mov
or
mov
mov
mov
xchg
insb
shlb
jmp
mov
push
cwtl
push
addl
mov
lods
cltd
mov
jp
popa
movsb
pop
or
xor
repnz
xor
lods
fs
xor
push
mov
mov
adc
sub
data16
mov
add
pop
cmc
inc
cmc
fs
pop
mov
cmp
and
repnz
lock
jge
and
push
int3
adc
cltd
jo
dec
iret
xchg
test
push
decb
mov
xor
notl
ljmp
in
xchg
test
or
filds
adc
add
lahf
jno
mov
lret
push
push
fs
ljmp
lea
adc
xor
pop
ja
incb
cmp
fists
stos
mov
and
xlat
cmp
call
push
ds
and
repnz
push
mov
and
adc
xchg
push
cwtl
ss
inc
leave
cmc
or
lcall
xor
and
dec
pop
adc
xor
xchg
dec
shlb
int
mov
inc
notb
imul
mov
cmp
arpl
sbb
test
sahf
insb
scas
push
push
data16
test
push
add
rorl
out
xor
cs
mov
jbe
daa
jo
and
push
xchg
pop
cli
mov
stos
add
lcall
je
fucomip
jecxz
lret
rep
lahf
dec
push
repz
jnp
jo
sub
scas
dec
divb
add
lret
pop
pop
push
pop
dec
dec
push
pop
leave
push
or
sub
clc
enter
jecxz
test
mov
fnstcw
mov
jge
mov
add
and
fnstcw
push
inc
scas
push
pop
aad
stos
or
xor
xor
mov
in
js
lds
fcmovnbe
jne
add
loope
mov
pop
add
or
push
lods
popa
in
pop
add
sbb
movsl
mov
inc
hlt
lock
mov
ret
inc
insl
xchg
inc
aam
test
stos
jl
es
fcomi
adc
add
ficoml
in
xchg
xchg
cmp
add
push
dec
cld
add
sub
fwait
cld
lahf
sub
and
out
cmc
cmpsl
pop
push
movsl
daa
je
pop
pusha
xor
popf
lcall
push
int
sbb
and
mov
push
mov
loop
pop
xchg
loopne
outsl
dec
mov
jl
loop
pop
lret
in
es
sahf
pop
jne
leave
rcrl
mov
aas
and
cmovno
cmpsb
jae
aam
test
add
arpl
aas
sub
call
pop
jb
push
mov
les
sbb
fs
jp
sbb
mov
fstpt
adc
mov
jo
lahf
movsl
pop
gs
ret
aaa
fldcw
ret
fcompl
ret
and
sti
dec
div
xorb
sub
lock
add
mov
loopne
push
push
stos
mov
xor
in
jle
pop
pusha
push
dec
outsl
mov
pusha
daa
mov
fwait
mov
shll
xchg
or
xlat
lock
pop
xchg
dec
fstpt
das
pop
lods
lret
xchg
push
sub
ja
jb
inc
daa
lcall
popa
stos
insl
rclb
fsts
pop
nop
imul
and
push
inc
je
shr
cltd
jo
xchg
les
dec
mov
adc
sar
cltd
stc
cld
inc
add
cmp
sarb
and
sbb
shll
cmpsl
negl
adc
mov
ljmp
loop
into
push
pop
push
mov
iret
ds
cmp
mov
leave
push
pop
add
pop
test
repz
addl
adc
add
sti
fdivs
xchg
pminsw
daa
shlb
data16
mov
aaa
icebp
xchg
cmc
filds
jl
and
mov
rclb
stc
fwait
bt
loop
jecxz
cmp
or
push
xorb
or
pop
hlt
inc
jle
repz
outsb
sbb
sub
jg
xchg
xor
fmul
ljmp
add
xor
jmp
int
cmp
xor
loop
rolb
loopne
in
pop
jmp
pop
nop
dec
jmp
dec
aas
or
pop
sbb
mov
ret
or
sbbb
arpl
mov
jge
and
orl
fistps
fildll
mov
pop
xchg
sub
mov
push
lock
cmp
sub
mov
inc
pop
and
std
inc
cmc
ds
jno
lods
fsubrp
pop
push
outsl
fbld
fcmovu
jnp
and
sbb
cmc
stos
sbb
shld
sbb
test
sub
add
stc
and
jecxz
in
pop
jl
fwait
inc
flds
inc
std
mov
mov
jge
fwait
movsl
xor
mov
jge
push
ds
adcb
push
sti
pushf
dec
scas
pop
cld
in
loopne
xor
inc
inc
mov
out
dec
lcall
lods
xor
cmpsl
mov
inc
loope
jge
mov
add
xor
scas
lds
data16
mov
in
les
jae
push
insb
fs
sbb
mov
jb
lock
imul
idivl
pop
and
icebp
mov
cltd
pushf
lahf
ret
call
icebp
mov
subb
jg
xchg
bound
sbb
shlb
xor
mov
rol
hlt
push
xor
pop
leave
ja
loop
mov
cmc
fcomip
rcll
outsl
das
xor
mov
adc
nop
insb
sahf
andl
mov
lahf
cltd
fcoms
sbb
out
shlb
jae
sbb
fadds
adc
cs
push
push
js
lds
xchg
ror
nop
popa
xchg
inc
ficomps
lahf
or
imul
clc
aad
xchg
lret
jbe
cld
nop
xlat
push
out
mov
push
aad
adc
mov
pop
fucomi
mov
jnp
stc
push
adc
es
std
mov
xor
mov
loope
jecxz
loope
notl
imul
push
movsb
add
into
push
hlt
inc
movsl
inc
sub
add
xor
repz
fmulp
sub
add
mov
outsb
sub
jge
mov
iret
mov
orb
push
repz
lcall
sbb
jg
divl
push
sub
jge
pop
stos
xor
std
inc
adc
ss
scas
push
pusha
fmull
pop
div
aas
stos
repnz
dec
adc
std
loopne
pop
std
andl
aam
leave
inc
popf
jo
pop
inc
in
shr
adc
bound
arpl
xchg
hlt
call
je
mov
xor
das
or
dec
cli
push
push
jne
xor
sub
xor
sbb
cmp
adc
dec
mov
xchg
adc
push
stos
push
lret
pop
push
ret
shlb
in
fs
mov
add
mov
push
ret
fdivr
jb
mov
sub
jbe
push
ret
sbb
bound
popf
or
pop
pop
les
pop
xchg
jmp
dec
loope
enter
dec
test
shl
cltd
movsl
mov
fwait
ret
and
test
mov
mov
enter
cmp
clc
call
mov
es
in
or
movb
call
insl
fcmove
pop
cmpsl
push
ret
stos
mov
out
and
imul
test
pop
hlt
jae
test
mov
lahf
mulb
int3
data16
loopne
mov
add
xor
shlb
rolb
icebp
movsb
jo
xchg
mov
jnp
inc
mov
cmp
imul
sbb
sub
xor
push
cmp
rcl
dec
adc
sbbb
outsl
es
iret
adc
popa
rcr
sub
pop
imul
mov
push
movsl
adcb
jae
or
daa
popa
pop
test
fsubrl
loope
jle
adc
adcb
add
lcall
mov
fcoms
in
sub
aam
pop
mov
mov
or
xor
repz
inc
arpl
dec
std
jne
mov
pop
adc
lret
lahf
fs
add
das
xchg
jmp
push
adc
pushf
adc
out
pop
out
jl
and
mov
imul
sub
sub
rorb
pop
jno
sarb
stos
test
das
mov
nop
mov
inc
fisttpll
inc
sbb
xor
push
push
out
popa
push
mov
aas
mov
ds
pop
fstl
and
lret
pop
imul
mov
jp
mov
pop
das
jge
loopne
add
mov
cld
imul
je
shl
sbb
xchg
js
aad
sub
pop
xor
in
mov
sub
push
or
aam
and
testl
cmpsl
int
cld
movsl
xchg
call
daa
dec
adc
dec
roll
add
inc
jae
shlb
bound
mov
je
pop
ret
gs
push
dec
xchg
shl
ss
popf
push
xchg
outsl
pop
gs
cs
lods
sub
lods
test
adc
cmc
std
divb
cmp
subb
pop
icebp
xchg
push
and
cmp
jl
jp
dec
enter
lods
loope
jg
or
lods
dec
and
lcall
ds
pop
xchg
int
shl
mul
js
call
stos
xchg
imul
jnp
or
lock
repz
icebp
inc
push
cmp
fcompl
pop
outsb
hlt
andl
imul
lods
or
pop
xchg
jb
int
pop
lahf
jl,pn
dec
mov
jnp
in
pop
inc
jecxz
sbb
inc
sbb
adc
mov
dec
scas
xchg
imul
aad
addr16
mov
dec
pop
repz
inc
xor
dec
ficoml
sbb
pop
imul
inc
and
pop
mov
jmp
das
jb
cli
or
das
or
add
subl
adc
jbe
loope
push
sarb
daa
in
insb
xchg
push
jnp
push
jne
ffreep
mov
pop
sahf
fidivrl
fiadds
pop
xor
and
dec
sahf
pushf
adc
out
mov
enter
jge
or
testl
add
mov
lahf
sub
hlt
jge
movsb
sbb
xchg
xchg
sarb
repnz
push
push
inc
daa
xchg
dec
push
sub
stos
add
jb
pusha
add
test
jno
pop
scas
sub
and
add
sbb
mov
imul
xchg
inc
xor
mov
pop
jmp
mov
aas
stos
xchg
sub
lret
push
sti
leave
loop,pt
dec
and
scas
pusha
lea
adc
popf
test
movsb
xor
mov
leave
gs
jnp
loopne
mov
lods
sti
inc
outsb
mov
enter
dec
in
xor
popf
dec
push
addr16
lret
jecxz
aaa
inc
aam
ljmp
or
fs
negl
outsb
cmp
mov
sub
xchg
daa
mov
jg
xlat
mov
push
int
lods
rolb
pusha
in
in
add
adc
pop
cli
fnstsw
pop
outsb
xor
scas
add
sbb
iret
xchg
push
adc
xor
test
arpl
daa
dec
add
cmp
jae
or
push
cmpsb
in
lds
mov
fwait
sti
in
sub
and
and
frstor
aas
insb
je
aam
out
mov
cmp
add
int3
sbb
or
push
loopne
push
fidivs
aaa
mov
push
rcr
xor
std
xchg
cwtl
daa
xor
add
mov
adc
loope
repz
xchg
shlb
test
iret
adc
dec
repz
inc
testb
ficoml
cmovge
fidivrl
out
or
mov
into
in
pop
cli
data16
cmpsb
fisttps
xchg
enter
dec
mov
mov
cmp
mov
sub
jecxz
or
push
add
sbb
filds
pop
movsb
pop
push
sbb
in
into
pop
xor
cmp
in
push
pop
aad
dec
add
jno
loop
mov
mov
mov
push
sub
std
pusha
scas
jbe
adc
mov
cmpl
std
ss
arpl
into
and
cmpsl
inc
jmp
shrb
jecxz
out
push
adc
lret
mov
adc
mov
or
pop
mov
jmp
mov
aas
dec
dec
fsubrl
jb
dec
iret
jge
mov
ljmp
xor
or
lods
mov
cltd
fstpt
div
and
js
idivb
stc
xchg
push
dec
inc
mov
mov
xlat
push
in
jg
mov
dec
cli
jne
sbb
mov
jnp
sub
xchg
lods
arpl
inc
je
mov
repnz
mov
ja
jbe
popf
pop
cmp
data16
andl
mov
bound
fcomps
jb
sub
rcll
ja
jmp
out
or
mull
mov
movsb
divb
in
packssdw
jl
push
lea
int
or
pop
jecxz
bound
add
jg
jle
jmp
mov
or
dec
sbbb
sbb
push
incb
sub
cltd
pop
mov
sbb
mov
jae
mov
or
gs
xor
mov
or
daa
dec
sarb
shrl
xlat
repnz
xor
pshufw
push
hlt
mov
mov
lret
aad
xor
mov
jg
lret
addr16
into
mov
add
andl
inc
insl
xchg
addl
pop
sbbl
cmc
mov
loopne
cmp
cs
sbb
xor
fwait
mov
push
iret
test
leave
sbb
mov
rolb
push
pop
push
int3
rcrb
dec
mov
out
adc
div
repnz
popf
or
adc
inc
rorb
adc
xor
mov
mov
sbb
int
mov
or
jg
and
cmp
mov
cli
fiadds
pusha
mov
pop
imull
jmp
add
xor
pop
jg
sub
outsb
outsb
sub
dec
jp
ret
scas
ret
addr16
pop
loopne
inc
rclb
jmp
or
dec
ja
cmpsb
and
cmc
add
or
nop
test
pop
mov
push
fs
xor
std
and
adc
mov
push
sbb
dec
stc
lea
mov
leave
movsb
mov
cmc
xchg
push
pop
dec
push
outsb
jae
mov
adc
or
fdiv
stos
bound
sbb
mov
sarb
aam
inc
das
cli
mov
test
stos
jmp
outsl
sbb
push
shr
into
ds
out
test
enter
call
pop
push
andb
dec
sahf
out
mov
cltd
stos
push
xor
dec
fcmovne
mov
test
testl
faddl
jmp
std
pop
mov
and
cmp
loopew
aaa
dec
in
cmpsb
outsl
add
xor
lret
or
rolb
xor
sbb
lret
cbtw
cmpsl
push
test
mov
cmc
sti
cmp
testl
xor
cmp
test
test
repnz
lcall
pop
mov
mov
test
inc
notl
call
ja
je
cmp
mov
inc
loope
out
rcrl
fsub
pushf
inc
lock
cld
lods
xchg
push
pusha
sahf
mov
cld
pop
jl
push
add
test
ss
jg
add
push
out
ss
push
pop
xor
arpl
adc
scas
cmpsl
sub
or
inc
mov
jle
push
fs
xor
xor
daa
push
adc
fwait
test
pop
inc
movsb
les
sti
lea
jmp
pushf
push
loop
jo
mov
call
daa
jns
xchg
jnp
mov
repnz
cmp
aam
and
sbbb
inc
stos
insb
jns
push
daa
push
enter
sbb
int3
shr
inc
rolb
jnp
lret
push
fidivl
push
xor
pop
popf
rcrl
loop
scas
es
out
loop
shlb
aaa
repnz
push
int
sbb
pop
ret
dec
push
jnp
sbb
mov
inc
das
pop
negl
test
pop
aas
rorb
sub
addr16
cmc
and
and
adc
popa
cmp
inc
pop
add
loop
pushf
dec
mov
ret
lahf
xchg
jp
mov
sub
pop
add
pop
lretw
add
mov
adc
pop
out
and
aam
jb
adc
dec
cmpb
push
cmp
sub
cmp
mov
data16
dec
dec
shufps
lcall
std
adc
jnp
or
bound
mov
stos
xor
insb
scas
rorl
scas
stc
xlat
ljmp
stos
fwait
ret
test
fcoms
insb
pop
dec
fidivl
out
loopne
xchg
cmp
fmull
dec
mov
addr16
insl
xchg
enter
imul
xor
dec
lods
mov
jns
mov
add
outsl
gs
xchg
iret
sub
mov
adc
xchg
sarb
inc
lock
pop
in
xchg
cmc
int3
and
addr16
push
mov
sub
fs
and
xlat
aas
lea
test
push
add
out
jns
insb
mov
mov
sub
fsubr
les
shll
mov
mov
cmp
orl
jb
jno
xchg
lods
push
sbb
loope
clc
inc
or
dec
icebp
inc
imul
repnz
xor
dec
push
jmp
mov
pop
push
adc
out
or
mov
add
cs
ret
pop
cmpsb
pop
dec
pop
sub
xlat
jne
hlt
fwait
psrad
add
inc
cltd
jb
or
cmpl
in
mov
sbb
pop
movsb
xchg
test
jno
stos
shr
in
cmp
dec
xor
int3
push
test
push
leave
xor
jmp
adc
push
mov
adc
mov
sbb
stc
hlt
sarb
sti
cli
addr16
dec
pop
mov
cli
mov
pop
mov
ds
lds
mov
cmp
das
add
pop
sbb
pop
in
xor
sbb
imul
push
mov
add
or
push
test
mov
fsubrl
lahf
pushl
int
stos
shlb
in
add
scas
adc
mov
jo
adc
pop
pusha
lods
inc
xor
ja
repz
xchg
pop
das
or
imul
add
popa
inc
xchg
sub
adc
cmpsl
adc
lock
add
pop
iret
dec
push
inc
clc
pop
outsl
mov
push
and
lea
lret
pop
adc
movsl
bound
add
cmc
mov
loop
pop
inc
lret
mov
fnsave
mov
xchg
mov
out
or
repnz
dec
shll
cmc
sbb
push
dec
inc
or
mov
mov
xchg
repnz
outsl
cmp
outsl
cmp
mov
rol
xor
jg
aaa
mov
mov
xor
fisubrl
aam
sub
mov
jo
jg
push
pop
or
js
andl
cwtl
cwtl
ret
mov
adc
xor
daa
aad
mov
xor
push
fnstcw
mov
pop
push
and
lds
mov
imul
mov
inc
adc
inc
adcl
je
mov
fcoml
shll
bound
negb
push
xlat
ss
int
xchg
adc
cwtl
mov
stos
mov
cmp
and
pop
or
mov
daa
xlat
pop
rorl
cmp
std
sbb
aad
xchg
popf
xchg
fwait
inc
sub
xor
sub
popf
dec
push
popa
pop
in
adc
in
jl
sete
xchg
imul
xchg
mov
das
fcoml
fldln2
mov
movsl
movsl
fs
leave
add
outsb
std
push
fcoml
jb
mov
sub
mov
aad
fsts
cmp
imul
stos
mov
mov
push
mov
outsb
popa
xchg
xchg
xchg
lcall
pop
sahf
loop
sub
mov
subb
inc
jmp
pop
adc
outsb
dec
jne
addr16
jl
jne
in
test
shll
push
adc
cmp
test
adc
xor
rcrb
adc
movsb
inc
cwtl
mov
dec
test
jb
lea
mov
push
xchg
test
data16
sarb
test
cwtl
out
xor
xchg
stos
sahf
imul
mov
inc
add
fists
sub
ret
jb
in
push
cmc
mov
or
aaa
loopne
mov
pushf
das
mov
cmp
test
sub
icebp
out
gs
add
into
adc
push
jns
and
int3
adc
or
loopne
pop
push
push
mov
cmc
cltd
pop
sbb
sub
inc
enter
test
divl
push
or
xchg
pushf
pop
faddl
push
sbb
xor
push
sub
sbb
test
adc
sub
xchg
arpl
pop
repnz
test
sub
sbb
dec
out
inc
insb
jns
add
es
stos
mov
jae
aaa
es
mov
mov
push
push
dec
daa
sahf
push
push
ljmp
xchg
mov
mov
pop
jno
mov
ja
adc
mov
ja
and
outsb
dec
mov
sbb
push
add
sahf
aam
inc
icebp
and
mov
test
daa
xor
mov
cltd
lahf
adc
sbb
xchg
and
push
pop
fldl
inc
in
jno
xchg
mov
sbb
jmp
mov
lret
mov
adc
js
fimuls
jl
sti
loop
mov
mov
sbb
push
rep
fcoml
adc
mov
adc
leave
mov
insl
movsb
out
int
mov
inc
push
mov
pop
rcll
xchg
dec
inc
int3
inc
imul
or
shll
mov
rcll
mov
inc
aaa
xchg
pushf
adc
push
lods
in
rol
adc
roll
clc
daa
lock
outsl
jmp
pop
jle
add
mov
xchg
inc
cmpsl
or
orl
std
iret
inc
inc
add
or
cmpsb
test
enter
xchg
in
jne
sub
loopne
xchg
stc
xor
in
int
pop
jmp
jbe
xchg
test
mov
aam
dec
stos
mov
dec
and
sbb
loope
in
mov
jp
jns
pop
stc
cltd
or
cmpsb
stos
cmp
jbe
add
lahf
cmp
loope
cld
xchg
fidivl
inc
cmp
jp
mov
push
mov
lcall
cmp
inc
jnp
rorl
dec
inc
add
mov
or
xor
lods
test
xchg
jp
aam
jl
dec
mov
rolb
fisubrs
adc
and
imull
jmp
cmc
mov
inc
sarl
out
inc
push
es
inc
sbb
loopne
shrb
mov
insl
daa
ja
dec
mull
xor
xchg
push
add
mov
cwtl
or
pop
or
loope
lods
stc
or
push
loop
adc
les
sub
pop
test
outsl
and
test
iret
ds
clc
cld
shll
sbb
xchg
sahf
cmp
roll
pushf
jle
mov
jp
movsb
inc
popa
inc
shll
cltd
repnz
mov
imul
lret
mov
mov
cs
popl
sbb
shll
jmp
idivl
mov
xor
inc
pop
push
mov
lea
jmp
pop
fs
dec
test
ret
arpl
or
out
repnz
add
ror
dec
adc
xor
sbb
cmp
int
dec
bound
add
mov
ret
dec
out
xchg
inc
push
insb
sub
xchg
inc
idivb
daa
out
push
sar
pop
add
iret
push
stc
dec
subl
mov
mov
xor
pushf
sub
fcomip
add
das
leave
dec
repz
inc
ret
cmp
rcl
iret
sbb
inc
jl
loopne
fnstsw
aad
jo
call
cld
sub
loopne
int3
das
push
lods
jns
arpl
mov
hlt
sub
or
push
lahf
mov
dec
stos
adc
pop
sbb
and
fs
xlat
ret
nop
into
mov
stos
ja
fsubs
loopne
lods
mov
rcrl
mov
sub
int3
ja
push
inc
pop
idivl
push
push
rolb
jb
sti
imul
dec
dec
movsb
into
adc
das
nop
push
movsl
lods
cmp
mov
dec
xor
sbb
or
data16
aam
sub
je
dec
mov
mov
push
inc
popa
sbb
push
pop
cmpl
xchg
insl
pop
cmp
inc
xchg
jmpw
loopne
sub
inc
js
ljmp
test
xor
rcrl
cmp
xchg
dec
jle
lods
cs
cmp
aaa
sbb
ret
jno
rcl
cmpsl
aas
mov
mov
fwait
stc
aad
das
and
push
and
cs
xchg
call
out
sarl
es
cmp
into
xchg
push
push
into
jno
xchg
cwtl
cwtl
xor
mov
fmuls
idivb
clc
les
int3
inc
mov
cltd
ss
fidivrl
xor
cmc
or
push
jne
push
dec
adc
pop
int3
and
sahf
js
repnz
push
sub
pop
ljmp
mov
data16
insl
pop
xchg
inc
rorl
and
pop
fimuls
inc
pop
sub
gs
push
mov
lahf
jl
fsubrp
mov
or
ret
sub
mov
and
push
inc
rcr
mov
js
lds
cli
lret
mov
cmpsl
mov
push
dec
mov
add
pop
das
mov
jae
andb
jbe
aaa
in
cmc
pop
xlat
cltd
pop
push
cmc
pop
inc
fwait
and
push
in
and
dec
jnp
push
in
xor
roll
ljmp
out
gs
and
push
pusha
inc
xchg
es
clc
in
adc
sub
xchg
and
js
xor
in
lods
es
aas
sbb
mov
add
movsb
in
cmp
scas
cmp
in
mov
lods
xchg
stc
inc
lahf
xchg
lds
fidivs
dec
jo
cmc
stc
xchg
aaa
jp
mov
add
mov
das
pusha
rorb
sbb
xchg
cmp
mov
movsb
mov
pop
in
lahf
outsl
imul
shrb
inc
rclb
cltd
inc
dec
jbe
fmul
cmp
and
push
cmp
push
mov
jo
push
dec
insb
fstps
push
pop
lea
lahf
ret
aaa
hlt
jno
call
out
sahf
stos
out
lods
out
xchg
popa
cmp
or
adc
xor
push
or
fwait
mov
scas
sub
hlt
push
sarl
repnz
jge
dec
fcmovnb
test
scas
insb
dec
mov
inc
sbb
data16
xor
orl
mov
out
push
das
adc
out
lret
ja
cmp
int
xchg
mov
jo
xchg
fnstsw
das
pop
push
xchg
pop
pushf
mov
fwait
push
cmp
hlt
stos
popa
call
cli
sbb
mov
xor
dec
clc
ja
cmpsb
cmp
mov
lahf
pushf
lock
hlt
or
int3
mov
divb
lods
jge
dec
mov
daa
mov
cwtl
xchg
mov
ss
cmp
or
inc
push
scas
mov
shr
outsl
xchg
popa
movsl
push
popa
sub
cltd
xor
pop
add
dec
ja
rorl
in
or
out
test
push
push
enter
cmp
mov
stos
orl
les
out
pusha
lahf
jne
jo
imul
fidivl
pop
fisubrl
aad
mov
pop
xor
mov
jno
icebp
lea
mov
xchg
mov
sub
mov
mov
adc
cs
xchg
and
inc
pop
fildll
insb
xchg
xor
inc
sbb
push
adc
cmp
rcrl
xor
xchg
pushl
dec
js
loope
mov
mov
push
leave
sbb
lea
movsb
xor
lcall
outsb
inc
aam
dec
inc
xchg
aas
mov
or
mov
movsl
inc
cltd
ret
in
pop
fistpll
and
ret
cltd
or
pop
hlt
fs
jmp
call
idivb
add
cmp
ja
imul
mov
pushl
inc
negl
mov
pop
jb
mov
push
repnz
sub
lahf
pop
mov
push
lret
ja
add
data16
sub
cmp
adc
mov
mov
insl
mov
mov
and
add
into
stos
in
loope
fistl
mov
popf
mov
mov
push
std
sbb
jecxz
and
addr16
sub
out
xor
xchg
push
stos
xor
in
push
movsl
sub
sbb
dec
stos
push
shlb
inc
jecxz
cmp
cmp
stos
cs
cmp
adc
ja
rcr
dec
xor
icebp
loope
roll
leave
addr16
fistpll
dec
sbb
pop
mov
fsubl
jp
adc
cltd
out
mov
sbb
jl
mov
jmp
in
mov
sub
sti
pop
push
dec
xor
jmp
scas
jns
dec
jb
adc
inc
adc
jecxz
inc
sbb
xchg
sbb
pop
aad
adc
cmp
ror
aad
je
jb
pop
imul
push
add
jge
mov
xor
popa
outsl
idivl
adc
adc
mov
das
inc
push
adcb
or
testl
cwtl
cmp
decl
nop
cwtl
popa
mov
rolb
sti
ret
stc
call
push
sbb
jne
pushf
push
push
mov
xor
push
push
mov
jbe
dec
shl
xchg
jmp
adc
in
lea
cmp
out
or
es
out
ljmp
int3
fwait
sub
orl
and
call
jmp
stos
mov
jmp
or
icebp
mov
add
sahf
dec
jno
xor
jne
jle
fs
mov
loop
mov
faddl
cld
inc
imul
fstpl
outsb
cmpl
leave
int
mov
pusha
mov
test
into
sub
fdivp
cli
push
and
mov
ja
adc
mov
inc
push
or
in
jns
int
jp
push
cmpl
adc
aad
hlt
repz
shll
mov
xor
call
lret
arpl
pop
icebp
ffree
dec
fs
jo
mov
inc
jns
rclb
lahf
pop
addl
jge
xchg
js
jns
xlat
mov
cltd
add
fisttpll
xor
adc
push
mov
ret
xor
das
and
pop
sti
testl
jns
inc
inc
xchg
cmp
sbb
mov
scas
add
inc
fisttpll
sahf
cmpsl
jb
adc
cs
fnstenv
test
testb
or
xor
loope
aam
pop
fadds
sbb
inc
xlat
enter
je
xchg
stc
test
xor
shlb
pop
fimuls
lret
xchg
mov
inc
jne
hlt
xchg
cmp
pop
movsb
add
insl
sbb
je
cmp
pop
test
aad
addr16
mov
cmp
push
shlb
mov
incl
movsl
sub
and
pop
aam
xor
cld
add
and
std
mov
outsb
hlt
and
add
add
je
decb
adc
push
push
repnz
fbld
or
out
dec
inc
mov
mov
nop
into
adc
add
daa
or
jmp
mov
nop
jo
mov
adc
mov
jmp
xor
pusha
xchg
addb
mov
lock
mov
pop
or
sbbl
dec
pushf
outsb
fdivrs
mov
out
test
stc
xor
push
sbb
ret
push
and
sbb
rclb
sahf
fcompl
cmp
mov
mov
enter
rolb
inc
or
fnstsw
adc
push
jle
lahf
dec
push
dec
aas
or
icebp
aaa
xor
into
mov
jge
mov
mov
add
gs
inc
aam
leave
jmp
sti
sarb
mov
dec
adc
add
add
stos
add
leave
jle
mov
push
or
inc
outsl
mov
cmpsb
sti
push
jge
and
add
out
dec
pusha
jns
loope
jmp
and
movsl
pop
add
cmpb
push
mov
das
cwtl
dec
push
fdiv
test
and
push
cmp
sbb
and
test
lret
pop
fstps
aaa
push
aam
aad
arpl
lret
or
fsubrl
jg
enter
scas
seto
push
inc
mov
ffreep
sbb
push
stc
pop
jp
jle
out
negl
sbb
sbb
fwait
inc
xor
dec
jmp
jl
mov
test
push
or
xchg
popf
push
pop
out
test
dec
sbb
aad
rolb
xorb
xor
loope,pn
mov
in
inc
test
das
jl
icebp
lret
loopne
add
jb
aas
lods
and
sbb
stos
jmp
cli
test
inc
movsl
mov
scas
cmp
insb
jno
loopne
lods
add
je
add
push
and
add
mov
aad
sbb
lret
stc
enter
mov
int
push
jl
mov
out
movl
push
dec
sbb
pop
repz
adc
jl
movsb
sbb
xor
sub
je
push
insl
mov
xchg
xor
cli
sbb
mov
pop
enter
mov
into
cltd
dec
fmuls
je
inc
rclb
mov
inc
arpl
fcomps
popa
push
sbbl
mov
inc
or
mov
repnz
push
inc
push
mov
rorl
pop
xchg
mov
inc
add
repnz
cmp
les
cwtl
decl
pop
dec
cmp
subl
jne
mov
scas
pusha
mov
xchg
cli
dec
stos
xchg
andl
ret
push
push
xchg
ss
int3
lret
sahf
sbb
xchg
subb
inc
and
loope
jns
or
jmp
mov
cmp
aaa
xchg
jae
pop
push
gs
sub
inc
cmp
or
sub
sbb
scas
pop
and
mov
pop
inc
add
xor
sbb
adc
sbb
call
incb
or
mov
fldenv
lock
pop
stos
mov
sbb
sub
sub
in
orb
insb
mov
xchg
popf
lret
roll
sti
cld
clc
pop
mov
pushf
xor
xlat
lret
mov
cli
cltd
add
mov
cmpsb
sbb
xlat
or
sub
mov
xor
arpl
cwtl
mov
push
test
mov
bound
loopw
sahf
subl
lahf
les
sbb
stos
mov
mov
addl
push
movsb
adc
mov
out
inc
fsubrs
push
je
in
sub
pop
bound
dec
sbb
xor
test
arpl
mov
out
test
int
jp
icebp
pop
cli
sbb
ss
sub
dec
sahf
ss
jg
jecxz
out
mov
bound
ret
mov
push
pop
imul
insb
insb
cmc
mov
fcoml
cmp
jae
scas
ja
lds
mov
insl
int
inc
mov
mov
insb
data16
aam
mov
pop
cmpsl
lret
adc
xchg
push
jmp
pop
arpl
dec
lret
pop
and
sub
jecxz
out
movaps
fnstenv
shll
mov
sbb
je
data16
pushf
jbe
ja
push
inc
push
addr16
inc
pop
and
lcall
and
mov
jno
mov
and
and
jb
lret
vpsllw
jg
es
and
imul
and
rclb
mov
outsl
mov
push
fimull
cmpsb
ss
add
scas
pop
jmp
jbe
cld
repz
push
add
dec
jle
pop
call
insb
loopne
and
nop
lahf
cmp
daa
loopne
push
push
xor
dec
cltd
test
shlb
in
ds
fnsave
sub
arpl
adc
mov
arpl
dec
call
insb
dec
addl
pop
ja
jo
mov
fnstenv
out
jo
imul
dec
mov
jnp
xor
cmpb
nop
mov
sub
movb
je
rol
mov
mov
lods
or
adc
cmpsl
mov
inc
cmpsl
adc
mov
cmp
push
xor
cmp
mov
or
sbb
mov
xor
cmp
lods
pop
mov
testl
xchg
hlt
cmpsl
sub
lods
cltd
push
or
xchg
stc
inc
fadds
pop
scas
rep
add
aam
add
decb
xorl
bound
cwtl
dec
xor
inc
cmp
out
jne
adc
ljmp
iret
stos
push
push
sar
scas
jnp
fxch
jne
jnp
xor
clc
movsl
loope
jno
push
and
dec
mov
add
data16
add
sti
lret
fstpt
addr16
insl
xor
cmp
repz
mov
mov
in
lock
adc
enter
ficoms
push
sbb
lcall
fwait
mov
aas
cmp
jl
fs
sub
lods
xlat
pushf
sbb
sub
inc
sbb
rorl
mov
popa
stos
push
dec
mov
and
inc
es
mov
cli
inc
enter
push
and
dec
cmpb
hlt
out
unpcklps
loope
mov
popa
mov
les
test
pusha
xchg
icebp
pop
mov
movsl
jge
sub
or
test
mov
push
pop
add
mov
jl
hlt
adc
add
add
add
inc
xchg
stos
lods
imul
repnz
and
fwait
dec
das
decl
int
inc
and
in
inc
add
jb
jmp
daa
mov
cmp
out
jb
and
dec
mov
xchg
cmp
xor
adc
test
pop
imul
imul
pop
xor
pop
cmp
cmp
cmp
xor
cmp
jecxz
pushf
sbb
adc
add
inc
push
cmp
pop
mov
cmp
xor
pop
xor
test
mul
sub
xor
add
xor
mov
fnsave
addl
stos
out
push
cmp
jp
clc
xor
fwait
xor
icebp
movsb
imul
sti
pushf
stos
iret
js
push
data16
cmpsb
jmp
shll
adc
pop
dec
in
and
mov
sbb
mov
fldenv
xchg
loop
sti
int
jmp
mov
inc
sub
cmpsb
mov
fsubs
sti
jle
cld
jne
ret
inc
enter
sar
pop
in
mov
xor
and
lock
addb
test
mov
push
loop
andb
inc
sbb
push
rcl
xorb
mov
cltd
aas
mov
jl
in
add
jl
push
fisubrs
fmuls
jge
push
stc
mov
cmpsl
mov
push
dec
inc
push
mov
aaa
jecxz
xchg
gs
in
fldl
in
push
aaa
dec
jb
push
bound
sub
icebp
mov
ret
out
shl
or
add
mov
jbe
test
pop
adc
hlt
push
sub
xor
dec
cs
cmp
sub
xor
loopne
das
outsl
jp
sub
or
es
pushf
push
push
mov
adc
jl
stos
mov
scas
mov
pop
arpl
in
xchg
push
jle
adc
xor
sbb
lcall
push
sub
negl
jmp
flds
inc
ret
push
cmp
sahf
test
shrb
xor
shrl
add
lret
xor
ljmp
pop
cmp
leave
rcll
jae
pop
sahf
inc
mov
add
mov
bound
xor
xchg
pop
jbe
dec
adc
inc
ficompl
push
shll
clc
sub
pop
sub
mov
iret
dec
fimuls
dec
mov
mov
sbb
sub
jb
mov
pop
mov
cmpsb
xchg
aad
imul
cmp
and
int
lret
into
jmp
adc
jle
lea
push
mov
adc
into
bound
aas
dec
sbb
repnz
adc
mov
inc
push
mov
cwtl
push
lret
dec
fs
fisubrs
xor
repnz
cld
mov
les
jg
pop
call
ret
popl
mov
inc
fs
test
aam
negb
and
sbbb
out
xchg
dec
xchg
pop
mov
pop
pop
shlb
add
shll
cmp
mov
in
mov
fldl
fsub
mov
adc
xor
mov
cmp
repz
mov
fiaddl
jg
js
lds
jl
cltd
mov
mov
insb
jp
test
and
repz
les
das
cmp
adc
mov
jb
in
mov
sti
adc
ja
xchg
pop
mov
push
mov
sub
xor
test
ret
fs
cmp
arpl
dec
xchg
jnp
iret
push
dec
sbb
push
xor
or
xor
inc
or
or
jbe
cmp
cmpsl
dec
lds
fidivrl
mov
mov
push
arpl
or
addr16
add
pop
sbb
out
cltd
into
imul
and
pop
xchg
fidivrl
roll
push
ss
or
addr16
arpl
inc
fstp
dec
jbe
inc
ja
mov
lds
enter
mov
jne
add
mov
add
dec
cmp
arpl
adc
jl,pt
xchg
aad
cmp
add
mov
int
cmp
pusha
xor
out
out
jle
das
lods
pushf
pop
lcall
imul
xchg
mov
dec
in
cmp
add
push
pop
xchg
fstps
jle
lock
mov
sahf
lcall
aam
xor
mov
xor
push
lret
jge
dec
adc
ret
cmp
mov
cmp
rclb
daa
int
das
pop
and
je
pop
inc
sub
popf
xchg
stos
lcall
mov
pop
js
lret
pop
xchg
sbb
pusha
mov
in
das
cmp
popa
test
cmpl
adc
mov
rcrl
in
jg
std
ja
dec
fistl
ja
sub
add
adc
dec
xor
or
sarl
adc
popf
fstpt
sub
pop
lret
les
hlt
mov
cmc
dec
mov
jns
pop
inc
sti
xchg
jp
cltd
jmp
insb
aas
sub
dec
mov
add
push
je
cmp
bound
xor
pop
ja
jle
leave
xor
hlt
xchg
addr16
test
pop
ret
ret
in
lcall
inc
subb
dec
dec
cmpsb
ds
xchg
jne
push
fwait
mov
mov
sahf
cmpl
xor
movsl
andl
jmp
jle
dec
das
dec
add
push
je
cmpsb
sub
loopne
leave
jle
sub
adc
and
rcll
in
dec
pop
fcomip
xchg
les
adc
dec
pop
out
mov
xor
xor
jnp
mov
pop
sbb
es
and
and
jo
repz
mov
mov
push
lcall
pop
sub
pusha
std
mov
mov
std
push
xor
xlat
frstor
das
cli
shll
fidivrs
pop
jmp
mov
aam
jge
sub
jle
push
mov
mov
negb
or
pop
fistpll
and
cld
sbb
mov
sub
push
xchg
leave
sub
dec
mov
gs
dec
cld
or
pop
pop
sahf
cmp
addr16
int
fcompl
lret
dec
mov
repz
addr16
add
fistpl
ljmp
or
sub
mov
cld
dec
scas
filds
arpl
sti
mov
in
jbe
cmpsb
add
enter
je
arpl
dec
adc
ficoms
insl
cld
dec
ja
cmp
lcall
push
icebp
xor
mov
mov
pusha
in
cmp
inc
mov
scas
inc
rclb
cmp
jge
or
int3
mov
rorl
rcl
daa
loope
out
mov
gs
dec
mov
pop
imul
mov
popf
inc
in
and
add
jp
dec
rcll
lock
out
inc
clc
sub
stos
int
inc
stos
fcomip
or
or
test
je
mov
in
ficoms
movsl
and
jo
xor
mov
xor
cltd
cld
popa
addr16
repnz
pop
cld
lods
cmp
or
gs
mov
adc
out
fwait
repz
mov
mov
js
xchg
add
push
int3
xchg
rcrl
ss
jle
inc
xor
pusha
ret
mov
ss
ds
push
cmc
xchg
scas
sbb
lret
cmp
push
out
push
push
or
cli
mov
cmp
pusha
add
in
jecxz
xchg
enter
aaa
xchg
push
cs
xchg
ret
scas
enter
in
dec
jns
leave
jno
insl
xchg
leave
push
xchg
mov
and
int3
inc
aad
pop
fwait
incl
xor
xor
je
sti
mov
jp
cmp
hlt
mov
inc
sahf
fs
es
jbe
std
scas
or
xchg
xchg
xor
add
iret
adc
lret
pop
jl
ret
dec
push
dec
push
inc
mov
fldcw
gs
jecxz
dec
in
push
dec
out
repnz
pushf
sbbl
and
incl
jg
pushf
shr
sar
mov
aad
aad
pop
mov
mov
daa
pop
xchg
testl
in
mov
pop
xor
sbb
movsl
jb
push
mov
stos
pop
sub
ficoms
sub
leave
push
daa
pop
movsl
aad
mov
test
adc
in
pushf
xor
flds
dec
add
cmc
cmp
lcall
jno
fistps
filds
push
insb
add
dec
js
es
push
dec
push
mov
ljmp
pushf
call
fcomps
or
push
mov
pop
jb
mov
fdivrl
push
push
das
insb
xchg
cmp
inc
out
pop
mov
into
ljmp
cld
xor
add
mov
hlt
cli
ja
out
rorb
dec
sub
loopne
dec
shll
repz
mov
xchg
sti
daa
sbb
add
gs
cwtl
sahf
fldenv
jmp
repz
ja
xchg
add
dec
icebp
ljmp
xchg
jnp
dec
mov
cltd
insl
cmpsl
lods
out
xor
fadd
std
cltd
aas
cwtl
sub
scas
mov
cmpsl
or
push
inc
and
test
and
sbb
std
xchg
adc
jg
jg
lret
add
ljmp
xchg
insb
push
inc
add
xchg
js
pushf
mov
xchg
add
pop
dec
nop
sbb
out
adc
lea
jb
out
jo
jle
fcmovu
stos
mov
dec
ss
fwait
pop
push
ficoms
adc
push
sub
out
inc
mov
xchg
inc
sub
adc
cli
adcb
ds
cmc
pusha
push
incb
out
jmp
cmc
xor
movsl
outsb
loope
mov
and
or
popf
mov
stos
pop
or
out
out
ja
sti
ret
jp
push
push
pop
mov
in
or
movups
xlat
hlt
cld
fiadds
xor
pop
les
push
repnz
std
adc
fs
dec
aad
push
mov
cs
repz
mov
icebp
aas
mov
lahf
mov
loopne
pop
xor
xor
jne
loop
xor
pop
jecxz
lcall
xchg
out
inc
imul
add
push
mov
adc
add
cmp
lods
push
adc
xchg
je
mov
jl
cmp
add
jnp
dec
insb
adc
dec
pop
xchg
xchg
test
sub
push
xor
and
jae
iret
hlt
cmp
and
lret
cmp
cltd
lahf
sarl
popa
pop
cmp
adc
mov
xor
imul
out
loop
xor
push
rcrb
popf
out
push
in
cmp
mov
push
jae
xor
adc
and
dec
sub
mov
repnz
clc
mov
hlt
repz
adc
scas
adc
pushf
mov
sbb
xor
out
loope
xchg
ror
pop
adc
mov
andb
mov
outsl
xlat
sahf
and
pushf
ret
push
and
repnz
xorb
lcall
divb
mov
test
lret
loop
cmp
jb
or
test
cwtl
push
sahf
les
movl
xchg
loop
lahf
loopne
inc
gs
mov
push
mov
push
das
sbb
fs
scas
jecxz
pushf
sub
sbb
inc
jno
sbb
xor
push
cmp
pop
pop
and
aaa
in
pusha
pushf
pop
mov
lcall
xchg
jnp
sbb
mov
mov
push
imul
in
sub
pop
jge
in
test
sahf
mov
test
mov
fidivrl
sub
pop
mov
fdivrs
or
sbb
push
int3
das
repnz
aad
mov
cmp
clc
add
in
pop
ror
scas
adc
or
mov
push
jne
dec
mov
dec
cmpsb
or
cli
xor
push
dec
mov
popa
push
mov
arpl
cmp
mov
jp
ret
push
pop
sub
or
dec
fwait
in
shll
mov
fnsave
insl
jmp
dec
add
addr16
out
aad
js
out
mov
xor
aaa
es
ret
push
sub
pop
or
fnstcw
xchg
orb
or
cmc
or
pop
stos
mov
iret
inc
lret
fidivs
fisubl
pop
or
pop
iret
sbb
mov
lret
fcoml
pushf
push
push
xchg
in
sbb
leave
cmpsl
into
adc
leave
xabort
mov
fsubs
mov
xor
pop
sbb
sarb
out
lcall
imul
mov
cmp
push
mov
and
sbbb
and
xor
sbb
in
mov
imul
in
clc
fsubr
inc
dec
dec
jg
cld
and
sbb
mov
xchg
ja
rcr
inc
add
lcall
pop
pusha
movsb
or
jmp
mov
not
jge
addr16
test
dec
lcall
inc
push
cmp
test
pop
pop
mov
mov
mov
pop
dec
add
mov
rol
int3
cmp
inc
lods
jae
xchg
or
insb
adc
sbb
testb
fidivs
notb
repnz
sub
mov
mov
cmp
scas
ss
push
js
sbb
jno
popa
inc
ficoml
mov
int
js
push
stc
js
outsb
sbb
stc
std
int
dec
mov
mov
inc
xchg
imull
cmp
movsb
fidivl
std
push
mov
xchg
adc
in
pop
outsb
push
or
mov
mov
sahf
mov
call
adc
jl
nop
dec
sub
dec
push
les
jns
lret
andb
jmp
ficompl
js
xor
lods
into
rep
pop
jle
repnz
arpl
or
js
jecxz
and
fmull
test
jae
imul
add
insl
mov
ret
add
jl
fwait
push
cld
cmp
adc
push
mov
in
ja
add
test
add
aaa
subb
cli
sub
jmp
push
enter
jge
in
incl
mov
add
sbb
ljmp
add
mov
mov
je
fwait
bound
mov
ss
mov
lods
aad
fnstsw
jg
into
imulb
ljmp
cwtl
loop
xchg
pop
nop
inc
test
push
movl
test
mov
pop
aad
dec
jp
adc
and
inc
stos
es
push
cld
mov
std
or
mov
imul
cmp
sarl
imul
push
push
enter
shr
push
pop
cs
pop
jo
stos
pop
subl
loop
mov
sub
inc
movsb
mov
insb
in
cmp
push
or
out
int3
mov
pop
ret
les
dec
mov
push
sbb
sbb
or
or
rclb
das
into
xchg
imul
ljmp
push
pop
inc
jno
hlt
nop
out
popa
cld
adc
mov
insb
pop
dec
je
mov
mov
mov
mov
push
fiadds
enter
xchg
cmp
cmpsl
mov
movl
mov
pop
inc
sub
jl
cmc
fistpl
loope
dec
iret
ret
mov
popfw
push
aam
mov
data16
jp
xchg
xchg
jo
outsl
or
shrb
jmp
dec
div
push
xchg
sbb
int
sbb
add
pop
push
adc
movsl
imul
adc
mov
xor
add
sarb
add
shrl
adc
shlb
mov
mov
das
adcl
shll
jp
aas
and
insl
lods
xor
loope
adc
sub
fs
ret
jae
adc
xor
int
cmpsl
in
testl
push
jnp
cwtl
adc
jmp
enter
mov
mov
add
insb
int
scas
mov
test
inc
repz
jo
mov
hlt
popf
push
add
idiv
ss
inc
add
mov
scas
jg
test
fildll
ljmp
ljmp
jmp
push
ds
or
addr16
add
jae
loope
xor
xor
jg
test
test
subb
out
out
into
int
gs
jle
fiadds
imul
dec
push
dec
and
adc
cmpl
mov
notl
push
dec
imul
pop
fsubr
insl
fnsave
add
jmp
mov
push
cmp
mov
repz
push
add
inc
fmulp
bound
ja
sbb
jns
cmp
xor
sahf
rorl
sbb
aam
lret
jno
addr16
out
gs
push
mov
cmp
sarl
js
es
lea
cmpsb
lock
jmp
dec
call
mov
popf
inc
mov
subb
lret
mov
jae
andb
dec
jge
pop
testb
jbe
not
inc
into
outsb
push
mov
loope
lods
cmp
in
shld
loope
push
lods
or
scas
dec
sub
push
data16
adc
dec
cmp
or
outsl
dec
into
loope
jbe
iret
ljmp
mov
aaa
int
mov
xchg
out
mov
cmp
lcall
test
aas
sub
cwtl
inc
clc
sarb
cmp
in
arpl
mov
adc
pusha
aam
mov
sub
jnp
adc
testb
imul
je
inc
rolb
fucom
cmpsl
lahf
pop
orl
inc
lds
call
add
neg
ret
out
mov
jae
dec
sbb
pop
inc
test
lcall
mov
cmp
cmp
lcall
ret
negb
and
pusha
and
xor
push
lds
pop
xor
fldenv
jae
fcompl
jae
cmp
inc
sbb
add
xchg
add
movsl
mov
nop
das
clc
xchg
insl
or
sbb
fsubl
cmp
adc
and
inc
sbb
in
ds
push
or
xchg
stc
mov
xlat
and
lret
adc
or
jle
test
fiadds
hlt
pushf
and
xor
pushf
jne
cmpsb
pop
xor
xor
mov
sub
cmpsb
test
lods
adc
iret
push
inc
repnz
decb
jo
pop
mov
push
pop
orb
mov
shlb
pop
pop
sarl
inc
jmp
enter
aad
inc
xchg
test
shrb
outsb
pop
sub
cs
mov
fcmovnbe
sub
jge
fnstenv
ja
sub
scas
mov
jne
mov
scas
imul
ljmp
jnp
mov
mov
push
cmp
cmc
cltd
jp
inc
push
mov
dec
mov
aas
test
pusha
xor
jle
imul
cmp
mov
push
inc
int
stos
pusha
or
adc
sub
adc
xor
push
push
inc
pop
shlb
imul
and
ds
mov
dec
push
arpl
hlt
jno
xor
ret
nop
testb
cmp
je
inc
push
cmpxchg
pop
xchg
push
jge
fsubl
aaa
xchg
pop
loop
mov
in
pushf
dec
dec
mov
js
gs
push
push
lods
mov
lahf
cli
data16
add
sbb
rclb
xor
sub
adc
jecxz
das
pop
adc
fdivl
push
jmp
test
inc
xor
repnz
sbb
jl
ret
enter
sbb
out
aaa
mov
outsb
outsb
sub
or
jge
out
call
xchg
adc
sub
push
jbe
and
ljmp
daa
mov
xchg
movsl
mov
aad
mov
cmp
outsl
mov
cmovbe
pusha
xor
xor
in
sub
imull
pop
pop
jmp
pop
stc
stos
filds
imul
loopw
mov
or
pusha
jbe
stos
arpl
jp
adc
mov
je
int
lds
sub
les
add
add
cmp
mov
pop
stos
adc
sub
test
pop
adc
sti
call
adc
inc
or
scas
mov
std
scas
or
or
sbb
cmp
ljmp
xchg
add
mov
ret
lds
mov
aam
or
mov
mov
out
ret
push
dec
adc
xchg
rolb
xor
out
test
sub
lahf
insl
sbb
or
add
arpl
js
lcall
cmp
xchg
flds
inc
shl
mov
mov
add
sti
adc
fs
lea
popa
dec
cmp
stos
pop
sbb
adc
scas
insb
js
push
shll
add
jl
or
or
out
outsl
leave
xorb
xchg
cs
xchg
fs
andb
in
std
push
or
fwait
stos
cmpsb
sub
push
shll
and
pusha
push
es
push
daa
sub
jnp
push
inc
mov
add
scas
mov
push
in
ds
adc
cmp
movsb
xchg
imul
adc
xlat
stos
dec
dec
adc
popf
jge
dec
sahf
shlb
xchg
roll
xchg
loopne
or
cmp
lds
fucomi
sub
mov
in
mov
cmp
cltd
pop
mov
mov
fldcw
loop
mov
sbb
jg
lds
xor
mov
sbb
adcb
mov
les
shl
add
insl
add
dec
pop
sbb
stos
mov
mov
ja
fwait
lds
stos
jbe
xor
mov
lods
imul
lea
cltd
pusha
ss
lods
pushf
idivb
sbb
xor
scas
orb
hlt
inc
ss
adc
dec
in
mov
pop
jns
mov
dec
fnsave
or
dec
mov
cmp
lret
pushf
push
sarb
cli
leave
bound
push
lcall
push
int
cltd
add
in
out
push
cmp
mov
adc
mov
scas
or
test
fldenv
ficomps
rclb
fidivl
scas
inc
mov
and
fldl
sti
int
sub
bound
data16
imul
insb
xlat
jmp
inc
fcoms
pop
cwtl
test
movsb
fwait
xchg
out
sub
mov
leave
cli
adc
xchg
ljmp
and
call
sbb
add
mov
in
mov
push
lock
pop
adc
cmpsl
dec
fcoms
jno
mov
push
push
inc
and
adc
mov
popf
or
sub
or
and
pop
imul
inc
pop
add
jl
mov
sarl
sbb
rcrb
jnp
pop
fwait
test
push
sbb
cs
jnp
inc
sub
xchg
push
sti
xchg
sub
outsb
cmp
push
jbe
sahf
and
insb
out
mov
ret
xchg
lahf
xchg
xor
incl
lock
or
push
sub
jnp
cs
push
pop
test
fistpl
and
fwait
test
iret
movsl
pop
cs
add
in
dec
scas
push
adc
inc
and
pop
cmpsl
adc
or
xchg
add
jmp
or
dec
inc
or
mov
sub
mov
jmp
cs
loope
or
jmp
or
push
movsl
shr
ljmp
out
dec
sbb
ret
rolb
mov
fmull
pop
int
and
stos
and
negb
push
inc
push
mov
pop
mov
nop
scas
rcrb
and
jb
int3
adc
loop
jbe
xor
pop
fidivrs
dec
ds
adc
push
shrl
jb
and
mov
cmp
push
jae
pop
pop
push
add
dec
pop
mov
or
or
inc
xlat
pushf
or
dec
in
je
inc
lea
mov
scas
fcmovb
inc
ds
xor
aad
stc
cli
dec
push
mov
test
inc
jne
adc
inc
bound
test
push
add
mov
jge
pop
orl
xchg
mov
out
cmp
and
mov
jnp
push
push
ss
jecxz
fisttpl
cmpsb
inc
cld
push
sbb
cmp
jo
cmp
mov
add
adc
popl
jnp
dec
je
add
and
inc
push
mov
int
push
add
cmp
mov
lret
mov
movsb
iret
loopne
in
cmp
add
push
inc
or
inc
push
xchg
out
and
cld
cltd
cli
jae
add
and
clc
jp
call
ds
sub
lock
test
push
flds
push
das
pop
cmp
xor
mov
out
mov
icebp
xor
sbb
in
insl
ds
pushl
leave
xchg
lea
mov
cwtl
or
cli
dec
xor
adcl
sub
xor
rcrb
xchg
out
inc
xchg
stc
data16
repz
and
ficompl
incl
popa
icebp
gs
mov
jmp
icebp
and
xchg
xchg
push
inc
pop
jecxz
jmp
or
out
push
test
lcall
ret
stos
inc
ljmp
inc
ja
cmp
mov
call
fstpl
mov
out
mov
push
out
decb
add
adc
sbb
mov
imul
dec
inc
dec
mov
or
mov
mov
out
adc
jl
push
cmpsb
sub
fstps
push
movsl
addr16
loop
pop
adc
cmp
xor
ds
ljmp
adc
jae
movsl
and
out
subl
arpl
imul
loopne
scas
xlat
xchg
pop
bound
add
xor
add
movsl
std
or
and
subb
aaa
imul
cwtl
jge
out
mov
sub
lods
lret
aaa
testb
xchg
inc
jne
or
sub
enter
xor
movsb
jae
insl
ficoms
les
lahf
xor
cmp
jg
cmp
pusha
add
xchg
xor
test
loopne
aas
sarl
lcall
loop
mov
dec
mov
pusha
in
js
sub
jns
in
or
or
sbbb
mov
ret
mov
popf
mov
pop
xchg
outsl
xorb
pop
hlt
call
lret
nop
and
pop
out
jno
xchg
cmp
adc
adc
lret
lcall
mov
sbb
inc
push
insl
out
sub
jnp
fst
jbe
arpl
push
inc
pop
and
jbe
aam
mov
in
add
dec
fwait
into
nop
lods
sbb
and
inc
cmp
movsb
and
mov
xchg
inc
test
dec
xorb
jb
adc
cltd
in
jbe
jno
sub
movaps
pop
cmc
std
ret
dec
mov
mov
shrb
push
inc
loop
jae
push
neg
dec
int3
aas
icebp
repnz
and
pop
jmp
fnstsw
rcrb
int
les
call
into
pop
mov
iret
loop
imul
rcrb
and
fcoml
frstor
add
lods
js
bound
push
nop
movsl
or
mov
data16
loopne
ss
fcomps
mov
pop
pop
xor
or
js
dec
cmp
hlt
sub
mov
dec
cmp
sub
pop
push
push
xor
adc
jb
data16
stos
test
testb
dec
sbb
adcl
sbb
jl
lock
jg
mov
js
mov
or
mov
aaa
sub
sbb
fs
call
cmpb
push
pusha
outsl
cmpsb
ja
test
movsl
ljmp
mov
or
testb
push
mov
inc
jnp
sub
mov
adc
iret
divl
mov
ja
jne
stos
jne
outsl
pop
mov
cmpb
add
inc
ljmp
pop
in
mov
xchg
push
es
popf
push
lcall
aas
in
jl
pop
je
push
rcll
fidivs
jno
xchg
enter
sti
incl
jle
daa
rorb
lea
pop
dec
iret
xor
cmp
dec
test
adc
add
notb
std
cs
in
call
pop
inc
orl
sub
inc
or
pop
lret
dec
mov
dec
loopne
xchg
xchg
dec
cmc
test
repnz
hlt
in
jns
add
stos
xchg
xchg
mov
ds
or
inc
mulb
cmp
movsl
jp
std
cmp
scas
repz
xchg
fisubrl
into
adc
add
enter
cmp
sbb
pop
add
xor
mov
das
insl
and
xchg
mov
dec
loopne
add
lods
repnz
loop
fsubl
fs
xchg
and
push
popa
sbb
inc
adc
adc
es
xor
xor
inc
jge
push
aam
dec
dec
xchg
ljmp
adc
or
ret
cmp
jne
shll
mov
mov
or
insl
lods
cmp
fistps
test
jnp
in
hlt
and
lods
push
inc
orb
adc
sbb
loope
fs
or
jecxz
adc
mov
arpl
jg
jecxz
ss
pop
int
jmp
xchg
lods
int3
or
cmp
or
jmp
jno
jbe
std
scas
sarl
and
cmpsb
in
lret
test
stc
xor
xor
sub
xchg
sbb
jo
or
adc
mov
test
fcomp
push
lea
xchg
and
loopne
sub
leave
clc
aad
cltd
fists
pop
jecxz
mov
add
mov
int
mov
and
sub
lea
test
pop
test
mov
mov
sbb
xchg
sbb
js
add
push
lods
mov
mov
ljmp
push
es
sarb
mov
lods
int3
int3
mov
andb
add
in
mov
inc
or
fs
ror
fimuls
xchg
shll
push
stc
les
mov
xchg
movsl
jno
test
inc
stos
mov
or
add
mov
movsb
inc
loopne
movb
cmpl
jb
xchg
jle
es
mov
xchg
xor
mov
mov
push
divl
cwtl
ljmp
call
shrb
inc
dec
mov
stc
out
ljmp
iret
inc
push
imul
mov
scas
mov
adc
loop
push
iret
mov
or
mov
loopne
push
inc
cmp
jg
ret
popf
push
push
xchg
xor
ss
scas
xor
dec
pop
lds
xchg
mov
loope
adc
imul
out
add
jmp
jne
popf
sub
pop
shrl
push
movsl
js
imull
xchg
fsts
daa
push
cmc
and
pop
jge
roll
mov
call
ds
ljmp
andl
jb
adc
in
mov
shlb
bound
xchg
lret
ds
pop
add
pop
sub
clc
and
fcomps
xchg
filds
dec
or
jp,pn
xchg
jb
xor
movsb
sbb
stc
and
mov
sub
fnstcw
cmpsl
negb
adc
adc
pop
lods
scas
mov
lods
and
mov
in
xor
aad
add
sub
push
xchg
adc
jmp
addb
int3
lahf
and
mov
loopne
pop
outsb
shrl
cmp
add
nop
xchg
sbb
inc
lahf
inc
sti
orl
xor
ret
call
xor
mov
sub
scas
sub
pop
or
jl
xor
imul
loop
push
and
hlt
adc
jns
push
inc
mov
add
pushf
xchg
xor
push
pop
add
xor
loopne
push
pop
pop
mov
xor
inc
fistps
fs
cmpsl
lret
cmp
push
mov
sbb
xchg
sbb
in
and
jo
cmp
and
loope
xor
cmpsb
stc
inc
filds
iret
cmp
push
out
jo
loope
loope
jo
push
or
xchg
inc
les
ds
ficoml
xchg
js
ret
dec
decl
pinsrw
mov
mov
pop
add
xor
mov
ficompl
out
mov
or
mov
ret
insl
mov
sub
pushf
push
inc
jmp
or
enter
imul
cmp
shlb
vpunpckhwd
jecxz
push
test
jo
sahf
sbb
inc
in
and
inc
es
aas
aad
lcall
pop
add
xor
shlb
cmp
jb
pop
push
subl
mov
xchg
push
hlt
fldcw
cmp
xor
pop
repz
mov
jl
ds
sbb
dec
sahf
gs
sub
dec
nop
sub
stos
sub
roll
sbb
sbb
add
push
lret
xchg
pop
or
sbb
pop
lret
mov
fisubrl
xchg
lods
mov
jge
sub
cs
into
mov
clc
fdivl
movsb
pop
dec
arpl
jae
mov
dec
out
stc
rorl
lahf
imul
and
xor
pop
dec
or
sub
or
mov
mov
xor
int
push
pop
mov
inc
dec
and
mov
add
mov
adc
decb
mov
jmp
scas
and
dec
xor
inc
andb
test
sub
int
int3
inc
cmp
loopne
call
push
xchg
cmp
lods
xor
cmp
loope
dec
xor
lds
inc
aam
sar
push
push
cmc
rcrl
inc
xor
mov
cmp
fstpl
pop
jp
lea
xor
and
popa
cmpsb
shlb
mov
daa
cltd
add
lret
stos
mov
dec
not
cmc
aaa
es
or
cmpsb
ja
and
inc
lahf
sub
ja
je
iret
sub
xchg
mov
jb
shrl
pop
jo
fs
or
jb
sub
xchg
xchg
call
xor
rcrl
into
rcrb
mov
test
sbb
addb
or
push
pop
push
out
jbe
negb
pop
rcll
dec
hlt
or
xchg
sbb
nop
pop
lahf
daa
in
push
arpl
rolb
mov
pop
xor
cs
dec
push
int3
and
cltd
pop
sub
mov
push
mov
icebp
xchg
mov
ja
call
stos
cltd
popa
popa
and
add
subl
pop
enter
xchg
lcall
mov
mov
push
cmp
mov
cli
daa
xlat
xlat
xor
sub
cmpsl
xchg
xor
cmp
cli
out
imul
mov
hlt
popl
arpl
mov
ret
adcl
frstor
call
mov
sbb
mov
gs
adc
jae
jae
pop
je
or
mov
add
fistps
movl
mov
rorl
jnp
dec
inc
mulb
adc
gs
jg
xchg
push
add
mov
dec
pop
pop
cwtl
loopne
mov
dec
ss
mov
push
or
mov
push
iret
jb
dec
or
xchg
dec
cmp
cmp
test
cltd
dec
fisubl
jp
or
addr16
or
das
pop
sbb
jo
pop
add
cmp
insb
add
adc
scas
mov
pop
dec
fwait
mov
pop
pop
xchg
cmp
dec
lods
aas
lods
mov
xchg
sbb
xorl
daa
mov
and
dec
shll
subb
outsl
push
mov
jnp
push
in
adc
imul
jg
inc
iret
xchg
enter
mov
movsb
aam
sub
mov
lahf
in
or
sub
mov
fbld
loopne
jmp
push
push
xchg
scas
in
ljmp
xchg
fistl
jge
adc
dec
sbb
add
sub
dec
sar
push
and
push
pop
mov
mov
aaa
scas
inc
inc
inc
xchg
xor
and
sub
sbbl
pop
roll
ficompl
addr16
xchg
jbe
mov
idivb
fbstp
out
push
jo
fstp
inc
xchg
fwait
test
jl
push
js
pusha
das
out
pop
subb
xchg
add
repz
xor
push
adc
and
and
loopne
pop
xor
pop
in
push
imul
sbb
out
lods
popl
jg
cld
inc
sbbb
imul
xchg
sbb
aad
mov
in
sbb
sti
adcb
xchg
aaa
stc
fs
pop
repnz
adc
mov
stc
cli
dec
mov
adc
int3
jge
mov
fadds
popf
mov
adc
sahf
psubw
outsl
cmp
pop
in
dec
mov
mov
inc
testl
sbb
sbb
mov
and
dec
sub
pop
jb
imul
adc
push
dec
fidivs
aas
and
lods
jo
adc
push
mov
inc
or
inc
add
sbb
fidivrs
test
mov
xor
pop
mov
and
stc
cmpsl
rcll
mov
shll
sub
and
popf
ja
sahf
mov
xchg
xchg
sub
and
mov
xor
scas
cmpsl
imul
pop
lods
mov
jg
sub
sub
jns
je
sbb
in
faddl
stc
mov
sbb
call
js
jno
mov
jnp
outsb
xorb
mov
mov
inc
fdivl
cmpl
xlat
cmp
lcall
aam
push
push
mov
seta
mov
popa
or
add
jl
dec
xor
test
sbb
xchg
add
xchg
mov
add
mov
mov
movsb
mov
addr16
push
inc
mov
sti
int3
lea
fdiv
mov
jo
scas
mov
xchg
xchg
lcall
leave
mov
dec
adc
icebp
leave
mov
aaa
dec
and
xlat
pop
addr16
je
and
mov
push
push
shlb
cmp
xchg
lahf
call
pop
jg
mov
pop
mov
fdivrl
or
adc
mov
mov
cmp
push
xchg
fs
movsl
mov
jp
out
lahf
sti
jnp
or
and
cmpb
iret
mov
mov
icebp
das
cwtl
test
mov
repnz
sub
cmpsl
cmp
fsubrl
mov
xchg
mov
inc
ret
jae
arpl
jno
nop
cld
in
mov
xor
adcl
xor
dec
dec
and
push
shr
inc
xchg
cmp
push
rcll
gs
cmp
xor
mov
mov
repz
aaa
popf
lcall
cmpsl
jg
pop
mov
popf
fisubl
jno
bound
mov
imul
dec
das
mov
jmp
negb
into
adc
aad
test
into
sbb
adc
jg
sarb
pop
push
and
jmp
xchg
repnz
es
xchg
aam
mov
push
leave
cs
idivl
inc
xchg
fmull
and
sbb
push
dec
or
out
daa
add
dec
sub
push
jp
xchg
lods
pop
mov
push
cmpsl
push
mov
cmp
cld
lahf
mov
adc
sub
rcrl
pop
fists
mov
cli
icebp
ret
mov
lcall
insl
sbb
test
jns
lret
jl
rcll
xor
adc
pusha
orl
pop
push
fstps
or
lock
xor
xor
jo
in
and
push
push
jno
lock
mov
mov
aad
stc
dec
jmp
es
mov
sub
movsb
movsb
sub
pop
lds
inc
fs
cmp
sub
xor
cltd
cmp
push
inc
cltd
cwtl
cli
cltd
xor
or
pop
pop
popa
pop
in
stc
hlt
cld
sbb
xor
divl
pop
movsl
pop
jl
dec
test
mov
or
or
push
insb
mov
lds
iret
xor
mov
test
sub
sub
gs
loop
pop
mov
mov
jecxz
cli
out
es
sahf
inc
imul
sub
push
mov
cli
ja
scas
cmp
cmpsb
dec
fidivrl
push
pop
test
test
inc
cld
xchg
mov
pop
inc
sub
dec
divl
call
pop
leave
mov
dec
inc
loop
pop
inc
das
dec
push
push
mov
fcomps
adc
mov
icebp
add
push
ds
ljmp
inc
or
imul
mov
fldl
test
dec
sbb
ja
add
fbstp
xlat
fnstsw
mov
xorl
xchg
mov
icebp
scas
jbe
test
pushf
fisubrl
stc
fwait
in
shr
cmp
popa
and
mov
movsl
jae
orl
push
xchg
jl
adc
lcall
out
jns
ljmp
insb
xlat
xchg
push
mov
clc
cli
addb
fisubrl
pop
mov
ret
pop
jg
ljmp
cmc
int
add
xchg
in
sbb
fwait
negb
push
rcrb
rorl
call
mov
rcrl
dec
out
pop
rorl
in
in
mov
das
jb
out
cli
movsb
inc
cmp
lahf
add
pop
sub
mov
adc
loopne
fldcw
or
mov
xor
lcall
inc
sarb
leave
push
adc
cmp
cli
stos
lods
leave
pushf
lret
roll
pop
orb
sub
push
fstpl
dec
dec
sbb
dec
sub
sub
lret
lcall
mov
sub
xchg
dec
cmpsl
imul
out
mov
adc
out
movsb
ss
mov
shrl
lret
leave
ret
mov
cwtl
out
loop
sub
popl
jne
and
push
adc
aaa
push
cmp
sbb
push
sar
dec
clc
add
lods
ficoms
push
repz
pop
cmp
arpl
pop
mov
xchg
mov
jne
movaps
jp
mull
lcall
icebp
mov
mov
cmp
lret
test
cltd
cmp
push
cwtl
lock
out
in
or
inc
jl
imul
adc
aaa
out
in
shr
inc
sbb
pop
jno
lods
mov
or
inc
cmp
or
add
and
fisubl
imul
lret
xchg
inc
xor
bound
push
adc
jns
stos
pop
les
or
ds
and
cmc
xorb
jne
insb
dec
insb
ret
movsb
fidivrs
jl
les
adc
dec
lds
sub
mov
aas
xchg
push
loope
cmp
add
loop
cld
movsl
adc
or
sub
sbb
adc
push
scas
out
imul
test
aaa
jno
push
mov
int3
mov
adc
dec
ljmp
rcl
push
lcall
pop
mov
test
dec
jp
inc
or
jne
xor
fucomip
roll
push
jl
and
fadds
movsb
mov
adc
inc
jno
idiv
mov
xchg
pop
xchg
sbb
sar
out
sti
dec
sub
andb
xlat
mov
jnp
aam
mov
jno
inc
lret
fidivl
dec
add
jne
push
nop
fidivrs
and
jne
sarb
in
sub
dec
int3
lock
sbb
arpl
sbb
mov
into
mov
pop
cltd
pusha
mov
repnz
sub
push
adc
or
adc
insl
rcll
stos
pop
out
in
jge
xor
in
hlt
ret
lock
dec
and
lahf
mov
lahf
jge
sbb
mov
push
orl
xorb
lea
xchg
frstor
mulb
push
xor
or
xchg
mov
add
int3
pop
cmp
add
xor
inc
repz
fistpl
push
or
fistpl
jg
negb
or
cmp
insb
enter
subl
subb
fsubrp
push
add
pop
mov
lea
fstpl
mov
pop
cmp
movsl
xor
sahf
sub
inc
pop
xor
jecxz
ret
inc
add
mov
dec
sarl
ret
js
jge
and
add
jecxz
nop
mov
jns
mov
xchg
fs
sbb
mov
inc
cmpsb
lret
lock
push
jmp
dec
mull
mov
mov
cli
sbb
adc
aad
std
mov
sub
lods
adc
xor
jno
push
mov
rcll
fstl
lods
aad
hlt
mov
cld
popf
mov
mov
adc
pop
dec
mov
push
sub
aad
add
jmp
inc
repz
mov
mov
jb
adc
mov
jge
push
add
mov
sub
fs
in
adc
leave
loop
aas
icebp
cli
add
ret
jae
out
dec
cmp
xchg
popf
das
jo
je
cmc
mov
insb
mov
inc
jns
xor
test
repnz
jo
push
mov
lods
scas
mov
xor
es
or
dec
fiadds
xor
pushf
push
popa
and
push
mov
mov
int3
shll
loope
dec
leave
sbb
xchg
xor
outsb
in
adc
sub
cwtl
pop
sbb
sbb
add
ret
inc
inc
test
pushf
mov
cmpsb
mov
and
scas
std
dec
sarb
scas
and
or
jle
fsubrs
ret
jle
cmc
cmp
shrl
dec
out
sbb
or
pop
cmpsb
mov
sub
pop
cld
jecxz
scas
or
and
lcall
inc
mov
sub
sub
test
movsl
in
sarb
cld
shll
sbb
aad
ret
sub
push
inc
es
adc
xor
pop
test
out
dec
jle
bnd
popf
sbb
dec
mov
int
xchg
mov
test
jb
pop
adc
scas
pop
lds
mov
and
dec
push
mov
mov
lea
sbb
push
and
shl
fwait
mov
push
das
cmp
inc
mov
pop
fistps
xchg
leave
cmpsb
iret
iret
sahf
ja
mov
pusha
enter
lret
inc
or
and
gs
and
xchg
mov
mov
insl
and
stos
mov
loop
sub
hlt
outsl
dec
sbb
dec
cmp
fcmove
inc
and
jecxz
inc
and
rcrl
call
in
jne
out
fcmovne
add
mov
mov
data16
inc
not
xor
mov
jecxz
mov
imul
je
je
lods
adc
mov
adc
dec
popa
pop
inc
sbb
adc
stos
sub
jns
pop
cmp
pop
mov
push
ret
cmp
xchg
add
mov
dec
pushf
test
lock
mov
cli
jp
dec
stos
in
push
jg
xchg
outsl
pop
push
fmuls
jbe
orb
es
and
je
dec
fxch
and
shr
jb
sar
xor
jbe
lret
das
xor
cmp
mov
pusha
out
pusha
xlat
xor
out
xchg
mov
outsl
adc
aam
fmuls
xchg
mov
addr16
adc
inc
xorb
cmpsb
ret
das
les
sahf
jne
sub
cld
mov
fwait
push
and
out
xor
sbb
pop
or
dec
push
sub
add
fwait
sbb
and
dec
addr16
or
cld
in
pcmpgtd
or
inc
scas
lods
push
dec
leave
loopne
cmpsb
cltd
xchg
ljmp
ror
lods
dec
sti
xor
xchg
xchg
enter
lds
xchg
jae
push
inc
pushf
int
cmpb
inc
adc
adcl
adc
sub
mov
mov
test
iret
sbb
cmpsl
insb
fwait
push
sub
jns
pop
inc
xchg
cli
roll
int
lcall
xchg
lea
or
cmp
pop
jo
adc
mov
xchg
ja
arpl
jg
call
mov
ret
frstor
cmp
xor
jns
sbb
jge
cmp
enter
je
add
mov
pop
inc
out
aad
cmp
adc
and
inc
adc
test
dec
xchg
push
sub
and
imul
in
pop
xor
shl
mul
mov
mov
cmp
incl
mov
mov
cld
push
inc
aad
inc
and
inc
in
xor
hlt
test
push
dec
movsl
and
popf
aas
mov
mov
push
popf
xchg
addr16
adc
cld
ret
sbb
xor
push
mov
imul
lock
pop
add
or
in
fwait
out
adc
in
push
rol
stos
lds
pop
cwtl
daa
add
lahf
iret
clc
outsb
fimull
cmc
scas
or
fsubl
pop
jne
cmp
cmpsl
and
stos
xchg
dec
mov
cmpsb
pop
sbb
cld
jge
inc
fs
jo
jg
repnz
out
popa
out
fwait
jl
xchg
push
xorb
pop
xchg
cmp
sub
push
push
mov
mov
ret
xor
std
dec
mov
xor
jbe
popa
dec
in
inc
daa
xchg
mov
loop
les
xchg
jae
out
adc
jnp
in
pusha
lahf
push
subl
fdivl
adc
fistl
xchg
sub
mov
inc
mov
sub
mov
fdivl
inc
insl
inc
mov
xor
fisubl
jae
loopnew
add
sahf
or
cltd
mov
add
adc
mov
adc
dec
sahf
pop
sub
or
test
movsb
loopne
dec
and
add
cltd
mov
mov
dec
jno
push
ss
mov
xchg
pop
jge
ficoms
xchg
testl
movsl
popf
in
mov
xchg
repz
sbb
in
je
add
decb
and
xchg
push
cmp
push
cmc
lods
push
stos
loope
ds
test
adc
mov
loop
inc
scas
movsl
ret
mov
pop
pusha
and
ljmp
sub
sbbl
xchg
cmp
lcall
stos
dec
arpl
jg
and
inc
repz
lods
insl
ss
movswl
rcrl
push
mov
xlat
repz
imul
gs
adc
or
data16
inc
cmpsl
movsl
mov
cmpsb
xchg
stc
sbb
sti
pop
push
jb
daa
jmp
jg
pop
out
dec
sahf
fadds
rorb
xchg
arpl
inc
frstor
setp
and
cld
dec
sub
add
lods
jmp
dec
in
mov
stos
lret
jg
faddl
aas
pop
dec
lret
push
mov
jae
fs
sarb
mov
arpl
push
test
test
popa
adc
jl
arpl
sub
mov
into
stc
gs
fs
adc
push
lahf
je
in
pop
or
sahf
mov
sarb
out
jno
ja
or
scas
dec
mov
repnz
bound
arpl
xchg
adc
scas
std
push
mov
xchg
into
xchg
xorl
es
notb
test
out
in
push
in
movsb
bnd
out
sbb
pop
inc
test
push
dec
je
fimuls
jbe
xchg
adc
addl
push
push
gs
mov
shr
addr16
inc
rcrl
mov
sbb
fs
mov
push
clc
jb
shll
jae
daa
pop
dec
loop
mov
cmp
in
sub
pop
ljmp
inc
jbe
pushf
pop
dec
nop
iret
fbld
scas
and
inc
mov
sbb
outsb
stos
cmp
pop
pop
cwtl
add
jno
pushf
out
jl
cmp
ljmp
cmp
mov
les
push
or
and
jbe
jmp
fcmovnb
pop
in
mov
jmp
pop
or
pusha
inc
je
dec
daa
and
je
sti
pop
and
fsts
clc
fcmovb
and
icebp
shrb
test
mov
xchg
ds
inc
sub
add
enter
xor
pop
inc
xchg
add
mov
iret
sbb
inc
cmpsl
in
sbb
daa
lock
ds
mov
xor
loope
add
sub
or
xor
icebp
in
icebp
mov
and
inc
xor
fldl
mov
add
fucomip
xchg
add
enter
pop
or
xchg
adc
scas
mov
repnz
jns
sbb
insb
mov
js
lock
xchg
xchg
jmp
xor
or
stc
scas
adc
das
fcmovnu
in
les
jg
mov
fwait
cmp
insl
mov
jne
ret
xchg
jmp
in
test
mov
icebp
adc
subb
frstor
dec
sbb
or
cmp
pop
sub
inc
mov
movsb
inc
mov
cs
cli
lds
scas
lahf
jb
mov
ja
mov
push
mov
or
pop
jae
out
rclb
into
or
mov
addr16
xor
or
aad
mov
das
cmp
jbe
loop
testl
mov
roll
cmc
add
mov
test
icebp
pop
pop
xor
mov
cli
sahf
xor
stos
or
movsl
filds
pop
ja
repz
rorl
cmp
test
add
call
sub
cmp
enter
out
les
sub
inc
pop
mov
mov
dec
xor
sar
push
mov
pusha
jne
fstl
cwtl
aaa
pop
dec
cs
pop
push
lods
xor
inc
int
dec
lret
push
sub
scas
push
out
stos
ret
mov
lret
and
xchg
sbb
mov
add
clc
iret
mov
push
mov
mov
rclb
ret
mov
and
aas
push
stc
push
and
andl
mov
push
ljmp
hlt
aaa
push
jno
dec
and
lret
lock
bound
das
sub
divl
stc
cmpsl
repnz
mov
out
inc
repz
fld
pushf
xlat
mov
or
lret
sbb
out
jle
int3
test
sbb
push
out
movsl
cmpsl
sti
ja
movsl
add
cmp
cs
or
in
push
cmpsl
cmp
repnz
and
add
cmp
call
mov
add
jecxz
and
fiadds
adc
add
xor
call
or
cmpb
lcall
inc
fs
mov
and
sti
xchg
in
adcb
lret
mov
insb
sub
test
test
js
mov
pop
sbbl
ret
lahf
dec
cmp
xor
pushl
aaa
popf
xchg
sbb
roll
xchg
pop
mov
adc
addl
mov
mov
pusha
in
xor
and
add
jg
push
cs
jg
or
int
pop
xor
in
mov
fbstp
shr
subl
dec
loop
and
sub
push
pusha
mov
xchg
sti
or
lret
push
mov
mov
leave
sbb
jge,pn
leave
and
inc
movsb
mov
mov
xor
pusha
inc
pusha
add
jae
sub
mov
fwait
movsb
jns
loope
fstpt
add
xor
popf
inc
cmp
push
scas
mov
xor
test
sub
in
push
adc
int
sahf
jp
mov
mov
cmp
mov
mov
jp
add
in
les
fsubl
and
inc
mov
mov
scas
pop
push
xchg
add
sbb
test
inc
jge
mov
mov
stos
jl
out
push
sub
pop
inc
cld
push
push
orb
fildll
dec
loop
jnp
in
mov
and
push
jl
cmp
lcall
in
pop
enter
jmp
js
sahf
dec
fiadds
neg
aam
lods
mov
fimull
sbb
jle
ret
mov
ja
in
xor
push
inc
adc
adc
out
test
cmc
inc
gs
mov
adc
les
dec
dec
add
xchg
jg
ss
insl
push
sub
data16
ja
mov
jge
inc
in
daa
iret
push
icebp
fwait
lcall
movsl
nop
mov
pop
ja
insb
and
in
lock
mov
cmp
or
test
mov
negl
test
call
sub
xchg
sub
dec
mov
xor
popa
loop
negb
and
xchg
jno
push
movsl
daa
and
xchg
xor
js
mov
add
pusha
xchg
outsb
add
sbb
and
jl
mov
mov
arpl
enter
arpl
aam
cltd
xchg
mov
push
cmp
shld
add
mov
cld
orl
in
mov
jmp
scas
outsl
cs
enter
movsl
rcr
sbb
jnp
or
xchg
cmp
sub
mov
movups
imul
push
fistps
ret
out
scas
adc
jl
or
push
ret
scas
cltd
enter
adc
movsb
aas
jb
xchg
call
push
mov
adc
adc
dec
pop
mov
lret
ficoml
arpl
cmp
data16
or
jecxz
sub
sti
rorl
iret
cld
mov
push
push
xchg
in
mov
movsl
je
mov
negb
jmp
hlt
inc
call
addr16
mov
std
jle
mov
mov
adc
clc
jmp
mov
dec
push
and
xchg
adc
inc
sub
mov
outsl
pushf
sti
and
pop
sbb
enter
push
roll
out
ror
lret
test
out
sbb
fistpl
int
push
imul
mov
push
pushf
dec
shld
xchg
cld
or
or
adc
sub
int
fmul
push
fcoml
xchg
mov
fsubl
jnp
adc
scas
pop
addb
mov
jbe
dec
xchg
mov
push
cmpsb
stos
xor
fdivl
or
inc
dec
js
xchg
fistl
sbb
bound
push
sbb
clc
test
and
lods
cwtl
pop
das
fnstsw
jp
ss
ss
and
xor
aaa
dec
jge
popa
pushf
xor
mov
mov
jo
mov
mull
sti
adc
loopw
insb
bound
aas
rorb
mov
jl
out
decl
sbb
sub
pop
jecxz
inc
aas
call
xchg
add
comiss
mov
sub
fsub
sbb
mov
xchg
cmpsl
jbe
ljmp
sti
mov
xor
out
int3
lock
cmpsb
fcoms
sbb
mov
mov
std
mov
pop
push
push
jne
mov
cmp
aad
sub
aaa
jne
mov
sbb
xchg
inc
jp
ret
jp
movsl
mov
js
sti
dec
lds
insb
push
into
outsb
lods
cmp
pop
dec
inc
ds
scas
or
add
lods
sbb
ret
jg
les
movsb
cmpb
mov
add
mov
aas
pop
lret
dec
fsubrs
iret
in
orl
das
out
lcall
cmp
and
xchg
push
sahf
andb
mov
sub
mov
sub
ds
fucomp
cmp
movsb
int
nop
inc
nop
xor
mov
cmp
cmp
pop
adc
mov
jne
adc
or
cmpsl
insl
mov
cmp
dec
jnp
stos
idiv
pop
xorl
sub
push
test
popa
push
stc
fldt
imul
in
lock
add
sub
push
aam
cmc
xchg
sbb
push
push
arpl
lret
push
add
ds
shrl
mov
leave
std
inc
pusha
or
mov
adc
push
out
sbb
aaa
sub
lods
jecxz
adc
xchg
shrl
daa
jns
sub
inc
cmpsl
fmul
mov
push
stos
pop
sbb
xchg
fcom
xor
ror
pop
call
lea
ja
push
xor
int3
inc
nop
pop
pop
jl
inc
cmp
cld
stos
push
add
enter
cmp
or
icebp
inc
dec
int3
loope
mov
push
or
stc
inc
fwait
cltd
sti
cmp
movsb
dec
std
xchg
xor
and
bound
bound
sub
or
mov
jns
xor
sbb
shll
mov
push
test
and
aas
lcall
daa
je
inc
repz
mov
xchg
xchg
hlt
pop
lret
mov
or
push
sbb
repz
mov
lcall
jle
jmp
mov
cltd
jmp
xchg
and
sbbl
in
shlb
testl
sub
paddd
pop
xor
hlt
repz
pushf
cmp
shlb
mov
repnz
lret
cld
lret
ss
cmc
sub
add
cmp
cmp
lods
fldl
movsl
rcrl
ret
inc
add
push
pop
jns
fisubs
mov
jb,pt
fidivs
mov
mov
push
push
stos
mov
sub
shlb
jae
sub
sbb
sbb
xchg
xor
xchg
sbb
mov
int
xchg
sbb
test
cmp
push
iret
fiadds
inc
fidivl
in
or
mov
pushf
xchg
sub
adc
cld
sub
dec
in
xchg
notb
sbb
xor
pushf
bnd
ljmp
out
mov
jmp
inc
sbb
jge
xchg
push
xor
sbb
push
push
lds
xlat
lea
xchg
loopne
mov
mov
mov
pop
pop
aas
lret
xchg
adc
gs
bound
mov
mov
or
ret
or
dec
and
ss
or
push
jo
inc
jbe
mov
jmp
in
aas
mov
jecxz
and
dec
mov
mov
int3
sub
mov
mov
js
jecxz
sub
fiaddl
dec
adc
xlat
test
xchg
call
jecxz
cmpsb
dec
les
push
mov
pop
sbb
xchg
aad
arpl
jns
mov
push
mov
xchg
in
adc
repnz
rcl
pop
test
lods
xchg
mov
push
mov
pop
inc
bound
pop
divl
mov
scas
push
adc
pop
movb
mov
jmp
pushf
aas
or
add
dec
jne
jg
lock
sbb
xchg
loopne
pop
ja
xchg
push
pop
sbb
loopne
xchg
ljmp
xchg
mov
pop
jb
daa
sarl
outsl
dec
add
jecxz
hlt
or
leave
nop
je
mov
nop
ret
or
call
in
jmp
mov
mov
xchg
jne
imul
nop
shll
mov
pop
in
ljmp
test
pop
dec
stos
jae
pop
dec
in
sbb
lods
ja
inc
adc
push
or
sub
xor
out
test
std
es
popf
and
js
rcr
in
or
call
stc
adc
pop
mov
adc
rclb
std
or
xorb
roll
loopne
mov
mov
lea
rcll
inc
adc
notb
scas
mov
out
mov
repnz
mov
outsb
je
lds
or
jo
scas
sub
scas
outsl
or
xchg
into
fucomip
add
js
fs
not
cs
stos
out
imul
cmp
push
shrb
loop
and
imul
push
inc
inc
out
push
mov
mov
ret
cmp
pop
fdivs
jno
loop
sub
insl
jp
bound
imul
clc
das
data16
xchg
xchg
in
nop
test
and
adcb
xchg
jnp
out
stc
xor
xlat
inc
cmp
daa
lea
push
push
loop
sahf
and
nop
add
push
xchg
push
ss
xchg
aam
push
xor
repnz
in
cmp
jo
push
cmp
outsb
adc
sub
adc
pop
mov
pop
cmp
push
or
mov
aaa
pop
les
lret
outsl
dec
sbb
or
fs
gs
js
sbb
and
adc
fwait
and
dec
and
fsubl
xchg
jmp
xchg
mov
js
testl
in
mov
adc
cltd
pop
es
out
sbb
add
nop
mov
jo
add
in
in
xor
mov
mov
or
shrl
xlat
fstpl
outsl
subl
mov
jge
jbe
jns
mov
cmp
out
sub
pop
filds
pop
cmpsl
lret
pop
idivl
shll
sub
cld
repz
pushf
pop
icebp
xor
cmp
adc
cmp
sub
lds
repz
sbb
push
mov
arpl
daa
cmpsb
push
cmp
pop
ss
roll
sahf
es
inc
out
mov
dec
and
dec
cmc
movsb
insb
cli
push
cmp
mov
mov
inc
mov
push
mov
push
push
js
sbb
scas
lret
sub
jmp
std
jbe
mov
in
sub
xchg
bound
insl
decl
jns
cltd
mov
fisttpll
rep
sub
movsb
inc
mov
lahf
sbb
rorb
insb
insl
scas
push
into
sbb
and
iret
mov
or
rol
xor
inc
in
mov
xchg
jle
negb
add
and
push
pop
sbb
loopne
jnp
add
sbb
add
aam
jp
dec
daa
ss
or
sbb
mov
in
int
inc
sub
fwait
jbe
mov
add
sbbl
lods
pop
mov
pop
xchg
cmpsl
pushf
pop
jge
fistl
bnd
sub
and
xor
ficoms
xchg
mov
push
and
sub
stos
and
les
nop
sub
push
pushl
mov
mov
ss
inc
sarl
xor
cmpsb
push
xor
and
out
les
in
mov
push
or
test
mov
mov
scas
ja
icebp
xchg
nop
daa
pop
fwait
pop
jg
xchg
in
mov
add
cmpsb
adc
or
sarl
pop
lods
xchg
loopne
jmp
xchg
rcrb
loop
add
push
aad
mov
lea
imul
mov
sbb
mov
mov
sbb
insl
push
adc
pop
sbb
sti
lea
sub
xor
mov
push
or
or
ss
xchg
lret
pop
push
outsl
les
push
add
jg
sub
dec
and
data16
in
mov
lds
sbb
test
nop
idivl
mov
or
test
jae
ret
xor
stos
out
fcomip
daa
cli
inc
cmp
mulb
add
cmpsl
outsl
or
in
or
scas
enter
or
sbb
mov
test
and
adc
add
or
rcrl
dec
notl
leave
mov
mov
enter
sbbb
dec
or
jl
sub
mul
cmp
xchg
mov
mov
pushf
and
push
filds
mov
lods
mov
sbb
push
xchg
test
or
mov
sub
inc
cltd
out
dec
add
push
sub
mov
lock
sub
pop
xor
mov
es
or
and
xchg
stc
pop
and
adc
jb
pop
cmp
outsl
or
inc
cli
jg
cmc
cmp
jecxz
adc
sbb
std
jnp
stc
pop
gs
fnstsw
gs
adc
daa
popf
mov
pop
mov
mov
mov
in
pop
or
inc
adc
adc
test
mov
jne
les
xchg
std
push
lock
jno
lods
xchg
adc
push
jno
xor
imul
aad
imul
xlat
in
iret
imul
es
mov
mov
aad
rorb
jbe
push
xor
xor
lock
jbe
mov
cwtl
cmc
das
jb
inc
gs
lea
sbb
lods
jo
mov
push
sbb
sti
pusha
xor
mov
sti
les
jae
pop
popf
test
int
or
imul
aam
inc
dec
js
cmp
std
inc
cmc
dec
pop
adc
lods
inc
add
or
call
out
jmp
ja
xchg
loope
adc
lret
inc
jno
jge
cmpsb
icebp
out
xchg
ljmp
jns
jno
mov
or
push
addr16
inc
inc
je
push
adc
xchg
cmpsb
jecxz
cmp
sbb
test
jno
xor
push
push
fcomip
daa
sub
jecxz
push
mov
push
in
cmp
mov
fidivrs
push
and
cmpsl
clc
test
frstpm(287
cli
lcall
in
ljmp
push
ds
and
outsb
sarb
int3
jnp
xor
call
or
xchg
enter
xlat
test
mov
repnz
xchg
dec
pop
push
xchg
stos
jne
xchg
lahf
inc
dec
cmp
fdivrs
sbb
mov
fchs
push
cli
jo
xor
xlat
iret
sub
mov
or
pop
mov
sub
push
xor
cmp
mov
sub
push
cld
mov
shll
repz
imul
jno
arpl
lahf
pop
mov
insl
sahf
cwtl
or
mov
cli
sbb
pop
and
jle
fsubrl
test
cld
mov
lahf
out
or
mov
mov
divl
jecxz
lcall
int3
imul
and
xor
push
or
stos
imul
xor
scas
je
and
sub
pushf
pop
test
addr16
out
inc
mov
icebp
dec
pop
and
add
jno
dec
mov
push
pop
out
jb
pop
lods
imul
movsl
dec
mov
les
xor
and
push
cld
popa
xchg
or
aas
lods
sbb
out
lock
lods
loop
pop
sahf
mov
xor
dec
dec
dec
fs
sbb
mov
int
data16
nop
das
ficoms
cli
fstl
in
inc
mov
jp
and
pop
and
andl
pop
lret
je
or
int3
xchg
sub
orb
xchg
enter
call
inc
cli
dec
mov
pop
lahf
arpl
test
ljmp
lock
jmp
ret
push
mov
lods
adc
mov
sub
pop
jle
push
push
shll
fnstenv
mov
mov
push
lcall
jae
stos
push
and
aad
or
mov
out
gs
xlat
aad
dec
test
dec
into
shlb
adc
push
add
push
jle
mov
xchg
push
mov
pop
sub
mov
xor
jl
add
jp
xor
pop
jo
dec
sub
das
adc
imul
hlt
mov
icebp
fisttpll
push
push
sbb
mov
les
mov
test
idivb
push
fs
add
inc
lock
mov
xchg
les
ja
mov
jo
es
test
cmp
or
xchg
daa
out
mov
shlb
roll
adc
daa
insl
inc
fdivs
pop
pusha
js
stos
add
xchg
push
mov
inc
out
es
inc
mov
imul
inc
nop
lock
push
xchg
pop
sub
mov
xor
dec
dec
mov
lds
andl
fdivrs
sbb
aam
push
pop
cmp
enter
aaa
and
xorb
push
sbb
aad
movsb
mov
sarb
and
aad
pop
mov
mov
rorb
fadds
and
aaa
adc
cmpsb
mov
xchg
mov
jns
cmp
adc
sub
inc
in
out
adc
mov
js
scas
mov
movsl
mov
mov
pusha
ds
pop
mov
cli
cmpsb
mov
iret
pop
adc
jo
loope
ja
insb
cmpsl
rcl
cmp
ror
sub
mov
mov
xor
mov
xor
push
push
bound
pop
outsb
push
leave
loop
out
jb
ret
in
rcrb
je
mov
js
xor
repz
inc
push
jle
cmp
pop
sbb
out
ja
lcall
jns
ljmp
insb
aas
cmp
jp
cmp
ret
mov
cmpsl
pusha
adc
xchg
xor
scas
lret
lods
lock
add
xchg
out
cmp
adc
iret
bswap
clc
mov
je
dec
icebp
xchg
xor
xor
movsl
xchg
pop
cwtl
inc
pushf
sbb
outsb
jbe
lret
add
out
mov
pop
mov
addr16
jae
vmwrite
or
mov
lret
add
push
cmpsl
cld
inc
jnp
mov
insl
cmpsb
pop
sub
clc
xor
shr
cmp
add
sbb
or
dec
mov
insb
or
pop
jecxz
add
add
xor
sub
cmp
xchg
shlb
jge,pt
fsub
add
or
out
arpl
jno
and
lea
push
nop
fdivrl
paddq
adc
and
fcoml
test
jnp
or
sahf
mov
popf
mov
call
jb
inc
aaa
ret
push
adc
xchg
ret
inc
icebp
jl
mov
jnp
jle
repnz
mov
aas
lcall
loopne
popf
sbb
sbb
cmpsb
xor
pop
imul
mov
adc
sar
enter
or
lahf
dec
out
push
push
jle
pop
mov
fldenv
test
pop
add
loope
into
outsl
nop
mov
mov
rcrl
jae
mov
add
xchg
mov
outsb
les
jmp
aam
mov
int
adc
push
jne
fs
mov
pop
movsb
stos
or
mov
jp
jnp
cmp
cwtl
icebp
jns
cmp
mov
in
adc
or
pop
icebp
adc
test
test
inc
das
xor
rcrb
fldl
pop
std
mov
adc
fs
cmp
int
or
or
add
sahf
jl
inc
dec
inc
test
mov
dec
fwait
mov
ja
or
xor
fadds
mov
sub
sbb
notb
enter
je
imul
adc
xor
test
inc
cltd
outsl
sub
fildll
xchg
lods
outsl
jl
cld
mov
mov
orl
mov
add
imul
cmp
lea
jne
inc
add
xorl
xchg
bound
pop
jge
mov
jecxz
adc
int3
mov
sub
jg
inc
lret
shl
mov
pop
ret
test
fdivl
push
jl
fimuls
and
jp
sub
cmp
sbb
xor
add
push
fwait
das
jge
cmp
jo
jae
iret
inc
jle
xchg
pshufw
or
push
sub
lock
cmp
sahf
daa
repnz
dec
xor
sar
xchg
pop
test
movhlps
lea
inc
pop
lcall
mov
dec
xor
lcall
jno
jbe
add
mov
mov
roll
mov
inc
add
xor
sbb
fidivrl
sub
pop
lods
lcall
data16
xchg
mov
andb
js
andl
xor
xchg
int
lods
stos
mov
int
add
cmc
sub
ljmp
sbb
jne
insb
fldl
outsl
pusha
mov
add
dec
xchg
icebp
stos
cwtl
lcall
fcmovnb
mov
shll
cmc
fcoml
ret
and
cmpsb
movsl
mov
test
ljmp
push
xor
cwtl
incb
xchg
enter
inc
or
and
inc
mov
xor
mov
cmp
sahf
jnp
dec
or
iret
jae
rol
lret
pop
xchg
mov
jne
cli
fisubl
mov
daa
rclb
fstl
pushf
popl
sub
cmc
mov
mov
dec
aad
fcom
dec
jns
or
pop
push
push
sub
sbb
test
jge
repz
jp
cmpsl
and
push
push
mov
in
jmp
pop
or
push
sub
or
insl
adc
daa
xor
mov
or
mov
jmp
mov
xor
jle
adc
sbb
out
imul
mov
sbb
mov
test
adc
cmovns
call
xor
push
dec
sbb
jmp
fs
mov
sti
jb
push
cmp
mov
pop
sbb
cmp
mov
cs
adc
iret
fs
call
mov
nop
call
xlat
jg
sti
ja
ficoml
pop
pop
int
xor
lret
inc
mov
nop
mov
cmp
cmp
mov
jnp
enter
mov
pop
mov
idiv
iret
sbb
inc
mov
and
sub
es
dec
out
scas
push
jne
les
mov
stc
mov
xor
out
sti
or
sbb
pop
lea
in
adc
imul
add
mov
inc
jo
and
push
dec
xor
xorb
mov
fstps
insb
mov
sbb
cmp
jle
shlb
aad
jl
sub
pop
push
std
xor
icebp
push
adc
syscall
hlt
push
add
loope
fisttpll
into
push
push
arpl
mov
xchg
stos
fcmovnu
repnz
xlat
inc
jmp
mov
js
icebp
mov
dec
cmpl
loope
pop
dec
push
xchg
test
cmpsl
mov
call
mov
mov
cli
xchg
pop
xor
sub
divb
adc
out
por
sbb
cmp
xchg
mov
out
nop
xchg
add
cmp
jmp
cld
or
test
xchg
xchg
divb
sub
sub
es
int3
daa
cmp
je
mov
cmpsb
jne
mov
cmpsl
cmp
ret
inc
or
arpl
or
jg
pop
dec
mov
out
mov
xchg
shlb
lret
pushf
outsl
and
lea
xchg
xchg
sbb
int3
aaa
insb
addb
loopne
cmpsb
or
or
fstps
icebp
inc
jmp
popa
orl
fdivrs
pusha
inc
sub
hlt
pop
in
test
lds
jge
scas
rolb
cs
push
sub
mov
dec
push
pop
cmp
add
test
inc
repz
rolb
xchg
sbb
mov
lcall
ja
add
out
dec
inc
aas
or
mov
imul
sub
sub
cltd
push
ret
das
push
cmp
sti
or
jg
sub
add
fldln2
cmpsl
orl
pop
inc
fnstenv
sbb
aam
ds
xchg
mov
lret
mov
nop
cltd
fmul
inc
jmp
xchg
inc
mov
sbb
pop
add
xor
xchg
adc
js
divb
sbb
popa
std
push
mov
lret
mov
or
push
and
int
movsb
push
xor
or
and
xchg
pusha
sbb
pop
sub
add
ficoml
mov
sti
push
out
leave
lock
cmp
adc
mov
cmp
inc
das
jae
add
dec
test
jg
inc
movsb
lcall
call
jb
cmp
inc
push
fldt
pop
ljmp
and
xchg
leave
rcr
dec
mov
mov
cltd
add
or
xchg
adc
push
aas
decl
pop
xchg
sub
enter
jne
es
dec
lods
aam
and
aas
cmpsl
xchg
dec
lret
sbb
fisubrs
sub
sbb
push
pusha
inc
sahf
or
cli
repnz
push
cmp
sarl
push
in
adc
add
add
std
fdivrl
insl
js
fsubrs
lcall
rcll
xor
iret
jns
push
add
ret
push
test
inc
dec
test
dec
fnstenv
sub
jge
push
aas
dec
mov
jp
outsl
cmp
ds
addr16
adc
in
dec
push
add
xor
sub
adc
lods
cmp
mov
in
cmp
lcall
idiv
or
cltd
add
scas
xchg
imul
mov
or
sub
push
adc
xor
repz
inc
cld
xchg
cmp
xlat
scas
outsb
add
push
push
inc
loop
jo
scas
cmp
cmp
scas
outsl
sbb
mov
or
xchg
push
sbb
hlt
xlat
popf
add
mov
lods
pusha
lcall
movsl
outsl
jno
enter
mov
in
mov
flds
adc
inc
inc
and
jg
leave
into
cld
sub
cwtl
test
xchg
inc
mov
lods
xchg
cmpsl
mov
inc
pop
icebp
xchg
mov
or
lret
add
cld
add
mov
loope
js
iret
mov
ljmp
push
mov
call
lret
lods
inc
sbb
mov
and
pusha
test
lods
movsb
adc
std
or
mov
mov
scas
mov
leave
dec
mov
mov
pop
sub
ljmp
pop
jmp
inc
push
les
fistps
fs
adc
fnstenv
xchg
xor
dec
mov
adc
jbe
rolb
add
push
nop
fdivs
add
dec
ss
cmovae
adc
add
out
test
pop
mov
repz
insb
push
subb
add
dec
sub
and
xor
fiaddl
push
sbb
and
imul
jae
bound
les
fcmovbe
nop
inc
cmp
and
sarl
dec
mov
mov
cmp
push
mov
or
pop
adc
sub
and
mov
xor
lret
int
jb
in
add
shrl
push
dec
xchg
sub
mov
cltd
or
ja
mov
icebp
sti
in
mov
jo
dec
push
jl
stos
js
ret
aas
mov
sbb
pop
adc
lcall
mov
xor
popf
sub
mov
fildl
pop
gs
iret
cmp
cld
inc
fsts
cmp
fwait
pop
push
lods
fildll
xchg
loope
sub
sbb
ds
or
jge
jne
push
fxch
imul
pop
nop
or
cmp
into
and
jne
inc
push
jns
shl
or
push
mov
xchg
adc
cmpsb
outsb
lahf
ret
and
imull
add
and
inc
inc
mov
lea
xchg
sbb
sahf
pop
cmpsl
jbe
jle
jmp
fwait
mov
clc
inc
xor
imul
dec
ljmp
xchg
push
ret
loop
bound
imul
in
push
or
stos
mov
mov
in
mov
pop
mov
ljmp
push
outsl
je
dec
xlat
push
sub
sbb
add
push
sbb
fcmovne
cmc
hlt
js
ret
jmp
ja
data16
fwait
mov
es
stos
add
imul
sub
lcall
inc
push
fisttpl
dec
mov
mov
lods
orl
cmp
es
jg
int3
jle
push
adc
adc
add
imul
xchg
cmp
les
push
mov
aas
stos
inc
mov
addr16
inc
sub
xor
mulb
lea
das
rclb
jne
xor
scas
sub
jg
mov
xor
push
xor
fs
mov
icebp
xchg
pop
jne
ds
std
getsec
popf
jb
sbb
stc
scas
jle
pop
pop
rcll
xor
int3
xor
inc
sub
jge
popf
adc
popa
inc
dec
mov
push
sub
adc
repnz
fs
xchg
xor
daa
loop
adc
lods
jl
out
aam
lahf
pop
or
sbb
sbb
fcomp
pop
pusha
cli
mov
mov
cwtl
push
out
and
adc
push
jns
fwait
adc
scas
xlat
jno
pushf
xor
mov
es
sbb
int3
mov
cmp
int
mov
jnp
xchg
push
out
inc
clc
scas
and
dec
and
shlb
scas
int3
jle
mov
push
inc
pop
adc
hlt
pop
daa
mov
cmp
jae
xchg
jb
ds
in
xchg
notl
adc
dec
out
mov
ds
push
mov
insl
and
xchg
out
cmp
ljmp
inc
fcmovnu
or
pop
push
or
jae
popa
and
cld
shrb
je
mov
mov
mov
push
mov
call
adc
movsl
dec
stos
jp
mov
in
add
hlt
push
mov
cs
aam
jecxz
out
repnz
xchg
test
or
addr16
mov
jno
mov
and
incl
dec
sub
fucompp
lods
pop
cmp
cmp
aad
shl
xchg
call
fisttpl
outsb
cmc
cltd
add
cmp
sti
inc
push
dec
lods
cmpb
and
sub
daa
inc
scas
out
inc
out
or
adcl
fdivs
push
pop
pop
insb
push
mov
lods
mov
push
adc
mov
aas
adc
mov
and
insl
mov
int
mov
sub
mov
mov
cmp
and
out
fmuls
js
push
dec
jb
mov
jmp
mov
mov
mov
aas
jmp
add
xor
cmp
loop
dec
decb
out
xchg
mov
stos
mov
fimuls
pop
jmp
lds
repz
inc
push
sahf
dec
lret
ficompl
flds
inc
ss
es
scas
mov
ss
push
icebp
add
aas
mov
sbb
pop
ret
adc
mov
fisubrl
jg
adc
cs
push
bound
cmp
daa
insb
cwtl
movl
loopne
cli
pop
cltd
stos
movsl
jge
shl
sbb
push
xchg
shll
fsubrl
push
call
jae
int3
add
and
adc
xor
sub
in
test
test
mov
dec
test
ds
fisttpl
jo
xor
stc
imul
adc
lds
or
cmp
xchg
sbb
in
mov
bound
and
xchg
push
nop
pop
xchg
jmp
mov
jmp
mov
mov
jnp
push
jp,pt
mov
cs
push
test
popa
dec
insb
xchg
cli
test
js
hlt
negl
sbb
mov
mov
add
loopne
sub
insb
gs
add
fisttpll
cli
in
enter
stos
pop
in
ja
mov
jno
and
shlb
jno
or
add
push
adc
jl
shll
arpl
jno
jns
sub
adc
ret
orl
jae
sarl
ret
mov
pop
or
ret
loopne
iret
lcall
xchg
inc
adcb
mov
cmp
sbb
pop
xchg
int3
jg
mov
ljmp
shlb
ja
xchg
movsb
outsl
leave
test
sbb
pop
jnp
loope
fucom
mov
aam
cs
push
insb
out
hlt
orl
dec
xchg
ljmp
pop
test
stos
xchg
stos
ja
mov
sbb
lret
sub
xchg
sub
loopne
hlt
xor
pop
std
adc
add
leave
or
mov
dec
sbb
stos
mov
fst
loope
sub
dec
lock
testb
add
jg
add
jg
ficoml
cltd
jp
clc
inc
mov
int3
fwait
lods
xchg
sub
call
jne
push
xorb
pop
or
scas
sbb
add
out
cmp
mov
push
push
sub
pushf
nop
es
mov
dec
xor
pop
outsl
clc
jp
lds
sub
pop
inc
push
xchg
push
sub
fldcw
loopne
pop
int
push
fidivrl
rorl
scas
jno
jb
dec
xchg
cmp
dec
push
sti
jb
push
sub
gs
cld
in
push
inc
jo
lods
pusha
enter
pop
xchg
fsubrl
and
addr16
mov
or
cltd
cmp
xchg
lret
int
sahf
mov
fnstsw
vmovntdq
loop
mov
cmpsb
mov
sti
inc
hlt
lods
adc
popf
cltd
sbb
mov
jne
push
scas
lock
fs
add
ret
je
sub
push
jecxz
cld
mov
mov
lahf
sbb
mov
cmp
xchg
ret
push
pop
adcb
fists
push
into
mov
int3
arpl
cmp
inc
dec
push
aas
push
mov
and
rolb
inc
cmp
push
aas
push
jns
lret
pop
sub
mov
xchg
bound
imul
repz
aad
sbb
les
out
jae
out
push
out
gs
ret
xor
aas
cmc
mov
sbb
scas
in
adc
jnp
pop
mulb
scas
repnz
xchg
mov
les
push
push
movsl
les
lods
ja
xchg
sbb
push
stc
ret
cwtl
cmp
and
sbb
mov
dec
pushf
inc
push
sub
mov
pop
faddl
into
dec
mov
xor
loope
adc
aaa
adc
push
xor
stos
cmpsl
or
jns
inc
xor
jl
fsubrp
or
jae
or
bound
stos
push
dec
rolb
adcb
sbbb
js
push
das
lods
idivb
xlat
mov
adc
lock
xor
xchg
mov
pop
mov
cld
test
jge
test
call
pushf
mov
mov
push
ficompl
cmp
or
idivl
mov
inc
cmpl
pop
pop
stos
sub
test
mov
pop
xor
push
repnz
js
add
pushf
dec
push
test
or
pop
fcomps
fsub
xchg
mov
jg
pop
mov
mov
outsl
daa
rorb
std
cmp
xchg
cli
pushf
xchg
pop
dec
pop
pushf
rclb
or
pop
push
xor
jge
jecxz
sti
dec
xor
sti
xorl
mov
sbb
or
fildll
ja
sub
mov
cmp
fnstenv
pusha
xor
push
or
loope
push
mov
enter
outsb
cltd
ror
andl
test
jne
sbb
pop
and
push
or
mov
enter
cmpsl
adc
lret
push
jp
mov
mov
push
daa
notl
stc
test
in
adc
and
outsb
adcb
aam
add
mov
dec
sbb
stos
out
pop
int3
addr16
cmpsl
mov
push
shl
sub
mov
xchg
xchg
jno
das
das
jb
hlt
and
mov
das
jl
popa
in
or
push
and
int
adc
in
cmp
vpavgw
mov
rcll
jne
and
rorb
fwait
rclb
push
pop
pop
inc
lock
lods
mov
or
enter
clc
iret
cmpsl
pop
rorb
add
lods
fwait
mov
and
rcrb
jae
repz
rol
insb
pop
xchg
dec
and
pop
inc
pop
sub
dec
push
fcompl
shl
inc
popa
jecxz
aas
lods
push
rolb
push
push
or
sbb
cmpsb
push
leave
xchg
mov
dec
jae
mov
ljmp
dec
mov
jl
and
mov
xor
call
popf
notb
jo
jo
notl
in
mov
test
lock
je
lret
mov
mov
add
mov
jmp
popf
shll
mov
push
sub
sbb
mov
mov
mov
mov
frstor
lods
mov
mov
inc
sub
cmpsl
or
mov
lcall
cmc
fsqrt
jns
rolb
lds
xchg
sbbl
fs
cmp
pusha
stos
fs
rorb
inc
xchg
sbb
cmp
pop
out
aas
xchg
or
and
out
hlt
aad
inc
add
cmp
fsubl
adc
sbb
adc
push
test
out
mov
popl
mov
gs
pop
adc
in
jns
jno
mov
je
ret
jge
xor
sub
roll
cmc
cwtl
push
out
push
out
jnp
xchg
adc
and
aaa
xor
jg
jge
add
aam
or
mov
or
mov
push
test
das
mov
adc
xchg
sbb
sbb
arpl
pop
out
and
out
cwtl
mov
popf
xchg
ds
pop
cmpb
sub
push
add
add
inc
inc
cmp
jbe
push
ss
cltd
jbe
cli
xor
movsb
arpl
pop
shrb
fistl
loop
adc
jle
sbb
jnp
push
xor
ljmp
jbe
mov
popa
add
out
lock
adc
sub
mov
lods
add
pop
lret
and
adc
pop
out
pushf
add
pushf
loope
insb
mov
cmp
jb
jg
pop
aaa
add
mov
jne
push
add
ljmp
jne
aad
in
leave
jmp
lea
loopne
xor
pop
je
push
mov
ds
mov
xorl
push
xlat
cmpb
or
repnz
cmpsb
jmp
shrl
xor
jne
outsl
jp
mov
pusha
adcb
scas
adc
sbb
xchg
clc
xchg
in
push
dec
addr16
xor
jns
pop
cmpsl
ja
jne
jne
add
jns
adc
mov
xchg
loopne
dec
arpl
jle
push
push
jp
sbb
pop
icebp
dec
mov
insl
rorl
pop
int
adc
sbb
lret
cld
dec
cltd
mov
xor
jg
mov
incb
push
fcmovnb
cmp
lds
es
mov
iret
jmp
test
jp
insl
ljmp
add
rclb
mov
lock
and
push
add
test
jge
inc
js
test
mov
imul
test
cmp
movsl
int
xchg
pushf
mov
fwait
stos
xor
pusha
push
js
leave
add
xchg
or
test
loopne
fstl
popl
sub
sub
mov
and
cmp
ja
add
mov
mov
lods
shrb
add
clc
push
enter
push
mov
pop
inc
pop
sarb
out
sbb
sub
inc
sbb
mov
pop
xlat
jns
dec
inc
add
ds
std
add
dec
mov
fnsetpm(287
add
mov
rclb
imul
daa
jmp
call
xlat
pop
adc
pushf
mov
ret
leave
push
lods
aas
mov
mov
jne
dec
sbb
or
movsl
xchg
insl
mov
bound
lds
mov
jne
dec
lods
in
xor
cli
mov
xor
push
out
aad
scas
fidivl
mov
jns
xchg
jns
subb
pop
cwtl
rol
or
pop
in
cmp
sbb
jmp
pop
popa
stos
in
push
or
outsl
aam
jnp
loop
push
adc
rclb
int
rorb
sti
mov
ss
mov
roll
jmp
frstor
adc
mov
lcall
stc
cwtl
iret
shr
icebp
leave
add
dec
cmpsl
outsb
mov
xor
out
ljmp
cmpsb
jae
rcrb
aaa
add
pop
or
and
mov
sub
into
decb
and
or
pop
sbb
lds
add
into
fcompl
pop
push
sbb
repz
or
pop
sti
ss
xchg
aas
inc
pop
fsub
rorb
insb
stc
in
mull
dec
cltd
lock
neg
inc
cmp
sub
loope
mov
shlb
inc
shlb
dec
gs
notb
idivb
lods
test
data16
idivb
xor
push
in
stc
xchg
hlt
add
pop
in
cwtl
mov
outsb
mov
in
hlt
outsb
sbb
insb
sub
pop
fld
jb
loope
sti
lock
jecxz
adc
pop
mov
cmpsl
lret
in
out
popa
test
fistps
scas
push
divb
pop
mov
daa
orl
mov
stos
popl
mov
sbb
loop
pop
mov
in
outsb
popf
xor
xchg
mov
push
cmp
xchg
push
sbb
jl
or
mov
das
inc
push
or
xchg
or
jo
aaa
dec
aad
shll
mov
mov
dec
das
out
xchg
pop
dec
push
sahf
aam
mov
popa
jnp
roll
in
mov
jb
stos
shll
jo
jmp
stos
push
rorb
mov
arpl
pop
xchg
fs
sub
jns
xor
shrl
add
iret
jbe
in
mov
adc
scas
cmp
shr
cmp
inc
xchg
pusha
mov
cmp
xchg
fwait
test
dec
inc
xor
cld
fistl
cmp
xchg
outsl
arpl
sub
stc
pop
sub
add
push
fcoml
dec
sub
inc
push
mov
shr
push
jmp
in
xor
push
push
add
out
dec
bnd
into
inc
sahf
fdivr
icebp
mov
pusha
repnz
mov
adc
jno
mov
pop
inc
pop
sbb
mov
adc
addr16
jge
rolb
notb
push
mov
inc
or
pusha
cmovl
mov
orl
ss
or
cltd
and
xchg
sub
enter
and
and
fnstsw
test
pusha
mov
pop
stos
cmp
pushf
or
inc
orl
cmc
push
fisttpl
jb
shlb
mov
xor
cmp
daa
repz
sbb
xchg
cmpsl
jo
xchg
lods
mov
add
popf
ljmp
fistps
fcomip
pop
out
js
dec
call
cmpsl
xchg
adc
mov
movb
push
shlb
daa
mov
sub
xchg
mov
pop
mov
es
loopne
cwtl
aas
mov
add
fildll
mov
dec
push
fnsave
stc
ljmp
dec
mov
mov
adc
or
rcrb
pop
loope
mov
add
mov
into
gs
lret
push
aam
xlat
ffree
mov
pop
es
mov
cmp
add
arpl
icebp
pop
js
shrb
mov
push
xchg
int3
lods
aaa
sub
add
jle
out
xor
push
push
std
scas
push
lret
cmpsl
ja
sti
mov
popf
ret
lea
dec
push
popa
adc
lock
test
fwait
mov
and
into
sub
mov
mov
mov
cltd
or
mov
xchg
fsubs
arpl
imul
xor
fcompl
add
cmpsl
fcompl
cmp
xchg
lahf
jmp
rorl
inc
movsl
mov
jl
and
in
jo
dec
mov
shrl
xchg
or
sub
pop
jle
lock
int
dec
and
mov
cmp
and
pushf
dec
bound
aaa
call
stc
fsubrl
roll
xlat
mov
inc
loop
sbb
mov
cmp
sbb
filds
aas
jno
push
adcl
pop
sub
jns
outsl
jp
pop
pusha
sub
sbb
insb
popa
lcall
out
cvtdq2ps
sub
sbb
pop
bound
outsb
sub
inc
jno
pop
mov
xor
int3
mov
jp
movsl
adc
push
shl
mov
movb
fcmovne
iret
and
mov
pushf
and
jl
and
inc
lds
inc
jmp
adc
dec
jge
pop
mov
cli
orb
mov
fldt
into
nop
mov
rclb
or
gs
iret
faddl
inc
aas
or
imul
test
outsb
and
in
adc
jns
jle
stc
and
bnd
cltd
xor
xchg
stos
inc
repnz
push
sub
cmpsb
dec
test
icebp
dec
movsb
call
fcomps
mov
ret
subb
sub
cmpsb
xchg
aad
sbbb
shlb
and
dec
iret
out
out
jnp
jno
pop
insl
into
mov
mulps
adc
jo
inc
cmp
adc
cmp
push
inc
out
sub
fdiv
out
orb
adc
stos
pushf
and
and
in
enter
jnp
inc
and
pop
scas
std
jae
dec
mov
mov
adc
cmp
sahf
arpl
inc
sbb
cmc
insb
gs
xchg
cli
iret
cmc
cmc
xor
add
jg
popaw
mov
lock
cmpsl
in
fistpl
cmp
fwait
sbb
data16
add
cmc
sahf
gs
aaa
sbb
xor
add
rcrb
inc
mov
jmp
sbb
ja
sbb
xchg
aaa
jo
test
arpl
pop
das
xchg
mov
and
mov
and
xchg
cmp
jp
insb
ja
es
inc
push
push
out
ss
add
mov
cmp
in
inc
cwtl
push
or
in
xor
out
movsb
mov
sub
scas
cmp
add
cmp
cli
in
cmp
iret
dec
dec
imul
clc
fbld
lods
add
ljmp
mov
fwait
mov
lock
xchg
mov
cs
push
jns
fisttpll
mul
inc
arpl
mov
push
jle
pop
out
mov
jb
push
data16
jae
inc
cmp
inc
in
js
outsb
fucomi
cltd
push
cli
adc
fwait
in
scas
loope
cltd
jecxz
addb
inc
mov
jle
dec
shl
loope
out
mov
sbb
xor
stos
mov
add
test
negb
pop
stc
xchg
fwait
xchg
outsl
out
iret
xor
push
insl
mov
lret
inc
mov
mov
nop
mov
push
and
stos
dec
test
insl
jne
xchg
mov
insl
ret
ret
xchg
jno
popa
xchg
fmul
mov
mov
cmpsb
ficoml
test
pushf
mov
frstpm(287
mov
test
push
inc
fistpl
push
xor
or
inc
sbb
sbb
mov
jp
add
push
and
mov
dec
cld
xchg
or
mov
pusha
jle
cmp
mov
scas
mov
xor
pushf
scas
test
lret
ds
sar
push
orb
lahf
cmpsl
mov
add
adcl
popa
mov
loopne
push
inc
sbb
aam
jbe
ljmp
mov
xchg
xchg
sahf
sub
mov
mov
xchg
arpl
and
int3
loopne
bound
aad
out
xchg
mov
outsl
mov
add
dec
jl
adc
xchg
xchg
mov
sub
jne
fwait
mov
add
or
or
ficoml
add
mov
imull
inc
or
and
mov
imul
cmp
jb
sub
mov
movsl
fsubrs
and
mov
ja
scas
cmpsb
leave
inc
ret
and
lods
push
adc
pop
rcrb
mov
data16
test
mov
mov
cmp
inc
subb
inc
mov
dec
pop
dec
imul
and
pop
ficoml
or
call
rcrb
xchg
mov
in
popa
and
fadd
movsb
fldl
and
sbb
repz
jae
cmp
mov
icebp
std
cltd
in
test
push
sub
addr16
adc
fcoml
mov
test
js
pop
mov
pop
pop
pop
into
inc
mov
jg
aam
sbb
inc
arpl
bswap
jae
jl
pop
stos
mov
mov
repz
adc
mov
mov
pop
loop
inc
mov
cmp
cmpsb
jge
lea
out
pop
daa
loop
adc
xchg
pop
sub
nop
push
mov
cmpl
orl
aam
je
fisubrs
dec
insb
add
sti
inc
lods
scas
aaa
jns
sbb
rcl
ret
mov
sub
mov
andl
iret
imul
imul
ljmp
adc
fildl
inc
ret
push
mov
les
push
lcall
xor
roll
jg
sbb
and
add
aam
cmpb
popf
sbb
scas
push
out
mov
push
cltd
dec
dec
sbbb
pusha
cmp
add
cs
inc
mov
mov
dec
movb
adc
pop
mov
popf
roll
adc
cmp
inc
sbb
adc
cmc
into
cwtl
daa
imul
mov
xor
pop
gs
fmull
mov
sahf
sbb
xor
scas
sbb
sahf
into
rolb
mov
xchg
je
pop
adc
pop
lods
inc
int3
pop
inc
cli
inc
mov
jb
push
testl
mov
les
in
mov
xor
fcmovbe
jae
mov
fldcw
cmp
lock
or
mov
pop
lock
out
and
hlt
dec
xor
xchg
xchg
ljmp
cwtl
sbb
push
enter
mov
adc
xchg
std
pusha
pop
pop
bound
push
fcoms
mov
xor
cmpsl
aad
fsubrs
gs
lret
stos
sbb
adc
pop
pop
xor
mov
sub
jmp
push
mov
insb
sub
scas
aaa
sub
add
fcomps
xchg
dec
mov
rorl
movsl
sub
call
mov
loope
push
push
int3
mov
or
mov
add
loope
sbb
rorl
mov
push
jne
jmp
faddl
dec
cwtl
fcmovb
sub
sbb
std
jno
sbb
inc
nop
dec
xchg
mov
and
enter
inc
pusha
mov
xor
push
fidivrs
mov
ret
sti
lret
in
adc
leave
and
lcall
jb
jb
les
test
cltd
sub
in
sbb
addr16
inc
pop
mov
and
inc
sub
bsr
mov
jp
mov
bound
lods
call
cmp
add
push
testb
lret
sbb
int3
leave
roll
fists
sub
pop
outsl
in
stos
mov
jno
jecxz
fstpl
adc
jno
inc
jo
loope
jb
hlt
arpl
imul
xor
pusha
and
mov
adc
adc
daa
push
cltd
mov
out
ss
jns
cmp
lods
mov
cmp
out
ja
fs
and
dec
sub
or
push
scas
popf
leave
mov
into
jne
xor
cmp
pusha
or
ljmp
out
push
xchg
subl
pop
rorl
fidivl
fnstenv
jg
cmpsl
cmp
xchg
adc
add
sahf
andnps
cmpb
jno
mov
sarb
ret
sbb
insl
adc
xchg
orl
mov
cmp
sti
shr
jo
nop
push
ljmp
dec
jo
push
mov
inc
cmp
sub
fnstcw
pop
mov
subl
or
push
pop
sub
and
and
jp
fisttpl
cmp
and
enter
cmp
jno
dec
mov
shrb
push
arpl
in
or
adc
mov
ret
call
add
add
pop
adc
jp
add
sub
sahf
add
lock
test
hlt
push
leave
mov
aad
push
cmp
mov
cs
repnz
in
or
notl
out
enter
dec
test
movsl
mov
cli
mov
lahf
jae
popf
mov
test
frstor
push
sarb
loop
insl
or
or
jl
pop
lods
movsb
lret
pop
fmull
xor
loopne
test
mov
mov
mov
pop
loope
pop
jmp
rol
jns
data16
fsubrs
pop
cli
lcall
gs
jge,pt
jg
mov
adc
int3
dec
js
shl
add
sub
repz
cli
mov
adc
add
int3
leave
jbe
data16
or
mov
movsl
and
inc
mov
sahf
or
cmc
pushf
lds
js
jae
repnz
sub
fdivl
mov
addr16
dec
imul
js
inc
loop
push
xchg
add
js
aam
lock
xchg
fsts
popa
sbb
sbb
addr16
outsb
cmp
sub
dec
lods
popf
ljmp
aad
dec
lock
push
bound
sbb
ss
jne
dec
inc
icebp
rorb
stos
lods
ret
inc
push
pop
jmp
add
pop
push
test
in
and
lcall
negb
cmp
das
fistl
mov
rcll
sub
adc
into
mov
ret
cmp
add
insb
out
repnz
xlat
clc
mov
test
add
jecxz
and
pop
mov
push
push
outsl
imul
mov
cmp
rorl
jnp
pop
in
pusha
loop
insb
test
jo
cwtl
das
jno
dec
sub
sub
cld
sub
repz
jg
test
mov
clc
and
sub
dec
flds
ljmp
add
lahf
sub
xchg
add
jle
loop
push
jbe
out
mov
jmp
out
pop
push
mov
mov
inc
mov
inc
sti
mov
rorb
mov
or
dec
lods
jnp
les
bound
mov
add
jp
push
fimuls
ret
dec
inc
imul
fs
xor
jge
cmp
dec
push
stos
adc
jp
jne
out
mov
ss
mov
scas
lods
stos
or
icebp
push
pop
push
stos
xor
arpl
inc
imul
cmp
decl
push
inc
push
sbb
jl
rcll
fyl2xp1
mov
psubusb
sbb
loopne
in
lret
mov
lret
xchg
sbb
arpl
outsl
sbb
clc
and
popf
adc
andw
call
imul
jo
scas
testl
mov
jbe
sahf
xchg
pop
je
add
lock
or
lcall
rorb
pusha
cmp
sbb
sbb
mov
push
mov
in
rolb
and
push
icebp
cwtl
push
notb
repz
imul
ret
mov
mov
out
sub
fcompl
xchg
lods
bnd
les
decl
dec
jmp
incl
push
ss
call
or
xchg
cmpsb
sbb
jmp
sbb
imul
stos
stos
filds
dec
out
fbstp
mov
andl
jns
std
push
fnsave
sub
mov
int3
jmp
pop
xchg
pop
mov
pop
xchg
test
hlt
fstpt
push
sub
je
inc
fsts
lock
or
mov
mov
jbe
lds
pop
jbe
ja
adc
out
enter
jno
add
mov
decl
add
inc
dec
sarl
mov
cmp
adc
jl
mov
fdivrl
movsl
push
lock
pop
dec
fdivl
or
rcrl
and
and
shrb
rcrb
stc
jo
nop
inc
sbb
shll
sarb
xor
pusha
std
insl
scas
inc
pop
push
mov
jmp
add
ret
in
and
xchg
icebp
mov
and
scas
test
pop
daa
jbe
sbbl
push
mov
adc
adc
ds
cmpsl
jno
xor
xorl
mov
out
push
sub
pop
pushf
into
lods
sbb
push
ja
adc
movsl
cld
mov
leave
sarl
xlat
out
cmc
pop
movsb
je
les
daa
sbb
xchg
pop
inc
cli
jg
jns
and
sbb
enter
sub
mov
cmp
jge
pop
idivb
lcall
into
lcall
mov
pop
inc
sub
sar
jge
test
pop
xlat
sbbl
jb
jo
pushf
test
addb
mov
mov
push
mov
repnz
inc
xchg
add
jge
insl
stos
mul
inc
dec
push
lcall
or
hlt
test
fsts
aad
jbe
mov
loopne
in
push
sub
rclb
or
cmc
adc
mov
test
aas
jmp
repz
aam
push
sbbl
hlt
lods
in
add
and
test
iret
sub
jb
mov
cmp
inc
out
bound
lahf
packuswb
in
ret
push
int
pusha
scas
into
push
lea
repz
push
mov
add
mov
roll
lcall
pop
es
pop
adc
mov
es
test
out
pop
xor
adc
pop
leave
aaa
push
mov
adc
scas
cmp
mov
pushf
mov
imul
test
rolb
push
push
jmp
and
roll
imul
pop
cmp
pop
xchg
mov
mov
lret
or
xor
jno
or
cmp
cmp
xor
shll
push
ljmp
in
sub
cmc
leave
shll
fwait
xchg
imul
and
push
mov
mov
xor
xchg
push
loopne
sub
inc
stos
sbb
lea
addr16
cmp
in
imul
shlb
cmp
xor
mov
rorb
shll
sarl
mov
lret
or
and
xchg
xor
and
dec
cmp
xor
sub
dec
rorl
xchg
bound
or
dec
jle
jle
lods
popf
into
je
scas
sbb
nop
aaa
xchg
call
aas
cwtl
sbb
inc
into
or
mov
or
ud0
push
call
mov
mov
dec
sub
cmp
xchg
dec
mov
mov
popa
jecxz
dec
ret
xchg
dec
test
adc
sub
fildl
push
xchg
shlb
loopne
sbb
out
sub
lret
int3
imul
je
xor
or
frstor
ja
stos
dec
shrb
push
mov
hlt
ficompl
test
sub
out
mov
jge
popl
andb
mov
xchg
loopew
sarb
xchg
stc
xchg
sbb
cmc
je
jl
in
scas
sub
dec
add
loopne
sbb
dec
mov
xchg
add
xchg
xor
in
mov
cmp
repnz
cmp
ds
movsl
and
xchg
aad
inc
das
mov
int3
leave
pmullw
jns
mov
lahf
iret
pop
sub
adc
sti
dec
and
aam
jnp
push
mov
jae
movsl
fstp
and
bound
pop
or
stc
ds
add
sub
cmpsb
ljmp
xlat
pusha
div
paddusw
or
fdiv
lock
cwtl
lods
mov
imul
je
push
xor
in
dec
or
mov
mov
mov
cmp
pusha
lret
mov
in
inc
insb
shr
in
into
add
pop
sub
cmp
and
mulb
call
xor
sbb
cmp
adc
add
in
popf
clc
notb
cli
popf
pop
cmp
mov
xlat
mov
lret
mov
jmp
cmp
inc
push
sbb
add
mov
repz
pop
fs
and
loop
enter
inc
in
or
nop
lret
popf
stc
mov
pushf
ljmp
js
in
dec
add
in
inc
mov
cmp
rclb
mov
mov
fsubs
mov
inc
add
mov
pop
xor
push
and
mov
sbb
pop
cltd
mov
nop
clc
clc
dec
xor
xor
mov
and
mov
fimuls
and
inc
mov
push
cmp
xlat
mov
sub
pop
push
bound
xchg
ljmp
stos
stos
lret
jmp
hlt
xorb
xor
lods
or
lret
sub
out
sub
ja,pn
mov
aad
cmp
sub
xchg
cmp
push
mov
fnsave
adc
pushf
les
sub
add
mov
addr16
repz
loop
imul
or
sbb
jg
cmp
loopne
dec
or
stc
xor
xchg
or
cmc
in
out
pop
cmp
outsl
pop
loope
lods
mov
lea
mov
push
pop
jp
out
xor
sub
imul
sbb
jmp
stos
enter
mov
mov
enter
mov
out
repz
fwait
outsb
fnstcw
jecxz
push
xlat
sbb
in
xchg
jne
out
or
fcom
jae
cwtl
sub
inc
stos
sub
aas
lret
pop
adc
je
test
leave
sub
xlat
mov
mov
jns
xor
inc
cmpsb
ja
cmp
jns
sbb
jmp
mov
stos
hlt
dec
ret
addr16
fnstsw
mov
das
adc
cli
cli
aam
mov
mov
push
cltd
push
adc
shl
cwtl
cmp
jbe
xlat
pop
inc
mov
mov
inc
repnz
imul
mov
orps
mov
or
push
es
or
inc
outsl
jmp
cmp
ja
sub
mov
jno
mov
mov
adc
jecxz
inc
orb
cmp
stos
sbb
test
mov
and
add
icebp
jl
mov
movsl
subl
and
insb
lar
pop
and
jo
out
aas
outsl
sbb
adc
test
out
push
insb
outsl
mov
mov
adc
mov
inc
arpl
pop
leave
or
push
xor
js
xchg
add
adc
lods
int3
enter
sub
xchg
mov
cmp
mov
pushf
adc
jge
shll
xlat
cmpsb
out
mov
daa
fmul
jmp
ss
cmp
cltd
xchg
filds
xchg
fdivp
inc
popa
add
sub
mov
jns
dec
cld
lret
dec
sub
fucomp
pop
cld
cmp
add
movsb
inc
jnp
cmp
adc
shrb
aas
inc
mov
rcl
test
mov
mov
inc
push
adc
mov
sub
popa
mov
lcall
outsl
test
nop
scas
lds
adc
fsubrl
inc
xor
cmp
sub
shr
fcmovne
inc
dec
iret
sub
mov
insb
mov
adc
divl
es
adc
pusha
xchg
mov
mov
jae
lret
cmp
int3
mov
push
mov
in
jne
add
cmp
sub
lcall
rcll
data16
fwait
xchg
movsb
sti
xor
mov
dec
xchg
je
inc
or
mov
cltd
push
xchg
lock
jno,pn
lock
outsb
fwait
sub
fiaddl
popf
in
mov
and
pop
sub
iret
add
ret
mov
dec
mov
mov
movsb
out
rcll
out
ret
ljmp
jb
pop
punpcklbw
sub
add
mov
lock
sub
pop
push
pop
inc
int3
add
push
jbe
lods
mov
push
repz
push
xchg
aaa
pop
xor
fcoms
pusha
ror
imul
sarb
adc
rcll
dec
in
or
int
ljmp
pop
pop
sbb
mov
add
lods
outsb
jb
inc
push
or
and
leave
mov
or
jl
rcll
inc
pusha
addl
pop
in
jo
dec
jge
je
cmp
adc
ret
push
icebp
movl
cmp
leave
sub
xor
gs
cli
jo
mov
repnz
or
bound
push
dec
std
leave
add
sbb
imul
mov
addr16
ljmp
insb
stos
inc
popf
in
mov
sarl
subl
push
xchg
jo
cmpsb
cld
xchg
stos
in
mov
cmpsl
addb
ljmp
sub
push
lock
aam
addl
push
push
jo
arpl
daa
sbb
into
dec
jg
xor
xor
mov
mov
dec
insb
mov
iret
xor
xchg
fs
adc
cmp
in
jbe
lahf
mov
mov
stc
adc
int
es
stc
add
cltd
push
sub
insb
test
cmp
mov
cmp
pusha
or
adc
sbb
outsl
imul
pop
jp
rcll
jno
in
push
in
iret
insb
scas
dec
in
xor
cltd
add
pop
jmp
xchg
push
imul
lods
lock
negb
or
push
xchg
sub
jo
adc
jg
inc
shlb
int3
xchg
aaa
repnz
lds
cmp
jp
xlat
mov
js
dec
or
aas
iret
add
or
arpl
mov
scas
pop
jae
ficompl
into
arpl
pushf
dec
dec
mov
push
jb
cmp
jl
cmp
mov
in
insb
lret
push
in
aaa
int
adc
mov
les
addr16
mov
inc
cmc
sbb
inc
inc
or
sub
outsb
mov
xorb
and
ljmp
call
out
mov
enter
repnz
push
push
jle
fsubl
mov
js
into
pop
jmp
ret
pop
cltd
in
xchg
mov
stos
add
jns
push
add
jle
inc
jns
lret
mov
lea
pop
das
enter
xor
xchg
sub
add
jmp
cwtl
mov
lret
ror
ja
mov
popa
test
sbb
aas
int3
inc
rclb
test
dec
cmpsl
ljmp
sahf
inc
insb
jecxz
and
shll
aaa
dec
adc
cwtl
cmp
inc
call
inc
fs
lock
shrb
xor
sub
setge
cwtl
xor
aad
idiv
test
cld
lahf
xchg
lea
push
popa
cli
arpl
jbe
jns
jg
sbb
jne
scas
cmp
and
mov
enter
fnstcw
nop
push
mov
lods
ss
sbb
cmpsb
cs
test
xchg
fbstp
idivb
ss
fstpl
test
cmovno
pop
adc
jecxz
inc
hlt
test
insl
push
jb
inc
popf
inc
insl
sub
icebp
xchg
adc
jg
cmp
sbb
push
lahf
sub
sub
xchg
insl
icebp
adc
enter
bnd
xor
adc
dec
sub
xorb
or
fsubs
and
int
in
cmp
je
push
xchg
dec
sub
dec
push
imul
mull
add
in
mov
hlt
jecxz
mov
xchg
jle
push
mov
fcmovne
js
cmp
push
cltd
nop
pop
pop
andb
orb
adc
sub
jbe
cmpsb
or
repnz
adc
adc
push
jo
inc
cmp
xorb
fnsave
dec
inc
fbstp
outsb
sbb
jg
dec
stos
jnp
xor
inc
pop
pop
ret
imul
out
mov
sbb
push
push
push
push
jecxz
sbb
cli
adc
lret
outsb
mov
push
xor
fldl
sub
sub
push
cmp
sbb
jl
ljmp
cmp
pop
cmp
int3
repnz
adc
adc
mov
mov
push
ljmp
addb
push
lock
push
push
add
repz
push
in
sbb
dec
mov
jbe
adc
insb
leave
cwtl
mov
roll
cld
scas
jp
push
dec
inc
and
insb
andl
movsl
enter
push
xchg
movsl
cmp
inc
mov
je
cs
fisttpl
in
test
dec
lahf
cld
add
inc
or
iret
push
xchg
inc
xor
mov
and
inc
inc
lret
jno
dec
fsts
test
clc
xchg
inc
das
movsb
sub
shlb
mov
outsl
inc
dec
adc
sarl
aad
mov
jns
rcr
cmp
jp
popf
push
xor
mov
nop
mov
movsl
lock
sub
adc
push
lea
jge
loope
out
mov
push
pop
js
pop
test
pop
mov
cmpsb
sbb
jmp
mov
pop
cwtl
mov
push
mov
scas
dec
cmp
or
dec
fmuls
out
sbb
fidivrs
push
jp
mov
data16
lret
xlat
push
cmp
xchg
mov
xchg
movsb
adc
and
lahf
sub
loope
imul
idiv
sbb
jo
iret
popf
mov
and
xchg
push
mov
fldt
push
mov
jg
popf
lock
aas
inc
xorl
pushf
xchg
inc
dec
add
std
pop
imul
sbbl
cmp
push
inc
ss
aaa
imul
cwtl
pop
inc
test
and
xchg
dec
stos
mov
movsb
es
fs
fidivrs
xor
push
add
or
push
fucomp
addb
dec
sub
stos
packssdw
mov
pusha
cs
imul
xchg
dec
adc
cmp
rcll
and
xchg
xor
adc
mov
adc
ret
cld
jge
push
pop
idiv
in
mov
jne
jle
cmp
movsl
mov
jmp
dec
and
or
pop
and
int3
in
sbb
jo
pop
movsb
shrl
insb
in
sbb
cwtl
push
dec
out
xlat
xor
outsb
js
popa
fwait
mov
test
cmp
arpl
sbb
rcrb
fists
mov
mov
xor
inc
aad
xchg
adc
leave
je
fdivrl
mov
jo
pushf
adc
pop
pop
sbb
cmp
xor
lds
mov
aam
jb
mov
mov
movsl
jns
ja
sub
cli
cld
mov
add
jge
ljmp
insb
in
addb
into
dec
rorl
icebp
rcl
int3
sub
sbb
lods
or
dec
inc
es
fcomp
sub
popf
cmp
ret
stos
add
arpl
and
sbb
sbb
mov
adc
test
das
sub
pop
jno
inc
xor
push
xchg
int
adc
int
push
add
in
jmp
dec
sub
mov
gs
addr16
test
xchg
jne
lods
xchg
dec
jns
aas
pop
fwait
push
and
leave
les
fistpll
mov
push
mov
mov
xchg
cmpb
xor
shl
adcb
or
sti
mov
mov
or
xchg
cmp
and
sbb
pop
pop
cltd
rcr
inc
out
mov
dec
dec
lret
cwtl
push
lds
fwait
lcall
les
outsl
lret
xlat
daa
dec
xchg
cltd
push
add
and
xchg
mov
pop
mov
test
aas
fdivrs
and
in
pop
jne
pop
cwtl
jg
xchg
popf
jp
mov
mov
and
mov
test
repz
jecxz
fdivs
xchg
or
pop
mov
adc
jmp
dec
adc
add
jns
add
in
mov
add
jnp
repnz
loop
in
xor
dec
fidivs
dec
xor
inc
loopew
dec
cmpsb
lea
pop
jnp
push
ljmp
in
push
mov
inc
xchg
sbb
jo
add
loope
test
dec
or
shrl
loopne
addr16
movsl
xor
ss
mov
sub
sub
ss
test
shr
xlat
lock
sbb
pusha
fwait
stos
dec
sar
jle
daa
loopne
repz
or
into
dec
mov
mov
stos
push
and
push
pop
jecxz
pop
fadds
xor
mov
xchg
xchg
jae
inc
mov
xchg
xlat
loopne
jmp
mov
pop
and
ja
xchg
ds
insl
addr16
cltd
lds
jae
xchg
test
pop
popa
jns
hlt
cmpsb
inc
rcrl
xchg
add
rorb
mov
push
mov
dec
out
jno
xlat
fisubs
lock
in
int
dec
enter
imul
addb
popf
insb
push
divb
faddl
out
mov
sub
ficoml
or
pusha
push
dec
movsl
cmp
addl
xor
lea
sub
mov
fldl
add
pop
inc
mov
adc
sub
mov
inc
push
pop
dec
scas
inc
add
pop
mov
sbb
stos
fstp
mov
ss
fsubr
mov
movsb
movsb
lock
das
sbb
les
dec
mov
xor
repz
xchg
imul
inc
push
movsl
pop
ficomps
mov
sub
mov
ljmp
or
xchg
push
push
mov
and
mov
add
adc
popf
jp
xchg
test
inc
push
dec
jmp
adc
rolb
dec
mov
aad
or
addr16
int
mov
jge
aam
jb
mov
adc
sbb
ret
sar
jge
pop
loop
xor
push
arpl
lock
jmp
shlb
mov
stos
cmpsl
aam
into
insb
pop
push
lahf
cmpsl
arpl
gs
cmp
addl
cltd
ret
jmp
adc
aas
mov
dec
test
cmp
addr16
test
arpl
add
mov
dec
int3
dec
mov
mov
test
outsb
jp
dec
dec
iret
push
mov
add
data16
mov
mov
stos
sub
out
mov
inc
add
push
push
bound
es
icebp
int3
add
int
push
lods
fs
repz
loope
inc
inc
dec
pop
inc
sub
add
outsb
pop
data16
aaa
out
repnz
and
fldenv
push
sbb
mov
inc
dec
cmp
mov
sbb
inc
sub
mov
xor
inc
loop
loope
and
xchg
rcrb
fildll
push
aaa
xor
jbe
jp
adc
sbb
lods
sbb
aam
xor
movsb
fs
xor
xchg
dec
shll
mov
in
jp
push
es
aas
pusha
sub
mov
repz
pop
pop
mov
test
shlb
btsl
sbb
call
or
adc
cli
or
dec
mov
add
aam
bound
sub
in
sub
loope
mov
and
rcll
in
xchg
xchg
push
jl
adc
jns
pop
sub
sub
dec
dec
xchg
rorl
fst
inc
fucomip
push
xchg
xorb
imul
scas
dec
mov
or
rcrl
adc
xchg
mov
sti
sbb
mov
in
or
lods
ret
mov
pop
inc
push
lret
in
xchg
sbb
aaa
push
fimuls
sub
testl
daa
mov
xor
dec
in
lea
daa
icebp
aam
dec
or
and
pusha
dec
sbb
sbb
dec
notw
xchg
mov
xor
pop
add
push
addl
sarl
jb
push
fidivrs
inc
les
push
mov
repnz
popf
cmpsl
pop
popa
sub
push
insb
movsb
int
mov
add
data16
mov
aam
mov
addr16
cmp
out
xchg
flds
int3
adc
test
lret
adc
xchg
loope
inc
loopne
shrb
cmpsb
hlt
bound
xchg
loope
adc
sub
add
pop
lds
push
out
lock
mov
pop
xlat
cmc
fdivrs
dec
shrl
out
cs
aaa
daa
les
hlt
hlt
pop
ja
add
dec
adc
adc
icebp
in
fisubs
fidivs
in
sbb
pop
pushf
push
je
mov
pop
ror
sub
stos
jae
jns
jnp
add
lret
xor
repz
notl
jae
mov
xor
in
cmp
adc
test
push
xor
pop
mov
je
popf
lret
push
test
addr16
jecxz
cmpsl
mov
mov
sbb
cmpsb
or
mov
or
jp
cld
pop
ja
or
cmp
out
into
lea
pop
scas
subb
mov
or
sub
fs
repz
clc
hlt
sbb
scas
cmp
mov
pop
pop
js
add
mov
adc
cmp
pop
cmc
mov
in
mov
imul
mov
xchg
sti
mov
bound
inc
mov
add
pop
movsb
sbb
adc
scas
aas
gs
fs
push
gs
insl
adc
jbe
adc
push
pop
shlb
bnd
add
pop
pushf
je
mov
jb
nop
push
jle
out
int
scas
movsb
lcall
sbb
rol
aam
pop
mov
movsb
ret
mov
jo
cmp
mov
testl
aaa
movsl
xor
mov
or
jmp
xor
xor
mov
pop
mov
pop
popa
into
mov
ljmp
xchg
popf
mov
pushaw
int3
sbb
mov
sub
dec
pop
add
jbe
dec
inc
sti
mov
loope
aaa
into
pop
pop
pop
push
daa
sarb
jg
jl
add
push
icebp
lcall
fisttps
pop
xchg
addr16
dec
imul
jl
aad
out
push
fucomi
icebp
mov
imul
mov
push
xor
xchg
jl
sub
push
xchg
imul
add
data16
lea
dec
outsb
add
inc
lods
jg
xor
hlt
push
icebp
rclb
rcll
daa
push
or
cmp
mov
sbb
mov
enter
call
sub
in
test
mov
dec
mov
sbb
test
sub
pop
or
push
mov
inc
add
xchg
ficomps
adc
xor
into
insl
insb
pop
lods
add
dec
xchg
inc
jl
mov
roll
xor
mov
add
sbb
bound
push
test
mov
ljmp
pop
push
pop
insb
insb
add
add
cmp
out
jbe
dec
xor
test
sub
stos
mov
mov
pushf
sbb
pop
vxorps
xchg
adc
in
fs
dec
mov
int3
sti
nop
xor
pop
fstps
jno
push
and
jp
dec
popf
adc
sub
fidivs
push
mov
push
xor
cwtl
stos
pop
fs
sub
jbe
sub
rolw
sub
jbe
pop
popa
push
dec
movsl
mov
ja
sbb
mov
aam
mov
sbb
mov
push
push
loope
aam
xor
lock
push
insl
sbb
cli
enter
int
dec
sbb
insl
pop
and
scas
sti
push
mov
add
in
pop
push
pop
clc
ret
cmp
iret
jge
ds
mov
in
fwait
aas
xor
int
shlb
mov
loope
je
enter
addr16
ja
test
adc
mov
sbb
call
mov
addb
sbb
rcrb
add
mov
fcoms
push
mov
pop
ss
lahf
mov
test
pop
push
mov
lock
popl
icebp
cs
fisubrs
ljmp
and
in
and
outsb
push
jbe
jp
inc
jno
inc
fcompl
iret
outsb
pop
xchg
sub
jb
in
popf
mov
scas
call
aas
cmp
orb
push
or
je
and
je
aas
or
call
add
pushf
repnz
stos
cmp
xchg
mov
mov
sti
pop
lcall
mov
inc
test
jbe
subb
push
push
call
jmp
loope
mov
sub
mov
xlat
jp
fsubrl
add
mov
or
xor
dec
mov
add
lods
push
jae
jae
sarb
dec
mov
mov
scas
ret
push
lock
pop
cmp
jae
and
lcall
jae
add
aaa
xor
and
lea
xchg
jb
push
loopne
xchg
mov
icebp
xchg
mov
cmp
sbb
in
data16
test
adc
mov
enter
jnp
adc
add
or
cmp
aas
lods
or
cmp
aam
cmp
jl
pop
shl
jne
ds
inc
push
subb
enter
jp
stos
loopne
push
icebp
sbb
into
scas
int
dec
adc
out
pop
or
jo
addr16
movsb
loope
ret
jecxz
mov
loopne
lds
data16
aad
in
xor
cmpsb
int3
mov
test
pop
mov
mov
out
in
push
jl
rcll
lock
mov
add
ss
mov
sahf
jp
pop
cld
cld
test
rolb
dec
mov
mov
cmpsb
dec
lahf
fndisi(8087
mov
cmp
push
enter
loop
adc
daa
mov
inc
iret
ds
cmp
fldt
je
jno
cli
jbe
push
je
ja
cli
inc
mov
sbb
inc
jno
sahf
mov
push
jp
push
icebp
sbb
in
test
push
test
sti
outsb
pop
imul
fmull
add
sub
lahf
cmpsl
stos
notb
divl
cmp
add
mov
inc
mov
outsl
xchg
std
mov
int
xchg
icebp
ret
outsb
adc
add
xor
xor
mov
sahf
cs
push
ds
sbb
or
loope
lret
mov
mov
dec
icebp
clc
jl
dec
dec
inc
pop
lods
in
sub
push
mov
add
xchg
cmp
cmpsb
cmp
mov
daa
aas
adc
sbb
push
imul
lds
jle
and
cmp
out
mov
clc
stos
push
push
inc
ljmp
mov
inc
dec
repz
sub
imul
dec
jo
repnz
cmp
push
mov
mov
dec
in
pop
inc
cltd
add
hlt
push
loop
aad
sbb
xchg
les
add
push
push
std
jbe
lret
inc
fisttpl
mov
sar
stc
inc
mov
add
sbb
mov
mov
lock
lcall
lods
dec
sbb
in
repz
pop
repz
inc
xchg
aas
insl
push
ss
xchg
cmp
insl
lret
jge
pop
mov
push
push
add
xlat
cmp
aad
das
lock
sub
push
cli
enter
mov
mov
je
movb
negl
pop
pop
jo
out
sbb
push
orps
gs
cmp
cmp
adc
pushf
scas
mov
aam
int3
ret
shll
fwait
adc
jp
jl
stos
push
push
orl
jecxz
cld
pop
mov
jns
sub
mov
jo
out
stos
clc
inc
rorl
jbe
sub
xor
mov
add
jne
popf
jnp
bound
cmp
jae
pop
ret
jle
insl
pushf
cmp
aas
enter
jg
ret
ja
push
inc
pop
lods
and
adc
rolb
push
jge
mov
push
pop
sahf
testb
push
mov
inc
call
jns,pt
lret
ret
movsb
ja
cld
push
pop
fcmovb
inc
pop
mov
lret
sti
adc
loope
inc
and
push
jb
leave
inc
aad
xor
pop
in
sub
xchg
mov
fcomps
and
cmp
hlt
pop
jne
xchg
imul
mov
arpl
ret
push
repz
out
jp
pop
push
push
jae
push
pop
push
cmc
nop
in
out
xchg
push
je
sub
mov
es
pushf
dec
out
push
inc
in
cmp
mov
fstpl
cmpb
das
cmp
adc
mov
les
xlat
add
sbbb
inc
mov
pop
cmp
into
das
dec
and
add
lds
cld
xor
pop
scas
adc
fistl
xor
loop
clc
stos
xor
mov
cmp
jbe
pop
cmp
push
popl
xchg
sub
or
aas
inc
pop
aad
pop
call
movl
inc
dec
mov
popf
ret
sbb
mov
out
mov
imul
fidivl
adc
test
mov
xor
mov
cmc
jle
or
mov
inc
fiadds
sbb
lds
mov
push
jno
repz
mov
out
dec
rcrb
jne
in
or
dec
dec
adc
xor
cmp
cmp
pop
sub
scas
inc
inc
push
je
test
loopne
sbb
adc
imulb
xchg
mov
xlat
sahf
dec
push
out
rcrl
inc
das
popf
mov
inc
test
into
xchg
mov
sub
sub
or
es
shr
outsb
pop
xorl
jp
cmp
test
roll
popa
push
faddp
push
fcmovu
and
pop
das
jno
lret
inc
pusha
mov
call
faddp
sub
lock
pushl
push
gs
scas
or
pop
sbbl
flds
inc
jp
out
mov
xchg
or
test
js
mov
xor
and
jl
aad
pop
pop
in
clc
ss
lods
jns
pop
addl
xchg
xchg
sub
outsb
lret
add
imul
cmpsl
cmpsl
jb
rcr
mov
sub
frstor
and
xcrypt-ofb
cmpsl
imul
pop
push
mov
stos
add
xchg
and
rorb
push
arpl
hlt
mov
jne
fldcw
shl
pusha
cmp
fsubrp
test
jb
lret
clc
jne
aas
enter
lcall
mov
adc
xchg
int
mov
out
cli
mov
mov
push
shll
or
lahf
shl
movsb
and
leave
pop
push
cltd
jp
xchg
mov
push
push
mov
mov
xchg
out
mov
cltd
or
xchg
pop
and
jne
lea
lock
jb
outsb
mov
sti
sbb
std
xchg
pop
shll
and
int3
sub
push
dec
in
outsl
ljmpw
pusha
xor
mull
inc
push
and
bound
fwait
and
inc
dec
xchg
xor
sahf
fdivrs
xor
adc
jbe
shlb
aad
inc
mov
sbbb
gs
fwait
cmp
sub
lahf
pop
or
enter
call
ss
out
mov
jbe
or
imul
sub
adc
testb
add
jecxz
add
inc
push
cs
dec
pop
jle
mov
dec
cld
insb
adc
and
rorl
in
int
cmpsb
pop
int3
mov
test
sub
jg
addr16
lds
orb
inc
jmp
loop
fwait
pop
test
les
test
leave
pop
push
mov
jp
scas
sbb
mov
imull
mov
addb
adc
out
mov
pusha
test
lods
push
add
jne
xlat
cmpsb
push
sbb
imul
cmp
lea
inc
cmp
pop
in
shll
push
fnsave
pop
lea
ja
jne
pushf
and
cmp
push
sbb
scas
ret
dec
sub
mov
repz
sarl
pop
repnz
push
xchg
pop
xor
je
fisttps
jmp
test
xchg
mov
fisttps
mov
sub
insl
push
in
shlb
lgs
loop
xchg
outsl
dec
jl
lds
adc
rorl
stos
fcmovnu
fstpl
lret
sti
add
cmp
jo
sub
mov
adc
ja
pop
pop
cmp
jg
mov
ret
decl
sbb
xchg
pop
inc
adc
rcrb
and
outsb
lds
sar
iret
lock
mov
push
arpl
movsb
cmpsb
inc
cmpsb
mov
cld
mov
iret
arpl
rclb
js
inc
movsl
xor
or
jae
push
xchg
cmp
fcompl
xchg
pop
mov
enter
or
popf
cltd
repnz
movsl
inc
and
sub
shlb
fiaddl
mov
push
icebp
xor
inc
cs
nop
jne
divl
and
int3
adc
dec
icebp
xchg
cmp
cli
or
pop
cmp
fmull
aas
dec
ja
and
xor
jb
cmpsl
aaa
jb
lahf
jae
xor
cmp
mov
mov
dec
xor
pop
mov
push
mov
inc
cld
test
fimuls
mov
sbb
nop
cmp
xchg
out
mov
call
xor
pop
std
loopne
testl
std
or
pop
pop
ret
mov
mov
es
mov
pop
gs
push
sbb
cmpsb
xlat
out
xor
jmp
mov
dec
mov
sbb
sub
or
add
push
mov
mov
inc
add
icebp
imul
icebp
xchg
pop
cmpsb
xchg
xchg
or
jne
sbb
repnz
mov
je
push
sbb
cmpsb
mov
or
xor
and
mov
cmc
out
cmc
xor
dec
dec
cmpsl
ret
jnp
dec
fadds
cmp
mov
xor
dec
mov
nop
out
repnz
push
lods
test
mov
cmp
push
xor
mov
ret
pop
insl
rorl
mov
jg
outsl
add
dec
repnz
pusha
aad
les
cli
mov
cmp
dec
push
cli
xor
test
mov
and
std
jmp
insb
mov
call
cli
pop
out
mov
in
xlat
dec
jge
mov
icebp
pop
mov
ds
test
test
pop
mov
xchg
push
cmp
sbb
rdmsr
sub
addl
dec
sbb
loopne
cmp
jb
je
and
mov
fsubrs
inc
pop
int
pop
ret
xchg
mov
inc
rol
cmpsb
mov
xlat
ret
stc
outsl
jb
adc
call
cmp
xchg
ja
push
sti
add
in
xchg
mov
roll
adc
cwtl
out
sbb
imul
test
fistps
hlt
pop
add
or
outsb
ss
cli
or
je
dec
sub
push
jle
xchg
or
in
mov
xchg
pop
cmp
push
push
shl
jo
mov
dec
xor
arpl
mov
adc
ret
daa
je
jnp
out
aaa
xor
sub
les
mov
dec
je
insb
xor
cmc
xor
ss
or
in
int3
lds
in
xor
add
sti
push
lcall
data16
arpl
add
push
mov
add
stos
push
test
clc
mov
addr16
and
xor
insb
mov
sub
dec
test
sbb
jl
cmp
into
mov
and
arpl
inc
jnp
mov
mov
mov
adc
lcall
lahf
cmpsl
adcl
dec
imul
push
das
lock
out
pop
push
ja
xchg
fwait
nop
cmp
andl
test
adc
push
xchg
xor
inc
loopne
lcall
push
add
pop
adc
stc
test
into
js
loope
mov
sarb
and
pop
or
in
pop
jle
pop
clc
test
and
inc
mov
je
jnp
popf
ljmp
dec
add
pop
clc
fsubrs
ljmp
out
pop
jecxz
in
cs
pop
bound
add
sbb
push
jecxz
ljmp
mov
sub
push
fdivl
int3
jg
int
sahf
fimuls
jns
rolb
ljmp
daa
fucomi
mov
pushf
int
or
mov
sub
popf
lret
pushw
and
sbb
pop
out
in
shl
and
sbb
add
cmpsb
push
push
mov
mov
icebp
notb
jp
or
inc
xor
xchg
fisubl
test
xchg
cs
sub
add
jnp
push
popf
jecxz
xor
or
mov
add
insb
lret
popa
loope
push
xor
jg
jp
push
repz
and
mov
out
pop
dec
xchg
mov
inc
movsb
es
sbb
pop
jge
adc
fstl
or
enter
stos
inc
add
jb
pop
and
out
adc
decb
jge
jns
imul
jmp
test
xchg
gs
mov
and
mov
dec
addr16
push
ljmp
loopne
test
je
lret
test
jno
sub
pusha
leave
loop
sub
push
xchg
call
leave
bound
or
dec
fsubrs
repz
or
std
mov
mov
sub
shlb
mov
je
hlt
push
mov
xchg
cmpsl
sbb
mov
lret
stos
inc
or
setge
cmc
adc
mov
push
orb
jns
push
cmc
mov
cmpsb
jg
push
lret
imul
inc
mov
dec
push
pop
dec
adc
pushf
testl
leave
cli
xor
adc
pushf
or
ret
and
les
mov
push
mov
push
adc
aas
out
inc
sub
sub
inc
out
stc
daa
adc
into
adc
xor
out
xor
in
push
pusha
jmp
or
adc
xorl
lret
cmpsl
mov
xchg
mov
dec
jmp
lahf
sub
lcall
inc
push
xor
jb
lahf
adcb
xlat
and
or
mov
mov
sub
cs
add
hlt
pusha
cmp
mov
popf
xlat
sbb
xor
loope
push
inc
pop
cmp
inc
mov
jle
xchg
lds
into
sahf
popa
mov
add
test
mov
aam
mov
add
lock
outsl
scas
mov
sahf
pop
mov
inc
xor
and
jp
sbbb
pushf
fisttpll
mov
fidivs
iret
lcall
ret
pop
sub
ss
stos
mov
mov
jne
addr16
pop
or
repnz
pusha
cmp
sbb
add
xchg
jge
pushf
les
out
lods
ret
test
and
clc
mov
pop
sub
pushf
mov
std
xor
and
mov
mov
ret
mov
shl
lret
hlt
lods
aam
loope
mov
and
mov
rcrb
push
inc
mov
inc
cmp
push
rcrb
shlb
xchg
jo
cld
adcl
cmp
xorb
movsb
jecxz
outsb
mov
jno
mov
repnz
cmp
push
stos
sbb
push
lock
jg
movsl
dec
fnsave
repz
in
lahf
insl
insb
rclw
pop
xchg
cmc
jle
shrb
dec
les
nop
adc
dec
insb
lods
push
rolb
or
test
mov
pushf
scas
arpl
scas
sarb
lods
out
rcrb
iret
addr16
push
mov
movsb
pop
pop
movsb
insb
cmp
jmp
sahf
mov
cmp
icebp
mov
mov
jp
mov
xchg
fdivl
mov
mov
lock
jge
mov
or
idiv
xorb
mov
sbb
cmp
mov
inc
sub
xor
sub
cmp
je
pop
jnp
dec
pusha
xchg
jne
mov
clc
jnp
dec
sub
cwtl
fiaddl
adc
mov
shll
mov
mov
sbb
pop
es
daa
adc
cmp
lret
out
ja
repnz
sbb
test
les
popf
lock
lods
xor
mov
mov
lahf
sbb
mov
cld
sti
mov
ljmp
test
push
mov
es
cmpsl
and
or
jle
outsb
dec
rcl
fnstsw
push
add
push
or
jmp
jb
xor
inc
jmp
jmp
fucomp
or
jl
jne
ret
inc
test
ficoml
test
sub
inc
or
cmpsb
ds
push
add
sarl
add
xor
lds
insl
scas
inc
movsb
cmp
dec
push
out
add
in
cmp
lock
sub
sahf
aad
cwtl
insb
inc
ret
add
je
pop
faddl
lcall
mov
mov
adc
ja
cmpsb
lock
push
xchg
dec
lock
jg
mov
sahf
aam
cmp
mov
push
jns
fs
dec
cmc
mov
mov
push
call
test
add
out
lock
cmc
cmpsb
pop
cvtpi2ps
dec
push
or
xor
add
xorb
enter
jae
iret
inc
adc
out
xor
and
cmpsl
rorb
rcll
ds
push
jmp
mov
sbb
test
mov
js
ljmp
adcb
js
ss
mov
push
lret
xchg
jl
pop
push
or
mov
inc
adc
or
mov
lock
add
jbe
stos
pop
sti
inc
push
aas
jnp
sub
test
jae
cs
mov
pop
jns
mov
int3
popf
lret
enter
nop
jo
adc
pop
stc
pop
dec
jp
adc
jo
adc
bound
ret
cmpsl
out
test
rcrb
fldcw
jecxz
push
mov
push
mov
mov
shrb
push
jae
sub
shrl
pop
xchg
inc
inc
cs
adc
mov
jo
fmull
adc
fsubl
scas
dec
cmpsb
ljmp
mov
cmpsb
or
imul
aas
addr16
nop
repnz
sbb
xor
sub
jno
adc
mov
in
jge
aaa
push
movsl
call
test
inc
jb
sub
inc
fisubs
das
lret
mov
cwtl
lea
shll
jne
outsl
mov
stc
fidivrs
std
leave
xor
or
jne
and
inc
jmp
jg
lret
divb
cld
add
add
popf
les
fldl
cmp
mov
aas
ss
or
xchg
addr16
mov
pop
nop
test
shl
mov
mov
in
adc
fbstp
mulb
loope
in
repz
in
sub
fwait
hlt
xor
inc
lret
movl
or
mov
adc
xchg
addb
and
test
or
out
into
mov
rcl
mov
push
mov
stc
and
call
sahf
and
inc
sbb
leave
les
daa
xchg
dec
and
out
bound
adc
add
or
std
jecxz
pop
loop
iret
stos
or
jb
push
je
sbb
push
push
int3
dec
dec
scas
sti
inc
popf
fidivrl
rcl
fcoms
sbb
cld
mov
dec
inc
insb
int
mov
push
cmpsl
subl
shll
test
push
fimull
lret
test
dec
test
lea
jnp
pop
dec
inc
fcoms
cmpsl
jno
ret
int3
and
jnp
jg
sbb
cld
mov
lods
or
dec
pushf
in
call
push
fs
adc
jnp
or
stc
enter
les
sbbl
dec
cmp
adcl
cmp
inc
aam
repz
fcomps
out
stos
mov
test
mov
cmp
ljmp
cmp
call
out
push
data16
push
jb
mov
ja
mov
push
cmp
imul
jp
mov
pop
pop
mov
pop
jb
aaa
shl
and
xor
cmc
shll
cltd
and
xchg
nop
sbb
jae
cld
mov
lea
pop
not
mov
push
and
pusha
xchg
in
stos
std
out
add
mov
xor
and
movsl
repnz
cmp
iret
adc
adc
bound
bound
arpl
sub
lods
daa
imul
js
adc
insl
pop
mov
enter
push
lret
adc
mov
or
js
adc
iret
imul
cmp
xchg
test
or
cmp
imul
js
fimull
div
fdiv
cmpl
xchg
in
leave
outsl
inc
sbb
cli
data16
and
mov
data16
in
js
test
mov
test
stc
stos
adc
fisttps
and
xor
xor
push
jo
mov
enter
mov
cwtl
aaa
aam
sbb
imul
pop
and
sarl
mov
adc
fmuls
xor
jp
lret
je
xchg
sbb
push
ds
enter
inc
in
std
pop
adc
loope
dec
testb
movsl
fmull
adc
xchg
scas
divb
lret
ret
mov
xchg
arpl
out
jmp
ljmp
push
pusha
fiadds
cmp
sub
rcl
push
shl
jg
and
mov
sub
sub
mov
sbb
std
add
cmpsb
mov
std
cli
push
xlat
and
mov
xlat
and
daa
and
mov
test
or
stos
dec
out
pop
xchg
xlat
xchg
inc
addr16
push
ja
les
leave
hlt
je
stc
inc
sbb
sub
dec
jae
push
es
mov
jg
fbld
arpl
push
cmp
dec
nop
inc
inc
icebp
mov
mov
jg
push
dec
pop
subl
mov
arpl
adc
dec
mov
cmp
insl
lcall
sub
lahf
test
xor
movsl
sub
in
jo
dec
mov
inc
out
test
stos
xchg
cs
mov
int
lahf
addb
cmp
mov
push
jecxz
faddl
push
inc
iret
ss
ficompl
mov
hlt
push
aas
cmp
mov
and
gs
movsl
inc
loop
inc
mov
mov
test
cli
stos
addr16
jg
mov
jae
push
or
pop
std
mov
inc
test
outsl
lds
imul
cld
sub
adc
faddl
mov
scas
mov
ja
insb
or
mov
out
enter
in
jg
cmc
out
dec
outsb
pop
push
stc
sbb
sbb
sbb
mov
dec
dec
test
jmp
loop
inc
shlb
movsl
adc
xchg
ret
pop
cmc
cmp
lds
dec
xchg
mov
xchg
and
xor
inc
cld
inc
cmp
test
mov
test
xlat
add
ljmp
shr
pop
aad
mov
insl
xchg
push
sbbl
xchg
sub
js
xchg
jmp
xchg
mov
sub
pop
adc
rorl
notl
push
jge
jp
dec
sub
dec
jns
imul
js
addr16
addl
pop
sbb
push
mov
nop
pusha
aas
outsb
stos
in
mov
js
inc
shrb
int3
pop
out
or
call
out
aaa
mov
sbb
or
mov
int3
shll
and
addr16
pop
xor
mov
aad
rolb
test
push
adc
into
std
mov
push
fisubs
xor
add
cmp
cmp
lcall
cwtl
decb
lds
and
ds
shrb
loope
in
pop
push
xor
adc
shll
sbb
daa
add
insb
pop
cmp
loop
lret
mov
pusha
movb
dec
push
cmp
mov
insb
repz
mov
mov
pop
std
dec
lods
frstor
cld
lods
jle
xor
mov
outsl
loop
enter
ja
cmp
mov
pushl
leave
xchg
adc
push
sarl
fcomip
rolb
scas
mov
mov
test
xor
pop
in
roll
outsb
cs
pop
daa
mov
cmpsl
dec
fidivrl
and
push
ror
les
sbb
out
pop
inc
adc
and
push
nop
mov
fadds
jle
lock
push
sbb
xchg
dec
fcmove
mov
test
clc
fimull
mov
mov
jp
scas
mov
addl
dec
mov
cltd
jge
xchg
les
mov
scas
inc
mov
add
cli
mov
push
mov
cli
iret
int
lret
andb
inc
or
mov
mov
iret
mov
aas
xor
addr16
push
mov
jo
push
cmpsb
push
es
fadds
fnstenv
shll
mov
jge
les
int3
lea
fdivs
repnz
iret
add
xor
mov
loop
ret
clc
insl
mov
repz
imul
push
leave
or
push
cli
outsb
pusha
sbb
lock
xchg
or
adc
add
push
cmpsl
mov
jg
clc
jecxz
jle
or
push
data16
mov
sbb
xor
outsl
inc
jg
out
cmp
das
ds
das
pop
mov
xchg
mov
mov
and
lea
adc
gs
jge
gs
jp
ljmp
jle
xlat
sub
insb
testb
adc
sbb
fs
stos
hlt
fdivrs
sub
dec
sub
push
loopne
mov
roll
ret
sub
out
mov
imul
cmp
xchg
sub
pop
mov
xchg
inc
fadds
imulb
test
test
cmp
shl
inc
jno
jno
push
xor
ljmp
push
mull
test
nop
icebp
add
fistpl
inc
fimull
dec
sti
fistpll
test
adc
pop
inc
xchg
mov
adc
jp
std
fmull
jb
repz
popa
jle
into
es
xchg
jmp
les
fprem1
out
lahf
fsts
inc
xor
enter
rcrl
xor
js
cltd
mov
int3
jmp
cmpsl
sahf
or
sub
inc
mov
adc
and
cmc
sub
test
lock
test
mov
sub
mov
inc
xchg
lahf
sub
movsl
enter
cmpsb
push
aad
or
repz
outsb
aad
cmp
in
lods
cmpsl
xor
pop
stos
sti
popl
mov
fsubl
xor
sbb
pushf
sub
fisttps
pop
add
js
or
pop
pop
mov
adc
xchg
subl
pop
mov
stos
or
outsb
scas
pop
jns
fsubr
popf
je
mov
addr16
jnp
pop
loopne
ja
aas
leave
sub
test
or
cmpsl
push
mov
sbb
addr16
das
test
pop
testl
leave
test
mov
dec
or
xlat
cltd
or
push
cmp
lock
jle
loope
scas
in
std
xorl
rcr
ljmp
mov
xchg
dec
popa
adc
or
aas
jge
nop
mov
push
outsb
xchg
aaa
xchg
cmp
sbb
add
lcall
sub
int3
ja
cli
idiv
sub
jge
sbb
aad
add
jnp
shll
loope
inc
or
push
lods
and
sbb
adc
lea
dec
push
in
cmp
jp
dec
imul
mov
dec
mov
enter
or
inc
jbe
fsubr
mov
cmpsl
mov
dec
dec
jp
aam
enter
push
mov
divl
mov
aaa
shl
adc
xchg
adc
push
sbb
shl
dec
inc
pop
jge
push
imul
mov
stos
leave
fisubl
jge
imul
push
mov
jecxz
ljmp
cmp
pop
nop
push
sub
gs
push
push
jecxz
ja
insb
ret
mulb
jle
cltd
dec
scas
push
jbe
mov
xchg
adc
mov
jne
adc
loope
std
test
push
es
pop
push
fists
rcll
mov
push
sbb
lods
mov
dec
bswap
inc
pop
mov
sbb
pop
xchg
test
loope
push
cmp
sub
dec
dec
jae
inc
daa
icebp
mov
xlat
jecxz
inc
xchg
fcmovnb
aaa
dec
mov
cwtl
cmp
sbb
mov
push
mov
lret
inc
xor
shll
or
out
sbb
adc
ljmp
push
sbb
cltd
pop
mov
jbe
bound
pop
mov
into
or
cmp
or
mov
mov
in
hlt
cmp
jmp
fwait
cmovnp
test
jle
xchg
mov
ljmp
rolb
nop
les
js
jl
out
scas
mov
push
push
pop
lret
lcall
pop
scas
cmp
xchg
pop
in
sbb
xor
fidivl
test
cli
jl
cld
scas
vpsadbw
cltd
loopne
lds
shlb
mov
scas
add
into
adc
jg
fwait
lea
pop
icebp
test
sbb
jmp
out
or
data16
lods
inc
adc
aas
adc
arpl
js
push
fsubrs
jl
xor
dec
add
out
insl
and
jl
push
add
out
test
add
mov
mov
add
je
pusha
dec
sbb
sbb
call
mov
jmp
inc
cmp
fst
sbb
jp
pusha
mov
imul
clc
dec
repnz
js
mov
adc
js
sub
pop
xlat
jmp
xor
add
inc
xchg
mov
jno
movsb
push
push
mov
les
dec
pop
lock
xor
dec
fcmove
scas
lea
ljmp
adc
dec
iret
scas
jnp
xlat
sbb
cltd
jnp
loope
cmp
test
xorb
push
in
lret
jle
pushf
fchs
xorb
repnz
mov
xor
fsubrs
insl
mov
mov
mov
pop
in
int3
push
mov
inc
lds
and
or
sub
fwait
cwtl
and
dec
stos
imul
sbb
pop
mov
xchg
push
push
jb
repnz
add
aaa
pusha
inc
mov
mov
push
ret
push
and
icebp
lods
or
cmp
mov
lock
std
dec
sbb
dec
pop
jno
aad
xlat
xchg
in
repz
stc
test
call
test
ljmp
jbe
xchg
dec
stc
das
inc
call
jl
xor
pushf
inc
lods
xchg
mov
pop
push
inc
scas
shl
pop
imul
xchg
fldcw
fistps
subb
sub
sbb
adc
ljmp
or
gs
pop
xchg
adc
lock
out
stc
mulb
test
push
jne
sub
sbb
insl
das
or
add
sbb
das
or
les
dec
xchg
inc
mov
roll
xchg
js
rcl
out
jne
call
and
sahf
sbb
fidivs
jo
repnz
jae
cmp
in
fwait
jl
xor
and
add
jmp
adc
aad
sub
popf
mov
mov
leave
cmpsl
insb
fwait
xchg
cltd
into
inc
ja
les
mov
clc
enter
insl
movsl
notl
jno
das
jo
cwtl
dec
test
cmp
shrl
shl
call
aad
scas
lods
jp
mov
push
add
xlat
or
xchg
jl
out
mov
inc
jl
fsubl
lock
fadd
mov
nop
lret
shrl
mov
gs
dec
insb
loop
jg
loop
mov
test
sub
ss
add
xlat
xor
mov
out
pop
mov
outsb
mov
push
xchg
pusha
cmp
mov
out
push
push
jmp
rol
cmp
dec
xlat
orb
mov
xchg
or
shlb
bound
and
jg
rcrl
push
imul
mov
xchg
pusha
xchg
pop
outsb
jb
ljmp
dec
test
mov
xchg
rorb
in
and
mov
cmpsb
push
cmp
ljmp
scas
jecxz
and
mov
out
fsubrs
sub
sub
mov
idivl
in
int3
notb
cmp
pop
cmp
or
cli
aas
insl
adc
cmp
cmc
push
ss
jno
mov
insl
push
into
push
ficompl
cmpsl
lods
in
push
mov
sbb
jb
add
sbb
inc
lahf
les
push
push
gs
clc
ror
push
pop
out
lret
fs
stos
adc
dec
add
sbb
fisubl
leave
enter
mov
fisttpl
and
sbb
xor
mov
pusha
mov
xchg
mov
push
ljmp
nop
fsubl
and
dec
dec
pusha
mov
pop
push
inc
ja
sbb
lods
pop
jmp
test
xchg
loop
bound
pushf
jne
cmp
mov
mov
cli
bound
xlat
ljmp
dec
pop
pop
add
lret
push
push
dec
jl
sub
outsb
nop
lods
mov
xor
arpl
leave
sbb
xchg
mov
iret
add
ja
pop
ja
cmp
mov
addr16
jns
inc
fcmovb
cltd
mov
shlb
fcoms
filds
push
cltd
mov
bound
jne
inc
push
mov
call
sub
sbb
fnstcw
lcall
shlb
loope
pop
out
mov
push
repnz
stc
xor
inc
push
jle
adc
jg
sahf
mov
lea
add
inc
dec
scas
movsl
cmp
dec
push
xor
inc
xchg
mov
push
hlt
pop
jno
cmp
xor
cmp
lea
pop
xchg
lahf
xor
add
icebp
imul
cmpl
pop
fstp
sub
lret
test
jmp
cmp
mov
cmp
and
stos
sub
dec
sub
repnz
lds
and
jo
jle
rorb
cs
aas
cltd
fmuls
jle
pushf
xchg
xchg
subl
scas
cmp
xchg
sbb
jne
clc
inc
rolb
movl
sbb
sbb
nop
sti
jg
pop
movsl
sub
scas
push
scas
fisubs
mov
sub
jmp
mov
fwait
pop
mov
mov
cmp
mov
push
or
dec
pop
in
cmp
push
xchg
xchg
xor
xchg
into
adc
lret
inc
sbb
int3
xchg
add
adc
sub
pop
mov
mov
xchg
jp
mov
fistl
sahf
xchg
jmp
sub
ljmp
gs
insb
push
add
movsb
cwtl
cmpsb
in
mov
inc
mov
jo
mov
push
xchg
ds
lahf
sbbl
mov
adc
scas
xor
pushl
ficoml
aas
retw
imulb
jg
rcl
ret
test
push
adc
loope
fs
xchg
sti
pop
cwtl
ja
dec
ficomps
andb
leave
inc
and
xor
lret
xchg
jle
mov
dec
and
xchg
lret
mov
push
xchg
xor
out
pop
out
push
or
in
imul
pop
movsl
outsl
daa
mov
pop
xor
iret
or
lods
xor
or
decl
lret
ror
xchg
repnz
popf
pushf
or
mov
add
adc
rolb
es
jo
mov
cmp
rcrb
and
imul
inc
out
dec
jmp
sbb
data16
xchg
mov
sbb
mov
hlt
mov
imul
pushw
push
mov
mov
movsl
data16
and
fwait
rcl
ret
xchg
add
je
or
fdivrs
jle
and
jl
mov
repnz
pop
and
dec
dec
int
or
xor
bound
movsb
insb
xchg
lret
xchg
push
neg
addr16
pop
or
sub
sti
lret
dec
hlt
int3
outsb
and
aam
testl
cmp
mov
ret
lods
xchg
push
dec
lret
aas
sti
and
cltd
test
pop
xor
or
or
cmc
or
xchg
xchg
dec
rorl
inc
sub
inc
add
dec
stos
add
jo
fistl
stos
inc
dec
sub
xchg
fadds
in
mov
add
lcall
mov
xor
call
pop
call
fsincos
loope
outsb
pop
dec
sarb
mov
insb
fmul
mov
in
stos
xchg
fdivrs
adc
mov
xchg
sub
xchg
mov
stos
cmp
or
inc
sbb
shll
jno
pop
cli
in
inc
mov
lahf
test
jp
sub
jne
lea
pusha
inc
mov
out
add
adc
xchg
push
sti
idiv
sub
pop
out
mov
ret
sub
icebp
mov
adc
test
adc
aas
adc
and
dec
cltd
inc
arpl
lret
scas
xchg
call
mov
xchg
lock
stos
jno
mov
scas
test
push
xchg
mov
jb
add
int
stc
testl
cwtl
jecxz
arpl
insb
js
mov
sub
push
mov
fisttpl
cmc
push
or
adc
sub
stos
or
in
adc
test
mov
out
mov
dec
fistps
mov
cmpb
pop
sti
adc
nop
ficompl
inc
mov
jae
loope
pop
xchg
ljmp
stos
push
inc
adc
push
or
adc
push
arpl
push
test
imul
out
mov
daa
test
lret
lods
mov
adc
lea
cld
jle
jl
sub
push
and
gs
outsb
not
add
ss
cwtl
fwait
test
jp
adc
pusha
jl
mov
bound
sbb
mov
pushl
arpl
in
sub
xor
push
jnp
jp
mov
aam
cmp
xor
sbb
outsl
fnstcw
lret
mov
sarb
cmp
adc
jecxz
lock
or
orl
jmp
mov
call
in
aas
into
cmp
cmpsb
fdivl
inc
inc
xchg
arpl
or
inc
inc
aam
ret
pop
inc
push
aas
ror
jno
pop
push
loopne
fcom
inc
cmp
push
cltd
lcall
in
arpl
xor
test
jb
mov
inc
mov
shll
push
jmp
mov
dec
adc
jecxz
movsb
rorl
mov
jp
cmp
clc
adc
xchg
pop
das
icebp
cs
loopne
cmp
mov
imul
xchg
ds
fcoms
sub
or
ss
pop
sub
imul
sbb
out
sarl
cli
xchg
jmp
insb
out
in
aaa
xor
out
lahf
jge
jno
sub
sub
adc
adc
add
add
nop
icebp
sahf
sub
mov
jno
mov
mov
pop
xchg
or
xchg
mov
sub
adc
aad
mov
cs
loope
xorl
in
lcall
xchg
dec
movsl
pop
sbb
sahf
ss
rcl
test
jns
stc
push
std
push
fdivl
sub
dec
pop
outsb
ljmp
bound
mov
inc
scas
xchg
mov
pushf
push
mov
mov
pop
sbb
pop
push
mov
sahf
and
inc
inc
pop
jle
inc
and
int3
fnsave
push
jecxz
test
fiadds
imul
sbb
je
mov
aas
imul
jbe
mov
sub
push
jp
jecxz
cli
mov
push
add
test
std
cmovs
ss
repz
push
cmp
in
sbb
mov
test
and
xchg
ret
adc
adc
xchg
sbb
mov
inc
cmp
xor
add
jl
jnp
inc
jbe
jo
pushf
adc
ljmp
mov
popa
jmp
mov
icebp
mov
sbb
xchg
cmpsb
icebp
int
push
xchg
lret
add
pusha
jnp
mov
cmp
fwait
sbb
fwait
dec
add
loop
xchg
sbb
sbb
xor
adc
and
lds
addl
or
pushf
jg
shll
add
or
in
pmaddwd
lods
test
xchg
shlb
imul
jecxz
aam
xchg
mov
xchg
lahf
jl
loope
sub
push
les
mov
test
sub
or
out
in
aad
cmc
repnz
fsubs
mov
xor
jno
in
add
jno
push
cmp
nop
mov
repz
inc
mov
lahf
mov
shll
xchg
sbb
jb
dec
jecxz
dec
cmpsl
mov
gs
mov
hlt
fwait
mov
jno
dec
ljmp
push
mov
cmp
outsb
divl
pop
jle
inc
call
mov
cmp
pop
sub
xchg
psraw
gs
mov
fbstp
aad
pop
lcall
ret
decb
sub
out
test
push
mov
in
sbb
dec
sub
cmpl
loopne
scas
sahf
in
xor
xor
xchg
mov
push
sub
xlat
repz
popa
xor
arpl
out
sub
cmpl
mov
jne
pop
lods
mov
push
adc
jp
sub
and
push
stc
mov
scas
inc
mov
cmp
aad
sub
add
cld
add
fstps
outsl
mov
dec
mov
cmp
mov
xor
cmp
dec
xor
mov
outsl
pop
imul
xchg
pop
pushf
aas
sub
mov
sbb
dec
pop
push
cmpb
ljmp
lret
dec
dec
mov
push
push
xor
mov
pushf
mov
or
repz
dec
jno
or
or
sub
jns
pop
hlt
jo
xlat
out
loope
clc
fistpll
scas
jmp
cli
arpl
iret
scas
mov
adc
fadd
inc
lds
mov
mov
pop
cld
insb
add
mov
pop
cld
push
mov
movsb
ss
add
std
pop
add
jmp
jp
rcrl
or
adc
lret
sub
mov
in
clc
cltd
sbb
js
mov
xchg
sub
xor
add
push
mov
cmc
mov
jo
repnz
lock
fnstenv
aas
cmp
add
out
xor
adc
hlt
sar
mov
sub
fistpll
aaa
test
es
inc
in
imul
xchg
testl
in
in
inc
hlt
xor
jno
pop
inc
mov
jno
sbb
sub
call
and
jns
mov
inc
and
lahf
sub
enter
mov
or
icebp
test
push
lahf
test
jle
call
repnz
adc
jb
ror
or
cmpl
sbbb
enter
dec
pop
outsl
mov
ret
repnz
inc
adc
sahf
push
cmpsb
inc
lods
int
and
fwait
push
mov
or
aam
sub
push
aas
nop
xchg
or
out
es
and
mov
inc
sub
mov
ret
pop
jp
sbb
mov
ja
push
fs
xor
mov
enter
jg
incb
cmp
dec
movsb
mov
test
cmp
lds
lods
imul
out
in
lcall
mov
pop
ljmp
xor
mov
les
leave
cmc
dec
lret
mov
repnz
sbb
je
mov
fisubl
adc
gs
push
into
adc
push
sbb
and
cmp
jmp
and
cmc
outsb
lods
int3
inc
daa
popf
mov
cmpsl
xchg
adc
cmpsl
loopne
scas
mov
in
push
jne
mov
dec
sbb
or
or
or
cbtw
push
xor
mov
pop
mov
xor
push
pop
in
xorb
xchg
loopne
scas
push
jmp
pop
fimuls
cltd
out
inc
aam
data16
or
sbb
outsl
and
mov
andl
pushf
xchg
addr16
mov
iret
lahf
test
lcall
jl
jo
repnz
lods
mov
cltd
cmp
mov
std
xchg
scas
jae
js
push
das
sub
pop
fwait
cs
ds
fs
mov
mull
jge
push
push
adc
arpl
fists
lret
shrl
xchg
add
notb
push
push
mov
leave
insl
mov
push
xchg
dec
mov
rorb
inc
cmpsb
xchg
sub
or
popa
push
dec
jl
push
cmp
inc
dec
iret
dec
fmul
sbbl
cmp
in
push
pop
cmpsl
repnz
mov
jb
lret
insb
lret
fnstenv
fs
mov
shrl
into
imul
sbb
or
pop
push
das
mov
and
ss
bound
pop
mov
outsl
dec
mov
and
ret
cltd
cs
movsb
sub
jl
scas
shll
xchg
push
ss
inc
ds
inc
js
pop
jge
xchg
clc
or
add
add
jbe
rcr
add
jle
pop
cmc
mov
push
sbb
das
push
movsl
cmpsl
negb
ja
movsb
mov
sbb
cmp
add
xchg
jecxz
jg
test
call
je
lock
popa
mov
shll
and
mov
adc
add
sbb
ja
mov
inc
push
pop
jae
mov
adc
jns
gs
xchg
mov
jae
xchg
mov
not
dec
bound
push
sti
pushf
mov
pop
stos
adc
xor
sahf
push
push
xor
jbe
jnp
jns
mov
jae
aaa
mov
inc
cmc
and
and
mov
mov
daa
mov
or
lahf
adc
ds
shrl
shl
jns
fstl
and
popf
jns
inc
pop
test
dec
pusha
inc
pop
je
lcall
sub
les
and
adc
adc
xor
roll
lret
pop
arpl
xchg
add
mov
arpl
ret
mov
popa
lock
stc
pop
dec
lret
aas
inc
and
or
testl
pop
sbb
fidivrs
loope
lock
loop
das
adc
inc
ret
std
movb
fsts
ret
jl
sarb
inc
add
cld
add
mov
rcr
loope
scas
mov
rcrl
incl
sub
in
out
lds
xor
lds
mov
out
sbb
add
es
jno
sbb
pop
sbb
xchg
cmp
mov
mov
pop
adc
fcmove
jmp
push
fs
mov
stc
cmovge
push
cmp
fisubrs
fists
scas
imull
addl
sub
cmp
jmp
sbb
aaa
es
outsl
pop
aam
xlat
movsb
shll
jmp
loop,pn
jmp
les
jae
pop
out
jl
sub
aas
inc
lea
mov
xchg
adc
loop
outsl
mov
bound
add
lret
pop
lret
rol
sbb
xchg
cli
lea
mov
jmp
mov
outsl
and
cmc
inc
dec
loope
pop
cmpsl
adcl
jns
shrb
xor
cld
mov
inc
and
xor
jp
adc
shlb
mov
xchg
imul
movsb
and
jno
xor
mov
pop
ja
mov
ret
xorl
add
inc
mov
push
sub
inc
xor
je
sbb
adc
pop
mov
nop
fistps
lcall
and
int
in
sahf
dec
sti
jge
jnp
div
or
push
ret
xor
ret
jbe
movl
std
int3
cmp
lock
cmp
push
xchg
in
das
lods
sub
xchg
jecxz
lret
leave
insb
add
popa
sbb
dec
mov
cmp
cmp
lea
pop
cmp
enter
pop
outsb
push
jg
out
sbb
inc
imulb
outsb
addr16
push
cmp
sub
stos
jecxz
jg
loopne
jb
popf
cli
fdivrs
mov
andb
nop
arpl
orl
xor
add
scas
es
cwtl
rcl
test
les
jmp
sbb
adc
inc
pop
adc
cltd
bound
idiv
add
lret
cmp
jle
xchg
cmpsb
fisubrs
xor
xor
push
sti
lea
std
add
jp
and
pop
dec
or
notl
shrl
xchg
push
test
mov
daa
sti
push
mov
inc
cmp
sub
scas
xchg
inc
dec
pop
xchg
aad
aas
push
adc
pop
push
aad
mov
jg
cmpsl
pop
cltd
jns
mov
lahf
inc
mov
push
dec
mov
faddl
dec
pop
dec
stos
pop
push
arpl
sub
fs
or
lahf
in
adc
jge
xchg
das
pop
scas
cmp
push
outsl
enter
lds
xchg
sti
hlt
lret
dec
repnz
int3
inc
lcall
int
outsb
or
xchg
jmp
gs
jb
lds
mov
pop
sub
push
je
mov
pop
negl
notb
lea
or
jg
std
and
xchg
insb
cli
jo
je
and
mov
bound
loopne
in
cmp
lds
xor
xchg
fimuls
ficoml
push
popa
jmp
push
adc
data16
ljmp
in
sti
jge
adc
push
mov
push
sub
cli
dec
push
adc
add
adc
scas
xchg
mov
or
pop
add
sbb
jae
and
into
punpckldq
add
inc
stos
es
cmp
mov
mov
or
insb
add
subb
sub
add
push
bound
sub
pop
insl
sbb
and
mov
mov
jl
int
pusha
lods
jecxz
adc
imul
pop
outsb
dec
js
pop
idivl
dec
testb
mov
xchg
test
repnz
mov
pop
sub
push
push
lods
js
jno
mov
sbb
xchg
aaa
or
xor
mov
or
fdivrs
sub
mov
xor
inc
push
es
aaa
test
in
ja
loopne
roll
add
xor
incb
movsb
adcl
bound
and
jmp
rcr
and
ret
cmpsb
in
jae
scas
push
mov
sbb
xorb
push
es
pop
cmp
loope
repz
fdivr
sbbb
adc
mov
push
test
aas
and
in
mul
lea
push
xchg
pop
pop
cltd
cmp
shrl
adc
push
mov
mov
and
mov
adc
xchg
imul
or
xchg
dec
fistps
pop
mov
dec
in
xor
pop
fdiv
lods
into
xchg
dec
inc
jl
inc
cmpsl
incl
scas
mov
arpl
adc
mov
cmp
je
cmovbe
rclb
cmc
xlat
sub
std
xchg
sarb
aas
or
jp
adc
xchg
adc
pop
sub
dec
aad
bswap
popf
enter
xor
mov
in
sub
adc
das
dec
negb
in
popa
xlat
cmpb
mov
bound
loopne
movsb
in
in
push
out
jae
inc
add
repz
dec
lcall
pop
aad
dec
push
stc
es
mov
mov
leave
mov
in
push
sub
fs
sbb
fsubrs
or
xlat
unpcklps
insb
mov
dec
lret
out
loopne
cmpsb
sub
lods
sbb
lcall
sahf
sub
pop
jg
or
mov
add
or
je,pt
xchg
mov
or
nop
lcall
into
fistps
jp
loopne
inc
cmp
mov
pusha
sar
mov
rcr
pop
inc
jmp
jae
mov
std
lret
sahf
mov
cld
cmp
and
mov
das
mov
add
jecxz
and
jg
push
popf
dec
pop
and
inc
scas
jno
adc
into
rcrl
xchg
push
jecxz
rcrl
adc
xlat
std
mov
out
hlt
int3
js
push
and
dec
cmp
rcll
stos
xor
push
sub
push
out
cwtl
fimuls
pop
pop
mov
out
push
imul
sbb
and
rorb
dec
jp
add
push
popf
das
movsl
xchg
push
push
inc
fdivrs
into
jmp
lcall
inc
mov
les
outsb
in
xchg
je
adc
xchg
sub
bnd
imul
leave
or
cmp
xchg
lret
lret
call
sbb
insb
ret
pop
mov
pop
lret
out
jg
stos
inc
push
aam
pop
push
mov
mov
jno
aas
and
dec
and
cmp
ljmp
sti
sar
pop
repz
fcompl
pop
jg
loop
or
scas
and
aam
mov
movsl
aas
fwait
aaa
and
inc
jne
inc
cli
daa
mov
sbb
or
test
fnstcw
xchg
out
fmull
or
insl
or
jl
mov
cmp
xchg
outsb
xchg
sarb
cmp
push
and
ret
dec
aaa
pop
mov
and
dec
mov
cld
insb
addb
repnz
jp
adc
cmc
int3
dec
mov
cmpsb
inc
add
or
lcall
negl
aad
push
mov
pop
jmp
xor
add
xlat
add
js
sub
inc
push
push
int3
cmp
cmp
cwtl
xchg
data16
and
out
jnp
lcall
das
push
insb
call
out
mov
fwait
sub
inc
ret
xchg
rorb
out
sub
ja
hlt
jg
iret
sahf
dec
clc
pop
dec
dec
rorl
pop
xchg
test
insl
in
mov
nop
stc
and
and
xchg
roll
lea
xchg
mov
mov
loopne
popf
sub
loope
pop
pop
hlt
sbb
in
adc
fst
jb
dec
add
movsl
or
jl
add
pop
insl
loop
ds
push
mov
add
in
and
mov
fcomps
dec
cmc
cli
dec
lods
mov
gs
jg
xchg
mov
jmp
sub
call
gs
aam
lds
loopew
xchg
sub
pop
cmpsl
sub
pop
jns
push
sbb
lret
sbb
clc
dec
sub
fmul
aam
loopne
mov
repz
jecxz
js
dec
sahf
jae
lret
outsb
cs
clc
dec
mov
push
stos
mov
xchg
jp
pop
mov
iret
sub
cwtl
sti
or
daa
out
mov
sbb
repz
cmp
cmp
adc
push
insb
xchg
clc
lea
ret
mov
push
nop
cmp
idivb
sbb
repnz
xchg
hlt
outsb
sarb
inc
mov
es
mov
add
fs
push
aas
push
add
out
dec
test
jecxz
mulb
adc
mov
insl
jae
mov
xacquire
dec
fwait
js
lret
popa
xlat
and
mov
in
pusha
sub
subl
and
popa
in
cmp
cmpl
pop
add
xlat
mov
or
mov
lds
inc
mov
clc
test
aaa
push
pop
iret
dec
jge
movsb
loope
adc
xchg
call
arpl
cmp
lahf
mov
pop
paddb
xlat
icebp
mov
add
ret
inc
xchg
idiv
out
push
in
or
rorb
sbb
les
jno
popf
addl
lods
hlt
push
pop
out
mov
or
jns
aam
add
inc
shlb
lods
in
mov
sub
fimuls
out
jecxz
adc
lcall
lret
sti
dec
shrl
sub
sahf
adc
movsl
jnp
push
jb
subl
int3
jle
or
sbb
loope
es
xlat
and
mov
insl
sbb
jp
sub
jb
insl
jl
push
ljmp
mov
ret
inc
ds
and
popl
mov
aam
mov
stc
mov
aas
dec
mov
xor
pop
nopl
push
push
mov
lds
faddp
mov
add
mov
mov
jl
adc
and
push
lods
push
int3
fwait
push
icebp
adc
sbb
or
mov
cmc
sub
loop
inc
sbb
pusha
dec
xor
stc
mov
insb
imul
movsl
cmc
in
cwtl
pop
mov
push
cmp
fisubs
mov
push
insb
movsb
cmpsl
sub
je
add
frstor
mov
dec
test
xchg
pop
pop
push
add
dec
cmpb
js
mov
fstps
leave
push
nop
clc
into
pushf
insl
test
sub
pop
out
mov
mov
dec
imull
jns
unpcklps
inc
adc
lret
cmp
aas
mov
sub
cmp
mov
stc
add
imul
and
adc
lret
inc
arpl
mov
loop
hlt
out
testl
pushf
out
jno
mov
inc
sbb
aaa
mov
adc
das
fs
push
or
je
sbb
xchg
sub
and
hlt
xchg
shlb
mov
daa
fndisi(8087
mov
inc
dec
dec
dec
inc
xchg
orb
in
int
push
bound
inc
call
jnp
dec
xor
orb
dec
fs
mov
adc
lcall
mov
adc
adcl
adc
outsl
push
or
stc
iret
imul
xlat
sub
xor
jae
enter
fildl
dec
jne
repz
movsb
mov
fisubrs
and
lcall
jns
shlb
add
jge
repz
push
add
ss
sbb
add
nop
mov
mov
adc
cmp
in
cmp
push
jns
inc
xor
mov
out
inc
sbb
pop
push
data16
sbb
inc
fdiv
pop
sub
sahf
fcoml
push
jl
pop
jns
or
inc
sahf
cmp
pusha
cld
fucomp
pop
add
cmc
add
cld
push
popf
rcrl
and
push
inc
xlat
dec
mov
leave
popf
fistl
or
filds
or
xchg
xor
je
push
jl
jle
and
faddp
lret
mov
jmp
iret
popa
or
pop
dec
sub
pop
out
mov
pop
fwait
inc
adc
fistpl
mov
adc
out
cmp
jne
sub
xlat
pop
insl
icebp
mov
pushl
stos
add
inc
aam
cltd
fs
xor
cld
pop
mov
jl
xchg
mov
adc
rcll
xlat
bound
das
stos
or
cs
sti
xchg
rcrl
outsb
stc
xchg
jne
sarl
sub
stos
push
lock
mov
sarb
lods
es
shr
add
fdivrl
mov
mov
popa
xchg
arpl
stos
into
adc
and
and
push
fwait
dec
stc
lahf
leave
hlt
dec
pop
leave
jae
inc
dec
xor
dec
fidivrs
sub
shll
sbb
mov
adc
pop
stos
sbb
lahf
jecxz
dec
fs
add
mov
mov
xchg
popa
jae
xor
stc
mov
bound
int3
jl
cmc
pop
inc
pop
addr16
outsb
push
dec
xchg
sub
pusha
roll
xor
out
fadds
adc
orb
aaa
aas
dec
loope
sbb
addl
sub
mov
data16
cmp
out
mov
dec
sub
jg
pop
sbb
push
gs
push
test
mov
in
pop
mov
int
test
aad
sti
cli
jns
ljmp
mov
divl
bound
pop
movsb
jne
or
cli
mov
fldt
fwait
pop
sbb
ljmp
jmp
push
mov
mov
stos
mov
mov
popf
or
or
inc
jmp
dec
xchg
inc
mov
ds
add
in
stc
or
pop
fnstenv
mov
mov
out
jecxz
divb
jno
mov
fisttpl
sbbb
imul
popf
pop
bound
mov
jbe
jl
aad
xor
pop
mov
icebp
xchg
jae
ljmp
xchg
mov
jne
jmp
iret
int3
pop
daa
outsb
outsl
inc
nop
adc
aam
lcall
fsubr
pop
insl
jecxz
inc
pop
icebp
fs
cld
cltd
data16
stc
fiadds
cmp
into
out
sbb
xchg
cli
mov
call
fs
lcall
xchg
cmp
dec
adc
mov
dec
pop
cltd
sti
into
int
push
loope
sub
mov
fdivs
and
adc
cmp
jp
shrb
cwtl
hlt
mov
sahf
in
aaa
adcb
out
push
loopne
cli
cmpsl
inc
das
fwait
mov
jae
cmp
in
ja
lods
jp
sub
adc
xchg
ljmp
cmp
lock
lret
lods
into
mov
dec
sahf
xchg
pop
sub
xchg
imul
mov
mov
shll
jno
ds
test
cwtl
sbb
pusha
pusha
jo
jmp
sub
pop
mov
fwait
out
add
shrb
out
add
add
push
sub
sub
mov
push
mov
stos
dec
pop
lret
in
insb
cwtl
ret
mov
pop
repz
jle
aas
mov
leave
mov
stos
sbb
pop
lret
cwtd
inc
enter
dec
notl
sbb
pop
inc
ficompl
jb
lods
mov
cwtl
in
icebp
fidivrs
pop
adc
test
xor
repnz
add
out
sbb
mov
cmp
lret
mov
mov
scas
jns
dec
cltd
lods
cld
ja
add
hlt
outsb
enter
mov
xchg
add
int3
push
and
fldl
and
ficomps
in
daa
subl
cltd
or
inc
mov
cmpsb
das
lret
addr16
and
sub
loopne
repnz
and
frstor
jg
fstps
inc
stos
out
push
dec
sub
or
pop
mov
int
scas
xchg
in
or
jecxz
lock
lcall
nop
sbb
test
jne
or
mov
jns
cs
ss
mov
sbbl
xchg
cwtl
sbb
lock
fst
clc
pop
cmp
data16
mov
bound
icebp
shlb
cmpsb
ficoml
or
ljmp
mov
fwait
cld
jb
ja
cmc
fnstcw
pop
xchg
mov
sub
pushf
js
sub
sub
inc
pushw
test
lods
repz
inc
call
adc
repz
test
nop
mov
mov
adc
divb
push
rcll
inc
cmpsb
fmuls
inc
loopne
or
mov
int3
loopne
mov
dec
sbb
and
lods
sbb
xchg
sbb
mov
sub
xor
mov
and
dec
xor
leave
outsl
stos
imul
gs
orb
rcll
or
int3
fdivrp
mov
push
push
out
data16
in
jl
pop
push
pop
mov
adcb
sbb
out
cltd
dec
jl
mov
push
ss
aas
sahf
inc
push
mov
outsl
add
iret
mov
sbb
daa
ficoms
pop
hlt
mov
push
in
pop
adc
fstpl
dec
inc
inc
adc
dec
mov
lds
cmc
in
pusha
mov
aaa
sbb
into
ret
ljmp
mov
jb
add
sbbb
lock
adc
icebp
mov
aaa
push
jns
insb
push
mov
or
ret
add
fs
pop
nop
push
mov
insl
lret
xchg
cmp
pop
push
push
mov
or
fmull
ds
call
test
cmp
mov
dec
mov
mov
sbb
sahf
jge
aad
sub
pop
mov
jne
loope
gs
divb
sarl
xchg
cli
sbb
imulb
mov
xchg
sti
mov
pop
add
dec
leave
hlt
jnp
sub
cmp
push
loop
xor
sarl
out
pop
push
pop
lahf
fs
addb
xchg
sub
mov
movsb
dec
inc
insb
lahf
pop
ret
jge
into
dec
adc
sbb
cmp
std
sub
test
les
sub
sbb
movsl
sub
pushf
cwtl
xchg
cmc
jb
mov
or
lea
je,pt
fldt
popf
clc
lret
push
unpcklps
push
sub
or
xchg
je
fcompl
xchg
xchg
js
std
loope
inc
pop
into
push
jbe
xchg
dec
jae
aas
stos
fidivl
xlat
pushf
test
cltd
sarl
ficomps
sub
inc
jbe
outsl
andl
out
adc
ret
cmp
pop
mov
push
and
loop
or
xchg
sbb
xor
adc
push
in
xchg
test
ds
cmpsl
bound
loop
xchg
and
and
cmp
push
cmp
or
xchg
adc
push
pop
fimull
call
sub
pusha
or
dec
inc
repnz
iret
lea
into
out
lret
add
sti
rclb
jno
jl
cmp
xchg
mov
pop
pop
fwait
les
mov
js
js
int
cmpsl
adc
jg
jge
xchg
xor
xchg
xor
cmp
jae
cmpsb
fwait
lods
adcl
orb
adc
dec
xor
push
shrb
std
lret
add
mov
cltd
and
cmpl
adc
ljmp
dec
or
add
shll
dec
push
loope
cmpsb
cmp
jmp
cmp
pop
xchg
xchg
and
pushf
ds
ja
js
jl
lret
mov
sub
xchg
jge
add
std
repnz
cli
jns
call
into
jl
lea
insl
nop
xor
mov
cwtl
add
out
ds
push
je
jmp
rcr
mov
test
stos
les
rorl
inc
in
xchg
into
imul
inc
push
adc
fisubs
sub
jge
out
cwtl
jae
int3
pop
test
dec
jo
add
jb
mov
mov
mov
arpl
cwtl
out
test
je
inc
pop
dec
add
and
jae
sahf
add
fldenv
dec
je
repnz
mov
jmp
int
xchg
test
push
cmp
les
inc
pop
and
cmp
lahf
pop
mov
cmpl
ret
ret
dec
and
scas
int
jnp
sti
jne
sub
dec
in
push
fisttpll
jnp
pop
iret
jecxz
pop
sub
je
push
lds
mov
fisttpll
int3
add
ljmp
pushf
mov
out
mov
or
fwait
add
jae
scas
in
das
bound
out
push
movsl
jae
inc
ss
mov
addr16
mov
add
aad
mov
loopne
rclb
or
xlat
aaa
xchg
ret
int
add
jnp
arpl
cmp
sbb
pushf
out
cmp
jo
jnp
adc
test
push
test
pop
xchg
push
push
xchg
leave
jbe
jno
and
pop
sub
jbe
mov
lock
sbb
rcrl
aad
ds
and
imul
add
xor
bound
xor
mov
inc
loop
push
in
dec
sbb
push
je
mov
push
push
jmp
and
loope
adc
xchg
jb
mov
mov
lret
sarl
jl
push
fisubrs
mov
jnp
rcll
cmp
aaa
adc
or
mov
jno
pop
mov
test
sti
gs
jl
dec
outsb
add
mov
push
xor
cli
dec
jmp
lcall
test
stos
clc
xchg
jnp
adc
sbb
and
insb
cs
popf
push
dec
ja
mov
jmp
or
adc
clc
sti
insb
lock
in
scas
dec
adc
add
inc
imul
jne
dec
and
jbe
in
outsb
mov
or
jns
mov
or
xor
fnstcw
inc
out
mov
dec
or
clc
mov
jo
and
jp
testl
ljmp
add
cmp
xchg
mov
or
in
es
xchg
and
test
jnp
loope
push
test
mov
hlt
in
mov
pop
pop
mov
and
sub
arpl
mov
arpl
ss
pop
sub
popf
inc
inc
test
ret
mov
xchg
hlt
and
test
andb
sub
call
jg
js
push
push
lret
cwtl
icebp
xor
shll
pop
push
insl
dec
mov
nop
jno
pop
xchg
ret
aad
jnp
cwtl
dec
add
xchg
loop
loop
xchg
cmp
cmp
mov
int3
adc
xchg
pop
mov
mov
stos
test
std
cltd
idiv
sub
subl
mov
mov
stc
cwtl
jmp
sbb
push
pop
orb
add
xchg
push
lahf
sub
sub
gs
pop
popa
lret
and
sub
push
iret
js
pusha
xlat
xchg
lahf
lea
mov
xchg
cmp
ljmp
repnz
add
sti
mov
clc
push
push
fwait
in
mov
imul
push
push
js
jnp
sub
out
push
xlat
xchg
negb
ja
stos
xchg
dec
adc
insb
pop
or
cmc
shl
cmp
rcrl
imul
fwait
push
lock
ficoml
xchg
or
into
std
pop
and
ret
hlt
inc
test
mov
out
jl
stos
add
mov
push
repz
mov
std
push
mov
setno
bound
lods
adc
push
cmp
fistl
mov
push
push
push
push
cmc
cld
pop
push
roll
cmpsb
ljmp
xchg
pusha
jl
adc
repz
mov
xchg
mov
dec
adc
orb
daa
sbbl
mov
pop
ljmp
jae
icebp
call
sahf
cmpsl
cmp
stc
mov
jo
icebp
cld
stos
fcoms
dec
aas
fimuls
cmp
cmp
cld
and
mov
sbb
push
xchg
aaa
xor
scas
subl
push
mov
sbb
arpl
iret
xchg
es
cmp
sub
mov
lcall
mov
adc
jecxz
xchg
sbb
push
or
hlt
sub
pop
mov
sarl
aam
aas
in
mov
sub
mov
jl
mov
mov
cld
mov
jbe
push
inc
call
jne
imul
popf
imul
xor
jle
out
or
fwait
adc
xlat
and
or
or
ds
bound
mov
lods
scas
mov
inc
jo
enter
call
scas
inc
sub
outsb
cmp
adc
cli
mov
sub
bound
out
cmpsl
jo
xchg
adc
fcom
adc
sub
subb
jbe
out
sub
mov
mov
loop
dec
mov
push
lea
pop
xchg
adc
pop
mov
sbb
push
or
stos
jle
adc
mov
xchg
and
cmp
mov
pop
aas
mov
jns
out
ja
sahf
mov
daa
jle
adc
sti
mov
mov
movsb
dec
cld
js
stos
sub
mov
cmp
mov
lahf
or
cli
jmp
inc
xchg
sub
push
fs
inc
aad
pusha
cmpsb
lea
mov
gs
inc
test
or
and
in
leave
inc
mov
mov
mov
cld
outsl
fwait
das
incl
mov
dec
mov
lret
mulb
in
inc
mov
adc
jmp
daa
scas
inc
sbb
xchg
lea
fildl
pop
and
cmp
xchg
mov
sub
pop
mov
dec
lcall
push
mov
daa
dec
pusha
repz
loop
addr16
pop
xchg
lock
or
lods
and
stos
mov
xor
out
je
insb
lret
lods
inc
sbb
clc
xchg
jp
scas
sti
cmp
xlat
dec
xchg
or
mov
ss
enter
in
mov
dec
jbe
testl
aas
cmp
jns
mov
call
pushf
xor
mov
aad
xchg
sub
and
inc
sbb
sub
lret
int
xchg
sub
jo
push
mov
cmc
lds
push
cmp
shl
and
in
or
fs
fcmovbe
stos
enter
shll
test
dec
icebp
fsub
iret
in
sub
daa
adc
dec
imul
xchg
fldl
pop
mov
inc
xor
sub
dec
bound
sti
pop
inc
xchg
jl
lea
push
sub
loop
pop
lods
repz
mov
sub
pusha
or
scas
jg
add
xor
inc
outsb
imul
pop
aam
imul
repz
scas
mov
add
cwtl
pop
cwtl
out
jne
push
dec
movsl
mov
xchg
div
imul
faddl
pop
mov
sub
scas
pop
iret
and
inc
shl
sub
xor
jns
jo,pt
out
mov
inc
add
pop
adc
mov
jg
jno
fs
adc
jmp
dec
in
add
test
in
loopne
xor
adc
xchg
mov
inc
fsubs
or
xor
sub
jg
sub
add
lea
idivb
mov
dec
std
in
fs
nop
outsl
mov
cmp
or
rcll
es
insb
insl
xchg
cmp
and
pop
xchg
jns
sbb
and
sbb
fdivrs
dec
inc
adc
nop
roll
and
aam
fdivrs
in
out
aaa
lahf
aaa
lock
daa
and
xchg
ret
pushf
lods
arpl
pop
cmp
jo
loopne
es
xor
jmp
pushf
test
rcrb
jmp
outsl
lods
in
pop
test
bnd
imul
inc
xor
and
cld
mov
adc
pop
or
negl
jbe
mov
inc
out
xor
std
scas
cmp
xor
pop
fisttpl
cmp
andb
lods
je
subl
popa
mov
stos
shlb
orb
inc
sub
rclb
push
inc
dec
ss
imul
gs
mov
std
sub
mov
es
mov
xor
std
ss
hlt
imul
dec
scas
sbb
fs
cltd
push
movsl
add
ss
inc
popf
add
sub
jno
and
out
pusha
fcomp
ret
push
inc
or
inc
js
decb
pop
fimull
stc
cwtl
inc
lods
sti
mov
arpl
mov
mov
and
push
mov
push
push
cltd
xor
xchg
cmp
test
sbb
outsl
mov
popa
push
orl
in
jne
cmova
adc
push
aas
adcb
ret
loope
sub
lea
and
iret
and
mov
int
mov
and
stos
adc
cltd
xchg
js
inc
pop
mov
pop
pop
loopne
push
pop
inc
pop
push
or
xchg
shlb
jmp
jbe
inc
insb
fcomip
mov
pop
sub
push
imul
sub
scas
lret
and
sbb
and
inc
xchg
cli
mov
sbb
cltd
jno
pop
arpl
arpl
xorl
test
and
ss
ds
nop
mov
pop
int3
mov
sbb
mov
sbb
dec
insl
pusha
jno
fmul
pusha
bound
loope
xchg
out
add
ja
aam
es
mov
inc
and
sub
imul
push
xor
lahf
lds
jl
jae
inc
add
mov
dec
ror
dec
pop
imul
fdivs
movsb
xchg
pop
fs
push
sti
sbb
sahf
push
cltd
cmpsb
cs
repz
pop
and
aaa
push
jbe
ja
cli
and
decl
pop
bound
inc
in
add
mov
std
mov
or
jns
lea
lds
fstpl
std
push
cwtl
cmpsl
push
xor
xchg
xchg
mov
pop
or
xor
sbb
cmpsb
jo
cmp
rcr
ja
je
std
xchg
and
adc
add
mov
frstor
lds
push
mov
xchg
add
dec
shlb
mov
pushl
fisubs
xchg
adc
pop
stos
out
in
int
out
rcr
lea
mov
rcl
int3
inc
rolb
xor
repnz
dec
mov
jb
loope
sbb
pminub
cmp
fcmovnb
or
in
insl
cmp
lock
sub
addb
sbb
sbb
repz
push
cmp
inc
add
repz
dec
ds
ljmp
cmp
fiaddl
xchg
inc
xchg
pop
dec
clc
mov
push
or
clc
gs
mov
push
ret
out
and
repnz
sub
pop
sbb
add
shlb
xchg
or
jne
cwtl
rcll
test
mov
inc
and
jmp
roll
jecxz
lea
popa
js
xchg
cmp
mov
in
stos
out
mov
mov
xchg
scas
mov
jb
iret
out
ret
movsl
add
mov
jns
ret
icebp
add
cmp
pop
std
mov
das
jp
test
lock
scas
sbb
ljmp
popa
cs
and
cmp
inc
fldl
bound
jg
shrl
mov
and
mov
jmp
pop
insb
cli
sub
and
xor
cmp
cmp
ret
mov
stos
cli
pop
out
les
adc
add
cli
xor
mov
adc
push
lds
addr16
iret
das
pop
sbb
xchg
repz
add
rcrl
pusha
xchg
push
pop
lods
mov
cli
jmp
adc
pop
dec
mov
mov
or
aas
xchg
push
les
fidivrl
jb
aaa
jmp
xor
adc
lea
inc
inc
sub
repnz
mov
mov
xchg
adc
dec
push
mov
pop
ficoms
push
insb
pop
fildll
inc
push
test
notb
fs
inc
xchg
adc
lea
push
movsl
lcall
jnp
push
pop
xor
shll
xor
pop
hlt
outsb
out
dec
jns
and
jne
lock
dec
jmp
jge
sarb
lea
jae
push
inc
dec
jae
push
outsl
jg
imul
mov
arpl
xor
ss
inc
int3
rcr
mov
shll
sbb
or
xchg
or
cmp
in
xchg
pop
mov
jnp
outsb
pusha
and
sub
pop
mov
xor
pusha
xchg
inc
sbb
mov
in
sbb
std
sbb
mov
dec
popa
push
cwtl
ret
mov
sbb
cmp
sbb
push
mov
xchg
test
lcall
jecxz
mov
mov
jg
mov
add
mov
push
outsb
loope
xorb
outsb
push
push
fstpl
or
sarb
mov
out
cs
fists
inc
pushf
mov
int3
xor
shl
cmp
insl
push
leave
xchg
rcr
inc
fs
das
sub
xor
cmp
lret
cli
cltd
sub
mov
mov
sub
sub
aaa
ficompl
cmp
fsubr
add
xor
push
mov
test
outsl
aaa
mov
xlat
xor
cld
adc
fcoml
js
das
and
sub
and
hlt
jae
sbb
imul
inc
or
repz
outsb
fs
add
push
rolb
push
ja
inc
mov
arpl
xchg
out
fimuls
sahf
mov
les
jo
jecxz
inc
pop
ljmp
mov
cmp
mov
in
cmp
call
imul
sahf
fsubr
fnstsw
rclb
loope
mov
movsb
jb
push
shl
clc
ss
mov
inc
rcrl
jbe
stos
cmp
js
loope
sbb
add
mov
pop
ret
jae
imul
sbb
fsts
or
and
das
mov
data16
mov
stos
jmp
int
ds
movsb
stos
stos
loope
xchg
movsl
outsb
in
outsl
outsl
out
dec
lcall
clc
pop
jns
pop
mov
adc
push
xchg
cld
imul
lods
push
and
loopne
mov
xchg
scas
xor
push
icebp
int3
jae
stos
mov
jae
push
enter
sbb
cmc
adc
mov
push
sbb
outsb
mov
mov
pop
adc
add
sub
and
pop
and
push
cmpsl
pop
jg
stc
mov
xchg
xchg
les
inc
decl
dec
mov
cmpb
orl
movsb
pop
fmull
mov
push
sub
in
aaa
sbb
mov
fidivrs
xor
out
lahf
xor
test
icebp
cwtl
mov
imul
cmp
cmp
jb
mov
mov
fcom
mov
ljmp
lods
shl
arpl
dec
scas
mov
xor
inc
adc
lret
clc
inc
adc
push
pop
outsl
rolb
in
lods
xlat
arpl
add
testb
outsb
xchg
ficomps
les
inc
out
testb
lds
jae
push
mov
sub
loop
dec
xchg
dec
or
mov
rolb
data16
and
fmul
pop
jno
cmc
pop
dec
sbb
sbb
sbb
sbbb
xchg
call
mov
dec
pop
dec
pop
pusha
or
adc
fs
xchg
mov
mov
dec
data16
push
jp
jmp
sub
adcl
mov
cmp
sahf
or
out
and
cmp
aaa
es
sti
cmp
sub
dec
decb
stos
shlb
mov
sbb
xlat
dec
mov
add
repz
push
push
fdivrs
pop
mov
mov
cltd
and
into
sbb
add
xchg
inc
mov
cli
cs
push
mov
cmp
enter
dec
lret
push
cvtps2pd
repnz
imul
mov
repz
ja
movq
mov
ret
in
inc
inc
hlt
jnp
lock
dec
repz
jo
pop
adc
mov
insb
dec
dec
mov
or
push
mov
dec
into
sbb
rcr
cmp
inc
jmp
mov
dec
shll
in
imul
shl
cmc
and
and
mov
mov
insb
mov
shlb
das
outsl
push
jno
mov
inc
mov
mov
add
out
lret
enter
inc
cmp
push
shl
xchg
mov
sbb
mov
popa
mov
cld
into
xchg
cmp
dec
xstore-rng
cmpsl
push
outsb
xchg
dec
or
cli
outsl
cmp
test
cmpsb
add
lods
pop
and
xlat
popa
push
pusha
loop
ret
push
rcll
aam
xor
pop
jge
rolb
clc
mov
movsb
js
add
sarb
mov
dec
mov
inc
sub
outsl
jb
ds
jmp
mov
pop
ljmp
cs
or
mov
mov
xchg
push
out
std
pop
lret
insb
movsb
daa
jnp
lea
dec
cli
inc
or
add
add
adc
xor
add
repz
xchg
mov
pop
ljmp
push
arpl
and
add
and
dec
je
ret
mov
cld
fimuls
add
pop
daa
arpl
xor
add
dec
xor
aaa
mov
std
into
adc
addr16
fstps
rcl
arpl
sub
xor
sub
test
test
test
add
jno,pt
pop
in
dec
push
fdivrs
xlat
mov
movsb
cltd
lcall
mov
aas
arpl
lahf
aaa
xchg
jecxz
xchg
add
adc
and
and
xor
aad
out
std
jno
xchg
mov
lcall
ret
ljmp
std
sbb
cmp
mov
mov
cmpsb
xor
dec
lret
lea
add
fimuls
xchg
fidivrl
push
pop
test
sbb
mov
or
add
jno
repnz
sarl
sti
mov
push
movsl
les
mov
and
insb
and
sbb
out
in
xchg
std
add
mov
xor
jnp
loopne
mov
xchg
mov
lods
fcmovu
daa
xorl
jecxz
xor
arpl
mov
or
mov
int
or
jle
sbbl
std
in
sub
rcrb
je
cld
pop
push
dec
iret
mov
sbb
mov
dec
mov
roll
mov
push
nop
cli
imul
cltd
or
adc
std
out
lods
mov
ror
mull
int3
and
lock
jmp
sbb
fdivrp
ss
inc
cmc
sub
ds
cmpsl
les
lds
jbe
sbb
stc
shlb
pop
pop
cwtl
jae
aaa
or
pop
lea
xor
cmp
sbbl
mov
and
dec
push
dec
cwtl
push
mov
push
sbb
ljmp
xor
xchg
mov
out
push
lcall
sbb
test
push
mov
lds
add
fmull
subl
ror
mov
and
in
and
iret
leave
ret
sub
stc
aaa
adc
ret
push
aad
ljmp
mov
cmp
mov
test
pop
movsb
lea
loop
cmp
rcll
mov
pop
pop
sbb
outsb
cli
jmp
inc
mov
sbb
cmp
sbb
mov
sub
xor
stc
hlt
shlb
or
int
repz
mov
lret
adcb
inc
xor
xchg
incb
jb
add
test
mov
rcrl
sahf
into
jnp
push
sbb
pusha
cli
mov
add
test
xor
scas
cmpsb
sbb
push
scas
add
push
loope
popa
and
in
cmpsl
dec
inc
inc
out
in
mov
cs
daa
mov
daa
inc
and
and
xor
inc
lea
cmp
sub
sbb
adc
mov
or
mov
dec
add
sub
cmp
subb
out
and
test
addr16
mov
stos
out
lahf
add
shll
inc
mov
test
fwait
pusha
xor
jecxz
ja
add
cmp
jp
daa
imul
inc
loopne
mov
jo
xor
mov
fmull
and
push
xor
fldt
cs
jmp
push
mov
or
mov
push
lea
cmp
jbe
jns
dec
addr16
test
cmp
cmpsl
xchg
ret
ds
je
jns
inc
push
mov
inc
les
jg
clc
sub
std
ja
mov
scas
mov
inc
pop
mov
icebp
pushf
jle
mov
push
scas
scas
iret
sub
sub
insb
in
filds
push
push
lods
fsubl
xor
xor
ror
fsts
jns
dec
sti
data16
sbb
mov
or
fs
mov
xchg
jmp
push
movsb
nop
and
ret
nop
repz
sbb
sbbl
jle
nop
fildl
push
adc
dec
xchg
sub
outsl
out
loopne
adc
and
mov
push
mov
adc
xlat
inc
leave
repnz
jle
push
scas
insl
mov
jnp
push
inc
push
popf
movsb
cmp
jmp
xchg
mov
and
sbb
adc
ja
sub
sbb
mov
push
imul
mov
loope
fisubrs
aad
cli
xchg
adc
fstl
pop
jg
pop
and
inc
cmp
cmp
adc
adc
movsl
ds
movsb
dec
push
lcall
add
dec
loopne
mov
pop
fisubl
jl
jo
iret
ret
and
popa
cli
add
pop
lea
movsl
jbe
and
xchg
adc
lret
nop
stos
push
fldcw
and
cmpb
jbe
mov
jo
adc
ljmp
push
scas
test
or
sbb
mov
sbbb
xor
out
push
lods
and
mov
mov
sbb
ret
push
pop
in
lret
das
mov
sbbl
pop
lcall
or
int
pop
rcll
loope
lods
loopne
mov
repz
add
or
imull
stos
add
mov
outsl
out
mov
data16
test
mov
mov
subl
ficoml
lds
fwait
add
cmp
les
mov
jg,pn
dec
xor
lock
add
lahf
aad
mov
inc
mov
adc
outsl
push
jne
gs
xlat
loopne
xchg
cmp
jae
adc
daa
add
add
fs
sbb
and
xchg
test
cltd
push
stc
xchg
pop
sti
or
es
and
jmp
and
pop
sbb
lcall
call
pop
xchg
out
aaa
scas
or
cmpsb
dec
dec
inc
lock
int
pop
inc
inc
pop
or
cld
push
loop
and
push
push
push
or
pop
mov
stos
gs
fdivs
psadbw
out
sbb
leave
movsl
mov
xchg
inc
mov
dec
movl
jae
scas
mov
ds
lods
loopne
cwtl
jp
xchg
jle
mov
adc
pop
xchg
cmp
sub
push
xor
icebp
fs
mov
sub
inc
dec
mov
mov
or
cmp
mov
cmp
stos
jge
clc
cwtl
cmpl
inc
scas
lcall
inc
out
rolb
cmp
arpl
sub
or
movsb
xchg
das
lds
adc
mov
cmp
push
ss
add
inc
dec
adc
inc
out
nop
dec
out
flds
xchg
enter
dec
lcall
cli
jg
jno
ficomps
inc
inc
xor
mov
shrb
sub
push
imul
sahf
gs
mov
cld
jne
mov
stos
scas
out
popa
fwait
insl
xchg
pop
fidivl
xor
and
std
cmpl
add
inc
loop
xchg
mov
push
in
mov
jb
in
jle
jecxz
sub
jle
cmpb
dec
push
rclb
sbb
dec
and
jo
mov
lahf
outsb
mov
mov
pusha
cmp
xor
adc
loope
dec
sbb
or
data16
cmc
dec
jno
les
sbb
cmp
pushf
sub
mov
cmc
aad
rcll
in
fwait
lret
jge
popl
pop
or
arpl
lahf
pop
fldt
sbb
roll
dec
pop
je
out
scas
iret
add
bound
mov
inc
rcrb
scas
push
cmp
mov
cmpsb
leave
je
push
into
cld
push
adc
shlb
loopne
popf
jmp
or
jne
adc
cmpsl
daa
pop
aam
scas
stos
or
lret
add
jmp
adc
sahf
and
fiadds
mov
test
pop
inc
stos
nop
jo
xchg
add
lds
xor
dec
int
lods
sub
lahf
lods
cmp
pop
sub
and
popa
add
mov
into
outsl
lret
iret
test
and
icebp
pusha
rcr
cmp
dec
sahf
icebp
mov
outsl
pop
je
jg
movsb
vshufpd
dec
mov
mov
std
adcb
fnstsw
aaa
outsb
aad
cmpb
and
or
test
and
lds
test
out
mov
cmp
add
cmp
adc
inc
inc
cmpsl
ss
fdivrs
jmp
xchg
mov
lods
repz
jle
xor
mov
out
jl
cmpsl
xlat
ficompl
stos
sbb
fstpl
dec
xlat
mov
sbbl
rcl
dec
xor
cli
leave
mov
in
jl
add
repnz
clc
jge
xchg
sahf
cmp
xor
daa
cmpsl
jge
push
push
cs
xor
icebp
iret
mov
push
lods
or
mov
adc
dec
adc
nop
jno
stos
fists
and
adc
add
sbb
jae
push
loopne
pop
mov
lea
in
lret
push
inc
xor
enter
jmp
mov
aam
aad
mov
inc
addb
daa
das
cld
mov
enter
adc
pop
ret
push
mov
and
jnp
cmp
cmpsb
jae
push
push
xor
xchg
clc
xchg
and
rclb
jnp
or
adc
fists
sbb
lock
cmpsb
ficomps
ret
loop
outsb
cltd
iret
dec
dec
adc
and
les
imul
fs
push
iret
shrb
repz
jmp
in
push
lods
jmp
xor
sar
push
ljmp
cli
add
loop
mov
sbb
sbb
lods
sbb
popa
inc
jbe
mov
push
lret
ret
dec
sbb
push
add
dec
xor
aam
mov
popa
popa
decb
aad
mov
fistpl
popa
sub
jno
mov
pushf
mov
add
scas
loope
aad
mull
outsl
jl
push
int3
bound
in
or
test
jmpw
ja
cmp
xchg
mov
test
jb
mov
add
and
add
mov
nop
lds
xchg
das
jo
jecxz
dec
loop
pop
shlb
mov
push
sahf
or
xchg
call
inc
mov
xchg
shl
addr16
sub
and
xor
or
lret
scas
adc
jg
in
sub
movsb
xchg
and
add
cltd
movsl
jge
sbb
test
fs
sbb
adc
sbb
xchg
pop
cmpl
xchg
call
andb
aas
push
mov
mov
lods
clc
jg
xor
out
cmc
adc
xor
ficomps
test
add
adc
push
ret
movsb
cmp
cmc
inc
call
push
sbb
jbe
in
and
mov
add
cld
jb
dec
cld
push
mov
ss
mov
je
in
shl
jle
pusha
cwtl
inc
xor
push
sbb
and
daa
mov
cmc
stc
paddsb
adc
xor
loop
push
sarb
inc
pushf
lret
mov
inc
jle
xorl
xchg
repz
xor
mov
cmovl
test
leave
addr16
shll
sbb
adc
or
sub
mov
movsb
and
enter
ds
sarl
xchg
lcall
es
pop
or
sarb
inc
outsb
push
adc
fisubrl
mov
mov
outsl
gs
or
push
mov
mov
lret
lods
jnp
pop
popf
stc
and
pop
mov
sub
clc
mov
pop
ja
js
sub
icebp
call
push
adc
jae
add
cli
sbbb
mov
add
sti
fmull
jns
push
xor
mov
inc
jne
je
xlat
inc
push
in
inc
jmp
stos
mov
hlt
ss
and
movsl
inc
xchg
les
ret
pop
and
cmp
dec
push
test
xlat
jle
sbb
mov
fbld
leave
mov
mov
pushf
clc
mov
enter
pop
pop
mov
icebp
outsl
mov
xor
push
cmp
cmp
dec
fs
insb
out
jns
add
dec
aaa
jecxz
icebp
mov
leave
adc
gs
cmp
xchg
sub
push
std
pusha
test
inc
test
repnz
xchg
lcall
pop
pushf
shrb
or
data16
arpl
cld
mov
mov
pop
mov
sti
xchg
scas
iret
and
std
fs
cwtl
sti
orl
jle
jp
popf
pop
int
repz
xorl
cmp
ja
cld
rcrl
push
movsl
shll
sub
out
idivb
jnp
in
sbb
jp
subl
pop
pop
xchg
scas
in
push
jne
jae
int
movsb
mov
stos
adc
imul
or
sub
ja
cmp
and
sbb
xlat
sub
call
push
test
xlat
in
imul
leave
xor
pop
fcoms
cltd
mov
mov
mov
adc
mov
imull
or
mov
xor
sti
movsl
mov
inc
xor
fistl
arpl
fcmovnbe
xchg
sti
xchg
add
cs
push
dec
mov
dec
and
mov
push
ja
push
daa
and
cmp
dec
fsubl
push
lret
or
aas
out
xchg
sbb
inc
cltd
xchg
pop
xchg
lods
dec
mov
std
fsubrp
scas
loop
leave
fs
movsb
dec
mov
ret
lods
or
cmp
fimull
xchg
push
sbb
add
insb
cmp
rcr
xchg
aad
das
lret
ret
outsl
cld
mov
js
inc
popf
jnp
add
inc
mov
arpl
mov
push
cmp
outsl
icebp
or
mov
jecxz
adc
mov
subps
das
jge
mov
sbb
sbb
mov
inc
test
push
fistps
iret
xlat
xchg
sbb
add
imul
cmp
cmp
enter
in
mov
mov
mov
adc
ror
dec
sub
mov
dec
mov
sbb
mov
cld
sub
sbb
iret
scas
xor
lcall
ret
xor
outsb
xchg
adc
sub
repnz
push
mov
pop
aaa
popf
jp
add
clc
sub
xorps
cmp
xor
popf
nop
cmp
mov
mov
movsl
and
push
and
sub
lahf
xor
cmp
dec
loope
lahf
xchg
loope
addr16
enter
minps
or
xor
sub
notl
dec
mov
mov
jg
mov
shl
sub
xor
and
idivb
into
jnp
mov
mov
cmp
imul
jo
xlat
sbb
imul
mov
add
sbb
popa
sub
mov
insl
add
fwait
mov
or
in
sub
icebp
mov
xchg
mov
hlt
xor
sub
push
es
push
scas
sbb
inc
inc
cmpsl
or
mov
jnp
leave
mov
and
int
lock
jo
dec
fcompl
inc
int
js
arpl
sbb
mov
call
stos
inc
sub
data16
mov
movsb
neg
int3
cmp
das
jae
jo
ret
dec
push
mov
mov
push
or
repz
cmpsb
mov
stos
gs
cmpsl
insl
mov
dec
call
call
jb
push
pop
lods
inc
sbb
jle
mov
push
pop
int
pop
mov
addb
loopne
pop
fcomp
cmp
int
test
ret
mov
sbb
xor
repnz
mov
roll
clc
ffreep
jge
push
jae
lods
dec
loope
lods
aad
inc
cltd
pop
xor
stc
call
adc
fsubr
stos
jecxz
fldl
mov
pop
inc
data16
sti
and
mov
lcall
mov
and
mov
add
mov
pop
xchg
inc
or
add
out
pop
outsb
push
xorb
push
push
sub
lods
xorl
lret
push
aas
lds
push
mov
jns
jle
or
movb
mov
test
push
mov
mov
jb
roll
test
stos
mov
mov
shll
fldlg2
es
xchg
movsb
mov
aam
pop
loopne
insb
scas
movl
fnsave
cmpsl
fwait
xchg
into
ja
add
mov
dec
pop
popf
ss
sbb
mov
dec
add
mov
cmp
gs
push
data16
loope
adc
icebp
sbb
ja
aas
sub
or
pop
push
int3
call
mov
adc
push
xchg
push
and
movsl
stos
mov
jnp
rcll
test
ljmp
push
jo
popa
inc
das
bound
sti
adc
fnstenv
notl
mov
pop
repnz
xchg
mov
xor
push
mov
pop
cmp
pop
push
dec
xchg
lcall
cwtl
push
xor
or
sarb
cld
mov
cmp
push
add
lock
pop
xchg
out
loop
push
xor
cli
in
sbbb
cmpl
aad
js
jle
sbb
xor
pop
inc
cltd
int3
pop
and
das
leave
xor
pop
inc
or
push
push
xor
mov
mov
lret
ds
pop
adc
sbb
xor
enter
shrl
shrb
js
adc
mov
in
test
jae
mov
sub
inc
loopne
sbb
and
stos
xchg
arpl
mov
ret
movb
dec
push
pop
cld
test
and
int3
je
jne
not
mov
mov
and
lock
fsts
mov
ljmp
inc
cmovbe
inc
mov
jle
inc
ljmp
pushf
mov
cmpsb
inc
cmp
adc
and
imul
incl
sub
xchg
mov
sbb
icebp
rcrb
mov
stos
pop
es
adc
xchg
les
or
test
fistpl
sahf
fisubs
mov
cmpsb
mov
lods
and
rcrb
xchg
fsubs
xor
cmpsb
and
jne
dec
cmp
insl
sti
sub
mov
dec
sub
jno
adc
xor
xor
sbb
test
xor
dec
loopne
mov
cmp
adc
pop
mov
cmp
out
repnz
mov
jnp
rcrl
or
ds
leave
and
sti
xlat
and
in
lods
push
push
mov
sbb
xchg
cmpsl
and
pop
sbb
and
mov
mov
adc
pop
xor
mov
mov
out
inc
insb
leave
daa
mov
push
fs
test
or
dec
jle
bnd
push
sbb
pmuludq
fstps
shrb
xchg
pop
sub
xor
adc
popf
and
xrelease
adc
push
dec
in
push
test
and
xchg
lock
addb
cmp
xor
das
imull
insb
fimuls
fcompl
jb
movsb
stos
mov
inc
push
lds
push
mov
or
xor
push
decb
test
ja
das
dec
loop
and
jl
or
xor
cmpsl
stos
scas
or
loop
adc
gs
jns
sbb
pusha
addb
and
aaa
mov
cs
stos
pop
negb
mov
nop
jp
jnp
xchg
imul
jmp
jl
into
testl
test
and
insl
stos
jae
sbb
pop
test
lods
dec
jb
das
jnp
cltd
inc
psrad
mov
ror
clc
xor
shlb
idivl
mov
outsb
insl
mov
pop
aad
fwait
loopne
cs
lock
dec
sbb
add
adc
pop
add
dec
dec
inc
add
push
jge
fmul
cli
sub
stos
xor
in
out
cltd
add
popa
stos
push
lret
jp
test
loop
adc
xchg
hlt
addr16
pop
adc
cmp
lods
fidivs
insb
mov
dec
sub
xchg
pop
fstl
aam
lock
sbb
int3
pop
xor
movsl
adc
jl
cmp
and
or
push
repnz
xchg
xchg
sbb
outsl
popa
repnz
xor
mov
push
jnp
add
lods
pusha
mov
shrl
cmpsb
test
sub
mov
lahf
test
dec
xchg
lret
sbb
frstor
pusha
cmp
dec
fs
daa
inc
loopne
mov
jg
mov
pop
pop
mov
inc
xor
or
inc
or
mov
int
outsb
sbb
inc
jecxz
aas
jp
and
add
adc
push
in
mov
and
add
movsl
xorb
gs
sub
clc
cmpsb
stos
and
push
outsl
loopne
xor
mov
xchg
mov
icebp
or
mov
push
insl
mov
and
adc
fsubs
daa
sbb
push
fnsetpm(287
mov
jmp
push
jle
mov
enter
and
mov
paddsw
or
mov
loop
pop
xchg
fldt
idivl
push
ss
fwait
jnp
test
leave
gs
insl
hlt
out
aad
and
xchg
push
in
int3
call
jle
push
xchg
or
xchg
xchg
add
mov
outsl
mov
cmc
jle
incb
cs
xchg
jbe
in
sti
xchg
push
aas
pop
cwtl
inc
filds
insl
inc
or
mov
jno
pop
emms
inc
sahf
or
jnp
or
into
pusha
inc
jns
jno
in
dec
dec
fld
testb
sbb
mov
adc
or
xchg
sub
jmp
mov
and
sbb
push
push
pushw
dec
mov
sub
out
rep
or
test
rcrl
push
les
xchg
add
dec
pusha
mov
mov
inc
orl
add
loop
jecxz
sbb
mov
or
ficoms
sbb
test
push
and
subb
in
xchg
sbb
out
jle
inc
lods
subb
cmpsb
jne
cmp
jecxz
loopne
mov
sbb
mov
and
test
cld
outsl
sub
mov
inc
shll
in
sbbl
xor
dec
lret
jae
lret
rcrl
popf
ja
fwait
push
mov
imul
mov
movsl
data16
shlb
sar
cmp
jo
dec
repz
jp
adc
test
cmp
push
nop
lock
pushf
out
fs
sub
sbb
push
and
imull
jp
push
inc
push
test
out
cmp
testb
add
mov
mov
jnp
rclb
les
je
or
lahf
add
lea
mov
repnz
and
repnz
sbb
xchg
icebp
pushf
loope
aam
inc
out
int3
loope
es
in
sub
shlb
jg
sub
dec
inc
push
inc
fld
adc
mov
xchg
fnstsw
sub
imul
fsts
lods
sub
sti
add
stos
scas
pop
pop
leave
mov
call
fimuls
push
outsl
fistpl
cmp
add
data16
es
sbb
jb
sbb
cmp
cmpsb
xchg
mov
cmp
jecxz
cmpsl
push
js
fnstsw
jecxz
sti
jp
sub
ret
xchg
mov
xor
scas
jb
pop
das
and
test
dec
or
imul
std
pop
jp
dec
rolb
fistps
lret
outsb
xchg
jg
fidivrl
mov
and
int3
push
pop
jg
push
je
jp
xchg
and
stos
add
js
int
insl
fsts
int3
dec
mov
xchg
jno
pop
sarb
inc
jge
jle
dec
fldl
lret
in
in
mov
dec
pushf
push
or
ficoml
fdivrl
jnp
sub
shl
mov
pop
idivb
aad
push
ficoms
call
xchg
aas
jecxz
es
push
cmpb
xor
lods
xchg
mov
mov
aam
xchg
xchg
add
cmpsb
and
test
or
add
adc
data16
adc
iret
bound
mov
fs
sti
sub
fcmove
lahf
movsl
fistl
hlt
and
dec
inc
cmp
shlb
mov
mov
mov
cmp
or
sub
fwait
push
add
mov
js
outsl
cmp
into
cmp
imul
sub
fnsave
dec
rcl
and
mov
pop
gs
ljmp
jge
jns
lret
adc
mov
js
adc
jmp
adc
pop
popf
mov
lret
ljmp
mov
call
xlat
mov
mov
xchg
stc
inc
mov
inc
mov
lods
stc
sbb
lea
iret
add
loopne
imul
add
add
jne
mov
je
pop
int
inc
jecxz
lahf
out
fiaddl
push
pop
pop
cmpsl
fsubrs
mov
lea
mov
pusha
mov
test
inc
out
test
cltd
je
in
out
mov
out
pop
rol
mov
cmpsb
fisubrs
insb
insb
hlt
dec
mov
push
mov
out
mov
clc
subl
sbb
dec
ret
push
mov
or
or
lea
pop
dec
fwait
int3
jl
je
push
ljmp
clc
mov
sbbl
xor
int3
lret
fistpl
jl
cmp
cli
cvtps2pd
xor
inc
and
mov
dec
roll
xor
test
xor
fstpt
mov
mov
jb
pop
sub
dec
and
mov
shlb
inc
enter
push
mov
cmp
xor
roll
fcoml
loop
cmp
mov
pushf
push
dec
inc
jae
mov
cmc
jno
pop
jo
push
xor
jb
leave
scas
popl
hlt
jbe
js
push
out
mov
outsl
sbb
jnp
sbb
ss
adc
test
pop
popa
push
or
xchg
add
sub
sub
dec
enter
ja
mov
pop
in
cwtl
cmp
jmp
sub
mov
xor
mov
outsb
xor
mul
xchg
outsb
mov
or
push
jne
jmp
cmpsb
repz
loopne
bound
mov
pusha
jo
ja
xor
arpl
pop
mov
decl
clc
jl
sub
nop
jge
pop
bound
pop
pop
cmpsb
fidivrl
fmul
jge
adc
adcb
push
lret
lea
push
lods
mov
mov
or
sbb
into
jae
cs
adc
outsb
xchg
out
mov
rcl
iret
push
ljmp
mov
push
jle
mov
push
and
inc
adc
mov
fwait
jmp
movsl
rcrl
jne
out
jb
or
sti
arpl
or
pop
add
imul
lret
mov
xor
subl
mov
shrb
in
call
mov
faddl
xchg
fsubr
or
adc
in
mov
pop
pop
cmpsl
mov
inc
arpl
cmp
xor
cmp
mov
cmp
dec
int
jl
stos
stos
and
sub
hlt
pop
or
js
dec
inc
gs
outsb
mov
test
repnz
out
xor
xchg
jecxz
nop
out
or
or
lods
ds
push
pop
jle
pop
mov
sahf
or
out
rcr
xchg
jg
and
mov
mov
mov
inc
repnz
aas
popf
sti
fwait
inc
shll
out
sahf
out
cmpsb
mov
ror
mov
rorb
jge
mov
fmulp
xchg
iret
mov
pusha
lock
push
mov
pop
repnz
nop
stos
push
ja
mov
jp
mov
dec
pop
mov
and
jb
repnz
cld
adc
aas
cmpsl
rolb
sbb
jnp
sub
xor
xchg
adcl
mov
rol
aas
mov
or
inc
mov
xor
pop
xor
adc
jmp
das
xor
mov
scas
cltd
or
inc
jb
push
cmpsl
push
testl
inc
ds
pushf
imul
notl
jecxz
dec
mov
push
popf
shlb
add
jl
fs
sub
repz
outsl
or
fmull
mov
ss
sub
sub
js
shlb
mov
ret
and
xchg
leave
fsubrp
mov
dec
mov
jl
sub
test
icebp
push
mov
inc
cmp
addr16
xor
loopne
lds
cmp
call
leave
sbb
or
jl
or
sbb
sbb
xlat
roll
call
pop
dec
sub
push
fsubrl
or
enter
xor
fdivrl
jge
repz
xor
out
mov
lahf
or
test
cld
sub
inc
or
call
xchg
mov
fisubs
popf
ret
xor
aas
bnd
adc
imul
imul
adc
popf
loopne
adc
std
lcall
fcmovne
mov
dec
popl
mov
ror
xchg
repnz
hlt
adcl
and
outsb
mov
add
push
jl
adc
mov
dec
cmp
xchg
xchg
icebp
mov
jbe
rcrb
xor
repz
dec
cmpsb
xor
imul
add
pop
fwait
cmp
jl
pop
int
das
and
aam
lock
stc
test
add
insl
mov
jmp
test
push
ja
sub
sbb
push
sbb
and
and
jb
xchg
or
pop
inc
xor
sahf
ret
dec
xor
jge
mov
nop
call
jecxz
inc
cmpsb
je
insb
inc
cwtl
jle
cmovns
inc
lods
into
and
cli
dec
pop
pushfw
nop
int
in
out
sub
out
jno
fildl
arpl
ficompl
pop
mov
insb
ja
pop
push
mov
cmp
xchg
dec
ja
ja
lahf
ss
cmp
inc
fists
dec
mov
lret
les
adc
shlb
dec
loop
ror
clc
test
jo
sarb
mov
imul
xor
fldcw
cmp
dec
ja
ja
insl
fsubrp
inc
pop
sub
aam
cmp
jns
popf
add
out
iret
clc
aam
mov
push
stc
jns
jbe
insl
jae
adc
mov
sarl
lods
mov
das
xchg
mov
lock
or
fcmovnb
ret
xchg
push
rdtsc
mov
ds
mov
iret
movsb
mov
or
pop
lods
pop
lock
cmc
inc
mov
jnp
int
jno
int
stc
int3
jno
jmp
mov
outsl
xor
clc
xchg
pop
jo
jnp
lock
ret
mov
in
pop
push
cltd
mov
jmp
mov
lcall
push
push
test
cltd
cmpsl
sub
loop
movsl
lods
push
cmp
lods
sbb
lds
arpl
das
jae
pop
mov
dec
ret
sahf
jne
bound
icebp
movsl
daa
mov
add
pushf
push
and
mov
in
into
xor
repnz
and
or
push
nop
add
adc
and
int
mov
sbb
imul
in
roll
popf
lcall
mov
mov
push
jne
inc
pushf
or
out
insb
xor
ljmp
add
sti
push
dec
scas
insb
out
cmp
jbe
out
cltd
sub
xchg
jnp
fcoms
mov
or
dec
insb
push
cmp
lods
nop
pop
enter
mov
movsb
sub
add
sub
std
bound
xor
in
in
cltd
pushf
outsl
enter
xchg
mov
xor
jl
movsl
lahf
or
mov
cmp
jo
loopne
aad
and
inc
sub
or
xrelease
jns
sbb
test
mov
xor
pop
xor
sti
mov
pop
pop
sub
xchg
jo
adc
cmp
pop
test
xor
mov
loopne
sub
jns
sub
or
adc
jge
jle
xchg
orb
ja
popf
out
and
outsb
sub
mov
insb
push
scas
lret
insl
xor
test
int3
insb
sbb
sbb
dec
movsl
lods
xor
jecxz
aas
xor
sti
adcb
pusha
in
mov
or
sbb
inc
add
sub
aaa
pop
repz
scas
or
dec
sub
fs
dec
and
adc
cmpsl
xor
push
xor
push
mov
fsubrp
jnp
or
xchg
sub
ret
adc
xor
dec
sub
sbb
sub
sbb
mov
cli
movsb
xor
cmpsb
jp
ja
sahf
clc
jno
sahf
std
leave
loopne
jbe
and
jb
jb
mov
in
jo
fisttps
jbe
add
fsubs
jae
adc
inc
xlat
out
outsb
imul
shl
js
sub
dec
pop
fsubr
cli
xchg
fbstp
inc
in
mov
mov
jo
sbb
mov
or
in
test
push
inc
mov
aam
shrb
test
ljmp
jge
xor
ja
pop
adc
adc
out
mov
fildl
sbb
mov
notl
cmpsl
dec
mov
xlat
icebp
pusha
cltd
insl
imul
test
lahf
or
xor
mov
cs
or
cmp
stos
out
dec
gs
dec
inc
ret
dec
call
push
out
push
adc
xor
xchg
push
inc
xchg
stos
mul
xlat
pop
push
fcoml
mov
fisttpl
pushf
std
pop
test
jnp
add
fisttpl
clc
cmp
pop
xlat
dec
mov
int3
xchg
jnp
xor
push
pushf
add
push
arpl
imul
mov
pop
inc
cmpb
cld
or
sarl
ret
pop
add
fnstenv
rcll
pop
adc
jns
mov
sub
sbb
negl
mov
sub
pushf
xor
test
cmpsb
mov
fs
add
jb
mov
push
push
and
ret
nop
mov
ds
loope
bound
jae
pop
shlb
addb
fwait
inc
sub
pop
fwait
ror
out
les
lea
lods
ret
mov
aas
sbb
cltd
data16
adc
sbb
popf
sub
popa
dec
mov
jae
test
dec
adc
mov
sub
add
xchg
imul
mov
xchg
pop
cmp
cmpsl
lcall
lods
sbb
fiaddl
dec
mov
lcall
cmp
push
ds
xor
mov
pushf
and
clc
ss
hlt
and
adc
xchg
imul
fildll
jge
lret
add
adc
test
xor
ja
dec
mov
mov
int3
mov
adc
sbb
inc
scas
jmp
daa
push
xchg
cmp
pusha
xlat
xchg
inc
fsub
addr16
rcll
invd
dec
cmc
loopne
or
sub
cmpsl
ss
mov
arpl
jg
push
idiv
es
call
dec
out
dec
pop
mov
pop
mov
jg
insl
bound
mov
xchg
mov
inc
fiaddl
sbbl
sbb
xor
mov
adc
nop
cmpsb
mov
mov
jbe
jb
and
cs
stc
and
lock
adc
je
mov
stc
adc
movsb
nop
cltd
sbb
into
out
xor
mov
push
push
adc
xlat
push
stos
mov
js
das
mov
fld
stc
ret
rorb
imul
rcrl
orb
imulb
sbb
das
jb
lret
testb
loop
lock
pop
popa
sub
sahf
clc
cwtl
icebp
mov
xlat
add
jo
sbb
push
out
fisttps
outsl
les
push
scas
inc
jae
loopne
aas
jl
ss
cwtl
and
mov
push
mov
pop
mov
pop
sahf
stc
shrl
stos
xchg
sarb
int
adc
int
mov
xor
or
stos
mov
pop
pop
dec
into
add
push
divb
mov
jae
hlt
outsb
inc
fiaddl
xchg
inc
jp
mov
push
mov
ffree
sti
sub
and
jae
lret
mov
cmc
aaa
scas
jecxz
jo
bound
dec
and
hlt
mov
xor
pushf
push
pop
push
stos
mov
fs
stos
hlt
sub
test
pop
or
xchg
mov
jecxz
rcrb
leave
stos
mov
scas
xchg
dec
daa
lods
xor
inc
scas
popf
lods
jecxz
aad
dec
or
pop
lcall
sbb
mov
cmpl
test
inc
sbb
push
out
inc
lret
mov
push
lods
nop
adc
aaa
in
pop
jl
pop
mov
pop
leave
and
mov
lret
xchg
fistl
fcoms
jns
jg
xchg
scas
push
and
mov
insl
test
dec
push
sbb
orb
loope
outsb
cs
out
pop
sbb
loope
adc
lds
dec
pop
push
jle
push
sbb
push
and
dec
jle
out
insl
xor
pushf
xchg
neg
jo
lret
popa
or
in
testl
sbb
ljmp
lea
mov
xchg
mov
sub
mov
andb
cmp
jg
adc
cwtl
inc
mov
inc
cmp
xchg
pop
jae
es
je
xor
fisttps
pusha
jnp
mov
adc
dec
cs
pop
xchg
ret
sub
push
sbb
pop
outsl
shrb
xchg
movsb
cld
push
mov
push
xchg
ret
cmp
xor
leave
cwtl
js
in
xor
adc
sub
inc
aad
push
ret
pop
adc
movsl
mov
sub
ds
andl
and
xor
sarl
xchg
lahf
stos
out
pop
xor
fisttpl
mov
fldenv
jmp
and
addr16
or
icebp
icebp
jno
int3
push
ret
jno
adc
mov
add
out
scas
push
lret
lcall
fcoml
sub
in
jge
test
mov
mov
stos
mov
out
push
rorb
fisttps
leave
data16
sub
push
std
in
push
rcll
ljmp
fwait
and
sub
sbb
cwtl
pop
mov
cltd
loope
xlat
mov
sbb
inc
jae
xchg
mov
inc
pop
loopne
sahf
fistps
pop
adc
cmp
push
fiadds
cld
insb
addr16
sbb
out
fimull
cmpsb
cmpsb
inc
dec
addr16
inc
xor
mov
cmp
pop
lea
xor
mov
mov
pop
xor
lcall
inc
sub
test
adc
nop
aaa
lock
inc
lcall
xchg
pop
std
mov
daa
push
lds
push
cmp
jmp
dec
mov
pop
imul
mov
adc
int
push
imul
popf
fdivr
in
stc
inc
das
test
and
and
jge
and
cmp
xor
cwtl
test
sub
jb
xchg
adc
mov
mov
ret
jbe
adc
nop
fistps
sub
add
sbb
outsb
cmp
ret
add
xor
mov
mov
addl
shrb
sub
jge
addr16
jle
js
pop
stos
aad
cmc
cmp
cmp
mov
movsl
shlb
sahf
sahf
fsubs
test
or
das
push
das
sti
jns
mov
cmp
inc
mov
adc
mov
jbe
pop
popf
mov
scas
push
jecxz
loopne
adc
subb
mov
sahf
hlt
jmp
sbb
ret
bound
sbbl
xor
mov
sbb
aad
mov
xchg
cltd
mov
enter
dec
stc
out
inc
inc
mov
sbb
adc
leave
ja
nop
pop
xchg
xor
or
test
mov
dec
sbb
mov
sbb
icebp
test
inc
dec
iret
mov
mov
cmc
inc
rolb
arpl
loope
sub
call
mov
or
das
icebp
sub
add
lods
push
aad
mov
out
push
pushf
mov
das
or
daa
mov
imul
repnz
std
pop
imul
in
jae
mov
aad
aad
arpl
cmp
push
jmp
in
out
loope
jge
je
add
or
test
scas
cs
out
sub
fcomip
push
or
xor
mov
in
sub
push
jo
imul
or
jle
outsl
cmp
add
bound
adcl
adc
cmc
inc
sbb
mov
mov
sub
sub
jb
sbb
push
das
mov
test
ds
lea
push
xchg
jae
jg
adc
cmpsl
fs
sub
out
iret
mov
outsb
dec
fimull
int3
movsb
dec
xor
addr16
insl
sahf
inc
mov
sbb
push
add
mov
dec
jmp
loopne
das
jge
or
or
pop
xor
scas
pop
adc
das
cld
es
xchg
hlt
out
fmul
jecxz
pop
fs
sahf
aas
mov
pop
sarb
outsl
inc
or
push
decl
insl
push
popl
movsb
imul
inc
mov
mov
xchg
dec
xor
dec
fdivp
xor
inc
lret
push
mov
std
aas
and
cmp
outsb
loop
adc
ret
add
shrl
xchg
fcmovnb
insb
shll
popa
stc
jmp
sbb
sti
in
js
cmp
inc
adc
xor
in
sbb
sbb
ljmp
loop
push
scas
inc
pushf
data16
push
xor
xchg
out
ret
lcall
jne
jo,pt
pop
inc
shll
cmp
stos
rorl
xchg
and
push
sahf
cmp
call
mov
cmpsl
ja
hlt
cmp
sub
sbb
lock
push
dec
lods
jns
cli
into
cs
shr
int
or
cli
pop
mov
outsl
add
sahf
aad
and
xchg
push
repnz
cld
enter
lods
insb
and
mov
mov
inc
xchg
push
sbb
addr16
fdivr
jb
cli
stc
pop
and
push
clc
push
clc
lods
shlb
xlat
leave
cli
sbb
jecxz
and
movsl
lcall
stos
sub
adc
mov
inc
sbb
xor
jne
or
insl
pop
mov
pushf
rcr
outsl
cmp
jns
fsubrs
outsb
sti
aaa
cmpsb
push
add
sub
mov
push
xchg
and
push
dec
xchg
add
jnp
inc
dec
xorl
cli
jb
ds
in
xchg
add
push
jnp
and
stc
pop
xchg
xchg
sub
dec
cmpsl
push
aad
lods
fimuls
mov
out
mov
lds
int
rclb
icebp
xchg
mov
push
add
mov
repnz
std
mov
repnz
fdivrl
sahf
shll
add
mov
cmc
gs
or
dec
fstl
pusha
mov
mov
enter
dec
mov
daa
jns
push
jmp
ljmp
mov
sbb
sbb
jbe
lahf
add
mov
call
push
adc
inc
push
out
and
adc
mov
test
pop
sub
imul
add
push
jge
mov
sub
mov
mov
pop
cmp
fcmovne
xlat
enter
push
outsb
mov
iret
hlt
pop
and
in
push
sub
out
daa
ja
push
push
imul
cmp
add
add
das
add
sti
sub
icebp
mul
cwtl
jmp
adc
jbe
xchg
fsubl
mov
adc
loope
adc
dec
stos
xor
imul
adcl
int3
int3
sbb
rolb
je
pop
xchg
movsb
mov
mov
mov
sbb
inc
cmp
mov
sbb
loope
mov
in
push
and
rorb
cltd
xlat
or
in
lods
std
lahf
loop
adc
push
push
insl
dec
cltd
in
pop
fnstenv
sub
adc
sub
call
adc
call
call
popa
xchg
mov
cmp
jmp
rol
xchg
les
dec
xor
pushf
jl
rorb
or
inc
adc
mov
mov
push
mov
push
mov
jle
xchg
iret
and
out
scas
cs
cmp
jl
xchg
scas
sbbb
jle
xchg
mov
sbb
and
push
movl
push
das
popf
or
fnsave
aaa
pop
loop
pop
jbe
test
dec
stos
sbb
dec
mov
cmp
and
mov
adc
pop
pusha
movlps
push
and
ret
mov
cmp
out
imul
imul
dec
pushf
mov
or
aas
nop
inc
mov
ljmp
mov
push
stc
out
add
mov
ljmp
mov
aad
sbb
mul
pop
sbb
rcr
push
es
out
cmpsb
push
pop
ds
cmpsb
ljmp
cmp
clc
addr16
out
xchg
enter
mov
roll
jb
sub
aaa
mov
out
insb
icebp
test
sub
jg
movaps
in
inc
mov
sub
mov
shrb
xchg
mov
psubq
sbb
nop
std
fucomp
lahf
jnp
lret
pop
out
cmc
cmc
mov
cltd
cmpl
fs
loope
xchg
sub
xchg
cmp
mov
fstps
jb
mov
inc
aam
mov
fld
loope
in
sub
mov
divl
loop
sbb
jo
cmp
nop
loopne
lods
and
int
add
outsl
dec
scas
mov
inc
mov
jl
addr16
mov
or
nop
jecxz
xchg
jbe
push
push
addr16
andb
add
fsts
sbb
and
or
dec
mov
aad
mov
fwait
mov
xchg
fisubrs
fdivrs
fwait
jl
and
in
cmp
pop
jb
movsl
scas
movsl
fadds
cmp
jnp
aaa
jge
dec
nop
xchg
mov
into
xchg
push
push
aad
je
mov
jmp
pusha
jmp
mov
or
mov
das
jecxz
ja
jb
pop
sbb
jo
sub
mov
adc
jmp
xchg
or
or
jl
clc
ret
inc
jae
or
stos
je
call
fwait
jecxz
add
mov
xchg
jbe
sarl
test
push
leave
adc
inc
mov
mov
fsubrp
and
repnz
xor
ja
adc
call
lds
sub
sbbb
pop
mov
pop
lret
push
call
push
pop
or
cmp
cmp
pop
xchg
push
push
cmpsl
push
bound
rolw
fcoml
or
shll
add
pop
fstpl
cltd
iret
fcmovne
and
or
stc
cmpsb
lds
add
mov
or
subl
mull
and
in
pop
sub
or
mov
mov
orl
xor
nop
fisttpl
cs
das
or
xchg
jecxz
sbb
ret
cltd
or
shrl
jl
insl
cs
sarl
add
adc
fwait
xor
and
pop
out
sbb
divl
mov
xorl
mov
imul
into
adc
cmp
lcall
gs
push
gs
shlb
inc
in
jge
mov
inc
in
adc
scas
sub
imul
add
jl
push
test
cmpsl
mov
pusha
xor
push
jecxz
and
mov
push
or
pop
aas
clc
stos
andb
xchg
xchg
bnd
ljmp
frstor
dec
data16
inc
or
ljmp
xor
sub
add
cmp
lret
inc
and
fmulp
cli
bound
mov
dec
xchg
or
inc
in
enter
andnps
aad
push
xlat
inc
sbb
push
xchg
xchg
mov
std
out
add
push
jne
sbb
bndstx
xor
push
sbb
add
and
sahf
mov
dec
adc
ror
cmpsb
leave
in
adc
in
ja
xchg
dec
dec
xor
xor
push
sbb
adc
xchg
mov
sub
xor
fstp
jp
dec
sub
out
mov
jge
mov
mov
cmc
dec
push
es
mov
sti
inc
dec
dec
push
push
pushf
aam
mov
sub
in
in
push
pushf
imul
xlat
mov
inc
repnz
mov
pop
adc
ret
jb
cli
sbb
mov
in
pop
dec
xchg
les
fs
and
nop
out
jge
sub
hlt
movsl
xlat
dec
xchg
lret
jne
push
jno
xchg
ret
adcl
fbld
clc
jp
dec
jne
fisubrs
ror
rorl
sub
outsl
jp
cmp
aaa
inc
adc
jbe
fwait
jno
das
loopne
push
jb
std
lret
xchg
out
out
fmull
cmc
daa
pop
lds
mov
sbb
add
xchg
pop
lea
mov
xor
ja
xchg
cmp
inc
add
lret
mov
jbe
cmpsl
in
es
into
mov
dec
mov
sahf
ficompl
sahf
pop
and
out
mov
sbb
inc
imul
or
in
fwait
jno
cmp
mov
loopne
xor
insl
jns
leave
jne
aaa
inc
add
pop
jae
daa
sub
adc
pop
and
adcb
fcoml
decb
mov
arpl
push
aam
and
or
pop
out
jne
xchg
repz
lock
insl
xchg
xchg
add
arpl
out
push
mov
cmp
or
cmp
jb
imul
icebp
mov
push
lret
xchg
lcall
or
mov
rcll
cld
leave
xchg
negb
rcrb
xchg
movl
add
push
and
ret
add
xchg
fs
mov
mov
imul
bound
out
cld
test
ljmp
psubsb
cmp
or
lahf
addr16
pop
sbb
xor
mov
pop
je
gs
mov
lock
pop
fstpl
xor
lret
lret
aas
insl
push
arpl
xlat
xchg
mov
adc
bound
pop
mov
push
xchg
sub
sub
loopne
dec
aad
fisubl
cmp
mov
mov
aaa
push
cmp
or
xchg
sub
inc
xchg
aas
test
jp
adc
xchg
cltd
adc
dec
xchg
test
fs
pop
xchg
insb
in
xchg
adc
cmp
js
jnp
jge
xchg
or
sarl
dec
mov
popf
mov
lcall
mov
fbld
or
xchg
inc
adc
jae
pop
sub
cwtl
sub
mov
xor
in
call
jnp
pop
bnd
cmpsb
mov
data16
push
dec
fwait
or
clc
outsb
lcall
aad
popf
xchg
mov
ds
outsl
xor
pusha
jge
movsl
test
outsb
push
push
add
imull
imull
in
add
pop
ds
test
lods
and
fs
fiaddl
fdivs
jge
out
push
repnz
xchg
cltd
pop
repz
and
xchg
mov
movsb
mov
aam
fnsave
jmp
pop
cmp
movsl
adc
or
jge
jmp
insl
push
push
incl
adc
inc
add
pop
mov
decl
add
mov
aaa
xor
pop
jge
xor
test
test
pop
push
or
inc
mov
sti
sub
out
in
jns
mov
and
or
movsb
repz
pop
out
dec
loop
popa
inc
vpcmpgtw
and
jecxz
pop
inc
push
lds
xchg
in
in
jl
hlt
and
pop
mov
ja
sub
and
jo
lret
adc
cli
mov
pop
shll
xor
fadds
cmp
lcall
mov
loop
mov
roll
pop
in
shl
push
push
int
xchg
push
xlat
push
jge
in
push
fimuls
enter
fs
fisubs
lcall
icebp
jne
inc
jno
mov
mov
mov
pop
pop
push
data16
popa
dec
mov
pushf
shrl
mov
popf
sub
in
mov
scas
lret
mov
sub
inc
cmc
mov
sbb
or
dec
jne
and
adc
pop
sub
int3
push
sub
cmc
dec
imul
call
repz
xlat
sbb
pop
adc
les
ret
xchg
and
add
into
aas
test
or
ror
mov
push
shrb
subb
test
mov
pop
loopne
push
jo
out
fs
cld
fucomp
adc
cmp
xchg
lret
dec
adc
jmp
xor
xor
dec
xor
test
jns
jb
mov
loope
cld
inc
adc
mov
clc
lret
pop
test
or
and
sub
mov
repz
int
test
shrb
in
dec
push
sub
inc
pavgb
push
outsl
loopne
int
adc
fmuls
pop
pop
bound
cmp
mov
mov
stos
jge
and
loopne
add
cmc
outsb
bound
mov
iret
sbb
rcll
in
xor
cmp
jns
int3
xchg
mov
jae
mov
pop
dec
mov
cmc
dec
les
mull
jmp
xchg
sub
jne
aam
add
insl
in
testl
pusha
inc
dec
jae
push
mov
stos
pusha
xchg
das
xchg
adc
mov
xchg
fwait
jae
xchg
ss
xor
movsb
in
bound
xor
call
xor
pop
outsl
mull
jbe
outsb
mov
mov
cmpsl
xor
lds
mov
je
popf
xlat
or
push
cmp
push
cld
js
dec
sub
xchg
sub
mov
sahf
inc
out
jno
inc
into
pop
lret
inc
mov
jb
gs
out
xchg
outsl
hlt
lret
ret
adc
mov
dec
xor
mov
test
cmp
lock
lret
cltd
sbb
ljmp
pop
scas
ljmp
and
mov
or
mov
es
movsl
sbb
mov
bound
gs
lea
sbb
jne
xchg
rol
pusha
or
pop
mov
jg
test
mov
pop
or
jge
xchg
jb
in
dec
push
leave
or
and
mov
jle
cmovnp
ja
mov
push
fldcw
mov
js
lods
mov
aas
jmp
sbb
adc
jmp
imul
stos
enter
mov
jmp
xlat
xchg
adc
ficoms
mov
or
cmp
adcb
jmp
arpl
daa
into
mov
inc
stc
mov
xchg
mov
mov
push
out
add
push
aas
ljmp
sub
inc
pop
nop
cmp
xor
ret
fnstcw
mov
adc
inc
data16
and
data16
dec
xchg
xchg
add
sub
or
testb
cltd
mov
jns
adc
mov
and
sbb
imul
push
and
cmp
mov
xchg
xchg
loope
add
push
ret
rol
fwait
jo
inc
sub
xchg
push
jnp
push
inc
jl
mov
add
out
fidivrl
pop
adc
pop
adc
rcrb
push
push
sub
mov
pop
and
sti
cltd
out
roll
sub
out
orb
imul
je
add
repnz
jg
push
cwtl
jno
cli
ret
ljmp
xor
imul
pop
add
std
jmp
sar
sub
movb
lods
jae
add
or
stos
popf
inc
lock
daa
out
in
pop
scas
adc
jno
int
xor
inc
pop
lcall
inc
sbb
add
movb
sbb
out
negb
iret
push
or
xchg
adc
fs
mov
jns
mov
dec
jge
dec
insl
xchg
add
insl
mov
pop
inc
xor
icebp
je
sub
int3
in
inc
cmp
icebp
sarb
push
jne
push
gs
xchg
inc
jnp
mov
les
mov
and
xchg
adc
cli
push
push
inc
pushf
xchg
pop
daa
and
add
dec
addr16
jge
loopne
loopne
sub
shlb
out
fsts
shll
xchg
xchg
and
iret
or
push
mov
out
jno
fstps
scas
mov
push
call
xchg
les
inc
mov
in
jno
inc
xor
test
lret
movsb
sub
and
cmpsb
jle
jg
cmpsl
jg
dec
cmp
push
jmp
shl
jp
out
imul
sarb
orb
xchg
adc
adc
mov
and
rorb
cmp
dec
sub
mov
jns
dec
mov
inc
pop
xor
loopne
inc
cmpsw
fisttps
mov
es
das
inc
imul
lahf
or
push
loop
rcrb
jae
inc
in
xor
stc
mov
gs
movsl
pusha
addr16
cwtl
out
icebp
xchg
incl
cltd
add
sub
pushf
lods
out
dec
daa
push
pop
stos
scas
or
jp
cmc
xor
je
xchg
rcll
adc
mov
adc
idivb
js
outsb
ficoml
mov
stos
aam
sub
test
inc
inc
jmp
mov
jno
mov
sar
or
mov
sub
ss
inc
pop
jmp
xchg
adc
mov
rorb
xchg
mov
out
andl
ffreep
data16
add
dec
inc
ljmp
and
mov
push
jb
rcrb
arpl
fsubrs
inc
pop
pop
and
jno
fsubr
push
out
pop
mov
stos
mov
jge
int3
dec
or
push
xchg
add
into
je
test
xchg
mov
adc
lods
xorl
fs
xchg
inc
mov
add
jb
mov
add
or
inc
xor
cmp
aam
scas
in
jg
inc
jmp
fmull
inc
sub
sub
jno
fmul
fdiv
loopne
jmp
cli
shrl
mov
pop
or
fdivl
pop
fstl
push
scas
sti
js
mov
push
xor
addr16
scas
movl
add
jge
std
sub
movsb
lcall
rcll
or
sub
cmp
mov
scas
adc
into
and
leave
inc
inc
jge
jge
loop
xchg
cmp
clc
hlt
xchg
inc
add
sahf
inc
out
jge
stc
lret
inc
stos
mov
pop
push
xchg
jnp
mov
adc
jle
mov
frstor
add
xor
addr16
xchg
adc
jo
pop
aas
nop
jb
stc
cwtl
jnp
inc
in
test
push
mov
sbb
dec
sbb
je
outsb
and
lahf
arpl
mov
fdivr
cs
lret
sbb
in
fstpl
adc
jecxz
and
xchg
das
mov
adcl
dec
or
sti
fs
mov
cmp
lret
jne
xchg
call
push
xchg
cli
push
adc
adcl
notl
mov
jp
inc
mov
inc
aaa
xor
shrb
out
mov
cmp
dec
add
fisttps
ljmp
in
adcb
inc
ret
push
neg
adc
ret
add
add
xlat
movsb
fldcw
xchg
push
jae
sub
mov
add
imulb
cmc
pop
stos
decl
or
mov
xor
mov
and
mov
jge
cmpsb
insb
ja
popa
jb
arpl
dec
jns
mov
jnp
andb
aam
mov
push
into
mov
mov
cmp
popf
dec
jmp
testl
adc
movsl
leave
adc
jge
aad
cmp
mov
shll
fbstp
and
and
xor
flds
imul
xchg
ret
outsl
push
jle
adc
lret
xor
pop
mov
inc
cmpsb
imul
pop
xchg
mov
push
fwait
pop
ret
mov
test
and
lods
fdivs
dec
push
cmp
mov
xchg
lahf
pop
push
or
in
test
mov
test
je
clc
in
inc
sti
rolb
stos
dec
pop
sbb
pusha
jg
sbb
mov
sbb
dec
dec
lcall
ret
das
push
adc
out
lret
gs
sbb
pop
ficompl
push
je
mov
xlat
loopne
stc
daa
adc
pop
in
das
xchg
inc
add
inc
add
inc
