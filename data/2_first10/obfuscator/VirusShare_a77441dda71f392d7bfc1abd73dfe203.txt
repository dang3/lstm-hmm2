add
inc
inc
dec
sti
shll
pop
fcoms
stos
fst
push
xchg
popf
pushf
sub
test
mov
jl
and
jge
sahf
fnsave
clc
or
popf
mov
jo
fcmovnb
mov
cli
cmp
insl
fbld
sbb
inc
call
jns
sbb
in
sub
lahf
shr
loop
mov
xchg
addr16
je
or
jae
insl
cmpsl
sub
cltd
inc
xabort
or
mov
out
pop
ss
sbb
pop
loop
call
faddl
ret
mov
mov
adc
popf
xchg
cmp
fists
aam
cld
mov
cmp
xor
ljmp
outsl
out
lock
adc
rcrb
ja
xor
xchg
add
mov
cwtl
ficomps
ret
imul
dec
leave
mov
xor
fsts
dec
cmp
jg
cwtl
test
lret
mov
add
leave
test
repnz
fs
rcl
shrl
or
xor
addb
add
call
and
pusha
cmp
call
call
outsb
std
pusha
mov
add
or
mov
lods
movsb
das
mov
add
repz
lret
and
inc
pop
sahf
test
lods
repnz
mov
in
into
pop
fbld
inc
push
insl
push
ljmp
dec
sti
cmpsb
jp
lret
xchg
inc
mov
cmpsb
adc
scas
mov
addr16
xchg
std
shrl
mov
add
cmp
add
add
add
add
add
dec
push
add
add
add
add
add
add
add
inc
push
add
inc
push
add
inc
push
add
add
add
add
pop
inc
push
add
push
add
call
add
insb
xadd
sbbb
andl
movsb
stc
lret
xchg
or
fistpl
mov
or
mov
cmp
pop
jne
faddl
sbb
jmp
pop
outsl
or
mov
jp
insl
cs
mov
inc
xor
outsb
popa
hlt
scas
es
mov
inc
popa
jae
pop
lds
popl
jmp
add
hlt
dec
push
out
mov
fidivs
pop
sbb
mov
push
inc
iret
insb
mov
shll
insb
aas
or
dec
call
or
movsb
ss
pop
xchg
mov
mov
adc
inc
push
cmp
outsb
ret
push
and
sub
mov
or
stc
pop
into
xchg
push
gs
cmpsb
cld
and
mov
or
jb
and
xor
inc
adc
mov
repz
jne
fs
cmpsl
lods
xor
cltd
mov
lock
cli
rclb
sbb
xor
jbe
xchg
and
inc
insl
xor
jge
mov
sbb
mov
cltd
pop
sub
mov
repnz
loopne
out
mov
ret
and
mov
adc
jmp
stc
outsb
push
add
cmp
and
sub
mov
sbbl
mov
aam
into
je
push
xor
cmpsl
arpl
xchg
sahf
xchg
out
adc
xchg
ja
xchg
movsl
mov
mov
addr16
negb
dec
lcall
inc
insl
push
pop
jmp
mov
or
jnp
loop
out
and
sub
xchg
sahf
shld
add
inc
xchg
adcl
push
jnp
sahf
les
and
call
fs
scas
test
jo
jp
bound
inc
push
loop
icebp
into
insb
popl
ss
sbb
dec
sub
ret
xchg
addr16
xor
inc
mov
mov
out
aas
sbb
dec
sub
xchg
adc
loope
mov
push
add
jecxz
loope
lret
mov
mov
out
cmp
lods
sarb
inc
arpl
jb
sbb
mov
jb
js
jl
pmulhuw
cld
ja
out
mov
and
push
dec
shrb
or
fadds
ret
loope
xchg
incb
testl
push
aam
inc
das
pop
aaa
mov
icebp
pop
mov
pop
fnstsw
in
repz
enter
sbb
out
or
inc
adc
and
dec
jns
sbb
cmpsl
loope
adc
dec
popf
pop
fdivrl
cmp
jl
ret
pop
sub
xor
loop
and
stos
xor
mov
mov
add
pop
andb
sbb
ss
dec
and
dec
xchg
outsb
jae
lahf
movsb
insl
lock
xchg
mov
push
enter
xor
add
ja
testl
enter
mov
xlat
int
sub
fwait
xor
or
scas
xor
cmp
dec
mov
mov
jl
repz
out
pop
mov
cmc
and
cmp
dec
mov
gs
jb
xchg
fildll
jns
inc
jl
mov
mov
jnp
scas
or
sub
leave
push
inc
jecxz
mov
popa
cmp
mov
arpl
inc
sbb
fimuls
int
cli
repz
popf
movsl
or
loope
cmp
jo
dec
push
jno
sub
in
cltd
xor
mov
sbb
push
pushf
out
inc
add
bound
jecxz
sub
mov
fwait
aam
ja
and
call
pop
pop
sub
in
mov
inc
xor
and
push
mov
xor
pop
inc
or
or
shlb
fadds
stc
sbbb
out
mov
jl
mov
xchg
mov
dec
or
aaa
cmc
adc
lcall
pusha
loope
push
xchg
mov
dec
xchg
int
adc
xchg
push
out
jae
aas
or
sub
mov
aaa
mov
adc
dec
jle
in
mov
or
add
adc
rcrl
mov
mov
push
or
ficoms
fucomip
cmp
and
das
pop
repz
mov
or
cmp
shrd
mov
mov
mov
icebp
adc
mull
add
push
mov
jno
les
push
ror
jecxz
cwtl
fs
inc
mov
pop
jb
cmpsb
out
xchg
incl
jmp
push
sbb
out
push
jns
sti
and
mov
cmpsl
mov
iret
cmc
hlt
cmp
cmp
and
sbb
add
sub
mov
idiv
cli
inc
fucom
xchg
fs
push
jbe
mov
shrb
int
and
fstps
in
inc
arpl
cmpl
mov
adc
negb
pusha
lret
int
jge
jecxz
mov
inc
lock
push
and
sbb
popf
cmpsl
lods
inc
loope
mov
push
sub
dec
mov
arpl
xchg
cld
loopne
iret
aad
pop
das
push
ret
or
mov
mov
pop
or
hlt
aaa
and
int3
andb
js
pop
lahf
lahf
dec
adc
aam
and
int
ja
adc
lret
das
rcl
sbb
imul
daa
loopne
aam
and
jle
sarb
das
xchg
test
cli
pop
fisubs
or
jnp
aaa
dec
rorl
adc
xchg
fadd
push
push
leave
mov
pop
roll
pop
pop
and
loop
lods
popa
stc
inc
sub
hlt
pop
in
fidivs
xorl
fwait
xor
adc
pop
push
and
inc
aam
aam
outsl
fiadds
add
mov
jmp
in
mov
mov
sti
stos
outsb
jo
jl
scas
movsb
mov
and
sbb
cmp
add
mov
cli
dec
dec
xor
aam
add
test
pushf
iret
add
frstor
lods
or
loop
lret
cmp
jno
xchg
lock
out
pop
ret
mov
int
adc
sub
pop
push
andl
adc
test
sub
push
mov
push
xorl
jno
pop
test
movsb
adcb
and
mov
mov
or
in
aam
add
dec
jae
mov
ret
mov
loop
xchg
mov
push
cmp
inc
daa
mov
and
add
dec
in
loopne
inc
push
sarb
and
call
sub
aaa
test
rcr
adc
shr
out
mov
push
adc
aas
out
incl
xor
mov
sarl
xchg
in
dec
pop
dec
or
jmp
ss
mov
xchg
sbbl
mov
sbb
sub
icebp
pop
cmc
jle
xchg
lock
loope
loope
sbb
jo
adc
movl
je
add
cmpsl
adc
xchg
xor
lds
nop
jecxz
and
jo
sbb
pushf
mov
iret
movsb
andb
cmp
xlat
sub
lods
pop
sbb
sahf
negb
ja
jo
and
adc
loop
test
sub
lcall
popa
jecxz
lods
fstpl
out
lock
sbb
dec
movsb
xchg
jne
inc
in
xor
ja
outsb
jle
fdivs
cmp
nop
sbb
adcl
pop
xchg
xor
lret
stos
cmp
mov
into
push
mov
sub
mov
ret
xchg
mov
lods
lds
loop
xchg
test
ja
aad
mov
lahf
inc
xlat
out
movsb
mov
test
lret
or
or
in
or
insl
xlat
xchg
add
pop
mov
aas
aas
pop
dec
adc
pcmpeqb
adc
or
jo
mov
bound
jbe
xchg
sbb
out
and
out
sbb
andnps
loop
int
lret
out
mov
push
out
test
jmp
xchg
aam
adc
add
pusha
imul
enter
cmp
lahf
adc
jnp
mov
or
sub
rcr
popf
or
adc
andl
rol
or
cmp
ja
outsl
mov
mov
loope
mov
in
pop
push
fadds
pop
aad
into
cmp
pop
andl
cmc
xchg
push
pushw
xchg
into
testb
jecxz
cmc
pop
xchg
inc
addr16
sbb
pop
jl
mov
out
notb
jl
loopne
jp
dec
xchg
cmpsb
repnz
in
mov
into
pushw
mov
fiaddl
ljmp
add
sub
cmc
dec
lcall
lcall
pop
jg
dec
fisubrl
jle
sub
repz
stc
addr16
jmp
and
push
cmp
inc
push
shrb
roll
pop
add
icebp
aaa
push
js
adc
out
xor
out
or
pop
rolb
insl
ficompl
js
cs
das
shlb
push
jae
ficompl
add
sbb
dec
push
inc
in
sub
cltd
mov
mov
add
mov
xchg
cld
mov
mov
add
shll
or
pushf
and
add
xchg
push
lret
mov
enter
out
push
push
and
or
cmpsl
fwait
sbb
rclb
xor
call
stc
inc
in
cmpsb
and
rolb
and
fisubrl
in
push
sub
das
das
outsl
add
mov
sbb
mov
inc
mov
test
fsubl
daa
add
mov
out
jp
test
jp
cltd
out
inc
rorb
icebp
ja
es
dec
stc
dec
adc
test
stos
push
xchg
mov
push
out
xchg
adc
mul
jle
inc
in
jno
sub
cmp
dec
cmp
sbb
fcoms
out
dec
or
sbb
mov
stos
test
inc
ja
out
rolb
stos
push
insl
add
fildll
ds
lock
imull
and
addl
adc
xor
lret
push
sub
lea
cld
xor
cmpsl
push
scas
shll
sbb
rcll
push
scas
sbb
test
popa
push
cli
xor
stc
fimuls
rorl
fs
cs
loope
adc
out
or
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
fs
insb
cs
insb
add
mov
lret
bnd
mov
mov
call
push
call
arpl
push
call
gs
or
pop
push
lea
mov
movzbl
mov
call
add
inc
gs
outsl
fs
gs
imul
add
ds
call
bt
add
pushf
jmp
mov
push
jmp
test
push
push
pushl
popl
mov
stc
cmp
mov
lea
ja
or
sub
sar
rcl
rol
add
bswap
ror
ror
mov
inc
pushf
rol
sub
mov
cmp
repnz
call
push
call
pop
andl
shlb
jns
mov
inc
xor
mov
inc
stc
addr16
mov
out
jle
test
jb
fstpl
mov
and
adc
fldcw
dec
mov
aaa
icebp
lods
popa
mov
push
or
xchg
fcoms
in
xor
fisttps
mov
je
popa
lret
std
sbb
jp
jae
outsl
pop
subb
sub
movsl
or
dec
shrl
mov
imul
cmp
ja
mov
call
cmc
jo
fdiv
inc
mov
jno
xchg
cmp
sub
mov
faddl
mov
cld
add
repnz
arpl
bound
hlt
push
lods
mov
pop
cmp
jae
in
mov
add
dec
hlt
add
repz
add
std
pop
xchg
rcrb
add
xchg
addl
sbb
xchg
jl
std
out
iret
shr
xor
xor
call
pushl
popl
pushf
mov
pushl
ret
ffreep
dec
mov
adc
dec
sub
mov
cmp
or
pop
aad
push
mov
stc
and
mov
cmpsl
jb
sbb
dec
sub
add
subl
fs
pop
stos
dec
mulb
je
lcall
fimuls
fs
or
inc
mov
shrl
pop
jg
cli
mov
mov
jae
xchg
and
mov
idiv
ss
jns
inc
jmp
xor
popf
leave
ficoms
cmp
or
fdivl
sbb
xorl
shrb
pop
ficompl
call
jl
sub
or
push
xor
daa
sbb
xor
call
mov
jb
jmp
fninit
out
mov
cld
cld
rclb
cmp
cltd
call
test
out
mov
popf
mov
cltd
mov
in
subl
fisubs
xor
mov
shrl
daa
scas
test
cs
call
mov
stc
test
bound
jo
xchg
mov
shlb
and
bound
in
add
outsb
add
adc
cltd
xchg
arpl
inc
shl
push
xchg
mov
icebp
in
repz
in
pushf
and
add
es
xchg
push
push
std
push
inc
jmp
std
sub
movsb
leave
rol
aad
mov
js
mov
and
out
sbb
pusha
push
aas
shrl
test
pusha
sbb
lock
mov
pop
pop
or
xchg
sti
shr
lds
push
mov
inc
jb
xor
fsubp
std
lds
mov
lock
inc
jo
xchg
sbb
cmp
adc
push
mov
lcall
ds
ljmp
fwait
pushf
push
cwtl
out
jecxz
aad
mov
jge
fsubp
mov
push
pop
repnz
clc
pop
dec
inc
aam
icebp
int3
lods
dec
pop
bound
inc
int3
lods
cld
mov
and
or
pushl
rcll
sti
int
dec
fcomp
xor
shlb
imul
divb
rorb
sub
icebp
xchg
cmc
shrl
xor
loopnew
dec
notl
repnz
js
adc
mov
mov
bound
cmc
repz
ds
sbb
leave
cs
std
outsb
adc
jne
jp
xchg
call
jp
test
lahf
out
or
push
mov
inc
mov
ds
into
mov
sub
out
jmp
clc
nop
xchg
jecxz
bound
push
xchg
xor
lock
cld
push
and
in
pusha
pop
clc
xchg
stc
xor
jne
adcl
pop
push
data16
rorb
cmpb
das
cmovp
ret
icebp
shr
xor
jo
push
push
inc
cld
inc
out
add
ds
inc
hlt
xchg
cmp
or
add
in
div
or
mov
adc
rcl
cs
jp
mov
dec
push
mov
jecxz
jo
out
push
push
add
es
cmp
adc
cwtl
push
rcr
in
mov
cmp
repz
inc
cli
inc
negl
mov
xchg
and
test
nop
sbb
inc
push
xor
aas
jno
push
mov
sub
cli
in
cmp
mov
out
insb
pop
pop
sub
sbb
pop
mov
pop
pop
fsubrl
out
testb
mov
xor
or
addb
mov
push
xor
mov
in
cmc
or
mov
sub
xchg
outsl
loop
push
test
int3
adc
add
xor
mov
bound
xchg
lods
adc
cmc
xor
stos
shrl
cmp
pop
jne
das
pop
lock
in
sbb
sub
out
lret
lahf
mov
add
and
sbb
dec
xor
inc
int
mov
or
mov
fwait
ds
fdivrs
dec
sti
ret
push
jnp
or
pop
lea
push
lret
movsb
mov
xchg
fmuls
sub
fisttps
mov
jp
fildl
push
cmc
pop
xchg
lods
lock
mov
mov
stc
sbb
test
xor
jl
cld
mov
jne
mov
sub
mov
and
jo
ja
shl
pushf
pushf
shl
sub
jmp
push
call
in
xlat
push
push
xchg
push
lahf
ss
mov
das
jge
or
dec
jae
pusha
add
xchg
inc
sti
push
jecxz
enter
dec
pusha
pop
je
or
rolb
pop
fcmovnbe
popa
inc
jns
adc
sbb
fdivs
push
mov
xor
lcall
add
push
push
add
cs
in
clc
jl
xchg
cld
fcoml
or
jne
sbb
dec
adc
cltd
shrl
xchg
xor
rcl
bsr
pushf
mov
cmc
add
add
sar
sar
add
add
pushf
setle
pushf
mov
clc
jmp
fistpl
jecxz
ret
test
push
sti
adc
adc
inc
mov
mov
mov
adc
inc
xchg
and
dec
dec
shll
fldl
cmp
lods
push
push
lds
adc
mov
xor
sub
out
mov
sahf
loope
call
sbb
jo
or
notb
jmp
popa
lods
rorl
movsl
outsl
push
cmp
insl
andb
int3
xor
test
notl
hlt
pop
arpl
sahf
jo
aas
fimull
pop
psubw
cwtl
jge
jo
sbbb
or
mov
imul
xlat
lcall
movsl
test
lea
rorb
xor
add
mov
andl
call
pop
jmp
test
mov
and
push
vscalefps
jp
jns
je
or
mov
sub
shlb
je
out
mov
aam
outsl
call
jne
xorb
ja
xchg
mov
lock
cmp
inc
shrl
mov
cmpsl
gs
into
jg
nop
pop
inc
dec
push
dec
sbb
insb
and
hlt
ja
mov
add
int
enter
pop
adc
dec
push
cmpsl
iret
mov
ret
cmp
adc
cltd
enter
outsb
shrl
push
jae
push
call
mov
sbb
rorw
js
and
inc
mov
pop
arpl
and
fdivrp
movsb
mov
ret
out
cltd
xor
adc
dec
ljmp
daa
xchg
insl
aaa
es
fcmovnbe
sub
aaa
push
jmp
js
je
push
inc
or
aas
push
or
nop
jns
cmovp
icebp
outsl
lds
aad
adc
sbb
mov
mov
mov
mov
xorb
push
mov
or
mov
jno
decb
iret
mov
fnstsw
xchg
mov
in
aad
es
in
int
shl
push
sub
pop
pop
xchg
jecxz
jbe
cmp
and
test
data16
push
dec
scas
iret
or
xchg
push
pop
lods
imul
repz
push
dec
fcoms
mov
cmp
pop
pop
in
xchg
movsb
test
cmp
jb
js
mov
je
inc
jle
add
jae
stos
pop
pop
jmp
shrl
mov
mov
add
jb
jne
insb
inc
jb
add
and
fisttpll
xchg
out
inc
jmp
push
call
inc
and
and
push
call
jo
push
or
push
call
cmp
jl
mov
push
loope
shll
xlat
sub
and
lahf
sub
adc
adc
inc
not
xchg
movsl
lcall
loope
out
or
adc
sub
fidivrs
xchg
jns
mov
sub
xor
jg
push
sub
mov
lds
mov
inc
pop
shll
movsb
jnp
push
lods
loope
scas
sbb
mov
incl
mov
jbe
stc
shrl
icebp
mov
push
clc
clc
add
push
push
lea
jmp
stc
push
cmp
movb
pushf
jmp
jmp
daa
jl
sbb
or
mov
xor
add
dec
subl
popf
fwait
xor
adc
sub
lods
xchg
jo
arpl
adc
push
out
icebp
cmpsl
insb
imul
das
icebp
jle
cld
cs
cmp
mov
in
adc
mov
aas
add
dec
subl
push
test
das
pop
subb
loop
fiaddl
jp
cli
jnp
shrl
mov
bt
stc
ror
call
pusha
call
leave
sub
push
cmp
and
cmovno
popa
cmp
les
xor
adc
push
pushf
xor
cltd
cmc
dec
jbe
movsb
lcall
mov
enter
hlt
dec
mov
daa
iret
jbe
adc
mov
mov
sbb
lcall
xchg
je
test
outsb
cmc
aam
inc
aas
inc
dec
sub
in
imul
sub
cmp
mov
jne
push
lea
sub
push
mov
popf
dec
sarl
sbb
lea
inc
push
sub
push
or
sub
repz
lds
xor
mov
in
jne
jno
jp
jnp
xchg
xchg
xor
in
loopne
jle
dec
cld
stc
cmp
mov
shrb
test
inc
xchg
in
push
fs
in
and
xor
push
out
insl
divb
xchg
inc
jl
cs
inc
push
sbb
lods
in
pop
loopne
mov
ss
cmpsb
cmp
cmpsl
xchg
pop
ss
aam
not
mov
pop
sets
lea
jmp
ret
xchg
add
add
cld
mov
push
mov
dec
xor
ficompl
movsl
lods
sbb
mov
dec
test
hlt
outsl
cmp
sub
or
in
cltd
fwait
daa
shrl
sar
mov
pushf
sbb
jmp
push
and
add
sbb
push
and
adc
cmp
dec
add
test
or
xchg
lahf
jno
xor
ds
xchg
mov
sbb
arpl
sub
ljmp
add
leave
dec
dec
movsl
adc
dec
adcb
xor
cmp
push
daa
mov
cmpsl
sbb
adc
lods
jb
mov
cmc
sub
fcomi
mov
jmp
sub
sub
repz
mov
sar
mov
push
daa
flds
xor
aaa
out
call
mov
jae
inc
cmpsb
xlat
repnz
es
push
enter
andb
sbb
aaa
das
lods
dec
xchg
jo
push
arpl
push
mov
and
lods
push
enter
sub
ljmp
fwait
or
mov
popa
push
xchg
jmp
jno
ljmp
out
mov
push
fst
ror
xchg
jp
add
push
pop
bnd
outsb
mov
sti
inc
sub
shrl
std
bound
enter
or
pushl
movw
lea
jb
cmp
stc
cmp
push
pusha
pushl
lea
ja
clc
cmc
add
pushf
pushf
cmp
cmp
pusha
movb
pushf
call
mov
mov
jmp
les
leave
fwait
addr16
jge
jge
loopne
add
or
mov
xor
push
xor
mov
mov
xchg
adc
pop
loop
and
gs
push
repnz
int
pop
xor
aas
add
fstps
cmpsl
fdivr
leave
aad
jo
lods
fs
xchg
int
mov
pop
ss
shlb
popf
nop
fwait
cmp
xchg
mov
push
mov
loop
or
insl
mov
rclb
outsb
and
clc
xor
into
push
cltd
call
mov
ficomps
dec
call
daa
aam
sbb
cmp
aam
int3
pop
adc
mov
es
adc
push
sub
test
je
jle
or
ret
add
in
cwtl
mov
sub
jns
lods
cld
adc
sarb
pushf
out
xchg
pusha
inc
loopne
or
nop
sbb
hlt
xorps
mov
fwait
xchg
fimull
divl
in
lods
pop
pushf
inc
adc
hlt
sbb
out
je
movsl
dec
rol
mov
cmp
add
cmp
sub
push
pop
clc
xor
jae
lock
sub
sbb
pushf
enter
stos
or
inc
cltd
lahf
sar
mov
leave
xchg
xlat
outsl
dec
arpl
enter
sbb
xchg
mov
loopne
lret
or
test
dec
incb
out
out
push
xchg
pop
inc
adc
cli
cmpsb
mov
lea
mov
shll
pop
into
and
inc
shrl
xlat
incb
jmp
stc
pusha
bt
cmp
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
jns
or
pop
xchg
cmpsl
iret
adc
test
jmp
sub
imul
stc
aaa
lcall
in
gs
in
add
sub
mov
dec
rclb
pop
sub
test
cmp
pop
add
sub
xchg
sub
int3
adc
int3
push
cld
xchg
ret
fwait
out
pop
arpl
jl
ror
inc
pop
out
sahf
jg
jg
clc
loope
push
shrl
enter
add
and
sbb
lea
call
call
push
call
cmpsl
out
rorb
add
dec
mov
or
jle
add
pushf
call
mov
movzbl
lea
mov
pushf
jmp
andb
jo
pop
movsb
push
sbb
xor
push
xor
cmc
ret
out
mov
scas
adc
mov
lods
popa
fistpl
jmp
mov
add
jo
cmp
dec
sub
je
sbb
mov
mov
jecxz,pn
add
mov
shrb
push
lods
add
imul
mov
js
dec
adc
aam
pop
and
dec
loope
out
ss
sub
fadd
dec
lcall
and
sub
xor
pop
pushf
dec
call
mov
sahf
icebp
dec
call
push
xchg
or
lea
jae
and
movsbw
xchg
movsbw
mov
lea
mov
shl
cmc
mov
pusha
clc
xor
cmc
clc
repnz
push
pushf
lea
jne
lea
rol
mov
stc
test
sub
shrd
sub
rcl
mov
cmc
pushf
test
sub
stc
stc
pushl
popl
cmc
cmp
cmp
test
cmp
pusha
pushl
pushf
lea
ja
rcl
ror
shl
shl
sub
sbb
add
pushf
mov
jmp
push
call
jmp
or
pop
pop
mov
je
pop
add
mov
aad
push
mov
mov
pop
dec
in
adc
pop
push
adc
lock
andl
adc
and
mov
shl
les
lret
add
stc
test
push
mov
and
mov
clc
push
fcmovnb
pop
lret
nop
mov
sub
rcr
xlat
cs
scas
out
test
shrl
sti
cmc
jge
sbb
pusha
xor
mov
les
dec
addr16
aad
cwtl
sahf
loope
mov
cmp
sbb
in
add
or
out
lods
into
stos
shrb
aam
rcl
in
enter
out
adc
inc
mov
test
push
dec
popa
fidivrs
pop
mov
and
movsb
cmp
sarl
mov
and
bound
push
aam
imul
sub
call
pop
pushl
popl
test
cmp
mov
pusha
jmp
pusha
inc
jmp
push
call
dec
insb
jae
std
out
cwtl
loop
and
push
cmp
into
clc
hlt
push
shrl
inc
and
sbb
test
jno
mov
push
movb
aas
bound
and
dec
jecxz
adc
push
or
dec
repnz
cmp
add
cs
sbb
std
out
incl
vmovsd
imul
repnz
lret
sahf
clc
int
lock
sbb
lret
mov
adc
and
add
lods
pop
dec
mov
sub
cli
arpl
dec
pop
inc
shrl
mov
icebp
fcom
je
push
push
cvtpi2ps
add
insb
sub
sub
jge
hlt
lds
int
jno
and
pop
mov
xchg
sub
out
xor
push
adc
mov
sbb
jno
imul
clc
rorl
sub
cs
mov
jnp
cltd
pop
stc
jg
test
mov
int3
mov
punpckhdq
jbe
jae
call
andb
push
pop
mov
mov
in
adc
gs
test
and
and
sub
pushf
or
insb
and
inc
add
mov
xor
mov
sbb
jg
insb
in
xchg
pop
dec
xchg
xchg
mov
push
or
sub
and
pop
lret
adc
cmpl
jmp
jbe
mov
dec
dec
insb
mov
xchg
scas
cmpsl
aas
or
ss
orb
and
or
sbb
cli
jnp
icebp
hlt
ljmp
jle
sbb
sbb
pushf
and
stc
sub
daa
inc
adc
in
pop
jp
movsl
pop
push
mov
sub
in
jl
stos
xor
pop
cmp
mov
inc
xchg
rcr
xchg
dec
push
push
enter
xor
xor
cld
aaa
aaa
mov
cltd
movhlps
sub
or
push
insb
jbe
and
pop
mulb
xor
leave
lret
mov
dec
popa
imul
pusha
mov
cld
addb
fnstenv
mov
aam
adc
leave
call
sti
mov
loope
cmpsl
add
sti
mov
sub
sahf
shrl
repnz
xchg
cltd
adc
je
mov
in
push
ficompl
push
test
enter
insb
test
push
loope
adc
dec
push
jnp
pop
pop
xlat
push
in
cmp
lock
jle
jne
test
cmc
cltd
sub
adc
mov
mov
mov
pop
mov
rcl
sub
mov
lods
push
adc
xchg
daa
pop
adc
sbb
mov
test
xchg
mov
jo
mov
repnz
adc
push
pushf
ret
ja
es
fdivrs
loopne
cmp
adc
divl
sbb
cmpsl
rorl
dec
jg
movsl
lret
stos
jae
mov
sbb
mov
mov
push
leave
mov
jle
pushf
fcomip
rorl
cmp
or
fdivl
inc
jge
repnz
in
fildl
repnz
push
shrl
outsb
xchg
jno
pop
push
pop
adc
lret
int3
icebp
xor
pop
dec
ja
jns
xor
insl
dec
mov
pop
test
dec
popa
xorb
lret
insl
andl
push
insl
shrl
push
test
incb
adc
jg
mov
add
fsubr
mov
add
xlat
adc
xchg
sub
js
pop
adc
pop
loopne
in
rcl
inc
push
jle
aaa
loope
mov
mov
test
cli
xchg
sub
and
fmull
clc
hlt
ret
inc
cmc
imul
stos
int
cli
test
in
mov
cmp
sub
jecxz
mov
loop
jl
movsl
jne
jl
pop
fstpl
sahf
and
cwtl
push
push
nop
addr16
loopne
arpl
mov
ret
shrl
pcmpgtb
add
fsts
rorl
aas
aad
shr
cmp
dec
push
sbb
es
and
aas
stos
and
in
mov
int
add
sahf
cmp
iret
test
xor
lods
cmp
popf
movsl
aas
cmp
out
subb
out
repnz
fidivrl
mov
inc
movb
push
out
jb
sub
test
jns
add
movb
call
call
fs
adc
inc
mov
shlb
jnp
inc
ret
dec
andl
inc
cltd
cmpsl
lock
mov
mov
lods
shlb
inc
dec
jp
adc
ret
inc
pop
je
js
cwtl
inc
jmp
mov
mov
fbstp
push
lret
xchg
and
or
sub
fwait
loope
adc
out
fisubs
into
cwtl
adc
into
aaa
jle
loope
shrl
or
cld
mov
aaa
iret
roll
cmp
and
ret
aad
dec
and
nop
stos
mov
pop
loopne
jp
lods
pop
cmp
sbb
add
sarl
xchg
aad
imul
pop
sub
test
ss
rorb
and
sbb
cmp
imul
pop
gs
sbbb
sub
cmpsb
lret
xchg
std
mov
or
loop
shrl
or
sub
pushf
les
mov
outsl
dec
or
lahf
mov
cltd
lods
test
jl
pop
lods
mov
mov
adc
out
cmp
mov
ljmp
pop
mov
cmp
cmp
add
lea
in
nop
mov
movsl
repz
out
scas
sbb
adc
mov
xchg
or
mov
test
cmp
lahf
mov
in
xor
jge
mov
cmc
popa
test
fcmovu
mov
aaa
push
gs
lods
sub
cmpsb
xchg
and
ss
push
inc
and
clc
movl
sahf
test
xchg
fs
dec
and
inc
inc
adc
lea
mov
loope
stos
ds
cltd
mov
insb
mov
shll
xchg
sub
lods
loopne
mov
mov
add
aaa
push
cmp
push
mov
add
out
jb
ret
rolb
lds
inc
adc
mov
ljmp
inc
mov
aam
pop
test
add
aaa
push
call
cld
sub
push
sub
call
out
fisubrl
scas
xchg
cltd
call
fildl
push
hlt
dec
cmpsb
pop
inc
popf
repz
push
dec
xor
movsl
mov
in
mov
mov
lea
lahf
push
or
jnp
sbb
cmovae
pop
inc
inc
lods
leave
inc
mov
push
jmp
or
cli
scas
in
testl
outsb
es
das
cmp
xor
jnp
in
mov
dec
or
inc
mov
jo
mov
sub
in
data16
test
xchg
mov
xchg
mov
cltd
or
sbb
and
mov
mov
into
cmp
mov
cld
addr16
pop
int3
add
mov
xchg
cs
xchg
cwtl
push
jmp
jge
dec
fsubl
mov
mov
out
jecxz
test
sti
xlat
xchg
push
add
lcall
jb
mov
aaa
ret
dec
lcall
add
test
shl
lret
cmp
add
inc
test
inc
je
pop
cmp
fnop
xchg
mov
cmp
aam
and
xchg
cmp
sub
test
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
push
test
call
mov
push
call
push
int3
in
in
xchg
push
jb
add
pop
mov
bound
dec
and
xchg
cmp
lcall
sbb
icebp
jne
out
stc
dec
or
or
cld
movsb
sub
mov
insl
push
sub
stos
popa
inc
push
lds
cld
or
or
inc
mov
fdivr
mov
inc
mov
pop
std
leave
sti
cmp
pop
leave
xlat
scas
pop
xchg
sbb
mov
ret
gs
jnp
stos
test
jo
sub
inc
xchg
lock
shrl
jle
push
clc
add
push
stos
adc
lods
dec
sbb
push
lret
or
mov
mov
popa
mov
push
popa
rcr
in
fiadds
fdiv
or
xchg
mov
adc
icebp
jecxz
push
bound
mov
scas
inc
aad
cmc
cli
aas
sbb
testl
or
sub
adc
mov
rclb
push
inc
loope
jns
fimuls
push
rol
call
addb
and
scas
rolb
in
mov
clc
and
lods
adc
lret
mov
mov
daa
mov
rcrl
imul
mov
xor
idivb
mov
rclb
inc
aam
inc
out
sub
pushf
xchg
cmp
mov
sarb
mov
and
adc
cmp
imul
xchg
inc
pop
mov
rorb
cmp
sbb
and
adc
push
or
pop
mov
leave
pop
ja
sub
sub
cmpsb
fcmovnbe
call
push
call
push
in
stos
je
fcompl
leave
add
leave
sbb
dec
fildl
popf
call
xchg
xor
sub
xchg
push
cld
mov
orl
cmpl
mov
pop
push
lahf
fiaddl
pushf
in
enter
mov
pop
and
xlat
add
cmc
sahf
arpl
xor
loop
xor
inc
movsl
in
ret
in
mov
mov
pop
repz
stos
fwait
and
sub
xchg
outsl
shrl
mov
xor
lea
jg
xchg
push
dec
call
aam
jecxz
mov
test
or
push
ljmp
loope
adc
roll
pop
and
push
jae
pop
mul
pop
inc
mov
push
out
sbb
mull
xchg
mov
xchg
xor
std
out
add
call
xchg
fs
cmc
cmp
call
xchg
sbb
hlt
repnz
stc
int
mov
lods
push
xchg
inc
cmpsl
es
adc
mov
push
mov
out
mov
in
jns
imull
xchg
mov
push
xchg
fimuls
or
xlat
loopne
daa
adc
inc
pop
stc
or
add
out
loopne
cld
shr
daa
cli
test
mov
jb
imul
mov
sub
push
subl
nop
xchg
sub
ret
xchg
or
cli
and
xor
sbb
test
jmp
and
out
imul
bound
scas
in
push
and
xor
enter
test
notl
dec
xchg
pop
inc
enter
pop
popf
aad
test
inc
repnz
sahf
cmp
mov
push
mov
subl
shrl
xor
add
pushf
cmp
mov
sub
lea
cmp
stc
or
pusha
push
pushf
lea
je
pushf
pop
not
mov
cwtl
push
pushf
jmp
movb
call
sub
pop
bound
xor
cmp
decb
icebp
aas
push
push
fwait
out
les
push
insb
repz
lret
add
push
jnp
leave
pop
mov
aaa
out
outsb
ja
shrl
ss
push
call
scas
push
call
xor
fcomps
add
mov
in
sub
das
repz
dec
jno
jb
add
xchg
mov
out
jne
orl
icebp
dec
in
cltd
pop
repz
mov
fmulp
ret
sbb
ljmp
and
in
loopnew
outsb
shll
mov
aad
xor
fwait
adc
mov
push
dec
or
xor
stc
call
jb
rclb
pop
popa
notb
iret
jle
sub
sub
aas
mov
bound
cltd
or
les
das
test
mov
iret
lret
mov
pop
jle
leave
fs
adc
clc
cmc
pop
mulb
lea
xor
inc
mov
xor
in
push
iret
imul
clc
fmuls
push
outsb
pop
stos
mov
cmp
mov
pop
fsubrs
mov
ret
xchg
leave
adc
sub
jle
and
fsubs
mov
bt
cld
popf
pusha
push
lea
jmp
push
call
sbbl
xchg
or
push
popa
es
sub
mov
aaa
test
adcl
scas
jae
and
inc
pop
cmp
mov
dec
xor
mov
fs
pop
xchg
jo
mov
push
shrb
mov
jle
fs
add
cmc
cli
mov
call
aad
push
addr16
pushf
xchg
insb
push
sbb
cltd
stos
js
adc
aad
lret
fcoms
inc
sub
outsl
sbb
outsl
fsts
push
push
or
hlt
dec
cmp
adc
stc
cmp
movsl
add
gs
sbb
mov
test
addb
sub
cmp
jle
inc
lret
add
sub
inc
popa
insb
imul
test
xlat
adc
sub
inc
dec
dec
insl
loope
fisttpl
sbb
out
dec
push
pushf
mov
cmpsl
sarb
movsb
jecxz
push
adc
mov
or
dec
insl
das
xchg
cmp
mov
xor
jge
add
and
andl
retw
cmpsb
bound
aaa
sbb
out
fildll
push
pop
das
xor
je
adc
mov
inc
and
jge
sar
lret
movb
loopne
fcomp
stos
in
js
adc
adc
dec
scas
inc
ljmp
insb
dec
push
mov
pop
inc
imull
ret
scas
scas
popf
push
testl
mov
fsubrl
in
xor
in
lret
in
sbb
xor
sub
mov
mov
mov
jbe
and
dec
jl
push
sub
and
push
addr16
mov
es
xlat
sub
sbbl
lock
outsb
mov
daa
ss
cld
movsl
jle
movsb
mov
popf
test
pop
sti
rorl
fwait
jmp
incl
shrl
push
test
pushf
in
aaa
mov
in
sahf
mov
xchg
fcom
pop
call
inc
clc
popf
and
ljmp
mov
or
pop
std
imul
jecxz
and
mov
jg
pop
kmovb
pop
adc
mov
xchg
mov
filds
dec
imul
and
jo
xor
mov
mov
test
sub
incl
sbb
add
pop
mov
cmpsl
pop
insb
jmp
das
test
ds
decl
sbb
xor
pop
and
adc
outsb
shll
cwtl
or
dec
dec
arpl
sub
ret
jp
mov
insl
xor
shrl
pop
data16
cld
into
cmp
adc
mov
xchg
jmp
fidivrs
outsb
push
sbb
loope
outsb
dec
out
out
mov
mov
pop
sub
xadd
add
test
out
pop
xchg
js
pop
shrl
insl
push
xchg
call
pushf
mov
int3
dec
and
sub
mov
jp
mov
ret
addr16
sub
xchg
and
and
mov
repz
push
or
dec
ljmp
fs
jo
push
push
not
jae
mov
sbb
inc
jnp
and
sub
sub
cli
jns
mov
int3
sti
fninit
xor
cmp
cli
loope
test
orl
dec
pop
mov
or
add
ds
xor
sbb
inc
popa
sub
shrl
dec
dec
xor
or
or
push
bt
cmpb
movb
lea
jne
bswap
bswap
shrd
stc
mov
clc
pushf
cmc
add
cmp
call
iret
add
test
inc
mov
mov
xlat
cmp
es
lea
aaa
repz
pop
sub
out
insl
jmp
mov
adc
daa
icebp
mov
dec
sub
insl
inc
push
sbb
and
or
lods
orb
repnz
lea
repz
pop
aad
sbb
jecxz
fisttpll
sub
faddl
cld
mov
lea
pusha
push
mov
mov
call
push
call
mov
push
call
mov
fs
jne
cmc
call
popa
xchg
movsb
insb
mov
xchg
pop
jne
mov
pop
icebp
jl
out
push
addr16
mov
fcomps
stc
es
out
nop
or
xchg
fs
xchg
out
adc
add
pop
cmp
lret
sbb
lret
xor
adcl
out
call
dec
out
into
imul
xchg
rorl
push
mov
aad
mov
rorl
ret
outsb
std
mov
cmc
and
push
sbb
shrl
mov
lcall
pop
sbb
jae
bt
cmp
push
call
push
lea
jl
push
stc
push
pushf
pusha
jmp
push
call
ret
aas
mov
leave
jl,pn
mov
shlb
jmp
jge
dec
and
lock
movsl
mov
stos
xlat
icebp
jnp
inc
into
sbb
cmp
or
cmp
jmp
dec
sbb
pop
insb
daa
jb
sbb
pop
xor
sub
enter
mov
or
cmp
xor
loopne
pop
loope
and
sub
jno,pt
shrl
jg
dec
push
call
les
dec
call
cmpsb
cmp
mov
push
xchg
insl
mov
dec
sbb
and
into
jmp
out
inc
xchg
imul
cmp
shr
cmp
mov
or
cmpsl
ret
andb
arpl
adc
sbb
int3
mov
clc
push
outsl
orb
jno
jb
dec
ret
aas
jno
inc
gs
add
cmpsb
lret
push
sbb
mov
stos
mov
dec
aas
in
rolb
ja
sbb
shrl
je
xorl
adc
sub
ss
mov
mov
add
lods
lea
xchg
movzwl
push
pusha
pushl
lea
call
push
call
inc
jae
std
push
xchg
in
xchg
or
sbb
cltd
mov
sub
jmp
and
ficomps
inc
and
cwtl
jmp
out
imul
cmp
sub
test
jg
sbb
inc
sub
idivl
pushf
push
into
push
jge
lods
and
and
xlat
aad
lods
inc
popf
fsts
push
movsb
icebp
pop
int3
aaa
dec
cmpsb
jmp
mov
hlt
jg
test
int
dec
cmp
inc
mov
xor
cltd
ja
fcompl
int3
xor
push
lock
push
push
push
ja
icebp
shrl
out
xchg
push
call
jbe
sbb
mov
lea
ja
rcl
add
pusha
inc
mov
pushf
test
bt
cmp
call
pushl
lea
jne
xor
xor
shr
bswap
setb
mov
or
add
push
setg
mov
clc
test
mov
test
jmp
pushf
call
add
add
push
call
xchg
and
test
or
and
add
mov
cmc
rol
cmc
sub
inc
stc
bswap
bswap
mov
pusha
cmc
pushf
bt
sub
jmp
push
dec
dec
dec
dec
cs
insb
add
add
insb
inc
imul
dec
call
enter
jne
testl
add
test
pushl
ret
mov
movzbw
lea
pusha
pushf
xchg
bswap
pop
cwtl
not
pushl
popl
sete
mov
mov
jmp
push
out
push
add
outsl
ror
fwait
dec
xor
call
ds
fadd
push
stc
push
dec
dec
adc
jmp
sbbl
call
filds
jp
cmp
sub
dec
ja
add
inc
inc
addl
mull
mov
mov
bound
movsl
pushf
fs
imul
ret
or
out
push
sub
sahf
lret
cmp
jb
call
lea
jbe
jmp
loopne
xor
cmp
cmp
jne
adc
lock
jno
je
cli
cmp
pusha
mov
ljmp
sbb
shll
cli
ljmp
bound
popa
hlt
mov
aas
stc
in
mov
movsb
or
aam
push
pop
mov
push
push
xchg
lret
testb
hlt
mov
mov
hlt
lods
mov
cltd
rcr
jbe
cltd
fstps
inc
sub
or
out
add
gs
sbb
mov
mov
inc
mov
ss
push
cmpsb
mov
push
xor
movsl
pushf
mov
pusha
pop
fbld
stos
pop
push
mov
sti
add
dec
push
adc
xchg
insb
push
dec
repnz
jecxz
fwait
mov
out
bound
insl
jbe
xor
jns
cs
test
rcll
sub
pushaw
cmp
adcl
xor
dec
int3
mov
and
pop
outsb
inc
adc
imul
mov
push
xchg
or
jns
outsb
xchg
js
add
add
add
shrl
push
mov
push
call
mov
mov
mov
and
mov
add
add
mov
jo
mov
jle
insl
nop
adc
dec
mov
mov
mov
add
xchg
push
add
add
lea
xlat
inc
push
rcll
cmpb
fisubrl
into
push
jnp
push
cltd
shll
pop
movhps
pop
xchg
pushf
pop
aaa
leave
hlt
lods
adc
or
out
cmp
lods
stos
xchg
fwait
mov
stos
stos
sarl
andl
add
lea
jae
stc
bt
pushf
cmp
pusha
pushf
lea
ja
push
not
jmp
movb
pushl
popl
movl
pushf
mov
movw
pushl
ret
pushl
pusha
lea
jne
pusha
mov
pusha
movb
pushl
lea
jmp
pushl
popl
pushl
pushf
pushl
pushf
pushl
ret
out
adc
loop
push
shll
clc
inc
pop
mov
loopne
sbb
xor
ja
mov
mov
cmp
cs
lahf
pop
in
and
vpcmpeqw
or
or
jmp
out
leave
mov
in
test
notl
inc
fldl
mov
push
fcomi
inc
arpl
pop
mov
xchg
pop
mov
fucom
or
inc
out
filds
and
cmp
lods
ja
je
adc
mov
mov
std
add
sub
sbb
stos
in
inc
mov
fisubs
call
or
cmp
sub
movsl
pushf
sub
sub
pushl
xchg
pop
xchg
movsl
testl
add
bound
sbb
pop
out
or
jae
push
xchg
cld
mov
pop
push
mov
out
std
mov
out
std
add
out
pop
mov
xlat
in
xchg
aas
ret
and
mov
int3
push
out
testl
into
pop
sub
sub
add
sub
call
sub
or
sbbb
cmpsl
daa
lret
inc
popf
dec
and
inc
sbb
nop
mov
scas
nop
ljmp
cmpl
xchg
sub
mov
mov
sbb
xor
xor
or
sub
dec
adcb
daa
or
and
mov
leave
and
cwtl
mov
cmpsb
cmpsb
insl
inc
shll
or
xor
int3
outsl
jmp
push
fwait
jp
mov
bound
fs
insl
push
inc
es
dec
push
loop
xchg
xor
fidivrl
hlt
dec
movsb
push
ret
dec
xorl
fwait
dec
xchg
sahf
cmp
repz
loopne
sbbl
cmp
and
mov
test
push
fwait
ret
mov
and
lea
or
adc
aaa
sub
adc
mov
xchg
test
sahf
xchg
fidivl
out
and
xor
mov
test
push
adc
mov
jmp
fstps
and
sub
rorb
shrb
mov
sahf
loopne
dec
pop
xor
orb
stos
icebp
dec
push
pop
push
dec
sub
sbb
aas
adc
mov
pop
mov
daa
nop
loop
mov
lcall
push
and
imul
mov
sbb
or
push
sub
mov
cmp
sub
inc
pushf
dec
cmp
or
sbb
test
sub
cmp
pop
xchg
sbb
in
pop
sub
mov
addl
xchg
repz
sti
xchg
cwtl
cs
je
mov
add
cwtl
sti
xchg
fsubrs
gs
dec
out
mov
clc
lcall
sbb
mov
cmp
aaa
cmp
sbb
push
fsts
push
or
mov
mov
sub
mov
stos
pop
lret
imul
push
pop
mov
lret
xchg
fwait
test
mov
and
mov
and
mov
addb
test
sbb
mov
push
cmp
orl
mov
cmpsl
int
sahf
mov
jmp
push
adc
adc
sbb
push
inc
mov
push
notl
dec
push
adc
nop
xchg
cmp
in
fst
aas
test
sbb
mov
cmpsl
imul
pushf
sub
jmp
imulb
stos
cld
jl
enter
mov
push
xchg
movsb
pop
jnp
loope
add
test
jns
mov
and
xorl
leave
sbb
cmpsl
jge
cmp
sub
add
out
shrb
in
stc
dec
sbb
ss
fmul
jp
cmpsb
jnp
lret
jne
dec
in
adc
pop
lret
dec
imul
sub
les
xor
lcall
or
or
xchg
sub
or
sub
pushf
mov
add
cmp
jne
xor
daa
ljmp
pushf
imull
jl
sub
into
cltd
stos
sbb
std
sbb
inc
es
dec
push
cmp
outsl
ret
sahf
push
lahf
and
sub
out
aas
sub
pop
sbb
dec
pushf
sahf
aam
cmpsl
adc
dec
cmpsl
mov
addr16
pushf
ja
movsb
fidivrs
or
fidivl
inc
mov
or
les
mov
repnz
aad
arpl
aam
mov
js
jno
cs
mov
ljmp
rcrl
or
xchg
inc
addr16
xor
add
test
stc
insl
jge
mov
popa
and
lret
lods
inc
fucomip
xor
cmp
xchg
popa
fisttps
or
rep
sbb
xor
data16
pop
jnp
push
xor
cmp
jno
jmp
sti
dec
loope
adc
xlat
or
test
adc
and
mov
jo
lcall
shll
xor
test
xchg
and
idivl
mov
dec
stos
dec
inc
clc
sub
ret
cmp
mov
sti
lret
repnz
mov
imul
inc
cmp
push
std
fidivrs
or
int3
imul
dec
or
data16
repz
and
int3
mov
clc
xchg
das
push
push
stos
push
nop
xor
cs
mov
aam
clc
stos
adc
and
gs
lods
cli
xor
leave
cmp
mov
xchg
mov
test
inc
cs
xchg
insl
popf
fcoml
cmpsl
mov
lods
xor
ret
enter
add
cmp
xchg
push
adc
subl
jmp
sub
xor
jp
dec
jnp
popa
or
data16
mov
in
bound
aas
jp
sbb
cwtl
daa
sub
into
inc
cmpsb
lea
mov
or
add
ret
mov
xchg
jmp
adc
in
inc
stos
mov
cmp
dec
or
push
das
mov
sarl
and
adc
adc
xor
ljmp
jae
aad
mov
jno
mov
cmp
aam
xor
lds
unpcklps
shll
mov
adc
fcomp
xor
xor
inc
jg
in
outsb
subl
adc
push
mov
popf
fs
ja
lcall
add
inc
imul
aas
lods
dec
jmp
pop
push
rorb
ds
push
sbb
and
push
jle
jb
xor
xchg
jmp
sub
ret
ljmp
pushf
mov
sub
lcall
aad
mov
int3
daa
pop
lahf
mov
dec
lcall
fnsave
sub
mov
outsl
out
xchg
jo
or
xor
sbbl
xor
rcl
sub
sti
mov
rcrb
mov
lcall
mov
insl
outsl
aad
xchg
xor
push
ljmp
decb
mov
xor
dec
fucom
inc
jno
xchg
push
or
push
test
lret
das
or
xchg
mov
mov
or
test
out
push
fs
cmp
sbb
test
cs
in
push
imulb
mov
mulb
cmpsb
jle
enter
mov
jnp
xchg
add
sbb
inc
rcll
cmp
sub
mov
adc
fmull
xchg
push
outsb
xor
fnstcw
es
push
xor
hlt
testb
jmp
inc
addb
jecxz
movsl
cs
pop
adc
mov
popa
aam
cmpsl
adc
outsl
lea
or
adc
sub
mov
cmpsl
popf
push
test
push
daa
and
mov
pop
sbb
cli
mov
or
jb
push
movsl
push
je
or
daa
xchg
pop
xchg
loop,pt
loope
aaa
cmpb
repnz
mov
cld
mov
adc
jle
repz
aaa
xchg
xor
dec
cmp
xchg
cmpsl
cld
call
aas
mov
fstpt
push
dec
pushf
xchg
push
sbb
pop
pusha
or
sahf
sub
dec
hlt
push
mov
int3
inc
mov
xor
push
jl
int3
fiadds
arpl
add
adc
cmpsb
adc
jle
int3
hlt
push
sub
dec
sbb
cmc
jne
into
jnp
into
jmp
loope
imul
std
xor
ss
cmp
repnz
jne
aad
add
jmp
jae
add
or
ret
into
sub
pop
bound
das
outsl
lret
cmp
lcall
xchg
pop
icebp
arpl
shl
jne,pt
or
into
loope
cmp
or
outsb
test
in
adc
daa
sub
outsb
dec
mov
cld
mov
push
add
or
pusha
je
xchg
inc
fwait
mov
cmp
sbb
sbb
xor
jae
and
jae
jl
jmp
dec
push
stos
mov
lods
es
mov
stos
es
xor
mov
popa
test
enter
mov
add
mov
pop
push
mov
or
pop
adc
lods
mov
pop
mov
mov
dec
repz
cmp
imul
and
mov
xor
fcmovbe
push
sub
in
sub
push
or
push
cs
and
or
aam
add
or
cmpsb
or
fcomps
jns
cmc
sbb
lahf
ja
mov
mov
in
mov
lods
sbb
and
decl
stos
xor
adc
adcb
sub
add
sbb
ret
bnd
mov
push
lds
std
xlat
push
movsl
stos
jo
aam
or
push
mov
call
jle
sub
mov
fs
sub
push
or
or
cmp
mov
inc
out
jno
es
fmuls
test
cmp
adcb
fildl
lods
jp
sub
push
cmpsl
into
mov
push
add
or
out
push
mov
xor
out
fistl
sub
pushf
jle
fsubl
lret
dec
xor
sub
jo
and
dec
xor
or
das
pop
pop
scas
sub
pop
push
mov
add
add
fistps
adc
sbb
push
jle
fcoml
sbb
ret
in
push
lret
xchg
nop
call
push
cmpsl
cmp
pushf
aam
movsb
addr16
lcall
outsl
jns
xchg
test
mov
pusha
xchg
pop
sbb
xor
cmpl
enter
out
adc
push
or
cmp
and
xor
and
xor
je
xchg
mov
adc
cmp
sti
add
imul
mov
mov
lods
or
test
das
test
mov
bound
in
sub
test
aas
add
or
lahf
repz
fildl
cmpsl
sete
inc
sub
rcrl
pusha
pop
in
cs
mov
mov
outsl
aam
xor
roll
push
xor
sahf
js
pop
xchg
popf
cs
push
dec
and
xor
and
mov
mov
stos
rolb
movsb
pop
sub
sbb
and
push
imul
dec
mov
mov
xor
dec
push
and
imul
dec
and
lahf
pop
jne
sbb
and
xor
dec
popf
test
std
fnstsw
dec
mov
popf
or
or
js
popf
cmpsb
mov
lret
cwtl
lahf
out
add
sub
mov
in
or
add
call
lods
jae
or
jmp
xor
cmp
push
out
or
dec
aam
rorb
cmp
int3
cs
adc
sub
xchg
mov
std
or
xchg
insb
jecxz
xchg
outsb
inc
or
jmp
push
xchg
sbb
cli
cmp
or
lods
push
daa
psraw
push
icebp
data16
sarb
jns
sarl
les
add
pop
sub
cmpsl
dec
icebp
gs
jo
fisubl
fcom
dec
and
dec
daa
arpl
inc
and
dec
fwait
loopne
scas
push
fiadds
mov
cmc
jae
xor
xor
jecxz
jne
xor
aas
jnp
push
mov
clc
or
loope
xchg
jp
daa
push
aas
scas
or
xchg
mov
mov
sub
int
loop
xor
xor
nop
xor
imul
inc
push
mov
lea
repz
push
aad
or
loop
ljmp
mov
cmc
dec
sbbl
pop
dec
insb
pop
out
scas
fstl
lea
ds
imul
sar
inc
insb
ss
sbb
adc
sub
aam
mov
lods
in
rclb
insl
iret
inc
jp
out
cmpsl
imul
jnp
aad
cmp
cmp
add
test
popa
dec
pop
sub
das
cmp
pop
shlb
pop
das
pop
fsubrs
aas
and
mov
push
movl
xchg
cmc
data16
test
jmp
dec
stos
and
jae
pop
mov
nop
loop
push
pop
daa
mov
subb
sub
push
adc
adc
iret
dec
mov
fcomps
dec
mov
mov
inc
or
aad
mov
ja
push
mov
mov
loopne
sarb
stc
cmpsl
jae
push
xor
pop
push
inc
shlb
xchg
test
or
aaa
ficoms
sbb
xchg
es
enter
nop
xchg
rclb
lret
sbb
jp
or
je
in
and
inc
cmp
sub
push
pop
push
dec
add
or
push
push
loopne
cmp
jmp
mov
add
inc
push
push
popf
pop
insl
loop
push
and
pop
lods
sbb
ja
cs
jmp
shl
mov
hlt
aam
or
aam
push
pop
ret
aaa
shrb
daa
xor
shrl
inc
out
or
jl
xor
mov
adc
or
mov
lods
mov
adc
jne
nop
sub
xchg
cwtl
xchg
in
jae
int3
outsl
daa
xchg
nop
xchg
out
scas
sahf
cmc
add
test
dec
pop
and
mov
mov
inc
dec
test
and
push
xchg
shl
adc
push
and
sub
cmc
and
xchg
or
popa
outsl
cltd
aam
sbb
in
pushf
jae
pop
test
push
in
test
sub
jl
fsubrl
rolb
inc
dec
rolb
test
scas
outsb
mov
pop
xchg
jp
sub
push
cwtl
push
scas
cmp
dec
xchg
je
mov
jnp
outsb
jae
dec
or
cs
or
jno
je
fdivl
xchg
dec
dec
sub
lds
mov
sbb
lds
fstl
pop
xchg
roll
bound
scas
dec
pop
sbb
pop
fdivp
inc
cmp
mov
jg
adc
xchg
sahf
in
nop
xchg
inc
jnp
outsl
jbe
xchg
shll
fiadds
adc
mov
je
int3
dec
int3
dec
daa
push
mov
mov
out
sbb
shrb
or
ljmp
dec
mov
stos
ljmp
loopne
dec
sbb
cmp
out
cltd
sub
outsl
mov
xchg
adc
lock
sub
out
sub
movb
test
mov
or
pop
daa
dec
call
cs
imul
faddl
cmc
xor
sub
mov
push
sub
jl
sbb
cmp
sub
and
imul
mov
dec
dec
and
icebp
mov
repnz
sbb
clc
or
and
jae
jne
dec
lds
cmpsb
ds
add
pop
xchg
leave
cltd
test
ljmp
push
js
sbb
push
nop
or
sarb
dec
mov
pop
mov
mov
push
jmp
ds
xchg
adc
out
mov
clc
xchg
mov
xchg
lcall
xor
cs
pop
push
or
shr
pop
scas
adc
xchg
dec
and
and
inc
sbb
js
xchg
mov
gs
data16
mov
xchg
adc
jnp
negb
mov
out
nop
sub
sub
or
dec
push
and
and
pop
int
into
scas
and
inc
out
js
jnp
call
mov
sub
or
frstor
push
jp
and
dec
outsl
lret
lods
add
jno
in
sub
dec
mov
das
and
push
idivl
mov
repz
hlt
mov
jno,pn
xor
orl
cmp
xor
mov
xchg
push
or
sub
push
mov
push
inc
push
push
lret
xor
sti
sbb
data16
fcompl
mov
inc
fbstp
imulb
adc
lret
pop
js
mov
jnp
dec
sti
or
es
xchg
or
jmp
leave
dec
jl
or
cs
stos
dec
mov
push
repnz
pusha
mov
push
jno
outsl
aaa
mov
inc
in
stos
int3
or
test
dec
es
mov
sbb
add
aas
push
aas
out
repz
test
and
jnp
fisubrl
sahf
pop
jb
push
stos
cwtl
lods
or
in
std
outsb
dec
adc
addr16
mov
xchg
cmp
dec
mov
xor
into
sub
dec
sub
cmpl
adc
cs
jmp
lods
sbb
hlt
sub
or
int3
xchg
sbb
push
sbb
in
loopne
xor
pop
jl
js
sbb
inc
call
xchg
iret
out
adc
xchg
js
cmpsb
adc
sbb
lea
xor
cmpsb
scas
dec
or
mov
sub
cmp
mov
in
in
rcrl
jmp
xor
enter
xor
in
dec
fcmovnbe
mov
pop
ljmp
or
push
xchg
xchg
pop
push
cmp
out
push
mov
fsubrs
pop
dec
adc
dec
jp
mov
push
movsl
popf
dec
test
sub
mov
cli
push
cld
movsl
push
repnz
sbb
sbb
push
mov
scas
sub
movsl
add
xchg
pop
mov
int
sub
pop
pop
daa
out
inc
sub
inc
xor
cmp
pop
inc
in
lea
mov
sub
sub
xlat
rol
mov
leave
and
out
shrb
daa
pop
test
repnz
pop
mov
pop
test
mov
fsub
outsb
cmpsl
sbb
outsb
mov
and
sub
push
pop
ds
in
lret
mov
jge
or
or
pop
dec
xchg
pop
popa
mov
jne
lods
sbb
cltd
pop
sub
inc
divb
mov
outsl
gs
js
push
dec
loopne
shlb
lahf
movsb
jb
inc
roll
subb
addr16
int
rcl
ljmp
cmpsb
sub
cs
dec
lret
jmp
in
mov
subl
inc
mov
sbb
and
push
inc
push
or
and
rcrl
mov
and
ret
add
aas
push
mov
mov
mov
push
xchg
sub
adc
dec
pop
insb
dec
adc
aad
sti
pop
ret
jnp
push
cmp
enter
mov
and
out
dec
sbb
push
jp
andl
sbb
repnz
shlb
jo
cwtl
dec
shl
into
loop
in
mov
gs
faddl
sub
in
test
pop
adc
jl
pop
push
loopne
push
sub
outsb
and
push
rorb
inc
mov
test
lcall
or
or
pop
dec
push
mov
pop
mov
adc
aaa
test
jb
mov
arpl
mov
inc
sub
cmc
into
xchg
pop
inc
jp
lea
int3
and
adcb
movsb
add
inc
jo
popf
mov
xchg
leave
mov
nop
xchg
jle
sbb
dec
les
and
orl
inc
repnz
cwtl
cmp
or
cli
imul
shrb
sahf
fstpt
nop
lcall
aad
sub
imul
cmpb
fldl
test
movsb
lods
jno
cltd
sub
sub
or
popa
lds
add
test
push
jecxz
adc
mov
test
es
ljmp
mov
mov
xor
ljmp
xor
sbb
sbb
mov
dec
out
push
mov
stc
pop
mov
lock
int
daa
ljmp
push
push
push
jmp
jg
cmp
bound
xor
inc
fsubrs
mov
sti
aam
add
cltd
or
add
dec
push
push
aas
jecxz
or
pop
lret
push
jmp
push
int
repnz
xchg
mov
shrl
hlt
add
lods
jno
in
dec
sub
xchg
mov
mov
inc
out
cmp
hlt
fnsave
xlat
mov
test
dec
imul
mov
inc
int3
cmp
push
inc
mov
es
sub
jne
rclb
nop
ret
adc
xchg
add
xchg
into
sub
mov
mov
lahf
jo
mov
adc
rcrb
dec
repz
test
repz
push
jmp
jns
push
scas
xor
arpl
or
icebp
daa
ds
rcrl
icebp
fwait
adcb
xchg
fisttpl
daa
or
sahf
inc
rorb
push
and
cld
pushf
push
test
and
and
jnp
test
mov
test
mov
jnp
loop
loopne
jb
movsl
or
cmpb
add
xchg
scas
sbb
subl
aas
inc
sti
sub
test
int3
adc
nop
test
mov
sub
mov
fstps
aad
push
int3
lods
daa
xchg
xorb
in
pop
xchg
cmp
cltd
les
add
sub
sahf
add
cmp
add
stc
lock
mov
cmp
inc
jecxz
mov
jecxz
jmp
fcoml
outsb
cmp
inc
lods
sbb
ret
sar
cli
cmp
push
xchg
outsb
js
sbb
addr16
cs
ret
cmp
push
jb
dec
mov
cmp
fimull
imul
imul
pop
jle
jae
and
mov
dec
jp
xchg
jmp
adc
dec
js,pt
ljmp
in
idiv
cs
sbb
inc
xor
mov
rcl
inc
ror
daa
ss
mov
mov
cmpsb
adc
cmpsl
test
sub
bound
push
movsl
push
cmpsb
bound
xorl
and
lret
inc
add
sahf
rorb
jae
xor
rcr
sbb
bound
and
outsb
and
xor
cmpsl
cmp
dec
cmp
sub
cmpsb
or
jle
out
xlat
mov
cld
push
sbb
lods
int
in
in
loope
js
arpl
jb
repz
dec
cmp
les
pop
adc
pop
js
mov
mov
xchg
aad
xor
test
push
loope
or
xor
mov
out
in
dec
ret
inc
pop
ds
leave
push
fnstsw
dec
mov
stos
shrl
scas
jp
lret
or
push
in
rcrb
icebp
int3
jp
das
xchg
notl
mov
inc
pop
inc
cmp
xor
xchg
mov
sbb
push
inc
dec
and
add
in
and
iret
sub
lods
mov
jne
test
popf
dec
aaa
and
mov
int3
shrl
lods
adc
sub
lahf
cld
jl
daa
call
movsl
add
xchg
cmp
iret
mov
sti
imul
sbb
jecxz
outsl
sbb
dec
ficomps
pop
xchg
push
loop
cmp
daa
cs
into
incb
mov
mov
in
stos
and
mov
push
popl
movsb
cmp
mov
dec
mov
add
sub
lods
pushf
mov
mov
in
imul
fcoms
repz
test
mov
mov
lahf
cld
addl
push
add
xchg
xchg
pop
jg
in
imul
and
ret
pusha
in
shlb
fldt
ret
negl
stc
push
mov
stos
dec
rol
loope
enter
cs
mov
adc
and
sti
mov
iret
jne
sahf
sub
pop
pop
lods
mov
rclb
xchg
ds
imul
test
push
or
cmp
jp
out
lcall
addr16
int
ds
add
int
pop
inc
or
movb
daa
int3
mov
sub
pop
int3
push
test
dec
or
cmpb
rol
xor
call
movsb
decb
push
lcall
add
xor
daa
xchg
addb
add
test
mov
rorl
xchg
mull
into
cmpsl
mov
pusha
in
out
faddl
mov
shrl
repnz
neg
leave
imul
mov
dec
adc
mov
mov
add
jne
lods
mov
shr
inc
pop
or
pop
inc
jae
cmp
outsb
mov
sbb
mov
mov
inc
inc
insl
cs
rolb
lret
out
jl
inc
repz
call
fldenv
outsb
push
lods
add
arpl
push
pop
push
fcoml
repnz
pop
jno
iret
test
fldcw
and
movsb
arpl
jge
add
iret
nop
adc
outsb
in
and
or
add
sub
pusha
cmpsl
fadd
enter
sub
add
xor
mov
inc
pop
sub
add
nop
movsb
jnp
leave
mov
push
add
test
inc
push
bound
add
cmpb
mov
outsb
pusha
loope
cmpsl
js
mov
sbb
out
int3
test
sub
loopne
xchg
sub
inc
mov
lahf
add
push
jecxz
sbb
fiadds
mov
fs
aas
sbb
jge
imul
std
jmp
push
jb
and
mov
out
sub
shl
cmp
xchg
in
sub
ja
notl
push
bound
js
sbb
push
aaa
add
scas
inc
insb
bound
sub
add
js
cld
mov
inc
sbb
test
jae
pop
cld
mov
or
adc
cmp
daa
push
ret
push
movsl
push
test
mov
mov
lret
push
daa
mov
dec
movsl
fstl
add
pop
out
adc
sub
addl
scas
adc
push
or
cmpsb
adc
and
dec
mov
cmp
mov
and
sub
and
bound
daa
movsb
and
loopne
pushf
movsb
push
lcall
and
mov
daa
addb
mov
and
dec
test
paddw
mov
dec
pop
ss
movsl
inc
wbinvd
xor
mov
test
dec
sub
sbb
mov
jle
mov
das
aad
add
in
sub
shll
loop
cs
inc
jnp
stos
push
push
clc
and
mov
mov
mov
or
pop
adc
pushl
inc
in
inc
sub
jno
ja
movsb
and
add
test
mov
ss
dec
sbb
adc
stos
and
and
rcr
push
xor
and
lahf
lods
shl
jae
cli
std
cs
in
xchg
add
out
sub
and
mov
in
inc
add
push
cs
loope
jle
in
inc
scas
out
mov
sti
dec
push
pop
data16
cmp
add
pop
or
push
mov
push
xor
movsl
mov
rorb
ret
inc
mov
cmp
loopne
or
mov
jb
orl
jae
pushf
fistl
mov
daa
incb
std
pushf
cmp
inc
dec
test
xchg
adc
rorl
xchg
lcall
sti
sbb
shl
gs
dec
cmc
in
imul
loop
inc
outsb
sbb
sub
ret
pop
inc
cld
and
out
dec
subl
hlt
outsl
pop
test
cmp
shr
xor
ret
test
psrld
push
fwait
aaa
lods
hlt
push
andb
sti
mov
lcall
daa
fadd
out
hlt
lcall
imul
leave
lock
mov
orb
repz
psubw
addr16
faddl
push
mov
cwtl
in
mov
cmpsl
ljmp
xor
repnz
cmpsl
xchg
movsb
inc
test
lock
jg
jle
lea
movsl
push
push
daa
cmp
pop
daa
das
xor
jp
daa
ljmp
pusha
xor
mov
cmc
mov
mov
push
stc
shr
daa
cmpsb
add
xor
pop
inc
ror
jecxz
nop
push
sbb
cli
sbb
mov
lcall
cli
or
lret
mov
jno
scas
or
fwait
and
mov
daa
dec
pushf
icebp
adc
xchg
mov
jmp
and
mov
scas
mov
jp
jmp
sbb
lahf
icebp
loop
inc
add
or
inc
cmpsb
and
sahf
xor
lahf
cmp
xchg
mov
hlt
jbe
push
xlat
pushf
daa
pop
loopne
and
adc
jo
loop
outsb
loope
shll
int
and
sbb
cmpsl
inc
jne
mov
ja
push
inc
inc
pop
and
rorb
mov
add
fsubrs
or
push
adc
sub
mov
gs
jmp
sbb
nop
pop
mov
pop
sbb
fidivrl
xchg
jge
mov
cmpsb
test
push
testb
push
sub
lcall
mov
mov
jp
mov
les
shlb
repz
cmp
mov
mov
lahf
pop
sbbb
jmp
loop
shll
push
cmp
mov
sbb
ret
and
jecxz
xchg
stc
adc
daa
push
mov
inc
mov
lret
inc
pop
jo
mov
or
mov
in
cmpsb
jo
cwtl
mov
jb
cmc
adc
dec
push
dec
sub
leave
loope
cltd
cmpsl
insb
test
mov
xor
add
addr16
and
daa
js
addl
mov
mov
scas
shlb
mov
jg
out
sub
mov
inc
shrl
jl
ret
adc
fwait
leave
fwait
add
imul
cwtl
out
mov
bound
mov
test
sbb
add
lcall
jno
lret
mov
movsl
lahf
int
std
lahf
dec
and
lahf
test
push
mov
movsb
mov
hlt
sbb
pop
sbb
aas
cmpsl
push
and
loope
negl
aas
jg
cmp
test
cli
dec
lock
and
and
cmp
mov
jg
std
jbe
mov
sub
jg
jo
out
push
mov
or
pop
fnsave
inc
pop
sub
test
push
arpl
scas
inc
pushf
sub
mov
push
jecxz
push
inc
mov
inc
aam
pop
inc
and
cmpsb
jnp
mov
push
popf
test
cmp
push
les
outsb
in
stos
pop
shll
pushw
push
nop
sbb
pop
adcb
pop
add
cmp
dec
cmpsb
sarl
sub
sub
sbb
movsl
lea
cwtl
insb
jo
mov
pop
mov
or
xor
lret
cmp
aas
cmp
xor
mov
aas
lret
iret
or
add
or
aas
clc
push
pusha
pop
lods
sbb
pop
hlt
bound
data16
pop
lods
sbb
sub
lahf
mov
sub
sti
push
push
lods
cmp
aas
xchg
sbb
bound
test
inc
cmpsb
jmp
sub
and
pop
and
insl
daa
xchg
push
pop
xchg
jle
cmc
ds
scas
test
sbb
hlt
shlb
jge
les
fimuls
out
fiadds
sahf
sub
jnp
sub
mov
mov
xor
and
testb
out
sub
push
pop
inc
scas
inc
popf
sub
jnp
repz
pushf
test
pushf
push
jne
lahf
dec
lcall
test
repz
pop
and
lock
dec
pextrw
dec
sahf
sbb
cltd
mov
aad
xchg
mov
int3
inc
xchg
sahf
incl
or
sub
sahf
add
inc
test
mov
iret
fidivs
dec
xchg
subb
subb
cmp
pop
dec
icebp
insb
arpl
mov
mov
pop
lcall
sub
in
dec
int3
lahf
jle
lods
jno,pt
xlat
addb
jne
push
pusha
hlt
fnstsw
push
int
xor
repnz
and
pop
mov
dec
daa
mov
pop
xchg
mov
cmp
sbb
sub
mov
popl
jmp
dec
shll
test
mov
cmpb
push
sub
xor
mov
push
aad
ljmp
repnz
sbb
dec
adc
out
cmpsl
lret
test
bound
int3
repnz
outsl
sbb
das
dec
arpl
lcall
out
arpl
dec
xchg
pop
out
xchg
jne
mov
out
pop
inc
test
sub
push
ljmp
stos
or
cvtpi2ps
into
or
cs
mov
movaps
mov
cmp
lcall
out
adc
lret
das
stos
pop
or
mov
push
sbb
mov
das
outsb
in
sub
outsl
add
rcr
pop
shll
xor
cltd
fnsave
mov
xchg
je
into
fwait
or
jmp
enter
cmp
roll
sbbl
lds
and
mov
loope
daa
inc
adc
ret
cmp
outsb
lret
out
xchg
lret
loopne
sti
jge
pop
push
and
push
mov
mov
mov
lock
dec
xor
outsb
push
das
test
push
sub
popf
dec
dec
inc
popf
dec
mov
sbb
xchg
mov
loope
in
popf
lahf
das
lcall
lods
sbb
or
lcall
pusha
outsl
or
jge
std
sbb
mov
test
pop
jmp
daa
mov
ret
in
popf
sti
xor
jmp
adc
pop
mov
pop
sar
jle
add
add
aas
je
xchg
dec
fs
shlb
in
or
inc
dec
je
mov
es
into
sub
faddl
xchg
fstps
jno
cmp
dec
push
sub
cs
ret
scas
movsb
and
scas
pop
fwait
out
mov
in
arpl
push
and
into
xor
dec
mov
cmpsb
dec
adc
mov
cwtl
in
cld
fistpll
jecxz
mov
repz
loopne
xor
or
in
daa
mov
add
mov
mov
jnp
push
aaa
iret
and
jns
mov
cs
inc
pop
mov
data16
in
adc
sahf
pop
dec
or
cs
cmp
mov
dec
add
mov
mov
std
xor
push
negb
shlb
push
sub
into
xor
sti
push
lahf
sbb
hlt
mov
ficompl
push
or
and
sbb
push
cmc
int3
pop
mov
popa
sbb
jb
ds
jle
outsb
jnp
inc
xlat
add
mov
pop
mov
bound
mov
mov
outsb
add
dec
mov
fdivrs
dec
loopne
push
lcall
sub
sbb
scas
xor
icebp
std
mov
sar
cmp
or
cld
inc
sbb
mov
mov
xchg
jne
pop
ljmp
daa
enter
add
pop
hlt
adc
std
dec
push
xor
cld
mov
cmpsl
sarl
and
fsubrp
pop
mov
cmpsb
imul
add
sub
cmpsb
lret
jo
pcmpgtd
inc
rorl
jbe
sub
xchg
repz
sbb
lods
xchg
dec
pop
push
fdivrl
xor
outsl
arpl
sub
adc
and
jno
jae
xchg
inc
sbb
fsubrs
adc
daa
mov
fsubr
inc
das
jmp
stos
sbb
xor
lcall
dec
inc
das
pop
lcall
and
in
sub
push
push
ret
add
push
aam
mov
add
and
and
jl
in
dec
mov
das
lock
mov
and
shrb
lahf
aad
and
sti
or
push
insb
xor
cwtl
stos
mov
jnp
jae
mov
sbb
das
pushf
repz
jle
rcrl
mov
xor
or
mov
mov
push
mov
pushf
mov
sub
sub
dec
xchg
xchg
adc
rorb
xor
pop
cmpb
push
push
movsl
jl
push
stc
add
movsl
sub
pushf
lea
lahf
pop
adc
fstpt
out
gs
xor
fsubl
or
sbb
jl
and
adc
lcall
or
or
rorl
ss
in
cs
dec
mov
in
add
adcb
fists
inc
lods
pushf
out
pop
stc
push
adc
push
lret
sub
ljmp
inc
outsb
or
pop
xor
dec
dec
sbb
dec
insb
jne
outsb
movsl
or
cmp
movsl
ja
adc
imul
mov
adc
dec
pop
pop
aaa
add
fisubrl
or
sub
jg
mov
cld
cmp
lcall
sbb
add
movsl
cmp
or
sahf
mov
xchg
daa
rclb
push
mov
sbb
daa
mov
in
cmpsb
movsb
loopne
dec
mov
data16
add
mov
sahf
lret
push
daa
add
pop
sbb
sbb
js
movsl
sub
and
adc
sarb
rcll
xor
inc
outsb
stos
xchg
jmp
dec
mov
sub
pushf
jmp
data16
lahf
add
mov
leave
nop
test
cmp
fldcw
out
xchg
push
mov
pusha
dec
nop
jb
inc
mov
lea
cmp
cmp
je
pusha
pop
scas
sub
mov
sbb
aas
bound
push
sbb
fcmovnb
into
xlat
pop
jns
xor
pop
mov
pop
xor
or
xlat
cld
or
and
mov
lcall
mov
xchg
xchg
push
mov
sbb
and
add
jl
shl
or
dec
jg
push
and
pop
or
pop
sti
bound
lods
xor
movsl
push
ds
cmp
sub
mov
lcall
xor
lods
das
inc
fwait
xchg
and
std
mov
mov
xor
outsb
sbb
or
outsb
mov
test
or
js
cmpsb
inc
cmpsl
movsl
mov
imul
sbb
mov
fwait
mov
mov
aaa
insb
or
adc
in
imul
cmc
add
dec
lea
in
movsl
fisttpll
out
xor
push
test
pop
or
in
mov
or
divb
push
daa
push
xlat
mov
mov
stos
inc
dec
xor
pop
dec
fsubl
insl
or
jmp
call
iret
outsb
test
int3
mov
xchg
jnp
data16
mov
mov
pop
push
or
lds
rorb
xchg
mov
push
mov
inc
mov
fchs
cmp
mov
outsl
pusha
mov
pop
bound
and
cwtl
lret
mov
arpl
outsl
das
scas
repnz
lods
aam
inc
gs
ret
test
or
lds
ret
scas
mov
push
sahf
ss
pop
xor
xor
aas
cmp
jmp
sub
das
scas
lcall
jae
xor
dec
rorl
dec
rcrl
loopne
adc
sub
enter
arpl
dec
out
push
push
iret
gs
lcall
ds
out
mov
stc
sbb
ds
pop
das
jno
push
push
inc
push
loope
in
testl
outsl
push
inc
int3
imul
das
or
mov
sbb
cli
cmc
add
sub
pop
or
dec
lea
pop
adc
sbb
dec
fiaddl
jnp
rorl
mov
cmp
pusha
in
shrl
test
mov
stc
gs
int
xchg
mov
fisubrl
mov
outsb
xlat
fcmovu
ret
mov
xchg
inc
mov
mov
jb
jno
and
into
sub
or
loope
mov
loopne
cmp
jmp
mov
push
inc
sti
in
pop
adc
mov
adc
outsl
push
xor
and
xchg
push
imul
mov
mov
je
aas
idivb
cmp
in
daa
fs
cmp
testl
push
insl
jns
pushf
jno
cmp
pushfw
inc
mov
push
iret
jnp
or
add
mov
xchg
push
pop
lea
mov
mov
or
cld
dec
test
pop
pop
push
ja
int3
cmp
sarb
popf
or
pop
pop
inc
loopne
xor
push
inc
push
lods
xor
sub
in
push
jno
sarl
scas
popa
imul
xor
inc
add
rorb
mov
cli
mov
push
cpuid
push
pop
ja
mov
push
lret
push
adc
mov
push
dec
jmp
lock
inc
push
push
in
cmp
inc
xor
jmp
mov
push
cmp
lock
push
fldcw
lcall
xlat
or
jb
sbb
sahf
les
mov
fcmovnbe
std
xchg
inc
cld
mov
pop
or
sub
lea
stos
push
and
xlat
dec
fimull
sbb
sbb
jne
sahf
add
xor
adc
cmp
jl
and
bound
cmpsl
stc
jecxz
jp
pop
push
jae
push
sbb
mov
cmp
or
stc
arpl
mov
mov
xor
popl
or
push
cmp
xlat
push
jae
xor
jo
gs
movsb
inc
push
jmp
decl
fcmovnb
dec
stc
mov
pop
dec
lds
shrb
cmc
pop
shll
lahf
int
push
or
sub
push
add
mov
cmpsb
pusha
fstps
fidivrs
js
lret
inc
inc
dec
jp
or
dec
out
sarb
jmp
adc
mov
xchg
gs
roll
jne
push
inc
jno
inc
outsl
xchg
cmp
in
pop
inc
mov
mov
jg
lahf
xor
mov
imul
mov
xchg
sub
shlb
jae
mov
jne
daa
mov
aam
sbb
lcall
mov
pop
aaa
cmp
jb
int3
cmp
sbbb
pop
cmp
pop
push
adc
outsl
push
jnp
pop
adc
out
repnz
xor
jl
sub
test
xor
mov
push
inc
out
and
sbb
popa
into
xchg
adc
dec
push
xor
xor
repz
pop
mov
stc
cmp
scas
inc
stc
call
rcll
and
daa
hlt
cltd
in
add
add
pop
sub
mov
jmp
in
test
jge
icebp
add
mov
out
pop
jns
data16
fwait
cmp
not
daa
dec
cltd
sbb
jle
cmpsb
outsl
sbb
sbb
dec
sub
stos
mov
pop
jbe
cmp
scas
mov
popf
add
outsl
mov
dec
loopne
add
sbb
xor
jns
cmc
mov
push
mov
mov
fs
hlt
dec
lahf
aad
sub
xor
sub
repz
rcrl
adc
lea
daa
sbbb
ljmpw
mov
or
ds
test
iret
fadds
dec
in
sahf
push
push
aad
lret
push
jp
jae
ljmp
stc
popf
outsb
testl
pop
lcall
pop
imul
push
ja
inc
and
mov
jp
inc
repz
sbb
inc
xor
pushf
cltd
inc
inc
pop
arpl
push
sarb
add
inc
test
outsl
mov
ret
adc
mov
mov
pop
and
leave
xchg
adc
mov
ud2
sub
jnp
cmp
mov
fnstcw
bound
cld
xchg
sar
enter
mov
sbb
mulb
sbb
or
sbb
testb
lea
adc
pop
add
cmp
sbb
mov
xchg
sub
js
push
daa
push
cmpsb
push
clc
or
jle
test
xchg
arpl
lcall
sub
lods
stos
add
dec
cli
repnz
fs
mov
ds
mov
out
idivb
adc
int3
lcall
adc
sbb
sub
mov
incl
cli
fsubrs
cmpsl
in
push
cmp
xor
pusha
daa
mov
fsub
notb
out
sbb
push
dec
xor
std
data16
adc
jl
inc
jecxz
adc
push
mov
inc
mov
mov
aam
jne
mov
xchg
shlb
xchg
jb
aad
je
inc
sub
sti
push
inc
xorb
xchg
push
pop
push
mov
scas
test
gs
inc
jae
out
lcall
sbb
call
inc
or
in
or
bound
mov
cwtl
fcoms
mov
sub
shll
jg
push
inc
cmpsb
dec
mov
add
lods
sbb
push
mov
pop
fwait
xchg
cs
js
mov
sbb
sub
movsb
js
es
sub
mul
daa
push
mov
repz
jg
or
sbbl
stc
add
lea
repnz
mov
mov
mov
testb
lods
orb
cmp
cs
and
sbb
xchg
cmp
jmp
sub
dec
ficoml
cmp
ror
sub
cmp
in
cmp
inc
daa
jmp
ror
or
sbb
movsb
xor
jmp
pop
mov
and
cmp
adc
ja
mov
ljmp
adc
lahf
les
pop
pusha
push
cwtl
pop
xchg
outsb
mov
lret
and
repz
shl
in
loop
push
and
push
xlat
cmpsb
cmpsl
mov
movsl
nop
bound
dec
push
stos
mov
test
dec
inc
scas
lret
aaa
rclb
js
or
mov
inc
fiadds
in
lcall
out
cmp
push
cltd
pop
ja
ds
xchg
ret
loop
mov
mov
cmpsb
mov
push
mov
in
mov
popa
cld
inc
lcall
out
cmp
imul
stos
pop
stos
rorl
add
out
and
jp
std
mov
pop
dec
leave
cmp
add
pushf
jns
out
adc
movsl
push
sbb
inc
mov
and
mov
mov
cs
jle
leave
pop
addr16
fsubl
gs
test
mov
mov
inc
push
in
lods
and
dec
mov
rolb
int3
xor
mov
and
push
cmpsl
testb
mov
arpl
ss
jno
mov
mov
fwait
jp
dec
lcall
cmp
lods
ret
dec
mov
push
pop
jno
jb
push
jp
arpl
push
sub
push
insl
push
pop
push
mov
xor
test
stos
fwait
mov
dec
imul
mov
mov
adc
push
mov
out
ja
mov
mov
mov
jl
xchg
ficomps
test
imul
fists
and
rol
mov
fdivp
jecxz
cmp
sub
lods
fdiv
mov
and
cmpsl
daa
aam
pop
cs
xchg
and
cmp
mov
cmpsl
into
mov
daa
xor
jb
dec
lcall
dec
and
dec
and
aam
fcompl
xlat
dec
lods
and
js
jnp
fwait
mov
pop
stos
das
sbb
loope
jno
pop
jae
cmp
adc
mov
out
not
jb
push
shlb
adc
lcall
sar
xor
nop
roll
xchg
mov
aas
gs
mov
xor
lret
cmp
sahf
cs
in
movsb
ljmp
xor
or
in
inc
ja
xor
inc
mov
xchg
xchg
push
cltd
dec
fsincos
popa
mov
mov
clc
or
mov
cmp
mov
mov
lcall
and
push
cmp
lock
xor
je
push
ja
aas
push
pushf
mov
mov
push
mov
int3
and
daa
pop
xchg
xchg
inc
into
push
mov
dec
mov
cmp
xor
jge
into
mov
lcall
pop
mov
mov
jbe
and
mov
test
scas
sbb
jle
add
data16
scas
add
push
jle
inc
dec
cmc
push
scas
fs
and
ror
pop
cld
push
lods
insb
jbe
aam
lods
push
nop
push
jle
das
lea
bound
mov
mov
cld
xchg
xchg
jecxz
jp
leave
stos
inc
jmp
jle
jmp
mov
fs
loop
jp
sub
subl
push
adc
xor
out
mov
xchg
int3
and
and
insb
decb
and
frstor
dec
cmp
push
fstps
cmp
and
or
or
fisubrs
test
add
lcall
fdivr
inc
fisubrs
roll
sub
xchg
in
bound
scas
cld
push
es
lcall
test
outsl
into
repnz
push
lahf
push
adc
test
or
aaa
outsb
mov
adc
in
lahf
sbb
ficoml
inc
mov
sub
cld
pop
stc
add
xor
inc
test
data16
pop
lods
sbb
idiv
push
sbb
lods
sbb
push
hlt
mov
lock
cmc
cli
xor
pop
push
imul
sbb
push
inc
dec
jmp
adc
mov
sbb
rcrb
cmc
mov
pop
aam
outsb
int
imulb
sub
movsb
push
data16
mov
jge
lds
pop
push
mov
imul
repnz
push
cmpsl
or
xchg
nop
lahf
in
or
push
out
fstpl
lcall
push
mov
xchg
cmc
xchg
cmc
sub
rcl
pop
add
cmpsl
in
jb
dec
cli
aad
mov
mov
xchg
adc
int
iret
or
jecxz
pop
dec
outsl
ja
popa
fptan
ss
inc
fisttps
mov
repnz
lcall
pop
int
pop
cltd
mov
mov
repz
push
mov
aas
lret
dec
adc
or
pop
xchg
and
stos
movsb
addr16
push
or
mov
cmpsb
and
test
or
inc
mov
sbb
sub
repnz
mov
dec
daa
push
int
in
adc
inc
xchg
int
repz
je
pcmpeqb
xor
repz
mov
push
xor
aaa
out
test
test
test
popf
scas
call
push
jae
adc
outsb
cmpsb
pop
lock
and
adc
cmp
push
shll
aam
lock
out
and
or
outsl
popa
in
fs
test
push
or
in
mov
test
sub
jae
mov
test
sub
and
lock
add
adc
enter
inc
xchg
jmp
les
xchg
in
sbb
lahf
push
fmull
mov
bound
lock
sbb
jno
aad
jg
xor
or
inc
add
lahf
cltd
jb
inc
push
xor
sub
aam
into
rorb
das
xor
inc
mov
mov
cmpsl
mov
xchg
mov
push
xchg
adc
stc
out
sti
cmpsb
out
add
test
or
shll
push
xchg
shrl
dec
inc
mov
push
push
mov
or
mov
xchg
push
sti
or
mov
sbb
gs
adc
jmp
lods
sbb
adc
iret
lock
xchg
cli
jae
adc
icebp
mov
mov
pop
push
mov
cs
push
pop
push
mov
iret
dec
shrb
xchg
push
test
adc
pop
push
and
inc
xor
outsb
jge
adc
stc
xor
lods
insl
or
xor
insl
push
xchg
imul
cmp
lods
rorb
pop
mov
shl
out
mov
mov
xorl
fcoml
cli
xchg
xchg
cs
adc
inc
inc
daa
xchg
call
out
repnz
rol
es
popa
xor
repnz
or
push
and
xchg
arpl
mov
mov
adc
pop
and
sub
sub
mov
jbe
jecxz
dec
stc
pop
rolb
rolb
adc
mov
lods
cmp
pop
stos
loop,pt
adc
dec
sbb
sub
lret
leave
sub
lret
lahf
or
insl
sub
jne
cmpl
test
push
xchg
cmpsl
xchg
push
rorl
js
in
mov
jno
xlat
xchg
cmpsl
pop
push
rolb
rorb
dec
add
jmpw
bound
js
repnz
mov
mov
movsl
enter
mov
jae
daa
push
int
mov
xchg
mov
and
jecxz
jno
bound
mov
xor
pop
cmpsb
subb
adc
in
out
and
cs
push
or
jns
cmpsb
and
std
xchg
dec
push
lods
enter
hlt
std
push
loope
or
cmpsb
and
push
xor
sub
xchg
mov
sti
and
jae
dec
mov
mov
xchg
adcb
xchg
xor
pusha
sbb
sbb
leave
mov
out
jmp
jmp
outsl
int3
jg
xchg
sbb
pop
ds
lcall
xchg
imul
pop
jb
es
jb
int3
es
dec
or
adc
push
push
jb
mov
dec
test
sbb
push
imulb
jb
sub
jmp
sahf
mov
jbe
inc
inc
push
imul
test
mov
sbb
lock
dec
pusha
in
mov
or
mov
arpl
loopne
idivb
cltd
jp
sti
mov
xor
mov
stos
mov
mov
cmpsl
xor
and
rcrb
fs
xor
xor
mov
rcrb
divb
daa
inc
cmp
jge
dec
or
insl
test
enter
fucomp
push
mov
mov
dec
nop
xchg
or
adc
xor
or
les
mov
sub
out
call
pop
or
xchg
mov
xchg
icebp
iret
outsb
shll
les
dec
insl
call
stc
mov
cs
rcll
ret
mov
or
mov
js
rclb
push
xchg
mov
out
push
mov
xor
outsb
dec
xchg
mulb
mov
cs
adc
xchg
sti
push
sub
dec
add
sub
adc
adc
dec
mov
mov
mov
dec
out
jle
movb
push
add
jno
jg
push
lahf
cld
fdivs
sub
add
mov
cltd
adc
test
cmp
ret
inc
xchg
jmp
repnz
sbb
adc
out
adc
push
js
rorl
and
jno
loope
add
mov
jl
mov
mov
xor
scas
gs
mov
or
aad
repz
mov
mov
push
aad
jge
dec
test
in
out
repz
lcall
jmp
shl
or
inc
mov
sub
mov
je
hlt
into
mov
fsubp
inc
cli
sbb
pop
sub
xor
shlb
add
push
jmp
and
mov
test
gs
adc
cltd
or
pop
sbb
inc
push
mov
xchg
outsb
xchg
xor
pop
cmp
dec
jmp
sub
mov
icebp
std
inc
adc
adc
in
mov
out
and
loop
or
aaa
xchg
hlt
movb
adc
pushf
mov
dec
cmpsl
add
push
mov
scas
mov
xchg
cmpsl
mov
cmpsl
dec
movsb
lock
ja
in
sbb
pop
sub
lock
cltd
lock
or
lahf
xchg
shl
cld
dec
daa
pop
xchg
fs
push
or
cltd
in
adc
inc
inc
outsl
push
xor
or
lcall
arpl
push
sahf
add
push
sbb
std
inc
test
cmp
inc
or
movsl
lock
push
stc
sarb
and
int3
mov
pop
sub
add
daa
je
mov
dec
shrb
mov
jns
xchg
repnz
mov
ret
add
push
test
jae
cli
mov
dec
test
pop
xor
scas
add
mov
adc
inc
jnp
daa
filds
cmp
aam
dec
mov
notb
out
scas
jo
les
cmpsl
and
lcall
ret
mov
iret
lret
mov
pop
int
adc
xchg
nop
lcall
or
dec
push
push
inc
popa
leave
xlat
sub
inc
jo
and
mov
push
je
fdiv
jnp
dec
cmp
aaa
mov
lods
divb
pop
pop
arpl
inc
mov
nop
jo
cmp
out
ljmp
xor
lea
mov
sub
push
repnz
sbb
add
push
rcrb
cmp
sub
das
xchg
std
fsubrl
movsl
test
add
xor
mov
inc
ficoml
cwtl
or
mov
lods
pop
and
cmc
scas
ljmp
push
mov
mov
sbb
xor
mov
mov
sbb
mov
xor
test
sbb
xor
in
push
or
inc
push
data16
dec
repz
ss
sbb
fwait
adc
jle
cmc
xchg
or
dec
cmp
scas
lods
or
adc
mov
jl
pop
mov
mov
addr16
nop
cmp
adc
mov
jne
test
out
movsl
pushf
scas
push
imul
test
sahf
shlb
ljmp
rcrb
push
inc
arpl
outsl
lods
jecxz
jmp
push
lahf
cmp
mov
dec
shlb
cs
inc
cld
ret
xchg
in
jp
xchg
mov
out
cwtl
cmp
ljmp
xchg
roll
mov
cmpsb
lahf
sub
sub
mov
fcomps
int
inc
sbb
shll
sbb
ds
iret
dec
mov
daa
jae
mov
stc
xor
push
adc
xchg
ja
adc
lods
jo
cmp
ds
push
mov
cmpsl
pop
ja
shrl
pop
scas
cld
xchg
icebp
cs
push
int
cld
sahf
sbb
lahf
rcrb
je
mov
pop
out
dec
jae
dec
fsubr
imul
mov
sbb
data16
test
loopne
orl
mov
add
arpl
pop
dec
sbb
or
cltd
cs
adc
arpl
push
jg
lock
outsl
xchg
outsb
push
outsl
push
xchg
push
lods
sbb
push
dec
outsl
mov
bound
outsb
pusha
dec
push
fwait
in
lods
sbb
aam
and
into
sbb
out
cli
xchg
and
sbb
in
loope
in
jo
in
dec
lods
sbb
mov
arpl
jecxz
shrb
and
int
cli
lahf
das
or
lcall
jns
mov
xchg
gs
dec
int3
das
int
lret
cmpsl
jg
test
cltd
ret
inc
add
pmullw
mov
jnp
in
pop
push
jp
xor
roll
stos
push
pop
mov
testb
fwait
outsb
dec
adc
fnstsw
stos
aam
lods
cmp
pop
dec
cmpsb
lret
mov
pop
idiv
mov
jl
jp
xchg
js
icebp
and
inc
sub
inc
jmp
mov
test
cs
cmp
adc
ds
pop
lea
dec
lcall
push
mov
mov
rcrl
cmc
into
std
cmp
rcll
data16
or
mov
outsl
adc
test
pmaddwd
into
jle
sbb
scas
push
or
mov
or
je
sbb
inc
fildll
adc
sbb
scas
push
loope
lds
std
aad
cltd
rcrl
aad
pushf
mov
dec
insl
stc
fcoml
movsl
jb
dec
mov
sbb
sub
mov
shlb
add
sti
sub
jae
cmp
cld
in
cmpsb
inc
inc
insl
outsl
push
cmpsl
dec
in
das
and
pop
or
inc
enter
inc
and
mov
mov
push
movsb
movsl
cmpsl
xor
xor
mov
mov
and
fdiv
movsl
jb
sbb
hlt
mov
and
push
fnstcw
std
push
aas
sahf
xorl
inc
xchg
push
mov
outsb
pop
dec
bound
test
mov
jbe
cmpsl
outsb
or
xchg
pushf
xchg
push
repz
xor
nop
dec
aad
outsl
call
sti
sbb
dec
lea
cs
cmp
jne
mov
mov
add
push
daa
mov
sbb
sbb
icebp
jns
jno
cmp
std
lods
imul
push
stc
push
add
scas
sahf
mov
std
sub
mov
clc
lods
or
push
or
movsl
in
or
adc
inc
clc
adc
lods
push
adc
and
inc
jmp
insl
dec
loopne
push
mov
shl
lahf
mov
inc
inc
mov
mov
fs
or
cld
xor
push
mov
arpl
and
in
pop
sahf
or
sar
mov
out
lcall
lahf
aam
in
arpl
xchg
lods
lods
mov
nop
in
sub
jl
pop
pop
push
test
repnz
or
dec
xchg
sbb
lea
movsb
int
xchg
ljmp
push
cmpsl
mov
lcall
push
daa
push
repnz
adc
das
ja
or
fnsave
imul
int
loopne
imul
rclb
aad
push
fmuls
aad
pop
fildl
or
outsl
add
lret
sbb
fnstcw
std
inc
fmuls
sub
push
mov
push
sub
repnz
lea
cmp
lea
js
sub
xchg
lods
mov
mov
es
cs
lea
movsb
jle
push
dec
js
bound
lds
add
addr16
stos
out
add
inc
push
sub
fldt
or
xchg
add
sar
or
mov
mov
and
lahf
push
push
sbb
mov
sbb
insl
fstpt
jg
xor
pusha
popf
push
and
aaa
out
and
xor
daa
gs
xchg
mov
cli
fisttps
jecxz
jnp
push
test
lcall
xor
shrb
sbb
sbb
and
jno
int3
dec
adc
sub
push
adc
fmuls
or
mov
aad
stc
cmp
ret
mov
cltd
movsb
sbb
xchg
repnz
and
insb
sub
add
xchg
outsl
das
fldl
mov
push
or
out
mov
mull
scas
sbb
pop
mov
ja
nop
or
lret
aad
stc
adc
fwait
cmpsl
mov
or
lcall
insb
scas
ret
outsl
dec
cld
dec
std
cld
mov
lcall
daa
test
lcall
xor
stc
lcall
push
mov
cmc
lea
xor
jp
movsl
aad
cmp
mov
and
mov
daa
les
xor
out
out
and
lea
cmpsb
lods
popa
jle
sbb
sbb
inc
xor
and
jnp
mov
or
bound
out
push
and
mov
outsb
push
imulb
lcall
and
mov
test
shrl
and
or
shrl
outsl
lcall
mov
fidivs
repnz
lcall
push
jg
test
dec
pusha
ret
inc
or
or
or
mov
push
jg
adc
icebp
or
mov
mov
cli
imul
or
push
repz
loope
scas
fsts
scas
mov
pop
adc
mov
ja
push
cwtl
pop
fidivs
addr16
add
shrb
ror
sub
insb
arpl
xadd
mov
mov
mov
fidivrs
cs
bound
mov
mov
pop
clc
cmovl
pop
std
or
insb
push
pusha
insb
dec
out
ja
sbb
adc
sahf
adc
pop
mov
lret
outsb
push
in
xor
pushf
rcl
mov
movq
lcall
ljmp
adc
adc
xchg
or
inc
xor
sub
es
fcmovnu
add
sub
cmp
enter
sub
shrb
add
aam
pop
pop
shr
pop
mov
mov
or
outsb
ss
cs
sub
ja
xchg
jmp
push
das
test
dec
sub
sub
inc
sub
mov
nop
pop
mov
inc
sub
push
xchg
sub
jecxz
in
shr
in
aaa
das
xor
mov
dec
outsb
cmpsl
xchg
sub
cmpsl
sub
mov
sbb
cmc
sbb
cmpsl
clc
bnd
jp
loopne
cmc
xchg
cmp
mov
shr
push
or
jae
mov
cmc
out
inc
insl
mov
or
or
or
js
loope
lea
sbb
outsb
fcmovne
pop
xor
jb
mov
shrl
je
rcll
lcallw
or
gs
sbb
in
add
dec
cltd
cli
dec
mov
dec
in
or
push
jnp
mov
icebp
mov
repz
or
mov
nop
insb
mov
jnp
outsb
push
or
mov
mov
sbb
jp
inc
lret
sbb
sbb
je
mov
pop
sahf
mov
dec
cli
inc
popf
cmpsb
xor
gs
mov
and
xor
in
aam
out
dec
out
pop
imul
xchg
out
fcomps
clc
xor
sti
imul
cmpsb
xchg
sbb
push
lcall
and
leave
push
and
pusha
push
js
in
int
add
test
insb
std
or
sbb
dec
aam
jle
mov
xor
ljmp
stc
dec
fistps
nop
push
pop
filds
rorl
jle
add
xchg
fisubs
int
cmpsl
push
and
int
cmpsl
sbb
js
mull
sub
outsl
sub
sub
adc
daa
jno
xor
movsb
mul
xchg
in
cmp
fsubrp
fsubrl
push
cld
push
or
xchg
sub
inc
and
out
cs
fldt
or
loope
int3
enter
inc
leave
dec
insb
popa
aaa
mov
mov
fnsave
mov
pop
fldenv
and
dec
push
shll
js
sub
popf
jp
or
dec
pushf
ljmp
push
dec
cmp
mov
pop
data16
or
dec
inc
or
test
cmc
dec
in
dec
addl
xchg
clc
xor
inc
or
loop
adc
mov
sbb
das
cmc
jnp
sub
sbb
mov
sbb
aam
adc
lea
adc
pop
enter
mov
dec
arpl
rorl
and
out
imul
cmp
inc
xlat
and
js
and
in
lods
jno
in
ds
lret
sti
or
lret
sub
inc
sahf
daa
jne
or
jp
imull
push
mov
or
mov
lret
lahf
imul
cmp
pop
and
xorb
xor
in
std
dec
or
jmp
stos
jl
inc
addl
test
pop
ficoms
lods
out
out
xchg
clc
mov
pop
add
out
stos
out
sti
dec
sub
loopne
mov
mov
dec
imul
cli
add
rcrl
or
add
cltd
repnz
xchg
pop
push
add
cs
or
sbb
mov
cs
pop
mov
cwtl
divl
xchg
dec
cmp
mov
mov
or
push
dec
sbb
pop
fldcw
jp
stos
pop
adc
subl
xchg
sbb
loop
popa
aam
jp
pop
rcrl
xchg
jo
jae
push
jle
leave
sbb
out
scas
scas
mov
loope
adc
push
shrl
out
jnp
lea
ss
iret
push
sub
sbb
push
inc
cld
in
pop
addr16
jns
pop
pop
out
cmp
mov
and
dec
inc
insl
das
pop
or
arpl
repnz
sbb
out
jp
aam
shrb
xlat
or
dec
jno
mov
cmp
xchg
pop
pop
push
mov
mov
push
mov
es
mov
pop
out
inc
xchg
subb
sbb
addl
aas
aas
inc
daa
xchg
dec
jp
mov
enter
and
or
pop
fisttpl
mov
xor
sub
mov
cmp
cmc
xchg
sub
mov
in
rolb
cld
mov
lods
in
repnz
xor
jle
push
loope
and
sub
int3
scas
cmp
jne
das
or
call
cmpsb
in
lea
in
xchg
aas
outsb
icebp
or
lea
sti
xor
outsl
leave
sub
cltd
lea
mov
push
pop
xchg
adc
cmp
and
sbb
sbb
rorb
sub
jno
add
jbe
aad
ss
sbb
push
lret
push
imul
add
into
lods
ficomps
orb
cmpsb
sub
jb
and
and
mov
hlt
icebp
push
mov
lahf
clc
aam
cwtl
repnz
and
adc
lret
cli
fsubrl
mov
jnp
into
icebp
jmp
add
sub
inc
or
push
mov
or
dec
mov
lret
adc
sub
and
stc
dec
lahf
push
xchg
cmp
mov
dec
jp
mov
and
jbe
stc
or
lcall
dec
sbb
popf
xchg
stos
push
ja
xor
cs
ds
jne
cld
stos
sub
mov
or
cmp
das
sbb
aaa
fisubl
xchg
sbb
dec
in
fwait
movsl
inc
stos
and
sub
or
xlat
sbb
xor
push
int3
mov
insb
lds
shlb
loope
in
jb
lea
int
divb
test
jbe
cmp
insl
aad
cmp
sub
push
jnp
mov
orw
negb
aam
jp
mov
push
jle
cs
hlt
xchg
and
mov
bnd
cmc
xchg
jge
pop
clc
dec
or
push
daa
mov
pop
adcb
insl
xchg
dec
sbbl
inc
stc
bound
mov
cmc
sbb
cli
dec
cli
sbb
js
icebp
cmp
and
mov
and
adc
out
push
ds
ss
dec
fiaddl
dec
dec
or
dec
mov
fidivs
cmp
out
cwtl
out
setp
adc
xchg
stos
push
into
or
dec
lret
cmp
outsb
lcall
test
cli
mov
lret
rcll
jle
in
pop
aad
or
cs
sub
aas
or
cmpsb
mov
lret
subb
sub
jle
sbb
icebp
jnp
push
ror
jp
xchg
aas
xchg
adc
pop
and
sub
mov
lds
icebp
lret
inc
loop
and
repz
mov
dec
dec
cmc
aad
sbb
je
mov
dec
gs
aam
sahf
in
ret
out
sub
cwtl
mov
jp
bound
jmp
lret
adc
ljmp
lret
or
shlb
xchg
adc
adc
push
and
xchg
jo
mov
mov
mov
imul
xor
push
cwtl
or
daa
pop
mov
nop
sbb
sub
movsb
jne
int3
sub
inc
dec
inc
sbb
sub
mov
lcall
or
insb
rorl
rcrb
daa
rclb
loope
push
jnp
sbb
or
das
sub
stos
les
negb
daa
sti
pop
into
mov
pop
test
hlt
adc
imul
cmp
cmc
scas
mov
sbb
sub
dec
adc
or
leave
aaa
mov
dec
mov
insb
lods
clc
pop
or
mov
inc
movsl
movsb
xor
sbb
in
ds
cmp
enter
addr16
push
dec
and
cmp
lret
or
pop
lods
daa
ds
push
xchg
xor
dec
adc
jno
or
daa
push
xor
mov
jae
dec
lock
sub
or
ss
sbb
cmpsb
into
and
mov
or
cmp
call
fs
push
outsb
and
push
ljmp
lea
inc
lods
ljmp
dec
jecxz
cmp
inc
mov
or
subb
mov
test
inc
push
sub
out
jp
cmp
repnz
or
pmulhuw
mov
out
xchg
fs
mov
insb
adc
in
jmp
jno
clc
adcl
mov
test
lea
sbb
xchg
sbb
call
aad
cltd
pusha
mov
cmc
jno
cwtl
mov
fwait
daa
pop
mov
mov
out
adc
ret
fwait
xor
fdivrs
pop
mov
push
push
or
jno
inc
mov
push
mov
and
push
pop
fdivr
mov
push
mov
movsl
add
pop
cmp
mov
je
dec
rorb
leave
inc
cmp
ljmp
add
shrl
mov
mov
inc
inc
or
adc
dec
or
adc
push
or
sarb
lcall
mov
or
add
or
loop
cltd
lret
fadds
push
mov
mov
adc
dec
mov
jb
add
shll
je
sbb
dec
jae
mov
jmp
push
mov
cmc
sbb
adc
in
inc
test
jno
cltd
mov
cld
add
jbe
sub
mov
mov
gs
loope
icebp
xchg
lahf
add
push
push
fidivrs
out
sbb
lcall
dec
cltd
movzwl
mov
mov
or
rorb
xchg
or
in
and
adc
popa
pop
jmp
sub
jb
adc
ds
in
jl
cmp
add
aam
push
add
pop
daa
sbb
dec
inc
dec
nop
add
push
cli
cmpl
sbb
dec
mov
rorl
test
insl
mov
xor
mov
inc
pop
or
lcall
ss
mov
dec
pop
clc
ljmp
mov
call
pop
adc
jge
adc
dec
mov
dec
xchg
popa
addb
adc
adc
adc
cmp
sbb
push
push
repnz
lds
cmp
xchg
mov
adc
dec
mov
fisubrs
sub
adc
or
sub
pop
pop
adc
push
lods
dec
iret
or
cmp
movsb
das
pop
adc
dec
xchg
sbb
sbb
push
inc
mov
jne
push
push
pop
dec
lcall
aam
rorb
xchg
in
pushf
aas
dec
jecxz
cltd
pusha
sub
lret
sub
repnz
push
in
insl
out
out
push
mov
mov
fwait
dec
cmp
pop
push
ret
dec
mov
jle
bound
lahf
in
nop
and
jo
add
daa
mov
das
push
sub
ja
or
stos
mov
mov
arpl
es
dec
lcall
sub
aad
test
dec
int
add
cmp
fmulp
outsl
inc
mov
adc
pop
or
mov
add
sub
xchg
mov
mov
outsl
adc
mov
inc
lea
pop
aam
jg
mov
cmp
sbb
clc
jbe
aaa
mov
xor
sub
sub
in
inc
and
clc
cmp
push
dec
daa
mov
mov
lea
aad
dec
sbb
sub
xor
or
int3
dec
or
cmp
inc
in
adc
cmp
mov
hlt
aad
xchg
and
pusha
mov
scas
decb
xchg
mov
clc
sbb
sub
pushf
mov
or
mov
imul
outsb
pop
sub
jl
mov
mov
sub
testb
xor
cmp
add
lock
jo
sbb
int3
dec
or
mov
sub
and
cmp
sbb
fs
mov
inc
push
sbb
or
cmp
or
cmpsb
jmp
push
dec
stc
or
dec
jo
daa
jmp
adc
out
popa
push
dec
lret
clc
insb
sub
lahf
adc
scas
sub
cs
push
inc
sub
mov
sub
rorl
bound
lds
repnz
fs
cmp
add
ficoml
jecxz
scas
xchg
imul
sub
and
inc
inc
or
xchg
pop
cmp
xor
adc
mov
mov
xchg
mov
fldenv
jnp
sbb
pop
loop
push
adc
nop
or
sahf
mov
arpl
std
mov
inc
adc
in
test
push
add
mov
sub
jae
push
lods
rolb
fucomip
push
arpl
add
push
dec
insb
cmp
xchg
iret
push
pop
mov
rorb
in
call
sbbb
lcall
cwtl
ljmp
dec
or
icebp
sub
hlt
shlb
xor
mov
push
repz
sub
inc
or
out
lock
sub
cmp
xchg
sbb
push
push
dec
dec
push
xchg
lcall
or
dec
test
xchg
iret
mov
ret
mov
push
push
or
sub
jnp
or
sahf
mov
xor
loopne
jmp
adc
and
jp
mov
ds
cmp
popf
adc
or
test
jno
enter
xchg
int
int
pop
mov
sbb
and
cwtl
test
cmp
xor
mov
jmp
inc
push
add
push
outsl
les
or
sbb
sbbb
adc
cmp
bound
dec
xor
jb
dec
push
dec
adc
xchg
sbb
cmp
stos
repnz
adc
ret
and
movlps
dec
xlat
push
push
mov
mov
add
fiaddl
sub
dec
cmp
mov
add
cmp
rcr
add
or
enter
jb
jp
push
sahf
mov
sbb
stos
aas
arpl
mov
mov
popa
lcall
mov
lods
cmp
sbb
add
mov
loop
cwtl
lods
popa
mov
pop
jnp
hlt
jmp
fcompl
shrb
mov
cwtl
xchg
hlt
and
xchg
pop
dec
mov
and
fs
mov
icebp
dec
inc
xor
mov
jnp
pop
add
dec
xchg
push
inc
lods
cmc
cwtl
scas
jne
addb
ret
in
adc
sub
xorb
fstps
sub
inc
and
inc
and
push
push
jg
ret
dec
jmp
aam
xor
mov
jne
test
cmpsl
adc
ss
stos
pushf
push
mov
scas
add
sub
fimull
dec
ds
imul
loop
mov
ljmp
adc
pusha
xchg
mov
aas
jecxz
jb
leave
daa
bound
sub
inc
es
jecxz
cmp
arpl
pop
out
ja
scas
loopne
adc
push
and
adc
mov
mov
arpl
sbb
mov
jl
add
dec
daa
mov
and
mov
inc
mov
sub
aad
adcl
or
movsl
out
bnd
pop
or
shlb
xchg
or
adc
adc
adc
stos
lcall
adc
dec
bound
push
fcomi
add
jmp
addr16
pop
push
and
add
adc
imul
in
mov
imul
xlat
ljmp
push
push
sbb
test
stc
dec
enter
sub
add
jo
cwtl
jno
mov
inc
sbb
fldenv
xchg
cmpl
and
cwtl
subl
cmp
adc
and
test
cmp
xchg
or
fstpl
shrb
daa
stos
jno
jno
cltd
push
mov
cmc
jp
xchg
or
pop
xor
stos
idivl
dec
push
mov
shrb
push
mov
daa
rorb
lahf
nop
stos
inc
mov
cmp
test
lods
sahf
lcall
dec
or
int
lcall
sub
dec
push
sub
data16
outsl
inc
xor
push
dec
lcall
inc
cmp
push
outsl
in
push
and
mov
insl
test
sti
jecxz
and
sub
arpl
and
retw
or
rsm
jae
fstpl
xor
pop
xchg
sub
jb
and
aam
jne
cmp
push
mov
cmp
js
push
addr16
and
cltd
jo
xor
pop
and
adc
mov
cmp
outsl
sub
loopne
sub
lret
mov
sbb
jp
or
test
sbb
por
sbb
sub
mov
lea
leave
cs
sbb
or
and
and
test
inc
jnp
outsl
cvtdq2ps
or
dec
pop
js
jne
adc
aas
jp
cmp
dec
push
jge
imul
das
mov
xor
test
outsl
and
gs
loop
imul
mov
mov
sahf
fsubs
int
mov
std
sub
add
inc
cmp
mov
jecxz
xchg
cmc
mov
js
outsb
push
mov
xlat
cwtl
mov
mov
fisubrl
fidivrl
and
xchg
mov
pusha
push
lock
push
sub
iret
pop
test
lods
adc
ljmp
and
sub
jbe
mov
or
push
or
ret
cwtl
scas
dec
outsb
mov
sub
push
negl
inc
sahf
aas
fwait
sbb
adc
mov
mov
fdivrl
out
stos
sbb
in
scas
mov
daa
mov
pop
adc
jnp
dec
mov
test
shrl
and
hlt
cmp
dec
xor
orb
loopne
jne
inc
or
sbbb
fcomps
xchg
xor
test
mov
jg
decl
xchg
mov
rorb
jmp
pop
dec
es
inc
into
xchg
adc
mov
push
jmp
jb
divb
repz
outsb
adc
adc
test
shrb
jmp
pop
dec
push
or
push
and
daa
test
inc
xchg
xchg
lods
aam
out
mov
mov
add
aad
mov
xor
dec
push
jle
add
push
mov
and
xchg
or
pop
jnp
stos
int3
adc
lcall
sub
out
mov
push
popa
sbb
ds
int
sub
and
mov
adc
xor
cmc
push
and
stos
pop
cmc
daa
mov
mov
add
loope
imul
sub
xor
cmp
and
jns
pop
stos
int3
sbb
pop
sub
jbe
mov
pushf
fsubs
push
outsb
pop
int3
dec
fisubs
mov
or
jg
push
das
popa
and
jle
repz
xor
xorl
and
lcall
test
dec
and
or
sbb
ds
fs
or
test
cmp
out
xchg
leave
scas
add
push
cmp
cmpsl
lock
loopne
push
mov
es
sbb
cld
sbb
push
adc
cmp
fwait
cli
jbe
mov
or
in
jo
and
repnz
inc
xchg
and
cmp
cmp
sbb
mov
imul
cmp
xchg
mov
sbb
outsb
jne
jne
nop
movsl
push
dec
insb
lahf
fsubs
sbb
add
lret
jae
int
push
and
sbb
mov
inc
dec
js
pop
mov
inc
lods
or
pop
and
push
push
in
jo
cmp
hlt
outsl
lret
jmp
sub
mov
xchg
inc
lea
or
sub
loope
or
inc
stos
mov
mov
adc
adc
pop
sub
pop
add
adc
lret
mov
push
in
insb
lds
fs
test
shlb
std
jnp,pt
or
and
sub
ret
orl
xchg
imul
push
dec
stc
xchg
pop
or
adc
mov
and
add
pop
push
dec
sub
pusha
dec
lods
sbb
sub
cmp
fmuls
sub
ljmp
or
push
sub
mov
daa
mov
test
sub
je
sahf
aaa
adc
xor
ljmp
mov
push
fcmovnbe
out
je
and
pop
inc
mov
mov
cwtl
mov
into
daa
ljmp
cmp
pop
sub
cmp
and
js
ljmp
mov
cltd
dec
or
dec
outsl
cmp
stc
orb
sbb
test
ss
cmp
xor
or
fnstsw
jae
fimull
pop
in
jae
inc
xor
ret
js
ljmp
and
std
pop
adc
arpl
xadd
xchg
fistl
je
cwtl
shlb
aam
sahf
ret
push
jno
out
mov
js
iret
pop
mov
mov
hlt
mov
push
mov
jb
pop
push
xor
int
xchg
dec
cmp
imul
sub
cwtl
fcoml
imul
loop
jp
cmp
push
inc
sub
xor
sub
or
stos
push
adc
sbb
push
lods
sub
mov
and
imul
aam
imul
lods
xor
mov
inc
repz
jle
adc
jns
pop
xchg
sbb
sbb
xor
sbb
or
xlat
mov
in
mov
jge
popf
lret
sbb
cmp
mov
jge
adc
cltd
mov
test
icebp
inc
gs
insb
push
xchg
mov
dec
adc
mov
into
and
push
int3
shrl
leave
psubsw
push
sbb
jmp
and
ljmp
cltd
lret
cmp
idivl
insl
mov
adc
or
pushf
mov
fs
rcl
btc
fwait
jno
stos
fsubrs
ret
sub
xor
adc
cmp
stc
jbe
test
leave
mov
pop
das
pandn
jmp
pop
and
jp
cmpsl
mov
mov
cmp
daa
es
stos
mov
and
mov
xchg
fidivl
push
pop
out
inc
pop
outsl
mov
mov
cmp
jnp
aad
popa
and
daa
lret
cmc
movsb
inc
ds
call
sarl
unpcklps
sub
cwtl
or
scas
into
xor
mov
sub
lcall
test
je
add
dec
leave
movb
jo
and
xchg
jbe
dec
mov
jp
add
pop
rcrl
jo
cli
sbb
shlb
push
in
fmull
test
adc
daa
jl
inc
pop
orl
mov
cwtl
cmc
mov
adc
movsb
daa
add
bound
mov
inc
dec
mov
insl
adc
fsubrl
mov
jp
or
int3
fists
adc
in
inc
and
cmp
or
lret
or
push
pop
bound
or
sahf
xorb
mov
push
sub
subb
cmp
sub
imul
dec
mov
and
jae
bound
xlat
push
push
cmp
adc
sbb
aam
push
stos
jno
mov
sarl
popa
mov
loop
ret
push
imul
or
xchg
or
mov
adc
in
ds
call
aaa
xor
sbb
insb
dec
pop
je
lock
daa
inc
lods
outsb
or
cmp
sub
mov
cmp
pop
dec
stos
aam
adc
loop
inc
insb
hlt
cwtl
mov
test
icebp
into
jb
pop
mov
cmp
data16
je
scas
xor
cmp
mov
jg
lcall
mov
shrb
lods
je
daa
jg
lcall
inc
jno
dec
add
repz
sub
xor
mov
push
fs
fisttps
push
push
mov
add
sub
pusha
xchg
push
in
mov
mov
mov
adc
enter
push
sub
lcall
inc
push
sub
in
jp
lock
test
jb
outsb
or
pushf
mov
adc
movsl
or
xor
mov
iret
cld
mov
inc
sbb
std
js
ret
daa
push
xchg
jae
bound
mov
ficompl
mov
xchg
xor
jecxz
inc
dec
int3
out
sub
gs
jb
jl
shrl
or
xchg
repz
hlt
xor
add
adc
outsl
pop
or
pushf
pop
jne
lret
rorl
mov
add
sar
sti
hlt
ja
inc
testl
xlat
out
lcall
cmpsb
xorl
stos
ds
xor
cmpsl
jmp
popf
mov
mov
push
into
aaa
into
movsb
inc
mov
imul
mov
test
not
xchg
aaa
mov
dec
loopne
dec
push
add
lahf
jmp
imul
xor
ja
dec
stos
cmc
cmp
dec
pop
aaa
sbb
lcall
jmp
aas
push
bound
les
adc
popa
mov
xchg
push
and
out
pop
push
hlt
mov
mov
pushf
adc
jo
xchg
xor
scas
dec
mov
mov
adc
jmp
lcall
pop
sbb
pop
jns
add
pop
sti
icebp
int
mov
sub
sub
fists
sub
mov
mov
jb
shrl
mov
dec
push
dec
sbb
lret
lods
jmp
add
sub
stos
or
and
adc
sbb
or
dec
pop
hlt
and
lret
or
sub
inc
lret
sub
imull
aam
xchg
movsb
sbb
sti
mov
repnz
jg
into
cmp
sbb
mov
dec
cmp
mov
push
pusha
and
setno
imul
loop
xchg
outsb
negl
inc
mov
inc
clc
jb
shrl
pop
mov
pop
cld
jg
out
nop
cmp
sub
popf
push
out
xchg
mov
adc
je
mov
dec
mov
stc
or
fstpt
pop
inc
mov
adc
mov
xchg
or
dec
jno
xor
mov
fstpl
in
daa
inc
dec
out
xchg
outsb
nop
xor
xchg
jno
fisubrl
xlat
je
and
mov
lcall
dec
test
pmulhw
test
mov
ficoms
aam
jno
or
hlt
xchg
lock
cmc
cmovb
imul
test
or
lods
stos
loope
dec
sub
adc
into
mov
enter
aam
insl
pusha
int
mov
fisttpll
mov
test
mov
mov
daa
fnsave
dec
jle
inc
and
out
sbb
cli
jge
lcall
mov
sbb
bound
jae
hlt
shrb
icebp
iret
shl
jae
popf
in
loop
jp
or
scas
mov
daa
cmpl
int3
dec
sub
aam
adc
xor
and
inc
lods
int3
stos
fmuls
das
sub
xchg
mov
shlb
notl
lea
repz
sub
sbb
rclb
jg
and
xor
cmp
adc
xchg
sbb
cmp
push
icebp
inc
xor
arpl
jnp
mov
stc
or
mov
jnp
push
mov
jl
cli
leave
fdivrs
or
push
daa
je
sub
xlat
jl
mov
jmp
push
jp
daa
push
popf
insb
push
mov
ret
sbb
jno
adc
daa
pop
or
in
fcoms
lret
je
addr16
push
adc
add
loop
je
idivl
ljmpw
xchg
dec
and
adc
repnz
xchg
mov
pop
cmp
pop
test
xchg
hlt
cmp
add
or
hlt
loope
aad
popa
ds
mov
lea
add
jns
fldt
bound
fiaddl
mov
je
fdivs
and
add
lds
jo,pn
dec
xor
sbb
outsl
imul
fistpl
cmp
lea
mov
dec
test
cld
loope
fistps
sbb
sub
sub
inc
inc
int3
dec
pop
pusha
int3
inc
and
into
pop
movsl
sub
inc
push
addr16
and
inc
add
mov
fidivl
push
mov
sub
cld
fwait
add
rorb
xor
xchg
pop
cmpsb
cmpsl
and
sub
shll
or
inc
jns
and
sub
sbb
xchg
outsb
cvtps2pi
mov
lret
iret
push
adc
xchg
mov
mov
scas
xchg
sbb
cwtl
push
sub
test
out
jnp
sbb
or
jae
fsubl
outsb
out
imul
out
push
dec
xchg
push
sbb
cwtl
lret
mov
aaa
call
mov
xor
jecxz
mov
jae
aad
xorl
push
int3
mov
or
xchg
sub
outsl
adc
std
in
sub
mov
push
mov
dec
imul
pop
dec
xchg
psrld
push
stos
or
sub
jp
mov
repz
xor
push
adc
nop
or
ficoml
cs
sbb
pop
or
inc
dec
lret
jns
jmp
xchg
push
or
repz
cmp
andl
sub
or
aas
int3
adc
mov
pop
sbb
sbb
cmp
sub
je
jb
inc
cwtl
xchg
daa
mov
dec
rorb
jae
jne
xor
cmc
mov
pop
dec
xchg
in
adc
adc
in
cmc
roll
popa
dec
data16
jae
jecxz
xor
lahf
test
lods
push
nop
and
imul
xchg
popa
push
adc
mov
sub
and
push
fldt
cmp
pop
sti
cmp
xchg
cli
sub
sbb
push
sbbb
inc
sub
cmp
mov
cli
dec
add
lcall
clc
rcrb
jno
std
adc
xor
lock
pusha
repnz
in
insl
movb
xchg
sbb
xchg
jns
jns
fmuls
mov
je
xchg
fildl
inc
cld
add
and
or
into
mov
mov
and
push
xlat
xor
and
sbb
sarl
pop
decl
shrb
fwait
inc
shlb
ss
sub
rorb
xchg
adc
push
sbb
pop
jg
stos
xor
aam
mov
daa
jns
in
jae
cmp
cwtl
imul
movsb
insb
cmp
push
push
aam
pop
pop
mov
push
cwtl
in
hlt
pop
fists
sbb
xchg
insl
scas
enter
int
int3
push
mov
dec
enter
and
aaa
adc
dec
shll
adc
fisubl
xor
and
adc
sub
xchg
mov
daa
jl
xchg
dec
push
sbb
sbb
and
push
in
jl
adc
pop
call
xchg
or
push
lret
lcall
cwtl
inc
jo
or
mov
dec
sub
sbb
stos
push
lea
xchg
ficompl
or
xchg
push
notb
dec
jae
lret
push
and
fnstcw
rol
push
adc
dec
adc
ret
push
mov
cmp
mov
out
jge
mov
out
add
xor
add
jne
push
mov
xchg
adc
pop
lock
jno
call
push
adc
pop
or
iret
push
cmpsl
ret
mov
add
insb
sbb
arpl
rcrl
pop
mov
rcrl
inc
lods
mov
pop
and
cmp
dec
repz
adc
jne
sbb
mov
sub
add
xor
fcompl
adc
mov
add
pop
push
ljmp
cmp
stos
jo
jp
imul
inc
fmull
lea
loopne
dec
and
int
arpl
popf
aad
mov
inc
lret
push
imul
and
cmpsl
pusha
ret
mov
leave
pop
daa
arpl
out
or
clc
xchg
stos
shr
xchg
mov
sub
pushf
pop
lret
push
xor
dec
ljmp
iret
bound
hlt
pop
daa
mov
loop
and
jne
mov
jg
sbb
push
outsb
and
je
adc
mov
sub
mov
cmp
imul
dec
and
mov
addr16
sbb
insb
xchg
mov
sbb
adc
pop
jns
push
and
pop
mov
mov
xlat
push
sub
xchg
xor
push
leave
outsb
cmp
add
das
jbe
pusha
jae
push
inc
xor
mov
adc
sub
xlat
dec
mov
fmul
sub
mov
push
mov
lds
xor
push
cltd
push
push
movsl
test
xchg
xlat
clc
jge
pop
outsl
inc
jno
add
int
sbb
cltd
outsl
and
inc
sub
mov
cs
sub
mov
std
push
push
lock
pop
pop
xor
fisubs
push
nop
mov
mov
jmp
imul
adc
pop
jae
cs
inc
mov
lea
jno
hlt
aad
lcall
mov
dec
xor
mov
cmp
in
lahf
fimuls
aad
gs
add
scas
mov
fsts
lahf
or
xor
or
cmp
adc
or
jecxz
add
test
outsb
sub
lea
sub
out
les
mov
notb
stc
stos
movsl
cmpsl
add
dec
insl
fldl2t
and
les
add
and
neg
and
arpl
jno
mov
fnstsw
xor
xor
cwtl
int
xchg
fsubrl
fidivrl
daa
push
push
sub
and
push
iret
in
rep
dec
mov
scas
xchg
mov
pop
je
sub
cmp
adc
or
fildll
sub
aaa
shrb
das
sub
inc
js
sub
dec
loop
mov
push
into
add
jbe
stos
adc
lcall
incb
aam
test
rcll
in
into
xor
xor
js
scas
or
inc
inc
lcall
sbb
jp
xchg
dec
and
outsb
rcll
cmp
pop
outsl
and
jo
push
sbb
push
rcll
fimull
lcall
mov
rcrb
cs
adc
rorb
push
shll
jnp
push
cwtl
mov
xchg
in
imul
sahf
jg
jae
sub
je
or
xchg
adcl
mov
fldenv
or
ficompl
mov
or
dec
es
jmp
dec
test
popa
cltd
cmp
jb,pt
ds
pop
je
inc
lock
xor
cvttps2pi
sub
cmp
call
dec
mov
in
mov
xchg
out
and
cli
add
dec
or
mov
mov
mov
lcall
sub
call
jnp
cmpsl
xor
xor
inc
das
push
sub
or
xchg
insb
cmp
adc
out
ret
dec
rsqrtps
sub
insb
jp
cmc
ds
adc
push
dec
in
je
or
movsb
mov
cmpsb
arpl
fstpt
push
and
inc
push
mov
mov
mov
cmp
mov
loop
xlat
push
mov
jge
adc
fidivl
daa
jecxz
push
cmp
pushf
cmp
mov
push
mov
mov
pushf
or
xchg
xor
imul
sbb
jmp
popf
inc
pop
or
mov
ret
pusha
les
inc
pop
ljmp
sub
push
push
xchg
mov
cmp
dec
addr16
insb
jne
xor
xchg
cmp
or
xchg
dec
push
xchg
jp
fisttpl
mov
xchg
bound
ja
pop
lods
fistps
push
sub
pusha
push
and
mov
xor
xchg
mov
mov
xor
mov
in
roll
rolb
pop
xor
xchg
shrb
adc
push
pop
xchg
sbb
adc
icebp
xchg
push
xchg
mov
pop
scas
jmp
jo
arpl
iret
cs
dec
adc
outsl
xchg
fs
pop
in
and
pusha
cwtl
icebp
cmp
inc
sarl
loop
lods
dec
cmp
aad
cwtl
xchg
fdivr
cmp
sub
inc
cmp
push
orl
aaa
in
je
adc
sbb
and
cltd
aad
mov
shlb
into
mov
mov
andl
cmp
iret
or
lea
repnz
mov
les
and
xor
hlt
daa
test
jb
out
xor
mov
int3
push
inc
mov
push
jp
push
adc
daa
lods
mov
test
in
jne
subb
jmp
outsb
popf
imul
and
xchg
cltd
sub
or
push
dec
rcll
dec
jecxz
out
lret
or
cmp
dec
clc
xchg
pop
or
xchg
push
cmp
sub
jbe
cmp
lods
fisubl
jp
test
xor
xchg
ds
jno
push
xor
sbb
adc
xchg
and
lahf
dec
rorl
lcall
call
mov
xchg
adc
int3
or
shll
jnp
scas
sbb
cwtl
repnz
adc
jne
xchg
hlt
std
bound
and
jnp
mov
jae
fsubl
mov
adc
outsw
gs
bsr
sbb
push
pop
mov
cwtl
xor
je
cmpsb
fwait
push
sub
cvtps2pi
notl
pop
cmpsl
jbe
loop
outsb
dec
das
iret
lret
or
mov
sbb
xchg
test
sbb
sbb
xchg
out
int3
pop
andl
sbb
cmp
adc
jp
insb
sub
imul
sub
pusha
inc
adc
ss
clc
push
push
adc
xchg
xchg
fisttpl
sub
jecxz
xor
mov
stos
cmp
push
push
sbb
push
jp
and
xchg
mov
sbb
xchg
stos
and
mov
fisttpl
sub
jbe
mov
out
sub
sub
jnp
cwtl
and
daa
pop
rcrb
and
lret
enter
lret
loop
roll
xor
lea
or
test
orb
test
dec
push
sub
fmull
repz
lcall
mov
sbb
cmp
xchg
jns
mov
sub
daa
outsb
movsl
jae
and
pusha
mov
xchg
out
and
dec
dec
sub
mov
ja
stos
push
sti
test
push
cltd
sbb
out
mov
insb
pop
jp
fwait
rcl
aam
imul
ss
xor
xlat
pop
dec
insb
xchg
fmul
adc
xor
fldcw
lcall
cmp
sbb
je
adc
adcl
cwtl
mov
dec
cmpb
arpl
flds
insb
lods
pop
push
or
push
test
call
xchg
push
in
xlat
daa
in
clc
test
cld
stos
pop
test
or
test
xchg
inc
fisubl
mov
les
mov
mov
out
pop
sub
adc
cmpsb
jmp
mov
mov
jmp
ljmp
scas
daa
inc
fdivs
push
push
in
sub
or
inc
xor
fnstcw
xor
mov
enter
aad
inc
aad
insb
pop
daa
add
stc
mov
lahf
outsl
repz
aam
pop
adc
test
out
and
loop
shll
jne
mov
icebp
xor
mov
mov
popf
int3
ja
pop
loope
stos
insb
ficompl
or
fidivl
mov
add
and
adc
je
mov
cmp
movsb
rcrb
mov
mov
and
mov
and
and
jns
push
mov
jne
rep
out
mov
inc
sbb
outsb
ds
aaa
mov
xchg
sub
lahf
mov
jle
cmpsb
sbb
mov
test
and
int3
lret
imul
xchg
scas
fwait
mov
clc
dec
cmp
xorb
mov
xor
sbb
adc
fisttpl
sahf
icebp
nop
dec
adc
and
lret
test
mov
xor
sbb
movsb
psllq
mov
inc
enter
sub
sub
cmpsb
bound
movsb
dec
repz
insb
mov
mov
adc
jp
mov
shll
pop
jge
rol
mov
out
ror
mov
push
loope
inc
jo
iret
andb
fdivrs
outsl
ds
leave
aad
mov
js
loop
jl
loope
shrl
adc
arpl
aad
pop
cmc
mov
and
rorb
push
jno
pop
mov
xchg
jns
ljmp
push
jb
mov
mov
push
inc
cwtl
xor
lahf
pop
repnz
jg
lret
ja
or
mov
push
sub
cmp
stos
mov
or
shll
mov
mov
ds
imul
out
mov
shlb
das
cwtl
dec
das
adc
xchg
xor
cmc
cmpsb
rcrb
sbb
scas
pop
mov
push
mov
jl
cmpsl
jmp
and
mov
cs
mov
inc
sub
adc
cld
adc
les
pop
adc
mov
and
add
inc
push
dec
lea
dec
mov
icebp
sbb
and
dec
mov
ds
jg
mov
adc
fsub
pop
out
shlb
xor
ror
sbb
jmp
cmp
sbb
pop
adc
mov
cmp
sbb
sub
cmp
push
mov
dec
xor
fdivrs
shll
push
xchg
mov
imul
sub
shrl
dec
cmp
xor
pop
in
or
inc
movsl
into
inc
inc
cmp
sub
lods
cmp
add
cltd
lcall
lods
lock
xchg
push
outsb
mov
xchg
sub
push
dec
test
ja
xorl
mov
mov
adc
scas
lcall
mov
sbb
inc
stos
inc
sbb
inc
cmp
or
inc
or
stos
cmpb
out
dec
enter
or
roll
rcrl
cmc
add
popf
mov
cmc
dec
aad
stos
lods
into
or
xchg
outsb
jnp
adc
dec
xchg
mov
dec
clc
push
inc
pop
sbb
xchg
fidivrl
pop
xchg
push
aad
mov
cltd
push
push
mov
mov
jle
or
dec
mov
es
negl
or
mov
mov
inc
dec
mov
mov
xor
sbb
and
inc
fnstenv
dec
push
popa
dec
mov
clc
dec
jge
scas
js
push
jne
inc
mov
sbb
mov
mov
sub
in
stos
add
jle
ss
pop
add
sbb
and
fisttps
sbb
div
mov
jl
sub
shlb
cmp
or
cmpsb
sarl
test
sti
mov
jns
sbb
out
mov
inc
mov
mov
bound
sbb
imul
pop
nopl
iret
cmp
test
int
iret
ret
jle
adc
pop
mov
xchg
jle
xchg
sub
xor
mov
orb
fisubrs
mov
or
jnp
lea
mov
test
aam
daa
fs
mov
jb
dec
push
scas
push
es
adc
addr16
shlb
push
inc
add
adc
je
fdivrp
in
aad
jae
push
adcl
inc
jge
pop
enter
pop
xchg
xor
lcall
push
adc
cltd
cltd
sbb
fsts
into
mov
sahf
or
out
fidivrl
subb
iret
imul
pusha
dec
in
dec
fisttpl
clc
stos
daa
push
mov
adc
lcall
pop
repnz
and
out
dec
sbb
dec
xor
inc
mov
xor
stc
int3
push
dec
lock
stos
cmpb
pushf
scas
cs
dec
and
ljmp
fwait
das
inc
and
stc
aas
push
sub
mov
int
fbld
pop
ljmp
outsl
fldenv
ljmp
dec
xchg
push
sub
fistpl
inc
xor
stos
clc
ud2
or
dec
or
js
and
ljmp
dec
aad
adc
fcom
int3
ljmp
push
out
adc
and
aam
cmp
jae
fistpl
lret
das
xchg
lods
int3
push
cmp
adc
dec
sbb
inc
dec
imulb
push
mov
data16
adc
mov
loop
sti
push
in
xor
lea
jb
pop
inc
daa
xchg
cmp
stc
push
fwait
dec
mov
inc
mov
sub
mov
stos
xchg
sbb
adc
sbb
dec
lea
out
daa
add
call
sbb
fnstsw
daa
enter
sub
cwtl
rep
sbb
xchg
or
jae
cmp
sub
clc
cmp
lods
sti
sbb
andnps
mov
mov
test
sbb
jo
pop
push
pop
out
pop
add
push
pop
and
mov
or
xlat
push
pop
scas
cmc
insl
cld
pusha
loopne
nop
ret
je
adc
and
lss
jge
sub
pop
bound
and
push
adc
mov
jnp
js
and
cmpsb
add
pop
sbbl
sub
movsl
fistpl
loop
daa
adc
xchg
xlat
sub
adc
mov
je
dec
aad
xchg
insl
and
and
mov
inc
dec
sub
inc
test
cmp
lods
push
pop
mov
mov
xor
push
push
jnp
and
lods
cmpsb
push
sbb
xor
scas
mov
cmpsl
mov
sbb
and
add
cmp
int3
fldt
dec
lods
sub
popa
mov
ds
xor
sub
push
rolb
js
dec
jno
mov
lods
cs
push
xchg
addr16
push
push
scas
or
repz
jae
and
inc
or
sub
outsl
push
sub
aam
jae
xor
stos
daa
push
inc
push
xchg
inc
mov
push
daa
mov
incb
xchg
out
pushf
adc
adc
mov
push
ficompl
mov
ret
pop
pop
sub
ficoml
imul
decb
pop
sub
in
cwtl
int3
divb
repz
outsb
aam
cltd
inc
xor
mov
mov
adc
sub
push
scas
mov
imul
sbb
daa
pusha
mov
je
cmc
mov
add
cltd
enter
and
sbbb
stos
aad
pop
in
push
jne
lods
cmp
sbb
std
jle
xor
cwtl
push
popf
push
imul
subb
adc
fwait
testl
clc
inc
jp
xorb
lea
shlb
adc
adc
mov
adc
jne
mov
daa
mov
in
cli
pop
dec
subb
or
sub
movsl
cmpsb
pop
cwtl
jae
push
aad
pop
lcall
dec
adc
mov
mov
cmc
jp
cmpsl
sub
xor
in
arpl
je
jno
sarb
xorl
sub
sbb
cmp
push
jmp
push
mov
jp
xor
int3
jns
jmp
nop
inc
fwait
jb
push
or
test
shlb
fmuls
pop
in
pop
adc
xlat
fldl
fldt
lea
and
sbb
cmpsb
adc
or
push
dec
insb
cwtl
sub
pop
mov
lcall
scas
mov
sbb
popa
fcmovnb
sub
sbb
push
jle
adc
aaa
sub
add
mov
lods
mov
jge
sub
aas
jnp
or
lea
pop
add
inc
add
imul
sub
mov
ja
push
rcrb
inc
out
mov
push
inc
pusha
pop
xchg
xchg
pop
adc
mov
fwait
outsb
xchg
int3
out
data16
xor
iret
loopne
rcl
out
cwtl
sub
mov
cld
xchg
in
jg
ret
jge
cltd
cmp
cmpsb
push
outsl
xor
xchg
jno
inc
cmp
adc
adc
hlt
inc
adc
pop
inc
sub
jle
scas
push
cmp
mov
pop
mov
mov
and
and
cwtl
sbb
mov
mov
mov
cwtl
sbb
aad
or
fwait
in
ficompl
mov
out
stc
sub
mov
rcll
push
lahf
cmpsb
pop
add
jl
lods
addb
out
jmp
out
sub
lret
arpl
mov
adc
dec
loop
sbb
xchg
or
add
test
sub
inc
inc
pop
and
push
adc
xchg
insl
or
mov
insl
insl
lock
cmp
mov
sub
cltd
pop
orl
mov
notb
arpl
in
popf
ja
mov
test
fwait
or
pop
inc
push
cmpsb
in
ljmp
push
push
hlt
daa
sbb
mov
out
cs
cmpsl
insb
xchg
push
dec
lahf
gs
rcll
outsb
ret
fsubrp
repz
mov
xor
ss
test
jno
dec
jmp
jmp
mov
mov
cli
insb
lret
adc
loop
sub
call
data16
repnz
dec
adc
in
fstps
test
pop
push
xchg
cmpl
pusha
aas
aad
loope
pop
je
shr
adc
sbb
sub
subb
aas
lods
outsb
mov
mov
push
mov
push
or
cld
pop
mov
push
add
jno
iret
jno,pn
xor
inc
rol
xor
stos
imul
jnp
xor
sub
fcoml
inc
das
pop
mov
push
pop
addr16
es
in
dec
jl
or
movsb
push
mov
jl
xchg
sub
mov
test
pop
push
test
and
sbb
and
mov
stos
in
sbb
call
and
lea
daa
pop
aas
jg
pushf
jo
sub
cmp
daa
xchg
cmpsb
cmpsb
sbb
push
pushf
pop
adc
mov
int3
mov
jmp
xor
add
std
xor
cli
xor
xchg
jl
lcall
in
sub
daa
mov
rclb
repnz
adc
mov
and
sub
notb
jg
xor
xchg
xor
xchg
push
push
add
jbe
sbb
js
movsb
loop
lcall
sbbl
cmp
jg
and
jno
mov
aam
mov
adc
jmp
daa
add
or
lock
popf
dec
or
in
cmp
jae
mov
adc
jge
dec
cmc
xchg
adc
mov
out
scas
imul
adc
or
sub
or
testl
xchg
ret
cwtl
insb
jbe
fbld
jle
in
mov
test
sbb
adcb
fidivrl
scas
aaa
pop
push
mov
push
jnp
mov
out
movsl
xor
push
pop
fwait
pop
mov
inc
das
dec
loop
les
push
mov
loopne
mov
sbb
dec
repnz
sub
sbb
sbb
hlt
push
cmp
inc
dec
sbb
mov
mov
jl
into
loopne
sub
push
sbb
push
stos
lcall
mov
lcall
es
lret
aam
push
in
daa
incb
popf
pusha
xchg
cmp
jno
gs
mov
lds
dec
xor
outsb
bound
xchg
pop
or
out
stos
push
fmull
lret
out
pop
inc
rolb
xchg
push
ljmp
xor
insl
sub
push
lahf
pop
stos
ds
xchg
sub
push
inc
movb
sbb
push
lret
xor
into
sub
sub
jg
sti
sbb
inc
push
icebp
lods
scas
lea
int3
int3
jmp
pop
cs
xchg
adcb
movsl
insb
leave
cs
jmp
dec
inc
cmc
sbb
add
sub
xchg
ljmp
lret
and
int3
cmc
cmp
add
xchg
xchg
or
dec
xchg
push
push
fists
mov
xchg
insl
scas
xchg
fisttps
lds
or
xchg
sub
shl
xchg
xor
or
cwtl
clc
cld
lods
sahf
adc
aas
das
jae
sarl
jnp
xchg
js
nop
mov
mov
loopne
lods
mov
xor
repnz
hlt
xor
ja
sahf
ret
mov
movsl
in
and
cmpsb
cmc
dec
inc
sub
mov
cmp
mov
sarl
movsl
jmp
inc
gs
pop
xchg
add
xchg
dec
xchg
xchg
ja
lods
inc
out
insl
imul
cmp
into
xchg
add
xchg
enter
repnz
lret
xchg
outsb
mov
dec
and
je
or
mov
into
push
ss
subb
aam
cmp
cld
roll
test
mov
lret
mov
cmpsl
fmull
nop
cwtl
cltd
push
loopne
xlat
mov
bound
sbb
mov
push
lea
cmp
cmpl
scas
dec
mov
cmc
pop
xchg
aad
push
adc
add
push
cs
mov
hlt
sar
sub
sub
xchg
sub
cmc
ret
or
sub
nop
sub
pop
jmp
xchg
and
je
sbb
jo
fmull
lahf
dec
sbb
xor
scas
push
mov
stc
xchg
adc
xor
lret
jno
cwtl
adc
cli
pop
outsl
clc
pop
and
pop
scas
sarb
iret
xchg
lcall
inc
repz
inc
sarl
imul
mov
xchg
es
xor
cmp
in
addl
inc
xchg
shrl
iret
push
js
mov
lret
outsb
xor
inc
adc
add
fs
jl
fwait
xchg
xlat
cli
fimuls
jbe
cli
push
in
xorl
jne
adc
sbb
addl
iret
adcl
and
aad
sbb
dec
push
mov
inc
xor
cmpsl
mov
xor
jae
and
jo
cwtl
out
out
mov
out
aam
jno
push
xchg
mov
popw
fwait
mov
std
dec
cmpsb
dec
or
jp
stos
sub
jnp
cmc
test
mov
sti
sbb
int
cwtl
sbb
std
or
addr16
push
xchg
call
outsl
test
sbb
mov
mov
push
xchg
mov
and
and
cmpsl
popf
adc
mov
daa
mov
jle
adc
xchg
gs
and
sub
outsl
cld
cs
shll
clc
pop
and
inc
cmpsl
rol
jp
mov
xchg
mov
loope
inc
hlt
or
add
adc
jl
adc
insb
outsb
jbe
xchg
jnp
xchg
sbb
icebp
ljmp
cmp
bswap
mov
sub
sub
dec
sub
push
rorb
stos
dec
xor
lcall
adc
xchg
cmp
dec
cmovb
and
movsl
sbb
adc
dec
dec
daa
adc
sub
or
lret
xchg
push
shlb
push
or
inc
outsb
ret
je
cmc
pop
insb
mov
enter
xchg
jbe
loopne
inc
cmpsb
sbb
sbb
arpl
xchg
push
fwait
xchg
jae
outsl
push
nop
or
sbb
daa
mov
mov
cwtl
jmp
dec
ljmp
or
sub
xlat
je
sbb
sbbl
pusha
push
inc
movsb
fcoml
adc
repnz
and
adc
adc
jae
hlt
push
xchg
aam
xchg
adc
insb
jmp
add
inc
jbe
outsl
dec
pop
leave
jg
call
js
mov
xchg
dec
loop
add
loopne
jmp
push
xor
dec
add
dec
mov
and
into
mov
sbb
sub
push
ja
cmp
jle
mov
arpl
scas
notb
aas
sahf
imul
pop
or
mov
push
mov
dec
jne
ljmp
adc
mov
cmp
push
jl
xchg
dec
and
insb
and
adc
insl
add
sti
repz
and
fs
push
mov
push
xchg
jb
cmp
or
inc
loope
ds
sub
cmp
sub
push
out
mov
or
out
imul
push
or
dec
arpl
pop
dec
xor
stos
addr16
sbb
pop
daa
fs
int
push
xchg
push
adc
xchg
jmp
mov
pop
dec
orl
mov
xchg
or
daa
jecxz
out
or
xchg
xchg
or
stc
pushf
mov
pop
ss
hlt
jge
dec
shlb
rcrb
jnp
adc
push
jo
cld
dec
roll
pushf
dec
xor
adc
outsl
out
lods
loope
mov
mov
cmp
mov
cwtl
jge
mov
or
dec
popl
ljmp
adc
daa
out
les
fldt
popf
gs
and
mov
or
pop
cmpsb
fs
das
daa
movsb
or
jae
std
adc
test
sarl
xor
mov
jmp
mov
decl
sbb
adc
mov
jnp
or
mov
leave
scas
xchg
jbe
xchg
sbb
ss
js
add
adc
push
insb
sbb
cmpsb
add
xor
dec
scas
fbstp
sub
stos
aad
push
int
hlt
jo
popf
popl
inc
sub
fs
dec
or
into
loope
dec
or
mov
pop
jecxz
adc
pop
aaa
mov
divl
and
stos
and
cmp
pop
addb
test
cmpl
add
hlt
xchg
aaa
adc
gs
sub
pop
daa
or
push
pop
sbb
push
leave
sbb
lahf
xor
aam
cltd
daa
divl
mov
mov
or
sbb
dec
rorb
lods
push
and
mov
xchg
and
mov
rcl
stos
push
and
nop
and
ror
cwtl
xor
and
ljmp
mov
sbb
stos
shll
mov
cltd
or
inc
imul
stos
xlat
lods
cmp
inc
inc
cltd
dec
sbb
pop
arpl
fwait
mov
ror
stc
xchg
inc
std
dec
dec
mov
add
jmp
jno
scas
stos
or
push
jnp
enter
inc
pop
leave
or
repnz
sbb
repz
mov
cwtl
pop
sti
enter
pop
add
mov
test
xchg
sub
or
lahf
inc
cmp
mov
aad
leave
sbb
mov
sub
pushf
adc
cltd
sub
int
mov
adc
xchg
daa
punpckhbw
rorb
pop
mov
call
scas
pushf
jbe
cmp
cltd
sub
decl
sub
mov
movsl
aam
shll
stc
dec
jne
je
lods
sub
jl
dec
int3
jl
cmp
sti
mov
iret
push
sub
xor
fcoms
cmp
xchg
pushf
mov
adc
push
adcl
adc
in
dec
cmp
out
mov
adc
jmp
dec
and
jo
ss
mov
adc
push
push
push
push
mov
mov
inc
xor
xchg
push
jne
xchg
mov
push
mov
lcall
lret
xor
cmpsb
and
scas
jne
mov
xor
jnp
fistps
dec
adc
push
dec
add
sub
mulb
ja
cltd
in
shll
pop
xor
addb
in
fcoms
stc
mov
pushl
popa
pusha
aas
imul
sbb
nop
pop
rolb
adc
xor
mov
fiaddl
mulb
sbb
jb
mov
add
mov
mov
fdivrl
pusha
stc
adc
and
fidivrs
push
jo
dec
sbb
sbb
cwtl
in
cwtl
or
adc
push
pop
int3
or
sbb
xchg
dec
lcall
mov
test
push
daa
cmc
test
mov
adc
icebp
movsl
icebp
mov
arpl
pop
adc
cli
out
cwtl
mov
xchg
pop
lods
adc
rcr
xor
lods
and
push
mov
mov
jne
lahf
push
mov
cmp
adc
in
fnstenv
and
sub
cmp
rorb
cli
je
push
lcall
mov
push
ds
nop
pop
ret
mov
push
adc
dec
mov
xor
out
dec
cld
push
mov
mov
daa
adc
insb
mov
mov
xor
mov
aam
jmp
and
pop
cwtl
sbb
negl
lcall
cmp
daa
mov
aam
into
lcall
out
jno
xor
cmp
push
popf
les
repz
or
sbb
dec
push
mov
xchg
mov
or
in
or
pop
push
lock
push
jne
sbb
lock
inc
sbb
jmp
push
sbb
inc
adc
dec
mov
jo
cmovae
aaa
cmp
outsb
rclb
pop
icebp
or
sti
jae
sbb
std
stos
adc
mov
cmc
sar
insb
mov
and
xchg
sub
lret
jno
jne
cmp
cmp
scas
out
push
sub
cld
cmp
xchg
outsl
push
push
scas
xchg
imul
cltd
sarl
dec
xchg
shll
xchg
xchg
dec
xchg
dec
push
push
push
mov
push
mov
or
adc
nop
lcall
cmp
neg
aad
fwait
call
fcoml
and
ja
sbbl
mov
push
fwait
int3
ss
pop
fwait
xchg
lea
jnp
lods
mov
fs
push
cmpl
jb
adc
pop
lods
jno
in
or
xor
xor
sbb
or
les
sub
or
cmpsb
or
aad
testl
fists
cmc
sub
xor
fwait
sbbl
adc
stos
dec
inc
cmp
test
mov
inc
xor
lcall
cltd
add
push
loop
add
xchg
xor
iret
jmp
aam
sub
or
mov
int3
sbb
lret
mov
mov
iret
enter
push
inc
inc
pop
mov
push
mov
jle
scas
or
inc
js
mov
cld
sbb
add
lods
cmp
xor
jnp
jne
rorl
adc
jle
push
lock
cwtl
adc
stos
xchg
daa
xchg
pop
loopne
scas
je
xor
lods
jp
aad
cmp
mov
fucom
andb
xchg
outsl
jno
sbb
andl
outsl
mov
leave
adc
arpl
adc
push
push
dec
mov
xchg
jge
and
mov
xchg
testl
or
mov
mov
imulb
or
push
inc
fisttpll
ja
mov
xor
aaa
mov
mov
dec
stos
roll
pop
movaps
das
jnp
xor
ja
add
outsb
lods
in
push
in
push
adc
ret
push
mov
cwtl
sbb
cwtl
pusha
adc
sahf
lcall
dec
and
sbb
scas
sbb
std
jo
es
jmp
adc
adc
out
hlt
xchg
lret
ret
arpl
popf
mov
adc
bound
in
cmp
push
out
push
adc
data16
xorps
xchg
dec
nop
aad
getsec
xchg
fwait
in
or
jnp
push
cmp
cmp
sti
stos
daa
xor
data16
sub
sub
xchg
pop
test
test
pushf
inc
repnz
dec
aad
call
cmpsb
lds
out
fiaddl
sbb
sbb
sbb
mov
inc
enter
les
popa
repnz
shlb
push
popf
xchg
sbb
fnstsw
adc
xchg
stos
sub
dec
fwait
jmp
adc
xchg
xchg
jl
daa
outsb
jge
inc
rcrl
cmp
insb
jge
sbb
pop
pop
mov
adc
fwait
adc
popf
xchg
push
push
pushf
sub
in
and
push
jnp
jne
push
or
adc
enter
mov
mov
ljmp
lea
xor
jbe
cwtl
sarl
jecxz
and
mov
cmp
aad
mov
or
xchg
icebp
subb
or
mov
lcall
mulb
sub
or
mov
jge
test
shrl
sbb
frstor
icebp
jnp
add
or
and
mov
sub
movsl
and
xor
mov
cltd
jg
push
jne
or
lods
dec
sbb
cltd
push
sar
pop
rcrl
mov
in
movsb
std
rclb
out
daa
sub
xchg
mov
pop
pop
xchg
jnp
sub
xchg
lea
nop
ficoml
daa
cmp
aad
push
cs
inc
pop
mov
dec
pop
xor
mov
adc
add
insb
jmp
andb
rclb
xor
out
daa
ds
sub
mov
jp
ljmp
ficomps
outsl
subb
aas
clc
xchg
cmpsb
or
mov
jmp
sub
notl
out
xchg
dec
jno
cmc
xchg
push
rclb
jbe
push
neg
lea
in
imul
aam
call
sub
adc
pop
pop
mov
gs
hlt
imul
jno
movntps
daa
hlt
add
test
adc
cld
dec
aas
jge
cmp
mov
xchg
sub
jecxz
dec
jl
push
movsb
or
dec
inc
or
lret
sub
cwtl
mov
adc
popa
mov
out
cmp
cmp
in
adc
xchg
adc
bound
lock
pop
cs
xor
lret
cld
into
and
add
rcrb
hlt
xor
test
pop
mov
fs
cwtl
les
mov
cmpsb
outsl
hlt
adc
pushl
sbbb
adc
xchg
daa
popl
pushf
or
sub
dec
cwtl
lods
cmpsb
mov
jae
sbb
mov
jmp
call
daa
add
mov
xlat
loope
xchg
or
mov
push
mov
jns
test
push
sbb
xor
jle
xor
bound
jle
xchg
popf
jmp
cmc
bound
and
ficompl
inc
inc
mov
popa
jns
nop
sub
inc
mov
mov
jbe
sub
sbb
aaa
ss
imul
xor
popf
or
inc
sub
mov
sbb
mov
dec
stos
push
xchg
or
dec
inc
sub
sbb
mov
daa
cmpsb
push
pop
movsl
sbb
cmp
adc
xchg
gs
stos
jb
jnp
sbb
enter
pop
add
fdivs
int
ja
push
jmp
jne
adc
test
outsl
stos
or
adc
sub
mov
push
daa
add
jle
mov
ficompl
add
fs
rol
sub
xchg
push
and
daa
out
jno
rclb
out
jg
xchg
mov
inc
mov
cmp
push
push
jae
in
mov
and
add
lds
jne
mov
iret
push
and
outsb
sub
dec
and
adc
or
lcall
pop
js
pop
pop
sbb
shrl
mov
fs
lcall
sub
frstor
in
incb
adc
jg
xchg
or
pop
lods
adc
daa
adcb
test
xor
or
push
or
repnz
and
sbb
dec
adc
adc
xor
mov
subl
xor
js
xchg
testb
sub
xchg
push
es
or
pushw
cmpsb
push
and
mov
loopne
sbb
subl
fisttpl
push
rclb
popf
xchg
enter
lcall
sbb
push
xor
mov
mov
mov
mov
pusha
sbb
push
jae
adc
dec
loop
das
mov
stos
enter
lcall
pop
aad
sub
jg
test
stos
mov
dec
push
mov
pushf
mov
int3
xchg
lahf
mov
pushf
dec
sub
lcall
aas
mov
inc
adc
stos
rcrl
adcl
cwtl
xchg
aaa
cld
cltd
rclb
sbb
sbb
mov
je
fwait
adc
outsl
fmulp
cld
mov
aad
cmc
cld
ljmp
popf
pop
mov
dec
lret
shl
jp
push
mov
mov
mov
rolb
dec
lret
mov
js
sbb
sub
mov
out
xchg
testl
imul
xor
out
sbb
mov
cld
jnp
sbb
fwait
pop
aad
xchg
pushf
es
adc
or
movsb
pusha
push
mulb
ss
popa
inc
dec
aam
pop
jae
cmp
stos
pusha
imul
pop
dec
push
jl
xchg
mov
dec
jns
mov
sbb
dec
mov
dec
jmp
in
divb
xchg
add
pop
stos
pop
or
ret
and
dec
mov
mov
sub
bound
outsb
mov
xor
sub
lea
outsl
push
out
minps
lock
cmp
xor
rep
adcl
push
lods
daa
adc
sbb
les
pop
aam
lret
mov
jnp
daa
test
mov
popa
mov
rcl
xchg
mov
daa
cmp
movsb
pushf
popf
sbb
mov
adc
inc
xchg
je
in
js
into
xchg
push
mov
push
scas
push
fsts
sub
adc
push
xor
rorl
adc
ficompl
rorb
xchg
mov
aam
push
push
cmp
in
add
and
mov
inc
mov
je
rcl
test
sub
mov
pop
push
cwtl
push
or
out
push
adc
out
sbb
movsb
nop
in
sbb
push
mov
mov
mov
cmp
or
jle
int3
mov
int
negl
push
stos
dec
fimull
les
scas
mov
ret
push
repz
jb
repz
daa
and
mov
lds
mov
imul
mov
pop
ja
xchg
mov
imul
cs
xor
in
cmp
push
pusha
fmull
out
dec
jb
mov
cmp
fs
and
sub
adc
xor
sub
pop
les
cwtl
inc
mov
nop
fsts
int3
in
addr16
pop
pop
fnstenv
mov
dec
cs
sub
sub
pop
add
or
mov
and
fdivr
mov
movsl
mov
jae
inc
dec
mov
add
jo
sub
clc
repnz
push
dec
repnz
insl
inc
cmpsl
push
popa
sbb
push
bound
push
dec
fistl
fmul
inc
decl
mov
adc
lret
xchg
daa
pop
jg
das
push
jle
jl
mov
inc
mov
add
cmp
mov
movsl
scas
and
cmpb
sub
sbb
push
mov
mov
bound
xor
xchg
jp
pop
rcrl
and
xchg
mov
adc
dec
xchg
jb
fidivrs
push
stos
daa
rcrb
cmp
cmc
push
jl
ficoms
inc
pushf
mov
aaa
cmp
or
dec
aam
daa
jno
push
clc
inc
cld
cmp
push
dec
push
clc
shrb
sub
ss
subb
cmp
push
lock
and
xchg
mov
aad
sbb
daa
lods
in
dec
jno
lret
jecxz
roll
sbb
lahf
jno
std
xchg
scas
repnz
cmp
test
inc
pop
sbb
cwtl
movb
and
pop
mov
cmp
aam
outsb
stos
push
sub
out
dec
xor
dec
nop
xor
aam
cmp
dec
mov
push
out
pop
shll
mov
mov
lret
dec
insl
mov
dec
loop
cmp
sbb
jns
mov
cmp
jne
shl
repnz
dec
pop
xchg
repz
mov
mov
repnz
int3
rcll
int3
add
movsb
popf
movsb
adc
adc
lahf
ss
mov
stos
add
das
jns
out
jp
push
jmp
cmpsb
mov
mov
mov
sbb
inc
lcall
dec
cli
sub
and
fwait
inc
dec
mov
sub
iret
push
fsubs
ds
mov
or
jne
inc
mov
shrb
lock
fmull
in
inc
or
jns
cwtl
mov
loope
jns
sub
mov
pusha
popa
dec
pop
imul
lods
xchg
loop
sub
paddq
test
mov
and
into
gs
fs
dec
std
bound
cli
bound
cmp
popa
mov
cmc
enter
or
and
imul
repnz
mov
mov
sbb
lds
rcrb
mov
pop
push
adc
out
cwtl
mov
pop
pop
jns
mov
pushf
mov
dec
xchg
mov
stos
sub
sti
fistps
or
ja
ja
xor
push
sub
adc
data16
andnps
and
outsl
ret
cmpsb
rol
fcoml
or
cli
lret
mov
sub
pop
fcomps
xchg
xor
push
dec
daa
enter
loop
cmp
jl
daa
cmc
fstpt
in
dec
xchg
adc
jnp
adc
add
xor
xor
js
cmp
outsb
dec
lcall
movsb
fcoms
ficomps
adc
inc
dec
ja
mov
push
fucomip
sub
ljmp
mov
push
leave
cmp
scas
mov
and
ret
dec
and
arpl
int3
test
jle
notl
insb
adcb
sub
imul
xor
in
adc
imul
ss
mov
mov
sub
stc
jns
xor
dec
or
das
daa
add
int
outsb
das
cmpsl
jnp
lahf
aam
xchg
pushf
cs
out
out
jle
and
dec
xchg
adcl
movsb
mov
push
and
jp
dec
xor
outsl
pusha
scas
pop
sub
insb
daa
clc
sub
pop
nop
add
add
lea
xor
sbb
pusha
mov
pusha
mov
jnp
mov
mov
stos
add
adc
and
pop
xchg
mov
cmp
jae
jp
xchg
test
inc
test
or
mov
stc
mov
cld
inc
in
xor
test
scas
mov
cmp
sbb
xchg
mov
dec
xorb
xchg
daa
outsb
out
xchg
adc
sub
lods
cs
mov
mov
imul
push
daa
rcll
and
xorl
bound
setb
mov
int3
xchg
out
inc
lcall
jp
jl
rorb
push
xchg
stos
push
sub
cmp
jl
adc
push
ljmp
outsb
loop
rcrb
sbb
jmp
xchg
push
aam
test
sub
jmp
out
repz
add
dec
stc
mov
or
inc
push
jb
jp
adc
sub
cmc
xor
cmpsl
ljmp
adc
in
fstl
es
or
dec
rcrb
or
cmpsl
es
mov
fidivs
jnp
dec
dec
sbb
adc
and
jns
inc
in
scas
push
int3
ror
push
sbb
jl
lds
mov
xchg
je
pop
in
adc
lret
add
push
je
push
rorb
add
xor
xchg
or
or
jb
adc
clc
adc
imul
jle
cmp
ja
dec
mov
mov
jge
fmul
imul
ffreep
push
and
inc
inc
mov
jecxz
mov
xchg
push
cmp
xchg
pop
xchg
fs
xchg
inc
divb
int3
push
popa
pop
dec
lcall
mov
jp
insb
je
push
sbb
and
mov
fcmovne
mov
mov
jo
test
andl
leave
sbb
jne
and
mov
dec
sbb
push
cmp
fwait
fwait
jb
adc
fisubrl
cmp
mov
pop
bndldx
mov
andl
and
fnstcw
mov
lcall
xchg
mov
dec
pusha
out
push
xor
mov
bound
scas
movsl
push
sbb
mov
jecxz
cmp
mov
std
mov
push
dec
ficoml
repnz
rolb
std
insl
jae
sbb
xchg
push
aam
aad
sbb
mov
sub
and
rorb
popf
cs
fldcw
frstor
es
add
and
incb
fcmovnbe
push
fcoml
jle
call
loopne
mov
mov
fnsave
add
cs
sub
notl
xor
icebp
mov
pusha
ljmp
or
mov
push
inc
fimuls
sub
call
dec
mov
clc
push
xor
add
xchg
mov
clc
dec
or
gs
sarb
or
inc
int
sub
daa
cmp
or
adc
data16
xchg
into
mov
mov
and
stos
cmpsb
push
les
dec
cmp
pop
repz
cmp
push
rdpmc
sahf
int3
mov
sub
push
lea
add
clc
sub
pop
shl
jmp
stos
sbb
and
mov
sub
in
das
andl
sbb
mov
lahf
mov
mov
imul
enter
sbb
ret
imul
std
loopne
dec
fisubrs
sub
sarb
xchg
das
ds
cmpsb
add
xor
lea
push
cmp
fnsave
cmp
sbb
out
lahf
adc
push
xor
sahf
insb
cmp
or
and
mov
hlt
adc
dec
sub
xorl
daa
jmp
adc
xchg
dec
jnp
stos
imul
pop
aad
mov
stos
mov
add
xchg
dec
xchg
pop
shlb
adc
insl
arpl
adc
stc
sbb
dec
jo
and
cmpsb
xchg
mov
push
jp
sbb
loope
movsl
lea
and
sub
sbb
adc
pop
mov
in
mov
test
daa
scas
dec
adc
fbstp
sub
stos
insb
dec
mov
and
lcall
mov
adc
and
test
jbe
or
sub
stos
les
jp
pop
inc
iret
jnp
xor
sub
dec
dec
scas
cmp
xchg
sahf
sub
push
stos
sub
aam
scas
cmp
mov
lock
jns
ljmp
pop
stos
and
aad
loopne
xchg
push
cmpsb
dec
nop
aas
fwait
adc
pusha
mov
imul
jecxz
adc
push
xchg
adcl
es
cli
ror
repnz
les
cs
sahf
ret
cmp
je
push
in
mov
packssdw
fmul
adc
lea
adc
jo
sub
mov
or
scas
xchg
ffreep
or
inc
daa
dec
mov
jo
pushf
or
mov
ss
cmp
stc
outsb
dec
mov
sbb
xchg
mov
repnz
test
or
add
add
pop
repz
ret
outsl
daa
add
movsb
and
or
xchg
aas
xchg
hlt
or
dec
ret
stos
mov
rorl
fnstsw
xlat
sbb
sub
xchg
ja
popf
push
in
rclb
pop
mov
xorw
or
scas
cltd
jecxz
dec
push
push
mov
sbbb
cmpsl
sahf
jmp
mov
out
enter
fmulp
lcall
and
cmp
mov
push
je
ds
hlt
adc
cli
ja
repnz
dec
or
pusha
push
lahf
outsl
aam
cmpsb
ret
xor
sbb
ss
xchg
pop
das
or
clc
rorb
or
adc
lret
cmp
fisubl
mov
insl
dec
stos
dec
jnp
aaa
int
fsts
daa
sub
jbe
mov
ljmp
inc
movsl
xchg
cmp
jmp
popf
mov
jmp
push
ljmp
sub
xor
mov
lock
daa
aaa
in
repz
xchg
popf
insb
shrl
sub
lret
pop
pop
jmp
lahf
scas
fs
mov
dec
stc
dec
add
sub
dec
jae
iret
dec
dec
lret
lods
dec
mov
in
cld
call
rcrl
mov
push
scas
imull
outsb
ds
push
ds
mov
pop
xchg
popa
jae
push
shr
mov
xchg
xchg
xor
push
cmp
daa
push
mov
call
adc
outsb
add
icebp
mov
rorl
rolb
inc
lds
mov
iret
adc
cltd
mov
xchg
arpl
rcll
into
sbb
je
sub
aaa
sbb
out
aad
outsl
add
sbb
or
push
jne
mov
cltd
popf
mov
xchg
xchg
std
mov
es
push
std
out
push
hlt
fs
sbb
imulb
cs
lret
sbb
ds
scas
stos
lea
ret
xchg
adc
daa
cmpsl
sbb
add
xor
daa
cmpsb
ret
cmp
mov
cmp
dec
idiv
imul
or
in
test
mov
and
mov
mov
pushf
push
shrl
imul
or
ret
inc
sbb
lcall
push
sub
adc
pop
mov
shl
inc
mov
pop
imul
stos
xor
sub
xchg
daa
loop
dec
sbb
stos
mov
pop
push
mov
daa
mov
pop
cmp
mov
sbb
sahf
sub
sbb
ret
or
test
or
rcl
xorl
adc
jle
push
push
pop
add
xchg
fsubr
mov
pop
pop
inc
sbb
cli
movsb
adc
inc
xchg
loope
xor
pop
adc
scas
dec
mov
and
inc
sbb
fstl
outsb
shrb
xchg
sbb
jno
mov
xchg
push
xor
das
test
and
into
fisttpll
adc
sbb
pop
xor
mov
push
scas
inc
push
arpl
ss
push
out
pop
lock
lods
lret
addr16
xor
hlt
mov
mov
jns
sbb
popf
ds
pop
jbe
fwait
sub
xor
xorl
daa
negl
loope
xor
mov
popf
or
pop
sub
xor
sbb
jg
mov
and
popf
push
and
sub
cmpsb
mov
sbb
sbb
into
xchg
das
inc
fs
adc
daa
mov
mov
inc
insl
pop
dec
outsb
dec
cmp
and
or
sti
stos
mov
test
inc
ja
enter
cmp
and
add
and
cmpsb
or
fs
xor
mov
dec
add
dec
insl
fcoml
cwtl
scas
push
stc
xchg
or
mov
arpl
arpl
outsl
dec
jmp
push
stos
cmp
cmp
adc
mov
push
mov
mov
cmc
pop
add
leave
mov
clc
outsb
push
cmp
daa
lcall
or
data16
rorl
popa
mov
push
xchg
mov
pusha
jge
mov
out
jo
xchg
outsl
jae
pop
dec
xchg
inc
ror
cs
cwtl
iret
and
and
inc
or
int
test
flds
mov
mov
push
inc
out
sarb
adc
cs
adc
pandn
loopne,pn
adc
xor
in
dec
sbb
sub
sub
or
sub
lock
push
mov
and
stos
daa
or
into
stos
iret
pop
xchg
pushf
mov
fnstsw
cmp
test
xchg
sti
xor
mov
mov
mov
test
ja
out
or
pop
xchg
outsl
mov
jae
int
rcrl
gs
push
imul
sub
cld
xchg
push
adc
popf
jae
jg
sbb
clc
aas
sti
out
scas
into
pushf
inc
lods
nop
imul
cmp
mov
daa
ja
shr
cltd
nop
xor
mov
movsl
std
xor
cmc
insl
adc
jns
mov
adc
lods
fsubr
je
dec
cwtl
in
jnp
mov
xor
ja
fcmovnb
loopne
inc
inc
jne
aas
inc
sahf
cwtl
and
sbb
cmp
insb
sbb
mov
cmc
into
adc
xor
stos
adc
xor
mov
pop
inc
xchg
lret
xor
dec
mov
cmp
packuswb
es
push
inc
xchg
out
cwtl
sahf
popa
rol
les
lret
in
xchg
adc
lahf
mov
or
cmp
dec
ds
loop
adc
sbb
cmp
addr16
dec
test
sbb
sbb
cwtl
popa
sbb
cmp
outsl
imul
mov
into
adc
dec
xlat
je
xchg
sub
mov
xchg
push
cld
rclb
scas
call
cwtl
dec
sbb
sbb
sub
pushf
mov
fstpl
je
xchg
ss
and
mov
imul
adc
testb
scas
push
xchg
insb
adc
jecxz
insb
imul
mov
sbb
ljmp
cwtl
and
daa
ja
outsb
test
push
adc
stos
cmp
jl
aaa
ljmp
sub
xchg
mov
das
scas
into
dec
mov
jecxz
dec
shrl
sti
push
xchg
push
sbb
mov
addr16
sbb
mov
xchg
xchg
xchg
daa
xchg
idivl
push
lahf
cmp
xchg
out
adc
mov
adc
push
insb
outsb
lss
push
divl
or
adc
and
sbb
jecxz
push
push
les
test
es
leave
cld
sbb
mov
xchg
push
stos
pop
jb
jmp
fsts
push
mov
arpl
outsl
sub
fstpl
lods
push
dec
xchg
lods
aas
mov
fimull
test
pop
outsl
ss
xchg
sahf
pop
fcomi
into
fbld
and
stc
lods
fbld
dec
decl
mov
push
cmc
jge
mov
call
stc
xchg
and
jno
or
or
dec
and
mov
loopne,pn
out
inc
out
mov
cmp
cld
lods
dec
and
ror
adc
or
ds
jns
and
add
xor
je
in
mov
push
outsl
addl
adc
mov
add
or
daa
enter
pop
ds
imul
push
xchg
sub
xchg
pop
das
lcall
call
sub
push
and
orl
repnz
test
push
mov
sub
sahf
lret
or
mov
or
or
and
jb
sbb
xchg
out
adc
mov
cmpsl
pop
out
adc
sbb
mov
lds
xchg
movl
gs
lret
jne
orl
lret
mov
inc
adc
int
lock
cmpl
into
mov
fst
inc
sub
cltd
movsb
sub
jns
mov
out
ret
sub
sbb
xchg
jg,pn
adc
push
lcall
add
dec
imull
push
fistl
inc
mov
jl
or
mov
cwtl
sbb
xchg
push
rcrb
ja
cmpsb
xor
cmp
cmpsb
or
cmp
sbb
adc
sbb
dec
or
sbb
adc
loop
sub
mov
dec
mov
fisubrl
mov
pop
dec
push
or
mov
mov
jae
shll
insb
xchg
add
inc
xlat
cld
cmp
jns
lods
xor
scas
mov
outsb
test
inc
out
shll
lcall
popa
mov
scas
mov
jmp
xchg
repnz
cmp
xchg
je
cmp
xchg
repnz
push
add
sbbb
or
pop
jbe
dec
mov
insb
cltd
and
mov
ja
xchg
push
hlt
sbb
pop
stos
mov
insb
test
sub
push
add
stos
sbbb
nop
sti
inc
aam
xchg
scas
mov
cwtl
and
fidivl
call
adc
stc
inc
dec
fs
or
xchg
lea
sub
mov
and
out
adc
jno
add
jae
pop
daa
js
sbbb
cmpsl
daa
lea
mov
sbb
popa
popf
cli
sub
lcall
popf
or
ret
add
dec
xor
or
lcall
mov
xor
nop
cs
jp
push
clc
pushf
inc
dec
sub
add
adc
mov
fwait
push
jae
inc
cmpsb
fidivs
mov
stos
adc
fcmove
fldenv
inc
cmpsb
repz
and
adc
and
add
popf
push
mov
and
cltd
cld
mov
ja
es
push
sbb
cmpb
adc
sbb
pop
js
push
push
adc
dec
push
or
sub
adc
decl
sbb
xlat
lds
gs
dec
dec
ja
leave
push
test
dec
push
pop
fistl
lcall
and
pusha
and
ja
mov
mov
jp
and
dec
es
fdivl
jno
cltd
out
jge
cmpb
mov
sub
adc
imul
loope
sub
jp
xchg
add
mov
jno
sbb
shlb
std
call
or
and
arpl
imul
sub
cmpsb
mov
jno
xor
sbb
pop
out
xor
outsl
push
je
or
pushf
push
ret
sbb
and
cmpsb
jp
mov
pop
pop
add
mov
xor
xchg
hlt
inc
cmpsl
aam
xor
push
je
pop
bnd
cltd
inc
pusha
push
xor
mov
ss
xor
cmp
fwait
int3
into
or
mov
test
jno
and
xchg
lahf
aam
aaa
push
push
ret
add
outsb
dec
ret
fldt
adc
leave
or
mov
xchg
xor
loopne
inc
out
xor
jmp
movl
push
jno
shl
outsl
adc
mov
xchg
jne
adc
sub
rcl
loopne
daa
fdivr
dec
mov
leave
xor
popa
dec
repz
adc
add
sbb
sbb
cmp
mov
dec
sub
test
test
cli
inc
adc
neg
sbb
movsl
outsb
dec
adc
and
mov
mov
dec
xchg
push
add
mov
pop
xchg
jb
dec
das
repz
out
insl
inc
aam
insl
lcall
sahf
mov
movsl
ja
or
out
and
sub
cmp
jmp
std
jnp
es
jle
pop
dec
lods
dec
sahf
ljmp
sbb
ficoml
and
inc
shlb
mov
adc
stos
setp
dec
adc
jmp
adc
pop
adc
mov
arpl
xchg
in
xchg
adc
call
xchg
xchg
aad
adc
pop
iret
outsb
xchg
sub
and
sahf
in
sbb
xor
or
pushf
sub
dec
or
cs
or
and
mov
insb
xchg
fisttps
sbb
and
and
pop
inc
mov
mov
or
pop
and
xchg
movsb
pmulhuw
xchg
and
or
loopne
pop
adc
je
jns
popa
imul
fprem
pop
stos
xor
adc
xor
and
xchg
lock
cmc
adc
daa
pop
push
jp
mov
mov
mov
test
scas
pop
inc
cmp
sub
rorl
shlb
xchg
das
int
pop
dec
je
fsubrs
imul
xchg
hlt
xchg
pop
pop
loop
pop
cmp
lock
lea
lods
xchg
sub
mov
add
inc
fistpl
aam
jge
xor
xlat
out
nop
dec
mov
pop
sbbl
fidivl
cltd
push
in
inc
push
ljmp
cmp
mov
xor
adc
jno
stc
add
adc
sub
sub
fcomps
dec
adcb
xchg
in
mov
xor
repnz
push
mov
add
or
push
mov
xchg
int3
ficoml
fmuls
outsl
inc
scas
push
ret
mov
fcom
adc
mov
int
cmp
or
aas
imul
lea
inc
or
sbb
push
cmp
push
or
sbb
pop
cwtl
dec
push
adc
adc
or
lcall
xor
pop
ja
pusha
inc
sub
dec
pushf
sub
lcall
ret
push
fiadds
xlat
outsb
cmp
mov
shll
or
clc
lea
or
sbb
inc
mov
mov
xlat
mov
mov
notb
and
push
or
outsb
pushw
inc
dec
aaa
ja
sub
std
xchg
xchg
sahf
add
outsb
cmp
and
jecxz
jge
repz
and
adc
shrl
or
xchg
inc
mov
jge
pop
jae
frstor
je
jle
shll
xlat
mov
cmp
fs
cwtl
sub
outsl
jecxz
add
inc
call
outsb
mov
push
adcb
rorb
cmc
dec
jno
pushf
xchg
mov
insl
adc
test
xor
fnstenv
inc
in
inc
aad
rclb
mov
pop
fcompl
pushf
jle
cmp
xchg
popa
xor
and
jle
xchg
mov
adc
push
sub
imul
scas
stc
imul
pushf
lea
jb
es
fstpt
xchg
dec
out
loope
and
add
loope
cmp
int3
rolb
lea
call
sub
push
adc
lret
pop
daa
sub
sbb
cmp
frstor
mov
xchg
aad
adc
jp
pop
jl
scas
in
imul
sbb
cmp
mov
out
mov
sub
adc
dec
pop
cmp
in
cli
lahf
idiv
nop
addr16
or
test
cld
aam
sbb
mov
inc
sub
and
adc
dec
or
es
inc
fs
mov
push
push
sti
sub
into
stc
dec
outsl
xor
sbb
inc
or
cwtl
sub
pop
xchg
adc
inc
scas
call
ss
into
adc
imul
mov
roll
sbb
daa
cmp
sbb
repz
mov
mov
push
inc
adc
sub
cwtl
jno
dec
mov
xor
xor
movl
loope
aas
jg
cmc
les
int
shll
sbb
inc
sbb
xchg
scas
scas
xor
pop
imul
xchg
stos
xor
mov
mov
mov
jnp
dec
mov
adc
outsl
inc
jp
sub
push
push
dec
adc
scas
int
je
mov
in
lea
adc
loop
jmp
test
xchg
and
shrb
lgs
lahf
daa
daa
repnz
dec
sbb
sti
movsl
aad
jmp
out
push
mov
xchg
loop
imul
rclb
iret
sub
and
lahf
fsts
std
inc
fcoml
lods
xchg
and
fcmovu
push
icebp
lahf
mov
push
mov
or
bound
scas
loop
push
xchg
push
cmp
dec
xchg
ret
mov
mov
or
push
mov
jns
ds
jg
in
mov
into
xchg
xor
cmpsb
xchg
adc
cmp
mov
push
mov
mov
rcll
rcll
dec
jecxz
test
push
orl
fwait
sub
popa
and
push
xor
out
loop
inc
fisubl
das
sbb
and
arpl
mov
push
popl
sub
cmpsb
jl
xchg
subl
sub
pop
jb
daa
hlt
dec
mov
insl
xchg
cs
push
in
sub
push
xlat
or
sub
xor
ss
or
xchg
dec
xchg
cmpb
iret
jae
xorb
sub
xor
xchg
outsl
je
push
test
dec
mov
cmpsb
push
xor
dec
inc
add
sub
xor
mov
or
adc
std
xchg
jns
xchg
push
jmp
inc
daa
popa
lods
cltd
test
test
outsb
inc
rcl
mov
adc
shrb
inc
mov
sbb
fcompl
dec
daa
aaa
pop
dec
dec
lcall
mov
jg
push
adc
adc
int
adc
xor
jb
mov
ret
cltd
push
inc
daa
xor
js
andb
out
sti
iret
sub
inc
ret
cltd
cmpsl
push
aas
mov
and
aad
stos
in
xlat
lds
fiaddl
call
in
dec
mov
arpl
stos
push
mov
sahf
ljmp
cmp
push
sbb
subl
mov
ss
ds
mov
mov
ljmp
lcall
das
and
es
cmpsb
dec
daa
out
push
cmpsl
lea
stos
dec
test
lods
mov
cmp
or
or
adc
cs
or
and
xor
stos
dec
or
xchg
iret
int3
adc
jle
ds
adc
cmp
adc
lods
push
sub
mov
inc
adc
scas
xchg
cmp
sub
aam
adc
push
or
pushf
sub
pushf
or
and
out
xor
xor
cltd
adc
ficoml
cs
sbb
pop
adc
ficomps
sub
lcall
lods
mov
mov
addr16
ds
push
adc
or
mov
mov
xchg
and
sub
push
and
ljmp
or
sbb
sahf
lea
dec
test
mov
mov
dec
data16
adc
mov
sbb
sub
or
xchg
jmp
rclb
outsb
adc
xchg
or
cs
or
sbb
xor
stos
push
lcall
and
sub
mov
cmp
repz
aam
sub
mov
scas
lcall
xchg
scas
xor
inc
ljmp
mov
sbb
mov
jo
inc
mov
cmp
jmp
sbb
sub
imul
and
scas
insb
mov
fisubrl
cmpsb
xchg
cwtl
adc
xor
mov
dec
dec
dec
daa
es
out
js
icebp
push
xor
fistl
icebp
pushf
dec
fcoml
xchg
mov
popf
jmp
imulb
push
daa
ret
mov
jo
mov
mov
xor
sbb
cmc
push
aam
pusha
inc
pop
cmp
rcrb
sub
rclb
sub
sahf
out
inc
add
mov
sbb
xchg
jne
jl
jp
sbb
mov
jnp
movsl
fcmovne
insb
daa
cmp
gs
out
push
inc
leave
sbb
and
xor
cmp
iret
test
cmpsl
push
test
jle
add
add
mov
add
or
out
ficoml
mov
leave
mov
dec
jp
movsb
fists
imul
jb
dec
jnp
adc
inc
and
add
addr16
lret
sub
je
adc
mov
or
fildll
call
cmp
and
sub
xchg
daa
in
mov
xchg
pushf
stos
or
ljmp
mov
jnp
or
xchg
push
xchg
rcrb
sbb
or
or
sbb
mov
push
pushf
outsb
popf
xchg
mov
fmuls
mov
sub
mov
shlb
xchg
jp
adc
inc
xor
dec
dec
mov
jne
or
bound
cmp
enter
push
sbbl
or
mov
stos
inc
fildl
decl
adc
sub
aam
jno
bound
xchg
sbbl
mov
lcall
push
enter
shlb
push
cmp
xchg
insb
dec
bound
bound
and
cmpsl
cwtl
stc
mov
xor
loop
das
push
mov
andb
jne
sub
add
sub
sbb
push
dec
orb
scas
dec
jnp
shrb
sub
aam
inc
into
out
xor
adc
insb
mov
dec
dec
sbb
jnp
cwtl
xor
mov
jecxz
sbb
mov
sbb
daa
into
mov
cmp
jmp
push
aas
fistpll
iret
push
adcb
jmp
jmp
and
fwait
adc
mov
adc
out
jp
mov
int3
cmp
sti
out
cmc
pop
lcall
negl
push
sbb
sbbb
arpl
adc
test
pop
in
push
hlt
sbb
push
add
mov
and
test
or
sbb
imul
aad
lds
pop
int
and
or
xchg
mov
and
popf
loopne
scas
leave
int3
fdiv
push
leave
xor
test
cld
bound
repz
pop
xchg
cmc
adcl
loope
sbb
test
xchg
push
aaa
in
push
cmp
and
sahf
repnz
mov
mov
sbb
daa
mov
cltd
out
pop
bound
add
inc
and
outsl
or
sub
mov
and
mov
test
mov
int3
dec
dec
sub
adc
xchg
rcrl
mov
adc
xor
sbb
xchg
in
mov
std
lcall
push
xchg
adc
out
push
xchg
cwtl
lret
add
mov
sahf
scas
ret
and
inc
out
mov
aam
icebp
daa
ds
mov
jle
sar
testl
cmc
xchg
pop
push
inc
inc
push
lds
mov
add
mov
cwtl
aaa
jns
decb
fadd
adc
shrb
xchg
sub
adc
mov
icebp
inc
mov
xlat
les
push
xchg
popa
shlb
add
mov
pop
div
popf
dec
scas
repnz
or
sub
xchg
daa
sbb
movhps
test
inc
inc
iret
cmp
clc
xchg
jp
daa
mov
push
push
add
or
and
insb
adc
popf
fsubrl
dec
inc
or
inc
lret
aam
pop
adc
xor
test
mov
jno
movsl
sahf
int3
push
addl
add
fisubs
mov
or
mov
and
hlt
sbbl
mov
jae
push
cmp
add
pusha
stos
stos
bound
stos
mov
push
sbb
outsl
mov
mov
sbb
daa
push
xor
sub
push
adcl
sbb
hlt
imul
sbb
adc
pop
cmpsb
inc
jo
out
cld
cltd
adc
and
adc
push
mov
cltd
bound
outsl
mov
push
or
mov
sbb
loop
lcall
daa
je
mov
inc
fimull
jmp
xor
sbb
dec
test
aam
scas
mov
data16
andl
push
and
loop
ss
out
mov
jns
es
sbb
aam
pop
test
cmp
push
mov
mov
dec
mov
jno
pop
inc
xchg
pusha
push
orl
aas
jb
add
sub
cmp
test
jae
xor
or
adc
lretw
inc
mov
cmp
sbb
mov
repnz
xchg
xchg
jl
xchg
test
mov
inc
mov
fildll
cltd
pop
movsw
add
adc
push
fimull
inc
push
jnp
push
pop
xor
sbb
fistpl
adc
in
mov
cwtl
mov
adc
insl
mov
add
clc
mov
or
loopne
bound
jb
notl
arpl
scas
sub
mov
xchg
imul
aad
push
cmpsb
push
mov
sbb
roll
outsb
add
sbb
cmp
or
or
lahf
push
jb
and
dec
cs
ja
xchg
and
and
push
mov
loop
xor
adc
adc
sbb
push
dec
pop
daa
mov
mov
aas
je
hlt
xor
and
mov
pop
xchg
in
inc
hlt
add
mov
mov
jae
fmuls
pop
adc
xchg
pop
mov
push
push
pop
in
insl
insb
aam
sub
mov
enter
sub
xchg
into
cltd
fwait
mov
push
and
fdivrl
pop
jne
pop
je
pushf
cmp
mov
dec
dec
cmp
xor
xor
cmp
push
ficoms
or
push
je
xchg
hlt
dec
testb
fcompl
out
fsts
jns
sarb
jp
cmc
cmpsb
cwtl
mov
out
sbb
adc
cwtl
mov
mov
pop
jmp
movsl
cmp
sbb
sbb
loop
in
imul
and
mov
mov
imul
cmpsl
lods
lret
dec
dec
test
notb
push
lret
or
xor
mov
push
enter
xchg
sbb
scas
adc
lret
aam
sbb
nop
or
add
insl
cmp
sub
mov
cmpsl
cmp
test
push
mov
loope
push
aad
adc
fiaddl
push
lcall
mov
lods
cwtl
add
clc
repz
bound
and
cmp
pusha
popf
push
decb
cmp
fcmove
or
or
sbb
adc
push
or
aad
jnp
and
cmpsl
push
mov
jl
pop
insb
cld
imul
adc
in
mov
rolb
out
pop
jno
lea
cs
ljmp
add
xor
scas
rcrb
sbb
jnp
dec
test
adc
dec
cmp
outsb
jmp
sub
sub
mov
add
imul
jle
jnp
out
or
shll
adc
push
pop
and
pop
cmp
imul
add
xor
inc
icebp
and
hlt
outsl
jecxz
mov
or
push
mov
xor
fld
sub
out
sub
mov
jns
test
sbb
dec
lea
out
add
mov
mov
jle
xor
daa
push
roll
icebp
or
aad
hlt
sti
mov
push
fnstenv
or
ret
push
dec
outsl
addl
scas
aas
sub
ret
mov
sarl
cmp
fwait
cmp
scas
fs
dec
repz
push
pop
push
cmc
loope
gs
jnp
mov
jle
dec
das
xor
orb
pusha
leave
push
pop
mov
dec
fwait
jb
sbb
cwtl
dec
lcall
fcomps
mov
mov
rorl
dec
into
jb
mov
dec
cmpsl
andl
inc
aam
and
lahf
push
mov
sbb
enter
mov
bound
leave
inc
into
push
dec
clc
pop
cmp
xchg
adc
and
xor
mov
push
arpl
and
mov
loop
push
xor
ret
push
lods
push
outsl
mov
out
call
or
pop
push
cmp
inc
xor
dec
xorb
jmp
ja
in
jae
push
test
cmp
or
popf
mov
sbb
mov
push
pop
iret
jmp
testl
enter
rcll
test
xchg
out
aam
cmp
daa
mov
add
rorl
cmc
cmc
push
movsb
std
mov
push
or
aam
or
sahf
in
mov
mov
inc
daa
cmp
add
hlt
xchg
arpl
inc
jle
xor
ljmp
outsb
imul
movsl
call
imul
inc
vmread
sub
sub
sbb
imul
fcoms
out
int3
repz
in
iret
into
push
push
stos
sti
data16
or
mov
je
aad
cwtl
loope
mov
cld
cmp
xchg
jbe
cwtl
pop
sub
addr16
mov
mov
loop
stc
cli
das
sub
xchg
xor
je
in
test
lcall
mov
sbb
rorb
adc
push
stc
mov
and
outsl
ret
and
mull
cmp
push
cs
stos
jnp
aad
jbe
lahf
inc
inc
cmp
repnz
cwtl
nop
jle
in
mov
fnsave
mov
sbb
pusha
ficoms
xorb
push
ret
add
rcrl
aas
pusha
add
in
push
aas
or
or
adc
push
addr16
push
push
pop
pop
mov
mov
mov
push
movsb
xchg
into
int3
push
pop
hlt
and
daa
es
cmp
or
fcmove
mov
lcall
sbb
mov
cmp
sbb
xor
jae
sbb
jmp
sub
or
jmp
lret
cmc
outsb
pop
les
ret
jecxz
arpl
xchg
sbb
and
dec
mov
mov
arpl
loop
mov
xchg
pmulhuw
scas
push
into
push
iret
push
cmp
pop
mov
outsb
pushf
in
jo
add
rorb
push
arpl
mov
daa
pop
daa
pop
push
xchg
or
xchg
mov
stc
std
mov
push
inc
push
jge
std
out
xchg
jp
pop
outsb
and
lahf
inc
xchg
mov
xor
mov
push
aas
sub
push
mov
push
dec
pop
xchg
pmaddwd
cmp
mov
fwait
sbb
cld
pushf
xchg
pusha
in
push
sbb
sbb
cmp
adc
push
cmc
cmp
repz
scas
push
call
shll
int
sub
cltd
lret
xor
subps
xchg
arpl
jge
mov
out
jmp
int3
push
imull
andb
mov
subl
adcb
iret
inc
mov
shrl
ret
sub
push
imul
push
shl
adc
loope
ja
jge
scas
jecxz
dec
imul
mov
mov
pop
mov
mov
or
push
inc
or
int3
gs
dec
cwtl
cli
or
xchg
nop
fistl
pop
scas
cmp
lcall
sbb
dec
ret
daa
mov
out
rorb
add
xor
outsl
cmp
jbe
sub
adc
popa
jb
cltd
push
nop
outsl
insb
push
nop
jecxz
add
jmp
mov
adc
pop
adc
xor
jmp
xor
or
dec
repz
adcl
mov
es
jecxz
xor
sbb
jno
mov
jle
ss
fnstsw
imul
or
into
push
gs
clc
cld
dec
hlt
fmull
cmc
sti
ja
into
shrb
sbb
pop
es
jo
sub
jp
sub
or
jmp
ret
mov
mov
out
mov
jnp
mov
xchg
test
mov
jnp
jns
mov
push
mov
mov
mov
test
dec
push
cmp
mov
mov
cmp
daa
decl
fimuls
sti
jae
or
or
sbb
mov
nop
mov
dec
xor
es
xchg
mov
sub
arpl
sub
xchg
adc
aaa
jno
cwtl
xor
imul
insb
mov
or
push
stos
lcall
mov
stos
cmp
cmpsl
fcompl
cwtl
push
mov
dec
cmp
xor
in
divl
test
stc
adcl
ret
cmp
and
arpl
pop
inc
out
mov
sub
fwait
jecxz
mov
daa
bound
lret
pop
scas
out
enter
dec
cmp
jl
dec
ds
ja
pop
dec
leave
pop
loope
sub
push
lret
out
add
mov
daa
xchg
not
and
repnz
pop
inc
sbb
or
outsl
inc
scas
pop
sti
and
and
or
in
xchg
adc
leave
sbb
adc
pop
cli
push
lahf
mov
mov
push
push
scas
cli
int
lods
mov
jbe
or
and
xchg
cmp
vcmpps
xchg
mov
mov
push
pop
out
sbb
leave
shll
push
push
lret
lea
std
mov
sub
and
lock
jle
in
cwtl
lea
xor
ljmp
sbb
lods
lcall
adc
mov
dec
outsl
jp
jnp
xchg
scas
fcmovnb
or
adc
add
out
movsb
popa
mov
sbb
mov
and
dec
jnp
mov
jecxz
fcompl
roll
fidivl
aaa
loopne
ficomps
lahf
and
xchg
mov
cmp
jl
das
dec
xchg
jne
pop
hlt
mov
push
in
xor
or
outsb
push
lods
jnp
hlt
orb
dec
mov
shlb
cmp
mov
push
adc
push
dec
push
xchg
add
scas
xchg
pop
push
std
xchg
mov
aad
or
cmc
xchg
mov
lds
pop
rorl
mov
es
mov
xchg
ret
nop
add
xor
xor
push
dec
in
sti
mov
xchg
jl
rorl
jo
pop
repz
and
mov
pop
mov
dec
ja
imul
mov
scas
rcr
into
stos
test
jae
or
jne
subb
dec
and
push
pusha
nop
stc
mov
test
shrl
call
nop
mov
push
movsb
mov
push
outsl
inc
mov
ret
daa
add
push
mov
shll
std
fistps
mov
popa
pusha
pop
sub
mov
leave
sub
push
daa
iret
int3
sub
lock
sub
sub
or
lea
repnz
pusha
fsts
hlt
cmp
ret
mov
in
fidivrl
adc
push
nop
mov
lcall
ror
cmpsl
push
ret
mov
movlps
test
mov
sbb
xor
pop
lret
pop
mov
loop
rep
mov
dec
xchg
dec
mov
scas
push
mov
jmp
jl
jbe
adc
roll
mov
inc
mov
iret
lret
out
rolb
sbb
jmp
xor
int3
sub
adc
xor
scas
stos
mov
inc
or
inc
jl
sbb
lcall
push
cmp
ficoml
xor
movsl
or
pop
inc
sbb
cmp
xchg
repnz
int3
fmuls
sbb
xor
push
pop
fnstenv
push
dec
scas
jecxz
jg
dec
bound
out
cli
xor
pop
sbbl
jb
xchg
hlt
insw
shrb
dec
and
shl
aaa
and
cmpsl
adc
xor
dec
mov
push
sub
add
xor
cli
pop
dec
sbb
push
stos
daa
dec
ss
and
in
cmp
mov
sbb
out
and
mov
fadd
iret
and
and
jno
pop
cltd
push
fildl
icebp
movl
es
dec
orl
daa
inc
xor
sub
or
add
mov
and
aaa
push
lods
and
dec
sub
into
nop
xor
jmp
adc
test
cmp
sbb
jecxz
lcall
pop
cmp
orb
pushf
pop
mov
lret
inc
and
fisttpll
dec
insb
jb
and
mov
jb
lcall
and
push
xchg
lret
or
in
lcall
push
std
stos
sub
jp
push
or
mov
xor
lds
fstpl
mov
sbb
arpl
pop
push
pop
lods
xor
xchg
push
mov
adc
daa
sub
mov
mov
outsb
frstor
xchg
stos
inc
nop
push
sbb
loopne
push
lret
mov
lret
cs
sbb
and
push
fwait
dec
or
and
sbb
iret
arpl
sbb
and
mov
mov
sbb
and
and
sub
fmulp
movsb
add
daa
xor
dec
sub
leave
in
hlt
scas
rorb
jle
stc
mov
or
mov
and
xchg
dec
test
mov
pop
adc
or
mov
jne
cmp
inc
or
and
mov
aas
in
cmp
xor
sbb
ds
push
sub
and
mov
sahf
sbb
sub
mov
orb
and
jno
cmpsl
lods
data16
and
outsb
adc
mov
xchg
gs
sbb
aaa
enter
sbb
inc
mov
adc
outsb
jnp
xchg
lock
lock
dec
imul
mov
imul
sbb
outsb
jb
mov
and
xchg
xor
pushf
ss
adc
xor
jb
cs
xchg
or
insl
outsb
cltd
pushf
sbb
jecxz
iret
push
cmp
int
push
xchg
lcall
mov
lahf
lods
pushf
push
cmp
in
repnz
outsb
int3
sbb
and
xchg
adc
xor
sarl
and
jo
cmpsl
push
sub
dec
mov
test
push
and
daa
fldl
mov
lahf
or
stos
rclb
mov
jb
outsb
lcall
pop
dec
xor
xchg
fcomi
sub
cwtl
cmp
and
cmpsb
aad
nop
xor
lea
push
outsb
lret
lcall
sub
mov
adc
dec
dec
dec
daa
call
push
clc
inc
jb
outsb
dec
nop
daa
sub
cs
pop
adc
pop
insb
fdivl
inc
mov
aas
push
or
push
clc
xor
adc
daa
jb
outsb
and
cmpsl
dec
jae
cmc
add
mov
in
xor
pop
cmp
push
fsubl
inc
mov
fidivs
loop
sub
in
test
push
cwtl
or
mov
adc
daa
pop
movsb
loopne
jb
jo
mov
sbb
imul
test
adc
repnz
outsl
and
adc
iret
mov
inc
rolb
inc
jne
mov
dec
xor
lea
stos
scas
das
inc
xchg
sub
aam
fistl
mov
paddq
orl
shll
in
mov
lret
test
test
dec
sub
shrl
fidivs
xor
scas
adc
jo
push
inc
mov
mov
outsl
push
xchg
pop
lds
cs
decl
inc
mov
das
pop
cld
xor
xor
jb
mov
jmp
xor
loop
mov
loope
cmpsl
jae
fsubl
inc
mov
imul
lret
xor
jae
mov
rorl
adc
lods
and
inc
pop
mov
or
mov
sbb
push
and
jnp
mov
mov
and
xchg
daa
or
sub
cmpxchg
push
daa
rol
out
shrb
xchg
push
scas
loop
inc
dec
pop
dec
out
nop
push
sub
mov
fmull
shlb
adcb
xchg
movsbl
std
or
cmp
lret
hlt
movsl
mov
jp
sbb
xchg
clc
push
pop
or
in
dec
xchg
scas
mov
iret
jmp
adc
out
adc
test
xor
arpl
xor
xchg
inc
push
sub
sub
pop
sub
xchg
out
xor
lret
mov
insb
push
cmp
cmp
imul
dec
cwtl
clc
push
out
sbb
jno
sets
fisubrs
jae
dec
lret
imulb
outsb
and
int
out
add
into
mov
stos
out
roll
add
shll
mov
mov
cmp
jns
lock
adc
dec
cmc
lcall
xor
gs
imul
push
ret
jmp
xor
add
scas
hlt
sbb
lcall
out
ljmp
mov
sub
adc
xchg
insb
insb
jecxz
adc
ret
mov
notl
iret
je
idivb
leave
dec
push
daa
lds
ret
pop
and
xchg
je
roll
test
in
icebp
jmp
inc
jl
xor
add
shlb
in
jo
mov
pusha
hlt
clc
popf
xchg
xchg
fwait
inc
into
mov
add
xchg
pop
mov
push
and
shlb
xchg
adc
in
loope
pop
imul
cmpsb
rclb
scas
insb
jb
jmp
pop
add
push
rcrb
loopne
aas
daa
adc
or
push
inc
sub
scas
ss
cltd
sub
cld
in
adc
adc
mov
xchg
adc
jo
sub
jg
iret
insb
cltd
bound
scas
pop
or
jp
fisubrl
das
inc
sbb
clc
into
pusha
js
das
adc
cs
mov
xchg
adc
loopne
push
repnz
ficoml
pop
repz
fistl
aam
in
xor
shll
in
add
fcomps
push
mov
ss
mov
cmp
xor
jb
xchg
mov
push
inc
addr16
das
loope
imul
int
or
inc
in
inc
xchg
je
mov
lret
push
pop
stos
shll
xor
inc
cmp
fnsave
pop
adc
sub
add
jmp
mov
shll
dec
sub
mov
addr16
rorb
lods
scas
das
sub
lea
adc
dec
mov
lock
jmp
fwait
jmp
lods
out
ret
mov
sub
inc
loop
lods
std
pop
inc
loope
xor
and
inc
inc
fsubrp
jl
data16
inc
out
scas
std
stos
cmp
push
sbb
jp,pt
sub
mov
icebp
test
mov
lahf
ja
lret
cmp
insl
sbb
pop
ficompl
dec
xor
lcall
rcll
adc
mov
stc
in
or
stos
pop
test
stos
or
mov
xor
pop
xchg
test
or
adc
and
lcall
push
jp
cmp
repnz
in
cwtl
sbb
mov
or
mov
arpl
fimull
sbb
mov
cmc
or
out
fimuls
das
lcall
pop
lcall
mov
mov
pop
inc
cwtl
mov
xchg
lds
push
cmp
mov
out
adc
mov
sub
cmp
in
sub
mov
cmc
sbb
repnz
push
mov
dec
sub
xor
insb
mov
ljmp
mov
sahf
mov
push
loop
mov
je
adc
lcall
dec
cmp
nop
cmp
cmc
pop
inc
jge
xor
xor
sbb
or
mov
pop
push
ficoml
push
inc
dec
pop
xchg
int3
dec
adc
dec
cmp
add
adc
jb
dec
jno
outsb
fisubl
lea
mov
into
cld
push
sub
pop
lret
mov
test
mov
mov
test
movsl
dec
dec
shll
psubq
cmc
adc
xchg
sub
clc
pop
push
test
lret
adc
cmp
mov
lahf
inc
pop
fxtract
imul
std
add
fldcw
push
js
sub
or
mov
adc
loopne
push
mov
stos
jno
mov
mov
bndstx
repnz
jno
xchg
arpl
and
push
hlt
push
sub
or
inc
scas
dec
jbe
inc
or
xchg
mov
mov
mov
or
sub
sub
data16
mov
push
mov
pop
call
arpl
cs
pop
ret
adc
aam
sub
vpsubsw
push
add
rcl
mov
mov
insb
dec
fwait
ja
sub
jbe
dec
cwtl
clc
orl
in
xor
xchg
mov
push
repnz
xchg
lret
mov
mov
sub
push
or
or
or
aam
mov
jg
fs
mov
out
movsl
insl
adc
pop
repz
jle
mov
daa
int
dec
aam
cmp
xchg
insb
adc
je
dec
xchg
daa
inc
push
stc
aas
add
sbb
mov
mov
xchg
xchg
ret
or
pusha
ljmp
aas
aam
push
ret
dec
xchg
lea
outsb
adc
aam
int
pop
push
mov
pusha
cmp
add
aas
sub
pusha
adc
mov
add
ret
in
push
mov
cs
jno
dec
bound
and
adc
xchg
or
int
mov
push
xchg
sub
mov
cld
xchg
and
cmp
xor
sub
sub
dec
or
pop
dec
lahf
mov
xchg
xchg
jo
jge
push
nop
xchg
mov
cmp
dec
orl
pop
cmp
jne
push
dec
sub
adc
mov
in
lret
mov
adc
adc
mov
stos
push
sub
jbe
jg
enter
js
jae
dec
cmp
lds
mov
out
into
ret
adc
bound
push
sbb
lcall
test
mov
ja
pop
in
je
cs
and
xchg
fwait
add
outsb
out
push
stos
jp
popa
lret
data16
and
jl
jp
add
mov
jp
sbbb
shlb
fimull
int3
sbb
mov
xor
add
jnp
push
and
lea
mov
hlt
popa
inc
inc
or
or
or
push
lea
loope
push
cs
aam
loope
fcomps
or
adc
mov
mov
scas
cmp
mov
pusha
mov
insb
add
sub
lea
rcll
add
pop
mov
push
ret
jl
dec
daa
stc
dec
jns
pop
lods
fmull
imul
loope
push
push
movsb
shr
in
shrl
mov
cmp
insb
aad
std
push
sbb
data16
stc
push
push
adcl
inc
pop
or
sub
cmpsl
cltd
lods
dec
sti
mov
clc
push
nop
cmp
mov
jne
cltd
or
pop
dec
sub
lret
sub
and
add
xchg
cwtl
dec
out
ja
sbb
stos
mov
clc
adc
setnp
sub
outsb
adc
push
xchg
cmpsl
adc
inc
jbe
outsb
bound
xchg
lods
xchg
pop
imul
lods
roll
push
pop
leave
cmp
push
mov
imul
xchg
adc
pop
pop
add
lea
mov
arpl
dec
sub
nop
rcrl
faddl
call
adc
dec
test
push
cld
fnstcw
or
loop
or
lahf
mov
cmp
add
cs
lahf
aad
mov
jge
pop
mov
cmc
add
lret
js
orb
mov
mov
out
lock
fs
nop
ret
mov
out
mov
call
mov
dec
sbb
cmp
std
orl
icebp
mov
dec
iret
add
pop
es
adc
sti
mov
scas
test
cmp
cmp
jo
add
cwtl
lock
adc
popf
xchg
xor
cmpsb
mov
or
jnp
inc
cmp
dec
adc
sub
mov
xor
movq
mov
daa
ljmp
fidivs
mov
dec
das
lods
aaa
mov
dec
cmp
lret
push
hlt
mov
adc
daa
mov
jl,pt
dec
cmpsl
mov
adc
int
hlt
cltd
xchg
in
and
jno
mov
stos
xor
pop
cs
dec
dec
scas
outsb
int
mov
out
test
cmc
push
push
adc
mov
fcmovb
cmp
xchg
sub
mov
orl
sub
fcom
adc
mov
mov
enter
xor
inc
push
add
das
add
dec
cmp
cwtl
jmp
cmp
inc
leave
sub
inc
xchg
lock
sarl
je
mov
push
xchg
push
push
into
mov
sub
mov
daa
loope
jg
dec
int3
psubusw
jnp
aas
dec
stc
jge
mov
aaa
mov
int3
and
xchg
daa
loopne
imul
loope
cmc
cmp
mov
cltd
enter
cmp
enter
js
out
inc
lods
adc
mov
imul
fistl
or
mov
cmpsb
pop
outsb
leave
adc
adc
mov
out
outsl
in
ret
push
scas
inc
add
and
outsb
fsubrl
and
daa
jb
cmp
scas
push
out
loopne
and
fwait
loop
sbb
mov
mov
xor
xor
jbe
lea
adc
scas
ret
dec
mov
in
pop
mov
int3
cmp
in
adc
sub
or
sub
and
push
bound
ds
aam
outsl
pushf
pop
in
into
pop
loope
loopne
adc
add
pushf
pushf
fdivs
sbb
sub
mov
add
jae
and
ret
negb
mov
sbb
xchg
loope
jmp
dec
arpl
push
pop
xchg
leave
insl
mov
arpl
cwtl
stos
iret
push
adc
jmp
mov
scas
cmp
mov
mov
lcall
add
jbe
das
mov
dec
mov
daa
jnp
add
dec
mov
dec
pushf
sub
adc
fldpi
jae
push
push
mov
pushf
mov
lcall
or
insb
cmp
or
jbe
mov
add
imul
cmp
inc
mov
outsl
pop
push
mov
aad
cmp
aas
push
push
shll
movsb
std
daa
xchg
inc
adc
adc
popa
and
push
adc
std
jp
andb
das
cmc
int3
adc
icebp
xor
call
enter
mov
sahf
faddl
mov
sti
push
mov
mov
pop
out
sbb
jno
int3
xchg
outsb
loop
ret
repz
inc
es
fs
mov
repz
pop
out
repz
jne
addl
sti
mov
dec
shrl
out
mov
dec
shrb
mov
shll
mov
xchg
int3
ljmp
loopne
int3
jns
push
into
mov
jbe
fsts
out
scas
or
inc
test
aaa
xlat
lock
jmp
das
repz
inc
or
push
dec
lcall
imul
cmpsb
push
subb
insl
add
add
outsb
test
imul
dec
inc
sbb
int3
sbb
cmpsb
shr
and
xor
test
cmpsl
aam
sub
incl
mov
push
scas
dec
daa
sarl
dec
or
fstps
or
popa
into
mov
outsb
lds
testl
sub
dec
aad
adc
je
in
inc
mov
adc
and
push
mov
pop
add
fwait
push
fstps
push
rorl
stc
mov
fcomip
push
sub
xlat
jae
push
inc
mull
les
das
mov
rorl
rep
lock
pop
adc
mov
adc
inc
pusha
or
and
push
loop
sub
sbb
mov
and
push
add
leave
loop
pop
mov
mov
cmp
bswap
sub
lahf
jnp
and
and
sub
xor
or
mov
mov
inc
inc
pop
dec
mov
mov
jns
mov
push
or
cltd
inc
sbb
and
adc
lds
std
add
inc
push
jge
or
xchg
mov
xor
sahf
pop
dec
xchg
call
lods
and
inc
xchg
repnz
xorl
and
stos
dec
cwtl
inc
mov
imul
inc
je
adc
adc
adc
mov
mov
jl
mov
or
sbb
lcall
cld
cmc
insb
push
add
push
or
mov
cmp
xorb
and
pop
mov
sti
adc
shlb
jno
test
xor
in
cmpsb
out
lea
sub
fsub
stos
pushf
negl
xchg
xchg
jp
mov
jg
dec
mov
call
fdivr
inc
xor
mov
or
adc
push
pop
mov
test
call
data16
in
sahf
dec
adc
jno
push
cltd
inc
mov
jmp
inc
stos
in
mov
js
add
mov
pop
push
mov
mov
out
or
inc
or
adc
xchg
mov
pop
mov
in
std
std
lahf
pushf
mov
daa
push
cmpsl
out
xchg
idivb
rorl
je
orb
lods
mov
push
je
add
cmpsb
or
adc
sub
or
ja
and
inc
aam
xlat
push
cmp
push
pusha
test
mov
mov
test
mov
dec
mov
lcall
pusha
mov
push
popf
cmc
and
dec
mov
sbb
outsl
shl
fs
mov
xchg
adc
test
and
pop
or
adc
aaa
cmc
lcall
insb
cmp
pusha
negl
mov
mov
insb
ds
jbe
xchg
mov
cmp
scas
add
jle
mov
stc
lods
in
mov
xchg
filds
xchg
sbb
and
mov
call
fcoml
sub
ret
shlb
and
inc
repz
cs
sub
cs
loop
add
aam
cmovnp
std
cmp
add
mov
je
or
dec
cmp
dec
or
xor
stc
sbb
test
xor
int
nop
cli
std
out
ss
adc
shlb
pop
adc
dec
mov
inc
sbb
sbb
arpl
sbb
fcoms
adc
mov
mov
and
xor
data16
pop
mov
imul
cmc
or
movnti
imull
push
mov
insl
mov
ret
cmc
jle
sub
xchg
repz
int3
jp
dec
mov
mov
loope
pop
mov
in
xchg
int3
and
push
gs
popf
test
or
and
jae
sub
shlb
hlt
adc
rcll
ljmp
test
insb
in
out
mov
jmp
cs
out
into
xchg
push
das
rorb
lret
xchg
popa
loopne
dec
mov
pop
cltd
fstl
mov
in
xor
stos
push
mov
push
inc
scas
dec
mov
fcmovbe
imul
inc
jmp
sub
or
dec
cmp
cmp
imulb
sub
mov
pusha
aad
ret
stc
out
inc
push
adc
sahf
clc
xchg
int3
or
and
ret
or
fdivs
imul
out
or
inc
mov
fsubrl
or
cli
or
add
mov
push
fldcw
bound
inc
setae
pop
out
sbb
clc
add
mov
int
pop
mov
jns
daa
pusha
cmp
fcmovnbe
cwtl
xor
sub
push
cmp
cwtl
out
in
aam
nop
fidivrs
or
nop
lods
lcall
push
dec
mov
ja
sbb
xchg
daa
push
xchg
rolb
imul
movsl
ret
and
xchg
mov
test
pop
add
jnp
xor
addr16
popa
loope
stos
notl
je
push
mov
dec
inc
testl
adc
hlt
pop
lahf
clc
lock
xchg
adc
rorb
pop
sti
cmp
sub
inc
push
shrl
lret
or
xchg
and
rsqrtps
mov
xchg
popf
out
jae
sahf
int3
jle
add
inc
inc
xor
and
push
orb
lea
or
std
std
dec
xchg
cwtl
push
cmp
popa
mov
mov
addr16
rcll
ljmp
mov
mov
je
xchg
xor
paddq
scas
and
cs
mov
add
push
bound
inc
mov
and
pop
mov
push
inc
fldcw
into
fdivrp
or
mov
loope
into
push
testb
into
mov
shrb
cmp
adc
aam
scas
add
mov
pop
loopne
sahf
cmp
sbb
lods
lods
inc
jg
or
adc
sbbl
jns
je
fsubrl
push
mulb
mov
mov
or
or
xor
test
mov
popa
sbb
adc
sub
in
pop
cmpsl
dec
add
or
sbb
xchg
adc
fists
in
jno
test
into
sahf
adc
or
xor
cwtl
mov
mov
adc
aad
mov
xchg
xor
dec
push
add
add
or
sbb
cwtl
in
clc
sub
or
ret
cmp
lcall
cltd
ja
call
fsubrp
in
test
outsl
and
adc
inc
arpl
aad
xor
pop
mov
push
pop
sbbb
repnz
and
mov
jae
push
loop
mov
mov
lods
sbb
and
push
mov
add
sbb
cmc
cmpsb
daa
into
clc
xchg
push
in
pop
adc
push
mov
dec
inc
out
or
xor
inc
dec
dec
sbb
out
mov
movsb
push
push
xor
xor
dec
sbb
pushf
out
xchg
inc
sbb
in
mov
loope
sbb
cmp
div
scas
aad
add
sub
xor
push
stc
dec
cmp
out
stc
insl
mov
dec
sub
fsubrs
flds
cmp
data16
ret
pop
repz
vorpd
nop
mov
iret
push
or
ret
out
push
enter
ljmp
scas
mov
mov
adc
add
enter
add
nop
add
cmpsb
add
es
xorb
iret
cmp
xchg
sbbl
or
fdivrl
ret
out
ror
pushf
adc
and
pop
test
cmpsb
divb
sbb
push
xchg
jae
scas
push
pop
xchg
in
push
in
mov
scas
mov
pop
pop
jno
or
scas
les
cwtl
cmp
pop
jae
inc
xor
shl
pop
mov
push
pop
jbe
mov
pop
aam
mov
cmpl
sbbb
jne
push
rcr
lea
daa
mov
lods
jle
in
mov
sbb
mov
inc
mov
push
xorl
sub
ljmp
stos
jmp
xor
inc
scas
sub
mov
sti
bound
pop
mov
rcrl
rcll
fwait
jl
sbb
xor
lods
inc
lea
scas
call
shl
mov
adc
movsb
iret
sbb
jnp
and
mov
sub
sbb
sbb
outsb
mov
and
scas
lods
decl
push
jl
xchg
push
adc
adc
pop
adc
mov
jo
push
cmp
mov
xchg
sbb
pop
push
mov
push
div
inc
sub
daa
aam
inc
mov
rclb
popa
imul
cld
mov
cs
dec
adc
push
mov
adc
por
mov
inc
jnp
adc
jb
in
adc
aad
cs
sub
xor
xchg
insb
jnp
push
push
sbb
dec
mov
cmp
pop
movsl
and
movsl
movsl
sub
cli
repnz
pop
enter
fxch
push
mov
cmp
aas
les
sbb
call
and
mov
push
test
sub
xlat
pop
sarl
push
pop
mov
movsb
add
mov
xor
gs
cmc
xor
and
adc
inc
test
adc
push
dec
lock
sub
insb
aam
and
stc
in
into
jo
dec
std
cmp
pushf
push
inc
addr16
jno
gs
cmp
rorl
jp
cmc
mov
lcall
cmc
dec
sub
mov
adcb
inc
ljmp
pop
push
pop
dec
sub
ss
sarl
loopne
sarb
movsb
cmp
adc
cltd
pop
shlb
jnp
scas
add
adc
or
pop
sar
scas
mov
push
aam
mov
xor
cmpsb
pop
cmovno
jo
lock
cli
daa
into
shrl
or
pop
hlt
mov
mov
imul
mov
lret
sbb
pop
push
push
jge
or
sbb
mov
cli
sbb
dec
and
testl
cmc
pop
sub
xchg
ffreep
and
sub
inc
mov
gs
xchg
mov
xchg
jae
popa
push
push
shr
nop
pop
cld
in
mov
aas
pop
ud1
das
sbb
and
xchg
jmp
dec
jo
lea
pop
mov
dec
je
add
xor
into
outsl
adc
mov
mov
or
pop
adc
arpl
ljmp
fdivrl
fstpt
rorb
adc
cmc
pop
inc
cmp
lret
mov
sub
xor
adc
inc
push
outsb
pop
or
dec
dec
push
cmp
in
pop
es
sahf
int3
mov
cs
pop
sub
add
ror
pop
enter
dec
mov
js
adc
fisubrl
inc
push
cmp
cmc
jne
inc
pushf
mov
sub
lret
mov
test
adc
repnz
pop
in
add
or
push
repz
testl
cmp
sarl
xchg
mov
adc
stos
outsl
jecxz
sub
cld
cmp
pop
fldenv
push
sub
jecxz
clc
cs
icebp
mov
aaa
sbb
dec
jnp
xlat
leave
sbb
scas
lock
bound
sbb
xchg
cmpsb
lcall
push
push
fidivs
lcall
mov
xchg
dec
data16
xchg
loop
push
mov
jns
mov
jne
cwtl
mov
call
inc
xor
push
mov
outsb
push
ret
test
mov
jp
leave
cwtl
out
into
or
stos
hlt
mov
mov
stos
les
xchg
test
dec
test
cmp
cmc
cmp
push
mov
xor
out
inc
loop
pop
lea
inc
out
sbb
sarl
hlt
dec
and
jo
pop
ret
imul
jnp
mov
xchg
imul
jp
test
push
mov
outsl
loop
push
push
out
cmpsl
fldenv
or
out
cmp
sub
fsub
iret
push
loope
mov
inc
jb
daa
pop
lret
cli
dec
push
fmull
push
jne
inc
fs
mov
loop
or
call
pop
inc
dec
jecxz
and
or
sti
clc
push
and
or
sub
mov
mov
mov
cmp
movb
hlt
rclb
lods
and
jae
rcll
jge
mov
mov
sub
cmpsb
mov
sub
cmc
fidivrs
clc
push
movsb
xchg
dec
ja
mov
xor
push
outsb
insb
dec
push
shrl
mov
jo
movsl
lea
stc
aaa
outsl
in
sub
and
cmp
lea
and
aam
jp
xchg
jns
xchg
leave
xchg
mov
adc
jle
mov
es
dec
bound
ds
add
mov
lahf
scas
push
push
jl
cltd
adc
popf
scas
mov
xchg
cmpsb
xchg
dec
es
cmp
mov
daa
mov
clc
mov
mov
xchg
xchg
or
sub
in
in
and
adc
adc
sub
int
cmp
adc
sbb
je
and
dec
mov
push
and
push
cwtl
cld
imul
stos
imul
jge
cs
sbb
cmp
jmp
cmp
adc
mov
jnp
lods
or
sahf
leave
dec
fstpl
clc
xchg
cmc
aaa
aad
dec
pop
sbb
jp
pop
cmp
jb
rcll
fnstcw
movsl
jb
sbb
test
dec
pop
out
xchg
movsl
sub
std
mov
dec
adc
iret
and
cmp
dec
xor
sti
push
sub
dec
and
or
mov
push
jge
dec
xchg
pusha
fs
push
clc
sub
call
rorb
push
fistpll
mov
cmpl
cmpsl
fisttpl
jl
dec
imul
rorb
push
insb
jmp
iret
into
scas
pop
mov
jo
and
outsl
jmp
dec
mov
in
cs
xchg
xor
mov
div
daa
ljmp
inc
sbb
xor
xchg
jl
jmp
push
movsb
fsubs
das
cwtl
inc
sub
sbb
add
add
cmp
mov
xchg
aaa
sahf
dec
push
mov
add
cmc
cs
jno
stos
cmp
cmp
sub
and
fwait
ljmp
test
jb
mov
je
cs
mov
aad
pushf
icebp
add
js
fisubl
lret
lahf
jle
mov
lods
pop
pop
sub
test
cmp
test
cmc
cmp
cld
cmp
enter
cmc
call
test
mov
inc
adc
dec
jno
in
mov
shrl
push
cmp
aad
mov
nop
test
imul
test
and
push
push
das
jbe
in
adc
add
or
daa
push
jnp
faddl
shrl
lea
sahf
and
dec
mov
pop
imul
push
adc
and
sarl
clc
pop
test
cmpsb
jbe
mov
inc
mov
outsb
mov
popa
movsl
imul
jae
cmp
mov
pushf
push
sub
sbb
gs
push
vpunpcklbw
jns
jmp
sbb
cmp
sbb
shlb
stos
mov
imul
ljmp
adc
shl
dec
daa
xor
lcall
outsb
sbb
pop
or
mov
lcall
inc
daa
or
insb
bound
push
push
mov
sub
adc
sarl
jb
mov
shl
call
outsb
pop
inc
or
lcall
cmp
fstl
in
adc
mov
mov
jb
mov
sbb
je
daa
cmp
shll
dec
adc
cmp
inc
jp
adc
jp
xchg
pop
outsb
dec
or
insl
loop
lea
inc
jno
flds
sub
push
rorl
add
inc
je
sbb
jnp
nop
fwait
jp
push
lea
push
ffree
jns
pop
mov
lret
jg
mov
fnstcw
dec
mov
pusha
lcall
push
addl
push
xchg
push
add
cmpb
inc
sbb
movsb
das
adc
sub
popa
test
sbb
sbb
sbb
vpunpcklqdq
dec
ds
test
sub
and
adc
out
sub
ss
jge
movsl
or
mov
sub
pusha
sbb
and
fisttps
call
inc
mov
jp
out
insb
int3
movsl
push
inc
cmp
fmull
daa
mov
std
jge
ret
dec
or
add
insl
popa
mov
cmp
jg
mov
dec
mov
clc
cs
add
in
or
cmp
outsl
xchg
sub
iret
repz
in
and
push
ds
dec
xchg
cwtl
mov
xlat
xor
aas
push
or
hlt
out
mov
mov
sbb
mov
and
sub
js
inc
pop
sbb
enter
or
loope
cmp
dec
clc
sbb
xor
lods
pop
adc
mov
inc
arpl
mov
dec
mov
and
fnsave
inc
adc
adc
and
les
mov
cltd
daa
scas
mov
rol
dec
loop
out
xchg
xchg
cmp
cs
arpl
or
adc
add
out
xor
into
jecxz
cmp
adc
dec
sub
ret
dec
mov
stos
sbb
out
sub
mov
and
loopne
hlt
sub
adc
lahf
out
shrl
mov
popf
and
lea
and
call
pop
fsubrl
scas
inc
test
mov
stc
push
cmc
mov
adc
das
xor
ja
sub
and
aam
mov
jns
dec
or
xchg
jo
in
sub
dec
repz
inc
pop
dec
adc
push
stc
add
xchg
push
xchg
in
daa
fdivr
lret
sbb
pop
inc
sbb
les
dec
sbb
inc
adc
jnp
les
in
cs
pop
inc
daa
or
in
xor
and
cs
fiadds
aas
adc
cmp
mov
or
mov
je
xchg
daa
and
jnp
loopne
lods
popa
pop
fdivrs
jp
ds
mov
ljmp
sbb
jae
xchg
xor
push
push
rorl
dec
icebp
jae
sbb
lock
sahf
sbb
scas
mov
xchg
mov
ja
dec
pop
sub
cmp
cli
sub
pop
iret
sub
adc
mov
push
cmp
push
les
sahf
das
lcall
into
dec
lea
pop
out
xor
mov
pop
loope
mov
pop
dec
or
push
paddd
std
mov
xchg
sub
push
nop
outsl
stc
sub
xchg
lcall
jae
cs
inc
jnp
mov
das
push
mov
cwtl
push
xor
mov
cmpsb
mov
inc
lods
mov
sahf
insb
adc
dec
sub
leave
cltd
or
or
test
mov
and
int
inc
lret
loopne
pop
or
out
xor
or
pop
gs
cmp
inc
div
out
int3
xor
sub
lret
adc
les
and
inc
xchg
push
daa
bound
sub
inc
mov
adc
sbb
and
out
sbb
mov
push
mov
jp
sub
aam
daa
aam
xchg
xchg
test
or
xor
je
mov
mov
xor
sub
push
mov
adc
pop
add
out
sub
dec
adc
pop
and
in
cmp
outsb
jg
aaa
mov
outsb
push
sub
repz
adcl
jbe
push
ret
sahf
xchg
pop
jnp
pop
inc
jp
mov
pop
mov
add
add
fs
mov
push
jns
fwait
orl
scas
int3
sub
xchg
jle
cmp
js
mov
pop
push
inc
sub
pop
dec
inc
adcl
popa
dec
mov
nop
pop
xlat
and
pop
jne
sub
mov
add
scas
mov
dec
iret
push
je
jb
sub
imul
pushf
fsubs
cmp
mov
or
pop
sbb
cmp
cmp
out
in
in
pushf
stos
stc
out
pop
sbb
push
inc
sbbb
adcb
sbb
sahf
leave
inc
pop
jge
mov
adc
addl
add
xchg
jl
lcall
fldcw
lock
mov
cmp
daa
into
lret
xchg
pmaddwd
bound
cwtl
cmp
nop
pop
mov
xchg
jle
lcall
jnp
cltd
push
cs
push
push
pusha
not
inc
add
inc
mov
jmp
mov
mov
or
push
xchg
xor
mov
test
and
insb
jge
push
jbe
add
mov
sbb
add
lret
dec
cmp
fs
cs
nop
sub
inc
jnp
cmp
xchg
or
xchg
cmp
dec
outsb
icebp
mov
outsl
adc
lods
inc
xchg
lods
jle
ret
dec
pop
push
inc
repnz
fnstenv
inc
push
lea
lcall
dec
or
mov
stos
popa
dec
jnp
xchg
mov
dec
or
stc
push
sub
mov
es
inc
sbb
sbb
jge
mov
das
fs
in
popf
lret
jl
push
jne
sub
stos
repz
fldcw
xor
pop
lods
rorb
out
sarl
inc
adc
push
xchg
sub
cmpsl
aaa
in
hlt
xchg
aaa
sbb
xor
xlat
adc
dec
mov
cmpsb
pop
int3
cmp
clc
push
adc
enter
jmp
add
scas
xchg
pop
pop
das
inc
jns
aaa
popa
push
mov
mov
and
pop
insl
xchg
and
jg
pusha
sbb
pop
dec
mov
and
pop
ret
clc
xchg
popf
bound
dec
movsb
sub
sub
mov
pop
into
pop
sub
fldt
xchg
and
xchg
xor
xor
push
dec
sub
xchg
xchg
aaa
cmp
sbb
push
xor
adc
stos
cmp
sbb
js
mov
cld
in
xor
and
fnstcw
into
sbb
push
jno
mov
jmp
pop
mov
mov
xchg
stos
xor
adc
adc
scas
adc
sub
inc
sub
jge
sbb
push
xchg
and
cmp
daa
insb
xor
rcll
aam
lret
add
pop
adc
daa
outsl
movsb
inc
test
test
xor
jmp
lret
xor
lods
push
stc
pop
fstpl
mov
arpl
mov
xor
in
and
and
sahf
in
pop
js,pn
daa
mov
push
in
out
negl
sub
jg
sub
dec
pop
sub
and
and
insb
inc
xchg
cmpsl
jp
fwait
mov
xchg
adc
push
sbb
cmp
daa
in
jns
push
pop
sub
jns
daa
mov
sub
mov
pop
insb
cmp
call
loope
hlt
aaa
mov
and
popa
mov
lret
into
repnz
out
call
repz
add
lahf
inc
lret
lahf
loop
or
loopne
lea
dec
sbb
lods
movsb
out
add
mov
lret
mov
nop
push
imul
or
push
adc
lcall
and
repnz
ret
or
dec
iret
aas
int3
add
sbb
jno
icebp
push
sti
lahf
iret
push
pusha
sub
push
or
jge
ret
sbb
or
sahf
sub
mov
xchg
pop
push
sbb
jl
loopne
inc
cmp
or
js
in
lahf
adc
outsl
stc
dec
cmp
pop
mov
decb
shl
in
daa
xchg
pop
and
popa
out
fadds
jae
cmp
xchg
pop
dec
nop
mov
push
in
or
mov
je
shl
dec
lods
pop
push
cmp
xchg
pop
rcrl
cmp
and
mov
mov
adc
movsl
push
aas
mov
push
add
mov
cmp
push
pop
jmp
dec
popa
or
pop
loop
sub
data16
rolb
cmpsb
lcall
dec
or
adc
and
pop
imul
rorb
adc
dec
sbb
push
jno
cltd
test
inc
jnp
mov
dec
sub
dec
mov
jl
dec
aam
dec
into
ret
jp
inc
ljmp
jle
or
popf
shrb
nop
pop
mov
cmpsb
jl
out
es
push
add
sar
pop
sti
lcall
push
jmp
dec
insb
fnstsw
mov
imul
out
sbb
jp
sub
jns
xchg
sub
js
push
fs
shlb
jne
push
cwtl
mov
test
mov
xor
cmp
daa
dec
mov
cmp
dec
clc
cmp
fisubrs
bound
dec
fisttpll
mov
xchg
lahf
mov
adc
cmc
jae
inc
arpl
mov
adc
pop
clc
adc
ret
cmc
scas
mov
stos
pop
mov
jae
jns
or
jae
sahf
xchg
inc
mov
sar
mov
or
and
dec
fwait
or
daa
push
mov
inc
xor
cmp
aam
sahf
or
pop
int
and
or
js
prefetch
or
js
xor
fwait
sbb
mov
or
fsubl
sbb
cli
add
pushf
adc
or
dec
jnp
dec
mov
fstp
lahf
mov
aad
mov
push
cmp
rclb
aaa
push
in
aad
adc
out
outsl
mov
aam
fstps
pushf
lcall
in
mov
xchg
and
imul
sbb
and
test
add
cld
scas
sub
xor
aaa
dec
adc
mov
mov
lds
cwtl
inc
sub
in
les
push
dec
repz
inc
addr16
shrl
sbb
data16
pop
dec
out
adc
or
dec
cmp
mov
or
or
insl
rcrl
icebp
jbe
fnstcw
or
sbb
lcall
and
daa
fsubs
dec
mov
push
mov
adc
xchg
mov
fmuls
xlat
inc
or
scas
dec
addl
incb
xor
adc
sbb
scas
jmp
mov
repz
push
stos
in
sbb
inc
push
inc
mov
sub
leave
js
jae
mov
sbb
dec
mov
xchg
insb
mov
adc
hlt
xor
fsubrs
ss
and
or
loop
pop
imul
aam
sbb
mov
adc
loopne
sub
hlt
inc
push
dec
sub
std
or
mov
pop
add
idivb
add
jbe
mov
jo
popl
sub
add
push
jp
pop
inc
or
insl
mov
cmp
fdivp
icebp
xchg
dec
in
sbb
outsl
add
sub
pop
je
insb
test
dec
and
inc
inc
or
push
mov
xchg
mov
push
data16
mov
sbb
arpl
mov
daa
lret
add
negb
mov
adc
cli
lcall
dec
push
sbb
popa
inc
cld
arpl
mov
shll
test
xchg
hlt
fcmovu
mov
pop
xchg
mov
xchg
pop
pop
mov
pop
stos
jge
out
sahf
sti
aam
and
adc
inc
cld
fs
jnp
add
push
jp
jp
cs
lock
scas
push
mov
int
xchg
push
nop
push
xchg
adc
xor
inc
sub
sahf
lock
cli
xchg
or
dec
jmp
sarb
pop
aad
jbe
daa
pop
loop
mov
pop
mov
clc
sub
add
ss
push
push
insl
daa
sub
sub
repz
imul
cmpsl
out
sub
xchg
adc
enter
adc
jno
sub
jge
mov
pop
insb
test
inc
inc
icebp
and
fadd
call
jmp
cld
sbb
jp
xchg
ss
mov
out
mov
pop
movsb
dec
imul
clc
sub
lcall
jo
inc
xor
dec
inc
sub
and
int3
jno
inc
adc
xor
mov
mov
jmp
adc
mov
cs
ret
cvtps2pi
push
nop
fldt
sub
sub
aam
ficoml
insl
movb
fwait
mov
lods
or
fmul
stos
filds
es
push
xor
fimull
mov
dec
push
xor
orb
rcll
cmc
mov
std
lcall
or
xorb
insb
inc
dec
push
adc
lock
fidivs
sub
fwait
mov
outsl
lret
dec
dec
ja
pushf
bound
mov
ret
iret
mov
shll
xorb
sarb
test
iret
hlt
jmp
cmpsl
cmp
daa
test
shrb
lea
test
outsb
lds
ss
jne
mov
sub
cmp
addr16
push
sub
std
out
cmovns
or
dec
mov
out
add
dec
cwtl
sbb
xchg
pop
push
loop
cmp
adc
xchg
or
xchg
rclb
adc
adc
xchg
and
cmp
jo
or
jl
jp
or
pop
mov
sbb
daa
add
or
fs
repz
mov
incb
push
fxch
dec
pop
mov
sahf
inc
jnp
sbb
popf
push
shll
mov
pop
xchg
mov
add
cmp
mov
cmp
push
imul
bound
insb
dec
add
icebp
dec
or
inc
mov
push
stos
inc
mov
dec
ss
dec
in
cmpsb
sub
stos
jno
inc
arpl
inc
inc
cmp
dec
push
inc
outsl
das
inc
push
adc
mov
dec
mov
sbb
shl
fistpl
inc
cli
dec
or
mov
push
arpl
rcrb
jmp
add
mov
mov
sbb
or
mov
mov
cltd
shll
sbb
sbb
xchg
mov
lock
xchg
jl
mov
sbb
fidivl
sub
in
xchg
std
lods
in
xor
jl
inc
adc
outsl
push
inc
pop
lea
sub
dec
inc
mov
jbe
cwtl
mov
inc
fwait
fwait
push
pop
push
xchg
inc
pop
fwait
jb
bound
inc
mov
lods
mov
adc
rcrl
lcall
adc
pop
xor
push
mov
pop
rclb
das
mov
arpl
mov
or
test
fstl
xchg
movhps
fwait
inc
sub
mov
pop
fisttpl
push
adc
mov
lcall
lea
repnz
sub
jg
shlb
cli
out
rcrb
fnstenv
scas
rolb
xor
or
mov
pop
jle
rdmsr
into
ret
ret
scas
lcall
pop
adc
leave
pop
call
sub
jmp
incl
jno
dec
jnp
outsb
clc
adc
pop
and
inc
sbb
sbb
mov
mov
ljmp
push
sbb
stc
sub
dec
push
xchg
pushf
adc
lahf
sub
sbb
cmpsb
dec
xchg
cmpsl
jnp
xor
dec
dec
dec
lret
dec
aam
or
bound
cwtl
lods
xor
and
mov
push
or
lret
pop
pop
ljmp
cwtl
sub
or
les
xchg
rcl
lds
xchg
push
lods
inc
rolb
fisttps
lret
pop
or
cltd
in
daa
andb
repz
int
push
mov
dec
dec
cld
xor
push
and
sub
out
fbld
movsb
add
mov
sbb
pop
lret
enter
lret
je
sbb
dec
cmc
fldcw
pop
stos
in
sbb
inc
lret
sbb
mov
pop
jg
les
sahf
sbb
out
and
stc
mov
shl
xor
pushw
fildll
sahf
or
inc
cwtl
push
jb
mov
mov
mov
xchg
out
insl
ja
bound
pop
out
clc
mov
jo
js
loope
push
xchg
aaa
rcr
and
scas
mov
cmpsb
fmuls
ja
add
mov
dec
jnp
shrb
add
ja
pop
lret
mov
bound
sub
and
xchg
fisubrl
ror
adc
push
jno
daa
test
cltd
rcrl
inc
sub
pop
loopne
adc
loopne
mov
dec
xor
imul
adc
in
inc
adc
fidivrl
xchg
cmc
sub
je
enter
sbb
mov
lret
dec
lods
or
aad
adc
aad
mov
bt
nop
adc
lret
adc
test
adc
xchg
adc
xchg
sbb
sbb
icebp
fstps
mov
rcrb
jp
pusha
lcall
daa
call
aad
in
adc
in
int3
mov
jns
cli
xor
sti
stos
xor
jmp
addr16
cmp
dec
xchg
xor
xchg
ret
add
push
pop
cmp
jmp
add
jmp
jnp
xorl
push
imul
cmp
ret
push
int3
nop
sub
mov
lcall
and
xchg
ds
xchg
sub
mov
lcall
jp
mov
fsubrl
rcll
push
pop
xchg
outsb
xchg
jo,pn
pop
lea
push
inc
je
dec
sti
mov
mov
xor
cld
sbb
das
pusha
push
rorl
fidivs
lret
dec
sub
mov
push
mov
outsl
shl
xchg
pop
mov
add
sarb
xor
popa
mov
xor
mov
pop
sbb
lods
push
cmp
out
addr16
cmp
shl
mov
out
xor
push
cmp
mov
in
pop
sti
jae
movsl
push
jle
cmpsl
repnz
cs
cmp
jb
pusha
xchg
in
or
cmpsl
pop
mov
xchg
cmp
lret
and
xchg
cmp
cli
xchg
sbb
roll
sbb
sbb
cmpsl
xchg
cli
xchg
sbb
or
fwait
lret
mov
ficompl
pop
or
xor
daa
dec
daa
fistpl
rclb
in
or
sti
loopne
ja
xchg
push
es
push
dec
mov
mov
cwtl
mov
mov
lret
add
je
mov
jmp
and
and
mov
jp
loope
aaa
pop
adc
repnz
add
loopne
mov
scas
adcb
mov
bound
cmc
loopne
repz
mov
push
movsl
inc
imul
ss
xlat
test
cmp
les
pusha
data16
imul
mov
repz
gs
stos
jb
pop
or
popf
xchg
popf
aas
adc
lret
outsl
rcll
pop
xchg
fcomip
mov
in
and
pushf
addr16
jno
pop
out
in
out
in
je
jge
outsl
mov
cli
es
movsl
cld
xlat
sbb
fcompl
sar
or
xchg
mov
or
mov
scas
push
ficompl
pushf
cld
xchg
test
mov
gs
adc
mov
dec
jg
mov
cmpsl
add
and
mov
neg
adc
adc
fs
daa
popf
push
and
sub
dec
add
rcrb
xchg
or
cmp
adc
out
mov
sub
push
cmp
add
outsb
xor
cli
or
sahf
dec
or
dec
xchg
das
insb
data16
push
stos
add
inc
insl
mov
scas
and
in
or
scas
push
sub
mov
mov
test
subps
out
cmp
fldenv
cltd
pop
pop
mov
stos
mov
or
mov
lods
jp
int3
mov
addr16
xchg
decl
pusha
subl
ja
fimull
stos
lea
mov
inc
or
lea
add
and
jg
jae
dec
mov
movsl
bnd
inc
mov
ds
je
push
rcrb
cs
push
sbb
or
fnstsw
adc
push
rcrb
cs
and
cwtl
sbb
adcl
outsl
nop
subl
ds
and
mov
shrl
out
xchg
cmp
pusha
dec
push
fwait
adcb
xor
adc
dec
jno
popa
cmp
aam
jg
mov
xchg
cmp
and
mov
xchg
xchg
jno
sbb
shrl
mov
push
jmp
jge
movntps
imull
sbb
pop
or
sbb
jecxz
mov
xchg
cli
or
mov
imul
dec
add
aas
in
shrb
xchg
mov
jo
into
lret
mov
push
dec
mov
stc
adc
mov
push
es
test
insb
daa
stos
lret
or
outsl
ret
mov
roll
int
adc
test
sub
push
sub
mov
adc
loopne
into
sub
sub
mov
or
dec
mov
sub
iret
jp
mov
sub
sub
pop
cwtl
sub
sbb
adc
lods
mov
sub
js
adc
xor
mov
dec
les
push
inc
out
adc
movsl
fcoml
sbb
mov
pop
jp
xchg
push
hlt
or
jp
mov
pop
xor
add
adc
mov
popa
mov
inc
rorl
sbb
jnp
push
lret
sub
pop
mov
int3
jge
mov
repz
rcrl
mov
and
xor
dec
jb
adc
dec
cmp
push
mov
jl
shrl
and
sti
jno
cmp
lcall
mov
jno
stc
aaa
adc
cmpsl
cmp
xchg
imul
insb
mov
sub
mov
icebp
push
sbb
sbb
and
xchg
adc
jae
mov
lock
add
fdivrp
out
out
cld
mov
lcall
jle
sti
cmp
sub
cmp
push
jmp
xchg
xor
xor
out
xor
enter
mov
subb
push
push
xchg
sub
sub
pop
push
clc
sbb
cmp
fistps
mov
xchg
add
and
cmp
aas
jne
mov
inc
or
pop
mov
jg
mov
popf
push
insb
mov
jg
or
mov
lods
push
je
xor
fcoms
ljmp
pop
cmc
jge
les
jmp
mov
lock
rcll
rcr
js
push
std
adc
pop
sub
inc
jmp
out
or
adc
lahf
out
sub
cmp
push
or
popf
xchg
imul
icebp
xor
sub
out
add
jmp
mov
jmp
inc
xchg
rcll
mov
int
adc
mov
sbb
pop
push
rorl
xor
sub
sti
mov
adc
mov
adc
and
stos
xchg
fisttps
push
jmp
push
add
pop
icebp
xor
inc
dec
cmp
adc
mov
rorl
xchg
xchg
pop
push
pusha
mov
enter
fldcw
xchg
into
adc
sbb
push
mov
mov
scas
sbb
xchg
add
sub
mov
xchg
daa
xor
jnp
pushf
pop
sbb
dec
fsub
fbld
adc
daa
dec
aam
lea
mov
mov
pop
add
sbb
arpl
aaa
mov
negl
cmp
out
mov
fsts
inc
je
daa
mov
and
and
xor
enter
lahf
push
push
cmpsb
or
ja
jo
sub
and
or
std
out
lahf
sub
dec
mov
inc
sub
les
jge
or
pop
push
xor
pusha
sbb
mov
pop
sub
and
mov
xchg
sti
inc
out
dec
shll
fsubrp
cmp
mov
ljmp
iret
stos
pop
pop
xor
lahf
add
cld
mov
jle
int
jbe
ja
jae
imul
mov
push
icebp
aaa
insb
xchg
cld
stos
sbb
dec
sbb
mov
jno
enter
xchg
stos
lea
jle
adc
push
mov
aad
jne
or
or
sbb
dec
cmp
pop
sarl
and
jle
or
mov
stc
dec
aaa
insl
jle
call
jmp
jbe
xor
popa
push
shrb
popl
les
adc
sqrtps
and
repz
int
mov
and
or
test
sub
jo
add
and
ret
mov
and
nop
xchg
add
sbb
pusha
movsb
rorl
pop
andl
ficoml
cmc
inc
cmpsb
sbbl
jnp
mov
mov
or
faddl
fs
jle
orl
repz
scas
xchg
jg
insb
notb
inc
pop
or
sub
pushf
dec
xlat
mov
mov
push
push
fcoml
cld
cmp
adc
jnp
jle
sub
adc
aas
imull
hlt
dec
mov
xchg
adc
sbb
push
cmp
push
arpl
mov
inc
jp
andl
jnp
jo
scas
aam
aad
inc
lret
cmpsl
mov
jae
imul
pop
aas
adc
jns
cmp
repz
dec
or
out
inc
movsl
dec
mov
mov
stc
pop
dec
sbb
inc
mov
sbb
arpl
pusha
pop
shlb
or
pop
addr16
pop
pop
into
lret
sbb
das
dec
jo
aam
pop
jno
xchg
aad
mov
sbb
sbb
xchg
fcompl
or
pop
sbb
adc
imul
and
xchg
jb
daa
cwtl
jb
pop
and
cli
xchg
mov
or
mov
add
stos
pop
dec
in
mov
adc
cmp
stc
cmp
xchg
xor
aam
ja
sbb
dec
movsb
mov
jmp
rorb
xor
push
stc
loop
rclb
add
out
mov
xchg
or
hlt
xlat
push
insb
daa
mov
push
pop
mov
sbb
mov
rorl
mov
mov
icebp
adc
sbb
or
out
mov
cmp
push
xlat
xor
sub
and
jnp
iret
pop
hlt
orb
add
mov
jno
mov
out
inc
xor
mov
fbld
mov
and
push
gs
dec
xchg
int3
ja
jnp
sub
cmp
in
dec
and
push
xor
mov
adc
push
dec
divl
lcall
lock
lret
aad
adc
movsl
daa
rclb
pop
jmp
stos
clc
int
lock
rcrl
dec
pop
lods
jae
test
std
mov
jnp
fwait
mov
mov
xchg
fldl
xchg
mov
mov
cmp
mov
inc
ds
or
in
sub
xchg
or
sub
scas
xchg
push
lret
xchg
stos
dec
aad
mov
push
ds
rcll
jae
fwait
sbb
jne
jmp
sbb
or
mov
mov
loop
dec
pop
sti
stos
fcoml
fildl
xchg
and
and
imul
inc
nop
pop
into
jg
jle
shl
push
or
cmc
int3
insb
or
or
fldl
xchg
lods
das
sub
xchg
test
fdivrp
push
aaa
add
cmp
cmp
out
test
push
lcall
jmp
popf
xchg
push
or
insl
push
cmpsl
inc
fs
pop
stos
cmc
sub
call
insb
das
rcrb
daa
das
aad
stc
cmpsl
mov
pusha
sbb
lods
aad
and
lret
sbb
out
add
lods
repnz
sub
shrb
cmp
mov
adc
sbb
sbb
dec
sbb
pop
mov
ret
push
dec
ljmp
mov
lea
xor
shll
dec
mov
dec
push
insb
bound
inc
cwtl
repz
jp
rcrb
xor
cs
dec
xchg
and
or
lock
mov
sbb
out
pop
ss
xchg
pop
mov
dec
xchg
jo
mov
add
inc
xor
push
mov
leave
sbb
je
xchg
pop
stos
xor
ret
adc
outsl
and
scas
jae
mov
add
into
push
jae
mov
mov
addb
mov
lea
cs
cmp
and
movsb
stos
into
mov
or
mov
cmpsl
fidivl
or
sub
mov
arpl
lret
arpl
or
xchg
lahf
push
es
lret
mov
xchg
ficomps
sar
or
lods
dec
test
push
or
or
pushf
add
mov
add
test
icebp
mov
sub
mov
testb
adc
mov
hlt
scas
and
mov
in
ret
xor
ja
push
pop
jb
or
jg
hlt
mov
shll
lcall
jge
sti
pop
cmpsb
push
cmp
je
bound
out
mov
dec
dec
daa
sbb
mov
sub
faddl
mov
fldt
lahf
jge
push
ljmp
lret
jge
sbb
mov
into
jnp
xchg
and
jbe
sub
pop
shll
sti
test
es
xchg
cld
test
jp
aas
mov
cmp
and
adc
mov
mov
leave
mov
inc
mov
roll
scas
and
dec
cmp
or
in
ja
lret
rolb
or
bound
jp
imul
inc
or
sbb
fstpl
mov
adc
int3
pop
add
ss
test
mov
dec
jae
in
jb
fstl
lea
mov
xchg
pushf
push
mov
stos
jne
lahf
jns
repnz
cmp
cmp
mov
ljmp
xor
das
sub
jns
rcrl
mov
cmp
dec
inc
int3
leave
and
mov
loop
push
mov
cs
push
sar
push
adc
test
lahf
fsubs
xchg
test
xor
push
sub
xchg
mov
mov
stc
and
subb
jmp
iret
push
mov
enter
testb
mov
adc
dec
jo
sbb
mov
mov
push
js
loopne
inc
or
adc
push
adc
daa
paddb
xchg
and
mov
aam
imul
mov
aad
push
mov
das
adc
cmpsl
push
mov
inc
xlat
insb
rcrl
lret
outsl
dec
xor
xor
or
jge
mov
adc
lcall
hlt
mov
inc
pop
sub
cmp
lods
jnp
test
add
int3
push
cwtl
stos
dec
int3
sub
adc
xchg
xchg
mov
and
sysexit
adc
dec
adc
int3
dec
jnp
adc
xchg
aam
pop
loope
clc
mov
pop
test
add
lret
hlt
push
lcall
daa
push
loope
xor
xchg
mov
xlat
mov
or
mov
daa
xchg
sbb
call
mov
daa
adc
jbe
xor
sbb
push
aas
push
std
sbb
aaa
scas
inc
into
or
mov
jle
hlt
je
jae
sub
or
push
sub
dec
jnp
sub
add
inc
dec
js
js
xor
mov
scas
cmp
std
pusha
pop
jle
mov
mov
outsb
loop
fdivs
arpl
call
insb
xlat
mov
xchg
das
daa
mov
mov
mov
and
in
jno
mov
push
andb
inc
push
cmpsl
inc
xchg
and
and
inc
inc
cmp
aaa
and
sub
dec
ss
push
std
cmp
push
adc
inc
push
add
insb
sbb
jmp
out
pop
daa
loope
rolb
adc
mov
push
cs
xor
dec
mov
mov
push
fisttpl
cli
in
mov
hlt
jecxz
dec
fmulp
or
movsl
std
rorb
or
mov
xchg
cmc
std
sub
clc
repz
jp
repnz
sbb
shlb
test
sub
mov
in
xchg
sti
and
mov
stc
orb
or
sbb
hlt
mov
stc
xor
inc
pop
adc
sub
mov
adc
int
jp
adc
inc
pop
pop
test
addl
jno
std
iret
push
inc
insb
jp
int
insb
pop
or
es
dec
and
dec
aam
lds
mov
mov
mov
adc
in
mov
mov
pop
sbb
aaa
xchg
or
iret
or
mov
lret
xchg
add
test
inc
ss
icebp
pop
movsl
scas
cmpb
iret
mov
push
scas
xchg
mov
addr16
pop
mov
inc
adc
test
jb
add
dec
mov
out
andb
jecxz
sbb
dec
and
adc
lea
lret
dec
sbbl
xchg
sbb
lods
mov
mov
cmc
jge
jl
jb
jae
sbb
lret
cmp
xchg
dec
jbe
and
xchg
sub
xchg
add
jp
push
push
js
or
mov
scas
push
mov
push
mov
jb
aad
outsb
cs
adc
mov
dec
cwtl
dec
std
in
xchg
cld
lcall
jge
cmpsb
add
mov
into
or
sub
jg
jb
stos
dec
sub
cmp
dec
sub
nop
pop
cmp
shlb
push
mov
sbb
mov
xchg
ds
imul
ljmp
mov
push
adc
fidivrs
cmp
daa
jmp
sbb
jae
addr16
cmp
popf
xor
push
cld
and
mov
inc
push
mov
and
and
adc
sub
jecxz
pop
jno
into
inc
rcll
testl
inc
sub
outsl
ret
mov
cmp
dec
and
sub
out
adc
mov
or
jmp
lcall
sub
xchg
lds
mov
sar
ss
insl
add
sbb
pushf
or
sbb
mov
dec
fadd
insb
jge
mov
cli
stos
or
or
push
into
pop
mov
hlt
test
mov
arpl
test
cwtl
cmpsl
loop
sti
daa
jb
sub
pushf
in
test
adc
pushf
fidivrs
jge
lahf
ljmp
fidivl
or
ret
into
mov
push
mov
push
xor
pop
mov
jp
adc
aam
popf
jmp
shl
push
jmp
cltd
dec
mov
aam
xor
mov
sbb
sub
incl
dec
ficoms
xor
sub
mov
scas
jno
clc
divb
sbb
lahf
inc
testb
push
adc
xor
hlt
cmp
cmp
daa
dec
pop
rep
pop
cwtl
enterw
push
shr
pop
movsl
inc
cli
je
test
pop
fwait
pop
add
xchg
je
push
ret
lahf
dec
push
adc
lock
push
sbb
loopne
xor
mov
pop
push
push
lds
ss
push
out
and
or
jle
std
xchg
cmp
daa
cmpsl
mov
loopne
fs
push
scas
vpcmpeqw
test
jne
xor
push
lds
push
div
dec
ss
mov
mulb
hlt
hlt
fld
xor
orl
mov
and
jae
mov
and
cwtl
jo
pop
out
scas
pop
movsb
movsl
mov
push
xor
cmp
sbb
enter
adc
fistpll
xchg
xorb
sarl
out
rcr
xchg
int3
mov
aad
aam
or
and
pusha
mov
rolb
mov
loope
out
cwtl
cmp
adc
in
popf
test
jp
or
pop
adc
and
cmp
shll
sub
adc
jg
push
in
aas
sub
outsb
sbb
or
push
movsl
xor
and
or
pop
sbb
arpl
jb
pop
mov
mov
and
and
daa
sub
push
loop
jb
push
mov
shll
int
or
sbb
jbe
test
fnstcw
or
icebp
cmp
mov
rcrb
cwtl
rorl
push
cltd
cs
jmp
dec
scas
aaa
lds
inc
cmc
in
push
jb
mov
decl
mov
push
das
push
cmpsl
hlt
xchg
mov
adc
cmpsb
outsl
dec
sti
mov
inc
dec
push
sbb
jmp
lcall
lds
adc
xor
add
lea
pushf
ljmp
mov
loope
es
adc
xor
imul
xchg
jne
adcl
dec
cmc
or
pop
int3
push
movsl
cmp
inc
pop
pop
mov
ja
repnz
in
push
test
cmp
shll
xlat
cmp
insb
stos
cwtl
aad
out
pop
cmp
xchg
jl
sub
xor
xor
and
decl
push
roll
or
or
jnp
and
outsl
jmp
push
jl
xor
xchg
enter
bswap
shll
rorl
out
and
or
adc
mov
in
test
pusha
sbb
inc
movsb
and
or
movq
shlb
mov
sub
divl
lea
test
jne
jp
insb
xchg
subl
pushw
or
inc
inc
imul
push
sub
xor
ret
insb
pop
xchg
push
shrb
push
les
and
aam
gs
mov
or
aaa
dec
xchg
stos
mov
stos
lods
call
sub
movl
clc
or
sub
fwait
cmpsl
frstor
push
or
mov
push
jno
les
mov
push
pusha
mov
aad
sub
movsb
dec
mov
mov
mov
and
mov
sbb
jnp
and
shlb
cmc
adc
lret
dec
test
mov
je
mov
adc
leavew
jno
mov
je
dec
and
or
xchg
lret
cltd
test
mov
xchg
inc
mov
shrb
loope
dec
push
jl
mov
or
das
dec
or
adcb
sub
cmpsb
or
pop
pop
mov
mov
mov
jecxz
sub
fdiv
cmpsb
mov
jle
dec
lret
cmc
pop
mov
into
fcomi
dec
mov
push
cmpsl
dec
popf
xor
into
or
data16
sub
subl
arpl
mov
pushf
lds
das
push
lds
and
sbb
nopl
cld
mov
mov
ljmp
dec
mov
mov
out
lcall
test
pushf
and
leave
rol
popa
sar
mov
inc
xor
mov
xchg
int3
notb
subb
leave
scas
outsl
or
dec
jae
jo
movsb
lcall
rcll
adc
xchg
imul
test
fnstcw
sub
iret
imul
push
inc
fcomps
nop
aad
inc
scas
adc
shlb
aaa
jo
jae
pop
ret
jno
mov
daa
xchg
sahf
lods
shll
or
rorl
cmp
scas
dec
jmp
xorb
push
scas
sbb
fs
in
call
shll
iret
inc
pop
jb
mov
pop
push
pop
dec
cld
lahf
rorl
aaa
hlt
and
inc
nop
test
int3
adc
out
out
mov
daa
or
icebp
arpl
push
adc
cmp
test
cmpsb
jno
scas
sub
dec
inc
xor
rorl
push
or
lock
shrl
xor
sbb
jne
or
int
in
jbe
mov
pop
jecxz
flds
lods
call
fildll
jno
mov
fimuls
mov
test
popa
jbe
jp
sbb
popa
stos
daa
repnz
inc
imul
je
adc
and
adc
sbb
adc
sub
inc
cmp
mov
adc
mov
xor
xlat
pusha
jl
rcrb
sbb
mov
sub
adc
push
daa
xor
lods
call
or
outsl
lea
insl
adc
sub
clc
mov
imul
and
inc
pop
dec
pusha
es
xor
jne
sarl
loop
cld
sub
movlps
lea
lcall
cltd
adc
lock
fwait
dec
mov
and
or
cltd
cmc
sarl
daa
gs
add
xor
movsl
je
out
xchg
fwait
push
pusha
or
int3
sbb
daa
push
out
inc
xchg
dec
pushf
adc
rcrb
ds
rclb
cmpsb
ss
rcl
cmp
cmp
mov
test
std
pusha
pop
mov
jno
mov
and
sbb
sbb
daa
inc
xor
xor
jmp
idivb
imull
inc
cmpsb
fisttpll
sbb
or
xchg
mov
and
rcr
mov
scas
push
daa
pop
aas
popa
xor
sbb
fcmovb
cmp
xor
pop
cmp
jp
adcl
daa
inc
adc
add
addb
xor
xchg
outsb
aad
push
bound
rcrb
enter
pop
add
adc
imul
mov
mov
je
loopne
adc
pop
nop
dec
jns
xchg
sub
xchg
daa
loop
pop
push
pop
mov
repz
add
or
rorl
popa
xor
nop
sbb
push
test
mov
mov
mov
movlps
loope
and
xor
ss
data16
aam
mov
xchg
cmpsl
orl
stc
jnp
cmpsl
repz
mov
out
mov
sbb
popa
sahf
mov
pop
fdivrp
xchg
push
mov
push
inc
push
pop
lret
cmpsl
mov
in
scas
enter
das
fdivr
dec
mov
mov
leave
pop
pop
xor
mov
jge
xor
cmc
in
mov
in
das
ja
rorl
loope
sbb
sub
rolb
pushf
jnp
jne
mov
repz
mov
fstl
dec
cwtl
icebp
mov
ret
out
sbb
mov
cwtl
jle
mov
jle
lea
xchg
lock
sub
dec
push
lret
xchg
cmpsb
lret
daa
sub
add
in
or
test
jnp
jg,pt
decb
int
cmc
xchg
ss
adc
sub
loope
movsl
out
ss
push
push
popa
ss
cmc
lea
in
xor
loope
sahf
shrl
mov
add
divl
mov
add
push
cs
aas
repnz
jp
insl
and
test
push
xchg
je
mov
stc
push
pop
mov
mov
popa
stos
aam
push
in
fdivl
adc
lcall
out
pop
int3
arpl
mov
lods
ds
pushf
adc
mov
mov
bound
cmpsb
pop
push
cmp
loope
xor
jmp
and
mov
pop
or
adc
bound
je
lcall
lods
das
xchg
dec
xchg
mov
cwtl
mov
adc
push
mov
arpl
sbb
pop
add
mov
or
add
sbb
nop
cmp
adc
inc
xor
sbb
jne
inc
out
pusha
push
xor
cmp
out
cmp
inc
lret
xchg
adc
and
sbb
add
mov
or
push
cwtl
push
jl
dec
mov
add
or
dec
lcall
fistpl
in
gs
lret
addr16
insl
mov
sahf
cwtl
out
arpl
js
mov
inc
push
div
outsl
dec
bound
int3
xchg
xor
xchg
call
sti
push
test
adc
sub
cwtl
fsubs
adc
sbb
dec
fcomps
sub
and
in
adc
aas
rclb
arpl
test
imulb
jnp
enter
leave
dec
jmp
out
cwtl
adc
bound
je
jmp
outsb
sub
or
clc
sub
in
faddl
sub
or
mov
jnp
mov
int3
cwtl
clc
ljmp
stos
lcall
int
aad
fisubrl
mov
outsl
stos
mov
movsl
pop
movsl
mov
mov
andb
fiaddl
imul
movsb
push
push
lea
mov
lods
lods
push
push
data16
daa
mov
jnp
imul
dec
push
pop
insb
jmp
sub
repz
call
mov
adc
inc
jge
mov
movsb
pop
sbb
and
data16
int3
outsb
sbb
sbb
cmc
loope
int3
lock
je
jl
call
lock
push
push
jg
sub
hlt
xor
xchg
cmp
pop
daa
xlat
call
lods
push
cmp
icebp
jb
cs
in
xor
cwtl
test
cmp
mov
pop
ds
push
ss
push
imul
dec
ficompl
sbb
xchg
movsb
or
je
jg
adc
mov
sub
dec
dec
pop
pop
dec
inc
fucomi
mov
xchg
lret
lea
cmc
mov
adc
mov
adc
leave
xchg
pop
mov
fwait
or
adc
outsb
add
fwait
xor
mov
nop
inc
inc
lock
mov
dec
xchg
std
cmp
stc
mov
repz
inc
mov
ljmp
xchg
push
rclb
sbb
pop
pop
mov
sub
xchg
nop
push
push
add
xchg
xor
adcl
call
jae
loope
je
sub
xchg
jns
mov
or
mull
scas
jbe
pop
aam
adc
push
sub
shll
leave
inc
mov
jp
cmp
sti
or
sub
lcall
stos
mov
insl
ds
leave
imul
dec
push
dec
int3
jp
pop
fwait
pop
leave
sahf
push
mov
enter
inc
dec
sub
lock
roll
pop
popa
mov
fisubrs
cs
jb
mov
push
in
or
repz
aad
aam
push
mov
pusha
popf
xor
mov
fcoml
cs
out
xor
push
cmp
inc
sub
xchg
inc
scas
js
dec
sarb
mov
push
xlat
push
push
js
sahf
mov
in
dec
push
push
aam
loop
imul
stos
mov
insb
xchg
add
jp
stos
adc
dec
dec
test
ljmp
iret
and
ljmp
or
sarl
das
mov
out
es
inc
dec
lods
fs
repnz
push
sub
adc
ret
in
movb
test
stc
cmp
mov
sbb
mov
jne
cmc
stos
pop
dec
lcall
pop
add
push
xor
dec
mov
xchg
push
cmp
lods
adc
and
inc
es
das
imul
push
adc
push
jp
adc
fldcw
xor
fwait
inc
jmp
push
or
dec
sbb
xchg
pop
xchg
shl
jg
fisubl
imul
jmp
xchg
inc
pushf
jae
fildl
push
into
test
mov
sbb
je
dec
shlb
mov
pop
scas
lea
mov
jno
fmull
icebp
or
test
jl
jb
bound
dec
and
cmpb
or
lret
lret
popf
adc
int
sbb
sub
scas
frstor
jae
ficoml
mov
cmp
cmp
out
cmp
repnz
pushf
dec
cltd
sbb
sahf
push
or
lret
rcll
xchg
sub
adc
mov
aam
aad
pop
pushf
and
or
rorl
lea
adc
sbb
or
cwtl
adc
mov
dec
inc
sub
pop
xchg
out
sbb
test
rcrl
pop
popa
xchg
outsl
loop
in
xchg
nop
cmp
xchg
adc
pop
pop
mov
cmp
repz
nop
jb
inc
das
int
setne
lods
jl
scas
cmpsb
fcoml
inc
jmp
adc
jnp
adc
and
inc
lret
fwait
or
adc
xchg
xchg
or
fbstp
inc
test
imul
xchg
mov
and
stos
sti
ds
sub
test
out
xchg
xor
add
loop
sahf
repz
and
dec
sahf
iret
inc
inc
aas
sahf
or
jge
xor
and
or
sbb
cmpsl
inc
call
push
add
cwtl
out
dec
ds
aam
lahf
lret
xor
xor
xor
lcall
js
sub
leave
xor
ljmp
inc
in
push
push
imul
hlt
cwtl
dec
cmp
scas
or
je
setle
mov
mov
push
cmp
cmpsb
cmp
lret
imul
imul
cld
je
jo
aam
cmpsl
mov
xor
pop
push
add
cmpsb
stc
mov
sbb
xchg
imul
and
pop
mov
inc
sbb
cmpsl
xor
lock
loop
ja
pop
int3
cwtl
imul
sbb
cmova
lock
repz
mov
pop
or
push
mov
cmp
adc
jg
cmp
inc
iret
cltd
in
jne
fmull
sbb
adc
je
sbb
xchg
adc
dec
or
imul
dec
add
sahf
cmpsb
data16
inc
sbb
sbb
in
lea
fnstenv
cwtl
js
test
xchg
cmp
lds
mov
incl
jae
mov
sbb
or
pop
adc
jmp
dec
insb
cmp
adc
ds
pop
adc
enter
in
icebp
adc
test
sbb
xchg
hlt
fisubl
cmp
out
or
xchg
sub
xor
pop
xor
jl
aad
les
je
mov
stos
jo
push
sub
mov
pop
xchg
pushf
ds
adc
or
adc
in
ss
sub
push
or
insb
cs
cmp
pop
mov
lods
daa
aaa
cld
cmpl
jmp
or
mov
or
std
inc
add
add
pushf
and
sbb
dec
pop
or
std
inc
adc
inc
imul
dec
adc
decl
cli
sbb
xchg
fiaddl
test
lds
push
jle
xchg
fisubs
cli
ficomps
sbb
cwtl
insb
fstpl
mov
sahf
push
dec
ja
or
mov
inc
popa
flds
pusha
mov
aaa
ret
lret
sub
or
cmp
sub
je
push
jb
lcall
cmovle
mov
pushf
fisttpll
jp
dec
mov
mov
push
or
adc
dec
push
movsl
mov
loop
dec
jno
loop
hlt
ficompl
or
inc
pop
dec
jnp
subl
lea
adc
dec
inc
std
repz
sub
cmp
cld
dec
add
adc
dec
call
inc
fnstcw
sbb
xchg
or
cmp
and
movsl
cmp
push
ror
jecxz
std
mov
fcoml
out
fstl
pushf
lds
int3
int
cs
pop
add
xor
jmp
cmc
pop
mov
call
sub
repnz
push
push
lea
sbbl
mov
mov
mov
bound
jmp
jle
sbb
rdtsc
mov
dec
cmp
ja
inc
daa
add
mov
ds
loope
add
xchg
sbb
sti
inc
xor
sbb
outsb
sbb
lcall
bound
ret
inc
loope
xor
loopne
mov
pop
push
jno
xor
aam
cmp
mov
pop
pushw
sub
nop
flds
xchg
cmp
mov
data16
add
inc
js
push
push
adc
lods
cs
ret
pop
aad
and
xchg
out
aam
ljmp
dec
or
sub
or
pushf
push
mov
outsl
sub
sub
mov
inc
xchg
dec
outsl
loop
and
push
daa
ret
call
push
iret
fisttpl
or
sarl
or
ljmp
ror
cltd
push
mov
sub
mov
lods
ja
mov
jns
or
inc
and
xor
fldcw
add
push
xchg
or
add
loope
call
mov
cmp
punpcklbw
push
and
daa
and
add
mov
adc
and
xchg
sub
pop
push
popf
ljmp
xchg
mov
sahf
pop
mov
loope
add
inc
mov
jle
adc
daa
and
mov
ret
jg
jmp
int
cmp
xor
movsl
jl
push
in
pop
in
mov
dec
xchg
insb
adc
inc
cmc
push
pop
outsl
dec
sbb
and
dec
or
xchg
push
sub
jmp
push
inc
xchg
inc
jae
call
dec
xlat
jg
enter
scas
fcmovbe
enter
cs
mov
and
hlt
push
je
inc
sub
daa
lret
inc
imul
nop
mov
test
sbb
outsb
xchg
adc
leave
and
cmpsb
xchg
pop
movsl
cmc
mov
push
stos
sub
outsl
mov
jae
inc
jl
lfs
fidivrl
push
out
push
rorl
jg
pop
and
bound
jg
imul
pop
xchg
std
adc
xchg
sbb
dec
sbb
push
fucom
push
jle
push
or
mov
xor
cmpsb
push
cmp
cmpsb
jb
adc
pop
leave
push
dec
adc
xor
lcall
push
mov
sbbl
shl
sub
arpl
aam
lret
push
dec
pusha
mov
mov
mov
xor
out
jle
mov
pop
or
aaa
mov
jb
or
pop
push
in
sbb
mov
mov
lea
push
je
xor
mov
jns
out
add
sbb
cltd
xor
int
cmp
ljmp
jb
dec
xchg
out
sbb
or
pop
cmp
pushf
jle
iret
fsubrl
int
lods
jge
rorb
mov
push
jo
jp
xor
jmp
dec
or
sub
inc
and
and
xor
and
je
bound
lea
ret
adc
mov
fnstcw
xor
pop
int3
gs
rolb
xchg
or
push
jae
xchg
mov
or
fcompl
mov
mov
push
mov
pop
or
adc
jne
push
flds
mov
rcrb
and
daa
inc
cmc
data16
mov
js
jns
lcall
shld
jg
popf
mov
notb
jp
sub
cmpsl
dec
mov
mov
inc
inc
int3
stos
mov
add
mov
adc
into
sub
mov
sbb
sbb
imul
pop
sub
jecxz
push
test
cwtl
push
insb
jne
adc
dec
adc
mov
cmp
xor
and
xchg
outsl
pop
int3
and
stc
sti
push
mov
or
dec
inc
dec
jge
adcb
fimull
ljmp
repnz
jle
data16
popa
mov
add
daa
nop
divb
fmulp
stos
xlat
orb
mov
inc
nop
jb
mov
push
cli
jp
dec
cmpsb
adc
cmp
add
ret
mov
and
out
sbb
aam
mov
movsb
loop
xor
jge
movsb
inc
pop
clc
das
sub
shrb
or
adc
mov
jp
lret
mov
in
inc
sbb
out
movsb
xchg
rcll
mov
jg
ret
in
lock
xchg
pushf
mov
or
jno
mov
fisubrl
mov
cmp
bswap
sub
cmpsl
push
xor
xchg
test
mov
sbb
loop
or
and
popf
stos
mov
dec
lret
data16
jmp
or
das
lret
push
mov
push
lods
pop
cmpsl
lret
clc
inc
dec
out
insl
dec
sub
and
cmp
add
push
jnp
sub
and
mov
sub
movsb
insb
adc
mov
aad
ret
mov
movsl
sub
mov
push
js
mov
or
push
sahf
mov
mov
adc
imul
popf
pop
pusha
adc
sub
xor
jge
loopne
imul
adc
inc
in
ds
sub
pop
dec
cmp
push
sub
dec
js
push
ret
adc
cmc
pop
aam
push
in
lret
daa
rcrb
mov
xor
out
lock
jmp
leave
ret
mov
cli
daa
cld
cmpl
push
sbb
gs
nop
lods
sbb
stc
mov
lcall
outsl
stc
enter
stos
sub
jns
xchg
cmp
arpl
inc
fidivrs
mov
stos
mov
dec
dec
cltd
adc
xchg
push
xor
sub
xor
cmp
xchg
hlt
imul
test
stc
test
adc
sbb
dec
js
scas
popf
out
aaa
incb
mov
ds
scas
dec
test
icebp
repz
cwtl
shrl
repz
ret
es
je
movsb
loopne
dec
xchg
sub
cmpsb
sarl
sub
xor
sub
sub
aam
sbb
cmc
mov
stos
pop
outsl
or
xchg
adc
lcall
pushf
das
sub
jmp
push
in
or
push
call
push
mov
in
xor
sbb
jg
mov
add
es
test
jne
ret
add
dec
mov
out
icebp
lret
pop
or
inc
xor
adc
loope
sbb
push
lcall
sbb
jnp
push
jno
cltd
vmovapd
fbld
rcrl
mov
push
xchg
cwtl
lret
and
clc
jmp
mov
inc
pushf
or
cmp
add
jl
mov
adc
out
in
out
mov
gs
dec
xor
dec
mov
jmp
push
mov
sarb
in
or
or
lods
sbb
cmp
lret
adc
inc
ds
jno
adc
inc
mov
add
jno
dec
fsubrl
lret
das
dec
xorb
xor
roll
int
daa
dec
fimull
pop
scas
adc
loop
or
jp
push
pop
xor
stos
aaa
clc
jae
loop
and
sub
jns
add
mov
push
aas
lods
or
adc
adc
sbb
shlb
lock
ljmp
mov
insl
imul
add
pop
push
mov
cwtl
push
cltd
insb
mov
out
dec
rcr
ljmp
mov
mov
lret
xor
mov
sbb
leave
arpl
into
ljmp
xor
cmp
iret
test
in
mov
in
xor
in
sub
and
test
std
sub
mov
daa
xor
sbb
cmp
test
push
je
and
pop
pop
loop
sbb
cld
cmp
stos
inc
lods
pop
pop
ljmp
push
push
sub
les
or
cmp
sub
adc
movsb
sbb
fdivs
or
rclb
jmp
push
int
sti
push
xchg
or
adc
aam
push
mov
mov
popf
and
cmc
mov
sbb
lds
sub
lods
xchg
pop
xor
pop
adc
mov
lods
mov
ljmp
loope
jmp
mov
test
out
xor
push
sbb
and
or
cmp
cmp
or
inc
and
out
shll
mov
cltd
shrd
xchg
mov
stos
outsb
shlb
pop
xchg
xchg
push
pop
sbb
lcall
sub
mov
mov
mov
scas
fwait
dec
cmpsb
movsl
shrb
push
inc
insb
xchg
andnps
lods
pop
push
mov
mov
jne
fsts
int3
xorb
dec
inc
cmp
inc
das
sbb
xchg
dec
push
fists
imul
rdpmc
lcall
cmpsb
push
lds
push
sub
cwtl
mov
es
xlat
sarb
mov
daa
add
ud2
imul
insl
mov
mov
and
sbb
jge
fistl
cltd
pop
movsbl
daa
pop
imul
std
fnstcw
shll
sub
dec
sbb
xchg
fstps
sahf
pop
sub
ret
or
jnp
ret
push
add
popf
into
mov
andb
adc
xor
rorl
dec
test
cmp
imul
push
and
icebp
adc
xor
push
xchg
mov
push
imul
mov
dec
mov
cmp
dec
dec
sbb
sub
push
das
movsl
stos
repnz
test
imul
or
xor
cmp
mov
add
mov
stos
jp
hlt
lcall
mov
popl
pop
lock
insl
inc
stos
mov
adc
das
adc
orb
add
leave
outsb
movsb
int
scas
repz
xchg
mov
dec
icebp
je
add
pop
ljmp
aam
ja
orb
leave
jge
or
mov
rcrb
sub
push
mov
sbb
cwtl
imul
adc
jmp
xchg
jno
and
jno
sbb
xchg
lahf
roll
rcll
in
mov
dec
xchg
lods
jge
rcr
dec
sbb
xchg
std
or
adc
push
imul
jae
leave
cmpsl
int3
rcrl
loope
daa
scas
mov
jno
pop
mov
push
adc
jl
dec
lea
pop
test
jbe
or
lods
or
pop
into
lahf
sub
xor
cmp
add
push
outsb
mov
push
or
and
sbb
adc
fsts
adc
psrlq
jg
mov
scas
push
lods
adc
testb
insb
cmp
sub
imul
fidivrl
dec
xchg
adc
push
inc
jge
xchg
dec
xchg
jae
sub
insb
test
in
sub
or
or
ret
mov
push
pop
shl
rolb
or
shll
fldenv
adc
dec
xchg
scas
cmp
arpl
dec
and
add
ret
jmp
mov
lret
stos
in
cmp
mov
test
movl
out
sub
or
mov
xor
flds
push
testb
imul
cmp
mov
fists
sbb
cld
jns
lahf
nop
mov
mov
pcmpgtw
inc
mov
pop
mov
jno
sub
int
jnp
xchg
dec
dec
add
push
inc
mov
cmp
inc
addr16
aam
sub
dec
xchg
roll
hlt
mov
ljmp
push
outsb
adc
mov
cwtl
lds
xchg
push
jne
sti
xchg
mov
adc
adc
cmp
sbb
daa
in
mov
inc
and
dec
xchg
mov
loop
adc
mov
dec
aam
adc
xor
jne
aad
aas
push
test
or
cmc
orl
push
mov
adc
out
test
mov
imul
test
xor
jbe
and
xchg
adc
pushf
lock
mov
ds
ret
xchg
jg
push
and
sub
jmp
imul
filds
add
sub
or
or
jp
stc
xorb
and
push
lea
cltd
aaa
sbb
aaa
out
adc
xor
scas
jp
xchg
ror
sbb
out
adc
or
or
push
stos
xor
lret
xor
push
fistl
sbb
pushf
cmpsl
jo
stos
add
insb
icebp
sub
or
scas
imul
push
mov
shl
xlat
inc
push
xchg
sbb
mov
aam
mov
sbb
mov
pop
xchg
lret
sub
andb
lods
aad
enter
in
jl
ret
pop
scas
mov
pop
insb
cmc
xchg
mov
out
lea
push
jl
mov
xchg
or
scas
push
in
sarb
mov
daa
inc
dec
test
jge
cmc
adc
cltd
jmp
mov
ljmp
cmpb
inc
imul
xchg
mov
movsb
jno
mov
in
adc
or
mov
cmp
cmp
or
mov
adcb
loope
mov
fdivs
aad
cmp
js
pop
lock
inc
mov
pop
stc
jmp
int3
cltd
js
stos
xor
loopne
jae
addr16
push
bswap
das
nop
subb
xchg
cmp
out
addr16
movsb
sbb
mov
dec
mov
call
fistps
add
or
mov
shlb
ja
mov
push
out
rorl
mov
jno
fwait
daa
xorb
ret
cld
rol
dec
xchg
fnstenv
xchg
sub
push
loop
sub
cmpsb
mov
mov
out
adc
cmc
cwtl
ja
lods
adc
fidivrs
cmp
lea
repnz
test
push
sub
xchg
xor
jbe
outsl
dec
sbb
lret
fidivs
insl
inc
adc
pop
into
sbb
incl
outsb
ror
mov
mov
cwtl
pop
sub
push
shll
outsl
mov
inc
inc
in
ja
mov
jp
push
push
or
mov
cmpb
test
xchg
sbb
xchg
pop
outsl
cmc
adc
nop
mov
xchg
push
out
lahf
scas
test
mov
hlt
or
xchg
outsb
add
pop
outsb
pop
mov
mov
cmpsl
mov
hlt
sub
jae
sbb
pop
sbb
outsb
and
lcall
ret
rorl
adc
inc
xchg
or
cmp
dec
xchg
in
fildll
data16
aad
dec
inc
xchg
mov
adc
push
sti
lret
cmp
cmp
lea
lret
cltd
mov
lods
cltd
jg
movsl
imul
xchg
es
and
sbb
jle
inc
adc
and
pop
jne
adc
add
ss
mov
mull
dec
clc
in
cwtl
in
stos
xchg
iret
insb
stc
jmp
lret
sbb
dec
adc
dec
or
or
xchg
xor
mov
cwtl
xchg
imul
dec
mov
outsb
dec
jbe
scas
mov
jmp
or
jmp
jb
jno
pop
sbb
aam
daa
push
fldcw
inc
repz
stos
arpl
lahf
cltd
test
mov
push
jne
scas
lock
jge
mov
nop
negl
xchg
sti
mov
mov
push
adc
lret
shll
sub
mov
mov
iret
xchg
incl
adc
imul
nop
shrb
xchg
cmp
cmp
fcoml
jle
ljmp
push
test
sar
jb
xor
and
dec
jae
sbb
pop
dec
add
xchg
inc
sbb
out
add
lret
cltd
pop
push
clc
push
adc
push
sbbb
adc
aad
jne
fxch
jne
pop
lret
add
loopne
outsb
fmuls
mov
or
or
push
aam
push
bound
movsb
in
jp,pt
jmp
push
mov
stc
sub
xor
mov
jmp
push
adc
and
xor
or
insb
jp
xlat
dec
xor
out
sbb
loop
jecxz
stos
call
push
cmp
jle
stos
or
dec
mov
cmp
pop
aam
pop
and
mov
lret
es
mov
jg
jno
jno
sub
dec
cmp
push
das
or
fsubr
xchg
stc
js
scas
mov
inc
add
add
jle
sbb
or
scas
pop
and
pop
rcrb
mov
lret
mov
mov
sarb
adc
adc
xchg
mov
or
jne
and
dec
inc
push
xchg
stos
jne
xchg
jl
into
stos
sub
imul
movsl
nopl
cmp
xchg
stc
jae
inc
dec
adcb
adc
imul
lret
idiv
dec
daa
fisttps
sub
and
inc
cld
push
or
inc
push
std
mov
adc
cmpsl
std
aas
push
mov
pop
pop
or
add
loop
mov
xchg
scas
out
dec
jmp
xchg
test
xchg
sbb
jns
and
mov
mov
cmpsb
jns
mov
in
cwtl
push
sub
insb
add
in
in
aam
notl
setne
and
lcall
jo
mov
pop
push
sahf
pop
mov
push
pushf
push
ja
hlt
jl
mov
pop
sub
or
in
clc
les
push
mov
sbb
mov
lcall
rcrl
dec
icebp
cwtl
mov
or
stos
dec
push
sub
ror
lods
scas
xchg
push
lcall
cmp
testb
insb
mov
dec
and
xchg
imul
xchg
out
adc
xchg
xor
out
xchg
in
adc
adc
mov
into
dec
mov
dec
mov
sub
push
mov
sbb
mov
mov
push
sub
aad
jae
in
xor
rcrl
push
sub
xor
xchg
inc
in
or
ja
mov
and
mov
push
dec
or
adc
adc
lea
pop
mov
adc
cmp
popa
adc
rcll
mov
lock
lods
or
sbb
sarb
xor
jno
mov
jnp
pusha
pop
scas
mov
jns
dec
inc
fistpll
not
sub
push
mov
mov
push
arpl
xchg
int3
jo
pushf
pop
push
and
pop
lods
xchg
push
and
stc
pushf
loope
xchg
sub
ror
mov
mov
les
pusha
mov
scas
fcom
mov
mov
jae
jbe
inc
add
outsb
and
push
sbb
mov
cmp
cmpsl
je
push
mov
sub
cmp
adc
ljmp
or
xchg
repnz
je
je
nop
outsb
fcoml
mov
out
push
leave
push
mov
ljmp
sbb
add
sbb
mov
mov
aas
sar
cmp
xor
out
mov
push
adc
xor
out
addr16
adc
jno
mov
sbb
sbb
cltd
push
or
add
xchg
pushf
loope
out
sbb
jl
scas
mov
mov
mov
lods
or
mov
mov
daa
repnz
inc
mov
repnz
ljmp
jge
sbb
or
movb
scas
xor
xor
dec
or
sbb
int
mov
mov
inc
pop
sarb
jmp
pop
jne
xchg
or
mov
cmp
sub
repnz
mov
push
fistpl
mov
out
mov
sub
mov
add
or
xchg
cmp
push
and
add
bound
xor
test
rolb
lock
pop
cld
negb
lret
pop
sbb
outsb
ret
sbb
mov
jae
lods
inc
test
repz
mov
mov
sub
lret
repnz
test
pop
pop
testl
sbb
cmp
xor
imul
jmp
mov
mov
inc
jl
dec
cmp
xor
xor
jb
inc
outsl
orb
jb
push
cmp
or
outsl
ja
clc
mov
mov
inc
and
movsl
push
jecxz
sbb
lret
push
std
inc
pop
jmp
xchg
add
inc
mov
mov
daa
sbb
pop
add
aam
dec
mov
cli
mov
xchg
jecxz
loope
inc
xchg
and
inc
inc
shr
mov
inc
lcall
pop
pop
dec
adc
mov
xor
push
dec
xchg
repz
push
sub
repnz
loop
cmp
ljmp
adcb
sbb
shll
and
nop
leave
nop
scas
xchg
out
mov
adc
and
outsl
add
or
mov
adc
sbb
dec
push
adc
movsb
pop
mov
cmp
bound
in
repnz
cmp
lret
xor
rorb
xor
test
out
and
clc
fildl
dec
push
shr
push
mov
xchg
inc
cmp
fnstenv
vprotw
inc
jnp
dec
pop
cmp
repnz
mov
insl
lret
xchg
mov
int3
pop
adc
inc
adc
or
popf
push
fnsave
mov
and
push
cmc
jne
pop
fildll
pop
xchg
adc
repz
xchg
imul
nop
ljmp
das
lea
imul
stc
mov
cli
push
pop
jo
xor
and
mov
cwtl
into
dec
adc
xor
push
daa
adc
iret
push
mov
jmp
iret
les
lea
ja
mov
xor
cmp
and
cmp
aam
inc
cwtl
mov
jnp
or
stos
jb
mov
dec
das
mov
cs
cmp
push
loopne
cmc
inc
jmp
daa
int3
push
stos
imul
push
or
cmc
test
xchg
insb
jp
xchg
aas
loop
daa
inc
in
rclb
jg
rclb
adc
cmp
adc
and
mov
rcrl
sarb
adc
daa
paddsb
insb
cmp
mov
mov
shll
and
push
or
lret
insl
mov
push
dec
or
out
push
push
jle
out
fisubrs
sub
leave
pop
lods
in
rcll
sar
pop
into
xor
inc
out
and
add
mov
and
mov
test
aas
pop
jb
test
xchg
pop
popa
je
scas
sub
jo
lret
ficoms
sbb
pop
lds
mov
fimuls
pmaxsw
fcomip
cmp
sbb
jmp
mov
shrl
out
sbb
outsl
pop
inc
xor
or
outsl
and
push
sub
inc
push
je
cmp
jno
xor
jne
hlt
dec
sbb
push
popa
or
mov
dec
lcall
int
sbb
pop
mov
add
data16
add
daa
sub
dec
add
xor
cli
fidivl
in
call
mov
inc
daa
jmp
pop
inc
hlt
out
sbb
cmpl
call
xchg
pop
sub
adc
cs
repz
je
shll
and
jb
cwtl
aad
shrl
mov
adc
sub
dec
adc
xchg
cmp
inc
fbstp
xchg
aad
jl
cs
push
andb
hlt
jae
in
loop
inc
mov
adc
and
xchg
imul
outsl
cmp
lock
and
mov
push
jmp
lret
pop
xchg
iret
sahf
pop
xor
xchg
jb
jno
dec
scas
xorb
inc
or
shlb
lea
pop
adc
cmp
ret
fnstcw
pop
in
jmp
mov
fs
dec
stc
rorb
xchg
adc
sahf
cli
aad
pop
les
adc
xlat
outsl
cmpsl
push
adc
jnp
inc
stc
stos
and
mov
push
jp
jno
lds
cs
push
pop
and
xchg
xor
lcall
xor
inc
inc
loop
lds
ds
push
pop
mov
jmp
call
sub
nop
jbe
pop
mov
inc
ss
mov
mov
push
adc
mov
xchg
call
push
andb
push
adc
or
cmpsb
and
xor
stos
daa
jbe
pusha
repnz
push
rcr
mov
push
sarb
inc
xchg
adc
and
push
xor
shr
xchg
sbbb
mov
xchg
sbb
xor
into
popa
scas
or
aad
vmovshdup
ficoml
dec
mov
ja
add
rcll
ja
clc
sbb
insl
mov
mov
bound
adc
pop
nop
cmc
and
pop
cld
mov
sbb
pop
jae
stc
sub
cmp
push
stc
adc
ljmp
push
xchg
popa
hlt
aas
dec
cmpsl
mov
inc
dec
inc
xchg
xchg
shr
push
les
das
add
fcmovne
outsl
push
repnz
jmp
daa
adcl
movsb
test
cld
in
andb
push
outsb
mov
pop
or
and
iret
mov
xor
pop
fidivs
lods
call
es
xchg
adc
push
xchg
lods
filds
daa
pusha
call
or
push
jecxz
mov
xor
sub
add
mov
xchg
xor
in
dec
mov
repz
fisubrl
bound
xor
in
add
mov
fndisi(8087
sahf
arpl
xlat
lea
xchg
cmp
xor
insb
mov
or
jmp
sbb
sbb
repnz
rcll
nop
dec
push
into
and
dec
jmp
scas
stc
xchg
sub
or
mov
inc
decl
fdivrp
cmc
pop
pop
adc
mov
ljmp
and
push
out
mov
jbe
stc
dec
rorl
repnz
sbb
ljmp
rclb
ret
fsts
mov
dec
push
dec
je
push
xchg
dec
mov
cmp
stos
fs
rcrb
clc
xchg
scas
mov
fwait
out
ret
mov
js
adc
ljmp
mov
insl
and
cltd
sar
nop
fcoms
mov
imul
fwait
scas
fistpl
scas
push
lret
or
xchg
mov
or
cmp
insl
out
dec
xchg
xchg
inc
lds
divb
inc
jl
or
add
divb
jb
icebp
mov
ss
sbb
cltd
mov
mov
pop
add
jmp
imul
push
push
movsb
stos
mov
imul
pusha
addr16
call
xchg
mov
cld
imul
xchg
xor
xchg
lods
cmp
sbb
mov
mov
pushl
fisubrs
sub
ficomps
jbe
insb
nop
adc
cs
mov
insb
cltd
leave
jbe
cli
xchg
lock
jp
scas
xchg
sub
adc
idiv
scas
cmp
pop
sub
push
movsl
jl
sub
lret
fdivrl
mov
es
inc
pop
mov
sbb
cmpsl
daa
or
push
aam
aas
data16
movsb
lahf
jl
rcll
imul
sbb
daa
xchg
xor
arpl
stc
inc
sti
push
js
loope
lods
push
or
je
movsl
and
pop
jp
push
daa
lock
push
dec
je
jbe
mov
icebp
jmp
sbb
pushf
push
mov
and
setne
lods
in
mov
jne
popf
xor
cmp
inc
pop
lcall
jbe
inc
fbld
push
cli
leave
push
in
jae
mov
adc
cmp
fstl
mov
mov
mov
cwtl
stos
dec
in
imul
mov
es
rcl
add
sbb
sbb
add
insb
inc
test
xchg
cld
repz
cwtl
insl
jp
sub
mov
jle
hlt
lods
xor
adc
sub
xor
pop
arpl
scas
push
fucomp
lcall
out
jbe
push
inc
push
aas
xchg
sbb
daa
subb
sub
mov
dec
dec
xchg
in
flds
cmp
mov
add
gs
pop
lret
pop
sarl
mov
or
test
push
test
inc
gs
jo
fs
ret
inc
popf
imul
mov
stos
daa
ds
push
mov
push
inc
xor
shr
mov
std
pop
stos
dec
push
sub
lret
es
mov
popa
aaa
cmp
jno
sti
adc
sbb
test
dec
in
cmp
addr16
push
mov
stos
cmpsb
adc
xchg
sbb
andl
jns
sarl
fwait
cmp
sub
call
fidivs
jae
ja
aam
and
sahf
jbe
cmp
aam
xor
daa
and
add
cmp
xor
adc
sbb
les
leave
sub
pop
fsubrl
push
mov
mov
mov
movsb
lock
insb
push
leave
insb
subl
ljmp
out
mov
aad
rclb
adc
ss
daa
mov
xor
mov
movsl
lds
xchg
inc
add
inc
push
icebp
das
and
dec
push
lods
pop
outsl
fldcw
push
add
stos
cmpsl
shlb
adc
fisttpll
dec
add
and
int
xchg
push
fs
mov
cmp
int3
xchg
jl
sub
pop
adc
fimuls
jne
add
ds
ss
push
fs
je
push
sbb
rclb
enter
loop
dec
add
jb
sbb
jae
lret
daa
fildl
pop
cmpsb
and
jb
lods
sarb
push
sahf
sahf
int3
cwtl
mov
dec
pop
sub
cmp
cmp
dec
sahf
cmp
push
dec
sub
push
iret
or
or
mov
or
mov
or
mov
push
xchg
or
js
loope
dec
pop
sbb
pop
mov
repz
mov
aam
repz
jmp
fucomp
iret
jno
xor
ret
stos
sub
jp
out
repz
ret
push
sub
dec
imul
cmp
sbb
ss
pop
cld
imul
mov
out
clc
cmp
test
pushl
fcmovb
xchg
jmp
mov
shrl
xchg
or
cmp
push
xchg
push
cs
push
xchg
ljmp
fsts
push
jnp
test
adc
add
and
repz
addr16
dec
jnp
cmpsb
fs
test
pusha
cmp
in
jno
sub
shrb
xchg
cltd
out
pop
xor
push
cmp
mov
jge
aam
mov
xchg
fbstp
xchg
aaa
bnd
or
ret
paddb
ret
daa
mov
nop
jb
inc
mov
outsb
loop
adc
mov
mov
mov
rcll
loope
push
das
loop
push
daa
repnz
mov
or
mov
fisubrl
adcb
cmp
mov
mov
fisubs
and
xchg
roll
jno
outsl
cmp
dec
in
arpl
jb
ret
xchg
loope
mov
jle
data16
fistpl
sbb
mov
xchg
lds
cs
loope
cltd
dec
push
inc
sbb
jmp
daa
xor
mov
cmp
push
out
nop
and
jno
nop
lds
call
aad
popf
and
daa
rolb
push
lock
cmp
sub
in
pop
popa
push
int3
cmpsb
mov
xor
or
cli
cmp
xchg
xchg
adc
das
or
push
push
mov
dec
scas
imul
daa
leave
push
call
pusha
push
ds
mov
pop
dec
ret
imul
inc
call
dec
pop
inc
mov
push
fnstenv
cs
xchg
mov
adc
scas
stc
jo
in
adc
mov
jmp
mov
sahf
cmc
aam
xchg
or
imul
pop
sub
aaa
rorb
cmp
or
pusha
mov
ss
mov
push
push
or
aam
lods
cs
jmp
inc
movsb
addl
dec
inc
mov
and
loopne
lea
stos
test
mov
xchg
jge
add
mov
sbb
popa
mov
in
cmp
sbb
imul
inc
adc
sbb
jl
rcll
adc
or
sbb
call
push
pop
sub
dec
jl
mov
rorl
mov
or
outsl
push
out
push
outsl
jb
mov
mov
outsl
pusha
adc
cmc
and
xchg
inc
mov
mov
std
ljmp
push
sbb
mov
xor
xor
out
imulb
mov
and
loope
jae
sub
dec
sbb
sti
cmp
inc
sbb
sbb
xchg
push
scas
dec
mov
adc
lret
and
cmpsb
scas
cmp
push
mov
pop
push
pusha
mov
mov
mov
sbbb
stc
jae
and
jb
shl
xchg
pop
mov
sub
fs
pop
lcall
push
inc
pop
popa
adc
hlt
sub
fists
or
xchg
mov
daa
cmpsb
adc
sub
xchg
dec
push
dec
dec
daa
lcall
mov
int3
rcll
xor
cmp
or
jl
int
dec
fcomp
pusha
mov
das
adc
loopne
hlt
mov
leave
rorl
xor
adc
push
inc
and
push
outsl
and
xor
xor
int
jle
mov
iret
test
mov
xchg
xor
add
sub
outsl
pop
sbb
je
imul
sahf
add
mov
loope
or
fcmovnu
in
outsb
dec
mov
les
lret
lret
nop
cmpsl
ficompl
test
mov
jo
cmpl
daa
pop
dec
jns
sbb
int
and
sub
mov
fdivp
imul
rclb
cld
stos
aam
inc
adc
cmc
pop
pop
and
and
jne
test
data16
stc
push
push
push
je
mov
push
out
xlat
cwtl
jp
cmp
mov
ret
in
aad
scas
gs
scas
mov
jbe
push
xchg
int3
xchg
maxps
dec
mov
addl
shrb
sbb
cwtl
stos
xor
jmp
into
adc
mov
or
loopne
sbb
xor
push
xchg
in
push
shrl
test
mov
adc
sbb
dec
jnp
cmp
jno
mov
adc
je,pn
das
push
and
push
loope
aaa
fnstenv
mov
xor
nop
pop
test
mov
xchg
daa
es
jo
loopne
cmp
adc
jecxz
lret
imul
stc
push
in
xchg
xchg
push
jb
and
inc
cmc
enter
adc
push
sub
xlat
add
push
iret
dec
lret
xchg
inc
repz
les
out
jb
test
cmovns
shrd
inc
repz
imul
in
inc
les
fnsave
add
cltd
dec
les
rcll
push
aas
out
dec
data16
or
leave
test
rcll
lcall
xchg
int3
pop
cltd
add
ficomps
push
nop
aam
mov
and
fsts
arpl
mov
pop
sbb
decl
iret
and
pushf
sub
dec
jmp
outsl
fisubs
lret
daa
inc
xor
jne
andb
rorl
mov
jne
mov
or
pop
bound
add
leave
push
imul
inc
dec
iret
sbb
add
into
xchg
loope
pop
fidivs
mov
dec
push
mov
cmpsl
and
adc
dec
outsl
js
arpl
jmp
in
mov
jmp
mov
xor
sub
aad
mov
mov
rorb
dec
scas
push
js
sub
je
push
fwait
mov
mov
iret
fs
adc
sbb
xorl
mov
scas
out
rolb
inc
mov
scas
notl
ds
push
mov
xchg
cmpsb
add
and
adc
cwtl
scas
popa
xor
cmp
add
repnz
in
rcll
adc
mov
push
xchg
int
loope
lea
xchg
cmp
sbb
daa
and
jmp
dec
ss
push
je
lahf
in
aaa
or
movsl
push
sbb
iret
mov
sarl
lahf
pop
mov
push
int3
jno
repnz
stc
xchg
jmp
xor
push
inc
int3
sbb
push
lock
sub
in
mov
pop
int
lock
mov
hlt
xchg
pop
add
pusha
jecxz
sbb
imul
lds
or
bnd
cwtl
out
leave
pop
addr16
scas
mov
inc
and
pop
out
cmp
adc
call
jbe
xchg
pop
inc
adc
xor
push
add
push
jmp
int3
xor
aaa
imul
xchg
and
dec
in
es
sub
inc
loop
cmove
lock
jae
pop
aam
popa
cmp
jmp
das
lret
and
inc
pop
push
hlt
sbb
xchg
stos
rcl
notl
sub
push
adc
or
sub
xchg
dec
dec
adcl
mov
sbb
mov
cmp
adc
test
sahf
notl
into
mov
xchg
shlb
xlat
shlb
jae
and
pop
jp
add
cmp
mov
dec
push
xchg
les
xor
stos
lds
daa
in
dec
idivb
pusha
nop
das
test
jns
test
hlt
dec
adc
cmpsl
pusha
adc
sub
jns
into
add
hlt
xor
and
jno
popa
mov
dec
xor
in
in
mov
lods
xor
sub
inc
ja
pop
ds
andb
ret
shrl
adc
lahf
fwait
xchg
shl
and
push
xor
or
pop
cmp
sbb
shrl
mov
loop
les
scas
mov
mov
popa
inc
sub
cmp
ret
xor
xchg
rorl
xor
loop
insb
enter
add
shlb
jle
bound
into
adc
xchg
pop
lcall
shr
lahf
aad
inc
sub
imul
ror
mov
or
mov
pop
cmp
xlat
scas
ja
add
in
push
shrl
mov
push
lods
outsb
dec
sbb
sbb
xor
push
mov
je
cwtl
orl
mov
imul
imul
invd
sub
insb
push
pop
sbb
test
stos
xchg
mov
push
mov
jb
mov
sub
add
data16
mov
mov
mov
jp
sbb
cwtl
ljmp
aad
push
mov
iret
mov
xor
xchg
cmp
sti
aad
sub
xorb
inc
scas
clc
mov
and
cld
xchg
xchg
test
xor
pusha
outsb
cld
xchg
xor
jp,pn
xlat
or
mov
std
sbb
inc
mov
cs
mov
pop
and
inc
lcall
pop
pop
stc
jmp
pushf
fidivs
or
add
push
ud2
js
xchg
hlt
in
mov
cmpsb
enter
fiaddl
jae
imul
push
cmp
sarl
es
sbb
daa
outsl
inc
adc
xchg
outsb
adc
test
lea
andl
cld
sub
imul
sahf
sub
repnz
jmp
enter
or
cmp
jns
inc
mov
out
mov
divb
xchg
sub
inc
inc
inc
scas
cmp
pop
dec
or
repz
out
mov
outsl
loope
xchg
pop
xchg
es
scas
cmc
mov
mov
mov
daa
push
rcrb
mov
clc
lods
push
or
loop
or
pop
scas
mov
sahf
add
ss
adc
jno
out
scas
push
adc
loop
rolb
push
pushf
fistpl
mov
xor
mov
jnp
les
mov
shr
sbb
pushf
jae
in
inc
lret
dec
sbb
imull
mov
or
shlb
cmp
loope
hlt
je
adc
xor
mov
aam
mov
jo
data16
jae
leave
jp
movl
jne
inc
mov
sahf
movsl
push
jne
inc
inc
xchg
ss
inc
add
xor
mov
loop
popa
int
mov
mov
push
push
ljmp
jmp
cmp
mov
icebp
repz
lret
mov
daa
jae
sbb
cmc
push
cmpsb
pop
cmp
xchg
loop
shll
xchg
outsl
push
pop
and
mov
mov
dec
mov
mov
sarl
mov
int3
xchg
aam
lahf
imul
sahf
or
xchg
daa
in
imul
call
dec
in
push
in
addb
add
add
mov
adc
mov
sub
aam
out
xchg
push
scas
cwtl
lds
mov
pop
and
xchg
push
and
or
adc
mov
ljmp
icebp
in
pop
orb
push
mov
ds
out
ljmp
jmp
xchg
cmp
out
push
sbb
fldcw
lock
mov
sub
sahf
sub
aam
fsts
mov
jle
in
xor
ljmp
lahf
mov
xchg
mov
add
popl
mov
jmp
pop
dec
cwtl
or
sub
lods
cli
into
inc
mov
dec
mov
xchg
fucomip
repz
xor
pusha
lcall
pop
push
enter
pop
and
add
xor
ljmp
movsb
inc
jmp
sahf
out
xbegin
xchg
nop
es
dec
outsl
inc
push
dec
mov
cmp
inc
mov
mov
mov
andb
xchg
sbb
push
ret
mov
les
repz
push
scas
xchg
mov
xchg
out
fmuls
lea
push
add
outsb
jne
fcomps
xorl
enter
movsb
xor
cmpb
out
inc
adc
mov
add
pop
shlb
push
inc
pop
xchg
mov
xlat
in
inc
inc
cmp
out
push
push
cmp
in
pop
mov
scas
inc
mov
bound
dec
aas
jmp
sub
xchg
pop
mov
cwtl
stos
loope
dec
arpl
js
pop
or
mov
xchg
sub
aam
or
fstps
push
add
cmp
jg
jnp
popf
cmp
push
adc
shlb
lods
cmp
adc
lods
shr
xchg
aaa
sub
ljmp
push
push
cld
adc
dec
dec
ds
cwtl
dec
cs
adc
mov
aam
push
mov
hlt
daa
jl
arpl
lcall
xor
lcall
xchg
lcall
jge
push
inc
gs
mov
sti
xchg
jp
adc
hlt
pop
mov
sbb
mov
das
pop
jae
stc
mov
push
mov
adc
dec
dec
inc
imul
lret
cli
cwtl
sbb
cmp
mov
aam
xchg
data16
mov
ftst
pop
jno
fisubrl
mov
dec
or
and
cltd
sub
addr16
xchg
fsubrl
mov
imul
adc
leave
sub
jae
mov
or
imul
test
adc
loopne
jns
cmpxchg
mov
in
xchg
ret
xchg
sub
push
or
inc
and
push
xchg
xchg
pop
mov
mov
mov
in
je
add
neg
ss
mov
nopl
mov
jb
inc
jno
mov
loop
xor
roll
xlat
mov
dec
das
sub
ret
stos
mov
xor
pop
adc
sub
mov
lds
xlat
fidivrl
mov
pop
sub
push
call
ror
mov
and
in
shll
ljmp
cltd
inc
jmp
pop
and
mov
push
lods
xor
add
rcrb
or
dec
pop
push
jge
sub
std
jp
push
std
addr16
fwait
pop
pushf
mov
in
in
pushf
ficomps
pop
jle
pop
daa
ficoml
xlat
sub
or
xchg
push
std
sbb
ja
pop
cmpsb
mov
stc
and
jno
and
pusha
sub
xchg
push
or
shrl
sub
enter
in
out
aam
bound
loop
sub
push
mov
pop
mov
pop
stos
push
adc
mov
pop
mov
mov
repz
test
fbstp
psubusw
jns
ss
xchg
and
aad
imul
and
pop
dec
sarb
mov
fidivrl
mov
in
es
push
ror
push
inc
and
mov
mov
in
je
lret
lock
fs
pop
cs
mov
push
cmp
ret
cmpsl
and
out
push
test
call
adc
xchg
xchg
out
pop
add
inc
adc
and
and
mov
sahf
mov
xchg
cmc
xor
loop
adc
and
jnp
out
jne
test
jno
lds
push
lea
jp
dec
jecxz
sbbl
je
cmpsl
into
and
jne
sbb
and
and
js
push
inc
hlt
hlt
and
inc
frstor
or
mov
addr16
adc
or
xchg
or
enter
sub
adc
pop
push
push
aad
les
mov
jb
mov
push
imul
cmp
or
add
call
mov
or
xchg
ja
mov
cmp
mov
sub
sbb
aam
pusha
out
andl
pop
pop
or
call
sub
lahf
or
in
arpl
mov
dec
inc
xor
push
adc
into
pop
xchg
inc
cmc
adc
push
or
push
ret
adc
fwait
add
out
nop
and
shlb
std
pop
dec
mov
es
pop
ds
xchg
int
mov
xor
daa
push
sub
lcall
xorb
pop
add
dec
or
adc
jae
pop
popf
mov
aas
nop
push
fs
aaa
pop
pop
in
jae
enter
jmp
nop
mov
xchg
jp
jg
and
scas
scas
mov
push
bound
push
imul
mov
stos
and
pminub
lods
xchg
push
cmp
adc
stos
daa
out
adc
sub
adc
or
lcall
lock
and
rorl
imul
mov
daa
mov
or
push
cwtl
jns
mov
daa
cmp
xchg
dec
add
aaa
out
pop
mov
sbb
inc
and
in
mov
bound
or
icebp
mov
sbb
add
push
jae
inc
pop
mov
sub
or
cmp
push
outsb
adc
xor
rolb
and
out
sub
sub
lds
pop
sub
mov
sahf
xchg
aaa
pavgb
cmpl
mov
sbb
cwtl
fcomps
rcll
mov
outsb
dec
push
scas
mov
lret
add
xchg
inc
daa
jmp
dec
inc
mov
movsb
adc
fisubrs
test
nop
and
dec
cmp
sub
ljmp
xchg
cs
cmp
mov
mov
and
jae
jnp
fs
fcmovne
popa
mov
sub
xor
imul
pmuludq
es
cmpsb
dec
lret
mov
fstpl
and
or
sub
dec
sbb
and
jno
cmc
dec
xor
xchg
push
mov
stc
mov
mov
loop
cld
in
rorb
lcall
mov
into
aad
mov
mov
mov
test
xchg
sub
push
inc
sub
popa
xor
das
lock
pop
aas
int
and
sub
ret
xchg
pop
int3
dec
fsubs
aad
push
pop
fwait
pop
xchg
jp
test
mov
jnp
fcomps
mov
rol
xor
push
mov
adc
push
shll
movups
cwtl
sbb
push
enter
push
in
fmul
mov
fmuls
sbb
int3
sub
push
shl
pop
ret
add
lods
or
and
push
imul
out
aam
pop
push
xchg
pop
xor
dec
cmp
popf
jmp
jl
repz
add
cs
sbb
cmc
xor
pop
mov
ret
mov
dec
mov
lahf
repz
pusha
xor
in
cmpsl
cmp
dec
ds
outsb
cwtl
jne
aas
sub
add
out
add
sbb
loopne
out
mov
clc
cmp
mov
xchg
lahf
cmp
jae
into
rorb
mov
mov
cwtl
dec
arpl
daa
stos
xlat
sub
cld
push
xor
add
adc
sbb
xor
jb
sbb
call
ret
push
imul
daa
jb
push
je
fwait
call
dec
push
mov
add
jmp
mov
call
mov
notb
adc
mov
push
pop
cwtl
nop
xor
in
movsb
pop
jne
outsb
loop
imul
xor
mov
lret
jmp
push
jg
push
xchg
add
and
push
cltd
cmp
int3
or
xchg
cmc
dec
cli
mov
jge
mov
xchg
cmp
fsts
inc
cmp
mov
cltd
xor
lret
or
xor
or
lock
dec
jp
mov
sub
jnp
add
mov
jl
sub
xchg
mov
js
cli
or
or
out
out
cmc
adc
es
mov
imul
cwtl
mov
sub
call
aam
dec
and
push
ficompl
das
es
jno
adc
jno
sbb
fldt
cmp
sbb
adc
push
mov
jns
in
adc
cmc
dec
sarl
sub
dec
hlt
mov
sub
xor
pop
push
cmp
sahf
in
sbb
sub
mov
xchg
adc
lcall
loope
scas
fnstsw
xchg
outsl
add
inc
xchg
out
cmc
jg
test
adc
addr16
lea
mov
jo
mov
fildl
pxor
addr16
mov
adc
ljmp
jg
hlt
lcall
nop
push
shlb
ret
inc
mov
pop
inc
cltd
pusha
data16
repnz
jno
sub
and
mov
sti
cmp
data16
jbe
lds
mov
mov
loop
out
fdivp
repnz
or
push
xchg
dec
sbb
push
inc
sub
xchg
js
sbb
dec
adc
ffreep
push
sbb
mov
fs
stos
test
adc
lret
sbb
outsl
and
in
add
pop
lods
cltd
sar
push
hlt
into
xchg
lods
push
or
test
pop
test
inc
and
cmp
lds
fstps
and
fdivrs
mov
stos
mov
into
imul
sbb
cmc
pushf
mov
xor
adc
add
push
mov
sub
rorl
inc
das
inc
xor
mov
mov
xchg
lock
dec
into
scas
push
mov
stos
jae
mov
add
xchg
inc
je
sub
dec
push
bnd
mov
cltd
and
xchg
sub
cmp
xor
xor
insb
mov
dec
adcl
std
mov
loop,pn
adc
sub
push
cld
pmaxub
adc
leave
das
xor
push
ss
mov
loopne
es
repz
stos
inc
ret
xor
jb
mov
out
pop
mov
aaa
mov
push
xchg
fidivl
mov
or
cmp
sub
fcmovne
sbb
add
jno
mov
sub
scas
imul
jb
or
push
in
leave
adc
adc
mov
mov
or
rcrl
xor
and
dec
push
and
xor
inc
pop
aas
push
mov
inc
or
out
sbb
cmp
adc
xchg
aad
push
mov
jg
push
ret
pop
nop
out
pop
flds
insl
jp
repnz
mov
hlt
inc
jecxz
or
pop
iret
add
mov
ret
sbb
mov
jo
or
mov
pop
sarb
loope
cs
dec
out
jbe
or
pop
and
push
repz
lahf
and
or
push
cs
jg
inc
daa
in
ljmp
pop
xchg
jp
xor
inc
cs
inc
adc
ss
cmp
jo
cmc
sbb
cmp
pop
movsb
aad
mov
jmp
mov
dec
mov
jnp
mov
mov
inc
xchg
xchg
je
bound
les
daa
mov
push
adc
test
gs
xor
mov
mov
and
mov
inc
dec
scas
or
xor
or
jge
add
and
lcall
push
push
push
push
fists
std
or
add
jl
cmp
push
mov
outsl
and
inc
xlat
idivl
sbb
pop
xchg
mov
or
pop
mov
cmp
rclb
andb
cmc
aaa
inc
or
add
and
pop
out
aaa
sub
stc
stos
and
push
inc
sbb
outsl
loop
leave
mov
mov
stc
dec
repnz
cltd
aad
xor
lret
jo
nop
lods
lret
fmull
push
mov
push
add
daa
out
mov
sub
cmp
sbb
shlb
loope
adc
or
cmpsl
mov
enter
pop
lahf
mov
fnstsw
and
insb
jne
es
iret
scas
xor
js
jb
xor
or
hlt
sbb
inc
lods
les
lahf
xor
inc
push
sub
mov
and
push
cmpsl
arpl
daa
cmpb
outsl
arpl
sbb
imul
sbb
aam
push
enter
scas
movsl
clc
inc
mov
or
xor
sbb
mov
push
push
es
mov
or
mov
mov
ja
and
ret
aam
push
and
dec
dec
xor
mov
sub
hlt
mov
mov
jge
cltd
jnp
adc
cli
xchg
outsl
jecxz
adc
xor
fninit
in
jae
add
scas
lea
ret
into
or
jns
jg
mov
dec
lret
or
xchg
mov
sbb
ss
push
xchg
xchg
xor
cli
fistl
fbld
xorb
repnz
mov
cmp
push
iret
sub
and
xchg
mov
jp
push
fldcw
lea
jmp
je
hlt
je
lahf
mov
scas
mov
aam
fistps
lods
shlb
sysenter
lea
jne
and
xor
cmp
mov
push
lret
xchg
mov
aas
fcomi
or
and
xchg
pop
les
ret
cmp
push
in
cld
add
or
jno
hlt
push
inc
xor
add
or
dec
mov
push
unpcklps
cmpsl
ret
scas
push
test
inc
xchg
mov
leave
add
pop
fwait
sbb
mul
daa
outsl
test
insl
mov
pop
xchg
or
jmp
mov
jno
jbe
mov
les
pop
mov
mov
jl
hlt
adc
cld
pop
bound
xchg
and
or
jnp
pop
sbb
xchg
xchg
adc
shrl
les
pop
jp
mov
insb
xor
xor
sub
adcl
out
push
pop
pushf
dec
xor
xchg
sub
adc
push
xchg
mov
cmp
cmp
adc
fnstsw
loop
xlat
test
xchg
mov
push
push
xchg
mov
jbe
mov
out
mov
adc
dec
mov
cmp
inc
sub
xchg
aaa
mov
add
movsb
sub
adc
jo
mov
cmp
pop
in
adc
lret
cmp
push
sub
dec
and
mov
cltd
in
cmp
popf
push
push
mov
pop
inc
xchg
cmpsb
aam
cmp
stos
sbb
jmp
movsl
movsl
jmp
xor
mov
jmp
and
mov
stos
jnp
inc
or
movsb
imul
sub
or
jmp
stos
pop
ffreep
push
xor
jae
aam
scas
sbb
mov
psllw
int3
xchg
fistps
popf
dec
imul
jl
cld
in
imul
pop
mov
or
mov
pop
les
mov
xchg
or
sub
mov
test
cmp
mov
mov
repnz
xor
scas
push
js
xor
adc
and
mov
mov
xchg
mov
adc
pop
les
shrl
add
adc
push
fcoms
hlt
in
xchg
daa
or
inc
push
fmull
xchg
lds
js
mov
int3
je
sbb
aas
fmuls
push
push
add
sub
cmpsb
pushf
or
repz
ljmp
xchg
pop
in
sub
loopne
xor
mov
dec
ret
cwtl
mov
push
shll
or
outsb
rcrb
sbb
call
enter
test
push
dec
popa
cmc
fcomps
int3
stos
push
loop
shlb
icebp
movsl
jmp
je
sahf
arpl
test
insb
ror
mov
dec
fs
movsb
xchg
sbb
inc
jnp
mov
gs
mov
add
sub
or
inc
mov
pushf
dec
ss
xchg
leave
js
scas
xchg
mov
test
sub
jmp
push
push
pushf
imul
xchg
sub
mov
arpl
mov
xchg
push
push
scas
dec
lret
push
sti
jp
sub
and
lret
mov
xchg
dec
pslld
jle
mov
adc
or
pop
test
add
mov
femms
inc
test
xchg
xor
lds
pop
enter
lcall
stos
sti
call
or
adc
jge
adc
test
mov
push
mov
jle
iret
mov
dec
push
xor
mov
and
lret
or
mov
adc
addr16
sbb
movsb
lcall
out
ret
jmp
mov
scas
std
or
mov
jmp
push
sbbb
fmuls
or
and
rol
ljmp
sbb
lcall
and
xchg
fdivr
in
pop
mov
call
cmp
adc
popa
add
jb
movsb
addl
xchg
sub
xchg
insb
xlat
nop
shr
push
jl
pop
adc
cmc
jno
stc
js
sub
maskmovq
push
leave
imul
scas
dec
nop
ret
adc
xchg
ljmp
jbe
or
inc
dec
mov
push
fs
fists
cwtl
xchg
icebp
mov
stos
int3
out
inc
insb
lods
dec
inc
fidivs
and
or
sbb
jno
ds
ds
adc
das
lret
mov
jmp
mov
push
sbb
mov
sbb
js
or
inc
xchg
nop
xchg
or
loopne
mov
adcb
lock
mov
jmp
pushf
adcl
call
pop
push
and
popa
inc
xchg
daa
sbb
loop
mov
xchg
imul
rcrl
hlt
inc
pop
leave
fnstsw
icebp
aad
bound
mov
xchg
rclb
xor
sub
xchg
xlat
cmp
push
add
fmull
mov
cmc
das
les
jmp
loope
ja
and
sub
add
out
push
push
andb
std
insl
jecxz
jl
aam
xor
xor
icebp
mov
testb
xor
in
xchg
ret
repnz
mov
dec
pop
mov
xchg
clc
push
sub
xor
sub
push
add
add
into
push
jmp
push
jb
sub
and
scas
dec
and
mov
out
je
mov
pop
das
sbb
scas
adc
jne
push
sub
push
push
add
hlt
mov
mov
insb
dec
jle
xchg
cmp
push
or
in
mov
int
ljmp
sarl
fdiv
mov
jns
pop
jnp
ret
sub
mov
mov
xchg
out
jnp
pop
cmpsb
mov
jg
movsb
inc
pop
adc
test
and
ficoml
insl
sbb
movsb
je
les
sbb
push
daa
xor
inc
stos
mov
test
adc
adc
mov
adc
dec
mov
xor
imul
aaa
stos
sbb
ljmp
xchg
popf
test
xchg
scas
push
sub
roll
xchg
xor
dec
push
fwait
in
aam
cli
adc
cmc
mov
jl
pop
je
ret
and
mov
sbbl
cmpsl
rorb
popa
push
push
xor
ficoml
negb
sub
lcall
aas
push
mov
mov
into
push
push
test
adc
jo
hlt
out
mov
inc
pop
into
cmp
inc
fmuls
and
adc
pop
insl
nop
test
adc
xchg
xchg
adc
movsb
addr16
sbb
mov
or
test
stos
andl
int3
imul
imul
or
scas
mov
push
mov
push
jecxz
cmp
daa
rcrl
mov
dec
sub
test
fldl
mov
popf
sub
sbb
ja
out
test
lods
pop
data16
mov
dec
cs
lret
fnstsw
add
push
ss
sub
testb
shr
dec
sar
push
in
cmp
das
sbb
xchg
xchg
fisubl
mov
sahf
adc
int3
push
mov
cmc
dec
scas
bound
push
or
mov
loope
aam
cmpsb
inc
xchg
add
lahf
inc
xor
pop
push
cmc
out
out
jae
daa
sub
mov
push
mov
mov
dec
mov
scas
xchg
mov
pusha
paddq
xchg
jge
push
pop
and
hlt
sahf
xchg
mov
push
push
adc
leave
mov
in
pop
or
mov
mov
sbb
pop
or
dec
adc
mov
jo
cld
pop
icebp
cmp
mov
and
xchg
es
mov
lea
out
je
stos
sbb
and
shrb
push
mov
ss
push
and
push
das
emms
scas
xchg
mov
je
push
movsl
pop
rolb
daa
mov
push
adc
int3
out
lods
mov
in
aas
push
sub
jecxz
mov
rorl
mov
push
mov
shr
lds
insb
punpckhbw
xor
adc
call
into
sbb
aam
ja
xchg
jns
xchg
jp
add
test
sbb
repnz
out
je
outsl
jle
mov
jno
mov
scas
xor
call
push
fdivp
pushf
and
adc
cs
jns
push
pop
push
test
pop
repnz
sub
mov
sahf
add
push
test
or
in
mov
mov
adc
dec
jg
hlt
lret
dec
xchg
or
mov
or
out
sbb
or
xchg
mov
mov
and
cld
mov
nop
test
mov
dec
out
push
xor
mov
jl
sub
daa
in
test
add
mov
cli
addr16
in
adc
xchg
sbb
daa
out
push
stos
push
add
pusha
pop
mov
xchg
jbe
dec
lock
sub
adc
mov
dec
sub
xchg
adc
cmp
or
jo
int3
daa
xlat
dec
jo
xchg
dec
repz
sub
das
loopne
jmp
push
pop
leave
cmpsl
cwtl
mov
dec
mov
dec
adc
inc
adc
push
dec
out
push
repnz
cltd
and
push
sub
push
fsts
cld
repnz
in
cmp
mov
jmp
outsl
mov
jl
fidivrs
or
lock
addr16
inc
cmp
jns
fiadds
mov
push
test
inc
xor
mov
or
call
xchg
xchg
repnz
adc
jno
add
je
dec
test
ss
xor
mov
daa
xchg
call
xchg
dec
pop
sub
xchg
je
cwtl
mov
movsl
mov
daa
mov
mov
xchg
mov
push
sub
mov
sbb
iret
shrb
push
bound
push
mov
outsl
xor
pop
into
dec
sub
xchg
ss
stc
ret
sti
stos
sub
pop
out
push
pop
add
sub
shrb
data16
sbb
outsb
lahf
pop
xchg
adcb
or
bound
mov
call
sub
sbb
cmp
cmpsb
pop
pop
roll
or
rcrb
add
mov
hlt
mov
mov
push
mov
rorb
jo
outsl
sub
xlat
xchg
int
sbb
sbb
int
ret
jg
xlat
dec
and
pop
lods
or
push
and
xor
icebp
mov
ror
pop
mov
aaa
sarl
dec
jmp
insb
in
add
daa
out
cmp
mov
mov
cld
pop
push
push
xor
sub
sub
mov
int
mov
scas
adc
mov
mov
pop
mov
and
andb
subb
bound
in
outsb
push
or
daa
imul
stos
and
jl
mov
dec
pop
pop
leave
cmpsb
dec
stc
mov
out
mov
pop
cmp
inc
das
pop
imul
aas
xchg
cmpsb
mov
enter
fdivrl
imul
adc
daa
adc
dec
icebp
cmp
sbb
dec
dec
mov
xchg
push
sub
je
inc
in
imul
outsl
or
sub
inc
adc
or
sub
fwait
test
and
or
sbb
mov
mov
sub
adc
jne
jb
invd
xchg
and
inc
xor
mov
ljmp
and
and
int3
push
hlt
xor
repnz
jnp
sbb
sub
dec
lock
xchg
xor
sbb
ss
jo
dec
dec
adc
mov
mov
icebp
lret
sub
insl
lret
dec
in
repnz
add
pop
xchg
in
movsl
lcall
jmp
push
lret
mov
in
scas
xor
cmp
mov
jg
and
and
mov
insb
mov
mov
and
xchg
mov
adc
jecxz
decl
and
shrl
bound
cmp
fcomps
or
jmp
push
inc
push
packssdw
adc
jo
mov
or
xchg
fistps
into
test
jmp
pop
adc
test
mov
ljmp
dec
stos
dec
mov
cmpsl
pop
inc
push
ficoml
sub
fs
int
cmp
scas
or
sub
pop
adc
in
or
rorl
or
loope
repz
inc
mov
mov
jl
xor
and
sbb
mov
in
call
dec
pop
mov
add
dec
jecxz
pushf
and
xacquire
sub
jno
cmp
stc
mov
aam
loop
mov
push
jno
cwtl
jns
push
inc
jmp
push
pop
repz
popa
mov
cli
aad
adc
adc
je
shll
mov
dec
sub
inc
in
mov
and
lret
daa
sub
dec
stos
xchg
fidivrl
or
jmp
pop
mov
push
push
xor
fs
or
add
mov
pop
mov
shl
add
jg
fsubrs
add
mov
sahf
mov
push
sbb
in
cmp
dec
int3
lds
mov
int3
daa
push
mov
sbb
scas
in
scas
imul
sahf
pop
or
mov
mov
or
dec
into
and
je
cmp
fs
enter
orb
dec
scas
lahf
nop
mov
int3
pop
addl
lahf
mov
cmp
mov
leave
push
xchg
stos
jnp
hlt
aam
dec
in
sub
cwtl
dec
dec
mov
jle
xor
out
push
nop
adc
or
gs
push
insb
stos
jo
dec
adc
adc
xchg
inc
cld
fldt
inc
mov
or
sbb
stc
adc
add
cwtl
testl
insb
cltd
cmp
push
mov
and
sbb
jae
jbe
xchg
jbe
mov
push
or
movsl
jl
stos
adc
mov
or
ds
jg
jle
pop
sub
outsb
push
int3
adc
xchg
sbb
fnstenv
insb
dec
jg
push
rcrb
mov
and
xor
sub
je
jmp
data16
xchg
daa
dec
push
scas
sub
mov
pop
in
mov
xor
push
xor
push
push
push
jp
stos
pop
mov
loop
cmp
xchg
mov
sub
mov
jmp
clc
cmp
push
pop
sahf
push
lea
daa
cld
imul
icebp
lahf
stc
cli
push
daa
test
rclb
outsl
mov
mov
outsl
data16
out
and
cld
sbb
lret
lock
and
push
lret
testl
addr16
hlt
movsl
test
fistpl
loopne
gs
jae
and
int3
or
mov
mov
pop
adc
mov
adc
jecxz
add
inc
jno
pop
stos
xchg
push
stc
adcb
sbb
outsl
loop
pusha
fstp
lcall
stc
in
dec
xor
jae
sahf
popa
add
pop
or
loop
stc
mov
sub
jl
or
bswap
insb
lea
js
xor
sub
mov
mov
jmp
cmp
fmul
or
adc
idivl
subl
or
neg
add
repz
inc
pushw
lods
mov
pop
test
xchg
adcb
dec
or
xor
iret
test
mov
leave
ss
test
cwtl
mov
repz
not
dec
sub
sti
sub
mov
out
aad
lea
add
insb
adc
cmp
stos
sub
jo
cmc
cmpsb
lcall
es
mov
scas
sbb
out
and
repz
jl
ds
xor
outsl
add
inc
cmpl
sahf
sbb
popf
xor
divb
sub
fistps
jg
inc
jo
xchg
push
xor
push
int3
daa
and
jecxz
popf
clc
into
mov
mov
ret
insl
inc
ja
push
cmp
subb
out
cld
mov
mov
ffree
test
xorl
push
sahf
xchg
cmpsb
out
push
push
sbb
inc
inc
adc
sbb
pop
movsb
fidivl
std
xchg
std
add
daa
ja
jg
out
std
mov
dec
in
imul
sub
iret
push
in
mov
hlt
cmp
rorl
mov
pop
shrl
xlat
xor
mov
out
xor
insb
adc
inc
orl
std
adc
mov
stos
dec
inc
lahf
dec
int
push
stos
pop
inc
cmpsl
call
int3
jp
mov
pop
inc
repz
add
pushf
jg
mov
mov
cmp
xor
pusha
lret
mov
mov
sti
xchg
nop
or
mov
movsb
daa
aad
dec
and
jo
insl
push
adc
fwait
and
leave
scas
ss
aaa
push
loope
adc
pop
dec
sub
in
cld
mov
lock
mov
push
icebp
dec
out
sbb
loope
nop
bound
mov
jp
push
outsb
sub
mov
and
bound
add
mov
ljmp
push
popf
fbld
out
mov
adc
sahf
in
in
aam
pop
gs
inc
push
scas
sti
hlt
ljmp
insl
mov
jne
adc
cmp
sbb
xor
adc
mov
stc
rcll
jo
jmp
stc
lea
or
cmp
cmpsb
sahf
mov
cmpsl
xlat
pop
hlt
mov
stos
hlt
jmp
fistps
mov
fldenv
jp
dec
jmp
cmp
jno
push
sub
cmpsl
sti
jns
pusha
add
sbb
movsl
push
sbb
jo
insb
shrl
scas
adc
pop
jae
jg
lret
repz
ds
fstps
dec
adc
cmpsl
cld
inc
add
mov
insb
jb
pop
out
xor
push
add
lcall
adc
test
out
out
sub
sub
mov
jno
bound
test
mov
sub
or
daa
gs
mov
sub
cli
mov
xchg
push
cld
leave
test
mov
add
ljmp
scas
repnz
mov
fisttpll
cli
adc
mov
clc
sbb
lret
scas
aam
push
cwtl
ror
add
lret
inc
jns
or
xor
pop
pop
cmc
or
pop
cmp
cmc
sub
test
mov
sbb
pop
mov
fwait
sarb
ja
dec
out
jmp
xor
push
xchg
pop
mov
imul
or
push
repnz
sbb
sar
cwtl
fistpll
xchg
outsl
test
arpl
inc
inc
inc
mov
addb
or
mov
enter
std
ret
mov
mov
loope
mov
bound
stc
or
mov
cld
mov
ja
xchg
and
outsl
and
vmwrite
cmp
mov
mov
ret
adc
mov
test
stos
repnz
xchg
pop
mov
mov
stos
add
das
inc
and
pop
jmp
adc
aam
lea
lret
shr
sbb
mov
addr16
xchg
sbb
aam
or
dec
dec
sbb
or
or
or
adc
xor
in
shlb
mov
mov
arpl
fisttpl
mov
push
sub
adc
aas
xlat
fwait
sub
inc
sbb
jns
pop
sub
lods
sub
cwtl
movsb
repnz
xchg
add
cmp
xor
sbb
arpl
in
add
sbb
or
push
ja
jb
xchg
sbb
adc
cmp
xor
shll
cmp
lods
imul
jecxz
emms
or
aas
aaa
xchg
sbb
call
xchg
dec
and
jne
mov
xchg
iret
fsts
jge
adc
loop
push
leave
xchg
shrl
xor
out
insb
sbb
aaa
dec
mov
sub
adc
call
sub
or
jecxz
js
sti
cld
xor
jmp
arpl
xor
and
push
or
dec
fstps
push
sbb
mov
imul
test
mov
xchg
int3
loopne
push
mov
adc
push
add
cmp
mov
jo
mov
jns
leave
movsl
dec
jno
arpl
lcall
addr16
int3
clc
cltd
pop
mov
mov
ds
daa
add
fbld
cltd
jno
out
or
dec
xor
imul
shrl
inc
cmp
jns
loope
or
mov
mov
dec
inc
add
loop
xchg
movsb
sbb
adc
lea
cmp
cmp
icebp
push
fdivs
jg
pop
cmpb
es
inc
and
or
out
push
pop
sti
jo
xchg
mov
sbb
les
imul
hlt
into
fs
lret
pop
xchg
das
clc
xchg
cmc
sbb
xor
or
and
daa
repz
leave
jo
dec
outsb
iret
xor
inc
or
sbb
jae
in
test
sbb
inc
mov
cmc
inc
ficomps
sahf
mov
pop
in
pop
inc
or
fs
push
mov
mov
loope
lret
stos
jmp
ficompl
nop
push
int3
jl
loop
daa
add
jae
jmp
mov
rcl
jb
dec
mov
in
in
in
icebp
scas
dec
sbb
push
jl
jne
mov
adc
mov
xor
inc
and
jne
loopne,pt
pushf
mov
out
lret
jae
mov
mov
cmpsl
pusha
lret
lea
push
or
push
movlps
nop
xchg
loopne
lahf
adc
xchg
jp
push
rcll
sbb
xchg
push
adc
cmp
and
aam
fs
loope
mov
aaa
inc
adc
mov
bound
mov
add
sbb
sbb
sbbb
mov
clc
add
push
push
xchg
lea
sub
nopl
test
xchg
xchg
das
out
dec
xor
pop
pop
lret
sub
mov
stos
push
loope
jbe
or
jg
jne
dec
out
xor
stos
mov
dec
sbb
cmp
xchg
xor
dec
test
xor
or
ja
aad
jl
and
adc
orl
xor
arpl
and
arpl
push
mov
imul
subw
or
stos
dec
lret
push
cmp
mov
pop
or
enter
ja
stos
sahf
mov
sub
mov
in
movsb
fisubrs
ret
mov
fisubrl
cmp
mov
and
mov
xor
add
mov
out
xor
fldt
xor
mov
insl
popa
out
mov
xchg
and
dec
pop
imul
or
inc
mov
sbb
outsl
and
jg
dec
out
or
push
push
jno
js
mov
cmpsb
inc
or
push
sbb
test
ja
sti
cs
mov
xor
js
xchg
or
lret
mov
cli
mov
jo
or
mov
adc
jmp
cmp
or
cmp
sbb
icebp
pop
ja
mov
and
sub
cmp
xor
insl
jb
xchg
inc
clc
push
xor
in
xchg
pop
pop
pop
or
daa
dec
inc
mov
push
rorl
movsl
cltd
das
ds
mov
cs
dec
push
sbb
jp
jp
xchg
pop
enter
out
mov
test
lock
dec
cli
jb
and
and
mov
out
mov
jmp
push
sysenter
sbb
cmp
gs
or
fcompl
adc
repnz
mov
jno
push
fcoms
jo
bound
inc
sub
xor
js
aad
loop
ss
lods
stc
push
hlt
call
xchg
lods
sbb
xchg
xchg
cs
loopne
mov
leave
imull
inc
sub
or
and
jle
push
xchg
sbbb
xchg
or
jae
adc
adc
xlat
mov
adc
push
lods
lea
es
cmp
xchg
xor
ret
xchg
mov
cmp
sbb
or
adc
add
adc
or
fldenv
push
aas
xchg
adc
mov
lds
inc
lcall
push
push
fstp
lods
or
sbb
jne
ret
xor
push
call
push
xchg
popa
hlt
les
dec
loop
push
or
pop
in
insl
mov
xchg
push
subl
lea
aas
cwtl
icebp
push
push
mov
pushf
hlt
adc
or
mov
std
pop
in
fisttpll
dec
movsl
aaa
jmp
nop
mov
and
dec
outsb
jbe
lea
or
lods
addr16
lret
sub
sarb
xlat
movsb
or
test
scas
adc
or
orb
sub
pop
cli
popa
pop
fcom
in
mov
push
push
add
movsb
add
and
xchg
int3
mov
loopne
repz
lret
push
insl
xor
xchg
insb
push
xchg
push
aad
std
and
mov
cmp
or
cmc
aad
pop
cmpb
and
iret
hlt
pop
fwait
or
fcoml
mov
das
int3
dec
cmpsl
push
mov
lret
mov
sub
cmp
fcmovbe
lods
push
mov
lods
nop
outsl
or
rolb
nop
and
pop
dec
xor
dec
and
mov
fidivrl
popa
cmp
xlat
dec
outsl
xchg
xor
sbb
mov
mov
push
fucomi
mov
call
stos
sbb
cmc
mov
rcll
dec
cld
cwtl
mov
fstpl
sub
xor
sub
std
movsl
xchg
push
xor
push
adc
xor
jo
adc
mov
scas
hlt
xchg
push
rcll
js
popa
mov
inc
call
adc
jno
js
aas
fcoml
arpl
xchg
add
rol
cmp
loope
mov
jl
mov
mov
push
push
push
stos
add
and
shrl
dec
mov
sub
ljmp
clc
push
lahf
pushf
in
repnz
sbb
and
lcall
daa
repz
fwait
cmpsb
jnp
aad
adc
mov
inc
fdivs
pop
mov
xor
mov
jae
dec
or
jmp
pusha
jp
mov
inc
outsl
test
push
fsubrl
sub
pop
sbb
gs
lcall
repnz
pop
inc
mov
sub
repz
dec
shlb
cmp
aam
xchg
pushl
cmp
out
pop
or
hlt
lret
adc
mov
xchg
lret
or
pusha
or
sub
and
shrb
mov
int3
adc
lret
mov
hlt
and
mov
and
sti
adc
adc
out
jbe
insb
shr
rclb
outsb
pop
inc
jno
lahf
sub
sbb
rorl
orl
outsl
add
out
cld
mov
ja
js
cmp
daa
xor
cmc
or
test
mov
xchg
pop
test
xchg
int
cmp
cmp
sub
mov
xlat
rcr
pop
fstl
xchg
subl
pop
push
pusha
or
mov
pusha
repnz
add
sbb
stos
out
mov
mov
xchg
jg
xor
fisttpl
sbb
adc
je
sbb
sti
pop
cwtl
lock
shr
and
xor
ret
les
pop
aam
xchg
lock
lret
dec
mov
filds
pusha
scas
call
dec
adc
push
jbe
adcb
lcall
pop
in
lea
lods
jp
stc
sub
ljmp
or
mov
push
mov
cmp
or
adc
cltd
adc
mov
and
inc
mov
mov
mov
xchg
stos
dec
sbb
jno
or
insl
xor
cmp
jecxz
icebp
add
push
sub
outsl
fstps
push
in
xor
adc
in
rorb
nop
xchg
outsl
loopne
inc
mov
cmc
jae
push
rcll
cwtl
push
cmp
mov
push
pop
subb
jnp
sbb
mov
orb
nop
stos
pop
and
cmp
ss
mov
mov
adc
jb
adc
js
js
stc
mov
ds
push
cli
xor
lret
stos
jb
push
cmc
mov
and
add
push
mov
and
and
xor
sub
jp
mov
jle
ret
push
adc
enter
cwtl
scas
xor
popf
mov
mov
cmpsl
cli
shll
cld
mov
xor
push
pop
sbb
xchg
xor
jmp
xor
cli
insb
inc
out
cmp
dec
movsb
repnz
cmp
bound
ret
outsb
jg
scas
nop
popl
jle
push
xchg
stos
lret
push
pop
cmp
mov
push
add
fisubrl
bound
push
add
pop
mov
rcrb
xor
pop
pop
mov
aam
push
jns
imul
mov
inc
mov
xchg
jl
sbbl
inc
adc
mov
sub
dec
xchg
xchg
pop
xchg
mov
inc
push
ficompl
mov
inc
mov
jmp
jl
push
sub
mov
mov
int
xor
mov
push
sub
es
js
sub
loope
hlt
scas
fidivl
jbe
xor
dec
cs
xchg
dec
and
dec
fmuls
shll
aas
ja
lret
mov
fs
mov
sbb
test
pop
or
aad
dec
dec
mov
adc
sbb
stos
adc
shll
add
inc
xchg
pusha
sub
out
lcall
les
aad
lahf
in
mov
lods
xor
adc
or
cmpsb
jp
cwtl
mov
push
fcoml
push
mov
pop
adcb
fcomps
mov
push
adc
call
push
hlt
daa
push
repz
sub
cmp
popf
shll
pop
imul
insb
and
inc
lret
cmp
bound
pop
xchg
push
fdivrl
pop
jmp
pop
push
jg
and
pop
mov
push
mov
lret
hlt
cmp
push
repz
pushf
push
mov
sti
jmp
in
data16
adc
std
loop
pop
sbb
aaa
cmp
xor
aad
mov
sub
mov
add
xchg
inc
sbb
add
push
and
outsl
jne
mov
adc
mov
dec
xlat
xchg
in
xor
push
adc
fs
or
inc
and
mov
inc
fstps
call
cmp
cmp
dec
mov
adc
sub
adc
cmc
sub
push
je
xchg
push
add
mov
sbb
mov
adc
xchg
rcll
lds
sbb
iret
jecxz
fcompl
push
push
push
or
push
jp
out
mov
in
pop
and
cmp
fcomps
pop
cmp
xchg
cmp
inc
cltd
sbb
lret
and
ret
cmp
mov
aaa
lahf
add
dec
adc
inc
pusha
push
add
xchg
sbb
fistpll
lahf
or
outsb
sbb
roll
adc
mov
adc
lret
jmp
leave
jns
lret
mov
xchg
push
loop
mov
push
sub
xchg
and
inc
xchg
cmp
inc
pop
xor
mov
fwait
or
mov
out
daa
xchg
jae
daa
shr
mov
sub
bound
xor
or
es
inc
inc
cwtl
push
lahf
fstps
out
in
cmp
mov
cmp
stc
inc
imul
data16
std
jb
pop
rorb
mov
nop
or
mov
sbb
adc
jg
test
jmp
ret
jmp
stos
movsl
out
sub
jo
push
jnp
cmp
stos
xor
clc
push
xchg
pop
mov
jns
jnp
cld
enter
or
xchg
lods
jno
mov
out
xor
sbb
or
adc
sar
or
mov
cmp
mov
sbb
les
cld
das
mov
out
xorl
jae
push
repz
dec
jmp
xchg
xchg
xchg
bound
jecxz
mov
fwait
jno
dec
pop
orl
xor
xchg
in
pop
cli
setp
dec
mov
dec
mov
lds
push
xor
je
dec
cmpsl
jno
xchg
out
loop
jp
scas
inc
lods
mov
cmpsb
jmp
cmpsb
jecxz
push
imul
xor
cwtl
lods
aad
jmp
or
sub
out
mov
lahf
scas
or
dec
dec
xchg
mov
pop
addb
jno
add
cwtl
cwtl
mov
push
add
mov
push
or
aaa
or
dec
loop
add
pop
daa
fnstcw
icebp
or
jb
sub
jb
out
insl
pop
ret
push
mov
jns
scas
in
sbb
repz
push
lret
out
bound
mov
inc
mov
test
and
stos
sub
arpl
rorb
leave
pop
mov
xor
ret
lods
jno
arpl
movsl
repz
ret
push
mov
enterw
jnp
mov
cmp
jno
cwtl
mov
mov
adc
aad
mov
push
insl
mov
ficompl
or
aad
je
push
inc
in
mov
adc
add
arpl
push
sub
dec
addr16
iret
xchg
imul
leave
push
xor
dec
stos
pop
iret
push
cmp
cli
mov
div
pushf
aad
sbb
lds
cwtl
sub
mov
lcall
jnp
cltd
aad
fcoml
iret
clc
add
xor
out
or
flds
dec
jno
imul
imul
int3
inc
loop
xchg
fs
inc
stos
cmp
sub
cwtl
push
out
cmp
and
icebp
adc
test
int3
mov
dec
ds
hlt
xchg
insl
scas
aam
pop
inc
scas
sub
or
mov
adc
push
mov
leave
stc
or
push
jno
popa
lret
push
mov
push
aam
pop
cmp
xor
add
add
shlb
push
daa
call
xchg
mov
cmp
leave
dec
repz
in
fdivrs
scas
push
or
cmc
sbb
or
add
test
movsb
lods
ret
sbb
ret
js
and
fwait
pushf
and
nop
insb
pushf
xchg
jecxz
xor
cs
push
gs
push
pushf
and
fisubl
push
addr16
sub
jg
fsubrs
dec
cmp
and
pop
jp
pop
scas
jno
pop
cmc
das
int3
cmp
lods
pop
enter
sarl
out
test
ret
fistpll
shr
or
cmp
fbstp
xor
xor
aaa
xlat
and
mov
loop
adc
inc
bound
mov
xor
or
adc
adc
sbb
cmp
sbb
bound
xchg
pop
rcrl
hlt
pop
adc
or
sbb
sub
dec
or
jo
add
xchg
jp
jb
pop
arpl
stc
mov
push
test
cmpl
sbb
jg
ja
xchg
inc
dec
js
pop
lods
mov
and
scas
add
imul
sbb
lods
push
daa
sbb
sbb
xlat
jle
push
daa
mov
cmp
outsb
cltd
out
lea
or
xchg
push
pop
push
inc
inc
addr16
mov
adc
jge
xchg
cltd
xor
pop
sti
cmc
adc
xchg
cmp
xchg
pop
dec
mov
sbb
lret
push
push
inc
lea
pop
mov
mov
iret
pop
dec
lods
lret
shlb
mov
jno
imul
cwtl
rcrb
movsb
popa
pop
je
cmpl
dec
pop
pop
outsb
loopne
aam
pop
and
xchg
xchg
dec
enter
cwtl
adc
out
ds
pop
fcomip
pop
cmp
sbb
xchg
mov
scas
cmp
jle
dec
lock
push
sub
jecxz
cmp
decb
aad
fnstenv
and
in
sbb
mov
push
pop
mov
jae
pop
mov
pop
push
test
mov
aad
mov
push
out
lahf
or
sub
sbbb
jns
push
jbe
fdivs
sub
or
pop
dec
repnz
mov
imul
repz
daa
imul
fimull
lods
pop
out
jne
and
rcrb
xchg
xchg
scas
in
int3
fnstsw
stc
pop
sbb
je
ret
jmp
filds
and
jle
imul
push
or
faddl
leave
or
mov
sar
push
mov
mov
ror
ss
js
pop
jne
cmp
and
sub
jb
jne
jnp
xchg
pop
pop
sbb
mov
out
fistpl
outsl
inc
sahf
mov
pushf
stos
popa
pusha
shlb
punpckhwd
sbb
mov
gs
dec
fcoml
push
hlt
call
push
ret
imul
push
imul
and
ja
sub
jae
aam
stos
jle
loopne
std
jmp
jns
loopne
scas
pop
call
loop
out
sub
inc
xor
hlt
scas
mov
mov
mov
cmpsl
popl
aaa
shrl
mov
enter
mov
mov
incb
sub
add
xchg
dec
pop
xchg
or
cmp
rcrb
lret
outsl
xchg
aad
adc
pop
in
mov
shrb
ret
cmpsl
pop
mov
je
stos
dec
jae
cmp
mov
mov
lods
mov
call
sahf
dec
clc
mov
insb
gs
push
repnz
rorb
pop
sbb
xor
add
cs
mov
lcall
test
hlt
mov
mov
cwtl
idivb
adc
dec
jmp
and
adc
cmp
sub
add
filds
add
fcoms
rcll
fstps
adc
mov
ss
dec
mov
mov
dec
int3
mov
ja
and
sbb
push
sub
orl
xor
adc
xchg
cmpsl
xchg
in
push
mov
pop
ss
adc
scas
daa
dec
add
repz
das
int3
cwtl
lods
rcrb
sub
push
mov
inc
xchg
xchg
cwtl
int
pushf
repz
and
push
shrl
pop
cltd
mov
aam
leave
inc
insl
adc
daa
in
and
push
mov
in
sub
lea
dec
sub
mov
inc
xchg
mov
mov
shl
adc
push
fisttpl
in
inc
xchg
mov
mov
xchg
popf
insb
xorb
shrl
loope
ret
xchg
dec
lea
push
mov
jno
xor
or
cli
popa
inc
xor
adc
cmp
outsb
cmp
sub
sbb
imul
xor
popa
and
cs
es
hlt
push
mov
lock
movsb
inc
sbb
test
stos
xor
lock
pop
xchg
nop
outsb
mov
adc
loope
jo
inc
out
cmp
aad
fwait
inc
sarl
rcll
and
add
push
stc
daa
jl
jbe
mov
mov
mov
lea
shrb
nop
cmpb
repz
cmp
ds
pop
dec
sbb
sbb
test
in
push
and
xchg
outsl
jmp
add
andps
adc
mov
aad
movsb
dec
je
int
lcall
repz
adc
fsts
cmp
mov
int3
inc
sub
sbb
cs
fwait
adc
dec
and
lcall
jg
rorb
movsb
int3
jmp
sub
mov
mov
inc
dec
test
dec
jp
mov
push
loope
or
push
mov
inc
andb
subb
sub
in
cs
sub
int
xchg
mov
and
push
stos
sti
lcall
push
dec
inc
dec
push
ljmp
lea
pushf
dec
adc
jg
mov
inc
fs
pop
sbb
pushf
mov
mov
test
sub
shl
mov
into
or
cmp
dec
mov
aas
cmp
dec
insb
xchg
mov
cmp
push
mov
std
mov
jns
das
lret
stos
fmul
mov
xchg
jb
dec
push
js
and
or
aad
int3
dec
daa
dec
mov
fiaddl
jae
add
test
test
adc
inc
inc
xchg
jne
nop
mov
mov
mov
inc
xchg
and
lock
out
movsl
push
xchg
inc
stc
in
xor
int
jb
cmpl
aad
cmp
movsb
jg
jl
xchg
push
movsl
inc
js
hlt
inc
pushf
mov
xchg
lahf
add
jnp
je
dec
sub
cpuid
aas
cs
jb
jne
aad
sbb
cwtl
adc
pop
out
inc
outsb
sarb
and
mov
outsl
and
push
sbb
jnp
mov
cmpsl
mov
shrb
pop
or
and
dec
pop
pop
mov
jb
or
xor
mov
and
aad
es
daa
sbb
test
fbstp
push
jecxz
mov
cmp
sbb
cwtl
jae
cmpsl
repnz
cmp
jno
mov
push
jmp
and
mov
mov
mov
enter
das
orb
or
test
sar
hlt
cld
dec
aad
lock
rcr
or
jl
test
push
stos
cmp
popa
adc
in
pushf
sub
xchg
mov
les
mov
loope
hlt
cmc
lahf
xchg
pop
cli
movsl
dec
or
decl
pop
or
or
jmp
xor
incb
popa
sbb
or
push
lds
movsl
daa
push
mov
mov
inc
rorl
test
pop
in
adc
push
shll
mov
mov
test
pop
mov
ret
or
out
inc
ja
xchg
fisttpll
sbb
push
or
lea
or
or
leave
mov
pop
movsb
push
jo
sub
push
and
shr
sbb
fistpl
inc
push
pop
daa
test
xchg
jle
fnstsw
mov
adc
jg
adc
adc
mov
adc
rcl
imul
call
cs
xchg
cli
scas
jle
sub
daa
xchg
mov
push
jmp
scas
shlb
lods
cmp
jns
in
mov
lcall
sahf
loope
push
arpl
sbb
outsb
mov
sbb
sbb
aaa
sti
sbb
push
jp
sub
mov
into
sbb
pop
popf
adc
repz
mov
movsb
mov
jb
mov
pop
dec
jmp
push
rcrb
or
pusha
inc
les
pop
rdtsc
sub
test
pop
xor
or
cmp
nop
sub
fwait
cmp
js
add
or
imul
xchg
sahf
sahf
clc
int3
jle
rcl
ds
xor
orb
lcall
and
mov
leave
rol
insb
mov
add
icebp
inc
movb
or
or
pop
repz
fbstp
sbb
daa
mov
dec
jecxz
mov
test
inc
std
sub
fldcw
sub
fistps
dec
clc
test
pop
int3
scas
jg
xchg
mov
xor
icebp
and
data16
ja
cmpsb
push
repnz
sbb
shl
and
not
xchg
in
jns
fimuls
jb
adc
pop
fs
jmp
insb
or
fsubl
or
sub
jnp
cwtl
mov
mov
sbb
push
jle
pop
add
mov
push
mov
fwait
pop
xor
sti
mov
ja
mov
dec
xor
stc
pop
outsl
popa
lret
xchg
or
or
mov
cld
aam
repz
sahf
les
fsubr
dec
out
mov
stos
icebp
out
fbstp
in
mov
xchg
je
lea
jne
das
fsubrs
xor
push
or
rorb
mov
inc
sub
mov
jmp
fsubl
mov
xchg
sbb
and
mov
jmp
mov
or
sbb
lea
mov
sbb
xchg
mov
adc
mov
mov
out
and
or
movsl
popf
add
sti
pop
mov
dec
cmp
flds
pop
insl
sub
scas
cmpsb
lret
or
les
ds
dec
popf
mov
sbbl
mov
imul
and
aad
jns
push
mov
cmp
or
xor
xchg
or
cmp
cld
inc
xorl
dec
mov
inc
bound
push
dec
sahf
or
and
mov
jecxz
or
daa
and
pop
and
sub
sub
jne
lret
cmp
repz
bnd
cmp
enter
mov
push
movsb
dec
bound
inc
xchg
mov
clc
pop
out
mov
aam
adc
mov
ret
in
inc
fmull
movsl
cld
pop
cmp
push
sbb
gs
mov
lret
mov
std
out
jo
aas
adc
cld
mov
xor
mov
jne
xchg
fnstenv
xchg
or
pop
lods
jne
add
pop
lea
call
lds
push
fmuls
pushf
mov
xchg
into
adc
jecxz
or
lret
push
xor
ljmp
mov
fstpt
xchg
xchg
rclb
adc
cmpsl
nop
lret
stos
xlat
jg
mov
push
imul
daa
xchg
mov
add
push
stos
ljmp
pop
pop
dec
xorl
jg
sub
insl
lcall
jne
adc
daa
adc
mov
in
jnp
les
and
sbb
push
setae
mov
or
lods
daa
cs
sbb
test
sbb
or
daa
xchg
xchg
daa
cld
pslld
f2xm1
ficoml
pop
jmp
outsb
xor
jmp
adc
stos
das
daa
mov
xor
adc
push
mov
cltd
inc
dec
daa
mov
mov
mov
mov
sbb
sbb
jp
bswap
push
testl
mov
daa
jne
and
daa
repnz
ja
or
sub
adc
sub
mov
xchg
mov
inc
mov
lcall
mov
fildll
xor
cltd
pop
aaa
xchg
nop
push
push
or
je
xor
in
pop
adc
sti
popw
out
or
jns
pop
iret
or
andb
scas
or
std
es
or
jnp
pop
outsl
or
push
inc
pop
dec
or
jbe
pop
das
cltd
daa
push
pushw
pop
push
inc
push
out
daa
test
push
into
daa
add
pop
scas
lcall
mov
outsb
insb
daa
sbb
mov
xchg
lcall
cs
adc
mov
daa
repz
push
nop
push
in
daa
jno
inc
push
int
js
add
add
daa
insb
push
add
add
daa
into
add
ficomps
bound
mov
out
dec
mov
lret
aad
fs
adc
scas
jecxz
ret
adc
push
lret
or
adc
cmp
and
out
fimull
lcall
fistl
fimuls
fsts
pop
dec
xor
mov
dec
fdivs
or
pushf
in
pop
xor
adc
or
in
push
sub
or
add
ja
push
mov
stos
aad
adc
xchg
push
mov
fmull
mov
dec
push
mov
cmp
in
rcll
xchg
or
mov
add
dec
xchg
daa
xchg
push
push
mov
dec
scas
adc
adc
repnz
adc
xchg
fildl
or
movsb
fwait
and
sub
das
mov
pop
push
mov
mov
js
xchg
es
sub
pop
cs
and
inc
daa
xor
dec
iret
call
ja
cwtl
dec
mov
js
xchg
dec
pushf
and
insl
adc
mov
rcrl
cltd
daa
jl
out
dec
lods
pushf
push
dec
arpl
test
mov
pop
sbb
stos
sbb
or
and
imul
je
add
push
aas
pop
hlt
sub
loop
jae
jg
inc
pop
pop
sbb
nop
mov
in
dec
out
mov
jbe
lea
mov
stos
dec
les
sub
jb
adc
fstpt
xchg
cmpb
stos
fmull
cld
fsubr
lcall
aad
pop
or
mov
int3
pop
nop
fildl
mov
mov
lret
sbb
or
lods
sub
jns
sbb
clc
mov
mov
mov
jg
cmp
daa
dec
repz
adc
add
push
push
in
test
insb
push
aad
mov
sub
sub
popa
nop
addb
sarb
cwtl
lret
inc
lret
lds
lea
mov
and
clc
loope
cmp
jno
fprem1
into
dec
add
mov
sub
or
imul
jne
pop
pop
imul
clc
dec
adc
adc
cmp
and
xchg
dec
mov
fldcw
negb
push
in
lods
xchg
push
push
mov
adc
xchg
data16
pop
imul
xchg
dec
ss
leave
mov
leave
nop
je
cmc
xor
jnp
sar
mov
pop
int3
sti
mov
add
fs
add
xchg
and
out
push
ss
mov
mov
sub
mov
mov
push
dec
jge
outsl
or
ror
dec
sbb
xchg
fs
or
cmp
mov
shrl
push
je
daa
sbb
inc
dec
sti
cltd
rorl
pcmpeqb
mov
add
inc
aam
push
pop
pop
pop
aaa
and
push
jae
xor
sbb
xchg
push
push
mov
sub
sbb
sbb
aam
or
test
sarl
inc
mov
dec
or
lret
daa
jo
std
call
jb
push
in
mov
loop
pop
clc
and
cwtl
sub
mov
sub
push
xchg
mov
fisttps
and
repnz
xchg
inc
xor
or
mov
ja
cmp
xchg
repnz
mov
mov
or
in
or
dec
and
xor
mov
mov
or
imul
or
loopne
mov
aam
jb
das
adc
or
pop
push
xchg
imul
insl
xor
mov
into
daa
inc
adc
sub
xlat
push
adc
cmpsb
gs
mov
movsb
fisubl
push
xor
add
push
xchg
popa
daa
mov
pop
or
xor
mov
clc
sub
sbb
adc
inc
fsts
xchg
fwait
adc
mov
xor
mov
xor
pop
lods
xchg
in
mov
daa
xor
mov
adc
push
jecxz,pt
add
arpl
sbb
xor
fs
adc
xor
or
dec
stos
rclb
push
pushf
cmp
daa
mov
jo
adc
pop
shr
bnd
stos
cmp
inc
cltd
or
leave
xchg
xchg
mov
xor
mov
push
xchg
mov
shr
adc
inc
fs
je
xchg
shufps
adc
mov
mov
mov
adc
test
add
dec
jo
xor
mov
dec
ljmp
mov
rolb
in
jno
pop
mov
push
xorl
aad
mov
cmp
xchg
dec
pop
aas
xlat
imul
inc
ja
push
mov
pop
ret
cmp
bound
jne
outsl
jbe
mov
mov
bnd
inc
jno
stc
sbb
push
cs
insb
push
mov
and
or
mov
mov
js
scas
pop
aas
lds
stos
adc
fcoml
mov
pop
sbb
sub
mov
push
int3
pop
mov
out
adc
mov
mov
mov
lea
add
cld
cwtl
aad
mov
or
or
push
jmp
nop
xor
cltd
into
add
stos
fsubrl
movsl
xchg
cli
stos
xchg
bound
dec
pop
loopne
aam
push
rolb
add
insb
imul
pop
jg
lods
movsl
fsts
or
leave
mov
jp
adc
dec
xchg
adc
int
int3
stos
xor
dec
loope
sbb
jl
mov
fs
out
mov
xchg
and
or
mov
dec
xchg
and
or
int3
mov
cwtl
mov
add
lret
or
push
es
inc
xor
addr16
testb
cltd
loopne
dec
pop
sbb
lcall
jns
imul
out
lahf
enter
std
pop
cmc
inc
ljmp
xchg
rorl
cmpl
insl
test
add
in
scas
cmp
inc
sarb
sub
mov
fisttpll
sub
push
dec
stc
sub
xor
mov
dec
mov
mov
mov
out
sub
sbb
cs
jae
push
jo
sub
dec
push
aaa
lds
rcrl
orw
lret
je
mov
mov
mov
popf
xchg
lret
in
sbb
popa
shl
push
fucomp
xor
push
jae
cmp
add
loopne
jnp
cmc
repnz
ja
mov
shlb
imul
mov
stos
adc
jae
jecxz
or
cmp
and
aas
outsl
add
add
or
stos
jl
mov
fs
xor
adc
push
setb
test
sub
adc
daa
sub
movsl
sbb
sub
mov
xchg
mov
inc
adc
xchg
xchg
int3
mov
ss
mov
daa
bound
inc
jp
jb
jo
xchg
lret
lret
aad
add
xchg
pop
ljmp
xchg
xchg
ljmp
push
fxch
and
ljmp
movsl
cld
inc
in
shll
iret
mov
mov
ss
mov
lcall
mov
xchg
test
ds
popf
iret
repz
hlt
sub
mov
test
mov
cs
repnz
icebp
xchg
gs
dec
movsb
divb
adc
xor
cmpsb
xchg
adc
mov
or
mov
mov
repnz
cmp
shl
clc
js
sbb
or
push
or
fsubl
xchg
leave
rol
or
add
cmp
and
lea
mov
mov
push
inc
push
xchg
fxch
cmp
and
inc
fsubs
out
out
cld
jbe
arpl
movsb
addr16
or
rorb
pcmpeqd
ret
adc
je
dec
sbb
push
xchg
call
nop
sbb
cwtl
push
jno
rorl
sub
nop
cs
xchg
ret
mov
mov
mov
lcall
subb
or
cmp
jnp
cltd
adc
xchg
sub
aas
out
jge
mov
lahf
gs
cmc
mov
jmp
or
insb
push
repz
jge
dec
jmp
xor
iret
fsubr
vmulps
mov
mov
adc
pop
jns
dec
push
stos
dec
push
pop
xor
adc
adc
ret
shrl
sub
sub
lods
dec
and
push
insb
into
pop
lods
stos
inc
jae
xchg
push
es
lret
mov
mov
test
jmp
pop
mov
adc
fcmovnbe
sbb
mov
jae
fisubrl
dec
lcall
mov
sarl
inc
sbb
pop
and
adc
hlt
daa
je,pt
lea
movsb
les
cmpsl
and
mov
mov
sub
rorb
das
xor
xor
mov
mov
jmp
sbb
mov
xor
ret
cmp
test
sub
cltd
adc
inc
call
lret
mov
dec
daa
in
and
add
cli
mov
sbb
inc
cmp
mov
adc
add
loope
lods
cmp
into
pop
aas
fwait
dec
mov
xor
je
push
pop
data16
test
mov
stos
imul
fimuls
sahf
fs
or
sbbb
and
daa
mov
scas
xor
adc
loop
jae
dec
fistpll
sub
fiadds
aam
push
addl
shll
ret
push
jmp
cs
push
or
sub
push
push
add
sub
ret
hlt
push
inc
jno
cmpsl
xor
ret
jb
jo
xchg
push
hlt
ret
pop
push
pop
push
lds
dec
and
test
mov
push
mov
jp
mov
hlt
mov
enter
aaa
loop
xor
popf
movsb
and
and
jb
dec
sub
pushf
jno
inc
jb
lea
add
or
out
dec
or
xchg
cmp
pop
aaa
aad
scas
cmp
jb
mov
sub
mov
out
imul
adc
add
push
mov
repnz
mov
int
into
cwtl
repz
sub
cmp
test
mov
add
or
das
enter
in
insl
in
lret
gs
xchg
xlat
ljmp
add
xor
iret
xor
sbb
test
addr16
pop
push
jmp
dec
xor
jecxz
outsl
loop
mov
ss
add
sub
icebp
sbb
cltd
cmove
or
loop
mov
dec
or
cmp
jge
dec
or
and
mov
je
daa
insb
aaa
jmp
xchg
xchg
jl
mov
jecxz
scas
dec
cmpb
out
cltd
xchg
dec
imul
lods
dec
mov
or
loop
ret
in
mov
pop
add
cmpsb
loope
shll
xor
dec
cltd
cmp
subb
push
mov
bound
das
jge
xor
push
dec
xchg
push
push
popa
ret
xchg
xor
sub
adc
ds
test
outsb
add
xchg
daa
inc
scas
loope
mov
pop
xor
xchg
inc
out
rep
stos
int
das
mov
lea
fbld
pop
adc
xor
test
insb
repnz
pop
addr16
jno
add
xchg
and
inc
scas
repnz
jmp
or
jecxz
mov
pop
sub
inc
add
push
aad
dec
mov
jno
inc
mov
dec
imul
cltd
xor
std
inc
xchg
hlt
mov
faddp
xchg
xchg
in
push
jne
sub
mov
ljmp
sbb
stc
sbb
pop
xor
out
pop
mov
mov
jle
out
sbbl
stos
aaa
sbb
adc
aaa
lods
sub
dec
jo
jle
out
jmp
add
pop
cli
jmp
dec
aad
jmp
pop
adc
and
mov
adc
cwtl
lea
cmp
or
sbb
xchg
sar
jno
adc
nop
adc
fistps
sub
outsl
nop
xor
int3
push
lock
lods
cld
xchg
movsb
jb
or
jmp
and
jb
sbb
xchg
sbb
cmp
movsl
add
mov
inc
pop
cli
repnz
mov
leave
in
or
fbld
mov
and
xchg
dec
and
and
sbb
pop
scas
adc
rclb
add
and
ds
lahf
int
push
mov
sub
mov
lahf
dec
icebp
test
mov
push
orb
cmpsl
adc
lds
nop
push
shrb
and
faddl
cmpsl
sahf
mov
pop
movl
adc
dec
or
inc
xor
daa
dec
jg
xchg
stc
cmp
or
pop
int3
push
adc
add
inc
push
sub
cmc
cmp
nop
imul
xchg
test
into
dec
sbb
inc
insb
sub
xchg
mov
jns
cmp
outsl
or
fldt
and
mov
dec
push
lcall
inc
cltd
popa
adc
shrl
sbb
stos
lods
mov
and
cltd
jnp
xchg
pop
iret
dec
cltd
xchg
xchg
inc
jb
mov
cwtl
mov
adc
cmp
mov
pop
adc
cltd
cmp
outsl
mov
icebp
xchg
mov
or
shlb
adc
jg
jnp
xchg
rcll
fnstcw
rclb
adc
cmpsb
pusha
iret
cmp
hlt
dec
cmpsl
cwtl
insl
mov
sbb
or
mov
push
jg
mov
cmp
inc
stos
xlat
lcall
fisttpl
mov
dec
sub
push
mov
les
ljmp
xor
xchg
mov
pop
add
mov
cmpsl
sti
add
mov
in
pop
enter
in
dec
dec
cmpsl
rclb
ljmp
shrd
sub
sub
into
adc
mov
and
std
es
cwtl
lret
mov
fld
sbb
sub
sub
lret
cltd
fs
test
enter
movsl
mov
dec
cmpsl
cmp
ficoml
sbb
lods
inc
add
mov
push
inc
cltd
xchg
imul
outsl
in
mov
dec
inc
imul
bound
popf
or
mov
dec
lods
xchg
sarb
dec
outsb
push
test
cmc
shlb
daa
push
dec
aaa
or
aam
shl
notb
out
sub
xor
in
inc
inc
push
lods
or
test
dec
pusha
pop
in
xor
sbb
push
mov
fnstenv
add
cmpsb
add
adc
xchg
int
daa
cmp
or
dec
push
xchg
dec
cmp
dec
aad
subb
lahf
xor
std
pop
xchg
push
dec
and
mov
dec
pop
inc
inc
mov
dec
shr
sbb
push
in
je
xor
fdivs
mov
lret
adc
insb
sub
out
setns
mov
xlat
sub
jne
lock
outsl
repz
mov
inc
mov
rorb
dec
xchg
int3
leave
jnp
push
cltd
ret
and
or
jg
js
xlat
push
add
sbb
and
iret
jmp
in
aam
sub
xchg
and
adc
sub
lods
sub
shufps
jb
in
push
dec
test
pop
inc
sub
and
imul
int3
loopne
scas
outsb
int
push
out
add
inc
xchg
in
cmp
mov
jg
sbb
mov
arpl
jo
adc
add
lahf
fcomps
jle
push
sti
imul
xchg
adc
fildll
mov
jmp
jno
sbb
xor
scas
or
int3
dec
je
jne
dec
jmp
sbb
fnsave
popa
arpl
inc
sti
out
and
out
and
xor
sub
sub
enter
loope
cmp
pushf
dec
mov
jmp
mov
adc
mov
add
insb
push
adc
dec
push
dec
cmpsl
loop
xchg
cmp
scas
fistpll
sbb
xchg
frstor
xchg
sub
fwait
aam
push
and
mov
stos
addl
mov
and
mov
xchg
leave
push
ljmp
mov
lods
nop
or
testl
or
sti
mov
daa
je
dec
jae
sub
xor
mov
fnstsw
fnsave
xor
pop
xor
fwait
or
inc
popl
pop
stos
je
daa
fildl
bound
jmp
add
fs
in
push
sub
mov
into
sub
mov
xchg
push
sbb
ljmp
out
int3
sbb
rorb
jmp
lods
push
in
fstl
push
sbb
cmp
jl
in
aas
and
mov
mov
or
daa
cmpsb
mov
jnp
inc
push
test
adc
or
inc
cmp
jnp
aad
xchg
lea
jne
scas
lds
dec
in
out
aam
bts
cmp
das
sbbl
sbb
icebp
push
stos
adc
jge
or
sbb
xchg
add
xchg
insb
adc
adc
and
mov
dec
xchg
daa
lods
adc
out
fdivrl
and
lret
xor
les
cwtl
xchg
xor
addr16
daa
ds
repnz
cvtps2pi
aaa
adc
or
daa
out
mov
push
adc
or
dec
mov
lock
es
and
dec
cmc
orb
sub
stos
xchg
test
insb
pop
scas
inc
cmc
lods
loope
lods
xchg
into
mov
jge
pop
mov
sahf
mov
lahf
cwtl
pushf
and
sbb
cwtl
lcall
or
xchg
or
clc
jmp
repz
pop
dec
fimuls
sbb
mov
or
cmpb
sub
aam
insl
sbb
lock
insl
mov
loop
lock
mov
and
jmp
daa
inc
in
and
push
ljmp
sbb
mov
sbb
sbb
es
daa
xor
cmc
jecxz
and
lahf
and
es
mov
dec
cld
adc
stos
aam
int
xor
test
jno
mov
fs
xchg
push
aam
push
jne
xor
xorl
adc
pop
xchg
scas
pop
in
adc
xchg
jns
enter
fdivs
sub
scas
fistpll
imul
pushf
xchg
shll
mov
pushf
and
sub
jnp
mov
lods
dec
jmp
add
mov
das
clc
arpl
movsl
adc
jecxz
xor
push
shll
mov
fwait
adc
std
test
repz
or
mov
dec
pop
fwait
cmp
imul
test
jmp
sub
jmp
mov
mov
aaa
add
ljmp
push
pmaddwd
sub
cs
push
icebp
jns
test
in
push
enter
xchg
mov
dec
test
imul
mov
movsl
scas
xchg
jns
imul
mov
xchg
sbb
pop
bound
or
lods
pop
pop
add
movl
cmp
aas
sarl
mov
and
mov
dec
test
aam
xacquire
rclb
cltd
cmp
adc
xlat
or
pusha
les
outsl
dec
push
push
xor
push
pop
mov
je
in
dec
mov
jb
xor
xor
rcll
lock
push
das
es
sbb
pop
call
rorb
adc
pop
sbb
push
bound
ja
and
insb
lcall
add
ja
sbb
xor
jmp
loopne
dec
adc
pop
and
int3
sbb
xor
mov
ret
lahf
iret
insb
xor
aas
add
push
pminsw
lods
xor
jb,pt
mov
pusha
push
or
mov
fistpl
sbb
jae
movsl
cmp
ret
sub
daa
mov
mov
pop
push
test
mov
and
adc
sbb
pop
rcl
pop
scas
daa
call
dec
push
mov
pop
ficomps
xor
mov
punpcklbw
xchg
cs
xchg
cmc
add
adc
pop
xchg
dec
xchg
mov
cmpsb
sbb
mov
push
push
sbb
xchg
out
inc
test
sub
or
out
lahf
add
inc
cli
lock
lock
adc
inc
sti
inc
cwtl
cmp
ret
adc
adc
stos
cmp
adc
jmp
outsl
les
adcl
inc
add
mov
pusha
pushf
push
push
push
xor
xchg
pop
cs
dec
cs
push
mov
mov
add
scas
lret
pushf
or
fisubs
hlt
inc
dec
mov
jbe
imul
sbb
jnp
add
out
mov
out
lahf
test
outsl
xchg
jno
and
js
dec
xlat
aas
aad
lcall
outsl
jae
xchg
lcall
les
mov
mov
les
rorb
adc
sub
out
mov
in
sbb
cmpsb
mov
out
xchg
icebp
dec
out
test
xchg
mov
inc
in
jmp
loop
pop
cwtl
inc
or
sub
or
sbb
jl
cltd
scas
push
in
enter
daa
jle
or
inc
push
inc
out
dec
loope
mov
imul
lret
dec
push
inc
dec
sbb
popf
hlt
lcall
xor
sub
popa
or
cmc
sahf
fdivl
sar
jne
pop
xchg
test
push
mov
nop
adc
push
loop
xchg
mov
rclb
lcall
adc
push
adc
cld
inc
ss
cld
mov
dec
lcall
inc
sbb
lret
dec
mov
jb
dec
adc
je
cwtl
mov
pop
test
pop
pop
and
inc
fdivrl
xor
mov
loope
push
push
out
out
mov
rcr
mov
inc
aad
xchg
popf
push
addr16
insb
iret
adcl
jbe
in
push
push
sbb
inc
pop
stos
inc
mov
push
sub
fxch
sbb
xor
pop
dec
sti
setb
fcoml
ja
fstpl
leave
pusha
nop
sbb
cmp
repz
lret
daa
imul
cmp
pop
outsb
xchg
mov
xchg
add
xchg
mov
lcall
adc
repnz
adc
xchg
movsb
cmc
sbb
inc
jno
cwtl
mov
fdivrl
dec
cli
shlb
adc
mov
or
push
push
cmp
xor
adc
inc
out
dec
out
andb
adc
adc
mov
push
pop
dec
ja
mov
dec
adc
sarb
mov
test
push
push
push
jno
xor
sub
adc
lcall
rol
movsl
mov
inc
xchg
ja
adc
in
adc
dec
fsts
scas
sbb
cmp
lods
cli
cmp
stos
mov
or
adc
cmpsb
subb
fwait
cmpsb
daa
jae
xor
jl
cld
shrl
inc
push
gs
xchg
sub
cmp
insb
pushl
adc
xchg
insl
mov
jns
mov
mov
push
fsubr
adc
inc
stos
nop
mov
mov
or
sbb
outsb
push
hlt
mov
gs
in
test
mov
jne
push
icebp
mov
xor
mov
push
sub
movsl
cmp
imul
mov
clc
pop
daa
pop
in
adc
imul
fwait
repz
mov
dec
xor
sbb
xor
pop
hlt
xor
lahf
fs
xchg
imul
sbb
shrl
pusha
ss
sbb
mov
mov
mov
pushf
in
adc
and
lret
or
lahf
faddl
inc
rcl
and
imul
mov
aam
mov
fisttps
mov
mov
pop
mov
inc
mov
xor
xchg
sub
lcall
imul
les
dec
stos
jb
inc
leave
cmp
jae
push
sbb
arpl
sbb
shll
or
ss
cmp
popa
pop
loop
adc
pop
mov
das
das
pushf
stc
adc
cmp
xchg
dec
mov
mov
mov
and
jmp
les
pop
sbb
xchg
jp
or
xor
ret
das
bound
mov
int
push
push
adc
stos
les
adc
inc
dec
inc
pop
jbe
repz
and
lcall
stos
cld
push
push
jp
je
pop
adc
push
dec
out
dec
push
push
dec
int
into
gs
data16
loope
aam
push
cmp
fwait
push
faddl
push
bound
xchg
xchg
mov
sub
mov
or
xor
push
pop
mov
adc
mov
xchg
shlb
xchg
pop
mov
adc
notb
sti
lcall
xchg
mov
add
movsb
mov
enter
jmp
into
lcall
nop
mov
xchg
xchg
repz
jae
out
lret
sbb
cmpsl
push
xor
and
sub
mov
pop
inc
mov
push
xchg
rclb
mov
dec
outsl
xor
mov
ret
lcall
pushf
sub
xor
and
pop
in
mov
inc
pop
lahf
das
cmp
xor
xchg
sbb
movsb
cmp
and
push
inc
sbb
jmp
fsubr
cmp
jle
mov
lret
sub
xchg
pop
sub
shrb
push
push
add
add
cmp
lcall
insb
daa
jne
sub
in
pop
mov
insl
xchg
nop
negb
sbb
sbb
orl
in
cs
and
pop
add
outsb
daa
jge
xchg
sbb
dec
sub
arpl
xor
dec
daa
ja
xchg
jo
adc
daa
adc
xchg
mov
mov
das
mov
sub
adc
adc
ret
jl
ud1
aad
mov
mov
outsl
mov
cli
push
rcrb
flds
and
scas
hlt
out
mov
daa
in
push
out
add
adc
inc
sbb
mov
sub
mov
aas
into
xchg
and
or
fsubs
icebp
cmc
leave
mov
pop
cmc
je
sub
push
insb
mov
mov
inc
cs
and
adc
add
adc
jnp
mov
leave
aad
jno
cltd
data16
out
sbb
adc
rolb
inc
lods
dec
or
xor
cmp
mov
push
ficoml
pushf
lcall
lds
popa
fwait
aam
cmp
xlat
xchg
xor
dec
adc
adc
arpl
xchg
xchg
add
jle
add
sub
rcl
adc
adc
lds
daa
sbb
push
scas
wbinvd
sub
add
sbb
iret
das
outsl
mov
cld
into
aam
sub
orl
xor
dec
and
inc
lahf
fstl
fldcw
fists
pushf
sub
movsb
pop
repnz
mov
pop
insb
or
jg
dec
xchg
push
xor
jns
mov
dec
daa
sbb
push
aad
xchg
xchg
js
add
out
xor
or
xor
xchg
mov
push
push
xchg
nop
push
outsb
bound
out
sub
add
fimull
lods
pushf
les
push
and
test
push
xor
pushf
xchg
rcll
ret
adc
outsl
push
imul
pop
and
adc
ret
stos
in
jo
dec
pop
lret
ljmp
sbb
pushf
xor
xchg
mov
testb
aaa
mov
dec
xor
pop
out
repz
push
test
jbe
repz
jge
daa
in
sti
push
adc
dec
mov
inc
sbb
adc
sub
hlt
adc
insb
add
sub
cmp
mov
and
sub
out
jno
mov
inc
add
push
push
cli
scas
nop
inc
mov
pusha
es
inc
scas
sub
pop
repz
jbe
sub
mov
sbb
inc
xchg
rcll
mov
mov
jnp
jne
adc
xchg
je
xchg
test
bound
pop
rorl
and
add
addr16
ss
outsb
mov
nop
lea
stc
jge
xchg
xchg
popa
push
adc
rcll
push
out
jne,pn
lret
xchg
je
and
add
inc
add
xchg
jns
jne
sbb
mov
repz
dec
pop
movsl
test
frstor
dec
dec
push
mov
into
dec
jl
pop
shl
cmp
sub
xchg
imul
or
dec
es
mov
nop
or
jo
mov
or
mov
adc
cmp
out
add
add
mov
jmp
cmp
adc
fwait
jg
add
adc
mov
movl
and
bound
cmpsl
data16
loopne
mov
sbb
and
pop
rol
xchg
or
ret
adc
inc
mov
sub
dec
insl
add
dec
mov
push
xchg
push
and
push
inc
aam
sbb
outsl
insb
adcb
inc
add
xchg
adc
cmp
insl
pop
pop
xchg
mov
in
pop
js
push
sub
adc
in
stos
cmp
jae
mov
jne
out
mov
fs
cld
mov
or
outsl
dec
jg
adc
inc
scas
dec
nop
dec
adc
cld
sti
popf
pushf
push
fstl
cmpsb
inc
mov
jno
flds
jne
mov
stc
or
mov
or
push
jne
lcall
adcl
cmp
adc
fs
repnz
jno
lods
inc
aas
scas
enter
jae
add
addl
xchg
xchg
fists
add
lret
xor
adc
sub
imul
push
lahf
stc
dec
sub
cmc
push
pop
fildll
pop
adc
ret
das
xlat
outsb
add
arpl
push
jecxz
adc
pushf
je
lea
aas
imul
outsb
push
das
adc
js
mov
insl
hlt
mov
sbb
xor
imul
mov
sbb
lret
mov
insb
fmuls
sbb
cmp
mov
push
push
mov
mov
push
lea
cld
dec
aam
out
and
dec
xchg
scas
clc
xchg
out
mov
cwtl
xchg
or
or
lods
leave
mov
and
push
lds
xchg
inc
jg
stos
fldl
aaa
ss
xchg
outsl
and
stos
leave
nop
inc
and
inc
jp
lea
mov
push
push
stc
lea
outsb
in
jecxz
xchg
mov
xchg
mov
insb
mov
bound
adc
or
fs
xchg
je
scas
imul
test
inc
adc
push
push
cmp
out
call
hlt
shll
insl
adc
int3
push
mov
xchg
inc
test
rclb
push
push
xor
lods
fdivs
jnp
cmc
orb
inc
adc
push
inc
xor
pop
push
movsl
or
rorb
sahf
lret
out
int
imul
or
sbb
pusha
sub
cmpsb
push
in
mov
pop
sahf
cmp
jle
mov
fistpl
push
or
sbb
dec
aad
imul
negl
or
out
xchg
sbb
dec
push
int
or
movsl
inc
xor
jecxz
sub
cld
mov
sbb
scas
scas
comiss
and
xchg
mov
cld
inc
outsl
scas
hlt
jmp
cmp
das
popa
xchg
mov
cmpsl
sub
or
xor
out
xchg
loop
sub
hlt
cmp
mov
add
dec
jecxz
in
cs
stc
imul
mov
cmp
push
mov
pop
stos
dec
lret
adc
mov
jae
lea
mov
fistps
sbb
mov
les
ss
jmp
add
fs
jbe
outsb
sub
insl
add
add
sub
loopne
lock
mov
mulb
leave
cmp
aad
hlt
xchg
shlb
stc
sub
xchg
jg
daa
push
pop
aad
sub
inc
cmc
cmp
add
sbb
mov
or
jae
popl
adc
and
lahf
loopne
push
notl
cld
fistpll
ret
out
loop
stos
add
or
push
pop
stos
cmp
out
jbe
lcall
lods
cs
popa
or
xchg
push
fs
jmp
inc
xchg
xchg
sbb
negl
xchg
imul
lahf
xchg
cwtl
rcrb
inc
xor
ljmp
push
lcall
push
mov
xchg
stos
sub
pop
pusha
mov
data16
add
dec
stos
test
cmovae
lds
mov
jg
sub
in
xchg
outsb
fs
xchg
xchg
push
add
pop
sub
inc
pushf
inc
xor
adc
movsl
cmp
adc
adc
sub
es
outsl
inc
mov
mov
adc
ds
in
std
add
mov
dec
hlt
in
and
cltd
insb
add
icebp
sub
in
pop
outsl
int
in
test
out
icebp
xor
cld
jl
dec
fidivs
outsl
movsb
rcrl
or
cmc
mov
daa
incl
mov
xor
jae
xchg
int
fdiv
popa
xor
and
cmp
inc
push
enter
xchg
dec
sbb
stos
daa
shrl
or
dec
xchg
pop
or
xchg
pop
jnp
cs
loop
xchg
xchg
dec
sbb
xchg
xchg
adc
sbb
dec
mov
dec
lahf
dec
rcrl
or
outsl
imul
repz
sbb
cmp
movsb
and
int
sub
cwtl
test
xchg
data16
mov
inc
push
mov
gs
inc
or
popf
adc
xchg
and
cmp
cld
sbb
out
cwtl
rcrl
data16
test
push
in
ja
inc
inc
aas
out
imul
mov
push
inc
cmp
rcrb
xchg
push
leave
scas
popf
dec
push
stc
sbb
xor
and
mov
arpl
push
enter
clc
and
dec
repnz
aaa
sarb
push
lds
imul
add
sahf
sbb
shl
and
loope
imul
mov
cltd
xchg
xchg
lcall
test
loop
repnz
inc
adc
pop
inc
pop
lds
arpl
pop
out
stc
cmpsl
mull
inc
ret
ja
jbe
add
and
xor
mov
insl
es
cmc
inc
and
cmp
jmp
adcl
ja
sub
daa
movsb
pusha
stos
xchg
cwtl
add
jno
cli
xchg
sub
dec
mov
adc
addb
addr16
and
lea
mov
adc
lea
cmp
pop
stos
pop
aam
jae
cmc
mov
push
lea
imul
add
scas
mov
inc
mov
mov
mov
dec
aaa
ret
pop
xor
clc
sbb
inc
or
imul
adc
jg
scas
scas
imul
dec
mov
fildll
xlat
testb
stos
mov
sub
mov
xchg
mov
adc
sarb
enter
mov
xchg
scas
adc
daa
mov
mov
arpl
xchg
dec
imul
push
insl
orb
mov
sysenter
push
inc
mov
ja
out
mov
xor
daa
inc
fxch
out
and
rcrb
lret
mov
mov
test
sbb
cmpsl
jae
jnp
mov
rclb
movsb
outsb
cmp
pop
add
sbb
fs
xchg
addr16
dec
loop
iret
out
cmpsl
ljmp
xchg
int3
int
lcall
loope
add
fwait
lret
jo
insl
mov
aas
pop
adc
sub
inc
mov
daa
out
xor
cmp
in
hlt
push
cmc
jmp
inc
fisubrs
mov
sahf
jecxz
mov
bound
mov
mov
push
icebp
mov
std
xor
lahf
push
mov
pop
pop
sub
mov
and
mov
daa
enter
xchg
std
cltd
sbb
adc
mov
mov
lds
mov
pop
sub
pop
imul
push
movb
imul
mov
pop
aam
push
cs
insl
cmp
sub
sbb
adc
xchg
and
std
test
inc
mov
xor
cmpsl
or
daa
fdivr
cmp
mov
xor
pop
jp
movsl
or
push
loop
sbb
push
mov
cmc
inc
lea
out
fucomp
adc
mov
inc
mov
shlb
sbb
repnz
in
lahf
jg
mov
popa
fs
push
adc
mov
sahf
pop
add
mov
lret
bound
cltd
shll
loop
push
outsb
ljmp
jo
xor
or
cmp
bound
pushw
addr16
jmp
add
and
sarl
xor
into
je
aad
bound
sbb
push
and
out
stos
xchg
mov
push
flds
jae
mov
push
les
sbb
out
ds
adc
daa
adc
mov
cmp
xchg
mov
jecxz
mov
dec
lret
aam
push
push
ds
repz
lret
cmp
pop
xchg
xchg
mov
pop
pop
pop
into
stc
jl
add
int3
push
inc
mov
xchg
fsubs
ds
adc
roll
mov
jp
xchg
mov
call
jmp
mov
jae
sub
rorl
aas
cmp
mov
add
add
stc
xchg
int3
rclb
sub
adc
xor
lea
pop
adc
push
dec
cmp
cmp
mov
dec
mov
push
jmp
xchg
mov
dec
cvtps2pi
adc
add
push
dec
mov
data16
fildll
sub
out
jae
call
out
ss
push
cmpsl
mov
outsl
arpl
push
push
or
scas
mov
adc
pusha
adc
push
cmp
aas
ret
mov
jae
icebp
inc
outsb
adc
adc
scas
ret
insb
add
inc
hlt
xor
pop
movsb
inc
pushf
ror
sub
xchg
scas
fistps
mov
scas
out
fidivrs
mov
push
dec
test
adc
les
jo
lcall
pop
jecxz
xchg
inc
push
daa
fs
pop
sbb
enter
inc
gs
sbb
lea
movsl
sbb
jo
stc
xchg
dec
xor
mov
xchg
lret
aas
lret
dec
and
cmp
mov
xchg
in
cmp
lds
mov
mov
inc
push
outsb
fistps
sub
xorl
mov
lret
iret
inc
push
test
ja
xchg
shrl
sub
fcoms
pop
sub
sbb
xchg
scas
sbb
test
shlb
inc
mov
mov
and
popf
xorb
outsl
lds
andl
dec
push
pop
js
and
and
inc
daa
aad
stos
sub
xor
dec
lret
dec
jb
push
mov
push
imul
dec
cwtl
scas
cmp
push
push
cmp
sub
mov
push
add
scas
xchg
enter
negb
sbb
cmp
into
sub
xchg
das
jbe
rorl
fmull
cmp
xor
shll
lds
adc
lds
scas
orb
scas
inc
push
jne
dec
ljmp
cwtl
ja
into
xor
xchg
test
repz
imul
lea
fdivrs
in
out
aad
pop
and
pop
jnp
mov
xchg
lcall
push
or
imul
pop
pop
jp
cwtl
mov
stc
xchg
pop
xchg
cld
pop
cmp
mov
sarl
inc
lahf
int3
rolb
xchg
adcl
loope
add
adc
lock
mov
push
push
pop
jl
sbb
mov
and
stos
pop
sets
or
or
lock
inc
lcall
mov
das
xor
add
psubusw
aad
int
nop
jg
js
adc
in
cmp
xor
dec
jp
sub
fiadds
dec
lods
insb
movl
push
mov
int3
test
iret
jno
or
jae
jge
jle
adc
out
aaa
fwait
xchg
mov
aad
mov
test
add
add
daa
cmc
mov
jne
psllq
and
test
das
add
pusha
and
popa
dec
hlt
xor
xchg
sbb
stos
bound
or
pop
pop
aam
pop
mov
mov
mov
movsb
push
xchg
imul
inc
cmpsl
inc
push
adc
sub
pushw
xchg
sbb
jle
push
repnz
mov
xchg
mov
call
mov
xchg
cwtl
mov
mov
dec
adc
mov
pushf
mov
xchg
and
mov
cltd
mov
pop
insl
sahf
and
dec
bound
push
adc
sbb
daa
aad
rcrb
sub
dec
jge
lret
sub
inc
mov
lock
out
call
mov
push
cmp
sub
xor
scas
jmp
fwait
aam
jle
out
push
sub
lods
adc
adc
sbb
cmc
adc
push
xor
mov
insl
pop
cmc
mov
gs
jae
xchg
mov
sub
fdivs
mov
cmp
jp
xchg
lret
movsb
dec
sub
mov
dec
push
jb
or
sti
and
inc
stos
and
mov
mov
shl
scas
aas
sbb
xchg
sti
fisubrs
cmpsb
pop
add
jno
push
pop
mov
adc
push
adc
jns
mov
cmc
push
jle
push
xor
inc
neg
jge
and
adc
adc
lcall
sbb
outsb
jns
out
jmp
aad
inc
cwtl
xor
dec
scas
imul
push
outsl
hlt
mov
pushf
insb
jne
in
mov
push
test
out
mov
and
in
xor
enter
jnp
add
scas
loop
daa
outsl
shr
xchg
adc
mov
negb
out
sbb
mov
jbe
cmp
jmp
xor
adcl
hlt
insb
cwtl
push
and
or
repz
inc
mov
xor
mov
dec
cmpsb
cmc
mov
insb
cwtl
subps
outsl
ss
lea
sub
mov
adc
and
mov
and
out
and
stos
cmp
jp
insl
les
cmc
sub
test
jo
adc
mov
xor
sbb
popa
repz
and
xor
mov
or
cmp
in
inc
mov
or
mov
int
push
add
cmp
jae
mov
adc
enter
push
fstpt
or
rorl
xchg
push
into
mov
push
xchg
or
test
xor
repnz
daa
out
adc
dec
aaa
and
lods
add
jbe
adc
shll
test
cs
hlt
push
jl
mov
test
movsl
xchg
sub
cmp
pop
push
ljmp
cmc
mov
mov
pop
out
hlt
push
and
cmp
xor
pop
add
jae
push
pop
adc
cmp
or
ret
mov
insl
or
test
stc
cmp
xchg
mov
stos
push
sub
dec
mov
rorb
sbb
add
sbb
mov
dec
adc
dec
out
aam
scas
ret
inc
or
in
cmp
xor
sub
mov
sub
out
outsl
or
mov
insb
lahf
xchg
fidivs
outsb
repz
mov
xor
sti
dec
lcall
sbb
cmpsl
scas
mov
cmp
dec
mov
or
sbb
lea
sbb
fwait
insl
das
stc
repnz
int3
rolb
mov
dec
adc
mov
mov
mov
sbb
cmp
lds
nop
adc
nop
pop
mov
cmc
cwtl
int3
fimull
xchg
xchg
inc
in
cmpsb
adc
push
test
cld
xchg
nop
test
daa
push
mov
nop
xor
sbb
insb
mov
cmc
and
daa
mov
cmp
adc
or
and
loop
xor
inc
jno
cmp
cltd
push
inc
addb
mov
mov
and
pusha
add
shll
lds
mov
pop
sti
mov
fbstp
clc
insl
lret
add
mov
dec
xchg
xchg
xor
scas
inc
leave
cmp
cmp
push
and
daa
mov
mov
loope
cmp
stos
adc
or
xchg
cmp
sbb
jl
cs
pop
push
jmp
pop
and
jge
push
push
jne
lret
cmp
std
xchg
cmpsl
sub
pop
sbb
aaa
push
and
adc
fs
bound
and
out
lahf
mov
into
test
cmp
leave
jae
mov
ljmp
xchg
in
dec
and
stos
jb
lret
sbb
push
addr16
lahf
inc
into
aam
shrb
xor
mov
in
jle
in
rcrb
jns
daa
xor
jae
xor
dec
rcll
cmp
adc
mov
xchg
scas
ficoml
xchg
iret
adc
into
pop
repz
xchg
xchg
daa
push
inc
inc
cmp
pop
xor
js
add
jmp
add
sbb
pop
sbb
mov
add
shll
je
fwait
insl
dec
inc
mov
jmp
dec
test
test
outsl
data16
repnz
int
mov
in
xor
xor
push
inc
pop
jl
pusha
fidivl
aam
sbb
inc
pop
push
and
ljmp
sub
inc
in
and
iret
or
push
sub
xor
jecxz
xchg
pop
jb
mov
xchg
xor
aam
arpl
mov
xchg
and
mov
push
pop
jae
adc
jns
outsb
jno
dec
sub
or
cwtl
adc
lea
xchg
inc
adc
jne
mov
xchg
into
testb
stos
sub
setae
or
lcall
rcr
ljmp
rclb
movb
fcoml
inc
dec
adc
xchg
imul
mov
outsb
subps
jmp
or
sbb
inc
into
inc
cmp
enter
push
outsb
cmp
dec
mov
inc
xchg
loop
or
stos
sub
mov
ljmp
sub
sub
xchg
popf
mov
xor
push
mov
lea
inc
icebp
sub
xor
fdivs
orl
dec
insb
bound
cs
mov
adc
xchg
pop
dec
cmp
push
sbb
mov
nop
aas
mov
pushf
dec
sbb
add
movb
mov
in
and
sub
xchg
or
stos
and
add
icebp
xchg
sub
ret
and
push
push
cwtl
movsl
jns
sub
loop
mov
mov
sub
clc
aaa
dec
popa
aad
idivl
aam
imul
cmc
nop
cmpsb
mov
dec
push
addr16
cmp
pusha
inc
adc
adc
lds
popf
mov
mov
fistpll
outsl
leave
popa
xor
rclb
or
mov
and
fwait
jge
mov
fsubr
push
jge
hlt
xchg
dec
mov
xchg
mov
push
jnp
mov
xchg
adc
cltd
push
aam
movb
or
dec
gs
and
push
adc
or
rclb
enter
into
mov
and
lahf
push
jae
mov
inc
mov
dec
adc
adc
fdiv
shrb
jbe
stc
out
outsl
pop
inc
pop
push
ljmp
inc
xor
outsb
outsl
mov
and
jns
xor
push
sub
fs
call
out
push
hlt
mov
or
xor
ret
and
inc
jbe
sub
movsl
int3
aam
mov
dec
lahf
addr16
xchg
push
adcb
dec
add
ficoml
pusha
out
sub
sub
adc
sub
mov
adcl
test
and
fmull
out
fdiv
adc
dec
stos
or
fmull
adc
mov
sub
sub
pop
loope
pop
mov
pusha
sbb
cs
dec
outsl
and
lahf
fsubs
daa
push
jno
call
or
inc
subb
sbb
les
faddp
sub
pushf
jecxz
xchg
les
mov
or
adc
fsts
aas
pop
in
fdivp
pushf
loopne
mov
je
daa
push
mov
sbb
ret
outsl
adcb
enter
adc
mov
pop
push
lods
dec
push
push
lds
daa
addl
test
and
inc
jno
push
aam
mov
movsb
dec
imul
daa
scas
adc
int
mov
push
rclb
clc
cmpsl
nopl
int3
nop
pusha
sub
sub
daa
inc
das
in
imul
mov
mov
stos
xor
imul
or
outsl
inc
xchg
pop
lock
out
and
pop
mov
bound
jbe
aas
in
mov
adc
or
push
xchg
dec
and
stc
gs
fimuls
or
mov
test
lea
jno
sbb
cmc
mov
jno
dec
cmp
cltd
in
adc
inc
mov
or
test
cmp
sbb
mov
sbb
das
shlb
jno
das
mov
cmc
dec
push
ds
sub
nop
sub
pusha
adc
das
je
mov
inc
sub
iret
inc
mov
adc
lcall
cmc
imul
andb
cltd
push
add
das
cmp
mov
aad
push
int3
ds
dec
out
push
push
cwtl
xor
dec
xor
insb
imul
sub
jge
outsl
xchg
jns
adc
or
sub
fs
jl
scas
cwtl
jo
jb
push
adc
sub
lret
aaa
icebp
testl
ds
sbb
shrl
mov
jb
dec
imul
aam
adc
push
mov
jl
pushf
dec
pop
fildl
mov
sub
xor
mov
adc
lea
add
sub
sbb
in
mov
xchg
ss
cmp
loope
dec
pop
cmc
mov
fsub
inc
arpl
out
pop
dec
jnp
lea
xor
mov
ficompl
aam
add
bound
inc
mov
sbb
or
jl
adc
cmpsb
scas
add
push
hlt
test
cmp
mov
xor
and
sub
enter
lcall
adc
imul
and
or
mov
push
test
mov
inc
call
repz
pop
out
aad
xchg
aam
dec
rclb
aas
popf
xchg
xchg
rcrl
out
sbb
scas
daa
out
push
dec
xchg
or
adcl
push
fldenv
js
push
mov
out
sub
push
adc
test
jle
ret
push
cli
decl
jg
arpl
stc
cmp
mov
js
call
push
inc
lcall
or
fnstcw
xchg
xor
scas
adc
lret
dec
dec
setns
cmp
xchg
test
xchg
mov
sbb
cwtl
fistps
push
adc
pop
jp
adc
mov
outsl
add
push
lea
xchg
addr16
fdivr
pop
add
jns
lock
pop
cmp
xchg
sbb
rcrb
inc
push
inc
int
ficomps
xchg
std
sub
adc
in
jo
fs
pop
push
and
and
sbb
in
xor
lret
and
outsb
inc
jae
icebp
mov
lea
jmp
cld
lret
push
iret
mov
aam
mov
mov
xchg
scas
push
sbbb
xchg
lret
push
inc
mov
clc
sub
cmpsl
push
das
jge
imul
fidivrs
movsl
mov
int3
mov
dec
mov
mov
jns
and
xor
scas
cwtl
xchg
mov
lds
test
or
hlt
cmp
or
ljmp
pop
pop
imul
xchg
les
pop
iret
adc
imul
or
mov
cmc
insl
fwait
and
mov
movsb
xor
or
inc
inc
adc
cld
test
pop
inc
sar
scas
mov
daa
imul
in
xchg
jb
and
mov
les
stc
mov
mov
pushw
pop
add
sub
bound
cmp
push
cmp
dec
fdivrp
or
and
adcb
mov
in
xlat
push
cmp
je
xchg
xor
cmovbe
and
mov
push
scas
das
je
loop
bound
cmc
cmpl
or
inc
sbb
and
push
adc
clc
sbb
sbbl
sbb
mov
adc
daa
imul
sbb
in
inc
aas
sbb
adc
or
dec
into
push
cs
sbb
push
mov
mov
mov
repz
xchg
sub
or
aad
mov
cmp
mov
ljmp
sysexit
repz
jno
lahf
mov
inc
push
jecxz
mov
test
sbb
cmpsb
and
push
dec
lret
and
enter
sbb
jns
cmp
fcom
xchg
sti
dec
pop
push
jmp
push
test
jg
std
sahf
jbe
or
mov
sbb
cwtl
into
lods
lods
fstpt
lods
pusha
dec
inc
mov
cwtl
daa
jge
xchg
mov
shl
sub
cmpsb
pop
inc
dec
cmpsl
or
aam
and
cwtl
jae
lcallw
les
test
daa
or
testl
clc
cmp
fidivrs
mov
outsl
outsl
push
scas
cmp
mov
pop
xchg
gs
jle
jne
sysenter
mov
sub
or
xchg
push
pop
notl
adc
lret
daa
scas
in
das
mov
mov
sbbl
jne
xchg
xchg
mov
pop
inc
outsb
sub
sub
mov
vmwrite
lcall
xchg
pop
je
cmp
bound
cmp
push
mov
cmpsl
inc
int
inc
fidivs
xchg
mov
sbb
jnp
int
xor
pop
insl
inc
fwait
dec
mov
stos
push
jno
cltd
mov
insb
add
mov
icebp
mov
jo
fisubrs
mov
cmp
ja
movsl
popf
adc
mov
rcrb
fisubl
arpl
adc
setp
fs
push
jne
stos
stc
scas
and
or
xchg
mov
sahf
dec
or
pop
xor
and
push
in
lcall
inc
adc
mov
sbbl
andb
xlat
mov
nop
pop
popf
cmc
pop
int
adc
repz
cmpsl
frstor
adc
cmc
shl
sbb
ret
daa
out
stc
push
cwtl
push
clc
jmp
loop
or
dec
ret
sti
cmp
fnstsw
cmp
mov
xlat
loopne
movups
fstpl
pop
adc
and
add
lods
mov
and
imul
or
sub
adc
das
dec
sub
es
push
aaa
int3
xchg
cmc
mov
mov
push
pop
and
aam
mov
insb
dec
jmp
test
call
js
std
pop
inc
stos
and
dec
aad
xchg
adc
prefetch
or
and
iret
cmp
enter
xchg
decl
mov
mov
rclb
out
push
out
push
jne
push
in
xchg
lret
inc
arpl
sarl
icebp
cmp
sub
dec
add
add
xchg
pop
cmpsl
inc
add
and
xchg
xor
push
fimull
or
mov
xor
lret
daa
icebp
addr16
dec
cmc
xchg
lcall
int
mov
pop
mov
and
xor
out
and
aam
orb
push
lcall
rolb
sar
popf
das
xor
sbb
shl
in
pop
mov
jnp
movsb
lds
sbb
xchg
sbb
mov
and
nop
cmp
lcall
shl
mov
sbb
ret
or
jns
jno
lret
dec
xchg
dec
sub
pop
addr16
in
hlt
je
call
fstps
pop
mov
jne
bound
sbb
add
loope
ljmp
or
in
sbb
jmp
jns
call
adc
hlt
push
adcl
iret
lods
stc
testb
sub
mov
imul
add
sbb
in
xchg
aam
test
push
xlat
lea
aam
mov
clc
mov
lahf
mov
daa
pop
push
test
jl
outsb
test
fsubs
out
nop
mov
jbe
mov
mov
mov
andl
pop
popa
stc
iret
pop
addb
repz
cmp
mov
sarl
mov
maskmovq
enter
mov
push
cmp
stc
pop
cli
test
and
jmp
ja
ja
or
dec
ja
fmull
mov
lahf
push
fisttpll
and
sahf
xor
dec
adc
push
rclb
and
pop
jae
dec
xor
cltd
test
xor
sub
int3
fnstenv
xchg
rorb
sub
xchg
sbb
repz
aad
out
mov
data16
cmc
out
add
jg
add
bound
daa
push
inc
stos
or
hlt
scas
ret
sub
pushf
or
clc
pop
rorb
mov
sarb
or
jp
repz
inc
mov
dec
cmc
mov
add
xchg
or
dec
push
fnstsw
sub
gs
cmc
push
cs
repz
scas
push
xchg
mov
mov
dec
inc
inc
xchg
push
lahf
inc
das
sub
jg
xor
push
aas
inc
inc
inc
scas
imul
addr16
inc
xor
hlt
faddl
sbb
fdivs
cmpb
sub
int3
les
scas
pop
push
cmpb
test
out
push
fwait
push
adc
aam
sbb
adc
sbb
inc
adc
fwait
mov
and
xchg
push
mov
in
sbb
repnz
lret
shlb
push
je
lods
pushf
lock
jle
xchg
add
sbb
mov
or
aam
fistl
or
jns
pop
lds
mov
mov
scas
les
shll
dec
add
fstps
sbb
xchg
mov
out
cmp
sub
daa
xchg
negb
sahf
les
dec
dec
cwtl
cmp
addr16
pop
adc
pop
add
adc
addb
lds
sarl
inc
or
shl
and
xchg
pop
ja
inc
lods
jno
pop
in
mov
add
mov
rorb
sbb
xchg
loopne
pop
mov
and
bound
pop
and
add
loop
xchg
mov
dec
repz
or
push
stos
out
adc
loop
xor
mov
lods
adc
xlat
jo
cmp
in
pop
dec
mov
or
repz
jnp
sti
ret
ja
repz
int3
dec
into
iret
out
jae
sti
xor
dec
or
shl
repz
loope
out
jle
cmp
cwtl
adc
mov
push
in
stc
stos
aad
add
jae
stos
xor
and
xor
enter
pop
loop
add
add
sub
or
adc
mov
fnstcw
into
mov
test
stos
lcall
sub
mov
movl
cmp
call
adc
bt
xor
fldenv
fwait
test
dec
mov
movb
cwtl
xchg
pop
or
aas
addr16
mov
xchg
pop
inc
nop
in
shl
push
jge
pushf
add
inc
jno
mov
or
and
call
ss
jno
add
jae
lret
mov
pop
sub
push
adc
mov
mov
call
adc
lock
push
into
cld
mov
jne
dec
in
jne
adc
xchg
push
pop
mov
push
push
in
or
stos
in
jge
lock
in
and
sbb
enter
hlt
push
xor
pop
mov
adc
je
jp
sbb
xchg
outsl
and
fs
push
call
push
mov
adc
sub
adcl
in
xor
imul
cmp
cmpsl
cmpsl
push
xor
loop
bound
arpl
je
daa
mov
outsl
mov
cwtl
popa
mov
and
aas
xchg
pop
mov
mov
or
cld
inc
lea
inc
daa
dec
movsb
std
outsl
rorl
xchg
pop
fstps
je
adcl
push
ret
jb
scas
or
aam
adc
and
aas
xor
pop
aaa
js
sub
mov
lods
mov
mov
or
loop
das
prefetch
or
mov
xchg
cmp
and
out
xchg
aas
push
add
punpckhwd
push
xchg
mov
inc
packssdw
aam
outsl
das
sub
push
add
nop
rcr
or
pop
loopne
lcall
cmpsb
pop
inc
es
fstpl
push
dec
mov
imul
fadds
cmpsl
adc
iret
out
test
cmpsb
xchg
jp
add
pop
cmp
jge
sar
aas
daa
incl
jne
and
repz
sub
into
out
aad
rcrl
testl
arpl
mov
dec
or
sub
les
aad
xchg
sub
sub
pop
dec
mov
xor
outsl
push
jnp
out
inc
add
pop
sbb
adc
lcall
pop
jle
bound
lea
aad
pop
xchg
loop
imul
int3
in
push
enter
pop
or
mov
mov
insl
jnp
sbb
mov
loop
leave
or
pop
or
cld
cmp
inc
sub
jmp
mov
xor
or
push
stos
lcall
jb
stos
faddl
fisubrs
out
out
and
and
jae
lret
mov
jp
or
dec
cltd
mov
adc
lret
subb
mov
out
hlt
outsl
mov
mov
push
insb
mov
lret
enter
mov
push
stos
mov
sbb
popa
loop
or
or
shr
dec
dec
ror
dec
imul
dec
mov
mov
jb
insb
daa
lret
inc
inc
clc
clc
es
sub
xchg
sub
ljmp
cmc
stos
jnp
cmp
out
hlt
push
and
jne
sbb
mov
mov
or
xor
or
cld
add
adcb
sbb
jle
push
xchg
xor
fwait
inc
cmc
rorl
inc
repnz
mov
add
sub
lret
xchg
inc
insb
daa
dec
hlt
lods
subl
cmp
add
or
cld
dec
fidivs
adc
cmpsl
cmp
pop
subl
outsl
ja
int3
clc
stc
inc
jle
or
in
out
or
xchg
cmp
cmp
mov
jnp
lea
mov
sub
mov
and
cmpsb
in
in
add
adc
push
jmp
imul
and
mov
movsl
xor
pop
lea
xor
aad
dec
ja
arpl
jmp
xor
mov
mov
sbb
xor
jo
cltd
mov
mov
inc
sbb
push
pop
sub
fs
imul
icebp
dec
add
loop
mov
cmp
and
jecxz
fldl
addl
adc
out
rcrl
cmp
cmp
jbe
mov
adc
pop
fsubrs
ds
cmp
out
mov
push
and
adc
mov
out
outsl
jmp
or
push
adc
daa
and
push
sbb
mov
and
je
push
or
xchg
mov
shll
mov
push
or
jmp
outsb
dec
daa
pushf
xor
ljmp
xchg
int3
push
xchg
int3
push
iret
ja
or
xchg
xchg
lcall
dec
sub
cmp
jne
scas
mov
dec
push
and
mov
dec
loopne
jecxz
mov
or
push
dec
das
cmp
js
add
jae
mov
sub
mov
sahf
xor
pop
xchg
sets
push
xor
push
sahf
insl
cwtl
adc
lds
sub
dec
mov
shll
test
scas
mov
cwtl
pushl
insb
out
push
dec
mov
loope
ret
movntq
or
les
lea
mov
and
inc
cmpsb
mov
xor
loop
and
scas
test
stc
pop
in
adc
sbb
test
or
aaa
insl
sub
in
stc
jno
adc
xchg
push
adc
mov
arpl
xor
push
push
dec
ja
dec
test
xor
xor
daa
cs
movsl
cwtl
dec
push
cmpsl
push
test
push
mov
sbb
sbb
int3
jnp
mov
ds
int3
sbb
test
adc
dec
or
or
jmp
mov
adc
movsl
xchg
dec
or
and
je
dec
movsl
popl
and
jp
adc
movsl
mov
push
or
jge
jae
pop
pop
lea
aam
push
flds
jae
popa
pop
je
and
enter
push
stos
pop
cmpsl
pop
fdivl
hlt
push
repz
push
jmp
or
cs
or
cmp
push
hlt
mov
dec
xor
cmpsl
int
sub
ror
add
jae
mov
fdivrs
xor
stos
push
cmc
cli
mov
and
std
sbb
ret
cmp
enter
dec
adc
cltd
inc
mov
xchg
dec
adc
imul
jbe
cwtl
dec
jnp
filds
movsb
mov
std
insl
mov
int3
jae
xor
sbbb
mov
push
xor
fisttps
sub
mov
jno
sub
push
xchg
dec
aas
and
stos
mov
cmp
inc
jp
dec
xlat
jno
cmp
jae
ljmp
ljmp
sub
test
std
fucomp
inc
sbb
in
sub
adc
mov
xor
add
push
push
xorb
lods
mov
cmpsl
pop
pop
or
mov
sbb
mov
cwtl
push
lret
fwait
jb
mov
and
rcr
pop
lods
pop
pop
ss
xlat
cmpsl
repnz
insb
cmc
mov
mov
enter
sbb
xchg
xchg
xchg
lret
and
add
push
sbb
insb
rclb
sub
in
jns
pop
dec
mov
mov
push
inc
outsb
lcall
jmp
stos
jb
mov
mov
sub
decb
push
sub
jne
out
pop
jl
mov
shll
sti
adc
xchg
lret
mov
adc
movsb
dec
inc
sub
inc
and
cli
or
loop
cmp
ret
lcall
dec
mov
lea
push
stos
out
lods
pop
adc
jle
jp
cmp
je
xor
mov
inc
out
add
test
roll
xor
aam
cwtl
pop
xchg
mov
aas
mov
int3
xor
sub
mov
stc
call
push
movsb
cmc
cmp
mov
add
xor
fwait
popf
das
pop
mov
xor
mov
jl
imul
popa
sbb
pop
loope
jno
arpl
sbb
sub
mov
into
mov
bound
mov
sbb
or
dec
cmp
lock
mov
push
pop
mov
mov
or
leave
das
mov
mov
mov
imul
mov
ss
push
sub
inc
add
inc
and
push
pop
mov
rcrl
mov
jl
push
fwait
push
sub
stos
jg
sbb
fs
scas
push
sub
lahf
mov
pop
sbb
mov
fdivrl
mov
xor
push
sub
mov
pop
xchg
push
sub
jl
adc
fisttpll
add
and
dec
ficompl
cmp
jno
or
dec
cmp
ljmp
divb
aaa
dec
jb
dec
pusha
jae
setne
nop
cwtl
pop
jg
les
sbb
outsl
stos
imul
xchg
out
call
or
hlt
aad
icebp
adc
lea
jecxz
gs
stos
adc
lock
jg
dec
or
add
or
aas
mov
push
xor
jp
mov
dec
imul
lock
adc
fs
loope
cltd
fcomi
jmp
jne
adc
jb
xchg
decl
ja
sti
and
xchg
test
mov
arpl
sti
or
xchg
dec
cmp
sub
sbb
push
sub
hlt
repnz
jb
jns
out
aad
xchg
push
hlt
jns
dec
imul
and
aam
xchg
and
push
mov
adc
fsubrl
mov
push
imul
mov
leave
xchg
stos
push
mov
push
lods
repnz
mov
jmp
jne
pop
js
je
aad
imul
lock
xlat
aam
mov
adc
pop
and
daa
scas
dec
xchg
pop
adc
ds
jnp
popf
xchg
sbb
dec
aas
xchg
or
negl
call
inc
pop
mov
sub
mov
pop
pop
adc
xor
leave
stos
popa
mov
dec
bound
and
shll
cmpsl
mov
inc
dec
mov
adc
decb
push
and
adc
ficoml
or
ds
daa
inc
gs
or
lret
mov
pop
mov
pop
aas
mov
es
shrb
out
mov
dec
stc
pop
adc
enter
xchg
or
insl
cmp
arpl
mov
fiadds
imul
mov
popf
es
jno
aad
xchg
fcompl
fistpl
jp
dec
dec
add
stos
call
sub
fs
ficoml
mov
scas
test
out
sub
push
push
lret
adc
lods
mov
dec
or
push
jb
lcall
dec
add
lret
movsl
std
test
push
scas
push
or
mov
lret
jns
mov
fs
lahf
pop
testb
pop
mov
adc
push
xchg
dec
fcoml
add
enter
lods
push
jmp
pop
cmc
and
mov
outsl
mov
jmp
push
cmp
test
insb
dec
jp
add
in
popf
push
mov
mov
mov
xsha256
cmpsb
nop
andl
jo
mov
jmp
mov
push
adc
or
ret
mov
movsb
scas
mov
add
scas
subb
cmp
dec
push
mov
mov
shll
shrl
fdivl
push
mov
fwait
adc
sub
mov
push
aam
pushf
cmpsb
daa
dec
cmp
sar
test
addr16
xchg
fiaddl
aad
push
xchg
addr16
aaa
jbe
ret
add
jno
or
cmp
addr16
push
add
push
lds
xchg
pop
fwait
dec
mov
dec
sbb
mov
xor
into
pop
mov
dec
data16
outsl
outsb
sub
or
lret
or
or
pop
daa
insb
push
mov
pushf
cld
out
cmpsl
add
outsl
mov
sbb
cmp
adc
jb
lcall
sahf
pop
adcb
or
push
aas
outsl
mov
sub
inc
movsl
das
adc
dec
cmp
loop
fwait
pop
cmp
push
sahf
pusha
jmp
sbb
dec
stos
lcall
push
adc
in
sbb
bound
mov
pushf
gs
sbb
adc
xor
pop
lods
sub
xchg
daa
push
jno
cmpb
loope
jno
jo
add
dec
cltd
push
mov
rorl
xor
loope
mov
push
fnstsw
sbb
xchg
mov
push
pop
and
add
in
and
test
cmpsb
and
jp
addr16
mov
fildll
xchg
jecxz
hlt
je
repz
inc
sub
jp
aad
adc
lret
test
mov
push
pusha
aad
hlt
dec
in
test
ss
push
push
and
stos
flds
add
pop
mov
cmpsl
adc
xor
adc
xcrypt-ofb
cmpsl
in
mov
jg
dec
inc
bound
add
outsb
mov
insl
push
in
pop
daa
cmp
mov
mov
lds
jl
jmp
jb
xchg
pop
jmp
adc
in
imul
mov
popf
cmp
adc
and
push
outsl
add
mov
mov
mov
push
or
fs
cmpsb
insb
pushf
lock
fdiv
cwtl
imul
hlt
inc
jno
xor
cmpsb
adc
mov
xor
into
fidivl
fcmove
jne
jecxz
jp
mov
xchg
xchg
mov
xchg
jae
je
hlt
or
repz
lcall
test
in
mov
jmp
lret
inc
cmpsl
daa
mov
imul
add
insb
jnp
dec
daa
outsl
or
push
sub
adc
push
inc
outsl
mov
mov
push
sub
scas
gs
out
jae
and
jb
xor
dec
cld
das
mov
jns
inc
adc
sub
pop
add
lock
xchg
scas
orl
test
imul
jecxz
mov
imul
pusha
cli
lcall
arpl
mov
cmpsl
xor
lds
mov
or
xor
inc
arpl
ds
fcomip
xor
addb
popf
or
cs
cmp
or
dec
aad
add
ret
mov
je
rcrb
jae
mov
pop
inc
dec
imul
pop
sub
aas
dec
xchg
repnz
repnz
das
dec
dec
daa
mov
pushf
xor
adcb
mov
sbb
lcall
jle
jmp
inc
jge
fldcw
mov
xlat
jp
jp
lahf
fwait
push
push
mov
mov
pop
lret
cmp
call
test
insb
pop
lcall
mov
sbb
insl
cmpsl
mov
imul
xchg
adc
cld
insl
jae
push
daa
push
rol
cld
xchg
xor
add
movsb
cs
bound
or
movsl
mov
sbb
lcall
dec
push
je
dec
in
das
mov
sub
jg
cmp
clc
cmp
lret
add
and
repz
xchg
push
dec
mov
mov
lret
popf
loop
fmuls
sub
fsubr
mov
mov
cwtl
lea
pop
add
cmp
aad
insb
push
fbstp
adc
xchg
jns
or
aad
push
mov
and
jg
outsl
mov
int
leave
fucom
jnp
pop
xchg
hlt
xchg
je
add
stos
adc
pop
or
into
cmpsb
sub
mov
adc
hlt
fiaddl
cwtl
mov
mov
mov
pusha
jl
cltd
inc
dec
mov
push
roll
push
and
cli
push
icebp
test
ss
pop
ljmp
in
jbe
sti
lret
rolb
jmp
jnp
lret
jno
adc
mov
fwait
js
jp
mov
mov
inc
jo
pop
ljmp
xchg
mov
repnz
inc
iret
in
inc
int
outsb
scas
outsb
cltd
or
scas
fwait
out
adc
push
pop
lods
pushl
sbb
adc
adc
ljmp
das
lcall
test
push
mov
adc
pop
sub
stc
mov
sub
pop
stos
sbb
repnz
dec
jmp
sahf
sub
call
lret
lods
jg
xor
add
das
push
into
or
mov
or
out
dec
pop
adc
xor
cmp
xchg
pop
aam
fldl
jnp
addr16
inc
and
in
push
cltd
jno
scas
xor
scas
mov
xor
ret
pusha
mov
scas
ds
mov
rcll
dec
mov
ret
fstpt
lret
sub
sub
push
insb
mov
or
adc
cmp
test
dec
iret
adc
push
aas
es
or
xchg
xchg
push
hlt
jp
in
mov
mov
cmpl
sbb
mov
cmp
mov
mov
xchg
pop
push
adc
adc
int
mov
imul
cwtl
leave
inc
mov
shll
jmp
pushf
xor
loope
push
scas
sub
or
stos
leave
or
mov
dec
lods
mov
or
subb
push
xchg
dec
inc
fwait
xchg
aas
loope
mov
outsb
popf
sub
jne
adc
insb
cmp
or
fdivrl
hlt
inc
test
mov
lods
sbb
mov
jns
add
rcrb
sbb
ds
adc
lret
les
jno
inc
dec
cwtl
int3
sub
jg
ds
sub
call
xchg
push
lret
xchg
ss
dec
push
pop
clc
lret
rorl
dec
sub
cmp
insb
add
jnp
mov
inc
jnp
cltd
movsl
inc
mov
mov
xchg
shlb
sbb
mov
or
setl
dec
sbb
mov
inc
imul
or
mov
scas
push
lea
lea
sub
sbb
rcrb
push
xchg
imul
cwtl
sub
lods
or
sbb
mov
je
mov
jae
inc
dec
lea
popa
xor
pop
add
lock
repz
jo
popf
sub
pop
or
cmpb
cmp
mov
cmp
push
xor
cmc
and
xchg
push
xor
push
or
lahf
jecxz
mov
lds
loopne
mov
into
rcrb
adc
rclb
mov
cmp
mov
and
idivl
sbb
je
icebp
sbb
loopne
sti
or
sahf
or
mov
leave
push
mov
mov
test
jae
out
xor
fisttpl
jae
and
or
xchg
and
sub
leave
pop
sub
xchg
sbb
xor
pop
pop
dec
adc
adc
repz
test
fsts
es
mov
jl
mov
insb
sub
dec
jp
ja
xchg
or
cmp
bound
in
in
push
pop
xchg
adc
push
jbe
dec
mov
add
jno
adc
mov
dec
cs
enter
xchg
sar
adc
subl
in
ret
lcall
test
cs
nop
aam
cmp
and
call
jne
and
adc
std
out
and
loop
jmp
test
dec
dec
mov
jle
sbb
jl
aam
adc
xchg
sub
jg
imul
leave
pop
into
das
mov
xchg
mov
or
adc
cli
mov
rcll
push
inc
mov
loope
sub
inc
inc
insb
or
jb
inc
iret
or
ret
cmova
mov
mov
or
lcall
ljmp
mov
cmp
push
ds
popf
add
scas
rorb
add
pop
lcall
or
outsl
mov
inc
adc
sbb
dec
cmp
add
hlt
adc
and
adc
sub
cld
mov
or
xor
mov
pop
in
sbb
and
adc
popa
mov
xchg
leave
jg
fisttpll
hlt
cmp
sbb
iret
in
jmp
js
movnti
push
in
xchg
popf
mov
adc
mov
loop
xor
pop
out
and
lods
das
sbb
inc
cmpsl
sub
add
mov
mov
daa
adc
js
lahf
inc
scas
cwtl
out
cmp
sbb
out
mov
insb
mov
aaa
js
adc
je
mov
adc
scas
outsl
push
ds
adc
jecxz
fldenv
adc
lea
mov
jo
xchg
pop
xor
test
test
and
push
hlt
add
push
pop
or
sbb
mov
push
popa
mov
dec
adc
fs
mov
adc
pop
or
rclb
ds
or
repnz
inc
xchg
dec
jmp
outsb
data16
js
adcb
enter
cmp
mov
push
mov
jle
xchg
shr
inc
mov
fadd
mov
push
pop
add
adc
sub
out
ja
jg
jmp
in
cwtl
dec
mov
rorl
dec
dec
pop
out
aas
out
nop
adc
or
stc
cmp
lods
xchg
adc
xchg
jnp
std
cld
xor
xor
in
mov
xor
mov
add
pop
push
mov
scas
outsl
loop
mov
rcrb
xorl
inc
xchg
lgs
je
sub
cmp
xor
scas
sub
mov
mov
lods
scas
shlb
mov
and
sarl
lock
adc
xchg
daa
xor
into
jb
and
adc
outsl
jae
movsb
loop
cli
mov
push
jnp
iret
imul
jns
jle
dec
orl
mov
rcll
pusha
leave
inc
outsl
xor
push
iret
shlb
or
pop
pop
mov
adc
ffree
sub
or
xor
adc
enter
out
cmc
xchg
and
xor
loop
dec
sub
test
cmpsb
or
sub
fcomps
and
rcr
cmc
pop
rclb
aam
jbe
pushf
mov
adc
sbb
lcall
call
add
push
cmpsb
push
jae
rol
adc
fistpl
mov
lahf
rcrl
mov
stos
push
or
add
jmp
xchg
mov
xor
sbb
adc
out
mov
loopne
loope
sbb
ret
repz
inc
outsb
push
mov
popa
leave
sti
andl
cmp
push
movntq
xor
subl
xor
dec
pop
mov
inc
push
adc
add
mov
jne
mov
mov
sbb
mov
or
sbb
add
dec
mov
adc
int3
jne
in
mov
lcall
add
and
rolb
mov
xchg
push
cmp
xchg
xchg
cmp
jmp
inc
or
adc
and
test
in
jns
insl
pop
sub
imul
xor
call
push
lds
sbb
fldcw
cmp
or
push
pop
inc
mov
cld
sti
inc
loop
mov
pop
jg
mov
xor
adc
mov
gs
adcb
in
std
std
aam
or
stc
cld
dec
pop
sub
xor
xchg
ja
pop
push
outsl
cmc
cmc
fidivrl
jo
mov
loope
dec
jne
je
lahf
ficoms
aad
fisttps
stc
rolb
and
lahf
cmp
sarb
shll
in
and
xor
push
mov
out
addr16
or
xchg
in
fucom
pushf
fs
leave
xlat
and
dec
adc
subb
iret
push
push
adc
jp
addr16
mov
nop
std
loope
mov
pop
mov
inc
dec
stc
cmpsl
push
sub
jp
cwtl
notb
dec
xchg
push
or
dec
daa
cwtl
test
je
cmp
ret
jmp
mov
jl
lock
pop
mov
or
add
xor
sub
lret
mov
fstpl
jno
mov
scas
fwait
xor
push
xchg
cmp
or
jo
lea
mov
loop
jo
fwait
sub
dec
daa
sub
push
fsub
jo
jge
push
nop
xor
in
push
sub
mov
or
cmp
jnp
scas
dec
mov
enter
cltd
xchg
ret
xor
enter
dec
lcall
jns
cmp
lahf
sub
mov
and
lret
adc
pusha
xor
dec
jbe
enter
jnp
adc
adc
adc
and
out
xor
rcrb
aam
sarl
repnz
jmp
sub
mov
xchg
xchg
rcl
xor
xor
repnz
imul
dec
in
movsb
jg
ss
ds
xchg
imul
sub
inc
into
push
mov
daa
ljmp
xchg
lds
ret
jns
int3
xchg
test
pop
jl
repz
xchg
hlt
push
je
add
aas
leave
xor
sahf
dec
outsb
stos
sub
mov
cltd
lods
sub
cmp
and
cmp
mov
imul
es
mov
and
loop
stc
fwait
repz
push
mov
adc
mov
fcoml
popf
dec
mov
mov
jae,pn
pop
xchg
adc
imul
iret
mov
mov
daa
aam
add
nop
inc
cwtl
jae
sub
testb
or
push
mov
xchg
popfw
das
push
inc
ds
popf
lcall
daa
popa
sub
sbb
sub
cwtl
adc
sub
push
xor
jmp
fdivs
sahf
cmp
repnz
loop
insl
mov
repnz
add
sub
inc
bts
adcb
jno
jnp
xor
shrb
les
bound
push
and
xchg
repz
mov
xor
cltd
push
sub
push
dec
pop
push
or
leave
add
mov
bound
mov
out
mov
jae
or
out
jae
out
sub
inc
cmp
xchg
rol
loope
mov
repnz
mov
mov
mov
pop
jb
pop
pop
outsl
sbb
out
into
daa
sti
cmc
test
nop
outsl
or
fwait
xchg
repz
sub
cmp
outsl
push
leave
test
scas
sbb
jae
jnp
pop
sbb
arpl
push
hlt
das
adc
shlb
lds
and
push
inc
mov
popa
es
xor
xor
push
jne
shl
ret
outsl
popf
cmpsl
pop
mov
fs
sbb
insl
inc
and
test
push
cli
popa
or
mov
pop
addl
ljmp
leave
cmp
nop
adc
int3
xor
out
jns
jle
divb
loopne
jp
repz
js
cmp
push
fmull
mov
mov
sbb
push
push
adc
add
or
enter
mov
fnstsw
out
movsb
jecxz
and
out
out
adc
push
and
add
xor
mov
inc
out
mov
mov
lods
test
cmpsb
inc
xor
out
sub
roll
push
addr16
aas
enter
mov
out
push
pushf
arpl
jb
jp
adc
out
enter
cs
mov
outsb
xchg
mov
cld
in
cmp
in
cwtl
dec
lret
adcb
or
fistpl
dec
xlat
daa
out
mov
dec
je
adc
xor
sub
jno
sbb
adc
or
in
dec
push
pop
outsl
mov
push
push
aas
int3
repz
inc
lret
xor
ja
pop
enter
fldenv
xor
pminsw
arpl
mov
xchg
lcall
cmp
mov
and
es
push
adc
inc
sbb
dec
cmpsb
cmp
mov
inc
mov
xor
hlt
fsub
out
push
push
cmpsl
and
mov
sbbb
divl
imul
imul
mov
xchg
ret
mov
xchg
dec
sbb
mov
test
xchg
xor
or
xor
xchg
insb
pop
adc
fcoml
movsl
or
mov
dec
jno
adc
int3
jl
iret
fimuls
ss
push
aam
pop
out
xchg
cmp
dec
ret
cmc
xchg
lea
xchg
push
adc
ret
mov
cmp
jp
inc
jp
lahf
inc
ljmp
insl
pop
sbb
popl
or
jae
pop
mov
xchg
cmp
xor
xchg
lds
cmp
jg
pop
cmp
cmp
pop
xchg
popa
mov
push
ljmp
mov
mov
sub
push
mov
ja
jbe
jae
inc
ss
sbb
push
lock
push
dec
adc
gs
mov
sbb
je,pn
xor
mov
sar
mov
and
out
adc
pop
in
in
mov
daa
push
xor
outsl
imul
mov
mov
or
dec
ds
xchg
push
dec
push
mov
pop
cmp
dec
xor
adc
icebp
dec
cmp
cmp
out
decl
mov
lods
adc
and
xor
mov
in
lcall
clc
daa
cmpb
out
mov
sub
jo
or
rcll
xlat
xorl
dec
jg
or
nop
shll
or
bound
xchg
push
scas
add
mov
sahf
xchg
imul
ficoms
adc
inc
inc
or
pop
jbe
adc
aam
gs
aam
mov
scas
jae
lds
dec
mov
jbe
pushf
mov
insb
inc
pop
cmp
fs
movsl
mov
and
insb
adc
std
dec
lret
pop
xchg
je
decl
inc
cltd
or
jl
shll
adc
arpl
adc
adc
repnz
jecxz
shlb
ds
jb
dec
inc
push
shrl
popa
sbb
lret
inc
scas
mov
pop
sbbb
xchg
nop
cmp
sbb
fucomi
push
scas
sbb
xchg
mov
cmp
repz
jo
push
sbb
push
std
push
in
add
and
cmp
shlb
pop
push
test
sti
enter
sbb
adc
sbb
cmc
loope
and
jecxz
jae
aas
es
lds
sub
icebp
mov
insb
inc
adc
jne
pop
mov
cmc
xchg
adc
or
jno
lahf
mov
stos
aad
inc
out
or
or
es
lret
pop
cmpsb
mov
bnd
aaa
cmpsb
out
mov
aad
cmp
aas
sub
fbld
je
mov
stos
adc
dec
inc
adcb
inc
repz
adc
xchg
mov
pushf
mov
inc
push
push
inc
not
xchg
push
jb
xchg
adc
mov
inc
out
mov
and
push
pop
icebp
mov
pop
popa
mov
inc
cmp
jbe
mov
into
iret
jne
or
sub
stos
insb
jecxz
adc
push
push
or
lcall
xor
mov
xchg
dec
mov
xor
ljmp
cmpsb
sub
test
sub
in
lret
out
cmp
jae
push
jae
scas
dec
data16
adc
ja
sub
shll
sbb
adc
add
scas
aad
dec
and
push
inc
jo
ja
pop
aad
aam
xchg
pushf
repnz
insb
fidivrs
cs
es
emms
sub
dec
pop
jnp
adc
lds
and
pop
out
inc
imul
and
add
jno
cmp
xchg
cwtl
mov
jmp
mov
jne
push
sbb
add
dec
dec
imul
inc
cmpsl
lahf
pop
aaa
pop
xor
pop
xchg
rcll
push
adc
jbe
rcr
xor
call
inc
mov
mov
inc
pop
test
mov
dec
int3
push
xchg
aad
sbb
dec
mov
test
cmp
jno
data16
daa
stc
mov
icebp
jecxz
test
into
fdivl
and
lret
inc
xchg
in
dec
jns
mov
inc
das
or
mov
fsubs
lock
sub
inc
test
mov
inc
xchg
mov
inc
mov
and
daa
aas
hlt
mov
ret
mov
and
sub
stos
jb
repnz
ret
insb
xchg
xchg
pop
fs
bound
cmp
test
push
sub
call
mov
jle
push
daa
out
adc
enter
mov
and
sbb
adc
data16
jnp
xor
mov
daa
loop
sub
xchg
push
cmp
bound
add
imul
pop
push
xor
iret
push
cmc
or
cmpsb
cmpl
jno
cwtl
into
mov
imul
lret
mov
pop
dec
dec
cmc
mov
cmp
add
xchg
mov
sub
cwtl
sub
sti
das
pop
push
aaa
cmc
sub
hlt
jae
xchg
sub
pusha
cltd
push
sbb
and
sbb
dec
sub
adc
gs
fchs
sub
adc
fucomp
sub
inc
pop
adc
outsl
dec
push
sub
xchg
hlt
fcomps
push
jae
pop
outsb
mov
xlat
mov
sub
leave
les
arpl
mov
dec
outsb
bound
pcmpeqd
sbb
dec
jnp
out
jae
popa
movsl
xor
push
adc
push
push
jecxz
je
xor
rclb
int3
fs
outsb
ss
jae
cmpsl
addr16
leave
sbb
push
or
dec
inc
sbbl
cmpsl
je
mov
mov
out
mov
repz
mov
push
jmp
cmp
xlat
xor
cmc
jmp
dec
stc
jmp
pop
loope
stos
sbb
jl
pop
cmp
push
fsubr
mov
sub
mov
mov
or
dec
sahf
and
and
dec
popf
das
sub
mov
add
or
std
ljmp
insl
pop
pop
mov
add
mov
xchg
leave
outsb
lods
xchg
out
dec
xchg
inc
jecxz
sbb
push
add
insb
add
mov
stos
hlt
cmp
insl
lret
rorb
lret
xchg
icebp
adc
addl
dec
and
xor
xchg
cwtl
in
cmp
dec
popa
scas
out
icebp
pop
adc
cmpsb
mov
pop
sbb
lods
call
or
lahf
sub
sub
in
push
mov
fsts
add
xchg
cmp
dec
jnp
insb
xchg
xlat
xlat
mov
daa
in
sub
dec
push
jmp
mov
push
dec
push
pop
ss
mov
mov
mov
pop
sbb
aad
adc
arpl
lea
sbb
aaa
lds
push
adc
aad
stc
sbb
or
mov
sbb
jbe
mov
sbb
cld
mov
ror
daa
cmp
jnp
dec
cltd
mov
dec
push
xchg
inc
pop
iret
dec
push
pop
daa
sbb
pop
sbb
aas
add
push
xchg
sub
and
cmp
push
cmpsb
mov
or
in
and
push
push
or
test
fwait
sbb
inc
push
jg
out
lea
aaa
stos
out
mov
push
les
mov
mov
sub
pop
shlb
jp
add
les
das
sbb
cld
jno
and
and
mov
rolb
push
add
cli
xchg
rol
cs
push
mov
cmp
mov
or
push
push
rcrb
out
xchg
push
mov
aad
mov
int3
pop
jecxz
sbb
cmpsb
out
loopne
mov
cltd
outsl
push
sbb
cmpl
repz
inc
mov
xor
sub
add
neg
sarl
jo
adc
pop
aam
jns
fcomip
fdiv
xchg
sbb
pushf
stos
or
sbb
mov
daa
repz
aad
push
mov
leave
sub
aas
add
jl
pusha
adc
fwait
xchg
push
pop
cmpl
jnp
jecxz
push
push
add
sbb
pusha
gs
call
cmp
pop
cmp
dec
cld
repnz
and
adc
xchg
ror
or
sub
mov
jmp
daa
push
sbb
ljmp
iret
addr16
pop
hlt
imul
lock
loop
rcrb
mov
dec
lea
out
aam
fs
inc
inc
fwait
in
fwait
mov
push
sbb
push
int
xor
rcll
mov
xor
test
pop
cmp
adc
aam
sub
adc
mov
sarl
sar
loop
mov
inc
es
js
or
mov
xchg
fistps
sub
push
push
aas
mov
insl
mov
enter
sub
ficomps
xchg
dec
hlt
jno
daa
dec
sbb
xor
jle
lcall
ja
sbb
sub
push
mov
rclb
fadd
fisttpl
test
mov
lods
xor
jae
js
push
jle
push
dec
inc
test
ja
es
ljmp
jl
cmp
adc
pop
fistpll
mov
mov
test
mov
mov
stc
xchg
push
pop
ror
xor
xchg
fcmovu
mov
push
add
inc
cmp
cmp
jb
sub
adc
cmpsb
inc
aaa
mov
repz
into
mov
mov
into
lock
aaa
enter
movsb
mov
jns
mov
pop
movsb
ds
mov
scas
imul
faddl
xchg
inc
fdivl
hlt
repz
xchg
adc
test
icebp
das
scas
mov
push
aam
adc
cmp
add
addr16
cwtl
int
repz
stos
sbb
push
xchg
mov
roll
cmp
push
pop
push
imulb
mov
clc
add
fstpl
add
push
imul
push
in
push
pop
loopne
pop
pushf
cmc
push
sbb
jp
xchg
mov
cltd
arpl
xchg
or
stos
sbbl
dec
push
jle
mov
cmp
call
insb
sbb
pop
stos
sub
xor
inc
push
sbb
push
mov
adc
in
stc
fiaddl
mov
adc
or
stos
dec
out
dec
sbb
jns
gs
int3
mov
cwtl
aad
sbb
mov
mov
or
and
int3
stc
mov
movsl
test
or
adc
cltd
int
pop
push
add
mov
repnz
std
out
nop
and
mov
push
lcall
fucom
addb
mov
sbb
dec
daa
or
or
cmpsl
jne
mov
and
sub
lret
sub
jnp,pn
jle
dec
cs
adc
inc
push
mov
and
in
addb
or
mov
cwtl
sub
in
outsb
add
pop
and
add
sub
adc
jg
pop
cmpl
or
fwait
inc
in
in
pop
mov
cmp
jne
xchg
jne
or
mov
cltd
cld
movsb
sti
in
out
push
fimuls
cmp
clc
or
jmp
pop
xor
cmp
jno
out
cmp
loop
pop
scas
aaa
or
ljmp
jg
adcl
jecxz
mov
stos
into
push
pop
lcall
mov
and
mov
push
cld
fdivs
jl
pop
mov
push
mov
int3
and
call
popl
add
cltd
add
popa
imul
mov
out
out
add
jl
adc
or
jge
div
aad
aaa
lahf
dec
push
mov
sbb
jmp
cmp
hlt
daa
mov
jge
dec
dec
and
rcr
xchg
aas
push
jae
cmpsl
inc
rcrl
in
lcall
inc
and
dec
test
lods
or
xchg
sbb
adc
mov
mov
ret
jae
lods
mov
cwtl
push
ja
jae
and
sbb
daa
jle
mov
sbbb
add
andb
sbb
mov
and
hlt
jns
push
arpl
je
shrb
push
int3
fsubl
popf
adc
inc
loope
outsl
inc
lock
lcall
sarl
lcall
cmp
and
and
das
mov
js
xchg
pop
sub
pushf
dec
je
sub
sbb
inc
push
add
adc
pusha
scas
dec
incl
in
repnz
pop
adc
sbb
inc
pop
mov
xchg
push
mov
das
lds
and
fisubl
inc
icebp
cmp
daa
xchg
mov
sub
dec
mov
lahf
or
out
sub
loope
outsb
or
push
push
jle
sti
adc
fcmove
or
xchg
ficompl
adc
add
shlb
insb
pop
push
dec
bnd
fists
aas
ret
and
xor
fcmovnbe
jmp
sbb
and
mov
dec
sbb
addr16
pop
jno
xor
ljmp
mov
movsb
fidivl
and
aas
jmp
push
lods
sbb
insl
mov
push
mov
mov
push
andb
push
mov
cmovne
ret
es
push
push
cmpsb
mov
xor
mov
out
les
dec
icebp
push
addr16
jg
roll
lret
out
mov
cli
into
xchg
aaa
stos
je
fs
add
sahf
pop
jbe
mov
jp
mov
or
out
mov
shlb
cmp
dec
iret
ss
fistl
sub
outsb
outsl
out
adc
loope
pusha
jnp
and
or
pop
repnz
cs
jno
inc
push
ja
ss
stc
or
movb
dec
subb
lds
mov
adc
pusha
loope
xchg
iret
jnp
ficoml
nop
cmp
xor
xchg
sbb
bound
call
je
out
pop
popl
adc
xor
sbb
add
arpl
aad
sub
sbb
jl
dec
push
int3
test
mov
sbb
fsubl
jo
cmpsb
ds
sub
pop
inc
nop
jae
xor
aam
lds
lock
mov
xchg
out
jb
mov
push
pop
adc
cld
add
mov
and
add
and
xor
jnp
loope
xchg
mov
std
cmp
lea
sar
cld
adc
or
inc
and
je
ret
shr
xlat
inc
fwait
stos
adc
lock
fs
xor
adc
sbb
or
push
mov
movsb
adc
loope
in
xchg
xchg
cltd
sbb
jmp
lcall
pop
mov
dec
dec
dec
mov
fwait
xchg
xchg
cmp
pop
mov
push
mov
jno
outsb
movsl
dec
dec
js
shr
inc
pop
aas
mov
xchg
cmpsl
faddl
sub
mov
mov
aas
sub
icebp
pop
dec
stc
push
int3
cmp
jmp
sbb
push
sub
out
out
pop
out
or
fisubl
or
adc
sbb
inc
and
out
push
fisttps
subb
xchg
fcoms
nop
pop
cmp
dec
jg
decl
mov
pop
add
sub
shlb
fadd
mov
leave
inc
mov
es
inc
cmp
aam
inc
push
cmp
mov
mov
popa
stos
push
cmp
imul
cwtl
dec
mov
mov
mov
cmp
sbb
pop
fsubrs
mov
call
adc
cmpsl
int3
or
dec
xor
and
outsb
add
xchg
in
and
jb
mov
outsb
dec
xcrypt-cfb
cmpsl
in
jmp
cmp
xor
sbb
jp
xchg
lds
leave
sbb
add
adc
hlt
bsf
jl
sub
mov
nop
out
xor
cmpl
push
mov
and
jp
xchg
lods
fisubrs
jl
fistpll
ret
cmp
popa
sub
jnp
cmp
cmp
outsl
arpl
movsb
fsts
test
scas
shll
jecxz
shl
cmp
cmpsl
fs
add
xor
mov
loope
add
xchg
add
fs
sub
mov
gs
lods
xchg
lret
dec
out
xchg
lcall
dec
ss
push
push
movsl
ss
fistl
pusha
pop
mov
mov
push
mov
lcall
cmp
je
ret
ret
sbb
aas
adc
mov
push
or
daa
jne
lret
jp
jbe,pn
shlb
jmp
scas
std
jns
out
lcall
mov
add
dec
dec
jno
cmp
mov
xchg
in
sbb
in
xchg
fwait
push
mov
cmp
push
adc
pushf
mov
test
sbb
cmp
sbb
dec
lcall
dec
jp
sahf
shll
pop
lea
or
xchg
xchg
jp
nop
shll
push
nop
xchg
fwait
or
ja
xchg
add
jae
addr16
jae
dec
push
or
push
subl
fmull
loop
mov
jne
sbb
dec
cltd
in
scas
mov
frstor
dec
mov
int3
sarb
pop
pop
sbb
aam
rcrb
fwait
je
xor
dec
cmc
cmp
fiaddl
mov
mov
cmp
xchg
cmpsb
xor
mov
mov
cmp
mov
test
in
mov
sub
scas
les
sbbb
scas
xor
push
push
call
and
out
mov
ficoms
dec
gs
lds
fcmovu
fcmovu
mov
jg
mov
jne
dec
idiv
mov
inc
call
cmpsb
nop
je
inc
imul
cmpsl
dec
jge
scas
les
adc
lret
cmpxchg
inc
pop
nop
out
mov
cmp
or
cli
xchg
sbb
push
dec
imul
mov
fistpl
popf
cwtl
dec
adc
sahf
mov
and
lods
push
dec
cmp
movsb
call
and
int3
mov
scas
pop
cmp
or
insb
fucomip
push
shll
shl
or
aad
push
pushf
add
pop
cs
aas
insb
pop
into
inc
add
pop
dec
mov
out
adc
call
filds
and
scas
mov
cmpb
jns
imulb
cmpl
mov
fmull
in
push
cmp
cmc
pop
iret
sub
pop
int3
mov
sbb
jns
jmp
mov
adc
mov
std
lods
mov
adc
mov
jb
or
adc
push
mov
xchg
lock
mov
xor
ss
sbb
add
enter
dec
cmp
mov
cwtl
adc
outsl
mov
imul
stc
or
inc
sbb
or
es
sbb
sbb
lahf
fsts
xchg
shrb
pop
loopne
xor
stos
jno
stc
int
shl
pop
sub
mov
rolb
xchg
lcall
jle
or
xor
ret
std
orb
adc
cmp
daa
mov
clc
jae
cmpsb
jae
mov
jns
inc
xor
daa
mov
subb
sbb
xchg
push
daa
or
push
xchg
sbbl
xchg
jns
mov
movsb
push
and
adc
nop
mov
add
nop
sbb
sbb
jmp
in
jb
mov
popa
cmpsb
loop
int3
add
dec
into
inc
adc
jl
loope
pushf
push
sti
push
sbb
repz
inc
stos
pop
popf
inc
xor
cs
je
test
jno
hlt
cmc
movsl
pop
pop
out
or
sti
ljmp
xor
adc
lea
or
jnp
xchg
xchg
jp
cmp
cli
test
sub
cmp
xchg
mov
sbb
scas
or
mov
mov
sbb
dec
xchg
xchg
jp
lea
iret
dec
sbb
cmp
dec
sbb
push
rclb
mov
push
fwait
es
fiaddl
ret
sbb
push
sbbb
ljmp
mov
pop
outsb
fwait
scas
or
mov
push
js
sub
sub
sub
adc
insl
push
jb
push
or
sbb
pop
lock
in
aaa
pop
mov
inc
dec
sub
ljmp
push
stc
aad
xor
adc
or
out
or
jb
sub
cmp
cmp
rorl
mov
sbb
jg
mov
jnp
lds
cmp
dec
stc
sbb
in
cmp
sbb
push
mov
dec
dec
loopne
and
xchg
push
sub
sub
lods
insb
or
sbb
iret
testl
push
mov
shrl
pop
sbb
cmp
rcll
lahf
fidivl
in
add
xchg
sub
and
out
push
sar
xchg
das
arpl
adc
mov
xor
xchg
adc
cmp
adc
jl
ret
jmp
inc
mov
bsr
xor
aam
or
daa
mov
pushf
push
out
mov
sub
movb
mov
int
imul
arpl
pop
pushl
and
or
repz
pop
xor
dec
lret
mov
in
xor
or
sbb
int3
or
movsb
call
add
add
fwait
int
or
mov
or
push
lret
shll
dec
mov
nop
add
xor
fwait
or
xor
sbb
fwait
cmp
mov
sub
scas
pop
xor
scas
mov
stc
push
adc
fistpl
sahf
mov
jno
cmp
mov
in
sub
sbb
jmp
pop
xchg
sub
pop
sub
adc
arpl
imul
pop
ljmp
sbb
mov
dec
or
loop
sub
mov
adc
fcoms
loope
xor
fldt
xchg
fwait
push
cmp
mov
push
fmull
outsb
mov
flds
dec
xchg
cmp
adc
insb
repnz
dec
movsl
sub
push
and
lcall
add
dec
rorl
lods
dec
lcall
aad
push
loop
das
std
lret
adc
aam
mov
sbb
jae
or
add
adc
decl
jno
pop
xor
mov
lcall
addl
mov
adc
jae
xchg
cmp
outsl
inc
sbb
inc
xchg
sub
xchg
xor
jno
loope
cmp
mov
adc
mov
jae
cmp
fs
hlt
mov
pop
ss
push
pushw
outsb
jnp
jno
or
xor
arpl
or
xor
imul
push
push
xor
push
lret
lcall
pop
pop
jle
jge
and
and
xchg
rolb
jmp
push
addl
scas
ror
inc
jmp
and
push
test
mov
bound
adc
inc
fs
scas
je
jno
push
mov
push
cmpsl
das
pop
aad
outsb
dec
out
sub
cmp
xchg
loope
aaa
sbb
call
outsl
scas
arpl
pop
aam
or
jo
ljmp
mov
push
ds
sub
rorl
jmp
or
arpl
jg
push
mov
or
fdivl
or
cmp
sub
dec
call
insb
repz
dec
into
sub
xchg
mov
sbb
cvtps2pi
imul
xlat
inc
add
inc
adc
mov
xchg
and
sbb
jno
test
leave
loope
bound
pop
inc
cmpsl
mov
sbb
push
inc
sbb
sbb
jecxz
shr
cmp
shrb
test
mov
pop
mov
push
into
jo
pop
enter
and
jp
sbb
or
pusha
outsb
data16
add
xchg
inc
aad
sub
mov
lea
sub
xchg
dec
adc
adc
out
or
inc
add
sub
adc
adc
xchg
fisttpl
scas
push
xchg
inc
test
push
inc
sbb
adc
add
stos
fistpll
push
cltd
stos
mov
mov
hlt
or
outsb
ficoml
les
call
xchg
push
sbb
pushf
mov
sub
in
mov
movsl
push
mov
dec
dec
xor
stos
call
push
call
xchg
or
lods
sub
inc
dec
imul
ss
inc
push
push
adc
bound
lea
sub
sbb
and
outsb
cltd
sahf
stos
ror
lods
and
push
sub
push
add
mov
pop
roll
pushf
insb
shrb
jno
test
dec
sub
push
lds
push
sahf
andl
popf
xchg
mov
out
lea
jno
jmp
mov
into
mov
dec
push
jnp,pn
sti
inc
mov
push
dec
fnsave
repz
sbb
sbb
cltd
lret
xor
or
pop
sub
mov
cmp
aam
mov
movsb
mov
sahf
xor
leave
fnstcw
inc
pop
push
xor
mov
sub
cmp
iret
adc
and
sub
cltd
or
rcl
push
xor
mov
dec
adc
sub
in
pop
pop
fistps
xor
mov
movsb
fwait
mov
mov
popf
adc
aaa
mov
push
mov
rorl
negl
into
push
adc
inc
mov
add
mov
adc
xchg
pop
in
push
inc
cmp
lds
pop
mov
cltd
movsl
jl
cmp
xchg
mov
stos
mull
cmp
inc
mov
dec
jmp
movsb
xchg
fmuls
or
sbb
fsts
leave
repnz
adc
and
xchg
in
pushf
pop
xor
jae
push
scas
dec
push
xchg
jae
mov
add
inc
mov
cmp
outsb
xchg
dec
mov
stc
push
mov
push
dec
jo
ret
std
or
push
cmc
dec
mov
lea
push
mov
push
lds
mov
xchg
cwtl
xchg
sbb
cmp
push
lods
mov
int
jl
aam
cwtl
testl
mov
ret
mov
insb
in
xlat
dec
jle
sbb
cmc
in
push
xchg
or
inc
mov
loopew
aad
cs
jnp
sbb
negl
cli
jnp
inc
fmull
mov
add
jb
je
outsb
inc
mov
push
jge
dec
pop
lcall
push
stc
je
sub
daa
xchg
mov
mov
or
bound
cmc
cwtl
fmuls
pop
sbb
xchg
push
nop
mov
fisubl
loopne
out
add
or
ljmp
or
sbb
shr
inc
mov
dec
mov
jns
sub
popa
lods
out
jecxz
jns
mov
ror
pop
imul
cmp
xor
and
stos
cwtl
int
in
pop
cmp
mov
test
mov
push
sahf
pop
cwtl
bound
cmp
out
mov
add
fwait
outsl
mov
lret
je
in
or
adcb
mov
add
popf
pop
daa
out
mov
mov
cmpsl
je
or
xchg
nop
push
outsl
and
xor
outsb
dec
inc
adc
lds
mov
add
test
mov
pop
xchg
inc
pop
movsb
push
out
inc
shl
cld
fcmovu
cmp
mov
inc
add
pop
push
movsb
test
cmp
fldcw
xchg
mov
adcb
dec
shll
push
mov
sti
movsb
dec
and
idivb
insb
adc
leave
mov
dec
lret
add
fists
into
int3
repz
fwait
push
sub
sub
jns
adc
and
aad
rorl
xor
dec
scas
jmp
lret
test
shlb
test
inc
adc
daa
cmpsb
sub
cld
push
inc
daa
scas
cmc
adc
shll
dec
sbb
or
pushf
jecxz
xor
inc
stos
pop
sahf
inc
adc
jmp
insb
cmp
jmp
sub
loop
sub
repz
sub
js
push
pop
mov
cltd
push
cmp
cmpsl
push
mov
sarl
scas
xchg
sti
test
jae
xor
push
or
shrb
xor
insb
daa
mov
push
xchg
inc
push
stc
std
or
adc
loopne
inc
or
shrb
in
sub
and
xlat
pop
aam
inc
mov
cwtl
das
jnp
dec
push
hlt
fsubr
push
dec
js
mov
lds
jp
push
loope
jp
jmp
daa
push
cmpsl
jmp
jecxz
test
lds
inc
push
inc
repz
test
ljmp
cmpsl
pop
cmp
repnz
mov
daa
jecxz
je
out
lea
cs
and
mov
push
mov
adc
lods
movsl
lock
push
or
inc
enter
lret
sbb
jmp
ss
add
vpunpckhbw
jae
fs
enter
pop
mov
imul
add
jo
xor
xor
test
sbb
decw
pop
mov
mov
jnp
popa
xor
sbb
daa
dec
aaa
adc
sub
call
sub
sbb
daa
hlt
and
cli
mov
loope
pop
ret
call
ljmp
jno
and
adc
sub
fdiv
push
xchg
pop
repz
push
int
pop
jl
ret
mov
mov
pusha
mov
xchg
lret
push
adc
mov
test
inc
ret
push
jl
inc
int3
sbbb
cmc
out
cld
loope
ret
sarl
push
jg
mov
adc
fimuls
call
add
dec
cmp
shrb
fcmovnu
stos
insl
or
xchg
jge
mov
jl
mov
push
sbb
adc
sub
stos
dec
adc
fidivs
jge
push
imul
test
mov
jl
cmpsb
pop
orb
cld
mov
shll
xor
adc
das
jnp
pop
dec
int
and
sub
dec
jp
sub
inc
sbb
outsl
add
je
mov
mov
lea
imul
mov
jno
jmp
loope
addl
mov
cmp
jle
xor
sub
aad
push
fwait
loop,pn
or
mov
pop
xor
dec
rcll
dec
mov
pop
xchg
inc
push
push
cmp
mov
mov
dec
adc
mov
jecxz
out
dec
sarl
inc
in
aam
fdivr
cmp
adc
xor
mov
daa
shll
pop
loop
pop
cwtl
adc
sti
cmp
test
xchg
outsl
pusha
xchg
jbe
xchg
xchg
outsl
jno
sub
add
and
xor
insb
outsb
or
pop
into
sub
jns
std
loop
js
pushf
dec
sub
sbb
pop
std
lret
movsl
and
insb
stos
mov
outsl
mov
shlb
dec
pop
jecxz
paddw
aas
dec
daa
into
pop
push
aad
jbe
jmp
test
scas
mov
cmp
push
xchg
mov
xor
cld
sub
push
rcr
or
mov
ljmp
jb
or
bound
je
inc
mov
sti
mov
int3
outsl
loop
push
das
fldl2e
and
ljmp
jnp
pop
ficoms
test
test
pop
jb
loop
sub
and
jl
adc
mov
mov
cld
jb
pop
inc
and
mov
mov
adcb
xchg
repz
adc
push
push
ror
mov
inc
push
adc
inc
or
or
add
icebp
push
aad
mov
test
xchg
lds
aam
dec
addr16
sbb
pop
xchg
push
test
scas
mov
push
mov
mov
pushf
pop
sub
mov
jns
push
inc
dec
dec
mov
adc
and
jle
fdivrl
jmp
inc
xchg
outsb
push
mov
call
mov
cs
cmp
add
sub
pop
inc
into
mov
push
stos
test
inc
mov
insb
adc
bound
xor
cmp
fldenv
xor
jl
mov
adc
adc
nop
dec
and
xor
test
jo
jl
pop
lidtl
lods
sub
and
iret
sar
pop
fwait
mov
shl
push
dec
mov
adc
in
dec
pop
jmp
push
or
bound
stos
out
adc
in
stos
daa
shll
mov
fcoml
mov
or
or
xchg
mov
mov
fcomi
add
and
adc
stc
imul
and
mov
mov
insb
or
jne
aaa
in
mov
or
mov
std
mov
cmp
cltd
sbb
cmp
enter
mov
insl
test
aam
leave
dec
aad
cmp
jnp
mov
out
mov
jmp
or
rcr
dec
and
out
mov
inc
aad
mov
adc
mov
or
add
and
mov
adc
cmpsl
lahf
sub
fistps
dec
mov
jmp
insb
mov
ds
call
sahf
xor
insl
sahf
sub
cmp
ret
scas
push
addr16
jl
dec
loopne
gs
add
mov
mov
sub
cmp
xchg
dec
or
outsl
leave
xchg
inc
push
mov
mov
sbb
dec
daa
pop
xchg
sub
repnz
xchg
psubb
je
adc
cmp
shlb
das
adc
dec
repnz
iret
mov
cltd
push
test
push
dec
cmpsb
sbb
inc
lods
or
sbb
shrl
stc
xor
rcr
cmp
dec
ja
out
jmp
in
out
aas
push
xchg
aam
push
jecxz
fcomi
mov
std
sbb
and
jg
imul
mov
out
mov
inc
loopne
push
lods
inc
push
sbb
scas
sahf
xchg
bound
nop
push
shld
lods
lods
and
add
nop
xchg
cmpsl
mov
pop
add
daa
sbbb
xchg
lret
cs
mov
mov
cmpsl
jle
inc
xchg
xchg
das
sahf
pushf
test
jecxz
mov
pop
cltd
xchg
inc
inc
addr16
gs
and
adc
orb
unpcklps
and
bswap
cmp
arpl
icebp
push
pop
push
out
loop
push
xor
cmp
and
fildll
xchg
outsb
jnp
push
and
out
aaa
sbb
pop
fwait
push
dec
insb
fsubrs
out
shlb
mov
and
out
add
mov
sahf
ret
data16
cmp
xor
mov
rcr
hlt
push
push
nop
dec
add
jmp
push
mov
dec
mov
push
pop
mov
sub
pop
int
cmp
es
aaa
inc
gs
xor
jnp
sbb
loope,pn
int3
and
xchg
jmp
subb
xor
mov
bnd
hlt
into
sub
mov
pop
jp
mov
ret
sbb
imul
and
ljmp
int
imul
jb
mov
mov
jp
xchg
cmp
lahf
aad
dec
ss
cmp
out
inc
push
mov
mov
sbb
dec
push
shlb
pushl
jge
mov
and
inc
jnp
sbb
mov
mov
out
fsubs
cltd
cmp
repnz
adc
push
fcompl
mov
mov
into
inc
rorl
iret
mov
cmp
ss
xchg
mov
pop
sbb
sbb
nop
sbb
mov
or
sub
imul
xchg
xchg
cmpsl
loope
jno
cmp
jb
mov
xchg
inc
outsb
test
int3
sub
mov
adc
pushf
mov
daa
push
sbb
dec
loope
testb
pop
dec
adc
cmp
jle
cmpsl
xor
adc
daa
mov
sbb
xchg
mov
int3
and
std
add
adc
push
push
dec
ljmp
xor
shrl
jg
and
xchg
insb
jp
xchg
fildll
dec
das
sbb
in
xchg
adc
fistpll
xchg
out
mov
push
test
repnz
les
fdivl
inc
test
lahf
adc
pushf
jbe
pushl
cli
out
mov
xor
mov
xor
sub
jmp
out
outsl
dec
cmpsb
sub
pop
sub
adc
xor
mov
scas
loope
aas
loop
stos
cmp
test
ret
cmc
pop
push
sysexit
pop
jp
adc
sub
call
xchg
sbb
mov
out
adc
xchg
push
or
daa
sbb
imul
xchg
or
cmpsb
lea
lret
inc
mov
push
mov
sahf
push
add
stc
sub
jnp
push
ljmp
andl
and
dec
aam
add
arpl
out
mov
mov
pop
inc
sbb
or
add
mov
push
inc
mov
sbb
icebp
filds
sub
fisubrl
shll
xchg
or
fsubrs
shr
out
rcrl
addb
cmp
or
popf
dec
adc
adc
xor
or
adc
jmp
cltd
enter
pop
fisttpll
sbb
push
inc
cltd
outsb
pop
sub
fwait
ret
fsubrs
inc
dec
loop
cli
repnz
outsb
mov
jb
push
adcb
insb
rclb
pop
lcall
jb
push
xchg
sbb
mov
data16
test
pop
sbbb
push
mov
xchg
adc
push
in
and
add
push
mov
imul
setb
lcall
cmp
mov
adc
push
ret
jne
bound
jmp
sub
push
popf
and
add
adc
mov
int
and
fstl
fst
adc
aam
adc
adc
dec
sub
push
ja
sub
inc
dec
and
test
xchg
fists
sbb
mov
outsb
movlps
jb
cs
fisubrs
dec
sub
xor
addr16
push
xchg
sbb
cmpsb
inc
fiadds
xchg
add
ucomiss
mov
adc
iret
add
ret
outsb
stos
cmp
out
push
dec
scas
int
or
and
insl
xor
pop
cmp
push
repnz
mov
dec
in
mov
int
and
subl
pop
cwtl
xchg
or
pop
xor
aad
sub
dec
lret
or
inc
aas
orl
pop
push
cmp
loopne
scas
push
or
daa
xchg
pop
mov
cmpl
or
in
subb
and
cmp
rclb
or
insb
push
add
xchg
lock
je
xchg
dec
lcall
push
sbb
imul
mov
out
in
sahf
ret
adc
cltd
jl
push
xchg
int3
mov
test
addr16
push
pop
pop
cmpb
sub
pop
mov
ret
inc
cs
icebp
pop
mov
fmull
nop
xor
arpl
imul
orb
xor
lret
cmp
setp
rcr
adc
stos
les
dec
insb
lret
pop
lcall
pushf
ljmp
add
or
sbb
adc
inc
or
or
inc
xchg
pop
or
dec
and
and
cmovg
inc
mov
or
inc
sub
test
mov
pushf
xchg
add
repnz
inc
inc
dec
dec
div
or
test
dec
insb
lret
ss
outsb
ret
dec
and
pop
xchg
dec
pop
ret
mov
loope
fmuls
add
cmpsb
and
imul
or
inc
lea
mov
add
sbb
fnsave
call
push
lods
sbb
xor
adc
test
repz
dec
outsb
rclb
mov
lcall
and
xchg
add
xchg
fisubrs
adc
or
adc
loopne
and
movsb
push
daa
add
adc
sbb
push
xlat
xchg
loopew
cmp
or
into
mov
bound
xchg
std
mov
xchg
jae
xchg
jno
sub
or
inc
ret
push
in
adcl
jmp
jae
xchg
or
xchg
sub
int
pusha
lods
leave
jo
das
test
sub
mov
sbb
in
dec
sub
jo
push
imul
jge
rcll
jp
aad
daa
mov
sbb
dec
imul
les
jmp
nop
int
push
add
in
les
pop
movsb
cmp
adc
add
sbb
pusha
pusha
and
mov
mov
int
or
sbb
and
movsb
inc
xchg
sub
adc
js
xchg
dec
shr
cmp
adc
rcrb
sbb
xchg
rdpmc
daa
add
xor
jl
ret
lods
xor
aam
mov
inc
ret
out
and
clc
jo
in
in
push
add
dec
das
test
inc
dec
add
push
test
inc
pop
adc
daa
dec
fs
sti
cld
or
dec
jb
int3
dec
dec
ds
push
mov
lods
cmp
decb
sub
jmp
sub
xorb
insb
pmuludq
das
int3
hlt
sub
pop
and
scas
mov
lds
push
adc
iret
cld
push
or
pop
mov
mov
popl
iret
pushf
aas
push
add
and
ret
sbb
mov
push
jmp
dec
out
mov
sub
enter
sub
mov
and
xor
outsl
imul
nop
popf
cmp
je
xchg
cmp
mov
adc
mov
dec
mov
push
popf
cmpsl
jb
sub
xchg
sub
rep
sahf
mov
leave
sub
stos
loope
int3
adc
xchg
repnz
in
mov
push
popf
or
je
push
mov
sbb
fimull
jno
cmc
sbb
mov
push
rcrl
mov
sbb
sub
sbb
andl
or
xchg
cmpsl
cmp
popf
cmp
push
fiaddl
cvtps2pi
pop
rcl
xchg
jbe
adc
jbe
push
push
pushf
in
lock
mov
jb
rclb
cmc
addb
dec
or
jge
imul
xchg
les
gs
and
loop
cmp
pop
imull
pop
mov
dec
inc
xchg
sbb
lret
push
push
cmc
lahf
es
cmp
aad
dec
jne
sub
bound
hlt
cmc
movsb
xchg
and
add
pushf
cmp
std
lret
push
sub
not
lret
adc
jg
pop
sub
adc
mov
pop
pop
or
fcom
scas
inc
or
push
cld
test
dec
outsl
push
jmp
adc
jnp
test
or
or
or
lret
sub
pop
movsb
aad
push
cwtl
lret
adc
aam
sbb
mov
or
cmp
ljmp
jp
icebp
out
sub
stos
inc
sbb
outsl
and
pop
out
call
popf
ret
xchg
adc
jle
mov
or
mov
jae
popa
int3
mov
arpl
xchg
loop
cmp
in
push
push
ljmp
xchg
jmp
clc
stos
dec
loop
adc
cmpsl
dec
sub
stos
xchg
daa
aam
and
cmp
subb
mov
in
push
arpl
fnstcw
mov
jle
mov
cmp
push
popa
sbb
xchg
push
push
ret
aam
adc
arpl
daa
jno
jo
cmp
dec
or
sarl
inc
rcll
int
lods
outsl
jp
imul
push
out
aas
popa
pop
sub
scas
mov
test
jae
icebp
push
bound
dec
xchg
adc
xor
jge
fstl
dec
inc
enter
xchg
mov
hlt
xchg
pop
mov
scas
cmp
push
ljmp
cmp
fucomip
sahf
mov
mov
push
hlt
mov
negl
cmp
inc
sub
icebp
xor
push
jmp
xchg
sbb
pop
scas
lret
xor
mov
insb
or
cmc
movsb
pop
and
jl
or
fcoms
push
adc
inc
int
push
fnstcw
xlat
call
xchg
movsb
push
cmp
mov
jno
inc
mov
or
aam
pop
mov
jle
inc
mov
adc
cmp
imul
or
cmp
nop
das
adc
lock
std
jnp
dec
push
mov
scas
adc
dec
jno
js
shrb
aam
or
aad
pop
lea
mov
int3
pop
repz
insb
sub
or
push
cmp
dec
xchg
insl
dec
pusha
xchg
mov
push
ds
enter
pop
outsl
sub
xchg
out
scas
testl
dec
cmp
jp,pt
push
ja
sub
shll
cmp
mov
mov
scas
fsts
ss
or
jns
sub
pop
or
add
jl
jmp
repz
divb
dec
push
sarl
adcb
fs
push
mov
imul
push
push
sbb
fildl
mov
insb
cltd
jg
xor
or
pcmpgtw
mov
sar
iret
mov
mov
ljmp
sub
addb
push
shr
lds
loop
outsl
test
cmpsl
in
stos
and
and
pop
or
xchg
add
mov
inc
aad
dec
push
cs
xor
into
fwait
or
mov
dec
mov
fs
mov
ret
push
rcrb
out
adc
daa
mov
jge
add
jmp
xchg
sub
sub
mov
shll
clc
cmp
jo
adc
mov
negb
js
fcoms
pop
jo
jp
cmpsb
outsl
aas
mov
sbb
or
test
jae
or
mov
sbb
sbb
in
jmp
sub
dec
pop
imul
cwtl
dec
rcrb
jmp
pushf
cmpsb
mov
daa
popa
push
sbb
cmpsb
pusha
das
inc
lahf
fisubl
ror
loope
fsts
movsl
jle
sbb
insb
daa
adc
inc
call
pop
out
mov
push
push
sub
sahf
movsb
push
xor
loopne
xor
jp
dec
cltd
lahf
orb
es
daa
push
in
jle
push
icebp
imul
insb
mov
mov
ret
rclb
pop
shll
mov
sub
arpl
es
out
sub
inc
adc
scas
add
or
cmp
push
or
sub
lret
movsb
adc
ret
jmp
fwait
test
pop
or
and
jp
or
stos
lods
jns
jnp
movsb
xor
lock
mov
mov
test
mov
scas
mov
insb
fs
xor
loop
and
dec
cltd
dec
sbbl
xchg
movsb
push
ret
dec
xor
sbb
popf
cmp
jnp
fwait
stos
pop
adc
cmpb
and
mov
fisubs
mov
imul
out
arpl
push
fnstcw
insl
sbb
jmp
sub
mov
int
fisttpll
shrb
pusha
mov
or
mulb
or
and
clc
adcb
push
nop
xor
jbe
aaa
adc
cli
ret
cltd
lahf
dec
push
adc
inc
call
inc
das
push
call
iret
movsw
int3
call
mov
push
jle
test
jns
dec
outsl
bound
push
inc
movsb
rcrl
mov
cmp
in
inc
xchg
pop
sub
jae
enter
scas
orb
xchg
out
inc
xchg
cmp
bnd
cmp
cli
jmp
cli
jno
cmpb
mov
jb
movsb
xchg
jb
sbbl
or
and
push
insl
fnstenv
mov
sub
lret
jp
dec
aas
dec
ljmp
xchg
adc
pop
lea
adc
dec
or
lret
call
adc
push
dec
mov
cmpsl
cli
andl
daa
std
repz
jmp
mov
cbtw
mov
fcmovnu
movsb
jno
cmpsb
pop
rol
hlt
xchg
and
pop
and
adc
sbb
out
out
repnz
sbb
lcall
or
xor
shl
out
mov
or
mov
sbb
inc
pop
fs
nop
mov
cwtl
mov
data16
call
pavgb
cmp
daa
iret
pop
add
push
or
pop
xor
cmp
cmc
pop
push
pop
xchg
test
sbb
adc
add
jne
pop
push
ljmp
movsb
mov
xor
movsb
pop
dec
mov
cwtl
cli
sub
sub
outsb
xchg
cmp
mov
or
push
mov
lret
jmp
or
sub
and
sub
repnz
and
cmpsb
imul
adc
mov
cmp
and
xor
dec
imul
es
jmp
mov
movsl
adc
push
or
push
and
fcoml
repnz
insb
push
jl
mov
sbb
push
jbe
sbb
lcall
pop
in
xor
test
shrl
mov
sub
and
mov
mull
add
inc
aas
pop
in
mov
dec
and
push
adc
mov
cmp
dec
daa
sub
mov
test
dec
sub
subb
dec
push
pop
rorl
fcmovu
xchg
xchg
mov
test
mov
dec
inc
rcrb
sbb
xchg
je
ljmp
jb
sbb
jnp
xchg
jb
push
sbb
aam
mulb
mov
sub
jb
or
push
addr16
xor
add
lods
inc
dec
dec
in
rcrb
cs
sbb
arpl
sbb
pushf
rorb
dec
push
inc
sub
adc
add
or
ret
sbb
and
adc
fisubrl
adc
cmp
loop
mov
pop
xchg
cmc
dec
mov
cs
and
mov
icebp
xchg
sbb
popf
jo
call
jl
pop
repnz
das
int3
imull
sub
sub
push
shlb
imul
aam
dec
mov
adc
daa
mov
push
lret
xor
out
aam
or
imul
daa
cltd
addr16
xchg
and
sub
aad
hlt
mov
dec
andb
sti
je
fstpt
push
leave
jns
xorb
sub
insl
jp
or
aas
inc
cli
adc
call
sarl
add
add
rorb
lods
pop
decl
xchg
push
dec
aam
or
sub
jb
xchg
mov
push
lret
push
inc
je
sbb
int3
inc
int3
jb
jno
fisubrl
lea
iret
cmp
push
jmp
push
xor
push
jae
je
or
out
int
fsub
mov
aas
adc
pop
fucomp
adc
xor
push
adc
rcrl
nop
or
cmc
jne
fwait
mov
and
inc
test
int3
xchg
and
mov
sub
lret
push
in
lods
pop
in
xlat
mov
popf
jnp
or
or
daa
outsb
dec
cmp
mov
adc
jnp
sahf
es
add
cmc
or
mov
call
jae
dec
je
cmpl
sbb
fisubrl
cltd
jl
jnp
jb
add
int
xor
pop
aam
scas
stc
ret
int
adc
imul
mov
shll
stos
xchg
xchg
mov
out
stos
daa
mov
test
jecxz
add
hlt
sub
inc
push
lea
mov
xor
clc
inc
or
bswap
iret
and
jnp
adc
xchg
dec
xchg
pop
icebp
rclb
test
add
pop
cwtl
mov
leave
xchg
loope
iret
cld
inc
sti
pop
push
xlat
bound
insl
jecxz
ret
mov
mov
aas
cmpb
cmp
js
ss
push
sub
mov
cmp
nop
mov
pop
js
in
ds
and
mov
sub
or
mov
xchg
jb
cmp
outsl
pop
adc
mov
jg
sbb
stos
mov
fs
push
inc
xchg
or
pop
sub
lock
movsb
dec
inc
jmp
clc
or
aam
mov
or
xor
or
sbb
adc
insb
pushf
push
sub
test
sahf
mov
dec
inc
add
push
inc
add
sub
push
jl
loope
add
mov
pushf
mov
popa
pop
scas
push
mov
mov
jle
mov
es
or
popf
dec
outsb
xchg
je
lods
sbb
mov
sbb
orl
inc
push
ds
fisttpl
sbb
xor
cltd
jnp
unpckhps
fnsave
je
daa
int3
adc
xor
jg
scas
sub
fisubrl
add
loop
cltd
mov
bound
popf
push
pop
xchg
aas
das
xor
and
cwtl
push
mov
xor
dec
jb
xor
or
and
daa
in
inc
test
insb
sub
hlt
xchg
sbb
jae
cs
inc
adc
test
adc
push
lahf
push
jns
pop
mov
and
rorl
mov
adc
mov
pop
xchg
push
fcmovbe
and
xchg
dec
dec
fcmovbe
mov
out
pop
and
push
icebp
adc
jle
push
cmp
sub
movsb
fcoms
jp
addl
adc
lock
xor
into
adc
ret
repz
and
mov
push
into
sub
movsl
rcrl
sub
push
adc
hlt
pop
dec
bound
fsubl
lcall
iret
or
hlt
fisubl
cs
daa
out
adc
arpl
fidivl
icebp
inc
ja
jo
test
stos
xchg
adcb
and
test
rcrb
data16
repz
dec
popf
popa
outsl
adc
jae
aam
daa
arpl
ja
out
insb
daa
xor
push
sbb
mov
mov
mov
lret
aad
sahf
sub
jns
adc
push
sub
fstpt
repnz
or
cltd
imulb
sbb
mov
cmp
or
stos
mov
cmp
arpl
pop
bound
inc
lcall
mov
mov
sbb
and
jmp
stos
push
sub
sub
sbb
pop
xlat
int3
in
rclb
punpckhbw
jl
push
dec
cmp
push
or
mov
hlt
lock
loop
sub
or
jae
add
sahf
hlt
jl
dec
daa
lret
xchg
sbb
adc
pop
lahf
and
ljmp
jae
jmp
xor
mov
in
and
and
movsb
bound
dec
mov
sub
cs
cmc
icebp
or
stos
inc
aaa
cltd
or
fwait
cs
hlt
movsl
rcrb
push
mov
and
test
mov
or
icebp
stos
inc
dec
inc
push
lcall
mov
mov
hlt
or
outsb
inc
das
push
xor
push
sbb
cmp
mov
movsl
stc
negb
aaa
push
std
stc
jg
mov
mul
sub
jne
xchg
pop
cli
xor
mov
rolb
inc
mov
jne
loope
mov
insb
jnp
cmp
cli
psllw
mov
mov
and
or
aam
test
xchg
out
scas
call
aas
aam
mov
inc
or
and
div
je
cs
ljmp
pop
mov
dec
cmp
sub
add
mov
dec
loopne
dec
cmp
xchg
and
pop
aam
orb
subb
xchg
scas
mov
stos
inc
push
xor
adc
sub
push
mov
xchg
dec
cmp
das
jmp
sub
jno
mov
push
aad
loope
add
inc
add
loope
cmpb
movsl
pop
cmpb
mov
sbb
dec
adc
neg
lods
xchg
daa
fmull
pusha
fcmovu
dec
and
ds
popl
xchg
xchg
add
sbb
pushf
rclb
scas
in
pop
in
sbb
rorb
popf
dec
sahf
das
pushf
unpckhpd
fldcw
push
sbb
in
push
or
cwtl
xchg
mov
into
hlt
fnstenv
push
je
stos
pop
cmp
jnp
mov
mov
sub
push
and
sbb
push
iret
dec
mov
fs
mov
pop
mov
imul
mov
in
mov
shlb
clc
dec
outsl
pop
xchg
pop
aad
fs
mov
push
mov
push
push
xor
cmp
aam
push
mov
cmp
sub
add
sarb
xchg
mov
int3
jo
xchg
mov
xor
add
jmp
arpl
stos
ss
or
ds
inc
fnstenv
jecxz
pop
lods
scas
stc
pusha
gs
add
jnp
mov
sub
jmp
cli
scas
add
xlat
sbb
cmp
dec
fiaddl
dec
jb
sub
popf
mov
and
hlt
sbbb
inc
adc
jmp
jb
mov
mov
movsl
dec
mov
and
mov
ss
and
je
out
pop
bts
push
xchg
nop
scas
cmp
xor
and
sbb
mov
in
cmp
cmp
dec
jl
push
push
or
mov
and
stos
sub
xor
mov
rorb
pushf
pop
or
popa
xchg
adc
rcrb
sbb
add
jmp
adc
push
mov
repz
push
pop
xlat
stos
scas
add
outsb
shld
sub
out
mov
movsl
cwtl
dec
shrl
lods
cs
cs
push
lods
or
cmp
or
dec
sub
and
adc
push
pop
sub
adc
stos
lock
icebp
movsb
xor
jge
dec
xchg
sbb
imulb
cmc
insb
inc
add
push
or
nop
xor
cmp
jl
adc
mov
sahf
mov
or
dec
jp
and
jbe
cs
dec
xor
cmp
bound
int3
mov
outsl
mov
popf
cmp
and
mov
jnp
mov
or
addr16
and
je
mov
push
out
inc
dec
lods
adc
inc
test
stc
sbb
into
pop
xchg
std
ljmp
std
lret
push
add
cmc
pop
adc
adc
push
aad
sub
mov
lret
pop
xchg
lret
ret
int3
ficoml
dec
rorl
lret
ret
or
pop
test
or
mov
mov
stos
imul
dec
jg
cli
adc
sub
or
xchg
adc
and
sub
push
adc
mov
hlt
push
xor
das
stos
aaa
cmp
insl
push
shr
and
lret
mov
fcmovnb
ljmp
mov
jno
cmpsl
int3
ret
sub
roll
sbb
add
sahf
out
sub
movsb
outsb
popf
add
push
sub
sub
hlt
clc
sbb
adc
xchg
jnp
pop
mov
dec
daa
dec
sbb
dec
push
add
or
xchg
cwtl
xchg
sbb
orl
dec
fcoml
push
xor
sbb
xlat
scas
jbe
sub
mov
or
xchg
mov
sub
and
repz
adcl
xor
sub
jae
lret
xchg
rcrb
imul
mov
lock
fisttpl
xor
inc
or
pop
clc
inc
out
sub
lea
into
cld
test
mov
lea
push
adc
dec
xor
dec
out
xor
push
and
imul
test
add
mov
xor
mov
cltd
adc
pushf
adcb
xchg
mov
lds
lods
sti
adc
dec
das
mov
rcll
push
mov
dec
push
outsb
push
sub
cmpsb
pop
es
fidivrl
cmpsl
es
pop
jne
xor
loop
sbb
data16
insl
sbb
imul
mov
dec
shld
es
nop
out
fistps
ret
dec
es
xchg
adc
add
and
mov
adc
dec
daa
jno
pop
addl
stos
dec
mov
inc
xchg
lahf
push
sub
mov
adc
ror
sbb
dec
test
arpl
adc
out
cmp
int3
push
rcll
lahf
loop
adc
dec
flds
loope
aam
daa
shlb
sahf
adc
add
int3
shrl
xchg
daa
or
lds
js
inc
daa
xchg
jb
add
jecxz
or
or
mov
jl
cmp
fimuls
iret
sub
aad
jmp
cmc
jmp
jmp
mov
imul
btc
xchg
pop
push
push
add
in
andl
cmc
roll
mov
or
xchg
add
adc
sub
push
stos
ljmp
push
cmp
out
leave
cmp
adc
hlt
sub
adc
dec
icebp
mov
and
dec
std
in
jb
cld
push
pop
sbb
sahf
ss
loope
add
sti
addb
xchg
pop
arpl
or
mov
orl
jge
daa
dec
and
cmc
pushl
adc
adc
sub
rorb
pop
repnz
lret
add
add
cmove
and
pop
xchg
out
mov
lahf
bound
add
pop
sub
pop
into
les
mov
icebp
sysenter
dec
push
mov
adc
xchg
cmc
fisubrs
inc
frstor
mov
adc
in
xchg
cmp
add
into
cld
adc
scas
push
mov
mov
adcb
dec
cltd
cmpsb
scas
or
jg
insb
hlt
in
arpl
or
sub
or
inc
fwait
bound
daa
jecxz
dec
push
jecxz
sbb
lret
icebp
sub
ret
lock
adc
pop
loopne
or
cmp
aaa
lds
push
xchg
test
inc
push
mov
js
cltd
lods
and
lods
and
mov
arpl
outsl
cmp
jl
sbb
mov
inc
push
sub
mov
sbb
cmp
mov
inc
mov
or
sbb
pop
mov
push
pop
mov
and
faddl
leave
je
cmp
fldenv
rolb
inc
les
bound
bound
cmp
or
std
and
shr
jge
lret
test
daa
adc
sub
fisubl
clc
das
mov
sbb
aam
pop
add
push
mov
js
mov
inc
mov
pop
dec
in
add
int3
loope
int3
in
ljmp
sub
dec
cmp
push
sub
shll
out
jp
mov
cmp
scas
lcall
pop
and
gs
push
in
xor
pop
stc
fwait
cmp
pop
pop
shl
incb
in
scas
pop
mov
sub
sub
sub
fisttpl
imul
orb
sub
or
xchg
lea
xor
fstps
stos
das
and
mov
mov
mov
dec
gs
lds
cmpsl
dec
test
xchg
pop
sbb
pop
jmp
rcr
or
dec
aad
cmp
pop
lods
lcall
scas
mov
mov
mov
pop
add
jne
les
hlt
scas
push
xchg
or
out
and
in
xor
jo
fs
and
push
cwtl
insb
in
cmpl
add
scas
insl
fwait
lret
jae
pop
jecxz
lcall
push
push
rorl
pop
and
mov
mov
fs
mov
rcrl
sub
or
out
and
xchg
inc
inc
or
mov
jb
xchg
daa
lahf
dec
cmc
mov
and
push
rorb
jmp
outsl
push
sbb
arpl
cltd
loope
out
clc
pop
pop
xor
mov
fs
out
iret
push
cmp
dec
lea
add
flds
cmp
dec
test
movq
mov
or
mov
pop
data16
pop
cmp
in
pop
mov
out
xchg
fistps
or
pushf
adc
sbb
jmp
jp
int
in
adc
dec
bound
add
jmp
outsb
add
xor
inc
fwait
sbb
sub
add
inc
je
mov
xchg
gs
pop
jno
pop
cmc
psllq
outsb
lcall
sbb
dec
mov
mov
shll
push
and
repnz
mov
mov
xor
push
push
fcoml
mov
cmp
scas
or
ljmp
clc
mov
push
outsl
les
xchg
mov
adc
xchg
ret
rcrb
rcll
outsl
lds
xchg
sub
mull
fldt
and
dec
or
cmovnp
ja
cltd
sub
xor
in
andb
cs
les
int3
das
push
xchg
pop
push
test
or
mov
cmp
xchg
pop
jle
push
and
xchg
add
add
xchg
sti
or
jne
xor
rcrl
adc
arpl
mov
outsl
cli
adc
or
add
add
shll
fsubl
sbb
mov
int3
sahf
addr16
addr16
xchg
fcomp
xchg
jmp
and
mov
mov
mov
and
lahf
dec
sbb
dec
fcmovu
les
data16
in
pop
push
or
fwait
mov
push
inc
jno
sub
xor
pop
mov
jo
push
jle
mov
sbb
daa
mov
stos
notb
sarl
jne
insb
push
data16
andl
pop
or
movsl
test
push
bound
or
dec
push
mov
or
jo
pushf
stc
jl
mov
cltd
rcrl
and
xchg
cmp
mov
popf
popf
pop
adc
adc
pop
adc
mov
clc
jecxz,pt
or
cmp
mov
or
std
mov
push
fcoms
out
jo
jle
stc
sbb
sbb
cld
popl
jae
sbb
in
jbe
ret
getsec
ror
cmp
call
loop
sub
push
xchg
hlt
lea
mov
sub
add
jecxz
sarl
daa
pusha
add
sub
or
mov
jp
mov
out
sbb
std
cld
sub
aaa
pop
clc
lds
mov
add
fwait
adc
adc
nop
addr16
hlt
jbe
push
mov
popf
sbb
scas
out
cmc
pusha
cmp
into
inc
movsb
mov
mov
std
adc
mov
outsl
loop
cmp
add
adc
xchg
insl
mov
push
sbb
dec
push
getsec
pusha
xchg
rcll
aam
mov
push
cmp
lds
mov
xor
sbb
lcall
mov
sub
mov
cmp
int3
sbb
stos
mov
xor
fsubrs
push
xor
sub
out
pop
shlb
jne
pop
rorb
mov
xchg
mov
or
lock
or
mov
pop
das
push
mov
mov
lcall
out
push
out
xchg
test
daa
imul
out
out
sahf
jle
or
aam
adc
add
mov
dec
mov
inc
dec
mov
fidivl
xchg
sahf
jg
test
xchg
hlt
jle
cmp
xlat
lods
sbb
push
outsl
cmp
mov
fwait
lods
pop
jae
push
adc
lea
insl
adc
xchg
dec
hlt
out
push
mov
pop
cmpsl
inc
or
push
into
ret
popf
lock
xor
or
in
bound
xchg
icebp
mov
add
or
mov
mov
imul
shl
movsl
outsb
repnz
push
jno
inc
pop
stc
mov
test
rorl
mov
sub
or
xor
add
mov
call
sbb
cltd
pop
push
xchg
imul
shl
int3
clc
push
push
cmc
xchg
sar
ljmp
xchg
pop
mov
mov
repnz
pop
fidivl
mov
fbld
insb
jp
ljmp
scas
push
int3
mov
adc
jnp
pop
inc
orb
arpl
mov
cltd
mov
or
adc
jne
dec
mov
mov
dec
jge
arpl
push
jno
scas
sbbl
shlb
loop
out
mov
and
sub
sbb
dec
push
jbe
fsubs
and
nop
outsl
xchg
inc
cmp
scas
inc
cmp
dec
jmp
js
stos
roll
leave
push
sub
xchg
pop
adc
dec
pop
data16
pop
in
je
xchg
test
inc
mov
test
mov
sub
xor
mov
inc
push
sub
add
mov
mov
pop
aad
lds
test
stc
imul
xchg
les
out
or
ljmp
ficomps
loop
jae
xor
imul
shll
out
outsb
dec
jmp
rcll
rcrl
dec
and
xchg
pop
pop
mov
sub
cmp
jp
jne
out
xor
hlt
out
jne
cmp
mov
jb
sbb
dec
call
shrb
repnz
dec
lods
adc
shl
inc
jo
or
adc
shll
adc
inc
sbb
cmc
push
add
mov
mov
repz
and
jmp
scas
ljmp
cwtl
xchg
stc
cmpsb
or
adc
int3
aad
cwtl
xchg
in
mov
sbb
addr16
jnp
lds
lcall
mov
adc
pop
cmp
mov
in
push
popa
rclb
pop
sbb
adc
rorb
dec
cmp
or
pop
xchg
testl
es
aaa
adc
int3
mov
in
cmp
inc
add
or
cmp
aam
fisubl
push
xor
mov
xchg
es
sub
pop
daa
fsubl
enter
or
ffreep
in
scas
add
jo
mov
sbbb
lds
imul
jno
pop
pop
jbe
out
loopne
ja
fbstp
push
push
stos
cmp
adc
cmpsl
nop
sub
cwtl
cmpsl
jnp
or
outsb
test
rcll
addl
and
xchg
pop
ja
mov
jne
and
mov
adc
or
test
imul
inc
xchg
daa
jle
jae
arpl
and
mov
adc
dec
mov
lahf
jb
dec
sbb
iret
pop
xor
aam
mov
cmpl
aas
clc
xor
out
pusha
mov
lahf
mov
or
scas
cmpsb
stos
and
and
icebp
mov
pushf
push
movsb
icebp
fwait
dec
mov
pop
jo
out
push
imul
dec
cld
aad
inc
push
pushf
adc
lcall
mov
and
xchg
mov
and
inc
inc
lret
pop
xchg
aad
inc
and
out
or
stos
xor
orb
dec
or
cmc
adc
push
mov
call
push
inc
imul
xor
or
mov
jp
xchg
add
popf
and
iret
cwtl
scas
xchg
mov
pop
mov
mov
inc
aas
call
pop
mov
mov
mov
xor
imul
inc
adc
jecxz
mov
cs
lahf
je
push
pop
sbb
fidivs
scas
out
movsb
cmp
xchg
mov
or
in
dec
pop
lods
mov
push
pop
insb
push
movb
mov
pop
inc
pop
or
inc
mov
or
pop
sbb
popf
cmc
test
dec
xchg
adc
cmp
loop
test
jnp
sub
ret
pushf
popa
call
addl
dec
mov
addr16
mov
pop
pop
int3
xchg
and
fistpll
stos
push
and
mov
jmp
arpl
mov
dec
inc
mov
dec
fwait
mov
mov
ret
jg
adc
push
mov
add
adc
sbb
xchg
push
daa
mov
dec
jecxz
testb
into
mov
xchg
insb
lods
or
ret
andl
or
sub
or
dec
cld
xor
jae
ret
mov
out
iret
ds
jno
dec
jmp
and
pop
xchg
and
sub
cmpsb
pop
fsubrl
lahf
mov
negb
arpl
pop
ret
leave
sarl
mov
inc
xchg
test
mov
xchg
mov
dec
xchg
cwtl
jo
mov
mov
es
xor
testb
ret
mov
add
jecxz
jmp
xchg
dec
inc
adc
push
push
jl
xchg
and
mov
orl
outsl
test
int
loop
std
xchg
les
sbb
xchg
enter
push
adcb
es
bound
push
cwtl
in
rolb
sub
dec
push
add
lods
je
push
jb
push
cmpsl
out
daa
lcall
push
inc
dec
pop
sbb
pop
out
sub
sbb
push
cmpsl
push
gs
mov
mov
ljmp
mov
fstpt
push
mov
jno
mov
pop
xchg
lret
cld
lret
and
lods
sbbb
and
jno
testb
push
jp
mov
sub
mov
lret
xchg
pop
rclb
fdivl
sub
sarb
or
sahf
cmp
fwait
xor
cltd
inc
insb
insb
adc
push
push
push
jno
std
adc
lock
cmp
fimull
push
int3
inc
cs
dec
shrb
jmp
pop
push
sarb
lcall
cmpsl
xlat
adc
and
bound
outsb
je
mov
sbb
mov
fistps
imul
xchg
sub
push
adc
lret
pusha
or
push
sub
test
jno
stos
mov
or
xor
dec
inc
push
lret
dec
sbb
lret
mov
addb
mov
cmp
or
adc
pop
lea
mov
es
es
adc
sbb
cmp
push
sbb
mov
sbb
mov
pop
mov
jp
cld
xchg
sbb
imul
mov
mov
jb
dec
sbb
mov
pop
mov
xchg
mov
and
sub
mov
pop
pushf
mov
sti
mov
ja
push
pop
pop
mov
stos
and
fdivrl
pop
xchg
and
dec
pop
in
ret
bound
adc
dec
pmuludq
out
or
mov
clc
adc
cmpsl
xchg
sbb
push
scas
dec
add
xchg
push
cmp
and
xchg
into
adc
and
cltd
jnp
loope
push
jbe
leave
mov
dec
test
outsl
xlat
inc
xchg
sub
jp
stos
dec
stos
in
insb
mov
insl
in
mov
xchg
xchg
adc
daa
inc
in
cmpsl
pop
xchg
jmp
push
das
stos
cmp
xor
leave
nop
or
dec
sbb
popa
xchg
sbb
xchg
jp
jno
mov
mov
dec
inc
test
sub
pop
xor
outsl
jmp
xchg
xor
sbbl
and
mov
jmp
data16
mov
add
inc
scas
adc
add
loope
push
xchg
sub
inc
mov
inc
mov
fwait
jnp
sarb
fnstsw
xchg
inc
mov
and
dec
cmp
inc
sbb
cmp
push
int3
or
daa
in
mov
sub
push
mov
dec
cmpsb
xor
repnz
loope
orb
push
mov
jno
div
lcall
push
or
inc
xor
or
xchg
and
mov
enter
sbbl
cld
psubq
ret
mov
mov
xor
scas
adc
push
mov
and
jg
lcall
mov
adc
imul
pop
imul
sub
daa
push
cmp
inc
ljmp
je
pop
xchg
lret
jg
hlt
cmp
add
mov
pushf
inc
xchg
imull
call
and
cmc
push
aaa
xlat
and
mov
es
xor
adc
je
adc
push
movsl
or
shrb
xchg
inc
std
mov
into
lea
inc
out
icebp
mov
push
ljmp
jae
sbb
mov
ret
hlt
add
dec
add
insb
out
add
leave
xor
sbb
repz
insb
sub
divl
xchg
push
push
jmp
inc
mov
xor
or
mov
out
or
inc
inc
sub
pop
adc
loopne
mov
jnp
and
mov
mov
mov
in
mov
xchg
cmpsb
lret
shll
mov
in
push
daa
jno
add
mov
adc
sti
pushf
jno
fxch
shl
aas
mov
call
mov
sbb
cli
lods
mov
out
mov
inc
addb
cmpsl
das
cwtl
xchg
adc
jns
les
pop
fstl
call
mov
xchg
das
stos
aad
and
repnz
test
sti
psrlw
scas
jmp
sahf
cmp
shlb
das
xchg
fldt
dec
sbb
scas
xor
hlt
jmp
leave
jns
mov
sbb
sub
push
xchg
xchg
sub
outsl
xchg
push
sbb
jle
mov
cmpsl
push
dec
dec
into
hlt
jge
rorl
lods
jno
je
in
sbb
mov
hlt
ljmp
xor
rcrl
cli
mov
jmp
cmp
mov
cmpsl
push
repnz
mov
xchg
pop
cmpsl
pop
out
daa
mov
mov
dec
jl
mov
mov
push
and
shrb
xchg
pop
fwait
les
lret
lock
jno
insl
jno
outsl
sub
xchg
hlt
jo
addr16
aaa
sub
out
aas
pop
xor
stc
cmpsl
divl
xchg
jmp
jbe
mov
ret
das
imul
xlat
mov
cmp
out
cmp
or
fsubr
jae
add
jnp
mov
inc
lea
sub
xchg
outsl
and
popf
jl
cld
and
hlt
sbb
jmp
aam
addb
sbb
leave
lcall
dec
xor
fisubrs
push
aas
mov
mov
add
xchg
ss
dec
jno
or
cwtl
les
movsb
insl
lret
dec
push
int
sub
pop
xor
lcall
mov
and
xchg
sbb
push
mov
sub
mov
std
sub
in
loop
xchg
adc
dec
sbb
sub
stos
dec
pop
nop
and
mov
xor
repnz
loope
mov
jmp
mov
mov
or
cmc
cmp
mov
leave
int
bound
adc
fs
cli
or
or
mov
sub
mov
lcall
jmp
clc
mov
lds
leave
pop
adc
sub
scas
push
fucomi
aas
xchg
xchg
dec
iret
leave
xor
ja
or
je
jno
cmp
push
idivb
xor
out
sbb
adc
xor
int
lret
sub
bound
and
jp
cwtl
cmp
xor
mov
dec
fs
sbbb
xchg
pop
repnz
movsl
cmc
and
sub
frstor
pop
xor
cwtl
int
inc
ret
test
nop
push
adc
inc
or
das
or
jp
jmp
out
xchg
aam
xchg
xchg
jg
aad
nop
xchg
dec
jmp
sbb
fisubs
sub
mov
rcrl
lret
cld
movsb
ja
and
cltd
pop
stc
jno
and
mov
pop
in
pop
mov
sbb
inc
add
jo
mov
lahf
imul
push
mov
push
add
fucomip
inc
stc
add
mov
adc
push
imul
icebp
push
or
test
dec
div
rolb
pusha
or
fsin
aas
mov
add
int3
adc
adc
hlt
push
jp
adc
and
mov
add
ja
or
enter
fcompl
mov
xchg
or
lods
hlt
lcall
ja
mov
sub
inc
or
scas
ja
movsl
out
xchg
dec
imul
scas
mov
dec
mov
scas
clc
sbb
out
js
inc
add
lcall
inc
nop
push
aas
movsb
cmpl
xor
push
mov
inc
sbb
rcll
xor
stos
add
adc
hlt
inc
aas
jecxz
ljmp
dec
mov
sub
mov
decb
add
fistpl
pop
pop
sbb
adc
sub
loope
subl
pop
pushf
or
push
test
pop
xor
dec
test
cmp
es
lret
hlt
pop
fsubr
es
gs
dec
es
cmp
inc
sub
in
adc
mov
outsl
gs
mov
arpl
adc
in
daa
ss
fmull
xchg
adc
add
and
xchg
cmp
adc
aaa
mov
mov
lahf
into
stos
mov
mov
insl
inc
jb
shrl
fwait
or
and
add
mov
jne
sti
je
jno
or
divl
orl
shrb
adc
lret
mov
daa
mov
sbb
mov
cmc
xlat
cmp
mov
jmp
imul
ret
lcall
loop
and
jb
xchg
pop
int3
and
sbb
scas
enter
xchg
mov
test
mov
aaa
fisttpl
fistps
sbb
jne
xor
out
mov
subl
push
pop
scas
enter
adc
in
pushl
ja
iret
mov
lret
sub
jp
mov
cmp
pop
dec
rcrl
iret
sbb
cwtl
hlt
inc
ret
add
xchg
movsb
jno
jns
push
pop
fldcw
rclb
add
stos
in
cwtl
stos
dec
mov
push
jae
sarb
or
lock
addr16
aaa
les
mov
aad
pop
fcompl
cltd
aaa
jae
fmuls
push
mov
scas
ficompl
stos
into
xchg
imul
mov
loopne
movsl
in
test
xlat
rcrb
pop
push
testb
sbb
jge
add
xlat
push
aad
ret
lret
push
inc
fistps
mov
jnp
outsb
aam
stos
sub
cld
test
mov
xor
inc
mov
xchg
jnp
xor
mov
nop
sbb
and
mov
pop
xlat
inc
sub
test
jl
pusha
icebp
mov
shrb
in
movsl
inc
sub
push
mov
adc
or
cmp
popf
inc
jae
dec
dec
push
and
add
call
xchg
pop
nop
stos
jmp
test
dec
cmp
mov
insb
mov
inc
rcl
inc
mov
hlt
out
hlt
xor
lods
adc
mov
rcrl
pop
lret
jp
mov
daa
jp
dec
sbb
or
or
daa
fnstsw
sbb
jns
push
test
mov
adc
push
mov
xor
and
test
shl
push
mov
pop
sbb
xor
xor
cmpsb
sbb
cmp
pop
xchg
bound
es
cwtl
sub
int3
daa
push
stc
push
iret
test
sbb
sub
test
push
mov
ret
sbb
pushf
mov
mov
push
je
sete
inc
xor
mov
das
in
fwait
pop
popf
insb
jnp
mov
sbb
ljmp
cmc
rolb
sbb
sub
adc
cs
arpl
hlt
das
jnp
pop
bound
mov
cmp
daa
test
test
sbb
and
push
adc
ret
dec
nop
cmp
jb
jb
jp
mov
inc
dec
mov
cs
pusha
mov
push
daa
shl
xchg
scas
fwait
xchg
out
mov
xchg
popf
sar
fiaddl
aas
and
push
xor
inc
pop
fdivrl
adc
lock
outsl
push
or
and
inc
mov
dec
les
sub
negb
jmp
fidivl
stos
lds
adc
into
inc
leave
aad
insb
cld
pop
stos
mov
call
outsl
inc
xor
dec
repnz
cmp
sahf
mov
xchg
sub
mov
lea
push
es
fsubrs
data16
mov
adc
mov
incl
sub
or
inc
add
xchg
xor
lea
mov
into
jecxz
cwtl
sub
or
sub
add
in
inc
lahf
int
stos
sbb
ret
insb
scas
mov
test
cld
aad
and
dec
ds
mov
lds
push
xchg
and
daa
imul
bound
mov
xor
dec
mov
ljmp
ljmp
push
fs
lods
cmp
jnp
lds
pop
mov
aam
or
sbb
cmovp
or
cld
adc
sub
cli
fs
mov
fs
test
mov
mov
mov
pop
push
inc
daa
pop
lds
shld
lcall
mov
leave
inc
in
or
lods
jne,pt
scas
and
jl
lret
fcoms
daa
rcrb
xchg
and
lock
flds
xor
jl
lahf
cwtl
pop
ret
in
push
jl
addr16
sub
push
movsw
push
imull
mov
jno
mov
insl
dec
clc
lcall
outsb
cmp
dec
sbb
popa
fisubrs
xchg
mov
or
mov
pop
lea
sub
test
and
and
mov
xchg
cs
xlat
out
fsub
imul
xor
or
push
jae
call
push
loope
push
lret
or
daa
repnz
popf
dec
enter
daa
or
dec
xor
sbb
push
mov
jae
dec
sbb
cmp
or
or
mov
jp
mov
aad
mov
or
or
aam
sub
dec
and
and
insb
int3
hlt
inc
mov
aam
in
sbb
rorl
jo
pop
xchg
or
mov
mov
inc
mov
lahf
push
cmc
lret
and
adc
sbb
loop
mov
repz
testl
aad
out
fldcw
xchg
xor
int
jae
sbb
or
and
mov
ficoml
sub
scas
stc
test
cs
mov
pop
mov
dec
push
out
cmp
pop
cs
scas
subb
push
mov
push
aaa
loope
jecxz
sub
jnp
xchg
negl
loope
or
lahf
mov
fldt
sub
das
sbb
fisubrs
ficoml
add
mov
pop
test
dec
pop
xor
and
insl
sbb
push
inc
ljmp
add
add
sub
sub
movsl
or
rcll
jmp
jns
ret
or
imul
mov
cmova
xchg
sub
mov
cwtl
outsl
sbb
insl
pop
fimull
outsb
jecxz
adc
iret
imul
push
or
mov
mov
cwtl
loope
or
imul
aaa
cwtl
insb
cmp
push
lret
cmovp
sbb
dec
fdivl
stc
or
xor
mov
xchg
cld
rorb
add
sbb
out
out
adc
push
ljmp
outsl
popf
sbb
xchg
dec
push
xchg
repnz
lods
fmul
push
cmp
adc
setl
shlb
ror
lock
pop
icebp
pop
mov
adc
add
fisubrs
icebp
add
nop
lret
andl
shlb
dec
mov
mov
lahf
fwait
and
xor
lret
pop
add
ljmp
adc
inc
and
inc
js
sbb
push
jge
mov
push
xchg
mov
xor
xor
shlb
adc
add
mov
idivl
xor
jb
pop
scas
loop
cld
call
into
cmp
sbb
fwait
jmp
test
adc
lret
cld
or
or
scas
addb
pop
rorb
in
dec
mov
xchg
adc
push
sahf
pop
daa
push
xor
jl
dec
leave
dec
jo
je
out
or
mov
ds
shl
or
sbb
movsl
jno,pt
cltd
inc
push
jmp
pop
aam
mov
lahf
popa
dec
scas
aam
sbb
daa
popl
mov
popa
aam
dec
roll
sbb
rdtsc
push
mov
testl
mov
pop
orb
jl
loop
js
loope
pop
ljmp
lods
lahf
or
mov
adc
push
pop
jg
and
fnstenv
movsb
xchg
and
pop
roll
ret
cld
stos
clc
lock
ljmp
mov
fs
jmp
dec
stos
ret
cmp
xchg
testb
xor
xchg
mov
jmp
fldt
inc
dec
mov
mov
adc
sbb
sahf
and
shlb
unpcklps
xchg
fiadds
dec
cwtl
adc
mov
pop
movsb
xchg
in
lods
adc
pop
lret
mov
push
insb
stos
mov
roll
sub
mov
or
or
or
sub
gs
jle
sbb
icebp
or
aaa
lea
mov
es
xor
outsb
xchg
clc
repz
push
aam
xchg
shlb
clc
clc
scas
movsl
mov
dec
jmp
dec
pop
les
lods
dec
loop
cli
loop
bound
sub
lock
test
pop
dec
cmc
pop
mov
adc
je
adc
call
jp
jno
and
addr16
push
testl
mov
out
push
mov
jecxz
loop
cmp
mov
and
inc
inc
jmp
daa
or
hlt
imul
add
leave
mov
pop
lret
sub
sbb
cwtl
push
sbb
cltd
push
sbb
xchg
or
sub
rorb
or
and
sbb
std
mov
adc
push
in
movsl
push
xchg
pop
xlat
or
shr
imul
push
out
mov
cwtl
cli
ljmp
mov
adc
lods
cmp
lcall
add
push
mov
sub
dec
into
adc
xchg
sbb
out
or
fcoms
js
hlt
dec
insb
pushf
push
sub
loope
xchg
adc
push
or
cld
es
and
cli
mov
cmp
push
daa
sbb
js
sub
mov
cld
xor
pushf
jns
cmp
jl
mov
subl
rcl
test
fdivl
popa
xor
imulb
iret
aad
and
sub
fisubs
push
lea
xchg
mov
les
pop
cltd
jb
or
int3
mov
insb
stos
jo
fsts
or
loop
mov
out
mov
xchg
pop
push
and
pushf
or
fildl
lahf
push
mov
xor
inc
xor
mov
hlt
adc
push
dec
pop
adc
adc
lahf
fcoml
cmp
adc
dec
lret
push
jo
or
fwait
xor
xchg
mov
fucomp
mov
xor
dec
fstl
adc
xchg
cmp
scas
out
fs
popf
pop
cmp
lods
sub
or
lret
iret
insl
pand
pop
push
cmpsl
xchg
push
mov
aam
pop
stc
pop
jo,pt
mov
inc
es
inc
xchg
lds
movsl
xor
shll
xor
jmp
push
add
cmp
fildll
aaa
mov
xchg
inc
cmp
fs
xorb
or
or
les
push
sbb
sbb
mov
jnp
movsb
jp
pushf
popa
push
adc
mov
mov
mov
mov
adc
xor
dec
int3
jg
cmp
jp
out
sub
mov
mov
std
lods
das
mov
push
or
push
jmp
ljmp
sbb
dec
lea
pop
lcall
mov
pop
xchg
and
mov
lcall
sbb
mov
xchg
sbb
pop
fs
ret
push
sbb
repnz
cmc
xchg
mov
je
add
cwtl
out
jbe
push
or
mov
mov
insl
cmc
mov
xorb
sbb
push
xor
pop
push
jbe
daa
mov
orl
xchg
inc
adc
dec
lcall
jb
and
rorb
or
mov
std
test
pop
jmp
xor
orb
mov
jecxz
cmc
hlt
lahf
in
stos
aam
sbb
aaa
popf
dec
sub
imul
fisubrs
inc
adc
test
push
lea
push
jmp
mov
lret
rorb
jb
push
xchg
jno
cltd
mov
ficoms
fs
pop
fcomi
out
pop
hlt
cmpsl
xor
or
sbb
pop
je
repz
xchg
dec
repz
rorl
sbb
sub
jo
nop
cmp
jge
into
pop
pushf
stc
adc
hlt
push
repnz
pop
incb
arpl
lret
pop
loop
sahf
or
jle
mov
scas
mov
rclb
jne
cli
repz
and
in
aad
test
imul
cmp
lahf
sub
pusha
pop
nop
xchg
in
inc
iret
mov
add
xchg
jg
sbb
out
xchg
shlb
xor
and
cmp
jne
int
sub
or
sarb
inc
ljmp
cwtl
sarb
pushw
fcmove
push
enter
jmp
call
pop
pop
add
in
mov
dec
inc
mov
pusha
mov
ss
dec
inc
lret
inc
iret
mov
adc
inc
scas
push
xchg
or
dec
mov
mov
and
test
es
pop
call
push
mov
into
sbb
pop
ljmp
xor
xor
adc
add
mov
lock
hlt
ss
mov
xchg
push
jb
sbb
mov
into
dec
mov
and
xchg
jo
bound
sbb
dec
ja
test
lds
cmp
sbb
mov
cltd
dec
ror
pop
or
fstpl
sbbl
test
xchg
lcall
xchg
shrb
push
mov
jnp
sbb
stos
jge
pusha
lahf
mov
xlat
mov
mov
push
or
insl
lcall
dec
outsl
dec
icebp
jb
scas
and
push
test
mov
aam
sub
sub
ljmp
ja
xor
mov
fidivrs
cmp
lods
je
sub
cs
rorb
out
repnz
mov
push
pop
lds
jmp
push
repnz
push
popf
xor
scas
xor
in
fld
test
pop
jno
cwtl
js
lock
pop
in
rcrl
xchg
and
repnz
rcrl
adc
inc
int3
lret
xchg
push
sar
jmp
mov
cltd
sub
insb
adc
in
mov
mov
xor
cmp
sub
dec
push
subl
hlt
je
mov
dec
fsub
scas
fsts
mov
jmp
fmuls
mull
or
push
sub
or
jl
xor
pop
inc
out
into
dec
mov
int
dec
outsb
flds
or
je
jp
shll
push
jl
aaa
std
hlt
out
push
les
cwtl
jmp
push
xchg
adc
lods
jae
cs
cmpsb
mov
es
sub
cwtl
sbb
xor
adc
pop
je
sahf
and
mov
pop
repz
adc
je
adc
jne
jo
cmpsl
pushaw
or
jae
stos
js
leave
or
jno
jp
adc
bound
sarl
mov
int3
adc
push
test
mov
mov
xchg
enter
mov
aam
test
push
push
push
imul
xor
mov
ss
gs
or
sarl
xor
fldt
fincstp
xchg
push
in
fsts
jno
fnstenv
sub
cmp
xlat
push
xor
add
je
adc
jb
dec
dec
xchg
shld
push
aaa
adc
pop
pop
pop
in
ret
lods
or
data16
or
mov
xor
dec
fsubrl
sahf
int
mov
js
xchg
dec
scas
push
jb
test
mov
int
icebp
in
xchg
insb
inc
or
sbb
pop
imul
lea
jb
and
jmp
mov
xor
pop
adc
fsubl
out
mov
push
mov
jo
xor
and
xor
push
sbb
dec
daa
in
jmp
aas
arpl
aas
scas
xchg
mov
dec
dec
cld
and
shrb
mov
leave
lcall
or
movsl
int
lret
aam
and
repnz
das
hlt
int
mov
ljmp
mov
mov
sub
push
adc
scas
cmp
inc
xchg
or
mov
xchg
pop
aad
or
adc
test
ficoml
and
cmp
mov
stos
lds
bound
dec
pushf
cmp
or
and
cmp
push
sbb
sbb
jae
pushf
out
mov
pop
pop
cmpsl
test
push
push
cwtl
push
cmp
cmp
outsl
pop
jmp
or
int3
xchg
or
insb
aaa
call
or
push
fldcw
sub
dec
cmp
mov
cmpsb
sub
lea
adc
in
aas
sub
sub
stos
lret
jmp
sbb
dec
imul
jle
mov
and
mov
mov
orl
icebp
xor
aad
inc
sbb
outsl
sub
pusha
stos
sbb
and
adc
out
xor
fisttpll
aas
jmp
insb
sbb
add
int
jnp
jb
xchg
xchg
mov
inc
xor
adc
popf
stos
xchg
mov
push
in
mov
ja
aam
mov
mov
scas
aad
fimull
mov
out
lock
cmp
push
scas
mov
xchg
and
push
jle
test
push
mov
jmp
imul
mov
sub
mov
testl
imul
out
lcall
xor
or
arpl
pop
es
jmp
lds
mov
je
jb
repnz
jl
mov
jbe
push
push
adc
loop
fmul
lret
xchg
or
stc
push
push
imul
out
mov
jno
scas
jo
and
sbb
adc
scas
inc
cld
dec
adc
loope
adc
mov
cmovno
test
xor
xchg
and
and
jae
das
mov
scas
cmpsb
mov
jmp
imul
adc
xor
aam
adc
cmp
mov
or
push
xchg
dec
lea
outsl
aam
shll
lea
mov
orl
pop
push
js
lahf
hlt
jo
xchg
adc
dec
inc
mov
pop
and
hlt
add
dec
dec
jle
pop
nop
jb
push
cmp
dec
sbb
sub
fnsave
mov
push
bswap
in
js
cmp
inc
jb
fwait
lds
sub
jno
mov
cltd
mov
xchg
add
cmp
imul
stc
sub
and
cmovno
fwait
rorb
push
std
dec
and
push
jb
divl
ret
cmp
jb
aam
lcall
push
cmp
dec
dec
pop
xchg
arpl
cmp
xor
dec
hlt
repnz
add
push
repnz
and
sti
and
pop
and
ficompl
mov
sbb
xor
jp
and
dec
inc
cmpsl
aam
cmp
pushf
push
add
add
adc
rcrl
sub
sbb
test
jecxz
int3
mov
or
cmc
enter
jb
popa
jo
jnp
hlt
mov
sbb
sub
or
stos
adc
ror
sub
push
dec
mov
push
test
lret
push
rolb
stos
inc
pop
inc
int3
fndisi(8087
xchg
push
daa
jne
repnz
jl
cmp
sahf
pop
call
addr16
pop
int
push
xchg
shlb
or
outsb
sti
leave
push
lahf
mov
hlt
daa
and
sbb
xchg
pop
test
sbb
sub
mov
pushf
out
cmpsb
outsb
or
jne
add
pop
cmp
push
or
mov
push
dec
cmp
jo
decb
or
aam
push
mov
jle
fsts
cvtpi2pd
andb
mov
bound
mov
push
sub
jae
mov
mov
dec
cmc
xor
imul
fisttpl
int
shll
lcall
lea
xchg
ljmp
mov
pop
shl
inc
jo
aam
mov
mov
rcrl
add
xor
adc
lcall
adc
fcoml
cli
inc
int
xchg
nop
jp
push
shrb
mov
or
mov
mov
filds
xor
mov
jns
adc
out
out
cmp
push
stc
loop
int
xlat
mov
aas
ljmp
push
cmp
dec
adc
lea
pop
jae
mov
sbb
jecxz
mov
push
outsl
inc
pop
push
ds
negb
mov
push
insb
mov
pop
push
add
int
add
cli
faddl
pop
bound
mov
inc
jnp
mov
sub
lods
rdmsr
clc
jae
dec
sub
and
or
inc
movsl
icebp
sbb
decl
pop
aas
sti
cwtl
add
pop
out
adc
mov
and
add
adc
sahf
adc
mov
scas
lods
adc
std
dec
subb
mov
repz
rcl
scas
icebp
sub
jb
sbb
clc
or
push
xchg
sub
xchg
test
or
test
cli
adc
sub
adc
xchg
dec
or
dec
cltd
mov
inc
int3
dec
testb
popf
pop
inc
mov
jmp
cmc
xor
inc
pop
lcall
pushf
cs
push
adc
mov
or
mov
cwtl
mov
sti
xchg
add
xor
fcmovnu
or
daa
sub
push
xchg
jne
cs
repz
sar
sbb
push
xlat
movsl
pusha
or
dec
lea
fwait
sbb
and
cmp
dec
cltd
sub
pop
add
leave
mov
jae
mov
bound
mov
cwtl
sub
push
push
adc
lock
mov
adc
enter
sub
std
in
sbb
repnz
pop
scas
mov
rorb
xchg
sub
mov
bound
push
out
cmp
fnstsw
cmp
popl
and
cmp
push
mov
sub
inc
cs
xchg
push
or
push
rcr
adc
sbb
push
or
leave
pop
cmpsb
xchg
cwtl
lcall
push
sbb
cmc
int
xor
out
push
je
mov
std
aam
or
sub
adc
orl
fldt
scas
jnp
mov
add
push
ja
imul
mov
add
jne
sub
xor
pop
cltd
cmpsb
push
cmp
jl
mov
das
push
adc
mov
sub
xchg
cmpb
mov
daa
hlt
daa
lds
rclb
call
sub
jno
mov
adc
adcl
iret
stos
push
inc
jecxz
adc
or
sbb
bound
fimull
or
xor
push
and
add
out
rorl
inc
inc
insb
adc
daa
out
dec
adc
pop
in
test
jg
pop
adc
mov
mov
pop
pop
mov
and
sbb
fidivs
cs
jno
shll
jg
mov
cwtl
mov
mov
mov
sbb
shll
aaa
out
arpl
or
xor
push
decb
inc
mov
cmp
pop
shll
fsubs
inc
mov
stos
loope
ret
and
fcomps
dec
stos
dec
cmp
ucomiss
jmp
mov
mov
mov
pop
in
xor
or
dec
inc
lods
dec
xchg
in
mov
cmp
jp
or
pusha
push
in
nop
rcrb
xchg
insb
xchg
sbb
outsl
add
fcom
push
mov
mov
lds
out
push
js
fmull
clc
or
movsb
sub
adc
jne
outsl
and
adc
imul
add
sbb
mov
ljmp
xor
mov
cltd
sub
fisubrs
or
xchg
add
lret
mov
bound
cld
and
aaa
mov
pop
es
rcl
jl
pop
xchg
sbb
push
xchg
xor
imul
mov
sub
repnz
adc
mov
ret
or
mov
mov
pop
repnz
jb
mov
cmp
or
jno
adc
test
push
xor
or
mov
mov
fisubl
mov
jne
push
fistpll
in
sub
xchg
xchg
dec
sub
or
sub
dec
fldenv
jae
popf
mov
cld
push
aad
aad
int3
pusha
push
test
jb
adc
sbb
jecxz
mov
incl
jb
push
loope
lods
dec
or
push
cmp
jp
mov
adcb
call
xor
ficomps
mov
ljmp
fcoms
cmpsb
mov
stos
mov
ljmp
push
dec
mov
push
shr
adc
cld
mov
mov
mov
sub
roll
inc
rorb
mov
adc
inc
lods
test
mov
push
sub
setl
xor
mov
dec
push
pusha
xor
out
aad
sbb
mov
jo
call
sahf
lcall
xor
inc
ss
sbb
mov
adc
xchg
xchg
push
scas
cs
das
in
fwait
push
test
xor
sub
mov
je
jae
lret
call
add
arpl
xchg
cmp
pop
out
stc
xchg
ret
mov
mov
shrl
data16
subb
or
mov
pop
aad
js
insb
or
scas
inc
sti
lock
cltd
add
scas
mov
je
pop
fimuls
xor
xor
or
push
cld
sub
cmp
jnp
mov
adc
sbb
lea
jl
jl
daa
xchg
push
sbb
cmpsb
aam
es
movaps
rol
inc
data16
xor
mov
out
sbb
mov
pop
cmp
xor
mov
aam
outsl
lahf
sbb
shr
push
adc
lock
clc
dec
subl
or
ljmp
addr16
push
inc
fdivs
inc
sub
hlt
sarb
xchg
mov
cmp
repnz
ret
mov
adc
or
dec
lcall
mov
aas
popf
popf
push
push
hlt
pop
adc
mov
ret
movsl
sbb
rcrb
mov
adc
rcl
lahf
mov
xlat
or
mov
cmp
int3
pop
ret
mov
aad
mov
or
test
xchg
ret
in
fcoms
push
xor
mov
cs
or
cmpb
jno
dec
fcoms
out
mov
xor
push
pop
nop
xchg
clc
jns
jo
stos
mov
and
aam
push
add
xchg
mov
pop
fptan
out
fadds
into
je
popa
jg
dec
mov
mov
jl
or
enter
je
mov
mov
inc
call
inc
pop
sub
stos
addr16
jbe
cmpsl
sti
inc
push
mov
push
xlat
mov
cmpsl
aad
jbe
ret
lea
mov
test
fistl
cs
daa
clc
aas
test
repnz
dec
leave
rclb
jmp
and
mov
sub
data16
push
jg
xlat
pop
adcb
xchg
aam
add
arpl
je
mov
out
popf
push
in
push
lock
mov
rclb
nop
cwtl
dec
xor
cmovg
mov
in
es
xor
sub
stc
mov
icebp
mov
lcall
xchg
pop
mov
adc
or
dec
sub
xchg
sub
sub
movsl
or
mov
inc
mov
loop
or
fnstsw
mov
add
adc
mov
jmp
sarl
mov
push
popf
adc
mov
in
and
dec
cld
ds
outsl
fstl
or
sbb
aaa
mov
cmc
and
out
push
xchg
push
adc
out
aad
adc
stc
ljmp
ljmp
rep
adc
push
mov
in
daa
push
push
or
sub
sub
ss
fildl
rorb
out
imul
clc
mov
pop
out
push
and
push
sbb
int3
shrl
outsb
sbb
push
add
pop
xchg
mov
outsl
dec
mov
adc
dec
sbb
and
nop
in
cmp
push
addr16
lods
adc
sbb
ja
xchg
pop
into
je
inc
out
sar
mov
jne
out
sbb
mov
and
push
pop
xchg
imul
add
mov
nop
mov
mov
jno
stc
ljmp
cmp
into
mov
push
push
adc
xchg
push
test
mov
push
sub
add
hlt
cmpsb
sbb
push
mov
repz
movsb
xor
comiss
xchg
repnz
mov
inc
imul
bound
int
sahf
jno
pop
adc
sbb
push
jmp
mov
std
fdivs
mov
sahf
lods
mov
dec
jmp
xchg
fdivrs
cmp
orb
mov
inc
je
mov
mov
mov
push
sarl
pop
popl
push
mov
pop
jae
pop
push
xor
pop
adc
dec
adcb
mov
pop
adc
fdivrs
testb
xor
inc
xchg
xor
insb
mov
or
stos
fisubrl
stc
out
add
push
loopne
into
push
mov
or
adc
xor
or
add
ss
or
sbb
out
rorl
xor
cmp
test
xor
adc
or
mov
xor
test
loopne
ss
cmp
imul
jb
mov
or
cmp
mov
lret
xchg
aas
mov
cwtl
cmp
xchg
inc
mov
stc
xchg
cld
icebp
mov
cs
mov
xchg
and
or
add
mov
dec
mov
shrb
dec
push
enter
sbb
mov
sub
ss
jae
fwait
iret
xchg
mov
fwait
jmp
push
or
push
dec
aam
rorl
pop
mov
mov
lret
mov
rcll
mov
cmp
dec
nop
aam
dec
adc
xchg
adc
inc
out
xchg
cmp
push
push
or
daa
pushf
mov
xchg
mull
inc
xor
xchg
test
dec
xor
adc
xor
xchg
idiv
xchg
mov
lahf
push
pop
fldt
fdivl
bound
scas
add
cwtl
je
mov
xchg
pop
jle
jb
mov
scas
push
push
addr16
adc
sub
mulb
mov
rol
pop
insb
pop
mov
outsb
fadds
mov
push
or
lret
mov
imul
push
pop
sbb
xlat
pusha
push
and
mov
mov
int
xor
popa
bound
movsl
mov
sbb
jo
enter
adc
mov
dec
lret
push
scas
or
pushf
ss
jmp
jnp
rcrl
xchg
push
dec
dec
mov
and
fcmove
dec
adc
pop
and
clc
or
lahf
imul
test
stos
orl
mov
shrl
sub
dec
lahf
or
jo
xchg
push
xchg
jae
cmp
jle
rolb
push
mov
aam
xchg
call
lret
xorb
push
lcall
rcrb
loopne
lret
add
and
leave
xlat
ret
inc
add
push
mov
adc
jp
mov
inc
cs
and
add
outsb
xchg
in
imul
adc
mov
negl
fimuls
cltd
fmull
aam
mov
lahf
iret
sbb
sahf
fnsave
push
sub
mov
aaa
lods
xor
stos
adcb
adc
or
aad
std
push
and
ret
xchg
pop
pop
jl
stos
mov
cs
int
push
mov
scas
xchg
pop
out
xchg
test
adc
push
inc
addr16
fwait
ret
clc
into
andb
imul
mov
addr16
repz
pushf
dec
dec
iret
movl
push
dec
outsl
mov
dec
jg
arpl
push
adc
daa
mov
push
cmp
and
add
xlat
adc
mov
sbb
pop
dec
xchg
adc
or
push
adc
push
inc
imul
fstl
push
in
push
xor
add
and
add
jp
mov
iret
cmp
cmpsl
adc
jo
scas
and
sahf
and
xchg
dec
mov
mov
add
sbb
cmpsl
mov
mov
pop
jle
dec
xchg
push
nop
repnz
or
push
mov
push
mov
dec
daa
cltd
and
pushf
enter
test
mov
fists
leave
loop
mov
inc
outsl
repnz
inc
adc
mov
lea
mov
ret
and
sub
mov
dec
and
fimull
push
sub
ss
sub
insl
std
jb
fcoms
mov
xchg
pop
jns
jo
xchg
dec
and
mov
pop
clc
out
rclb
and
add
mov
push
mov
push
rorl
adc
jnp
and
dec
or
mov
daa
movd
cmp
xchg
or
dec
nop
jne
sub
and
stos
push
push
lcall
fnstcw
es
aas
push
sahf
out
pop
flds
scas
pop
mov
pop
xchg
daa
lret
mov
adc
hlt
int3
hlt
cmp
xor
xchg
dec
cmp
nop
inc
ja
push
bound
push
pop
push
mov
out
mov
sti
pop
int3
adc
nop
pop
dec
shll
pusha
in
fsts
pop
ljmp
cwtl
mov
sahf
cmp
dec
mov
int3
add
psrlq
adc
fs
stc
sub
push
add
inc
inc
fistl
jo,pn
xchg
pop
call
jb
mov
xlat
test
cmpsl
xchg
xor
cli
dec
mov
inc
aad
sbb
xchg
jno
sub
and
xchg
or
int3
jae
jle
iret
mov
dec
push
sti
hlt
jle
inc
cmp
sub
jmp
push
loope
cmc
jne
mov
push
xchg
and
mov
insb
add
adc
mov
mov
mov
or
or
repnz
ficoml
pusha
lea
fisttpll
xchg
mov
call
jns
ret
rcrl
cmp
testl
push
jno
mov
stos
sbb
add
in
adc
inc
outsl
shrl
lcall
mov
pop
rclb
cmp
jg
mov
jmp
clc
sbb
cld
call
fidivs
pop
adc
adc
fcoml
pop
or
push
insb
pop
adc
and
outsl
pop
pusha
test
por
std
insb
aam
inc
nop
sub
push
sti
inc
insl
xor
pop
dec
pop
xchg
and
sub
daa
fldl
and
mov
pop
sbb
out
mov
xor
shlb
gs
mov
adc
inc
mov
jnp
inc
jl
push
push
cmp
sbb
jno
push
mov
repnz
add
jae
decl
fmuls
scas
push
enter
push
int3
xor
add
pop
jl
xchg
out
pop
add
aas
outsl
cli
or
mov
adc
inc
or
into
sub
push
xchg
loope
lahf
popf
lret
fsubrl
pusha
jno
jb
xchg
ljmp
jmp
xchg
aam
stos
lods
cmc
test
lods
push
mov
push
add
in
nop
adc
cmp
push
jb
dec
rcll
jbe
rolb
adc
in
xor
and
pop
push
lea
daa
xor
cmpsl
cmp
out
and
out
mov
hlt
lds
sub
imul
sub
adc
jns
cli
sbb
rclb
fidivrl
cmp
int3
or
lods
cmp
jle
or
adc
adc
mov
and
mov
sbb
cmp
push
mov
enter
push
cltd
pushf
mull
push
loopne
lods
mov
sbb
adc
or
les
cmpsl
or
jbe
and
push
xor
js
dec
push
dec
push
negl
or
push
lret
int3
cmp
lret
mov
or
push
hlt
pop
movsl
gs
cmp
pop
pop
mov
adc
and
sets
jns
int3
xlat
mov
cmp
inc
pop
shll
test
or
xchg
cmp
outsb
lret
std
xchg
pop
call
cmpsb
cmp
jbe
dec
dec
or
jle
mov
inc
push
mov
sbb
mov
rcrl
cmp
scas
cli
scas
pop
imul
xor
mov
cmp
ja
mov
xchg
mov
or
sub
lcall
adc
sbb
lds
or
movsb
scas
popa
fnsave
cmp
jmp
stc
dec
mov
xchg
dec
or
jno
adc
cmc
js
dec
rcl
movsb
adc
mov
pop
or
decb
xor
dec
pop
mov
out
out
pusha
mov
mov
aam
sbb
mov
repnz
xor
popf
aas
jae
lods
movaps
sti
cld
sbb
mov
adc
fisubs
orl
das
xchg
lcall
aam
or
mov
mov
call
jl
dec
push
push
loop
mov
es
and
ja
push
mov
daa
scas
xchg
jnp
or
jge
mov
mov
push
dec
sbb
sub
adc
and
push
xchg
xor
inc
add
jo
adc
pushf
mov
mov
adc
push
adc
xchg
mov
jae
clc
sub
or
cltd
xor
stc
dec
push
mov
mov
fcoms
mov
cltd
jnp
xchg
xor
sarl
cmp
adc
rcr
xor
in
mov
or
push
or
dec
or
movsl
mov
std
mov
xor
pusha
mov
cmpl
cld
cmp
popl
test
sub
adc
push
xor
nop
popa
xchg
jl
pop
xor
mov
lock
lahf
pop
or
rorl
push
mov
mov
enter
xchg
mov
mov
movsb
cmpsb
add
rclb
jl
mov
int3
adc
daa
iret
xor
xchg
jle
or
cmp
test
and
add
jnp
cltd
adc
cmpsl
adc
jmp
cmc
cmp
iret
xor
mov
iret
adc
or
pop
fistps
jp
dec
sub
imul
push
sar
xor
xchg
inc
jae
test
mov
push
insb
pushf
xchg
and
xchg
ja
mov
and
std
jge
setge
cli
cs
iret
gs
aaa
out
mov
push
cld
loope
lea
pop
and
inc
cld
mov
scas
out
xor
xor
cld
dec
pop
bound
mov
mov
sbb
inc
jo
loope
cmp
lret
jb
loop
pop
push
hlt
ss
stc
cmp
loop
dec
inc
cltd
add
sahf
inc
xorl
cs
cmpsb
inc
imul
sbbl
ss
fdivrl
mov
cmp
flds
into
nop
adc
pop
jne
shll
push
and
popw
into
push
scas
add
mov
sub
sub
sbb
xor
cmp
cmc
adc
imul
cmpb
jg
lea
sbb
mov
xor
cltd
dec
mov
and
fimull
jge
push
lods
xchg
and
sbb
xchg
ret
insl
ret
out
mov
cmp
xchg
adc
loope
popa
out
xchg
cltd
outsl
subl
sub
arpl
push
je
xchg
xor
jge
punpckhbw
cli
mov
mov
sub
xchg
fs
mov
and
and
cmpl
inc
add
ljmp
fnstenv
frstor
mov
and
sub
cmc
nop
hlt
fisttps
arpl
mov
enter
cli
les
ret
mov
in
adc
push
clc
nop
dec
mov
jle
aaa
mov
shl
jo
or
xor
mov
sub
hlt
filds
repz
out
sub
in
cmc
das
jbe,pn
mov
sub
aad
and
pop
cmpsl
add
push
movsl
mov
loope
add
cli
sbb
popf
ljmp
insl
xor
push
stos
cs
movsb
stc
mov
sbb
mov
repz
scas
negb
inc
xchg
dec
adc
inc
mov
cmpsb
xor
sub
ret
dec
xchg
and
pop
pop
xorl
mov
jp
ds
dec
stc
inc
cmc
sbb
imul
push
stc
push
jmp
or
cmp
mov
jp
push
ret
xor
cltd
and
in
xor
push
inc
adc
in
cmovge
sbb
sub
push
out
push
cmpsl
pop
pop
scas
mov
lret
cli
dec
sub
xchg
mov
xor
mov
sbbl
jnp
xor
rclb
sbb
scas
cltd
loop
cli
sbb
inc
jmp
mov
sarl
daa
or
push
lret
xor
rcrl
fwait
lcall
scas
adc
subb
clc
int
pop
add
enter
aaa
xor
pusha
mov
cmpb
push
dec
add
xor
icebp
repz
fwait
xor
sarb
lods
xchg
and
imul
enter
xlat
loopne
xchg
stos
xchg
dec
arpl
out
mov
cmp
mov
jno
js
jge
mov
inc
xchg
adc
xchg
or
cltd
popa
in
gs
mov
out
bound
sub
call
rcll
pop
dec
jnp,pn
loope
aam
inc
cmp
mov
sbb
sub
xchg
scas
ret
dec
int3
into
repnz
push
dec
inc
xlat
adcb
mov
inc
mov
loope
mov
pop
or
and
and
xchg
push
adc
pop
mov
jo
scas
das
sbb
fcomi
xchg
lahf
push
int
dec
hlt
sub
jmp
mov
xchg
mov
mov
mov
xlat
mov
fs
inc
repz
mov
lret
arpl
mov
jl
push
mov
xchg
inc
das
cld
dec
bound
and
add
mov
jmp
cmp
or
cmp
inc
shr
xor
inc
sub
mov
xchg
mov
insb
adc
mov
jecxz
cmpsl
jno
mov
sub
popa
out
daa
movsb
mov
int3
pusha
shlb
cmp
in
push
pushl
xlat
sub
push
jmp
dec
pushf
mov
and
cmp
adc
push
cmp
leave
jnp
mov
movsb
sub
mov
in
outsl
lea
sbb
or
hlt
mov
pop
jae,pn
or
pop
sbb
mov
mov
xor
pop
jl
xor
mov
and
mov
in
mov
xlat
push
sub
inc
stos
pop
cltd
outsl
cli
push
or
lcall
outsl
pop
in
jbe
mov
push
jp
sbb
and
sub
shrl
mov
jne
adc
xchg
popf
push
xlat
insl
enter
sub
cmp
sbb
test
lcall
sbb
push
mov
pushf
in
lret
mov
or
aam
fidivs
cwtl
xchg
sub
cltd
loope
loope
xor
cmpsb
sbb
xor
jo
add
int3
adc
inc
cmp
mov
add
mov
or
inc
lcall
jmp
push
mov
mov
cli
push
sub
push
push
or
leave
dec
fwait
stos
outsb
iret
xor
dec
cmpsl
dec
pop
movsl
xchg
pusha
cwtl
add
sbb
bound
ret
notl
rcll
mov
inc
imul
insb
aad
popf
cmp
fcmovnb
fxch
cmpsl
lea
xor
sahf
nop
sub
insl
pop
movsb
mov
inc
pop
pop
rcl
dec
popf
mov
fucomp
push
std
and
bound
pop
sub
xchg
mov
jle
mov
cmp
arpl
pop
inc
inc
mov
and
mov
ret
fs
iret
sarl
imul
fsubrs
and
lcall
outsl
dec
xchg
mov
in
in
pop
sbbb
mov
or
sub
pop
icebp
inc
inc
sarb
xchg
mov
adc
sbb
rcrl
adc
adc
shll
mov
mov
mov
fdivs
imul
mov
add
xchg
sub
xor
pushl
xchg
imul
into
cmpl
sub
lcall
bound
dec
test
add
pop
scas
jno
mov
xor
sub
cvtdq2ps
sbb
pop
push
sarl
insl
cmpsb
ret
or
xchg
or
mov
pslld
dec
jnp
fnstcw
cmc
sbb
popf
mov
mov
stos
xor
subl
sub
jmp
jne
scas
and
out
xchg
sbb
aam
ja
ret
outsb
aam
test
lret
adc
rcll
push
jbe
cltd
cwtl
je
scas
ds
test
ret
imul
shrl
mov
cmpsb
addr16
mov
and
test
shl
add
test
mov
mov
mov
and
add
inc
xchg
push
popf
xlat
push
or
xchg
mov
jb
cmc
add
mov
inc
je
xchg
pop
or
or
jb
xchg
cmc
repnz
lcall
jmp
and
outsb
enter
and
adc
mov
cs
mov
rclb
lds
fnstcw
test
cmp
lret
enter
cld
adc
mov
mov
add
sub
xchg
ljmp
outsl
jne
lret
imul
test
cmp
out
pop
iret
outsl
add
adc
pop
xchg
push
aaa
sub
mov
sbb
push
fimull
sbb
inc
insl
push
icebp
aad
in
and
jae
dec
sbb
icebp
xor
adc
lret
loope
lods
cmp
xchg
or
add
sbb
subb
mov
lret
cmpl
outsl
jae
jg
out
and
and
or
adc
cltd
jmp
loope
mov
test
mov
movsl
pop
fwait
pop
out
mov
mov
aas
mov
xchg
jb
mov
sub
dec
repz
add
outsb
gs
scas
push
or
fsubrs
xchg
mov
movsl
imul
push
or
lea
hlt
push
push
imul
xchg
xchg
mov
imul
xchg
fwait
cmc
xchg
push
mov
fstp
repz
fdivp
in
test
leave
cmp
push
xchg
adcb
cmp
mov
lcall
xchg
fsts
adc
out
std
jnp
xor
adc
lret
aas
js
mov
out
jmp
jmp
test
pop
dec
mov
mov
push
pushl
mov
xor
push
push
dec
loope
out
or
lahf
or
mov
push
mov
cwtl
jmp
adc
out
mov
je
dec
push
daa
inc
mov
mov
push
mov
std
mov
xchg
add
test
or
or
movsb
mov
sub
test
dec
xchg
mov
lods
dec
fisubs
pop
push
scas
daa
pop
fiadds
loopne
adc
ds
jno
mov
cwtl
dec
xchg
jno
mov
jb
pop
loopne
push
fsts
aaa
add
push
pop
add
jle
es
add
scas
push
outsb
jmp
icebp
nop
or
push
jl
pop
pop
adc
outsb
lcall
int
btc
or
xor
xor
aaa
push
and
aaa
dec
repnz
dec
out
and
imul
xchg
push
je
xchg
mov
add
mov
cwtl
imulb
jge
das
push
jnp
pop
leave
mov
sub
cmc
loop
pop
in
sbb
nop
push
xchg
in
ljmp
adc
sub
inc
mov
orb
leave
imul
jb
mov
dec
movups
mov
xchg
les
mov
add
cmc
repz
loopne
pop
xor
repz
mov
and
rorb
adc
inc
sub
xor
or
push
xchg
adc
mov
dec
out
outsb
nop
cld
lea
in
adc
jae
aad
out
shll
and
mov
dec
iret
push
sbbb
lahf
push
test
inc
sub
stos
and
inc
add
cs
sbb
or
iret
addb
or
fucomp
mov
bound
cmpsl
movsl
adc
iret
cltd
cmpsl
mov
insb
cmp
mov
mov
sarl
insb
push
adc
cmp
iret
push
and
jp
popl
push
notl
mov
lret
je
dec
aad
or
mov
dec
out
mov
and
mov
loope
hlt
inc
adc
loop
scas
jnp
dec
dec
mov
sub
xchg
push
ss
mov
adc
push
push
hlt
inc
jmp
xlat
andb
cmp
cwtl
dec
xor
push
pop
ret
lods
or
dec
adc
stc
ljmp
jge
fs
out
cwtl
jl
dec
sbb
and
and
femms
or
stos
stc
stos
insb
ret
pop
xchg
push
xchg
pop
call
cmp
rorb
movsl
aad
push
push
dec
es
push
icebp
jb
int3
push
or
push
fldl
pushf
push
stc
push
mov
mov
mov
jnp
and
sbb
lock
sbb
and
jg
mov
aaa
and
mov
lret
mov
repz
mov
adc
insb
sub
pushf
mov
mov
sbb
ja
lds
xor
subb
jg
mov
add
mov
and
xchg
or
mov
jno
or
and
je
mov
jp
rcll
scas
xchg
pusha
sahf
sub
fidivrs
or
jb
cmp
adc
sbb
mov
inc
mov
sub
jne
mov
pusha
mov
cmp
sub
mov
repnz
dec
push
fists
stos
insl
mov
dec
dec
popf
popa
aad
jmp
lret
xchg
mov
nop
clc
ret
cmp
mov
mov
push
sub
push
mov
inc
stos
or
fmuls
mov
xchg
jno
cmp
add
cmp
push
dec
xchg
dec
push
push
mov
inc
sub
adc
test
xor
xor
pop
test
loop
lcall
pop
cs
je
lahf
mov
int3
dec
or
push
imull
and
pop
mov
insb
adc
xorb
test
out
stos
mov
push
sbbb
out
mov
jno
fnsave
mov
jb
mov
mov
mov
outsb
mov
jno
movsb
sti
in
sub
or
popf
push
ds
lea
jge
push
mov
inc
mov
add
pop
pop
push
pop
aad
push
xor
pop
sbb
sarb
push
lea
gs
dec
mov
jae
pop
bndstx
mov
repz
fmul
xor
jl
jle
imul
shrl
mov
rorb
jge
ds
scas
mov
lret
dec
insl
push
adc
clc
jbe
out
mov
mov
sti
clc
sub
rcrb
loope
dec
push
das
sub
popf
shlb
dec
mov
adc
mov
mov
push
lcall
mov
sbb
mov
adc
sub
push
dec
xor
cmp
lea
mov
repz
xor
sub
xchg
jmp
in
sub
insl
xor
arpl
in
inc
mov
pop
xchg
loope
ja
cltd
or
mov
cwtl
lock
cmpb
ret
jbe
sbb
outsb
push
mov
shrl
in
addr16
cmp
sub
imul
imul
mov
mov
decb
in
cmc
xchg
adc
adc
aaa
or
pop
pop
sbb
push
inc
sbb
push
outsb
hlt
xchg
aaa
jge
imul
repnz
sub
add
fcmovnu
pmaddwd
or
inc
mov
xchg
hlt
lcall
das
nop
adc
jle
cli
dec
mov
sbb
push
sbb
outsb
iret
pop
jnp
cld
enter
xor
adc
not
testb
nop
dec
xor
pop
push
xor
cs
decl
jae
fs
sahf
sub
lcall
mov
mov
lds
add
adc
xchg
pop
and
push
xchg
sbb
mov
xor
pushl
rsqrtps
pop
mov
daa
cli
popf
mov
test
lcall
packssdw
pop
sub
cmc
out
cld
pop
add
lret
push
pop
jno
cli
xor
push
xchg
cwtl
mov
pop
mov
adc
mov
pop
push
xchg
xchg
sub
fwait
xor
mov
mov
cwtl
ss
sti
sub
xchg
xor
mov
je
daa
add
out
push
nop
push
cwtl
loopne
dec
jmp
jge
xchg
mov
test
shrl
xchg
dec
cmpsl
jg
pushf
adc
and
inc
jno
ficoms
inc
push
out
jnp
inc
or
sub
dec
pop
rcl
ret
cmp
jmp
lods
stc
sarl
cmp
jnp
outsb
ja
push
or
das
inc
shrl
fsubrl
fcompl
mov
xchg
rcrl
ret
jle
xchg
mov
repz
roll
xchg
int
jnp,pn
dec
int3
pushf
mov
popa
outsl
popl
hlt
xchg
repnz
ret
hlt
scas
fcoml
ret
jno
into
mov
loope
and
inc
mov
cltd
ljmp
dec
das
out
imul
cmp
push
sbb
xor
mov
fdivl
and
cmp
mov
mov
xor
negb
inc
xor
repnz
scas
fprem1
pop
xor
cwtl
stos
jmp
fiaddl
imul
inc
mov
or
push
xor
fstpl
je
in
inc
icebp
sub
gs
sub
or
insb
rol
scas
xchg
fldenv
pop
pop
jmp
jle
mov
xor
add
push
outsl
lds
or
pop
push
mov
and
mov
jle
or
xchg
lcall
xor
dec
mov
out
lcall
repnz
addr16
or
repnz
pop
bound
xchg
notb
sbb
das
loope
xor
stc
stos
mov
mov
xchg
mov
ljmp
test
cmp
aam
mov
jae
lahf
cwtl
enter
xchg
mov
stos
mov
or
adc
adc
adc
pop
popl
jp
sub
xchg
sub
mov
jg
mov
imul
pop
insb
and
cmc
push
mov
jg
in
repz
jmp
sarl
pop
mov
out
sub
cld
adc
xchg
popa
mov
cmp
cmp
cmp
and
cli
inc
insl
jne
push
adc
pop
lahf
pop
ret
push
loope
dec
cmp
mov
jno
test
shll
lods
lret
pusha
sbb
xchg
stc
jo
inc
push
adcb
insb
outsb
sub
pushf
or
cwtl
addr16
push
mov
mov
sub
es
mov
sub
lcall
lea
lret
jmp
inc
cmpsl
xchg
sti
shll
or
add
cmpl
xor
mov
cltd
fnstsw
jne
xchg
out
pushf
js
push
xchg
cmc
mov
push
mov
adc
mov
test
mov
jmp
movsb
and
mov
xchg
sub
xchg
and
jae
scas
adc
test
inc
imul
andb
fdivs
fstpt
nop
dec
ljmp
xor
and
cmp
test
incb
or
jmp
shll
mov
fisubs
sbb
cmp
or
mov
push
cmp
lahf
aam
stos
inc
js
xlat
inc
fnsave
cmp
cmpsb
jge
xchg
cs
xchg
jns
into
cwtl
scas
mov
test
and
mov
fisttpl
lods
bound
adc
push
pusha
xor
mov
jb
pop
ret
fcmove
xorl
aad
mov
mov
jp
das
gs
imul
xor
xchg
dec
inc
cmc
sbb
xchg
ds
or
cli
fwait
or
dec
push
xor
inc
jmp
cmp
movsl
add
adc
mov
xor
aaa
mov
add
xor
add
rcrl
sbb
sub
bound
inc
cmp
or
in
das
xchg
jl
mov
fmuls
mov
dec
sub
aas
out
adc
pop
cmc
xchg
out
mov
dec
fsubrl
insb
movsb
xor
inc
insl
adc
ficompl
xchg
xchg
xor
les
scas
movsb
sbb
jae
sbb
lahf
mov
pushf
out
mov
lock
and
out
push
cld
fcoml
outsl
ficomps
jle
and
inc
fsubr
inc
fwait
aam
and
mov
jae
pop
mov
and
or
mov
jno
and
shl
pushf
repz
jg
add
pop
or
rclb
fbstp
lcall
ss
xchg
jmp
mov
xchg
jno
jae
ficoms
negl
pop
add
aas
jl
push
mov
mov
adc
add
mov
cld
push
xor
add
in
dec
mov
int3
inc
xchg
cli
pusha
mov
adc
cmpsl
inc
mov
push
fsubrl
pop
push
fmull
cmp
and
xchg
stos
insb
push
clc
leave
pop
dec
mov
and
sub
add
mov
mov
xchg
mov
inc
ficoml
xchg
xchg
inc
jp
cwtd
popa
fcmovnu
and
aam
or
sub
das
insb
nop
mov
mov
adc
loope
rclb
mov
test
repz
rolb
jae
mov
push
mov
sbb
inc
enter
test
arpl
cs
in
xchg
or
push
or
pop
mov
repnz
jns
cmp
int3
dec
pop
cmc
fiaddl
daa
jle
sub
add
das
jo
sub
test
mull
or
sbb
sbb
jno
or
xchg
dec
adc
push
mov
subl
lcall
mov
fdiv
lahf
daa
push
aaa
mov
inc
mov
aaa
inc
xchg
hlt
js
dec
jb
sbb
rcrl
ret
jmp
pushf
xchg
scas
cmc
mulb
jae
and
jbe
stc
cmp
ljmp
bound
push
addb
je
pop
dec
std
scas
push
sti
adc
xchg
mov
lret
mov
sub
bound
dec
mov
dec
aam
mov
xchg
shrl
xchg
dec
es
push
mov
decb
fldenv
xchg
and
mov
aaa
enter
addb
add
je
jb
push
outsl
push
or
adc
jp
and
cwtl
out
pop
sar
mov
lret
sbb
mov
jl
lret
mov
lcall
outsl
in
jecxz
mov
jmp
cli
mov
inc
adc
lret
int3
or
cs
mov
orb
or
adc
imul
ljmp
push
add
mov
jo
hlt
pop
nop
sbb
idivb
in
jnp
int
fsubrl
repz
dec
and
lfs
add
xchg
rcrb
sub
jno
mov
pop
sub
in
into
dec
fsts
mov
inc
sub
lcall
pop
and
mov
cltd
jp
sbb
sbb
sahf
shr
mov
mov
add
les
repnz
pop
jae
dec
das
sti
aaa
in
mov
and
sahf
lahf
sbb
jne
mov
and
or
mov
mov
adc
and
jno
dec
pop
jo
outsl
pop
or
xchg
js
pop
int3
rcrb
xor
jo
ja
dec
insl
es
cltd
add
in
or
push
call
xor
pop
mov
xchg
xchg
mov
mov
fsubr
je
testb
call
sub
xor
in
aam
arpl
ds
pop
dec
dec
xor
pop
adc
or
pop
aas
out
add
jbe
adc
hlt
add
cmp
lcall
outsl
or
stos
daa
mov
add
sbb
hlt
cmp
mov
imul
adc
cwtl
iret
or
jo
fidivl
nop
push
sub
xor
push
push
sub
lods
fisubrl
aad
je
xor
rcr
xchg
imul
inc
mov
mov
loopne
cmpsb
int3
fwait
pop
or
jne
push
outsl
sbb
iret
loop
fwait
aam
xor
aad
xchg
jl
into
cmp
cs
jae
xor
cltd
push
fmull
xor
add
lds
xchg
or
cmp
add
and
push
and
jmp
sub
fsubrs
repnz
or
fistl
push
sbb
stos
push
add
outsl
sbb
or
int3
ljmp
mov
jp
xchg
lcall
in
roll
xchg
push
insb
mov
jns
xor
mov
sbb
pop
lock
fwait
nop
ja
jo
push
xchg
or
pop
outsl
mov
sub
dec
xor
xchg
xchg
cmpsl
jp
xor
insb
ja
or
or
push
mov
inc
jmp
jmp
loope
push
int3
push
or
test
mov
sub
rcrb
push
sub
sub
bound
roll
lods
call
dec
in
mov
cmp
inc
adc
push
jns
shrb
jno
mov
repnz
mov
dec
adc
cmp
stos
jb
or
sbb
rorl
jle
dec
inc
mov
lcall
jb
fsubrs
mov
cmp
fiaddl
mov
aam
xchg
cmp
sub
push
push
rcrl
cwtl
jmp
mov
or
cmp
inc
dec
fxch
inc
xchg
xchg
out
clc
scas
cmp
cmp
push
fcomps
daa
pushf
dec
cmp
inc
ss
inc
cmp
or
mov
fsubrs
call
leave
add
push
pop
xchg
fldcw
aam
xor
mov
mov
adc
outsl
sbb
add
ljmp
or
imul
jb
xlat
mov
gs
mov
lea
stos
cmp
and
sub
sbb
into
or
xchg
fs
mov
inc
dec
push
adc
dec
insb
andl
cli
test
fcomps
cmp
cmp
lods
rcrl
sub
aad
rorl
adc
nop
paddsb
in
jnp
inc
pop
nop
dec
push
and
arpl
mov
repz
xchg
popl
in
push
push
or
les
or
mov
push
aaa
mov
push
jb
es
mov
and
enter
outsl
sub
jmp
outsl
cmpsl
imul
pop
lea
xor
mov
scas
xchg
push
dec
mov
leave
cmpsb
aam
int
jmp
sub
cmp
jmp
sbb
xchg
orl
jge
in
add
push
dec
or
cltd
pusha
movsb
pop
push
adc
adc
mov
popf
lret
push
nop
xorb
popf
adc
sbb
in
inc
xchg
int
adc
mov
fidivl
aad
inc
pop
testl
hlt
fsts
mov
call
xor
adc
push
mov
imul
repz
out
inc
gs
or
out
inc
pop
xchg
aad
sbb
push
mov
pop
jle
adc
insb
or
push
aam
outsb
enter
dec
or
daa
jno
aaa
enter
or
mov
push
mov
lea
xor
inc
stc
adc
dec
adc
mov
cld
adc
sbb
jle
or
dec
sub
xchg
pop
xor
lock
popa
and
xchg
or
mov
adc
mov
jp
adc
xchg
adc
shrb
hlt
add
mov
xchg
adc
sbb
mov
in
pop
push
bound
or
xchg
mov
dec
lea
mov
mov
adc
outsl
xchg
rcll
adcb
pop
jge
sar
das
jl
lret
mov
insl
dec
sarl
sub
stos
jns
fwait
adcb
xchg
mov
cmp
or
push
adc
pusha
and
add
lcall
sti
sbb
push
stos
mov
hlt
scas
fs
lret
mov
fcmove
cmc
rol
cmp
shlb
daa
iret
dec
mov
push
mov
imul
sbb
and
jno
cltd
mov
sbb
and
mov
in
inc
addr16
xor
sub
adc
push
xor
adc
scas
popl
pop
sahf
xchg
cmp
pop
scas
pusha
and
repnz
sub
push
mov
pusha
pop
repz
jns
rorl
movsl
dec
xor
daa
insb
mov
arpl
jne
xchg
xchg
std
or
jno
jae
lcall
sub
lods
vprotw
aad
cmp
fmuls
sub
stc
xchg
mov
xor
addl
sub
mov
das
push
or
dec
insb
push
cmp
push
jle
outsl
add
jp
mov
fbld
repz
pop
mov
mov
cmp
inc
ja
pop
jp
inc
in
push
cmpsl
out
or
mov
lret
xor
outsl
xor
enter
or
mov
mov
or
push
lret
mov
sti
lods
adc
lods
cmp
shl
frstor
xchg
fisubrl
sbb
xchg
push
push
xor
dec
outsb
mov
xor
inc
addr16
lcall
fs
jg
sub
cmp
or
jb
addb
nop
fdivl
ret
mov
fstps
dec
xor
and
data16
pusha
dec
adc
inc
jmp
repnz
sbb
addr16
das
dec
test
enter
mov
insb
dec
push
mov
jnp
push
pop
dec
adc
fwait
pop
push
mov
adc
call
cwtl
bnd
int3
sbb
inc
sbb
sarl
mov
push
sbb
fcoml
jl
push
and
xchg
mov
dec
lods
adc
cld
mov
insb
inc
push
inc
adc
xor
xor
andl
es
lods
out
lret
xor
int
rorb
in
fprem
xor
or
out
or
adc
mov
dec
dec
sbb
cmp
mov
sahf
shl
in
shll
insb
outsl
scas
cmp
xchg
jl
mov
es
out
push
pushf
push
std
jle
insl
or
mov
rcrb
nop
jg
jl
outsb
mov
ret
push
pop
push
sbb
sub
das
adc
dec
pushf
xor
outsl
cmpsb
leave
psubsw
je
pop
aad
mov
cs
push
cmp
ljmp
add
fnstcw
pop
lods
and
xchg
or
jmp
push
call
cltd
sbb
shll
sbb
jmp
push
int3
cld
push
mov
addr16
mov
mov
adc
cmp
imul
cmovnp
xor
cmovle
cld
inc
cmpsl
cmp
arpl
adc
mov
insl
ret
out
outsb
cmpsb
and
sbb
pop
xor
scas
push
notb
jae
dec
faddl
std
adc
dec
push
adc
jae
cmc
mov
repz
out
lds
adc
mov
mov
lds
inc
sub
push
jp
or
xchg
mov
pop
fisttpl
push
idivb
lret
popa
ljmp
jmp
aaa
adc
lret
mov
pop
mov
inc
movsl
mov
push
daa
lods
mov
std
cmp
pop
fs
xchg
adc
and
ljmp
decl
rorl
xor
ucomiss
sub
xchg
in
ror
pop
push
xor
mov
adc
stos
iret
or
shll
test
subl
adc
inc
stc
mov
mov
xchg
pop
xchg
lret
loope
mov
or
aam
repnz
jno
cmp
je
sbb
ljmp
scas
ljmp
in
dec
sub
jecxz
push
jb
pushf
hlt
lret
ja
inc
fwait
push
loope
dec
pop
cmp
cmp
mov
lcall
fstpl
xor
cmp
cmp
xchg
add
call
out
sub
mov
int3
jno
cwtl
loope
mov
jb
adc
push
rolb
stc
dec
rorb
cmp
or
scas
in
jmp
sbb
sub
orl
mov
daa
adcb
or
jae
loopew
pop
mov
mov
xchg
jmp
ret
xchg
sub
sbb
cmp
cmp
in
fcompp
push
cs
mov
lods
sbb
fcoms
leave
pusha
ja
and
sub
xor
addr16
data16
inc
daa
fnstenv
insb
jnp
fcmovbe
or
or
mov
push
cmp
popa
jp
repz
call
cld
pop
xchg
mov
adc
xor
and
mov
push
sbb
or
jge
adc
je
outsl
and
in
divb
std
movsl
fdivs
dec
mov
inc
rcll
pop
shl
aaa
jb
inc
lea
sti
popa
pop
dec
pop
int3
cmp
dec
arpl
stos
xchg
test
popa
adc
jg
and
inc
pop
adc
jmp
lea
mov
mov
push
out
cwtl
sub
pcmpgtd
jno
and
loopne
mov
sub
jb
mov
lahf
insb
roll
inc
push
push
daa
mov
xor
pop
cmp
sahf
clc
fimuls
enter
mov
cmpb
dec
xor
add
aam
les
push
xchg
xor
and
fs
or
jl
sti
nop
aam
fisttpl
frstor
adc
mov
inc
es
ljmp
js
repz
fwait
clc
incb
mov
pop
push
jnp
clc
mov
mov
push
lock
inc
addr16
xor
scas
jns
rep
dec
jb
push
sahf
add
push
adc
fimull
inc
iret
mov
dec
pop
push
aaa
jns
jle
imul
xor
incl
testl
xchg
aaa
dec
out
ja
xchg
inc
imul
stos
xor
in
fiaddl
out
mov
jno
xor
sahf
rorl
das
adc
outsl
in
add
dec
push
mov
dec
jno
mov
outsl
inc
mov
jmp
or
pop
in
enter
inc
es
and
mov
outsl
or
push
std
push
sub
xchg
test
jns
cmp
loop
loope
subb
jae
enter
lahf
scas
xor
add
push
jo
loop
ret
jg
arpl
push
mov
out
dec
mov
ljmp
sub
xchg
jmp
jge
push
push
cmp
stc
mov
lods
dec
dec
xor
cmp
mov
dec
aaa
sbbl
lds
push
mov
andb
add
cmp
xchg
rclb
fcompl
mov
pop
and
dec
mov
adc
mov
sbbl
xlat
loopne
mov
push
dec
mov
inc
mov
add
adc
dec
rolb
int3
dec
pop
out
push
adc
bsr
mov
push
push
lds
sbb
test
lods
lcall
push
pop
lea
jns
xor
pop
pop
cmp
mov
dec
sti
in
aaa
dec
scas
cs
mov
and
xchg
fmuls
mov
or
pusha
mov
and
dec
mov
stos
cmp
adc
add
push
mov
or
mov
and
insb
add
sub
test
and
mov
push
pop
in
or
xchg
insl
jge
mov
shl
push
sbb
cmp
mov
cmp
xorl
jae
dec
mov
push
dec
adc
adc
xchg
jns
sbb
cmp
repz
sbb
sti
xchg
mov
sbb
adc
mov
xchg
sbbl
xchg
mov
ficomps
jno
adc
add
cmc
dec
sahf
lret
xlat
vandnps
jno
aad
mov
mov
out
pop
daa
mov
leave
mov
sub
std
or
inc
jnp
sub
sbb
xor
mov
test
pop
fdivl
push
in
fldz
inc
movsb
push
adc
sarl
call
mov
mov
ficompl
cmp
cwtl
mov
sub
add
xor
jecxz
pop
jmp
jb
arpl
adc
cmovp
push
sbb
mov
imul
xchg
xor
mov
xlat
imul
add
sbb
loop
mov
dec
sub
pop
stos
fwait
add
adc
push
xor
stos
insb
mov
in
adc
lods
mov
icebp
xchg
mov
jo
and
pop
push
sbb
sbbl
into
xchg
sti
fs
fsubl
sbb
mov
leave
ss
outsl
push
push
and
bound
mov
lret
jecxz
sub
cmp
les
mov
ja
add
pop
xchg
add
repnz
cmp
rorb
aam
and
stos
subl
and
dec
repnz
sahf
ret
pop
inc
cwtl
cmovl
dec
push
or
mov
and
xchg
mov
jp
nop
push
adc
sbb
in
jmp
fsubr
lahf
mov
sbb
or
xchg
rclb
or
cld
mov
rorl
mov
ret
leave
inc
lods
mov
or
rorb
mov
movsl
adc
or
ja
mov
xlat
out
mov
xchg
jnp
test
cmp
and
std
hlt
aam
movsl
or
mov
aad
mov
sahf
mov
adc
shlb
xchg
popa
mov
jno
fldcw
out
test
inc
add
xchg
push
jno
cld
adc
cmp
push
bound
push
fstps
sbb
scas
je
xchg
pop
or
push
repz
movsb
movhps
adc
jno
inc
push
or
cld
std
mov
es
mov
sti
ja
jmp
fs
pop
stos
jno
stc
adc
mov
dec
push
mov
sarl
stc
mov
test
xchg
stc
sbb
sub
pop
sarb
bound
push
push
mov
loop
pop
dec
and
lahf
cmp
dec
testb
adc
shrb
bound
mov
and
pop
fstps
push
inc
pop
ds
cmp
aad
jne
stos
dec
push
or
cmpsb
fdivrs
subl
clc
jge
enter
lahf
mov
push
push
xor
xor
bound
push
das
push
enter
push
sub
lock
push
insl
push
stos
cwtl
scas
pop
push
cmp
stc
or
cwtl
pop
mov
xor
jnp
cmc
int
fsub
mov
cmp
bound
mov
cli
dec
fnstcw
xchg
hlt
out
sbb
push
jmp
test
dec
cwtl
cmovb
cmp
xchg
pop
lods
mov
out
mov
mov
pop
sbb
scas
dec
stc
sbb
dec
sar
pop
pop
cmp
and
cs
inc
out
xchg
lret
push
dec
push
idivl
adc
cli
push
cmp
xchg
mov
xchg
pusha
stos
and
fs
push
push
push
inc
stos
pop
cs
pop
rclb
mov
xor
insl
cltd
and
add
jle
out
cltd
xchg
or
xchg
push
pop
ret
or
jo
add
or
xlat
mov
jp
stc
out
fmulp
jmp
in
dec
sub
mov
mov
push
dec
out
jl
pushf
inc
mov
push
jo
mov
test
inc
xor
push
out
lcall
nop
or
sub
sbb
xor
sahf
dec
repnz
adcl
adc
jno
push
mov
dec
xor
adc
into
cld
and
cmp
out
insl
mov
mov
js
aaa
in
pop
dec
jmp
push
jne
or
mov
adc
sub
rcrb
daa
in
icebp
inc
add
or
jl
push
xlat
mov
pushf
mov
cmp
hlt
jno
xor
stc
ljmp
or
add
push
in
das
cmp
dec
sub
lea
fs
sub
mov
test
mov
loop
int3
ds
aaa
imul
ror
sarl
xchg
stc
scas
push
push
dec
push
push
add
push
sub
xchg
add
stos
sar
mov
inc
push
push
mov
sub
sbb
sub
mov
clc
cmp
mov
mov
add
dec
mov
aaa
mov
lods
pop
rcll
movsl
cmp
daa
mov
dec
lret
fidivrs
and
sbb
sti
push
cltd
cmp
jae
xor
add
push
mov
aas
les
mov
movsb
out
ds
lea
test
stos
jnp
test
xor
push
stos
daa
cmc
jne
repz
adc
or
pop
cwtl
dec
inc
clc
xor
or
xor
cmc
xor
shrl
add
scas
stos
mov
lock
stos
jo
mov
fimuls
repz
test
fadd
loopne
cmp
add
popa
xor
andb
fimuls
pop
adc
nop
ffreep
adc
icebp
aad
mov
fbstp
stos
push
jb
pop
mov
rcrb
inc
cld
push
mov
pop
outsb
imul
xor
and
xchg
and
sti
rol
cmp
sti
lea
push
xchg
lock
iret
sbb
mov
das
mov
nop
pusha
mov
sbb
xchg
hlt
loopne
push
ljmp
cwtl
add
flds
inc
jp
dec
mov
aas
int
jl
mov
push
adc
dec
push
mov
dec
or
or
fs
or
jae
es
and
add
pop
xor
sub
cltd
popf
sub
ds
out
lret
xchg
lret
adc
insl
dec
mov
add
mov
push
mov
subl
testl
pop
adc
mov
mov
into
push
and
mov
daa
adc
lods
and
adc
jg
mov
jg
cmp
jb
pop
mov
sarb
pop
addr16
popf
cmp
xor
subb
push
jne
lret
pop
add
cltd
adc
out
leave
movsl
push
rcll
fsts
jo
add
pop
mov
das
out
push
pop
cmc
flds
sti
shll
test
call
push
xor
push
sbb
cltd
test
dec
inc
inc
sub
adc
jns
aas
scas
adc
test
pop
jae
mov
je
sbb
add
sub
decb
xor
popw
cmp
jo
pop
repz
clc
dec
sbbl
not
sub
clc
int
repz
inc
out
lea
jmp
fldcw
mov
cmp
mov
xchg
mov
imull
sbb
adc
cli
cmp
jecxz
xchg
mov
mov
xchg
push
pop
es
pop
dec
jno
imul
cmp
jecxz
push
cmp
sub
fldl
xchg
push
subl
and
pop
popf
dec
mov
inc
incl
in
out
inc
nop
daa
xor
jl
or
mov
inc
popa
push
or
mov
mov
or
pushf
sbb
nop
push
and
int3
inc
out
mov
xor
aad
fs
addb
aam
cwtl
int3
leave
in
cli
rcll
jno
adc
lea
add
xchg
cltd
fdivp
jmp
fs
out
sarl
or
in
mov
lret
mov
cmp
dec
out
adc
and
jo
jae
mov
add
fwait
jp
adc
cmp
movsl
pushf
cs
jae
imul
push
sahf
shr
out
fldlg2
fwait
mov
adc
pop
jae
inc
or
iret
stc
inc
pop
xchg
mov
insb
call
sarb
jmp
mov
add
arpl
or
stos
sbb
es
sub
xor
mov
sbb
rcrb
adc
jp
pop
and
xor
int
cmc
xor
lcall
aad
add
iret
out
rcrl
jmp
sub
pop
into
mov
aad
inc
addr16
mov
inc
fcompl
jecxz
repnz
sub
out
out
mov
jo
ja
jle
add
xor
pop
repz
inc
fcomp
mov
dec
adc
inc
aam
cmc
sbb
insb
push
ss
push
mov
xchg
cmpsb
adc
mov
sbb
sbb
and
cmp
push
std
dec
rcrb
movb
jle
cs
sbb
lea
xor
adc
loope
cs
leave
cli
xor
nop
out
lea
sbb
xchg
sbb
dec
mov
or
xor
inc
mov
mov
adc
stc
imul
cmpsl
fnstcw
jnp
cs
mov
popa
pop
and
ljmp
cltd
push
mov
movsl
sbb
hlt
dec
and
jp
test
sub
aad
jl
xchg
stos
add
xchg
gs
loope
inc
push
mov
es
outsb
mov
bound
mov
xchg
test
lret
inc
movl
push
jne
enter
je
xchg
iret
xor
xchg
mov
add
add
xlat
je
sbb
into
outsl
inc
push
adc
dec
and
sub
xchg
push
clc
adc
xchg
or
fxch
mov
inc
dec
pop
arpl
mov
mov
mov
or
push
sbb
rcrl
xor
lds
pop
seto
into
mov
xchg
outsl
or
and
mov
cmp
xchg
fnstcw
cs
cld
cmpsl
dec
mov
inc
sub
jmp
movsb
xchg
mov
wrmsr
shrb
or
inc
xchg
mov
add
test
dec
fnsave
adcl
inc
rorb
ret
lret
adc
push
xchg
fisttpl
aas
or
sub
push
push
and
dec
push
inc
movsl
rorb
xchg
mov
mov
jae
mov
andl
cld
ret
push
cmp
scas
popf
pop
push
lret
imul
mov
sbb
in
lret
mov
cmpsb
into
xchg
sbb
dec
stc
sub
add
fmull
popf
es
push
cmpsb
jmp
rclb
fcoms
hlt
test
add
push
pop
loop
sub
adc
cmp
push
xchg
xor
jmp
into
sub
enter
jns
adc
lods
xchg
cltd
cli
mov
xor
lock
mov
rcrb
inc
mov
push
shl
cmp
mov
or
or
mov
adc
fs
sbb
push
fcmovnb
cmp
adcb
adc
push
push
mov
push
adc
stos
sarb
inc
lret
dec
push
dec
cmp
call
fcom
push
cltd
repz
lcall
push
insb
popf
in
push
lock
xchg
push
cmp
mov
sub
sub
adc
xchg
push
cs
xor
outsl
mov
cmp
mov
dec
loopne
loope
jno
jmp
push
mov
xchg
cmp
mov
clc
add
mov
xor
sbb
out
fdivrl
jne
les
ja
mov
adc
jmp
pop
scas
movsb
push
sub
xor
push
nop
mov
sbb
or
xchg
jae
jns
lds
and
xor
cwtl
scas
cli
jno
push
sub
cli
dec
jmp
push
xchg
xchg
jp
mov
adc
xchg
push
sbb
jmp
cld
push
lea
shlb
push
cwtl
rcl
adc
inc
sub
aas
and
jge
pop
lods
or
jge
enter
add
xchg
dec
mov
nop
mov
iret
nop
dec
mov
jae
mov
add
dec
repnz
enter
and
mov
test
int
scas
or
and
popf
pop
pusha
das
push
push
loopne
mov
mov
dec
rclb
fmul
mov
adc
jmp
dec
jmp
inc
sahf
xchg
jmp
jb,pn
cmpsb
rcll
aad
repnz
repnz
dec
cmp
cmp
xchg
lods
inc
lods
aad
add
jnp
xor
mov
pop
ds
aam
mov
push
adc
push
mov
jnp
sub
lods
cmp
pop
sbb
sbb
cmp
adc
imul
sahf
out
lret
push
xchg
jo
icebp
push
jmp
fdivs
sub
mov
in
dec
inc
mov
pop
push
xor
lret
push
add
pop
push
lret
and
filds
dec
int
inc
mov
jecxz
fisubs
cmp
xlat
dec
test
mov
out
sub
loopne
outsl
sub
pop
int3
orb
pop
sti
adc
xchg
mov
outsl
adc
sub
push
sarb
or
xchg
push
push
xchg
jbe
dec
lret
sbb
dec
popa
sbb
push
cwtl
outsb
or
bound
pusha
pop
stos
fildl
orl
nop
cmp
arpl
cmp
xchg
movsb
push
and
pusha
popa
xor
int
callw
in
mov
icebp
cld
dec
sub
cmpsl
push
shrl
lds
pop
int
add
ljmp
push
push
xorps
jmp
cmp
pushf
cmp
push
mov
xchg
dec
mov
or
insl
andb
xor
lcall
adc
jnp
pop
sub
jp
jmp
jg
aas
xorb
mov
mov
arpl
mov
insb
xchg
push
dec
call
sahf
fldt
pop
adc
pop
outsb
stos
icebp
fdiv
nop
and
mov
xchg
push
loope
ror
pop
lds
aad
nop
inc
inc
mov
push
cmp
push
mov
mov
cmp
imul
add
pop
imul
imul
div
xchg
in
dec
hlt
das
mov
sbb
mov
push
in
ljmp
das
sahf
cmpps
cmp
add
aam
mov
mov
aaa
cmp
imul
mov
mov
ret
jne
dec
test
aad
jo
cmovb
sbb
test
sar
inc
lret
mov
push
xchg
hlt
nop
dec
aam
jge
popa
mov
lods
mov
mov
aad
mov
lret
dec
add
test
pop
out
int3
jnp
sbb
push
push
mov
cmp
push
sub
stos
adc
ljmp
or
dec
call
and
adc
rcrb
lds
ds
addr16
mov
cld
test
xchg
or
fsts
mov
call
rcrl
subb
cmp
mov
iret
cmp
insb
xchg
inc
out
xor
lcall
mov
xor
dec
and
aas
cmp
push
push
push
mov
xchg
outsb
or
test
jge
xor
xchg
int
sbb
mov
lea
cmp
pop
or
push
fwait
daa
lret
test
mov
mov
dec
out
popf
lds
sbb
mov
xor
jmp
xchg
adc
dec
dec
pop
lea
in
sub
xor
ljmp
jno
add
lock
ret
daa
pop
adc
aam
jg
adc
and
adc
pushf
stos
or
sbb
mov
scas
xchg
adc
xchg
or
xchg
sub
fcoml
push
and
rclb
push
stc
inc
call
dec
push
loop
adc
xchg
dec
cmpsl
adc
adc
xlat
sti
je
xor
pop
and
mov
sbb
inc
in
push
movsb
dec
jle
or
sbb
loopne
push
insl
adc
sub
adc
repz
mov
jmp
pop
rorb
dec
dec
push
lret
xchg
xchg
mov
or
js
jno
lea
pushl
push
dec
cmp
daa
sbb
rclb
lret
jb
fcoms
es
in
sbb
fsubrs
push
jmp
adc
push
or
inc
fmull
lret
sbb
jae
out
cltd
test
and
in
outsl
add
jo
mov
nop
loopne
jg
pop
fisttpll
cmc
mov
dec
or
push
xchg
int3
leave
in
mov
punpcklwd
push
xor
push
or
mov
cmp
jae
cmp
int3
jmp
mov
mov
popf
cmovge
mov
jecxz
les
test
fisttpl
inc
sub
mov
and
in
dec
fs
test
or
adc
gs
lret
sahf
jnp
out
test
in
mov
and
call
and
push
inc
sub
pop
ja
push
pop
imul
xor
daa
xchg
jmp
inc
pop
sbb
cmp
dec
dec
sbb
nop
and
and
lea
push
out
stc
test
popf
dec
dec
outsl
sub
push
in
or
cld
and
out
insb
cmc
push
out
mov
out
sbb
mov
mov
rcrl
repz
cwtl
pushf
dec
xor
cwtl
fcomps
xor
sti
mov
add
jecxz
adc
xchg
mov
out
jl
xchg
xchg
test
repz
addr16
push
mov
adc
mov
mov
js
mov
pop
or
dec
sbb
push
mov
stos
lret
inc
loopne
mov
push
sub
arpl
xor
dec
movsb
mov
and
inc
dec
sti
in
iret
push
inc
inc
inc
dec
xor
andl
aaa
push
repnz
dec
xchg
jbe
vmwrite
mov
inc
lods
push
or
add
in
ja
imul
lret
mov
add
ljmp
mov
mov
stos
lods
lcall
inc
and
mov
shl
xor
jne
push
test
jl
orl
jge
add
adc
mov
clts
fwait
repz
jecxz
adc
mov
popf
adcl
fistpl
dec
testl
xor
outsl
xor
pop
cltd
out
xchg
xor
inc
fstpl
pop
xor
pop
jne
nop
xchg
cld
mov
push
out
shlb
sub
scas
pop
call
mov
mov
xor
sbb
hlt
into
cmp
nop
mov
sbb
aad
jl
xor
or
push
dec
adc
lret
cld
out
cltd
mov
push
mov
xor
adc
sbb
adc
and
mov
fadds
sbb
mov
int3
push
push
push
js
adc
sub
in
inc
lret
cmp
inc
lahf
mov
bound
inc
or
xor
dec
sub
push
and
les
jl
inc
or
cmc
jae
xlat
cvttps2pi
adc
mov
xchg
aaa
xchg
mov
enter
mov
repz
mov
adc
push
cmp
adc
mov
push
pop
pop
push
int3
and
mov
nop
out
pushf
cld
into
mov
or
mov
mov
stos
dec
or
stos
mov
ds
cmp
and
jg
pop
rcpps
or
mov
stos
lahf
test
pop
leave
mov
lods
pop
adc
mov
push
rorl
ficoml
and
mov
test
lret
in
mov
scas
xor
fcmovbe
cmp
xchg
mov
xchg
add
orl
and
cld
sub
cmp
adc
aad
mov
xchg
add
bound
add
iret
inc
cmp
popf
jg
push
cwtl
mov
jne
imul
aaa
rclb
std
xchg
push
repnz
xchg
inc
inc
xchg
push
jnp
movsl
mov
adc
xchg
lea
cltd
das
out
or
sbb
daa
jecxz
lret
lods
pop
sbb
ljmp
xor
lea
adc
sbb
jne
dec
hlt
lret
repnz
mov
daa
xchg
sahf
int
jae
pop
and
adc
pop
arpl
pop
adc
sub
push
cmp
movlps
jmp
in
push
push
lcall
jmp
mov
mov
and
in
add
cmp
insb
in
pop
mov
call
stos
mov
lcall
and
cmp
adc
pop
push
and
or
test
addr16
jge
mov
in
or
push
int3
in
loope
aad
xor
jge
adc
lret
adc
pop
repz
push
jecxz
gs
push
mov
ljmp
jnp
adc
sub
jns
inc
mov
imul
xchg
mov
ret
mov
nop
push
lret
outsl
adcl
test
and
loop
add
jmp
inc
cli
push
mov
daa
sub
push
dec
arpl
aas
push
push
loop
inc
cld
aas
jbe
pop
jmp
inc
outsl
daa
aaa
lock
mov
ss
icebp
xor
das
enter
push
lret
test
insl
mov
dec
push
xchg
mov
cs
xchg
and
pop
stos
pop
scas
imul
adc
sub
mov
cmp
adc
imul
xor
insb
xor
mov
xor
inc
testl
xchg
adc
jmp
mov
mov
lcall
push
dec
jecxz
mov
jmp
sti
into
jmp
cmp
aas
sub
cmp
loope
icebp
mov
adc
adc
push
fisttps
adc
or
div
pop
mov
or
mov
int3
sarl
rorl
xor
xor
ljmp
push
adc
sub
xor
mov
adc
adc
push
lods
push
icebp
stc
adc
fs
bound
mov
out
add
bound
outsl
pop
sahf
push
nop
jg
lock
pushf
or
pop
mov
sbb
xor
mov
add
popa
paddd
cmp
xor
cmp
lcall
push
cltd
mov
insb
out
cmpsl
bound
sti
lret
dec
das
je
sub
adc
int
das
mov
xchg
push
lret
scas
xchg
mov
call
xchg
xchg
hlt
dec
xchg
xchg
xor
xor
cld
push
or
je
push
bound
xlat
xor
adc
je
inc
xchg
xlat
pusha
imul
and
int3
mov
adc
sub
sub
lds
mov
sub
xchg
cltd
into
repnz
cmp
dec
cmp
cmp
cmp
and
push
sub
push
lods
inc
ja
mov
jno
sub
push
fsubrp
push
stc
mov
rcl
sub
out
cmp
aam
fcoml
xor
xchg
stos
js
sbb
mov
mov
out
jb
loop
adc
push
popa
psubb
adc
mov
push
lods
ja
sar
dec
pop
dec
pop
mov
sub
jns
adc
bound
adc
stos
push
dec
cmp
out
inc
insl
int3
adc
adc
ljmp
and
xchg
dec
jo
loope
lock
repz
lds
cmpsb
loop
push
scas
bound
push
insb
mov
ljmp
aad
pop
aam
nop
mov
lea
push
pop
lcall
fmull
lea
out
fcomps
enter
dec
icebp
or
mov
sub
mov
sbb
bound
sub
test
hlt
insb
and
inc
movq
sub
add
movsl
inc
adc
mov
cmc
sub
movsb
and
pop
adc
pop
dec
bound
adc
jne
lahf
sbb
adc
lret
mov
pop
sub
out
pop
dec
les
dec
mov
mov
outsb
push
and
nop
into
dec
add
lahf
xorb
adc
mov
mov
xchg
push
fwait
or
into
stos
inc
add
cmpsb
cmp
or
jge
xchg
cmp
mov
pop
mov
push
adc
and
lea
sub
imul
push
jnp
mov
out
cmc
cwtl
mov
andb
fstpt
or
mov
mov
rolb
xchg
adc
daa
stos
push
or
cmc
adcb
cmp
jecxz
mov
fldcw
cltd
mov
mov
sub
mov
jns
out
fsub
cbtw
or
xchg
xor
sahf
or
in
daa
jnp,pt
push
iret
out
cwtl
scas
add
gs
dec
aas
lret
dec
cwtl
mov
int3
imul
out
sbb
cmp
out
push
mov
nop
pop
std
call
stos
pop
daa
or
loop
imul
push
shll
ljmp
and
leave
sti
ja
outsb
fmulp
mov
jp
test
movsb
and
mov
pop
xchg
or
xor
lret
lea
push
and
mov
sbb
jl
mov
cmp
pop
adc
cld
lds
jp
sbb
or
daa
inc
out
popa
les
inc
pop
mov
pusha
mov
fmull
and
ljmp
sub
push
dec
sub
shrb
cli
mov
xchg
push
inc
sbb
int3
pop
test
dec
cmp
mov
enter
push
sub
insb
rclb
jae
das
stc
mov
dec
adc
out
dec
jnp
fildll
xor
add
hlt
mov
sbb
or
aas
pop
lcall
push
loopne
push
add
insb
std
call
ss
dec
je
inc
cltd
fdivrl
sti
inc
xlat
or
sub
stos
insb
sbb
mov
adc
popa
jnp,pt
mov
inc
mov
jmp
push
pop
or
mov
inc
cmp
mov
fs
aas
xchg
xor
pop
mov
adc
mov
and
or
mov
mov
adc
sub
cmp
mov
mov
sub
fdivrl
dec
cld
mov
dec
adc
cmpl
xchg
push
and
sub
test
pop
fsubrp
dec
cmp
sub
or
out
movsb
sub
into
scas
and
sub
out
or
xchg
xor
pop
mov
or
scas
jbe
mov
jg
fldcw
aam
js
sub
sub
xor
lea
lahf
dec
sub
dec
adc
je
push
and
push
xchg
mov
xchg
dec
xor
leave
dec
inc
mov
movsb
inc
fbld
mov
scas
xor
ljmp
daa
insb
pop
repnz
fs
shll
aad
ret
test
jno
jns
loope
push
adc
adc
cmp
ljmp
aam
je
testb
jmp
hlt
daa
and
cmp
sub
xchg
push
sub
mov
pop
iret
arpl
and
push
sub
inc
mov
xor
adc
and
cltd
enter
mov
in
mov
lret
mov
push
add
mov
xchg
in
cld
hlt
or
sub
inc
mov
mov
lods
daa
jne
jp
inc
int3
jae
popa
mov
andb
mov
shll
lea
shrb
push
cs
sub
paddusw
sbb
cmp
cmpsl
push
iret
or
lds
adc
sub
mov
hlt
dec
lret
dec
add
mov
cmp
mov
jnp
lds
push
jg
jb
gs
dec
push
xor
jmp
pop
and
and
mov
xor
dec
jbe
cwtl
add
xlat
add
push
faddl
mov
jp
adc
sub
jmp
mov
fidivrl
out
cltd
dec
inc
fnstcw
pop
mov
xchg
add
mov
cmp
bnd
js
loopne
in
negl
dec
mov
pop
pop
push
cli
in
xor
inc
mov
sub
cmc
inc
movsb
test
push
roll
shll
movsl
arpl
outsb
mov
jg
pushf
pop
imul
mov
out
movsl
add
dec
arpl
adc
xor
push
das
imul
nop
loopne
rcrl
sbb
jp
mov
adc
xorb
adc
jecxz
jns
scas
sbb
daa
int
rol
pop
jle
imul
nop
mov
pop
mov
imul
ja
arpl
test
jnp
xchg
xchg
mov
shlb
jecxz
in
mov
dec
jmp
cmp
jmp
jmp
cmpsb
lods
add
jecxz
subl
jmp
sub
or
int
imul
fmul
push
push
imul
pop
je
enter
cmp
dec
bound
scas
push
loopne
jmp
mov
cmp
mov
jge
out
pop
scas
cltd
fsubl
adc
fldt
dec
xchg
cmp
jo
push
mov
std
cmpsl
dec
mov
mov
xchg
fnstenv
mov
cmp
sbb
mov
dec
jg
mov
push
dec
xor
orb
imul
outsl
push
sub
fisubrs
dec
sub
repz
mov
loopne
mov
sahf
sbb
lahf
xor
pop
xor
or
repz
push
stc
mov
mov
adc
jmp
and
or
loopne
add
mov
lcall
adc
pusha
sub
je
adc
push
daa
adc
or
ljmp
inc
mov
push
lea
push
mov
push
xchg
daa
js
mov
les
add
jae
outsb
push
sub
push
adc
add
pop
adc
push
adc
adc
xchg
in
push
or
rorl
mov
mov
push
es
sbb
jg
mov
hlt
lahf
sarl
cmp
fldt
dec
outsl
adc
mov
inc
xchg
mov
adc
daa
or
das
mov
adc
xor
mov
aam
add
jmp
sarl
out
mov
cmp
adc
adc
out
adc
or
aam
push
lret
pop
pop
inc
test
in
and
stos
pop
or
pop
shll
push
and
out
lea
push
and
xchg
jl
les
test
or
test
pop
xchg
dec
cmp
mov
adc
adc
lock
das
xchg
mov
push
test
dec
or
push
stos
ja
xor
dec
push
push
pop
inc
fdivrp
popa
mov
adc
xchg
dec
cwtl
mov
out
adc
pushf
stc
mov
xchg
cmp
inc
das
pop
push
sahf
xlat
or
mov
sub
or
negb
cmpsb
addps
cltd
loopne
outsb
cmp
in
adc
dec
push
fwait
dec
cmp
loope
lods
xor
or
daa
data16
pop
push
mov
push
lods
out
rorl
iret
mov
dec
stc
or
imul
in
repnz
inc
ds
mov
jae,pn
pop
scas
mov
pop
sub
xchg
inc
shrb
out
loop
mov
cmpl
insb
sbb
sbb
js
pop
int3
jnp
or
fnstsw
jnp
and
push
mov
adc
cmpb
cs
mov
push
pop
add
mov
stc
out
ss
xor
scas
push
in
daa
es
cmp
imul
push
arpl
lock
sbb
pop
xchg
sub
sub
mov
or
ja
movsb
jp
flds
fmull
andl
cltd
cmp
hlt
cmp
and
mov
mov
cltd
push
sub
mov
sub
in
sub
dec
mov
pop
fcmove
scas
cld
hlt
insl
sbb
jno
mov
jmp
filds
nop
jl
sbb
mov
fsubrs
inc
in
lods
cmpsb
push
fdivrl
dec
xlat
or
int3
jmp
cli
mov
ss
rcrl
mov
mov
push
jae
jno
andl
xchg
nop
mov
fnstcw
repz
loope
jae
push
pop
mov
ss
cmp
outsl
out
jb
scas
sub
sub
adc
adc
shrb
mov
ljmp
rcl
or
push
cmp
inc
mov
lahf
movsl
stc
jno
inc
dec
xor
mov
mov
out
mov
lret
sbb
paddsb
pop
rorb
or
sarl
into
data16
xchg
lret
fists
bound
sub
cmp
mov
bound
stc
movsb
stos
or
outsl
daa
adcb
cs
hlt
fs
fs
mov
inc
iret
scas
adc
int3
lea
cmp
loop
xchg
adc
ret
fwait
dec
or
mov
xchg
inc
xchg
mov
or
xchg
bound
ljmp
orl
aam
in
fildll
setno
aam
inc
xor
xchg
je
call
cmc
pusha
pop
js
rcll
test
in
scas
mov
in
mov
loop
lock
sbb
mov
mov
sub
mov
mov
jg
hlt
sub
stos
sar
or
adc
push
js
gs
insl
adc
out
sub
test
lret
gs
jge
sub
sub
cmp
out
lahf
jnp
cmovnp
cs
sbb
mov
add
push
scas
aam
adc
repz
xchg
mov
mov
add
adc
mov
data16
std
in
lods
jnp
xchg
mov
in
push
cmc
adc
shl
sbb
cmp
pop
js
xor
insl
nop
dec
xchg
adc
xchg
js
adc
ja
rorl
lods
sub
es
or
jmp
and
lods
sbb
push
imul
and
or
pop
or
pop
call
and
pop
and
sub
pop
mov
or
out
push
mov
aad
push
adc
push
mov
push
imul
pop
hlt
xchg
push
sub
shlb
mov
aad
adc
imul
xchg
pop
push
stc
lods
fistpll
into
repnz
mov
outsb
mov
imul
icebp
test
adc
mov
adc
add
xor
daa
gs
fdivs
xchg
push
inc
push
sub
lret
xchg
daa
mov
cli
cli
push
daa
cmp
adc
inc
xchg
daa
mov
push
pop
daa
push
cli
ret
lock
nop
into
sbb
ret
cmp
lods
and
adc
stos
mov
dec
mov
aas
inc
cli
sbb
or
lcall
dec
lret
mov
pop
in
je
jae
mov
sbb
into
jnp
sbb
or
out
xchg
fisubs
push
add
loop
cld
or
jo
mov
cmc
and
mov
jp
dec
sub
mov
dec
daa
xchg
dec
insl
pop
cmpsb
mov
add
cmc
aad
into
inc
fistps
push
jnp
mov
daa
iret
cmp
decb
pusha
sarb
std
or
inc
pop
dec
repz
cld
xchg
jnp
mov
aam
sarb
mov
rcrl
mov
adc
daa
ret
cmp
xchg
push
cmp
sbb
xchg
gs
movsb
add
ljmp
adc
and
repz
clc
push
aaa
out
out
push
cmc
popl
adc
mov
stos
test
aam
or
push
mov
cwtl
mov
lods
xchg
je
outsb
xchg
or
imul
movsb
or
orl
into
loop
pop
out
ds
dec
mov
mov
repz
dec
xchg
cmp
inc
or
inc
xchg
adc
sub
pop
mov
cmp
sub
adc
outsb
cld
ficompl
in
addr16
hlt
mov
in
lods
adc
mov
push
movlhps
loopne
outsb
lcall
test
push
sub
dec
mov
adc
cmp
dec
cmp
sub
fwait
adc
pop
jge
in
jl
jmp
in
or
mov
pop
negb
push
je
push
adc
mov
sub
mov
ljmp
and
leave
sbb
sub
lahf
inc
clc
in
sti
mov
hlt
in
cmp
jp
and
repz
insb
jmp
in
dec
fs
mov
notl
mov
sbb
and
mov
loopne
mov
out
fs
adc
and
and
xchg
jns
or
adc
fwait
mov
pop
jp
mov
hlt
aaa
jno
push
mov
dec
push
sbbb
divb
mov
sbb
xchg
and
cmp
lds
aad
sbb
sub
inc
and
mov
ljmp
out
mov
jo
sbb
cmc
ret
xorl
stc
mov
xchg
incb
mov
mov
push
cltd
and
dec
mov
xchg
mov
lret
push
inc
aam
push
es
pop
jecxz
lahf
fcoms
add
push
cmp
xchg
jnp
pop
imul
clc
addr16
arpl
adc
xchg
lcall
aaa
add
mov
mov
push
xchg
sub
dec
mov
add
jmp
cmpb
dec
std
sbb
ss
mov
add
xchg
mov
mov
push
dec
push
jecxz
pushf
mov
mov
jmp
rol
lret
test
inc
adc
aaa
pop
out
loopne
sbb
je
aas
mov
cmp
or
cmp
xchg
fnstenv
inc
xchg
push
sbb
mov
jecxz
scas
ud0
popa
pop
fidivs
push
or
hlt
mov
push
jae
adc
push
mov
push
cmp
or
and
add
dec
mov
fiaddl
xchg
pop
dec
repz
notb
cwtl
push
aad
xor
fimull
call
sub
jp
dec
daa
pop
mov
rcl
jge
shrb
inc
int
mov
or
inc
push
mov
cmp
push
outsb
data16
sub
aam
or
or
dec
push
loopne
ss
jle
push
fimuls
inc
xor
enter
mov
outsb
lret
jae
pop
dec
add
and
aam
stos
jecxz
fistl
movlps
jnp
sub
lahf
imull
addb
jmp
mov
push
mov
sub
pop
jne
data16
pop
inc
push
dec
or
jae
outsl
dec
roll
fdivr
ret
mov
clc
arpl
lea
jno
or
addr16
cltd
lcall
adc
scas
xchg
out
jae
test
jnp
movl
loop
mov
mov
dec
repnz
xchg
icebp
nop
hlt
mov
mov
jns,pt
outsb
hlt
mov
jmp
daa
mov
xchg
cmpsb
nop
testb
jno
sbb
arpl
sar
fucomip
fistpll
push
pushf
shrb
aad
sbb
xor
shlb
sbb
xchg
les
fs
aam
out
insb
pusha
sub
es
daa
adc
jg
dec
adc
jmp
mov
insb
mov
sub
das
or
dec
outsl
inc
sbb
add
ficoms
jae
adc
xchg
mov
xchg
xchg
cmp
and
repnz
push
mov
pop
add
cmpl
lret
jmp
add
fnstenv
jno
mov
jg
or
mov
adc
or
sbb
mov
out
pop
popf
stos
fwait
pop
fwait
movsl
scas
movsb
pop
sub
add
and
cwtl
imul
jb
insl
test
pop
inc
or
arpl
cmp
xchg
stos
mov
push
xchg
cmp
xchg
aaa
das
rcll
inc
pusha
adc
ds
data16
sub
cmp
inc
das
dec
stc
xchg
pop
push
xor
push
lea
xchg
dec
pop
inc
xchg
sub
shll
dec
mov
pop
loope
fldt
cmp
jl
sub
les
dec
xor
ret
test
xor
sahf
ljmp
in
push
dec
je
cs
xor
std
push
dec
scas
je
pop
ljmp
mov
or
ds
mov
mov
add
sbb
stos
movsl
inc
mov
mov
jnp
jle
mov
ljmp
jae
jmp
xchg
jno
pop
sub
inc
lds
ljmp
pop
mov
jno
cltd
or
xchg
dec
outsl
add
nop
adc
xorb
mov
pop
mov
mov
sub
imul
sub
dec
push
pop
jle
insl
lcall
inc
mov
cmc
lcall
push
or
std
pop
icebp
loopne
push
adc
cmc
cmp
rcrl
or
arpl
push
push
sub
stos
repz
cmp
iret
xchg
mov
mov
out
sbb
push
ror
mov
jecxz
push
daa
push
fs
rcll
or
lret
sub
daa
fdivl
imul
loop
stc
daa
sarl
push
int3
inc
sub
dec
iret
adc
or
frstor
std
movsb
lret
inc
xchg
hlt
out
clc
loop
push
cmc
std
sbb
pop
stc
inc
dec
outsl
push
adc
mov
mov
nop
dec
xor
popa
mov
mov
and
push
add
mov
imul
fcmovnu
and
pusha
mov
cmp
cmc
cld
cmp
int3
and
cmp
dec
imul
scas
hlt
bnd
fnstenv
adc
or
jae
mov
mov
into
sti
fsubrs
pop
or
sbb
jbe
clc
jo
stc
pop
push
shl
sbb
push
pushf
push
adc
xor
rcrl
leave
jp
mov
jnp
mov
cwtl
mov
mov
mov
leave
jno
cmp
outsl
aaa
sub
addr16
cmc
sbb
jns
pop
test
inc
in
imul
and
push
scas
lcall
shrl
and
inc
bound
inc
sub
roll
and
es
daa
mov
xor
int3
mov
es
push
sub
sbb
adc
adc
scas
push
sub
call
idivb
pop
push
sub
insb
addb
xchg
loopne
sbb
sbb
je
sub
pop
pop
lret
lds
nop
push
cmp
xchg
jo
pop
lea
or
pop
mov
or
pop
and
adc
push
outsl
and
sbb
pop
stos
cld
jl
pop
sbb
adc
inc
add
aam
cmp
and
daa
xor
sbb
push
and
dec
sbb
fisttps
inc
xchg
add
lods
popf
hlt
add
jmp
cmp
pop
jmp
mov
and
out
daa
jno
add
test
sub
in
out
dec
and
pop
inc
cmp
fisttpl
pop
pop
jns
arpl
lds
or
mov
push
imul
inc
and
imul
inc
xor
scas
sbb
je
sbb
jb
stos
mov
out
shlb
jmp
or
dec
or
jl
insl
mov
push
mov
insb
outsb
sub
adc
adc
loope
test
and
push
cmc
popa
lock
lret
cmpsb
les
enter
addr16
sbb
mov
or
xor
cmp
fstpt
mov
mov
es
jmp
sub
or
or
call
push
scas
add
sub
stos
xchg
cmp
jp
lret
dec
or
loop
push
mov
sub
and
stc
mov
in
xor
rcrb
jnp
in
loop
clc
mov
and
or
push
std
mov
test
fmul
mov
sbb
or
jno
mov
dec
xor
cmp
push
and
aaa
and
cmp
sti
xchg
mov
add
mov
ljmp
xor
mov
and
or
dec
bound
inc
add
dec
lcall
jmp
cmp
mov
push
xchg
test
es
mov
lret
inc
lds
js
sbb
inc
bound
adc
rclb
fstl
rcrl
dec
cmp
mov
pop
xor
sub
std
jo
rol
stos
and
or
add
sarb
inc
and
fwait
dec
adc
adc
dec
lea
daa
popa
mov
mov
jnp
ljmp
push
dec
and
jb
xor
adc
or
ljmp
xor
inc
mov
sub
cmp
test
jmp
or
lahf
inc
jno
in
imul
sbb
cwtl
clc
jnp
dec
jmp
in
mov
mov
and
cs
xor
push
les
pop
stos
mov
push
mov
inc
mov
adc
sub
cmc
lea
or
cwtl
jae
jmp
or
inc
lret
mov
and
pop
in
shrb
addb
movsl
test
fwait
jno
cltd
sub
rclb
mov
adc
or
nop
mov
aaa
or
mov
sbb
cmp
mov
mov
dec
addr16
mov
sbb
xchg
sub
iret
cmp
jb
loop
jb
or
cld
jae
inc
das
shlb
jno
psubusb
ss
pop
and
sbb
dec
out
fisubrl
mov
and
cmp
out
cld
hlt
dec
add
mov
add
mov
and
in
bound
pop
jae
pop
dec
daa
nop
jo
add
mov
fistps
sub
pop
mov
xor
rorl
mov
movsl
adc
mov
adc
cwtl
xor
mov
or
sbb
sub
out
xor
sbb
sub
xchg
lret
adc
dec
es
dec
sub
mov
aad
inc
inc
inc
push
cmp
sbb
pop
fdivrl
and
cmp
out
push
and
test
inc
sbbb
and
dec
sub
cmp
test
push
push
push
push
fldenv
imul
dec
mov
fnstenv
cmp
pop
iret
jns
adc
mov
or
stos
jns
push
mov
or
adc
push
ljmp
mov
xchg
rclb
mov
xchg
mov
sbb
dec
pop
lahf
push
or
rclb
scas
movsl
lea
insb
stos
push
adcb
xchg
testb
or
or
movsb
dec
popf
ds
aad
bound
aad
fwait
adc
or
or
dec
fisubrl
sbb
dec
out
daa
mov
dec
xor
jb,pt
cmpsb
and
outsb
pop
xchg
and
jb
popw
fnstenv
fldpi
or
sub
and
lcall
daa
ret
adc
lret
rorb
imull
mov
scas
adc
bound
xor
inc
sbb
bound
dec
std
adc
push
cmp
js
xor
aad
adc
cmp
mov
loopne
lea
sub
mov
ljmp
mov
jbe
out
push
push
cmp
hlt
daa
push
xor
pop
sub
scas
adc
cs
adc
cmc
test
dec
lea
dec
ss
xchg
push
imul
fucom
imull
sub
je
daa
arpl
jo
or
lods
push
inc
mov
hlt
cwtl
cwtl
inc
adc
cmpsb
inc
add
pop
lahf
lcall
cli
or
jns
or
push
dec
pop
sbb
in
cmpb
mov
cmc
pop
lcall
pop
bound
adc
mov
push
imul
mov
lcall
sub
mov
addr16
xchg
lods
mulb
mov
sub
add
cmc
jae
or
daa
or
adc
jno
mov
lock
in
push
dec
addr16
push
dec
lret
insl
dec
enter
lea
fs
in
mov
sub
mov
shrb
stos
and
nop
dec
fs
mov
daa
add
sahf
push
lret
movsl
mov
call
fldt
daa
insb
rcrb
mov
xor
inc
les
outsb
jo
add
stc
lahf
xchg
sbb
and
lods
daa
repnz
xor
or
xlat
push
loopne
push
adc
aaa
dec
mov
loop
jno
cwtl
push
push
jp
addps
adc
jmp
xchg
jb
cmp
js
lret
pop
imul
jp
mov
pop
lea
sub
into
data16
or
rcrl
sub
stos
sub
push
xor
sub
mov
push
cmp
mov
rolb
pop
adc
inc
das
fsts
jmp
faddl
pop
dec
jge
fdivs
in
push
aad
inc
iret
shrb
push
enter
adc
adc
lret
push
jmp
and
icebp
cmp
mov
sbb
or
pop
mov
cwtl
sbb
nop
daa
jnp
pushl
dec
das
xchg
pop
push
xchg
inc
add
fcoms
adc
mulb
sub
aam
or
push
or
jle
leave
mov
daa
fdivl
lcall
pushf
fwait
add
and
loope
cld
xchg
cmp
mov
mov
cs
lret
ja
aas
vdivsd
mov
sub
pop
inc
stos
and
jbe
cwtl
xchg
lcall
or
shlb
repz
xchg
xor
inc
rdpmc
pusha
mov
jp
mov
or
mov
mov
push
outsl
or
repnz
loop
stos
cmc
adc
and
add
shlb
xor
aad
jno
jns
pop
aam
jp
pop
dec
mov
ljmp
and
mov
or
int3
mov
sbb
paddq
mov
les
mov
lods
sbb
jecxz
sub
mov
sbb
xor
and
ret
jae
scas
outsl
insb
mov
push
stos
inc
insl
je
lcall
jnp
ret
cmp
fisubs
clc
es
shll
sbb
hlt
outsb
mov
sub
lret
adc
daa
dec
sbb
ret
int
jae
xchg
xchg
ds
jmp
cmp
sub
sub
sub
scas
repnz
cmpb
stos
mov
adc
mov
fcoml
pusha
nop
adc
or
call
jno
xor
daa
movsb
mov
xchg
mov
or
nop
sbb
stos
jbe
mov
shrl
and
xor
or
xor
cs
je
cmp
les
xchg
xchg
sbb
and
xchg
push
dec
xor
or
nop
mov
rcll
xchg
inc
sbb
add
dec
out
jnp
inc
dec
lea
and
xchg
mov
out
sub
mov
cli
je
lret
daa
pop
xchg
lret
add
leave
iret
std
out
pop
sub
xor
inc
jbe
mov
mov
xor
and
push
adc
lods
xor
shrb
std
fmuls
bound
popl
out
enter
scas
sbb
hlt
mov
inc
movsl
pop
fs
clc
cwtl
stos
movsb
fsubs
xchg
movsl
and
add
fsubl
insb
adc
push
jl
cwtl
sub
addb
scas
icebp
out
sub
lods
test
and
push
mov
mov
xchg
insb
int
adc
mov
pop
dec
push
lcall
pusha
or
js
xchg
daa
stos
leave
mov
sbb
jmp
jge
xchg
cmp
mov
dec
cwtl
ds
das
loop
or
sub
repnz
dec
scas
out
nop
daa
sahf
lock
xchg
call
sbb
inc
cmc
sub
inc
push
push
add
dec
xchg
not
mov
stos
or
adc
or
and
sub
cmp
push
sbb
push
jp
push
xchg
inc
iret
lahf
aas
fwait
ret
cmp
sbb
ljmp
or
sub
sbb
lcall
popa
mov
fistpll
mov
lret
imul
mov
cs
scas
jnp
adc
adc
sbb
fmuls
cmp
std
xor
sub
push
and
push
lahf
cmp
cmp
or
mov
and
dec
cwtl
mov
daa
sbb
sub
in
ja
inc
cwtl
int3
test
lcall
insl
inc
call
mov
push
xor
jmp
ljmp
out
fnstcw
inc
add
lret
inc
cmpsl
jb
xchg
mov
and
xor
cmp
and
sbb
dec
mov
adc
in
fimuls
cmp
or
loope
inc
inc
lret
and
notb
mov
inc
adc
xchg
mov
mov
es
sarl
fstpl
cld
sbb
hlt
xchg
cmp
repz
dec
inc
fildll
dec
cmp
inc
adc
mov
mov
and
es
mov
lret
add
movsb
outsl
mov
scas
stos
pop
ss
loopne
ror
push
repnz
ds
push
xor
fisubrl
shl
pop
dec
pop
insb
cmpsl
xchg
dec
and
xchg
adc
xor
push
clc
outsb
lea
and
xor
aas
pop
pop
push
popa
push
adc
inc
inc
pop
sub
mov
das
cli
movsl
mov
sub
inc
jb
aaa
stos
xchg
hlt
inc
fstpl
lds
pop
sub
pop
hlt
shr
xchg
xor
push
mov
ffree
test
mov
rclb
repnz
clc
mov
inc
jnp
jne
cmc
inc
dec
jge
cmp
sti
sbb
xchg
sub
bswap
inc
xor
pushf
lahf
cmp
mov
push
cmp
outsb
stos
xchg
outsb
imul
xchg
mov
data16
push
in
inc
push
shl
xchg
sbb
ja
xor
test
push
lret
cmp
sub
call
sub
add
pop
inc
dec
xor
call
mov
sbb
mov
xor
xchg
add
sub
mov
mov
cmp
jne
sub
dec
leave
inc
cmp
push
pop
and
inc
add
mov
mov
js
adc
insb
js
mov
push
sbb
cmp
xchg
mov
ja
sub
pop
lds
sub
mov
divb
jbe
sbb
pop
dec
xchg
sbb
dec
dec
scas
adc
enter
imul
shrb
or
daa
lods
jno
sbb
xchg
dec
or
dec
ljmp
cmp
xorb
data16
or
push
mov
ja
mov
mov
dec
xor
jnp
loop
scas
clc
sti
mov
xchg
or
ljmp
jmp
hlt
cwtl
mov
ljmp
sub
push
push
adc
int
rcrb
sbb
sar
or
pxor
push
std
out
adc
and
jno
or
sbb
jmp
je
dec
cmp
mov
popa
loop
or
xchg
adc
fstps
xor
dec
jp
popf
jl
xchg
movsb
mov
arpl
or
test
es
sbb
and
and
ljmp
xchg
and
add
lret
out
inc
fs
repnz
imul
push
leave
ss
frstor
das
iret
jo
sub
movsb
or
js
mov
ds
gs
cmp
sahf
inc
push
rorl
and
push
loop
mov
lahf
mov
fstps
nop
dec
pop
sub
ljmp
ds
cmpsl
mov
sub
xor
daa
out
mov
sub
xchg
inc
pop
ret
test
sbb
ret
or
inc
ds
cmp
sbb
arpl
fisubl
or
mov
mov
cmpsb
cmp
inc
push
mov
popa
push
push
test
sub
test
xlat
cmp
mov
sub
frstor
xchg
mov
push
and
inc
mov
or
and
adc
insb
lea
in
xchg
in
jnp
adc
and
push
imul
pop
cmp
pop
lock
add
or
and
enter
roll
mov
outsb
cmp
mov
dec
orb
stos
or
mov
outsb
inc
sbb
das
jle
daa
xchg
outsb
mov
int
push
mov
mov
in
lahf
hlt
pushf
or
mov
adc
jmp
push
and
loopne
xchg
jp
push
lret
aad
jno
or
adc
mov
ficoms
arpl
sarb
push
xor
repnz
ja
dec
icebp
stos
xchg
jo
loopne
sub
mov
add
fsubrs
inc
sub
add
dec
aaa
inc
or
sbb
pushf
sub
leave
pop
pushf
mov
insl
cmp
out
lret
jmp
xchg
or
jmp
adc
cli
cwtl
iret
jno
test
out
mov
mov
test
sbb
lea
pop
iret
dec
sbb
xchg
and
xchg
sti
stos
cld
rolb
mov
add
stos
stos
cmp
mov
js
fdivs
jns
je
popf
xor
sbbl
push
sub
xor
or
aad
dec
lret
push
sub
jmp
loopne
jmp
lahf
out
cwtl
push
sub
or
bound
push
push
xchg
push
daa
pop
mov
xor
xchg
mov
push
icebp
mov
popf
mov
lcall
and
xchg
cmp
repnz
jnp
call
mov
jo
xchg
into
ss
xor
adc
imul
sbb
stos
xor
jge
xchg
rclb
xor
fiaddl
and
je
xchg
dec
fnsave
or
cmp
or
test
jge
sarl
mov
lret
pop
sub
dec
mov
data16
push
mov
push
insb
cmpsl
es
subb
and
imul
mov
testl
lods
daa
xor
push
cmp
dec
inc
shll
orb
dec
stos
mov
inc
sub
divl
and
sub
push
int
sub
test
hlt
jnp
inc
adc
mov
cmp
icebp
sub
mov
xchg
pop
scas
xor
inc
repnz
xchg
call
xlat
mov
lcall
push
mov
pop
dec
in
and
mov
mov
dec
adc
out
insb
pop
mov
push
xchg
lds
jno
or
imul
push
loopne
mov
jno
xor
dec
adc
xor
mov
cs
sbb
inc
data16
orl
inc
xor
xchg
and
int3
call
ret
or
cwtl
hlt
sbb
lods
or
push
into
inc
insl
cmpsb
ret
adc
lret
je
int
ret
stos
daa
add
in
test
xchg
mov
push
imul
sub
stos
jmp
and
lret
inc
lret
inc
jo
repnz
mov
or
sbb
rcrb
test
sarb
adc
cwtl
mov
jnp
call
test
xchg
xchg
xchg
out
pop
jb
jle
or
push
sub
addl
int
lcall
stc
xchg
cmpsl
mov
push
ljmp
adc
stos
xor
in
mov
pop
aam
pop
mov
inc
fdivrl
lds
xor
push
scas
repnz
push
sub
dec
jmp
lea
lea
mov
mov
adc
or
test
jne
push
mov
inc
xchg
jno
sub
xor
pop
fmuls
out
inc
pop
lret
jno
xor
or
ljmp
pop
jnp
repz
inc
gs
mov
or
stc
mov
out
dec
dec
or
insl
dec
or
pop
pushf
push
sbb
mov
repz
cmp
xchg
push
or
cmp
int3
or
fisttps
sub
mov
lods
outsl
jmp
sub
pop
or
mov
cmc
jnp
pushf
inc
inc
or
rolb
inc
push
loop
aaa
pop
hlt
sub
sbb
or
add
mov
jp
or
dec
lcall
sub
add
aad
jae
pop
repz
out
adc
mov
lret
mov
push
mov
das
mov
outsb
inc
mov
shrb
hlt
repnz
mov
decl
loop
add
xor
mov
pusha
sbb
mov
pushf
mov
dec
das
fwait
adc
imul
xchg
xchg
sub
xchg
xchg
nop
pop
pop
adc
sti
test
daa
inc
dec
cmpsl
iret
cmp
sub
test
cmp
sub
test
das
arpl
jbe
pop
sub
xchg
sub
xchg
inc
clc
sbb
mov
imul
mov
or
xor
xor
jb
mov
test
or
inc
mov
mov
movsb
sbb
dec
xor
or
insb
sub
movsl
push
jno
es
hlt
loopne
inc
cmp
out
lret
mov
dec
sbb
xadd
lahf
out
lahf
pop
xor
push
rclb
push
xchg
lods
mov
movsb
mov
dec
test
ljmp
mov
mov
push
mov
cmp
or
mov
pop
cmp
stos
movntps
cmp
and
lcall
mov
add
or
mov
stc
inc
cltd
stos
mov
and
loope
inc
stos
sbb
or
hlt
xchg
cwtl
stos
lgs
lret
or
add
scas
cmp
shll
sub
je
push
idivl
and
or
xlat
jge
dec
pop
jp
sub
imul
xchg
adc
lret
or
scas
arpl
cmpsl
mov
roll
lret
cmpl
int3
inc
or
adc
loop
cmpsb
pop
cmpsl
mov
imul
lods
jecxz
push
aas
lret
in
test
out
testl
sahf
add
insl
add
lcall
fbld
xor
repnz
or
adc
xchg
scas
dec
ja
daa
mov
sbb
inc
bound
stc
pusha
adc
mov
adc
mov
pop
or
lock
dec
repnz
ja
outsl
adc
push
cld
and
cmp
icebp
lods
xor
dec
mov
shl
mov
xor
or
out
mov
sbb
add
cmp
add
dec
xor
stos
scas
js
cmp
mov
inc
popf
cltd
fcom
or
xor
mov
jmp
xchg
fnstsw
outsl
xchg
add
mov
push
les
cmp
out
and
notl
cs
and
cmp
mov
xor
xchg
ret
jae
sbb
fcompl
xorb
cwtl
dec
mov
or
out
jno
jo
imul
cmp
in
inc
dec
jp
jmp
jmp
icebp
push
shrl
jo
push
int3
les
sub
lret
cwtl
in
fisttpl
or
pop
punpcklbw
loop
scas
xchg
dec
mov
inc
mov
clc
into
fisttpll
sub
push
push
mov
mov
xlat
jl
mov
mov
dec
lret
fisubrl
mov
cmp
xchg
pop
int3
mov
sbb
sub
mov
push
cmp
xchg
mov
loope
mov
ja
sbb
call
cmpsb
xchg
sbbb
je
jb
inc
insl
fstpt
and
cmp
fdivrl
xchg
pop
es
daa
into
pop
int3
xchg
je
ficoml
movsl
repnz
lods
mov
push
adc
or
pop
jae
add
push
not
daa
loop
mov
cltd
sub
clc
dec
cltd
pop
mov
xor
jnp
or
mov
xchg
out
outsb
push
xor
lods
lea
xor
jmp
pop
jl
cmp
jmp
mov
inc
ficompl
mov
jmp
sbb
data16
xchg
stc
sbb
push
ljmp
cs
dec
outsl
xor
inc
std
jb
jae
cs
adc
fdivrl
mov
jmp
sub
push
lret
mov
dec
ds
jns
mov
sub
or
out
jle
push
mov
fmull
cs
into
aam
mov
dec
daa
dec
sub
daa
loopne
mov
and
aam
pushf
lods
dec
sub
mov
out
mov
cmp
cltd
addr16
popa
or
dec
std
dec
xchg
jmp
daa
nop
rolb
enter
dec
repnz
dec
icebp
sub
xor
imul
bound
sub
mov
shrl
lea
dec
aaa
inc
sbb
inc
pop
in
fdivs
outsl
fildll
sbb
lea
arpl
rclb
les
dec
bound
pop
call
daa
pushf
sub
call
adc
sbb
imul
mov
push
sub
push
cmp
mov
out
or
jmp
iret
outsl
push
js
push
daa
sbb
push
test
cltd
imul
lea
stos
inc
dec
push
dec
jg
pusha
adc
cmc
mov
cmpsl
pushf
mov
fisubrs
fwait
idivb
pop
fldcw
xor
test
test
mov
daa
leave
cmpsb
das
dec
ds
sub
jle
jae
pop
cmp
mov
mov
test
xchg
addr16
mov
xchg
dec
daa
push
mov
push
andl
fcoml
fstps
es
cmc
cwtl
mov
insb
fists
jne
aad
sbb
stc
test
jno
dec
jb
xchg
mov
or
and
jp
lea
in
je
dec
xchg
mov
stos
jmp
cmp
xchg
repz
mov
push
mov
dec
push
fsubs
push
adc
jnp
xchg
ja
xor
sbb
sbb
out
sbb
sbb
sub
test
mov
push
bswap
push
mov
dec
dec
push
add
dec
ja
xchg
inc
xor
push
lcall
stos
leave
or
xchg
sbbb
sahf
aas
js
mov
sub
pop
xchg
data16
dec
cmp
jp
xrelease
shll
adc
lods
and
call
sub
pushf
mov
xchg
dec
or
sbb
es
push
or
inc
pop
outsb
insl
add
ja
bound
in
xor
add
out
ss
lea
sub
rorb
jmp
sbb
dec
mov
jo
or
out
repz
push
lods
pop
adc
outsl
and
or
sbbl
leave
sbb
lea
sbb
nop
bound
cmp
ret
iret
pushf
fwait
pusha
sbb
pop
mov
pop
sahf
mov
xchg
sub
mov
cltd
mov
fwait
or
bound
shrb
lods
push
adc
inc
lcall
imul
add
dec
mov
data16
stos
sti
andl
dec
insb
jp
or
push
cmp
xor
scas
sbb
test
or
lods
out
adc
iret
sub
cmc
jne
xor
and
cmp
movsl
inc
out
mov
add
movsl
and
lret
xchg
xchg
fwait
pusha
addr16
leave
or
cld
lds
sub
xchg
mov
or
adc
adc
mov
adc
jne
mov
hlt
add
ds
mov
mov
mov
pop
fimuls
sbb
sbb
ss
lret
cli
pop
or
int
xor
xor
cmovl
dec
xor
sub
out
mov
inc
in
mov
jo
dec
clc
mov
ret
mov
aam
mov
imul
or
daa
and
lret
lret
xor
iret
roll
jge
mov
daa
stos
dec
pop
push
push
cli
loope
adc
mov
ljmp
daa
cmp
arpl
push
xchg
or
jnp
cld
jnp
pop
or
push
xor
test
jne
push
test
pop
xchg
mov
lcall
push
xchg
in
int
mov
bound
test
or
mov
push
cmp
push
imul
outsb
data16
lock
adc
aaa
xchg
push
scas
pop
lret
xchg
int
jo
dec
into
push
cmp
xchg
adc
iret
inc
push
out
insl
mov
mov
or
lcall
jp
sbb
push
dec
iret
mov
adc
cmova
xchg
sub
aam
rcrl
cmp
mov
lret
test
xchg
in
mov
lods
and
fs
insl
cmp
std
mov
cmp
push
dec
pop
adc
call
mov
push
and
out
stos
adc
aam
jo
jne
into
call
imulb
dec
lea
scas
cmp
imul
shlb
adc
insb
lea
insb
xor
xchg
dec
lret
stos
inc
dec
pop
mov
add
ds
add
xchg
push
jno
movsb
xlat
jl
mov
and
jae
lret
pop
push
aad
loope
cs
mov
pop
mov
inc
mov
dec
je
and
mov
fldl
mov
paddw
mov
test
and
pop
mov
fdivrl
xor
mov
cwtl
repz
add
fdivl
mov
adc
scas
push
stos
adc
mov
icebp
jecxz
lods
daa
xchg
dec
or
mov
out
inc
call
jae
loopne
jle
push
xor
fxch
push
push
or
ljmp
push
xor
loopne
push
outsb
sbb
dec
adc
fmuls
sbb
stos
mov
dec
hlt
push
jle
push
daa
jmp
in
xor
inc
mov
xchg
adcl
cmpsb
push
js
mov
mov
jp
sbb
adc
insl
xchg
push
dec
shll
in
sbb
jbe
scas
xor
push
cmp
jmp
je
dec
add
jno
or
push
data16
repz
repz
dec
fmull
xor
pop
xchg
push
or
xchg
and
cmp
pop
dec
jno
aad
scas
data16
dec
fldcw
out
pop
xchg
sub
dec
dec
insb
outsb
loop
outsb
mov
repz
out
adc
and
inc
dec
hlt
xor
lcall
loop
lods
out
rol
cld
imul
cvttps2pi
or
mov
sub
scas
out
xchg
rclb
add
mov
or
dec
cmp
sub
aad
xor
push
test
xor
and
sahf
in
mov
insb
adc
sub
pop
aaa
sbb
mov
xchg
pop
pushf
mov
iret
push
dec
test
inc
pop
ja
jecxz
and
ss
or
inc
lcall
push
push
lret
and
loop
es
imul
mov
das
hlt
or
mov
mov
sub
push
int3
pusha
sub
mov
aam
je
bound
cld
cs
fcoms
adc
rcrl
mov
bswap
xchg
sub
syscall
push
rol
les
out
sahf
jbe
mov
xchg
loope
mov
icebp
or
or
loope
cmp
cmc
xchg
xchg
cmpsb
cmp
xchg
mov
xchg
and
jl
pop
lcall
jnp
inc
xchg
stos
lret
std
test
stc
mov
fcoms
aad
xchg
fadds
sbb
xchg
mov
mov
mov
mov
lcall
xor
dec
je
setl
or
pop
ljmp
mov
bnd
mov
sub
daa
jno
or
xchg
pop
into
pop
sbb
hlt
sub
divl
xchg
jae
adc
sub
adc
lea
pusha
sbb
lods
and
xlat
mov
sub
sti
mov
orl
loope
orb
lret
negl
es
test
xor
in
mov
and
lret
jno
or
dec
stos
xor
inc
fisubl
mov
xchg
dec
sbb
inc
jmp
dec
inc
mov
pop
mov
lret
loope
xchg
sub
cmpsb
call
sbb
mov
out
lods
rsqrtps
push
dec
add
sbb
jo
sbb
inc
out
xchg
in
or
jg
cs
sti
mov
mov
sbb
cwtl
xor
es
fdivp
push
xchg
jmp
fstpt
xor
shrb
mov
xor
in
cs
push
jno
dec
mov
mov
bound
dec
out
jmp
data16
sbb
ljmp
mov
sarb
insb
fwait
and
out
dec
ss
jecxz
imul
xchg
cltd
ret
mov
stos
mov
mov
rcl
aad
and
test
sub
dec
mov
xchg
sbb
jae
addr16
and
lods
push
adc
call
test
insb
or
mov
jae
jle
push
data16
test
xchg
js
jns
pop
ljmp
cltd
sti
jbe
and
aam
sub
or
xchg
or
sbb
jo
xchg
and
inc
dec
mov
pushf
into
lods
arpl
ret
jnp
or
inc
repz
idivl
jmp
pop
nop
insl
xchg
and
cwtl
out
pop
lods
jp
push
or
pop
lods
mov
push
add
scas
mov
mov
das
or
ds
mov
scas
rorl
xchg
cwtl
push
dec
xor
push
sbb
cs
test
push
or
outsb
adc
insb
mov
mov
or
pop
sbb
sub
enter
into
dec
push
pop
ljmp
mov
sbb
cmp
lods
or
jmp
mov
jnp
and
cld
out
pop
cwtl
cmp
pop
mov
aad
inc
out
hlt
out
int
loopne
adc
daa
or
dec
cmc
mov
testb
in
xchg
xchg
or
dec
daa
mov
daa
repz
pop
lods
adc
call
mov
mov
dec
std
int3
mov
cmp
adc
adc
scas
jmp
and
in
scas
pop
xchg
or
insb
adc
mov
sub
scas
mov
adc
jmp
popf
sub
cltd
xchg
cwtl
xchg
pop
test
hlt
push
and
cmp
movsl
dec
sub
mov
adc
jns
push
adc
cmp
cmp
lods
inc
adc
adc
out
pop
adc
out
aas
mov
sub
adc
adc
adc
pop
sub
cmp
pop
dec
stos
xchg
sbb
xor
pop
ljmp
or
sub
scas
adc
xlat
imul
xchg
int3
mov
popa
mov
outsl
pop
xchg
jb
scas
fsubs
mov
shl
mov
int
sub
xor
add
sbb
outsl
jp
sbbl
add
cwtl
sub
addb
shr
loop
jnp
mov
cs
imul
outsl
jno
inc
push
push
jae
sub
cwtl
shl
mov
fistps
push
push
hlt
ss
cwtl
fnstcw
jmp
imul
ljmp
mov
clc
xchg
xor
pop
mov
mov
inc
fldcw
loope
adc
add
lock
dec
inc
adc
fsubs
dec
fwait
or
cmp
mov
xor
mov
adc
mov
imul
pop
addr16
add
push
mov
push
and
scas
mov
cmpsb
pop
mov
jmp
outsl
sub
ret
fsubrs
aam
jmp
pusha
leave
int3
repnz
imul
push
jg
mov
aas
sub
std
adc
push
jmp
push
dec
shl
adc
int3
daa
in
adc
sub
and
js
subl
test
out
enter
lret
outsl
mov
sti
out
mov
mov
insl
stos
iret
add
addr16
lods
dec
pop
xor
minps
cmc
insl
cmp
scas
leave
mov
adc
push
mov
and
push
inc
in
adc
lret
push
ret
adc
test
pop
icebp
insb
sub
daa
sub
das
outsb
xor
lret
icebp
lods
xor
icebp
pop
push
sub
iret
sbb
hlt
fs
dec
test
lods
push
repz
out
das
xchg
insb
pop
daa
fsubrl
or
jno
mov
out
or
icebp
inc
adc
and
jl
lea
data16
call
in
or
mov
sbb
cmc
inc
out
daa
leave
repnz
mov
jmp
mov
jb
inc
inc
iret
dec
pop
mov
into
int3
add
ror
mov
nop
mov
mov
fidivrl
test
and
adc
test
stos
and
mov
adc
daa
cmc
sub
mov
icebp
daa
sbbb
sbb
out
aam
jbe
and
mov
adc
push
adc
add
push
movsl
inc
dec
inc
pop
out
mov
mov
cmpsb
inc
js
jecxz
push
mov
hlt
push
xchg
inc
xor
or
int
movsb
int3
ds
mov
lea
cmp
mov
insb
cmc
icebp
aam
mov
xchg
sub
dec
push
or
shrb
shll
mov
cs
adc
or
fldln2
push
bound
xor
pop
and
int
xlat
mov
push
xchg
or
outsb
pop
lret
stc
in
and
or
shrl
push
lea
fmul
test
mov
inc
push
push
in
add
dec
jle
dec
pop
lock
dec
pop
xor
cld
mov
push
ds
ljmp
adc
les
enter
cs
test
pop
addr16
test
mov
jmp
hlt
sub
sbb
mov
scas
lds
in
cli
cli
adc
mov
lret
out
rolb
jb
cmp
lods
xchg
das
int3
xchg
push
rorl
test
push
out
mov
or
js
mov
pop
sub
adc
cltd
push
mov
outsb
test
sub
inc
inc
cmc
stc
sbb
cmp
fistpl
pop
pushl
sti
scas
push
stos
into
cs
cmp
cmp
and
std
xchg
in
dec
or
dec
xchg
aaa
mov
fsubs
test
test
stos
mov
fdivrl
repz
dec
es
int
cmpsb
inc
push
dec
sbb
enter
bound
mov
aad
adc
push
pop
and
jle
xchg
inc
mov
ret
fwait
outsl
call
mov
pop
data16
movsl
mov
es
stos
mov
orl
dec
inc
stos
push
aam
movsw
sbb
lods
lcall
lock
mov
outsl
sbb
push
mov
mov
or
pop
cli
cmp
add
pop
data16
rclb
adc
or
jno
loope
es
xorb
fsubrs
push
xchg
in
aas
test
js
mov
scas
jns
mov
lret
sub
js
inc
push
out
sbb
stos
loopne
inc
out
xchg
hlt
scas
cmp
shrb
push
loopne
mov
out
lret
mov
push
jns
stos
mov
lds
mov
fs
aam
out
pop
in
mov
test
or
adc
outsl
cmpsl
cmp
rolb
scas
mov
lret
mov
stos
jge
outsl
int3
aaa
xor
adc
add
fisubrs
inc
shll
lcall
clc
sbb
mov
cwtl
sub
iret
push
dec
adc
push
pop
lret
sbb
or
jbe
lret
mov
mov
sub
sbb
xchg
scas
push
sbb
add
aas
ds
lods
rorl
stc
sbb
adc
jmp
subl
adc
hlt
and
cmp
jnp
adc
push
sbbb
xchg
sub
inc
lock
mov
sub
jbe
inc
test
test
pushf
lcall
in
loop
or
ja
xchg
xchg
mov
mov
mov
cld
outsb
ret
push
shrl
jae
mov
sbb
xor
mov
shr
loop
push
cmp
clc
jecxz
dec
xor
fsubr
daa
inc
mov
call
dec
into
cwtl
lds
inc
mov
jl
sub
lock
push
sbb
lret
sub
out
aam
lds
mov
mov
xchg
dec
cmp
fcom
out
lret
jo
cmp
adc
cli
mov
cwtl
dec
jp
sub
sub
pop
test
insb
add
push
sub
pop
adc
cmpxchg
insl
mov
xchg
mov
cwtl
mov
pop
xchg
lods
or
jae
sti
daa
mov
outsb
or
stos
int3
fwait
push
pop
ljmp
test
mov
in
sub
adc
fstps
in
pop
clc
or
fstps
imul
je
dec
scas
push
mov
pop
mov
mov
adc
ljmp
push
sbb
push
call
mov
mov
sbb
mov
mov
mov
sti
dec
push
add
xor
out
es
or
xchg
int3
out
jno
xchg
dec
xor
sbb
in
inc
inc
push
push
cwtl
sub
push
mov
or
or
movsb
aad
inc
dec
xor
xor
insl
test
cmpsb
dec
lods
jnp
ja
xchg
fstl
leave
insl
mov
cmp
pusha
popf
lods
jbe
cltd
test
adc
loope
cmp
fs
pop
xchg
mov
mov
fpatan
inc
pop
ds
aas
sub
ljmp
mov
mov
mov
mov
jmp
sbb
and
scas
mov
adc
aas
mov
pushf
jg
add
push
jae
and
adc
test
js
xor
call
adc
stc
jae
and
movsl
add
inc
aad
sahf
push
push
call
sbb
iret
test
and
aaa
fs
cmp
push
jp
mov
or
sub
cltd
insl
cwtl
outsl
xchg
push
jmp
mov
pusha
data16
mov
mov
xor
cmp
lds
and
push
and
fucomip
dec
push
ss
inc
push
dec
mov
and
cmpsb
mov
or
adc
and
dec
or
ljmp
jb
sbb
jle
xchg
stc
or
pushf
sbb
lea
push
xor
add
sub
mov
mov
and
ss
push
shlb
mov
test
leave
xor
xor
and
pop
push
sub
mov
out
insl
stos
call
pop
jmp
aam
sub
int3
and
jb
xor
adc
sbb
lcall
sub
inc
dec
jno
mov
inc
scas
mov
pop
push
stos
daa
mov
cmp
jmp
xchg
aaa
pusha
sbb
mov
sub
fs
push
xor
or
pushf
into
rclb
out
imul
adc
sti
nop
push
push
push
lcall
fstl
roll
lds
scas
and
clc
mov
pop
and
orb
enter
xor
movsb
push
mov
adc
pop
inc
inc
ss
leave
arpl
adc
jecxz
pop
loopne
fwait
cmp
sub
mov
adc
push
jp
or
push
loop
pop
or
inc
cs
std
stos
data16
cmp
xchg
xchg
or
lcall
fistpll
mov
ret
jmp
mov
imul
insb
push
jp
rcr
inc
jo
fdivr
jne
test
mov
in
aas
rcl
push
mov
and
and
push
and
mov
add
scas
sahf
les
xchg
daa
add
in
dec
cmc
stos
mov
and
add
jb
dec
lret
or
dec
hlt
repnz
dec
add
inc
fimuls
xchg
test
movsl
int3
push
mov
icebp
xor
daa
mov
out
pushf
push
cli
mov
aas
cltd
stos
sbb
daa
gs
test
mov
pusha
mov
jg
lock
mov
dec
add
clc
lods
outsl
and
mov
aaa
push
push
test
mov
pop
popf
push
xchg
pop
and
out
cmc
jne
outsb
push
sbb
loopne
cmp
aam
xchg
outsb
sbb
xchg
mov
lcall
sbb
daa
mov
cs
mov
test
mov
and
scas
jnp
stc
mov
int3
inc
mov
mov
sbb
sbb
cwtl
sbb
xchg
into
adc
xchg
mov
xchg
sub
jbe
and
push
pop
xchg
push
in
push
adc
dec
pop
clc
lret
lahf
repz
inc
mov
cld
scas
loope
jae
cmp
push
daa
or
imul
fsts
lret
xor
mov
xor
jle
jp
push
push
popf
cmp
mov
mov
push
sub
dec
daa
sub
idivl
stc
xor
cmp
bound
lret
mov
daa
xchg
paddd
adc
mov
fcomps
push
dec
or
imull
insl
loop
lret
aam
mov
dec
and
das
mov
jnp
xchg
lea
adc
fidivrs
dec
sbb
adc
js
rorb
sbb
lea
or
xchg
gs
stos
push
cmp
xchg
pop
mov
out
adc
jmp
mov
jns
push
pop
fmulp
in
mov
xor
xchg
leave
mov
push
test
lret
sbb
xor
or
outsb
dec
sub
lcall
pop
or
adc
movsl
ljmp
aam
mov
adc
pop
sbb
stos
enter
insl
mov
push
movsl
pusha
pop
add
mov
sub
int
dec
lcall
shrb
mov
addr16
push
xchg
inc
fldenv
jns
pop
push
pop
lret
lea
clc
rolb
jl
pop
call
imul
mov
xchg
push
and
xrstor
cltd
add
pop
mov
jge
sub
jae
xor
ja
sbb
jp
js
sub
cmp
ljmp
dec
and
outsl
or
sarl
insb
dec
jne
mov
or
xchg
test
mov
mov
pop
push
bound
imul
mov
add
pop
out
dec
inc
fisttps
mov
xchg
mov
pop
imul
imul
add
pop
mov
stos
mov
lret
jp
cmp
out
jp
mov
movsl
push
sub
xchg
adc
sbb
jae
inc
loope
xchg
or
in
and
cli
leave
stos
push
cmp
push
rcrl
lret
fdivl
dec
jmp
cmp
in
or
add
push
cltd
cld
inc
orb
mov
xchg
loopne
pop
cltd
aam
shl
and
cmp
bnd
push
cmc
mov
test
inc
push
es
push
lret
idiv
cli
sbbb
shlb
jecxz
adc
push
into
mov
jmp
mov
dec
inc
daa
shlb
popa
jnp
cld
push
out
cmp
pop
lret
cwtl
dec
xchg
mov
sub
addr16
mov
and
shll
jo
sub
cmp
jl
movsb
xor
adc
imul
xor
jnp
xor
dec
ds
adc
ja
cmpb
mov
repnz
dec
jge
fisubrs
sbb
inc
mov
mov
pusha
adc
int
mov
cltd
andl
cmp
in
jnp
mov
xor
push
aaa
mov
mov
jnp
and
xor
cmp
push
mov
ficomps
out
nop
cs
scas
adc
pop
aam
shlb
jle
mov
adcb
gs
daa
in
ror
fwait
adc
adc
mov
mov
ret
mov
pop
xor
stc
adcb
push
dec
mov
inc
test
imul
les
sbb
dec
sbb
dec
mov
sub
out
imul
in
subb
jnp
mov
les
jecxz
sahf
scas
bt
xor
xchg
mov
in
cmp
dec
jp
push
nop
or
ret
push
pop
sub
dec
cmpsb
mov
adc
mov
cmp
mov
fcmovu
pop
loopne
es
pop
adc
punpckhdq
dec
or
jp
mov
mov
or
and
xchg
mov
push
or
call
inc
push
xor
sbb
mov
cmpsb
aad
push
hlt
inc
cmpsl
xlat
cmp
jo
adc
bound
inc
xchg
pop
push
sbb
loop
setne
pusha
shlb
cmp
fcoml
call
dec
icebp
addr16
mov
je
xrelease
mov
push
mov
push
adc
push
jmp
and
out
scas
sti
dec
rcr
test
ds
cltd
loop
je
push
fsubl
imul
inc
xor
fs
aas
mov
mov
outsb
cltd
loop
xchg
dec
sbbl
stc
pop
cld
or
dec
dec
mov
push
xor
mov
scas
lds
int
ja
jne
pusha
cmp
mov
into
outsl
loop
imul
ss
adc
sbbl
shr
jno
int3
mov
jo
imul
adc
shll
dec
jae
and
jnp
hlt
dec
lea
dec
addl
mov
or
fimull
call
xchg
ss
jno
lods
dec
adc
sub
jmp
outsl
add
add
stc
cmp
imul
jl
xchg
loope
stos
push
lods
stc
dec
cmc
out
add
push
bound
push
stos
sub
sbb
stos
cmp
mov
loope
push
adc
jmp
inc
pop
outsb
dec
sbb
aas
adc
shrb
fdivrl
cltd
daa
outsl
mov
loope
push
daa
dec
add
loopne
fisubl
mov
stos
dec
jp
sbb
push
sub
dec
xchg
out
stos
pop
imul
dec
pop
sbb
xorl
adc
push
test
and
mov
mov
push
xchg
ss
or
pop
stc
mov
push
sbb
push
ficoml
fsts
popa
movsl
pop
jb
adc
mov
or
fdivs
adc
mov
and
lret
and
aam
dec
insl
adc
jb
pop
addr16
push
xchg
sub
sbb
test
and
lret
sbb
fs
aad
sub
push
dec
pop
ret
rol
sbb
fwait
cwtl
lods
dec
push
or
xlat
jb
sbb
xor
xor
jne
fxch
pop
shl
mov
mov
stc
push
mov
cwtl
push
out
mov
jnp
and
mov
mov
lahf
xor
add
adc
cmp
cmpsb
jbe
out
lahf
adc
repz
bound
adc
popa
scas
xorl
and
sub
mov
mov
dec
sub
or
xor
mov
push
imul
aaa
xlat
pop
subl
jp
mov
xor
cltd
jecxz
rdmsr
mov
xchg
jl
dec
add
jno
pop
pop
xor
rclb
test
icebp
scas
jnp
sub
aam
stos
sub
cmc
mov
or
push
cs
test
mov
jne
cmp
xor
xor
mov
fstps
pop
and
sub
jno
mov
in
dec
xor
dec
xchg
sbb
fcompl
push
bound
arpl
push
mov
daa
int3
xchg
stos
aad
mov
imul
sub
lcall
insb
or
and
out
pop
das
push
test
insb
hlt
or
cmp
daa
mov
xor
das
dec
jo
pop
xchg
out
fists
iret
jp
lret
push
push
mov
mov
arpl
scas
mov
cs
sub
pop
pop
out
stos
popw
setle
int3
cmc
pop
loopne
movsb
cs
mov
sub
mov
sub
and
xchg
xor
mov
insb
cmpsb
test
sbb
mov
in
sahf
scas
ss
call
or
pushf
daa
fistpl
popa
jecxz
es
pop
inc
out
test
sub
sub
test
add
xchg
sbb
sbbb
adc
daa
adc
lods
sbb
adc
dec
or
or
and
inc
cmp
mov
loope
loopne
adc
and
arpl
push
movl
cmp
sbb
mov
hlt
inc
lret
rorb
add
stc
movl
mov
leave
lods
je
or
mov
in
lret
adc
leave
dec
adc
stos
sbb
mov
dec
mov
aaa
imul
adc
test
jp
sub
sub
shlb
sbb
jae
cmpl
mov
and
or
push
daa
inc
fsubrs
lea
lahf
cmp
test
repz
mulb
push
dec
insl
std
push
mov
shlb
xor
cmpsb
jmp
dec
pop
mov
mov
loope
in
shrb
jns
xchg
loope
scas
scas
mov
std
inc
xor
dec
arpl
leave
mov
es
shrb
xchg
sahf
sub
aad
lahf
push
adc
leave
mov
sbb
lds
pop
xor
rcll
jne
pop
fisttpl
insb
iret
rorl
jnp
mov
mov
movsl
mov
inc
cmp
dec
mov
fsubrs
lcall
mov
sub
and
mov
sub
mov
stc
xor
aad
jae
stos
or
inc
mov
pop
icebp
enter
mov
gs
dec
fcmovb
insl
xor
scas
pop
shrl
cmp
sub
pushf
or
sub
in
sub
ret
aam
lds
mov
mov
dec
jno
mov
int3
test
or
loop
adc
out
test
sub
jns
pushl
mov
je
bound
inc
mov
repnz
pop
fsts
push
xchg
adc
es
scas
mov
adc
es
xchg
pop
cltd
push
mov
shrb
jno
cmp
mov
lcall
jmp
cwtl
pop
or
sub
or
gs
in
inc
sub
js
test
fisttpll
out
popf
inc
adc
into
test
into
mov
pop
call
push
jmp
dec
ja
in
xlat
jl
xchg
in
add
pusha
mov
or
xor
push
stos
ficoml
stos
aad
pop
inc
mov
push
popa
adc
jl
sbb
ficoms
cld
dec
out
dec
jge
push
dec
dec
adc
orb
pop
mov
sub
mov
dec
mov
mov
stos
sub
push
dec
addr16
roll
cmp
cmpsb
inc
call
test
xchg
ds
sub
dec
or
bound
mov
sbb
pusha
rorb
sarb
shrb
aad
fsub
inc
or
xchg
inc
pop
jno
shrl
addr16
pop
or
dec
adcb
xor
mov
inc
cmp
pushf
sahf
arpl
sub
in
orb
je
cmpsl
sbb
insl
fbstp
inc
shll
add
lret
inc
out
popf
cmp
cmp
sbb
sbb
dec
adc
xlat
xchg
stos
dec
or
mov
arpl
dec
mov
sub
xchg
push
push
outsl
decl
cmp
mov
push
pop
mov
fwait
mov
insb
test
dec
stos
or
push
dec
mov
push
jno
cmp
imul
scas
pop
test
mov
into
insl
in
test
rorl
or
aad
xor
cmpb
or
pop
lret
stos
mov
mov
js
or
jmp
andl
aad
mov
sbb
cmp
push
push
cmpl
inc
cmp
and
in
cmp
icebp
aam
or
push
jp
or
or
mov
outsl
lcall
xchg
mov
daa
ret
iret
pop
fidivrl
cmpsb
mov
jns
xchg
pop
jle
pop
fiadds
lods
mov
rol
ljmp
jg
mov
aaa
mov
lcall
stos
cmpsb
sub
sbb
xchg
aaa
sbb
mov
je
icebp
aas
jno
mov
sbb
fwait
stos
stc
lahf
lods
sbb
pop
pop
cmp
incb
push
roll
sbb
xchg
popa
in
sbb
cmpsl
mov
cmpsb
iret
or
orl
or
add
and
mov
xchg
add
sub
inc
clc
mov
repz
movsl
inc
inc
popa
xor
shll
out
lcall
and
lret
mov
dec
in
fucomp
fldcw
push
push
addr16
loope
jnp
mov
dec
mov
xor
dec
push
and
pop
adc
insl
lret
es
and
inc
inc
pop
shrl
mov
push
mov
xchg
arpl
sub
add
scas
sbb
push
push
dec
add
in
int
jp
push
subl
pop
and
lds
xchg
jo
mov
test
mov
mov
mov
xchg
hlt
cmc
xor
cs
stos
daa
imul
movzbl
mov
inc
push
jae
shld
and
js
cli
cmpsl
outsb
xchg
mov
fsubs
movsb
lcall
adc
aam
jo
push
call
cmp
and
incl
imul
mov
mov
or
hlt
lds
mov
bound
clc
cmpsl
lock
shr
mov
xor
int
rclb
popa
in
xchg
adc
adcb
mov
or
es
into
out
das
xchg
int3
bound
and
xchg
mov
push
xor
icebp
repz
jb
lods
insb
jp
nop
loopne
cmpsl
xchg
push
out
xchg
in
jle
cs
push
push
out
dec
mov
and
ret
add
dec
pushf
adc
push
pop
sbb
mov
inc
push
arpl
mov
pop
imul
mov
in
je
outsb
mov
in
arpl
shlb
jae
inc
mov
stc
lea
nop
jnp
shr
push
test
sub
flds
es
ficoml
mov
in
mov
mov
test
xor
loope
adc
dec
daa
shrb
js
dec
pop
out
imul
xchg
push
mov
imulb
dec
into
or
jle
punpckhdq
sbb
sti
popf
sub
in
lret
mov
lret
ja
cmp
movsb
cs
ja
nop
push
sbb
out
and
xchg
lods
hlt
xchg
add
mov
xchg
mov
mov
and
nop
adc
lret
cmp
jl
jp
mov
lcall
mov
into
daa
xor
sub
dec
fistl
or
in
jp
pop
sub
mov
cmc
ja
test
jle
dec
mov
into
pop
add
or
inc
jo
iret
mov
inc
inc
or
outsb
add
leave
xor
pop
in
daa
lods
lds
lcall
xor
imul
dec
mov
and
lret
sub
add
adc
push
sub
outsb
inc
lea
andl
or
psrlw
jp
push
push
sub
lahf
loopne
add
dec
fimuls
mov
mov
push
test
dec
dec
rcll
xchg
dec
roll
std
inc
mov
push
sbb
lock
pop
mov
inc
in
bound
or
adc
dec
out
jbe
addr16
fcmovb
stos
cmpsl
mov
or
daa
cmc
insb
inc
jns
mov
out
test
push
lret
call
test
add
mov
cs
stos
pop
lcall
popa
or
ss
lea
sub
sbb
ror
sub
ljmp
dec
dec
or
int
cmp
xchg
push
inc
cmp
insb
jmp
push
int3
fwait
dec
xchg
aaa
arpl
mov
push
push
lds
cmp
in
aam
pop
dec
fnsave
sbb
pusha
mov
lcall
jno
xlat
xor
push
or
popa
xchg
and
xlat
mov
push
mov
ss
dec
mov
pop
cli
leave
jmp
fs
jge
or
das
adc
dec
and
scas
adc
sbb
cmp
daa
adc
adc
mov
sub
arpl
stos
daa
in
loop
pop
mov
xchg
scas
push
js
add
sbb
and
fcmovnbe
and
and
gs
jmp
pop
dec
and
mov
dec
ds
mov
ss
lds
adc
dec
sar
test
push
int3
lock
call
mov
push
leave
jne
inc
cmp
inc
fwait
outsl
xchg
int3
test
hlt
fs
mov
jp
jmp
rcl
cmp
dec
and
cli
adc
in
outsl
nop
inc
lcall
jmp
inc
mov
lea
ja
and
adc
or
add
fimull
aad
fldpi
mov
leave
cmp
scas
pop
sub
movsb
stos
pop
imul
mov
sbb
or
jne
imul
sbb
ret
loop
fisubl
aam
xchg
cs
mov
jno
lret
mov
scas
pop
sub
mov
test
test
aas
pushf
cmp
mov
mov
xor
aad
in
mov
xchg
popa
lock
mov
daa
or
lea
lret
push
in
daa
add
gs
jmp
adc
inc
xor
pop
push
jno
mov
fwait
and
inc
lret
sub
mov
xchg
xor
lret
xchg
in
xor
adc
fs
js
std
test
and
stos
jmp
scas
jmp
adc
imul
scas
inc
movsb
fildll
cmp
sub
xchg
adc
cmp
mov
inc
pop
and
mov
in
sahf
dec
jl
insb
imul
mov
mov
mov
mov
cmpsb
xlat
mov
jp
pop
sarl
cwtl
lret
jl
mov
fmuls
fbstp
loope
fsub
xchg
call
inc
xor
push
dec
jp
lret
dec
or
xchg
fstpt
cmpsb
lret
pop
bound
xchg
rcrl
cmp
ja
scas
sub
push
int3
dec
es
jnp
dec
movsb
sti
lret
data16
scas
sbb
jmp
sub
adc
into
mov
mov
imul
test
jmp
cmpsl
pop
repz
loopne
scas
and
xor
push
cmp
cmpsb
testb
out
fisttpll
sbb
fnstenv
pushf
dec
mov
nop
insl
rclb
movsb
nop
les
and
lods
cli
cwtl
movb
cmpb
adc
dec
jb
pop
dec
sarl
cwtl
mov
repnz
adc
push
frstor
mov
jp
pop
repnz
roll
insl
daa
jle
dec
jno
pop
mov
push
xchg
push
push
jb
pop
out
push
pop
inc
aad
mov
sahf
lret
fidivl
loop
cmp
and
push
sbb
jnp
hlt
and
mov
scas
pop
xchg
push
rcll
dec
xchg
mov
jmp
adc
lret
cmp
popf
jns
jnp
xchg
xchg
loop
lods
adc
add
or
xchg
mov
mov
leave
outsl
mov
negb
daa
push
or
jmp
xchg
mov
lds
inc
pop
std
or
stos
and
push
repnz
push
data16
mov
je
insl
scas
mov
out
sbb
mov
dec
test
rcrl
data16
decl
lock
pop
lea
leave
iret
cs
je
adc
pop
dec
jb
call
shr
adcb
stos
pop
inc
mov
sbb
int
mov
xchg
loopne
rcll
sbb
test
ja
hlt
and
xor
pop
data16
adc
mov
sahf
and
push
call
ret
fbld
lret
mov
push
mov
push
jmp
jp
inc
mov
sub
aas
stos
dec
cwtl
push
dec
andb
lea
into
and
loop
mov
arpl
lods
cwtl
divb
cltd
mov
cmpsb
sub
mov
cmp
fs
or
in
and
mov
or
mov
jle
int
in
in
mov
les
push
xlat
inc
cwtl
sub
pop
push
arpl
dec
xchg
cmp
pop
adc
sti
es
mov
push
cwtl
inc
sub
mov
cltd
aad
sub
flds
and
subb
lret
push
imul
in
xor
mov
push
daa
popf
loopne
inc
dec
lcall
ss
int3
dec
shrl
pop
adc
sub
push
repnz
mov
into
jae
pop
pop
adc
lret
int3
and
sbb
arpl
pop
daa
pop
leave
jge
movsl
mov
int3
shlb
leave
mov
sbb
push
sbb
pop
popf
je
or
das
arpl
xchg
push
dec
arpl
loopne
jb
outsl
jae
mov
gs
xchg
ror
imul
icebp
popf
ds
fwait
push
sub
jb
repnz
adc
loop
dec
sbbl
aam
in
jns
mov
mov
xchg
pop
nop
das
sbb
fwait
xchg
fbstp
xor
pop
mov
mov
sahf
sbb
arpl
add
call
movsl
mov
lcall
cs
lods
and
sbb
aad
insb
pusha
jecxz
sahf
mov
lahf
in
or
pop
int3
rorb
imul
icebp
std
inc
sbb
fwait
ror
je
or
das
jecxz
mov
dec
dec
jecxz
xchg
add
in
jns
mov
mov
rcrl
sbb
je
or
std
adc
sub
setae
xor
add
int3
inc
stos
inc
mov
inc
adc
cli
cmpsl
jle
or
daa
pop
jbe
mov
mov
retw
xchg
insb
mov
lds
stos
data16
push
lds
xchg
push
movsl
jg
mov
lods
out
sbb
sub
in
push
nop
sbb
push
or
bnd
push
jmp
cs
fsubrs
fldl2t
sbb
jmp
push
push
jmp
and
cwtl
outsb
dec
leave
inc
int
mov
jl
dec
lods
xchg
das
or
or
int3
mov
ss
aas
adc
adc
daa
imul
leave
sbb
outsb
int3
mov
or
xchg
cmp
iret
stos
cmp
mov
dec
outsb
push
insb
popl
mov
lcall
icebp
icebp
pop
or
and
dec
mov
fstp
mov
punpcklwd
lods
stos
dec
dec
sbb
jp
ljmp
push
bswap
mov
adc
xor
lods
sub
psubsb
stos
pop
or
ds
mov
jge
sbb
jne
adc
cwtl
mov
and
pop
push
mov
cmp
ds
and
push
inc
sahf
push
mov
xchg
mov
dec
jp
sub
mov
adc
insl
sub
lret
andps
nop
and
cwtl
lret
add
xchg
adc
addr16
cwtl
xchg
or
and
or
and
insl
xchg
ds
notb
movsl
jae
pause
ret
pop
andb
sti
push
xor
push
push
sbb
jo
cmp
lret
arpl
cmpsb
test
adcb
ljmp
cwtl
cmp
xchg
cwtl
dec
arpl
mov
inc
mov
mov
mov
xor
or
xchg
pop
flds
xchg
mov
int
xorl
cmp
sub
and
repnz
xlat
loopne
adc
repnz
daa
fstpt
cmp
inc
mov
push
pusha
scas
sbb
mov
or
mov
mov
or
jmp
cmpsb
push
shrl
inc
mov
outsb
sbb
mov
sbb
jnp
enter
into
or
mov
or
dec
mov
ja
jns
mov
sub
aad
and
jp
xchg
mov
nop
or
mov
jnp
xor
sub
jno
cmp
adc
mov
push
jmp
ljmp
pop
int
out
jg
cmc
fwait
jl
fildll
mov
push
or
push
xchg
aas
adc
movsl
mov
es
jle
repz
cs
xlat
jne
loopne
rcll
jge
stc
push
or
jmp
mov
xor
lret
inc
roll
mov
test
cli
fstps
mov
xor
out
shll
dec
repz
sub
mov
jae
insb
hlt
mov
movsl
and
scas
xchg
test
sti
or
std
jg
or
sub
test
out
sbb
pushf
orb
lods
in
std
jge
sysexit
jle
loop
mov
fbld
sahf
rorl
push
add
mov
or
jno
and
mov
push
stos
sub
sahf
nop
and
xor
nop
mov
inc
mov
mov
jnp
psrlq
lea
test
jp
jb
icebp
fisubl
add
ljmp
daa
adc
scas
mov
imul
rorb
cmp
xchg
scas
xchg
enter
daa
ret
jns
stos
xchg
xchg
add
push
cltd
nop
mov
mov
sarb
por
xor
and
ret
mov
inc
or
rclb
jnp
pop
das
cmp
sbb
scas
popa
jle
push
jo
iret
push
xor
or
and
dec
mov
mov
test
jb
insl
aad
negb
adc
sahf
gs
je
fisubrs
scas
incl
mov
repz
push
repnz
mov
rorb
inc
out
add
movq
test
mov
scas
or
mov
sar
lea
out
fisttpl
xor
imul
pop
jmp
sbb
jp
push
mov
clc
loop
out
outsb
ror
cmpsl
cmc
in
ljmp
jp
cmp
bound
mov
sub
cmc
or
push
inc
pusha
pop
cltd
leave
cmpsl
mov
sbb
hlt
pop
movsl
xchg
outsb
adc
lret
adc
or
stos
fisttpll
sbb
icebp
leave
push
push
test
sub
movsl
xchg
sbb
in
bnd
out
stos
pop
inc
cmpsb
int3
pop
in
push
push
inc
ss
add
mov
fwait
ret
add
pop
iret
jle
das
sub
loop
dec
dec
stos
cmpsl
dec
sbb
or
add
stos
jl
or
rcrl
adc
add
aad
popf
mov
lods
in
jp
pusha
pop
divl
iret
lea
fwait
aaa
push
or
aam
icebp
daa
scas
push
aam
mov
adc
adc
jbe
mov
mov
pop
sbb
xor
or
lods
jmp
mov
push
push
pop
dec
cs
xor
inc
cwtl
dec
push
xchg
pop
sbb
dec
mov
jae
cmp
xor
sub
jno
mov
pop
stos
push
je
cmpl
fmul
or
jae
pop
add
mov
push
cmpsl
mov
inc
int3
loope
sub
int
jns
sbb
mov
mov
push
daa
movsl
and
or
mull
mov
and
mov
lea
inc
bound
imul
xor
aaa
mov
or
sub
xlat
sbb
hlt
fiadds
mov
xor
fwait
test
addr16
xor
stc
cltd
test
jg
addr16
jae
mov
outsl
ss
fsts
adc
sbb
adc
rorb
loopne,pn
sub
jno
dec
mov
nop
dec
xor
sar
inc
int3
jns
test
lds
mov
push
mov
sub
fidivs
add
jg
test
push
mov
mov
sbb
daa
cmp
test
lods
sbb
pop
sub
and
int
test
mov
jnp
in
and
cs
lock
call
adc
sub
sbb
sub
sub
rcll
mov
xchg
xlat
push
push
pop
into
test
jnp
sbb
mov
dec
mov
ja
stc
addr16
imull
push
sub
mov
or
lret
sbb
pop
push
mov
pushl
call
out
inc
push
lret
int
call
pusha
ljmp
pop
sub
xchg
dec
sub
adc
cld
fldenv
dec
xor
std
cwtl
adc
sub
xor
mov
jno
lcall
fldcw
xchg
push
aaa
je
repnz
xchg
sub
aam
and
icebp
push
push
lock
inc
adc
es
out
mov
popf
dec
insb
jl
mov
sub
nop
sub
add
imull
mov
sar
cmc
sti
inc
xor
outsb
mov
xchg
bound
pushf
lea
stos
or
xor
aaa
out
hlt
stos
in
and
jle
cltd
or
and
pop
push
aas
cwtl
ror
imul
hlt
add
call
adc
repnz
mov
insb
or
shll
adc
xchg
pop
addr16
cmp
pop
lea
movsb
dec
rep
pop
add
add
push
loop
adc
icebp
push
sbb
push
nop
mov
pop
das
imul
dec
adc
roll
mov
sbb
adc
pop
fwait
cmp
pop
cs
daa
push
mov
jnp
mov
mov
aas
pop
lcall
add
and
and
cmp
adc
or
cmp
pushf
das
xor
jp
cwtl
jae
leave
inc
mov
xchg
test
pop
stos
cwtl
lret
daa
sarl
add
dec
sub
scas
jae
lahf
mov
cmp
mov
push
fucomi
xchg
mov
cmp
pop
xor
gs
aaa
mov
mov
dec
ds
push
sahf
lods
cltd
cwtl
or
jmp
call
jnp
sub
xchg
jl
out
dec
adc
and
mov
mov
mov
ljmp
je
inc
testb
insl
push
add
sbb
xchg
js
mov
outsl
add
es
ret
jl
jo
fldcw
mov
mov
ljmp
or
xchg
popf
nop
or
push
daa
mov
rcrb
nop
cwtl
fnstcw
or
stc
adc
xchg
divb
outsl
insl
jl
mov
dec
imul
ret
pusha
inc
adc
repnz
xchg
mov
in
dec
sbb
test
xor
adc
inc
push
add
push
lods
popf
xor
addb
pop
sbb
xor
sbb
outsb
test
fs
lods
adc
mov
sbb
inc
movsl
push
imul
push
loop
out
stos
out
insl
push
fucomp
dec
mov
movsl
arpl
inc
in
bound
and
or
and
xor
fwait
ljmp
xchg
mov
aad
cld
cltd
sbb
stos
leave
push
fisttpl
mov
push
cli
bound
cmpsb
inc
mov
bound
imul
cwtl
in
xor
or
imul
sub
push
mov
repnz
or
mov
push
and
ljmp
test
pop
cwtl
hlt
fs
jl
test
pop
std
push
jg
call
add
push
sahf
ss
sub
mov
xchg
push
xor
std
xchg
add
incl
sbb
pop
jmp
pop
cmp
xchg
xor
mov
and
adc
cmc
mov
in
enter
push
dec
scas
adc
sar
add
and
inc
cmpsl
mov
xchg
dec
sub
aad
cmpsb
jmp
mov
cltd
xlat
sub
mov
dec
and
test
rorb
orb
pop
mov
outsb
cs
jecxz
xrelease
xchg
mov
pop
mov
push
and
mov
fisttpll
cmpsb
aam
sub
push
sub
mov
shrb
jnp
jle
sbb
push
inc
adc
mov
mov
push
jnp
xchg
xor
test
pusha
push
pop
xchg
xchg
arpl
faddl
mov
push
das
push
cltd
or
in
add
push
shlb
xchg
sub
nop
pop
xchg
jbe
cmp
pop
shll
arpl
xchg
push
adc
popf
mov
and
xor
pop
push
mov
ss
test
js
shll
loopne
lods
pop
dec
mov
dec
adc
inc
in
add
push
push
hlt
xchg
addr16
mov
dec
or
or
or
fnstsw
push
cmp
cmpb
sub
lret
popf
idivl
jns
mov
imul
xchg
or
mov
insb
lds
dec
sarl
out
in
cmp
push
mov
jp
daa
sub
pop
mov
lcall
insb
push
jnp
lods
and
push
call
in
mov
jno
in
int
test
adc
xor
mov
mov
repnz
and
mov
or
xchg
mov
test
mov
adc
test
inc
popf
xchg
sbb
mov
xchg
mov
dec
std
rcl
pavgw
and
xlat
mov
sub
daa
cmp
inc
aaa
xchg
jmp
and
das
aas
jns
mov
or
stos
rcll
test
or
xchg
jp
out
testb
aas
aad
mul
cld
je
nop
xchg
xor
xor
push
sbb
bound
adc
outsb
mov
imul
mov
div
pop
xchg
or
mov
xchg
mov
mov
sbb
std
dec
daa
xchg
ljmp
dec
mov
insl
jp
and
lret
push
mov
lahf
sub
dec
mov
loopne
dec
dec
shll
in
mov
xor
sbb
mov
test
orl
daa
mov
jns
stc
mov
mov
jmp
cltd
cmp
inc
pop
jmp
add
inc
mov
xchg
push
pop
cmp
lods
jnp
jae
inc
jle
dec
test
test
lea
xchg
mov
cmp
or
call
lret
imul
push
jnp
jae
jno
or
dec
int
pop
dec
sbb
or
xchg
dec
mov
out
sub
mov
sub
es
cs
popf
and
lcall
hlt
xchg
or
jne
enter
push
push
iret
mov
mov
imul
add
cld
pushf
test
xor
scas
inc
mov
jae
jno
in
dec
jnp
sbb
popl
xor
scas
inc
and
jecxz
mov
loope
sbb
jp
mov
test
or
cs
pop
popa
xchg
push
mov
mov
pop
in
scas
lods
mov
popa
mov
mov
cmp
out
mov
mov
push
test
aaa
addr16
mov
mov
push
pushf
mov
mov
add
sbb
jp
mov
mov
xchg
xor
lret
mov
jmp
scas
mov
mov
push
push
sub
clc
or
cmp
and
paddq
cs
mulb
lcall
xor
insb
xchg
adc
sub
dec
test
inc
fstps
push
stos
pop
lods
aad
and
es
inc
inc
in
jmp
adc
sbb
je
xor
in
cmp
jb
dec
sub
jmp
dec
jno
sub
dec
sahf
sbb
adc
jb
repz
sti
sbb
cwtl
pop
dec
sub
mov
decl
adc
negb
mov
insb
movsl
mov
xchg
jno
shr
jns
cmp
sub
outsl
in
xchg
sub
mov
mov
dec
push
cmpsb
xor
outsb
fmuls
jae
or
mov
mov
std
pop
int
cmp
mov
scas
xchg
xor
mov
pop
scas
iret
and
inc
sub
mov
popa
sub
mov
sub
das
and
xchg
mov
es
rcr
call
mov
dec
iret
dec
sbb
outsb
push
loopne
adc
and
in
orb
push
sub
cmp
jmp
insl
dec
stos
lock
nop
fdivl
insb
jns
jne
das
mov
mov
xor
adc
int3
lret
daa
adc
mov
jno
mov
in
xor
sub
jg
jp
push
scas
test
cmp
push
mov
mov
mov
xchg
cmp
call
mov
jmp
imul
add
lcall
push
ss
xor
add
inc
nop
pop
cmp
in
xor
stos
negb
mov
inc
inc
xacquire
jnp
jb
dec
sbb
outsl
in
nop
dec
aad
loop
inc
sarl
icebp
fldenv
jae
mov
stos
sub
push
lret
dec
sbb
ss
stos
mov
inc
jmp
jle
cltd
adc
sub
or
jmp
cmpsb
xor
imul
mov
mov
mov
gs
negl
cmp
pusha
mov
jl
pop
stos
push
mov
mov
lock
or
lea
pusha
and
js
lds
dec
testl
jmp
lcall
scas
loop
add
jecxz
pop
sub
imul
arpl
das
adc
es
mov
adc
mov
iret
pminub
mov
imul
dec
adc
nop
test
inc
shrb
push
insb
push
test
loop
mov
insb
dec
jno
out
fimull
jbe
adc
push
sbb
push
mov
stos
sahf
push
les
pop
mov
adc
and
mov
addr16
dec
push
loopne
push
leave
inc
testl
adc
scas
mov
rcrb
icebp
daa
aaa
adc
shrb
cwtl
dec
jae
bound
mov
xchg
cld
adc
rol
nop
mov
jge
xor
rorl
loop
nop
lcall
mov
cmp
xlat
sub
mov
and
and
adc
rorb
adc
lret
sbb
in
mov
imul
lds
jg
sub
arpl
xchg
jno
arpl
xlat
push
fs
jl
mov
ljmp
sub
sbb
inc
test
sub
xor
mov
sbb
adc
stos
pop
hlt
jbe
movsl
pop
cmp
sahf
sub
and
mov
mov
or
xchg
fstl
cmpsb
ljmp
mov
cltd
rorl
push
sbb
or
adc
addb
mov
push
bound
aad
repz
sbb
outsl
shll
addr16
inc
lahf
addr16
mov
test
adc
xchg
push
xor
mov
xchg
sbb
inc
mov
mov
mov
pusha
fisttpl
xor
cmpsb
push
push
imul
sub
mov
push
sbb
outsl
dec
mov
rcrl
enter
cmp
mov
stc
cmp
jecxz
xchg
sub
pop
lcall
inc
or
adc
mov
mov
mov
dec
mov
cmp
add
int
xchg
and
insb
xor
and
stos
inc
push
add
xor
adc
jge
jae
cwtl
repz
mov
mov
jb
cwtl
sub
icebp
rclb
dec
int
inc
repnz
jns
jb
jmp
mov
das
test
xchg
sahf
jae
xchg
xor
push
popl
outsb
jp
xchg
and
jg
mov
fisubrs
jno
iret
mov
xchg
dec
jecxz
cwtl
lret
lret
pop
xchg
pusha
rorl
aas
out
or
cmp
insl
push
jecxz
cli
fcomps
jae
jns
jae
ret
fimuls
cmp
mov
insb
push
mov
adc
or
lcall
push
sar
sahf
movsl
sub
push
xchg
or
out
xchg
cmp
sbb
or
je
push
sbb
push
test
int
imul
aad
call
stos
jns
sbb
adc
aam
repnz
adc
push
jno
les
xchg
push
sub
jbe
jle
and
or
xchg
mov
mov
or
mov
fistpl
test
dec
sbb
aaa
dec
scas
add
jmp
bound
outsb
inc
cmp
pop
pushf
int3
cmp
dec
hlt
int3
cltd
xchg
imul
add
fstpl
push
add
stos
insl
sbb
xchg
in
cmp
insl
cmp
xchg
mov
or
pop
dec
jne
jmp
leave
pop
cmp
dec
adc
daa
mull
push
push
lret
mov
leave
jnp
or
inc
pushf
jle
jb
lock
cs
cmp
cmp
pop
adc
cmp
stos
xchg
jnp
mov
test
insb
or
loope
xchg
mov
mov
mov
mov
mov
nop
pop
cmp
in
push
jmp
mov
test
cs
into
add
setno
xchg
mov
add
in
stos
cmp
adc
pop
imul
push
adc
xchg
mov
cltd
cmp
mov
adc
mov
push
push
sbb
pop
mov
fidivl
mov
mov
dec
fldcw
out
in
xor
xor
or
arpl
cmpsl
fcoms
dec
mov
or
add
cwtl
lock
pop
insb
jmp
xor
hlt
popa
pop
mov
imull
jno
pop
push
dec
push
inc
int3
lret
push
xor
aad
sub
xchg
outsl
rcll
jp
mov
and
loopne
mov
or
cs
add
mov
in
mov
mov
lret
test
pusha
push
push
test
cmp
std
hlt
cltd
gs
mov
fsts
push
insb
add
adc
call
xor
dec
push
jnp
dec
jecxz
sbbl
fsubrs
mov
adc
add
xor
dec
adc
rorb
and
mov
xchg
jnp
pop
sbbb
aam
mov
js
into
mov
cmp
rcrb
fisubrs
outsb
rcl
adc
cwtl
lods
inc
xor
dec
cmp
dec
or
sub
push
sbb
or
orl
icebp
movsl
cld
xor
jnp
xor
jo
outsl
or
es
push
out
clc
dec
push
jno
sub
dec
ret
mov
call
pop
xchg
test
xchg
sub
daa
hlt
adc
stos
out
dec
in
popf
and
cmp
jge
sub
test
sbb
sbbb
test
adc
push
enter
mov
sub
xor
int
adc
test
mov
ret
lock
js
jle
sbb
push
lods
mov
repnz
inc
mov
lods
mov
das
push
mov
fiaddl
pop
inc
out
daa
inc
mov
mov
sbb
fdivs
test
stos
das
adc
mov
inc
and
dec
and
jae
test
testb
xor
mov
mov
push
mov
sbb
or
js
sub
das
fildl
push
mov
mov
inc
jecxz
push
or
shr
adc
nop
or
or
adc
xchg
adc
imull
push
jb
xchg
sti
sahf
js
pop
int3
mov
sub
dec
inc
jbe
cmp
pop
sarl
stos
push
push
mov
push
mov
cmp
call
scas
fdivr
into
mov
push
adc
imul
sub
push
dec
xor
or
bound
insb
das
adc
aaa
pop
adc
mov
xchg
sbb
push
bound
jne
sbb
ja
jmp
cmp
pop
cmp
cmpsb
aam
fimull
push
inc
nop
push
pop
adc
hlt
sbb
mov
mov
cltd
add
dec
outsl
and
dec
shrl
jmp
repnz
push
xchg
js
and
test
dec
sahf
jp
push
sub
hlt
lcall
sbb
mov
orl
or
fsubr
lahf
jo
mov
cmp
adc
xchg
adc
xchg
repnz
jb
sub
cmp
push
cmpsl
or
imull
jmp
xchg
adc
dec
aad
insl
xor
dec
xchg
dec
and
hlt
outsl
int3
fstps
sbb
or
lret
test
mov
shr
imul
pop
popf
popa
xor
adc
test
cmpsl
jp
fwait
outsl
push
sbb
dec
sbb
sub
push
push
mov
push
lcall
imul
or
jmp
inc
repz
and
cmp
xchg
inc
mov
in
and
and
jmp
xor
and
dec
push
scas
push
inc
in
adc
mov
rcr
icebp
cwtl
xchg
test
int
xor
sti
sub
jnp
sbb
pop
sahf
dec
cmp
cmp
loope
dec
push
aad
call
mov
stc
enter
lods
jnp
out
loope
add
push
inc
mov
adc
int
dec
pop
sub
inc
int3
aad
mov
adc
jle
cmovnp
mov
sub
clc
rorl
into
sub
jno
inc
xchg
and
mov
adc
rclb
mov
fldcw
nop
add
rorb
int
cmpsb
sbb
loopne
lret
mov
int3
xchg
in
and
sub
adc
fsubl
xor
jnp
into
pop
shlb
jbe
inc
mov
sbb
jae
fsub
dec
adc
add
inc
in
fcoml
push
je
or
les
js
sub
mov
or
pop
adc
out
bound
orl
test
int
cmpsb
stos
dec
repz
imul
xchg
mov
sbbl
inc
and
shll
fs
sub
lods
jg
or
lret
xchg
push
and
sbb
ret
sbb
dec
shll
push
xchg
ret
mov
sub
mov
sbb
pop
mov
sub
loopne
ja
nop
push
sub
mov
sub
das
xor
push
cwtl
mov
sub
adc
inc
xchg
push
dec
daa
in
clc
cs
dec
insb
adc
jb
imul
add
imull
sbb
int3
in
jmp
or
test
push
inc
movsb
incl
scas
xor
cmpsl
cmp
ds
adc
xchg
pop
daa
adc
push
idiv
sarl
and
fsts
pop
lret
cmp
sub
sub
mov
daa
mov
cltd
in
and
ljmp
xlat
int3
into
adc
stos
xlat
and
mov
xchg
mov
cmpsl
adc
xchg
and
sbb
mov
push
rcrb
pop
out
cwtl
lret
cmp
mov
hlt
rclb
mov
ficoml
mov
hlt
daa
into
mov
lods
sub
scas
dec
stos
add
cmp
cwtl
xor
pop
data16
out
mov
mov
sub
xchg
imull
sub
sbb
cwtl
cmpsb
lcall
roll
lock
or
mov
sbb
or
cwtl
xchg
pop
psrad
addr16
movsl
dec
cmp
enter
xchg
dec
or
xchg
xchg
das
pusha
pop
adc
pop
push
sub
insl
or
or
inc
mov
loop
mov
cmp
aaa
stos
mov
dec
mov
rcrl
mov
mov
enter
add
and
decb
cs
or
movsb
or
or
fs
cwtl
adc
xchg
scas
sub
js
addb
mov
push
enter
lret
sub
int3
mov
pop
popf
test
das
int
xor
or
pop
sti
xor
jnp
push
imul
mov
cmp
xor
cld
sbb
and
or
shrl
cmp
hlt
aam
mov
stos
jmp
sahf
adcb
dec
test
jp
mov
xor
and
mov
lock
adc
or
outsl
insl
pop
lret
dec
test
sbb
adc
jae
adc
loop
adc
lock
ds
call
test
into
roll
sub
lret
scas
xchg
and
mov
pop
imul
and
add
dec
outsl
icebp
xor
mov
pop
popa
aam
ss
iret
ret
mov
dec
or
addr16
inc
movsb
sbb
sahf
int3
add
dec
mov
push
lea
daa
sub
mov
mov
push
push
jno
mov
jmp
cmp
inc
and
dec
sti
lcall
cmp
dec
jnp
rep
std
and
lods
xor
test
ret
pop
int
xchg
fistpll
sbb
pop
cmp
mov
xor
gs
stos
pop
sub
cmp
or
sbb
xchg
cmp
dec
add
es
or
loope
outsb
mov
xor
mov
lret
jnp
pop
xor
dec
dec
sub
lahf
pop
daa
mov
mov
std
or
pop
xor
roll
sbb
pop
test
fldcw
sub
sbb
and
pop
lahf
cld
shlb
rorl
les
test
dec
sbb
or
mov
sbb
lock
shlb
push
lock
insb
xchg
adc
sub
insl
idiv
shrl
sahf
xlat
push
mov
push
sti
xor
mov
xchg
sbbl
and
lcall
adc
push
add
add
xlat
mov
mov
test
lock
dec
jmp
pop
sbb
mov
mov
mov
test
aad
mov
push
lods
jmp
xor
into
cwtl
aad
mov
mov
lds
xchg
fwait
xor
aas
jbe
es
cld
dec
enter
sbb
outsb
outsb
imull
or
fists
lods
pop
and
in
push
out
leave
add
arpl
xor
mov
dec
cmp
fs
and
push
pop
je
push
pop
sub
stos
sti
in
jae
stc
dec
orl
aam
mov
or
dec
les
jge
push
sahf
push
jns
aas
mov
push
sub
mov
adc
pop
ss
or
pop
aam
sbb
xchg
cltd
adc
inc
test
stos
outsl
xchg
inc
imul
cmc
inc
jle
icebp
dec
subb
call
push
psubusb
mov
out
adc
ret
insl
push
and
sbb
mov
hlt
clc
das
pop
or
stos
sbb
jne
lock
aas
or
insb
shrl
lods
push
pop
hlt
xor
xchg
leave
insb
adc
cmc
pop
sbb
mov
rorl
shll
adc
decl
add
lods
push
cmp
xor
incb
pop
xor
mov
mov
popa
int
push
out
movsl
lock
xchg
call
mov
push
xorb
lea
out
adc
int3
int3
imul
sub
mov
mov
lods
jno
dec
cltd
fwait
push
scas
inc
fiaddl
mov
scas
push
sbb
daa
shl
lock
in
jp
lcall
push
dec
sbb
out
inc
inc
lods
inc
sub
insl
inc
or
test
outsl
stos
xchg
call
test
stos
stos
adc
mov
sti
movsb
push
jnp
aam
aad
pop
lock
in
push
jg
mov
es
rol
ss
push
inc
sti
cmp
pop
repz
dec
sbb
sub
jecxz
test
cmp
or
mov
rorb
ret
ljmp
lret
ja
add
pop
sub
add
sub
xchg
sti
ja
xor
pop
sahf
fwait
push
jmp
pop
imul
inc
mov
push
mov
or
add
adcb
shrl
into
dec
cmpsb
ljmp
lods
shl
adc
movsl
clc
dec
aad
cmp
loop
mov
dec
add
inc
dec
mov
or
xor
in
or
aas
mov
sub
call
push
jmp
cmpl
push
pop
cli
xchg
imul
cwtl
fsubrl
xor
stos
xor
stc
or
rorl
sarb
xor
fisttpll
fdivs
gs
lret
push
mov
mov
inc
jl
adc
out
xorl
stc
dec
sbb
sub
mov
jne
int3
xchg
lret
inc
fnstsw
ds
jo
cmp
movsb
sbb
mov
in
and
mov
xor
xor
mov
shl
xchg
and
inc
test
loop
shlb
xchg
xchg
cld
cmp
hlt
mov
scas
dec
push
inc
jl
lret
rolb
loop
int3
scas
xchg
pop
js
into
lret
cmp
push
pop
out
shrl
or
inc
mov
dec
pushf
addr16
and
cmpsb
and
sub
cmp
stos
add
nop
mov
js
cmp
inc
xor
sub
mov
mov
stc
rcrl
inc
and
inc
xchg
std
dec
xor
xchg
lret
and
shlb
push
mov
cltd
and
dec
inc
rcrl
lods
sub
out
shrb
dec
push
pop
dec
push
dec
xchg
cli
lock
sahf
or
dec
stos
cmp
lret
lret
jp
sbb
repz
lea
pop
loopne
int3
mov
lock
movsb
fisubs
mov
lock
je
xchg
jb
or
xor
movl
int3
jo
lea
mov
jo
jbe
mov
mov
mov
jmp
fmul
push
fbld
push
push
or
and
aad
mov
scas
dec
popl
xchg
or
push
pop
jmp
fnstenv
adc
cwtl
insl
pop
xchg
hlt
dec
pop
mov
mov
inc
ss
push
sbb
push
mov
sub
inc
sub
and
rclb
mov
imul
sbb
into
outsl
mov
lds
hlt
daa
aaa
jecxz
cmp
adc
out
add
mov
mov
fabs
mov
popa
inc
jp
xchg
inc
push
sbb
aaa
sbb
movsl
loopne,pn
xchg
lods
in
andl
hlt
sbb
adcl
mov
hlt
outsb
and
lret
rcl
sbb
and
aad
stc
shll
imul
fs
dec
mov
scas
imul
lret
repnz
stos
push
fcmovbe
xchg
out
aam
xchg
ucomiss
sahf
scas
fst
mov
sbb
cmpsl
dec
mov
xchg
push
cmp
pop
nop
mov
push
mov
lods
adc
movsb
into
lahf
cld
or
jmp
cmp
dec
adc
adc
daa
das
das
cs
mov
push
or
repz
fstps
mov
jmp
outsl
jnp
lret
and
std
dec
jg
mov
adcb
add
jno
cmp
icebp
xchg
outsl
xchg
orb
inc
jns
push
scas
push
repnz
push
incb
add
cmp
dec
sbb
or
dec
sub
pop
stos
int3
shlb
mov
cwtl
mov
mov
rcll
jbe
jno
out
mov
in
mov
test
adc
push
dec
not
inc
int3
out
push
jno
push
push
adc
rorb
push
adc
leave
sub
mov
sub
inc
mov
xchg
repnz
and
push
add
setge
pop
mov
mov
push
icebp
mov
sub
repnz
push
sbb
addl
xchg
sbbb
xor
sbb
push
shl
push
inc
js
sub
jecxz
in
sub
cs
lret
outsl
push
bound
mov
push
sarl
mov
and
inc
aad
dec
xchg
adc
mov
mov
dec
stos
and
cmp
mov
and
je
into
lret
jb
clc
dec
das
rcrb
loopne
pop
push
lret
and
adcl
test
or
xchg
stos
sub
cwtl
push
dec
add
pop
pushf
xor
and
xor
stos
xchg
or
inc
mov
adc
bound
mov
cmp
dec
fucomp
movsb
cwtl
inc
xchg
pop
and
xchg
or
push
xor
mov
push
stc
dec
dec
outsl
out
xchg
fidivrl
mov
push
fwait
dec
sub
inc
popa
jnp
sub
arpl
sbb
push
push
imul
cmp
mov
les
or
adc
mov
mov
mov
movsl
sub
xor
jne
and
shll
jne
push
adc
push
and
mov
push
in
and
enter
clc
sbb
and
imul
sub
sub
stos
jg
pop
mov
rclb
testl
sub
mov
or
inc
shrl
inc
add
mov
pusha
sub
les
ret
test
fcomps
inc
push
push
icebp
mov
jno
cmp
adc
test
ja
mov
xchg
push
sub
stos
mov
in
push
sub
xchg
sbb
mov
add
dec
add
mov
mov
bound
lds
and
sbb
jge
add
rorl
clc
inc
adc
push
jo
inc
mov
lret
orb
pop
mov
sbb
bswap
unpcklps
scas
mov
std
push
out
or
loop
scas
cltd
rcll
or
dec
xchg
sub
xchg
mov
leave
xchg
lahf
add
call
jnp
sar
in
into
loop
lods
lcall
mov
push
xlat
adc
inc
mov
xchg
fnstcw
addl
jne
rorl
out
adc
ljmp
or
sbb
pop
push
adcb
mov
jmp
mov
fidivrs
leave
ja
and
scas
or
lret
repnz
pop
stos
sub
mov
repz
pop
jno
xchg
fldcw
aad
mov
movsb
sub
rclb
mov
fstps
lods
cmc
mov
mov
lock
in
ss
mov
jno
shr
sbb
mov
lahf
out
cmpsb
push
cmp
add
pop
and
lea
or
into
adc
rcll
xchg
mov
push
out
inc
sub
xor
jp
sbb
pusha
gs
pop
ror
dec
add
add
mov
pop
mov
rcl
pop
cmp
or
cmc
mov
adc
scas
dec
scas
aas
mov
insb
inc
fsubrs
mov
pop
and
inc
xchg
cmp
imul
hlt
aam
imul
bound
nop
and
in
mov
push
ljmp
adc
cmp
dec
and
pop
lret
adc
pop
mov
ljmp
stos
loop
adc
loop
iret
pop
lds
daa
cli
or
fs
xor
movsb
imull
call
adc
data16
inc
adc
orl
adc
add
sbb
mov
cmp
mov
xchg
mov
loop
pop
sbb
movsl
js
add
jno
int3
mov
lahf
dec
mov
filds
inc
clc
bound
negb
xchg
dec
lds
pushf
xchg
dec
stos
cwtl
imul
jb
cmova
in
xor
jp
js
stos
mov
sbb
pop
cs
aad
push
divl
dec
js
ret
xor
sub
inc
fs
outsb
scas
cmp
add
jg
jmp
ljmp
pop
xchg
aas
in
in
sbb
jnp
jb
xchg
xor
stos
xchg
jno
lahf
in
imul
iret
lock
mov
enter
dec
or
sbb
pop
icebp
mov
xchg
cwtl
test
dec
pop
adc
xchg
dec
sbb
mov
clc
fstps
pop
push
lret
lcall
add
iret
xor
ja
fsubrl
sbb
xchg
jne
adc
or
sub
pop
sbb
in
bswap
mov
out
mov
mov
mov
jecxz
xchg
pop
pop
or
aas
pop
push
mov
aas
leave
fistpll
dec
dec
cwtl
push
icebp
imul
push
and
mov
fs
pop
imulb
or
lds
mov
cmp
stc
sbb
cld
xor
mov
push
jns
cmp
jmp
testb
or
dec
mov
insl
stc
xchg
inc
adc
and
or
adc
sub
cwtl
idivb
mov
push
xor
and
fistl
call
sarb
sbb
aad
and
xchg
stos
and
or
mov
cwtl
stos
cmp
adc
mov
stc
push
sbb
in
aam
cmc
aam
getsec
hlt
sub
hlt
add
mov
enter
push
cmp
mov
sub
int
push
adc
int
mov
iret
or
mov
inc
sbb
mov
test
push
sbb
mov
insl
pop
cmp
xchg
push
test
lret
shll
in
push
mov
mov
dec
inc
pop
fidivrs
pusha
test
add
shlb
add
inc
lret
das
add
adc
in
lret
adc
loop
stos
adc
sub
mov
arpl
or
inc
sub
outsl
mov
mov
cmpsb
jg
js
lret
cltd
jb
out
scas
and
insl
add
pop
push
test
jle
insb
mov
nop
out
jg
mov
popf
ret
pop
xchg
daa
jg
mov
fnstsw
out
xchg
xor
add
punpcklwd
mov
add
scas
mov
add
mov
sbb
movswl
inc
jp
dec
pop
sbb
lret
scas
mov
adc
xchg
adc
lea
fs
scas
mov
inc
dec
popa
xchg
shr
fwait
jle
mov
negl
lcall
nop
rcll
dec
mov
orb
out
fldcw
rcrb
js
jle
jae
les
scas
stc
inc
sbb
push
sbb
sub
sub
or
cmpsb
cld
dec
and
or
fs
repz
inc
fisttpl
dec
fwait
sub
cmp
push
outsl
movsb
jno
loope
jecxz
out
sbb
imulb
mov
ljmp
inc
call
jmp
jb
cs
rcr
inc
out
push
data16
popl
cmp
insb
in
push
sub
or
aad
dec
pop
push
mov
xor
or
ljmp
and
test
and
sbb
mov
cmpsb
adc
xor
into
lods
lret
aaa
stos
movsl
int3
push
xchg
fwait
lds
repz
mov
pop
out
fs
in
jle
xchg
or
mov
lea
mov
cmpsb
fsubrp
pop
inc
std
aas
and
pushf
push
mov
int3
jp
mov
push
jle
pop
or
stos
dec
push
fistps
mov
out
fwait
shll
movsl
hlt
jle
inc
sar
fld
clc
jns
sbbl
shl
sub
pushf
es
aam
pop
push
aam
ja
xchg
nop
decb
mov
imul
mov
imul
iret
inc
or
aas
cmp
insl
pop
dec
jmp
andl
mov
pop
into
lret
ljmp
cmc
mov
pop
addr16
sbb
int3
sbb
or
add
imul
fmull
rorl
stos
jle
dec
xor
repz
push
cmc
pop
xor
daa
in
jnp
stos
pop
enter
adc
adc
frstor
xchg
mov
daa
push
mov
pusha
inc
lcall
jl
jno
xor
dec
jno
in
and
scas
adc
push
mov
ja
stos
or
pop
xor
push
adc
lods
insb
aam
call
mov
aam
repnz
gs
dec
insl
ds
jmp
ds
outsl
inc
ficoms
xchg
cmp
xchg
dec
xchg
mov
or
fcoms
sbb
dec
icebp
add
push
ss
xchg
cmpb
jp
lea
cmc
enter
adc
rcll
ds
int
push
jae
or
imul
mov
cmp
sbb
add
enter
push
xor
cmp
jp
xchg
adc
and
mov
lods
loop
inc
into
dec
mov
daa
loop
lcall
and
jg
push
jle
notb
or
pop
pop
repz
push
push
xchg
inc
and
jb
pop
mov
push
or
adc
pop
jns
add
and
inc
mov
lods
inc
es
outsl
cwtl
ljmp
xor
push
lock
push
test
pop
xchg
bound
pusha
out
mov
mov
mov
insl
subps
inc
pop
insl
test
jle
cld
test
repz
mov
push
sbb
mov
push
push
mov
jp
movsb
loopne
ret
jl
mov
lods
add
dec
imul
scas
add
fbstp
xor
push
out
shll
rorb
in
or
das
cwtl
sti
shlb
and
out
xor
dec
and
xchg
sub
pop
es
lods
and
in
sbb
pop
stos
outsb
xchg
scas
xchg
adc
aaa
lret
sub
push
stos
pop
pop
lret
ret
adc
scas
sbb
xchg
fistpl
or
mov
sbb
sbb
pop
jg
xchg
je
or
sbb
in
je
push
sbb
inc
xchg
xchg
dec
dec
push
push
test
jle
pusha
dec
cmp
jns
adc
ror
ds
imul
ljmp
arpl
fwait
add
mov
add
insl
arpl
cmovbe
test
stc
push
dec
mov
out
push
pop
mov
lret
or
sub
out
mov
push
in
hlt
mov
push
jmp
sub
fmull
add
out
ds
or
ds
adc
jp
sbb
mov
test
imul
xchg
aaa
fs
sbb
jb
lret
sub
dec
push
ljmp
scas
popf
cli
insb
cmc
cmp
and
lea
stc
lret
jnp
ljmp
pusha
lods
dec
xchg
pop
or
scas
mov
or
subb
or
jecxz
jmp
jp
ljmp
sub
mov
insb
sub
mov
adc
jl
mov
pop
notb
leave
push
dec
adc
dec
xchg
lret
pop
jb
and
cli
cmp
pop
xor
stos
mov
jno
cltd
stc
mov
sarb
and
ljmpw
and
or
stc
ljmp
imul
addb
cld
out
hlt
dec
jle,pt
dec
cwtl
adc
xchg
sahf
sub
adc
inc
add
cmpsb
mov
int3
or
push
test
dec
jne
jmp
mov
xchg
rorl
sub
les
stc
sub
mov
subb
sahf
mov
and
jmp
xchg
mov
into
dec
shr
into
rcrl
mov
loope
shlb
inc
sub
mov
roll
sub
push
push
or
dec
mov
dec
mov
or
add
cmp
sbb
dec
xchg
mov
xor
inc
loope
fs
sbb
mov
jg
push
fimull
in
adc
addr16
sub
mov
cwtl
test
add
mov
xlat
cmc
mov
add
jne
sbb
dec
jns
adc
pop
mov
or
sub
push
or
pop
dec
jnp
popa
sbb
loope
lods
dec
mov
sbb
sub
xchg
movsl
dec
inc
bound
mov
cwtl
xchg
mov
xor
out
lret
ret
push
mov
adc
jp
jnp
adc
cmpsl
or
cmp
in
movsb
sub
movsb
add
arpl
or
and
mov
push
sub
mov
inc
adc
xchg
aad
inc
jl
pop
orl
mov
mov
sbb
in
xor
adc
mov
lea
xor
out
in
lods
and
mov
sub
roll
jg
in
sub
fisubrl
rorl
je
mov
aaa
lret
pop
cld
or
insb
sbb
sub
push
mov
out
jb
out
push
dec
lret
pop
or
shr
shrb
repz
cs
xchg
dec
sub
jno
or
stos
or
dec
mov
jg
cmp
or
rorb
adc
adc
nop
sub
enter
test
pusha
jg
cmc
mov
cs
stos
xor
dec
fwait
pop
scas
add
pop
xor
jl
test
call
aas
add
out
xor
lods
mov
push
out
gs
xlat
stos
and
push
test
sbb
mov
fidivrs
sar
or
out
mov
push
dec
jne
or
xor
cltd
jmp
bound
subb
mov
sbb
xchg
inc
jp
arpl
cmp
faddl
or
jmp
dec
inc
inc
mov
sub
lret
sub
or
xlat
jecxz
arpl
int
fmuls
and
jg
test
out
pop
push
jo
mov
mov
out
xchg
das
mov
jmp
das
inc
inc
dec
mov
dec
mov
or
dec
in
enter
sub
or
imul
jae
dec
mov
lods
aas
sbb
stc
mov
outsl
xchg
scas
call
jnp
insb
dec
pusha
fbstp
movsb
leave
jp
fimull
xor
inc
cltd
bnd
cmpsl
in
aam
xor
or
push
jnp
mov
js
lock
icebp
inc
push
mov
pop
scas
sbb
push
daa
xor
scas
inc
lret
mov
or
out
sbb
or
inc
inc
aad
adc
imul
sub
mov
scas
shrb
jg
andl
leave
xor
adc
arpl
cmc
data16
pop
out
and
into
scas
jne
jp
cmp
and
pusha
stos
add
mov
scas
sbb
push
imul
loop
adc
in
cmp
sub
or
xchg
xor
sbb
idivl
adc
fwait
rclb
clc
dec
push
xor
jno
cli
adc
adc
or
cltd
mov
dec
imul
push
jbe
xchg
in
dec
test
push
cld
insb
aam
mov
lahf
mov
cmp
mov
push
lods
lea
daa
sar
mov
lcall
mov
gs
mov
add
iret
and
dec
cmp
push
or
aam
inc
cmp
daa
push
lret
or
stc
and
pop
pop
into
inc
inc
imul
iret
xchg
push
and
addl
add
subb
xchg
sub
xchg
add
cs
repnz
repnz
adc
mov
xchg
mov
dec
insb
dec
sub
or
and
jb
and
jns
add
adc
jnp
push
or
xchg
imul
mov
imul
hlt
pop
add
or
or
popa
push
xchg
sub
test
jl
jne
ficomps
int3
jbe
loopne
test
sahf
and
or
mov
imul
mov
push
dec
push
xchg
sti
adc
mov
test
add
lret
dec
rcr
inc
cmp
sub
testb
imul
and
pop
sahf
lret
cmp
jno
xchg
push
test
cld
push
mov
lcall
loopne
scas
in
and
lock
subl
fistl
popf
out
sbb
repz
jg
pop
or
es
push
sbb
mov
cs
xor
sbb
mov
jl
adc
mov
lret
movsb
and
xchg
outsb
push
adc
ret
ljmp
xor
cs
insb
xor
jno
fldenv
cmp
imul
mov
mov
lea
or
in
jb
cmp
push
insl
dec
out
aam
mov
rcll
and
push
repz
js
loop
sub
scas
nop
sbb
push
lds
sbb
aaa
mov
seta
push
adc
repnz
mov
scas
cmp
mov
push
pop
add
pop
dec
shll
adc
mov
push
test
repnz
and
fdivrs
int3
out
dec
adc
xor
or
movsl
push
int3
jmp
sbb
pop
in
xchg
scas
cs
push
sub
daa
push
ror
in
fcoms
mov
and
push
cmp
cmp
xchg
mov
mov
mov
popf
xor
mov
push
hlt
add
daa
jb
sbb
mov
cmpsb
xor
movsb
into
pop
cmp
scas
outsl
add
psrlw
fdivp
enter
xchg
jp
xlat
pop
mov
cwtl
scas
insl
cs
cmp
ljmp
add
int3
iret
mov
leave
mov
stos
sbb
gs
mov
notl
cwtl
push
stos
sar
stos
fimuls
fisttps
and
outsl
icebp
adc
mov
rcrl
pop
dec
jo
pop
call
mov
cli
mov
daa
ret
das
jo
nop
push
push
dec
daa
sti
std
jb
or
and
push
xchg
push
xchg
std
sub
xor
sahf
pop
push
xchg
outsb
daa
add
sbb
and
cmpsb
sub
cmpsl
or
cmpsb
fisttpll
negb
leave
push
stos
dec
stos
mov
and
aad
sbb
sbb
cli
clc
dec
loope
pop
lcall
adc
ljmp
push
xchg
int
test
aam
mov
inc
ror
ja
and
nop
mov
sti
ds
adc
fldcw
ret
dec
or
cltd
stos
ret
fisttps
xchg
dec
pop
xor
dec
scas
pop
int
sbb
dec
jb
fstpt
dec
cmp
jbe
lea
mov
sti
pop
insb
push
scas
lret
sahf
sbb
sbb
and
mov
sub
les
xor
stos
pushf
shl
mov
leave
xor
mov
mov
insb
xchg
lahf
jns
outsb
loop
aas
imul
or
sbb
outsb
sbb
or
lret
sub
dec
inc
add
imul
aas
inc
shll
notb
add
cmc
pop
movsb
in
js
and
jnp
sub
inc
movd
sub
inc
les
aad
adc
push
xchg
std
or
hlt
mov
into
outsl
fwait
dec
xchg
clc
and
int
push
or
ret
das
stos
jp
call
mov
mov
inc
insb
xchg
das
cltd
lret
int3
cs
sub
mov
leave
cmp
pop
mov
pop
das
cwtl
dec
inc
shlb
addl
cld
inc
cmc
ljmp
cs
dec
repz
sbb
mov
imull
insl
out
cmp
std
shrb
sbbb
rcll
cmp
adc
mov
xor
push
lcall
sahf
repnz
xor
add
and
adc
call
adc
fsubrs
push
jmp
insb
test
xrelease
xchg
dec
dec
jmp
mov
outsl
mov
sub
outsl
sub
adc
cmpsb
imul
test
insl
push
mov
mov
movsl
jmp
stos
lea
pop
popf
mov
or
add
mov
cmp
and
mov
insb
sti
xchg
cmpsl
dec
ljmp
lahf
adc
and
sub
rcrb
mov
mov
bound
xor
xchg
inc
pop
mov
jbe
fdivrl
push
mov
jmp
mov
imul
lret
cmc
cmp
lret
dec
inc
xor
pop
cmpsl
aad
sub
jo
mov
or
sub
test
ja
mov
adc
loop
xor
mov
push
cmpb
cld
pop
inc
sub
movlps
out
daa
cmpsb
ja
imul
pop
int
lret
push
mov
popf
scas
add
pop
sub
add
aaa
push
test
test
or
scas
jle
fmuls
adc
leave
xchg
sub
dec
or
dec
push
in
push
jg
ja
lret
sbb
sarb
fucomp
xor
scas
dec
sub
rcr
adcl
aas
mov
xchg
mov
cmpsb
sbb
lret
out
mov
xor
dec
lods
mov
mov
push
hlt
js
push
xchg
std
out
mov
cmpsl
mov
je
xor
mov
mov
add
jg
test
lret
add
dec
lds
sub
adc
ret
in
in
adc
mov
adc
cmp
mov
and
pop
or
daa
inc
push
repnz
xchg
fs
mov
add
jp
xchg
mov
insb
cmpsb
scas
add
dec
dec
cmp
sbb
adc
icebp
lret
lahf
push
push
jl,pt
dec
in
mov
mov
ds
cs
test
lods
xor
mov
dec
and
mov
test
xchg
or
aas
mov
mov
adcl
mov
and
sub
adc
call
sarl
add
popa
or
cltd
out
and
inc
fisttps
jmp
inc
negl
mov
and
lcall
xor
push
inc
sub
notl
in
xchg
int3
in
adc
cs
iret
je
inc
test
decb
loopne
or
and
stc
sub
shlb
mov
out
aam
xchg
inc
cwtl
push
jo
or
dec
push
jp
add
mov
rclb
adc
or
sbb
mov
mov
cmp
lret
ret
or
xchg
push
adc
sub
testl
iret
lcall
stc
push
jno
xchg
pop
sbb
fsts
xchg
mov
lock
test
mov
iret
adc
and
and
out
push
push
fcoms
dec
enter
dec
call
imul
or
int3
jmp
xlat
sti
jno
mov
xchg
test
dec
callw
int
fld
xchg
out
popa
dec
xchg
xchg
or
dec
xchg
push
je
jno
lods
lods
nop
push
mov
xchg
and
sub
or
movsl
and
and
mov
mov
xchg
mov
push
lret
lock
std
push
adc
xchg
adc
and
pop
add
int3
leave
lds
pop
adc
js
cmp
adc
mov
adc
mov
std
inc
adc
lret
iret
xchg
or
pushf
lods
or
add
xchg
dec
sbb
push
mov
sbb
pop
mov
push
daa
fdivrs
xor
push
pop
sub
xchg
sub
movsl
ljmp
push
mov
lcall
test
shrb
into
test
lods
or
cmc
cmc
out
adc
dec
imul
mov
xchg
scas
imul
add
out
inc
cmp
lock
jne
inc
fdivrl
mov
mov
std
adc
repnz
lods
lods
dec
pushf
mov
or
push
jno
cltd
and
das
cmp
jge
sbb
push
adc
inc
fwait
dec
aam
dec
add
mov
inc
cmp
xchg
into
lcall
push
sbb
xlat
push
sub
cmp
pop
bound
xor
xor
add
xor
std
lcall
addr16
jmp
cwtl
pop
add
pop
cmpsl
adc
jno
pop
mov
jg
adc
jo
push
dec
dec
dec
dec
cld
mov
lock
int3
xorl
stos
mov
test
mov
push
push
in
jmp
std
or
andl
lods
sbb
cli
jecxz
call
icebp
inc
inc
in
icebp
imul
movsb
stc
add
incb
stc
xchg
iret
lock
cmpsl
aad
test
push
inc
imul
jl
or
sub
xlat
aam
pop
push
mov
mov
cmc
jmp
outsb
rcll
ljmp
lret
xor
call
mov
mov
sbb
pop
pop
push
stos
mov
ret
aas
or
mov
jmp
sbb
cs
inc
xchg
ss
prefetch
fs
out
lods
jae
popa
test
cmp
pop
test
roll
fs
out
stc
xchg
or
jmp
mov
xchg
or
mov
popa
mov
repnz
int3
or
or
push
lea
and
push
outsb
ljmp
mov
mov
out
push
daa
cmp
mov
cmp
or
mov
pop
icebp
inc
jecxz
and
mov
jb
scas
xchg
mov
sbb
lcall
lods
fstpt
mov
or
ja
sbb
sbb
add
outsl
adc
incb
lods
push
cmp
and
aaa
dec
jno
iret
pop
pop
dec
xchg
jmp
outsb
out
lods
pop
and
mov
push
sub
fiaddl
test
and
or
inc
jmp
bound
inc
or
movsb
xchg
push
ud2
out
mov
sbb
out
push
imul
test
sub
repz
mov
add
or
daa
push
pop
and
imul
jno
sahf
sub
clc
jns
sbb
sub
out
push
mov
or
pop
stc
or
std
sahf
in
in
insb
lods
fildll
in
mov
icebp
lock
push
lea
std
aad
iret
leave
les
lea
imul
or
cmp
out
mov
icebp
pop
rcl
adc
repz
cmp
xchg
push
fsts
sub
into
mov
mov
xchg
sub
or
outsl
clc
int3
sub
xchg
pop
pop
mov
add
mov
mov
sti
push
xchg
bound
dec
mov
push
lcall
jmp
xor
dec
pusha
dec
push
adc
or
sbb
cmpsl
sbb
sbb
mov
mov
mov
adc
xor
mov
stos
out
sahf
repz
das
pusha
rorl
dec
stc
cmpsl
ss
push
movsl
sbb
pop
frstor
pop
lret
jo
outsb
bound
cmp
xchg
and
mov
mov
or
jmp
jp
stc
cs
mov
pusha
cli
pop
jo
icebp
xchg
insb
fiadds
pop
dec
int3
stc
mov
aam
dec
xor
aad
imul
and
inc
mull
push
or
or
sub
xor
push
sub
push
mov
lret
sub
test
dec
jnp
push
hlt
xor
xor
loop
out
or
dec
pop
rorb
lret
pushl
or
xor
and
daa
fs
imul
mov
out
aam
cli
mov
repz
dec
test
mov
ret
or
cmp
push
insb
fldcw
dec
ret
mov
or
sbb
stc
data16
ljmp
outsl
push
in
fsubp
add
xchg
cltd
movsl
push
mov
xchg
xor
aas
sbb
adc
shll
adc
jmp
clc
jmp
repz
dec
fwait
dec
mov
inc
xor
data16
out
rcr
push
and
push
xchg
arpl
or
test
in
mov
jnp
mov
js
dec
or
push
lret
or
mov
dec
mov
inc
jbe
rorb
add
lcall
or
movsl
jbe
aam
sbb
push
ret
lds
jbe
mov
int
outsl
xchg
addr16
in
pop
in
data16
cmp
aam
or
adcb
ljmp
pusha
in
cmp
xor
test
sahf
xchg
int3
call
into
int3
pop
leave
push
movb
dec
mov
mov
fsubrs
fadd
mov
stos
adc
dec
out
dec
lcall
cli
in
pop
daa
popa
jnp
xor
jno
sub
mov
ret
add
and
sub
call
cmc
jno
cwtl
cmpsb
and
push
xor
sub
notb
pop
outsb
daa
lea
mov
ds
mov
xchg
mov
mov
dec
xchg
lods
jp
xchg
mov
fs
xchg
sub
lods
xor
je
ss
gs
fmul
mov
les
or
xor
jmp
rorb
es
clc
cmpb
pusha
pop
cld
cmp
dec
sub
inc
test
inc
int3
pop
add
lds
sub
xorl
pop
outsl
pop
xchg
or
adc
jb
or
push
mov
mov
pcmpeqd
mov
mov
sbb
sbb
mov
popa
fst
test
sub
jp
in
imul
mov
mov
push
rclb
or
or
inc
pushf
or
add
cmp
mov
mov
out
dec
push
push
or
or
inc
xchg
add
lea
mov
and
in
rcll
fnstcw
stc
push
loope
or
and
adc
adc
aad
orb
add
ror
mov
lods
xchg
out
rol
scas
dec
xchg
popa
out
xor
xchg
repz
or
imul
xor
mov
into
mov
and
mov
popf
or
rcl
pushf
jp
gs
jo
and
and
pop
int
jns
fsubrs
jno
fnstcw
inc
loop
bound
xchg
sarl
ljmp
dec
push
xchg
inc
mov
fdivrl
mov
pop
push
aad
popa
ja
dec
mov
jmp
jle
rcrl
sub
in
aas
insl
test
cmp
rcr
call
and
pop
fsubl
lods
sbb
jno
sub
int3
cmp
stc
nop
adc
or
imul
sti
dec
pop
mov
aad
jnp
xchg
out
and
cltd
xlat
fcmovbe
mov
and
sub
push
push
lcall
test
mov
inc
fildll
insl
cs
test
sbb
icebp
xchg
and
lret
adc
stc
dec
lret
inc
pop
fldenv
stos
pusha
lods
in
outsl
lret
push
mov
lahf
sbb
add
or
inc
jae
aad
mov
mov
dec
insb
hlt
daa
pop
and
xchg
xor
lcall
stc
push
jae
xchg
outsb
add
pop
sub
mov
dec
test
mov
fdivs
jp
or
scas
cwtl
cmpsb
out
or
adc
mov
shrl
pop
ss
test
xor
hlt
pop
cmp
lods
cwtl
sub
adc
hlt
sub
imul
out
mov
xchg
repnz
mov
xchg
mov
sbb
lock
hlt
pop
dec
adc
jae
or
or
adc
jecxz
push
add
mov
cld
adc
xchg
into
jp
cwtl
jb
sub
repnz
or
fnstcw
rcrb
dec
rorl
fsubrs
sub
aas
sub
mov
aaa
imul
aaa
jbe
les
dec
pusha
cmc
xchg
std
xchg
aas
push
insl
or
outsl
nop
gs
ud2
sub
and
mov
out
jp
pop
mov
lcall
or
out
and
outsb
dec
out
mov
call
bound
inc
xor
js
dec
cwtl
rcr
ss
into
push
push
dec
push
dec
stos
lea
popf
repnz
cwtl
cli
push
fadd
pushf
outsb
in
jmp
dec
aad
push
pop
adc
push
lret
sub
aas
lea
mov
xor
test
and
mov
pushf
imul
stc
xchg
nop
xchg
sub
mov
or
test
xor
push
or
sbbb
test
jmp
mov
stos
lea
sbb
call
cwtl
adc
jo
lret
int3
stos
mov
xchg
insl
push
aad
imul
lret
or
out
sub
sub
sbb
mov
addr16
or
xor
add
loop
cld
jge
jmp
cmp
cmpsl
in
test
mov
push
xor
add
jo
mov
cmp
jg
test
push
ds
or
mov
add
loopne
stos
stos
daa
mov
dec
icebp
aas
stos
push
and
mov
sbb
mov
dec
aad
stos
arpl
enter
dec
hlt
push
lahf
stos
xchg
mov
sub
jp
loop
or
xchg
pop
mov
xor
ljmp
scas
adc
sub
mov
xor
or
sbb
pop
mov
ljmp
adc
test
test
jnp
lds
out
pop
fnsave
out
xchg
bound
adc
fxch
sub
lret
pushf
sbb
push
xor
or
sbb
lahf
movsb
test
mulb
lods
stos
int3
sbb
sbb
add
ficompl
push
cltd
jne
sbb
cmp
loopne
jp
fstps
or
out
nop
movsb
fisubl
dec
adc
adc
stos
or
mov
bound
mov
mov
pop
lret
daa
andb
xchg
movsb
sbb
push
sbb
pop
aam
inc
mov
push
ljmp
and
lahf
sbb
and
jp
jp
or
and
push
cltd
mov
repnz
or
je
xchg
pusha
pop
sarb
addr16
das
cmp
mov
xchg
pop
inc
cli
sub
push
xor
or
sbb
das
push
rcrl
or
dec
popf
insb
sub
lock
xor
scas
pop
data16
adc
iret
jb
push
inc
push
mov
popf
or
scas
aad
jmp
jbe
lret
dec
and
and
xchg
cmc
pop
lahf
push
out
std
ss
outsb
dec
adc
cmp
xchg
push
mov
loope
bound
daa
paddusb
or
shrl
mov
sbb
push
mov
lods
pop
repz
mov
dec
out
pop
rcrb
cli
dec
rcll
pushf
mov
pop
rclb
call
cmp
loope
lds
clc
cmpsl
sbb
sub
mov
out
fdivs
adc
loope
mov
and
scas
sbb
cmp
cmc
dec
pxor
adc
out
add
mov
cmp
xor
sbb
lret
sbb
xchg
sbb
mov
rclb
test
and
cmp
sbb
je
xchg
sbb
jo
movsl
stos
in
dec
setb
sbb
je
xor
popl
aas
sti
push
fstl
dec
addb
iret
or
pop
sbb
mov
out
call
cmp
in
shlb
or
mov
aas
imul
jle
cwtl
mov
sahf
jle
pop
cmpsb
mov
sub
leave
sub
pop
ret
call
insl
sbb
jbe
aaa
cmp
or
xor
lret
or
jmp
das
and
adc
jl
xor
adc
je
pop
rolb
pop
sub
xor
mov
cmpsl
mov
dec
mov
sbb
repnz
movsb
das
loop
sub
repz
flds
fs
sub
pop
mov
cld
insb
out
and
dec
cmc
cmp
daa
insb
mov
pusha
loopne
inc
lret
repz
repz
mov
aad
out
push
push
mov
adc
sbb
mov
push
hlt
inc
mov
xchg
jbe
adc
sbb
xchg
mov
inc
je
rclb
or
iret
jp
in
xor
scas
mov
rcrl
or
or
jae
sub
test
adc
lods
jmp
or
and
mov
icebp
imul
js
leave
outsl
mov
xchg
pop
push
pop
xor
mov
int
mov
mov
in
dec
jg
mov
pusha
xchg
inc
sub
pop
sbb
mov
jg
sub
xor
sbb
dec
pop
adc
scas
nop
sahf
add
in
dec
xor
mov
sub
roll
mov
push
adc
pusha
sub
mov
test
adc
mov
movsb
or
fwait
push
and
lahf
and
fs
cmp
out
jns
scas
sbb
inc
pushf
ret
mov
insb
and
sbb
std
cs
mov
test
and
push
mov
jo
lcall
stc
adc
pop
subl
inc
mov
mov
out
fsubrl
or
pop
xor
ficoml
repnz
mov
mov
imul
add
sbb
repnz
insl
xchg
rcpps
scas
dec
daa
lret
test
mov
push
or
jl
jmp
bound
es
nop
cmp
add
inc
pop
jmp
cmpsb
imul
lea
movsl
rcr
mov
mov
pop
add
icebp
push
test
adc
xchg
sub
lret
or
repz
cmp
shrl
aaa
xchg
ljmp
scas
sub
push
pushf
sub
stos
or
leave
mov
add
cwtl
subb
in
and
push
sub
dec
jmp
mov
das
mov
xchg
cmp
cld
je
xchg
addl
adcb
adc
or
mov
nop
popf
popa
int
int
mov
ja
or
ret
or
mov
xchg
sahf
adc
pop
dec
pop
sbb
lcall
bound
stos
mov
icebp
cmp
or
addl
xor
popa
mov
sarb
mov
fildl
sbb
and
jne
and
call
sub
xchg
insl
imul
imul
sub
test
loop
insl
adc
cmpsl
dec
rclb
shrb
lahf
mov
jl
fxsave
dec
das
insb
sbb
dec
jl
mov
cmp
aam
dec
out
cmc
lds
inc
add
je
dec
fisttpll
mov
jg
jmp
lock
push
push
xor
dec
aam
arpl
mov
js
cmp
pushf
mov
inc
fnstsw
dec
xchg
mov
cmp
stos
mov
or
cwtl
shr
orl
lods
dec
aam
adc
mov
arpl
lods
jmp
pxor
popf
and
movsl
mov
stos
out
dec
push
sub
icebp
and
adc
adc
cmpsb
push
loopne
mov
outsb
outsb
jl
sar
data16
push
push
sub
pop
mov
and
fcomp
or
sub
mov
stos
xchg
popf
push
fwait
mov
out
cmp
mov
out
push
or
outsb
jmp
push
sub
dec
mov
int
test
add
jle
xchg
sbb
dec
xchg
rolb
cmp
shl
pop
mov
fs
paddsw
add
dec
les
mov
bound
xchg
int
cmp
cs
xchg
lods
dec
xor
pop
movsb
inc
into
int3
or
inc
push
sub
push
xchg
cmp
into
pop
dec
mov
add
outsb
aas
ljmp
jp
sbb
std
jmp
je
pop
cmp
mov
xchg
push
jne
stos
lods
fsubrs
mov
cwtl
fsubl
and
dec
sub
dec
push
jle
push
sahf
sub
mov
lock
jne
and
outsl
jp
push
adc
add
mov
and
sbb
pop
jno
leave
dec
xor
mov
add
jae
dec
xor
lea
inc
mov
jg
cmpl
dec
filds
and
outsl
fiaddl
jmp
test
xchg
inc
cwtl
lea
mov
bound
mov
dec
push
dec
loope
cs
je
pushf
adc
nop
xor
mov
pop
mov
lcall
inc
cltd
jb
stos
adc
cmp
jo
call
pop
insb
repnz
repnz
mov
lods
adc
xor
cmc
insl
imul
orl
lret
cwtl
dec
push
inc
fcoml
push
mov
mov
dec
push
jmp
pushf
stc
pop
jae
cld
jo
push
mov
lret
je
xor
sbb
dec
scas
adc
mov
test
popl
or
mov
mov
repz
dec
and
cwtl
nop
int3
add
xchg
adc
js
mov
out
mov
and
lods
cmp
mov
sub
rcr
test
adc
or
mov
mov
rolb
xor
outsb
pusha
idivl
lahf
cmc
scas
or
sbb
pop
push
sbb
adc
lds
xor
loope
ja
aas
push
dec
loop
hlt
jbe
ret
cmpb
push
arpl
pop
sub
mov
dec
mov
cmp
mov
lret
in
fists
aam
pop
movsb
lcall
ja
pop
lcall
nop
mov
pop
shlb
mov
mov
fdivr
in
cmc
adc
add
push
in
cmp
cmpl
arpl
hlt
addl
cld
or
mov
dec
call
addr16
and
inc
cmpsb
stos
mov
xchg
cmp
mov
mov
mov
mov
ss
repz
hlt
push
xor
pusha
xor
imul
jnp
add
xor
pusha
or
cmpsb
pushf
rcrl
cmpl
dec
je
dec
xorl
push
cmp
out
pop
and
inc
orb
adc
fldenv
and
in
aaa
fs
mov
or
daa
xchg
pop
mov
imul
outsl
in
push
jl
mov
mov
nop
xchg
scas
cmpsl
scas
jns
adc
add
or
xor
and
popa
sub
jo
inc
sub
pushf
jne
pop
add
push
inc
jae
and
pop
lock
add
lcall
scas
jmp
push
cmp
adc
imul
sub
int3
and
mov
lret
inc
clc
push
mul
push
or
or
js
push
lahf
mov
or
sbb
sbb
push
push
stc
push
jp
mov
mov
daa
mov
xor
insb
mov
inc
pusha
in
ds
push
ss
rolb
or
scas
inc
add
add
and
outsl
inc
mov
mov
lret
fldenv
dec
inc
push
adc
test
xchg
and
addl
push
push
add
pop
rolb
aam
int
mov
lea
sub
in
lcall
mov
pop
lcall
dec
jno
clc
stos
cltd
imul
std
pop
jae
mov
xor
scas
pop
dec
pop
xchg
push
fbld
dec
imul
outsl
mov
ss
mov
daa
adc
test
push
js
xchg
jecxz
jl
subl
pushf
sbb
stos
in
push
stos
das
repnz
pop
out
addr16
jmp
add
mov
fldcw
dec
adc
lret
dec
and
pslld
into
cltd
movl
scas
out
shrl
imul
sahf
jg
mov
test
mov
xchg
pushf
lret
mov
add
pop
dec
or
dec
daa
push
pop
inc
mov
jecxz
adc
add
aas
sub
mov
xlat
pop
xchg
sub
cmp
sbb
fnstcw
xchg
dec
or
in
pop
outsl
bound
cwtl
dec
push
bound
aam
insb
push
xor
fdivrs
je
cmc
jmp
mov
adc
daa
ja
pop
shlb
mov
xchg
arpl
stc
pop
inc
xor
mov
xchg
pop
mov
jle
sahf
adc
or
pushf
mov
inc
inc
imul
out
lret
inc
out
dec
call
adc
inc
push
cs
popa
push
or
daa
imul
inc
es
ret
iret
xchg
sbb
lcall
adc
push
adc
loop
dec
and
or
daa
mov
daa
ret
xchg
and
jg
or
jmp
mov
pop
fs
shrb
les
jbe
cmp
mov
adc
xor
scas
mov
mov
or
shll
push
push
add
xchg
xor
push
inc
dec
sbb
xchg
jo
ds
mov
xor
insb
insl
outsl
push
aas
nop
mov
fwait
je
cmp
adc
dec
cltd
cmpsl
adc
leave
push
pop
outsl
adc
mov
popf
mov
add
out
sub
add
scas
or
cmp
and
sub
mov
mov
mov
test
mov
loope
mov
inc
sbb
cltd
push
nop
in
and
add
out
push
test
pop
pop
xchg
or
rorl
mov
arpl
rcrl
cltd
xchg
jmp
lcall
push
call
pop
add
in
push
popf
sbb
scas
jo
xchg
lahf
jmp
cmp
sub
into
ljmp
in
std
lret
insb
mov
pop
mov
hlt
cwtl
outsb
push
negl
arpl
push
push
mov
stc
sbb
pop
inc
dec
dec
popa
push
insb
push
or
jl
cmp
pushf
push
pushf
mov
mov
das
out
mov
xchg
adc
fnstsw
sbb
xor
imul
cmc
dec
push
cmp
push
in
mov
sbb
dec
and
ds
mov
test
pop
repz
adc
jp
mov
fsubrs
mov
jno
imul
adc
jl
je
xor
mov
test
fidivs
icebp
or
scas
test
clc
test
cmpb
mov
adc
xor
push
mov
cwtl
cmp
outsb
dec
int3
xchg
mov
mov
xor
movsl
fdivrs
fmul
hlt
les
leave
pop
xlat
mov
xchg
insb
fwait
cmc
cltd
inc
icebp
xchg
jb
adc
add
cmp
cmp
inc
clc
jp
push
push
test
jae
mov
shrl
cmp
cmp
sbb
dec
or
test
data16
mov
add
mov
xchg
ljmp
into
imul
lds
jg
or
lcall
cmp
push
sub
sub
out
cltd
push
mov
aaa
in
imul
pop
scas
imul
subb
xchg
nop
fnstcw
mov
js
out
xor
cld
adc
cmp
dec
ds
push
pop
push
push
in
mov
xorb
jge
mov
or
mov
fs
push
bsf
ja
and
jo
jecxz
test
lret
cli
nop
mov
xor
xlat
movsb
mov
icebp
push
mov
lret
inc
add
push
xlat
push
lods
call
sub
cs
push
sub
dec
pushf
sub
in
testl
inc
stc
push
pop
lret
sub
test
cltd
lret
pop
pop
or
push
lcall
xchg
divl
jge
pop
cwtl
mov
mov
outsb
push
adc
inc
adc
arpl
lret
or
inc
pop
ds
or
adcl
enter
push
jb
test
in
xchg
or
lods
or
sbb
sahf
sbb
mov
int
dec
push
mov
dec
mov
dec
dec
sub
push
and
rolb
mov
mov
xchg
hlt
cld
cltd
cmc
test
sub
adc
dec
dec
xor
xchg
add
sub
or
cmp
dec
or
and
pop
mull
dec
cmp
or
scas
adc
sbb
or
out
mov
loopne
xlat
sub
mov
push
aaa
test
sbb
cmp
icebp
movsl
bound
ret
daa
mov
pop
bound
lret
test
stos
adc
push
cmpsl
jl
out
jmp
stc
fistpll
inc
add
sbb
negb
xchg
iret
dec
and
mov
hlt
inc
lock
xor
push
lods
jo
out
stos
or
pop
adc
cmp
lock
test
in
scas
daa
mov
ret
dec
aas
sbb
inc
into
lock
scas
shl
mov
push
mov
cmpsl
test
xchg
into
hlt
sub
pop
mul
jo
inc
sub
pushl
popf
mov
inc
mov
push
dec
mov
test
lcall
fucomp
or
je
push
or
mov
jl
aad
inc
jo
jmp
dec
mov
mov
shrb
cli
std
imul
shr
push
mov
scas
je
stos
scas
inc
and
xor
inc
je
jle
mov
aam
xor
stc
ret
sub
dec
jae
jnp
adc
jae
sub
mov
mov
or
cwtl
xor
sbb
shll
inc
jmp
dec
push
xor
jle
lods
pushf
dec
jmp
test
fiadds
xchg
sbb
mov
scas
call
xchg
jbe
mov
or
mov
fucomp
cmp
scas
pavgw
adc
repnz
movsl
scas
arpl
mov
xor
push
fimuls
fidivrl
addr16
pop
fildll
inc
outsb
or
shlb
pop
xor
shll
mov
mov
movsl
gs
mov
aam
and
sti
or
mov
xor
cmp
inc
leave
mov
xchg
xchg
in
adc
leave
or
push
mov
mov
rcr
pop
test
push
or
lds
inc
sub
lods
cli
sbb
inc
mov
sbb
mov
sbb
outsl
and
ds
inc
pop
lret
cmp
iret
dec
ret
xor
adc
adc
mov
jno
test
and
mov
jo
movsl
cli
sub
and
mov
cmp
adc
push
cmpsb
scas
jl
inc
cmp
rorl
ljmp
mov
adc
inc
in
filds
adc
ljmp
jle
dec
shl
lret
mov
jb
lds
cs
mov
mov
ds
int
mov
jnp
push
mov
lret
cmp
sub
dec
aad
into
jge
jns
pop
cmp
mov
mov
shl
jg
and
mov
insb
pop
repz
jno
mov
int3
lods
je
or
jmp
dec
sbb
loope
or
or
jo
xor
fwait
in
insb
fmuls
iret
cli
or
push
push
ret
inc
dec
cmp
adc
dec
orb
lock
adc
imul
ljmp
mov
dec
aas
sti
aam
test
jg
cmc
jae
out
shlb
lock
mov
sbb
fadds
out
pushf
mov
push
sub
into
or
daa
lods
jno
mov
mov
mov
mov
xchg
and
daa
mov
mov
mov
push
jle
fidivrs
shl
inc
lds
idivl
jb
mov
stos
daa
xchg
xor
ljmp
adc
jl
add
cmpsl
sbb
push
sub
lea
rclb
adc
push
and
test
std
popf
lods
sbb
loopne
in
cwtl
imul
xchg
jnp
jne
mov
dec
mov
mov
mov
popa
mov
shrl
cltd
nop
inc
or
in
sbb
repz
dec
pop
dec
stc
mov
lret
mov
inc
xchg
clc
sub
mov
jnp
ljmp
mov
add
mov
pop
xor
push
jb
js
loopne
sub
adc
adc
jge
addr16
ror
fidivrs
mov
lcall
sub
mov
test
loop
jge
das
lea
and
add
int3
mov
push
inc
jp
adc
sbb
xor
ljmp
adc
sbb
cs
mov
inc
insb
dec
adc
pop
jge
mov
xchg
and
cs
mov
adc
inc
addr16
mov
mov
pop
sbb
outsb
aad
rorl
mov
mov
hlt
in
push
adc
cmp
xchg
jb
pop
lfs
and
sbb
xor
sub
clc
cmp
dec
mov
push
aad
inc
jmp
pop
cmp
mov
clc
mov
lea
pop
lret
dec
sub
insl
xchg
mov
aas
adc
xor
lock
pop
xor
sub
mov
fs
pop
jle
xchg
pop
stos
dec
mov
aad
cwtl
movsb
das
test
adc
fimull
jae
push
out
stc
addl
push
mov
or
fimull
lds
jae
das
gs
hlt
dec
cmpsl
adc
daa
fistl
rolb
cwtl
push
rorl
ret
hlt
or
inc
dec
push
adc
push
out
lret
xor
roll
out
lret
cwtl
cs
sub
repnz
dec
pop
dec
cmp
jl
scas
mov
mov
jge
or
push
shrl
jne
mov
sub
pop
jle
test
daa
xor
or
les
rorb
inc
push
pop
movsb
xchg
das
pand
inc
shrb
scas
or
das
add
xchg
mov
dec
iret
sub
comiss
sub
stos
xor
dec
insb
dec
nop
cwtl
xor
jb
adc
hlt
mov
jnp
hlt
jg
les
push
sub
dec
sbb
push
pusha
int
jo
xchg
iret
notb
adc
out
std
add
pop
iret
repnz
cmp
sbbb
insb
iret
ret
mov
mov
shlb
pop
pop
out
aam
enter
clc
popa
aaa
push
mov
outsb
sbb
dec
mov
adc
les
or
daa
stc
xchg
lahf
mov
in
test
mov
sti
cmpsl
cmpsb
or
sub
int3
enter
xlat
add
inc
roll
in
lret
daa
in
mov
or
pop
int
mov
jns
mov
xor
int3
pop
pop
jmp
inc
push
sbbl
in
pop
out
dec
xor
adc
lcall
and
xor
mov
adc
cs
sbb
or
fiaddl
dec
sbb
iret
xor
dec
push
adc
push
adc
dec
out
pushf
sub
sub
jnp
fs
cmp
sti
inc
mov
or
jge
rclb
sub
or
in
adc
inc
dec
lret
cmc
jne
or
cmp
push
pop
adc
cmp
mov
les
mov
pop
and
dec
jae
nop
xchg
mov
lea
mov
sub
sub
jnp
cmp
pop
ss
jbe
xchg
outsb
imul
sbb
sub
xchg
jnp
repnz
push
repz
sub
adc
fmuls
fcmovbe
xor
xor
fimuls
xchg
movsb
shll
sbb
subb
shl
inc
and
xchg
popf
or
dec
jl
mov
push
cld
out
or
ds
xor
mov
test
lret
pop
stos
jbe
xchg
push
ficoms
sbb
xchg
call
adc
mov
lret
repnz
mov
mov
mov
lods
icebp
or
and
pushf
lods
sub
lea
or
test
jno
test
adc
pop
cmpsb
sub
insl
adc
inc
cmpsb
stc
push
lock
pop
shrb
push
sahf
dec
rorl
and
imul
xor
mov
popf
pushf
movsl
fsubrl
loope
jbe
add
push
imul
cld
push
jb
cld
mov
lret
test
xchg
and
out
lods
cld
and
push
dec
inc
outsb
mov
jno
out
sbb
cmp
jno
or
pop
mov
adc
cmp
cwtl
xchg
adc
push
lret
ja
add
jne
adc
cmpsb
xchg
pop
pushf
sarl
adc
sbb
inc
imul
mov
mov
jmp
pop
mov
sub
pop
mov
xchg
test
in
es
fsubrl
and
cs
out
pop
in
sbb
dec
mov
inc
mov
sub
pop
cmpsl
pop
std
jbe
xor
and
mov
push
mov
stc
in
mov
inc
add
pop
fists
or
lea
test
push
leave
jno
adc
cs
inc
lods
sbb
cmpsb
jns
sbb
dec
pop
sub
jno
aaa
movsb
push
xchg
mov
adc
xor
ficompl
inc
lret
push
hlt
insl
bnd
mov
out
daa
push
add
je
xchg
repz
dec
mov
or
call
jp
adc
lods
dec
sbb
and
popa
sbb
ljmp
jp
pop
icebp
push
mov
mov
les
into
repz
pop
adc
fisubrs
push
push
pushf
test
mov
mov
sub
rclb
lods
jg
pop
and
ljmp
jae
pop
mov
lcall
or
daa
stos
test
push
aad
sbb
in
mov
std
ja
jle
lea
adc
repnz
cmp
in
push
jg
xchg
xor
insl
jmp
push
add
das
mov
lods
aad
dec
sub
jg
sbb
push
and
dec
or
daa
sub
fsts
xor
sbb
loope
lea
push
stos
popa
adc
out
and
lock
jae
and
dec
and
pop
adc
nop
fs
mov
andl
das
pusha
jmp
ret
test
jbe
fisubrs
push
ret
cmc
cmp
aam
jae
gs
rol
mov
mov
je
outsl
cmp
test
adc
fimull
mov
push
jne
cmp
call
in
std
jne
xor
push
addr16
daa
cwtl
scas
out
pop
cld
call
add
sub
test
xchg
mov
insl
cmpsl
addr16
dec
dec
mov
fisttpl
stos
cwtl
mov
ret
adc
rorb
mov
out
mov
adc
lcall
mov
mov
js
sub
or
pop
ljmp
sbb
cmp
ds
xor
shll
lret
cld
pop
push
cld
and
jns
scas
enter
sbb
xor
or
sbb
inc
daa
adc
jne
mov
adc
test
sub
sub
jae
stc
or
push
cmp
imul
inc
jge
mov
sbb
cld
xchg
addr16
std
scas
sbb
push
push
mov
push
imul
inc
popa
out
inc
outsl
xor
xor
xchg
subl
pop
or
and
xor
loope
add
or
jnp
xor
xchg
sub
and
pusha
ljmp
scas
lods
adc
jo
xchg
cmc
je
and
popa
pop
mov
push
stos
cmc
jae
sbbb
jmp
cmpsb
inc
das
scas
cmc
dec
mov
fbld
stos
adc
cmp
mov
je
pusha
mov
jg
data16
insb
jp
xor
pop
mov
xchg
push
cmp
cmp
jmp
add
ret
mov
lods
add
jne
mov
ljmp
sbb
adc
fnstenv
and
rorl
lret
mov
sbb
mov
push
rcll
inc
cmpb
daa
dec
dec
lahf
inc
pop
pusha
pop
ja
sbb
ss
lds
mov
je
stos
ficoml
cmp
aaa
movsb
push
sbb
pushf
push
dec
mov
ljmp
into
inc
xchg
mov
jp
sub
jle
adc
xchg
stos
push
rcrb
adc
shlb
mov
sub
sub
out
inc
ss
mov
mov
dec
loope
push
dec
fstl
outsl
inc
rcl
or
or
jb
lds
repz
inc
sub
and
inc
push
adc
sbb
sbb
or
pop
out
inc
popa
cmc
dec
adc
push
mov
cmpsl
xlat
mov
lret
dec
test
and
sahf
mov
dec
mov
mov
push
fdivr
mov
cmp
popf
lods
addb
scas
loop
out
dec
xchg
push
out
mov
or
and
mov
fwait
icebp
dec
push
xor
jmp
daa
out
imul
or
stos
sub
in
adc
insl
sub
push
mov
sub
bound
cmp
pop
or
scas
mov
movsl
mov
sti
outsl
bound
cld
adc
repz
push
aad
subb
sbb
daa
jb
lods
pop
repz
add
xor
or
or
sub
mov
sbb
lods
xchg
pop
ss
icebp
fldcw
mov
orl
inc
mov
aad
push
dec
hlt
fs
cs
dec
adc
lods
rorl
and
sub
ds
mov
adc
mov
repnz
cs
xlat
push
js
aam
inc
jmp
mov
cwtl
dec
insb
ljmp
push
testl
scas
or
push
and
lods
mov
xor
into
stos
mov
jno
cwtl
sub
push
adc
push
xor
mov
fwait
mov
and
movsl
rcll
fsubs
aaa
adc
bound
daa
mov
jp
and
ja
adc
mov
outsl
jl
push
xor
inc
insb
dec
es
rclb
js
movsb
dec
lods
mov
jl
nop
out
sbb
xchg
inc
sbb
cltd
mov
lret
leave
dec
fstpt
or
fbstp
sbb
out
aaa
fstpt
das
dec
sub
nop
lds
cld
call
inc
xor
sbb
push
xchg
mov
mov
mov
cmpsl
push
and
in
popf
out
push
pop
jp
fists
mov
mov
sub
add
or
pop
and
xchg
rclb
push
jmp
and
mov
orl
jp
mov
lods
cmp
jno
mov
inc
xchg
lret
xchg
jnp
shll
push
mov
mov
icebp
mov
std
xchg
shll
nop
pop
insb
jmp
pop
sbb
iret
aaa
test
jecxz
outsb
jae
in
fmulp
or
aaa
in
jg
imul
mov
icebp
insb
push
or
add
sbb
adc
xchg
push
xor
sub
aad
mov
je
push
adc
das
movsb
daa
xor
adc
cwtl
dec
adc
jmp
lea
aaa
or
sahf
inc
or
mov
jle
movsb
mov
ss
imul
xchg
xor
bndldx
cmp
xchg
dec
sbb
push
aad
push
and
sub
cmp
mov
lret
inc
cmpsl
push
adc
loope
into
orl
lods
subl
aad
fiaddl
jne
lcall
mov
push
sub
push
scas
sbb
inc
jns
repnz
sahf
adc
loope
pusha
or
cmp
xor
stc
scas
jo
dec
daa
data16
aaa
imul
sahf
scas
mov
xlat
dec
adc
inc
push
push
test
lret
leave
add
dec
xchg
jne
xchg
test
mov
dec
cmc
push
xchg
rcll
add
in
ds
jo
adc
dec
leave
daa
sub
bnd
subb
sub
dec
ret
dec
mov
pop
mov
ds
sbb
sub
dec
fldl
or
push
test
dec
and
outsl
les
cmp
mov
mov
test
dec
cs
jns
popf
pop
pop
and
sub
stc
mov
out
fwait
jbe
or
or
or
sub
dec
adc
dec
lock
dec
nop
dec
mov
xor
cli
jecxz
loopne
pop
adc
jl
ds
pavgw
outsl
inc
and
mov
repnz
xor
outsl
mov
int3
adc
sbb
mov
ljmp
imul
mov
xor
and
sbb
shl
adc
xchg
mov
sub
lahf
lea
outsb
push
imul
mov
in
xor
add
add
xchg
jnp
repnz
mov
jmp
push
stos
adc
popa
out
sahf
mov
insl
out
out
outsb
pop
sbb
xorl
ja
out
cltd
dec
jne
cli
sub
pop
cmp
ss
stos
mov
scas
nop
shlb
jp
push
sti
scas
jae
xlat
stos
imull
jnp
adc
insb
int
push
sub
sub
xchg
je
repnz
pop
stc
in
out
sub
push
outsl
jmp
into
shrb
bswap
inc
xor
aad
push
xchg
jp
jmp
insb
and
cmp
and
scas
clc
outsl
push
jb
mov
sub
dec
push
sbb
lret
test
lret
xchg
xor
rclb
aas
int3
sbb
lea
mov
jno
mov
loop
int
dec
xor
mov
sub
pop
jbe
popa
pusha
inc
sbb
insb
push
pop
adc
push
push
mov
rcrl
hlt
cwtl
stos
inc
outsb
xor
sti
xor
addr16
mov
push
out
adc
xor
lret
mov
mov
push
shll
xchg
stos
mov
stos
cs
rorb
inc
ds
push
out
mov
imul
mov
inc
aad
mov
lods
push
push
insb
lcall
dec
loopne
mov
pop
cmpsl
je
ffreep
popa
or
stc
scas
test
xchg
mov
shl
xchg
es
mov
dec
cltd
in
popl
stos
and
insb
jnp
push
and
movsb
ret
adc
aaa
clc
mov
sub
xchg
inc
fisubrl
adc
and
push
shll
movsl
mov
daa
dec
cmpsl
cmpl
mov
out
push
mov
call
xchg
jmp
std
sub
pop
push
and
out
cli
add
mov
rcl
add
sahf
cmpsb
lds
mov
xchg
js
hlt
and
mov
mov
cmpl
imul
sub
adc
add
inc
sub
adc
mov
es
cmp
mov
or
and
sbb
mov
scas
imul
pop
rcll
cltd
lret
leave
mov
mul
insb
scas
add
inc
xor
xor
enter
shrb
mov
lea
adc
sub
fdivrl
lea
orb
test
scas
lods
jno
xchg
sub
test
inc
sahf
jl
lret
sbb
push
jno
mov
jno
xor
cmp
aad
loopne
in
xchg
jne
mov
in
lcall
pop
inc
and
das
or
lea
push
cwtl
movsl
insb
movsb
push
or
or
test
mov
inc
fnstcw
sahf
jne
jb
mov
push
mov
mov
or
test
mov
or
or
and
js
fnstsw
loopne
mov
dec
mov
lea
cmp
mov
add
push
push
adc
out
inc
call
bound
aaa
popl
add
rcll
iret
mov
adc
gs
stos
mov
pop
sti
scas
and
jbe
in
das
cmp
xor
ds
movsb
ret
fisttpl
xor
loopne
and
out
xor
cmp
inc
dec
xchg
imul
or
fidivl
scas
push
out
and
sbb
iret
cld
sbb
fisubl
inc
fcompl
jbe
and
scas
movsl
xchg
mov
sub
pop
sub
fstps
or
push
nop
movsb
push
xchg
mov
push
fdivrl
daa
scas
test
sbb
sarl
add
pushf
sub
aad
rorl
pop
scas
jnp
aad
jp
sub
cli
jge
mov
lahf
lcall
cmp
pop
inc
sbb
aad
pop
scas
pop
jne
xor
iret
scas
mov
and
adc
sub
in
fmull
loop
jb
orl
sbb
xor
sub
sbb
inc
inc
stc
mov
push
cmp
sub
inc
mov
sub
ja
and
out
xor
mov
and
aaa
lea
mov
jnp
daa
adc
mov
or
mov
out
xchg
dec
xchg
pushw
aad
out
pop
aam
into
in
mov
jae
push
inc
sub
xchg
lea
cwtl
dec
aas
sbb
stos
mov
mov
cli
inc
xor
aad
xor
and
fnstenv
dec
mov
cs
ljmp
xor
mov
mov
test
sub
push
icebp
cmp
and
xchg
mov
repnz
cltd
add
cmp
push
imul
mov
dec
adc
dec
sub
fmuls
adc
stos
pop
inc
xchg
xchg
and
and
loope
stos
cmp
imul
push
xor
icebp
fs
in
push
fists
daa
cmpsb
dec
cmpsl
ljmp
adc
mov
das
dec
in
mov
test
cmc
and
cmp
test
in
jb
jle
pop
adc
mov
mov
sub
out
neg
imul
data16
test
aad
mov
mov
nop
or
adc
sbb
ret
cmp
aad
or
sbb
xor
bound
test
mulps
xor
sbb
loop
test
test
adc
sub
add
dec
dec
pop
mov
pop
push
data16
sti
mov
add
rcrb
or
arpl
adc
ds
wbinvd
push
scas
aad
xchg
es
fs
or
push
les
push
test
push
cld
roll
gs
jle
aas
inc
xlat
lods
push
mov
into
test
mov
fs
push
test
mov
adc
xor
add
lret
inc
sub
jo,pn
adc
or
sub
xchg
jbe
xlat
sub
mov
push
sub
mov
sub
jecxz
jns
and
sub
push
in
pop
jnp
lea
stos
lcall
into
or
je
adc
mov
adc
data16
lret
push
add
xchg
jp
stos
mov
ja
push
cmpsb
cmc
fsts
je
ljmp
lods
push
cs
push
dec
add
inc
mov
inc
adc
push
or
cmp
loopne
stos
lods
jno
sub
orb
mov
xlat
pop
mov
pop
mov
inc
jne
jnp
test
mov
lret
push
pop
and
popf
mov
pop
int3
lods
mov
in
pop
push
das
cmpsb
rolb
push
xor
xchg
dec
xchg
jns
push
ljmp
jnp
cmp
or
adc
sbb
xor
jnp
sar
inc
int
out
aas
mov
icebp
sub
push
cmp
xor
mov
cltd
movsl
jne
xor
pop
push
lret
mov
sub
icebp
pop
mov
push
mov
repz
int
and
push
push
nop
subl
and
and
add
and
jo
inc
daa
sarl
jne
jno
insb
push
pop
jmp
or
mov
addr16
test
push
mov
hlt
sbb
mov
cmp
cmpsl
test
jnp
cwtl
mov
popa
adc
jno
js
int3
xchg
pcmpeqb
jmp
insb
mov
xor
sub
lahf
in
scas
cwtl
cwtl
ds
lret
or
sub
pop
into
inc
scas
dec
jp
or
sub
jb
in
xchg
fs
imul
jbe
sub
daa
dec
cltd
pop
test
aaa
into
pop
or
cmp
jno
push
and
sbb
dec
push
xor
push
mov
lret
and
adc
loop
adc
dec
fisubl
aas
ror
rolb
jle
dec
dec
mov
aam
sub
inc
or
pop
lret
or
fwait
push
mov
mov
xor
out
xor
stos
daa
jmp
jns
ja
stos
mov
lret
jnp
nop
push
stc
mov
daa
test
push
dec
imul
fisubl
testb
sbb
xchg
dec
add
xchg
lcall
jns
movsl
adc
add
jl
mov
mov
push
movsl
mov
lods
sbb
pushf
insb
into
sbb
pop
xchg
jmp
jmp
scas
or
inc
or
nop
repnz
pop
mov
add
cmp
xchg
sub
pop
cmp
sub
cwtl
mov
cmp
lea
add
in
inc
xchg
in
jns
dec
mov
jmp
push
inc
sbb
sahf
int
mov
ljmp
stc
scas
mov
xchg
jge
sub
mov
cs
dec
mov
pop
jp
xor
scas
pop
sub
ds
testb
cmp
pushf
sub
jno
mov
into
xor
notb
xor
lods
cmp
mov
adc
push
push
aam
sbb
cmc
xchg
repnz
push
mov
mov
or
scas
xchg
jle
pop
add
in
pop
cld
nop
xchg
insb
scas
fwait
loopne
cmp
xchg
push
cmp
je
scas
jl
or
inc
or
mov
repz
pushf
cli
mov
add
mov
lock
addb
sub
push
dec
cmp
mov
adc
cmp
aad
fsubrs
or
cmp
dec
bound
cmp
jo
xor
sub
mov
push
ja
sub
mov
xchg
aam
mov
push
push
sub
mov
mov
fs
lods
or
lret
mov
sub
xor
movq
push
out
aad
xchg
xor
push
pop
scas
ljmp
fsubrl
imul
leave
ss
test
notb
xor
outsl
mov
sub
xchg
dec
sbb
push
test
add
cs
loope
js
ret
xchg
mov
ret
pop
mov
movsl
mov
daa
cmp
pop
sbb
add
fdivl
daa
pusha
fidivrl
cli
mov
mov
out
popf
stos
iret
push
lock
cmp
shrl
xor
add
pop
sub
push
xchg
jns
mov
mov
or
jge
add
mov
cwtl
and
scas
imul
les
mov
stos
call
or
stos
stos
xor
jmp
fwait
xchg
push
sub
pushf
push
jb
lret
cwtl
push
sub
sti
xchg
push
mov
inc
xor
cmp
jnp
daa
sahf
cltd
aaa
stos
or
pop
lret
inc
mov
dec
sbb
lret
jle
sub
rclb
dec
cmp
lret
cld
xchg
cwtl
cmpsb
xchg
xchg
jno
js
mov
call
inc
ss
rorl
stos
cltd
mov
out
xchg
je
cs
add
pop
mov
popa
leave
push
inc
scas
xchg
iret
imul
adc
icebp
push
dec
leave
movsl
ljmp
xor
cmp
mov
xor
push
fisttpll
lret
addr16
das
aam
mov
jle
dec
es
out
xor
lock
ss
int
pop
scas
xchg
xor
pop
sbb
mov
push
mov
lahf
lods
ror
xchg
cld
sub
stc
mov
imul
mov
fsubs
xchg
mov
push
mov
aad
bound
pavgw
hlt
sbb
sub
imul
adc
mov
mov
mov
fisttps
cmc
mov
xlat
sub
sbb
dec
shrb
sbb
mov
cmp
je
jne
out
pop
sub
cmp
fs
outsb
je
jmp
or
stc
sub
jno
movsl
or
and
xchg
fs
in
inc
or
mov
popf
dec
pop
mov
loopne
lcall
iret
stos
loop
xor
in
jnp
mov
into
add
aad
sbb
adc
jb
insb
cwtl
repnz
lahf
cld
mov
loop
mov
and
push
pop
lods
cmp
jecxz
fcos
into
shll
daa
nop
push
mulb
lret
lret
mov
icebp
pop
xchg
cli
mov
adc
sbb
pop
fwait
adc
ret
cmp
daa
jne
mov
or
cld
clc
and
mov
fbld
inc
pushf
lods
cmp
mov
cmp
popa
aam
popa
or
clc
xchg
cwtl
push
jp
sub
pop
and
dec
out
fdivrs
dec
xor
bound
mov
fwait
aam
dec
jmp
mov
bound
shll
lods
dec
inc
shlb
xchg
ja
xchg
fiaddl
aam
jno
rcll
sbb
sti
jno
pop
adc
rcll
mov
jmp
ljmp
mov
fistps
xor
test
inc
das
leave
dec
jb
jecxz
pop
push
mov
test
mov
sub
daa
push
dec
aaa
xor
cmc
mov
aam
nop
pop
mov
gs
addr16
out
mov
mov
or
cmp
lods
daa
ret
and
inc
mov
xchg
mov
pop
jo
inc
lds
outsl
movsl
jne
rcrl
dec
inc
adc
dec
bound
fwait
gs
or
xor
popw
sub
popf
nop
xor
lea
mov
out
stos
pop
mov
jmp
sbb
cmc
mov
dec
mov
jns
cmc
jbe
scas
adc
das
dec
aam
in
ficomps
xor
daa
jae
mov
jp
jnp
xchg
pop
cld
ljmp
stos
fsubl
or
imul
aam
push
fwait
mov
movsb
jo
in
sbb
inc
enter
inc
add
dec
mov
fucomip
cltd
ror
mov
jno
sub
push
add
mov
sub
sub
dec
push
call
gs
pushf
repz
std
andl
lret
inc
push
xor
mov
out
lret
or
mov
xorl
lods
daa
mov
mov
fs
mov
dec
hlt
xor
out
mov
das
fimull
mov
mov
cmpsb
xchg
cmp
xchg
addr16
int3
lods
jmp
dec
testb
lds
push
inc
fdivrs
cwtl
mov
mov
cmp
loop
xor
das
push
add
outsl
cmc
mov
dec
or
xchg
mov
push
stc
and
mov
insb
call
xor
and
or
inc
jae
mov
mov
movsb
clc
mov
mov
sub
jo
add
dec
stos
mov
stos
dec
pop
sub
xchg
cmp
adc
push
out
mov
sub
sbb
dec
in
and
pop
inc
int3
pop
clc
pop
test
lods
push
push
ret
scas
add
cmp
mov
mov
hlt
xchg
scas
cwtl
dec
pop
inc
sub
xlat
mov
pop
aaa
jbe
enter
test
jne
push
adc
mov
fstps
cli
lret
mov
add
mov
pusha
into
repz
rorb
add
scas
push
xchg
and
lock
pop
or
aas
adc
cmpl
cmp
int
mov
test
mov
xlat
and
or
ja
jne
add
jl
insb
push
mov
daa
mov
or
push
xchg
call
imul
add
lods
jl
test
ficoml
jne
sub
xlat
dec
nop
shrb
fsubr
mov
cmp
push
sub
pop
cmp
or
ljmp
enter
push
push
daa
push
sbb
mov
xor
gs
xor
aad
or
cmp
mov
or
and
in
dec
daa
sub
aam
dec
mov
out
mov
mov
pop
push
scas
pop
jl
adc
stos
lea
ja
cmpsl
xchg
jnp
fisubrl
jp
mov
push
lcall
lea
and
lods
push
outsl
cmc
and
clc
fldl
movsl
xor
mov
inc
dec
out
sub
push
sub
test
loop
inc
jmp
es
mov
sub
shrl
jmp
outsl
jno
out
cltd
and
mov
xchg
in
mov
fldcw
or
shr
call
or
sub
cmp
out
pop
sbb
inc
cwtl
sub
push
and
inc
outsb
ljmp
adc
icebp
lret
imul
lea
cmovl
fdivrp
lret
sub
push
mov
mov
mov
daa
fsubrs
lret
mov
inc
into
sbb
rolb
nop
lret
sarl
dec
mov
dec
and
test
sub
adc
jmp
pop
jb
or
movsl
or
push
adc
scas
cmpsb
jbe
xchg
rcrb
mov
in
lret
cwtl
inc
cld
inc
push
cmp
cmpsb
test
mov
mov
out
scas
pop
xchg
dec
in
cmp
dec
jmp
into
push
pusha
jg
push
cmc
push
cmpsl
jae
fmul
or
jmp
sub
out
lret
mov
out
test
mov
shll
jne
fstl
inc
insl
push
xor
lock
mov
scas
adc
stos
sbb
cmp
dec
jp
adc
std
or
push
dec
fcomps
xchg
imulb
dec
mov
ljmp
xchg
in
mov
shlb
xchg
hlt
pop
sub
mov
icebp
fwait
or
adc
adc
sbb
sbbb
or
gs
popa
jne
fcoms
clc
outsb
push
lods
lcall
mov
cli
mov
aaa
xchg
daa
xchg
push
xchg
mov
mov
sub
add
std
sub
mov
mov
or
mov
xorl
mov
inc
dec
xchg
push
scas
jne
xchg
xor
outsb
jb
test
cltd
insb
testl
lods
sbb
xchg
cmp
xchg
fwait
sbb
lret
xchg
cmpsb
and
xchg
mov
mov
mov
scas
xor
push
adc
outsb
imul
scas
sbb
fisubrs
imul
lods
loope
cld
mov
and
mov
mov
stc
and
pop
and
push
jo
pop
fists
movsl
aad
insl
xchg
pushf
outsb
add
dec
mov
inc
sub
xchg
fnstsw
pop
cmp
mov
sahf
out
mov
cmp
push
out
or
inc
stc
ret
mov
daa
cmp
jle
dec
adc
or
dec
add
sbb
inc
cmp
jmp
push
inc
add
dec
inc
and
jbe
cmp
inc
call
movsl
ds
sbb
or
movsl
push
lahf
in
into
mov
mov
out
lret
scas
or
push
mov
leave
push
and
testb
insl
sbb
mov
setp
push
cmp
cs
jno
mov
lret
outsl
inc
aas
mov
dec
cmp
pop
in
rcl
mov
daa
sbb
into
in
and
scas
xchg
mov
xchg
push
mov
imul
test
pop
je
mov
xor
shlb
repnz
mov
adc
sbb
dec
bound
dec
lcall
ss
mov
sub
push
sub
and
sub
inc
mov
lods
sub
inc
ficompl
add
hlt
adc
inc
fisttps
lods
and
dec
sbb
pop
fcmovnbe
adc
mov
sbb
xor
dec
repz
movsb
lods
daa
outsb
lods
std
jbe
sub
lret
lcall
cmp
outsb
imul
pop
add
nop
outsb
pop
jp
outsl
rorl
mov
mov
mov
cmc
sarb
jmp
push
paddq
mov
inc
fwait
test
cld
ret
ss
xor
in
jg
pop
inc
jp
shll
cwtl
movnti
movsb
inc
push
std
and
testl
out
pop
xchg
lds
xor
scas
pushf
lret
jp
sub
aam
loopne
xchg
imul
in
push
cmp
push
adc
fucom
mov
adc
xchg
xchg
bound
out
cmc
out
adc
clc
adc
ret
repz
adc
bound
rcll
sub
jns
sub
inc
push
ja
stos
add
test
daa
sbb
cmp
or
mov
mov
call
pop
mov
adc
adc
mov
sub
sub
pushf
popl
push
dec
cmpsl
insl
inc
sub
dec
cwtl
loopne
lods
mov
out
les
cs
push
sbb
or
and
cli
xchg
cltd
mov
jmp
shrb
js
sub
out
lret
dec
push
inc
pop
dec
movsl
int3
rcll
sbb
push
lds
lahf
ds
nop
push
js
dec
lds
daa
jecxz
je
pop
xchg
sub
push
les
or
xor
jno
pop
adc
subb
lret
cmp
xchg
mov
xchg
popf
repz
shrl
mov
dec
in
lea
nop
push
add
into
cli
push
sub
pop
or
xor
movsl
js
mov
stc
je
repz
pop
push
mov
imul
out
cwtl
dec
cmp
mov
xchg
insb
pop
fiadds
jae
adc
push
cs
icebp
and
out
push
fsubl
mov
and
cmp
jns
gs
xchg
shlb
aad
stos
call
lods
push
add
pop
out
or
sbb
rolb
pushf
jp
mov
popa
xchg
cmp
or
lcall
fcomps
loope
sub
cs
lea
scas
cmpsb
rcll
in
mov
pop
insb
jmp
sarl
or
test
leave
lods
ret
dec
mov
out
xchg
clc
xlat
push
xlat
jg
daa
lret
icebp
jp
arpl
cli
dec
daa
xor
add
sub
adc
rol
stos
pop
sbb
loope
dec
stos
xchg
dec
ds
xchg
push
jp
jnp
cmpl
mov
sbb
nop
jp
hlt
dec
pop
pop
xchg
cwtl
pop
sbb
dec
stos
jmp
je
and
fnsave
mov
pop
mov
xchg
dec
mov
cmpb
xor
mov
dec
or
add
cld
scas
repnz
push
decl
jp
aad
bnd
scas
cmpsl
sbb
pop
sbb
lcall
loope
cmp
push
cwtl
jmp
cmc
mov
push
push
mov
push
out
mov
scas
mov
mov
outsl
xor
repnz
cmpsb
repnz
dec
ret
pop
adc
jg
pop
mov
lods
sub
jns
sbb
and
das
loop
test
xchg
dec
mov
fisubs
sbb
mov
cli
stc
xor
jae
leave
popa
inc
inc
outsl
hlt
xor
std
push
ret
sub
jno
fmul
sahf
dec
mov
mov
push
int3
add
xor
adc
stos
icebp
mov
jbe
stos
or
sub
jmp
inc
mov
dec
dec
xor
jg
and
cmc
jno
add
dec
mov
push
call
adc
push
movsl
movsb
stos
mov
ljmp
int3
daa
dec
jno
push
cwtl
cmc
sbb
pushf
in
lret
iret
rcll
roll
push
push
push
dec
pop
aad
mov
das
aaa
lahf
adc
dec
adc
pop
pop
aas
jne
roll
jp
mov
seto
scas
add
inc
pop
mov
jp
or
mov
or
and
jecxz
sbb
es
jmp
mov
fwait
push
insb
clc
mov
xchg
push
insl
fsubrl
cwtl
jg
iret
cmp
cmp
mov
cmp
pop
adc
sti
je
mov
shrl
int3
imul
insb
mov
aaa
sbb
adc
inc
das
mov
insb
cmp
pop
stos
imul
mov
stc
ds
scas
rcll
pop
push
or
cwtl
adc
jbe
mov
pop
xchg
adc
or
pushf
jb
jle
jns
aas
lret
aam
in
pop
sub
aad
and
mov
out
testb
jg
addr16
cwtl
fisttps
dec
out
mov
shrb
daa
popa
jae
aas
rorl
add
data16
notb
inc
jns
mov
push
jno
add
jb
fstpt
sub
xchg
outsl
pusha
ljmp
data16
adc
shll
int3
jnp
xor
push
iret
inc
in
ljmp
add
dec
xor
daa
shrl
add
imul
cmp
dec
loop
dec
inc
xchg
push
cltd
mov
inc
mov
push
inc
add
cmp
xor
les
lds
rol
adc
sbb
lret
mov
loopne
out
dec
sbb
jns
push
int3
popf
dec
sbb
jp
pop
jge
jbe
fs
or
sbb
mov
and
ret
jl
lret
pop
lcall
bnd
fdivp
iret
push
sbb
fstpt
jo
pop
stc
ret
pop
mov
and
jb
sbb
test
sbb
jno
mov
mov
fnstenv
mov
or
mov
push
imul
mov
inc
leave
and
sbb
xor
adc
stos
mov
ljmp
jo
in
xchg
hlt
mov
daa
ror
dec
repnz
fisubrs
daa
retw
test
mov
xor
daa
mov
insl
subl
ret
out
pop
xchg
xchg
push
sub
sub
rclb
xor
mov
fstp
push
jbe
and
xchg
xchg
mov
out
mov
test
out
cwtl
insb
xor
mov
jae
hlt
orl
lea
cltd
pop
pop
lret
add
push
or
xchg
mov
popa
mov
xchg
or
cld
es
mov
or
hlt
pop
xchg
stos
jle
out
jmp
enter
add
movsl
sbb
xor
dec
gs
or
dec
and
xchg
test
scas
mov
call
adc
ret
data16
jb
addr16
mov
push
loopne
xor
scas
ficoml
inc
mov
mov
ljmp
adc
outsl
sub
cmp
mov
sbb
arpl
clc
jne
jnp
sub
rclb
daa
push
shl
movsl
dec
cwtl
mov
push
iret
sub
adc
mov
icebp
or
jmp
cmc
enter
cwtl
mov
mov
mov
rorb
insb
jno
lods
xor
lea
decb
sub
jge
sbb
scas
out
sub
sub
je
dec
cmpsl
daa
fsub
push
fisttpll
or
cmp
dec
insb
xor
mov
es
mov
sub
push
iret
add
mov
dec
jnp
push
dec
int3
or
push
repz
loop
adc
sub
shr
int3
js
mov
xchg
pop
in
xor
mov
mov
jp
adc
pop
sub
push
aad
popa
mov
popa
cmp
iret
leave
ljmp
sub
cli
jmp
or
ret
imul
jp
sbb
xor
xchg
push
fmuls
cmp
sbb
push
movsl
dec
cmp
xchg
cmpsb
jl
insl
subb
jo
aam
xchg
sub
hlt
jmp
mov
lea
jno
lcall
mov
lahf
lods
out
stc
ss
aad
je
stc
hlt
orl
jbe
data16
lret
jg
sbb
mov
scas
stos
sbb
pop
pop
test
ljmp
ds
popa
adc
cwtl
cmc
popa
fnsave
fistps
pop
fistpl
or
test
mov
adc
dec
sub
push
repnz
je
xchg
and
sub
daa
and
pop
in
sbb
outsb
mov
fisttpl
fcoms
mov
push
aam
sarl
cmc
mov
sub
sub
popf
cmpsb
jecxz
cmp
cmp
inc
fimuls
sub
movsb
mov
or
sbb
jno
js
mov
adc
mov
sbb
mov
cmpsb
xchg
jb
repz
xchg
sub
dec
ds
mov
or
cmp
mov
adc
dec
arpl
aad
jp
lcall
jo
inc
popf
jle
mov
mov
xor
hlt
inc
enter
in
add
cmpsb
xchg
in
loop
mov
cmpsl
loop
enter
cmpsl
or
cmp
sub
mov
jo
mov
xor
daa
movsb
pop
lret
pop
idivl
jno
jecxz
outsb
loope
mov
imul
movb
lret
inc
clc
xchg
adc
xchg
sub
xchg
xchg
stos
sbb
fcmove
rorb
popf
inc
jl
lcall
sbb
xor
cld
lock
lret
sbb
inc
xor
fcmovu
cmc
fucomi
mov
stos
arpl
popa
sbb
xchg
in
xor
xchg
lret
jle
dec
stos
pop
das
xor
lcall
xlat
aas
sub
xchg
stos
outsl
sbbb
scas
pop
lret
insb
outsl
cld
sub
push
loop
loopne
dec
xchg
xchg
push
inc
dec
mov
call
push
xchg
xor
adc
icebp
test
neg
aas
xor
ret
xchg
jne
mov
dec
xor
sub
push
push
bound
fimull
cmp
jo
imulb
dec
cs
or
popf
push
sbb
xor
imul
xlat
imul
enter
clc
mov
xchg
scas
fisttpll
stc
and
ret
or
ljmp
jp
xlat
hlt
stos
mov
stos
push
daa
inc
sub
insl
gs
es
adc
in
xor
adc
pop
mov
clc
test
mov
adc
imul
add
xchg
lret
mov
adc
xchg
inc
mov
mov
mov
jbe
adc
inc
xor
test
fwait
out
subb
les
sub
push
dec
cmc
or
aas
add
pop
xchg
pushf
jmp
daa
lcall
cli
or
scas
icebp
in
movsb
daa
dec
and
cs
mov
xor
in
lret
fimuls
loop
xor
push
and
mov
mov
not
jle
dec
negb
and
push
movsb
out
leave
sub
lret
add
mov
inc
adc
cmp
or
xor
lcall
imull
repz
mov
inc
das
ljmp
adc
add
dec
ljmp
fsubr
and
scas
psrad
push
mov
js
sub
mov
jmp
inc
insb
pusha
test
aam
mov
xor
ja
pop
es
and
std
je
scas
jmp
mov
stc
int3
sarb
mov
pop
dec
add
imul
popf
pop
sbb
adc
jge
jcxz
aad
mov
stos
inc
jmp
shrl
mov
fstpl
clc
sub
or
mov
dec
cltd
stos
inc
loope
cs
ljmp
clc
xchg
flds
insb
imul
scas
cwtl
in
add
stos
xchg
xor
sbb
push
sub
pop
push
shrb
cs
outsb
cwtl
push
mov
push
lret
xchg
jp
and
adc
adc
lods
xchg
lods
or
insl
rcrb
add
xor
adc
nop
pop
xor
adc
movsl
fs
mov
nop
inc
rorl
inc
int3
sahf
sub
push
sub
and
xchg
sbb
cwtl
pop
fstl
dec
fcoms
cmp
dec
mov
inc
jp
xchg
jle
jle
push
xchg
jns
imull
pop
cmp
ss
iret
adc
cmp
nop
inc
loopne
push
adc
in
lds
sbb
sub
aas
das
ljmp
bound
aad
jp
push
mov
outsl
jmp
mov
add
arpl
setp
cwtl
pop
sbb
mov
mov
bound
push
dec
sarb
ljmp
push
push
inc
push
imul
xchg
xor
mov
add
das
loope
mov
mov
lea
jmp
mov
mov
xchg
mov
adc
cmpsb
adc
int
mov
insb
leave
push
mov
lods
inc
pop
daa
gs
stc
pop
int3
ret
mov
leave
decb
fidivs
mov
xor
and
push
mov
in
xor
insb
pop
dec
inc
cmp
int
xchg
sahf
lahf
sbb
sbb
aam
insb
mov
loope
lcall
mov
pop
mov
lods
pop
jae
mov
jno
mov
leave
xor
xchg
sbbl
or
pop
mov
test
and
jb
push
loop
dec
cmp
iret
sub
iret
xor
push
andb
adc
xchg
add
mov
in
pop
and
jae
daa
inc
xor
sbb
sub
arpl
inc
or
mov
mov
jae
adc
int3
jae
fsubp
out
ss
adc
bound
jae
add
sub
icebp
aad
xchg
shrb
in
mov
jmp
sub
xor
out
test
cmp
rcrl
dec
push
out
dec
xor
jne
mov
push
xchg
sbb
cmp
pusha
jne
push
mov
test
in
jbe
in
loope
scas
push
aad
out
dec
xchg
sbb
jle
jns
jno
adc
sub
and
mov
out
xor
mov
jg
sbbb
hlt
jp
daa
aaa
std
pop
ds
or
sbb
or
sub
jp
jmp
dec
mov
xchg
mov
xchg
dec
xchg
adc
sub
add
out
loope
push
jle
dec
jae
jg
aam
push
sbb
sarb
sarl
subl
pop
pop
xlat
int
mov
mov
pop
jg
lds
loopne
push
mov
int3
aad
jns
dec
fmull
std
jne
push
or
outsl
xchg
test
xor
xor
sti
push
cmc
enter
cs
lcall
adc
rcrb
mov
sbb
add
cmp
fmuls
es
mov
std
pop
xchg
je
jnp
lock
fsts
sbb
xor
add
dec
fld
outsl
es
test
fldcw
xchg
mov
jnp
stos
jb
int3
mov
stos
arpl
mov
inc
dec
repz
and
dec
fdivs
jb
dec
cmp
mov
xor
adc
mov
dec
pop
and
dec
mov
and
xor
pop
ror
imul
pop
cwtl
or
decb
or
push
out
inc
daa
or
cmp
dec
scas
jnp
xor
fists
xor
int
jp
sub
fisubrl
ljmp
pushf
sbb
mov
lea
bound
andb
and
mov
push
dec
dec
dec
add
push
mov
das
lret
fwait
scas
insl
xchg
mull
pop
test
xchg
stos
shrb
jmp
call
xlat
jns
sarb
pop
adc
fbstp
imul
adc
add
hlt
cld
sbb
mov
jnp
mov
in
xchg
repnz
aas
cwtl
mov
jae
fwait
mov
sbb
mov
out
mov
dec
jmp
inc
pop
rolb
scas
ds
fildll
mov
jle
cmp
loop
mov
sbb
push
test
scas
hlt
pusha
sbb
rorb
lret
adc
sub
xor
push
lret
xor
cmp
mov
push
mov
dec
repz
arpl
test
aam
xchg
jns
in
jae
sbb
xlat
xchg
test
pop
out
adc
cmp
pop
mov
test
mov
xor
inc
pop
jb
push
mov
rorb
popf
jb
push
push
xor
adc
test
dec
rolb
mov
push
aad
xor
and
xorl
sbb
mov
add
test
sub
and
cli
iret
xor
cwtl
lret
push
lock
cltd
jb
rorb
or
sub
cltd
in
push
aad
push
imul
insl
orb
xchg
jmp
fcomps
push
rorl
push
mov
into
adc
pop
sub
shll
sub
pop
push
and
xor
add
mov
scas
sub
scas
out
and
loopne
in
cmc
fildll
xchg
outsl
inc
push
test
mov
cs
xchg
cmc
push
fadd
jge
stos
push
or
xor
xchg
repnz
jl
dec
jp
shrl
sub
add
cmp
or
push
lret
sarl
or
ljmp
repz
pop
es
cmp
push
mov
pop
jne
es
push
mov
stos
mov
int
popa
stos
push
dec
out
push
jmp
push
and
or
adc
nop
sbb
daa
out
rclb
push
mov
dec
push
sbb
in
push
push
mov
and
sbb
push
or
imul
adc
lcall
bsf
addr16
test
sub
push
mov
push
or
jbe
imul
adc
out
or
or
mov
inc
dec
sub
add
popf
mov
xlat
xchg
and
in
dec
mov
lea
ss
jae
fstpt
jle
sbb
dec
rcrb
ret
fstpl
cmpsb
mov
hlt
mov
sbbb
adc
mov
das
xchg
adc
inc
in
outsl
push
jmp
mov
mov
cmp
stos
int3
icebp
add
testb
cltd
xchg
sub
cwtl
mov
fdiv
outsl
int
jmp
sbb
jg
insb
mov
arpl
rorl
stos
repz
jae
mov
sahf
gs
jno
aas
dec
test
mov
cmc
jnp
sbb
insb
and
inc
push
jno
or
xor
mov
sbb
int3
mov
cmp
out
mov
mov
cmp
sarl
repnz
xor
into
sbb
shrb
cs
xchg
and
adc
mov
cmp
mov
cld
out
hlt
hlt
adc
nop
imul
test
dec
jb
hlt
adc
scas
jmp
popa
and
pop
rclb
mov
sbb
test
jae
jnp
inc
aam
negl
std
mov
mov
jmp
pushf
jb
adc
dec
jne
mov
push
fs
xor
out
ljmp
addr16
xchg
movsb
or
jg
xchg
daa
mov
stos
mov
pop
lcall
jnp
push
mov
iret
aaa
movsl
xchg
xor
stos
dec
movsb
cmp
adc
stos
mov
add
sub
or
xchg
sbb
ljmp
hlt
inc
daa
pop
dec
pushf
lea
cwtl
push
pop
sub
dec
push
adc
je
inc
pop
mov
bound
xchg
movsb
js
or
sub
jae
in
sub
and
aam
daa
sar
iret
sub
pop
xchg
adc
fidivl
xchg
int3
lods
push
sub
push
inc
loop
daa
mov
pop
fwait
dec
fmul
xor
out
aam
cld
mov
lock
rcr
or
jnp
stc
lods
sbb
mov
rorb
sbb
dec
sarb
gs
out
mov
xor
mov
pop
mov
cmpsl
add
lahf
orb
mov
xchg
mov
mov
loope
call
je
sub
dec
jae
bound
sbb
imul
negl
xchg
sbb
pop
movsb
rolb
sbb
xor
pop
sbb
fidivrs
rcll
pushf
stc
pusha
insb
repnz
pop
dec
pop
ret
sar
pop
lods
mov
push
daa
pop
jno
mov
stos
sbb
cmpsl
in
push
imul
test
push
lods
sahf
out
mov
sbb
iret
xchg
stos
lret
jo
test
mov
fsubs
jno
data16
sbb
ds
inc
push
xchg
sub
orb
stos
inc
xor
and
dec
mov
push
inc
and
mov
imul
scas
jge
or
sbb
sub
add
sbb
mov
pop
cmp
push
int3
lret
imul
xor
pop
sbb
sahf
or
cmp
test
pop
and
lcall
mov
dec
push
inc
dec
imul
pop
push
and
cmpsb
and
enter
jb
in
mov
shlb
dec
imul
adc
frstor
xor
cs
push
adc
roll
sbb
xor
mov
xor
mov
or
sbb
sbb
pusha
in
xchg
mov
fmull
inc
push
and
mov
cs
adc
cmp
cmp
daa
cmp
inc
or
call
in
out
adc
push
jp
lock
mov
push
xchg
mov
pop
sbb
lret
cmp
xchg
cmpsb
in
mov
pop
push
fistpll
daa
insb
add
std
mov
popf
jne
jne
pop
and
adc
and
fldcw
fcmovbe
adc
push
insb
mov
cld
xchg
jns
and
adc
jnp
loopne
sub
std
and
sub
mov
pop
bound
xchg
mov
xor
int3
daa
push
ss
jnp
mov
mov
mov
xor
decb
stc
outsb
push
add
adc
ds
fsubr
mov
jno
xchg
xchg
mov
xor
push
push
xor
mov
jmp
lods
push
xchg
or
xor
jp
mov
sub
sub
xchg
cmp
jnp
sahf
stos
xchg
inc
jae
mov
pop
test
dec
cmp
mov
insb
mov
js
jmp
cmpl
lret
push
mov
mov
shll
cmp
mov
inc
out
cmpsb
pop
std
ficompl
imul
or
adc
jp
adc
inc
xchg
jmp
xchg
mov
pop
fs
pop
sbb
pop
shll
and
mov
pop
mov
jbe
lret
hlt
fs
les
orl
or
popf
inc
mov
jo
or
lret
fnstsw
sub
rorl
jns
pop
add
push
or
dec
cmp
push
adc
push
dec
or
iret
imulb
adc
pop
jno
push
int
sbb
loop
push
dec
outsl
stos
mov
int3
outsl
test
out
gs
clc
adc
add
mov
incb
sub
movsb
loop
jp
inc
and
ss
mov
sbb
scas
loop
aas
and
push
sub
dec
adc
mov
pushf
cs
lods
jecxz
sub
imul
sbb
cmp
sahf
lret
add
mov
pop
mov
xor
pop
lea
fldcw
cs
mov
add
call
test
xor
push
cmpsb
into
movq
add
mov
stos
mov
push
aad
sub
mov
addb
outsl
imul
sub
push
xchg
in
mov
and
mov
clc
into
fmul
push
adc
add
xor
add
dec
mov
jno
clc
push
xchg
dec
aas
pop
sub
jns
cmp
dec
xlat
dec
jno
pop
movsl
sbb
mov
xchg
mov
dec
imul
and
mov
push
int3
ljmp
mov
lods
sbb
andb
fwait
or
push
jno
mov
mov
pop
cwtl
inc
out
cmp
daa
mov
lret
mov
or
adc
push
lahf
pop
sbb
and
mov
fdivrs
daa
incb
aad
mov
push
dec
ds
sbb
xor
outsl
bound
sbb
das
mov
xchg
cs
aam
pop
sahf
js
push
or
mov
cwtl
mov
jno
push
cmp
out
cmp
sub
mov
movntq
add
push
mov
mov
push
mov
cmp
into
mov
lcall
mov
push
scas
add
sbb
fdivrs
int3
hlt
and
pop
mov
add
aad
les
push
add
sub
and
leave
pop
aad
xor
add
js
inc
dec
jle
fcompl
xchg
pushf
or
adc
adc
movq
gs
jg
stos
pop
cmc
dec
jle
xor
adc
sub
mov
inc
das
add
inc
ja,pn
adc
mov
inc
jns
fwait
dec
data16
add
test
dec
pusha
and
mov
pop
push
xchg
xchg
and
fisubrl
xchg
jg
sbb
daa
cmp
shll
lcall
dec
xchg
and
mov
mov
inc
xchg
dec
test
imul
not
dec
inc
jnp
cltd
lahf
daa
dec
pop
mov
sbb
outsw
dec
loopne
int3
repnz
mov
pop
xchg
outsl
dec
mov
and
out
decl
or
pushf
icebp
push
sbbb
inc
insb
push
adc
scas
int3
dec
sub
es
pop
mov
mov
aaa
dec
adc
les
xchg
pushf
in
mov
add
sbb
scas
sub
in
insb
sub
scas
or
aaa
outsl
mov
mov
lock
mov
outsb
scas
push
stos
fld
xor
mov
ljmp
fstpl
inc
add
mov
in
mov
pop
mov
lock
push
pop
mov
push
stos
aam
add
loope
sbb
cmp
bound
mov
jno
clc
das
aad
push
mov
test
add
std
and
in
inc
daa
or
dec
jbe
test
ss
stc
pop
mov
xor
mov
jp
into
mov
daa
sbb
in
mov
mov
and
test
pop
mov
lods
icebp
mov
dec
xorl
in
dec
mov
std
nop
scas
lret
mov
sub
add
outsb
jno
mov
xchg
inc
movl
or
and
sub
sbb
scas
gs
dec
or
iret
fidivl
call
lahf
in
sbb
rorl
jbe
rorb
scas
popa
insb
xor
xor
mov
cmc
daa
pop
pop
popa
call
cmp
mov
lods
push
and
je
inc
movsl
push
sub
pushf
cmpl
adc
sbb
lcall
push
in
jb
push
add
loope
in
daa
adc
xor
inc
or
cmp
scas
mov
cmc
mov
xor
xor
int
sub
outsb
bound
test
loop
fs
or
mov
mov
aas
bound
sti
pop
fsub
roll
sbb
stos
daa
and
add
mov
and
leave
and
jmp
pop
out
adc
daa
das
clc
fimuls
scas
jmp
inc
or
add
xor
icebp
leave
bound
cmpsl
xlat
cmp
sub
cmp
fldenv
std
sbb
jno
fdiv
jb
rcll
mov
mov
leave
adc
push
sub
stos
push
popa
mov
aas
inc
sub
xchg
in
scas
push
adc
mov
cmc
in
or
loop
fmul
mull
das
js
data16
out
cmp
ja
pusha
data16
sbb
jae
ficomps
jmp
cltd
push
inc
add
or
jmp
xchg
sub
xor
xor
mov
jno
sub
xchg
pop
cmc
inc
sbb
jl
jecxz
xchg
xchg
adc
dec
xchg
out
clc
mov
push
cmc
xchg
stos
stos
sub
jge
rorl
es
imul
or
ret
daa
aam
in
popa
sub
or
pop
dec
add
out
mov
cmp
push
push
rcrl
inc
jp
daa
push
negl
stos
push
sub
sub
jp
push
leave
cmp
stc
cmp
and
adc
call
lock
scas
mov
jnp
cmp
xchg
jae
sub
in
sbb
sub
mov
outsb
lods
xchg
rorb
shrb
cmc
mov
daa
imul
cmp
cld
inc
fwait
pop
mov
xchg
sub
aad
or
aad
adc
daa
inc
mov
adc
cmpb
cwtl
or
movsl
add
loop
cwtl
mov
xchg
mov
lret
popf
ret
test
iret
cmp
stc
fucom
jb
jne
pop
imul
push
sub
inc
mov
cmpsb
fisttpll
push
sahf
dec
or
dec
mov
imull
enter
in
stc
sbb
out
add
lret
daa
arpl
leave
pop
je
loop
fldcw
sub
in
mov
fsub
cmp
xlat
mov
aad
jno
stos
pop
push
add
test
daa
outsl
dec
cld
je
cld
lods
rol
xchg
jo
adc
jns
cmp
and
das
xlat
jmp
pop
dec
jnp
mov
push
or
mov
jo
lea
out
je
lds
xchg
mov
stc
mov
mov
aas
mov
xor
inc
data16
xchg
jns,pn
daa
rcrl
test
or
daa
stos
rolb
push
daa
mov
rol
imul
push
hlt
daa
movsb
dec
imul
xchg
jno
leave
outsl
xor
mov
jnp,pn
sbb
pop
jmp
cmp
push
add
inc
adc
scas
jp
cmp
dec
movsb
int3
add
cli
mov
lds
test
aam
jb
sub
push
pop
scas
fcomp
ficomps
fldcw
or
inc
stos
das
decb
call
adc
sahf
insb
jmp
or
fwait
in
pusha
xchg
adc
test
xchg
inc
push
cmp
cmp
das
into
js
push
or
or
fildll
jp
dec
scas
adc
scas
xor
mov
xchg
xor
fistl
imul
adc
xchg
loopne
cs
mov
and
sub
pop
ds
push
in
mov
lret
xchg
mov
dec
mov
jg
dec
aaa
mov
xchg
xchg
cmp
stos
cmpsl
xor
pop
fstl
fnsave
mov
sarb
repnz
fmull
push
outsl
outsl
mov
dec
bound
mov
insb
js
int3
add
scas
xorl
mov
inc
inc
adc
call
setne
lcall
push
jnp
int3
or
sahf
stos
mov
in
jae
movsl
enter
mov
jmp
and
int3
pop
cwtl
mov
lods
mov
popa
out
es
sbb
ljmp
pop
mov
into
int3
daa
dec
test
mov
rclb
out
lds
insb
int
mov
and
mov
sub
hlt
sti
xor
cltd
rcll
push
stc
iret
sub
and
adc
bnd
mov
mov
mov
out
add
sbb
ds
jmp
inc
loope
or
jb
std
adc
dec
jle
jl
pop
sbb
decl
xlat
pop
lret
cli
div
cwtl
rclb
adc
iret
adc
mov
ljmp
lcall
imul
mov
mov
sbb
fwait
inc
mov
test
loope
sub
xchg
cltd
add
data16
mov
jae
pop
inc
dec
out
inc
pop
push
push
or
pop
test
dec
pop
cmpsl
adc
adc
lea
xchg
fcoml
insb
cld
mov
and
test
sbb
push
mov
hlt
mov
mov
scas
mov
pop
sub
clc
int3
in
mov
push
pop
lcall
sub
repz
mov
sub
sbb
out
sbb
std
sti
fidivrs
hlt
push
mov
xchg
daa
xor
cmp
cmc
loope
push
and
dec
fldcw
xchg
je
stos
mov
outsb
xor
pop
mov
adc
xchg
adc
jb
cmp
jne
fcoms
leave
jb
jecxz
inc
mov
repnz
and
or
ret
insb
mov
in
or
push
cmpsl
stos
jns
jmp
xchg
sarb
in
mov
sbb
rcrb
ljmp
lds
fdivs
pushf
mov
inc
in
cmpsl
mov
mov
and
jbe
push
test
test
sub
or
or
or
xchg
lock
stc
jae
mov
pop
push
push
mov
fildll
or
out
inc
inc
int3
mov
dec
out
insb
and
sub
mov
mov
scas
cmp
or
int
push
jl
cmc
pop
test
push
test
int
inc
adc
xchg
or
pop
xchg
pop
scas
andl
sub
loopne
xor
adc
sbb
sub
scas
cwtl
xchg
sub
push
loop
and
mov
pop
sbb
push
xchg
inc
lea
cmc
or
pop
loope
lea
adc
pop
mov
cmp
daa
ret
rol
sub
xchg
or
mov
in
cmc
xor
pop
jns
std
icebp
es
xchg
and
lcall
xchg
movsl
decl
pavgb
out
mov
push
add
mov
repnz
add
frstor
pop
hlt
or
mov
dec
push
into
lock
sbb
mov
and
mov
mov
sbb
repz
and
arpl
bound
fcmovbe
jecxz
pop
test
mov
roll
je
jno
test
das
pop
ds
add
push
jnp
insb
inc
stos
sub
jmp
std
dec
xor
insl
imulb
fisttpl
out
mov
iret
cmp
push
test
cmp
push
jnp
mov
fmuls
jl
je
jmp
sub
xchg
mov
inc
add
push
dec
cmpsb
cmpsb
jp
in
daa
jl
out
in
xchg
xchg
xchg
ret
xorl
orb
movsl
mov
xchg
sub
xor
cld
test
xor
mov
push
and
fnstenv
out
es
clc
or
cmp
lods
aam
cmp
sbb
mov
and
mov
ds
mov
out
sub
add
in
mov
sbbl
out
pop
shrl
mov
aam
aaa
add
je
jae
push
xchg
add
xchg
and
stos
add
in
in
xchg
push
jae
leave
lea
push
jl
dec
cmpsl
adc
fsts
xchg
mov
jo
mov
lret
adc
jecxz
cltd
sub
mov
shl
outsl
in
insl
ds
sub
sbb
je
lret
aas
or
or
push
xchg
dec
aaa
inc
test
xchg
sahf
and
add
aad
or
insb
mov
pop
cmovae
adc
push
cltd
pop
adc
cmc
aas
outsl
push
lods
xor
insl
jb
fsub
leave
and
and
stos
or
dec
push
xor
scas
femms
out
insb
fsubr
mov
inc
jo
mov
pop
std
cmp
xor
lret
xchg
in
mov
mov
cltd
lret
fildl
shrb
pop
or
xor
push
stos
sbb
mov
ret
or
jae
xchg
mov
push
mov
daa
out
xor
xlat
or
dec
popa
cli
or
xchg
pop
push
fldt
inc
pop
inc
mov
adc
jl
or
mov
mov
daa
xchg
idivb
pop
mov
lret
int
adc
jle
mov
imul
and
call
mov
mov
jle
push
push
xchg
mov
dec
repz
arpl
mov
jl
cwtl
sbb
lods
lods
inc
imul
shrl
mov
je
lock
mov
nop
daa
lret
sub
js
lret
adc
sbb
imulb
inc
movsl
cmpsl
pop
fdivrl
xor
xor
push
ljmp
clc
out
inc
inc
dec
daa
popf
and
mov
ror
lods
or
sti
icebp
mov
jns
jbe
mov
cmpsl
outsl
xchg
sbbl
push
jne
into
das
mov
lahf
leave
call
sbb
mov
mov
pop
insl
sub
insl
outsb
pop
mov
mov
and
mov
pop
cmp
add
dec
sbb
add
repz
pop
mov
cmp
or
pop
mov
fwait
lea
pop
mov
push
sub
fimull
mov
mov
or
add
ljmp
btr
add
cmp
sbb
or
fldl
rclb
ljmp
cmpsb
add
call
inc
notb
or
fldcw
aam
xchg
in
aaa
push
shlb
push
aad
and
je
adc
add
adc
xchg
push
jno
push
outsl
adc
xchg
lock
xchg
cld
and
dec
push
mov
dec
sub
fwait
out
dec
add
loopne
ss
in
sub
ffreep
lock
mov
cmp
mov
and
dec
test
xor
jae
daa
cmpsl
stos
sub
add
bound
inc
pop
xor
iret
or
pop
rcrb
adc
cmpsl
aad
aam
lret
movsb
daa
sbb
sbb
pop
fwait
add
stos
daa
out
push
xchg
lcall
sbb
pop
das
push
cmpb
pop
sub
dec
sbb
addb
ljmp
jecxz
jmp
push
dec
adc
jns
outsb
mov
mov
xor
jb
mov
jo
mov
push
or
in
pop
inc
xor
stos
daa
cs
adc
push
leave
hlt
sbb
xchg
jmp
pop
outsb
sarl
mov
inc
jae
ljmp
mov
shll
xchg
jno
and
adc
mov
fimull
outsl
fwait
push
push
lods
int3
mov
outsb
dec
mov
iret
popw
jns
jo
addr16
stc
sbb
lds
xchg
mov
push
fidivrs
and
lods
xchg
pop
adc
jns
inc
dec
or
fiaddl
xorb
iret
dec
addr16
loop
adc
mov
rcr
cmp
jge
cmp
pop
call
push
aad
daa
add
aaa
nop
sbb
adc
adc
jl
sbb
dec
aam
dec
cmp
dec
and
fidivl
cs
adc
inc
sub
addr16
pop
addl
jns
jp
push
xor
sbb
and
xchg
or
mov
aaa
das
or
inc
fimuls
xor
inc
and
pop
fcomps
sbb
sbb
repnz
adc
pushf
cmpsb
dec
pop
sbb
fldcw
daa
lock
clc
mov
fdivr
fadds
shl
aad
pushf
sti
or
mov
fdivrp
out
mov
sub
inc
loope
jmp
outsl
or
movsb
or
lcall
inc
fstps
cmp
cmpsl
sbb
cld
sti
push
xchg
stos
int3
xchg
pushf
add
jbe
negl
in
mov
or
mov
int3
mov
jg
mov
int3
jmp
xlat
jns
mov
daa
push
mov
sub
adc
das
pop
xchg
sahf
das
das
pushf
inc
or
sbb
test
bound
sub
inc
mov
push
faddl
ret
pop
dec
xchg
sub
daa
and
cmpsb
ret
adc
jmp
inc
mov
adc
adcb
and
fcmovbe
sbb
addr16
int
dec
xlat
cmp
je
inc
cmc
cs
mov
push
addr16
push
push
rcrl
adc
or
outsl
sub
sbb
sub
jg
add
insl
pop
mov
aaa
in
inc
mov
push
test
mov
push
fwait
add
inc
push
jmp
loopne
pushf
in
lret
inc
mov
fdivrl
pusha
dec
hlt
mov
call
fldl2t
shll
push
mov
xchg
pop
mov
pop
cs
or
jo
mov
cmp
cmp
dec
sub
xor
push
inc
xchg
or
cs
adc
or
sub
pop
mov
lcall
mov
inc
dec
xchg
add
sbb
aaa
or
outsb
or
dec
pusha
arpl
pushf
mov
sbb
pop
mov
adc
fcmovnbe
in
sbb
cltd
push
fdivrl
mov
fildll
mov
daa
mov
arpl
xchg
iret
or
in
xchg
inc
punpckhdq
xor
lcall
inc
mov
add
sbb
or
lea
cmp
dec
in
jp
fdivl
sub
bound
mov
push
pop
inc
in
fwait
push
xchg
adc
je
out
and
adc
add
addr16
xor
ficoml
insb
jge
xchg
dec
dec
popa
stos
pop
sbb
jmp
dec
pop
mov
lret
les
or
mov
out
rep
rorb
mov
aaa
scas
cmp
lock
fcomip
xor
mov
sub
or
scas
test
sub
cmp
js
or
ror
add
push
in
push
leave
mov
rclb
inc
pusha
mov
es
popf
dec
adc
and
and
fsts
inc
jo
push
inc
mov
gs
xor
nop
lcall
sub
cmpsb
adcl
and
dec
icebp
in
add
movsl
adc
adc
push
mov
leave
icebp
hlt
cld
xchg
sub
jns
js
push
mov
or
test
insl
mov
sub
xchg
inc
push
aam
xor
adc
hlt
outsl
ret
or
mov
inc
adc
jmp
dec
mov
xor
js
add
pushf
mov
pop
mov
mov
lret
xchg
dec
imul
lea
push
icebp
imul
push
and
out
lret
pop
pop
jne
jbe
add
and
inc
pop
insb
push
aam
and
add
leave
in
stc
push
stos
xchg
int
sub
mov
lret
cli
call
loop
aam
cmp
adc
xchg
mov
push
mov
xlat
sbb
or
leave
mov
clc
cwtl
dec
inc
pusha
mov
fldcw
das
jp
or
sub
push
mov
cltd
mov
jmp
fwait
cld
xchg
ret
loop
ret
pcmpeqb
es
dec
sahf
or
xchg
ljmp
pop
push
scas
xor
mov
call
in
push
nopl
stos
add
aad
rcrl
insl
enter
push
xchg
push
aad
test
jg
xchg
mov
jmp
xchg
or
push
ljmp
rorb
mov
aad
push
jne
fldenv
lret
bnd
pop
inc
stos
adc
data16
imul
orb
dec
push
mov
sbb
daa
inc
inc
sbb
sbb
mov
and
outsb
jno
out
stc
in
movsl
mov
fimull
jp
sbb
stos
pop
adc
bnd
test
and
sti
movsb
scas
pop
test
in
pop
cltd
mov
lcall
loope
sub
pop
shlb
xchg
out
pop
pop
xchg
pop
xchg
sub
fisttpl
cld
dec
or
and
mulb
inc
lret
xor
scas
stos
lret
pop
mov
add
push
adc
aas
mov
xchg
pop
cmpsl
dec
jae
jge
mov
fcomps
popa
sti
enter
sti
xchg
adc
add
lret
aaa
cmp
jnp
clc
jns
mov
repz
or
pop
sti
sbb
lcall
movl
mov
jl
and
cmp
sbb
loopnew
insb
adc
fwait
cmp
cli
mov
pop
push
xor
mov
cltd
lock
cmp
ljmp
xor
jno
cltd
inc
out
inc
mov
repnz
and
inc
cmc
bound
aas
push
or
jae
xor
sbb
xchg
and
inc
iret
sbbl
jno
lret
cmp
mov
outsl
aas
push
or
call
outsl
adc
scas
xchg
push
int
sub
or
mov
mov
js
jo
imul
arpl
cmp
data16
fsubrs
dec
jae
xchg
into
push
gs
popf
popl
sub
jle
xor
cmp
and
sub
or
addb
mov
mov
pop
ret
lea
insb
or
jp
sub
popf
cmpsb
int
pop
dec
dec
inc
cmp
mov
mov
rcrl
jecxz
daa
cmp
fisubrl
hlt
insb
stos
jno
test
mov
cmp
lods
popf
notb
adc
hlt
jae
pop
mov
sub
cmpb
inc
das
dec
push
data16
xor
xor
jno
or
dec
andb
push
leave
fwait
outsl
dec
out
dec
aam
push
xor
aad
push
iret
adc
lods
stos
or
xor
lret
js
mov
fisubs
rcrb
int3
test
and
xor
xor
ret
dec
aas
stos
and
sub
test
cmpb
push
cld
jno
mov
add
cmpsl
and
adc
mov
ljmp
mov
stc
pop
test
inc
and
andb
push
insb
pop
cmpsl
call
pop
mov
cmc
insb
cmp
mov
ja
mov
sbb
xor
dec
nop
sub
sbb
mov
xchg
fnstsw
pop
and
mov
movaps
adc
outsl
ljmp
pop
push
orl
arpl
mov
xchg
lret
pusha
push
and
xchg
push
jo
lcall
and
cs
and
xor
lds
or
cmc
or
lds
lods
mov
aas
jp
inc
cli
xchg
dec
std
adc
scas
insl
outsl
jnp
out
sub
mov
popl
sub
xchg
push
mov
push
pop
inc
pushw
fcmovne
pushf
push
jae
subb
xor
cvttps2pi
inc
or
dec
iret
or
and
lock
mov
dec
mov
orb
add
std
js
pop
or
ja
and
jnp
cmc
sti
nop
push
shl
scas
pusha
shr
adc
lahf
cmp
sar
adc
mov
sti
xchg
dec
rcrl
fildll
ds
or
pop
mov
inc
cltd
inc
aad
or
xchg
sub
aas
imul
dec
mov
lock
in
mov
imul
rorl
and
mov
mov
aam
add
add
sbb
in
imul
ficompl
sbb
stos
ror
loope
nop
mov
imul
int3
rclb
xchg
inc
sbb
std
sub
mov
sti
shlb
test
movsl
mov
add
xchg
pop
movsl
inc
ficoms
lock
and
pusha
push
adc
xchg
lcall
lahf
scas
jle
adc
and
rorl
sbb
xor
addr16
cwtl
lcall
mov
sub
out
and
pop
pop
mov
negb
and
cmp
test
mov
das
sub
lret
fldcw
data16
jb
mov
leave
inc
jmp
scas
inc
or
jb
and
jp
mov
jb
cmc
adc
cmp
sbb
mov
aad
sbb
mov
pop
and
shlb
jmp
lock
lea
jb
pushf
ret
cmpsb
push
add
test
and
or
mov
dec
push
in
cltd
lcall
insb
aam
test
rolb
lret
dec
jle
ret
jne
xchg
xchg
push
xchg
ret
mov
or
sbb
jne
cmp
stc
pop
movsl
in
enter
mov
pop
mov
mov
es
stos
pop
xchg
lret
mov
es
mov
ret
push
lret
cmp
nop
sbb
mov
adc
push
mov
sbb
and
cld
sbb
cld
or
or
cmp
repnz
pop
jne
mov
mov
roll
bound
or
mov
fnstsw
out
adc
pop
inc
sbb
mov
outsb
popl
pop
pushf
mov
and
sbb
pop
sbb
pop
fwait
push
sub
and
xor
out
cltd
dec
cltd
jb
lcall
mov
jne
xchg
repz
sub
sbb
mov
push
mov
jae
shll
lds
movsb
cmp
adc
rclb
ret
daa
addr16
push
repnz
fsubs
and
mov
daa
mov
dec
dec
mov
icebp
ljmp
mov
sbb
out
xchg
lods
or
or
cwtl
xlat
in
mov
aad
mov
adc
cmp
sbb
xor
adc
in
dec
pop
orl
pop
movsl
or
leave
scas
je
jge
and
adc
mov
lea
out
push
pop
loope
test
out
int
adc
fstpl
int
xchg
shll
lods
xor
mov
mov
mov
add
fwait
imul
dec
dec
adc
lret
dec
pop
push
rcrb
jle
popf
mov
fwait
cmp
jnp,pn
test
addr16
jg
adc
and
enter
outsb
push
jp,pt
loop
xchg
scas
and
pop
sbb
cltd
pop
push
popa
sbb
bswap
scas
out
adc
mov
in
lret
or
int3
push
mov
addr16
dec
xor
int3
sub
jae
imul
ret
daa
mov
hlt
mov
mov
cmpsb
loopne
out
mov
mov
stos
daa
mov
xchg
mov
xchg
jecxz
pcmpeqb
lds
scas
or
mov
das
mov
daa
fisubrs
adc
ret
cwtl
xchg
or
jae
lahf
push
cli
cli
sbb
adc
add
nop
loop
sbbl
xlat
je
repz
xchg
orb
jo
cltd
daa
addr16
adc
mov
dec
lss
rcrl
addr16
jno
loop
mov
das
mov
push
cmpsl
or
add
mov
lret
pop
and
pop
or
dec
inc
pop
or
insl
mov
ljmp
push
adc
ljmp
lahf
add
cmp
and
xor
sarb
jae
adcl
add
sub
jb
and
pop
dec
loop
xchg
push
ds
and
fwait
adc
push
cmp
push
lcall
imul
xchg
xlat
push
mov
repz
into
push
orl
adc
sub
adc
pop
cwtl
lods
adc
dec
mov
push
call
adc
add
ds
cmpsb
punpckhdq
subb
jle
xchg
ljmp
push
pop
out
push
into
xor
jo
adc
xor
cltd
pop
inc
inc
push
cmp
insl
jmp
and
and
or
xchg
jmp
shr
sbb
insl
bound
push
ljmp
xchg
push
push
mov
in
aad
mov
dec
stos
pusha
mov
sar
adc
adc
mov
jle
cmp
pop
dec
stc
sub
lea
or
adc
int3
pusha
dec
fisubs
add
fstl
adc
xchg
cmc
jmp
pop
adc
shlb
jne
in
aaa
les
ret
nop
ja
and
test
fidivrs
or
sahf
mov
add
clc
imul
lock
add
mov
lods
pop
sub
jae
test
mov
int
mov
stos
test
dec
hlt
push
dec
or
js
jne
pushf
sbb
test
insl
jbe
jle
push
sub
and
test
pushf
aad
daa
mov
lret
push
xor
dec
in
push
test
cltd
scas
inc
dec
fidivs
mov
xor
sub
loop
jae
imul
xchg
inc
add
sbb
stos
sti
jne
scas
iret
mov
cmp
mov
ds
inc
cltd
sub
mov
daa
test
sbb
fnstsw
and
mov
sbb
popf
push
jnp
fxch
adc
es
cmovae
dec
insb
daa
pop
cwtl
movsl
out
data16
mov
mov
outsb
fldl
aad
daa
xchg
mov
pop
xchg
loop
jp
nop
ja
out
enter
dec
push
dec
push
test
movsl
mov
sub
in
jb
repz
dec
roll
xchg
xchg
sbb
fiaddl
mov
jmp
jge
shll
fdivl
sub
xchg
push
lret
mov
sub
cmpsb
jns
add
mov
out
mov
sbb
adc
sbb
xchg
insb
scas
cmpsl
cli
xchg
and
nop
mov
inc
sbb
push
rorb
mov
sub
xchg
xchg
adc
pop
sub
imul
nop
sub
mov
mov
sbb
mov
adc
cwtl
sbb
outsb
jno
adc
daa
dec
insb
jmp
rep
sbb
adc
scas
int3
jne
adc
movsb
addr16
mov
cmp
cltd
clc
dec
inc
mov
mov
mov
xor
xchg
add
sbbl
dec
loopne
push
cmp
lods
or
or
push
or
push
dec
push
cltd
sti
and
sub
mov
push
mov
push
je
sub
dec
rcr
sbb
adc
int
adc
mov
and
push
pop
dec
sahf
xor
jb
cmpsl
bound
adc
xchg
repnz
xchg
mov
imul
xchg
adc
xor
lcall
in
adc
mov
xchg
es
das
scas
movsb
mov
xchg
and
pop
sub
inc
rcll
sti
sbb
pop
jbe
mov
jbe
dec
jno
sbb
and
pop
lods
adc
lods
int
sbb
daa
dec
mov
lcall
mov
dec
fcmovnu
lret
ficompl
aam
lea
clc
je
sbbb
aam
or
mov
outsl
or
xor
idivl
outsl
push
xchg
inc
pop
xor
pushf
aad
sub
mov
xlat
je
sbb
icebp
sbbl
cmpsb
test
xor
cs
pop
stos
mov
xchg
lret
out
or
lcall
out
mov
push
addr16
stos
or
loop
mov
cwtl
cs
dec
fistpll
fs
or
mov
or
adc
adc
mov
xchg
sbb
inc
push
push
sub
sbbl
dec
cltd
jnp
and
sbb
or
sub
mov
or
fwait
lcall
lahf
nop
xchg
jp
es
fwait
mov
push
dec
fcompl
or
xor
mov
and
and
push
push
mov
push
in
and
adc
xor
sbb
add
fidivrl
lcall
cwtl
das
neg
pushf
pop
imul
bound
loop,pn
inc
lock
in
pop
adc
pop
sbb
jmp
ljmp
lret
pop
and
rorl
lods
sbb
int3
mov
or
mov
sbb
inc
adc
dec
xchg
sbb
rcll
into
fdivrl
or
push
jns
add
pop
adc
xor
push
cmp
stos
pop
int3
xchg
imul
adc
pop
fisubrl
fs
push
js
mov
daa
or
and
sbb
mov
lcall
and
and
sbb
and
cmovnp
cmp
int
mov
inc
in
push
es
js
lea
sub
push
iret
sbb
es
cmp
int3
outsl
mov
push
pushf
jno
insl
sub
add
aaa
scas
mov
sbb
repz
cwtl
jmp
nopl
insl
sbb
lcall
or
cmp
mov
sub
sub
sar
push
push
adc
loope
xchg
xchg
dec
leave
adc
outsb
adc
sub
or
lcall
iret
xchg
int3
sbb
in
add
imul
sbb
sbb
ds
repnz
push
es
imul
sub
fsubrs
clc
insb
or
inc
mov
mov
mov
mov
pushfw
jae
adc
mov
sbb
or
mov
dec
cs
fwait
dec
mov
jae
das
into
imul
or
cmp
push
leave
push
cli
insb
sbb
mov
bound
rorl
mov
xchg
adc
jns
push
cmp
sbb
xchg
es
arpl
adc
pop
or
fcoms
imul
call
or
jmp
push
dec
adc
mov
bound
push
js
int
leave
outsb
fcomp
adc
xchg
int3
notb
lods
push
repnz
in
adc
shl
and
xor
pop
inc
fsubl
mov
push
imul
lret
mov
cs
push
pop
les
cmp
push
stos
sub
outsb
cmc
push
inc
ficoml
pop
add
push
mov
fisubrs
shll
sub
adc
outsl
nop
ds
mov
outsb
int
and
mov
jmp
dec
sbb
adc
push
loope
cmp
and
and
adc
fldenv
sub
or
mov
arpl
and
or
and
sahf
sbb
mov
pop
add
xchg
lcall
dec
mov
pushf
outsl
stos
iret
sub
test
and
add
jno
pop
push
jo
jo
clc
xor
inc
dec
push
sbb
push
adc
xchg
and
insl
mov
push
adc
sbb
xchg
or
push
dec
add
adc
push
push
adc
cmp
jmp
adc
pop
push
test
mov
repnz
sbb
push
rcl
and
clc
data16
sbb
ss
cmpsl
repnz
fwait
adc
movaps
adc
imul
adc
pop
or
or
adc
mov
rol
add
push
aam
mov
sbb
sbb
sarb
mov
dec
adc
lcall
sbb
xor
or
mov
movsl
or
out
sbb
sahf
xlat
shrb
push
mov
cmp
nop
sub
dec
adc
pop
xchg
sub
dec
sbb
dec
cs
sub
dec
and
lock
stos
lret
xchg
scas
loopne
lret
rorb
or
sbb
shll
pop
adc
dec
cs
or
pop
push
or
sbb
push
cwtl
cs
xchg
popf
dec
mov
or
push
xlat
pop
test
sbb
pop
lret
or
pop
push
or
inc
ficoms
push
and
out
mov
or
sbb
in
fst
push
adc
scas
adc
sbb
dec
cmpxchg
shl
push
xchg
cs
data16
push
callw
lret
movsb
or
mov
xor
or
mov
sub
lcall
mov
testl
adc
dec
sbb
pop
lcall
push
pop
lahf
sub
dec
and
mov
adc
int3
mov
adc
push
lret
adc
dec
adc
push
cmpsb
mov
cs
cwtl
dec
and
and
xchg
pop
mov
repz
inc
sbb
lret
sbb
push
mov
cmp
mov
adc
adc
pop
ja
sbb
xlat
sbb
inc
cmp
and
adc
mov
sub
xor
xchg
arpl
cmp
sub
and
sub
push
mov
mov
add
sbbl
jb
in
adc
sahf
mov
or
jb
mov
cmpsl
push
xlat
adc
adc
mov
push
or
adc
sbb
movsl
xchg
xchg
or
and
fcom
jb
sbb
repnz
sbb
mov
push
push
adc
shll
or
cli
xchg
and
push
mov
jmp
in
jae
xchg
in
out
or
adc
cmp
fidivl
fcoms
mov
loop
xor
or
xchg
adc
imul
inc
int3
push
or
ret
or
ret
icebp
repnz
dec
outsb
repnz
mov
js
test
xchg
enter
shrb
inc
mov
repnz
cmp
adc
ret
sbb
xor
jmp
mov
adc
ja
dec
mov
jg
imul
imul
pop
mov
xchg
jecxz
mov
cs
sbb
pop
push
cmp
xchg
movsb
adc
add
or
xor
and
xchg
roll
dec
in
in
out
or
test
sbb
adc
iret
push
pop
imul
daa
daa
or
mov
jne
lahf
in
sub
fimuls
sahf
adc
outsl
scas
sub
out
jns
mov
xor
sbb
sbb
mov
lea
cmp
testl
sbb
mov
add
daa
dec
push
incb
mov
adc
sbb
and
imul
mov
data16
aas
out
das
sysexit
and
sbb
lock
pop
arpl
mov
bound
or
mov
mov
aaa
sbb
mov
es
sub
dec
outsb
sar
sbb
push
test
pop
sub
or
lcall
and
or
shlb
pop
mov
mov
push
cs
adc
push
inc
jnp
shll
push
adc
or
sbb
aad
sbb
push
fldlg2
sahf
adc
mov
ss
imul
pop
test
repnz
cli
mov
out
iret
sar
adc
imul
daa
pushf
adc
xlat
lods
mov
imul
outsl
sbb
int
push
ret
xchg
mov
cmp
or
sbb
sahf
jle
add
fildll
dec
sub
push
or
mov
enter
jno
daa
and
out
cmc
dec
adc
mov
cmp
sub
das
shrb
add
adc
and
or
jae
movsl
xchg
les
xor
repnz
mov
mov
test
daa
xchg
mov
mov
imul
jns
or
lcall
shlb
dec
jno
orb
in
out
in
xor
imul
add
or
cwtl
in
cmp
movsb
xchg
xchg
xchg
cmp
sub
or
sti
fisubs
xor
xor
or
mov
or
xor
cmp
lcall
mov
aam
std
inc
jae
aas
sub
or
mov
sbb
pinsrw
data16
scas
sub
mov
imul
imul
jno
and
push
dec
insl
jne
or
lcall
dec
and
push
imul
or
push
cmp
and
pop
sbb
in
fists
or
xchg
adc
push
fstpt
cmp
cli
mov
sub
cmpl
rcrl
or
or
adc
or
or
sbb
push
push
sub
and
adc
push
sbb
lcall
and
inc
or
push
sti
sbb
pop
fldenv
into
and
pop
dec
out
fbstp
push
data16
fldt
mov
cmovae
push
xchg
movsl
and
push
sub
adc
push
xchg
and
lcall
out
jae
adc
push
es
out
testb
sbb
jmp
dec
adc
xor
or
lcall
sbb
or
mov
pop
sub
or
mov
inc
test
jbe
cltd
gs
dec
jnp
gs
mov
adc
stos
cli
or
xor
dec
stos
mov
push
gs
lock
or
ss
adc
dec
sub
loop
cmp
aam
mov
push
nopl
test
fstl
and
daa
icebp
dec
or
add
movsl
xchg
shrb
xor
dec
cwtl
push
xchg
sub
mov
int3
das
aad
jne
adc
or
sbb
fcoms
cs
push
mov
or
movsl
dec
jmp
mov
setb
out
xor
adc
xor
loopne
xchg
sub
lcall
and
adc
dec
outsb
imul
test
adc
mov
pushf
sub
mov
test
mov
rcrb
and
cs
fldl
adc
cwtl
pop
imul
imul
cmp
pop
cs
or
and
or
xchg
push
imul
dec
cli
sahf
imul
scas
scas
push
push
xchg
imul
inc
or
ret
or
push
addb
sbb
test
popl
or
lea
mov
bound
mov
add
imul
adcb
hlt
or
sbb
imul
cmp
xchg
or
lods
mov
mov
mov
lds
nop
hlt
lods
es
icebp
ret
into
pusha
cmpsl
out
push
sbb
outsl
sub
inc
mov
lret
mov
push
sbb
andb
xchg
fisubrl
inc
dec
dec
mov
xchg
xchg
push
lret
push
inc
lea
or
or
sbb
je
dec
adc
lret
dec
cs
or
pop
sahf
sub
dec
cs
lea
adc
pushf
xchg
dec
lcall
lret
xor
or
or
pop
and
in
scas
push
mov
sbb
les
test
imul
adc
fistpll
imul
jle
push
adc
fsts
xchg
sahf
push
mov
or
int3
or
dec
fistl
sbb
pop
ret
push
or
mov
inc
sub
cmpsl
jo
lret
adc
jmp
xor
jb
or
out
and
in
and
or
dec
or
lcall
es
sub
daa
add
loope
and
adc
or
cmp
or
cmpsl
repz
sub
sub
lret
and
shrl
sbb
fmuls
sbb
jmp
mov
push
push
or
mov
dec
pushf
and
pushf
sbb
sbb
push
es
mov
push
and
mov
xchg
jmp
cmpsl
or
pop
add
sbb
mov
int3
ds
cmp
jns
pop
ja
imul
adc
imul
push
dec
push
and
out
ss
push
xchg
jbe
or
sti
mov
fs
sbbb
popl
jae
mov
fs
add
sbb
and
xchg
and
lcall
hlt
push
out
movsb
sbb
or
decl
push
loope
push
or
inc
and
xlat
and
xor
push
push
shrl
lahf
insb
and
push
sbb
into
mov
icebp
adc
and
mov
or
adc
sbb
insb
sahf
lahf
or
daa
cmpsb
cmp
jae
mov
mov
mov
dec
ret
push
adc
adc
jne
mov
dec
push
imul
xchg
push
jg
mov
mov
mov
adc
shl
je
or
and
shl
push
mov
inc
sub
int
jge
xchg
mov
fs
push
sbb
scas
mov
push
pop
sub
lcall
push
adc
sub
or
mov
or
xchg
and
int
sbb
push
negb
dec
push
or
and
mov
or
sbb
negb
and
or
cmp
movsl
or
or
out
scas
mov
outsb
or
and
push
dec
jmp
push
xchg
fwait
dec
popf
cmp
mov
mov
pushf
adc
out
push
dec
aam
pop
pop
push
push
mov
mov
lcall
and
cmp
sub
das
fstps
js
or
lret
or
jae
push
imul
lock
and
dec
int3
imul
fdiv
adc
push
push
stos
fsub
pop
sub
mov
and
xchg
sbb
lcall
mov
daa
dec
fistpll
mov
fcmovnbe
and
adc
cmp
sub
rcl
mov
adc
push
sub
daa
unpckhps
iret
push
rorb
push
or
sbb
aad
movsb
inc
and
movups
out
pop
and
sbb
jecxz
sbb
mov
dec
push
xchg
pop
lahf
inc
pop
push
or
cwtl
xor
push
inc
cmpsl
dec
xlat
lods
sbb
mov
or
and
or
mov
and
lcall
es
loop
adc
dec
and
mov
dec
or
xchg
sub
xchg
fisubrs
cmpxchg8b
adc
and
mov
dec
adc
setae
push
lcall
adc
pop
clc
pushf
adc
dec
imul
cld
mov
stos
das
jnp
mov
inc
aas
into
rorl
or
test
or
mov
and
inc
cmp
mov
test
mov
push
sub
out
unpckhps
mov
pop
dec
adc
sub
enter
and
sub
push
dec
xor
dec
pop
jbe
shlb
cs
cmp
shrb
sbb
jne
xor
sub
es
push
dec
or
push
lret
mov
xor
imul
lods
push
mov
sbb
push
mov
mov
loope
lcall
or
fst
pushf
and
and
fldenv
rcll
or
leave
cmp
mov
xchg
arpl
shrl
movsb
scas
stos
xor
xorl
daa
or
popa
fbstp
pop
loop
sbb
dec
lret
mov
leave
nopl
cs
cmp
xor
sbb
ud2
dec
dec
loop
sahf
push
scas
lret
sbb
sahf
repnz
sbb
push
daa
inc
nop
imul
mov
and
mov
push
loope
nop
fldenv
mov
pushf
daa
inc
fisubrl
fstps
mov
xor
mov
fwait
imul
imul
scas
iret
push
jmp
outsb
sub
or
repz
sbb
rcrb
or
or
dec
adc
or
lods
push
cmp
mov
in
out
jmp
dec
push
or
aad
or
call
cmp
fstl
dec
adc
adc
mov
and
and
out
lea
sbb
mov
loopne
adc
and
dec
fwait
out
lcall
test
int
fdivrs
out
stos
cmc
mov
dec
bound
xchg
aad
jbe
xchg
mov
and
xchg
or
outsb
sbb
lcall
lcall
sub
adc
lods
pop
xchg
fcoml
loop
dec
xchg
cs
push
fdivr
pop
sub
or
mov
iret
inc
out
sbb
adc
jo
xchg
ror
enter
addb
push
sub
mov
ret
or
sub
pop
sub
or
bound
repz
dec
test
adc
adc
fstp
out
push
sbb
fstl
call
inc
addb
cs
aas
sbb
call
or
das
negl
sbb
idivl
and
testl
xchg
lcall
call
push
out
push
into
jmp
lock
sbb
cmp
push
loope
cs
or
sbb
xchg
lahf
push
pop
cs
and
aam
outsb
jl
push
sbb
cltd
or
mov
out
lahf
pop
push
and
and
sub
ud2
mov
push
inc
or
pusha
popa
xchg
push
adc
outsb
insb
fwait
cld
cmp
int
pop
or
push
cld
add
adc
or
sbb
aad
and
addr16
shrl
or
push
mov
sub
fisttpll
mov
cs
fstps
cmpsl
mov
mov
in
leave
push
lcall
lods
dec
push
push
sbb
sbb
mov
mov
push
and
inc
outsb
push
adc
in
mov
pop
push
in
sub
xor
and
push
sbb
lcall
mov
mov
mov
pop
cs
rclb
das
sub
or
cmp
or
sbb
or
pop
shr
sub
adc
xchg
leave
or
jae
movsb
adc
adc
xchg
rcl
cs
pop
dec
and
cmp
sbb
mov
in
adc
pushf
fwait
adc
lods
push
lcall
inc
dec
jge
xor
inc
pop
movsb
scas
cs
outsl
into
jg
pop
xor
rcl
or
lods
sbb
and
xchg
je
fistpll
insl
mov
insb
mov
sbb
inc
or
daa
lods
cli
cmpsb
fisttpll
mov
add
pusha
loop
leave
xchg
inc
lods
pushl
or
adc
push
ss
bswap
outsl
jge
cmpsb
pusha
sahf
xchg
dec
and
sub
push
mov
jns
or
fisttpl
sub
mov
cmpsb
hlt
dec
mov
push
and
or
fisttps
das
dec
js
push
adc
lret
xchg
cmc
dec
sbb
lea
xchg
out
lock
or
in
testl
movsl
push
pop
xchg
sbb
mov
xchg
fsubrl
pop
mov
and
mov
stos
push
cmpsb
int3
push
dec
mov
cmpsb
adc
or
cs
mov
sbb
sub
dec
dec
fists
dec
cmp
sbb
lret
sbb
xor
pop
or
fimuls
xor
sub
push
out
push
and
mov
xor
push
xchg
push
mov
adc
sub
sbb
mov
push
lahf
arpl
lods
sub
adc
adc
sub
jb
scas
cmpsl
inc
call
insl
push
and
ja
adc
mov
mov
xchg
dec
jb
pop
or
mov
mov
dec
xor
or
mov
or
cwtl
mov
mov
adc
cmp
push
arpl
and
push
lods
shrb
xchg
mov
rclb
xor
dec
cs
das
cmp
adc
sub
dec
mov
mov
int3
mov
sub
sbb
les
dec
adc
dec
ljmp
nop
and
or
test
mov
xchg
mov
or
in
fimull
lret
pop
sub
and
adc
sbb
push
fwait
sbb
addb
pop
cs
xchg
decl
sub
stos
dec
pop
adc
mov
das
pushf
ss
xchg
xor
xor
ljmp
lock
adc
sbb
mov
or
fidivrl
mov
mov
sub
pop
sub
mov
cmp
add
dec
push
or
call
int3
push
int3
adcb
cs
inc
daa
cmpsl
daa
ret
or
dec
insb
jmp
rcll
movsl
movups
push
and
cwtl
push
sbb
push
adc
mov
aam
cmp
push
push
mov
and
adc
cmpsb
xchg
mov
xor
mov
lds
inc
dec
imul
or
sbb
dec
insb
ficoml
int3
and
stos
unpckhps
pop
dec
lods
loope
arpl
pop
xor
fsubrl
lea
sbb
mov
imul
dec
sub
movsl
mov
adc
bndldx
mov
dec
imul
int3
mov
sub
or
adc
adc
mov
stos
xor
jb
jbe
movsl
xchg
pop
dec
mov
inc
daa
push
dec
pop
popf
jb
sbb
repnz
dec
lods
das
and
shrl
sbb
xor
or
bound
or
mov
lods
mov
sub
xor
stos
jno
jge
jne
mov
cmp
shrl
imul
orl
adc
pop
hlt
loop
and
dec
lods
pop
sub
out
popf
xor
add
pop
call
cmpsl
int3
movb
paddusw
sahf
jle
pop
jo
sbb
add
in
icebp
mov
scas
adc
inc
int3
cmc
or
xor
adc
call
rcll
lcall
jno
scas
testl
jno
cmp
add
call
std
xor
cmpsb
sbb
jb
jb
jb
inc
push
pop
cmpsl
mov
negb
in
aam
enter
vpackssdw
lcall
mov
lcall
xlat
bound
and
int3
gs
icebp
push
scas
sbb
pop
xchg
mov
dec
out
mov
or
pusha
push
or
inc
or
xchg
inc
pop
mov
mov
push
loope
out
loopne
ljmp
addr16
shll
imul
pop
xchg
xchg
aad
mov
in
rcrl
cltd
xlat
adc
lock
jno
stc
cld
test
sbb
std
test
mov
out
aaa
aaa
test
js
cmp
daa
push
lahf
push
xchg
sub
sub
repz
cs
stos
push
jae
pop
fadds
jbe
sub
lret
out
into
shll
and
inc
xlat
arpl
xor
test
or
add
jmp
leave
fdiv
pop
notb
mov
movsl
outsl
push
insl
xchg
push
xchg
and
cmp
jns
xchg
adc
stos
or
mov
data16
into
pushf
inc
imul
hlt
jp
inc
jb
rcl
pusha
in
cli
xor
shrl
sbb
shll
push
fcmovb
mov
pushl
pop
xchg
adc
pusha
fisttps
mov
test
lcall
mov
or
out
lret
inc
jnp
inc
and
or
loopne
push
lea
inc
xchg
lahf
or
push
sub
je
jae
mov
stos
add
xor
add
xchg
cmp
adc
jo
mov
xchg
sbb
popf
sarl
lock
cmp
sbb
pop
mov
mov
outsl
jns
shll
imul
push
call
cmp
js
jecxz
sbb
nop
in
dec
add
push
jbe
mov
scas
push
dec
ror
xchg
out
mov
mov
xor
mov
add
pushf
sbb
dec
pop
ja,pn
add
pushf
jns
movsl
and
cmp
pop
inc
cmpsl
mov
or
loopne
dec
mov
shll
insb
mov
es
ror
pushl
movw
pushf
dec
cmc
rol
test
shr
jmp
push
call
cmp
jg
pusha
lea
call
pusha
pushl
pushf
lea
jae
xchg
inc
mov
mov
mov
dec
jmp
push
call
aam
inc
rol
mov
mov
push
jmp
les
mov
fcompl
ja
sqrtps
adc
lcall
and
pop
out
daa
and
xchg
je
inc
push
in
jb
jg
push
jne
dec
cmpl
sub
mov
enter
imul
xor
jmp
imul
int3
ret
ret
iret
sub
pop
rep
jne
pop
xchg
loopne
add
inc
sub
mov
and
mov
enter
mov
sti
orl
scas
jb
jmp
out
adc
aam
xor
push
pop
push
lock
xor
add
mov
mov
js
stos
dec
jnp
mov
out
pop
test
adc
mov
or
orb
xchg
mov
and
xchg
mov
in
jb
leave
dec
lods
push
push
imul
xchg
and
xor
dec
repz
push
sbb
jne
dec
jbe
js
mov
or
push
imul
imul
aam
mov
mov
pop
mov
mov
xchg
xchg
mov
outsb
or
scas
daa
dec
test
xchg
sbb
mov
mov
cmp
cmpsb
hlt
out
iret
dec
cmc
cmp
hlt
int
shrb
xchg
shll
insl
lock
jp
push
mov
inc
push
call
cmp
lret
es
push
std
cmp
add
negb
in
call
push
ret
call
mov
sbb
jb
mov
dec
movsb
sub
push
add
insl
inc
adc
sbb
addr16
notb
lock
gs
inc
cmp
insl
daa
orl
xor
cmpl
lret
jge
sub
adc
shll
outsb
mov
pop
mov
loopne
loop
lret
jne
lret
out
dec
fwait
into
cs
fs
sbb
scas
hlt
dec
adc
sbb
daa
sahf
add
sub
jl
mov
jl
insb
add
mov
inc
cmpsb
cmp
xor
icebp
mov
inc
shll
jnp
xchg
ret
xor
mov
shl
out
pop
or
out
xchg
jle
and
dec
test
les
xchg
adc
ret
jnp
jmp
les
xor
rcl
xor
subb
mov
es
fimuls
repnz
lock
mov
push
pusha
in
ljmp
popa
stos
pop
aas
movsl
enter
mov
les
or
push
jge
sbb
dec
dec
das
cmpsl
outsl
xchg
mov
outsl
ret
repz
pop
out
ljmp
xchg
testl
jp
iret
push
movsb
scas
dec
jne
sbb
cmovb
push
xor
repz
lock
pop
enter
movsl
and
std
xchg
sub
lods
cltd
jnp
adc
fmul
jg
pop
or
call
xchg
add
mov
or
cmp
lea
ja
movsbw
shr
add
btc
shl
call
push
call
nop
xor
push
pop
lret
lds
mov
gs
cwtl
outsl
mov
lret
dec
lcall
add
mov
mov
in
pop
cmpsl
insl
mov
add
inc
mov
dec
mov
stos
faddp
cmp
stos
or
and
fldt
mov
jl
jbe
int
sarb
mov
dec
jae
mov
sbb
pop
inc
jno
cmp
mov
inc
imul
fwait
push
movsb
dec
jl
shll
jo
cwtl
repnz
sbb
mov
imul
adc
movsl
pop
cmpsl
popf
rorb
cmc
lret
sbb
sbb
mov
testl
out
outsb
mov
sub
jge
scas
xchg
loope
in
cmpsl
and
jp
or
adcl
outsl
xlat
cmp
test
sbbl
shll
jno
adc
lock
adc
or
repnz
bound
inc
cmpsl
xchg
orl
ror
mov
push
andb
xor
push
sub
std
cli
or
pop
adc
push
js
sbb
push
push
pop
repnz
in
cwtl
mov
cli
int3
add
rorb
lock
pushf
sub
pop
push
push
shr
mov
scas
adc
cwtl
mov
xor
push
outsl
mov
dec
aaa
mov
jo
mov
adc
rep
pop
push
rcrl
or
in
sub
pop
cld
lret
mov
jae
idivl
movsl
sbb
into
std
pop
sub
add
xor
rcr
xchg
les
test
dec
jns
call
aas
xor
mov
xor
ss
mov
aas
arpl
pop
mov
movsb
jge
xor
shll
jb
sbbb
call
mov
dec
call
jnp
inc
and
push
lods
and
call
mov
mov
pop
jns
xor
sub
loopne
adc
mov
inc
xchg
jno
loopne
hlt
out
lar
xlat
lock
push
pop
into
out
out
sub
xor
cmp
jecxz
repz
add
call
mov
add
filds
psubsw
movsb
or
test
mov
jge
mov
leave
testb
jno
cmpsb
fstps
mov
add
pop
inc
ret
cmp
or
adc
and
hlt
pushf
or
sti
clc
imul
sbb
pop
imul
inc
push
aad
clc
aaa
out
mov
cmpsl
cltd
adc
sub
xor
jle
jbe
aaa
dec
adc
aam
sub
fnstenv
into
ret
outsl
jno
ljmp
daa
incb
cmpsl
mov
pop
jg
dec
sbbl
lock
xchg
sub
pop
xchg
pop
imul
mov
arpl
int
inc
pop
pusha
add
ret
ror
das
mov
in
inc
shll
aas
lods
imul
cmp
cmp
mov
dec
mov
push
addr16
mov
mov
daa
int3
ror
lea
lahf
test
mov
fistpl
stos
sub
mov
in
insl
mov
mov
out
shrb
push
cmp
inc
jmp
push
shlb
jne
jge
dec
jnp
add
cli
orb
xchg
mov
das
adc
push
jbe
dec
jne
mov
mov
adc
sbb
in
xchg
push
cmpsb
in
arpl
adc
lcall
divb
dec
js
mov
je
mov
jle
dec
and
pushf
push
lea
jmp
push
call
leave
xchg
jnp
mov
std
jle
out
and
or
xchg
out
mov
stos
lahf
call
xchg
or
dec
xor
pop
out
jge
std
push
sub
jmp
mov
push
adc
mov
ljmp
sbb
mov
jle
adc
pop
xchg
test
inc
lret
in
or
bound
mov
movsl
push
or
pop
or
push
or
movsl
fcoms
or
imul
push
sbb
or
aad
loopne
cwtl
mov
lods
pop
and
jb
push
cmpsb
add
mov
xchg
or
pop
movsl
sub
and
xor
popa
sahf
or
and
out
not
add
lods
or
in
or
leave
and
sahf
jns
mov
mov
sbb
or
pop
mov
adc
lods
es
ljmp
pop
inc
in
lock
inc
shll
fcompl
xchg
add
pop
ud1
or
in
leave
cltd
and
adc
lcall
jae
inc
add
cmp
push
or
or
lds
pop
jge
cmpsb
fiaddl
inc
or
fwait
sbb
mov
sbb
loope
inc
rorl
xchg
in
or
imul
scas
or
ja
jo
test
sbb
outsb
mov
test
cld
pop
insb
push
mov
or
out
fistps
stos
aad
ljmp
cmp
and
mov
sbb
mov
fwait
gs
mov
add
fstps
cmp
or
daa
xor
xorb
dec
dec
lods
shll
mov
ss
enter
push
aam
test
mov
cmp
je
adc
fsubl
popf
mov
xorl
adc
push
insl
test
mov
lcall
sbb
or
cmc
mov
lods
cmp
pop
jl
rdtsc
imul
lret
add
xor
fistpl
xchg
loop
and
mov
fdivrl
rcll
fwait
and
das
cli
push
cmc
fdivrp
adc
or
cld
ds
test
adc
arpl
test
popf
movsb
addr16
and
btc
enter
dec
data16
dec
or
imul
pop
lret
or
mov
adc
add
adc
lahf
cld
orb
xor
push
sub
into
repnz
or
das
dec
dec
mov
mov
push
mov
stos
sub
inc
inc
scas
in
lcall
or
xchg
bswap
dec
jbe
dec
in
and
ret
fistps
xor
or
in
out
pushf
or
jge
and
sarb
pop
xchg
or
int
cmp
add
ljmp
mov
sbb
std
arpl
fcoml
sbb
push
ja
sti
and
mov
cmp
push
adc
lea
fs
sub
pop
xor
xor
add
lret
xlat
sti
xchg
dec
push
jp
ds
shlb
mov
lret
or
pop
cmp
or
shlb
sbbl
ja
repz
addb
fsubrl
xlat
addr16
outsb
shrl
or
iret
lods
xor
lcall
and
adc
pop
ja
or
clc
sub
or
xchg
je
fistps
adc
or
sub
sahf
fnsave
insb
add
leave
sbb
inc
xor
sbb
nop
jecxz
pop
adc
dec
jmp
xchg
cmp
popf
lret
jno
inc
jmp
or
sbb
inc
mov
push
mov
dec
stos
or
ja
adc
movsb
push
and
xor
jmp
hlt
daa
adc
in
imulb
mov
or
aas
jmp
cmp
push
or
push
pop
fmuls
es
and
fs
pop
adc
mov
add
and
or
or
or
sub
mov
xchg
cmp
in
or
or
mov
lret
push
jecxz
bound
adc
rcr
or
ficomps
sbb
ja
and
mov
clc
xchg
lods
push
cmp
jmp
rcrl
mov
test
imul
push
or
and
notb
push
ret
or
sbb
out
and
and
sbb
jge
sti
fisubrl
sub
adc
or
mov
test
inc
cmp
or
dec
cmp
lret
outsb
jp
es
ret
dec
shlb
in
push
push
or
shrb
push
push
dec
ss
sbb
repnz
inc
mov
or
stos
sti
mov
loopne
cltd
jle
inc
push
cs
adc
sub
sbb
cmp
xlat
sbb
lds
outsl
pop
mov
pop
or
pop
test
xor
push
frstor
or
push
xor
and
or
es
and
daa
or
push
test
inc
out
or
leave
stos
jne
jnp
lret
loopne
mov
bound
popa
lds
or
jmp
or
inc
cld
xor
mov
sbb
out
cmp
push
dec
sub
inc
lds
sub
fistpl
or
mov
pusha
inc
or
mov
or
pop
mov
adc
and
mov
cwtl
in
decl
mov
sub
sahf
jmp
out
movsl
push
lods
or
or
push
push
mov
inc
or
in
or
nop
mov
or
sub
mov
and
add
mov
popa
ret
adc
stc
fmuls
stos
mov
pop
push
adc
lcall
push
notb
insl
stos
and
pop
lret
in
push
ja
mov
pop
fimull
mov
mov
fmull
and
orb
and
shrb
push
jge
sub
icebp
xor
fstps
jb
dec
daa
xchg
xor
or
subb
dec
sub
ljmp
ficomps
adc
push
les
mov
cmp
or
xchg
or
mov
sti
shrl
or
jns
in
lea
stos
das
sub
lods
and
lods
sub
push
xchg
push
or
dec
lret
in
xchg
or
or
sbb
sub
mov
xchg
sbb
cmp
jp
lcall
xchg
sbb
cmp
jnp
fwait
adc
xchg
sbb
cmp
mov
cld
xchg
sbb
jge
popf
adc
xchg
jg
cmp
adc
cmp
dec
pusha
xchg
andb
add
and
dec
popa
xchg
andl
cmp
dec
bound
dec
loop
add
and
dec
arpl
dec
jecxz
add
and
inc
dec
fs
test
add
and
xchg
test
imul
dec
xchg
xor
cmp
dec
cmp
lahf
dec
rclb
cmpsl
mov
stos
xchg
lods
out
cmp
mov
xor
dec
pop
xchg
lahf
sarb
dec
test
dec
sub
adc
ss
adc
xchg
pop
mov
mov
adc
cmp
or
leave
dec
in
xchg
jo
cmp
adc
cmp
dec
mov
jecxz
cmpsb
mov
imul
in
cmp
dec
lock
shl
cmp
dec
cmp
aas
dec
and
in
mov
or
mov
inc
push
sub
js
xchg
push
sbb
iret
xchg
add
sub
or
clc
jb
pop
fdivrs
sbb
lret
aaa
xlat
xchg
push
rcll
adc
jbe
js
xor
dec
ljmp
mov
ljmp
jb
sbb
adc
jb
ss
sar
mov
jg
xor
fucomp
cwtl
add
pop
cmp
jo
je
sbb
icebp
and
mov
lret
add
adc
lcall
ds
ja
lahf
imulb
mov
imul
jae
aad
mov
cltd
xchg
mov
add
scas
cmp
xor
xlat
subl
cli
jb
add
xor
pushf
push
xlat
cmp
push
sbb
dec
mov
push
inc
add
cmp
hlt
pop
xor
pop
insl
in
jb
push
hlt
xlat
push
push
xor
adc
sub
rclb
sbbl
adc
push
push
sti
jbe
inc
test
xor
inc
mov
fsubs
push
xlat
ja
xor
and
shll
rolb
jae
aaa
xchg
insb
jmp
data16
repz
fwait
int3
sbb
scas
fists
ja
push
das
gs
xchg
pop
lcall
fwait
sarb
pop
fists
lahf
testb
rcpps
fs
loop
idivb
push
test
aas
cmp
in
pop
jbe
lock
pop
cmp
jle
test
xchg
xor
jle
scas
mov
int
xchg
xchg
movsb
lret
fnstsw
jo
jp
dec
repnz
inc
mov
adc
ficoms
ja
jae
or
aaa
fcomps
std
aam
jecxz
sahf
push
out
push
inc
pop
dec
repnz
xor
xchg
inc
push
fstl
mov
dec
dec
je
js
mov
mov
xchg
negl
mov
int3
cli
sub
jmp
adc
push
sub
xor
repz
rclb
xlat
mov
mov
mov
jo
mov
cmpsb
xchg
jg
imul
aas
and
js
mov
pop
push
inc
mov
or
sub
or
sub
stos
push
sbb
jns
mov
or
inc
sub
repz
scas
or
sub
xchg
cwtl
lcall
out
mov
xor
notb
lret
jae
pop
mov
sbb
xchg
mov
mov
and
dec
and
ds
cmc
sbb
push
push
xlat
jecxz,pn
lcall
pushf
imul
sub
xchg
adc
xor
push
jo
jbe
xor
repz
icebp
shrb
ss
leave
nop
mov
lea
andb
and
in
test
push
scas
sub
push
outsl
or
mov
lret
es
adc
adc
jge
jo
sbb
adc
push
xchg
jno
cmp
rorb
adc
push
sub
outsb
push
xor
sub
xchg
jo
lock
xor
jnp
xor
das
sbb
ucomiss
mov
adc
es
mov
sub
mov
cli
dec
push
lock
int
adc
xchg
sbb
nop
mov
add
stc
int
enter
dec
fnop
mov
or
aas
les
push
outsl
and
imul
or
pop
push
adc
lret
push
sub
dec
jb
xor
or
pop
mov
mov
fisubs
shl
push
jb
xor
cmc
mov
adc
insl
xor
lret
and
xchg
cmp
add
push
dec
pop
sub
sahf
mov
and
sbb
push
sub
xor
arpl
lods
sub
seto
outsl
adc
cmpsb
lods
xchg
jb
sbb
mov
es
ljmp
sub
xor
mov
in
mov
mov
cmp
sbb
icebp
adc
add
loope
repnz
sbb
lds
mov
or
dec
inc
and
add
cmp
sub
jecxz
and
ds
mov
or
fs
mov
jmp
sub
xor
les
push
and
gs
clc
fnstcw
pop
sub
inc
push
es
in
repnz
mov
mov
push
sbb
mov
dec
mov
das
test
fcoms
push
mov
push
cmc
mov
fwait
rcll
add
out
fwait
movsb
mov
lea
xchg
aaa
cwtl
push
divl
call
dec
jno
inc
jl
in
mov
movsl
sub
xchg
fs
mov
fwait
or
imul
in
inc
jae
repnz
xchg
sbb
ret
push
mov
repnz
jl
push
and
mov
sub
push
adc
mov
push
jmp
xchg
mov
in
push
sub
push
ja
mov
adc
mov
adc
dec
or
arpl
xor
xchg
inc
sbb
and
add
or
xchg
daa
push
iret
mov
or
cmp
jbe
xchg
ljmp
nopl
mov
push
add
sbb
and
mov
or
movsl
dec
sub
sbb
ror
mov
xchg
or
mov
ljmp
jle,pt
dec
mov
cli
adc
lea
scas
scas
xor
jecxz
stos
cmp
lcall
adc
mov
pop
rcll
xor
mov
mov
or
mov
mov
inc
jp
rcrl
jmp
pop
orl
cwtl
pop
xchg
divl
xlat
mov
push
fwait
sub
mov
mov
repz
jb
sbb
and
mov
or
jp
add
imulb
sti
or
mov
rol
pop
adc
push
push
cli
cmc
aad
bound
aas
or
adc
adc
or
xlat
sub
std
cmp
popf
or
ret
outsl
sub
das
adc
iret
mov
lret
inc
push
orb
inc
cs
push
jl
insl
cmp
loope
mov
and
xor
outsb
insb
inc
les
shll
and
push
ret
jo
movsl
lea
rcl
push
ss
dec
push
nop
and
shr
adc
sub
fcmovnu
stc
push
icebp
adc
mov
dec
dec
jb
push
xor
rclb
jb
pop
in
jecxz
nop
mov
lock
jbe
adc
lock
imul
sahf
or
loopne
and
test
fsubs
xor
je
lock
lret
arpl
test
jo
jb
mov
mov
arpl
dec
shr
mov
mov
cmp
xchg
enter
in
jecxz
adc
mov
pushf
xor
xchg
xchg
inc
stos
push
push
cltd
xor
rorb
ret
pusha
sub
and
adc
ljmp
test
test
add
iret
fisubs
jb
ss
adc
cmp
jns
je
imul
mov
filds
pop
add
and
inc
ret
aas
test
adc
loopne
push
bound
mov
loope
dec
adc
call
inc
dec
lret
imul
mov
popa
jle
loopne
lahf
shr
mov
add
sbb
insl
mov
scas
mov
mov
sbb
pushf
inc
inc
cmpsl
sub
fsubrl
cmp
dec
gs
xchg
sbbl
popf
mov
mov
std
sub
or
push
or
jle
ret
mov
or
pop
or
lahf
or
fisttps
or
and
add
mov
mov
orb
aaa
dec
fwait
daa
ror
xchg
insb
mov
pusha
inc
add
and
and
sub
inc
pop
fldcw
shlb
mov
mov
ljmp
jmp
inc
and
push
xchg
jno
xchg
es
inc
xchg
mov
jo
xchg
out
ficompl
jbe
jae
add
sbb
ret
dec
iret
pop
negb
adc
jbe
int
mov
fisubrl
js
inc
mov
and
jecxz
vmread
ds
mov
add
pop
adc
or
push
das
push
add
aaa
lret
ss
cwtl
sbb
jnp
lods
arpl
nop
lods
icebp
pop
ljmp
loope
divb
gs
push
lret
rcrl
and
sbb
pop
sbb
mov
push
aaa
ja
aas
push
lret
mov
push
shlb
rolb
add
addr16
dec
stos
dec
push
lcall
push
mov
dec
adc
stc
add
add
das
sub
pop
and
subl
cmp
dec
ljmp
and
cli
cmc
add
pusha
inc
addb
pop
bound
call
js
sub
mov
or
movsb
jle
dec
jmp
es
loop
pop
cmp
dec
jle,pt
or
jmp
cmpl
leave
andb
mov
jecxz
cli
xchg
dec
inc
and
push
or
leave
lret
test
gs
scas
pop
xchg
push
mov
shlb
int
cli
mov
out
push
push
add
ds
sbb
andl
or
push
ss
sub
inc
push
inc
adc
mov
xor
out
push
jmp
popl
insb
adc
dec
rorl
loopne
fs
mov
inc
inc
cli
inc
mov
mov
stos
lret
push
movsb
inc
movsb
inc
out
and
mov
sub
dec
pusha
and
aad
dec
jp
movsl
loope
pop
push
xchg
push
adc
sub
jmp
pop
lahf
imul
pushf
or
jg
rorb
add
test
psraw
inc
sbb
xchg
cmp
sbb
sub
add
lahf
mov
mov
or
sarb
lock
sarl
cmp
inc
mov
inc
sub
sub
loope
jbe
cmpsb
mov
lcall
lret
xchg
test
movsb
inc
add
mov
pop
mov
outsl
adc
push
cmpsl
test
ljmp
push
mov
movaps
pop
dec
fwait
push
scas
lds
scas
xchg
mov
mov
les
jp
xchg
cmc
push
xlat
cmp
adc
mov
push
lret
jo
mov
xchg
shll
mov
xor
xchg
xor
dec
adcl
jnp
popf
fcoml
sbb
popa
test
xlat
std
loopne
push
rorl
js
pop
scas
loop
mov
fmuls
and
dec
xchg
aaa
js
ja
loope
std
ja
adc
push
out
pop
rorl
sub
sarb
lock
movsb
test
mov
das
cmpsl
xchg
add
jg
push
stos
mov
xchg
iret
xchg
mov
dec
icebp
ljmp
push
jns
push
cmc
xchg
sbb
adc
ds
insb
icebp
jp
dec
das
iret
xor
add
or
loop
pop
adc
jo
push
cmc
js
push
or
pop
mov
pcmpeqd
mov
ds
cwtl
lea
testb
mov
xor
aaa
cwtl
cmp
or
pop
xor
mov
xlat
xchg
mov
xor
jg
xor
nop
push
adc
lds
lock
jb
icebp
mov
rclb
inc
imul
int3
stc
test
xchg
dec
xchg
loop
sti
jb
lcall
inc
xchg
adc
fmull
dec
push
stos
dec
sub
dec
adc
inc
dec
loope
scas
jae
and
push
std
stc
pop
sub
cmp
js
stos
or
jns
push
sub
mov
es
push
or
adc
je
mov
les
pop
les
cmpb
fstl
jmp
jg
stc
loopne
std
fwait
stc
decb
mov
decb
and
sbb
and
and
or
mov
mov
rorb
cmpsl
int3
xchg
mov
xchg
xchg
scas
mov
mov
lds
in
and
mov
push
movlps
or
sub
sub
push
sbb
pusha
outsb
call
mov
sub
xchg
cmp
sub
adc
movsl
inc
jnp
test
push
xchg
mov
cmp
sub
xor
lret
invd
adc
repnz
push
sub
iret
nop
ret
mov
push
or
pop
inc
test
jg
cmp
ds
sbb
inc
pop
sub
cmp
mov
mov
lods
shr
rclb
iret
pop
add
in
pop
outsb
stos
imul
dec
sub
je
int3
arpl
arpl
mov
hlt
cmp
sbb
sub
je
orl
cmp
add
push
rcll
push
pop
out
mov
call
add
lret
sbb
lahf
mov
xor
cs
dec
shlb
sub
sub
rcrb
push
jge
sub
sub
sub
and
ss
mov
xor
pop
sub
inc
xchg
loope
das
inc
cmp
sub
shufps
hlt
into
dec
xchg
int3
jo
push
addr16
call
xchg
push
test
mov
add
pop
xchg
fdivl
push
mov
cmp
inc
out
push
ret
push
xchg
dec
hlt
cwtl
inc
frstor
pop
sbb
imul
mov
insb
popf
push
sbb
shlb
and
addr16
andb
lahf
in
sub
push
push
lea
jg
mov
imul
and
lea
or
or
loopne
repz
cmp
and
mov
adc
vshufps
fs
mov
adc
add
int
aam
fnstcw
inc
mov
push
lret
aaa
loope
dec
in
xor
cmpsl
sub
jae
mov
scas
ljmp
cmpsl
testl
cmp
adc
jae
js
or
dec
js
aas
jno
js
movlps
jae
fnstcw
pop
dec
test
rcrb
nop
or
shlb
inc
or
nop
or
sbb
lods
pop
shlb
dec
ds
pop
xchg
push
adc
inc
fwait
push
mov
push
xor
push
dec
and
add
mov
sub
sbb
pop
sbb
xchg
mov
mov
movsl
adc
xor
or
subb
call
adc
adc
sub
arpl
adc
fmull
sarl
fmul
leave
rcrl
into
sub
pop
and
sbb
xchg
sbb
cmp
adc
dec
add
mov
xor
dec
lret
push
and
adc
cmp
dec
jmp
or
repnz
sub
inc
push
cmpsl
dec
mov
sbb
mov
mov
dec
dec
in
dec
stos
xchg
adc
pop
push
adc
jp
or
mov
lcall
test
sbb
xchg
adc
iret
imul
sbb
push
sbb
xlat
into
and
sti
sub
rorb
outsb
inc
data16
or
adc
fwait
aam
adc
or
adc
cmp
jae
mov
int
cs
adc
scas
and
cmp
outsl
cmp
sub
xor
sti
sub
or
sbb
es
sbb
fcoms
adc
sub
jb
inc
push
cltd
dec
mov
jns
movsl
push
sub
sbb
jb
inc
sbb
outsb
sbb
popf
sbb
sub
je
and
sbb
adc
iret
adc
cmp
mov
sub
mov
bound
sahf
mov
cltd
in
sbb
cmp
push
or
sbb
dec
int
and
jecxz
pop
int3
dec
push
adc
fisttpll
inc
sbb
lods
inc
fimuls
or
cmpsb
adc
lods
decb
pop
push
and
add
ret
adc
pushf
sbb
dec
or
sbb
fimuls
fisttps
aad
and
sub
aas
cli
loop
xor
dec
sbb
or
inc
and
sub
or
push
mov
shrl
push
fisttps
push
adc
mov
dec
sbb
xor
and
or
mov
test
subl
and
sti
and
adc
add
or
inc
dec
adc
or
mov
adc
dec
sub
mov
mov
je
adc
add
push
adc
cmpsl
repz
or
add
jmp
dec
sbb
jge
ds
cmp
sti
bound
jb
jne
sub
in
insb
sub
mov
cmpsb
sub
data16
bound
add
push
iret
xchg
sbb
push
das
lods
adc
sub
and
and
loop
bound
xchg
and
mov
subb
xor
and
add
or
loop
jb
dec
adc
lock
out
and
sbb
sub
cmpsb
sahf
or
sti
and
and
jle
inc
push
out
lcall
rorl
dec
sbb
add
sbb
fnstenv
call
adc
out
adc
imul
std
sub
sbb
cs
sub
addr16
bound
addr16
daa
test
push
jne
lcall
cwtl
es
fcoml
push
push
inc
push
sub
cmpsb
test
mov
or
xchg
adc
sub
jae
jecxz
mov
or
mov
out
mov
sti
adc
and
sbb
push
sbb
or
lret
sbb
sbb
test
adc
and
aad
es
cmp
rcrl
pop
jae
cwtl
es
imull
sbb
imul
and
and
jle
adc
xchg
cmp
jmp
adc
rcrl
push
push
inc
and
in
dec
and
cltd
push
sbb
adc
dec
jb
pusha
and
sbb
sbb
sbb
or
adc
sub
icebp
daa
lods
adc
adc
or
push
push
push
mov
or
adc
pop
sub
sbb
adc
sbb
cwtl
mov
sub
pop
mov
pop
sbb
mov
sub
xorl
ret
and
dec
dec
loop
repz
data16
or
jno
sub
xor
divl
push
adcb
sub
repnz
jmp
mov
xor
push
xchg
dec
jmp
sub
jbe
pop
or
or
or
xor
ret
adc
scas
mov
mov
sub
lcall
cltd
stos
inc
or
sub
or
shrl
xchg
mov
and
or
push
push
and
sbb
ja
or
fsubrs
aam
xor
xlat
sub
sub
aaa
adc
es
cli
mov
push
fstl
adc
lahf
push
loop
sbb
push
pop
sub
outsl
lcall
ds
iret
mov
xor
mov
and
les
mov
sbb
lock
out
es
mov
adc
lods
push
bound
jnp
lcall
adc
adc
and
lcall
or
sbb
or
rorl
pop
or
cmp
lcall
in
fnstenv
adc
push
cmp
call
das
pop
push
es
mov
inc
adc
mov
in
push
and
xchg
or
mov
or
loop
popa
adc
mov
cs
imul
push
sub
adc
sbb
xchg
cmp
pop
mov
xchg
push
das
push
dec
lahf
and
test
sub
sbb
xchg
and
sbb
sbb
sbb
sub
adc
xchg
ds
or
out
aam
adc
out
sub
or
pusha
sub
sub
dec
and
dec
mov
xchg
lea
adc
push
sti
cmp
or
add
loopne
aad
dec
sub
inc
outsb
sub
and
and
dec
notb
push
sbb
inc
daa
and
cld
pop
fwait
adc
dec
or
sahf
out
mov
sbb
ret
cmp
mov
jecxz
add
adc
adc
pop
or
mov
es
mov
sub
dec
dec
bound
decl
or
bound
add
cmp
mov
adc
xchg
shrb
sub
les
mov
leave
fldenv
adc
call
scas
mov
sbb
inc
sbb
mov
push
push
test
xor
adc
movsb
and
xlat
sbb
adc
and
leave
and
push
dec
jno
sbb
jmp
sbb
push
push
stos
push
adc
les
jecxz
mov
cmpsl
push
add
push
nop
adc
test
sub
adc
push
cmpsl
and
sbb
or
sub
push
and
leave
xchg
or
or
mov
or
mov
and
fimuls
sbb
mov
insb
push
push
ret
imul
imul
nop
imul
sbb
lret
push
jmp
or
int3
sbb
dec
jl
rsqrtps
fisttpl
outsl
pusha
and
popa
icebp
adc
or
xor
adc
or
adc
push
push
sbb
push
sbb
xchg
mov
and
dec
or
adc
adc
sbb
cld
daa
stos
adc
push
adc
and
push
cli
sti
mov
push
push
sbb
lock
jnp
push
stos
sub
fwait
adc
sbb
inc
push
bound
in
jle
push
push
leave
push
and
cmpsl
or
mov
pop
dec
and
test
push
or
test
mov
imul
mov
adc
push
aad
dec
adc
iret
lcall
fdivl
sahf
or
mov
or
dec
mov
dec
pop
xor
mov
repz
das
push
notb
push
and
repnz
cmc
sub
inc
push
outsb
push
inc
es
mov
push
or
and
xchg
lds
sbb
adc
cli
pusha
sbb
sbb
adc
sbb
push
daa
or
mov
out
dec
push
push
inc
dec
push
mov
adc
ja
ret
sub
cs
mov
mov
mulb
xchg
cmp
adc
adc
and
cld
and
push
outsb
cmp
mov
and
bndldx
aas
and
mov
jbe
dec
mov
mov
sbb
aad
in
cmp
cwtl
mov
sbb
popa
cmp
in
push
adc
mov
xor
jae
dec
roll
adc
repz
push
or
mov
push
sbb
and
sbb
iret
cmp
and
adc
adc
sahf
cmp
lret
dec
xchg
inc
lea
cli
cmp
cwtl
and
cs
cmpsb
xchg
mov
sbb
push
adc
adc
jnp
clc
or
add
lcall
popa
mov
adc
cmpsl
push
and
inc
pop
cmp
lea
cmp
fwait
add
int3
sti
mov
dec
aam
push
xor
es
sbb
xor
inc
lock
ljmp
mov
jae
inc
jno
hlt
arpl
inc
lret
add
cmpsl
fstl
add
out
sbb
aam
int
outsb
sbb
jns
fcomip
inc
pop
sbb
xor
sbb
sbb
sbb
das
and
xchg
mov
sbb
pop
mov
or
test
cmc
popa
push
sbb
push
push
or
and
mov
arpl
xchg
mov
and
data16
clc
rcrl
and
pop
jecxz
lcall
gs
orl
and
inc
mov
jno
xchg
inc
sub
adc
arpl
sbb
repnz
push
jecxz
arpl
ds
sub
push
or
mov
adc
mov
aam
and
rcll
adc
mov
and
ja
sbb
mov
dec
fs
daa
aaa
iret
jno
in
sbb
fldenv
or
push
fistps
jb
out
and
loope
push
daa
cld
inc
popf
mov
jnp
mulb
push
sbb
in
or
dec
cltd
pop
mov
jo
inc
sbb
cmp
push
outsb
cs
stos
sbb
push
or
adc
jp
outsb
adc
incb
sbb
and
hlt
or
test
loop
es
sub
mov
inc
lock
and
jmp
mov
es
xor
loope
jb
nop
sbb
sbb
adc
aas
and
fmuls
sbb
je
mov
jae
push
adc
cwtl
iret
sbb
dec
sub
test
repnz
cmp
cs
setb
das
cmp
insl
mov
mov
scas
lods
mov
dec
js
adc
xor
scas
adc
sahf
cmp
mov
push
cmp
dec
nop
push
scas
and
out
jne
sub
mov
rclb
out
cmp
dec
rcll
call
dec
push
mov
sbb
cs
push
or
sub
dec
inc
mov
adc
xchg
jmp
dec
sub
mov
lahf
adc
adc
sub
push
jle
pop
sub
lea
jns
js
pop
and
mov
adc
xchg
or
mov
push
or
add
test
or
jno
popa
jb
mov
xchg
and
or
out
lock
insl
es
movzwl
lea
dec
fwait
sbb
push
int
icebp
pop
push
adc
xor
and
mov
cmp
push
test
pop
sub
pop
push
xchg
and
aam
or
and
mov
subl
inc
and
mov
inc
or
adc
mov
xorb
add
and
fwait
xchg
mov
cmpb
add
push
or
or
cmpsl
lea
test
pop
in
add
adc
xchg
popf
xchg
jle
jbe
je
idiv
cmc
or
and
sub
cmc
andl
sbb
and
or
jae
jns
cli
repnz
or
mov
out
push
in
add
pop
sbb
pushf
xchg
jg
jge
or
idiv
hlt
dec
bound
or
jecxz
jmp
or
push
pusha
pop
or
shl
fnstcw
xor
or
dec
fs
out
in
inc
sub
or
push
pop
push
or
xlat
fst
ds
or
arpl
or
loop
call
or
push
popa
pop
or
shl
fdivrs
xor
or
addr16
gs
out
in
inc
sub
lods
les
pop
push
or
aas
aaa
cmp
mov
adc
movsb
jnp
icebp
mov
aad
cmpsl
cmp
mov
push
and
lock
pop
sbb
cmp
sub
and
sbb
or
push
sbbb
mov
xor
in
das
sub
cmp
dec
sbb
sub
push
bound
mov
inc
adc
sub
push
stos
xchg
push
es
sbb
and
sbb
int
adc
push
iret
lods
sbb
adc
or
sbb
cli
cmpsb
and
and
in
aad
ss
aam
and
and
mov
sub
rolb
mov
adc
and
cmp
jecxz
push
mov
adc
and
sub
cwtl
stos
push
push
adc
inc
inc
sub
push
or
rolb
data16
and
cmp
push
in
insb
or
rcrl
sbb
sub
push
jecxz
outsb
mov
outsb
and
sub
dec
adc
sbb
es
lcall
daa
and
lds
xchg
stos
lds
insb
adc
and
cmp
sub
xor
pop
sbb
sub
adc
push
lahf
sub
lds
adc
xor
pop
sub
aam
or
ss
or
pusha
faddl
popa
dec
or
loopne
adc
nop
lods
ljmp
sub
jns
add
orl
mov
call
popa
or
mov
push
sbb
scas
dec
iret
xchg
insb
xor
hlt
sbb
daa
rcrl
nopl
sub
or
cwtl
in
icebp
call
xchg
mov
jbe
js
xor
adc
add
dec
aaa
movsb
jge
mov
sbb
pop
rcpps
daa
and
xchg
dec
stos
ss
lret
mov
adc
adc
adc
inc
call
xor
cmpsb
mov
mov
or
mov
sti
mov
pop
sbb
outsb
mov
pop
je
pushf
mov
cmp
paddd
and
sbb
pushf
sbb
or
or
lahf
pushf
pop
sub
sub
sbb
dec
je
xchg
jl
inc
cmp
dec
leave
into
lret
xor
bound
xchg
sbb
sbb
repnz
xchg
aaa
xchg
add
fistl
popl
sysexit
xchg
xor
adc
pop
decb
bound
cli
enter
ud2
sbb
cmovb
cwtl
push
inc
cmp
cmp
sbb
and
and
sub
push
js
or
rcrb
mov
add
aas
daa
int3
adc
mov
sub
adc
adc
cmp
push
xor
inc
das
arpl
setns
das
aaa
mov
push
and
sbb
and
jbe
push
notb
push
mov
or
add
push
mov
sbb
inc
push
mov
dec
add
or
sub
dec
cmp
rcll
scas
jbe
xchg
pop
cmp
sub
xchg
dec
dec
dec
mov
aam
shrb
pop
and
push
cmp
dec
jg
xchg
sbb
mov
and
mov
xchg
add
adc
dec
jbe
std
aaa
stc
sub
dec
aaa
outsb
je
stc
sub
dec
sti
imul
push
mov
adc
mulb
cmp
inc
mov
or
aaa
sti
push
push
rorb
mov
xchg
pop
xor
popf
outsb
push
sub
jb
add
aaa
inc
cmp
idivb
or
pop
jne
inc
daa
clc
in
insb
mov
xchg
add
mov
cld
and
mov
cmp
outsl
or
mov
adc
xchg
xchg
insb
idivl
hlt
jne
xor
cmp
jbe
mov
pop
cmpsb
roll
mov
iret
adc
popf
add
inc
mov
shrl
mov
fcomps
lds
adc
or
pop
adc
adcb
sub
mov
xchg
movsl
or
cmp
xchg
setp
cmp
enter
repnz
jb
jo
adc
xchg
pop
test
decb
nop
dec
shr
and
jb
test
out
or
or
jo
imul
sub
insl
cmp
lods
daa
pop
mov
fscale
mov
out
inc
inc
jne
dec
lret
iret
cli
pop
push
mov
dec
sub
jo
sbb
adc
dec
in
push
mov
bnd
dec
cmp
outsb
dec
cmpsb
out
adc
sbb
add
xlat
in
and
sub
mov
mov
sbb
int3
mov
sub
xor
sbb
xchg
xchg
mov
shll
jo
loopne
dec
push
js
repz
dec
ss
xchg
push
ss
out
push
mov
bound
stos
repz
mov
mov
stos
adc
push
push
out
pop
in
call
js
xchg
ss
or
push
test
adc
xchg
ret
pushf
imul
hlt
jns
data16
mov
scas
mov
dec
in
jbe
sub
add
adc
xlat
pop
xchg
pmaddwd
data16
fisubl
cmpsl
pop
sbb
lahf
mov
mov
fs
fsubl
popf
lcall
xchg
push
scas
repz
mov
cmp
rorb
mov
xor
jb
inc
sub
js
sbb
data16
xchg
xchg
jbe
xor
sbb
mov
sti
fisttps
mov
bound
fisubrl
adc
daa
aad
adc
xor
adc
mov
sbb
xor
push
pop
adc
das
mov
push
dec
pop
jne
adc
cltd
shll
pop
push
dec
icebp
enter
and
pop
arpl
icebp
popf
lcall
xchg
mov
jb
pop
add
lea
sub
mov
adc
add
dec
adc
push
and
and
mov
and
fidivl
jle
push
cld
cli
ljmp
mov
sbb
inc
lret
sbb
mov
pop
cmp
dec
cmp
xor
popf
mov
out
dec
ret
dec
scas
pop
dec
pop
in
cmp
cs
sbb
jnp
or
or
fldt
addr16
sbb
cld
adc
lahf
or
xor
sbb
setnp
sub
and
and
loope
loop
aaa
push
aas
cmp
xor
lret
push
pop
cmpsb
lret
sub
lretw
mov
lret
out
or
inc
aas
mov
sub
je
xchg
arpl
sub
or
pop
cmp
sbb
push
mov
aas
sub
stc
adc
out
sbb
mov
sbb
sbb
pop
dec
and
push
insb
and
add
sbb
pop
out
sbb
xor
mov
clc
js
sbb
das
imul
ljmp
xor
es
mov
fsubrs
out
cmp
je
sub
mov
and
jge
adc
dec
fstps
sbb
popf
mov
imul
push
mov
rcrb
rcrb
repz
or
std
dec
daa
fstpt
mov
outsb
sti
push
cmovle
popf
adc
mov
and
and
add
xchg
cmp
cs
sub
mov
mov
dec
sbb
mov
xchg
pop
pop
and
push
adc
and
xchg
daa
mov
clc
mov
adc
xchg
dec
dec
enter
pop
dec
sub
mov
les
adc
sub
or
cs
fdivrl
inc
fs
std
cld
sub
aaa
fsubs
cmp
in
and
ret
adc
dec
adc
pop
ss
xchg
push
pcmpgtd
outsl
fwait
cmp
mov
fs
testb
or
dec
mov
xchg
cmp
jle
lret
dec
andb
daa
pop
cmp
adc
or
mov
rcrl
adc
xchg
ds
pop
or
mov
cld
cmp
dec
xchg
in
mov
sbb
sbb
sbb
pop
xchg
push
fsts
lret
jae
sbb
loop
and
xor
mov
push
scas
and
stc
xlat
loopne
sbb
cmp
and
push
jo
mov
sbb
shl
imul
repz
xchg
sub
xlat
pop
or
sbb
das
sbb
repnz
lods
mov
xlat
mov
pop
fsubl
fimull
jle
xor
inc
jne
sbb
sbb
ds
insl
scas
jbe
add
mov
es
ja
popf
push
mov
test
jb
insl
adc
insb
imul
test
sbb
mov
mov
ds
mov
cli
adc
sub
imul
mov
and
inc
cmp
ret
aaa
sbb
clc
adcl
xchg
lock
out
lods
mov
dec
push
push
mov
stos
add
sbb
jo
lret
and
cmpsl
fwait
adcl
sub
repz
out
js
xchg
dec
push
jo
fstps
xor
cltd
sbb
loopne
xchg
xchg
dec
mov
and
adc
cmp
and
movsl
adc
sbb
and
in
in
cmpsb
pop
xchg
cmpb
push
arpl
in
jo
fistl
xchg
or
jb
xchg
mov
and
es
mov
pop
or
adc
sbb
shrl
lcall
jo
into
adc
xchg
xchg
div
and
push
mov
push
mov
pop
fimuls
jae
or
xor
fcoml
pushf
add
aam
xchg
in
and
or
fdivs
jns
pop
test
cmp
js
mov
xchg
push
cmp
in
rorb
inc
pop
pushf
mov
pop
cwtl
cs
or
pushf
mov
mov
cli
sbb
int
lods
push
sbb
scas
mov
int
xchg
push
into
stos
jl
adc
popf
add
xchg
push
push
mov
sub
and
jns
and
xchg
adc
or
xor
push
xlat
and
test
fmuls
movsb
imul
enter
xor
push
inc
xchg
dec
into
mov
xlat
mov
xor
test
xchg
scas
jbe
and
mov
mov
sarl
xor
adc
adc
xchg
cmp
xchg
mov
or
nop
push
adc
push
xchg
pop
shl
dec
fwait
xchg
pop
into
js
mov
hlt
jle
imul
sub
je
or
xor
mov
or
push
jae
popf
push
out
sbb
adc
popa
popf
cmc
xor
xchg
repz
xor
xor
add
js
xchg
test
add
add
lret
and
pop
mov
push
mov
pushf
shlb
lret
stos
das
pushf
mov
jmp
mov
dec
dec
push
rclb
push
adc
ss
xor
lahf
imul
sub
fcoms
adc
or
cmp
mov
jne
pop
mov
ss
test
or
aaa
scas
xor
push
adc
xchg
ja
cs
sbb
mov
pop
enter
dec
leave
ds
setl
aam
mov
out
pusha
ljmp
ret
cmp
inc
sbb
sti
cs
dec
loope
push
and
ret
fistpl
push
pop
pop
daa
pop
dec
mov
in
out
mov
mov
dec
jbe
cmp
jne
sbb
movsl
popa
xor
mov
xchg
pop
mov
sub
add
pop
push
push
enter
adc
aas
xor
mov
push
pop
aam
or
push
jp
adc
dec
leave
mov
push
xchg
ss
bound
jp
stc
int3
jno
jle
mov
iret
adc
fcmovne
push
add
xlat
mov
insb
adc
mov
mov
aam
out
push
inc
mov
lds
fs
mov
push
fldcw
adc
push
sub
fcomi
sbb
cmp
pop
testl
ljmp
xchg
imul
mov
pop
cs
gs
inc
rcll
fwait
push
pop
repz
orl
arpl
or
adc
xlat
sub
sahf
inc
movsl
sbb
and
pop
cmp
xchg
mov
leave
xchg
xchg
xor
cmp
pop
adc
mov
repnz
pop
daa
imul
sbb
pop
rorb
orl
nop
or
push
out
xchg
gs
nop
pop
sbb
js
mov
divb
push
adc
sbb
mov
pop
pop
adc
inc
sub
fwait
js
sbb
add
pop
xchg
mov
or
dec
cwtl
or
push
mov
mov
push
pshufw
sbb
sub
jecxz
das
out
cmp
mov
or
jns
inc
or
xchg
sub
sbb
lret
bound
or
dec
cmp
or
ljmp
or
push
or
mov
or
push
pop
scas
push
dec
sbb
push
mov
adcl
sahf
adc
mov
das
rclb
pop
ficoms
mov
lods
bsr
repz
or
add
pushf
dec
scas
sub
pushf
iret
scas
dec
and
pushf
pop
scas
mov
cmp
std
push
lret
mov
adcl
xchg
push
test
imul
or
ret
jle
mov
out
cmc
aas
inc
cld
ds
in
dec
lahf
aam
imul
sbb
adc
inc
adc
pop
sub
lret
outsb
xor
xor
xchg
or
adc
shrb
xchg
pop
je
xor
or
outsb
stc
ljmp
dec
sub
add
in
pop
int
inc
dec
jne
outsl
out
or
lods
cltd
mov
dec
sub
cmpsb
sbb
sub
and
sbb
mov
pop
sub
dec
adc
in
jnp
pop
and
push
mov
mov
sub
jle
dec
xchg
push
mov
adc
daa
dec
cmp
in
adc
pop
or
sahf
pushw
and
cmp
and
mov
sahf
xchg
jp
mov
sub
adc
and
das
push
mov
xor
in
push
sub
test
xchg
and
shlb
xchg
pop
mov
adc
movsbl
sub
mov
mov
adc
adc
sbb
pop
test
xchg
and
cmp
in
adc
mov
fisubs
cmpsb
rcrl
mov
ficoms
movsl
aam
adc
xchg
cwtl
fimuls
movsb
aam
adc
xchg
das
mov
cs
xchg
outsb
push
and
das
adc
sbb
cmp
dec
jo
inc
sbb
jmp
sbb
sub
rcrb
mov
cmp
xchg
pushw
adc
lods
add
and
and
negb
ret
or
mov
repz
sub
xchg
outsl
aas
popa
and
and
or
cmp
push
and
xchg
das
sbb
pop
mov
mov
mov
dec
xchg
and
or
dec
or
or
pop
sbb
das
push
mov
pop
and
sti
push
xchg
je
mov
sbb
and
cmp
adc
or
cmp
mov
rorb
pop
jg
jle
pop
xchg
mov
mov
and
push
jg
daa
outsl
and
xchg
mov
mov
adc
shrb
dec
or
fimuls
ret
xor
ja
sub
sbb
xchg
sbb
mov
cmpsb
sti
pop
lcall
pop
xchg
mov
mov
adc
outsb
or
push
xchg
je
mov
sbb
imul
mov
sbb
and
dec
xchg
and
mov
icebp
push
dec
sub
sti
push
xchg
je
mov
aad
rorl
outsl
fildll
cmp
jne
adc
adc
sbb
dec
xchg
and
imul
std
or
push
ljmp
fildll
or
je
mov
sbb
push
pop
sbb
adc
mov
mov
outsb
and
xchg
mov
mov
in
sbb
or
add
push
and
xchg
adc
daa
repnz
adc
pop
outsl
sbb
xchg
mov
mov
packuswb
or
je
xor
xchg
and
mov
add
add
bound
mov
push
pusha
sub
test
xchg
out
rclb
sbb
mov
mov
sub
shrl
xchg
fimuls
pusha
rorb
push
fimull
and
repnz
adc
stos
xchg
sbb
and
mov
je
mov
push
xchg
or
cmp
mov
xor
push
test
xchg
sbb
dec
adcb
and
and
mov
lcall
mov
sbb
mov
adc
sbb
and
xchg
pusha
push
loopne
lcall
das
and
xor
int
xchg
loop
mov
sbb
lods
adc
mov
ja
popf
cmp
cmp
ljmp
testl
ss
mov
cmp
jmp
adc
and
mov
sbb
movaps
mov
or
mov
pop
adc
push
xor
daa
mov
pop
pop
and
or
sbb
add
dec
cmpsl
outsb
jg
push
movq
add
cmp
xchg
adc
pop
sbb
in
adc
adc
xchg
sub
dec
jae
sbb
pop
nop
and
and
dec
movsl
je
gs
pusha
into
or
lea
and
es
punpcklbw
or
cmp
and
rcrb
or
xchg
movlps
data16
rclb
adc
mov
adc
aam
or
lret
cmp
push
sbb
dec
inc
lcall
ret
sbb
cmpsb
imul
in
or
int
outsb
int
outsb
int
outsb
int
outsb
mov
mov
push
adc
or
fdivrs
dec
cmp
movsl
push
push
mov
in
and
sbb
jb
and
in
sub
mov
inc
subl
mov
push
fbstp
pop
adc
dec
or
mov
and
xchg
mov
mov
test
cmp
dec
adc
dec
in
inc
dec
dec
out
xor
scas
pushf
adc
xor
insl
pop
push
adc
sbb
das
sbb
cmp
outsb
sbb
pop
pop
ljmp
xchg
and
or
das
add
arpl
sbb
pop
shl
or
popf
adc
adc
or
and
or
scas
aad
int3
sbb
sbb
push
mov
ljmp
insl
and
lret
loope
sbb
and
adc
fimuls
in
mov
adc
adc
mov
hlt
or
loope
cs
jge
and
and
rorb
adc
or
pop
cmp
adc
inc
or
arpl
xlat
cmp
cmp
jle
dec
jg
push
dec
outsb
and
adc
push
and
and
in
sub
or
int
outsb
mov
or
push
adc
pop
adc
jne
imull
cmp
outsb
sbb
sbb
sbb
dec
cmp
xchg
or
push
sbb
and
bound
pusha
lods
bound
and
or
add
cmovb
pop
mov
sbb
push
and
push
dec
sub
and
lods
bound
inc
or
bound
sbb
sbb
shlb
andb
loopne
sbb
inc
jge
int
out
cmp
stos
das
add
cmp
repz
pop
adc
or
adc
shlb
push
ficoml
je
or
cmp
pop
data16
cmp
lret
adc
insl
pop
sbb
mov
pop
sbb
ficoml
je
pop
arpl
adc
repnz
daa
pushf
mov
jmp
inc
pop
in
data16
xor
adc
add
add
sbb
stc
push
push
mov
movd
adc
dec
sub
mov
cmp
lock
punpcklbw
lock
cmp
insl
and
cmp
insl
and
jns
ret
sbb
adc
cmp
movsl
data16
push
and
push
or
xor
xor
and
sub
add
insl
mov
sbb
daa
mov
adc
adc
inc
or
fimuls
repnz
outsb
pop
pushf
sbb
add
mov
inc
adc
cmpsb
sbb
ja
das
and
idivl
and
xchg
push
mov
sub
sbb
lock
and
jg
adc
dec
or
adc
das
push
and
ret
movq
sbb
adc
and
cmpsb
and
sbb
movsb
dec
jbe
retw
sub
push
xchg
jmp
fwait
pop
dec
dec
fmuls
xchg
psrld
rclb
sub
mov
adc
xchg
cltd
jmp
pop
in
sbb
xchg
fimuls
dec
insb
mov
mov
dec
lods
xchg
in
cmp
adc
cmp
dec
dec
mov
dec
adc
int
xchg
xchg
in
push
pop
pushf
and
and
sbb
fwait
sbb
movsl
je
cmovle
das
jge
mov
or
subl
jbe
mov
aam
jbe
mov
sbb
popf
mov
and
movsb
mov
sub
mov
cmovs
dec
or
dec
or
dec
or
movsl
shlb
das
fimuls
cmp
push
sbb
sub
mov
adc
and
mov
sub
out
mov
loope
daa
repz
adc
repz
sbbl
sbb
and
or
addl
out
bndldx
or
cmp
add
insb
adc
push
pop
daa
mov
outsl
mov
sbb
xlat
das
and
xchg
adc
cs
sbb
sub
loope
or
mov
dec
push
mov
jnp
sbb
ret
mov
in
out
sbb
jecxz
jecxz
repnz
fimull
fistpl
or
int3
outsb
int
outsb
int
outsb
int
into
and
cmp
adc
idiv
jnp
or
xor
data16
data16
jae
adc
lds
dec
dec
daa
mov
cmp
dec
mov
push
sbb
cmp
femms
jecxz
push
sbb
dec
arpl
sub
jecxz
adc
add
int3
inc
sbb
adc
jecxz
daa
adc
or
inc
xor
movsb
lea
pop
shl
or
cmp
js
pop
pmulhuw
outsb
int
outsb
mov
or
xchg
xchg
push
jnp
outsl
sbb
bnd
ds
push
fimuls
je
cmovle
xchg
lret
movsb
adc
xchg
sub
xchg
sbb
shrl
inc
adc
push
or
daa
imul
andl
adc
adc
adc
or
xlat
cmpsb
cmp
xor
xchg
adc
pop
or
cmp
add
in
adc
and
adc
cmp
xchg
sbb
or
inc
insl
lcall
adc
adc
pop
cmp
outsb
sbb
sbb
outsb
and
sbb
dec
cmp
insl
arpl
and
and
cmpsb
or
pmulhuw
sbbb
mov
int
xchg
das
adc
nop
and
cmpsb
push
aam
or
lahf
push
mov
sbb
cmp
mov
movb
pop
sub
test
fstpl
cmp
xchg
adc
fbld
mov
bound
mov
xchg
insl
shrb
maskmovq
mull
fcoml
push
sbb
dec
arpl
sbb
push
and
and
adc
ret
sbb
ret
xchg
fistps
mov
push
adc
sbb
pop
sbb
fbstp
mov
adc
push
es
in
dec
cli
sbb
rol
xchg
psrld
rclb
pushf
xlat
dec
sbb
push
adc
adc
data16
pop
mov
cmp
ret
pop
mov
mov
in
or
fcoml
shlb
or
lock
push
test
pfpnacc
adc
sub
pop
or
scas
sbb
lods
sbb
in
push
adc
sbb
add
pushf
push
push
add
dec
jbe
and
or
and
das
and
pushf
and
xlat
outsb
sub
outsl
adc
adc
add
push
cmp
pop
outsl
sbb
xor
shll
or
arpl
sysexit
and
and
out
outsb
sub
push
xchg
sbb
fimuls
repnz
inc
mov
sbb
and
bound
add
aam
inc
jb
push
and
cmpsb
and
xor
ja
or
lahf
in
xchg
popf
sub
sti
or
sbb
inc
sti
sub
sub
hlt
sbb
aad
adc
sub
adc
fcomps
in
sbb
pop
xor
inc
inc
push
and
lcall
sbb
mov
bound
gs
or
push
sbb
gs
or
cli
sbb
sub
repnz
jecxz
rclb
inc
push
inc
xchg
or
lock
inc
add
jnp
or
or
cmp
ds
xchg
sbb
outsb
sbb
cmp
adc
sbb
push
or
arpl
lock
and
sbb
orb
adc
or
and
cmp
outsl
pop
outsb
sbb
lds
dec
pop
jo
adc
mov
cmpsb
arpl
fimuls
testb
add
or
fs
lds
xchg
daa
rclb
jae
sbb
adc
sub
dec
mov
adc
aam
jbe
mov
clc
mov
mov
jbe
ret
fucomp
loop
sbb
fwait
sbb
sbb
sbb
sbb
fwait
xchg
sub
xchg
push
or
lret
dec
outsb
xchg
sub
scas
cmp
dec
into
xchg
push
out
cmp
adc
cmp
dec
dec
xchg
outsl
cmp
dec
mov
dec
iret
xchg
pop
out
cmp
adc
cmp
push
and
sbb
in
bound
jns
xchg
xor
sti
xchg
dec
sub
or
stos
ret
jbe
mov
lock
je
jbe
mov
mov
jbe
mov
shlb
mov
mov
sub
sub
or
inc
daa
jno
xor
data16
xor
mov
data16
psrld
xchg
sbb
outsl
and
cmp
add
in
xchg
cmp
lahf
sub
je
sbb
daa
in
or
popf
or
inc
data16
psrld
push
push
push
push
push
mov
mov
mov
dec
adc
mov
and
sbb
mov
xchg
ret
testb
dec
or
dec
or
dec
or
dec
or
dec
or
fimuls
je
adc
call
adc
repnz
pop
sbb
dec
pop
sbb
scas
pop
sbb
add
and
rcrl
add
adc
inc
int
scas
mov
or
or
ret
jg
or
arpl
adc
mov
negl
shll
data16
loope
lahf
sbb
cmpsb
movsl
je
adc
arpl
adc
repnz
adc
cmp
and
cmp
outsb
cmp
mov
jo
mov
mov
and
and
or
fs
or
jne
xchg
push
adc
sbb
repnz
adc
sbb
push
and
out
sbb
out
sbb
sbb
or
and
pushf
push
sbb
rclb
and
and
adc
push
mov
or
punpcklbw
dec
adc
adc
sbb
add
or
sbb
movsb
std
xchg
push
dec
lret
sub
push
mov
pop
ja
das
and
loop
push
inc
cmp
bsf
adc
sub
lock
push
cmovo
daa
insl
sbb
cmp
insl
and
cmpsb
push
adc
roll
sbb
sbb
std
loopne
or
out
mov
jae
sbb
xchg
cmp
lods
jnp
repnz
sub
push
lea
test
in
das
dec
lcall
dec
sbb
notb
sbb
xchg
stos
xchg
adc
test
movsb
push
dec
sbb
sbb
imul
jmp
sbb
jo
sub
fwait
cmp
daa
lods
inc
imul
sub
cmpsb
mov
es
repnz
adc
sbb
fisttpll
mov
hlt
mov
lahf
bnd
pop
inc
sub
adc
daa
das
and
sbb
mov
pop
xchg
or
xor
dec
xor
xchg
inc
push
in
lcall
push
xchg
sbb
sbb
push
sbb
and
push
push
sub
jno
outsl
and
adc
sub
xchg
in
adc
cmpsl
mov
mov
sbb
mov
and
ljmp
adc
push
adc
outsb
push
sbb
push
sbb
push
arpl
adc
cmpsb
and
mov
outsb
es
push
mov
jmp
out
push
xor
int
out
popf
or
adc
adc
push
mov
and
and
mov
movsl
push
es
in
inc
cli
sub
mov
sbb
outsb
adc
pushf
sbb
pusha
es
and
or
js
xchg
push
inc
and
and
xchg
pop
and
or
pop
and
test
dec
clc
movsb
pop
subl
and
bound
sub
adc
sub
gs
mov
push
mov
xor
push
cmovs
adc
gs
out
adc
pop
aam
sbb
sbb
cli
sub
or
mov
mov
dec
cmp
xchg
sbb
xchg
js
sbb
sbb
cltd
mov
jg
xor
sub
add
sub
or
paddusw
loop
sbb
cld
or
sbb
sbb
fwait
sbb
fwait
sbb
data16
data16
data16
xor
push
push
or
push
int
out
dec
or
adc
repnz
xchg
or
data16
cmp
mov
mov
cmpsb
push
push
in
adc
or
adc
cmp
jnp
outsb
fsubl
adc
and
pushf
and
or
setbe
imull
inc
mov
lds
pop
outsb
or
mov
sbb
adc
cmpsb
sbb
int
sub
xor
enter
adc
and
adc
sbb
pushf
sub
inc
mov
bswap
in
or
dec
mov
and
outsb
adc
mov
adc
je
dec
das
aad
cmp
and
or
sub
and
fcomi
pop
outsb
cmpb
mov
daa
cmp
popf
or
call
call
call
call
or
repnz
mov
and
das
dec
mov
or
inc
adc
sub
mov
xchg
pop
and
or
pmulhuw
adc
outsb
or
dec
or
adc
pcmpeqw
sbb
push
and
adc
es
sub
insb
adc
sub
movsb
stos
push
mov
fisttps
je
or
jne
adc
dec
mov
insl
and
cmp
insl
and
cmpsb
dec
adc
sbb
adc
imul
adc
inc
jno
or
arpl
adc
sub
sbb
sbb
or
or
or
and
cmpsb
adc
pop
xchg
int
mov
int
adc
lahf
xor
and
push
cli
cmp
mov
xchg
xchg
icebp
call
daa
orl
inc
rsqrtps
pop
and
call
stos
dec
sbb
mov
out
sub
mov
outsb
and
mov
sbb
movsl
adc
pop
pop
js
sbb
adc
sbb
xchg
push
imull
popf
cmpsb
and
and
or
or
push
push
cmpsb
mov
cmpsb
and
cs
imull
xchg
push
or
movsl
jb
and
in
xchg
and
sbb
mov
xchg
movsl
jge
sub
or
bound
or
push
cmpsb
push
adc
sub
cltd
adc
sub
jb
or
adc
sub
push
movsb
xor
lret
xor
and
xchg
sbb
jne
xchg
test
and
adc
and
and
dec
jae
data16
pushf
in
jo
lds
lahf
daa
fistl
outsl
sub
int
cs
and
je
sbb
and
cs
mov
shrl
mov
adc
dec
data16
push
adc
adc
xchg
xchg
xchg
or
es
and
sub
cs
mov
cmc
lock
lock
or
add
sbb
push
pushf
push
push
push
push
or
adc
insb
mov
jle
cmp
lahf
push
pop
pop
sbb
or
xor
and
adc
insl
arpl
or
cmp
push
packsswb
sbb
pop
push
packsswb
sbb
and
movups
enter
or
int
cmpsl
das
adc
lret
dec
or
and
or
adc
repnz
outsb
nop
cmp
outsb
push
cmp
jae
outsb
and
cwtl
jmp
sub
sbb
pop
mov
loop
sahf
xor
cmp
sbb
lahf
test
or
pmulhuw
or
mov
cmpsb
sub
adc
or
or
push
and
pop
mov
cltd
cmp
adc
or
sub
mov
sbb
dec
sbb
sbb
mov
or
sbb
fs
sbb
push
push
xchg
adc
shrl
testb
in
and
es
sub
or
and
psubd
mov
mov
mov
mov
imul
lea
and
mov
push
daa
push
mull
bound
imul
adc
sbb
mov
mov
outsb
adc
mov
lahf
mov
sbb
fisttpl
rclb
inc
addr16
or
jno
icebp
and
hlt
jmp
sbb
inc
and
repz
stos
sti
or
stos
iret
adc
loope
adc
sbb
repnz
push
jmp
mov
or
sahf
cmp
pop
bswap
movsl
push
and
and
in
mov
or
jge
insb
push
and
fisttpl
xlat
jmp
daa
int
jmp
xchg
mov
mov
popf
or
pop
mov
or
stc
ss
fnsave
push
add
inc
pop
or
dec
cmp
test
ljmp
and
les
or
sbb
sbb
and
int3
mov
sub
fs
loop
inc
mov
js
test
mov
adc
sti
inc
mov
repz
fwait
popa
xchg
rorb
pop
xchg
fs
xchg
ja
adc
dec
or
sbb
xor
sbb
cmpsb
mov
sbb
push
mov
jg
cltd
cmp
and
push
adc
stos
int
cli
or
adc
in
or
sub
rorb
nop
xor
and
jb
fstl
mov
and
into
xchg
sub
lahf
cmp
ljmp
or
out
sub
sbb
cmp
dec
push
mov
dec
or
mov
adc
out
movsb
scas
cmp
dec
and
cwtl
dec
xchg
xchg
aam
cmp
adc
sub
xchg
arpl
cmp
dec
sbb
lcall
xchg
rorb
jl
sbb
sub
or
cmp
dec
fs
bound
mov
adc
cmp
dec
adc
rorb
int3
adc
xchg
call
in
loope
fists
sub
cmp
dec
call
mov
cmp
adc
pop
dec
pop
xchg
es
lret
into
or
dec
in
insl
or
sub
sbb
fcoms
mov
dec
cmp
or
dec
dec
and
dec
lcall
dec
int
mov
adc
out
movsl
dec
fs
adc
xchg
sbb
mov
dec
lea
sub
out
in
arpl
mov
xchg
sbb
cmp
aam
rclb
adc
dec
or
out
cmp
dec
mov
cmp
dec
xlat
test
adc
cmp
dec
or
test
cmp
dec
pop
mov
xchg
xchg
push
xchg
cmp
dec
jle
push
jecxz
and
pop
dec
xchg
dec
xchg
xchg
xchg
adc
dec
dec
or
mov
mov
loopne
sbb
dec
sbb
dec
push
mov
adc
sub
sub
dec
mov
fisttpll
sbb
push
sbb
and
push
or
jle
sub
add
imul
inc
adc
cmpsl
push
pop
or
sub
or
xchg
push
push
cmp
fmull
in
cmpsb
xchg
call
cmp
dec
push
mov
adc
cmp
sub
pop
xchg
pushf
fidivrl
cwtl
dec
xchg
mov
xchg
pop
xor
cmp
in
lret
xchg
and
sub
and
mov
xchg
pop
fnstcw
xchg
dec
xchg
mov
dec
mov
jmp
cmp
and
pop
dec
sbb
dec
adc
push
adc
cmp
dec
int3
xchg
lret
lods
cmpsb
cmp
mov
pop
cmp
dec
sbb
dec
push
mov
push
cmp
dec
lea
and
xchg
loopne
fimuls
pop
adc
mov
shrl
adc
adc
mov
cmp
dec
mov
adc
rorb
mov
inc
outsl
inc
xor
test
dec
pusha
dec
sub
cmp
dec
adc
fmull
loop
movsl
cmp
or
scas
dec
dec
xchg
mov
cmp
dec
push
mov
cwtl
cmp
dec
pop
xchg
pop
loope
and
es
push
or
dec
xchg
mov
adc
xchg
pop
and
mov
dec
out
dec
int3
xor
adc
push
dec
pop
xchg
sbb
xor
lret
push
cs
in
bound
ss
hlt
xchg
pop
mov
dec
xchg
sbb
dec
cmp
stos
dec
push
cwtl
mov
or
sub
sub
lods
and
sub
pop
push
mov
jo
sub
mov
xchg
jecxz
jmp
xchg
hlt
lods
xor
stos
xchg
mov
push
or
fstpt
push
sbb
test
xchg
adc
lahf
dec
ss
pop
in
cmp
mov
mov
or
mov
lret
bound
icebp
xchg
test
push
jno
and
mov
or
mov
pop
lea
ljmp
fsubrl
and
cli
int
es
lahf
pop
test
ret
je
jno
cmpsb
dec
mov
sub
aas
inc
jle
mov
inc
subl
daa
rorb
repz
les
and
mov
mov
mov
addr16
sub
and
sti
jno
or
aam
mov
mov
popf
jo
sub
ja
push
sbb
mov
or
xor
push
sub
mov
add
call
cwtl
pop
xchg
add
or
xchg
testl
add
bound
push
cld
push
xchg
push
cmp
push
jns
or
cmpsb
push
and
or
roll
mov
sti
iret
lret
jne
fwait
pop
hlt
or
mov
cmpsl
in
adc
shll
push
mov
cmp
mov
and
or
push
aam
inc
je
shll
cld
adc
or
xchg
jmp
rorl
jae
test
mov
je
mov
rcll
push
mov
aas
lcall
xchg
sahf
and
cmp
movsb
push
or
in
jnp
insl
das
inc
mov
and
and
inc
or
sub
push
lock
mov
pop
xchg
ljmp
lret
inc
and
test
adc
xor
or
in
adc
dec
mov
jne
sbb
in
je
mov
xor
jl
mov
dec
or
or
mov
or
lret
sub
sub
test
ss
lret
ja
pop
std
adc
inc
ss
cmpsb
das
push
dec
aad
mov
adc
jmp
sbb
sbb
stc
ljmp
adc
push
sti
int3
mov
and
movsb
imul
adc
or
lods
xor
out
cltd
push
adc
sub
stos
aad
fmul
dec
dec
jp
mov
xchg
and
mov
xchg
fiadds
adc
mov
sub
lret
rolb
stc
sti
sbb
in
je
shll
sti
pop
std
push
cltd
mov
in
sub
mov
unpckhps
mov
movsb
and
or
fcmovne
mov
repnz
or
dec
outsb
loope
adc
pop
stc
push
push
mov
or
int
pop
push
inc
push
into
mov
mov
pusha
mov
lea
jmp
ljmp
js
lods
movsb
sbb
lcall
jg
cld
inc
movsb
and
or
jo
mov
add
xchg
push
push
int3
xor
xchg
or
cli
push
insl
sarl
scas
popf
ja
or
int
pushf
sti
dec
push
std
inc
xor
sbb
jmp
xor
pop
pushf
frstpm(287
or
cmp
inc
sub
push
iret
inc
fiadds
cmp
mov
xor
jno
sbb
jle
and
dec
fistl
push
jecxz
push
pusha
sub
add
or
int
jle
sahf
nop
jnp
inc
add
xor
sbbb
push
test
bound
dec
xor
lret
aad
mov
notb
or
test
or
jbe
cmpsl
and
shrb
xor
lret
lods
bound
inc
in
sub
lret
pop
mov
push
int
cltd
sbb
or
xor
arpl
and
test
or
test
inc
inc
cmp
lock
pushfw
loope
outsl
dec
push
jbe
mov
pop
popa
fbld
fdivl
cmp
je
test
sarl
jmp
sub
push
aam
push
adc
and
add
xchg
int3
pop
pusha
int3
or
sub
sub
out
or
aam
dec
dec
addb
jne
test
xor
ret
pop
sub
in
jo
mov
and
or
sti
sub
clc
sbb
and
sub
or
lret
jne
lods
sbb
jbe
pop
jmp
xor
inc
rorl
or
sub
add
pop
and
adc
sbb
or
into
pop
sub
or
dec
cli
enter
sbb
lds
pop
rcrl
pop
push
rcll
or
xchg
sbb
ss
cmp
stos
rcr
xchg
sbb
in
mov
push
mov
imul
sbb
sbb
push
or
inc
data16
js
shrb
or
push
inc
call
or
aad
jg
jmp
jno
mov
or
leave
rorl
pop
mov
in
add
lea
imul
int
aas
rcll
inc
cli
jmp
jg
jmp
lret
xchg
sbb
std
cmp
stc
push
insl
rcll
in
jecxz
sbb
cmc
movsl
nop
mov
or
inc
in
xor
pop
sti
das
cmp
lea
adc
loopne
jge
mov
add
mov
ret
pop
xchg
ds
fadds
out
or
mov
lcall
imulb
push
mov
sbb
push
imul
pop
cmp
shrl
orl
xor
pop
and
aaa
jmp
sub
push
adcl
xchg
dec
loop
cmp
divb
mov
mov
or
and
xor
in
sub
add
cmovb
xchg
rcrb
sub
out
add
test
adc
cwtl
xchg
mov
sub
push
mov
sub
xchg
or
push
andl
fwait
push
std
cmp
sub
fmul
mov
dec
mov
sub
xor
push
rolb
cmp
pop
sub
cmp
push
sbb
lret
adc
iret
shrl
aas
cmp
push
push
movsl
sbb
lock
call
add
outsl
fisttps
xchg
or
dec
jg
out
pop
jns
push
sbb
and
fmull
xor
push
cwtl
push
shrb
leave
dec
push
and
mov
pop
xchg
es
stos
jmp
andb
rcll
cmpsl
jno
cmpsb
gs
mov
dec
or
xor
push
push
daa
adc
push
int
sub
push
lret
add
ljmp
iret
or
jmp
arpl
out
cmp
mov
lea
add
imul
fisttps
out
popf
lcall
aad
sbb
out
mov
jmp
push
jmp
outsb
sbb
xor
insb
mov
ljmp
xchg
pop
lret
hlt
jo
rorb
loope
pop
jecxz
lret
cmpl
sar
xchg
or
jmp
enter
lock
xor
push
xor
nop
jmp
xor
add
adc
or
popa
or
call
mov
dec
cmp
sub
xchg
lret
mov
cmp
xorb
adc
repnz
dec
or
cltd
or
adc
and
in
push
fildl
mov
fstps
and
icebp
mov
add
movsb
mov
scas
jmp
mov
xlat
dec
xchg
scas
sbb
push
clc
ja
push
lds
pop
dec
and
sbb
pop
or
sahf
pushf
push
frstor
iret
sub
cmpsl
mov
push
cld
and
int
imul
mov
lret
scas
daa
lds
adc
shr
push
fwait
imul
and
xor
fldt
sbb
or
out
sub
add
push
jo
jae
xor
je
test
push
mov
imul
xchg
jg
fwait
or
jp
mov
fwait
mov
rcll
push
lret
or
nop
or
aam
mov
fildll
ja
cmpsb
pop
jp
and
inc
stos
jge
aas
imul
ret
jns
push
std
xchg
mov
bound
lea
adc
inc
testl
cltd
mov
in
mov
adc
stc
jle
jns
rcrb
repz
or
push
pushf
jl
or
mulb
xchg
inc
pop
mov
or
insb
lock
popf
shll
or
int
int3
mov
cmpsb
push
xchg
out
lea
in
mov
inc
push
or
ljmp
push
pusha
das
pop
popa
or
xchg
jmp
push
mov
mov
pop
in
xchg
jno
cli
data16
push
add
hlt
fdivl
movsl
push
push
add
lea
mov
sbb
rorl
xor
and
lret
cmc
jmp
cld
jns
lcall
cmp
or
ficompl
lods
mov
jl
out
lahf
loop
or
int3
repnz
cmp
ds
jno
out
or
mov
mov
add
inc
push
sub
mov
adc
inc
test
sub
leave
fdivrs
ljmp
mov
or
push
cmc
stc
jge
xchg
js
xorb
loopne
sub
inc
xor
stos
dec
push
scas
push
sbb
inc
sbb
pop
push
cltd
xchg
jne
into
add
push
repnz
jmp
pushl
clc
cwtl
xor
stos
push
sbb
or
daa
jecxz
sub
xchg
mov
cmp
or
inc
fimuls
and
sub
mov
repnz
or
sbb
push
pop
es
sub
sbb
arpl
mov
jmp
adc
nop
mov
imul
enter
movsl
sub
shr
jae
fstpl
imul
mov
test
mov
adc
fcompl
inc
push
in
lea
cli
or
out
lret
mov
jmp
in
or
fnstcw
in
mov
fisubrl
out
iret
into
stc
xchg
push
pop
rcrl
mulb
js
scas
ss
outsl
sbb
sbb
rol
int
fildl
push
lds
lcall
mov
dec
ja
or
xchg
and
push
into
nop
jg
mov
lret
sbb
ljmp
cmp
sub
loopne
sub
jne
mov
xor
pop
js
xor
add
lahf
int3
push
rorl
cltd
popa
pop
and
data16
xchg
les
mov
orl
xchg
jg
cmp
insb
shl
int
fisubrs
push
sti
dec
push
sbb
mov
jb
or
imul
out
push
and
add
adc
out
jmp
mov
cmpsb
xor
mov
iret
popf
pop
in
sarb
icebp
xchg
cmp
stc
sbb
sti
lods
lret
xor
pop
or
mov
pop
mov
sbb
movsb
push
or
adc
or
sbb
int3
imul
jae
roll
cmp
push
cmp
and
lods
or
sbbb
xor
or
sub
mov
and
adc
ljmp
jb
daa
add
insl
adc
inc
push
aad
jmp
xchg
sub
jle
lret
mov
fstpl
ss
push
mov
adc
or
add
stc
jbe
shlb
int
sbb
lret
mov
scas
dec
mov
adc
xlat
repnz
sub
aaa
pop
pop
test
outsb
in
push
sub
xchg
jb
push
bound
push
cmpl
sbb
jmp
cmp
cmpsb
movsl
push
or
fdivl
push
addb
adc
repnz
jg
mov
xor
inc
mov
shll
es
test
scas
fistpl
dec
or
cs
lods
xchg
lods
ljmp
repz
sbb
or
inc
rol
and
scas
or
mov
in
or
shl
jmp
cltd
cmp
testb
sbb
mov
lcall
out
pushaw
dec
or
fmull
sbbb
xor
in
fsubrl
or
ds
push
or
mov
in
movsb
fcompl
fs
sahf
lods
mov
mov
adc
mov
pop
sbb
movsl
cmp
adc
add
xchg
mov
cmp
imul
pop
fcomi
cmp
mov
lock
or
loopne
rcrl
mov
or
sahf
mov
or
add
lea
jae
adc
sub
cmpsb
sbb
cmpsb
jnp
dec
cld
dec
mov
iret
popf
ret
or
scas
sbb
sbb
jbe
xor
or
sbb
inc
mov
or
popa
jl
adc
insl
dec
sbb
or
lock
jmp
adc
stos
pop
mov
xchg
adc
fstpl
sub
xlat
sub
dec
mov
sbb
andb
scas
jne
sbb
xchg
add
rol
dec
scas
adc
or
inc
ja
jge
cmpsb
out
cmp
imul
sti
add
xchg
or
dec
pop
and
xchg
cs
out
adc
scas
push
cwtl
add
mov
mov
aam
mov
xor
inc
adc
std
or
mov
or
sub
fiadds
stc
in
or
fdivrs
imul
and
jp
cwtl
add
or
xchg
xchg
aaa
pushf
mov
mov
adc
insb
shrb
lods
fimuls
fidivrs
popf
sbb
lods
and
or
int3
orl
adc
mov
jo
add
std
xor
out
rcrb
and
shll
or
and
sbb
mov
sub
pusha
icebp
or
lea
mov
jmp
ljmp
pop
xor
int
outsl
gs
mov
pop
mov
dec
adc
int3
and
xor
lods
pslld
cs
mov
ljmp
addr16
test
xor
std
or
sahf
sbb
mov
adc
or
pop
sub
stc
test
loope
cwtl
inc
ljmp
sti
xchg
add
daa
shrl
jb
push
outsl
push
hlt
push
subl
mov
filds
in
mov
dec
fimuls
test
and
lock
jle
fadds
fistl
or
mov
lods
jo
jge
in
sbb
ljmp
repnz
and
dec
push
loopne
adc
je
sti
cli
inc
adc
repz
mov
nop
xor
jp
stc
xchg
cli
xor
pop
mov
ret
adc
add
jl
mov
inc
inc
mov
push
addr16
push
mov
in
add
or
sub
sarb
sub
cmp
push
sub
pop
push
outsb
cmp
mov
stc
test
movq
gs
lds
sub
mov
je
sbb
sbb
pop
or
add
sub
movsb
cmp
in
or
ljmp
and
jmp
cld
test
dec
or
ds
lcall
inc
or
jp
jae
xchg
cmp
subl
jp
cmpsl
inc
fstps
jbe
push
cmp
lret
xlat
add
test
xor
cld
sbb
sarb
mov
cltd
push
push
or
test
lret
scas
test
push
lea
stos
mov
insb
sub
or
incl
insl
int3
and
lret
popa
scas
in
jns
or
int
test
sub
test
push
leave
mov
lcall
mov
lods
es
int
mov
push
add
fxch
mov
xor
adcb
adc
outsb
add
es
or
jg
push
sub
in
mov
jp
mov
adc
addr16
std
clc
xchg
jmp
bound
and
ds
pop
mov
fwait
jecxz
stos
std
arpl
fs
fsub
out
clc
xor
imul
into
mov
mov
pop
push
lods
aam
jl
sbb
icebp
notl
scas
jbe
and
mov
out
push
mov
add
cs
andb
mov
shl
cld
scas
inc
cmp
sbb
or
inc
imul
mov
test
jns
or
adc
or
pusha
dec
sub
pop
pop
adc
je
adc
adc
jb
inc
pop
popa
stos
lcall
cmpsl
sub
sub
sbb
in
adc
cwtl
out
adc
je
or
aas
aad
push
mov
movsb
or
fsubrl
lcall
add
mov
adc
or
mov
jl
and
dec
fwait
shlb
int
cli
adcl
or
aas
aaa
sub
data16
data16
and
or
cmp
jp
jg
add
sbb
lcall
adc
test
stc
adc
leave
sbb
cmp
dec
outsl
sub
mov
popf
or
cld
insl
movsb
lret
sub
dec
add
test
adc
mov
les
or
sbb
ds
or
or
in
push
roll
jmp
test
cmp
xchg
out
or
in
jnp
fstps
pop
aad
out
push
dec
fwait
dec
dec
cmp
sub
lret
out
sub
in
stc
xchg
sub
or
or
repnz
imul
dec
push
mov
cmc
lret
mov
pop
xor
dec
cmp
adc
fidivrs
push
imul
sbb
or
pop
inc
push
out
sbbb
jmp
pop
fidivs
jb
clc
into
pop
les
lret
mov
aaa
adc
movsl
lret
sbb
ret
adc
repz
and
mov
and
cmc
push
jns
lret
cs
inc
add
mov
push
mov
ret
fcoml
pop
or
loope
adc
inc
adc
int3
aas
imul
jecxz
sarb
xchg
jle
sub
or
cmp
jne
or
fwait
push
fistps
cli
bound
ret
mov
or
adc
or
xor
sub
cmp
mov
add
adc
and
or
xchg
push
adc
fimuls
mov
in
fnstenv
push
les
and
add
addr16
lods
daa
jo
pop
mov
mov
test
mov
and
fidivl
or
aam
es
gs
imul
push
cmp
leave
sub
and
das
pop
imul
movsb
call
mov
sti
or
dec
or
fcoml
or
andb
jns
push
int3
loope
rep
mov
dec
cmp
int
mov
and
dec
cltd
or
xor
addr16
mov
pop
sbb
push
sbb
jmp
mov
xorb
fisttpll
ds
jbe
in
sbb
sub
scas
es
xchg
andnps
or
jmp
cmp
cwtl
andb
xchg
inc
das
popf
jg
ljmp
add
insl
mov
jns
sbb
sub
fiadds
int
add
or
mov
and
jl
fisttpl
nopl
stos
out
sar
iret
push
test
int
sbb
cmp
sub
jns
or
stc
ja
and
cs
push
pusha
in
and
lcall
aad
push
xor
lret
sahf
adc
xchg
or
mov
sbb
or
or
adc
cli
insb
inc
xor
and
movsl
pop
dec
pop
adc
and
int3
and
pop
cmp
mov
adc
movsl
ja
push
and
cmpsb
subl
mov
lods
and
xchg
mov
mov
lcall
and
adc
or
push
ret
add
push
push
push
adc
or
mov
inc
sub
lods
sbb
push
decl
iret
xor
repnz
aaa
dec
test
xchg
sub
add
add
enter
rorl
inc
ss
dec
rcrb
sbb
xchg
pop
dec
into
subb
loopne
or
iret
gs
insb
cmp
pop
push
cmp
fsubrs
shl
add
mov
or
pusha
xchg
or
movsl
nop
or
fldenv
jnp
mov
adc
lahf
add
mov
or
mov
out
les
dec
fwait
je
daa
dec
push
mov
gs
and
scas
mov
mov
scas
or
mov
fcmove
divb
and
sbb
or
or
int
out
pushf
and
in
mov
out
cltd
mov
or
push
lods
shll
pavgw
xchg
or
or
inc
mov
test
or
clc
stc
pop
es
pop
or
dec
mov
mov
lret
repnz
ss
push
xchg
xchg
in
pop
lret
mov
insb
outsb
call
lahf
mov
jnp,pn
sbb
jmp
inc
fndisi(8087
push
mov
or
or
scas
sbb
or
push
jp
inc
lea
jno
test
push
stos
or
or
and
dec
sbb
push
pop
dec
leave
aad
lret
mov
adc
mov
andb
cwtl
sbb
or
pop
int
dec
sti
or
jno
pop
lea
inc
jmp
shlb
xchg
movsb
daa
or
aad
jnp
push
add
push
dec
dec
sub
scas
or
inc
leave
mov
pop
fisubrs
lret
add
stos
dec
pop
jmp
and
jmp
sbb
or
outsb
inc
mov
sub
xor
cs
mov
sub
addr16
mov
in
or
out
xlat
rcrb
cmpsl
or
and
inc
and
out
inc
fiaddl
out
ja
push
fildl
sahf
or
popf
add
cmpsl
mov
int
into
addr16
arpl
jno
sub
sub
jb
dec
xchg
pop
pop
mov
clc
jae
or
in
lret
xor
imul
or
stos
or
pop
shr
sub
pop
xchg
pop
adc
pop
xor
outsb
adc
sub
sbb
xchg
ja
adc
enter
mov
subl
sbb
addr16
ja
decb
adc
aas
dec
xlat
int3
out
jmp
push
test
xchg
ja
sub
lahf
or
mov
mov
or
in
movsl
jp
and
sub
icebp
push
fstl
sbb
or
lret
push
jmp
lea
roll
lds
adc
shlb
push
mov
cmp
or
sbb
sbb
or
notl
xchg
into
push
mov
or
lcall
sub
cmp
xor
push
xchg
insb
lods
xchg
cmp
sbb
fwait
ljmp
and
adc
mov
divl
xor
mov
adc
jmp
mov
pop
sbb
jle
push
push
insb
int3
or
mov
sbb
push
lock
movsb
mov
xchg
and
int3
or
mov
icebp
push
pop
pusha
ficompl
push
outsb
test
pop
lcall
sahf
pop
jle
push
cli
jno
sub
sub
lret
xor
nop/reserved
lret
popa
lcall
mov
loop
sbb
xor
pop
inc
aam
mov
es
clc
mov
mov
sbb
in
ja
dec
inc
sub
sub
sbb
in
and
int
subl
or
nop
daa
orb
inc
mov
fchs
dec
xchg
mov
dec
jmp
inc
mov
or
test
addr16
out
and
leave
ljmp
xor
add
jae
in
dec
testl
scas
or
or
sub
jo
or
lahf
mov
or
ficoml
and
test
rcrb
dec
cmpsl
ficomps
fistl
cltd
jmp
shrl
lock
mov
adc
ljmp
ret
push
fidivl
shl
shll
or
jg
test
or
sbb
sarl
mov
dec
mov
or
out
adc
mov
mov
xchg
punpckldq
mov
inc
fiadds
cmpsl
cmpsb
es
or
lret
mov
shll
sub
sub
push
es
inc
sahf
cwtl
mov
xchg
in
mov
pop
ljmp
test
in
adc
xor
sbb
or
shrb
push
subl
es
sub
sbb
lcall
sti
fistps
sar
push
lret
pop
or
xlat
sti
dec
scas
fldenv
or
or
cmp
popa
stos
jo
pop
arpl
push
mov
or
dec
jne
or
mov
ret
xchg
lods
jp
mov
int
bound
xor
sub
jbe
aas
push
int
ss
loopne
insb
mov
push
sub
enter
mov
and
adc
jbe
aam
negb
pusha
loop
and
lcall
add
and
adc
jle
add
add
mov
ljmp
sub
lds
imul
in
mov
mov
leave
insb
sbb
mov
enter
ret
jo
arpl
ss
lock
scas
pop
fs
and
js
loop
xchg
xor
loop,pn
repz
out
add
adc
addr16
jle
inc
outsl
insl
rcrb
subb
hlt
or
cmp
cmp
inc
and
adc
lds
fisubrl
mov
xor
push
fdivrl
mov
ss
mov
and
dec
dec
rcl
xor
mov
adc
loopne
xor
mov
sbb
xchg
cmp
arpl
ja
loope
lea
daa
pop
sub
loop
pusha
jno
shll
outsl
xor
test
loopne
sub
xchg
lea
out
pop
mov
dec
jmp
subb
test
in
aad
jne
mov
mov
imul
repnz
mov
je
jae
jne
movsl
rclb
jmp
test
scas
jb
xor
test
shrb
shll
mov
popf
push
lahf
mov
xlat
lret
cmpsl
inc
iret
add
mov
sahf
shll
xchg
adc
mov
fnstenv
imul
pop
loop
outsb
dec
cwtl
outsl
insl
dec
stos
push
mov
sbb
scas
lcall
add
scas
int
pop
ja
mov
daa
rcll
inc
push
shll
out
sbb
mov
ret
and
fs
icebp
shrd
push
sub
das
bound
jnp
pop
cmpb
loopne
and
mov
sub
rorb
popw
stc
adc
sbb
mov
add
jb
fstps
fcompl
lcall
and
fs
out
jecxz
sbb
lret
int3
inc
stos
inc
dec
xor
pop
add
test
lahf
fnstcw
xor
jno
pop
push
call
mov
xchg
popf
add
shrl
call
sub
dec
cmp
xchg
sti
push
add
hlt
mov
dec
jg
push
jl
adc
jg
in
xorl
jb
jecxz
dec
fwait
cmp
stos
aad
push
jns
xchg
cmp
ds
push
fisubrl
daa
inc
adc
adc
iret
scas
xlat
sbb
call
xor
ret
ret
sti
inc
cwtl
push
adc
cmp
rcl
push
sbb
xchg
movsl
sbbl
mov
xchg
and
in
mulps
push
push
jge
faddl
mov
dec
push
xor
bt
pusha
shr
sub
pushf
cmpl
pusha
push
lea
je
dec
movzbw
not
mov
shr
movzbw
shld
sub
or
btc
inc
jmp
push
call
lods
jp
sub
cs
pop
add
sub
sbb
ds
jnp
dec
push
pop
je
gs
mov
mov
aaa
mov
fisubrl
pop
loopne
cwtl
stos
mov
adc
mov
mov
or
add
pop
inc
ss
push
push
mov
cs
pop
or
and
sbb
mov
sbb
xchg
lahf
aaa
and
cmp
xor
into
rclb
jns
mov
inc
xor
xor
call
out
pop
dec
call
test
rorl
push
xchg
fnsave
inc
fwait
inc
and
rorb
shlb
xor
shll
pop
pop
adc
in
jmp
fwait
jle
cmpb
xchg
outsl
push
or
jge
loopne
cmp
xchg
out
xchg
lcall
add
and
push
lret
into
mov
mov
daa
aaa
test
mov
pop
int3
rorb
pusha
jo
test
jb
pop
jecxz
call
add
movsl
mov
lcall
pusha
ss
mov
lahf
inc
fcmovnbe
xor
push
ja
jno
inc
cltd
insb
lds
movsb
add
or
nop
dec
mov
movsl
adc
jecxz
or
add
sahf
inc
imul
dec
popa
bound
cli
push
sbb
outsb
adc
ficomps
sub
ret
dec
or
dec
rorb
lods
addl
mov
mov
or
in
add
pop
pushf
movsl
add
pop
and
xchg
inc
mov
es
es
jno
sti
leave
pusha
fxtract
icebp
pop
pop
out
mov
mul
scas
lock
mov
xor
shll
jmp
arpl
fcmovnu
popf
les
popa
cmp
jl
cld
jno
and
mov
imul
xor
sbb
fldcw
mov
xor
out
clc
push
xorb
iret
push
inc
repnz
pop
mov
jmp
mov
lock
pop
repnz
movsb
cmp
pop
jb
add
int
xor
repnz
push
in
outsl
pop
xor
stc
mov
push
pop
xlat
mov
adc
adc
lds
je
das
test
cmp
nop
xchg
outsl
mov
push
mov
movsb
dec
dec
cmp
sub
pop
or
add
std
into
and
call
sub
mov
mov
mov
sub
jecxz
mov
adc
xchg
in
out
mov
lock
and
stos
cmp
out
xchg
or
push
das
jno
add
scas
hlt
repz
movsl
insb
push
int3
orb
add
loope,pt
sub
pop
iret
out
mov
and
ja
adc
pop
add
adc
mov
mov
pop
stc
mov
ljmp
add
call
aas
adc
jo
sub
sar
xchg
dec
inc
popf
xor
movsb
lods
jae
es
test
scas
out
pop
aam
daa
mov
dec
mov
jnp
sbb
adcl
push
mov
dec
sti
jge
lods
push
cmp
movsb
inc
pop
fst
incb
mov
sbb
jbe
push
jo
andl
insl
call
js
xchg
add
jecxz
jl
mov
inc
mov
xor
adc
call
jge
mov
test
jne
push
clc
cmc
std
pushl
popf
pushf
mov
pusha
movw
lea
jmp
push
call
pop
push
dec
adc
sbb
jne
push
outsl
xor
orb
out
rcll
movsb
rorl
or
pop
nop
mov
mov
mov
pop
outsl
out
divb
add
fisubs
mov
xchg
mov
xor
mov
mov
add
jmp
imul
push
std
dec
adc
jno
fwait
mov
int
std
adc
imul
in
xchg
adc
push
call
cld
jl
pause
popf
mov
jmp
sahf
mov
push
push
sarb
mov
cmp
fs
loop
loope
push
xor
mov
mov
cmp
add
sub
sub
adc
flds
mov
and
xchg
adc
flds
sbb
fdivrl
pop
sub
xlat
test
push
and
shll
in
xor
mov
fidivrl
pop
sahf
lahf
mov
cmp
add
in
pop
pop
mov
outsb
mov
clc
in
push
scas
popf
js
arpl
mov
clc
fldcw
js
sub
cmp
xchg
pop
jne
adc
jle
testb
xor
push
xor
pop
pop
or
and
mov
stos
pop
idiv
xor
jne
mov
jl
daa
jle
adc
sub
push
and
jns
pop
mov
test
js
shll
in
mov
jmp
push
mov
in
pop
adcl
xchg
mov
mov
mov
mov
mov
rorb
sbb
sub
push
icebp
jno
pushf
ljmp
mull
mov
stos
std
add
dec
cwtl
pop
dec
mov
lret
or
and
add
or
sbb
sub
xchg
cmpsb
or
or
fsin
or
adc
xor
push
xlat
dec
mov
ja
push
sahf
cwtl
testb
cmc
call
push
call
lods
cs
lea
jne
pusha
lahf
sets
lea
mov
movb
pusha
lea
jmp
push
call
addr16
or
out
int3
add
cmovs
mov
aam
pop
lcall
mov
sbb
data16
dec
push
mov
pushf
andb
xchg
xchg
push
sbb
lods
imul
fldcw
in
mov
sbbl
lcall
in
daa
xchg
and
mov
adc
or
je
mov
cmp
mov
arpl
pushf
in
and
outsb
xchg
stc
pushl
jb
sti
dec
cmp
cmp
push
cmp
jo
mov
aad
xchg
mov
arpl
shll
out
pop
pushf
xchg
xor
aaa
sbb
leave
or
mov
inc
out
out
adc
pushf
mov
dec
xchg
movsb
loopne
lahf
sbb
cld
popa
pop
mov
ljmp
pop
push
movmskps
cs
movl
loopne
pop
aad
jno
testl
push
cmpsl
aam
cmp
adc
mov
push
movsb
dec
sti
add
lods
lock
out
sub
fistl
sbb
hlt
xchg
push
mov
adc
or
mov
pop
add
gs
test
test
cmp
adc
jmp
sub
pop
popa
pushf
jmp
imul
daa
cmp
jecxz
stc
int
sub
popa
mov
outsb
or
fnstenv
sti
mov
insb
jnp
cs
in
addr16
es
insl
mov
fmuls
add
xchg
cmp
movsl
je
insl
or
or
repz
xor
mov
inc
push
call
jb
cmp
mov
push
fimull
push
or
add
jecxz
inc
icebp
pop
add
pushl
popl
pushf
cwtl
jmp
call
xor
out
cmp
adcl
push
cmpb
pop
mov
cmp
jns
push
fnstcw
cli
push
adc
std
call
fs
adc
loop
mov
xlat
cmpsb
insb
jecxz
fcom
jmp
push
stos
popa
cmp
ret
pop
fs
cmp
std
repnz
or
mov
sbb
xorb
lods
shl
js
in
adc
xor
pop
sub
repz
les
int
shll
lock
ret
std
out
aam
xchg
pop
or
cmp
add
js
fsubl
xor
fs
sub
inc
scas
jmp
mov
pop
or
das
push
sub
and
inc
out
jne
rcr
test
pop
inc
stos
push
fs
fs
lea
xchg
adcb
push
inc
insl
pop
inc
mov
mov
pop
push
sub
jge
lret
adc
cmp
mov
add
mov
aad
mov
inc
leave
dec
es
inc
call
das
call
jl
pushf
mov
lea
je
add
sbb
shl
lea
add
pushf
shr
setnp
mov
cmp
stc
bt
add
cmp
mov
setb
bsr
bsf
mov
cmc
cmp
mov
jmp
lea
call
call
xor
test
jecxz
adc
lds
sbb
pusha
jbe
sub
clc
mov
xor
sbb
incb
in
cli
fdivs
lods
movzbl
iret
pop
push
fldenv
cmp
xor
pop
inc
shrl
jmp
pop
add
mov
dec
test
arpl
sub
mov
adc
inc
pushf
push
sub
xchg
jle
adc
sub
adc
shl
int3
ds
push
fmul
bound
lcall
outsl
popf
mov
loope
xchg
out
xchg
cmp
fstpl
out
je
jno
dec
sbb
push
je
bound
jno
cmpsb
lcall
mov
xlat
pop
inc
sbb
sbb
and
repz
mul
add
jbe
addr16
dec
repz
sub
andb
stos
sub
shll
repnz
popf
mov
cmpsl
sarb
push
shll
sbb
mov
or
push
lods
push
and
jmp
jo
negb
push
lods
jo
cli
cmpsb
cli
shr
gs
inc
and
testl
adc
leave
or
jmp
test
add
outsl
add
in
addr16
xchg
adc
dec
shll
repz
xor
mov
scas
pop
mov
mov
lea
jae
add
es
jg
and
mov
add
or
call
sahf
cmp
jmp
lcall
pop
lret
inc
and
mov
dec
and
lret
shll
repnz
mov
rcrl
push
shl
xlat
adc
cmpsl
mov
pop
int3
rcrl
pop
mov
cmp
add
mov
shrb
lcall
sub
mov
mov
adc
adc
push
sub
lea
shll
add
or
dec
daa
jbe
icebp
test
das
loope
outsb
pop
jmp
push
ja
xorl
mov
pop
jnp
stos
enter
sbb
sbb
lret
xchg
push
pop
sbb
lock
les
fldl
mov
rcll
lods
dec
lahf
pop
pusha
pop
fld
aam
or
fstl
sub
shl
add
jp
call
jo
jnp
ja
shrl
mov
push
cmp
dec
pushf
xchg
cli
xchg
cmpsb
sbb
call
inc
sbb
imul
mov
jne
shll
repz
cmp
cs
call
sub
dec
xor
cs
insb
add
xchg
fwait
imul
mov
dec
cmp
xchg
stos
hlt
adc
cmp
push
mov
push
pop
sarl
test
in
cmc
cmpsl
mov
push
xchg
lods
rclb
shrl
and
lea
add
cld
daa
ret
mov
add
push
jbe
ret
xchg
and
jp
aad
push
pop
sbb
test
fwait
sbb
cmp
or
shll
hlt
test
fisubrl
mov
cmc
pop
add
sbb
push
mov
mov
mov
dec
or
pop
mov
xchg
ficoml
push
lahf
inc
inc
dec
xchg
idiv
mov
ret
add
pop
inc
cmpsb
stos
adc
lods
xchg
in
pop
dec
fbld
or
push
mov
inc
lds
repz
dec
inc
fidivs
inc
xchg
idivb
imul
fbld
mov
dec
or
out
loope
bound
in
in
xor
in
or
mov
xor
imul
inc
arpl
mov
sbb
xor
imull
idiv
or
dec
cmc
sub
sbb
mov
filds
nop
add
outsb
jae
fisubrs
mov
fcompl
push
jae
daa
sahf
negl
bound
orb
pushf
cli
clc
xor
cmpsb
hlt
ss
mov
sub
iret
xchg
xlat
or
inc
mov
pop
cs
mov
jg
shll
cmc
stc
pushf
shrl
jle
dec
call
shr
scas
leave
xchg
jns
xchg
das
and
inc
mov
pop
mov
add
pusha
addb
out
adc
nop
js
push
jb
int3
add
sti
inc
aas
in
sbb
repz
mov
sub
add
mov
add
enter
mov
mov
cmp
jns
mov
ffree
jle
scas
rcrb
aad
fcomip
or
mov
dec
pop
adc
filds
call
xor
sahf
cmp
out
inc
shr
popw
or
loope,pn
mov
pop
add
cmpl
pop
add
inc
push
dec
movb
call
insl
daa
and
cmp
or
adc
push
scas
xchg
mov
and
pop
mov
mov
mov
ljmp
shll
not
icebp
push
push
call
push
aam
jbe
popa
mov
mov
incl
cmp
push
lahf
pop
jb
mov
cli
adc
mov
jmp
lcall
xchg
xchg
jmp
stos
mov
sub
and
adc
mov
pop
movsl
push
inc
fistpll
inc
or
jmp
or
inc
inc
adc
adc
stos
stos
decl
cltd
pusha
push
test
filds
andl
sahf
inc
leave
pop
shll
imull
mov
and
jne
shld
sub
shr
mov
cmc
add
rcl
sub
mov
pushf
test
pushf
lea
je
bt
bt
sub
test
jmp
push
call
loop
std
jle
call
cwtl
mov
std
into
pop
call
add
punpckhbw
pop
ljmp
imul
jne
or
sub
or
and
xchg
cltd
outsl
ret
fs
pop
icebp
or
sbb
xchg
movsl
sbbb
push
int
mov
pop
jmp
sti
and
pop
dec
out
scas
cmpsb
lret
nop
mov
jae
fistpl
scas
arpl
xchg
lods
mov
mov
push
sbb
mov
loope
jecxz
cmp
pushw
adc
test
sbbl
clc
xor
movsb
movzbw
not
jmp
call
push
call
ficoml
lret
xchg
shld
xadd
mov
shl
mov
stc
xchg
shl
xor
mov
jmp
sarb
cmp
pop
dec
test
pushf
bound
pminub
push
cmp
mov
jp
fsubrp
pushf
pusha
imul
adc
mov
cwtl
scas
mov
or
adc
and
xor
inc
mov
in
mov
movsb
out
cli
shlb
fidivl
int3
ds
rorb
cmp
and
stc
out
xchg
xor
pop
dec
jns
sub
mov
pop
out
xchg
pop
mov
jno
data16
aaa
ljmp
push
mov
pushf
mov
pusha
pushl
ret
xor
push
dec
push
mov
insl
mov
repz
repz
mov
mov
popf
xchg
test
push
pusha
stc
flds
jle
and
xchg
jno
or
rcll
xor
mov
xor
mov
adc
and
jg
adc
xchg
addr16
gs
das
das
sbb
dec
dec
or
pop
fnstcw
prefetchnta
pop
lret
jmp
int
pop
mov
insl
pusha
and
mov
js
mov
xor
std
insb
adc
lods
inc
push
jmp
mov
fidivrs
in
adc
ret
shll
cli
sbb
pop
dec
push
fwait
xchg
cmp
addr16
cwtl
mov
outsb
or
jl
out
cmpb
or
pop
cmp
call
std
cwtl
sbb
sbb
pop
mov
mov
je
inc
subb
icebp
rcr
shll
cli
and
cmp
fisubs
enter
les
sbb
sbb
adc
xor
pop
mov
lods
add
stc
pop
add
das
xchg
or
fidivl
jle
cltd
cld
mov
das
adc
dec
or
push
icebp
es
inc
pop
mov
insl
mov
repz
xchg
shll
cli
lret
mov
daa
push
hlt
cmp
leave
jg
pusha
mov
cltd
cld
mov
mov
inc
rorb
notb
xchg
das
clc
fadds
je
inc
test
rolb
in
add
jecxz
shrl
cltd
add
xor
je
test
jecxz
cs
add
mov
jmpw
adc
sub
mov
pop
xor
std
cs
call
xlat
push
cs
call
jno
ret
push
call
dec
adc
cs
call
dec
jno
jmp
sbb
adc
mov
cmp
neg
add
pop
ror
and
mov
call
jmp
push
xlat
cld
and
ljmp
mov
adc
ss
or
mov
mov
sub
push
sub
out
xor
aam
ret
je
sub
push
fnstsw
mov
fildll
dec
cli
clc
sub
ret
jo
mov
push
push
inc
sti
pop
test
adc
icebp
int3
aam
faddl
out
popa
mov
sbb
push
cmpl
mov
pusha
movb
mov
pushf
popl
test
or
pushf
pusha
jmp
jle
imul
stc
test
adc
ljmp
ss
pop
jl
fwait
jp
and
sub
jecxz
imul
xor
dec
pop
xchg
dec
icebp
pop
mov
xchg
xchg
shll
cld
mov
pop
cmp
sub
pushf
pushf
movb
mov
rep
pushf
pop
mov
push
pushf
pusha
push
lea
jmp
push
call
imul
push
das
xor
loope
out
lcall
mov
imul
cmp
lcall
jp
pop
pop
jecxz
stc
lods
push
xchg
dec
mov
in
ficoms
movsb
jle
jle
aam
and
loopne
fwait
cmpsl
push
icebp
or
mov
jecxz
nop
icebp
sahf
dec
lahf
daa
push
js
jno
mov
cmpsb
pop
addr16
aam
jmp
jecxz
inc
pop
in
imul
jne
jnp
pop
add
mov
adc
mov
pop
lods
les
pop
shll
std
xchg
inc
push
inc
push
dec
xor
cs
insb
add
loopne
cld
jmp
add
mov
jge
sahf
bound
test
mov
or
andb
mov
stos
gs
dec
dec
icebp
popf
lods
xchg
test
xor
insb
push
mov
add
xor
ss
lret
and
inc
push
pop
add
jbe
out
push
jns
pop
xor
adc
inc
mov
add
cltd
shrb
cmp
lods
shll
jle
sub
ds
or
sar
xchg
out
xor
xchg
dec
icebp
lods
imul
sarb
lds
inc
das
out
push
and
sbb
in
fwait
push
test
sbb
sbb
negb
sub
rorl
shll
cld
movsb
mov
and
gs
adc
cmp
pop
outsb
push
sbb
push
cmp
xchg
nop
rorl
fnstenv
shll
std
fcomp
je
std
lock
loop
add
push
call
or
clc
adc
call
lret
fnstcw
gs
imul
outsb
addr16
add
scas
adc
into
and
iret
iret
popf
inc
xchg
call
adc
dec
cli
xchg
js
or
ret
sbb
jo
int3
pusha
fiaddl
insl
pop
sbb
mov
mov
or
dec
popf
push
in
xchg
mov
subl
sub
jae
cmp
insl
and
in
cwtl
dec
test
test
fisubl
mov
mov
dec
sbb
cmc
add
jnp
sub
mov
shll
sti
lcall
movsbl
movl
movsbl
mov
push
pushf
pushf
movb
pushl
ret
call
push
insl
adc
inc
int3
lahf
je
jo
jmp
mov
mov
cmp
xchg
lret
mov
icebp
ljmp
jbe
xor
sbb
fimull
cmpsl
cmpb
jmp
jb
cs
add
cld
fdivl
ret
mov
push
les
cli
das
test
jns
mov
dec
jg
push
mov
jb
cmp
push
repz
std
lods
in
xchg
mov
iret
or
sbb
daa
pop
push
clc
add
dec
sahf
push
call
adc
mov
std
pop
add
or
pusha
pushf
jmp
push
call
sub
dec
lcall
dec
push
call
push
cmp
call
out
adc
push
jge
jns
mov
shrb
loop
and
mov
mov
and
sbb
cmc
in
lret
clc
out
in
xorl
dec
bound
pop
lods
loope
cmp
or
mov
sub
dec
gs
shll
add
push
cmpl
or
jp
test
cmp
in
adc
pop
adc
nop
testl
sarl
rclb
aaa
jg
insb
lods
mov
lahf
rcrl
push
inc
mov
aas
jno
pop
adc
stc
orb
out
stos
sbbl
cmp
cli
sbb
xorl
pop
int
or
js
push
or
cltd
xchg
lods
imul
movsl
push
jb
cmc
insb
jne
pop
shll
add
scas
mov
div
push
das
pusha
or
mov
jg
mov
xlat
cmp
addl
fidivl
add
rclb
sbb
cmpsb
lods
add
sahf
adc
push
filds
leave
test
push
out
aad
loopne
and
mov
leave
dec
mov
jb
jbe
sub
mov
das
jbe
rorl
mov
clc
xchg
outsl
mov
out
daa
data16
js
das
jns
xchg
shll
add
pushl
rep
jmp
adc
push
popa
faddl
movsb
loop
jo
imul
mov
push
lcall
je
out
movsl
pop
cltd
pop
xchg
xor
gs
add
in
inc
push
inc
cld
and
inc
icebp
pop
aad
xchg
pop
push
stc
xchg
adc
mov
popf
clc
push
push
pop
fbld
and
bnd
stc
push
push
shrb
push
daa
shl
ficompl
cwtl
mov
in
jne
rcll
sar
in
xor
fdivrp
int3
outsl
enter
adc
ja
les
or
pop
and
mov
cli
add
in
iret
add
sbb
xchg
push
out
mov
cmp
add
add
jmp
std
sbb
push
out
rclb
xchg
push
ja
in
imul
ret
mov
jns
add
sub
aas
mov
adc
mov
push
cli
add
ret
xchg
lret
dec
push
mov
out
shll
add
insb
push
add
push
aas
lcall
repnz
xchg
imul
xchg
movsl
ret
scas
dec
cli
xchg
mov
lock
dec
sub
adc
add
push
mov
cmpsb
repz
insl
arpl
gs
nop
mov
jge
bound
mov
bound
jb
mov
scas
mov
push
movsb
lea
mov
ret
adcb
xor
cmp
cmp
das
push
dec
jle
divb
mov
jnp
xor
mov
adc
push
inc
push
add
fs
ja
push
call
repz
push
call
es
call
stos
push
call
xchg
push
lock
outsl
sub
push
int
mov
mov
sub
xchg
jno
adc
out
jecxz
fimull
ret
push
mov
das
lret
jns
pop
fmuls
pop
jo
shl
push
lcall
out
and
inc
pop
pop
adc
jmp
mov
mov
mov
fisttpll
inc
mov
lret
mov
stos
pop
mov
outsb
fcomip
sub
rdtsc
pop
aaa
repnz
mov
jae
mov
loop
insl
cmp
xchg
cmp
mov
xor
mov
into
jbe
call
push
icebp
push
call
mov
mov
mov
std
sahf
jne
call
sub
test
pushf
pusha
or
call
push
call
insl
sub
pop
mov
aas
popa
push
mov
xor
inc
loopne
dec
add
jle
xor
fcomi
mov
inc
jnp
jg
mov
jp
add
clc
add
repz
jg
xchg
mov
xchg
ss
mov
pop
or
pusha
orl
data16
insl
inc
push
int
test
sbb
test
das
mov
cmc
popf
test
fs
fadd
shll
shl
push
ja
shll
add
dec
add
rcrb
cmp
das
and
arpl
cs
lret
addl
jl
shll
inc
in
inc
arpl
cmp
mov
imul
das
jae
sbb
popa
push
fstpl
xor
cwtl
mov
push
out
int3
bound
sbb
lock
sti
jo
call
aad
pop
dec
fstpt
repz
cmp
mov
mul
mov
push
insl
push
adc
mov
shll
add
xor
jmp
les
es
xchg
out
inc
cmp
in
add
or
push
adc
jbe
mov
fisubl
and
arpl
ja
stos
push
mov
outsl
out
aam
jge
iret
push
inc
lret
sbb
mov
es
jp
sti
es
popa
out
bnd
push
lret
ret
test
push
in
pop
ja
sbb
and
mov
xor
sbbl
adc
out
inc
jne
pop
inc
idiv
stc
push
test
jg
shll
add
dec
in
cltd
call
addr16
call
leave
mov
enter
gs
cmc
test
mov
sbb
or
cmpsb
push
xchg
mov
pushf
movsb
lret
xchg
sbb
test
push
jp
and
outsl
mov
add
lret
mov
mov
hlt
in
fidivrs
clc
popf
stos
or
jmp
aaa
pusha
aam
and
xchg
jnp
sub
sub
xchg
mov
and
add
push
scas
jecxz
aas
testb
mov
jnp
pop
dec
mov
sub
shll
pop
push
mov
push
call
push
push
pop
out
pusha
movb
movl
lea
jnp
pusha
pushl
xchg
cwtl
pushf
mov
movl
lea
pop
lea
jmp
mov
pushf
setb
lea
movl
setb
lea
bswap
lea
lea
pushl
mov
pushf
movl
call
push
call
and
fs
jb
stc
bt
test
pushf
cmp
pusha
jmp
ret
cmp
ret
push
pop
pop
bound
ret
lret
in
orb
in
jno
xor
xor
arpl
int
pop
cs
divl
dec
in
push
xor
push
mov
jns
pop
mov
fistpll
scas
cld
loopne
gs
mov
jns
loop
pop
ds
insl
xor
in
fwait
xchg
dec
sub
mov
xor
mov
mov
idivb
mov
sbb
sbb
cmp
cltd
mov
sub
mov
mov
addr16
xor
sub
mov
fwait
pop
imul
test
sbb
or
cmp
or
fisttpl
mov
sub
sub
dec
jbe
imul
or
shll
or
push
mov
fstpl
fwait
and
stc
je
or
cmp
loopne
cmpl
jecxz
outsb
push
je
sbb
xchg
pop
xor
sti
jbe
in
xorb
mov
pop
pop
mov
xchg
dec
lret
and
lret
jnp
pop
sbb
aas
cli
jns
mov
or
out
ret
out
mov
cmp
jns
addl
mov
test
xchg
sti
add
sbb
pop
add
fisttps
push
iret
es
es
push
shll
or
into
stos
sbb
pop
ljmp
mov
imul
mov
lret
incb
loopne
pop
cld
jle
push
shlb
enter
push
nop
push
shrl
mov
push
fistps
inc
imul
aaa
sbb
adc
jae
mov
pop
mov
xchg
push
shll
in
push
out
aas
loope
mov
sub
xchg
out
push
or
adc
fstpl
mov
aas
ds
cmpsb
mov
sbb
mov
mov
pusha
xchg
xor
fcomp
adc
test
sti
push
cmp
cmc
pusha
sub
stc
call
xchg
not
movzbw
mov
mov
lahf
lea
mov
push
movb
mov
xchg
movb
pushf
movl
movzbl
pushf
lea
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
push
call
aad
dec
sti
jl
pop
jle
push
push
adc
add
cmc
pusha
sahf
dec
and
pusha
cwtl
std
cmp
sub
inc
lea
ja
push
js
xchg
xor
xor
pop
ret
xchg
jo
inc
jnp
fs
cwtl
xchg
ljmp
mov
mov
or
add
mov
scas
loop
adc
sbb
add
jle
cltd
and
cli
shll
or
scas
repz
pop
pushf
pusha
pushf
pushl
ret
push
call
out
inc
xor
mov
mov
push
imul
push
cmp
mov
lods
out
xchg
or
sub
int3
fwait
pushf
push
xor
jne
add
jne
daa
es
or
cld
addr16
inc
mov
xor
imul
aad
inc
jmp
push
ja
enter
pop
mov
das
nop
add
testl
adc
xchg
ljmp
and
adc
xor
sbb
pushf
adc
sbb
xor
adc
lea
pusha
movzwl
bswap
push
pusha
lea
bswap
bswap
pop
movsbw
mov
call
push
call
pop
fsubrl
jl
mov
jne
orb
mov
or
mov
in
or
pop
lock
cmpsl
ja
sub
sub
aas
xchg
insb
or
test
xor
aas
sbb
inc
leave
cli
jmp
cmc
std
loope
aaa
popf
cmc
push
jo
orb
adc
jl
and
int3
jbe
repnz
shlb
pop
jbe
into
ljmp
stos
cli
adc
add
dec
scas
push
call
nop
pop
pop
es
add
xor
sti
lcall
jecxz
ss
lea
jl
push
lea
jae
bt
jmp
push
call
inc
decl
cli
test
shlb
das
push
jg
inc
fisubl
into
lahf
addr16
daa
jl
add
test
leave
add
mov
and
sub
inc
into
loop
aas
jle
fwait
stos
xlat
jbe
mov
sub
lcall
leave
clc
test
add
dec
pop
fidivrl
rcr
or
stos
jmp
xor
cmp
insl
scas
lcall
push
mov
mov
shll
or
out
pop
popf
loopne
ret
je
jl
outsb
insl
dec
xchg
adc
repz
pusha
dec
pop
dec
jne
mov
jg
adc
popa
adcl
and
dec
repnz
cmp
jp
inc
movsl
ljmp
dec
or
xchg
imul
sbb
gs
jbe
popf
arpl
lea
call
aam
jnp
pop
data16
adc
es
int
jne
aad
lcall
pop
pop
scas
push
call
cmp
cs
cmc
adc
xchg
shl
mov
rcr
bt
rcr
mov
pushf
bt
xchg
push
not
mov
jmp
divl
jno
pop
cs
mov
rcrb
ss
jo
xchg
loop
gs
push
lods
mov
jnp
jecxz
dec
mull
sbb
aaa
fwait
orb
repnz
jmp
inc
xlat
xchg
push
xor
jl
or
push
push
xor
in
xor
ret
lcall
xor
daa
shll
nop
js
loop
mov
sbb
lret
mov
test
fsts
dec
enter
stos
xchg
jnp
inc
test
mov
xor
jmp
rcrb
clc
insb
push
jo
push
fistpll
mul
call
jbe
push
pusha
push
mov
loopne
fsubrl
xchg
sub
out
test
out
or
mov
aam
lods
pop
and
jle
jo
test
mov
cmp
adc
pushf
mov
pop
and
imul
movsb
std
lods
xor
adc
mov
pop
shll
push
add
or
cmpsb
push
sbb
sti
dec
mov
adc
pusha
lea
pop
sbb
cmpsl
or
mov
leave
or
hlt
testb
rolb
int
bound
movsl
lahf
lea
lods
sbb
pushl
mov
in
daa
mov
stos
adc
push
sbb
les
fwait
adc
aas
push
dec
mov
outsb
pushf
mov
arpl
xchg
push
sbb
mov
popf
cli
shll
push
in
call
mov
pop
add
push
call
adc
je
call
lods
repnz
mov
movsb
sbb
dec
imul
mov
lock
dec
mov
inc
add
mov
in
sarb
jl
dec
dec
pop
jae
dec
jbe
ds
mov
inc
sbb
jae
mov
xor
sahf
inc
cmp
in
in
sub
xorb
or
roll
jecxz
cmpsb
add
jns
dec
mov
nop
dec
mov
jp
das
daa
and
cmp
mov
icebp
outsl
sbb
and
mov
mov
adc
cmpl
call
fmuls
aas
jmp
in
lret
pop
push
in
inc
adc
adc
cmc
cld
inc
mov
mov
cmp
mov
nop
xchg
xchg
shl
and
popf
mov
xor
dec
outsl
hlt
dec
dec
adc
xor
cmpsl
icebp
mov
jp
ret
lods
xchg
fldt
je
dec
cmp
xor
hlt
repnz
shl
mov
push
pushf
or
fbstp
sbb
lds
sbb
stos
pop
pop
push
sub
gs
cwtl
push
xor
loopne
sete
repz
dec
xchg
xchg
enter
sbb
or
mov
popf
mov
push
mov
or
jns
popa
scas
stc
jo
shll
adc
pushf
subl
mov
pop
add
stos
add
sub
dec
mov
dec
in
insl
cmp
xchg
mov
ficompl
mov
mov
mov
dec
inc
jecxz
sub
insb
pop
repz
pop
popf
fsubs
nop
push
add
popf
ss
std
js
loop
xchg
fsubl
scas
inc
and
sbb
push
mov
push
jle
push
or
lods
fistl
scas
mov
outsb
xor
pop
inc
sub
add
rol
jge
xor
stos
int3
aad
cmp
or
add
popf
pusha
pusha
lea
jmp
adc
ljmp
sub
in
jl
je
ffreep
xchg
mov
jp
ret
and
add
mov
in
in
sbb
enter
fs
add
mov
cmpsl
bound
sub
test
lret
lea
push
std
lods
pop
sub
inc
xchg
hlt
xor
sbb
mov
sbb
lock
xchg
gs
nop
and
clc
into
testb
imul
inc
popf
jl
sbb
shll
adc
addr16
out
pop
out
add
push
sti
push
call
add
jge
dec
push
call
pop
mov
enter
movsb
popa
xchg
sarl
jno
addr16
mov
mov
jae
xchg
stos
aaa
movsb
xchg
mov
mov
cmc
pop
mov
mov
idivl
xchg
dec
lret
stos
js
adc
int3
cltd
pop
cmp
jg
xlat
stc
cltd
mov
sbb
dec
push
fs
lret
int
fldenv
bound
push
xor
insb
xchg
out
es
push
and
testb
out
mov
rclb
shll
adc
fs
inc
mov
mov
std
stos
or
js
mov
push
cmp
fwait
mov
aaa
push
mov
ret
fcomip
mov
lods
xchg
pop
outsb
insb
inc
es
das
mov
push
sbb
aam
push
les
pop
test
xor
addr16
mov
inc
lods
mov
cmp
bound
pop
pusha
shll
adc
inc
push
add
pop
stc
jecxz
int
pop
add
std
out
inc
aam
rcr
add
test
cmc
clc
bt
cmp
mov
jmp
push
call
sarb
mov
rcrb
pop
popa
mov
sbb
cmpl
rcrl
adc
fs
jno
outsl
ja
pslld
je
jno
add
xor
jmp
scas
xor
add
js
int
lret
in
hlt
xchg
call
pop
ret
lcall
dec
add
add
imul
inc
fs
jne
push
cld
mov
lods
outsl
bound
movsb
dec
xchg
scas
xchg
cmc
mov
cli
cli
cmp
jno
fmuls
out
pop
inc
icebp
outsl
cmpsb
iret
sahf
mov
or
scas
mov
shll
adc
lcall
call
xor
pusha
lea
je
push
test
bt
sub
call
not
xchg
pop
jmp
push
call
cmp
sbb
das
adc
mov
lcall
mov
mov
and
leave
dec
scas
in
call
cld
mov
cs
pop
or
jbe
xor
xchg
out
fnstenv
sub
jmp
into
scas
or
jae
ja
mov
insb
xor
in
jmp
push
cmpsb
mov
inc
test
or
cld
and
jb
dec
fcmovnu
pop
mov
and
div
cmpsl
lcall
lahf
inc
inc
scas
pop
adc
cwtl
jo
xor
sub
ja
ja
sbb
stos
adc
sbb
movsl
loopne
add
mov
push
sbb
enter
js
pop
mov
aas
das
in
cld
pop
xor
gs
xor
mov
lock
jl
lahf
xchg
test
ret
xchg
inc
jae
ds
mov
push
sub
fs
push
adc
xchg
xor
scas
lret
push
sbb
repnz
pop
dec
mov
pop
mov
mov
sub
lods
aad
jb
push
std
jb
pop
mov
push
out
sbbl
mov
pop
sub
pop
mov
jmp
and
out
xchg
pushl
push
into
pusha
rcl
xor
cmc
mov
pop
mov
sbb
test
cltd
sub
inc
dec
fbstp
xlat
mov
push
xlat
jb
loopne
mov
adc
scas
lret
test
mov
arpl
ja
add
sahf
sti
scas
sub
repz
ss
fnstsw
out
stc
push
movsl
cmc
and
les
fldt
mov
add
fs
call
clc
pushf
cmp
call
jp
push
clc
and
mov
sub
jae
repz
and
xchg
add
std
cmpsl
cmp
outsb
mov
xchg
add
add
cmp
add
popa
ss
incb
push
rcrb
fstps
test
push
push
adc
jle
cwtl
loop
mov
scas
dec
sbb
sub
jge
xor
inc
dec
sub
out
add
push
lret
pop
add
mov
pop
jle
adc
mov
nop
incb
sbb
mov
xlat
cld
data16
mov
fcomip
repz
and
lcall
stc
imul
jle
jno
push
filds
in
in
out
insb
test
jnp
in
mov
hlt
add
pop
shll
push
rorb
sbb
outsl
sub
negb
lods
addb
push
fst
inc
xchg
fcompl
lea
ret
jb
mov
sbb
inc
ljmp
test
push
jb
rclb
add
inc
add
cmp
xor
cmp
xchg
jp
fldt
icebp
mov
or
ds
in
js
test
pop
scas
mulb
or
pop
add
fildl
pusha
xchg
cmp
shl
xor
pop
or
shll
pop
xor
sbb
fldenv
rclb
call
inc
or
add
mov
int
out
push
psubq
in
aas
push
and
xor
cld
stos
mov
ret
fcmovnbe
das
add
stc
xor
pusha
ja
stos
ret
push
ret
mov
pop
mov
icebp
leave
fisttps
popf
and
bound
add
xor
pop
flds
xor
xor
int
jae
loopne,pt
fs
ljmp
dec
cmp
adc
mov
adc
xor
call
sub
sbb
and
inc
shlb
push
sbb
sub
enter
js
arpl
es
push
rol
subl
or
mov
je
push
or
dec
repz
cltd
cmp
xor
int
aaa
inc
test
xchg
mov
mov
fwait
xchg
xchg
gs
inc
jae
repnz
pop
rcl
xor
sahf
stos
dec
call
popa
adc
push
ljmp
lods
xor
mov
push
jl
jmp
adc
sub
push
lods
push
cmc
clc
lods
enter
sub
in
leave
add
pop
stc
addr16
inc
push
movsl
orl
pop
xor
mov
ds
mov
loopne
popa
cmp
xor
out
xchg
in
push
pushl
jmp
inc
and
xor
test
inc
int
cmc
or
ljmp
scas
or
xor
pop
cwtl
cmp
out
inc
popa
inc
xlat
cld
in
loopne
lock
hlt
push
mov
add
popl
aas
movsl
aaa
shlb
lret
mov
ret
jb
xor
xchg
rolb
daa
push
les
jbe
lock
pop
ljmp
aaa
in
cs
scas
ret
test
cli
lret
insl
add
jmp
fmul
mov
sub
inc
shll
sbb
inc
cmpl
inc
pop
shrb
les
inc
sub
mulb
xchg
sbb
sub
outsb
test
push
dec
adc
inc
cwtl
outsl
mov
mov
sub
push
push
mov
out
int3
in
addl
adc
jp
adc
push
stc
call
in
inc
pop
ljmp
test
movsb
sub
test
fcoml
stc
fsubr
mov
sub
xor
aad
ljmp
js
aaa
js
aas
fldcw
lahf
push
fwait
shll
sbb
dec
loop
pop
dec
add
xor
mov
mov
in
clc
sub
dec
data16
cmp
mulb
fwait
pop
lods
call
or
sti
adc
cmp
daa
and
mov
int3
add
insb
mov
jne
xchg
and
inc
dec
mov
push
dec
pushf
cmp
shrl
clc
xchg
or
and
jle
xchg
loopne
xlat
add
push
js
sbb
mov
shll
sbb
mov
movsb
mov
loope
dec
pushf
jp
cmpl
popa
clc
aad
sbb
mov
stos
pushf
fimull
push
cwtl
push
in
pop
popf
ja
addr16
add
in
jl
test
or
pop
insb
dec
inc
pop
mov
into
xchg
inc
add
mov
cwtl
subl
lods
js,pt
pop
sarb
rol
dec
insl
jmp
sub
adc
lock
out
inc
jbe
shll
sbb
and
ja
pop
jne
cwtl
mov
mov
cwtl
push
ret
cmp
jp
and
mov
adc
iret
pop
xor
or
push
bound
mov
out
or
sub
cld
ds
fs
jg
call
mov
and
cmp
mov
jmp
inc
jecxz
jge
xchg
push
xchg
pop
scas
mov
imulb
fwait
mov
pop
sub
mov
cmovno
mov
out
cltd
push
xor
xor
call
and
je
pusha
pusha
jmp
mov
inc
jne
fidivs
jmp
jg
fs
add
lds
or
ds
xor
xchg
and
inc
add
rcrl
cmc
in
jmp
and
cs
and
test
lds
inc
dec
fs
xor
lret
xor
in
shr
add
lret
loopne
int
jge
ja
inc
adc
push
sbb
lods
lahf
repz
xchg
jecxz
jns
fistps
push
or
mov
or
aam
jecxz
shll
sbb
sbb
push
call
cmp
jb
xor
hlt
inc
and
mov
ja
dec
cltd
cltd
aam
lret
insb
mov
fldt
sbb
push
sbb
subb
movsl
test
ljmp
rorb
and
ret
stos
out
shlb
lret
or
insb
dec
sti
pop
fs
cmp
sarl
je
int
clc
cmp
sbb
pop
lds
ljmp
xor
xlat
cs
or
es
xor
decb
push
call
in
stc
push
mov
pusha
test
clc
mov
bt
or
call
daa
cmp
imul
shlb
fiaddl
and
sub
add
aas
shr
out
ret
sbb
jmp
std
ljmp
in
ret
sbb
in
and
cmp
ror
call
fisttpl
lret
out
pop
jbe
sub
xlat
mov
cltd
movb
xchg
pop
add
and
add
inc
mov
repz
cmc
push
mov
sbb
fwait
in
dec
mov
jp
xchg
int3
push
or
jp
or
sub
ds
mov
scas
enter
fs
sbbb
fmull
xor
jno
repnz
insb
bound
scas
adc
jp
movsb
out
pinsrw
dec
cmp
jb
fs
inc
out
mov
imul
pop
mov
cwtl
fadd
push
add
mov
xor
mov
fsubl
pop
xor
das
inc
sbb
sarl
push
shll
push
bound
push
mov
lea
je
call
movl
pushl
movb
jmp
into
imul
inc
jae,pt
lret
adc
mov
ret
jl
test
ds
jbe
lret
cltd
jae
mov
addb
loope
push
andb
jp
push
mov
sbb
setns
mov
insl
and
ljmp
xchg
jne
xor
movsb
insb
adc
divl
pop
lods
outsb
test
mov
or
or
in
jmp
repz
fidivrl
fwait
or
push
ljmp
jecxz
std
xchg
lea
inc
outsb
sbb
jno
cwtl
xor
cmp
arpl
fadds
fldcw
jmp
test
lock
or
inc
lahf
cltd
dec
inc
mov
xrelease
aam
fwait
cmpsl
in
cmp
in
cmp
shll
or
dec
pop
in
add
mov
xchg
dec
dec
bound
xor
sbb
sub
xchg
or
je
push
test
add
sti
xor
shll
addr16
mov
mov
mov
fstpl
shll
pop
push
jo
xor
pop
dec
fwait
popf
sbb
gs
sarb
sarl
mov
mov
and
out
adc
inc
stos
aam
push
std
out
adc
stos
cwtl
add
or
sbb
sub
mov
and
cmp
into
or
lods
ret
mov
cmpsb
dec
pop
inc
fcmovnu
out
jp
cli
fwait
jne
cli
shll
pop
enter
cli
mov
shrb
xor
addl
push
mov
roll
sbbl
pop
jmp
xchg
lahf
pop
and
test
cmp
mov
cwtl
out
std
test
into
lret
add
fadd
lea
mov
pop
push
and
add
mov
push
fmull
adc
out
je
fsts
sbb
adc
fbstp
ja
enter
mov
xor
test
xchg
push
call
jg
cmp
push
pushl
push
movb
lea
jmp
push
call
pop
ja
fstpl
movl
mov
adc
or
cmp
fnstenv
lret
jp
lods
je
jns
jp
dec
adc
shlb
sub
sti
push
push
push
jmp
jmp
push
stc
sbb
mov
and
int3
hlt
aam
jo
and
mov
addr16
aad
xor
popf
imull
sub
adc
test
mov
jge
mov
fsubrl
mov
dec
mov
dec
fwait
cmpsb
shll
and
std
mov
jmp
testb
cmp
addl
loopne
pop
cmc
cmpb
sub
adc
out
adc
cli
adc
test
sar
mov
push
outsb
lods
sahf
xor
roll
sbb
sub
out
jecxz
dec
aad
stos
div
inc
sbb
push
push
popa
imull
shll
and
mov
push
fs
add
or
sar
sbb
adc
pop
into
cwtl
jne
test
das
sub
dec
inc
movsb
mov
xor
arpl
mov
xor
mov
cmp
mov
out
lret
ss
dec
push
mov
push
cli
xor
jmp
adc
sar
in
add
jns
mov
call
sbb
clc
push
add
pop
int
push
dec
imul
ljmp
and
jns
fstps
add
ja
add
xlat
in
repnz
test
int3
shll
out
imul
iret
push
push
push
shr
jp
mov
xchg
mov
cld
daa
jecxz
adc
mov
xchg
arpl
adc
jne
dec
out
data16
dec
push
lahf
cmpsb
jo
cmc
cltd
roll
cs
data16
dec
jne
fnsave
add
shll
and
loop
mov
dec
rorb
jno
jg
mov
xchg
adc
cmp
arpl
ljmp
daa
mov
xor
lret
ljmp
into
cmp
and
inc
push
addr16
add
int3
or
aas
hlt
push
js
test
push
or
adcb
add
mov
push
sbb
je
jb
scas
lcall
push
fwait
sar
dec
cmp
mov
and
jne
movsl
movsb
loop
in
sub
and
xor
mov
mov
decb
mov
std
pop
insb
loop
adc
add
fisttpll
xor
push
add
pusha
xchg
push
add
pop
js
shl
out
ss
mov
lcall
outsl
movsl
push
cmc
sbb
add
xchg
fcmove
cmp
mov
add
push
push
mov
sub
pop
icebp
stc
adc
dec
sub
stos
xorl
int3
nop
adc
add
aas
sbb
repnz
cmp
lret
mov
push
jo
and
add
add
movsl
mov
fnstcw
xchg
and
and
adc
stc
mov
sbb
xor
mov
xchg
scas
arpl
popf
cld
testb
into
jecxz
jnp
mov
and
nop
es
call
dec
xor
push
dec
mov
cmc
dec
and
insb
adc
and
adc
mov
adc
push
mov
mov
pusha
push
jg
fdiv
jg
and
fildll
jae
dec
cld
add
sbb
lods
test
xchg
cld
mov
xor
jb
sti
push
in
jnp
xor
aas
aam
das
add
jns
leave
mov
cmp
cmp
adc
mov
or
add
mov
dec
or
shll
and
xchg
in
lcall
pop
sbb
in
daa
imul
and
fsubrl
cmpsl
sub
int3
mov
mov
push
cwtl
divl
fdiv
adcl
sbbl
shlb
movhps
sub
pop
cwtl
mov
shll
and
jmp
cltd
sahf
aaa
out
xchg
mov
movsl
jnp
cwtl
pop
push
xchg
sarb
cs
push
mov
data16
inc
or
adc
gs
jo
push
add
mov
mov
inc
stos
inc
or
call
gs
jmp
inc
mov
shll
stos
cmp
test
mov
dec
mov
jo
xor
dec
pop
fisubl
sub
sbb
cltd
test
mov
sub
sti
cli
mov
cmp
xchg
shll
and
std
pop
sub
call
mov
stos
adc
jmp
mov
and
and
loope
sub
imul
cli
enter
adc
stc
hlt
ss
stc
mov
mov
push
repz
push
or
aad
repz
sub
fs
jle
cltd
push
loope
mov
jecxz
fisubs
mov
out
dec
or
jbe
push
pop
sbb
dec
js
jge
cmpsl
xchg
jg
mov
dec
repz
inc
jp
push
stos
lret
mov
pop
jge
movzwl
add
inc
shl
neg
mov
stc
call
stc
pushf
sub
sub
jp
cmp
call
jo
adc
push
and
dec
repnz
add
sbbl
mov
popa
xor
cmp
out
sub
mov
push
pop
xchg
sbb
outsb
mov
cmp
lods
xor
sbb
xchg
add
add
cmp
sub
lahf
pop
mov
loope
jb
sbb
push
xor
or
arpl
dec
dec
pop
xchg
dec
jle
xor
lea
and
mov
push
cltd
cmpsl
sar
es
shll
daa
mov
test
and
shl
jmp
mov
pusha
movl
jmp
sahf
add
sbb
push
daa
sub
stc
gs
bound
rclb
out
imul
pop
shlb
fneni(8087
push
arpl
sbb
dec
mov
and
xor
dec
inc
dec
pop
sub
cmc
test
fmul
jge
testl
xchg
xor
repz
imul
inc
les
fdivr
adc
icebp
les
mov
xor
div
mov
mov
daa
mov
clc
dec
ljmp
es
xor
or
in
jl
inc
movsb
pop
xchg
xchg
jl
pop
lret
fildll
add
pop
inc
lcall
repz
out
xor
push
mov
push
imul
das
loope
sbb
pop
push
loopne
lea
cmpsb
sahf
adc
push
pushf
pushf
stos
je
js
repz
js
nop
cmp
or
scas
cltd
lds
hlt
cs
aas
lret
inc
jle
test
in
sub
js
jno
imul
loope
ret
push
ss
push
xor
xor
out
fidivs
mov
addr16
lods
fistpll
unpckhps
jmp
fs
cmp
sub
mov
xor
pop
push
out
dec
add
and
push
hlt
mov
data16
or
ss
scas
lods
push
mov
out
xchg
jb
std
xor
add
and
add
jl
pop
dec
jp
cltd
les
add
pop
nop
dec
adc
xchg
xorb
fmull
cmp
test
or
gs
subl
inc
push
jno
dec
aam
test
lea
scas
xor
mov
lods
add
jae
lods
hlt
pop
pop
out
jno
jo
pop
scas
pop
idivb
push
jno
push
dec
inc
dec
dec
xor
cs
insb
add
sahf
movsb
iret
call
mov
and
pop
jge
test
sbb
jno
lcall
cmp
dec
add
mov
scas
js
icebp
aaa
push
xlat
in
push
roll
sbb
sbb
inc
andb
pusha
cmpsl
mov
or
or
incl
in
adc
into
dec
das
ds
out
sbb
mov
leave
push
lahf
push
sbb
and
inc
fcmovbe
jmp
jo
cmp
cli
rcr
inc
in
sti
mov
or
enter
sbb
out
or
stc
jg
add
int3
lcall
lcall
or
pop
mov
das
orl
fnstenv
cs
mov
add
push
pop
pop
mov
cmpsb
pop
dec
mov
jle
adc
insl
jno
xchg
imul
ss
cmpsb
pop
repnz
das
out
cmp
in
mov
pop
shll
sub
int3
mov
mov
out
xlat
xor
jno
inc
adc
jb
psubb
nop
daa
enter
xlat
jne
addl
ficomps
or
lds
dec
xor
and
and
stos
jmp
add
xor
sbb
or
and
out
in
or
sahf
pop
imul
jecxz
inc
mov
xchg
mov
movsl
cmp
xchg
pop
pop
fadds
and
shll
sub
repnz
in
lret
inc
outsl
leave
orb
shr
and
mov
pushf
sub
daa
sti
fisubl
out
xor
fistpll
divb
and
adc
sub
push
pop
outsl
jno
inc
stos
dec
fisubrl
push
cltd
jp
loope
sbb
out
dec
test
mov
sub
adc
test
pop
jl
clc
and
add
subl
es
aas
sbb
mov
mov
mov
dec
inc
mov
xchg
iret
dec
and
and
imul
cmp
fwait
push
mov
pop
insb
pop
mov
mov
jae
shl
rclb
xor
sub
or
outsl
insl
dec
or
jns
sbb
notl
mov
negl
adc
imul
add
xchg
pushf
or
pop
shll
sub
mov
dec
call
cmpsl
xchg
stc
jae
cwtl
mov
fcompl
out
call
push
je
fldenv
lods
mov
adc
daa
lret
push
mov
fstp
cmp
pop
jg
flds
jge
iret
or
loope
lods
test
inc
xchg
sub
push
sub
nop
ror
test
mov
fisubl
or
and
inc
stc
push
mov
pop
daa
imul
lods
shll
sub
push
jl
std
out
dec
out
mov
push
push
call
cli
movsl
js
sti
add
je
add
mov
lea
je
push
pushf
lea
jmp
test
test
pushf
lea
je
cmp
add
push
pushf
cmp
pushl
movw
lea
jb
cmp
clc
push
jmp
add
push
adc
push
adc
xor
adc
sbb
inc
add
adc
add
add
pop
cmpsl
xor
and
fnstcw
addr16
push
mov
cltd
adc
mov
inc
pop
aad
test
xchg
outsl
out
stc
mov
jns
pop
cld
sub
mov
cmp
into
dec
test
sub
mov
jecxz
ja
sahf
or
mov
ret
and
mov
enter
loopne
cld
lahf
sbb
sahf
pushf
test
mov
or
xor
adc
sbb
loopne
xchg
data16
push
stc
cwtl
ficoms
shll
sub
add
imul
jo
jb
dec
gs
fs
sub
or
mov
pusha
stc
pusha
cmc
shl
pushl
lea
jge
pusha
lea
je
jmp
das
mov
repnz
and
clc
out
pop
pop
mov
sbb
pop
enter
sbb
lret
pop
cltd
mov
ja
or
dec
jge
push
and
jp
lret
sti
outsb
mov
xchg
or
shrl
cmp
add
ret
cmp
sub
sbb
mov
lcall
adc
addr16
add
pop
outsl
adc
movsl
andl
sub
loop
mov
test
stos
movsb
aad
inc
mov
shll
mov
mov
shr
js
pop
add
aad
jns
push
ret
adc
pop
sub
mov
lcall
call
mov
mov
inc
cmp
movsb
sub
and
stos
fs
enter
xor
loope
push
mov
sbb
mov
and
cmpsb
xchg
fucom
pop
in
sbb
popf
iret
or
jbe
mov
jg
jb
jae
dec
std
flds
iret
push
cmc
jp
stos
sbb
test
mov
cmp
jb
push
call
fldpi
inc
mov
cmp
push
hlt
jmp
pop
sarb
cwtl
adc
imul
or
nop
ja
push
jno
jl
test
scas
jecxz
pop
dec
loopne
aad
fildl
xorl
jo
xorl
jno
aas
xor
les
add
push
ds
push
lret
add
adc
loope
dec
pusha
aaa
mov
mov
push
ja
xor
dec
mov
push
call
lock
push
call
push
inc
clc
pusha
pushf
pushl
xchg
call
gs
inc
cmp
popa
pop
ficompl
sub
cmp
ret
ljmp
shll
xor
mov
push
call
andl
shrl
cs
call
test
in
xchg
sub
or
cmp
nop
ret
scas
filds
aaa
movsb
pop
and
out
pop
cmp
lret
test
mov
lds
mov
dec
pop
and
pop
lret
cmpsl
add
mov
in
mov
pusha
sbb
sub
and
out
or
lods
xchg
inc
push
jns
mov
insb
mov
sbb
xchg
mov
or
aad
js
rorb
rcl
cmp
adcl
push
jg
popl
sbb
xor
pop
js
push
call
mov
iret
dec
dec
shrl
mov
faddp
pop
sti
mov
xor
lds
fidivrs
ss
mov
push
dec
dec
xor
in
and
fs
loope
sarb
addl
add
fldlg2
fwait
pushf
call
or
idivb
mov
or
nop
jb
pushf
push
pushf
shl
mov
in
lcall
aaa
adc
add
scas
fst
xor
dec
dec
sbb
int
mov
addr16
mov
adc
and
sub
mov
pusha
cld
nop
pop
mov
xor
bound
outsl
inc
ljmp
adc
shlb
dec
scas
dec
inc
scas
iret
xor
outsb
sub
push
dec
addl
fdivl
xor
cli
push
test
pop
push
ss
adc
leave
mov
testl
mov
xchg
mov
cmp
shr
xchg
out
or
or
xor
mov
adc
loope
push
jnp
mov
inc
dec
inc
cmp
xchg
mov
inc
fwait
push
dec
pop
pop
xchg
or
push
lret
pop
movsb
mov
pusha
rclb
nop
adc
or
dec
xlat
inc
push
lcall
loopne
mov
sub
inc
mov
scas
lods
rorb
inc
test
push
outsl
lcall
scas
dec
jbe
jae
bound
lret
mov
xchg
sub
xorb
sti
fisttpll
faddl
push
mov
fwait
xorb
push
mov
jmp
cmpsb
orl
int
mov
lret
repz
shll
int3
xor
sbb
loope
mov
loopne
push
or
cmp
repz
push
adc
sub
mov
xchg
jno
cmp
clc
mov
cmp
loope
pop
cli
sub
cmp
mov
int3
or
pop
cmp
arpl
nop
inc
dec
nop
adcb
cltd
pop
push
adc
xor
mov
inc
xchg
insb
lret
mov
je
psrld
orb
adc
nop
jmp
ljmp
push
jnp
icebp
insb
imul
xchg
mov
adc
xorl
orb
sbb
imul
dec
pop
mov
std
mov
filds
mov
jge
popa
mov
lcall
sbb
adc
push
bound
xchg
js
jnp
pop
stos
add
lret
ud2
neg
pop
popf
inc
lahf
int
mov
int3
mov
push
popf
jo
lods
mov
mov
and
pop
inc
inc
jae
and
stos
ljmp
push
push
xor
loop
or
pop
lahf
sbb
jmp
repz
rcrl
mov
lock
jl
or
or
adc
sbb
xchg
sbb
pop
pop
mov
xchg
lret
daa
sahf
mov
mov
pop
lods
into
xor
jmp
mov
arpl
push
sub
into
pusha
jl
or
pop
adc
call
push
xchg
sbb
into
sarb
lcall
xchg
fldl
icebp
fimuls
outsl
inc
pop
sarl
push
push
sbb
jle
ss
cli
int3
pusha
jbe
lcall
or
sbb
daa
mov
push
pop
mov
add
bound
mov
clc
push
add
lret
cmp
mov
mov
jb
dec
js
leave
xchg
sub
dec
fdivrs
aad
repnz
inc
dec
sub
or
xchg
adc
test
mov
pop
xchg
test
addl
aas
cwtl
in
inc
pop
lret
mov
jg
aam
pop
sbb
mov
jle
outsb
xlat
loop
je
mov
sbb
dec
cli
lret
in
cmpsb
jmp
ja
sub
inc
xchg
fisttps
mov
and
and
mov
and
std
dec
sbb
imul
daa
adc
stc
outsl
or
sub
jne
imul
mov
repz
mov
sti
adc
iret
fisttpl
frstor
popa
cld
mov
icebp
daa
ret
fldl
hlt
push
movsl
adc
mov
jl
inc
dec
into
xor
push
daa
pop
hlt
lcall
cmp
mov
test
ljmp
jp
pop
in
popf
add
xchg
dec
daa
jecxz
loope
rcrl
pop
popf
out
and
jle
xchg
cmpsl
cmp
hlt
jno
pop
jnp
mov
or
fstpt
fs
jecxz
jle
or
ret
mov
lret
int
sbb
mov
sub
aam
out
insl
nop
mov
imul
mov
fimuls
bndstx
nop
rcrl
pop
gs
mov
adc
cmp
pop
das
fstpt
stos
xchg
add
adc
sbb
mov
pop
fnsave
push
dec
sub
sub
loopne
sub
xlat
movsl
and
sbb
mov
insb
data16
lea
int3
rolb
sbb
dec
daa
mov
iret
cmc
or
dec
jnp
js
sbb
adc
stos
nop
je
ret
fisubs
nop
add
loop
cmp
aas
out
xchg
xchg
pop
sbb
pop
push
leave
arpl
lret
daa
jle
outsb
xor
mov
cmpsb
push
xchg
bound
aam
rcll
jge
sbb
pop
aam
rcrl
push
xor
and
loop
arpl
mov
jecxz
adc
xchg
xor
out
sub
out
add
inc
add
sub
xchg
and
inc
adc
shlb
mov
cmp
mov
pop
xor
bound
adc
adc
and
pop
xor
lret
out
pop
jnp
pop
data16
or
into
push
psubsb
fimull
adc
cwtl
push
jo
daa
pop
addr16
push
imul
mov
shlb
lcall
mov
dec
inc
aad
sbb
sbb
and
imul
cld
nop
lds
shlb
fstl
inc
sub
xor
sbb
testl
addr16
pop
les
or
adc
scas
push
inc
sub
push
mov
xchg
jmp
jno
loop
out
push
lahf
push
and
scas
add
pop
test
mov
rep
mov
jnp
xchg
outsl
loop
xchg
dec
imul
mov
mov
jge
fiaddl
xlat
pop
dec
mov
mov
dec
test
daa
call
adc
lods
pop
jp
or
cmp
repz
stos
movsb
cmp
dec
xor
hlt
inc
adc
out
test
rdmsr
dec
arpl
and
mov
int3
xor
lea
dec
cmp
push
adc
adc
mov
mov
lahf
mov
pop
es
inc
jne
mov
loope
sbb
mov
popf
ss
pop
and
inc
push
bound
sti
popf
fwait
movsl
cmp
lock
shl
rorl
or
in
push
push
fwait
adc
in
imul
push
adc
in
xor
lods
iret
adc
cmpsb
xor
and
subl
mov
mov
cmp
xchg
cmpsb
stos
sbb
leave
mov
sbb
adc
lret
divb
cmp
shll
in
stos
out
sub
push
nop
mov
sub
inc
pop
adc
add
pop
mov
sbb
xor
les
dec
out
orb
sbb
daa
and
pop
adc
xchg
imul
ja
mov
sbb
sbb
sbb
fmull
pop
dec
mov
push
adc
push
inc
sbb
or
pop
or
pop
pushl
mov
cld
inc
inc
js
push
sbb
pushf
movl
pop
fidivs
sub
adc
mov
insb
xor
or
in
push
loope
and
jb
add
mov
adc
jmp
dec
loop
cmp
icebp
sbb
inc
cmp
int
cmp
adc
sub
notb
or
rcrl
mov
lods
jmp
cltd
out
mov
stos
cmp
adc
fwait
pushf
pop
sar
lret
push
and
add
outsb
xchg
sbb
push
inc
mov
or
mov
mov
mov
adc
sbb
lock
daa
mov
sub
mov
rorl
or
cmp
inc
and
mov
mov
sub
lods
adc
mov
jecxz
dec
mov
pop
xchg
movsb
test
int3
lret
jmp
and
pop
stos
dec
in
pushf
mov
insb
sbb
sbb
sbb
arpl
pop
fs
loope
sarl
pusha
nop
cmp
adc
and
sbb
or
sbb
xorl
sbb
addr16
in
xchg
push
aam
add
sbb
push
push
jo
cltd
pavgw
inc
pop
jl
dec
fs
or
pop
and
imul
cmpb
mov
call
jbe
jne
push
add
dec
jp
pushf
and
xor
loope
sub
adc
lea
out
sahf
and
in
dec
push
adc
mov
out
pop
fstpl
mov
jae
shl
mov
add
arpl
mov
inc
lds
in
xor
dec
add
int3
shll
lcall
xor
inc
push
jmp
xchg
int
push
sub
ljmp
imul
push
lret
cld
call
xchg
daa
inc
ss
inc
mov
adc
ja
ret
shl
fsubr
pop
lods
pop
push
inc
mov
mov
and
movsb
sbb
stos
adc
sub
inc
rolb
lahf
sbb
pop
add
out
sbb
into
pop
aas
push
cs
jp
call
ret
mov
pop
popa
ds
xchg
cmpsl
mov
or
or
ret
dec
sahf
daa
adc
call
rsqrtps
jg
adc
lahf
in
int3
inc
sbb
aaa
fimull
out
mov
adc
clc
mov
mov
ss
sub
loop
pop
jbe
sbb
sbb
aas
and
mov
repz
pop
mov
adc
jnp
cmpxchg
push
cmp
xor
fstpl
mov
dec
pop
xor
mov
inc
inc
subl
repnz
jge
cmp
arpl
cli
cmp
add
scas
dec
dec
fists
push
jnp
pop
adcl
bound
fcmovbe
pmuludq
mov
cli
imul
loop
push
in
mov
sbb
xchg
mov
mov
lds
addb
push
cmp
cwtl
bound
test
loop
sub
sub
loopne
clc
stos
dec
xor
and
xchg
js
imul
cs
cmp
or
bound
adc
mov
out
pop
sahf
lods
xchg
inc
pop
sbb
xor
test
lods
sbb
sbb
dec
into
sti
push
or
je
push
setp
mov
xchg
jnp
fstpt
mov
xor
pop
loop
cmp
jne
mov
jno
inc
sahf
arpl
loop
ds
dec
sbb
adc
mov
fsubrl
pushl
dec
mov
and
outsb
jmp
mov
insb
loopne
add
aaa
icebp
sarl
lds
pop
dec
mov
lods
push
sbb
stos
fwait
inc
test
sub
cmp
dec
aas
push
mov
push
ret
nopl
stos
sub
lret
std
bound
int
jae
and
sbb
arpl
mov
pop
inc
and
popa
jle
mov
fwait
mov
sar
xchg
out
jnp
sbb
inc
bound
pushf
xor
ljmp
pop
push
fmul
test
mov
rcrb
and
mov
and
imul
pop
add
scas
notb
push
or
rcrb
lahf
out
dec
and
inc
loopne
stos
scas
outsl
and
sub
or
mov
push
jge
push
pop
dec
sar
pop
pop
or
mov
gs
push
repnz
ja
inc
lret
jg
stos
mov
jg
mov
jbe
call
mov
mov
dec
jge
sub
out
imul
or
pop
sub
inc
dec
pop
pop
adc
jmp
pop
or
inc
sbb
dec
out
jmp
pop
xorb
shl
aad
adc
popa
mov
mov
xchg
mov
and
mov
cmovo
out
cmp
pop
cmp
dec
mov
jp
gs
enter
test
mov
sub
out
xor
mov
and
add
cmp
out
push
aad
adc
cmp
lcall
insb
cmp
hlt
movsb
adc
and
inc
test
xor
ljmp
test
mov
add
or
adc
cmp
sbb
xor
cmp
sub
pop
jno
call
pop
push
popa
sub
insl
aaa
in
xchg
push
popf
adc
lods
or
cmc
xchg
or
idivb
inc
insb
push
daa
enter
sti
mov
inc
jae
cltd
cmp
xchg
popl
or
adc
dec
jb
jmp
and
dec
inc
adc
mov
jg
scas
popf
scas
scas
add
pushf
cmp
movsb
or
mov
shrd
mov
lds
das
xchg
mov
inc
daa
ljmp
repnz
popf
cmp
repz
sbb
mov
jno
sbb
jae
sub
pop
ds
cmp
mov
ljmp
repz
loop
xor
mov
push
stos
and
lods
xor
sbb
lock
and
and
hlt
xchg
sbb
pop
imul
into
jnp
loop
mov
add
push
movq
fwait
test
sbb
daa
cmp
ret
cs
fs
or
test
xor
int3
sub
dec
or
mov
jl
in
push
test
or
sbb
and
cmp
sbb
sub
adc
lcall
adc
ds
sarl
pmulhuw
xchg
push
sbb
cwtl
inc
inc
daa
lret
pop
adc
addr16
push
jo
sub
pop
stos
fidivl
scas
bound
xchg
pop
xchg
push
mov
lret
xchg
inc
dec
and
sub
clc
dec
fistpll
cmp
adc
daa
loope
jg
jle
mov
or
out
pop
cmp
or
pop
mov
push
push
loope
pop
add
pop
adc
inc
lahf
mov
mov
aas
mov
jne
fnstcw
in
clc
int3
popf
mov
xchg
pop
adc
imul
adc
or
cmpb
loope
aas
in
pushf
mov
popf
cmp
mov
jle
mov
mov
push
into
fs
dec
sub
sbb
sti
imul
mov
and
cli
out
mov
arpl
mov
sub
inc
or
adc
pop
xchg
push
push
mov
iret
jmp
lret
in
and
shrl
push
fimull
mov
xchg
xor
dec
aaa
popf
ljmp
out
frstor
fstl
fldenv
adc
and
pop
sub
inc
lock
dec
psraw
mov
out
sub
pop
inc
sub
push
lds
ret
jle
adc
sbb
xor
loop
pushf
xchg
dec
popf
fwait
and
sbb
frstor
sti
pop
cmc
inc
or
test
in
pushf
sbbb
je
mov
cmp
bound
daa
jmp
cmc
jle
addr16
xor
rcll
adc
jle
push
and
mov
xlat
fdivrl
xchg
sbb
sub
cmp
ljmp
pop
cltd
add
cmp
xorl
aas
fldl2e
jno
lcall
cmp
std
sbb
xorl
sbb
jbe
xchg
lock
jb
or
and
repz
sbb
loopne
mov
dec
push
shrb
mov
test
adc
lret
popf
xorl
call
and
xchg
repz
cmp
stos
mov
sub
pop
dec
lods
pop
out
dec
ljmp
out
imull
or
xor
daa
outsl
imul
cmp
dec
mov
and
inc
inc
xchg
cmpsl
adc
adc
fwait
mov
or
dec
aas
adc
push
idivb
dec
lods
out
push
dec
adcl
hlt
mov
insb
popa
das
imul
insb
add
mov
adc
lcall
jl
aaa
adc
xor
lods
sub
inc
push
in
jnp
outsl
lahf
sub
call
xor
and
lea
in
scas
xlat
aaa
dec
adc
push
adc
add
mov
sub
out
in
push
mov
fnstsw
mov
or
bound
stos
xchg
push
daa
fsub
sub
dec
pop
imul
push
fstps
icebp
aas
or
dec
pop
adc
push
divl
cmp
or
mov
outsb
insb
mov
dec
push
inc
mov
js
decl
cmp
mov
and
sarb
rcl
ljmp
mov
outsl
sub
dec
and
stos
movsb
inc
push
jmp
ds
mov
mov
mov
inc
mulb
mov
xchg
push
insb
enter
and
mov
and
aad
mov
lret
adc
ret
dec
push
xor
in
pop
in
into
mov
std
or
imul
mov
stos
fnsave
cwtl
lahf
xchg
jl
or
test
cld
inc
mov
or
in
mov
scas
daa
pop
pushf
lcall
push
lret
ror
lods
aaa
iret
adcl
xrelease
ret
add
sub
sbb
inc
ss
pop
xchg
adc
mov
lret
fs
in
inc
xor
mov
stos
adc
adc
sub
xor
push
xchg
aad
mov
daa
pop
xchg
insb
out
js
jge
mov
lds
hlt
or
loope
add
jns
dec
repz
mov
cmp
cmp
sub
call
add
cmpsb
add
fcoms
lret
insb
int
and
xor
or
imul
in
movsb
jg
test
popf
das
fcoms
ficomps
stos
and
pop
cmp
mov
mov
daa
addr16
adc
sub
adc
or
jnp
cmp
cld
pop
xchg
xor
inc
gs
cli
add
scas
xchg
push
mov
cmp
mov
movsb
mov
test
xor
xchg
cmp
rcll
int3
push
xchg
xor
ds
in
cmp
jo
movsb
lret
nop
hlt
push
outsb
sbb
adc
inc
imul
iret
xchg
and
int3
or
sti
out
xchg
roll
or
sbb
push
fmull
mov
das
mov
pop
stos
movsb
jg
jmp
orb
andl
mov
and
test
rep
insb
inc
xor
mov
mov
stos
insb
leave
ret
xor
dec
aam
pushf
or
stos
stc
roll
je
shrl
push
push
in
imul
stos
or
adc
push
push
shl
notb
addl
sarb
or
jmp
sbb
pop
dec
and
mov
or
pop
jmp
mov
inc
lret
popf
icebp
cs
and
mov
ljmp
xchg
dec
inc
in
push
cwtl
daa
or
jo
xchg
pop
test
sub
out
xlat
or
dec
test
call
jp
inc
xchg
or
jle,pn
pop
bound
ret
test
jbe
mov
push
in
lock
mov
push
sbb
popf
mov
push
rorb
lahf
cmp
daa
test
addr16
inc
xchg
pushf
inc
arpl
dec
xchg
shll
popf
adc
add
sbb
cld
out
jmp
sbb
inc
mov
mov
sar
push
sbb
in
pop
and
and
inc
xchg
std
jnp
test
mov
add
xorb
movsl
jnp
push
mov
rcr
pop
jg
inc
addr16
xorps
push
cmp
loope
push
xor
insb
into
pop
xchg
mov
cmp
lret
iret
cltd
sub
je
cwtl
and
push
popa
inc
stos
dec
inc
jmp
adc
hlt
movsl
jnp
adc
mov
sbb
or
inc
jno
xor
cltd
rorl
inc
sbb
aam
out
cmp
xlat
mov
scas
push
or
pop
test
xor
in
xchg
xchg
data16
push
or
addr16
pop
add
xor
mov
inc
adc
lods
cmp
aad
cmpsb
ret
lea
add
sub
in
xor
mov
and
pop
ljmp
repz
sbb
mov
mov
and
sub
sahf
or
rorb
daa
pop
cmp
push
popa
xor
inc
mov
icebp
pop
dec
sub
pop
fs
int3
mov
adc
push
mov
cmp
mov
cld
adc
add
scas
push
stos
xchg
xor
push
jmp
ficoml
mov
dec
pop
sub
pop
dec
jb
adc
daa
out
add
mov
movsl
dec
xorb
mov
and
jmp
sub
push
daa
lock
stos
lcall
sbb
push
jae
adc
lcall
lds
sub
addr16
dec
pop
xchg
outsl
adc
mov
ficoml
into
ss
jg
js
mov
xor
dec
sbb
loopne
xchg
notl
test
dec
inc
lret
sbb
daa
js
fwait
pop
lret
addl
ds
mov
nop
fbstp
push
push
aas
add
and
cmp
adc
adc
jmp
daa
pusha
sub
xchg
cmp
adc
mov
inc
mov
stmxcsr
sub
inc
shlb
cmpsb
cmp
add
xor
test
adc
dec
jle
mov
pushw
popf
fs
jns
fstpl
or
xor
in
mov
ljmp
sub
xor
add
nop
popa
fisttpll
mov
ret
sbb
popf
iret
adc
test
jnp
push
inc
or
addr16
fcoml
jmp
cld
or
daa
es
int3
dec
pop
xchg
into
push
or
or
push
bound
mov
dec
and
mov
push
clc
clc
addr16
push
adc
data16
inc
andl
outsl
decb
movsb
sbb
js
xchg
stos
int
daa
push
std
sub
jae
cmp
pop
jae
cs
in
bound
imul
and
adc
icebp
push
pop
shlb
mov
fisubl
mov
sbb
jae
pop
mov
dec
xor
inc
in
sahf
adc
and
jnp
js
dec
push
xchg
jno
imul
inc
sub
jnp
dec
add
push
pop
ret
inc
push
ja
lcall
popf
dec
sbb
jmp
mov
frstor
sub
or
scas
into
xchg
lds
xor
fs
sbb
push
push
repz
cmpsb
mov
in
daa
jo
pop
pop
sbb
gs
dec
fisubrl
add
jbe
xchg
stos
rcll
in
xlat
sub
push
pop
and
inc
lret
inc
bound
mov
mov
pop
xchg
jne
sti
sbb
movsl
push
inc
xor
xor
dec
or
push
lods
and
push
pop
jle
or
out
sbbl
cltd
pushf
ljmp
sbb
or
xchg
enter
adc
daa
mov
sub
adc
sbb
jns
push
inc
test
and
jno
jg
inc
dec
and
in
or
lcall
iret
jl
dec
mov
popf
movsb
or
ret
adc
xchg
cmp
sbb
insb
lods
pop
stos
bound
loopne
mov
xor
push
push
pop
and
es
push
xor
dec
pop
dec
add
fs
push
or
jmp
add
dec
mov
pop
jge
and
xchg
nop
cmp
repz
jecxz
sbb
sbb
mov
cmp
push
addr16
lcall
pop
and
inc
jl
sbb
mov
mov
or
jmp
aaa
imul
cmp
mov
or
sbb
stos
neg
nop
stos
push
ja
cwtl
xor
mov
dec
outsl
push
lret
ljmp
xchg
xor
fnstsw
mov
jge
xchg
inc
mov
inc
fstpl
test
xor
cmp
movsb
std
lret
adc
xchg
in
hlt
mov
cltd
add
inc
jge
lcall
sub
adc
cmp
imul
push
inc
in
mov
and
scas
mov
pop
jns
xchg
divl
and
ret
xchg
cmpsb
mov
mov
inc
or
movsb
or
dec
jl
inc
jbe
inc
cmc
inc
inc
cmp
cltd
push
arpl
lea
inc
sub
xchg
cli
lret
cwtl
pop
or
push
mov
add
cmp
aaa
dec
mov
dec
daa
add
aaa
scas
sbb
aam
push
pushf
out
inc
adc
jmp
mov
sub
test
pop
add
ja
aas
aaa
inc
dec
cmp
repz
shrb
bound
or
jl
lcall
mov
sub
lcall
cmp
cs
fcmove
daa
jg
dec
addr16
jae
dec
in
and
and
stos
inc
pop
les
push
int
push
scas
imul
in
push
popf
popa
or
pop
add
push
or
inc
roll
and
test
pushf
imul
add
mov
or
mov
out
xchg
imul
fisubrs
sbb
mov
push
pop
mov
daa
xchg
mov
add
lea
dec
loope
je
in
adc
mov
cmpsl
in
stos
mov
cmc
xchg
add
pop
pop
fmuls
xor
call
in
test
inc
adc
pop
js
enter
jne
out
gs
sbb
cmpl
pop
mov
jge
xchg
lret
bswap
sub
frstor
mov
daa
or
adc
dec
adc
inc
addr16
ds
push
mov
cwtl
lds
xchg
aaa
jl
push
imul
xchg
and
jae
bound
push
jp
mov
adc
out
push
xchg
mov
gs
adc
mov
hlt
addr16
lods
mov
adcb
movhps
fst
cmp
mov
xchg
int3
inc
xor
adc
cld
adcb
cmpb
mov
inc
fsubr
test
hlt
das
scas
xchg
lret
xor
pop
pop
xchg
pop
aad
dec
ds
pmaxub
or
pop
mov
flds
sbb
int
pop
xor
xor
adc
outsb
jae
roll
xchg
xor
sbb
adc
jae
mov
sbb
adc
mov
xchg
decb
orb
and
outsl
out
aam
pop
lock
cwtl
pop
repz
inc
imul
ror
sub
mov
cmp
daa
mov
push
jmp
sub
inc
lahf
adc
negb
xchg
xchg
test
dec
push
loope
mov
daa
jae
push
stos
pop
sub
inc
outsl
adc
imul
imul
inc
push
xchg
xchg
cmpsb
into
jns
jnp
xor
ja
mov
leave
sbb
cld
xchg
xchg
lock
xor
pushl
cmpsl
sub
push
sbb
daa
popa
adc
inc
mov
mov
sti
imul
insb
mov
popa
jae
nop
lret
int
sbb
push
pop
xor
out
push
call
out
push
xlat
push
icebp
sbb
xchg
xlat
adcl
dec
imul
lcall
lods
movsb
cmpsb
push
nop
cwtl
lcall
roll
sbb
lcall
xchg
inc
shrl
icebp
sub
add
pusha
sti
pop
sub
mov
sbb
push
sbb
sbb
fxch
inc
int
push
mov
inc
rcrb
pop
and
fs
jae
adc
sbb
or
inc
sbb
loop
adc
xchg
scas
bound
inc
ljmp
and
roll
std
imul
or
adc
mov
dec
icebp
mov
loope
push
arpl
pop
dec
dec
mov
in
jle
lahf
inc
jmp
xchg
adc
std
lret
out
adc
or
cmc
stos
loope
daa
xor
pop
int3
daa
and
push
sub
jmp
sti
mov
cmp
inc
jmp
in
pop
movsb
xchg
mov
pop
out
fistl
outsb
jno
push
dec
push
cmp
adc
cmp
dec
mov
sbb
mov
sub
jnp
add
xorl
add
outsb
insl
arpl
scas
inc
push
sbb
fadd
sub
sub
mov
pop
adc
jp
pop
fisubs
decl
jge
jle
adc
decb
adc
add
inc
aam
dec
adc
sbb
xor
push
mov
lods
xor
jne
or
and
out
pop
push
shll
push
xlat
leave
and
sub
fadd
and
lret
inc
and
outsb
lret
pop
push
jnp
les
pushf
mov
pop
int3
mov
mov
mov
int3
jmp
int3
adc
pop
pushf
sub
inc
aas
cmp
jno
dec
inc
push
inc
loop
dec
mov
push
sub
cld
sbbb
dec
dec
stos
mov
sbb
xor
daa
aaa
pop
fistpl
in
jmp
cs
cmp
push
sahf
push
push
rcll
pop
adc
adc
dec
mov
inc
int
push
fldt
xor
in
and
das
iret
cmp
fisubrl
mov
jl
dec
ret
xlat
adc
shr
inc
push
mov
cmp
jmp
leave
lods
scas
das
push
mov
test
push
xor
jmp
mov
es
dec
lahf
xchg
pop
push
shlb
cmp
adc
std
jae
and
dec
je
ficompl
add
cmp
sbb
aas
mov
shll
shrb
jbe
aas
icebp
leave
ss
sahf
ficompl
jnp
or
inc
ss
cmp
sbb
cmp
in
sbb
sahf
imul
es
push
mov
je
jae
out
orb
pop
clc
mov
movsb
and
stos
cmp
mov
cmp
push
pop
lea
or
dec
cs
jg
adc
scas
lods
xchg
cmp
adc
adc
iret
inc
ficompl
je
pop
push
cli
daa
out
sbb
rcrl
pushf
add
movsb
mov
pushf
icebp
push
test
mov
fisubl
jne
pop
xor
in
pop
pusha
dec
jne
adc
lea
jne
int3
push
aad
dec
sbbl
jnp
sub
mov
xchg
mov
test
adc
es
inc
xchg
inc
dec
pop
cmpb
imul
push
push
adc
jmp
mov
test
in
out
pop
repnz
leave
dec
sbb
mov
cwtl
dec
mov
xchg
shlb
sbb
adc
sub
jbe
adc
jo
std
cmp
dec
cmp
inc
mov
pop
adc
stos
mov
loop
out
sbb
icebp
iret
adc
and
daa
bound
pop
push
jb
fists
inc
dec
stos
adc
sub
int3
ja
xlat
xchg
inc
push
movb
adc
pop
lea
imul
in
xchg
push
mov
or
aam
repz
out
adc
mov
adc
cmp
pop
lds
rclb
lods
arpl
push
dec
mov
pop
aad
and
lods
popf
cmpsl
daa
rsqrtps
cli
add
jne
loop
xor
and
cmp
xor
fimuls
imul
jle
fcmovne
mov
jge
sbb
adc
xchg
lds
pop
inc
outsl
daa
lret
ficompl
mov
lea
into
push
stos
or
xchg
xchg
sbb
fs
add
pop
out
cs
pop
das
inc
push
iret
repz
inc
mov
mov
pusha
push
inc
xchg
mov
stos
or
dec
sbb
arpl
or
lret
ljmp
shr
je
push
lods
adc
out
gs
and
scas
out
sbb
sbb
scas
in
mov
test
and
xor
mov
add
dec
lods
scas
cmp
jnp
pop
in
sbb
or
push
imul
inc
lahf
out
mov
adc
jp
lea
sbb
jb
sub
je
subl
and
repz
jnp
cmp
xchg
jmp
cmp
sbb
adc
jno
outsl
push
add
outsb
adc
pop
jl
movl
sbb
jg
push
gs
push
inc
mov
inc
adc
xchg
or
mov
ret
fs
sub
sub
cmp
mov
xchg
mov
or
mov
lcall
cmp
push
xchg
push
add
jo
daa
es
inc
pop
pop
cs
loop
xor
popf
das
shrd
cmp
sti
int
cmp
imul
fs
adc
loope
jb
adc
movsb
push
inc
test
stos
nop
cmp
enter
mov
gs
mov
std
out
sarl
inc
cwtl
ret
dec
xchg
jg
inc
sub
fcompl
mov
subl
add
lret
ret
cmp
pop
pop
imul
xchg
lret
sub
sub
fsincos
aad
cmp
sbb
cmp
xchg
xchg
cmpb
ja
insl
pop
daa
inc
pop
pop
sbb
add
mov
std
loop
pushf
and
fmull
xchg
pop
outsb
insl
loope
sub
popa
cmp
sbb
sbb
mov
xor
push
jl
dec
mov
xchg
mov
imulb
out
or
fxch
adc
mov
sub
orb
rorb
pop
jmp
std
out
mov
lret
mulb
inc
mov
lock
push
in
sbb
fwait
mov
pusha
mov
loopne
jo
mov
mov
xor
cli
xor
sbb
and
push
repz
mov
cmp
leave
bound
sbb
mov
cld
or
xchg
jecxz
mov
adc
cmpsb
lods
sbb
insb
mov
imul
pop
test
jmp
mov
and
inc
mov
cmp
cmp
dec
in
add
imul
inc
xor
or
pop
sub
and
adc
call
loop
mov
xchg
repz
in
test
mov
cmp
in
popf
and
test
or
pop
inc
sub
pop
mov
sub
fwait
push
xchg
sbb
leave
rcrl
or
push
jmp
pop
inc
sbb
aam
dec
dec
mov
adc
lcall
insb
dec
int3
mov
cmp
les
pop
mov
lret
shr
pop
xor
adc
into
mov
pop
mov
add
call
xchg
std
push
xchg
mov
or
sub
adc
mov
mov
mov
iret
push
jno
hlt
and
xor
jmp
add
sbb
imul
jl
daa
jns
movsb
push
fcmovnbe
sahf
cmp
stos
aam
and
mov
mov
and
or
cs
mov
push
test
data16
sti
daa
aaa
pushf
sub
inc
mov
cwtl
xorl
insl
mov
xchg
loopne
dec
cmp
push
push
push
inc
shr
mov
sub
aad
sub
std
jo
sub
ss
push
jne
fdivrs
push
adc
sti
into
cmp
dec
in
lcall
and
js
or
inc
push
ljmp
jbe,pt
push
jmp
mov
cmp
insb
setle
lds
cld
jg
and
inc
mov
add
jae
mov
pop
das
pop
mov
mov
in
push
cmp
lock
lret
mov
loop
int3
daa
adc
push
cmp
cmp
testl
mov
mul
push
scas
inc
push
outsl
or
push
adc
test
std
xchg
push
inc
mov
inc
xor
jp
aas
mov
jge
int3
push
jbe
js
xchg
les
mov
dec
cld
xchg
fwait
scas
movsl
fnstenv
std
xchg
push
jmp
fwait
and
test
and
pop
loop
jb
dec
cmc
xlat
push
push
and
mov
sti
std
dec
loopne
out
mov
pop
clc
test
push
push
jae
aad
xor
inc
cltd
lods
int
mov
int
mov
xor
and
aaa
cmp
pop
jp
inc
pop
fwait
xchg
in
push
fnstsw
daa
sbb
and
arpl
adc
mov
mov
mov
jns
daa
jnp
shlb
imul
and
ret
test
loop
pop
test
adcb
inc
cltd
or
inc
adc
push
stc
arpl
lret
call
rolb
ljmp
inc
mov
rclb
push
push
test
push
adc
lds
aam
scas
in
or
nop
jecxz
push
push
pusha
fwait
scas
mov
jmp
gs
add
int3
and
daa
pop
jl
fwait
add
sbb
stos
mov
mov
pop
imul
jbe
adc
jb
jne
fldl
xor
sbb
dec
pop
loop
and
and
or
and
jne
call
subl
xchg
dec
addb
inc
mov
mov
test
movb
fcomps
shlb
cld
imul
xor
xlat
movsb
add
fcmovnbe
clc
out
pop
cmpsl
ror
lret
pop
inc
jno
lcall
js
stos
inc
sarl
outsb
popa
out
pop
sbb
push
cmp
jl
xlat
inc
sbb
test
sub
scas
dec
aam
ljmp
inc
mov
movsb
ja
jmp
imul
bnd
adc
ljmp
dec
icebp
ja
rcrl
shll
jmp
xchg
jle
lods
cmp
mov
push
in
fcmovbe
inc
cltd
push
ficompl
mov
xor
push
addb
and
xchg
cmp
call
cltd
mov
xlat
ljmp
adc
ds
xchg
daa
dec
mov
jmp
sbb
and
pop
push
inc
xor
arpl
add
pop
rolb
sub
jnp
fcmovu
stos
orl
xchg
aad
xchg
sbb
cltd
jp
ret
nop
mov
cmp
add
out
cmp
movsl
push
ficompl
sbb
sub
inc
inc
mov
push
mov
or
mov
into
inc
dec
push
cli
push
push
push
shlb
add
push
pop
adc
daa
adc
shlb
mov
sbb
mov
es
testl
jecxz
xor
push
jns
idivb
xchg
inc
jl
xor
mov
sbb
adcl
or
sbb
pusha
and
lret
mov
cmp
xchg
sbb
mov
aad
push
xor
mov
sahf
pusha
fimull
mov
sbb
cmp
adc
in
insb
scas
push
or
cmp
mov
pop
mov
xchg
mov
icebp
std
mov
cltd
loop
push
mov
push
dec
iret
cmp
fildll
repnz
or
sub
loopne
mov
sub
mov
or
data16
and
pop
push
mov
or
push
jns
mov
dec
xlat
xor
or
or
mov
pop
add
dec
or
mov
or
movsb
jne
add
mov
lds
lods
and
and
iret
dec
push
xor
shr
add
jmp
int
pop
push
mov
cmp
inc
hlt
or
and
adc
mov
test
insb
xchg
insb
shll
loop
cmp
insb
rcrb
into
xor
insl
push
pop
in
movsb
add
cmpsb
fistpl
in
inc
ret
out
stos
pop
mov
mov
sbb
call
cmp
jne
je
sbb
call
push
pop
inc
xor
test
mov
or
fsub
adc
lahf
push
imul
mov
jbe
out
push
dec
ret
shll
fisttps
or
cmp
mov
push
mov
inc
sbb
adc
inc
sub
dec
and
aaa
call
stc
or
adc
dec
stos
and
xchg
adc
fdivs
pop
add
mov
stos
fnstcw
add
mov
xchg
shl
nop
pushf
cmp
cmp
mov
pop
lea
pop
testl
sbb
rorl
lock
sti
gs
stos
insb
lret
adc
seto
mov
jecxz
lahf
mov
repz
dec
fldenv
jae
pop
inc
push
lret
cmp
outsb
rorl
sbb
push
inc
cmp
test
sbb
outsb
mov
xchg
insb
adc
sub
cltd
mov
daa
arpl
jle
jle
rcl
push
cmp
cmp
fsts
xchg
dec
fildl
fldenv
jbe
ss
testb
adc
cmpl
adc
pushf
adc
sbb
sub
mov
jae
inc
sbb
sub
pop
xchg
push
dec
mov
or
dec
adc
lods
adc
fwait
sbb
imul
pop
ret
adc
test
pop
mov
push
jp
mov
es
mov
xor
adc
hlt
and
sbb
std
cmpsl
mov
pop
shr
cmp
cmc
dec
in
sub
inc
adc
adc
pop
lea
cmpsl
xor
in
mov
mov
clc
add
icebp
mov
ret
inc
mov
loop
popa
sub
jne
push
xor
in
popf
shrl
inc
jl
push
into
es
sbb
lahf
rclb
pushf
xorl
loop
jne
mov
pop
leave
mov
lret
xchg
sbb
sahf
adc
xor
or
insl
ljmp
push
jecxz
mov
xchg
sbb
mov
mov
pop
pop
ja
lret
mov
and
pop
ds
adc
dec
popf
int
xchg
aam
stos
jecxz
out
jne
inc
xchg
dec
cmp
sub
movsl
push
in
or
out
imul
fcomps
addr16
stos
in
sbb
daa
adc
daa
pop
dec
outsb
out
push
cmp
daa
clc
cmp
call
pop
lea
mov
movsb
dec
lds
fnsave
ret
mov
and
dec
sub
daa
dec
sbb
sub
pushf
dec
popa
mov
pop
cmp
mov
incb
cmp
dec
lods
in
popa
pop
cwtl
cmp
jae
push
adc
hlt
xor
xor
dec
test
push
call
cmpsl
js
adc
add
dec
out
ret
jg
push
add
lahf
ret
sbb
dec
pop
cltd
or
rcl
push
ret
lea
xchg
mov
push
and
lds
jmp
loope
dec
jnp
xor
add
and
std
adc
ja
xor
lahf
mov
pop
xorl
outsl
inc
icebp
cmpl
xchg
test
xchg
adc
jle
loope
and
shlb
loopne
and
stos
and
mov
mov
insb
sbb
out
adc
mov
daa
mov
aaa
push
outsb
jnp
pop
adc
inc
sar
push
daa
data16
push
sbb
adc
loope
inc
bound
fwait
nop
lods
inc
fistpl
pop
test
mov
jmp
fsubrs
cli
jo
xor
aas
dec
lods
dec
dec
xor
repz
mov
enter
lret
cmp
loop
mov
jecxz
jne
mov
fwait
in
inc
cmpsb
in
mov
cmpsl
inc
sbb
pushf
sub
lret
bnd
popf
or
inc
push
pop
pop
mov
mov
aas
adc
fldenv
andb
xor
stos
xlat
bound
cmp
mov
mov
aad
xor
daa
inc
xlat
xchg
pop
inc
jge
ss
mov
insb
int
dec
and
popf
das
jnp
xchg
xchg
or
pop
jge
mov
cmp
pop
iret
inc
pusha
movsl
lds
push
inc
push
cmp
idiv
adc
loope
push
shrl
xchg
adc
fsubrl
mov
cs
jnp
mov
fdivs
push
cwtl
pop
mov
inc
mov
adcl
cmovle
mov
push
imul
sahf
add
sbb
rorl
dec
mov
dec
rcrb
push
fcom
rcl
std
adc
add
imul
bound
xchg
incl
inc
popa
cmp
pop
mov
pop
and
mov
jge
and
mov
out
lret
sub
shrl
daa
jbe
aas
cmp
sbb
imul
sbb
sbb
dec
inc
or
xchg
lret
scas
mov
jle
dec
pop
ficoms
aaa
inc
fnstcw
fidivl
pushf
adcl
xchg
xchg
cmp
mov
mov
mov
mull
sbb
pop
and
inc
pop
mov
jne
xchg
int3
inc
push
addr16
lret
les
imul
and
pop
mulb
jae
lcall
imul
in
dec
cmpb
pop
pusha
lea
mov
iret
and
adc
les
cmp
jg
lea
pop
cmp
pmaxsw
push
leave
or
lahf
mov
dec
fisubs
add
inc
subl
int3
sbbl
ficomps
hlt
adc
pop
dec
lcall
cmpl
je
test
inc
pop
sti
cmova
xchg
fs
or
cmp
daa
pop
dec
sbb
mov
dec
int
popw
test
push
lret
pop
or
out
movsl
xor
mov
fdecstp
mov
dec
cld
sahf
cld
js
loop
inc
std
jge
aam
mov
or
mov
ss
nop
adc
add
jg
jne
or
mov
adc
inc
sbb
jge
js
dec
adc
or
aam
mov
jae
in
aas
push
sbb
push
testb
sarl
inc
push
push
sub
lds
cmpsl
sbb
mov
sbb
lds
ljmp
xchg
les
pop
sub
cmp
mov
jns
inc
cli
push
pop
cmc
adc
fcomps
cmpl
jl
subb
ds
sbb
mov
mov
pop
call
push
aad
popl
mov
jmp
lret
cmpl
sbb
lea
sbb
loopne
adc
outsl
outsl
cmp
xchg
mov
fstpt
pop
cmp
push
test
cmp
shll
push
add
lcall
test
bound
push
repz
fnstsw
fs
push
or
mov
jg
xchg
sub
or
push
test
push
pop
insb
inc
sahf
lcall
push
cltd
fdivrs
sbb
stos
data16
ror
pusha
ret
mov
mov
punpckhdq
popa
aam
jg
pop
xchg
out
jbe
fwait
push
push
mov
es
addr16
mov
sub
stos
bound
insl
inc
inc
add
push
in
rorb
and
loope
mov
push
and
add
xchg
arpl
lcall
xor
or
fdivs
cwtl
stc
cmp
shlb
cmpsl
jb
mov
lds
push
dec
mov
int3
repnz
mov
inc
pop
mov
and
sub
or
sub
daa
adc
mov
dec
sbb
pop
jl
inc
ret
jnp
cmp
and
cld
adc
jns
xchg
push
pop
push
adc
mov
dec
mov
dec
popa
mov
add
or
push
or
or
lock
aas
out
pop
push
or
sub
and
push
or
pop
adc
push
mov
ja
mov
cmp
or
jae
cmp
or
call
push
or
push
or
in
lcall
lock
cmp
lret
xchg
mov
shlb
popa
test
cld
scas
or
out
dec
test
mov
cli
xor
into
mov
cmp
imul
sub
into
or
mov
xchg
xor
stc
jg
outsl
or
cmp
or
jle
push
pop
aaa
mov
imulb
xchg
cmp
xor
dec
jmp
mov
icebp
jg
dec
add
sbb
cpuid
adc
jns
lds
flds
mov
push
nop
arpl
lea
add
es
rcll
cmpsb
mov
and
int
fimuls
popa
jb
push
lret
pop
or
mov
stc
or
pop
and
xor
loop
out
mov
in
cli
inc
test
and
or
mov
or
arpl
fists
mov
jb
jl
dec
xchg
iret
orl
cli
or
cmp
cmp
aaa
cmpsl
in
lock
fildl
cmpsb
enter
and
or
dec
mov
pop
sub
lret
mov
pop
or
sub
in
xor
ljmp
pop
mov
and
sub
outsl
mov
jae
dec
outsb
mov
int
imul
add
mov
add
je
rcll
jmp
mov
push
jo
and
push
cs
or
ret
xorb
sti
int
push
loopne
ss
xchg
xorb
mov
in
idivl
ret
push
mov
and
jecxz
xchg
cmp
pop
rcl
push
mov
push
orb
xchg
popa
in
stos
rorl
test
mov
in
mov
inc
sbb
int3
jp
jae
adc
sbb
cli
push
jmp
push
or
dec
into
mov
cmpsb
push
mov
or
mov
jne
xchg
lods
repz
sbb
xor
pop
mov
scas
icebp
and
in
inc
jmp
rcrb
adc
and
shlb
out
or
sbb
mov
loopne
or
add
hlt
rorl
lcall
rcrl
xor
and
call
int
inc
sbb
lret
mov
bound
sub
cmpsb
sub
movsl
adc
or
adc
or
cmp
push
sub
cltd
xor
movsl
push
and
jecxz
cmp
jmp
xchg
lret
test
push
xchg
xlat
push
orl
dec
mov
jle
push
mov
lcall
aad
mov
fcoms
jge
or
cmp
iret
jno
orb
pop
mov
mov
ljmp
rol
or
or
add
pop
scas
pop
or
cmp
in
pop
mov
icebp
iret
and
or
sarb
pop
mov
or
jb
out
or
wrmsr
push
shrl
or
ljmp
add
mov
fmuls
pop
xchg
xchg
jbe
jp
or
je
ljmp
xchg
test
pop
loop
xchg
roll
or
aas
fs
jl
and
mov
jecxz
int
lcall
mov
inc
dec
add
fwait
push
outsl
fs
sbb
lea
cmpsl
inc
inc
dec
or
or
pop
int3
cmp
adc
jge
mov
cltd
sbb
bound
mov
imul
push
xor
adc
out
or
cmc
mov
lret
push
dec
jg
push
lods
scas
cli
js,pt
repz
push
fstl
fldenv
inc
ret
inc
xchg
or
push
mov
rcrl
xor
jno
or
sbb
or
scas
xor
jo
lock
cmp
xor
push
sub
mov
xor
adc
std
es
xchg
cli
lock
clc
xchg
or
jmp
shlb
lahf
out
xchg
ljmp
data16
lds
jmp
mov
dec
in
or
sub
sahf
ffreep
clc
sub
icebp
test
pusha
sub
mov
in
mov
insb
stos
fistpll
dec
in
or
jg
movsb
or
jmp
mov
sub
and
jno
mov
addr16
rcll
std
mov
bsr
push
or
sbb
mov
insl
xor
mov
dec
fcoml
ss
adc
in
je
sbb
xchg
mov
ljmp
int3
adc
lock
cld
sbb
cltd
hlt
or
daa
and
or
sbb
jb
xlat
mov
sbb
icebp
add
cmpsl
ds
sbb
sub
push
mov
sub
arpl
pop
mov
popl
adc
aaa
or
jne
add
out
or
out
pop
lods
or
or
shr
pusha
jo
cwtl
or
jns
mov
hlt
scas
mov
popf
or
les
push
push
sbb
bound
leave
cmp
daa
dec
jmp
sub
fimuls
inc
pop
int3
adc
sub
ja
inc
out
or
jmp
mov
pop
hlt
dec
push
and
push
fisttpl
testl
fnstsw
icebp
out
outsl
loope
jb
or
add
shr
xchg
hlt
and
cmp
jmp
fmuls
sub
mov
test
xchg
or
loop
push
ljmp
inc
jo
xchg
outsl
push
jmp
lock
push
shrl
fidivl
sti
mov
xor
daa
and
mov
sbb
jg
stos
xchg
sbb
cmp
adc
sbb
xor
repnz
inc
rcll
insl
cmpsl
sub
adc
movsb
stos
sub
inc
fchs
sub
cmpsl
sub
ds
test
stos
adcb
pop
mov
jne
cld
inc
sbb
and
leave
cmp
lock
xchg
aam
inc
inc
dec
mov
out
lock
mov
lret
xchg
stc
mov
fcoml
mov
fwait
cmp
popf
cmp
jne
jae
push
inc
pop
pop
dec
gs
adc
hlt
xor
push
inc
repz
sbb
aam
gs
out
call
loope
and
mov
jbe
pop
pop
sbb
mov
pop
pushf
or
test
jno
cli
or
mov
sub
jmp
cmp
push
xchg
and
pop
sub
adc
push
mov
cwtl
test
adc
inc
repz
adc
adc
jbe
pop
sub
testb
and
enter
mov
push
les
shrl
div
ljmp
jns
cmc
push
xor
ljmp
mov
aad
or
test
dec
dec
aam
lds
sbb
xor
mov
jmp
int3
lods
sub
out
xor
fsubrl
dec
pop
test
pop
fdivrs
push
lret
lret
cmp
repnz
js
out
dec
addb
add
fdivrl
sbb
cmp
xor
xlat
int
stos
flds
pop
dec
cmp
lods
jb
xlat
dec
cld
js
arpl
aam
push
and
and
shlb
add
je
mov
mov
xchg
mov
jl
popa
adcb
push
jb
daa
or
pop
add
add
push
cmp
cmp
fildl
cmp
push
test
cltd
jno
push
mov
out
jnp
fidivrs
hlt
in
xchg
pop
addr16
push
mov
push
cmp
jnp
out
popf
enter
jp
mov
sarb
mov
push
arpl
push
push
cmp
lret
daa
xchg
hlt
cli
icebp
add
add
sbbb
out
rcll
aaa
out
ds
sbb
inc
fldt
sbb
cmp
aam
in
push
in
test
push
insl
xchg
or
xor
bound
jp
dec
jmp
mov
pop
daa
mov
arpl
out
xchg
mov
inc
jmp
and
jle
push
inc
cli
mov
sub
out
and
jae
cmpsb
scas
popf
add
gs
mov
pop
lcall
aam
repz
mov
and
xor
xor
jo
inc
mov
ss
mov
inc
xor
xor
shrd
adc
mov
aad
std
arpl
jns
insl
push
int3
cld
fdivs
fs
xchg
and
fidivrl
jae
pusha
mov
adc
inc
leave
add
dec
aam
lret
inc
into
mov
into
fdivrl
loop
jno
push
stos
or
inc
mov
fwait
dec
daa
rcrb
dec
stc
fiaddl
popa
int
or
adc
lret
and
xchg
pop
nop
in
jp
pop
inc
enter
and
sbb
dec
cli
aam
loopne
mov
mov
sahf
add
sbb
push
cmpsl
push
pop
imul
push
iret
mov
lahf
xchg
mov
pop
adc
scas
push
pop
jg
js
cmp
mov
push
mov
aam
es
popf
adc
out
cmpsl
pusha
aam
shlb
fwait
subb
aam
loopne
xchg
out
xchg
push
push
test
mov
sub
inc
push
incl
inc
push
add
iret
and
adc
xchg
jg
pop
vpinsrw
repz
and
daa
fisubrl
jmp
xchg
sub
lds
jbe
xchg
ds
dec
cwtl
out
adc
sub
xor
lds
pop
sbb
dec
outsl
dec
mov
xor
dec
and
xchg
mov
inc
insl
daa
sub
jge
mov
sub
dec
and
mov
les
push
push
es
sbb
cmpsb
sub
mov
inc
push
icebp
pop
sti
scas
mov
lea
cld
xchg
in
aaa
and
inc
pop
lods
or
aas
test
inc
cmp
pop
lock
ja
sub
ljmp
movsb
mov
aam
arpl
cmc
fcoms
xor
xchg
sub
push
push
push
push
mov
decl
pop
ss
jmp
lcall
loopne
int3
inc
cmp
arpl
add
inc
cs
bound
cmc
adc
jg
pop
les
pop
hlt
push
js
fst
push
dec
dec
call
subl
cs
jno
jge
or
add
mov
xchg
adc
lods
sbb
dec
sbb
cs
scas
inc
inc
push
addr16
adc
fsubs
mov
and
sbb
loop
in
rcrb
sbb
inc
mov
sbb
pop
pop
mov
ror
push
mov
data16
and
sbbl
shlb
shrl
testl
push
cmp
adc
in
add
loopne
aas
lret
sub
pop
sub
dec
inc
push
pop
sar
push
imul
adc
xchg
or
xor
mov
in
loope
js
xchg
adc
and
pop
cmp
jl
push
sahf
mov
cmp
ja
mov
add
adc
pop
and
insb
daa
jle
cmpsb
das
xchg
push
jno
mov
mov
addl
push
notl
popf
in
lret
daa
mov
or
xor
rcll
push
fiadds
cmp
arpl
mov
pusha
cld
and
popf
test
mov
add
fcmove
lea
jae
addr16
add
out
mov
in
mov
dec
and
adc
jb
jmp
mov
mov
and
or
rcrl
inc
xor
loopne
out
pop
mov
mov
aam
pop
pushf
xchg
xchg
jae
xchg
xchg
and
lret
mov
dec
stos
xchg
jp
test
sub
push
arpl
int3
push
push
repz
add
xor
inc
mov
cltd
inc
mov
out
mov
lcall
cmp
cltd
imul
push
in
push
aas
out
fidivl
dec
mov
sbb
xor
inc
sub
xor
out
ljmp
xorl
imul
test
push
std
nop
cltd
mov
dec
jbe
sub
lret
inc
rolb
mov
arpl
shlb
cld
nop
hlt
and
inc
mov
jecxz
scas
popf
in
xor
or
mov
sbb
xor
in
shrl
pushf
and
daa
lods
sub
push
aad
mov
in
mov
sahf
fsubl
scas
mov
xor
popa
dec
pop
mov
scas
mov
rcr
rolb
mov
sub
inc
dec
rolb
ret
sbb
jne
mov
rorl
int3
dec
and
lahf
sbb
pop
adc
stos
inc
pop
dec
sbb
popf
cmp
cmpsl
test
test
dec
cli
inc
lahf
popa
loope
cmp
daa
enter
sbb
dec
push
pop
stos
scas
lcall
daa
cwtl
sub
call
scas
iret
lret
inc
jmp
fwait
aas
dec
mov
scas
or
aam
xchg
jmp
pop
repz
ss
out
inc
mov
in
push
push
jp
lea
ja
adc
aaa
cmc
and
mov
sbb
sbb
pusha
push
mov
push
popf
push
int
shll
fdivl
jnp
pusha
data16
pop
add
cs
sbb
addr16
push
cmc
jl
lret
inc
dec
in
rorb
ja
outsl
lds
scas
jo
clc
shll
scas
ret
test
popa
cmc
or
and
icebp
pop
jmp
mov
or
test
mov
xchg
std
sahf
sub
fs
add
cmp
cmp
popf
js
mov
lret
mov
shll
loopne
mov
lods
cmpl
lahf
cmp
fwait
pop
xlat
add
add
mov
test
call
repnz
movsb
cmp
lock
add
pop
push
pop
pusha
inc
mov
or
out
dec
pop
pop
jmp
out
pop
ss
or
daa
pop
add
dec
and
cltd
cmp
sub
inc
pop
loopne
test
mov
popf
clc
jo
pop
mov
push
clc
adc
hlt
inc
scas
push
testb
daa
in
stc
lret
ret
aad
pop
dec
call
dec
sub
inc
sbb
cmpsl
jg
hlt
aas
xor
mov
in
sub
or
aad
pusha
fmul
inc
jbe
xchg
add
push
pop
push
rcrl
dec
cmp
adc
dec
rcr
imul
int3
push
iret
mov
lahf
mov
nop
jmp
add
pop
cld
adc
rcrb
or
insl
pop
add
daa
fwait
loope
ljmp
xchg
cmp
cmpsb
mov
sbb
inc
or
mov
int3
stos
insb
mov
sbb
clc
das
mov
pushf
pop
or
pop
sbb
dec
std
js
or
adc
pop
pusha
repnz
inc
add
int3
lea
leave
sbb
pop
fstps
pop
jne
sbb
xchg
data16
out
xlat
push
stos
pushf
pop
lods
pop
subl
sbb
fdivr
xor
iret
adc
push
dec
les
mov
loope
jge
or
das
jmp
push
test
jo
inc
mov
ds
in
inc
mov
jno
pushf
dec
push
jge
mov
jae
ret
fstpt
mov
ljmp
jb
aas
or
loope
dec
push
daa
mov
push
out
or
scas
pusha
movsb
lds
out
xor
call
xor
fbstp
mov
add
mov
push
mov
cld
mov
cwtl
dec
stos
add
xlat
shlb
xchg
jo
mov
adcl
call
jge
dec
push
mov
or
jmp
cmp
mov
insb
or
bound
cld
dec
sub
arpl
outsb
outsl
das
mov
and
push
sub
js
jns
sub
lea
add
dec
push
outsb
imull
pop
enter
sti
mov
test
inc
js
scas
or
mov
in
jp
cmpsb
pop
jnp
pop
pop
stc
and
fstpt
std
cmp
out
rcl
sub
pop
movsb
daa
cmp
push
lcall
mov
scas
inc
in
xchg
xchg
mov
and
adc
cmp
inc
jp
sbbl
mov
adc
cmp
xor
push
jle
adc
js
dec
pop
xchg
and
push
fcompl
push
enter
mov
cmp
xor
sarl
and
jnp
and
push
test
cli
sbb
out
xchg
jl
pop
ja
adc
and
dec
test
add
out
das
or
cwtl
mov
ret
test
rcl
or
inc
push
xlat
sbb
jbe
fiaddl
dec
loope
pop
mov
outsl
sub
je
jmp
dec
cmc
jne
enter
lret
inc
pop
mov
fisubrl
out
push
stos
lret
dec
out
jp
scas
push
mov
push
test
test
fdivrl
lret
and
sbb
mov
lahf
ja
data16
dec
or
jnp
fs
jae
aam
int3
cmpsl
shll
into
jl
stos
sahf
mov
nop
or
mov
adc
popa
jle
mov
cltd
sub
xorb
cli
sub
movaps
xchg
sub
aad
je
movsb
arpl
inc
iret
cmp
into
or
push
data16
jmp
push
mov
daa
fisubrs
stos
sub
repnz
pop
sbb
or
fidivs
test
adc
idivl
sub
sarl
scas
adc
mov
sub
lds
test
dec
mov
cmp
ret
or
sbb
in
sbb
and
or
cmpsb
popf
movsb
xchg
popf
pop
xchg
inc
or
xchg
pop
cmp
sbb
xor
loope
xchg
jo
cmp
push
push
aas
mov
xchg
std
push
xchg
jnp
test
inc
inc
cmpl
movsb
mov
xor
outsl
mov
adc
and
test
add
subb
xlat
mov
sub
loope
addr16
imul
and
mov
inc
jbe
jl
mov
movsl
rorb
inc
popa
push
addr16
hlt
push
mov
jl
add
inc
daa
jae
loopne
adc
rcll
rcl
xchg
push
pop
push
adc
mov
inc
je
push
adc
aaa
daa
hlt
xor
int
lret
nop
or
mov
mov
push
cmp
mov
lea
loopne
sbb
sbb
daa
push
or
test
movsl
mov
notb
addr16
cmp
fdiv
xchg
je
jecxz
xchg
and
inc
mov
and
jo
xchg
lret
aad
inc
mov
xchg
or
jecxz
pop
add
rcrb
add
jns
pop
mov
mov
inc
mov
mov
aad
das
add
mov
inc
xorl
aas
jne
dec
daa
ret
insb
test
dec
push
and
call
cmp
dec
mov
sub
outsl
hlt
dec
rcrb
and
hlt
dec
xchg
cmp
pop
sbb
mov
dec
pop
dec
cli
stos
or
and
xchg
pop
pusha
mov
pop
fwait
push
add
out
xchg
je
into
cmp
cmpsl
sub
adcl
pop
or
mov
mov
mov
insl
adc
mov
or
dec
xor
pop
imul
or
lahf
mov
nop
dec
jae,pn
mov
mov
dec
aaa
mov
popl
or
scas
jle
mov
mov
dec
cmp
jae
nop
call
in
xor
sub
loop
push
mov
scas
adcl
dec
sahf
push
imul
movsb
in
sbb
or
cld
adc
inc
rcll
pop
fadds
lcall
inc
sti
push
push
popf
arpl
push
xor
dec
pop
cltd
ficompl
adc
pop
mov
add
add
push
nop
daa
xchg
add
sbb
iret
pop
dec
lahf
out
mov
call
je
mov
and
pop
and
gs
lcall
mov
nop
imul
mov
inc
or
shrb
scas
fcoml
mov
sub
iret
fstpl
mov
or
or
out
push
jnp
pop
mov
jbe
pop
dec
xchg
in
pop
pop
call
mov
icebp
ret
aaa
inc
adc
xchg
pop
dec
les
outsl
mov
inc
push
std
sbb
or
xor
loopne
stos
daa
xlat
mov
or
lea
push
push
pop
sub
shll
mov
rolb
mov
sub
imul
inc
lods
fsts
xchg
rcll
xor
bound
push
xorb
sbb
fimuls
sub
xorb
or
mov
rorb
and
cmp
notl
shll
mov
clc
xchg
or
cmc
pop
sbb
and
inc
das
scas
dec
into
je
jae
js
stc
sbb
push
push
pop
mov
out
in
andb
es
sbb
mov
sub
or
outsb
adc
jmp
sbb
cs
sahf
mov
filds
aaa
cld
clc
sbb
out
enter
ljmp
push
repz
and
or
and
std
mov
sub
addr16
fcompl
scas
mov
shrb
pop
ret
int3
sarb
push
fiaddl
or
cmpsb
inc
pop
call
push
mov
jne
stc
xor
dec
sbb
adc
addr16
loop
mov
xchg
push
sub
movsb
enter
popa
lahf
cmp
adc
and
mov
cmp
aad
or
adc
mov
lahf
xor
dec
test
loope
dec
jbe
inc
lods
test
xchg
imul
mov
inc
jmp
insl
dec
cmpsb
push
cmpsl
test
dec
pop
lcallw
adc
push
mov
jo
xchg
es
daa
or
jnp
inc
inc
movsb
inc
ljmp
inc
or
mov
lcall
gs
dec
xlat
cmp
xor
or
mov
pop
or
les
ljmp
pop
jl
xchg
or
or
icebp
mov
sbb
pop
imul
add
cltd
shrb
imul
mov
mov
lahf
addb
inc
bound
push
mov
cmpsb
outsb
inc
push
add
sbb
out
out
std
mov
adcb
not
popf
and
imul
movsl
or
test
les
cmp
popf
xchg
hlt
das
mov
pop
outsl
rorl
inc
mov
or
daa
lock
push
and
mov
ja
lcall
cltd
cld
loop
lret
dec
inc
dec
insl
les
mov
rclb
sbb
xchg
inc
inc
faddp
jg
fisubrl
mov
jno
cs
mov
pushf
repz
sbb
mov
call
ffree
cmc
cwtl
and
xor
pop
icebp
dec
aam
bound
lret
sahf
and
sub
std
jae
and
mov
or
push
push
push
fsts
bound
mov
outsb
fists
lahf
cmpsl
xchg
insb
or
lds
cmp
mov
xor
fwait
js
lods
xor
addr16
push
aam
mov
std
cmp
dec
ret
xor
push
adc
jmp
mov
push
xchg
int
fs
hlt
pop
dec
enter
aad
dec
mov
push
fdivrl
scas
sbb
fwait
push
je
aam
ljmp
pop
sub
icebp
xlat
inc
and
dec
xchg
inc
or
fwait
cmc
cmpsb
imul
mov
daa
imul
pop
pop
int
cmp
out
sub
pop
push
cmpsl
jb
in
stos
lcall
sbb
nop
push
fidivs
push
cld
sbb
cmp
jmp
rcll
lods
out
sub
gs
pop
lahf
dec
pop
add
cmpsb
rolb
daa
add
push
pop
int3
fbstp
fmulp
fmull
test
lcall
lea
xor
stos
xchg
xchg
xchg
sbb
cmp
mov
mov
add
arpl
push
pop
mov
xor
mov
loope
mov
das
adc
cwtl
mov
lock
inc
adc
jp
jne
inc
and
lcall
push
scas
insl
mov
sbb
fdivl
or
push
mov
pusha
push
aad
lds
sbb
push
aam
daa
stc
scas
push
stos
inc
in
icebp
push
and
stc
pop
movsl
inc
fnsave
jns
mov
mov
jmp
add
cmp
shr
mov
push
pop
cmc
scas
sbb
xchg
jge
push
inc
push
addr16
icebp
xchg
or
loop
int3
mov
aad
dec
push
jge
fcoml
push
sti
cmpsb
clc
stos
pusha
push
jmp
fidivrs
jae
in
lahf
xchg
sbb
or
sahf
fs
pop
mov
rclb
dec
ret
cmp
pop
pop
pusha
cld
inc
jecxz
out
mov
xchg
int3
pop
cmp
ljmp
daa
out
dec
add
je
clc
shrl
xorl
xchg
lock
mov
xchg
pop
jmp
and
std
cli
daa
seta
fstps
cmc
lods
jecxz
add
shrl
xchg
daa
mov
cmp
jle
scas
lret
inc
inc
mov
push
sbb
mov
out
aad
rorl
jo
sub
add
cmpsb
mul
hlt
xor
dec
dec
pop
fnstsw
or
mov
into
sub
sub
xchg
daa
daa
scas
dec
fstps
xor
lods
lahf
adc
incb
cld
sub
jno
nop
out
push
mov
imul
inc
push
neg
stos
icebp
jns
xchg
pusha
or
add
cmp
or
out
cwtl
cmp
out
xchg
je
out
sbb
cld
or
add
fldcw
mov
sbb
sbb
xchg
and
inc
push
outsb
test
xchg
in
push
lahf
das
aam
addr16
xchg
aad
stos
mov
xchg
push
push
lcall
popa
outsl
fildll
jns
in
xor
adc
add
mov
in
xor
adc
scas
cli
subb
and
mov
mov
and
and
push
mov
mov
out
je
jae
jae
jne
and
inc
xchg
mov
jl
xchg
in
lcall
xchg
inc
push
push
daa
add
push
scas
jle
faddl
or
sbb
sbb
pop
sbb
pop
cmpsl
mov
aas
jg
test
jns
push
push
pop
ss
shlb
jmp
xlat
pop
pop
lods
inc
and
stc
dec
push
aaa
lret
aas
push
or
jecxz
push
das
dec
xor
test
imulb
push
cmp
popf
cmpsb
adc
dec
or
mov
jl
sub
push
mov
xor
xchg
fdivr
sbb
repz
xor
push
test
push
inc
jne
sarl
scas
ja
dec
lods
sbb
push
sbb
scas
fwait
repnz
or
xor
mov
pop
jge
cwtl
add
xchg
enter
ljmp
inc
xchg
dec
fldenv
ds
add
out
sbb
push
aam
jecxz
add
sahf
ljmp
and
fs
daa
mov
pushf
rolb
dec
ds
scas
jb
daa
cmp
in
ss
cwtl
lahf
inc
inc
xorb
and
int3
loope
mov
outsb
aaa
or
sub
mov
popf
insb
movsl
lret
orl
cmp
sahf
test
mov
inc
nop
in
dec
jo
lahf
sub
xchg
adc
repnz
in
sub
loop
shrb
das
sbb
pop
stc
sbb
pop
cld
dec
jge
outsb
mov
push
dec
test
jl
cltd
and
mov
dec
mov
hlt
xchg
fsubs
call
cmp
xchg
into
jl
xor
loop
insl
test
pushfw
adc
in
inc
push
movlps
not
jae
dec
sub
orl
jge
ret
lcall
xchg
push
mov
push
cwtl
pop
xchg
mov
pop
outsb
ljmp
push
xchg
test
jnp
pop
mov
or
jae
lret
xor
push
mov
mov
fistl
sub
cmp
out
mov
sti
mov
jg
insl
addl
mov
sbb
and
mov
in
int3
in
push
in
lea
adc
and
or
pop
insb
mov
push
dec
mov
mov
mov
ljmp
xor
sbbl
sub
dec
dec
mov
xor
aas
xor
adc
lret
add
insb
jmp
mov
push
mov
into
xor
jae
std
lods
mov
test
movsl
xchg
inc
imul
call
add
daa
adc
aam
adc
enter
aam
cmpsb
int
pcmpeqb
dec
imul
flds
push
jnp
push
shr
repz
adc
jno
sbb
es
push
clc
add
add
pop
rcll
sbb
daa
jmp
cmp
jp
roll
sub
cld
or
out
adc
xor
push
push
adc
mov
into
adc
in
add
push
dec
fwait
mov
mov
int3
fsubl
xchg
mov
sub
mov
sbb
inc
out
popf
aam
mov
dec
jbe
in
inc
and
xor
mov
push
xor
add
xchg
jl
push
outsb
in
pop
mov
pusha
push
xchg
loopne
jbe,pt
push
push
pop
pop
mov
mov
cmpsl
in
fdivl
iret
and
xchg
xchg
xchg
xchg
xor
pusha
xchg
jg
int
mov
mov
xor
dec
sub
lock
jno
imul
stc
mov
or
push
push
nop
lea
mov
mov
jnp
mov
fldcw
fwait
std
sbb
lret
push
lods
inc
cmp
dec
mov
je
inc
popa
test
push
inc
dec
std
xchg
paddd
sub
inc
push
push
push
pop
mov
xor
icebp
sub
shrl
sbb
daa
out
dec
data16
ljmp
fwait
movsb
mov
leave
lret
xor
mov
push
ret
inc
adc
inc
or
mov
aad
cmp
inc
lret
mov
daa
mov
mov
dec
adc
cs
push
int
jge
cld
bound
gs
and
mov
out
fstpl
dec
sbb
mov
imul
cmpl
mov
dec
push
jle
inc
cmp
push
shll
mov
xor
xlat
cmc
or
push
cmp
inc
and
popa
es
inc
push
daa
ds
jne
dec
loop
jbe
into
std
sub
lea
push
cwtl
jmp
mov
dec
mov
pop
scas
mov
adc
xchg
add
bound
jl
clc
cmpsb
or
sub
aam
mov
lea
sbb
mov
pop
inc
mov
push
pop
cmp
sub
iret
imul
arpl
mov
test
and
mov
rclb
sbb
in
sbb
scas
movsl
mov
adc
mov
pop
stos
aad
inc
sbb
push
cmc
imul
xchg
shlb
out
jp
or
cmp
or
push
into
jge
daa
dec
in
or
push
dec
push
push
add
pop
pop
or
loope
sub
push
push
sahf
pop
sarb
enter
dec
inc
lods
add
pop
sbb
xchg
or
int3
loopne
xchg
in
cmc
popf
jnp
fsubrl
ret
ja
xchg
or
push
and
pop
daa
jae
shl
sbb
inc
mov
inc
pop
jbe
xchg
daa
mov
aad
std
scas
add
jl
push
cltd
dec
sbb
add
mov
cmp
and
and
inc
fcompp
xchg
push
fbstp
and
les
mov
mov
loopne
cmp
scas
mov
js
adc
jne
cmpsl
in
addr16
stos
call
fsubl
rcll
mov
inc
dec
push
frstor
movsb
subl
loop
test
xlat
push
add
mov
and
ss
daa
rorb
cmpsl
push
pop
call
stc
dec
push
shlb
cld
decb
movsl
push
or
out
lods
pusha
adc
stos
dec
cli
sbb
andl
pushf
lock
repnz
ror
sub
pop
mov
xlat
test
mov
xchg
adc
or
insl
sbb
mov
jnp
mov
push
pop
rcrb
pop
mov
mov
jae
dec
fstp
xchg
out
cmpsl
push
lcall
xor
sbb
std
mov
daa
or
push
call
test
fwait
shrd
test
xor
push
dec
sbbl
rorb
inc
jl
negl
sbb
adc
mov
add
repnz
popf
and
imul
mov
inc
mov
das
pop
nop
or
in
mov
out
sahf
lret
lcall
call
iret
lret
cld
push
sbb
imul
std
cmp
xchg
mov
adc
fnstenv
dec
adc
jmp
mov
inc
mov
mov
and
aaa
jnp
hlt
stos
cmp
in
loop
jmp
mov
jns
cli
lods
push
shll
lods
push
jecxz
push
cmp
popa
scas
mov
xchg
aaa
lea
mov
scas
insl
out
scas
pushf
insb
cwtl
loopne
xor
lcall
pop
push
sbb
mov
xchg
xchg
pop
mov
push
xchg
pop
mov
adc
sbb
rcr
dec
inc
out
mov
icebp
out
aas
addr16
leave
push
je
xchg
dec
daa
loopne
loope
lret
loop
or
xlat
mov
ror
add
sub
popf
popf
mov
add
or
dec
int
daa
subl
addr16
pop
inc
mov
push
inc
sub
pop
xchg
ds
cmp
decb
adc
push
jnp
jnp
mov
or
pop
shll
shlb
push
push
gs
jne
cmp
mov
out
mov
jns
into
inc
mov
in
lret
pushl
or
jge
and
sub
pop
in
in
stc
test
sahf
mov
xor
shrl
sub
mov
test
popf
push
sbb
aad
ret
inc
pop
add
sub
or
cwtl
mov
sub
push
xchg
pop
pop
arpl
inc
roll
jmp
cs
dec
cmpsl
cmp
inc
lea
sbb
fnsave
aaa
mov
outsb
sub
ja
retw
dec
push
pushf
dec
movsb
inc
sbb
lea
xchg
pop
xchg
sar
mov
pop
mov
cmpsb
sbb
lods
xlat
pop
data16
lret
sbb
inc
lcall
daa
xor
popa
scas
sti
int3
add
cmp
push
aas
mov
sarl
sub
xchg
out
mov
xchg
ud2
mov
out
mov
in
inc
jb
mov
xchg
sbb
cmc
add
cli
adc
cmp
inc
nop
xchg
mov
inc
dec
adc
std
jl
lret
jge
xchg
das
fists
xchg
and
sub
jns
mov
lret
imul
je
cmp
stos
mov
inc
or
push
sbb
or
cmp
outsb
hlt
mov
cmp
cmpsl
pushf
or
movb
jb
mov
insl
jg
jne
and
add
repnz
stos
scas
adc
insb
cmpsb
push
fisubrs
rcll
mov
sbb
xor
test
adc
mov
pusha
dec
pop
cld
and
aam
xor
stc
ss
lods
outsb
inc
add
inc
adc
mov
xchg
pop
inc
push
sub
repz
sub
cld
dec
bound
jp
mov
in
push
gs
data16
mov
insl
daa
cli
fistpl
inc
adc
in
xchg
insl
popa
icebp
dec
pop
pop
out
jge
into
in
loope
jno
fidivs
push
fs
cmpsl
scas
dec
add
clc
lock
mov
xor
xor
cmpsl
mov
jmp
mov
subb
xchg
lods
xchg
or
inc
std
dec
and
jne
imul
pusha
cmp
jnp
fildll
inc
mov
daa
lock
adc
mov
fs
andps
mov
ret
test
add
add
in
fimull
stc
dec
jne
mov
push
sub
sbb
lcall
xor
hlt
push
das
pop
sbb
clc
adc
adc
or
push
pop
mov
mov
js
adc
lods
scas
push
mov
dec
add
sbb
adc
add
fnstcw
jb
sub
inc
movsb
je
jecxz
inc
push
push
das
lods
pop
jge
and
sbb
xchg
fists
push
push
nop
shl
scas
lea
daa
jno
mov
sub
mov
sub
mov
es
cltd
add
lea
popa
push
mov
pop
inc
cmp
daa
insl
addr16
test
rolb
xor
mov
int
jne
cltd
in
lret
jno
pop
xor
insb
push
inc
sti
and
aad
push
enter
sbb
inc
lods
inc
into
iret
xlat
adc
lods
repz
jmp
sub
add
cmc
lock
inc
push
sbb
sbb
cmc
sar
push
popf
loopne
adc
xchg
std
ret
mov
xchg
dec
je
sbb
in
xchg
pop
pop
mov
stos
fwait
lods
dec
and
xor
cmp
jne
push
pusha
je
mov
lea
out
jmp
pop
pop
or
test
cmp
inc
push
repz
push
adc
gs
mov
jmp
and
clc
lahf
xchg
insb
lret
xor
test
mov
jno
mov
das
jno
inc
inc
and
testl
jg
fwait
dec
addl
inc
insb
dec
xchg
leave
push
pop
pop
int3
jp
sub
popf
daa
lods
imul
mov
inc
dec
and
cli
adc
mov
mov
push
and
adc
cmc
loop
mov
and
and
or
stc
jl
push
iret
sub
test
daa
mov
int3
sub
mov
sbb
imul
pop
pop
cmp
sbb
sbb
loope
shll
test
ret
lea
outsl
cmp
cmp
fists
movlps
mov
rorl
inc
cmp
fs
mov
xchg
cmp
insb
out
pop
imul
pop
jmp
out
loop
jmp
sbb
movsb
sub
in
push
push
das
xor
mov
push
imul
inc
sub
push
add
rcr
push
push
jecxz
sub
xor
push
jae
gs
in
xchg
mov
cwtl
sbb
and
loop
dec
cmp
loop
or
mov
pop
xor
mov
fcoms
xor
cmpsl
aad
mov
repz
and
jnp
xchg
jle
push
aad
cmp
rcl
jecxz
push
push
loope
popf
sub
in
add
mov
push
inc
inc
ja
cmp
jecxz
cmp
fisubl
lahf
sbb
fcmovbe
popa
lock
pop
cmp
mov
scas
xor
mov
adc
adc
imul
pop
cmp
pushf
xor
jecxz
push
mov
mov
dec
outsl
inc
mov
mov
lea
imul
aaa
xor
push
sahf
mov
add
push
jnp
icebp
jbe
in
or
mov
mov
repz
xor
jo
cltd
loopne
push
das
dec
pushf
lds
cmpsl
testl
aam
bound
scas
xchg
xorb
mov
and
rcrl
jae
push
ficoml
add
int3
test
adc
movsb
ds
cmpsl
loopne
cmpb
fwait
mov
dec
xchg
ret
cs
xchg
sbb
pop
and
js
add
adc
scas
hlt
or
push
mov
aaa
cmc
jecxz
or
fnstsw
fsubrp
pop
int3
add
shll
add
push
mov
push
das
scas
sub
xor
inc
fs
cmp
stos
cld
stc
pop
sarl
addr16
fptan
lret
hlt
or
popa
loop
loopne
fs
fs
orl
sbb
daa
repnz
loop
inc
cli
cmpsl
lea
or
push
es
sub
xor
ret
fcoms
loopne
pop
in
fbld
sub
jge
sti
shr
xchg
push
pop
addl
and
jne
jl
jnp
pop
xchg
sub
or
inc
gs
xchg
jo
sub
lods
out
cmp
sbb
je
jno
and
ficoml
int
mov
addb
lcall
mov
movsl
push
mov
and
sbb
adc
inc
pop
inc
out
pop
hlt
rcrb
mov
shrb
sbb
pushf
hlt
xor
stos
fs
mov
jae
sub
cmp
jmp
fistpl
push
or
push
mov
call
push
popf
movl
test
adc
daa
popl
jmp
mov
clc
inc
push
fmuls
icebp
mov
rorl
subl
adc
xor
cmp
jnp
sub
pushf
jns
or
fidivrl
rorl
and
jl
test
ror
outsl
mov
pop
mov
pop
jnp
pop
mov
mov
or
sub
pushf
jnp
dec
pop
cli
out
and
xor
or
and
pop
mov
in
cmc
ss
in
cwtl
push
lret
sbb
dec
shrl
frstor
jecxz
mov
rcr
adc
sub
jp
adc
pop
ljmp
sbb
add
xorl
pop
adc
lret
mov
pop
xor
cmc
mov
or
sbb
imul
mov
movsl
jmp
aas
stc
sub
sti
imul
pop
fnstcw
out
xchg
test
inc
adc
xor
int3
xchg
cmpsl
xchg
push
inc
sar
lret
xchg
adc
push
sbb
xor
mov
jmp
push
stc
sub
adcb
movsl
mov
mov
jbe
scas
or
adc
xor
int3
orl
nop
popa
dec
int
inc
fbstp
push
es
sti
inc
lcall
ja
loope
cwtl
sbb
cmp
adc
sbb
daa
popf
mov
dec
sti
sbb
cmpsl
jne
push
sbb
push
hlt
loope
mov
cmp
push
mov
sahf
pop
mov
cltd
jo
arpl
leave
pop
push
in
pop
test
fdivs
hlt
xchg
inc
and
and
jp
rol
movsl
jbe
dec
and
scas
inc
jno
xchg
pop
scas
repz
push
std
push
ja
cmp
dec
dec
out
icebp
dec
pop
lea
jl
aas
push
mov
inc
shrl
lods
xchg
cmp
dec
stos
pop
and
dec
in
xorl
mov
dec
or
jbe
sub
movsb
lahf
xchg
mov
sbb
lock
push
leave
hlt
daa
pop
push
cli
inc
or
xchg
or
addr16
cwtl
sub
and
xor
stos
stos
out
arpl
shll
call
shrb
jle
inc
mov
cmp
xor
movsl
fcos
xor
add
push
mov
adc
and
les
popf
pop
xchg
sbb
pop
imul
push
push
or
movsb
iret
mov
in
shl
lds
outsl
shll
movb
sbb
pop
jns
xor
nop
stos
pop
cmpb
in
fwait
push
jnp
or
shl
sbb
xlat
loopne
xchg
les
movsb
xchg
xchg
lret
jp
jns
mov
lcall
mov
out
or
and
mov
repz
adc
and
movsl
push
push
pop
stc
jge
leave
xchg
push
inc
mov
fmuls
arpl
and
lret
mov
and
lcall
or
add
cmpsb
orb
int3
bound
ds
jae
and
addr16
loopne
or
adc
rol
cmp
jb
push
inc
es
addb
call
jl
fwait
or
lds
mov
in
ss
test
movsb
and
xchg
fmull
mov
cld
dec
pop
sub
or
mov
jno
iret
cmpsl
mov
dec
sbb
mov
or
jno
scas
cmp
xchg
fdivrl
sub
clc
jne
outsb
ds
test
test
and
sub
adc
sub
add
push
ja
xchg
sub
inc
jbe
imul
addr16
shl
dec
dec
xor
fucomip
in
adc
loopne
fdivs
ljmp
sub
jmp
mov
mov
jo
shrl
sarl
mov
sbb
daa
adc
jl
fisttpl
int3
xchg
call
mov
and
xor
or
jno
inc
or
pushf
mov
sub
inc
mov
into
jp
jl
xchg
pusha
out
cmp
inc
dec
inc
inc
lods
push
in
icebp
dec
cmp
xor
popa
add
jno
frstor
test
pop
or
mov
jb
push
xor
stos
sub
shlb
cmp
adc
jmp
push
sti
mov
sbbl
fcomps
lahf
lcall
imul
mov
mov
mov
pop
sbb
int3
or
popf
sub
mov
push
cld
call
xor
jmp
add
imul
mov
das
aad
in
inc
mov
loop
xor
daa
and
imul
dec
mov
fdivl
test
faddl
pop
cmp
shll
adc
roll
out
mov
lcall
pusha
out
add
mov
mov
imul
mov
sbbl
lods
pop
sahf
mov
loop
lods
sahf
lahf
add
pop
andb
mov
mov
mov
mov
rolb
adc
add
sbb
jge
in
xchg
pop
out
addr16
aad
mov
aad
jge
xchg
dec
movsb
mov
stos
sub
adc
jno
out
inc
movsb
mov
mov
daa
pop
push
test
sub
push
mov
es
ret
test
das
fs
aam
stc
sbb
data16
mov
cs
lds
mov
subb
ret
adc
mov
lds
push
inc
das
mov
std
xchg
or
and
dec
xlat
aas
nop
in
addl
int3
rcrl
pop
test
call
xlat
mov
inc
cmc
or
xchg
repz
call
fmull
mov
pop
faddl
iret
cmpsl
mov
inc
jo
dec
mov
daa
pop
mov
dec
sbb
mov
sar
pop
jne
push
adc
pusha
mov
sub
movsb
inc
dec
push
mov
xor
xchg
dec
dec
daa
mov
fcompl
aaa
pop
out
sbb
popa
imul
dec
es
mov
loopne
fscale
inc
shll
cmp
adc
push
popa
fstpl
xor
dec
jbe
in
repz
je
pop
mov
mov
add
mov
pop
dec
ds
add
adc
ret
adc
xchg
jecxz
add
adc
fcomps
dec
mov
mov
outsl
inc
push
cs
sbb
mov
pop
shr
xchg
or
setno
cmp
mov
rorl
cmp
addl
jnp
push
lds
repz
add
adc
out
push
outsl
mov
mov
push
popa
inc
cmp
pop
shl
jle
adc
jae
adc
adc
mov
sub
les
jmp
xor
jnp
cld
cmpl
mov
cmp
xchg
popf
push
int3
aad
push
cmp
add
hlt
and
inc
push
dec
test
aam
cmp
pop
or
sbb
scas
or
js
stos
jno
mov
ret
pop
mov
ret
std
imul
fwait
icebp
in
movsl
sbb
inc
inc
insb
mov
pop
dec
sbb
cmc
cli
mov
mov
lds
inc
hlt
or
jg
hlt
pop
orb
push
jmp
bound
inc
lahf
cmpl
sbb
jmp
fwait
mov
inc
mov
icebp
or
sbb
push
xchg
cltd
add
ds
mov
mov
loopne
and
icebp
ror
shrb
sub
mov
mov
imul
or
add
daa
mov
push
scas
push
xchg
lcall
xchg
push
stc
fwait
in
jmp
cwtl
pop
jle
or
sbb
push
or
orb
aad
inc
mov
push
btr
xchg
add
adc
sub
jmp
sbb
cld
push
loope
mov
xchg
lret
cmp
pop
or
adc
mov
mov
cmp
or
or
inc
push
js
loop
dec
shrl
lcall
inc
movsl
ret
stos
cltd
jl
pop
jge
aas
xor
sub
daa
mov
fwait
push
jg
jge
pop
leave
aad
inc
mov
push
inc
sub
stos
popa
and
mull
setb
add
scas
daa
adc
push
daa
scas
push
shlb
inc
les
aas
xor
cmpsb
pop
inc
jno
movsb
mov
pushf
mov
push
ficoml
push
fwait
aas
daa
cwtl
cli
pop
jge
inc
fdivr
inc
rcll
push
lds
or
fadds
add
fnstsw
out
imul
push
mov
test
movsb
stos
mov
stos
xchg
dec
lcall
ficomps
cmpsl
sbb
aam
push
or
xor
dec
lods
insb
mov
or
or
test
push
sub
sbb
daa
dec
rcll
lods
push
cmpb
or
xorb
mov
add
jne
add
jne
or
xchg
sbb
mov
out
xorl
inc
xlat
xchg
scas
mov
stc
inc
inc
test
add
fstpt
xchg
add
mov
push
je
in
loopne
jno
xchg
pop
insb
lcall
out
cmpsb
ss
xor
adc
shrb
rcll
push
pop
push
movsl
inc
mov
sub
decl
jne
scas
dec
les
lock
test
push
xchg
popf
jecxz
pusha
or
push
in
cmp
aas
rcpps
divb
outsb
test
stos
sub
in
push
ja
imul
push
loope
sbb
repz
inc
ficomps
inc
mov
sbb
mov
inc
sub
hlt
jge
xchg
andb
xlat
psllq
xchg
and
cmp
cmp
mov
outsb
or
es
xchg
leave
fwait
outsl
arpl
cltd
mov
cmp
les
pop
inc
std
sbb
loope
in
call
push
cwtl
jns
sbb
cmp
jge
jle
jns
insl
sti
mov
adc
lock
or
xor
push
add
add
cltd
mov
inc
cmc
outsl
xchg
jle
inc
cmp
daa
das
lods
lret
sti
and
mov
or
les
orl
jb
jno
cld
pop
aas
rorb
in
sbb
in
in
shrl
and
sub
scas
push
shrb
loopne
xchg
dec
jno
adc
out
ret
movsb
mov
out
mov
pop
packuswb
sub
sbb
mov
jle
mov
sbb
idivb
divl
aad
pop
ficompl
push
mov
xor
pop
jb
pushf
bswap
adc
sub
xchg
lcall
dec
movsl
shll
sub
es
push
nop
push
fnstcw
aas
mov
jl
push
mov
es
repnz
pop
gs
lcall
sub
sub
cmp
jnp
sbb
fbld
fwait
pop
cwtl
icebp
aad
ja
push
lods
mov
sbb
xlat
pop
sbb
cmpsl
sbb
mov
mov
or
jp
pop
push
mov
inc
jae
or
mov
sub
mov
aas
fmull
repz
cmp
dec
sbb
dec
aad
adc
loopne
cmc
popa
sub
pop
jp
aaa
ret
adc
sbb
inc
dec
scas
es
lret
bound
test
mov
arpl
sbb
lret
inc
andb
xchg
jecxz
or
mov
cmc
call
ss
sub
or
mov
cwtl
outsl
and
xor
loopne
mov
adc
add
push
neg
outsb
xor
dec
pop
lds
scas
adc
jne
outsl
mov
adc
and
pop
mov
push
xchg
sub
dec
add
cmp
js
and
stc
or
sbbb
lods
popf
xchg
das
js
xchg
rcr
jecxz
or
inc
cld
jecxz
inc
icebp
rcrl
out
push
xchg
movlps
and
scas
leave
dec
xchg
dec
shrb
loop
loopne
cmp
pop
and
test
jp
sub
mov
inc
xor
rorl
pop
jnp
or
inc
mov
xlat
sbb
iret
add
jae
stc
pop
pushf
mov
jnp
cmp
add
or
mov
int3
mov
out
push
mov
jns
xor
add
or
je
push
dec
lds
and
call
or
sub
cltd
fwait
xor
hlt
mov
xor
inc
icebp
xchg
jp
mov
pop
dec
lods
popa
inc
daa
adc
mov
sub
inc
xorl
inc
adc
push
mov
push
inc
xor
out
add
outsl
in
xchg
enter
jmp
in
or
es
adc
cs
push
rcrb
pop
out
jle
imul
fdivrs
popf
sbb
syscall
ja
xchg
test
sahf
jae
add
or
sti
repz
push
or
cmp
mov
mov
fst
les
out
cld
ss
mov
pop
mov
aaa
gs
mov
scas
pop
fdivrl
inc
les
in
push
mov
or
arpl
xor
mov
add
fisubl
mov
sbb
enter
stos
or
cmc
hlt
int3
daa
adcb
in
stc
xchg
pusha
adc
lcall
es
out
xchg
and
cmp
and
sbb
cltd
or
xlat
sbb
scas
inc
xchg
bound
iret
inc
js
movsb
cld
jle
sub
divb
aas
pop
leave
cmc
add
stos
or
mov
leave
movsb
pop
out
pushf
add
sbb
les
addr16
inc
out
scas
daa
ds
push
cmpsl
orl
and
adc
out
sahf
xchg
and
xor
lea
push
mov
daa
pop
pop
and
push
dec
push
xor
hlt
or
dec
mov
stos
cs
shl
cmc
daa
fsubs
inc
pop
je
xchg
cmp
aaa
ret
push
add
mov
stos
push
daa
js
push
mov
into
pop
adc
jne
sbb
lahf
push
sbb
adc
lods
sti
enter
xchg
pushf
enter
xor
adc
mov
jo
daa
or
test
dec
xchg
sbb
out
jb
pop
adc
in
sub
cld
rcrl
lock
inc
stos
loop
push
gs
std
inc
lret
dec
xor
in
in
sub
aam
scas
fwait
jns
repz
mov
and
sbb
stc
push
das
sti
sub
xor
cmp
xor
int
sub
arpl
push
push
cld
push
add
or
sub
mov
mov
popf
add
inc
sbb
sbb
dec
pop
xor
mov
xchg
in
mov
inc
and
adc
movsb
or
lods
test
sbb
mov
dec
mov
rolb
sbb
popf
xlat
mov
ret
dec
sbb
mov
push
xchg
add
jmp
add
cmc
and
mov
btc
mov
je
imul
dec
cmpsl
or
pop
or
pop
adc
mov
test
sub
xlat
jnp
cmp
mov
jno
hlt
pop
and
push
sbb
cmp
in
les
add
xor
bound
es
adcb
pop
cld
ljmp
ror
cmpsl
xchg
out
nop
out
fwait
xchg
imul
paddsb
fstpl
add
lock
repz
xor
insb
daa
mov
push
jmp
ror
call
cltd
push
ret
nop
xor
mov
mov
out
mov
je
pop
xor
dec
push
call
mov
mov
dec
fisubrs
pop
and
std
pop
bound
xorb
stc
mov
cmp
fdivp
dec
jnp
pushf
std
pop
dec
imul
dec
inc
pop
sub
dec
dec
sbb
imul
xchg
push
in
jecxz
xchg
jp
mov
daa
rolb
fabs
pop
push
adc
xor
int
int
xor
mov
rorl
xchg
inc
lods
pop
inc
xorl
fsubs
add
in
stos
cmp
dec
jle
or
pop
pop
ffree
mov
orb
xor
push
lods
fnstsw
ret
stos
jne
dec
add
sti
xor
std
xlat
fs
sbb
adc
jmp
pushf
mov
xor
pop
sbb
inc
sub
inc
pop
jl
mov
data16
jae
jno
push
sub
pop
inc
lea
imul
imulb
or
repz
rol
fbstp
ja
xchg
sbb
in
push
fistl
mov
xchg
lea
loop
mov
mov
push
jl,pn
std
call
cmc
lret
push
outsl
lret
fs
xorb
nop
cwtl
push
adc
dec
popf
loope
rcrb
cwtl
cmpsl
iret
xorb
inc
sbb
or
repnz
add
out
mov
sahf
sbbl
aam
ret
adc
sbb
idivb
je
cmpsl
adc
mov
inc
in
push
cmp
pop
pop
rcrb
and
sbb
cmpsl
add
inc
int
jnp
or
adc
dec
ds
cmp
outsb
xlat
popl
push
xlat
jb
sub
jne
lahf
pop
push
cmp
icebp
inc
sarl
shrb
sbb
inc
sbb
aaa
inc
xchg
ljmp
sarb
push
push
divl
ret
push
xchg
pop
mov
aam
cmp
and
movsl
add
xchg
orl
mov
adcl
jnp
cltd
pop
decl
push
mov
addr16
std
in
xchg
cmp
sar
test
push
adc
mov
lret
dec
dec
sub
out
mov
in
xchg
sbb
or
out
push
cmp
dec
in
cltd
or
mov
jp
out
loop
gs
hlt
scas
or
cwtl
sahf
das
cmp
inc
call
ficoml
xor
or
push
inc
adc
xchg
imull
add
cwtl
mov
out
pop
jae
pop
sbb
adc
or
jg
jne
movsl
call
addr16
xchg
aam
cmp
dec
and
push
sub
cs
push
add
dec
lret
inc
lea
into
cmp
out
adcb
cs
test
sbb
arpl
pusha
xor
stc
pop
loope
scas
and
iret
cld
psubusb
or
pop
je
jne
out
jnp
cmpsb
stos
sub
mov
xchg
adc
add
outsl
lea
push
ret
fmuls
pop
inc
fs
push
mov
cmpsb
int
push
or
aaa
fmull
dec
xor
imul
cmp
loop
xor
icebp
push
sbb
add
and
cwtl
pop
gs
jle
iret
aas
sbb
test
bnd
xchg
popf
into
or
idivb
cmpsl
fidivrs
inc
outsl
sbb
out
enter
and
stc
or
icebp
mov
in
xchg
out
mov
or
sbb
popa
lds
pop
shlb
sub
popa
add
xchg
mov
adc
popl
sbb
lods
out
test
imul
lcall
daa
scas
movsb
sub
xchg
in
jge
ljmp
test
xor
xchg
popa
sub
imul
je
or
daa
mov
pop
popa
mov
pop
and
imul
test
int3
add
popf
jg
push
xlat
je
mov
jnp
stos
arpl
xor
inc
inc
cmp
push
mov
stc
imul
mov
popf
aam
add
arpl
pop
jecxz
adc
xchg
adc
mov
or
cmc
and
daa
adc
mov
pushl
iret
popf
movb
cmpb
in
jge
jge
jl
sub
jb
ljmp
sub
ret
mov
xchg
aad
sbb
jecxz
imul
movsb
aam
out
mov
mov
jb
lea
aad
mov
push
dec
mov
jp
in
hlt
mov
mov
sarb
in
dec
sbb
pusha
add
adc
mov
mov
sbb
or
mov
insb
and
fldcw
lock
sbb
rorb
pop
push
aas
loop
daa
adc
and
mov
mov
popa
push
call
rorb
inc
adc
lret
adc
scas
sbb
lods
push
mov
mov
sbb
xlat
in
adcl
pop
cmc
mov
fadds
loop
call
adc
pop
insb
movsl
inc
xor
aam
das
stc
push
pop
mov
pop
popa
mov
icebp
fwait
dec
push
push
repz
sbb
cmpsb
cmp
mov
push
hlt
sbb
mov
sub
adc
push
scas
dec
lods
or
sub
sbb
and
mov
out
cmc
ljmp
xchg
mov
jecxz
pop
mov
lret
cmpsb
test
loopne
je
mov
sarb
pop
and
jg
mov
push
dec
inc
loop
inc
lret
shl
mov
xchg
call
push
mov
adc
movsl
aad
inc
arpl
add
push
ljmp
std
push
sarb
xor
test
push
adc
inc
adc
add
and
stos
je
mov
popa
dec
cmp
dec
dec
scas
pop
test
jl
mov
dec
imul
mov
aaa
shrb
cmp
jmp
mov
or
pop
out
data16
paddusw
xchg
cmp
push
pop
push
adc
adc
sti
xor
int
or
push
cld
cmc
xchg
sbb
and
or
mov
push
pop
insl
in
or
xchg
cmp
mov
icebp
pop
imul
sub
notb
push
pop
das
jmp
mov
lcall
pop
add
or
adc
vcvtpd2ps
cli
rcrl
inc
in
fcmovne
cmp
cmpsb
test
xchg
sbb
push
ret
jecxz
xchg
dec
mov
inc
shll
js
adc
and
pop
movsb
xor
pop
sub
xor
test
adc
inc
xchg
adc
js
jge
sahf
out
loopne
xchg
push
mov
sub
sahf
sbb
rcrl
mov
popa
loope
out
xor
or
xchg
mov
cmp
es
shlb
adc
cwtl
aaa
aam
jnp
sbb
mov
xchg
mov
loope
jns
mov
jae
mov
in
sahf
clc
xchg
movb
lock
mov
and
int3
dec
lods
mov
dec
jae
adc
pop
adc
or
shll
push
loop
push
out
dec
mov
inc
push
xorb
cmp
push
sbb
enter
cmc
je
roll
jmp
leave
out
mov
aam
movsb
arpl
cmc
data16
sti
add
xchg
sbb
pop
sbb
nop
leave
dec
xlat
pop
lods
pop
cld
add
pop
push
mov
mov
test
adc
imul
lret
sub
bound
addr16
movsl
dec
mov
push
jno
mov
add
arpl
fstps
lahf
mov
sbb
sbbl
ljmp
enter
add
inc
and
sbb
sbb
mov
sbb
cld
cltd
shlb
xchg
in
daa
ljmp
inc
mov
in
add
loop
std
sbbl
push
sbb
pushl
push
and
loope
pop
ja
aad
shll
sub
mov
xor
int3
xchg
dec
inc
mov
fildl
rcrl
ret
arpl
out
mov
add
sbb
cltd
in
mov
cwtl
pop
jns
xor
mov
sbb
andb
jns
pusha
adc
addr16
lods
sub
mov
add
inc
dec
lds
scas
xchg
cmp
gs
sbb
dec
push
pop
add
xchg
ds
pop
shl
pop
jecxz
adc
mov
mov
adc
mov
sub
add
dec
sbb
cwtl
xor
jmp
insl
flds
shrb
mov
push
cwtl
test
xchg
xor
pop
inc
dec
pop
inc
adc
push
add
dec
xchg
enter
lcall
lahf
jl
mov
dec
cmc
inc
xor
sub
out
lods
mov
test
mov
out
dec
xchg
mov
add
sub
out
ret
cld
aad
pop
daa
inc
out
dec
sbb
rcr
inc
pop
js
sahf
push
bound
jg
xchg
xor
je
cli
int3
cmp
aam
addr16
out
xchg
mov
mov
pop
inc
pusha
push
lret
daa
lea
cmp
adc
dec
aaa
repz
aad
loope
or
adc
clc
adc
push
dec
imul
and
or
mov
insb
inc
imul
mov
mov
and
test
lret
xchg
int3
shll
cli
mov
push
jge
cli
cltd
xchg
lock
jbe
cmp
nop
xchg
mov
push
jmp
fcoml
push
jns
repz
jp
iret
or
and
rolb
sbb
inc
mov
sub
addr16
sub
push
adc
call
cmc
repz
xchg
push
cmp
daa
jo
not
dec
xchg
repnz
lods
inc
push
iret
cmp
adc
lds
ret
nop
mov
and
fwait
out
out
mov
xchg
sbb
mov
push
stos
daa
hlt
mov
inc
jp
aam
ficomps
loop
scas
mov
fs
pop
lret
cmp
push
sub
hlt
scas
adc
and
insb
std
mov
mov
aam
inc
sahf
mov
sub
mov
mov
push
lcall
shll
pop
enter
mov
pop
push
cwtl
adc
and
lds
in
jmp
mov
je
cmpsl
push
inc
push
xchg
mov
pusha
cli
cltd
xchg
pop
mov
movsb
inc
or
inc
and
push
hlt
adc
push
imul
out
push
cmp
inc
mov
aaa
mov
mov
out
inc
cmc
icebp
cmp
and
mov
ss
add
cmpsl
mov
ljmp
hlt
or
mov
test
mov
mov
dec
lds
outsl
xchg
cwtl
mov
adc
in
or
test
sub
push
insl
mov
aaa
adc
das
push
push
nop
pop
adc
push
ja
xchg
fs
sub
mov
sbb
lcall
bound
sub
cmp
push
jecxz
loopne
adc
cli
and
xchg
popf
ret
nop
mov
xchg
pop
dec
inc
xadd
mov
fsubs
cwtl
xchg
mov
mov
sub
rol
jno
test
mov
aam
mov
xchg
dec
adc
scas
rorb
or
insb
scas
xchg
insl
cvtpi2ps
std
mov
mov
mov
test
shll
in
sarl
xor
adcl
jbe
dec
pusha
faddl
mov
pop
loopne
out
stos
adc
cmp
mov
push
das
lds
fs
imull
int
add
je
aaa
fwait
std
push
aad
aad
test
push
sahf
pusha
adc
dec
sub
mov
les
bound
frndint
daa
fadds
push
cli
jl
lds
scas
aad
aas
and
xchg
xor
loope
sub
stos
mov
push
or
or
popf
and
ds
stos
faddl
adc
ljmp
xlat
cwtl
and
out
mov
jp
daa
test
push
push
cwtl
inc
hlt
pop
xchg
test
and
jbe
rcll
cmpsl
in
aaa
xchg
or
cltd
test
pushl
enter
sub
popf
in
inc
loope
pop
iret
mov
adc
cmp
test
imul
mov
mov
push
jnp
ret
xchg
cmp
adc
cmp
je
mov
adcl
ja
mov
or
bound
lret
mov
cmp
test
inc
cmp
xchg
mov
orb
push
lock
sbb
mov
jne
and
and
inc
pop
push
scas
xorl
test
inc
aam
pop
stos
in
push
cmp
push
dec
fisttpl
popa
mov
or
pop
jbe
lret
aad
sub
or
or
mov
fsubrl
rclb
fdivrl
cmc
clc
out
sub
cmpsb
stc
push
js
pop
loope
sbb
dec
pmaxub
sub
movsb
nop
cmpb
hlt
cmp
dec
pop
dec
xchg
mov
pop
cvtpi2ps
es
xor
xor
sbb
clc
dec
fimull
loopne
jae
loope
fidivrs
inc
movsb
test
mov
sub
lcall
mov
ret
adc
push
daa
shlb
push
pusha
iret
sub
and
ret
sahf
ficompl
out
enter
mov
adc
mov
xor
xor
inc
negb
dec
cmp
pop
cmp
cwtl
mov
sbb
add
dec
or
leave
inc
mov
sub
cltd
loopne
stos
pop
mov
mov
mov
jle
adc
xchg
jno
sarb
fimull
outsb
stos
daa
push
das
mov
push
fsubl
pop
cmc
and
or
ret
mov
leave
test
mov
inc
out
xor
mov
mov
jle
inc
roll
fisubl
ret
pop
aaa
mov
sub
bound
push
xchg
aad
cmp
shr
xor
insl
jnp
movsl
sbb
mov
leave
cwtl
xor
mov
xchg
int3
cwtl
js
into
inc
adcl
push
aam
xchg
je
mov
faddp
cmp
sbb
lods
test
mov
cld
cmpsb
scas
lahf
lret
or
fwait
lret
cmovle
aad
notl
mov
mov
popa
sub
cmp
sub
sub
inc
mov
pop
fwait
loopne
mov
cs
ljmp
daa
lods
xor
pushf
out
xchg
cmp
call
mov
or
pop
mov
loop
pushf
mov
daa
mov
dec
mov
mov
jl
add
leave
jge
cmp
insl
loope
rorb
je
sarb
fimull
jae
and
sbb
aas
sub
mov
pop
std
jae
test
ret
icebp
es
scas
cld
add
ljmp
andl
inc
sub
inc
push
push
pop
mov
mov
and
dec
mov
jge
pop
test
out
sbb
daa
or
gs
int3
fdivl
clc
pushf
pop
jnp
xor
sahf
insl
dec
xor
loope
mov
cmp
pusha
test
out
fldcw
aad
and
push
and
mulb
sub
std
adc
mov
jecxz
sahf
ss
sbb
scas
jp
or
adc
out
xor
mov
std
xchg
fucomip
inc
sub
pushf
pushw
stc
pop
stc
add
pushf
xchg
daa
out
lock
ja
daa
dec
push
pop
pushf
pop
sbbb
and
lret
mov
add
sbb
mov
mov
dec
mov
std
inc
inc
adc
sbb
and
movsl
push
mov
xchg
add
ret
test
adc
cmp
daa
jbe
pop
and
cmpsb
mov
jae
push
xchg
cwtl
lea
addr16
jne
adc
push
push
hlt
cmpsb
cmp
jl
cmpsb
add
test
cmp
fwait
clc
inc
mov
push
adc
or
mov
mov
mov
cmp
xchg
dec
mov
test
xor
push
inc
mov
ret
jge
loopne
aas
push
test
psrlw
or
push
xchg
adc
sbb
cmp
or
jae
cmpsb
stc
pop
loope
hlt
mov
push
insb
pop
shll
or
sub
cli
stc
rclb
inc
mov
das
adc
dec
mov
ret
fistpll
icebp
mov
push
ljmp
inc
xchg
push
jnp
xor
sub
adc
xor
add
sbb
sbb
in
adc
loope
and
jge
lcall
add
inc
aas
adc
sti
xor
push
or
mov
scas
xchg
adc
and
daa
aam
out
jns
sbb
fsts
or
repnz
in
or
pushf
pop
adc
loop
adc
dec
lods
pop
push
lds
xor
jns
ja
rclb
cmpsl
jne
or
fists
movsb
ds
inc
inc
lret
loop
mov
call
mov
and
pop
fwait
dec
daa
rorl
pop
and
and
inc
in
jno
test
imul
daa
scas
cmp
push
cmpl
dec
sti
and
daa
push
lcall
adc
clc
mov
cmpsb
popa
arpl
out
xchg
jno
adc
mov
add
push
jecxz
xchg
cmp
sub
sub
pop
xchg
mov
popa
push
sbb
mov
rolb
push
mov
xlat
daa
frstor
add
sbbb
adc
pop
out
int
jmp
mov
pop
test
push
xchg
cmp
inc
outsl
mov
push
jg
loope
sti
adc
and
xlat
lods
dec
js
dec
loop
xlat
cwtl
fisttps
leave
mov
sbb
mov
andb
lock
aaa
fldl
rcrb
push
mov
sbb
push
pusha
in
aas
call
clc
mov
daa
sbb
and
insb
push
cmp
push
jg
pop
jno
cmp
mov
in
scas
and
daa
out
xchg
gs
shlb
add
in
and
jae
ss
test
je
popf
daa
cltd
in
ror
cli
mov
or
push
inc
in
xor
mov
sub
sbb
ficomps
dec
mov
mov
add
fiaddl
out
cmp
push
jae
adc
jno
je
arpl
cmpsb
mov
aad
cmpsl
fsubp
and
ljmp
push
push
cmpsl
or
nop
stos
addr16
mov
ret
enter
push
pop
rorl
sbb
xchg
sbb
pop
leave
adc
daa
cmp
cld
sbb
mov
rcrl
out
loope
xor
popf
arpl
pop
inc
std
hlt
jle
add
push
call
mov
mov
arpl
aaa
or
pop
and
mov
shl
push
pop
pop
fcomp
and
aad
dec
cmp
push
fsubrs
daa
cld
test
int
sbbl
mov
and
xor
sbb
dec
pop
pop
mov
cmp
ret
lret
mov
push
mov
push
sbb
jmp
mov
adc
xchg
iret
push
xchg
inc
inc
pop
and
sahf
mov
add
lds
shrl
jg
cld
push
inc
out
mov
iret
and
cs
add
lret
pusha
pop
adc
leave
pop
ret
lret
or
mov
in
push
pushf
pop
push
mov
dec
ret
mov
aad
adc
adc
ljmp
jnp
sub
and
dec
lea
in
in
ja
mov
fidivrl
pop
sub
push
inc
cmc
cmpsl
adc
call
dec
into
or
or
jmp
shlb
lahf
adc
mov
fdiv
in
jbe
arpl
pop
loop
xor
mov
adc
sub
stos
das
jmp
pop
mov
inc
and
sbb
into
push
inc
rcll
sti
jmp
daa
lret
arpl
mov
call
push
jg
mov
dec
daa
mov
add
scas
hlt
sbb
jge
and
and
or
dec
insl
movl
xchg
ljmp
jmp
test
and
add
stc
scas
repz
out
xchg
outsb
es
xchg
jmp
mov
push
cli
inc
and
mov
add
shrl
in
stc
pop
mov
jmp
out
shlb
pop
daa
and
xchg
jecxz
pop
pushf
sbb
scas
push
aas
insb
test
pop
lcall
sub
sahf
imul
sbb
rcrl
jmp
inc
mov
add
pop
fisttpl
push
sub
mov
pusha
push
rcrl
fsub
movnti
jno
in
adc
add
sbb
inc
test
xchg
popa
cmc
pop
mov
in
and
pop
adc
mov
stc
fadd
xchg
xchg
testl
sahf
rcll
xchg
mov
jmp
xor
hlt
jae
subb
sbb
notl
insb
push
or
cmp
incb
push
roll
push
loopne
inc
das
mov
fiadds
jge
pop
stos
enter
mov
insl
pusha
icebp
leave
mov
inc
push
sub
out
in
sbb
call
adc
stos
lcall
stos
stos
push
out
dec
movsb
cmp
daa
iret
rcrl
sub
xchg
mov
mov
out
jns
xchg
cltd
ljmp
mov
nop
cld
loopne
fmulp
mov
mov
pop
scas
sbb
pusha
andb
rol
test
ret
dec
inc
xor
xor
sbb
sbb
movlps
cmp
ds
inc
or
pop
lock
xor
leave
or
pop
xchg
inc
int3
sbb
ficoms
mov
sub
es
gs
pfadd
pop
adc
inc
jns
adc
and
std
or
mov
adc
mov
lcall
pop
jb
sbb
mov
pop
mov
jg
pop
and
or
pxor
cmp
push
addl
pop
mov
mov
xchg
daa
out
or
pop
shlb
pop
test
ret
jno
mov
sbb
test
or
ljmp
imul
xchg
mov
mov
adc
sub
push
aas
mov
scas
repz
adc
pop
ret
jp
sbb
fdivl
rclb
ja
es
jecxz
adc
adc
loope
popa
js
std
and
sub
dec
data16
add
jp
int3
loope
push
stos
jmp
mov
mull
lcall
je
fcmovbe
mov
nop
mov
and
fdivp
mov
xchg
push
mov
out
and
mov
les
lds
pop
js
into
sub
les
es
mov
xchg
inc
in
pushf
cmp
push
and
mov
xlat
pop
out
xchg
mov
call
sbb
push
adc
add
jns
dec
out
adc
addr16
mov
pop
dec
shll
ss
dec
sub
pop
and
loopne
sub
mov
inc
sub
pop
ret
jg
cmp
xchg
pop
jle
mov
out
data16
cmp
push
inc
lods
cmp
hlt
cmpsb
decl
and
fdivl
les
movhps
rcrb
jnp
bound
xor
stc
js
in
cmp
arpl
and
or
das
daa
dec
dec
test
fwait
jns
and
or
jl
pop
dec
mov
sti
adc
inc
or
daa
aas
push
dec
pop
xchg
fiadds
icebp
or
orl
icebp
inc
lret
push
roll
mov
jns
ljmp
aam
adc
adc
test
out
adc
fisttpll
cmp
ret
jmp
or
data16
les
cmp
cwtl
or
lock
nopl
mov
cmp
or
pop
and
aaa
or
sbb
sbb
gs
push
add
mov
jecxz
or
push
out
out
jno
sub
jle
jge
lahf
int
in
lea
inc
sbb
mov
test
stc
lret
cld
xchg
push
aas
push
ss
push
stos
divl
jmp
or
inc
lret
in
pop
or
aas
cmp
jge
les
sub
mov
cmpl
out
fcompl
ss
mov
fdivrs
rclb
or
andl
out
dec
push
das
inc
dec
pop
or
inc
inc
pusha
or
cmp
jns,pn
lock
clc
imul
adc
cmp
jge
add
sbb
xchg
pop
push
int3
sub
pavgb
mov
or
mov
call
or
inc
sbb
xor
vcmpps
or
mov
inc
jmp
jno
pop
push
jle
inc
lahf
or
sbb
cld
pop
dec
idivl
mov
pop
fisttpll
out
and
insl
mov
sbb
and
in
or
dec
leave
lods
mov
sbb
mov
sub
movsb
sub
add
push
push
dec
mov
movsb
or
jno
js
jl
loop
mov
jg
ret
pusha
sub
aam
push
or
lret
arpl
jns
ds
xchg
or
lcall
or
pop
cli
cs
cltd
jl
or
je
mov
out
in
adc
notb
mov
xor
aas
arpl
lret
call
jo
push
cmpsb
lock
push
and
scas
add
mov
int
mov
pcmpgtw
and
fidivrs
aas
outsl
inc
shll
mov
jecxz
fisttpll
loopne
cmp
or
push
push
pop
int3
sub
int3
or
dec
or
rcrl
or
sub
cltd
or
mov
mov
mov
mov
scas
aaa
adc
or
pop
fnstcw
or
push
add
cltd
arpl
outsl
ljmp
xor
dec
dec
loop
dec
or
hlt
jnp
ja
lds
leave
or
loopne
lods
xor
dec
lcall
adc
int
mov
sub
std
mov
sub
pop
push
repz
mov
sbb
rcrl
or
sahf
and
sub
jle
std
jmp
movsb
cld
js
lods
jl
inc
and
repz
sahf
or
cmc
jae
mov
mov
jmp
fcoms
pushf
or
inc
repnz
outsb
sub
xchg
daa
and
or
rcrl
mov
test
imul
fs
dec
lret
and
jmp
fistpll
loope
cmp
sub
mov
dec
in
inc
lahf
stos
add
sahf
lret
js
push
adc
xchg
jmp
or
hlt
and
les
xchg
adc
imul
sbb
arpl
sub
sub
out
movsl
pusha
lret
out
or
cli
rorb
xor
push
pop
inc
and
lds
insb
movsb
shlb
aad
icebp
sub
add
lret
scas
and
popf
ret
aam
gs
daa
cltd
lods
xor
cli
sbb
mov
repz
jne
dec
fisubrs
sub
dec
xchg
or
sub
or
dec
and
lahf
push
mov
and
pop
pop
or
cmpl
call
push
and
comiss
sub
imul
push
jmp
push
jns
pop
cmc
or
pop
iret
sub
shrb
insl
fisubs
shlb
std
adc
outsb
lods
decl
lock
mov
repnz
push
pop
inc
xor
or
mov
cmp
mov
inc
insl
xor
jbe
add
in
adc
mov
pop
adc
insl
popf
out
test
jmp
inc
or
xchg
ror
and
outsl
aad
in
ss
push
xor
daa
xchg
orb
icebp
or
and
pop
int
jmp
ret
repz
aad
loope
inc
inc
aas
mov
aam
lret
xor
jl
cli
in
sub
imul
push
pop
repz
ret
cltd
mov
or
cmp
orb
clc
adc
por
or
lock
add
mov
push
or
push
sbb
jmp
imul
pushl
sbb
pop
and
clc
subb
xlat
pop
fisttps
shlb
xchg
cs
dec
pop
std
push
xchg
out
lret
mov
or
add
dec
jno
and
mov
add
sbb
or
sahf
cmp
and
enter
mov
dec
sbb
arpl
push
pop
sbb
lods
xchg
test
stc
sub
inc
data16
ljmp
xchg
xor
in
cld
and
lret
popa
mov
loop
jbe
jecxz
xchg
sbb
int3
lods
test
fisttpll
xor
adc
mov
ficoml
iret
pop
divb
mov
inc
adc
mov
or
push
clc
outsb
sti
cltd
test
sbb
enter
es
fldt
or
mov
repz
push
ja
gs
lock
or
clc
mov
mov
les
cmp
mov
xorl
and
mov
cmpsb
ret
mov
fdivrs
adc
push
cmp
sbb
push
pushf
adc
pop
ljmp
ljmp
ss
xchg
or
sbb
loopne
pop
cmc
pop
mov
shr
fstpt
iret
jae
jne
out
scas
ljmp
jb
ja
shrl
pop
xor
jo
fadd
cmp
ljmp
adc
mov
xchg
cltd
pop
adc
outsb
ljmp
es
sub
repz
mov
or
sub
cld
jb
ror
daa
dec
mov
int3
or
or
push
rep
out
push
es
ret
ljmp
add
or
cld
mov
popl
ret
out
or
inc
mov
or
test
inc
fisubrl
or
orl
sti
jmp
mov
xchg
sub
bound
popf
ljmp
shl
imul
pop
dec
int
inc
sbb
ds
add
sbb
sub
or
inc
jmp
dec
in
imul
xor
push
sbb
push
cld
fisttpl
test
add
or
int
sub
push
out
push
xchg
data16
and
or
cs
je
pop
dec
jns
loop
repz
push
or
dec
lock
imul
mov
or
push
push
loopne
sti
pop
mov
fistps
pop
mov
fwait
inc
jnp
cs
mov
sbb
or
rorl
negl
call
incl
in
jns
or
aam
sbb
mulb
loopne
cmp
daa
xchg
mov
and
jmp
and
jo
outsb
stc
lock
adc
inc
imul
sbb
jle
sbb
lret
xchg
or
in
or
cmp
icebp
shll
test
push
xchg
cmp
or
clc
and
and
sub
or
or
out
mov
push
ret
or
sarb
aas
cmp
or
xor
dec
in
inc
lea
int
daa
and
cmp
pop
std
add
scas
xchg
stos
aaa
cltd
mov
adc
sub
aad
xor
lret
insb
xor
mov
insb
add
aaa
push
not
ja
lock
idivb
mov
jmp
mov
push
push
icebp
mov
sbb
lret
aad
into
jae
push
andps
cwtl
lock
ds
cmp
aad
ret
popf
inc
jmp
sbb
mov
and
push
daa
xor
jb
pop
dec
clc
xchg
dec
cmp
or
adc
or
in
outsl
cmove
dec
sub
or
loopne
xlat
sub
xchg
imul
call
push
lret
mov
sub
aam
jae
xchg
adcl
and
jbe
sub
pop
xchg
jae
sarb
les
cmpsb
shlb
xor
xor
sbb
ror
pop
ret
leave
cmpsb
push
cmp
movsl
ljmp
mov
sbb
pop
add
jo
sbb
scas
dec
jnp
pop
add
addr16
fldenv
sbb
push
xchg
jle
inc
xlat
aam
rorl
add
inc
enter
xor
mov
stos
mov
fimull
stc
insb
lcall
and
je
daa
aaa
push
push
loop
scas
pop
add
inc
mov
arpl
clc
and
xor
cmp
xor
jmp
mov
add
sbb
adcb
mov
ljmp
shll
push
ljmp
rcr
clc
in
cli
movb
jne
sbb
or
int3
and
dec
push
or
sub
mov
rol
lock
mov
popf
pop
sbbl
ffree
jge
push
into
and
mov
sub
push
or
cltd
bound
loope
in
insb
sbb
jo
movsl
mov
xlat
and
mov
ds
mov
pop
xor
xchg
xor
pop
ret
insb
stos
lea
cmp
fisubl
dec
sbbl
mov
lret
pop
roll
adc
xor
adc
xor
faddl
in
add
sub
jg
kmovw
dec
or
movb
sub
pop
jecxz
mov
adcb
sbb
xchg
das
xor
sub
or
inc
or
daa
test
negl
outsb
and
in
sarl
jg
mov
or
sbb
push
or
fimuls
mov
movsl
xor
mov
or
sbb
xchg
sarl
insb
cltd
jecxz
lods
ljmp
sbb
or
mov
mov
mov
lret
or
adc
aad
out
sub
mov
fxch
push
mov
and
mov
mov
cmpsl
jecxz
addr16
xchg
mov
leave
xor
pop
dec
push
addr16
ljmp
xchg
push
jmp
outsl
push
sub
pop
ret
adc
lret
vmwrite
dec
xchg
pop
int3
loop
arpl
xchg
mov
fucompp
xchg
xor
repz
push
and
sbb
pop
in
xchg
loop
sbb
dec
and
popa
les
xlat
cmovp
mov
cmp
mov
std
not
xchg
mov
sub
mov
loopne
psubusb
gs
popf
push
push
fcmovnbe
sub
out
and
sub
sbb
or
push
mov
pop
inc
pop
mov
sub
sub
xor
adc
sub
dec
dec
push
outsb
sbb
dec
and
scas
adc
scas
sti
add
in
jo
imul
movsl
and
sahf
adc
mov
xchg
or
ljmp
dec
sub
sub
mov
add
aaa
jno
pop
and
test
xor
stc
mov
dec
hlt
adc
dec
xchg
ja
dec
ljmp
loopne
and
mov
in
adc
mov
das
and
addr16
icebp
lahf
xchg
sbb
cmp
adc
cmp
imul
cltd
pusha
scas
mov
int
lea
loope
mov
fldenv
adc
sbb
fadds
popa
jl
or
xor
jmp
mov
sbb
and
lods
jae
sub
jg
xchg
popf
and
or
and
xchg
es
sub
mov
pushf
sbb
inc
aas
sub
adc
pop
popf
dec
pop
outsl
adc
mov
sub
std
dec
arpl
xchg
xchg
call
xchg
cwtl
sub
mov
mov
pop
and
mov
movzbl
xor
cld
sbb
adc
sbb
xchg
xchg
and
pop
mov
rcrl
test
arpl
insl
and
movsl
inc
sub
pushf
ret
and
repz
imul
mov
adc
sbb
loop
les
mov
and
jbe
sub
xor
sub
cmp
or
icebp
xchg
out
dec
clc
and
adc
push
shlb
arpl
cwtl
sub
shrb
sbb
sub
or
stos
push
jge
icebp
arpl
xorb
xchg
sbb
in
inc
or
or
cltd
adcl
mov
or
xchg
out
cmp
sbb
inc
push
jbe
pop
lods
scas
movsl
sub
out
mov
jmp
pop
pop
sub
mov
enter
mov
aad
xor
and
ja
jno
or
jp
mov
or
mov
pusha
ficoms
into
dec
arpl
inc
cmp
iret
sub
push
lds
and
imul
incb
sbb
lahf
xchg
nop
push
fsts
in
push
mov
fstpl
dec
repnz
or
hlt
jmp
add
dec
test
dec
inc
ret
adc
dec
dec
add
pop
mov
lcall
andb
and
mov
and
imul
sbb
mov
cmp
lcall
mov
shlb
leave
popa
dec
sub
dec
jne
sub
cli
or
sarb
ja
jge
pop
sub
jae
jmp
dec
pop
and
ja
loopne
cmpsb
fnstsw
ret
and
adc
mov
inc
mov
sub
add
aam
and
xchg
sbb
dec
es
popf
pop
sub
int3
insb
stos
ficoml
push
dec
add
ret
xchg
jp
xchg
aad
add
jmp
and
aam
push
cltd
xor
pop
cmpl
and
and
dec
sbb
cwtl
and
int
jmp
aam
arpl
or
push
mov
and
cmp
f2xm1
add
dec
xchg
cmpsb
dec
xor
push
gs
inc
inc
xor
sbb
ret
js
sub
cmc
sub
fcompl
push
push
or
cltd
cmp
pop
add
popf
dec
jno
cmp
outsl
and
rolb
jae
popa
out
jbe
mov
mov
aad
adc
push
and
stos
iret
arpl
xchg
cmp
cmp
call
mov
cmp
pop
and
sbb
stos
ret
xchg
iret
jae
sbb
xchg
in
data16
cld
loope
enter
imul
jmp
jb
int3
addl
push
popf
xor
enter
lods
dec
mov
xchg
inc
cmp
lods
inc
out
repz
les
dec
xchg
lea
popa
mov
or
fadds
sub
dec
rcll
jg
in
dec
sub
cmp
sub
pusha
out
pop
repnz
mov
sub
or
dec
cmp
adc
jns
sbb
cli
adc
mov
lcall
inc
xchg
mulb
xchg
leave
scas
cmc
sbbl
fs
pop
mov
adc
loop
push
loope
pop
scas
std
dec
push
test
xor
add
out
xchg
outsb
cwtl
fcmovnb
outsl
in
adc
sub
sbb
sbb
bswap
jo
sub
jo
sbb
sub
test
loop
dec
cmc
inc
cmp
pop
outsl
sbb
or
sub
xchg
pusha
movsb
xor
mov
pop
jnp
ret
or
sub
xchg
xchg
sti
fisttps
xor
es
addl
pop
add
ret
pushf
lea
inc
mov
xor
inc
pushf
in
pushf
hlt
mov
jae
push
sub
pop
dec
dec
add
sti
jns
cwtl
in
aas
adc
or
sub
pop
cmp
sbb
push
dec
mov
xor
imull
or
andl
pop
call
sbb
into
add
xchg
hlt
ficompl
lcall
in
hlt
repnz
or
punpckhbw
ds
sbb
xor
sbbl
orb
in
jae
adc
or
adc
or
ljmp
jo
outsb
mov
add
andb
sbb
insl
mov
jp
mov
dec
or
gs
push
add
insb
mov
popa
out
cwtl
adc
mov
mov
cltd
stc
shrb
xor
and
test
enter
jae
hlt
xchg
xchg
and
adc
mov
and
or
movsb
orl
adcl
xchg
sub
icebp
mov
sbb
and
movsb
mov
ret
mov
daa
lods
and
arpl
mov
cmp
ret
adc
mov
push
mov
loope
cmp
xor
and
adc
cmpsl
lea
les
adc
sub
xchg
lcall
sti
stos
in
xlat
mov
or
lods
sbb
xchg
js
sub
sbb
movsl
and
movsb
pop
and
sub
es
and
andl
xchg
in
sbb
push
xor
push
rorl
repz
mov
lret
lret
push
xchg
pop
add
lea
jecxz
movsl
sub
lcall
repz
xor
fwait
sbb
or
push
sub
sub
push
popf
test
bswap
sub
lock
push
stc
xorl
sub
mov
fisttpll
xchg
adc
or
loope
loop
lcall
mov
pop
and
scas
jl
or
loope
in
dec
sub
adc
mov
ds
mov
jae
je
popf
or
or
mov
adc
stc
pop
in
or
add
and
and
movsl
jmp
mov
sbb
sbb
aaa
add
in
sti
jp
and
push
cli
jge
fdivrl
das
dec
sbb
push
outsl
push
jecxz
jnp
or
dec
arpl
dec
sub
sub
push
xor
cmp
sub
xchg
push
sbb
xor
dec
push
xchg
cmp
lret
inc
or
cmpl
idivb
and
sub
add
iret
xchg
cmpsl
shlb
ljmp
jo
int3
movsb
jmp
or
jp
xchg
sbb
dec
mov
push
adc
push
xchg
mov
sub
loop
int3
lds
call
out
mov
jmp
rorb
mov
negl
add
jo
push
xchg
xor
inc
and
push
stos
in
push
orb
cmpsb
sub
sub
xor
xchg
inc
ja
sahf
xchg
mov
aas
inc
xchg
inc
add
xchg
shrl
enter
mov
jmp
xor
xor
loop
mov
xchg
ret
std
stos
call
push
xchg
lret
jne
sbbb
fs
lcall
cs
test
xchg
adc
xchg
lret
mov
ret
data16
xchg
sti
mov
shlb
and
or
mov
adc
sbbl
adc
bound
insb
ds
dec
push
push
imul
mov
jmp
enter
mov
lcall
and
inc
out
and
ja
ljmp
pause
fildll
push
inc
adc
lods
jbe
xchg
sub
cmp
pop
add
jecxz
data16
lahf
xchg
jmp
sub
mov
xor
mov
bound
loope
jl
ja
sbb
pusha
dec
sbb
sbb
and
scas
dec
icebp
push
or
xchg
cmp
in
int3
roll
or
scas
std
xchg
movsb
adc
sub
jge
pop
test
aam
dec
mov
outsl
std
subl
stos
sub
inc
in
jecxz
int3
out
jbe
sub
mov
test
adc
cwtl
dec
int
add
xorb
fsubl
mov
inc
es
inc
sbb
ret
test
cmpl
push
call
out
adc
out
inc
mov
aad
data16
xchg
or
dec
in
inc
loop
sub
inc
mov
sub
sub
cwtl
pop
mov
adc
sub
lea
add
jo
adc
ljmp
fcoml
push
bound
movsl
xor
outsb
sub
xchg
mov
mov
or
jb
sbb
daa
outsb
inc
int3
push
pusha
and
stos
sub
icebp
ljmp
adc
es
xchg
and
push
shrl
scas
pop
mov
ljmp
lock
lods
mov
icebp
cmp
rorl
aam
mov
in
xchg
sbb
cmovo
scas
adc
in
push
imull
test
or
out
ljmp
and
adc
andl
fdivrs
mov
imul
cld
sub
jg
in
add
movsl
adc
stos
push
sub
iret
mov
and
pop
xchg
or
mov
leave
sub
out
xor
xchg
sub
pop
or
cltd
cld
push
pop
jnp
sub
push
mov
push
addr16
movl
xor
sub
test
sbb
sbb
push
stc
xchg
adc
ret
inc
adc
cmpsb
adc
sbb
mov
out
pop
sbb
add
or
cmp
or
jns
insb
jb
push
mov
or
or
ds
or
pop
sarb
ret
sbbb
push
adc
cwtl
add
adc
lahf
das
adcl
sbb
sbb
dec
loop
dec
push
adc
faddl
mov
fwait
adc
cmpsl
insb
sub
sub
jns
test
gs
push
int3
dec
mov
xor
mov
xchg
xor
xor
or
dec
addr16
sti
xchg
and
jo
rorl
sub
mov
jbe
dec
arpl
sbb
jp
sarb
push
adc
mov
hlt
dec
into
dec
lcall
sbb
enter
cmpsl
dec
mov
adc
sbb
dec
xor
test
dec
jo
call
push
adcl
ret
not
dec
xchg
cli
and
stc
inc
mov
and
pop
pop
scas
fnstsw
mov
cld
js
sbb
sbb
sbb
aam
bndstx
pop
xchg
inc
aad
adc
insb
or
lahf
or
ljmp
xchg
adc
mov
inc
std
lods
add
leave
sub
ljmp
sahf
sub
ficompl
and
xor
sbb
sub
sbb
inc
pop
mov
jae
in
mull
xchg
mov
pusha
fisubrl
in
jbe
paddusb
xchg
sbb
lds
popf
pop
xor
pop
pop
inc
fs
js
mov
and
test
lahf
jmp
xor
outsb
and
push
cmp
call
lds
sbb
mov
clc
inc
repnz
ret
mov
inc
lods
mov
lret
mov
mov
mov
and
shrl
test
lret
or
daa
out
or
sub
daa
sbb
jnp
sti
adc
mov
push
and
adc
cltd
cmpsb
dec
ljmp
push
and
or
lcall
ret
cs
bound
dec
sub
or
sub
xchg
cmp
adc
or
cmp
sbb
adc
cwtl
negl
adc
cmp
js
ss
fwait
xchg
cmp
fcompl
jle
sub
andb
dec
push
pop
xchg
and
inc
imul
xchg
pop
ror
dec
cmp
pop
jo
push
and
loop
arpl
and
scas
outsb
add
out
das
or
inc
fwait
ja
ljmp
cmpsl
dec
pop
inc
and
xchg
adc
lahf
adc
adc
test
in
jecxz
stos
dec
pop
icebp
mov
push
or
movsb
push
push
mov
sub
int
shll
es
mov
daa
sbb
fwait
jecxz
sbb
sbb
jmp
aad
repnz
sub
add
test
sub
popf
lcall
pusha
sarl
xlat
inc
pop
push
jae
add
adcb
test
mov
dec
aad
push
test
dec
leave
mov
loope
mov
pushf
les
adc
jmp
jp
cmpsl
rolb
cmp
or
in
push
adc
dec
cmpsb
xchg
or
shll
and
les
mov
lret
cmp
shrl
mov
pop
sbb
adc
sbb
jo
andl
outsl
aaa
and
push
out
cltd
dec
add
dec
push
xchg
push
xchg
outsb
mov
adcl
push
je
adc
mov
sub
mov
push
sbbl
je
mov
and
enter
outsl
dec
adc
adc
out
adc
jbe
insb
outsl
test
xor
add
rcrl
jnp
rorb
mov
sahf
and
pop
pop
cmpsl
adc
arpl
jmp
insb
lret
insl
push
xchg
xchg
xor
push
pop
xchg
cltd
insb
test
arpl
cmpsl
std
js
push
cmp
rclb
fdivr
xchg
ljmp
aas
mov
xor
pop
dec
add
out
add
addl
xchg
sbb
dec
outsl
cmp
ljmp
xchg
or
push
call
fwait
jns
sub
out
mov
dec
les
mov
popf
adc
in
cmp
adc
in
push
lea
mov
lret
xchg
and
or
push
aas
xchg
daa
loope
pop
or
lock
mov
or
out
fistl
jnp
dec
dec
lods
push
or
outsl
lods
sub
push
cmpsb
sbb
in
std
test
dec
adc
imul
lcall
or
adc
cli
add
cmc
xchg
hlt
or
or
cmpsb
sbb
cmp
or
out
pop
repz
mov
pusha
fsts
and
jbe
mov
nop
out
sub
push
push
stc
xor
inc
fbld
fstpl
push
or
orl
int
adcl
jecxz
inc
jmp
cli
rorl
lcall
es
fstl
pop
lcall
sbb
outsb
fidivs
dec
adc
pushw
mov
add
orb
and
sub
jecxz
push
es
frstor
mov
and
je
sub
adc
pop
dec
data16
fisubrl
imul
or
push
sbb
adc
hlt
mov
fwait
and
push
cmc
sbb
outsl
xor
mov
sbb
sbb
cwtl
add
gs
mov
xchg
aaa
sbb
loope
pushf
xchg
ret
adc
mov
dec
leave
xchg
fstps
jns
stos
lods
mov
loop
orb
into
push
push
adc
pop
mov
pop
cmc
sbb
dec
pop
inc
daa
and
sbb
inc
jo
lcall
inc
or
or
jmp
or
dec
xchg
push
in
adc
sbb
dec
je
pop
jns
or
in
or
sbb
lea
pop
sub
outsb
xor
je
mov
and
lahf
pushf
inc
lret
adc
lcall
hlt
jb
pop
lcall
imul
sub
pushf
popa
arpl
push
dec
clc
mov
lea
sbb
ret
inc
fwait
cmp
ret
mov
mov
jg
mov
sub
xchg
sbb
jecxz
or
xchg
pop
jo
adc
xor
in
or
and
push
dec
sub
pop
jecxz
xchg
jo
mov
icebp
ficoml
push
mov
add
pop
push
pop
sahf
stos
jmp
sub
gs
push
sub
cltd
or
push
fs
test
dec
hlt
mov
seta
sub
stos
mov
pusha
es
mov
xchg
sbb
fs
call
lock
push
sub
lds
mov
and
xchg
je
scas
ret
sub
cmp
add
add
xchg
inc
inc
cmpsl
or
jmp
aad
adc
jecxz
mov
jo
mov
and
adc
adc
push
mov
mov
xorl
mov
adc
cltd
sti
lret
and
jp
shrl
mov
test
xor
jbe
sub
xor
pop
outsl
adc
xchg
adc
sbb
out
std
sub
sub
or
mov
lcall
popf
sbb
sbb
hlt
std
sbb
cli
xchg
pop
negb
nop
mov
into
dec
or
addr16
cmp
js
dec
in
mov
add
insb
jge
fists
movsl
cs
adc
sbb
pusha
leave
stos
cmc
sub
adc
mov
push
scas
sbbl
imul
dec
xchg
mov
sahf
xchg
addr16
push
adc
push
cli
mov
pop
std
dec
call
push
jecxz
and
and
daa
push
stos
iret
or
subb
push
mov
xchg
mov
pop
arpl
and
orb
pusha
testl
leave
mov
and
test
loopne
and
or
sub
xchg
pushf
sub
neg
sub
fists
shll
sub
insb
add
mov
adc
adc
mov
jmp
shrl
orb
sub
adc
movsl
adc
lcall
mov
adc
ja
icebp
add
adc
sub
dec
adc
pop
mov
fistpll
sbb
lods
out
mov
shrl
decl
sbb
inc
sahf
inc
jnp
orl
mov
pushf
push
xchg
sbb
xchg
sub
mov
sbb
out
out
or
xchg
pop
xor
xlat
jns
push
mov
popf
xchg
pop
add
pop
test
mov
js
cld
or
mov
dec
daa
iret
fstpl
lds
scas
sbb
mov
mov
dec
aaa
or
out
fsubs
jmp
xchg
popa
mov
enter
xor
xchg
inc
lretw
mov
adc
xchg
aad
pop
and
push
out
repz
sbb
and
pop
push
mov
cmpsb
stos
in
push
outsb
dec
xchg
das
push
stos
jle
add
sarl
enter
inc
mov
pushf
movsl
data16
dec
and
imul
pop
mul
adc
fadd
and
lea
push
xlat
pop
mov
aas
outsb
lret
and
stos
popf
stc
outsl
xchg
jecxz
adc
movsl
int
iret
pushf
sbb
aam
and
sub
mov
stos
pushf
bound
or
scas
leave
gs
push
mov
adc
sbb
inc
movsl
in
xor
adc
pop
mov
jmp
neg
sbb
xchg
in
xchg
sti
dec
daa
adcl
mov
ret
xorl
fwait
mov
dec
cs
and
outsb
dec
jmp
movsl
adc
sbb
sbb
jle
push
loopne
xchg
shr
pop
push
cmp
clc
sub
fimull
cld
sub
std
ljmp
or
mov
sub
and
push
nop
and
jae
std
or
sbb
push
mov
or
mov
stc
pop
js
pop
movsb
sbb
loope
insb
out
rcrl
ret
sar
out
push
cmp
sub
ljmp
loop
push
add
adc
repz
ftst
cmpsl
xor
fistpll
jae
cmp
std
test
or
mov
sarl
sbb
lcall
sbb
push
inc
sub
icebp
imul
fimull
xchg
xchg
adc
ljmp
and
push
dec
jecxz
cmp
cmpsl
mov
pop
push
sbb
enter
xchg
in
mov
movsb
xlat
loope
fistpl
dec
roll
or
lea
int3
push
gs
mov
lahf
int3
sbb
sbb
in
pop
adc
dec
sub
xchg
sub
fidivrs
fistl
xchg
shr
sub
adc
pop
pop
std
int3
icebp
test
pusha
sahf
shll
jb
movsb
jno
or
sub
inc
add
icebp
and
or
pop
in
test
or
pop
roll
sub
mov
xor
sbb
jge
movsb
in
mov
sbb
xchg
xorb
jns
iret
sahf
dec
fwait
scas
xchg
adc
add
inc
and
hlt
fcompl
adc
sbb
sbbb
hlt
dec
xor
cmpl
push
push
scas
mov
sbb
fcomip
pop
push
inc
and
pop
jg
and
fdivrl
mov
mov
sbb
mov
cmp
mov
addr16
sub
mov
or
mov
cltd
dec
push
das
jo
and
popa
dec
repz
or
mov
orl
pusha
and
addb
add
sbb
movsl
mov
les
sub
xor
adc
mov
lods
sbb
jg
sub
idivl
xchg
stos
decb
popf
icebp
dec
cmp
pop
lea
jne
fildll
mov
repz
dec
mov
sub
fldt
push
sub
push
or
xchg
dec
sarl
mov
or
lods
insb
fwait
pop
jecxz
adc
or
es
mov
or
rcrb
or
data16
imul
xchg
sub
xchg
pushf
xlat
push
js
dec
push
jns
add
add
sbb
xor
cmpsl
dec
mov
or
sbb
and
addr16
sub
cs
push
loope
outsl
mov
cmpsl
push
jae
jns
lret
pop
jecxz
lret
mov
lds
xchg
jg
out
test
or
imul
and
sub
mov
xchg
jmp
jb
shll
pop
in
inc
push
push
push
xchg
sub
jecxz
cltd
dec
sti
test
sbb
xor
test
cmpsb
jmp
mov
ljmp
mov
insl
bound
or
xchg
mov
jb
fs
push
xchg
adc
mov
jge
adc
dec
push
and
jmp
call
sbb
fbld
xchg
dec
shr
arpl
ret
rcll
or
pop
adc
sub
into
jmp
pop
movsl
or
mov
or
aam
roll
push
loopne
add
sbb
hlt
push
pop
adc
adc
dec
mov
icebp
scas
rclb
sbb
inc
sub
sub
pop
and
mov
lcall
clc
or
sub
fwait
popa
adc
and
dec
js
movsb
lcall
nop
in
add
ret
sub
dec
xor
cmc
lcall
xchg
cmp
rorb
out
lods
ja
or
scas
cmp
jl
push
jo
cmp
in
sbb
in
and
call
test
or
mov
mov
cmpsl
mov
lea
cltd
out
fsubrs
lock
int
popa
sbb
cmp
adc
in
dec
lods
sahf
popa
sbb
push
push
jl
pop
lods
cmp
ret
push
call
sbb
cwtl
dec
out
and
js
in
adc
hlt
jbe
dec
adc
cmp
mov
jmp
adc
and
data16
push
jecxz
lods
adc
mov
pop
cwtl
scas
jg
bound
or
mov
jl
call
mov
xchg
imul
push
adcb
rcl
pop
or
pop
push
lds
sub
imul
andb
sbb
adc
jo
pop
and
xor
sub
pop
xchg
and
je
lcall
das
icebp
push
and
pop
or
mov
and
cli
cmpsb
out
sbb
dec
loop
adc
out
dec
dec
test
js
dec
jno
pop
lcall
mov
sub
xchg
jno
mov
sub
testl
cmp
mov
adc
iret
mov
rcrl
movsl
cltd
cmp
call
mov
int
sub
insl
or
mov
in
adc
cwtl
add
push
sub
mov
xor
orl
arpl
or
out
fwait
lret
cwtl
xchg
pushf
fs
dec
or
sbb
add
aad
jmp
std
pop
inc
sbb
sbb
bound
xchg
ret
add
xchg
lcall
pushf
fwait
and
mov
or
mov
adc
or
pushaw
andb
jne
ret
jle
push
sarb
movhps
inc
pop
and
sti
dec
nop
repz
rorl
mov
or
and
push
adc
mov
nop
sbb
shl
jae
adc
mov
and
mov
jo
and
out
call
rcrb
pop
div
xchg
adc
ljmp
mov
push
jecxz
out
push
iret
fwait
xchg
push
push
pop
dec
sarl
subl
sub
jb
mov
sbbl
cwtl
rclb
cmp
enter
fldlg2
inc
mov
sbbb
sbb
cmpsb
and
add
mov
xchg
andb
xchg
xchg
imul
xchg
sbb
dec
lret
pop
xchg
in
fwait
ljmp
push
push
push
cmpsl
add
adc
pop
in
cwtl
sub
xor
jmp
adc
bound
pushf
or
adc
and
push
lock
and
jecxz
push
sub
xlat
mov
sub
es
std
mov
test
popa
cwtl
in
rclb
sub
mov
adc
mov
sbb
sub
insl
inc
call
sbb
mov
push
ss
js
sub
pop
jns
and
sti
xor
mov
lahf
ret
sub
adc
fmull
in
xchg
add
jb
pusha
xor
adc
mov
ds
mov
adc
mov
jmp
jge
dec
cmpsb
push
pop
xchg
push
and
adc
leave
cmpl
movl
xchg
inc
aas
mov
pop
js
jle
pop
sub
popf
cmpsb
xchg
sarl
sbb
test
inc
lahf
subb
cli
jns
mov
or
pop
sahf
addl
sub
push
mov
mov
imul
or
adc
mov
xor
test
data16
fwait
cmp
or
nop
mov
jle
xchg
sahf
pop
pop
movsb
es
aaa
mov
push
cmpsl
popf
adc
and
mov
test
ss
fwait
movsb
imul
sti
addr16
and
sbb
and
jecxz
in
xchg
sub
mov
inc
lea
push
fwait
sbb
add
or
mov
es
test
aas
cmp
in
std
lds
add
sbb
adc
jb
stos
mov
movups
cmpsb
popf
movsl
add
and
push
jl
push
mov
push
sub
pop
pop
test
pop
mov
mov
das
jecxz
mov
sbb
shrb
dec
fisttpl
xchg
nop
mov
and
dec
insl
inc
or
mov
mov
pop
test
sbb
push
std
call
adc
add
xchg
dec
pushl
xor
jecxz
xor
adc
dec
fists
and
mov
sbb
mov
mov
adc
pusha
or
or
cwtl
shl
cmp
push
das
insb
mov
cmp
push
es
or
insb
filds
mov
mov
movsl
movsl
ret
sub
sub
lret
int
push
cmpsb
dec
push
repnz
lret
das
dec
push
test
pop
pop
stc
mov
mov
movsl
aaa
jae
xchg
push
enter
cmp
pop
push
pushf
adc
mov
data16
shrd
cmp
xlat
outsl
xor
sbb
lods
push
xor
lahf
insl
dec
in
enter
adc
mov
scas
ret
lcall
xor
stos
pop
push
adc
xor
push
jns
mov
in
lds
mov
loope
icebp
cmpsl
pushf
cmp
mov
xor
and
test
mov
push
jmp
sub
shll
pop
insb
mov
rorb
xor
jne
mov
stc
cmp
or
scas
adc
fisubl
mov
ret
popa
xchg
adc
fwait
and
cwtl
xor
sub
scas
adc
addr16
add
inc
test
xorb
lahf
cmp
test
sub
or
ja
int
mov
sahf
or
test
out
pop
loope
fwait
dec
test
fldl
pop
dec
add
adc
addr16
add
scas
and
adc
fwait
sbb
les
sbb
mov
out
fisubrs
jmp
lcall
fcomps
add
cltd
and
idivb
fadd
data16
mov
inc
pop
sbb
int
mov
enter
pusha
mov
mov
test
sbb
or
jbe
cmpsl
push
movsb
add
push
jecxz
shrl
cmp
mov
add
xchg
sbb
in
pop
xchg
and
jle
cmpsl
repz
dec
shll
es
test
fnsave
xchg
movsb
adc
pop
add
dec
adcl
imul
mov
inc
or
cltd
sbb
inc
mov
mov
scas
enter
sbb
cli
lea
jo
pop
dec
sub
dec
inc
ret
aad
and
hlt
int3
sub
cmp
push
jno
lcall
scas
jmp
lods
popf
dec
mov
sbb
das
add
xchg
push
dec
enter
push
inc
sbb
sbb
add
nop
dec
andl
sbb
push
adc
rorl
and
xlat
adc
cmp
ret
std
lock
call
dec
push
jne
pop
arpl
mov
adc
sbb
pushf
mov
mov
ret
adc
push
scas
addr16
mov
push
xchg
sub
xchg
movsb
movsb
push
mov
mov
cmp
jae
cmc
cmp
mov
adc
dec
mov
push
cmpsl
and
mov
dec
sbb
imulb
sbb
push
xchg
mov
test
dec
daa
or
js
dec
lods
jb
sub
push
stc
sahf
and
adc
sub
outsb
inc
sbb
dec
sub
cmpsl
or
cmpsb
dec
and
iret
cwtl
cwtl
and
inc
mov
pop
and
or
xchg
and
insl
inc
mov
rorl
out
jnp
sub
push
sbb
sbb
stos
or
mov
dec
push
jns
sub
and
and
aad
dec
xchg
xor
lea
dec
and
or
mov
dec
mov
push
inc
add
push
popf
xchg
je
pop
adc
pop
jo
cmp
adc
mov
jno
xchg
lds
pop
or
mov
add
xchg
sbb
lock
and
mov
or
test
or
lret
xor
cwtl
es
sbb
push
push
cmp
movsb
cmp
leave
add
lock
jge
into
fwait
sub
cmp
sbb
push
and
sar
arpl
add
xchg
xchg
sub
repz
xor
add
mov
out
icebp
or
lea
subl
push
sub
xchg
cmc
or
inc
mov
dec
or
inc
ds
lods
mov
xchg
test
cmp
arpl
pop
dec
scas
cmpsl
ret
cmp
js
mov
pop
inc
addb
jmp
adc
adc
enter
ret
arpl
or
adc
push
xor
loop
dec
pusha
popf
nop
adc
sbb
xchg
inc
adc
jl
push
mov
jecxz
pop
pop
adc
mov
arpl
push
push
ret
into
je
or
xchg
js
int
ror
aam
sub
hlt
mov
push
or
mov
icebp
es
fstpt
cs
sbb
dec
out
cmc
mov
lds
dec
test
jb
cmpsb
push
fcomp
inc
xchg
ss
aaa
add
in
insb
cmpsb
dec
push
nop
push
add
loope
sbb
pmaxsw
sbb
call
cmpsl
jo
imul
cmp
iret
sub
xchg
adc
push
push
xor
lahf
dec
or
adc
add
cwtl
xor
and
mov
stos
lea
mov
xor
jmp
and
pop
sbb
loope
inc
pop
std
mov
fsubrl
xchg
cld
cmpsb
mov
arpl
push
in
clc
cs
daa
sub
fwait
ret
and
sub
mov
lcall
dec
inc
data16
arpl
mov
mov
lcall
ljmp
push
dec
cmp
mov
dec
test
jg
ret
dec
or
neg
out
dec
lahf
pop
in
xchg
orl
fmull
and
push
mov
and
faddp
add
icebp
loopne
cmp
sbb
adc
jno
movsb
add
sbb
scas
in
int3
lea
jnp
and
inc
push
outsb
pop
jp
lcall
mov
sbb
insb
lret
mov
rorl
sub
adc
mov
xchg
xlat
fwait
adc
sbb
xchg
sub
sbbb
lea
push
lds
sbb
lods
cmpsl
xor
sbb
bound
push
jno
pop
inc
push
xor
sub
scas
out
rorb
mov
xchg
add
sub
fwait
sbb
lret
daa
addl
mov
fsubs
pop
dec
setl
inc
sub
ret
adc
pop
jne
adc
sbb
dec
sub
and
mov
test
outsb
mov
adc
push
call
aam
and
js
lock
pop
daa
iret
pop
sub
psllw
daa
sbb
push
int3
fisubrs
mov
adc
sub
not
adc
adc
and
and
or
mov
sbb
popf
xchg
mov
shlb
add
adc
push
bound
jae
push
sub
pop
imul
jecxz
xor
scas
gs
scas
fldt
sbb
int
pop
mov
sbb
inc
cmp
or
sahf
arpl
loop
cmp
adc
repnz
adc
pushf
jmp
or
add
mov
mov
and
inc
nop
int
repnz
sbb
cmp
push
push
imull
fildl
inc
repnz
pop
adc
xchg
push
scas
jne
or
jge
imul
adc
cmpsb
pop
test
sub
sub
ljmp
add
lahf
cs
sbb
les
dec
hlt
mov
sub
scas
lret
or
or
lahf
cmpsb
mov
ss
outsb
sbb
mov
gs
daa
or
mov
ret
mov
repz
pop
nop
mov
jp
imul
mov
xchg
lea
adc
dec
sbb
fisubrs
ds
xor
mov
or
popa
inc
cmp
cmp
movsb
pop
neg
xchg
dec
arpl
ret
les
fstl
popf
adc
pop
and
ss
jns
les
cli
test
adcb
test
es
repz
and
mov
pop
mov
adc
fisttpll
in
sahf
ljmp
pop
cmp
mov
mov
and
pop
dec
mov
dec
or
adc
movsl
xchg
add
dec
push
jbe
test
imul
ficomps
arpl
or
jno
imul
jmp
sbb
xchg
xor
stos
pop
or
notb
lcall
xor
repz
xchg
cli
aas
xor
imul
pop
adc
add
loopne
cmpl
mov
scas
push
lcall
out
call
adc
mov
icebp
push
push
jle
mov
cmp
dec
push
dec
xor
ss
jecxz
ss
dec
xchg
std
dec
inc
sub
xchg
ja
bnd
sbb
bound
out
adc
mov
in
sub
aad
inc
sub
dec
sub
pop
repz
or
pop
push
int3
dec
lods
push
xchg
sub
jmp
sti
in
lods
or
push
out
shlb
push
lock
inc
xchg
loop
dec
dec
sbb
test
inc
lock
ss
fcomps
or
and
push
mov
pushf
and
jmp
lahf
inc
and
xor
and
imul
push
dec
sarl
push
mov
cmc
inc
nop
sub
mov
popf
dec
inc
and
add
repz
adc
stos
movsl
push
scas
outsb
and
xlat
cmovge
sub
push
lods
add
loop
nop
loope
and
xor
lcall
fcompl
push
test
push
shl
ret
xor
sbb
mov
inc
cmc
iret
xchg
es
sbb
cmp
hlt
add
inc
xchg
test
adc
push
pusha
movsb
aad
push
adc
icebp
cwtl
pop
cltd
inc
xchg
inc
in
xchg
dec
inc
cmpsl
test
pop
aaa
ss
arpl
int3
sub
sub
mov
mov
stos
nop
mov
push
shll
mov
jo
push
mulb
out
scas
pusha
xchg
jmp
adc
je
push
cwtl
mov
lds
cltd
push
pop
push
cmp
sbb
enter
dec
insl
lret
sbb
or
stos
or
ret
xchg
outsb
dec
stc
fildll
jp
and
cmpsb
out
sub
sbb
out
insb
pop
int
mov
xchg
frstor
int3
adc
out
mov
adc
shll
sub
cmp
pop
jmp
push
scas
adc
adc
data16
insb
sbb
pop
push
adc
push
shll
inc
mov
data16
mov
sahf
scas
imull
jo
sahf
sbb
push
imul
xchg
inc
xchg
push
xor
leave
pop
cltd
xchg
push
or
adc
add
cmpsb
and
aad
fs
outsb
loop
xlat
add
inc
mov
and
paddq
shll
adc
xchg
dec
or
mov
sub
mov
shl
push
imulb
mov
push
adc
xchg
iret
adc
subl
xchg
adc
ljmp
or
aam
pop
adc
cmp
stos
cs
arpl
xchg
and
xchg
push
cmpsl
inc
loop
js
mov
call
insl
pop
std
sbb
push
mov
dec
dec
cmp
lea
sti
dec
sahf
aaa
jge
cltd
and
mov
aam
jo
clc
sbb
test
dec
xchg
sub
adc
jae
mov
xor
mov
mov
sub
insb
xchg
xor
push
push
jmp
mov
sub
and
inc
jl
fwait
or
xchg
inc
daa
and
repnz
enter
adc
jl
imul
push
cmp
mov
jl
in
call
adc
or
sub
pop
adc
sub
jg
fwait
ljmp
inc
sub
or
jp
jle
in
cmp
mov
and
mov
rcrb
outsl
mov
cltd
add
jp
pop
jns
xchg
xlat
in
mov
in
cmpsb
and
stos
sahf
daa
jnp
enter
add
add
aad
adc
in
mov
jp
cmp
sub
push
inc
mov
xchg
cli
add
pop
push
mov
pop
sbb
mov
mov
cmp
sbb
xchg
adc
sub
mov
fldcw
xchg
mov
mov
dec
add
jb
push
and
lds
or
dec
or
out
fistl
sbb
filds
clc
testl
ljmp
scas
sub
daa
testl
bound
xor
dec
add
shrl
inc
lds
sub
and
jmp
call
cmp
push
aaa
mov
mov
pop
cmp
daa
mov
cwtl
inc
sbb
test
andl
mov
data16
sbb
add
mov
sub
movsb
cmp
jb
cmpsl
pop
enter
push
sbb
call
decl
aad
jno
mov
jmp
mov
adc
fldcw
add
adc
loopne
insb
clc
cmovne
or
dec
push
mov
adc
cmp
mov
xor
jne
cmp
rcrl
lods
adc
imul
inc
sbb
dec
mov
inc
add
mov
pop
mov
mov
imul
adc
aad
cmc
fcompl
call
lahf
and
in
adc
into
mov
sbb
jmp
mov
inc
std
add
mov
push
sbbl
adc
hlt
scas
gs
int3
or
inc
pop
cmpsl
cmp
sub
loope
mov
cli
jle
ret
mov
push
mov
dec
xchg
dec
cltd
xchg
adc
fimull
std
and
xchg
movsb
inc
adc
adc
sub
add
arpl
jnp
jmp
mov
in
sub
in
hlt
mov
sbb
sbb
orb
xchg
dec
je
in
out
mov
arpl
orl
dec
out
xchg
lret
rcll
nop
mov
mov
mov
out
sbb
test
insb
xchg
dec
adc
and
fwait
fwait
and
mov
outsb
icebp
cmp
mov
pop
push
push
popf
lcall
cmovp
mov
les
ret
lcall
and
les
inc
and
daa
test
and
loop
aam
scas
test
adc
xchg
insl
or
adc
dec
jmp
push
stc
loope
mov
xchg
test
mov
push
inc
movsb
or
cmp
call
xor
dec
inc
cmpl
nop
push
cli
cwtl
mov
lods
movsb
inc
inc
sbb
daa
cld
std
xchg
push
cmpsb
mov
dec
sti
cmpsl
xor
mov
sub
mov
cmpsl
jne
out
adc
mov
sbb
adc
push
or
inc
dec
outsb
inc
dec
mov
out
test
hlt
and
sub
jg
cmp
xchg
mov
dec
jnp
sub
sub
pop
cmpsl
out
jae
jnp
or
mov
push
lret
cs
mov
push
xchg
test
mov
mov
gs
pop
cmp
bound
orb
add
aas
adc
dec
hlt
jle
or
and
and
dec
enter
dec
jne
adc
sar
in
sbb
jae
sbb
inc
pop
into
mov
fimull
and
fadds
fbld
out
sbb
pop
ret
push
sbb
das
jns
and
repnz
mov
push
cmpsl
stos
movsb
add
sub
xor
fwait
sbb
push
push
mov
jle
dec
push
mov
sahf
out
dec
and
jp
fnstcw
cltd
and
loopne
mov
fs
jecxz
jmp
push
jecxz
adc
mov
jp
test
and
fsubl
mov
adc
cli
fisubs
sbb
cmc
stos
out
pushf
outsb
push
jno
pop
mov
and
pop
or
imul
sbb
xchg
mov
les
push
outsl
inc
mov
and
inc
sbb
cld
loop
dec
loop,pt
enter
es
mov
stos
mov
hlt
sbb
loope
or
xchg
push
imul
pop
add
mov
mov
cmp
inc
sbb
test
dec
push
mov
insb
stc
cmp
rcrl
mov
push
mov
insb
add
cmc
loop
cli
pop
pop
dec
xchg
adc
xchg
sub
mov
sarb
bound
fsubs
sbb
mov
mov
outsb
adc
jne
mov
mov
mov
dec
push
or
sbb
sbb
imul
mov
xor
cmpsl
pop
sub
movsb
add
push
sub
mov
cmp
scas
dec
gs
mov
mov
push
sar
ja
arpl
popa
inc
sub
and
in
negl
std
push
xlat
shlb
cmp
inc
mov
sti
shl
add
loop
data16
imul
mov
xorb
adc
push
enter
leave
pop
sbb
popf
repz
inc
iret
xor
add
das
pushf
and
rcl
add
nop
pusha
testb
xchg
or
xchg
stc
ja
jl
out
dec
outsb
mov
xchg
and
or
or
lcall
inc
data16
or
or
cmp
push
mov
xchg
into
fs
sbb
ret
jecxz
pop
lcall
sub
es
mov
mov
mov
cmc
mov
cmp
dec
cmpsb
or
sub
and
orb
add
sbb
cmp
sub
mov
ja
sbb
xchg
mov
cmpsl
and
lock
inc
mov
mov
je
das
pop
sbb
loop
or
std
dec
xor
clc
sbb
sub
adc
fwait
add
adc
sub
rsqrtps
data16
fldt
sub
jge
aam
adc
add
sbb
and
stos
es
fwait
add
mov
add
mov
call
fwait
inc
ret
adc
xor
jo
jb
aas
imul
dec
and
sbb
mov
in
or
in
lret
in
push
and
push
test
sbb
repz
movsl
ret
loope
popf
push
sub
ret
rorb
mov
adc
imul
xchg
push
cltd
inc
xchg
sbb
in
push
ret
xor
or
sub
mov
fsubrs
and
pop
ja
dec
xchg
clc
imul
xchg
mov
mov
icebp
in
cmc
repz
fwait
sbb
jp
ss
or
mov
jne
adc
lret
push
cmp
call
pop
xchg
lahf
mov
or
scas
in
movsb
push
sub
sub
dec
in
and
jns
pop
cmp
add
pop
stc
test
jmp
push
lods
imul
jno
push
mov
mov
pop
xchg
nop
sbb
xor
or
in
push
lods
jecxz
mov
dec
cmp
mov
or
ljmp
cltd
sub
or
push
in
cmp
pop
and
xor
push
stos
fcoml
test
loopne
pop
pop
inc
cs
inc
jp
and
cmp
mov
leave
inc
out
hlt
shrb
dec
sarb
xchg
sbb
mov
dec
js
mov
xchg
push
movsb
sub
stos
and
mov
popa
xchg
lds
dec
adc
push
cmp
addb
adc
jae
or
pop
and
sbb
xor
add
adc
pop
mov
lahf
jbe
stos
nop
or
cmp
adcb
in
xchg
paddsw
pop
int3
test
jnp
insb
pop
ret
test
testb
jno
je
sbb
xlat
adc
and
push
ja
jbe
mulb
adc
xor
das
int3
jecxz
sti
imul
in
shll
fldlg2
lods
xor
jmp
cmp
sbb
and
dec
mov
or
pushf
cmp
cmp
cmp
or
or
sbb
jae
xchg
xchg
push
inc
jbe
pop
enter
mov
mov
aad
jae
andl
dec
push
or
stc
sbb
popa
cmpsl
stos
ret
aad
push
mov
fs
sbb
mov
mov
mov
lret
and
push
xchg
nop
dec
mov
xlat
push
mov
popa
mov
xor
mov
push
push
sub
or
xchg
adc
out
jmp
jecxz
push
lods
xchg
xchg
out
pop
repz
xchg
jg
inc
jb
loopne
sub
daa
loop
gs
in
mov
cmpsb
sub
push
outsl
iret
imul
in
pop
sbb
jnp
add
push
adc
push
jne
jnp
insb
push
mov
mov
xor
in
mov
sub
adc
pushf
imul
out
xchg
pop
sbb
push
add
idivb
imul
dec
jl
and
mov
dec
dec
xchg
mov
and
mov
adc
cli
xor
test
pop
inc
aaa
mov
pop
arpl
push
or
dec
pop
lods
inc
jl
and
push
lods
mov
jns
insb
dec
push
xor
push
sbb
push
adc
pop
inc
dec
and
xchg
dec
mov
jmp
pop
and
inc
jne
pop
adc
xchg
pop
mov
dec
lods
shlb
cmpsl
insl
mov
adc
imul
lods
mov
cmp
xchg
mov
pop
adc
std
jnp
loop
ljmp
add
mov
pop
js
in
hlt
stos
mov
jo
jae
adc
mov
xchg
bound
and
adc
fdivrp
push
sahf
cmp
cmp
ret
enter
adc
jecxz
dec
daa
inc
mov
in
std
ret
cwtl
loop
sub
sub
lea
mov
in
sbb
dec
imul
or
xor
in
in
test
scas
adc
mov
mov
mov
xor
mov
jmp
outsl
cltd
aaa
push
inc
mov
xor
ret
fwait
sbb
flds
and
ret
push
cmp
test
xor
sbb
xor
int
loopne
push
lret
dec
out
je
fmull
xchg
icebp
pop
cmpsb
out
sbbl
and
adc
xchg
mov
in
sbb
sub
add
jo
es
mov
inc
sbb
inc
or
xor
dec
test
adc
pop
adc
xchg
add
in
pop
adc
xchg
mov
rorb
movsb
aam
push
mov
sub
fisttpl
scas
les
nop
mov
cltd
add
mov
adcl
inc
int3
fbld
ss
lds
jge
xchg
pop
scas
adc
aam
push
jmp
fsubrs
xchg
adc
jne
orl
addr16
pusha
and
mov
inc
cmp
push
push
sub
ljmp
movsl
fnstsw
sub
sub
dec
xchg
jle
dec
jge
mov
test
xlat
push
movsl
pop
pop
jnp
das
stos
add
adc
pop
jecxz
sbb
jg
mov
xchg
stos
shrb
inc
adc
aad
add
xchg
mov
popf
or
lock
ret
jnp
test
mov
adcb
stos
dec
xchg
cmpsb
lret
sbb
pop
add
adc
fstl
clc
cmp
sub
dec
adcb
bound
add
xchg
aaa
push
pop
insl
mov
sub
cmc
cmp
xor
fldt
mov
cmp
int3
je
fwait
popf
aad
add
sbb
sub
out
adc
mov
mov
push
pop
or
out
imul
fldl
popf
push
jg
fsubs
pusha
jg
lea
pop
add
icebp
pop
mov
mov
or
or
ss
mov
dec
and
cmp
adc
test
ret
cmp
outsb
sbb
xchg
and
and
adc
sbb
sub
shrb
inc
xorb
dec
jg
sbb
out
popf
push
inc
or
sti
into
pusha
scas
and
rcrl
popf
es
adc
repz
pop
out
xchg
adc
sahf
mov
mov
cvtpi2ps
movsb
sub
dec
cmp
jns
inc
popf
jae
daa
es
stos
arpl
adc
jne
int
bound
fcoms
adc
sti
dec
sbb
sub
or
cmp
das
fcoml
mov
movsb
xorps
test
and
sbb
dec
xchg
scas
push
and
fdivrs
repz
jns
sbb
inc
das
pop
mov
std
xor
sub
test
outsl
pop
popa
mull
mov
pop
add
cmp
sbb
sbb
cmpsl
or
or
cmp
cmp
jecxz
mov
jns
inc
mov
decl
stos
jbe
scas
pop
inc
cmpsb
mov
inc
push
pop
popf
lea
jecxz
and
jmp
inc
addr16
cltd
push
push
loope,pt
fwait
or
leave
into
fistpl
fwait
inc
xchg
mov
rcll
inc
int
int3
repz
or
and
loopne
je
cmp
push
adc
enter
adc
fsubrs
nop
ljmp
push
jle
mov
push
push
jno
in
mov
xchg
and
jae
xchg
xchg
arpl
fwait
lret
cmp
inc
sub
popf
or
loopne
fsubs
scas
scas
ljmp
aam
scas
or
call
xor
pusha
push
adc
dec
dec
cmp
pop
jp
popa
pop
data16
and
bound
jl
pop
sbb
or
sbb
mov
cmpsl
sub
clc
jmp
mov
cmp
xchg
push
mov
pop
jle
push
pop
mov
xchg
sbb
clc
scas
subl
jecxz
nop
sub
push
xlat
push
or
adc
lds
sbb
sub
bound
or
dec
aad
jle
dec
xchg
fisubs
leave
adc
add
out
arpl
adc
dec
inc
or
call
mov
push
push
adc
mov
sbb
icebp
inc
dec
roll
push
or
add
cmp
sub
add
sbb
aaa
std
cmp
or
lahf
mov
jecxz
pminsw
dec
jp
roll
icebp
sub
xor
aam
lds
push
movsb
imul
dec
mov
or
xlat
pop
inc
cmc
sub
adc
sub
leave
dec
dec
loop
orb
adc
sbb
jae
orl
mov
xchg
xlat
mov
mov
outsb
and
cmc
arpl
add
lahf
adc
out
sbb
xchg
mov
mov
loop
cld
sub
sbb
aad
sbb
xchg
pushf
sub
sbb
popf
aad
xchg
std
and
mov
andl
out
imul
mov
pop
push
jae
lahf
or
aas
ret
dec
and
push
xchg
dec
addr16
aad
cmp
cmp
cs
ss
jmp
nop
xor
push
mov
out
mov
mov
bnd
sbb
or
push
mov
jmp
pop
add
daa
or
push
loopne
push
push
push
addr16
scas
stc
cwtl
int3
adc
cmp
jbe
cld
and
lret
cmp
cmpsb
outsl
jns
xchg
bound
pop
mov
xchg
push
mov
or
scas
sub
inc
dec
xchg
or
test
cmpsl
mov
and
lcall
push
jns
cmpsb
cmp
in
fcomps
cwtl
mov
cmp
or
mov
addr16
mov
mov
fldt
pop
sbb
sbb
push
push
jecxz
sbb
mov
sbb
sbb
dec
fsub
and
adc
mov
ljmp
pop
mov
sub
fsts
and
pop
push
pop
movsl
mov
mov
ja
pop
cltd
sbb
xor
js
mov
mov
xchg
ret
stc
or
pop
xchg
push
xor
sub
or
fldl
je
or
dec
inc
mov
mov
iret
pop
fistpl
sub
and
or
fistpl
ds
adc
rcrl
xchg
sub
or
lds
dec
mov
push
add
mov
dec
adc
inc
and
mov
mov
sub
cld
push
aaa
pusha
and
mov
cmp
or
rol
adc
xchg
or
mov
jl
jle
add
mov
cs
fisttpl
inc
xchg
and
mov
int3
push
adc
add
cmpsl
xchg
add
push
sti
stos
adc
sbb
jle
adc
and
daa
mov
ret
add
into
push
mov
movsb
lahf
fxsave
add
daa
xlat
jns
mov
sbb
dec
js
icebp
inc
fnsave
insb
loope
xchg
out
dec
ljmp
xchg
rcr
fdivl
adc
iret
sbb
sub
inc
mov
mov
push
mov
mov
mov
lds
xchg
or
add
es
sbb
ret
add
inc
add
rclb
mov
cmp
mov
and
pop
stos
ret
push
mov
dec
push
loope
hlt
pop
cmp
add
and
add
pusha
xchg
mov
nop
or
int
lar
and
repz
outsl
inc
popf
scas
or
pop
add
push
test
mov
push
jae
clc
sub
inc
mov
push
das
out
lods
inc
or
dec
stos
cmp
loop
xchg
outsb
sub
lcall
and
aaa
xchg
hlt
adcl
xor
pop
mov
and
ds
push
lock
lahf
addl
push
out
xchg
sbb
test
jmp
cwtl
outsl
mov
and
aad
sbb
jp
pusha
js
jmp
mov
fwait
xor
mov
test
pop
xchg
sub
sbb
xchg
and
sbbl
push
repnz
sbb
xchg
sub
sbb
and
xchg
test
pusha
add
movsb
inc
out
aad
dec
xchg
or
xchg
jne
push
adc
inc
mov
dec
xchg
push
cmp
leave
mov
cmp
mov
mov
and
jns
sbb
and
sub
cmp
iret
mov
js
cwtl
leave
mov
jmp
nop
imul
aaa
outsl
out
mov
dec
push
cmp
dec
or
jl
inc
outsl
lea
xor
pusha
jecxz
add
inc
push
pushf
stc
and
mov
dec
pop
imul
hlt
push
or
add
rcrb
adc
out
imul
sub
and
cmp
orb
add
mov
clc
dec
repz
cmc
add
in
les
fistpl
loope
fwait
pushf
add
mov
inc
mov
movsl
stos
loope
cmp
inc
dec
enter
sub
dec
sub
arpl
and
cmp
cmp
adc
mov
loop
dec
icebp
faddl
fmull
cmc
cs
xor
movsb
rcrl
add
ret
pop
push
push
inc
mov
fisubrl
andl
test
test
adc
adc
fimuls
mov
sub
cmpsb
enter
xchg
push
popf
dec
cmp
and
jae
imul
outsl
xorl
arpl
js
pop
outsl
adc
mov
jecxz
dec
pusha
pushf
adc
add
jge
push
stc
add
jne
push
shll
adc
push
sub
pushf
mov
or
int3
sbb
sbb
jl
mov
aaa
jno
push
int3
mov
in
cmp
cmpsl
cmpsl
inc
pop
loop
and
into
repnz
inc
sbb
leave
mov
outsb
pop
sahf
or
stos
loopne
mov
mov
nop
in
cmpsl
cs
lock
jmp
xchg
movsb
and
ljmp
mov
mov
mov
xor
testl
dec
jne
cwtl
adc
cmp
mov
sbb
hlt
popf
xchg
in
or
cld
divb
out
xchg
movsb
mov
push
ljmp
or
aam
add
aaa
or
push
sahf
or
pushf
mov
add
pop
sahf
ja
aas
repz
mov
add
rcrb
mov
insl
in
adc
insb
jp
das
ds
inc
xor
insl
cmc
push
stc
or
push
push
push
outsb
icebp
mov
xor
mov
jne
sub
fidivl
or
outsl
jno
test
mov
xor
mov
je
stos
xlat
fstps
sbb
and
push
pop
mov
push
imul
sbb
xor
mov
xchg
push
push
and
cmp
xchg
arpl
cmp
xor
pusha
push
sbb
jbe
add
ljmp
sbb
sbb
add
into
iret
rcl
fwait
and
out
cmp
mov
sub
xchg
adc
sbb
xor
and
cmp
add
pusha
shll
mov
out
not
lock
inc
jl
or
mov
cmp
dec
dec
mov
test
js
es
ret
mov
adc
je
sub
xchg
mov
sub
xor
rclb
sub
pusha
add
sahf
xchg
mov
xchg
lcall
xlat
dec
push
scas
imul
loope
mov
dec
and
inc
cmp
lods
jne
rorb
cmp
scas
cmpsb
xor
sbb
out
mov
xlat
jle
das
jo
lcall
dec
mov
daa
pop
pop
or
push
mov
cs
sahf
orb
push
jns
ljmp
add
imul
push
push
insb
inc
push
sub
daa
sub
es
mov
inc
iret
in
fadds
xor
jmp
rorl
scas
mov
dec
lea
mov
push
cmpsl
iret
pusha
outsl
dec
enter
sbb
jmp
jecxz
dec
fimull
outsb
and
push
out
cwtl
frstor
sbb
sbb
into
pusha
cli
int3
cld
xor
cmp
idivl
fildll
sub
pop
cmp
sub
imul
jmp
xchg
jno
dec
jl
inc
adc
inc
lahf
xchg
mov
jmp
repnz
and
pushl
scas
mov
pop
push
mov
adc
cld
scas
jns
imul
or
jp
mov
adc
sbb
and
cmp
mov
hlt
sbb
mov
jecxz
imul
test
xchg
orl
cmpsb
mov
xchg
sti
fs
imul
and
insb
add
cmpsl
add
mov
inc
icebp
push
lahf
pop
cmp
imul
xchg
test
outsb
call
jmp
fnstcw
and
xchg
mov
sti
aad
push
nop
push
psadbw
mov
sub
nop
sbb
mov
mov
inc
into
stc
mov
and
sbb
xchg
cmp
xor
mov
adc
int3
push
lea
cltd
and
add
or
and
popf
or
sbb
in
mov
adc
mov
out
mov
inc
arpl
mov
fs
pop
cmpsb
sub
or
aam
fisubrs
dec
jbe
xor
pop
mov
sbb
sub
pushf
psrad
sbb
pop
sbbb
test
or
movsl
enter
and
sub
xor
inc
and
adc
test
scas
dec
pusha
adc
adc
stos
xor
adc
sbb
jb
cltd
sub
pop
fmull
bound
xchg
cltd
mov
inc
int
popa
push
xchg
orl
dec
and
and
mov
test
mov
movl
dec
push
sbb
lcall
sbb
and
lds
loopne
mov
jle
out
test
push
sarb
fnstcw
pop
and
or
xchg
mov
cmpsl
fwait
data16
or
rol
push
mov
or
sub
scas
xor
out
ljmp
out
fdivl
sbb
sub
xor
xor
daa
inc
popa
push
inc
xor
adc
fcmovnb
inc
es
mov
loop
call
pop
addr16
sbb
pop
mov
imul
xchg
or
or
or
and
test
mov
push
add
or
xchg
out
push
hlt
arpl
int
mov
dec
or
dec
dec
xorb
and
stos
lods
jecxz
push
or
mov
negl
ret
pop
or
cmpsl
arpl
xor
inc
dec
push
or
mov
dec
mov
sub
fistps
mov
push
or
out
cltd
mov
sbb
cmp
subl
adc
adc
subl
jl
adc
dec
and
int
add
fsubl
jg
daa
mov
cmpsl
fwait
inc
test
pop
mov
and
gs
mov
scas
subb
cmpsb
andl
repz
fcoms
fdivs
xchg
dec
fcomps
pop
xchg
sbbl
std
mov
int3
mov
push
outsb
mov
push
lds
mov
mov
subl
adc
push
sub
int
in
sbb
adc
sbb
mov
adc
repz
andb
xchg
in
cmp
rcrl
lods
push
jno
int
scas
push
pop
adc
pop
adc
daa
dec
loopw
cs
xchg
jns
or
add
int
sbb
sub
and
or
or
xchg
pop
sti
cmp
popf
cmp
sub
and
sub
jecxz
cwtl
or
out
pop
cli
push
xchg
cld
fcompl
pop
jp
pop
push
and
in
push
and
cmpsb
inc
in
adc
in
mov
add
test
sbb
mov
lcall
ljmp
test
adc
inc
jmp
mov
nop
cmp
xchg
imul
and
or
cmp
or
cmpsb
fildl
test
sbb
dec
jo
push
nop
dec
pop
and
mov
xlat
and
push
sbb
aas
icebp
int3
mov
js
push
sbb
movsb
in
jo
lcall
jb
or
or
out
dec
or
dec
cli
mov
ret
cmp
fcmovnbe
cmp
sbb
adc
or
sub
popf
dec
push
add
jecxz
into
pop
or
cmp
xlat
jecxz
mov
or
es
pusha
nop
fisttpl
andl
xchg
mov
sub
jge
ret
xor
and
fcoml
adc
jle
dec
repz
arpl
add
mov
xor
inc
xchg
sub
int3
jecxz
in
mov
pop
hlt
pop
push
push
and
push
or
in
sub
and
sbb
dec
jmp
rolb
pop
push
mov
mov
out
jmp
or
add
sub
sub
in
jl
or
lahf
flds
add
or
mov
lds
es
call
adc
push
cmpsl
jle
dec
inc
or
cmpsb
and
icebp
mov
sbb
into
mov
inc
sub
pusha
and
hlt
movsb
int3
rcl
dec
imul
pop
fcmovbe
andl
mov
and
daa
adc
fisubrl
imul
mov
adc
dec
cmpsl
sbb
push
cmp
mov
push
movsb
mov
subl
adc
stc
push
and
sub
and
and
ljmp
inc
ja
out
out
jg
cmp
cmp
adc
mov
sub
or
dec
fcmovne
push
movsb
jb
out
cld
pop
adc
sti
scas
cld
inc
ret
jb
rcrb
inc
decb
jne
lahf
jo
adc
or
push
push
mov
and
pop
jb
pop
sub
cmp
bndstx
pop
stos
gs
out
adc
aad
push
mull
cmp
inc
cld
dec
mov
dec
push
push
lock
sub
dec
aam
mov
idivb
and
jns
pushf
xchg
xor
adc
adc
adc
test
cs
adc
or
icebp
push
ror
sbb
add
aas
mov
jno
out
push
and
inc
xchg
sbb
mov
sarl
add
or
or
xchg
sbb
movsl
aaa
fsubrl
xchg
movsb
and
mov
sbb
push
xchg
sub
lret
inc
mov
fnstenv
xchg
jns
sbb
scas
dec
adc
mov
cmpb
mov
nop
push
or
and
ret
rcrl
paddsw
xchg
sbb
mov
xchg
add
inc
cmp
xchg
outsb
nop
pop
add
sub
js
das
or
pop
push
sbb
fcompl
aas
sbb
xchg
loop
pop
imul
or
ficoml
push
lea
pusha
cmp
imul
data16
mov
jnp
scas
sub
movsl
adc
test
mov
push
jmp
push
lea
sbb
xor
shrl
int3
sbb
dec
mov
jnp
mov
xchg
mov
in
out
dec
xchg
mov
jno
pop
pop
and
test
test
jl
push
push
mov
cmp
cltd
scas
addr16
ret
push
and
dec
mov
outsl
xor
jbe
fwait
jae
sbb
jecxz
pop
or
add
mov
insb
scas
dec
sbb
sbb
xor
adcb
lahf
mov
out
jb
in
dec
and
mov
and
and
dec
aam
pop
cld
out
mov
stc
loope
mov
mov
cmp
or
lret
pop
xchg
sbb
dec
mov
sub
jb
hlt
or
cltd
insl
call
sbb
add
mov
sub
mov
shrl
xchg
xor
cmc
test
cmp
add
aad
pop
stc
adc
imul
enter
ja
pop
sbb
cmp
mov
mov
push
std
dec
sbb
and
je
lods
test
mov
ja
push
bound
repnz
or
icebp
push
dec
inc
popf
and
daa
sub
pop
or
shrl
push
lea
adc
or
sub
xchg
rcrl
push
xchg
fcoml
xor
sbb
sbb
outsb
dec
push
cmpsb
sub
inc
cmp
out
or
add
add
je
in
adc
cmpsl
mov
ja
cmpsb
and
mov
xchg
cli
pop
xchg
test
divb
fwait
adc
sub
pushf
movsl
jnp
xchg
mov
dec
dec
xchg
sbb
mov
sbb
inc
sub
lods
adc
faddl
stos
loopne
or
in
daa
sbb
out
cmp
popf
or
xchg
cmp
sahf
jbe
cld
adc
mov
sub
pushf
push
xor
loope
push
jecxz
adc
add
jmp
addr16
bndldx
std
dec
sbb
dec
roll
add
cmpsl
andb
pop
xchg
loope
mov
test
xor
inc
mov
cmp
push
pop
mov
and
repz
or
xchg
enter
and
shlb
cmp
adc
ljmp
adc
fcmove
cmpsb
dec
cmp
out
jnp
adc
rcr
jno
jmp
and
inc
add
mov
or
pop
cmp
fwait
pop
sti
cmp
adc
adc
fisubrs
cwtd
cmc
fisttpl
movsb
test
mov
iret
int
negb
subl
ds
decl
sbb
mov
mov
ss
push
shl
daa
int3
pop
rcll
and
repz
inc
adc
loop
dec
nop
enter
movsl
and
sub
fldcw
mov
sbb
inc
out
sub
adc
dec
sub
vpaddw
and
iret
scas
cmp
xchg
sbb
sbb
rorl
sbb
gs
mov
xlat
je
jne
mov
das
popa
mov
fldcw
cmc
or
push
shrl
negb
das
cmpsl
and
sbb
push
je
sub
and
or
cltd
pop
icebp
adc
adc
js
adc
cltd
pop
pop
insb
enter
adc
and
and
mov
sbb
shlw
adc
adc
pop
mov
push
dec
jbe
dec
cs
inc
pop
mov
push
insb
and
fistl
adc
sub
in
add
sub
pop
inc
mov
sbb
mov
lods
or
pushf
jo
sti
repz
inc
insb
xchg
jge
adc
pop
push
ljmp
inc
cmp
or
push
push
lock
insl
xchg
add
xchg
shlb
dec
scas
xlat
mov
ret
mov
cmp
orl
jmp
adc
lock
bnd
jp
mov
sbb
fsts
push
lcall
in
or
xor
imul
aad
ss
xchg
movl
cli
fiaddl
mov
push
jle
sub
add
daa
sub
push
push
sbb
cmp
inc
xchg
mov
dec
push
cmp
push
cmp
cmp
rcrb
jmp
into
push
sub
pop
data16
xlat
jo
lahf
xchg
cmp
ja
mov
sub
outsb
and
cmpsb
sbb
and
jg
adc
adc
dec
mov
repz
push
cmpsl
add
sbb
pop
mov
and
into
and
test
xchg
sub
jae
int3
push
jbe
pop
movl
fisttpll
test
dec
mov
mov
and
rep
arpl
imul
and
cmc
or
add
lcall
int
adc
lcall
repz
xchg
cmpsl
xor
push
xor
or
mov
bound
sahf
dec
or
lret
enter
mov
or
scas
pop
or
sahf
and
xchg
mov
stos
lea
xchg
jecxz
mov
out
sbb
cmp
arpl
xlat
cmp
stos
movsb
ljmp
pop
shll
daa
and
loop
dec
leave
lock
push
lret
pop
adc
fmull
out
mov
out
shll
xor
or
xchg
mov
add
sbb
clc
xchg
lret
rcrl
repz
xchg
dec
lods
inc
mov
push
or
mov
and
jae
daa
and
mov
ja
xor
fsubl
insb
jp
push
mov
sbb
mov
jl
pop
adc
mov
jle
sub
cwtl
lahf
cmp
icebp
jecxz
dec
shrb
mov
mov
out
and
imul
lret
xchg
aad
outsl
pop
cmpsb
mov
jle
inc
cmp
cwtl
sbb
cwtl
mov
or
jle
scas
sub
mov
xchg
fimuls
les
adc
xchg
mov
add
adcb
mov
test
imul
les
stc
dec
notl
push
jle
sub
out
out
xchg
xchg
or
adc
out
sbb
std
dec
adc
or
push
leave
push
xchg
mov
cwtl
addr16
jl
das
inc
cmp
add
out
push
add
rclb
or
imul
push
mov
in
popf
and
lret
sbb
mov
popf
mov
popa
xchg
sti
test
lahf
sub
inc
icebp
adc
int3
push
xor
pop
jl
sti
insb
roll
imul
or
and
mov
or
add
out
and
loop
push
jb
dec
pop
mov
push
pop
or
movsb
push
ss
fistpl
sub
xchg
adc
fwait
add
push
or
push
xchg
aam
add
xchg
sub
daa
sbb
dec
jecxz
cmpsl
rolb
add
mov
fildll
out
and
shrl
adc
call
push
cmc
mov
lods
add
cmp
inc
iret
pop
xchg
sbb
xor
and
idivb
mov
in
jp
mov
dec
pop
scas
jg
shll
xchg
and
sbb
push
out
push
negb
mov
adc
sub
mov
repnz
icebp
loope
lret
bound
push
inc
add
push
out
xor
jmp
clc
add
inc
push
es
lret
mov
xor
and
sahf
stos
mov
pop
xor
or
sub
movsl
mov
adc
adc
jl
inc
adc
xchg
out
mov
inc
cmpsb
daa
dec
ds
aaa
out
add
dec
xchg
sbb
cld
cmp
adc
rcrl
mov
inc
adc
adc
lret
test
insl
jl
pop
mov
pop
mov
or
push
sbb
mov
shll
arpl
out
fs
outsl
in
mov
jge
inc
inc
fldl
lcall
pop
ds
shl
adc
mov
mov
xchg
cli
hlt
std
sub
sbb
cmp
pop
test
xchg
add
jecxz
adc
xchg
lret
jg
arpl
sbb
enter
int
sbb
mov
jmp
stos
add
xchg
mov
lcall
ficoms
mov
roll
adc
sub
lock
mov
fsubr
mov
popf
inc
popa
pop
in
je
fst
dec
cmovp
sub
push
ss
push
addr16
dec
jecxz
sbb
jb
aam
lods
mov
ret
stos
and
in
or
loope
adc
or
and
outsb
pop
and
xchg
sub
sub
sub
and
adc
aam
in
mulb
mov
pop
loop
lret
adc
or
xchg
lcall
add
subb
mov
fsubl
add
call
mov
sbb
or
movsl
dec
ficomps
xchg
fwait
stos
loope
negl
int3
leave
in
jb
lahf
loope
add
cmp
cmp
push
xor
out
lods
sahf
adc
push
add
sbb
xchg
jp
adc
test
sbb
push
scas
repz
mov
xchg
cmp
inc
adc
jp
pushf
jmp
sbb
mov
int3
sub
mov
sbb
adc
pop
xchg
adc
stos
fadds
into
add
out
imul
add
std
jp
push
inc
data16
mov
cmc
inc
xchg
push
sbb
lret
int
enter
xchg
ljmp
cmpsl
sahf
mov
addl
pop
push
xchg
pop
inc
fsubrs
scas
push
cwtl
xchg
dec
inc
and
add
sub
rcl
xchg
into
mov
outsb
movsl
arpl
or
cmp
mov
push
dec
adc
lcall
add
xchg
mov
fldln2
push
push
jbe
adc
dec
shr
adc
out
rorl
sbb
test
pop
mov
xchg
mov
mov
and
fnstsw
js
rep
adc
lods
lahf
gs
jne
and
ret
lahf
sbb
dec
dec
or
inc
or
lods
xchg
jo
cmp
sbb
aas
sarb
lods
mov
pusha
dec
adc
mov
stos
adc
into
dec
mov
and
das
mov
lret
pop
cwtl
mov
mov
inc
int3
lret
cmp
daa
out
orl
into
rcll
push
sub
icebp
fadd
xchg
movlps
and
data16
xchg
ret
sbb
fcomip
sub
in
pop
xchg
subl
into
cmp
pop
insb
out
xchg
inc
dec
and
sbb
adc
ret
pusha
cltd
sub
xor
stos
dec
aas
push
jge
shlb
inc
aam
sub
sbb
dec
dec
sub
jle
iret
push
pop
movsb
in
sub
xor
or
sbb
in
loope
test
popa
and
xchg
shlb
or
pop
lods
dec
mov
jno
lods
fwait
sbb
sub
and
mov
shll
mov
ljmp
test
cltd
mov
jmp
clc
adc
flds
jno
push
aad
mov
out
sbb
jp
sti
outsl
jl,pn
dec
or
cld
jb
push
fdivrs
or
jbe
repz
or
rcr
ret
sub
sub
arpl
xor
sbb
xchg
xor
hlt
push
xchg
decb
jg
mov
pop
or
and
mov
xor
test
movsb
pop
adc
sbb
xchg
push
es
sbb
fldcw
aad
test
jbe
lea
fbld
dec
mov
std
sarl
icebp
adc
std
sbb
cmp
or
dec
mov
sub
cmc
test
adc
push
lods
enter
sbb
rcr
stc
or
inc
sbb
subl
adc
lcall
sub
xor
xchg
push
aad
and
test
jle
fwait
push
fisubl
out
ret
mov
or
or
pushf
cmp
inc
fwait
sbb
dec
clc
lea
and
ds
sub
andl
sub
cld
add
sbb
dec
and
adc
rorb
insb
cmp
ja
push
push
add
xchg
mov
dec
in
push
jne
or
or
cmp
jb
or
pop
clc
cmp
cs
mov
inc
repnz
xor
inc
jns
inc
jbe
sub
stos
inc
xchg
mov
fwait
adc
mov
xor
mov
out
dec
jnp
lret
cmp
push
pop
dec
jmp
push
leave
das
pop
gs
test
aad
mov
inc
daa
pop
push
mov
xchg
pop
adc
add
inc
stos
push
inc
fwait
xchg
mov
out
hlt
out
fstpl
sarb
inc
inc
mov
xchg
mov
lods
dec
test
pop
jmp
rcrl
or
test
xchg
and
sbb
add
loop
mov
mov
xor
sub
add
pop
clc
popf
popf
test
cmpsb
int3
sbb
cmp
data16
iret
adc
sbb
out
mov
lock
cmp
dec
in
or
sub
sub
out
scas
mov
add
mov
cltd
xchg
sub
jmp
bound
fs
and
or
or
dec
aad
scas
out
mov
aam
push
fidivrl
es
xchg
pop
outsl
sub
pop
xor
imul
hlt
sbb
dec
fiaddl
sub
mov
lods
sub
push
push
sub
push
movsl
sbb
arpl
and
jae
pop
adc
out
sbb
adc
cld
je
sbb
js
cmp
shll
sbb
mov
ret
jle
cltd
push
cld
jns
cmp
data16
imul
rcl
jle
lcall
aas
cmpsl
fwait
and
dec
ss
push
mov
and
sbb
gs
cmpsl
or
add
dec
fmul
icebp
push
mov
adc
sbb
and
push
js
mov
pop
aaa
inc
scas
lods
fsubrs
jbe
mov
fstl
fsts
mov
pop
outsb
and
and
rcll
jnp
imul
ret
cmp
or
fldcw
push
clc
cmp
arpl
cmp
je
push
pop
jnp
xchg
dec
ret
mov
arpl
and
pushf
mov
cltd
mov
xchg
ret
jp
hlt
sbb
imul
cmp
gs
pushf
cmpsb
and
mov
dec
sub
sbbb
stc
push
fidivs
lods
insl
push
push
mov
xchg
pop
pop
mov
test
jb
xchg
fs
mov
int
adc
test
sbb
cmp
mov
lcall
jne
popl
xchg
or
xlat
fwait
or
stos
push
inc
sub
notl
test
and
cmc
gs
bound
mov
mov
inc
mov
pushf
shll
or
sub
ds
sar
cmp
hlt
jle
orb
aad
andl
jg
cmp
in
sbb
cmp
pop
jnp
fcomps
imul
xor
jp
xchg
xchg
fdivrp
or
jne
test
mov
adc
ljmp
xorl
or
cmp
in
inc
hlt
mov
dec
aas
xor
push
xor
bound
cmpsb
pushf
in
out
mov
jns
sbb
ljmp
xor
xchg
popf
dec
ljmp
mov
push
outsb
scas
dec
fwait
xchg
imul
jg
lcall
or
sbb
pusha
mov
or
mov
lret
or
and
mov
or
test
push
nop
jnp
cmpsl
test
adc
jns
mov
jnp
in
loopne
and
mov
push
xchg
aas
add
mov
mov
pushf
adc
fisttpl
stc
cmpsw
cmp
test
mov
mov
jo
and
and
enter
jle
cmp
sbb
push
jl
pcmpgtd
aad
sub
push
xor
ret
pushf
stc
ficoms
mov
push
ljmp
je
xchg
jmp
add
gs
xchg
popa
test
stc
pop
leave
out
cwtl
mov
stos
sbb
je
cwtl
cmpsl
mull
sbb
jne
int3
mov
adc
jns
test
mov
imull
cwtl
adc
iret
adc
pop
loope
sbb
data16
pop
and
jb
push
stc
shrb
mov
dec
xlat
das
cld
dec
adc
add
jle
mov
movsb
sbb
imul
sbb
xor
mov
cld
dec
mov
hlt
cmpsl
sbbb
cmpsl
mov
adc
mov
and
dec
shrb
dec
out
cli
subl
movsl
sub
jmp
mov
imul
aam
push
clc
mov
cmp
add
mov
inc
insb
pop
and
pusha
xchg
dec
add
xchg
and
ret
pop
jmp
adc
jge
in
outsb
xchg
lock
ret
xor
or
leave
or
pop
jp
rcll
adc
xor
stc
mov
cmp
add
adc
sbb
xchg
pop
inc
push
sbb
cmc
mov
mov
cltd
sbb
mov
mov
int
xchg
pop
dec
cmp
test
daa
fnsave
xchg
dec
fiaddl
adc
into
jmp
das
in
dec
stos
inc
hlt
dec
xor
adc
mov
dec
outsl
std
push
jae
cmpsl
lea
adc
pop
aad
adc
xor
sbb
dec
repz
lret
andl
pop
cmc
jnp
jmp
rol
sbb
clc
jo
or
cmp
add
push
loop
sub
push
cmpl
sub
sub
das
in
adc
test
enter
gs
mulb
mov
fwait
mov
push
shrb
dec
inc
prefetchwt1
push
mov
fs
mov
adc
push
ss
cmc
mov
xchg
fstl
cmpsl
pmulhw
stos
cwtl
push
pop
scas
notl
mov
or
lahf
or
ss
xchg
and
das
pushf
ret
popf
sbb
cmp
sub
std
fcompl
repz
fistpl
sbb
and
aam
fsubl
loope
sbb
int
add
cltd
fs
insb
push
pop
add
adc
mov
leave
in
popa
push
inc
mov
dec
dec
dec
cmp
sbb
mov
push
add
push
add
in
icebp
mov
int3
mov
cmc
jns
repz
jle
lods
stos
cmp
and
or
mov
xchg
repz
dec
cltd
lcall
cmpsb
sub
outsb
shll
dec
fwait
xchg
push
sub
and
clc
in
and
jg
push
and
pop
sbb
mov
mov
addr16
les
popf
adc
and
subb
mov
lahf
icebp
ljmp
xor
fcom
mov
int3
xchg
scas
cmp
xchg
xchg
push
mov
mov
mov
mov
pop
add
ljmp
mov
pmulhw
adc
pop
sub
mov
sbb
xchg
arpl
sub
sti
or
cmpsl
and
into
dec
popa
dec
add
sbb
pop
dec
mov
push
arpl
sbbl
bound
add
xchg
loope
sub
je
sub
cli
pop
lcall
or
in
and
sub
pop
dec
xchg
sbb
cmpsl
les
pushf
mov
jecxz
fwait
cli
stos
pop
dec
dec
and
sbb
cmp
loopne
xchg
in
shrl
cmpsl
pop
pusha
std
push
cmp
xchg
sbb
add
or
xchg
adc
scas
cmpsb
mov
sbb
mov
cld
loop
mov
sbb
adc
gs
fstps
int
add
sbb
jle
dec
push
notb
push
mov
sbb
sti
cmc
call
mov
mov
and
inc
xor
add
aad
xchg
cmp
mov
adc
std
faddp
dec
ret
sub
and
mov
test
cmc
in
imulb
lret
enter
add
pop
add
or
mov
or
pop
push
pop
inc
inc
test
int3
or
jmp
lret
cmp
push
sbb
das
jmp
sbb
mov
dec
dec
lea
dec
aad
push
es
or
pop
stc
mov
movsl
xchg
dec
mov
adc
or
mov
cmpsl
push
leave
sbb
xchg
iret
cmp
or
shll
and
ss
sbb
insb
clc
cmp
arpl
pop
and
leave
popf
mov
adc
xchg
mov
aaa
gs
mov
mov
icebp
push
or
roll
in
adc
xchg
icebp
enter
push
or
in
test
out
and
and
loopne
jbe
sbb
cwtl
call
jl
das
test
sbb
or
inc
sbb
adc
rolb
inc
adc
pop
sbb
mov
push
xor
xchg
out
cld
push
out
adc
fistpll
and
mov
mov
jle
dec
xchg
adc
cs
test
call
xor
mov
xchg
lcall
pop
imul
test
jmp
sbb
cmp
add
sub
mov
out
fcoml
pop
cmc
int3
jle
pop
call
or
repnz
pop
xchg
in
sbb
stos
mov
test
pop
out
enter
push
adc
cmp
jb
sbb
addw
insb
leave
inc
sub
and
xchg
popf
sti
adc
sbb
or
pop
or
adc
loope
daa
movsb
adc
sbb
inc
sbb
imul
fnsetpm(287
xchg
xor
sub
lds
jne
popf
sahf
sub
stos
mov
filds
adc
or
lock
mov
and
pop
adc
out
and
je
fstpl
or
rcrl
lahf
fmulp
sbb
clc
dec
sub
inc
pop
scas
fs
mov
movsl
xchg
repnz
lods
jg
pop
push
cmp
or
cld
fmull
scas
mov
out
dec
push
or
movsb
lahf
sbb
fsubrs
and
lret
cmc
xor
inc
mov
push
xchg
js
or
fmul
mov
mov
sbb
sbb
push
das
and
movhps
sub
inc
mov
jb
fldpi
test
xchg
xchg
jne
inc
push
addb
mov
dec
sahf
cmp
ds
dec
sbb
fwait
bound
les
pushf
adc
test
add
dec
cmp
mov
pop
mov
cmp
dec
arpl
int3
xchg
xchg
inc
or
out
cld
lret
mov
mov
movsb
cmp
or
negl
cmpsl
ljmp
stc
push
xchg
dec
inc
imul
repnz
arpl
sbb
outsb
push
push
mov
mov
or
mov
fildll
int
cmp
xor
xlat
out
sbbb
adc
in
iret
mov
xchg
mov
imul
fiadds
dec
adc
dec
data16
frstor
mov
and
outsl
jecxz
mov
jl
sbb
rcr
mov
adc
adc
sbb
add
adc
rclb
hlt
sub
fstpt
xchg
ret
mov
or
sub
sbb
in
adc
push
fists
lcall
cmp
lcall
xchg
sahf
adc
cwtl
mov
push
adcb
mov
ss
fsubl
jne
sub
cmc
cmpsl
push
fwait
sub
dec
test
ret
jg
lcall
addr16
call
fnstsw
arpl
lahf
inc
pop
mov
movsb
jnp
in
or
mov
push
fbld
jl
sbb
lahf
sbb
dec
aad
and
xchg
cmc
arpl
dec
and
or
mov
jnp
inc
insb
std
pop
xchg
or
adc
pop
dec
cmc
scas
in
jo
or
rcrb
dec
jl
cld
inc
jmp
xchg
mov
mov
jb
out
cmp
xchg
test
cmc
mov
arpl
cmpsb
repnz
out
push
test
adc
mov
jle
xor
sbb
in
push
jae
and
sub
enter
addr16
jns
mov
outsb
dec
or
xor
lahf
inc
cmp
std
adc
bound
mov
cmpsb
push
mov
fwait
rcl
lods
or
testb
loope
popf
popf
dec
int3
stos
and
and
jmp
dec
adc
cmc
shlb
or
dec
inc
int3
sbb
mov
pop
adcb
cmpsb
popa
sbb
cmp
push
sub
push
movsl
imul
push
in
movsl
mov
aad
xor
and
sub
cmp
cmp
mov
pusha
in
sbb
pop
ss
mov
xchg
imul
out
xchg
movsb
or
stos
sbb
repz
stos
pop
shl
imul
mov
cs
pop
jmp
int3
sbb
xchg
call
sub
addr16
dec
dec
or
jo
dec
mov
and
mov
es
mov
movsl
out
pop
inc
movsb
sbb
mov
jl
xchg
sbb
loope
imul
mov
repnz
test
cmp
mov
and
leave
and
fistl
push
aad
jle
sub
mov
cmp
pushf
mov
mov
out
ret
or
scas
pop
dec
out
rcl
mov
pop
repz
sbb
sub
xchg
cmp
cmp
jp
jl
testb
adc
lahf
cmpsl
imul
ret
and
ljmp
xor
xchg
sub
jge
les
and
aam
or
lcall
adc
mov
fwait
scas
add
out
aas
fstps
sbb
add
dec
dec
int3
repz
loope
mov
dec
dec
mov
push
xor
imull
jnp
pushf
loopne
cmp
sub
test
loope
push
cmp
cld
sub
dec
pop
pop
xchg
pusha
lods
test
icebp
push
dec
dec
loope
xor
mov
sub
mov
lahf
pushf
dec
imull
sub
dec
insb
lea
push
je
lcall
loope
jg
push
jle
xchg
enter
cmpsl
aaa
movsl
add
add
pop
test
add
lock
fwait
ss
mov
inc
into
pop
ret
push
xchg
jg
pop
rorb
setbe
dec
and
icebp
pop
pop
repz
cwtl
cvttps2pi
sub
sbb
rcrl
es
mov
xor
jae
imul
or
push
or
or
and
sarl
or
xchg
add
inc
lods
sub
outsl
mov
popa
mov
cwtl
push
dec
add
push
or
in
mov
cmp
shlb
push
out
bound
shr
aad
inc
sahf
or
cmp
sbb
sti
ja
cmp
sub
insb
sbb
and
add
out
rolb
xchg
and
rcrl
push
mov
cmc
subl
sahf
cmp
insl
add
arpl
or
push
sub
lods
xchg
decb
or
stos
stc
inc
hlt
in
mov
and
mov
dec
fucomi
dec
and
add
lahf
and
hlt
bound
or
rep
inc
inc
test
add
mov
int
popf
jge
sub
das
sbb
jecxz
in
dec
fnstcw
dec
hlt
popf
imul
lcall
mov
dec
aam
in
adc
mov
xor
cmp
or
test
cli
xor
sbb
pushf
in
add
sbb
xorb
sbb
lods
mov
daa
repz
mov
shrl
aad
push
pop
mov
lret
rclb
dec
mov
push
dec
and
aam
add
sbb
mov
adc
cmp
ret
push
out
pop
stc
outsl
lahf
lahf
push
fs
fisubrs
mov
cs
adc
imul
lods
sub
or
int
mov
imul
shl
popf
adc
push
std
inc
xchg
sbb
lods
shl
stos
pop
xchg
cli
jns
pop
jecxz
insb
xchg
mov
std
jg
push
mov
sbb
mov
out
mov
mov
dec
inc
push
jl
xchg
add
sbb
push
or
data16
cmp
cmpsb
and
movsb
lea
or
lahf
inc
push
xlat
or
and
in
arpl
mov
push
call
or
adc
popf
mov
lahf
loope
mov
sbb
scas
rcrl
test
push
or
data16
jb
mov
sub
cmp
mov
xor
jg
or
dec
mov
xchg
les
call
lods
jns
js
pop
bound
add
push
cli
inc
f2xm1
ja
mov
adc
mov
mov
mov
and
lret
test
dec
fstpl
sbb
add
lea
jle
stos
bound
stc
mov
icebp
jbe
ret
xchg
sub
push
mov
arpl
fcomps
sub
dec
xor
test
mov
cli
mov
int
mov
dec
adc
inc
mov
shll
cmp
sarl
push
stos
add
or
insl
pop
int
pop
lcall
sarl
sti
mov
add
imul
add
fadds
adc
sbb
push
dec
xlat
or
iret
push
sub
stos
xor
ja
fsubl
int3
push
or
or
adc
shr
lret
pop
adc
in
int
mov
add
cmp
sbb
outsl
sbb
cld
sub
inc
sub
mov
xchg
leave
xchg
xchg
xlat
mov
mov
mov
mov
cltd
adc
jle
mov
loop
int3
iret
push
addr16
sbb
nop
shl
ljmp
les
and
cmpsb
jp
stos
shll
pop
fsubrl
lea
sarb
pmaxsw
xor
fisttpll
add
leave
inc
or
xchg
shrb
jmp
and
add
fstps
sahf
sub
mov
or
mov
push
ljmp
stos
dec
xchg
sbb
inc
cmc
xchg
sub
xchg
out
in
or
pop
aam
nop
xchg
xlat
shrl
in
lods
lds
setns
sti
xchg
or
std
out
insb
jl
pop
daa
and
ds
push
insl
adc
lcall
ss
lahf
test
mov
mov
and
inc
rcrb
push
mov
sub
mov
xchg
lods
loop
sub
and
jns
popf
sub
mov
shll
pop
mov
and
mov
sahf
add
mov
test
sbb
and
das
pop
dec
roll
push
int
dec
into
repnz
xchg
mov
push
xchg
loope
add
xchg
mov
ja
sbb
cmpb
jb
adc
pop
out
loop
in
or
mov
sbbb
sbb
inc
dec
push
or
jp
cmp
fs
sbb
lret
lods
and
prefetch
cmp
mov
fadd
or
pop
sbb
pushf
add
pop
push
and
adc
nop
sbb
pop
xchg
fiadds
stos
rcl
mov
jecxz
adc
pop
cmp
or
push
push
ja
fwait
psubq
dec
cmp
cmp
aad
or
test
iret
and
push
pop
mov
repz
push
mov
mov
icebp
adc
psllq
push
jnp
imul
xor
stos
mov
aad
cmpsl
sbb
mov
xchg
xchg
mov
fsubs
sbb
push
scas
pop
and
adc
cmp
add
xchg
call
sbb
jo
ljmp
or
pop
jbe
je
adc
stc
ljmp
jmp
stos
sahf
and
pusha
xchg
mov
push
mov
xor
cs
mov
pushf
and
mov
dec
lods
jl
cmpsb
rcrl
dec
jecxz
sub
fstl
dec
adc
sbb
adc
sbb
test
push
sbb
movsl
into
out
incb
stos
insl
dec
jecxz
pop
adc
fwait
scas
adc
dec
jge
rclb
pop
pushf
mov
fstpt
stc
push
and
lret
popa
adc
sbb
sub
or
xchg
dec
pop
in
xchg
adc
push
mov
or
scas
outsl
sbb
pop
in
push
and
es
push
sar
lcall
iret
mov
leave
adc
push
pop
mov
das
jecxz,pt
push
sub
movsl
out
mov
ja
rorl
sahf
sbb
aad
popa
andb
std
cld
lods
mov
sub
daa
mov
cmpsl
dec
or
repnz
ret
mov
sbb
ljmp
sbb
cs
and
std
fsts
push
sub
mov
jne
lret
roll
xchg
mov
xchg
push
inc
inc
test
stos
scas
popl
pusha
sahf
dec
int3
loop
push
jnp
adc
scas
sahf
mov
inc
int3
sub
dec
imul
faddl
lds
adc
pop
imul
imul
xor
pop
dec
sbb
fldcw
in
or
xor
jns
sbb
jns
arpl
test
dec
jae
adc
adc
inc
fistpl
sbbl
inc
pop
mov
push
xchg
cmp
jecxz
out
push
xor
xor
cltd
lock
or
cld
ret
sbb
in
faddl
daa
sbb
adc
inc
pop
insl
ja
rcll
xor
mov
dec
push
popf
sbb
push
xchg
sbb
push
and
sarb
mov
inc
test
jecxz
int3
cmp
adc
mov
int3
sarb
and
add
testb
bnd
mov
fmull
mov
jg
sbb
pop
bound
adc
pop
out
push
mov
sub
loope
loop
lret
in
stc
nop
or
or
lods
sub
stos
sti
and
mov
mov
ret
insb
leave
sbb
sbb
sbb
push
mov
dec
mov
inc
pop
cmpsl
lret
sub
mov
push
ljmp
cmp
sbb
lds
xchg
lea
lret
int
jmp
xchg
out
mov
jg
cwtl
xchg
mov
rcrl
test
xchg
or
dec
in
sbb
push
inc
data16
hlt
aad
loope
popf
or
sbb
and
add
sbb
and
sbb
push
mov
pop
and
lods
inc
leave
rorl
pop
inc
call
roll
adc
cld
iret
or
cmp
mov
jecxz
mov
sbb
xchg
cmp
ficoml
mov
adc
inc
ds
cmpsb
into
shll
lea
ss
cmpl
daa
jne
sub
sbb
mov
nop
das
roll
pop
and
popa
stc
jle
dec
subb
scas
imul
daa
test
test
push
lods
push
cmp
mov
and
rclb
mov
and
mov
pop
sbb
movsb
mov
xchg
scas
jbe
mov
dec
dec
mov
loope
add
ljmp
mov
mov
sahf
mov
adc
fsubs
push
mov
sbb
repz
test
insl
dec
mov
mov
cmpsl
cwtl
dec
jmp
cmpsl
xchg
inc
mov
lea
cmp
movsb
sub
dec
and
lea
xorb
push
sbb
sub
fcompl
xor
fcmovnbe
das
pop
movsb
xchg
ss
push
xor
jle
fildl
xorl
call
stc
pop
out
cmp
xor
mov
add
inc
in
cmp
xchg
daa
cld
cmpsb
push
or
xor
mov
push
ret
jg
xchg
inc
sbb
mov
arpl
mov
sbb
xchg
push
pop
cltd
add
mov
imul
and
push
add
loop
jmp
push
imul
xchg
sub
fcompl
inc
mov
lea
pop
daa
adc
sub
cmp
add
iret
test
or
and
xchg
cmp
push
out
add
sbb
mov
shll
fwait
bound
push
and
dec
cmp
js
mov
adc
sub
fwait
pop
add
arpl
pop
cmp
popf
sbb
cmp
imul
push
loop
ljmp
sbb
outsl
jmp
hlt
mov
lcall
scas
mov
add
sbb
cmc
xchg
or
lret
mov
cmc
dec
xchg
push
sub
loop
sub
lods
dec
cmc
mov
adc
out
clc
std
scas
aam
mov
jmp
leave
xor
lds
sbb
arpl
out
arpl
test
mov
push
cwtl
add
dec
stc
pop
aad
or
xchg
cmpsl
sub
xchg
sub
imul
pop
in
push
imul
cmpsl
mov
mov
sbb
mov
sub
ret
mov
xor
push
or
pop
pop
repz
add
push
js
imul
aaa
fcoml
push
or
cltd
test
push
add
sbb
lods
mov
rorl
es
test
int3
jb
inc
cmpsl
xchg
and
addl
or
cmpsb
mov
sbbb
pop
push
dec
scas
addr16
out
outsl
adc
sub
test
jmp
push
jno
mov
inc
fcmovbe
mov
or
pop
xchg
in
ret
cmp
sbb
dec
push
and
mov
lahf
adc
xor
int3
add
arpl
and
adc
out
scas
pop
cltd
xchg
jo
dec
mov
sbb
popf
dec
jne
or
adc
and
pop
ret
push
popa
push
push
test
fwait
xorb
negl
add
ret
push
movsl
dec
cwtl
stos
mov
mov
sbb
sub
daa
xor
call
dec
xchg
ljmp
pushf
and
rcl
dec
out
mov
stc
sbb
out
dec
xchg
jp
fs
mov
xchg
lods
sub
adcl
out
popa
cmp
and
outsl
scas
call
repnz
and
ficoml
push
cmp
xchg
out
lods
xor
and
scas
xchg
xlat
adc
xor
cmpsl
mov
push
adc
inc
gs
out
imul
dec
pop
test
jp
mov
aad
jle
pop
call
shrl
cld
xchg
pop
sbb
xchg
push
inc
sbb
in
ljmp
cmp
roll
and
adc
aam
xchg
es
or
inc
xchg
test
lahf
sbb
mov
push
jmp
popf
cwtl
shll
mov
lods
cltd
daa
cmc
lcall
addl
jo
mov
adc
xchg
mov
mov
subb
std
jns
cld
dec
les
pop
adc
push
mov
sbb
dec
out
push
adc
jl
insb
incl
outsl
pop
or
pop
pop
or
lret
sub
rcll
mov
push
sub
xchg
mov
in
mov
or
jne
pop
push
push
cld
insb
test
inc
scas
jno
orb
test
lcall
aad
adcl
insb
addl
dec
sub
stc
adcb
sub
pop
shl
ret
xor
popf
push
bound
adc
testb
dec
ret
cmc
or
mov
sub
mov
mov
lcall
fbstp
and
xor
sub
pop
xor
cwtl
and
push
fistl
test
nop
sub
push
fstl
mov
lcall
lcall
into
and
or
mov
add
roll
inc
push
cwtl
or
fcoml
arpl
cmp
mov
xchg
pop
enter
mov
sbb
and
enter
loop
dec
icebp
jo
mov
stos
test
int3
bound
jae
fldt
in
jp
cmpsl
push
and
jb
imul
dec
ret
and
mov
sub
sub
out
outsl
mov
dec
and
lcall
pop
pop
mov
test
and
js
mov
mov
ljmp
mov
or
shll
xchg
sbb
pop
and
daa
push
in
sbb
and
sbb
inc
sbb
imul
mov
sub
adc
int3
enter
mov
cmc
inc
xchg
or
inc
ret
or
daa
ficoml
cmp
add
bound
cs
loope
sbb
and
stc
dec
mov
push
hlt
imul
add
or
inc
xor
dec
xchg
cltd
sub
loop
ds
pushf
int3
shrl
cmpsl
and
mov
sbb
push
and
push
pop
mov
mov
pop
adcl
push
enter
cmc
sbb
adc
pop
xchg
inc
sbb
pusha
push
sub
in
stc
push
jg
pop
push
and
adc
scas
push
cmc
and
lea
adc
enter
adc
sub
mov
lahf
dec
jl
cmpsl
mov
fs
xchg
xor
jl
sub
xor
adcb
push
fcmovnbe
and
int
loopne
adc
xchg
jmp
lret
rcll
push
sbb
out
sbbl
sbb
inc
inc
pop
add
jp
pop
and
or
out
jle
jecxz
adc
cmp
mov
jmp
dec
push
jns
sti
xchg
lahf
sub
or
jmp
adc
test
popf
xor
and
fstps
movsl
jbe
inc
xchg
mov
rolb
cmp
add
xor
pop
bswap
out
sbb
pop
ds
dec
movsb
bound
push
sub
aad
mov
push
jno
in
cld
loop
push
mov
dec
inc
sub
xchg
push
adc
cmpsl
dec
or
cmpsb
sbbb
sbb
adc
out
ficomps
lea
adc
pop
cld
out
outsb
sub
cmpsl
cwtl
sub
sbb
push
seta
into
cmpsl
or
test
mov
push
mov
sbb
pop
push
jmp
lahf
push
xchg
ljmp
sbbl
cmp
sbb
into
ret
and
icebp
xor
sbb
pushw
xchg
pushf
stos
out
lds
mov
jnp
lret
aad
or
push
dec
fwait
mov
repnz
push
dec
pop
stc
push
inc
add
and
cwtl
sub
nop
xchg
loope
es
dec
insb
repz
pop
inc
xchg
mov
jns
xchg
sti
xchg
scas
adc
xor
xchg
das
dec
out
fldenv
cmp
mov
pop
sub
push
jno
cwtl
add
jbe
enter
test
dec
out
mov
sti
leave
in
aas
mov
cmpsl
outsl
das
dec
sub
adcl
imul
add
lret
mov
dec
pop
xchg
ret
adc
shl
mov
movlps
hlt
in
call
and
mov
sti
push
cwtl
cmpsb
jne
dec
lock
jecxz
scas
pop
test
stos
mov
ja
test
loope
sub
xlat
inc
push
push
xchg
nop
jl
mov
call
jmp
or
sbb
mov
sbb
mov
xchg
or
sbb
or
ret
mov
push
scas
and
sbb
pop
adc
dec
in
adc
mov
movl
add
push
shl
push
adc
sub
xor
sbb
mov
das
and
cwtl
cmp
lcall
sbb
pop
pusha
jmp
cmp
adc
xchg
in
xchg
clc
fs
adc
jg
sub
jo
aad
push
dec
pop
inc
push
outsb
icebp
mov
and
loopne
adc
inc
push
jmp
pop
pop
cwtl
push
and
jns
xchg
cwtl
arpl
mov
lock
sub
add
and
aad
cltd
bound
or
in
sbb
jne
dec
repz
mov
adc
sbb
jp
insl
mov
cltd
sub
xor
or
insb
popa
push
adc
cmpsl
push
daa
pop
cmpsb
and
xchg
and
xchg
test
and
xor
jl
mov
ret
xchg
inc
arpl
adc
in
scas
and
orb
cwtl
push
cmp
pop
ss
push
int3
mov
lahf
cwtl
inc
xchg
aad
pop
jbe
xchg
adc
nop
movl
sub
mov
int3
pop
mov
jl
jle
cmp
dec
and
call
insl
rorl
scas
hlt
add
dec
iret
pop
mov
movsb
xchg
sub
jb
xchg
sub
inc
add
push
dec
adc
lret
xchg
mov
push
aam
xchg
and
jne
sub
sbb
sub
xor
stc
fcoml
iret
cmc
xchg
sbb
xchg
jne
push
dec
mov
push
mov
sbb
sarb
or
aaa
add
push
in
nop
in
cmp
scas
mov
or
sbb
dec
pop
leave
fcompl
dec
lds
daa
mov
test
inc
or
lea
test
es
adc
mov
adc
cmpsb
dec
and
popf
in
add
daa
test
jecxz
dec
rcrb
vphaddubw
in
jp
sbb
or
sbb
outsl
int3
leave
or
les
shlb
pusha
dec
sbb
fistps
popf
dec
rcl
mov
xor
pop
xor
mov
mov
push
mov
ja
add
sub
and
mov
mov
mov
xchg
test
dec
sbb
push
jmp
outsb
daa
std
rcrb
mov
jecxz
adcl
sbb
icebp
adc
je
jle
push
test
movsl
sarl
test
aam
mov
push
es
shlb
mov
fildl
mov
mov
jbe
call
adc
xchg
mov
rorb
adc
xchg
sub
enter
xchg
sub
or
int
lret
lcall
js
xchg
sub
test
cmp
xchg
xchg
adc
sub
out
les
add
push
xchg
mov
mov
sbb
in
pusha
enter
btr
push
mov
jmp
and
test
shl
nop
clc
call
mov
int3
cs
imul
in
pop
ds
sub
push
cmp
ret
sbb
dec
popa
adc
aad
test
sbb
mov
inc
in
das
sbb
jmp
mov
dec
cmp
push
dec
xchg
add
sti
push
or
cmp
sbb
ds
xchg
ret
lcall
out
add
repnz
popl
mov
loopew
pop
pusha
xor
arpl
mov
sbb
ret
push
xchg
add
xor
daa
mov
push
mov
int3
pop
imul
push
push
call
sbb
push
cwtl
test
or
mov
cmp
fwait
sbb
and
sub
int3
xchg
scas
lret
mov
adc
mov
cwtl
adc
xor
sbb
imul
dec
push
js
or
mov
movsb
fwait
push
and
sbb
sbb
aas
out
cwtl
inc
cmpsb
adc
jl
mov
pushf
push
dec
loop
ror
in
test
pop
xchg
cmc
and
mov
imul
ljmp
std
in
into
in
je
fstl
adc
xor
movsb
mov
repz
jae
pusha
mov
mov
xchg
and
dec
adc
pop
and
adc
je
fs
and
ror
xchg
push
jnp
or
xor
mov
pop
in
lock
cmpsl
sub
xchg
push
rorl
lea
inc
add
push
fildll
sub
sbb
jo
sub
mov
xchg
sub
mov
test
std
fs
sub
movl
das
shll
pop
dec
adc
in
push
je
popf
popf
jmp
add
out
add
outsl
inc
mov
and
mov
push
and
sti
sbb
pop
cmp
shrl
push
mov
lock
dec
mov
ljmp
loop
dec
mov
fwait
les
aaa
outsb
ret
push
sub
inc
jbe
lcall
jne
and
out
fcoms
push
jo
xorl
adc
in
inc
popf
mov
shll
inc
pcmpeqd
dec
mov
mov
mov
lahf
leave
sbb
int
push
sbb
es
jge
push
cltd
ss
mov
adc
adc
das
fdivs
and
mov
cmc
xchg
xchg
mov
pop
adc
lds
sub
pop
push
hlt
sbb
xor
sub
xchg
cmp
rcll
xchg
sbb
add
or
push
mov
mov
data16
inc
mov
mov
or
push
es
dec
loope
rcll
movsb
add
sub
xchg
cld
push
pusha
lock
mov
sub
pop
sub
ret
in
cmp
in
ss
jbe
bound
sbb
cmp
movsl
sbb
insb
mov
pop
add
mov
mull
jecxz
adc
add
addr16
inc
pop
and
sbb
push
cmpsl
push
add
int3
cltd
push
fsub
and
push
mov
scas
inc
or
sbb
jmp
push
push
add
pop
adc
mov
pop
call
sub
adc
inc
clc
push
jp
dec
inc
pushf
push
adc
xchg
mov
cmp
hlt
jnp
or
dec
sub
sti
xchg
and
mov
mov
pop
ret
arpl
pop
mov
inc
popf
lret
fdivp
cs
rorl
sbb
dec
shll
xchg
adc
mov
sub
fsubs
adc
adc
fadds
and
mov
mov
xchg
and
fsubs
adc
scas
adc
xchg
imul
popf
mov
and
cmpsb
lahf
or
sbb
fstps
in
lea
movsl
jns
push
xchg
test
outsl
lar
outsb
inc
movsl
mov
out
int3
mov
jecxz
daa
sub
aas
call
xchg
in
push
push
data16
mov
and
and
mov
mov
fmuls
xchg
add
sub
pushf
cmpsb
pop
les
and
scas
addb
fwait
pop
jge
repz
push
je
sbb
fcmove
sbb
jl
jl
pusha
adc
add
test
shll
mov
cld
dec
cmp
mov
movb
push
je
pop
add
das
scas
sub
in
sbb
scas
call
imul
xchg
dec
add
sar
test
cmp
divl
test
pop
sti
movsb
addr16
xor
movsl
sub
xchg
xor
mov
int
add
bound
cmpsl
les
push
xchg
push
rcrl
or
rol
mov
xchg
repz
out
adc
insb
in
pop
xchg
push
mov
inc
mov
out
mov
sub
fwait
cmpb
inc
test
fcoms
fwait
lcall
lcall
inc
dec
ss
test
shr
mov
fsts
add
rclb
mov
and
lea
add
aad
inc
xchg
push
popf
dec
pusha
repz
dec
test
jge
dec
daa
jbe
out
dec
adc
leave
sbb
int
jecxz
and
lods
cmpsb
add
das
push
push
xor
fldenv
push
daa
test
bound
test
push
push
mov
fnstcw
fimull
push
jle
mov
daa
cs
dec
pop
jae
les
addl
imul
xchg
add
adc
clc
movntq
test
filds
sbb
sbb
inc
mov
cmp
insl
stos
and
cwtl
and
xchg
leave
jmp
dec
ja
ret
aam
test
aaa
hlt
ret
sbb
fsts
cmp
pusha
push
sub
fs
neg
sub
pop
icebp
mov
sub
aad
inc
cltd
adc
jmp
daa
in
aam
and
cli
scas
andl
sbb
test
fcomps
ja
sub
lcall
cwtl
sub
pop
mov
cmp
adc
shrb
cmp
data16
repnz
jae
clc
jno
movsb
in
fmull
out
xchg
cmp
sbb
loope
sbb
jne
inc
xchg
inc
adc
cltd
shlb
push
into
mov
push
out
pop
mov
mov
in
jge
mov
das
in
and
lods
fstl
sbb
aaa
pop
adc
xchg
je
jg
push
aad
subl
adc
mov
inc
cmpsb
cmpsl
dec
cmpsl
mov
xchg
sahf
adc
adc
gs
mov
push
push
aad
sbb
cli
sub
cmpb
rol
in
xchg
lret
int3
pop
out
andb
repz
xchg
and
jne
pop
shll
cwtl
add
or
mov
push
cmp
inc
mov
mov
dec
arpl
jae
mov
cmpsb
cmpsl
cli
ret
push
or
xchg
loope
push
dec
jg
sub
rorl
jns
stos
push
cld
mov
sahf
adc
lock
lds
cmp
sbb
shrl
push
rcrb
cmp
add
negb
icebp
mov
arpl
repz
cwtl
repz
and
cltd
inc
stc
push
xor
daa
out
testl
dec
mov
xchg
ret
fbstp
sbb
mov
out
mov
or
and
outsb
xchg
jnp
gs
int3
nop
scas
or
negb
int3
dec
lahf
mov
or
xor
ror
stc
ljmp
test
fistpll
push
clc
sub
mov
int3
stc
pop
xlat
adc
mov
aaa
jbe
and
sbb
push
cltd
mov
mov
cmpsb
jecxz
loope
or
stos
or
sub
insb
add
out
mov
fs
movsl
pushf
adc
lcall
sbb
push
mov
pop
ret
imul
push
or
jl
out
repz
adc
pop
and
inc
cmp
cmp
push
jmp
dec
push
jmp
shll
sahf
adc
ja
lds
sub
cmc
pmullw
mov
lcall
enter
stos
jmp
fdiv
sub
mov
dec
inc
jbe
jnp
adc
stos
popf
push
mov
sbb
jb
ret
mov
mov
mov
in
ljmp
lret
sub
cwtl
pop
push
movsb
xchg
jne
adc
cmp
das
cmp
jo
push
lret
push
mov
test
push
pop
mov
stos
sbb
push
cmc
ret
out
mov
dec
pop
jge
adc
mov
adcb
mov
mov
lea
adc
push
inc
pop
sbbl
mov
jg
xchg
or
in
sub
push
in
sbb
flds
sub
jns
mov
mov
cltd
push
cmp
add
sub
imul
cmc
pop
push
jp
xlat
jnp
sbb
and
lret
adc
mov
insb
jmp
pusha
fxam
and
ret
ds
add
lahf
pop
sbb
repnz
push
out
pusha
xchg
mov
stos
mov
sub
pop
xchg
and
out
cmp
mov
adc
sbb
in
repz
loop
sub
mov
lods
fcoms
mov
call
pop
test
mov
cmpsb
ds
testl
adc
cmpsb
xchg
fadds
movsl
sub
lret
add
xor
repz
hlt
and
leave
scas
fsubrs
scas
push
add
adc
xchg
push
pop
aam
mov
mov
mov
inc
jae
sub
shrl
mov
outsb
dec
push
dec
mov
sbb
pop
adc
int3
adc
push
inc
cmpsl
mov
sub
ds
ljmp
adc
push
or
into
pminsw
aad
ret
jno
mov
jecxz
push
mov
pop
xchg
and
push
and
and
stc
sbb
and
or
push
cmpsl
call
icebp
xchg
nop
sub
or
pushf
ret
hlt
and
daa
or
and
and
and
pop
dec
ja
sbb
daa
movsl
and
inc
push
js
mov
inc
adc
cltd
jmp
push
sti
loope
mov
mov
iret
lret
repnz
and
pop
push
ret
mov
lods
add
jmp
iret
dec
lcall
cld
aas
and
sbb
inc
mov
push
lret
xchg
sub
pop
mov
imul
cmpsb
shrb
rcrl
aam
inc
mov
jmp
testb
pop
imul
cmp
lea
dec
inc
mov
fwait
xchg
inc
sbb
dec
sub
mov
ljmp
sbb
fwait
inc
cmp
insb
es
andl
mov
xchg
out
stos
out
or
cmp
ljmp
bound
cmpsl
adc
fldenv
xor
sbb
push
imul
cmovp
and
mov
jecxz
fnstsw
push
adc
in
mov
push
arpl
sbbb
in
inc
lea
mov
sbb
sbb
cmp
and
dec
jecxz
adc
cmp
mov
cs
mov
cmc
ja
adc
sub
pop
jae
xchg
fnstenv
mov
fcomps
shr
or
aam
adc
aas
daa
xor
xlat
nop
push
mov
and
sbb
adc
imul
mov
js
jmp
adc
mov
or
add
mov
fldenv
xchg
adc
mov
adc
and
add
out
dec
push
push
sbb
and
jl
and
add
push
or
jmp
ja
sti
test
cmp
ret
decb
rcrl
ret
adc
bound
sub
rcr
xchg
insb
xchg
scas
push
sbb
xlat
or
sub
dec
add
xor
scas
in
cs
mov
lds
adc
icebp
sub
inc
mov
sub
out
inc
sbb
data16
pop
pop
mov
and
or
int
push
xchg
sbb
xor
jge
rorb
sahf
loopne
mov
cmp
adc
sarb
js
test
pop
pop
sti
xor
cltd
mov
pop
sub
sti
fstpt
dec
lods
push
nop
xor
in
lcall
pop
sub
push
imul
mov
test
and
sub
lahf
sbb
lods
jno
daa
int
dec
loop
fistpll
imul
bound
das
outsl
in
sbb
dec
movsl
and
mov
sbb
mov
and
or
pop
daa
mov
mov
adc
mull
sbb
sbb
shl
push
xchg
imulb
jmp
push
sbb
push
or
and
lods
lea
push
xchg
movsl
sbb
jns
cld
cmp
icebp
mov
dec
add
imul
in
stos
or
mov
subl
and
hlt
lea
out
mov
xchg
fdivrp
xchg
adc
mov
mov
mov
lods
dec
sub
push
jmp
sbb
popa
je
nop
loope
mov
xor
xchg
inc
adc
nop
and
addr16
and
xlat
insl
out
sbb
movsb
lahf
adc
adc
aaa
stc
lcall
cmp
push
push
mov
daa
xchg
dec
in
insb
inc
pop
add
pop
rorl
iret
jg
xchg
jecxz
dec
out
jmp
sbb
loopne
cmp
and
jns
mov
and
jb
mov
cld
inc
movsl
aaa
or
sbb
scas
mov
or
scas
push
in
sbb
xchg
in
push
mov
jns
mov
outsb
sbb
hlt
stos
shlb
cmp
aam
adc
jecxz
and
icebp
aas
inc
rol
repnz
rorl
mov
test
adc
push
movsb
or
std
js
or
cmpsl
add
inc
or
test
xchg
cld
aad
adc
icebp
popf
out
call
insb
mov
test
jns
roll
sbb
pop
test
popf
and
popf
cmpsl
movsl
and
in
popa
dec
sub
dec
repnz
dec
mov
test
loop
xchg
jecxz
test
imull
je
popf
sub
test
sub
sub
fwait
sbb
adc
loopne
mov
jns
pusha
fsubl
sub
adc
and
in
mov
cmp
adc
sbb
inc
sbb
sub
mov
and
imul
or
xchg
ja
push
adc
sbb
or
and
insb
stos
cmpsb
fstps
adc
adc
xor
mov
xchg
mov
inc
and
sbb
adc
scas
inc
cmpsb
xor
ss
mov
pusha
push
insb
cmpsl
and
mov
mov
mov
lret
xchg
mov
and
add
cmpsl
push
lods
xchg
xor
fwait
xor
out
fdivrp
and
mov
add
add
jno
add
sub
dec
or
shr
xchg
or
sub
inc
mov
loop
push
cmc
push
data16
mov
inc
and
mov
lcall
mov
movsb
dec
pop
adc
repz
ret
adcl
int3
push
push
inc
adc
test
cld
dec
sbb
fistpl
lods
call
imul
insl
xor
jecxz
pusha
mov
cmc
xchg
lahf
cwtl
dec
sub
or
adc
pop
loope
sbb
in
pusha
daa
pop
and
aad
daa
add
sti
mov
int
xor
push
addr16
pop
data16
fistpl
xchg
jne
notb
push
push
repz
sub
mov
lea
pop
in
popf
xchg
int3
loopne
mov
mov
lahf
sub
push
mov
cmp
testb
int3
andl
cmpb
xchg
sbb
popf
sub
push
mov
fcomps
push
cs
cmpb
pop
add
scas
pop
add
cmpsl
pop
inc
mov
and
inc
and
lcall
roll
inc
and
dec
int3
jno
and
sbb
sbb
add
and
xchg
jmp
sub
jge
notl
xchg
test
scas
inc
sbb
add
and
dec
push
pop
or
sbb
pop
xor
lcall
xchg
stc
mov
call
sbb
inc
and
xchg
sbb
or
sub
dec
jae
addr16
arpl
aam
cltd
mov
sub
push
inc
cld
sbb
adc
je
xchg
pushf
jns
mov
xchg
js
in
or
xchg
inc
movsl
scas
or
push
sub
xor
in
dec
or
jmp
adc
sub
out
sbbl
mov
pusha
and
scas
push
jle
mov
scas
or
cmpsl
add
push
push
push
ret
pop
adc
int3
jns
dec
mov
sbb
push
gs
in
clc
jne
adc
and
dec
dec
divl
pop
lods
imulb
dec
daa
andl
loope
sbb
xor
mov
xor
jnp
or
cmp
cli
gs
inc
imul
scas
rcl
dec
pop
xor
mov
inc
decl
popa
and
or
cltd
push
mov
movsl
loop
out
dec
push
cs
jp
aaa
clc
dec
popf
xchg
iret
out
sbb
push
and
fisttpl
lods
dec
mov
jae
mov
and
add
cmpsb
mov
jge
bound
in
fcoml
insb
xchg
jnp
mov
jae
aaa
lea
icebp
arpl
pop
push
add
mov
repz
jmp
call
fsubrs
fwait
daa
stc
mov
test
adc
dec
divb
pop
mov
xchg
sub
pushf
inc
jae
testl
outsl
and
sbb
les
stc
jmp
cmp
mov
pusha
jg
mov
insl
sub
in
mov
cmp
dec
adc
pop
add
imul
and
mov
jg
xor
mov
out
outsl
mov
push
shlb
jnp
cmp
adc
add
push
push
arpl
int
pop
pop
xchg
movsl
jmp
fsubrp
ret
fmull
popf
and
lods
xor
mov
cmpsl
inc
jae
xchg
orb
insb
cmp
push
jecxz
dec
or
xchg
and
fwait
int3
rolb
add
mov
mov
and
push
sub
lret
in
fldl
popf
pop
stos
or
pop
dec
push
mov
lds
inc
test
subb
inc
xchg
inc
mov
int3
ss
sbb
xchg
scas
pop
adc
mov
ficoml
negb
stos
xor
add
push
imul
mov
imul
pop
mov
lcall
pop
pop
sbbb
dec
test
sbb
and
adc
inc
pop
repnz
daa
ss
jecxz
push
sub
je
mov
sub
fstpt
xchg
or
call
jae
inc
lahf
and
adcl
orl
cmp
mov
add
pushf
adc
mov
jl
sbb
stos
ss
daa
push
xchg
mov
or
mov
int3
pop
cs
push
int
cmp
lret
pop
jae
add
inc
push
or
sbb
fcmove
ret
std
adc
and
out
inc
test
sbb
aad
and
popf
push
push
cmpsl
sbb
inc
inc
jnp
sysexit
push
cmp
out
jle
cltd
sbb
jae
jae
pop
mov
cmp
xchg
mov
in
inc
inc
mov
or
xor
adc
js
xchg
jp
and
sub
es
ret
and
mov
sbb
inc
cmpsl
and
js
pop
push
test
adc
sbb
dec
addl
data16
add
mov
arpl
fistpl
add
adc
dec
xchg
lahf
cli
roll
inc
dec
lret
repnz
mov
test
int
es
sbb
push
jge
daa
push
and
push
lods
ret
adc
jns
mov
and
sub
in
xchg
les
fsubl
mov
cmp
xchg
xchg
cli
and
xor
mov
adc
mov
and
shld
add
adc
pushl
inc
fwait
sub
jb
stos
jmp
rolb
data16
imul
mov
lahf
jecxz
sbb
mov
cmc
cltd
or
ret
out
daa
inc
add
lock
dec
xor
repnz
sbb
or
pop
push
filds
mov
mul
imul
pop
sbb
sbb
adc
mov
fcoml
push
jl
push
aad
or
add
push
pop
or
daa
and
and
xchg
sbb
mov
mov
icebp
add
mov
mov
mov
sub
dec
and
and
adc
or
into
out
push
iret
cmp
enter
add
pop
jecxz
or
and
fisttpl
pop
out
int3
mov
inc
decl
mov
int3
aaa
fisubs
sbb
cmp
inc
repnz
cwtl
push
add
or
xor
pop
xchg
cwtl
sbb
dec
add
lcall
mov
lds
push
push
mov
push
sbb
pushf
insb
loop
mov
outsb
ljmp
xor
iret
and
loopne
into
out
push
dec
push
nop
adc
sbb
scas
repz
incl
and
inc
test
dec
and
aaa
daa
lods
mov
outsb
push
fs
mov
adc
pop
dec
or
mov
movsl
sbb
mov
sub
rorb
inc
sahf
gs
or
pop
dec
add
inc
xor
jo
push
jae
pop
adc
stc
mov
clc
leave
push
adc
aaa
imul
adc
cmpsb
mov
mov
leave
int
and
mov
scas
jmp
mov
or
push
adc
fimuls
adc
insb
scas
add
xchg
cmc
out
mov
and
shr
loope
inc
dec
invd
lock
sbb
xor
iret
mov
imul
sahf
int
out
addr16
movsb
imul
adc
jo
sahf
and
in
push
dec
add
hlt
scas
lea
sahf
dec
fwait
jmp
xor
std
das
xchg
or
cmp
xchg
cltd
pusha
ret
mov
aam
insb
ss
pop
sbb
data16
hlt
xor
cmp
pop
js
scas
cmp
loope
xchg
inc
loopne
in
dec
cmp
cmp
scas
mov
cmc
mov
loope
test
xchg
mov
sbb
jg
stc
into
add
push
and
mov
clc
sbb
insb
push
mov
and
cmc
xchg
and
in
push
loop
adc
adc
in
adc
in
sbb
sbb
loop
push
jle
das
ficoms
adc
pop
adc
movsb
xchg
pop
inc
out
dec
call
xor
nop
and
mov
dec
lcall
std
movsb
and
sub
pop
adcl
mov
inc
pop
xlat
outsb
push
pop
cmp
inc
rcrb
mov
xchg
pushf
or
movsl
stos
pop
pop
push
push
ficomps
iret
xchg
insb
and
dec
leave
mov
adc
iret
es
mov
push
inc
arpl
inc
lahf
xchg
and
out
das
jns
test
es
test
and
adc
sub
test
lcall
mov
mov
cmp
call
test
mov
int3
test
fwait
mov
adc
popf
or
inc
leave
or
push
imul
pop
rcl
xchg
adc
and
or
sbb
push
cld
cmp
sbb
sub
arpl
mov
sub
push
hlt
mov
fxch
pop
push
push
mov
xchg
loopne
xor
cmc
inc
xchg
sbb
scas
loop
and
dec
fisubl
ret
mov
ja
push
sbb
das
cmp
bound
cmpsb
mov
imul
iret
adc
sbb
ja
jne
ss
and
sbb
push
lea
mov
add
mov
add
icebp
jecxz
dec
pop
das
jnp
dec
pop
sbb
adc
daa
and
cmp
fadds
cltd
dec
data16
aaa
xchg
adc
dec
add
cmpsl
sbb
xor
fsubl
mov
and
or
sbb
dec
add
mov
jcxz
dec
push
xchg
sub
popaw
mov
and
dec
aaa
mov
and
aad
sbb
add
and
mov
sub
je
push
adc
push
cmpsb
jecxz
lahf
and
mov
mov
loop
sbb
shl
imul
add
sbb
int3
imul
xchg
xor
pusha
sbb
insl
dec
inc
mov
insb
mov
dec
push
insb
or
es
dec
imul
fldenv
push
cmpsb
sbb
dec
dec
notb
data16
lar
testb
dec
adc
lods
loope
imul
sub
dec
scas
mov
adc
negl
repz
lret
sub
jno
ljmp
insb
sbb
aam
dec
in
in
add
bound
jmp
loope
fwait
sub
jo
and
mov
xchg
and
arpl
sbb
outsb
in
imul
adc
mov
subl
sbb
pusha
into
pop
jne
dec
mov
or
mov
sbb
jge
pop
fisttps
adc
and
adcl
lcall
inc
inc
add
pusha
mov
or
inc
js
pop
cmpsl
mov
or
jg
push
scas
pusha
in
and
cltd
into
dec
adc
push
int3
pop
sbb
mov
sbb
mov
aaa
imul
sub
ljmp
xchg
adc
aam
and
adc
cmpsl
in
outsl
shll
xor
cmp
fldt
xchg
inc
jecxz
outsb
pop
pushf
mov
jnp
ja
popf
stc
out
sub
faddl
cltd
cmp
and
mov
adc
sbb
add
outsl
cmp
leave
or
adc
mov
dec
repnz
jbe
les
and
insb
sub
in
push
dec
sbb
addr16
cmc
jo
xchg
sbb
push
daa
int3
sahf
daa
mov
sub
sub
test
and
clc
enter
xchg
daa
in
mov
xchg
jnp
dec
sbb
enter
sub
jmp
jmp
loop
push
in
xlat
lahf
and
sub
jnp
cmpsb
in
fldenv
call
loop
cmp
mov
sbb
push
xchg
insl
push
aaa
sub
scas
push
or
push
and
mov
pop
add
jmp
adc
xchg
cmp
insb
clc
xchg
and
inc
and
dec
push
cmpl
jno
cwtl
and
pop
pop
mov
and
xchg
xchg
mov
push
and
push
bound
mov
test
cmp
sbb
mov
outsl
aaa
jae
adc
out
sub
adc
in
call
inc
inc
js
sub
pop
jne
orb
fisttpll
lods
mov
xchg
inc
jae
push
adc
mov
lret
lods
sbb
cmp
popa
out
add
es
mov
mov
outsb
push
test
mov
rcll
push
dec
lea
les
pop
jae
data16
loop
pop
adc
fisubrl
loopw
sbb
pushf
enter
sbb
test
es
fs
cmc
rorb
stos
push
mov
jecxz
imul
sbb
scas
rol
xchg
sbb
add
jmp
data16
into
jmp
lcall
mov
xor
jns
inc
and
loope
xlat
dec
vcmppd
in
xor
mov
dec
cmpl
or
sti
insb
push
fldl
add
push
and
mov
popa
aad
push
sub
and
xor
imul
lds
and
out
repnz
mov
enter
xor
cwtl
notb
and
xor
fistps
in
xlat
lret
mov
lea
out
pop
mov
and
popa
mov
arpl
push
rcr
lahf
int3
adc
fwait
lcall
push
mov
pop
and
movq
stos
in
push
pop
xchg
lahf
movsb
inc
dec
pushf
shll
fst
pop
mul
in
adc
push
inc
fs
cltd
ljmp
std
js
sbb
sub
daa
pop
insb
ss
outsb
mov
mov
out
inc
push
outsl
in
push
aad
iret
fdivrs
xchg
add
adc
dec
bound
aam
stos
or
sub
cld
dec
scas
repnz
mov
hlt
cmpsl
and
sub
mov
push
subb
dec
and
mov
inc
mov
gs
test
push
outsb
imul
imul
adc
ds
outsb
je
dec
cmp
xchg
test
and
pop
mov
xor
cmp
sub
inc
mov
cmp
bound
in
lock
jo
fwait
sub
imul
xlat
fmuls
inc
xor
xor
mov
mov
pop
cmp
mov
mov
adc
lea
scas
and
sbb
lds
adcb
int
sub
and
pushf
pop
cmpsb
inc
hlt
cwtl
xchg
inc
pop
dec
adc
popa
inc
mov
fcompl
out
dec
into
out
int3
mov
and
inc
lret
cmovo
sub
dec
jecxz
adc
dec
adc
xor
sbb
iret
push
mov
lahf
push
scas
inc
sar
sbb
inc
das
push
cmpsb
mov
loop
xor
sahf
mov
cmpsb
xchg
dec
push
pcmpgtw
ret
add
push
fdivs
int
imulb
push
mov
pop
xchg
ja
fcompl
push
jg
cmpsl
inc
sbb
adc
rorb
inc
jne
jb,pt
pop
dec
dec
push
daa
in
mov
sarl
movsl
or
dec
into
xor
aas
loope
mov
cmpsl
in
lock
out
and
sub
jno
loope
mov
popf
cli
ljmp
xor
xor
sub
fisubrs
dec
sub
cwtl
sahf
adc
push
lcall
sbb
jne
jle
sub
xchg
jg
adc
adc
jmp
jae
test
outsl
sbbb
lea
icebp
push
xor
sub
xchg
inc
dec
nop
jnp
or
fs
add
fisubs
call
jmp
xchg
cmp
xchg
sub
arpl
cmpsb
adc
push
jo
and
inc
adc
pop
adc
push
or
test
adc
inc
push
inc
pop
sbb
push
loope
sub
ret
loopne
inc
lahf
or
lahf
and
mov
sbb
ret
pop
mov
shll
pop
inc
xor
xchg
fstpl
mov
pop
add
jecxz
pop
xchg
mov
push
adc
pop
popa
divl
and
jl
je
movsb
adc
ret
dec
xor
pushf
add
mov
mov
outsb
xchg
or
jmp
pop
add
int3
pop
adc
jg
daa
imul
and
sbb
or
insl
sub
andl
daa
xchg
std
sbb
das
sub
faddp
sbb
dec
xchg
test
aad
divb
sbb
xor
add
or
xchg
mov
arpl
fs
and
data16
lea
scas
xchg
popf
push
inc
dec
fcomi
das
pop
cmp
enter
push
and
mov
mov
insb
adc
sbb
mov
fsubl
fcmovne
popf
adc
xor
cmp
mov
xchg
pop
sbb
xor
ds
cmpsb
iret
hlt
cwtl
out
inc
cmp
fcoms
sub
jmp
sahf
sub
mov
and
sbb
push
add
push
andl
adc
xchg
sahf
mov
stos
pop
fwait
pop
sahf
dec
pushf
stos
rcrb
dec
rcrb
mov
push
pop
mov
inc
mov
je
sbb
sbbl
or
jo
out
sbb
into
pop
dec
fstl
sbb
imul
ss
adcl
loopnew
push
pop
dec
add
add
add
push
sub
mov
shl
popf
stc
lahf
imul
inc
mov
mov
pusha
sbb
mov
cltd
xchg
sub
imul
sbb
xchg
imul
bound
and
sahf
enter
repnz
adc
data16
mov
jmp
or
test
pop
sub
dec
testl
or
dec
pop
mov
out
ljmp
mov
fwait
enter
inc
or
mov
mov
sbb
lret
imul
adc
push
cmp
mov
outsl
adc
repnz
xchg
rclb
push
and
cmpsb
xchg
xlat
sarl
inc
mov
ret
cmp
mov
sbb
jecxz
jne
nop
fsubl
or
outsb
lcall
cltd
mov
and
ret
push
push
cmpsb
scas
ss
xor
sbb
inc
hlt
or
jecxz
mov
fistps
sbb
pop
jno
cwtl
inc
cmp
cltd
cmpsb
and
aaa
scas
pop
pusha
push
rclb
aad
xor
ja
adc
sbb
or
push
in
sbb
ds
stos
out
inc
pop
rolb
adc
fwait
loop
ret
mov
sbb
push
mov
sub
push
scas
push
mov
lds
push
and
mov
push
and
mov
stc
int3
and
iret
inc
mov
pop
adc
xchg
push
stc
scas
add
mov
out
mov
cmpsl
mov
inc
adcl
sarl
inc
inc
sahf
pop
daa
pop
int
sub
sbb
add
mov
jae
loop
mov
mov
loope
adc
cmp
or
sti
cmp
setae
mov
sbb
push
or
push
mov
dec
cmpps
mov
adc
arpl
lret
jbe
lcall
dec
stc
add
sbb
push
sub
or
inc
aaa
push
sub
dec
out
add
les
adc
sub
rclb
mov
push
xchg
inc
cmc
movsb
and
push
mov
sbb
stos
xor
popf
sub
sub
push
adc
xchg
bndldx
push
lcall
mov
jmp
adc
mov
pop
cmp
sbb
pop
orl
mov
add
push
notl
popf
ss
and
and
adc
sbb
mov
in
push
imul
popf
jmp
sub
clc
sbb
insl
and
leave
xor
jecxz
in
pop
push
jle
sub
cmp
adc
adc
xchg
mov
cmp
dec
or
mov
in
cmp
jg
lods
mov
xor
ret
movsb
das
adc
sub
mov
jl
mov
test
sbb
subl
inc
inc
cmpsl
and
xorb
imulb
push
mov
adc
xchg
gs
mov
sbb
add
sbb
insb
lcall
adc
andl
imul
sbb
mov
lock
sbb
in
test
movsl
ss
dec
cltd
cli
out
dec
aam
dec
out
cmpsl
cmpsl
sub
cli
clc
out
push
mov
jns
mov
and
mov
sub
outsl
dec
xchg
daa
jl
mov
mov
aaa
mov
lcall
push
xorb
fwait
mov
sub
loop
sbb
aad
jnp
or
sub
and
adc
mov
out
mulb
cld
imul
addr16
or
dec
inc
jl
jl
stos
movsl
fnstenv
xchg
shr
add
adc
sub
incb
and
clc
and
aam
fcoml
adc
inc
insb
loopne
fists
fwait
adc
add
xchg
sahf
dec
int3
sub
mov
xchg
dec
or
lret
add
adc
cmpb
and
sub
push
dec
shll
sbb
jbe
dec
pop
in
cld
add
test
cmp
cmc
rcrl
or
andb
lea
lods
cmc
cmp
mov
mov
test
je
jo
xchg
imul
dec
test
in
sbb
cmp
ret
push
mov
or
pop
mov
mov
sub
icebp
pop
outsb
mov
cmp
in
cmpsb
bnd
sbb
mov
sbb
mov
iret
bound
jns
scas
sub
je
sub
or
shll
sub
test
jo
dec
jecxz
cmp
adc
dec
jns
mov
or
add
rorl
xor
xor
cmp
pop
cli
add
arpl
and
xchg
cltd
lret
fldl
mov
push
adc
push
clc
pop
adc
int3
adc
pop
subb
daa
out
xchg
dec
dec
dec
and
shll
push
ja
insb
fs
pop
mov
daa
inc
fwait
nop
sub
in
sub
push
xchg
dec
inc
mov
mov
bound
and
mov
cmpsl
adc
mov
shlb
iret
cmp
sahf
push
js
jp
push
int3
pop
lcall
push
pop
mov
jno
jecxz
repz
push
cmp
push
jle
dec
fimuls
and
push
ja
pop
insb
xchg
adc
mov
mov
mov
popf
push
icebp
in
pop
enter
add
jmp
sbb
rcll
daa
pop
push
xor
and
rorb
mov
cmpsl
ljmp
popf
adc
stos
cs
jae
rcrl
sub
pop
add
xlat
inc
sbb
lret
jae
mov
scas
sbbl
jbe
sbbb
addl
test
cltd
insb
push
add
pusha
jmp
pushf
daa
or
push
fcmove
push
xor
bound
xor
push
mov
jbe
fstps
gs
sub
out
adc
icebp
imul
sti
mov
cmp
add
xchg
adc
mov
push
arpl
push
push
jle
pop
stos
dec
sub
adc
and
add
gs
adc
push
mov
and
jns
es
rclb
xchg
test
popa
adc
inc
lahf
xchg
mov
xor
leave
decl
insl
push
stos
mov
mov
mov
inc
sub
sub
jno
mov
es
insl
and
scas
xchg
jge
xchg
push
inc
mov
lahf
fwait
xor
lret
mov
outsb
mov
dec
call
adc
and
aam
mov
jae
or
jno
fldenv
cmpsb
push
pop
inc
sub
insb
out
ffreep
test
fsts
shll
xchg
test
jge
cmp
pop
jae
pusha
mov
fsubrs
ja
adc
inc
mov
in
mov
fwait
sub
repnz
mov
cmpsb
out
sub
mov
push
pop
subb
loopne
fistps
inc
pop
pop
mov
mov
inc
test
xchg
push
sbb
add
xor
leave
add
or
cwtl
outsb
sub
push
out
inc
jns
out
add
sbb
jbe
inc
and
fs
adc
push
pop
or
orl
in
inc
mov
mov
imul
in
mov
inc
aas
lods
mov
mov
lock
or
sbb
mov
repnz
mov
outsl
dec
les
mov
lods
and
xchg
cmp
bswap
or
cmp
adc
inc
in
repz
push
cmp
clc
cmc
jns
pop
cmp
lds
and
pop
sbb
repz
dec
mov
cmpsl
cmpsb
sbb
adc
sbb
pop
out
in
jnp
xchg
jl
adc
lahf
or
enter
mov
cmpsl
lahf
xchg
push
push
push
or
call
mov
pop
stc
flds
pop
adc
adc
insl
sar
lcall
cmpsb
dec
xchg
adc
leave
adc
dec
pusha
adc
mov
pop
inc
dec
ja
pop
xchg
xor
and
popa
push
mov
sbb
movsb
sbb
dec
or
mov
mov
push
push
je
push
pop
or
outsb
inc
mov
enter
push
jo
jne
int3
or
and
xor
push
inc
adc
mov
ja
jb
out
dec
call
or
bound
into
aad
push
sbb
out
int3
add
sub
daa
dec
data16
push
popf
imul
cmpsb
mov
pmuludq
jbe
sbb
nop
dec
push
test
xor
iret
adc
bound
test
bndldx
icebp
push
aad
xchg
mov
outsb
adc
nop
gs
cmp
mul
adc
mov
cmpl
xor
sbb
jb
cmp
test
dec
or
popa
push
lret
push
fucom
fwait
mov
leave
ret
mov
dec
xor
sub
or
xor
icebp
pop
push
cmp
push
xchg
adc
cmp
and
xchg
xchg
mov
and
rorb
xchg
aaa
mov
sbb
imul
and
lcall
xor
in
adc
js
fbstp
shlb
dec
pop
jmp
pushf
sbb
push
jge
adc
cmc
xchg
pushf
dec
js
rclb
mov
pop
sbb
mov
icebp
and
outsb
or
nopl
outsl
xchg
mov
jmp
push
inc
out
cltd
add
mov
push
lahf
cmovbe
fcomps
and
mov
or
xchg
sahf
sbb
push
mov
out
in
push
loope
xchg
scas
addr16
fmull
or
mov
ds
xlat
fwait
sbb
into
iret
cltd
inc
aad
and
mov
fcmovu
paddsb
std
ret
notb
sbb
jo
fdivs
or
push
dec
pop
rorb
pop
adc
mov
sahf
and
in
xchg
mov
mov
sbb
scas
loopne
xchg
fwait
sub
xchg
and
daa
and
and
cmp
orl
cmpsb
dec
int
jne
cmpsl
in
cltd
or
jp
ret
cmp
lahf
sub
fisubs
stc
adc
push
lods
jbe
roll
aad
push
xchg
rolb
js
out
and
inc
mov
mov
jmp
jo
cmpsl
clc
cmpl
mov
xchg
jecxz
in
lods
movsb
pop
adc
dec
je
cltd
icebp
mov
xchg
repnz
dec
mov
mov
sub
xor
aaa
dec
pop
mov
jp
mov
push
bound
pusha
inc
sub
push
out
iret
and
push
in
jl
lret
cmc
or
pop
dec
test
mov
clc
insb
add
ret
sbb
dec
je
sbb
and
cmc
add
push
mov
adc
mov
popf
jb
pop
pop
mov
mov
arpl
add
and
jb
orb
mov
sub
js
outsl
jecxz
scas
sbb
xchg
mov
ror
pop
xor
push
out
pop
imul
and
jmp
mov
xchg
add
daa
jge
sub
shll
push
daa
mov
mov
mov
arpl
aad
out
sysexit
xchg
sbb
lcall
and
lods
xchg
xchg
push
in
test
adc
add
xor
cmp
sbb
fucomp
out
push
les
insb
pop
ret
outsb
push
in
or
icebp
cld
arpl
and
out
adc
data16
push
inc
out
in
push
pushf
and
pop
sub
shl
xor
inc
sti
cld
loopne
jbe
lcall
rorl
mov
pop
push
cmp
std
test
xchg
in
and
jne
xchg
sbb
xchg
sbb
call
lahf
push
movsl
sbb
xchg
test
lea
imul
sub
sub
add
sbb
inc
sub
push
hlt
fmull
dec
or
call
movsl
adc
xor
sub
push
or
call
push
insb
push
add
mov
sbb
pop
pop
mov
popf
sub
add
and
call
mov
test
inc
sub
leave
or
jns
push
jnp
cmpsb
roll
or
int3
sbb
scas
sbb
enter
es
push
cmp
scas
outsb
jbe
add
pop
mov
xor
xor
aaa
shll
mov
xchg
inc
mov
mov
or
movsb
loope
or
sbb
lods
push
xor
sarl
push
pop
popa
in
adc
xchg
outsb
jecxz
or
sarl
mov
inc
xchg
movsb
inc
mov
mov
xor
sbbl
dec
fisubrl
adc
lods
mov
or
dec
pop
fwait
or
loopne
dec
push
or
adc
lcall
pushf
sbb
in
aas
cwtl
movsl
sub
sbb
int3
mov
mov
cmp
dec
push
adc
and
inc
mov
imul
sub
sub
pusha
repnz
adc
or
jecxz
xor
cli
xor
pop
icebp
adc
and
lcall
sub
je
ss
cmpsb
pusha
fiadds
push
add
mov
loop
dec
imul
int3
sbb
pop
adc
clc
je
push
repnz
and
sbb
or
out
adc
stos
call
daa
adc
mov
repz
jecxz
repz
sub
insb
scas
sub
sbb
inc
add
cs
cld
sbbl
pop
pop
push
push
dec
int3
sub
and
add
ljmp
dec
mov
outsl
pop
and
cmp
stc
pop
xor
lcall
repnz
xchg
jle
sub
cmpb
dec
out
cmpsb
pusha
arpl
dec
adc
je
test
jecxz
push
xchg
and
inc
and
add
lea
pop
pop
xchg
xor
and
cmpsl
push
xchg
sub
fistl
xchg
inc
ljmp
inc
and
xchg
fimuls
adc
sub
mov
lds
adc
jmp
add
imul
mov
sbb
or
pop
dec
and
sub
and
imul
mov
sbb
leave
xchg
and
jb
andl
jecxz
mov
mov
into
shlb
cld
sub
xchg
sub
sbb
jg
xchg
data16
adc
aas
lea
push
jmp
fcoml
mov
push
push
in
sub
add
sbb
and
loop
sub
iret
fisttpl
xor
push
xchg
iret
shlb
push
push
sub
rorl
es
mov
xchg
mov
clc
aas
sahf
mov
and
mov
jns
lahf
pop
in
dec
add
and
sbb
xchg
pop
ds
in
push
push
inc
sarb
and
int
push
pop
sahf
xchg
adc
xlat
fsubrl
dec
sub
outsl
loopnew
inc
sbb
mov
out
mov
mov
test
imul
push
sbb
lods
out
scas
fs
jo
xchg
lahf
push
mov
pop
cmp
es
cltd
and
jnp
aad
sbbb
and
addr16
jnp
sub
pop
xor
push
mov
sbb
push
and
popa
xor
jne
jg
test
jg
in
sub
add
mov
sbb
lods
jl
shrl
cmp
fwait
sbb
lcall
adc
dec
jmp
sub
mov
jle
shlb
lock
in
dec
repnz
leave
stc
push
mov
pop
lea
jecxz
sub
loope
cmp
out
sbb
push
sbb
cmpsb
push
mov
daa
fucomi
loope
and
dec
add
dec
mov
cwtl
sbb
clc
mov
pop
push
add
fwait
xor
ja
sub
aas
arpl
sub
fmuls
movb
outsl
nop
test
mov
jno
lcall
adc
rol
push
nop
rcrb
and
or
xchg
stc
test
aad
andl
bound
xchg
and
push
sbb
sub
aaa
mov
pop
dec
jnp
mov
lods
inc
sub
xchg
inc
test
jl
lahf
out
and
mov
lods
and
lret
int3
imul
mov
fbld
sub
and
ja
les
lea
repz
in
sub
adc
mov
das
sub
adc
ret
or
mov
lcall
adc
ss
sbb
push
lods
jg
mov
imul
add
and
sub
push
pop
pop
mov
xchg
pop
adc
mov
test
imul
xor
xchg
movsl
adc
punpckhbw
data16
mov
sbb
lods
mov
test
shl
fwait
adc
cmp
orl
mov
and
insb
pop
sahf
and
ficomps
cmp
sbb
cmp
xlat
daa
lea
test
sub
xchg
jmp
les
ret
fstps
rclb
dec
xor
ret
jmp
int3
shll
mov
out
jg
mov
xchg
adc
xchg
sbb
adc
dec
cmpsl
dec
ficompl
adcl
inc
jle
jnp
mov
fcmovnbe
adc
sub
inc
dec
inc
cmpsl
adc
mov
dec
mov
pop
ret
lea
mov
repz
jg
mov
pop
popa
xchg
lahf
xor
and
cmp
adc
sbb
outsb
mov
dec
dec
and
rclb
ljmp
adc
ficompl
out
or
adc
add
and
dec
stc
mov
push
aad
loope
cltd
push
outsl
js
imul
lds
stos
pop
or
packsswb
sub
dec
jno
sbb
cmp
mov
sub
adc
mov
ret
push
loope
in
mov
jae
mov
js
and
sti
mov
ljmp
adc
into
iret
cmp
push
and
jnp
push
repnz
mov
jge
xchg
dec
movsb
cmp
popf
sub
pop
fwait
lahf
lret
out
xchg
loopne
and
es
fnsave
sub
pusha
xchg
jg
adc
mov
int3
mov
das
pop
push
sbb
es
sbb
iret
push
mov
outsl
enter
stos
push
sti
inc
push
ret
push
push
and
dec
and
sub
ja
jbe
and
ret
pop
and
popf
or
shrl
in
aad
jle
dec
pop
outsb
je
and
popf
and
or
cwtl
jno
xchg
push
pop
jmp
sub
ss
sub
mov
outsb
cwtl
lcall
mov
adc
addr16
push
scas
push
inc
sbb
cmp
dec
bound
test
rcrb
sbb
jecxz
sbb
repnz
icebp
iret
outsl
xchg
xor
arpl
dec
std
das
rorb
scas
dec
cmpsb
xchg
cli
jmp
inc
lds
sub
add
in
cmp
jo
sbb
xchg
repz
push
fwait
pop
test
cld
repnz
sub
xor
add
lcall
mov
pop
xchg
mov
cmp
aad
sub
add
dec
xor
push
or
xchg
inc
icebp
jb
rcll
sbb
xchg
mov
sbb
daa
dec
test
lcall
in
lds
cmp
sub
addr16
movsl
imul
imul
lods
mov
or
out
scas
add
cmpsl
scas
pop
cmpsb
das
dec
imul
sbb
outsb
push
fs
movsl
xor
mov
sbb
lret
std
out
mov
jg
adc
fsts
push
sbb
adcl
lret
iret
test
cmp
push
xchg
ljmp
mov
mov
xchg
scas
adc
pushf
test
addr16
cmp
add
inc
xchg
movsb
sub
push
cmpsl
push
fists
mov
pusha
cld
dec
into
add
mov
push
or
xlat
pop
cmp
sub
jmp
dec
inc
jb
inc
add
cltd
popf
mov
mov
repz
fwait
lcall
cmp
test
xor
dec
dec
in
dec
dec
sbb
aad
cmp
rorl
imul
sbb
xor
out
cmp
cmc
sbb
adc
insb
sub
or
jnp
jmp
and
fsubrl
sti
inc
scas
jecxz
push
movsl
cmpsl
adc
lods
ret
and
pop
jne
pushf
adc
sbb
sub
pop
cmp
sbb
imul
into
sub
push
mov
test
cmp
rcrl
and
repnz
xchg
ljmp
lea
scas
hlt
cmc
cmpsb
movsb
sub
fcomps
into
add
ljmp
inc
movsb
and
lret
shrl
and
lods
push
and
hlt
fsubs
or
movsb
inc
push
outsb
mov
fsubrl
xor
pushf
iret
jmp
push
data16
in
adc
or
pop
repz
adc
cltd
add
and
mov
cs
dec
push
lea
or
add
and
xchg
mov
lods
jmp
testl
pop
inc
pop
pusha
adc
xorb
mov
dec
aad
out
in
push
hlt
aam
push
mov
jle
lods
cli
xor
adc
dec
xchg
cld
loopne
dec
mov
movsb
mov
sbb
xor
xor
push
lret
mov
cmp
and
movsl
dec
loopne
xor
sbb
js
fsubs
fsubrl
insb
rcr
std
stos
lea
ret
sbb
adc
inc
dec
pop
inc
adc
aad
out
in
data16
es
ja
roll
mov
mov
call
or
or
or
mov
sbb
push
nop
test
adc
jge
das
dec
add
mov
outsb
xchg
daa
push
dec
dec
shll
xor
or
cmp
sub
or
add
shlb
pop
push
aad
jge
push
mov
sub
movsb
and
sbb
or
insb
jle
pop
jg
mov
push
or
movsb
ret
xlat
xor
add
cwtl
sub
add
mov
jno
dec
insl
lods
fwait
aas
sub
xor
adc
pop
ret
adc
das
add
push
cmp
push
jne
push
das
dec
je
pop
and
xchg
out
dec
mov
mov
pop
shl
or
cwtl
pop
push
mov
pop
sbb
inc
pusha
test
mov
and
xor
push
pop
and
pop
lods
fnstcw
mov
int3
dec
pop
adc
test
mov
sbb
xor
sub
adc
gs
scas
scas
dec
js
pop
lahf
add
data16
and
mov
inc
iret
sbb
add
out
fistpll
dec
mov
dec
mov
push
lcall
aaa
pop
mov
push
pop
in
or
test
push
sub
cmpsl
xor
pusha
mov
adc
nop
jbe
lcall
inc
movsb
mov
add
cmpsl
xor
cmp
push
pop
mov
mov
and
or
jo
dec
add
arpl
setns
sbb
pusha
in
or
sub
int
cs
dec
push
or
imul
adc
je
adc
test
pop
imul
or
push
sub
data16
jae
js,pn
fisttpll
sbb
mov
add
jecxz
xchg
sbb
hlt
ljmp
sub
jne
or
sbb
flds
lcall
or
add
jge
stos
cmp
dec
sub
and
jecxz
mov
ret
push
and
shrb
movsb
and
add
mov
adc
sub
sbb
adc
sub
dec
movsl
sub
push
daa
mov
cmp
mov
and
fucompp
xchg
movd
xchg
add
and
dec
imul
inc
jns
mov
adc
push
in
sarb
add
xchg
lcall
daa
int3
mov
xor
loopne
push
adcl
lret
add
iret
push
pop
sbb
dec
outsl
mov
gs
jnp
call
xchg
rcrb
and
clc
dec
xchg
pop
outsl
movsl
cmp
or
imul
notl
mull
xor
adc
or
andl
mov
jae
and
popa
adc
mov
add
inc
cld
xchg
lcall
push
cmp
xchg
xchg
dec
xor
imul
push
repz
and
lcall
xor
lret
fdivl
pop
push
jecxz
insb
pop
out
pop
lcall
sub
mov
mov
or
and
jae
cmp
bound
xchg
add
and
loopne
mov
mov
sbb
lahf
inc
sbb
cmp
jne
push
imul
fwait
push
jp
pop
jp
stc
mov
ret
lahf
sub
je
popf
test
jo
call
orl
or
dec
xchg
add
jb
push
cmp
popf
and
js
leave
fsts
test
adc
pop
pop
movsb
and
xor
dec
or
addr16
lret
shr
mov
mov
inc
adc
in
lcall
ja
out
xor
mov
sbb
cmp
push
dec
mov
leave
out
xchg
and
int
pop
rcll
or
xor
add
pop
xchg
jns
sub
sub
sub
imul
insb
cmp
cmc
pop
fisttpl
cmpsl
ret
jmp
sarb
hlt
and
sub
cmp
icebp
adc
sbb
data16
js
push
ret
xor
push
dec
jle
mov
dec
dec
mov
mov
out
stc
mov
imul
mov
xchg
xchg
jbe
sbb
xchg
cmp
in
sar
cmp
call
cmp
add
dec
pop
and
sbbl
sbb
and
mov
adc
pop
sbb
mov
push
push
nop
push
sbb
dec
fwait
xchg
mov
push
pop
cmpsb
and
cmp
jo
cmp
jmp
cltd
sti
adc
stc
and
xlat
jnp
scas
adc
dec
movsb
std
cmp
sbb
mov
aad
js
lods
imul
pop
mov
adc
add
inc
sbb
das
dec
lods
pop
repnz
bound
stc
or
jg,pn
mov
xor
or
movlps
sbbl
jmp
icebp
aad
mov
sti
cltd
fs
xchg
into
xchg
arpl
stos
enter
fwait
popf
mov
add
inc
pop
jmp
popa
lahf
xchg
orb
and
shll
ret
xlat
rcll
hlt
pop
jecxz
xchg
adc
push
repz
inc
push
lcall
xchg
mov
and
es
jo
std
xor
push
push
mov
dec
sahf
mov
pop
fwait
inc
push
xchg
outsl
sub
mov
data16
push
lret
stos
test
in
inc
cld
inc
xchg
in
mov
inc
xchg
sbb
lods
push
sub
std
mov
jno
xchg
push
lock
pop
pushf
dec
or
push
cmc
xchg
push
jmp
jne
add
adc
stc
jo
call
xchg
imul
and
xchg
decl
pushf
jle
into
fcoms
xchg
and
stos
call
inc
out
push
clc
sub
imul
ds
xorl
sahf
cli
ja
and
andl
xchg
dec
cmpsb
cmp
bound
sarb
mov
push
mov
pop
cmp
test
sub
sbb
push
icebp
mov
cmp
jno
adc
jo
and
fnsave
adc
mov
adc
test
push
fmuls
sub
pop
mov
out
insb
stos
imul
push
xchg
push
nop
push
push
cld
sbb
add
out
mov
or
sbb
or
adc
and
das
jns
int3
push
roll
adc
sub
out
push
pop
sub
mov
shrl
or
xchg
add
mov
fstl
or
shrl
sbb
jl
sbb
fstpl
sub
outsb
cmpsl
dec
out
dec
jg
movsb
jnp
xchg
xchg
lret
pusha
sub
das
dec
aad
push
mov
mov
and
sub
push
lahf
sbb
mov
jmp
lret
jo
std
sub
ljmp
pop
and
inc
or
sub
jge
stc
in
mov
inc
test
int3
lret
scas
call
jno
adc
mov
insb
out
idiv
pop
push
dec
ficoml
jle
jnp
add
xchg
push
sbb
fistpll
imul
sub
jg
adc
psubw
push
mov
hlt
test
dec
sbb
loop
int3
adc
and
xchg
fwait
push
addb
les
je
aas
inc
arpl
in
push
sub
xchg
xor
and
or
mov
arpl
imull
sbb
add
or
mov
jno
sbb
dec
mov
xchg
adc
bound
add
ja
or
pushf
shll
ljmp
sahf
roll
sbb
mov
rcrl
mov
pop
and
jmp
and
dec
es
add
ret
sahf
xchg
jle
sub
test
mov
lock
xor
popf
lcall
fs
fwait
shlb
iret
push
test
insl
mov
jle
pop
mov
in
pushf
int
dec
fsubl
and
push
add
bnd
pop
std
jmp
popf
mov
sbb
pushf
and
push
outsl
adc
jne
and
and
out
cmpsb
out
pop
in
mov
sbb
mov
mov
aas
adc
rcrl
arpl
jb
es
andl
xchg
add
lret
add
sbb
pusha
mov
adc
out
adc
dec
stos
inc
in
rcll
sub
sub
mov
push
cmp
sbb
test
jb
sbb
pop
jle
push
out
adc
lret
mov
pop
adc
divl
test
add
loop
les
sub
decl
and
subl
and
mov
mov
inc
cmp
jle
outsl
jecxz
scas
imul
xchg
lock
dec
xlat
enter
nop
in
sbbl
aam
das
sbb
cmpsb
sbb
movsb
movsl
rclb
lret
inc
push
fcoms
xchg
jmp
js
pop
fs
mov
inc
fcoml
outsl
adc
ret
outsb
lods
and
test
adc
sbbl
test
and
add
cltd
out
adc
mov
push
sub
cmp
and
bound
out
pop
add
mov
and
mov
mov
cmpsl
arpl
push
ss
scas
jp
cmc
and
push
mov
int3
pushf
scas
sbb
xor
jge
stos
movsb
rorl
lea
mov
je
adcl
dec
jns
jo
mov
cld
dec
fwait
sbb
lahf
sub
or
in
cmpsl
add
daa
fnsave
js
jecxz
sub
lret
jge
les
andb
leave
push
je
pop
or
sbb
mov
in
cltd
sbb
cwtl
lock
fwait
inc
sub
ret
dec
pushf
mov
daa
pop
testb
jg
mov
add
stc
push
or
inc
roll
mov
adc
sbb
fdivrp
movsb
popa
fwait
lahf
mov
testb
adc
pop
cmpsl
ret
scas
imul
js
int3
push
pop
add
mov
and
xchg
mov
loop
jecxz
adc
scas
xchg
mov
xchg
test
dec
push
in
je
mov
xchg
push
mov
jmp
aad
sbb
lock
filds
mov
popa
fstl
leave
out
call
push
shll
stc
loope
push
in
dec
jns
push
push
movsb
or
decl
out
addr16
xchg
pop
jmp
pop
pop
xor
push
sar
xchg
sahf
ljmp
mov
mov
sbb
popa
jnp
pop
jne
mov
push
jnp
loop
push
xlat
inc
lret
jge
sub
and
sub
dec
fisttps
inc
and
fwait
ljmp
insb
add
fidivs
fstpl
push
pop
jnp
aam
lea
ja
dec
cmpsb
fisttps
lahf
sbb
imul
mov
call
inc
lahf
lcall
iret
and
xchg
popf
mov
mov
xchg
ret
jle
jmp
sti
enter
and
and
xchg
imul
push
ret
in
std
out
sub
aad
mov
jno
jbe
sub
or
and
arpl
and
loope
aam
pop
adc
sub
jge
insb
pop
and
push
into
inc
fcmovb
imul
and
xor
cmp
test
out
orb
daa
lods
ret
cmp
xor
cmp
jp
int
dec
mov
lret
pop
push
add
mov
fwait
inc
aad
fwait
sbb
dec
loopne
sub
jle
push
sbb
bound
push
push
repnz
jns
add
pop
sub
lcall
sbb
jge
or
mov
lcall
pop
jbe
jnp
test
xor
and
dec
xchg
popf
cwtl
push
push
dec
jp
je
cmpsb
data16
or
sub
add
pop
jne
or
and
cli
inc
pushl
dec
push
mov
sbb
dec
jmp
pushw
and
sub
int3
sbb
mov
mov
jge
fstpt
or
movsb
xchg
sbb
daa
mov
and
ret
inc
push
jne
sbb
mov
not
sbb
lds
xor
iret
sub
cltd
dec
lret
dec
sub
xchg
xlat
int
pop
sub
arpl
popa
sbb
scas
add
or
adc
add
xchg
mov
inc
pushf
cmp
and
lret
movsl
sbb
mov
and
test
call
sbb
sub
and
pop
adc
mov
sub
mov
imul
scas
pop
lcall
xorl
mov
sub
shlb
sub
cmp
outsl
sbbl
shll
mov
insb
rcrl
sbb
jb
cmpsb
add
jbe
test
mov
and
inc
inc
jge
daa
mov
ja
test
pop
jle
jo
into
adc
sub
mov
mov
jnp
int3
mov
sbb
or
pop
or
jg
and
out
stc
adc
add
out
mov
xor
sbb
jo
mov
sbb
mov
out
jmp
cwtl
sub
dec
in
and
js
mov
mov
cwtl
xor
sbb
xchg
xchg
inc
or
push
push
repz
inc
pop
imul
dec
adc
push
negb
pop
loop
in
lea
out
insl
fmuls
ret
fistl
insb
adc
cmpsl
xchg
and
cmp
aad
sbb
andl
and
mov
int3
push
mov
lcall
jecxz
iret
fs
ret
roll
mov
adc
in
inc
cmp
sbb
pushf
mov
repnz
pop
xchg
sub
dec
xchg
cmp
sub
movsl
push
fwait
decl
nop
mov
scas
clc
int
push
sbb
shll
cltd
jmp
sbb
mov
loop
sub
lods
ja
in
pusha
movsl
mov
ljmp
ljmp
add
scas
jp
add
mov
rcl
pushf
popf
or
cmpxchg
cltd
and
test
scas
fwait
lcall
dec
fnstenv
xchg
mov
lcall
ja
and
pop
xchg
pop
add
ret
rcrb
push
adc
sbb
leave
adc
xchg
pop
and
sbb
insb
imul
pop
or
stc
fcompl
cs
in
adc
mov
mov
sahf
or
or
push
stos
fcmovnbe
imul
mov
popa
mov
int3
push
sub
cmp
js
xchg
int3
mov
and
jne
cs
sbb
ja
jle
iret
cmp
inc
inc
out
imul
stos
xchg
sahf
out
sub
sub
clc
mov
popf
push
dec
dec
inc
movsl
mov
sub
jae
in
inc
dec
xchg
and
xor
cmc
popf
aad
adcb
xlat
hlt
sbb
cwtl
sub
jb
xchg
inc
pusha
pop
push
jecxz
dec
into
xchg
push
mov
out
setno
push
mov
pop
lahf
shl
mov
pop
sbb
pop
repnz
and
push
test
cmpsb
loope
mov
cmp
and
bound
push
push
lds
or
xorb
mov
or
into
inc
cmp
sbb
pop
sbb
in
inc
je
adc
adc
imul
jl
in
das
mov
mov
shll
pop
out
pop
xor
es
adc
fsubl
adc
pushf
fistpll
cmpsb
sbb
and
xchg
sbb
inc
push
add
inc
cwtl
ss
cwtl
sbb
and
push
cltd
sti
fisubrs
stos
xor
jle
push
fildll
ret
jg
sub
inc
sub
add
sbb
std
iret
lcall
into
scas
jb
inc
nop
cmp
and
out
xchg
mov
enter
sbb
adc
sti
add
call
sbb
dec
pushaw
pop
adc
mov
insb
orb
stc
dec
mov
movsb
sub
mov
rol
cmpl
dec
xchg
adc
sti
and
sub
ret
adc
and
das
and
shlb
sahf
or
mov
sub
repnz
and
icebp
negl
and
scas
jae
mov
adc
xchg
jmp
mov
push
sbb
jae
cmp
jle
pushf
adc
addr16
enter
pop
imul
or
jle
jecxz
bound
adc
push
sarl
ljmp
and
mov
or
sbb
jne
or
jo
movsl
inc
lret
push
adc
dec
imull
dec
cmc
ljmp
mov
das
sub
aad
adc
mov
int3
jge
adcl
imul
pop
inc
xor
jmp
divl
dec
sbb
sub
xor
sti
test
add
and
enter
mov
cmc
and
sub
sub
je
leave
lcall
ljmp
clc
mov
frstor
fs
and
test
and
icebp
jecxz
into
sbb
jne
push
movsb
inc
int3
stc
rcrl
cltd
je
and
movsl
sbb
and
ja
jecxz
movsl
dec
ljmp
and
rclb
mov
sbb
subb
pushf
mov
dec
je
pushf
push
adc
sti
fsubr
dec
scas
aam
push
roll
lock
inc
mov
out
scas
pop
pop
clc
inc
lea
pop
and
pop
xor
fidivs
lcall
xor
lret
jnp
dec
stc
int3
sub
or
ret
and
and
and
aad
cmpsl
pop
and
add
clc
dec
xchg
mov
fld
out
jmp
scas
mov
mov
ss
adc
in
mov
dec
push
sub
dec
cmp
adc
or
int3
mov
popa
andl
sub
movsb
test
adc
adc
push
loop
adc
sbb
rorb
lcall
insl
mov
jmp
rol
cmp
loop
cmc
and
aam
xchg
sbb
into
fsubl
out
push
sub
or
daa
xchg
and
dec
sbb
mov
in
fwait
xchg
stc
lea
imul
push
cs
xor
lock
mov
jb
xor
fcmovnu
jbe
sub
xchg
add
mov
and
adcb
cwtl
dec
aad
or
lods
xchg
jbe
or
or
sub
lods
call
add
movsl
imul
aad
push
lea
inc
fisttpll
insl
data16
pop
or
popf
rcrl
sub
ds
push
ret
mov
push
mov
push
fldcw
cmp
jns
test
mov
adc
pop
sub
and
sub
mov
sbbb
mov
movsl
ja
cmpsb
jecxz
xor
inc
popa
out
rcrl
call
das
push
push
addr16
inc
push
sub
or
cmp
int3
cld
dec
imul
int3
mov
pushf
sub
jbe
mov
jmp
popf
and
inc
neg
scas
cwtl
mov
out
clc
popf
out
dec
add
pushf
pushf
lods
inc
test
sub
lea
loopne
mov
and
mov
push
ja
mov
sbbb
mov
iret
shrl
clc
push
and
dec
and
mov
lea
sub
outsb
adc
lods
lret
push
imul
or
stos
push
jb
dec
or
inc
push
or
insl
movl
pop
in
cltd
adc
ljmp
push
shl
popa
cmp
dec
push
sub
mov
stc
cltd
and
inc
cmp
adc
mov
jo
push
andl
xchg
scas
cmpl
data16
dec
mov
xor
xchg
or
paddb
mov
adc
add
mov
ljmp
pop
testb
out
cltd
mov
jmp
adc
cmc
pop
and
pop
test
ljmp
pop
ds
push
hlt
and
neg
sub
test
test
int3
popf
push
imul
mov
cmc
sbb
cli
sub
lea
cmpsb
in
jbe
adc
push
dec
push
mov
fwait
fs
sbb
sti
xor
mov
mov
and
cltd
pop
pop
cmc
dec
mov
cmc
cmp
push
add
cmc
loop
adc
xor
loope
sub
mov
push
int
xor
lcall
sub
stos
mov
push
pusha
in
out
xchg
push
out
add
sbb
stos
jg
mov
cmpsl
dec
shll
bound
lcall
xlat
and
mov
enter
popa
jnp
sub
insb
cmc
daa
pushf
subb
or
std
cmp
fdivp
or
adc
in
ja
xchg
sbb
inc
insl
out
and
xor
lea
mov
sub
aam
push
xchg
xchg
pop
int3
dec
mov
mov
sub
shrb
rol
or
cmp
sub
inc
xchg
adc
rolb
repz
cltd
ret
dec
inc
or
push
jle
in
repnz
fwait
lds
ss
sbb
jae
dec
movsb
int3
gs
clc
dec
sbb
ret
mov
adc
loop
mov
or
pop
sbb
mov
cmpsb
pop
sub
mov
es
mov
int3
fwait
das
push
aad
push
test
or
inc
cmp
jbe
mov
jae
out
mov
test
aam
jecxz
adc
dec
cmp
add
adc
adc
sbb
sbb
pop
ljmp
or
push
into
in
repnz
repz
cmp
pop
push
sbb
sub
jns
sub
out
inc
mov
lss
jae
mov
xor
pop
repnz
cmp
fisttpll
sbb
xchg
js
cmpsb
js
pushf
ret
mov
xor
int3
lret
out
xchg
push
dec
lcall
xchg
fstl
jp
xor
fwait
cmpsb
dec
lret
jecxz
sub
std
sub
dec
outsl
push
sub
stc
cmp
mov
dec
pop
push
test
test
dec
adc
popf
fwait
cmp
dec
xlat
push
mov
cltd
sbb
adc
sbb
stos
inc
rol
add
pusha
cltd
sub
outsl
jae
mov
push
jnp
sbb
xlat
dec
or
mov
push
lock
push
popa
lock
sub
adc
push
lds
sbb
push
push
adcl
or
dec
adc
movsb
jo
adc
movsb
out
pop
inc
push
and
adc
test
pop
data16
popf
movsb
scas
push
mov
movsb
push
pusha
xchg
xchg
mov
lea
pop
push
xchg
popa
mov
testb
and
pusha
pop
pop
out
xor
fldenv
or
andb
jns
cmp
imul
clc
fwait
adc
xchg
in
jge
add
xchg
testl
and
push
out
xchg
push
mov
rcrl
sahf
sbb
stos
ljmp
jae
and
dec
cmc
jo
cmp
sbb
data16
sahf
push
add
lret
cmpsl
es
aam
adc
mov
daa
sbb
mov
cld
lds
mov
jle
and
mov
test
push
jne
data16
pop
leave
popf
xchg
repz
pop
and
adc
mov
movsb
jbe
jg
and
dec
les
mov
sahf
mov
or
leave
notb
adc
jo
rcl
dec
add
adcl
inc
and
push
inc
and
repnz
jmp
jns
dec
jg
ret
sub
jl
push
push
stc
shll
jae
daa
cwtl
and
orb
mov
dec
out
fiaddl
and
and
push
notb
or
cwtl
imul
jmp
test
cwtl
shll
cld
in
jp
adc
mov
pop
stos
mov
or
sub
ret
ret
sbb
mov
xchg
jmp
mov
pop
pusha
arpl
inc
sub
movb
lods
sbb
loopne
push
test
cmp
daa
dec
or
sbbl
sbb
or
stos
inc
jmp
mov
push
mov
push
cmp
jns
sbb
cmp
inc
loope
adc
leave
xlat
in
out
mov
scas
cmp
cmp
dec
out
mov
sarb
inc
iret
in
sbb
or
lcall
xor
arpl
jns
ja
dec
mov
shrb
inc
jl
test
or
js
add
dec
lea
sbb
cmp
xsha256
cmpsb
push
inc
popf
and
nop
mov
jp
jb
scas
cmp
push
pusha
push
negb
push
dec
jecxz
sub
pop
jecxz
xchg
jmp
pop
std
addr16
xor
or
fcompl
aad
flds
adc
lret
xchg
cltd
sbbl
push
lea
roll
sub
fstl
add
stos
imul
push
in
xlat
sbb
in
out
es
mov
inc
dec
insl
push
mov
lcall
sbb
fadd
popa
daa
les
sub
add
dec
in
adc
mov
cmpsb
sub
jl
pop
fsubs
cmp
adc
cld
ret
pop
dec
or
imul
and
lcall
lret
adc
pushf
pop
test
arpl
and
into
loope
add
cltd
cld
aaa
stos
loopne
mov
adcl
and
cmpsb
mov
push
hlt
cltd
out
leave
fidivs
and
cli
dec
jns
and
xchg
mov
out
xor
pusha
inc
cli
jne
push
sbb
rcrl
arpl
insb
ret
and
loop
sub
jo
inc
mov
adc
clc
lret
cmc
pop
mov
lods
fs
and
shlb
clc
cmp
and
nop
das
push
cmp
xlat
push
fucomp
paddsb
sbb
adc
out
mov
adc
or
push
push
xchg
and
add
shrl
test
lea
lods
dec
or
ljmp
sarl
push
js
pop
cmp
stos
call
dec
xchg
sbb
and
mov
push
add
mov
xor
stos
or
daa
sub
mov
je
stc
out
loopne
cmpsb
stos
stos
ret
xor
pop
sbb
dec
mov
mov
test
and
push
lea
push
hlt
out
dec
lahf
movsb
mov
in
push
xchg
jns
jnp
cli
dec
iret
popa
shll
out
call
push
push
in
and
dec
or
scas
xchg
movsb
jg
adc
in
mov
xorl
rcll
or
lahf
pushf
movsl
adc
arpl
into
push
cmp
cmp
iret
test
out
mov
scas
pop
mov
rcrb
insb
push
sbb
jb
or
mov
adc
test
adc
rorb
or
lods
jecxz
or
jl
pushf
push
adc
cld
loope
imul
cmp
adc
jnp
rorb
adc
push
jmp
je
jg
or
subl
pusha
mov
xchg
pusha
lock
xchg
mov
push
add
add
add
xchg
scas
sub
adc
push
je
xchg
add
out
jecxz
push
sti
fistpl
out
out
dec
dec
xchg
lea
pop
push
mov
pop
sbb
jne
fwait
cmp
aaa
and
push
and
dec
jno
xor
mov
test
adc
js
mov
ds
sbb
jbe
pushf
out
adc
or
popf
pop
inc
cmp
sbb
xchg
adc
adc
jne
push
jge
in
xor
push
pop
adc
repnz
ljmp
lcall
mov
lea
inc
push
ret
sbb
mov
ja
push
push
nop
push
mov
aaa
dec
sbb
adcl
stos
lods
push
inc
xchg
or
cmp
jnp,pn
out
int
push
inc
push
test
xchg
jp
loop
cmp
sbb
imul
mov
test
shlb
fists
dec
adc
hlt
pop
incl
jmp
push
pop
popa
mov
push
notb
iret
xor
test
outsl
adcb
shrl
mov
add
xlat
fbld
repnz
adc
lea
and
mov
hlt
or
das
mov
mov
cmp
bound
mov
pop
es
push
rcll
shlb
sbb
rcll
adc
mov
pop
subl
mov
sbb
sub
dec
arpl
sbb
inc
sub
inc
xchg
or
xlat
sbb
mov
mov
int
push
push
fwait
lock
sub
sbb
and
adc
sub
stos
out
inc
test
sub
sbbb
push
mov
inc
movsb
jecxz
adc
inc
jmp
test
and
ret
adc
dec
sub
imul
push
add
push
mov
sahf
mov
sbb
scas
sbb
and
sub
js
adc
add
enter
xchg
sub
in
push
test
add
sbb
xor
shlb
xchg
cmpsl
push
lods
fs
add
mov
or
bound
or
xlat
and
iret
dec
adc
fwait
push
push
out
lcall
inc
nop
ret
aad
adc
inc
repz
scas
sbb
enter
pop
or
push
inc
popf
bound
cmpsl
push
jnp
push
xor
dec
and
inc
popa
cmpsl
mov
bound
push
in
jo
and
or
enter
iret
sarl
sbb
arpl
inc
push
sbb
call
cmp
inc
shl
and
sub
xor
cmp
adc
dec
test
sub
mov
int3
and
test
sbb
jo
lcall
dec
mov
add
xor
aaa
out
xchg
and
and
imul
sbb
call
push
inc
sarl
js
pop
push
inc
sbb
xor
outsl
and
sbb
jge
or
and
mov
and
dec
nop
xchg
adc
xchg
inc
sbb
or
mov
stos
and
fldl
adc
adc
xchg
outsb
mov
lods
push
cmc
sub
and
fnsave
xor
mov
sbb
xchg
push
pushf
inc
lds
insb
jo
popf
adc
int3
cmpsl
inc
mov
dec
xlat
jo
ss
or
add
scas
cmp
adc
addl
and
inc
pop
inc
or
jmp
sub
test
adc
push
orl
loope
out
or
adc
jnp
xchg
mov
lret
rcrb
dec
pop
jecxz
insb
jl
mov
or
mov
add
sti
fwait
cwtl
mov
mov
lcall
inc
push
stc
int3
daa
fidivrl
jecxz
pinsrw
xchg
fcomps
sub
lret
xor
sar
mov
loop
mov
stos
or
or
jbe
cmc
jnp
mov
addr16
dec
pushw
ret
push
push
inc
push
icebp
mov
xchg
ret
jns
mov
mov
mov
adc
fwait
jg
xchg
arpl
or
cmc
out
pushf
pushf
adc
xor
call
xor
and
mov
sub
cmpsb
push
push
loopne
add
push
fists
adc
lahf
int3
pop
jo
and
xchg
out
mov
dec
mov
or
cltd
xchg
dec
gs
xor
loop
ret
xchg
push
xor
cltd
push
dec
dec
out
xor
or
jo
int3
sarl
out
adc
dec
arpl
pop
jo
jbe
xchg
arpl
push
adc
add
mov
sbb
pop
sbbb
adc
mov
inc
and
into
cmpsl
dec
add
insb
and
jo
xchg
sub
or
lret
inc
loope
sub
inc
sub
imul
lea
out
mov
movsl
mov
mov
scas
rorl
sub
and
daa
jns
and
mov
rcrl
call
mov
or
stos
mov
cld
ljmp
mov
sbb
ds
mov
mov
dec
fisubrs
fwait
add
mov
arpl
movsl
xor
ja
pop
in
in
popa
int3
insl
jmp
or
imul
stos
mov
inc
pop
sub
mov
xor
cs
aam
repnz
popf
mov
push
mov
ret
out
or
arpl
jecxz
or
adcl
sub
rorb
and
and
pop
adc
lods
ljmp
push
dec
adc
fwait
data16
pop
popf
adc
cmp
pop
mov
imul
xor
pop
mov
add
lret
arpl
sbb
insb
mov
int3
ffree
in
sbb
hlt
lea
rcll
movsl
pop
or
dec
mov
inc
dec
jns
insb
xchg
repz
xchg
insb
dec
stos
mov
inc
fs
push
xchg
int3
push
pop
enter
in
adc
cli
sub
test
arpl
gs
out
cltd
in
scas
and
push
jae
sbbb
fadds
cmpsl
in
add
pop
dec
push
rcrl
std
xlat
ret
mov
or
scas
sbb
jecxz
out
or
mov
int3
ret
fwait
or
xor
imul
imul
push
mov
jmp
sub
repnz
mov
inc
push
sbb
jmp
shlb
inc
add
adc
in
int3
push
imul
add
stos
fsubr
xor
fists
pushf
in
mov
or
add
or
mov
xchg
mov
shlb
sub
pop
cmp
add
and
test
jmp
mov
std
mov
mov
lret
stos
mov
mov
pop
mov
pop
xor
push
xlat
lea
out
push
jbe
lcall
in
add
adc
shlb
sbb
lods
adc
pop
jg
push
add
adc
xchg
or
adc
jae
pop
push
adc
imul
or
into
pop
in
cmp
push
pop
pop
hlt
adcb
sub
or
loop
xchg
seta
push
pop
lds
pop
push
push
mov
popf
scas
add
movsl
push
imul
aaa
mov
lea
imul
ja
dec
mov
pop
mov
add
push
or
out
push
dec
mov
mov
jne
adc
addl
xchg
dec
jp
shll
sub
sub
push
jg
jns
and
pusha
daa
inc
orps
popf
mov
push
pop
mov
mov
pop
test
adc
leave
dec
or
adc
mov
aad
cmpsb
sbbb
push
mov
xchg
xchg
cmp
or
sbb
lret
push
dec
dec
adc
pop
fmull
aas
lds
jbe
adc
rolb
out
jle
xchg
mov
rorl
enter
jmp
cwtl
mov
or
push
mov
cmp
and
ljmp
sub
fdecstp
lea
das
dec
add
sbb
cmp
pop
ljmp
xor
xlat
pushw
mov
and
mov
pop
sub
cmpsb
jecxz
inc
mov
cli
aad
jbe
jbe
loop
out
sbb
xchg
imul
test
push
arpl
xlat
mov
ret
add
push
mov
add
orl
sbb
imul
push
mov
or
daa
insb
pop
add
pop
pushf
jmp
aam
mov
ret
test
in
pop
push
pop
sbb
add
popf
out
arpl
cmpsl
pop
test
dec
outsl
iret
adcb
sub
hlt
adc
xor
mov
inc
adc
out
pop
js
mov
xchg
and
mov
mov
or
out
xchg
inc
jecxz
insb
cmp
fbld
sbb
cmpsb
push
lcall
xor
js
aad
adc
inc
mov
mov
sbb
mov
mov
mov
jg
in
push
cmpsb
and
add
xor
and
xchg
xchg
in
push
test
lcall
jle
scas
insb
mov
nop
xchg
rclb
mov
jmp
or
sbb
bound
adc
fwait
shrl
inc
inc
fldt
xchg
inc
dec
iret
push
adc
mov
mov
jmp
inc
or
pop
mov
sub
cli
mov
add
mov
pxor
mov
push
sbb
mov
and
cmpsl
mov
movl
xchg
adc
xor
adc
lahf
scas
push
or
dec
sahf
mov
icebp
or
nop
mov
insb
inc
fiadds
jb
imul
push
sarl
push
adc
jo
jmp
pushl
in
sub
sub
jno
adc
sub
scas
xor
stc
test
or
ja
sub
mov
add
jno
or
cmp
fnstsw
out
icebp
and
call
out
dec
sub
es
or
push
daa
mov
mov
sbb
insb
mov
mov
cwtl
test
mov
and
stos
jg
dec
push
je
mov
xchg
or
popf
int3
ffreep
jle
dec
aaa
cmpsb
inc
jge
mov
movsl
out
call
outsb
push
sub
xchg
cmpsb
js
xor
stos
mov
mov
sub
ja
mov
mov
mov
xor
bound
mov
cmpsl
leave
dec
dec
mov
adc
std
xor
sbb
inc
lods
inc
inc
shl
adc
movsl
xor
inc
aad
pushf
sub
stos
inc
mov
daa
movsb
sbb
ficomps
xchg
dec
je
ret
jae
imul
xlat
xchg
sub
sahf
xchg
sub
out
sub
push
movsb
fstl
add
out
push
ljmp
aaa
adc
pop
enter
push
cmpsb
cmp
mov
sahf
push
xchg
ljmp
out
mov
adc
loop
test
adc
and
xchg
es
inc
cld
xchg
mov
mov
arpl
and
mov
cmp
dec
rclb
dec
gs
inc
sub
lods
ret
inc
nop
mov
sahf
cmpsb
or
roll
dec
mov
cwtl
sub
jl
lock
adc
fwait
pop
rcl
mov
ljmp
bound
cld
adc
les
or
bound
pop
push
mov
pop
jmp
sub
loopne
add
int3
repnz
sarl
pop
in
mull
sbb
ror
adc
iret
xlat
cmp
rcrl
add
dec
lock
loopne
inc
leave
ret
loope
negb
and
xchg
fdivp
fwait
data16
push
rol
popf
dec
mov
xor
add
and
jo
cli
sbb
mov
xchg
mov
push
fistl
sbb
cmp
sahf
in
sti
ss
ss
mov
je
ljmp
scas
sub
addr16
dec
mov
xchg
jns
jne
into
xchg
out
loop
pusha
fbld
sbb
and
aaa
test
dec
ds
push
arpl
jb
movsb
roll
cmp
fdiv
adc
sbb
xchg
and
mov
ret
test
and
popf
es
push
loop
sub
outsb
mov
lea
je
xchg
mov
jae
and
sti
test
push
cmp
test
push
clc
mov
out
inc
mov
leave
push
mov
cmc
repnz
int3
mov
mov
mov
dec
xchg
cmp
inc
push
dec
mov
movsl
ficoml
adc
out
xor
inc
lcall
and
cld
out
outsb
aad
cmpsb
add
ret
xchg
lret
mov
or
adc
out
pop
repz
cmp
sub
imul
jne
add
cwtl
call
sub
fwait
mov
shlb
fwait
xchg
adc
in
pop
out
pop
stc
fsubl
xchg
mov
popf
dec
scas
sub
out
sbb
jmp
mov
scas
test
inc
dec
mov
sub
shrl
sub
cmp
jle
cmpsl
mov
out
adc
cmpsb
mov
pop
data16
fildll
mov
jg
inc
adc
add
xlat
push
int3
notl
xchg
sti
aad
adc
repz
rcll
or
sbb
push
xor
sti
push
and
and
daa
jnp
mov
fsubl
int3
iret
xor
push
adcb
and
out
in
mov
mov
sub
cmpsb
gs
mov
mov
out
insb
loopne
dec
xchg
adc
out
mov
add
inc
push
add
adc
xchg
bound
mov
leave
int
pop
mov
popf
aad
push
mov
xchg
cmpsl
test
pushf
xchg
lret
orb
rcr
cli
in
push
lea
mov
mov
dec
push
rcr
and
sub
js
cltd
and
pop
and
sub
pop
mov
push
adc
push
inc
ds
push
imul
cmp
cmpsb
and
inc
or
les
movsb
pop
jmp
push
and
dec
push
out
mov
fcoml
mov
sub
call
rcr
xor
imul
push
cld
ret
jns
push
jp
jae
shll
push
and
push
sti
sub
and
sbb
je
loopne
mov
imul
jle
mov
mov
push
fisttps
add
pop
sub
scas
pop
or
adc
pop
inc
pop
adc
adc
cmc
xchg
adc
sbb
outsl
sbb
ss
mov
inc
or
jne
cmp
jnp
xchg
mov
out
cmp
mov
xor
mov
mov
mov
into
into
mov
lret
mov
mov
insb
pop
popa
push
pop
dec
add
sub
cltd
adc
sbb
daa
jg
pop
adc
or
pop
or
stos
in
cwtl
dec
sbb
dec
imul
pop
sbb
dec
or
ds
sahf
dec
pushf
js
and
mov
lea
imul
aam
and
mov
lea
lret
pop
imul
stos
jl
jecxz
and
sbb
clc
aam
lea
in
or
nop
movsl
std
and
cmp
xor
inc
cmp
sub
push
fbld
cmp
in
in
sti
test
jmp
adc
arpl
cmc
cmp
outsl
and
mov
sub
inc
popf
push
fisubl
sahf
out
out
jl
jnp
ljmp
or
fldenv
rorl
adc
pop
adc
sahf
popf
mov
jp
outsb
mov
data16
fcompl
jo
inc
and
out
std
xchg
andb
mov
std
test
or
and
push
push
mov
xchg
pop
test
int
sub
mov
push
add
mov
xchg
mov
cmpsl
mov
lods
adc
adc
jl
jns
imul
xchg
sub
pushf
pop
sbb
and
mov
or
daa
add
lret
push
adc
and
sub
xor
inc
lret
outsl
in
adc
mov
push
pop
lret
push
or
push
testl
or
xor
cmpsb
lahf
out
adc
daa
int
ljmp
add
andl
sub
sub
cmp
and
jnp
rcrl
arpl
jne
inc
push
push
adc
mov
call
or
fsubrl
jae
sub
aaa
fimuls
rcrl
ret
ljmp
cmc
fcompl
push
push
add
inc
out
aam
push
adc
and
xor
idiv
hlt
pop
jecxz
and
std
in
sub
cltd
jb
dec
cwtl
dec
mov
lea
js
adc
sub
mov
xorl
scas
int
jg
popf
mov
std
and
loope
cmp
mov
jmp
mov
mov
sbb
outsl
jle
or
pop
aam
adc
and
or
push
int3
xchg
xchg
adc
xchg
in
sbb
scas
xchg
add
mov
sub
mov
movsl
popf
daa
aad
or
push
push
add
mov
out
xchg
jno
cltd
push
pop
stos
cwtl
push
xor
sbb
sub
fimull
or
cmp
sub
mov
mov
sub
or
rorl
mov
scas
xchg
add
lods
test
sbb
cmp
dec
pop
dec
inc
xchg
bound
fwait
lret
sub
mov
dec
push
xor
in
gs
addr16
in
test
add
mov
test
adc
sub
int3
adc
and
mov
sbb
ss
fwait
dec
sub
mov
push
pop
mov
push
or
adc
aam
cmp
cwtl
add
xchg
cmp
fmulp
mov
mov
sub
ja
mov
and
mov
sbb
and
and
stc
xchg
dec
or
xchg
sbb
jl
pop
movsl
jne
sbb
out
ret
or
push
pop
sub
pop
jle
pop
adcl
dec
or
es
out
mov
adc
stos
sarb
cmp
sbb
lahf
popa
fstps
scas
addr16
ret
icebp
out
lahf
lahf
pop
mov
jb
popa
ret
mov
dec
jmp
icebp
mov
lahf
dec
mov
and
xchg
pusha
es
popf
adc
fwait
sbb
mov
cmp
mov
ret
lahf
test
adc
imul
jecxz
in
clc
mov
dec
addr16
add
arpl
aad
adc
jecxz
xrelease
xchg
push
cld
xor
add
jp
shll
and
push
inc
jecxz
rorl
adc
pop
sbb
rcl
cmpsl
or
iret
mov
jnp
out
pop
add
and
and
int
sub
es
push
mov
in
aam
and
xchg
into
rcll
and
call
pop
out
push
adc
xchg
fwait
data16
mov
inc
mulb
dec
mov
gs
andl
lock
sub
and
sub
loope
or
adc
les
dec
stos
outsl
sbb
mov
aaa
adc
jg
jmp
add
cltd
jmp
pushf
or
pop
add
and
or
mov
xchg
sti
dec
stos
test
push
insb
adcl
xor
imul
enter
or
ret
jae
daa
push
cmpl
and
sbb
inc
shlb
mov
js
mov
jns
cltd
aad
xchg
in
fs
lock
adc
ljmp
dec
adc
orb
addr16
stos
push
test
adc
push
mov
push
test
je
stos
std
add
sub
adc
mov
cltd
xchg
push
pop
push
and
mov
xchg
xchg
sbb
daa
notl
sbb
mov
sbb
adc
xor
jl
lahf
daa
mov
movsl
sub
mov
mov
pop
mov
in
jmp
mov
leave
or
ficoms
adc
jnp
scas
push
lcall
dec
cld
jmp
add
sbb
fsincos
and
dec
dec
movsl
jbe
in
cmpsb
or
mov
mov
and
sbb
adc
stos
aas
pushf
les
fs
int
outsb
repz
mov
add
xor
je
movsb
xchg
push
lcall
adc
or
xor
dec
andb
dec
adc
adc
bound
loopne
or
or
xor
loope
lcall
mov
rcr
pusha
or
dec
je
sbb
and
cmpsb
ret
pop
add
and
push
sbb
jg
inc
mov
enter
mov
out
fimull
addb
push
xor
cmp
repz
or
ja
jmp
adc
ret
sbb
or
pop
cmp
es
jmp
and
jge
sbb
or
add
sub
movsb
fwait
dec
pop
inc
xchg
insb
xchg
fwait
es
sub
movsl
out
push
or
xchg
cmp
dec
maxps
shll
sub
sbb
imul
xlat
mov
mov
out
sbb
and
sti
jge
inc
jae
jle
mov
mov
dec
cld
push
in
push
leave
mov
sahf
push
aad
or
push
add
lahf
adc
call
ret
sub
stos
jge
sub
aam
imul
fwait
adc
push
cli
inc
dec
dec
push
xchg
xchg
adc
sbb
mov
fwait
cwtl
leave
push
jl
sahf
mov
lcall
mov
sbb
in
lcall
dec
int
add
js
adc
xchg
out
int
push
sbb
adc
out
sub
inc
and
xchg
xor
addr16
jne
push
test
outsb
sub
jp
xchg
xchg
andb
xchg
fbld
jnp
pop
mov
lods
cmovg
das
and
popf
adc
subb
movsb
xlat
mov
pop
xchg
aam
push
add
inc
clc
fwait
add
lock
out
imul
sbb
xlat
cmp
cmpsb
push
orb
ret
adc
cmpsb
stc
in
mov
push
mov
cld
outsl
xchg
sahf
inc
testb
dec
and
rolb
jp
ss
aam
rolb
cmp
ljmp
mov
mov
imul
nop
data16
sbb
jge
out
mov
add
dec
jg
push
sub
es
adc
xchg
mov
sub
cmp
adc
xchg
aas
fucomip
cmp
movsl
out
or
addr16
jmp
loop
inc
sbb
nop
xorb
push
jl
xchg
cmp
adcb
ret
aas
push
sub
and
aad
jbe
adc
lret
push
sub
push
or
push
roll
lds
insb
mov
and
cld
dec
out
push
jmp
icebp
movsl
int
mov
push
sbb
jle
fisttpl
scas
push
dec
pushf
bound
call
shl
dec
aas
push
ret
notb
insb
out
xchg
jae
or
inc
add
sbb
daa
imul
arpl
sub
or
xchg
int3
scas
adc
pushf
xchg
clc
enter
sbb
mov
loope
sbb
dec
jmp
dec
cmp
jmp
mov
adc
shll
push
push
jmp
stc
iret
cwtl
add
or
dec
xchg
mov
adc
fsubl
and
or
push
ljmp
shlb
jmp
fistpl
pop
mov
pop
sbb
dec
add
or
cmc
mov
stc
cmpsb
and
push
xor
in
lret
push
pop
lods
ret
out
cmpsb
mov
and
leave
cmp
aad
adc
xchg
adc
mov
cmp
pop
inc
lret
pop
xor
mov
orl
ret
inc
cld
rcrb
push
pop
or
neg
adc
add
imul
ret
mov
add
mov
inc
pop
push
sbb
xchg
xchg
movsl
xchg
xchg
pusha
sbb
into
insl
daa
out
mov
dec
mov
pushl
cld
or
sbb
xlat
in
jmp
dec
sarb
stc
dec
cmc
mov
adc
push
sbb
and
cltd
jno
out
sbb
lods
mov
dec
push
daa
movsl
inc
lods
xchg
push
imul
dec
out
adc
mov
dec
outsb
jae
imul
and
fldt
lahf
test
inc
sub
push
fisttpl
fs
mov
lcall
cmp
add
push
adc
adc
call
adc
pop
pop
dec
leave
xchg
ljmp
ret
int3
inc
in
adc
push
mov
and
sbb
xchg
hlt
cmpsl
repnz
jecxz
test
inc
or
or
adc
xor
cmpsl
push
xchg
adc
mov
shrb
and
ret
push
jb
es
adc
inc
data16
mov
adc
or
orb
mov
adc
daa
in
sbb
inc
xchg
xchg
xorb
pop
loope
mov
sbb
cmc
mov
mov
adc
or
inc
lea
cmp
out
inc
inc
or
cwtl
int
dec
xchg
push
and
mov
enter
mov
push
dec
rcll
hlt
sbb
or
loop
xchg
jmp
add
insb
sahf
test
mov
pop
pop
adc
stos
mov
mov
aas
mov
sti
inc
push
sbb
fwait
jp
and
clc
and
ljmp
jecxz
push
and
jae
imul
and
sbbl
add
mov
adc
xchg
rclb
adc
fdivl
fwait
xchg
inc
mov
addr16
pop
repnz
adc
sbb
push
and
or
stc
push
sub
ja
xor
lcall
mov
les
adc
mov
xchg
sbb
sub
call
gs
arpl
sbb
movsb
scas
and
rorl
out
pop
inc
dec
cmpsl
sbb
das
aam
mov
arpl
push
xchg
adc
dec
pop
jne
sbb
jle
cld
pop
push
ja
mov
and
icebp
movsl
push
leave
xor
pop
inc
sub
xor
mov
lds
push
or
push
nop
inc
pop
or
loopne
shll
mov
push
sbb
mov
ljmp
pop
adc
scas
xlat
adc
xchg
xchg
jecxz
mov
sub
xchg
or
icebp
or
jle
sub
jb
popf
popa
push
lods
ds
pop
decl
mov
int3
inc
pop
sbb
jge
out
popf
jne
push
lret
shl
cltd
or
aad
cmc
sbbl
xor
jecxz
adc
push
popa
cmc
adc
fisubs
inc
mov
sub
xor
push
ss
loope
sbb
cmp
int3
mov
cmpsl
inc
mov
out
xchg
jecxz
xchg
mov
std
or
inc
lock
imul
push
stc
inc
pop
aam
pop
ja
movsb
das
pop
xor
icebp
arpl
cmpsb
into
sbb
and
int
jae
lock
icebp
dec
xchg
stc
or
mov
sub
xor
or
fwait
cld
scas
mov
xor
aad
out
mov
lcall
stos
cld
add
addr16
popf
mov
frstpm(287
aad
adc
pop
mov
rcrb
in
jg
or
je
push
and
push
fmull
add
push
pop
lods
std
cmp
loop
pop
int3
adc
adc
test
orl
xchg
adc
xchg
xor
dec
mov
or
xchg
sbb
lods
adc
push
cld
add
pop
repz
add
sub
loopne
jne
xor
or
and
sub
mov
add
fwait
xchg
stc
aaa
push
push
mov
push
mov
cmp
ljmp
mov
sahf
cmpsb
repnz
sub
outsl
xchg
int3
aad
push
movb
xor
add
dec
mov
and
or
push
mov
cmp
cmp
mull
test
adc
std
inc
sbb
lods
mov
cld
pop
xchg
mov
repnz
xchg
adc
imul
in
jle
add
pop
roll
inc
mov
mov
mov
adc
outsb
test
push
mov
xor
enter
mov
adc
and
jle
sbb
loop
adc
jnp
mov
adc
push
jg
push
nop
jecxz
cmc
mov
sbb
cli
bound
dec
fsubs
mov
xor
mov
or
sub
xchg
xor
sbb
sub
int3
or
mov
mov
sub
jnp
inc
xchg
pop
xchg
jbe
pop
les
nop
sbb
les
insl
xchg
mov
inc
pop
sbb
inc
dec
out
dec
sar
outsb
fstps
pushf
xchg
shr
jecxz
sub
adc
movsl
xchg
and
stc
fwait
nop
stos
cmc
inc
outsl
rcll
sub
jmp
setno
xchg
sub
stos
outsl
shl
movsb
jg
mov
and
aas
stos
cmc
inc
xor
xchg
loope
xchg
orl
inc
pop
lods
dec
out
and
cmpsl
jns,pt
ret
daa
or
xchg
push
xchg
xchg
in
mov
sbb
or
jle
fiaddl
pop
jg
or
or
pop
cmp
bound
aad
cmp
js
lcall
dec
ds
add
jecxz
or
ljmp
add
nop
fwait
lea
test
test
jmp
cmc
push
push
sti
mov
daa
mov
and
add
call
cmpsb
cwtl
dec
aam
mov
and
dec
cmpsl
pop
into
fwait
rol
jnp
aam
cltd
dec
add
push
mov
jmp
sub
sub
ds
pop
or
fcompl
ja
adc
and
xchg
dec
dec
movsb
mov
ret
cltd
dec
std
popa
insb
xor
jle
cmp
fisubs
shll
js
data16
or
std
sbb
xchg
sbb
push
lea
imul
daa
lea
and
lahf
or
add
pop
movsl
inc
fldl
sbb
pop
movsl
sub
cli
sbb
shrl
adc
xor
push
pusha
test
in
and
sbb
inc
aam
je
or
mov
push
lret
and
mov
mov
xchg
mov
push
and
pop
pop
push
aad
bound
gs
inc
adc
add
and
sub
cltd
mov
push
mov
lret
ret
mov
fcoms
mov
xor
pop
in
cmp
mov
and
cmp
pusha
std
repnz
dec
fsubr
push
push
pop
jnp
bswap
mull
mov
stos
inc
aas
push
mov
outsb
stos
roll
enter
lock
inc
dec
stos
inc
lret
adc
dec
push
add
and
jno
pop
cmpsl
test
mov
mov
mov
mov
inc
sbb
inc
stos
cli
ljmp
mov
push
adc
inc
xchg
mov
fs
sbbb
es
in
push
push
inc
shll
sub
aaa
and
mov
sub
jg
sub
enter
inc
mov
or
daa
cmp
push
ret
mov
xor
fs
repnz
lret
dec
inc
cmp
mov
adc
jb
sbb
insb
add
adc
loope
cmp
mov
daa
aaa
ljmp
ret
aas
or
jg
and
bound
daa
pusha
pop
lds
push
pop
loope
cmpsl
or
or
cltd
or
xchg
arpl
lcall
add
loop
dec
push
movsl
fcmovu
pop
cmp
stos
jl
popfw
ljmp
xor
ret
jmp
dec
and
ror
lret
inc
inc
xchg
sbb
mov
and
es
and
fwait
movsb
ja
add
jl
mov
sbb
lods
pop
data16
fnstcw
pushf
sbb
mov
dec
adc
add
test
add
call
data16
cmp
mov
cmp
lahf
aaa
push
add
xchg
gs
push
adc
ljmp
insl
daa
xchg
dec
mov
and
out
nop
push
aad
push
push
repnz
jecxz
cmp
sbb
xor
pop
movsb
inc
push
pop
in
mov
cld
sbb
js
pushl
inc
daa
xchg
sbb
jae
in
shrl
or
flds
cmp
sbbb
mov
lcall
sbb
mov
cli
negl
cmp
xchg
sub
mov
lcall
std
and
jns
push
or
mov
loop
jo
mov
jmp
sbb
mov
push
mov
adc
sarl
cld
or
lock
push
pop
lea
icebp
cmpsl
dec
dec
and
add
lods
mov
hlt
xchg
adc
je
shll
cmp
fcoms
sbb
lds
pop
scas
clc
gs
out
sub
pop
mov
outsb
or
adc
out
rcrl
and
into
ret
and
sahf
sbb
add
dec
adc
xchg
push
cmp
lock
push
outsb
mov
mov
add
clc
popf
adc
lea
push
outsl
lret
bound
sbb
xor
adc
xor
and
adcl
cmp
shl
jmp
adc
fs
or
out
mov
lcall
aas
add
jge
push
and
jbe
fucom
push
in
orb
dec
sbb
mov
mov
inc
dec
push
decl
mov
outsb
dec
cld
mov
cmp
pusha
movsl
sub
or
jl
cmpsb
inc
sub
sbb
sbb
sub
adc
cwtl
das
pop
xchg
xchg
push
jb
or
mov
dec
pop
sbb
pop
mov
pop
xor
adc
inc
dec
rcl
dec
outsb
mov
sub
xlat
es
push
out
cld
cmp
inc
push
cld
mov
jl
or
nop
jae,pn
sbb
in
cmp
filds
cmp
inc
sbb
stos
leave
sbb
xchg
jg
nop
jb
jmp
mov
test
xor
jbe
imul
inc
jno
pop
out
aad
jecxz
pop
rorl
outsb
mov
mov
stc
aad
and
mov
sub
pop
arpl
and
mov
mov
mov
add
sahf
push
in
jo
or
push
movsl
sub
or
mov
push
sbb
int3
sti
xor
sub
je
lcall
sub
negl
loope
adc
push
pop
xchg
sub
cmp
push
out
cmp
nop
or
outsl
pop
lea
or
add
mov
cwtl
or
mov
push
dec
aaa
mov
pop
inc
sbb
inc
mov
inc
dec
in
push
dec
adc
lock
stc
sub
or
adc
imul
sub
hlt
or
int3
scas
jle
sbb
repz
jnp
mov
test
lods
sub
aad
cmc
fcoml
out
mov
sub
mov
mov
mov
in
sbbl
mov
jno
adc
imul
cmpsl
sbb
imul
jmp
paddsb
in
mov
hlt
pop
icebp
push
or
sbb
sbb
or
and
les
sub
adcb
jne
or
adc
movsb
inc
fs
sbb
push
stos
cmpsb
into
pop
inc
movsl
push
pop
shlb
jecxz
pop
pop
movswl
dec
cmp
bound
mov
sbb
dec
out
or
mov
jb
nop
sub
xor
out
pop
bound
mov
xchg
sub
popa
push
mov
mov
xchg
inc
sbb
push
sbb
and
aad
and
ror
pop
adc
sbb
pop
or
jp
fisttpll
and
pop
cmp
inc
and
loopne
pop
idiv
mov
push
dec
and
icebp
cltd
dec
or
jmp
cmp
fistl
cs
orl
cmp
jo
ljmp
popf
sbb
aas
loope
or
sar
andb
out
out
pusha
lock
mov
jns
mov
xchg
pushf
push
sub
daa
sub
inc
xchg
xchg
dec
mov
sti
adc
push
aaa
sub
mov
dec
test
cmpl
les
test
cmpsb
cs
lcall
cmp
add
xchg
cwtl
xorb
or
ret
sbb
xor
out
push
xchg
into
mov
lods
xadd
fistpll
lds
dec
out
and
xchg
dec
jmp
inc
push
lahf
and
negb
es
iret
adc
sti
inc
stos
dec
mov
sar
in
std
xchg
xchg
push
pusha
movsl
or
out
test
loope
ds
pop
pusha
xchg
bound
mov
dec
adc
adcl
or
int3
rorl
mov
and
pop
cmc
ret
jnp
lods
mov
movsl
xchg
adc
test
sub
add
in
and
or
add
adc
mov
sub
andl
pop
and
inc
loop
loope
xchg
out
push
xchg
leave
pop
out
int3
add
aam
fwait
mov
data16
sbbb
pushf
repnz
movsb
sub
mov
cmp
xchg
sub
xor
out
mov
mov
sub
aas
sub
and
and
in
xchg
dec
xchg
test
or
addr16
mov
insb
imul
rcll
jnp
in
imul
imul
sti
cmpsl
aad
push
dec
push
inc
mov
xchg
popf
mov
data16
pushf
mov
out
inc
pushf
inc
xchg
sbb
mov
lea
and
sub
sbb
or
ret
mov
fisttps
out
addr16
fsubl
fwait
adc
and
inc
sbb
scas
push
lret
xchg
or
inc
push
and
sub
fsubl
ret
mov
or
aad
xchg
mov
cmpsl
imul
call
das
arpl
sub
jl
incl
test
adc
adc
fsubs
roll
adc
jecxz
mov
cmp
push
sbb
and
add
dec
test
imul
xchg
loope
or
dec
dec
iret
cmp
sbb
stos
xchg
sub
jb
adc
push
sbb
pop
shrl
mov
push
psadbw
cltd
or
cmpl
sbb
les
jae
jle
sub
xchg
lahf
xchg
push
shl
sub
cli
mov
lea
leave
dec
lcall
xor
scas
ljmp
leave
sub
fsub
or
xchg
dec
insb
daa
jnp
sub
insb
add
pop
jae
lahf
and
inc
scas
popa
mov
cli
mov
mov
cmp
loop
test
sbb
fbld
int3
or
es
movsb
inc
mov
mov
test
mov
mov
fildl
mov
xchg
jb
shll
and
sub
and
mov
dec
and
loop
out
sub
outsb
cwtl
mov
xor
in
sbb
mov
cltd
adc
push
adc
clc
or
dec
shlb
mov
push
clc
push
inc
rol
nop
in
movsl
fiadds
es
scas
lea
scas
cwtl
cld
test
push
mov
jns
in
or
in
jg
popl
and
outsl
fnsave
andl
stos
jl
mov
movsl
lret
push
mov
popf
and
mov
or
mov
adc
mov
bound
push
faddl
jo
sbb
xchg
mov
pop
out
and
inc
cmp
xchg
adc
mov
outsl
or
inc
mov
adc
jo
js
sbb
lahf
test
ret
mov
xor
inc
pop
push
jne
mov
in
adc
inc
and
out
ja
dec
dec
ret
dec
pop
push
adc
cmc
inc
sbbl
adc
fistl
popa
inc
popf
dec
adc
push
jno
mov
adc
jp
adc
mov
xchg
pop
jae
sbb
push
pop
xchg
pop
dec
mov
loope
or
fbld
and
dec
jecxz
pop
xchg
lret
arpl
xchg
divl
cmp
imul
sub
popf
adc
scas
xchg
arpl
int3
push
into
push
call
adc
in
repz
lret
or
sbb
add
or
inc
sub
ss
stc
adc
clc
jo
jne
adc
inc
push
iret
xchg
mov
test
sub
jnp
aad
scas
xor
or
dec
out
int3
gs
int3
xchg
jne
pop
push
es
arpl
cmp
stc
inc
mov
sub
pop
add
adc
sbb
fwait
mov
jnp
popf
loop
sub
in
into
imul
add
inc
or
daa
and
xchg
sub
cmp
and
pushf
icebp
cmp
out
sub
inc
mov
pusha
push
xchg
inc
or
xchg
jle
or
mov
and
push
adc
mov
pusha
test
aam
cmc
dec
cmpsb
xchg
xor
mov
mov
add
push
outsl
sub
push
out
xchg
sarl
clc
sbb
add
and
mov
repz
sub
sbb
sub
sub
cmc
lods
shl
xchg
pusha
xchg
sub
enter
aas
test
mov
pop
adc
adc
and
fnstsw
fcom
fiaddl
adc
shr
ret
jl
mov
sti
roll
popw
or
mov
jb
jnp
fsubrl
adc
xchg
mov
adc
je
sbb
pop
leave
mov
cmp
xchg
add
sarl
cmp
xchg
adc
inc
pop
xlat
push
popa
push
pop
cmp
and
sbb
mov
call
pop
jno
cmp
fimuls
and
adc
stc
psraw
pop
sbb
mov
adc
aad
fs
jl
cli
adc
jle
sub
mov
ror
jnp
out
fucomip
push
out
push
sbb
stos
fcoms
mov
and
push
mov
rclb
mov
pop
adc
cmp
sbb
sbb
pop
leave
xchg
mov
push
lret
push
sub
xor
sub
pop
stos
rorl
idiv
or
aaa
lcall
push
mulb
mov
xchg
xor
add
cwtl
and
shrb
cmp
adc
mov
pop
push
xor
or
scas
adc
cmp
push
scas
imul
xor
bound
xchg
lds
jns
sbb
push
ret
sbb
push
mov
or
adc
in
pop
popf
xchg
inc
pop
pop
adc
faddl
dec
cmpsl
cld
mov
sahf
mov
in
push
mov
lret
or
xchg
in
ss
and
imulb
adc
sbb
fiaddl
loop
mov
sahf
scas
push
push
movsb
sbb
sbb
xor
and
sbb
jnp
xrelease
fistl
cmp
sub
pop
push
adc
mov
sbb
divl
sub
sti
add
fwait
int3
lahf
out
inc
sbb
xchg
xor
lcall
jmp
xchg
xchg
adc
mov
jnp
js
ja
nop
sub
lcall
push
inc
inc
and
ret
popf
nop
repz
ljmp
test
and
ret
test
movsl
sti
jl
out
aas
adc
sbb
adc
pop
fbld
adc
and
xor
cmp
int
bound
sbb
mov
fisubs
mov
mov
jecxz
in
mov
and
sbb
mov
pop
sub
adc
pop
ror
outsb
xchg
lcall
cmp
fwait
mov
mov
pusha
sbb
or
js
mov
sahf
jge
das
mov
mov
mov
xor
sbb
xchg
jnp
imul
imul
cltd
iret
and
cld
int3
jnp
adc
std
daa
inc
mov
pop
xor
add
xchg
nop
xor
adc
enter
in
add
and
lea
adc
sbb
push
outsb
dec
dec
loop
or
xlat
xchg
xchg
js
std
fstps
mov
jb
loope
cwtl
and
call
std
adc
fisubrs
inc
cmp
pop
pop
xchg
mov
dec
pop
or
cmpsl
inc
xor
movsb
insl
sub
pop
mov
push
adcb
lods
hlt
imulb
lea
push
cmpsb
dec
ja
inc
rolb
dec
andb
fs
xchg
das
sbb
and
out
dec
xchg
mov
popf
xchg
in
push
outsb
mov
xchg
std
mov
mov
mov
insb
dec
es
mov
out
js
outsb
mov
cmpsb
xchg
or
in
imul
and
push
gs
nop
out
sub
push
pushf
sub
shrl
adc
or
xor
mov
sbb
fwait
xchg
stos
dec
mov
orl
add
ret
pusha
fwait
sub
adc
cli
cwtl
jno
mov
fimull
mov
popf
cmpsb
das
repz
adc
sti
andl
cmpsl
test
sub
aas
sbb
mov
xchg
or
movsb
mov
cmp
xor
and
das
pop
bound
sbb
fs
adc
push
mov
sahf
and
xor
add
mov
inc
xchg
icebp
pop
mov
adc
cmc
and
dec
cli
xchg
ljmp
inc
push
inc
loope,pt
xor
lcall
xchg
les
fiaddl
mov
test
jno
and
pop
sbb
inc
sbb
mov
pusha
sub
pop
and
es
sbb
mov
sbb
dec
ss
jle
jl
sub
inc
insb
dec
push
xchg
lahf
and
sub
js
mov
or
jne
sub
mull
cmp
dec
mov
xchg
sub
stos
add
push
adc
enter
ja
sbb
lods
jecxz
lcall
popf
inc
xchg
sbb
mov
ret
mov
pop
or
xchg
sbb
popa
push
inc
sbb
cmc
imul
sbb
add
pop
push
clc
and
fistps
frstor
in
mov
out
jne
mov
in
xchg
ds
mov
fwait
push
je
sub
daa
lcall
int3
daa
dec
push
popa
sbb
xor
or
cld
insb
fmul
jg
lsl
ss
in
popa
mov
sbb
pop
push
mov
in
sbb
sti
sbb
push
dec
and
mov
je
roll
repz
mov
fs
xchg
inc
push
lret
adc
dec
xchg
lea
insb
add
add
mov
and
sub
pop
mov
lods
mov
sahf
sub
std
xor
out
imul
dec
cltd
and
js
sub
lods
bound
inc
dec
push
adc
les
xchg
mov
jg
pop
ret
dec
jb
push
pop
cmp
inc
push
sbb
pop
das
add
lret
jae
push
mov
mov
fnstcw
pop
sub
popf
and
pcmpeqw
mov
and
sbb
push
fwait
pop
pop
or
je
mov
test
stc
iret
jns
mov
xchg
mov
jge
fwait
jp
jmp
aaa
lea
or
popa
dec
xchg
cld
dec
mov
shlb
sbb
in
into
cmp
xchg
sub
xchg
orl
add
push
sbb
dec
or
push
fwait
je
sub
repz
fcom
mov
movsb
aad
dec
test
cld
das
pop
push
in
and
jnp
xchg
sbb
or
cltd
push
mov
cmp
aaa
add
iret
mov
push
cmp
lcall
stc
push
mov
or
xor
pop
call
xor
pushf
in
push
dec
mov
shlb
jnp
and
ret
dec
sub
lcall
jmp
adc
cmp
addr16
sbb
add
xchg
xor
sbb
adc
leave
xchg
and
dec
dec
out
aas
and
sbb
test
sahf
pop
sbb
inc
pop
jae
ret
or
dec
outsb
stos
add
icebp
fsubl
repnz
or
mov
xchg
sbb
pop
imul
test
sbb
jo
mov
push
mov
xchg
fcoms
leave
inc
or
add
dec
dec
and
cwtl
out
outsl
hlt
inc
pushf
jp
outsb
jl
mov
xchg
inc
mov
pop
push
sbb
cs
subl
sbb
imul
and
and
xchg
mov
pushf
jg
mov
ret
sub
mov
push
loope
out
ds
stos
jns
dec
mov
ret
movups
mov
push
ret
or
fs
les
add
push
insb
sub
int
add
or
adcl
mov
sub
mov
sarb
int3
sbb
mov
sbb
hlt
sbb
sub
lea
push
cmpsl
jle
lret
leave
push
sbb
push
xchg
daa
repz
subb
pop
lds
cltd
sbb
push
sbb
mov
push
jl
imul
xchg
ret
out
push
fidivl
mov
dec
cmp
push
clc
imul
sub
mov
push
or
add
mov
adc
push
and
fistpl
jnp
sub
sbb
xor
sbb
mov
xor
fwait
push
leave
sbb
mov
movsb
mov
ud2
out
in
in
and
movsl
out
sub
cmp
cld
xlat
push
jmp
les
push
and
inc
mov
in
loope
out
insb
stos
adc
xchg
and
xor
dec
movsb
inc
pop
jecxz
push
mov
inc
sub
test
sub
and
pop
cmc
pop
xlat
popf
or
or
adc
cmpsb
addr16
pushf
push
push
jbe
push
xor
loop
mov
xchg
and
mov
or
sti
fimull
and
xchg
mov
add
pop
lcall
dec
cmpsl
je
addr16
push
xchg
push
pop
aam
imul
cmp
jmp
inc
mov
call
sti
aad
adc
mov
aaa
pop
dec
xor
jo
adc
clc
push
das
std
scas
mov
lcall
push
dec
popa
lret
pop
xchg
add
xchg
fistpl
int3
fwait
mov
push
std
mov
repz
loope
lea
sub
push
es
out
cmp
add
mov
mov
les
sub
xor
int3
and
fwait
pop
out
and
adc
inc
or
or
mov
sbb
add
shl
push
mov
aam
fbld
subb
in
lcall
adc
mov
mov
mov
fs
filds
and
sbb
push
mov
sub
femms
sbb
and
push
in
outsl
pop
adc
xlat
xor
and
inc
imul
repz
xchg
ja
imul
jge
inc
or
mov
dec
sti
adc
insb
xchg
adc
sub
xchg
roll
sub
push
int3
dec
out
imul
lods
mov
punpckhdq
ja
adc
shll
clc
rclb
dec
sbb
sub
sub
mov
add
pop
js,pn
ss
fadd
xor
fcomps
adc
push
pop
inc
clc
sub
rclb
insb
test
push
jae
lea
aad
mov
pop
mov
xor
mov
lahf
test
adc
jne
mov
imul
fisttps
add
outsb
mov
and
cmp
int
mov
xchg
sbb
test
xchg
shll
scas
inc
insb
aam
setno
push
clc
adc
adc
and
add
cmpsl
and
sub
lea
dec
fwait
or
mov
and
sub
scas
xor
cld
stc
pushf
or
jns
repz
movsl
jnp
test
std
jecxz
xchg
mov
mov
add
ds
mov
mov
push
imul
sbb
add
inc
mov
cwtl
dec
dec
sbb
daa
push
cmp
and
xchg
shll
loopne
cltd
cmovbe
push
lcall
cmp
sub
loopne
xchg
inc
or
inc
je
mov
sbb
movsb
pop
sbb
mov
pushf
clc
mov
scas
sbb
cld
adc
xor
movsb
jbe
xchg
adc
push
adc
pop
xchg
adc
xor
hlt
jmp
movsb
sub
loop
push
inc
sub
or
int3
adc
and
cltd
or
fidivrl
sub
dec
fcomps
mov
cmc
push
adc
mov
cwtl
mov
push
xlat
insb
mov
xchg
ljmp
jecxz
push
sbb
cld
lcall
pop
lret
mov
outsb
jmp
xchg
stos
xchg
add
icebp
movsl
sahf
pop
dec
aaa
mov
mov
ret
lea
dec
push
fsts
hlt
jae
es
insb
sbb
outsl
int
rol
fsubl
imul
sbb
sub
pop
sahf
enter
fwait
ds
imul
lret
jmp
mov
sbb
jb
or
decb
xchg
ds
inc
sbb
and
jae
std
sbb
cmp
sub
daa
subl
rcrl
insb
dec
adc
repz
and
out
add
xchg
lret
ret
fwait
or
repz
mov
and
adc
add
jae
xchg
xchg
cmpsl
sbb
dec
iret
sub
sub
and
sbb
xchg
mov
cmpsb
les
mov
imul
inc
daa
push
stos
arpl
movsb
imul
push
or
and
mov
add
xchg
ja
and
sbb
push
push
cmp
sub
aas
aam
mov
pusha
gs
fisubl
and
fsubr
stos
es
mov
sbb
and
shr
push
daa
hlt
ret
push
sbb
mov
insb
ficoms
dec
stos
mov
dec
jbe
adc
data16
cmp
dec
insl
mov
lcall
es
pushf
xor
mov
cmp
jo
and
cmovae
sub
push
iret
xor
in
clc
leave
dec
dec
dec
lahf
xchg
push
xchg
mov
mov
inc
and
sbb
push
and
pushf
or
arpl
inc
addr16
insw
push
lods
cld
xor
idivb
adc
popf
fcomps
cmp
add
decl
mov
mov
fwait
sahf
xchg
stos
or
repz
mull
xchg
and
call
mov
mov
cwtl
shl
cmp
movsb
aaa
mov
mov
cltd
and
mov
mov
int3
stc
es
pop
clc
lcall
cwtl
ja
xchg
lds
fcmovu
push
repnz
mov
cld
roll
inc
repz
sbb
fcoms
in
mov
daa
mov
and
shl
pushf
pop
add
sbb
repnz
imul
in
or
outsb
push
sbb
cmp
fisttpl
dec
mov
xchg
dec
xchg
outsl
and
call
test
push
mulb
sbb
std
mov
pop
in
and
aaa
loopne
xor
hlt
rcrb
sub
sub
push
or
mov
sub
sbb
loope
push
ss
sub
mov
data16
jmp
mov
or
fwait
adc
xlat
sub
and
mov
cmpsl
sbb
div
outsl
jnp
scas
ljmp
sti
ret
mov
pop
int
mov
stc
mov
mov
xchg
jbe
add
xchg
pop
push
cmp
pop
mov
mov
ds
adc
sbb
cmp
imul
repz
xchg
fstpt
and
xchg
stos
sub
and
mov
or
ja
divb
aad
and
and
mov
xor
lods
xlat
loope
add
shlb
imul
loop
push
inc
add
mov
add
jge
xor
push
or
sbb
stc
pop
adc
xor
lahf
int3
mov
jbe
test
sbb
xor
add
nop
adc
mov
jne
or
inc
inc
sbb
dec
pop
mov
mov
sbb
roll
sub
out
ljmp
cmc
adc
imul
pop
adc
ror
or
jbe
jno
pop
push
cmp
cltd
mov
fsubrl
adc
mov
in
adc
cmc
in
arpl
adc
clc
pop
ret
adc
jns
movsl
imul
jnp
imul
and
pop
cmp
xchg
sbb
lcall
arpl
adc
int3
lods
pop
dec
insl
enter
test
jo
sbb
push
jle
or
shrb
fwait
sbb
adc
jge
or
mov
cmc
inc
sbb
pop
shl
jmp
pop
inc
sbb
cmp
repz
lds
push
and
iret
mov
sub
sarb
shlb
dec
enter
fsubs
sbb
lret
aaa
dec
xor
daa
jns
mov
or
and
mov
fwait
adc
jmp
mov
push
adc
enter
jmp
mov
mov
pop
adc
lds
sbb
adc
je
cmpsb
int
dec
lcall
pop
loope
push
push
into
in
sub
mov
movsb
adc
push
xchg
xor
inc
pusha
cvtpi2ps
mov
arpl
pop
jle
popf
aas
adc
push
clc
push
xchg
repnz
lods
mov
pop
add
mov
sbb
insb
pop
sbb
jle
jnp
adc
mov
sbb
jecxz
adc
orl
cmpsl
push
inc
mov
mov
inc
add
sahf
and
dec
jecxz
dec
sbb
dec
nop
and
add
add
pop
mov
dec
inc
rclb
sahf
ftst
sahf
sbb
cmp
dec
jmp
enter
fimull
rcrb
mov
mov
sbb
mov
xchg
pop
in
xchg
mov
repnz
scas
adc
xor
cs
dec
gs
adc
loope
movsl
push
pop
cmc
lea
sbb
cmp
movsb
aaa
sbb
add
xchg
sbb
sbb
int
sub
mov
sub
and
cmp
inc
or
ret
fs
lea
adc
pop
pushf
mov
push
jae
in
imul
mov
cmp
sub
cmp
fstps
or
arpl
dec
xchg
iret
outsb
aam
sahf
or
inc
mov
or
decl
pop
adc
scas
cmpsb
sbb
sbb
sub
add
xor
xchg
stos
scas
and
sub
jno
addr16
or
xlat
rcll
mov
cmp
out
dec
lahf
mov
cltd
inc
cmpsl
lea
call
add
pop
pop
data16
inc
movb
sub
aam
push
stos
fistps
call
push
jge
mov
cmp
scas
and
sbb
inc
push
aad
movsl
add
push
mov
ss
xchg
or
iret
ds
inc
or
or
sub
sub
or
dec
push
or
xchg
mov
cmp
mov
or
push
adc
push
push
cltd
ret
mov
cmpsb
int3
push
in
mov
and
sbb
stos
push
push
scas
pop
xchg
or
inc
xchg
les
int3
and
jo
icebp
and
add
lcall
fs
imul
ret
shrb
pusha
xchg
sub
lcall
fmuls
xlat
dec
cld
jae
pop
or
mov
addr16
imul
into
inc
data16
push
imul
ret
sti
in
push
or
pop
mov
adc
dec
push
test
les
xchg
xor
sub
jne
out
test
jo
in
arpl
lods
es
jmp
cld
mov
movsb
sbb
jae
jmp
push
aas
xor
xchg
and
jns
inc
in
data16
pushf
sub
mov
adc
cmp
mov
test
js
adc
dec
cli
dec
cmpsb
cwtl
inc
and
and
mov
loopne
mov
rcll
inc
mov
test
fwait
movsl
sahf
adcb
pushf
sub
hlt
mov
imul
add
sub
xchg
or
popa
loope
sub
leave
or
mov
mov
pop
push
mov
inc
outsl
and
imul
adc
cmc
and
scas
cmp
cltd
lea
mov
and
rclb
mov
sbbl
push
push
loop
push
push
or
adc
push
leave
push
sbb
or
je
dec
in
stos
pop
jecxz
arpl
add
sahf
dec
out
test
cmpsl
push
daa
stc
int3
es
scas
xchg
add
data16
mov
adc
mov
andl
dec
cmc
xor
stos
es
and
pusha
cmpsl
bound
inc
or
adc
out
or
mov
fs
push
mov
push
fistps
aaa
cmc
cmp
sbb
add
ret
sub
or
inc
sbb
and
jmp
cmp
dec
mov
nop
scas
pop
xchg
in
pop
enter
in
ss
test
xchg
adcb
inc
movsl
mov
push
jnp
adc
lods
add
mov
push
ljmp
adc
lods
imull
dec
faddl
ret
lcall
add
mov
rol
xor
cli
adc
in
mov
stos
insl
data16
jecxz
jmp
arpl
sbb
mov
in
xor
jns
sbb
mov
fsub
inc
repz
clc
push
xchg
push
pop
xchg
insb
inc
push
pop
jnp
scas
aad
popf
scas
shr
in
push
or
mov
or
mov
shll
mov
add
lahf
cmp
mov
loope
or
lret
adc
pop
or
sbbl
orl
popf
out
sub
mov
test
into
ret
dec
int
jg
rcr
jecxz
add
dec
aad
push
add
rcll
in
pop
push
sbb
scas
popf
lret
cwtl
and
push
stc
sub
dec
stos
mov
mov
jno
push
scas
push
leave
add
push
movsb
xchg
or
mov
aas
ret
jp
mov
inc
rclb
movsl
push
mov
inc
ljmp
sbb
mov
mov
into
inc
add
sbb
push
xchg
dec
stos
fdivr
pop
scas
sbbb
xchg
ret
sub
dec
jge
mov
cwtl
pop
sti
les
adc
pop
pop
jle
ljmp
pop
adc
ljmp
jno
adc
addr16
ret
call
jle
or
adc
fwait
out
dec
xchg
mov
add
dec
cmpsl
imul
push
push
dec
jne
xchg
push
pop
cmpb
popf
and
movsl
cmp
or
loope
adc
js
scas
pop
ja
sbb
push
mov
aam
xchg
into
repnz
and
insb
jecxz
daa
mov
stc
jno,pt
or
inc
ja
pop
ret
fldenv
mov
pop
inc
adc
xchg
and
rorl
push
sub
insb
sahf
rcll
adc
push
push
pop
sbb
or
and
test
shrl
mov
and
out
pop
jae
pushf
adc
push
jno
neg
scas
jge
dec
or
mov
imul
add
mov
sbb
xchg
repnz
xchg
out
jecxz
push
or
pop
inc
cld
inc
and
push
cmp
and
mov
pop
sbb
cltd
adc
imul
sub
mov
mov
inc
cld
xor
sbb
in
and
sub
pop
daa
and
xchg
push
aad
test
adc
adc
rcll
fdivrs
scas
out
add
jbe
imull
dec
pop
mov
daa
sub
push
pop
inc
stos
fiaddl
popa
call
mov
jge
ja
repz
cmp
adc
xlat
mov
out
lock
or
mov
jp
xchg
repz
mov
insl
xchg
xor
mov
out
pop
stc
mov
mov
imul
cwtl
and
movsb
ljmp
xchg
mov
push
popf
int3
cltd
mov
int3
iret
lea
xor
inc
dec
inc
cmp
sti
mov
sub
or
and
jle
out
stos
insb
jmp
cmpsl
stos
xchg
and
paddusw
rorb
lods
mov
fs
adcl
repz
movsl
out
inc
mov
daa
scas
lret
push
jae
fisttps
inc
test
lock
aam
in
adc
cmp
in
and
adc
sti
push
out
jecxz
dec
and
mov
cli
dec
mov
aas
add
mov
jbe
push
inc
nop
scas
mov
cmc
inc
idivl
add
out
test
cli
mov
jne
xchg
sub
fidivs
out
scas
sbb
mov
sub
sbb
subb
mov
xchg
xchg
push
mov
leave
sbbb
push
cltd
movsl
jae
in
adc
add
mov
jnp
dec
xchg
adc
sahf
sub
cmp
adc
aam
fcompl
push
dec
and
test
adc
mov
sbb
mov
lds
out
pop
loopne
adc
lcall
fldenv
das
shrl
out
in
sbb
mov
mov
insb
pop
ficoml
stc
scas
xor
push
xchg
adc
push
cmp
push
add
inc
pushl
ret
pop
nop
xchg
and
push
xchg
imul
adc
mov
sbb
mov
lods
test
jge
and
push
into
cmp
inc
dec
mov
sbb
xchg
sbb
scas
push
arpl
sbb
mov
int3
fs
pop
adc
movsb
in
nop
daa
and
push
sbb
push
push
dec
stos
push
or
xchg
adc
and
dec
cmp
pop
or
and
inc
andb
pop
rcll
and
out
push
fdivl
daa
adc
aad
ret
xor
sub
rcrl
mov
stos
sub
fldl
cmpsl
mov
sub
insb
ds
pop
pusha
mov
and
push
pop
les
cltd
push
pop
test
xor
mov
or
add
movsb
inc
cmp
push
in
popf
inc
and
xorl
stos
push
push
sbb
subb
sbbl
pop
sbb
jo
test
cmpsl
or
pop
repz
inc
mov
in
enter
setae
aad
jle
sub
scas
aas
inc
fnsave
ja
lahf
dec
jmp
sub
into
lods
test
dec
add
jge
insb
push
pushf
push
and
popf
cli
push
mov
xor
pushf
scas
jmp
les
pop
int3
and
push
pop
xchg
dec
xchg
sbb
ret
ja
push
xchg
fmull
fwait
and
mov
ja
sti
and
push
adc
lods
roll
les
push
repnz
nop
pop
mov
dec
push
test
roll
xchg
clc
stc
out
mov
push
jne
int
icebp
push
ds
push
popf
xchg
pop
cmp
xchg
sbb
jecxz
mov
add
xchg
dec
xor
ret
aam
repnz
inc
cmp
data16
mov
jnp
dec
or
mov
adc
adc
mov
mov
test
push
jnp
dec
jp
fwait
daa
adc
jmp
and
movsb
daa
cmp
sub
sbb
push
into
or
enter
sbb
mov
shlb
out
loope
ss
and
add
jbe
sbb
movsb
inc
stos
and
dec
fadds
fwait
ret
push
aad
jb
fs
adc
in
add
pop
pop
dec
push
mov
fmuls
jmp
outsb
cld
dec
repnz
push
push
aas
cmp
sub
cld
inc
sbb
fdivrs
bound
imul
push
push
dec
out
adc
jae
inc
out
mov
icebp
sub
pop
sub
popa
push
sbb
bound
sub
orb
hlt
xchg
dec
pop
fidivs
out
dec
cmpsb
test
or
sbb
push
mov
adc
push
push
xchg
mov
lds
xchg
pop
daa
adc
mov
and
and
mov
cmc
rcrl
push
and
jmp
mov
xor
and
repz
sbb
clc
cmp
pop
mov
and
dec
or
inc
sub
push
sub
push
mov
outsb
test
sub
sub
mov
adc
xchg
out
push
js
pop
mov
push
leave
jge
js
sbb
sbb
ds
fists
cmpsl
adc
mov
xchg
ljmp
movsl
or
mov
add
jecxz
lahf
adc
pop
mov
iret
fs
sbb
xor
insl
imul
movsl
test
cltd
push
jecxz
push
jl
sub
jbe
add
and
or
mov
sbb
cltd
mov
or
fadds
addr16
xor
loop
ljmp
and
cld
sarl
adc
jp
iret
and
jecxz
mov
int3
fsts
and
mov
add
mov
lods
xchg
inc
adcb
xchg
inc
add
and
sub
pop
adc
enter
pushf
cmp
mov
cs
push
and
pop
dec
lods
push
adc
sbb
sub
daa
or
cmp
test
and
loopne
pop
rorb
adc
and
imul
enter
dec
or
lock
cmp
push
loope
mov
sbb
sbb
test
sbb
stos
ret
idivb
mov
mov
or
cmc
std
mov
adc
aam
sbb
mov
xchg
sub
in
mov
adcb
jno
mov
or
jbe
outsb
or
jo
scas
rcll
pushf
adc
inc
mov
fimuls
add
mov
mov
mov
sub
push
mov
pop
lret
lock
xchg
aam
adc
mov
sbb
inc
xchg
cwtl
push
cmp
loope
scas
adc
rcrb
push
fnstsw
mov
inc
ja
sbb
aam
mov
push
in
stc
int
aas
sbb
mov
insl
clc
pop
mov
dec
sbb
out
dec
js
add
or
xchg
cwtl
push
mov
mov
lret
aas
sbbb
jmp
sbb
pop
sub
dec
jns
nopl
jle
cmpl
sub
pushf
inc
sbb
dec
pop
sar
sbb
test
mov
add
aam
or
mov
mov
xchg
mov
lahf
and
in
lahf
inc
mov
mov
and
pop
pusha
sbb
movsl
mul
pop
in
and
dec
or
divb
inc
pop
sub
neg
push
pop
push
push
adc
dec
shl
adc
add
mov
leave
mov
xor
xlat
es
push
sbb
sub
and
sbb
add
xchg
aam
push
push
and
daa
and
out
adcl
lahf
and
int3
orb
and
andl
and
lret
jne
and
sbb
or
js
imul
push
xor
scas
in
or
pop
iret
push
jno
and
rorb
scas
xor
mov
push
lret
mov
lea
dec
and
pop
mov
into
inc
mov
addr16
or
fdivrl
jnp
push
mov
add
fisttps
xchg
loopne
adc
mov
cmp
and
xchg
int3
push
push
rorl
fnstenv
aam
and
stos
xchg
arpl
jg
xchg
ficoml
addr16
sub
cmp
ret
stc
and
xlat
rcrl
popf
sbb
mov
cmp
lea
in
scas
movl
mov
pop
mov
sub
xchg
shrb
pop
xchg
sahf
cmc
push
push
sbb
sub
mov
adc
sub
test
or
mov
ficoml
sbb
mov
or
push
push
dec
mov
cs
ret
fwait
mov
ss
jb
cltd
out
in
adc
lds
adcl
and
mov
sbb
scas
loop
add
sub
mov
push
enter
mov
cmc
mov
inc
mov
sbb
sub
sub
adc
xchg
adc
xchg
adc
in
fwait
add
rclb
mov
in
jne
mov
adc
cmp
sub
imul
and
hlt
insb
dec
insb
add
andl
pop
movsb
sahf
and
int3
call
push
daa
adc
stos
fistpl
mov
xor
cltd
int
scas
push
sahf
sub
mov
push
xchg
pop
sbb
test
movsb
sbb
and
sahf
add
loopne
sub
dec
jns
mov
xchg
out
loope
idivl
int3
jmp
shll
jae
pop
fmull
popf
jno
jl
lcall
cmpsl
aas
push
ret
jmp
inc
add
icebp
jle
mov
lret
adc
loopne
pop
mov
jns
add
xchg
stos
dec
scas
sbb
and
or
movsb
mov
cmp
cmp
pop
icebp
mov
pop
lret
sbb
nopl
ret
cwtl
xor
std
and
xlat
xor
pop
or
sbb
les
push
test
inc
scas
leave
pop
enter
sub
shll
mov
fimull
lea
andb
mov
dec
lahf
cmpsb
dec
js
jmp
lcall
jmp
pusha
mov
test
dec
mov
jecxz
sbb
insb
nop
and
repz
and
or
ss
es
and
scas
sub
sbb
stos
or
add
mov
mov
and
dec
lret
scas
inc
cmpsl
xchg
and
pushf
xor
movsl
or
push
and
in
and
es
stos
pop
xor
and
cld
xor
jecxz
test
ficoml
sub
pop
or
and
fwait
sbb
or
mov
xor
sbb
xchg
inc
mov
dec
shlb
mov
pop
inc
pop
add
mov
adc
mov
dec
mov
jnp
out
or
cmp
dec
test
dec
mov
icebp
pop
nop
dec
inc
stos
add
stc
xor
xlat
ja
dec
cwtl
sbb
enter
mov
xor
add
mov
xchg
push
jcxz
out
dec
call
fistpl
lcall
sbb
int3
xchg
cmpsb
sarl
dec
dec
cmp
sbb
sbb
xchg
inc
fwait
inc
aam
sbb
dec
clc
adc
mov
subl
movsb
inc
mov
xchg
imul
dec
repnz
adc
xchg
inc
in
adc
fwait
adc
push
xchg
and
push
cmp
in
mov
int3
stos
movsl
xlat
mov
lcall
xor
sahf
inc
iret
sub
pop
loope
cwtl
sbb
push
adcl
dec
fnstenv
cmpsl
inc
mov
mov
das
inc
lahf
dec
fs
scas
aad
popf
sbb
lds
sbb
push
jnp
sbb
mov
xchg
enter
sarb
out
add
cwtl
and
mov
popf
sub
dec
lret
xlat
arpl
inc
push
push
xchg
cmp
cwtl
add
jp
and
mov
leave
cmp
int3
adc
dec
scas
fsubrl
push
sti
es
sbb
lods
jl
xchg
push
or
adc
sub
inc
inc
test
adc
push
je
cmc
arpl
xchg
cmp
xchg
cmp
dec
push
or
add
jne
iret
addr16
sbb
shll
and
movsl
pop
scas
call
cltd
daa
adc
stos
aaa
mov
bound
and
mov
clc
sahf
sub
and
jmp
js
adc
call
jo
stos
stos
dec
xchg
idivb
and
imul
and
pop
fwait
and
mov
and
add
imul
subb
adc
out
or
popf
iret
pop
jo
cmp
jecxz
sub
and
xchg
and
xchg
std
sbb
sub
mov
xor
data16
fcom
xor
out
jne
sbb
dec
andl
orl
jne
sbbb
mov
icebp
jle
dec
inc
cs
and
mov
mov
andl
pushf
xlat
add
xchg
out
pop
out
fcoml
mov
sbb
mov
scas
stos
add
sub
dec
push
pushf
mov
adcb
int3
mov
xchg
leave
mov
sbb
inc
jno
push
push
jg
mov
sub
jo
pop
sbb
lods
push
mov
and
int
add
and
shll
dec
in
imul
and
or
jnp
sub
out
and
jo
jne
fisttps
adc
mov
pusha
adc
push
dec
mov
xchg
sbb
fwait
mov
and
sub
popf
pushf
insb
xor
adc
pop
sub
int3
nop
xchg
in
jle
ljmp
imul
pop
push
fstpl
psrlw
and
dec
sarl
or
lcall
jmp
mov
adc
sub
jb
or
pop
adc
outsb
dec
xor
pop
call
popa
jle
iret
mov
fadd
leave
add
xor
mov
mov
push
mov
lret
and
dec
stc
gs
sbb
std
ja
mov
nop
dec
push
sub
insl
inc
dec
or
cmp
lret
mov
fwait
or
out
pop
add
sub
ret
test
pmuludq
stos
sub
movsb
mov
cmpsb
rcrl
sbb
mov
adc
nop
std
add
mov
or
adc
push
sti
pop
cmpsl
test
iret
jmp
jo
mov
sbb
xchg
push
push
and
dec
inc
test
adc
xchg
loope
adc
pop
push
push
adc
pop
mov
das
pusha
sub
jmp
rolb
sbb
xor
jecxz
xlat
aas
adc
clc
dec
ret
roll
jg
test
cld
cltd
mov
iret
insl
cmp
adc
data16
fdivrp
ss
mov
insb
push
push
dec
pop
adc
xor
imul
psubq
jne
push
or
pop
cmp
pusha
iret
les
push
cmpsb
dec
dec
sbb
sub
movsl
cmpsb
xor
aas
xchg
insb
jle
in
das
insb
push
adc
mov
xor
push
push
pushf
or
push
icebp
xchg
mov
mov
push
cmp
inc
and
shrl
xchg
sbb
sbb
pop
nop
mov
and
cs
xchg
pop
and
call
adc
jmp
xor
repnz
idivl
adc
mov
les
in
mov
jecxz
in
mov
in
or
test
adc
xchg
mov
or
mov
push
lea
iret
dec
adc
cmp
out
movsl
and
int3
and
xchg
icebp
repnz
addb
dec
sahf
and
repnz
mov
lods
sub
imul
rcll
stc
inc
xchg
movsl
adc
mov
push
cmp
fwait
or
imul
xchg
lcall
cmpsb
xchg
icebp
jo
dec
iret
and
sbb
mov
xchg
int
repz
lahf
sbb
mov
add
sti
mov
xor
mov
and
out
adc
std
imul
or
aad
dec
push
xlat
adc
and
xor
jne
xchg
push
out
and
or
loope
cmpsl
sbb
ja
lods
jae
sbb
mov
sbb
sbb
xor
or
addr16
jp
sub
mov
sub
insb
in
shll
cmpsl
or
popa
xchg
inc
add
pop
cmp
inc
mov
push
in
cmp
inc
test
push
in
cli
lods
mov
or
adc
mov
pop
mov
mov
mov
andl
xchg
jnp
dec
lds
jns
cltd
out
dec
push
dec
mov
xchg
adc
adc
loop
scas
test
call
call
dec
in
pop
fistps
push
mov
push
add
jnp
jge
jmp
or
pop
adc
mov
and
jecxz
sub
cltd
push
xchg
dec
mov
or
push
test
pusha
and
data16
ret
mov
rorb
stos
jne
cmpsl
sbb
popa
repnz
inc
out
mov
stos
and
es
xchg
insl
mov
rcr
sbb
add
popa
adc
cmc
jns
or
loope
xchg
imul
dec
out
add
pop
ss
jecxz
xchg
dec
sti
xchg
popa
leave
lea
out
repnz
push
and
and
inc
adc
or
push
mov
daa
cli
adc
das
negl
mov
inc
cwtl
sbb
orl
out
cltd
and
cwtl
lods
xor
sub
js
mov
push
jns
sbb
adc
pop
out
sbb
aaa
and
sbb
dec
sbb
push
shl
adc
out
aad
sbb
mov
out
add
es
test
inc
ljmp
push
jge
cmpsl
pop
inc
mov
sub
inc
cmp
sbb
aas
fucomip
imul
out
pop
adc
add
mov
ljmp
xchg
cmpsb
je
or
sar
scas
mov
mov
mov
js
adc
insl
scas
outsb
xchg
loop
mov
movsb
dec
bound
pop
jmp
repz
test
sub
sub
clc
mov
sbb
mov
push
dec
mov
in
sahf
xchg
daa
insb
inc
data16
xchg
js
lretw
leave
push
and
adc
dec
ja
inc
push
cmp
xlat
add
pop
stc
and
int3
or
jg
test
jp
mov
pop
mov
es
arpl
sbb
xlat
adc
fisubrl
popf
adc
insl
pop
adc
xorb
jnp
data16
jmp
mov
xchg
scas
push
loop
xchg
adc
push
adc
divl
and
sbb
jns
loope
add
sbbb
pop
mov
sub
jne
lods
scas
adc
test
ficomps
rcrl
in
dec
mov
push
in
ficompl
gs
and
iret
and
mov
out
jecxz
shr
and
mov
and
mov
jnp
push
add
push
sbb
test
out
cmp
daa
add
mov
movsb
pop
lahf
mov
scas
out
ret
mov
mov
lea
adc
inc
dec
xor
dec
dec
push
pop
adcl
in
int
fwait
sbb
ret
cmp
sbb
test
mov
cmpsl
push
jmp
adc
dec
dec
rol
pop
ret
and
mov
ss
or
push
mov
adc
mov
inc
cmc
test
bound
or
cmp
popa
mov
mov
mov
popf
dec
repz
xchg
add
jno
xor
jne
fwait
mov
jo
int
repz
sub
jg
push
test
fstps
sbb
cmp
dec
jmp
mov
jp
fs
in
testl
test
and
and
inc
and
cmp
mov
or
and
mov
stos
adc
in
adc
cmc
or
push
cli
bound
iret
jg
es
xor
aaa
mov
insl
and
jg
or
xchg
cld
inc
fbld
inc
fistl
push
and
adc
inc
fists
movsb
lret
xchg
bound
fldenv
sbb
shl
nop
jge
mov
lea
mov
scas
movsb
shl
lea
scas
dec
test
sbb
in
test
sbb
mov
mov
inc
cwtl
push
xchg
and
test
rcr
lahf
sbb
aaa
xor
lods
cld
aad
push
lea
dec
cltd
mov
sbb
idivb
lea
pop
aaa
adc
or
mov
cmpsl
cmc
loop
sub
pop
push
pop
sbb
int
mov
jle
sub
xchg
mov
adc
adc
push
pop
pop
ret
add
mov
js
iret
adc
cmpsl
inc
xor
mov
jmp
js
xchg
inc
mov
and
mov
rcl
lahf
sbb
jns
xchg
imul
sub
or
mov
mov
lea
mulb
movsb
dec
sbb
or
pop
sbb
std
sub
popf
push
mov
mov
sub
jmp
inc
mov
gs
cmc
dec
mov
sub
outsl
push
sub
in
repnz
sbb
ljmp
inc
pop
dec
jg
lcall
std
subl
jmp
pop
xchg
scas
cmc
lret
mov
or
addr16
and
push
loopne
dec
xor
push
sbb
scas
outsl
dec
in
push
or
dec
dec
stos
mov
inc
hlt
test
mov
stos
adc
pop
jo
loopne
sub
xorb
sbb
ljmp
adc
push
into
int3
mov
pop
lcall
inc
rorb
in
lods
sbb
lret
or
stos
in
pop
imul
jle
dec
dec
xchg
mov
bound
xor
imul
enter
xchg
push
stos
enter
jbe
or
cmp
cmp
adc
adc
push
dec
insl
pop
and
fwait
push
jns
inc
int3
cltd
xchg
js
xchg
and
aaa
or
xchg
lods
cwtl
bound
test
shl
test
push
adc
data16
popf
popf
repz
adc
pop
ljmp
mov
std
insl
dec
push
jecxz
lods
push
fdivl
inc
repnz
dec
hlt
stos
int
dec
mov
and
pop
push
add
sbb
test
inc
sub
or
mov
dec
cmp
daa
imul
cs
mov
or
fwait
jo
jmp
cwtl
cmc
cmp
es
cmp
pop
incl
lods
or
jnp
dec
xchg
aam
out
test
push
inc
aaa
dec
lcall
adc
and
mov
dec
and
shrl
mov
xchg
mov
jb
test
push
mov
ss
sbb
lcall
cld
xchg
mov
in
and
in
repz
in
ds
mov
jns
xchg
add
sub
or
fiaddl
cld
leave
pushf
adc
test
in
mov
ror
or
enter
call
fisttpl
dec
add
or
daa
ss
popf
sbbl
repz
mov
cli
jge
mov
and
xchg
scas
cwtl
imul
fmull
mov
lcall
stos
aaa
cltd
cld
xchg
push
jle
or
mov
mov
push
dec
inc
addr16
mov
mov
gs
pop
ret
lea
mov
or
pushf
adc
test
and
push
jmp
cmpsb
or
das
xor
sub
xlat
test
or
dec
or
dec
xor
adc
fdiv
ret
or
mov
and
in
cld
cltd
add
jge
loop
js
sbb
outsl
into
mov
jp
pop
adc
loop
and
adc
sub
cmpsb
push
or
adc
add
shr
sbb
pop
enter
mov
xor
sbb
clc
mov
inc
push
mov
and
push
add
or
cmc
sbb
out
dec
xor
movsb
xchg
jne
lods
or
popa
sub
or
sbb
jb
adc
incl
pop
stc
ss
rolb
add
xchg
imull
jnp
mov
adc
sbb
loopne
repnz
or
sub
or
shlb
push
and
jmp
mov
inc
mov
xlat
cltd
mov
paddw
jno
popf
adc
sbb
mov
rorb
xchg
xor
lahf
sbb
sub
loop
xor
mov
sbb
inc
out
xchg
adc
loopne
sar
je
or
xchg
test
cmpsl
mov
orl
in
mov
sub
fnstenv
fwait
push
imul
or
sub
aaa
xchg
cli
sub
adc
lods
sub
and
sbb
xor
adc
pop
sub
sahf
push
sbb
inc
and
cmc
outsl
daa
pop
jne
orl
pop
sub
push
xchg
cltd
aad
sub
jne
fwait
mov
add
roll
pop
xchg
out
mov
xor
cmp
xchg
adc
push
lcall
mov
cmp
or
adc
and
loope
push
inc
push
iret
fdivs
adc
stc
mov
push
popf
xor
lcall
or
shll
sbb
xchg
sbb
sahf
mov
sbb
mov
sub
in
je
mov
add
in
sub
or
iret
dec
push
adc
adc
xor
cmp
inc
es
lock
or
cmp
ss
fwait
sbb
mov
pop
adc
mov
sahf
cmp
and
imul
jmp
push
push
xchg
aaa
and
cmc
inc
out
scas
xchg
popa
jmp
mov
lahf
pop
in
mov
mov
xor
pop
add
push
inc
out
mov
fwait
xchg
imul
enter
jmp
cld
mov
push
adc
jg
sahf
inc
scas
mov
stos
adc
push
lock
or
in
or
adc
ljmp
lods
adc
outsl
push
xchg
cs
xchg
adc
test
cmp
jbe
popf
and
data16
fdivr
inc
mov
mov
pop
cmc
inc
movsl
push
out
push
cwtl
test
adc
mov
and
fstl
and
in
dec
fidivl
call
movsb
sbb
outsb
insb
scas
lahf
inc
push
push
adc
repz
adc
fmul
xchg
lret
or
add
adc
dec
push
xchg
mov
fwait
arpl
ljmp
cwtl
shl
jp
xor
adc
lret
icebp
add
and
or
sbb
call
sbb
xchg
ja
adc
mov
int
xchg
add
mov
addr16
xor
pop
test
mov
add
pop
mov
cmpb
js
fwait
sub
mov
fadd
fisttpl
test
mov
dec
cli
or
shlb
es
pop
or
push
adc
imul
adcb
call
mov
in
outsb
or
imulb
loope
das
incl
lahf
sbb
testb
frstor
inc
outsl
cld
cmpsl
or
shrb
jmp
or
push
aam
repnz
cmp
cmp
lcall
enter
push
jmp
or
jno
mov
out
and
jg
shrl
inc
mov
mov
or
pop
cmpsl
adc
push
fimull
cmc
fnstsw
sbb
sub
mov
cld
or
bound
test
jns
in
stc
cmp
clc
mov
ret
pop
jbe
push
in
xchg
jecxz
fimuls
adc
or
pop
loopne
push
mov
adc
or
out
pop
push
or
aam
mov
xor
sbb
or
lds
or
imulb
or
and
out
subl
add
inc
es
pop
mov
test
jmp
loopne
sbb
and
jns
sbb
cmp
dec
xchg
cwtl
shrl
jecxz
imul
mov
sbb
lret
int3
xchg
sbb
push
jb
xor
imul
punpckhwd
pop
ljmp
div
sbb
aam
lea
test
cmp
or
ds
and
fsubp
stos
mov
jns
imul
jnp
fisttpl
mov
mov
lret
xchg
cli
fcmovu
push
pop
and
into
mov
push
or
jne
jbe
das
mov
lret
sbb
mov
mov
or
lods
and
or
inc
je
movsl
insb
sahf
ljmp
es
in
xor
cmpsb
sbb
pop
pop
lret
lea
xor
cltd
cmp
js
mov
sub
mov
or
cmp
pop
pop
rol
inc
popf
scas
ficomps
loope
jb
mov
push
xchg
lods
adc
aas
rcll
es
or
sar
push
jbe
push
lret
mov
inc
pop
shll
dec
mov
sub
inc
pop
aaa
add
in
mov
rorb
mov
cli
pop
in
mov
lock
sub
or
lret
and
cmpsb
mov
inc
jo
xor
or
xor
or
leave
pop
lock
inc
ljmp
mov
or
dec
mov
dec
dec
mov
sbb
mov
jp
daa
stc
xchg
in
or
adc
push
int
fstl
push
insl
and
fwait
jno
or
inc
lds
xchg
cmp
out
lahf
and
or
data16
shlb
jns
xchg
cld
rorl
out
inc
data16
or
adc
sub
test
jl
lcall
or
xor
pop
imul
cmp
int
adc
inc
or
dec
sub
push
inc
mov
jmp
push
pop
sub
xchg
pop
cmc
cmp
inc
es
push
mov
push
or
jmp
xchg
lods
mov
cmpsl
sahf
cmpsb
push
lods
and
enter
mov
adc
stc
lods
or
jge
mov
sarl
ss
lods
cwtl
or
sbb
fldcw
sbb
add
les
sub
movsl
mov
or
nop
sub
add
or
sub
daa
fisttps
mov
addr16
adc
xor
push
xor
imul
aaa
adc
pop
mov
aad
push
sub
xchg
aam
adc
jbe
sbb
add
adc
pop
shll
call
test
frstor
sub
cld
pop
ds
push
lret
and
rorb
or
stos
aad
orl
test
test
and
frstor
or
js
cmp
or
mov
push
xor
add
imul
add
push
or
dec
push
arpl
jb
scas
dec
les
mov
pop
inc
or
ftst
hlt
imul
je
sbb
sub
out
or
lds
dec
or
rcl
jae
xor
lds
sub
mov
adc
pop
mov
jae
sbb
or
jg
push
stc
xchg
xchg
cmpsl
inc
cmp
adc
sub
xor
xor
or
mov
jns
repnz
aas
jle
cmp
or
xchg
sbb
scas
stos
pop
or
and
mov
int
dec
xchg
dec
jge
sbb
mov
adc
mov
clc
test
or
pusha
cmp
loopne
push
or
jl
lret
pop
mov
push
push
push
xchg
cmp
pop
or
pop
jmp
cmp
mov
rcl
inc
jnp
xor
pop
adc
jne
ds
sbb
mov
or
stc
or
es
je
or
jge
pushf
ret
or
rcrl
mov
push
xor
lahf
pop
or
jns
lret
adc
in
push
cs
paddb
cltd
sub
hlt
jge
mov
mov
int3
fidivs
or
xor
ficompl
mov
scas
pop
or
or
adcl
fbld
ja,pt
movsb
lea
test
daa
gs
xor
or
or
out
jge
and
or
xchg
mov
cs
mov
or
push
mov
sbb
ret
xchg
in
addr16
mov
jl
mov
sub
popf
cmovnp
mov
pop
sbb
cmp
fcomp
imul
in
mov
xorl
daa
arpl
or
lcall
sbb
cwtl
and
lret
or
jae
repz
push
adc
push
xchg
das
ljmp
mov
and
ficoms
aad
and
pop
fdivrl
mov
or
push
mov
dec
or
or
jb
repz
add
lea
inc
adc
fwait
rclb
or
in
jae
rcrb
add
or
in
cmp
scas
mov
cmp
xchg
pop
outsl
mov
sti
ljmp
cmp
push
fsubrl
push
or
xor
cmpsl
xor
mov
pop
fisubrs
cmp
movsbl
jbe
mov
ror
stos
sbb
push
arpl
or
and
or
sbb
mov
insl
adc
shrb
inc
cwtl
inc
or
repz
pop
and
and
imul
insb
and
jbe
xchg
push
or
test
ljmp
adc
int3
aad
or
fisttpl
mov
cmpsb
or
push
inc
jmp
and
sbb
mov
inc
mov
mov
in
in
mov
or
test
dec
inc
or
bound
int
insl
or
call
add
repnz
jnp
mov
pop
dec
rcl
xchg
or
mov
adc
xor
lods
push
out
cli
lea
cmpsb
mov
xchg
or
push
push
or
pop
repz
test
sbb
and
push
push
push
jg
popf
test
mov
push
ret
daa
jle
xor
hlt
xchg
jl
or
xchg
ds
cwtl
movsb
sub
mov
mov
das
test
dec
pop
lods
or
xchg
cltd
mov
scas
xchg
xor
xchg
pop
cmpsl
cld
insb
add
repnz
sbb
sti
or
popl
jle
sub
subl
push
mov
or
jo
inc
lds
cli
adc
add
xor
jp
popa
sub
sub
sbb
dec
adc
or
mov
dec
in
int3
xor
xchg
ret
enter
add
lods
push
or
in
ss
push
mov
adc
scas
or
loope
mov
lret
rol
xor
imul
cld
push
jg
push
sub
mov
inc
aam
lret
jno
lods
sti
lret
xor
bound
push
dec
push
mov
sbb
mov
leave
clc
cltd
or
out
outsl
jg
xchg
jge
xchg
ljmp
xchg
dec
mov
lods
loop
data16
mov
jecxz
fimull
lret
mov
jle
fbstp
nop
or
divl
sbb
push
sub
inc
dec
or
leave
lret
xchg
stos
cmp
fidivrs
les
mov
pusha
fsqrt
or
xchg
pop
cmp
adc
shll
ljmp
scas
and
lahf
fcoms
or
orl
xor
sti
lods
jnp
inc
sub
cmpsb
or
or
mov
fwait
cmp
push
movsl
scas
lret
or
in
inc
jp
inc
xchg
or
or
pusha
or
add
cmpsl
or
sub
flds
insb
bnd
push
cld
xchg
xor
mov
cs
mov
ret
clc
dec
hlt
gs
jne
or
insb
mov
int3
aaa
or
inc
sub
lret
xchg
cmc
xor
pop
bound
fwait
inc
out
or
subl
int
push
or
in
lea
cmp
or
and
xchg
pop
repnz
mov
cmp
shl
rcll
and
or
shr
or
imul
dec
and
aas
mov
in
daa
pop
shll
clc
sub
loop
and
or
lock
mov
xor
add
inc
or
je
xchg
scas
sahf
daa
or
aad
std
cwtl
sub
ja
push
out
cld
sbb
shl
mov
iret
jecxz
lretw
jae
dec
sub
sub
cs
push
divl
ss
adc
std
dec
or
fiadds
or
xchg
jg
and
lahf
jns
or
mov
out
or
das
scas
rorl
repz
daa
push
test
and
in
pop
imul
or
andl
sub
in
inc
pop
jo
mov
mov
jmp
sub
shrl
hlt
sti
mov
int3
popa
fldt
push
push
outsl
xchg
mov
movsl
sbb
jle
xchg
fcomps
sub
popf
lahf
femms
adc
ret
ljmp
and
loop
mov
cmp
shlb
lea
or
xchg
xchg
fstp
lods
sub
sub
and
or
cmp
or
ror
and
mov
push
sbb
insb
in
sub
xchg
mov
or
adc
out
enter
jecxz
or
scas
imul
xchg
dec
or
xor
imul
daa
cmp
sub
or
or
jbe
arpl
scas
sbb
arpl
rorb
lahf
cmc
and
inc
jg
mov
push
or
jmp
pop
and
mov
lret
and
jb
add
cld
and
inc
sbb
subl
sub
mov
adc
mov
inc
jnp
or
push
outsb
mov
repz
push
or
sbb
popa
les
pop
int
iret
add
push
fistpl
sub
adc
push
push
dec
sub
daa
int
repnz
loop
fcoml
or
xor
cwtl
in
daa
push
xor
dec
pop
sub
loop
icebp
or
mov
imulb
or
aas
add
call
add
data16
sbb
rclb
or
test
mov
iret
or
imul
push
out
or
shrl
push
or
rorb
in
mov
sbbl
or
test
mov
imul
mov
mov
fcoml
or
cmp
imul
or
add
or
insb
je
sbb
lret
test
sub
subl
lea
ss
xchg
imul
aas
fdivs
sub
jp
sbb
int3
or
aam
push
mov
inc
lcall
and
mov
push
sub
inc
scas
xchg
cld
loop
or
and
xchg
pusha
mov
int3
dec
sar
icebp
cli
sbb
mov
jo
sub
mov
sub
fsubrl
mov
dec
nop
push
or
aas
sub
cltd
cwtl
push
test
pop
or
lcall
or
loope
pop
lods
or
jge
jno
mov
negb
xor
or
push
mov
xor
xchg
cs
or
loopne
in
jl
or
cltd
cmpsb
and
mov
sbb
jmp
push
pop
push
in
pop
push
sub
repz
jnp
out
mov
inc
push
add
rorb
push
testb
stos
or
fidivl
xor
lds
sub
and
ret
pop
mov
push
push
or
cli
test
pop
in
xchg
adc
cmpsb
sbb
jns
xor
dec
cs
adc
jns
xchg
hlt
inc
iret
or
or
ss
int3
lock
xchg
push
jmp
cmpsb
xor
lahf
sbb
or
xchg
popf
or
loope
dec
mov
lock
sbb
ja,pn
xor
lret
arpl
push
sbbb
repnz
pop
movsl
sub
sub
and
push
or
dec
inc
test
inc
jnp
push
js
xor
and
in
ret
fs
adc
push
jne
lret
mov
mov
push
lock
push
push
or
daa
adc
shll
sub
xor
in
or
sub
decl
mov
sbb
loope
lret
mov
cmp
or
jae
and
rorb
cmp
out
push
pop
mov
xchg
out
sbb
and
or
sub
adc
or
std
sti
lahf
or
mov
mov
shll
sbb
or
es
push
in
dec
or
sbb
call
pushf
push
jo
or
mov
inc
or
or
pop
xor
or
and
push
or
xlat
inc
add
jno
sbb
xorl
adc
leave
ljmp
jmp
ret
outsl
cld
dec
lret
imul
aam
pop
je
pusha
icebp
cltd
inc
sbb
xorl
jo
test
iret
fstl
push
lods
insl
lea
jne
inc
pop
xchg
in
in
arpl
popf
das
and
mov
lods
pop
rorb
mov
rcll
fmuls
jo
jbe
xchg
cmp
inc
div
gs
mov
mov
inc
daa
imul
xchg
mov
sbb
imul
fsub
jbe
push
push
fisubl
inc
lods
test
xchg
or
das
in
dec
dec
testl
es
adc
shlb
daa
or
xor
or
lods
ljmp
add
mov
adc
xor
adc
stos
pop
jns
or
lea
inc
or
adc
sarb
stc
repz
sbb
sbb
and
iret
movsl
js
and
add
push
xchg
xor
cmp
lret
push
lods
out
add
fnstcw
and
mov
loop
in
xchg
aad
imul
pop
xor
out
jb
or
mov
in
insb
jl
pop
or
test
push
mov
call
psrad
fs
lea
and
aad
adcl
push
or
call
inc
jl
jmp
inc
test
adc
xor
sub
mov
scas
sub
in
iret
shl
test
adcl
stc
lea
mov
ret
popa
jno
loopne
fsubl
jl
mov
insb
cmpsl
into
lea
sbbb
fisubl
std
xor
fs
mov
and
mov
or
push
scas
lret
fstl
loope
in
outsl
add
lea
cs
cld
daa
ret
sub
jnp
lds
jae
aad
fsubp
adcb
lea
adc
xlat
mov
jne
cmp
je
scas
mov
mov
out
mov
jg
jmp
xor
mov
bound
cmpsb
dec
dec
or
das
cli
loope
addr16
and
cmc
cs
mov
or
enter
mov
or
insb
fsts
rorl
lret
or
inc
sub
inc
pusha
stos
adc
in
int
cmpsb
nop
jge
sysret
mov
cmp
lock
incl
push
cli
push
in
dec
inc
sar
dec
loopne
jmp
fisttps
cmpsb
jno
cmc
cmp
and
mov
cld
and
or
mov
jmp
sub
mov
or
and
daa
add
testb
loop
or
adc
and
ljmp
lahf
inc
mov
adc
xchg
or
ljmp
pop
das
jns
out
xchg
and
subl
sub
fldt
ljmp
cmpsb
jmp
int3
or
inc
sbb
cli
xor
pop
xor
and
clc
add
push
push
or
in
mov
push
pop
mov
mov
xor
xchg
lea
stos
imul
or
fsubrs
rcrl
ficoml
hlt
daa
imul
jbe
and
movsb
or
mov
jle
jg
push
int3
cmp
and
or
push
jne
or
mov
test
sti
int
jb
pop
lock
and
or
mov
inc
push
movsl
je
or
out
sahf
jmp
or
push
inc
sbb
or
ror
pop
stos
jae
or
cltd
mov
jle
add
xchg
push
les
out
fmull
jg
and
lret
mov
or
jb
push
out
sbb
jg
aas
dec
and
or
inc
std
sub
push
inc
push
push
mov
rcrl
dec
mov
mov
push
sub
mul
ret
loop
pop
or
in
or
sbb
or
inc
mov
xchg
jns
add
movsb
dec
jo
arpl
mov
mov
imul
cltd
and
add
ret
xor
in
mov
push
pop
cmpsb
sub
lcall
jmp
sub
or
pop
sahf
out
lret
outsb
dec
xor
mov
cmp
mov
repnz
stc
push
in
push
sbb
mov
test
frstor
jae
push
fwait
push
outsb
cmpsb
inc
or
sbb
or
clc
int
and
or
sbb
insb
or
and
sub
or
inc
data16
jne
testl
and
test
or
or
leave
xchg
sbb
jne
sarl
jmp
push
mov
mov
or
push
adc
cli
sub
and
inc
dec
push
pop
or
cmc
int3
subb
or
mov
cmpsb
jmp
or
jle
cmpsl
or
cmc
pushf
dec
dec
sti
jmp
add
or
lock
or
inc
jbe
and
scas
mov
out
popa
mov
or
mov
xor
repz
nop
sbb
addr16
les
mov
test
popf
leave
mov
sub
daa
sbb
push
and
jl
sub
test
mov
into
mov
or
pop
pop
xchg
rclb
pop
or
push
hlt
adc
or
mov
dec
xchg
aad
cmp
push
sub
or
dec
add
cltd
add
cli
jle
sbb
ljmp
pop
test
or
shlb
pop
out
or
ja
sub
loop
clc
ror
aas
fisttpl
cmp
ret
sub
mov
popa
outsl
shll
mov
aad
mov
std
test
xchg
shlb
clc
xchg
fs
insb
lea
in
loope
mov
shlb
scas
int
jmp
popl
sub
ljmp
lret
jl
out
cmp
lods
adc
aam
push
sub
inc
lcall
jge
dec
xlat
add
adc
shrb
test
xorb
or
or
inc
lods
cmc
or
lds
or
mov
push
dec
or
in
xchg
inc
jle
fistl
sub
mov
push
cmpsl
jecxz
pusha
or
int
push
xor
daa
dec
sti
jge
inc
or
js
or
clc
add
or
lods
xlat
sub
mov
jl
lea
loop
dec
cmp
xchg
or
push
and
mov
mov
leave
in
jge
adc
mov
or
and
mov
inc
or
and
mov
xor
in
push
inc
scas
or
inc
aas
jp
mov
lods
pushf
dec
xor
jmp
add
push
rcll
xor
dec
jbe
jns
adc
push
xchg
pop
fdiv
cs
and
or
adc
clc
hlt
cld
bound
xchg
fcompl
imul
int3
or
sarl
icebp
std
xchg
or
sbb
bound
fs
add
adc
or
ds
ss
or
pop
clc
ja
js
ljmp
es
enter
rcl
pop
fs
mov
rcrb
xchg
mov
pop
or
inc
dec
iret
or
mov
push
or
ret
sub
fdivrs
jne
negl
push
or
je
jnp
inc
fdivl
or
cmpsb
sbb
mov
fsubs
shll
js
sahf
cmp
add
mov
shr
push
mov
mov
mov
ljmp
cltd
sbb
cmp
test
push
sbb
iret
and
daa
or
xchg
mov
ficoms
push
inc
jb
adc
mov
add
sub
pop
push
or
adc
push
lcall
or
jl
jnp
xchg
push
rorb
rcrl
sbb
test
or
insl
sbb
mov
movsb
in
sbb
mov
icebp
push
mov
clc
xor
into
aam
and
sbb
lods
imul
daa
outsl
sub
movsl
lds
adc
xor
push
or
loopne
aas
dec
or
push
rorb
dec
mov
popf
cwtl
outsb
or
and
es
dec
data16
dec
out
or
add
dec
sarb
insl
pop
mov
nop
inc
and
cmpsl
arpl
stos
leave
into
or
xchg
or
pop
es
call
insb
mov
fs
fwait
push
ret
inc
sbb
data16
mov
dec
adc
es
push
jbe
stos
imul
icebp
xchg
jge
popa
mov
cltd
sbb
pushf
push
push
cwtl
lret
daa
sbb
and
mov
ds
push
mov
inc
aaa
push
icebp
dec
int
das
jmp
es
les
in
popa
add
jne
mov
decl
test
jae
icebp
dec
dec
adc
iret
cli
adc
lods
or
mov
fdivrl
mov
shr
mov
or
xchg
adc
repz
lods
or
les
or
push
movsb
pop
cmc
ljmp
jp
mov
or
push
mov
loop
arpl
xchg
cmpsl
xorl
pop
add
out
icebp
push
je
adc
rcrb
mov
pop
or
test
jmp
cmc
xchg
aam
sti
push
and
iret
add
arpl
xor
xor
leave
outsl
xlat
out
lea
pop
mov
xchg
inc
or
pop
push
pop
fcmove
sub
mov
mov
or
lea
fistpl
dec
jecxz
test
or
popa
cmp
and
cli
rol
xchg
into
or
push
and
aaa
movsb
or
shrb
mov
mov
jmp
push
inc
je
scas
or
fnstenv
cmpsb
ss
adc
sub
or
sub
adc
pop
cmp
xor
popa
mov
fisttpll
mov
inc
movsb
jecxz
mov
fbld
adc
jg
cli
ficoms
inc
cwtl
iret
in
test
mov
lahf
fwait
pop
jecxz
test
push
mov
jle
jae
nop
or
push
sub
pop
movsl
or
sbb
mov
test
or
mov
jge
cmp
js
adc
sub
clc
or
sbb
pop
rorl
inc
inc
loopne
cld
inc
jl
jo
or
mov
jae
ss
lcall
loopne
or
les
lret
and
inc
or
call
mov
xor
mov
or
push
jp
pop
std
call
inc
pop
mov
sub
jle
mov
jle
mov
dec
out
fnstenv
lret
in
cs
pop
sub
adc
sti
or
nop
int3
mov
scas
cmp
xchg
jnp
stos
or
fldenv
orb
call
or
inc
lea
dec
and
cmpsb
sub
and
or
repnz
idiv
pop
mov
cmp
or
and
or
inc
out
test
and
mov
mov
adc
leave
pop
and
ret
outsb
jb
sub
or
mov
dec
or
dec
pusha
xlat
or
into
lret
repz
or
or
inc
je
aad
or
jns
jmp
mov
popf
dec
sub
add
xor
xlat
pop
fidivl
or
cltd
jge
into
cmp
sbb
push
push
lahf
lcall
fiadds
fisttpl
jmp
or
or
cmpsl
pop
std
sub
jnp
cmpsb
aas
gs
loopne
daa
jno
sub
jge
test
sbb
in
fidivl
or
mov
sahf
or
mov
dec
sub
pop
jp
sti
adc
and
mov
or
repnz
mulb
xor
outsb
mov
jmp
test
loop
ret
push
sub
lret
test
xchg
mov
cmp
cmp
or
sbb
rclb
pop
mov
dec
or
insl
aas
fs
or
imulb
arpl
cmp
or
mov
dec
or
xor
or
ja
in
cli
mov
cmp
popa
mov
imull
insb
fnstcw
jecxz
mov
imul
scas
gs
loop
in
je
in
imul
sbb
xchg
cmc
mov
jecxz
push
cmpsb
in
mov
or
fisubs
lods
cli
cmc
or
xor
mov
int
jmp
mov
stc
xor
ds
jns
dec
mov
pop
cmpsl
adc
loop
jns
aam
xchg
out
fwait
es
mov
inc
divb
push
divl
dec
xor
or
or
push
or
ja
mov
je
cwtl
cwtl
popf
or
inc
sub
mov
add
in
xchg
cmpl
xlat
and
cwtl
jae
sbb
ret
call
test
sbb
adc
aas
cmpsb
mov
mov
adc
test
cltd
or
repnz
pop
jg
lret
stos
mov
inc
or
fs
mov
or
in
lods
jae
sub
inc
loop
sub
out
iret
fcomi
sbb
cmpl
out
xchg
sub
push
push
andl
daa
insb
into
mov
mov
jmp
mov
push
or
xchg
inc
push
or
data16
repnz
jno
sub
lea
or
sbb
or
ret
cld
mov
jge
cmp
testl
or
js
mov
dec
dec
pushf
inc
adc
sbb
mov
imul
xlat
jg
sbb
inc
movsl
xlat
ljmp
or
pushf
mov
cmpl
or
jle
movsl
sbb
sub
push
push
in
ja
sahf
or
ret
sbb
popf
gs
pop
jne
jno
cli
sbb
and
push
sbb
inc
clc
mov
or
jnp
mov
popf
cli
or
ljmp
lods
cmpsb
ficoml
push
push
in
out
pop
jbe
inc
mov
mov
shll
and
jnp
or
adc
test
mov
decl
cltd
sahf
xchg
scas
cmp
pop
out
cmpsb
jb
sub
sti
push
inc
inc
ds
inc
lea
repnz
mov
xorl
inc
jne
jns
movsl
or
adc
adc
cmp
ljmp
clc
jge
adc
pop
adc
test
or
fdiv
jecxz
sbb
adc
daa
inc
or
testb
repnz
ljmp
mov
test
or
fistl
gs
movsb
adc
subl
adc
fxch
fwait
mov
insb
outsb
test
inc
movsb
inc
adc
pop
add
jl
and
or
ret
aad
mov
lahf
pushf
andb
inc
add
or
jno
or
mov
adc
ljmp
std
ss
in
into
dec
xchg
jge
jns
and
dec
or
xor
cmp
cltd
loop
icebp
cmp
int
out
jl
cmpsl
and
cmp
pop
push
or
xchg
pop
sarl
jp
loop
fiadds
mov
imul
push
popa
subb
jp
shr
inc
lcall
jl
or
insb
je
push
xchg
lods
xchg
in
ret
sbb
fsubrs
in
xchg
pop
jo
sbb
or
jbe
cmp
ficompl
mov
inc
xchg
and
mov
mov
mov
lods
outsl
push
or
movsl
jo
or
pop
lea
int
sbb
les
imul
lock
mov
fcmovb
lea
stc
lock
sbb
lods
cmp
fisttpll
ret
insl
and
pop
js
inc
jmp
sub
or
pop
popa
push
mov
jns
cmpsb
aas
jno
loope
pop
dec
cltd
xchg
pop
or
xchg
dec
icebp
lea
out
adc
sbb
inc
rcrl
aas
out
adc
fmull
xor
xchg
or
out
dec
adc
imul
pop
pop
sbb
in
sarb
hlt
or
enter
mov
adc
or
and
mov
inc
or
jmp
stos
insb
or
stos
mov
ds
or
daa
mov
sbb
or
lods
xor
fmull
sub
outsb
pop
mov
inc
test
mov
repz
gs
sbb
add
mov
xchg
push
lea
sub
ljmp
inc
xchg
and
pop
or
daa
mov
or
in
or
xlat
xchg
shrl
inc
push
xor
mov
or
stos
adc
or
xchg
lret
push
test
test
cmp
ffree
adc
mov
or
mov
cmp
call
test
or
inc
mov
or
pusha
out
ja
xlat
sub
sbb
sarb
fistl
es
and
jmp
icebp
or
dec
idiv
pop
in
adc
int3
or
into
shld
cmpsb
or
or
aaa
cmp
jns
decl
fs
jne
insl
loope
sbb
push
in
dec
fsub
and
push
in
or
and
loopne
ss
mov
adc
cmpsb
dec
push
sub
cwtl
dec
dec
or
push
mov
addb
mov
lcall
insb
or
dec
add
add
adc
dec
jo
xchg
sub
out
insl
scas
jg
pushf
bound
jae
test
dec
call
popa
push
pop
mov
mov
add
push
hlt
inc
jle
roll
nop
inc
data16
sub
push
les
push
pop
cli
push
push
insb
in
sbb
stos
adcb
scas
jge
lcall
push
inc
leave
mov
clc
mov
or
shll
loopne
lahf
or
inc
jge
cmpsb
testb
imul
add
rorl
sbb
lret
mov
std
rcl
jge
cmp
or
fldl
sub
pop
mov
xlat
mov
or
loop
or
daa
out
add
int3
push
push
mov
lcall
jno
add
fistpl
adc
daa
mov
je
xchg
subb
sti
rorl
sbb
xchg
lock
cltd
and
push
mov
add
or
mov
and
xchg
jns,pt
xor
bound
incl
orl
movsl
lea
stc
inc
int3
ja
popa
shrb
sbb
push
lods
repnz
xchg
or
pop
jb
and
sarb
aad
jbe
inc
sub
inc
stc
test
out
add
iret
xor
imul
mov
cmc
push
jle
or
xor
or
mov
lock
mov
mov
sbb
jmp
rdtsc
or
adc
sbb
decl
push
lcall
or
popf
lock
and
movsb
cmp
outsl
in
xlat
push
ds
mov
out
or
pop
fs
sub
dec
jnp
lahf
or
xchg
mov
or
aas
call
cli
or
std
dec
mov
or
mov
cmp
add
pop
mov
inc
or
sbb
testb
or
or
adc
in
jne
jo
add
adc
pop
fdivrl
mov
jmp
adc
lods
es
sub
lret
outsl
in
movsl
push
js
xor
rcll
add
pop
rorb
cmp
ret
or
bound
lret
icebp
outsb
or
mov
jmp
cmc
pusha
insl
inc
xor
mov
mov
or
add
mov
insl
ljmp
incl
rorb
arpl
js
push
and
or
sti
xchg
shlb
dec
scas
enter
loop
call
popa
inc
mull
or
xchg
frstor
enter
jge
mov
lea
out
stc
in
shrb
fs
cmp
sub
aam
dec
mov
push
sub
mov
popf
test
push
dec
fstpt
cmp
push
adc
add
dec
jmp
mov
sbb
int3
ds
sub
dec
jne
xor
adc
outsb
sbb
lods
mov
fmull
dec
jmp
mov
inc
les
or
fsub
std
sbb
xor
fimull
cmp
xor
xor
xchg
xchg
or
aas
pop
xchg
sub
push
xchg
insb
push
sbb
daa
es
or
mov
dec
insb
jmp
xchg
stos
pop
cwtl
les
subl
adc
sub
data16
push
arpl
test
jl
fistps
cmp
jp
cmp
dec
adc
dec
imul
popf
jno
test
xchg
inc
in
mov
movsb
ds
or
out
out
push
div
sub
sbb
cmp
scas
mov
cmp
call
jbe
int3
incl
cmp
inc
adc
sbb
leave
inc
jg
cmpsb
fildll
cmpb
movsb
sub
jae
or
inc
fs
icebp
in
or
aaa
push
pop
sbb
scas
or
mov
mov
adc
pop
lahf
jo
shll
sub
test
mov
sub
push
aam
sti
push
orb
cmpsb
jns
cmp
out
por
iret
sub
adc
sub
add
dec
inc
xlat
mov
xchg
mov
cmp
test
mov
icebp
push
jno
out
lret
in
fisubrl
out
jle
arpl
nop
mov
std
sbb
add
or
loope
mov
push
sub
jge
shl
or
inc
mov
push
jno
jb
clc
test
enter
mov
shll
sbb
push
inc
jb
push
fs
mov
mov
or
lret
cs
sub
push
stos
lea
rcr
sbb
mov
inc
xchg
push
pop
mov
testb
or
daa
mov
daa
pusha
jmp
jp
lock
pushf
scas
inc
or
inc
sti
shlb
clc
or
push
das
in
pop
jl
fs
jb
loopne
xchg
mov
ss
iret
sub
or
add
jl
adc
mov
icebp
loope
sub
in
jns
cltd
sbb
ret
int
pop
add
leave
cmp
mov
or
ja
je
pop
lea
mov
cmp
adc
fs
inc
adc
jbe
loope
sub
lret
rcrb
jle
test
fiaddl
push
call
out
add
sbb
or
in
gs
jne
sarb
and
jmp
push
push
xchg
fstps
xor
lock
xchg
and
jp
test
or
pop
dec
je
rclb
push
or
dec
sub
iret
or
shrb
mov
xchg
lds
lret
in
imul
jl
lods
cltd
lea
cmp
or
movsb
popa
and
out
cmp
push
adc
cmp
pop
jb
jp
or
pop
ret
xchg
std
xor
mov
sub
jge
mov
in
adc
mov
push
or
in
jb
cmp
jmp
sarl
in
add
mov
mov
sub
cmpb
or
in
lods
out
xchg
or
outsl
ret
mov
xor
std
or
ljmp
and
ret
mov
scas
or
mov
mov
ljmp
sub
lock
mov
cmpsl
ss
fisttpll
jnp
insl
shrb
cmp
inc
sbb
sub
or
sahf
and
or
cli
sub
out
lahf
enter
mov
xchg
and
test
mov
sub
mov
cld
sub
enter
aam
pop
mov
add
in
xchg
repnz
and
or
push
sbb
pusha
sbb
movsb
stc
add
loopw
push
push
pop
dec
mov
fidivl
push
das
sti
dec
or
nop
imul
jg
es
add
mov
jbe
jmp
mov
fimull
xchg
jo
dec
jecxz
leave
add
push
out
jg
push
xchg
fmull
std
pop
aaa
mov
in
or
icebp
inc
mov
adc
pop
enter
fimuls
jg
and
mov
mov
mov
or
push
or
sbb
leave
aad
sti
in
or
loop
insb
inc
xchg
cmp
imul
or
imul
rorl
mov
pop
mov
xchg
inc
or
test
add
xchg
cmp
pusha
stos
mov
lcall
hlt
sbb
or
and
and
mov
inc
daa
sbb
sbb
push
and
mov
popf
into
sub
and
fsubrs
dec
aaa
hlt
popa
or
or
adc
js
jo
cmpsb
and
into
iret
leave
or
movsb
lods
jne
mov
rcrb
jg
xor
push
cmc
scas
adc
cmp
and
aam
pop
mov
pop
lahf
fstl
cwtl
ss
or
push
mov
inc
adc
cmpsb
in
aam
sub
cmpb
idivb
dec
adc
jmp
fcoms
arpl
out
loopne
jg
pusha
scas
xchg
cmc
into
push
inc
and
jp
or
and
pop
popa
adc
cmp
into
mov
xor
nop
cmc
aas
or
lret
and
imul
or
mov
inc
call
sti
cld
jge
orl
xor
adc
push
ss
add
xchg
adc
sarl
or
jge
mov
cmp
push
cld
rclb
and
pop
sti
mov
rorb
idivb
pushf
dec
mov
inc
jb
outsb
pop
dec
cmc
adc
imulb
push
add
push
test
pop
fsub
out
gs
jp
mov
mov
movsb
pop
push
or
add
push
mov
into
and
fxch
xchg
or
xchg
cmp
jo
dec
pop
cli
inc
add
hlt
fs
jns
push
sub
cmp
and
or
mov
xor
bound
cmc
mov
or
sbb
mov
cmp
or
shlb
lahf
jno
pop
sbb
repnz
jae
xor
jle
stos
jb
sar
sub
add
inc
xchg
test
aaa
adc
inc
mov
inc
push
add
imull
and
inc
test
pop
inc
test
mov
xor
imul
and
mov
xchg
or
mov
sub
adc
je
inc
sahf
adc
stos
jmp
popf
jb
or
or
in
mov
cltd
xchg
lret
imul
or
repnz
push
ljmp
jge
sbb
sbb
add
int3
sub
pop
decl
xor
xchg
push
fwait
xor
cmpsb
insl
cmpsl
push
in
or
cmp
jnp
popa
addr16
push
or
jno
outsl
jecxz
movsb
or
xchg
push
xchg
or
in
pop
lods
sbb
or
push
in
or
jo
in
mov
lahf
mov
int3
pop
mov
or
mov
adc
mov
xlat
inc
outsl
fcmovnu
mov
dec
movsl
nop
or
xorl
sub
ljmp
cmp
ret
test
in
push
outsb
xchg
lret
repz
xchg
or
dec
dec
stc
mov
xchg
push
cli
add
fisttps
dec
das
insl
mov
xchg
fwait
aaa
or
xor
inc
mov
icebp
or
lea
mov
push
xor
pop
or
cld
sub
out
adc
inc
data16
test
negl
cmp
imul
jmp
iret
push
gs
cmp
xor
mov
imul
adc
mov
adc
dec
into
mov
push
or
pop
adc
dec
nop
or
cmc
and
sbb
cmp
movsl
or
ficomps
dec
and
rcrl
outsl
push
loope
pop
dec
xor
or
ljmp
lods
push
out
cwtl
fmull
ljmp
mov
jb
push
push
lds
lods
sbb
xor
dec
or
test
xchg
or
popf
or
popa
sub
push
outsb
push
dec
or
lods
add
out
daa
call
popl
loop
cli
ret
xchg
or
dec
cwtl
clc
dec
fdivs
aas
lods
mov
and
popf
data16
or
stos
jmp
cs
aad
xchg
lcall
lret
pop
clc
frstor
add
adc
leave
xlat
jne
dec
int
push
test
loop
mov
insb
xor
inc
pusha
mov
and
out
or
add
or
and
ja
xchg
or
movsl
data16
dec
mov
sbb
sti
jbe
test
sub
jge
adc
aas
sub
daa
inc
cmpsb
das
push
sbb
lods
sbb
in
sbb
push
and
icebp
pop
inc
loope
or
sbb
xchg
sub
or
stos
call
or
cli
enter
and
xor
xchg
pop
rcrl
cmp
or
ds
pop
dec
or
fwait
out
dec
cmpb
or
xchg
dec
ja
inc
out
hlt
or
dec
jmp
cmp
lock
inc
pop
mov
adc
xor
das
xlat
and
arpl
jno
pop
pop
push
sub
push
clc
push
inc
mov
jbe
sbb
stos
adc
int
sbb
jge
mov
add
stos
pop
push
or
adc
or
rcll
enter
or
jl
add
cmpsb
or
xor
adc
lea
or
and
test
orl
sbb
cmp
cmp
cli
in
inc
sub
fcomps
mov
sub
or
sahf
or
cmp
inc
jp
repnz
pushf
sbbl
testl
push
or
ljmp
test
add
scas
push
push
aaa
inc
pop
lea
dec
sbb
shlb
loopne
or
enter
xchg
leave
ljmp
bound
xor
test
xchg
or
cmpb
fistps
push
ja
test
lea
mov
mov
gs
cmp
notl
mov
pop
inc
rcrb
xor
repz
test
push
loope
push
fsub
push
ja
or
ret
or
in
mov
jne
or
mov
lods
dec
pop
dec
or
in
and
inc
int3
add
dec
mov
xchg
mov
mov
or
lret
adc
push
dec
out
push
decl
xchg
int
sbb
adc
mov
or
lret
or
mov
or
push
add
mov
mov
scas
and
test
ficomps
sbb
nop
sub
data16
aas
test
iret
out
cli
mov
push
out
mov
mov
or
icebp
pop
and
idiv
les
or
jne
scas
or
sti
mov
xlat
adc
mov
mov
adc
pop
xchg
sub
inc
notb
sti
insl
or
gs
xor
adc
int
jle
jg
movsl
add
fiadds
push
ljmp
test
ret
jbe
out
outsl
pop
aas
cltd
outsb
or
add
cmp
cli
jp
mov
adc
sbb
sub
mov
fnsave
pop
insl
pushf
pop
mov
fwait
xchg
andl
dec
or
arpl
popa
adc
and
mov
xchg
mov
dec
nop
rol
cmpsl
into
imul
sub
das
fmuls
data16
dec
div
inc
mov
fmul
ret
or
shlb
sub
mov
push
imul
xlat
rorb
arpl
out
sbb
stos
mov
inc
mov
push
call
sub
gs
pop
or
repnz
mov
mov
add
or
mov
les
add
add
or
adc
lods
cmp
data16
fsubrl
or
mov
pop
or
push
jecxz
movsb
repz
jp
sbb
ljmp
iret
push
lret
jmp
pop
xor
cmp
sbb
fdivrs
push
mov
loop
testl
cwtl
bound
mov
icebp
jno
and
ret
mov
pop
aad
or
jo
or
xchg
imul
das
cwtl
cmp
push
lcall
and
aaa
sbb
lods
out
or
mov
jb
xor
sub
xchg
inc
aaa
cwtl
mov
pop
sub
repz
jb
cmp
cld
andb
fninit
ja
andl
xor
dec
jge
or
pop
pop
fistl
or
aaa
insl
jg
pusha
dec
mov
into
nop
call
add
bound
hlt
cmp
adc
movsl
in
cld
push
sub
js
xchg
stos
scas
rcr
pop
loope
ss
xorl
jns
push
mov
es
cld
add
sub
or
fmuls
orb
pop
pop
xor
dec
mov
push
jmp
adc
or
mov
or
dec
cs
jg
repz
fldl2t
push
or
cmpsl
loopne
imulb
and
mov
sbb
xorb
or
fsubrl
int
add
push
loope
or
and
jmp
push
and
outsb
aaa
enter
cs
mov
test
xor
fisttps
push
bnd
clc
or
insl
or
add
aam
jmp
stos
inc
ss
cmp
scas
jne
rcll
pop
loope
inc
and
or
mov
out
shll
sbb
pusha
aaa
add
inc
dec
xchg
inc
stos
mul
or
repnz
es
mov
jecxz
out
shll
or
ret
or
repz
push
imul
lahf
adc
in
outsb
dec
jns
and
xchg
imull
mov
popa
pop
cs
hlt
adc
push
insl
and
mov
je
ljmp
adcl
or
andb
dec
add
mov
jge
pop
mov
jo
fadd
arpl
lea
gs
mov
pop
lret
inc
push
or
rcr
loope
out
in
or
mov
aad
fs
pop
loop
inc
jne
fisubrs
jl
add
inc
xor
mov
insb
ret
jle
xchg
pop
cmp
es
mov
sub
sbb
lock
in
cld
cwtl
or
inc
or
cli
mov
pop
cltd
or
popf
sahf
aam
cmp
ret
dec
bound
jmp
sub
imul
inc
push
mov
insl
xor
das
jae
jecxz
out
or
pusha
cmp
pop
lods
push
mov
ja
out
and
or
mov
mov
icebp
lea
cmp
fs
rclb
or
ficoms
popf
push
inc
ret
or
sahf
rcrl
push
cmpsl
jno
or
aaa
pop
xchg
dec
inc
fisubrl
aam
push
dec
mov
in
and
or
push
aaa
and
in
sbb
adc
test
ficomps
dec
je
pop
sub
and
faddl
push
sub
pop
movsl
and
sub
pop
or
jge
mov
testb
jecxz
ret
arpl
in
lret
sbb
sub
popa
inc
cmp
mov
or
stc
push
mov
ljmp
sub
fwait
icebp
jo
inc
movsl
int3
or
sbb
xor
and
jo
cmp
shrb
push
enter
jg
xchg
xor
std
cmp
lret
ljmp
jle
enter
leave
jecxz
push
std
imul
mov
xchg
and
xor
push
mov
sbb
or
add
stc
repz
rcrb
mov
mov
sbb
adc
mov
lret
or
add
jmp
sbb
cmpsl
mov
out
sub
push
or
cmp
dec
or
daa
fwait
mov
mov
jp
mov
inc
push
test
push
inc
cmp
push
mov
cmpsb
les
rorl
or
push
jl
or
mov
add
sti
cmp
daa
cmpsl
arpl
mov
loop
sbbl
cwtl
stos
jmp
cld
push
or
xchg
or
gs
ljmp
in
aad
daa
xor
xchg
and
dec
cmp
or
sbbb
mov
stc
jmp
jmp
leave
mov
pop
adc
arpl
mov
lret
and
jns
loop
and
sub
in
rcl
or
fildl
aas
xorl
push
push
js
dec
pop
sbb
or
mov
or
dec
mov
mov
push
ja
incl
xorl
xchg
in
loopne
test
lret
stc
jl
mov
leave
loope
or
subl
or
sbb
cmpsb
cld
in
cmpb
sub
inc
cmp
xor
xor
roll
rclb
push
lret
jmp
pop
adc
pop
mov
pop
pop
out
xchg
sub
or
jecxz
les
inc
cmpsb
dec
mov
or
scas
pop
outsl
es
mov
addr16
jno
out
sbb
jle
in
nop
adc
or
mov
jecxz,pn
or
insl
mov
dec
dec
xor
js
loop
or
jmp
dec
mov
push
xor
push
xchg
or
fidivrl
ret
in
xchg
jmp
xchg
insl
cmp
popa
ljmp
mov
les
mov
rorl
ljmp
and
inc
movsl
xor
or
sahf
xchg
test
add
or
outsb
scas
mov
enter
mov
jp
jl
xor
and
inc
ja
push
pop
subb
das
add
repnz
adc
out
scas
or
push
cltd
idivl
fbstp
xchg
gs
shrl
xor
and
hlt
sti
test
and
jb
inc
sbb
js
stc
rorl
and
cld
rorl
bound
inc
add
js
pop
or
xor
sub
movsl
lea
jae
dec
gs
push
xor
repnz
pop
jecxz
or
sbb
mov
jbe
mov
pusha
adc
or
bound
inc
dec
add
and
xchg
ret
orb
fistpl
push
jne
scas
mov
mov
jb
pusha
dec
hlt
or
mov
mov
arpl
inc
int
adc
fs
inc
stos
dec
icebp
xor
push
or
ror
sbb
bound
jb
shll
xchg
leave
cmp
test
or
jbe
out
mov
insb
insb
push
or
je
jb
enter
push
adc
aas
inc
sbb
push
sbb
dec
repz
xchg
mov
cs
jg
mov
or
mov
ljmp
sbb
ja
mov
push
jae
pop
fdivrs
cmp
sub
jmp
aas
or
inc
cmp
and
push
or
lods
jb
adc
outsl
cmp
inc
int
sub
push
ljmp
aam
ret
xor
cwtl
lret
add
mov
cmp
mov
or
dec
mov
or
cld
mov
mov
dec
testl
push
or
retw
cmp
gs
shlb
inc
or
rcll
dec
cmp
jg
cmp
stos
mov
es
or
jns
mov
lods
xchg
or
nop
add
or
sbb
push
xchg
mov
inc
mov
fadds
add
clc
aaa
div
xor
or
dec
testl
jmp
mov
mov
dec
ds
mov
dec
pop
xchg
add
sbb
ljmp
ficoml
rorb
lds
and
push
test
mov
pushf
sbb
in
frstor
or
out
xchg
mov
dec
adcl
out
add
div
mov
loop
jge
xchg
adc
sub
imul
pop
orb
aad
das
mov
xlat
loopne
es
cmp
test
in
push
pop
adc
sti
adc
sbb
sbb
leave
jbe
sub
test
pusha
pop
mov
ljmp
pop
int
leave
mov
mov
fmull
scas
jne
or
pushf
inc
jp
pop
ds
or
xor
jle
popa
xor
fwait
sbb
sub
push
or
or
shrl
call
inc
bound
push
xlat
in
les
rcrl
push
and
loope
repz
jg
repnz
push
fisttpll
or
aaa
gs
aad
or
sub
pop
xchg
lds
jns
movsb
aam
orl
inc
and
lcall
test
dec
sub
sub
push
adc
in
lods
mov
out
jne
jg
sbb
inc
xchg
imul
inc
or
push
pop
cli
or
xor
shll
cmp
or
jnp
sbb
mov
stc
pop
sub
mov
imul
jge
sub
pop
mov
cltd
fnstenv
or
mov
jnp
pop
rolb
loopne
movsl
inc
movsb
jl
clc
test
cmp
xchg
push
and
adc
xor
mov
push
jecxz
or
mov
ljmp
rorl
or
jp
movsl
into
pushf
or
leave
cmp
jb
add
or
minps
enter
or
xchg
xchg
cs
cli
stc
and
hlt
jecxz
jae
or
mov
fistpll
in
movsb
push
xchg
mov
inc
add
xlat
pop
or
or
mov
or
filds
ja
outsl
aam
push
int
pop
push
sbb
cwtl
sbb
repnz
cmp
scas
stos
pop
or
jl
test
jbe
xor
dec
push
adc
inc
cmp
fildl
adc
sahf
and
cmovp
int
xor
mov
shll
gs
dec
push
fcmove
lock
scas
xor
cmpsb
cmp
fsubrs
adc
xor
repnz
in
lcall
push
loope
cmp
in
lret
fidivrl
bnd
in
adc
mov
or
mov
dec
push
test
pop
or
fwait
sub
and
js
sbb
mov
mov
loopne
aas
and
push
ja
jmp
orl
adc
mov
jecxz
pop
jno
or
sub
mov
or
inc
in
stos
sbb
sub
pushf
jno
push
enter
jo
push
rorb
push
dec
mov
sti
adc
xchg
and
xchg
loopne
pop
mov
outsb
lahf
outsl
sbb
xor
movsl
sbb
adc
or
test
stos
sub
nop
ret
sbb
mov
outsb
push
mov
mov
cmp
mov
or
sbb
ret
ljmp
fstl
pop
jmp
lea
in
es
or
sbb
jnp
or
cmp
not
test
jmp
idivl
mov
data16
hlt
jns
or
int
enter
mov
or
icebp
lcall
lods
enter
jmp
push
ja
sbb
cmpl
arpl
push
push
adc
mov
aam
ljmp
xchg
or
inc
es
pop
cld
mov
fisubs
jmp
mov
fwait
andl
dec
or
stos
sbb
add
mov
lods
adc
jmp
lea
mov
in
scas
pop
push
or
int
repz
sbb
iret
push
mov
xchg
xchg
lret
cmp
lcall
mov
out
or
in
mov
and
rdpmc
xchg
ljmp
mov
into
inc
icebp
adc
in
lret
or
test
fwait
adc
mov
or
in
add
leave
push
pop
sbb
dec
stc
sub
test
add
cmp
inc
fstpt
pop
inc
lea
lcall
jbe
xor
cmpsl
sbb
int3
push
subl
dec
test
push
movsl
std
or
or
pop
adc
sub
into
shll
ret
adc
enter
out
xchg
je
test
and
in
xchg
call
daa
loope
and
adcl
mov
lret
inc
xor
mov
js
imul
or
ret
pop
sbbb
adc
repnz
vprotw
pop
or
adc
cmpsl
mov
out
mulb
jg
jbe
xchg
loopne
mov
xchg
dec
test
push
cli
jo
push
pop
cs
or
mov
dec
jle
test
nop
in
push
sub
fs
push
lds
pop
or
fisttpl
dec
stos
xchg
adc
int
mov
jl
adc
cmp
addr16
xor
call
push
clc
push
cmp
movsb
nop
shr
lcall
imul
and
pop
pop
jne
lock
or
jmp
cmc
jns
or
add
inc
or
lods
out
pop
sub
xchg
and
xor
mov
jp
mov
insb
jne
xor
aaa
push
inc
push
or
xchg
jbe
into
fstpt
cmc
fiadds
pop
loop
or
and
or
mov
adc
push
js
ret
sub
mov
bound
adc
xor
xchg
jp
in
stos
mov
and
mov
or
insl
aas
lea
lahf
add
dec
in
gs
pop
or
pop
push
add
pop
stos
rorb
xchg
jbe
jnp
add
cltd
and
popf
push
push
and
or
scas
scas
mov
movsb
jnp
repz
fcom
mov
or
fwait
push
dec
mov
sbb
sub
xor
xlat
sti
cmpsl
fmuls
adc
jmp
out
pop
sahf
sbb
or
addr16
dec
jns
ljmp
dec
sub
mov
adc
xchg
lret
aaa
pop
jp
or
setns
and
cmp
mov
push
lret
out
or
mov
ljmp
lcall
imul
jg
or
out
std
push
lea
sbb
mov
dec
sub
lcall
subl
push
jp
es
shll
pusha
mov
push
popa
in
push
pop
hlt
jo
sub
pop
sub
mov
push
sti
cld
xchg
adc
ret
or
xlat
mov
icebp
outsl
or
decl
movsl
jnp
popf
xor
jbe
jge
mov
jp
test
lea
or
push
lock
outsb
or
shrb
mov
or
cmp
push
lods
dec
stc
or
add
lds
fisttpll
xor
insl
adc
stc
fwait
es
movb
mov
push
or
lahf
inc
cmp
mov
sub
fsubrs
ja
imul
add
adc
adc
test
stos
jecxz
and
xchg
or
push
xchg
data16
imul
push
and
loopne
ljmp
add
pop
jno
ljmp
dec
je
or
es
push
stc
jmp
mov
sbb
inc
dec
or
and
pop
adc
jmp
lods
scas
xor
mov
pop
lods
inc
aam
adc
dec
bound
sbb
ficoml
pop
jle
iret
or
hlt
roll
or
push
out
sub
push
stos
push
or
pop
in
add
jb
or
inc
jns
test
dec
xlat
sub
xor
in
and
add
push
adc
inc
push
aad
idivb
andl
inc
pop
shlb
aas
outsl
sbb
leave
inc
and
or
notl
dec
inc
mov
in
xchg
ss
sub
xchg
jb
lods
sbbb
lock
test
or
in
std
or
pop
out
adc
fldcw
into
adc
adc
test
jo
outsl
fs
cld
es
insb
in
xchg
push
add
push
out
loope
jae
subl
push
xor
ss
shr
addr16
cld
sub
lret
jecxz
mov
loope
pop
or
in
mov
stos
dec
icebp
xchg
add
lods
sarl
fidivrl
push
dec
xchg
ss
inc
sbb
mov
cli
pusha
js
pop
popf
or
mov
data16
adc
repz
jle
inc
jnp
cs
dec
sub
lods
push
dec
push
push
or
cltd
cmpsl
sbb
add
stos
xchg
dec
push
jnp
jge
or
mov
fcoms
mov
and
test
pop
push
sub
jns
shrb
loopne
dec
test
xor
sbb
add
lea
in
test
lods
and
or
push
bound
pop
and
filds
or
jnp
inc
or
aad
lds
inc
or
mulb
or
scas
pop
lods
into
enter
fisttpl
jl
and
imul
xchg
les
daa
leave
push
xor
push
push
or
jg
cmp
jle
or
shl
in
pop
xor
cmpsl
and
imul
mov
insb
test
js
or
mov
dec
sbbb
or
bound
add
or
imul
mov
ja
lods
xchg
push
lahf
inc
mov
adc
push
mov
push
or
pop
insl
iret
in
stos
mov
cmp
cmp
push
ret
stos
inc
lock
jno
jp
xchg
sbb
pop
and
jmp
test
in
stc
orl
je
push
mov
sub
ljmp
lock
bound
mov
fdivrs
je
or
leave
sahf
pop
std
xor
mov
and
push
outsl
xor
das
mov
std
inc
jmp
jae
sbb
or
xchg
sub
pop
pop
shlb
push
dec
movsl
xor
sbbl
mov
lods
mov
ret
aas
adc
aam
std
dec
mov
push
scas
int3
cmpsb
dec
mov
mov
sub
hlt
data16
aam
or
jbe
push
sbb
pop
sbb
xchg
sbb
imul
or
xchg
xor
mov
cmpsb
xchg
xchg
fwait
or
push
adc
sbb
call
or
js
or
adc
movsb
outsl
rcrl
or
lret
test
or
ljmp
xchg
or
rorl
scas
les
outsb
loope
jbe
sar
push
or
sarb
test
or
sbb
and
mov
fstl
dec
das
insl
stc
aam
mov
xchg
and
arpl
ja
cmp
mov
xchg
ret
mov
out
xchg
mov
push
loop
negl
xchg
mov
inc
mov
jecxz
sub
pop
imul
or
mov
push
aaa
sub
sbb
repz
push
cmp
push
cwtl
jae
mov
push
lahf
or
in
cmc
pop
cltd
xchg
es
mov
jmp
and
and
pop
cld
adc
dec
dec
mov
movsl
xor
dec
or
mov
sub
test
sbb
pop
in
leave
xor
mov
scas
pop
hlt
repz
cmp
or
sbb
sbb
iret
xor
jno
aas
xor
inc
sub
mov
push
nop
pop
adc
dec
pop
and
and
push
or
dec
adcb
xor
out
xor
xor
pop
pop
inc
jb
jmp
cmp
inc
sub
test
sub
cmp
adc
dec
sbb
leave
and
pop
or
and
or
jecxz
pop
add
ss
push
int
sub
rorb
rcrb
pop
pusha
imulb
dec
jecxz
aas
popa
fs
or
cmp
xchg
into
andb
enter
fldcw
dec
or
shr
push
pushf
or
push
or
mov
aaa
call
lock
jnp
add
addr16
dec
call
or
inc
pop
cmpsl
vrcpps
paddq
jne
cmp
sbb
sbb
and
into
subb
jmp
inc
ret
sub
jg
xor
fildl
daa
dec
xor
sti
cli
or
mov
in
or
jno
orb
ret
nop
xchg
loopne
or
cmp
push
mov
and
or
push
daa
stos
pop
sub
data16
add
out
xor
lret
clc
add
adc
rorl
loopne
fdivrs
fisubl
pop
or
pop
sub
xor
inc
mov
rcr
sti
popa
jnp
loop
xchg
mov
mov
movsl
pop
stc
js
or
inc
fs
or
and
scas
sti
cs
jp
leave
push
push
xchg
mov
call
push
jmp
xchg
add
sub
lcall
jecxz
pop
dec
jns
mov
cmp
pop
lahf
or
hlt
jnp
push
and
add
xor
lds
mov
loopne
xor
or
or
mov
adc
fildll
mov
ja
test
daa
cmp
jns
gs
inc
cmpsb
push
pop
fmull
leave
or
popf
mov
jbe
jp
test
sub
inc
filds
push
add
sub
ret
mov
adc
or
addr16
mov
std
or
out
jne
add
or
jmp
scas
fsub
xor
push
sahf
stos
inc
popa
xor
ds
cmp
sbb
dec
jecxz
in
sub
jge
in
int3
cltd
cwtl
movsb
or
popa
int
push
xchg
or
and
mov
ficomps
cmp
xchg
sbb
les
push
cmpsb
or
std
xor
test
shl
inc
cmp
jno
push
or
outsl
lods
inc
dec
sub
pop
push
aaa
rcll
adc
sbb
and
mov
shrb
jo
jb
or
cld
fs
jne
in
sti
or
and
push
in
xlat
jo
jge
outsl
mov
dec
movsl
inc
adc
dec
popf
pop
adc
ljmp
jg
ret
or
int
insb
outsb
adc
adc
cmp
call
gs
outsb
popa
pop
mov
inc
test
inc
fwait
fs
adc
movsb
arpl
dec
ds
and
mov
xchg
inc
shl
fldt
insb
and
push
xchg
sub
dec
push
ss
jae
idivl
lea
adc
cmpsl
cwtl
enter
jecxz
movsb
ljmp
std
push
sahf
xor
sbb
xchg
pop
jnp
insb
pop
lret
xor
inc
std
pop
mov
ret
push
iret
or
mov
sub
dec
dec
and
cmc
aas
xchg
nop
es
lcall
or
mov
cmpsl
or
sahf
pop
imul
imul
dec
adcl
mov
sbb
add
push
or
sub
mov
push
adc
push
repz
int
and
adc
arpl
or
lahf
pop
iret
sub
out
sbb
push
or
mov
push
push
mov
ljmp
testb
lods
or
xchg
pop
xchg
cwtl
lcall
push
iret
icebp
enter
arpl
insb
pop
mov
mov
rolb
xor
sub
push
or
pop
out
cmpsb
add
test
leave
or
mov
jo
lahf
mov
pop
inc
adc
pop
push
or
mov
imul
push
or
test
dec
mov
jmp
sbb
sbb
mov
jae
mov
or
rolb
sbbb
and
or
dec
das
cs
pop
fs
add
fistps
mov
sbb
loope
in
xchg
xor
insb
mov
ss
leave
mov
or
push
icebp
lds
mov
adc
dec
and
mov
or
cmp
mov
aaa
lret
jmp
sbb
adc
push
sarl
out
xor
jg
in
arpl
xchg
or
sahf
inc
sbb
jle
dec
test
and
and
and
pop
or
fwait
mov
scas
push
fcmovbe
or
cmp
std
cmp
sub
dec
aad
and
sahf
lret
or
in
stos
dec
sub
ret
lcall
xor
xchg
es
jne
clc
pop
scas
pop
adc
roll
loopne
push
push
push
mov
cmpsb
std
adc
xor
or
dec
sbb
or
popf
rol
je
fisttpl
sarl
lods
mov
dec
sbb
or
mov
lsl
daa
pop
js
or
scas
fsubrs
cmc
jp
push
mov
or
inc
sub
shlb
push
popf
arpl
jl
dec
mov
les
xchg
or
in
pop
in
lret
mov
sbb
je
mov
pusha
int3
cmp
or
and
jmp
scas
xor
bound
pop
add
and
mov
ja
and
lea
cmp
mov
adc
loopne
adc
mov
pop
sub
cmpsl
stos
jns
mov
push
jbe
inc
test
inc
scas
add
cmpsb
or
pop
add
or
ret
lods
in
or
jne
and
sub
pop
das
dec
int3
mov
lock
push
or
test
outsl
xor
sub
or
sahf
sbb
sub
jg
nop
pop
aaa
jmp
insb
mov
mov
arpl
dec
les
int3
dec
loop
std
sub
push
and
out
sbb
ret
jmp
and
cld
jb
fnstcw
add
popf
jnp
push
add
inc
fwait
std
push
lock
jbe
push
sub
insl
outsb
push
add
or
or
push
movsl
rol
pop
mov
push
cmpsl
mov
nop
ret
aaa
mov
and
mov
mov
test
or
sti
mov
push
sbb
sub
mov
xor
jg
pop
ret
cmpsb
sbb
iret
je
jns
adc
nop
sbb
ljmp
inc
push
cmp
loopne
pusha
xor
adc
in
push
mov
icebp
jns
sub
push
clc
fwait
inc
lret
and
mov
or
or
mov
out
lods
adc
rcrb
cmpsb
insb
or
xchg
or
stos
mull
arpl
enter
jecxz
addr16
imul
sbb
or
xor
lea
outsl
push
or
mov
lods
inc
mov
adc
jp
fcmovbe
sub
fbld
aaa
push
and
cmc
and
es
fnstenv
dec
and
mov
mov
ficomps
arpl
fsubrs
sub
or
cmp
hlt
or
pop
leave
dec
mov
inc
out
orb
clc
inc
mov
rcll
or
lahf
repz
fcmovb
sbb
push
sub
iret
jmp
stc
xchg
in
add
pop
lods
daa
into
push
pop
ja
add
fs
jno
sub
loop
clc
mov
or
pop
in
add
pop
push
in
lret
lea
adc
int
mov
jp
aad
fwait
and
xchg
movsl
cld
cmp
sub
or
pop
jmp
sbb
dec
mov
daa
adc
ficomps
mov
test
mov
out
jno
cli
push
pop
cs
push
xchg
test
sub
and
mov
fs
dec
test
dec
cltd
repz
popa
adc
push
cli
addl
rorb
jbe
into
inc
outsb
insb
cwtl
subb
jno
adc
mov
xor
push
icebp
and
loope
mov
dec
mov
ret
lea
cs
sub
cmc
testb
xor
imul
or
inc
cmp
or
call
scas
adc
mov
pusha
shl
or
lea
xchg
or
addb
dec
cwtl
decb
jmp
pop
stos
mov
popf
adc
xor
icebp
js
imul
nop
sbb
addr16
mov
out
clc
or
sbb
mov
pop
enter
push
mov
test
push
mov
lock
push
or
das
movsl
adc
rcll
hlt
loopne
jp
js
shlb
push
add
pop
aad
bound
sbb
or
cmpsl
mov
rcll
mov
sbb
push
inc
lea
adc
outsl
push
lret
or
or
out
call
outsb
mov
addb
repnz
rorb
hlt
mov
scas
sbb
or
cld
sub
xchg
xchg
test
or
sbb
hlt
ljmp
cmp
int3
xchg
xor
pop
mov
xchg
in
test
movsl
movsl
sahf
add
test
shll
inc
mov
or
lea
mov
je
and
xor
xor
xchg
pop
inc
or
ljmp
dec
test
test
inc
or
lods
pop
add
test
jns
xor
dec
mov
mov
sub
shll
dec
or
repz
inc
fwait
cmp
mov
or
sbb
sahf
pop
outsb
or
xor
rorl
out
or
ja
sbb
push
divb
lret
enter
mov
arpl
sbb
pop
lea
ret
sub
dec
or
call
pop
push
daa
and
xchg
stos
into
push
aas
jl
cmp
pop
lds
adc
stc
rcll
jmp
imul
jno
orb
cld
pop
movl
repz
inc
sub
sbb
adc
stc
mov
cld
pop
in
dec
or
mov
push
or
stos
subb
cmp
or
sti
insb
pop
loopne
sbb
or
ret
outsl
insl
mov
dec
lret
mov
pop
sbb
xchg
ljmp
js
jge
into
lret
push
dec
outsb
xchg
mov
cmp
lds
lahf
fisubrs
jg
sbb
xor
jb
mov
aaa
mov
xchg
into
fwait
lahf
push
or
inc
dec
fidivrl
arpl
pop
sbb
or
rol
lret
or
insb
aad
das
xchg
into
rorl
gs
test
imul
or
scas
out
ret
leave
push
gs
add
imul
mov
cmp
rcl
or
imul
loop
pop
sbb
js
and
jns
or
bound
mov
cmp
jbe
xor
dec
or
or
push
and
sbb
scas
jno
mov
add
or
dec
sbb
pop
xor
lahf
icebp
and
fdivl
inc
or
in
clc
cmp
lds
sub
repz
or
sbb
mov
fisttpll
cmp
xchg
push
mov
loope
sub
add
cmp
aam
mov
outsb
or
cwtl
adc
mov
xor
jge
ljmp
jecxz
mov
and
test
lods
inc
or
sbb
push
push
add
mov
and
leave
mov
xchg
call
test
mov
mov
or
pop
dec
pop
sbb
push
out
add
mov
inc
xchg
push
nop
adcl
dec
dec
dec
je
pop
jmp
fimull
arpl
mov
or
mov
sbbb
or
fs
or
in
sti
outsb
pushf
push
jae
xor
loope
mov
or
rcr
ss
or
addr16
xor
jne
pop
jle
push
int
aad
fistpl
andb
lcall
inc
inc
movsl
jnp
or
adc
movsl
or
mov
dec
cmpsl
or
jg
adc
xchg
stos
sub
xor
ss
fistpll
inc
mov
or
ficoml
in
mov
nop
adc
sub
pop
out
push
aam
hlt
or
sbb
push
sub
stos
ljmp
ljmp
mov
sbbl
pop
xchg
clc
or
aas
sahf
adc
in
or
adc
xchg
xchg
cmp
or
push
mov
xor
loopne
cmp
mov
shl
leave
xor
ljmp
inc
aas
sbb
push
or
sbb
lea
mov
jp
xor
test
jbe
pop
sbb
pop
add
fmul
sub
imul
sbb
jns
pop
loop
add
and
sbb
pop
stos
in
hlt
adc
pop
fisubl
inc
add
mov
in
or
jmp
mov
xor
pop
add
add
push
mov
test
mov
out
ljmp
sahf
cmp
adc
or
gs
and
add
ljmp
cmp
mov
ljmp
inc
insb
pop
pop
pop
push
dec
fimuls
scas
and
xchg
ds
in
jne
or
xchg
sub
or
lock
inc
push
fwait
mov
fdivr
lret
cmp
or
xor
jmp
or
jecxz
loop
inc
xchg
popa
or
and
test
sub
icebp
adc
or
test
push
and
nop
fisubrs
push
or
movsl
cld
fmuls
aas
pop
jmp
push
mov
enter
xor
push
cmp
sub
rcrl
cmp
jno
dec
ljmp
or
das
in
sub
fs
mov
in
in
or
mov
mov
pop
xchg
xor
pushf
jae
sti
pop
or
iret
lods
nop
jmp
push
xlat
xchg
and
or
push
push
cwtl
ljmp
pop
push
psrad
sub
daa
jge
or
rolb
outsb
imul
cmp
xchg
pusha
or
rorb
mov
mov
mov
insl
jno
rcrl
aas
inc
adc
or
jno
xor
mov
mov
or
or
out
insb
mov
inc
mov
adc
fisttpll
xor
sbb
fmull
enter
jecxz
out
mov
xchg
push
test
cmpsb
fsubrs
bound
mov
icebp
sbb
add
or
sbb
mov
paddq
cmc
lret
es
or
mov
mov
popa
rorb
cltd
lret
xchg
mov
sahf
or
add
andl
daa
test
fsubl
orb
mov
or
inc
aaa
out
mov
dec
icebp
repz
jbe
test
mov
push
xchg
ljmp
push
or
jns
adc
or
into
or
pop
cwtl
mov
cs
xor
std
aam
mov
fs
test
jp
aad
insb
xor
test
mov
xchg
pusha
rcll
mov
pop
enter
add
pop
fstps
leave
test
js
and
test
in
mov
fwait
inc
and
or
jns
fmuls
inc
dec
rcr
out
inc
or
pop
cmpl
test
dec
dec
inc
inc
popa
fisttpll
push
arpl
mov
or
iret
mov
mov
xchg
stos
sub
xlat
adc
dec
or
lret
fs
lret
or
fbld
mov
or
xor
mov
sbbl
or
pop
cld
in
or
outsb
sub
jnp
lds
add
aam
xchg
and
pop
fcoms
cmp
fisttpll
lahf
mov
pop
sub
adc
or
aas
out
or
inc
jg
lods
mov
test
push
push
cli
scas
sbb
pop
push
popf
jne
shl
fisubl
lcall
nop
sbb
or
or
dec
xchg
stos
cmp
jge
mov
imul
and
or
clc
add
dec
sbb
loope
lods
loopne
cmc
or
movsb
adc
cmpsb
fcoms
adc
pop
sub
out
pop
subb
rorl
mov
mov
gs
sbb
sbb
jae
stc
movsl
xchg
push
popf
or
ja
outsl
xor
mov
pushf
or
int
inc
outsb
pusha
lret
pop
or
jl
mov
mov
ffreep
into
in
fnstcw
mov
sbb
adc
mov
hlt
cli
into
or
mov
int3
test
rclb
cs
or
dec
pop
add
xor
in
sub
lret
cmp
fcmovbe
sbb
pop
inc
lret
push
mov
gs
mov
pusha
mov
stos
or
fcmovnbe
pop
xchg
sub
cmc
test
imul
and
sbb
ds
ljmp
repz
mov
mov
lods
incb
imul
mov
or
push
icebp
or
mov
adc
sub
dec
sahf
xor
imul
cld
inc
lcall
test
lret
mov
dec
out
es
or
cltd
push
ret
add
int3
pop
sub
push
adc
fldenv
or
jnp
mov
sbb
dec
jb
popa
xchg
mov
cmp
cmpsl
push
and
adc
cmpb
and
jno
mov
ja
mov
les
fs
push
sbb
sbbb
js
mov
adc
imul
or
sub
std
pop
subl
adc
and
hlt
sarl
xlat
sub
xchg
push
outsl
or
movsl
mov
inc
lock
out
or
mov
xor
pop
ret
aaa
mov
int
outsb
sub
sbb
roll
or
and
pusha
push
out
cltd
stc
sbb
inc
sbb
push
das
mov
inc
outsl
notl
ror
fwait
pop
int
cli
adc
jae
xchg
or
push
and
mov
sub
dec
jge
rclb
jno
insb
or
imul
or
lcall
xor
inc
mov
jnp
jns
mov
std
pop
cmp
dec
cmpsl
les
xchg
cli
jb
push
fisttpl
pop
or
xchg
inc
inc
sbb
push
mov
mov
pop
dec
aaa
or
clc
popf
dec
mov
ret
scas
mov
es
icebp
inc
and
jmp
cld
pop
jb
and
or
stc
test
into
pusha
and
dec
push
loope
or
and
xorb
sbb
mov
inc
push
std
loopne
fwait
in
repz
andb
iret
adc
xchg
popa
shrb
or
sbb
xchg
or
daa
icebp
ja
mov
loop
or
xchg
gs
cwtl
and
push
xor
icebp
pop
ljmp
dec
adc
and
push
mov
test
or
xchg
mov
sub
cmpsl
add
dec
mov
xor
push
sub
test
mov
mov
adc
in
out
mov
das
adc
mov
outsb
adc
lahf
ljmp
and
testb
mov
lcall
dec
mov
jmp
lret
push
aad
loopne
mov
movsb
ds
sbb
leave
es
cmp
ret
xor
push
cmp
stos
xlat
scas
fwait
dec
push
loope
or
xchg
subl
inc
pushl
adc
cmpsb
xlat
mov
or
aam
movsl
sub
or
lds
cwtl
adc
mov
xorb
push
in
lcall
out
dec
inc
lock
cmp
adc
push
or
lods
imul
xchg
xchg
jbe
mov
inc
cmpsb
jb
dec
and
xchg
adc
or
push
xor
sub
xchg
mov
sub
test
adc
or
sbb
ljmp
inc
dec
mov
mov
popa
test
lret
clc
ficoml
out
or
mov
pop
loopne
mov
ljmp
cmp
and
cwtl
ss
and
int3
mov
shrl
ror
mov
hlt
or
pop
fnstenv
push
pop
or
mov
scas
dec
inc
push
add
or
setl
cwtl
loop
inc
dec
mov
push
jbe
mov
or
loopne
icebp
mov
xor
cs
bound
out
or
aad
and
icebp
add
ror
or
loope
xchg
sub
bound
sbb
or
and
or
es
or
add
inc
dec
lods
ja
mov
add
in
or
in
cmp
in
leave
sbb
popa
std
dec
sarb
divb
inc
mov
push
mov
adc
push
adc
fimull
and
push
ret
fs
xor
cmc
jne
scas
mov
sub
dec
mov
lock
mov
or
mov
scas
stos
add
je
outsb
adc
xchg
or
xchg
inc
lcall
stc
lods
add
cld
and
sub
fs
inc
cltd
push
lds
into
push
or
and
nop
test
and
ljmp
fstps
mov
cli
shrl
aas
sbb
jmp
int
movsl
mov
lds
mov
ljmp
push
and
xchg
inc
ds
pop
subb
sbb
jg
mov
mov
adc
mov
xchg
sub
pop
popa
adc
sti
or
adc
lods
or
pop
xlat
dec
jmp
out
cltd
movsl
adc
sub
xor
add
ljmp
lods
loopne
and
mov
or
test
stc
cmp
pusha
mov
sbb
mov
fisttpll
pop
jge
cmp
mov
or
add
or
or
aaa
or
and
inc
into
or
rcr
mov
insb
jae
or
xchg
add
orb
ljmp
cmpsb
cmc
pushf
adc
shrb
mov
push
repnz
fadds
push
xchg
sub
cli
xor
and
sbb
ds
xchg
loop
push
popf
or
mov
cmpsl
aaa
int3
xchg
iret
addr16
iret
mov
cmp
les
out
mov
fistpl
lret
mov
popf
cmp
addl
adc
rcrb
rcr
adc
and
mov
add
hlt
push
std
out
repz
add
fld
or
and
jge
out
shll
sbb
lret
mov
nop
mov
xchg
imul
loop
xchg
xchg
or
mov
insl
or
xor
icebp
or
ja
xchg
jns
mov
aam
aad
xchg
push
or
mov
xchg
sbb
iret
cmp
sar
enter
lahf
cmpsl
sub
push
mov
call
loope
inc
cld
mov
mov
sub
into
enter
cmpsl
sub
mov
ljmp
test
and
cmc
mov
adc
mov
test
mov
xorb
mov
das
test
xchg
scas
sub
xchg
cmpsl
in
and
iret
jl
or
mov
or
sbb
fldenv
fldt
std
lea
lds
add
js
or
mov
or
dec
cmp
or
out
nop
adc
push
ret
fs
or
jg
dec
lret
lret
jno
inc
idiv
pop
aas
or
daa
pop
dec
dec
add
ficompl
pop
insl
jle
stos
fstl
sub
add
repz
or
jbe
adc
jge
adc
mov
ljmp
lods
xorl
daa
and
push
and
push
clc
mov
rorb
jno
cmp
push
loopne
sbb
cmpsb
fwait
or
in
movsb
mov
lahf
xor
je
push
and
mov
shll
jmp
jno
mov
iret
lods
cmpsl
negl
adc
testb
popf
and
mov
sub
pushf
icebp
or
inc
sub
ficompl
inc
clc
add
jle
test
adc
push
jbe
jns
or
xchg
or
cs
pop
cwtl
pop
sub
in
stos
insl
mov
cmpsl
or
mov
pop
lret
js
jp
xchg
rorb
test
xor
cmovg
fxtract
or
cli
or
js
mov
or
cmp
ja
int3
push
pop
lea
sti
cmp
push
xor
add
jmp
bnd
stc
pop
sbb
mov
stos
fldln2
add
fisttps
xchg
sbb
jp
ljmp
pusha
movl
and
test
ret
aas
mov
cmpsl
and
hlt
dec
mov
daa
xor
push
lock
mov
fcoms
push
mov
fstps
pop
xchg
imul
mov
pushl
ficomps
or
sbb
out
jp
xor
cltd
fsubrs
pop
cmp
and
jp
rol
and
dec
fadd
pop
or
mov
jb
or
xchg
push
roll
out
or
push
push
or
shrl
xchg
push
test
pop
loopne
jb
xchg
or
mov
push
insl
add
in
rcl
sbb
test
mov
imul
pop
xor
jo
rep
mov
dec
subb
inc
outsb
icebp
pop
ret
pushf
ret
or
jne
sub
jle
outsl
add
adc
movsl
xchg
sub
pop
xchg
out
ljmp
mov
ret
jb
lret
fnstenv
sbb
or
cmp
nop
bound
pusha
sub
int
out
or
ret
mov
push
and
xor
rolb
lahf
sub
or
or
or
stos
mov
rolb
stc
mov
xchg
push
or
xor
mov
data16
or
testl
sub
or
inc
imul
sbbl
arpl
scas
popa
push
push
negl
fldt
repz
add
push
stc
xor
or
pop
aaa
stos
addr16
push
adc
gs
pushf
xchg
mov
dec
and
inc
iret
pop
adc
cmpsl
roll
or
or
cmpsl
push
or
sbb
xor
adc
jae
adc
inc
or
push
test
sbb
or
mov
les
lods
fcmove
jmp
out
mov
dec
sub
shr
or
jbe
daa
or
mov
loop
out
mov
pop
int
cwtl
or
aam
xor
mov
dec
xor
int
push
pop
sarl
les
aad
lcall
xchg
js
std
cmpsb
test
or
pop
jecxz
loop
mov
divb
in
dec
call
stos
push
sub
inc
leave
pop
and
dec
out
jne
mov
rol
xchg
fistpl
jbe
or
xor
test
adc
mov
popa
lock
pop
out
add
scas
repnz
into
adc
dec
or
das
xchg
pop
or
fcompl
imul
xchg
push
add
push
cmpsb
loope
xchg
int
cmp
ss
call
addr16
xchg
pop
cld
or
into
lds
xor
andb
ret
lcall
pop
and
sub
jmp
and
mov
sbb
lahf
ret
sub
loopne
xchg
jg
popa
sub
sub
pop
or
dec
into
mov
in
cli
pop
or
cwtl
ljmp
iret
dec
sub
sub
adc
pop
cmpsl
ljmp
je
cs
sub
aad
add
daa
add
jecxz
and
sub
push
movsb
cmpsb
mov
jp
call
xorb
pop
sbb
mov
jecxz
in
lcall
push
ds
pushf
pop
push
ss
loope
or
mov
adcl
andb
stos
pop
rcrb
add
cmp
data16
or
es
pusha
out
and
or
dec
mov
jecxz
movsb
jno
add
push
ror
sub
and
adcb
jns
inc
dec
xchg
sbb
mov
add
xor
jne
and
ret
mov
outsl
inc
es
mov
cmpsl
mov
bound
jno
popf
add
sub
push
xor
fnsave
repnz
ja
cwtl
orl
or
ret
gs
mov
repnz
pushf
or
pop
mov
stos
jp
adc
int
jbe
push
or
xchg
in
inc
pop
ljmp
add
sub
mov
ret
xor
or
xchg
scas
jne
mov
mov
sub
xchg
lock
and
dec
sahf
mov
and
jb
adc
xchg
xor
fidivs
adc
push
fs
xchg
sbb
or
xchg
sbb
and
cltd
cmp
sti
push
inc
mov
inc
and
lock
test
sub
je
xchg
sbb
and
imul
in
sbb
std
dec
fisttpll
pop
push
stos
inc
cld
mov
rorl
and
mov
jp
push
fcmovnu
or
in
test
mov
mov
xchg
and
or
jo
inc
mov
mov
dec
daa
pop
sub
add
add
lods
jmp
adc
outsl
loop
out
or
in
sahf
xor
ljmp
sbb
mov
pusha
adc
lret
ret
frstor
mov
repnz
ror
cmp
out
stc
loop
sub
or
and
fisttpll
sbb
add
pop
sbb
sbb
arpl
jbe
cmp
imul
rolb
pop
push
xchg
lds
adc
mull
cmpsl
fmull
enter
jecxz
in
hlt
scas
imul
mov
mov
test
or
lret
dec
push
ss
mov
mov
push
inc
or
add
mov
or
aaa
mov
dec
loope
or
dec
or
les
imul
mov
and
stos
inc
cmpsl
bswap
fstpt
and
or
adc
add
lahf
lds
adc
mov
cmp
dec
cmpsl
mov
dec
inc
mov
sbb
pop
sub
out
sbb
or
les
outsb
aas
iret
ss
sub
popf
xor
mov
lcall
sub
and
call
or
xchg
cmp
popa
sub
outsl
mov
negl
mov
icebp
sar
xor
out
sub
mov
inc
sub
inc
cli
loope
push
lret
sbb
push
cmp
out
pop
inc
stc
dec
add
pop
mov
sbb
pop
mov
mov
sub
mov
mov
adc
sbb
sub
pop
push
shlb
out
test
dec
ficoml
addr16
cmp
icebp
adc
sub
or
mov
xorb
stc
movsb
dec
ret
sub
xor
or
push
imul
or
shll
adcl
xchg
aam
add
push
cld
insb
push
sub
or
lods
lds
mov
aaa
sbb
sti
lcall
test
sbb
ljmp
mov
movsb
jg
rcll
xchg
xchg
push
loopne
or
mov
inc
cmp
cli
ljmp
or
mov
mov
les
sub
notb
lret
or
pop
stos
push
jae
or
push
jne
jge
cmp
mov
cmp
or
push
add
addb
daa
rcll
and
or
sub
cmpsb
pop
ljmp
push
nop
sti
out
or
sub
hlt
and
mov
xlat
mov
jnp
pop
stc
mov
inc
movsl
cli
add
push
cltd
imulb
dec
xor
ljmp
or
jge
movsb
jp
cmp
push
inc
or
popl
push
inc
daa
iret
push
and
or
int3
jns
gs
xchg
in
aam
cs
arpl
hlt
jp
adc
sub
jne
in
push
inc
and
add
test
xchg
xchg
scas
mov
repz
lods
or
add
mov
or
jno
cmp
decl
inc
insb
gs
icebp
or
xlat
or
cmc
shlb
cs
daa
test
imul
jne
das
inc
sub
add
pop
xor
sub
cmp
mov
sub
pop
add
adc
lock
xchg
mov
fsub
daa
lods
jmp
sub
xor
or
or
or
das
xor
or
repnz
dec
fstps
cmp
loopne
mov
push
or
cmp
add
push
ljmp
jb
mov
inc
sarl
mov
scas
push
cltd
pop
stos
std
xor
sarl
mov
push
out
sbb
addr16
inc
lret
sub
mov
jo
mov
add
in
orl
sbb
pop
mov
dec
sti
mov
push
cltd
and
inc
cmp
jae
adc
in
xor
jmp
xchg
pop
pusha
clc
sbb
aaa
or
hlt
imul
pop
ret
stos
or
lret
outsb
mov
cs
cmp
or
stc
mov
or
sbb
mov
out
insl
into
jb
fwait
and
inc
popf
mov
pushf
arpl
or
andl
shl
sbb
fs
adc
xchg
pop
mov
push
add
and
cmp
lea
repnz
movsb
cmp
aas
jecxz
jp
imul
push
xchg
or
xorl
or
sahf
cwtl
push
push
rcll
or
xchg
pop
or
f2xm1
push
test
or
xchg
mov
dec
or
add
es
xor
jmp
mov
cmpsl
or
ds
lods
ret
jmp
subb
lods
jg
mov
or
int
mov
mov
or
aam
iret
repz
and
out
in
adc
js
or
scas
popf
or
loope
push
or
mov
add
xchg
enter
mov
mov
or
pop
pop
cwtl
cwtl
movsl
jmp
xor
jmp
icebp
movl
movsl
adc
lcall
lahf
xchg
xor
fnstcw
dec
lock
popa
sbb
out
add
sub
xor
call
test
inc
ja
push
dec
push
mov
out
sub
je
or
cmp
pusha
dec
and
sbb
mov
lock
lods
mov
sbb
xchg
mov
or
sti
into
aad
add
movsb
ret
out
mov
or
inc
in
xor
int
push
insl
and
loope
pop
xchg
addl
rol
or
jb
cld
push
sub
and
xchg
inc
lock
ljmp
and
or
stc
dec
leave
cmp
adc
cmp
mov
out
cmp
xchg
jmp
push
repnz
dec
fwait
pop
push
ficompl
xor
sbb
gs
and
or
aam
fidivrs
or
xchg
sub
lods
call
mov
mov
add
stos
push
popa
cmpsb
int
dec
and
rorl
ret
test
xor
adc
jp
cmp
pop
clc
pop
jns
adc
shrl
cmp
es
cmc
add
hlt
cmp
dec
outsl
or
rorl
stc
and
mov
out
cmp
jmp
pop
jae
mov
inc
orb
imul
mov
int
jbe
jp
int3
add
call
sbb
add
push
cwtl
add
and
sub
dec
jns
sbb
repnz
jle,pn
sub
sbb
fdiv
bound
and
daa
mov
jbe
pop
jbe
xor
mov
movsb
xor
ss
or
cwtl
push
out
or
jmp
mov
call
ljmp
push
fstps
or
cs
or
xor
lret
add
adc
subl
push
add
mov
ret
shl
test
out
mov
out
or
dec
fistpll
lock
loop
dec
or
imul
fdivs
pop
gs
cwtl
aaa
sahf
or
movsl
xchg
xor
mov
rcrl
decl
cmpsb
negb
xchg
or
mov
or
or
cltd
or
pop
cmp
imul
jo
push
push
or
repnz
fsubrp
and
bound
xchg
jp
push
aas
pop
mov
pusha
std
adc
mov
pushf
mov
pop
xchg
jns
or
shlb
lcall
stos
push
cwtl
sub
in
or
out
pop
xchg
xchg
mov
pop
mov
in
mov
jns
or
sub
or
pusha
cmp
and
inc
lods
in
in
or
jae
outsl
sahf
xchg
movsl
int
sbb
adc
arpl
ljmp
cltd
ret
or
out
cld
outsb
or
clc
cmp
jne
mov
dec
fmuls
stc
push
jnp
sbb
sub
mov
fucom
xchg
dec
insl
mov
or
inc
jo
jmp
xlat
or
lea
mov
sbb
rcrb
jns
or
ret
movsl
xchg
mov
dec
dec
ljmp
pop
notl
clc
or
pop
fldt
pop
jecxz
jle
imul
pop
xchg
dec
jmp
xor
test
push
imul
call
mov
or
sahf
jns
jmp
lret
aaa
push
xchg
out
cmc
and
or
pop
xor
or
ret
mov
shlb
ds
mov
or
adc
or
lods
sbb
fcompl
mov
and
leave
mov
or
rclb
or
fdivrl
les
sti
sub
xchg
xchg
or
jne
lcall
xchg
sub
push
sub
sbb
adc
push
loopne
mov
fidivs
loop
negb
add
xchg
sub
fsubp
iret
icebp
fwait
xchg
or
roll
mov
lahf
jmp
aad
cmp
test
push
jmp
cmp
stc
adc
sub
add
adc
sbb
pop
out
call
imul
pop
inc
dec
sbb
test
out
sub
sub
adc
fldt
jnp
mov
jne
test
nop
or
jmp
stc
cwtl
jo
adc
mov
mov
push
pop
or
inc
cli
jge
cmp
push
or
jecxz
or
sub
pop
je
ljmp
dec
pop
loope
clc
lds
fcomi
inc
lahf
inc
pop
inc
movsb
or
xchg
addr16
or
jb
jns
test
xchg
adcb
ds
cs
imul
or
cli
mov
out
repnz
jge
aam
xchg
popa
mov
inc
cld
sub
and
adc
out
pop
sub
mov
notb
sub
xor
dec
sbb
in
pop
or
push
jge
inc
or
insb
ljmp
in
and
add
mov
ret
xor
lret
lcall
fcoms
pop
push
js
jb
mov
jl
mov
lock
and
sbb
push
pop
pop
add
inc
xchg
cwtl
or
cmp
sub
mov
inc
pop
sub
mov
add
int
aam
and
adc
mov
or
cmpsb
inc
or
push
add
push
jmp
ret
daa
sti
lods
dec
and
cs
pop
and
dec
cmc
movsb
hlt
sub
nop
and
mov
dec
push
js
or
xchg
pop
jg
xor
bound
sbb
or
jnp
xor
movsb
adc
inc
ret
or
cmp
outsb
fs
rorl
scas
sbb
xchg
mov
and
popa
mov
jbe
lcall
inc
xchg
shll
movsl
add
mov
xor
cmp
lods
jmp
sbb
int
das
or
sub
or
outsl
lock
dec
mov
or
cwtl
divl
sub
dec
sbb
or
xor
dec
jno
dec
or
aam
push
pop
lahf
lret
sbb
mov
adc
sub
cltd
push
in
push
lods
cmp
orb
arpl
ss
and
insl
or
inc
ficomps
pushf
shlb
cltd
xchg
fldenv
imul
dec
fwait
pop
std
clc
ljmp
mov
sarl
or
scas
or
or
movsl
dec
in
inc
mov
les
imul
sar
cmp
mov
dec
push
ljmp
cmp
jg
mov
cli
and
in
inc
jne
mov
test
subb
sbb
ljmp
js
ret
test
mov
hlt
push
jbe
loope
stc
or
push
cmp
pusha
xchg
cmpsl
mov
or
xor
adc
cmp
push
insl
lcall
pop
inc
arpl
leave
dec
pop
or
push
int3
pushf
and
mov
xchg
inc
rol
adc
in
push
xchg
fsts
dec
jnp
fisubl
jmp
div
ljmp
enter
jecxz
loopne
sub
cmp
xor
or
push
aad
shl
sbb
cmpsb
mov
xchg
fbld
shl
aaa
int
and
in
shl
add
movsl
iret
pop
mov
in
ss
inc
xchg
or
aaa
mov
icebp
rorb
jecxz
push
jae
adc
dec
mov
enter
ljmp
shrb
or
push
repz
out
sbb
and
sub
in
push
iret
or
pop
xchg
loopne
popf
sub
xchg
sub
aam
movsl
fisttps
inc
add
mov
or
mov
jno
push
mov
sbb
cmpsl
cwtl
pop
add
sub
ljmp
mov
js
roll
jmp
pop
xchg
in
adc
xchg
ret
daa
or
add
pop
jbe
je
or
mov
inc
or
test
jae
mov
mov
inc
sbb
adc
out
push
jns
sub
and
xor
jmp
jno
out
add
dec
cmpsb
popa
push
adc
adc
outsl
pushl
adc
or
stos
jbe,pn
insl
sub
and
aas
fs
or
cli
test
jge
scas
add
fiaddl
lahf
mov
xchg
addr16
push
or
cld
and
push
sub
or
add
aam
push
lods
testb
cmp
cmp
dec
outsb
or
jmp
jno
or
jb
mov
out
add
jg
sti
push
xchg
mov
in
daa
jl
dec
sub
adc
fidivrs
or
mov
xchg
xchg
jle
jo
push
int
nop
mov
aad
sbb
mov
or
sbb
add
icebp
out
bswap
out
adc
mov
test
sub
daa
inc
push
clc
dec
cmc
add
lock
or
push
shl
mul
ljmp
mov
cmp
push
push
loop
iret
fistps
or
mov
shl
mov
push
test
inc
mov
pop
and
or
or
icebp
mov
enter
cmp
push
dec
pushf
sarb
arpl
pop
push
repz
push
pop
and
lods
vmovapd
jne
in
sahf
cmp
inc
and
jbe
mov
lcall
add
mov
js
xchg
or
xor
cli
sbb
push
orb
or
jp
mov
or
xor
ja
lcall
cmp
jl
jecxz
rcll
or
sbb
cmp
icebp
mov
or
push
test
in
pop
cli
inc
cmpl
add
jecxz
ret
sbb
insl
jb
inc
push
xor
or
add
pushf
lock
or
iret
xor
es
je
mov
sbb
or
jmp
stos
addr16
ds
and
aad
sub
lods
mov
mov
or
cmp
ljmp
out
fnstcw
and
fisttpl
mov
lods
jecxz
fisubrs
and
lret
sub
aas
push
add
enter
fcoml
mov
mov
shll
mov
push
subb
call
xchg
fucomp
or
cmpsl
sub
or
fdivs
in
add
or
dec
mov
mov
push
dec
pop
cwtl
pusha
sti
mov
add
lods
xchg
xor
sub
pop
mov
movsl
push
sbb
dec
lods
or
pop
cmpl
out
or
paddusw
cmp
push
int3
or
aad
mov
pop
or
mov
xor
or
cld
add
stc
push
in
sbbl
dec
and
fisttpll
mov
insl
orb
js
ficoml
cmc
or
sub
mov
push
rorb
cmpsb
ljmp
sub
sub
push
ja
mov
cmp
mov
enter
jp
and
mov
push
xchg
sbb
lahf
xor
pop
lea
inc
and
sbb
mov
stos
repz
data16
pop
push
fnstcw
aaa
es
dec
dec
fwait
ljmp
clc
add
mov
jne
sti
adcb
mov
cmpsl
movsb
in
sub
dec
hlt
push
or
add
push
lods
push
or
fmull
jb
cmc
mov
fmuls
xor
jl
repz
test
les
push
add
inc
hlt
popf
stos
and
sub
or
dec
push
sbb
movb
push
push
loop
ljmp
cwtl
sarl
ljmp
or
arpl
adc
xchg
out
cld
aad
adc
or
dec
mov
or
pop
mov
or
leave
call
test
imul
xchg
jne
inc
sbb
ja
pop
cmpl
and
rorl
mov
clc
fildl
subl
test
dec
or
sub
pushf
mov
mov
mov
in
or
push
daa
imul
iret
mov
or
shlb
in
jmp
aas
ret
sub
scas
ror
data16
ds
lahf
or
aas
cmpsb
ss
ret
arpl
jl
jecxz
jmp
or
or
and
or
pop
xchg
andb
lcall
jne
dec
or
mov
jecxz
jmp
arpl
mov
fdivrs
fwait
sub
inc
mov
lea
xor
pushl
xlat
sbb
jle
or
je
sub
dec
xor
jg
cmp
lods
shr
gs
and
stc
sub
scas
hlt
mov
or
cmp
push
dec
inc
clc
add
push
xlat
adc
call
inc
dec
mov
pop
cmpsb
jecxz
cmp
or
hlt
push
sbb
cs
mov
mov
or
test
push
loope
jnp
or
mov
mov
lods
mull
pop
add
or
imul
cld
scas
jbe
lret
out
int
jle
sub
push
inc
test
xor
add
push
mov
adc
aad
ljmp
and
adc
xchg
pop
or
cs
dec
and
pop
or
dec
hlt
stc
adc
outsb
dec
mov
imul
popa
fstl
xor
pop
push
in
mov
cmp
push
xchg
sti
or
ds
mov
mov
sbb
sub
stos
dec
and
fs
pop
int
fdiv
sbb
out
shlb
xchg
or
test
ret
or
inc
push
inc
mov
xor
arpl
push
and
lods
ret
xor
in
pop
scas
jne
pop
mov
test
orb
dec
lock
lret
xchg
bound
mov
imul
adcl
xor
mov
leave
or
lret
test
jge
cltd
sbb
or
cmp
sbb
push
and
or
and
or
ficomps
aaa
or
jb
shll
cmp
xor
sub
jmp
std
shlb
push
mov
cwtl
mov
roll
pop
in
repz
or
push
or
std
xchg
in
out
push
adc
or
push
mov
pop
in
arpl
cmpsl
sbb
or
iret
pop
icebp
jle
sti
icebp
inc
ljmp
subb
outsl
cmp
and
xor
push
cltd
pop
stos
fldcw
ljmp
or
lret
or
mov
cmp
sbb
pusha
xor
and
idivb
or
add
cmp
insl
data16
lahf
fwait
gs
test
sub
lods
or
inc
push
or
aad
ljmp
daa
js
ja
inc
jae
cwtl
add
xchg
pushf
cmc
stc
dec
adc
sbb
inc
cld
or
leave
push
xchg
adc
andb
or
mov
addr16
sahf
test
imul
sbb
mov
xchg
inc
mov
imul
add
pop
dec
or
pop
cmc
lods
fcoms
mov
or
mov
and
or
inc
dec
arpl
or
test
adc
mov
xor
mov
sbbb
mov
xor
jle
mov
cmp
lret
popf
dec
les
adc
sub
or
push
cmp
push
or
enter
xchg
push
std
cmpsl
mov
xor
push
xchg
popf
or
xor
or
pop
std
and
ja
aaa
pop
or
lret
xorl
or
cltd
test
enter
flds
mov
add
lea
and
inc
jbe
leave
test
sahf
mov
push
hlt
mov
add
or
pop
rcll
aas
jb
jbe
cmpsl
shlb
loope
or
adc
dec
stos
cltd
dec
dec
inc
pop
adc
aaa
into
mov
sbb
sub
sbb
or
movsb
dec
imul
sbb
out
push
xor
push
or
cmpl
test
ss
inc
or
sub
daa
mov
lds
mov
aam
adc
inc
leave
mov
cmp
or
xlat
sahf
jmp
cmpsb
js
or
std
jle
or
pop
add
mov
xchg
or
jecxz
dec
or
sbb
pop
or
inc
loop
les
sub
jle
nop
xlat
and
pop
pop
or
push
push
or
enter
sbb
aas
int
popf
bsr
lret
jl
adc
and
xchg
in
mov
cmpsb
loopne
dec
clc
flds
sarl
iret
pop
jl
xor
int3
mov
jns
xchg
and
and
mov
inc
or
lock
sub
inc
inc
jmp
mov
mov
lods
or
mov
scas
push
and
out
or
imul
loop
sbb
add
or
fwait
mov
stc
fnstcw
lock
xchg
enter
or
mov
jp
adc
hlt
loope
fs
xor
and
int3
shll
int
jl
movsb
xor
bound
jo
or
fisttps
cmpsl
sub
call
mov
cmp
es
stc
repnz
outsb
pop
les
outsl
or
or
jbe
push
out
test
or
inc
inc
adc
add
adc
push
xchg
ret
or
ss
jne
out
or
push
stc
jle
dec
pop
shlb
inc
shrl
out
dec
pusha
mov
mov
in
scas
je
stos
cmp
xor
movsb
dec
or
lret
lock
hlt
int3
sub
or
sub
loopne
into
jae
push
out
cltd
jle
pop
cmp
mov
jo
out
cmpsl
cmp
mov
insl
or
outsl
pop
cmpsl
jb
call
js
aas
int
insb
adc
jge
push
std
movsb
pushf
cmpsb
push
or
pop
cmp
or
mov
nop
push
inc
mov
push
dec
adc
fwait
in
pop
or
sbb
mov
mov
mov
in
push
sbb
ds
cmp
call
je
jae
push
lret
jb
push
lods
imul
add
movsl
fcomps
aad
and
pop
xor
leave
fmuls
pushf
inc
popf
ret
or
mov
icebp
outsb
and
ljmp
or
pop
pusha
mov
lea
stc
sbb
in
or
nop
fisttpll
push
add
insl
sub
xchg
inc
sti
inc
aam
or
not
or
repnz
and
mov
jl
rcr
lock
insb
sbbb
in
inc
into
push
enter
xchg
sbb
mull
lret
nop
cmp
pop
fistpl
imul
lahf
xchg
fldt
push
xor
int
or
dec
pop
push
jne
outsl
sbb
ja
fidivrl
or
inc
mov
push
sbb
jle
or
sub
xchg
push
shll
or
add
or
lods
or
cmpsl
or
insb
ds
mov
pop
and
mov
jmp
fmull
fucom
mov
sbb
and
lock
das
repz
push
jno
ss
les
addb
ja
jne
adc
loope
or
push
jmp
or
pop
daa
pop
add
jmp
loop
add
cwtl
je
or
xor
cmp
push
or
jnp
das
xchg
or
aad
push
sub
xchg
es
pop
lods
or
fwait
pop
js
in
add
jmp
sbb
jg
pop
pop
xchg
and
int
shlb
popa
mov
pop
or
sub
rolb
or
sub
fcmovne
lcall
adc
cwtl
dec
ljmp
xchg
jns
or
adc
push
mov
lods
push
sub
mov
lahf
iret
sbb
sbb
cmpsb
jmp
bound
test
lea
loope
mov
adcl
mov
adc
mov
cld
test
or
ffreep
in
jmp
aam
pop
cmp
or
or
dec
xchg
ja
cltd
jmp
or
sub
jmp
enter
shll
fs
into
inc
mov
sbb
ret
xchg
movsl
pop
daa
lret
cmpsl
mov
xchg
mov
sub
jmp
scas
pop
nop
push
mov
mov
dec
repnz
cltd
or
or
lret
inc
stos
movsb
and
int
in
inc
jge
scas
mov
jmp
xor
int3
test
or
xor
stc
lret
in
jl
das
adc
cmp
or
aad
and
sbb
xlat
adcl
rorl
fldl
shl
mov
inc
in
or
dec
mov
test
fldt
outsl
into
scas
xor
xchg
mov
mov
pop
shrl
sbb
mov
cmp
or
push
xchg
push
rcr
mov
aam
push
int
enter
cltd
pop
call
or
inc
mov
int3
sbb
push
mov
xor
bound
arpl
xor
data16
lret
rcrl
jo
mov
cmp
mov
or
jle
ret
pop
adc
psrlq
loop
imul
mov
sahf
test
xlat
add
xchg
shrb
scas
ret
in
movsl
xor
mov
or
or
or
lock
lods
jno
data16
mov
or
cmpsl
enter
jns
ljmp
or
sub
in
sbb
repnz
and
stc
jae
inc
test
cltd
jecxz
add
addr16
mov
out
jns
or
and
aas
inc
arpl
lret
in
jb
sti
lret
gs
pop
sahf
push
aas
out
andb
or
std
mov
or
mov
add
xchg
test
jge
xor
stos
or
in
mov
inc
adc
in
adc
pop
jo
fsubl
pusha
loope
ret
mov
add
fdivr
or
push
icebp
not
sbb
dec
outsl
repz
or
scas
xor
inc
sbb
cmpsb
mov
dec
or
ret
or
loopne
lret
stos
outsb
or
cld
cmp
push
daa
dec
pusha
sbb
sub
in
cmp
pop
sbb
adc
ret
mov
or
and
popf
inc
into
inc
push
arpl
dec
or
cmpsb
sub
pop
mov
outsb
pop
rorb
icebp
add
mov
dec
testb
adc
adc
repz
push
loope
mov
fistl
xchg
dec
xchg
xchg
or
sahf
jp
clc
sbb
sbbb
pop
outsl
in
inc
lcall
aaa
ret
dec
or
enter
or
sub
jmp
mov
lods
std
mov
and
bound
add
lahf
cltd
adc
jmp
or
fdivl
push
pop
mov
jle
lcall
push
pop
fwait
sbb
mov
mov
or
lret
sub
adc
inc
mov
jno
stos
or
loop,pt
or
test
cwtl
fisttpll
pop
fdivs
xchg
in
mov
ja
icebp
and
sub
xchg
and
or
aam
lahf
test
push
ljmp
lret
mov
test
sbb
or
loop
icebp
jne
leave
cs
hlt
or
shll
mov
movl
pop
pop
and
jmp
cmc
inc
movsl
outsb
sti
scas
fistpl
stc
sbbl
test
dec
testb
fwait
sbb
int3
adc
loope
mov
sbb
cmp
movsb
sti
xchg
stc
das
jle
mov
fs
sub
jp
mov
sti
cmp
cmpsb
loope
push
roll
and
mov
repnz
or
out
mov
aad
pop
inc
or
pusha
icebp
add
lcall
xchg
or
popf
jmp
jbe
push
test
push
mov
jecxz
test
popa
xchg
sub
adc
inc
push
cmp
inc
or
pop
jnp
pop
xchg
and
sub
pop
icebp
add
ficoms
adc
push
push
adc
push
pop
or
shl
sbb
adc
stos
jne
push
int
mov
dec
icebp
mov
xorb
push
jb
push
test
and
fistpl
pop
dec
sbb
xor
push
notl
cmp
outsb
push
sub
adc
dec
or
mov
roll
xchg
or
cltd
inc
rcr
fcomps
xor
mulb
movsb
or
or
or
cli
pushf
push
sub
pop
inc
and
mov
insl
jmp
addr16
and
test
xchg
xor
jns
int
xchg
sbb
or
aaa
ja
hlt
xchg
or
mov
mov
lea
fnstcw
xchg
pop
jmp
aas
mov
bound
mov
dec
out
int3
lret
hlt
and
ja
movsb
orb
and
sbb
pop
sbb
stos
lods
pop
add
rolb
sbb
jb
lods
call
or
loopne
add
mov
or
xor
sub
or
xor
mull
or
sub
and
dec
push
or
lock
out
or
mov
orb
dec
sahf
push
jmp
xchg
mov
call
cmp
xor
cli
sub
fdivs
add
out
sub
cmp
push
aaa
notb
out
pop
in
push
and
dec
fidivs
jmp
or
int
xchg
mov
or
pop
push
xor
ljmp
mov
or
data16
inc
push
fwait
sub
cmp
cmpsl
inc
rorl
sbb
lahf
ret
sub
insb
loop
jo
inc
and
mov
mov
sub
sbb
dec
sti
out
out
and
ljmp
adc
aaa
loope
or
mov
fcoms
push
cld
fnop
ljmp
xchg
rcrl
push
lret
or
outsb
sub
cmp
sub
aad
and
mov
frstor
lahf
insl
divl
or
inc
shll
lea
jne
dec
and
mov
and
nop
sbb
shrl
leave
xchg
mov
dec
add
cwtl
pop
stc
in
negl
jmp
add
jecxz
icebp
mov
xchg
mov
xor
mov
adc
sbb
shlb
lods
enter
sub
or
clc
fwait
aaa
mov
aam
xor
aad
or
xor
in
mov
cmp
dec
ds
enter
mov
shll
lods
mov
mov
gs
mov
leave
or
push
mov
pop
repz
add
sbb
aam
les
imul
xchg
inc
bound
or
or
std
add
inc
daa
sbb
lea
loop
or
xchg
dec
cwtl
inc
int
sbb
adc
repz
sbb
shrb
xchg
mov
push
aad
rcl
or
loopne
ja
cmp
adc
xor
sub
mov
imul
inc
sub
sbb
clc
adc
or
push
sub
lods
sbb
addr16
int
std
test
shrl
popa
dec
xchg
lods
ljmp
jecxz
mov
or
addb
imul
pop
xchg
aad
lea
sbb
dec
lock
scas
inc
dec
int3
je
les
test
ss
mov
inc
xchg
or
imul
sub
mov
pop
aam
aaa
mov
leave
sarl
xor
pop
or
xlat
jmp
das
lods
adc
or
sbb
xor
adc
jg
xchg
mov
ds
aad
cmp
ljmp
add
jne
ja
push
jle
or
sub
arpl
sbb
test
inc
push
mov
stos
data16
int
or
jge
dec
sti
sub
push
mov
pop
pop
xor
loopne
pop
or
shll
cmp
adc
or
sub
xchg
and
jge
mov
loop
jnp
mov
or
pushf
fdivl
pop
decl
js
or
sbb
out
xchg
push
cli
std
stos
pushf
and
addb
mov
pop
icebp
dec
das
add
push
inc
mov
pop
or
fldl2t
pop
loop
cwtl
or
and
xchg
or
pop
movsl
cmp
hlt
jns
inc
push
and
pop
mov
lret
inc
js
inc
dec
xchg
mov
sub
imul
clc
or
fiaddl
mov
ret
dec
jg
or
and
cmp
inc
loop
shll
adc
push
lcall
dec
jbe
xchg
clc
push
int
popa
push
add
xchg
ret
inc
in
cmp
or
sub
loope
sub
dec
dec
je
rorb
jae
mov
lea
lret
je
mov
shrl
xchg
inc
cmp
inc
in
or
cs
pop
sbb
stc
dec
dec
mov
add
arpl
or
jo
dec
or
sti
out
cmp
pushf
insb
and
fisttpll
sbb
mov
or
cmpsl
xchg
adc
aas
lods
ljmp
std
xor
jge
push
sbb
loop
xchg
mov
cmpl
sbb
data16
out
pushf
push
cmp
outsl
cmc
add
lock
movsb
mov
cli
add
adc
jle
lret
adc
or
ljmp
sbb
mov
push
or
dec
sbb
jl
scas
adc
mov
xor
jmp
pop
push
shl
ljmp
add
mov
mov
stos
outsb
shrl
mov
popf
mov
or
jno
stc
mov
mov
sbb
aad
fnsave
insl
adc
rcrl
xchg
cmpsb
lods
arpl
lret
xor
or
inc
and
out
out
sar
sbb
sub
les
mov
idivl
popa
pop
adc
or
enter
jecxz
or
imul
cli
xor
xchg
mov
mov
sbb
jne
or
enter
push
cli
sbb
mov
aaa
subb
das
or
mov
cmp
lods
out
mov
fsubr
jmp
dec
ljmp
in
add
mov
xlat
add
ljmp
lods
xchg
sub
cwtl
xchg
or
inc
mov
dec
inc
nop
jmp
std
repz
or
sub
iret
movsl
fsts
xchg
pop
jno
xchg
imul
sub
sbb
or
push
adc
push
subl
sti
std
rolb
sbb
jp
xchg
icebp
mov
pop
mov
rcl
popf
jmp
push
test
jmp
adc
cmp
mov
sub
add
add
rcrb
test
sbb
sub
push
mov
and
dec
adc
and
sub
int3
or
lods
rolb
or
adc
lret
adc
imul
dec
lods
int
or
clc
pusha
sbb
cmp
adc
int3
mov
push
adcb
lods
movsb
scas
lret
adc
cmp
sub
xchg
xchg
xor
and
ret
add
arpl
movsl
inc
push
sub
ficoms
ss
fs
cld
push
test
sub
mov
push
enter
popf
dec
stos
cmp
dec
mov
push
sbb
test
pushf
hlt
or
jg
dec
cmp
inc
sub
lods
cli
mov
push
or
sub
xlat
mov
jle
sbb
or
lea
fcoms
sbbb
lahf
rcr
mov
lret
imul
int
cli
cmp
or
mov
push
jle
push
das
and
inc
jmp
xchg
or
add
or
or
cmpsb
mov
or
rcll
movl
and
or
add
xor
ja
popa
cld
pop
subw
push
add
scas
out
out
sub
shr
pop
jp
test
pushf
sub
inc
fistps
lcall
lcall
push
jle
or
cmp
scas
fldcw
sub
jns
int3
add
ds
cmp
iret
pop
repz
scas
hlt
popa
xchg
xor
or
mov
int3
inc
push
and
jnp
xchg
add
push
xor
bound
fisubrl
add
call
fdiv
fistpll
pushf
orl
xlat
das
sahf
sbb
or
push
enter
fisttps
xor
lret
jbe
fs
inc
or
inc
mov
mov
orb
cli
mov
or
popf
ret
jne
pushl
sub
inc
and
dec
shrb
mov
adc
push
or
mov
add
in
sahf
adc
jno
xor
xchg
dec
xchg
push
sbb
or
xor
lret
push
jle
jae
or
adc
sub
dec
loope
add
out
sbb
mov
ret
clc
testb
lock
add
ljmp
aas
mov
into
push
push
sub
sar
insb
xor
mov
pop
mov
or
xchg
mov
or
call
leave
mov
sbb
cmp
push
xchg
lods
in
sub
jo
dec
outsl
mov
stos
insl
sub
fisttpll
pop
xor
sahf
and
mov
adc
loop
fidivs
lea
movsl
xchg
ljmp
pop
leave
ljmp
or
sbb
lods
ret
sahf
push
mov
daa
xchg
or
insb
in
mov
stc
test
xor
fucomp
aaa
in
ret
stc
jo
fwait
cmp
mov
inc
or
lret
and
mov
dec
xor
or
sbb
dec
fwait
cmp
popw
shll
notl
jae
or
pop
sub
outsl
adc
push
or
xchg
pop
or
ljmp
push
les
hlt
pop
mov
mov
sbb
inc
push
pop
jecxz
mov
je
pop
idiv
sub
movsl
cmc
and
es
mov
or
mov
imul
out
mov
cmp
or
fisubrl
pop
sub
mov
rcrl
or
stos
push
push
jp
cmpsb
or
lea
orl
jl
iret
icebp
push
into
xchg
or
add
ljmp
fwait
push
arpl
push
add
fnstcw
dec
mov
loop
hlt
mov
lret
cwtl
stc
inc
mov
inc
add
pop
rorl
cmp
icebp
lcall
sub
aad
fimull
push
xchg
fwait
or
cmp
push
and
icebp
cmp
add
or
sub
stos
inc
call
pop
lods
or
inc
gs
stos
jmp
sub
mov
rcrb
sub
jo
or
shl
test
dec
cmpsl
xchg
mov
sti
clc
jge
adc
mov
push
mov
xor
andb
or
das
sbb
sub
fistpl
inc
sub
js
insl
sbb
lret
clc
lahf
sub
cs
add
jmp
mov
fdivrp
cmp
mov
sub
jb
cmpb
mov
ret
pop
lcall
sub
dec
pop
notb
adc
xchg
cld
mov
out
or
jg
fistpl
xchg
or
inc
repz
dec
out
int
cli
in
and
rcll
xor
cmp
cmc
jle
test
nop
pusha
sub
imul
jo
pop
or
cltd
sbb
lret
sbb
and
jge
push
add
xor
push
push
fisttpll
fdivr
xor
or
shll
repnz
out
dec
ret
add
and
out
push
push
push
leave
cmp
or
fwait
cwtl
mov
out
or
jnp
movsb
pop
mov
inc
push
dec
int
lods
or
or
les
mov
inc
fistl
pushf
lret
sub
inc
and
ret
pop
push
jno
add
push
add
sbb
and
or
add
cs
xorl
bound
and
dec
scas
xlat
and
jmp
sarb
fwait
pause
js
sbb
andb
cli
shlb
add
cmpl
pop
fwait
mov
xchg
scas
fildll
push
push
ja
pop
sub
push
cmp
mov
xchg
loopne
std
sub
js
or
stos
push
popf
sahf
shlb
inc
jbe
and
test
push
repnz
push
push
push
je
cwtl
and
pop
das
cmpsl
ret
push
in
sbb
jle
and
pop
mov
sub
loope
adc
inc
sbb
or
or
cli
fcomps
dec
mov
call
push
decl
add
adc
lret
scas
lea
mov
imul
and
popf
lods
out
or
dec
add
mov
cwtl
mov
popa
push
add
cmpsl
xchg
in
out
aas
push
or
std
mull
xchg
push
fistps
sarl
sarl
lret
sub
repnz
add
and
push
or
and
sbb
mov
inc
sub
clc
xchg
or
jo
sub
and
call
sub
sti
push
cmp
aad
mov
or
pop
or
jns
or
and
shr
cmp
rorl
imul
pop
outsb
test
and
fcomps
mov
ljmp
out
sbb
or
test
xchg
sub
or
arpl
or
movsl
fcmove
mov
push
and
or
push
jl
roll
xchg
xchg
or
les
loopne
data16
dec
div
int3
pop
adc
mov
jecxz
mov
pushf
sbb
or
mov
iret
mov
or
loop
sbb
mov
mov
jge
mov
sarl
dec
add
lea
mov
jmp
lret
insl
mov
dec
push
cmpsl
inc
es
ds
cmp
sbb
xchg
insb
xor
push
fdivl
mov
mov
inc
pop
and
push
or
jno
repz
aas
sbb
pop
andb
mov
iret
or
fwait
xchg
fisubl
in
cmp
xor
adc
or
cmp
daa
dec
ret
outsl
mov
loop
in
imul
arpl
xor
cmp
cs
outsb
pop
lret
and
push
data16
test
sbb
clc
or
xor
or
sub
pop
or
push
hlt
leave
shll
mov
inc
lds
sub
cmp
hlt
pop
and
je
or
pop
subl
sub
filds
fcmovne
dec
xchg
cmpsl
popl
ljmp
andb
popa
jge
push
fsubs
adc
pusha
or
into
cltd
dec
mov
movsb
sub
cmp
outsb
test
in
or
in
mov
sub
scas
out
lret
push
add
inc
lahf
cltd
lods
or
into
jle
js
and
or
push
test
lds
or
jl
adc
sbb
fs
adcl
cmp
adc
pop
adc
mov
push
pop
adc
push
or
xchg
shll
fsubp
or
cli
fldl
pop
or
fdivrs
mov
jecxz
fidivl
cwtl
insl
or
in
nop
leave
iret
or
sub
dec
mov
or
xchg
imul
lcall
int
jbe
jge
lret
sub
mov
inc
jecxz
push
push
pop
clc
sub
ljmp
jl
mov
popa
aam
in
out
or
mov
decl
sarb
adc
daa
mov
and
mov
or
push
mul
lret
or
inc
scas
mov
xchg
pop
adc
xchg
dec
es
fcomi
or
popf
push
xor
lret
add
pop
lods
or
sti
les
fdecstp
fucomi
cmp
xchg
clc
lock
ljmp
dec
hlt
adc
insb
add
cmp
and
int3
push
pop
cwtl
js
sbbl
xor
in
xor
xchg
add
repnz
adc
or
pandn
ja
in
pop
lea
push
cmp
into
in
hlt
gs
out
int
lahf
pop
or
or
inc
and
rorb
shl
jbe
popa
ljmp
jp
stos
push
add
sbb
clc
rorl
ret
pmulhw
test
out
mov
or
and
or
xor
sahf
mov
fadds
popa
aad
in
aaa
hlt
push
jns
or
xor
dec
lock
pop
sub
idiv
loope
and
cmp
adc
or
and
mov
push
xor
or
jecxz
fsubrs
and
lret
mov
mov
fidivs
adc
mov
aas
imul
popa
and
fldt
or
xor
push
and
stos
jno
and
pusha
in
out
inc
or
pop
push
push
daa
lret
adc
xchg
mov
or
dec
in
stos
imul
adc
mov
mov
and
or
jo
fwait
ljmp
movsl
pop
jmp
or
pop
mov
inc
jo
ljmp
cwtl
xchg
ret
int
lret
jmp
addr16
mov
sub
sub
pusha
out
push
mov
dec
sbb
adc
xchg
or
insl
outsl
jl
fwait
repnz
sub
sbb
mov
mov
cld
imul
test
cmp
dec
xchg
ss
dec
imul
mov
test
mov
outsl
add
sbb
xchg
and
xlat
movsl
xor
or
out
sbb
sbb
lods
or
pop
cmp
sbb
push
aad
cmc
call
pusha
je
jl
or
sbb
or
cmpsl
mov
inc
dec
pop
lds
add
or
adc
cld
dec
push
lods
adc
adc
sbb
jecxz
push
mov
inc
sbb
das
push
aas
outsb
mov
sub
cld
sbb
or
les
loopne
xchg
pop
popf
mov
push
lds
jmp
in
add
or
daa
cwtl
fcmovbe
sarl
aam
inc
xchg
adc
js
or
int3
pop
cmpsb
outsb
clc
icebp
out
or
sbbl
cltd
test
shlb
fcompl
xchg
push
out
int
std
enter
insl
jl
imulb
sbb
xchg
pop
xchg
or
sub
je
or
insb
or
adc
stc
fstps
shlb
sub
or
inc
ror
sbb
pop
cmpl
test
dec
pop
sarb
ret
mov
or
enter
into
or
fwait
testb
sub
outsb
das
fcomps
sub
or
fstpl
push
fadd
or
gs
sbb
lahf
push
nop
sbb
movb
outsl
cld
ljmp
lds
pop
sub
aam
sbb
insl
or
repnz
mov
dec
jecxz
cld
jmp
movsl
or
out
mov
cld
jg
push
in
xchg
pop
or
inc
leave
sub
mov
pop
hlt
cli
lods
mov
insb
pop
mov
adc
mov
cmc
fwait
nop
adc
movsl
es
inc
or
dec
adc
stos
jmp
lret
jo
jge
or
test
mov
dec
push
dec
dec
into
clc
add
or
mov
aaa
loopne
jp
jl
or
nop
cmp
or
push
or
dec
mov
and
sbb
adc
fidivs
lds
inc
sub
pop
pop
and
dec
test
pop
xchg
sbb
in
adc
out
inc
stos
jp
andl
outsb
or
pop
jnp
mov
notl
lods
es
jmp
or
repnz
xchg
data16
mov
push
or
pop
imul
clc
or
and
pushw
or
inc
js
xor
flds
enter
push
cmpl
add
xchg
les
shr
mov
pop
pop
fnstsw
test
ja
or
into
lea
xor
icebp
cmp
or
mov
or
stos
push
aas
arpl
and
les
pop
inc
or
jge
cmp
and
cmp
adc
dec
add
sub
xor
in
mov
cld
or
mov
push
xlat
je
and
sahf
inc
js
mov
dec
lods
inc
xchg
rcrl
movsb
or
mov
aam
lret
xchg
outsb
insb
jae
cmc
rcrb
sbb
or
push
and
pop
or
nop
inc
fisubs
lds
jb
or
xchg
xchg
mov
out
push
push
xlat
mov
lods
push
cmpsb
jge
mov
mov
or
lods
sub
push
mov
insl
in
out
int
out
and
scas
mov
movsl
ljmp
push
mov
inc
sub
add
ja
sti
inc
push
inc
and
xchg
cmpsl
or
xchg
xlat
pop
bound
les
das
scas
pusha
sub
and
ljmp
cmp
sbb
mov
idivb
sbb
cld
mov
xchg
mov
inc
or
sbb
lahf
sbb
inc
or
fldl
push
jne
push
mov
or
inc
rorl
int3
lea
mov
mov
or
jp
test
cmpsl
sub
cwtl
xchg
ljmp
data16
pop
test
jnp
lods
and
addb
sti
or
cltd
xchg
or
cmp
xchg
insb
lods
imul
xchg
repz
or
sub
aas
push
or
rorb
fidivrs
cmc
lods
or
and
addr16
xchg
mov
sub
imul
jge
icebp
mov
and
cmpsl
cld
or
outsl
fnstsw
dec
push
or
jg
int3
rcr
adc
lods
stc
dec
push
fmull
mov
aas
inc
roll
fisubl
push
mov
aaa
adc
test
std
iret
pop
and
pop
jns
or
lods
push
sub
bound
push
or
push
fs
mov
xor
xchg
xorl
xor
mov
or
icebp
ss
and
out
or
push
scas
aad
or
movsb
test
mov
out
or
call
mov
or
data16
ds
or
sbb
jo
rolb
lds
stos
or
sub
push
xor
push
add
rol
mov
movsl
iret
insl
or
mov
pop
xor
clc
or
or
cwtl
cmpsb
inc
or
push
movsl
arpl
into
pop
jnp
sbb
fimull
movsb
xor
jmp
or
inc
in
sarl
push
xor
mov
or
lcall
or
inc
pop
clc
or
xchg
stos
cld
rorb
std
mov
psadbw
inc
xorb
jnp
lcall
sbb
inc
lret
es
imul
out
mov
cmpsb
loopne
jns
mov
icebp
orl
movsl
pop
or
mov
mov
inc
rcr
xor
and
scas
cmp
addr16
iret
push
aad
nopl
sub
inc
xchg
ss
xchg
aam
mov
pop
into
xor
enter
fsubs
or
roll
cwtl
jl
cli
movsl
cmpsb
inc
or
cmp
sbb
or
xchg
in
jmp
and
outsb
or
mov
mov
jnp
cwtl
out
or
jae
inc
add
stos
pop
fisttps
shl
fs
loop
xchg
or
lcall
mov
test
pop
aad
push
add
push
and
cmpsl
mov
mov
or
int
add
sub
insl
fistpll
adc
sub
adc
les
js
mov
or
mov
xlat
or
daa
fmul
or
mov
mov
fildll
or
aad
inc
cmp
jno
addr16
loopne
mov
cli
mov
lods
or
pusha
add
inc
cmp
cld
or
adc
and
rcrb
lods
mov
and
push
mov
mov
dec
dec
ret
cs
jno
or
pop
mov
mov
xor
je
daa
cmpsb
sahf
cwtl
mov
call
dec
and
adc
lcall
xchg
cld
lret
jecxz
or
inc
outsl
or
mov
mov
push
jge
lods
out
cwtl
cmp
sbb
fidivs
faddl
xlat
sub
lock
add
aas
daa
dec
xchg
lcall
stc
lock
cwtl
mov
int3
aam
jno
or
es
sbb
jnp
movsl
stc
pop
or
push
cmp
sarb
sbb
jmp
mov
outsl
push
in
ljmp
mov
mov
les
pop
popf
xlat
adc
push
iret
ret
into
adc
push
push
mov
fsts
sbb
fildl
test
mov
daa
ret
adc
jl
outsb
or
sbb
cmp
add
sub
sbb
enter
push
lods
adc
into
ret
fstpl
jo
cmp
sub
fwait
lods
mov
inc
repnz
loop
arpl
xor
or
scas
jle
and
das
sub
shl
xor
jno
push
xchg
clc
or
pcmpgtd
movsb
mov
adc
or
fwait
enter
jecxz
or
mov
gs
xchg
into
or
sbb
addr16
or
je
out
sbb
pusha
or
lcall
mov
pop
sbb
adc
sub
mov
ds
outsb
jmp
mov
sar
dec
icebp
mov
bound
dec
stos
add
adc
adc
jmp
clc
lods
ficomps
xchg
loopne
xlat
or
sub
pop
sahf
push
add
or
ret
xor
or
xchg
add
push
xchg
fldt
fcomps
in
add
test
sbb
loop
out
test
fcomps
or
fiadds
es
push
adc
mov
mov
iret
imul
test
dec
sub
cmp
dec
rcrb
adc
add
xchg
js
leave
pusha
add
insb
call
fnstsw
push
mov
cmpsl
inc
and
loope
xchg
ror
movsl
mov
jmp
fildl
jno
or
sbb
icebp
outsl
dec
ljmp
js
jns
or
lock
mov
jmp
pushf
movsb
or
fs
mov
in
movsl
adc
push
mov
push
lret
fidivrs
lahf
roll
cmpsb
addr16
stos
cld
push
js
sub
bswap
push
aam
lret
push
orb
mov
test
int
cmp
test
add
xor
fistpll
jp
or
cmp
outsl
inc
sbb
jb
or
and
aas
dec
fnstenv
fidivrl
jmp
push
nop
in
sub
jg
jae
stc
shlb
jmp
and
stos
mov
lcall
jl
jg
push
inc
rcll
daa
mov
clc
mov
adc
rcrl
or
push
sahf
mov
cmpb
inc
pop
and
mov
lds
mov
or
mov
jnp
push
or
mov
fnstsw
or
testb
sbb
out
mov
jp
pop
or
pushf
pop
int
inc
cmp
shrb
add
push
je
cmp
sahf
and
push
jns
adc
imull
jecxz
sub
hlt
in
enter
dec
xchg
mov
and
sbb
and
fs
or
enter
xor
mov
and
cltd
inc
or
jg
cli
lea
mov
std
cmp
call
gs
push
or
bnd
test
add
in
or
test
or
rolb
jmp
push
add
sbb
and
jle
ret
shl
lea
daa
jne
or
mov
cmp
stos
push
xchg
lock
push
or
fimull
add
movsb
je
sub
cmp
mov
jb
and
and
sbb
pop
or
insb
lret
inc
jmp
cmp
cs
cltd
into
sahf
sbb
nop
or
call
xchg
dec
out
js
push
or
add
sbb
or
loop
or
js
cltd
xchg
js
sarl
add
pop
movsl
std
xchg
mov
mov
shll
mov
rorb
cwtl
push
in
push
jae
sub
mov
cmp
aad
fsub
push
mov
and
xor
jge
leave
mov
stos
inc
and
cmp
lods
cmp
cmp
outsl
add
ret
add
inc
pop
cltd
dec
dec
or
jne
add
push
mov
ret
cmp
lret
or
andb
or
in
or
ret
sbb
dec
fwait
xor
push
out
insb
std
test
or
push
inc
in
sbb
or
or
sub
mov
and
shrb
mov
push
xchg
dec
xor
xor
or
data16
dec
push
orb
adc
imul
jecxz
sub
imul
mov
dec
adcb
imul
es
or
mov
ljmp
test
mov
mov
xor
push
or
pop
xchg
jmp
or
and
mov
icebp
or
je
add
pushf
iret
and
mov
lods
ret
lret
fdivrl
push
mov
push
mov
mov
fld
or
repz
cmp
push
push
and
dec
jecxz
cld
popf
aad
and
popa
push
push
xor
sub
or
out
push
mov
fprem1
or
pop
stc
add
call
mov
pop
lds
movsb
pop
adc
sub
xor
xlat
loope
mov
push
jne
cmp
jmp
subl
leave
sbb
inc
and
outsb
fidivl
and
mov
out
jae
jmp
sbb
jne
or
pop
xchg
or
test
dec
in
and
negb
or
adc
aam
xchg
sub
lretw
dec
aam
or
mov
shr
mov
and
test
scas
dec
lock
loope
fldcw
scas
lahf
vmread
or
fisubl
lcall
sub
shlb
mov
mov
lcall
dec
dec
stos
ljmp
adc
rorl
mov
out
jns
or
push
test
xchg
push
dec
aam
jp
ljmp
stos
mov
inc
je
sbb
or
jle
jl
nop
das
mov
cmpsb
push
fs
or
push
outsb
stos
cmpl
lret
mov
or
xor
xor
or
call
shrl
loopne
or
scas
cmpsb
add
xchg
les
mov
push
inc
or
adc
xlat
daa
adc
mov
mov
jnp
jmp
hlt
mov
mov
sarl
or
filds
mov
and
jp
test
fbstp
xchg
pop
mov
xchg
add
out
std
or
jg
or
mov
or
xchg
ficoms
cs
cmp
pop
sub
push
or
nop
stc
push
and
push
push
int3
jne
xor
js
or
sub
push
sbb
add
or
mov
mov
or
icebp
filds
call
sub
sbb
in
gs
and
repnz
mov
cmp
stos
mov
pop
rolb
in
jbe
andl
stos
push
xlat
bound
jecxz
xchg
insb
pop
mov
jne
adc
or
shlb
sub
lock
mov
jle
test
sub
mov
mov
xor
fcoms
push
or
sbb
jbe
mov
inc
xchg
push
inc
or
fbstp
addr16
or
pop
push
or
xor
fisubl
or
ljmp
xor
jb
dec
adc
in
and
or
push
rcrb
mov
xchg
adc
jno
xor
in
aad
push
inc
ljmp
cmp
cmp
movsb
std
das
mov
mov
pushf
sub
leave
mov
mov
sub
sti
in
mov
sbb
mov
xlat
xchg
or
adc
movsl
shll
xor
iret
rcll
mov
push
lea
fmull
lret
or
mov
cmp
mov
pusha
jns
or
sbb
or
mov
and
sub
insl
push
push
rolb
inc
iret
arpl
ret
jp
into
mov
clc
xchg
mov
insb
push
add
xchg
mov
outsb
or
negl
inc
adc
sub
inc
jecxz
mov
dec
int3
xchg
cltd
outsl
or
imul
xor
jmp
or
pop
mov
xlat
push
sub
cmp
cwtl
ds
out
lret
mov
es
sub
mov
or
inc
ds
or
dec
xor
or
lods
test
or
fcoml
inc
or
lret
inc
rcrb
mov
aam
fwait
sbb
pop
mov
xchg
iret
or
xchg
xchg
ficomps
and
arpl
pop
add
push
daa
push
adc
or
push
out
loop
test
mov
xor
sbb
or
icebp
sarl
or
lock
mov
sub
mov
push
ljmp
cmp
dec
jecxz
add
sbb
data16
leave
or
xchg
test
and
insb
inc
movsb
and
sub
sub
rorb
fistl
std
jmp
test
dec
call
in
insb
cmp
or
fdivl
or
adc
movsb
sub
push
das
sbb
fs
leave
or
in
dec
or
insl
scas
sub
clc
loope
push
nop
orl
jl
and
or
fs
or
or
dec
sub
maskmovq
lea
ljmp
lcall
or
dec
dec
pop
cwtl
jmp
cmpsb
test
or
nop
jno
jbe
or
or
insl
in
jg
in
mov
adc
push
or
dec
sub
mov
pop
std
xor
mov
jo
or
jp
xchg
jle
repnz
cmp
scas
dec
sahf
or
and
jb
pop
mov
outsb
mov
lcall
push
jecxz
movsl
clc
sbbb
or
arpl
ljmp
jg
cmpsb
push
or
cmp
out
push
xchg
or
jp
sub
sbb
nop
xchg
shl
or
std
mov
xchg
mov
aam
testb
add
or
scas
lock
out
jmp
pop
jp
pop
loope
mov
mov
or
sub
push
push
cmp
sbb
int3
nop
sbb
mov
stos
adc
test
ret
leave
hlt
or
and
arpl
mov
int3
int
icebp
test
xchg
mov
lods
xor
or
test
stos
loope
or
mov
push
mov
sti
sbb
rcll
movsl
insb
or
cmc
test
cmp
add
mov
xchg
repnz
xchg
stos
stos
and
rorb
cmpsb
sahf
xchg
jbe
scas
hlt
test
out
jns
in
sub
xor
inc
and
test
dec
in
or
mov
sub
adc
xchg
sub
or
movsb
sbb
fmul
lds
repnz
lods
aam
xor
or
movsb
dec
aaa
xchg
ljmp
adc
mov
stos
or
jae
adc
dec
and
nop
sub
out
out
mov
or
sbb
mov
ficomps
clc
mov
lods
cmp
ret
iret
cmp
leave
push
add
push
adc
cmc
mov
stc
or
pusha
popl
mov
inc
cs
popf
or
outsb
sub
mov
or
out
aad
fcmovb
and
testl
clc
fs
outsb
or
jle
mov
adc
sub
or
adc
outsl
mov
pop
insb
xor
ljmp
ljmp
add
imul
push
mov
outsb
mov
and
cmp
or
jmp
jecxz
stc
mov
cmp
mov
ja
lret
int3
fsubl
fwait
in
sbb
inc
mov
sbb
mov
or
hlt
and
int
mov
outsb
insb
cld
mov
mov
mov
cmp
adc
lahf
test
or
repz
les
stos
xor
xchg
decb
imul
adc
cmp
nop
or
ss
stos
jmp
pop
push
push
repz
ja
add
daa
jmp
es
test
loopne
mov
jmp
jb
xchg
cmpsl
or
xchg
or
and
add
lock
adc
pop
cmp
fmull
arpl
lret
mov
cmpsl
out
and
and
leave
sbb
popa
mov
adc
cs
dec
and
mov
jns
sbb
call
stos
or
adc
mov
lahf
mov
mov
and
sbb
cld
xorl
or
pop
jp
icebp
lds
sub
adc
mov
or
sbb
mov
and
rcrl
jmp
add
iret
sbb
pop
scas
fcoms
test
je
scas
and
mov
push
outsl
sbb
out
sub
dec
or
inc
pushf
fcmovu
pop
dec
imulb
test
ret
mov
cwtl
popa
or
push
adc
lds
into
fldt
in
data16
xor
aam
jge
adc
es
bound
loope
nop
scas
or
or
int3
addl
lods
or
scas
out
dec
addr16
push
or
cld
push
mov
or
subb
mov
insl
xorb
sub
dec
scas
sub
jmp
mov
cmp
mov
sub
lahf
data16
sub
jns
or
xor
sarb
sbb
test
out
ficoml
mov
sub
nop
add
or
es
sbb
scas
lret
or
inc
insl
stos
ds
or
scas
xor
xor
mov
in
adc
lea
sarl
rorb
adc
mov
cmpsb
lds
test
push
or
push
imul
iret
pop
and
mov
sbb
inc
sub
pop
dec
sbb
outsb
inc
scas
pop
mov
or
add
lret
in
shl
fnstcw
sti
lds
or
in
pop
pop
dec
sub
push
mov
movb
test
xor
or
jl
xchg
dec
push
icebp
cs
pop
out
jl
or
hlt
pusha
imul
test
or
int3
inc
loop
push
js
inc
or
or
or
bound
inc
add
adc
xor
or
jo
lea
or
into
cltd
andb
or
repnz
pusha
or
outsb
add
or
test
mov
cmp
dec
or
icebp
push
pop
add
push
and
scas
mov
or
arpl
or
dec
mov
out
or
aad
ds
in
inc
sub
dec
pop
insb
or
or
fisubrs
je
xor
sahf
push
jno
cli
or
xor
dec
test
sub
sbb
sbb
mov
in
or
push
dec
mov
insl
test
cltd
decb
add
inc
idivl
push
out
sbb
rorl
and
cmp
adc
repz
fstps
and
aas
mov
or
scas
std
adc
push
xchg
mov
pop
ficoml
jno
xor
mov
push
and
push
push
jb
sbb
jne
and
or
popf
jo
inc
push
mov
scas
pop
sub
rorb
jp
sti
popf
adcb
or
cmpsb
xlat
in
xchg
outsl
pushf
push
inc
movsl
repnz
adc
push
pop
mov
and
sub
lret
or
cmp
xchg
orl
cs
xor
test
sub
loop
adc
ret
and
inc
or
lahf
arpl
sti
xor
inc
sbb
and
mov
in
outsl
shlb
or
lods
xchg
jle
pusha
or
mov
data16
or
adc
mov
push
sahf
outsb
or
in
push
xor
or
sub
fs
push
imul
dec
scas
or
sqrtps
sbb
jp
out
ljmp
push
out
aad
pushf
or
es
or
shll
push
jmp
dec
mov
sbb
ds
pop
dec
adc
cltd
add
lret
sub
dec
push
inc
lods
push
outsl
sbb
fsubl
in
mov
xchg
mov
cmpsl
inc
outsb
repz
imul
jo
mov
jbe
mov
or
es
xchg
ret
sbbb
rcll
add
or
add
loop
repnz
add
popf
xor
or
pop
in
inc
icebp
cltd
mov
ds
mov
lcall
test
mov
sub
das
or
orl
inc
add
adc
leave
lods
bound
addr16
scas
sub
pop
ja
pop
ret
and
daa
and
mov
scas
push
xorl
push
in
dec
sahf
jbe
popa
push
das
mull
push
adc
or
sub
sub
adc
xchg
fs
or
in
adc
jae
ja
pop
sbb
jo
adc
fsts
in
aaa
sbb
ss
push
imul
js
cld
cmp
adc
jns
xchg
orb
cmp
cmp
or
push
lret
popa
add
or
sbb
imul
ret
push
adc
inc
or
dec
sub
pop
pusha
cli
or
sar
pop
mov
or
dec
fidivrl
jecxz
jle
jae
cmc
or
cli
decl
jge
adc
or
xchg
xchg
das
or
int
fmull
mov
xchg
pop
sbb
xor
or
clc
or
js
adc
jmp
jne
loopne
and
fldl
cmpsb
int
pop
sbb
lea
pop
insl
or
and
imulb
cld
rcrl
dec
add
fisttps
mov
imul
inc
testb
xchg
out
gs
jp
mov
ja
insl
aam
inc
or
cmp
add
push
add
test
or
xchg
dec
ret
jns
mov
mov
and
jmp
hlt
dec
in
sbb
int3
aas
insl
mov
mov
dec
and
or
shlb
or
faddl
or
mov
push
lock
or
cmp
shrb
cmp
adc
cmpl
lods
aas
pop
mov
out
push
shlb
jbe
ret
test
and
mov
or
lret
cmpsw
ret
or
in
cmp
jne
ja
push
mov
enter
dec
inc
jb
lock
out
or
or
rcr
sahf
xchg
je
pop
or
inc
outsl
inc
cmpsl
xor
movsl
push
dec
or
and
sbb
call
inc
ror
mov
pushf
jae
xor
sarb
or
adc
mov
out
or
pop
sub
orl
sub
sbb
loop
xchg
iret
fimull
aas
orl
idivb
adc
rol
mov
nop
inc
std
xchg
es
repz
ljmp
ds
sbb
or
dec
jmp
or
es
or
or
pop
cmpsl
sti
mov
and
das
shlb
mov
xor
fwait
outsl
jp
and
xor
cmp
pop
pop
adc
sub
mov
or
lret
jmp
outsb
je
jb
out
mov
and
cwtl
shll
jl
mov
push
mov
mov
cwtl
psubq
push
adc
arpl
sbb
or
iret
xchg
hlt
imull
lods
mov
clc
xchg
ljmp
jno
test
or
imul
scas
pop
adc
mov
mov
sbb
xor
test
loop
cmp
rcl
sub
fdivrs
clc
insb
or
push
cli
decb
xor
xchg
in
ret
or
fwait
or
into
bnd
push
add
cmpsl
sub
pop
xor
bound
repz
adc
aaa
mov
mov
sahf
or
mov
push
dec
mov
js
add
shl
add
mov
popf
dec
or
sub
xchg
xor
lea
aam
xchg
lret
daa
inc
inc
scas
and
mov
lock
dec
lcall
pop
das
jns
icebp
insl
or
mov
mov
sub
test
cmp
xchg
add
or
and
das
pop
arpl
or
sbb
leave
enter
ret
xor
call
jg
and
or
inc
sub
lahf
sar
out
fcmovne
and
or
jns
jae
popa
jo
xlat
push
orb
inc
push
repnz
lock
into
pushf
lret
or
mull
or
int3
sbbl
xor
mov
repz
in
loope
imulb
or
or
data16
dec
cld
and
or
lds
mov
subb
or
and
out
dec
je
in
jmp
or
jl
adc
xchg
pop
mov
jg
or
adcb
lea
dec
dec
cmp
cli
fadd
push
ds
pop
nop
clc
inc
push
test
jl
cmp
or
sbb
or
aam
int
cmp
lea
call
stos
incl
stc
xchg
jp
xor
mov
dec
dec
inc
xor
adcb
dec
push
clc
sub
push
xchg
and
add
cmp
push
stos
cmpsb
mov
mov
push
lods
or
pop
fucom
jge
or
test
mov
or
inc
or
outsb
mul
sub
stc
or
std
mov
out
xlat
lcall
mov
cltd
inc
or
pop
adc
roll
push
push
pop
movb
mov
fstpt
or
xchg
add
xor
push
xor
adc
hlt
adc
pop
mov
mov
int3
mulb
sub
push
sbb
mov
push
add
dec
add
xchg
or
xorl
aam
lahf
lea
adc
or
and
xlat
add
pop
outsb
sti
jno
and
sahf
lret
rol
fnstsw
and
mov
mov
push
mov
jbe
mov
inc
inc
in
jae
jne
aas
mov
sub
out
lock
pop
movsb
or
or
mov
push
pushf
add
sbb
mov
shl
decl
je
sbb
hlt
mov
test
loop
push
lahf
cmp
xor
idivb
xor
out
xlat
jle
and
mov
addr16
mov
mov
sbb
lcall
or
loop
scas
sub
pop
push
cmp
cltd
shll
in
jno
stos
xchg
inc
or
cmp
in
or
push
negb
and
add
in
jne
jo
push
iret
xor
xchg
in
pop
or
fimuls
lods
movsl
mov
ljmp
mov
addr16
xchg
xor
sub
mov
jmp
mov
rcr
add
mov
outsb
push
jno
or
inc
aad
dec
pusha
add
sbb
pop
aaa
fcomp
xchg
or
xor
inc
inc
add
cld
adc
pause
and
mov
jns
rclb
or
mov
push
dec
cwtl
test
ljmp
jecxz
movsl
std
dec
imul
icebp
xor
dec
push
sti
push
mov
scas
or
scas
les
cmc
mov
and
mov
int
mov
mov
or
ret
cmc
out
sub
es
dec
xorl
mov
xor
cmpsl
lcall
or
inc
ret
sbb
lods
sbb
cmpsl
fcoml
adc
or
inc
cmp
jb
xor
sub
mov
or
cli
xchg
sbb
sub
or
push
and
das
or
in
pushf
daa
xchg
dec
mov
mov
xlat
jnp
sub
mov
daa
xor
xor
or
imul
jle
pop
mov
cli
cmpsb
aad
or
test
dec
cwtl
xchg
popa
lret
xchg
hlt
push
xchg
pop
shll
add
inc
loop
loope
leave
popf
or
jecxz
or
test
sub
inc
and
xchg
or
imul
or
jmp
rcll
sub
cmp
ljmp
sbb
in
test
mov
rcll
mov
in
push
xor
cmp
xor
loopne
fistpl
jge
push
xlat
pop
pop
or
cmp
or
icebp
and
lods
orb
cld
or
sub
jbe
or
cmp
xor
into
mov
or
jnp
cs
jmp
or
xchg
add
mov
out
sub
or
rcrb
sar
lods
inc
test
pop
jnp
mov
or
sti
mov
int3
or
mov
cmp
or
jno
pop
mov
pop
stos
or
imul
lods
movsb
call
in
push
pop
das
je
lret
inc
aam
mov
in
rcl
pop
mov
jl
daa
mov
cmp
fistl
push
and
xor
mov
or
xchg
mov
push
adc
mov
inc
pop
fwait
pop
pop
insb
jae
sub
push
push
or
into
scas
sbb
add
ret
and
aaa
nop
inc
jae
or
outsb
xchg
pop
push
enter
jecxz
sbb
xor
mov
or
adc
adc
adc
stos
hlt
mull
add
mov
or
fdivrl
add
xchg
cmp
lret
shlb
outsl
aas
add
cmp
adc
inc
cmpsl
add
repnz
adc
fmuls
outsl
mov
inc
xchg
repnz
dec
aad
stos
adc
sub
into
jbe
mov
or
pusha
or
jl
cmp
and
sbb
into
iret
in
mov
jg
mov
or
xlat
dec
add
lock
cwtl
rorb
sbb
fmuls
bound
adc
xor
jmp
idiv
mov
add
call
lret
or
push
jae
dec
push
cltd
or
inc
mov
push
es
or
out
mov
push
inc
push
dec
test
and
hlt
cli
mov
mov
sbb
mov
std
push
js
push
mov
xchg
into
rorl
imul
jno
mov
adc
mov
sub
in
in
in
sbb
mov
jbe
lock
ljmp
jle
lods
sub
or
pop
or
rcrl
xlat
ljmp
imul
sbb
ljmp
in
ret
sub
fisttpll
cmp
fwait
outsb
cmp
int3
or
adc
pusha
dec
sub
mov
sbb
xchg
ja
dec
sbb
fisttpll
push
or
fwait
pop
pop
add
or
bound
push
pop
aaa
sarb
ljmp
xchg
or
dec
leave
movsl
sub
pop
test
dec
or
jecxz
or
jae
xchg
je
or
imul
push
pop
dec
and
es
loope
or
xchg
mov
jle
aaa
jns
push
dec
stos
gs
sahf
and
ljmp
xchg
jmp
mov
push
xchg
cmpsl
pop
or
pop
dec
imul
sbb
pop
int
push
lods
sbb
fsubrl
jle
mov
or
or
sbb
jns
rcrb
les
test
or
add
outsb
or
mov
or
or
mov
or
and
jecxz
out
cli
or
les
icebp
xor
loope
sbb
aad
movsl
push
test
or
pop
and
xor
int
fstpl
leave
jb
xor
jae
adc
mov
sub
inc
add
xchg
pop
sbb
repz
xor
sub
fldt
pop
pop
inc
test
dec
jno
add
cmp
lahf
or
add
sub
pop
add
int
hlt
movsb
or
add
or
dec
or
rcrb
mov
loope
jl
dec
cmpl
cltd
or
xchg
rclb
sbb
mov
lds
mov
mov
pop
lcall
andl
cmpsb
jmp
ret
ret
or
mov
sub
sbb
jg
daa
push
xchg
ja
iret
inc
jmp
cmpsb
pop
dec
es
mov
pushf
jge
call
ficompl
test
scas
ret
jmp
sub
cmpsl
rcrl
add
ljmp
or
jge
mov
xor
mov
mov
fstpl
adc
shrl
pop
xchg
fsubs
cmp
out
pop
into
xchg
flds
mov
shll
and
scas
mov
stc
push
es
iret
rclb
or
test
mov
push
push
dec
repz
pop
int
cltd
or
inc
push
popf
fstpl
lds
or
sbb
and
fld
mov
or
xchg
mov
pop
ljmp
fists
nop
mov
or
inc
dec
js
cmp
mov
xor
lock
add
es
dec
or
xchg
or
xor
jbe
loopne
pop
cmp
pop
mov
cwtl
repnz
pop
enter
add
and
jbe
jo
test
mov
sub
push
add
loopne
and
fldcw
stos
in
adc
mov
or
mov
lock
cltd
sbb
stos
in
lret
and
mov
rorl
arpl
sahf
int3
mov
and
decl
cwtl
stos
data16
loop
mov
aaa
xchg
loope
out
add
xchg
push
or
cmp
in
out
xchg
push
dec
and
je
xor
outsb
jb
ret
fstl
push
push
sub
mov
es
in
add
or
dec
jno
sahf
or
inc
pushf
jb
pop
push
sbb
mov
aad
or
mov
mov
fmul
jo
cmpsl
sbb
sub
sbb
sti
dec
or
out
lahf
lods
push
pop
push
lock
fldenv
or
adc
movsl
adc
mov
or
aas
mov
daa
mov
or
cmp
fcmovne
pushf
insl
sub
lods
mov
and
mov
or
sbb
sbb
push
imul
push
icebp
fstpl
adc
dec
push
or
fwait
mov
pusha
or
or
push
and
mov
xlat
inc
shl
jno
outsb
insb
cmp
xchg
add
fsubs
or
mull
stos
xor
or
adc
imul
rcrb
xor
cmc
mov
push
jae
and
cmpb
popf
popa
or
ljmp
aaa
roll
out
cmc
lret
xlat
add
mov
ds
add
jmp
mov
or
cmpsl
push
push
lret
or
imul
loop
add
push
xor
fnstcw
fsub
popa
or
imul
push
notb
and
repz
dec
push
sub
xchg
insl
lods
jg
iret
cli
ss
and
dec
mov
push
or
mov
daa
test
lea
cwtl
std
dec
xchg
or
and
or
sub
mov
inc
adc
add
xchg
or
sbb
outsb
or
mov
cwtl
into
int3
add
push
sahf
leave
or
fldt
test
imul
mov
inc
xlat
push
loopne
pop
sub
int3
out
xchg
push
sub
mov
or
orl
test
sub
repnz
int
adc
mov
cmpsl
sub
lods
xchg
sbb
or
movsb
cwtl
lret
je
lea
mov
add
sahf
inc
out
sub
add
sub
ret
or
ss
cmpsl
lcall
mov
xchg
les
or
xor
aam
rcrb
sbbb
rcrl
cmp
fwait
movsl
pop
or
adc
jle
mov
jge
inc
push
repnz
xchg
int3
and
cmp
mov
cli
insb
or
mov
dec
fidivrl
mov
sbb
jbe
out
in
shrl
lea
call
mov
int
xchg
inc
fs
repnz
xor
jg
or
shlb
scas
dec
inc
adc
shll
pop
jmp
cmpsb
in
pushf
out
sbb
dec
or
pop
jno
jae
xchg
in
jo
adc
adc
inc
or
adc
je
or
jae
scas
or
pop
out
es
or
ljmp
or
jl
pop
inc
mov
sbb
outsl
loop
or
xlat
data16
lret
xchg
or
cmc
cs
xchg
or
or
hlt
sbb
cmp
mov
int3
and
or
xchg
shll
or
insl
mov
shlb
imul
icebp
sbb
mov
xchg
adc
mov
cmp
inc
ds
popf
repnz
jl
stos
pop
ljmp
rorb
call
mov
test
pop
pop
jp
push
jns
push
add
cmpsl
lea
out
sub
ret
aas
in
daa
into
jne
mov
sub
xor
xchg
dec
mov
shrl
or
loope
or
and
adc
jecxz
pop
pop
or
or
xor
aam
or
cmpsb
fistps
or
jb
adc
mov
cltd
sbb
cmpsl
imul
or
insl
and
or
or
fsubp
fsubrs
jne
push
xor
aas
cld
or
std
xchg
jo
mov
shll
movsb
jno
decb
jg
jg
or
in
mov
cmp
cmp
imul
or
jo
outsb
sbb
sub
mov
clc
sbb
mov
cmp
ret
mov
outsl
icebp
movsb
movsl
in
xchg
push
pop
sub
std
ljmp
adc
ret
add
cld
call
aam
jne
stos
mov
int
mov
dec
std
xor
or
insb
mov
mov
cmp
fnsave
adc
out
inc
or
fs
arpl
mov
in
and
or
or
insb
dec
add
test
inc
shll
shl
pop
idivl
stc
adc
inc
loope
jecxz
xchg
dec
ss
cmp
bound
or
pop
push
cmp
push
or
int3
add
pop
mov
in
xchg
fs
mov
pop
daa
push
daa
aaa
or
lock
or
add
sub
mov
dec
or
mov
ret
ds
or
dec
es
outsb
add
and
mov
push
fsubrl
cmp
or
subb
je
xchg
repnz
pop
lcall
sbb
cmp
or
or
xchg
in
outsl
popf
loopne
push
sub
mov
push
jmp
push
jl
adc
add
sarl
mov
clc
add
sub
shll
pop
mov
cld
das
pop
adc
xor
aad
test
jge
leave
xchg
sub
dec
cmp
jne
fiaddl
popf
inc
sbb
leave
cmp
call
mov
cmp
jbe
scas
dec
call
sbb
jb
mov
or
sti
cmp
jl
jns
mov
push
fwait
out
insb
ljmp
and
aas
jg
or
and
mov
iret
or
xchg
add
mov
or
ljmp
js
icebp
adcb
push
sub
or
push
addl
in
add
cmpsb
cld
mov
lret
rcrl
fisttps
lret
data16
xor
sbb
inc
cmp
dec
std
mov
jmp
test
rcll
sbb
mov
jmp
shlb
xchg
inc
or
inc
popa
iret
mov
lods
cli
pop
jle
pop
test
push
push
ficompl
adc
nop
cmp
adc
gs
and
push
mov
jp
and
or
jmp
push
jge
cmpsb
stos
lret
mov
xor
repz
stc
push
js
jecxz
clc
cmpsl
or
fsincos
xor
jne
orl
jl
push
inc
or
cmp
rcll
sbb
pop
dec
shl
and
or
mov
insb
or
jnp
repz
loope
jle
inc
scas
cwtl
and
lahf
xchg
inc
shl
arpl
or
push
notb
lea
cli
es
leave
mov
adc
iret
sbb
popf
idivl
add
push
loop
in
xchg
xor
jo
jns
cmp
cwtl
sub
pop
cmpsl
pusha
mov
and
push
and
js
sub
xchg
xor
dec
mov
or
add
imul
mov
push
xor
or
es
lea
adc
gs
or
jmp
pop
jns
mov
stos
mov
jmp
sub
pop
push
test
inc
in
jg
push
lret
out
push
and
adc
ret
cli
ljmp
push
adc
sub
cmp
pusha
sbb
cltd
dec
fmull
mov
mov
inc
push
je
jg
sahf
data16
and
cmp
dec
dec
xlat
lret
add
sbb
ficoml
mov
add
lret
lahf
cmc
xchg
jno
or
scas
call
fistl
push
cld
out
push
or
stos
and
loop
cs
adc
les
cmpsl
jb
out
js
scas
or
push
aas
fcmovnbe
aad
cmp
sbb
std
dec
inc
les
mov
bound
cwtl
push
or
loopne
icebp
in
sbb
int
or
cmp
mov
loopne
jb
es
fisttpll
das
mov
cmc
mov
pop
pop
inc
push
sbb
jge
and
sbb
jle
sub
pop
outsl
iret
adc
cmpsl
repnz
or
in
ret
inc
out
ljmp
leave
ret
rorb
pop
sbb
pop
mov
outsb
fisttpll
or
ficomps
mov
push
pusha
insb
call
fistl
mov
frstor
aam
insl
cmc
cltd
and
fwait
jae
pushf
inc
scas
int3
xor
cmpsl
in
xchg
xor
and
decl
or
xchg
mov
xor
hlt
out
or
fstpt
xchg
pushaw
jns
or
pop
sbb
adc
sbb
jecxz
sbb
sub
cmp
ret
push
xor
mov
adc
pop
js
lret
mov
pop
aaa
sub
or
push
adc
jl
insl
pop
mov
inc
cmp
lea
pop
stc
mov
ljmp
dec
je
leave
jmp
sbbl
inc
jmp
iret
fcoml
add
mov
mov
fisttps
push
mov
or
adc
aas
lods
inc
push
iret
or
xchg
cmp
or
movsl
sti
push
test
add
enter
xchg
arpl
pop
jp
inc
xchg
or
stos
xor
je
arpl
jbe
icebp
or
out
adc
sbb
and
das
inc
test
or
std
popa
cmp
cmp
xor
jne
int
sbb
adc
mov
mov
dec
mov
movsl
mov
adc
call
push
push
rclb
or
sbb
test
fistps
or
sbb
adc
adc
cmp
push
and
or
addb
sbb
or
in
dec
sbb
sbb
or
pushf
scas
xor
enter
test
dec
lahf
xchg
lods
or
jecxz
and
sbb
sub
mov
in
sub
push
daa
lcall
mov
mov
or
test
pop
or
push
jo
adc
or
jge
sti
out
imul
ja
inc
sub
jge
ds
fistps
clc
mov
loope
fidivrl
mov
or
pop
sub
xor
push
shrl
es
push
push
and
pusha
push
cmc
or
mov
mov
test
xor
mov
clc
jg
mov
adc
dec
push
and
stos
add
and
mov
or
push
orps
outsb
cmp
ds
pop
and
xor
ljmp
mov
gs
inc
mov
loope
add
inc
repnz
sti
or
scas
and
mov
sbb
shlb
pushf
lds
sbb
pop
imul
lret
dec
icebp
es
ss
int
addr16
add
iret
ret
aad
jns
mov
out
lds
mov
push
cmp
ja
or
sbb
test
cmpb
ret
or
cmp
or
mov
xlat
or
cmpsb
sub
imul
xor
sbb
pop
lea
or
xchg
cmp
shlb
add
adc
cltd
scas
stos
test
mov
mov
sbb
shrl
fcmovnu
push
push
imul
or
in
jge
xchg
jne
xchg
xor
pop
mov
sub
stc
and
dec
jp
adc
or
and
or
add
je
xchg
sub
mov
mov
inc
dec
cltd
push
ljmp
sbb
or
loope
mov
or
jae
cmpsb
or
movsb
cmp
or
push
mov
mov
inc
and
movsb
fcmovu
or
xor
xchg
dec
sub
cmp
mov
push
insl
std
or
adc
mov
or
ret
mov
adc
cs
sbb
or
out
insl
test
mov
push
add
mov
xor
adc
jo
xchg
lods
mov
add
sub
or
jle
and
jae
add
mov
stc
outsl
lods
testb
xor
xor
stos
push
pop
pop
adc
add
xadd
icebp
ret
mov
or
sub
or
sbb
stc
lods
mov
ja
jp
xchg
sub
jnp
fcomi
fstps
shll
sub
or
or
and
aam
int
sar
adc
insb
push
adcb
mov
mov
divl
adc
cld
in
repz
jecxz,pt
negb
imul
in
shll
sbb
out
imul
adc
pushf
sbb
xor
scas
insb
cmpsl
push
add
in
sbb
cs
outsb
dec
cmp
mov
cmc
cmp
mov
iret
adc
cmpsl
push
jmp
int
aas
dec
jp
int
ds
adc
cld
add
dec
or
lods
je
clc
sub
in
cs
mov
inc
sahf
sbb
push
push
pop
sub
repz
mov
imul
xchg
pop
sub
lret
push
repnz
daa
sbbb
dec
mov
mov
or
loope
cmpsb
das
or
xor
inc
pop
insl
mov
xchg
icebp
fmulp
adc
or
hlt
or
aad
pop
xchg
test
mov
pop
cmp
into
push
inc
mov
add
rcrb
or
mov
test
insb
rclb
inc
push
mov
pop
out
sub
jnp
shrb
xor
sbb
mov
test
dec
mov
push
sub
pop
sbb
jg
pushf
mov
test
inc
daa
cmpb
or
movsb
les
das
sub
or
in
xor
or
push
mov
outsl
or
xor
aam
mov
movb
push
cld
push
testb
sub
xchg
dec
add
pop
jp
addb
test
cmp
ret
test
mov
sub
mov
out
mov
jg
mov
out
xchg
in
inc
jge
lret
or
sbb
or
fildll
mov
inc
or
ffree
adc
mov
sub
push
cmp
or
cwtl
or
pop
or
stos
inc
call
lret
es
push
and
lret
or
sti
push
xchg
mov
or
sub
aas
fmuls
adc
jl
xlat
or
cmpsb
mov
sarl
cs
xchg
push
sti
nop
clc
pop
and
test
sub
pop
roll
es
lds
mov
inc
test
mov
or
mulb
jcxz
or
mov
out
or
pushf
pop
adc
adc
pop
push
inc
sbb
push
test
dec
stc
insl
fnstenv
xor
insb
sub
xchg
lods
inc
jne
sbbl
stc
outsb
jno
hlt
sbb
mov
addb
or
push
int3
dec
cmpsl
inc
js
inc
and
imull
xor
bound
and
xchg
imul
push
pushf
pop
mov
shrb
ja
add
cmp
jecxz
gs
mov
dec
repnz
dec
pop
cmp
push
stos
jne
or
sbb
xorl
cmp
loope
or
dec
push
add
sahf
pop
stos
and
shl
ret
jmp
es
cmp
add
mov
mov
dec
fcoms
lock
lahf
jge
andb
or
cmp
push
je
and
sahf
sub
or
xor
fisubs
pushf
xchg
or
sub
or
mov
push
lret
pop
cmp
ss
cltd
or
inc
call
or
loop
pop
mov
and
pop
lods
popf
fdivp
pushf
push
jb
sbb
xchg
or
arpl
cltd
push
mov
js
adc
pop
or
popa
movsb
or
repnz
fwait
aad
or
cli
test
cmpsl
and
in
push
in
sbb
arpl
mov
xor
sub
jo
cmc
or
fs
sub
pop
jecxz
or
pushf
push
jp
lods
fisubrl
or
call
push
std
insb
movsl
cmpsl
pop
ljmp
jns
ljmp
hlt
clc
ret
mov
inc
dec
lret
jb
mov
xchg
push
cmp
jae
or
rcll
cmpsl
cmp
or
fldl
das
out
or
fwait
or
arpl
fimuls
inc
pop
test
leave
or
imul
fimuls
test
or
je
adc
out
fmul
int3
mov
jecxz
pop
sbb
imul
xchg
push
jns
xor
sub
lods
imul
xor
sbb
lods
push
mov
pop
lods
or
sub
lret
xchg
sbb
add
push
push
cmc
pop
mov
sbb
mov
ja
jmp
mov
cmpsl
lret
in
aam
inc
dec
xor
xchg
add
xchg
or
les
mov
or
sbb
adc
repz
mov
lock
roll
add
sub
or
mov
imul
xor
mov
sbb
lock
xchg
mov
int3
test
xor
adc
loop
mov
adc
sub
or
negl
add
xchg
xchg
mov
mov
or
push
push
or
ds
test
mov
and
int3
add
add
adc
push
shrd
daa
xchg
sbb
ljmp
sbb
or
sbb
decb
divb
adc
addl
adc
mov
ljmp
sub
push
push
adc
mov
shrb
and
subl
sbb
test
mov
push
iret
xor
outsb
fisttps
and
andb
push
pop
dec
cmp
or
adc
scas
push
mov
out
inc
sarl
leave
or
bound
dec
lds
push
cli
jmp
addr16
es
loopne
or
inc
stos
fidivrl
fisubs
jle
andb
push
jecxz
sub
icebp
je
push
jbe
stos
or
jno
sbb
popa
xlat
stos
push
jne
int
sub
jge
je
mov
cld
outsb
dec
xor
test
mov
clc
das
inc
imul
adc
insl
loopne
jnp
pop
jl
mov
sub
cmp
xor
push
dec
or
gs
add
sub
shll
aaa
orl
icebp
ret
pusha
std
pop
or
loop
or
mov
out
into
or
mov
lcall
pop
into
and
jmp
and
push
cld
and
xchg
sub
dec
fstps
std
lret
sub
jmp
mov
pop
jbe
or
sbb
out
fdivrl
or
mov
cmc
xor
xchg
mov
add
hlt
testl
fisttps
lret
fmuls
ja
sbb
mov
jp
je
mov
repnz
sub
cmpsl
adc
adc
dec
mov
jbe
mov
adc
cltd
sub
or
jb
jbe
push
sub
ret
push
in
shl
mov
or
jmp
sub
aaa
scas
push
sbb
xchg
stos
or
mov
mov
dec
pop
in
jp
mov
xor
mov
cmp
incl
cli
or
jecxz
mov
xchg
lods
out
lcall
lds
repnz
clc
mov
fwait
out
imulb
and
xchg
repnz
in
neg
addr16
adc
jmp
dec
shll
ficoml
popa
stos
push
addr16
scas
std
cmc
or
push
aad
idivb
rol
mov
xor
mov
ljmp
test
cmp
mov
and
lock
mov
fwait
in
aas
ss
sarb
lds
sub
inc
dec
sbb
mov
rcll
sub
movsl
xlat
xor
mov
dec
movsl
cld
lock
xor
jae
sbb
ss
repz
movq
xchg
ret
jns
popa
dec
lret
aam
orl
jmp
cmp
push
or
xor
or
inc
mov
mov
fldl
pushf
insl
cmpsl
and
fwait
mov
sub
push
dec
and
push
push
movsb
lea
scas
cld
cmpsl
insb
shll
sti
mov
xor
data16
imul
ljmp
enter
lods
jecxz
lcall
pop
mov
inc
movsl
imul
je
or
dec
fdivrl
outsl
pop
or
js
mov
inc
xchg
sub
add
push
cmc
add
stos
or
mov
sub
lods
test
in
sbb
sbb
add
or
adc
into
sbb
js
pop
push
or
push
loop
lea
repz
push
sbb
or
loope
fnstcw
ror
or
or
sub
aad
push
mov
sarl
daa
aas
or
pushf
mov
jp
icebp
movl
xor
cltd
ds
inc
ret
icebp
insb
nop
repnz
dec
add
mov
sbb
aad
push
jle
hlt
sub
sbb
and
or
or
sbb
or
into
call
test
mov
inc
sub
pop
sub
and
sbb
cli
sar
fisttps
fcmovnbe
std
cmp
or
jo
ret
mov
mov
or
mov
roll
test
sbb
in
ja
add
fs
in
in
imul
cli
lods
push
jg
inc
scas
aad
ja
loope
sub
cmpl
insb
rcrb
addr16
ljmp
call
push
aam
pop
cmpsb
lret
cmpb
push
push
popa
sahf
cmp
dec
xchg
add
mov
out
or
out
xchg
mov
add
or
fildl
pop
or
mov
mov
out
push
jle
repnz
sub
sub
ds
out
push
stos
push
outsb
insb
int
dec
js
insb
push
push
sub
mov
orl
daa
es
adc
rorl
mov
jecxz
or
cmpsb
jae
or
sti
gs
push
shr
flds
fadd
push
and
or
mov
std
dec
sub
jnp
cltd
outsl
mov
lret
cmp
pop
sub
loop
mov
or
or
mov
out
xchg
push
lods
jp
outsb
pop
pushf
or
mov
mov
pop
cwtl
daa
lods
cmp
push
incb
or
cld
sbb
jns
sbb
aad
cs
pop
mov
mov
punpcklwd
idivl
or
rorl
or
lock
enter
dec
sbb
out
sbb
pop
cld
outsl
adc
push
dec
icebp
lea
dec
mov
or
mov
imul
push
jbe
jno
or
mov
or
or
mov
and
lds
jno
mov
dec
das
mov
sub
loope
lock
mov
xor
sahf
push
leave
je
xchg
popf
data16
sarl
dec
popa
inc
cltd
fistps
sbb
or
addr16
add
lret
adc
je
jae
or
cltd
sbb
cmp
or
and
or
and
lods
popf
mov
or
and
sub
xchg
xor
fdivrl
push
jecxz
or
daa
std
fld
xor
dec
sub
shll
adc
or
adc
push
mov
jmp
push
dec
ljmp
sbb
push
mov
repz
loopne
daa
mov
push
push
pop
test
bound
sti
push
inc
xchg
and
pshufw
mov
sbb
mov
addr16
push
push
gs
mov
test
scas
bswap
lods
addr16
ret
dec
sbb
outsb
or
mov
cmp
pusha
push
or
hlt
mov
sub
movsb
outsb
or
out
cmp
mov
inc
cmp
in
ss
jae
les
insb
mov
mov
lea
jmpw
test
ljmp
jecxz
xchg
or
xor
enter
imul
sbb
leave
dec
movsb
int3
mov
stos
or
jle
mov
or
push
int
out
ljmp
fmul
or
pop
in
mov
cwtl
movsb
or
lcall
or
add
xor
repnz
push
lods
and
sbb
loope
fisttpl
inc
xor
xchg
lcall
jo
insl
jno
ret
iret
mov
pop
xchg
stos
xchg
cwtl
es
xor
push
push
add
add
jb
or
mov
sbb
loop
andl
cwtl
ret
xor
lret
jns
pop
mov
icebp
pusha
cmp
js
or
aad
ljmp
int
jge
cmp
add
push
leave
add
cli
sbbl
sub
mov
push
scas
adc
test
xchg
ffree
push
sub
popf
mov
mov
cmpl
or
dec
movsb
cwtl
or
adc
jae
adc
ss
out
les
or
enter
into
andl
push
shr
imul
cmp
mov
out
cld
jae
or
dec
in
shlb
in
or
pushf
shrb
mov
mov
cmp
xchg
push
aam
movsb
sahf
adcb
lcall
and
dec
jmp
or
iret
mov
out
jne
jg
mov
xchg
or
add
push
or
stos
lds
pop
jbe
or
mov
xchg
neg
cmpsb
or
or
nop
sub
stos
lods
push
adc
cmp
es
or
pop
stos
xlat
adc
int
or
aad
mov
jo
xor
jle
push
sub
clc
data16
xchg
mov
rcr
cmc
pop
loopne
pop
lock
dec
stos
or
shr
sub
adc
pop
mov
jno
and
sbb
lock
push
mov
mov
sub
ret
or
cmpsl
scas
imul
shl
pop
sub
orl
push
pushf
sub
inc
dec
pop
xorl
pop
cmpsb
ret
or
cld
lret
fldenv
dec
or
dec
lock
pop
pop
jmp
cs
jns
and
out
and
jne
add
push
or
xchg
sbb
pop
cli
or
fwait
mov
mov
mov
sub
inc
pop
sbb
fcomi
push
jbe
pop
cmp
push
jno
inc
or
loop
mov
or
int
sbb
xchg
or
mov
jbe
in
push
lods
mov
push
add
sbb
adc
ret
jbe
in
bound
int
mov
mov
test
ljmp
dec
cwtl
or
mov
push
sbb
sbb
jb
cmp
or
mov
mov
lcall
push
lret
insl
or
jae
out
cltd
sbb
pop
xchg
cmp
mov
jbe
mov
xor
cmp
or
jmp
sub
gs
lret
outsl
insb
xchg
lea
sbb
ss
fcoms
test
mov
shrb
shrl
gs
jno
orl
fisubs
mov
mov
inc
in
or
fstpl
test
sub
mov
lret
lods
out
push
int3
jmp
sub
pop
ljmp
sbb
cmp
or
in
xor
outsl
inc
arpl
mov
mov
xor
dec
push
pop
shlb
ljmp
cmp
ret
stc
xor
outsl
lret
push
outsb
inc
xlat
or
lods
cmp
mov
inc
push
stc
inc
nop
insl
sbb
pop
imul
jmp
inc
adc
xchg
fwait
test
incb
lcall
or
sbb
dec
sbb
addb
insb
push
fidivs
jge,pn
test
push
test
mov
inc
enter
jecxz
repnz
fimuls
pop
xchg
jg
test
imul
sub
mov
xor
push
insb
in
les
or
push
dec
mov
aas
jnp
pop
pop
or
jmp
mov
adc
jnp
dec
adc
and
dec
push
ret
out
add
popa
std
and
inc
or
rcr
lahf
cli
mov
or
inc
sbb
or
push
cmpsl
push
stos
repz
jmp
and
sub
test
test
and
or
sub
repnz
insb
orl
sarl
loop
jg
xchg
xchg
popf
cli
cwtl
or
mov
and
icebp
or
jge
fmull
ja
aad
inc
mov
ljmp
fistl
in
inc
pop
or
cmp
int3
xlat
or
leave
jns
sub
test
add
mov
les
inc
notl
or
sub
mov
pop
into
fisttpl
imul
xor
inc
loope
popa
xor
mov
or
xchg
in
mov
pop
mov
or
imul
dec
and
mov
cmpsb
scas
or
xchg
cmp
lahf
dec
clc
pop
or
out
jcxz
sbb
or
sbb
lds
pop
mov
lcall
lahf
arpl
and
sbb
or
adc
xor
xchg
add
sbb
and
xchg
or
xlat
jb
or
shrb
pop
xchg
in
or
pop
xor
stos
jle
lods
sbb
arpl
sub
sahf
push
test
outsl
stc
push
int
sbb
enter
inc
xchg
jge
or
mov
adc
or
inc
clc
push
orb
xchg
or
adc
cmp
add
push
test
popa
xor
xchg
lds
or
mov
inc
and
mov
or
jmp
pop
in
push
or
mov
add
scas
push
lods
sbb
sub
pushf
movsb
or
inc
push
orb
add
pop
out
or
stos
popf
sub
lods
jns
out
sbb
out
sub
pop
jae
repnz
test
mov
mov
int3
stos
or
adc
lock
xchg
jge
repnz
popf
mov
pop
mov
or
or
mov
dec
jns
xor
pop
lret
adc
cmp
rcll
and
mov
sbb
mov
sbb
mov
imul
jbe
or
sub
subl
rolb
push
or
or
loopne
xchg
int
aas
or
jne
jo
or
pop
mov
or
test
je
or
repz
sbb
lahf
pop
sahf
mov
adc
xor
into
cmpsl
adc
xchg
sbb
add
or
lret
jmp
lods
sbb
cltd
sbb
cmp
sub
out
xchg
xor
and
mov
arpl
pop
jmp
jp
adc
or
std
mov
or
mov
rorb
sbb
push
adc
mov
or
or
in
aam
xor
sbb
les
insb
dec
and
rcll
pop
jp
dec
sti
or
stos
and
or
shrb
ljmp
movsl
sbb
or
pop
ljmp
ret
fists
and
mov
lahf
or
outsb
sub
pop
jge
cmc
pop
ret
pusha
stos
in
adc
stc
or
lcall
and
pop
frstor
add
insl
cmp
jnp
fwait
ret
imul
arpl
out
or
inc
sub
cmp
call
imul
mov
mov
push
or
mov
xchg
xor
jecxz
in
out
out
inc
or
jle
es
imul
and
inc
mov
mov
pop
jecxz
mov
insb
or
call
jb
cmc
mov
adc
mov
std
mov
or
jmp
into
sub
ds
out
int
stos
pop
and
mov
adc
fsub
adc
sub
push
aaa
cmpsl
inc
add
lods
mov
repz
jg
sbb
dec
inc
les
pop
iret
mov
rclb
idivl
out
pop
push
add
push
mov
test
sti
clc
cwtl
jmp
or
pop
popa
mov
dec
icebp
sub
push
mov
lret
or
xchg
test
daa
or
cmp
jno
mov
sbb
leave
dec
push
mov
jb
fnstsw
mov
push
sti
sbb
and
pop
or
adc
sub
ss
mov
or
aaa
repz
test
dec
and
push
popa
xchg
push
nop
jbe
sub
adc
push
es
into
mov
int
subb
cmp
addr16
dec
in
sbb
push
cltd
out
mov
add
or
mov
or
ss
leave
jmp
aas
sub
jl
add
or
lock
loopne
sub
dec
pop
cmp
dec
mov
sbb
daa
mov
pop
out
loope
jg
sub
in
xlat
or
insl
dec
mov
pop
or
pop
xor
cmpsb
fistl
fidivrl
or
cwtl
nop
jbe
std
sub
jmp
add
jo
or
cltd
lock
shll
or
rorl
push
es
or
sub
adc
shll
fldenv
fs
cmp
leave
cmp
xlat
aad
pop
jo
push
pop
and
sti
mov
rcll
xchg
jns
or
cmp
inc
lret
out
pop
sub
arpl
testb
mov
enter
inc
push
xchg
pushf
std
jns
and
mov
pop
test
pop
push
sub
out
fldenv
and
jns
cs
xchg
pop
add
or
imul
and
inc
mov
and
int
js
mov
push
mov
sbb
lahf
xchg
add
mov
hlt
sub
imul
push
xor
inc
inc
insl
cmp
pushf
jl
gs
fidivrl
icebp
pop
and
xchg
jo
lret
inc
lcall
sub
cmc
push
add
cmpsl
or
mov
movsl
in
stos
enter
lds
adc
sub
xchg
sbb
or
mov
fsubs
dec
adc
and
lods
xor
inc
dec
js
add
jae
ja
sbb
or
lret
inc
pushl
or
in
fisubl
push
jmp
jbe
or
sti
and
or
pop
flds
fsubrp
dec
and
jb
xchg
les
or
push
rolb
dec
std
test
fisubrs
arpl
sub
shll
sar
jno
jmp
mov
inc
jbe
dec
or
mov
sub
xor
sbb
sbb
and
or
jge
scas
or
out
imull
and
sub
push
inc
mov
xor
pushf
enter
popa
jl
repnz
push
ljmp
popf
dec
ret
in
adc
adc
jno
cmpb
pusha
es
pop
stc
ljmp
bound
fnsave
out
fwait
and
xchg
inc
roll
or
or
sbb
aad
adc
or
or
sti
lcall
notl
insl
add
dec
push
push
enter
sbb
and
push
sub
mov
pop
sbb
imul
les
sbb
loope
mov
lock
or
arpl
mov
or
dec
jae
pop
cmc
jb
mov
es
movsb
mov
or
orl
ds
or
dec
sbb
add
or
adc
jno
lods
mov
dec
cltd
fdivrl
das
mov
inc
mov
out
sbb
in
or
adc
xor
sbb
aad
sbb
out
popf
lret
jb
sub
and
jge
cmp
pop
add
or
daa
mov
data16
loop
push
xrelease
or
fdivrp
cmp
pushf
pop
or
pop
stos
subl
popf
adc
lret
aad
sub
test
xchg
in
test
jb
movsb
mov
push
repz
add
sbb
inc
push
or
test
jg
jecxz
enter
sbb
jb
out
jno
or
rolb
bound
and
ja
adc
sub
cld
sub
in
push
lret
push
jp
push
mov
dec
sti
into
or
cmpsl
outsl
andb
repz
das
es
mov
xchg
in
xchg
mov
pop
repnz
xorl
and
pop
data16
cld
push
outsb
sub
out
dec
lds
icebp
aas
aam
xor
pop
addb
sbb
cmp
lock
and
or
nop
in
jne
inc
mov
out
in
jg
fistpll
pop
xchg
sub
pop
dec
rorl
jle
cli
or
pop
movsb
jge
mov
jae
out
and
xchg
jle
mov
nop
or
lahf
sub
push
in
dec
add
ljmp
push
stos
or
sbb
jge
add
push
push
mov
or
dec
mov
or
jl
cmp
loopne
jno
sbb
push
add
cmp
scas
push
sub
push
or
dec
int
add
mov
outsl
xor
pushf
or
mov
or
pop
xchg
out
mulb
jecxz
or
ljmp
jp
sub
push
and
sub
addl
insl
pop
imul
outsb
lods
cmc
jns
add
or
mov
jae
pop
xor
pmuludq
lods
mov
cmpsl
or
jnp
out
jl
mov
or
bound
or
fdivrl
movsl
or
mov
or
push
or
test
gs
int
dec
cmpsb
sbb
je
mov
int3
shrb
jno
test
repnz
inc
add
ficoml
aad
sbb
inc
or
aam
pop
jmp
in
jne
or
mov
sub
dec
mov
cwtl
adc
mov
imul
add
sahf
push
lea
xor
xchg
and
dec
int
mov
and
into
mov
out
sub
mov
xor
daa
cmp
test
xchg
out
push
or
and
push
xor
cmp
jb
outsl
cli
or
fidivl
mov
or
mov
inc
mov
rcrl
jo
or
pop
fidivs
push
out
or
movsb
xor
ljmp
in
adc
stc
jo
mov
or
xor
sar
jecxz
mov
and
xchg
dec
lods
adc
jbe
xlat
push
movsl
outsl
fsubrp
xchg
fistps
or
xor
pop
adc
testl
lea
ret
fnstcw
stos
shrb
mov
cmp
sub
or
mov
mov
or
outsl
arpl
stos
jmp
fwait
jle
cmp
push
test
aas
or
xchg
and
mov
fstl
rcrb
inc
mov
xchg
loope
adc
lods
push
or
adc
and
jl
imul
fnsave
xor
push
imul
inc
nop
and
jo
andl
mov
inc
aaa
cmpsb
sbb
or
mov
or
ja
push
mov
pop
cs
nop
jbe
mov
sbb
ds
xchg
or
nop
fstl
jo
push
xchg
sub
fcoml
or
aaa
inc
scas
lods
and
push
or
outsb
repz
xchg
or
imul
xchg
inc
sub
lods
sbb
dec
push
add
ss
or
adc
das
loop
sub
xchg
sbb
cwtl
dec
jp
dec
xor
mov
push
sbb
iret
jne
sub
push
push
es
push
sub
xor
popl
loope
inc
and
inc
scas
pop
cs
add
or
sbb
mov
test
jmp
jo
pop
add
adc
dec
or
sub
mov
adc
adc
push
xor
sub
test
hlt
or
xor
clc
sub
sbb
add
mov
and
jp
jb
mov
push
imul
das
bound
mov
pop
push
dec
or
dec
dec
mov
pusha
push
in
scas
cmp
or
or
and
lahf
jb
add
and
out
xchg
or
mov
aad
cs
xchg
lds
jb
push
fstpt
lcall
jmp
dec
push
ja
push
jmp
or
mov
cmp
dec
mov
mov
enter
test
or
sub
mov
pusha
xor
orb
daa
jle
lds
cmp
lret
call
xchg
or
push
inc
es
out
stos
pop
addr16
and
add
or
xor
push
jmp
jle
adcl
push
int
loopne
inc
in
jl
in
test
cmp
int
pushf
xor
and
fbld
mov
ror
xchg
push
lcall
je
ret
daa
clc
aas
xchg
movsb
add
or
mov
test
jp
or
pushf
mov
adc
cwtl
pop
xchg
push
and
add
push
xor
test
rcrb
or
adc
xchg
rorl
mov
pop
sahf
xchg
ss
jbe
push
or
adc
aam
or
in
int3
shrl
jb
push
or
lcall
or
and
enter
or
jl
mov
mov
pop
daa
mov
cmp
adc
jmp
lods
cmp
push
shl
cmp
iret
cmpsb
jecxz
insb
xor
rorb
out
test
in
mov
inc
adc
push
add
adc
test
mov
mov
pop
divps
jne
mov
or
lock
insl
in
xor
jo
movb
es
cld
mov
fcom
inc
divb
jb
sahf
ret
subb
aam
cmp
sub
fisttpll
call
les
out
or
ljmp
push
and
push
in
xchg
mov
ss
mov
mov
adc
add
mov
jecxz
daa
push
movsl
dec
cs
sub
popf
or
mov
call
or
jno
lds
cmp
aas
inc
push
ss
mov
or
mov
jb
in
cwtl
sub
mov
and
push
pop
je
xor
or
scas
jge
int
inc
movsb
cmp
xor
and
js
xor
stc
adc
fisttpl
clc
ljmp
call
xchg
lret
mov
mov
mov
jmp
jge
or
jne
mov
sub
insl
lret
fwait
cmpsl
jl
lret
inc
cltd
arpl
sar
adc
fsubs
or
aam
rolb
sub
insb
or
out
dec
cmp
or
lds
divl
out
or
adc
pop
mov
cli
push
or
stc
icebp
loop
jno
push
xchg
hlt
add
cld
imul
es
sbb
dec
or
mov
fwait
push
repz
push
ret
dec
dec
jno
cmc
cmp
andb
stos
inc
mov
les
int3
mov
cmpsl
mov
or
dec
aad
mov
adc
jnp
or
out
clc
xchg
mov
or
mov
xchg
jns
bound
sub
or
sbb
and
les
mov
pop
iret
mov
fwait
xchg
cmpsb
dec
popf
jmp
shrb
and
push
add
adc
sahf
mov
ljmp
mov
add
pop
cmp
pop
subb
inc
adc
iret
mov
sti
or
aad
ljmp
xchg
call
pop
lds
aas
stos
or
add
sbb
leave
in
adc
sub
imul
xchg
pop
push
test
out
dec
daa
dec
sub
mov
sub
fisttpl
sbb
fwait
or
dec
mov
icebp
popa
jmp
jge
push
and
adc
ljmp
loope
adc
dec
movsb
scas
inc
mov
int
jmp
xorb
ja
push
xchg
mov
inc
or
adc
jmp
in
pop
jp
push
cmp
orb
inc
or
daa
push
out
add
ror
or
jg
xor
cmp
lcall
cmp
push
push
popf
and
or
pop
lea
mov
fwait
pop
mov
add
mov
mov
sub
cmp
push
push
dec
insb
mov
daa
lock
mov
dec
adc
xabort
mov
sbb
sub
in
push
adc
fistpl
mov
loop
mov
pop
inc
xlat
test
mov
push
scas
lahf
inc
xor
daa
mov
es
push
or
loopne
xchg
call
lahf
cmp
xlat
das
inc
test
mov
mov
mov
pop
int3
inc
dec
xchg
hlt
push
push
sbb
loopne
bound
sbb
addr16
jo
sbb
sub
scas
icebp
xor
sbb
push
in
inc
cmp
mov
movsb
adc
popf
out
lock
pusha
bound
sbb
loope
daa
lock
je
add
mov
lock
inc
fcompl
cli
mov
fiaddl
jno
lock
sbb
or
and
mov
pop
jnp
sbb
stos
pop
sub
pushf
mov
arpl
inc
popa
pushf
ret
inc
arpl
sbb
arpl
lret
adc
lds
or
inc
ret
mov
mov
jge
cmp
adc
outsb
cld
mov
popa
xor
lds
rclb
cmp
popf
aad
jp
pop
bound
sub
int
in
fcmovnb
inc
sub
or
daa
leave
push
je
jo
dec
ds
inc
add
mov
out
cmpsl
std
xor
sbb
cwtl
sarl
jmp
out
and
add
sbb
pop
bound
add
je
cmp
loop
stos
in
xor
adc
mov
jmp
push
lahf
pop
mov
pop
ja
daa
xor
sbb
adc
mov
jno
mov
add
test
mov
pop
or
adc
jl
jle
pushf
xchg
cmp
cld
iret
sub
sbb
push
xlat
ficomps
sub
sbbb
bound
daa
sbbl
or
sub
jnp
pop
or
jl
aaa
pop
sbb
sub
int
or
mov
xchg
scas
ficompl
sbb
jmp
mov
es
and
sbb
mov
shrl
ret
pop
arpl
addl
mov
lret
mov
xor
push
or
lret
xchg
bound
sub
inc
insl
mov
fwait
les
add
sahf
mov
or
xchg
push
push
es
pop
and
inc
push
mov
addr16
xor
icebp
mov
or
ljmp
dec
push
lcall
mov
sbb
bound
mov
fs
lds
xor
dec
inc
mov
aaa
pop
mov
jo
pop
loop
adc
lds
dec
push
mov
fcmovbe
inc
add
mov
rol
nop
dec
mov
test
imull
into
ss
dec
adc
mov
jns
fistps
in
mov
pop
push
xor
pop
sbb
or
pop
xor
mov
inc
pop
je
clc
push
mov
mov
xor
sub
or
in
cmpsb
mov
or
int3
enter
sahf
or
dec
inc
daa
hlt
clc
shlb
dec
xorl
popf
push
lock
stc
xor
test
jge
push
sahf
xlat
aam
mov
adc
out
lret
sub
cmp
clc
adc
mov
inc
jmp
pushf
sub
das
sbb
lcall
push
sbb
push
popf
pop
pushf
pop
sub
fisubrs
out
int
jnp
adc
sub
daa
lods
xchg
movl
sbb
adc
cmp
xchg
bound
pusha
mov
mov
stos
sti
sbb
test
fisttps
mov
sub
sub
jns
mov
subl
jge
loop
iret
xchg
sub
mov
loope
cmovle
lods
pushf
mov
bts
dec
mov
cmpb
pop
movsb
int
stos
subl
pop
adc
lret
es
out
sub
sti
mov
xor
pusha
mov
fimull
bound
sbb
mov
add
or
inc
mov
stos
cmp
das
adc
lcall
mov
js
in
or
push
mov
jl
cmp
icebp
clc
call
enter
cmp
inc
sub
add
iret
sbb
clc
daa
aas
dec
xlat
adc
mov
mov
shr
ror
shl
inc
testl
pop
sbb
xor
daa
jns
stos
push
inc
stos
sub
xor
movsb
addr16
cmp
mov
sti
out
sbb
fmul
inc
addr16
push
adc
inc
fstpt
testb
stos
or
push
out
movsb
pop
sbb
rorl
aas
icebp
xchg
adc
pop
xchg
push
mov
cs
pop
hlt
mov
pop
cmpsb
sbb
mov
mov
mov
pop
or
icebp
arpl
jb
in
inc
hlt
sbb
mov
lcall
fdivrl
adc
adc
cmp
into
adc
mov
or
sub
cmp
cmc
popf
arpl
pop
pop
sahf
iret
idivl
add
xchg
lret
or
mov
push
sub
fadd
inc
mov
iret
pop
outsl
rcll
mov
das
cmp
fisttpl
jp
adc
adc
lcall
jmp
inc
into
shlb
cmp
mov
shrl
sbb
les
mov
pop
and
cmpsl
adc
lods
pop
out
clc
mov
ffree
mov
mov
imulb
jle
jmp
xor
xor
push
and
mov
test
testl
dec
subl
popf
xchg
js
or
sbb
dec
inc
cmp
ds
ret
xor
cli
adc
shll
pop
rcrb
or
sub
and
stos
mov
jl
movsl
sbb
subl
xor
mov
fwait
sbbb
jmp
pop
mov
xchg
cltd
xor
je
enter
out
daa
es
cmpsl
nop
pop
sub
dec
mov
fisubrl
mov
mov
cmp
sub
pop
sbb
or
jmp
orb
cmp
lret
xchg
mov
mov
xor
jno
pop
jb
cmp
adc
cmp
inc
mov
insb
mov
inc
mov
and
xor
mov
sar
pushf
mov
in
xchg
jmp
test
inc
mov
in
jae
xor
fbstp
out
stos
adc
mov
arpl
ret
mov
cmp
in
out
imul
push
xor
mov
dec
repnz
in
insb
xchg
xchg
rorl
int
mov
imul
sub
xlat
xor
pop
jl
nop
add
movsb
and
lods
push
fdivrp
push
sbb
lahf
sub
lcall
dec
ror
mov
mov
mov
jnp
dec
aaa
leave
aam
xor
pushf
jg
sti
push
push
les
xchg
lret
daa
adc
pop
lret
sbb
sbb
xchg
addl
insb
and
aaa
cld
mov
inc
ljmp
fldl
and
daa
mov
adc
xchg
movsb
punpcklwd
arpl
jg
out
cmp
adc
mov
sbb
cmp
or
out
arpl
out
ret
add
pop
push
fistps
push
xor
pop
cmpsb
push
sti
cmp
addr16
inc
and
rclb
repnz
xchg
xor
xchg
sub
fs
add
mov
aas
adc
dec
loope
fmuls
daa
inc
mov
cmc
adc
aam
lahf
scas
inc
fwait
outsb
mov
cmp
dec
jne
lea
cmp
xchg
nop
repnz
dec
inc
and
inc
pop
dec
inc
cmp
or
out
jge
inc
sub
pop
pop
std
mov
ja
adc
dec
push
jl
xor
sbb
xchg
sahf
add
imul
fdivl
cmp
or
insb
addl
inc
popf
addr16
nop
inc
fwait
pop
jb
lock
push
mov
push
jbe
inc
or
mov
sub
pushf
adc
or
sub
dec
mov
sahf
mov
jae
mov
pop
fsubr
ficompl
inc
dec
clc
jne
push
stos
sbb
xor
push
orb
shll
iret
lret
inc
inc
lret
shlb
mov
sbb
xor
mov
xchg
inc
dec
sub
insb
daa
shlb
fstps
repz
mov
adc
inc
inc
push
insl
push
or
std
pop
movlps
mov
lret
call
push
pusha
mov
push
sub
cmc
cltd
mov
push
and
fs
push
or
mov
fnstsw
cld
popf
mov
sahf
mov
stos
or
push
add
sbb
cmp
inc
or
adc
jge
repnz
lret
mov
sbb
jne
pop
push
inc
dec
sbb
shrb
daa
dec
adcb
mov
popf
icebp
stos
inc
ja
ret
xchg
daa
mov
fildl
ja
xchg
fisubrl
or
or
add
sub
sbb
sbb
loope
daa
iret
ja
xchg
lahf
movsb
scas
sub
pop
out
scas
dec
add
sub
inc
call
jb
int3
push
add
mov
mov
jne
xchg
mov
inc
jmp
or
ljmp
cld
and
ds
or
ret
xchg
dec
xchg
fucom
ja
fcmovbe
hlt
jbe,pt
push
sbb
mov
pop
mov
pop
sarb
icebp
and
imul
lds
pop
fstpl
scas
pop
push
sti
int3
loopne
fisubrs
repz
xor
pop
xor
pop
daa
xor
lcall
mov
pop
pop
movsb
mov
lods
pop
or
dec
xchg
mov
push
insb
inc
int
mov
ficompl
push
movsl
jbe
add
ret
pop
inc
xor
movsl
aas
inc
sbb
adc
xchg
xchg
pushf
lea
in
mov
adc
xchg
fs
outsl
push
mov
and
inc
add
pop
fmuls
pop
jl
jns
or
mov
pop
inc
dec
sbb
into
xor
xchg
adc
jne
notb
dec
pop
imul
and
scas
sbb
push
pop
sub
movsb
mov
icebp
popl
pop
aam
mov
or
lods
or
es
daa
jle
mov
sub
aad
das
dec
repz
adc
add
cmc
cmpsl
bound
pushf
lcall
push
sub
ret
jge
cmp
sub
loope
push
lea
aam
jp
sbb
and
sbbb
movsb
mov
sub
rcrb
sub
or
push
pusha
cmp
inc
push
push
jae
or
mov
mov
pusha
xchg
and
int3
inc
sbb
cltd
xor
pop
push
push
nop
xorb
pushf
pop
sbb
add
fdivs
push
out
stos
mov
lods
lret
xchg
iret
jae
insb
push
mov
fsts
inc
inc
daa
loopne
jno
cli
sbb
sub
xor
inc
mov
pop
mov
add
es
repnz
xor
dec
jb
mov
scas
xchg
cmp
mov
inc
insb
mov
push
push
pop
mov
and
int3
daa
xchg
test
cmp
stos
outsb
dec
or
fsubrl
roll
push
and
in
inc
mov
push
inc
add
pop
mov
adc
inc
imul
lcall
jl
daa
adc
mov
sub
scas
jnp
and
xchg
mov
maskmovq
testl
push
jl
sub
pop
bound
jne
inc
pop
and
dec
lcall
fld
fs
jg
sub
inc
daa
dec
mov
or
inc
in
jg
mov
or
cld
pop
cld
push
jno
mov
push
lret
sub
cmp
mov
mov
sbb
ret
cwtl
xor
test
imull
push
or
or
xor
inc
into
cld
jmp
fldenv
pop
adc
stos
test
rorl
inc
mov
xor
fldl
cmp
xor
dec
bound
ja
ret
rcl
push
mov
sbb
scas
int
fucomp
movsb
arpl
dec
fsubs
jb
sti
lret
addr16
add
sub
pop
int3
xchg
lods
push
aaa
fidivl
arpl
xchg
inc
inc
cmp
test
in
mov
cmp
ret
negl
insl
loopne
jmp
sbb
inc
scas
repnz
xchg
adc
int
add
les
fidivs
fisubrs
pop
imul
xor
jecxz
int
mov
mov
jp
sbb
loopne
adc
xchg
or
xchg
stos
mov
jnp
inc
adc
lret
or
mov
pop
loope
stos
adc
xchg
xchg
stos
arpl
sub
adc
xchg
ficomps
mov
out
dec
mov
insl
sub
cmp
and
push
fists
pop
pop
popa
out
lods
or
jnp
pop
repz
and
test
mov
mov
push
or
into
inc
iret
gs
mov
daa
jmp
jp
dec
mov
jnp
pop
ss
movsl
clc
mov
pop
push
dec
jg
jno
insl
pop
push
adc
or
push
test
fsubr
fimuls
fsubrp
push
rcll
out
mov
aas
lcall
sub
stos
cmp
xchg
xor
mov
mov
and
outsb
std
sub
mov
mov
fs
mov
mov
sub
fs
sub
adc
xor
iret
sub
cld
lods
jno
mov
and
into
bound
mov
sub
jae
adc
jg
cmpsb
in
shlb
sub
rcll
bnd
pushf
sbb
dec
mov
mov
push
push
sbb
pop
cmp
popf
add
xchg
mov
mov
xor
loope
addr16
pop
pop
pop
cli
test
mov
clc
xor
push
mov
sbb
cmp
sbb
mov
popf
lcall
add
mov
shll
dec
mov
inc
popa
dec
sahf
scas
ljmp
push
adc
mov
lock
sbb
fisubs
fwait
daa
pop
xchg
and
lods
cmovo
add
popf
push
pop
addl
push
add
daa
cmc
xlat
mov
push
fiadds
adc
fs
mov
or
and
testl
pop
shl
or
iret
pop
fs
mov
stos
out
dec
addl
or
or
xor
adc
sbb
out
insb
sub
or
cld
in
and
loop
mov
adc
lcall
mov
neg
sub
fdivl
pop
add
popa
add
arpl
sbb
or
sar
mov
out
sub
out
cmp
inc
pop
dec
push
pop
icebp
adc
ret
or
lds
mov
xchg
lea
jp
jae
sub
push
test
cs
ficoml
fnstcw
xor
inc
daa
out
pop
jb
test
and
mov
mov
jo
sub
lcall
shll
imul
jb
push
lods
jae
xchg
jl
jo
call
arpl
mov
mov
mov
mov
adc
inc
out
xor
arpl
fnstcw
imull
and
icebp
in
fisttps
out
fidivl
movsl
xor
fstpl
or
daa
test
mov
push
push
push
das
sub
int3
popa
and
xor
or
jns
sub
mov
pop
and
div
cmp
adc
xor
ljmp
rcrl
mov
dec
mov
in
xchg
sbb
sub
fdivl
pop
sub
stos
call
test
int
jno
mov
push
daa
dec
jl
mov
fidivrl
dec
mov
lods
es
sbb
adc
daa
repnz
jb
jo
ss
jg
and
js
and
into
int
jl
call
addl
jne
sbb
xchg
inc
add
fldenv
test
int
jo
iret
lock
xchg
jl
pop
inc
daa
lahf
xchg
pop
inc
sub
aad
jne
dec
dec
cmp
dec
adc
dec
leave
sbb
movsb
int3
pushf
push
xor
addr16
pop
xchg
addl
or
scas
and
push
adc
popf
jae
es
loope
lock
adc
inc
subb
and
insb
and
ljmp
push
dec
inc
mov
or
jno
xchg
pop
sbb
sbb
popa
outsl
mov
add
loope
mov
lods
popa
ljmp
loop
add
icebp
mov
sub
cmpsb
testl
es
push
outsb
or
jmp
sbb
pop
leave
cmpl
je
inc
mov
mov
jae
mov
push
cmpsb
push
aad
and
push
xor
test
cmp
out
das
or
inc
pop
scas
fwait
push
xor
sub
ljmp
sbb
xchg
sub
cwtl
and
test
js
jb
sar
or
aam
pop
xlat
mov
sahf
xor
daa
cmp
xchg
ss
xchg
in
das
or
dec
cli
push
fstps
and
or
and
popa
xor
xchg
negb
pushf
xor
daa
jae
dec
fnstsw
pop
ret
dec
nop
inc
pop
ss
and
xor
data16
push
dec
jecxz
adc
mov
and
loope
imul
lahf
add
cmp
inc
pop
hlt
or
iret
add
sbb
pop
sub
lods
dec
sub
test
fisubrl
mov
and
repnz
push
mov
mov
add
add
dec
in
mov
cmp
mov
and
push
test
jl
fiadds
xchg
sbb
mov
aas
mov
adc
lock
xchg
adc
xchg
cwtl
or
jbe
daa
ja
lds
sahf
xchg
cmp
xchg
sbb
inc
push
addr16
inc
push
repnz
mov
daa
iret
adc
outsb
adc
andb
cmp
pop
leave
push
push
sbb
lea
cmpsl
adc
mov
es
ljmp
push
pop
inc
in
mov
or
in
inc
loope
xor
or
cmp
mov
ret
rcrl
sysret
mov
sub
fidivrs
xchg
sub
sub
data16
and
jne
cwtl
cmpsb
xchg
dec
mov
or
icebp
cld
lret
daa
push
dec
inc
pop
cltd
fdiv
mov
inc
dec
loopne
mov
lcall
sahf
push
mov
stc
push
add
inc
ret
ds
popf
out
jbe
cmp
sqrtps
inc
filds
stos
xor
popf
loop
dec
jo
mov
sbb
shll
xchg
inc
add
pcmpeqb
stos
add
mov
test
mov
xchg
add
dec
sbb
jmp
pop
mov
in
push
out
pop
add
sti
adc
lret
cld
cmp
dec
mov
pusha
sahf
adc
pop
nop
out
sahf
movsl
lods
push
aam
pop
sub
pop
sub
inc
flds
adc
cmp
dec
push
xchg
repz
pop
add
sti
sahf
jge
clc
cmp
pop
rcrb
loopne
mov
pop
pop
ss
ror
xlat
fidivs
je
pusha
jmp
jle
or
aas
int3
mov
addr16
pusha
jbe
push
mov
pop
dec
inc
aad
adc
xchg
cmc
push
imul
cmp
aaa
adc
mov
adc
push
push
cmp
pop
lahf
mov
push
out
xchg
push
xor
sbb
sbb
dec
jb
mov
push
adc
pop
dec
sub
adc
sub
ss
add
scas
jp
das
scas
adc
cld
push
scas
pop
mov
xchg
int
inc
ds
xchg
push
pop
in
fldenv
subb
cmpsb
dec
push
mov
mov
imul
adc
leave
adc
mov
dec
dec
shl
jmp
shlb
adc
dec
inc
add
or
mov
mov
test
sub
pop
popf
sub
jp
shll
mov
pop
or
adc
mov
inc
fsubrp
xchg
outsb
fsubl
mov
pop
mov
sti
or
jle
dec
daa
cmovs
movsb
fidivrl
cmp
daa
jo
push
push
fnsave
pop
pop
jg,pt
test
daa
mov
adc
imul
jbe
or
imulb
fsubrp
cld
and
lods
xchg
mov
fldt
dec
jbe
or
cmpsb
and
pop
cltd
aam
mov
lret
dec
cmp
xchg
and
bound
mov
xlat
xchg
lret
cmp
lods
xchg
imul
pop
sbb
jle
into
ror
jnp
push
pop
dec
mov
or
push
mov
sarb
xchg
push
push
testl
jl
push
popa
xlat
data16
pop
bound
sbb
pop
xchg
sbb
fcoml
or
xchg
loop
jge
cmp
sub
xchg
sbb
mov
cmpsl
pop
loop
inc
adc
lret
inc
pop
mov
int
std
mov
push
dec
into
das
lods
xchg
pop
adc
adc
pop
mov
pop
xorb
adc
sbb
dec
push
stos
cli
outsb
add
xor
xor
aad
testl
sbb
inc
sub
fwait
loopne
pop
push
pop
sub
dec
jecxz
sti
push
daa
cmpl
insb
mov
pop
sub
ja
sbb
aam
mov
push
imul
push
pop
dec
pop
dec
call
mov
dec
jmp
adc
sahf
fsts
ret
and
xchg
outsb
mov
mov
pop
push
mov
jle
xor
aad
jmp
pop
mov
push
fucomp
push
mov
ljmp
test
cmp
movsl
pop
imul
faddl
inc
clc
dec
inc
cmc
xchg
pop
pop
rol
or
test
bound
mov
push
xor
mov
aad
and
addl
push
mov
loopne
std
cmp
sbb
repz
cmp
repnz
inc
popf
or
cli
cmc
pushf
sbb
xor
push
cmc
and
jl
mov
mov
push
in
adc
jp
jle
pop
lock
popf
in
xor
or
xor
js
push
and
mov
int3
shll
and
jp
xchg
jg
addb
mov
push
inc
adc
jnp
sbb
or
es
cmp
test
inc
pop
jbe
push
xor
in
test
leave
xor
test
fisubrs
sub
jmp
add
push
pop
mov
and
add
push
sub
faddp
push
lcall
sbb
test
pushf
cmc
popa
jl
push
mov
dec
add
out
imul
jns
mov
adc
mov
pop
in
fwait
das
int
or
push
imull
pop
mov
jmp
das
jnp
pop
dec
cmc
shll
pandn
mov
push
add
ficomps
or
loope
ja
and
xchg
or
lods
incl
and
je
cwtl
sub
mov
sub
add
lret
clc
inc
jge
inc
repz
daa
mov
lret
outsl
xor
cmp
sub
aad
and
xor
shlb
fimuls
xor
aaa
inc
pop
shll
out
mov
push
jo
jno
adc
sbb
andb
xchg
jns
sub
add
gs
jo
mov
fwait
push
push
dec
push
pop
sub
lcall
inc
aad
cmp
movsl
insb
xchg
rorb
xchg
insl
imull
mov
sub
dec
int
or
cmp
dec
pop
push
pop
pop
push
scas
bound
mov
in
push
pop
imul
add
into
or
cmp
in
xchg
int3
pop
xchg
pop
hlt
mov
mov
jle
imul
scas
insb
xchg
cmp
lahf
test
daa
mov
imul
outsl
sub
stos
loopne
ja
add
push
mov
xor
xchg
mov
jl
wrmsr
pop
imul
cmp
push
push
adc
out
imul
sub
adc
stos
cmp
dec
add
xchg
or
dec
pusha
inc
notb
push
jle
sub
inc
mov
mov
shr
push
fs
mov
enter
aad
jmp
fldcw
xchg
in
dec
dec
pop
call
aas
lock
xchg
stos
mov
mov
fwait
mov
pop
daa
adc
push
push
jno
inc
adc
push
pop
xor
adc
sarb
push
pop
orb
push
scas
push
push
add
fsub
push
mov
daa
mov
push
pushf
jnp
dec
cmp
jnp
scas
cli
es
adc
psllq
cmpsb
bound
pop
push
fiaddl
pop
xor
mov
cmpsl
lea
mov
leave
add
lret
test
ror
pop
jb
and
jmp
imul
pop
and
mov
mov
icebp
dec
pop
mov
pusha
pop
cmc
stos
adcb
xchg
push
cs
nop
mov
xchg
push
jnp
pop
inc
sbb
mov
arpl
adcb
mov
jne
xor
jecxz
and
push
lret
int3
or
sub
aam
pop
lock
in
xchg
pushf
or
mov
fcompl
mov
lret
fiaddl
ljmp
cli
adcl
or
daa
mov
insl
aad
test
sbb
insb
mov
sbb
out
out
call
xchg
mov
mov
xchg
jne
push
mov
into
js
cld
mov
cmpsl
inc
fiadds
aam
and
lds
sbb
xchg
repz
add
test
push
sub
jnp
imulb
pop
lret
sbb
fdivrs
jbe
pmullw
and
ds
leave
mov
test
pop
aaa
loop
imul
sub
jle
loopne
add
into
jp
mov
xchg
inc
push
ficoml
ja
mov
je
clc
push
popf
cmpsl
cmp
shll
sbb
lcall
sbb
call
inc
test
dec
and
or
notl
xor
cmc
xchg
cmp
sarb
movsb
mov
test
pop
cmp
push
sbb
cltd
daa
xorb
sbb
bound
xchg
or
insb
rcrl
xchg
or
adc
mov
mov
jge
cmp
arpl
mov
pop
enter
out
inc
cmc
push
xor
mov
dec
dec
adc
outsl
xchg
adc
incsspd
pop
mov
lods
je
pop
xchg
in
push
scas
leave
filds
sub
mov
ljmp
add
mov
pop
rorb
sub
mov
std
imul
imul
add
or
cmp
movhps
iret
addl
out
xor
icebp
stos
sub
pusha
mov
daa
lock
sub
mov
jae
stos
push
mov
inc
in
rep
mov
das
adc
jae
cmp
out
xchg
test
mov
sarl
popa
xchg
and
or
mov
inc
and
lods
pushf
add
dec
mov
cmp
push
inc
pop
in
pop
or
popf
out
push
and
daa
in
std
cmp
loopne
sub
jb
movsl
subl
dec
inc
mov
subb
xchg
add
pop
inc
push
xchg
pop
sbb
jae
cmp
pop
jge
hlt
mov
xor
ret
mov
movsb
lret
push
stos
jmp
dec
adc
and
sbb
sbb
jo
daa
out
dec
sbb
pop
xchg
sbb
push
loope
fs
in
dec
fwait
loop
out
lea
mov
lcall
adc
insb
daa
imul
and
sub
int3
or
adc
cwtl
scas
inc
scas
and
sbb
lock
mov
cmc
out
js
or
lock
daa
jb
or
out
xchg
and
add
sbb
jmp
idiv
mov
or
rcrl
xchg
inc
jo
stos
sub
jecxz
loope
push
cmp
push
mov
xor
mov
xchg
jbe
mov
mov
out
sbb
dec
rcrl
mov
push
sbb
daa
js
cld
xchg
sbb
repz
fisttps
mov
push
pop
dec
movsl
and
mov
mov
sub
adc
push
or
pushf
xchg
xor
xor
cmpsl
and
jle
mov
push
and
add
cmp
cmp
pop
sbb
and
and
aaa
xchg
dec
xor
jno
mov
aam
pushf
ljmp
cmc
cmp
mov
movsb
insb
sbb
inc
pop
pop
push
es
mov
xor
out
stos
fistpl
loopne
cmp
int3
daa
pusha
xchg
test
fwait
sbb
sbb
daa
repnz
add
dec
les
mov
js
lret
inc
adc
dec
daa
stos
fwait
pop
in
sub
popf
sbb
outsb
pushf
mov
mov
stos
xchg
add
lods
inc
out
cmc
dec
mov
sahf
daa
sub
mov
jae
push
inc
stc
xor
and
sub
and
push
ss
push
mov
in
lds
pop
fldl
or
pop
shrl
sub
sbb
bound
shlw
push
enter
xor
call
jge
inc
sbb
add
fwait
pop
or
pop
sub
shll
iret
mov
movsb
in
cmpsb
xchg
sub
stos
mov
das
rolb
lret
sti
jnp
cmpsl
iret
int3
inc
jge
pop
inc
sbb
sbb
pusha
test
pusha
cmp
dec
mov
mov
xlat
xchg
bndldx
cwtl
mov
loope
arpl
scas
cmp
or
gs
scas
fmul
test
mov
frstor
ds
stos
or
mov
mov
ficoms
mov
push
repnz
mov
inc
or
in
sbb
shrl
mov
cmp
ss
mov
cmpsb
push
inc
or
sbb
mov
int3
lcall
pop
jne
push
loope
movsb
and
daa
mov
cmp
add
jbe
inc
sbb
repnz
and
cmp
and
gs
ja
push
lret
add
stos
and
adc
sbb
mov
mov
ljmp
pop
inc
mov
pop
ja
mov
stos
aad
lahf
dec
xchg
fmull
pop
inc
or
pop
pop
iret
lahf
lods
or
int
xor
out
std
mov
dec
mov
sbb
insb
pop
insl
fcoms
mov
jae
jnp
mov
dec
test
inc
clc
mov
dec
xor
cmp
out
xor
pop
pop
loope
pop
inc
decl
daa
inc
mov
cs
xor
mov
sub
pop
pop
sub
jg
mov
mov
dec
xor
pop
push
pop
push
cmp
pop
xor
pop
int3
nop
inc
lahf
sbb
push
stos
daa
popf
push
fs
leave
das
andl
xchg
sbb
data16
sub
mov
je
repz
lea
or
add
imul
lret
es
arpl
inc
jae
mov
sbb
sbb
gs
movsl
pop
test
subl
xchg
sub
pop
add
pop
pop
inc
pop
xor
testl
jbe
aas
dec
aam
dec
mov
sub
dec
out
adc
pop
push
push
xchg
mov
cli
xor
daa
insb
sub
adc
jge
repz
xlat
jnp
jg
adc
nop
int3
lret
into
mov
sbb
nop
lea
mov
adcl
mov
mov
outsb
pop
lret
lods
mov
les
addb
mov
call
out
jns
sar
and
loope
push
push
stos
inc
repnz
sub
insb
mov
callw
pop
or
mov
out
clc
fucom
pop
xchg
pop
mov
xor
out
insl
daa
fsubl
in
lret
popl
dec
ret
cmp
and
mov
fbld
push
popf
popa
daa
mov
mov
inc
mov
sub
or
mov
xor
dec
sub
mov
jne
and
jbe
or
add
sti
mov
or
cmpsb
sbb
and
xchg
popa
pop
sbb
push
fmuls
push
fbld
aam
neg
or
std
dec
mov
jmp
ja
outsb
inc
or
xchg
into
dec
cli
pop
push
es
sahf
add
and
dec
dec
cmpsl
outsl
add
fwait
mov
test
adc
mov
fmull
mov
pop
cmpsl
idivb
and
frstor
sub
dec
sbb
dec
out
cmpsb
dec
sbb
xor
into
push
arpl
cmp
mov
adc
inc
mov
sub
fs
jmp
loop
push
dec
mov
cmp
mov
ficomps
adc
cmp
aas
adc
inc
sbb
pop
xchg
popl
insb
test
insb
mov
repz
call
imul
mov
or
icebp
cmp
add
mov
nop
push
pusha
lret
push
push
or
xor
aas
xchg
pop
dec
es
mov
and
test
inc
fs
cmp
or
sub
sbb
cmp
inc
adc
or
movsl
mov
pop
scas
sbbl
pop
jmp
push
xchg
add
xchg
scas
jge
mov
sbb
and
jge
out
or
test
push
push
push
sbbl
mov
or
out
sub
mov
mov
and
push
je
lahf
sub
adc
subl
xchg
sbb
mov
jnp
js
test
and
int3
dec
dec
pop
ret
dec
or
ljmp
or
call
jle
or
sbb
sbb
jo
or
int
push
arpl
mov
mov
dec
mov
adc
fisubs
xchg
or
test
enter
or
into
and
lods
pop
mov
iret
cmp
loopne
inc
jg
bound
adc
shlb
mov
ljmp
pusha
out
icebp
dec
insl
pop
add
sbb
rorl
xchg
sbb
xor
xor
mov
sub
out
push
pusha
imulb
jo
lods
orl
cmpsl
xor
pop
daa
imul
fmuls
stos
movsb
cs
add
leave
adcb
adc
rcrb
pop
hlt
es
lret
das
test
dec
outsb
je
popa
and
jns
and
or
imul
jp
mov
sub
pop
cltd
push
js
andb
stos
add
ljmp
sub
ja
sbb
or
mov
sub
test
mov
fiadds
push
jl
sub
and
ret
push
adc
inc
add
or
adc
xchg
mov
jo
xchg
and
hlt
sub
jns
xchg
nop
pop
push
scas
inc
pop
mov
jb
add
dec
addl
test
jle
scas
cs
xchg
push
push
mov
repz
mov
or
aad
nop
dec
mov
xchg
mov
sub
lret
xor
sahf
push
aam
and
xchg
andb
aas
loopne
push
lods
and
xor
decb
hlt
pop
repz
sbb
lcall
inc
dec
outsb
enter
jmp
daa
jg
push
in
jmp
pop
and
fstps
sti
imul
xor
lret
push
shr
popw
push
pushf
jg
push
paddusw
sbb
push
pusha
fisttps
aam
into
jmp
loope
iret
es
ficoms
and
aad
loope
push
lret
xchg
loopne
mov
sbb
mov
mov
scas
fildll
xchg
pop
mov
out
clc
sub
sbb
jge
push
xor
stc
push
loop
int3
mov
lret
push
xchg
arpl
out
sub
pop
sub
adc
outsl
or
daa
mov
jmp
imul
inc
out
clc
cmp
add
adc
or
mov
mov
daa
loope
and
inc
push
or
xchg
pop
mov
aam
mov
fistps
pop
jb
pop
add
xchg
cmp
mov
addb
mov
cmp
cmp
inc
mov
add
mov
and
imul
stc
mov
fs
psubusb
sbb
sbb
sbb
cmp
out
loop
daa
mov
je
or
or
sub
mov
rcrl
enter
inc
lea
mov
scas
dec
adc
xor
popf
mov
xchg
sub
inc
enter
daa
out
enter
pusha
sub
adc
push
or
add
imul
jae
bound
daa
popf
ja
push
dec
mov
icebp
in
in
pop
cmp
mov
sar
push
aaa
xchg
mov
lret
insb
push
add
jmp
loop
mov
sub
aad
jmp
es
lahf
and
cltd
cmp
push
lock
and
sbbb
or
jns
adc
daa
dec
pop
or
lods
or
je
xchg
jmp
inc
loopne
or
inc
lods
or
lret
push
xchg
sti
push
inc
or
adc
popf
cmc
add
cs
lret
insb
sbb
rcrl
rcll
or
or
pop
aad
cld
pop
pop
mov
dec
push
inc
sbb
aam
inc
daa
mov
cmpsb
fsubrs
stos
push
aad
loop
dec
sarl
in
fmull
push
loope
push
mov
sub
test
call
imul
mull
and
mov
mov
aam
pop
mov
stos
jne
cs
ljmp
xor
sub
xchg
mov
jmp
mov
xor
dec
lea
cwtl
dec
sub
pushf
in
es
sub
xchg
pusha
jnp
repz
dec
lods
pop
mov
pop
scas
xor
repz
push
loope
in
xchg
lcall
in
je
push
aad
fsubr
clc
or
repnz
dec
iret
mov
jmp
push
ljmp
daa
lret
sub
mov
test
lea
sub
out
ficomps
xlat
mov
jle
inc
je
push
push
mov
adc
dec
inc
ret
in
pusha
push
lds
ja
mov
mov
pop
je
ffree
out
andb
add
cmp
and
pop
lea
sbbb
insb
ljmp
imul
cmp
push
sub
sub
rorb
hlt
call
pop
imul
scas
scas
ds
insb
sub
gs
ss
rcrb
jp
sub
cmp
stos
in
pop
subl
pop
in
jae
imul
jns
xchg
jg
push
and
cmpsb
popf
pushf
pop
out
imul
daa
mov
iret
add
pop
push
or
mov
jecxz
inc
fbld
add
loopne
mov
adc
sbb
dec
jl
sbb
xor
cmp
jnp
mov
mov
iret
and
popf
sbb
or
in
sarb
xchg
pop
sub
cmc
adc
sbb
aam
into
scas
sbb
lahf
mov
jp
enter
jmp
and
xchg
mov
sub
cwtl
imul
cmpb
mov
mov
ja
xor
jge
pop
test
push
repz
loope
mov
aas
jae
mov
int3
jl
push
test
notb
push
push
adc
out
pop
jge
imul
xchg
rol
adc
scas
jl
or
mov
pushf
repnz
sbb
call
inc
dec
sub
sti
call
mov
outsl
or
or
inc
sub
mov
jmp
and
adc
subl
ss
mov
sti
pusha
pop
mull
mov
movsb
and
std
pop
iret
inc
ljmp
sbb
aad
sbb
decb
xchg
popa
mov
arpl
sub
hlt
mov
mov
leave
jnp
push
cmc
sbb
push
sbb
pop
in
out
dec
cmpsl
scas
lods
adc
xchg
cli
jp
popf
mov
xor
mov
xchg
sbb
xchg
std
add
pusha
mov
call
mov
xchg
cmpxchg
addr16
hlt
mov
mov
daa
sbb
xchg
out
push
pop
push
cmc
sbb
sbb
mov
into
add
int
cmp
cmp
test
inc
cli
xchg
lea
scas
and
inc
popf
imul
inc
andl
adc
xchg
shlb
sbb
adc
shll
int3
lahf
hlt
rolb
xchg
bound
out
loop
cld
test
cs
movsb
xor
sbb
inc
push
add
push
data16
dec
jae
or
jbe
inc
fldenv
les
imul
mov
push
jmp
test
and
adc
or
push
popa
les
sbbl
psubq
daa
adc
jmp
idivl
pop
imul
jmp
sbb
jnp
sub
fs
dec
cli
inc
push
mov
cld
cmpl
fwait
in
out
iret
test
or
les
sbb
push
aad
lock
xor
shlb
pop
jno
or
movsb
adc
pushf
sbb
jne,pn
pop
push
pop
fcmovnb
pop
mov
mov
out
mov
rcr
push
dec
pop
popa
mov
dec
loope
shrb
and
push
and
jmp
bound
ficomps
jne
pop
or
imul
mov
nop
lock
pop
mov
push
mov
ret
addr16
int3
mov
cmp
pop
xchg
sbb
cmp
rclb
mov
lock
push
add
gs
mov
iret
mov
stos
xchg
dec
aaa
insb
inc
out
test
jg
fstpt
jo
sbb
lret
mov
sbb
out
ja
loop
mov
lcall
jnp
jb
sub
pushf
xor
test
or
inc
mov
mov
dec
pop
inc
sti
or
pop
imul
fisttpll
loop
or
lret
nop
fcoml
xchg
mov
data16
pop
cmp
push
std
push
xchg
sbbb
gs
xor
fidivrs
ret
out
insb
mov
test
stos
sub
inc
aad
loop
lret
inc
iret
inc
mov
sub
inc
pusha
sub
out
and
orb
pop
dec
outsb
mov
leave
push
sub
adc
imul
out
sbb
xchg
xchg
dec
adc
sbb
daa
sbb
xchg
popf
enter
test
sub
rcr
cmc
out
push
popw
push
or
sahf
lock
xor
adc
data16
xor
mov
cmp
xchg
or
ja
dec
xchg
pusha
int
je
int3
adc
enter
cmp
inc
jmp
inc
push
int
xchg
add
mov
xor
add
push
out
push
xchg
inc
pop
leave
fistpl
inc
faddl
mov
and
mov
mov
add
leave
outsl
inc
iret
mov
sbb
repnz
sbb
icebp
mov
sbb
mov
mov
imul
dec
push
cltd
jnp
rcl
and
jg
add
sbb
sbb
inc
xchg
mov
jle
loopne
xchg
sub
mov
or
pop
dec
sbb
jne
pop
int3
or
pop
mov
loope
mov
adc
pop
enter
icebp
dec
movsl
fisttpl
sbbl
xor
inc
mov
movsl
mov
push
bound
outsl
jmp
in
xchg
add
icebp
call
test
jns
dec
fldcw
fstpl
and
mov
test
pop
sub
or
loope
addl
pop
insl
xlat
and
es
popa
jp
leave
dec
push
dec
or
mov
pop
scas
mov
push
inc
cmp
lret
es
lods
add
cmpsl
adc
inc
pop
pop
sub
icebp
cmpsb
sbb
jl
addr16
or
mov
pop
gs
cmc
in
or
xchg
add
or
es
mov
outsb
or
adc
pop
rcll
cltd
xchg
inc
push
popa
sbb
dec
sbb
push
fs
xor
and
xchg
ss
data16
mov
lods
iret
sub
push
inc
xchg
insb
inc
std
or
inc
jns
popf
or
or
jmp
pop
or
hlt
movsl
imul
imul
scas
push
cmp
testb
inc
xchg
ret
or
jne
lods
xchg
lea
push
mov
xchg
jge
and
cmp
sbbb
cld
or
fsts
and
mov
lea
sub
cmpsl
push
icebp
or
push
sahf
mov
or
lret
xchg
add
inc
aaa
push
in
pop
popa
jb
or
rolb
lahf
or
shrl
mov
dec
dec
pop
or
and
dec
or
out
inc
sbb
pshufw
cmp
addl
pop
int3
clc
pop
orb
int
andb
pop
lret
fxch
inc
xchg
xchg
movsl
je
and
imul
xor
mov
andb
adc
icebp
mov
imul
stc
in
into
hlt
scas
gs
add
sahf
fistps
lret
out
xor
mov
add
dec
adc
jmp
jp
bound
imul
dec
jmp
insl
lods
jmp
lods
mov
nop
inc
mov
cmp
psubd
repz
std
cmc
mov
stos
popf
and
sbb
push
imul
mov
sbb
mov
xor
popf
xchg
ss
push
sbb
mov
mov
loop
inc
xor
cmp
lret
cmc
jp
scas
jo
daa
xchg
loopne
orl
pop
mov
dec
aad
ss
int
aaa
adc
dec
mov
loope
ja
in
popa
pop
sbb
inc
fstp
shrl
hlt
and
insl
dec
xchg
jecxz
daa
push
int3
in
xchg
nop
dec
iret
xchg
jg
mov
dec
jp
or
xchg
mov
inc
out
adc
cmp
mov
insb
scas
leave
shrb
mov
movsb
jae
aas
lea
fs
push
add
sub
xor
sub
xchg
cmp
in
dec
loop
fisubrl
rcrb
sbb
push
lock
rorl
mov
roll
mov
loopne
or
xchg
push
setl
repz
sbb
adcb
es
mov
js
out
scas
jno
aam
inc
push
popf
mov
and
inc
je
fwait
jo
flds
icebp
lcall
add
fnsave
call
xchg
push
repz
adc
hlt
jne
ret
cltd
rcrl
mov
mov
push
les
addr16
in
mov
in
mulb
jae
xor
mov
shld
push
aaa
idiv
fldenv
daa
or
ja
loopne
jno
mov
repnz
fdivs
pop
addr16
daa
mov
cmp
aad
adc
sub
fs
push
cwtl
ds
sbb
mov
xchg
in
int
fwait
xor
push
mov
out
sbb
in
adc
cmp
outsb
cld
mov
jp
mov
xchg
xchg
and
scas
jne
push
loope
fs
stos
mov
or
imul
dec
es
mov
add
nop
loopne
jns
jbe
mov
xor
inc
fs
ficompl
push
and
pop
int3
imull
repz
pop
cld
movsl
lret
push
mov
inc
test
pop
jecxz
and
negb
jno
push
call
addr16
pop
sbbl
rcl
mov
push
xor
inc
stos
push
sahf
mov
sti
pop
enter
pop
sbb
sahf
xchg
pop
bound
push
mov
lock
popa
icebp
out
stc
pop
jno
scas
cmpsb
out
adcb
pop
dec
sub
out
mov
daa
idivb
pusha
test
pop
xlat
adc
inc
out
xchg
jne
mov
push
inc
in
sahf
test
pop
mov
lret
mov
in
sub
jnp
sbb
inc
enter
mov
hlt
and
add
mov
loopne
jbe
xchg
pop
dec
jae
mov
sbb
cmp
add
sub
dec
xor
xor
je
cli
test
xchg
int
or
inc
lods
push
add
sbb
xor
or
mov
mov
jmp
insl
cmp
fcos
dec
pop
mov
sarl
mov
lds
lock
mov
addr16
fimuls
jmp
loop
daa
sbb
cmp
testl
out
sbb
int3
or
insb
repnz
jnp
mov
cltd
notl
mov
popf
jne
sub
shrl
je
xor
lret
mov
mov
fwait
bound
lea
scas
sbb
insl
addr16
xchg
mov
cmp
out
stos
jo
jmp
dec
and
inc
pushw
lret
imul
imul
and
imul
inc
cmovnp
movsb
js
imul
sbb
out
bound
incl
insb
and
sbb
ds
repnz
pop
mov
sub
xchg
sub
fldt
jbe
scas
popf
sarb
and
div
fcoml
xor
push
ret
adc
sbb
adc
mov
repnz
sub
jecxz
adc
dec
xchg
dec
sub
sub
sub
daa
stos
cmp
jnp
dec
imul
stos
iret
pop
ds
or
imul
push
and
mov
ja
outsb
aad
imul
test
jb
repz
mov
mov
shrb
mov
out
mov
popf
xor
js
daa
xor
nop
mov
mov
jmp
ret
mov
mov
lds
sub
and
mov
hlt
aaa
mov
hlt
pop
or
dec
push
xor
daa
push
rcll
iret
insb
adc
sbbl
hlt
dec
push
and
dec
stc
sahf
into
xor
dec
add
call
rorl
xchg
push
fimuls
sbb
or
xchg
in
stos
movsb
jb
cmpsl
jmp
or
sar
inc
scas
in
xchg
add
add
jbe
dec
mov
stc
xor
adc
icebp
shll
jne
insb
push
push
sbb
icebp
pop
push
pop
je
fmull
fs
mov
cmc
inc
sub
mov
pusha
adc
xor
arpl
scas
push
xor
adc
and
push
mov
in
cmp
sub
xor
dec
insb
int3
inc
xor
mov
call
ljmp
mov
jmp
cmp
out
pop
das
daa
in
mov
and
ljmp
xchg
lret
rclb
mov
loopne
mov
push
sub
scas
jp
mov
mov
stos
incb
dec
int3
jge
xor
pop
pushf
adc
insb
mov
aad
xor
jnp
cwtl
xchg
rcrl
in
shlb
xor
mov
xchg
xchg
jp
push
sub
sbb
mov
xor
pop
lock
aam
adc
jg
ret
xchg
and
daa
pmullw
out
push
pop
mov
sub
add
push
lds
pop
push
push
inc
mov
lahf
cmc
fisubrl
push
loopne
xchg
mov
sbb
fcoms
int3
mov
push
sbb
pop
out
imul
int3
out
gs
frstor
lods
push
out
jo,pn
aam
inc
jne
je
pushf
push
adc
daa
in
sarb
inc
sbb
push
dec
jne
cmpsb
mov
push
dec
jle
cmc
pusha
mov
cmpsl
clc
mov
cmp
mov
or
push
inc
int3
ss
mov
rcr
push
jmp
jmp
inc
fwait
adc
adc
mov
inc
mov
dec
add
sub
push
adc
xchg
ficoml
cli
insb
pop
inc
sahf
mov
push
rcll
jecxz
jecxz
loope
insb
push
aad
adc
sub
sbb
insb
inc
iret
stos
xor
notb
sub
loop
scas
daa
ret
xor
xor
adc
xchg
stos
mov
cli
orl
jae
pop
sub
mov
and
inc
cmpl
xchg
mov
daa
dec
add
add
or
xchg
popa
stos
push
mov
shll
daa
pop
movsl
mov
pop
sub
sahf
adc
and
jge
popa
fsubs
xchg
xor
cmpsl
adc
clc
in
aad
xchg
loop
mov
mov
ds
pop
and
mov
xor
iret
adc
daa
cmc
fcmovnb
jns
xor
jp
inc
mov
jb
pop
xchg
sbb
lea
jge
inc
add
jnp
xor
repz
jb
pop
sub
cmp
aad
lods
cmc
data16
sti
push
scas
push
call
xchg
test
sbb
repz
jl
aam
cwtl
inc
mov
push
cs
or
xlat
int3
mov
rcll
pop
popa
sbb
jne
push
adc
sbb
and
imul
pop
mov
lock
push
inc
mov
fsubr
xor
push
inc
dec
fisubl
jno
mov
daa
inc
sbb
into
jge
xchg
jle
push
inc
rorb
jge
fdivl
push
call
dec
dec
std
xchg
and
or
inc
loope
rcll
adc
mov
jae
push
pop
loope
jmp
push
xchg
sbb
shll
lea
mov
mov
into
sub
ficompl
cmp
cmp
inc
xchg
scas
rcl
cmc
pop
fs
scas
fwait
psrld
ret
push
dec
loope
mov
mov
mov
sub
push
mov
xor
dec
jl
adc
aad
sub
cmc
xor
xchg
adc
das
jle
sbb
pop
inc
int3
test
mov
mov
push
insb
pushf
or
jle
scas
xor
icebp
fs
jle
popa
jo
and
popa
inc
movsl
jnp
dec
jne
es
hlt
push
iret
sarb
mov
out
popf
pop
test
xchg
and
nop
int
rorl
mov
mov
push
mov
adcb
sbb
adc
je
insl
and
sub
mov
push
bound
add
sahf
jg
pop
pop
insb
clc
jp
test
fimuls
aad
aam
xchg
pop
sub
arpl
push
xchg
xor
add
out
mov
popf
sub
pop
pop
pushf
jmp
xchg
jne
pop
sti
mov
cmc
sub
and
push
decb
mov
push
loop
stos
std
pop
dec
inc
jnp
sub
mov
int
inc
jae
dec
jge
add
lock
jmp
hlt
rcrl
mov
imul
and
pop
xchg
dec
pop
add
mulb
out
movzwl
lea
popa
inc
or
cmc
aad
leave
dec
mov
sbbb
jns
test
xor
adc
fiaddl
call
mov
test
lcall
orl
jnp
dec
jecxz
push
inc
jge
and
daa
dec
fistps
mov
daa
fisubrs
into
sbb
cld
xor
stos
popf
and
icebp
inc
sbb
sbb
gs
xor
mov
negb
inc
sub
xchg
sbb
push
inc
sub
mov
jnp
adc
popf
push
push
sahf
add
loope
xchg
mov
arpl
sti
pop
lcall
int3
mov
aas
and
popf
xor
and
mov
sub
fs
popa
xorb
sub
pop
lods
test
inc
aas
icebp
lods
jp
js
je
in
daa
adc
dec
mov
and
int
mov
add
mov
add
and
pushf
sbbl
je
stos
jns
insb
ret
cli
enter
xchg
and
cld
lret
in
and
inc
jg
push
mov
lcall
daa
sarl
in
sub
mov
cmc
mov
imul
cltd
jne
inc
lods
adc
aam
push
ds
daa
test
pop
inc
mov
aaa
and
pop
mov
mov
push
mov
jbe
xor
in
loopne
popa
icebp
jecxz
cmp
outsl
fisttps
adc
iret
mov
add
add
test
mov
movsb
xor
arpl
xchg
sbb
cmp
inc
pop
xchg
push
sahf
ss
hlt
scas
clc
call
test
stos
popf
push
push
push
push
int3
or
in
aam
mov
and
nop
push
cmp
dec
stc
mov
xor
lods
xlat
sbb
mov
hlt
push
sbb
pop
pop
stc
out
xchg
mov
mov
sub
pop
insb
lods
mov
popa
jge
mov
aas
dec
hlt
and
arpl
inc
cmc
sbb
mov
cmp
sbb
push
cs
jmp
mov
leave
sub
out
cld
pop
out
daa
mov
adc
adc
lea
daa
mov
xchg
jne
in
nop
add
inc
pop
stos
out
jmp
sub
mov
dec
dec
std
aas
aam
arpl
pop
sbb
leave
or
mov
pop
stos
stc
aad
popf
xor
insb
adc
inc
cld
mov
dec
lcall
push
popa
mov
std
cmp
xlat
mov
inc
xor
leave
adc
inc
adc
pop
xchg
push
fwait
cmpsl
aam
jl
test
dec
push
pop
xchg
jne
fwait
mov
push
add
xor
push
lcall
stc
sub
sub
jp
sbb
out
mov
inc
and
add
mov
mov
xchg
rcll
scas
lods
pushf
and
std
and
insb
pushf
adc
loope
and
mov
adc
mov
mov
mov
cltd
and
xor
popa
inc
out
insb
sbbb
aam
xor
and
xchg
dec
inc
inc
dec
add
xor
mov
out
in
andl
jbe
lret
imul
xchg
push
add
aas
adc
jnp
mov
inc
dec
rcrl
lds
adc
dec
imul
jnp
add
sub
fyl2x
jns
int
xor
popa
sbb
fcoml
dec
repnz
and
adc
pop
mov
repz
imul
pop
daa
out
push
pop
movsl
cmp
mov
popf
cld
cmc
xchg
pop
add
es
push
inc
adc
sub
xchg
inc
aas
or
hlt
inc
push
sbb
xchg
cmp
adc
xor
mov
mov
xchg
dec
imul
pop
mov
jp
in
cmpsb
adc
inc
cs
leave
and
push
cmpsl
jl,pn
mov
or
inc
cld
and
dec
inc
pmaxsw
imul
fmuls
les
dec
sub
mov
mov
pop
push
inc
outsb
mov
and
cltd
mov
dec
xor
rclb
cmc
jnp
cmp
shl
pop
es
aaa
in
cmpsb
fdivrp
in
adc
add
jns
push
xchg
add
sbb
add
mov
in
inc
jmp
movsl
ss
lds
clc
shl
mov
ret
cltd
xchg
js
dec
inc
sub
gs
clc
push
pop
cmp
jns
scas
mov
mov
mov
mov
mov
sub
xchg
mov
pop
decb
movsb
fsubrs
sub
push
aas
insl
sub
clc
cs
sbb
jne
push
push
jo
loope
aad
int3
hlt
push
pop
push
jg
lds
xor
mov
or
les
loop
insb
mov
jb
push
push
mov
ds
rcrb
lods
pop
jnp
lahf
cltd
test
pop
dec
lock
les
add
imul
pop
fs
push
cli
ret
repz
sahf
fwait
ljmp
xor
lahf
pop
mov
test
mov
in
mov
cli
imul
and
mov
add
fnstsw
xor
xchg
xchg
aaa
or
int3
add
cs
mov
mov
cmpsb
and
out
adc
pop
push
hlt
enter
mov
cmp
daa
pop
int
mov
test
int3
jae
mov
je
inc
iret
pop
rorl
push
pop
adc
scas
lock
adc
mov
test
out
aaa
and
iret
dec
icebp
stos
out
inc
jp
push
daa
xchg
add
mov
in
jmp
fwait
xor
push
into
jb
popf
hlt
ljmp
dec
and
out
movsl
hlt
xor
push
imul
test
ja
and
rolb
xchg
lret
loope
movsl
fwait
inc
dec
xchg
inc
adc
jmp
lcall
dec
inc
lahf
jnp
mov
daa
mov
add
int3
or
cmp
sahf
rclb
jle
jae
test
push
fistpll
pop
dec
and
in
pop
xchg
pusha
sahf
push
xchg
and
inc
jae
ds
aaa
sub
and
add
pop
aam
lods
pop
lds
pop
sbb
push
repz
jne
pop
stos
loop
sub
sub
andb
sti
mull
xchg
lods
mov
mov
ja
pop
sbb
push
cmp
pop
or
lcall
ja
mov
fwait
xor
in
adc
sub
test
or
ds
jp
ret
cwtl
xchg
or
int
jne
mov
and
in
sbb
push
or
or
jmp
jmp
add
iret
xchg
push
or
or
xchg
movsl
jo
mov
xor
bound
dec
loop
and
or
into
jle
adc
jecxz
or
in
lcall
pop
int3
sbb
sti
mov
sub
fistpll
out
dec
jb
mov
xor
fimuls
mov
fisttps
mov
or
jno
jecxz
sub
shll
shrd
cmp
dec
lret
pop
mulb
and
jnp
inc
shrb
leave
dec
or
or
mov
daa
in
cmp
pop
test
adc
int
nop
test
scas
scas
add
punpckhdq
dec
int
andl
add
push
repz
icebp
xchg
push
lret
les
clc
stos
fstl
sti
scas
and
mov
in
inc
frstor
daa
repnz
cmp
in
leave
adc
mov
lods
sbb
popf
arpl
lret
jecxz
cmp
or
outsb
in
xor
cltd
jns
mov
shrb
push
inc
rcrb
and
push
xchg
testb
cmp
gs
mov
test
orl
push
cmp
lock
dec
cmp
in
mov
pop
bound
fbld
lcall
data16
xor
imul
aas
push
cmpsb
ret
pop
sahf
push
movsl
ljmp
lret
lcall
pop
inc
icebp
mov
jmp
push
mov
add
lods
nop
pop
sub
sub
inc
in
jno
test
cmpsb
or
pop
cli
cs
mov
mov
push
xchg
mov
jp
scas
or
sub
icebp
adc
pop
xor
stc
into
inc
and
sub
cltd
iret
inc
add
cmc
xor
popa
jns
pop
out
ud2
insb
xor
xchg
ss
bound
out
cld
cmp
jmp
adc
lcall
jne
in
bound
dec
call
cwtl
aas
pop
mov
int3
mov
lahf
dec
and
inc
pop
mov
inc
push
push
push
mov
inc
insb
jmp
mov
and
das
push
dec
or
sbbl
daa
sbb
sbb
out
sbb
jo
and
add
mov
cmp
cmpsb
push
mov
push
stos
pop
test
std
xor
cld
fdivs
jecxz
outsl
sbb
sbb
add
push
inc
mov
mov
sub
pop
outsb
mov
ret
cli
xchg
xchg
jl
mov
and
mov
mov
pop
lds
out
sbb
int3
fsubrs
inc
sub
dec
cmp
and
or
inc
cmc
dec
sbb
xor
sbb
sub
into
aas
lahf
pop
cmp
inc
lret
adcb
popf
pop
mov
scas
call
mov
mov
push
mov
test
jae
loope
inc
and
mov
cmc
pop
imul
and
in
sarl
and
popa
mov
sub
push
hlt
xchg
jecxz
pop
scas
pushf
mov
shll
or
rolb
repnz
mov
fmuls
push
daa
out
jae
adc
cmp
sbb
and
in
or
nop
or
xor
dec
pop
jae
adc
dec
inc
adc
mov
int
xor
pop
in
xchg
jge
pushf
in
xor
xchg
into
cmp
into
inc
xchg
aad
stc
dec
push
sbb
cmc
ficompl
daa
rcrl
or
jne
das
cltd
rol
daa
cltd
into
push
rolb
push
xchg
repnz
daa
fstp
and
fs
jmp
das
inc
or
test
sub
lock
jmp
enter
loope
in
pop
scas
push
sub
insb
jno
mov
adc
xor
in
in
es
pop
inc
xchg
dec
ds
arpl
sub
into
bound
sbb
data16
mov
cmp
xchg
div
scas
negb
mov
aam
fisttps
cs
leave
addr16
cmp
push
lds
daa
outsl
movsl
add
scas
lds
jnp
mov
test
lcall
jl
in
das
push
jge
cmp
sbbl
stos
inc
repnz
inc
jns
ljmp
shl
daa
pop
cmpsb
sbb
lea
mov
cmp
xor
int3
jnp
pop
sub
inc
mov
inc
and
mov
jmp
in
cld
loop
jmp
adc
cmpsb
aad
cmp
jl
adc
lods
scas
xchg
lret
jmp
push
pop
jge
or
mov
dec
iret
aaa
ja
sub
aam
fimull
mov
mov
scas
and
call
in
and
sub
add
fisubrs
push
push
ljmp
or
inc
inc
add
fwait
rclb
mov
sub
adc
je
sbb
bt
bound
sahf
sarl
cmc
inc
and
and
jmp
shlb
out
mov
inc
lea
xchg
loope
sbb
inc
pop
jne
je
mov
mov
jl
mov
bound
mov
jns
add
cs
cmp
arpl
fidivs
inc
test
int3
shl
inc
in
movsb
ljmp
jecxz
jl
hlt
sub
jne
and
mov
push
jno
push
jle
adc
sub
cmpsl
imul
mov
pop
fld
jecxz
daa
das
fsubl
mov
mov
cmp
push
mov
test
fldt
sbb
adc
pop
jb
daa
or
out
sub
sub
cmc
pop
dec
mov
imul
idivl
and
out
subb
or
popf
xor
dec
mov
and
push
xor
push
inc
aad
cmp
xchg
popa
mov
sub
pop
sub
jecxz
notl
jl
cmpsl
xor
mov
fwait
rolb
sahf
mov
xor
inc
adc
pop
mov
cmpsl
mov
add
cld
push
or
shlb
push
sbbb
mov
add
mov
xor
and
out
loope
sub
cmpsb
push
sbb
jo
divb
rclb
jo
cmpsl
push
daa
subl
bound
jb
sub
data16
insb
dec
jmp
push
adc
std
dec
adc
xchg
out
adc
pusha
pop
imul
pop
rolb
inc
mov
sub
inc
xchg
aam
roll
test
imul
stos
mov
lea
pushf
notl
lahf
dec
les
adc
mov
imul
cmp
pop
sti
inc
lret
cmp
lds
pop
out
fucom
ret
jno
pop
dec
mov
aaa
adc
dec
cmpb
or
xchg
mov
or
test
fs
fsubs
in
sub
push
rdpmc
add
sub
pusha
inc
cmp
jnp
dec
repz
repz
lret
enter
mov
test
add
shr
inc
adc
and
mov
xchg
dec
pop
jne
cmp
fildl
add
mov
jle
add
push
sbb
mov
fisubrl
gs
and
movsl
cmp
cmp
int3
inc
int3
sbb
cs
dec
imul
arpl
mov
dec
sbb
xor
xchg
cmp
push
daa
push
adc
inc
or
dec
push
sub
cld
xchg
or
adc
loop
out
lahf
imul
dec
mov
push
add
std
hlt
xchg
and
adc
icebp
jbe
mov
jmp
addr16
jl
cwtl
jl
adc
shlb
inc
sub
aam
xor
and
mov
sub
pop
lea
pop
mov
scas
mov
push
adc
push
in
jb
hlt
push
and
aam
or
repz
xor
daa
and
cmpsl
std
dec
pop
and
adc
push
setg
jb
cmpsl
cltd
inc
fs
out
pop
dec
mov
jo
inc
xchg
addr16
jns
cmp
sub
sbb
jnp
pop
popa
xor
mov
lret
jmp
add
addb
and
loop
sbb
jae
and
sbb
cmp
xchg
aas
adc
addr16
jbe
or
pop
lods
daa
xor
push
cwtl
inc
push
fistl
pop
sub
and
nop
and
jl
mov
popa
mov
xor
mov
dec
gs
dec
pop
fsubl
imul
cmp
push
test
fidivl
gs
mov
cltd
xchg
mov
std
shrl
mov
rcl
fmull
ja
pop
icebp
scas
ret
jle
cvtdq2ps
push
pop
rcrl
filds
xchg
push
int3
cmp
mov
sub
imul
mov
mov
push
lods
mov
sbb
push
cmp
out
sbbl
jne
mov
lods
mov
pop
pusha
insb
inc
push
daa
insb
sub
xchg
push
aam
out
pop
pop
loopne
cmc
sahf
lret
lds
sub
leave
insb
int3
loope
pop
and
adc
leave
inc
pop
mov
out
push
scas
and
adc
adc
aas
jl
nop
mov
je
sub
adc
arpl
ja
add
cmp
pop
xchg
iret
and
imul
sbb
faddl
or
arpl
out
dec
cli
adc
js
and
mov
lahf
add
jg
sub
and
add
lds
adc
add
mov
dec
pop
inc
pop
xchg
add
and
or
popf
int3
loope
add
out
xchg
dec
dec
jl
dec
mov
fsubr
adc
icebp
and
sub
sbb
stos
mov
mov
and
xchg
pop
ja
xchg
xchg
push
std
pop
inc
add
pop
nop
and
cmp
pop
sub
outsb
iret
push
push
fisttpl
mov
push
out
mov
or
clc
pushf
loopne
movsl
rorb
sub
fildl
mov
sbb
inc
nop
rcr
dec
or
pop
nop
adc
pop
lcall
iret
nop
mov
lret
push
daa
movsl
out
outsl
dec
mov
sub
xor
mov
fs
xor
popf
sub
nop
stos
adc
orl
lock
dec
lcall
jmp
int
mov
push
adc
ss
push
pop
sti
enter
xchg
daa
add
dec
bound
jge
es
add
cli
mov
jge
adcl
xchg
or
inc
bound
pop
adc
lods
pop
jne
cmp
sbb
or
daa
popa
sub
inc
fwait
jnp
pop
cld
xchg
lret
mov
imul
test
inc
push
sbb
dec
xor
aad
loope
push
out
arpl
jp
push
sub
mov
inc
adc
roll
mov
mov
iret
inc
jae
sub
inc
push
ret
push
enter
fdivs
dec
popf
inc
push
sub
inc
std
movaps
daa
sub
sub
sub
jb
adc
push
dec
orl
or
jns
aam
cmp
xor
daa
sbb
pop
cld
push
xor
xchg
mov
pop
nop
test
cmp
in
xchg
dec
dec
pop
sahf
cmp
mov
mov
cltd
repz
sahf
fcmove
push
jae
inc
mov
insb
roll
imul
lret
adcb
inc
cwtl
push
lods
and
scas
cltd
adc
mov
loop
push
gs
dec
mov
faddl
imul
sub
fcomps
cmp
int3
inc
addr16
imul
fstl
and
fisttpl
test
xchg
daa
or
xor
push
sub
test
mov
enter
inc
xor
out
ljmp
mov
sarl
or
aas
sub
mov
sbb
xchg
dec
fcompl
stos
xorb
or
cmc
sahf
addr16
xor
cmp
lcall
push
cmp
inc
repz
dec
fistps
xchg
inc
sub
inc
test
jmp
or
popf
lock
cmc
daa
movaps
mov
adc
arpl
dec
rclb
fmuls
pop
das
cmp
lock
daa
mov
dec
cmc
cmpsb
cmp
push
xchg
pop
xchg
stc
push
add
mov
lret
inc
out
adc
and
cli
dec
jmp
cmp
pop
lods
enter
jae
cmp
fpatan
jae
out
cmp
inc
je
jp
xchg
jo
add
int3
daa
jae
pop
bound
pop
jge
xor
daa
shl
add
xchg
pushf
push
adc
es
sahf
adc
sbb
sub
imul
fisubs
xchg
xor
scas
cwtl
mov
cmp
movsb
ds
jb
loopne
sbb
imul
daa
cmp
jl
push
adc
repz
mov
push
xchg
scas
cmpsl
into
jmp
aaa
push
lods
or
fwait
mov
adc
loope
stc
and
out
and
rclb
or
mov
in
insb
dec
jmp
inc
pop
lret
idivl
jmp
inc
or
bound
sub
xor
inc
inc
mov
lea
xor
pop
lahf
stc
xor
push
js
in
mov
pop
les
mov
cmpsb
mov
mov
pop
and
lahf
repz
and
adc
leave
mov
push
stos
xchg
pusha
jmp
das
cmp
ss
and
xor
daa
aaa
inc
inc
mov
insb
jle
iret
rolb
adc
lock
nop
push
in
jmp
jo
mov
icebp
fs
sub
addr16
cmp
pop
push
popa
pop
stos
mov
subb
dec
push
xchg
scas
push
pop
aas
stos
or
in
push
fidivrs
inc
and
pop
les
int3
pop
and
lds
arpl
dec
lea
or
push
xor
repz
pop
scas
inc
jnp
fld
es
and
push
shlb
add
insl
out
rorl
lcall
dec
in
ja
mov
fisubrl
dec
sbb
lods
xor
mov
ret
or
and
and
inc
push
mov
stos
mov
or
std
adc
mov
out
std
cmp
das
dec
out
add
inc
fsubs
or
and
addl
std
es
add
insl
ds
jmp
stos
cmova
xchg
xlat
mov
test
pop
or
mov
sub
test
or
push
cld
push
hlt
sub
jecxz
jbe
lcall
stos
inc
leave
pop
jg
repz
xor
and
inc
jb
add
push
aam
mov
inc
or
push
mov
and
jae
xchg
outsb
rcrb
xchg
sbb
xor
dec
daa
push
leave
dec
xchg
mov
or
fists
ja
lcall
inc
mov
leave
out
pop
adc
lret
int
imul
xor
inc
mov
xchg
mov
xor
stos
jno
cmp
push
ljmp
dec
mov
clc
rclb
leave
daa
fstps
cs
pop
adc
push
mov
dec
loope
pop
int3
scas
inc
je
sub
pop
mov
addb
pop
imul
mov
test
pushf
gs
xor
dec
scas
or
addr16
push
push
or
mov
adc
cmp
dec
inc
jnp
call
daa
jge
std
cmp
push
scas
pop
negl
repz
shlb
sub
and
sarl
adc
and
dec
xor
adc
mov
inc
jg
inc
pop
aam
xchg
into
push
mov
lcall
add
mov
lods
call
pop
das
and
adc
insl
jge
adc
or
push
movsb
xchg
dec
out
xchg
inc
ror
and
imul
pop
subb
ja
sbb
xor
and
insb
lcall
push
shrl
leave
cmp
lret
push
push
cmc
hlt
fisubl
mov
dec
insl
out
mov
rcrl
out
cmpsb
dec
lea
in
sti
jbe
dec
mov
and
and
andb
lods
dec
fcoml
xchg
or
daa
je
pop
call
popf
mov
call
in
pop
repz
sbb
push
cmp
popf
ljmp
cltd
hlt
xor
mov
shrl
jg
popa
mov
aaa
mov
sbb
lret
repz
shl
daa
mov
xor
mov
jmp
aaa
xor
lea
mov
cli
mov
sub
adc
pop
fwait
outsl
mov
push
mov
lods
repnz
hlt
or
xlat
lds
cmp
out
stos
pop
rcll
fidivrl
lcall
pop
pusha
call
dec
ja
inc
nop
inc
dec
loop
call
push
xor
sti
sub
add
popa
push
sub
popf
leave
mov
push
mov
orb
sbb
insb
out
dec
leave
inc
dec
inc
inc
fistl
push
mov
iret
mov
les
cmp
std
ret
daa
mov
add
mov
adc
sbbb
sbb
push
adc
lret
add
pop
push
pop
inc
mov
sbb
xchg
jns
popf
push
roll
push
inc
inc
push
or
adc
rcrl
xorb
and
shl
mov
xchg
scas
mov
xlat
sahf
pop
insb
pop
ja
jg
les
jne
cmp
xor
add
cmp
ja
out
int
fistpl
mov
sub
fadd
scas
mov
int3
lds
iret
cwtl
pop
pop
mov
mov
sbb
in
sarl
daa
or
icebp
in
cs
xor
adc
add
loop
mov
pop
jns
push
orl
inc
fbstp
insl
sbb
cmp
movsb
test
cmp
jnp
daa
out
adc
loopne
sub
mov
movsb
push
sbb
pop
shlb
jmp
xchg
lods
cmp
inc
repnz
addl
mov
push
aad
mov
fstpl
mov
mov
daa
int
jmp
les
inc
cmp
xchg
mov
pusha
hlt
jmp
and
cmpsl
push
nop
push
shlb
pop
and
dec
jge
sbb
pop
mov
js
pushf
push
aas
xor
loop
outsb
adc
xor
out
inc
vpsrld
sarl
shlb
out
jp
pop
cli
sub
sbb
mov
sbb
inc
jnp
sbbb
inc
add
sub
xchg
std
cmpsb
dec
pop
sub
imul
in
sbb
xor
cmp
push
addr16
jae
inc
dec
arpl
out
sbb
push
cld
and
jb
into
xor
or
lcall
gs
jp
imul
in
inc
sbb
pop
cld
repz
addr16
cmpsl
cmp
inc
test
enter
adc
and
fidivs
cmpsl
es
std
fwait
mov
mov
addb
inc
lock
imul
push
adc
xor
inc
arpl
dec
in
sarb
pop
xchg
dec
sti
test
mov
ret
sbb
xchg
sbb
push
sub
push
outsb
pop
sub
lcall
mov
mov
je
inc
jle
fs
int
fcompl
mov
hlt
addb
test
mov
loop
jge
mov
adc
hlt
es
mov
dec
jg
cmp
pop
xchg
cltd
sbb
xchg
add
jnp
pusha
add
jge
lret
ret
sbb
daa
adc
xlat
fsubs
in
adc
inc
xchg
and
loop
add
rolb
mov
int3
fnstcw
mov
mov
jne
rolb
push
and
and
lock
or
mov
sbb
in
adc
roll
movl
or
add
cmpsl
je
or
add
clc
push
cmp
inc
sub
out
popf
xchg
cmp
pop
mov
xor
push
xlat
xchg
cmpsb
mov
in
movsb
push
lods
mov
and
add
popf
popf
pop
ds
jl
push
cmp
xchg
popa
and
mov
pop
mov
dec
pop
fists
cmp
jmp
pop
and
mov
sub
call
sbb
push
daa
orl
iret
dec
movsl
mov
icebp
or
call
mov
or
add
xor
out
push
pop
sbb
xchg
rol
scas
mov
xchg
out
insb
adc
in
mov
xchg
xchg
xchg
mov
popf
rcll
jno
mov
popa
mov
jno
mov
push
les
cmp
in
push
in
les
xlat
pop
sbb
and
pushf
mov
add
je
shl
lcall
xchg
imul
ja
mov
inc
rorl
sub
out
xor
imul
push
sub
xlat
faddl
xchg
aad
pop
loope
jle
fchs
int
sub
adc
pause
mov
mov
mov
rcl
sub
popa
pop
add
jg
mov
mov
push
lea
call
and
pop
inc
sbb
or
mov
xorb
dec
outsb
filds
loop
mov
aad
decb
mov
xchg
insb
daa
cwtl
test
movsb
les
sub
xchg
mov
push
stos
and
and
push
std
sbb
mov
jmp
adc
xor
mov
mov
cmp
insl
pop
mov
std
daa
add
mov
dec
mov
add
push
xor
fisubs
sbb
sub
push
lea
andl
jl
inc
or
inc
dec
mov
cmp
mov
inc
adc
or
ret
sub
lds
stos
mov
xchg
jae
cmp
push
enter
inc
dec
ljmp
dec
inc
dec
jmp
jae
into
sbb
leave
sti
pusha
aas
mov
nop
sbb
add
sbb
daa
push
pop
add
mov
or
scas
add
push
cmp
ja
adc
or
cs
daa
movsb
leave
jns
aad
pushf
fldl
sub
out
or
sub
jg
jae
dec
pop
sub
mov
cmp
adc
jnp
test
daa
filds
add
sub
lahf
dec
inc
rorl
cmpb
lret
or
stc
fnsave
scas
inc
dec
jle
iret
or
adc
sahf
xor
xor
cmp
out
and
hlt
out
loope
out
bound
add
daa
loop
add
ja
dec
fildl
jno
and
jge
pop
push
aad
lret
pop
dec
jno
loop
dec
scas
or
sub
jno
jmp
iret
fs
shlb
sub
ret
mov
loopne
std
jne
fcmovbe
je
leave
enter
in
pop
scas
mov
add
out
call
into
xor
mov
and
into
inc
fdiv
sub
stc
inc
leave
adc
aad
daa
out
fmull
clc
adc
push
inc
idivl
xchg
cmp
jecxz
cmp
mov
sub
lcall
cs
movsb
call
xor
sbb
or
or
mov
push
jmp
mov
cmp
cmp
cwtl
jp
adc
pop
imul
lea
sbb
sub
inc
adc
xor
inc
daa
fisubrl
pop
add
pop
popa
decb
xchg
imul
pop
in
es
inc
inc
scas
ja
aam
cmpb
push
sbb
cmp
xchg
aam
inc
push
lods
mov
and
push
jmp
mov
adc
add
in
das
dec
aad
add
inc
addr16
mov
test
arpl
adc
jne
icebp
dec
rcrl
popf
mov
cmp
mov
int
int
adcb
push
or
push
daa
xchg
mov
add
inc
mov
int
sbb
jnp
add
loope
daa
lret
mov
shl
sbb
pop
pop
repnz
dec
mov
imul
and
mov
ret
adc
and
out
push
outsl
and
jecxz
pushf
dec
xlat
push
pop
stos
xchg
int3
inc
outsl
not
test
jne
gs
lcall
mov
cmp
xchg
loopne
xchg
xchg
cmp
xchg
inc
enter
push
cmp
test
push
pusha
push
pop
mov
xor
or
cmp
jno
in
pushf
clc
cmpl
jae
and
xor
add
dec
pusha
jle
imul
pop
cmp
repz
sbb
test
subps
adc
mov
sub
rclb
movsb
dec
push
add
fbstp
cmp
pop
test
leave
daa
sub
int
cmova
jns
push
fisubl
mov
out
fnstcw
xchg
inc
pusha
in
fs
repz
adcb
ds
daa
mov
repz
xor
or
lea
fisubrl
and
xor
push
psubsb
dec
sbb
outsb
outsl
or
pop
jle
test
cmc
sbb
and
dec
jmp
loop
in
imul
adc
or
push
jae
enter
mov
and
or
sub
in
lods
mov
int3
addr16
nop
xor
sub
movsl
in
sub
fbld
sbb
push
jae
dec
sub
xchg
decb
xchg
xchg
insb
daa
lods
inc
sti
and
adc
sub
sbb
lret
and
int3
in
ja
call
notb
dec
sub
mov
daa
lcall
dec
pop
mov
xchg
cmpsb
dec
push
cmp
aaa
mov
pusha
fnsave
jecxz
pusha
aas
jae
popf
fcomps
mov
or
ja
mov
jle
popa
scas
sbbb
mov
out
in
sub
lret
ds
jge
adc
inc
inc
in
in
fwait
pop
daa
sbb
pop
mov
add
mov
ret
dec
aas
mov
shl
jae
sbb
dec
imul
imul
lods
mov
xrelease
cs
ss
ret
in
das
negb
xchg
push
jnp
fyl2xp1
and
cmc
iret
scas
int
fldpi
in
dec
add
out
daa
ret
jge
cwtl
cmpb
or
test
mov
out
lods
rcr
outsl
mov
cli
inc
icebp
inc
fs
out
push
push
jle
out
cmp
xor
xor
pusha
mov
jnp
and
rcll
and
jmp
pop
xor
hlt
jge
enter
cmp
bound
insb
imul
popf
jae
nop
sbb
xor
pop
mov
les
mov
jnp
popa
out
pop
xor
xor
iret
and
nop
enter
imul
dec
jnp
jp
inc
jo
pop
mov
cmpsl
jl
push
repz
and
ret
xor
orb
sub
loope
mov
outsb
repnz
pushf
int3
sbb
jns
pop
fiaddl
sub
ret
mov
hlt
mov
in
jnp
mov
pop
cmp
out
dec
sub
popa
cmp
imul
nop
mov
dec
sub
stos
xor
xchg
sub
pop
sub
adc
cmp
mov
stos
cwtl
push
fisttpll
popa
out
nop
mov
pop
cmp
cwtl
aad
cmp
sbb
or
sub
pop
gs
leave
cmp
adc
pop
cltd
mov
or
mov
pop
loop
cmp
test
imul
cmp
aad
notl
icebp
nop
icebp
sbb
push
and
cmp
fdivrp
mov
push
aaa
mov
loope
scas
fcomps
push
ja
out
mov
sbb
push
std
imul
insb
addr16
lods
push
aam
push
add
popl
stos
sbb
and
mov
sbb
jns
jp
sbb
or
fxch
fwait
push
jge
loopne
cmpsb
popa
inc
cwtl
lret
int
sub
and
leave
add
lea
mov
int3
mov
mov
inc
cmp
scas
repnz
imul
push
test
pop
xor
mov
bound
sub
rcll
adc
popf
js
adc
adc
and
imul
pushf
sbb
test
icebp
sbb
lock
cmp
stos
and
pop
inc
ret
and
daa
int
add
insl
mov
popa
push
mov
out
sub
out
lds
lock
cmp
out
cld
outsb
push
pop
sbb
inc
loop
pop
or
and
aas
popa
std
jnp
cltd
adc
fldt
sbb
add
decl
repz
xchg
aad
inc
movsb
jmpw
cmp
push
popa
cmp
test
fcoml
cmpsl
inc
mov
jne
stos
adc
adc
jnp
mov
ljmp
and
push
xor
xor
push
inc
imul
outsl
push
leave
jle
inc
andl
je
scas
cmp
fldt
cs
orl
mov
sbb
or
mov
pop
xchg
dec
loopne
popa
and
mov
mov
push
es
fldenv
fsubs
das
mov
call
inc
xchg
test
sbb
adc
push
aas
cmp
mov
lcall
push
pop
jno
scas
cltd
push
cltd
adc
dec
enter
daa
xor
push
pusha
aad
and
enter
sbb
adc
adc
lds
ret
inc
xlat
stos
sbb
xor
stc
repz
lret
pop
or
pushf
ja
dec
cli
adcb
jae
xlat
fsubs
pop
inc
push
loop
mov
xor
call
lret
adc
jmp
mov
mov
jbe
and
jae
dec
inc
adc
xorl
mov
and
addr16
xor
push
mov
and
lea
xor
icebp
adc
push
int
pop
inc
scas
jno
sub
daa
mov
pop
xor
in
inc
and
stos
loop
imul
imul
push
movsl
dec
mov
cmp
xor
jo
cltd
or
inc
sbb
in
testb
adc
test
push
ss
fs
and
lea
xchg
aas
fwait
xchg
add
sbb
out
fcomp
adc
jmp
in
js
or
mov
mov
xor
mov
mov
adc
aas
aas
shr
mov
out
xchg
add
add
xchg
scas
out
fldcw
mov
mov
or
jbe
xchg
pop
xor
lcall
add
subb
out
mov
inc
and
push
dec
lcall
hlt
push
push
daa
push
mov
movsl
sbb
stc
cmp
sub
push
es
scas
xor
or
and
sbb
cmp
pop
push
jecxz
fs
dec
lret
dec
lods
popa
ds
mov
mov
add
jo
xor
fdiv
or
cwtl
mov
scas
push
cmp
cmp
pop
cmp
sbb
xchg
cmpsl
dec
push
lahf
sbb
cmp
je
sarl
cmp
mov
pusha
jmp
in
xchg
test
int
mov
xor
cmpsb
mov
sub
cmpsl
dec
imul
cmp
aaa
jbe
push
push
push
push
xchg
pop
jae
movsl
ret
xchg
dec
sub
stos
mov
gs
ljmp
adc
cmp
adc
push
dec
xor
js
add
out
xchg
dec
lock
cmc
inc
mov
movsb
push
mov
jns
out
jns
dec
stos
js
ds
imul
fs
sub
movsl
xor
mov
push
int
daa
out
and
inc
ret
pop
out
icebp
nop
mov
sbb
xor
or
add
jmp
add
xchg
pop
out
mov
xor
sub
xor
xchg
jp
addl
pop
les
or
add
out
push
rcrb
out
stos
addb
int3
mov
sub
or
outsb
out
mov
es
mov
in
inc
sub
xlat
sbb
decl
lret
inc
or
fsts
push
in
jne
lret
cmpl
push
mov
mov
sahf
xlat
fimull
cli
or
sbb
cs
mov
jmp
mov
or
adc
stos
outsl
mov
mov
xchg
loope
cmp
pop
add
out
gs
or
ss
mov
pop
or
cwtl
iret
jl
div
or
jmp
sub
rorl
or
add
push
or
inc
int
lahf
jp
test
aaa
cld
outsl
sahf
jle
dec
xchg
sbb
int
mov
cmpsl
cmp
mov
dec
ljmp
mov
fwait
sub
xor
cs
stos
sub
out
mov
or
int3
jnp
push
sub
es
mov
or
loop
or
scas
push
mov
push
jle
outsl
jnp
jb
push
jno
lods
or
or
mov
inc
cmp
scas
mov
sub
ja
or
aad
rcrl
popa
push
inc
xchg
xchg
rcrb
dec
int
pop
pop
adc
sbb
jne
sbb
pop
shlb
or
scas
mov
es
or
imul
clc
mov
or
cmp
andb
or
in
pop
jne
bound
fildl
ljmp
cli
hlt
mov
jle
push
mov
jne
mov
mov
mov
sub
lahf
cwtl
ss
fsubl
orl
sub
push
or
xchg
jbe
sbb
mov
push
neg
and
orb
lahf
inc
adc
int3
sbb
adc
fisttpll
mov
xor
mov
fbstp
popa
or
gs
flds
roll
sahf
int3
mov
pop
dec
in
or
sub
test
nop
or
clc
add
lcall
sbb
lock
mov
push
stos
loopne
adc
push
lods
mov
or
in
mov
sub
and
cmpsb
jmp
mov
pusha
mov
nop
sahf
and
mov
adc
daa
loop
mov
sbb
add
or
ljmp
mov
push
sbb
or
push
mov
je
test
mov
daa
sbb
sbb
int3
and
push
in
push
sbb
out
sbb
or
jbe
cwtl
int
inc
add
and
mov
movsb
ja
push
fimuls
jmp
inc
adc
imul
or
dec
imul
cli
inc
mov
in
aam
lods
dec
pusha
out
jae
cli
int
cmpb
mov
pop
xor
call
push
call
fcompl
cmp
and
cmp
adc
jne
push
out
cli
bound
cmp
dec
mov
push
out
or
inc
test
xchg
sub
add
cli
xor
movsl
push
jae
sbb
daa
aaa
jecxz
push
cmp
dec
ret
cli
dec
out
inc
testl
jne
clc
xchg
jg
jle
call
cmp
aaa
push
push
cs
scas
stc
decb
cmc
movsb
lds
xchg
sub
mov
xchg
enter
or
push
push
mov
out
xchg
xchg
lea
push
pop
cltd
insl
jns
mov
or
aam
lret
mov
sbb
pusha
pop
rcll
inc
xchg
jae
std
sbb
push
stos
dec
in
push
or
rorl
js
nop
std
arpl
inc
inc
adc
jne
icebp
shlb
mov
adc
aad
cld
es
mov
adc
sbb
out
add
xor
adc
inc
cmp
lahf
cmp
rcll
mov
mov
insl
push
pop
sub
push
push
bnd
ret
mov
fdivrp
push
frstor
pop
cmp
js
rorl
adc
pop
cli
icebp
int3
test
mov
mov
roll
and
sbb
hlt
sub
fadds
enter
mov
push
dec
adc
xchg
mov
mov
mov
in
cmp
xchg
es
lret
cmp
dec
sub
aad
outsl
jge
add
xlat
leave
sub
dec
or
cmpsb
aas
fcmovne
inc
addr16
lock
jno
ret
cmpsb
add
shll
sbb
add
adc
sub
insb
jl
lock
dec
nop
sub
mov
jge
mov
or
std
push
jne
lahf
jae
mov
inc
xor
sarb
adc
mov
xchg
mov
test
call
inc
push
fs
and
std
jnp
dec
dec
repnz
mov
push
mov
add
daa
test
jae
dec
push
xchg
cmc
in
shlb
sbb
hlt
fwait
cmp
and
popf
pop
mov
xor
fmul
imulb
loop
cmp
rcll
enter
sbb
nop
repnz
int3
cmpsb
cmp
pop
mov
fcompl
adc
inc
popf
push
gs
mov
pushf
dec
call
movsl
bound
adc
cmpsl
or
je
cmp
smsw
scas
inc
dec
xchg
insl
scas
jne
sti
sahf
inc
mov
mov
sbb
es
stos
pop
dec
cld
in
test
out
and
xor
or
add
xor
jbe
sub
adc
sub
add
cmc
dec
xor
fldt
lea
cwtl
outsb
xor
mov
into
jb
cmpsl
pop
sti
xchg
and
sbb
inc
fsubp
jecxz
xchg
or
adc
loop
sbb
aas
inc
push
dec
hlt
call
sbb
packssdw
or
loope
lret
dec
shlb
test
jecxz
sbb
dec
or
jnp
xchg
or
push
sub
je
mov
mov
and
rorb
mov
clc
adc
sbb
les
fucom
sub
ret
or
stc
dec
push
pop
fs
or
loop
pop
jmp
sbb
out
jo
test
add
iret
or
mov
insb
push
adc
popf
aas
icebp
push
out
mov
and
mov
fwait
insl
dec
lret
sbb
or
jmp
push
push
subb
mov
scas
sub
lods
or
dec
stc
push
add
jnp
ficompl
inc
sbb
sub
sbb
push
sub
jne
mov
jmp
mov
or
out
das
mov
or
stos
shl
lea
and
lcall
or
push
out
or
xchg
aaa
cwtl
pop
jmp
imul
sbb
mov
in
or
push
stos
or
add
loope
sub
xor
xor
adc
cmp
rcrb
cld
jbe
adc
add
into
out
subl
aam
pop
adc
subb
inc
in
adc
or
push
pop
lret
fnstcw
xchg
xchg
xchg
xchg
dec
popa
in
dec
mov
push
jmp
push
xchg
push
pop
or
pop
popa
scas
cs
xchg
inc
jno
std
or
addr16
ret
and
and
pop
or
push
jne
jmp
mov
pop
sar
sub
stos
sub
aad
lret
dec
test
mov
dec
xchg
xchg
sub
inc
test
scas
sbb
pusha
loop
xchg
jmp
jl
adc
and
fs
imul
cmp
xchg
xchg
repnz
insb
call
push
enter
push
iret
sbb
dec
cmpsl
adc
jnp
sub
push
push
sbb
in
mov
xor
adc
outsl
jo
jae
out
arpl
fidivrl
push
clc
push
or
mov
push
or
add
call
or
fdivr
or
popa
push
in
mov
ret
add
dec
pop
xchg
sub
inc
or
jb
stc
sbb
inc
xor
repz
lcall
into
pop
lds
xor
mov
testb
adcl
mov
xor
cmp
test
add
lret
jae
mov
hlt
inc
std
jmp
sarl
cld
push
cwtl
adc
or
adc
or
ret
mov
and
or
push
ret
lds
call
dec
lock
dec
add
or
clc
jae
cmp
push
cmc
lret
lret
fstps
rcll
inc
or
hlt
fadds
sub
or
ja
test
popa
sbb
sub
aaa
aam
cmp
mov
arpl
mov
into
jl
imul
xchg
xchg
leave
or
sub
loopne
adc
scas
mov
inc
sbb
xchg
kmovb
daa
or
mov
push
sbb
adc
xchg
pop
fdivs
repnz
imul
ljmp
pop
in
or
int3
or
sbb
mov
mov
push
fcomip
cwtl
outsb
or
sbb
sti
mov
jmp
ret
sub
pushf
xor
int3
mov
cmp
mov
push
and
clc
test
or
adc
sub
call
mov
sbb
movsb
fisubs
dec
adc
inc
adc
int
sbb
and
out
ds
sbb
or
pop
adc
or
adc
or
xor
dec
stc
and
or
and
mov
add
int
sub
add
fldt
cmp
jnp
or
sub
sub
fisttps
pop
pop
outsl
jmp
push
ljmp
sti
fcomps
mov
jp
lret
sub
pop
sbb
ss
je
push
jno
ljmp
xchg
bound
or
imul
jnp
arpl
scas
test
add
repz
outsl
inc
adc
jne
push
cld
xor
or
enter
rorl
pushf
dec
push
hlt
push
int3
bound
aaa
out
xor
daa
lock
xor
cld
aaa
xchg
pop
or
out
dec
inc
add
mov
push
call
and
adc
push
cmc
sbb
lret
test
and
push
xchg
sub
pushf
and
lcall
push
sbb
fisubs
scas
push
in
jbe
cwtl
jae
sahf
inc
jmp
and
iret
add
pop
cmpsb
rcrb
add
xor
rcrl
and
rdtsc
cmp
pop
pop
das
daa
hlt
xchg
loop
dec
pop
rcrl
cmp
inc
sbb
out
cli
push
and
addr16
aas
mov
dec
fimull
scas
or
int3
imul
jle
push
pusha
sbb
das
pop
xchg
shr
insb
daa
addb
pusha
sti
out
sahf
out
smsw
jne
shr
into
jmp
mov
sub
adc
fcomp
pop
clc
dec
adc
sub
int
cmp
xor
adc
aaa
pop
sbb
and
inc
loope
inc
js
or
mov
aam
cmp
dec
or
xlat
fwait
lea
push
mov
sub
in
cmpsl
pop
or
add
insb
xor
adc
push
jmp
out
cld
popa
imul
fstpl
and
push
or
daa
es
addr16
stos
out
add
fwait
mov
pop
imul
dec
push
mov
mov
dec
inc
stos
or
sub
xchg
push
pop
cmpsl
jmp
test
jb
loope
pushf
sbb
pop
xchg
dec
aas
mov
push
add
sti
jno
adc
rcll
aas
daa
and
stos
test
cli
jb
loopne
jb
pop
and
shlb
or
andl
sbb
jle,pn
sbb
or
aam
cmpsb
xor
pop
xchg
ljmp
push
std
and
add
sbb
push
fdivrl
daa
andl
sahf
dec
cmp
xor
aad
mov
testl
shlb
in
cmpsb
mov
sbb
ja
fwait
aam
iret
mov
out
push
test
fwait
or
outsb
ja
xor
in
out
mov
enter
pushf
cmp
or
push
aad
mov
cmp
mov
jmp
mov
clc
jne
sbb
into
dec
fsub
cmp
inc
pusha
loopne
popa
clc
ljmp
push
or
pop
out
mov
push
cmpsb
dec
sub
leave
addb
mov
jg
call
fldenv
or
xorb
dec
pop
mov
cmp
xchg
and
adc
lods
insb
rol
mov
fs
mov
jae
fwait
or
gs
aad
and
std
inc
mov
popf
pop
cmp
jle
push
adc
pop
jno
and
xor
scas
inc
push
push
ljmp
xor
cmp
dec
jae
and
daa
cmpsl
mov
ljmp
stos
inc
cmp
sbb
mov
pop
loope
test
cmpsl
sahf
rcll
adc
insb
cwtl
push
xor
daa
push
leave
shl
push
in
scas
inc
pop
push
scas
mov
in
inc
cmp
pop
daa
mov
lea
mov
outsl
jle
xchg
icebp
daa
loope
xor
clc
cmp
mov
dec
mov
fcoms
shr
aad
inc
insb
push
daa
sub
in
pop
aam
leavew
sbb
cmp
bnd
leave
cmp
fdiv
xchg
push
je
mov
jo
call
shr
lcall
add
sub
mov
and
aaa
pusha
in
cld
xchg
jmp
loop
out
dec
pop
outsb
shl
test
addr16
daa
mov
dec
xchg
in
out
cmp
inc
mov
shll
pop
ljmp
in
sbb
daa
jecxz
lahf
loope
lea
add
mov
inc
gs
adc
mov
ficomps
inc
rcrl
cmp
cmpsb
jb
adc
popa
push
in
and
mov
ljmp
hlt
jnp
jne
and
negl
aaa
fisubl
push
xchg
inc
out
jne
fs
out
insl
push
mov
pop
mov
add
push
mov
xor
scas
jle
sub
mov
sub
pusha
xchg
sti
push
xchg
xchg
inc
cmp
jno
mov
and
loop
out
jnp
lahf
popa
mov
loopne
loope
xchg
ljmp
in
dec
loopne
inc
insl
mov
xor
gs
imul
daa
notb
hlt
jmp
imul
ret
stc
push
xchg
mov
xchg
je
add
mov
std
dec
ss
xchg
or
cmp
rcll
sti
dec
mov
mov
jno
dec
das
inc
daa
inc
cld
mov
inc
sbb
mov
jae
sti
cmp
fdivl
mov
aad
cli
shlb
jne
pop
sti
xor
xor
mov
jmp
cld
mov
lods
lock
jg
mull
pop
cmp
add
test
movsb
fimuls
mov
jb
jl
aaa
jae
repnz
mov
loope
or
and
sub
and
sbb
pop
cli
xor
lcall
movsb
or
scas
sbb
mov
cwtl
inc
inc
fwait
dec
bound
cmpl
popf
lock
pop
daa
imul
fcmovb
cmp
push
daa
insl
por
cs
push
lods
inc
jae
adc
outsb
add
push
xchg
int
iret
pusha
arpl
or
scas
sub
js
sbb
xor
dec
popa
shll
pop
push
adc
into
imull
insl
insl
jl
xchg
and
nop
les
xchg
and
das
inc
push
push
xchg
in
jle
cmc
aaa
add
cmp
pop
dec
and
repz
inc
sbb
jle
jg
and
adc
mov
or
mov
mov
mov
mov
dec
mov
dec
xor
add
lods
push
add
sub
loope
xor
jb
mov
sbb
sbb
out
xchg
mov
insb
outsl
jle
repz
scas
call
add
sub
jl
loop
dec
fucomi
mov
rorb
outsb
jl
or
loope
sbb
ds
inc
lods
xor
adc
test
dec
cmp
and
dec
dec
cli
lods
inc
insb
into
adc
int
mov
scas
dec
pop
sub
je
add
icebp
loope
xchg
jmp
pop
popa
adc
mov
or
daa
out
cmpsl
xor
push
lods
mov
inc
scas
loopne
mov
mov
add
pop
mov
mov
decl
imul
push
mov
add
or
sti
fnstsw
lea
and
sub
inc
mov
jb
jp
jbe
jmp
or
xor
fmul
inc
les
inc
iret
test
push
mov
shlb
rclb
inc
push
pop
stos
mov
addl
push
xchg
and
fimull
loop
or
mov
roll
popf
mov
stc
cmp
push
xor
iret
lcall
test
push
pop
sbb
scas
jmp
cmpsl
mov
sub
sbb
stc
andl
aaa
xor
and
inc
adc
cmc
add
mov
mov
daa
cmpb
scas
inc
add
mov
mov
je
pop
pop
lds
and
and
sbb
inc
out
cmpsb
mov
xor
sbb
ret
cmp
mov
imul
test
adc
popf
inc
pop
pushf
out
adc
mov
pop
repnz
sbb
push
pop
lret
incb
cli
pop
pop
movsb
out
dec
std
lods
hlt
aas
sub
push
fnstcw
xor
sbb
gs
xchg
out
mov
scas
aas
or
fadds
cmc
cld
mov
les
and
in
mov
ret
arpl
fs
fdivrs
mov
push
gs
insb
xor
popf
popf
sub
xor
ja
cmpb
scas
adcl
test
hlt
mov
leave
lret
iret
into
cmp
imul
xchg
add
mov
repnz
cmp
mov
cltd
mov
mov
fs
stos
cmp
push
lret
out
sub
xchg
cli
test
scas
pop
and
and
imul
and
jg
ret
daa
scas
xchg
sub
inc
xor
fcomps
sub
sbbl
jnp
imul
sbb
mov
test
mov
xorl
jle
pop
test
stos
xor
or
jne
cmp
adcb
xor
leave
adc
xor
sbb
jle
int3
mov
movsb
test
jp
fcom
jae
adc
lret
es
or
jg
rorl
and
popa
repnz
jbe
or
mov
insl
or
pop
add
or
adc
shr
lds
or
sub
fs
mov
jl
pop
repnz
insb
jnp
pop
mov
push
jecxz
or
jmp
push
or
test
in
arpl
mov
fldl
loope
insb
daa
mov
push
and
les
je
pop
ds
and
mov
and
jecxz
mov
je
idivb
call
adc
adc
addb
or
mov
mov
loope
jnp
pushf
ljmp
or
pop
rcr
repz
loope
iret
in
push
push
mov
ljmp
push
cmpsb
addr16
or
jno
or
loope
mov
or
xchg
jne
test
xlat
or
or
push
or
jle
jnp
icebp
dec
out
test
sar
sub
push
and
add
pop
or
cmp
or
push
sub
fsub
push
or
gs
aas
and
fidivl
test
jne
pop
les
jle
cmp
add
cmp
sahf
xor
push
cmp
adc
or
pop
ror
sar
or
xchg
or
in
test
sbb
addr16
push
add
mov
adc
pop
or
int
cmp
aad
mul
xchg
sub
dec
orl
pop
enter
and
pop
pop
sub
jno
lea
insb
rcrl
fnstsw
or
xor
add
push
lea
in
pop
js
add
dec
loop
xchg
fldenv
je
hlt
repz
loopne
test
or
lea
push
push
sub
out
outsl
aaa
iret
jle
ret
or
inc
fsubr
negb
or
mov
insb
lret
pop
jb
or
adc
mov
or
dec
negb
stos
xchg
xlat
or
cltd
loopne
imul
scas
or
daa
fcomps
or
inc
sbb
fwait
pop
mov
xor
dec
pop
mov
add
push
xchg
clc
pop
fstl
sbb
sbb
mov
popf
das
mov
idivl
jmp
sub
jbe
out
repz
rcll
or
jl
inc
cmp
mov
sub
jns
xor
push
mov
or
dec
push
hlt
lret
jns
or
jo
out
or
or
cmpsb
dec
lret
mov
stos
scas
out
ljmp
pop
fisubrl
pmuludq
mov
loopne
push
add
daa
sub
dec
int3
jp
std
xor
daa
lcall
jl
mov
pop
movsb
gs
dec
nop
sbb
jne
mov
mov
push
int
inc
mov
or
shr
pusha
xchg
popa
sub
divb
paddb
push
popa
push
ljmp
cltd
ds
ss
adc
sti
xchg
inc
push
mov
pop
sub
push
out
addb
ret
inc
repnz
jnp
xor
hlt
push
fsubrp
mov
shl
inc
out
int3
cld
out
fcompl
xchg
loopne
scas
daa
adc
addr16
xchg
mov
lds
stos
pop
inc
cmp
mov
lahf
nopl
hlt
xchg
mov
scas
cltd
inc
loop
fwait
cld
es
add
mov
inc
mov
jae
and
adc
frstor
xchg
mov
sub
sbb
test
aam
out
cmp
xchg
push
dec
lcall
cmp
mov
fwait
lcall
push
mov
cmpsl
inc
testb
add
dec
ret
xchg
fcompl
jnp
sbb
lret
divb
mov
jp
pop
and
sub
mov
jl
mov
inc
aad
jl
sti
andb
repz
aas
orl
xlat
push
lahf
adc
mov
sahf
xchg
call
insb
sub
lretw
jnp
out
daa
inc
sbbl
aas
test
movsb
in
lods
daa
out
xor
cwtl
push
jae
jmp
decl
inc
test
cmp
add
dec
je
inc
movsl
lods
pop
sbb
hlt
leave
dec
pop
pushf
adc
sbb
sub
insl
add
ja
cmpsb
inc
icebp
iret
pop
js
mov
push
push
aad
pop
out
cli
or
repz
pop
xor
xor
inc
les
adc
pop
cmp
imul
or
mov
mov
pop
inc
outsl
xlat
push
daa
in
cmc
sub
in
sbb
ret
clc
push
lret
sub
sbb
in
xor
stc
dec
pop
lea
add
add
les
jp
or
notl
and
test
lret
icebp
js
fdivp
pop
push
mov
data16
lods
aam
push
and
and
cmpsl
nop
pop
or
xor
mov
daa
fcmovbe
ror
test
into
mov
jge
cmc
call
sbb
and
inc
push
xchg
out
std
or
and
inc
adc
xchg
clc
add
pop
negl
inc
ja
aad
push
cmp
inc
sbb
outsl
mov
or
xchg
andb
jo
mov
mov
xlat
jle
sub
xchg
sarb
sub
sahf
stc
mov
pop
xchg
scas
xchg
push
inc
push
cmp
add
inc
sub
xchg
and
inc
pop
mov
xchg
jns
mov
xchg
xchg
ret
or
mov
cmp
das
cld
fisubrs
adc
dec
and
repz
adc
iret
into
add
sub
sub
outsl
dec
stos
imul
insb
xchg
loope
cmpsl
inc
aaa
mov
sub
or
pop
jnp
aam
dec
adc
addb
inc
in
mov
mov
cmp
xchg
push
clc
insb
or
das
cwtl
call
inc
roll
pop
fisubrs
jg
xorb
cmpsb
out
cmp
shlb
and
dec
lahf
testl
test
into
xorb
mov
xchg
or
popa
mov
mov
jg
mov
jno
and
ffree
fistpll
test
pop
in
mov
inc
push
adc
pop
push
roll
cmpsb
adc
repnz
mov
mov
push
sahf
push
pop
xchg
mov
pusha
pop
faddl
dec
cmp
in
sbb
push
movsb
mov
dec
jo
rorb
jmp
clc
lret
rorl
sbb
stc
leave
pop
pushf
xchg
cmp
jge
mov
cmp
je
daa
mov
icebp
dec
jns
movsb
xor
sbb
and
shlb
in
andb
dec
mov
ljmp
push
data16
stc
xchg
mov
out
jge
cmpsb
or
nop
mov
or
xor
sbb
cmpl
bound
xlat
loopne
push
pop
xorps
mov
or
xor
movsb
push
mov
sub
push
cmc
nop
adc
addb
bnd
or
lret
pop
cmp
repz
mov
arpl
imul
int3
push
je
pusha
push
dec
mov
popa
pop
xchg
mov
sub
dec
adc
lea
cmp
sbbl
xor
dec
daa
mov
sub
nop
lret
notb
and
fs
mov
jmp
dec
pushl
ss
mov
aad
adc
xor
inc
pop
pop
push
bound
xor
lcall
stos
cmp
cwtl
out
bound
sub
inc
cmc
adc
ret
cli
or
jae
fsubrs
xchg
imul
sbb
dec
sub
sub
lea
cmp
mov
lret
jno
es
sub
mov
test
or
ret
in
pop
int
dec
movl
rorl
aam
sub
leave
movsl
ret
adc
lods
daa
push
fcoml
cmp
test
rclb
sbb
sub
fdivs
jnp
xor
daa
push
jge
mov
les
push
mov
std
xchg
loope
loope
push
jnp
leave
or
cmc
cmp
xchg
stos
or
jbe
and
adc
jae
push
hlt
xchg
xor
cmpsl
lahf
mov
xor
mov
in
sbb
mov
pop
mov
push
xchg
pop
lret
fwait
cmpsl
test
cmpl
std
xor
jns
pop
pop
rorb
push
mov
adc
pop
pop
enter
pushf
imulb
stc
test
ficoms
dec
in
jle
adc
scas
arpl
mov
daa
inc
mov
mov
rolb
mov
sbb
inc
out
inc
xor
lods
sub
jbe
loop
cmp
in
push
loop
xchg
imul
adc
mov
and
les
repz
stc
jns
mov
mov
mov
sbb
jo
stc
jl
enter
xlat
and
inc
aad
inc
jae
sbb
or
pop
je
push
cmpsb
mov
mov
mov
fidivrl
popa
xor
aam
daa
outsl
inc
imul
stos
ret
fildl
aas
and
mov
sbb
movsb
mov
aas
xchg
pop
test
ss
xor
xchg
mov
push
push
push
push
fildl
cmp
lcall
push
dec
aas
inc
sarl
in
mov
inc
pop
orl
cmp
jp
pop
or
and
daa
cwtl
movsb
pusha
shll
sbb
add
pop
mov
inc
jp
rorl
adc
pop
jnp
out
adc
sbb
sarl
lret
clc
xchg
add
jmp
sbbb
lods
pop
fists
rorl
hlt
xchg
mov
lret
call
or
pop
scas
adc
rolb
movsb
imul
inc
push
pop
pop
inc
add
in
jnp
int3
mov
rclb
push
sbb
cmpsb
pop
xor
push
fs
push
scas
imul
ds
aas
pop
jns
xchg
mov
adc
sbb
jge
pop
cmpsb
stc
cli
mov
in
nopl
jno
mov
ja
arpl
mov
sub
imul
inc
dec
test
mov
adc
mov
xor
in
hlt
mov
adc
imul
daa
imul
pop
test
push
or
test
pop
movsl
pop
shrl
lcall
pop
xor
repnz
jmp
mov
dec
lcall
xchg
adc
jb
aam
xchg
out
xchg
daa
in
push
sbb
sbb
out
pop
shrd
in
setg
adc
inc
imul
cmp
pop
pop
mov
insb
out
mov
adc
sti
add
out
xchg
inc
int3
mov
inc
xor
aam
jl
inc
movsb
xor
xlat
sub
mov
push
mov
in
popa
mov
in
jecxz
inc
and
pop
fists
xor
jb
ljmp
dec
pop
push
mov
cmp
insl
jno
mov
mov
lods
testb
mov
mov
jno
mov
scas
push
mov
sub
test
lea
push
loopne
jmp
sub
or
jb
jns
mov
ljmp
pop
xorb
ja
arpl
mov
cmc
lea
sbb
sbb
inc
mov
mov
daa
jl
xor
adc
scas
and
int3
and
bound
fadd
shlb
mov
jle
and
adc
jecxz
mov
leave
or
jle
mov
sti
fsubrs
mov
shll
movsl
fisttps
cli
addr16
ss
adc
mov
aaa
mov
nop
into
xor
lods
out
or
mov
test
push
xchg
cli
xor
es
or
pusha
popa
adc
mov
test
or
inc
xchg
lret
mov
mov
jns
mov
adc
mov
or
and
jns
jbe
or
mov
test
imul
subl
std
jp
or
jge
icebp
cmp
or
insl
pop
add
adc
pop
pop
aad
mov
push
and
cmp
add
adc
or
and
ljmp
nop
mov
data16
dec
cli
outsl
and
or
cwtl
mov
push
nop
test
pop
out
cmp
imul
push
mov
cmc
push
aam
sub
adc
push
lods
es
pop
or
int3
popa
xchg
or
mov
pop
push
fbstp
out
and
fwait
or
mov
pop
jae
into
test
arpl
sub
xor
test
movsl
or
sbb
fisttpll
cmp
ljmp
and
jl
filds
into
popa
add
subb
dec
sbb
insb
ss
lret
and
data16
push
rclb
fsubl
pop
jae
jno
add
sbb
bsf
sbb
sbb
jmp
mov
fcom
aad
or
mov
lahf
popa
cmp
mov
and
int
sti
icebp
or
adc
cmp
mov
hlt
cmp
jns
or
mov
bnd
and
js
or
jbe
push
fwait
imul
adc
sti
and
addr16
jo
or
jecxz
cwtl
gs
xor
xor
in
popf
sub
inc
dec
aaa
mov
jns
sbb
or
sbb
repz
lret
adc
lock
or
xor
iret
jb
dec
out
lret
nop
sub
and
sub
in
or
add
xor
daa
add
insb
fucomi
popl
and
mov
test
dec
lret
jmp
jl
fbld
std
pop
adc
ss
push
dec
sbb
mov
test
sub
push
xor
insb
jns
mov
mov
and
add
stos
scas
inc
or
and
adc
rcrl
and
fcomip
cs
test
ljmp
mov
orb
push
mov
stos
nop
clc
xchg
or
fwait
ja
paddd
or
push
jne
xor
enter
fsubl
push
stos
and
loopne
cmc
out
jmp
outsl
mov
dec
lahf
es
jnp
movsl
lock
std
xor
pop
adc
outsl
pop
sbb
sti
sbb
or
inc
push
push
cs
jl
jl
xor
sub
cmp
push
repnz
ljmp
cli
xchg
cmc
mov
or
add
xor
rorl
push
bound
or
mov
inc
jbe
adc
inc
inc
pop
arpl
add
inc
fwait
mov
jmp
fs
imul
dec
add
pusha
stos
scas
push
insb
mov
push
inc
mov
mov
clc
cld
jns
aas
pop
shll
xorl
ret
rcll
lret
loope
mov
arpl
dec
mov
xor
inc
mov
rorl
dec
xchg
sahf
mov
movsl
movsb
or
and
sbb
js
push
push
in
adcb
fadd
cld
out
movsb
pop
int
insb
pop
dec
inc
dec
aam
stos
sbb
fistpll
lahf
sub
lret
mov
mov
xor
or
mov
jmp
fnstcw
jmp
and
lret
sbb
scas
jecxz
jecxz
popa
aas
dec
rcll
jp
fbld
dec
xchg
out
sub
push
sbb
push
aam
fistpll
sub
scas
xor
xlat
push
dec
mov
sub
mov
push
aas
push
outsl
push
cwtl
fcmovb
or
scas
mov
push
out
or
jno
xlat
scas
inc
and
and
scas
das
std
xchg
and
cmp
jmp
ljmp
in
and
pop
aas
out
sub
mov
aad
stos
dec
mov
cmp
push
adc
xlat
dec
xchg
fldenv
add
jg
adc
adc
cmp
imul
mov
sti
scas
add
add
cmpsb
insb
mov
jae
push
stc
cmp
or
mov
call
sti
gs
imul
cmpsl
mov
or
cmpsb
leave
out
sti
push
enter
jo
dec
fwait
int3
or
in
or
jne
inc
mov
cmp
sub
arpl
cmp
idiv
xchg
cs
xor
mov
or
pop
cmp
iret
mov
inc
or
ret
pop
mov
daa
sbb
jge
mov
mov
repz
sub
xor
cmovle
fadds
fistl
xor
xor
pop
mov
movsl
insl
adc
push
insb
popa
outsl
mov
lea
mov
cmp
sub
pop
rorb
imul
mov
je
enter
and
and
and
popl
cmp
loop
and
fcomps
add
popf
mov
push
lcall
sarl
nop
mov
cmp
push
int3
xchg
int3
inc
in
dec
cmc
mov
sbb
jp
jbe
fs
aam
adc
adc
cmp
push
and
adc
aad
pop
mov
outsb
dec
push
pop
nop
out
mov
mov
sbb
movsb
cmpb
xor
into
inc
xchg
xchg
dec
je
inc
push
insb
negl
int3
ret
dec
mov
push
mov
jns
sub
or
push
stc
push
jecxz
pop
push
daa
push
dec
xor
xlat
push
adc
ss
stos
push
inc
fstps
cld
aaa
fwait
push
shll
ds
sbb
sbb
cld
cmpsb
fs
sarl
xchg
add
dec
cltd
and
shr
mov
fists
cmp
fs
xor
cmc
mov
cmp
pop
insb
inc
jge
cmp
das
sarb
jne
dec
mov
xor
jg
dec
cmpsb
aad
jle
test
pop
push
int
sahf
sahf
lret
aam
stos
lcall
add
dec
jne
jg
adc
jmp
push
mov
daa
aad
adc
lods
cs
push
rorb
scas
fisubrs
imul
pop
push
loopne
mov
mov
inc
in
inc
xlat
push
and
sbbb
je
jnp
mov
sbb
scas
enter
ja
das
xchg
cmovae
int
and
and
pushf
fsubrl
xchg
inc
jp
daa
mov
jecxz
pop
adc
adc
cltd
cmc
xor
out
xchg
xlat
lcall
dec
movsl
add
ret
rcrl
movsb
pop
sub
daa
add
inc
pop
popa
sbb
inc
scas
mov
xchg
xchg
inc
prefetch
sub
faddl
pop
mov
push
xor
mov
or
inc
enter
xchg
and
pop
dec
ret
xchg
cmpsl
push
mov
push
dec
daa
cmp
or
ljmp
stc
aam
pop
jnp
sbb
jae
sahf
mov
cmp
data16
movsl
out
mov
lahf
sub
jno
roll
and
push
daa
scas
loope
push
jmp
mov
sbb
sbb
movsb
std
cmp
pop
push
pop
or
push
push
scas
hlt
or
pop
loope
out
std
iret
divl
sbbl
shll
adcb
mov
mov
xor
mov
nop
mov
rcrl
int
add
mov
sti
and
in
jb
mov
or
pop
jno
les
lea
push
test
sbb
dec
and
jno
adc
add
roll
lcall
dec
pop
daa
cld
and
mov
insl
inc
mov
inc
out
dec
fmull
stos
adc
jp
dec
or
xchg
or
aaa
cmc
ss
movsl
inc
pop
dec
dec
fcomps
jp
cmp
push
lahf
fisubs
ret
push
xchg
sar
pop
pusha
hlt
es
lods
push
stos
fwait
or
int
add
clc
pop
mov
cmpsb
lcall
push
pop
pop
daa
xlat
inc
test
movl
dec
shl
add
or
lcall
sub
addr16
repnz
dec
cmp
pop
pop
mov
in
out
push
mov
and
dec
sbb
iret
mov
test
jne
mov
mov
cmpsb
cmp
jmp
das
or
lods
push
inc
xorl
popa
out
xchg
cs
stos
or
mov
add
cld
sub
xchg
outsl
sub
push
insb
cltd
mov
fdivrs
sub
dec
aas
hlt
xchg
lcall
cld
mov
fidivrs
rorl
mov
orb
subb
dec
add
xor
push
xchg
pop
push
lcall
inc
inc
ret
or
ss
hlt
sbb
add
push
je
sbb
shl
dec
int
cmc
icebp
sbb
iret
xor
insb
pop
inc
mov
push
in
xchg
or
cwtl
jns
lahf
inc
test
rcl
push
in
mov
fistpl
int
dec
loope,pt
cmpsl
push
cmp
push
dec
loope
push
pop
dec
mov
scas
int
cmpsb
call
jp
pop
inc
fmull
loope
push
pop
dec
fadd
into
bound
push
mov
out
cmp
call
lods
aas
dec
or
jns
push
fcompl
fdivl
test
xorb
adc
pop
mov
pop
mov
mov
add
cmc
mov
rorl
in
scas
mov
decb
pop
and
movb
iret
xchg
and
sub
push
negl
mov
and
test
pop
outsb
add
nop
cld
je
sbb
xor
push
inc
scas
sbb
inc
int3
and
cmpsb
mov
leave
int3
push
fsubrs
pop
jge
inc
popf
stc
jle
ret
push
inc
adc
aas
pushf
pop
dec
leave
icebp
xor
in
fidivrl
dec
dec
push
daa
cmpsl
xchg
pop
push
ds
loope
pop
mov
jmp
sbb
sub
mov
xchg
movsl
push
adc
cli
sarb
stos
inc
lock
add
xor
inc
arpl
shrl
mov
stos
aas
inc
jecxz
mov
sub
xchg
push
push
test
xor
mov
call
push
daa
mov
sbb
int3
cld
xchg
rcll
sbb
in
popa
addr16
into
add
and
or
jb
sbb
daa
aad
test
icebp
dec
fs
xchg
sahf
ja
adc
cltd
int3
and
fucomi
out
xor
lds
repnz
dec
not
pop
sbb
addr16
mov
daa
push
ret
sahf
subl
addr16
inc
mov
inc
adc
loop
shl
mov
sahf
inc
xlat
je
sbb
rorb
add
fidivl
fsubr
mov
xchg
cmp
jns
push
xlat
sbb
stos
mov
push
mov
js
je
addr16
adc
pushl
adc
mov
inc
scas
ljmp
pop
xchg
mov
adc
movsb
daa
jns
pop
xchg
xor
stc
imul
xchg
fistps
xchg
push
jns
sbb
stos
cmpsb
mov
ret
adc
and
sbb
cmp
cmp
roll
cmp
hlt
push
pushf
imul
lock
mov
cmc
mov
sbb
and
jmp
gs
sub
jle
dec
ja
je
fidivs
shll
and
sbb
and
in
dec
std
cmpsb
shl
xchg
fsubr
gs
cltd
in
dec
in
sbb
std
rol
mov
mov
paddd
xor
add
dec
inc
dec
call
xchg
mov
push
popa
adc
sbb
hlt
mov
scas
movsb
das
jnp
mov
iret
pusha
loop
sahf
push
lea
jl
punpckhdq
in
inc
inc
push
jp
cmp
daa
aam
jae
daa
stc
push
std
call
insb
aas
push
jmp
cs
pop
jp
xchg
jo
sbbl
fsubs
xorb
mov
push
pop
xchg
loopne
daa
fwait
mov
inc
dec
dec
cmp
int
sbb
fchs
add
outsb
cmp
mov
loope
or
stc
insb
popa
iret
sbb
nop
xor
addl
xlat
cli
or
cmc
cmp
popf
pop
fisttpll
aam
das
fstpl
mov
sbb
jmp
xor
stc
mov
jecxz
orl
cwtl
aad
insb
popf
sbb
xor
repz
inc
xor
mov
out
jecxz
mov
jae
nop
inc
dec
adc
pop
mov
aad
push
pushf
mov
out
mov
adc
sbb
arpl
cmpsl
repnz
std
daa
adcl
or
ror
mov
dec
mov
sub
imul
popf
mov
lahf
stos
stos
mov
imul
aad
cmp
leave
pop
cmpsl
xor
ljmp
adc
inc
pop
sub
leave
pop
pop
pop
bound
in
setb
mov
sbb
test
hlt
ss
mov
daa
xchg
jnp
pop
mov
sbb
dec
mov
push
test
push
test
jae
std
pop
call
leave
jmp
adc
mov
pop
mov
cmp
dec
cmpsl
lret
fcompl
mov
arpl
addr16
mov
and
push
inc
scas
push
cmc
in
xor
std
fistl
jecxz
test
jnp
jle
test
fs
jbe
pop
repz
xchg
testl
sub
mov
pop
jae
dec
sbb
and
sub
or
movsl
mov
cmp
pop
sbb
inc
insb
cmpsl
pop
inc
fdivl
out
aam
call
add
ljmp
mov
and
cs
push
lret
or
sbb
dec
dec
dec
and
pop
sub
push
inc
sbb
mov
push
sbbl
incl
xchg
push
dec
adc
adc
mov
fisubrl
sub
jge
aam
ja
mov
add
mov
inc
mov
push
xchg
daa
fisubrs
xchg
daa
jne
jb
push
pop
add
in
mov
jge
sub
icebp
cwtl
lahf
out
xor
paddusw
daa
and
icebp
dec
sub
fs
push
xlat
pop
dec
push
pop
std
andl
push
adc
xchg
je
mov
inc
xor
or
test
xor
adc
cmp
inc
jp
int3
gs
into
mov
daa
mov
test
pop
adc
call
jmp
fstps
std
adc
pop
mov
push
push
mov
std
and
loope
pop
imul
call
sbb
lock
xchg
in
cmp
jp
fstps
adc
pop
inc
inc
mov
push
movsl
and
cmp
loopne
push
mov
jg
jmp
cmpsl
add
loop
inc
int
mov
call
xor
jge
loopne
sbb
sbb
sahf
subl
pop
cmpsl
sbb
jae
push
inc
pop
xchg
pop
hlt
add
mov
cmp
rcll
add
out
imul
mov
pop
dec
in
sarl
sub
cld
dec
popl
push
mov
mov
dec
out
mov
out
in
mov
movsb
dec
or
les
push
xchg
sbb
fisttpll
inc
inc
xchg
xchg
xchg
out
loopne
out
xor
call
scas
adc
cwtl
dec
sbb
mov
inc
dec
xchg
pop
mov
js
in
jae
aad
mov
call
push
and
jae
xorl
mov
mov
push
pop
out
mov
inc
lret
mov
cmpsl
fisubs
xchg
out
jg
or
cmpsb
addr16
sub
cli
jmp
pusha
out
lock
js
sub
lods
adc
jecxz
enter
adc
int3
cltd
insb
or
std
push
lds
test
add
or
out
pop
inc
cmp
mov
or
push
inc
ficoml
jp
movsl
or
test
stos
dec
aas
dec
dec
xor
push
leave
push
or
jle
cmp
ret
xor
les
addb
jae
mov
add
or
add
mov
xchg
push
stos
std
pop
icebp
insb
or
pop
jbe
xchg
fstl
ljmp
cmp
add
icebp
ss
add
jmp
popa
xor
or
push
xor
dec
xchg
cs
or
push
inc
ljmp
cmp
sub
out
loop
inc
aam
cmp
sub
push
adc
into
sti
insl
adc
mov
push
or
lahf
fmull
imul
mov
pop
pop
inc
movsl
xchg
mov
xor
in
or
mov
mov
xor
pusha
or
xor
lret
mov
dec
mov
int
test
jns
aas
sub
or
loop
xor
fadd
mov
fs
or
push
enter
xchg
stos
rcrb
cld
and
push
ljmp
jl
repz
adc
pop
push
mov
ret
or
push
cmpsb
dec
enter
or
dec
cs
or
push
es
stos
jmp
cmp
sbb
cmpb
or
inc
jbe
lahf
mov
pop
ljmp
adc
imul
sbb
comiss
and
pop
inc
pop
out
pop
sbb
lret
popa
popf
mov
jecxz
stc
push
jnp
xchg
jb
hlt
push
xchg
gs
ds
mov
shlb
sbb
or
ficompl
mov
int
in
and
gs
aas
cmc
cs
sub
sbb
jmp
hlt
pop
testl
andb
xchg
pop
or
fildll
or
js
fmulp
mov
adc
jno
add
sbb
and
cmp
sub
cltd
or
pusha
in
sub
orb
loop
lret
xchg
addl
pop
pop
or
outsb
or
faddp
jbe
xchg
cmpl
fldenv
ljmp
mov
in
loop
adc
adc
jae
jne
add
imul
aad
jno
pop
jnp
xchg
loope
sub
scas
mov
mov
insl
int3
ds
lcall
dec
sbb
imul
sbb
push
add
or
lods
in
ret
xchg
into
mov
mov
xor
or
jb
or
jns
adc
fdivr
mov
push
dec
mov
fistps
or
mov
mov
rclb
dec
je
mov
scas
lods
lret
dec
sub
or
iret
and
stos
cli
dec
sub
adc
sub
cmc
jg
sarb
inc
icebp
push
adc
inc
or
jecxz
or
lea
mov
mov
push
xchg
out
or
cmpsl
jmp
push
or
xchg
jae
rorl
cmp
mov
or
scas
lret
and
and
in
dec
sti
lods
pop
cli
es
cmp
repnz
xchg
or
mov
ljmp
neg
cmp
outsl
jno
push
mov
jb
or
xchg
add
cs
pop
and
adc
stos
mov
dec
mov
sbb
mov
or
sub
or
ljmp
push
ret
or
mov
push
add
jmp
sbb
mov
in
pop
push
into
dec
adc
adc
rol
mov
je
insl
data16
push
add
rclb
out
push
jo
sbb
or
mov
adc
sbb
fwait
xchg
sub
enter
rorb
outsb
adc
iret
icebp
hlt
or
lds
jne
or
mov
adc
or
adc
push
in
mov
mov
jae
test
add
cwtl
pop
mov
xlat
repnz
xorl
sub
fs
inc
ljmp
negl
rorb
std
outsb
stos
jo
je
push
lea
ficoms
jnp
sub
dec
inc
mov
scas
pusha
jmp
mov
and
mov
xchg
adcb
and
loope
stos
stos
or
sbb
fcompl
hlt
mov
xchg
push
sub
scas
sti
mov
jns
js
or
push
adc
pop
xorl
js
xchg
or
mov
inc
fmull
and
push
hlt
pop
cwtl
movsl
adc
and
or
push
mov
cmp
jp
lds
dec
pushl
sub
add
out
lret
je
inc
pop
shrl
or
push
inc
mov
out
scas
iret
mov
sti
aas
sbb
xor
add
sbb
sbb
xlat
lea
adcl
aam
js
aad
mov
bound
jl
popa
shl
pushf
xor
push
mov
dec
jo
addr16
imul
fisttpl
jp
mov
or
push
popf
or
imul
lods
sub
es
pop
add
push
loop
in
pop
push
xor
lcall
jmp
xchg
cwtl
push
mov
lcall
add
xchg
imul
fimull
and
cmpsl
cmc
or
lods
in
pop
or
daa
negb
push
dec
mov
stos
out
push
xchg
pushl
std
sub
data16
fisubl
push
or
sahf
popf
bound
pop
adc
int3
push
push
cli
or
cmpsb
push
sbb
mov
xchg
xor
dec
fnstsw
cmpsl
int
mov
test
imul
push
or
xor
jnp
into
xchg
in
sub
and
sbb
daa
mov
sub
push
jmp
das
outsl
insb
push
jp
add
fdivr
mov
mov
and
jmp
popa
adc
xchg
jbe
in
mov
xchg
imul
xchg
imul
hlt
ds
or
sbb
nop
or
xorl
adc
out
sub
nop
cmp
sbb
pop
mov
ret
adc
mov
inc
pop
push
inc
mov
int
mov
pop
and
stos
ljmp
jg
add
add
sub
add
dec
pop
cmpsb
and
push
jnp
or
dec
mov
adc
idivb
adc
sbb
mov
enter
mov
pusha
cltd
imul
mov
xor
jecxz
scas
sub
dec
lahf
call
mov
or
xchg
ja
mov
aad
ror
add
or
adc
js
add
cwtl
push
jmp
test
fs
aas
dec
dec
push
dec
ljmp
cmp
or
adc
insb
or
mov
cmpb
add
imul
jp
and
xchg
jbe
sbb
inc
fcmovb
adc
mov
loopne
cmp
sbb
cwtl
sub
icebp
in
pop
fwait
fs
ljmp
adc
cmc
push
icebp
cmp
or
into
lods
jbe
shll
or
dec
jp
xchg
mov
mov
sahf
int3
cmp
sbb
filds
cld
and
push
and
sbb
rorb
test
xorb
jbe
or
sbb
into
jne
insb
fxch
aas
sbb
jge
mov
add
inc
xor
pushf
mov
out
adc
cmc
sub
mov
mov
je
jmp
pop
ss
lock
fwait
pop
push
fs
popf
xor
sub
dec
jg
rcll
sub
mov
push
push
sbb
xlat
xor
inc
dec
movnti
roll
loope
xchg
fbld
test
mov
data16
fnstenv
shlb
hlt
jge
and
test
fsubrl
add
sub
in
aad
or
ljmp
add
sti
mul
cmp
push
jmp
mov
lds
xchg
cmpsl
ja
into
push
pop
inc
mov
cmp
mov
outsl
mov
mov
lret
scas
icebp
aas
mov
test
std
stos
and
mov
xlat
outsl
test
adc
inc
test
mov
hlt
pop
mov
push
enter
fldenv
lds
dec
mov
inc
xlat
jno
pop
je
pop
adc
or
push
xchg
aad
xchg
mov
adc
ja
push
jge
ror
adc
je
je
dec
push
pop
aaa
jbe
movsl
add
and
sbb
mov
shll
cli
inc
mov
cmp
dec
dec
clc
push
sub
inc
jg
and
jl
repz
fidivl
outsl
daa
push
mov
hlt
jmp
xchg
mov
lcall
xchg
or
icebp
xchg
jns
repz
pop
mov
ljmp
imul
push
cmp
dec
add
pop
xor
xchg
cmp
repnz
fwait
adc
adc
jle
sarl
dec
adc
stos
and
loope
stc
pop
and
xor
js
lahf
daa
iret
lret
pusha
cs
ja
sbb
mov
ljmp
shll
int3
and
sub
imul
mov
addr16
push
aad
mov
dec
or
les
cs
daa
push
cli
xchg
sbb
or
mov
mov
mov
daa
mov
movsl
cld
insb
loopne
pop
sub
push
ss
sub
pop
hlt
sbb
cmp
lds
dec
jnp
ljmp
jge
scas
xor
xor
or
add
loope
imul
fdivrl
decl
pop
add
clc
out
mov
cmp
iret
mov
push
imul
stos
sub
add
fcompl
insl
inc
jp
sar
imul
lret
addr16
lret
pop
and
and
dec
mov
mov
outsb
pop
sub
pop
sti
test
iret
push
fxch
sbb
cmp
std
and
cmp
mov
mov
je
jl
stos
enter
push
aam
sub
mov
loopne
sbb
imul
adc
inc
mov
test
push
pop
loop
daa
mov
xor
sub
jno
adc
ljmp
scas
stos
jae
shll
add
out
insb
sbb
push
inc
push
pop
test
push
jmp
movsb
pop
mov
and
bound
sbb
add
add
mov
or
sub
sti
andl
out
lahf
mov
scas
pop
inc
inc
mov
das
push
decl
popf
int3
cmpb
push
pop
insl
inc
lret
or
mov
jae
ds
call
inc
jnp
lods
mov
xor
inc
mov
jae
int3
mov
int
sbb
push
pop
jge
mov
mov
sbb
sahf
push
fxch
fnstenv
fsub
fwait
mov
dec
adc
or
push
adcb
dec
lret
jbe
xor
jno
xor
imul
jns
jno
adcb
cmp
xchg
dec
sbb
inc
jb
mov
sub
fucom
stc
push
rcll
popa
test
scas
stc
aad
pop
push
jmp
fdiv
movhps
out
out
lret
pop
xor
lret
test
fisubrs
mov
cmc
jecxz
mov
mov
fcoml
inc
mov
andl
jbe
adc
mov
iret
adc
test
pusha
test
aam
ja
push
xchg
shr
add
daa
and
es
mov
mov
xor
sub
js
xchg
cmpsb
mov
mov
inc
jl
jg
xchg
pop
imul
stos
loopne
sub
sub
sub
shr
inc
jno
mov
lret
mov
sub
jl
out
lret
jnp
loop
data16
adc
pusha
fmull
mov
mov
daa
in
cmc
sub
insl
inc
mov
outsl
cmpsl
dec
adc
pop
jb
daa
add
call
shl
xchg
jns
jae
mov
pop
sbb
test
mov
dec
adc
inc
cltd
jmp
xchg
lahf
mov
sub
sbb
pop
push
dec
adc
daa
mov
sbb
pop
sti
cmp
addl
push
or
jecxz
dec
nop
mov
sbb
mov
xchg
mov
testl
xchg
pop
lahf
lret
fidivrs
pop
cmp
dec
gs
fidivs
in
in
fs
insb
push
std
in
push
or
call
lret
mov
dec
js
add
xor
icebp
daa
mov
mov
adc
xor
add
shll
inc
call
cld
shrb
aad
popa
inc
mov
xor
es
out
push
mov
sub
imul
adc
push
dec
aad
adc
adc
push
mov
test
mov
xor
jno
mov
inc
mov
add
pop
es
roll
jbe
imul
jcxz
sbb
mov
xor
shrl
addr16
fs
clc
clc
js
mov
jnp
rorb
mov
test
pusha
imul
int3
ds
add
sahf
inc
mov
add
or
lea
sub
inc
inc
iret
cmpsl
jl
rclb
inc
push
daa
jl
repz
mov
das
sub
cmc
push
test
lcall
aaa
dec
imul
icebp
push
pop
jge
addr16
dec
sub
sub
xchg
aam
jb
into
mov
ss
test
sbb
sbbl
adc
jmp
aaa
xor
mov
loope
es
push
gs
aaa
xor
out
dec
xchg
inc
cs
testl
pop
mov
inc
add
add
call
aad
mov
nop
scas
or
enter
push
rcrl
rcll
pusha
pop
mov
cmp
mov
push
rolb
cmpsb
lods
out
int3
scas
and
mov
icebp
repz
iret
sub
and
pushf
cs
mov
mov
stos
jle
adcl
mov
scas
mov
mov
test
add
mov
fwait
mov
mov
cmc
adc
sub
sbb
jle
out
push
test
pop
mov
call
or
mov
push
stos
sbb
mov
dec
or
or
add
sti
dec
push
dec
push
sbb
sbb
xchg
imul
mov
or
mov
lds
cmp
in
sub
sbb
fmuls
xor
cmp
mov
aaa
repnz
add
ficompl
sbb
inc
xchg
in
arpl
sbb
dec
push
fnstcw
mov
addl
dec
insl
imul
movsl
push
negl
ljmp
test
mov
mov
jmp
fldcw
adc
xchg
dec
mov
pop
andb
fs
shlb
fcoml
movsb
lret
shl
xor
cwtl
cmpsb
cmp
call
and
mov
add
mov
jne
dec
sub
mov
mov
nop
insb
inc
shrl
sub
jnp
cmpsl
push
mov
adc
js
cwtl
repz
pop
ret
std
cmc
adc
sub
test
cmc
mov
inc
imul
xor
test
imul
adc
xchg
popa
lret
lea
clc
push
cwtl
xor
mov
lds
and
data16
je
mov
sbb
add
push
pop
mov
inc
push
andb
std
and
push
mov
imul
mov
popf
adc
push
mov
push
or
sarl
cmc
cmp
push
xor
xchg
mov
leave
xchg
sbb
xor
inc
clc
mov
icebp
jns
fistl
fwait
xchg
sbb
dec
mov
dec
adc
push
je
adc
inc
call
sub
inc
xorl
call
cmp
xchg
cld
and
inc
scas
test
arpl
xchg
scas
inc
xor
stos
mov
andb
pop
out
sub
dec
aam
scas
lock
call
inc
inc
andb
daa
pop
mov
xchg
cmp
dec
ficoml
out
aad
in
loope
and
mov
push
imul
inc
fcoml
mov
inc
ret
out
pop
pop
mov
rclb
jge
pop
mov
pop
dec
adc
adc
cmp
mov
sbb
cmpsl
nop
mov
hlt
pop
push
mov
xchg
push
xor
int3
adc
dec
pop
mov
xchg
add
imul
movsb
adc
jg
aaa
popa
verr
decb
pop
mov
test
mov
sub
bound
xchg
dec
scas
subb
pop
repnz
xchg
shll
mov
imul
clc
pop
pop
repnz
test
pop
xchg
lret
fwait
cld
jne
cmp
inc
outsb
xor
lcall
add
sbb
mov
mov
push
inc
pop
mull
jl
loope
lahf
dec
sub
aas
and
pusha
mov
add
aad
push
daa
and
and
adc
jmp
in
leave
cmp
or
mov
pop
inc
sub
dec
dec
das
push
and
cmp
sarb
xchg
xchg
jno
and
jae
xchg
sub
pop
mov
jge
pop
in
aam
testb
lods
dec
enter
jno
into
outsl
mov
xchg
jb
daa
or
mov
add
xor
test
imul
push
data16
imul
in
inc
sub
dec
pop
cld
and
in
jae
inc
jb
outsl
fcomip
out
and
sbb
mov
movsb
mov
and
jnp
ficoms
inc
popf
pop
inc
jle
pop
dec
stc
and
scas
mov
sbb
xchg
push
int3
int
icebp
rcll
lods
addl
inc
sub
stos
mov
loope
pusha
dec
adc
iret
and
loopne
lahf
mov
sbb
mov
sbb
mov
loope
imul
mov
outsl
jnp
int3
cmp
sub
nop
stos
je
loopne
lret
cld
fs
cmpsl
ljmp
adc
push
sbb
dec
movl
mov
pop
imul
ja
mov
xchg
incl
mov
sbb
and
add
jmp
rcr
add
add
int
pop
sub
jle
negl
cs
ret
inc
gs
add
inc
test
int3
inc
subb
cmp
mov
adc
mov
sbb
pop
inc
dec
jg
dec
mov
in
dec
mov
adc
aad
addl
xchg
sub
push
into
int
shlb
jg
cmpsb
xchg
sbb
inc
push
sub
inc
inc
lcall
mov
imul
test
arpl
imul
inc
pop
push
xor
imul
pop
sub
dec
adc
xor
pop
dec
adc
aas
cmp
nop
cmp
xchg
jmp
xor
cmpsl
or
push
jp
movsl
pop
testb
jbe
xchg
aas
xlat
add
cs
lahf
xlat
pusha
adc
sti
daa
into
adc
xchg
flds
and
fistps
sub
sub
loopne
pop
fs
mov
push
outsl
inc
cld
xchg
mov
xchg
sub
and
leave
shr
mov
inc
arpl
and
jnp
push
jne
in
push
addr16
int
call
pop
dec
xchg
in
cmpsb
je
xorl
adc
xchg
fadds
adc
inc
loop
and
push
les
seta
outsl
fmuls
mov
adc
and
push
popa
lods
mov
call
daa
scas
fmul
test
mov
fistl
cwtl
push
inc
dec
lock
das
jnp
test
jb
bound
cmpsb
insl
xor
push
insb
adc
mov
adc
xor
mov
inc
xchg
mov
inc
mov
xchg
shrb
daa
pushf
pusha
xor
in
lea
cmpsb
pop
mov
cmc
mov
outsb
std
xlat
test
adc
in
enter
addl
dec
shlb
lret
sahf
call
xlat
lcall
mulb
in
push
pop
mov
pop
arpl
mov
lock
jae
fistps
jbe
xchg
mov
stos
xchg
xchg
push
sbb
cmpsl
in
cli
xchg
lahf
cmp
cmp
xor
je
pop
pop
xor
aas
push
lahf
nop
or
iret
mov
mov
inc
push
xlat
add
sub
insl
ljmp
cmp
sub
scas
inc
push
jne
fmull
popf
loop
inc
push
sub
pusha
outsl
cmc
inc
pop
mov
inc
adc
nop
jae
push
popa
add
inc
fldt
mov
stc
cmp
sbb
mov
popf
push
pop
outsb
out
call
cmp
mov
iret
dec
lret
add
adc
or
push
pop
mov
mov
insb
fstpt
mov
sub
sbb
mov
mov
out
cli
xor
and
dec
hlt
mov
mov
lahf
mov
adc
push
pushf
test
adc
hlt
cli
bound
sbb
push
mov
xchg
test
mov
dec
xchg
cmpsb
xchg
add
sub
mov
mov
xchg
xorl
sub
push
xor
scas
push
mov
cmc
call
push
inc
daa
jecxz
outsb
int
adc
jbe
mov
dec
stc
dec
lock
imul
les
sub
mov
inc
push
xchg
loope
sbb
data16
dec
imul
out
sbb
imul
loope
dec
daa
rcrl
iret
inc
dec
or
inc
out
jnp
or
popa
push
jg
pusha
cwtl
hlt
xchg
mov
inc
or
inc
iret
inc
and
subl
xchg
repz
imulb
mov
cmp
cld
lea
mulb
mov
out
add
sub
shll
rorb
adc
hlt
addr16
daa
dec
loopne
cmc
mov
mov
stos
iret
mov
daa
cltd
sbb
inc
adc
inc
push
pop
pop
aaa
add
xchg
push
xor
jmp
scas
shrl
jae
jo
pop
push
sbb
aam
jnp
mov
mov
out
std
mov
dec
inc
xchg
daa
scas
push
test
lods
pop
lret
add
cmp
imul
cwtl
or
push
mov
sub
sbb
push
pop
push
cmp
add
std
loop
dec
sti
adc
adc
stos
mov
adc
pop
stos
cmp
ja
popa
movsl
test
mov
sbb
dec
add
je
jecxz
cmpsl
inc
sbb
xor
adc
popf
in
xor
sbb
ja
cld
insb
adc
or
and
dec
shrl
sbb
cltd
xorl
xchg
xchg
adc
shll
fsubr
pusha
insb
aam
inc
jmp
call
shrl
mov
fs
xchg
movsl
stos
jae
mov
add
pop
pop
sbb
imul
sbb
jo
ficoml
jg
incl
cmovb
stc
jecxz
ja
dec
dec
das
js
stc
or
cmp
imul
push
out
call
adc
jnp
cmc
loop
int
inc
int
mov
push
aaa
jb
or
mov
sbb
cmp
push
mov
in
mov
mov
dec
dec
dec
adc
xorl
jge
jp
dec
or
add
sahf
push
lds
nop
or
pushf
mov
mov
mov
es
pop
test
xor
sub
aad
gs
xor
enter
mov
add
cmp
sub
and
call
rcll
add
cmp
adc
xchg
arpl
test
pushf
and
lcall
adc
xchg
inc
rclb
mov
pop
jae
push
adc
dec
bnd
adcl
adc
mov
rcr
ja
pusha
adc
jne
sbb
jne
fwait
add
xor
dec
jbe,pn
into
out
pop
push
lahf
xchg
jmp
mov
rcrl
push
xchg
in
ljmp
push
add
out
push
or
or
lock
push
clc
sbb
addb
mov
xor
fwait
push
xchg
pushf
ja
or
dec
in
xor
in
mov
sahf
roll
jl
scas
inc
test
jbe
sub
mov
inc
cmp
aam
in
hlt
stos
adc
cmp
cmp
iret
sub
and
inc
sub
dec
mov
arpl
or
ja
fldenv
arpl
ljmp
pop
dec
jmp
add
mov
scas
mov
daa
scas
inc
dec
or
push
pushf
xchg
jae
fstpl
ret
mov
imul
dec
mov
cmpsl
je
pop
dec
dec
data16
sbb
mov
shlb
push
mov
sbb
pushf
popa
insb
outsl
adcb
nop
mov
stos
and
and
cs
clc
inc
addr16
popf
cmp
ljmp
jae
mov
inc
fimull
std
adc
dec
inc
ficoms
popf
pop
xor
scas
rorb
or
mov
or
lret
int3
daa
call
dec
inc
clc
cli
leave
mov
mov
out
sbb
or
sbb
insb
cli
sbb
pop
ljmp
pop
lds
jo
stos
lret
sarl
cmp
push
xchg
jmp
sub
xchg
cmc
mov
and
or
iret
mov
cli
or
rcrl
cmc
adc
sbb
sbb
das
dec
mov
loopne
sbb
jnp
jns
cld
inc
lret
sbb
addl
fcomps
cmpsb
push
daa
add
add
call
inc
add
inc
pop
inc
mov
subl
jno
jne
pusha
xor
outsb
cld
dec
sbb
sahf
xchg
std
out
pop
pop
mov
out
ljmp
clc
rcl
in
push
mov
push
push
cmp
rcr
ret
jle
add
mov
cld
cmpl
mov
mov
push
aad
mov
mov
adc
sbb
sub
push
jne
or
enter
push
cmc
lds
dec
pop
cmpsl
dec
stos
insb
inc
mov
in
mov
or
adc
mov
sbb
pop
ret
aaa
enter
mov
icebp
push
inc
xchg
leave
xchg
mov
call
mov
mov
cld
mov
pop
xor
or
pushf
int3
adcl
jmp
push
mov
out
inc
icebp
cmp
adc
xor
or
int3
loope
faddl
cmc
movsb
mov
mov
ror
jecxz
addb
push
cs
xchg
adc
repz
mov
mov
sbbl
addr16
mov
dec
call
inc
and
cmp
xchg
js
cltd
addr16
icebp
ficoms
and
mull
push
pop
cmp
push
sahf
rolb
mov
and
sti
cli
ss
jnp
rol
stos
out
mov
cmpsb
mov
movsl
insl
xor
sbb
push
inc
pop
jns
scas
std
adc
movsl
xchg
and
subl
cli
lea
daa
lods
in
imul
test
pop
sbb
add
les
dec
pop
sbb
in
daa
jo
sbb
rsm
pop
dec
ss
sub
pop
arpl
lcall
jbe
xor
push
cmc
jnp
sti
es
mov
mov
je
mov
dec
loop
cmpsl
lods
jge
or
push
jmp
mov
daa
mov
jo
sub
pop
sbb
out
and
cltd
fildll
popa
movsb
inc
cs
sub
xor
fisttps
add
push
mov
fsubr
jbe
pop
adc
mov
inc
lods
sbb
mov
lahf
call
lcall
and
cltd
imull
test
jmp
add
mov
in
movntps
xor
nop
cld
cmpsl
mov
shll
pop
lidtl
pop
call
in
roll
daa
and
mov
into
arpl
push
scas
test
sub
aad
and
jmp
push
lock
add
lcall
or
sbb
cli
adc
sbbl
or
jl
cmpsb
pop
push
mov
mov
jl
mov
fbld
pop
or
push
vprotw
out
nop
sbb
or
bound
push
scas
lret
mov
fdivs
dec
adc
sbb
daa
push
adc
je
push
cwtl
ss
testl
stos
orps
popf
xchg
outsl
and
cmpl
fwait
int
out
jae
mov
aaa
push
push
dec
outsb
repnz
dec
adc
and
or
pop
in
out
jne
es
inc
scas
sarb
cmp
into
pop
into
arpl
je
lock
pop
push
iret
mov
fistpl
or
lods
add
test
cltd
push
hlt
inc
repz
pushf
push
sub
fstps
or
jnp
fistl
jg
sbb
popf
sahf
mov
xchg
push
out
sahf
jle
pop
mov
cli
pop
adc
movsb
imul
dec
popf
sbbb
or
mov
or
push
out
or
or
mov
push
xor
xchg
cld
jge
stos
movsb
fcomps
cmp
scas
pop
or
jae
loopne
dec
imul
sbb
push
jmp
lcall
das
inc
mov
and
lret
je
sahf
iret
adc
data16
xor
loop
das
in
mov
dec
ret
leave
xor
or
jne
jae
adc
sub
xchg
ljmp
xchg
cmpsl
sbb
jecxz
sbb
in
push
ljmp
test
mov
or
test
cwtl
add
mov
jmp
cmp
or
cld
lret
add
aaa
pusha
loop
stos
sbb
or
push
xchg
sbb
or
das
sbb
ljmp
popa
sbb
in
cs
out
xchg
decl
inc
sbb
sub
xor
test
shufps
ret
movsl
pop
movsl
lock
or
stos
or
jg
inc
mov
mov
or
std
insl
inc
insb
mov
repnz
xchg
mov
and
mov
and
sbb
dec
push
push
imul
stos
adc
add
lret
mov
mov
clc
mov
insl
push
or
lcall
mov
dec
daa
jnp
sub
cmp
aad
mov
dec
outsb
jns
arpl
pop
andl
stos
pusha
imull
daa
inc
aaa
outsb
cmpsb
jnp
or
mov
aad
repz
imul
xchg
or
or
outsb
imull
addr16
xor
loopne
inc
stc
xchg
nop
sbb
mov
push
ja
sbb
xor
pop
or
adc
enter
pop
notl
xchg
add
les
pushf
xadd
sub
mov
enter
or
xchg
adc
scas
outsb
loope
lds
push
imul
xor
inc
sbb
xchg
lods
mov
inc
repz
inc
pop
nop
cwtl
adc
inc
ror
ds
push
in
push
cld
cmp
loopne
push
insb
shrb
mov
cmp
imul
mov
test
mov
xchg
iret
fs
fdiv
pop
mov
adc
push
mov
mov
add
scas
mov
or
pop
in
pop
pop
cmp
mov
fld1
dec
sbb
lock
daa
pop
subl
xor
sbb
in
mov
arpl
imul
ficoms
gs
enter
scas
mov
add
in
jp
mov
inc
rcrl
jge
sub
dec
cld
xchg
aad
pushf
out
bound
ds
pop
orb
in
in
mov
lcall
aad
jl
in
dec
sbb
or
insl
push
lds
xor
mov
shrl
push
fcoms
cs
inc
test
leave
sbb
sarl
push
dec
fcoms
mov
cmpsb
and
inc
insl
xor
push
inc
jmp
mov
cld
xor
sbb
pushw
jb
in
out
pop
cmovnp
int
mov
jecxz
push
and
loop
movsb
das
loope
in
into
sub
dec
outsb
pop
fsts
outsl
je
push
sbb
jnp
adc
jne
or
sub
cmp
es
ss
mov
add
stos
ja
jg
lods
mov
mov
shll
or
pop
sub
out
les
lods
data16
shll
imul
loopne
adc
or
sahf
pop
iret
paddb
inc
jge
pop
sbb
test
inc
mov
loopne,pt
sbb
adc
jecxz
xchg
sbb
sbb
jne
xchg
sub
push
sbb
es
add
dec
pop
fucomip
jmp
jge
insl
lret
inc
mov
cmp
pop
mov
aam
or
test
push
pop
dec
test
je
xor
jmp
loop
rcrb
push
pop
cli
roll
mov
adc
push
xor
cmp
and
ret
pop
sub
movsl
lret
nop
std
inc
push
sbb
imul
pop
cs
jno
adc
call
inc
lcall
xor
loope
test
sbb
mov
std
aad
daa
lret
mov
dec
adc
jp
cld
add
jmp
mov
xor
lea
sar
or
inc
ficompl
mov
aam
pop
jl
cmpsl
and
cmp
insl
int
adc
pop
out
test
hlt
sbb
dec
popf
lret
std
stc
out
sub
repz
enter
shrl
xor
mov
imulb
std
or
daa
sbb
pop
sub
es
cmp
or
js
daa
js
loop
scas
insb
inc
out
sbb
xor
push
sbbl
pusha
sahf
jnp
dec
jns
push
mov
rcrb
call
xor
sahf
dec
inc
xchg
ja
maxps
mov
fisubrs
pop
jae
lods
dec
mov
inc
sub
je
icebp
cld
cltd
and
movsl
xchg
jnp
fmull
mov
pop
imul
fcmovne
mov
ja
inc
aaa
decl
sarb
inc
push
test
xor
sbb
adc
shl
sub
pop
iret
fmull
inc
pushf
mov
pop
ja
lret
mov
mov
and
xor
mov
sub
push
insl
mov
inc
sub
push
cmc
imul
jg
adc
or
lret
or
mov
sub
adc
lea
leave
or
mov
adc
sub
iret
scas
xlat
pop
sub
jmp
dec
in
mov
arpl
adc
xchg
or
mov
sbb
je
movsb
jne
arpl
dec
lods
sbb
fdivrp
or
ds
push
and
insb
cmpsl
or
mov
sti
and
ljmp
les
add
cmp
inc
imul
mov
inc
jp
cs
push
sbb
inc
cmc
sbb
inc
lods
adc
daa
mov
xchg
xchg
jp
aam
ds
clc
add
icebp
sub
cmpsl
jmp
sti
adc
or
sbb
sub
mov
xchg
sahf
jnp
aad
pop
pop
cmp
push
imul
mov
mov
inc
mov
sbb
lock
pusha
ja
push
push
sub
fldenv
xor
clc
jecxz
mov
mov
mov
mov
mov
popf
inc
popa
cmpb
inc
pop
das
cmp
cmc
aam
mov
jecxz
inc
mov
roll
dec
addr16
fprem
lea
stos
dec
push
dec
pop
repnz
mov
jnp
cwtl
push
jbe
jae
cmovp
cld
inc
stos
lods
xchg
test
xorb
jae
test
or
sar
pop
jmp
lods
out
mov
mov
mov
das
push
imul
mov
mov
adc
dec
dec
loope
pop
call
adc
mov
sub
pushl
and
clc
out
inc
in
pop
popa
and
lahf
int3
sub
movsl
hlt
add
fwait
lahf
jmp
dec
scas
lea
jg
sub
in
cmp
push
lret
fwait
sub
mov
pop
imul
push
push
xor
icebp
add
lcall
inc
in
sahf
in
xor
cmc
ja
sub
mov
cmp
pop
mov
mov
lds
std
adc
inc
fucomip
sub
scas
les
icebp
dec
pop
push
xchg
push
aam
int3
into
push
call
sbb
les
cwtl
test
and
or
xor
sub
mov
sbb
pop
rorb
xor
das
rcll
adc
mov
inc
mov
imul
mov
ds
pop
out
xchg
sub
jecxz
iret
inc
cmc
aad
cmp
fcompp
and
imul
or
sbb
push
leave
into
jg
mov
jae
ret
cltd
repz
imul
xor
out
mov
inc
popa
cld
and
and
test
imul
push
push
ret
mov
mov
or
or
mov
inc
dec
or
out
mov
sbb
fmull
pop
inc
push
inc
stos
hlt
xor
push
xlat
andb
adc
xchg
std
xlat
sub
jg
fsubr
pop
push
in
or
movsb
jbe
sub
cmc
lods
iret
dec
inc
out
sub
xchg
add
in
daa
jmp
add
sahf
adc
ret
and
pop
inc
mov
xor
loop
cmc
add
addr16
icebp
pop
sub
shll
jb
gs
cmp
jmp
cld
bound
or
push
sbb
outsb
xor
mov
stos
adc
adc
rorb
xchg
jg
pop
popa
mov
mov
in
sti
mov
push
push
xchg
cmp
ficoml
sti
sbb
cmpsl
mov
das
daa
xchg
sub
push
dec
fsubr
enter
sub
std
in
addr16
fldl
adc
addr16
sbb
jle
out
fs
test
adc
sarb
mov
fdivp
sahf
clc
je
dec
hlt
scas
nop
stc
pusha
int3
les
cmp
cltd
mov
push
in
sbb
cmpsl
jne
jecxz
gs
push
daa
into
aaa
sbb
cmp
or
popw
call
jno
movswl
aaa
mov
test
sbb
xor
mov
movsb
mov
stos
loopne
and
jl
pop
in
push
inc
cmpsb
loopne
das
subl
ds
aad
scas
sbb
sbb
lock
aad
dec
int
and
pop
pushf
lock
lahf
xor
xor
mov
jp
inc
inc
and
idivl
inc
sti
jae
out
jbe
pop
je
sub
in
pop
sub
nop
add
jp
jb
mov
clc
rcll
jae
into
push
insb
mov
xor
fistps
in
int3
daa
pop
fadds
mov
push
imul
mov
ret
sub
daa
and
stos
jne
addr16
adc
push
sarl
cmp
xor
std
dec
or
jo
mov
mov
cmc
fs
es
mov
inc
cli
sub
hlt
jno
inc
dec
jo
pop
mov
es
arpl
xor
pop
fmulp
mov
loopne
adc
dec
clc
mov
aad
pop
push
sbb
mov
jecxz
sub
xchg
xor
aad
mov
add
mov
pushl
inc
nop
push
mov
or
daa
or
add
sbb
aam
or
mov
add
push
imul
add
mov
popa
lcall
into
cmp
arpl
adc
fiadds
mov
xchg
inc
mov
push
movsb
or
mov
jo
or
cld
mov
dec
in
lret
jecxz
sbb
mov
cmp
xor
xor
xorl
icebp
mov
xor
out
add
orl
daa
ror
pushf
xchg
movsbl
sub
outsb
xor
or
jae
mov
aad
out
push
or
idivl
jns
loope
clc
cmpsb
push
loopne
sbb
jns
stc
jnp
in
int3
pop
mov
and
fwait
into
pusha
sbb
cli
loopne
xor
lret
xchg
das
push
leave
dec
jmp
sbb
cmp
addr16
push
lcall
inc
popa
into
mov
cmc
jmp
insb
daa
xor
mov
scas
pop
pop
or
inc
or
adc
orl
jo
fstpt
add
leave
rol
jecxz
loopne
pop
xchg
dec
jp
jns
fsubp
jecxz
out
inc
mov
fadd
js
pop
inc
sub
ja
mov
out
iret
mov
pop
shrl
jge
xor
adc
add
aas
or
adc
in
std
sub
lret
inc
scas
cmp
out
sahf
jecxz
loope
lahf
mov
sub
outsl
inc
jg
mov
push
sbb
loope
rcr
dec
mov
cbtw
add
es
in
pop
je
lds
pop
dec
adc
jbe
cmp
xchg
and
out
or
jno
mov
and
pop
imul
mov
jne
jne
jb
daa
lahf
shr
xor
fstpl
or
mov
push
int
insl
cmp
mov
xchg
fisttpl
xchg
push
inc
out
mov
cltd
lods
pop
scas
inc
pop
and
xor
pop
or
sub
cmc
arpl
pop
mov
mov
fidivl
and
repz
mov
jle
push
adc
mov
lods
xlat
pusha
clc
or
pop
adcb
jg
xchg
jle
aam
sub
xor
movsl
rorb
mov
adc
mov
sbb
inc
popa
push
mov
cmp
pop
not
lock
mov
jae
adc
leave
mov
leave
out
and
xor
xchg
pusha
dec
sbb
xor
or
and
and
inc
add
notb
sub
and
inc
daa
insb
popf
xor
pop
push
es
cmc
and
adc
mov
add
sbb
pop
sarb
push
pop
inc
dec
pop
jp
subb
push
pop
in
jae
sbb
mov
push
cmpsb
push
xor
jne
out
mov
int3
inc
movsb
mulb
movsl
lea
outsl
je
mov
test
shl
xor
aaa
hlt
adc
cmp
faddl
imul
daa
dec
mov
pop
cmc
cmp
mov
insl
pop
sbb
pop
sub
aaa
into
mov
xor
cmpl
into
lds
scas
xchg
shll
hlt
xor
or
pop
lea
sbb
daa
jge
inc
pop
push
xlat
sbb
inc
test
sbb
xor
lea
or
lret
mov
mov
notb
int
subl
sub
sub
cs
ficoms
sahf
adc
cld
xor
mov
xor
sbb
pop
fnstcw
mov
cld
movsl
shll
inc
jmp
setbe
sbb
adc
popf
mov
jae
adc
and
pop
orb
add
jg
pop
jp
cs
pop
pop
sub
clc
sub
les
arpl
add
cmp
jns
enter
cmp
sbb
push
clc
imul
popf
or
inc
sarl
jecxz
xchg
cs
data16
out
mov
scas
sahf
in
lret
cltd
mov
jecxz
imul
shll
daa
push
dec
dec
shr
mov
xor
adc
out
pop
cmp
in
or
sbb
loop
mov
inc
and
push
dec
les
lcall
or
dec
popa
notb
cmp
adc
or
loop
push
pandn
push
orb
cmc
jae
cmovo
inc
rcll
xchg
dec
mov
faddl
lcall
je
fs
fxch
or
adc
mov
cmp
std
xchg
sbb
loope
in
ljmp
xor
lcall
lods
aas
cwtl
push
loope
push
in
and
insl
fs
or
sahf
xor
sbb
stos
pushf
push
fsubrl
and
pusha
in
lods
sbb
lret
mov
jbe
push
daa
dec
aad
push
test
lds
push
jnp
mov
aad
fistpl
out
adc
andl
lods
pop
test
test
dec
jne
sub
mov
cmp
push
fwait
cli
mov
mov
inc
xorl
xchg
dec
mov
xor
cmpsb
int3
mov
and
sbb
cmp
iret
inc
nop
mov
xchg
es
mov
iret
daa
cmp
sub
mov
xor
push
adc
daa
inc
ss
hlt
cmp
imul
les
out
sub
xor
sbb
inc
inc
and
or
inc
bound
loopne
test
cmpsb
xor
subl
dec
sbb
scas
and
mov
outsb
sbb
insb
popf
sub
mov
negb
mov
mov
cmp
popa
xchg
xchg
loope
test
in
mov
outsl
loopne
xchg
call
sbb
cmp
icebp
mov
adc
or
test
sahf
adc
stc
std
xchg
inc
sub
pop
pop
pop
das
jecxz
cmp
jae
mov
xchg
jae
or
mov
mull
shlb
cmc
and
je
jecxz
cmp
loope
fsts
mov
imul
sbb
jns
xchg
xor
scas
cmpsl
outsl
mov
cmp
scas
scas
adc
les
lds
shr
sub
mov
mov
addr16
insb
out
cmp
fistl
lahf
stos
cli
jns
cs
mov
cmp
std
and
sub
sub
daa
pop
ds
fs
add
jno
hlt
push
ret
pop
clc
cmp
fnsave
in
sahf
daa
push
ds
outsl
and
ret
xchg
roll
mov
jge
ror
shll
insl
call
inc
les
iret
enter
jbe
add
pop
into
and
mov
cld
mov
xor
lock
ret
pusha
push
and
mov
cmc
cmpsb
pop
mov
daa
out
pop
cltd
ljmp
int3
mov
lahf
sub
call
daa
icebp
lea
imul
out
pusha
sub
lea
cmpsl
inc
inc
repnz
repnz
imul
cmp
ret
andl
imul
jp
push
dec
fcomip
inc
jae
push
arpl
sahf
xchg
test
cwtl
daa
or
mov
inc
adc
outsl
push
push
les
stos
dec
pop
movsb
mov
push
mov
enter
jg
or
roll
bsf
and
lea
jbe
cld
inc
pop
subl
daa
xorb
inc
xchg
lea
je
dec
cmc
fs
push
xchg
jb
pop
jns
add
pop
push
cmp
adc
push
or
out
mov
add
xchg
xchg
cmp
fstp
pop
jb
mov
mov
daa
es
mov
aam
or
pusha
jnp
and
es
push
jae
fcmovu
loopne
jns
iret
xchg
dec
or
in
arpl
stc
das
push
dec
popa
shrl
sbbb
sahf
push
mov
pop
daa
ljmp
pop
je
xor
xlat
imul
mov
nop
dec
mov
in
addr16
aad
adc
inc
fnstenv
out
xor
jae
xor
xchg
daa
adc
cmp
pop
xchg
sub
inc
jae
adc
loop
push
mov
std
mov
mov
inc
cld
and
mov
or
xchg
fmull
and
cltd
shrb
mov
cltd
xor
scas
mov
fs
loope
loope
popa
sub
enter
jns
std
mov
scas
mov
push
inc
loope
lds
cmpsb
fists
adc
dec
adc
fidivs
push
push
in
lds
shl
xchg
inc
and
inc
mov
loop
insl
sub
jmp
aam
sbb
pop
scas
adc
lret
push
jmp
lahf
aas
xor
test
mov
mov
dec
jge
bound
pop
pop
ljmp
mov
insl
shrb
movsb
push
aaa
enter
and
cmc
pop
gs
push
cs
pop
ds
sub
jp
sbb
lahf
xchg
xchg
sub
rclb
fnstenv
inc
jno
lds
hlt
or
ljmp
cmp
sbb
jne
pusha
int3
in
dec
adc
hlt
cld
and
cmpsl
ss
push
ret
cmp
dec
push
or
xchg
cltd
shr
out
and
pop
pop
loopne
mov
push
fcmovu
mov
mov
xchg
adc
addr16
pop
sub
int3
shl
ja
sub
dec
pop
movsl
ret
push
pop
movsb
aam
push
push
aad
pop
cmp
insb
nop
jnp
inc
ss
sbb
sub
ret
mov
sbb
bound
sbb
lea
es
pop
mov
stc
jbe
add
mov
adc
pop
cmp
mov
or
mov
sbb
sti
bnd
hlt
cmp
mov
push
hlt
mov
loop
jns
out
inc
js
jns
adc
je
mov
jae
pushf
pop
xchg
push
adc
sub
push
xchg
and
out
lret
ret
pop
lea
lret
shr
mov
or
cmpb
test
jp
daa
push
push
push
daa
scas
je
aad
push
bound
and
mov
sub
pop
mov
push
les
lock
repnz
insl
daa
fistl
xchg
lahf
mov
inc
hlt
xchg
das
pop
mov
cmp
cld
push
adc
stc
add
cmp
adc
repz
hlt
inc
popf
sbb
pop
cmpb
or
adcb
pusha
inc
adc
ret
xor
sbb
xchg
das
test
pop
jmp
pop
sub
push
sti
dec
cli
fs
mov
out
xor
adc
cs
push
sub
mov
mov
fidivrs
pop
daa
mov
test
aad
sarl
push
aas
dec
out
sbbl
sahf
lds
mov
sahf
adc
or
push
jb
jmp
push
mov
das
mov
scas
mov
daa
and
dec
stos
aas
adc
cmp
or
jge
pop
daa
dec
and
inc
sbb
mov
mov
out
add
jle
movsb
subb
inc
sub
jnp
inc
test
out
movsb
lret
adcb
mov
out
xchg
adc
std
xchg
mov
push
push
xchg
xor
mov
insb
adc
pop
or
das
mov
push
lds
xchg
mov
push
bound
aam
cmp
xor
sbb
jge
nop
adc
inc
inc
les
inc
adc
xlat
mov
add
pop
pusha
lret
inc
jle
orl
lods
icebp
or
nop
jne
sti
dec
cld
ret
push
fs
inc
mov
or
les
sbb
ds
xor
inc
xchg
fwait
imul
adc
jl
fnstcw
inc
mov
xchg
mov
mov
mov
mov
adc
add
insl
add
aas
ret
imul
and
imul
dec
ljmp
pop
aam
jecxz
fwait
xor
popf
or
dec
repz
jmp
mov
inc
cmp
sub
jno
cmp
or
push
jp
in
es
adc
add
daa
in
adc
jg
pushf
jl
lock
and
sbb
add
movsb
xchg
bound
xor
fwait
stos
iret
aam
pushf
pop
je
outsb
pop
push
in
decl
xchg
pop
movsb
jne
stc
or
in
popa
cmp
cmp
fdivrl
lods
pop
sub
jnp
pop
add
lods
rol
push
adc
aad
shrl
sbb
daa
pop
mov
push
in
les
pop
and
or
jae
sub
or
shll
ja
es
pop
out
xor
lea
jbe
loope
jo
mov
cld
xchg
push
repz
mov
mov
adc
xchg
mov
and
shrb
inc
lahf
adc
cltd
lods
sbb
bound
dec
mov
push
mov
les
fcoms
mov
mov
push
or
cmp
aas
dec
popf
leave
and
push
add
fadd
add
mov
std
dec
dec
or
inc
jge
cmc
gs
fiaddl
inc
pop
jae
mov
cmp
push
sbb
inc
into
xchg
xorb
shlb
ds
sub
mov
sarb
add
push
pop
fstps
and
cmpsb
fdivrl
sbb
sbb
sbb
fwait
adc
dec
loopne
mov
daa
dec
pop
loopne
sub
enter
into
cld
cmpsb
fidivl
mov
pushf
dec
inc
ljmp
cmp
stos
scas
fsubr
insl
jge
xor
pusha
dec
mov
pop
jmp
pop
out
mov
push
in
cmp
jecxz
lahf
ja
fwait
or
subb
mov
les
jne
jecxz
imul
mov
mov
lret
rcr
movsb
add
popa
sti
fwait
ljmp
push
pop
sarl
pop
fwait
imul
movsb
pop
ret
push
mov
mov
xor
movsl
sbb
call
les
daa
pop
push
shl
dec
pop
lret
sub
aaa
arpl
sbb
cmc
jnp
sub
inc
out
in
pop
pop
orb
add
mov
daa
outsb
aas
cld
xchg
adc
pop
sub
xlat
and
ret
inc
test
and
xchg
clc
rcll
pop
leave
pop
aam
xchg
mov
mov
xor
outsb
pop
movsl
sahf
les
out
leave
jmp
cmp
xor
int
pushl
push
jp
imul
fbld
mov
add
out
roll
enter
xchg
inc
fsubr
test
mov
ror
hlt
daa
push
sbb
jp
mov
mov
mov
mov
jo
cmp
mov
push
lahf
inc
subb
call
xor
loop
sub
sub
cmp
inc
cmp
xchg
orb
scas
cwtl
popl
fidivl
rcrb
insb
out
hlt
push
jecxz
popa
mov
sbb
pop
or
mov
mov
adc
out
scas
inc
sub
xor
je
shlb
sbb
push
insb
fbstp
js
ret
xchg
adc
fs
xchg
cwtl
stc
mov
xchg
adc
lea
inc
adc
scas
xchg
adc
lret
add
push
pop
fcmovnu
add
pop
jae
jg
xchg
insb
out
cmp
or
daa
mov
push
outsl
sbb
xor
les
mov
sbb
in
mov
stos
xchg
push
adc
adc
sub
pop
jle
and
adc
sarl
add
mov
test
or
das
pop
mov
jns
mov
repz
mov
push
or
pop
fldl
cmpsl
sbb
addr16
dec
adc
dec
pushf
sahf
addr16
insb
xchg
ret
out
adc
scas
sub
adc
arpl
int3
pushl
lret
mov
cmp
ljmp
adc
dec
push
subl
mov
pop
sidtl
pop
lods
mov
ret
sub
jg
inc
leave
xchg
sbb
xchg
outsb
sbb
fcmovnbe
inc
push
pop
jmp
cld
xchg
int3
out
jmp
and
outsw
fstps
sub
aas
push
cld
pop
mov
push
repz
mov
adc
test
and
pop
or
pop
jne
adc
mov
movsb
dec
push
push
filds
xchg
lods
arpl
sub
popa
ret
add
adc
jmp
and
fisttpl
jae
and
or
inc
popa
aaa
push
imul
scas
mov
push
xor
xchg
inc
pop
out
push
aas
aas
pop
inc
inc
push
daa
inc
push
daa
shlb
and
mov
andl
xor
cmp
xor
mov
adc
roll
in
inc
js
rcr
jecxz
fwait
jns
adc
or
push
add
int3
inc
jnp
aad
and
push
mov
lds
lods
sbb
mov
pop
cltd
mov
mov
jae
lea
push
or
daa
cmp
js
jns
add
fstpl
aaa
fsts
sub
popf
jne
xchg
inc
enter
sub
hlt
jne
mov
in
mov
shr
inc
mov
add
xchg
cmp
iret
dec
ja
jmp
in
arpl
aaa
xchg
int3
pop
scas
sbb
xchg
sarb
push
test
dec
and
fcompl
push
rorl
fwait
jb
dec
bound
push
dec
stc
dec
hlt
mov
lods
or
out
scas
sub
cmpsb
push
lcall
jmp
scas
data16
mov
movsb
aaa
pop
xchg
inc
push
or
cld
pushf
pop
test
adc
and
dec
testl
lock
scas
xor
cwtl
out
mov
jmp
sbb
dec
addb
lret
sbb
sarb
mov
cld
mov
pop
or
sbb
adc
push
xor
pop
stc
rcr
mov
add
inc
adc
or
mov
inc
jae
add
and
mov
mov
cmp
push
movsl
cmp
xlat
rcrl
icebp
mov
imul
lods
mov
push
mov
xchg
and
xchg
sub
xchg
jnp
scas
cmpsb
lret
scas
scas
call
sbb
imul
mov
data16
rclb
hlt
and
pop
sub
cmp
lods
mov
pop
xlat
mov
xchg
cld
insb
cli
fwait
jg
packuswb
in
mov
adcb
xchg
mov
mov
xchg
pop
sbb
stc
dec
sub
jge
daa
mov
imul
lds
cmc
jns
pop
xchg
in
sti
sbb
xor
adc
mov
xchg
or
mov
sbb
sub
mov
push
mov
push
adc
dec
mov
out
daa
or
inc
or
pop
and
mov
std
aas
pop
mov
movsb
stc
imul
inc
sbb
insl
cmp
push
push
push
jno
popa
fsubrl
in
sub
sbb
push
jb
jecxz
xlat
inc
pop
ss
daa
daa
sbb
sbb
mov
enter
out
jp
cmpsl
das
insb
enter
push
adc
nop
cld
out
lods
andb
jo
xor
andl
lcall
dec
mov
mov
cmc
xchg
aaa
aad
add
xchg
xor
sarl
les
insb
mov
sub
jbe
roll
push
or
pop
popf
cmpsb
out
cmp
mov
nop
add
inc
mov
push
hlt
push
inc
xor
lods
cld
cmp
mov
or
inc
and
nop
xor
mov
xor
cmp
aaa
sbb
test
dec
jg
and
notl
ja
scas
xor
jae
fstl
push
inc
scas
cmc
xchg
cmc
gs
dec
inc
mov
sub
out
inc
jmp
mov
test
adc
ret
adc
inc
outsl
mov
aad
mov
aam
enter
popa
loope
or
pop
pop
dec
xchg
daa
xchg
aam
mov
stos
inc
repnz
pusha
in
lea
iret
add
dec
loope
les
addr16
mov
inc
mov
std
cmp
push
jns
not
push
xor
xor
pop
or
popa
inc
fwait
repz
scas
jae
dec
cmp
push
aam
aas
rcll
imul
or
cmp
int
lock
push
dec
filds
push
fsubl
scas
adc
aas
cmp
push
inc
mov
add
int3
sub
xchg
enter
jne
sub
sbb
dec
add
sub
rolb
sub
stos
call
lahf
mov
mov
xchg
sbb
dec
cmp
inc
movsl
test
and
inc
xlat
or
pop
mov
int
add
mov
repnz
movlhps
pop
mov
mov
adc
popf
inc
rcll
pop
aad
jno
int3
ljmp
fstl
scas
adc
popa
mov
or
in
sub
loop
sbb
jae
scas
cld
and
jecxz
or
xchg
mov
mov
cwtl
popf
add
pushf
adc
into
or
aaa
decb
imul
mov
jl
ss
mov
or
pop
ret
sub
hlt
sahf
sbb
pop
push
jne
cmp
les
fistl
sub
dec
test
mov
push
sbb
daa
dec
mov
inc
xchg
jecxz
lea
or
shlb
sbb
nop
fwait
aas
aas
jge
lret
outsb
or
adc
pop
movsl
mov
fwait
xorb
pusha
mov
in
add
sub
lods
push
jae
inc
mov
xor
adc
pop
mov
and
or
shl
and
xchg
adc
and
pop
dec
outsb
add
cli
sub
jl
ljmp
pop
cli
mov
int3
pushf
fistpll
call
xchg
xor
loope
popf
orl
pop
imul
out
adc
add
pushw
fsts
push
sbb
popa
dec
mov
aaa
rcll
in
push
lods
ss
icebp
sbb
sbb
repnz
add
je
movsl
sub
fdivrl
sbb
jo
pop
jne
jp
sbb
clc
push
imul
adc
test
sahf
or
js
jmp
fildl
scas
mov
rorl
dec
mov
push
xchg
popa
imul
adc
es
adcb
lds
pop
out
les
or
cltd
jge
xchg
mov
cwtl
cli
aas
shr
sub
pop
imul
aaa
pop
mov
xlat
sbb
out
inc
inc
scas
fcmovbe
fadds
insb
xor
into
lds
pop
loope
push
lds
push
mov
jne
test
jl
jmp
daa
push
cmc
pop
pop
pushf
cmp
mov
mov
std
push
nop
lret
and
shrl
pop
les
adc
and
and
sbb
int3
loop
stos
les
xchg
pop
pop
arpl
das
mov
insl
cmp
jmp
and
sub
cltd
int
repz
frstor
arpl
and
or
xchg
les
or
pop
cmp
inc
rol
xlat
or
mov
insb
fmuls
lret
jns
and
push
mov
or
and
xchg
or
icebp
addr16
fildl
inc
je
inc
xchg
or
lods
cmp
or
pushf
leave
in
adc
push
imulb
or
cmp
fisttpll
shlb
call
in
sbb
test
stos
inc
data16
mov
inc
or
ror
lret
or
pop
cmp
mov
inc
cmp
cwtl
adcb
fldenv
jp
xlat
jg
pop
push
sarb
fs
mov
lahf
pop
push
idivl
rol
or
add
scas
add
outsl
js
das
xor
push
addr16
inc
iret
sbb
jp
mov
xor
mov
ds
pusha
ljmp
stos
jo,pt
icebp
push
dec
scas
cwtl
mov
insb
xchg
push
cmp
pusha
xchg
shll
mov
inc
std
pop
insb
dec
adcl
mov
adc
js
inc
in
push
stc
pop
push
pop
inc
xchg
jns
clc
lcall
inc
arpl
adc
cmc
mov
mov
jnp
cmpsl
nop
dec
inc
push
inc
dec
push
insb
daa
test
inc
add
sub
push
jbe
jns
cmp
lods
cs
dec
mov
pop
daa
je
daa
mov
pop
lret
hlt
adc
shll
popa
mov
dec
jb
test
mov
insb
push
add
add
daa
aaa
test
daa
repz
jns
nop
negb
popa
inc
shll
fbstp
xchg
mov
fwait
xchg
bnd
pop
add
loope
xor
in
adc
and
shll
xor
in
out
fstpl
jo
jecxz
sarb
popf
and
or
popa
imul
sbb
pop
aad
sub
dec
out
cmpsl
mov
pop
sub
movsb
pop
lcall
into
outsl
and
aad
xor
xchg
pop
lods
rcrl
fstl
daa
mov
pushf
stos
fisttpl
dec
fidivrl
enter
cmpsl
xor
adc
pop
xor
inc
dec
mov
jae
xor
and
inc
xchg
xor
xor
aad
inc
xor
iret
push
jp
incb
mov
push
arpl
int
push
add
cmc
mov
jns
sbbl
cmp
inc
ud2
mov
mov
test
jae
xor
sbb
pop
je
pop
popf
inc
push
jp
cmp
jo
dec
xchg
adcl
xchg
pop
lds
xlat
imul
shlb
dec
cs
pop
push
push
jge
mov
sbb
push
pop
mov
cmc
and
or
or
fisubrl
dec
cmp
push
loop
push
in
sti
push
gs
push
mov
rcr
insl
xor
loope
mov
inc
pop
mov
push
mov
inc
test
pusha
jae
sbb
dec
mov
and
push
data16
adc
js
pop
shl
dec
out
fnstcw
jae
or
sbb
sahf
push
addr16
ja
mov
lret
sahf
clc
jecxz
and
jg
clc
mov
popa
insb
push
adcl
pop
adc
sub
lahf
inc
push
lret
mov
lods
repnz
icebp
push
out
adc
decl
mov
cltd
sbb
mov
daa
test
push
sbb
stos
jne
outsb
pmuludq
xor
pop
and
xchg
push
xchg
ret
aas
xchg
lds
popa
cmp
rclb
xchg
les
sub
xchg
add
addr16
or
inc
in
icebp
daa
cmpsl
sbb
mov
inc
pop
loope
popf
xor
loop
fdivrl
in
loop
jle
in
mov
imul
imul
lds
rcrb
adc
inc
scas
xchg
or
scas
inc
pop
bound
push
xchg
nop
into
jnp
or
and
xor
cmp
daa
fsts
shll
insl
or
mov
nop
mov
jp
movsl
pop
in
push
data16
mov
popa
fidivrl
pop
ds
push
inc
imul
or
adc
cmp
cmp
cmp
dec
fwait
inc
lds
sbb
out
sub
cmp
adc
lods
idivb
cmp
sbb
xchg
lahf
jnp
cmp
adc
in
popa
into
popa
push
sub
stos
jmp
cwtl
repz
xchg
mov
xchg
mov
push
addr16
mov
push
out
filds
std
mov
push
mov
daa
stc
mov
stos
pop
mov
cmpsl
xlat
mov
lret
stos
popf
lock
in
sbb
aas
xchg
xor
cmp
arpl
or
adc
add
ficompl
rcl
sub
pop
cmp
daa
iret
fstpt
pop
push
xchg
adc
mov
int
bound
inc
dec
and
lret
push
daa
int3
mov
jae
repnz
jo
imul
cmp
hlt
pusha
stos
icebp
xchg
xor
ret
leave
jl
aam
je
fcoml
mov
mov
adc
push
cld
fldenv
push
add
aaa
sub
pop
xchg
stos
lds
popa
cmp
rcrl
sub
xchg
stc
daa
mov
mov
add
test
xchg
loopne
fimuls
push
aaa
daa
movsb
addr16
nop
popf
mov
mov
icebp
ret
sbb
cmp
loop
xor
add
cli
cmp
mov
xchg
fnstcw
je
cltd
adc
xor
sub
cmpsb
push
aam
lcall
mov
inc
pop
stc
inc
aaa
add
imul
rcl
imul
sub
xor
inc
pop
aad
imul
stos
xchg
daa
push
lcall
jg
mov
insb
jb
jnp
adc
mov
lret
mov
test
insb
push
add
cmpb
mov
cmp
popa
inc
adc
and
lcall
mov
fisttpl
rcrl
sub
cmp
dec
mov
xchg
sub
in
icebp
pop
dec
xchg
push
lcall
cmc
cmovg
in
sahf
popf
inc
xchg
and
xor
icebp
mov
pop
pop
mov
or
xchg
adc
mov
pop
or
int3
jge
mov
jae
fsubr
sub
test
or
jo
out
sub
in
inc
mov
push
ror
nop
shl
data16
scas
mov
mov
cmp
pop
sbb
push
lret
add
aam
inc
je
inc
mov
add
movsb
sbb
je
inc
sub
dec
mov
movsl
ss
setg
mov
jecxz
lahf
ss
mov
pop
xchg
neg
jo
sti
pusha
in
dec
pop
fstl
cwtl
call
jecxz
adc
jmp
scas
and
adc
test
repz
sub
mov
shrl
dec
dec
iret
aas
in
popf
fmul
xchg
jno
mov
xor
hlt
in
scas
dec
dec
into
mov
push
jl
jbe
pop
xchg
jp
jp
push
fcmovnu
sbb
jns
cld
cmp
pop
mov
fbld
inc
jl
push
cmc
dec
push
jae
xchg
lret
or
cld
pop
lcall
insb
push
cltd
in
clc
inc
sbb
adc
loopne
outsl
add
push
add
into
insb
mov
mov
jb
and
daa
pop
orb
xor
mov
loopne
scas
mov
jb
mov
mov
dec
scas
cmpsb
jns
pop
hlt
daa
loope
dec
pusha
jns
idivb
dec
or
outsb
fsubrl
xchg
cmpsb
inc
jno
in
jl
mov
jle
jae
fs
std
ja
mov
daa
mov
and
in
mov
scas
inc
mov
movsb
call
push
sbbl
cmp
inc
adc
orb
loop
push
and
pop
arpl
test
mov
gs
mov
pop
sbb
sbb
jo
stos
loope
fnstsw
clc
push
fwait
jno
xor
pop
imul
add
push
jns
or
mov
icebp
hlt
out
dec
std
in
xorl
or
popf
xrelease
add
rol
out
xchg
mov
dec
imul
push
cmp
xchg
imul
adc
pushf
and
bound
inc
push
mov
loop
add
std
dec
popf
xor
push
stos
sbb
sub
inc
add
sarl
push
xor
xor
inc
push
stos
stc
push
test
adc
lock
shlb
adc
xor
push
push
loope
mov
xor
and
push
and
jle
pop
xor
push
iret
sbbb
ret
fimull
pop
aas
jns
pop
adc
insl
scas
iret
sub
rcr
cli
pop
mov
cld
inc
dec
pop
mov
fidivrs
sub
popa
mov
data16
das
cmp
cld
lret
aam
lret
push
or
and
out
sbb
loop
nop
mov
icebp
pop
sub
xchg
cmpl
adc
out
pop
fsubrs
sbb
sbb
stos
inc
jmp
xchg
sub
cmp
push
pop
imul
hlt
pop
adc
das
pop
lahf
pop
movsl
sbb
inc
adc
loopne
lahf
scas
icebp
jle
jle
aaa
sbb
es
jno
lret
push
stc
or
sbb
xchg
and
jmp
mov
cli
mov
adc
leave
and
scas
sub
nop
xchg
cmp
mov
jns
idivl
aaa
mov
cmpsb
daa
lahf
out
mov
sahf
cmp
iret
lcall
lahf
push
mov
xor
loopne
jl
lahf
insl
lcall
fnstcw
inc
push
dec
test
jno
psraw
test
mov
int3
dec
daa
inc
inc
mov
dec
repnz
stc
dec
call
jp
pop
fs
push
xchg
adc
add
imul
loope
or
cmp
popa
sbb
ss
or
push
push
sbb
mov
imul
cltd
or
pop
dec
pop
push
fwait
pop
hlt
rolb
or
dec
jmp
pop
and
mov
in
xchg
jne
mov
lea
outsl
mov
int
xor
lret
mov
addr16
shll
sbb
push
jl
cmc
out
ret
adc
je
mov
shrl
jmp
ficomps
or
daa
or
jae
jg
divb
pop
mov
pop
dec
cmc
add
ret
dec
add
daa
or
test
add
xchg
dec
lods
cmpsl
mov
out
adc
ret
or
inc
std
inc
inc
outsl
lcall
notl
daa
cmpsl
adc
test
scas
insl
je
mov
mov
add
stos
push
cmp
pop
data16
inc
ret
je
jmp
lods
inc
mov
mov
adc
mov
xchg
ss
leave
push
movsb
and
int3
decb
adc
or
test
mov
cmc
call
adc
sbb
sbb
sbb
rclb
adc
push
jge
shr
xchg
xchg
mov
shrl
shrl
pop
out
aas
adc
pop
nop
mov
jmp
add
mov
pusha
test
sbb
aam
out
call
and
sub
es
push
jmp
sbb
push
std
out
lods
iret
aad
push
xchg
mov
cmp
push
adc
paddb
mov
or
mov
adc
in
and
es
test
jae
pop
fstpl
icebp
mov
inc
push
pop
loopne
clc
orl
jns
pop
mov
lret
or
ret
dec
push
arpl
or
cmp
mov
in
add
or
out
sahf
mov
sub
and
xlat
adc
jno
and
dec
clc
sub
xchg
insb
cmp
repz
cs
icebp
mov
mov
pop
xor
mov
ret
mov
or
and
out
stc
adc
xor
adc
xlat
push
stc
sub
test
sbb
inc
pop
mov
dec
push
cmpsl
and
pop
fistps
loopne
je
jl
lret
daa
ljmp
cli
or
dec
xor
add
push
adc
imul
xor
sub
inc
imul
inc
shll
hlt
sub
mov
into
fcmovnb
pop
jnp
stc
movsl
lcall
leave
cmp
inc
cmpsl
cltd
in
mov
sahf
xor
xchg
ret
icebp
loope
gs
aaa
pop
mov
mov
adc
lret
andl
sub
clc
cmp
inc
js
ret
icebp
dec
les
dec
mov
repnz
mov
mov
jb
jns
cmc
jo
mov
pop
outsb
fwait
jnp
aad
push
fwait
mov
stc
pop
sbb
pop
ret
addb
iret
xor
aam
dec
pushf
push
sub
sub
int
mov
popf
pop
mov
es
jg
mov
scas
testl
mov
bound
popf
imul
and
int
sbb
push
idivb
adc
mov
pop
repnz
and
imul
movsl
or
out
inc
pop
ljmp
cmp
mov
xchg
addr16
std
pushf
ljmp
pop
cld
je
cmp
into
cs
or
mov
add
mov
pop
movsb
sub
dec
mov
push
adc
mov
loope
fwait
repnz
sbb
arpl
or
xor
jmp
hlt
push
loopne
cwtl
pop
xor
push
cmp
xor
cltd
sbb
push
insb
imul
pop
lds
outsb
sbb
sub
push
call
xlat
stos
mov
add
movsb
lock
push
sub
add
push
inc
jmp
add
aam
aas
popf
pop
enter
inc
adc
xor
fs
mov
push
lcall
sahf
xchg
sub
inc
nop
mov
stc
daa
scas
mov
mov
jne
stos
or
jge,pn
hlt
sub
popf
push
pushw
push
push
int
daa
pop
jg
lahf
rorl
pusha
pop
hlt
cmpsb
data16
or
pop
xor
add
xor
mov
cmpsb
sbb
pop
or
jle
jae
xchg
mov
inc
scas
xchg
adc
pop
or
ljmp
push
loope
mov
and
pop
push
sub
je
cmc
jmp
jb
inc
mov
mov
xchg
rcrb
daa
pop
lahf
mov
repnz
imul
aas
jmp
insl
add
or
dec
sub
add
adc
pop
cmp
stos
and
mov
insl
stos
pop
std
sub
jb
push
cmp
and
movaps
in
lret
xlat
lcall
push
sub
mov
test
mov
cs
daa
add
push
out
and
jmp
sub
rclb
or
xchg
scas
notl
cmc
dec
sbb
ds
ja
dec
fcmovne
mov
test
pop
xor
fs
sub
jo
dec
aas
mov
sbb
cltd
ds
les
mov
sub
fs
sbb
push
pop
pop
xchg
ret
in
in
mov
out
inc
rclb
mov
or
imul
cmp
pop
push
dec
push
imulb
adc
out
mov
out
cltd
call
sub
sbb
mov
rclb
mov
cltd
cmp
in
and
or
inc
enter
fisubs
jnp
mov
push
mov
mov
shlb
scas
ljmp
fistl
insb
adcl
cmp
dec
sub
adc
cmp
sbb
shrl
ja
and
cmp
adc
mov
sahf
jmp
out
insb
daa
rcr
xor
xchg
ja
mov
adc
inc
scas
sbb
sub
adc
and
arpl
push
mov
or
sbb
sub
xor
mov
cmp
sbb
jge
inc
dec
dec
daa
outsl
loope
add
or
xchg
mov
sbb
ret
dec
lds
aas
and
xchg
ja
data16
jl
push
pop
cmp
dec
scas
jo
sub
add
mov
lahf
and
loop
xchg
mov
test
mov
mov
shrl
inc
dec
ds
push
setp
in
xor
dec
hlt
daa
mov
test
push
pop
push
push
hlt
out
aad
inc
fdivs
adc
xchg
faddl
int3
adc
inc
hlt
mov
xchg
push
dec
inc
sbb
add
pop
xchg
and
inc
xchg
xchg
mov
lahf
das
lds
mov
aam
lret
int
in
daa
mov
icebp
ret
adc
or
push
adc
lock
adc
lret
fidivl
popf
pop
bound
cld
loope
pop
imul
inc
pop
sub
sbb
adc
daa
xor
inc
fwait
xchg
iret
adc
dec
pop
popf
cltd
scas
sbb
mov
daa
les
scas
in
out
or
xlat
sub
sti
mov
mov
loop
push
and
pop
xchg
xchg
arpl
sbbl
sub
imul
ds
bnd
js
push
inc
out
das
ret
aam
adc
xchg
int3
cmpsb
xor
nop
mov
outsl
les
je
lods
stc
mov
mov
xlat
shr
int
daa
push
cltd
adc
push
inc
sbb
push
or
pop
xor
insb
fisttps
push
xor
mov
es
hlt
aas
and
jecxz
leave
outsl
cli
and
jne
cmp
shll
negl
adc
dec
xchg
mov
add
pushf
sub
inc
inc
repz
pushf
test
cmpl
xchg
jne
and
cld
mov
cmp
mov
nop
add
pop
push
sbb
in
xor
xor
std
mov
pushl
sub
test
rcr
andl
xor
jecxz
dec
add
ss
pop
loope
lret
daa
add
dec
cmp
out
std
mov
fwait
sub
jmp
push
ds
cmp
shll
orb
je
shr
sub
xchg
and
ret
sbb
ss
test
lds
lods
test
daa
aad
std
xchg
out
jle
std
xor
popf
pop
test
ret
add
push
test
inc
xchg
jb
ja
aad
inc
push
pop
add
aam
loopne
or
incl
aam
int3
push
add
xchg
fbld
sbb
xlat
jbe
jge
cmp
fists
or
ret
in
push
aas
or
addb
push
or
cltd
push
push
xor
int3
push
into
inc
cmp
daa
fs
jmp
mov
sbb
iret
sbb
pop
xchg
outsl
or
popf
sbb
dec
inc
dec
mov
mov
mov
add
and
popf
pop
mov
scas
int
inc
das
xor
pop
cltd
inc
xor
stc
daa
shll
std
cmc
mov
mov
test
mov
xchg
xor
and
cmp
add
adc
or
imul
inc
rorl
push
addr16
mov
sahf
and
cld
mov
adc
dec
stc
or
and
imul
mov
cltd
data16
jnp,pn
xor
pop
aaa
imul
hlt
adc
insb
inc
fisttpl
pop
test
pop
imul
int3
lds
xchg
daa
out
leave
adcb
cmp
inc
sti
pop
push
sub
pop
mov
insb
and
loope
sub
loope,pt
push
or
xchg
xor
fdiv
out
pop
jns
insl
and
lret
jmp
inc
orl
push
pop
getsec
orl
shr
nop
mov
inc
psubb
rolb
call
cmp
mov
sub
jle
aam
cmp
push
outsl
jmp
mov
mov
hlt
cmc
sub
loope
imul
in
mov
ficompl
sbb
shll
dec
pop
iret
cmp
xor
scas
cmp
daa
push
imul
scas
mov
push
mov
lea
stos
imul
push
enter
push
shlb
push
adc
cld
sahf
cltd
adc
xlat
sub
add
xchg
mov
cmp
lret
and
scas
call
sub
dec
data16
int3
ss
roll
mov
loope
jg
cmpsb
sbb
xchg
sbb
mov
out
in
mov
inc
dec
movsl
xor
in
push
or
dec
mov
mov
pushf
lret
or
add
jns
adc
jno
shrb
push
adc
ds
lret
nop
enter
mov
mov
or
out
adcl
daa
fimull
flds
out
loopne
jecxz
pop
in
inc
insb
or
mov
jne
jle
xchg
inc
andl
jns
sub
sbb
xchg
stc
push
sbb
lret
cld
add
notl
aad
mov
loope
leave
stos
or
imul
sbb
out
rcrb
jnp
jne
mov
push
pop
bound
mov
or
inc
ret
lret
ret
stos
add
adc
pop
scas
bound
mov
push
out
leave
inc
or
xchg
int3
mov
mov
mov
cmp
in
pop
test
add
idiv
dec
aam
into
dec
adc
aam
mov
mov
push
and
add
int3
inc
stos
lahf
rcl
push
arpl
jle
mov
lods
sbb
add
pop
or
cmc
push
pop
and
pop
pop
jmp
sub
test
dec
mov
mov
sbb
mov
adc
jae
or
test
stos
popa
mov
sar
lock
dec
mov
scas
das
mov
mov
test
subb
sub
imul
call
mov
adc
jle
out
mov
pop
push
dec
cmpb
inc
push
out
repnz
dec
daa
mov
mov
outsb
mov
insb
hlt
out
xchg
lcall
jb
sbb
adc
cmp
or
jmp
add
pop
inc
adc
test
icebp
mov
cmp
in
xor
js
adc
push
fists
test
cmp
ret
decb
inc
or
out
shl
jecxz
cmp
pop
jne
sbb
pusha
pop
push
mov
push
and
cmpsl
in
xlat
and
loop
jmp
or
push
add
pop
aaa
dec
popa
addb
xchg
sub
mov
adc
inc
pop
jl
aad
not
push
lahf
inc
daa
and
mov
test
fldenv
adc
pop
xor
outsl
data16
and
nopl
cs
mov
xor
fldz
pop
cmc
push
fistl
mov
xchg
jae
mov
lcall
sbb
xlat
in
mov
insb
push
lahf
push
cltd
adc
addb
pushf
jnp
mov
imul
test
or
in
arpl
jns
cmpsl
push
sti
jae
dec
cmp
mulps
mov
aaa
mov
push
inc
popf
daa
fstl
rcll
dec
arpl
mov
xchg
int3
xchg
pop
lret
sahf
cmp
xor
daa
sarb
cmp
sub
jo
inc
fmull
sub
pop
fs
push
stos
aad
jo
pop
inc
rcr
xor
push
cli
push
hlt
daa
adc
cs
sub
sub
pop
repz
push
repnz
out
in
dec
dec
inc
fidivrl
mov
inc
dec
xchg
incl
in
lahf
popa
pop
aad
xchg
popf
push
test
pop
rorl
cld
xchg
mov
xchg
mov
mov
sbb
enter
shrb
arpl
nop
xor
aam
push
push
xchg
outsb
xor
mov
cld
pop
fisttpll
mov
dec
add
adc
cmpsl
lahf
repz
movsb
lods
and
jge
pop
lret
sbb
andb
cwtl
test
imul
and
push
add
rorl
push
or
aam
push
mov
iret
hlt
sar
mov
mov
pop
mov
pop
insl
inc
les
mov
ss
and
or
outsb
pop
out
push
shl
add
cmp
adc
dec
jmp
mov
jg
loopne
xchg
inc
mov
leave
out
jne
jg
cmp
xchg
jp
pop
push
mov
fidivl
cmpsl
orl
jge
pop
adcl
or
pusha
mov
test
je
mov
fbld
fsubrs
scas
hlt
sbb
add
and
dec
adc
movsl
loopne
repz
std
stc
outsl
cmp
dec
aaa
dec
cli
shlb
adc
xor
movsl
in
dec
fiadds
mov
addl
mov
rol
or
fisttps
imul
push
in
cs
xchg
bound
sbb
or
push
or
cli
jmp
repz
mov
or
cmp
lret
out
pop
arpl
fisubl
arpl
inc
in
cmp
pop
gs
lcall
mov
dec
daa
fcoml
inc
aas
stc
adc
pop
inc
mov
or
adc
ja
lds
jl
shrl
cmpsl
xor
repnz
jmp
cmc
xlat
mov
out
mov
mov
adc
into
cmpsl
enter
push
jb
inc
xchg
cmp
popf
pop
lea
insb
mov
add
inc
stos
movntps
pop
dec
cld
adc
inc
and
es
mov
xchg
daa
dec
or
add
aaa
into
lret
movsl
leave
sbb
pop
adc
pop
dec
push
data16
mov
ret
xchg
pop
popa
orb
xor
pop
jp
in
inc
inc
movsl
subl
test
fmul
pop
jno
cld
mov
das
imul
adc
sub
call
aad
dec
dec
outsl
aas
mov
pop
mov
gs
aad
sbb
shrl
cwtl
cld
lahf
jne
arpl
mov
adc
test
shl
or
pop
and
push
pop
and
daa
scas
add
out
leave
sbb
inc
dec
scas
outsl
dec
add
xor
arpl
ss
dec
xchg
mov
dec
push
jae
push
cltd
cmc
pop
lret
movsl
stc
daa
std
pop
mov
sbb
xor
cli
movsb
int3
mov
popa
orb
push
icebp
jbe
mov
adc
xchg
cmc
adc
mov
pminub
in
cmp
lahf
jnp
adc
aas
data16
xor
inc
insl
cmpsl
push
mov
data16
insb
sbb
rcrb
pop
mull
sub
adc
cmp
mov
cmp
xchg
iret
xchg
mov
in
pop
xchg
pop
fistpll
leave
jns
jmp
xchg
xor
push
pop
and
sub
call
push
ss
pop
popa
repnz
arpl
jae
xor
pop
xchg
paddsb
lahf
enter
fists
aad
jp
jg
xor
lods
and
mov
jmp
mov
mov
jmp
stc
jb
cmc
or
leave
sti
pushf
add
mov
push
sub
pusha
dec
out
push
cmp
jns
call
dec
push
xchg
and
test
and
push
mov
lds
scas
mov
ss
iret
mov
push
sysenter
add
inc
inc
mov
mov
adc
cmp
cmp
push
push
insl
and
mov
rclb
daa
aam
scas
shr
fldl
add
mov
rorl
icebp
sbb
cld
cmp
ds
adc
mov
mov
add
sbb
cmp
jecxz
xchg
lods
orl
loopne
mov
and
rcll
dec
fsubrp
push
jae
pusha
outsl
aad
sarl
das
push
andl
daa
sbb
gs
inc
sarb
aaa
push
xchg
cmc
es
or
pop
push
inc
scas
lea
xor
mov
add
les
push
jno
pop
or
dec
popa
adc
pusha
sarl
aaa
sbb
jnp
enter
pop
adc
sbb
mov
sbb
xor
xor
adcb
ds
jnp
xor
imul
push
dec
xor
add
loopne
jbe
cmp
sub
daa
xchg
sbb
imul
cmp
push
mov
inc
adc
cmp
inc
pop
or
and
sbb
inc
aam
dec
or
pop
imul
lahf
shlb
dec
mov
daa
mov
addl
jae
lea
dec
in
push
lret
sbb
ret
shrb
sbb
mov
aam
gs
ljmp
stos
add
cld
mov
mov
ds
xchg
or
or
jecxz
dec
sub
aad
jmp
movsb
pop
loope
cmp
add
notl
cmc
test
rorb
test
fs
add
das
test
mov
stos
sbb
movsl
dec
add
xchg
jmp
aaa
mov
or
jo
gs
dec
or
das
xchg
call
pop
lea
xchg
cmpsb
popa
sub
jno
cs
inc
in
out
test
scas
mov
movsb
scas
xor
shll
xchg
test
xor
in
dec
xchg
dec
inc
sbb
sbb
stc
xor
dec
mov
push
popf
sbb
mov
push
add
je
cmp
lcall
and
adc
inc
xor
popa
xchg
push
cltd
orl
mov
mov
sub
xor
mov
icebp
or
jge
pop
ljmp
jo
pop
cltd
or
cmpsl
mov
cmpsb
in
or
jb
mov
push
ja
stos
dec
sub
je
ljmp
sbb
mov
dec
or
mov
popa
in
xor
ljmp
pop
mov
test
or
mov
loope
xlat
lods
bound
or
sub
xchg
or
nop
push
adc
jnp,pn
icebp
sbb
push
pushf
lret
add
adc
cmpsl
imul
repz
push
shr
mull
orb
inc
add
in
cld
int
jle
in
lods
add
mov
or
pop
xor
dec
jge
insb
repz
or
mov
bound
leave
ja
or
sarb
lea
out
ljmp
push
xor
scas
das
jl
lods
repnz
mov
dec
or
mov
push
xchg
icebp
loope
scas
imul
sarb
hlt
sub
lock
or
or
xor
aam
test
or
xchg
jnp
pop
pop
or
lods
rclb
sub
xor
jmp
aaa
addr16
daa
lea
inc
ret
push
cmp
jmp
aad
or
inc
push
ljmp
out
cmc
subl
mov
data16
sub
xchg
jge
dec
mov
imul
jb
inc
arpl
adc
inc
mov
loop
pop
and
movsb
xchg
test
loope
in
xchg
int3
out
or
mov
push
movups
sahf
int
pushf
popa
adc
mov
pop
cmp
or
xchg
cmp
fisttpl
jg
or
iret
sub
mov
mov
rcrb
or
pop
push
cmp
jmp
or
add
mov
scas
or
mov
fcoml
lods
frstor
dec
sub
sub
std
sti
mov
scas
adc
sarb
bswap
out
out
loope
or
repz
test
xchg
int3
les
imul
xor
mov
and
mov
inc
cmp
cmc
cmpsb
inc
shrb
aam
aam
xlat
sbb
adc
out
ljmp
sub
movaps
mov
in
in
popf
lahf
jnp
sbb
push
xchg
scas
jnp
les
scas
imul
xchg
ds
jnp
xor
pop
data16
mov
icebp
mov
push
nop
inc
inc
in
scas
imul
divl
cmp
insb
minps
mov
add
mov
inc
scas
fisubs
addr16
pusha
xchg
imul
cmp
ds
outsl
cmp
js
sub
cmpsl
fwait
int
xchg
xor
xor
add
pop
adc
dec
mov
mov
mov
cmpl
mov
xchg
jmp
adc
cld
out
repnz
jne
push
daa
jnp
xchg
and
lock
push
rolb
and
jge
nop
addb
test
dec
mov
cld
sarl
pop
adc
inc
cmpsl
and
jb
data16
sbb
rol
pop
mov
lahf
cmpl
int3
sbb
jp
addr16
xor
es
fistl
sub
lock
test
dec
sub
jne
dec
pop
in
pop
sbb
cmp
es
les
out
daa
movsb
jmp
notb
mov
inc
lock
and
test
out
sbb
and
mov
xor
roll
cld
hlt
cmp
int
into
cmp
mov
and
stos
inc
and
ljmp
sbb
lea
pop
stos
xor
mov
shrb
nop
popa
pop
push
imul
lds
stc
and
shrb
sbb
ja
push
js
leave
add
aad
scas
out
aad
rcrl
pop
adc
sbb
mov
or
push
sbb
adcb
std
je
dec
aad
nop
icebp
imul
mov
adc
scas
int
pop
in
inc
and
lds
and
add
mov
movsl
fidivrs
pop
pop
cmp
sbb
pusha
imul
pop
inc
dec
loopne
jne
divl
aad
pop
xor
das
in
mov
inc
cmc
cs
xlat
sbb
push
bnd
mull
scas
and
lret
dec
jge
rcl
fiaddl
fstpl
cwtl
jo
inc
je
cwtl
push
cli
sbb
call
ret
xor
fdivs
jmp
pop
cmpl
stos
push
inc
add
xchg
mov
imul
outsb
imul
inc
repnz
xlat
dec
inc
and
fcoml
jg
adc
imul
push
pop
clc
dec
arpl
cltd
sub
push
cmc
xchg
mov
popf
pop
das
sbb
sahf
in
adc
push
in
aad
sub
sbb
fs
out
hlt
adc
add
aam
mov
out
mov
lock
scas
dec
dec
jg
lods
push
cmc
in
push
pop
xchg
cmc
xor
daa
mov
pop
cld
leave
sub
jnp
pop
sbb
lret
in
fstpl
add
aad
cmpsb
push
mov
mov
icebp
jae
pop
dec
jmp
mov
stos
loopne
inc
and
pop
std
test
popf
je
jmp
lret
movsl
aaa
mov
outsl
loope
pop
xor
inc
lret
push
out
call
lcall
mov
movsb
adc
nop
inc
mov
sub
movsb
adc
mov
or
test
popf
int3
inc
adc
pop
cli
cmp
pop
fwait
pop
movsb
cmc
sahf
pop
aam
das
imul
insb
adc
or
in
inc
invd
mov
mov
stc
faddl
dec
adc
pop
aad
scas
lds
loop
fwait
scas
push
xor
je
or
lea
test
jo
mov
jl
scas
mov
out
imul
fsubr
inc
mulb
test
push
mov
dec
outsb
pop
lock
les
rol
ret
int3
cwtl
add
movsb
jle
mov
je
rcrl
shr
xchg
dec
lds
stos
sti
or
inc
mov
loop
lret
xor
or
dec
mov
sub
and
adc
mov
scas
mov
or
jmp
add
xchg
cmpl
or
shlb
popf
pop
sar
sub
mov
and
inc
fsts
shlb
jmp
cmpsl
scas
add
mov
repz
adc
ret
pop
loopne
xor
mov
fsqrt
popa
mov
popa
fwait
pop
aad
icebp
inc
add
call
xor
or
push
push
addl
fidivrl
fcompl
mov
add
push
popf
mov
subb
daa
sub
push
mov
loope
mov
scas
xchg
xchg
scas
pop
cmc
jle
dec
and
add
shll
scas
mov
aad
inc
mov
push
inc
inc
push
and
mov
mov
push
fbstp
mov
mov
add
inc
pop
cmp
repz
inc
popa
jno
shlb
pop
out
cmp
adc
out
rorl
mov
jns
jno
imul
nop
test
lds
sahf
cs
std
lret
fstpl
xor
or
rorl
fldcw
lock
add
mov
mov
stos
xor
mov
cmpsl
jns
jge
imull
insb
mov
sbb
push
and
push
jno
jp
sbb
cmp
cmpsb
inc
in
mov
lahf
data16
xchg
or
xchg
insl
daa
adc
test
lahf
mov
adc
mov
leave
inc
sbb
xor
cmc
mov
cld
sbbl
mov
cld
inc
rol
rcll
scas
in
xor
mov
push
sub
rorb
stos
xorl
cmp
and
jmp
test
dec
mov
pusha
into
push
test
aad
fwait
inc
loopne
dec
imul
mov
cmp
dec
sub
push
jno
inc
inc
je
push
rcll
mov
jle
inc
mov
movsb
fldcw
nop
push
out
mov
std
add
cli
mov
pusha
loope
daa
xor
jb
push
repz
ds
iret
cli
push
into
mov
add
nop
mov
or
shlb
test
mov
xor
nop
std
jne
jp
loope
adc
adc
or
mov
inc
pop
in
sbb
daa
bound
ja
out
sbb
xlat
cmp
xchg
sbb
and
stos
cmp
pop
inc
inc
jg
clc
jne
scas
push
mov
ret
icebp
add
in
adc
aad
pop
pop
insl
sbb
add
pop
sbb
popf
jle
pop
es
push
inc
cmp
sahf
div
adc
pop
adc
shl
cmpsb
push
out
enter
dec
std
das
ffree
xchg
xor
es
jno
push
out
jle
cmpsb
sbb
aam
jecxz
mov
stc
sub
mov
das
jb
lret
call
jbe,pn
sbb
or
xchg
dec
lret
add
fisttpll
jle
lahf
cli
add
repnz
imul
sbb
popa
xchg
in
outsb
gs
dec
es
in
dec
stos
jb
fisttpll
or
inc
pop
cbtw
lret
or
mov
std
jge
mov
dec
das
stos
out
ss
adc
rorb
cmp
or
mov
cmp
pop
iret
sub
clc
xchg
adc
clc
call
or
and
aaa
or
sub
push
outsl
out
or
mov
sbb
jb
dec
andl
icebp
mov
daa
je
dec
ret
adc
pop
and
mov
fwait
cmpl
ror
push
dec
fwait
sub
lret
or
mov
cmp
or
dec
push
and
leave
rcl
rcl
fs
or
cmp
xor
imul
inc
addr16
or
in
xor
lods
repz
ss
dec
jnp
push
lcall
sub
mov
aam
push
xchg
popf
inc
mov
mov
repnz
out
shll
pop
clc
cmc
daa
jo
popf
jae
les
stos
ret
inc
push
adc
sub
fcompl
jno
and
mov
shl
add
js
mov
or
xchg
mov
sbb
clc
outsl
out
jne
jae
push
mov
inc
je
lods
icebp
mov
push
cld
mov
and
inc
push
xor
test
pop
adc
push
sysenter
sub
add
pop
repz
cmpsb
sub
pop
mov
xor
inc
in
clc
testb
loopne
fisttpl
jo
mov
rcrl
pushf
in
dec
aad
sub
push
lds
arpl
mov
stos
aad
jb
xor
inc
pop
ficompl
xchg
leave
jg
mov
fs
xchg
or
das
mov
mov
jae
xchg
or
mov
or
ljmp
or
bswap
or
cmp
push
test
pop
ds
cmpl
cmp
jns
add
xchg
adc
or
aas
ret
in
mov
loopne
adc
mov
inc
mov
in
or
xor
jg
clc
sub
jne
sahf
fiadds
rclb
pop
call
xorl
packssdw
out
mov
push
mov
or
in
jecxz
negl
mov
aam
lret
xor
repnz
ljmp
test
sub
or
cld
imul
xor
or
dec
xchg
jnp
imul
int
dec
sbb
mov
mov
lea
cmc
push
imul
mov
or
lods
push
mov
adc
pop
sbb
xor
add
and
mov
out
xchg
fwait
cmp
or
xor
lds
mov
mov
jmp
bnd
sbb
or
test
ljmp
xor
lock
adc
pop
lcall
in
ljmp
add
cltd
cmc
add
xchg
outsl
or
movsl
jbe
or
rcrl
fidivrl
xchg
cmpsb
cmp
mov
mov
and
or
dec
xor
in
inc
or
jnp
mov
cli
sbb
imul
stos
or
fs
iret
push
rcll
xor
inc
mov
cmpsl
shlb
test
pop
or
sub
mov
push
pusha
lret
or
fistps
or
repz
add
test
mov
or
lea
cld
scas
sar
or
out
arpl
or
push
cmp
dec
push
mov
mov
int3
xor
and
push
sub
out
inc
mov
dec
jae
adc
xchg
in
and
out
xlat
and
movhps
test
adc
fdivl
or
cmc
sub
pushf
push
mov
or
jns
push
mov
cmp
mov
push
mov
in
mov
adc
popa
add
test
sbb
or
enter
jno
mov
sub
jo
or
mov
jge
in
push
pop
push
in
pop
adcb
lcall
fidivl
xchg
dec
popl
mov
push
sbb
xchg
rorb
mov
negb
and
xor
or
dec
or
inc
outsb
xchg
or
sbb
lahf
push
pop
ljmp
jne
fstps
bound
jp
ds
sub
mov
sub
sbb
sub
icebp
out
and
jp
jnp
add
or
mov
rorb
clc
jo
xchg
pushf
inc
adc
or
sub
andl
call
ret
push
sub
xchg
cmp
xchg
mov
and
push
test
fisttpll
loopne
dec
adc
inc
inc
sti
or
sub
xor
mov
mov
movsb
pop
int3
cmp
fs
repz
lods
jnp
roll
sub
inc
cmpsb
xor
cmp
dec
or
inc
mov
xchg
or
mov
scas
adc
ljmp
icebp
cwtl
fucomi
pushf
idivl
push
adc
test
int3
stos
int
xor
or
call
push
mov
les
sbb
subb
lods
adc
push
call
or
lds
xchg
ljmp
imul
or
mov
sbb
pop
or
sub
in
mov
mov
addr16
lds
push
and
call
mov
daa
imul
orb
dec
je
jb
pushf
es
or
mov
adc
cmp
mov
jge
insb
and
add
outsl
ror
push
or
or
push
sub
push
outsl
into
sbb
xchg
push
xor
push
shrb
sub
sub
adc
adc
adc
jbe
or
testl
xor
ds
or
inc
adc
repz
mov
sti
pop
sbb
push
or
loopne
jne
repnz
inc
adc
insb
movsl
mov
mov
sbb
mov
fs
dec
xchg
cmpsb
imul
pop
jmp
aad
popa
adc
cmovge
aaa
pushf
xchg
and
add
and
pop
stos
cltd
add
test
jle
mov
pop
cs
push
and
daa
sub
lret
mov
mov
add
test
in
or
xchg
add
jle
imull
dec
pop
mov
aas
or
and
pushf
lods
mov
and
mov
lret
stc
out
inc
sub
push
cmp
jne
xchg
or
incb
lods
adc
pop
movsl
xor
pop
insl
fxtract
adc
ja
stos
rcl
jnp
bound
out
sub
lret
dec
cmp
and
jge
or
push
push
in
jmp
mov
lret
clc
push
xchg
imul
mov
mov
arpl
cs
push
test
add
add
ds
push
mov
fwait
sbb
in
int
faddl
or
out
xor
daa
or
ja
dec
add
idivb
or
jae
or
sbb
fidivl
pop
or
mov
and
jg
pop
adc
in
cmc
lods
scas
dec
imul
sbb
add
or
bound
in
ret
movsl
out
pop
fiadds
jg
adcl
fucomip
fs
rcrl
lods
fdivl
xor
scas
or
jle
leave
jne
sub
xchg
aad
inc
xor
sub
pop
movb
and
or
fnsave
nop
jmp
aam
xor
lds
push
push
push
push
pop
or
cmc
sbb
jne
or
ljmp
ljmp
mov
iret
call
outsb
lock
and
mov
xor
mov
lock
or
nop
in
out
jl
loop
test
xor
or
mov
add
sub
call
aaa
pushf
jle
mov
xchg
addr16
or
xchg
lock
bound
in
jp
adcb
push
ljmp
lods
jbe
jb
jp
ss
xor
or
push
repz
add
cmp
push
hlt
ret
scas
xor
frstor
cwtl
outsb
mov
inc
add
mov
das
ret
or
stos
cld
xchg
push
pop
mov
dec
in
jl
popf
inc
add
cmpsb
sub
jecxz
cmp
cmp
movsl
fsub
sub
dec
jl
or
adc
push
dec
hlt
push
or
jbe
sub
sbb
sub
iret
sti
call
fmuls
lods
addb
aaa
dec
or
ret
pop
movsb
push
test
sbb
in
jmp
xor
scas
inc
loope
mov
imul
jbe
cmpl
lahf
mov
in
push
sub
sub
pop
mov
daa
mov
mov
hlt
mov
cmp
shr
mov
call
mov
sbb
mov
lods
inc
jae
sbb
pop
test
dec
pop
mov
fildll
adcl
push
cmp
sub
mov
adc
rcll
adc
repz
and
jne
cmpsl
outsb
lds
push
test
out
or
test
adc
cmpsb
push
add
arpl
imul
sub
inc
hlt
jnp
add
push
push
and
movsb
sub
int3
jnp
insb
popa
fwait
lock
mov
mov
inc
add
sub
imull
cmp
iret
dec
repnz
mov
sub
daa
cli
jp
cmc
mov
imul
inc
popa
fldenv
cmpb
loopne
std
out
popf
sbb
stos
or
int3
cmp
xlat
sbb
daa
add
push
pushf
fwait
inc
jp
inc
cmp
cmp
insl
cld
loope
mov
loope
and
push
push
popa
dec
mov
stos
or
imul
cwtl
jo
imul
jne
mov
jp
pop
pop
dec
mov
jb
xchg
cmp
repz
lahf
adc
push
sti
mov
mov
xor
aas
or
or
jbe
adc
std
push
popa
mov
and
out
popf
clc
dec
inc
rorb
sbb
mov
inc
ss
daa
sbb
xor
in
outsl
pop
pusha
clc
push
mov
dec
sti
data16
cmc
sub
dec
dec
into
xchg
or
sub
rep
stc
cs
test
pop
sub
xchg
cmp
rcrl
int3
mov
cwtl
and
mov
scas
cli
mov
call
pop
mov
scas
jae
push
sbb
daa
pop
cmp
loope
xor
sub
and
pop
lcall
jae
cmc
orl
call
push
mov
fsubrs
jne
out
or
je
fucom
jmp
cmp
pop
push
in
adc
xchg
lock
or
dec
pop
mov
mov
xchg
pop
mov
movsb
add
sahf
out
lahf
pop
jl
popf
inc
rdpmc
in
int
add
pop
movsl
int3
pop
xor
dec
cld
mov
iret
int3
cmp
sub
sbb
hlt
mov
push
bound
shr
loopne
push
dec
int3
xchg
dec
loopne
in
movsb
roll
xchg
sub
cltd
adc
push
inc
lock
jbe
aaa
lds
mov
fistps
or
dec
inc
or
mov
pop
leave
push
aam
dec
inc
xchg
outsb
mov
sub
mov
mov
cmp
cli
pop
mov
xchg
push
popa
sbb
xchg
lret
inc
adc
jae
shr
pushf
call
lock
xchg
ljmp
sub
out
hlt
or
or
push
xor
ffree
mov
and
inc
mov
push
sub
pop
xchg
int3
mov
adc
aas
dec
adc
push
das
sub
popf
add
inc
ljmpw
mov
or
mov
dec
cmpsl
sub
pop
shll
ror
aaa
andb
sub
out
mov
xor
sbb
fcoms
add
nop
sbb
movsb
mov
dec
xor
ljmp
push
jg
sub
sahf
sub
xchg
add
stos
sub
mov
push
push
and
pop
xchg
and
jmp
adcl
xchg
inc
pop
sbb
dec
aaa
xor
and
jecxz
inc
xchg
cmp
loop
mov
jnp
lret
cmp
and
push
mov
and
mov
pop
and
in
std
jmp
sahf
lret
clc
imul
shl
iret
fs
pop
inc
push
xchg
push
sub
insb
arpl
fwait
stos
inc
cmpsb
xchg
dec
outsl
mov
xchg
pop
sahf
pop
mov
jmp
sub
jo
jnp
jp
outsl
addr16
call
or
in
inc
mov
add
lcall
jmp
dec
add
cmpsl
add
xchg
pop
ds
sub
insb
inc
bound
pop
jmp
cmp
gs
pop
sub
pop
das
mov
push
ficoml
test
pop
sbb
out
stos
and
xchg
push
test
mov
js
int3
repnz
xor
mov
fnstsw
add
fmull
repnz
stos
daa
testl
jg
pop
and
mov
mov
stos
push
add
push
jno
xchg
lcall
dec
push
or
call
cmp
push
jnp
xchg
pop
int3
rcr
aam
out
nop
jo
in
gs
cmp
subl
mov
xchg
add
test
daa
scas
cmp
mov
cltd
push
inc
cmpsb
out
call
xchg
inc
cmpsb
sbb
xchg
es
daa
test
popa
imul
popa
mov
jnp
sub
loope
mov
popf
negl
xchg
fs
add
add
adcl
dec
das
addr16
pop
pop
scas
and
stc
sub
jmp
xchg
sbb
and
out
call
push
cld
pusha
dec
inc
fiaddl
inc
shrl
cmp
cltd
cli
xchg
scas
cld
or
hlt
push
lret
inc
mov
mov
insb
jmp
stc
mov
push
arpl
mov
dec
sti
jbe
pop
jns
lds
leave
adc
xchg
insb
mov
mov
and
or
mov
into
fmuls
push
xchg
scas
push
and
xor
ror
xchg
jno
cmp
sub
fisubrl
addr16
ljmp
cmpsb
cs
jp
scas
cli
and
repnz
jecxz
and
xor
or
mov
mov
or
cwtl
xchg
lcall
jnp
mov
roll
sbb
pop
dec
notl
pop
sbb
pop
sub
test
push
inc
popa
xchg
mov
dec
sarl
mov
sbb
popl
fists
jmp
inc
jnp
les
sbb
pop
aad
je
mov
adc
jle
test
push
pop
push
jne
cmp
fistps
addl
je
mov
add
stos
or
mov
or
add
lret
sbb
cmc
std
xchg
js
xchg
pop
mov
scas
ljmp
sub
jmp
pop
imul
les
out
notb
adc
jne
shl
push
sub
mov
mov
scas
fwait
mov
or
lock
sahf
mov
mov
mov
or
xor
mov
or
jo
cmc
jns
adc
scas
xorl
push
mov
inc
sub
es
roll
nop
into
pop
inc
xor
fisubrs
lods
or
popa
pop
lahf
cmpsb
adc
fists
xor
popa
fdivs
mov
jl
fwait
incl
int3
pop
fsubrs
and
inc
idivb
fcomp
lcall
pop
xlat
push
pop
xchg
popf
pop
mov
popf
mov
shlb
out
into
js
sbb
bound
push
mov
aam
mov
mov
inc
into
xor
fsubrl
in
and
pop
daa
mov
loopne
fucomp
into
mov
fdivs
stc
das
jp
loop
call
pop
mov
inc
andl
push
cmp
shlb
es
mov
hlt
aad
xlat
sahf
jbe
push
push
scas
push
jae
mov
enter
pop
pusha
push
dec
inc
stc
std
mov
stos
sbb
pop
mov
repz
pop
dec
pop
int3
pop
xor
mov
jne
sub
push
sub
daa
push
mov
rcll
mov
les
xchg
pop
loope
in
adcl
std
sbb
call
lea
pop
jns
jnp
cmp
pop
pop
sub
fidivrs
xlat
ret
xor
enter
stc
xchg
mov
xchg
mov
xchg
xor
stc
dec
sbb
adc
inc
scas
push
adc
push
dec
adc
mov
outsb
push
push
das
mov
and
stc
sub
push
popa
mov
pop
push
adc
inc
test
mov
addb
scas
mov
and
arpl
dec
frstor
sahf
cwtl
jne
adc
or
fld
mov
imul
test
xchg
push
daa
sarl
out
enter
cmp
and
lods
xchg
fistps
out
add
mov
enter
xlat
push
loope
jg
jmp
inc
testl
in
mov
jne
daa
out
push
inc
push
outsl
cmpsl
ret
and
xchg
pop
sub
pop
pop
cmpsb
scas
jmp
xchg
pop
jnp
imul
mov
pop
jne
cmp
shl
jns
push
mov
push
iret
or
cmp
xchg
ljmp
jp
or
mov
and
sub
call
adc
push
and
dec
fnstenv
enter
mov
mov
mov
jb
mov
cmp
aas
push
dec
inc
fs
sub
pop
pop
adc
mov
daa
cmpsl
sub
add
lahf
jp
je
jg
movsb
sub
movsb
lds
cltd
or
mov
push
jno
and
sbb
cmp
popf
cmp
fsts
je
pop
jg
scas
popf
in
adc
or
je,pt
adc
test
in
jmp
cmp
pop
fstpt
fisubrl
mov
xchg
jl
pushf
jecxz
or
scas
sbb
data16
add
or
xor
sub
sub
iret
and
sub
outsb
ljmp
sub
sbbb
or
aam
decl
sbb
gs
in
and
mov
mov
lcall
insb
in
ss
arpl
mov
int
cmpsb
imul
fldenv
add
lahf
sub
jbe
out
js
sbb
out
imul
std
xor
dec
inc
imul
sbb
sub
cmpsb
or
jle
push
pusha
xchg
lcall
orl
add
jne
jno
adcb
sub
xchg
inc
mov
fwait
or
inc
mov
rcr
jnp
call
enter
pop
daa
dec
clc
push
fstpt
enter
scas
sbb
negl
or
sbb
les
imul
mov
mov
lret
and
arpl
lods
sti
je
jns
mov
jl
push
pusha
or
insb
in
test
notl
loopw
test
or
sbb
mov
lock
imul
push
fldl
sbb
std
nop
or
popa
int3
icebp
push
xchg
cli
or
dec
pop
js
and
pop
or
and
xchg
cmp
lods
out
sbb
push
pop
ljmp
mov
cmpsl
roll
inc
ljmp
movsl
mov
or
ss
mov
jmp
lea
sbb
ljmp
jmp
lret
negl
int3
fisubrs
popa
jns
ficoml
push
enter
mov
loop
xor
mov
jmp
imul
adc
adc
add
inc
sbb
lods
rcll
dec
or
adc
in
lods
push
shrb
hlt
jnp
push
mov
lret
lahf
or
pop
xlat
and
or
lret
cmpsl
cwtl
pop
std
lret
cli
fnstenv
int
lods
mov
jns
pop
dec
icebp
push
gs
mov
mov
fcomp
or
scas
pushf
mov
lea
movsl
repz
out
pop
lret
mov
mov
pusha
pop
or
jmp
out
push
data16
or
add
popl
aaa
shlb
push
lret
inc
jmp
test
mov
and
sbb
lds
ljmp
popa
xchg
cmp
fidivl
loopne
in
or
fcomps
inc
pop
nop
rolb
pop
jge
or
pop
dec
mov
jbe
sbb
inc
push
sbb
lds
mov
ljmp
pop
or
mov
push
or
mov
ja
dec
xchg
dec
and
jge
stos
pushl
mov
lahf
das
rcrl
jbe
inc
or
adc
jb
adc
or
loope
inc
sbb
mov
and
xor
or
mov
nop
lea
pop
andb
sbb
insb
xor
xchg
loopne
mov
out
int
lret
push
insb
or
pop
mulb
cmp
adc
jecxz
mov
fwait
or
cmc
les
lret
lea
cmpsb
push
and
or
outsl
iret
testl
sub
sub
jae
ljmp
and
xor
out
sub
pusha
push
sahf
sub
cld
jns
jbe
movsl
mov
mov
inc
or
xorb
daa
mov
ja
mov
outsb
adc
sub
test
int3
frstor
jnp
pop
pop
sbb
xchg
pop
or
cmp
add
pop
cmpsb
or
xor
ret
or
je
daa
adc
mov
es
out
mov
or
mov
xchg
or
jg
or
adc
in
fists
inc
movsb
adc
or
not
mov
or
mov
sbb
sub
and
add
sbb
pop
sub
lock
je
xchg
adc
add
jne
inc
int
and
sbb
test
xchg
add
or
fsubrl
shl
in
or
xchg
mov
or
mov
mov
and
in
or
cmp
xchg
inc
mov
out
mov
mov
hlt
out
mov
push
andb
ja
jnp
or
and
rorl
pop
int
arpl
mov
or
sbb
or
test
aad
xor
lret
mov
jge
adc
sbbl
adc
pop
jb
es
test
add
dec
and
cmp
nop
stos
jle
loope
pop
and
push
int
and
insb
cmp
push
jge
mov
xor
push
stc
mov
insl
loopne
orb
push
ret
js
or
sahf
enter
addr16
inc
cmp
idivb
lret
sub
nop
test
pop
ja
out
loope
xor
pop
sti
push
cld
les
xor
mov
inc
ss
push
dec
movsb
or
push
jbe
repnz
cld
or
ret
mov
inc
mov
mov
push
push
mov
fdivp
stc
jle
lods
mov
dec
dec
lcall
and
imul
arpl
cli
cmp
insb
out
mov
sar
sbb
mov
test
test
das
scas
in
sahf
push
pusha
mov
shll
mov
lock
adc
pop
xor
imul
mov
or
or
ss
cmpsl
sti
fs
cli
or
in
repz
outsl
and
add
insb
fiadds
xor
in
jp
subb
or
jecxz
push
fwait
jmp
push
pop
clc
xchg
jb
push
test
sbb
scas
sbb
inc
fmull
sub
or
add
inc
pop
fcomip
add
jb
repnz
popa
jo
pop
adc
nop
mov
mov
dec
fpatan
or
push
fnstsw
mov
outsb
cmp
inc
aaa
add
cmp
cmpsl
leave
clc
or
jae
mov
lret
hlt
and
outsl
es
fs
push
mov
sbb
mov
push
pop
cmpb
cmp
or
add
mov
xchg
xor
inc
fs
add
movsb
xor
push
push
pop
inc
ljmp
es
sub
xchg
add
cmp
xlat
subb
and
cmp
push
adc
sbb
inc
and
xor
fstpl
idiv
push
pop
sbb
fld
dec
bound
sbb
push
xor
or
mov
daa
or
jmp
sti
xor
out
or
pop
lods
push
sbb
jp
push
int
repnz
ja
or
pushf
pop
out
mov
push
mov
dec
mov
push
push
and
enter
repnz
rol
dec
xchg
es
mov
and
adcb
iret
sbb
popa
jns
outsl
cmc
movsb
xchg
or
shr
fildl
and
mov
xchg
lahf
nop
or
jmp
xchg
mov
jns
ljmp
leave
cmp
or
ds
lea
jmp
inc
mov
and
sti
jge
jle
scas
mov
arpl
mov
sbb
or
cmp
pop
cld
fs
enter
and
stos
movsl
mov
adc
cmp
push
insb
inc
aas
andl
mov
fsubs
cmpsb
in
jae
enter
jae
push
inc
dec
mov
aad
xchg
xchg
cmc
out
mov
enter
mov
out
stos
fidivl
test
adc
pop
imul
out
push
hlt
sbb
inc
pop
shl
pop
or
adc
pop
imul
mov
pop
mov
jmp
jbe
dec
popa
das
ficompl
push
inc
inc
dec
stos
outsl
mov
mov
andl
push
push
mov
mov
mov
fwait
mov
push
pop
stc
cli
mov
push
push
or
push
add
push
cmc
sub
push
outsb
addb
and
xor
aas
stos
lcall
mov
pop
scas
add
dec
repz
mov
adc
filds
les
jae
scas
ljmp
jb
pop
scas
or
inc
mov
jl
adc
scas
dec
or
cmc
sbb
mov
jnp
inc
ja
cmpl
jg
das
out
fmuls
jp
inc
cmc
cmp
aas
das
xlat
jns
cs
out
scas
or
jge
inc
fwait
lret
sahf
cwtl
and
xchg
mov
or
add
jno
xchg
xchg
pop
jnp
pop
out
ja
fldcw
and
xor
ret
outsl
imul
ss
sbb
adc
ja
popa
addr16
addr16
call
sbb
and
jne
lret
shlb
loope
mov
scas
cld
sbb
sub
lcall
or
xor
call
xchg
notl
popf
stc
test
xchg
div
xor
sub
enter
push
jno
inc
dec
sbb
add
push
sub
jne
mov
icebp
test
jnp
mov
clc
mov
pop
sub
xchg
decl
push
jae
cmpsl
add
hlt
jl
pop
pop
mov
mov
mov
cld
cmp
mov
sub
or
mov
mov
sbb
jp
pop
adc
pop
adc
inc
adc
sub
xchg
xchg
in
adc
add
sub
jns
in
mov
clc
jbe
sub
je
loop
or
mov
cmpsl
out
rcr
ret
pop
daa
std
pop
push
mov
or
aad
or
and
cmp
xor
push
push
cltd
dec
jae
stos
in
add
popa
cmp
adc
in
rcrl
inc
sbb
xchg
stos
rclb
sub
inc
xlat
jo
xor
mov
inc
movsl
jns
addr16
popf
jmp
jmp
imul
add
or
add
xchg
dec
adc
sbb
cli
loope
xor
int3
imul
imul
fldl
add
mov
sbb
cmp
lea
and
call
adc
pop
fldt
imul
push
fidivs
lock
bound
insb
push
mov
daa
iret
aad
out
xchg
sbb
cmp
adc
pop
adc
inc
mov
jnp
out
arpl
pop
test
sbb
bound
scas
scas
pop
push
push
dec
push
inc
xchg
das
loope
int3
cmp
mov
jns
cmpl
xor
popf
xlat
test
adc
pop
mov
mov
fs
je
jne
andl
loope
sbb
es
cmpsl
shl
xchg
jne
sub
or
push
push
sbb
pop
in
adc
shll
mov
imul
xor
adc
inc
lods
pop
sahf
scas
and
dec
sahf
push
sub
xor
iret
hlt
lret
sub
cmc
dec
aaa
stos
inc
inc
addr16
jns
push
inc
js
sub
pop
lcall
lret
imul
dec
jno,pt
push
sub
repz
pop
dec
push
outsl
dec
inc
repz
and
lret
fistps
scas
or
xchg
addb
iret
dec
jnp
ljmp
out
mov
sbb
mov
insb
push
xchg
sti
enter
inc
push
cmp
sti
addr16
scas
clc
sbb
sbb
das
lea
aas
and
cmp
jne,pt
loop
sub
loopne
xor
adcb
cmc
inc
arpl
push
mov
les
out
adc
cmc
pop
push
loop
stc
or
dec
push
mov
mov
sbb
add
inc
pop
mov
sarb
inc
xor
aas
subl
lock
inc
pushl
lret
lahf
mov
dec
mov
xor
cmc
mov
imul
sub
gs
mov
and
sub
icebp
arpl
xor
aad
sahf
sub
mov
mov
jo
mov
sub
pusha
mov
pop
sbb
imul
sub
adc
lcall
mov
mov
or
lods
mov
jl
mov
adc
xlat
sbb
ficompl
out
cmp
dec
call
push
inc
stc
pop
outsl
subb
stos
sar
hlt
xor
dec
mov
adc
jecxz
sbb
in
push
out
es
cmp
mov
push
stos
jbe
inc
dec
into
aad
lods
cmp
mov
filds
adc
pop
andl
daa
aas
test
insl
xor
pusha
mov
lods
mov
arpl
bound
pop
cmpsb
imul
adc
or
push
push
and
push
jns
adc
sbb
add
dec
lods
add
test
mov
scas
in
mov
or
mov
insb
sub
inc
arpl
int3
mov
fldl
sti
divl
mov
out
orl
jns
insl
stos
daa
loopne
repz
cwtl
movsb
and
out
push
les
cld
scas
add
mov
cmp
pop
cltd
pop
mov
and
stc
cmp
sbb
inc
stos
inc
xlat
jecxz
ss
mov
sbb
out
pop
mov
test
sbb
sti
xchg
clc
pop
or
hlt
cmp
or
loope
xchg
adc
pop
dec
dec
ret
dec
mov
dec
cmp
dec
fildll
mov
mov
lods
pop
sbbl
ficomps
mov
mov
cli
pop
and
andb
sbb
pop
sub
or
lahf
pop
ret
leave
sbb
shll
jmp
popf
bound
xchg
mov
rolb
fs
add
cmc
sub
frstor
jnp
mov
adc
cmp
scas
sub
loope
test
fs
test
imul
cwtl
xchg
cmp
ficomps
sub
push
arpl
fwait
sbb
xchg
lret
pushf
pop
leave
ds
add
xchg
fdivs
int3
stos
int3
fiaddl
scas
mov
movsl
and
pop
push
sbb
scas
dec
rcll
lcall
cmp
mov
sbb
test
aaa
lcall
push
mov
push
ljmp
lea
inc
sbb
pop
leave
or
and
inc
inc
pop
mov
dec
enter
scas
sbb
add
push
pushf
in
rcll
in
and
or
fs
test
jmp
inc
call
std
and
jmp
jmp
inc
dec
inc
sbb
in
std
mov
inc
jbe
sbb
fidivl
mov
and
cmp
sbb
cmp
or
fs
mov
inc
shlb
clc
popa
pusha
dec
stc
dec
rol
repz
xlat
in
inc
repz
notb
cmc
push
imul
inc
stos
push
xchg
pushf
jne
adc
cmp
pop
pop
data16
outsb
scas
popa
push
test
lcall
adc
fdiv
lahf
adc
inc
cli
testb
jae
fwait
sbb
adc
mov
les
enter
sub
inc
fisubrs
push
daa
mov
lods
cltd
push
pop
push
inc
jge
pop
popa
mov
adc
inc
xchg
mov
cmp
rclb
mov
jns
mov
push
lods
xchg
cwtl
imul
out
lea
sub
fsts
inc
stc
pop
xchg
sbbl
fwait
pop
cmp
mov
inc
es
xchg
inc
push
scas
test
mov
sub
in
sub
hlt
mov
out
movsb
insl
icebp
cmpsb
data16
xchg
cmc
shll
rclb
xor
loop
aad
and
mov
dec
xchg
test
orl
shll
imul
imul
ljmp
mov
hlt
inc
xchg
and
cmp
lcall
dec
push
push
ljmp
adc
push
jnp
popf
pop
mov
xchg
mov
mov
es
lret
pop
xchg
daa
addl
xchg
stc
dec
lret
push
sub
xchg
outsb
fsubrl
sbb
or
in
mov
cmp
inc
xchg
pop
iret
jb
mov
mov
mov
ljmp
xor
push
xchg
mov
fwait
mov
daa
jge
mov
push
ret
cwtl
imul
rcr
pop
push
out
or
push
ret
andl
outsb
mov
mov
test
leave
aas
loop
add
lahf
dec
push
ret
lcall
fsub
mov
popa
pop
mov
push
add
or
xor
in
pop
xor
scas
push
pop
xchg
scas
shrb
add
add
xor
stos
mov
rol
addr16
push
sbb
mov
push
aas
sub
dec
stc
fcompl
push
cli
fwait
mov
shl
mov
sub
call
pop
mov
lret
addb
orl
adc
pop
lcall
test
pop
les
mov
mov
outsl
push
cmp
jnp
lret
addr16
cmp
movsb
in
or
push
out
popf
andb
iret
arpl
mov
inc
out
xchg
mov
inc
inc
xchg
push
inc
jmp
mov
lret
lds
shll
test
mov
and
inc
inc
jb
cld
dec
sbb
pop
xchg
fcoms
imul
mov
ret
flds
sub
add
cmc
ljmp
mov
aaa
cmp
enter
lea
sub
dec
mov
bound
pminsw
pop
pop
icebp
mov
je
cmp
pop
xor
xor
adc
lods
pushf
or
pop
or
mov
cltd
or
and
mov
popf
add
cmp
mov
rcll
mov
adc
mov
cmpsb
in
sbb
into
or
lcall
jno
bound
and
rcl
sbb
int3
lahf
lea
xor
mov
push
and
inc
xchg
jl
mov
xchg
daa
or
push
push
call
inc
clc
or
and
lret
pop
test
mov
add
dec
addr16
sbb
lahf
int3
pop
mov
xchg
xor
int
je
addr16
inc
sub
add
ds
iret
push
mov
scas
sbb
push
xchg
cmpsb
imul
inc
mov
sub
mov
popf
enter
or
pop
jg
int3
cmp
add
ds
sbb
xchg
jne
shl
fdivp
or
hlt
and
daa
clc
xor
andb
mov
and
add
call
or
rolb
and
lsl
or
roll
movsb
dec
and
push
inc
and
stos
div
mov
fmuls
or
mov
xor
fisttpl
sub
xor
mov
pop
sahf
cmc
mov
int3
mov
push
das
popa
xchg
incl
test
std
adc
out
and
fxch
lcall
adc
das
mov
pushf
mov
jae
out
xchg
aam
add
jg
enter
dec
ficomps
jnp
adc
sub
call
sti
in
adc
orl
sub
mov
xchg
add
enter
sarb
mov
stc
sbb
fwait
les
lahf
aam
adc
add
mov
sbb
lds
xor
loopne
push
in
cwtl
daa
push
sbb
xchg
jb
ss
sub
pop
out
fucomip
repz
push
mov
dec
inc
jns
sbb
cmc
pop
stos
cmpsl
js
add
and
nop
icebp
and
pop
out
scas
sbb
push
into
dec
fnstsw
out
adc
sbb
in
pop
xchg
add
mov
xchg
pop
push
sbb
pop
lea
mov
je
maxps
insb
mov
adc
pop
les
cmc
and
or
jno
mov
mov
rcl
mov
es
xchg
test
xchg
enter
fs
fcomp
push
or
fadds
lret
cltd
xor
push
iret
sub
xchg
push
mov
aad
ss
jae
pop
mov
fmul
adc
dec
rolb
xor
mov
in
mov
sbb
jne
push
ja
sbb
sar
add
xchg
xsaveopt
cmpsb
cmp
pop
mov
enter
mov
and
mov
jae
cmpsb
in
adc
jne
mov
outsl
test
mov
rorb
cmp
loopne
lcall
pop
push
cmp
inc
xor
cmp
das
mov
sub
cmp
xor
stc
ficoms
cmc
pop
scas
xor
push
out
cmc
out
push
rorb
and
ljmp
xor
xchg
fwait
sbb
inc
outsb
mov
ficomps
hlt
imul
scas
pusha
shl
ds
adc
push
pop
mov
mov
imul
aad
sbbl
sub
xlat
stos
sub
pop
push
adc
jae
cmp
fs
lcall
pusha
lret
cmp
aad
stos
xor
shrl
add
cld
inc
push
cmpsl
test
mov
pusha
mov
loope
dec
or
test
lret
dec
push
je
push
dec
hlt
push
fmull
inc
sub
xchg
and
mov
cwtl
lahf
jl
lcall
mov
mov
mov
lcall
shll
mov
xchg
or
pop
sti
out
popf
aas
pop
les
cltd
cmp
lea
in
int3
pop
leave
das
popf
loop
mov
pop
adc
or
addr16
jg
adc
jle
xor
xchg
jmp
daa
push
lds
mov
sub
xchg
andl
sub
loope
clc
and
pop
scas
xchg
jno
cwtl
cmc
dec
push
dec
stos
lcall
rcll
sub
jl
cmp
mov
sbb
loope
test
dec
or
add
gs
inc
mov
or
xchg
jge
mov
mov
adc
or
repz
push
sbb
mov
xchg
adc
ds
xor
and
xchg
shrb
or
dec
xchg
xchg
add
mov
adc
fdivr
imul
clc
imul
imul
push
loopne
sbb
dec
cmpxchg
int3
cli
sarb
imul
and
jp
sbb
ljmp
leave
lret
push
imul
mov
and
pop
push
inc
dec
sbb
iret
adc
lahf
pop
cmp
nop
or
add
inc
push
sub
mov
dec
insb
jns
xchg
dec
or
and
jnp
or
or
loope
sbb
push
cmp
testl
lret
std
sub
dec
fnstsw
or
or
repz
in
dec
or
push
les
dec
stc
stos
pxor
cmpsb
ljmp
popf
push
bound
mov
xlat
icebp
cltd
roll
sbb
cmp
and
sar
out
push
fwait
mov
dec
mov
or
lds
lods
mov
push
or
adc
inc
jno
dec
fldcw
sub
adc
mov
jmp
xor
push
mov
mov
test
sub
or
hlt
sbb
inc
and
push
or
push
pop
pushf
mov
aad
movsb
sub
mov
xor
adc
push
insl
pop
mov
sub
inc
lcall
pop
lret
mov
bound
sub
out
test
icebp
cli
mov
dec
and
mov
in
jnp
shrl
adc
cmp
insl
pop
mov
cmp
clc
cmc
shrl
xchg
mov
test
add
scas
lret
test
fiaddl
mov
mov
xor
and
mov
sub
aad
sub
sbb
nop
cmpsb
pop
xchg
loope
pop
call
push
mov
int
cmp
cli
pop
push
cmp
or
push
inc
jmp
jb
adc
push
ljmp
hlt
cs
adc
and
mov
sub
cmc
je
aad
sbb
jl
sub
sti
inc
and
xchg
jnp
xchg
insb
add
pop
mov
cmp
loop
cmp
stc
push
outsl
hlt
rcl
lds
jmp
lock
call
and
and
sub
movsb
xor
push
stc
dec
or
ficoml
mov
hlt
mov
inc
enter
inc
push
je
outsb
cmpsb
hlt
jae
push
nop
lds
popw
and
sub
ss
sbb
jo
daa
push
call
mov
cli
xchg
xor
mov
hlt
sub
mov
test
cltd
clc
popa
mov
add
dec
sub
xchg
sarl
mov
jbe
outsl
mov
inc
les
ds
cli
add
jo
inc
in
mov
cs
andl
fcomps
stc
popf
sub
ljmp
push
leave
addb
mov
mov
popa
mov
adc
mov
std
xor
mov
rclb
loop
xchg
mov
add
cmp
ret
mov
imul
iret
pop
xchg
dec
roll
adc
shll
mov
add
sbb
xchg
int
int3
repnz
mov
repnz
or
test
mov
mov
sbb
push
ljmp
int3
jae
gs
mov
mov
movsl
pop
sbbl
pushf
pop
mov
bound
inc
popl
mov
sbb
repz
test
lret
mov
sbb
mov
cmc
lea
dec
les
rclb
sub
cmp
sub
inc
cli
shr
inc
or
call
jns
insb
xor
adc
cmp
push
ret
inc
jo
mov
outsb
jne
push
mov
xchg
xor
mov
fs
mov
pop
inc
mov
je
loope
decb
sub
adc
push
add
arpl
cmp
mov
pop
sub
les
dec
mov
aas
les
ljmp
clc
and
std
cmp
cmp
inc
repnz
mov
jno
mov
xor
xchg
outsl
xchg
adc
inc
sbb
lcall
push
ffreep
in
mov
cmp
push
mov
push
andl
imul
stos
shrb
dec
inc
aas
testl
incl
jl
jmp
push
lds
in
aaa
cmp
and
jae
mov
sbb
xor
cmp
lds
push
mov
jne
pop
ds
push
push
lods
stc
dec
inc
add
addr16
xchg
push
push
ret
xor
pop
sub
pop
jle
push
pop
mov
mov
or
insb
es
addb
and
shlb
cmp
pop
out
sub
jmp
xchg
and
mov
adc
dec
daa
adc
xchg
aas
call
push
outsl
xchg
fsts
mov
test
sarb
int3
repz
xor
xor
xor
popf
cmc
jge
es
inc
sub
inc
mov
pop
sarb
push
xchg
pop
cli
jp
stos
imul
cmc
xchg
lock
adc
cmp
inc
scas
xor
addr16
out
pop
cmp
push
or
jns
daa
scas
pop
add
push
inc
imul
sbb
daa
rcl
mov
sahf
loopne
sbb
dec
push
add
xchg
mov
outsb
sbb
aad
jmp
inc
pop
and
out
jecxz
push
sahf
in
jl
inc
and
daa
sbb
nop
mov
test
adc
mov
jae
aam
cli
mov
inc
dec
push
cld
mov
hlt
add
call
adc
popf
add
or
mov
mov
out
push
ja
xor
bound
sub
cmc
cmp
xor
lret
and
ljmp
xchg
movsb
pop
cmp
inc
sahf
jns
imul
and
imul
xor
scas
xchg
cmpsb
inc
jnp
mov
js
hlt
scas
mov
enter
or
and
out
int3
or
rcl
xchg
std
mov
inc
pop
lcall
xchg
jmp
dec
pop
or
les
in
lret
add
lds
sub
cmc
sub
mov
dec
xchg
mov
loope
push
mov
mov
mov
and
aas
aas
scas
or
sub
push
pop
xor
mov
inc
fsts
pop
lcall
pusha
xchg
dec
and
addl
stos
daa
arpl
inc
stos
lcall
inc
out
sbb
push
imul
inc
loopne
pop
movl
shrl
pushf
test
mov
push
mov
into
mov
jecxz
and
stos
lahf
cmc
ss
sbb
stos
push
xchg
in
stos
mov
mov
adc
dec
insb
faddp
xchg
and
inc
xor
mov
leave
mov
xchg
lret
cmp
dec
fidivrs
into
sti
rcrl
xor
hlt
pop
sbb
in
repz
jmp
insb
shll
xor
mov
dec
int
ss
sbb
inc
lea
xor
nop
cmc
push
sub
stc
mov
adc
shrb
sub
or
mov
ja
lock
jl
dec
je
or
mov
and
imul
cmp
xchg
add
sub
and
pop
rclb
daa
ljmp
pop
das
icebp
and
ss
popf
mov
jl
adc
loopne
sbb
ss
decl
xlat
mov
cli
daa
scas
aas
lock
dec
lcall
pop
popf
stc
adc
lcall
cmpsb
out
dec
inc
hlt
gs
and
in
pushf
xor
je
loop
mov
aad
jae
nop
xchg
mov
cld
mov
bound
dec
pop
sub
jp
loopne
adc
sbb
xorb
mov
add
and
or
out
loope
xchg
into
out
fsubs
pop
push
ljmp
mov
cmp
mov
popa
sbb
sub
add
scas
mov
cmp
inc
adc
push
rol
sahf
mov
or
cmpsl
packsswb
add
and
add
movsb
cmp
pop
add
dec
sub
aas
adc
push
int3
aad
sbb
shll
adc
push
dec
inc
sbbl
stos
jnp
cmp
testl
outsl
cmp
jo
insb
inc
sub
call
fisttps
daa
bswap
pop
xchg
adc
push
mov
lea
inc
pop
icebp
mov
mov
pushf
sti
and
pusha
stc
xor
sub
ja
fsubrs
xchg
cmp
xor
jmp
jnp
mov
or
popa
xchg
cli
jp
dec
and
call
pop
sbb
aam
fdiv
mov
enter
xor
or
mov
sub
xchg
in
xchg
and
cmp
push
inc
out
inc
arpl
mov
mov
dec
sbb
mov
scas
adc
subl
mov
and
call
pop
push
ss
xchg
jnp
adc
mov
pop
lds
pushf
xor
aad
push
xchg
jmp
sbb
adc
cmp
cmp
mulb
gs
cmp
icebp
and
dec
pop
inc
roll
push
pop
sbb
out
repz
inc
test
rclb
cld
lods
dec
rcl
xchg
push
sbbl
insb
es
xchg
cmp
into
je
out
clc
fdivl
cmp
adc
sub
mov
hlt
ljmp
pop
and
test
mov
loope
cli
daa
xlat
dec
imul
and
aad
inc
loop
sub
ja
mov
or
sbb
sub
scas
inc
xor
xchg
lds
stc
inc
adc
adcl
mov
mov
test
movsb
dec
addr16
sub
popl
or
scas
cmp
das
test
das
xchg
leave
cmp
adc
inc
outsb
pop
hlt
addr16
roll
sbb
ja
sbb
xchg
push
mov
lret
adc
jge
in
out
sbb
daa
push
adc
repz
and
xlat
or
xor
outsl
pop
scas
and
pop
sbb
jg
jecxz
cmp
inc
mov
pop
adc
imul
and
lock
jp
cmp
inc
xchg
pop
daa
or
mov
jmp
dec
xchg
int
mov
adc
mov
sbb
pop
push
ret
fmul
fdivrl
mov
hlt
dec
jp
cmp
add
ss
movsb
inc
jns
jb
xor
movsb
insb
inc
scas
mov
inc
ja
jl
dec
and
cmp
ret
dec
or
pushf
jmp
dec
pop
cmc
into
sar
cli
sti
daa
pop
aam
ficoms
ret
cmp
mov
cmpsb
mov
add
cmpsl
mov
push
pop
rcrb
mov
daa
inc
jns
jnp
add
push
xchg
test
pop
sub
mov
jmp
inc
sub
xchg
sti
add
dec
push
pop
daa
adc
les
mov
js
mov
sub
adc
mov
sarb
dec
sbb
adc
adc
clc
adc
or
stc
push
add
inc
out
insb
lods
sub
mov
je
dec
pop
imul
test
ljmp
push
sbb
leave
sbb
test
mov
movsl
ret
movsb
and
xlat
popa
pop
addr16
cmc
fldenv
mov
out
es
inc
ficomps
lea
mov
push
mov
hlt
out
sub
test
xchg
xchg
inc
inc
sbb
cwtl
or
pop
dec
je
cli
andl
jge
inc
jne
daa
into
sti
dec
dec
pop
loop
ja
inc
push
xchg
xchg
and
or
aas
rorl
inc
mov
mov
xchg
xor
push
cmp
mov
jmp
pop
push
popf
lahf
pop
std
fldenv
sbb
mov
or
gs
sub
push
punpckhbw
pop
mov
out
pop
cmp
jne
mov
push
in
rep
ja
fwait
pusha
imul
popa
jne
fs
loopne
aad
repz
push
inc
fnstcw
add
dec
rorl
icebp
add
push
lcall
test
or
jbe
mov
jmp
push
and
sbb
push
and
scas
cmc
pop
ret
lds
jae
sub
or
and
cmova
fnsave
pushf
setp
mov
sub
and
cmpl
and
mov
inc
jp
sahf
mov
or
xorl
push
inc
filds
push
mov
push
je
cmpsb
cmp
in
adc
fwait
or
cmpsb
sub
ljmp
sbb
or
and
jl
cs
or
push
movsb
xor
jae
pop
scas
jecxz
jns
jp
push
movsl
lret
sub
fidivrs
mov
ret
in
shll
sbb
stos
mulb
popf
mov
or
fcompl
fmulp
orb
add
fwait
pusha
mov
or
jb
int3
or
aaa
rorl
and
xor
or
jmp
popa
push
stos
cmp
sub
xchg
aaa
and
mov
xchg
xor
or
pop
mov
fcoms
mov
insb
shl
cs
mov
outsb
into
sbb
mov
adc
xor
or
lret
or
add
test
icebp
add
mov
cltd
mov
cmp
pusha
cltd
out
and
out
xchg
mov
decb
inc
cli
or
movsl
xchg
inc
sbb
and
or
mov
add
dec
sbb
mov
ja
test
lret
push
cmp
dec
push
std
shrb
adc
rorb
xor
mov
loop
prefetch
push
fstpl
xor
jg
sbb
or
mov
mov
cmpsb
pushf
jge
es
mov
mov
push
xorl
or
cmpsb
xor
mov
hlt
mov
rorl
inc
add
in
xor
cs
pusha
cmp
mov
test
dec
shll
in
cmp
mov
mov
sarl
fwait
repz
inc
in
jae
sbb
sub
sbb
push
pop
jg
xor
jmp
mov
notl
aas
clc
dec
xchg
mov
sub
xchg
jae
mov
repnz
inc
inc
pop
adc
roll
fists
notb
subl
shlb
jge
aad
dec
rol
sbb
sub
lods
sbb
stos
push
daa
cmp
scas
test
icebp
test
mov
stos
lds
popa
jb
jmp
daa
imul
insb
mov
in
mov
sbb
cli
adc
shll
fstp
jmp
xchg
or
enter
fsubrs
jecxz
lret
inc
mov
or
daa
mov
mov
je
movsb
push
jo
cltd
push
adc
sub
or
pop
mov
bound
xor
jl
cmp
daa
inc
xchg
test
adc
pushf
jmp
xchg
fsubrl
pop
push
stos
or
fidivs
and
loope
lds
xor
hlt
es
daa
lcall
faddl
sbb
mov
mov
cmp
adc
pop
pop
lods
adc
incl
sbbl
xchg
push
mov
adc
daa
test
test
sub
add
loopne
and
push
dec
inc
push
lret
pop
sub
fldenv
add
pop
movsl
test
push
movb
nop
out
aam
cmpsl
and
dec
popa
popf
aam
mov
std
pusha
add
sbb
ljmp
sbb
outsl
and
xor
cmp
push
insb
inc
test
and
roll
fnstcw
cmpsb
sti
xchg
pop
loopne
xchg
cmc
test
mov
push
pop
gs
scas
ja
push
bound
add
out
loope
push
out
push
add
rcl
fs
repnz
gs
out
daa
inc
sbb
test
xlat
lea
mov
bound
push
inc
cmp
fs
in
idivb
iret
sub
int3
xchg
jle
les
adc
je
push
lea
xchg
push
into
out
push
in
sub
std
mov
inc
cld
mov
cs
out
ret
repz
push
inc
mov
fisubs
cmpsl
fsubs
imul
dec
push
pop
cs
loope
mov
dec
xchg
push
pop
std
call
mov
insb
adc
sub
xchg
pop
imul
inc
dec
insb
xchg
push
out
mov
repz
xchg
test
scas
pop
cltd
xchg
cmp
aad
sub
mov
push
out
mov
push
pop
mov
mov
nop
adcb
push
pop
add
inc
xor
fwait
sbb
pop
stos
les
negb
fs
dec
roll
lods
xor
cli
test
cld
xchg
jmp
pop
addb
sbbl
add
or
adc
sub
cmpsl
inc
int3
imul
jb
xor
add
imul
cmp
jmp
mov
icebp
pop
scas
jo
rorl
outsl
sbb
aaa
push
or
cld
and
inc
movsl
push
inc
shl
insb
or
push
rorl
dec
mov
mov
pop
or
push
push
pop
cmpsl
arpl
fcoml
cmp
sbb
and
testb
shr
lea
int3
daa
clc
mov
xor
aas
cmp
sbb
dec
sub
mov
stc
enter
mov
jae
jmp
sbb
mov
sub
mov
int3
dec
inc
sbb
stos
push
cmp
push
bound
inc
cmp
push
and
mov
jae
inc
push
push
mov
inc
lcall
out
push
mov
repnz
out
arpl
xchg
int
mov
dec
dec
sub
loopne
mov
push
shl
nop
outsb
test
cli
es
popa
in
add
movsb
and
nop
sub
inc
push
xchg
xor
insl
int
mov
rorl
fwait
inc
imul
pusha
jmp
adc
mov
mov
icebp
cmc
mov
and
sbb
mov
and
leave
jns
sbb
cmp
or
pop
push
aam
jae
cmp
sub
mov
xor
pop
mov
movsb
and
stc
push
rorl
scas
mov
push
pusha
fs
in
popf
orl
xor
jecxz
sbb
push
call
outsb
cmp
inc
sbb
jecxz
lret
inc
pop
in
sbb
mov
mov
ret
push
rcr
xchg
dec
outsb
loopne
leave
push
xchg
jg
jns
adc
insl
push
push
inc
ret
iret
inc
push
sahf
push
xchg
daa
js
mov
imul
xor
inc
lret
jbe
ss
push
scas
mov
and
fnstenv
test
mov
aam
std
call
test
push
inc
push
add
stos
movsl
dec
clc
xchg
outsb
int3
jp
lcall
mov
shlb
adc
sbb
cld
jmp
xchg
cwtl
adc
jnp
imul
mov
mov
sbb
fadd
iret
aas
test
repz
dec
pop
sub
icebp
push
xchg
xchg
ret
pop
repz
imul
and
dec
cmp
call
daa
scas
fdivrp
jl
pop
mov
dec
scas
adc
in
and
pop
sbb
imulb
ja
dec
sub
adc
lds
inc
lods
mov
push
lods
sbb
mov
dec
inc
popa
sub
dec
or
icebp
xorl
cmp
dec
sahf
inc
mov
pop
xchg
cmpsl
xor
test
cmpsb
dec
inc
daa
push
mov
and
push
xorb
fdivr
cmp
or
scas
movsb
jne
xorl
cmp
push
mov
daa
call
push
imul
fadd
pop
inc
cmp
sub
ljmp
adc
lcall
push
pop
xchg
rclb
fs
loopne
mov
fucomip
mov
test
add
dec
dec
mov
or
orb
push
mov
daa
push
xlat
dec
mov
push
mov
int3
out
and
dec
jns
mov
add
test
dec
fs
call
mov
sub
push
and
dec
xchg
enter
jl
mov
or
and
sub
jmp
std
ds
and
imul
mov
mov
adc
lret
jecxz
cmp
clc
xchg
les
pop
scas
imul
pushf
daa
sbb
adc
xor
mov
popa
lds
cs
add
and
adc
fstpl
add
std
sbb
jg
sti
push
push
hlt
mov
in
mov
mov
es
mov
out
mov
adc
divl
cltd
push
repnz
xchg
imul
xor
inc
or
pop
cli
xchg
daa
aad
sub
adc
adc
pop
hlt
rcrb
sbb
inc
stc
pop
mov
pop
hlt
xchg
popf
repnz
xlat
jae
inc
and
subb
mov
jae
out
adc
lret
fisubrs
inc
mov
inc
pop
xchg
add
sahf
scas
cmp
fsubrp
and
push
daa
or
fucom
insb
and
in
inc
and
fldcw
adc
sub
jg
sarl
push
xor
ret
cmpb
int3
inc
neg
mov
push
cld
mov
push
push
sub
pop
bound
paddq
pop
mov
out
pop
push
das
adc
ds
jno
pop
ljmp
mov
cmpsl
cmpsb
aad
out
dec
push
aas
ja
or
stc
rcrl
je
dec
push
cmpsb
ljmp
push
cmc
jmp
enter
test
sahf
stos
pop
lcall
sub
xchg
xchg
xor
outsl
mov
adc
inc
inc
clc
push
pop
mov
in
dec
mov
scas
and
daa
mov
mov
jp
int3
ret
mov
ja
mov
jp
jecxz
xchg
loopne
xor
in
pop
dec
les
inc
push
pop
pop
and
es
or
xchg
hlt
xchg
mov
push
test
insl
rol
cmp
jg
out
into
out
insb
ds
sbb
pop
pop
lods
xchg
rorl
nop
inc
sar
pushf
data16
addr16
push
nop
push
and
mov
pushf
gs
jo
movsb
stos
fldl
adc
mov
in
cld
xchg
fistps
pop
mov
pop
push
fs
xor
mov
sub
in
cmpsb
nop
or
push
inc
pop
sbbb
icebp
pop
mov
pushf
sub
add
test
adc
xor
push
adc
ljmp
sbb
or
mov
pusha
adc
sahf
sbb
mov
sbb
clc
cld
dec
call
add
cmp
mov
mov
push
dec
mov
lahf
xchg
pop
inc
fcoml
jbe
pushf
sub
loope
and
add
inc
or
pop
pop
xor
push
int3
daa
nop
xor
and
mov
push
es
push
add
xor
sub
dec
push
shrb
and
notb
xchg
dec
cld
and
cs
or
test
je
cmp
addr16
inc
shlb
jnp
mov
jae
dec
xchg
or
mov
iret
clc
pop
push
orl
jno
std
and
inc
hlt
adc
pop
push
daa
jmp
data16
mov
push
dec
popa
sahf
scas
xchg
add
rolb
ja
jecxz
dec
xor
mov
mov
into
popa
cmp
cmpsb
bound
xchg
test
xchg
cmp
pop
sbb
ret
xchg
enter
lcall
sahf
inc
pop
sbb
int
xchg
lahf
mov
mov
and
mov
push
daa
push
mov
dec
jo
mov
dec
adc
lret
inc
orb
add
cmc
ss
xor
xor
es
out
icebp
ret
pop
mov
rcrb
lret
sub
sbb
popf
push
pop
and
je
dec
sub
daa
add
mov
out
pop
bound
sub
add
popf
dec
mov
scas
add
dec
movsb
sbb
mov
fwait
add
lahf
cmpsl
xchg
sbb
pop
add
mov
pop
mov
daa
rcrl
lea
and
lods
mov
adc
lea
xchg
mov
push
lds
inc
and
adcb
dec
inc
loope
inc
mov
mov
scas
inc
lret
cwtl
or
mov
mov
sbb
mov
out
push
dec
js
clc
inc
push
iret
data16
test
push
add
ret
dec
pop
push
pop
nop
outsl
icebp
or
adc
ss
push
ljmp
mov
daa
scas
cmp
inc
incl
jb
mov
xor
stos
ljmp
mov
addr16
sub
rcrl
outsl
rorl
clc
add
pushf
aaa
movsb
stc
cmpsb
jnp
daa
insb
loopne
xchg
jecxz
add
jo
popf
or
mov
mov
scas
push
pop
cmc
dec
lods
sub
xor
xor
inc
pop
mov
xchg
push
lret
jne
mov
jle
or
or
sbb
sbb
push
sarb
call
push
sbb
xor
add
cmc
mov
jle
sub
dec
aas
jne
cmpl
shlb
sub
imul
adc
int3
adcl
xchg
icebp
aam
out
fs
or
cmp
popf
mov
das
jecxz
dec
icebp
insb
jl
test
or
and
fxch
mov
add
rorb
push
daa
in
jecxz
fiaddl
or
daa
rclb
testl
test
out
sbb
mov
fadds
pop
cwtl
jge
cmp
push
jg
insl
inc
inc
lret
push
pop
stc
sbb
push
push
dec
sbb
jg
push
sti
movsb
jb
clc
lods
cmp
add
int
add
je
jmp
addr16
stc
adc
popl
movsl
lcall
push
jae
inc
and
sub
pop
pop
incl
bound
fs
lret
add
cmp
mov
ret
and
push
dec
mov
dec
fldl
mov
sbb
add
hlt
cld
bound
cmc
in
idivl
rolb
or
loop
repz
stos
adc
push
mov
mov
scas
push
xor
mov
scas
scas
cwtl
push
idivl
flds
cmp
shll
or
xchg
lahf
dec
fisubs
sbb
pop
les
mov
popa
loopne
xchg
xchg
xchg
and
testl
mov
dec
dec
adc
sub
int
mov
jne
adc
test
scas
cmp
adcb
adc
leave
mov
mov
inc
rcrw
scas
popw
fwait
out
inc
mov
pop
data16
cmp
jecxz
repz
les
push
lahf
push
stc
pusha
and
or
mov
into
movsb
ja
mov
in
xor
add
cld
test
mov
lea
daa
ficomps
lods
push
pop
xchg
imul
add
adc
test
sti
scas
and
jnp
sub
add
in
sub
jo
daa
pop
cli
sbbl
sbb
xchg
mov
adc
mov
jb
nop
inc
add
dec
test
pop
daa
rcrb
sbb
mov
popa
push
sbb
iret
xchg
adc
insb
scas
sub
xchg
aaa
pop
dec
xchg
inc
inc
gs
lock
outsb
xor
xor
mov
cmp
inc
mov
pushl
std
adc
aaa
inc
mov
xchg
mov
push
push
jae
jg
push
pushaw
shrl
push
inc
arpl
adc
inc
mov
insb
cmp
xor
push
popa
jle
xor
mov
ljmp
adc
stos
mov
iret
fdivrs
addr16
mov
or
cmp
int
jae
jp
xor
popa
and
test
sahf
dec
cld
sarw
int3
sub
push
dec
idivl
add
imul
mov
dec
jle
lds
pop
add
jg
xorl
push
jno
pop
mov
rclb
cmpsb
and
pop
inc
sub
pop
popf
hlt
xor
sub
push
and
push
aad
xor
and
sub
in
dec
loope
out
xor
sbb
popf
push
shrl
jle
gs
pop
add
fcmove
mov
push
fwait
insl
ljmp
hlt
cmp
call
aam
int3
nop
addr16
rorl
hlt
mov
mov
sbb
mov
insb
negb
jg
shrb
lret
je
jmp
fdivs
test
adc
xor
movsl
add
add
xchg
in
adc
mov
inc
sbb
pop
xchg
mov
adc
loope
inc
loop
and
push
mov
and
sbb
xor
imul
cwtl
lcall
jmp
cld
leave
out
aad
dec
pop
dec
loopne
scas
and
hlt
cmp
push
std
sub
lahf
push
imul
int3
cmc
mov
ljmp
repz
scas
add
cmp
popa
pop
sbb
mov
daa
sbb
jg
pop
fldenv
mov
push
in
nop
daa
cli
pop
hlt
and
in
in
imul
inc
negb
mov
sub
nop
int3
lahf
push
mov
mov
mov
test
adc
lret
push
push
daa
mov
mov
int
mov
mov
mov
arpl
iret
inc
popa
leave
int
imul
adc
pop
shlb
push
out
daa
mov
in
out
fistpll
xor
adc
push
fimuls
outsl
mov
adc
jp
sub
jne
lret
pop
imul
rolb
dec
clc
flds
icebp
or
fisubrs
jbe
jl
sbb
jae
stc
push
sarl
xor
dec
sbb
repz
adc
cs
or
push
pop
mov
hlt
sbb
push
repz
outsb
inc
xchg
arpl
in
data16
jecxz
out
or
jge
jecxz
mov
inc
xor
lcall
mov
sbb
fs
aas
mov
testl
push
sbb
enter
stos
mov
mov
push
or
lahf
in
arpl
fs
lods
adc
pushf
dec
mov
jns
sub
cmp
add
dec
sub
ror
divb
xchg
or
jbe
icebp
lods
daa
nop
xor
mov
lret
jmp
dec
leave
add
pop
mov
inc
fwait
or
jecxz
addw
push
add
rcrb
negl
popf
or
pop
push
cmp
cmp
stos
mov
xor
mov
pop
mov
mov
cmp
cmp
mov
les
xchg
lods
adc
or
xor
stos
je
imul
push
test
mov
or
xor
fucomip
in
enter
fwait
xor
inc
mov
inc
idivl
ret
leave
stos
sub
mov
mov
xchg
pusha
push
xchg
adc
sar
imul
je
pop
or
xchg
outsb
stos
aam
xchg
out
lahf
cmpsb
sbb
movsb
fwait
leave
dec
xor
shlb
mov
dec
push
sub
in
and
lret
dec
pop
cmc
xor
inc
scas
imul
cmp
or
jnp
scas
fmulp
lcall
in
imul
dec
lcall
xchg
lock
inc
aam
xchg
cmpsl
pop
scas
scas
gs
inc
or
push
push
jo
dec
push
ja
out
pop
push
cs
fstpl
fldt
jns
cmp
movsb
lahf
out
popf
aam
jge
rcr
jp
imul
jne
out
call
dec
rorl
arpl
sub
outsb
ljmp
cmp
in
movaps
jmp
mov
cmp
fwait
xor
iret
inc
adc
mov
xchg
sbb
insb
mov
test
cmpl
mov
test
jns
sub
push
test
push
pop
pusha
fstpt
pop
push
mov
int
mov
sti
mov
xlat
dec
sbb
inc
fwait
push
stos
lea
pop
mov
jp
mov
enter
loope
cmc
dec
pop
xor
mov
jecxz
pop
aaa
pop
pop
out
fisubl
jne
push
or
cld
fnstcw
or
or
test
rcll
insb
jbe
gs
or
mov
sub
enter
divl
adc
leave
cmp
mov
sbb
add
sbb
add
cmpl
adc
sbb
cmp
cmp
ret
loop
fnsave
movsb
adc
add
xlat
lds
jae
movsb
das
lret
idivl
imul
push
imul
add
stc
cld
daa
ja
ret
add
jnp
pushl
dec
cli
lcall
adc
cmp
pmuludq
sahf
cmp
in
dec
adc
sbb
lea
inc
and
scas
test
ljmp
adc
inc
sbb
sub
sbb
daa
shrb
adc
imul
ss
sub
dec
lret
movsl
icebp
jae
inc
pop
das
or
adc
movzwl
or
je
push
dec
sbb
cmp
mov
inc
cld
sub
int3
push
inc
cmp
mov
jp
sub
mov
mov
push
fstps
dec
push
and
jae
ja
pop
out
out
add
dec
cmp
addr16
push
fsubs
jae
ja
mov
lret
jle
cmpsl
mov
inc
shl
shll
mov
movsb
push
jb
je
sub
pusha
dec
insb
xchg
popf
loope
test
cmpsb
je
popf
or
cli
jp
test
imull
xor
adc
addb
xchg
cs
in
je
adc
pop
fstpt
scas
or
loopne
cltd
imul
outsl
das
or
cmp
fnstcw
xchg
out
insl
movsb
fisubrs
sbb
mov
mov
sbb
lcall
scas
mov
mov
xchg
in
or
sub
das
cli
movsb
clc
shll
roll
push
add
jg
daa
xchg
rcrb
pop
fidivs
xchg
sbb
and
inc
jmp
inc
jge
push
dec
test
adcb
das
add
aam
pop
inc
cmc
fs
mov
inc
popf
les
cmpb
pop
mov
dec
jb
movsb
cmp
adc
xchg
inc
jl
sub
std
and
imul
cs
push
inc
aad
aas
mov
scas
fcoml
xlat
sub
sbb
stos
insb
gs
mov
mov
pop
sbb
xorl
adc
mov
inc
jne
popa
repz
inc
push
sbb
add
mov
es
push
push
jo
cmp
in
out
dec
dec
adc
scas
push
sbb
push
jmp
in
xor
adc
adc
xchg
sbb
lahf
leave
xchg
iret
imul
lods
repz
fisttps
mov
insl
mov
lock
sbb
popa
scas
insb
dec
dec
dec
and
loopne
repnz
ja
sub
xchg
or
add
cmc
sub
scas
cmpsb
stos
imul
insb
inc
lock
loope
icebp
and
and
inc
mov
daa
nop
mov
adc
push
loopne
pop
rcl
jl
out
test
push
test
daa
dec
jbe
lock
ret
insl
jno
push
cs
inc
mov
roll
dec
jae
xlat
push
mov
sbb
lret
mov
test
jmp
sub
enter
test
sub
fildl
fwait
in
and
mov
sub
lcall
inc
mov
in
sbb
lea
inc
or
cltd
fisubl
jns
or
mov
std
popf
popa
mov
or
pop
or
or
ss
movsb
inc
icebp
or
sbb
mov
pusha
cmp
out
mov
or
xchg
fmuls
adc
inc
and
ret
dec
cs
mov
insb
or
xchg
cmp
pop
xchg
jmp
pushl
stos
inc
outsl
inc
int
fwait
scas
and
je
or
popf
aam
pop
mov
stos
daa
adcl
fcompl
fisubrs
in
daa
sub
or
fwait
aaa
std
repz
cs
add
in
shll
sbb
cmpb
call
mov
aas
mov
das
repnz
mov
jp
cmp
dec
push
pop
cld
sbb
mov
or
pop
adc
dec
mov
lock
jl
daa
fsts
call
popa
adc
pop
pop
pop
push
outsb
dec
dec
sub
scas
fsubrs
cld
lock
sub
stos
mov
pop
daa
mov
and
sbb
mov
pop
xchg
add
pop
dec
mov
inc
je
mov
ret
mov
les
add
test
jno
out
lods
mov
gs
lea
xchg
jb
ljmp
icebp
sub
pop
push
out
dec
sub
push
stc
pop
xchg
fsubs
jne
movb
or
dec
or
cmp
insl
sub
imul
push
test
cmp
mov
lock
daa
movsl
xor
repz
pop
and
or
pop
imul
jb
sbb
push
xchg
daa
inc
into
aam
mov
test
out
xchg
stc
rorl
sbb
stos
pop
cmp
stos
popf
mov
mov
xchg
ret
push
pop
mov
mov
scas
bound
push
mov
add
cmp
push
fadds
pushf
xchg
dec
dec
xor
push
xchg
stc
jecxz
out
adc
push
adc
adc
bound
pop
xchg
pop
xor
hlt
or
clc
mov
push
inc
push
outsl
and
cmpsb
mov
pusha
shrl
inc
loopne
xorl
dec
mov
sbb
daa
sbb
cld
push
sarl
mov
aas
and
fwait
add
les
xlat
icebp
js
das
cltd
inc
clc
pop
push
or
dec
int3
mov
fdivs
xor
or
pop
aam
divl
sub
sub
xor
dec
jns
bound
adcb
mov
in
sub
imul
out
sbb
fwait
mov
mov
push
xchg
roll
push
arpl
xlat
cmp
inc
push
out
mov
fwait
movsb
mov
in
adc
aad
mov
daa
inc
mov
jns
lods
inc
je
adc
pusha
in
dec
psubsb
les
and
out
fcoml
mov
inc
jl
aas
mov
jnp
jl
lahf
sbb
sub
repz
mov
dec
inc
xchg
xchg
lahf
or
jne
xor
adc
inc
mov
lea
ljmp
idiv
push
or
outsl
push
adc
stos
test
sbb
dec
push
mov
aam
or
in
dec
dec
outsb
or
pop
lret
test
stos
mov
jl
mov
ljmp
xchg
add
es
mov
fmuls
sbb
cmp
aaa
std
inc
mov
test
addr16
cmp
add
dec
cmp
insb
xor
insb
in
add
adc
je
out
mov
cmc
xor
jo
xor
daa
add
jl
loope
loopne
jmp
popa
adc
aad
cmp
aad
jne
outsb
xchg
out
pop
xor
dec
or
mov
fcoms
loopne
stos
ljmp
shr
mov
aad
ja
in
subl
insb
or
movsb
push
ret
ss
push
bound
es
sar
adc
jne
xchg
dec
push
lahf
ss
fcompl
or
out
dec
xor
shlb
cld
into
adc
cltd
jne
pop
pop
lret
jl
addr16
cpuid
pusha
aaa
jg
dec
lcall
mov
fnstsw
push
add
mov
sub
pop
and
daa
outsb
frndint
js
jmp
rcr
popa
cwtl
add
clc
lea
scas
mov
xchg
xlat
out
jmp
test
jmp
push
mov
insb
test
imul
repz
outsl
jns
mov
gs
int
mov
xchg
inc
push
mov
mov
mov
mov
xchg
sbbl
cmp
mov
stos
mov
adc
dec
jnp,pn
and
repnz
mov
outsl
adc
push
mov
loop
adc
push
push
inc
sub
shr
enter
icebp
ja,pt
lret
or
repz
daa
adc
fistps
cmp
aam
movsb
and
mov
adc
fsincos
push
pop
xor
jne
ret
movaps
xor
cmc
mov
cmc
mov
leave
xchg
cmp
sbb
ret
adc
jecxz
xor
xchg
std
pop
push
popf
pop
xor
mov
in
out
clc
cmpsb
mov
inc
cmc
jns
and
stos
push
inc
add
xor
lahf
fnstcw
iret
test
mov
push
adc
cmpsl
in
and
cmp
inc
sbb
cmp
add
pop
xchg
rclb
push
test
das
pop
hlt
test
fcmovnu
mov
jl
sbb
mov
sbb
out
xchg
test
xchg
xor
repnz
insb
push
pop
adc
adc
pop
dec
int
je
lahf
jb
into
es
jne
adc
rolb
outsl
stc
addr16
pop
and
dec
in
xchg
ja
xchg
mov
add
icebp
daa
lret
lret
daa
testl
cld
clc
cmp
pop
outsl
mov
call
ds
pop
mov
mov
sbb
imul
and
imul
fcomip
dec
out
inc
mov
nop
add
ja
jge
push
jmp
popa
sbb
mov
aam
jne
jge
sbb
ds
jg
xor
mov
cmp
ljmp
popf
xorb
out
je
icebp
push
mov
xor
adc
sub
cld
out
loop
adc
inc
int3
xchg
xchg
push
test
xor
popa
test
stos
mov
and
jo
jnp
pop
xor
mov
xchg
daa
jno
insb
pusha
rcll
popf
or
loope
dec
int3
daa
adc
out
mov
test
and
inc
into
sub
cmc
push
or
add
cmovbe
xor
pop
mov
or
mov
jg
xorb
aad
xor
fcompl
pop
mov
mov
add
dec
outsl
or
mov
adc
pop
ficoml
jmp
dec
jae
popa
nop
add
push
adc
mov
sbb
lea
movsl
arpl
xchg
dec
loope
adc
mov
ljmp
push
dec
test
jae
mov
cmpsl
mov
fists
push
addr16
add
mov
sub
and
arpl
outsl
addr16
pop
stos
clc
scas
aam
adc
and
loope
push
sti
popa
fucompp
push
sahf
daa
mov
fistl
sbb
pushf
and
daa
sbb
lea
jg
mov
shlb
xor
xchg
adc
sbbl
push
inc
shll
push
xor
sub
adc
mov
or
pop
pop
shl
test
or
mov
mov
pop
outsb
hlt
push
in
xchg
int3
out
mov
int3
pushf
in
stos
sub
sbb
ret
adc
stos
dec
adc
imul
shrl
call
push
sbb
xor
fildl
aaa
lea
aam
fdivs
mov
push
fmul
xchg
in
inc
jecxz
xor
stc
fidivrs
pop
mov
lock
inc
out
shll
xorl
sbb
cmc
jmp
cmpsb
xor
insb
mov
inc
mov
mov
nop
repz
pusha
and
sbb
int3
inc
inc
cmp
cmp
dec
pop
cmc
aam
daa
sub
cmp
cmp
dec
mov
push
adc
data16
sub
pop
sbb
push
inc
call
daa
shlb
loopne
std
jl
mov
jns
pushf
dec
inc
add
mov
scas
bound
adc
sub
and
xor
lods
sbb
das
or
xchg
adc
xchg
in
jno
hlt
mov
and
decl
leave
sbb
paddb
test
jp
cs
push
mov
mov
adc
cmp
adcl
packsswb
nop
adcl
sarl
and
leave
inc
xor
dec
es
mov
lock
sbb
inc
lods
dec
lea
or
sbb
les
lea
adc
inc
jbe
push
fsubl
dec
cmp
test
jbe
xchg
adc
xchg
mov
dec
jns
pop
aas
lock
xor
pushf
mov
out
jb
add
mov
dec
mov
les
and
inc
in
mov
ret
lret
mov
negb
pop
xchg
inc
mov
mov
mov
andl
movsl
push
push
push
test
jl
mov
mov
pop
or
roll
addl
addl
mov
test
sti
mov
jmp
mov
cmp
jns
jno
cld
cltd
jae
add
roll
clc
cmpsb
dec
in
dec
cmp
jnp
xlat
and
loope
pop
cmp
cmp
cmp
adc
lock
call
pop
js
push
inc
lcall
and
adc
daa
cmc
mov
push
push
or
lods
jecxz
sub
mov
mov
insb
rcll
mov
fdivrs
stos
and
arpl
mov
xchg
dec
hlt
bound
loope
das
bound
mov
xlat
lea
icebp
ljmp
xor
pop
imul
adcl
mov
jp
into
aas
mov
fnstenv
pop
dec
out
mov
or
jae
add
sub
scas
add
jne
imul
jne
lcall
mov
bound
int3
inc
sbb
and
mov
sub
inc
popf
movsb
shll
inc
inc
jnp
jge
inc
sbb
xorb
push
loop
jmp
mov
pop
fidivs
das
jle
push
and
dec
jg
mov
xlat
inc
or
int3
push
int3
daa
push
pusha
out
adcl
popa
jge
bound
and
inc
movsl
jmp
pop
hlt
xchg
mov
mov
lret
rcll
fs
outsb
push
mov
jge
and
cmc
inc
pop
in
push
adc
mov
repz
adcl
shlb
cmp
mov
jmp
adc
pop
pop
inc
sub
mov
mov
pushf
mov
mov
push
aas
inc
mov
push
dec
popa
scas
or
data16
mov
sbb
addr16
sbb
movsl
cmp
pop
jecxz
push
or
fwait
pop
cmpsl
sti
insl
mov
mov
fs
jo
mov
inc
inc
and
std
push
pop
xchg
out
xor
mov
sub
call
loope
jge
sbb
mov
cmp
lcall
outsl
jl
lcall
push
jg
pop
adc
mov
hlt
inc
and
cmp
mov
jae
pop
mov
mov
std
push
sub
inc
and
mov
jmp
sti
repnz
xchg
inc
movsb
inc
or
int3
mov
sbb
add
push
fsubl
es
and
mov
or
cmp
fidivrs
into
and
sbb
sub
rcll
movsb
mov
inc
mov
inc
xchg
out
lods
or
ljmp
xlat
mov
movsb
shl
xor
xchg
cmpsb
mov
mov
or
in
lds
push
add
test
cmp
mov
xor
dec
jae
popf
jmp
loop
stos
jl
sarl
pop
xor
sbb
inc
out
and
push
cs
jle
push
xchg
adc
xorb
push
rolb
sbb
sti
push
mov
nop
test
movsb
repz
loopne
out
mov
outsl
mov
inc
imul
jnp
clc
hlt
push
mov
nop
clc
mov
stos
pop
xor
fldl
dec
inc
pop
sbbb
movsb
push
inc
dec
popa
mov
xchg
pop
inc
mov
in
stos
cmp
es
sahf
dec
aas
add
in
mov
hlt
xlat
dec
xchg
pop
popf
ds
fcmovnb
mov
mov
sbb
pop
sti
xor
fcoml
mov
jge
popa
lahf
cmp
pop
xchg
cmp
je
inc
lods
inc
imul
mov
cmpsl
xor
and
call
int3
inc
xor
adcb
xchg
psubsw
lods
or
dec
dec
inc
mov
jecxz
movsb
cmp
out
in
pop
shrl
mov
mov
fs
leave
or
mov
mov
orb
test
hlt
test
outsl
push
sbb
xchg
jae
pop
add
inc
aad
lods
test
adc
xchg
cli
pop
jecxz
aad
stos
loope
rorb
cwtd
stc
ror
sub
sbb
xchg
daa
lock
gs
mov
or
dec
inc
aaa
or
xor
std
ja
add
les
jp
jbe
rolb
lahf
data16
jp
inc
gs
mov
icebp
arpl
lret
xor
cmp
rorb
inc
nop
ud2
movsb
and
add
push
mov
fwait
pop
cmp
xor
cmp
jb
cmp
inc
push
sub
mov
push
dec
mov
xchg
jno
xor
jmp
push
and
jnp
dec
cld
or
lods
xchg
jl
and
aas
fcmovnb
adc
cmc
xchg
push
sub
mov
mov
icebp
pop
int
inc
aam
adc
mov
mov
or
sti
es
cmpsb
sbb
ret
cld
out
daa
stos
hlt
cmp
insb
adc
jne
cmp
pop
stc
mov
push
notl
jmp
push
aad
adc
call
in
cmp
jecxz
lret
insb
imul
filds
mov
aas
dec
filds
outsb
fmull
cmp
lcall
out
xchg
mov
xor
fsubrp
cld
inc
fiadds
mov
dec
fisubrl
cmp
mov
adc
bound
pop
cmp
lds
cmpsb
inc
adc
xchg
cmc
and
inc
insb
and
stc
inc
addr16
lea
jg
cmc
das
jle
cltd
in
fsubs
sbb
fisttpll
sub
sub
push
jg
mov
adc
add
pslld
gs
mov
stos
jge
loopne
out
dec
and
cmp
les
xchg
setns
into
mov
xor
in
rcr
push
push
inc
pop
mov
cmp
adc
push
dec
iret
iret
pusha
fldenv
jbe
adc
sbb
pusha
xor
clc
popa
leave
dec
cmc
sub
je
add
sbb
adc
in
lret
lods
jno
testl
jno
enter
jne
jge
daa
mov
sbb
sbb
loope
subl
inc
scas
pop
push
sub
xor
out
dec
dec
mov
adc
mov
push
stos
mov
shrb
mov
or
mov
inc
lret
pop
scas
push
sub
jae
call
push
subl
mov
sub
sub
sbb
std
popf
and
inc
stos
or
lahf
out
mov
insb
pushf
lds
fs
add
jecxz
dec
outsb
cmc
add
stos
xchg
mov
xchg
mov
pop
cmpsb
out
stc
cmp
or
mov
and
dec
in
inc
daa
rcrb
push
mov
int3
mov
out
pop
aam
out
fcoms
aam
xchg
or
shll
sub
xor
and
and
xor
mov
add
add
pop
push
dec
sbb
rcrl
mov
cmc
mov
dec
or
bound
or
icebp
push
or
aad
xchg
cltd
std
cmp
pop
cmpsl
pop
movsl
mov
clc
jae
inc
lea
xchg
cld
addr16
aam
outsb
push
sbb
hlt
das
xor
out
mov
enter
pusha
jmp
call
daa
shrb
hlt
dec
bound
pop
inc
adc
jle
and
loop
pop
popf
fcomip
aaa
sbb
jo
or
daa
xchg
sahf
xchg
pop
mov
push
or
jo
xchg
inc
movsl
outsb
std
fldcw
add
cmp
inc
dec
mov
les
adc
pushl
cli
push
mov
and
or
cltd
int3
lcall
cmp
mov
negb
or
xor
inc
mov
ljmp
pop
scas
sbb
cmp
pop
push
cmp
addl
pop
push
aas
out
xlat
in
daa
mov
pop
inc
and
shrb
mov
rclb
jp
cmpsb
cli
push
pop
mov
fdivr
xor
sbb
xlat
mov
jg
sub
xlat
xchg
jno
repz
repz
ret
into
pop
mov
xor
mov
mov
cmp
jb
scas
sub
push
mov
int3
mov
jmp
mov
nop
popf
and
shlb
movsb
inc
push
mov
ret
fistps
and
ds
or
add
xchg
add
pop
into
xorb
aad
scas
loope
cmc
cmp
cmp
adc
daa
jnp
xchg
mov
fadd
and
int3
dec
ds
jbe
mov
leave
es
cmp
pop
mov
sbb
pushf
dec
js
mov
or
stc
mov
sub
and
movsb
push
jmp
and
inc
in
scas
in
pop
sub
out
xchg
scas
in
xchg
adc
pop
jno
mov
outsl
mov
inc
or
hlt
rcr
jl
pushf
cld
stc
jg
cmp
cmpsb
push
hlt
cld
mov
sarb
sbb
push
xor
out
dec
push
popf
mov
xchg
lcall
mov
or
lcall
pop
mov
ljmp
cmp
xchg
pushf
pop
outsl
jo
sub
push
ret
xchg
pushf
mov
movb
ret
inc
aas
dec
vmptrst
stos
jp
mov
xor
mov
sub
mov
cmp
mov
pop
lods
xchg
lret
pop
jmp
incl
xchg
popa
dec
sub
push
popf
popf
sbb
push
mov
enter
jl
outsl
daa
dec
cld
shlb
mov
in
popf
mov
inc
inc
xor
loope
mov
in
shl
inc
repz
popf
sbb
or
add
jecxz
int3
cmpsb
mov
mov
xor
pop
pop
xor
scas
daa
sbb
test
rol
push
shlb
dec
rcrb
stos
xchg
cli
adc
fisttps
xchg
xor
cmp
repnz
or
fiadds
aas
push
imul
inc
xchg
push
cltd
inc
daa
mov
cmpsw
cltd
push
imul
push
mov
sub
add
mov
ja
sti
test
cmp
lds
inc
jmp
lret
adc
cmp
sbb
shrl
and
out
mov
aas
add
insb
mov
sbb
cmp
jae
imul
aad
nop
dec
fdivl
lret
or
mov
loopnew
stos
adc
dec
les
cmp
jge
popf
sub
mov
daa
mov
ficomps
xor
mov
sub
and
inc
out
dec
mov
push
iret
cmp
add
lock
push
imul
scas
xchg
dec
je
mov
int3
pushf
cmp
xchg
mov
lret
add
mov
xchg
push
mov
fidivl
dec
outsl
mov
inc
sbb
icebp
mov
test
inc
test
testb
faddl
dec
dec
std
ret
cmp
push
hlt
jae
lahf
lods
pusha
aad
mov
inc
shll
push
cmp
aad
in
in
lahf
sub
sub
mov
leave
jge
pop
scas
test
mov
xchg
and
ret
sbb
jle
push
loope,pn
mov
fwait
or
imul
sub
std
xlat
inc
push
sarl
or
adc
xchg
aam
and
popa
bound
xchg
je
mov
clc
mov
mov
jl
ds
ja
test
pop
pop
in
jo
das
adc
mov
adc
dec
loopne
pop
mov
inc
push
jecxz
and
insl
mov
xlat
stos
addr16
fxch
adc
dec
imul
xor
xor
dec
sarl
jne
cmp
mov
in
and
imul
out
push
mov
dec
jge
jne
jo
xchg
xor
pop
mov
sti
test
int3
imul
sbb
sbb
ret
aad
inc
pop
inc
jnp
imul
setle
out
mov
add
popa
push
pusha
push
movsb
and
jle
call
repz
fwait
cmp
loopne
or
push
popa
push
lret
adc
std
xchg
sub
mov
cmp
mov
cltd
sbb
test
push
into
fwait
in
sbb
xchg
cmp
mov
mov
roll
push
aas
mov
adc
dec
notl
cltd
loop
jne
mov
pop
jo
mov
fmuls
lahf
stos
clc
jmp
xor
fsubl
push
dec
stos
adc
xchg
shlb
jbe
adc
leave
inc
loop
das
xchg
jl
mov
mov
dec
inc
jle
pop
jne
add
rcrl
push
and
cmp
sahf
out
pop
xor
imul
lret
lods
xchg
out
pop
arpl
sahf
push
std
adc
iret
add
das
dec
or
pop
imul
and
scas
lods
xchg
mov
xchg
insl
push
add
dec
stc
repz
imul
cmp
scas
adc
mov
fmulp
insl
sbb
out
into
sub
mov
jnp
cmc
out
bound
leave
out
push
pop
inc
mov
adc
jnp
lds
adc
xchg
push
cltd
push
pop
jge
pop
outsb
sbb
or
shrb
arpl
in
adc
loope
cld
xchg
rorb
mov
or
xchg
aad
inc
pop
bound
cld
or
sub
mov
add
mov
dec
push
subl
andps
jp
pop
push
dec
daa
outsb
jmp
aas
adc
ret
arpl
cltd
sbb
or
aad
mov
dec
sbb
out
dec
bnd
leave
out
or
lret
push
add
sbb
daa
in
mov
inc
mov
ss
fwait
imul
mov
jecxz
xchg
xchg
mov
mov
dec
daa
or
mov
jno
and
iret
adc
ja
mov
int
cmp
popa
data16
loop
cs
sbb
in
lcall
sbb
mov
pusha
clc
loopne
xor
leave
jg
mov
insl
sub
ficoms
shlw
mov
and
push
inc
outsb
sbb
popl
sbb
mov
mov
xchg
sub
daa
insb
jecxz
xchg
out
mov
fs
sti
push
mov
dec
test
adc
popa
fs
js
lret
fmull
out
fldenv
add
sarb
call
sbb
pusha
stos
imul
xchg
outsb
cwtl
pop
daa
nop
rolb
call
or
xchg
fcmovbe
iret
mov
sahf
or
xor
imul
xor
stc
cmp
add
xchg
or
insl
loope
scas
push
stos
enter
std
fwait
pop
cld
daa
nop
xchg
and
pop
sbb
cmp
add
or
xor
and
loope
mov
adc
jne
fdivrl
cld
mov
cmc
imul
in
pop
lahf
into
sub
push
dec
daa
mov
xor
addr16
pushf
sbb
insb
add
es
sysret
out
jae
js
rclb
daa
shr
in
xor
stc
sbb
sub
sbb
dec
cltd
adc
inc
lods
pop
imul
sub
cli
insb
fldl
stc
jle
insb
mov
push
sub
xor
fimuls
adc
daa
cwtl
out
add
hlt
jae
call
push
mov
daa
icebp
push
mov
jg
jb
dec
rcr
mov
std
push
pop
mov
jns
inc
lds
cmc
add
fidivrs
xor
je
call
push
mov
mov
test
lcall
shll
out
fidivrs
xlat
fstl
adc
inc
inc
mov
test
icebp
add
or
jmp
mov
inc
dec
and
and
mov
into
daa
jae
out
mov
movsb
lret
mov
and
mov
xor
sub
xor
into
pop
ljmp
adc
rcrb
sbb
loop
cmp
xor
xor
or
loopne
cmc
fsubs
push
fsubl
ja
stos
mov
call
inc
sahf
lods
test
xchg
cmpsb
mov
push
mov
loop
sarb
pop
and
mov
lods
and
and
aaa
adc
idivb
cs
sub
pop
cmp
std
aad
jl
sub
pop
sub
daa
xchg
decl
mov
enter
and
lahf
cmpsl
push
dec
addr16
aaa
fldt
xchg
inc
pop
sub
and
mov
mov
cmp
push
inc
rolb
lcall
sti
imul
push
dec
xor
inc
ja
ret
pop
les
rol
cmc
data16
decl
adc
repnz
inc
jnp
jo
add
ficompl
and
adc
jns
fdivp
ss
xor
insb
mov
and
outsb
push
adc
pop
jns
xchg
pop
jp
leave
std
ret
sub
lahf
test
mov
jns
lret
fists
pushf
sbb
aam
jae
sub
sbb
dec
sbb
daa
fnstcw
xchg
icebp
jae
cld
sub
cmp
imulb
mov
int3
pop
add
mov
insb
inc
out
mov
pop
pop
and
and
out
inc
push
sbb
scas
sub
pop
xor
inc
fwait
std
pop
in
dec
mov
mov
pop
jne
xchg
or
mov
cltd
ret
data16
hlt
xchg
xor
hlt
xor
popf
add
sub
or
lock
das
or
jl
test
xchg
iret
orl
negl
out
dec
inc
inc
cmp
ljmp
out
push
or
addr16
cmp
jmp
mov
adc
or
pusha
out
pop
nop
leave
mov
je
int3
movsl
mov
cmpsb
cld
cmp
subb
mov
mov
je
cmp
adcb
xchg
xchg
xor
pop
das
cmp
roll
insb
pop
imul
popl
xor
inc
cs
testl
test
sub
push
repz
out
and
das
es
xchg
jg
or
repz
in
inc
scas
into
cmp
lds
scas
cmp
insb
sbb
adc
fwait
or
jmp
sub
jmp
dec
or
mov
cmp
into
mov
mov
cld
pop
into
jae
sbbb
mov
sub
sub
push
xchg
aas
inc
pop
sbb
push
pop
ds
popf
mov
dec
and
jmp
jle
ljmp
adc
addl
pop
lcall
sub
mov
cltd
into
movsb
out
cmp
daa
int3
dec
popf
popf
pop
adc
mov
inc
sahf
push
daa
jecxz
cltd
outsl
jp
inc
sbb
push
arpl
cmp
adc
and
inc
fildl
and
stc
jnp,pt
mov
or
cmp
insb
subb
sbb
daa
mov
jne
adc
ds
or
jmp
mov
add
push
xchg
cmc
inc
jns
add
loop
push
lret
and
xchg
mov
roll
loope
loope
test
xor
push
sub
call
js
orl
daa
fs
ss
stos
pop
pop
jecxz
subl
and
scas
jnp
push
dec
adc
mov
jbe
sarb
ja
adc
ficoms
and
jns
jge
pop
sub
adc
sbb
add
jno
ret
shlb
inc
mov
dec
cld
mov
movsl
mov
aas
mov
mov
mov
cmp
adc
js
mov
cmp
inc
imul
push
iret
out
mov
cmc
fwait
add
insl
dec
test
and
syscall
lret
insb
or
movsl
mov
push
and
cmp
pop
int3
push
je
out
add
mov
movsl
mov
dec
leave
dec
mov
cmp
pop
adc
int3
jecxz
sbb
cmp
icebp
rorl
push
pop
jmp
push
inc
mov
mov
push
stos
push
fmuls
and
cwtl
xchg
cwtl
mov
insb
aaa
add
rcll
push
aad
negb
inc
shlb
mov
cmp
iret
popf
rolb
cli
cmp
and
xchg
insb
adc
xchg
dec
lods
inc
pop
mov
nop
frstor
mov
adc
xchg
mov
jae
stc
sbb
xor
movsb
jae
push
or
xchg
daa
fnstcw
jno
xchg
add
sub
add
mov
imul
fldt
mov
xchg
lcall
push
data16
pop
xor
in
movsl
sahf
dec
dec
roll
dec
shrl
cmp
inc
ret
pop
or
in
or
xor
mull
ljmp
sbb
insb
jns
lret
je
out
xchg
call
cmovp
imul
gs
add
ret
mov
sub
ret
pop
sbb
ljmp
stos
ror
aam
mov
pop
sbb
iret
mov
mov
jecxz
cmp
nop
lcall
or
mov
push
addr16
xchg
push
push
mov
xchg
xor
out
inc
inc
inc
call
jl
sub
xchg
mov
shll
inc
add
lds
push
adc
iret
push
sahf
sbb
dec
dec
das
mov
mov
je
adc
insb
rorl
push
xchg
adc
xchg
push
push
sbb
out
bound
xchg
inc
lock
or
sub
lret
sbb
mov
jp
aaa
stc
dec
cmc
push
cmp
cs
jae
mov
add
inc
sub
add
into
cmp
insb
bnd
pusha
popa
jae
cmp
enter
pop
mov
lcall
ret
nop
pop
mov
add
aam
cmpsb
pop
inc
data16
xchg
in
mov
adc
mov
cmpsw
mov
mov
dec
and
adc
nop
sub
daa
and
cmp
stc
inc
cwtl
xchg
xor
push
notb
pop
gs
mov
mov
shrl
sbb
push
xchg
test
lock
mov
loopne
cmp
cmp
cld
mov
loop
faddl
mov
adc
pop
imul
mov
sub
repz
fcomi
jl
lds
leave
sahf
jns
adc
popf
cld
jmp
jbe
ds
imul
repnz
inc
aam
cmp
inc
and
sbb
inc
mov
or
test
jno
and
lahf
cmpsl
mov
rclb
js
adc
dec
mov
shll
fstpl
inc
cmc
loopne
xchg
fscale
inc
inc
lahf
sti
lods
cld
cmpsb
dec
xchg
and
inc
jp
clc
xchg
mov
mull
leave
ret
jmp
pop
cwtl
in
pop
add
and
inc
test
dec
and
jno
faddl
push
or
pop
clc
mov
fs
icebp
pop
dec
fisubl
mov
imul
fwait
enter
test
je
mov
jp
mov
mov
fstpt
adc
inc
push
jge
xchg
adc
adc
xchg
dec
addr16
inc
arpl
stos
sbb
adc
ret
in
push
pop
fwait
xor
jae
push
sbb
jo
lahf
pop
aas
or
mov
in
pop
fsubl
sub
or
dec
sub
fcomps
leave
scas
add
xlat
popa
dec
inc
fstl
lock
les
pop
add
and
push
xor
outsb
lea
inc
mov
lret
lcall
enter
loope
test
push
sbb
fcoms
rcll
arpl
mov
insb
push
cmpsb
inc
into
push
lock
daa
pop
aas
add
adc
scas
dec
iret
aas
stc
aad
push
and
jg
pop
sti
cmpsl
stos
xchg
lock
nop
outsl
xchg
xchg
out
xor
fwait
xor
aad
push
mov
or
cmp
ds
imul
fsubp
or
sub
pop
lcall
jae
pop
lret
xchg
or
cmp
dec
pop
adc
lahf
negb
test
pop
bound
pop
scas
sbb
xorl
in
arpl
sub
or
fwait
roll
xorb
lods
scas
cmp
cmp
ds
push
test
fs
aaa
xchg
leave
pusha
sbb
inc
mov
dec
jmp
or
mov
push
inc
sbb
adc
leave
inc
sub
out
xchg
sub
pusha
mov
cmp
mov
outsb
stc
lods
inc
pop
mov
es
cmp
int3
cli
scas
inc
ret
cmc
stc
xchg
jno
pop
add
test
pop
pop
fbstp
xor
sbb
push
adc
mov
xchg
inc
push
cmp
xor
xor
inc
lea
jg
icebp
mov
inc
sub
jnp
inc
or
inc
xor
idivl
inc
aaa
push
sub
adc
lea
xor
jno
pop
mov
xor
fwait
subl
lahf
dec
bound
bound
add
pop
dec
mov
bound
sahf
pop
adc
scas
loopne
fs
jmp
pop
and
aas
push
into
hlt
cmp
ret
into
jne
mov
or
mov
mov
pusha
mov
popa
push
add
jl
pop
jmp
fs
sbbl
cwtl
loopne
test
stc
arpl
jp
push
int3
int3
call
xor
jecxz
pop
or
or
rol
mov
mov
lea
add
xchg
pop
inc
mov
add
pop
inc
xchg
add
mov
add
jae
enter
frstor
push
inc
xchg
hlt
es
mov
lock
mov
mov
std
daa
jg
lods
lods
inc
mov
in
inc
std
cli
jecxz
sub
ds
imul
imul
mov
push
jle
ja
fcomps
adc
mov
fiadds
scas
lds
jno
adc
xor
pop
xchg
mov
out
mov
or
dec
shll
xor
adc
xorb
push
outsl
test
movsl
fnstenv
pop
fildll
jbe
fcomi
and
push
pop
cld
mov
push
daa
mov
dec
stos
pop
loopne
dec
mov
int3
ljmp
xchg
sbb
sbb
addb
add
insb
and
adc
add
insb
scas
mov
pop
das
add
mov
movsb
shlb
in
fsub
sahf
jle
popa
push
sub
loop
movl
pop
xchg
jp,pt
jmp
js
dec
pop
das
mov
cmpb
stos
sbb
into
aad
fnsave
dec
mov
sub
test
or
add
adc
inc
arpl
inc
add
fistps
sub
pop
cmp
jl
bound
rolb
pop
inc
scas
pop
jp
aaa
lods
lock
xchg
mov
xor
scas
repz
inc
push
push
orl
outsl
mov
lahf
arpl
ds
and
addb
lret
loop
and
dec
jg
xchg
in
icebp
sahf
ret
ljmp
push
in
push
aas
mov
or
inc
pusha
push
sarb
jp
push
lds
push
xor
and
dec
adc
push
call
mov
mov
cmp
lret
leave
fwait
loope
repz
and
xchg
into
lret
sub
sub
out
inc
into
mov
jae
inc
aad
mov
jbe
out
in
pop
cld
inc
jg
nop
xchg
pop
sub
mov
push
and
bound
loope
inc
in
nop
mov
out
push
add
xor
sub
int3
push
scas
jge
push
and
adc
leave
test
movsb
aas
testl
into
xlat
push
push
pop
dec
imul
in
mov
shrb
mov
test
inc
jnp
aas
or
inc
xchg
int3
pminsw
insl
xchg
xor
push
jno
insb
pop
adc
leave
cmp
mov
pop
push
mov
or
sub
cmc
xchg
xor
scas
in
inc
popf
fldenv
in
fdivl
or
or
call
and
inc
into
xor
xchg
frstor
mov
leave
jno
add
sarl
aad
adc
popa
and
pop
xchg
imul
dec
cwtl
aaa
cmp
sbb
clc
pop
adc
lock
divl
dec
daa
repnz
repz
aaa
dec
imul
dec
pop
shll
daa
test
outsl
dec
clc
arpl
mov
scas
pop
addr16
adc
data16
jl
cmp
mov
idivl
mov
jecxz
pop
rcr
mov
dec
scas
mov
jnp
cwtl
sbb
pop
cmpsb
fisubrs
cs
pop
ds
imul
xor
std
aad
adc
fs
int
sub
adcl
add
or
mov
mov
cwtl
jae
fidivl
movsb
add
cs
imul
push
incb
push
dec
lret
cmc
jl
mov
mov
aaa
xor
mov
and
or
pop
adc
jbe
dec
imul
adc
mov
imul
xor
sbb
dec
icebp
adc
sahf
pop
cld
hlt
ds
daa
les
iret
shll
sbb
pop
sub
shrb
inc
mov
scas
cmp
jns
subl
xor
shlb
pop
ficoms
rcl
cld
loop
fldl
mov
insb
xor
adc
cmpsl
dec
mov
sub
pop
push
add
xor
cwtl
and
popa
or
dec
sbb
ss
or
int3
je
jmp
sub
jp
jl
repnz
nop
inc
ss
and
or
decb
inc
fwait
or
fmulp
and
push
cmp
fnstcw
or
push
xchg
cmp
sub
lock
jp
cld
dec
ud1
jno
or
jb
iret
repz
pop
or
scas
xor
aaa
cwtl
jle
cmp
mov
cmc
cld
dec
push
in
ljmp
insb
xchg
sub
xor
pop
leave
cltd
adc
in
movsl
stc
jmp
sub
ret
scas
in
ljmp
shll
imul
das
and
je
adc
push
mov
hlt
or
mov
rcr
or
pop
sahf
lds
add
xchg
loop
ljmp
dec
cmp
fisubl
mov
js
jmp
and
jne
push
push
dec
cmp
jg
movsb
loopne
icebp
pop
inc
or
sahf
adc
popa
mov
push
lret
jg
faddl
adc
or
js
cmpsl
or
jmp
pop
mov
xchg
cwtl
xchg
push
mov
sub
lret
push
add
stos
push
inc
or
cmpsl
pop
add
je
sub
pushf
loopne
or
or
pop
loope
dec
sub
mov
sbb
sbb
mov
rcll
out
or
js
loope
leave
or
inc
mov
mov
ja
ret
enter
dec
ljmp
testl
dec
imul
mov
decl
or
stos
repnz
cli
or
jne
aad
js
xchg
shlb
mov
addr16
sub
or
orb
or
mov
jp
xchg
test
test
stc
or
lcall
or
imul
pop
or
xchg
pop
mov
fs
les
ljmp
mov
xchg
dec
or
out
iret
jne
mov
ret
jp
cmp
mov
add
xchg
cmp
jl
adc
adc
nop
out
in
sub
loop
xor
int
mov
in
lahf
mov
push
mov
push
cmp
or
lock
sbb
fimull
call
lret
lock
sbb
or
scas
lcall
xchg
data16
mov
and
cmp
outsb
push
je
insb
stos
xchg
orb
jbe
push
aam
dec
or
mov
dec
aas
pop
mov
or
shr
andb
xchg
ret
cmpsl
mov
das
imul
xor
sbb
scas
adc
sbb
leave
addb
mov
test
cmpl
in
outsl
mov
lods
pop
aad
out
shll
push
push
fs
rorl
mov
imul
mov
or
dec
and
cmpsl
mov
or
popf
mov
dec
pop
pop
mov
inc
sbb
subb
mov
dec
gs
mov
or
cmpsb
ret
leave
lods
or
repnz
pop
movsl
pop
mov
mov
push
lret
test
xchg
arpl
stos
lock
addr16
jmp
mov
rcl
adc
lods
or
add
aam
mov
jmp
inc
mov
into
or
push
adc
hlt
inc
mov
sub
insb
pop
mov
or
or
sbb
inc
ret
mov
or
xor
sub
test
inc
xlat
add
lea
pop
lret
pushf
pop
xchg
gs
or
mov
push
clc
out
sbb
pop
push
and
icebp
int
in
cmpsb
add
adc
int3
out
cmpsl
or
and
std
sub
or
xchg
mov
xchg
dec
pop
xchg
and
out
popf
push
std
enter
push
ss
or
imul
mov
jmp
dec
xchg
adc
mov
push
or
in
xchg
dec
cmp
add
movsl
jae
icebp
pop
or
push
dec
mov
mov
pop
js
popa
pmulhuw
jg
push
fisttpl
fdivrs
or
adc
push
lahf
mov
jecxz
sbb
mov
mov
imul
pop
hlt
loop
sub
insb
inc
xchg
mov
leave
divl
adc
stc
daa
xchg
jle
mov
sub
test
aam
jmp
xchg
fdivl
sbb
das
inc
add
dec
imul
mov
fdivrs
xor
cltd
cmpsb
lea
lock
mov
cmp
and
cmc
push
sub
sub
lock
cmp
dec
nop
insb
insb
pop
test
mov
adc
outsb
cmc
mov
pop
andb
push
jno
popf
aaa
mov
mov
add
pop
fstl
mov
mov
fstl
jp
jae
nop
inc
imul
cmpsl
repz
out
data16
push
lock
js
adc
dec
sub
rolb
imul
mov
rorl
pop
dec
mov
ds
mov
or
pop
push
add
mov
ret
jecxz
mov
or
xor
imulb
sub
push
popl
or
cltd
inc
or
and
repz
je
or
inc
out
lods
and
lcall
lods
int
push
out
ror
into
outsb
shlb
fcomps
mov
sti
inc
lea
sub
sbb
mov
inc
dec
fnstsw
daa
add
jnp
cmp
daa
pop
stos
dec
mov
popa
into
dec
and
pusha
and
mov
or
jmp
adc
dec
jnp
lods
jae
and
sbb
jbe
leave
dec
jne
sub
lods
pop
push
pop
jnp
popf
jns
and
scas
jecxz
jmp
movsl
xchg
clc
ss
shrl
andb
ret
add
cmp
lahf
jg
mov
imul
test
flds
mov
aas
ds
push
ja
sbb
aam
ja
hlt
pop
jp
shl
pop
push
inc
stos
jnp
out
mov
or
scas
adc
sahf
adc
jmp
dec
lds
jp
jns
fiadds
adc
test
mov
cmpsl
mov
cmovge
add
lcall
or
fidivrl
add
out
jge
bound
stos
inc
lods
loope
sbb
cld
in
mov
sub
or
sbb
mov
pop
out
lret
push
pop
mov
in
cmp
dec
out
cmc
movsb
jg
push
or
push
sub
push
std
xchg
leave
sarb
push
scas
movsb
push
fdivrs
mul
inc
mov
rclb
in
jo
or
pop
bound
fisttps
jne
inc
mov
or
mov
out
mov
xchg
rcrl
adc
xchg
aaa
jbe
add
test
push
out
movsb
cmp
clc
lahf
adc
aas
jg
and
sub
xchg
dec
mov
lret
or
lea
mov
sbb
pop
push
xchg
out
push
imul
cld
aam
aaa
xchg
lret
pop
popa
inc
dec
push
es
subl
pop
fisubrl
add
test
xor
filds
daa
fcomps
addr16
push
cltd
pop
xlat
cmp
jnp
mov
and
in
rcrl
add
mov
pop
xor
inc
cmp
and
std
mov
jle
sbb
aam
xor
mov
push
mov
jle
pop
cli
imul
jge
loope
or
insl
aad
or
roll
mov
mov
mov
push
push
jmp
addl
mov
mov
inc
adc
iret
or
dec
aam
clc
jne
push
or
andl
mov
or
mov
pop
adc
inc
pop
cltd
add
xchg
cmc
push
sbb
movsb
sbb
mov
imul
or
adc
or
inc
lcall
test
jmp
push
jae
and
or
arpl
push
mov
aad
or
sub
or
dec
daa
or
mov
ss
dec
inc
jge
out
cmp
mov
sbb
in
lods
adc
sub
pop
ljmp
cmc
loope
and
dec
or
sbb
and
sbb
std
mov
xor
sub
and
sbb
mov
pop
or
sbb
sub
repnz
jae
test
or
pop
into
push
adc
push
ljmp
push
loop
adc
out
enter
cwtl
sbb
cld
sbb
lea
pop
popa
or
mov
sahf
sub
arpl
pop
mov
xor
in
push
or
loope
pop
and
fwait
or
mov
push
mov
pop
jge
or
add
push
dec
aam
inc
jns
and
lea
enter
mov
mov
sub
pop
lahf
pop
xchg
js
loopne
imul
xchg
cmp
or
mov
stos
jmp
jl
xor
pop
pop
push
xor
adc
add
pop
jmp
mov
sbb
ret
shll
sbb
sbb
lods
or
mov
and
lcall
out
rcrl
ficompl
mov
insb
or
jg
add
or
push
and
pop
jmp
and
repz
add
es
insb
add
or
ds
shlb
mov
movsl
dec
scas
or
add
push
and
jne
sbb
or
rcr
sbb
lea
mov
jp
sbb
shlb
cmp
mov
or
sbb
add
mov
out
mov
mov
test
rol
cmc
sahf
cmp
mov
or
lds
sti
dec
mov
sub
movsl
or
xchg
pushf
or
dec
loop
sub
cmp
cwtl
test
and
mov
or
xlat
ficomps
cld
sbb
adc
xor
inc
int
inc
orb
movb
jecxz
xor
test
mov
and
das
cs
cld
pop
ja
mov
into
sbb
sti
push
in
out
es
ss
fmuls
and
icebp
fistl
int
stos
sub
lcall
sub
and
adc
out
gs
jmp
add
repnz
in
sub
fwait
xchg
fldt
es
iret
push
push
out
popa
outsl
dec
lds
movsl
or
pop
cwtl
pop
daa
sbb
divl
fmul
jno
push
or
mov
enter
and
adc
add
or
retw
loope
adc
orl
inc
fdivrs
leave
out
test
addb
out
orb
sbb
or
jne
sbb
repnz
mov
push
bound
js
mov
jmp
popa
cmp
pop
jae
sub
sbbl
shr
inc
xchg
sbb
enter
mov
mov
and
or
int
pop
push
fs
or
stc
dec
jb
cmc
mov
inc
cwtl
pop
push
or
fdivrs
sbb
xor
aam
adc
or
in
sbbl
aaa
push
mov
sub
and
inc
or
or
sub
mov
nop
stos
bound
mov
push
ss
xchg
rorb
pop
xchg
dec
lret
xor
pop
out
lods
inc
insb
dec
test
add
mov
int3
jno
push
iret
push
lcall
ss
enter
jb
fwait
sub
mov
add
stos
mov
cwtl
mov
dec
sbb
or
insb
add
enter
jmp
jno
mov
mov
sbb
inc
int
fdivrs
xchg
daa
imul
pop
jno
dec
cmp
lcall
sub
cmp
inc
imul
cli
les
cwtl
sbb
jne
pop
sti
mov
repnz
lret
out
sbb
adc
lock
lods
or
shlb
fistpl
sub
or
inc
pop
int
hlt
ficoml
test
ds
fcoml
xor
inc
inc
xorb
mov
cli
xchg
fdivl
enter
inc
inc
iret
or
addr16
ljmp
inc
fsubrs
cmp
fnstcw
mov
adc
int
leave
or
pop
xchg
cltd
mov
and
ret
add
cmp
insb
in
mov
mov
or
sub
shll
dec
mov
movsb
push
mov
or
gs
lods
mov
fucom
clc
lcall
cmp
lds
lea
mov
jb
push
stos
cmpsb
pop
and
fisubs
in
insl
inc
push
loope
sbb
mov
add
add
mov
mov
inc
sahf
imul
sbb
out
cmp
jmp
adc
stc
imul
mov
push
enter
or
pop
push
stos
cmc
inc
xlat
push
adc
rorb
fbld
jb
sub
jmp
mov
ficomps
inc
sbb
ja
lret
cld
fsts
push
int3
popa
jae
push
pop
dec
adc
in
mov
xor
lds
sbb
jle
test
or
aaa
ljmp
clc
inc
loope
cld
mov
pop
enter
daa
fcoms
roll
cmp
stos
push
imul
int3
mov
daa
loope
cmpsl
ja
push
sbb
scas
rorb
inc
movl
test
inc
dec
jne
adc
cli
sub
jmp
push
xchg
ret
sbb
mov
push
test
pop
adc
xor
xor
test
out
movsb
lret
mov
out
sbb
cmp
sub
xchg
fstl
or
std
out
decb
faddl
outsl
pop
dec
repnz
addr16
clc
insb
jae
sbb
mov
push
pop
or
movb
adc
pop
and
stc
and
cmpsb
jbe
xchg
daa
adc
mov
roll
inc
outsl
fsubrs
cli
into
or
mov
jp
pop
cmp
mov
pop
rcll
xchg
aam
fwait
pop
push
test
test
jl
jg
cmp
daa
inc
cmpsb
mov
es
inc
mov
or
jp
sbb
out
sub
sub
push
xchg
shrl
rcrb
nop
popf
mov
cmpsl
psrld
mov
adc
pop
ljmp
popa
sbb
aad
jecxz
dec
inc
pop
std
xchg
fcomps
jle
scas
or
adc
loopne
incb
test
sub
mov
call
or
or
and
sub
xchg
cmpsb
mov
fwait
std
sbb
ret
adc
stos
or
xlat
loopne
jns
push
jp
fsubr
imul
inc
push
jb
dec
jae
lods
inc
fnstsw
out
ror
out
jae
call
sub
sbb
jmp
add
out
pop
xchg
in
sbb
or
and
sbb
loope
jne
mov
jo
in
jb
fisttpl
shlb
arpl
daa
xor
sub
mov
jmp
dec
inc
lods
insl
xor
mov
jb
and
outsl
mov
sbb
xor
mov
pop
push
outsb
mov
clc
push
ja
jae
jmp
mov
in
dec
mov
lods
imul
mov
jo
ds
in
out
add
sbb
or
xchg
add
les
pop
and
fwait
jmp
rcl
xor
ljmp
mov
cmp
dec
mov
xchg
pop
outsb
test
xor
scas
mov
outsl
in
pop
daa
cmp
inc
jge
adc
xchg
icebp
enter
loope
push
mov
ret
pop
mov
loope
pop
popf
xor
aas
adc
pop
mov
dec
xor
out
jmp
xor
int3
in
arpl
stc
mov
and
mov
loop
pusha
adc
call
and
test
das
cs
xor
pop
loopne
xchg
mov
int3
js
or
cmc
lods
sub
pop
xor
sub
pop
arpl
push
jb
sbb
int
mov
xchg
push
dec
leave
andl
mov
out
or
inc
loop
fsub
xchg
out
jle
inc
jle
out
xchg
pop
ret
dec
adc
add
leave
bound
in
sbb
out
dec
pop
movsl
inc
fbld
pop
data16
inc
add
addr16
and
pop
push
dec
cmp
pop
pusha
mov
mov
sub
push
push
mov
and
jns
insb
sub
jae
mov
xchg
pop
lock
adc
sahf
lahf
mov
or
lret
push
sbb
xor
push
ror
cmp
inc
mov
mov
fidivrl
fisubrl
test
ljmp
aad
fldl
sub
push
and
adc
cmpsl
test
popa
mov
jnp
stos
jge
flds
jg
xor
cld
ret
add
xor
mov
push
push
aas
jb
rcl
testb
cmp
mov
sbb
out
push
out
gs
sbb
lea
jmp
daa
ljmp
mov
mov
pop
clc
pop
pop
test
pop
adc
sbb
cmp
scas
hlt
and
daa
lret
adc
dec
mov
push
push
pop
or
pusha
sti
xchg
mov
hlt
xlat
sbb
rclb
sub
loope
test
mov
push
push
jle
cmp
cmp
lods
hlt
xchg
shrb
mov
icebp
mov
aas
or
jmp
mov
scas
mov
out
les
rolb
adc
add
add
inc
mov
mov
sub
repz
cmc
add
push
jge
mov
pop
sub
ffree
rorl
mov
mov
mov
mov
add
push
sbb
enter
mov
push
or
repz
test
adc
pop
and
mov
inc
stos
sbb
add
jae
mov
adc
adc
jne
cmp
cmp
popf
andl
mov
mov
shll
sub
call
add
popf
inc
test
xchg
js
test
or
leave
xchg
add
scas
mov
adc
ljmp
jns
pop
pop
in
out
mov
out
daa
stos
cwtl
lcall
jp
mov
clc
jns
out
pop
or
mov
mov
sbbb
mov
mov
pop
dec
and
out
sbb
cld
test
repz
mov
movsl
dec
lahf
daa
push
sub
push
fists
xor
xchg
repz
nop
fs
enter
popa
daa
pop
jne
cmpsb
mov
push
call
mov
and
jnp
sub
jmp
faddp
mov
push
gs
mov
jp
xorl
inc
in
idivb
jns
push
adc
sarl
sbb
or
xchg
movl
movsb
outsl
in
cmp
rcrl
push
and
dec
add
cli
sub
dec
out
fcoms
adc
in
push
xor
inc
push
mov
mov
lret
mov
jmp
mov
add
push
pop
jno
sbb
add
popf
mov
es
mov
outsl
xchg
insb
pop
and
sbb
es
mov
aad
cmpsl
push
lcall
rolb
dec
jno
out
andb
push
sub
pop
cltd
out
adc
jno
push
cs
test
cltd
rcll
out
sbbl
or
adc
imul
bound
pop
clc
cld
imul
pop
dec
mov
ljmp
sti
dec
call
addr16
cwtl
push
cmp
xchg
mov
push
xlat
or
lcall
and
aas
stos
jp
pop
add
leave
rclb
push
scas
insb
dec
arpl
scas
mov
clc
xchg
pushf
in
inc
and
xor
movsl
push
push
pop
mov
call
adc
jp
xchg
lret
add
movsl
cmp
hlt
or
mov
out
add
cmp
jae
outsb
outsl
lods
inc
pop
ret
sbbl
and
fwait
imul
outsb
push
outsl
or
pusha
sub
cmc
and
nop
sarb
je
xchg
push
mov
pusha
inc
cmp
in
xchg
pop
inc
daa
push
push
pop
mov
push
pop
pop
pushf
js
cmp
xor
clc
xchg
pop
cld
stc
dec
stc
mov
scas
stos
icebp
xor
xor
xchg
push
cmc
xchg
xor
fiaddl
pop
call
mov
sti
inc
popa
pushf
adc
inc
icebp
sbb
mov
shr
outsl
cmpsb
add
outsb
xchg
ja
push
inc
pop
dec
mov
add
outsb
in
pusha
push
sarb
arpl
cli
jbe
scas
lcall
adc
push
out
or
cmpsl
mov
pop
dec
mov
fwait
jne
xor
clc
pop
fldl
mov
repz
pop
xchg
stos
das
lcall
inc
dec
pop
imul
sbb
lcall
sub
icebp
push
out
daa
frstor
rcrl
pop
mov
or
daa
mov
jae
stos
or
mov
dec
in
and
sub
sbb
std
adc
inc
pop
xor
test
cli
ds
cmp
popf
cmp
jmp
rcrl
adc
pop
lods
jb
loope
mov
imul
test
cmp
lods
aaa
cmc
lahf
ss
mov
popa
cwtl
in
cmp
jmp
lret
mov
mov
xor
cmc
xor
pushf
and
adc
mov
adc
in
ret
push
scas
shrl
repnz
daa
mov
xor
subb
cli
adc
jnp
mov
fabs
inc
cltd
jb
ja
sbb
imul
mov
test
cmpsb
jp
ret
pop
pop
ds
push
inc
and
sub
xchg
xor
dec
in
loope
dec
pop
sub
sub
inc
mov
add
insb
pushf
ss
test
sbb
sbb
pop
push
and
xor
xchg
daa
mov
call
push
ret
call
daa
cmp
fldcw
and
xlat
ds
adc
cmpsl
iret
xor
pusha
adc
jae
ret
mov
stc
and
pop
pushf
push
push
inc
scas
shlb
ss
daa
mov
cld
dec
hlt
inc
or
inc
sub
jno
dec
notl
sub
sbb
xchg
xchg
daa
cltd
push
pop
shlb
das
jl
and
push
mov
mov
mov
repz
mov
cmp
cmp
xchg
sahf
mov
cmp
jp
imul
loope
ds
addr16
dec
cmp
and
jmp
sub
xor
jno
outsb
std
loop
cmp
xchg
xorb
pop
xor
aam
jne
adc
pushf
dec
dec
mov
je
mov
cmp
rcrb
jmp
cmp
sbbl
fisttpll
jne
fsubr
dec
adc
pop
das
push
lds
pop
push
jbe
jns
sbb
jp
popf
in
cmpsb
aad
adc
je
push
fnstsw
mov
icebp
stos
push
push
in
movsl
leave
push
push
bound
or
js
stos
inc
int
out
jne
icebp
aaa
pop
xchg
sub
lods
daa
and
lahf
fisubrl
inc
dec
das
adc
add
cmp
sahf
cld
mov
les
loope
hlt
pop
mov
xchg
aam
movsl
push
lock
xor
jg
cmc
or
int
push
or
inc
adc
divl
mov
sbb
lcall
cld
xchg
fsubrl
aad
js
sbb
daa
mov
add
inc
movsb
mov
jo
inc
and
pop
pop
les
cmp
test
sbb
popf
out
sub
cltd
lods
daa
dec
rcrb
mov
sbb
sbb
leave
into
dec
adc
pop
dec
popa
ror
fsubrp
mov
xchg
mov
and
lea
fnstcw
faddp
iret
loop
andb
mov
mov
mov
sbb
jp
call
jnp
inc
int
daa
testb
popa
roll
repz
or
out
je
out
js
push
pop
daa
jne
mov
fistpll
repz
addr16
mov
cs
adc
addl
hlt
pop
xor
xor
je
stc
cmp
mov
fsts
loope
push
mov
jae
fs
sub
es
or
inc
sub
test
mov
insl
mov
xchg
gs
inc
pop
mov
pop
test
pop
mov
inc
out
xor
jmp
into
xor
cmpsl
pop
fs
sbb
xchg
cmp
inc
push
inc
push
loop
insb
hlt
inc
cmp
enter
loope
inc
inc
jl
xchg
jb
xchg
mov
jns
sub
xor
adc
into
dec
adc
inc
daa
loop
mov
aas
push
sub
sbb
nop
cmpsl
daa
scas
mov
pop
sbb
push
pop
loope
mov
inc
lea
int
inc
pop
jmp
pop
push
stos
mov
into
xchg
test
mov
out
imul
xchg
ds
in
pop
pushf
push
mov
lret
daa
fldenv
inc
mov
mull
aaa
mov
push
ret
jge
jnp
and
pusha
mov
fadds
jno
or
loope
fldenv
mov
sbb
ret
sbb
ss
sub
push
and
pop
add
push
adc
sbb
mov
add
adc
add
fstps
or
pop
cmp
push
mov
stc
dec
adc
leave
jge
int3
mov
jge
pop
xchg
out
mov
cmp
jl
pop
imul
les
mov
popa
and
fmuls
fldl
mov
add
pop
mov
sbb
dec
lahf
push
xor
push
push
cmc
rorl
inc
and
sub
inc
mov
mov
jae
stc
dec
imull
ljmp
cmc
xchg
jecxz
xchg
imul
sub
jbe
and
push
loope
imul
jmp
fists
cmpsb
fwait
imul
call
add
or
pop
jecxz
sarl
movsb
cld
ljmp
mov
cli
xchg
mov
ljmp
mov
hlt
xchg
std
out
ret
pop
jae
dec
call
xlat
xorl
lods
pop
fsubrs
ds
sbb
push
mov
push
xchg
push
xor
insb
fadds
or
xchg
dec
lcall
pushf
idivl
imul
sub
movsl
insl
jbe
dec
test
gs
test
insb
inc
and
xchg
pop
or
push
out
aaa
daa
mov
xchg
mov
pop
call
pop
sbb
inc
stc
outsl
jae
cmp
movsl
xchg
bswap
or
inc
addr16
in
fisubrs
shrl
xor
subl
push
lock
in
sub
call
aam
leave
xor
lcall
pop
mov
or
test
push
add
stc
dec
mov
xchg
mov
je
push
dec
pop
push
dec
clc
rep
hlt
push
add
daa
inc
out
mov
jb
movsb
push
jo
cmpl
xchg
enter
outsb
pop
mov
shrl
repz
push
jno
inc
inc
movsb
jnp
mov
sub
push
es
cld
push
jo
int
aad
sti
mov
sub
scas
stos
sbb
mov
rcll
fs
jmp
jg
lret
dec
aam
push
lret
fcomp
pop
test
sbb
scas
jnp
sub
stos
mov
xor
mov
sti
subb
or
push
cmp
add
push
push
bound
addb
dec
aad
push
mov
mov
lahf
sbb
ret
shll
les
shlb
pop
int
out
adc
inc
out
or
and
out
mov
nop
rcr
imul
adc
bt
xchg
mov
mov
mov
dec
sub
jecxz
and
shll
pop
fwait
mov
xchg
dec
mov
push
adc
push
push
dec
inc
daa
xlat
cmc
push
imul
xlat
cwtl
dec
and
ret
xchg
data16
loope
mov
adc
call
daa
das
hlt
inc
push
or
dec
scas
dec
push
stc
mov
ds
movsb
xchg
pop
pop
out
pop
mov
aaa
pshufw
outsl
ds
cld
xchg
inc
jl
adc
jmp
call
lea
call
movsl
adc
jmp
or
pop
mov
fidivl
in
cmp
pop
outsb
or
stc
mov
push
or
and
sub
sbb
nop
sub
pop
mov
cltd
sub
cltd
and
cltd
stos
pop
sbb
pop
push
mov
push
dec
rcll
jo
outsb
je
into
daa
xor
test
mov
xchg
cltd
adc
jbe
cmpsb
or
test
push
lock
push
jge
cmp
dec
shll
repz
sub
push
movsb
mov
insb
sarl
out
outsl
xor
add
push
cli
roll
nop
les
in
xor
push
call
push
pop
sub
lods
repnz
out
pop
xchg
jmp
push
push
xchg
fdivrs
xchg
dec
scas
cmp
cs
ffreep
add
lret
mov
sub
pop
cmc
imul
mov
jp
js
dec
push
popf
cmpl
mov
leave
int
pop
sbb
dec
and
xchg
push
sahf
shrb
and
cmp
inc
jno
mov
insb
mov
out
leave
cld
sub
cmp
push
sbb
stos
loopne
cltd
pushf
aam
jnp
out
loope
and
xchg
ljmp
adcl
fisubrl
dec
inc
es
pop
mov
mov
repnz
and
xor
imul
mov
ljmp
add
ss
pop
adc
mov
bswap
mov
dec
xor
insb
out
mov
sub
push
push
pop
out
hlt
aad
shlb
jbe
testb
cmp
das
adc
xor
sub
pop
lret
addr16
dec
popf
adc
testl
inc
scas
aas
push
push
adc
jbe
stos
or
mov
cmpsb
mov
mov
pop
pop
lret
push
fs
decl
sbb
pop
xor
and
cmp
inc
ss
fwait
dec
mov
sti
push
lds
in
mov
rorb
or
inc
sbb
lahf
leave
cmp
int3
popa
inc
fsubl
shll
in
push
inc
cmpsb
es
inc
mov
xor
into
mov
push
popf
mov
repz
sbb
and
scas
jnp
cmpsb
xor
movsb
lcall
jle
adc
pop
out
pop
dec
push
cwtl
pop
inc
test
test
mov
das
sbb
jbe
cli
cmp
cmpsb
imull
dec
mov
stos
dec
mov
pop
std
sbb
pop
inc
jne
jae
mov
jnp
and
ret
ret
cmpsb
mov
and
movsb
jno
into
pusha
lret
in
jno
daa
lock
outsl
lds
inc
lods
cvttps2pi
add
clc
out
lods
inc
sar
inc
sub
pop
or
inc
mov
mov
adc
mov
insl
mov
sub
ret
xchg
cmpl
sbb
xor
push
jne
push
jns
push
mov
shlb
daa
call
xchg
rol
cld
push
movsb
ret
and
add
call
daa
dec
jnp
xchg
mov
stos
adc
nop
leave
or
popa
in
insl
add
sbb
sbb
xchg
repnz
fwait
pushf
and
je
cmp
xor
inc
out
leave
out
pushf
sarb
pusha
and
and
sar
xchg
lock
leave
pop
xchg
inc
stos
sub
adc
jl
push
out
cld
dec
or
or
ret
xadd
jge
xchg
xchg
xor
sub
push
mov
icebp
xchg
jmp
dec
sub
cmc
jbe
sbb
addr16
cmp
int
fstl
sbb
mov
fidivrs
push
mov
fistps
pushf
push
jb
inc
add
leave
daa
rorl
push
and
and
push
push
adc
dec
es
cmpsb
dec
and
aas
xchg
sub
sbb
std
sbb
pop
mov
or
rolb
xchg
add
daa
sub
pop
into
xor
lcall
jo
stc
push
xchg
adc
xchg
sub
out
sar
add
loop
push
sbb
stos
sbbb
and
imul
sbb
fsubl
jp
mov
out
mov
fildll
add
pop
jl
mov
inc
dec
push
sbb
scas
pop
mov
jmp
dec
push
test
aam
bound
hlt
add
cli
pop
xor
cmpsl
xchg
xchg
sub
bnd
dec
sbb
pushf
sub
in
fldt
int3
push
inc
sbb
jae
nop
or
pusha
add
sahf
cmpsl
outsb
push
cmpsl
ja
daa
adc
xchg
adcb
push
and
xchg
cmp
inc
xchg
push
sbb
pop
add
push
sub
sbb
shr
les
lock
mov
adc
out
mov
xorl
movsl
cmpsl
jge
add
flds
in
adc
adc
mov
mov
pop
test
sub
cld
adc
sti
cmpsl
pop
jp
int
jmp
add
cmpsb
nop
mov
lods
dec
stc
scas
jb
hlt
adc
inc
movsb
mov
jnp
pop
sub
imul
sub
push
dec
mov
lret
lods
shr
pop
leavew
mov
shr
rcll
mov
mov
mov
repz
push
and
jae
cmp
loope
adc
lea
cltd
popa
pop
int3
push
cld
test
ds
fwait
jbe
popa
js
mov
imul
test
push
hlt
in
inc
gs
push
xstore-rng
cmpsl
subl
and
lods
pop
adc
add
inc
xchg
push
fcompl
out
sti
jnp
inc
sbb
adc
sub
jbe
dec
repz
insb
orl
enter
adc
stos
xchg
int3
xor
icebp
lea
ljmp
daa
outsl
popa
clc
repz
cmpsl
xor
and
mov
icebp
clc
in
notb
sub
addl
lock
call
test
cli
imul
sbb
and
adc
adc
pop
mov
and
mov
xchg
xchg
fisttps
mov
scas
mov
or
cmp
cmp
arpl
clc
xor
fs
rclb
mov
js
adc
mov
cmp
mov
dec
outsb
xchg
xchg
popf
fnstenv
sub
scas
xor
push
stos
pop
popa
jb
sbb
repz
into
aam
xchg
scas
icebp
out
and
enter
call
outsb
out
jle
adc
jmp
cs
daa
mov
mov
ficoms
mov
jmp
pop
stos
scas
add
dec
sbb
in
dec
cli
adc
out
push
call
dec
lss
fildl
out
ja
pop
stc
xchg
test
leave
jno
cld
sub
push
sub
dec
push
pop
and
dec
push
and
cmpsb
and
out
cmp
mov
push
jle
push
inc
in
scas
sbbl
pop
pop
add
or
popa
out
push
out
lods
sbb
imul
daa
testb
and
push
push
daa
push
ret
xchg
sub
mov
filds
insb
loop
jmp
adc
or
pop
ljmp
mov
sbb
mov
xchg
add
es
xlat
mov
jmp
mov
mov
and
daa
xchg
fwait
mov
inc
loopne
pop
not
jmp
push
pop
mov
std
or
sbb
xor
insb
fistl
add
popa
xchg
fsub
pmaxsw
sbbl
push
push
inc
mov
call
fcoml
push
push
dec
sub
adc
pop
xor
es
inc
loope
imul
lcall
jl
dec
outsl
or
inc
or
xchg
xor
shrb
out
sub
pop
mov
push
scas
mov
mov
mov
clc
dec
inc
add
fcom
scas
xchg
inc
into
daa
fcomps
xor
xor
push
sbb
lret
mov
cmpsl
cld
dec
add
mov
clc
inc
xlat
jmp
cmp
clc
lret
inc
mov
movhps
push
ja
xlat
into
lahf
sar
inc
dec
in
push
add
xchg
xor
xchg
aas
dec
popf
push
dec
popf
xchg
movsb
pop
push
pop
xchg
add
mov
dec
sbb
xchg
pop
mov
dec
subb
cwtl
std
mov
xchg
mov
insl
and
mov
adc
lret
test
cmp
int3
aam
je
cmp
ljmp
insb
lods
sub
popa
adc
push
inc
add
ret
push
jle
scas
jmp
pop
xchg
lds
push
xor
inc
insl
and
stos
pop
int
xchg
sub
sub
pop
cmp
sbb
inc
cmp
dec
mov
and
add
dec
and
js
daa
xchg
dec
inc
aaa
dec
push
leave
cmova
imul
gs
sub
fiadds
fldenv
xchg
adc
and
sbb
or
int
push
sbb
or
cmp
jecxz
xor
stos
out
out
jmp
sbb
jmp
and
and
adc
lcall
out
aad
out
pop
mov
std
sub
sub
pop
call
lret
gs
and
sub
sbb
xchg
out
stc
or
xor
cmp
jmp
int3
daa
mov
cmp
popa
dec
ljmp
loopne
xlat
sbb
shll
sahf
push
inc
test
sbb
adc
shlb
cwtl
icebp
data16
mov
sub
loope
pop
dec
inc
rcrl
mov
mov
push
mov
stos
jne
pop
inc
sti
bound
imul
cmp
mov
repnz
adc
push
lock
cmp
sub
imul
cmp
loopne
dec
add
faddp
or
test
scas
jmp
jno
dec
add
imul
ret
pop
popa
popf
jns
aad
and
pop
mov
out
inc
pop
add
add
outsl
jle
jae
das
mov
lret
daa
mov
xor
push
push
insb
daa
lods
mov
les
xor
inc
dec
cmpsl
adc
xchg
push
jnp
mov
add
rcll
adc
in
mov
out
scas
lret
xor
es
inc
into
ds
ljmp
in
mov
out
adc
inc
and
inc
loope
aad
or
dec
lret
add
mov
cmp
inc
fs
xchg
imul
cmp
iret
lds
xchg
into
jecxz
xor
jle
push
adc
xchg
insl
dec
sbb
xchg
mov
mov
je
rcl
cmpsb
xchg
jns
and
into
lret
mov
in
cs
jg
call
mov
jbe
cs
lods
and
aad
lods
adc
sub
movsl
je
std
outsb
cmp
mov
add
pop
ficompl
or
jne
fwait
rclb
cmp
inc
gs
dec
test
imul
xchg
sbb
pop
icebp
and
in
popa
xchg
les
aaa
testb
add
mov
das
das
sete
jecxz
dec
inc
mov
jg
or
push
sbb
cli
ljmp
or
adc
daa
inc
or
cmp
test
out
dec
xchg
xor
pusha
pop
cltd
into
add
xchg
add
mov
mov
sbb
shl
sbb
lret
mov
xor
imul
sti
jnp
lcall
add
cmp
adc
pop
mov
scas
les
adc
cli
cmc
stc
pop
push
popf
sbbl
xor
pop
push
pop
xor
imul
sahf
cmp
je
lock
aas
sub
cmp
and
inc
mov
test
daa
push
pop
sub
inc
cmpsl
xchg
cli
mov
daa
sbb
inc
fwait
jno
jp
movsb
inc
arpl
cmp
stos
mov
popa
ljmp
push
pop
lds
inc
pop
add
lea
shll
jge
outsb
daa
xlat
xchg
jecxz
and
addb
fs
jnp
and
inc
mov
lret
inc
out
cmpsb
push
scas
loope
mov
push
cld
xchg
or
faddl
mov
cs
in
inc
xchg
movsl
popa
jae
popa
cmp
idivl
out
add
test
cmpsb
movb
push
xchg
aad
xor
fsubl
std
call
cmp
adc
sbb
sbb
jb
pop
inc
imul
mov
repz
adc
xor
xor
ja
adc
js
cmp
xchg
or
mov
ret
sub
daa
sub
idivl
xor
movsbl
adc
inc
movsb
stos
xchg
addr16
adc
sub
repnz
pop
sarl
out
dec
dec
pop
sbb
push
push
aad
pop
out
cltd
mov
loopne
cmc
xor
lods
push
cmp
cmp
sahf
cmc
xor
push
xor
adc
aam
push
aas
mov
insb
mov
adc
push
addl
push
inc
push
mov
push
cmovb
data16
mov
xor
and
push
xor
fcomps
xchg
xchg
ljmp
add
push
out
adc
mov
scas
outsl
mov
xchg
mov
aad
popa
stos
stos
icebp
mov
ss
pop
push
pop
jns
gs
test
add
and
repz
lea
mov
cmp
lds
mov
dec
jae
pop
addb
mov
cmp
cmpsb
in
cld
cmp
daa
int3
fcomp
test
std
pop
in
lcall
test
push
rorb
imul
ret
or
cmpsl
cli
mov
pop
out
inc
mov
mov
jne
pop
sbb
mov
push
cmp
xchg
sbb
pop
mov
hlt
fdivrs
fisubs
add
mov
je
sti
xor
sub
sahf
xchg
push
subl
pop
scas
and
loopne
dec
and
into
daa
movsb
pop
std
pop
mov
je
xorb
jb
daa
imul
cmpsl
pop
aad
mov
jns
daa
gs
orl
push
test
cmp
ja
jmp
test
std
jbe
repz
rcll
add
fwait
rcr
pop
repnz
clc
jns
or
mov
xchg
jp
push
imul
sbb
xor
test
pop
cmc
adc
adc
dec
ja
xor
and
dec
pop
stos
lret
es
pop
jg
jle,pn
fstpt
jecxz
pop
adc
aad
call
push
sarl
and
aam
imul
pop
fnstenv
push
popf
mov
adc
inc
mov
jbe
int3
bound
cmpsb
xor
sub
insb
sub
or
rorl
xor
incb
cmp
not
sbb
mov
int3
insb
pop
pop
push
add
addr16
push
in
daa
inc
mov
fwait
loope
sbb
pop
sub
or
mov
add
pop
adc
xchg
pop
push
stos
daa
imul
or
ljmp
mov
sbb
xor
cwtl
cmpl
in
mov
hlt
stc
pushf
into
cld
data16
cmp
popa
rorl
repz
push
ds
jae
sub
mov
cmp
inc
movsb
mov
std
insl
jno
lods
adc
int3
cmpsb
cmpsl
int
jmp
inc
imul
push
sbb
fwait
cmp
scas
mov
aad
aas
in
stos
bound
sbb
or
jnp
adc
jnp
loopne
aas
int
mov
and
daa
xchg
pop
push
or
imul
test
push
mov
insb
daa
add
dec
sarb
hlt
sub
clc
cmpsb
stc
sbb
imul
xchg
lods
jae
mov
and
xchg
stc
std
outsb
add
ljmp
insb
mov
adc
or
shll
push
outsb
jno
test
leave
sub
mov
dec
dec
mov
push
push
cld
xchg
cltd
scas
push
lahf
mov
pop
and
imul
cmp
mov
stc
cmp
pop
popa
imul
xor
dec
out
xor
cmpl
clc
mov
cld
hlt
int3
in
inc
mov
out
cmp
jo
sub
mov
test
push
inc
dec
movups
std
sbb
jne
popa
out
add
jnp
out
insb
pop
push
dec
mov
mov
or
aas
or
or
add
mov
loop
shlb
inc
leave
xlat
pop
aas
imul
lock
cmpsb
lret
xchg
and
mov
pop
xor
pop
outsl
xchg
inc
cli
mov
insb
mov
adc
mov
sbb
xchg
mov
mov
outsb
xor
fstpl
fs
jbe
in
xor
inc
xlat
jae
sbb
pop
sbb
or
pop
and
jl
jnp
outsb
dec
sbb
add
cmp
sbb
sub
sbb
xchg
je
pop
aaa
cmc
and
scas
sarl
dec
mov
push
lods
pop
lcall
mov
adc
dec
loope
fs
and
pop
scas
pop
shlb
loop
adc
call
test
xchg
std
push
icebp
and
aam
dec
popf
pop
mov
mov
add
push
xchg
inc
adc
pushf
mov
lock
shll
mov
bound
xor
push
sbb
mov
inc
adc
jno
and
int3
daa
into
hlt
addr16
mov
cmp
and
xchg
shrl
lds
pushf
jle
sbb
mov
aas
xchg
xor
mov
popf
lret
push
int3
int
je
imul
dec
xchg
movsl
mov
aas
iret
and
insb
xor
dec
out
dec
sbb
fnstsw
fimuls
mov
test
pop
xchg
andl
cwtl
arpl
sbb
pop
call
adc
arpl
sbb
mov
test
adc
cmpsl
push
dec
or
aad
sbb
xorl
outsb
faddl
mov
pop
les
jae
pop
jmp
daa
and
cmp
scas
xor
loope
mov
adc
adcb
jns
jmp
push
mov
sti
mov
ficomps
iret
in
add
or
pop
push
lds
inc
fiadds
add
jg
and
mov
mov
mov
fs
dec
out
pop
insb
icebp
xchg
enter
scas
mov
add
shrb
pop
cmpl
mov
scas
or
lret
mov
inc
cmc
push
push
loope
test
mov
xchg
push
repz
dec
scas
popa
pop
imull
mov
push
xchg
insl
fimuls
enter
push
xchg
adcl
insb
push
cltd
daa
shrb
or
or
and
mov
add
add
shl
sbb
lcall
shll
imul
sub
xchg
or
jo
push
push
in
push
jg
std
test
rorb
loopne,pn
fwait
inc
test
push
inc
dec
add
push
out
out
pusha
mov
sub
std
ss
sbb
push
mov
or
outsb
sub
xchg
and
xchg
push
mov
inc
stc
int3
mov
leave
sahf
pop
mov
das
jmp
imul
mov
xor
es
cmp
inc
sub
imul
loop
push
cmpsb
or
mov
je
inc
sub
repz
mov
cltd
cmp
xor
xor
push
outsl
fcoms
pop
xchg
inc
scas
cmp
dec
testl
pop
popa
repnz
stos
sbb
lcall
mov
ret
ja
out
clc
jno
push
add
xchg
mov
inc
sub
sbb
push
out
enter
scas
cwtl
lahf
stos
and
jb
mov
xchg
mov
imul
call
adc
test
jl
mov
jmp
xchg
mov
sti
insb
jmp
dec
nop
dec
inc
mov
aam
xchg
adc
cmp
push
inc
in
shr
rcl
pop
add
sub
lea
clc
lea
xor
icebp
mov
push
jp
dec
pop
adc
add
inc
icebp
popa
daa
mov
mov
dec
pusha
and
sbb
sbb
xchg
ljmp
push
push
icebp
data16
sbb
cltd
iret
xor
push
jns
daa
movl
mov
push
lea
cmp
popa
mov
rcl
test
hlt
repz
out
sbb
inc
mov
pop
ret
inc
loop
sbb
fsubrl
sti
pop
sbb
icebp
hlt
jge
xchg
jl
jp
dec
mov
and
ss
aad
pop
loopne
loope
push
loopne,pn
repz
xor
cmp
pop
xchg
cmp
inc
push
mov
mov
jmp
leave
push
scas
pop
les
xchg
outsb
jbe
testb
dec
leave
insl
mov
sahf
mov
rcl
dec
fdivl
mov
cmpsl
jnp
ds
fadds
inc
ja
pop
dec
jno
scas
out
jg
and
test
cmp
push
ss
pushf
push
push
push
ss
hlt
fldl
cmp
xchg
ficoms
mov
cli
lahf
adc
sub
sub
mov
rcrl
stc
xchg
sbb
inc
das
in
sub
mov
jnp
hlt
enter
xor
lret
xchg
sub
mov
sbb
xchg
idiv
jae,pt
push
scas
sub
sbb
cmp
dec
cltd
sub
movsl
adc
enter
leave
adc
aas
imul
adc
xor
out
xchg
in
dec
jmp
jge
aam
scas
fidivrs
inc
push
push
jge
push
mov
stos
adc
and
push
and
or
push
and
test
pop
push
mov
mov
js
cmp
sbb
push
inc
fldl
sub
sbb
outsl
xorl
cld
rorb
inc
mov
out
je
mov
inc
dec
cmc
addr16
fnsave
lret
mov
imul
or
adc
xchg
int3
aas
jno
inc
out
or
scas
xchg
cltd
push
sbb
and
test
pop
js
sub
push
jns
daa
das
and
mov
mov
add
repz
mov
dec
or
sti
push
lock
ja
mov
popa
fimull
sub
daa
cld
arpl
repnz
dec
fldl
pop
in
icebp
mov
andl
jl
inc
shll
les
xchg
mov
in
cmc
inc
loope
ljmp
push
jmp
push
aam
mov
popl
leave
out
out
inc
scas
push
sbb
rorl
jle
push
sub
scas
imul
or
in
jbe
inc
mov
push
hlt
xor
insl
cmp
test
loope
adc
pop
and
mov
insb
add
push
call
cld
cmp
mov
test
sbb
xchg
mov
pop
mov
pop
ja
or
push
lds
stc
fisubs
adc
test
and
in
jp
inc
iret
fidivs
into
mov
xchg
jle
stos
push
inc
mov
dec
sub
addl
xor
push
cwtl
mov
lcall
aam
in
fistps
fwait
cld
sarl
std
ljmp
jns
mov
pusha
scas
lcall
pop
mov
pop
es
in
dec
aaa
mov
js
clc
out
push
sub
dec
add
push
add
ret
jmp
je
and
test
sub
cmpsb
cmp
sbb
or
enter
rcll
inc
cmp
sub
test
push
lcall
xor
orl
fldenv
cmc
out
and
clc
rolb
mov
cmp
dec
in
sub
cmp
enterw
inc
jno
nop
mov
repz
movsl
popa
mov
int
lods
rcll
ss
daa
mov
sub
pop
jecxz
das
outsb
mov
mov
push
lret
sbb
movsl
push
jnp
insl
cmpsl
sub
cmpsl
inc
adc
mov
repz
sub
imul
dec
push
in
pop
jecxz
je
xchg
or
popa
inc
cmpsb
cld
adc
loop
jnp
xchg
jae
sub
in
mov
add
add
mov
mov
mov
sbb
icebp
mov
out
xchg
data16
out
sub
aam
ret
sbb
mov
xchg
int
push
inc
mov
cmp
jmp
jl
or
cmp
incl
ret
cmpsl
add
dec
pushf
cmpsb
call
mov
sub
shl
test
or
repnz
outsb
jne
popa
dec
push
loope
in
xchg
jmp
fsubl
lcall
jns
or
add
mov
out
daa
pop
scas
inc
fsubl
xchg
pop
lea
jmp
adc
test
xchg
mov
mov
arpl
xor
adc
sbb
sbb
or
sbb
cli
jae
movsb
cld
nop
inc
jb
test
fistpll
cmc
pop
xor
and
iret
leave
mov
push
dec
inc
or
cmp
sub
mov
pusha
cmpsb
mov
popf
inc
insb
mov
andb
out
call
cmc
cmp
in
mov
mov
jp
push
mov
pushf
jecxz
leave
cmp
frstor
adc
dec
or
gs
mov
pop
xchg
sub
divb
fbld
push
jbe
or
lahf
mov
adc
xchg
fisubrl
sti
aaa
outsb
or
repnz
push
jle
daa
bound
push
popa
test
sbb
sbb
addr16
sbb
sub
sbb
jp
or
icebp
in
inc
or
pop
inc
stos
in
jl
sub
arpl
fcompl
mov
sub
sub
fistpll
sbb
repnz
pop
call
dec
stos
adc
inc
sub
pop
jle
cltd
jmp
sbb
push
fs
les
sub
xchg
pop
ds
jns
or
jle
mov
ljmp
pusha
push
and
or
cmp
decl
into
fildll
dec
out
popf
cmp
inc
xor
daa
and
or
jp
push
add
into
shrb
adc
inc
inc
insb
mov
mov
or
test
lea
fs
punpckhwd
or
pop
xor
sahf
cs
pop
lret
clc
orb
pop
movsw
jmp
imul
inc
shr
adc
movsl
scas
or
push
cmc
mov
in
pop
nop
fs
repnz
or
or
mov
jmp
xor
lea
push
fld
xchg
gs
inc
or
jmp
or
lret
adc
dec
dec
rolb
nop
daa
add
pop
outsb
mov
out
je
aad
add
push
mov
pop
sub
push
mov
sbb
mov
gs
mov
add
jmp
xorb
std
jmp
xchg
scas
je
xchg
ss
cmp
cmp
cmc
jns
addr16
jecxz
leave
xchg
or
sbb
add
mov
lea
and
mov
xchg
jae
mov
sbb
xor
inc
push
add
cmp
cmp
dec
stos
ss
scas
pop
leave
add
jle
outsl
mov
shrl
jno
adc
mov
and
nop
jp
and
subl
xchg
xor
daa
and
mov
pop
cli
ljmp
and
mov
std
push
adc
push
sbb
pop
mov
rorb
mov
stos
inc
ds
xor
sbb
cmp
push
fdivl
mov
fwait
in
xor
sub
js
inc
movntps
mov
loopne
dec
mov
dec
popa
add
xchg
ss
ret
out
add
cmp
pop
push
rcrb
cmp
xor
in
fnsave
sub
mov
fsubrp
cld
cs
inc
mov
ja
sbb
movsl
fidivl
movl
adc
add
int
rorl
dec
cmp
push
arpl
imul
stos
aad
sub
push
inc
ljmp
inc
mov
xchg
push
jmp
adc
lock
stos
lahf
fnsave
call
in
in
inc
test
pop
cmpsl
pop
aam
jmp
mov
aad
cmc
jae
icebp
mov
push
out
and
push
cmc
cs
pop
add
adc
std
lock
daa
dec
sub
add
mov
jae
fmuls
fwait
in
push
loop
loop
or
cld
jg
cmp
adc
inc
icebp
adc
decb
xorb
mov
add
xor
sbb
ret
lret
movsl
mov
int
mov
adc
mov
inc
int3
pop
cld
movsb
jbe
incl
mov
andb
or
xor
outsb
dec
fwait
xor
aaa
ret
outsl
cli
mov
jnp
fisubrs
or
stc
adc
rorb
insb
mov
mov
sub
icebp
daa
lods
mov
xchg
ljmp
push
pop
inc
sub
sbb
jne
jge
or
cmp
cmpsl
aaa
push
or
ss
push
dec
data16
mov
xchg
sbb
inc
loope
jl
or
push
fs
or
mov
adc
mov
or
movsl
lret
dec
loopne
mov
pop
pusha
int
cs
cld
data16
mov
in
or
inc
inc
loop
push
push
xor
frstor
loope
outsb
jne
addr16
lret
or
cmp
shl
int3
lret
sbb
outsb
xchg
fwait
xchg
sub
int
into
pop
or
inc
mul
ljmp
loop
cmp
fidivl
mov
les
int
push
mov
jbe
sub
mov
add
xor
lea
push
add
mov
lea
jno
out
fists
sarl
addr16
cmpsb
or
insb
jns
out
xchg
xchg
clc
rorb
or
cld
cmp
or
xchg
and
fmuls
mov
push
into
cwtl
or
cmpsl
add
or
aam
push
inc
and
mov
repnz
add
arpl
mov
subl
xor
fmull
test
or
add
lahf
or
or
jge
push
jns
fmull
out
ljmp
or
fisubl
int3
or
push
xor
dec
pop
inc
jmp
cmp
xchg
pop
lret
mov
cltd
push
xor
and
or
or
test
mov
cltd
jp
push
jg
or
or
mov
push
add
sbb
lcall
xlat
sbb
loopne
push
or
popa
outsl
movl
out
lret
stc
inc
push
icebp
dec
rorl
mov
push
push
das
sub
inc
or
mov
cmp
jo
push
out
pop
sbb
or
insb
and
dec
sub
dec
or
rcll
fcoml
sbb
imul
pop
xchg
and
or
ljmp
xor
sbb
sub
push
mov
mov
int
in
inc
and
jne
jnp
add
add
sub
inc
jb
mov
shrl
mov
cmp
inc
movsb
jp
jge
outsl
push
push
jnp
add
sbb
hlt
scas
arpl
in
push
jp
jmp
pop
or
in
js
decb
int3
lcall
loopne
lds
cld
mov
data16
jecxz
out
lods
lcall
sbb
dec
add
sbb
stos
imul
in
data16
not
push
xor
jmp
mov
ljmp
imul
sahf
and
dec
lods
sti
dec
and
push
or
inc
dec
pop
cltd
push
das
pushf
mov
sbb
sub
xchg
xor
jge
and
push
repz
faddl
mov
or
adc
js
adc
sbb
test
sbb
cld
lds
hlt
lcall
or
aad
push
int3
pop
xchg
mov
dec
mov
jp
add
push
mov
and
test
xchg
fstp
push
pop
or
adc
inc
mov
cs
scas
and
or
xchg
jnp
mov
ret
fsubl
aas
or
sub
push
roll
je
or
cmp
mov
cmpl
out
sub
outsl
xor
or
stos
xor
mov
xchg
jmp
inc
xchg
bound
fldenv
sbb
xor
pop
push
or
or
test
rorl
inc
bound
add
or
out
aad
or
call
push
adc
mulb
push
in
pop
int
sbb
rorb
xor
add
sub
push
xchg
lcall
lret
adc
pop
sbb
loopne
pop
jge
shrb
movsl
aam
jno
sub
push
jnp
jl
adc
imul
xor
dec
and
add
les
fwait
in
and
cmpsb
jne
adc
push
and
dec
in
pop
lods
fists
and
pop
or
jp
xor
mov
cld
lret
adc
sub
idivl
pop
cs
cmp
xor
lret
scas
mov
mov
outsl
or
idivl
fwait
add
sub
arpl
aam
or
pop
jne
je
jno
or
test
lret
adc
add
xchg
push
in
orb
lods
and
fs
ja
shr
stos
jg
sbb
inc
pop
xchg
int3
jp
enter
jmp
nop
dec
inc
adc
and
stos
push
sar
push
jg
mov
rorl
fidivrs
pop
sub
sbb
fwait
sbb
in
mov
mov
or
mov
xor
and
lods
jno
divl
or
insl
call
rcrl
push
jnp
jno
shr
push
sbb
mov
loop
mov
movsl
push
inc
sbb
lea
push
cwtl
push
or
dec
mov
push
or
push
or
pop
test
inc
jl
or
fs
bound
inc
mov
cmc
inc
mov
or
adc
jb
sarl
cmpsl
sub
sarb
lock
or
mov
or
imul
imul
cmc
jge
and
and
adc
or
jno
and
dec
mov
lock
inc
sbb
stc
inc
shl
mov
xchg
sub
icebp
or
insb
inc
cmp
ds
mov
aaa
xor
add
out
dec
scas
or
test
push
and
pop
or
icebp
jae
loop
sahf
mov
bound
or
roll
fwait
jle
sub
in
or
sub
not
pop
lret
xchg
or
andb
or
xlat
clc
test
movsl
cmpsb
sbb
ds
and
aas
outsl
or
add
jmp
or
pop
mov
sbb
sti
pop
push
sub
push
mov
xor
dec
adc
push
callw
lods
jp
mov
mov
or
dec
mov
jle
mov
std
mov
mov
ret
sub
mov
cmp
test
cli
loope
pop
pop
push
dec
mov
mov
xchg
or
mov
xchg
dec
imul
lea
pop
insb
mov
or
bound
push
loop
movb
daa
iret
mov
mov
jns
subb
in
mov
adc
popa
movsl
jmp
dec
scas
xchg
adc
jns
sub
push
mov
mov
cmpsb
jno
sti
or
dec
cmp
out
dec
or
std
sbb
fsubl
andb
xchg
lods
xor
sbb
cmp
or
jp
push
and
or
cld
pop
xchg
daa
iret
add
rcll
jle
mov
jnp
sbb
dec
and
cmp
cltd
roll
testb
jmp
adc
rol
mov
adc
loopne
popf
and
ret
sub
mov
adc
cmp
push
pop
jae
addl
mov
jns
scas
fldz
push
mov
xchg
mov
aad
cmp
popa
ss
aaa
pop
push
dec
imul
stc
ret
dec
xor
sbb
xchg
and
es
inc
push
and
pop
hlt
xchg
xchg
mov
sbb
icebp
int3
or
lret
or
sbb
shll
shr
hlt
fwait
out
xor
stos
xor
xchg
sbb
lock
pusha
or
int3
roll
mov
inc
ss
sub
lds
push
repz
jp
imul
sarl
pop
xor
adc
out
cltd
xchg
cmp
iret
mov
pop
mov
inc
mov
push
mov
cmp
in
add
bound
sahf
fldcw
push
dec
sbbb
adc
dec
loopne
into
cmc
dec
in
jae
dec
pop
jp
cwtl
stc
push
enter
pop
mov
dec
daa
repz
push
push
jecxz
mov
add
push
imul
cmp
adc
mov
rcr
int3
inc
test
adc
lret
push
adc
xchg
mov
hlt
scas
mov
scas
pop
ds
mov
mov
aad
in
pop
mov
scas
push
inc
fwait
sub
xchg
dec
pop
jns
inc
mov
stos
mov
push
mov
cmpsb
jo
mov
mov
dec
loope
jmp
push
mov
jne
or
mov
movsl
test
stos
push
sub
stos
das
loopne
sbb
lret
lret
sub
lds
inc
inc
fucomp
push
sahf
icebp
inc
out
je
jmp
push
mov
pushf
push
or
mov
dec
mov
sub
mov
xor
jmp
cli
in
and
push
pop
add
pop
cmp
adc
scas
sub
push
sti
pop
daa
dec
lods
xor
outsb
or
adc
test
addr16
lods
daa
pop
xchg
rcll
mov
iret
jle
mov
out
loope
xchg
call
scas
or
pop
aas
add
push
daa
data16
scas
iret
fidivrs
movsb
stc
cmp
sub
mov
mov
out
or
scas
jecxz
scas
popf
lahf
sbbl
mov
pop
sub
dec
mov
and
idiv
sub
ds
imul
daa
xchg
psubw
dec
mov
adcb
scas
jl
pushf
popf
inc
dec
ss
push
and
dec
inc
mov
sbb
pop
idivl
jmp
lss
out
scas
and
xchg
dec
xchg
out
fildl
jg
fimuls
jbe
jns
jb
sub
mov
dec
inc
repz
add
jmp
jns
leave
sbb
test
mov
mov
fisttpll
add
mov
test
and
adc
mov
mov
cmp
scas
jp
inc
mov
movsb
popf
lock
neg
out
mov
cwtl
mov
jp
pop
sub
jae
insb
mov
mov
out
stos
test
aad
push
fsub
xor
jno
push
popa
daa
in
bound
das
stos
inc
dec
sbb
gs
shl
das
sub
pop
out
cmp
popf
push
xchg
xchg
int3
push
popf
bound
dec
mov
addr16
xor
adc
adc
inc
loop
jl
mov
mov
pop
loop
dec
mov
mov
xor
or
mov
dec
test
iret
push
inc
cmp
insb
push
and
je
jg
loopne
popf
push
cmc
daa
or
cmp
lahf
leave
cmp
dec
jecxz
fwait
daa
inc
das
jmp
jl
xchg
jg
addr16
out
cmp
and
xchg
imul
scas
add
sbb
lds
cld
das
jnp
mov
mov
or
idivb
add
xor
shrd
in
xor
xor
ja
lcall
mov
into
pop
and
cmp
ljmp
loop
inc
xchg
imul
cmp
nop
inc
mov
push
js
inc
jne
pop
cmp
push
js
enter
push
rcll
jge
popa
das
mov
sbb
test
movsl
or
imul
adcb
push
jno
inc
pop
xlat
mov
jle
insl
or
xor
push
push
jns
fcmovbe
jnp
sbb
ss
mov
dec
mov
sbb
dec
pop
mov
sub
mov
add
daa
fcompl
loop
cmp
adc
mov
mov
out
push
push
pop
or
add
adc
mov
scas
nop
lea
fidivrs
push
pop
dec
mov
out
xor
std
and
nop
add
ss
fnstenv
ffreep
in
xchg
inc
ds
sarl
jmp
cmp
mov
xchg
mov
ss
bndstx
cld
lahf
cmp
int3
and
inc
push
pop
sub
in
cmpl
seto
jne
inc
scas
insl
pop
mov
lahf
push
call
nop
jmp
dec
mov
add
or
cmc
or
push
sahf
or
push
or
adc
sub
dec
out
cmp
test
pop
aaa
and
push
pop
mov
sbb
pop
jp
hlt
es
push
push
and
pop
pop
out
jbe
cld
sub
push
cmp
push
dec
jnp
popf
dec
lret
ret
pop
jp
or
test
shrb
cmc
aad
bound
dec
movsl
stos
add
dec
add
in
xchg
and
cmpsb
dec
or
cmp
popf
in
mov
push
or
add
std
mov
rcrl
shrb
aam
dec
mov
xchg
dec
push
push
mov
js
movsl
adc
inc
insb
mov
repnz
mov
mov
popf
pusha
mov
rcr
mov
pusha
xor
mov
mov
dec
jmp
sub
aaa
push
negl
mov
or
dec
dec
insl
in
daa
inc
or
xchg
rorl
ljmp
in
add
lds
std
jmp
sub
or
xchg
jae
jbe
call
or
sub
cld
cmp
aas
call
imul
inc
sub
cmpsb
test
xchg
lds
aas
shr
jmp
je
push
adcl
push
pop
addb
loopne
xchg
push
adc
add
xor
bound
mov
pop
push
xchg
pop
mov
inc
mov
rcll
push
negl
lds
mov
push
cmc
and
int3
mov
shl
pop
fadd
cli
imul
imul
jb
sbbb
dec
or
inc
aad
xchg
pop
or
fimull
mov
sbb
stc
inc
jne
cmp
push
stc
adc
xor
les
pop
out
adc
mov
fisttpl
sub
popa
inc
in
inc
mov
fs
and
push
scas
pusha
mov
or
jecxz
dec
js
lea
jp
jnp
jge
movsb
add
scas
clc
mov
dec
jl
cmp
jo
test
pushf
or
xchg
xor
scas
inc
jne
mov
inc
xchg
mov
push
sub
jae
iret
cmp
fs
jbe
insb
inc
lock
mov
test
int3
lahf
sbb
sbb
jbe
push
test
nop
jns
and
xor
or
or
adc
or
cmp
fistpl
cs
jmp
xlat
outsl
sub
pop
xor
sub
pop
and
sarb
mov
stos
mov
adc
dec
add
pop
std
sbb
pusha
xor
lock
inc
pop
jbe
cmp
xor
fs
pop
imul
int3
inc
sbb
xor
push
xchg
xor
cmp
jns
xchg
adc
xor
xor
insb
xchg
mov
cmpsl
cwtl
mov
dec
loope
jle
dec
add
cmc
mov
movsb
call
je
sub
aad
imul
sub
out
mov
dec
push
xchg
or
cmp
inc
addl
xor
daa
adc
test
xor
aad
xchg
daa
dec
pcmpeqb
je
shl
jmp
xor
jge
dec
imul
in
xchg
lahf
aad
and
stos
enter
movsb
std
ret
addr16
push
sbb
mov
mov
or
popl
pop
imul
sbb
das
scas
hlt
xchg
pop
in
addl
adcb
mov
bound
sbb
dec
out
clc
sbb
test
adc
cmp
negb
mov
mov
xor
mov
mov
xor
jnp
test
adc
jge
loope
shll
dec
mov
xchg
pop
mov
lret
es
lea
std
call
push
xor
pop
cmp
lcall
call
mov
mov
dec
inc
scas
adc
aas
inc
clc
dec
jl
push
push
test
mov
sbb
sub
sbb
push
popa
rcrb
rcll
sub
cmpsb
imul
jecxz
sub
add
sub
call
inc
sbb
xchg
in
inc
js
lock
pop
sbbl
imul
ds
mov
in
out
push
insb
and
mov
inc
int3
daa
mov
imul
pop
mov
jle
jne
mov
mov
ss
lret
hlt
inc
push
push
lds
inc
sarb
jae
loopne
push
sub
aaa
mov
testb
xor
sbb
or
push
jmp
jo
es
cmpsl
xchg
adc
test
mov
divb
push
mov
push
ffree
mov
mov
push
dec
pop
xor
test
inc
mov
adc
out
repz
outsb
imul
jno
fisubs
adcb
inc
xor
andb
leave
cmp
mov
mov
pop
sahf
iret
push
shll
sub
jae
mov
ja
sbb
orl
fmul
adc
jmp
je
mov
pop
jmp
or
sub
pop
pushf
push
out
movsb
js
imul
nop
cmc
inc
mov
hlt
ja
or
cmp
mov
sub
push
and
subl
mov
ror
inc
imul
call
scas
into
loop
pop
adc
pop
inc
pop
jle
dec
adc
roll
xor
insl
cld
cltd
sbb
into
and
cmc
push
xor
mov
sub
xchg
ret
push
xrelease
push
mov
pop
sub
xchg
sub
mov
adc
nop
enter
pusha
dec
mov
jge
mov
adc
push
adc
pop
mov
scas
jp
add
and
daa
stc
sbb
pop
pop
cmp
jp
sbb
or
loopne
rclb
mov
and
xchg
fnstenv
out
aad
inc
insb
jne
push
es
sbb
push
cmp
sbb
enter
sbb
pop
push
push
ficoms
cs
pusha
sub
std
in
push
nop
pop
test
lret
inc
aad
jp
xchg
or
adcl
movsb
std
mov
xchg
aam
jecxz
data16
jno
add
xchg
daa
inc
in
ret
sub
add
lock
xlat
sbb
ret
fadds
add
cld
cmp
cld
roll
mov
sub
ja
outsl
fwait
and
cli
nop
mov
ljmp
ds
mov
daa
xor
gs
fldcw
inc
dec
push
xor
fucomip
xchg
je
nop
imul
mov
loopne
icebp
push
mov
sbb
push
push
and
ds
sbb
jne
scas
ret
lods
pop
sub
cmp
hlt
ljmp
mov
xchg
adc
push
add
stc
je
jbe
cs
sti
jmp
je
bound
mov
inc
jae
and
cmp
mov
mov
loopne
sub
test
imul
shlb
adc
jle
and
inc
out
std
lock
push
int3
jb
dec
jg
mov
xchg
inc
inc
dec
lahf
push
daa
sahf
lock
in
sub
ljmp
xchg
cmp
pop
cmpsb
pop
insb
daa
mov
repz
cmc
sbb
inc
dec
out
int3
push
cmpsb
dec
sbb
mov
int3
adcb
cmp
daa
mov
fistps
leave
mov
mov
cmp
sbb
xchg
je
xchg
pop
push
sbb
xchg
fiadds
stc
into
shrb
popf
xchg
mov
stos
or
cmc
jnp
push
loopne
std
hlt
or
outsb
sbb
hlt
scas
jns
inc
inc
or
inc
in
add
push
scas
pop
fsubrl
movsb
mov
add
cmc
scas
dec
addr16
pop
pop
push
pop
dec
sub
dec
movsl
das
daa
call
fisttpll
inc
xchg
pop
loop
hlt
inc
loop
jmp
scas
imul
adc
loope
dec
cmp
test
loop
pop
ds
out
mov
incb
rcll
mov
hlt
aas
pop
mov
je
mov
pop
sub
or
fcmovne
pusha
cmc
xor
inc
add
mov
daa
outsl
decb
or
scas
stc
pop
mov
xchg
stc
or
pop
adc
xchg
aaa
ljmp
in
sbb
lret
popf
xchg
cmp
xchg
adc
lods
pop
roll
cmp
mov
imul
mov
addr16
frstor
adc
mov
adc
les
insl
mov
hlt
test
insb
mov
test
filds
sub
repz
xor
mov
xorb
and
pop
or
inc
dec
mov
nop
loope
mov
push
ljmp
hlt
scas
xchg
adc
mov
mov
xchg
sahf
xchg
push
push
adc
arpl
cs
out
jg
jmp
push
aaa
dec
xchg
rcl
out
push
mov
bound
cmc
cwtl
sub
fwait
or
or
push
std
sahf
scas
push
hlt
dec
jecxz
adc
pop
xchg
jb
icebp
pop
jle
dec
fs
sub
pop
xor
push
sub
lea
in
sbb
jae
and
xchg
rcrl
push
push
push
adc
jne
mov
je
mov
in
cmp
add
mov
sub
inc
pop
jae
xlat
pop
xchg
xor
jl
sub
cltd
fists
pop
add
mov
je
sbb
pop
ficomps
rorl
sub
fwait
cmpb
stos
sbb
pop
and
push
frstor
and
dec
fbld
inc
jle
push
mov
jbe
popa
mov
daa
pop
push
movsb
mov
sbb
inc
push
cld
ljmp
sbb
xor
xor
inc
clc
hlt
rolb
fistl
dec
or
adc
xchg
mov
push
jae
adc
sbb
repz
cld
leave
dec
mov
dec
iret
adc
mov
pop
aad
mov
dec
mov
mov
daa
or
sub
and
cli
loope
shrl
cmp
jle
setg
jp
sbb
mov
sub
sub
imul
inc
mov
pop
shl
ret
clc
jns
and
or
pop
inc
cmpsl
inc
xchg
fwait
jae
repz
sub
jne
jae
pop
repnz
dec
shrb
xlat
shr
sub
pop
roll
jne
push
cmpsl
adc
sub
jns
mov
mov
shlb
stos
push
dec
dec
adc
daa
sub
jns
lds
xor
aaa
and
adc
dec
mov
mov
mov
add
cmpsl
jle
popf
mov
push
icebp
sub
inc
mov
inc
pushf
icebp
dec
inc
daa
mov
popl
mov
rcrb
xchg
lods
sbb
inc
hlt
cwtl
inc
inc
dec
cltd
fbld
mov
je
sbb
pop
dec
call
push
jmp
cmpl
inc
push
or
sub
inc
add
push
mov
dec
fsubl
jnp
add
inc
aad
pop
aaa
int3
jp
fldenv
outsb
jbe
push
aam
mov
fstpl
pushf
inc
ljmp
push
out
push
jmp
sbb
pusha
in
int3
fcmove
pop
in
push
push
insl
and
and
popa
mov
iret
cmpsl
loope
inc
push
pop
inc
adc
push
xor
fistpl
int
sti
nop
mov
mov
add
add
rep
lahf
adc
pop
popf
stos
adc
cmpsb
int
sub
inc
push
ficoml
xchg
pop
mov
cld
dec
aad
xchg
xorb
dec
mov
cmpsb
add
jecxz
lahf
leave
jmp
add
cmp
push
jae
push
or
arpl
and
dec
mov
imul
movsl
inc
dec
push
cli
pushf
cmp
loopne
push
out
rolb
xchg
cmpsl
push
daa
xchg
jae
jg
ret
mov
sub
out
or
clc
pop
cmpsl
xor
pop
adc
lds
cmp
test
dec
xor
adc
es
out
lahf
test
ror
pop
fiaddl
push
or
imul
sbb
push
int3
daa
movsb
jae
in
stos
push
lahf
and
shl
xlat
outsb
repnz
inc
stos
jae
leave
pusha
movsb
push
aaa
or
xor
or
xchg
fwait
xchg
sub
mov
xchg
jno
dec
sub
cmc
push
negl
sbb
push
scas
xor
enter
sbb
inc
in
xor
cli
add
mov
bound
or
popf
jnp
rcrb
mov
mov
sti
adc
mov
les
pop
adc
sub
mov
jns
pop
bound
andl
sub
lods
push
inc
adc
sub
popf
ror
sub
adc
cmp
nop
jb
outsb
ljmp
enter
mov
loope
dec
in
dec
adc
fidivrs
ja
call
mov
dec
xor
pop
dec
iret
sub
pop
mov
cmp
pop
mov
out
stc
push
mov
popf
cmc
popa
rsm
sbb
and
or
cmc
ror
mov
daa
test
adc
push
lds
loop
jns
push
test
jl
out
ret
movsl
shrl
iret
lds
es
movsl
jecxz
cltd
xor
into
inc
lods
mov
int3
aam
ljmp
pop
std
into
arpl
push
popf
mov
xchg
pop
and
and
inc
fs
jp
mov
mov
cmc
mov
xchg
mov
jge
idivb
pop
push
loopne
mov
mov
add
adc
movsl
jmp
mov
or
mov
scas
lea
dec
mov
mov
fnsave
mov
adc
cmpsb
or
sub
or
test
cwtl
cmc
gs
xchg
or
fimuls
ja
divl
sub
push
sti
push
fcoml
xor
pop
add
or
ja
fstps
and
inc
aas
jno
out
pusha
or
fistpll
inc
or
stc
in
mov
sub
xchg
or
mov
js
cmp
inc
pop
insb
inc
stos
popf
fisubl
jmp
add
jne
push
add
outsl
cmp
fldenv
mov
cmpsl
pop
fstpt
loope
push
cmp
xlat
test
inc
and
cmc
lods
mov
or
cmpsl
outsl
xchg
iret
mov
xchg
and
sub
jl
test
movsb
outsb
or
jns
mov
add
jne
repnz
and
mov
or
ret
sbb
xor
or
dec
test
pop
sub
cmp
cmc
mov
testb
movsb
jne,pn
inc
scas
es
or
adc
or
pop
push
mov
mov
icebp
inc
push
or
dec
xchg
jg
xor
mov
cmp
and
push
inc
mov
add
mov
sub
mov
lcall
dec
sar
cwtl
and
cmpsb
or
addr16
mov
fists
xor
push
test
mov
inc
int3
or
mov
dec
or
cs
sbb
or
jmp
sarl
dec
andb
add
out
ljmp
mov
sub
pushf
mov
cltd
ret
lea
or
aas
popf
add
int3
lods
lret
inc
rolb
jbe
xchg
sub
mov
inc
sbb
mov
nop
iret
or
push
aad
std
sub
lea
jecxz
sbb
mov
cmp
loope
push
or
and
rorb
movsb
loopne
sbb
xchg
test
jo
jae
int3
mov
dec
pushf
popa
inc
ljmp
ffreep
inc
mov
xor
outsl
inc
or
mov
js
lods
repz
adc
jp
sub
ljmp
outsb
add
cli
jne
sarb
xchg
inc
test
mov
mov
stos
jl
or
out
leave
stos
scas
lods
or
in
inc
cmpsb
add
aaa
push
lock
lcall
mov
enter
or
pop
mov
mov
mov
and
shll
icebp
dec
or
cmp
loope
xorb
or
and
push
xchg
and
aad
cmp
testb
mov
sub
and
sti
sbb
mov
fcomps
lahf
or
inc
push
or
jge
rorl
or
gs
push
or
ja
dec
fimuls
ret
test
mov
cmpsl
push
popa
sbb
loopne
div
cli
or
inc
cltd
mov
pop
xchg
punpckhbw
xor
fdivs
cmp
negb
mov
lods
sub
stos
adc
push
or
push
das
or
and
or
out
fisttpll
repnz
lea
addl
mov
clc
push
pop
jmp
and
cmpsb
pop
push
fistps
jbe
daa
mov
stos
push
xor
mov
add
int3
call
jmp
movsl
lea
dec
negl
mov
cmp
inc
je
inc
jmp
outsb
push
cmpsb
rorl
xor
imul
icebp
dec
adc
daa
and
pop
sbbb
or
jo
pop
mov
adc
mov
cmp
sarl
or
push
shll
or
into
mov
jge
or
pop
mov
test
pop
fdivl
mov
wrmsr
aad
push
cwtl
sub
jp
ljmp
ror
mov
cltd
xchg
outsl
sbb
jo
mov
or
rcrb
iret
mov
push
or
rorl
mov
inc
and
xor
add
in
dec
mov
ljmp
lahf
inc
repnz
dec
adc
adc
sbb
inc
jbe
push
push
mov
popa
pop
int3
pop
jg
push
mov
loop
adc
xchg
xor
pop
push
fcoml
or
scas
inc
or
jno
das
shl
sbb
pop
in
into
pop
jge
cs
mov
jns
insb
dec
imul
mov
xor
fists
dec
sbb
mov
lgs
hlt
call
or
dec
leave
adc
xchg
stos
xor
jo
movsl
sbb
and
pop
jno
sbb
or
cwtl
or
xor
jbe
or
cmp
or
or
mov
jg
sub
fstpl
xchg
jmp
stc
xor
cwtl
lret
pop
sbbl
mov
nop
fs
lcall
jne
sub
gs
int
and
mov
sbb
into
ja
or
xor
cld
or
dec
mov
xor
push
stos
js
jno
sub
or
xor
rorb
std
dec
repz
jmp
mov
clc
push
pushf
mov
push
xchg
sbb
shll
cmp
hlt
or
in
jno
adc
popa
mov
mov
jecxz
out
mov
or
pop
pop
mov
pop
xchg
mov
or
xor
add
xor
ret
add
lock
out
mov
jg
dec
add
or
faddl
push
movsb
dec
push
pop
or
mov
test
push
es
out
dec
or
cli
and
jb
xchg
or
into
mov
jae
push
pop
test
int3
arpl
fwait
push
dec
bswap
and
insb
lcall
sub
lea
popf
jmp
aas
jge
mov
mov
sbb
adc
je
mov
leave
adc
sub
pop
ss
test
loop
xchg
or
je
or
ret
scas
shlb
loop
pop
shlb
push
into
out
fsubrl
ret
sbb
push
mov
mov
or
adc
or
mov
pop
inc
adc
in
pop
add
dec
cli
inc
mov
aaa
or
xor
int
pop
and
xchg
or
movsb
addb
outsb
sti
imul
mov
shrb
sub
insb
or
testl
add
test
mov
mov
jo
rcr
call
or
jp
std
mov
and
imul
xchg
or
push
xor
aam
rorb
adc
mov
push
sbb
in
push
icebp
push
push
xchg
in
out
shlb
add
mov
jl
mov
jecxz
sub
jecxz
or
fimull
and
inc
imull
mov
sub
lahf
out
int
and
jno
xchg
mov
sbb
fimuls
or
inc
arpl
dec
mov
add
inc
jbe
test
dec
xchg
fadds
dec
mov
and
and
pop
lea
mov
pop
xor
push
mov
ret
jne
pusha
jg
add
icebp
pop
imul
xchg
xchg
mov
dec
and
sub
add
loop
inc
lret
jbe
shlb
jmp
daa
out
add
pop
ds
sti
push
mov
movsb
daa
mov
shlb
psllw
inc
mov
sub
mov
xlat
lock
ja
imul
dec
stos
pop
cwtl
out
repnz
or
insl
mov
daa
cmp
mov
test
mov
test
loopew
cmc
xor
js
out
arpl
and
scas
mov
mov
loopne
out
jne
das
jbe
das
inc
fcmove
mov
dec
inc
arpl
in
int
xchg
sub
shrb
sbb
pop
dec
fcmovu
leave
scas
or
xchg
iret
jmp
inc
inc
test
es
mov
add
jecxz
dec
xor
daa
aam
dec
pop
mov
lret
or
xor
dec
xchg
inc
addr16
pop
int
clc
mov
pop
mov
mov
loop
xor
mov
or
popf
pop
push
xchg
mov
push
sbb
outsb
out
lods
lcall
pop
out
adc
adc
adc
cld
inc
pop
and
daa
imul
ss
ret
imul
add
pop
push
or
sbb
out
inc
mov
or
bound
andb
sar
push
pusha
push
cmp
or
dec
or
sti
cs
push
pop
add
inc
jns
ret
bndstx
out
pop
imul
daa
popa
aaa
xor
out
or
out
xor
add
stos
or
jmp
xchg
xchg
mov
push
mov
pop
daa
jp
decl
sti
or
and
nop
sbbb
hlt
push
mov
fwait
loopne
insb
xchg
push
jo
or
mov
popl
push
fmull
sub
repz
jp
inc
test
fisubrl
in
sbb
popf
push
inc
pop
insb
jg
jl
daa
jbe
scas
imul
mov
inc
in
inc
lret
jge
loop
mov
mov
sti
and
or
inc
dec
popf
adc
daa
add
xchg
push
pop
add
call
sbb
add
cmc
dec
addr16
loop
jnp
sub
shlb
sbb
scas
stc
push
lea
jmp
out
movsl
adc
mov
in
mov
subl
daa
les
xchg
std
ret
or
stos
jno
iret
adc
clc
sti
cld
dec
lret
aaa
in
push
out
lcall
leave
shl
pop
mov
or
sarb
jg
push
push
mov
cmc
jne
jle
mov
out
sbb
fcmovu
cld
repnz
jae
mov
sbb
idivb
and
pop
inc
aam
mov
daa
lods
mov
and
mov
daa
sti
sub
jne
push
arpl
mov
jmp
imul
push
cmp
shll
movsb
stc
cs
push
les
and
jmp
xchg
dec
jg
scas
or
dec
outsl
xlat
lea
in
or
pop
inc
es
cs
and
adc
out
scas
mov
lcall
xor
frstor
in
sbb
push
or
xchg
hlt
in
xor
push
adc
or
cmp
iret
mov
adc
lea
enter
es
lods
pop
inc
or
and
pop
pop
dec
fldz
pop
xlat
in
repz
xor
lret
out
pop
and
xor
insb
xor
aas
mov
imul
jb
and
xlat
fs
push
stos
test
push
push
mov
push
mov
sub
mov
fidivrl
inc
in
xor
jmp
addr16
inc
stos
aam
repnz
fiaddl
sub
aas
aaa
mov
xchg
jg
and
sbb
popa
aaa
xchg
enter
pop
in
pop
inc
in
cmpsl
jbe
jmp
test
ss
mov
inc
sahf
loopne
add
jnp
adc
popa
sbb
push
mov
int3
in
loop
inc
push
mov
hlt
sub
popa
lea
mov
das
les
sbb
setge
xchg
push
mov
ljmp
lret
cltd
subl
mov
ret
dec
push
dec
sbb
or
mov
int3
push
fadds
xchg
scas
cmp
lahf
orl
mov
mov
push
sub
imul
sub
jae,pn
add
rclb
add
popf
jp
push
lret
aad
mov
inc
jmp
or
cltd
lahf
imul
jl
pop
or
hlt
sbb
sub
push
fsubrl
xlat
pop
pop
cmpsb
mov
mov
jge,pt
or
int
aas
pop
xchg
push
fisubrl
repz
and
jne
out
sbb
adc
call
out
xchg
xcrypt-cfb
cmpsl
mov
call
daa
dec
rorb
jge
jne
jmp
xor
mov
shlb
shl
cmc
movsb
data16
sbbl
inc
xor
xchg
ret
mov
jmp
mov
push
stc
aad
daa
push
fs
push
sahf
add
mov
jne
mov
rorl
or
sbb
mov
lret
aaa
sub
inc
or
outsl
mov
popfw
aad
mov
int3
inc
jmp
notb
pop
inc
arpl
dec
aas
dec
nop
cs
dec
pusha
add
fdiv
sbb
pop
stos
or
cltd
push
cmp
gs
je
mov
xchg
jmp
in
sbb
pop
xchg
sub
push
fucom
mov
and
mov
repz
dec
cwtl
addr16
iret
fimuls
and
jb
rcll
scas
sbb
adc
mov
jg
sub
inc
mov
imul
loope
pop
mov
dec
or
jle
cmc
xchg
xor
mov
mov
ja
cmpsl
lahf
imul
decl
push
xchg
xchg
or
jl
jg
pop
dec
in
dec
dec
mov
cmc
dec
lahf
inc
jl
shrb
stos
push
addb
adc
insb
and
push
js
or
mov
adc
cmp
jb
inc
push
out
les
mov
mov
cwtl
hlt
aam
push
pop
imul
inc
sbb
sub
insb
push
sub
loope
dec
hlt
xor
mov
or
or
xor
cltd
jmp
jne
xor
mov
inc
or
inc
scas
test
out
stc
xchg
jmp
dec
popa
xchg
jmp
jp
lods
js
inc
mov
cmp
stc
pop
cmp
mov
jmp
daa
jmp
dec
jae
fildl
sub
xor
sub
sbb
add
insb
inc
ret
sti
pop
adc
xchg
cltd
pop
aaa
or
xchg
jb
xor
mov
pop
hlt
and
sbb
or
jae
adc
inc
xchg
fwait
xor
xchg
popa
xchg
push
out
mov
dec
and
in
push
pop
xchg
jnp
andl
imul
daa
sbb
scas
jne
scas
imul
push
daa
call
mov
inc
notl
popf
rcll
ja
inc
push
adc
add
ret
stos
inc
insl
jg
and
adc
data16
sbb
ficompl
inc
adc
xorl
cmc
inc
lret
cmp
xchg
adc
inc
push
mov
inc
mov
enter
pop
pop
sub
or
daa
movl
imull
movl
in
push
jg
rorl
push
iret
lahf
and
or
push
lret
popa
scas
xor
dec
mov
pop
adc
insb
add
inc
pushf
inc
sahf
cmp
xor
mov
adcl
or
pop
push
les
cmp
inc
repz
mov
bound
movsl
rorb
mov
testl
stc
push
dec
or
cwtl
mov
adc
lods
cmp
aad
cmpsb
scas
mov
sub
cs
jmp
sbb
in
push
stos
insb
pop
ja
or
mov
punpckhbw
and
mov
adc
or
push
cmpsb
mov
push
int
sahf
cltd
cmpl
mov
and
leave
xchg
out
xor
jecxz
daa
in
repz
test
mov
in
ret
testb
es
divl
sbb
push
popa
and
mov
or
cmp
push
sbb
mov
push
ret
or
add
xor
daa
pop
hlt
data16
in
es
xchg
lret
mov
dec
jmp
sub
sbb
push
xchg
mov
iret
mov
sti
hlt
sbb
dec
or
rclb
lcall
pop
stos
sub
out
xor
jo
pop
shll
or
lret
dec
dec
inc
cmp
or
jo
inc
enter
xchg
std
dec
bound
and
push
add
add
mov
xor
stos
std
inc
sbb
inc
or
xchg
ds
scas
xor
js
xchg
out
sbb
push
jmp
jne
pop
mov
pop
fldpi
mov
and
add
sti
ror
pop
jnp
lods
nop
aad
dec
mov
jl
daa
outsb
xchg
inc
lret
int3
loopne
scas
cs
aad
mov
pop
xchg
push
or
mov
hlt
imul
imul
mov
jbe
push
xchg
testb
or
lds
or
jae
and
in
popa
imulb
adc
cmc
cmp
and
dec
leave
insb
daa
cmpb
jnp
push
dec
inc
adc
cmp
add
jmp
gs
dec
jecxz
outsb
fadds
mov
dec
data16
stc
push
mov
xchg
pop
roll
inc
gs
add
dec
inc
push
inc
pop
cmp
mov
aam
sub
dec
rorl
add
mov
hlt
outsb
imul
cmc
add
mov
inc
inc
int3
cs
xor
jl
push
loope
repnz
je
xchg
sahf
push
sub
dec
xchg
stc
adc
push
rcr
mov
test
or
jg
inc
pop
cmc
nop
xor
mov
lahf
jae
adc
or
movsl
les
mov
imul
push
xchg
test
data16
pop
xor
call
in
jg
inc
add
outsl
adc
jne
enter
mov
push
int3
jno
jmp
fdivrs
daa
mov
pop
sbb
mov
mov
and
and
xchg
mov
ja
jp
adc
rcrb
imul
mov
xor
out
cltd
leave
dec
adc
aaa
add
not
jne
add
imul
ljmp
shr
leave
xchg
and
cmc
xchg
mov
add
sub
in
call
inc
lods
loop
push
sub
ja
add
lret
movb
pop
das
jns
arpl
je,pt
xor
mov
lds
or
mov
xchg
imul
mov
push
enter
sub
cmp
push
out
mov
out
or
push
jbe
into
and
pop
or
mov
roll
shrb
imul
xchg
xchg
mov
test
dec
adc
pop
iret
shrb
mov
xor
jmp
pushf
in
add
ret
popa
cmp
inc
cld
out
jp
lods
push
sti
rcrl
pop
daa
mov
leave
xchg
mov
jae
clc
or
fimull
push
loopne
test
out
test
mov
jne
cwtl
sti
or
cmp
enter
std
xor
test
adc
sub
and
ficoml
imul
xor
clc
pop
idivb
lcall
daa
xor
mov
movsb
outsb
xor
mov
neg
fdivrl
dec
pop
add
bound
add
mov
mov
cmp
aas
adc
add
aad
jmp
mov
ljmp
sbb
add
and
aas
mov
cmp
xor
pushf
cs
lret
stc
sub
adc
sub
xor
rcl
mov
in
daa
out
fs
ds
cmp
push
push
cmpsb
daa
mov
cs
xor
ret
stc
inc
dec
push
pop
mov
icebp
jmp
adc
fadds
outsb
pop
xchg
andl
sbb
dec
js
imul
mov
adc
and
adc
cs
inc
cmp
iret
ret
iret
imul
cld
movsl
sbb
sbb
xchg
popa
nop
repz
dec
out
cmpsl
jns
add
inc
inc
xlat
rcrl
mov
fcmovb
sub
scas
inc
add
aam
loop
mov
fwait
sbbl
fldt
inc
rcrb
cmp
pop
fistpll
push
movsb
lea
ret
ficoml
iret
inc
add
loopne
inc
dec
xchg
bound
shlb
movsb
fwait
xchg
lods
dec
add
lret
test
mov
jecxz
mov
subl
cmp
std
mov
adc
push
out
clc
popf
pop
inc
inc
xor
sub
adc
nop
jl
mov
push
daa
adc
pop
add
add
leave
rorl
int3
pop
sti
fisttpl
mov
out
dec
mov
loope
ds
cmp
clc
mov
lds
arpl
outsl
stos
mov
sbb
push
push
pop
movsl
push
out
xor
ficomps
mov
pop
mov
aaa
pop
les
iret
iret
test
inc
lds
pop
adc
lods
xor
pop
aam
out
pop
push
push
sbb
jno
xchg
loope
in
fcomps
out
rorb
sub
xor
je
scas
jns
push
dec
push
repz
pop
jno
xchg
lret
daa
fmull
repz
inc
lcall
mov
insb
adc
mov
test
inc
in
push
inc
aas
je
jge
xchg
pop
pop
mov
mov
addr16
cld
fdivrl
mov
dec
addl
incl
jge
cmp
lret
jne
mov
rorb
or
pop
xor
test
push
adc
fldcw
popa
adc
outsb
lret
or
daa
cwtl
xor
lock
inc
inc
adc
or
sbb
fs
pop
dec
call
lcall
dec
dec
push
imul
pop
cmc
out
nop
mov
pop
sbb
push
cld
test
testb
cmp
mov
int3
or
es
push
cmp
xchg
pop
out
scas
pop
and
addb
xchg
sub
sub
test
mov
sti
mov
push
adc
inc
dec
jo
jl
add
inc
movsb
insb
cld
add
sbb
pop
xchg
movsb
lea
sub
and
sbb
fprem
xor
jmp
sbb
or
sub
lods
xchg
add
dec
xor
shrl
mov
gs
xchg
or
sti
jp
sbb
insl
ss
inc
cmpsb
lret
stos
call
cmp
jnp
les
leave
pushf
mov
adc
gs
push
mov
dec
sbb
pop
cmp
shll
sub
out
xchg
add
xor
mov
fwait
lret
push
gs
sbb
sbb
aas
scas
out
lret
xchg
add
les
adc
dec
jg
mov
xchg
adc
mov
loopne
push
fsub
arpl
mov
mov
and
jmp
push
mov
lds
leave
xor
push
ljmp
sarl
movsb
ljmp
mov
test
notb
sub
aam
fbld
jo
mov
mov
aam
adc
pop
movsb
xchg
xor
int3
cmp
xor
push
aam
popf
xor
sbb
and
lret
add
inc
sbb
add
mov
adc
dec
in
pop
dec
clc
clc
xchg
jae
jb
sub
loope
xchg
fbstp
test
jnp
xchg
jg
xchg
add
aad
out
outsb
fisubrl
pop
add
adc
xchg
lcall
mov
into
shll
cmc
dec
mov
icebp
sahf
mov
leave
push
jge
cmp
lock
xchg
xchg
mov
les
xor
xchg
xor
sbbb
xchg
or
gs
push
xchg
push
add
mov
adc
xlat
inc
mov
xorb
add
jne
sbb
jmp
out
sbbb
push
aam
lcall
cmpsl
loope
inc
push
jo
adc
sbb
mov
dec
push
outsl
mov
imul
popa
mov
dec
mov
xor
or
dec
or
jge
int3
popf
mov
dec
cmpsb
cli
cmc
push
add
jg
push
pop
aaa
push
bound
dec
loopne
pop
push
sub
or
dec
sbb
je,pt
cmp
movl
push
decl
mov
lock
or
push
add
nop
cmp
std
push
inc
int3
inc
pop
mov
mov
sbb
cld
movsl
dec
jl
adc
and
fwait
cmp
push
mov
push
pop
imul
lret
popa
sahf
pop
cmc
out
scas
sub
fwait
enter
inc
out
xor
jl
pop
stos
enter
sbb
pop
out
pop
add
ljmp
pop
pushf
cld
sbb
out
add
aas
mov
out
and
inc
pop
mov
xchg
shll
data16
stc
out
add
fldpi
dec
mov
mov
mov
data16
daa
pusha
add
add
arpl
or
jae
mov
ss
and
xchg
enter
aaa
cmpsl
aad
mov
js
std
cmp
inc
mov
aam
xchg
cltd
xchg
leave
test
ljmp
inc
pop
push
mov
bnd
mov
and
fs
pop
adc
fnsave
scas
jmp
es
lcall
push
dec
or
in
sbb
xor
sahf
fcmovnbe
mov
or
add
aad
xor
push
or
cmpsb
jecxz
push
or
pop
adc
aad
idiv
or
divl
or
rclb
or
aaa
sub
fsubrs
scas
jl
inc
and
test
lods
daa
sti
out
sbb
inc
aam
mov
xchg
add
jmp
in
nop
into
cld
jns
or
mov
or
jp
fwait
dec
or
or
lds
jl
sub
scas
mov
fidivs
jmp
xor
sub
push
dec
int3
push
cmc
fisttps
inc
and
dec
xchg
sub
or
lods
push
or
ds
or
sub
aam
mov
jne
mov
test
jp
cmc
stc
test
and
sub
int
jno
adc
notb
mov
mov
xor
sub
sbb
in
push
es
lcall
xchg
lahf
xchg
or
xchg
cs
rorb
out
cld
push
nop
inc
pop
dec
cmp
sub
cmc
adc
je
movb
dec
testl
pop
outsb
leave
fistps
pop
std
ds
adc
sub
js
int
pop
or
cmpsb
inc
out
adc
jb
or
dec
cmpb
mov
repnz
fisttpl
ljmp
js
addr16
mov
or
mov
cltd
xor
fucomp
lret
sub
xor
shll
cwtl
xchg
dec
pop
mov
mov
adc
push
orl
pushf
mov
adcl
ds
lcall
bound
sub
jb
xchg
pop
xor
bndldx
shl
pop
mov
cmp
mov
cmp
pop
jbe
or
mov
xchg
and
shll
dec
xlat
mov
inc
pop
inc
aam
lea
cmp
adcb
dec
adcl
pop
xchg
push
cmp
push
cwtl
adc
xchg
dec
imul
adc
sbb
xor
adc
mov
add
pop
lret
jo
sub
push
adc
dec
mov
arpl
pop
mov
int3
shll
inc
inc
push
jnp
dec
jl
data16
and
xchg
mov
loop
fwait
lret
bound
xchg
je
shr
pop
pop
pushf
lret
sbb
ja
and
jecxz
or
pop
movsb
stc
pop
inc
adc
push
and
hlt
loope
and
pop
stos
cmp
push
scas
lock
and
mov
push
mov
add
inc
xchg
les
pop
lods
inc
lret
in
adc
mov
scas
jno
xor
jnp
lods
jnp
cmpsb
jle
fstpl
xchg
iret
inc
test
push
pushf
data16
mov
imul
das
jmp
das
dec
iret
mov
xchg
fcompl
xor
rcr
cmp
xchg
mov
push
loop
inc
mov
adc
insb
movsb
popf
movsl
inc
out
rcrl
adc
mov
adc
push
xor
scas
stc
dec
lea
ljmp
loopne
stos
dec
and
add
iret
jmp
fs
jp
mov
add
mov
xchg
add
sbb
or
enter
mov
pop
or
shl
xor
fwait
cltd
cmp
mov
lcall
push
in
shl
add
shlb
lea
jp
adc
xor
lahf
jmp
mov
sub
sub
popa
sub
jno
or
mov
aaa
dec
xchg
call
inc
add
jbe
push
xchg
cmp
and
and
mov
cmp
out
mov
loop
sub
mov
inc
pop
call
in
push
daa
sub
dec
adc
jl
cwtl
loopne
mov
or
inc
vinserti64x4
out
push
rclb
inc
stc
mov
insb
sbb
push
adc
aad
mov
imul
daa
call
adc
mov
cmp
xor
mov
dec
nop
xor
arpl
sti
pusha
imul
or
jo
scas
add
push
scas
cmp
mov
orb
or
fstpl
xor
icebp
and
data16
daa
ljmp
pop
outsl
outsb
repz
push
sbb
lds
movsl
xchg
mov
js
inc
add
leave
push
jnp
pusha
sub
xor
addr16
aad
mov
mov
adc
push
mov
stos
pop
xor
push
push
cmp
inc
shll
in
sahf
arpl
in
lds
nop
shlb
and
and
mov
add
in
sub
stos
sub
mov
pop
xchg
xchg
lds
out
cmp
in
and
inc
mov
mov
shr
or
fimuls
sbb
cmp
fscale
mov
sbb
daa
dec
stc
add
dec
cli
xchg
bound
sbb
xor
push
adc
sub
inc
frstor
cld
cmp
sbbb
pop
int3
inc
mov
pop
fsubrs
and
sbb
dec
in
leave
cs
mov
out
jbe
inc
scas
mov
mov
divl
call
inc
xchg
or
fimull
and
push
adc
inc
in
dec
hlt
push
adc
add
lret
ja
lahf
lret
insb
push
pop
jne
mov
mov
imul
xchg
push
push
inc
imul
subl
idivb
xchg
mov
dec
out
jg
imul
jg
sub
sub
loopne
int3
dec
mov
add
xor
bound
push
mov
test
div
sub
and
sbb
add
push
push
popf
leave
loop
lods
inc
hlt
sbb
lods
pop
pop
push
sbb
push
daa
shlb
sbbb
repz
xor
sbb
frstor
pushw
jmp
lcall
loopne
xorl
or
xor
mov
jmp
subb
aas
icebp
notl
cmp
push
push
movsl
imul
inc
or
hlt
aad
mov
xchg
add
push
push
sbb
std
aad
testl
rorl
test
in
sbb
sub
adc
movsw
sbb
push
pop
add
inc
jp
dec
dec
lret
roll
jge
imul
mov
xsaves
sub
adc
shll
test
pop
mov
sbb
dec
dec
aam
in
xor
cld
aad
xor
arpl
cmp
je
push
push
push
lcall
outsb
add
push
movsb
std
lahf
adc
lcall
sub
sub
std
test
bound
xlat
out
addr16
dec
pop
aam
shll
xchg
add
mov
dec
lock
pushf
adc
push
pop
pop
cld
mov
imul
data16
cmp
lock
sub
hlt
addr16
out
daa
sahf
test
inc
or
pop
jno
jno
enter
sub
add
shrl
and
mov
sbb
popa
jl
sub
or
cmp
popf
mul
jmp
mov
cmp
out
xor
dec
mov
outsb
push
insl
lahf
sub
lahf
int
sub
add
pop
std
mov
pop
sub
pop
dec
daa
cld
xchg
push
out
rep
imul
inc
xchg
cmp
xchg
dec
and
fwait
int3
daa
cmpsb
push
push
pop
or
sbb
loopne
pop
and
test
fnstsw
pop
iret
inc
aad
scas
rclb
adc
jecxz
out
mov
aad
addr16
sbb
test
pop
push
cmpsb
daa
in
ja
dec
sti
push
fisubrs
pop
jp
push
sbb
aas
daa
pop
xor
test
enter
lods
dec
mul
dec
daa
mov
aam
xchg
sti
imul
sbb
out
stos
cmp
ja
jns
out
xchg
xchg
push
xor
mov
rep
jmp
ret
pop
xor
rcrl
adc
pop
and
pmulhuw
adc
adc
movsb
scas
cmpsb
cwtl
or
xlat
cmp
int3
or
jae
sub
inc
mov
push
cmpsb
je
daa
lock
aas
cmp
add
or
sub
loope
ja
aaa
jns
shl
push
mov
icebp
sub
sbb
xchg
pusha
mov
xchg
adc
fnstsw
cld
in
ss
and
xchg
xor
xor
or
ret
pusha
imul
dec
orl
push
add
dec
pop
xor
inc
add
sub
adc
pushf
jne
aam
mov
xor
test
sub
jns
lods
adc
inc
and
scas
mov
and
push
inc
or
pop
scas
push
mov
adc
call
inc
outsl
lcall
push
mov
in
and
movsl
mov
xchg
daa
imul
or
in
cli
aad
mov
lret
sub
mov
jbe
clc
insb
sbb
mov
adc
xchg
out
test
and
lcall
cmp
mov
jle
push
imul
inc
sub
adcl
adc
in
mov
std
hlt
or
xchg
sbb
lahf
out
add
inc
inc
test
scas
push
sahf
clc
or
jl
imul
stos
popa
and
inc
cltd
paddw
jns
adc
pop
pop
push
mov
add
sub
push
imul
cmc
sbb
mov
sub
test
ficoml
and
cld
push
push
adc
cmp
fcoml
inc
mov
lret
arpl
imul
mov
scas
jnp
mov
in
adc
aaa
cld
movsl
xor
and
push
inc
sbb
push
iret
push
scas
into
push
gs
sub
daa
push
xor
mov
sub
cmpsb
push
hlt
aad
shlb
mov
inc
xor
push
movsl
sbb
popf
mov
dec
push
sbb
xor
push
or
pusha
repz
inc
sbb
xchg
outsb
andb
cmp
or
imul
scas
mov
outsb
cmpsb
nop
mov
negl
sbb
inc
sahf
popa
enter
lds
test
daa
and
idiv
cmpsb
lahf
notl
jmp
call
cwtl
mov
aad
data16
pop
andl
neg
iret
jl
and
daa
inc
mov
lret
adc
push
or
cld
xchg
jl
gs
mov
inc
ja
cs
sub
sbb
pusha
insl
pop
adc
dec
dec
scas
cli
or
pop
arpl
or
fnstenv
mul
scas
pop
daa
ds
pop
fnstenv
lahf
pop
pushf
adc
int3
pop
mov
sbb
adc
push
inc
idiv
mov
cmp
mov
push
icebp
orl
into
or
add
scas
and
pop
ss
push
les
mov
cmpsl
mov
pop
loop
jp
add
sbb
xchg
xor
inc
out
mov
into
jle
mov
leave
xlat
dec
push
popa
ss
nop
mov
cmp
js
bts
mov
mov
mov
jns
adc
out
mov
movl
pop
cmp
dec
adc
mov
leave
adc
in
aam
xor
mov
mov
ret
outsb
and
mov
jle
in
push
hlt
imul
pop
cmpsl
xchg
dec
fsubr
addr16
cwtl
ljmp
int
inc
pop
and
dec
mov
xor
scas
push
xor
lret
sar
imul
push
mov
cmpb
aad
cmp
dec
mov
mov
sub
sbb
adcb
fsubr
pop
xchg
push
shll
dec
fmul
dec
xor
je
jg
cli
adc
test
pop
jbe
mov
stos
push
imul
sbb
pop
mov
cmp
cwtl
cmp
mov
enter
loope
push
hlt
movsb
dec
shl
mov
int3
outsl
loop
jnp
mov
dec
enter
jns
sbb
sahf
insl
dec
jnp
daa
add
xchg
push
fisubl
imul
adc
push
pop
pop
push
std
cmpsb
sbb
popf
jle
push
mov
mov
mov
mov
mov
dec
xorb
pop
jecxz
pop
mov
add
das
int3
inc
rolb
ljmp
mov
and
loopne
adc
roll
in
and
lret
and
jge
mov
in
pop
mov
inc
sub
scas
push
sub
inc
dec
cmp
scas
rclb
adc
add
das
lea
popa
ret
cmp
aad
adc
sbb
movsl
out
std
data16
mov
cmp
sub
test
jmp
test
xor
loope
mov
or
adc
scas
roll
scas
stos
andl
fwait
in
ja
insb
mov
jo
push
or
xchg
loop
dec
mov
ret
push
xchg
pop
shlb
addl
fstpl
insl
dec
pop
in
xor
lods
inc
adc
inc
scas
sti
cmp
fwait
lcall
mov
cmp
sbb
cmpsl
jg
or
mov
aaa
inc
jno
insb
sahf
mov
adc
push
mov
cmpsb
pop
xorb
dec
jp
mov
aad
sub
jae
and
push
jmp
sub
or
inc
frstor
and
push
add
jle
jae
adc
xchg
dec
pusha
inc
xchg
adc
cmp
pop
scas
lea
xor
pop
cmp
pop
push
out
inc
popf
dec
add
shlb
int3
fisttpll
or
sbb
mov
es
in
push
inc
push
mov
scas
insb
loop,pt
les
iret
cmp
cmp
iret
or
scas
push
pop
jno
dec
and
sub
push
push
inc
jle
sbb
mov
pop
dec
ret
jns
cld
ja
sahf
sub
pop
mov
push
xchg
mov
addr16
pop
sbb
mov
in
adcb
imul
mulb
call
push
mov
mov
mov
mov
cmp
or
and
adc
inc
je
jnp
shrb
rolb
inc
pop
or
add
inc
subb
ds
push
pop
ret
scas
fs
fisttps
add
jp
daa
xlat
mov
push
cmp
mov
and
mov
fcoms
mov
push
inc
mov
pop
pop
xor
imulb
xchg
movsl
mov
cmpsl
inc
ljmp
hlt
fdivrl
fsubl
and
lcall
xor
push
cmp
xchg
xor
push
out
lret
cltd
lahf
pop
es
dec
sbb
jno,pt
dec
jmp
xlat
rcrl
daa
jle
and
push
adc
cli
cmp
dec
mov
loopne
jae
fstpt
pop
clc
dec
add
mov
cld
mov
mov
inc
imul
pop
jmp
cmpsl
sbb
sbb
aaa
popa
mov
addr16
aas
mov
fisubl
incb
pop
scas
xchg
jmp
dec
scas
pusha
xchg
mov
adc
add
cmp
rolb
fwait
cmp
or
popa
incb
push
mov
divl
sub
lret
mov
mov
and
insb
cld
fs
sub
sbb
inc
push
mov
mov
inc
daa
incl
cmpsl
out
lcall
mov
and
in
mov
xchg
stos
jle
sbb
adc
js
cmp
xchg
jno
ja
xor
add
inc
inc
push
push
cmp
adc
clc
addr16
in
mov
rorl
sub
pop
inc
rcrb
into
pop
popf
int3
subb
xor
shl
mov
dec
xor
popf
daa
push
cli
jmp
mov
adc
add
push
cmp
mov
mov
cmc
or
mov
cmpsl
daa
mov
xchg
fimuls
inc
pop
shlb
fists
sbb
ljmp
pop
pop
lcall
pop
pop
xor
das
loop
pusha
and
call
fnstenv
iret
and
sub
pusha
mov
mov
dec
jp
hlt
fadd
mov
and
inc
call
jae
insl
push
lods
outsb
pop
popa
jnp
pop
addr16
in
adc
repnz
scas
xchg
or
imul
cmp
add
cmp
mov
mov
movsl
movsb
aas
cmp
adc
cmpb
push
mov
push
sbbl
jmp
pop
icebp
iret
fsub
inc
xor
adcb
jb
sub
daa
outsb
xchg
mov
mov
adc
lock
sbb
stc
dec
daa
jne
xchg
pop
or
and
xchg
out
les
loop
repz
dec
adc
pop
pop
imul
add
xchg
mov
int3
adc
mov
dec
insb
push
mov
inc
mov
mov
xchg
rclb
movsl
mov
mov
xor
rorl
push
aad
pop
pop
sub
gs
sar
out
ss
jbe
in
inc
cltd
sbb
pop
or
dec
cmp
mov
pop
sub
fucomp
fs
mov
in
push
sub
hlt
ja
adc
cs
fstps
mov
leave
xchg
movsb
dec
push
dec
movsb
fidivl
daa
sub
add
xor
addl
mov
sbb
cmp
sbb
jmp
loopne
lret
sub
cmpsl
out
cld
in
xchg
cwtl
fbld
jmp
inc
pop
aad
rolb
lods
ja
and
dec
inc
sbb
xchg
inc
leave
mov
adc
add
or
movsb
mov
add
shll
xor
adc
aam
xor
idivl
pop
or
out
popf
xchg
cmp
inc
adcb
inc
out
addr16
pop
mov
les
pop
std
test
and
in
out
lock
jecxz
std
cmp
xor
insl
jo
mov
dec
pop
xor
xchg
les
dec
cmp
push
xchg
pop
mov
daa
mov
test
mov
push
mov
imul
mov
sub
xchg
mov
add
daa
push
inc
pop
pop
mov
ljmp
xor
icebp
addb
or
pusha
mov
xor
xor
mov
push
in
sbb
call
loope
inc
pop
inc
mov
out
testl
adc
daa
jne
mov
pushf
cmc
fistpll
mov
add
sub
sbb
cli
sbb
pop
xor
pop
push
xchg
daa
or
jne
xchg
faddl
sarb
fnsave
mov
jg
shlb
xchg
mov
clc
jecxz
mov
dec
add
xchg
mov
sbb
cmp
cwtl
hlt
xchg
lcall
int3
inc
push
ja
test
push
push
insl
cmpsl
pop
lret
sub
xor
fnsave
popa
std
mov
inc
jmp
call
test
push
xchg
adc
push
scas
movsb
std
out
dec
arpl
xchg
add
repz
shlb
mov
mov
daa
push
cli
and
add
and
inc
call
jge
dec
icebp
mov
adc
fcomip
cmp
jnp
les
ja
ds
pop
iret
adc
fcoms
in
fidivrs
scas
inc
jo
fs
daa
arpl
bound
xchg
mov
testl
pusha
jo
sarb
push
inc
sub
mov
xchg
aaa
push
cmp
test
xchg
insl
data16
arpl
jb
scas
push
fs
mov
xchg
push
test
push
daa
mov
shrb
sub
gs
fists
adc
imul
jae
mov
cmp
call
ret
jmp
ret
sbb
push
sti
scas
dec
daa
mov
adc
out
and
les
insl
dec
fnstenv
pop
sbb
or
pop
fstpl
ss
iret
xor
jns
jle
xor
adc
xchg
and
int3
fucomi
test
out
insb
loope
xchg
mov
jb
push
int
pop
sbb
sub
adc
or
cmc
adc
adc
push
loope
jecxz
mov
divl
pop
inc
mov
int
loopne
popa
sbb
adcl
and
repnz
in
inc
out
mov
and
fwait
test
outsl
xchg
push
mov
push
lds
xchg
xchg
lea
jl
and
adc
adc
leave
cmp
pop
pop
or
and
repz
loop
cmc
mov
push
or
ljmp
out
push
mov
mov
and
or
mov
xchg
jne
sbb
sbb
ljmp
inc
xor
imulb
orb
ficoml
mov
lds
add
pop
pop
enter
in
in
adcl
sarl
inc
das
sbb
seta
push
cmp
adc
xor
imul
jae
roll
pop
clc
cmp
test
std
adc
and
out
lods
in
in
ljmp
insb
adc
push
xchg
sbb
xchg
stos
pop
push
cmp
dec
dec
mov
mov
ljmp
mov
push
imul
int3
aaa
les
js
dec
push
cld
dec
xorl
push
lcall
mov
lret
lds
sbb
pop
mov
filds
or
and
sub
inc
mov
pop
out
inc
mov
aam
sbb
or
jnp
xchg
sub
push
xor
mov
mov
lahf
lcall
inc
scas
mov
fnstsw
cld
jmp
flds
daa
movsb
sar
cmp
rclw
xchg
jl
push
je
mov
mov
mov
adc
jmp
hlt
xor
je
sub
pop
int3
or
pop
xchg
std
call
push
or
inc
sbb
or
int3
mov
and
jae
dec
xor
adc
popf
cmp
inc
dec
and
out
xlat
pop
sbb
test
mov
sub
jecxz
fildl
push
rcrl
mov
shlb
scas
cmc
xchg
dec
jae
stos
loop
xlat
xor
push
dec
cmp
pushl
xchg
ret
divl
fmuls
repnz
lods
clc
pop
or
cmp
notb
bound
mov
popa
lods
es
fstpt
popf
loop
aaa
xor
or
test
js
icebp
mov
xchg
or
jo
les
sahf
xchg
cmp
fsubr
dec
hlt
inc
out
mov
rorl
aaa
mov
lret
or
or
pop
and
pop
push
in
xlat
xchg
cmp
jl
inc
cmc
in
mov
dec
inc
iret
sarl
jb
adc
inc
sbb
xor
inc
loop
mov
cmp
cmpsl
xor
push
roll
pop
jg
pop
xchg
mov
xchg
cld
cmc
sbb
jecxz
or
xchg
mov
fldl
pop
inc
das
cmp
inc
fisttpll
jo
cmp
pop
push
std
loop
cld
add
insl
inc
test
jne
popa
mov
mov
pmaddwd
mov
ss
insb
and
pop
imul
ljmp
out
and
xchg
fistpl
les
adc
add
les
or
push
aas
push
cmpsb
out
notb
sbb
or
dec
dec
into
popf
xchg
add
test
scas
xorl
dec
out
mov
or
ljmp
push
sbb
pop
lea
xor
jbe
adc
daa
add
sub
and
icebp
push
shlb
in
and
pop
jno
in
leavew
jecxz
rolb
mov
jb
test
dec
adc
cmpl
inc
inc
pop
repnz
and
push
orl
xchg
inc
hlt
xchg
hlt
jne
xchg
sbb
adc
cmp
xchg
or
fwait
push
mov
imul
jmp
lcall
movsb
pop
mov
xchg
add
sbb
and
or
jl
fimull
cmpsb
addb
push
and
gs
push
sbb
xor
sti
int3
leave
arpl
sbb
addl
push
mov
lret
xchg
inc
cmp
xchg
inc
sarl
adc
out
iret
xor
lahf
popl
bound
xor
daa
aad
lcall
sbb
xorb
jecxz
mov
out
pop
xor
pop
sub
mov
or
xor
insb
daa
int3
adc
movhps
fidivs
leave
push
dec
mov
or
inc
push
scas
dec
aad
out
pop
xchg
push
movl
repnz
loope
test
push
outsl
dec
jmp
xchg
xchg
xchg
lahf
dec
inc
je
shr
cmpsb
jae
addr16
orl
pop
cmp
lds
mov
fld
stos
adc
and
adc
cmp
int3
aam
xchg
daa
fstps
xor
mov
addl
and
ficoms
sbb
stos
pop
sub
cld
pusha
in
imul
mov
sbb
or
xor
std
addb
xor
fwait
pop
or
mov
adc
jae
hlt
xchg
popa
push
mov
push
fcomps
aam
aaa
into
pop
iret
pop
xchg
fmuls
lret
and
ret
mov
pop
sub
imul
dec
adc
daa
iret
data16
or
and
sbb
call
cmp
fadd
mov
mov
cld
icebp
in
jae
inc
cwtl
pop
insb
sub
out
loop
or
out
imul
cmpsl
mov
lock
xchg
je
fwait
or
orl
sub
rolb
cmpsb
or
push
jb
lcall
popa
xchg
sar
test
sub
jle
pop
lock
xchg
cmp
or
sbb
mov
lods
dec
fidivs
clc
adc
push
inc
scas
daa
addr16
popf
mov
pop
jb
imul
adc
mov
jo
jnp
fs
mov
repz
sub
cmp
test
sub
ja
inc
mov
in
push
sbb
dec
gs
adc
jno
mov
add
and
add
insb
xlat
jl
dec
movsl
sahf
jl
insb
pusha
jns
loope
xchg
xchg
add
sbb
fcomp
push
dec
sbb
insb
inc
filds
cld
dec
xchg
sbb
lret
push
lods
cmp
daa
push
aas
ss
sub
jmp
es
test
push
je
pop
push
mov
movsb
or
loope
std
push
rcrl
call
push
xchg
shl
inc
mov
push
mov
dec
test
mov
inc
insb
frstor
dec
jb
inc
rolb
jns
pop
mov
lahf
push
cmpsl
orl
pop
cli
ja
dec
lret
outsb
or
dec
outsl
dec
lret
and
out
pop
je
inc
or
enter
pusha
cpuid
mov
push
popa
cmpsl
scas
inc
mov
addr16
mulb
adc
xchg
lds
push
int3
in
jns
pushf
gs
pop
fisubl
pop
cltd
adc
movsb
subl
mov
mov
jns
adc
sarb
cmpsb
push
mov
shl
add
add
sub
mov
jnp
scas
pop
jl
xchg
data16
aaa
adcl
fs
test
adc
sbb
mov
mov
fmull
ds
sub
rcl
push
aam
or
gs
cli
rcll
jg
push
xchg
lds
pop
xor
in
jg
pushf
ds
mov
mov
std
and
inc
sbb
cli
add
jg
mov
pop
xchg
dec
push
scas
pop
xor
les
jg
push
xchg
adc
xlat
hlt
popl
push
out
lods
cwtl
push
aam
ss
jo
movsl
flds
std
orl
jns
push
cmp
push
inc
lods
push
pop
sbb
dec
stos
sbb
test
and
lcall
or
lret
inc
mov
int3
pop
rcrb
lahf
insl
pop
movsb
lea
cmpsb
xor
pop
sub
in
sub
insb
push
cmp
pop
cmpsb
hlt
or
orb
leave
sub
xor
mov
inc
stos
push
or
adc
push
fs
clc
ftst
xchg
jge
pop
adc
mov
aad
je
stos
aad
or
xchg
scas
mov
into
push
aad
cmp
fchs
out
stos
es
jge
jle
sbb
ror
mov
call
pop
pop
pop
scas
leave
ffreep
mov
add
or
mov
mov
jne
dec
cs
hlt
inc
mov
pusha
clts
out
add
adc
jbe
mov
add
in
cmp
lea
mov
push
enter
push
add
xor
dec
inc
xchg
push
out
jmp
xchg
dec
pmulhuw
mov
pmaddwd
outsl
sub
pop
inc
stc
and
int3
mov
loope
pop
inc
int3
pop
jg
jg
mov
jmp
sub
das
sbb
dec
roll
mov
lahf
stc
mov
cmp
pop
outsl
add
divb
mov
into
sbb
sub
daa
mov
mov
add
push
mov
push
fimuls
dec
sbb
jb
mov
daa
loope
xchg
push
ja
test
pop
jno
mov
ljmp
xchg
test
fstl
or
jmp
push
int3
xchg
mov
nopl
aaa
dec
pop
lds
int
dec
in
loope
call
jmp
sbb
cmp
inc
and
pop
adc
aam
xchg
sbb
and
daa
or
cmc
sub
mov
pop
test
sbb
push
jecxz
pop
rolb
sub
enter
jne
or
psllq
popa
rcrb
nop
sti
push
lcall
pop
adc
jecxz
push
dec
jl
pop
jne
adc
mov
push
gs
pop
loopne
jns
adc
mov
mov
mov
pop
sbb
repz
mov
fisttpl
xor
sub
jb
out
push
mov
jae
out
aas
fnstcw
jno
sub
sbb
loopne
daa
popa
and
pop
pop
adc
push
iret
out
inc
sub
inc
fwait
pusha
mov
out
and
or
enter
fmull
sub
mov
mov
loop
dec
sbb
mov
xchg
cld
mov
cltd
in
imul
lahf
popl
or
ret
cmp
sub
sub
je
gs
stos
insb
sbbl
andl
cmc
sbb
stos
and
xor
shll
pop
and
daa
dec
gs
sub
adc
imul
jmp
imul
clc
out
test
jle
jnp
std
cmp
cmp
cltd
add
push
mov
sub
sbb
pop
int3
std
and
jb
lcall
scas
aam
or
inc
scas
jbe
cmc
scas
and
push
test
xor
mov
inc
mov
popa
push
fistpl
arpl
or
jle
cmc
pusha
jle
lret
daa
stos
pop
mov
pusha
aad
pop
mov
jl
adc
push
outsl
notb
shl
cmp
push
xor
cmp
enter
mov
js
sub
ljmp
subb
int3
cmp
clc
cmp
pop
bound
dec
leave
mov
clc
xchg
and
push
ret
imul
cli
dec
into
inc
icebp
mov
popf
faddl
and
fldl
mov
dec
xor
mov
jmp
adc
mov
cmp
mov
jmp
dec
lret
aad
les
cmp
int
das
pushf
pop
ljmp
fcompl
movsl
sub
push
insb
daa
stos
mov
cmp
mov
dec
scas
hlt
dec
push
cmc
sbb
data16
daa
and
jp
mov
pop
and
shrl
and
xchg
mov
hlt
and
lods
mov
jae
cld
push
cmp
insb
je
or
mov
sbb
xor
je
int3
or
pop
mov
scas
xor
mov
and
daa
cmpsl
leave
test
mov
imul
and
je
xor
jmp
inc
pop
fadds
sti
xor
adc
mov
jnp
fcmovu
pop
dec
test
hlt
mov
or
adc
inc
pop
inc
dec
and
iret
inc
dec
pop
cmp
daa
inc
ror
jmp
test
xor
imul
adc
mov
hlt
sbb
mov
mov
jle
inc
enter
loope
jmp
scas
sbb
add
xchg
cmp
lea
ds
dec
aas
test
or
add
les
pop
jg
pop
aas
andl
loope
mov
cwtl
mov
loop
mov
cmp
sbb
push
mov
das
push
mov
movsb
mov
jg
cmpsl
jns
loop
jno
movsb
lds
lods
mov
inc
mov
daa
out
adc
xchg
lds
mov
mov
pushf
enter
shr
pop
xchg
push
sarb
mov
fcoms
stos
and
loope
mov
mov
push
cmp
inc
outsb
sbb
jnp
ljmp
movsl
mov
sti
sub
cmpsb
push
mov
mov
out
pop
and
inc
jae
shrb
adcb
jne
pop
mov
pop
sub
push
add
push
lahf
push
adc
push
lcall
pop
test
xor
iret
xchg
jmp
scas
mov
mov
inc
sar
sti
and
xor
cmp
std
fsub
push
pop
inc
sbb
nop
in
add
and
push
push
sub
out
cmc
pop
xchg
stc
xchg
test
pop
nop
inc
cld
xor
dec
pop
das
pop
mov
lock
dec
dec
addr16
cmpsb
sub
sub
lahf
mov
sub
add
gs
inc
es
es
sahf
dec
jb
das
or
aam
push
scas
iret
add
popf
mov
pop
mov
iret
or
rclb
shrb
fs
mov
sarb
adcl
jge
mov
lods
testb
vcmpss
cltd
and
leave
xchg
pop
push
cld
pop
aaa
data16
es
push
stc
addr16
stos
sbb
mov
fmull
cld
notl
filds
sub
nop
js
mov
sbb
popa
dec
ljmp
lahf
repnz
daa
pushf
push
jge
and
cmp
cmc
enter
rcr
jno
xchg
inc
aas
fs
stc
mov
adc
inc
dec
sbb
sbb
in
jnp
mov
dec
sbb
or
ss
daa
out
je
cmp
repz
cld
jg
test
in
shl
push
sbb
pop
shlb
sub
sub
fcompl
xchg
out
aam
mov
add
shr
int3
xchg
std
adc
mov
or
call
mov
and
xchg
repz
je
insb
stc
pop
mov
sub
sbb
inc
cmpsl
scas
negl
and
int3
mov
mov
sub
inc
pop
jp
mov
dec
mov
cld
repz
imul
int3
jae
movsb
cmp
dec
ss
ja
fmul
or
and
ds
sub
push
shll
int
popf
loop
pop
rcrl
mov
mov
inc
fcoms
jns
fistpll
out
xor
addr16
mov
daa
in
push
cmp
cmp
sub
cmp
adc
leave
xchg
pop
xor
add
mov
scas
aad
aas
pop
push
inc
mov
loope
nop
jae
mov
push
pop
fnstenv
insb
xor
xchg
xor
inc
mov
inc
push
mov
daa
add
xchg
mov
movsb
pop
pop
enter
daa
lret
imul
jl
adcl
dec
sti
push
xchg
mov
std
fsts
cmpb
mov
test
out
push
incb
test
inc
dec
outsl
and
add
sbb
dec
cmp
dec
sub
mov
add
push
les
xchg
pop
fisttpl
fwait
clc
cmp
sbb
mov
mov
add
adc
jge
pop
insb
mov
andb
imul
lock
sbb
pop
push
leave
dec
cmp
das
lock
dec
add
or
ss
in
je
jle
in
lods
popa
mov
cmp
aam
and
lcall
sbb
imul
testl
sar
test
inc
pushf
dec
xor
fs
dec
dec
xchg
daa
into
xor
inc
mov
adc
cmp
pop
daa
movd
ret
fldcw
stc
jmp
cmp
sub
insb
xor
add
cmpsb
mov
ret
es
es
sbb
mov
aaa
push
jmp
fdivs
scas
xor
cmp
ja
jno
mov
fldenv
xor
call
loop
out
mov
add
out
lret
jno
dec
imul
pop
in
add
sub
insb
xchg
repz
push
out
mov
shll
sahf
adc
or
xchg
dec
push
pop
cmpsb
adc
aaa
sbb
std
test
ds
cmp
out
out
out
add
push
pop
aad
push
shl
or
add
inc
fsubl
jns
orb
or
xchg
int
dec
jnp
ljmp
out
xchg
js
dec
cmp
add
pop
pop
rcr
loope
pop
jp
dec
mov
push
sbb
push
popa
xchg
jmp
jno
add
jg
inc
imul
dec
sub
repnz
mov
and
imul
inc
push
sbb
scas
js
leave
aaa
cwtl
or
push
dec
daa
popl
mov
sbb
xchg
loopne
pushf
adc
pop
imul
inc
in
fstps
pop
inc
add
sti
imul
in
push
popf
out
scas
je
imul
call
xor
dec
jmp
adc
insl
fwait
mov
lods
sbb
xor
call
pop
movsb
lcall
push
repnz
cld
push
pop
xchg
cmp
push
cli
cmpsb
pop
rcrl
lcall
jne
mov
hlt
xor
cmp
test
in
cmp
and
arpl
lret
inc
test
lea
push
loope
add
addr16
loopne
dec
call
daa
and
iret
xor
fwait
and
mov
and
mov
paddd
jnp
mov
mov
jne
hlt
jbe
pop
mov
jle
mov
adc
adc
push
mov
arpl
stos
and
sub
ljmp
outsb
sub
nop
loopne
sar
add
sbb
or
cmpsl
popa
cld
imul
inc
jbe
sub
add
daa
aad
rcll
and
scas
mov
and
mov
push
mov
sub
mov
sti
mov
clc
mov
inc
into
adc
and
sub
pusha
std
out
inc
and
push
xor
pop
pushl
and
mov
jg
movsb
inc
negl
add
adc
or
aas
sbb
ffree
cmpsb
add
add
or
push
mov
test
add
insb
mov
fiadds
adc
das
aad
mov
aam
jle
mov
popa
jns
lret
push
or
add
fidivrs
shlb
ljmp
add
bswap
cmp
xor
dec
call
adc
jecxz
adcl
aas
jae
inc
cmpsb
or
add
or
movsl
or
sti
adc
sub
mov
dec
mov
bound
mov
adc
and
dec
es
add
sub
out
and
pop
insb
fldcw
add
sbb
out
sbb
dec
daa
in
iret
sub
inc
cmp
popa
xchg
jl
shll
enter
mov
pop
add
jo
jecxz
sarl
inc
jmp
lahf
pop
mov
xlat
pop
jg
fdivr
popf
hlt
aas
loopne
xchg
into
cld
mov
das
out
or
xor
xchg
daa
scas
sbb
xlat
xor
push
cli
xchg
inc
push
popf
and
pop
iret
adc
sub
and
jb
cmp
icebp
test
insb
mov
std
popf
repz
out
mov
adc
push
sbb
nop
sbb
cmp
inc
pop
dec
push
inc
test
xchg
aad
jp
stc
sub
lea
cmpsb
jae
sahf
or
mov
loop
lock
push
jb
inc
pop
sbb
enter
adc
or
jo
mov
je
push
fwait
lcall
mov
rcr
mov
mov
sub
imull
and
scas
mov
cmc
xchg
dec
movsl
fisubl
enter
lret
mov
cmp
adc
lcall
or
mov
imul
adc
inc
add
jb
hlt
push
add
sbb
pushf
jmp
xchg
std
inc
sub
mov
es
mov
and
test
xor
mov
dec
dec
nop
xchg
inc
sub
popf
lret
fmuls
push
xchg
cmpsl
fwait
jecxz
adcb
test
fldl
out
cmpsl
outsb
mov
inc
mov
in
mov
lahf
and
aam
pop
mov
mov
rol
jecxz
dec
repnz
and
xchg
pop
xchg
cmp
lock
inc
stos
jmp
call
or
repz
incb
inc
mov
cmp
dec
outsb
adc
mov
aas
jne
inc
xor
push
pop
ds
xchg
jp
jno
ret
xchg
dec
out
out
hlt
jns
or
sub
pop
pop
cmc
cmpsl
adc
sbb
push
fwait
data16
leave
xchg
xchg
inc
in
and
push
add
test
sub
ja
sbb
xchg
sub
push
and
stos
xor
jmp
imull
decl
sbb
ds
lret
sub
jge
ljmp
jl
sub
scas
mov
sub
push
xchg
fdivrs
push
shl
out
jnp
cmp
ljmp
cmovp
lds
add
leave
xchg
enter
jb
fstp
sub
jns
mov
inc
repnz
popa
ror
aad
xchg
rorl
ficomps
ret
mov
jae
xchg
xchg
test
push
ss
mov
sbb
xor
fs
mov
cmp
lock
push
jle
or
sbb
xor
xor
xchg
rolb
outsl
lahf
sub
dec
negb
sbb
lock
ret
adc
inc
je
lret
mov
dec
sub
rcrl
insl
dec
inc
cltd
mov
hlt
jle
push
pop
cmp
xchg
lds
cmp
xor
in
or
jl
cmp
dec
clc
fwait
and
mov
mov
xchg
test
or
mov
or
dec
outsb
sub
stos
fists
ret
cmp
push
mov
xor
xchg
ja
pop
xchg
and
pop
shl
xor
cmp
ds
push
inc
insb
daa
stos
cli
hlt
scas
loope
dec
pop
clc
mov
adc
ljmp
add
push
cmp
jecxz
iret
add
or
lock
popf
sub
setb
xchg
sub
test
aas
lret
in
imull
add
fildl
mov
mov
test
stc
cwtl
xor
int3
adc
sbb
mov
loope
push
fists
sub
mov
int3
or
orb
or
sti
push
fs
add
pop
out
xchg
lret
subl
mov
imul
mov
sarb
lea
fxch
add
daa
cmp
mov
mov
into
insl
repnz
ljmp
push
shlb
lret
or
or
fstl
inc
or
push
insb
or
xor
out
pop
cmp
rcrl
je
or
aaa
int3
xchg
jge
daa
paddsw
sub
movl
xor
scas
mov
fnstcw
or
add
ljmp
cs
test
or
sub
lret
shll
cs
insl
adc
sub
cmpsl
orl
loope
mov
or
or
sub
pop
adc
sub
mov
sahf
or
mov
fistl
cmpsb
or
push
mov
inc
xor
scas
sub
or
popa
int3
jecxz
shll
or
addr16
cli
mov
ljmp
jle
or
ja
mov
pop
ljmp
and
or
or
jno
ljmp
pop
jp
cmp
leave
es
loop
dec
dec
adc
movsl
mov
or
arpl
jbe
in
inc
push
cmp
sbb
pop
jo
jb
xchg
push
movsb
mov
iret
adc
jae
jno
push
leave
xchg
jle
mov
dec
mov
lods
xchg
xor
pop
dec
into
dec
xchg
add
mov
in
lds
rsm
ds
or
into
push
or
dec
pop
push
pop
addr16
push
dec
mov
cli
stc
or
in
push
jle
testb
pop
xorl
mov
jle
push
pop
lahf
outsl
add
lret
dec
xchg
xchg
or
call
lock
xlat
mov
int
leave
pop
daa
fisubl
mov
stos
test
rcll
push
adc
test
jecxz
rcrl
push
xchg
sub
sbb
and
test
push
or
and
push
out
sbb
repz
pop
push
in
mov
icebp
mov
scas
dec
xchg
cs
out
adcb
in
push
xchg
loopne
lahf
imul
nop
cmp
sub
adc
mov
dec
jb
sub
int
and
or
cmpsb
imul
push
sbb
push
mov
or
add
imul
mov
or
cltd
add
mov
pushf
dec
adc
int3
push
or
jmp
inc
mov
inc
push
mov
jo
xchg
mov
fimuls
nop
push
rcll
mov
sbb
cmpsl
lods
xchg
push
push
or
sbb
shr
lock
imul
fistpl
cmp
add
jge
cmpsb
push
std
pop
add
adc
xchg
ret
arpl
leave
sbb
or
outsb
pop
sub
shr
sar
push
ret
test
sub
ljmp
les
cmp
inc
dec
mov
xor
push
cmc
test
sbb
or
inc
imul
jb
mov
sub
aad
sbb
movsb
scas
mov
adc
pop
mov
push
pop
and
fwait
lds
cltd
mov
sub
cmp
mov
push
test
in
pop
and
loope
push
pop
pop
dec
and
sub
insl
or
fstl
repnz
ret
sub
add
fcmovne
loope
mov
outsb
lret
shll
or
mov
adc
rcll
or
sti
sub
ja
dec
mov
test
or
mov
push
std
into
scas
cmp
and
ja
imul
cmp
imul
divl
mov
std
bound
and
jp
sbb
ljmp
sub
mov
dec
add
add
loopne
or
or
and
subl
mov
cld
movsb
sbb
xchg
xlat
mov
mov
push
lods
xor
imul
sub
pop
mov
push
in
mov
jmp
adc
test
rorb
outsl
orb
idivb
jb
jns
ljmp
dec
imul
lcall
sbb
dec
ds
mov
cmp
icebp
shrl
imul
push
mov
shll
mov
sarb
or
gs
cmpsb
enter
or
das
lcall
add
adc
push
sub
lahf
sbbb
les
fsubl
ret
jno
aas
js
mov
xchg
test
jns
push
pushf
sahf
int3
cli
push
adc
push
push
pmaxub
fsubl
test
add
and
jbe
dec
int3
or
ret
or
mov
stos
xor
stos
test
push
inc
lds
dec
mov
sub
inc
fnstsw
xchg
fisubl
rclb
mov
or
lods
adc
cli
or
jmp
lret
sbb
mov
jne
push
call
mov
popa
or
stos
inc
mov
ja
mov
adc
inc
sub
push
movsb
int
xchg
sub
fiadds
cli
add
out
mov
je
jb
push
test
sbb
push
dec
or
ljmp
jno
ljmp
iret
add
cmc
push
ss
aam
sbb
popa
cld
or
pop
arpl
push
ret
lret
imul
cmp
sub
push
mov
dec
xor
jecxz
fisubrl
add
loope
mov
cmp
test
mov
outsb
or
mov
pushf
mov
sbb
les
arpl
push
jecxz
inc
or
add
xchg
mov
cmp
insb
int
pushf
lahf
dec
xchg
push
clc
sbb
sbb
and
adc
push
or
cmp
mov
test
popl
fisttps
adc
jno
test
lret
adc
cld
lret
ret
sbb
dec
movsl
jp
or
andl
cld
mov
out
xor
or
lahf
imul
cmova
jae
lods
or
out
ret
lods
cmpsl
popa
adc
mov
aaa
sbb
loop
clc
or
xchg
call
or
in
add
adc
mov
js
xchg
repnz
or
movsb
mov
movsl
cmc
xor
negl
add
scas
or
add
or
xor
pop
inc
arpl
push
int3
insl
push
fcmovu
daa
movsl
xchg
imul
loope
enter
cli
sbb
int3
insb
lret
rorl
and
in
into
add
sbb
cmpsb
add
push
test
nop
sbb
es
dec
dec
adc
adcl
jp
pop
pop
or
fisubs
aam
or
gs
loope
and
adc
pop
test
mov
loop
addr16
xchg
push
cmp
outsb
sti
mov
pop
xchg
fdivp
es
inc
pop
rcll
dec
push
mov
xchg
aad
adc
inc
xchg
cwtl
iret
mov
out
adc
repnz
mov
jne
xchg
je
or
add
and
push
ret
push
mov
ljmp
add
xchg
into
cmc
pop
pop
jae
sbb
sbb
popf
adc
daa
pop
cmc
or
or
nop
pop
jnp
mov
add
movsb
dec
fistpll
data16
jno
inc
jecxz
imul
pop
inc
jb
enter
pop
data16
ljmp
fldl
dec
cmc
or
daa
mov
mov
shrl
sarb
fdivrs
or
push
jl
adc
daa
scas
lds
aas
rcrl
jb
mov
cld
aas
or
add
mov
ret
pop
daa
sti
mov
adc
scas
inc
cmp
imul
mov
sub
mov
and
add
or
pop
pop
dec
mov
xor
push
incb
aas
and
pop
into
and
mov
jne
and
fs
scas
mov
ja
idivl
add
jmp
movsl
aad
xchg
inc
aam
or
jge
pop
push
mov
dec
pop
hlt
xlat
pop
out
loopne
das
jecxz
jg
clc
xchg
in
out
addr16
je
lea
sbb
adc
call
dec
int
aam
in
pop
dec
push
sbb
stos
pop
mov
sub
mov
push
sbbl
out
mov
jo
insb
popa
and
cltd
push
dec
pop
mov
insl
sbb
pop
pop
cltd
lock
aas
dec
cmp
daa
adc
mov
mov
and
outsl
or
mov
jecxz
sub
cwtl
cwtl
or
dec
push
addl
jne
xchg
xchg
dec
or
jecxz
out
push
test
mov
sahf
daa
pop
or
inc
push
jnp
outsb
or
pop
out
mov
addr16
push
mov
push
or
leave
ficoml
insb
or
pop
daa
movsb
clc
aaa
sub
clc
mov
es
les
cmp
inc
sub
inc
stc
sbb
xor
or
mov
sbb
lods
leave
daa
scas
cmpsb
movsl
push
out
and
shrb
mov
jle
cmp
dec
mov
mov
daa
fisttpll
jnp
xor
sbb
push
xchg
icebp
xchg
mov
imulb
jl
jnp
ss
mov
inc
adc
adc
xchg
mov
pushf
shl
jnp
adc
adc
mov
or
dec
ss
inc
mov
stos
shll
sbb
nop
aas
push
mov
cmp
xchg
cltd
aas
jne
pop
mov
testl
inc
jo
nop
push
jp
rolb
pop
rcrl
sub
xor
movsb
pop
ss
out
popf
xchg
aad
cmpsb
cmp
mov
push
mov
loope
cmpsb
sub
scas
or
adc
adc
jmp
roll
adc
lock
xor
leave
fidivs
mov
mov
pop
xchg
scas
aad
and
daa
loope
enter
fdivrl
nop
mov
or
popa
repz
dec
or
daa
jae
adc
aam
mov
dec
mov
mov
push
cmp
sub
jnp
mov
int
mov
bound
or
loop
popf
mov
jmp
cltd
inc
ret
pop
sbb
add
cmpsl
xor
dec
out
dec
aaa
inc
dec
imul
push
insb
das
inc
xor
aam
push
inc
pop
out
and
sub
or
adc
pusha
loopne
aas
pop
cmp
push
fucomp
jg
jmp
adc
in
pop
add
int3
cmp
mov
inc
mov
pop
loopne
mov
fucomip
xor
cmovno
popf
dec
pop
xchg
aad
nop
out
out
xor
inc
push
negl
push
push
daa
sub
or
mov
inc
mov
test
xchg
jb
pop
loop
sbb
mov
ss
and
clc
dec
jnp
inc
push
arpl
xchg
outsb
int3
sub
popa
or
jle
add
jns
pop
cltd
sub
or
cmpsl
ljmp
xchg
pushf
ss
pop
pop
cmp
stc
push
mov
sub
dec
jmp
mov
jmp
pop
lods
inc
mov
and
in
sbb
fimull
pop
sbb
mov
dec
mov
xor
xor
rorl
sbb
sbb
int3
popf
push
pop
hlt
mov
cmpb
test
push
inc
call
cmp
icebp
imul
movsb
jmp
cmp
inc
adc
jns
test
mov
sbb
insl
std
pop
loopne
cmp
push
add
xorl
mov
lret
push
xor
xchg
jne
push
loop
push
lret
push
mov
sbb
dec
and
addr16
out
sbbl
aam
inc
movsb
push
mov
mov
outsl
adc
jl
and
add
lahf
sbb
lcall
pop
mov
mov
inc
jns
adc
or
loope
fcompl
sbb
jg
mov
sti
cmp
addr16
mov
stc
mov
mov
pop
sbb
insl
push
cmp
in
push
sub
mov
or
call
shrb
stc
cmc
dec
inc
lea
jmp
jnp
out
outsl
stos
leave
pop
cmpsb
test
sbb
sub
cld
or
stc
inc
cmpsb
out
cmp
mov
dec
or
mov
popf
or
clc
mov
pop
gs
xor
jae
inc
cli
inc
dec
inc
sarl
add
lcall
and
pop
xchg
lds
cmp
fs
or
add
cmpsb
mov
pop
imul
sbb
lahf
xor
cmpsl
int
aam
bound
daa
test
xor
adc
leave
in
inc
mov
or
xchg
aaa
xor
adc
fnsave
cmc
loop
pand
out
lea
lods
mov
outsl
das
js
insb
inc
aaa
mov
xchg
int3
sbb
and
out
faddl
mov
js
in
aas
sub
cmp
cmpl
cmp
mov
xor
adc
cltd
repnz
vpackssdw
push
sbb
xchg
sub
inc
push
xor
adc
loop
jb
mov
xor
mov
xchg
scas
pop
cmc
mov
xchg
fbld
cmp
lock
clc
cmpsl
dec
sarb
test
push
incl
cmp
movsl
in
outsb
push
jmp
or
aam
inc
out
push
daa
out
dec
std
inc
sbb
xor
pop
push
adc
insb
mov
das
lds
sbb
addl
inc
mov
mov
sub
sbb
pop
scas
lret
push
icebp
adc
mov
sbb
cmovg
dec
bound
pop
dec
or
or
lds
iret
sbbb
mov
in
and
jmp
fldcw
xor
cwtl
or
ret
and
sbb
aas
fstps
mov
dec
xchg
mov
push
xor
out
mov
fistpl
dec
mov
lahf
add
add
xchg
jmp
add
inc
fildll
mov
lcall
rcll
test
pop
in
sub
inc
popf
lods
pushl
insb
add
xor
xchg
xchg
outsl
jg
mov
xor
adc
mov
leave
cmp
nop
jle
and
xchg
stos
hlt
jnp
or
jmpw
inc
fidivs
adc
ret
mov
ficoml
xor
xchg
dec
mov
jle
jae
lcall
daa
push
xchg
sbb
xor
sub
or
add
pop
add
inc
mov
or
jmp
bound
outsb
test
xchg
scas
inc
fsubs
mov
dec
lahf
push
mov
stc
sbb
out
or
pushf
sahf
add
sub
nop
dec
pop
out
mov
push
xchg
mov
sub
push
cmp
daa
jae
dec
or
sub
xchg
or
into
push
jnp
loopne
dec
arpl
dec
out
and
test
fld
sbbb
test
popa
pop
jne
dec
fildll
dec
push
cmpsl
mov
in
rdpmc
or
fstpt
mov
int3
cmp
xchg
je
pushf
outsb
or
fsubrs
shll
test
mov
daa
jp
out
or
add
add
sbb
xor
push
dec
adc
mov
repnz
cmc
push
mov
pop
out
and
fwait
adcb
mov
jns
cmp
ljmp
gs
xchg
cs
or
testl
mov
in
add
dec
fcomps
cmpsl
test
pushf
fs
fidivrs
in
cmpsl
jo
or
insb
mov
in
in
outsl
sbb
mov
adc
int3
adc
in
imul
push
dec
sbb
rorb
xor
push
xchg
es
xorl
mov
pop
or
movsb
cmp
adc
xlat
lret
imul
pusha
sbb
push
popa
or
push
sbb
std
es
hlt
pop
jbe
add
ds
mov
data16
pop
mov
lods
imul
sub
xor
jg
jbe
aas
sbb
pop
loopne
sub
stos
mov
add
das
dec
pop
or
movsb
or
test
sahf
xchg
fldl
sub
fdivrs
mov
ror
inc
cwtl
sub
cmp
imul
cmc
mov
movzwl
or
outsl
fsts
xchg
lahf
mov
mov
or
inc
insb
repz
adc
movsb
fstl
dec
jle
mov
inc
pop
dec
inc
loope
out
fsts
aaa
ljmp
dec
lahf
jge
lret
fdivrp
sbb
cmp
mov
xchg
dec
rcr
push
pop
adc
mov
aas
inc
stos
daa
adc
and
add
inc
sub
rcll
imul
jge
std
mov
sub
pop
addr16
es
jbe
push
lcall
add
mov
push
dec
adc
sub
dec
mov
movsl
fs
jmp
inc
mov
cmpsb
sbb
cmp
mov
jae
icebp
mov
andb
mov
jp
inc
sub
pop
in
jb
dec
mov
imul
xor
inc
or
dec
in
lock
iret
push
sub
mov
bound
pop
mov
or
out
outsb
out
mov
pop
mov
in
push
push
hlt
daa
or
aam
fcomps
lods
mov
cmpsb
cwtl
mov
inc
aaa
ret
and
sti
test
mov
jle
sar
jb
daa
in
pop
lods
loop
addr16
pop
clc
fldcw
inc
fsubrl
dec
add
jbe
xor
dec
and
arpl
mov
std
mov
xor
mov
scas
sbb
add
pop
mov
inc
cmp
cli
xchg
jnp
cmp
pop
dec
xchg
arpl
cltd
das
mov
fistpl
pop
and
pop
mov
pop
imul
xchg
jbe
ds
out
subl
popa
cs
daa
lods
dec
lods
adc
aaa
movsb
push
push
mov
push
mov
xchg
xlat
out
fimuls
mov
insb
inc
icebp
inc
or
pushf
or
push
push
xor
or
and
jg
sahf
jl
jmp
xor
mov
pop
lret
out
inc
mov
sbb
pop
sub
es
or
dec
or
loope
test
cmc
gs
mov
sub
sbb
mov
sub
call
loopne
dec
je
and
pushf
pop
jne
push
je
fsts
cmp
cwtl
or
imul
adc
sub
mov
lods
ds
push
popf
xchg
hlt
cmp
cmpsb
xchg
lea
or
icebp
add
add
sbb
add
add
add
rorl
inc
sbb
mov
fsts
mov
and
mov
sbb
or
scas
clc
adc
mov
dec
push
dec
call
cmpsl
sub
cltd
mov
shrb
rorb
mov
scas
sbb
and
daa
insb
mov
inc
sbb
sub
aam
adc
scas
mov
sub
idivl
in
or
or
add
lret
out
pop
aas
dec
out
cmc
pop
or
or
iret
cs
mov
xchg
mov
lret
jg
outsb
pop
fsubrl
adc
repz
cmp
xor
push
push
pop
divl
hlt
xor
fsubs
mulb
sub
add
push
sbb
sbb
out
out
jae
jecxz,pn
sahf
sbb
outsl
cs
nop
pop
sbb
stc
and
das
mov
cmpsl
shl
jmp
into
sub
add
mov
cmp
inc
sti
jl
shll
xchg
scas
mov
push
outsl
pop
fisubl
push
aad
mov
adc
inc
stc
dec
les
inc
inc
iret
stos
test
sbb
fstl
scas
jmp
xor
mov
call
mov
iret
cmpl
test
inc
mov
sbb
fs
mov
dec
std
js
fwait
mov
or
or
xchg
ds
pop
into
mov
dec
xchg
push
inc
hlt
and
dec
pop
test
arpl
hlt
pusha
sbb
hlt
mov
mov
add
sbb
jne
pushf
pop
adc
jno
and
xchg
xor
xor
xor
xlat
xorb
icebp
iret
aas
cmpsb
add
ds
cmp
inc
sbb
lret
jne
sbb
push
ret
popa
jae
adc
cltd
cmp
adc
test
rorl
sahf
lret
sbb
les
or
mov
daa
mov
call
aaa
pop
decb
pusha
xchg
je
mov
into
and
stos
or
add
fcmovne
orb
jae
pop
push
xchg
mov
nop
hlt
jnp
das
mov
xchg
add
adc
andl
hlt
jo
divb
cli
sub
sub
pop
inc
sub
out
mov
aam
jmp
mov
adc
sbb
cld
hlt
decl
bound
sbb
popf
push
inc
push
push
mov
mov
in
hlt
cmpsl
inc
mov
adc
cld
push
sub
repnz
inc
add
insb
pop
lods
mov
xchg
cld
leave
clc
inc
pmaddwd
js
out
int
push
or
adc
imul
leave
sbb
dec
xchg
repz
hlt
cmp
pop
test
faddl
sbb
adc
repz
test
dec
mov
dec
xchg
loope
mov
call
popa
or
xchg
loopne
stos
cmp
stc
xlat
ljmp
mov
sub
jmp
mov
jne
loopne
loope
stc
xlat
jp
cld
scas
sub
popl
xorl
push
inc
leave
jae
movsb
stos
fisttps
dec
insl
push
jo
popf
enter
sahf
cmp
lds
imul
cld
adc
sub
in
mov
mov
popa
movsl
jecxz
xchg
out
ds
jnp
cmc
cmp
imul
jne
pop
push
ljmp
inc
aaa
pop
push
xor
icebp
sbb
xchg
push
fsubrp
sub
mov
push
push
inc
out
cld
cs
mov
testl
or
xchg
and
dec
loope
popf
sub
dec
xchg
data16
int3
cltd
xor
pop
mov
dec
or
and
out
add
cmp
push
out
push
bound
lock
xchg
pop
sub
mov
loop
mov
and
dec
jno
or
adc
enter
fistpl
leave
lahf
in
rcrl
cmp
inc
pop
cmovp
das
jb
fwait
addr16
cmp
dec
xor
fisubs
insb
loope
or
adc
adc
outsb
xchg
xor
push
push
shrb
adc
test
push
xor
push
scas
pop
lcall
int
je
aaa
and
inc
or
adc
or
inc
inc
testl
loop
fnsave
mov
xchg
mov
jnp
mov
sahf
inc
out
sub
mov
sub
clc
push
loop
mov
mov
mov
leave
push
out
clc
ficoml
popf
cmp
push
or
mov
lods
dec
std
jmp
and
rcrl
scas
xchg
or
sti
cmpsl
and
xor
xchg
popf
stc
mov
fs
push
loope
inc
lods
or
dec
mov
jae
mov
out
pop
jmp
cmc
or
out
jo
stc
cmp
gs
cltd
jmp
sub
aas
popf
testb
mov
add
shl
je
and
pop
sti
dec
hlt
pop
jae
dec
jnp
pop
adc
push
inc
scas
xor
fs
add
push
adc
jecxz
pop
pop
cwtl
sbb
lds
or
mov
jb
dec
push
icebp
daa
mov
xchg
mov
ffreep
notl
mov
add
dec
out
xchg
xchg
out
mov
pop
cmp
pop
mov
jnp
out
mov
popa
mov
stos
inc
sub
sub
movsl
std
imul
mov
or
adc
pop
imul
shlb
jae
and
loop
scas
xchg
or
addb
mov
aam
inc
dec
popa
and
stos
or
sbb
jns
ds
xor
gs
call
xor
hlt
cmp
and
cmp
push
mov
mov
bound
cmpl
mov
fcmovu
add
cmp
jbe
jg
inc
das
lods
dec
mov
or
xchg
push
imul
daa
das
xchg
sbb
xor
push
es
loop
push
inc
shlb
shrb
inc
push
das
aaa
and
mov
pop
push
push
bound
sub
leave
test
xor
or
pusha
out
sbb
push
pop
inc
xlat
push
outsb
frndint
pushf
mov
and
cmp
push
push
adc
add
jns
daa
pushf
pop
scas
inc
cld
xor
arpl
into
les
mov
add
and
xor
mov
jl
jp
push
popf
pop
xchg
push
inc
es
xchg
test
add
repz
jg
add
adc
movsb
inc
div
inc
cmpsl
out
push
jecxz
mov
lcall
shrl
call
outsb
daa
fcoml
inc
or
pop
in
jo
and
fisttpll
cmp
fcompl
sbb
xorl
push
movsl
cwtl
push
jl
sbb
daa
pop
xchg
inc
and
fucomp
std
hlt
dec
testl
or
dec
mov
sbb
daa
icebp
push
rcll
adc
sbb
inc
repz
mov
mov
mov
mov
sahf
daa
sub
into
cmc
ficoms
cltd
pop
jg
mov
scas
and
mov
jae
mov
push
inc
sbb
aaa
ss
daa
sub
or
dec
fnstsw
fs
cmp
fsub
pop
stos
push
daa
cmp
pop
sahf
scas
aas
pop
mov
mov
movsl
fsubl
mov
xchg
test
cltd
xchg
cmp
out
inc
sbb
mov
jge
mov
imul
push
addl
outsl
cmpsl
lea
daa
dec
test
mov
popa
daa
push
push
pushf
rep
and
andb
pushf
xchg
cmc
mov
lret
lock
adcl
mov
in
sbb
out
stos
inc
rcrl
popf
out
adc
pushf
mov
sbb
mov
repz
fsubp
jge
dec
mov
pop
cmc
cli
fs
xchg
and
leave
or
rcll
enter
jbe
sub
mov
or
dec
inc
adc
inc
ret
xor
mov
mov
or
push
jle
shlb
push
ja
loope
add
imul
cmc
xchg
outsl
mov
mov
dec
push
daa
pop
mov
xchg
sbb
inc
inc
inc
fldcw
push
jo
or
rclb
fimull
stc
repz
xor
fs
sub
lcall
and
pop
push
sub
jno
inc
mov
popf
ljmp
nop
enter
pop
add
out
xchg
rclb
xor
pop
in
lcall
adc
add
inc
sbb
daa
lcall
dec
jns
into
sar
push
nop
jmp
push
push
or
xchg
mov
mov
cmp
jns
out
cmc
push
and
and
repz
outsl
fisubrl
push
popf
pop
pop
dec
cmc
hlt
mov
sub
sbb
cmpl
mov
arpl
mov
inc
push
sbb
mov
jecxz
jle
mov
hlt
scas
and
inc
mov
sub
xchg
cmc
pushf
jns
mov
pop
xchg
pop
xlat
aaa
push
mov
rcrb
xchg
mov
push
xchg
mov
pop
inc
repnz
pusha
nop
dec
pop
dec
adc
and
std
scas
mov
push
xchg
fiadds
sub
adc
pop
call
ljmp
inc
and
xchg
leave
jns
les
rorl
push
mov
pop
aad
sub
nop
loop
pop
iret
mov
shr
xchg
lds
and
ds
ja
test
add
xchg
imul
jnp
inc
sub
stos
sbb
sarb
sbb
sbb
inc
push
adc
dec
pusha
in
cmpb
dec
inc
sbb
sbb
sbb
mov
sub
mov
adc
pop
leave
arpl
stc
cmp
xlat
pusha
mov
push
mov
call
imul
stos
and
jb
inc
mov
inc
add
mov
xor
popf
out
call
pop
and
daa
adc
loope
lahf
aaa
dec
filds
cmp
inc
jae
out
push
xorl
jmp
sbbb
shlb
inc
cmpb
scas
loop
sbb
test
popf
scas
out
dec
frstor
lds
mov
push
or
aad
xor
xchg
sub
daa
int3
iret
mov
popa
add
test
lods
mov
xlat
imul
int3
loopne
out
lds
fldl
add
sub
jnp
jns
loop
mov
push
mov
mov
and
daa
fistpll
cmp
inc
cltd
mov
notl
outsl
scas
and
xchg
lcall
sbb
mov
sbb
mov
pop
pushl
jmp
std
loopne
cld
mov
mov
inc
sbb
lcall
sbb
daa
pusha
xchg
cld
mov
std
lods
push
addl
lods
mov
sbb
pop
int
lods
pop
lods
stos
pmaddwd
sbbb
or
gs
xor
out
mov
mov
add
adc
push
lds
cmp
adc
fs
test
inc
push
mov
in
mov
adc
mov
sub
xor
pop
mov
dec
or
ljmp
mov
add
enter
cld
sub
sbb
inc
dec
clc
addr16
pop
or
jne
mov
xchg
lods
jnp
lds
mov
jle
push
xchg
sbb
imul
test
out
inc
push
stc
xchg
dec
fnsave
push
add
sbb
stos
pop
scas
xchg
mov
sahf
lcall
sbbl
or
dec
fildll
mov
inc
aaa
add
sbb
daa
push
cmp
cld
jns
out
aas
pop
cmp
stos
jae
jns
andb
js
fmul
inc
es
xchg
jmp
repz
dec
shrb
inc
jo
inc
pop
pop
leave
cmc
cmp
push
lea
jne
enter
push
pop
adc
cmp
or
add
popf
mov
std
cmp
add
pop
add
mov
mov
mov
push
xchg
rcrl
std
push
sub
roll
or
push
shlb
pop
mov
fxch
xchg
hlt
push
ds
dec
es
adc
das
jno
mov
mov
add
cmp
adc
shlb
shrl
dec
mov
or
pop
sbb
pushf
pushf
fnstsw
adc
dec
pusha
pop
int
xchg
les
jne
insb
inc
xchg
fsubrl
icebp
sbb
rclb
imul
jns
dec
and
xchg
movsb
leave
pop
dec
jb
mov
push
mov
pop
aaa
sub
mov
sub
mov
pusha
jecxz
mov
int3
cmp
lahf
sub
or
scas
cmp
sbb
jnp
push
pop
adc
pop
add
dec
adc
cmp
aaa
inc
pop
add
inc
xlat
push
push
into
rorb
data16
mov
cmpl
sbb
dec
int
jge
xchg
adc
cmpsb
cmp
xor
popf
ja
nop
mov
sbb
inc
dec
daa
imul
add
daa
adc
ret
scas
sbb
scas
xchg
or
stos
adc
dec
push
fldenv
rcll
popa
movb
push
addb
jae
subb
mov
xchg
loope
gs
push
sub
in
arpl
subb
test
push
leave
outsb
js
out
pop
mov
lock
or
daa
push
sbb
aad
shll
inc
pop
int
mov
mov
std
or
stos
std
aam
scas
mov
xchg
test
xor
scas
pop
cmp
cwtl
pop
cmc
mov
jmp
jae
pop
push
inc
adc
mov
mov
xorb
and
add
push
cmp
test
mov
popf
pop
inc
sub
jecxz
push
imul
cld
and
scas
repz
jmp
inc
mov
mov
xchg
jno
aad
int3
shrb
outsb
cmp
in
test
or
fstpt
mov
ds
fmull
or
jns
cli
aaa
les
xchg
jnp
dec
or
cmc
mov
iret
ja
hlt
mov
pop
sbb
jge
jg
addr16
push
loop
arpl
fstl
adc
addr16
inc
outsb
lret
sbb
shrl
repnz
shrb
inc
jo
pusha
int3
xchg
jo
bound
cli
movsl
mov
les
loope
mov
xchg
xchg
das
scas
leave
sahf
insl
popf
sbb
xchg
rcr
std
pop
jmp
add
lods
scas
movsl
inc
or
dec
aaa
data16
leave
stos
cld
lret
pop
aaa
and
inc
ljmp
mov
xchg
add
repz
jmp
aad
aaa
cmp
fiaddl
repnz
loope
xor
sub
cmp
xor
sti
idiv
sub
pop
add
push
jp
das
test
pop
or
ss
xchg
insb
pop
scas
les
lahf
adcl
dec
xor
stc
imul
daa
aam
mov
into
lret
adc
jmp
clc
jno
dec
sub
mov
mov
push
enter
cmpsb
mov
or
mov
pop
scas
hlt
cmpsb
mov
jmp
popf
cmp
push
sub
call
push
sub
scas
int3
inc
mov
cmp
add
cmp
es
xor
cs
outsl
push
testb
fimull
sbb
xchg
jno
mov
mov
cltd
mov
or
enter
or
sbb
loop
jl
sub
scas
mov
jbe
inc
sbb
jne
dec
fsubs
out
cltd
int
lcall
dec
and
or
sbb
jp
aad
cmpsl
xchg
fs
scas
pop
sti
dec
cli
lds
and
jns
pop
clc
out
inc
mov
xchg
mov
lret
in
pushf
push
gs
subl
enter
sarb
rolb
dec
inc
mov
jmp
std
sbb
scas
lret
push
mov
mull
loop
lods
shr
ror
pop
inc
push
loopne
stos
pop
sub
je
push
sbb
addr16
stc
sub
incb
data16
or
orb
sbb
jno
and
inc
dec
or
loope
rcll
por
jmp
push
fistpll
mov
xchg
inc
clc
sub
mov
push
cmp
dec
and
cmp
mov
pop
and
mov
popf
mov
mov
mov
decl
sub
popf
jns
in
pop
and
adc
stc
xchg
mov
lea
pushf
ficompl
popa
ror
sbb
xor
sbb
in
add
inc
xchg
xor
inc
mov
xor
int
mov
mov
dec
mov
sbb
pop
inc
sbb
xchg
or
mov
push
repz
jbe
call
into
fwait
push
adc
pop
pop
std
mov
in
les
ljmp
mov
testb
inc
fimuls
ds
sub
cmp
push
ja
xor
push
cwtl
jb
sahf
ret
push
xchg
enter
and
add
fistps
repz
lahf
mov
push
pop
cmp
xor
pminsw
cmp
pop
ss
out
imul
leave
cmc
jno
punpcklqdq
xchg
push
add
and
jmp
daa
scas
mov
cltd
insb
xor
sbb
inc
pop
mov
add
inc
cmc
jl
adc
lds
and
dec
popf
ret
fistl
in
xchg
into
or
sbb
inc
xchg
int3
mov
sti
enter
cwtl
jg
jnp
mov
mov
and
stos
inc
pusha
scas
push
notl
pop
jo
pusha
fcoms
jo
inc
mov
cmp
pushf
inc
cld
fildl
or
jmp
aad
cmp
es
daa
lds
push
cmova
out
insb
fisubrl
inc
std
push
cmp
ja
jge
lds
outsb
ret
sti
and
inc
sub
ja
cli
add
adc
adc
mov
cmc
jl
in
xchg
dec
dec
mov
rol
dec
les
inc
cmp
outsl
loope
cmp
push
imul
dec
or
dec
mov
notb
push
dec
xchg
jle
cmp
pop
aas
scas
mov
xchg
mov
ret
js
cmp
test
push
sbb
mov
inc
andl
scas
cmp
adc
push
popl
fucom
mov
adc
and
add
popf
jg
sbbl
xor
sub
mov
fdivl
insb
mov
fsubrs
jl
or
push
sub
in
mov
cmp
leave
sub
adc
loope
jbe
test
cmc
daa
shll
adc
jns
dec
add
scas
dec
repz
leave
std
fstl
push
mov
dec
je
adc
aad
daa
cmp
add
repnz
outsb
aas
sub
shl
lahf
out
addr16
dec
ret
in
out
out
daa
jnp
insl
pop
and
vdivpd
push
fs
mov
push
xchg
lea
nop
fists
and
mov
repnz
aam
push
addb
add
add
xorb
adc
in
push
shrb
xchg
dec
jle
pop
das
pop
call
or
lahf
mov
jno
and
inc
inc
pop
pusha
mov
push
mov
xor
fistps
push
xchg
outsb
dec
sbb
jnp
mov
les
mov
scas
inc
aam
xchg
xchg
pop
mov
sub
mov
sbbl
push
jmp
pop
fwait
dec
test
sbb
push
sbb
cmp
add
inc
or
fmuls
jnp
sub
jne
mov
stc
push
lcall
cmp
lahf
xlat
push
jmp
mov
inc
dec
pop
mov
leave
test
jnp
sahf
cmpsb
mov
push
sbb
scas
addr16
insb
mov
ss
or
and
jns
div
dec
hlt
popa
lds
pop
dec
mov
jmp
imul
call
mov
in
xchg
mov
mov
mov
sub
xchg
daa
add
das
mov
mov
scas
or
fwait
add
pushf
sti
xchg
adc
and
sub
jo
or
icebp
decb
mov
jp
out
mov
stos
shl
out
dec
stos
ds
sub
andl
push
xor
es
sbb
fimuls
lahf
pop
xchg
push
mov
or
inc
xor
jmp
xchg
fwait
loopne
ljmp
xchg
inc
xor
mov
push
daa
gs
imul
adc
xchg
pop
fsin
and
push
aam
cmp
pop
out
movsl
pop
test
imul
sub
fsubl
sbb
mov
add
sub
scas
adc
out
aam
in
jae
movsb
pop
hlt
xor
sub
pop
and
idivl
into
cs
stos
push
daa
out
loopne
popf
pusha
outsl
or
out
jmp
insb
cmp
push
mov
cmovle
cltd
loopne
inc
hlt
inc
jb
cli
pop
lahf
lds
aad
push
push
mov
pop
iret
push
stc
out
mov
inc
cmp
popf
jl
cld
xchg
into
nop
xor
jp
and
pop
pop
push
adc
gs
addb
data16
clc
inc
jno
mov
add
adc
xor
and
daa
lock
inc
test
ljmp
push
adc
adc
jb
mov
mov
mov
adc
mov
xchg
fmulp
add
push
jae
sub
mov
pop
dec
mov
or
lahf
jb
inc
mov
icebp
pop
cmc
xorl
jne
pop
mov
addr16
add
pop
stos
cmpsl
js
pop
jge
aaa
outsl
test
mov
jmp
out
test
sub
pusha
mov
pop
dec
adc
cltd
fdivrl
ficoml
adc
ljmp
imul
sbb
popa
add
adc
pop
sbb
push
ficoms
data16
nop
lea
jge
mov
icebp
pop
pop
xchg
xor
and
cmpsb
inc
sub
ret
stc
pusha
push
or
dec
adc
mov
jnp
stc
xchg
mov
test
and
adc
iret
push
lret
iret
xchg
out
aas
std
mov
ret
popf
xchg
inc
mov
addr16
repz
mov
and
inc
pop
roll
adc
push
cmc
cmpsl
cwtl
pop
cmc
imul
ret
cmpsb
xchg
ds
cmp
cs
jne
or
add
daa
ss
or
pop
lcall
cmpsl
mov
sub
push
addl
jno
and
mov
out
pop
dec
pop
mov
adc
in
sbb
or
mov
inc
push
std
mov
int3
inc
jbe
mov
out
lret
subb
popf
pop
arpl
data16
mov
sub
cmp
jae
jb
mov
je
xlat
adc
insb
loope
mov
sbb
imul
sub
push
pop
mov
and
repnz
aam
sbb
cmovo
xor
push
mov
xlat
fdivrs
sbb
inc
fs
into
jp
lds
push
push
add
xchg
sbb
cmpsl
outsb
push
addr16
inc
scas
lret
mov
or
jae
push
cli
test
aad
mov
sub
lock
push
aad
or
les
scas
or
xor
fmuls
sbb
insb
stos
fnstenv
jl
push
in
xchg
mov
popa
leave
stos
popa
mov
inc
cltd
mov
mov
inc
add
daa
and
cmp
psadbw
fdivl
lods
cmc
popf
sub
adc
out
mov
gs
mov
jns
rorl
std
imul
aam
out
jne
and
or
xchg
pop
roll
pop
mov
ljmp
lahf
inc
fs
imul
push
cmpsl
orl
sbb
jle
arpl
idivb
xor
popf
cmc
and
out
add
daa
stos
dec
test
xor
adc
lcall
hlt
stos
sub
in
sub
and
std
mov
jmp
ret
repz
mov
cwtl
mov
arpl
movsb
pop
xlat
pop
iret
mov
dec
xchg
and
nop
inc
call
dec
movsl
or
xchg
cmp
pop
adc
not
sbb
cmp
pop
cs
push
testl
or
test
or
sar
push
jae
sub
lcall
inc
pop
lret
out
sbb
mov
mov
xchg
pushl
arpl
xchg
cwtl
test
sub
jae
jno
fwait
xor
xchg
insb
and
sbb
cmp
mov
outsl
and
out
shl
adc
push
in
ljmp
cmpsl
push
push
pop
out
cltd
aad
stc
xchg
es
add
add
loopne
pop
and
mov
push
les
aad
sub
ret
xor
icebp
dec
dec
cwtl
mov
cmpsb
add
sahf
pop
adc
out
push
cmp
pop
push
sub
push
movsb
xchg
or
xchg
adc
inc
sbb
in
les
out
inc
sub
inc
fsts
pop
stos
xchg
mov
movsl
stos
push
rol
and
mov
or
insb
lock
xchg
dec
rcrb
in
jae
fimuls
in
and
sarb
add
xor
push
xchg
lahf
movsb
ret
xchg
mov
insl
out
in
outsb
rcll
js
sbb
popa
cmpsl
mov
imul
mov
dec
jl
push
lret
xchg
xchg
cmpsl
stos
xor
xor
pop
dec
imul
pop
out
sub
stos
js
cwtl
xor
add
pop
cmp
adc
push
dec
cmpsl
outsl
es
adc
sbb
stos
ja
add
aad
mov
stc
push
mov
sub
mov
popf
hlt
popf
rolb
pop
sub
negl
inc
scas
xchg
pop
sbb
hlt
das
dec
inc
dec
lds
nop
pop
in
mov
fsubl
les
jg
mov
jmp
cmp
lds
insb
xor
outsl
mov
xchg
clc
inc
adc
sar
outsl
inc
lea
mov
fnsave
ljmp
xchg
jno
mov
scas
movsb
inc
inc
add
inc
mov
pushf
cmp
daa
pop
cs
lods
add
mov
inc
ds
in
mov
mov
imul
popf
lds
arpl
data16
loop
addr16
shl
jmp
mov
pop
dec
cmp
sub
xchg
sbb
aad
cmpsl
insl
sbb
sub
pop
es
adc
in
mov
popf
sub
cmp
jg
sbb
xor
xor
jmp
mov
std
pop
sbb
inc
mov
sbb
xor
test
mov
push
pop
mov
mov
ret
fcompl
scas
xchg
enter
push
setno
mov
jae
inc
repnz
mov
cltd
push
sub
dec
ja
mov
mov
and
or
pop
daa
sbb
mov
std
popf
mov
fisubs
push
shrl
daa
leave
iret
js
out
inc
daa
or
push
mov
sarl
cld
cmpsb
add
sub
rcrl
es
mov
jl
lea
bound
push
inc
sub
jl
dec
sub
sahf
inc
test
in
dec
popa
sbb
scas
stc
shlb
add
sub
push
mov
pop
push
mov
adc
push
lds
jmp
pushf
lods
or
jnp
sub
and
xchg
sbb
mov
imul
insb
and
cld
repnz
js
in
mov
addr16
pop
fwait
ja
mov
or
jnp
adc
adc
mov
inc
xor
jp
movsb
aas
pop
cld
cmp
pop
mov
xorl
lcall
inc
jbe
mov
int
cli
daa
pop
pop
mov
call
sub
adc
sbb
mov
test
jne
push
sbb
std
mov
daa
cmp
popf
or
cmp
xor
jns
out
pop
mov
mov
adc
dec
adc
and
sbbl
xchg
sbb
jnp
popa
xchg
ljmp
out
xchg
les
xchg
push
mov
sbb
sti
shll
or
daa
push
jecxz
hlt
jmp
sarl
mov
inc
movlps
xor
xchg
notl
int3
inc
fwait
les
xchg
inc
xchg
pop
pop
jle
jmp
adc
out
adc
mov
jns
shrl
jae
and
lret
xor
sub
adc
pop
clc
dec
cmp
dec
inc
inc
shrb
push
mov
mov
loope
mov
imul
inc
in
es
daa
jge
imul
insl
cmc
ss
adc
ret
add
pop
in
addb
dec
mov
xchg
inc
xchg
out
push
shll
add
xor
add
inc
iret
mov
mov
push
pusha
lods
repz
cltd
imul
orb
psubsw
sub
daa
ljmp
aaa
hlt
cmpsl
push
sbb
or
adc
fwait
xor
lretw
sub
xchg
mov
mov
hlt
sarb
cmpsl
dec
add
push
or
rcll
sub
xchg
cmp
dec
cltd
cmc
xlat
fisubrs
inc
push
push
xchg
pop
adc
pop
push
lret
movsb
jae
les
in
adcl
in
bound
push
or
push
add
mov
sbb
out
mov
les
fadds
fisttps
and
mov
adc
outsl
pushf
adcb
cmp
push
mov
fsubl
sub
je
inc
xor
mov
mov
mov
gs
enter
pop
pusha
adc
xor
push
dec
mov
ret
scas
mov
adc
push
popf
xor
nop
sbb
push
dec
or
es
mov
clc
sbb
or
or
int3
push
loope
cwtl
enter
inc
icebp
ss
mov
inc
push
inc
jecxz
pop
mov
and
cmpsb
int
cmc
add
fnstcw
jb
push
ja
push
pop
popa
inc
lods
icebp
push
xchg
cmpsl
pop
inc
fcomp
inc
xchg
subl
fisttps
repnz
test
cmpsl
aam
inc
push
rorl
push
inc
xor
add
subl
adc
mov
sub
cmp
popf
rcll
dec
vmulss
leave
inc
fisubrs
jne
xor
lea
mov
push
jg
add
jmp
std
jae
add
jecxz
test
scas
mov
dec
int
dec
out
push
jb
mov
pop
mov
mov
cmp
js
clc
cmp
mov
pop
jmp
movsb
dec
and
addr16
ds
dec
test
xchg
add
push
mov
pop
roll
mov
or
stos
xorb
push
leave
jecxz
jne
dec
leave
jmp
imul
cmovbe
rcrb
sbb
dec
jg
ja
cwtl
imul
xor
daa
aam
fbld
lcall
inc
sub
repz
fdivs
roll
mov
shl
leave
out
xor
cmp
push
xor
sbb
fisubrl
pop
pop
or
xchg
dec
daa
notrack
into
pop
lahf
or
std
mov
nop
aad
cs
mov
dec
adc
testl
in
daa
in
mov
fbld
movsl
pop
dec
int
sub
test
jnp
xchg
or
xchg
push
pop
xor
and
push
cltd
jne
and
mov
adc
mov
popa
xor
out
into
outsl
shrl
xchg
inc
test
pop
adc
insb
dec
outsl
sub
cmp
jp
leave
jns
sub
js
fistps
add
jg
imul
mov
mov
out
call
xchg
nop
jae
pop
push
dec
add
fimuls
jae
push
or
mov
inc
add
iret
mov
inc
mov
sbb
sahf
in
pop
push
cmp
int
ljmp
lret
stos
scas
jns
int
mov
dec
mov
add
test
sub
loope
push
jb
inc
subl
jl
xor
sbb
test
jg
mov
into
pop
ret
scas
inc
push
cltd
int3
popf
cmp
push
mov
in
fidivs
jnp
aad
push
cli
imul
out
mov
rcrb
or
mov
hlt
out
or
enter
push
insl
pop
stc
rorb
or
cltd
lcall
cli
aas
xor
dec
xchg
xchg
sbb
xchg
sbb
les
sbb
pop
jnp
inc
push
popf
out
pushf
inc
and
ret
inc
aaa
add
test
adc
pop
std
daa
insb
cmpsb
in
or
jb
xchg
sub
nop
mov
jnp
mov
cmp
sub
inc
xchg
je
sbb
add
push
mov
mov
mov
mov
aad
lods
push
xor
pop
and
sbbb
aas
cmpsb
and
dec
inc
arpl
push
mull
rcll
pop
out
pushf
aad
push
pop
jnp
cmp
int
push
mov
pop
xchg
adc
mov
cmp
sub
nop
xor
addr16
push
loope
jo
js
dec
inc
rol
pop
add
into
mov
cmp
jns
mov
test
cmp
andb
sub
aam
or
ja
adc
daa
dec
into
in
push
mov
mov
jmp
xor
push
mov
nop
dec
aam
mov
lea
fistps
ja
and
cmp
in
shll
dec
cld
adc
pop
cmc
sub
daa
inc
jne
lahf
popa
sbb
shrl
push
mov
bound
stos
pop
lret
and
dec
push
inc
sub
arpl
pop
mov
pop
aas
daa
push
enter
sub
xlat
and
ja
mov
cmpsb
insl
popf
dec
fcmovnu
rorl
lcall
dec
mov
inc
xchg
sbb
push
pop
lods
jb
mov
movl
push
outsl
adc
repz
pop
xchg
decl
and
and
xor
enter
xadd
and
and
aad
mov
cmp
lcall
add
ljmp
cwtl
ja
fstpl
rclb
jmp
addb
mov
mov
dec
dec
daa
push
iret
daa
cltd
mov
jbe
rorb
or
jmp
adc
adc
jle
pop
out
lcall
adc
sub
iret
inc
push
jae
dec
int3
insb
jbe
mov
pop
and
xchg
cmpsl
mov
pop
push
fwait
les
or
int3
in
imul
dec
or
push
jbe
pop
scas
mov
fwait
or
sti
cli
jmp
xor
test
out
dec
inc
mov
sub
out
jae
lcall
adc
cmp
mov
out
cltd
mov
inc
outsb
xor
push
xchg
pop
add
fisttpll
fdivl
cwtl
popf
mov
or
jo
sub
sbb
cwtl
das
xlat
jg
les
lret
inc
or
les
xor
ds
ror
adc
imul
fsubl
dec
mov
movsb
movsl
cmp
aas
nop
movsb
call
jecxz
or
mov
xor
icebp
sbb
es
adc
andl
fldl
sub
adc
fwait
lret
gs
aam
daa
xor
cmc
inc
pop
inc
outsl
push
inc
jp
sub
sahf
xchg
adc
mov
xor
mov
push
xchg
inc
mov
shll
jp
xor
mov
mov
add
pop
inc
rcrl
jno
std
mov
push
and
imulb
add
ja
fwait
mov
in
sarb
dec
arpl
loopne
outsl
mov
movsb
lret
hlt
cmp
inc
push
cli
jae
or
xchg
mov
shll
lea
and
lock
push
xor
iret
jae
jl
pop
push
outsb
fwait
or
jae
addr16
sbb
aaa
popf
insb
int3
mov
push
push
pop
pusha
xchg
bound
pop
xlat
sub
shll
jns
add
pop
mov
enter
je
hlt
cmp
fiadds
push
lret
fidivl
xchg
mov
fidivrs
push
mov
lea
pushf
movsb
and
xchg
mov
loop
test
repnz
adc
subl
cwtl
sbb
push
scas
mov
aam
out
and
sub
mov
mov
in
popf
aaa
in
enter
mov
cmp
push
jo
add
or
or
pop
push
test
pop
dec
sbb
xor
push
add
jecxz
or
pop
call
or
add
rorb
test
sbb
adc
stos
pop
sahf
enter
push
cmpsl
push
pop
pop
jle
or
push
sbb
scas
and
dec
mov
adc
xor
jns
cmp
mov
nop
stc
stc
xor
ror
push
jno
aaa
clc
cmp
add
or
loopne
or
imul
sub
dec
cs
mov
or
pop
stos
aaa
jne
cs
stc
sub
std
xor
jmp
out
fwait
imul
cmp
jmp
loopnew
mov
sbb
xchg
rclb
mov
xchg
mov
gs
pop
jnp
test
scas
inc
jmp
out
cld
and
lret
pop
subl
hlt
add
aam
loope
xchg
dec
mov
movsb
ret
jae
into
sbb
mov
addr16
cmp
je
fdivr
aad
mov
sbb
jmp
cltd
mov
seta
sub
sbb
xchg
daa
pop
add
xchg
ds
divl
mov
sbb
sub
stc
aad
aas
sbb
rcrl
std
push
repz
mov
lret
mov
push
lahf
ret
shr
je
or
pusha
push
ret
adc
adcl
pop
cmpsb
lds
into
imul
das
or
adcb
daa
cli
add
hlt
cmp
or
aaa
sub
lcall
data16
adc
out
cmp
out
mov
das
daa
mov
daa
or
mov
jnp
inc
xchg
jnp,pn
ss
lret
pop
jbe
mov
sbb
mov
mov
mov
addl
inc
push
add
nop
push
jnp
test
ret
sahf
aad
rcrl
push
push
jecxz
icebp
inc
jo
lea
imul
push
mov
mov
xchg
inc
daa
gs
ja
inc
push
popfw
hlt
mov
stos
enter
jbe
cmc
pop
push
scas
lock
out
stc
cmpsb
std
fnsave
jb
jb
mov
popa
cmp
add
sbb
mov
outsl
adcl
jne
into
loope
add
mov
cmp
push
sub
aam
bound
xchg
mov
loope
mov
push
dec
sbb
sub
sub
add
adc
out
into
adc
or
lret
dec
mov
xchg
adc
fs
xorb
inc
repz
adc
pop
and
sbb
jbe
dec
jp
mov
xorl
andb
les
or
xlat
or
push
jmp
push
sub
mov
dec
ja
cmpsl
in
or
xchg
push
xor
and
pop
pop
pop
add
js
dec
stos
lds
jmp
jg
push
mov
movsb
sub
push
test
stos
testl
sti
fimuls
xor
inc
jns
and
sub
in
mov
pushf
adc
mov
mov
sub
and
ljmp
inc
sbb
cmpl
inc
fnstcw
mov
jnp
outsl
sub
cmpsl
xchg
shrl
sub
movsl
cmp
mov
enter
call
scas
sbb
mov
out
inc
dec
and
pop
clc
push
clc
dec
mov
jmp
ds
add
loope
scas
mov
push
out
add
jl
adc
in
into
jmp
mov
sub
xchg
fdivl
and
mov
std
xchg
mov
je
cltd
mov
js
vpperm
push
adc
add
xlat
mov
int3
in
popa
rclb
push
ja
int3
inc
push
inc
pusha
push
shll
pop
pop
stos
es
add
out
xchg
int3
dec
imul
lea
inc
jp
push
mov
adc
xchg
pop
ret
lret
stos
jp
mov
mov
incl
xor
aam
jecxz
cmp
fwait
push
insb
add
int3
cli
cltd
aam
and
dec
out
adc
das
mov
out
sub
cmp
mov
iret
and
and
and
arpl
jne
pop
popa
mov
jle
insb
push
inc
xor
fisubrs
pop
out
int
movsl
mov
ret
pop
enter
or
mov
cmp
fnstenv
sahf
mov
adc
push
lret
mov
aad
cmp
sub
inc
nop
xlat
and
inc
xchg
test
aaa
in
scas
xor
pop
flds
andl
pop
adc
aam
out
lret
cmp
outsb
sub
inc
lcall
dec
ret
sbbl
std
sbb
inc
mov
push
je
mov
jno
cs
mov
idivl
stc
addr16
sub
paddusw
loope
icebp
ljmp
call
pop
js
int
test
mov
ljmp
add
hlt
popa
adc
nop
adcl
xchg
push
sbb
je
popa
dec
jecxz
hlt
adc
xchg
sub
lret
pushf
packssdw
loope
xor
daa
stos
ret
icebp
sub
xchg
scas
notb
push
cld
jnp
popa
aad
mov
pminub
aad
push
call
lock
cmp
add
and
mov
pop
cmc
dec
or
push
sbb
add
mov
xchg
pop
or
or
scas
inc
sbb
push
or
outsb
scas
pop
fldt
outsl
imul
or
jecxz
dec
call
loope
jp
cmc
dec
cwtl
inc
sub
and
ljmp
pop
xchg
jns
data16
push
xor
cmp
inc
aaa
pop
mov
mov
dec
dec
dec
mov
xor
ds
inc
jns
gs
push
loope
pop
push
sbb
rorb
ret
jb
mov
loope
cmc
cmp
cmpsb
test
cmp
test
and
mov
popf
fbld
adc
dec
scas
jmp
mov
movsb
into
inc
fnsave
fwait
cmp
mov
jp
in
movsl
xor
sbbb
mov
repz
cmpb
daa
cltd
cwtl
mov
mov
add
pop
push
jb
cs
or
jle
aaa
pop
add
adc
ljmp
jp
test
aad
jbe
inc
gs
mov
push
movsb
es
mov
sub
daa
sub
xchg
pop
and
into
outsl
notl
sbb
cmp
icebp
pusha
adc
push
adc
iret
jb
pop
in
jmp
adc
add
add
idivb
fs
xchg
cmpsl
mov
cmp
out
cmp
mov
ljmp
das
push
hlt
xchg
loop
pop
sbb
insb
xchg
nop
jl
stos
fs
inc
loopne
imul
std
sahf
mov
pop
iret
jnp
xchg
scas
leave
fistl
and
stc
xor
push
mov
adc
xchg
rorl
xchg
cmc
sbb
dec
inc
daa
jns
nop
roll
lret
data16
jecxz
xchg
lea
fsubrl
xor
mov
shr
mov
push
push
pushl
cmpsb
xchg
inc
imul
mov
jmp
mov
xchg
xchg
adc
arpl
out
push
pop
pop
inc
pop
mov
aam
sub
or
call
mov
fiaddl
int3
adc
jecxz
inc
lcall
push
add
xor
or
inc
in
adc
mov
sub
inc
cmp
mov
mov
mov
pop
lcall
out
adc
mov
adc
mov
sbb
call
xchg
jl
mov
inc
subb
jle
icebp
hlt
cmp
repz
jecxz
mov
push
shll
leave
sub
pop
scas
mov
and
push
inc
rcll
shrb
popf
inc
cmp
pop
push
cltd
cmp
shll
sbb
xchg
push
fldenv
pop
xor
aam
mov
addr16
mov
pop
cmp
adc
mov
leave
imul
and
cmpsl
sub
mov
mov
pop
das
cmp
push
lock
data16
notl
aam
popa
mov
mov
push
mov
mov
rorl
mov
mov
mov
jno
xchg
aad
dec
inc
mov
rcrl
mov
inc
adc
insb
cmp
pop
cmp
push
jmp
add
clc
sub
je
push
jnp
mov
ja
inc
scas
outsl
cmpsl
nop
scas
dec
mov
pop
adc
out
cmp
and
es
mov
pop
or
add
xor
popf
sub
inc
call
dec
sub
pop
pusha
repz
pop
adc
cmpsb
cltd
push
adc
nop
out
xchg
mov
fldenv
daa
cmpsl
mov
mov
inc
add
pop
inc
xchg
mov
xor
jnp
dec
test
getsec
adc
mov
cld
lret
mov
das
aam
push
mov
cmc
sbbl
inc
es
mov
out
mov
xchg
inc
jnp
test
mov
js
adc
loope
pop
xor
repnz
xchg
push
cld
push
jns
enter
xchg
sbb
adc
inc
add
xchg
mov
mov
into
out
clc
pop
inc
adc
mov
rorb
inc
inc
dec
cmp
imul
popa
xor
je
jnp
nop
sbb
adc
push
mov
mov
sbb
arpl
mov
mov
push
dec
inc
xor
mov
add
fs
mov
popa
xlat
xchg
das
shll
daa
add
shrl
test
jnp
xor
sarl
xchg
xchg
mov
sahf
inc
aam
fdiv
add
popa
fs
test
hlt
or
add
mov
sub
inc
push
rcrb
mov
adc
and
daa
mov
jmp
in
mov
mov
adc
daa
sti
cltd
inc
dec
xchg
push
mov
dec
out
lds
enter
mov
add
addr16
inc
sub
push
add
jp
loopne
push
dec
aaa
push
adc
push
or
aad
push
imul
pop
out
jecxz
push
lds
repnz
addl
popa
fdivl
or
xchg
daa
fsubp
adc
dec
push
in
gs
loope
aaa
call
mov
aas
lcall
sub
cmp
and
mov
cmpsl
jb
roll
dec
in
jnp
xchg
and
mov
push
sub
stc
adc
sbb
inc
iret
into
xchg
imul
data16
aam
xchg
push
mov
mov
daa
dec
mov
mov
pop
mov
jl
cmp
sub
mov
pusha
cmp
outsb
test
aam
pop
or
ret
xor
aas
cmp
scas
fcoms
out
fistpl
mov
sbb
push
cmp
adc
jb
ret
or
xorl
inc
adc
sub
fadds
jno
push
jg
xor
movsl
sbb
cld
lds
call
xchg
nop
adc
jae
jb
inc
jle
sub
dec
mov
xchg
aas
out
push
ret
xchg
inc
and
jmp
push
xchg
xchg
pop
sbb
mov
inc
push
mov
dec
sbb
cmc
popa
hlt
mov
adc
pop
loopne
jbe
cmpsl
dec
or
out
aad
sbb
fidivrl
pop
jg
mov
dec
sbb
sbb
adcl
pusha
xchg
scas
mov
mov
jne
cmp
sti
jbe
pop
inc
adc
mov
add
mov
mov
cli
add
dec
and
ret
or
aad
daa
mov
ja
ljmp
fucom
dec
push
mov
aad
daa
and
jge
or
sub
mov
dec
daa
cld
push
pop
mov
inc
xchg
aam
fidivrs
fs
insb
rcl
dec
arpl
cs
into
push
push
mov
pushf
mov
popa
push
ja
fnstcw
addl
fisubrl
adc
jmp
scas
mov
dec
inc
aas
mov
mov
jno
sub
push
sbb
jmp
loop
or
adc
mov
std
repnz
clc
xor
mov
mov
daa
jbe
sub
jmp
mov
in
clc
mov
pusha
daa
mov
push
push
insb
and
out
sub
mov
jmp
push
rorl
mov
pushf
pop
sub
mov
lds
repz
pop
mov
push
mov
dec
pop
push
sbb
adc
add
loop
daa
cmp
lcall
outsb
xor
out
pop
in
sbb
fadds
adc
pop
inc
ficoml
lds
jae
std
lds
jbe
dec
mov
sub
hlt
pop
pop
outsb
call
cmpsb
inc
xchg
sbb
lea
test
es
sub
xor
or
cmp
and
xchg
ficomps
and
mov
inc
xor
or
rorb
sub
jae
xchg
movl
pop
leave
sub
out
andb
in
aam
imul
dec
sarl
cmp
mov
jae
pop
push
add
sub
les
and
and
and
pop
adc
mov
and
arpl
jno
mov
mov
xchg
int
cmp
cmp
loopne
mov
dec
push
je
int3
out
mov
jmp
outsl
lahf
jp
push
pop
xor
sub
mov
dec
pop
out
insl
mov
or
test
pop
mov
ja
push
js
dec
lods
in
xor
aad
out
clc
push
mov
mov
adc
or
pop
popf
stos
mov
dec
inc
pop
and
mov
jle
lahf
pop
enter
lret
imul
fsubs
or
adc
inc
inc
idivl
sbb
aaa
sub
or
movhps
jecxz
sahf
mull
test
mov
vpmacsswd
mov
sub
add
push
sbb
insb
fidivrl
push
insb
xchg
jmp
dec
mov
jg
dec
xor
adc
inc
push
mov
xor
xchg
pop
push
lret
int3
mov
inc
out
movsb
inc
inc
fsubrl
popf
push
test
insl
icebp
jne
into
sub
daa
scas
ja
dec
adc
adc
mov
js
cmp
inc
inc
scas
inc
aam
shl
in
adc
mov
inc
jo
sbb
cmp
xor
shll
jae
mov
lahf
lcall
mov
fs
pop
mov
or
cmp
out
addr16
cmc
mov
pusha
cmpsb
adc
ljmp
ret
lcall
adc
pop
push
pop
imul
jns
mov
jmp
cmpl
daa
inc
clc
js
adc
add
imul
aas
pop
cld
sub
mov
jnp
ficoml
mov
inc
lcall
adc
or
nop
sub
loop
and
sub
insb
pop
jg
push
and
mov
mov
pusha
es
or
outsl
inc
test
or
movsl
shr
and
pop
cmpsl
or
cld
add
rcll
and
sub
mov
lea
adc
sti
call
insb
mov
or
inc
mov
or
popa
xor
push
in
je
inc
xchg
or
mov
lea
mov
sbb
and
mov
pcmpgtd
hlt
fbstp
xlat
out
or
je
jbe
hlt
dec
or
jp
xor
push
adc
mov
fs
and
aas
inc
pusha
push
sbb
mov
push
dec
or
sbbl
fs
pop
shlb
dec
lock
add
shl
pushf
mov
call
hlt
pop
or
mov
push
xchg
jmp
cmp
fidivl
or
jae
mov
les
aas
enter
mov
or
xorb
or
scas
leave
movsl
xchg
adc
or
mov
jg
pop
ljmp
push
imul
bound
xchg
xor
or
sti
jle
in
adc
xor
push
sbb
mov
inc
xlat
cmp
inc
push
shrb
cmpsl
outsb
mov
push
mov
xor
mov
loop
pop
int
fmull
push
loopne
jnp
mov
or
ffree
bswap
xchg
iret
pop
sbb
out
pop
repnz
sti
cmpsl
test
and
mov
incb
sbb
mov
xor
leave
sub
int3
push
adc
in
pop
and
or
fwait
jbe
jmp
or
divb
dec
xchg
xor
int
add
adc
dec
test
pop
sub
or
mov
popf
bswap
movsl
loope
or
lods
mov
sub
jnp
sub
push
mov
jmp
in
out
inc
adc
jb
out
inc
cli
lret
mov
test
loop
push
es
or
and
mov
push
jbe
and
or
mov
aam
mov
jmp
repz
sahf
xchg
testl
loop
bnd
int
xchg
or
aaa
bound
push
or
ds
pop
fwait
or
dec
mov
jnp
inc
jle
pusha
std
jge
adcl
iret
je
int3
call
pushf
inc
add
adc
test
insb
stc
sub
sbb
push
and
scas
mov
adc
adc
repnz
or
or
ja
outsl
shll
add
mov
imul
push
out
adc
adc
pop
jmp
inc
shll
fs
and
adc
mov
lds
subl
out
leave
bound
or
mov
adc
push
mov
jae
xchg
pop
jmp
insb
sarb
push
mov
fwait
in
hlt
scas
cwtl
jb
jo
pop
push
cld
push
adc
mov
mov
test
cmc
bound
jo
adc
daa
jne
mov
popf
mov
mov
and
and
imul
pop
and
test
out
cmp
mov
popl
mov
cmp
and
and
subb
cmp
popf
iret
push
sbb
mov
xchg
mov
cmovo
daa
inc
cmc
insb
out
sbb
mov
mov
cmp
push
inc
and
and
pop
les
movb
xor
and
inc
mov
mov
dec
cs
mov
lods
or
xchg
cmc
add
sub
add
andb
out
es
shll
push
inc
jg
mov
dec
mov
pop
mov
or
xlat
lahf
sub
repz
nop
cld
jg
xchg
push
mov
add
and
jns
mov
ret
push
test
pop
dec
jmp
add
push
daa
pop
movsl
add
rcrb
adc
stc
jmp
popf
hlt
cmp
mov
pop
scas
and
jae
inc
scas
mov
clc
inc
je
ja
rep
lods
pop
and
add
mov
test
cs
xor
pop
adc
adc
cmp
sbb
push
xor
mov
dec
sub
pop
pop
adc
insl
adc
push
test
xchg
test
pop
lods
jg
ja
leave
lret
and
mov
sub
and
out
imul
aas
and
loope
cmc
scas
call
hlt
and
xchg
jl
sbb
pop
popf
sub
xchg
cmpb
int
fdivs
sub
sub
mov
mov
das
mov
fdivs
adc
add
gs
pop
lock
sub
jno
xor
out
sbb
dec
mov
push
aam
out
insl
daa
in
bound
push
test
sti
inc
inc
rorb
sub
cmp
sbb
inc
bound
jle
sbb
inc
xor
hlt
pop
mov
xor
jg
add
mov
in
or
pop
cmpsl
dec
pop
je
into
imul
imul
mov
jmp
dec
es
mov
fprem1
sbb
out
repz
sub
dec
out
mov
dec
adc
aam
xchg
push
mov
lds
push
out
xor
inc
inc
dec
ljmp
dec
jno
jne
outsl
loope
jecxz
enter
loop
scas
mov
xor
int3
adc
push
je
dec
imul
cwtl
arpl
sbb
and
clc
jnp
push
pop
cwtl
or
test
or
jbe
and
daa
inc
mov
pushf
andl
test
pop
and
in
push
jp
mov
out
sbb
dec
xchg
pop
push
test
xchg
nop
fbstp
xlat
xchg
push
sub
push
cmpsl
sub
jns
and
sub
std
jmp
aam
cs
pop
pop
in
inc
xchg
rclb
cli
shl
adc
or
jae
sbb
inc
jae
sbb
daa
sub
ret
jnp
cmp
sub
lea
mov
mov
dec
dec
out
inc
pop
movsb
lods
jl
inc
xchg
in
xorl
dec
insb
mov
mov
lea
lret
fmulp
scas
sbb
sarb
push
aam
enter
push
daa
fmull
lcall
scas
add
sub
lret
pop
fldt
adc
bound
cmp
adc
xor
mov
lods
dec
xchg
mov
and
sbb
xlat
push
mov
xor
lds
mov
add
mov
jmp
lcall
inc
push
clc
cmp
xor
clc
cmp
adc
sub
inc
mov
mov
stos
pop
in
or
imul
cld
cmp
push
hlt
or
mov
pop
xor
pop
in
test
icebp
adc
jne
pop
in
fs
sbb
fildll
btr
jns
mov
cmpsl
cmpsb
jno
adc
jb
outsb
lret
dec
xor
adc
mov
sub
fldenv
mov
sbb
cli
dec
mov
scas
pop
add
jo
sub
mov
add
mov
movsb
sbb
sub
icebp
rcrb
dec
xor
mov
pop
mov
xchg
push
fwait
mov
aad
or
push
pop
cmpsb
popf
mov
adc
cmp
inc
jo
loopne
les
loopne
adc
mov
fsub
das
rcr
ja
jp
cmpsl
xor
cmpsl
sbb
mov
jg
dec
leave
cmp
mov
cmp
xchg
xor
push
jno
pop
orb
sub
popa
scas
dec
push
mov
stos
lcall
out
jae
xchg
pop
int
push
int3
dec
mov
mov
or
into
outsl
cwtl
mov
ret
cmp
mov
cli
push
adc
pop
bound
jnp
cmpsl
insb
stos
or
or
daa
test
mov
push
pop
jns
sbb
je
stos
pop
aad
jmp
retw
lds
mov
daa
scas
nop
rcrb
andl
jl
add
mov
push
mov
lea
stos
test
mov
push
push
gs
fwait
test
xchg
mov
push
rcrl
add
cmp
sbb
sbb
adc
pop
sti
mov
gs
lahf
imul
call
pop
into
test
rclb
addr16
repz
repnz
jno
imul
outsb
sub
sub
jbe
add
lods
daa
mov
mov
sbb
or
ret
adc
jae
in
std
jge
mov
and
jmp
pop
loop
sbb
hlt
pusha
add
daa
fisttpll
or
or
addb
int3
adc
inc
ss
jmp
js
fisubs
pop
push
push
adc
add
jecxz
mov
rcrl
pop
inc
pop
loope
sbb
pop
or
sbb
mov
lahf
add
cli
sbb
out
sti
test
adc
jno
imul
dec
int3
addl
pop
imul
push
es
movsb
in
inc
pop
xor
gs
lahf
or
insb
xchg
std
lcall
mov
and
cmp
shrl
push
push
add
mov
flds
lock
sub
stc
bound
add
hlt
adc
clc
pop
mov
data16
loope
insl
imul
sbbl
nop
pop
test
stos
out
push
push
mov
pop
daa
cmp
sub
lcall
ja
adc
cmc
lea
jl
add
popa
mov
std
xchg
mov
dec
imul
cmc
into
pop
mov
and
mov
and
mov
mov
sub
mov
shll
cmpb
inc
mov
out
rcr
pop
cli
fldcw
outsb
push
cmp
rclb
add
push
stos
movsb
out
pop
xchg
mov
sub
scas
imul
aaa
stc
into
orb
test
fnstsw
xchg
into
adc
cmp
shl
dec
dec
fwait
imul
xor
insl
iret
out
test
mov
cmc
add
stos
scas
cwtl
xchg
xchg
and
lret
pop
push
jo
push
andl
add
stos
push
shll
lahf
xchg
mov
faddl
pop
jle
insb
xchg
in
mov
mov
fidivrs
xor
mov
insl
cld
ficomps
pop
jns
popf
ror
jl
xor
and
int
xchg
ror
sub
cmc
sbb
pop
addb
fidivrs
icebp
out
mov
mov
dec
stos
cld
sub
xor
jno
mov
data16
fnstenv
inc
mov
xchg
dec
dec
shlb
cmp
xchg
repz
ret
scas
sbb
dec
xchg
outsb
popa
stc
out
dec
inc
cmc
or
stos
push
mov
mov
stos
mov
loopne
jmp
pop
jnp
cmp
cltd
mov
add
in
mov
inc
arpl
out
lds
stos
dec
jmp
dec
sub
testl
int
pop
lods
rcl
mov
nop
and
pop
push
pop
hlt
pop
or
insl
arpl
mov
iret
rcl
xor
lds
pavgb
ret
scas
sarb
push
dec
fsqrt
jb
and
add
jbe
push
popf
loop
inc
out
or
fisubrs
jae
js
sahf
into
add
pop
ss
sub
je
popf
sub
push
in
add
jge
aad
cmp
pop
push
mov
mov
inc
jns
add
and
dec
pop
and
call
in
test
das
cmp
jge
adc
fstpt
arpl
sbb
sbb
xlat
and
imul
int3
inc
mov
orb
sub
push
push
sub
ja
mov
stc
mov
push
sahf
dec
popa
scas
aam
mov
mov
xchg
dec
mov
call
jnp
mov
out
or
mov
repz
cmpsl
push
add
dec
lcall
fwait
leave
push
inc
call
add
add
rcll
sbb
repz
scas
ljmp
rclb
loop
imul
mov
mov
xor
stc
stos
adc
ret
or
mov
lods
xchg
ds
mov
jne
test
dec
hlt
in
bound
pop
out
cmp
or
daa
push
ss
jge
jecxz
scas
dec
mov
and
sub
loope
mov
push
or
nop
pop
js
movsl
data16
ja
jp
push
mov
mov
jnp
and
push
orb
xor
filds
push
or
inc
iret
mov
aaa
movsb
and
inc
jae
into
sbb
xchg
pusha
int3
jnp
mov
loopne
mov
sbb
test
ror
or
dec
sub
imul
rcll
dec
dec
pusha
movsb
je
loop
dec
pop
lock
sbb
or
push
ret
mov
mov
adc
cmpsl
hlt
inc
out
add
mov
and
orl
jbe
ficoms
jne
xor
lock
mov
popf
in
imul
pop
push
dec
push
and
inc
and
outsl
pushf
sbb
bound
hlt
pop
bound
inc
popf
add
or
pop
xchg
stc
mov
adc
test
jmp
sbb
pop
sub
sbb
test
cmpsl
or
roll
pcmpeqw
xchg
mov
loope
and
push
adc
mov
dec
mov
rcll
into
dec
xor
popa
mov
bound
mov
arpl
fldcw
mov
or
imul
lret
pop
cmp
shrb
or
nop
into
scas
mov
js
xor
jno
push
push
lcall
push
imul
stos
pop
mov
push
test
mov
xchg
nop
cmp
les
mov
out
xchg
dec
ss
repz
and
push
sub
mov
mov
dec
inc
subw
aas
pushf
sbb
arpl
mov
push
jmp
cmp
sbb
push
lcall
pop
loop
int3
fdivr
push
xor
repz
fisttpll
les
pop
sbb
mov
xor
nop
adc
inc
pop
cs
mov
push
xchg
lret
dec
mov
push
pop
and
adc
into
cmp
adc
popf
lds
ss
cmp
out
mov
ret
loope
jne
mov
pop
int
dec
lcall
das
imul
int3
ljmp
adc
or
cmp
pushl
pop
adc
aaa
cmc
push
fs
mov
mov
adc
daa
scas
dec
pop
stc
xchg
push
cmp
scas
adc
pop
mov
sahf
mov
jmp
fdiv
cmpsb
cmp
mov
mov
jbe
pop
addr16
sub
pop
dec
push
mov
mov
or
test
mov
xor
mov
cli
or
and
cmp
pop
mov
scas
daa
stc
ret
fs
out
stos
mov
add
cmpsl
fistl
push
mov
sarl
test
in
dec
rcrl
push
sbb
leave
jne
cmc
cli
in
scas
or
or
pushf
sbb
xchg
pop
and
lock
adc
sub
sub
in
adc
hlt
shl
mov
dec
dec
xor
fnstenv
or
jae
sbb
pop
movsb
rcr
mov
mov
jge
inc
daa
xor
mov
or
xor
jo
outsb
movsb
popf
rcl
insb
call
test
inc
ret
nop
xor
hlt
int
add
xchg
xchg
mov
or
rcll
and
aas
xlat
orl
jmp
push
insl
mov
cmpsl
fs
add
mov
and
inc
testb
in
inc
scas
cmpsl
pushf
repz
xchg
add
adcl
sbb
push
inc
jmp
orb
jmp
loop
mov
or
jecxz
push
push
popf
xchg
or
sub
repz
jl
in
test
ja
sub
sub
pop
inc
test
imul
or
out
mov
stc
fisttpll
or
gs
dec
jne
test
arpl
sub
sbb
sbb
or
jnp
daa
stc
and
clc
movsl
adc
nop
in
push
or
and
ss
xchg
cmc
xchg
scas
and
imul
daa
aam
mov
in
and
cli
mov
cmpl
sub
das
adc
rolb
lcall
and
pop
cmpsb
inc
cmp
push
push
movsb
in
or
in
jno
orl
pop
test
lret
daa
push
push
dec
dec
mov
or
mov
xchg
sub
mov
out
fisubrl
push
sti
push
cmc
cli
and
insb
popf
out
push
push
cwtl
inc
mov
pusha
in
sbb
jecxz
add
mov
pop
popf
sarl
fiaddl
dec
mov
popf
je
sbb
mov
xchg
push
jg
test
sahf
push
mov
mov
test
cmpsb
loope
adc
jmp
les
imul
push
xlat
sbb
daa
xchg
mov
cmp
sbb
xlat
pop
mov
mov
cli
lods
arpl
mov
jp
andl
popa
ret
mov
sahf
add
test
mov
cmp
lods
inc
and
jmp
je
je
shll
cmp
xor
mov
inc
stos
lahf
les
repnz
cmp
pop
adc
xor
xor
insb
and
add
repz
jmp
ret
adc
push
inc
scas
in
push
and
scas
mov
movsl
jb
lahf
jns
stos
cmpb
lea
cs
mov
js
lret
push
jp
dec
xor
movsb
xchg
push
call
je
ficompl
test
fs
andl
fprem1
clc
push
scas
push
cmp
cmc
add
ss
sahf
or
in
mov
outsl
mov
xchg
adc
inc
ss
mov
push
movsb
lahf
pop
sub
lret
sub
int3
leave
outsl
mov
jae
lcall
mov
aad
loopne
dec
outsl
nop
and
lock
or
mov
jl
ds
dec
xor
mov
loopne
inc
dec
xlat
adcb
jae
fcompl
jmp
fs
and
mov
and
jnp
cmp
xor
and
mov
dec
stc
inc
fwait
mov
std
cmp
and
sbb
pop
lcall
push
or
add
icebp
mov
cs
inc
push
cmpsl
test
xor
xchg
out
push
xor
push
cwtl
popa
jecxz
mov
test
or
and
scas
ja
sub
sub
cmp
xchg
jl
mov
jne
inc
mov
xor
mov
and
mov
inc
les
leave
insb
clc
addl
add
or
mov
jl
xlat
cmp
adc
inc
sbb
out
movsb
sub
jp
into
cmc
pop
and
cmp
or
ss
dec
lea
mov
loope
dec
aaa
fldt
faddl
xor
enter
sbb
enter
orl
insl
sub
mov
sbb
stc
pusha
inc
mov
add
int3
inc
cli
lods
mov
push
lcall
pop
adc
cmpsl
add
aaa
mov
xor
xor
add
sub
fcomps
sbb
fnstcw
mov
jno
mov
imul
rcrb
icebp
int
sub
pop
in
arpl
xlat
xor
xchg
aad
sbb
inc
mov
addb
and
jle
sub
inc
cltd
fucom
imul
movb
mov
icebp
mov
and
daa
adc
fst
jl
nop
sbb
push
out
rcrb
int3
daa
out
dec
bound
out
jmp
xchg
jg
ds
push
fs
test
and
pop
ds
ret
sbb
out
inc
out
cltd
imul
inc
push
jmp
or
adc
out
dec
xor
es
add
push
push
insb
and
jae
mov
mov
cwtl
mov
mov
xchg
jl
iret
pop
mov
dec
push
adcl
into
push
sbb
pop
cld
dec
mov
icebp
or
nop
je
dec
ret
and
in
ljmp
rcrb
aaa
and
cmp
pop
cltd
push
and
xor
pusha
cs
push
cwtl
fwait
and
and
push
push
dec
adc
into
es
lds
leave
xor
xor
or
inc
or
jbe
fwait
lret
les
pusha
sbb
push
in
mov
jmp
enter
and
or
jns
dec
es
adc
push
test
inc
movsb
push
pushf
xor
pinsrw
sbb
dec
js
cmp
push
jns
xor
ss
imul
push
icebp
shlb
dec
jge
ljmp
popa
rcr
call
or
ret
jg
or
fwait
push
lret
or
or
repnz
and
or
add
stos
dec
je,pn
or
lret
or
stos
fisttpll
adc
jg
xchg
inc
mov
or
jnp
decb
and
cmp
or
outsl
loop
push
lds
pop
je
mov
pop
jb
mov
movsb
mov
in
jae
lcall
or
add
sbb
pusha
mov
pop
mov
pop
data16
cmpsl
shrb
fs
mov
clc
adc
mov
jge
mov
jnp
add
inc
adc
mov
sarb
jnp
mov
leave
call
rol
mov
xchg
push
in
fwait
sti
loopne
movsl
lret
mov
into
aam
cmpsl
stc
mov
fdivr
xchg
xchg
out
xchg
push
or
mov
adc
cmp
xchg
sbb
sbb
stos
sub
and
imul
addr16
push
xchg
inc
loope
outsb
pusha
les
push
icebp
xorl
push
icebp
and
movsl
xor
icebp
lcall
push
icebp
shr
test
pop
outsl
push
adc
mov
aaa
int3
rclb
pop
les
sahf
arpl
mov
cmpsb
or
mov
cwtl
ljmp
dec
mull
les
scas
mov
imul
popf
leave
mov
loopne
lahf
orb
mov
leave
and
adc
mov
sbb
sub
pop
in
lret
insb
cmp
icebp
mov
roll
push
adc
shlb
in
cmpsl
xor
pop
pusha
outsl
dec
aam
adc
dec
sbb
sbb
fwait
jb
xchg
sub
mov
lret
xchg
jno
out
cmp
icebp
xorb
ret
mov
and
pop
jg
mov
xchg
inc
ja
xor
nop
aas
jo
out
stc
add
sahf
fs
push
out
dec
pop
push
jno
test
popa
mov
cmpsb
or
fldt
je
xor
sbb
fs
fstp
scas
sbb
scas
pop
xchg
lds
inc
imul
rcll
addr16
jmp
fiaddl
dec
jnp
shll
daa
scas
lds
sbb
fucom
mov
pop
imul
pop
popf
stos
aam
test
lcall
or
xchg
xor
xchg
stos
adc
rcl
adc
jbe
xchg
sbb
cwtl
dec
rcr
xor
sbb
inc
loope
cmc
mov
mov
insb
daa
aam
jb
pop
pop
mov
sahf
cmp
movsl
popa
fwait
sbb
leave
andb
or
inc
rorl
pop
clc
pop
pushw
mov
jmp
insb
jp
les
popf
cmp
loopne
loope
and
mov
fdivrl
adc
push
mov
mov
lock
sub
bound
or
inc
mov
mov
jmp
imul
add
jae
dec
clc
cmc
sbb
xor
sti
xchg
push
outsl
inc
fmull
icebp
jnp
daa
and
cmc
and
lret
mov
enter
mov
mov
cltd
addr16
mov
arpl
in
andl
push
pop
imul
pusha
jmp
arpl
stos
pop
push
mov
insb
cli
sbb
adc
and
sbbl
cmp
xchg
out
fnstcw
mov
mov
test
pop
adc
dec
loope
sbb
add
stos
push
loope
ja
adc
sbb
pop
hlt
pop
xchg
push
add
mov
out
hlt
push
dec
inc
dec
or
push
test
jae
push
and
in
inc
daa
maxps
test
fsts
scas
xorl
push
jnp
shlb
mov
push
cmp
pop
movsb
push
jle,pt
sub
add
mov
jge
or
add
daa
inc
outsl
inc
sub
movsl
push
in
fwait
push
jecxz
outsl
adc
pop
sahf
shll
add
fbstp
add
pop
fnstenv
daa
inc
jae
pop
push
xchg
ror
and
sbb
mov
sub
sbb
in
daa
cmp
inc
pop
aaa
and
jae
inc
mov
shll
xor
hlt
cmp
push
cmp
inc
pop
add
fisubl
inc
jbe
loope
or
loope
int3
mov
fstps
mov
lds
pusha
out
pop
push
dec
lds
xchg
pusha
inc
scas
dec
push
test
test
inc
arpl
sahf
inc
xorl
inc
inc
fwait
cld
imul
cmp
add
daa
sbb
adc
repnz
lea
add
dec
sbb
jl
cs
scas
mov
cmp
sub
push
inc
or
fisubl
lretw
mov
cwtl
or
cmpsb
or
iret
loopne
push
iret
out
nop
imul
push
inc
mov
lahf
sub
jns
mov
jb
fldenv
pop
inc
fisttps
inc
out
es
lcall
movsb
scas
inc
jne
iret
popa
add
icebp
inc
push
loop
or
cmpb
or
adc
add
lea
pop
mov
lds
cmp
xchg
add
and
repnz
loopne
push
icebp
repz
movsl
iret
mov
aam
sub
int3
iret
bound
adc
push
cmp
jbe
dec
lods
pop
sub
arpl
std
data16
aad
dec
cmc
hlt
push
cmp
inc
imul
or
test
jp
xchg
testl
fsubs
mov
jg
imul
push
lods
pop
test
jge
ss
jo
test
movsl
xor
clc
jno
sub
test
loope
mov
xchg
daa
cmova
les
jne
xchg
movsl
fldl
mov
cmc
push
push
or
add
mov
push
pop
xor
leave
enter
fisttps
cmpsl
lods
sbb
push
sub
sti
test
fdivl
xor
xchg
or
hlt
repnz
mov
cmp
popa
clc
ds
cwtl
xlat
das
movsb
es
loopne
fnstenv
ret
mov
xor
and
sub
cmp
cmpsl
jns
pusha
push
sbb
push
mov
inc
stos
sbb
in
and
xchg
ss
and
sub
or
or
pusha
adc
and
insb
pop
mov
fisttps
dec
mull
std
mov
out
out
or
cmp
out
mov
stos
sub
mov
and
aas
sbb
inc
stos
sbb
jnp
aad
xchg
pop
push
push
int3
jmp
push
or
and
roll
xchg
mov
jmp
pop
xlat
lock
dec
cmpsl
sbb
xchg
ficoml
jl
push
leave
out
adc
pop
hlt
fwait
dec
push
adc
xor
adc
hlt
cmpsl
aad
pop
lret
mov
sarl
mov
fdivs
sbb
pop
inc
inc
adc
idivl
push
lcall
ja
insl
les
pop
inc
mov
data16
inc
mov
sbb
cmp
lods
mov
call
sbb
cmp
cmp
jg
ja
inc
cs
iret
leave
fcompl
jmp
pop
into
sahf
push
scas
sub
and
lock
mov
jo
enter
pushf
daa
dec
popa
jp
xor
pop
out
aaa
pop
in
lahf
rcrl
mov
scas
ror
xor
pop
pop
jge
aas
rorb
scas
xchg
mov
cmp
inc
pop
mov
xor
cmp
jmp
and
jne
ret
push
pop
cltd
outsl
fistpl
stos
sub
cltd
dec
pop
jae
or
mov
idivl
scas
fstp
xor
xchg
fdivrs
inc
xorl
stc
jo
xchg
pushf
and
xchg
mov
push
jae
push
pop
add
pop
cld
and
sbb
push
and
adc
inc
xor
fs
dec
push
push
fcoml
sub
inc
mov
dec
mov
mov
leave
stos
jmp
into
push
xchg
sbb
cmc
xchg
sub
dec
inc
popa
mov
loope
daa
xchg
push
sbb
out
cmpsl
mov
push
inc
sub
clc
lcall
test
mov
movsb
imul
adc
and
testl
dec
mov
inc
pop
jae
xchg
adc
out
outsb
and
stc
aam
push
rolb
out
xchg
inc
xchg
push
dec
out
out
or
add
inc
gs
and
jl
dec
adcl
leave
sub
mov
stos
mov
fildl
addb
pop
mov
mov
xchg
xorl
fsubp
leave
or
push
mov
sub
fcmovnbe
shrl
push
daa
jle
outsl
arpl
mov
mov
shll
mov
adc
test
data16
rclb
insl
imull
mov
pop
das
jne
hlt
sub
xchg
add
push
pop
pop
fsubs
xchg
out
xchg
cmc
pop
sahf
in
pop
push
mov
mov
xchg
inc
push
inc
loop
sbb
push
lods
rcrl
pop
adc
lds
popf
pop
ret
and
jb
dec
int3
xchg
mov
pop
sbb
cmp
add
inc
pop
pop
sti
fs
xor
sub
inc
sbb
jne
into
cltd
int
shrl
mov
mov
jle
or
sub
pop
cmp
scas
in
js
sahf
and
cmpsl
inc
or
mov
stos
jne
dec
outsl
inc
mov
arpl
push
clc
xchg
push
push
inc
mov
movsl
popa
push
lock
out
hlt
adc
mov
push
leave
mov
ficompl
call
popf
test
mov
imul
sub
loop
call
sti
jp
push
test
test
in
rorl
jmp
push
daa
js
daa
scas
jmp
imul
test
fndisi(8087
inc
das
xor
cmpsl
insl
push
pop
pop
daa
clc
sub
addr16
jae
lock
pushf
push
pop
sub
call
lcall
test
iret
xorl
xor
pop
xchg
sub
mov
sbb
sub
mov
and
cltd
jg
lds
add
popa
fsubrs
orb
cmp
mov
inc
push
push
daa
adc
shr
sub
add
mov
mov
adc
sahf
mov
push
mov
int3
cli
push
xor
xchg
sub
push
imul
repz
lods
inc
sub
jne
loopne
add
and
fs
addr16
mov
add
mov
or
sub
cmpl
test
pop
pusha
in
mov
mov
loopne
les
push
jns
adc
in
jge
sub
scas
push
pusha
fcoms
imul
xor
faddl
mov
pop
into
roll
lea
cltd
dec
inc
movsb
pusha
dec
xchg
adc
inc
and
les
mov
mov
js
cwtl
shrb
cmp
add
hlt
push
jno
into
xchg
sbb
in
shl
outsb
push
mov
pop
pop
lods
pop
pop
pop
daa
pop
jnp
test
inc
mov
push
out
ljmp
mov
sub
xchg
pop
leave
outsl
insb
inc
aaa
fs
mov
mov
out
sbb
add
push
adc
stos
test
call
stos
xchg
inc
add
movb
jnp
sar
xchg
and
daa
rcrl
add
sub
sbb
sub
jmp
mov
stos
jle
cmp
std
daa
enter
popa
or
jbe
mov
xor
xchg
mov
jae
inc
and
mov
mov
out
hlt
or
push
xchg
xchg
scas
mov
sbb
cmpl
mov
mov
std
movsb
inc
adc
xor
sbb
cmpsb
jmp
mov
daa
lods
lcall
mov
jns
mov
adcb
fs
sub
xchg
daa
inc
or
or
and
push
insl
mov
jmp
cmpsl
or
jb
scas
scas
jl
and
adc
cs
add
pop
fmul
icebp
movsl
in
out
and
out
in
pop
fdivl
or
fistps
mov
ljmp
movsb
jbe
pop
std
sbb
push
popf
or
mov
in
cmp
cmp
hlt
add
pusha
js
sbb
fcompl
sbb
je
popf
mov
imul
ret
xor
call
int
rcrb
sbb
sub
adc
pop
loope
dec
mov
int3
loop
jae
sub
mov
dec
mov
dec
aaa
jno
mov
imul
inc
push
ja
gs
mov
mov
popa
repnz
fs
pop
cmp
cmp
xchg
mov
push
push
loope
cmp
jbe
jg
test
shl
xor
adc
leave
icebp
in
shrl
shrb
push
test
pushf
fsts
dec
mov
aas
ljmp
sbb
fiaddl
mov
inc
inc
push
mov
rcll
jg
in
jne
mov
jl
xchg
sbb
or
sbb
aad
lock
test
mov
sbb
mov
mov
cmp
ss
flds
jne
insb
jecxz
sbb
push
imul
pop
and
add
ja
lret
dec
or
push
mov
mov
imul
jns
or
pop
call
lret
aad
inc
pop
sbb
fdiv
into
in
pop
dec
xchg
cmpsb
add
add
insb
ss
jle
in
sbb
les
jbe
xchg
decl
inc
insl
int3
and
push
fwait
inc
les
shr
push
adc
jne
cmp
xor
out
mov
fisubrs
nop
adc
mov
fisubrl
pop
pop
fdivl
addr16
push
cld
mov
filds
cmpsb
adc
daa
jo
stc
out
scas
mov
push
sbb
xor
lods
movsb
lcall
mov
loopne
adc
pop
mov
test
daa
xor
lds
xor
rcll
mov
pop
aad
test
sahf
xchg
shl
cmp
xchg
out
adc
jbe
push
dec
or
mov
jecxz
inc
push
leave
cld
rcrl
sub
dec
dec
js
dec
push
je
out
or
pop
xchg
sub
sbb
scas
icebp
enter
inc
scas
jp
aad
mulb
push
das
pop
stos
mov
mov
inc
cs
sbb
inc
loop
bound
lods
pop
push
insb
fldenv
adc
xchg
insb
js
or
and
clts
add
xchg
lcall
lods
test
and
mov
mov
sub
das
enter
popf
and
test
jle
scas
xchg
jmp
test
push
mov
and
test
aaa
in
xor
outsl
cmp
add
sbb
or
mov
cmp
adc
pop
ljmp
lret
sub
dec
jns
xor
scas
bnd
lea
mov
mov
lret
add
fnstenv
xchg
add
les
and
dec
jp
les
mov
jnp
sbb
in
mov
push
inc
adc
pop
pop
pop
repnz
or
xor
pop
add
stos
cmpsl
sbb
cmp
adc
and
add
inc
push
pop
cmp
add
jge
mov
out
shlb
ficoms
mov
aad
dec
xchg
les
mov
adc
mov
inc
cmpb
or
out
mov
xchg
jmp
mov
or
sbb
and
inc
jne
imul
add
ljmp
jbe
cltd
or
bound
sub
je
test
and
inc
ja
dec
pop
pop
mov
inc
outsb
push
fcoms
adc
scas
sbb
ss
and
mov
sbb
fsubl
enter
xor
ljmp
and
push
imul
adc
inc
add
popa
jmp
bound
adcb
pop
xchg
sub
je
cmp
fld
es
arpl
push
andb
aad
xchg
xchg
or
shlb
mov
leave
xchg
out
call
outsl
aas
ror
xor
inc
test
dec
loope
dec
sbb
leave
sbb
xor
pop
jmp
cmp
ljmp
push
daa
dec
mov
dec
xchg
cmp
cmp
and
je
pop
pusha
xchg
mov
scas
sbb
js
pop
in
xor
jae
addb
pusha
adc
and
dec
lods
andl
push
stc
sub
je
sysexit
addb
pushl
sub
dec
add
int3
mov
subb
adc
pop
stos
pop
push
sub
mov
or
inc
clc
jmp
ljmp
dec
mov
sti
loope
mov
pop
outsb
sbb
xchg
out
or
mov
add
inc
stos
insb
rclb
mov
repz
lods
mov
jg
sarl
int3
inc
jbe
popa
cs
icebp
sub
jl
xchg
jnp
cs
movsb
into
jb
xor
mov
adc
xchg
clc
scas
sub
cs
inc
pop
rcll
dec
loopne
daa
adc
jle
jmp
push
iret
std
jmp
mov
out
ja
jg
out
ret
push
loop
sub
jmp
pop
fnstcw
or
pushf
mov
pop
or
outsb
xor
out
xor
push
aam
xchg
test
sbb
sub
push
xor
sub
outsl
pusha
cmp
movsb
in
adc
jge
adc
or
pop
pop
pop
imul
mov
and
sbb
mov
sbb
pusha
stc
pop
clc
sar
fs
pop
mov
or
out
add
pop
lret
iret
pop
sbb
xlat
adc
sub
fwait
or
sbb
jl
jle
cmp
mov
cmpsb
cwtl
daa
cmp
inc
sub
test
push
mov
lcall
lret
push
nop
repnz
jp
mov
jl
jle
and
cmp
xor
lock
scas
rcll
cmp
lahf
jb
xor
ja
cmpsb
mov
lret
lcall
rorl
bound
push
sbb
adc
cwtl
pop
lea
xor
jp
push
out
nop
add
sar
out
pop
repnz
out
lock
inc
and
adc
cwtl
jbe
or
shr
sbb
xchg
repz
lahf
daa
sub
push
lret
xor
xor
mov
lret
sbb
lea
xor
mov
or
testb
pop
lahf
cwtl
lea
notl
push
xor
inc
bound
push
fdivr
sbb
lcall
mov
lahf
frstor
mov
out
mov
cmp
adc
icebp
pop
pop
test
inc
xchg
adc
and
imulb
cli
cmpsl
outsl
push
rolb
inc
push
and
cwtl
xor
icebp
sbb
pop
cltd
cltd
mov
movsl
cmpsb
mov
push
cmpsl
pop
sub
test
sub
test
das
stc
mov
mov
dec
cmpsl
outsb
not
dec
push
repnz
push
cli
mov
push
and
inc
stos
lock
inc
push
inc
hlt
inc
mov
cli
inc
pop
dec
add
dec
or
dec
adc
cwtl
mov
shll
xor
shll
icebp
jp
fdiv
pop
icebp
fcomip
and
test
test
sub
xlat
leave
and
xchg
cmpsb
aaa
daa
cmpsl
and
xor
push
push
jno
lret
xor
jle
xchg
sub
mov
jl
jle
cmpb
jecxz
leave
mov
sahf
enter
or
das
sub
push
mov
push
cwtl
mov
lock
jb
repz
std
mov
cmp
cmp
sar
std
movsl
std
sub
test
out
icebp
repnz
sahf
add
push
bound
movsl
out
shrb
out
out
bnd
push
cli
ds
in
xchg
dec
cmc
mov
sbb
ficompl
test
mov
mov
inc
nop
lar
pop
test
xor
xchg
mov
jae
adc
icebp
push
icebp
fdivp
loopne
add
xchg
int
dec
rcll
mov
jb
jno
jl
jle
sbb
fiadds
mov
iret
mov
lahf
jno
xchg
inc
mov
shll
push
sub
pand
pop
adc
pushf
xor
cwtl
xchg
clc
lret
pop
adc
add
xor
pop
addr16
jo
ret
in
stos
nop
imul
mov
std
mov
xor
imul
loope
push
ss
lock
cltd
inc
jmp
cwtl
cli
xchg
pop
loopne
test
cmp
je
hlt
jle
sbbb
xchg
adc
push
pop
negl
mov
shrl
fs
test
push
xchg
pushf
out
mov
out
or
stc
shll
icebp
pop
pop
push
in
into
sbb
inc
dec
adc
sub
and
cwtl
xlat
fcomps
test
rcll
sub
repz
cmpsb
add
jl
push
adc
adc
inc
subb
je
pop
mov
dec
push
jb
jno
xchg
xchg
and
pop
cli
cwtl
cmpsl
lea
loopne
insl
icebp
sbb
mov
inc
push
adc
out
dec
cli
in
push
dec
out
lds
das
jo
out
and
gs
insb
nop
int
roll
cli
push
push
mov
xor
mov
xchg
xor
int
lock
jno
xchg
sbb
jmp
dec
rcll
fcmovnbe
inc
xchg
out
and
push
and
mov
sbbb
cmpsb
push
daa
mov
xor
mov
push
xchg
movsl
mov
cmp
push
rcll
push
inc
jl
ret
icebp
pop
jne
notb
mov
out
hlt
push
adc
out
mov
xor
loope
inc
and
cwtl
push
fsubs
lea
lods
add
lret
pushf
xchg
fistl
add
dec
xorl
pop
scas
and
and
cmp
xor
cmp
sar
lock
std
cmpsb
test
sti
cs
jnp
fsubl
out
icebp
or
inc
pop
inc
mov
iret
and
inc
adc
inc
imul
lock
mov
mov
mov
jae
cmp
stos
adc
fcomps
cli
int3
xchg
dec
out
mov
pop
negb
cmp
mov
inc
mov
in
push
cli
arpl
add
enter
and
idiv
and
and
xchg
lcall
aaa
xchg
add
jo
sbb
rcr
lock
xor
cmpsb
stos
mov
int3
push
jno
xchg
add
jno
push
push
push
mov
shll
jl
jle
and
cmpsb
daa
daa
test
and
adc
gs
out
dec
ds
xchg
and
pop
int3
cwtl
cs
push
pop
mov
mov
jl
sbb
jmp
push
lret
sbb
out
or
icebp
cmpsb
push
daa
sbb
cmpsl
xor
dec
lods
jno
xchg
dec
lret
mov
sbb
cmp
or
adc
xor
mov
mov
push
test
imul
push
fcmovnu
add
sub
adc
adc
xor
push
mov
push
lret
dec
les
mov
mov
test
mov
fcomps
cltd
and
jno
rcrb
mov
leave
orb
jl
pop
lcall
adc
iret
ficoms
aaa
mov
sbb
dec
out
test
inc
je
cmp
iret
adc
das
xor
inc
jp
loope
inc
cwtl
push
cltd
xor
lret
rcrb
add
or
in
inc
mov
hlt
inc
push
inc
pop
inc
mov
adc
xor
cwtl
mov
sahf
cmpsl
lods
lahf
fildll
iret
mov
and
fs
rclb
fnsave
rcr
mov
fcomps
outsb
icebp
iret
cmc
imul
scas
rorb
jp
sub
mov
xor
xchg
cltd
scas
inc
or
cs
ror
mov
cmp
lret
inc
aam
xchg
xchg
pop
push
cltd
jg
ret
fldcw
mov
call
xchg
mov
sub
lock
out
adc
mulb
adc
pavgb
insb
xor
push
insl
push
into
ds
aam
ss
pop
inc
inc
cwtl
or
xor
jno
pop
inc
rcl
aad
aaa
ljmp
nop
or
sbb
repnz
jl
pop
push
and
imul
cwtl
sbb
add
cmp
lret
stos
nop
xchg
je
mov
xchg
dec
mov
xchg
add
fdivs
loopne
imull
adc
call
jb
shll
jl
jle
pusha
int
outsb
aaa
dec
adc
mov
pop
inc
sbb
dec
fisttpll
dec
loope
add
fldenv
push
dec
sbb
dec
adc
inc
mov
xchg
fwait
shrl
test
sbb
sbb
sbb
roll
into
pop
jo
mov
rclb
notl
cmp
mov
shlb
fiaddl
jl
and
add
daa
mulb
jno
sbb
pop
mov
repnz
lahf
es
xchg
fldcw
lahf
sbb
sub
test
push
hlt
push
mov
mov
cmpsb
jmp
push
int3
push
and
mov
xchg
inc
js
sti
adc
mov
rorb
sbb
inc
mov
fwait
sbb
cmp
cmp
push
inc
pop
fs
call
mov
cmp
cmpsb
daa
daa
cmpsl
cmpsl
sub
test
xor
insb
mov
shll
pop
mov
adc
jo
xlat
or
xchg
fstpl
stos
mov
jne
dec
in
pusha
scas
stos
out
cli
xor
fdiv
and
js
mov
cs
inc
jecxz
push
rcrl
cwtl
and
mov
and
mov
and
std
and
cmpsb
inc
daa
scas
xchg
sub
push
insb
pop
jb
fstl
and
pop
inc
lret
xor
push
pop
jae
das
arpl
sub
adc
xchg
test
sbb
mov
jmp
sbb
fwait
add
test
inc
orl
sub
in
adc
cmp
inc
pop
inc
inc
loope
and
cmpsl
dec
or
cmpsl
aaa
sub
iret
shrl
pop
xor
jno
xchg
inc
mov
shrl
dec
xor
ss
inc
test
sub
push
pop
lret
pop
or
xor
pop
lea
cmp
shrl
icebp
rolb
inc
addl
jecxz
sbb
mov
or
jl
repz
icebp
xor
addr16
ljmp
xchg
add
push
faddl
lock
xor
pop
and
sbb
dec
jno
xchg
add
jp
mov
jecxz
push
popf
xchg
sbb
adc
mov
cmp
roll
push
push
jl
jle
and
mov
xor
cmp
jo
je
jg
fsubr
cmp
lods
xchg
sbb
aaa
popf
sub
fcompl
mov
sbb
mov
sub
and
sbb
adc
or
mov
jp
out
jl
jle
xchg
ret
pop
scas
cmp
and
pushf
test
mov
and
repz
sbb
xor
xchg
xchg
xchg
pop
hlt
cwtl
mov
outsl
dec
int
sub
test
lahf
test
aas
jecxz
inc
mov
pop
inc
jecxz
outsb
adc
out
mov
and
xor
push
dec
stc
cmpsl
push
sub
insb
in
pop
push
mov
xchg
and
lea
dec
sbb
loope
test
sub
daa
sbb
pushf
sbb
sub
adc
pop
jno
jl
repz
test
scas
adc
mov
adc
ret
lret
sarb
call
fistl
mov
push
pop
push
xlat
cmp
add
pop
adc
daa
dec
mov
rcrl
mov
arpl
add
cmpsb
bnd
inc
push
pop
mov
jo
mov
pop
mov
xor
scas
ljmp
mov
js
popf
jno
lret
rclb
mov
test
sub
or
into
fisubs
pop
mov
push
iret
fwait
in
pop
in
xchg
std
sbb
cwtl
std
sbb
cltd
pushf
sbb
fstps
aas
fld
mov
shrb
fucomp
lock
adc
xchg
hlt
adc
add
push
sets
sbb
lcall
std
jle
inc
std
mov
in
and
jb
lcall
pop
test
sub
insb
mov
xchg
int
std
cmp
sti
std
sbb
std
inc
cld
inc
repz
push
rcr
fstpt
ret
xchg
test
adc
xor
pop
out
jge
and
adc
inc
fwait
cltd
in
pushf
into
sbb
sahf
std
pop
cli
jb
hlt
out
movsb
xacquire
jp
test
insb
mov
pop
bound
xor
popf
sub
dec
mov
inc
gs
es
loop
cmpsl
dec
icebp
icebp
imul
jmp
jmp
insl
jmp
repz
cmp
add
cli
fnstenv
cli
pop
push
cmpsb
negl
adc
flds
jp
cmp
std
sub
dec
add
nop
adc
pop
push
ftst
mov
shl
out
icebp
call
jo
jae
ss
lods
cs
xchg
scas
pop
rcr
xor
icebp
inc
out
xor
loop
scas
pop
ret
addr16
push
adc
movsl
xchg
xor
add
std
movsb
std
test
bound
lret
xor
or
dec
adc
cmc
je
gs
inc
xchg
ss
testl
adc
dec
fwait
test
cmp
mov
cmpsl
icebp
inc
iret
add
std
inc
std
add
faddp
mov
pop
inc
mov
mov
pop
dec
cwtl
jmp
mov
sub
fldcw
fsts
mov
push
mov
mov
push
jns
fdivrs
inc
sbb
pop
fnstcw
flds
push
icebp
arpl
add
dec
out
xchg
scas
dec
insb
popl
ljmp
fcomps
rorl
pushf
rolb
xor
dec
jae
push
dec
adc
icebp
div
xlat
icebp
cwtl
icebp
cmp
pop
icebp
sbb
mov
fiadds
mov
adc
and
in
pop
es
andl
inc
push
or
inc
int3
inc
lea
inc
into
cltd
dec
icebp
push
xchg
shrb
xor
push
out
push
pop
adc
jp
jp
cld
and
xor
xchg
stc
lret
loop
xorl
int3
jl
jle
pusha
aam
pusha
cltd
jp
in
or
cmovl
and
sbbb
jno
xchg
lcall
jle
fstps
sub
or
push
dec
loope
sar
adc
jbe
out
nop
or
imul
cs
je
adc
pop
and
mov
inc
outsl
inc
roll
xchg
sar
pushf
addr16
mov
add
addr16
sub
cmpsb
inc
loope
lods
minps
jno
scas
mov
cmc
inc
les
sbb
xor
jns
jne
int
adcl
xcrypt-ofb
cmpsl
out
cli
stos
flds
enter
xchg
out
adc
mov
roll
sbb
pop
out
and
nop
lock
xchg
sti
dec
xor
xchg
push
adc
push
int3
adc
xchg
xchg
mov
mov
mov
fstps
fstps
fstps
fstps
and
adc
and
and
jp
mov
and
jle
mov
cmp
inc
or
or
mov
dec
lea
dec
mov
dec
call
nop
lahf
das
scas
icebp
mov
push
mov
pop
sbb
xor
scas
jo
xor
push
sbb
pop
jl
and
and
inc
bound
aam
lods
aas
lods
inc
cmp
jns
mov
adc
in
cltd
jl
jp
daa
mov
push
aam
jne
or
and
push
mov
mov
inc
mov
ror
lahf
fildll
adc
and
mov
lods
loopne
out
imul
xor
cmc
mov
sub
out
rcr
cmp
fisubl
call
cltd
sahf
pop
stos
mov
inc
fs
repnz
cwtl
mov
xchg
dec
mov
inc
jae
add
xchg
xchg
adc
add
lret
loop
or
inc
jo
fwait
icebp
enter
mov
xor
xchg
fisttpl
icebp
pushf
scas
sbb
sahf
cmpsb
pop
mov
sbb
or
out
insb
pop
lret
push
xorb
cmp
lea
lea
dec
cltd
nop
xor
icebp
xchg
icebp
adc
xor
sub
sbb
pushf
std
sbb
std
sahf
cld
pop
bound
cbtw
ror
xchg
mov
cli
js
pusha
cs
lock
and
adc
iret
push
xchg
sub
xchg
mov
aam
or
lods
icebp
mov
jle
sub
pushf
push
int3
test
shlb
adc
psubusb
or
and
repnz
testb
mov
fldenv
int
inc
sbb
sarb
ja
stos
int3
mov
std
mov
mov
inc
pop
mov
pop
dec
push
push
mov
popl
or
nop
repz
mov
fwait
into
mov
push
or
xchg
or
mov
or
mov
dec
nop
dec
adc
cwtl
adc
outsl
jmp
xchg
arpl
scas
inc
pop
xchg
dec
push
dec
xchg
dec
pop
je
sbb
cltd
mov
xor
imul
sbb
dec
xchg
dec
adc
dec
xchg
outsl
dec
int3
jmp
sbb
cwtl
inc
sbb
imul
add
dec
jmp
icebp
rcll
push
jns
push
mov
add
push
push
dec
sbb
int3
adc
inc
and
xor
cwtl
xchg
fdivrs
sbb
pop
sbb
jle
shrl
inc
adc
iret
sar
icebp
sub
pop
sbb
dec
sub
insb
xor
sbb
scas
popa
adc
rclb
pop
ret
adc
xchg
fnstcw
push
inc
rol
inc
cltd
xchg
push
mov
sub
dec
nop
cs
xor
loopne
pop
jo
sbb
jl
jne
adc
daa
popf
sub
inc
jno
xor
lea
icebp
xchg
cltd
test
sub
dec
pop
adc
lods
xchg
push
jp
sbb
sarl
sbb
nop
mov
shl
adc
jmp
add
outsb
jecxz
cmp
imul
mov
out
xchg
inc
xchg
dec
sbb
sbb
fwait
push
sahf
and
xchg
jb,pn
pop
inc
andb
push
adc
xchg
cli
cmp
xchg
cwtl
xchg
xor
dec
jecxz
dec
sbb
push
testl
ljmp
xchg
insb
insb
mov
or
and
rcrl
adc
lret
adc
movsb
xchg
and
out
fs
cmpsl
jmp
sar
int3
cltd
orb
xor
pop
jno
xchg
sbbb
jno
lret
sub
dec
mov
cwtl
lds
imul
xchg
dec
xchg
outsb
iret
lods
adc
cmp
scas
shll
pop
dec
push
add
imul
adc
jae
sub
xlat
dec
sub
adc
xchg
popf
jmp
mov
sbb
rcl
lock
push
sbb
dec
xchg
je
mov
mov
push
push
pop
div
jae
push
xor
shlb
cwtl
lret
push
and
adc
inc
mov
shll
push
cmpsl
xor
jmp
dec
adc
adc
fs
pop
into
cwtl
aad
and
mov
fldl
in
inc
dec
adc
lcall
lods
mov
pop
sahf
mov
fwait
sub
frstor
lods
add
jo
and
push
inc
lret
push
mov
jae
adc
xor
lea
ljmp
popa
push
test
and
lea
cli
push
xchg
cmpsl
test
lret
fwait
out
or
icebp
fistps
lahf
loopne
jb
sti
cmp
pop
dec
movsb
adc
leave
in
mov
pop
fstpt
adc
sub
fidivs
insb
lock
dec
jp
add
gs
xor
and
pop
cmp
push
bound
fxch
lock
cmp
stos
stc
xor
fcoms
push
push
lret
push
cmovae
add
add
add
sbb
test
adc
lahf
mov
mov
ljmp
cwtl
negb
lcall
in
adc
xchg
sahf
xchg
notb
xchg
adc
jle
mov
pop
out
inc
xor
shr
push
adc
adc
and
dec
xor
hlt
push
rcrb
push
aam
fsubrs
xor
and
fimull
push
sbb
rcl
pop
jle
and
sbb
lea
lods
inc
lods
test
cwtl
or
sbb
adc
xor
das
adc
ljmp
cmp
pop
push
push
jno
sub
lret
stos
add
imul
mov
outsl
fnstenv
pop
sbb
inc
outsb
nop
adc
inc
cmpsb
fmulp
lock
fdivl
imull
pusha
and
adc
push
stc
cmpsb
cmp
mov
jge
aas
es
or
paddusw
mov
push
lock
push
out
aas
xchg
jae
or
mov
movsb
push
ret
xchg
push
adc
xchg
xor
pusha
fsubs
push
andb
adc
cwtl
inc
fsubrs
lret
dec
cmpsb
bound
jno
xor
movsb
push
sbb
or
into
push
dec
jno
popa
fwait
sahf
sbb
cmp
push
nop
jne
pop
mov
ret
shrl
sbb
adc
imul
push
jmp
icebp
pop
cmpsb
arpl
scas
cltd
and
movsb
push
mov
push
ficoms
aas
xor
pop
sahf
es
push
imul
and
dec
nop
sbb
adc
inc
cld
lods
sbb
xor
inc
inc
testl
nop
cmp
cmp
sub
popa
lods
das
jl
pop
pushf
into
inc
movsb
lret
shll
cwtl
mov
or
xchg
dec
int
fmull
and
paddw
sahf
xchg
or
adc
xor
or
push
pop
sbb
jp
mov
mov
mov
xor
shl
and
dec
lock
outsl
xor
loope
push
gs
sub
aad
loope
js
das
mov
rcll
sub
clc
jle
cmpb
fs
inc
out
inc
add
inc
je
arpl
mov
sahf
mov
rcrb
loop
pop
cmpsb
inc
rorb
xor
or
data16
and
imul
lret
int3
xchg
mov
in
call
rclb
push
adc
xchg
arpl
enter
jg
loope
pop
jno
and
xchg
insb
pop
rcrl
push
mov
sub
mov
icebp
and
cmp
inc
in
and
nop
and
jge
mov
js
adc
push
int
jne
and
mov
pusha
int3
pop
lcall
pop
lock
ljmp
jno
out
inc
shll
mov
fldenv
adcb
xor
xchg
clc
xor
inc
pop
ret
nop
gs
mov
dec
insb
scas
lea
mov
pop
int3
jl
aam
lock
jbe
ds
sbb
fnsave
daa
push
xor
mov
mov
mov
or
mov
cmp
scas
jge
push
mov
push
sbb
lds
xchg
mov
adc
xor
subb
xchg
andb
rcrb
aad
jp
outsl
sbb
xor
cmpsb
sahf
out
push
add
mov
into
cmc
rep
push
sub
sbb
daa
adc
sbb
cltd
std
sbb
mov
xchg
push
test
sub
test
xor
scas
sbb
adc
shrb
cmp
std
enter
into
and
jne
ljmp
out
or
fcoml
cs
pop
jmp
aam
mov
adc
fdivp
ror
loopne
mov
sub
or
in
inc
sbb
loop
push
dec
inc
sbb
xchg
std
sub
std
and
jmp
rcr
data16
fs
aaa
repz
adc
sbb
jl
jg
add
into
aaa
sbb
xor
scas
inc
push
shlb
mov
dec
jnp
pushf
nop
and
out
xchg
cs
xchg
sbb
adc
mov
pop
sub
js
int3
mov
xor
xor
lods
cmp
cmp
aas
std
inc
in
inc
std
dec
lahf
daa
lea
fists
xor
aaa
insb
shl
mov
inc
inc
inc
xor
sub
imul
jns
addr16
arpl
inc
push
inc
repz
pop
mov
lret
jo
xor
lret
movsb
shrl
inc
movsb
insb
cltd
xor
and
jmp
mov
or
mov
pop
lds
push
pop
sbb
jo
cmpsb
lods
add
mov
cmpsb
dec
sar
loope
ret
les
in
lock
aad
orb
xchg
rorb
imul
inc
push
fs
fwait
ss
testl
mov
lcall
and
dec
xchg
lret
stos
addr16
pop
fwait
out
nop
inc
rcl
dec
xchg
dec
pop
cltd
pushf
icebp
pop
scas
sbb
sbb
pushf
dec
sbb
out
jmp
pop
inc
lahf
sbb
fldenv
jp
mov
push
and
cmpsb
std
mov
es
test
mov
xchg
sbb
mov
addr16
jle
lcall
loopne
dec
loopne
lea
fisttpl
cmp
fxch
adc
test
lahf
ror
pop
mov
pop
mov
lds
sub
mov
js
dec
cmpsl
jo
scas
cwtl
mov
imul
pop
ljmp
cmp
adc
push
push
jno
out
inc
inc
loopne
syscall
push
mov
fisubrl
push
xor
mov
lahf
adc
pop
roll
pop
and
pop
xor
call
nop
scas
inc
push
gs
fcomps
jge
pop
mov
divb
mov
pop
mov
bound
je
push
fdivrs
push
jl
stos
xor
xchg
cmp
lcall
cmp
xchg
stos
mov
xchg
xorl
iret
imul
ss
jb
cmp
fldt
sub
rcl
sub
lret
jecxz
rcll
fcomi
and
adc
int3
mov
push
adc
lret
hlt
mov
aam
mov
jle
pusha
or
push
data16
adc
push
in
lds
dec
dec
bound
cwtl
pop
insb
push
push
xchg
icebp
add
lcall
xchg
mov
push
pop
xchg
idiv
dec
adc
out
pop
repz
fcom
jg
sbb
xor
sti
out
rcrl
mov
icebp
in
mov
and
lods
ljmp
pop
adc
lret
sub
inc
sbb
xor
cmp
ret
jne
dec
push
pop
push
loop
fwait
and
cwtl
outsb
fdivrs
sbb
les
xchg
sbbb
pop
in
xchg
std
mov
xlat
jnp
and
inc
mov
dec
into
lock
out
xor
add
lcall
sahf
mov
sbb
mov
push
cs
and
pop
push
mov
fsub
adc
and
int3
inc
xchg
and
lea
inc
xchg
push
adc
xor
pusha
pop
xchg
out
sbb
adc
and
nop
adc
adc
rcrb
shll
mov
into
cmpsl
xchg
xchg
movsl
aam
mov
mov
pop
or
rolb
inc
dec
lock
pop
lcall
popf
cmpsb
sbbb
xchg
icebp
into
and
xchg
cltd
xor
jp
pop
clc
inc
iret
inc
inc
adcb
xor
sbb
insb
mov
sub
es
push
mov
mov
adc
and
lret
xchg
jle
loop
call
sub
shll
out
xchg
insl
in
mov
pop
push
pop
pop
test
sub
mov
dec
into
iret
or
cli
lret
mov
sub
mov
mov
sub
add
mov
inc
and
lock
stos
popf
inc
test
xor
and
push
fwait
jecxz
adc
scas
dec
push
fbstp
dec
xor
cmc
dec
aaa
xchg
and
and
pop
stos
xchg
jno
lahf
into
out
xor
pop
adc
adc
popf
sbb
sub
push
sarl
mov
add
cwtl
ljmp
shrb
test
mov
push
fcomps
sbb
test
add
push
icebp
lret
jecxz
cmp
dec
mov
mov
lea
sarb
adc
cmp
mov
pop
ficomps
fldl
stos
push
ljmp
mov
shrl
scas
shll
popf
hlt
dec
add
out
sub
popf
repnz
push
mov
fiadds
fcoml
hlt
mov
lcall
pop
lret
and
jno
xchg
jae
and
push
lcall
push
xor
pop
xchg
mov
lea
in
mov
fimuls
lea
cli
movsl
cmp
js
loopne
popf
mov
scas
or
xlat
inc
pop
dec
lret
cli
cmp
je
in
ret
jl
add
sti
jae
sub
sub
in
sub
push
jae
jp
ja
mov
addr16
and
mov
and
dec
mov
or
mov
push
push
shr
shll
push
jno
mov
sub
scas
mov
fsts
pop
adc
rorb
ljmp
cmpsl
imull
or
pop
out
movsb
data16
jno
lret
cmp
pop
and
cmpsb
and
mov
cltd
inc
pop
outsl
jp
jl
std
push
out
xchg
enter
int
mov
mov
jbe
lcall
lods
xchg
adc
adc
adc
adc
pop
sbb
xchg
mov
icebp
fisubrs
pushf
movsl
iret
add
repnz
hlt
repnz
into
sub
push
daa
cmp
imul
nop
ja
ss
dec
inc
push
mov
icebp
sub
and
and
fildll
mov
xchg
ja
test
pusha
and
xchg
and
sbbb
pusha
xchg
and
jne
ret
ffree
mov
movsl
jmp
data16
xchg
es
sub
in
pop
pop
push
cmc
xor
iret
sub
xor
mov
idiv
jmp
fsubrs
sub
imul
xor
mov
stc
inc
mov
andb
push
movsl
and
jmp
pop
lods
orl
dec
add
and
adc
out
sbb
fdivrs
inc
inc
inc
fs
int3
lret
or
dec
shll
pop
push
fdivrl
push
or
test
pusha
cld
mov
mov
jmp
xor
pushf
repz
inc
loop
dec
loop
jno
fwait
cmc
popf
push
int
sub
icebp
mov
sub
lret
inc
push
iret
inc
mov
in
sub
test
and
out
adc
jae
andb
pop
out
sbb
sbb
push
ret
bound
jle
fsubrs
fs
sub
pop
test
mov
adc
stc
icebp
mov
es
dec
lcall
int
and
pop
dec
popa
and
jmp
lea
scas
mov
push
mov
orb
push
iret
and
mov
cmpsb
into
pop
sahf
xor
push
out
and
sub
stos
rcrb
jae
and
inc
xor
fists
or
xor
insb
inc
pop
xchg
adc
das
ss
xchg
sbb
push
lcall
push
mov
mov
fimuls
int3
xchg
cmp
jmp
cmp
inc
test
adc
dec
in
sbb
fsubs
out
mov
andb
cli
lahf
xchg
scas
lahf
test
lret
xor
push
pusha
pop
push
xor
push
outsl
int3
shrb
xor
sbb
xchg
lds
rcrl
andb
mov
sbb
loop
and
push
cmp
fwait
and
ds
jnp
bound
xchg
stos
jno
xor
adc
inc
sahf
repnz
insb
hlt
repz
testb
add
outsb
mov
lea
scas
inc
ss
dec
xchg
pop
scas
sbb
cld
sub
lods
shll
sbb
xchg
xchg
rep
and
push
nop
cmc
and
lock
and
adc
call
aad
ljmp
lret
scas
bound
popa
xchg
pusha
mov
fldt
jmp
fcomps
cmp
adc
sbb
add
xchg
adc
xor
xlat
sub
cmp
add
fldenv
add
sbb
stos
xor
pushf
cmc
or
shrb
push
adc
inc
outsl
test
and
xchg
dec
aaa
dec
testl
icebp
mov
roll
shrb
and
bound
iret
sub
or
push
out
cs
inc
lock
xor
xchg
shl
icebp
xlat
icebp
subb
scas
inc
movsb
mov
nop
xlat
push
daa
aam
mov
out
pop
sbb
sbb
or
mov
fldcw
mov
rcll
inc
xchg
fst
sub
adc
cwtl
js
cmp
lcall
out
lahf
and
icebp
ret
xor
scas
std
ss
inc
sbb
dec
sub
test
icebp
jmp
in
or
cli
xlat
ljmp
push
into
mov
sub
mov
push
xor
cs
call
loope
mov
in
fs
push
jae
jp
inc
pusha
ljmp
and
lret
popf
lret
int3
sub
jg
inc
movsb
push
inc
insb
push
lret
push
pop
cmp
mov
push
push
mov
pop
xchg
push
cmp
sub
xor
jae
popf
ss
mov
add
fs
inc
adc
gs
imul
cmc
gs
mov
sub
test
and
mov
pop
xchg
clc
jl
and
mov
inc
pushf
cs
sub
sbb
fldl
inc
adc
out
pop
pop
imul
jmp
addr16
cltd
mov
pushf
fucomi
mov
add
add
out
sbb
dec
daa
push
cmpsl
cmc
popf
adc
pop
aad
test
stc
int
cld
mov
subl
popf
fldcw
jl
and
cmp
std
sar
xchg
pop
jne
fistpll
cwtl
xchg
stos
mov
cmpsb
sub
sub
or
adc
mov
lcall
or
dec
xor
jo
cmpsb
out
pop
dec
cmp
add
es
xchg
minps
popf
sub
sahf
cli
loop
adc
or
mov
or
shr
mov
xchg
mov
push
push
cmpsb
and
sub
cmp
xchg
mov
sarb
daa
push
aam
dec
sbb
adc
mov
push
pop
sub
cli
aad
shrl
and
sub
pop
or
adc
scas
adc
shrl
push
data16
ljmp
lahf
xor
and
mov
mov
jmp
insl
xchg
nopl
push
lret
in
fstps
lea
jp
repz
fisubrs
inc
call
insb
push
mov
sbb
vmovddup
movsb
addr16
push
icebp
nop
in
lods
rcrl
aaa
pop
iret
and
cmp
adc
fcompl
pop
inc
pop
xchg
cltd
call
jns
pop
inc
cld
ss
test
dec
mov
mov
dec
add
jmp
xor
aad
dec
push
push
cmpsb
addr16
jg
add
pop
cli
int
xchg
lds
jl
push
adc
movsl
pop
rcll
shl
jnp
out
popa
incb
mov
cld
inc
pop
loop
cmpsl
into
adc
dec
shll
pop
in
dec
icebp
push
inc
mov
ja
push
lahf
dec
sbb
imul
cmp
and
nop
in
push
and
sub
leave
jno
imul
mull
mov
and
das
mov
aam
adc
test
jmp
or
shrl
jns
cmp
int
xchg
xchg
sbb
iret
dec
int
aad
dec
je
pop
fisubrs
add
mov
add
cwtl
push
xor
test
pop
mov
or
leave
cmp
out
lcall
rcll
icebp
cmp
cmp
adc
cmp
mov
fs
shl
scas
lds
mov
pop
int3
into
bound
xor
ljmp
mov
daa
aaa
into
rolb
and
mov
push
pop
jbe
sbb
sbbb
mov
mov
cmp
push
push
jmp
rcrl
fisttpll
faddl
xor
pushf
out
lret
sbb
pop
xlat
push
ljmp
xchg
test
jo
and
nop
dec
out
mov
and
adc
push
shll
push
lods
mov
adc
lret
cmpsb
dec
pop
xchg
sbb
int
dec
ror
sub
cld
cli
and
xchg
push
pusha
int3
fsts
rcr
push
fsts
aad
push
xchg
lcall
loopne
inc
and
push
pop
out
sub
pop
icebp
pop
mov
lahf
std
fistps
mov
into
bound
jl
test
mov
in
cmpsb
cmp
cli
std
inc
pop
adc
adc
rcr
lret
mov
pusha
iret
jo
sbb
lahf
adc
mov
sbb
push
rcrb
push
inc
push
out
bound
inc
adc
scas
mov
loopne
jle
les
scas
pusha
inc
adc
pop
xchg
insb
adc
data16
imul
shrl
sub
mov
jecxz
cmpsb
les
pop
dec
lock
push
xchg
aaa
push
je
aad
imul
imul
out
ss
fisubl
lea
daa
adc
add
jae
imul
lret
insb
std
imul
mov
jo
lahf
fnstsw
push
insb
mov
aam
pop
arpl
xchg
cmp
push
cmp
mov
imul
xor
inc
jno
lahf
inc
add
dec
ret
ret
test
xchg
adc
inc
scas
ss
jns
int
jae
sahf
and
sbb
mov
out
movsl
xchg
icebp
clc
mov
sub
dec
adc
cltd
add
cmp
push
insb
ds
jmp
icebp
sub
push
fcoms
mov
lea
cvtps2pd
ficoms
and
es
daa
sahf
fstpl
pop
bound
aad
xor
mov
sbb
cmp
nop
popa
int3
mov
cltd
push
sbb
xlat
and
out
xor
xor
xchg
rorl
adc
xchg
adc
scas
shrl
jmp
cmpsb
xor
iret
repz
sahf
cmp
cmc
inc
lret
loope
imul
sbb
pop
sub
mov
fwait
mov
out
mov
call
or
lcall
and
and
out
push
ja
and
sbb
push
shrl
std
ljmp
push
pop
jns
inc
test
xorl
xlat
sub
jae
pop
fcomip
aad
dec
aad
out
push
adc
sbb
popf
loopne
in
pop
cld
fistps
fcmovb
pushf
iret
in
or
in
daa
xor
cmp
xchg
std
setno
loope
gs
add
mov
or
mov
dec
and
push
insb
push
andb
fldenv
xchg
jecxz
fnstenv
lret
lret
jmp
xchg
jmp
xor
aad
cmp
pop
adcb
mov
lret
mov
jo
xor
jl
sbb
xchg
fcompl
es
fstp
data16
es
push
pop
cltd
dec
jo
adc
aam
loop
fcomps
adc
lret
jno
sti
aad
jmp
loop
add
out
dec
iret
sub
or
and
xlat
push
jl
es
ret
leave
jb
cmpb
cwtl
sahf
lods
outsb
insb
das
lahf
movsl
out
mov
out
pop
cmc
cld
andb
or
das
xchg
or
dec
sub
sub
adc
xchg
es
pop
popa
cmp
rcrl
out
fsubr
int
iret
in
jno
arpl
stos
or
sahf
ss
in
std
in
scas
nop
push
out
loopne
les
push
ljmp
pop
fcoml
pushf
cld
rcrb
ja
in
cli
lahf
fcomi
popf
icebp
fcomip
inc
icebp
and
dec
shlb
outsl
bound
sub
pop
cwtl
cltd
pop
push
fsubl
mov
and
std
cli
xchg
or
sub
jns
lahf
xchg
adc
sub
test
cld
xor
inc
aad
int3
sub
cmpb
jge
push
in
inc
std
dec
cld
xor
pop
mov
mov
pop
xchg
push
bound
cmc
mov
push
sbb
lcall
sub
cmp
inc
addr16
sub
jp
xor
movsl
aad
test
ljmp
push
das
shll
fsubrl
sub
mov
push
mov
aad
lods
sub
fdivrl
out
xor
test
inc
fdivs
sbb
xchg
push
push
cmp
nop
lods
mov
cli
sub
and
ds
dec
xchg
jne
jp
sbb
sub
out
insl
inc
fwait
leave
xchg
pop
push
xlat
inc
std
cli
pop
cs
lcall
aam
pop
cmp
out
aaa
mov
ja
addr16
xor
cwtl
lahf
das
sarb
ds
xor
hlt
ja
mov
fwait
das
out
lds
sbb
cltd
data16
dec
xor
pop
push
cmp
inc
push
test
stc
push
cmpsb
ss
shrl
js
pop
aas
andb
cmc
cli
bound
mov
pop
sub
adc
dec
push
push
and
mov
aas
aas
popf
dec
gs
dec
or
shr
cmp
sbb
xchg
gs
or
push
xor
and
inc
aas
sahf
xor
push
push
push
inc
loop
dec
cwtl
xor
out
push
xchg
daa
jns
jmp
cld
pop
sub
and
push
es
cld
push
and
or
nop
out
mov
mov
sbb
cmp
jl
sub
loope
dec
push
popa
sti
popf
sub
cmpsb
mov
cmpsb
ss
cmp
cwtl
popl
pop
sub
es
or
pushf
adc
arpl
dec
dec
mov
jne
push
cmpsb
sub
aad
and
mov
fs
enter
sub
xchg
mov
mov
gs
push
pop
pop
lds
fxch
int3
sub
lods
pop
mov
and
pusha
mov
sbb
xor
add
xorl
dec
jno
lea
sbb
scas
mov
imul
mov
rolb
les
leave
jmp
dec
repnz
mov
cmp
xor
icebp
scas
sub
ss
inc
jbe
mov
imul
decb
gs
daa
cltd
sub
lahf
xchg
shll
daa
mov
fsubl
aad
xchg
cld
mov
std
or
dec
loop
pop
cli
or
push
xchg
inc
xchg
loop
xchg
adc
scas
xchg
xor
xchg
iret
jp
cwtl
push
sbb
fmull
fldpi
rcrb
arpl
fs
and
mov
and
mov
out
cmpsl
ljmp
xchg
cwtl
leave
dec
fwait
sbb
in
adc
or
pusha
adc
dec
pop
adc
sbb
cwtl
std
sbb
cltd
and
lcall
pushf
sbb
fstps
bound
lahf
mov
shlb
and
icebp
xchg
lahf
es
cli
pusha
sub
xchg
in
dec
xchg
bound
in
and
mov
adc
push
sbb
dec
imul
arpl
jae
push
sbb
out
es
cmpsl
test
sub
dec
push
mov
jmp
mov
or
fisttps
nop
push
mov
and
cld
cmpsb
dec
repz
nop
mov
daa
inc
sbb
cltd
jnp
repnz
and
mov
ja
sahf
adc
xchg
cltd
dec
stc
dec
xchg
mov
pop
lea
es
jp
cmpsl
push
mov
push
or
test
mov
mov
rcl
insb
ret
icebp
ret
scas
inc
inc
in
shrl
and
dec
inc
jns
adc
enter
and
xor
pop
sub
lods
inc
loope
fldpi
fildll
sbb
pushf
adc
adc
sti
xchg
inc
cwtl
cmp
movsl
pop
adc
sub
lcall
cmpsb
fs
cmp
pop
pop
pop
cltd
jae
jp
mov
mov
in
xchg
scas
xchg
inc
call
movsb
mov
pop
mov
push
xchg
xchg
scas
xchg
lcall
scas
cmpsb
cmp
xchg
cld
stos
loopne
daa
lahf
pushf
int
cmpsb
sbb
mov
out
sar
cwtl
mov
mov
and
cmpsb
mov
cwtl
bound
pushf
movsl
push
test
pop
mov
pop
adcl
dec
and
jo
scas
cmpsl
adc
lods
pop
sbb
fcoml
cmp
insb
daa
xor
mov
dec
pop
imul
icebp
mov
lea
xor
cltd
icebp
sbb
cld
inc
lahf
cmpsb
jo
adc
xchg
xor
sbb
mov
repz
mov
rclb
sbbb
movsl
push
insb
movsb
jae
mov
mov
jmp
xchg
jae
aam
repnz
and
lea
aad
xchg
bound
mov
lahf
pop
fisubs
out
sbb
pop
and
jnp
das
xchg
mov
nop
repnz
imul
push
dec
xchg
sub
dec
lcall
push
rorl
pop
int3
fwait
push
movsl
inc
push
test
xchg
es
cwtl
sub
sbb
mov
push
adc
adcb
sub
or
mov
xchg
rcrl
adc
fwait
add
clc
ljmp
adc
jecxz
pop
push
xchg
sbb
arpl
rcrl
in
and
mov
sti
movsb
add
adc
popf
inc
adc
test
mov
fstpl
pop
mov
add
fsts
test
pop
mov
shll
bndldx
dec
sbb
push
imul
mov
jecxz
sbbl
push
push
cmc
rcrb
fldenv
cmpsb
cmp
inc
aad
aam
push
xlat
xor
dec
xchg
xchg
popf
icebp
xchg
into
adc
adc
xchg
jo
push
pusha
fwait
inc
lcall
outsl
sti
loop
jno
jle
push
sbb
sbb
mov
and
and
and
and
and
movsb
dec
and
mov
xchg
fldcw
shrl
iret
cwtl
or
mov
mov
imul
fbld
pusha
sbb
and
and
call
fsubl
jl
sub
and
fldenv
ficomps
or
mov
loop
adc
adc
scas
adc
loopne
adc
xchg
and
sbb
fsts
fsts
sbb
sbb
std
sbb
pushf
and
popf
test
pop
bound
and
jmp
and
pop
sti
es
cmpsb
xchg
lret
add
or
lahf
mov
xor
dec
icebp
pcmpeqw
mov
rol
push
fstps
fstps
arpl
icebp
and
mov
pop
sti
add
sub
test
push
xlat
sbbb
movsl
pop
insb
xchg
lahf
adc
popf
cmpsb
bound
insb
mov
nop
jns
mov
sahf
cmpsl
xchg
mov
sbb
mov
cmpsl
adc
push
lea
and
and
mov
lret
or
je
cmpsl
or
sbb
dec
adc
pop
push
fimuls
jb
xor
dec
adc
adc
push
pop
mov
test
cmpsb
adc
fwait
pushf
mov
or
lea
lahf
lahf
test
pop
adc
mov
movsb
mov
inc
pop
xchg
cwtl
ficompl
inc
fcomps
mov
adc
mov
xchg
shll
xor
adc
xchg
sbb
lcall
pop
xchg
mov
shl
mov
dec
fbld
seto
xchg
sbb
pushf
sub
mov
out
mov
cltd
pusha
mov
cmpsl
fmull
sbb
dec
sbb
pushf
jbe
scas
push
inc
xchg
pop
adc
and
and
int
test
cmp
and
or
or
incb
adc
nop
sub
xchg
fld
out
and
lret
lahf
pop
hlt
inc
cmp
and
xor
xor
mov
mov
adcl
and
adcl
and
inc
lcall
cwtl
sub
mov
xchg
or
inc
into
xchg
adc
addr16
xor
movsb
aas
bound
xor
dec
xchg
and
fwait
mov
pop
setae
dec
imul
xor
cltd
sahf
pop
lahf
mov
dec
or
movaps
dec
adc
adc
mov
adc
sahf
dec
adc
test
sahf
sbb
fstps
mov
fcoms
pop
jne
out
jne
fs
rcpps
call
sbb
push
and
pop
shlb
daa
loope
dec
sub
shlb
mov
sbb
and
or
lret
adc
sbb
test
cld
xchg
jmp
es
pop
push
fnstenv
sahf
fwait
mov
pop
sub
push
push
mov
mov
scas
lea
mov
dec
jmp
adc
xchg
pop
push
adc
adc
fwait
push
adc
fldln2
pop
pop
xchg
and
sbb
mov
xchg
xchg
push
sbb
rol
push
jmp
out
daa
sub
mov
and
xchg
stos
mov
sub
sbb
cli
call
or
scas
mov
cwtl
popf
dec
dec
sahf
out
adc
pushf
pop
scas
mov
mov
jbe
cmc
jae
popf
xchg
push
frstor
stc
aaa
mov
mov
or
fnstsw
and
test
daa
pop
sub
xchg
in
adc
and
sub
mov
popf
enter
jecxz
sub
fsubr
lea
and
adc
jae
sbb
sahf
ror
adc
push
bound
dec
sbb
jae
sbb
and
mulb
cmpsb
test
or
push
jae
bound
dec
push
scas
inc
dec
mov
adc
sbb
sub
jne
cmc
mulb
xchg
pushf
std
push
dec
adc
and
and
aam
scas
xchg
push
fstps
scas
and
adc
sbb
dec
aam
flds
nopl
mov
jl
iret
mov
into
and
pop
dec
cmpsb
lret
ja
or
mov
popf
iret
pop
pushf
cld
and
fwait
push
sub
inc
out
daa
dec
push
adc
push
dec
jae
xchg
push
mov
fs
imul
pusha
pop
fistpll
sahf
pop
xchg
adc
adc
pop
sbb
dec
outsb
test
pop
inc
popl
adc
out
cltd
xchg
pop
mov
push
and
lea
imul
sub
cmp
jl
sbb
xor
mov
js
insb
mov
mov
rorb
pop
out
fs
popf
aad
xchg
adc
xorl
pop
iret
mov
mov
mov
sbb
mov
jg
sub
scas
sbb
scas
mov
push
pop
lea
adc
nop
lcall
movsb
fmull
repnz
test
adc
xchg
lcall
xchg
movsl
pop
and
sub
icebp
popf
mov
adc
adc
pop
scas
push
and
dec
outsb
push
sub
std
adc
gs
popf
sub
and
loope
cmpsl
xchg
fists
out
pop
mov
cltd
aaa
adc
xchg
int
sub
iret
fistpl
pop
cltd
pushf
pop
xchg
sbb
in
repnz
out
pop
fidivrs
test
pushf
sbb
rorb
and
sub
xchg
addps
adc
dec
adc
movsl
sbb
sub
das
push
inc
nop
xchg
dec
push
xchg
scas
dec
mov
mov
mov
fwait
or
dec
sbb
sbbl
pop
arpl
sub
lock
fs
sub
inc
adc
gs
mov
iret
daa
pop
mov
pop
cmpsb
adc
arpl
sbb
mov
pop
into
or
jl
adc
pop
push
mov
and
out
jae
bound
aaa
sbb
fcompl
cwtl
xchg
sahf
popa
mov
into
icebp
daa
iret
mov
xor
xchg
pop
pop
mov
sbb
mov
out
sbb
sbb
sub
inc
loope
nop
ficompl
cld
mov
movsl
sahf
sbb
mov
mov
mov
fs
mov
dec
aad
pop
xlat
or
sub
sahf
pop
cwtl
pop
scas
popf
xor
xchg
pop
icebp
movsb
into
movsl
pop
mov
jl
xor
aad
sahf
cwtl
cwtl
test
popf
push
nop
mov
orb
repz
dec
xchg
nop
xlat
fwait
loope
in
mov
cmpsb
aaa
mov
int
insb
nop
push
pop
xchg
sbb
push
inc
push
and
jno
push
fs
adc
add
push
sub
and
dec
pushf
xchg
mov
adcl
test
sahf
sbb
pop
rcr
test
es
cltd
pop
push
rcrl
adc
sahf
shll
inc
loope
nop
rcll
sub
xchg
inc
mov
dec
pushf
nop
adc
call
cmpsl
lret
test
xchg
xchg
sarb
cwtl
xchg
jl
jae
pushf
inc
int
adc
into
and
cmpsl
inc
mov
jae
jmp
rcll
aaa
push
pop
nop
xchg
sbb
cli
mov
test
adc
movsb
xchg
pop
insb
fwait
rcrl
fwait
sbb
mov
nop
adc
insb
lea
sahf
cmpsl
adc
xchg
inc
sbb
fnstenv
sub
movsl
dec
cmpsb
insb
sub
fstps
scas
cmpsb
lcall
movsl
jae
sub
ret
es
adc
cwtl
mov
mov
xchg
mov
xchg
adc
jo
sbbl
popf
sub
lahf
sub
mov
subb
fs
aaa
fcoms
mov
sbb
and
in
jae
lea
es
lock
iret
pop
push
pop
pop
and
cltd
popf
or
jae
xchg
mov
sahf
js
icebp
mov
sbb
mov
pusha
fcoms
pop
jnp
sahf
es
and
out
lahf
jo
mov
push
jae
pop
mov
jo
scas
adc
xchg
and
aam
ss
mov
out
movsb
xchg
movsl
mov
mov
xchg
xchg
into
xchg
aam
in
pushf
cld
popf
jae
lahf
ss
mov
and
sbb
bound
popa
cmpsl
mov
out
xchg
mov
cwtl
test
lahf
iret
movsb
cmpsl
std
cmpsb
cmp
iret
mov
cmp
scas
adc
imul
gs
and
cmpsb
xor
push
pop
mov
fs
outsl
imul
xchg
cld
xchg
xor
fcmovne
mov
fisttpl
sub
xchg
inc
pop
push
dec
sbb
fidivl
and
cmpsb
and
lea
sbbl
test
sahf
fisttpl
sbb
scas
xchg
push
rcrb
mov
fistpl
jb
out
xchg
ljmp
movsl
cmp
in
sub
cmp
fstps
movsl
xor
sub
pop
xchg
pop
popf
into
adc
std
cwtl
jl
push
push
and
xchg
and
xchg
lods
lea
push
push
xchg
paddsb
adc
adc
sub
xchg
xchg
dec
sub
push
repz
sbb
mov
lret
xchg
mov
cmp
lcall
bound
sbb
cmc
or
lea
xchg
inc
xchg
jo
pusha
sahf
mov
jl
mov
gs
inc
and
jo
add
mov
repnz
test
pop
push
mov
adc
sbb
rol
pop
mov
scas
pop
xor
mov
push
mov
xchg
sub
mov
xchg
adc
push
fwait
jmp
mov
pop
mov
push
fsubrs
dec
xchg
push
fsubs
sbb
and
movsb
outsl
mov
xchg
push
sbb
inc
rcrl
fwait
popf
xchg
insb
popf
jae
lahf
inc
sub
lock
test
cmp
inc
xchg
imul
lahf
and
sahf
fcomp
mov
push
xchg
xchg
cltd
mov
and
adc
xchg
cmp
mov
fldenv
pushf
mov
int3
iret
or
in
andl
xchg
mov
movsb
mov
cmpsl
out
push
cmpsb
fstl
aaa
cltd
cmpsl
dec
or
movsb
test
and
and
inc
jecxz
sahf
es
and
sub
adc
fidivl
pop
pop
fldenv
fstpl
jae
push
pop
cmp
jnp
xor
adc
cltd
xchg
sbb
inc
and
sbb
sub
insb
adc
push
aaa
aad
nop
adc
cmpsb
daa
imul
jl
xor
pop
popa
adc
jl
mov
push
dec
stos
cmp
xchg
pop
cld
pop
repz
cltd
inc
sbb
rcll
pop
inc
rcrl
lcall
xchg
jae
pop
test
sbb
inc
lea
adc
into
adc
and
xchg
push
mov
adc
inc
daa
nop
adc
xchg
into
xchg
adc
jmp
push
shl
mov
and
cmc
xchg
sub
popf
push
push
or
cmp
iret
lcall
dec
es
mov
or
xchg
rorl
and
shll
adc
adc
adc
push
popa
repz
andl
lcall
push
pop
dec
outsb
fistpl
insb
daa
sbb
or
test
and
and
and
sbb
cwtl
repnz
out
cmp
cmp
xchg
sub
fsubl
mov
iret
cvtdq2ps
adc
lcall
mov
mov
out
pop
sub
xchg
mov
outsb
and
push
mov
push
sbb
xchg
mov
sbb
lcall
pop
mov
aam
pushf
cld
and
rclb
xchg
push
sbb
pop
add
sub
fcoms
adc
pop
out
imul
iret
sbb
xchg
sbb
pop
outsb
push
and
fmuls
xchg
xchg
adc
and
dec
fsubl
aad
scas
xchg
sbb
fcompl
adc
lret
rcrl
mov
xchg
popf
iret
lea
adc
dec
dec
sbb
outsb
xchg
pop
push
sub
mov
popf
or
out
xchg
aad
xor
dec
sbb
dec
out
and
adc
pop
mov
movsl
mov
sub
xchg
push
mov
xchg
sbb
adc
clc
mov
adc
aad
sbb
ja
mov
cmpsb
fsubs
inc
sub
sbb
std
adc
xchg
icebp
pop
scas
sbb
sahf
scas
and
xchg
nop
pop
or
pusha
adc
aaa
aad
aaa
aad
aaa
aad
inc
and
mov
popf
in
ja
pushf
mov
fwait
in
ja
lcall
popf
mov
pop
in
daa
sbb
in
cwtl
ja
sbb
out
xchg
xchg
adc
aaa
inc
xchg
push
adc
and
xor
adc
pusha
pop
clc
cmp
iret
push
fucomp
and
sbb
cld
pusha
test
pusha
lahf
push
test
push
push
pusha
and
lds
push
mov
pop
push
int3
out
es
mov
jecxz,pt
scas
mov
bound
mov
pusha
in
fists
lahf
push
mov
pop
sahf
inc
vmwrite
in
sbb
dec
test
xchg
dec
mov
nop
int3
popa
mov
mov
sti
xchg
adcl
fstps
jb
scas
and
rorb
mov
imul
pusha
scas
push
pop
xchg
arpl
fldl
cmp
push
pop
fwait
and
loopne
push
mov
pop
sbb
inc
iret
push
mov
cmpsl
mov
inc
int
in
or
mov
pop
int3
imul
cwtl
fdivrl
push
mov
pop
xchg
push
cmp
pop
int3
mov
adc
cmp
lcall
rcrl
sarl
sarl
sarl
sarl
sarl
fsts
sbb
in
mov
out
sub
or
mov
nop
mov
mov
jl
sbb
int3
xchg
pop
aam
ret
push
fdivrl
xchg
jo
push
mov
cmp
pop
into
in
push
push
mov
dec
popa
shll
or
mov
pop
or
int3
mov
push
lcall
push
push
mov
jl
and
pop
pop
test
push
sbb
sbb
and
xchg
adcl
dec
xor
xor
xchg
std
pop
test
adc
int3
sbb
call
push
roll
out
push
push
call
mov
ffree
pop
dec
hlt
pop
fdiv
pop
pop
call
call
mov
xor
jmp
test
cmpsb
out
cmp
dec
data16
out
cmc
test
mov
aas
jmpw
dec
push
out
data16
es
dec
movsl
out
std
cmp
fldenv
xor
popa
std
pop
mov
and
imul
out
data16
out
shlb
inc
pop
sub
scas
push
daa
cmp
in
pop
pop
lcall
jle
aad
xlat
inc
pop
cld
jle
aad
push
pop
mov
daa
adc
mov
daa
adc
cmp
decl
data16
push
dec
fisubrs
push
out
sahf
or
fcompl
nop
int3
adc
lahf
xchg
inc
adc
push
std
adc
mov
mov
and
inc
and
cmp
jae
call
test
inc
dec
cltd
call
push
cmp
and
and
fists
pop
aas
mov
je
nop
lahf
inc
pop
pop
in
mov
push
sahf
cwtl
and
xor
scas
xor
incb
inc
adc
inc
xchg
incb
loop
std
rclb
std
rclb
aaa
test
xchg
daa
leave
and
test
mov
adc
push
jae
rolb
arpl
mov
fldenv
dec
mov
adc
scas
out
daa
jae
mov
in
jae
movsb
mov
xor
cmp
fidivl
and
pop
arpl
mov
sahf
and
scas
dec
xchg
mov
mov
xchg
clc
pop
sar
pop
push
clc
pop
iret
clc
jnp
cmp
mov
xchg
mov
pop
in
scas
xchg
loopne
cmp
xchg
fcom
sbb
mov
sub
lret
xchg
or
sub
pop
cmpsb
sbb
fs
fs
push
movsb
gs
dec
out
sbb
movsl
mov
sbb
pop
scas
push
mov
cmpsb
push
mov
push
mov
scas
xor
jl
fstpl
ret
pushf
fmull
imull
inc
sub
int3
fsubrs
jne
xchg
cwtl
push
ficomps
push
jle
push
sbb
lret
jnp
xchg
or
and
int3
jno
outsl
mov
jne
pusha
test
cmc
lds
shrl
push
dec
pop
outsl
inc
pop
outsl
ret
dec
cld
dec
lea
pusha
sbb
sub
lcall
pop
xchg
pop
repz
enter
cltd
pusha
xchg
cmc
lcall
sub
faddl
fldcw
cmp
ja
push
lahf
shll
cmc
mov
cmpsl
test
cmp
fxch
adc
cmc
mov
mov
and
jo
jae
mov
insb
adc
daa
pushf
std
mov
mov
ja
sar
jecxz
add
test
mov
sti
sbb
pushf
mov
xchg
jl
test
es
xchg
in
adc
es
cmp
cmpsb
movsl
frstor
mov
test
cmp
adc
sbb
add
push
push
shrl
and
lcall
arpl
xchg
push
xchg
xchg
lcall
fiadds
xchg
cmpsl
repz
dec
out
cmpsb
addr16
and
and
movsl
test
sub
sub
inc
jns
out
xchg
mov
dec
xchg
iret
iret
dec
jae
or
mov
call
push
orb
int
and
fs
mov
fs
mov
fs
lret
dec
test
sahf
test
push
fs
or
fs
lret
fs
dec
fs
fs
or
mov
adc
fwait
scas
pushf
mov
mov
jg
movsl
jne
scas
aaa
aad
scas
fs
adc
movsb
xchg
cmc
push
add
sahf
movsb
incb
push
cltd
aad
xchg
inc
scas
dec
divl
mov
pop
movsb
pop
inc
and
std
lods
adc
mov
cmp
mov
pop
addr16
mov
sbb
dec
int3
jns
or
movsb
dec
sbb
daa
push
or
or
icebp
adc
adc
inc
test
sbb
fstps
xchg
pop
and
and
insb
es
nop
adc
pop
add
pop
sbb
dec
aam
jmp
adc
inc
mov
pop
or
xchg
push
push
loopne
scas
and
adc
pop
and
fwait
in
sub
push
in
adc
pop
sbb
adc
or
dec
scas
sbb
sub
sbb
pusha
imul
or
adc
pop
push
sbb
test
sub
lret
adc
in
sbb
movsb
and
sub
xchg
nop
out
sub
sbb
xchg
jne
xchg
sbb
out
sbb
stos
iret
icebp
popa
push
jge
fs
xchg
xlat
sti
dec
icebp
popa
icebp
loope
into
loop
add
out
pop
neg
cli
pop
faddl
pop
push
fldl
pop
push
fiadds
pop
push
filds
pusha
push
loopne
popa
push
loope
bound
loop
arpl
jecxz
fs
in
gs
in
pushw
out
addr16
out
push
cmpsb
jmp
jl
jle
orb
dec
xchg
mov
into
mov
iret
mov
dec
fsts
rcr
push
fsts
sar
push
fsts
aad
pop
test
pop
test
lcall
popl
es
or
mov
adc
gs
mov
mov
fsincos
lea
hlt
and
push
xchg
dec
loop
hlt
inc
loope
dec
and
cltd
fsubrs
push
in
imull
pop
push
pop
mov
mov
pop
pop
dec
sub
movsb
test
sbb
push
jg
and
sbb
addr16
mov
xor
or
jo
nop
hlt
mov
push
and
sub
mov
jno
popa
fistpl
xlat
and
out
jmp
pop
sbb
xchg
xchg
dec
scas
adc
call
movsb
imul
mov
nop
sub
into
shlb
stos
lock
cmpsl
xchg
out
in
mov
pop
popa
pop
loop
inc
and
ror
into
sti
loope
lods
ret
dec
je
imul
inc
lcall
adc
iret
shll
dec
cmp
pop
xor
fcoms
sub
out
sub
mov
sub
lock
adc
add
pop
mov
test
test
rorl
dec
pop
das
es
psllw
xchg
adc
sbb
insb
xor
and
nop
jp
nop
mov
xor
pop
xchg
mov
mov
dec
ja
sbb
xchg
push
and
lret
filds
mov
dec
fisttpll
pop
imul
insb
pusha
and
adc
push
movsl
out
stos
mov
enter
dec
loope
mov
lret
adc
cmp
es
ret
inc
movsb
push
sub
jnp
xchg
cs
pop
mov
mov
lock
out
adc
lcall
pop
lcall
in
cmpsb
inc
fisubrs
jp
imul
add
sbb
pop
dec
push
and
shlb
push
ss
push
and
sub
hlt
std
and
icebp
mov
push
pop
popa
dec
hlt
xor
aad
lahf
shr
inc
xchg
into
cmp
lret
leave
pop
lea
dec
or
adc
iret
push
ficompl
pop
lock
push
ror
sbb
xchg
lods
xor
ret
sub
iret
hlt
cli
fildl
xchg
loope
lods
sub
xor
jo
leave
insb
je
inc
aas
popa
mov
sub
push
xchg
dec
test
fwait
in
dec
push
orl
adc
in
push
lret
push
inc
scas
int3
and
push
pop
xlat
cwtl
mov
imul
imul
ja
fbld
mov
jo
mov
push
pushf
cmc
xchg
outsb
and
js
fidivrs
pop
out
or
arpl
cltd
pop
jno
scas
fisttpl
and
shr
lock
adc
adc
nop
pop
sub
and
push
pop
cmp
shll
icebp
aaa
in
sub
xor
ja
jl
push
aam
sub
rcrb
pop
sbbb
test
mov
lea
mov
xchg
std
inc
jmp
imul
cmp
adc
jmp
scas
into
aam
int3
and
bound
es
pop
rcrl
loope
xor
js
pop
dec
mov
adc
cld
sub
push
and
mov
cltd
rclb
sbb
push
in
in
pop
jg
sbb
xchg
adc
push
aad
or
daa
pop
push
and
jno
jge
gs
cli
call
sbb
mov
mov
mov
repnz
hlt
popa
lret
mov
push
icebp
mov
cltd
push
mov
test
push
jmp
test
push
lret
fs
pop
daa
xor
sbb
loope
pop
popf
sahf
std
add
ss
rolb
cwtl
int
jno
mov
movsb
adc
subb
xchg
push
sbb
xchg
mov
sub
and
dec
mov
addl
pop
pop
lret
jno
xchg
imul
sbb
cld
cmpsl
dec
sbb
nop
xchg
movsl
xor
es
shlb
xchg
xor
fxch
imul
dec
movsl
out
lea
mov
add
es
dec
mov
cmpsb
loope
push
sahf
les
mov
inc
inc
fs
pop
sbb
and
rcrl
xor
and
movsl
or
pop
icebp
fistpl
dec
fmul
dec
cmp
lods
cmc
mov
mov
mov
negl
cmpsl
lea
jge
push
int
jl
pop
jle
ss
jae
sub
pushf
outsl
adc
xchg
adc
xchg
cwtl
rcll
fsubrs
jb
xor
fisttps
lcall
xor
push
lds
xor
iret
inc
in
roll
push
xchg
mov
cmpsl
mov
dec
scas
and
std
daa
lcall
popf
or
fwait
push
mov
pop
into
pop
in
pop
push
push
add
negb
xchg
out
mov
insl
xchg
cmp
in
pop
mov
int3
daa
jg
popf
push
sbb
sbb
fisubrs
dec
mov
addr16
loopne
add
out
xchg
sahf
jmp
in
fs
jbe
pop
mov
frstor
sub
cmp
xchg
shll
imul
dec
popa
dec
fadds
lahf
xchg
das
pusha
es
sbb
popl
mov
jmp
or
jmp
out
cld
cli
pop
daa
mov
mov
xor
subl
adcl
mov
inc
and
es
adc
aad
mov
cwtl
lret
pop
push
cmp
mov
mov
mov
mov
data16
cmpsl
jnp
lock
xor
sbb
xchg
in
std
and
loop
sbb
sbb
lahf
jbe
jo,pt
out
push
sahf
leave
daa
jge
and
adc
pop
jg
sbb
jb
push
push
jl
push
mov
cmpsb
cli
daa
cmp
rclb
push
rcrl
sbb
mov
cmp
sub
cmc
lcall
push
ss
pop
lret
or
sub
sbb
adc
xchg
cmp
es
cmpsl
dec
xor
or
sub
inc
xchg
nop
cmpsb
stc
out
adc
aam
into
dec
dec
dec
es
movntq
fucom
sub
cmp
lea
das
lcall
sbb
add
mov
sub
push
test
jmp
sbb
and
cmp
es
aam
xor
scas
dec
call
pop
neg
call
and
mov
lock
lahf
pusha
push
hlt
inc
adc
rcrl
and
dec
fnstenv
sub
xchg
pop
call
cmp
lcall
jne
sub
scas
cmpsl
push
lret
outsb
xchg
cmp
pop
and
sti
mov
inc
adc
fwait
inc
push
adc
xchg
adc
data16
cmp
nop
pop
cld
mov
jne
arpl
pusha
int
rcrl
popaw
clc
inc
fisttpll
sub
adc
or
xchg
insb
jbe
xchg
sbb
push
ja
xchg
lods
add
mov
repz
pusha
jmp
push
cwtl
call
sub
sbb
hlt
fadds
xor
ja
insb
xchg
lcall
pop
fs
mov
push
aam
lret
mov
and
push
fcompl
push
xchg
mov
dec
insb
cmp
lret
cmpsl
inc
pop
into
xchg
aad
sub
testb
adc
notb
mov
sbb
aad
and
lret
lret
rcl
std
pop
sbb
cltd
inc
insb
mov
cmp
jno
lcall
popf
mov
pop
lcall
out
jno
inc
mov
dec
popf
shrb
test
xchg
pop
popf
sbb
fwait
push
mov
and
jo
nop
adc
lret
scas
lret
jno
fdivs
push
lea
lock
inc
insb
test
into
xchg
dec
sbb
xchg
pop
mov
mov
test
fistps
nop
int3
es
repnz
cmp
sarl
daa
rclb
insb
push
loope
xchg
mov
ljmp
fisubs
add
sbb
pop
shl
lret
and
push
adc
adc
xor
scas
inc
testb
cmpsb
jmp
jl
push
jge
and
mov
sbb
adc
bound
push
subl
pop
fucomi
and
adc
adc
or
push
pop
xchg
push
sbb
push
rcll
les
insl
jo
push
daa
ja
inc
std
sub
mov
decl
bound
and
aas
call
icebp
jne
pop
and
sbb
cmpsl
into
int
lahf
sbb
sbb
and
cmpsb
in
push
lock
xchg
sbb
mov
cs
jo
punpcklwd
imul
xchg
lret
jmp
outsb
jae
sbb
push
inc
push
jb
fnstsw
cltd
cmc
xchg
int3
ja
insb
sbb
inc
fcompl
in
adc
cmpsl
cwtl
incl
scas
xor
iret
push
cltd
loop
xchg
into
into
jle
icebp
cmpsb
adc
inc
es
xor
push
out
movsl
push
and
aam
int3
imul
xor
jne
insb
sbb
aad
into
push
in
sub
xor
cwtl
xor
inc
test
adc
jge
adc
repz
pop
xor
mov
mov
cs
xchg
rcll
mov
lea
sub
in
adc
push
pop
cmc
rorl
nop
lods
push
ror
shlb
flds
jno
inc
int
push
adc
mov
cwtl
cmp
inc
pop
outsl
and
dec
aam
dec
fisttpl
lods
pop
lahf
sbb
push
add
jg
dec
shrb
imul
xchg
out
mov
sub
sub
es
lea
lret
cmpsb
enter
sbb
outsb
mov
dec
cmp
or
xchg
sub
repz
int3
push
cmp
adc
test
or
cli
rcrb
jmp
add
pop
andl
cwtl
rorb
push
adcb
sbb
dec
mov
mov
shrl
pop
roll
jmp
pop
pop
or
push
insb
sbbb
mov
and
sbb
icebp
push
scas
cld
sub
insb
inc
xchg
pusha
and
icebp
frstor
sbb
outsb
push
mov
xor
test
ljmp
mov
imul
and
push
mov
and
jns
pop
mov
mov
push
mov
fidivrl
lret
cmpsl
xor
jnp
data16
outsl
out
push
arpl
jge
sbb
mov
sub
add
fmuls
mov
iret
cltd
lea
jae
pop
xor
aaa
cmpsl
dec
sub
xchg
pusha
movsb
fwait
test
sbb
dec
jo
add
dec
imul
popf
xchg
or
fistpll
push
mov
dec
pop
popa
push
ss
sbb
jnp
out
movsl
data16
enter
xchg
add
and
push
inc
pop
inc
pop
shll
imul
xorb
shrb
rcrb
repz
aad
xchg
cmc
ss
inc
daa
icebp
dec
jno
xchg
and
adc
jae
dec
adc
orl
fs
jp
pop
jle
andb
sbb
jne
jp
enter
arpl
sub
lret
adc
faddl
and
and
sub
sbb
xchg
mov
xchg
jno
sub
xor
ljmp
cltd
mov
cmpsl
lret
jnp
movsl
rorb
dec
sub
sub
jmp
rcl
shll
fildl
xorl
ds
sbb
adc
add
push
push
xor
pop
and
repz
sub
or
jno
pusha
xlat
rcl
pop
fwait
lods
les
mov
dec
dec
sub
cltd
mov
lret
iret
lret
and
jp
nop
outsb
pop
lock
cmovle
orb
mov
adc
sbb
inc
call
iret
bound
mov
repz
popa
sbb
mov
pop
shlb
scas
rorb
inc
xchg
cmp
mov
pop
push
jbe
add
pop
cltd
dec
imul
sbb
loopne
xlat
mov
mov
lock
jl
int3
inc
inc
mov
and
ror
pop
push
xchg
jecxz
sti
sbb
shl
mov
pop
sbb
inc
arpl
push
mov
loope
mov
movsl
int3
int3
jno
xchg
or
lods
gs
mov
sahf
add
xchg
je
inc
dec
pop
jns
arpl
loopne
dec
dec
push
push
dec
sarb
es
jb
and
inc
fisttpll
popa
push
sbb
hlt
lret
xchg
and
pop
in
out
lahf
add
cmp
gs
xchg
mov
xor
pushf
fldt
imul
cmc
or
xor
test
pop
lret
sub
shlb
cmpsb
and
scas
xchg
iret
fmull
cmp
adc
dec
out
and
lahf
xor
aam
dec
or
insl
nop
je
lods
and
ss
subps
cwtl
push
dec
vpcomd
gs
aam
pop
fidivl
mov
and
xchg
push
add
out
dec
inc
fucompp
and
mov
loope
movsl
nop
mov
dec
or
popa
and
push
push
aad
sbb
xchg
incl
and
pop
sbb
mov
mov
xchg
push
xor
xchg
pop
mov
pop
pop
es
sbb
fwait
or
std
sbb
dec
jecxz
mov
fs
mov
pop
ror
mov
aaa
cs
dec
xor
mov
arpl
leave
cli
mov
dec
mov
fildll
mov
mov
mov
lods
pusha
and
or
in
xor
rcrl
xlat
imul
push
pop
jmp
jne
xor
and
andb
inc
inc
jae
adc
imul
fwait
mov
call
into
push
jo
in
pop
or
pop
push
repz
pop
in
push
jno
xchg
jecxz
xor
lcall
mov
lahf
cmpsb
xchg
stos
mov
cs
negl
xchg
sbb
jae
xor
leave
xor
xor
iret
xor
scas
push
push
orl
icebp
imul
sbb
lea
pop
dec
cli
pop
mov
iret
jmp
fists
out
pop
mov
test
popf
aas
pop
cld
xor
out
lods
xor
push
clc
addb
xchg
aad
sbb
push
add
cmpsb
sbb
sbb
push
pop
data16
xchg
out
test
or
sbb
out
bound
insb
movsl
xor
push
inc
adc
out
sub
sbb
je
into
push
pusha
xchg
sub
cmp
shll
and
push
sqrtps
sbb
dec
sbb
xchg
lods
sub
lcall
push
push
sub
lea
fs
inc
lods
xor
inc
push
xchg
lcall
push
add
adc
sbb
lods
subl
push
cwtl
jno
or
xor
inc
in
fnstsw
sbb
lods
xchg
adc
insb
data16
popa
imul
rcrb
and
adc
mov
push
cmc
push
push
fdivs
sub
scas
push
fsubr
xchg
test
xchg
mov
sbb
bt
clc
test
push
clc
clc
jp
pusha
mov
pusha
cmp
bsr
add
mov
bts
rcl
shl
mov
shrd
mov
and
mov
seto
shl
mov
mov
bt
xor
lea
pusha
pushf
lods
xor
shl
not
sar
add
rol
stc
ror
push
dec
dec
stc
stc
pushl
call
push
call
ljmp
mov
jb
inc
and
mov
out
sub
imul
sub
les
pop
stc
cmp
and
insl
push
stc
and
int
pushf
jge
imul
pop
push
jo
inc
inc
push
push
imul
push
sbbb
cmc
xor
mov
cmp
xlat
xchg
cmp
mov
mov
sub
clc
shll
cmp
push
mov
ds
repz
imul
vcvtpd2dq
mov
sbb
inc
dec
jae
adc
dec
int
adc
pop
jno
std
or
rcrl
inc
push
in
and
jle
vmovmskps
ret
cs
loope
fldt
and
ja
xor
pop
call
mov
mov
mov
stos
mov
arpl
jge
test
xor
fstl
xor
arpl
pusha
icebp
hlt
mov
jp
stos
mov
ja
aam
aaa
fimuls
mov
shlb
mov
mov
cmp
add
gs
insb
inc
js
arpl
gs
add
addl
mov
pushf
pushf
pushf
pusha
lea
call
pushf
pushf
pusha
call
push
call
xor
adc
mov
pop
ficoml
xlat
jmp
or
int3
rcl
cltd
xor
popa
loop
push
subb
repz
xor
insb
cld
cwtl
cmp
stos
push
adc
xchg
loopne
popa
iret
cltd
inc
shl
shlb
shll
cmp
pushf
pop
sub
or
sub
test
add
les
sub
jmp
sub
mov
xchg
in
in
xor
fldcw
testl
inc
push
mov
mov
sbb
std
and
cmp
mov
scas
push
data16
out
sub
inc
xor
rcl
push
push
call
jo
push
mov
cwtl
movzbw
lea
movsbw
movzbl
movzwl
pushf
bswap
mov
lea
pusha
pushf
bswap
mov
jmp
call
adc
jecxz
sbb
popf
clc
test
lock
sub
lods
push
and
leave
decb
mov
popa
mov
lret
andl
mov
shrl
das
je
stc
aaa
jl
in
lock
xchg
lret
xor
mov
out
fnsave
lods
mov
xlat
push
sub
call
ret
push
jnp
xor
jmp
mov
test
cwtl
aad
call
add
push
sarl
add
sub
sub
repz
bnd
popf
fmul
mov
testl
loope
push
lock
xchg
shll
cmp
xor
push
lea
je
test
cmc
pusha
call
push
call
loopne
cmc
out
stos
pop
add
mov
add
mov
dec
pop
and
fistpl
scas
and
mov
mov
shll
or
mov
pop
mov
ret
xchg
aaa
mov
mov
inc
enter
mov
xor
mov
mov
push
popa
or
xor
into
push
adc
gs
call
cld
or
fistps
xlat
xlat
adc
ss
sbb
imul
int3
gs
sti
rorb
hlt
test
jo
sbb
aam
mov
aad
aaa
cmp
decb
pop
dec
call
xchg
fldenv
aad
xor
cmc
daa
rcll
dec
mov
adc
add
lea
mov
lods
dec
add
addl
sbb
pop
xchg
es
add
test
mov
out
or
and
push
stc
fwait
jg
adc
cld
test
js
cmpsl
hlt
out
out
mov
movsb
lret
and
in
jmp
jnp
jp
jmp
popf
inc
adc
movsb
popf
xorl
jg
mov
adc
pushf
pusha
mov
pushl
mov
push
push
pushl
ret
test
cmp
sub
movb
jmp
lods
jb
aaa
ljmp
sub
outsl
mov
adc
jl
mov
jns
js
lods
inc
pop
add
stc
inc
pop
cmc
jg
xchg
add
flds
icebp
ficompl
dec
sbb
pop
aam
xor
leave
xlat
sbb
jns,pn
inc
stos
push
mov
sahf
dec
cmp
call
cli
fwait
in
sub
orl
mov
sub
adcl
push
das
test
pop
mov
shrl
ficompl
fstp
inc
ss
push
mov
loop
jne
std
popa
pop
int3
cltd
rcll
inc
inc
cmp
test
mov
sbb
into
std
mov
mov
stos
push
jnp
out
mov
xchg
sbb
loope
mov
xor
jmp
dec
jl
xor
xchg
insb
mov
mov
jmp
dec
fcoms
ja
rcll
mov
into
ljmp
mov
and
inc
jae
xchg
and
leave
int3
outsb
push
call
xchg
mov
push
cmc
cmpb
mov
pushf
mov
lea
jne
shl
sub
xor
mov
test
sar
neg
add
mov
rcl
mov
call
push
call
mov
push
fadds
adc
jnp
add
and
inc
clc
xchg
inc
xor
adc
or
inc
jne
jno
daa
mov
lret
ret
pop
and
loop
call
jg
sub
int3
sbb
push
sbb
sarb
add
jle
dec
insl
das
pop
fnstenv
test
push
cmpsl
lock
mov
or
xor
mov
xchg
out
inc
cmp
pop
cli
repnz
sahf
aas
mov
pusha
inc
lea
into
pop
adc
xchg
daa
jno
push
pop
adcb
aad
aaa
inc
inc
lretw
or
jecxz
nop
rorb
add
test
repnz
movw
push
lea
jne
setg
call
call
adc
add
add
add
add
pop
jp
add
add
add
add
add
add
add
and
add
add
insl
out
add
add
add
add
add
add
add
add
add
add
das
sbb
add
add
pop
stos
and
add
add
mov
ret
and
mov
dec
push
add
out
and
add
add
lret
add
add
add
orl
mov
xadd
neg
dec
clc
mov
or
rcr
movsbl
not
mov
pushf
sub
stc
call
shr
pusha
cmp
pushl
movb
mov
pushl
lea
je
cmp
cmp
jmp
call
ror
outsb
xor
jnp
or
jns
sub
sub
lods
inc
rcrl
aaa
cs
in
sub
sbb
arpl
xchg
sub
sbb
popa
inc
jns
xorb
fcompl
popf
sbb
push
xor
add
dec
xor
rorb
and
jae
pushf
push
movw
pusha
lea
jne
pushf
call
jmp
push
call
dec
jb
push
call
ljmp
in
movb
adc
lea
pusha
call
dec
and
sub
sub
sbb
int3
sub
test
bound
xor
outsl
sahf
je
mov
scas
jmp
jbe
push
dec
jg
fnstenv
insb
insb
out
fsqrt
push
xchg
cmp
stc
mov
repz
aam
xchg
fs
int3
mov
cwtl
or
push
push
rcll
pop
mov
lret
add
psllw
pushf
mov
inc
jmp
sbb
in
shl
movsb
mov
cmp
mov
sub
or
psubusw
lock
call
mov
iret
push
call
mov
push
call
ds
jo
jne
push
outsb
sbb
pop
sti
dec
inc
lcall
mov
pop
pop
mov
and
inc
scas
pusha
das
scas
outsb
xor
mov
sbb
mov
jne
inc
or
sbb
mov
xchg
push
jecxz
scas
test
jo
sub
repnz
lods
out
out
mov
jno
jg
push
mov
arpl
mov
jmp
das
shll
inc
cld
fwait
loope
roll
mov
cmc
stc
pushf
and
call
push
call
aad
loop
adc
test
xchg
xor
stos
lahf
mov
xorb
lcall
sub
pop
dec
dec
cld
enter
ficomps
and
sbb
fwait
jns
lods
jo
adc
mov
fnstcw
nop
test
xchg
dec
adc
pmaddwd
add
mov
shl
repnz
idiv
aam
mov
pop
stos
insb
loope
lcall
lahf
jl
nop
testb
addl
psllw
aaa
inc
rcl
mov
std
push
fcom
in
fnstcw
bound
add
cmp
in
xchg
mov
adc
popa
rcll
adc
pop
andb
mov
add
negl
popf
add
xchg
push
jno
cld
icebp
sub
shrb
push
sub
dec
xor
fildl
jecxz
aad
xlat
add
jns
mov
jae
repz
int
mov
lret
add
mov
rcl
dec
shrl
mov
sub
neg
jecxz
mov
push
cwtl
jle
movsl
mov
lahf
sub
jecxz
cmp
mov
jecxz
pushf
inc
lret
sbb
aaa
inc
adc
sub
call
lahf
sbb
bt
movb
cmp
pusha
jmp
mov
stc
bt
pushf
stc
and
jmp
bt
cmp
push
jmp
push
lea
jb
pushf
pushf
clc
cmpb
lea
jg
pushf
lea
jne
cmp
mov
cmc
add
bt
movzwl
xor
rcl
mov
jmp
push
call
or
lcall
xchg
cld
addb
cmc
and
adc
in
cmp
lret
int3
ja
mov
jp
push
leave
outsl
insl
jne
jns
jp
pop
pop
aaa
jl
mov
es
es
xor
fildll
xchg
jb
jne
pushf
ret
jae
xchg
idiv
and
repnz
cld
daa
jnp
lret
mov
fsubr
fildll
popf
lods
mov
movb
or
aaa
inc
dec
mov
std
mov
out
cwtl
lcall
std
fiadds
call
add
std
mov
mov
add
decb
dec
call
pop
xchg
mov
cmp
pushf
cmpb
call
push
call
and
decb
add
xor
std
outsb
pop
shr
ljmp
inc
cmp
out
bnd
leave
and
fs
sub
aaa
jg
out
aam
adc
xchg
shll
sub
fs
add
lock
lds
xchg
pop
xor
inc
shll
cmpsb
and
mov
ret
mov
xlat
lret
cmp
inc
mov
mov
cmpsl
aas
jge
pop
cmp
mov
pop
cmpl
xchg
cmpl
mov
add
fbld
aaa
inc
jle
ss
fldt
push
pop
fildll
adc
popa
loop
dec
jno
imul
jb
and
in
cld
mov
cmc
insl
push
or
mov
jne
inc
sbb
pop
xor
mov
jle
jae
jmp
jno
repz
loop
fcmovb
mov
inc
cli
mov
in
and
jmp
dec
and
cmpsl
imul
jge
aad
jb
mov
dec
and
in
jle
fwait
xor
or
sub
test
iret
sub
sub
aas
icebp
jns
xchg
mov
cwtl
out
imull
mov
jmp
push
cltd
pop
rolb
lret
mov
push
dec
xor
jge
dec
add
xor
add
pusha
jle
sbb
in
mov
push
cmpsb
pop
fistl
scas
add
or
mov
fisubl
enter
jne
orl
mov
mov
mov
rorb
dec
aas
mov
pusha
mov
shll
dec
das
lods
fldl2t
stos
mov
in
inc
repnz
sbb
add
or
pusha
fsubrs
loop
addr16
ljmp
dec
jl
divb
mov
mov
stos
lret
daa
push
fnsave
cmp
jmp
push
cld
idivb
shll
cmp
xchg
lods
pop
js
push
lcall
adc
jp
xchg
and
xchg
data16
daa
loop
call
outsb
popa
pop
mov
out
and
int3
sub
repz
aaa
dec
xor
out
cs
mov
add
jecxz
fs
call
push
push
movw
movw
lea
jne
mov
mov
mov
not
mov
push
push
lea
jmp
cmp
jmp
push
call
inc
push
call
fisttpl
mov
sbb
iret
lea
lea
movzbw
mov
call
jmp
push
call
outsl
aas
shl
or
call
push
call
dec
out
insb
xchg
push
call
shrb
inc
sbb
fisttpll
cmpsl
loope
adc
add
je
mov
out
orb
roll
xor
jns
inc
sbb
and
dec
xchg
clc
clc
jns,pn
leave
mov
jecxz
in
cs
add
dec
push
sbb
pop
lds
push
cwtl
icebp
push
mov
movsl
sub
mov
or
fwait
inc
fmull
scas
jmp
sub
outsb
and
icebp
xorb
cmpsb
sub
aaa
dec
mov
fdivrl
inc
arpl
stc
aam
out
pop
out
rdmsr
and
xor
out
and
add
push
and
cld
out
push
mov
add
pop
mov
add
dec
push
push
scas
mov
xor
aaa
dec
dec
outsb
bound
mov
call
cmp
push
call
pop
ljmp
mov
xchg
add
js
test
call
pushf
mov
mov
push
or
add
popa
pop
int3
fcmovbe
mov
je
pop
cltd
aaa
pop
popa
mov
mov
inc
jge
push
pop
pop
lock
and
and
les
in
loope
jl
dec
xchg
out
int
fwait
daa
mov
jle
das
cmp
push
push
mov
ret
cmp
dec
lods
xor
scas
jg
pop
jnp
mov
loop
xor
aaa
dec
arpl
in
lahf
mulb
inc
fistps
xchg
jg
je
push
cmp
and
dec
je
sbb
lahf
ss
in
sub
rclb
lds
in
and
or
mov
cs
sub
stos
push
stos
ja
arpl
sbb
push
cmc
pop
in
outsl
xchg
lods
vunpcklps
pop
stos
sub
xchg
movsl
or
mov
ret
int3
push
fidivrs
sbb
sub
mov
orl
idivb
adc
dec
cwtl
aas
dec
push
push
xor
xor
fs
insb
add
data16
test
lds
mov
sub
popa
outsl
sub
aas
jmp
scas
or
incb
mov
add
pop
out
inc
sub
adc
dec
push
test
cmp
cmp
cs
shll
idivl
add
jno
scas
mov
push
push
and
mov
subb
push
hlt
sub
jg
sub
aaa
sbb
std
lret
or
add
push
fimull
xchg
jnp
add
push
mov
cld
call
push
call
inc
lahf
push
call
les
inc
push
call
xchg
test
xchg
push
aaa
add
adcl
inc
dec
bound
inc
mov
mov
out
popa
xor
pop
fs
sub
xchg
ja
gs
scas
mov
into
aam
insb
xor
jl
push
stos
es
cs
sub
jnp
mov
cld
xor
icebp
in
repz
add
push
outsb
mov
jb
cmpsb
inc
sbb
bound
push
xchg
mov
inc
shll
dec
lcall
loopne
cmc
ljmp
fiadds
fucomp
shrl
test
lcall
mov
adc
int3
mov
dec
mov
orb
add
int
and
add
popf
lret
sbb
shl
push
cmp
insb
sub
in
xchg
out
cli
pop
je
sbb
add
scas
cmp
mov
cltd
xor
cltd
lods
mov
and
push
addl
adc
lds
pop
shll
dec
shl
mov
shr
repz
add
cmpsb
lock
mov
push
dec
xor
cs
insb
add
dec
pusha
add
pop
jmp
imul
mov
lret
dec
imul
je
xchg
nop
icebp
mov
daa
lods
mov
mov
xor
ret
sti
pop
inc
sbb
mov
inc
cmp
pop
xor
cmc
enter
mov
outsb
loopne
and
fbstp
andl
and
sbb
sbb
push
sbb
mov
xor
aaa
dec
xchg
enter
add
shrd
cmp
push
sar
sbb
neg
mov
test
btr
stc
ror
sub
cmc
bt
push
cwtl
inc
rcl
and
push
push
xor
push
pusha
setge
not
lea
call
rcll
push
aas
shll
sarl
fs
out
mov
leave
out
leave
scas
loopne
fsubl
fists
hlt
mov
leave
mov
sahf
sub
mov
inc
dec
std
xor
imul
mov
dec
mov
and
mov
mov
rclb
leave
mov
lock
sbb
push
push
mov
lock
rorl
inc
js
or
aaa
dec
loop
nop
xchg
daa
xchg
xchg
xchg
dec
pop
nop
and
push
mov
insb
lret
xor
in
sbb
inc
jnp
pop
sbb
into
pop
lods
add
or
pop
inc
dec
mov
in
fwait
in
push
jmp
lret
insb
mov
and
or
mov
and
push
pop
sub
pop
mov
fs
popl
pop
push
sahf
push
sub
movsl
fwait
test
xchg
lods
imul
lret
popf
add
adc
mov
int3
ja
dec
cmp
xor
adc
pop
xor
ljmp
sub
shll
dec
out
xchg
push
call
fcoml
popa
mov
movsb
fiaddl
lcall
inc
and
jno
sub
pop
lea
imul
stos
add
mov
sbb
and
sbb
imul
aam
lods
xorb
push
pop
out
dec
es
xchg
aad
mov
mov
jo
loopne
or
fs
inc
lret
lds
call
and
fldcw
fistps
imulb
out
jbe
cld
stos
mov
push
push
inc
ss
and
aaa
push
xor
xchg
pop
test
or
sbb
xor
sbb
repnz
repz
mov
and
xor
xor
mov
arpl
in
jae
dec
mov
stc
hlt
xchg
cld
bound
insb
cmp
and
inc
hlt
mov
repz
xchg
and
stc
addr16
cmpsb
loopne
fldl
imul
pop
fsubp
jo
scas
push
sub
push
loope
inc
shll
push
icebp
xor
std
mov
out
ficomps
nop
adc
or
inc
push
fsubs
ret
hlt
icebp
outsb
jno
clc
lcall
popf
push
and
out
xchg
dec
add
xchg
jae
inc
mov
push
and
jb
jl
rorl
xchg
add
sahf
jo
test
test
ret
or
test
ja
jne
push
adc
cwtl
sbbb
push
les
sbb
shl
mov
aam
jne
inc
lea
mov
mov
dec
fidivl
cmp
push
call
pop
xor
mov
call
stos
pusha
mov
jmp
out
outsb
add
int
imul
add
pop
adc
adc
test
xor
adc
outsb
adc
push
mov
mov
cmp
cmpsl
sarb
mov
addb
add
sub
aas
sti
sub
push
adc
jg
inc
call
mov
xchg
mov
or
sbb
loopne
sbb
addr16
cli
test
push
dec
test
add
not
or
nop
cltd
xchg
jmp
fst
aaa
push
dec
mov
inc
call
bsf
mov
cmp
call
decl
mov
clc
scas
xorl
mov
les
mov
add
or
sub
lea
sahf
jo
int
pop
jl
in
jmp
shll
push
push
jae
lret
adc
dec
sub
inc
jne
mov
push
dec
and
aas
pop
pop
fsubl
push
mov
sub
and
es
xchg
movsb
jne
in
test
popa
aaa
mov
pop
xchg
movsb
push
mov
loop
sahf
clc
or
rcrl
lods
jae
aam
push
lds
cmp
adc
cli
xchg
xor
xchg
mov
loopne
mov
mov
or
clc
loope
popa
mov
inc
pop
jmp
push
jno
push
call
mov
jle
shr
clc
movsl
add
dec
in
push
call
add
and
call
inc
adc
push
add
mov
movw
mov
push
mov
pushf
pushf
pusha
pushf
pushl
ret
add
stc
clc
clc
mov
cmc
pushl
test
call
and
mov
jns
in
int
add
push
sbb
stc
push
or
into
cs
mov
insb
xlat
mov
xor
xlat
cmp
mov
cld
push
shrl
cmpsl
inc
ds
lea
and
std
or
jae
stos
sarl
sub
cmc
popf
aas
cmp
fcomps
int
out
or
test
movsl
sub
sbb
mov
imull
je
aaa
push
cmpsl
cs
std
lods
shr
adc
add
out
push
push
inc
into
call
clc
pop
call
or
push
sbb
sub
dec
jmp
lahf
lods
jecxz
imul
mov
sub
aam
push
adc
mov
call
pop
pushf
adc
fistpl
icebp
cmc
fnstenv
test
and
mov
push
scas
push
jo
outsl
in
cmc
jbe
pop
lret
and
and
shrb
push
mov
outsl
shll
push
mov
mov
mov
pushf
pushf
pusha
pushl
lea
jmp
movl
movb
call
daa
xchg
xchg
pop
mov
aaa
inc
or
jecxz
andl
cmpsl
inc
decb
test
in
ja
hlt
hlt
test
mov
call
sub
xor
dec
int
fwait
cmp
lret
es
stos
cmpsl
push
movsl
hlt
lret
cmp
pusha
aad
jg
fisubs
test
mov
lock
nop
or
vmovlpd
push
dec
inc
push
adcl
add
lods
inc
or
aaa
push
cmp
xchg
mov
pushf
add
add
push
cli
cmpsl
pop
jg
cltd
xlat
push
dec
xlat
or
cmp
push
push
jb
cli
popw
shlb
stos
das
jns
lahf
push
adc
mov
test
int3
and
cmp
adc
dec
push
popf
outsl
das
mov
sbb
loopne
push
sbb
mov
cmp
lods
and
adc
shlb
jg
adc
cmp
or
scas
repnz
rcrb
arpl
daa
shll
push
hlt
xchg
jmp
insl
xorb
add
cld
mov
cmp
mov
rcrb
test
mov
dec
jo
inc
push
ficoms
andl
inc
cltd
in
adc
daa
movsb
popa
ret
mov
test
push
loope
mov
js
jno
xor
cmp
xorl
pop
scas
jmp
mov
icebp
push
shll
push
dec
dec
jns
std
outsb
push
call
add
rolb
ret
xchg
je
daa
pop
lahf
fisubl
popa
aaa
lret
push
out
loop
call
mov
cmpsl
cmpb
push
gs
mov
or
or
mov
insl
pop
mov
sti
stos
xor
dec
fsubrl
cmp
lcall
dec
frstor
mov
sbbb
test
repnz
jno
xchg
push
pop
push
movsb
adc
dec
test
sub
sub
outsl
mov
fbstp
sbb
and
pop
shlw
push
mov
cmp
dec
call
mov
in
adc
jmp
mov
sbb
jb
adc
push
push
dec
lcall
cmp
stos
cmp
xlat
and
rcr
pop
test
lcall
dec
dec
std
outsb
xor
sub
mov
sub
testb
add
xlat
sbb
rcr
scas
cltd
js
or
mov
fprem1
sbb
test
pop
je
add
and
mov
add
dec
push
outsb
test
xchg
nop
cmp
jg
cli
adc
and
or
or
aaa
pop
pop
pop
add
scas
jmp
push
call
jl
mov
and
call
jg
pushf
pusha
pushf
mov
pushf
lea
jmp
mov
neg
cmp
movzbw
btr
mov
lea
sar
cwtl
push
movsbw
neg
pushf
mov
xadd
bswap
xadd
push
stc
adc
lea
rol
mov
clc
cmc
cmc
test
pusha
pushl
lea
je
btc
bt
mov
cmc
bts
shl
add
jmp
inc
movsb
roll
mov
dec
inc
inc
sub
xchg
pop
cmp
or
inc
not
lahf
icebp
imul
adc
adc
aas
lea
pop
and
aad
sbb
xor
ficomps
outsb
loope
sub
cmp
int
aad
pop
ljmp
ljmp
pop
push
rol
sbb
out
aas
aas
jmp
bound
call
xchg
xchg
or
ret
ljmp
in
jmp
mov
aas
mov
std
and
inc
lret
ja
lock
adc
aam
mov
xlat
leave
hlt
ret
mov
clc
lock
mov
sub
pop
adc
loope
lcall
or
xchg
adc
in
and
rcr
push
jge
mov
xchg
fwait
jge
lcall
std
test
push
sbb
fyl2x
into
mov
sub
xchg
cmp
pop
mov
stos
cmp
sbb
pushf
cmp
std
es
xor
add
push
mov
ds
out
and
push
call
incl
jo
in
add
pop
pop
fldenv
inc
icebp
jae
repnz
fstps
sub
out
aas
nop
jbe
rolb
das
xchg
xor
push
movsb
sbb
mov
sub
inc
and
fsts
mov
int3
pop
lds
and
xchg
inc
iret
andb
jmp
push
jmp
inc
or
jnp
mov
push
sbb
loope
mov
pushf
cmp
outsl
push
je
out
xchg
outsb
xor
pop
aad
adc
icebp
jg
mov
sub
jnp
scas
pop
fs
add
jae
dec
hlt
lods
mov
mov
movsb
ror
lea
push
adc
clc
cs
mov
mov
sub
xor
xor
sbb
clc
imul
lahf
es
dec
cli
mov
rcr
sub
cld
add
mov
rcll
mov
pop
shr
mov
clc
scas
outsl
incl
or
adc
aaa
pop
sub
push
call
xor
fsubs
cli
add
push
push
cmp
call
push
call
cwtl
lea
pusha
pushf
call
add
aaa
fistl
fwait
mov
sub
mov
push
icebp
adc
cmp
cmp
jnp
mov
xor
orl
sub
int
cwtl
ss
aas
and
add
fadds
in
push
jb
jno
pop
aas
lret
push
aam
call
add
shlb
cmp
rorl
sub
fwait
adc
movsl
jnp
mov
pop
xor
pop
test
shll
pop
xor
ds
dec
call
das
push
call
pop
mov
fwait
pop
push
call
mov
pusha
stc
cld
cmp
out
mov
movsl
enter
fwait
cmpsl
out
mov
or
arpl
cwtl
lahf
ret
cld
scas
adc
lods
pusha
and
mov
imul
repz
fwait
add
jae
push
lods
and
ret
clc
and
add
in
inc
or
outsb
ret
add
lods
xchg
fldenv
push
leave
sti
es
scas
sbb
mov
data16
adcb
jbe
sahf
daa
ljmp
psraw
scas
cmpsl
add
aaa
pop
push
jle
push
call
sub
in
sbb
addl
sbb
push
xchg
sub
fmull
xchg
cmp
jl
sub
inc
dec
mov
aas
scas
pop
or
js
mov
movsl
jle
shlb
or
mulb
or
xor
stos
xchg
pop
mov
repz
or
mov
fcoms
fidivrl
lods
or
ja
imul
pop
mov
bnd
jp
dec
jo
aaa
pop
stos
or
and
jb
call
clc
mov
ficoms
imul
mov
jo
xchg
sbb
pusha
pop
fimuls
sbb
mov
bound
ss
scas
xor
sbb
lea
in
out
movb
mov
pop
inc
ret
icebp
sahf
inc
das
je
pop
pop
adc
adc
cmp
or
fmuls
add
popf
push
push
mov
xchg
pusha
inc
pop
rcrl
stc
das
jg
shll
pop
ds
adc
aas
and
sbb
ljmp
jle
shr
mov
xor
sbb
and
test
add
push
test
add
call
push
call
xchg
or
stc
sarl
xorl
stc
inc
pop
pop
jb
cmp
pop
test
add
sub
mov
mov
mov
arpl
scas
sbb
pop
shl
mov
xor
xor
dec
xchg
or
and
sbb
aaa
pop
xor
inc
jmp
mov
mov
pop
cmp
loope
sub
leave
fs
xchg
mov
pop
shll
pushf
xlat
or
xchg
sub
cwtl
movq
or
or
add
lcall
gs
in
ret
pop
jmp
leave
test
add
int3
movsl
sub
fcoml
adc
dec
mov
sti
jecxz
mov
xchg
push
in
jmp
mov
cmpsb
add
pushf
adc
or
jno
in
call
je
das
repz
ja
enter
xchg
sub
or
inc
mov
push
jae
and
pop
popa
mov
cmc
sbb
xor
mov
jmp
or
sub
mov
jne
shl
sti
loopne
std
push
push
xor
dec
aam
test
ret
pop
mov
shll
dec
jno
and
leave
test
xchg
jmp
test
dec
push
dec
stc
lahf
inc
shll
pop
frndint
mov
or
les
test
stc
decl
mov
adc
mov
cmp
imul
dec
or
repnz
mov
jle
subb
jno
ret
rcr
shr
int
scas
dec
push
getsec
dec
arpl
pusha
lcall
addl
test
and
xor
imul
lods
add
sub
pop
push
rorb
bswap
xchg
pusha
push
fistpl
jg
pop
xchg
test
mov
jmp
ss
sub
mov
subb
mov
pop
pop
dec
push
add
mov
int
add
mov
or
shll
pop
int
inc
push
call
mov
shl
scas
xchg
ss
xchg
push
sub
mov
dec
int3
or
or
lea
enter
call
hlt
arpl
int
xor
dec
pop
sbb
pushf
cltd
mov
jg
sbb
xchg
ret
and
cmc
call
cmp
aam
test
es
lods
lret
arpl
clc
shrb
jecxz
push
rcll
or
hlt
pop
fcmovbe
sbb
or
sub
test
sub
aaa
pusha
insb
imul
movl
add
je
bt
bt
sar
or
mov
sar
movsbl
ror
mov
pushf
sub
test
test
mov
shr
pusha
mov
cmpl
push
mov
lea
je
btr
and
mov
sub
sub
adc
rcl
mov
shr
lea
movzbw
mov
rol
movzbw
mov
sar
add
pushf
sbb
add
sbb
mov
mov
call
imul
pop
pop
adc
lods
mov
test
and
and
ret
fisttpll
dec
push
jbe
sbb
xor
sbb
popf
mov
test
jae
fiaddl
jl
fs
or
enter
mov
sbb
gs
daa
pmullw
orl
hlt
lds
fwait
xchg
in
leave
aam
and
test
in
xor
xor
mov
shll
popa
mov
test
jb
jl
jne
sub
push
imul
faddp
adc
ja
insl
pop
stc
int
in
mov
inc
xchg
std
cmpsl
fcoml
jp
outsl
sub
insb
xor
mov
sbb
cmpsb
cli
rcll
cmp
pop
mov
test
lea
addr16
sub
int3
int3
cltd
or
push
stos
xor
push
sbb
mov
xchg
in
dec
cmpsb
pop
cs
xchg
push
shll
test
aaa
shll
bound
out
cmpsb
and
cmpsb
cmp
and
call
call
push
call
xchg
cmp
cmp
bt
stc
cmpb
jmp
push
call
sti
push
call
mov
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
dec
adc
add
imul
jge
stos
faddp
adc
xor
push
rcll
sbb
scas
push
push
ja
faddl
jmp
xor
sub
pusha
cltd
mov
mov
test
repnz
lret
ret
and
pusha
mov
scas
ljmp
bnd
fwait
xchg
test
sub
add
fs
ret
jne
xchg
xchg
lds
imul
jne
and
aaa
arpl
pop
mov
sarl
push
jbe
test
or
scas
std
das
add
or
push
or
sbbb
cmp
mov
cltd
into
mov
scas
push
pop
mov
jmp
popa
movsb
adc
dec
jne
or
cmp
push
pop
pop
sbb
icebp
or
jmp
pop
and
addr16
add
fcmovbe
bound
std
adc
mov
imul
pop
adc
popa
cld
dec
movsb
imul
in
sub
shr
pop
xchg
inc
mov
pop
inc
jae
aas
fdivl
add
pop
in
push
out
mov
xor
enter
imul
insl
inc
or
repz
cs
pop
xorb
and
add
outsb
mov
mov
shll
shll
xchg
test
aaa
fs
xor
or
insb
mov
fnstcw
jne
das
loop
mov
je
in
mov
shrb
pop
inc
ret
nop
xor
out
push
loopne
outsb
addr16
leave
repnz
enter
pop
pushf
filds
sub
xchg
sub
cmp
push
scas
push
sbb
ret
mov
mov
lret
insb
test
sub
jae
xchg
xor
pop
dec
stos
adc
aam
sub
cmpsl
xchg
and
mov
adc
push
call
lods
mov
fsubr
repz
add
fsubrs
and
leave
xchg
stos
das
or
sbb
aaa
popa
pop
mov
add
xor
ljmp
push
add
insb
rol
push
mov
mov
inc
sti
aaa
popa
in
mov
jno
mov
imul
fsubrl
jae
add
fisubl
out
mov
sub
pop
mov
aaa
enter
adc
xchg
imul
cs
push
rcll
in
jnp
out
push
sbb
jno
rcll
sbb
inc
stos
mov
jnp
aad
jae
inc
scas
ret
fldl
lock
cltd
pushf
and
orb
arpl
cmp
iret
jb
push
fwait
xor
loop
sbb
aaa
push
push
in
and
xlat
mov
mov
aam
daa
sbb
outsl
movsb
cmpsl
or
pop
pop
pusha
adc
sub
ss
pop
mov
pop
out
jle
mov
pushf
arpl
jecxz
xchg
pop
or
shll
data16
cmp
bt
test
call
movl
jmp
pshufw
xchg
cld
leave
stos
add
std
test
enter
cwtl
cld
mov
cmpsb
mov
ficompl
lahf
push
xchg
stos
cmp
mov
sub
jo
mov
pushf
xchg
ja
xor
invd
lds
in
mov
or
jecxz
test
mov
aad
and
ret
loopne
cld
iret
not
mov
xchg
sbb
movsl
orb
stos
pop
sub
and
aaa
hlt
es
pop
or
cmp
adc
aaa
in
or
jno
xchg
mov
sub
icebp
insb
sbb
frndint
jl
lods
pop
mov
jl
cmp
jo
mov
outsb
cmp
mov
dec
inc
xor
je
inc
and
fbld
cmp
sub
test
test
pop
add
mov
scas
insl
fdiv
mov
stos
fnstsw
mov
leave
xchg
popa
dec
enter
push
sarl
sti
fisubrl
cmp
addr16
cmpsb
rcrl
sub
push
call
std
insb
stos
pusha
lea
jmp
jno
ds
gs
ja
test
mov
dec
test
xchg
dec
jae
lret
xchg
out
push
les
loope
jecxz
lea
sarb
rorb
lea
xchg
mov
mov
add
add
into
push
adc
add
dec
outsb
push
push
sub
rolb
mov
or
int
push
adc
sub
mov
cwtl
dec
sbb
jmp
sbb
mov
aaa
notb
push
daa
in
add
cmp
add
xchg
mov
shll
test
or
mov
or
pop
jp
shrl
hlt
mov
mov
pop
mov
adc
scas
adcl
jae
test
call
aaa
out
jnp
dec
dec
add
xor
nop
cmp
and
fcompl
xchg
push
int
leave
lahf
hlt
in
jl
imul
adc
shll
push
movl
and
jae
pushf
pusha
pusha
push
lea
jmp
mov
push
dec
jo
fisubs
push
inc
and
inc
jno
mov
lea
iret
mov
ss
inc
or
cmp
dec
push
enter
pop
inc
jbe
mov
pop
cmpsl
imul
nop
cmp
dec
adc
clc
je
cmc
insb
out
lods
cmp
scas
xor
dec
adc
test
test
xor
pop
push
data16
mov
out
pop
lahf
shll
push
insb
loop
sub
push
iret
mov
sbb
pop
fsubl
sub
dec
jle
adc
fildll
mov
movsl
jmp
shl
sar
call
icebp
jmp
and
cmp
shlb
hlt
imul
inc
mov
xchg
mov
and
mov
test
xchg
fidivrs
xor
sti
cmpsl
pop
push
inc
mov
fstps
dec
sbbl
call
pusha
shll
loopne
mov
call
std
pop
push
call
sbb
and
pop
xlat
roll
loopne
pavgb
cs
sub
mov
or
stc
scas
adc
mov
lahf
mov
rcrl
cld
movsb
arpl
jp
movsl
sbb
sub
sbb
xchg
orl
pop
inc
loop
fistl
or
int
push
push
outsl
test
cld
pop
jecxz
fwait
pop
xchg
loop
movsl
ja
aaa
push
and
loope
cmpl
sub
ficoms
add
push
stos
lea
jne
pushf
inc
lea
jae
inc
call
push
call
call
add
fldl
decl
aaa
push
adc
xor
arpl
push
pop
xchg
inc
movsb
mov
add
call
and
out
daa
and
aam
xchg
popa
lock
pop
add
add
rclb
sbb
popa
lods
xchg
pop
push
shr
lcall
xor
cmpsb
adc
jbe
imull
les
das
movsl
mov
movsb
push
in
fdivrl
jl
mov
shll
push
std
loopne
subb
mov
cmp
sbb
or
cmovb
adc
sbb
sbb
in
mov
negl
jae
pop
test
psadbw
push
jl
std
out
test
test
sub
imulb
das
add
sbb
mov
mov
push
int
jns
pushf
sbb
out
repnz
repnz
or
das
pop
in
fadd
mov
dec
call
out
or
inc
ljmp
cmp
or
aaa
insb
and
fwait
gs
jns
cld
mov
inc
pop
and
aad
shrb
push
or
jecxz
fdivrs
xchg
jbe
xor
lret
cmp
cmp
movsb
adc
add
pop
and
repz
cwtl
sbb
int
sub
sbb
syscall
sub
or
test
xchg
hlt
stc
bound
mov
mov
xchg
xchg
xor
shll
imul
sti
pushf
mov
lea
je
clc
pusha
stc
cmp
pushf
lea
je
pushf
movw
lea
jmp
add
inc
jb
popa
je
inc
insb
insb
imul
outsb
add
out
sbb
call
mov
adc
push
or
call
jp
add
add
xor
sti
negb
add
mov
adcb
fdiv
sahf
jmp
icebp
add
add
push
sbb
into
dec
inc
jmp
outsl
fs
je
add
mov
dec
mov
lret
mov
mov
push
sub
xor
cltd
mov
in
frstor
jle
cmp
loopne
shll
insb
into
shrl
out
jno
call
int
ret
dec
or
scas
lock
ret
andb
jg
lret
mov
je
fucomi
out
cmc
xor
mov
cmp
cmpsl
ret
xor
inc
push
push
mov
push
outsb
xchg
add
flds
sbb
xchg
ss
sub
lret
mov
xchg
sub
cwtl
or
dec
dec
jecxz
shl
ret
dec
cwtl
lea
jb
jl
aaa
fmull
push
mov
fstpt
lret
xchg
jae
sbb
lret
aaa
insl
xor
enter
dec
rcl
call
lea
ja
rcl
sub
add
add
shld
movzbw
mov
or
sar
mov
pusha
pusha
clc
pushf
repnz
pushf
pushf
lea
jne
pusha
pop
not
cwtl
movb
not
mov
lahf
pushl
call
jbe
cmc
push
xchg
or
cmp
push
and
and
aad
mov
mov
sbb
xchg
jp
xor
push
sahf
rclb
sarl
mov
or
push
cmp
adc
jns
scas
push
push
push
mov
push
sti
je
push
and
sub
push
in
push
mov
mov
shrl
dec
push
xchg
js
xlat
aad
lcall
push
stc
pop
jmp
cwtl
jecxz
pop
aaa
imul
push
orb
into
or
xchg
fldcw
rcl
aaa
outsb
push
cmpsb
or
cmp
add
pusha
cmpb
pushl
jmp
in
push
jo
sub
pop
pop
adc
outsl
mov
mov
sbb
stos
xchg
push
xor
ljmp
or
add
into
pop
pop
or
aaa
outsl
dec
outsl
mov
jecxz
sub
mov
and
pushf
lea
jne
setno
seta
mov
push
movb
pusha
pushf
popl
jmp
inc
cmp
lahf
ja
mov
cs
sbb
add
push
mov
test
cmpl
fstpl
xor
xchg
push
mov
pop
inc
test
or
stc
pop
jo
pop
sbb
mov
add
xchg
enter
movsb
test
outsl
jecxz
imul
jge
sub
ss
mov
or
jl
add
test
negb
push
jp
sub
jae
and
subl
aaa
outsl
or
stc
call
adc
inc
in
inc
outsb
call
out
inc
fsub
popa
dec
loope
repz
dec
add
cmpsb
inc
dec
cmp
mov
sub
xor
fisttps
popf
scas
test
dec
adc
jae
xchg
jp
jge
aas
sub
sbb
fcomip
out
dec
lods
pop
cmp
cmpl
cmp
mov
dec
mov
push
mov
daa
leave
cmpb
or
jb
aaa
jo
sub
sahf
sub
push
shlb
stos
stos
dec
mov
adc
loop
loope
xor
add
out
dec
and
mov
insl
mov
imul
adc
test
enter
xchg
repnz
cmp
adc
xchg
mov
and
mov
movsl
imul
mov
std
jns
sbb
fisttpll
popf
xchg
popa
add
xlat
cmp
pop
rclb
add
aaa
jno
mov
dec
jae
shld
mov
ror
clc
clc
mov
pushf
sub
xor
rcl
mov
call
arpl
fs
xor
cs
insb
add
xchg
dec
icebp
scas
scas
cwtl
xor
stos
mov
inc
lahf
jns
xor
xchg
pop
out
lods
sahf
cmp
ret
jmp
push
jmp
jmp
das
lods
loopne
icebp
in
in
pop
hlt
push
pop
outsl
in
cmp
cmp
or
push
mov
xor
repnz
arpl
mov
sbb
test
addr16
test
subb
pop
adc
lds
push
pop
cmp
pop
add
add
mov
dec
cmp
mov
add
aaa
jno
jo
push
call
aam
add
add
mov
roll
mov
sub
and
mov
adc
sbb
jno
outsl
jb
push
cltd
ficomps
es
cli
mov
mov
cmpsb
pop
int3
adc
cmp
cmp
stos
and
icebp
xchg
test
mov
push
cmp
xor
mov
inc
xor
loopne,pn
jle
hlt
and
mov
stos
dec
bound
xchg
out
aaa
jb
ja
mov
mov
push
push
sub
test
dec
imul
cld
jbe
mov
frstor
sbb
and
jbe
sub
mov
or
iret
in
xorb
sub
sub
fildll
add
fwait
inc
aam
cmp
icebp
outsb
or
arpl
adc
ficomps
mov
nop
lods
mov
outsl
repz
das
push
lret
clc
cmp
pop
aas
stos
aaa
enter
pusha
dec
mov
out
xchg
inc
adc
sbb
aaa
jb
dec
mov
cld
or
pop
lahf
inc
adc
cwtl
daa
add
push
jmp
loope
scas
inc
add
test
fnstenv
inc
int
pop
repz
fistps
fnstenv
pop
lcall
mov
adcb
sti
mov
mov
repnz
orb
dec
and
jo
jle
fs
push
int3
int
mov
jl
popa
pop
push
fbld
lret
lods
cmp
sbb
jmp
add
aaa
jae
mov
and
add
add
pushf
lea
movb
mov
pushf
pushf
movl
movb
pushl
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
sub
addl
sti
in
nop
fildll
pop
mov
fcomps
sbb
popf
or
push
cmpsb
arpl
add
adc
cs
fsubl
push
out
jne,pt
lahf
mov
call
and
jnp
cs
sub
push
call
xor
ficomps
xchg
dec
pop
xchg
add
fimull
cld
notb
sub
jno
ja
and
jno
pop
out
daa
xchg
out
dec
cltd
cmp
idivl
xlat
loop
jle
dec
call
in
cmp
add
push
call
das
inc
mov
xorb
xor
xchg
inc
mov
adc
sbb
inc
push
inc
fists
sbb
imul
pop
test
xchg
cwtl
xchg
dec
dec
gs
sub
lret
fidivl
fdivrs
dec
jb
dec
es
out
fs
or
leave
add
jmp
add
ja
inc
adcb
mov
cmp
push
pop
out
sub
inc
mov
jne
bound
hlt
push
fwait
mov
push
jae
add
lds
push
and
push
shlb
icebp
jne
xchg
mov
jmp
or
inc
pop
fwait
or
mull
xor
cs
repnz
sub
in
or
ss
cli
jae
pusha
rorl
faddp
add
vxorpd
and
nop
popf
arpl
dec
dec
ljmp
mov
sub
and
jne
push
mov
pushfw
popw
pushf
mov
call
push
call
push
push
mov
pop
adc
jg
add
decl
sbb
pop
pop
rorl
push
rcll
aas
adc
lcall
jmp
sbbb
or
pop
jmp
movsl
mov
sub
jg
xchg
fst
xchg
or
adc
dec
dec
lods
mov
cmp
xor
jbe
out
jbe
icebp
jo
imull
mov
pop
lret
xchg
jg
mov
mov
pusha
sbb
jbe
cs
jmp
lret
pop
rclb
fcompl
inc
sub
cwtl
ja
imul
jg
pop
inc
pop
pushf
jp
inc
lods
test
xor
outsb
mov
jl
pop
inc
xchg
in
enter
gs
fdivs
inc
dec
stos
mov
loopne
lea
in
outsb
leave
pop
xor
lret
jg
and
or
fnsave
or
mov
jmp
cmpsb
pop
test
jp
dec
rcll
rorl
jbe
fdivl
stos
push
cltd
ds
stc
mov
sahf
bound
rorb
fsubl
adc
jnp
nop
cmc
rorl
mov
jle
dec
pop
push
dec
lods
cld
pop
and
sub
xchg
push
or
xchg
aad
ja
xor
gs
jnp
loope
or
sbb
int3
adc
fidivrs
lret
js
sbb
cmp
lret
and
sub
push
call
bound
dec
call
xlat
xor
int3
or
push
aad
enter
arpl
pop
clc
repz
rcrl
sbb
cltd
xchg
adcb
sbb
les
adc
push
xor
mov
fimuls
shl
loope
xchg
stc
lahf
popf
add
mov
mov
outsb
or
or
jns
xchg
lcall
clc
arpl
inc
push
ret
js
jb
nop
movsl
cld
insl
xor
mov
adc
mov
shll
jbe
aad
inc
inc
ret
push
add
pop
adc
cli
inc
sub
pop
pop
in
and
push
xor
mov
mov
xor
ficoml
pushf
fbstp
adc
jbe
shl
pop
dec
cltd
xor
pop
ds
in
jecxz
inc
mov
and
add
stos
xor
call
xor
mov
pop
cmp
fildll
xchg
push
jmp
shll
js
pop
push
lea
jae
call
call
push
call
lahf
mov
bt
call
push
call
lret
inc
pushf
cmp
call
adc
add
add
add
add
pop
jp
add
add
add
add
add
add
add
and
add
add
insl
out
add
add
add
add
add
add
add
add
add
add
das
sbb
add
add
pop
stos
and
add
add
mov
ret
and
mov
dec
push
add
out
and
add
add
lret
add
add
add
stc
xor
jmp
push
call
add
cmp
stc
ljmp
add
inc
mov
call
push
call
movl
xor
add
jnp
push
or
push
jnp
clc
cmpsb
dec
add
jnp
pop
dec
mov
jge
pusha
inc
les
call
add
loopne
push
inc
mov
int
pop
fs
dec
inc
dec
pop
popf
sahf
jge
int3
or
cld
push
push
adc
addb
outsb
in
dec
lret
inc
call
sub
sbb
sbb
mov
xchg
outsb
repz
dec
pusha
cmc
ds
sti
cmc
mov
push
stos
sub
ret
shll
jns
mov
xchg
dec
cltd
and
mov
cmc
orl
mov
ja
bound
scas
in
xor
push
inc
push
dec
push
gs
imulb
cmpsb
fidivrl
mov
cwtl
fadds
push
fstl
pop
shlb
dec
push
and
ret
inc
mov
sub
jge
cwtl
dec
outsl
push
sbb
sub
mov
mov
adcl
add
sub
movsb
jb
jnp
add
mov
fwait
aam
jb
in
dec
push
inc
and
push
loope
aas
dec
les
cmp
xchg
inc
sarl
mov
jl
aaa
jns
sub
xor
cmp
ja
mov
inc
hlt
mov
aas
dec
gs
dec
nop
fwait
frstor
fsubrl
sub
movsl
and
sti
or
jo
hlt
int3
test
inc
inc
stc
jecxz
xchg
ss
mov
ds
dec
push
out
int
jne
fs
mov
cs
xor
jbe
xchg
iret
push
inc
hlt
and
in
addb
push
fistps
xchg
xor
aaa
jns
xor
add
mov
fidivrs
imul
repz
mov
pushl
sub
fstl
nop
pop
ret
cmp
repz
imul
ja
mov
jl
dec
insl
gs
sbb
jae
test
aad
loop
inc
mov
mov
and
aaa
jp
lcall
call
push
push
call
dec
scas
push
jge
sbb
idivb
cmp
into
dec
xor
mov
xchg
sahf
sub
fbstp
aas
pusha
notb
lock
loope
cld
adc
jae
mov
insb
sub
sbb
cmp
aam
stos
xchg
in
add
push
jb
mov
xchg
push
xor
int3
jb
and
xchg
mov
lods
and
xchg
cmp
dec
test
out
lret
and
mov
mov
hlt
aam
fwait
cltd
inc
mov
int3
jecxz
dec
or
popa
mov
outsl
cltd
stc
out
in
pop
xor
sahf
sbb
mov
repz
div
pop
sbb
jg
adc
pop
cmp
outsb
mov
dec
pop
mov
lahf
fidivs
decb
push
dec
mov
out
in
sub
ret
cmp
inc
cmp
push
xchg
mov
pusha
out
or
push
gs
push
cmc
sbb
sub
das
fs
repz
add
adc
xchg
dec
mov
inc
jmp
add
mov
and
and
mov
roll
fisttpll
xchg
mov
pop
mov
shlb
xchg
fsubrs
je
jns
jg
pop
mov
mov
aaa
jl
mov
jne,pt
call
pop
fxam
push
call
push
cs
and
xor
sub
jnp
jg
outsb
xchg
adc
pop
cmp
xchg
andb
cmp
mov
insb
jecxz
call
int3
and
loop
push
mov
enter
sahf
ret
jne
or
nop
mov
cli
xlat
shrb
add
test
popf
add
mov
fsts
inc
and
mov
push
inc
outsb
cmp
xchg
jns
jmp
rclb
jbe
sahf
push
push
inc
pushf
shll
jge
adc
aam
jmp
pop
leave
faddl
andb
pop
enter
call
jl
das
add
into
mov
or
stos
jmp
adc
int3
inc
adc
ljmp
adc
push
xor
mov
ret
arpl
xchg
xchg
jg
jge
push
and
xchg
mov
cmpl
or
cwtl
fimuls
shll
jge
push
ret
push
call
jl
jb
imul
cmp
pushl
add
push
movb
pusha
lea
jmp
push
lea
call
jmp
mov
mov
pop
movzbw
movsbw
pop
mov
not
not
pop
movzbw
not
pusha
pop
mov
push
push
mov
pushf
pushl
ret
push
call
int3
int3
sub
in
xchg
test
cmpsl
loope
and
sbb
pop
lods
mov
sbb
pushf
mov
sti
daa
xchg
in
or
ret
jno
pop
mov
fnop
dec
stos
into
mov
dec
inc
push
scas
aaa
jne
aas
ret
and
test
mov
sub
and
dec
sub
mov
stc
ds
test
mov
lahf
pop
out
mov
cmp
iret
iret
stc
das
daa
inc
xor
add
pop
inc
pop
adcb
repnz
xorb
xor
pop
push
mov
bound
cli
jnp
pop
inc
sub
pop
out
add
dec
cmp
or
pop
inc
adc
or
sub
cs
aas
arpl
jle
je
test
inc
popf
loopne
xchg
dec
add
add
jno
sub
aam
out
xlat
repnz
lret
mov
je
dec
dec
cmp
push
and
orl
push
push
mov
xchg
les
loope
and
mov
inc
insl
sti
xor
adc
dec
pop
out
and
push
sub
popa
and
xchg
hlt
shll
jle
adc
adc
push
push
lea
jmp
call
pop
pushf
push
call
mov
int
mov
es
add
fisubrl
lock
out
enter
mov
dec
mov
inc
stos
call
shrl
mov
push
jo
mov
pop
test
mov
mov
push
or
iret
pop
movsb
arpl
or
jmp
pop
fcoms
pop
mov
pop
mov
xchg
roll
loopne
cmpb
dec
push
js
loopne
shll
sbbb
push
call
rolb
daa
add
and
ficomps
out
and
icebp
std
jmp
jns
jg
mov
in
gs
movsb
pop
pop
imul
pop
push
push
cmpsl
inc
ret
scas
popf
jmp
das
sub
mov
cmp
inc
pop
test
adc
or
jne
mov
mov
fldl
insb
and
fnclex
mov
cld
rol
ss
cmovns
mov
jge
mov
icebp
mov
nop
lds
pop
and
and
adc
inc
insl
pushf
push
ret
pop
sbb
cmp
lods
pop
pusha
call
push
call
jmp
sarl
addr16
push
xchg
adc
mov
adc
and
mov
mov
sti
imul
fimuls
arpl
sbb
xchg
faddl
lds
es
cltd
jp
test
jne
cmp
clc
xor
mov
pushf
pop
cmpb
jge
cmpxchg
iret
fdivp
sbb
and
int3
mov
out
rcrb
mov
mov
push
leave
stos
mov
setle
pusha
add
cmp
xchg
shll
addl
mov
add
push
inc
sub
pusha
xchg
or
stos
stos
aaa
pop
xchg
dec
mov
pushf
out
dec
and
mov
dec
xlat
sbb
push
popa
test
push
jbe
mov
add
adc
xchg
sbb
bound
orl
scas
mov
repnz
adc
not
mov
test
push
pusha
outsb
loopne
dec
cltd
aaa
inc
sti
shll
xorb
hlt
push
call
lock
movsb
inc
out
mov
pop
xor
mov
cmp
and
pop
in
int3
mov
mov
jbe
shlb
push
fsubs
into
jns
stos
outsb
jns
push
cmp
cmp
insl
scas
fisubrl
xor
or
mov
adc
in
inc
aad
push
mov
pusha
js
dec
lods
xor
sbb
dec
mov
sub
cmpsl
ret
in
push
cmp
push
push
mov
or
xorl
scas
scas
mov
inc
fistl
test
shr
clc
sub
lods
mov
call
adc
add
aam
jno
cmc
daa
test
fcoml
xor
push
pop
incb
jp
enter
popa
inc
imul
mov
filds
xchg
mov
sub
push
pop
xchg
nop
bound
fmuls
mov
and
pop
shll
adc
sbb
std
inc
cli
out
push
or
lahf
aaa
adc
cmp
pop
hlt
dec
mov
enter
rorb
insb
cmpsb
or
loopne
cs
push
test
jmp
and
dec
sub
aaa
add
and
jp
xchg
fs
repnz
xchg
pushf
or
and
push
dec
in
test
sbb
adc
adc
call
add
push
dec
pop
xchg
and
inc
mov
int3
xchg
hlt
dec
inc
bound
push
fimull
jmp
mov
mov
mov
inc
cwtl
pop
rcll
in
jge
jae
pushf
dec
out
in
xor
push
push
rcl
pushf
lods
icebp
sti
fwait
adc
mov
andl
repnz
sbb
stos
pop
ljmp
pop
inc
sarb
cltd
loopne
scas
test
aaa
cmpl
test
movsb
sub
divb
repz
push
js
jae
pop
insb
xchg
cli
or
out
cmpsl
mov
inc
test
stc
std
fwait
jne
fsts
fucomi
mov
pop
stc
call
cmp
xor
testl
fmull
xchg
lods
aaa
outsl
orb
test
jp
xor
cmp
push
push
dec
push
xor
movsl
les
push
mov
stos
jecxz
xchg
jecxz
lds
pop
lret
mov
push
adc
aaa
test
popl
inc
insb
sahf
bound
and
imul
loope
ret
roll
mov
jl
pop
mov
adc
ret
lret
dec
aaa
jno
mov
pop
outsb
ljmp
out
and
adc
push
xor
scas
push
jne
cmpb
je
cli
cmpb
and
inc
sbb
das
push
cmpl
push
fnstenv
in
or
adc
out
clc
jle
out
add
pop
scas
shll
test
ds
jle
cmp
pushf
push
mov
pushf
lea
jb
test
test
pusha
call
push
call
xor
pusha
leave
push
call
andb
stos
aad
ror
stos
lods
filds
inc
std
mov
movsb
leave
int3
adc
push
pushf
ret
or
cmpsl
and
pop
sahf
insb
test
arpl
popf
stos
test
jl
divl
mov
pop
roll
test
fs
sub
mov
stos
sahf
loop
push
lods
dec
pop
out
clc
call
sti
andb
scas
and
lret
scas
add
icebp
hlt
imull
cmp
dec
test
jle
imul
test
cltd
lret
push
call
subl
movsb
push
call
testb
rep
popa
mov
xor
mov
punpckhwd
pop
sbb
or
dec
and
cli
jecxz
rclb
shlb
jno
outsb
mov
or
xor
sbb
xchg
andl
pop
scas
inc
mov
test
orb
or
sub
fbstp
push
sbbl
pushf
push
adc
sub
lret
jmp
pop
inc
and
faddl
mov
dec
fstl
dec
mov
out
xor
add
sub
outsb
je
mov
dec
xchg
adc
mov
xchg
mov
mov
or
adc
sbb
adc
jl
cli
cmp
das
xor
rcl
call
add
pop
xchg
mov
cwtl
adc
mov
dec
cmp
or
dec
xlat
fcmovnb
leave
fcoml
dec
gs
sarl
mov
into
and
sub
data16
mov
enter
shll
xchg
mov
ret
ljmp
dec
lcall
mov
bswap
lahf
mov
lea
jmp
sbb
dec
push
insb
xor
adc
sub
sbb
mov
stos
dec
cmp
inc
out
rorb
popa
fs
daa
gs
rolw
adc
in
inc
adc
rcrb
int
leave
leave
fwait
pop
pop
xchg
jge
or
pop
test
jo
xor
dec
jle
mov
lcall
int
fucomi
jp
xor
out
add
and
mov
sub
movsl
and
shrl
cmp
cmp
dec
mov
xor
jmp
mov
and
xchg
int
test
bt
stc
or
pushf
jmp
popa
mov
lods
js
arpl
push
scas
mov
ret
ficoml
cmp
add
pop
push
cwtl
xchg
stos
dec
xchg
sbb
xor
daa
cli
xor
inc
shrl
and
and
in
and
pop
enter
mov
mov
push
sbb
in
cmp
into
lea
inc
ljmp
sti
xchg
jl
jmp
pop
xchg
xor
call
shll
mov
mov
jne
add
mov
shll
notl
and
push
stc
push
mov
fs
jae
mov
jno
pop
adc
mov
lods
pop
movsl
call
or
push
ds
push
xchg
dec
mov
in
pushf
call
lods
pop
das
pop
aas
repz
int3
into
mov
cld
xchg
cmp
stos
negl
push
incl
shrb
push
mov
leave
call
sbb
icebp
outsl
pop
inc
shll
mov
mov
dec
add
push
mov
rcrl
cltd
pop
pop
dec
mov
inc
pop
insb
jmp
jbe
movsl
jg
or
add
cmp
scas
mov
in
int3
inc
mov
mov
or
cmp
pop
adc
and
int
sbb
push
mov
popa
mov
test
ljmp
jl
mov
mov
xor
test
pop
pop
faddp
jg
add
lods
call
sarb
scas
loope
push
pop
or
test
or
shrb
cmp
pushf
lea
ja
cmc
pusha
imul
cmp
clc
cmp
add
push
lea
jmp
push
call
fs
icebp
sub
std
test
loopne
mov
mov
pop
inc
push
in
add
in
test
ret
push
fnstsw
adc
add
cli
cltd
mov
sub
push
inc
fcom
mov
dec
add
mov
jmp
xchg
mov
addb
sti
cmp
xlat
sub
outsl
jp
repnz
mov
jmp
faddl
rcrl
aam
fs
push
mov
orl
in
aam
sub
fdivs
adc
inc
inc
aad
std
out
adc
insb
push
add
mov
inc
scas
xor
es
les
xor
rorb
cmp
out
in
inc
add
pop
insb
ret
lahf
fcmovne
in
push
sbb
pextrw
nop
insb
scas
les
add
int3
std
mov
out
xor
push
xchg
mov
test
xchg
cmpsb
pusha
insb
std
xor
jb
mov
sub
inc
inc
inc
out
add
addr16
out
je
stos
xchg
cmpsb
xchg
and
and
mov
sub
mov
dec
mov
insl
lea
insl
cltd
or
fisubs
pop
mov
hlt
sub
mov
mov
aaa
mov
mov
popa
mov
jl
mov
sbb
dec
orl
cltd
or
cli
loop
int
pop
push
xchg
xor
cld
in
xchg
aas
xchg
fistpl
popf
xchg
int
jb
test
add
cmp
mov
or
pop
push
das
pusha
out
data16
add
aaa
mov
inc
popa
push
xor
mov
pushf
adc
push
aam
test
xor
push
jle
cmp
mov
sub
mov
and
xchg
xchg
lock
sarb
je
jl
jo
or
lea
pop
mov
fcompl
jo
shrb
and
clc
shll
mov
jne
push
call
rcll
add
pop
dec
call
outsl
pop
outsb
jmp
push
call
sbb
std
push
inc
out
mov
add
cmc
xchg
push
call
idivl
or
cmp
push
cli
fcompl
lock
mov
inc
insb
mov
rcr
test
stos
adc
es
jge
and
cmp
hlt
dec
call
adc
pop
push
mov
sub
cmp
lds
jne
add
ljmp
aad
mov
popa
out
mov
orl
inc
movsb
pop
call
add
xchg
push
pop
jno
cwtl
shll
mov
in
js
sub
insb
insb
jnp
movsl
add
push
ret
adc
jmp
daa
repz
sub
add
xorl
loopne
dec
mov
mov
not
mov
inc
sub
jge
roll
push
popf
xorb
lods
clc
push
icebp
or
cmp
jae
inc
test
adc
add
and
repnz
cmp
fmuls
lea
subl
adc
test
stos
sub
sub
sti
rol
mov
sar
add
cmc
movzbw
setb
bts
mov
shr
pushf
adc
add
or
movsbw
movl
xor
bswap
mov
jmp
aas
push
jmp
stos
in
dec
jns
mov
pop
mov
and
inc
mov
mov
ljmp
jnp
outsl
jae
stc
hlt
cmc
sbb
int3
adc
js
adc
mov
es
imul
pop
mov
rorl
into
insb
pusha
fisubrs
mov
xor
dec
jmp
leave
jg
insb
jne
cltd
mov
addr16
cmp
dec
jmp
shll
mov
xor
dec
sub
push
sbb
jle
pop
out
inc
int
stc
push
adc
xlat
jge
mov
mov
ds
outsb
inc
shld
out
sub
xchg
lcall
out
push
xchg
mov
ret
add
jns
or
hlt
dec
sbb
mov
popa
push
dec
cmp
add
pop
xor
loop
in
inc
insl
mov
adc
adc
stos
xchg
mov
negl
shll
or
pop
imul
jecxz
in
aaa
push
lretw
fsubrl
stos
xchg
jp
dec
or
pop
dec
add
sbb
pop
add
sub
mov
mov
mov
push
rol
push
sub
jne
sub
inc
aad
xchg
jbe
mov
mov
jmp
mov
cwtl
cltd
jo
xchg
iret
mov
rcl
lods
shll
jle
mov
adc
sbb
add
cwtl
call
mov
or
in
add
add
fs
ja
call
push
call
xchg
movsbl
das
push
shr
push
push
shld
aad
call
push
call
scas
mov
lea
call
pushf
pushf
push
push
lea
jmp
xchg
cwtl
jmp
jbe
fwait
cmp
mov
inc
inc
or
std
addl
add
orl
add
stos
std
lea
mov
add
xchg
add
fcoms
fdivr
cli
and
xchg
aas
mov
andl
mov
add
adc
mov
lods
inc
mov
inc
shll
aad
push
push
call
add
push
ss
movb
pushl
popl
pushf
push
pushf
movb
pushl
ret
push
call
xchg
cli
cltd
call
lcall
add
je
add
pop
pop
cmp
pusha
lea
jae
stc
stc
cmp
call
adc
cmp
aas
adc
mov
inc
pop
adc
loope
or
pop
cltd
mov
sbb
mov
iret
fcmovnb
sub
push
add
movsl
xor
adc
fidivrl
int
push
orl
jge
mov
jns
std
mov
or
movsb
icebp
fwait
cmp
out
mov
cmpsl
aaa
mov
push
sbb
aas
rcrb
movsb
add
lahf
pop
pop
popa
out
dec
fld
out
movsb
gs
lcall
or
push
orl
and
pop
ror
dec
test
shll
nop
mov
daa
pusha
mov
not
jmp
push
call
aad
xor
std
jp
out
adc
add
lods
pop
outsl
sub
shrl
gs
sbb
int
pop
mov
pusha
in
mov
xor
in
push
push
mov
xchg
mov
jbe
or
add
push
int
ret
arpl
fcmovne
test
fisttpl
and
fs
sahf
xor
shrb
adc
test
aam
and
xchg
mov
sbb
mov
pop
push
xchg
shll
xchg
push
push
int
std
mov
dec
add
fwait
push
sub
pop
xor
sub
xchg
add
xor
mov
and
add
add
adc
add
add
jecxz
out
mov
adc
ljmp
fwait
add
add
add
jo
and
push
add
movsl
das
mov
xor
adc
mov
adc
add
add
out
cltd
add
and
add
add
data16
mov
sub
push
add
sbb
lret
or
lret
sub
xor
leave
iret
adc
add
add
cltd
adc
push
add
mov
pop
mov
and
stos
fbld
and
adc
add
out
cmp
xor
adc
pop
cmp
das
adc
add
add
add
and
add
add
idivb
and
adc
add
pop
adc
sub
add
add
lea
je
adc
add
add
and
and
add
add
mov
adc
add
add
pshufd
and
or
add
adc
add
add
dec
ljmp
add
mov
mov
xor
add
add
or
out
jnp
adc
add
add
adc
add
add
jmp
and
add
add
add
add
add
add
jmp
imul
adc
push
add
je
int3
cmpsl
insl
push
sub
and
add
pop
mov
add
hlt
sbb
add
adc
add
add
xchg
pop
insl
insb
add
add
add
outsb
dec
subl
and
add
add
hlt
and
mov
add
sarb
mov
aad
add
mov
xor
xchg
adc
add
add
mov
pop
adc
add
add
and
repnz
and
add
add
dec
insb
repz
and
add
add
and
cmpb
add
out
mov
xchg
jmp
sahf
jns
add
fistl
pop
mov
mov
adc
sbb
xor
pop
mov
sbb
aad
lea
pop
imul
je
shrb
out
std
aaa
jne
shrl
je
ret
cmp
dec
repnz
pop
movups
dec
jo
test
push
pop
xor
loop
ljmp
aam
push
and
aaa
xchg
cli
mov
push
arpl
mov
xor
outsb
pop
mov
test
xor
faddp
dec
shrb
xor
fisubs
cwtl
fs
cmp
jmp
add
sar
sbbb
in
dec
jp
or
in
mov
addb
clc
xchg
xchg
dec
jbe
mov
inc
mov
push
cmpsl
push
fucomp
pop
xchg
orl
fsub
inc
aaa
mov
mov
xor
int3
xor
or
repz
xor
cli
addr16
aas
cli
sub
rcrl
jg
test
jbe
mov
inc
xchg
inc
jns
std
enter
xchg
add
test
push
arpl
sbb
xlat
push
enter
fdivrp
repnz
and
scas
push
mov
mov
rcrb
and
shll
xchg
inc
mov
mov
add
xchg
int
std
out
fsub
call
pushf
cli
or
pop
lock
dec
xabort
lea
cli
in
mov
adc
sti
mov
dec
cmp
flds
outsl
inc
jno
push
or
dec
lods
shl
ss
lea
mov
int3
push
sbbl
or
push
push
mov
jno
ret
popl
jne
pop
mov
andl
std
aam
roll
ljmp
jb
loop
sub
insb
mov
shll
xchg
or
pop
push
jae
rcrb
mov
lret
aam
mov
std
add
mov
xchg
out
adc
pop
xchg
cmpsb
mov
mov
lds
popf
mov
sbb
sbb
cmp
and
stos
aaa
xsha1
cmpsb
int
dec
fidivrl
pop
mov
pop
cmp
inc
les
rcr
inc
mov
nop
arpl
mov
adc
in
fsubrl
ficomps
xor
pop
stc
add
mov
test
jle
loope
push
iret
shll
xchg
mov
add
dec
fmuls
pop
add
loop,pt
mov
in
ljmp
outsb
pop
out
and
add
ss
enter
sbb
ret
ljmp
mov
xor
cmp
push
mov
test
les
pop
push
inc
or
sub
orb
lret
jnp
in
int3
xchg
arpl
hlt
je
xchg
lods
jnp
jns
aam
mov
ror
cmp
jae
cltd
stos
insl
or
test
shrl
sub
aaa
mov
xor
add
shll
xchg
in
push
call
inc
cmp
std
push
test
call
xchg
push
push
sub
sbb
sbb
dec
jbe
inc
xor
loope
idivl
jb
mov
sub
iret
mov
mov
push
pop
cmpsb
mov
inc
imul
jb
jns
cmpsb
inc
add
divl
bswap
push
shlb
inc
movsl
mov
or
dec
lods
dec
data16
xchg
int
ret
add
stos
or
ss
pushf
getsec
pop
lods
xchg
pusha
pusha
ret
or
idiv
xchg
xor
testl
and
stc
cld
inc
add
inc
decb
ss
dec
push
mov
iret
shll
xchg
mov
insl
or
stos
xor
or
repnz
ja
lods
loop
push
and
xchg
push
insb
outsl
movsl
adc
jg
sbb
pop
and
fbstp
xchg
lret
loope
loop
mov
mov
jo
into
cs
lods
mov
sti
xlat
mov
xchg
in
fld
out
fadd
imulb
lcall
into
popl
cwtl
test
or
imul
aam
push
sub
pop
jns
leave
or
cmp
jns
cmpl
imull
inc
pop
insl
fldenv
push
pop
push
push
mov
movb
and
jne
or
js
xor
xchg
xchg
mov
dec
jg
and
stc
lret
or
pop
xor
xor
arpl
cli
jl
test
lcall
mov
negl
xlat
xor
xchg
fstp
sub
push
push
sbb
push
push
fisttps
inc
out
push
ja
outsl
push
xchg
shll
cwtl
leave
int3
and
pop
inc
repnz
stos
fbstp
repnz
mov
fsts
mov
or
xor
push
and
pop
push
adc
pop
mov
lcall
adc
pop
in
xchg
scas
lret
push
mov
into
ja
pop
orl
je
inc
dec
cmp
pop
faddl
push
inc
cld
dec
mov
in
icebp
or
jo
pop
imul
mov
int
imul
mul
mov
jne
arpl
xchg
xor
not
mov
lcall
or
jo
and
push
addr16
cmc
aad
inc
jb
jge
mov
xor
loop
dec
pop
add
push
aam
repz
add
aad
jmp
and
jbe
movzbl
test
sar
pushf
mov
sub
shld
add
cmp
xchg
pop
sub
mov
rol
add
call
push
call
and
shr
mov
xchg
lea
jne
jb
ror
sub
mov
btc
sub
cmc
btr
sub
bts
mov
pusha
sub
add
pushf
bt
pushl
popl
cmc
cmp
call
push
call
dec
push
call
or
push
dec
pop
mov
mov
dec
cmp
or
lahf
jmp
inc
jae
sbb
fildll
mov
and
out
add
push
sti
lds
xchg
mov
sub
push
arpl
cltd
xchg
push
xor
movsl
dec
dec
dec
cmp
insb
imul
insl
adcb
cmp
test
sbb
insl
xchg
dec
shll
fwait
cmp
movsb
repz
testb
aaa
nop
xchg
jge
sahf
repz
nop
jne
adc
stos
pusha
xchg
xor
and
dec
push
cmp
adc
or
clc
sbb
repnz
in
mov
gs
and
ds
loopne
pushf
xchg
or
ja
pushf
xor
xor
and
insl
sbb
cmp
pusha
add
push
dec
jo
test
pop
pop
in
aaa
fwait
ss
in
push
dec
jmp
push
call
xor
push
call
adc
ds
add
pop
adc
imul
jle
aam
push
pop
add
insl
push
push
call
push
push
pop
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
push
call
mov
adc
inc
sub
jge
insb
inc
in
fs
push
int3
shrl
push
in
cmp
mov
jmp
lahf
inc
mov
and
mov
mov
push
sub
add
imul
jecxz
inc
or
aaa
pushf
data16
push
and
jb
addr16
pop
mov
nop
dec
sub
std
cwtl
xor
lret
adc
mov
fwait
jp
aam
push
pop
fs
loope
sbb
pop
push
sti
ds
pop
fwait
add
fnsave
int3
hlt
xor
jecxz
mov
in
out
inc
outsl
clc
in
add
out
push
addb
cmpsl
pop
jg
ljmp
in
fs
shll
popf
mov
cmp
mov
out
or
add
bound
into
cmpsb
in
jp
add
xchg
and
jno
pusha
pusha
lea
jae
shl
bswap
pusha
add
mov
bsf
not
adc
push
mov
bt
mov
cmc
xor
cmc
cmp
test
test
repnz
lea
jg
push
mov
pushf
lea
jne
xadd
push
adc
shl
mov
shr
cmc
sub
pushl
jmp
ficoms
push
ljmp
jle
cmp
xchg
ja
out
ret
push
xchg
das
mov
sub
mov
ret
fildl
sbb
mov
sbb
mov
dec
ljmp
and
mov
cmp
jecxz
out
hlt
leave
stos
adc
hlt
push
jb
push
sbb
test
or
jne
adc
mov
dec
mov
cmp
xchg
pushf
movsb
lea
daa
pop
cmp
ljmp
xchg
bound
push
xorl
fwait
pop
test
sub
sub
mov
scas
sub
and
mov
pop
popf
pop
out
iret
push
lods
mov
dec
addb
mov
test
mov
lods
mov
pop
add
lods
or
jl
rcrl
cwtl
jo
imul
shlb
add
ret
test
push
fimull
and
imul
add
sbb
mov
xor
mov
inc
cmp
and
mov
fs
lret
jnp
sbb
mulb
add
sub
sbb
and
xchg
and
test
lret
xchg
jne
pop
xchg
pop
or
jne
mov
mov
and
pop
and
mov
int
arpl
dec
push
aaa
adcl
jle
xchg
shll
lahf
dec
push
lret
xchg
out
and
cmpsb
jecxz
ja
xor
aad
mov
jp
fwait
jno
scas
mov
adc
fmull
push
add
ficompl
sbb
sub
scas
movsl
sub
xor
jg
pushf
cmp
mov
add
lahf
jg
mov
cmp
push
repz
and
testb
test
ret
and
dec
xchg
roll
jae
ret
push
adc
inc
xor
add
mov
decl
test
outsb
pop
imul
lock
xor
scas
xchg
xor
adc
shlb
xor
inc
xlat
push
fwait
repz
mov
std
stc
push
adc
dec
in
enter
outsl
out
adc
push
sub
in
sbbl
add
ss
out
jg
xchg
aas
jg
xor
shl
adc
add
aaa
mov
or
call
push
call
int
push
call
or
xchg
pop
push
call
fimull
rcll
mov
pop
movzbw
jmp
mov
bswap
mov
pushf
pushf
mov
jmp
outsl
insb
xor
cs
insb
add
je
add
lea
jmp
push
mov
push
dec
add
jg
fs
dec
jb
sbb
inc
in
nop
jns
sub
aaa
sti
jecxz
lahf
jp
mov
sub
aad
inc
xchg
loop
xchg
adc
int3
mov
cmp
or
fwait
ror
sbb
pop
push
cs
sub
daa
stos
mull
std
push
cmc
lcall
mov
pop
into
sbb
stos
loope
jecxz
int3
dec
inc
push
pop
stc
mov
rcll
shll
mov
fdivrs
xchg
adc
je
out
icebp
insb
cmp
xor
pop
cmp
stos
push
jnp
pop
mov
sbb
add
push
sbb
mov
sti
ss
cs
scas
stos
stos
mov
call
icebp
sahf
sarb
movsb
mov
mov
adc
outsb
or
sub
push
sub
xchg
xor
pop
aad
inc
bound
jmp
mov
pop
test
notb
imul
int
fadds
scas
push
jo
sbb
cli
popf
call
pop
cmpsb
mov
fnstsw
add
lods
jo
xchg
ss
or
xor
enter
inc
sbb
clc
dec
mov
push
add
stc
in
stos
xchg
push
pop
in
mov
cmp
nop
mov
rcrb
in
insl
insl
sbb
dec
mov
pop
icebp
or
dec
add
xchg
pop
sub
jge
sub
imul
jnp
jnp
or
cmpb
stc
mov
adc
jnp
mov
cmp
aaa
pop
outsl
movsl
jge
rolb
mov
or
in
pop
scas
shll
mov
std
push
nop
loop
lods
dec
add
and
movsb
les
leave
cmp
mov
cmpsb
subl
fs
xor
add
aad
push
insl
jbe
mov
jle
mov
insl
pushf
stc
fdivrs
dec
ficomps
dec
lret
xchg
outsl
dec
ja
push
ss
mov
inc
jbe
dec
in
movsb
cmp
insb
adc
lret
outsb
lds
and
sbb
loopne
sub
stos
mov
jg
mov
and
dec
pushf
lods
cmp
inc
movsl
rep
add
aaa
mov
push
dec
dec
call
popa
stos
xor
test
or
add
push
leave
push
stos
movw
pushf
pusha
lea
jmp
push
lret
inc
jbe
idivb
dec
int
push
mov
sub
and
cmp
ss
mov
hlt
lock
pop
sub
outsb
jmp
cmp
mov
aad
loopne
and
push
in
dec
mov
aaa
push
mov
cld
mov
add
xchg
add
ret
pop
mov
lods
mov
mov
xchg
xor
pop
add
and
xorb
push
mov
mov
push
sbbl
push
pusha
les
mov
cmp
mov
xchg
inc
inc
xchg
or
bound
inc
cld
leave
js
gs
jmp
push
stos
push
cs
push
dec
mov
lods
mov
andb
xor
in
add
sub
cmp
data16
sbb
jb
ds
arpl
inc
fstps
in
test
imul
pushw
mov
mov
or
dec
jg
ja
out
mov
inc
lahf
cmpsb
mov
pop
pop
add
adc
dec
xor
lods
pop
dec
loop
inc
sbbl
fsincos
sahf
sbb
push
fisubrs
jge
mov
test
cmp
cmpsl
sub
and
inc
imul
adc
lcall
mov
pop
add
mov
xchg
insb
pop
fadds
inc
jo
jb
ffree
lret
mov
ficompl
sbb
stos
push
mov
shll
movsl
sub
cld
adc
mov
dec
jg
push
pop
mov
mov
test
addr16
adc
jl
ret
mov
adc
movsl
mov
outsb
xchg
stos
repz
sub
or
push
cmpsb
xor
mov
mov
shll
movsl
adc
mov
pusha
lea
je
stc
cmc
cmc
test
sub
cmc
mov
shr
seta
mov
call
lea
jne
cwtl
pusha
pushf
movb
movzbw
mov
cwtl
jmp
push
call
out
jg
jmp
push
call
ljmp
mov
pusha
push
movb
pushf
pushl
ret
push
call
mov
ds
call
add
lods
mov
outsb
lods
cltd
imul
and
push
dec
add
fmull
orl
dec
mov
stos
push
divb
into
loopne
and
ss
adc
push
popa
and
add
push
mov
and
pop
dec
xchg
je
mov
movsl
push
mov
pop
decb
std
test
test
or
dec
out
mov
repnz
stc
clc
mov
test
cmp
aaa
cmpsb
cs
ret
or
bt
pusha
cmp
movb
call
push
call
cmp
xchg
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cs
jecxz
mov
add
fnstsw
xor
lds
ja
notl
jcxz
jmp
popa
sub
decl
fstpt
sti
adc
stos
dec
inc
cltd
inc
jbe
mov
repz
icebp
outsl
loop
sahf
xchg
and
jecxz
lret
lock
cmp
inc
arpl
and
ja
loop
lcall
inc
in
out
stc
jo
ja
pop
push
xor
js
imul
xor
ss
ficomps
jmp
movsb
or
repz
cmpsb
out
jmp
add
test
stc
mov
mov
and
sub
rol
mov
cmp
stc
sub
push
pusha
lea
jmp
cmpsb
jns
lods
inc
sub
call
iret
and
push
ret
js
mov
fildll
into
add
cmc
decb
and
jecxz
lret
cmp
mov
repnz
xchg
jmp
xchg
or
out
xchg
sbb
getsec
jmp
mov
inc
imul
mov
rcrl
lret
negb
pop
in
fcom
and
push
push
notb
popa
sbb
sbb
dec
lahf
xchg
loopne
fadds
aaa
cmpsl
and
add
inc
and
jl
sbb
jmp
push
call
xor
mov
imul
cs
mov
push
das
sahf
in
dec
mov
cli
jmp
xor
cmp
jbe
clc
mov
nop
push
or
pop
scas
scas
dec
outsb
mov
jae
pop
in
leave
jg
ret
data16
lret
aad
jecxz
push
sub
or
jno
xchg
dec
push
or
sub
loope
fsts
ret
push
push
push
pop
push
xchg
mov
mov
sub
mov
xchg
insb
and
incl
xor
pop
outsb
sarb
fdivrl
lock
cmc
popf
inc
inc
dec
cmpl
das
cmp
dec
popf
dec
push
adc
lret
adc
xchg
jb
test
jmp
mov
mov
add
inc
scas
lea
pop
leave
testl
int
sub
ja
es
jl
fstpl
js
sti
add
pop
leave
sbb
mov
pop
ss
mov
aaa
test
jne
xchg
int
test
adc
xor
sti
dec
mov
mov
fistl
fcomps
xchg
in
daa
xor
out
leave
in
je
xor
nop
out
push
rcll
aad
enter
dec
shr
inc
lds
adc
xchg
jnp
leave
cmp
jbe
std
fwait
mov
mov
dec
jge
sar
bswap
stos
xor
jae
add
jmp
xchg
cld
mov
orl
shll
test
inc
and
add
inc
and
sub
add
fld
inc
and
call
pushf
push
mov
movb
pushl
ret
jmp
push
jmp
lea
jne
jp
pushf
mov
pusha
lea
call
push
lea
jmp
pusha
pushf
mov
pushl
xchg
push
dec
jmp
push
call
in
neg
add
sub
adcb
int
out
into
jecxz
push
loopne
out
sub
mov
dec
and
add
call
fisttpll
adc
or
outsl
cmp
test
mov
sub
sbbl
lods
xchg
sub
gs
data16
sub
adc
adc
enter
inc
dec
adc
xchg
data16
cmpsl
psrlq
stos
pusha
fisubrl
and
call
test
std
outsb
mov
add
into
adc
xchg
les
add
xchg
idivb
lea
jne
pusha
movl
pushf
pusha
pushl
ret
clc
sub
pushf
pusha
mov
inc
lea
pusha
pusha
mov
call
push
call
fs
aaa
faddl
aad
xor
inc
sub
and
pop
js
lods
xor
mov
lods
iret
lcall
das
int
jle
and
mov
jp
mov
mov
gs
xchg
xlat
xor
or
sub
push
or
dec
adc
mov
das
sub
xor
mov
push
das
jle
push
xchg
in
aaa
stos
ss
dec
sbb
xchg
pop
lock
sbbb
push
mov
push
sub
pushf
dec
mov
lahf
pop
and
mov
and
sub
inc
lret
xor
or
mov
mov
adc
dec
xor
lock
movsb
sbbl
sub
pop
xchg
mov
into
gs
mov
aas
scas
adc
push
aad
adc
and
rolb
call
jmp
xchg
jne
scas
in
call
pop
push
call
pop
push
call
and
mov
fwait
mov
mov
cmp
xor
movsl
and
and
ficomps
pop
mov
pop
mov
mov
nop
cld
adc
fsubrl
leave
fiaddl
mov
in
arpl
mov
adc
adc
aaa
lods
sbb
add
inc
mov
dec
ja
sub
sbb
ret
aaa
lods
xor
and
inc
mov
movl
call
and
push
jp
add
and
outsl
and
dec
jno
add
and
lcall
add
and
data16
add
and
jge
sbb
cltd
popf
and
and
insb
aam
add
and
je
sbb
test
and
lods
dec
sbb
mov
and
cmpsl
and
cmpsb
lds
add
and
arpl
and
rcrl
add
jae
add
popf
and
mov
add
add
add
add
xchg
and
rcrl
and
lcall
add
and
data16
add
popf
and
push
call
xor
cmp
call
push
call
sbb
dec
inc
lea
pusha
pushf
setae
pushl
inc
add
cmp
xchg
shrd
mov
aam
xadd
mov
setp
sar
mov
cmp
mov
test
test
push
shl
bt
inc
mov
call
test
xor
lcall
cwtl
add
insl
adc
rolb
cmp
xor
mov
int
in
imul
adc
push
jg
lahf
pop
clc
cmp
push
jae
push
bound
or
les
rol
jp
lods
adc
jae
data16
je
and
lods
xor
jne
xor
lret
dec
addb
cmp
xchg
rclb
push
nop
pop
push
and
add
mov
aaa
scas
fs
sbb
bt
pusha
add
test
clc
pusha
cmc
mov
mov
bt
test
pushf
lea
je
pushf
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
mov
and
pushf
or
movb
pushf
lea
jne
jmp
push
call
jb
ja
das
inc
add
sub
data16
lret
jbe
addr16
pop
ror
adc
push
outsb
sahf
in
xor
mov
xchg
sub
sub
inc
mov
add
int
test
movsb
mov
into
pushf
dec
dec
std
xor
out
inc
dec
ljmp
push
mov
adc
pop
adc
js
push
jl
mov
dec
xor
add
repz
pop
lea
shll
mov
jo
mov
not
lods
clc
test
bt
add
call
push
call
popf
rdpmc
mov
ds
pop
mov
addr16
jno
daa
add
xchg
in
movsl
fbld
mov
sti
hlt
push
dec
cwtl
dec
sub
mov
filds
arpl
inc
fs
sbbb
inc
rcrb
sub
push
popa
leave
imul
movsb
xchg
mov
arpl
dec
xchg
or
fcompl
shrb
aad
mov
mov
sarb
dec
shll
scas
loope
test
adc
sahf
push
cmp
add
nop
cmpsb
pop
scas
js
cmp
pop
nop
xchg
mov
movsb
sub
arpl
add
cmp
imul
push
les
insl
rorl
jbe
shll
xchg
sbb
sub
mov
in
jmp
lcall
fcoml
or
xchg
jmp
lret
and
test
push
jne
in
add
add
bound
add
aaa
mov
inc
push
xor
mov
and
jb
arpl
xchg
xchg
aaa
fistpll
int
pop
adc
in
and
mov
lods
repnz
inc
jae
out
cmp
lcall
and
push
sbb
addr16
jae
in
sub
sar
jmp
xorps
cmpsl
jne
push
sbb
mov
ret
mov
lret
push
dec
lcall
mov
sbbl
or
mov
lds
int
fwait
or
aaa
mov
movsl
dec
push
call
pop
inc
sahf
cmp
aaa
daa
or
icebp
iret
mov
cmp
cmp
fcompl
mov
push
mov
cli
add
mov
cwtl
add
test
mov
and
xor
lods
push
xchg
js
xchg
clc
out
fisubrs
pushf
fiadds
cmp
bound
mov
daa
in
fwait
mov
cli
pop
stos
aaa
adc
out
movsb
leave
push
out
fmuls
loop
mov
jl
sub
in
push
pop
inc
daa
mov
mov
cli
shll
mov
scas
mov
jmp
mov
or
pusha
lea
je
push
bswap
mov
call
push
call
movsl
xchg
mov
xchg
out
push
add
xchg
test
xor
xchg
bswap
pushl
popl
lahf
mov
pop
movl
cwtl
call
nop
adc
int
inc
add
rcl
int
pop
sub
jle
pop
fwait
or
jne
std
out
pushf
gs
xor
or
adc
jbe
in
mov
in
jg
jbe
push
dec
imul
mov
fidivs
mov
adc
insb
xor
dec
xchg
and
je
popa
push
lret
xor
cmp
aad
inc
arpl
mov
test
lea
call
stc
cmc
bt
sub
pusha
call
push
call
xchg
outsb
pushf
mov
or
push
fucomi
cwtl
mov
out
xor
cmp
inc
rcll
or
sbb
sbb
cs
adc
mov
bnd
lret
mov
bound
adc
sar
jo
stc
or
lret
mov
ss
into
ret
leave
flds
adc
xchg
and
fistpll
mov
adc
addr16
pusha
mov
imul
mov
bnd
aaa
popa
cmp
pusha
and
jle
cltd
shll
mov
fidivrs
bt
call
jno
mov
push
and
mov
sahf
call
sarl
daa
mov
jp
inc
sbb
loopne
cmpl
sub
cs
push
mov
lods
xchg
push
insb
fwait
popf
mov
mov
aad
sahf
sub
push
insl
pop
inc
jmp
xchg
ret
ljmp
cmp
movsb
rorb
pop
stos
mov
dec
mov
sbb
arpl
sub
adc
aaa
mov
inc
or
xchg
ljmp
jo,pt
call
inc
xchg
jge
jae
bswap
movl
setl
movsbw
lea
movb
pushl
movl
pusha
pushf
movl
movl
pushl
popl
push
pushf
movb
pushl
ret
pushl
lea
call
pushf
pushf
pusha
call
stc
stc
ror
pushf
pushf
dec
jmp
push
call
mov
loopne
push
push
call
or
xlat
subl
mov
add
add
movsl
in
movsb
dec
add
sub
jecxz
std
into
loop
call
pushf
cld
push
push
jns
rcr
add
test
sarb
sbb
ret
aad
js
cmp
daa
jg,pt
popa
pop
sbb
in
mov
sub
lock
lcall
xor
ds
and
out
push
push
imul
adc
das
in
sub
cwtl
mov
loope
jno
cltd
adc
scas
dec
adc
xor
pop
into
adc
or
add
cmpsb
sahf
mov
jns
add
push
push
push
mov
repnz
inc
pop
scas
frstor
psubsw
jno
decb
push
lea
jae
push
mov
pushf
lea
jmp
pushf
pusha
movb
mov
push
pushf
mov
lea
jmp
jne
lahf
pushf
mov
movb
push
pushf
lea
jmp
push
call
sbb
in
push
call
dec
jno
clc
mov
decl
rorb
and
test
sub
mov
and
cmc
cmp
mov
jmp
push
call
je
mov
xchg
popf
xchg
insb
xchg
xchg
cmp
jg
inc
or
push
fnstenv
gs
push
lods
mov
sub
pop
xor
movsl
sub
cmp
adc
lahf
lods
mov
testl
push
or
or
sarb
lret
ss
cmpsl
pop
cmpsb
jnp
out
adc
rcrl
mov
push
sbb
int3
rol
movsl
sbb
hlt
xor
lcall
cmp
cs
call
mov
mov
call
testl
mov
add
sub
push
call
rcrb
xlat
orb
and
ja
stc
clc
imul
cmc
cmp
add
pusha
pushl
lea
jmp
popf
loop
fbld
pop
scas
inc
pop
mov
in
mov
mov
mov
and
and
test
cli
insb
mov
movsb
inc
out
daa
movsl
pop
pop
push
pop
inc
push
pop
in
rolb
bound
mov
lds
outsl
cwtl
addb
push
push
or
cmp
imul
cmpsb
push
mov
add
aaa
mov
das
mov
shrb
pop
jle
in
mov
jbe
and
push
nop
mov
das
es
mov
aaa
mov
add
gs
outsb
imul
add
int
add
push
call
jo
pushw
fst
call
popa
push
push
push
call
iret
dec
movzwl
shl
rol
push
mov
pushf
add
clc
jmp
push
call
xlat
sahf
inc
push
call
pushf
mov
push
call
sub
addr16
call
outsl
pop
mov
pop
jle
lcall
arpl
push
mov
in
outsb
pop
cmp
push
enter
or
in
mul
inc
insb
daa
mov
add
lods
dec
ja
jae
cmp
adc
sbbb
pushf
mov
sbb
mov
mov
bound
xchg
mov
mov
cwtl
movsb
dec
iret
mov
mov
insl
inc
call
leave
addb
and
xor
arpl
out
out
out
push
cmp
shll
mov
ret
popa
in
std
sbb
cmp
and
stc
xor
lds
dec
popf
leave
dec
cwtl
jbe
data16
and
cltd
dec
pop
jns
xorb
scas
and
aam
sbb
scas
sbb
push
xchg
push
mov
jl
or
rorb
mov
out
push
dec
testl
mov
cbtw
jns
rcl
aaa
mov
mov
stc
ljmp
mov
dec
call
jge
notl
lds
xor
shrb
add
xchg
mov
xorl
sub
mov
in
into
popf
in
mov
xchg
or
shr
roll
xorb
les
and
cmpb
or
or
lret
and
jnp
enter
xor
adc
or
mov
movsl
aas
ljmp
adc
leave
lahf
shll
mov
les
popa
out
out
fcomi
mov
pop
dec
arpl
insb
imul
idivb
aam
hlt
jno
add
fs
add
nop
pusha
iret
movsl
stos
ret
bound
and
sbbb
dec
fs
aas
add
and
push
xlat
pusha
xchg
aaa
mov
std
mov
call
incl
fwait
push
mov
repnz
push
shrl
sarb
cmp
int3
mov
and
inc
hlt
stos
xchg
xchg
pop
cmp
aas
test
inc
lahf
call
pop
mov
scas
adc
ss
inc
inc
jnp
jge
out
in
out
fdivrp
pop
or
xor
mov
xor
stos
xchg
arpl
sub
lret
mov
and
xchg
insb
jp
push
aad
shll
mov
aaa
rcl
out
adc
cmpsb
jmp
sub
xchg
in
ret
push
ds
xchg
add
jmp
stc
cmp
aam
lahf
cmp
mov
sbb
ja
int
ja
repnz
loope
mov
icebp
nop
bound
addr16
fldz
jae
adc
add
and
inc
push
mov
shl
xor
shll
mov
rcrb
popa
call
sub
ret
hlt
mov
outsb
inc
push
xchg
out
popa
inc
out
add
sub
jecxz
sub
push
jp
adcb
ljmp
cmp
aaa
mov
std
out
ljmp
out
pop
mov
jne
shr
shr
cmc
mov
lea
bsf
not
sub
shl
shl
mov
cmc
sub
pusha
push
lea
jmp
push
call
push
test
dec
fcompl
add
pop
shll
std
into
nop
shr
imul
fs
push
call
iret
arpl
mov
lcall
xor
inc
movsl
jecxz
add
aas
daa
sub
jg
pushf
sbb
sbb
xor
cwtl
mull
fcompl
enter
xchg
mov
or
in
pop
or
lahf
push
push
xchg
mov
push
cmp
mov
push
in
loopne
jbe
fisttpl
add
imul
mov
clc
add
aaa
mov
std
jle
shr
dec
cmp
add
ret
xchg
push
call
decl
arpl
sahf
popa
in
add
add
mov
std
xor
call
and
pop
fsubrs
mov
call
arpl
dec
rcrb
movw
lea
call
pushf
push
pushl
pusha
mov
push
movb
pushf
lea
jmp
push
call
aas
adc
push
call
int3
push
call
stc
daa
std
sbb
jmp
cli
enter
sbb
push
sub
jp
popf
in
sahf
leave
xchg
sbb
or
jmp
sub
insb
fld
iret
test
xchg
cmpsl
outsl
jmp
jmp
push
inc
fists
add
lock
mov
sub
adc
adc
scas
sbb
mov
ljmp
das
pop
shll
cmp
xor
sbb
loop
sub
mov
xchg
pushf
push
lret
imul
push
in
and
out
jbe
inc
mov
icebp
ret
shll
mov
std
sbb
call
cvtdq2ps
push
call
mov
pop
popa
shrl
movsl
jbe
xor
or
xchg
mov
in
add
iret
imul
jmp
adc
jae
push
sbb
out
push
or
add
xchg
mov
inc
xor
cmp
pop
lds
inc
xlat
cmp
lret
out
mov
and
mov
fiaddl
pop
out
inc
insb
xor
in
data16
shufps
inc
mov
push
dec
sahf
jb
sti
pusha
xchg
and
cltd
stos
inc
faddp
pusha
adc
and
inc
scas
jno
adc
out
jae
cmp
add
movsb
call
or
ss
and
pop
movsl
popa
jno
mov
cmc
jnp
sbb
adc
cmpl
mov
aaa
mov
std
outsb
add
add
ss
pushf
lea
jg
lods
test
cmc
add
bt
stc
call
push
call
or
sub
push
call
imul
std
subb
dec
dec
call
mov
das
data16
cwtl
mov
mov
cmp
push
mov
in
aad
out
leave
or
lods
stos
add
push
xor
std
stos
dec
lods
ljmp
pop
mov
fdivrs
stc
cmp
fiadds
pusha
int3
pop
pop
push
jo
mov
cwtl
icebp
adc
lahf
shll
mov
sbb
sub
add
vpshaw
fistpll
or
or
imull
mov
push
xor
je
dec
xchg
xor
and
jl
repz
push
pop
xchg
sub
sbb
rol
push
jp
mov
out
addr16
push
test
xor
jge
stc
xor
clc
mov
cmpb
and
sti
popa
jle
gs
jle
testb
out
push
mov
shll
mov
xor
push
lea
jne
pushf
pop
bswap
lahf
movb
mov
lahf
pushf
setne
mov
lahf
lea
jmp
adc
rolb
dec
stos
or
punpckhdq
in
mov
sub
pop
mov
jmp
push
push
clc
dec
sahf
cmpl
mov
xchg
lret
push
push
movsl
push
insb
cmpsb
xchg
push
repnz
xor
ds
into
loope
mov
cmpsl
jecxz
sub
or
dec
sub
rorl
sub
jp
jecxz
lods
push
dec
imull
mov
int
movsl
and
stc
rclb
gs
sub
insl
mov
gs
aaa
shlb
gs
jo
outsb
dec
gs
js
add
push
lock
popf
cmp
add
std
pop
lahf
out
loop
add
shl
cltd
cmp
loope
dec
int3
outsb
pushf
pusha
jecxz
sbb
inc
push
add
dec
jp
outsl
xrelease
and
sub
xchg
bnd
lods
stc
push
sub
test
popa
mov
frstor
leave
mov
push
push
xchg
daa
in
mov
sub
aam
nop
popf
pop
mov
js
sahf
dec
dec
xchg
jge
test
xchg
das
inc
ljmp
xor
mov
mov
dec
les
mul
fisttpl
or
ret
imul
mov
les
mov
jb
sbb
pop
mov
aad
xchg
in
mov
and
sbb
outsl
and
push
add
inc
and
sbb
mov
addl
xchg
addb
popa
sbb
or
xor
ret
sahf
pop
lret
ljmp
push
xchg
add
insb
and
mov
sar
mov
mov
xchg
dec
add
dec
sbbl
add
lods
lods
sub
aaa
ret
cli
or
push
test
sub
sbb
leave
ljmp
sbb
mov
pushf
mov
push
stos
inc
hlt
cmp
or
fisttpll
loop
cs
or
sub
dec
or
leave
jmp
in
lcall
xchg
xchg
and
loope
pusha
daa
or
dec
push
inc
mov
into
mov
in
lret
fisttpl
cmp
or
mov
push
mov
cmp
sub
inc
or
mov
sbb
pop
push
sub
pop
adc
and
inc
dec
or
jno
stos
adc
prefetch
adc
and
push
sub
or
inc
imul
stos
inc
jmp
mov
aad
sub
inc
ljmp
inc
mov
cmp
pushf
cmp
cltd
dec
push
xchg
xchg
adc
imul
pop
adc
xchg
or
and
mov
ret
push
xchg
or
push
inc
xchg
sub
and
andl
xchg
add
or
test
pop
pop
insb
or
pop
or
nop
sub
andl
loop
and
loope
adc
mov
test
arpl
ds
sbb
and
mov
or
and
and
imul
pop
hlt
in
adc
mov
mov
sub
rclb
or
in
addb
lcall
or
aam
mov
jbe
sbb
cwtl
aaa
not
adc
sbb
negl
inc
pop
movsl
mov
mov
shlb
xchg
mov
push
sbb
add
popa
cmp
adc
js
push
inc
xor
add
or
sbb
and
arpl
mov
dec
iret
das
das
cltd
hlt
ljmp
in
repnz
fnstcw
stos
dec
cmp
in
loopne
add
pop
jecxz
mov
and
sbb
push
lea
cmpsb
cltd
mov
dec
xchg
xchg
das
sub
dec
adc
or
sub
mov
mov
push
sbb
xor
or
mov
call
mov
enter
xchg
das
inc
psubusb
fwait
adc
sub
iret
xchg
rcrb
das
sub
mov
or
mov
mov
mov
pushf
cwtl
mov
push
leave
pop
repnz
iret
push
inc
xchg
pushf
sahf
sbb
adc
push
jl
sbb
das
icebp
scas
sbb
mov
fisubs
cmp
sub
mov
mov
in
adc
pop
sbb
pop
sahf
in
mov
ret
sbb
xchg
pop
test
mov
adc
cmp
jmp
dec
out
xchg
inc
mov
std
adc
cmp
cmp
in
pmuludq
stc
fs
xchg
imul
cmp
dec
rorl
repnz
test
mov
cltd
es
xchg
or
sbb
xchg
popa
das
cmpsl
andnps
mov
enter
pop
sbb
adc
cwtl
pop
inc
mov
in
adc
sbb
pop
push
std
xchg
push
setns
dec
or
iret
faddl
xor
outsl
ja
in
push
add
mov
sbb
mov
push
xchg
push
xchg
adc
cmp
cmp
jg
pop
daa
add
pushf
gs
aad
mov
mov
enter
pop
rcll
inc
xchg
or
enter
inc
cmpsb
xchg
cli
mov
xchg
mov
aam
dec
iret
adc
mov
dec
mov
xchg
shl
adc
cmc
adc
iret
cmpsl
test
push
cmc
push
pop
leave
jne
popa
jae
or
xor
nop
mov
and
pop
inc
add
and
call
or
mov
xchg
xchg
popa
mov
add
push
add
xchg
mov
fdivr
cmpsl
test
pop
or
leave
pop
pop
out
jmp
mov
mov
or
jecxz
or
pushf
lds
pusha
mov
mov
mov
xchg
dec
sub
or
repz
pushf
pop
dec
or
cmpsl
dec
adc
mov
jne
adc
or
daa
stos
clc
or
lods
imul
cmp
mov
out
sbb
cltd
jp
jp
jp
jp
jp
jp
jp
pop
stos
mov
inc
lods
mov
jne
push
push
cmp
pop
pop
dec
test
mov
dec
gs
cwtl
fwait
or
insl
push
enter
mov
mov
mov
pushf
sub
dec
and
addr16
lods
mov
mov
mov
insb
icebp
lea
add
jns
outsl
mov
or
adc
push
stc
aaa
enter
lock
arpl
dec
push
ficoml
hlt
popf
mov
fs
mov
sbb
adc
adc
clc
aad
das
or
popf
sbb
mov
sahf
jge
or
sbb
or
stos
or
inc
xchg
inc
stos
xorl
jge
mov
jo
stos
fisttps
je
dec
outsb
sbb
insl
xchg
sub
sahf
xchg
sbb
or
test
fldcw
inc
dec
in
enter
xor
clc
jg
lds
sub
hlt
aas
adc
xchg
xchg
xchg
clc
fadd
and
cmpl
jnp
xor
hlt
in
pop
jp
mov
js
cmp
mov
and
shll
scas
imul
jns
cld
mov
pop
sub
mov
icebp
ja
and
mov
loope
leave
xchg
aad
jmp
ficoml
add
xchg
sbb
jnp
test
adc
adc
sbb
cltd
jns
pop
dec
sub
adc
pop
mov
xchg
stos
jo
iret
xchg
mov
mov
xchg
pop
or
imul
lods
push
push
js
pop
lahf
lret
fdiv
mov
xlat
ds
movlps
inc
aas
fs
out
shlb
sub
add
mov
adc
and
and
sub
sub
mov
or
in
push
inc
and
mov
roll
arpl
lret
mov
or
inc
out
aam
push
stos
orl
cmp
shll
adc
sbbb
call
inc
movl
sbb
add
in
int
stos
inc
test
sahf
or
sarl
rcll
jmp
push
js
mov
or
jle
fsubs
xchg
add
int
cmpb
adc
push
push
or
xchg
xchg
mov
mov
or
in
inc
les
or
adc
mov
or
movsb
inc
or
out
cmp
adc
shlb
xor
jo
add
out
mov
and
add
fs
dec
and
and
and
insb
stos
outsb
cmp
loope
or
and
sbb
sahf
push
pop
into
lea
sti
cwtl
das
nop
das
fisubrl
adc
js
push
cwtl
xchg
or
mov
xlat
sbb
es
xchg
xor
scas
xchg
adc
repz
and
cmp
sub
lret
loope
ret
fmull
scas
faddp
dec
dec
push
xor
jno
sbb
mov
ss
pop
iret
pop
cwtl
out
lea
xchg
cwtl
fists
pop
jecxz
sub
mov
add
mov
adc
xchg
xor
roll
repz
push
xchg
aas
adc
nop
xchg
testl
idivl
xlat
or
je
pop
aaa
mulb
mov
mov
sub
add
and
cmovo
sub
in
pop
add
rcll
lcall
lret
mov
ret
and
sbb
pop
adc
dec
loop
loopne
jp
arpl
pop
movsl
rclb
mov
fimull
or
dec
ret
ss
scas
pop
stc
pushf
jmp
sub
sbb
lahf
add
cmp
mov
mov
cs
xchg
ja
jecxz
xor
mov
bound
lret
movsb
andl
xchg
pop
cs
pop
xchg
or
negb
lds
fcoms
mov
dec
cltd
or
xchg
cmc
xor
sbb
cmp
daa
jmp
stos
test
das
into
xor
ror
jb
jecxz
lcall
bound
adc
sbb
int
jb
lea
pop
cmp
add
adc
adc
popa
adc
xchg
cmp
in
and
sahf
xchg
test
xchg
pop
out
test
xchg
movsl
add
lods
mov
sbb
add
and
dec
xchg
cwtl
push
xchg
pop
xchg
es
iret
or
inc
mov
cltd
jnp
sub
or
inc
mov
sbb
test
adc
pop
push
dec
dec
adc
out
pop
push
dec
mov
int3
loope
in
arpl
push
imull
int3
push
cltd
cli
push
ds
lock
and
xor
jne
repz
jbe
or
xor
push
mov
adc
lcall
adc
pop
mov
rorb
outsb
jge
lods
sub
fcmovnu
adcb
cld
movsl
mov
push
push
sbb
mov
jmp
stos
dec
mov
jp
sti
dec
xchg
jmp
movsl
mov
insb
mov
or
hlt
shl
or
mov
xchg
bound
lcall
inc
clc
push
mov
test
sbb
adc
lcall
adc
push
xchg
pop
pop
lcall
int
ret
lock
xor
mov
shll
lret
ror
mov
popf
and
xchg
mov
cmpsl
sbb
or
or
lcall
repnz
adc
aad
xor
inc
mov
imull
rcl
mov
sub
pop
xchg
push
test
and
adc
sbb
in
mov
fwait
push
test
rcl
jge
jns
and
mov
pop
pop
js
push
or
lods
mov
jne
stos
dec
sahf
stos
int
movsl
pop
dec
pop
sarb
dec
mov
movsl
std
jg
rcll
pop
cwtl
push
repz
jle
lcall
repnz
push
pop
mov
shll
mov
lret
mov
ret
push
into
lret
dec
pop
into
lret
or
mov
mov
pushf
sub
iret
ds
outsb
push
or
mov
xor
mov
pop
shlb
loopne
loopne,pn
mov
cmpsl
jne
adc
push
mov
jecxz
jmp
jne
mov
jb
hlt
aaa
xlat
shl
pop
mov
movl
outsb
fisttpll
jne
push
sub
xchg
inc
movsl
push
mov
xor
orb
or
inc
lods
sub
cmp
jnp
pop
adc
cmp
dec
jp
mov
mov
scas
iret
shl
dec
or
test
ret
in
mov
out
push
mov
sub
dec
nop
lahf
arpl
dec
sub
pop
push
sahf
dec
mov
popf
dec
lret
ljmp
aad
xchg
fwait
dec
cmp
dec
imul
dec
stos
xchg
cltd
lret
cmp
dec
jmp
cwtl
aad
xchg
sbb
xchg
dec
dec
mov
adc
dec
mov
dec
int3
mov
dec
or
xchg
dec
dec
mov
adc
xchg
dec
lea
dec
int
adc
in
cmp
dec
push
xchg
adc
cmp
adc
mov
mov
out
xchg
or
cmp
dec
dec
push
test
cmp
adc
cmp
dec
cmpsl
xchg
out
daa
cmp
dec
cmpsb
mov
adc
cmp
dec
movsl
xchg
jo
cmp
adc
rorb
xchg
lock
xchg
mov
notb
aaa
push
ja
xchg
mov
sbb
pop
js
dec
mov
pop
sbb
or
dec
jmp
imul
stos
sbb
sub
int3
push
cmp
mov
adc
ja
lret
inc
js
jno
and
lods
outsl
mov
or
mov
iret
dec
int
lret
into
adc
scas
ss
out
das
lds
mov
xchg
ja
pop
pop
or
divl
lea
lods
int
push
cs
outsb
add
cltd
mov
dec
and
jb
adc
aam
lcall
and
dec
mov
or
dec
pusha
or
stos
or
push
or
sbb
ljmp
inc
dec
dec
adc
cmpsb
in
pop
sub
imul
push
lock
push
arpl
outsl
out
and
aam
dec
ds
push
mov
or
lock
mov
cs
and
or
or
lea
or
stos
sub
int3
sbb
mov
mov
or
insl
push
dec
jge
lods
mov
fisttps
in
mov
dec
push
aas
dec
cs
sbb
sarb
dec
push
outsb
or
cmovp
sbb
push
scas
hlt
lock
subb
dec
or
sbb
mov
or
push
mov
xchg
shlb
cs
lods
cmpsb
lock
dec
sub
jp
das
sbb
push
push
dec
or
mov
out
and
push
dec
lock
xchg
fcmove
sub
dec
mov
or
or
outsb
cmp
pushf
xchg
sub
wrmsr
sbb
fcoms
jo
or
nop
sbb
or
outsl
dec
shlb
fwait
rorb
out
mov
mov
sbb
push
dec
lods
popf
dec
mov
outsb
dec
push
push
lods
dec
pop
jno
mov
cmovp
sbb
shll
lock
inc
xor
jb
push
subb
dec
jb
or
in
lods
int
inc
ljmp
sbb
fwait
pop
mov
dec
dec
or
repnz
pusha
sub
mov
repnz
mov
dec
dec
jle
push
mov
daa
mov
push
sbb
or
jae
or
or
mov
rcll
or
lods
lods
sbb
sub
sbb
arpl
dec
cli
jbe
xor
xchg
test
push
lea
je
xchg
push
dec
mov
lret
lret
adc
dec
imul
sbb
dec
lea
dec
aam
sub
sub
xchg
push
push
das
in
dec
sbb
pusha
setno
dec
lock
mov
dec
aad
dec
das
cmc
lds
mov
jnp
sub
aam
mov
mov
push
sbb
inc
dec
xchg
mov
jmp
dec
in
mov
rcll
jb
dec
pop
idivb
xlat
pop
adc
aaa
pushf
dec
mov
push
rorb
mov
ja
das
xchg
sbb
sub
inc
dec
push
aad
ljmp
das
sbb
or
cmp
sub
arpl
dec
sub
sbb
lret
or
jecxz
arpl
int3
jns
xor
out
dec
sahf
mov
into
stos
iret
lods
xchg
lock
movsb
aas
dec
inc
cltd
adc
sbb
inc
mov
cmp
dec
stc
add
stos
mov
mov
lcall
dec
dec
xchg
or
or
xchg
dec
outsb
mov
dec
dec
cmp
xchg
dec
sub
push
dec
lods
xor
insl
cs
xchg
das
pop
dec
mov
sbb
lret
das
push
dec
sub
dec
imul
jnp
fwait
push
dec
insl
fimull
or
or
fistl
sbb
cmp
push
push
dec
dec
pop
dec
jl
sub
icebp
jo
cmp
pushf
sbb
hlt
out
dec
xor
int
iret
xchg
mov
and
cltd
dec
lods
cli
sbb
and
xor
sbb
lods
insl
dec
and
adc
push
pop
sbb
jge
lret
outsl
lret
cmpsb
insl
bsr
dec
dec
mov
pop
dec
std
lret
mov
lret
push
dec
mov
sbb
sbb
push
dec
jle
repnz
dec
and
xchg
sub
fimuls
shl
mov
dec
sub
cs
pusha
stos
lea
sbb
aam
dec
and
sbb
push
push
dec
mov
lret
pop
lahf
lods
dec
and
icebp
outsl
lock
sbb
fistps
incl
out
arpl
loop
testb
cmpsb
lea
andb
sub
mov
mov
sbb
out
fisttpll
xor
and
cmpsb
movd
insl
adc
stos
dec
sub
adc
lods
mov
insl
dec
in
inc
sbb
cmp
inc
mov
push
pusha
in
mov
rcrl
mov
outsb
outsl
cmp
xor
gs
dec
add
pop
inc
lret
in
lods
pushf
lock
bound
add
mov
test
sub
dec
and
inc
mov
arpl
sbb
dec
or
in
outsl
dec
mov
mov
mov
scas
mov
stos
outsl
decl
fs
adc
lds
pusha
stos
xor
les
xor
lock
push
dec
aad
dec
ds
sbb
dec
jo
or
dec
and
cmp
imul
std
rcrb
mov
push
push
push
sbb
mov
ficoml
insl
test
pushf
stos
dec
dec
and
movsl
popa
adc
fldln2
xchg
sub
mov
jle
dec
cmp
push
dec
xlat
add
or
inc
adc
data16
pop
dec
outsb
in
sbb
pop
xchg
arpl
pop
fimuls
out
lret
lret
daa
or
stos
lods
dec
ret
ja
dec
xchg
lock
lods
cmpsl
sbb
sbb
mov
fwait
nop
stos
das
xlat
sub
mov
mov
adc
outsb
push
mov
test
mov
cmovp
lods
cmpsb
lock
lods
enter
dec
dec
jb
pusha
push
sub
xchg
das
dec
or
bound
sbb
dec
push
dec
and
arpl
or
or
lea
imul
sub
mov
adc
rcll
and
xchg
out
out
outsb
sysexit
lods
lock
xchg
dec
adc
stos
push
leave
cwtl
test
jmp
in
je
dec
and
dec
inc
inc
cmp
orl
dec
dec
cmp
or
sub
dec
stos
sub
dec
shl
mov
dec
bound
mov
ljmp
or
sub
dec
jle
push
scas
stos
or
sub
ds
xchg
mov
dec
or
gs
sub
pop
out
dec
xor
add
dec
xor
out
dec
mov
into
decb
iret
lahf
lock
int3
xchg
cmp
dec
mov
adc
dec
xchg
adc
sub
loop
sub
cs
or
or
outsb
mov
arpl
mov
dec
loop
xor
dec
xor
pop
das
dec
inc
out
dec
mov
paddsb
cmp
and
xchg
imull
movsb
dec
fildll
movzbl
dec
push
into
cmp
mov
stos
fisttpl
push
inc
insb
mov
ljmp
sbb
and
out
dec
insl
outsb
nop
fisubrs
adc
iret
lods
out
pop
sub
dec
xor
mov
insl
dec
pusha
dec
sub
mov
or
jo
sbb
dec
cmp
test
outsb
mov
lahf
mov
icebp
dec
mov
mov
movsbl
adc
mov
dec
jne
outsb
lock
cmp
mov
mov
rorl
mov
icebp
mov
push
cmp
mov
xor
decb
jb
pop
nopl
cmp
or
mov
mov
dec
dec
dec
repnz
dec
push
push
mov
rclb
sub
dec
lock
in
daa
mov
dec
lods
cs
add
and
lea
or
xchg
mov
jnp
and
xor
scas
mov
xchg
push
insl
xor
rcll
lods
outsb
jae
sbb
in
dec
jmp
cld
rcl
fwait
adc
stos
dec
mov
sbb
push
sbb
out
stos
lock
insl
imul
sub
stos
imulb
or
lret
cwtl
jbe
xchg
in
or
stos
xchg
imul
mov
lret
mov
popf
out
xchg
cld
inc
bound
xor
inc
dec
add
sbb
mov
sarl
fcmove
add
roll
adc
outsl
dec
insl
cwtl
jmp
dec
bswap
inc
xchg
dec
fisubrl
pop
iret
or
mov
cmp
sub
mov
mov
in
dec
jnp
sbb
stos
por
ljmp
inc
insb
push
or
dec
out
mov
sub
popf
inc
iret
jmp
jp
or
push
out
sbb
mov
push
xor
push
lret
nop
jnp
sub
or
push
mov
or
push
lea
dec
mov
push
adc
dec
test
sub
xlat
jl
out
mov
cmpsl
xchg
push
dec
lods
or
gs
lcall
and
dec
xor
lret
scas
push
lcall
push
sub
sbb
jle
push
nop
fldt
stos
and
scas
mov
cwtl
adc
cmpsl
push
dec
fwait
jns
insb
cld
push
lret
or
pop
loop
adc
push
lds
mov
inc
xor
out
mov
push
or
dec
lret
dec
out
mov
ss
mov
or
es
adc
adc
daa
pop
adc
push
jo
pop
lock
loope
out
mov
call
cltd
cmpsl
ljmp
jmp
or
pop
and
mov
imul
sbb
pop
stos
lret
dec
lret
and
mov
jl
sbb
lods
lods
inc
or
movsb
out
pop
pmulhw
dec
movsb
loopne
sahf
iret
or
loop
cs
sbb
aam
fsts
rorb
and
adc
and
cltd
sbb
xchg
dec
pop
dec
cmovl
mov
out
xor
mov
test
pop
nopl
cmpsb
cli
xchg
sahf
dec
fsts
mov
sub
mov
push
inc
adc
xchg
lods
mov
psubsb
scas
sub
xor
pop
int
adc
cmp
ud2
sbb
sbb
arpl
scas
lods
jne
into
xchg
xchg
push
lcall
pop
dec
adc
dec
xor
push
xchg
and
bound
fnsave
popf
xor
mov
mov
mov
insl
out
and
or
outsl
daa
lret
dec
pop
inc
push
test
cmc
cmp
cmpsb
ss
dec
leave
adc
pop
push
daa
insl
sub
jp
sub
or
push
dec
mov
cs
push
scas
sbb
and
push
inc
sbb
mov
push
pop
stos
movsl
cmpsb
mov
dec
mov
push
mov
or
int3
mov
fwait
scas
or
mov
push
jmp
mov
dec
mov
cwtl
movsb
inc
mov
sub
cmp
movsb
xchg
ficoms
aaa
xor
sbb
jne
int3
dec
mov
sbb
dec
adc
mov
xor
xor
cs
mov
in
ret
lock
addr16
adc
in
push
adc
cmp
out
fwait
sbb
or
lods
sbb
mov
imul
sub
cmp
adc
dec
popa
sbb
sahf
movsb
push
imul
das
dec
bt
movsb
aaa
pushf
stos
aad
push
xchg
mov
insl
or
sbb
loop
int
or
dec
fs
subl
pusha
xchg
sub
in
sub
and
imull
dec
insb
outsl
insb
dec
repz
mov
push
sub
dec
mov
mov
push
lcall
sub
pop
pop
pop
jecxz
andl
dec
stos
mov
sub
sbb
and
out
xlat
insb
push
ss
stos
sub
arpl
shrl
mov
mov
mov
lock
and
mov
js
dec
iret
cwtl
mov
scas
insb
and
mov
mov
cmovnp
push
mov
jg
xor
and
lahf
mov
dec
cmp
lea
pop
mov
cs
ror
rcll
imul
sub
lods
sbb
pusha
pop
adc
loopne
adc
imul
clc
sub
and
mov
sbb
sbb
cmp
inc
pop
ss
push
jmp
and
cwtl
pop
sarb
pushf
in
dec
cltd
adc
pop
xchg
shll
cs
outsl
loop
mov
cmp
sbb
mov
jo
int
add
fisttps
xlat
sub
or
test
popa
pop
leave
push
movsl
fistpl
stc
test
dec
ficompl
lea
lods
insl
stos
mov
push
xor
sub
in
push
int3
mov
jp
sub
inc
sub
mov
fstp
iret
xchg
jno
je
outsb
xchg
mov
cmp
in
imul
mov
adc
mov
mov
dec
sub
insb
cmovl
and
ja
cmp
mov
adc
pusha
dec
push
mov
xchg
shrb
mov
sbb
cmp
lock
sbb
fs
xchg
iret
push
xor
push
lcall
adc
sahf
dec
push
and
seta
andps
xchg
sbb
mov
shrb
dec
cs
sbb
pushf
data16
cmp
lret
loopne
insl
mov
xor
inc
pop
shlb
call
insb
popa
mov
push
cwtl
xchg
aad
pop
stos
cmpsb
jmp
xchg
lret
pop
fsubrs
test
jnp
sub
jb
or
pop
cmp
push
pop
and
mov
imul
inc
pmaxub
scas
cmp
mov
cwtl
pop
iret
pop
fwait
or
insb
push
ljmp
mov
pushf
push
fcomps
push
pusha
pop
or
std
add
lahf
out
shlb
xchg
in
fwait
lods
inc
push
sahf
xchg
xchg
mov
imul
pop
adc
pusha
lahf
and
pop
xchg
gs
sbb
and
sbb
xchg
stos
pop
adc
iret
popa
lea
repz
dec
and
xchg
adc
sarl
sub
push
pop
popf
cwtl
xchg
jecxz,pn
fcoml
jno
cmp
sbb
jp
xor
nop
xchg
aad
pop
xchg
fisubrs
adc
test
sbb
push
dec
cwtl
or
pop
jp
add
andps
pop
movsl
inc
fcomps
xchg
fsubrs
jae
dec
pop
pop
or
mov
xchg
loop
and
adc
sbb
adc
adc
push
pushf
cmp
movsb
sub
mov
dec
arpl
fmull
jmp
pop
sbb
movsb
dec
sbb
cld
push
mov
imul
lahf
adc
addr16
lret
dec
pop
popf
and
out
ja
sahf
mov
cmp
sbb
out
scas
ficomps
sbb
mov
cld
adc
scas
sbb
cmp
dec
dec
pop
add
cs
in
sahf
lea
out
sbb
fisttps
scas
push
mov
arpl
add
enter
xchg
mulps
int
sub
lret
cmp
or
pop
lret
and
pop
pop
fs
fcomps
inc
sahf
lods
popf
mov
int3
pushf
sub
ficoml
xchg
insb
sub
stos
and
mov
out
pop
mov
sahf
mov
mov
int3
mov
push
sahf
or
popf
xor
mov
stos
push
sub
fcmovne
dec
lea
dec
dec
push
and
gs
in
pusha
mov
insl
aad
scas
sbb
mov
and
bound
sub
ret
dec
push
flds
xor
cmp
adc
sub
push
repnz
xchg
pop
sub
test
int
into
lret
add
inc
sbbb
jge
nop
dec
stos
outsb
adc
mov
nop
pop
adc
cmpsb
mov
popf
mov
mov
pop
adc
mov
pop
push
cmpsb
pop
dec
mov
or
pop
push
sbb
sbb
sbb
jb
adc
bound
lret
xchg
insb
inc
pop
fstps
mov
sbb
iret
sbb
mov
xor
ss
mov
push
jnp
jae
inc
insb
sub
mov
dec
fcoml
sub
rorb
push
out
mov
pop
cmp
gs
jo
mov
lret
cmp
minps
push
xlat
or
push
shrl
xchg
sbb
xor
ss
xchg
adc
pop
loop
xchg
sbb
fstpl
lahf
into
pop
imul
insb
stos
in
in
imul
cmp
pop
lret
dec
mov
dec
xor
ljmp
push
fcmovnu
pusha
pavgb
jo
stos
cwtl
mov
pop
or
mov
lods
mov
push
into
out
sbb
bound
inc
pop
sub
sub
bound
mov
add
lods
scas
pusha
and
mov
adc
fistl
loop
scas
lods
jg
dec
lahf
pop
stos
mov
push
push
or
dec
xchg
mov
jl
cmc
popf
xlat
pop
out
and
pop
dec
and
cmpsb
nop
or
lcall
popa
push
sub
pop
in
fmuls
nop
icebp
pmaxsw
mov
insb
push
xchg
bound
movsb
movsb
pusha
cmp
dec
push
sahf
and
mov
adc
fimull
or
inc
pop
stos
pusha
hlt
fwait
in
rcrl
les
cmp
lcall
mov
jecxz
dec
pop
push
xor
stos
and
push
or
sbb
lods
sbb
addr16
cmp
andb
sbb
lret
adc
sub
dec
mov
outsb
adc
ret
adc
pop
out
pop
lcall
sub
or
pop
push
lahf
das
ficompl
ss
rorb
pop
loopne
pusha
shlb
sbb
fdivr
xor
popa
addr16
or
and
dec
pandn
pusha
lahf
mov
lock
jb
int3
adc
dec
fs
xchg
cwtl
xchg
nop
out
or
fsubs
pop
push
push
sbb
xchg
mov
mov
xchg
mov
push
lods
mov
push
sub
xchg
xchg
lahf
popl
mov
lret
push
push
insb
mov
push
mov
loope
dec
lods
test
rorl
fs
call
cmp
sub
or
pop
xchg
cs
mov
mov
jb
sub
sbb
das
dec
xchg
rcll
int
or
cmpsl
mov
lret
xchg
mov
loopne
xchg
pop
mov
int
aad
mov
dec
fistps
add
push
out
cmpsb
mov
das
push
adc
push
sbb
xor
mov
rcrb
pop
xlat
lret
and
pop
lahf
and
dec
xchg
jbe
sbb
lret
inc
dec
or
mov
es
std
jg
popf
push
jmp
into
xchg
lahf
mov
nop
adc
mov
bound
aaa
shrb
pop
dec
shlb
scas
dec
or
lcall
jo
sub
pop
out
rcll
aas
fstpt
loope
xchg
adc
jb
dec
xchg
or
pusha
setnp
sbb
inc
adc
or
cmpsl
push
mov
jb
or
mov
imul
or
sub
adc
lea
push
loop
rorl
sbb
xor
dec
popa
lods
or
popf
mov
imul
sub
cltd
mov
nop
cmpsl
cs
scas
ficoml
and
cmpsl
stos
sub
jmpw
sbb
fsubrl
inc
lods
pop
shrl
adc
lcall
into
or
push
in
push
outsb
in
dec
push
pop
mov
xor
into
lret
call
and
sub
dec
outsl
sub
push
cltd
pusha
insl
push
dec
jb
call
pop
fwait
or
lret
mov
sub
ficoml
ror
adc
and
ret
dec
mov
xor
cmp
jmp
or
outsl
mov
loop
fisubrs
adc
mov
lods
iret
adc
lea
ja
add
stos
pushf
popf
sub
mov
out
out
adc
xor
into
mov
fisubrs
push
adc
adc
cmp
lods
lcall
sbb
inc
xchg
ljmp
xchg
push
mov
sbb
imul
cmp
sbb
or
shlb
dec
int3
dec
cmpsl
loopne
pushf
adc
lcall
pushf
inc
xor
push
iret
xchg
or
mov
lods
in
push
sbb
and
sbb
xor
xor
fistpll
popf
fs
xor
jne
sub
sbb
mov
imul
loopne
jl
mov
adc
sub
mov
scas
sub
xchg
adc
xchg
lret
movsb
enter
pop
mov
bound
arpl
insb
shrl
nop
jmp
int3
hlt
dec
pop
imul
push
loopne
orb
lods
sbbl
dec
xchg
mov
push
cmpsb
loope
xchg
insl
ret
xchg
lods
add
push
stos
sub
mov
lods
bswap
movsb
in
into
dec
xchg
or
pushf
xchg
shr
or
ficoml
pusha
sbb
cmpsb
dec
mov
inc
dec
jecxz
mov
sahf
aaa
sub
add
cmp
inc
mov
mov
mov
mov
sub
xchg
pushf
sbb
jmp
mov
push
pop
movsb
lea
sub
int
shrl
test
mov
sub
mov
or
mov
js
inc
sbb
push
setns
aas
mov
sbb
arpl
pop
xchg
mov
push
arpl
shrb
xchg
and
dec
inc
into
push
sahf
mov
ficomps
call
and
sbb
push
pop
es
outsb
cld
mov
fdivs
or
jae
pusha
int3
cmp
dec
mov
push
adc
imul
addr16
push
scas
mov
in
and
pop
sbb
cs
push
bound
push
imul
scas
fldcw
sahf
push
int
adc
mov
and
sub
pushf
shlb
push
mov
ds
mov
or
insb
out
loope
sbb
mov
pushf
xor
jmp
stos
in
out
int3
dec
fcomps
xchg
ret
cwtl
mov
push
out
adc
out
sbb
fidivs
lahf
pop
adc
dec
stos
nop
outsl
pop
mov
sbb
shlb
sbb
mov
iret
or
into
int
dec
inc
in
insb
adc
push
and
pop
cld
push
sahf
loop
leave
push
mov
inc
data16
mov
inc
xchg
sub
xchg
movsb
or
dec
dec
fcompl
jb
pop
inc
test
pushf
dec
imul
jnp
iret
and
shrd
dec
dec
adc
mov
movsb
mov
movsb
mov
stos
jp
outsb
out
push
lret
bound
lea
out
out
push
sbb
cwtl
nop
mov
in
mov
mov
in
iret
mov
mov
imul
xchg
lret
adc
rclb
and
pop
fwait
jno
push
inc
aam
jb
test
sub
sub
pusha
cmpsl
inc
scas
push
sbb
rcll
mov
cld
shlb
pop
cltd
mov
mov
out
rolb
xchg
in
loop
das
fmull
into
or
push
pmulhw
movsl
cmp
fdivs
xor
daa
in
and
and
scas
or
shll
ja
mov
and
cltd
lods
fstl
loopne
lds
sub
sub
int3
mov
and
mov
xchg
mov
pop
icebp
dec
adc
sbb
fimuls
aad
pop
in
jae
add
in
sahf
sbb
enter
int
xchg
bound
xchg
fsubs
sbb
dec
xchg
inc
sbb
int
scas
sub
pop
mov
mov
loope
add
lcall
into
pop
xchg
xchg
dec
sahf
dec
pop
rcrb
popa
lods
push
push
mov
out
outsb
and
ja
stos
push
mov
out
mov
xchg
imul
popf
adc
mov
and
or
pop
xlat
mov
sbb
pop
sbb
std
out
or
adc
and
dec
sub
sbb
lahf
and
cmp
or
push
mov
dec
jae
or
lcall
push
dec
xchg
lea
into
scas
daa
rcrb
arpl
fs
adc
sbb
push
mov
insb
adc
xchg
out
lahf
imul
lret
sbb
setns
push
add
int
stos
or
stos
movsb
mov
insb
lea
int
out
dec
jge
mov
int3
mov
push
push
lret
lret
pop
inc
push
adc
sbb
sbb
scas
in
jp
or
xchg
sarb
push
mov
jge
sbb
sub
sub
gs
mov
sub
sahf
sub
stos
pop
push
or
adc
sub
add
loopne
fnstenv
insb
lods
lret
push
mov
or
imul
ret
or
outsb
mov
mov
lea
xor
data16
hlt
sbb
push
lods
cmpsb
lock
or
lret
ficompl
pushf
mov
lret
lret
sub
and
popa
in
xchg
xor
xor
sub
data16
mov
mov
xlat
mov
mov
add
cs
jg
jb
push
xor
loop
mov
mov
out
stos
pop
scas
mov
cmp
ja
push
lock
mov
sahf
xchg
or
push
and
in
and
ja
xchg
outsb
xor
scas
dec
insb
adc
dec
stos
scas
stos
test
ficoml
ret
pushf
nop
mov
ror
mov
mov
xchg
dec
xchg
mov
mov
sub
movsb
adc
xlat
or
lret
push
mov
lcall
lock
pop
sub
ds
loop
scas
and
sbb
adc
in
lret
sbb
jnp
or
in
pop
mov
xchg
fs
push
and
lret
stos
sub
and
lret
nop
addr16
push
test
movsl
push
lret
stos
outsb
dec
push
or
hlt
adc
shll
decl
iret
dec
lock
pop
or
hlt
lods
mov
fwait
pop
or
adc
dec
in
arpl
and
sub
mov
mov
sub
push
lret
test
aas
push
dec
xchg
pop
adc
cs
adcb
leave
sub
lret
mov
dec
mov
dec
or
outsb
ret
lods
shrb
or
mov
out
imul
sub
stos
insl
push
adc
xchg
mov
mov
stos
out
cmpsb
xor
ret
cs
loopne
push
lret
dec
clc
xchg
cltd
pop
rclb
pop
movsb
andl
mov
lret
out
fs
int
or
mov
mov
dec
push
mov
fstps
push
xor
outsl
push
mov
lock
out
sub
pop
sbb
stos
adc
mov
mov
outsb
out
adc
push
lods
scas
push
sub
lret
std
dec
ds
jb
shrl
mov
xchg
push
out
cltd
dec
mov
mov
stos
jb
sub
lock
jae
dec
lret
int
das
mov
push
movsl
cwtl
pop
lcall
xor
fmul
stos
fnstenv
dec
nop
stos
xchg
stos
dec
fcoml
jnp
data16
cwtl
stos
push
sub
es
iret
fcoms
rorb
lret
sub
lock
adc
lret
pop
cmp
ss
lret
pop
mov
pop
pop
out
mov
or
lret
sti
jmp
repz
outsb
mov
adc
fwait
mov
fcomps
mov
aas
rcrb
arpl
lret
mov
das
je
loopne
lret
repz
dec
lcall
cmpsl
gs
sbb
shl
mov
imul
sub
xchg
lret
test
mov
dec
cmpsl
cs
dec
std
lea
iret
outsb
fstl
sub
dec
lret
loopne
xor
xchg
sar
mov
pusha
ljmp
lcall
repz
cmp
insb
outsw
in
nop
stos
pop
lcall
add
pop
aaa
data16
dec
pop
imul
lret
ja
test
sub
adc
fstpl
mov
sub
movsb
and
or
cmpsb
decb
lret
int
imul
dec
jmp
push
push
push
xchg
dec
inc
iret
out
dec
adc
movsb
mov
pop
mov
pop
pop
jmp
pop
scas
pop
pop
movsb
ror
outsl
push
fmull
adc
insb
mov
fs
xchg
jo
or
rorb
inc
dec
cmpsb
insb
mov
int
adc
dec
iret
lea
pop
scas
xchg
imul
lcall
sahf
push
lods
es
das
xor
xchg
movl
dec
mov
mov
aas
fxch
mov
into
aam
cmp
dec
mov
dec
xor
sub
dec
lods
or
movsb
imull
mov
pop
cld
push
cvttps2pi
pop
shr
lods
xadd
pop
pop
mov
sbb
mov
push
cmp
jnp
cmp
iret
or
in
dec
sub
push
mov
sub
xchg
push
aaa
aam
out
pushf
xchg
scas
lret
pusha
pop
sbb
ljmp
mov
dec
imul
mov
pushf
mov
das
push
shrb
lcall
into
sub
pop
cs
cs
imul
je
xchg
push
inc
or
fcomip
cmp
test
call
sahf
xchg
sub
dec
pop
xchg
pop
mov
mov
lret
nop
or
xchg
out
or
movsb
test
fisttpll
mov
cmp
push
mov
shrl
pusha
or
push
lcall
sbb
pinsrw
subps
iret
int
es
cmp
cld
out
nop
into
or
sub
adc
pushl
sub
aaa
out
or
jge
sub
mov
cmp
adc
sub
divl
testb
mov
adc
sbb
movsl
decl
or
pop
and
mov
or
xor
cmp
js
jbe
pop
pop
cmp
dec
cmp
ja
ss
and
xlat
cmp
dec
xchg
xchg
mov
sbb
js
xchg
jbe
pop
push
mov
mov
or
sub
jle
out
in
and
mov
lcall
int
out
stc
lcall
mov
dec
inc
addl
pcmpeqw
or
mov
add
pop
outsl
mov
or
mov
adc
mov
jae
push
or
mov
and
mov
or
pop
adc
rcrl
cwtl
inc
outsl
fs
push
xor
jno
mov
stos
cltd
and
dec
mov
arpl
insl
jo
jne
pop
iret
inc
loope
sbbb
sar
fs
jg
sbb
sbb
sbb
sbb
xchg
push
adc
mov
adc
cmp
dec
setb
or
and
cmp
dec
mov
mov
mov
adc
xchg
pop
sahf
cmp
dec
popf
mov
dec
sbb
dec
push
mov
dec
adc
dec
or
add
and
mov
mov
dec
xchg
xchg
xchg
xchg
cmp
xchg
test
movsl
dec
and
fisttpl
mov
sub
jb
xchg
mov
dec
adc
dec
xchg
mov
dec
adc
xor
cmp
mov
adc
xlat
fdivrl
pop
pop
js
xor
cmp
jecxz
jns
sbb
cmp
dec
mov
cmp
dec
cmp
cwtl
jnp
cmc
dec
dec
in
and
mov
out
cmp
jnp
cmc
dec
mov
fs
sub
jnp
cmc
dec
dec
in
and
mov
out
cmp
jnp
dec
scas
sub
rclb
mov
xlat
pop
jb
cwtl
pop
jp
je
aaa
add
shlb
push
bound
adc
xor
dec
adc
outsb
lock
rcrb
push
and
ds
cmpb
jmp
jg
repz
sbb
jle
je
movsl
das
jge
mov
or
jns
mov
sub
mov
int
adc
or
rorb
outsb
jo
push
fisttps
div
push
hlt
lcall
loop
loope
loopne
fistps
pop
push
or
hlt
aam
repnz
xchg
cmp
and
pop
adc
repz
rcr
repnz
xchg
cmp
and
xor
xor
rcr
repnz
xchg
loope
outsb
push
sbb
ljmp
in
movsb
das
mov
repnz
jno
mov
stos
xchg
xor
je
insl
aam
pop
mov
das
aam
in
mov
shrb
int3
mov
in
ljmp
mov
inc
into
inc
sub
mov
fwait
arpl
les
inc
fisttpl
popf
cmpsb
cmpsb
xlat
pop
negl
mov
push
fdivs
jbe
inc
lahf
clc
out
jmpw
or
adc
pushf
cltd
or
xor
sub
arpl
dec
sub
xchg
lods
dec
out
mov
mov
daa
aaa
xchg
jb
leave
xchg
push
and
addb
sbb
mov
cmp
dec
jle
mov
xchg
imul
daa
in
and
dec
or
dec
enter
test
cltd
dec
mov
dec
dec
mov
dec
pop
xchg
movntq
and
mov
dec
sbb
dec
mov
xchg
and
or
cmp
dec
out
push
cmp
adc
xchg
xchg
inc
cmp
dec
add
in
cmp
dec
mov
xchg
test
out
cmp
xchg
and
lea
or
cmp
cwtl
cmp
adc
dec
inc
xchg
sbb
cmp
adc
cmp
dec
ret
xchg
adc
dec
sub
arpl
mov
xchg
and
mov
adc
cmp
dec
xchg
xchg
mov
cmpsb
push
dec
into
adc
xchg
inc
xchg
and
cmp
dec
add
dec
rorl
mov
dec
mov
inc
dec
push
mov
adc
xchg
loopne
cmp
in
and
subb
dec
pusha
mov
dec
and
shrb
mov
in
movsb
sub
dec
addr16
sub
pop
add
out
and
jecxz
std
fs
lcall
mov
inc
adc
ds
adc
add
sub
adc
es
scas
and
add
add
lahf
inc
leave
xor
adc
enter
push
repz
inc
mov
mov
xchg
dec
mov
push
cmpsb
push
insb
out
jmp
inc
pusha
add
pop
es
and
mov
inc
loopne
and
mov
push
test
fs
js
add
mov
adc
add
loopne
stos
sbb
shlb
nop
andl
or
movsl
pop
test
test
jle
outsb
lahf
outsb
lret
adc
addb
sbb
dec
pop
fsts
mov
jl
mov
ds
mov
mov
pop
pushf
fstpl
adc
ja
into
pop
sub
mov
sbb
mov
pop
in
mov
lahf
cld
sbb
add
lds
cmp
popa
push
and
outsl
and
mov
push
mov
cmp
and
aas
call
add
xchg
push
xchg
xchg
jmp
xchg
xchg
into
pop
adc
push
int3
mov
sahf
lds
sbb
jb
cmpsb
mov
mov
or
and
mov
mov
mov
out
mov
aam
push
or
int3
sub
or
and
pushaw
sbb
xor
movntq
sbb
mov
addr16
mov
imul
mov
mov
aam
xchg
push
mov
adc
push
jecxz
sub
push
or
xlat
mov
xchg
adc
sub
or
lea
push
sahf
sbb
push
push
mov
fwait
sbb
and
sub
cltd
das
loop
push
stos
push
das
mov
mov
sbb
inc
sub
aam
cmp
cmp
jo
sbb
sahf
inc
fwait
xchg
sbb
xchg
pusha
arpl
cmp
aas
addr16
aas
inc
add
js
sub
orb
ds
add
push
dec
cmp
and
and
or
pop
adc
or
lahf
loop
das
orl
mov
lea
and
jecxz
push
push
and
and
cmp
jo
add
inc
leave
mov
dec
aas
xchg
adc
pop
mov
in
and
rcl
adc
sbb
xchg
mov
cmpsb
or
cmpsb
xor
imul
loopne
and
xor
rolb
sbb
ret
movsl
xchg
push
pop
adc
fimuls
into
xor
adc
xor
cmpsl
sahf
pop
or
inc
pusha
imul
das
ret
orl
add
jnp
push
pop
mov
xor
xchg
imul
cmp
lcall
pop
and
popa
ret
nop
push
lcall
push
or
adc
pop
lea
scas
sbb
jb
notl
aaa
scas
jbe
xchg
mov
pop
cmp
jno
push
xchg
hlt
or
mov
mov
pusha
nop
jae
clc
mov
or
loop
les
stc
daa
popf
mov
push
cmp
aaa
sbb
jno
movsl
pop
scas
xchg
add
imul
or
iret
daa
jmp
shlb
mov
mov
cmp
jae
jmp
dec
inc
add
add
pop
ljmp
mov
mov
shrb
pusha
add
shr
stos
loop
sbb
stos
retw
int
roll
mov
or
mov
loop
inc
mov
or
cmpsb
adc
mov
jne
xchg
adc
xchg
push
cmp
dec
insb
xor
add
xchg
dec
xchg
xchg
adc
cmp
dec
or
mov
adcl
lcall
add
or
lahf
inc
ret
or
and
or
imul
sahf
aad
mov
xor
imul
dec
daa
pop
ja
sahf
out
pop
mov
lds
mov
andb
js
inc
push
mov
jg
mov
or
aaa
or
mov
xchg
push
inc
pop
inc
bound
sub
cmp
pop
aad
cmp
scas
mov
xor
sub
stos
and
or
and
or
pop
aas
adc
inc
push
sub
mov
test
mov
jle
dec
outsb
sbb
arpl
pusha
or
dec
adc
xchg
or
fsubs
icebp
cmpsb
and
and
push
xchg
adc
xchg
pop
adc
shll
cmpsl
adc
sub
inc
mov
pusha
arpl
outsb
sbb
dec
sbb
cmp
push
and
out
stos
adc
int3
or
push
sub
push
push
dec
mov
push
movsl
shll
or
and
and
sub
bound
mov
pop
sbb
or
mov
das
adc
lea
adc
lcall
mov
sbb
or
mov
inc
in
lcall
mov
fs
das
add
push
sub
adc
sbb
push
adc
or
adc
push
insb
div
mov
sar
ss
icebp
jbe
xchg
dec
ret
adc
cmpsb
and
mov
xchg
pop
fwait
movups
mov
and
adc
mov
mov
jb
rorl
testl
or
jge
dec
mov
sub
dec
push
inc
lahf
fnstenv
cs
arpl
cmpsb
pop
push
dec
xchg
rorl
inc
mov
or
int3
jae
insb
dec
mov
paddsb
out
xor
sub
push
push
sub
aas
pusha
or
repz
test
and
int3
and
test
xchg
mov
xchg
in
sub
push
je
sub
dec
rclb
adcb
sub
cmp
je
inc
adc
push
push
popa
jp
adc
aaa
mov
fistpll
jb
xorl
mov
cmpsl
icebp
mov
icebp
sbb
lods
inc
add
push
cmp
lods
ds
or
sbb
xchg
mov
stos
xchg
aaa
mov
cwtl
adc
or
dec
or
pop
out
nop
or
je
pop
xor
mov
int3
push
pop
dec
fwait
pop
and
adc
outsb
xchg
push
sub
ss
sbb
shl
fstps
jne
cmp
adc
icebp
hlt
and
xchg
xchg
ss
popw
rorb
cmpsl
xchg
in
aaa
ss
dec
pop
shrb
adc
cwtl
lea
adc
inc
jnp
and
adc
xor
cmc
mov
xchg
jo
test
or
loope
lods
adc
pop
inc
xchg
lcall
xor
and
mov
out
and
xlat
push
pop
sbb
dec
mov
cmpsl
sub
jmp
cli
adc
xchg
cmp
out
mov
push
xchg
negb
in
sbb
aaa
xlat
int
cmp
mov
push
mov
outsb
xor
cmpsb
or
mov
xchg
mov
adc
rcl
and
lahf
push
sub
shll
adc
popf
inc
push
mov
in
iret
and
add
mov
sub
pop
mov
xchg
test
mov
xor
push
adc
jge
pusha
sbb
xor
fadd
jmp
push
lcall
js
int
push
cmp
mov
les
daa
mov
or
pop
aaa
fcom
or
adc
sub
out
mov
mov
fcoml
and
sub
psrlw
jb
dec
cmpsl
pushf
adc
xchg
jb
sub
xchg
push
test
or
lods
lock
push
inc
cmp
imul
and
sbb
repz
inc
push
js
test
adc
push
aad
pop
jmp
xlat
push
xor
scas
lret
mov
sub
cwtl
out
bound
icebp
sbb
jb
lahf
sub
mov
in
lret
dec
int3
lret
adc
in
xchg
or
cmpsb
shlb
mov
push
adc
in
fisttpl
stos
jl
sub
push
cwtl
cmp
movzbl
loope
testl
sub
xor
movb
fisubs
sbb
inc
or
mov
lret
push
mov
adc
es
mov
mov
stc
jo
adc
push
pop
inc
icebp
insl
push
cmp
xchg
jge
lock
pop
cmp
sbb
test
sub
movsb
dec
and
dec
lahf
mov
adc
xchg
sbb
fwait
mov
adc
xchg
pop
push
ficoms
xchg
adc
xchg
mov
dec
or
sub
xchg
adc
je
or
xchg
or
lret
adc
cmp
outsb
or
arpl
xchg
imul
jmp
adc
sub
fimuls
mov
or
xor
pushf
adc
arpl
je
or
cmp
xchg
fimuls
mov
sub
push
adc
sbb
pop
push
and
lcall
fisttpll
ds
sbb
cmp
fistps
je
push
outsb
add
or
dec
adc
push
xor
into
adc
add
fwait
or
std
es
mov
xorb
jle
pop
push
mulb
data16
cmp
adc
xor
pop
cmpsb
sbb
sbb
shlb
dec
sbb
dec
fwait
xor
sub
aad
and
add
push
xchg
mov
xor
cwtl
mov
dec
negb
and
xchg
lahf
sub
adc
push
jno
xchg
sub
dec
adc
xchg
movsl
popf
or
dec
or
adc
dec
mov
jge
lea
xchg
sbb
cmp
dec
sbb
cmp
insb
es
subb
lret
daa
addb
stc
mov
cmpsl
movsl
decb
add
mov
adc
adcl
mov
leave
icebp
popf
pop
push
mov
sbb
inc
push
inc
popf
movl
xchg
jl
or
and
mov
pop
ljmp
push
imulb
lcall
sbb
mov
push
mov
xchg
sbb
sub
sub
mov
dec
cs
xchg
lret
cmp
adc
cmp
cmp
xchg
dec
stos
mov
dec
dec
xchg
xchg
push
cmp
dec
mov
cmovle
dec
sub
leave
dec
or
push
sub
xchg
in
sub
dec
dec
cmpsl
mov
daa
cmp
dec
cmpsb
fldt
flds
stc
mov
data16
or
xchg
fimuls
adc
push
push
dec
icebp
dec
sbb
push
inc
lods
lea
sub
out
pop
jb
or
jae
push
out
jmp
and
sub
mov
fmull
loope
adcb
dec
cmc
dec
int
iret
adc
cmp
dec
mov
pop
pop
cmp
dec
loope
adc
or
push
dec
int3
xchg
rclb
push
dec
fmuls
rorb
gs
push
push
cmp
dec
xor
pop
dec
pop
mov
adc
cmp
dec
leave
push
dec
push
xchg
dec
sarb
shr
sub
dec
cli
xchg
fidivrs
loop
mov
dec
jp
loop
enter
and
inc
and
or
push
popf
or
daa
sub
sbb
into
or
pop
mov
rorl
syscall
ds
adc
or
lcall
dec
sub
pop
dec
and
jle
int3
push
arpl
jg
sub
sbb
or
mov
dec
inc
push
sub
sahf
lea
sub
mov
push
sbb
push
fxch
push
sub
xchg
or
mov
sub
out
aaa
adc
xchg
rcll
adc
sub
mov
jle
loop
lret
imul
fsubrl
mov
pop
fcmovne
jb
and
cmp
cs
cmpsb
jl
push
sub
cmp
outsl
dec
sbb
lahf
rorl
clc
andb
mov
sub
xor
sub
mov
sbb
enter
sub
and
or
xchg
stc
pushf
xor
mov
push
dec
adc
mov
and
push
adc
jmp
or
test
push
sbb
sbb
mov
mov
inc
insl
fistl
jns
in
bound
rcrb
ljmp
and
leave
scas
sub
dec
fcomi
sub
fmull
add
jb
stos
mov
or
push
xchg
cmp
pop
cltd
inc
call
add
xor
sbb
pop
or
loop
fwait
inc
sbb
repnz
jl
xor
out
xor
cltd
push
or
frstpm(287
dec
mov
pop
xor
ds
xchg
lcall
in
pop
sub
adc
ret
sub
or
inc
push
pop
mov
mov
fildll
sub
daa
in
mov
fadds
mov
push
cmpsb
or
jl
jno
and
mov
mov
ret
jnp
pop
push
or
sub
or
and
leave
jnp
sbb
test
negb
sub
and
lds
xlat
xchg
inc
jge
push
sub
push
push
mov
ret
pop
mov
icebp
cmp
sbb
xchg
jno
repz
jp
and
sub
inc
dec
sub
lret
outsb
lcall
out
adc
or
aaa
xchg
ljmp
xchg
jo
mov
pushf
in
add
push
lret
leave
push
jecxz
lcall
or
xchg
jne
mov
ljmp
pop
sbb
xchg
icebp
ret
mov
pop
decl
in
popa
pushf
xor
add
sub
test
jnp
push
or
cltd
in
dec
xor
mov
mov
test
jp
addr16
pop
dec
es
mov
lds
mov
jp
cmp
mov
imul
jb
and
inc
adc
cld
and
leave
add
jno
sbb
jmp
fcmovu
push
loop
mov
ljmp
iret
push
jo
cmp
out
sbb
or
fdivrp
loope
hlt
gs
rclb
pusha
sub
or
xor
or
cmpsb
scas
rclb
jecxz
sbb
xor
bound
mov
fldl
sbb
push
hlt
cmp
add
dec
push
shll
push
leave
and
dec
or
in
or
and
cmp
stos
stos
aaa
push
ficoms
imul
and
fisubrs
mov
xchg
stos
inc
insl
sbb
sbb
lock
js
jge
mov
cmp
movsl
mov
stos
lret
adc
push
fisubrs
mov
into
stos
fsubs
stos
sbb
mov
inc
xchg
sub
dec
ss
inc
cs
sbb
pop
xchg
sbb
or
pop
nop
mov
adc
or
adc
mov
fcmovnu
adc
dec
jb
xor
loop
sbb
adc
or
sbb
pop
sbb
sbb
push
and
rcrl
and
hlt
mov
jb
mov
mov
jb
pop
pop
push
add
mov
jmp
push
cmp
test
jp
fidivrl
adc
div
repz
or
dec
fildll
push
dec
mov
jge
adc
aam
pushf
daa
sbb
jae
xor
int
lock
add
js
sbb
push
shlb
xchg
repnz
nop
push
push
pop
push
jp
mov
jae
sbb
scas
xchg
scas
xchg
pop
sbb
into
jno
xlat
lret
out
xchg
sub
adc
push
mov
pop
cmp
pop
jp
dec
lret
sbb
adc
jbe
jb
xchg
iret
xor
aam
inc
or
push
inc
push
push
inc
pushf
adc
inc
rcrl
nop
lea
mov
mov
sbb
push
cs
lret
jo
dec
rorl
insb
nop
rorb
xlat
jae
mov
stos
dec
lea
jno
xor
jle
pop
sti
mov
jp
nop
mov
mov
stos
pop
ja
cmp
imul
pop
aas
stos
lods
xlat
sti
xor
push
mov
shrd
in
adc
mulb
cmp
ret
repnz
cmp
lea
scas
cmp
push
xchg
je
and
rorb
cld
call
lcall
push
xchg
cmp
ljmp
push
adc
std
imul
mov
cmpl
repz
pop
inc
fwait
ret
sub
jmp
xlat
sub
cmp
lods
xchg
and
repz
jmp
push
cmc
mov
popf
loop
sbb
mov
mov
cmc
push
lcall
dec
aaa
xor
scas
mov
scas
ret
mov
mov
pushf
mov
add
push
and
bound
mov
in
cmpsb
dec
test
mov
adc
mov
pusha
push
pop
out
testl
cmp
push
jle
push
call
and
jo
std
push
and
add
ja
ljmp
pushl
dec
popa
dec
push
or
ficompl
xchg
rorl
adc
hlt
shll
add
sbb
std
outsb
dec
aas
xor
dec
mov
mov
ljmp
in
add
ds
sbb
lret
xchg
and
es
push
cmpsb
repnz
inc
pushf
sub
jnp
inc
pop
mov
idivb
xchg
mov
cmpsl
ljmp
push
cmp
imul
in
cmp
cmp
ret
cmp
ljmp
dec
cmp
call
int3
shrl
push
cmp
call
sbb
pop
jl
dec
testb
fldl
add
push
call
adc
das
or
xchg
shll
cltd
mov
mov
dec
int
mov
mov
mov
andl
and
insl
jo
mov
addl
nop
shrl
mov
cld
in
mov
push
pop
xor
xchg
add
pop
insb
lods
sbb
btc
push
cmp
aam
sbb
xchg
cld
lods
hlt
or
or
sarl
or
subb
push
pop
jmp
xchg
mov
loope
pop
in
mov
daa
ljmp
dec
aas
pop
pop
xlat
das
test
jne
outsb
push
rorb
and
pop
cmc
mov
sub
inc
inc
out
faddp
imul
xor
arpl
lea
mov
scas
rcrb
mov
sub
mov
sbb
jecxz
punpcklwd
or
fnstsw
pop
popa
das
xorl
sub
cmp
inc
int3
shl
mov
test
bt
test
jmp
jmp
inc
jp
hlt
leave
inc
lahf
add
in
or
push
dec
adc
loopne
arpl
sub
pop
inc
test
data16
lcall
out
pop
jge
mov
jbe
test
xchg
test
cli
hlt
mov
jmp
sbb
lds
mov
or
inc
lea
scas
xchg
cmp
fucomp
out
aaa
mov
dec
jle
int3
mov
insl
int3
adc
cmp
cld
fnstsw
hlt
pop
inc
ret
sarl
or
pop
pop
rorl
rclb
lods
xor
xor
shlb
lds
addr16
lock
push
popf
nop
adc
scas
push
jmp
cmp
test
sbb
lret
fdivr
shlb
sbb
ss
shrb
dec
stc
sbb
lea
mov
insl
pop
adc
xchg
mov
mov
pop
xor
test
mov
xor
cmp
std
mov
enter
in
or
sub
stos
inc
and
cltd
lret
popf
loop
dec
jno
push
cmp
xchg
icebp
mov
add
mov
mov
xchg
ja
loopne
stc
jnp
push
mov
adc
adc
adc
or
or
inc
mov
mov
fs
or
jbe
push
lret
inc
pop
sub
ljmp
test
bound
or
and
inc
daa
or
rorl
and
or
daa
bound
or
pop
mov
fcoms
or
sahf
idiv
adc
dec
enter
lret
sti
movsl
and
int3
test
adc
fwait
mov
xchg
inc
mov
sbb
cwtl
or
inc
push
cmp
mov
or
cmp
pop
je
mov
inc
mov
rclb
stos
mov
jle
mov
cmp
mov
inc
push
lods
cmpb
adc
loopne
orb
movsb
insl
inc
xor
jnp
mov
or
dec
sbb
sti
mov
xorb
sub
sbb
pusha
add
mov
hlt
sbb
lods
mov
je
adc
add
inc
dec
nop
push
sub
test
fs
cs
or
jnp
sti
out
out
clc
lret
shr
enter
es
mov
ficomps
mov
popa
sub
push
mov
adc
ret
insb
adc
dec
ljmp
in
fisubs
dec
insl
adc
lahf
xor
sbb
inc
push
dec
sbb
lds
adc
mov
call
add
mov
and
push
pop
sbb
adc
loopne
loop
sub
fsts
ds
or
daa
mov
inc
popf
adc
sub
jmp
fiadds
mov
inc
aas
push
test
and
inc
or
in
bound
sub
daa
xchg
add
test
pop
push
sbb
inc
mov
daa
pop
mov
add
dec
sub
cmpsb
insl
pop
inc
add
idiv
sub
add
inc
mov
mov
leave
std
xchg
std
pop
cmp
pushf
aaa
push
mov
mov
and
dec
mov
or
aam
imul
pop
std
mov
hlt
test
sub
rorb
inc
nop
scas
sbb
add
mov
mov
inc
dec
fistpl
pushl
cld
std
lret
es
test
and
pop
es
sti
cmp
cmp
push
jnp
cmpsb
or
outsb
in
jl
sub
lret
push
mov
lods
sbb
jecxz
jmp
jp
sbb
fwait
pop
push
dec
mov
mov
je
lret
cmp
adc
mov
mov
and
lods
gs
xchg
sbb
xor
push
adc
daa
movzbl
addl
fidivl
adcb
xchg
stos
push
ljmp
out
nop
push
ja
pop
aaa
xor
cmp
jo
xchg
jp
daa
jmp
jle
pop
dec
mov
add
lcall
push
loopne
mov
mov
je
adc
cwtl
adc
movsb
or
pop
bound
daa
popf
mov
movsb
mov
pop
outsl
add
jle
and
lret
fs
das
push
pop
jp
sub
imul
packuswb
mov
inc
ja
arpl
mov
sub
xchg
mov
mov
das
imul
inc
and
jb
fwait
cld
ja
lcall
inc
pop
mov
or
andl
adc
cmp
popf
clc
loop
inc
sbb
sahf
outsb
push
insb
mov
xchg
insb
dec
push
leave
mov
mov
mov
out
ljmp
mov
jbe
in
pop
cmp
sub
sarl
mov
dec
lret
mov
mov
pop
jb
adc
cs
dec
cmp
dec
ss
adc
adcl
in
stos
mov
xor
xchg
out
push
add
mov
push
push
fsubrs
adc
rcll
ljmp
jmp
lds
mov
imul
out
xchg
lea
in
cmpsb
pop
xor
in
insb
inc
cmc
mov
fildl
dec
test
and
xchg
adc
push
lods
insb
inc
ret
imul
iret
cwtl
aas
fidivrs
jnp
adc
jbe
sbb
ljmp
mov
popa
insl
mov
test
sub
insb
enter
orl
loop
cmp
stc
addr16
jb
sbb
mov
int
mov
inc
inc
mov
or
lahf
mov
sbb
xchg
lahf
push
arpl
loope
sbb
ljmp
inc
add
push
ret
push
sbb
jnp
cmp
bound
xchg
sub
icebp
cli
mov
imul
pop
pop
sbb
imulb
sub
push
mov
inc
js
and
icebp
das
clc
sbb
dec
or
add
inc
pop
shl
push
mov
push
push
shlb
stos
jnp
xor
test
dec
push
lods
roll
or
mov
dec
or
push
pop
clc
dec
outsb
sbb
jmp
lds
or
cmpb
arpl
lods
rolb
and
xchg
or
sub
cmp
out
jmp
or
adc
inc
mov
subb
repz
dec
lock
loopne
push
mov
sub
es
inc
jl
es
cmp
mov
je
lea
xchg
inc
push
rep
mov
cmpsl
imul
imul
rorl
gs
std
imul
xorl
ljmp
scas
sahf
mov
fs
mov
mov
mov
inc
sbb
rcll
jb
lret
xor
setns
mov
and
mov
call
into
iret
imul
pop
xchg
out
push
mov
adc
lcall
inc
jecxz
xor
mov
shrb
xchg
pop
stos
lods
lods
dec
push
push
fwait
jg
xchg
mov
xor
mov
cltd
popf
sbb
movsb
and
fs
hlt
lahf
xchg
in
dec
mov
aaa
test
mov
mov
data16
mov
jne
sub
jae
out
push
xchg
cmpsl
and
or
lret
push
dec
pop
and
mov
cmp
mov
inc
push
adc
push
jmp
mov
inc
pop
leave
je
out
test
xlat
insb
pusha
icebp
jbe
stc
lods
xchg
xchg
pop
mov
or
jb
jmp
mov
mov
pop
xchg
popf
cmp
or
insb
ficoms
wbinvd
in
sbb
test
and
or
push
pop
mull
xor
es
adc
xor
mov
or
sub
or
push
mov
xlat
adcb
sub
dec
xchg
fwait
and
pop
jge
enter
sbb
push
ss
dec
aam
sarb
jmp
leave
nop
or
lock
mov
xchg
in
dec
push
dec
adc
mov
and
mov
into
ja
andb
stos
mov
push
xchg
mov
mov
call
insl
add
jo
iret
xchg
gs
xchg
frstor
ja
bound
stos
push
je
sub
je
out
adc
inc
inc
sub
push
mov
das
addr16
test
sbb
mov
add
xchg
popf
xchg
fdiv
sbb
rcl
xorb
and
pop
mov
or
pop
pop
and
scas
outsl
push
or
push
ret
or
in
lcall
orl
cmp
movsb
xor
push
incb
sub
sarb
fs
iret
adc
lahf
scas
imul
andb
mov
add
dec
aaa
sbb
daa
pushf
pop
movsl
pop
inc
int3
fs
sbb
inc
mov
adc
cmp
scas
test
adc
xor
add
outsb
fwait
push
leave
fwait
imul
sub
adc
enter
xor
and
jbe
jp
mov
mov
in
inc
mov
adc
setne
pusha
sbb
jae
add
sub
in
push
in
daa
outsl
stos
xchg
mov
lret
xchg
lret
bound
roll
adc
xchg
xchg
sbb
cmpsl
lock
adc
fnsave
or
lds
fs
pop
sbb
pop
lcall
mov
ret
popf
inc
or
mov
ret
inc
sub
les
or
fs
sbb
pop
mov
or
daa
sbb
cmpsl
pop
jge
xor
gs
pop
lret
popf
mov
jmp
sarl
rorb
jnp
push
inc
sbb
gs
adc
inc
dec
pop
dec
or
or
or
jmp
cmp
iret
pushf
sahf
pop
test
ja
lahf
repz
in
in
push
adc
mov
push
and
sub
mov
into
or
or
sub
pop
mov
jmp
pop
add
cltd
cwtl
pop
sbb
lahf
inc
mov
cmp
mov
sbb
or
cmp
mov
mov
rolb
adc
and
push
stos
imul
lret
sub
jmp
ljmp
lods
subb
dec
mov
cmp
mov
adc
outsl
lock
lret
int3
xchg
dec
and
in
xor
xor
xchg
cmp
cmp
mov
sub
loopne
lret
insb
sbb
or
leave
xchg
cmp
lret
ret
cmp
xchg
lds
dec
cmp
loope
adc
hlt
xor
loopne
repz
sub
aam
sbb
popf
or
nop
leave
mov
jne
pop
add
push
cli
mov
inc
xchg
inc
daa
xor
movsb
stos
sub
bound
push
fiaddl
jg
sbb
xchg
dec
cwtl
fwait
push
mov
test
call
dec
adc
and
adc
lcall
je
xchg
das
xor
pop
outsl
sbb
mov
mov
das
pushf
and
adc
sub
inc
inc
pop
movb
sub
mov
dec
clc
je
dec
and
int
hlt
fcomps
inc
pop
mov
adc
mov
mov
out
std
dec
mov
leave
and
or
insl
mov
jg
aas
dec
inc
dec
or
push
sbbl
push
xchg
push
adc
out
push
ljmp
mov
test
xor
mov
mov
rcr
xchg
rcrl
dec
add
lret
adc
sbb
cmpb
mov
or
mov
lds
push
inc
cwtl
lods
adc
inc
loop
sbb
xchg
or
in
call
push
sub
in
cli
xchg
mov
pop
adc
faddl
into
ds
pop
leave
add
data16
mov
sub
sub
mov
mov
stc
xor
sub
imul
mov
and
lret
xor
mov
mov
pop
iret
test
mov
ret
xchg
dec
imul
daa
insl
repz
and
push
popa
scas
sub
test
insb
xor
fnstenv
xchg
jle
push
sub
cmp
lret
sbb
push
jecxz
dec
xadd
shlb
xchg
sub
add
xor
daa
dec
sbbl
sub
fs
sub
mov
adc
pop
and
jle
adc
dec
out
fstl
mov
shll
push
loope
and
fs
test
loope
jl
sahf
pop
dec
das
and
sub
lcall
std
cmpsl
xor
pusha
xorl
clc
inc
xor
sub
inc
jecxz
xor
leave
xor
and
mov
push
lret
enter
adc
movsb
fcmovbe
popa
push
imul
movsb
je
mov
scas
divl
mov
fs
jbe
mov
jecxz
xorb
daa
iret
fidivrs
pop
push
outsb
popf
adc
rclb
mov
insl
cmc
push
mov
inc
or
xor
jb
imul
pusha
xchg
dec
test
push
out
jne
sub
jmp
fildl
cmpsb
xchg
push
shll
ret
movsl
outsl
adc
test
adc
shll
xchg
or
mov
call
pop
jl
jmp
rorl
imul
mov
xor
outsl
push
mov
or
fs
sbb
loope
call
jo
cwtl
mov
jne
test
inc
out
pop
jmp
aam
mov
icebp
xchg
pop
or
ror
inc
cmp
sub
sbb
pop
mov
xor
adc
or
push
push
outsb
mov
push
aas
sahf
orps
cs
cmpl
add
push
loope
sub
cmc
decb
sub
das
in
rorl
adc
adc
inc
dec
sub
cs
popf
rorb
dec
mov
das
mov
adc
adcb
mov
cltd
push
sbb
sbb
shlb
or
call
aam
xor
lret
push
das
adc
or
and
and
sbb
and
je
and
mov
jg
xor
dec
or
pop
push
setnp
xchg
push
adc
fwait
xor
lock
ret
adc
adc
add
adc
cmpsb
mov
ds
daa
dec
addb
movsb
push
or
and
push
adc
rcrb
fbld
pop
adc
aam
xor
push
fbld
pop
adc
jecxz
push
and
pop
push
es
fwait
outsb
and
adc
or
pushf
sub
adc
rorl
push
adc
jl
lock
pop
add
jge
push
mov
xor
sub
and
daa
lcall
push
ret
pop
xor
push
push
sbb
bound
bound
sahf
xchg
or
insb
push
je
xchg
sbb
lcall
lcall
inc
push
outsb
fs
or
and
cmovnp
adc
aam
pop
or
xor
inc
mov
outsb
xchg
sarl
out
data16
mov
sti
push
nop
sbb
sub
ljmp
fisttpll
shrl
test
sub
pop
inc
test
sbb
adc
pop
sub
or
xchg
lock
push
push
inc
stos
jmp
mov
test
inc
xchg
aas
sti
arpl
int3
call
jae
adc
daa
push
add
push
and
dec
inc
pop
aas
inc
xchg
mov
rcrb
xchg
mov
cwtl
or
cltd
scas
test
int
daa
enter
out
sarl
out
xlat
or
popf
fisttpll
jns
push
je
jno
pop
jnp
inc
enter
lret
shll
aaa
and
std
jmp
adc
mov
in
sub
int3
mov
mov
and
loopne
mov
xchg
cmp
cmpb
cmp
dec
xor
pop
es
test
add
jbe
xchg
or
add
fisubs
in
scas
jo
mov
cmp
inc
mov
iret
sub
xchg
mov
pushf
cmp
add
pop
fsts
and
call
mov
shrb
mov
rcll
xor
xchg
popf
mov
cmp
xchg
inc
push
or
add
es
out
push
ss
add
and
xchg
in
jb
sub
daa
pop
scas
xor
cmp
popf
es
or
and
mov
mov
sub
shll
mov
add
sub
rolb
sub
div
test
dec
mov
jp
addr16
adc
inc
lods
es
aaa
aad
xor
shrb
ljmp
movsb
dec
mov
sahf
movsl
inc
mov
mov
jp
adc
add
cltd
push
sub
je
addr16
data16
sbb
sub
cmp
loope
js
das
push
mov
xchg
aam
sub
and
xor
test
lahf
sub
enter
pop
and
pop
xchg
popf
cmp
or
xchg
pop
jae
mov
jo
sbb
mov
test
jle
shrl
xchg
aaa
or
lds
xlat
out
jnp
inc
xchg
imul
add
faddp
or
push
push
mov
sub
into
test
enter
gs
dec
mov
xchg
or
daa
xchg
dec
push
xchg
sbbl
ljmp
pushf
mov
and
nop
jle
rcrb
jmp
inc
sub
inc
mov
bound
fs
sbb
fwait
push
xchg
push
and
lcall
push
and
sbb
in
jle
push
sbb
jmp
sbb
fistps
mov
sbb
xchg
call
inc
push
hlt
xchg
cmpsb
mov
inc
sbb
scas
jo
mov
int3
lock
sub
push
icebp
cmpsl
insl
sub
cmp
cltd
rcl
cmp
push
push
leave
sbb
jp
inc
xor
or
mov
jae
fcmove
jae
mov
mov
dec
adc
out
xor
push
cmp
es
xchg
mov
sbb
sbb
xchg
jle
cmp
addb
adc
sub
sub
sub
xchg
and
pop
adc
hlt
stos
or
popa
xchg
ljmp
andl
fnstsw
jmp
and
cmp
sbb
push
xchg
sbb
sarb
pop
stos
jecxz
stos
push
daa
ja
sbb
pop
shrb
ror
imul
call
pop
adc
sbb
pop
sub
sbb
jnp
xor
inc
stos
and
xor
adc
sti
sub
ret
iret
and
arpl
loop
sub
lds
push
inc
push
mov
and
or
andb
dec
adc
mov
cmp
push
les
inc
xchg
inc
jo
pop
insb
js
movsb
jecxz
push
in
mov
mov
inc
aad
mov
xor
mov
cmc
ljmp
sub
cmp
mov
jp
and
sub
inc
pushf
mov
xchg
daa
push
sbb
sbb
dec
sub
jmp
cli
push
jle
rorl
mov
in
lods
cmpsb
ret
jmp
lret
or
mov
push
dec
mov
pop
punpckhwd
push
lods
loope
sbbl
cwtl
imul
adc
and
mov
jl
sub
pop
sub
pop
mov
in
push
jb
fidivrl
push
rcl
aam
sbb
pop
out
inc
xchg
cmpsb
pop
xchg
jmp
orl
dec
adc
gs
mov
pushf
outsl
push
cmp
pop
jo
mov
stc
cmp
sbb
aam
push
or
jmp
pop
mov
int
insb
adc
inc
xchg
out
cmp
xchg
lock
sbb
push
dec
add
mov
aam
or
cmp
mov
and
push
sbb
adc
jae
scas
push
int3
jns
inc
mov
iret
clc
adc
dec
in
xchg
repz
push
push
pop
sub
out
dec
iret
sbb
sub
push
jno
xchg
or
sbb
jns
ret
call
dec
push
or
pop
mov
add
push
dec
lea
xchg
mov
stos
adc
xchg
fstl
ss
lret
insb
sub
adc
scas
dec
cmp
dec
out
jge
rcr
cmp
test
push
mov
cmpsl
lret
and
dec
pop
xchg
push
push
push
push
sbb
leave
push
clc
jnp
pmaxsw
insb
jbe
les
pop
test
jge
and
sub
jne
pop
mov
icebp
add
xor
jo
xchg
or
and
add
jp
into
sub
aad
stos
jbe
fdivrl
jae
and
mov
int3
or
repz
addl
pop
lahf
sub
and
insb
aad
stc
sub
pop
aaa
int
jne
sbb
inc
mov
xchg
and
test
movsb
or
hlt
popa
or
mov
or
pop
xchg
adc
ds
js
sub
out
mov
dec
pop
repnz
cld
shlb
inc
xor
sbb
sub
xchg
std
mov
add
mov
or
mov
sbb
mov
pop
adc
lods
scas
inc
adc
push
push
sub
pop
cmp
inc
jmp
insb
push
icebp
jg
notl
cmp
cmpsb
add
out
ljmp
xchg
test
pop
inc
scas
jo
xchg
add
lods
add
push
sub
imul
xor
leave
jg
sbb
add
fstps
push
add
mov
mov
std
or
mov
or
jbe
xchg
es
lret
in
test
inc
or
mov
and
or
or
movsb
cwtl
sbb
jbe
xor
dec
inc
xchg
adc
insb
cmc
idiv
mov
push
push
add
push
cmp
dec
insb
xchg
mov
mov
inc
ss
scas
fbstp
lret
clc
xchg
inc
ret
insb
sub
or
sbb
jnp
in
mov
sub
adc
fildll
inc
add
ljmp
xchg
aam
jnp
push
sbbb
daa
aas
dec
xchg
daa
ja
sbb
lods
rol
cmc
or
dec
outsb
int
mov
jno
adc
gs
pop
mov
or
push
add
rorl
cld
out
insb
push
popa
mov
and
fstp
or
loop
ljmp
mov
sbb
inc
insb
ss
sbbl
and
dec
nop
sarb
and
add
cwtl
push
sbb
imul
cmp
out
dec
adc
pop
cltd
jne
push
shll
adc
xchg
sbb
mov
adc
cmp
jno
bound
pusha
cli
mov
lret
jge
rcrb
pop
daa
ficompl
fisubrl
addr16
adc
pusha
pop
sub
pop
sub
ds
sub
push
pop
pop
xor
cmp
clc
cmovnp
inc
mov
les
jmp
shll
loopne
sti
sub
inc
pop
fwait
pop
xchg
loopne
or
xchg
or
dec
jp
mov
bound
or
out
pop
mov
push
mov
inc
cwtl
sbb
pop
add
iret
or
dec
cmp
int
xchg
or
lret
fdivs
hlt
jne
adc
jnp
pop
cmp
in
lods
arpl
push
xlat
push
xor
enter
adc
adc
leave
aas
jmp
ret
fmuls
mov
dec
loop
popa
stos
inc
popf
cmp
push
pop
test
pushl
sbbb
xchg
pop
and
std
add
cmpsl
fwait
xor
or
cmp
imul
jb
push
dec
jge
jmp
adc
sub
outsl
cld
jo
sub
scas
lods
cmpsb
jbe
cmp
push
dec
or
xor
and
pushf
jp
fnsave
ljmp
adc
test
mov
test
xchg
mov
test
and
daa
mov
and
mov
lret
inc
jmp
rcrb
stos
push
inc
sub
mov
sub
pop
and
mov
sub
bound
dec
testb
mov
mov
sahf
xchg
push
mov
mov
popf
aam
fsubr
pop
cli
ljmp
mov
adc
cmp
pop
dec
sub
ret
push
dec
jmp
testl
test
out
adc
mov
xchg
bound
scas
or
mov
push
add
sub
fdivrp
xchg
adcl
jns
lods
stc
imul
dec
insl
adc
xor
xor
andl
mov
into
mov
sub
mov
bound
fsts
loopne
sbb
or
lock
jbe
or
nop
fisttpll
daa
mov
aaa
inc
sbb
mov
xchg
sub
stos
mov
sub
push
xchg
orb
mov
pop
jmp
xchg
xor
lea
outsb
or
imul
and
inc
adc
mov
inc
jle
dec
mov
sub
sub
insb
xorb
sbb
lock
loopne
dec
inc
adc
jecxz
pop
idivb
add
lcall
xor
adc
nop
mov
insb
pop
inc
dec
or
adc
xchg
cmc
sbb
push
jnp
pop
cmpsb
in
dec
stos
dec
jne
add
les
pop
mov
dec
mov
lahf
adc
fisubs
addr16
jmp
mov
je
push
and
sbb
sub
xchg
mov
cmpsl
pop
adc
fldcw
cli
lret
mov
rolb
xchg
inc
add
shlb
call
and
mov
sbb
inc
daa
jge
push
imull
add
lock
dec
add
xor
and
inc
xor
adc
and
adc
push
push
mov
mov
insl
clc
jmp
lods
pop
out
cli
nop
adc
sbb
lods
fiaddl
fcom
mov
dec
sar
jp
icebp
push
xchg
push
loop
bound
and
push
fs
popa
daa
xchg
outsb
cmp
movsl
int3
rolb
inc
push
orb
scas
push
or
or
hlt
out
shlb
sub
inc
or
sub
insb
popl
dec
pop
aaa
xchg
cli
push
pop
mov
into
insb
hlt
xor
xor
adc
cmpsl
rcrl
movsb
xchg
stc
jp
mov
lret
pop
outsl
imul
push
xchg
push
add
push
daa
divb
in
inc
jne
scas
sub
outsb
pop
cmp
cld
push
mov
shlb
mov
int3
jnp
adc
fidivrl
lods
add
sub
fs
push
rorl
sub
inc
outsl
je
int
mov
xchg
sahf
mov
mov
daa
push
idivl
cmpsb
bndstx
outsb
dec
mov
or
push
push
test
jmp
inc
jnp
adc
inc
mov
push
or
pop
mov
sub
sbb
iret
negl
std
sti
cmp
adc
fwait
adc
sub
sbb
lahf
lea
jmp
loopne
xchg
mov
sub
jmp
loop
nop
popf
insb
and
sbb
mov
adc
cs
xor
lret
inc
dec
mov
jo
push
lods
sbb
fcoms
das
xchg
adc
adc
fistpl
fsubs
sub
sub
mov
movsl
inc
daa
push
pop
adc
int3
inc
inc
push
inc
daa
xchg
xor
push
mov
out
cmp
daa
dec
xchg
mov
sbb
pop
sahf
scas
loope
lcall
xor
xor
call
push
call
inc
or
imul
aam
enter
imul
cmp
sbb
jae
adcb
mov
insl
cmpb
ret
out
push
mov
cli
scas
movsb
repnz
add
pop
fs
stos
pop
clc
addr16
out
push
mov
call
xor
psllq
sub
jg
and
jmp
pop
mov
sub
fisttpl
jo
imul
xorb
stos
mov
out
xor
and
nop
mov
fnsave
ds
aas
pop
or
mov
pop
add
jp
xchg
sub
push
jge
jae
mov
or
cli
bound
dec
lcall
push
repz
pop
xchg
aaa
adc
dec
add
or
mov
push
or
call
mov
in
adc
pusha
xor
jnp
cmp
lret
aad
jmp
movsl
push
sahf
sub
xlat
adc
adc
inc
leave
inc
pop
hlt
lahf
mov
xor
nop
mov
daa
ficomps
shlb
xchg
test
jb
add
push
xchg
sub
mov
int
adc
adc
sbb
cmp
gs
pop
cld
mov
iret
jp
cmp
jnp
test
xchg
ss
andb
leave
lock
sub
sub
stos
bound
aam
sbb
and
mov
fisttps
test
sub
or
cld
mov
pop
fimuls
mov
push
push
aam
jo
add
push
inc
cmpb
fldcw
inc
ds
insb
test
mov
sbb
mov
into
adc
or
int3
fmull
jae
lret
and
ret
mov
fldl
in
out
mov
cs
pop
push
fcoml
adc
sub
mov
pop
mov
cli
sbb
and
lcall
stos
cmp
lahf
sbb
ret
cli
mov
daa
mov
loopne
sub
imul
sti
divl
out
into
xlat
aam
cwtl
mov
ljmp
es
xchg
in
mov
lock
daa
cmp
adc
test
cmp
and
int3
mov
test
or
mov
and
adc
cmp
ja
sbb
shll
sbb
mov
push
and
pusha
mov
adc
frstor
andps
imul
daa
insl
push
adcb
aas
jae
cli
in
push
mov
push
dec
nop
in
cmp
cs
or
scas
or
jae
xchg
out
jecxz
xchg
jbe
push
inc
jns
sbb
mov
jno
shlb
das
and
pop
lret
in
jbe
push
jnp
adc
mov
lods
cmp
mov
repz
out
sub
loopne
stc
add
add
xor
mov
loope
pop
dec
out
push
dec
pop
sbb
or
pop
call
mov
stc
or
pop
add
push
pop
icebp
push
push
push
or
mov
int
lcall
sbbl
xchg
into
jge
ret
pusha
popf
aam
xor
adc
adc
in
fiaddl
mov
sub
stos
jmp
adc
cli
jecxz
scas
into
sti
sahf
add
cmp
or
cmc
mov
sbb
jmp
fiadds
xor
loope
or
shrb
daa
inc
loopne
aam
dec
push
mov
int
ss
loop
rcrb
adc
cmpsb
xchg
call
inc
add
inc
adc
mov
xchg
mov
jnp
test
nop
mov
in
std
mov
or
test
mov
loopne
xchg
sti
push
jnp
es
pushf
adc
fisubl
pop
jmp
adc
add
cli
adc
fcomps
pop
inc
scas
scas
mov
int
imul
dec
push
rcrw
sub
and
cmpsb
push
icebp
jmp
and
xchg
push
pop
jae
lret
lcall
cmpsl
pushf
pop
sub
jnp
sbb
pop
inc
pop
subl
sub
push
call
pop
cwtl
sub
push
inc
ds
daa
push
hlt
jne
adc
cmp
sub
loope
sbb
addr16
lock
ja
aas
imul
in
aaa
or
inc
push
sbb
inc
cmpsl
scas
sub
arpl
cli
loope
cltd
inc
je
daa
or
dec
adc
mov
adc
ljmp
bound
bound
or
xor
mov
daa
cmp
lds
push
stc
dec
or
adc
scas
orl
push
daa
xor
popa
arpl
stos
lahf
leave
negl
fidivrl
dec
adc
mov
mov
les
or
push
adc
pop
sbb
sti
imul
push
ret
outsb
in
popf
pop
test
and
sbb
sti
mov
or
daa
int3
fsubs
add
sub
xor
xchg
adc
hlt
in
and
dec
sub
fisubrl
std
shlb
adc
iret
jae
adc
jmp
rcrl
in
sbb
dec
sbb
insb
icebp
pop
orb
xchg
sbb
sub
mov
out
dec
or
sub
shr
push
xchg
pop
mov
jmp
sbb
xor
lret
aas
adc
sbb
dec
dec
je
pop
test
xchg
xor
out
mov
xchg
pop
jns
std
test
cmpsb
push
hlt
xchg
pop
pusha
into
mov
push
xor
sbb
and
outsb
idivl
mov
leave
call
pop
scas
pop
daa
jle
adc
cmp
push
dec
mov
and
mov
or
jae
jl
sbb
mov
mov
lret
movsl
xchg
je
clc
mov
es
or
call
ja
xchg
js
into
adc
lea
add
idivb
insl
cmpsb
pop
add
ret
je
mov
shrb
mov
xchg
sbb
add
sub
push
xlat
add
ds
insl
push
adc
xor
insb
mov
jne
jae
imul
mov
push
xchg
and
pop
fsubrs
jo
stos
test
sti
mov
bound
das
adc
mov
imul
jge
fwait
dec
ret
insb
sub
add
cltd
mov
jl
popf
pop
aam
imul
lds
jmp
cli
rolb
fldenv
mov
out
and
mov
scas
sbb
mov
push
mov
nop
shll
adc
mov
xor
movsl
mov
adc
das
push
lret
arpl
dec
dec
xor
stos
int
rclb
es
into
jp
mov
fwait
pop
push
mov
and
mov
sbb
cmp
xchg
mov
sub
stos
pop
add
add
inc
adc
data16
adc
jns
aaa
jae
xchg
cmp
mov
xchg
mov
rcrl
jnp
addr16
adc
movsb
xlat
cmp
sahf
clc
pop
push
add
ljmp
int3
mov
repz
test
add
fwait
and
je
aaa
dec
and
mov
cltd
insb
jo
sbb
iret
mov
sarl
repz
pop
inc
pusha
pop
inc
jns
bound
xchg
cmp
test
pop
clc
dec
push
in
adc
pop
pusha
dec
xor
xchg
test
sub
cmp
dec
inc
push
mov
push
and
mov
scas
or
adc
sub
xor
mov
xchg
hlt
cmp
mov
out
mov
sbb
and
popf
test
push
cmc
je
cli
ficoms
and
inc
mov
mov
out
push
dec
adc
push
sub
dec
add
pop
inc
xchg
or
pop
pop
cld
stc
xchg
add
rorb
sub
jge
xchg
stos
xchg
jmp
movsb
mov
insb
or
dec
andb
xchg
and
adc
xchg
bound
xchg
push
xchg
sub
or
pop
sub
in
inc
arpl
and
ljmp
sbb
out
icebp
dec
arpl
inc
ficompl
inc
out
push
into
pop
mov
adc
sub
cltd
push
dec
fdiv
xchg
xchg
adc
lods
out
sub
or
mov
or
inc
jmp
ljmp
cmp
nop
shlb
cmpsl
add
sub
cmp
sarl
or
ret
mov
xchg
aam
or
ds
lret
or
pop
add
andb
mov
push
sub
ljmp
lea
and
sbb
or
lahf
dec
and
sbb
push
call
inc
sub
xlat
cwtl
jmp
adc
push
daa
bound
dec
jmp
dec
jne
or
lods
in
mov
das
je
test
mov
fiaddl
or
test
xor
xor
aam
dec
sbb
arpl
test
divl
and
das
icebp
pop
jnp
push
dec
or
test
inc
push
int3
mov
jg
mov
cmp
mov
ror
sbb
fisubs
jns
inc
mov
xor
pop
pop
sbb
jns
outsl
test
sti
dec
jl
jge
decb
mov
jl
pop
mov
xor
loope
inc
dec
adcb
pop
cmp
daa
pop
lds
out
xor
jp
inc
lahf
pop
rorb
imul
lret
mov
bound
mov
clc
out
test
icebp
pop
scas
push
lea
test
rorb
stos
mov
cltd
nop
lea
or
inc
jno
mov
pop
pop
mov
scas
xor
xchg
neg
in
popf
sbb
test
add
jmp
arpl
inc
cmc
or
jle,pt
ss
dec
push
imul
mov
add
dec
ret
ljmp
jae
popa
mov
pusha
arpl
push
jecxz
lods
test
and
xor
xor
mov
cmp
repz
and
pushl
cmp
and
jmp
add
jnp
adc
xchg
daa
out
cmpsb
sub
outsb
lret
jnp
shrb
mov
mov
adc
and
cli
rcll
sub
cmc
dec
mov
icebp
mov
addl
daa
bound
inc
aad
push
inc
imul
mov
daa
jg
icebp
xor
mov
mov
adc
add
inc
int3
sub
jmp
pop
mov
lret
cmp
imul
movsl
fists
inc
mov
cmpsb
data16
pop
movsb
jbe
test
sbb
sub
scas
adc
lea
je
pusha
add
repz
ljmp
mov
sbb
ret
stos
fwait
jecxz
frstor
pop
fs
adc
push
mull
adc
aam
or
jge
imul
sbbl
sbb
js
frstor
xlat
sbb
xchg
adc
bound
fiaddl
dec
xchg
in
mull
push
bound
pushf
sbb
pop
jge
lret
scas
call
js
lock
inc
popf
cmp
scas
mov
pop
push
xlat
push
in
mov
daa
out
jle
lods
rclb
cmc
and
int3
jle
test
int3
mov
cltd
jle
cltd
setno
cmp
xchg
and
pop
popa
cmc
jae
mov
scas
mov
mov
hlt
pop
cmc
mov
inc
out
sub
push
xchg
add
movlps
outsb
scas
and
in
mov
or
aam
sbb
rorl
fs
dec
bound
xchg
or
pop
mov
icebp
inc
or
mov
fwait
dec
mov
or
frstor
cmp
lret
das
lods
sub
mov
scas
insb
sub
sub
mov
jae
push
inc
loopne
stos
mov
test
mov
sub
jmp
sbb
mov
push
xor
pusha
lods
and
jnp
xchg
cld
sbb
cmp
sbb
call
out
pop
sahf
dec
cmp
and
sbb
cmp
cmp
adc
inc
cmc
dec
or
inc
loop
or
mov
call
movsl
xchg
sbb
cmp
lea
mov
xor
jnp
jbe
xchg
mov
xchg
inc
push
rorl
mov
dec
push
es
jae
dec
jnp
xchg
cmp
push
popf
lds
pop
jbe
lods
ror
and
xchg
iret
test
or
jmp
add
push
andb
lods
mov
nop
loop
leave
icebp
push
punpcklwd
push
lret
jbe
lret
dec
scas
testb
push
mov
dec
sar
stos
jbe
jmp
sbb
fists
jmp
push
in
notb
adc
pop
mov
xchg
xchg
dec
scas
push
sub
fcmovbe
mov
push
fstpl
mulps
je
mov
push
xor
inc
adc
mov
inc
sub
lcall
xor
fucomi
dec
inc
dec
xor
sbb
dec
push
movsl
and
jp
cmp
mov
sbb
inc
inc
call
lds
pop
cmpsl
cmp
movsb
outsl
mov
outsl
movsb
cmpsl
pop
sbb
call
xlat
xchg
ret
cmp
or
pop
jo
push
sbb
sub
pop
icebp
mov
cmp
out
dec
into
xchg
hlt
jbe
mov
aas
cs
rcrl
jnp
scas
adc
adc
in
add
push
cmpsl
pushf
ret
loope
push
sarl
scas
icebp
into
inc
and
stos
push
adc
hlt
sub
rorb
xor
xor
push
mov
lds
addb
fldcw
insb
dec
lock
adc
iret
mov
or
aad
inc
xlat
pop
inc
lds
pop
sar
pop
adc
inc
dec
into
push
push
ret
or
push
or
jp
int3
lods
xor
cmp
adc
test
outsb
push
push
sahf
std
rorl
adc
pop
mov
jmp
cld
repnz
sbb
and
and
sbb
cmp
mov
jg
pop
push
cmp
imul
xchg
xchg
sub
insb
daa
mov
scas
push
scas
or
push
mov
or
fdivl
inc
push
ja
ljmp
xor
mov
daa
inc
push
cmp
or
pop
dec
shlb
sbb
xchg
and
push
sub
xor
pop
xchg
push
loopne
mov
mov
dec
aaa
call
sbb
fcompl
jae
ficomps
je
pop
scas
scas
and
fldenv
sahf
sbb
sbb
shll
int3
and
and
and
mov
cmp
lahf
subl
inc
ljmp
xor
push
inc
inc
mov
xchg
sub
test
daa
inc
push
cltd
add
adc
push
mov
out
rcrl
and
cmpsl
mov
enter
daa
sahf
jne
cltd
adc
adc
sarb
ret
dec
xchg
clc
jae
jae
mov
cmp
push
int3
fbld
pop
push
loope
repz
jnp
mov
mov
push
adc
inc
ret
cmp
mov
test
xor
sahf
cmpsb
dec
push
mov
mov
xchg
cmpsb
inc
fs
sahf
cltd
dec
or
dec
push
sbb
es
add
lcall
pop
or
lcall
fistpll
loope
dec
pop
inc
cmp
push
or
mov
lahf
mov
es
adc
push
add
dec
movsb
ja
xor
cmpsl
mov
mov
into
add
xlat
jnp
mov
gs
out
sbb
sbb
sub
faddl
inc
in
xchg
jbe
std
or
add
cmp
push
xchg
fimull
shr
out
daa
stos
out
jns
push
mov
cmp
xchg
and
adc
mov
lcall
xor
cmp
mov
sub
jp
loope
xchg
ret
dec
icebp
in
cmpsb
sbb
jmp
jecxz
stos
sbb
addb
mov
nopl
pop
lods
adc
test
fsubrl
lea
mov
rclb
xor
daa
lock
mov
cmp
movsl
adc
call
pop
xchg
cld
mov
pop
adc
push
sub
iret
xchg
lret
jl
inc
lods
cld
les
in
sub
pop
scas
push
test
pop
push
mov
xchg
adc
dec
dec
mov
jb
cwtl
xchg
je
cmp
jg
or
xchg
aam
mov
mov
mov
xor
add
jmp
push
jge
or
out
in
xor
mov
insl
insb
fldenv
loop
sbb
imul
rclb
pop
xlat
cwtl
hlt
adc
mov
mov
loop
pop
nop
cmp
clc
daa
aaa
cmp
inc
jae
out
push
cmp
cmpsb
nop
inc
sub
leave
push
dec
daa
xor
daa
into
xchg
fucomi
ja
push
and
roll
or
inc
popa
loope
jecxz
in
inc
push
push
mov
call
sarb
rcrb
dec
jnp
sbb
lds
xor
push
imul
dec
sbb
loopne
dec
push
inc
cmc
lret
sbbb
xchg
sbb
faddl
sbb
push
jnp
sbb
push
mov
loop
je
insb
dec
mov
sub
out
dec
xchg
push
lds
scas
or
mov
inc
pop
push
pusha
cwtl
frstor
cmpsb
pop
push
jbe
dec
inc
out
mov
adc
cli
lcall
xchg
mov
das
push
jns
int3
fwait
pop
aad
mov
sti
jp
inc
inc
testl
mov
push
out
push
das
hlt
add
jmp
movsl
or
daa
xlat
jno
mov
rclb
push
aaa
mov
daa
rolb
cmovl
in
jecxz
lods
jg
clc
adc
imul
dec
xlat
jmp
pop
xchg
pop
daa
in
pop
inc
pop
and
cmovl
mov
jge
mov
push
and
test
mov
push
mov
jl
jle
scas
jns
xchg
in
bound
mov
and
xchg
aas
popf
pop
repnz
pop
xor
sub
add
fwait
loopne
pop
xchg
daa
test
mov
test
rorl
arpl
in
sub
out
push
dec
sbb
scas
xchg
test
xor
pop
dec
movsl
cmp
sbb
mov
sub
jmp
xor
push
scas
mov
pusha
loop
push
rorb
std
xchg
shr
xchg
mov
dec
mov
movsb
and
mov
stos
out
loop
pop
push
lods
cmpsl
cli
ja
push
inc
pop
imul
sbb
fwait
lods
dec
sub
mov
and
and
dec
mov
add
loop
lcall
sbb
push
enter
ja
mov
adc
nop
std
je
es
mov
lock
das
ja
ss
mov
mov
imul
call
aam
inc
repz
cmp
mov
fisubl
xchg
dec
bound
pop
push
aas
inc
add
mov
sbb
movsb
sbb
hlt
push
push
mov
mov
sub
jnp
movsb
stc
imul
jno
pop
and
cmp
mov
movsb
loop
popf
mov
fwait
out
add
push
loope
loope
fsubl
jae
in
daa
outsl
sbb
mov
sbb
xchg
or
jl
mov
dec
inc
add
adc
and
xchg
pop
es
pop
call
add
mov
scas
push
aad
insb
and
addb
lcall
iret
xchg
mov
inc
nop
aad
cmp
mov
xchg
cmp
aaa
jo
aad
loop
mov
or
jle
jmp
pop
cmpsb
andl
and
mov
aad
jle
lds
fsubs
jmp
jo
scas
sbb
cmp
out
mov
push
hlt
push
jg
pop
lcall
pop
outsb
jae
sbb
aam
insl
std
pop
adc
xchg
icebp
lcall
mov
pop
std
sub
scas
sbb
divb
shrb
inc
jns
cmpl
dec
cmp
dec
sub
dec
mov
cmp
lcall
pop
mov
stos
outsl
mov
movl
or
sub
xchg
into
repz
and
adc
mov
sbb
inc
mov
out
jg
dec
mov
sub
inc
xor
mov
rorl
nop
imul
dec
jo
popa
dec
jne
ret
xchg
push
and
add
jb
fdivp
int3
cmp
and
add
addr16
add
aam
insb
dec
dec
test
into
jge
sub
mov
mov
jmp
push
mov
fistl
iret
mov
fisttpll
ret
scas
inc
xor
mov
xor
aam
popf
sbb
mov
aas
test
leave
pop
insb
lods
push
lds
sbb
sbb
inc
lcall
rolb
test
jmp
inc
push
mov
cs
int3
adc
cltd
pop
das
ljmp
sbb
mov
movb
fidivl
sbb
fstl
mov
mov
xchg
mov
or
arpl
inc
inc
mov
or
dec
sahf
shrb
mov
or
fwait
lahf
jb
arpl
fisubs
lahf
test
push
sahf
and
sub
sbb
insb
jno
sub
sbb
mov
adc
mov
dec
fimull
popf
jns
aas
xchg
arpl
mov
or
jmp
outsl
push
into
push
insb
arpl
mov
dec
mov
in
ds
inc
repz
sbb
andl
daa
mov
dec
sbb
pop
sub
dec
outsl
and
mov
dec
sbb
dec
inc
mov
mov
sarb
add
gs
fistps
test
or
xchg
dec
sbb
xchg
mov
repz
jg
scas
dec
es
stos
lods
daa
ficoms
adc
insl
inc
mov
lea
mov
daa
cltd
lock
scas
out
pop
mov
pop
add
inc
iret
mov
out
ret
pop
mov
hlt
sub
shr
cmpsb
ljmp
inc
ds
mov
je
test
mov
cmp
and
or
mov
arpl
mov
cmp
scas
jle
xor
push
add
inc
adc
inc
xor
push
loopne
into
cmp
xchg
repz
lods
fldpi
or
in
hlt
cld
push
pop
stos
xor
or
xor
and
pop
in
outsl
push
adc
pop
sti
mov
sub
aad
aas
jnp
mov
iret
push
pop
sbb
popa
pop
xor
stos
sbb
addl
dec
mulb
push
mov
sub
lods
mov
shlb
jno
sbb
repnz
sbb
add
out
lret
adc
xor
daa
fs
pop
inc
push
xchg
jmp
adc
sbb
ret
sub
ja
lret
pop
rcrb
ljmp
jns
dec
arpl
sub
lret
daa
cmp
les
add
jne
adcb
shll
and
inc
into
xor
in
psubsb
stos
cld
cmpsb
sbb
es
cmp
or
cmpsl
hlt
or
mov
xchg
les
inc
adc
xchg
rorl
sub
or
xlat
leave
mov
pop
stc
test
xchg
or
iret
jbe
push
test
mov
push
cmc
popa
in
fwait
lea
das
lret
pop
in
cmp
push
xor
push
inc
dec
or
push
jmp
cld
in
imull
sbbb
sbb
js
and
in
or
push
mov
add
inc
xchg
push
sahf
lods
rorb
cs
cmpl
scas
adc
mov
stos
mov
mov
lds
enter
or
adc
mov
dec
lock
push
mov
sahf
int3
mov
sbb
xchg
jo
int
push
xchg
fwait
pop
outsb
repz
or
lret
popa
mov
push
sub
jbe
daa
add
dec
stos
mov
test
xor
jp
push
test
inc
pop
aas
jno
sub
xchg
pop
add
pop
dec
repz
mov
rcll
sub
out
stos
insl
daa
adc
push
mov
sbb
cmp
fsubrp
inc
hlt
ret
pusha
adc
sarb
dec
inc
dec
dec
test
fstps
jb
cmp
test
inc
pop
pushf
sbb
loope
loope
and
cmp
mov
stos
dec
adc
xchg
popa
repnz
ds
push
cltd
out
jne
sahf
out
data16
push
mov
xlat
ret
cmpsl
push
fdiv
addb
adc
loop
ljmp
jnp
cmpsl
inc
das
movsl
mov
xchg
addr16
sahf
daa
mov
inc
iret
xor
mov
ret
repz
cld
negb
xchg
jl
sti
or
cmpsb
fldenv
scas
cmp
sub
popf
mov
or
scas
push
and
out
push
mov
inc
and
mov
pop
stos
aas
pop
les
adc
inc
imul
mov
jb
in
sub
xor
daa
cli
adcl
inc
into
aam
mov
mov
add
dec
scas
sub
xchg
cmp
adc
sbb
push
jno
imul
jbe
insb
cmc
cmpl
adc
push
jns
mov
pop
or
sub
shlb
daa
mov
push
imul
adc
sbb
ret
pop
popa
insb
in
push
rcrb
jb
jmp
cmpsl
inc
xchg
sub
and
mov
and
jp
push
jnp
imul
pop
lcall
dec
ljmp
xchg
or
jmp
add
mov
ds
sub
daa
sbb
icebp
out
dec
push
aas
arpl
push
push
cmp
adc
fldt
jg
push
int
push
xor
jno
dec
aam
test
call
push
adc
adc
sub
jae
cmp
push
lret
aaa
enter
and
cmp
out
xor
mov
cmpsb
dec
daa
mov
insl
je
push
inc
mov
inc
jae
addl
lds
push
mul
xchg
js
daa
rcr
sbb
xor
dec
inc
xor
sub
inc
add
pshufw
push
addr16
stos
pop
xor
ljmp
fs
or
cs
daa
mov
cltd
push
xchg
jecxz
aad
std
aam
sbb
add
push
inc
dec
rcrl
imul
mov
sub
pop
mov
loopne
pop
std
cmp
and
cmp
jmp
shll
or
out
push
dec
stos
popf
and
repz
daa
mov
fwait
cmp
rcrb
mov
scas
sbb
xor
adc
mov
jno
iret
mov
sbb
sbb
into
mov
frndint
xchg
lahf
roll
and
aam
and
daa
jg
mov
inc
pop
dec
daa
in
pop
popa
mov
mov
adc
sahf
sti
xchg
sbb
enter
or
aam
mov
lea
push
lods
cmp
push
and
dec
inc
nop
add
je
js
enter
xchg
pop
xor
mov
icebp
nop
jl
xor
fs
jbe
mov
sub
xor
jne
mov
mov
pop
add
push
push
sbb
dec
mov
addr16
out
das
sub
dec
mov
pushf
sarl
filds
addl
sub
mov
rclb
sahf
rorl
mov
push
aad
mov
arpl
xchg
rcl
clc
sahf
dec
dec
imul
ljmp
shr
ja
aas
cmpsl
lds
into
fs
cmpsb
dec
cmc
and
mov
pop
sbb
enter
es
in
pop
mov
add
mov
aas
xchg
dec
xchg
jno
mov
xchg
insb
inc
xor
add
scas
aad
idiv
negb
xchg
xor
adc
nop
xchg
add
cmp
dec
call
mov
pop
dec
dec
jnp
and
popa
in
out
push
outsb
cmp
mov
and
sbbb
test
sub
ret
push
sbb
pop
mov
lret
inc
imul
mov
and
nop
inc
gs
adc
aad
inc
movsb
mov
fcompl
icebp
pop
pop
jecxz
enter
adc
test
dec
and
adc
and
test
pop
or
pop
mov
pop
fisubrs
cmpsl
jno
and
dec
push
fstpl
std
mov
call
in
cmc
in
jbe
pop
pop
test
test
pop
rorl
push
push
xchg
mov
insb
xor
in
adc
xlat
popa
lds
ret
jge
jl
out
and
xor
cltd
cmpsb
cmp
pop
enter
jnp
pop
test
cmp
mov
adc
js
sbb
add
mov
push
jae
inc
outsl
out
nop
xorl
push
lahf
movsl
sti
adc
popa
lods
lret
dec
inc
lea
int3
jns
push
repz
insb
scas
pop
sbb
ret
mov
movaps
daa
dec
adc
dec
push
sbb
add
sub
xchg
adc
movl
lods
dec
inc
pop
mov
push
or
rcll
dec
fwait
cmp
test
adc
or
xlat
je
cli
add
xor
or
or
mov
sbb
arpl
dec
iret
pop
daa
dec
mov
xor
pop
int3
jge
adc
pop
xchg
xor
pop
xchg
pop
daa
sub
daa
cmpsl
push
or
or
pop
sbb
cli
inc
test
fistl
lret
jl
xchg
cmpsl
push
pop
icebp
imul
aas
dec
xor
icebp
and
xchg
sbb
jne
shll
imul
xchg
sub
mov
adc
push
ror
scas
insb
ljmp
dec
sub
and
roll
adc
sahf
out
outsl
stos
mov
stos
jg
fs
xchg
sub
pop
xor
sahf
inc
dec
push
iret
fistpl
jmp
push
adc
out
jo
push
ljmp
lcall
gs
loope
ja
cmpsl
mov
and
mov
xor
daa
and
push
push
inc
inc
stos
push
sbb
dec
sbb
ss
outsl
inc
sbb
jne
xor
outsb
lock
cwtl
push
cltd
inc
mov
popf
pop
out
mov
mov
and
mov
sub
jo
jp
or
sub
call
dec
sub
cmp
push
insb
rcll
push
inc
dec
xor
sqrtps
and
pop
dec
adc
mov
daa
or
roll
rcrl
imul
sub
mov
xlat
xchg
mov
mov
cmp
lcall
mov
sub
ficoms
add
daa
mov
and
jbe
inc
movsl
scas
int3
or
pop
xor
adc
das
popf
sub
mov
mov
dec
in
lods
orl
push
paddusw
call
xchg
insb
mov
cmp
add
cmpsb
push
inc
xchg
xchg
dec
xchg
sarl
dec
rcr
pop
aam
mov
sub
sbb
sbb
cmp
outsb
xchg
andl
out
loop
inc
into
mov
pop
je
adc
cmp
cli
xchg
out
in
aam
mov
test
sbbb
jmp
cmp
dec
call
fstl
mov
aas
or
cmp
sub
jle
daa
mov
pop
lods
popa
push
adc
add
lock
pop
jb
fs
inc
jl
or
int3
adc
stos
stos
xchg
lods
daa
ficompl
shrl
mov
es
jne
xchg
jns
outsb
cmp
call
dec
add
mov
outsl
ror
icebp
mov
and
aad
xor
sti
sub
adc
scas
dec
sub
jge
scas
sbb
sarl
cltd
adc
inc
pop
push
cs
int3
sbb
push
add
jecxz
mov
loopne
adc
push
fildll
ret
adc
fmuls
xchg
adc
out
fistl
jle
icebp
ret
mov
lods
ljmp
sbb
sbb
adc
leave
mov
std
and
add
scas
xchg
imul
mov
lcall
test
daa
rclb
xor
inc
fwait
cli
xchg
mov
scas
pop
lret
xchg
add
dec
movsb
stos
xchg
sbb
mov
dec
movb
fwait
dec
mov
sub
dec
xchg
pop
dec
fnstenv
test
lret
imul
dec
cmc
int3
js
mov
loopne
lods
daa
pusha
rorl
and
jge
sub
into
jecxz
lahf
mov
cmp
xor
dec
lods
repz
mov
lea
jne
mov
push
popf
dec
stos
inc
movsb
jmp
cmpsb
test
daa
mov
inc
fcmovnbe
or
test
and
push
cmp
mov
sbb
inc
push
pushf
lods
pop
cwtl
fdivrl
scas
adc
xchg
es
dec
into
mov
xchg
dec
daa
add
add
push
mov
ljmp
out
mov
mov
pop
cmp
mov
jno
mov
push
pop
mov
mov
sbb
adc
pop
push
pop
add
cmpsb
inc
je
lock
int
lods
not
pushf
adc
cmpsl
insb
pop
cmpsl
jo
in
out
mov
fadds
outsb
imul
ds
pop
mov
cmp
mov
pop
adc
adc
jmp
popa
fwait
mov
imul
movsl
jno
mov
loope
stos
sub
ja
and
int
xor
jae
into
arpl
pop
mov
lea
and
bound
inc
out
add
jle
sub
rol
lahf
xor
mov
pop
or
sbb
imul
mov
cmpsl
cmp
movsb
lahf
dec
testl
data16
mov
hlt
loop
push
insl
mov
mov
mov
and
sub
mov
cmc
stos
inc
push
outsl
adc
adc
inc
es
dec
lea
into
mov
xchg
sahf
fimuls
es
mov
inc
jnp
mov
jmp
sub
lock
int3
fwait
push
shrb
add
mov
sbb
or
adc
out
jno
decl
mov
xor
int3
andl
push
into
arpl
out
adc
mov
and
jl
mov
xchg
cld
mov
lret
fadd
std
adc
lret
cld
pop
and
popa
divps
mov
or
or
cmc
int3
out
inc
loopne
imul
aas
lcall
dec
sbb
shrl
mov
test
xor
cs
ret
xor
sbb
addb
pop
push
adc
pop
es
xchg
mov
shrl
jg
push
cmp
stos
daa
out
das
inc
xor
mov
stos
decl
add
lcall
mov
imul
clc
sahf
sub
and
bound
xor
cmc
fisttpll
nop
push
dec
cmpsb
in
mov
xchg
lahf
fcomps
lahf
pop
flds
mov
fbld
pusha
movlhps
adc
xchg
mov
mov
sbb
daa
iret
jns
inc
mov
mov
in
cmp
or
pop
lods
adc
loopne
mov
xor
out
xchg
cmp
sbb
lods
sti
add
xor
xor
and
filds
push
inc
xchg
xlat
mov
and
add
pop
sbb
stos
pop
xchg
mov
inc
fistl
aad
pop
inc
fcoms
nop
push
lods
test
lods
push
mulb
push
push
inc
ja
inc
xchg
jle
orl
push
imul
fcmovu
mov
xchg
std
stos
bound
jnp
inc
adc
in
sbb
xchg
push
push
imul
add
pushf
mov
cwtl
push
cli
pop
xchg
sbbb
aaa
mov
push
insl
outsl
sbb
in
das
les
mov
rorl
add
push
notl
inc
dec
jmp
ja
or
jne
mov
push
add
inc
pop
aam
mov
test
ret
or
xor
sub
jp
jmp
adc
movsb
aam
adc
fiadds
and
imul
push
or
pop
jbe
mov
pop
repz
xchg
jl
daa
mov
repz
movb
data16
imul
mov
fcmovne
add
sbb
lods
fcoms
add
jecxz
push
cltd
insb
adc
daa
cmpsl
bound
daa
cmpsl
in
dec
add
out
shlb
jnp
xlat
subb
fildll
js
dec
cmp
xchg
mov
xor
ss
cltd
dec
bound
lea
fs
loopne
cmpl
bound
sbbl
out
jno
xchg
andl
sbb
xchg
jnp
xor
mov
add
inc
and
cmp
out
je
push
mov
push
add
das
adc
inc
dec
aas
fnstsw
aas
in
repnz
mov
pop
mov
pusha
sbb
inc
jne
ljmp
pop
sub
mov
sbb
fcomp
mov
test
scas
imul
insb
addr16
scas
xchg
jmp
push
mov
pop
pop
or
movsb
or
out
je
insb
aam
push
test
jmp
or
scas
cs
xchg
fldl
mov
mov
jp
jg
mov
push
cmp
adc
mov
mov
lret
mov
pop
mov
hlt
pop
inc
stc
seta
push
rcll
xchg
call
cmp
movsl
and
mov
mov
mov
or
fimuls
pop
mov
dec
and
mov
ds
adc
stos
sub
pushf
inc
sbb
push
scas
adc
scas
mov
sbb
adc
pop
jne
xchg
bound
lret
pop
push
inc
sbb
mov
sub
lahf
daa
mov
lret
push
adc
std
aaa
xchg
popf
push
sbb
and
jg
out
cmp
jl
mov
out
jns
mov
or
sbb
xchg
mov
orb
out
pop
cmc
or
inc
sbb
pop
jnp
adc
sbb
inc
jbe
adc
jnp
pop
bnd
push
push
mov
cmpsb
mov
sahf
xchg
inc
cs
mov
sahf
inc
push
adc
fwait
das
xor
in
ss
je
setns
aad
or
sub
lret
cmpsb
sarb
out
cltd
dec
cwtl
push
movsl
mov
add
add
imul
mov
dec
cmc
scas
inc
dec
lcall
fs
jbe
mov
lret
int
sub
mov
push
jge
jne
pusha
xchg
stos
daa
xor
leave
dec
dec
mov
xlat
arpl
mov
sub
push
imul
or
mov
adc
aam
dec
mov
stos
das
leave
jne
mov
mov
stos
movsb
cwtl
inc
inc
push
xor
and
cmp
mov
cmp
or
pop
pushf
mov
push
xor
cmc
pop
jp
push
movsl
mov
roll
pop
popa
mov
xorl
cwtl
sarl
call
push
pop
pop
imul
pop
stos
fistpll
sbb
push
mov
xor
into
insl
addl
mov
sub
movsb
sbb
fucom
cmp
fcom
insb
push
jb
pop
xchg
mov
fildll
std
pop
sbb
push
int3
sub
int
lahf
bound
lret
dec
xor
jp
push
icebp
and
ja
inc
mov
ljmp
pop
add
push
cmp
mov
hlt
dec
add
inc
adc
inc
popf
xchg
xchg
inc
cmp
inc
sbbb
pop
gs
xchg
jo
xchg
aam
mov
sub
pop
xor
and
sbb
push
mov
lret
mov
cmp
hlt
sub
xchg
stc
imul
into
pop
repnz
ja
dec
aaa
es
sbb
insb
mov
mov
dec
cmp
out
push
mov
pop
jns
xor
movsb
cmp
sub
mov
cmp
mov
mov
leave
or
aas
nop
dec
mov
sbb
lret
sub
stos
and
in
push
inc
mov
scas
cmc
aas
cmp
loopne
pop
sub
ljmp
or
xchg
mov
imul
push
out
das
iret
dec
out
xchg
pxor
das
imul
das
xchg
sub
loopne
adc
daa
sbb
and
sub
mov
mov
mov
and
iret
xor
add
das
ja
jle
sub
sub
xor
sub
rcll
dec
mov
movsb
xor
movsl
shrd
fdiv
lcall
inc
out
push
js
rclb
ja
shr
push
test
lret
inc
sbb
pop
lods
add
and
repnz
jnp
stos
cmp
pushf
jne
mov
xchg
ljmp
pusha
jo
data16
int3
pop
add
pop
push
cltd
or
mov
inc
js
and
cmp
inc
pop
mov
rorl
out
mov
or
sub
mov
mov
pop
and
push
enter
negb
mov
popa
lret
jg
inc
cli
mov
imul
sbb
andl
mov
push
fs
mov
ret
cmp
stos
popa
je
enter
adc
mov
cmp
ljmp
sub
aaa
cmp
mov
pop
out
adcb
sub
fucomip
mov
addr16
inc
pop
add
sub
sbb
popf
xor
mov
cli
inc
loop
test
and
and
and
mov
lea
mov
sub
xlat
sarl
mov
jae
inc
cwtl
popw
stos
mov
flds
xor
mov
ret
xor
pop
jnp
push
lahf
mov
and
int3
dec
sbb
push
inc
sbb
iret
aam
fwait
movsl
mov
push
cmc
push
mov
and
ljmp
aad
mov
lods
int3
imul
adc
movsl
dec
insl
inc
dec
adc
popa
roll
jg
xor
xor
or
lods
lock
dec
mov
mov
sub
enter
cld
inc
sarb
inc
hlt
dec
int
mov
inc
mov
out
hlt
mov
leave
enter
jp
insl
movsl
popa
cs
test
mov
xchg
sbb
sbb
xor
xlat
sbb
inc
pmaxub
jbe
dec
adc
pop
adc
xor
and
out
jne
in
adc
bound
mov
std
popa
daa
cld
sbb
dec
dec
pop
or
scas
into
stos
mov
stos
stos
adc
bound
mov
inc
or
pop
pop
sub
push
shll
arpl
sub
add
lods
lret
inc
sub
dec
aam
shll
pop
addb
fnstenv
pop
mov
inc
xchg
out
sbb
loopne
sbb
inc
mov
mov
fs
notb
push
jnp
cltd
inc
aad
fwait
adc
fcmovu
add
inc
pop
mov
xchg
adc
and
aam
jecxz
mov
adc
dec
inc
inc
mov
mov
fistps
je
sbb
int
aad
ja
pop
pop
inc
sbb
fsubl
cltd
cwtl
hlt
and
xchg
inc
addr16
pop
cltd
cwtl
push
xchg
mov
mov
jb
xchg
xor
lods
daa
mov
mov
xchg
cmp
sbb
mov
or
xor
rclb
push
push
cmpsb
les
gs
imul
push
out
add
outsb
jae
xchg
out
lock
ds
mov
adc
jge
iret
adc
or
and
push
sbbl
sbb
lea
mov
pop
mov
dec
inc
inc
dec
pop
or
pushf
dec
call
add
or
mov
mov
loope
cmp
jnp
cmp
mov
inc
das
insb
fcoml
arpl
ljmp
or
mov
sub
adc
ret
mov
les
and
xchg
adc
mov
fcoms
out
mov
lcall
scas
gs
mov
sbb
or
sbbl
or
pushf
test
jbe
xor
outsl
aam
js
or
fildll
sub
mov
daa
or
stc
jg
dec
add
adc
push
popa
pop
loopne
pop
sub
dec
or
rol
add
pusha
leave
stos
inc
and
push
sti
mov
or
push
mov
sbb
push
xor
and
xchg
aas
xchg
fs
jbe
popf
mov
and
sub
sbb
aad
fwait
aam
or
shr
push
adc
stos
lock
retw
add
cs
lret
inc
mov
and
out
sbb
jecxz
insb
xchg
or
ficoml
pop
mov
lcall
push
mov
xor
scas
dec
or
fstpt
pop
push
test
mov
loopne
jae
incb
lret
mov
push
mov
imul
jmp
dec
leave
lret
mov
pop
mov
jmp
mov
nop
packuswb
in
test
jmp
cmp
int3
jno
inc
mov
call
lret
inc
sbb
out
les
test
mov
pop
rorl
int3
adc
pop
hlt
jp
mov
lret
imull
mov
push
adc
inc
sbb
or
pusha
int
je
nop
or
ficomps
ja
test
sub
or
push
outsb
cmp
pop
fimull
or
les
jl
sub
mov
out
jns
aam
sbb
cwtl
push
xchg
sar
call
fs
or
stos
sbb
or
jle
push
or
lods
outsb
aad
pop
mov
sub
repz
dec
mov
loop
jne
adc
icebp
sub
and
or
sub
fisttpll
and
in
sti
sub
add
adc
test
cli
adc
cmpsb
rol
push
stos
and
pusha
cmp
dec
dec
push
sub
sbb
loop
call
aad
adc
xchg
iret
imul
test
loopne
loopne
movsl
push
adc
out
inc
out
orl
cmp
lea
xor
cld
jno
addl
das
pop
cmpsl
dec
cli
add
insl
leave
insb
mov
lret
inc
jns
sbb
or
in
mov
push
hlt
sbb
popf
test
loop
mov
mov
mov
scas
pop
lds
mov
fadd
int3
xor
cmp
and
dec
popa
scas
sbbl
cld
loop
adc
lahf
mov
cmp
and
mov
sti
insb
lds
inc
sbb
xchg
rolb
decl
test
fbld
mov
inc
mov
ficompl
test
adc
fstps
inc
mov
mull
adc
loopne
shlb
inc
mov
aad
and
push
std
and
mov
pop
cli
xor
adc
stos
pop
rol
aaa
test
negb
push
xchg
je
fchs
mov
nop
pop
sahf
sti
sbb
mov
xor
scas
es
leave
xchg
cmc
inc
and
rorl
jl
push
add
pop
pop
pop
inc
push
in
inc
or
repnz
xor
imul
movl
dec
push
imul
test
jae
mov
pop
xchg
push
or
std
cmpsl
pop
dec
adc
xchg
imul
ficoml
inc
sahf
shlb
inc
in
inc
push
jl
mov
mov
outsl
insb
sbb
mov
xor
xchg
pop
mov
outsb
cmp
xchg
inc
jo
push
dec
or
jmp
nop
xor
scas
popf
xchg
je
or
pop
mov
mov
or
sub
push
pop
mov
dec
mov
cltd
out
mov
pop
mov
imul
mov
fsubl
mov
push
sub
bound
aaa
sub
push
inc
push
aad
fwait
push
mov
jge
mov
and
pop
movsb
cmp
popl
and
pop
sbb
mov
daa
data16
test
outsl
rcr
xchg
aad
cmp
mov
test
in
movsl
jb
pop
enter
sub
imul
cmp
fisubl
mov
pop
in
xor
inc
jecxz
orb
push
and
push
imul
dec
lds
inc
iret
inc
test
cld
jl
fsubs
dec
inc
pop
movsb
js
ret
add
pop
pop
dec
jg,pt
inc
jbe
sti
std
mov
push
inc
pushf
sbb
ret
imul
pop
aam
mov
or
lods
jge
daa
mov
mov
cwtl
rcll
sub
pop
pop
stc
cmp
out
enter
ret
sbb
clc
add
test
pop
add
jmp
xor
inc
jne
mov
repnz
or
jmp
mov
inc
and
adc
xchg
and
pushf
jl
mov
push
out
stos
call
sbb
sbb
push
sub
and
fsts
xchg
jge
mov
data16
lea
cmp
xlat
mov
fisubl
dec
loop
lret
jg
imul
add
sub
in
push
jmp
xchg
inc
push
pop
cmp
out
push
adc
sub
cwtl
adc
and
test
push
jb
xlat
lods
add
adcb
cmp
mov
nop
stc
es
orb
pop
jmp
cmpl
mov
jns
ror
scas
mul
out
cld
adc
add
sub
xchg
add
out
stc
popf
and
xchg
cmp
jl
cmp
or
push
fstl
push
sub
lret
mov
pop
loop
xchg
in
scas
or
dec
test
push
sub
fadds
dec
add
ljmp
outsb
add
push
decb
cmp
sbb
push
flds
sbb
pop
pop
fists
pop
push
leave
out
add
mov
inc
sub
lret
mov
pusha
mov
setne
stos
xchg
fs
pusha
cmc
pcmpeqd
cld
popf
inc
xchg
ss
dec
cmp
ret
bound
mov
push
flds
adc
ret
mov
test
nop
push
dec
pop
andl
movsb
sbb
inc
dec
jle
push
dec
pop
xor
scas
sub
je
push
data16
mov
inc
out
mov
insb
inc
add
aad
faddl
push
daa
aad
addr16
inc
insb
insl
daa
dec
sarl
push
in
ret
mov
xchg
sbb
sbb
jge
sub
fmuls
or
xchg
pop
aaa
mov
sbb
xchg
ja
out
mov
repz
inc
loope
test
cld
stos
xchg
xchg
jge
ret
inc
out
div
aaa
and
sub
lahf
jp
jge
cmp
pop
mov
pop
dec
and
xchg
inc
cmp
jl
ja
lahf
jne
daa
pop
lods
stos
mov
xchg
scas
mov
dec
lret
cmp
repz
lods
sbb
mov
mov
xor
sbb
jo
stc
mov
mov
pop
push
jmp
xchg
pop
adc
xor
jl
loop
push
mov
int3
addr16
enter
jno
xchg
xchg
jge
lahf
jl
sbb
dec
lods
out
mov
out
mov
push
push
mov
mov
popa
insl
sub
in
std
jnp
ja
xchg
sbb
clc
pop
adc
sub
mov
ja
pop
cmovae
stc
sub
mov
sbb
jmp
mov
push
sub
xor
addr16
rcll
in
mul
push
or
test
jno
mov
or
xchg
sub
jo
jb
xlat
jmp
cmp
push
or
push
mov
iret
push
pop
sbb
dec
push
xchg
push
shrb
push
movsb
mov
js
imul
xchg
shr
enter
call
and
or
cmp
stc
fimull
leave
sbb
sti
sbb
mov
or
xchg
cmpsb
lea
dec
cmp
pop
jns
or
cwtl
cmp
out
pop
int
xor
ficomps
adc
sbb
shlb
divb
mov
dec
lea
lret
or
sub
xchg
testl
sbb
std
mov
xor
push
or
cwtl
ja
daa
xor
aam
enter
jne
orl
cmp
in
insb
inc
adc
mov
cmpl
call
cmp
jg
lods
popa
repz
inc
push
sbb
cmp
adc
mov
ds
shrl
xor
les
sub
shlb
cmp
adc
inc
xor
jmp
xor
sub
inc
lea
inc
movsl
mov
test
adc
out
in
lret
push
adc
in
sti
pushf
loope
mov
xchg
fidivrs
or
test
pop
imul
jmp
daa
arpl
sar
lret
stos
ljmp
sub
xor
pop
and
pop
and
jae
aas
test
pop
push
dec
xchg
mov
sub
inc
cltd
test
fwait
xchg
jne
jle
mov
filds
setp
lret
xor
xchg
scas
bound
ficompl
daa
and
cld
sbb
nop
inc
js
aas
inc
rorl
mov
lret
cmp
xlat
das
rcrl
stc
cld
sti
adc
xor
sbb
or
push
ds
add
jne
and
jecxz
ret
fisubs
push
ds
insl
pop
mov
ret
nop
jmp
movsl
mov
andl
dec
pop
js
insb
inc
cmc
mov
jo
xchg
cmpsl
arpl
and
ljmp
dec
lcall
insb
add
adc
setl
mov
mov
dec
fdivs
jecxz
aad
xchg
ja,pn
shl
dec
aad
insl
mov
pop
sbb
clc
mov
inc
addl
xor
loopne
and
stos
lahf
mov
insb
xchg
inc
xor
sbb
iret
aad
cwtl
xchg
out
mov
adc
lea
test
pop
xchg
dec
add
mov
mov
mov
push
inc
stos
lret
stc
sbb
or
mov
xor
sub
gs
ljmp
jl
lods
sbb
cld
pop
and
aaa
stc
jle
inc
pop
int3
std
add
sbb
add
push
daa
in
mov
pop
dec
lahf
cmpsl
xchg
mov
sbb
xor
sbb
roll
mov
pusha
jge
pop
pop
fwait
pushf
mov
xchg
aam
inc
movsl
outsl
lcall
pop
hlt
pop
pop
add
xorb
aaa
lods
xchg
fstps
push
stc
aam
fdivrl
xor
or
mov
in
push
in
rcl
xchg
cwtl
sbb
daa
ret
adc
jge
test
jb
out
and
xchg
inc
fidivrs
xor
and
xchg
adc
int3
add
sub
cwtl
mov
sbb
mov
pop
lock
xor
lods
lock
jo
mov
push
xor
push
bound
jns
xor
out
sbb
cmpsb
and
mov
lock
decb
and
jae
or
and
jns
arpl
je
mov
push
ss
xlat
mov
out
mov
or
test
lret
dec
sub
pusha
jns
cmc
jo
loop
push
insb
push
imul
lock
push
imul
dec
addr16
sahf
cwtl
imul
jle
dec
mov
push
loopne
inc
pusha
jnp
lods
mov
pop
imul
nop
out
cltd
adc
xor
cmp
cmp
cmpsb
cli
mov
mov
fldcw
or
int3
jbe
adc
sub
or
aaa
inc
dec
repnz
aaa
daa
hlt
into
les
fucomi
cmp
sub
inc
shlb
jae,pn
cmc
lret
scas
adc
leave
lock
test
xor
int3
xchg
mov
push
pop
sbb
insb
inc
mov
sub
sub
out
shrb
add
and
fimuls
jae
push
mov
jge
mov
push
adc
xor
ja
test
mov
add
jbe
push
scas
jno
repz
rcrl
jmp
pop
fs
in
lahf
ss
push
adc
loop
aas
popf
repz
out
and
aaa
icebp
ja
outsl
pop
ds
sbb
sarl
insb
mov
int3
adc
pusha
add
jecxz
sti
mov
xchg
and
aas
xor
sbb
xor
pop
ret
sbb
outsl
movsl
add
xchg
mov
and
bound
pop
push
mov
cmpsb
fs
and
pop
inc
idiv
inc
stos
push
shrl
jecxz
sub
imul
xchg
lcall
les
data16
icebp
out
or
scas
test
mov
cmp
and
dec
add
pop
lcall
cmpsl
cmp
jp
lock
dec
lret
mov
int
inc
and
push
aaa
jns
cmp
mov
les
or
inc
jae
out
sub
dec
dec
jae
push
pop
addr16
mov
ret
mov
popf
push
mov
or
dec
cmpsb
or
fdivrs
jl
repz
mov
mov
mov
cmp
xorl
inc
xchg
inc
and
lcall
adc
mov
and
dec
jo
xchg
rcll
dec
fsubrs
mov
movl
lret
imul
nop
pop
inc
movsb
or
ja
pusha
add
outsb
aam
mov
xchg
dec
lock
push
push
lahf
cmp
std
jae
push
and
inc
out
arpl
or
int3
adc
jbe
adc
and
jae
push
inc
fs
push
loope
push
aas
test
sarl
outsb
pop
jl
mov
sub
jo
sub
xor
pusha
mov
rorl
mov
pop
outsb
outsb
xorb
dec
or
adc
data16
loopne
or
dec
pop
push
mov
sarl
outsl
adc
sub
cmp
pop
stos
pushf
jb
dec
imul
sbb
or
shr
mov
bound
mov
dec
popf
test
xchg
mov
mov
std
mov
in
jne
test
ja
lret
mov
mov
mov
lods
pop
push
sub
enter
adcb
into
sarl
outsl
sbb
aad
test
add
adc
dec
loop
call
xor
add
call
call
es
and
jns
jns
inc
jmp
int3
xor
mov
lods
dec
add
imul
cltd
mov
outsl
inc
iret
or
mov
int3
or
loop
out
jl
cmp
xchg
push
mov
adc
mov
in
into
push
inc
xchg
or
pop
xchg
adc
in
std
inc
in
mov
cmp
inc
sbbl
decb
in
mov
mov
loope
jno
lock
cltd
pop
out
fdivs
sarl
jo
scas
jecxz
decb
cltd
call
lret
es
movb
push
setnp
mov
mov
loopne
sub
sub
push
push
insl
std
icebp
imul
dec
push
push
cmpsb
rcl
cmc
sti
xchg
cmp
loope
lret
in
outsb
pop
imul
add
loope
fists
add
push
inc
mov
lods
xor
in
outsl
lods
xchg
jle
fdiv
inc
push
xorl
or
push
iret
pop
rol
out
lret
or
andl
lcall
add
inc
xchg
inc
sarl
jo
inc
jb
or
and
and
adc
mov
in
test
dec
out
lret
adc
mov
push
arpl
in
out
jg
fmuls
xchg
cmp
cmp
repnz
mov
inc
fcoml
pusha
jnp
aas
mov
addr16
dec
push
mov
mov
adc
inc
cwtl
jl
inc
add
inc
jge
inc
arpl
inc
dec
jmp
pop
jbe
sarl
jno
es
std
scas
enter
jo
add
push
call
pop
jbe
sub
xchg
lret
mov
pushf
lcall
and
imul
les
push
stos
add
lcall
arpl
cmp
int3
push
sbb
idivb
pusha
aaa
pop
dec
and
cmc
aas
daa
jne
ret
jp
jb
lcall
fcomip
sub
jle
mov
movsl
lcall
int
in
sbb
adc
lcall
aaa
test
pop
push
cmp
sti
inc
lcall
xchg
aas
mov
inc
or
mov
xchg
add
in
xchg
xor
movsl
sub
inc
pop
push
xlat
xlat
or
sbbb
je
xor
cmc
lods
mov
test
bnd
popf
mov
cmp
pop
shrb
ficoms
out
jbe
mov
xchg
jmp
add
mov
mov
add
cmpsb
mull
mov
sub
sub
std
jb
inc
fstps
inc
idivb
push
scas
fistpll
mov
or
out
cmpsb
in
call
xor
push
das
out
sarl
jb
mov
and
ja
pushf
push
inc
jmp
test
pushl
jmp
push
call
test
out
xor
add
into
sbb
inc
mov
inc
test
push
jp
repnz
mov
shr
pop
lock
ret
mov
xchg
pop
bnd
jae
xchg
sahf
xor
pop
mov
cmpsl
cmp
cmpsb
hlt
push
movsb
gs
test
inc
inc
adc
pop
adc
mov
xchg
outsb
out
std
add
cmp
les
ret
in
sbb
aas
outsb
mov
sbb
jnp
push
xor
jns
xchg
xlat
test
fucomip
jmp
sarl
jae
cltd
sub
test
fwait
mov
pop
or
push
fwait
out
add
adc
and
pop
lea
negb
dec
lods
xchg
jne
mov
out
mov
repz
fildll
neg
xchg
push
mov
lods
mov
dec
xor
pop
nop
push
cld
or
icebp
rorb
push
lods
fbstp
fildl
dec
rcrl
imul
ds
sbb
xchg
icebp
pop
xchg
xchg
jmp
aas
iret
sub
cmp
cmp
dec
nop
clc
in
dec
mov
xor
and
xchg
sbb
push
push
fiadds
or
call
push
stos
jp
divb
cmpl
outsb
mov
push
lock
neg
mov
and
rorb
sti
sbb
in
xchg
push
xchg
out
sbb
leave
addr16
out
mov
cmp
cwtl
push
lea
call
pusha
call
call
mov
push
pop
xor
pop
push
stos
mov
push
stos
xchg
in
jp
pop
cmpsl
popf
adc
rclb
ret
jnp
jbe
jecxz
push
dec
push
mov
cmpsb
jno
mov
rcrl
sub
in
push
test
dec
jae
cmp
pop
pop
cmp
xchg
mov
jne
cmp
jae
arpl
jns
jae
int3
push
or
push
std
dec
xor
xchg
dec
inc
fildl
push
int
aas
nop
xor
xchg
xchg
pusha
inc
jb
sbb
mov
xor
adc
xor
pop
adc
movl
shll
mov
ret
lods
push
shl
jp
ljmp
xlat
xchg
dec
jo
add
mov
ret
call
dec
push
lcall
jmp
or
imul
add
out
adc
scas
jo
cmp
mov
addb
jne
mov
ja
and
xchg
or
mov
mov
pmaxsw
or
sbbb
mov
std
addb
xor
ja
push
adc
push
pop
mov
cmp
sub
dec
mov
cld
repz
jno
shl
ret
in
outsb
movb
pushf
std
jnp
push
int
or
je
repnz
cld
add
call
movb
pushf
mov
lea
call
bts
not
mov
cmc
cmp
pushf
and
cmp
mov
add
sub
push
add
push
pusha
jmp
rol
call
xchg
mov
jne
pop
bswap
call
push
call
mov
outsb
push
dec
call
inc
out
jmp
sbb
add
je
xor
scas
and
dec
aaa
subb
addr16
cmpsl
pop
test
jae
add
inc
lea
sub
mov
inc
into
popa
loopne
ret
shrl
xor
add
push
mov
call
daa
enter
icebp
mov
push
sbb
lret
lret
ret
sub
jbe
cmpsb
or
dec
lret
dec
call
inc
xor
push
call
and
pop
movsl
mov
mov
dec
call
mov
push
push
call
pusha
cmp
test
lea
jne
pushf
pushl
lea
je
dec
mov
lea
add
ror
shl
inc
clc
mov
jmp
jmp
je
addb
fs
repz
test
shl
insl
fwait
fwait
addr16
mov
cmpb
daa
out
cld
sub
aas
inc
loopne
or
xchg
cltd
clc
dec
or
movsl
push
and
iret
popa
mov
in
into
mov
xchg
push
add
cmp
jmp
ror
mov
fcoml
out
lret
push
nop
icebp
xor
pusha
mov
cmp
xchg
sahf
or
push
lcall
int3
cs
arpl
in
and
dec
xor
cmp
lret
dec
jp
idivl
mov
mov
loopne
add
cmpsb
mov
stos
insl
inc
jg
inc
loopne
lahf
dec
loope
mov
cmp
outsl
lcall
mov
sar
sub
push
dec
inc
xchg
jne
mov
std
push
cmp
jno
sub
push
push
cmp
add
pop
mov
ret
testl
cld
xorl
sahf
sub
inc
xchg
pop
into
shlb
rcl
ja
ret
ljmp
and
outsb
mov
xchg
jbe
inc
subl
rorb
mov
stos
mov
fs
lahf
mov
adc
dec
dec
shll
fisubl
jmp
push
ret
fstpt
and
jg
lret
stos
push
mov
ljmp
jl
xchg
mov
push
std
movsb
rolb
sarl
js
add
dec
test
mov
js
sbb
pushf
sub
out
mov
movsb
or
add
aam
push
push
into
sub
ret
lcall
rolb
movsb
sub
xchg
mov
or
or
mov
push
sub
test
jae
jb
xor
inc
imul
fsubrs
sarl
js
sahf
mov
je
sbb
cmp
xchg
mov
inc
xchg
test
int3
pop
dec
sahf
jl
test
and
sub
pop
add
bound
push
mov
stc
cmp
add
add
int
xor
lea
add
inc
jo
xchg
fistpl
imul
pop
sti
add
mov
mov
out
sub
push
popf
push
sub
dec
bound
mov
bound
lret
xor
sub
jecxz
arpl
add
mov
pushf
mov
add
mov
dec
gs
xchg
rcrb
mov
lea
sbb
lahf
xrelease
jge
mov
mov
cmp
lret
cltd
mov
adc
aad
cli
daa
repnz
adc
sbb
cli
int3
adc
push
jp
dec
mov
mov
mov
jle
push
fs
xor
and
cs
add
jg
pop
mov
pop
add
lock
test
lahf
rcrb
iret
dec
in
inc
add
jmp
sbb
imul
push
clc
pushf
pop
out
daa
adc
push
jo
test
ud1
jp
sub
test
add
sbb
mov
js
add
inc
push
or
std
sahf
stc
in
mov
add
cmp
jmp
movl
lea
jl
pusha
pushl
popl
push
pushf
pushl
ret
pushf
pusha
jmp
push
call
push
dec
push
jle
sarb
adc
in
cmpsl
lea
inc
xor
or
imulb
jg
hlt
in
dec
orl
imul
insb
jp
shlb
adc
lods
leave
call
lret
or
cmp
sbb
dec
popa
fwait
mov
or
cmpsb
cltd
and
fsubp
jecxz
inc
jb
adc
imul
cmpsl
cmp
add
jmp
ljmp
gs
ret
cs
in
mov
add
int3
call
mov
icebp
in
notb
outsl
mov
fs
imul
sub
jge
out
mov
jnp
add
ror
mov
xor
add
and
inc
mov
push
mov
inc
repz
shrb
sbb
repnz
fnstenv
iret
ret
daa
fiaddl
popf
ja
mov
inc
enter
lret
pop
fdivrs
lcall
repz
sarl
jnp
pop
add
in
xchg
insb
add
jecxz
repz
mov
movsl
test
or
inc
movsb
cmp
idiv
mov
push
in
aaa
stos
dec
and
mov
gs
cwtl
nop
insl
sub
roll
hlt
inc
ja
push
adc
hlt
push
loope
sbb
out
mov
mov
jle
cmp
ljmp
les
cmp
cmc
mov
xchg
ret
adc
jg
dec
scas
sarb
jns
mov
sbb
pusha
pusha
cmc
test
push
call
pushf
mov
mov
call
insb
sub
xchg
mov
mov
jnp
inc
popf
add
jnp
insl
int3
ret
data16
fmull
lret
mov
test
arpl
mov
sahf
jbe
mov
outsl
jbe
js
cmc
mov
inc
pushf
push
ret
fiaddl
gs
sub
aam
adc
fwait
mov
test
mov
jg
push
call
mov
add
xchg
nop
lods
and
xlat
dec
lods
leave
jg
cld
sbb
or
add
in
subb
dec
ljmp
mov
or
repz
jne,pn
mov
mov
ss
adc
mov
in
adc
fwait
iret
scas
pop
jb
dec
inc
cld
xor
push
clc
popf
lea
lea
and
push
mov
cltd
mov
fsts
cmp
adc
jae
and
ret
ja
cmp
fldcw
andl
je
insb
shl
mov
and
movsl
outsl
mov
xchg
jne
sbb
add
dec
jmp
gs
sahf
cmp
cwtl
ljmp
insb
in
pop
jl
fmull
out
fsts
xchg
cltd
js
dec
int
inc
flds
loop
sbb
stc
icebp
mov
push
int
hlt
push
into
xchg
inc
dec
dec
adc
loop
mov
scas
sahf
fistps
xchg
iret
mov
add
cmpl
push
pusha
cmp
sbb
dec
inc
aam
xchg
and
dec
es
push
cmp
pop
jl
cltd
dec
xchg
dec
xor
pushf
rcr
out
jno
outsl
jge
inc
add
adc
jo
xchg
lods
xor
push
sbb
jg
push
sarb
sbb
and
fadd
mov
adc
pop
adc
mov
imul
repz
or
cmp
and
push
call
mov
jo
push
call
push
push
call
ret
xchg
push
call
fdivr
push
call
dec
mov
pop
in
insl
je
add
xchg
push
iret
push
call
push
popa
adc
or
cmp
test
aad
outsb
stc
mov
dec
or
cmp
mov
mov
push
pop
pop
mov
rcrb
cmpsb
sbb
adc
add
push
and
fptan
jnp
mov
popa
imul
mov
mov
add
sbbl
adc
and
xorb
xchg
xchg
lock
sbb
inc
sub
and
lods
lret
or
sarl
jg
xor
ret
push
push
addb
ror
test
sub
out
jo
out
cmpsb
mov
push
pop
les
mov
loope
push
cmp
scas
into
shl
daa
fimuls
nop
movsl
or
sar
mov
shl
shld
ror
sub
xor
add
sbb
mov
stc
bt
stc
bt
sub
call
lea
ja
rcl
shr
add
clc
shr
shrd
mov
bts
add
jmp
push
call
cmp
hlt
add
add
insl
xor
frstor
dec
mov
and
fildl
scas
lods
lods
dec
adc
in
sub
filds
mov
xchg
lret
test
xor
cltd
js
test
lret
orl
add
ja
and
idiv
sbb
jg
cmp
les
mov
sbb
xchg
xor
mov
xadd
cmp
sahf
sub
pusha
cmp
rcrb
inc
aad
sbb
sbb
add
dec
cwtl
sahf
mov
mov
das
pop
clc
fistpll
int
jae
push
test
in
or
test
adc
sub
xchg
jg
std
jge
sbb
fnstcw
adc
and
push
std
das
mov
lods
sub
lds
ja
idivb
or
mov
sahf
in
es
fcomps
xor
test
and
hlt
lds
pop
and
mov
loopne
outsl
push
dec
mov
sarl
cmpb
movsl
inc
lret
icebp
popa
aaa
jp
lcall
iret
or
mov
dec
mov
iret
lds
fcmove
adc
cmc
push
push
rol
pop
cmc
xchg
pop
js
add
dec
and
mov
mov
mov
add
repnz
add
cmpsb
ffreep
mov
add
cltd
add
push
jecxz
std
jbe
int
fs
or
sub
pushf
mov
sarl
cmp
xchg
jo
je
pushf
dec
sub
or
jns
gs
je
mov
aas
aaa
xor
and
mov
nop
cmp
dec
je
adc
dec
inc
fcmovne
push
sarb
pop
push
sub
and
adc
pop
or
pop
jge
rol
or
call
in
pop
push
jb
enter
stos
fstl
xor
and
sbb
mov
mov
es
movsb
lret
test
jbe
dec
or
and
jmp
leave
cwtl
loope
decb
fwait
sarl
adcb
sub
fiadds
mov
inc
shrl
dec
xchg
jecxz
dec
and
negl
push
pop
or
add
movsb
popa
push
sbb
pop
cli
pop
inc
add
rorb
or
outsl
mov
cmp
outsb
inc
pusha
jb
cli
rorb
jns
lcall
lea
or
adc
mov
ja
cwtl
es
ss
psllw
cmp
std
mov
shr
adc
add
or
test
sbb
clc
call
push
call
std
pop
pop
gs
lods
jbe
jno
popf
adc
js
mov
lcall
cld
push
sub
fs
scas
popa
pushf
mov
ss
gs
in
pop
push
adc
std
div
pop
movsb
pop
mov
lock
insl
rcl
push
sbb
fsubs
pop
sbb
repz
out
addr16
mov
or
sbb
lret
jne
test
cmp
scas
push
fucomip
ret
push
jp
inc
daa
mov
aas
pop
hlt
mov
in
inc
pop
add
pop
clc
cmp
sbb
adc
dec
xchg
sbb
jbe
das
xchg
in
dec
inc
add
pop
or
out
fldcw
xchg
push
sbb
jb
xchg
hlt
jbe
push
pop
inc
cltd
adc
fs
inc
mov
into
rorl
sarl
xchg
add
sub
movsb
arpl
fwait
sarl
or
jbe
jb
decl
test
mov
in
ja
outsl
ret
ret
fcom
hlt
push
rep
or
inc
add
dec
jbe
inc
incb
inc
test
jmp
fs
pop
and
push
cmp
xchg
jnp
dec
loope
dec
sbb
iret
aas
and
outsl
shll
movsb
in
jns
push
push
out
inc
pop
xor
pop
shlb
mov
cmpsl
cli
or
mov
pop
sahf
cmpsl
add
xor
cmp
add
xor
aam
not
aas
mov
rcr
stc
inc
push
add
call
add
inc
gs
popa
jbe
inc
imul
add
sub
test
int3
repz
enter
push
xor
shl
mov
pushl
pushf
ror
rol
add
pusha
and
neg
mov
pushf
pushf
test
mov
lea
je
push
bt
pusha
cmp
sub
jmp
push
call
xchg
mov
lea
je
pusha
mov
jmp
push
call
fisubs
push
pusha
movb
movb
lea
jmp
push
call
and
push
rol
stc
mov
push
jmp
jns
inc
lock
adc
sub
pop
cmp
dec
jge
and
loopne
in
lret
fstpt
and
js
pop
cwtl
jns
jg
sti
shrl
lock
mov
pushf
jmp
xchg
loopne
inc
roll
xor
sbb
mull
and
daa
mov
jle
sahf
sbb
int3
xor
xchg
lahf
mov
lea
stos
outsl
xor
cli
mov
mov
mov
pop
dec
int3
push
mov
and
sarl
xchg
cld
push
call
ds
sbb
push
cs
xchg
mov
xchg
imul
xchg
push
aam
int
rolb
sub
lea
pop
lahf
cmp
test
and
imul
sub
sbbb
cmp
mov
jge
mov
lret
iret
cmp
and
jae
movsl
gs
mov
fwait
aad
ficoml
xchg
lcall
sub
insl
jnp
sarl
xchg
lea
jae
xor
shld
neg
stc
mov
shld
mov
rcl
bswap
sub
shl
mov
bt
sub
stc
repnz
pushf
call
push
call
in
mov
aad
push
jno
add
push
jp
xchg
mov
mov
fimull
mov
or
xor
outsb
sbbb
mov
mov
scas
movsb
sbb
pop
int3
ljmp
or
sahf
mov
mov
aas
mov
jl
mov
pusha
mov
mov
mov
inc
inc
mov
dec
rcl
xchg
mov
push
call
jno
jg
sbb
push
test
test
jg
cld
lret
xchg
jo
fstpt
test
scas
int3
cmp
cli
jmp
xor
dec
push
loope
and
and
mov
push
je
arpl
cmpsb
adc
iret
imul
popl
filds
pushf
outsb
pop
inc
test
add
lea
inc
repz
ljmp
jo
mov
arpl
jns
and
into
and
push
sarl
xchg
xor
out
mov
popf
sub
adc
and
and
mov
int3
ficoml
dec
and
jg
xor
in
cmp
mov
xlat
lds
mov
int
mov
mov
cli
ror
lea
cmp
pop
mov
cs
add
js
mov
jbe
pop
inc
xorb
aaa
pop
lds
rcl
cmp
jge
aam
lret
pop
daa
pop
pop
pop
mov
stos
lcall
aad
fcmovb
loopne
mov
xor
sar
mov
adc
hlt
addb
cmp
push
in
arpl
dec
pusha
lock
lahf
int3
add
mov
lea
ss
or
lods
push
and
out
test
mov
pushf
mov
jbe
sub
notl
pop
cmp
xor
or
dec
sbb
jnp
adc
lahf
xchg
adc
push
cmp
std
scas
popa
out
out
imul
push
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
push
aad
call
ja
std
call
cli
and
enter
add
out
mov
cli
xchg
arpl
inc
and
int
data16
cld
in
dec
inc
sbb
js
push
mov
daa
cmp
push
in
lahf
push
pusha
jbe
icebp
pushf
in
push
fistl
inc
sub
in
loope
cmp
push
adc
xor
out
popf
xor
cs
bound
add
push
adc
cmp
fadd
add
subb
adc
cmp
pusha
fwait
test
jns
xor
jmp
sarl
mov
xchg
fimuls
add
icebp
push
call
sub
mov
movsb
bound
loopne
sub
adc
int
cs
es
nop
les
dec
jns
add
stc
stc
dec
pushf
adc
cld
push
pushf
xchg
cmp
les
out
mov
pop
or
out
lock
xchg
sbb
cltd
nop
pop
push
dec
rorb
imul
das
cmp
lahf
mov
out
lahf
inc
mov
mov
out
xor
sbb
sbb
adc
adc
shll
repz
pop
aaa
xchg
adcb
adc
mov
scas
int
repnz
movsb
sbb
test
push
rclb
jmp
adc
add
jl
aaa
aam
imul
jecxz
dec
int
adc
jg
mov
mov
adc
cmp
jmp
stos
jae
in
lds
mov
daa
sarl
mov
mov
push
call
add
push
call
sub
stc
mov
jbe
mov
aas
pop
push
xchg
lods
xor
ss
sti
mov
pop
into
or
data16
aaa
icebp
and
inc
pushf
shl
lds
js
cs
pop
ss
fistl
and
inc
or
xchg
inc
int3
int3
mov
pop
adc
add
sbb
sahf
add
mov
scas
les
les
fcomps
rorl
or
or
inc
mov
je
aaa
loope
decb
mov
mov
mov
or
sub
fucomi
mov
fsts
movsb
jecxz
pop
sub
add
cltd
nop
lds
push
scas
jl
inc
fnstsw
or
add
xchg
mov
mov
pop
push
sub
aaa
hlt
arpl
mov
inc
inc
js
jns
mov
aas
in
xchg
cmpsb
subb
stc
es
or
mov
cmp
or
mov
cmp
push
inc
or
jns
jmp
out
ret
div
std
adc
add
jg
or
stos
mov
mov
push
sub
loop
sub
dec
pop
dec
lods
add
in
or
fstps
sbb
stos
or
add
out
psrlw
je
or
mov
cs
xor
jne
movsl
fs
mov
in
shlb
and
jmp
push
into
shr
lret
test
mov
repz
adc
mov
xchg
mov
and
push
adc
add
stos
pop
jne
dec
jg
sbb
xlat
mov
cld
shlb
inc
cs
jp
xchg
movsb
popa
arpl
loopne
pusha
incl
icebp
jne
inc
je
shrl
test
fldl
pop
or
push
cmpsb
adc
pop
outsl
adc
ds
imul
shrl
cmp
mov
pushf
dec
ftst
imul
shr
int3
xor
cmpsl
loop
push
into
ss
into
mov
orl
addr16
add
ret
dec
mov
mov
xchg
stos
fcoml
xor
cltd
out
and
sbb
xor
test
cmp
mov
fcoms
sbb
jecxz
es
inc
push
loope
ss
xchg
fxtract
aas
dec
call
test
lahf
mov
and
testb
ret
push
ljmp
cld
adc
mov
sbb
mov
mov
jmp
iret
mov
mov
xor
adc
add
sub
pop
mov
mov
xchg
mov
cmp
in
mov
fwait
das
sbb
mov
imul
jecxz
leave
ja
jmp
sub
xchg
mov
ds
add
jo
xchg
cli
xchg
or
jecxz
dec
lock
jno
and
mov
stos
push
xchg
add
repnz
gs
jmp
cmp
call
push
pushl
jmp
push
call
aam
push
pop
push
call
das
icebp
adc
loopne
call
mov
cmc
pusha
cmc
add
call
xor
dec
shrb
pop
add
popa
jg
cmp
out
daa
orl
push
ja
aam
mov
pop
or
cmc
test
mov
mov
popa
mov
outsl
jb
add
outsl
and
add
or
loop
lahf
fdivrs
mov
data16
jp
xor
push
mov
mov
push
dec
cmpsl
push
fadds
popa
inc
xchg
jo
mov
aaa
mov
ret
mov
pop
and
popf
movsb
mov
in
mov
cmp
std
sahf
xor
add
dec
lods
sub
into
dec
aam
ss
add
push
test
mov
mov
add
enter
or
dec
mov
inc
mov
or
imul
add
sub
xchg
jb
int3
sar
loop
nop
and
and
sbb
and
jle
xchg
outsl
and
jns
add
out
jne
cmpsl
addr16
iret
adc
jne
mov
mull
add
stc
adc
dec
stos
daa
ret
pop
jge
popf
call
mov
in
and
repz
sbb
fnsetpm(287
call
stc
lock
lea
ja
pusha
pusha
imul
pushf
movb
add
movb
pushf
lea
jmp
jns
jp
in
sub
nop
lods
mov
dec
sbb
adc
push
imul
frstor
test
adc
xor
mov
mov
jl
xchg
or
outsb
imulb
aad
inc
sbb
into
and
pusha
jae
cwtl
js
call
lods
sbb
cmp
inc
fld
pop
mov
aas
mov
jae
or
call
addb
daa
cltd
mov
inc
out
cmp
cmp
std
cs
call
and
push
shr
inc
push
add
mov
call
push
call
jp
fmulp
call
push
call
inc
test
lods
add
and
fstpt
test
cmc
clc
into
lcall
dec
xchg
aad
xchg
mov
or
lea
notl
mov
mov
cmp
sbb
popf
mov
cmc
xchg
cmpsl
out
mov
sbb
aaa
jo
bound
sbb
pushf
jmp
sbb
adc
adc
sbb
scas
mov
cmp
add
dec
push
mov
mov
push
push
mov
adc
addr16
push
js
mov
cltd
fwait
xor
ss
fs
sarl
call
pop
clc
stos
mov
sub
mov
push
pusha
xlat
xchg
and
call
ficompl
repz
ljmp
adcl
out
into
sub
xchg
arpl
out
cld
out
cmpsl
cltd
clc
into
addr16
fldcw
xchg
push
inc
fstps
jno
push
adc
mov
je
lds
and
rclb
push
test
sbb
push
data16
xchg
adc
mov
bound
xor
sub
mov
xchg
dec
mov
mov
cmp
mov
xchg
dec
add
fistpl
and
mov
jbe
push
call
lods
push
mov
lea
je
pusha
mov
movzbw
lea
call
int
xchg
fldenv
sbb
xchg
cmp
sahf
pushf
jge
xor
push
aas
add
mov
aam
cmpsl
jae
mov
ror
icebp
test
data16
daa
rclb
pop
sbb
ljmp
cmp
dec
sub
xchg
mov
ret
enter
jb
and
xor
mov
fistpll
and
fnsave
sarl
xchg
movsl
and
std
mov
aad
mov
mov
jp
loopne
rorl
push
cmpsl
leave
jbe
daa
inc
cld
stos
pop
shlb
andb
aas
pop
push
mov
adc
jle
sti
inc
in
sbb
dec
push
sub
push
and
bound
pop
repz
lea
popa
scas
mov
outsl
jmp
inc
sbb
and
andl
fisubs
loope
sub
arpl
or
inc
push
lcall
or
cmp
and
popa
ja
out
loope
adc
jp
outsl
jb
inc
lods
push
cmp
and
push
pusha
decl
fimuls
push
jp
lods
lods
mov
adc
imulb
adc
xchg
arpl
enter
daa
xchg
das
cmpsb
pop
sarl
xchg
loopne
in
adc
pop
and
and
sbb
xchg
ret
fdivrl
lods
ret
mov
mov
push
outsl
ljmp
sub
xor
mov
shr
cmpsl
dec
mov
add
xor
mov
sar
ret
sub
dec
adc
mov
sbbb
push
push
pop
inc
pushf
adc
mov
das
cmp
ja
sarl
jno
mov
mov
aam
sub
dec
xlat
or
test
sbb
and
cmp
ret
fwait
pop
stc
lock
outsb
xchg
cmpb
adc
outsb
or
dec
sbb
mov
cmp
push
pop
sub
test
jae
pusha
jge
dec
sub
mov
xor
push
mov
mov
sti
cmpsl
fdivs
out
jecxz
popf
cwtl
leave
mov
hlt
bound
xchg
mov
xchg
push
in
mov
rcll
pop
fisubl
iret
cltd
cmpsl
sub
jns
inc
xchg
rcll
neg
loop
ret
mov
add
xchg
push
xchg
fnstenv
mov
int3
pop
push
popf
and
rolb
lret
adc
push
mov
scas
lret
dec
add
and
icebp
fstpl
cmc
inc
adc
inc
push
dec
inc
or
push
or
sub
fstps
sbb
pop
sbb
push
mov
dec
dec
adc
dec
push
faddl
and
das
and
mov
outsl
sbb
fistpll
jge
into
adc
shlb
jg
sbb
cmp
out
mov
popf
mov
add
adc
data16
adcl
mov
imul
add
push
out
paddq
into
jnp
mov
jl
cmp
rcll
jne
sbb
and
xchg
cs
daa
fwait
or
rcll
mov
mov
pop
test
pop
das
scas
rcl
cmp
jmp
stc
mov
seta
bts
movb
movzbw
mov
cmc
cmp
pushl
pusha
lea
ja
ror
sbb
add
inc
btr
movzbw
shr
movsbw
rol
movzbw
mov
jmp
push
call
lds
push
push
call
test
pushf
movw
std
pushl
popf
pushf
push
pusha
lea
jmp
movsbw
setge
not
movl
bt
mov
bt
cmc
test
pushf
jmp
mov
sahf
xchg
enter
sbb
cmp
test
and
and
aad
aas
ficomps
pop
cltd
xlat
inc
add
or
ret
and
sub
cmp
mov
mov
xlat
aas
cmc
pushf
cmp
inc
xchg
imul
shl
or
mov
mov
lds
sti
or
cmp
push
enter
shlb
xchg
into
leave
jecxz
scas
arpl
sub
push
xchg
add
add
shll
movsb
sub
int
arpl
pop
inc
mov
xchg
cwtl
mov
roll
adc
sub
into
sbb
xor
mov
addl
add
into
mov
jbe
sbb
or
add
sub
xchg
dec
rcrb
stc
pop
ljmp
cli
inc
lds
in
popf
xchg
dec
adc
cmp
rolb
not
stos
not
pushf
mov
lea
pushf
lea
call
push
lea
jae
push
xor
pusha
lea
call
pushf
push
push
lea
jae
pusha
xor
push
pushf
movb
push
lea
call
call
push
call
dec
cmpsb
ret
into
xchg
pushf
lea
call
call
lea
ja
adc
cmp
sbb
add
sub
jmp
cwtl
cmp
sahf
jns
ret
xchg
fwait
jg
adc
mov
shll
and
mov
or
push
mov
or
movl
lcall
hlt
pop
xchg
sub
aas
xchg
push
dec
dec
add
loopne,pt
jmp
push
xchg
xchg
mov
mov
push
test
lock
adc
pop
pushf
in
shll
xor
sub
jp
shlb
cmp
std
mov
pop
add
or
fimuls
add
int3
xlat
mov
pop
lods
dec
daa
push
mov
lock
fucomi
mov
and
icebp
xlat
pop
ret
fstpt
pop
mov
adc
xchg
jno
pusha
jge
mov
mov
jp
out
dec
les
xchg
mov
inc
addr16
xchg
fidivl
cmpsb
hlt
pop
push
jnp
ds
lahf
xchg
xlat
inc
ffreep
inc
inc
mov
cltd
into
leave
lods
aad
mov
xor
dec
sub
add
pop
cmp
movsb
push
lea
sbb
xor
icebp
enter
sbb
mov
in
mov
mov
rcl
mov
push
jno
xchg
add
jecxz
push
mov
cli
outsb
jmp
xor
cld
cli
sub
lret
sbb
aad
sarl
lcall
jecxz
call
push
sbb
pusha
lea
je
cmp
add
push
movl
pusha
lea
jmp
mov
jbe
lret
int
call
and
sahf
jmp
push
jnp
pusha
mov
js
insl
push
mov
aaa
ja
in
xchg
add
call
mov
or
ror
scas
ja
mov
add
ret
inc
pop
clc
stos
xor
sub
mov
fnstenv
sub
cmpb
adc
jo
xlat
xchg
lret
dec
mov
xchg
mov
stos
push
pop
fcmovb
stos
xor
sarl
lcall
mov
add
mov
inc
xor
mov
add
jo
jno
pop
pop
cltd
call
in
inc
lock
pop
cmpsb
jg
pop
or
sbb
das
in
incl
pop
out
cld
imul
mov
bound
xor
xchg
lock
lret
cmpsl
test
dec
add
pop
dec
xchg
push
popa
inc
ret
and
int
pop
arpl
fisttpll
idivl
je
jle
lret
push
test
jecxz
xchg
xchg
mov
mov
data16
ljmp
pop
out
sbb
and
ds
mov
and
inc
mov
fiaddl
aad
int
cmp
jo
aas
out
mov
sbb
aaa
icebp
sub
cmp
clc
stc
pushf
jmp
imul
dec
decb
in
push
std
jnp
lret
ss
lock
pop
mov
lret
stos
insl
and
lahf
xor
fnsave
xor
scas
or
push
stc
cltd
cld
push
loope
jmp
cmp
and
dec
in
fmul
out
push
mov
jbe
adc
ror
lds
js
dec
xchg
clc
scas
push
pop
mov
addb
stc
inc
jecxz
fsubs
lock
nop
mov
sbb
pushf
sub
aad
jae
adc
leave
push
adc
jno
leave
pop
sarl
fwait
rcl
ret
and
xchg
push
insl
mov
push
cmp
sub
les
fldenv
pop
cmc
sbbb
ss
shll
fcomps
arpl
mov
pushf
movsl
add
push
jmp
incb
xor
pusha
into
cmp
sub
mov
pushf
ja
push
dec
rorl
ljmp
aas
xor
or
mov
pop
add
cltd
push
xchg
fcmovb
add
sbb
repnz
mov
aas
js
cmpsl
fiadds
cmp
pop
adc
dec
outsl
popa
fs
imul
add
dec
call
sub
xchg
fwait
stc
mov
int
int3
dec
popa
and
and
dec
sbb
lret
outsl
mov
arpl
push
pop
sbb
pop
test
in
in
adc
xchg
or
dec
into
cmp
or
scas
ja
insl
jmp
jno
ljmp
ficomps
dec
dec
cwtl
mov
fstl
or
dec
push
dec
lahf
popa
mov
mov
testl
movsl
pop
mov
lret
mov
idivl
pop
lret
push
aaa
xlat
adcl
ss
sbb
push
xor
and
iret
cmc
xor
cwtl
adc
je
xchg
xor
repz
mov
repnz
in
movsl
xchg
xchg
push
mov
adc
push
push
pop
xchg
xchg
xor
aaa
push
cs
dec
xchg
jle
xchg
sbb
push
cltd
xchg
popf
lods
mov
mov
jne
mov
mov
push
lods
int
xor
repnz
xorb
outsb
sbb
idivb
test
cmc
ret
int3
movsb
rdtsc
pshufw
test
out
dec
adc
js
iret
and
js
jl
popa
cltd
outsl
dec
push
sub
xchg
inc
je
ss
pop
inc
pop
xchg
sbb
js
arpl
cmp
adc
sub
mov
ficoml
or
or
mov
inc
lock
ds
xor
inc
xchg
pop
sub
push
clc
jb
cmp
dec
and
cltd
sub
cmp
dec
push
popa
push
jno
push
dec
leave
sub
dec
sub
dec
es
dec
and
push
add
test
cs
cwtl
adc
or
or
out
mov
jmp
in
icebp
pop
sub
imul
in
dec
icebp
push
lret
fadds
icebp
ds
das
sub
mov
sub
imul
leave
or
xchg
xor
inc
sub
push
xchg
xchg
mov
nop
cmp
cmpsl
test
sub
stc
sbb
and
das
mov
outsb
sbb
push
ss
mov
jmp
xor
xchg
adc
push
sub
sub
xchg
test
mov
cmp
sub
ljmp
dec
sub
jecxz
lret
mov
push
xor
cs
add
push
stc
sbb
and
sub
in
dec
inc
dec
push
push
pop
mov
adc
loop
inc
test
add
adc
sbb
sub
pop
xor
test
popf
fwait
ljmp
and
adc
adc
pop
mov
xchg
xchg
sub
das
adc
mov
sbb
cltd
mov
cmp
push
sub
xchg
sbb
xchg
cli
dec
sub
jnp
pusha
xor
lea
cmp
jp
mov
sbb
jae
xchg
out
dec
stos
sub
pop
inc
pop
sbb
jecxz
das
ljmp
push
or
pop
punpckhdq
ljmp
int
or
sub
repz
stos
lock
ljmp
pop
jmp
sbb
inc
mov
jb
inc
data16
das
sbb
lcall
xchg
push
das
pushf
xchg
sbb
sbb
mov
xor
sbb
push
mov
xor
int
jb
ljmp
sub
and
je
cmpb
adc
and
adc
sub
sti
add
adc
add
jle
ficoms
xor
or
ret
sbb
sub
adc
or
ret
out
or
out
pop
adc
mov
xchg
adc
jb
cmpsb
mov
xor
sbb
pop
or
jns
aad
or
cmp
or
push
or
inc
insb
pop
nop
or
xchg
pop
mov
fmull
pop
add
notb
popf
movsl
cs
mov
sahf
sub
add
sub
cwtl
adc
jle
enter
into
sbb
fnstcw
sub
nop
mov
sub
cmp
pop
jns
push
fistl
mov
push
push
jl
xchg
mov
mov
setb
sbb
xchg
fs
adc
push
xchg
test
sbb
sbb
sbb
cli
or
cltd
cs
lea
or
adc
dec
push
adc
mov
dec
mov
clc
cld
or
add
jmp
mov
pop
dec
or
movsb
adc
jb
jns
imul
pop
in
or
adc
or
add
mov
adc
test
ja
sbb
adc
mov
jne
stc
mov
sub
jge
mov
and
or
adc
das
adc
sahf
adc
push
adc
or
clc
aam
lret
sbb
bound
sbb
sbb
loop
fs
in
lret
mov
push
xchg
cli
xchg
fwait
ljmp
and
movsl
sbb
sub
adc
in
fisubs
lret
data16
sbb
add
or
dec
adc
lret
jmp
sti
sub
insl
adc
addb
enter
movsl
adc
xor
stc
or
ja
and
aam
ja
pusha
adc
inc
xor
cltd
adc
mov
out
adc
push
hlt
iret
aam
inc
orb
fsubrs
lret
cs
sub
lret
sahf
jo
push
je
adc
data16
mov
push
mov
lahf
in
add
xchg
pusha
lret
ljmp
sarb
stc
mov
pop
push
jns
mov
or
push
pop
adc
add
sub
adc
test
cmp
pop
jmp
jp
icebp
inc
or
and
and
mov
inc
daa
lods
ljmp
push
pop
mov
cmp
cmp
cmp
std
pop
ss
movsb
pop
jns
xor
add
add
sbb
mov
nop
imul
ljmp
ljmp
ljmp
ljmp
jl
cmp
imul
es
cmp
rorb
lcall
cli
sbb
into
jmp
dec
sub
sbb
dec
sbb
stos
xchg
pop
int3
shrb
les
push
xchg
fs
xchg
mov
mov
fistl
pop
adc
pushf
adc
icebp
sbb
xchg
mov
fisttpl
xor
push
dec
dec
ljmp
ljmp
push
mov
popf
adc
add
inc
loope
pop
or
sarl
fwait
xchg
adc
adc
push
push
push
xchg
test
sub
add
sub
fwait
mov
sub
mov
movzwl
int
mov
mov
repz
ds
lods
sbb
push
shlb
mov
cmc
mov
cltd
cmpsb
jne
sbb
sub
movsl
sub
xchg
sbb
cmp
mov
popf
jecxz
mov
xchg
das
sbb
mov
dec
cli
sbb
push
outsl
sbb
int
cli
and
add
or
into
jp
pop
iret
es
jnp
sbb
cmp
push
adc
mov
dec
jp
cwtl
jp
jp
pop
outsl
inc
sbb
inc
testb
mov
sbb
push
rcll
testl
dec
sbb
dec
lcall
rcll
imul
jl
or
dec
mov
xchg
sub
sbb
repnz
sbb
bnd
cmp
mov
jne
ja
lret
xor
mov
mov
dec
repnz
xchg
sbb
or
adc
adc
rcl
xor
push
lahf
mov
mov
dec
out
ficoms
cmovnp
mov
xchg
sbb
jecxz
dec
push
int3
xchg
jl
jl
pop
fstl
and
xor
mov
mov
mov
sti
shrl
stos
push
jp
mov
je
sbb
push
rorl
mov
sub
xlat
sbb
jg
pop
xchg
xchg
jnp
cs
inc
and
jl
aad
insb
or
nop
cld
and
inc
hlt
roll
cmp
je
lock
push
lea
fmulp
rcrb
pop
mov
cmp
adc
mov
push
adc
inc
xchg
push
cmp
sbbl
sbb
dec
stos
test
repnz
mov
repz
aas
iret
hlt
dec
or
sbb
sub
inc
neg
push
mov
sbb
adcl
lea
sbb
ds
insb
scas
adc
mov
into
loop
nopl
sbb
adc
aam
outsb
xchg
mov
outsb
sbb
lret
push
rsqrtps
mov
sbb
aam
cmc
outsb
mov
and
xor
xor
daa
push
vunpckhps
aaa
lcall
xchg
dec
adc
je
push
mov
jb
pushf
cltd
jb
out
in
or
jne
sub
jl
lahf
mov
dec
mov
push
and
or
jnp
into
xchg
push
cltd
add
out
adc
dec
xor
adc
ret
xor
pop
or
mov
sub
push
xchg
sbb
dec
lea
ja
stos
mov
xchg
enter
and
pop
popf
xor
inc
xlat
sbb
outsb
pushf
mov
pop
test
or
test
out
outsb
ds
mov
pop
popf
notl
adc
repnz
addr16
test
push
push
lret
lock
insb
daa
pop
dec
pop
in
cmpsl
mov
and
pop
sarb
mov
sbb
loope
xlat
stc
dec
jno
pop
mov
lea
dec
sub
lea
lahf
test
je,pn
scas
cmp
stos
into
icebp
push
test
pop
fsubrl
cmp
lahf
push
jecxz
in
mov
or
adc
dec
call
adc
lods
es
pushf
push
mov
enter
out
adc
pop
adc
xor
mov
adc
sbb
mov
mov
mov
cltd
das
mov
push
lods
test
xor
in
jo
and
mov
shll
inc
mov
mov
sbb
mov
push
ret
fnstsw
jne
repz
imul
mov
sarl
outsb
adc
jb
add
and
jne
xor
mov
xor
je
aaa
ficoml
mov
pop
imulb
push
dec
sti
push
fadds
stc
shll
cmp
movsl
lods
mov
push
pop
sub
scas
mov
cmc
sbb
aad
pop
xor
sub
xchg
popl
adc
pop
mov
daa
mov
out
adc
sub
push
movsb
ja
or
pop
cmp
mov
or
jbe
push
fnstenv
sbb
stos
push
test
cmp
adc
pushf
adc
push
repnz
in
mov
cmc
dec
adc
ficompl
sbb
iret
rorl
sbb
ficoms
sbb
push
repz
or
in
and
pusha
cs
xlat
int3
bound
mov
clc
mov
sbb
shr
and
aad
jns
je
into
push
daa
add
rcrl
fprem1
imulb
fdivs
cs
jmp
lea
push
cs
fimull
xchg
sahf
xor
jl
out
das
test
mov
sahf
out
test
jb
aad
mov
mov
pop
addr16
fcompl
sahf
push
mov
test
sbb
jnp
sahf
aam
cltd
fwait
adc
adcl
xchg
adc
fisubs
pop
inc
sub
pop
es
xorl
mov
pop
push
ret
cmp
xor
ja
nop
mov
or
fistpl
mov
add
mov
jb
pop
sbb
mov
push
pushf
mov
inc
add
pop
mov
lods
rcll
push
xor
hlt
sub
out
dec
or
mov
sub
push
jmp
iret
call
popf
pop
inc
pop
vmread
dec
mov
or
push
cld
mov
test
nopl
and
xchg
test
xorl
notb
cmpsl
push
aas
fs
jae
or
jne
pop
fimuls
mov
es
sub
pmuludq
jnp
pop
sub
fstl
mov
mov
push
ja
rclb
imul
and
repz
popf
sbb
fdivp
stos
mov
cs
lahf
adc
int3
mov
mov
cmp
lret
cwtl
jl
push
sbb
inc
adc
lea
sbb
cmp
popf
and
and
test
andb
mulb
fisttpll
add
int3
pop
and
mov
xchg
scas
push
mov
xchg
stos
or
insb
push
jns
adc
adc
push
push
shll
das
ds
dec
mov
jp
and
cmp
pop
xchg
mov
push
pushf
outsb
push
xchg
outsl
xor
inc
or
mov
aas
push
lcall
and
jmp
xchg
popl
fs
es
scas
dec
xchg
movsl
rcll
adc
repz
dec
shrl
ret
sub
es
sbb
sbb
pop
lcall
scas
push
es
sbb
cmc
mov
push
xor
xchg
pop
xchg
jl
insb
xor
push
mov
inc
jecxz
mov
call
adcb
xchg
xor
mov
lea
mov
daa
adc
cld
or
push
rcrl
popf
mov
jae
iret
or
mov
es
pop
sbb
rorl
mov
into
icebp
out
adc
xchg
sbb
add
cwtl
sbb
cmc
or
xor
mov
push
dec
add
aam
push
sbb
add
mov
jbe
pop
ret
xchg
fisubl
and
nop
sbb
les
mov
cmpb
dec
js
push
rol
clc
adc
das
pop
jnp
inc
ljmp
bound
mov
ljmp
xor
lret
sbb
sahf
cmp
xchg
xor
pop
push
jle
adc
dec
scas
pusha
adc
in
or
aad
pop
and
setle
out
sbb
adc
mov
aaa
xchg
lcall
pop
lea
sub
daa
sbb
and
lret
mov
mov
stos
pop
cmpsb
shrl
xchg
cs
push
in
enter
pushf
mov
sub
xchg
fwait
xor
sbb
push
out
push
fcom
mov
sub
popf
inc
adc
mov
or
repnz
adc
xor
inc
cmc
imul
cmp
nop
push
das
xchg
pop
adc
mov
leave
sbb
pop
pop
andb
xor
sbb
pushf
ja
push
pop
sub
cmp
push
scas
setle
adc
adc
jbe
lret
push
adc
js
arpl
jl
xchg
out
mov
and
pop
and
iret
daa
pop
push
xor
jne
xchg
adc
notb
dec
iret
mov
cwtl
jns
sbb
pop
or
pop
xor
sub
fwait
xchg
cld
mov
mov
shrb
xchg
pmuludq
push
jmp
fwait
lret
dec
xor
push
adc
into
jns
cs
dec
sub
push
insb
and
pushf
mov
ret
lahf
mov
in
pop
outsb
imul
pop
or
out
mov
sbb
inc
sahf
push
call
adc
pop
out
mov
cmp
push
xchg
aad
adc
cltd
sbb
cmc
cmp
pushf
push
and
mov
in
fwait
pop
inc
cmp
mov
pop
cwtl
mov
dec
xor
xlat
sbb
decb
and
loope
pop
push
inc
xlat
dec
in
xchg
ret
mov
fnstsw
jp
adc
add
shrb
fdivs
shll
mov
inc
cmp
aam
xchg
pop
cmpsb
addr16
je
sbb
xchg
or
adc
inc
in
je
mov
push
push
lcall
xor
lcall
out
and
pop
loop
dec
xor
sahf
sbb
ret
fisttps
fistps
imul
push
and
xchg
stos
in
mov
cmp
dec
xor
int
movsb
xor
movsb
mulps
nop
lret
into
and
mov
pop
stos
mov
insb
mov
mov
stos
je
push
xchg
nop
nop
cmp
sahf
mov
scas
and
mov
ds
push
je
fs
sub
jnp
fcompl
in
mov
popa
push
xor
sbb
jb
pop
mov
rclb
mov
ret
cwtl
sub
pop
out
dec
insl
push
imul
mov
es
rorl
hlt
sbb
int
mov
sbb
xchg
sbb
aas
mov
pop
or
push
xchg
cmp
cmc
adc
cmp
rol
sti
jnp
fimull
mov
xchg
xchg
jge
dec
sub
test
sub
xchg
into
pop
pop
gs
sbb
les
and
cmp
mov
mov
loope
aam
cmp
jnp
ljmp
repnz
push
mov
into
cltd
je
pop
ss
adc
dec
fs
into
mov
pop
jnp
fisttpl
xchg
push
mov
xchg
sub
nop
mov
insl
scas
push
iret
push
jae
mov
lea
xchg
jb
shl
adc
or
out
dec
pushf
call
mov
mov
rolb
xor
fyl2xp1
shll
cmp
add
fistpl
adc
repz
sarl
lcall
xchg
adc
mov
outsb
leave
sub
push
push
adc
mov
mov
mov
into
pusha
add
or
sub
sub
call
in
movsb
mov
adc
pop
fwait
loopne
push
push
cmpsb
shr
inc
les
rol
divl
push
xor
sub
addr16
xchg
ds
adc
push
dec
adc
dec
xchg
sub
fwait
cmp
stos
xchg
xor
inc
mov
and
movb
push
pushl
ret
push
call
loopne
jnp
std
scas
repnz
call
xchg
push
outsb
adc
call
fcompl
inc
arpl
sub
xchg
notb
ffree
mov
adc
ss
sar
mov
mov
xchg
jmp
or
loop,pt
stos
out
cli
lods
data16
loop
bound
dec
jbe
insb
pusha
rolb
sbb
dec
add
addb
sub
rorl
lret
stos
cmp
scas
or
leave
fs
enter
xchg
jo
push
xor
ds
cli
cmpl
pop
jae
int3
inc
push
cmp
cmp
fs
je
pushf
adc
mov
pushl
lea
jmp
push
std
pushl
popf
push
movw
lea
jmp
push
call
xor
sbb
cltd
push
daa
cmp
ds
mov
pop
cmc
adc
lret
mov
add
lahf
lea
xchg
enter
mov
clc
mov
or
xor
lcall
cmp
loop
movsl
test
scas
mov
in
divb
in
push
ficompl
sub
stos
xor
and
jb
jle
dec
fwait
cmpsb
mov
inc
inc
cmp
jmp
xor
xchg
inc
mov
cmc
rep
in
sub
cli
push
int3
inc
es
lds
rclb
call
scas
rcrb
mov
jl
nop
sbb
aad
xchg
mov
insb
xor
loopne
rol
jns
mov
mov
add
in
cmp
lret
xor
dec
cli
imul
jns
mov
test
mov
and
stos
in
push
flds
movsb
pop
popa
in
in
fcompl
add
popw
mov
imul
and
or
xor
mov
and
pop
sub
pop
out
mov
addl
test
xchg
pop
inc
pop
insl
in
ror
ljmp
outsl
mov
in
add
cwtl
sbb
ret
xorl
out
nop
jp
popa
adc
pop
inc
repz
loop
jno
daa
nop
ficoml
shld
lea
test
jo
test
dec
and
add
mov
or
hlt
mov
lcall
jbe
icebp
jbe
fimuls
inc
ja
in
cmp
incb
call
push
dec
in
add
dec
gs
popa
addr16
outsl
js
add
inc
push
mov
cmp
std
pop
fildl
mov
iret
cmp
popf
sbb
add
pop
ja
mov
adc
pop
mov
movsl
adc
mov
in
or
movsl
mov
inc
out
aas
push
shrl
popaw
dec
mov
sbb
sahf
nop
jns
sarl
mov
xchg
sbb
xor
push
mov
jle
out
mov
jnp
mov
sub
mov
adc
lods
lea
cmp
fildl
pop
dec
jg
call
mov
stos
fcoms
xor
mov
cmp
hlt
in
adc
das
mov
mov
and
sub
in
in
jmp
add
fs
sarl
mov
test
dec
call
pop
push
call
inc
sbb
mov
dec
add
stos
dec
jmp
out
pop
jne
mov
xor
inc
inc
shrb
cmpsl
mov
inc
adc
push
sahf
adc
mov
sbb
mov
push
add
add
mov
mov
or
pusha
adc
mov
push
dec
imul
push
sbb
loop
lea
imul
imul
inc
xor
xchg
sbb
sbb
mov
adc
inc
push
scas
jecxz
popa
in
pop
push
fdivr
lds
fcompl
pusha
mov
push
in
mov
enter
orl
lods
scas
incl
jg
inc
mov
cmp
dec
iret
sub
and
int3
jo
mov
loope
mov
push
je
gs
sub
pushf
icebp
rol
int
arpl
movsl
mov
orb
out
mov
aad
lea
scas
data16
jle
mov
imul
xor
xor
xchg
jl
daa
cmpsb
push
jo
in
call
out
push
adc
mov
in
dec
or
jae
cmp
out
insl
push
call
mov
add
jmp
push
call
lahf
mov
mov
cld
hlt
mov
dec
xchg
lea
sub
jae
pusha
ret
or
cmp
mov
int
bound
jno
vpmaxsw
aad
call
dec
jnp
pop
xchg
pop
bound
scas
nop
test
mov
or
mov
mov
add
inc
ljmp
js
pop
repz
daa
stc
sti
pushf
mov
adc
mov
cmp
pop
popf
cmp
imul
dec
call
pop
mov
shlb
out
pop
mov
jecxz
popa
dec
lret
in
aaa
xchg
loop
mov
clc
inc
pusha
fisubs
movsb
adc
mov
sub
inc
pop
in
pusha
loop
xchg
test
fnstenv
pop
incl
aam
pushf
mov
or
or
adc
push
fcmovb
adc
xor
test
jne
js
jmp
xor
js
add
decl
aaa
sahf
pop
dec
into
inc
sahf
lahf
into
repz
mov
push
inc
clc
decl
mov
leave
push
lea
call
pushf
lea
jg
pushf
lea
jb
push
mov
pushf
pushl
ret
push
call
rorb
push
call
je
push
call
cmp
scas
scas
dec
call
xchg
and
jno
xchg
lret
add
fdivrs
das
xchg
cli
push
or
repz
dec
mov
inc
and
or
js
fs
xor
out
add
pop
or
add
cmp
xchg
add
jge
push
inc
lret
sbb
jo
ljmp
imul
out
lock
sub
mov
push
lret
icebp
sub
movsl
jnp
push
sti
adc
inc
fisubs
fs
daa
mov
scas
or
or
mov
mov
push
jmp
je
aad
cmc
pop
pop
sub
push
cs
mov
cmp
jge
pop
inc
xchg
scas
sbb
sbb
mov
in
adc
shrb
data16
mov
jo
pop
push
inc
inc
pop
nop
out
mov
cmp
inc
out
cmp
ja
aaa
orb
out
pop
push
arpl
lret
jl
jne
xlat
pop
pop
and
mov
jb
shll
cli
outsl
repnz
or
jmp
sub
fstl
leave
jns
or
inc
stos
int3
adcl
inc
fstpt
lret
aas
clc
lods
add
add
shlb
jecxz
pop
jl
adc
adc
call
out
sarl
mov
add
add
add
pusha
mov
call
push
call
sub
scas
mov
adc
mov
sub
dec
add
xchg
adc
aas
mov
add
stos
das
mov
and
mov
outsb
inc
ds
sbb
sub
mov
mov
inc
rcrl
test
and
mov
or
clc
xor
lret
scas
popa
sub
sub
or
in
fldcw
sbb
mov
sub
push
out
push
cmp
pmaxsw
cs
sbb
dec
push
pop
out
dec
sarl
mov
std
out
adc
call
add
ds
call
insb
daa
mov
stos
out
cmp
pushf
dec
xchg
or
jmp
push
call
dec
call
std
into
mov
add
xchg
test
leave
or
scas
xchg
inc
cmpsb
or
pop
push
or
push
cmpsb
xorl
cltd
out
mov
mov
mov
rorb
inc
jle
repz
pop
addr16
jae
cld
lcall
jl
iret
adc
daa
pop
loope
mov
cmc
mov
dec
pop
notl
lock
cli
lods
rorl
in
pop
inc
xchg
adc
loope
dec
pop
adc
out
push
sarl
mov
jmp
insb
add
movb
inc
ljmp
adc
andl
or
add
add
jo
je
lods
mov
mov
and
ja
mov
xlat
cmp
popf
adc
fbstp
je
cmpsl
mov
mov
div
call
pop
jl
push
push
xchg
cmpl
out
xor
and
sub
inc
pop
push
xor
mov
call
popa
imul
test
mov
xchg
fwait
cmpb
sarl
mov
fs
jne
pushf
sbb
sub
pusha
mov
cmp
push
add
pushl
mov
cmp
movzwl
btr
mov
bt
add
test
stc
mov
pushf
jmp
push
test
cmc
cmpsb
pusha
jmp
call
push
call
lret
pop
mov
mov
sbb
std
mov
and
push
fildl
jge
lret
add
sar
lret
ficoms
fcomp
cmp
or
fsubp
inc
lods
inc
sub
pop
sbbl
and
dec
add
notb
scas
and
stos
mov
hlt
fcompl
ficoms
pop
sub
stc
inc
mov
andb
adc
xchg
and
jae
push
aad
movsl
xor
les
sarl
mov
std
pop
call
mov
scas
loop
shll
or
push
push
or
scas
xor
or
jle
cmp
outsl
mov
ja
adc
icebp
mov
imul
inc
mov
insb
mov
jecxz
cmpsl
clc
out
sti
mov
jne
ss
andb
es
fnstcw
mov
xor
fcmovne
les
imul
mov
pop
sub
outsb
ret
sbb
xchg
jg
add
data16
ds
pop
into
sarl
mov
std
dec
dec
in
sbb
mov
pop
fndisi(8087
call
push
test
pushl
popl
pushl
pushl
ret
push
call
aas
fldt
mov
xor
push
call
sbb
icebp
bound
clc
cmp
mov
sar
add
mov
call
pushf
push
jmp
and
xchg
mov
mov
pop
xor
xor
cmp
xor
loope
pop
pop
xchg
adc
xor
pop
popf
adc
xlat
add
dec
rolb
jne
and
mov
loopne
push
fnstenv
xlat
xchg
pop
adc
in
add
je
sub
pusha
loopne
sub
jno
ss
lret
xlat
mov
aas
movsb
inc
cmp
cmp
xor
xor
test
or
add
cmp
ds
cs
movsb
sarl
mov
out
add
call
test
arpl
inc
inc
jo
clc
pop
xor
add
jg
mov
shlb
subb
test
minps
cmpsl
inc
dec
stos
cmc
xor
andb
gs
out
sti
lds
insb
xchg
lds
mov
in
or
sahf
dec
and
push
icebp
lahf
imul
pop
in
mov
sbb
fwait
lods
mov
jae
add
push
xor
xchg
push
jo,pt
dec
cmpl
addl
shr
sti
xor
add
push
call
outsl
popa
std
dec
push
call
dec
pushf
lea
je
cmc
bt
stc
sub
stc
clc
mov
shl
xor
sar
sub
mov
pushf
call
push
call
clc
fsubrs
gs
jecxz
push
call
fcoml
shlb
dec
lods
mov
xchg
arpl
push
mov
xchg
pop
cmp
mov
ret
loopne
dec
mov
shlb
mov
cmp
sub
push
pop
jno
pusha
sbb
das
inc
adc
and
jmp
insb
cmp
xchg
dec
sahf
or
icebp
clc
jbe
fchs
cmp
inc
xor
cmp
std
cs
call
mov
ret
push
call
and
add
faddl
ficoml
mov
mov
cwtl
cmp
subl
ja
clc
rcrl
test
imul
cwtl
cmp
xchg
sbb
pop
cld
dec
sbb
add
xor
xchg
xchg
adc
mov
inc
jns
xor
bound
std
movsb
addr16
and
push
sar
and
push
addr16
les
ja
sbb
into
movsb
shll
mov
sahf
jmp
mov
xchg
mov
inc
mov
nop
xchg
shlb
cmp
jmp
add
andb
fbld
stos
adc
neg
or
mov
jmp
push
call
jge
cltd
lods
decl
mov
call
inc
push
xor
cs
insb
add
adc
gs
push
in
lea
loope
xchg
out
loop
add
clc
jb
mov
ljmp
xor
sbb
pusha
std
push
or
adc
fldenv
or
and
add
jle
fimuls
mov
jg
div
push
mov
push
mov
fcmovnb
test
es
push
lds
jecxz
inc
lods
adc
ja
cmp
movsb
fnstenv
into
add
xchg
hlt
add
cmp
movsb
xchg
sub
bound
rcr
jp
pop
fwait
pop
inc
inc
mov
push
enter
leave
push
mov
push
rclb
outsl
xlat
push
test
mov
jo
xchg
sub
mov
test
movsb
pop
pop
aad
into
imull
out
push
test
daa
dec
adc
push
jmp
xchg
inc
add
and
cs
rcrl
push
fwait
aad
ret
jae
sbb
sbb
sar
lret
dec
xchg
dec
call
push
cs
bswap
movb
lahf
lahf
mov
pusha
lea
movb
jmp
pushf
lea
jb
pushf
pusha
pushl
ret
lea
jae
bt
bt
test
stc
cmp
pushf
lea
ja
pusha
inc
call
rep
movzbw
mov
movw
lea
jmp
xchg
pop
movl
cwtl
pusha
movb
not
lea
mov
movl
jmp
push
ss
fmul
sbb
jle
fisubl
insl
adc
rclb
test
and
inc
pop
repnz
xor
ret
pop
inc
decb
inc
mov
aas
lret
orb
xchg
sbb
test
stos
cmp
mov
xchg
jl
inc
inc
loop
jnp
cli
pop
adc
imul
jbe
sub
pop
daa
xchg
pushw
jae
pop
mov
adc
or
pop
or
cmp
jnp
xor
add
add
jmp
cli
loope
jecxz
fstpl
xor
pop
retw
push
leave
scas
jecxz
xor
repz
imul
xor
mov
cmp
pop
dec
mov
xchg
mov
pop
loope
and
aas
mov
and
mov
aas
mulb
clc
mov
xor
callw
or
xchg
and
out
xchg
popf
addr16
pop
mov
adc
adc
test
mov
push
mov
lods
test
lahf
jo
clc
mov
jp
and
mov
adc
loope
cwtl
push
wbinvd
mov
mov
jo
push
test
fsubs
mov
dec
xor
push
mov
sub
and
out
enter
fucomip
xchg
xor
movsl
loopne
push
inc
mov
jno
jbe
imul
mov
adc
mov
xlat
pusha
xchg
rcr
insb
jge
out
out
out
and
ljmp
test
pusha
lahf
xchg
cmpsl
ds
adc
mov
push
lret
lods
test
stos
xor
cwtl
cmc
nop
pop
push
shrb
jmp
jecxz
sub
sarl
lock
mov
ret
cmp
xchg
bsf
or
aam
mov
clc
mov
test
pushf
push
clc
mov
not
mov
mov
sub
call
sub
ds
rclb
or
fwait
or
xchg
add
movsb
sbb
or
in
mov
xchg
cmpsl
mov
jg
jnp
fdivl
cmp
ljmp
push
repnz
ret
xor
mov
sti
dec
cld
xor
dec
stos
lock
cmc
xchg
outsl
lahf
xchg
lcall
scas
adc
cmc
mov
fidivrs
xorb
lods
cmp
bound
sub
sarl
lds
scas
mov
call
jns
sarl
iret
mov
add
mov
pusha
clc
pusha
cmc
cmp
lea
jge
pushf
lea
jbe
ror
shl
mov
movsbw
add
or
bsf
mov
cmp
lea
setae
pushf
add
test
movl
btr
mov
bt
test
jmp
push
call
fsubrs
ja
xchg
mov
xor
or
cli
dec
subl
fildll
fs
fistpll
sbb
dec
mov
push
sar
mov
sarb
sub
divl
mov
ljmp
loopne
dec
out
lcall
add
xchg
dec
adc
pop
xchg
jno
insb
popa
jmp
pop
mov
scas
movsb
pop
pop
cmpsb
repnz
fs
jg
xor
dec
xor
aaa
cltd
inc
imul
push
call
lret
sti
sahf
pop
rclb
push
test
sbb
in
xor
cmp
cmp
int
js
xchg
mov
pop
xchg
xlat
dec
inc
cmp
add
imul
bound
pop
mov
outsb
dec
leave
mov
add
jns
xchg
sbb
pop
mov
call
subl
adc
push
jle
jo
or
mov
mulb
dec
bnd
cld
mov
test
cmp
les
xchg
push
call
cmp
add
add
sub
cmp
sete
mov
pushf
sar
mov
test
repnz
jmp
lret
dec
popf
mov
movl
mov
into
cmp
sub
mov
push
sbb
xlat
sub
pop
mov
dec
ret
push
mov
movsl
sbb
ljmp
jl
int
inc
adc
fisttpl
mov
push
iret
pop
dec
push
mov
cmp
ljmp
dec
call
in
add
inc
stos
ljmp
into
pop
shr
repz
pusha
xchg
and
jecxz
mov
mov
add
push
xchg
lahf
pushf
sub
fcomps
mov
in
add
cmp
enter
mov
test
cmp
pop
or
sbb
xchg
or
nop
scas
mov
sti
jno
add
and
sub
call
cmp
jb
rcrl
insl
int
jge
xor
fcmovbe
cmp
test
sbb
mov
add
and
push
call
pop
mov
sub
ljmp
mov
and
add
shll
int
add
mov
mov
xor
sub
pop
icebp
dec
cmp
leave
hlt
adc
cmc
inc
shlb
cwtl
in
mov
fstps
mov
pop
push
sub
xor
repnz
cmp
ss
aas
and
ret
je
add
cmp
jb
cmp
dec
mov
ja
jbe
pop
imul
jne
repnz
pop
dec
cmpsb
pop
jg
jns
sub
daa
pop
enter
aaa
cltd
mov
push
sarl
enter
dec
dec
inc
inc
push
push
xor
cs
insb
add
sbb
call
aam
outsl
adcb
sbb
xlat
int3
daa
cmpsl
lock
stos
add
ljmp
cltd
jno
xchg
nop
arpl
das
scas
dec
scas
jmp
cmp
cmp
out
mov
push
lea
je
clc
pusha
clc
bt
cmp
jmp
lea
jne
aam
call
push
call
jbe
push
jae
add
imul
jae
es
xor
adc
lret
xchg
rorb
cmp
addl
outsl
xchg
fistpll
dec
or
fisubrl
jne
lcall
xchg
fldl
call
in
ljmp
fcoml
aad
shlb
lcall
mov
lret
and
cli
mov
lcall
das
ljmp
mov
sbb
fadds
enter
addb
and
cmp
cmp
adc
mov
ss
stos
je
add
fnstcw
dec
mov
cmp
cltd
fwait
push
call
shlb
jmp
ja
jbe
lock
fiaddl
shl
pusha
mov
jae
add
notb
pop
mov
dec
mov
stc
repz
lahf
fwait
ss
repz
std
scas
mov
adc
sbb
pop
arpl
aam
sbb
jle
movl
sahf
add
xor
mov
ds
jb
jo
int3
cmp
shlb
xorl
call
xor
mov
jl
jnp
movsb
in
sarl
lret
adc
add
mov
pusha
pushf
pushl
lea
jmp
push
call
cwtl
hlt
int
push
call
push
int3
popf
push
call
adc
leave
jle
ja
aam
popl
cld
jp
mov
leave
std
xchg
es
ds
aas
daa
jp
xor
out
cmpsl
dec
or
inc
loop
insl
mov
or
push
mov
jg
mov
mov
dec
xchg
push
xchg
fisttpl
add
cmp
and
insb
mov
xchg
mov
lea
ficoml
push
or
xchg
mov
or
leave
lds
and
xchg
test
popf
in
rcl
cmp
dec
push
push
call
fs
cwtl
xchg
push
call
xor
hlt
pushf
lea
jmp
push
call
jae
ja
rcrb
stos
addr16
push
call
cmp
loop
ds
xchg
ss
mov
jmp
dec
inc
das
xor
inc
dec
inc
adc
movsl
mov
xchg
rorl
push
push
leave
and
scas
mov
sub
and
mov
pushl
aaa
scas
into
sbb
das
adc
dec
pop
cwtl
push
pop
push
imul
inc
mov
test
adc
lods
mov
add
int3
sbb
xor
fs
mov
pop
cltd
fsub
inc
dec
mov
sarl
int
inc
dec
bt
test
call
in
cmp
arpl
mov
inc
inc
cmpb
sbb
stos
lea
mov
sahf
lock
lahf
mov
shl
mov
xor
andl
pop
subl
xor
cmp
nop
adc
std
push
push
add
and
lods
cwtl
push
call
mov
iret
sbb
outsb
mov
sub
add
push
rcl
adc
mov
loope
pop
cmc
shlb
or
shl
mov
and
mov
jmp
xchg
arpl
dec
leave
pop
stos
mov
scas
pop
into
popa
xor
cmpsl
das
gs
ljmp
push
inc
mov
imul
push
xor
jns
arpl
dec
jnp
mov
adc
pop
sarl
into
sub
push
call
xlat
pop
data16
fisubrl
push
aad
imul
or
inc
std
xor
nop
cwtl
dec
pop
jmp
into
arpl
je
cmp
and
cmpsb
sbb
pop
jno
leave
mov
xor
test
std
jb
sbb
leave
in
sub
mov
mov
aad
xor
inc
inc
cmp
and
sub
inc
jns
aam
arpl
mov
in
hlt
movsl
fsubrs
repnz
in
sbb
cmp
stc
mov
and
pop
cmpsl
loop
icebp
pop
mov
lods
sti
fst
sarl
out
dec
fildl
je
fs
xor
fcomi
insb
insb
cmpsb
inc
and
dec
bound
add
aas
repz
inc
jp
push
or
mov
mov
and
outsb
add
mov
jmp
mov
sbb
loopne
mov
inc
rorl
data16
hlt
movsl
mov
aad
sbb
ljmp
sarl
iret
and
and
sub
mov
add
test
mov
push
sbb
fstpt
push
adc
inc
popf
fcoms
push
inc
mov
sub
fisubrs
inc
popf
pop
mov
pop
xorl
sbb
mov
jge
out
insb
ret
pop
mov
mov
sub
call
js
xor
adc
out
push
lock
or
mov
sarl
iret
cltd
cmp
sub
lea
dec
xchg
xchg
popf
repz
movb
scas
jecxz
xchg
cmp
test
in
mov
push
cli
repnz
jecxz
mov
sbb
push
ljmp
cmp
andl
mov
mov
add
sbb
mov
pop
cs
inc
xor
fnstsw
push
push
sub
out
clc
data16
and
inc
sarl
iret
or
pushl
lea
jne
movzbw
push
jmp
push
call
mov
dec
push
movb
pushf
pushl
popl
push
push
pushf
pushf
pushl
ret
cmp
jmp
push
call
imul
and
xor
mov
in
orl
test
mov
mov
sbb
aas
jbe
cmp
add
and
add
add
jbe
insb
imul
test
xor
jnp
cmp
mov
imul
and
add
pushf
mov
jmp
push
call
push
add
push
push
lcall
imull
xchg
push
call
not
inc
push
movb
pusha
jmp
pushf
dec
pushl
push
pushl
push
lea
jne
push
pushf
movw
lea
jmp
push
call
mov
inc
cmpsb
push
call
movsb
pusha
ds
jno
fs
jne
pushf
mov
pushl
ret
sbb
orl
in
stos
inc
movsl
push
decl
adc
das
test
subl
cmp
inc
add
mov
scas
scas
xchg
mov
mov
mov
xor
test
jns
xchg
nop
jne
mov
shll
push
jns
jbe
add
add
hlt
mov
mov
lret
push
stc
loope
icebp
pop
jb
sub
mov
cmp
adc
add
rcl
rcrb
icebp
push
call
cmc
inc
addb
jmp
dec
and
xchg
push
inc
pop
jnp
ret
push
sub
push
out
es
test
movsb
ret
dec
adc
sbb
or
mov
negl
test
xor
adc
icebp
xchg
push
mov
or
ret
jmp
aaa
push
or
leave
faddl
cs
rclb
cmp
scas
mov
dec
mov
jmp
fcomps
cmp
cmp
mov
loope
popf
sbb
add
or
pop
clc
pushl
movl
pushl
popl
pushf
pushf
pushf
pushf
pushl
ret
mov
dec
in
push
out
or
sub
rolb
inc
addb
stos
dec
mov
push
rcl
dec
sahf
in
inc
dec
cmpsb
or
add
mov
movsl
cmp
or
xchg
pop
mov
test
or
xor
sub
or
mov
adc
mov
or
into
out
out
push
cmp
cmc
fstl
adc
inc
call
stc
sbb
mov
push
sti
mov
shlb
das
scas
fwait
and
dec
jae
mov
xchg
fwait
stos
sarl
rcrl
inc
das
sbb
cmp
push
jne
fcomps
dec
jbe
in
xlat
sbb
ss
test
in
cmp
mov
pop
fisubs
jae
add
jle
mov
adc
std
mov
lret
shl
jp
xchg
sbb
in
bound
ret
push
mov
fwait
rcrb
sbb
jp
sub
sub
mov
sbb
repnz
mov
dec
filds
dec
mov
dec
out
sarl
rcll
xchg
mov
movb
not
lods
pusha
pushf
jmp
jmp
xchg
fs
cmpsl
pop
add
les
rcl
xor
cmp
decb
mov
sbb
sub
adc
jb
or
pusha
xor
cmp
loop
inc
fnstsw
or
mov
xchg
mov
dec
aas
lret
mov
cmc
outsl
xor
xchg
add
std
or
add
in
push
xchg
inc
dec
ret
lcall
fs
aam
std
sbb
insb
ret
dec
test
lret
mov
in
sub
dec
cmp
sub
popf
dec
hlt
adc
loop
sarl
aam
cmp
mov
and
mov
nop
insb
or
aam
cmp
mov
sbb
outsl
cmp
xchg
imul
lcall
xchg
pop
aas
mov
stc
pop
and
mov
lds
bound
sbb
mov
cmp
popf
cmp
stc
mov
inc
fldt
sub
test
dec
cmc
mov
jg
call
sarl
aam
xchg
jnp
movl
pushf
jmp
dec
out
and
push
out
jae
fsubrl
adc
xor
shll
or
imull
sti
int
inc
sub
add
fsubs
push
fidivl
cmp
pop
cwtl
mov
jecxz
test
int
rcll
inc
mov
ds
cltd
jae
test
aaa
xchg
cmpsb
shrb
cld
shll
fcoml
dec
pop
idivl
pop
rclb
dec
loop
stc
or
or
popf
lcall
or
mov
jmp
push
cmpsb
pmaxsw
sbb
sarl
aad
pop
adc
add
jb
jne
insb
inc
insb
insb
outsl
arpl
pusha
pushf
lea
jne
lea
not
not
movzbw
mov
pusha
mov
pusha
pushf
popl
push
pushl
or
push
call
pushf
call
movsl
sub
movsb
push
sbb
pusha
sub
sub
lcall
shll
adc
clc
dec
loopne
loop
inc
fcoml
mulb
movl
sbb
xor
fstpl
xlat
out
jge
loope
andb
call
push
aam
jmp
pop
dec
fwait
loope
mov
jmp
jae
aam
sbb
add
shrl
call
cmp
test
into
push
pop
xor
cmpsb
inc
add
fisttps
aas
repnz
xchg
shl
sbb
lret
pop
jle
addl
popa
pop
ficompl
xchg
pusha
faddp
enter
xor
xor
je
mov
dec
stos
lock
and
xor
mov
adc
pushf
sbb
inc
sbb
test
aas
loop
jae
mov
cmp
lea
dec
mov
pop
and
sbb
mov
mov
jns
add
filds
icebp
push
dec
mov
mov
int3
dec
xchg
mov
dec
enter
enter
shrb
add
jp
bound
sub
xchg
inc
mov
das
popl
loope
jne
mov
lods
lock
mov
cmpsl
cmpsb
and
cmp
mov
sub
iret
cwtl
add
push
sub
xchg
test
arpl
icebp
jno
mov
xchg
mov
lock
cmp
jge
jb
pop
adc
push
in
lods
sarl
ret
in
push
pushf
lea
ja
stc
stc
imul
pushf
cmc
add
pusha
movw
push
pushf
lea
jmp
pusha
in
inc
cmp
loop
fnstsw
sub
lock
cmp
clc
in
imul
js
fwait
in
inc
and
nop
pusha
mov
cld
mov
movsl
push
test
dec
jge
sbb
call
dec
mov
roll
stos
and
push
mov
xchg
jo
inc
je
aas
pop
cmp
cmpl
sbb
xchg
enter
int3
add
ja
test
loope
aam
leave
cmp
popa
xlat
cwtl
jns
push
lahf
out
dec
adc
popa
rol
test
cmp
test
pushw
popfw
jmp
stos
or
cmp
adc
jae
jne
dec
cmp
andl
xchg
lds
shl
int3
jmp
jno
pop
and
movl
adc
lahf
sbb
ljmp
add
test
sub
test
in
jg
popf
sbb
aaa
mov
hlt
adc
push
add
rcrl
daa
test
mov
dec
sbb
dec
cld
fcmove
test
mov
je
push
pushf
pop
xchg
sub
mov
xchg
movsl
xorl
lret
int
push
push
jge
nop
push
icebp
xor
mov
jle
dec
out
cmp
fld
push
jge
lds
jb
push
add
or
sbb
mov
mov
dec
test
jno
ficoms
int
push
test
scas
lock
mov
fsub
jp
dec
add
pop
fld
and
stos
mov
popf
int
aas
mov
sarl
fcom
fnstcw
jmp
je
push
cltd
sahf
in
inc
mov
sbb
sahf
jo
cwtl
in
outsb
sbb
sti
sub
push
sub
jmp
jg
mov
sub
or
fs
cmpsl
adc
push
xchg
pop
dec
sbb
pop
mov
mov
bound
stos
adc
push
jl
cmp
mov
sahf
sub
xor
popa
or
push
jp
pop
mov
popf
aas
icebp
pop
xchg
mov
adc
mov
add
push
pop
imul
xchg
xchg
stos
mov
int3
push
sarl
fxch
aaa
lcall
sbb
jecxz
adc
sub
hlt
inc
popf
pop
mov
adc
xlat
xorl
jecxz
fnsave
sti
enter
stc
adc
daa
popf
mov
push
and
cli
popa
push
xchg
repnz
push
inc
mov
lods
lds
sti
pop
test
sbbb
pop
ja
repnz
push
xchg
arpl
mov
push
xor
cmp
add
mov
bt
rol
btr
bsr
push
mov
test
add
push
cmp
bswap
xadd
rol
mov
stc
mov
sbb
adc
inc
bt
mov
stc
sub
push
lods
test
push
add
call
add
mov
push
xlat
pushf
sbb
aas
push
mov
out
fidivrl
iret
dec
pop
mov
jge
fdivrs
rorl
add
popa
adc
push
lret
or
mulb
inc
stc
scas
xor
inc
cli
xchg
lds
inc
pusha
push
push
movsl
lods
sbb
ljmp
jnp
adc
xor
sbb
push
or
xchg
mov
ror
mov
pop
sarl
fisttpl
adc
decl
cmpl
ljmp
mov
and
push
cmc
cmpb
call
push
call
out
lret
decb
iret
dec
call
lcall
inc
imul
pop
adc
add
popf
sti
pop
xor
jl
jnp
xor
fidivrs
fwait
cmpsl
and
add
push
pop
insl
pop
cs
jecxz
outsl
and
xchg
lods
imul
popf
sub
or
nop
je
inc
mov
push
pop
in
pop
mov
aaa
sti
dec
inc
dec
pusha
jno
aaa
pop
icebp
sbb
adc
out
cmp
das
and
sbb
aaa
xor
mov
mov
imul
test
fsubrl
imul
loope
call
sahf
mov
aam
pop
js
sahf
sub
clc
mov
jnp
aaa
pop
rcrb
mov
and
cs
gs
or
cmp
jecxz
cmp
pop
mov
dec
fsubrl
adc
add
sub
jge
pop
clc
jae,pt
sbbb
daa
stos
fisubrs
nop
mov
push
mov
ret
negl
xchg
in
jge
shlb
enter
scas
sbb
jns
loope
add
dec
lods
push
call
push
call
fdivs
add
std
jmp
cmp
cmpsb
pusha
lea
ja
jmp
mov
repz
imul
lods
pusha
push
popa
push
and
inc
or
shld
imul
clc
nop
pop
sub
sub
and
jae
jae
and
sub
push
xchg
jg
ret
dec
mov
lret
hlt
push
dec
mov
mov
fwait
loop
addr16
jns
pop
shrl
dec
dec
mov
vcvttsd2si
adc
enter
lahf
cmpsl
imul
xchg
jno
scas
mov
cmp
fdivrp
and
sbbl
sbb
sub
sub
insl
loope
fidivs
imul
cwtl
dec
dec
xchg
ret
pop
or
les
aaa
mov
push
leave
adc
leave
and
cmp
das
mov
pop
mov
cmp
or
mov
rol
pushf
pushf
jmp
lea
ja
push
lea
jb
cmp
push
cmpb
jmp
push
call
fbld
daa
mov
int3
sub
movsl
stc
cltd
imul
and
dec
add
out
mov
cld
scas
mov
jne
dec
add
out
sub
sti
mov
push
popa
lcall
xor
in
mov
out
fistps
aaa
aaa
mov
mov
pop
mov
cmp
cld
or
jo
sbb
ja
ljmp
lods
mov
sarl
fisttps
or
inc
into
movsb
inc
and
and
rclb
sbb
repnz
inc
mov
popa
sbbb
mov
mov
adc
std
repnz
mov
or
pusha
ljmp
pop
lret
xor
cmp
sti
xchg
pusha
pop
inc
dec
sbb
mov
mov
adc
mov
aas
xor
std
das
sti
fidivl
test
cld
mov
stos
aad
adc
fcmovnbe
cmp
or
mov
fcomps
pop
daa
rclb
inc
int
cmp
add
ret
in
lock
and
cmc
int
cld
ffreep
pushf
adc
xchg
and
shr
ljmp
shlw
jno
hlt
mov
jmp
rcr
scas
pop
mull
je
mov
sub
or
jae
or
cli
sbb
and
mov
test
mov
jge
adcb
sarl
loopne
pop
test
pusha
inc
popf
jne
pop
daa
loope
push
and
lcall
jmp
jnp
or
cwtl
xor
pop
mov
clc
jnp
or
sub
add
outsb
jecxz
cmp
test
jbe
testl
or
jb
sti
cmpsb
fdivs
imul
rcrb
scas
cmc
push
stos
scas
ret
jl
ja
sub
rcrl
aad
xlat
xor
push
or
xor
adc
xor
lods
test
hlt
jo
std
out
call
nop
inc
bound
cmc
jmp
add
bt
pushl
pushf
call
mov
mov
mov
push
lea
jmp
cmc
cmc
cmp
xor
test
cwtl
jmp
add
shl
mov
stc
jmp
bsf
movsbw
bt
movsbw
rdtsc
pushf
jmp
add
mov
mov
bsf
mov
push
clc
stc
pushf
sub
clc
stc
mul
pusha
lea
jbe
pusha
mov
pushf
pushf
mov
push
jmp
call
pushf
pushl
popl
movb
movb
mov
lea
jmp
push
jmp
push
movl
pusha
mov
jmp
and
shl
mov
and
add
mov
sete
mov
call
bt
movb
jmp
bt
jmp
mov
push
rep
neg
mov
jmp
mov
push
pushl
pushf
popl
call
mov
ror
and
pop
daa
mov
xor
pushl
popf
call
pushf
call
dec
out
fsubr
or
fsubr
dec
out
fsubr
fcmovu
fsubr
stc
fsubr
mov
fsubr
push
jecxz
out
das
cli
fsubr
push
out
pop
repnz
leave
out
fsubr
fsubr
lahf
jmp
fsubr
push
jecxz
out
data16
fsubr
push
out
dec
out
pop
loop
out
pop
repnz
lods
hlt
fsubr
ja
fsubr
push
jecxz
out
arpl
fsubr
sub
fsubr
pop
loop
out
adc
fsubr
inc
fstp
out
iret
stc
fsubr
cld
out
push
jecxz
out
xor
fsubr
adc
fsubr
fstp
out
jle
fsubr
ja
fsubr
jle
fsubr
data16
fsubr
push
jecxz
out
stc
fsubr
dec
out
fsubr
fcmovu
fsubr
enter
or
fsubr
push
jmp
fsubr
push
jecxz
out
loopne
out
or
fsubr
popf
in
out
add
fsubr
data16
fsubr
fwait
loop
out
adc
fsubr
push
jecxz
out
push
out
pop
repnz
jle
fsubr
pop
repnz
ja
fsubr
cld
out
or
fsubr
push
jecxz
out
stc
fsubr
adc
fsubr
dec
out
mov
fsubr
mov
fsubr
adc
fsubr
mov
fsubr
push
jecxz
out
xor
fsubr
lods
hlt
fsubr
fwait
loop
out
leave
out
fsubr
jmp
fsubr
leave
out
fsubr
jle
fsubr
push
jecxz
out
inc
fstp
out
adc
fsubr
xor
fsubr
pop
loop
out
ja
fsubr
or
fsubr
lods
hlt
fsubr
push
jecxz
out
inc
out
out
enter
or
fsubr
push
out
inc
out
inc
fstp
out
pushf
lock
push
jecxz
out
inc
out
xor
out
or
fsubr
stc
fsubr
push
jmp
fsubr
or
fsubr
push
jecxz
out
ja
fsubr
mov
fsubr
out
fsubr
insb
out
out
sub
fsubr
ja
fsubr
jle
fsubr
push
jecxz
out
pushf
lock
dec
out
aam
fsubr
lret
out
mov
fsubr
insb
out
out
fcmovu
fsubr
push
jecxz
out
data16
fsubr
sub
fsubr
idiv
fsubr
fsubr
inc
out
inc
out
mov
fsubr
sub
out
jmp
fsubr
leave
out
fsubr
xor
out
inc
out
out
adc
fsubr
cld
out
sub
cli
fsubr
stc
fsubr
ja
fsubr
out
push
out
pop
loop
out
adc
fsubr
sub
hlt
fsubr
dec
out
fsubr
fstp
out
loopne
out
dec
out
stc
fsubr
ja
fsubr
sub
in
out
stc
fsubr
inc
fstp
out
mov
fsubr
jle
fsubr
add
fsubr
add
fsubr
sub
lock
out
out
fsubr
inc
out
data16
fsubr
adc
fsubr
out
fsubr
sub
stc
fsubr
mov
fsubr
fcmovu
fsubr
enter
outsl
in
out
or
fsubr
popf
in
out
sub
repnz
idiv
fsubr
cld
out
out
insb
out
out
lods
hlt
fsubr
fcmovu
fsubr
sub
ljmp
adc
fsubr
push
stc
fsubr
insb
out
out
adc
fsubr
inc
out
sub
stc
fsubr
lcall
out
ja
fsubr
push
stc
fsubr
adc
fsubr
jle
fsubr
sub
out
push
stc
fsubr
jmp
fsubr
xor
out
fstp
out
push
stc
fsubr
iret
stc
fsubr
sub
out
out
sub
fsubr
adc
fsubr
or
fsubr
dec
out
fsubr
pop
loop
out
outsl
in
out
sub
jmp
fsubr
imul
out
fwait
loop
out
out
inc
fstp
out
lret
out
sub
in
out
fstp
out
loopne
out
xor
fsubr
jle
fsubr
inc
fstp
out
aam
fsubr
sub
jmp
fsubr
jmp
fsubr
fwait
loop
out
iret
stc
fsubr
adc
fsubr
data16
fsubr
sub
out
out
adc
fsubr
popf
in
out
push
jmp
fsubr
push
jmp
fsubr
sub
in
out
ja
fsubr
dec
out
ja
fsubr
xor
fsubr
pushf
lock
push
out
popf
in
out
push
jecxz
out
pushf
pushl
mov
pushl
push
pushf
movw
mov
push
lea
jmp
movzbw
cltd
cwtl
mov
pushf
pushf
pop
mov
pusha
divl
movl
mov
pushf
pushf
jmp
jmp
bts
mov
call
jmp
sub
stc
bt
ror
jmp
mov
pushf
mov
pushl
pushf
lea
jmp
pushf
xor
stc
add
clc
cmp
jmp
push
test
mov
pushf
sub
movb
mov
movl
mov
lea
jmp
btc
mov
rcr
setnp
mov
clc
cmc
add
call
lea
lea
shrd
movsbw
mov
adc
add
adc
xor
mov
bswap
xor
pusha
dec
pusha
dec
btc
btc
not
btr
rcr
ror
btc
ror
btr
btr
xor
add
dec
movzbl
dec
mov
cmc
neg
test
push
pushf
add
pushl
mov
push
movb
pushf
mov
pushl
ret
inc
setnp
dec
push
ror
not
bts
test
not
shl
mov
xor
movzbw
mov
test
pusha
pushf
mov
add
jmp
mov
pushl
mov
push
pushf
popl
pushf
push
push
call
lea
jge
pushf
push
mov
jmp
cbtw
pushf
lea
js
dec
call
pushf
mov
push
mov
movw
lea
jmp
shl
mov
movzbw
stc
mov
pusha
mov
pusha
mov
add
jmp
mov
push
lea
jmp
pushf
inc
test
bt
movw
xor
pushf
pushf
sub
jmp
aam
xor
push
mov
pushf
pushf
sub
mov
pushf
jmp
cmp
ror
mov
test
xor
mov
pusha
sub
bt
shr
jmp
call
shl
cmc
call
pushf
jmp
pushl
popl
push
pushl
lea
jmp
jmp
mov
not
seto
jmp
call
xor
push
pushf
inc
mov
lea
jp
decl
pusha
pusha
mov
lea
jne
pusha
lea
jl
pushf
mov
push
pushf
pushf
lea
jmp
lahf
sbb
or
ror
mov
clc
cmp
add
push
pushf
pushf
popl
jmp
pusha
dec
call
mov
lea
pusha
pushf
pushf
mov
pushl
jmp
stc
sub
cmc
pusha
jmp
pusha
pusha
mov
jmp
shld
pushl
jmp
mov
pusha
shr
mov
pushl
pusha
push
add
movw
mov
mov
pushf
push
movb
mov
lea
jmp
neg
pusha
cmp
cmp
clc
sub
pusha
jmp
and
bsf
and
mov
mov
bt
push
pusha
stc
add
mov
pushf
lea
jmp
add
call
and
mov
bt
sub
stc
add
pusha
jmp
call
movb
sub
pusha
pusha
div
push
pushf
pushf
jmp
inc
cmc
jmp
ror
dec
mov
pusha
bt
pusha
bswap
test
sub
pushf
inc
cmp
bt
pushf
pushf
lea
cmc
neg
bt
ror
call
clc
mov
stc
cmc
xor
call
pusha
pusha
push
decl
movb
call
shl
call
rol
test
jmp
jmp
sub
jmp
bt
push
btc
stc
rol
inc
sbb
bts
shld
not
shl
lea
add
bt
neg
inc
shrd
and
xor
bswap
movsbw
mov
cmp
jmp
pusha
sub
stc
test
shl
mov
pusha
mov
mov
movb
pushf
jmp
mov
movl
pushf
mov
movw
lea
jmp
pushl
pushf
popl
pushl
pushf
push
pushl
popl
push
pushf
pushf
lea
jmp
sub
mov
ror
sub
mov
bt
add
pushf
mov
mov
pushf
push
pushf
lea
jmp
not
bt
mov
bt
movzbw
jbe
mov
sar
mov
pushf
mov
clc
call
ror
jmp
pusha
stc
pushf
add
pusha
movb
call
cld
pusha
call
pushf
popl
pusha
jmp
pushf
popl
pushf
pushf
pushl
popl
mov
movw
pushf
pushf
lea
jmp
pushf
mov
call
mov
not
pusha
mov
stc
add
pushf
movw
lea
jmp
mov
pushf
pusha
pushf
lea
jmp
jmp
ror
not
mov
not
mov
xchg
inc
sar
lea
stc
shld
cmc
sub
call
pushf
jmp
neg
test
mov
sbb
pushf
pusha
sub
mov
clc
jmp
cmc
stc
jmp
call
push
push
jmp
call
pushf
mov
call
inc
movsbw
mov
pushf
bsf
sar
shr
mov
bt
stc
add
call
pushf
pushf
popl
push
pushf
pushl
popl
pushl
pushl
push
lea
jmp
call
mov
lea
bswap
mov
movw
lea
call
push
call
mov
mov
pushf
pushf
popl
pusha
pushf
jmp
jmp
pusha
pushf
jmp
pusha
pusha
movb
mov
mov
pushf
push
movw
lea
jmp
pushf
pushf
popl
push
mov
pushf
pusha
pushl
popl
mov
push
push
push
lea
jmp
pushf
pushf
popl
jmp
pusha
pushf
jmp
movzbw
movzbw
mov
push
push
bswap
call
movb
add
movb
push
mov
movl
pushf
jmp
push
pushl
popl
mov
movb
mov
movl
lea
jmp
sub
pushf
sub
jmp
push
pushf
mov
push
movl
pushf
popl
pusha
movb
movl
pushl
pushl
popl
mov
mov
pushl
lea
jmp
call
pushf
ror
pushl
sub
mov
xor
jmp
and
bt
jmp
pushf
jmp
mov
pusha
jmp
add
add
push
mov
pushl
pusha
pushf
pushl
lea
jmp
mov
jmp
bt
stc
bt
call
call
mov
pushf
pusha
pushf
popl
call
pushl
popl
mov
movw
mov
lea
jmp
call
pushl
popl
pushf
push
lea
jmp
push
pushf
pushf
pushl
popl
mov
mov
lea
jmp
cwtl
lea
stc
clc
push
cmp
mov
lea
ja
call
mov
pushf
pushf
mov
pusha
push
pushf
lea
jmp
sar
ror
bsr
neg
mov
cmp
xor
shl
cmp
sub
or
add
movzbw
inc
movsbw
neg
setge
rcl
movsbw
rol
sete
stc
sub
movzbw
xor
rol
btc
cmc
movzbw
mov
jle
clc
cmc
add
pushf
lea
js
dec
jmp
movsbw
movsbw
lea
mov
mov
bswap
not
pushf
not
bswap
std
pusha
xchg
movsbw
cld
xchg
call
add
stc
pusha
bt
shld
movb
pushf
jmp
stc
shr
push
pushf
jmp
bswap
jmp
call
mov
mov
mov
push
pushf
lea
jmp
lea
shld
shl
neg
movsbw
and
sbb
add
ror
sub
movzbw
lea
js
mov
call
call
jmp
pushl
pusha
dec
push
jmp
mov
pusha
lea
jmp
cmc
pushf
adc
mov
cmp
bt
cmc
sub
bt
cmc
call
mov
movw
lea
jmp
jmp
movzbl
pop
push
pushf
popl
lea
push
movzbw
movzbw
lea
movsbw
mov
mov
lea
std
pusha
xchg
not
jmp
mov
push
mov
pushf
pushf
pusha
lea
jmp
jmp
stc
cmp
bt
call
rcl
movzbl
adc
sub
and
sub
shl
sub
bt
rcr
xor
jmp
mov
jmp
jmp
xor
pusha
mov
jmp
dec
movb
jmp
shr
bt
mov
rcr
pusha
rcr
mov
pushf
add
pushf
pushf
pushf
lea
jb
mov
pusha
lea
jmp
pushl
popl
movb
lea
jmp
adc
ror
setl
mov
jmp
mov
movb
pushf
pushf
lea
jmp
call
mov
call
mov
mov
mov
mov
push
lea
jmp
pushl
mov
movzbw
lea
mov
jmp
call
mov
push
pushf
mov
mov
lea
jmp
push
mov
pusha
pushf
lea
jmp
jmp
jmp
push
pushf
popl
lea
jg
popl
pusha
pusha
pushf
lea
jmp
push
mov
pusha
pusha
jmp
jmp
mov
mov
lea
jmp
mov
call
lea
lea
mov
shl
rcl
or
mov
push
cmp
add
call
not
movzbw
mov
call
sub
pusha
movb
lea
jno
mov
pusha
pushf
push
lea
jmp
call
mov
pushf
pushl
mov
lea
jmp
pushf
push
pushl
popl
pusha
lea
jmp
mov
push
pushf
popl
call
sar
pushf
ror
movzbl
pushf
xor
pushf
test
sub
bt
pushf
stc
ror
jmp
jmp
mov
lea
jl
pushf
jmp
pushf
call
push
mov
pushl
movb
pushf
movb
lea
jmp
bt
mov
mov
mov
call
pusha
not
push
pushf
mov
stc
not
movw
cmc
sub
cmp
and
movb
mov
pushf
pushf
popl
push
jmp
bsr
dec
mov
rcr
shl
rcr
add
pusha
movsbw
dec
shld
sub
sub
movzbl
jmp
call
push
push
pushl
popl
push
lea
jmp
pushl
popf
pushl
lea
jmp
pushl
popl
push
pushl
pushf
pushf
lea
jmp
pushf
popl
lea
pushf
btc
btc
xchg
pushf
call
call
mov
pusha
push
movb
movl
lea
jmp
movb
mov
mov
pushl
pushl
push
lea
jmp
pushl
shr
call
mov
pushf
pusha
mov
pushf
lea
jmp
btc
mov
push
clc
add
mov
pusha
push
mov
call
jmp
call
pushl
popl
movb
pushf
push
lea
jmp
cwtl
cmp
bt
clc
pushf
sub
pushf
pusha
call
mov
pushf
movb
pusha
movb
lea
jmp
mov
cld
movb
pushf
jmp
pushf
pushf
mov
mov
mov
push
mov
lea
jmp
lahf
bt
mov
bt
rcr
shl
pop
push
btr
jmp
pushf
pushf
pusha
mov
push
pushf
lea
jmp
mov
push
lea
jmp
lea
movzbw
mov
pusha
mov
pusha
lea
jb
push
push
mov
pushl
lea
jmp
das
dec
lea
lea
inc
push
btr
lea
btr
bswap
movzbw
bt
sub
jmp
shl
pushf
mov
pushf
pushf
pushf
pushl
pushf
popl
push
push
pushf
mov
pushl
popl
mov
lea
jmp
cmp
inc
shl
movzbl
cmp
push
xor
pushf
pusha
jmp
lea
jb
pusha
mov
pushl
lea
jmp
mov
push
pushf
pushf
lea
jmp
pushf
mov
pushf
mov
push
pushl
lea
jmp
mov
lea
jnp
mov
pusha
mov
call
pusha
sar
mov
jmp
call
jmp
neg
pushl
cmc
cmc
jmp
cmp
rcl
bts
bsf
mov
jmp
pushl
popf
mov
movb
mov
lea
jmp
mov
inc
inc
add
pusha
push
mov
pusha
jmp
mov
pushf
cmp
add
jmp
jmp
xor
test
jmp
btc
dec
shr
mov
cmc
mov
sub
mov
call
mov
jmp
aaa
and
jmp
mov
mov
mov
movb
lea
jmp
jmp
btr
rol
shl
bswap
add
lea
not
cmc
btc
rcr
sar
neg
sbb
rol
and
add
mov
push
push
test
stc
add
pushf
call
pushf
push
mov
push
jmp
jmp
call
add
js
shld
jmp
pushl
mov
mov
pushf
mov
pushf
movb
push
pushf
lea
jmp
push
mov
mov
pushf
lea
jmp
pushf
pushl
pushl
popl
pushf
lea
jmp
neg
shl
mov
jmp
push
pushf
pushl
mov
movb
mov
push
mov
pusha
mov
pushl
pushf
lea
jmp
lea
movsbw
xchg
shr
mov
bswap
ror
sub
mov
not
mov
stc
stc
pushf
add
stc
clc
call
pusha
lea
cpuid
pusha
cmc
push
mov
sub
pushf
mov
pushl
pushf
call
jmp
pushf
pusha
mov
call
pushf
pushl
mov
pushf
pushf
pushf
lea
jmp
sar
sub
mov
test
cmc
cmp
jmp
pushl
popl
push
movb
pushl
pusha
lea
jmp
sub
pushf
call
pushf
popl
call
pushl
popl
push
push
pushl
pushl
lea
jmp
pushf
popl
jmp
sub
bt
cmc
shr
pushf
pushl
pusha
mov
jmp
pushf
pushl
mov
pushf
jmp
dec
mov
push
pushf
push
lea
jmp
push
mov
pusha
pushf
call
stc
jmp
lea
jne
pusha
jmp
push
mov
bswap
push
mov
not
xchg
push
rdtsc
mov
movzbl
movsbw
setbe
mov
jmp
popl
pushf
pushl
lea
jmp
cmc
sub
call
shr
pusha
or
call
lahf
sar
shl
mov
or
cmc
test
inc
mov
jp
pushf
cmc
sub
jmp
mov
call
xor
cmc
bt
neg
clc
jmp
clc
test
sub
jmp
movb
pushf
mov
pusha
lea
jmp
movw
shrd
call
push
xor
jmp
rep
rol
or
neg
mov
and
mov
bt
pushl
popf
movb
mov
mov
mov
lea
jmp
stc
clc
cmp
sub
clc
sub
pusha
call
jmp
call
call
sub
movw
movw
call
mov
bt
jmp
btr
notl
btc
btr
cmp
mov
push
bt
sub
pusha
stc
pushf
and
mov
pushl
movl
pushf
pushf
popl
lea
jno
popl
push
mov
push
lea
jmp
pusha
xchg
pushf
pushl
pushf
jmp
jmp
mov
movsbl
pusha
lea
pushf
push
pushf
cld
mov
push
cld
pushf
jmp
movw
pushf
mov
lea
not
lea
mov
pushf
pushf
mov
push
mov
pushl
ret
cld
cld
cld
mov
movw
call
jle
pusha
mov
push
pusha
lea
jmp
sub
mov
test
pushf
jmp
bts
bt
mov
sbb
mov
call
pushf
mov
pusha
sub
push
cmc
add
jmp
pushl
popl
mov
stc
clc
movl
movzbw
rcl
mov
rcl
call
sub
push
mov
jmp
pushf
mov
push
movb
movb
pushf
lea
jmp
movb
jmp
stc
stc
mov
jmp
sets
pushf
lea
mov
call
dec
mov
cwtl
jmp
pushf
mov
pushf
pushf
pushf
lea
jmp
mov
push
push
push
lea
jmp
mov
mov
jmp
lahf
mov
shld
bt
bts
mov
rcl
shr
mov
clc
call
daa
not
das
inc
mov
dec
btr
bt
mov
pushf
bt
mov
not
stc
call
pushf
pusha
mov
pushf
push
movw
mov
pushf
mov
pushl
push
lea
jmp
pushf
dec
cmc
clc
pushf
movb
ror
movb
cmc
not
movw
xor
bt
stc
mov
clc
mov
sub
movb
jmp
movzbl
push
mov
pushl
call
daa
das
mov
cmc
clc
cmc
xchg
call
push
dec
push
pushl
lea
jmp
call
mov
push
pushl
lea
jmp
pushl
popl
pusha
pushf
mov
push
lea
jmp
mov
pushf
pushf
mov
mov
lea
jmp
push
push
mov
call
jmp
xadd
pusha
rcl
mov
btr
clc
mov
stc
pushl
add
jmp
pusha
mov
mov
push
pushf
popl
jmp
lea
push
movzbw
mov
push
mov
pushf
push
call
pushf
popl
pushf
pushf
push
pushf
pushl
popl
movw
push
pushf
lea
jmp
pushf
popl
call
stc
seta
daa
or
mov
bt
sub
jmp
push
push
mov
movb
pusha
lea
jmp
call
movl
cmc
not
pushf
and
jmp
push
push
mov
pusha
lea
jmp
