aaa
call
in
add
sub
add
mov
movl
add
add
mov
out
or
mov
mov
mov
rorl
mov
mov
sti
sub
adc
or
jmp
mov
cmp
lret
sbb
je
add
mov
mov
hlt
cmp
sub
sub
mov
mov
mov
add
mov
mov
dec
outsl
outsl
fstpt
lret
pop
outsl
sub
mov
sbb
out
mov
jbe
push
adc
dec
outsb
imul
sarl
sub
mov
nop
call
fucomp
out
ffreep
cld
add
sub
mov
sbb
or
and
int3
pop
repnz
jno
mov
bound
ja
push
gs
push
xor
push
mov
push
imul
cld
fimull
push
incl
xchg
push
mov
pop
popa
push
sbb
cmp
mov
mov
inc
fdivs
add
lea
jle
fistl
jb
sbb
pop
or
fbstp
pop
cmp
xchg
cmpb
ss
sti
bswap
mov
jp
out
lret
or
inc
jno
or
add
xor
add
push
push
popa
sub
in
lods
push
add
mov
xor
sub
mov
insl
scas
sarb
sarb
sbb
jns
mov
mov
mov
mov
neg
jnp
shrl
mov
pusha
push
or
daa
mov
test
shlb
nop
dec
mov
fstpt
xor
enter
sbb
mov
shlb
fs
lock
jecxz
jns
push
xor
sbb
and
sbb
cmp
or
jecxz
lock
fwait
in
jmp
sub
push
push
sbb
sbb
sbb
call
rcll
adc
jge
je
ficompl
inc
lahf
and
pusha
lock
shlb
xor
lock
repz
sbb
mov
add
ret
sbb
mov
lret
lods
mov
stc
movzwl
jl
js
imul
sbb
lods
insb
pop
cmp
add
icebp
lock
fldt
sbb
jne
mov
mov
adc
mov
sbb
imul
sub
push
cmp
pop
xchg
fidivl
dec
imul
or
mov
test
pop
call
push
mov
add
popl
mov
inc
imul
lock
or
les
incl
outsl
outsb
mul
pop
mov
push
push
pop
pop
mov
inc
lahf
aaa
lret
push
or
outsl
sbb
sub
rorl
dec
sub
push
rclb
leave
push
xchg
shl
es
push
out
add
adc
out
mov
mov
pop
mov
pop
pop
ljmp
idiv
and
adc
add
fcomp
or
scas
je
in
hlt
pop
jg
fstl
div
push
dec
or
lcall
push
push
shll
js
add
mov
divl
leave
dec
fcom
push
std
fsubrs
or
mov
scas
lret
or
in
popa
push
cmp
mov
jle
jecxz
mov
arpl
out
and
shrb
pop
xor
lret
ret
idiv
fidivrl
mov
and
lods
sbb
mov
dec
ret
add
mov
in
mov
dec
mov
or
imul
push
sbb
xchg
lock
add
fs
sub
jne
or
adc
sbb
fdivl
ljmp
std
jne
xor
nop
and
lock
mov
ret
add
mov
pop
out
adc
mov
dec
call
ret
push
xor
or
fldt
mov
cmp
or
mov
and
rcrl
mov
stc
mov
add
inc
pop
adc
cmp
push
mov
sub
shll
jo
repnz
test
cmovp
sub
pop
push
pop
imul
cmp
jo
ljmp
add
or
icebp
and
enter
fwait
lret
cltd
mov
int
es
sysret
or
push
movl
dec
pop
jnp
or
nop
or
aas
sbb
sbb
rcrl
lret
fsubs
xor
push
add
movb
adc
mov
inc
icebp
xchg
and
sbb
pop
mov
or
push
aad
addr16
lock
or
push
mov
in
inc
fwait
jo
cmp
insl
cmp
mulb
mov
jno
imul
push
mov
out
fbstp
rcrl
mov
int3
push
push
fisubs
fistpl
inc
pop
and
push
pop
in
fildl
xlat
and
jae
rcr
mov
jmp
xchg
subl
mov
xorl
insl
into
xchg
sub
negl
lret
mov
cmp
jae
sbb
mov
sbb
pop
lds
sbb
aas
out
push
sub
icebp
jo
and
mov
rclb
xchg
shrb
mov
dec
jmp
push
mov
ljmp
push
test
insl
mov
push
sub
xor
rcrb
sbb
jbe
mov
mov
push
lret
sbb
js
push
push
test
xor
push
addr16
add
push
mov
mov
ret
mov
mov
jmp
fildl
push
push
push
les
or
mov
inc
notl
or
adcl
cmp
in
jge
mov
dec
pop
cmp
and
icebp
or
lock
xchg
cmp
dec
cmp
sbb
mov
or
adc
pop
fisttps
or
or
and
mov
or
lods
or
jle
into
cwtl
mov
pop
inc
fstpt
and
cmp
push
ret
loopne
and
ret
mov
inc
pop
cs
lds
adc
into
mov
mov
rclb
pop
lods
sub
push
das
mov
mov
adc
cli
imul
pop
adc
inc
loopne
mov
mov
jmp
dec
mov
inc
ret
sbb
insl
mov
pop
sbb
dec
mov
shlb
ds
jmp
xchg
push
jl
sbb
xor
ud1
sbb
inc
and
mov
ret
adc
popf
inc
cmp
jne
icebp
jge
push
sbb
filds
mov
pop
repz
pushf
js
push
std
sbb
push
push
enter
idivb
js
mov
rorl
or
sbb
mov
into
ss
lea
lock
fcomip
movb
icebp
or
call
notb
cmp
mov
call
shrb
sbb
inc
mov
pop
xchg
jns
cmp
pop
lret
aam
lret
mov
mov
sbb
imul
repz
push
lods
or
filds
jae
insb
daa
and
mov
pop
add
clc
ja
stos
xor
push
adc
mov
pop
outsl
mov
ljmp
unpcklps
xchg
add
rorl
inc
mov
or
mov
in
or
push
idivb
mov
mov
pop
fnstsw
sbb
shrb
movsl
pop
in
and
repnz
shrl
sahf
out
dec
divb
cmp
in
mov
jecxz
or
sbb
mov
rcl
mov
test
mov
xchg
btc
cwtl
cmc
or
push
push
push
out
mov
push
adc
dec
add
lcall
xor
push
iret
negb
insl
setp
sti
fists
das
shlb
gs
shrb
xlat
test
jne
pop
stos
rclb
xchg
xchg
mov
push
scas
icebp
push
iret
pop
jle
pop
mov
cmp
leave
cmp
push
push
dec
loopne
dec
and
shlb
add
aaa
adc
push
loopne
mov
xchg
lahf
rclb
imul
dec
ficoms
and
sub
in
clc
mov
ljmp
mov
jno
mov
sbb
sbb
jne
or
add
pop
out
dec
mov
pop
lock
cltd
sbb
pop
int
mov
sub
popa
xor
pop
sti
push
test
cmpsl
inc
adc
ds
push
jmp
fisubrs
mov
or
push
pushf
sub
call
lods
add
push
mov
dec
ret
pop
or
inc
ret
mov
push
lds
pop
sbb
pop
or
orl
sub
dec
add
mov
ret
shlb
push
push
data16
test
das
xor
mov
imulb
and
or
fadds
sbb
add
mov
test
scas
sub
inc
ds
insb
lret
arpl
mov
sbb
bound
ljmp
pop
and
adc
mov
lcall
outsl
fwait
test
movsl
pop
lret
mov
inc
imul
cmp
jp
fcompl
lahf
or
outsb
mov
adc
mov
add
scas
ficoml
push
add
call
ljmp
rcl
arpl
sbb
popa
popf
les
xor
jle
xchg
outsb
icebp
in
ret
mov
push
lods
rcll
lret
sub
sub
pop
xor
in
mov
jmp
popf
push
call
or
push
in
test
mov
sbb
push
movl
or
fstpt
test
mov
jb
ret
inc
sub
add
sbb
aad
dec
adc
jl
pusha
dec
pusha
fcmovnb
adc
xchg
ljmp
ret
dec
negb
mov
push
sub
je
inc
rorb
mov
ja
mov
mov
out
pusha
or
enter
in
jp
fistpl
adc
mov
mov
stos
ror
jmp
cmp
fs
nop
or
or
or
mov
test
insb
mov
je
mov
js
mov
sbb
icebp
rcrb
mov
addr16
adc
enter
pmaxsw
xor
push
repnz
inc
jo
cmc
mov
or
orb
dec
iret
xor
mov
lods
adc
mov
push
int3
insb
test
pop
pop
mov
test
sti
lods
mov
mov
scas
push
push
popf
add
icebp
pop
and
push
push
push
push
fwait
pop
ja
push
mov
pop
mov
dec
pushf
ja
mov
pop
fnsave
into
sbb
xor
fs
shrl
mov
push
imul
push
rclb
ljmp
pop
sbb
mov
mov
fwait
dec
or
fstl
icebp
jnp
fistpl
mov
push
inc
fwait
adc
sub
push
xor
sbb
aaa
popa
es
mov
stc
xchg
addr16
and
daa
add
inc
addl
mov
push
pop
or
inc
rcrl
ret
roll
or
mov
jo
les
popa
sbbb
loope
rcrl
mov
push
mov
cmpps
unpckhps
mov
cmp
rol
enter
inc
lods
xchg
adcl
ds
rcrb
pop
sub
fs
pop
inc
pusha
rcll
add
sahf
inc
movb
and
popf
les
adc
popa
call
shl
ret
sbb
add
inc
call
shll
lret
test
rorl
add
push
cwtl
js
lcall
and
pop
lods
enter
or
cmp
lret
fsubl
sbb
pop
add
push
adc
jo
xchg
push
jo
xor
pop
sbb
aaa
rcrb
pop
loope
pop
ror
cmp
les
mov
sahf
mov
jmp
push
pop
sub
insb
sub
cmp
ljmp
fcoml
testb
movb
pop
dec
shrl
arpl
push
dec
mov
or
test
fsts
ficompl
mov
lcall
ljmp
xor
insl
leave
mov
orb
pusha
cmp
pop
adc
xlat
test
xchg
sbb
pop
fidivl
movsb
sbb
out
in
sub
je
sbb
add
mov
aas
mov
or
inc
je
xchg
into
and
xchg
push
hlt
lcall
sti
arpl
mov
insb
sbb
or
divl
popa
add
cmp
scas
sbb
xor
out
fimull
sub
pop
int3
loopne
jle
dec
push
push
inc
insl
or
sbb
inc
stos
or
stc
add
adc
xlat
push
cmp
pop
insl
idiv
leave
sub
push
cld
adc
mov
lcall
dec
push
inc
push
push
aam
pop
push
mov
jo
cmp
inc
cmp
adc
mov
push
add
xchg
sbbl
push
push
pop
push
jns
in
pop
and
lcall
pop
mov
rcll
lods
mov
add
push
mov
pop
mov
cld
bswap
push
dec
jbe
push
bound
or
adc
clc
rol
mov
push
repnz
or
or
ret
sub
loopne
in
popa
sub
stc
imul
pop
pop
push
and
roll
mov
adc
jl
sub
test
add
or
push
lcall
cmpl
mov
lea
cwtl
in
add
shll
sbb
add
adc
enter
mov
mov
pop
cs
jmp
jp
dec
xchg
push
sub
and
sbb
pop
ret
xchg
mov
add
mov
popa
inc
or
or
lods
jmp
add
lock
sarl
jo
push
mov
or
sub
and
lds
subb
sub
frstor
fdivrs
and
cmp
pop
int3
or
subb
ljmp
push
or
or
adc
mov
divl
inc
pusha
in
test
mov
std
sub
rcrb
and
jp
movsl
sbb
lcall
loop
or
jle
or
lret
ljmp
sarl
in
test
inc
sub
sti
sub
pop
or
xchg
mov
xor
xorl
aad
scas
hlt
jmp
adc
push
roll
mov
push
test
pop
les
mov
cmp
dec
cmp
cmp
arpl
jne
pop
nop
mov
mov
ds
pop
adc
add
inc
sbb
testb
sbb
mov
fwait
mov
adc
data16
data16
dec
jge
sbb
and
movsb
int
push
sahf
mov
jge
push
pop
shlb
xchg
loop
lods
jno
bound
cmp
imul
mov
inc
call
mov
inc
test
or
jmp
or
pop
push
xor
pusha
jg
push
orl
push
mov
test
add
or
adc
cs
xchg
dec
cld
mov
xchg
pusha
fcmovbe
dec
mov
fs
pop
xchg
lods
or
and
hlt
imul
xchg
loopne
jmp
ret
xchg
or
lahf
xchg
sbb
mov
push
push
std
icebp
mov
mov
push
mov
cmpsl
push
call
mov
pop
gs
sbb
push
repz
adc
imul
movups
mov
rclb
mov
call
es
test
data16
add
icebp
and
sbb
inc
jnp
dec
pop
sbb
lock
pop
cmp
dec
test
cmc
sbb
into
js
push
xchg
jne
xchg
xor
ss
pop
push
repnz
movsb
mov
fcoms
jecxz
test
push
push
or
and
vmovaps
sti
push
rcr
cmpl
push
pop
or
les
adc
or
or
incb
add
mov
cltd
mov
insl
push
add
nop
imul
mov
mov
rcl
or
cmp
fwait
pop
mov
push
aam
xchg
adc
or
xchg
mov
sbb
push
rcrb
adcl
mov
push
and
pop
ret
and
mov
sbb
cli
mov
cwtl
pop
popa
add
andb
xchg
add
or
out
push
sub
mov
ja
lea
push
fmul
xor
in
mov
sbb
push
cmp
push
sub
xor
push
les
and
jo
gs
cwtl
outsl
mov
push
xor
mov
inc
xadd
stc
pop
cmpb
mov
xchg
sub
scas
mov
xchg
or
sbb
inc
iret
sub
iret
mov
mov
sbb
popf
adc
inc
pop
jp
jge
mov
add
sbb
sbb
jbe
sbb
dec
push
pop
aad
sbb
fiaddl
ret
popa
lret
jne
adc
xchg
sub
stos
sub
pop
movsb
ja
repz
push
and
ljmp
in
and
push
adc
aaa
stos
imul
mov
push
pop
adc
sbb
pop
push
or
data16
mov
mov
sub
ret
mov
push
insb
lds
mov
rcll
xchg
and
movsb
add
pop
mov
ret
cmp
mov
pop
sbb
and
jne
push
inc
push
and
xor
pmaxsw
sbb
mov
inc
xor
lret
and
xor
mov
jne
jae
cmp
dec
cs
cmp
xchg
pop
int
mov
cmpsb
or
call
push
fnstsw
aam
adc
mov
mov
inc
dec
push
xor
scas
cmpsb
inc
mov
imul
inc
mov
leave
push
shl
ljmp
or
sbb
or
cmp
addb
push
mov
inc
or
mov
xor
sub
pop
ljmp
fnsave
lods
fisttpll
mov
out
shl
jecxz
js
push
xor
call
mov
and
jg
sub
xchg
inc
mov
jecxz
mov
jbe
inc
xchg
cmp
pop
int3
addl
inc
mov
aad
inc
outsl
sub
pop
inc
outsl
jmp
lds
icebp
rorb
fldl
je
push
je
roll
inc
jmpw
or
dec
adc
lcall
jge
mov
xchg
fisttps
and
mov
incb
adc
jmp
and
cltd
fisubl
add
xor
pop
fwait
push
sbb
sbb
jmp
inc
add
adc
jns
inc
push
sbb
pop
and
or
add
push
sbb
roll
loop
or
pop
aad
push
sbb
push
rclb
xor
mov
push
jnp
or
mov
sub
push
add
mov
shrl
mov
fists
mov
icebp
dec
xchg
loopne
and
ret
inc
loopne
addl
bound
jecxz
lar
rcr
mov
mov
and
and
das
in
mov
fmuls
add
bound
in
movsl
xchg
push
or
enter
push
rorl
std
lods
add
and
or
mov
sbb
mov
pop
push
push
push
dec
test
test
jne
add
inc
test
sbb
cwtl
cmp
repz
jae
popa
popa
xor
dec
pop
shll
mov
lahf
xchg
sahf
xchg
les
cli
cmp
add
push
mov
mov
dec
xchg
data16
adc
mov
jg
lods
inc
fisubl
mov
in
and
and
adc
mov
sti
enter
aad
inc
lea
adc
add
dec
sar
pop
nop
test
dec
push
push
mov
mov
sbb
mov
insb
inc
xlat
ret
testb
rcll
in
enter
rcll
mov
test
dec
scas
data16
loopne
in
cmp
mov
into
xor
jl
sub
mov
push
mov
mov
test
add
js
loopne
aas
add
jo
xchg
lods
aas
lret
jecxz
cmpsl
push
aad
xor
scas
stos
pop
test
push
pop
mov
ljmp
popf
sub
test
sti
stos
mov
ss
adc
sbb
test
mov
cmpsl
outsl
sub
imul
xchg
lods
adc
adcb
stos
out
pop
push
or
ret
sar
push
enter
mov
fiaddl
lods
cli
dec
stos
inc
shrb
push
adc
rcll
loope
es
fsub
mov
push
icebp
mov
fyl2x
mov
fsts
sbb
in
jb
mov
popf
nop
mov
mov
mov
sub
push
subb
filds
add
jo
cmp
or
sub
into
push
int3
pop
bound
fsubl
jb
pop
addr16
mov
shlb
ret
mov
and
sub
xchg
pop
stc
enter
mov
rcll
xlat
stos
jge
and
add
dec
dec
jns
mov
xchg
mov
inc
cmp
aaa
cmp
pop
stc
enter
js
lods
clc
stos
test
xchg
jl
add
cmp
sbb
dec
enter
outsb
sub
call
movsl
in
enter
adc
sar
sub
and
aam
repz
fucom
fldl
mov
stc
enter
lret
mov
cmp
adc
jl
and
rcl
cmp
pop
ret
sbb
xchg
mov
mov
cs
icebp
insl
ds
sbb
and
jg
pop
ds
jg,pt
stc
enter
cwtl
jecxz
cmp
push
jg
repnz
imul
pop
into
sub
cmp
adc
loop
outsl
repnz
jmp
xor
movsl
or
int
popf
ds
jo
pop
or
and
enter
mov
ja
enter
jno
stc
enter
fadd
mov
sub
jbe
xor
movsl
sbb
lock
stos
add
jno
jl
and
repz
mov
cltd
inc
ds
jp
mov
mov
dec
in
mov
fstps
xor
arpl
jns
daa
jge
dec
jae
or
outsb
arpl
jns
inc
loope
scas
loop
dec
xchg
mov
inc
xchg
jl
dec
push
dec
subl
repnz
jmp
outsb
movsl
lahf
int3
mov
inc
idivb
dec
sbb
push
pop
notl
repnz
imul
into
sub
xchg
rcr
push
pop
stc
enter
in
lcall
jne
push
stc
fsubs
add
push
or
push
inc
xchg
int
stc
fmuls
aas
out
mov
add
and
dec
xlat
in
mov
cmp
push
cli
mov
pop
pushf
sti
and
lahf
jl
mov
or
cmp
sti
test
jge
lds
cld
in
cmp
xchg
jl
xchg
repz
mov
negl
mov
shll
stos
je
mov
inc
ds
pusha
sub
fistpl
and
loope
aad
dec
jae
pushl
lds
jl
and
jle
sti
imul
inc
dec
ds
popl
or
stos
xlat
push
and
jmp
mov
stc
enter
mov
push
mov
jo
inc
inc
pop
stc
fmuls
scas
sub
stos
sbb
push
xor
jb
mov
fcoml
and
loope
jae
mov
pop
jge
pop
push
fcoms
or
test
mov
cmp
rorl
dec
mov
cmp
enter
push
mov
popa
das
arpl
dec
ss
pop
stc
dec
push
sbb
cmp
adc
cmpb
push
notl
repnz
jge
add
inc
pop
imul
loop
leave
inc
ds
jbe
push
or
jo
out
mov
cmp
fdivrs
push
push
and
ds
jbe
enter
cltd
cmp
sbb
add
insb
mov
push
out
arpl
mov
stos
jo
ljmp
ret
xchg
jl
mov
test
and
int
scas
call
jg
lret
xor
pop
stc
sbb
fidivl
lods
inc
btr
cmp
jns
and
xchg
lods
mov
lods
cmp
adc
hlt
cmp
adc
hlt
in
or
push
in
aas
jns
iret
push
lahf
xchg
mov
repnz
jl
pusha
and
nop
daa
push
add
clc
insl
pop
in
cld
popf
inc
or
lds
out
in
sbb
sbb
in
pop
stc
jmp
jle
pop
in
mov
in
lahf
jl
je
gs
lock
adc
jmp
or
into
dec
test
pop
dec
in
negb
test
cmp
leave
and
pop
xor
xchg
jge
adc
mov
mov
jns
inc
repnz
out
add
or
jp
mov
and
stc
loop
xor
inc
gs
xor
arpl
out
pop
xor
popa
and
in
aas
jns
pop
stos
loope
push
fwait
inc
repz
icebp
repnz
jl
in
rorl
test
xor
pop
stc
enter
pushl
pushf
xchg
psubq
and
push
int3
xchg
cmp
pop
fimull
xchg
dec
dec
push
sahf
push
out
test
shrl
and
stc
enter
enter
pop
imul
in
push
sti
fimull
jne
enter
je
cwtl
mov
in
popf
lods
in
pop
stc
loop
stos
cmp
jle
dec
or
jl
mov
push
sub
std
loope
inc
test
imul
std
or
pop
mov
bnd
mov
sub
pop
xor
das
inc
or
xchg
and
out
push
adc
mov
lcall
inc
jae
cs
test
aad
push
sbb
jl
and
add
test
cmc
cli
in
mov
repnz
insb
xchg
jne
and
ds
inc
mov
sub
leave
inc
ds
int
jl
repz
add
adc
outsl
hlt
divb
and
enter
ljmp
cmp
mov
ds
pop
stc
iret
call
xchg
xor
mov
in
aas
jns
inc
jae
dec
mov
xlat
scas
pop
mov
jl
inc
adc
arpl
jns
dec
out
ss
dec
push
or
out
xchg
shll
push
cwtl
pusha
mov
xchg
pop
stc
sahf
aam
mov
les
fcomi
mov
pop
sti
cmp
xchg
bound
lcall
inc
repnz
pop
or
enter
and
stc
lahf
xor
mov
xor
in
aas
jns
mov
xchg
xlat
not
xor
sbb
xchg
jl
sti
push
iret
cmp
outsb
add
mov
cmp
push
movsb
testb
clc
mov
stc
pop
cld
sbb
enter
sub
in
jl
and
inc
inc
and
inc
ds
cvtps2pd
push
inc
mov
and
xor
mov
cmp
jle
enter
sub
mov
aad
fistpl
mov
into
inc
ds
aas
in
xchg
call
repnz
push
dec
and
jns
xchg
orl
pop
stc
enter
mov
dec
insl
mov
in
sbb
cmp
test
ds
scas
fs
mov
or
or
dec
xchg
push
xor
adc
sbb
leave
and
dec
xorb
aad
pop
stc
enter
lds
xchg
jl
xchg
sub
xchg
pop
mov
std
in
and
and
ret
dec
repnz
cmp
sub
bnd
add
sub
and
mov
mov
loope
cmp
pop
daa
pop
idiv
das
jmp
push
jge
decl
stc
enter
repz
loopne
push
push
testl
or
mov
inc
js
pushf
and
stc
fadds
sbb
or
mov
call
pop
sbb
cwtl
and
jne
addr16
cmp
jno
mov
jns
leave
sub
or
jl
lahf
lock
adc
lahf
jne
inc
nop
enter
lods
mov
adc
sub
test
fsubs
pop
stc
push
mov
loop
add
in
pop
stc
mov
stc
shrl
sbb
sbb
mov
inc
ds
in
and
sbb
stc
enter
cld
and
iret
lcall
outsl
cld
inc
outsl
xchg
push
stc
enter
jb
xchg
and
mov
mov
and
kunpckbw
data16
mov
enter
jne
je
aas
dec
and
bnd
in
pop
stc
xchg
lods
lret
imul
cwtl
into
loope
icebp
pop
xor
in
lahf
jl
jne
adc
lock
je
jl
test
cmp
repnz
cmp
jle
stc
push
repnz
and
mov
xor
cs
repz
cmp
xchg
inc
ds
jecxz
repnz
dec
out
insl
dec
je
inc
ds
add
xchg
ss
scas
mov
in
pop
stc
mov
sbb
mov
dec
push
sti
mov
sub
lea
push
and
xchg
ds
jns
je
scas
push
jnp
sbb
adc
je
inc
or
lret
jl
hlt
cmp
push
push
mov
jmp
xor
jl
and
mov
or
cmp
inc
ds
jle
sub
inc
sub
lahf
and
stc
enter
lahf
cmp
pop
enter
xchg
jl
lds
rorl
jne
xchg
jl
sarb
sub
adc
repnz
ret
cmpsb
int
inc
push
jle
dec
xchg
ds
pop
stc
mov
je
es
enter
push
leave
arpl
jns
notl
sub
and
sti
fbstp
mov
ss
insl
xchg
xchg
jl
jmp
daa
mov
mov
notb
fimuls
int
dec
popa
mov
inc
ds
cmp
mov
sahf
sbb
enter
rolb
add
inc
mov
notb
inc
mov
rcrl
enter
stos
cmp
add
in
pop
mov
adc
sub
and
jbe
jp
add
xchg
jl
enter
loope
mov
bnd
push
shl
jae
sahf
and
aam
and
stc
xchg
sbb
insl
and
nop
lods
repnz
jl
fiadds
mov
stc
enter
mov
insl
shll
inc
jl
and
push
inc
fxch
ffreep
sbb
xchg
loopne
ds
js
mov
pop
inc
xlat
push
cmp
enter
ret
cmpsl
imul
arpl
adc
rolb
popf
lret
shrb
lods
rcrb
inc
mov
std
outsb
inc
leave
mull
cmp
stos
cltd
jle
push
shl
leave
inc
ds
fisttpl
add
xchg
mulb
pushf
es
jnp
pop
aam
xor
testb
mov
cmpsl
or
and
stc
enter
pop
xor
xchg
mov
clc
leave
or
mov
mov
pop
stc
lret
or
push
sbb
sbb
rolb
jge
jl
and
mov
in
cmp
testb
cli
je
lcall
stc
enter
mov
je
popf
push
and
stc
fsubrs
mov
mov
pop
xchg
jl
or
pop
pop
bound
pop
pop
cmp
inc
ds
sbb
inc
sub
leave
and
stc
adc
or
je
loop
add
xbegin
and
and
aas
jns
mov
lds
pushl
xchg
scas
std
lods
and
cmpl
xchg
fisubrl
in
pop
stc
test
pop
adc
dec
adc
pop
push
mov
fwait
adc
pop
jge
add
repnz
jge
mov
jb
mov
enter
push
adc
gs
mov
ds
jl
add
or
adc
jl
jg
mov
adc
das
clc
sub
stc
enter
jmp
push
push
push
fs
sti
leave
and
jae
shll
mov
sti
in
pop
pop
push
jmp
sbb
push
sbb
lret
jl
and
mov
movsl
push
cltd
push
or
xchg
vpmacsswd
adc
hlt
xchg
inc
push
and
imul
xchg
inc
ds
sahf
in
es
jmp
movsl
dec
loopne
sbb
xchg
sbb
add
xchg
jg
jmp
mov
negb
lcall
cmpsb
xchg
add
push
cld
stos
mov
push
loopne
xchg
jle
outsb
fwait
sahf
jae
stc
enter
ds
inc
daa
stos
mov
shl
out
in
pop
pop
sbbl
xor
scas
std
ds
frstor
fldl
imul
je
xchg
and
push
inc
aas
jb
jl
and
mov
enter
mov
repnz
push
push
sub
out
push
nop
dec
push
stc
enter
mov
push
mov
daa
pop
stc
fdivrs
jge
jecxz
push
test
cmp
jge
fnstcw
inc
xorl
xchg
rorb
push
aad
ds
xchg
adc
add
scas
lods
fcoms
pop
stc
enter
cli
stc
mov
out
push
xchg
jl
sar
fldcw
inc
das
enter
push
pop
inc
or
sub
stc
xor
or
sub
add
sbb
in
aas
jns
push
sbb
push
loopne
xor
sbb
jns
test
mov
adc
cwtl
or
lahf
jg
ret
push
and
out
sti
and
shr
mov
jmp
repnz
out
rcl
inc
mov
ds
inc
mov
mov
push
mov
stc
enter
dec
les
imul
repnz
lds
cld
daa
ret
cmp
pop
orl
jo
cmpsl
inc
inc
adc
or
movsl
sub
scas
mov
iret
push
inc
ds
outsb
pop
push
cmp
jp
jl
lea
negb
xor
js
sub
push
cwtl
xchg
stc
enter
rolb
mov
ljmp
negl
lock
addr16
ja
inc
pop
dec
sub
ds
inc
movsb
pop
stc
enter
pop
mov
shrb
xchg
sbb
jl
and
sub
popa
mov
repnz
jnp
jmp
xor
pop
adc
add
dec
xor
mov
popa
add
nop
iret
sub
cwtl
pop
int
jge
repnz
mov
inc
mov
out
shll
jle
enter
xor
mov
or
pop
dec
pop
pop
test
repz
hlt
push
push
push
rcll
push
add
cld
stc
cmp
cmpsl
mov
in
xchg
sbb
test
jg
dec
ds
or
pop
cld
repz
lahf
bound
pop
int3
pop
sbb
add
loope
push
jg
cld
stc
lahf
push
rol
clc
rcrb
decl
xchg
out
lahf
aas
loope
push
push
into
pop
adc
out
pop
mov
repz
push
jecxz
or
xchg
int3
inc
add
mov
aas
jg
jp
imul
repz
je
out
push
outsb
into
jno
mov
cld
stc
xorb
cli
inc
inc
xchg
mov
push
adc
out
lahf
aas
xor
push
js
movsb
push
adc
repz
xor
pop
cmpsl
lret
je
mov
fmuls
pop
out
and
cwtl
test
sub
minps
arpl
in
aad
clc
stos
sbbl
ljmp
jnp
pop
ss
jl
and
out
cmpsl
add
dec
popa
inc
jle
testl
pop
mov
cmp
outsl
ja
dec
mov
or
inc
sbb
xchg
lea
stos
lea
jns
and
jae
divl
xchg
je
sbb
xor
dec
aam
aaa
mov
xchg
jmp
loope
pop
xlat
bound
sub
stos
stos
and
sbb
jmp
rolb
shlb
push
fwait
lods
and
test
repz
lahf
hlt
lods
cmp
xor
into
decb
cld
stc
fadds
fisttps
aad
mov
out
lahf
aas
lret
or
lahf
push
xchg
pop
cmpb
repz
mov
addr16
loope
divb
sub
pop
or
mov
cwtl
es
mov
mov
mov
cbtw
mov
mov
popa
mov
mov
mov
mov
mov
sub
jnp
imul
adc
cmpsb
dec
jp
add
dec
clc
mov
subb
mov
es
pushaw
mov
mov
es
es
mov
mov
nop
sub
cltd
mov
mov
mov
mov
mov
pushaw
lcall
cltd
es
mov
mov
mov
mov
cltd
and
add
mov
lcall
sbb
fs
lcall
cmpsb
or
mov
mov
mov
mov
mov
cmpsb
or
mov
and
rorl
xor
loopne
aas
mov
shrl
mov
int3
xor
mov
mov
mov
xor
or
jg
push
test
mov
jns
adc
xor
lret
mov
dec
adc
xchg
rorb
xchg
xor
roll
mov
int
xchg
dec
mov
mov
mov
xor
mov
mov
or
xchg
dec
mov
add
mov
xor
xor
mov
mov
int
dec
jns
aaa
mov
sub
or
mov
add
sub
xor
push
mov
dec
sbb
shll
lods
dec
mov
mov
fisttps
ret
mov
mov
mov
dec
mov
mov
mov
xor
adc
and
rorl
mov
mov
xor
shll
mov
mov
mov
xchg
dec
adc
mov
roll
mov
ds
int
mov
mov
data16
pop
push
mov
or
lcall
mov
and
mov
mov
xor
shll
mov
xor
ret
mov
popa
mov
test
mov
xchg
mov
add
dec
or
mov
mov
xchg
imul
and
xchg
imul
arpl
adc
cmpsb
pop
aam
inc
es
lcall
mov
mov
or
mov
mov
lcall
cwtl
bound
or
sbb
imul
adc
xor
mov
dec
xor
mov
mov
adc
stos
mov
xor
xor
mov
int
mov
and
or
mov
mov
xor
inc
ret
mov
push
add
int
mov
mov
xor
sbb
int3
mov
mov
mov
xor
add
leave
mov
xor
mov
lret
adc
hlt
mov
dec
xchg
mov
mov
or
or
mov
add
mov
mov
mov
mov
mov
shrl
mov
push
adc
mov
and
sahf
or
adc
sub
add
loopne
adc
dec
adc
mov
mov
mov
lret
shrl
sahf
adc
xor
or
or
xor
xchg
dec
mov
mov
mov
lds
cwtl
mov
int
int
mov
mov
mov
xor
rorl
dec
adc
adc
cmp
and
mov
xor
mov
mov
sahf
or
sub
push
and
mov
dec
ret
mov
mov
cmp
mov
xchg
imul
sub
and
xchg
orl
andb
insl
xchg
andb
xor
popf
add
and
mov
mov
xor
enter
push
mov
xchg
and
xor
mov
int3
xor
rorl
roll
mov
mov
mov
mov
dec
xchg
out
mov
mov
or
mov
mov
xor
rorl
xor
push
xchg
dec
adc
mov
mov
dec
mov
mov
ret
xor
mov
mov
mov
jo
fstpl
hlt
fisttps
cbtw
es
inc
cmpsb
sbb
popa
lcall
imul
shrl
sti
add
sub
mov
cwtl
jg
cld
sub
jge
je
rcll
shll
leave
lahf
aas
shlb
mov
inc
ret
push
stc
stc
repz
in
sub
pop
in
mov
decl
int
mov
les
sti
mov
and
cld
jns
mov
mov
aas
mov
leave
out
lahf
aas
fstpl
jb
subb
jl
cld
stc
repz
inc
sub
pop
sub
cwtl
pop
mov
jg
sti
ds
repz
inc
jmp
cwtl
punpckhbw
inc
sbb
aaa
rcrl
in
je,pt
push
pop
xlat
mov
call
sti
lahf
into
mov
mov
cmp
sbb
dec
cld
stc
xor
shlb
stc
repnz
mov
pop
sub
ljmp
int
xorl
aas
jg
cld
and
out
cs
adc
out
lahf
push
int3
iret
std
ds
es
stc
xchg
dec
filds
cmp
xor
push
je
out
or
shl
repz
hlt
enter
lret
and
cmp
mov
shlb
sub
add
mov
out
lahf
aas
fstpl
dec
dec
fs
notb
stc
repz
mov
popf
jle
pop
icebp
adc
cld
stc
outsl
inc
mov
push
ds
sub
inc
pop
mov
sbb
call
inc
cmp
cld
stc
repz
lds
shrb
out
nop
unpckhps
push
lods
mov
stc
repz
jbe
sbb
ds
aaa
js
sub
jg
cld
jnp
jbe
mov
mov
call
iret
lahf
pusha
and
nop
push
xlat
in
jle
test
jg
cld
stc
jge
loop
scas
movl
cmp
iret
lahf
aas
jns
shld
out
add
cld
stc
rep
std
xchg
cmpsl
mov
ss
mov
lahf
aas
jg
decl
test
cmp
mov
mov
in
sbb
imul
push
jge
in
mov
ret
adc
out
lahf
aas
into
ja
outsl
scas
inc
push
or
testl
cmpsb
lret
mov
bound
out
lahf
aas
mov
neg
add
mov
cld
stc
repz
push
mov
hlt
jbe
mov
mov
in
addr16
jg
xlat
push
pop
pop
jmp
ret
mov
cli
inc
lock
les
xchg
std
in
and
std
mov
adc
dec
cld
loop
enter
fsts
dec
jbe
mov
stc
pusha
inc
adc
sarl
out
mov
rcrb
cmpsl
mov
inc
and
pop
mov
notb
and
mov
push
mov
enter
sbb
call
jl
and
in
xchg
pop
dec
ds
jmp
cltd
mov
imul
lahf
cmp
mov
loopne
xor
loopne
jmp
daa
hlt
adc
in
jl
dec
icebp
dec
inc
imul
add
mov
movsb
lahf
aas
jg
pop
cli
lods
gs
adc
stc
repz
xor
scas
add
mov
nop
mov
aas
jg
cld
outsl
fldenv
dec
xor
negb
out
lahf
push
stos
push
repz
xor
push
and
fisttpll
jno
ud0
and
loopne
push
rcrl
mov
xchg
div
dec
cs
jle
enter
or
std
shll
pop
jmp
iret
jmp
jmp
cs
jl
and
push
push
fdivrs
mov
insb
out
inc
xchg
movsl
inc
ss
cld
stc
inc
mov
or
and
aas
jg
fisttpll
faddp
fstps
in
test
dec
and
mov
cltd
fsubrl
mov
mov
int
aas
jg
cld
pop
inc
push
push
inc
cs
pop
adc
xchg
lods
repz
lahf
fnstenv
mov
fs
stc
sahf
or
stc
push
or
sahf
push
push
popa
sti
xchg
adc
iret
lahf
aas
arpl
aaa
nop
pop
notl
push
cld
mov
cld
loopne
call
lods
lahf
aas
jg
repnz
movsl
dec
dec
push
cmp
in
add
stc
repz
and
push
and
cld
cmp
and
in
jb
iret
lahf
jg
pop
jno
ficoms
sub
repz
add
outsb
mov
pop
mov
aas
decl
sti
and
iret
xchg
fildl
js
loop
repz
and
inc
adc
push
xchg
mov
jg
cld
test
dec
loopne
clc
fiaddl
sub
repnz
lahf
stos
bnd
pop
in
imul
sub
push
or
lea
loopne
dec
mov
iret
lahf
aas
pop
adc
in
mov
mov
push
jmp
mov
stc
repz
lahf
mov
lcall
test
cld
stc
add
js
mov
jbe
dec
adc
out
lahf
aas
lods
aas
xchg
sbb
lcall
call
rclb
data16
mov
imul
mov
sti
or
out
lahf
aas
out
pushl
insl
mov
inc
inc
outsl
loope
sub
cld
stc
repz
adc
pusha
mov
movsl
loop
lahf
add
flds
mov
and
push
lods
fsin
inc
push
cld
stc
pushf
mov
lods
in
mov
in
jg
pop
inc
mov
fucomi
xchg
lahf
aas
ficompl
push
aaa
mov
stc
repz
or
dec
scas
cmp
std
pop
lahf
aas
jg
add
push
test
stc
repz
xor
and
adc
jle
sti
test
cld
xlat
in
das
hlt
inc
xor
fmull
out
lahf
cwtl
lret
in
imul
stos
ds
stc
adc
bsf
or
rorb
or
fsubs
jp
out
lahf
xchg
adc
jge
dec
mov
jg
cld
stc
stos
xchg
inc
cli
test
adc
sbb
aam
shll
sbb
push
or
call
ret
mov
in
stos
mov
inc
repnz
jmp
lahf
aas
jg
and
popf
fcmovb
push
shrb
xchg
icebp
nop
iret
stc
jae
sub
cld
stc
shl
sub
les
add
push
inc
out
lahf
aas
fisubs
push
push
shlb
or
repz
push
cmp
cmpsl
shl
or
lahf
aas
jg
mov
inc
mov
cld
stc
repz
mov
rcrl
xor
cmp
dec
pop
imul
repz
adc
cwtl
stc
repz
mov
es
sbb
shlb
jl
aas
stc
cld
adc
mov
jl
cmp
dec
add
rcll
pop
sub
jl
inc
test
mov
dec
jmp
fmul
inc
ds
cltd
fisttpll
enter
add
pop
add
pop
cld
mov
in
pop
stc
lods
mov
inc
pop
or
aas
jns
mov
scas
inc
dec
xor
inc
in
daa
jl
mov
rcrb
inc
shr
lock
lahf
jl
outsl
ljmp
mov
cld
stc
push
jmp
das
outsl
int3
insl
sbb
lahf
aas
jg
lods
or
imul
sub
shlb
stc
repz
xchg
rcrl
hlt
loopne
mov
adc
pop
jns
lahf
aas
jg
sub
mov
aaa
movsb
cmp
daa
loop
mov
adc
cmp
jg
cld
stc
xor
or
fstps
xorl
mov
iret
lahf
aas
sub
jno
lahf
sbb
mov
push
jae
cld
stc
repz
jnp
fdivrs
pop
mov
lret
add
xor
sub
xchg
lahf
fucomip
popf
cld
stc
repz
pop
in
popl
inc
xchg
pop
frstor
xchg
mov
sub
mov
xchg
mov
repz
test
mov
jne
cmc
adc
cld
fwait
dec
mov
push
push
jle
loope
fwait
ret
repz
lahf
mov
shr
add
jg
cld
stc
jno
div
repz
ja
xor
call
ss
or
ret
dec
aas
jg
cld
lock
mov
movsb
xor
lea
and
jecxz
lret
scas
jle
mov
rolb
dec
enter
out
test
iret
lahf
aas
jg
clc
jb
dec
fs
and
jl
xor
stc
repz
jo
pop
cmpsb
popa
scas
sbb
xchg
xor
inc
test
mov
mov
flds
std
pusha
notb
mov
cld
and
xchg
sub
stos
xchg
ljmp
notb
xchg
and
notb
adc
out
inc
sub
loop
repnz
sub
stos
mov
out
stos
aaa
out
insl
jl
arpl
test
push
fsubrl
xchg
sub
xchg
and
pop
aas
fcmovnu
mov
lods
loop
mov
jl
and
lret
popa
cmp
cwtl
mov
dec
pop
ds
shll
out
add
movsl
mov
ret
add
cld
stos
fmuls
cmp
sahf
inc
lahf
aas
jg
inc
and
inc
adc
cmc
fnstcw
fyl2xp1
repz
lods
mov
and
mov
jl
ds
mov
and
mov
fimull
mov
pop
jg
cld
test
outsb
fisttps
or
out
lahf
aas
lock
add
xchg
iret
adc
mov
or
repz
stos
shlb
mov
ficomps
stc
enter
push
in
insb
sub
sub
add
push
pop
stc
fmuls
adc
cmp
inc
cld
jl
and
leave
mov
stos
inc
ds
mov
jmp
repz
sbb
arpl
leave
xor
inc
les
dec
sub
mov
lret
sahf
aad
sub
mov
in
xchg
inc
ds
pop
cli
loope
fcmovnb
repz
ds
enter
jae
sub
in
jnp
mov
loopne
jmp
in
popa
jne
and
pop
and
xchg
sub
daa
jl
mov
iret
mov
clc
mov
stc
enter
clc
mov
dec
ljmp
pop
jl
and
jmp
push
sub
movsl
mov
repnz
adc
imul
pop
cltd
ret
xor
pop
push
dec
je
dec
xchg
sbb
mov
ja
xchg
std
in
jecxz
sub
mov
in
ret
xchg
jl
sbb
js
xor
repnz
leave
stos
dec
inc
test
lcall
mov
xor
stc
enter
xchg
cli
sbb
out
xchg
jb
and
es
sahf
push
lock
stc
xor
lahf
jge
enter
hlt
addb
mov
xchg
dec
jle
movsb
cmp
xor
jg
push
in
cmp
or
push
shrl
iret
lahf
aas
adc
bound
push
test
js
cmp
imul
aas
jg
gs
daa
jnp
mov
push
xchg
add
repz
adc
nop
test
and
jbe
bound
mov
inc
push
negl
jecxz
mov
fstpl
repz
lahf
je
sub
loop
into
sub
sti
in
push
loopne
imul
out
popl
ret
testl
stc
repz
push
cmp
sar
jg
push
push
cmp
mov
cs
mov
maxps
sub
js
inc
jp
aam
cmc
xor
repz
aas
jg
cld
mov
xchg
add
iret
lahf
jae
pop
and
std
dec
mov
jo
lret
mov
stc
stos
mov
loope
dec
jne
shrl
mov
fnstenv
fwait
fstl
in
pop
cmpsb
insb
mov
fsubrl
hlt
sti
leave
arpl
xchg
dec
xchg
mov
dec
cmp
jl
and
jno
int3
mov
out
xchg
or
fmul
sahf
dec
das
sub
push
xchg
xchg
inc
cmp
mov
enter
repnz
aas
xor
je
testb
ja
sahf
pop
repnz
xor
and
enter
mov
adc
shll
movsl
mov
sbb
repnz
sbb
icebp
jae
mov
lahf
insl
inc
imul
mov
clc
mov
and
dec
push
ficoml
jg
cld
stc
adc
mov
clc
or
sbb
lahf
aas
mov
testb
loop
mov
cld
stc
repz
cmp
cs
int
mov
dec
loop
lahf
aas
jg
xor
popf
mov
pop
mov
sbb
stc
repz
popa
test
jmp
mov
lahf
aas
jg
cmpsl
xchg
daa
in
leave
or
cmpsl
jl
sbb
and
jg
fdivs
mov
outsb
inc
mov
xor
arpl
xor
iret
lahf
sub
outsl
or
adc
fwait
pop
jg
cld
stc
lea
out
ficoml
inc
cmp
aas
and
hlt
jmp
jge
xchg
loope
jo
inc
testb
sbb
inc
imulb
adc
mov
inc
testb
pop
mov
push
cmp
addr16
testb
push
mov
stc
enter
fsubl
push
aas
mov
mov
xchg
repz
mov
dec
xor
in
ficoms
fcoms
cld
stc
repz
and
lock
aas
jg
add
inc
sbb
lret
cltd
repnz
fwait
adc
lea
adc
mov
jns
and
inc
cmpsl
mov
cmp
lods
cmp
test
push
inc
ds
enter
test
out
ds
lret
jge
adc
dec
inc
sbb
xchg
inc
rorl
not
loope
mov
xor
stc
repz
xchg
js
out
and
roll
inc
add
ret
pop
fcmove
lahf
aas
jg
fs
popf
scas
enter
fs
xor
lods
shl
dec
repnz
les
repnz
loope
mov
lret
xor
jo
mov
fnstenv
mov
in
fwait
or
stc
fsubs
popa
mov
imul
insb
inc
mov
ds
fmuls
pushf
add
repnz
rcl
pusha
bt
mov
jg
push
jne,pt
and
pop
mov
cmp
push
mov
int
subb
popf
aas
jg
cld
dec
xor
inc
sbb
sbb
jmp
iret
lahf
sbb
push
in
mov
xchg
js
xor
fnstenv
pop
test
enter
jae
cld
inc
inc
ds
ror
mov
sbb
stc
repz
in
xlat
adc
mov
test
jmp
incb
dec
mov
int
xchg
fwait
mov
iret
arpl
fistpll
gs
jle
cld
and
sub
mov
aas
stos
dec
sub
dec
nop
repnz
xchg
leave
lods
push
adc
inc
stc
enter
sahf
popl
inc
mov
sti
inc
neg
daa
pop
xchg
iret
mov
adc
xlat
lds
jl
or
sbb
cmp
pushf
out
push
dec
daa
pop
addr16
inc
adcb
repnz
sti
shlb
push
iret
jle
enter
sbb
cli
push
pop
jmp
repnz
bound
sahf
pop
xchg
std
push
cmp
stc
enter
mov
out
in
xchg
pop
cmpb
arpl
out
hlt
pop
lds
je
scas
roll
add
daa
and
stos
clc
in
or
inc
shlb
lahf
cmp
xchg
cltd
in
mov
pop
xchg
ja
mov
popf
std
in
inc
push
dec
cmp
push
push
pop
aam
pusha
sbb
or
sahf
cld
stc
repz
adc
and
push
mov
adc
stc
ret
mov
cmp
das
iret
lahf
aas
jg
test
adc
stc
stc
repz
mov
inc
inc
sub
iret
lahf
aas
pop
add
outsb
arpl
fcmovb
dec
dec
repnz
repz
pop
fdivp
clc
xchg
ljmp
imul
mov
lock
in
int3
aam
ffree
cld
stc
add
call
or
ljmp
aas
jg
ds
sbb
lcall
cld
stc
repz
out
inc
int
lea
les
lahf
aas
jg
arpl
push
jl
inc
stc
out
lret
jmp
stc
repz
inc
or
in
jns,pn
aam
add
mov
cmp
out
push
push
out
lahf
aas
or
cmc
mov
mov
stc
repz
imul
jnp
adc
iret
lahf
aas
jg
in
bound
mov
adcl
mov
arpl
test
mov
sub
iret
inc
jle
mov
xlat
xchg
push
bswap
std
cld
stc
repz
je
arpl
mov
mov
ficompl
jle
add
scas
pop
xor
mov
repz
inc
imul
jno
mov
push
cld
fbstp
adcb
jnp
in
and
pusha
cmp
mov
push
call
repz
mov
mov
mov
mov
ficomps
adc
cli
out
or
sub
dec
sahf
push
out
push
inc
adc
clc
inc
ds
fildll
into
outsl
inc
jne
stc
movsl
push
adc
push
mov
mov
leave
setae
fadd
jne
je
in
aas
pop
pop
arpl
mov
loopne
cli
cli
inc
insl
mov
sub
in
jl
pop
in
test
push
jg
pop
aas
sub
test
add
aas
push
and
push
cmc
in
mov
hlt
lcall
cld
stc
pop
pop
push
mov
jno
aaa
push
loopne
in
push
out
lahf
aas
cmp
xchg
out
rcrb
stc
repz
shlb
iret
aas
pop
cmp
xchg
jecxz
mov
clc
daa
add
cmc
es
jg
ds
bound
enter
sbb
adc
push
sbb
stc
pop
push
dec
adc
and
icebp
fxch
jns,pt
mov
cwtl
mov
ds
int3
sahf
sbb
push
xchg
repz
push
mov
cld
cld
stc
lods
shrl
movsb
pop
lcall
push
iret
lahf
aas
add
sub
push
cld
stc
repz
popa
cld
jl
dec
rclb
mov
out
add
pop
mov
sub
stc
repz
inc
mov
cmpb
aas
jg
cmpsb
or
cmp
loopne
or
dec
cmp
iret
lds
mov
lods
xchg
or
popa
aaa
aas
jg
cld
dec
inc
xchg
mov
mov
push
lahf
or
xchg
jle
cld
stc
and
jle
cmp
adc
inc
lock
ret
lahf
aas
je
pushf
lahf
sahf
or
jmp
cld
cld
stc
repz
ret
dec
adc
inc
ret
in
mov
jno
leave
arpl
cs
clc
in
mov
fstpt
pop
inc
fidivrs
mov
je
gs
sti
xor
xchg
or
lsl
repz
shrb
cmpb
jg
cld
stc
fstpl
imul
xchg
push
xchg
dec
sti
push
lcall
push
in
cmp
sbb
cmp
cmp
arpl
out
lahf
aas
push
pop
ret
xchg
add
cld
stc
repz
mov
in
lds
jo
jmp
jg
pop
orb
xor
pop
stc
pop
mov
imul
mov
in
outsl
push
pop
insl
pusha
cwtl
hlt
int3
into
jns
inc
ds
inc
loope
adcb
ds
mov
and
dec
repnz
adc
incb
lock
jecxz
cli
imul
jns
and
lahf
aas
hlt
push
enter
pop
out
inc
std
in
inc
call
or
daa
in
fwait
jl,pt
arpl
jge
or
mov
ds
jecxz
mov
in
xor
push
and
leave
mov
cmp
add
ja,pt
mov
aas
dec
rcrb
mov
fidivrl
xor
mov
movsb
xchg
xchg
jl
cmp
adc
addr16
mov
jae
js
xchg
jle
insl
push
stc
pop
cmp
mov
dec
div
sbb
and
enter
fldenv
in
jg
jle
jl
and
test
mov
bound
addr16
cmp
lahf
ljmp
cld
stc
repz
pusha
fdivrl
add
fdivrs
mov
stos
jg
xchg
test
mov
push
cld
stc
repz
fbstp
sbb
lods
movsb
pop
mov
xor
ret
push
iret
xor
repz
loopne
cwtl
shrb
cmp
cld
stc
push
jb
ffreep
mov
jl
fldt
lahf
aas
sub
add
lea
cld
stc
repz
std
xor
dec
sbb
enter
lahf
aas
jg
jp
mov
and
imul
sahf
jl
out
imul
cmp
movl
push
cltd
xor
les
push
pusha
pop
out
lahf
aas
movsl
pop
pop
out
ljmp
xlat
cld
stc
repz
mov
xchg
ljmp
shrl
pop
sahf
iret
lahf
aas
jg
clc
imul
rcr
lods
arpl
stc
repz
in
dec
xchg
loop
cmp
push
out
lahf
push
lahf
aas
jg
add
lods
sbb
clc
in
iret
jo
push
sbb
inc
hlt
inc
sahf
lahf
popf
cld
mov
xor
je
outsl
push
pushf
cmp
mov
adc
add
scas
inc
lcall
pop
cmpsb
icebp
daa
mov
jno
mov
mov
lea
imul
jbe
xor
adc
stc
repz
mov
xor
aad
mov
jnp
leave
xchg
nop
movsl
aas
jg
cld
cmp
mov
add
push
fwait
mov
iret
lahf
fs
lock
dec
push
jle
xor
mov
pusha
xchg
add
jl
arpl
push
ja
mov
repnz
sbb
mov
lret
sbb
or
jl
fildl
pop
adc
push
hlt
leave
inc
ds
add
push
outsl
cmc
and
call
arpl
jecxz
add
cmp
rcrb
ds
adcb
add
xchg
fimull
pop
stc
enter
jb
shrd
pop
xchg
jl
jne
and
pusha
test
lahf
jecxz
enter
jbe
jge
xor
mov
repnz
mov
pusha
push
xchg
xchg
jae
mov
aas
jg
cld
push
ret
mov
sahf
inc
fcoml
repz
lahf
ljmp
mov
lods
push
jg
cld
stc
cmp
cli
jecxz
scas
mov
push
mov
inc
in
lahf
aas
out
test
outsb
cmpb
cld
stc
pop
lock
mov
cmc
xor
xchg
aas
jg
aas
in
or
mov
pop
cltd
out
ret
inc
ds
jmp
dec
xchg
in
xchg
cmp
pop
stos
aad
inc
xchg
clc
sub
dec
ds
mov
mov
xor
pusha
cmp
jmp
and
out
or
mov
fwait
int3
mov
cmpl
pop
xchg
inc
fmuls
push
add
pop
loopne
sbb
adc
mov
or
mov
repz
add
inc
jmp
push
leave
shl
xchg
std
cmc
adc
xor
pop
dec
sbb
in
mov
cmp
jp
adc
adc
loopne
mov
xchg
jl
jp
out
xor
cmp
repnz
ds
or
inc
test
hlt
xchg
pop
push
jl
arpl
mov
les
aad
ret
mov
insb
cwtl
cld
je
ret
jb
sbb
mov
pop
popf
jg
inc
insb
sahf
fnstsw
add
mov
iret
lahf
aas
or
jae
push
repnz
les
adc
test
data16
jae
stc
repz
mov
mov
cltd
sub
aas
jg
cld
nop
imul
cmpsl
out
push
fcompl
or
adc
mov
mov
xchg
or
mov
jg
cmpb
lds
add
cmc
cld
stc
repz
or
lock
xchg
insl
and
lahf
aas
jg
ljmp
mov
push
call
jl
push
iret
mov
fadd
rcl
loope
add
jnp
mov
pop
cs
shll
iret
lahf
jg
loop
inc
outsl
movsb
test
popl
cld
stc
repz
outsb
cmp
sub
sar
mov
pop
dec
lahf
aas
jg
xor
test
sarb
pop
and
stc
repz
push
mov
sub
int3
incl
mov
lahf
cld
cld
dec
mov
lds
mov
add
push
mov
imul
mov
stos
mov
cwtl
cmp
cltd
and
xlat
lock
mov
lret
mov
popa
aas
jg
adc
lret
pop
enter
dec
xchg
std
cmp
jmp
lods
xchg
and
cmp
add
adc
mov
cs
aas
ljmp
jb
sub
stc
repz
and
loope
lahf
xor
je
les
and
jg
cld
fidivl
push
mov
repnz
lahf
push
insb
inc
iret
fisubs
ds
repnz
mov
inc
ds
mov
xchg
movsb
push
rol
cltd
test
cld
stc
repz
cmp
movsl
mov
adc
aas
jg
scas
fnsave
bound
sbb
cld
stc
repz
mov
ret
ljmp
cmp
lahf
aas
jg
jae
divb
out
mov
ret
mov
mov
out
xor
mov
pop
xchg
daa
and
sub
cmpsl
xchg
jmp
and
jl
addr16
pop
add
imul
sub
cmp
xchg
pmulhuw
stos
push
addr16
mov
mov
lock
sbb
daa
leave
fmuls
aas
jg
test
add
pop
sbb
cltd
mov
iret
std
lods
xor
xchg
mov
roll
jg
push
jl
or
popa
hlt
fcomps
in
stc
pop
repz
and
fs
jae
mov
stc
push
push
jnp
push
out
xchg
cli
call
mov
popa
fadds
sti
mov
push
pop
iret
jns
arpl
add
mov
outsl
rclb
mov
testl
adc
inc
movsl
mov
lret
enter
push
mov
nop
in
repz
adc
fbld
cld
stc
pop
repz
adc
aam
or
insl
loope
leave
lahf
aas
mov
das
push
push
in
jg
mov
mov
inc
push
mov
dec
pop
jbe
lcall
cmp
call
mov
sbb
iret
cmp
xchg
pop
loop
je
incl
sbb
xor
repnz
jl
test
mov
mov
jge
sub
ljmp
xor
mov
xchg
test
pop
popa
das
aad
inc
jl
and
popf
lds
jecxz
add
sub
psubsb
testl
repnz
and
bound
and
lahf
aas
pushl
cmp
mov
repz
filds
aaa
and
push
adc
aas
jg
or
sbb
mov
lahf
sub
jl
repz
outsb
daa
or
xor
jg
cld
push
std
test
inc
fldenv
dec
sbb
les
jae
mov
cmpl
aam
xor
iret
xchg
repnz
lahf
inc
arpl
outsl
aaa
dec
add
stc
repz
bound
fisubrs
jge
lahf
aas
jg
sti
fldl
push
outsb
cli
and
cmp
repz
sbb
inc
stos
insl
cmp
jmp
cld
insl
pusha
popa
push
sub
sbb
mov
imul
into
ret
xchg
roll
dec
pop
icebp
lods
xor
inc
inc
notb
rcrl
test
dec
notb
xchg
pop
popl
in
pop
mov
mov
lods
stc
ja
push
pop
lds
mov
inc
out
inc
pop
xchg
xor
ljmp
pop
bound
cmpsl
jp
mov
andb
stc
cli
dec
fcmovnb
in
and
stos
cmp
out
lahf
lods
jg
xlat
iret
mov
cmpsl
fists
jns
jg
cld
stc
push
and
mov
cmp
push
sahf
outsb
add
scas
jle
mov
mov
xchg
lea
cmp
dec
push
repz
lahf
mov
in
mov
xor
jg
cld
stc
inc
inc
clc
jo
add
call
movsb
aas
push
sti
out
lahf
aas
push
lds
pusha
lods
cmp
cld
stc
repz
mov
ret
sub
sbb
jle
sti
inc
push
insb
sbb
out
inc
imul
sbb
lods
inc
mov
sahf
cld
cld
stc
pop
btcl
mov
dec
ljmp
cmpsl
into
addr16
mov
lahf
aas
inc
ljmp
lock
dec
popf
addr16
movsb
fdivr
cld
stc
repz
fsincos
jmp
rcrl
cmp
mov
jg
lods
inc
xchg
aad
jge
cld
stc
repz
mov
outsb
test
dec
pushf
dec
fmul
or
lahf
aas
jg
mov
cs
xor
or
repz
roll
je
mov
xor
inc
adc
jg
cld
or
arpl
out
push
cmp
mov
out
lahf
sbb
out
mov
aad
cld
stc
mov
repz
inc
pop
push
aas
mov
add
dec
out
cmp
pop
dec
add
cld
stc
repz
fsubs
int3
pop
push
xor
pop
iret
lahf
aas
jg
push
sbb
js
cli
aam
push
cmpsb
cmp
stc
repz
loope
popf
adc
loopne
aam
lods
cmp
iret
int
aas
push
sahf
mov
iret
lahf
jg
dec
mov
mov
pop
insl
cli
jl
cld
stc
repz
std
cmp
lahf
sub
cmp
dec
insb
iret
lahf
aas
jg
dec
jbe
out
iret
cmc
inc
jg
out
andb
inc
pop
mov
add
xchg
dec
aaa
mov
jg
movsl
or
int
arpl
adc
bnd
push
xchg
inc
xor
fisttpll
sti
lods
lds
mov
or
sbb
in
std
sub
fucom
and
sub
in
stc
dec
fs
aas
jg
cld
das
jge
cmpsl
fwait
sub
cmpl
out
lahf
punpckldq
mov
in
fwait
js
aas
stc
cld
stc
adc
dec
in
ss
mov
out
inc
cmpsb
roll
lea
stc
test
adc
jl
jmp
outsl
rcr
out
lahf
aas
hlt
test
inc
fisubrl
xor
jg
stc
repz
loope
sbb
adc
les
iret
lahf
aas
ljmp
jnp
insb
adc
repz
leave
cmp
testb
sahf
pop
jmp
xchg
ja
lahf
aas
jg
inc
mov
add
push
movsl
cld
out
or
in
out
fs
mov
daa
into
sbb
push
xchg
push
dec
jo
lods
repz
lahf
aad
xor
pop
add
out
mov
stc
or
fwait
pop
or
mov
lahf
daa
add
and
stc
repz
xor
push
xchg
out
xor
loop
add
cld
cld
and
gs
cmp
fistpll
dec
incb
pop
scas
dec
pop
test
repnz
lahf
ljmp
lods
test
and
jnp
mov
ret
xor
pop
mov
repnz
jl
add
pusha
cs
loopne
test
inc
ds
out
add
lret
out
ror
xchg
shlb
clc
icebp
bound
cld
stc
and
int3
xor
test
pop
int3
testl
stos
lahf
jae
vpcmpgtw
inc
pop
lea
cltd
pop
cwtl
lret
imul
nop
lcall
repnz
pop
sarl
sbb
add
in
hlt
xchg
mov
mov
cmpsl
repnz
jl
mov
cld
jecxz
loop
pop
aas
incl
leave
adc
out
dec
mov
lahf
push
ljmp
add
aam
jg
cld
stc
stos
mov
dec
out
mov
pop
jl
in
pop
mov
xor
push
xchg
jo
sub
in
fisttps
popa
and
jne
or
pop
popf
jl
bound
ds
add
add
cmp
cmp
pop
jae
aas
jg
mov
and
xor
lret
addr16
sub
fimuls
vpsllq
iret
subb
mov
iret
int3
ret
in
aas
jg
cld
or
push
mov
stc
xchg
pop
and
xchg
lahf
addr16
or
sub
mov
ds
aas
jp
stc
fucomip
cmc
movsb
int3
pop
sarb
ljmp
pop
mov
xchg
or
inc
in
or
or
cltd
sub
stc
stc
mov
enter
test
xor
dec
lock
fs
in
jl
xchg
jg
pop
bnd
push
push
cmp
add
add
xchg
add
sahf
xor
mov
cwtl
jmp
outsb
push
stc
inc
jge
mov
jmp
fisttpll
aas
jg
cld
push
out
jle
jo
dec
add
adc
out
lahf
sbbb
sbb
cmp
mov
cld
stc
sbb
adc
stos
dec
xor
addr16
popa
out
lahf
aas
rorl
sub
cld
stc
repz
outsb
pusha
repnz
sbb
hlt
push
loope
xor
lahf
aas
jg
aas
push
aaa
lods
ror
mov
stc
repz
lods
add
inc
jge
cmp
pop
out
outsl
jg
cld
stc
sarl
jno
scas
dec
pop
les
cmp
mov
scas
sbb
mov
jl
and
inc
sub
xor
mov
jns
add
mov
sbb
loopne
lret
mov
cmpsb
das
nop
mov
adc
insb
adc
repz
xorb
cmpsl
adc
cmp
jg
cld
sbb
andb
cmpsb
xchg
mov
ss
lea
pusha
stc
cmp
add
sahf
cwtl
pop
xor
mov
and
out
lahf
aas
idiv
pop
push
jmp
or
sub
or
leave
clc
sub
push
movsl
clc
jl
rolb
lahf
aas
jg
mov
loop
dec
ja
mov
jne
add
in
sub
in
in
dec
sbb
push
cmpsl
cmp
sysret
inc
mov
adc
cmc
in
dec
repnz
sarl
jno
cld
sub
add
add
movsl
push
inc
sahf
aas
jg
or
push
test
add
iret
pop
ljmp
aaa
xor
and
stc
repz
lret
mov
adc
adc
add
test
xor
jecxz
jae
pop
or
mov
cmpsl
and
pop
lods
loop
outsb
xchg
ds
pop
je
pop
xchg
push
into
mov
ds
mov
out
mov
ja
jle
jg
push
sbb
add
outsl
repz
lahf
fmuls
xor
push
lcall
rorl
cmpsl
push
ss
mov
aas
jg
adc
sub
cmc
push
push
mov
ret
iret
lahf
imul
xchg
ret
arpl
insb
dec
ds
stc
jg
leave
iret
lahf
aas
shrb
adc
ficompl
shl
clc
fbstp
sbb
test
xor
inc
and
scas
mov
cs
sbb
cld
mov
ljmp
aas
jg
xchg
sti
repz
jp
adc
adc
repz
mov
xorl
jo
aas
jg
cld
icebp
pop
test
pop
push
sub
cmp
repz
lahf
fadds
mov
push
pop
cmp
addr16
cld
stc
jnp
jle
push
lock
nop
leave
sbb
out
out
lahf
aas
push
movsl
xor
xchg
stc
repz
fcoml
jmp
fcomp
in
cltd
rol
iret
lahf
aas
jg
gs
outsl
pop
push
adc
fs
cmp
adc
leave
nop
xchg
icebp
mov
lahf
aas
xchg
mov
push
mov
cld
stc
repz
adc
adc
adc
jae
mov
jg
adc
jnp
pop
cmp
loope
stc
repz
fdiv
ret
aas
push
addr16
aaa
aas
pushl
aas
jg
iret
sub
out
aaa
fisubrs
xchg
inc
and
jmp
sahf
cmpl
adc
leave
mov
repnz
movsl
mov
adc
cld
stc
pop
shl
cltd
mov
cmc
lahf
aas
jg
test
cmp
sub
cmpsb
outsb
jns
xchg
lock
scas
mov
inc
repnz
add
dec
ds
dec
dec
aaa
mov
pop
stc
enter
sbb
sahf
fsubr
rcrl
and
sahf
xchg
xor
inc
mov
in
fsts
adc
pop
stc
fadds
ds
lea
sti
push
mov
adc
pop
fisubrs
int
rcll
pop
sub
and
ds
xor
ret
or
mov
dec
jb
mov
mov
jl
test
push
push
sub
cld
stc
push
xor
subl
sahf
bswap
mov
add
aas
jg
push
push
xchg
roll
cld
stc
pop
imul
add
repz
inc
out
aas
jg
xchg
cwtl
mov
or
cld
stc
repz
push
movsl
adc
jns
or
in
sbbb
mov
cld
ds
xchg
cld
stc
repz
loopne
stc
and
lret
xchg
add
cltd
mov
sub
lahf
aas
jg
adc
and
and
insb
stc
repz
and
xchg
sarb
fiaddl
add
jg
cld
xrelease
scas
xlat
inc
fucomip
cmp
xlat
repz
lahf
pop
push
stos
hlt
arpl
fidivrs
cld
stc
pop
xchg
xlat
add
xor
and
sub
cmp
pop
dec
ds
jns
or
in
movsl
cltd
adc
jae
jp
xchg
xchg
adc
lahf
jg
mov
shll
mov
mov
lds
shll
les
push
cmp
dec
repz
xor
jne
enter
outsb
test
mov
fstl
jge
daa
pop
stc
add
xchg
mov
out
inc
nop
in
jl
mov
jne
xor
jle
in
stos
andb
jge
movsb
out
stos
inc
ds
jb
xchg
mov
dec
mov
movsl
xchg
mov
pop
xchg
repz
mov
orb
push
xchg
shlb
jg
cld
iret
push
outsl
mov
mov
cs
sbb
out
aam
fcoml
adc
rcrb
stc
repz
dec
and
sbb
jle
pushf
sub
outsb
jns
arpl
out
dec
xchg
push
jge
hlt
xor
leave
arpl
lea
test
test
jne
cwtl
jl
and
inc
sbb
xorl
jle
adc
lods
aad
scas
xlat
dec
xor
xchg
or
vpmaxsw
adc
daa
jo
lods
cwtl
fcomip
iret
and
jg
jbe
pop
mov
jl
dec
jp
pop
add
add
enter
pop
push
jb
cmpb
into
in
pop
stc
adc
loopne
popf
or
enter
xchg
addr16
lock
xor
push
les
lods
xor
stc
pop
mov
popa
pop
mov
xrelease
dec
jo
inc
mov
out
aas
jg
ret
lods
outsb
xor
adc
cmp
pop
aad
stc
repz
dec
fcoml
ficomps
xor
jg
cld
xchg
pop
fldenv
xchg
cmc
lds
jb
jge
movsb
repz
lahf
pop
mov
inc
or
jge
xchg
rclb
cmc
and
fcoml
inc
idivb
adc
pop
mov
mov
cmp
dec
jp
roll
mov
cmp
enter
cmc
xchg
pop
insb
inc
xchg
dec
dec
jbe
jg
pop
aas
add
mov
repz
jg
xor
subb
jg
cld
add
push
and
sbb
mov
dec
jbe
out
push
mov
cld
stc
pop
popa
mov
mov
cld
out
imul
aas
mov
mov
inc
fsubl
cld
stc
repz
cmp
or
pop
iret
lahf
aas
jg
cmp
hlt
lea
out
cmc
xchg
iret
loop
cmp
daa
sbb
xchg
cs
stc
repz
cmp
out
in
lret
adc
jg
cld
mov
outsl
adc
imul
lahf
aas
mov
ljmp
imul
xchg
and
ljmp
in
testb
dec
inc
lods
sahf
push
push
push
sbb
aaa
cld
stc
repz
cmp
push
sub
sub
aas
jg
and
or
lock
ret
in
mov
iret
xchg
lods
mov
pop
jge
pusha
push
cmp
cmpl
iret
lahf
aas
jg
gs
push
push
xor
sub
out
and
sbb
inc
popa
xchg
xor
lahf
aas
jg
cmp
jmp
ret
idiv
repz
sbb
lahf
shlb
aas
jg
cld
xchg
jae
pop
mov
pop
adc
mov
out
lahf
repnz
loope
jle
bound
cld
cmp
scas
cltd
repnz
push
gs
lahf
mov
jl
rorb
aas
ljmp
cli
out
hlt
cmpsl
mov
jbe
push
inc
insl
xchg
lahf
jmp
dec
sti
jg
iret
lahf
aas
repz
pusha
gs
lahf
aaa
rcrl
icebp
xchg
mov
pop
stc
push
insb
fsts
cld
mov
mov
es
lods
cmp
stos
jp
lock
in
cmp
mov
jle
fistpll
jg
cld
dec
inc
inc
sub
dec
sbb
insl
arpl
sbb
popa
repz
lahf
mov
dec
or
adc
in
out
and
je
pslld
jne
dec
push
add
sub
and
stc
int3
dec
mov
stc
dec
jae
or
add
dec
jmp
jge
push
repz
lahf
lcall
cmp
xor
stc
xchg
ret
dec
je
out
pop
pop
arpl
je
inc
test
sbb
in
aas
iret
cwtl
test
sbb
leave
pminsw
es
out
and
cld
mov
jge
js
mov
sub
aas
jg
call
xlat
leave
xor
repz
xchg
push
pusha
icebp
cmpsl
les
fstpt
repnz
nop
inc
fisubrs
mov
enter
enter
cmp
push
push
hlt
stos
xor
jae
add
jbe
xchg
jbe
enter
iret
icebp
and
lds
inc
aas
jg
cld
lock
sub
sub
ss
sub
movsb
repz
lahf
xchg
shll
or
jg
cld
stc
push
mov
jmp
mov
jmp
out
lahf
aas
pop
inc
push
pop
cmp
push
dec
mov
in
jecxz
push
icebp
test
adc
jmp
out
shlb
cld
mov
jnp
jb
sahf
dec
pop
pop
push
dec
ljmp
shl
xor
enter
lock
pop
sub
push
xchg
dec
or
lea
imul
push
inc
jg
fs
js
cld
stc
push
push
js
adc
or
sbb
xchg
aas
jg
out
and
jle
out
lahf
aas
lret
jge
out
lods
jp
test
cld
cld
stc
repz
pushf
addr16
out
xchg
outsl
inc
ds
lahf
push
mov
inc
push
add
ljmp
mov
jg
mov
jmp
or
out
mov
mov
or
push
add
stc
and
sbb
loopne
cmp
ficoml
aas
sbb
cmp
or
push
in
repnz
add
aas
jmp
push
mov
mov
pop
cld
stc
repz
ror
dec
cmpsl
outsl
cmpl
rcrb
aas
stc
sarl
sub
out
repz
addb
and
test
cld
sbb
cmp
xchg
mov
data16
xchg
call
out
lahf
xor
xchg
mov
popf
mov
aas
stc
cld
stc
xchg
scas
outsb
add
cwtl
mov
aad
inc
ds
daa
dec
xchg
cmpsb
fimull
fsubrs
mov
lods
sbb
popf
cmp
dec
or
cmpsb
cmp
sar
mov
stos
loopne
mov
and
idivl
and
jge
iret
lahf
aas
jg
add
nop
jbe
out
sti
xchg
jo
inc
pop
cld
stc
repz
fwait
inc
pop
push
and
in
mov
orb
fisubrs
pop
inc
cmp
cmp
iret
aas
inc
jo
movsl
push
jg,pt
cld
or
rorb
lods
jle
ret
cmp
out
lahf
aas
repnz
lcall
stc
repz
sbb
inc
or
or
sub
adc
iret
lahf
aas
jg
mov
addb
repz
out
stc
repz
mov
push
aaa
out
xor
addr16
dec
push
lahf
aas
jg
or
pushf
hlt
push
sub
imulb
iret
push
pop
insb
or
inc
insb
sahf
or
jge
jge
and
adcb
enter
cld
stc
adc
js
stos
mov
jae
hlt
ficoml
fisubs
int
stc
enter
stc
outsb
mov
jmp
icebp
scas
pop
sti
leave
and
pop
sub
rcr
mov
sahf
push
test
sti
leave
and
not
mov
sbbb
leave
and
inc
loopne
add
cmp
fmuls
mov
and
pop
lahf
jg
lods
cld
stc
pop
push
cmp
jecxz
pop
pop
xor
lahf
aas
jg
ret
xlat
cwtl
aas
mov
nop
adc
clc
adc
out
nop
inc
inc
es
lods
out
xchg
cld
jg
cmp
jns
jb
push
pusha
xor
movnti
call
sub
jg
clc
repz
xchg
ljmp
iret
lahf
add
lahf
jle
xlat
outsl
data16
idivl
cld
stc
sub
sbb
and
roll
cmp
iret
lahf
aas
cmc
inc
cvttps2pi
lcall
cld
stc
rep
mov
dec
sbb
cmp
xor
lret
lahf
aas
jg
and
xor
jae
push
dec
cld
stc
repz
sahf
add
pushf
stos
dec
sub
adc
rcll
cmc
in
and
es
repz
mov
lret
mov
lock
jg
cld
test
mov
jb
in
stos
pop
pop
repz
lahf
in
jg
mov
test
imulb
std
in
inc
sbb
push
dec
ds
js
xacquire
cmpsb
mov
aad
inc
aas
jg
inc
add
sub
jle
repnz
lahf
fdivrl
aam
jmp
stos
stos
pop
xchg
ss
test
cld
stc
lcall
jmp
lods
pop
mov
insb
int3
iret
lahf
mov
ret
shl
adc
repz
pop
jns
dec
mov
sti
mov
sub
inc
jle
cli
aas
xchg
pushf
sub
sbbb
repz
xor
gs
adc
lahf
aas
jg
shlb
call
xor
fmuls
cmp
iret
dec
ror
sbb
jb
lret
bound
pop
mov
test
and
mov
cmp
mov
push
or
mov
stc
enter
sub
pop
outsl
es
jbe
iret
jl
and
in
xor
dec
ljmp
ds
xor
jbe
adc
mov
inc
por
lcall
jp
push
jge
lds
inc
xchg
inc
dec
xchg
in
sahf
cld
push
fildl
cwtl
jno
push
stos
lock
test
inc
xlat
pop
sub
cmp
das
add
fs
sahf
sub
pop
out
xchg
fldl
iret
lahf
jg
inc
dec
mov
or
pop
xor
and
in
mov
int
pop
out
lahf
aas
jl
adc
std
sub
sub
pslld
repz
fnstsw
fs
faddp
call
aas
jg
inc
dec
or
stc
push
push
xor
sub
out
lahf
adc
cmc
cs
sti
aam
add
cld
stc
mov
inc
pop
push
xor
inc
jg
mov
aas
fcoms
stos
loop
adc
insb
ds
stc
repz
add
bound
or
pop
je
hlt
rcl
add
mov
iret
lahf
aas
cmp
xor
nop
frstor
mov
cld
stc
repz
push
jae
je
rcr
cltd
in
fs
jp
lahf
aas
jg
push
addr16
cltd
rcrb
stc
repz
and
mov
lcall
aas
jg
loopne
popa
aam
jae
shrb
leave
pop
repnz
push
icebp
and
outsl
loope
jne
aas
jg
cld
pusha
lds
inc
add
daa
push
and
push
dec
rorb
out
loopne
cmc
stc
or
inc
push
push
clc
mov
outsb
idivl
stos
inc
dec
push
bound
lods
push
lods
inc
pushf
cmpsb
lahf
loop
adc
dec
repnz
stc
repz
add
push
enter
xchg
mov
cld
mov
mov
and
cmp
iret
lahf
out
aam
dec
dec
dec
adc
scas
xchg
cld
stc
push
icebp
lds
daa
lea
lahf
aas
jg
in
xchg
in
or
xchg
add
clc
in
add
sbbl
cld
stc
repz
stos
in
dec
sbb
inc
pop
add
in
mov
repnz
xchg
or
push
int
inc
mov
out
cmp
push
and
mov
sub
pop
out
mov
out
mov
jl
cli
lahf
push
sbb
stos
test
jg
stos
adc
or
xchg
aaa
daa
pop
stc
fcoms
or
add
repnz
pop
mov
add
dec
in
loope
sub
movsb
sub
and
xchg
repz
sbb
sub
inc
add
stc
stc
mov
pop
rcll
cmc
dec
popa
out
lahf
aas
pop
sub
xchg
xchg
and
les
repnz
pusha
test
inc
or
xor
jle
sarb
xchg
mov
jne
adc
pop
jecxz
inc
inc
outsl
das
mov
in
adc
jp
out
lahf
aas
mov
negb
push
jno
cld
stc
repz
mov
jp
jno
mov
ret
out
pop
roll
das
lcall
nop
iret
lahf
jg
push
dec
cli
lret
fdivr
cld
add
mov
cld
pop
xor
lahf
aas
jg
std
arpl
stos
jns
xor
loop
and
enter
adc
and
leave
loopne
dec
cmc
hlt
andb
inc
sub
xchg
pushf
inc
pushf
in
pushf
shrl
stc
repz
mov
sub
jecxz
inc
cli
cmp
sbb
lahf
aas
jg
movsl
or
mov
aas
scas
je
repz
jne
jno
stc
cld
fs
sub
repnz
mov
rcrl
popf
les
jg
ret
out
test
xchg
inc
mov
xchg
mov
cli
fmul
lahf
aas
jg
jae
jae
shl
lret
aad
xchg
loope
cmp
fcoml
outsl
and
bswap
jo
mov
mov
cld
stc
lods
scas
dec
ret
scas
sbb
stos
xchg
push
push
push
in
lahf
aas
stos
js
add
popf
push
idiv
dec
jl
jecxz
bound
and
imul
gs
pop
mov
es
cwtl
lret
pop
add
test
sbb
mov
mov
sub
add
insb
aas
adc
or
xchg
xor
sbb
sub
xchg
in
pop
stc
xor
pop
mov
inc
fcomip
jnp
xchg
jl
jp
cmp
jmp
dec
push
inc
sar
enter
sub
xor
int3
mov
pop
outsb
cltd
clc
arpl
repz
aad
sub
rcll
lahf
cld
cld
stc
inc
call
jmp
cmpsb
push
lahf
aas
inc
pop
fmull
shr
push
int3
mov
stc
stc
repz
stos
xor
pop
dec
inc
mov
sti
and
mov
cmp
push
movsb
repnz
jge
fadds
outsw
cmpsl
jae
or
lahf
mov
inc
jl
lahf
mov
inc
cmpsl
sub
dec
lock
cmp
push
adc
gs
pop
shlb
fldt
enter
cmp
xchg
out
lahf
jg
pop
mov
into
ljmp
ja
stc
cld
add
in
jbe
iret
es
cmp
pop
aas
ljmp
cmc
fsubp
leave
test
iret
lahf
mov
adc
cld
and
sub
xchg
lds
leave
lahf
aas
jg
and
mov
stc
repz
loop
push
inc
sbb
xchg
sbb
insl
add
cmpl
out
xchg
sub
or
dec
repz
lahf
ja
in
bound
xchg
mov
inc
lds
cld
stc
cmp
mov
pop
nop
jmp
cmp
iret
lahf
aas
mov
ja
cli
push
mov
cld
stc
repz
aaa
mov
xchg
sub
push
mov
pop
iret
lahf
aas
jg
cmpsl
xchg
loope
add
imul
inc
aaa
out
pop
pop
mov
mov
inc
xchg
imul
sub
fimuls
mov
xchg
clc
in
iret
call
mov
rcll
and
and
scas
fdivrs
lret
stc
repz
inc
movsb
mov
sub
popa
jg
divl
cld
jmp
cmp
fdivrl
push
add
repnz
lahf
mov
ljmp
sub
push
xlat
iret
repnz
pusha
mov
dec
or
cmp
movsb
enter
jo
jg
aad
push
divl
ds
mov
test
imul
movsb
sbb
repz
pop
sub
mov
jnp
in
push
sbb
push
jg
cld
stc
mov
mov
lret
pop
popf
es
lahf
aas
sub
mov
sbb
lods
stos
mov
cld
stc
repz
xchg
stos
ret
sub
cld
jnp
iret
lahf
aas
jg
nop
ret
inc
shrl
mov
push
mov
cld
stc
repz
sub
xchg
sbb
mov
lahf
aas
jg
int3
inc
adc
ret
cmp
pop
stc
repz
cmpsb
loop
xchg
cli
sbb
addr16
js
ds
loop
mov
out
cld
sub
add
cmp
dec
ret
repnz
pop
iret
lahf
aas
jg
mov
push
xchg
inc
iret
mov
and
ds
repz
rolb
jbe
inc
xchg
out
mov
mov
cwtl
mov
fimuls
ds
leave
clc
sbb
loopne
or
stc
repnz
jl
push
fcomps
iret
sub
andl
xor
lds
iret
lahf
jg
fmuls
sub
pop
sbb
cmp
cld
stc
repz
mov
sub
mov
jg
jecxz
iret
mov
cwtl
popf
stos
adc
repz
lods
cmp
mov
lods
mov
xchg
imul
cs
out
dec
xlat
loopne
inc
clc
ds
repnz
outsl
inc
mov
push
gs
mov
jmp
mov
fwait
lcall
and
add
pop
pop
or
cmp
jecxz
pop
sti
in
jae
or
test
xor
leave
mov
push
stos
and
mov
pop
pop
cmp
lock
sbb
inc
inc
xchg
xor
stc
lds
dec
sbb
dec
fimull
nop
cwtl
cmp
xchg
pop
xchg
cmp
jo
jno
or
and
aad
pop
sub
sbb
xchg
xchg
bound
ds
pop
push
jmp
jg
jg
lods
test
std
mov
repnz
int3
cld
int3
inc
jae
divb
pop
sub
dec
fistl
lahf
cmp
mov
bound
ficoml
inc
outsl
jns
jbe
cmp
mov
push
adc
push
and
mov
loopne
ret
ljmp
push
mov
fistpll
stos
pop
mov
jl
or
sbb
cltd
iret
mov
mov
push
stc
repz
mov
mov
add
add
lahf
aas
jg
add
loope
mov
and
pop
jmp
xchg
aaa
mov
stc
stos
repz
mov
fisubrl
daa
stos
push
in
outsb
lock
ret
xor
jmp
adc
adc
je
pop
inc
or
cli
in
jge
test
lcall
jg
cld
inc
cmp
and
std
scas
lods
push
cs
out
lods
mov
xchg
stc
cld
stc
inc
divb
sbb
aas
adc
inc
imul
push
aas
js
repz
aas
dec
jg
jno
adc
xor
push
or
inc
repnz
pop
mov
cld
xchg
push
jns
out
mov
mov
repz
lahf
sti
inc
jns
iret
sbb
sub
inc
jbe
cltd
cmp
or
enter
das
or
add
imul
andl
mov
lahf
cld
rorb
jl
fldl
call
jle
dec
push
add
dec
fbld
or
xor
xor
jg
adc
pop
mov
cmp
lods
adc
lahf
xor
jg
cld
stc
in
icebp
mov
pushf
push
and
data16
dec
xchg
fistpl
inc
inc
int
mov
ja
or
in
insl
fisubrl
es
in
jl
mov
fdivs
mov
ret
xor
loopne
push
or
or
test
xchg
loopne
stc
cld
ror
cmc
add
mov
xor
sahf
cld
sub
int3
leave
sarl
xchg
ds
leave
jno
mov
mov
cmp
xchg
push
pop
lahf
aas
add
push
adc
adc
rorb
or
mov
test
loopne
sub
adc
and
jae
cld
stc
testl
adc
enter
aas
test
mov
aas
jmp
fucom
xor
out
mov
out
push
jns
sahf
sub
in
inc
inc
lahf
aas
jg
push
arpl
vpaddusb
sub
repz
movsb
sub
xchg
enter
adc
jl
in
sub
int3
jnp
ror
iret
lahf
aas
in
movsl
call
mov
cld
inc
icebp
jmp
das
ja
and
push
lret
jo
dec
jle
hlt
jg
cld
stc
push
mov
mov
jbe
xor
iret
lahf
aas
movsb
xor
imul
cld
stc
repz
jecxz
leave
jle
mov
stc
mov
shrb
aaa
mov
lods
aas
jg
adc
test
sub
iret
lahf
xor
pop
lret
mov
and
hlt
xchg
add
mov
adc
cld
stc
xchg
outsb
insl
aas
lahf
rcrb
adc
jle
lock
iret
lahf
aas
lock
int
loop
aad
out
xor
cld
stc
repz
sub
enter
jmp
jne
out
add
fwait
mov
addr16
mov
cld
stc
repz
add
mov
notb
sub
lahf
aas
jg
sub
aas
adc
adc
mov
loope
stc
repz
mov
cmp
add
xchg
add
xor
rep
in
xor
inc
stc
repz
adc
lahf
scas
add
mov
jg
cld
negl
mov
inc
adc
repz
lahf
or
xlat
dec
lcall
or
cld
stc
and
inc
xchg
mov
or
push
jae
mov
iret
lahf
aas
mov
sbb
mov
sub
icebp
imul
jle
adc
mov
mov
into
inc
push
jp
inc
ds
mov
orb
inc
mov
cs
es
jg
adc
dec
in
mov
pop
aam
insl
ds
jge
sub
jecxz
push
incb
mov
dec
push
stos
jl
dec
cmp
adc
xchg
adc
mov
sbb
inc
dec
outsl
sub
jae
incb
push
leave
lret
lcall
pop
aad
mov
cmp
cmp
sub
sub
jge
in
jl
add
cmp
inc
repz
inc
xor
or
loopne
cld
stc
cltd
or
and
push
push
jns
mov
iret
lahf
aas
and
in
out
xchg
xchg
sbb
cld
stc
repz
movsl
in
lret
push
ret
sbb
aad
aas
jg
xor
lret
jae
push
and
mov
xchg
mov
ficoms
pop
sti
adc
jno
sub
jp
enter
sbb
lods
aas
cmp
stos
and
ljmp
mov
arpl
add
jmp
iret
mov
xor
sub
icebp
and
add
or
cmp
cmc
mov
aas
jg
mov
imul
xchg
gs
and
fnstcw
cld
stc
mov
cltd
mov
das
test
lahf
aas
push
xchg
stos
popf
add
cli
push
cld
stc
repz
in
call
inc
sbb
aas
jg
call
aad
jp
stc
repz
iret
jp
cwtl
mov
es
and
leave
fwait
cs
jg
cld
pop
sub
pop
shlb
mov
repz
lahf
xor
add
das
jg
cld
stc
xchg
push
nop
in
mov
decb
sbb
pop
add
iret
lahf
aas
inc
mov
movsl
mov
cld
shl
inc
cmp
repz
iret
pop
outsb
mov
inc
lds
xchg
gs
jp
stos
jge
pop
in
out
pcmpeqd
in
fisttpl
ljmp
or
add
leave
push
sbb
mov
lahf
aas
jg
jl
jp
xchg
fsubl
stc
repz
int
test
icebp
and
hlt
mov
dec
mov
xor
and
mov
jle
fyl2xp1
repz
dec
dec
pop
or
cs
mov
cld
sbb
cmpsl
fsubp
jl
lahf
ljmp
xchg
inc
popa
xchg
les
loop
cmp
sub
sbb
xor
jecxz
jmp
daa
call
fsubrl
jg
cld
stc
adc
add
adc
sahf
dec
ljmp
pop
or
js
lock
out
sti
cld
stc
repz
sub
mov
xchg
mov
shl
dec
lahf
aas
jg
cmp
popf
add
lods
or
adc
add
lods
pushf
shrl
dec
add
repnz
bound
sbb
repnz
cld
stc
adc
aad
cwtl
and
push
cs
lahf
aas
jg
imul
lcall
repz
lret
bnd
mov
mov
jg
xor
insl
push
jmp
cli
stc
repz
mov
cmc
cmpsl
mov
leave
mov
jg
cld
int3
jns
aas
sbb
repz
lds
cmp
nop
aas
jg
jne
dec
lods
jg
jp
rcl
roll
dec
cld
subl
lock
aaa
sbb
mov
out
cmp
mov
push
lahf
daa
cld
stc
repz
add
dec
sbb
adc
cmp
aas
jg
loop
cmp
jge
ljmp
iret
dec
fxam
xor
push
out
pop
loopne
sub
push
lea
cld
stc
mov
push
pop
icebp
js
daa
jmp
push
sbb
cmc
mov
mov
subl
mov
jns
cld
in
jne
mov
jb
aas
repz
aad
cltd
out
mov
js
mov
icebp
jg
cld
stc
popa
inc
iret
lret
push
and
test
loopne
jbe
imul
enter
lea
adc
loopne
pop
out
and
out
lahf
test
cltd
aam
mov
and
mov
test
stc
and
inc
insb
subb
sub
scas
dec
or
sbbb
daa
lahf
aas
xchg
and
sbb
repnz
push
add
jae
xchg
mov
fnsave
mov
cmp
out
lahf
fmull
aaa
inc
cmc
lock
int3
out
sub
stc
pop
jg
enter
xchg
pop
dec
pusha
xor
cltd
adc
out
lahf
aas
sbb
push
sbb
imulb
ret
data16
sbb
pop
ss
mov
aas
jg
cmpsl
mov
fwait
sub
cwtl
shl
sar
stc
repz
and
arpl
clc
and
aas
jg
sbb
pop
call
push
gs
mov
repnz
push
in
ds
cld
insb
sbb
pop
and
jl
push
jnp
cld
stc
push
hlt
mov
test
aad
xor
lahf
cld
adc
sub
fiadds
out
sub
xchg
adc
cld
stc
repz
cld
and
xchg
ret
repnz
sub
iret
lahf
aas
jg
adcb
int
fldt
out
dec
jl
std
arpl
vpackssdw
jl
aas
jg
and
push
jb
iret
ljmp
inc
leave
and
nop
popl
ds
test
push
cld
cmp
scas
testb
jb
xchg
lahf
aas
jg
daa
sbb
mov
jmp
in
out
push
sub
pushf
cmp
sub
jns
arpl
pop
xor
test
out
add
inc
xor
cld
stc
repz
pusha
mov
pop
into
cmp
mov
iret
lahf
aas
jg
inc
fs
xchg
mov
inc
in
jmp
repz
dec
insl
add
adc
nop
mov
jns
aas
jg
icebp
lret
pop
pop
sti
mov
adc
mov
repz
pop
std
insl
enter
outsb
mov
mov
jg
cld
adcb
lcall
mov
repz
lahf
cli
sub
stos
test
mov
cld
stc
jmp
int
int
je
mov
leave
pop
jl
xchg
out
lahf
aas
or
push
lock
ss
cld
stc
repz
fwait
testl
inc
rolb
adcl
add
mov
jno
cld
and
mov
pop
rcrb
stc
adc
xor
sub
leave
adc
mov
daa
cmpsb
push
dec
push
xor
aas
jg
ljmp
xchg
or
adc
pushf
and
and
cld
and
sbb
jge
addr16
iret
lahf
aas
jg
add
cmpl
test
repnz
sbb
repnz
ret
jl
in
shlb
cwtl
sarl
ljmp
ds
lea
cmpsb
cmc
inc
adc
lahf
jl
and
fmull
ljmp
in
mov
adc
xchg
pop
outsb
sub
sarb
cld
stc
cmp
lret
into
jmp
xchg
jnp
mov
iret
lahf
aas
dec
sub
cmp
sub
mov
sbb
cs
lahf
aas
jg
pop
jb
mov
ja
add
leave
or
loope
cld
out
lahf
aas
loopne
repnz
mov
ret
cld
stc
repz
xchg
inc
inc
cmp
stc
pop
aam
jl
das
adc
repz
aaa
adc
mov
cmpsb
push
das
pop
lahf
aas
jg
ss
inc
out
cli
dec
push
jbe
popf
mov
iret
lret
xchg
jo
or
cmpsl
xor
aas
jg
cld
jmp
xor
mov
imul
shlb
in
push
lods
loope
jae
les
push
sbb
cld
stc
pop
stc
cs
sbb
adc
in
mov
ds
xchg
mov
loopne
test
mov
push
pushf
pop
add
stc
lods
ds
stos
scas
cmp
xchg
cwtl
in
flds
add
sahf
mov
jl
popf
into
push
cli
test
sbb
fstpt
pop
test
into
outsb
lret
pop
out
daa
jge
ja
add
cld
and
or
mov
and
lahf
aas
jg
xor
loop
dec
fwait
mov
adc
lahf
subl
shlb
ss
scas
push
cltd
and
repnz
repz
lahf
xor
movsl
andl
push
sub
ja
popa
mov
mov
push
dec
cmp
shll
jl
and
dec
adc
repnz
das
push
insb
and
stos
adcb
push
lahf
add
inc
mov
mov
iret
push
lret
inc
xchg
nop
jmp
push
bound
stc
pop
inc
cmp
in
jg
push
mov
jno
cmp
arpl
lahf
aas
clc
dec
or
andb
cld
addb
repz
sub
cld
mov
push
sbb
and
cmp
pop
pop
in
enter
pop
inc
roll
mov
mov
inc
jl
mov
push
insl
in
iret
lahf
and
in
xor
jg
pop
test
lahf
cmc
mov
sahf
mov
inc
leave
mov
add
mov
test
clc
cmpsb
sub
jbe
insb
push
add
icebp
sub
loope
adc
mov
inc
inc
sahf
pop
call
shrl
or
push
repz
mov
dec
lea
stos
repnz
inc
pop
add
dec
test
add
or
outsl
sub
sub
notb
sub
add
cmp
ret
jle
or
sbb
hlt
mov
je
or
roll
test
dec
sbb
add
rorl
and
hlt
sub
mov
adc
rorl
fsubrs
shrb
add
insl
fcmovnb
or
mov
aam
adc
mov
lea
mov
imul
jnp
mov
fstpl
push
mov
or
call
stc
or
outsb
cmp
cs
mov
mov
roll
and
jp
push
push
pop
push
inc
dec
sbb
add
loop
adc
loopne
or
test
shlb
xor
or
test
sub
lahf
imul
mov
add
xor
mov
inc
adc
add
lods
mov
repnz
push
xchg
mov
aad
pop
mov
push
push
mov
xchg
sub
xor
inc
test
test
in
cs
mov
or
add
mov
mov
xchg
jge
add
filds
sub
jae
inc
enter
mov
pop
xchg
roll
icebp
adc
or
pop
mov
xor
xor
xchg
sbb
add
mov
jp
push
mov
mov
and
ror
lea
shrl
stos
test
sbb
sub
aam
fdiv
negb
clc
ret
cmp
sub
je
xor
pushf
je
mov
mov
sbb
sub
mov
jg
in
push
sub
or
push
sbb
testb
jp
jge
sbb
add
sbb
xor
add
loopne
add
push
and
fwait
lods
pop
js
inc
mov
daa
push
je
call
cmp
push
sub
and
ljmp
int
push
mov
pop
das
jge
movsl
xor
insb
xor
xor
in
cmpsb
mov
and
aam
sub
inc
push
lret
jmp
and
test
or
adcb
and
add
movsb
or
mov
filds
sbb
xor
in
mov
out
add
bswap
mov
add
sbb
cmp
pusha
ror
fmuls
sbb
mov
sbb
add
icebp
push
hlt
aad
insl
lods
scas
mov
jecxz
fcmovnbe
sbb
push
jp
clc
adc
pop
mov
int3
adc
adc
jnp
pop
sbb
push
inc
mov
jbe
daa
mov
sub
divb
mov
shlb
xor
or
fcmovnb
mov
enter
pop
mov
or
loop
insb
xchg
orl
sbb
cmp
adc
and
shll
imul
dec
call
cmp
adc
mov
filds
push
mov
mov
daa
add
loopne
inc
jbe
loope
cmc
dec
xchg
pusha
frstor
xor
mov
pop
lods
scas
pop
inc
push
cwtl
or
jbe
inc
lret
sbb
adc
test
push
xchg
negb
add
and
test
loop
pop
adc
inc
loopne
mov
outsl
push
das
push
icebp
xchg
lea
push
jl
fmull
test
scas
pop
cmp
ret
inc
inc
sub
xchg
popf
fistpll
call
mov
push
mov
pop
adc
push
add
or
lods
aas
pop
cwtl
xchg
push
or
ja
mov
adc
adc
lock
movsl
test
inc
inc
adc
inc
rol
aam
out
cwtl
jbe
sbb
iret
orl
cmpsl
sub
rorb
xchg
mov
and
sti
cmp
jnp
lock
push
push
fcom
or
cld
sub
jne
xchg
je
mov
pop
inc
mov
punpckhdq
pop
cvtps2pd
add
push
cmpl
lcall
les
ret
push
aad
into
fldt
pop
adc
push
cmpl
inc
mov
imul
push
jbe
and
pop
sbb
mov
inc
cmp
push
push
aam
stc
stc
push
adc
lahf
cs
mov
mov
mov
adc
rorl
mov
sub
mov
bound
push
mov
movsl
sbb
add
adc
adc
lods
add
mov
lcall
jmp
pop
nop
cli
adc
lcall
adc
pop
fimuls
adc
cmp
add
adc
mov
sub
cmpb
dec
sbb
cmp
rclb
test
push
sbb
orl
push
xlat
add
push
ret
jb
in
in
xor
push
and
adc
xor
pop
cmp
ja
and
popf
cwtl
ret
enter
jbe
ds
lock
mov
adc
movb
or
and
jo
stc
ret
or
inc
movsl
sarl
sub
sbb
inc
std
imul
push
push
das
xor
push
push
push
call
adc
pop
ret
push
lret
push
aam
enter
loope
or
sbb
inc
push
sub
xor
mov
sub
pop
rolb
dec
dec
sbb
or
lret
cmp
loope
and
pop
xchg
xchg
aad
loope
out
mov
rcrb
rolb
sahf
dec
push
loopne
jmp
mov
xchg
mov
subl
cmp
aaa
xor
push
sahf
sbb
xchg
icebp
call
mov
xor
xchg
or
bound
xor
outsb
push
out
push
pop
push
sub
dec
pop
sbb
add
mov
inc
ljmp
push
rol
push
push
pop
push
add
enter
testl
mov
add
je
or
movl
add
xchg
ja
das
std
pop
pop
ret
cmpw
xor
push
rorb
jne
data16
or
fdivr
sub
push
xor
cmp
ja
outsl
or
ret
addr16
push
push
adc
outsb
dec
std
gs
add
adc
and
xlat
rolb
test
sbb
push
sub
sbb
jne
mov
loop
imul
std
in
mov
push
sbb
cmp
sub
sub
sbb
xchg
fstps
add
mov
pushf
lods
std
jle
and
mov
loope
sbb
add
iret
add
shl
mov
test
mov
clc
mov
mov
mov
hlt
test
pop
xor
jbe
mov
adc
or
pushf
adc
xor
adc
or
jmp
sbb
pop
idivl
movb
sub
and
pop
jno
adc
gs
ja
or
ljmp
pop
push
and
or
pop
mov
shr
or
push
xchg
out
mov
push
mov
loopne
push
xor
fldl
jmp
mov
js
fucomi
mov
or
hlt
inc
loope
gs
push
aam
out
or
mov
sbb
inc
sub
ret
out
ret
arpl
add
pop
fdivrs
sbb
cmp
insl
loopne
sub
or
inc
adc
and
cmp
and
iret
mov
cltd
js
mulb
cmp
lret
push
push
xor
in
fdivs
nop
lcall
fisubs
outsl
das
incl
popa
test
imul
or
push
phsubd
sub
inc
pop
jno
adc
jb
std
lock
int3
push
or
push
outsb
jmp
mov
cmp
pop
movb
outsl
mov
out
pop
pop
or
mov
test
dec
mov
jb
mov
xor
adc
jle
cmp
jne
sbb
movl
mov
pop
in
test
push
pop
daa
mov
xchg
pushf
je
fimull
ficomps
xor
xchg
je
mov
or
je
pop
aaa
mov
pop
je
fists
sbb
sbb
call
and
push
push
push
sub
or
and
lds
mov
push
push
ud0
jb
push
pushf
pop
pop
push
push
sbb
mov
add
repz
loop
rcrb
or
cs
lea
je
mov
sub
inc
adc
jne
and
enter
or
shrb
movsl
ficoms
cmp
jb
in
jg
mov
hlt
inc
ds
cmp
je
push
sub
xor
fldt
mov
and
xchg
out
nop
mov
test
adc
xor
lahf
mov
mov
lcall
lock
movsb
jnp
sbb
xchg
jl
add
pop
imulb
add
push
add
jle
ss
mov
pop
sbb
sbb
jl
out
or
sbb
fnstsw
adc
cmp
and
push
push
push
push
mov
jl
jnp
arpl
sbb
adc
in
inc
cmp
xor
add
ja
push
jae
dec
inc
mov
cld
cmp
pop
je
adc
add
push
fadds
fsubrl
cmp
pop
mov
push
cmp
mov
rclb
mov
jne
popf
push
push
mov
add
repnz
es
inc
push
push
insb
push
inc
cvtpi2ps
inc
int3
mov
inc
mov
or
fisttpl
in
cmp
stos
mov
jne
mov
cmp
push
das
and
adc
imul
hlt
xchg
add
daa
cmp
fld
add
pop
xor
sbb
int
in
add
and
sti
adc
push
and
lea
hlt
iret
dec
mov
cmp
jne
xchg
mov
std
in
and
lea
shlb
mov
push
or
inc
pop
sub
push
jp
jbe
imul
sbb
mov
mov
loopne
or
xchg
push
push
xchg
push
sbb
mov
std
xchg
inc
mov
cmp
push
push
loopne
push
pop
cmp
call
mov
imul
test
jb
imul
cmp
jae
sbb
rcll
jbe
mov
pop
or
psubsw
in
cmp
jne
pusha
imul
add
insl
dec
pusha
jbe
or
mov
mov
cmp
mov
mov
mov
dec
mov
stc
cmp
jge
imul
jle
andl
inc
mov
push
cmp
ss
jl
mov
cmp
xchg
rorb
inc
subl
jle
fdivrl
dec
cmp
lahf
test
cmp
lea
stc
cmp
push
cmp
jns
mov
jbe
mov
clc
outsb
xchg
out
mov
pop
in
fabs
lods
sub
inc
clc
pslld
lcall
xor
fidivl
xor
cmp
mov
call
mov
gs
push
shll
pop
clc
cmp
ja
test
cs
cmp
imul
jno
lret
or
xchg
stc
movzbl
std
and
shrl
pop
inc
xor
jne
or
xchg
push
cmp
lret
pop
jnp
pop
gs
fucomi
or
jne
xorb
cmp
cmp
inc
jmp
inc
cmp
jne
push
inc
jg
clc
pop
lret
mov
cmp
pop
jno
adc
in
mov
inc
push
jmp
xor
arpl
jle
pop
push
sub
je
fiadds
push
cmpsb
push
add
pop
in
ja
ljmp
dec
cwtl
in
fisttpll
movl
aad
ret
and
adc
arpl
or
adc
sarb
idivb
inc
or
aaa
push
or
add
je
sub
sbb
adc
pop
push
xor
and
sbb
adc
cmp
pop
test
dec
call
in
add
mov
dec
ret
push
inc
dec
adc
pop
push
push
jl
jbe
ret
or
pop
test
pop
jo
xor
notb
cmp
je
add
jne
dec
scas
imulb
xor
mov
insl
cmp
cmp
push
xchg
jl
xor
repz
jmp
sbb
js
mov
lahf
adc
add
rcrl
inc
mov
and
lods
es
pop
data16
dec
sbb
lea
and
jmp
es
mov
mov
shr
cmc
xchg
fcoms
dec
jl
pop
inc
ror
jne
lret
std
xchg
cs
je
mov
inc
jno
cmp
sub
mov
or
out
fdivrl
jae
and
sbb
push
inc
daa
push
fbstp
mov
xor
adc
mov
inc
jae
sub
int3
leave
or
or
lcall
push
mov
xchg
push
cwtl
outsl
xchg
mov
scas
pop
cmp
dec
mov
jbe
jne
pop
cld
jbe
lea
push
sbb
fstpl
xor
add
mulb
dec
jle
adc
jae
sub
clc
mov
lea
cmp
jb
jo
jae
ret
fstpt
push
push
inc
inc
mov
loopne
mov
outsl
inc
xlat
push
movl
mov
scas
push
pusha
xchg
pop
nop
mov
pusha
fs
add
jne
fsub
inc
loope
lea
in
not
movsl
xabort
xchg
mov
mov
dec
lretw
inc
bound
jle
cmp
or
cmp
xchg
mov
mov
sub
lds
sbb
push
repnz
add
pop
sub
push
sar
inc
and
rcll
cmp
jmp
push
dec
insl
ret
cltd
jae
jle
sbb
fsubrl
and
mov
xchg
sbb
mov
jecxz
pop
mov
jmp
cmp
pop
cmp
adc
insb
mov
inc
jge
mov
mov
sti
add
js
imul
adc
xchg
inc
push
mov
ret
into
mov
mov
sbb
dec
cmp
sub
mov
pop
pop
call
sub
loopne
jae
jmp
dec
or
and
sbb
pop
mov
adc
imul
push
adcb
add
dec
xor
add
sub
add
pop
lcall
or
cmp
sti
insl
or
add
loopne
int3
cmp
inc
rcrb
push
xorl
hlt
mov
sub
jl
mov
fdivs
jnp
lea
arpl
xchg
mov
addl
sub
and
mov
xchg
add
add
sarl
ret
mov
hlt
jl
jmp
or
mov
stos
jle
fsubp
mov
insl
add
je
mov
test
xchg
test
jne
push
mov
insb
xchg
sbb
out
std
jg
clc
add
out
add
and
xor
pop
or
mov
out
leave
bound
icebp
ret
jp
sub
arpl
mov
xor
or
lret
cmp
orb
jmp
dec
orl
xchg
push
scas
faddp
dec
neg
sbb
pusha
pop
or
push
and
das
inc
fndisi(8087
xchg
in
imul
ds
lcall
or
jne
or
je
xchg
pop
daa
movl
sar
sti
add
mov
push
push
push
jns
mov
xor
insl
mov
and
sub
mov
jnp
enter
nop
nop
popa
jmp
sub
push
iret
lea
push
sub
pusha
imul
cld
xor
push
add
jmp
push
push
lods
mov
jo
add
push
pop
mov
xor
jbe
xchg
addr16
mov
sub
cmp
jb
jmp
mov
clc
ja
cmp
fildl
int
xor
and
cwtl
jle
xlat
pop
push
sbb
popf
sbb
sbb
inc
imul
fstl
cmp
lcall
add
jl
xor
or
xor
xor
pop
out
mov
jbe
mov
js
inc
mov
adc
int
negl
adc
in
fs
push
jl
xchg
push
push
sub
fs
pop
pushf
pop
mov
pop
pushf
lahf
adc
mov
fs
mov
loopne
or
mov
sarb
mov
cmc
mov
xchg
pushl
sbb
adc
xchg
pushf
lcall
jo
xchg
inc
add
js
push
mov
lcall
scas
mov
mov
enter
push
xor
push
jp
cmp
scas
xor
dec
dec
pusha
adc
adc
or
push
mov
cmp
mov
rcrl
imul
pop
stc
inc
dec
or
fs
rclb
push
mov
movsb
and
imul
pop
sbb
jge
fwait
adc
inc
and
dec
adc
and
or
adc
and
dec
jbe
pop
cmp
dec
aaa
pushf
je
jle
sbb
cmp
jp
push
push
adc
test
test
mov
loopne
and
xor
push
cmp
push
xchg
clc
aas
mov
inc
test
sbb
das
inc
sub
sahf
ja
cmp
cld
mov
enter
clc
or
and
pop
push
icebp
fstpt
int3
mov
pushf
mov
pusha
lods
outsl
in
mov
and
cmp
pop
push
pusha
loopne
or
mov
add
and
push
inc
or
outsb
fimuls
push
sub
test
mov
ret
jge
add
mov
sahf
or
mov
and
add
dec
push
imul
adc
rorb
push
push
sbb
cwtl
je
les
sbb
and
pusha
or
pop
addr16
pop
add
shll
cld
mov
sbb
dec
and
shlb
in
pop
adc
push
push
jb
pop
leave
add
add
out
movsb
push
xor
out
sbb
cwtl
aas
lock
jp
test
sbb
adc
push
or
dec
xor
xchg
xchg
andl
xchg
lret
and
shlb
pop
aaa
fildl
lea
loopne
add
js
rol
gs
pop
sbb
shr
loope
mov
mov
push
mov
pop
mov
pop
push
ret
int3
add
mov
and
jae
xor
loope
insb
adc
movl
ret
adc
mov
xor
cmp
pop
lea
fsubl
pop
cmp
pop
jno
imul
xor
lea
outsb
lcall
in
add
and
lea
dec
xchg
insl
hlt
add
xchg
sbb
negl
xlat
or
jbe
jl
jg
push
add
lea
inc
jne
cmpb
scas
mov
xchg
xchg
inc
je
jnp
stos
ret
mov
sub
or
pop
imul
sub
je
stos
sub
push
sbb
test
adc
xor
jge
jp
sub
push
push
aad
enter
repz
xchg
and
mov
fwait
push
outsl
mov
and
dec
or
jmp
pop
xor
push
lret
mov
push
push
and
ja
jmp
test
ficoms
ficoml
mov
and
mov
test
je
idivl
fst
mov
aad
jae
mov
jmp
or
xor
push
pop
lea
lock
xor
fcom
mov
fstpl
or
or
mov
dec
arpl
or
pop
jl
mov
and
jecxz
push
cli
mov
mov
iret
inc
lea
and
stos
mov
pop
cmp
bound
pop
push
jo
aam
outsb
outsb
idivb
iret
lods
add
or
scas
pop
or
aas
inc
adc
fcompl
std
and
cmp
rcr
xchg
jl
pusha
addl
icebp
push
xchg
mov
pop
push
addb
push
jecxz
sub
shl
andl
lea
push
dec
cmp
fsubrl
pop
lret
lret
xlat
or
jne
push
pop
jnp
pop
movsl
out
es
xor
sub
and
or
cmp
jge
mov
sbb
xor
adc
push
push
stos
add
decl
mov
xor
add
push
push
pop
setns
adc
dec
fwait
mov
push
mov
jne
dec
push
sub
push
add
or
add
sub
mov
sub
push
lods
pop
nop
rol
xor
xlat
jnp
lea
fsubs
adc
or
test
xor
ss
mov
mov
mov
enter
and
std
pop
sub
lods
sbb
cmc
rcr
mov
mov
adcb
pop
js
je
mov
jbe
lea
gs
cli
fs
popl
inc
lea
mov
xor
fadds
bound
push
add
test
popa
mov
lods
xor
loopne
fdivrs
arpl
mov
sbb
jb
adc
mov
push
popa
icebp
xor
sarb
inc
or
add
pop
jg
lea
and
pop
lock
dec
lods
add
pop
inc
jle
xchg
enter
loopne
icebp
nopl
sbb
xor
cmp
inc
je
inc
cmp
sub
adc
orb
sbb
ret
add
call
sbb
and
add
ret
push
sub
pop
fwait
push
and
ret
adc
push
cs
lods
mov
daa
je
adc
inc
shl
adc
xorb
push
outsl
or
std
add
js
inc
es
jae
mov
fcmovb
add
add
cmp
jb
loopne
movsb
sti
inc
jge
sti
pop
pop
lea
push
inc
pop
xchg
das
je
sar
push
lea
scas
test
mov
loop
ja
mov
sbb
push
ficoml
add
dec
mov
cwtl
loope
and
bnd
or
sbb
repz
cltd
xchg
fstl
call
jl
dec
mov
aam
pop
mov
sbb
fbld
pop
inc
sbb
int
add
repz
fwait
xor
ljmp
inc
push
jb
inc
inc
add
lds
cld
dec
mov
xchg
mov
add
cmpl
jecxz
rcrl
loop
push
add
shll
dec
push
fistl
fbld
sub
jno
add
rcll
or
jbe
mov
outsb
rclb
or
xchg
add
lds
cmp
jb
pop
fisttps
add
imull
fldenv
dec
adc
xchg
into
clc
mov
or
lock
scas
push
int
mov
sbb
or
xor
shr
inc
js
pop
sbb
add
sub
add
pop
add
insl
add
cmp
add
xor
ja
sub
int3
add
aam
daa
mov
push
cmp
adc
fwait
dec
icebp
imul
add
add
jmp
add
icebp
mov
add
aam
xchg
test
mov
or
in
outsb
sti
or
outsl
pop
je
mov
pop
sub
je
add
in
ljmp
sub
cmp
jne
sti
mov
cmp
adc
ja
mov
lea
adc
mov
sbb
repz
dec
add
sub
je
dec
je
dec
stos
and
sbb
scas
iret
div
std
xchg
jmp
dec
aam
jmp
or
rcrb
or
fsubrs
in
mov
aad
pop
inc
push
dec
mov
mov
cmp
dec
lcall
or
lods
out
int
scas
sub
or
out
pop
hlt
add
sbb
inc
pusha
pop
jge
das
or
repnz
inc
mov
push
fwait
adc
or
xchg
sbb
adc
adc
xlat
test
pop
cmpsb
push
pop
inc
adc
fsubr
fstpt
cmp
in
or
sbb
inc
pop
push
fs
call
jmp
pop
movsb
test
cld
add
mov
adc
xchg
xchg
fidivl
fs
sbb
loopne
in
lock
loop
add
enter
mov
mov
pop
xchg
dec
xlat
xchg
lock
push
inc
ljmp
mov
sahf
add
je
mov
and
mov
pop
push
fcoms
xlat
lods
mov
pop
xchg
or
or
rcrb
out
add
and
test
repnz
cmpl
sbbl
ljmp
cmp
hlt
ret
add
xor
or
call
add
sub
cwtl
inc
mov
lret
out
notb
hlt
lock
and
les
aaa
pop
adc
jns
or
push
arpl
pop
sti
jbe
shll
pop
push
mov
sbb
in
xchg
add
cwtl
sub
hlt
fldcw
mov
pop
push
push
hlt
add
sub
ffreep
imul
aaa
add
adc
add
add
rcrl
test
or
roll
sub
je
iret
je
mov
in
faddl
add
jp
loopne
repnz
testb
mov
outsl
jo
sahf
lock
orl
and
cmp
popa
aaa
fistpl
jp
je
jge
pop
bnd
push
je
mov
pop
sub
adc
push
mov
mov
clc
pop
adc
and
je
xor
push
xor
pop
imul
mulb
enter
push
pop
mov
movsl
fs
les
jmp
mov
mov
sbb
inc
dec
jg
push
lcall
out
mov
mov
inc
inc
cmp
imul
xchg
adc
inc
and
icebp
jmp
jno
sub
out
jo
daa
pop
adc
and
insl
push
sbb
and
cmp
sub
cmp
mov
lret
inc
rorl
roll
sbb
mov
mov
inc
inc
mov
fbstp
fs
or
decl
out
cmp
lea
imul
mov
cld
inc
jne
pop
push
lcall
and
mov
iret
dec
rolb
sbb
mov
lock
mov
adc
push
add
pop
push
lea
cld
mov
jp
xor
xchg
mov
test
mov
mov
cmp
test
inc
test
shl
mov
mov
jmp
lea
sub
std
cld
or
lret
jo
xchg
xor
shll
lods
ret
sbb
das
hlt
nop
addb
or
or
insb
add
jle
call
stc
call
or
in
stos
ret
movsb
adc
push
push
movb
outsl
fistpll
shlb
inc
dec
insb
mov
add
mov
jle
dec
push
adc
jo
mov
push
push
aam
jo
push
clc
cmp
mov
out
pop
or
ss
mov
inc
jo
pop
adc
loop
pop
xchg
or
add
pop
test
xchg
and
popa
std
xchg
mov
xchg
stos
lock
mov
add
outsb
in
adc
push
sbb
sbb
test
leave
clc
add
and
aad
pop
daa
jb
jmp
pusha
add
adc
add
jecxz
clc
pop
add
sub
mov
pop
inc
je
mov
dec
je
add
cmp
jbe
add
outsl
call
add
lock
lret
pop
sbb
push
jle
add
or
out
call
stos
add
sub
mov
jnp
lcall
mov
inc
dec
jne
lea
adc
cmc
test
sbb
inc
dec
adc
lahf
sti
sbb
cwtl
jo
push
sbb
sub
test
int3
mov
outsl
out
js
cs
sarb
inc
mov
jl
and
lea
sub
add
pop
push
push
ja
lods
xchg
or
sbb
push
scas
cltd
inc
mov
inc
fnsave
adc
gs
fs
push
sub
imul
sub
sub
ss
push
pop
adc
mov
fwait
push
xor
inc
popl
and
fwait
das
and
insl
mov
dec
arpl
push
orb
mov
add
push
repz
mov
mov
mull
or
test
faddp
jmp
lea
in
jae
lahf
leave
sub
inc
orb
lds
lea
add
leave
pop
rep
jmp
roll
cmp
push
and
stos
jno
and
cmp
jb
mov
pop
pop
xor
pop
dec
pushf
push
icebp
xchg
lret
push
aas
or
or
mov
mov
insb
and
pop
mov
pop
and
xchg
inc
xor
loope
mov
cmp
push
push
push
js
and
and
out
mov
push
test
test
and
mov
imul
inc
push
push
sbbl
mov
and
pop
loop
loope
xor
je
pop
sub
sub
mov
inc
fnstenv
or
push
cld
cld
mov
jnp
jmp
cmp
mov
sbb
mov
out
xor
sbb
lahf
mov
push
clc
ds
jb
shrb
pop
and
push
mov
aam
mov
js
mov
xor
fisttpll
jb
and
or
je
aas
inc
pop
jecxz
cmp
out
jo
fisttpl
mov
xlat
inc
iret
int3
sub
add
inc
sbb
mov
stos
dec
jb
inc
fdivrs
push
cmpb
or
xchg
add
push
iret
fsubrp
mov
fsubrl
test
pop
ret
inc
incl
leave
mov
daa
roll
dec
in
xor
mov
mov
inc
mov
insb
pop
cmp
xor
sub
ja
fnsave
loopne
sbbb
inc
cmp
clc
jbe
sbb
inc
cmpb
push
mov
pushl
jnp
jmp
inc
or
sub
mov
clc
mov
lea
mov
inc
data16
inc
out
mov
mov
and
fstpt
push
shll
jle
mov
out
int
cmp
mov
dec
jne
mov
sub
push
mov
ljmp
mov
mov
xor
ret
push
cld
jns
stos
push
fsts
pop
sub
cli
fcoml
shl
lods
mov
in
dec
iret
inc
mov
jl
and
add
fistpl
jmp
imul
andl
shlb
push
jo
cmc
fneni(8087
loope
test
pop
jne
sbb
cs
xchg
adc
inc
push
imul
pop
cmp
lods
mov
pop
ss
mov
iret
notb
xchg
sbb
or
dec
test
sub
jne
clc
test
inc
addl
jmp
fisttpll
call
or
jae
fmull
sbb
jle
scas
mov
mov
lcall
leave
and
dec
sub
mov
jle
mov
xor
shl
and
mov
rolb
mov
push
adc
sub
mov
and
je
cmp
push
pop
inc
addl
push
scas
sbb
adc
in
mov
xchg
mov
aaa
mov
sub
xchg
lods
pop
adc
push
test
mov
jmp
add
test
xor
push
dec
adc
daa
cmp
lods
mov
aad
ret
call
push
cmp
or
dec
jne
push
aas
mov
mov
inc
fsubl
add
incl
inc
jbe
adc
add
and
dec
scas
inc
mov
mov
xor
add
rcl
jmp
andb
das
jb
jnp
and
sub
and
out
and
pop
push
add
sbb
test
adc
and
add
jb
add
mov
and
and
xor
les
test
fwait
in
mov
mov
test
fcomps
aam
mov
mov
adc
or
cmp
int
ja
adc
xchg
mov
add
xor
pop
int3
lea
mov
and
fstpt
in
and
mov
mov
imul
lcall
mov
call
imul
cmpsb
imul
fstpt
clc
insb
mov
hlt
xor
cld
adc
sbb
fldt
adc
adc
or
fildl
addr16
cld
test
mov
or
cs
neg
in
fcoml
imul
pop
imul
sub
je
ret
add
outsl
or
repz
out
add
fsubs
stos
out
sub
js
push
in
nop
daa
and
scas
insb
dec
mov
add
ret
pop
push
adc
sbb
xor
shll
xor
inc
shll
sbb
sbb
xor
adc
adc
or
and
shll
or
shll
and
adc
pushf
mov
mov
xchg
add
and
mov
mov
ret
mov
cmp
add
add
or
cmp
and
std
inc
mov
call
sbb
sahf
and
out
adc
adc
fstpl
jne
lahf
sbb
or
mov
rolb
inc
sbb
mov
sub
or
xor
pop
out
or
sbb
lcall
and
mov
mov
lds
outsl
cmp
mov
mov
inc
jae
std
pop
cmp
jne
or
imul
or
mov
or
jnp
mov
lods
or
and
cmp
in
inc
inc
fucomi
inc
mov
les
cmp
mov
rorb
dec
shr
mov
aam
pop
aaa
mov
imul
xchg
sub
aaa
jae
cld
push
sub
cmpl
push
mov
jle
fs
loopne
jecxz
outsl
cld
je
add
xor
jo
xor
dec
leave
mov
push
xlat
aas
push
leave
push
cwtl
mov
mov
xor
mov
shl
ja
lea
pop
cmpl
bound
push
cmpl
stc
maskmovq
divl
dec
int3
cmp
add
mov
jg
fiaddl
mov
in
cmp
and
mov
jo
mov
inc
jne
fiadds
cmp
aam
jns
sbb
pop
and
nop
xchg
push
cmp
in
shrb
lock
adc
jle
push
jo
mov
or
inc
xor
mov
jnp
je
xor
jmp
mov
ret
ret
push
popa
inc
or
xor
das
clc
xchg
push
jne
push
xchg
push
add
cli
and
xchg
dec
loop
inc
add
inc
mov
lods
xchg
pop
adc
adc
pop
adc
dec
cmpsb
sbb
inc
out
push
or
cli
push
insb
adc
and
scas
adc
ljmp
dec
test
jg
pop
dec
js
sub
cld
shr
mov
imul
xor
cld
push
dec
push
loopne
insl
mov
cld
sbb
sbb
sbb
mov
mov
mov
add
sbb
lods
je
cli
add
cmp
in
aas
outsb
pop
insl
sub
dec
mov
and
pop
xorb
lea
not
and
ror
out
or
andb
jmp
lea
sbb
mov
push
mov
fnstenv
mov
add
pop
adc
pushf
test
test
popa
jne
jecxz
insl
ja
mov
stos
movsl
jne
adc
sti
add
mov
add
fidivs
fiadds
xor
mov
cmp
addr16
push
jno
and
cmp
mov
out
not
and
mov
scas
and
sbb
popf
outsl
ss
sbb
aas
inc
lret
flds
pop
scas
dec
fisttpl
add
pop
mov
sub
fs
xchg
push
push
int3
insl
xor
push
sub
mov
pop
add
sub
dec
pusha
mov
pop
ret
aaa
adc
dec
paddd
inc
mov
jae
cmpb
mov
dec
push
xor
mov
bound
pop
inc
cmpsl
or
jmp
and
push
xor
adc
arpl
mov
ljmp
enter
pop
test
std
push
lret
inc
aam
add
jecxz
scas
dec
ret
divb
sbb
shl
add
push
pusha
mov
mov
pop
xor
lahf
cmp
push
mov
sbb
movsb
mov
std
flds
or
cmpb
xchg
jmp
add
adc
or
mov
jo
pop
adc
adc
push
lahf
leave
pop
in
mov
sub
push
lea
cmp
pop
adc
dec
mov
inc
sub
jmp
inc
insl
or
mov
and
mov
icebp
sbb
xor
mov
push
inc
cmp
mov
imul
aaa
push
jmp
in
jne
jmp
cmpl
je
xor
xchg
add
push
xor
mov
decl
call
xchg
push
sbb
aas
mov
pop
in
pushl
in
jmp
orl
and
mov
std
ljmp
inc
stos
push
mov
cmp
adc
ss
mov
rolb
movsb
pop
dec
stc
mov
imul
testb
std
inc
clc
pop
mov
add
dec
jne
sbbb
iret
adc
jns
push
mov
aaa
orb
out
ja
loop
push
or
inc
adc
dec
push
or
lods
orl
jge
jmp
adc
out
faddp
inc
cld
lock
push
add
sub
jmp
add
mov
jo
add
dec
call
mov
fs
cmp
add
inc
push
mov
pop
mov
test
test
dec
inc
jne
or
sub
js
pusha
nop
ljmp
cmp
leave
or
lods
or
inc
or
push
xlat
sub
outsb
test
shr
mov
cld
fidivrl
lods
cmp
dec
cmp
lods
mov
adc
insb
shr
xchg
jle
sti
inc
mov
fxch
cmp
test
jne
rcrl
test
jbe
dec
pop
cmp
inc
pop
mov
pop
inc
cmp
arpl
xchg
lods
clc
faddl
nop
es
xlat
mov
mov
loopne
fists
dec
or
or
jg
jns
push
jnp
push
nop
sub
add
scas
jbe
xchg
movsl
test
dec
sar
dec
cmp
pusha
stc
sub
inc
addr16
mov
mov
pop
xchg
lods
lods
add
dec
pop
cmpsb
imul
pop
xchg
pop
sbb
iret
je
pop
imul
adc
and
cmp
mov
push
jecxz
insl
pop
rcll
mov
xor
jae
inc
pop
pop
frndint
fistl
mov
scas
jo
clc
cmp
pop
popf
outsb
add
das
inc
sub
sbb
mov
and
pop
xor
test
cmp
xchg
iret
cmp
adc
pop
testb
sbb
cld
sbb
dec
dec
dec
lret
loopne
ss
outsl
push
dec
push
push
insb
push
mov
js
ja
ja
dec
imul
inc
je
add
adc
xchg
mov
xor
mov
jmp
dec
add
mov
incb
packuswb
sbb
into
mov
push
lods
popf
setns
push
inc
adc
fs
inc
les
and
pop
fidivs
dec
xor
pop
add
adc
lock
dec
xchg
jge
or
shr
cmp
or
je
lret
push
mov
pop
icebp
fldpi
imul
push
or
and
or
jne
ret
push
fdivrs
fdivr
testb
call
sbb
jnp
daa
fnstenv
jmp
jnp
add
and
xor
leave
sbb
lock
aam
cltd
or
inc
xchg
sbbl
pop
jmp
sarb
mov
mov
or
outsl
je
ret
fmull
dec
or
cmp
iret
jne
mov
dec
pop
cmp
jecxz
cmpsl
push
cmp
mov
cmpsb
jmp
imul
dec
inc
pusha
and
mov
add
mov
leave
inc
test
inc
pop
mov
and
or
icebp
icebp
pushf
mov
jle
dec
das
sbb
setne
dec
pop
cmp
dec
dec
daa
jge
iret
es
inc
sti
fwait
arpl
jno
in
and
mov
xchg
cltd
faddp
repnz
xor
repnz
jmp
cmp
mov
pushf
mov
xlat
and
jne
and
and
pop
outsb
mov
clc
addr16
jp
sbb
into
mov
jp
daa
in
xor
xor
daa
cmp
or
and
shrl
or
popa
js
out
or
jnp
push
xor
cs
xor
or
stos
mov
push
mov
push
into
rcrb
sbb
mov
repnz
out
push
sub
fisttpl
andb
jns
lds
icebp
jne
cmp
in
aam
or
leave
fdivl
lea
loop
js
add
ret
cmp
add
sbb
icebp
xor
sub
sti
sbb
push
in
xchg
sbb
cmp
lea
and
adc
mov
xor
out
adc
inc
xor
fcmovbe
pop
push
lea
jae
push
cmp
jmp
add
nop
popa
out
mov
mov
mov
push
std
sub
mov
mov
sbb
pusha
nop
jmp
lahf
push
out
add
addr16
add
fsubl
xchg
int
add
adc
pop
jp
shll
mov
xor
leave
xchg
in
pop
dec
adc
pushl
add
sub
lret
push
test
push
mov
push
shl
call
pop
js
fsubs
sub
cltd
push
mov
sbb
sub
aaa
sbb
jle
ds
push
and
mov
testb
gs
push
push
adc
jbe
pusha
xchg
mov
icebp
addb
push
adc
sub
mov
and
push
or
and
jg
call
leave
jmp
mov
dec
inc
ljmp
pop
adc
insl
int3
xchg
ja
or
fsubs
dec
mov
gs
xchg
push
cmp
sbb
xchg
aaa
cmpsb
clc
pop
clc
add
xor
fldenv
je
sub
mov
stos
add
add
xor
stc
cs
roll
lret
ja
inc
cmp
rolb
into
ljmp
push
sub
jne
mov
fisttps
xchg
sarb
shlb
push
xchg
in
sbb
sbb
push
data16
mov
add
push
gs
in
test
xchg
xchg
cmp
xchg
pop
inc
shrb
inc
dec
xchg
movsb
rclb
add
xchg
js
add
mov
mov
sbb
or
mov
push
jns
adc
sbb
mov
xor
icebp
mov
arpl
aad
imul
pusha
and
xchg
dec
xor
mov
fdivrs
adc
dec
cmp
sub
cmp
dec
roll
adc
rorl
mov
int
ja
cmp
stos
pop
or
xchg
test
jne
fiaddl
adc
fildl
lods
or
adc
cwtl
pop
pop
bound
or
lds
sbb
imul
push
pop
div
pop
jb
mov
aas
or
push
push
fmuls
ss
mov
push
mov
dec
sbb
adc
dec
fistpl
push
fsubrs
jg
insb
hlt
push
into
insl
push
pusha
cmp
jno
add
dec
mov
sbbb
cld
xchg
and
icebp
bound
shll
lret
testl
sbb
insb
fcmovne
in
dec
or
sbb
pushf
fnsave
stos
inc
adc
jle
mov
repnz
push
hlt
cmp
je
add
into
movl
ljmp
inc
xchg
mov
or
push
arpl
and
lods
push
jae
mov
add
push
mov
aad
mov
pop
pop
add
fmull
or
mov
mov
ljmp
fsubrl
data16
adc
mov
and
cmp
insb
xchg
sub
push
pushaw
ja
dec
mov
push
aas
xchg
mov
je
aam
clc
loope
sti
jmp
clc
inc
negb
cmp
jnp
ja
in
cld
cmp
je
movl
xbegin
adc
in
mov
or
or
mov
add
and
sbb
pop
push
and
in
mov
lock
neg
sbb
and
sub
insl
inc
js
sub
das
shll
dec
mov
fs
out
sub
sbb
stos
dec
sbb
lea
lock
xor
mov
adc
popa
lret
faddp
fisubs
and
imul
and
jecxz
pop
call
jle
jne
pop
out
jl
jmp
loope
add
in
push
inc
cli
sub
xor
push
pop
mov
imul
cmp
call
xchg
mov
and
or
hlt
in
out
stos
add
jmp
jg
xor
cmp
test
and
pop
aas
inc
push
fnstsw
pop
mov
rcr
adc
test
push
loope
jne
sbb
lret
cltd
mov
lock
inc
cmp
sahf
sti
rol
push
rclb
push
arpl
pop
inc
and
mov
adc
xchg
sub
sub
push
in
lret
or
and
inc
rcrb
mov
and
test
push
ljmp
and
and
cmp
orb
inc
adc
jg
xchg
add
cmp
ja
cmp
cmp
mov
sub
xchg
jb
out
sbb
cmp
insl
in
cs
jmp
pop
push
mov
or
lret
xchg
sbbl
sbb
mov
or
jae
call
mov
pop
pop
je
dec
faddl
fiaddl
test
mov
mov
push
xor
pop
test
add
pop
test
lret
jp
iret
inc
imul
pop
or
xchg
jne
xor
ret
scas
push
jb
xchg
cld
icebp
mov
stos
lods
inc
test
mov
out
mov
mov
add
and
sbb
push
or
dec
adc
inc
cltd
mov
or
adc
push
imul
loope
dec
cmp
dec
movntq
jb
test
inc
rcll
inc
jl
cs
sbb
ds
and
sbb
call
setl
pop
testb
in
fwait
add
mov
adc
hlt
pushf
or
push
jge
leave
incl
mov
sub
sahf
mov
mov
mov
add
hlt
xor
test
pop
mov
int
add
in
dec
lods
sub
rorb
xchg
imul
ret
jne
xchg
push
jp
cmp
or
ret
add
loopne
adc
loope
or
ds
xor
sub
movsb
push
lret
xor
push
adc
push
or
and
mov
addb
stos
sub
inc
xor
rcrb
shrb
dec
pop
push
aam
pop
cmp
ret
int3
andl
stos
jmp
mov
push
push
sub
mov
xor
pop
lea
push
adc
adc
jae
mov
fcmovnbe
mov
leave
lret
mov
sti
mov
lea
push
add
adc
and
jg
add
mov
push
jg
outsl
inc
add
push
insb
jbe
data16
jle
sbb
jg
jg
aas
aad
fistpll
jo
mov
lea
cs
mov
movsb
xchg
add
sub
push
ret
cltd
imul
fildll
push
cltd
lock
dec
cli
sub
dec
push
mov
push
dec
or
cmp
pop
xchg
call
sub
ja
adc
insb
int3
call
jae
outsl
mov
rcrl
mov
add
sub
loope
xchg
jb
gs
lock
movsb
sub
xor
inc
rcll
in
fidivrl
dec
add
cmp
add
sub
push
push
popa
pushf
push
dec
inc
mov
ss
ds
fstpl
mov
loop
fimuls
arpl
inc
negl
mov
adc
pop
movsb
push
popa
push
xor
pop
or
enter
adc
pusha
daa
sbbl
push
and
and
sub
or
enter
cmp
or
and
inc
adc
xor
and
dec
ss
push
pop
or
orl
and
jo
or
enter
fldenv
and
in
dec
mov
cs
pushf
mov
movsb
test
push
pop
sbb
push
fisttps
cmp
lret
xchg
les
cs
insb
inc
movb
adc
inc
inc
push
adc
sbb
push
fs
mov
fs
dec
dec
dec
push
sbb
cs
mov
cld
inc
or
add
jmp
xor
xor
add
sbb
out
mov
mov
add
dec
jle
fmuls
mov
dec
or
lea
add
enter
repz
add
sbb
or
nop
add
add
and
sarb
add
scas
mov
sti
add
loopne
ror
rolb
jmp
hlt
add
jb
mov
cmp
push
mov
push
push
push
movsb
and
jmp
mov
fmuls
aas
nop
inc
and
push
mov
bound
pop
lcall
jl
xchg
push
and
or
and
lcall
enter
add
aas
fs
fwait
mov
push
mov
fwait
fwait
sbb
mov
xorb
je
push
adc
jae
xor
dec
and
cld
fld
fidivrl
push
insb
pop
add
lea
loop
push
jl
test
inc
pushl
mov
mov
pusha
push
or
testb
add
or
mov
out
or
test
mov
mov
mov
fldt
push
je
cmp
sbb
add
insb
push
sbb
or
adc
js
push
push
push
dec
jle
adc
sbbb
xor
and
xor
call
das
lret
cs
mov
and
and
scas
push
pop
popf
sbb
push
cs
adc
ret
aad
push
es
sbb
pop
cltd
xchg
jg
lea
mov
outsl
jg
je
cmpl
push
cmp
cmc
mov
or
mov
sub
sbb
mov
or
mov
fadds
mov
jg
mov
sbbl
jge
or
push
or
cmp
mov
mov
or
or
inc
cltd
imul
cli
pop
pop
pop
pop
pop
loope
xor
data16
add
or
inc
outsl
test
hlt
out
shr
adc
push
inc
adc
xor
jns
inc
push
pusha
jo
push
add
xor
jne
adc
test
inc
shlb
subb
je
sbb
xchg
out
das
jb
inc
inc
pop
test
mov
add
sub
out
push
clc
pop
rep
jmp
inc
pop
xchg
divl
pop
lock
call
lock
pop
sti
sub
push
mov
xchg
sbb
mov
inc
lea
adc
inc
lea
out
ja
pop
mov
dec
mov
jmp
adc
pop
or
test
or
test
stos
adc
xorl
movb
pop
jmp
xor
or
int
mov
outsb
inc
dec
cmpsl
jo
add
xlat
adc
cld
push
push
pushf
lea
push
jp
es
push
es
test
inc
hlt
mov
cmpsb
or
adcb
mov
inc
or
inc
push
shlb
ds
or
sbb
rcrl
or
mov
add
fs
adc
mov
push
cmp
push
pop
pop
jne
sub
jg
leave
or
gs
push
cld
aad
pop
mov
inc
sbb
push
sbb
inc
lock
rcll
ljmp
dec
xor
int3
mov
and
add
fcompl
addb
ret
int3
arpl
sbb
test
arpl
je
cmpl
dec
sbb
inc
inc
rorb
loop
push
or
pop
movl
sbb
arpl
pop
inc
cmp
jle
andl
inc
push
lea
mov
je
sub
push
movsl
or
jnp
call
out
pop
fistps
inc
jno
nop
in
in
push
sub
xlat
fsubs
ret
mov
or
jg
mov
sbb
ficompl
aaa
mov
gs
pusha
das
loopne
out
mov
dec
aam
pop
jne
jbe
xchg
or
dec
je
push
sub
mov
sub
push
and
push
adc
sub
je
add
loop
jnp
mov
sahf
popf
and
inc
mov
data16
lods
mov
in
fmuls
sub
jmp
pop
ljmp
cmp
add
out
mov
in
dec
in
test
dec
sub
in
cld
rcrb
jp
pop
pushf
pop
mov
call
pop
sub
outsl
sub
shll
popf
xlat
mov
push
add
imul
adc
daa
cmpb
adc
sbb
jae
pop
icebp
sbb
stos
sbb
cmp
sbb
sbb
or
adc
loopne
xlat
and
nop
sbb
push
add
shll
sub
add
lea
enter
stos
movsl
out
ds
jb
mov
xchg
pop
push
cmp
repz
jmp
cmp
sahf
or
ljmp
jecxz
mov
inc
sub
inc
add
or
push
shl
xchg
adc
mov
add
and
pop
sub
push
mov
and
insb
in
rcr
mov
pop
add
push
loop
or
out
cwtl
push
adc
xchg
out
sbb
popa
mov
xor
xor
and
pop
cli
sti
sub
add
add
adc
push
mov
mov
inc
fcomps
jg
xor
and
pop
cmp
or
mov
adc
and
adc
ss
sbb
adc
jnp,pn
add
add
push
or
sti
bound
addb
or
push
test
pusha
iret
inc
inc
sbb
outsl
sub
xor
sbb
add
orl
sub
cmp
push
ja
pop
adc
pop
leave
cmp
jae
mov
mov
mov
dec
loopne
and
add
and
out
sbb
and
lods
mov
mov
pop
sbbb
inc
imul
add
ja
mov
jne
test
ds
jbe
mov
mov
or
sub
jne
jbe
popf
notb
pushf
and
test
shlb
push
dec
mov
stos
aad
loopne
add
jns
sarl
cmp
inc
add
popa
pop
and
inc
mov
or
xchg
xor
cmp
xor
sub
jbe
cmp
push
jne
sbb
jno
fcomps
adc
push
js
addr16
push
fisttpll
leave
je
sub
jle
outsl
fbstp
and
es
gs
mov
and
cmp
jb
cmp
push
jge
std
ja
add
cmp
or
cmp
jne
shrl
insb
lods
inc
rcll
hlt
mov
ffreep
jb
neg
pop
sub
test
mov
punpckhdq
inc
dec
rorb
mov
xchg
jnp
mov
mull
push
mov
add
jmp
or
and
fidivl
fcmovnbe
ljmp
repz
and
jb
cmp
ja
fstpl
out
sub
dec
sub
sbb
adc
fisttpl
or
lods
or
or
fisubl
ficompl
mov
rorb
addr16
int
stos
pop
cld
pop
fs
mov
in
leave
mul
and
cmpsb
jb
outsb
mov
lahf
or
add
pop
ds
inc
pushl
mov
movb
push
cmp
mov
daa
jecxz
mov
ret
lret
je
test
cmp
mov
push
add
jecxz
push
or
loopne
xlat
xor
lret
sub
ficoms
loop
xor
pop
rclb
and
clc
mov
repz
dec
and
adc
inc
cld
test
push
out
mov
push
add
les
out
xor
mov
adc
xchg
repnz
inc
rolb
xchg
mov
jae
lcall
and
sbb
xchg
xchg
xchg
sbb
or
inc
ds
or
popa
inc
pop
pop
inc
inc
movb
dec
push
push
leave
repz
jl
add
pusha
add
dec
sahf
fisttps
pusha
adc
add
inc
xor
addr16
inc
addb
sbb
lret
add
pop
dec
sbbl
incb
fdivrp
incl
jb
js
je
jb
arpl
jae
insl
jae
gs
sti
ljmp
jb
outsb
je
insl
and
sbb
mov
dec
dec
push
push
adc
add
dec
inc
das
imul
add
inc
adc
push
ss
loop
xor
xor
inc
outsb
and
jo
imul
in
fisttps
push
popa
fs
popa
pop
je
gs
jo
and
sbb
fisubrl
pop
push
xor
jg
jb
jb
and
xchg
cwtl
arpl
or
gs
mov
ficomps
adc
popa
xor
mov
cmp
pop
jae
push
sbb
mov
mov
mov
insl
and
addr16
lods
lahf
xor
into
insl
fnsave
dec
fmuls
leavew
insl
mov
imul
and
mov
jmp
dec
and
jbe
fs
imul
cmpb
das
adc
add
out
cmp
bound
mov
outsl
cmp
and
sub
gs
outsb
pop
jnp
lods
ret
outsl
pop
push
mov
sbb
insb
insb
sub
mov
sar
daa
sub
arpl
sahf
sub
mov
popa
xchg
outsb
push
inc
outsl
arpl
mov
cld
add
dec
dec
popa
imul
divl
outsb
outsl
data16
pop
pop
fcomps
gs
dec
or
mov
das
or
gs
push
push
outsl
or
cmp
into
popa
sub
setnp
sbb
mov
dec
lahf
pusha
fs
xor
fcmovb
fsubr
cli
popa
bound
outsl
dec
lods
daa
aaa
jecxz
in
nop
shlb
aaa
ss
and
xor
ss
jbe
xorb
sub
mov
mov
lcall
pop
push
fsubr
test
cmp
outsl
jo
mov
fmull
jmp
jbe
fisubl
add
inc
jo
stc
push
rol
xor
stos
and
test
jbe
push
pop
xchg
mov
mov
fs
cs
imul
mov
jmp
in
adc
loopne
insb
push
out
nop
ds
ficompl
inc
ja
repnz
nop
pop
and
xor
mov
mov
xchg
gs
sub
xchg
addr16
jae
pop
iret
fs
xor
je
pop
das
lea
or
dec
mov
test
outsb
adc
sub
cmovl
pop
test
add
cmp
outsl
fwait
xor
insl
fbld
daa
imul
fistpl
push
jae
xor
and
sbb
cmp
add
inc
outsb
mov
or
stc
jg
inc
push
dec
inc
dec
xor
cs
dec
dec
gs
mov
jae
inc
insb
jae
add
push
gs
pushf
jne
jge
add
inc
inc
insb
sbb
dec
rcrl
and
inc
jb
jecxz
imul
out
inc
in
push
jo
pop
mov
daa
imul
jae
xor
pop
add
push
mov
test
pop
push
jae
dec
push
dec
mov
lds
pop
jbe
gs
std
scas
xor
popa
addr16
outsl
js
jg
mov
in
add
add
push
pop
or
or
or
decl
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
mov
call
aaa
cmp
cmp
cmp
ds
inc
inc
loop
incl
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
test
dec
sbb
pop
pop
pop
pop
pop
pop
inc
pusha
nop
arpl
pushl
sbb
imul
jno
test
jbe
js
jp
dec
add
jl
jle
xchg
and
xor
xchg
add
and
xor
test
orb
add
and
adc
add
and
mov
push
add
add
mov
add
fldcw
sbb
cmp
lcall
push
add
adc
inc
fadds
add
out
notl
mov
adc
incl
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
mov
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
jmp
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
inc
stos
lock
xchg
and
xchg
stos
adc
add
or
pop
jg
push
call
insl
movsl
jno
scas
mov
and
or
add
das
das
jns
push
dec
inc
dec
push
xor
mov
or
jbe
in
sbb
je
inc
lods
scas
push
inc
movsl
cmp
xchg
jp
pop
outsb
gs
inc
imul
jmp
push
fisubrs
xor
or
out
mov
dec
inc
inc
aaa
fcomp
jnp
jns
aas
cmp
and
imul
fnstenv
sbb
or
adc
push
hlt
or
push
jne
dec
sarb
push
jne
inc
cmp
push
loopne
out
das
daa
and
add
int
adc
and
iret
cmp
cs
jae
cmp
mov
ret
add
repz
orb
jecxz
jb
xor
or
mov
adc
leave
jl
pop
add
mov
xchg
add
gs
push
jle
fcoms
fadds
sub
add
pop
fstl
push
mov
cmp
add
leave
add
aas
add
and
inc
popf
nop
int3
sbb
mov
sub
and
xchg
aas
inc
pop
fs
sub
pop
xor
and
in
inc
mov
mov
cmp
mov
or
pop
adc
add
cmpsl
lret
or
xor
sub
push
jae
bound
aaa
bnd
in
xor
data16
pop
mov
mov
xchg
daa
dec
push
gs
adc
jo
inc
sbb
fs
xchg
daa
dec
sahf
lods
sbb
push
push
jns
enter
enter
bound
inc
popa
clc
js
jns
jp
cmp
enter
mov
sbb
or
nop
inc
lcall
add
nop
xchg
add
nop
add
mov
and
add
xchg
add
adc
pop
pop
xor
popa
mov
mov
xor
add
add
pop
rcl
xor
add
sbb
dec
aaa
dec
or
or
das
and
push
push
sbb
jnp
pop
xorps
adc
or
adc
and
cmovno
xor
pusha
orl
pop
je
or
pop
insl
stos
and
sbb
pusha
orl
pop
sbbb
or
enter
xchg
sub
mov
fsubs
mov
into
pop
xlat
rcll
or
dec
xorb
cltd
inc
adc
and
inc
mov
push
int3
pop
sub
sub
insb
jmp
arpl
add
call
add
add
fld
mov
jns
and
cmpsb
filds
cld
cld
in
movsl
sbbl
adc
das
shll
pop
inc
enter
mov
inc
adc
pop
iret
mov
in
call
out
repz
push
add
pop
pop
fisubrl
xor
jb
sub
fcomp
loopne
cmp
jle
insb
or
push
enter
jbe
pop
mov
mov
add
or
sub
mov
add
jo
inc
mov
nop
das
pop
jmp
dec
mov
mov
xor
imul
insb
or
cmp
xor
sub
xor
shrl
and
sbb
cmpsb
imul
cmpsb
imul
scas
imul
mov
imul
cmpsb
sbb
pop
cmpsb
imul
test
adc
cs
cmpsb
mov
xor
mov
cmp
sahf
cmp
xorb
icebp
xchg
push
sbb
pop
mov
ffreep
fnstenv
adc
xor
xlat
sbb
cmp
pop
js
pop
ss
shll
xor
fldenv
cmp
pop
ja
dec
shll
mov
repnz
and
cmpsb
pop
das
dec
insb
add
xchg
inc
test
push
in
push
cwtl
arpl
inc
mov
pop
inc
jno
lds
dec
gs
mov
js
sbb
les
sub
addps
jo
pop
out
adc
push
adc
imul
cmp
ds
jnp
jo
inc
inc
imul
jb
fstpt
out
cmovge
jne
dec
xor
in
or
icebp
or
jb
mov
mov
fs
push
jl
das
sbb
popa
insl
cmp
fs
or
mov
das
push
cmpsb
mov
jne
fs
shll
dec
jno
pop
jns
jno
mov
push
cld
mov
pop
daa
mov
fnstsw
inc
inc
or
inc
lds
push
push
mov
ret
push
test
push
cwtl
cwtl
fs
pop
imul
insl
or
jle
pushf
jge
call
sbb
fs
nop
in
aaa
inc
gs
out
insb
imul
jns
inc
das
in
push
fmulp
and
and
xorl
roll
lock
divb
lret
push
jns
jnp
mov
jae
or
outsl
insl
cmp
jecxz
mov
push
ret
xchg
sub
adc
push
xor
jae
ficoml
or
jae
outsl
cld
stos
jo
sub
inc
push
push
fisubs
inc
or
dec
inc
dec
or
test
inc
xchg
nop
test
or
jle
and
pusha
pop
subb
je
test
jae
in
imul
xor
push
jnp
dec
inc
sarb
lds
sub
dec
or
sti
cwtl
or
nopl
inc
lcall
mov
adc
and
jbe
xchg
data16
bound
and
inc
add
or
jbe
int3
pop
or
dec
daa
jbe
inc
jecxz
outsb
cmp
push
inc
movsl
add
push
fldt
or
jae
std
push
and
sbb
mov
js
pop
loope
fimuls
lock
in
lret
sbb
inc
xor
pop
imul
inc
jne
outsb
and
cmp
lcall
outsb
jae
lds
imul
icebp
test
imul
jb
dec
gs
fcmovu
mov
je
dec
jno
repnz
imul
push
and
dec
fnstenv
data16
imul
inc
insb
addr16
jne
pop
mov
add
mov
decl
push
or
adc
and
push
mov
or
pop
mov
cmp
or
adc
add
or
or
or
or
cmp
nopl
in
sbb
and
or
sub
and
cmp
sbb
lods
or
or
adc
adc
lock
add
or
add
or
or
ljmp
adc
pop
adc
push
xor
inc
or
sbb
adc
and
sub
mov
or
adc
and
insb
push
or
orb
in
fwait
imul
add
or
sub
sbb
and
imul
inc
push
push
pop
push
pop
add
pop
or
pop
mov
add
or
push
popf
add
cmp
sbb
pop
rorb
sbb
and
into
shll
or
or
sub
mov
adc
xchg
and
popf
or
sub
and
or
lods
jge
sub
push
adc
imul
push
inc
add
jl
call
sub
or
mov
sbb
add
daa
adc
vmwrite
idivb
pop
add
icebp
add
pop
lock
cmp
lock
cld
push
or
xor
and
xor
bound
jne
adc
mov
sbb
or
push
adc
adc
iret
xor
cmp
inc
xor
add
sub
push
pop
add
dec
push
dec
enter
or
insb
fwait
pop
clc
mov
inc
inc
fs
adc
sbb
or
lock
add
adc
or
insl
shll
cmp
mov
mov
dec
pop
sbb
cwtl
add
mov
inc
lock
mov
or
xor
sub
cmp
pop
clc
dec
movups
pushl
xor
test
sbb
or
pushl
cltd
jne
adc
and
push
inc
pop
adc
cmp
push
push
and
xor
or
jge
lock
fcomps
arpl
fxch
push
push
add
jbe
sbb
mov
sar
jg
adc
or
sbb
lock
add
adc
lock
adc
notl
lock
push
add
xor
pop
lock
or
pushf
pop
clc
add
sbb
and
sbb
or
pop
pusha
mov
daa
add
insb
add
lock
lock
add
and
adc
and
add
sub
mov
add
dec
add
dec
das
push
or
dec
loopne
or
or
add
rcr
mov
or
lcall
add
add
jnp
testl
add
add
and
fs
mov
add
push
rolb
and
xlat
adc
add
fildl
pop
xlat
jmp
and
mov
jb
push
enter
xor
push
pop
inc
add
lcall
sbb
insl
dec
rorb
arpl
push
repz
das
dec
push
sbb
std
or
cwtl
ds
xchg
add
out
enter
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
