add
int3
fnsave
outsb
gs
imul
xor
lcall
dec
out
ret
es
cmp
sbb
in
rcll
jbe
mov
imul
pop
mov
push
in
hlt
orb
xchg
lods
pop
sub
sbb
jle
add
mov
std
xor
scas
mov
int
sar
stc
sbb
addl
sarb
cmpsl
sti
out
aam
outsl
cmc
mov
and
insl
fcmovnb
loop
lcall
movsl
sahf
daa
cmp
jno
pop
movsb
sub
jno
sbb
fadds
mov
cwtl
xor
mov
mov
sar
lods
test
cmp
mov
cmpsl
add
xor
fmuls
or
sub
ja,pt
lret
int
nop
push
jno
in
cmc
loopne
cmp
push
fs
xchg
imul
xlat
mov
lds
and
xchg
ds
pop
adc
icebp
pop
push
lods
mov
jne
fs
repz
push
test
jle
sbb
fs
add
jmp
push
push
mov
pop
sbb
push
inc
or
mov
stc
into
mov
xchg
sub
add
outsl
or
pop
ret
push
sub
sbb
lahf
repnz
add
rcll
shll
pop
mov
scas
loop
mov
popa
aaa
xor
scas
ja
xorb
xor
xchg
jmp
xor
shr
jb
jne
inc
xchg
push
inc
xor
ret
jb
jmp
dec
pop
mov
jnp
data16
mov
mov
add
mov
rorb
cmp
push
cli
ret
pop
inc
dec
ds
jne
ds
ljmp
jb
push
rorb
xlat
int
and
push
fdiv
xorb
push
add
pop
stos
xor
mov
cltd
jecxz
adc
scas
jnp
gs
popa
inc
scas
add
sub
js
subb
fbstp
push
pop
aad
popa
pop
adc
jns
xlat
movsb
stos
insb
mov
mov
pop
pop
in
inc
sti
adc
xchg
dec
xchg
stc
lahf
shr
inc
int
jns
xchg
jo
adc
lahf
mov
mov
sub
jmp
cli
xchg
stos
cmp
mov
push
adc
cs
fsubrl
jmp
add
testb
stc
mov
nop
push
cmp
sub
aam
inc
sub
sbb
sbb
popf
repnz
sub
push
xlat
popl
or
jo
dec
pop
bound
mov
mov
cs
dec
or
adc
cmp
inc
mulb
pop
stos
and
call
xorl
mov
dec
sbb
jne
pop
cmpsl
mov
pop
int
mov
sub
jge
jne
jmp
loop
adc
popf
pop
mov
aad
push
ret
inc
add
pop
les
ret
std
insl
jne
notb
shrl
sbb
mov
mov
ret
cmp
sbb
push
adc
imul
pop
ds
jle
pop
mov
sbbl
iret
sbb
or
aaa
sbb
jp
out
mul
lret
pop
push
imul
or
jmp
mov
dec
inc
xrelease
inc
test
shr
loope
test
daa
add
adc
std
popa
dec
cli
test
xchg
xchg
fimuls
lcall
or
adc
xlat
enter
jl
xchg
gs
and
cmp
gs
loopne
stc
add
add
scas
aaa
insb
mov
int
addr16
and
dec
and
dec
pop
icebp
jge
push
mov
dec
fcomip
push
je
cmp
movsl
xchg
int3
cmp
and
xchg
fcomps
inc
or
popa
jg
xor
jmp
in
lret
adc
cld
inc
jns
sbb
ja
fisubrs
mov
jns
outsb
scas
add
sub
dec
lret
lcall
xor
or
add
mov
cs
insb
adc
ds
or
out
rcll
ret
aam
out
and
inc
ljmp
aad
call
aad
ss
cmp
pop
mov
push
xchg
push
mov
call
jl
pop
aaa
divb
jb
adc
inc
cmovge
jg
cli
iret
fwait
leave
int3
imul
xchg
popa
aas
sbb
cwtl
out
add
jae
inc
sub
insl
mov
jnp
dec
popa
sbb
add
fsubrl
cmp
mov
in
fists
cli
das
add
lods
pop
aam
arpl
jge
arpl
in
cmp
push
lods
push
sub
mov
dec
jns
jmp
or
dec
sahf
push
xchg
pop
aad
shlb
es
pop
sub
int3
xor
cmp
mov
daa
and
xchg
pushf
mov
fildl
cmpsl
daa
out
jae
bound
shlb
imul
jb
rorb
add
cld
out
jae
rclb
mov
inc
insb
cmc
push
mov
mov
fiadds
xchg
xchg
xor
iret
jne
mov
leave
dec
movsl
enter
sub
inc
sbb
loopne
mov
xor
sub
pop
in
cltd
gs
lcall
pusha
test
mov
mov
xchg
push
cmpsb
push
fs
test
lods
adc
mov
sub
mov
dec
lret
mov
mov
lods
inc
dec
xor
xchg
dec
sub
mov
and
mov
add
int
cmp
pop
int3
mov
daa
loop
mov
or
jo
cmc
and
mov
cmpsb
fs
test
or
movsb
imul
add
sub
jnp
cmp
sbb
sub
and
ret
aam
and
loope
imul
lret
ja
mov
mov
adc
and
inc
dec
test
mov
dec
xor
jo
repnz
pop
test
ljmp
mov
loope
movsw
cmp
sbb
mov
cld
mov
add
and
cmp
jne
cltd
imul
and
lcall
mov
movsb
sub
pop
pop
mov
xchg
jnp
int
jl
div
loope
push
cmp
add
mov
xor
cmp
int3
pop
and
jbe
sbb
pop
and
mov
mov
or
push
xchg
addr16
mov
inc
pop
mov
cli
out
xor
pop
cmpsb
loopne
sbb
das
ss
dec
push
lcall
leave
cli
mov
leave
sub
or
pushf
std
rclb
in
stos
and
pusha
xchg
int3
cmp
and
fnstenv
cli
sbb
fwait
jecxz
mov
adc
adcl
iret
sub
rcrb
cli
loopne
mov
or
cmp
mov
vaddsd
fwait
loop
imul
loop
adc
mov
bound
sub
xchg
in
test
mov
push
outsb
pushf
lret
or
add
stc
shrl
pushl
push
sti
pop
andb
outsl
sub
fnstenv
inc
push
push
mulb
sub
ret
adc
mov
daa
les
jnp
imul
jnp
mov
clc
jp
and
add
mov
lea
xchg
ja
push
add
pop
mov
imul
test
cmp
aas
lea
mov
or
cmp
out
lret
inc
mov
xor
enter
sub
in
and
mov
mov
or
pop
aam
xchg
js
push
sub
xchg
sahf
xor
jl
add
adc
repz
dec
xchg
loopne
maxps
ljmp
aad
adc
insb
lret
dec
xchg
aad
mov
int
mov
call
inc
mov
push
es
push
inc
jl
dec
mov
mov
cmp
adc
shr
push
loopne
int3
pop
or
cmp
jo
clc
cmpl
xchg
bnd
pop
mov
jns
aam
lahf
sub
popa
cmc
sub
fdiv
xor
out
cmpsl
push
shr
xor
dec
jb
ret
cmp
jp
dec
enter
imull
sub
jge
or
stc
cwtl
pop
and
lods
dec
nop
xchg
sbb
fldl
mov
xchg
pop
mov
movsl
sbb
out
mov
pop
int3
fldln2
inc
cltd
stos
insb
arpl
fmull
push
repz
dec
mov
or
out
lock
dec
jle
rolb
fwait
dec
scas
and
popf
dec
jne
mov
pop
repz
enter
lock
iret
jl
mov
mov
jno
mov
and
bound
sbb
mov
xchg
ret
adc
fdivrp
sub
push
imul
aad
pop
sub
jae
xchg
and
fucomi
inc
std
mov
aaa
std
cmpsb
jnp
mov
testl
pop
arpl
and
or
pop
jle
adc
mov
out
es
and
jmp
pop
lods
scas
popa
repnz
jno
cvttps2pi
cvtpi2ps
lods
fimuls
adc
add
lret
negb
addb
pop
dec
cmp
xlat
mov
outsl
jae
into
std
repnz
or
pusha
mov
adc
push
sub
imul
and
cmpsl
mov
popa
out
cmp
divb
mov
insl
aad
outsb
mov
adc
cmp
jecxz
adc
das
fistpll
pusha
aaa
jecxz
fisubrl
pusha
sbb
pop
or
dec
adc
sahf
push
xchg
adc
ss
mov
dec
push
and
mov
lods
sti
xchg
out
mov
inc
cwtl
mov
pop
jmp
cld
mov
idiv
popf
push
inc
into
pop
mov
sub
leave
xchg
shr
mov
dec
inc
mov
or
and
into
popf
sbb
jmp
adc
xlat
inc
movsl
cmp
mov
mov
or
stc
cmp
mov
mov
add
aas
test
mov
adc
jns
clc
jecxz
xchg
jae
add
dec
adc
lea
add
sbb
push
xorl
inc
ja
shrb
ljmp
add
sub
in
lds
cli
xchg
sub
inc
mov
xor
xchg
outsb
clc
dec
inc
mov
in
cwtl
push
out
mov
ficoms
mov
xchg
jmp
dec
or
jmp
push
out
out
sub
jo
rcl
xor
and
push
outsb
xchg
stc
add
lret
ja
cmp
enterw
call
xchg
inc
mov
mov
xbegin
fwait
add
push
dec
xchg
xor
arpl
sub
sub
ljmp
jo
sbb
scas
push
shrb
pusha
or
push
xchg
addr16
mov
or
pop
mov
cltd
or
lds
scas
dec
lcall
cmpb
icebp
jne
jo
cs
test
pop
dec
enter
or
or
out
decl
das
inc
pop
inc
lea
imul
and
mov
and
ret
xchg
fbld
hlt
and
add
pop
shll
jle
mov
jle
mov
xor
inc
aad
sbb
lds
daa
push
add
or
dec
sbb
push
or
ret
rorb
addl
mov
fld
aaa
and
loope
les
movsl
pusha
ds
inc
dec
inc
ficomps
lock
inc
imul
imul
pop
ja
lods
dec
lds
out
jnp
push
int3
push
sub
mov
adc
scas
pop
movsb
mov
mov
lock
mov
bound
scas
or
aad
stos
cmp
sub
sbb
mov
cmpsl
icebp
imul
pop
incb
adc
mov
mov
xorb
mov
xchg
clc
movsl
adc
cltd
pop
pop
std
insb
fs
xchg
jl
orb
push
mov
lahf
mov
movsl
sub
int3
leave
aaa
loope
sti
movsb
ret
xchg
popa
pop
shll
mov
jle
xor
mov
jno
and
pop
xchg
jg
push
popa
in
cwtl
mov
cmp
add
push
pusha
cmp
pop
lahf
pminub
xchg
inc
sbb
imul
ja
ds
cmp
sub
jp
sbb
subl
pusha
daa
jg
movsb
xor
imul
pop
mov
out
push
lahf
fcoml
mov
pop
mov
insb
test
imul
roll
mov
mov
dec
fisubrl
popa
ss
mov
mov
adc
jno
in
int
aam
lcall
test
sbb
andb
cmp
pop
and
or
inc
xchg
mov
int3
inc
out
push
jg
repz
push
inc
mov
mov
mov
lea
sub
or
repz
fwait
test
mov
inc
mov
in
aaa
xchg
jle
jg
out
push
rcl
mov
mov
inc
mov
int3
imul
fcomps
rorl
imul
hlt
or
and
shll
clc
xor
in
movsl
shlb
jnp
dec
fistps
lods
dec
push
mov
out
inc
cwtl
mov
push
ljmp
dec
ret
mov
lahf
pop
push
jns
push
adc
inc
into
sarl
jae
int3
mov
dec
outsl
sub
cwtl
pop
daa
cmpsb
jno
push
test
je
cmpl
add
in
cmp
dec
mov
mov
repz
cwtl
mov
dec
push
popa
adc
pushf
call
xor
xor
jno
pop
or
mov
insb
jne
push
mov
pop
jno
add
add
js
mov
inc
int
cli
cmpb
lret
cmp
dec
sbb
mov
xor
sbb
pop
xor
cwtl
adc
cmp
insb
push
jmp
jno
rcrl
mul
test
pushf
add
push
jo
jbe
xchg
cmovo
cmc
inc
and
sbb
xchg
add
push
pop
pop
and
or
ja
repz
push
es
faddl
testb
sbb
test
cmpsl
fimuls
push
push
adc
lcall
or
cmp
jle
nop
in
sbb
jmp
jnp
add
mov
and
dec
mov
pop
adc
in
dec
mov
sub
fnsave
addl
pop
cld
call
dec
outsb
aas
mull
mov
xchg
inc
dec
sbb
push
loope
fwait
and
xchg
arpl
jns
pop
jg
inc
in
pushf
and
insb
cli
pop
mov
addr16
pop
lcall
shlb
xor
ficompl
push
pop
jne
ficomps
pop
shrb
dec
or
jbe
test
or
outsb
pavgb
rcrb
testl
sbb
sub
mov
xchg
jecxz
cmp
push
rol
jp
not
jmp
out
fcomip
data16
jmp
out
idivb
add
pop
ret
xlat
sbb
popf
push
or
push
or
push
lahf
cmp
fiadds
mov
shll
ret
call
cmp
pop
aaa
fsubrl
pop
and
sarb
insl
sbb
add
jne
out
jo
push
add
mov
stos
movsb
cmp
and
cmpsb
addb
add
pop
lret
outsb
inc
inc
mov
push
mov
sub
mov
mov
popf
xorb
mov
push
scas
out
out
and
jmp
out
xor
scas
or
or
dec
out
lods
aas
add
add
fldl
fmull
add
gs
xchg
xchg
pop
mov
or
lret
sti
pop
sub
into
push
imul
imul
sbb
inc
movsb
push
jle
clc
inc
inc
sbb
pop
and
sub
lea
xor
jge
popf
data16
rclb
arpl
out
call
mov
fists
mov
xorl
jl
fs
mov
pop
cmp
shll
dec
sbb
cmp
dec
cmp
xchg
adc
adc
jns
pop
decb
push
rclb
lcall
push
push
lock
mov
int
mov
cs
aaa
add
push
cmp
sub
jnp
es
aam
iret
pop
sbb
and
adc
push
int
dec
or
out
sub
mov
sbb
sub
jge
cmpsb
dec
xlat
dec
call
fs
imul
push
daa
sub
dec
push
xchg
sbb
push
push
xor
xchg
lea
xchg
sbb
sub
mov
cmovbe
dec
mov
push
and
mov
sbb
out
imul
sub
adc
jge
test
fnstcw
sub
mov
adc
cmc
add
sbb
jge
pop
int3
test
xchg
cmp
orl
std
and
je
xchg
xlat
in
add
fadds
mov
data16
mov
cmp
mov
popa
adc
inc
rolb
or
sbb
adc
sbb
enter
mov
sub
pop
test
leave
ss
mov
sbb
repz
push
sbb
xchg
pop
jl
fcmovu
shll
fdivrs
cmc
out
sub
dec
les
fiadds
cmc
leave
loope
addr16
incb
fstl
movsl
sbb
mov
lds
mov
cwtl
stos
enter
mov
sub
mov
and
adc
lods
jp
jb
test
cmpb
mov
insb
icebp
dec
sbb
mov
jle
sbb
loop
aaa
adc
mov
call
dec
jb
inc
test
sub
mov
jo
sbb
stc
mov
sub
clc
loope
nop
data16
test
ds
jle
inc
dec
fsubs
jge
out
testl
sub
xchg
fst
mov
dec
mov
test
or
adc
sbb
mov
cmc
in
inc
sub
out
notl
fldl
pop
add
xchg
fcomi
movsb
jg
dec
imul
pop
rclb
es
subl
push
adc
xor
mov
popa
shlb
jecxz
inc
stc
push
or
push
nop
jecxz
xor
add
jbe
sbb
je
lcall
mov
popa
addr16
xor
outsl
test
aad
dec
pop
pop
sbb
add
fninit
jae
xor
cmp
ds
les
inc
ljmp
lcall
pushf
fadd
fwait
movsl
lret
sbb
outsb
add
gs
test
fsubr
subw
cmp
int3
dec
adc
mov
push
pusha
xor
es
and
je
mov
mov
orb
push
jbe
out
xchg
movsb
loope
hlt
xchg
std
out
imul
jns
mov
add
mov
je
pop
adc
int3
lods
push
imul
sub
into
or
stos
push
mov
gs
subl
pusha
pop
cmpsb
mul
push
jns
mov
pop
cmpsb
outsb
movsl
into
inc
mov
mull
rcrl
fwait
and
mov
int
jecxz
add
xchg
data16
lock
ljmp
xor
les
jne
sarb
in
sub
sbb
xchg
mov
xor
sti
daa
mov
cmpsb
mov
xchg
or
lods
call
pop
pop
pop
pop
and
mov
mov
in
jmp
fsubrl
adc
or
pop
mov
push
decb
sbb
mov
in
jg
ljmp
cwtl
push
hlt
into
out
add
dec
incl
push
cmp
cmpsb
in
inc
xchg
inc
xlat
shrb
add
lcall
pop
add
gs
and
dec
loopne
hlt
lcall
sbb
outsl
inc
out
sahf
cmp
jns
por
sahf
popa
xor
lea
sub
pop
dec
sbb
sahf
pop
push
negl
pop
rcl
push
add
push
imulb
xor
mov
int
add
pop
pop
mov
xor
stc
sarl
mov
jb
dec
mull
out
pop
lds
push
xchg
and
xlat
or
dec
cmc
cltd
push
icebp
jnp
xchg
adc
jp
adc
outsb
pusha
lock
add
repz
shll
push
mov
jp
in
fucomi
or
enter
cmpsl
pop
imul
mov
rolb
jns
xchg
push
cld
sbb
mov
daa
jno
and
bound
movsb
jns
cwtl
jle
xchg
xchg
mov
imul
lock
mov
jo
xchg
outsb
mov
push
and
into
and
pop
pop
cmp
mov
jbe
loopne
std
and
or
ds
fdivrl
dec
repnz
sub
popa
lret
repnz
mov
pop
ljmp
mov
mov
je
subl
icebp
xor
aam
shll
mov
icebp
pop
mov
lods
sti
mov
pop
xchg
out
jo
aaa
mov
call
push
sbb
mov
bound
pop
xor
push
ret
mov
xor
dec
pop
lret
dec
sbb
ret
sbb
xor
inc
std
xor
adc
jl
repnz
setae
adc
lahf
sbb
lods
cwtl
jo
or
sarb
addb
push
mov
adc
jl
or
and
sub
stos
lea
mov
jo
sub
mov
cmp
insb
sbb
pop
sahf
hlt
std
outsb
lcall
mov
cmp
mov
mov
push
insb
in
mov
mov
enter
and
sbb
popa
es
xchg
sub
mov
mov
and
or
iret
inc
cli
out
stos
cld
lea
inc
decb
pop
iret
dec
cmp
mov
jg
icebp
cmp
jg
or
xchg
aam
mov
add
outsl
mov
imul
push
nop
adc
test
mov
shll
add
dec
mov
and
jg
sub
mov
stos
dec
leave
dec
xor
fcmovnb
daa
adc
test
inc
pop
roll
into
repnz
into
stos
lea
jae
out
and
jg
ja
adc
adc
bound
adc
adc
rcll
jle
test
inc
jmp
stos
jg
jmp
or
inc
loop
mov
pop
aas
lcall
outsb
mov
fldt
adc
es
mov
sahf
cmp
push
pop
test
out
test
int
lea
xor
test
rorb
pop
rclb
cwtl
push
fsubl
scas
cmpsb
xor
arpl
jno
sbb
add
sub
cld
out
inc
add
jb
jne
and
jns
jb
into
xor
dec
and
ja
sub
xor
adc
mov
std
inc
clc
push
fs
out
cmp
dec
js
mov
pop
sbb
jle
dec
mov
and
xor
jne
pop
mov
mov
leave
jle
mov
adc
fcmovnu
fnstenv
mov
cmp
sahf
stc
inc
xor
in
jbe
imul
jnp
jmp
loop
mov
imul
xchg
xlat
inc
mov
sbb
fimull
or
fwait
jg
ja
mov
adc
dec
mov
pop
negb
cmp
dec
add
wbinvd
popa
int
faddl
jge
ss
ds
mov
cmp
fldl
fwait
sub
div
cld
flds
jmp
ret
fisubrs
movsb
mov
lcall
adc
adc
sub
stos
inc
mov
and
sbb
push
roll
pop
add
sahf
sti
pushf
loop
dec
xchg
xchg
icebp
inc
test
loop
mov
stos
data16
fsubl
pushf
adc
push
or
or
xchg
dec
mov
inc
daa
ffree
cs
sti
cld
repnz
idivb
pop
in
sub
adc
stos
xchg
adc
jnp
xchg
jbe
pop
inc
pop
dec
push
incl
popa
lods
fcmovne
leave
pushf
xchg
xlat
sub
jne
lahf
stos
sbb
ja
decb
dec
cld
lods
in
mov
jne
fdivp
jo
mov
add
dec
pop
adc
sub
insb
sub
xchg
leave
xor
popa
inc
mov
insl
add
add
jb
sbbb
cli
leave
out
mov
insb
or
mov
pop
sbb
sbb
call
or
aam
ljmp
push
push
iret
cwtl
push
mov
je
movsl
pop
xor
mov
push
in
decb
cmpsl
xchg
adc
or
into
sbb
ficoml
out
sbb
pop
loopne
xchg
mov
sbb
icebp
and
mov
out
out
xchg
add
aam
or
sbb
arpl
or
sarb
lods
outsb
hlt
cs
jne
cs
push
ja
gs
pop
daa
outsl
add
inc
mov
lret
loope
adc
pusha
xchg
cmpl
iret
stc
pop
cmpsb
jmp
sti
stc
sbb
xlat
test
cmp
frstor
iret
and
fstp
int3
cmp
fsincos
dec
pusha
or
inc
push
leave
js
xor
rorl
outsb
or
daa
enter
mov
les
jae
adc
inc
out
leave
mov
xor
add
inc
adc
or
enter
sbb
xorb
push
pop
mov
sub
add
mov
imul
lcall
inc
add
icebp
cmp
mov
adc
popf
pop
pusha
dec
pop
fsubl
mov
push
pop
pop
fmull
push
jmp
dec
sub
int3
mov
cmp
nop
add
movsl
add
and
hlt
mov
sarl
sbb
xor
fcmovnb
out
dec
sbb
js
call
xlat
push
cwtl
stc
mov
out
ljmp
ffree
dec
push
mov
xchg
adc
sahf
cmc
or
cmp
xchg
fsubr
mov
movsl
cmovl
pop
sub
into
lret
push
nop
iret
mov
dec
pop
xchg
test
aam
mov
cmp
iret
cmp
les
sbb
pop
adcb
dec
daa
mov
ljmp
pusha
xor
inc
dec
inc
dec
mov
add
sbb
pop
sti
cli
aaa
test
mov
out
mov
push
sbb
jle
push
mov
cmp
addr16
shl
cmpsb
sbb
mov
push
imull
mov
sbb
hlt
mov
movsl
push
cltd
ds
xchg
dec
loope
ss
and
or
sbb
ja
pop
push
jg
test
cmc
push
push
insl
vmovntps
scas
fists
or
cmp
in
add
imul
mov
fucompp
dec
jnp
sbbl
inc
push
test
outsb
hlt
out
aad
xor
jge
das
sbb
dec
lret
stos
repz
bound
mov
xor
cmpb
fimull
lock
sti
jle
cmc
in
lcall
aad
mov
idiv
inc
cmp
mov
ret
loop
inc
sbb
pop
imul
test
out
andl
dec
jp
inc
aam
xchg
js
adc
idivb
aad
adc
jbe
cmp
push
xor
les
clc
inc
loop
iret
push
inc
or
mov
shld
add
or
outsl
jo
jp
daa
ja
mov
int
sbb
shll
aaa
iret
dec
mov
xlat
mov
dec
enter
mov
mov
loopne
shrl
push
mov
test
roll
rorb
bound
xchg
int
popa
mov
xor
jne
andl
in
push
inc
sub
outsl
jo
or
ja
mov
or
sarl
fstps
xor
pop
int
into
mov
popa
dec
or
cmp
mov
jae
mov
or
push
cmpsl
jmp
int3
lea
sub
dec
ficomps
cmp
mov
pusha
jle
cmp
negl
stos
mov
lds
inc
lcall
aas
jecxz
jg
and
pop
cmp
aad
mov
iret
pop
pop
or
jp
and
test
aaa
jp
mov
orl
ss
inc
inc
movsl
in
insl
test
mov
insb
std
cs
mov
xchg
psubd
push
sbb
outsb
xchg
orl
mov
sahf
jb
xchg
lret
sti
mov
shr
lea
push
xor
data16
sti
insb
int3
jle
jg
sub
jg
movl
jmp
cli
in
and
push
lcall
jae
lret
and
push
push
shlb
push
sub
xchg
imul
or
mov
test
add
sub
add
out
jne
push
or
hlt
cmc
es
xor
xchg
cmp
popf
stc
ja
arpl
lret
leave
add
cmpsb
adc
adc
icebp
out
test
ljmp
or
cltd
and
mov
mov
dec
cli
push
add
addr16
mov
push
in
and
pop
sub
push
dec
int3
inc
mov
mov
call
add
add
inc
lock
cmp
into
adc
xchg
out
mov
sub
fs
loop
cli
lock
dec
loope
iret
xchg
sbb
sbb
sub
or
push
scas
mov
push
jg
jnp
cmpsb
loope
mull
xlat
cmpsl
sub
nop
js
mov
inc
aam
ss
cmc
movsl
shlb
cmp
mov
sbb
sub
and
lcall
mov
push
mov
or
sub
sub
pop
dec
mov
rcrb
xor
test
sbb
mov
pop
out
std
xor
xor
sbb
fmul
push
mov
inc
aaa
add
leave
scas
jo
xor
fcoml
ja
adc
sub
mov
xchg
enter
clc
cmp
xchg
int3
andb
push
pushf
in
dec
sahf
insb
or
icebp
rcr
sub
xor
je
pop
in
inc
leave
pop
movsl
into
jecxz
stc
mov
andb
ss
and
add
pop
cmp
aam
aaa
push
gs
dec
inc
xchg
mov
repz
loope
adc
inc
sub
fadds
and
xor
pusha
test
je
test
jb
std
mov
push
jge
xchg
adc
test
cld
fisttps
bswap
stos
pop
jne
mov
fnstsw
mov
cwtl
pushf
jo
in
inc
add
add
cmpsb
fistpll
scas
pop
out
mov
dec
lahf
sub
pushf
xor
jns
xchg
or
pop
stos
dec
stos
pusha
dec
lret
xor
dec
mov
adc
or
jmp
jnp
push
jb
or
dec
lods
pop
ss
fnstenv
cmpsl
xchg
fyl2xp1
pusha
push
jge
xchg
iret
inc
int
dec
cld
fisubs
push
flds
jl
loope
hlt
shrb
xchg
ljmp
insl
and
mov
movsl
test
imul
inc
push
jp
cmc
or
scas
in
aad
icebp
push
test
aad
xchg
fcoms
test
dec
rorl
sahf
into
or
inc
cmp
cmp
jbe
sub
shrb
sub
mov
inc
fs
dec
inc
jp,pt
inc
xchg
loopne
push
iret
xor
jecxz
adc
aam
mov
push
jle
jnp
adc
ja
pop
jp
out
xchg
adc
mov
cltd
loopne
pop
mov
dec
nop
or
fimuls
push
xor
sbb
mov
mov
imul
fldt
lcall
cmp
dec
in
je
dec
inc
pushf
scas
stc
sbb
bound
mov
mov
and
add
mov
lock
js
jl
cli
mov
cmp
pop
inc
cmpsl
dec
out
sub
fldenv
pop
push
fsubl
pop
pusha
mov
sbb
push
dec
add
pop
inc
sti
fistpll
out
sbb
adc
adcb
aam
out
sub
dec
cwtl
mov
jo
mov
mov
xor
test
jle
mov
pop
lods
jo
es
mov
or
movsb
and
cs
and
gs
movsl
loop
mov
outsb
loopne
les
enter
ret
and
mov
jl
sub
push
scas
orl
jne
nop
sub
out
test
mov
xchg
cmp
or
mov
inc
mov
pop
mov
mov
and
pop
arpl
jb
push
jnp
jle
lods
or
inc
mov
int3
sbb
imul
mul
mov
ja
call
enter
cvtdq2ps
sub
push
pop
add
sub
xchg
stc
aaa
xorb
lods
cmp
fimull
sub
dec
cmpsb
sbb
adc
jnp
fisubrs
mov
movsl
popf
popf
bound
ljmp
test
jne
mov
jmp
scas
xor
push
mov
test
cmp
add
xchg
ret
ret
insb
jg
enter
icebp
push
test
dec
cli
shrl
mov
mov
push
test
jmp
mov
push
jl
loope
andb
mov
jnp
les
iret
cmp
in
movb
lret
cmc
xchg
adc
xor
enter
out
jmp
pop
xchg
sti
scas
je
sbb
dec
aaa
jo
mov
push
in
sbbl
sub
xor
imul
xchg
lea
xorb
dec
sub
dec
ret
mov
lods
lock
jg
fdivl
stos
scas
ret
push
aad
cs
ret
cmpsb
mov
lock
add
and
adcl
pop
or
fistpl
imul
mov
inc
lahf
lret
repz
dec
pop
xchg
lcall
sbb
xor
pop
push
jno
in
and
iret
push
jmp
sub
sub
add
pop
xchg
test
mov
cwtl
data16
adc
pop
jle
std
xchg
fbld
sbb
icebp
fmuls
ds
gs
inc
lahf
fldl
and
in
cmp
stos
cmp
lods
xchg
addr16
popf
pusha
jo
int
push
rcrb
mov
push
adc
adc
mov
stos
int3
jbe
je
add
xor
movsl
xchg
push
fdivr
sbb
mov
dec
mov
cmp
dec
dec
clc
lcall
cmp
aaa
mov
sbbb
inc
popf
or
or
sti
fstpt
adc
ret
jae
or
adc
arpl
sub
sarl
inc
jmp
iret
hlt
cltd
call
dec
pop
lods
dec
in
xchg
sbb
movsb
pop
ss
ret
movsl
cmp
shlb
jno
lcall
test
aad
pcmpeqd
cwtl
push
jecxz
icebp
jne
rolb
cwtl
pop
movsl
mov
mov
pop
popa
je
inc
xchg
data16
je
mov
push
lahf
cli
das
popf
push
push
es
cmc
pop
inc
int
mov
push
push
pushl
sub
push
xchg
insb
dec
sub
jp
add
pusha
call
inc
adc
xchg
or
mov
mull
xchg
ficomps
cmp
adc
xor
fcoms
cmc
cs
jmp
mov
arpl
dec
add
mov
aam
sub
inc
lea
xchg
jge
lahf
cwtl
xlat
and
pop
add
pop
or
hlt
test
fsubl
add
xor
lods
cs
jbe
in
dec
mov
in
add
sbb
popa
fldl
je
and
xchg
push
inc
xor
jne
mov
and
mov
in
nop
jl
lods
push
or
aad
sub
mov
je
adc
std
mov
fimuls
cmp
into
or
fisttps
mov
mov
outsb
int3
cmpsb
add
mov
ficompl
ja
insb
aad
pop
mov
xor
inc
int3
jl
xchg
ret
rcrl
scas
xor
aaa
adc
icebp
mov
inc
lahf
dec
mov
push
sub
leave
jle
xorl
sub
inc
inc
jecxz
scas
and
and
pop
mov
jns
jge
xchg
xchg
inc
scas
cmp
lods
add
adc
inc
pop
cmp
xor
lods
scas
jge
in
sub
mov
sbb
cmp
test
xor
rolb
clc
mov
dec
sub
outsl
aad
lock
cmc
pop
dec
pop
test
mov
insl
xor
fadds
sahf
sbb
xchg
test
fs
sbb
lods
mov
mov
xor
insl
xchg
cwtl
push
mov
mov
cmp
fs
inc
or
frstor
xor
jne
push
cmp
push
sbb
test
outsb
inc
pop
xchg
xchg
loopne
xchg
add
xchg
sti
xchg
mov
add
stos
mov
push
mov
lahf
mov
loop
sbb
div
sti
mov
xchg
jae
lret
adc
xchg
outsl
add
sahf
push
aas
xchg
ja
je
dec
rcll
and
adc
daa
push
sub
negl
gs
and
cmp
dec
mov
ljmp
push
std
sbb
cmc
jne
adc
or
xchg
inc
popa
pop
pop
aam
dec
ds
cmp
mov
mov
mov
and
aam
sub
push
mov
cmc
sbb
cs
pop
int3
sub
pcmpeqd
inc
sbb
and
jge
pushf
sbb
into
inc
inc
cmpsb
aam
outsl
jnp
cli
jbe
push
fwait
lret
sub
cmp
mul
or
rclb
stos
sahf
nop
mov
out
iret
idivb
push
sahf
inc
repz
jbe
bound
and
sbb
inc
and
mov
inc
xor
das
xchg
fstps
ret
xchg
jg
jo
rorb
mov
xor
imul
dec
add
insl
pop
sub
xchg
cmp
ljmp
push
jno
shl
dec
sbb
mov
clc
jle
mov
mov
or
xor
ror
cltd
std
xchg
fs
dec
les
jmp
fs
push
cmc
adc
push
outsl
push
inc
and
jno
nop
mov
sbb
pop
call
fdivr
pop
popa
jbe
push
push
out
arpl
inc
jge
push
std
push
aam
out
adc
shrd
aad
test
imul
out
sti
pop
arpl
cmpsb
popa
xor
stos
sbb
inc
jge
push
push
xor
push
adc
mov
outsb
xchg
add
or
sti
xchg
in
push
aad
xchg
loope
jno
gs
rcll
mov
mov
mov
adc
out
cmp
adc
addr16
dec
divb
pop
sarl
jmp
int3
xchg
mov
xchg
aam
dec
sbb
daa
dec
jns
push
xchg
push
fmuls
mov
fstpt
outsl
sub
xchg
xchg
jae
push
sbb
push
loop
mov
lcall
pushf
lods
aam
fdivl
xchg
lret
ret
in
or
out
cmp
fucom
push
outsl
jl
sbb
jmp
in
push
jp
stc
mov
je
push
jl
xchg
jns
push
xchg
rolb
push
scas
mov
pop
loop
insb
lcall
scas
pop
cli
cmp
test
nop
jo
and
lds
mov
cltd
jge
adc
sub
aaa
fwait
mov
enter
insb
jo
leave
push
push
push
push
mov
repz
add
adc
xchg
xchg
cmp
xor
test
sbb
jmp
add
push
mov
jmp
sub
pop
daa
cmp
or
or
xchg
sbb
sahf
stos
dec
int3
jnp
loop
pop
mov
lods
pop
and
and
pop
adc
jno
or
xor
jnp
sbb
out
lcall
in
adc
fucomp
mov
and
lea
adc
or
les
pop
inc
dec
fwait
movsb
leave
sarb
inc
movsl
push
clc
inc
adcb
loop
pop
xchg
cmpsb
daa
subl
add
add
or
sbb
pop
jb
in
xchg
sti
out
mov
sub
lret
test
and
inc
jmp
cli
pusha
in
xlat
aam
sub
iret
dec
pop
mov
mov
testl
sub
lea
clc
repz
push
ret
test
scas
adc
mov
aam
leave
or
insb
xor
xchg
lcall
cmp
sarb
aas
daa
xchg
sahf
inc
lock
aas
ljmp
xchg
cmp
ljmp
sbb
lret
fucomi
lret
ss
loopne
inc
adc
fwait
insb
jg
xchg
push
insl
or
or
push
pop
sub
pop
shlb
in
inc
je
data16
jns
icebp
aam
fucom
mov
fmul
xchg
push
jae
mov
int
out
mov
test
das
in
imul
push
cmp
call
insb
aad
in
fldcw
inc
in
cpuid
les
fidivrs
negb
mov
adc
ds
xchg
js
mov
enter
jo
or
jl
cmp
pusha
jmp
adc
lods
adc
sbb
or
or
fimuls
push
mul
add
stc
add
loop
xor
mov
jge
scas
nop
jmp
fmuls
fiadds
pop
cmpsl
lret
test
subl
lods
dec
rclb
sub
pusha
ss
mov
xchg
call
stc
mov
notb
jbe
addr16
xor
jae
inc
inc
or
fnstsw
mov
jmp
aas
popf
mov
movsb
xor
enter
bound
mov
cmpsl
lret
les
aam
pop
mov
push
inc
cmp
lods
mov
cmp
mov
call
cmp
aaa
es
mov
jns
into
pop
insl
inc
sub
ds
xor
mov
jmp
push
ret
cltd
sub
push
jns
xor
jecxz
cwtl
mov
mov
mov
ficompl
mov
popa
and
xlat
in
ret
out
loope
inc
inc
push
mov
jmp
int3
xlat
gs
push
hlt
loop
and
jb
leave
rcrl
sbb
int
mov
jl
mov
or
mov
test
imul
or
inc
and
pop
movsb
add
cmp
sub
jmp
xor
mov
xchg
fsubrl
out
mov
inc
movl
out
fs
push
sub
push
lea
mov
pop
ret
mov
insl
jb
pop
xchg
fldenv
pop
or
fwait
cmp
xor
dec
inc
and
cmp
hlt
jno
sahf
add
mov
sahf
dec
jbe
or
js
loop
pop
sub
push
das
adc
jl
push
loope
cmpb
dec
xchg
rcll
inc
movsl
fnstenv
sbb
pop
and
loopne
jno
test
mov
data16
mov
pop
idiv
loop,pt
and
shrl
mov
not
sbb
and
ja
add
aad
xor
test
xchg
out
out
and
or
jns
mov
dec
add
movsb
leave
int3
fstps
sahf
cld
ds
push
lock
scas
iret
sub
shr
clc
ret
mov
das
adc
lcall
jns
push
cwtl
dec
dec
push
or
or
call
lock
andl
add
adc
iret
cmpsl
push
icebp
mov
lods
jns
shll
push
fdivrs
dec
sub
cwtl
pop
or
add
push
je
jmp
pop
out
cmp
rcll
mov
imulb
xchg
sub
loopne
cmpl
push
mov
repnz
pop
sub
pop
sub
pop
jl
dec
cs
loop
dec
inc
fnstsw
adc
push
adc
mov
cli
xlat
lahf
jnp
sub
inc
cmc
push
xchg
or
and
or
sbb
clc
fisttpl
mov
dec
jbe
imul
add
and
xchg
pushf
inc
adc
ja
ljmp
jge
mov
jp
pop
jmp
fs
mov
sub
push
test
xchg
add
inc
popf
mov
or
push
mov
xchg
mov
pop
lret
mov
jmp
arpl
dec
mov
iret
imul
lea
ret
cmpsb
push
cmpl
sbb
dec
cld
mov
loopne
inc
pop
pushf
imul
jns
mov
mov
out
mov
xor
mov
pop
or
insb
dec
jl
iret
std
mulb
mov
mov
add
mov
imulb
add
cmpsl
jnp
xchg
mov
sbb
mov
movsb
aaa
mov
aaa
or
sahf
pop
cmp
push
bnd
cmp
cmp
imul
sub
mov
mov
push
cmpb
and
movb
mov
sar
mov
fadds
divl
stc
push
inc
push
mov
push
adc
pop
or
lods
leave
and
sbb
mov
imul
or
std
pop
bound
inc
cmpsl
enter
ret
js
je
ror
call
iret
popf
fyl2xp1
xchg
loope
mov
jno
mov
fwait
jg
movsl
and
mov
repz
sarb
pushf
cmp
scas
lds
push
in
xor
std
loop
xor
fs
imull
add
andb
mov
fsubr
sub
dec
mov
xchg
sbb
jg
or
jae
pop
lcall
movsb
xor
dec
push
jns
fistpl
icebp
mov
arpl
xor
lock
imul
mov
loope
pop
xchg
cmp
int
test
or
sub
lea
sub
pop
xchg
iret
repz
cmp
xor
es
xor
mov
mov
and
jo
pushf
lret
sub
je
sub
daa
sub
inc
mov
or
clc
xchg
add
push
lods
repnz
mov
in
jp
mov
bnd
mov
xor
notl
out
inc
dec
popa
out
iret
push
mov
ljmp
jno
fistl
imul
mov
mov
mov
jbe
out
inc
je
orl
bound
jl
xor
lock
push
pop
test
roll
jbe
or
outsb
mov
mov
insb
lea
rolb
sub
xchg
orl
xchg
mov
sub
fistl
dec
in
push
lods
mov
push
and
gs
divl
sub
push
test
lret
imul
sahf
lock
popf
imul
push
or
call
fmuls
imul
ja
lods
bound
and
icebp
aaa
psadbw
fstps
js
xchg
fdiv
mov
mov
les
pop
int3
ja
pop
mov
sbb
mov
testb
and
pusha
lock
pop
jmp
fldl
int3
inc
or
hlt
sub
mov
cltd
inc
dec
cmp
fdivrp
sbb
cmc
mov
adc
addl
adc
pusha
call
int3
adc
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
and
add
in
imul
jl
add
insb
imul
pop
imul
in
push
add
add
add
add
add
add
mov
add
mov
sbb
add
sbb
add
sbb
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
dec
insl
jo
outsl
outsl
imul
add
jo
outsl
outsl
imul
