call
in
add
add
cmp
add
cmp
sub
cmp
add
sub
imul
sub
sbb
das
inc
sbb
add
sbb
mov
jle
or
sub
cmp
movl
and
insl
sti
in
fistps
imulb
sbb
cmp
add
bswap
dec
ja
sti
mov
ds
sub
minps
sub
mov
and
dec
sbb
rorb
mov
mov
pop
mov
sub
imul
add
sub
jnp
mov
adc
push
or
into
mov
mov
mov
jmp
ret
cmp
sbb
adc
push
mov
enter
clc
sub
inc
divl
fucomi
push
call
sub
lret
insl
jnp
adc
sarl
jb
adc
icebp
sub
jg
inc
or
imul
sub
cwtl
sbbb
insl
and
call
imul
add
invd
insb
pop
sti
sbb
or
or
or
test
je
fstl
fcoms
inc
cmp
add
notb
jns
ret
mov
inc
clc
or
aaa
mov
sub
mov
mov
fisubl
mov
lcall
mov
pop
pop
sub
push
add
cmp
mov
insl
test
bound
cmp
or
xchg
aaa
test
mov
sub
shl
lods
rclb
xor
xchg
push
add
add
jbe
mov
sub
clc
adc
push
sarb
jle
rclb
adc
pop
nop
mov
add
dec
mov
or
xchg
idivb
rclb
test
push
mov
insb
int
mov
out
ret
pop
das
sbb
adc
sbb
aaa
testb
sub
sub
mov
insl
mov
shrb
or
loope
pop
fistpl
ss
sbb
jbe
lods
lock
or
mov
repnz
lods
insl
test
or
sub
add
jl
shll
icebp
cmp
sbb
mov
sbb
mov
sbb
ljmp
rcrb
andb
arpl
or
sbb
sbb
ja
jb
shr
add
imul
insl
popa
xlat
aas
mov
mov
push
mov
or
scas
add
pop
or
xor
lret
insl
jg
call
sbb
mov
ret
or
icebp
mov
data16
add
fmull
ja
mov
ret
aaa
pop
mov
fldl
sbb
js
lret
cmp
icebp
pop
push
or
and
test
sbb
sbb
cmpsb
mov
mov
mov
cmpsl
lods
out
add
ss
adc
adc
and
insl
imul
insb
out
mov
add
mov
mov
pop
cmp
pop
mov
dec
test
lsl
repnz
call
adc
es
xor
and
pop
or
repnz
add
push
mov
data16
mov
fstl
daa
subl
inc
inc
ljmp
in
pop
add
mov
movsb
add
dec
jmp
jno
cmp
hlt
icebp
aam
pop
or
xor
jecxz
adc
adc
ret
and
lea
jmp
or
jo
add
sarb
dec
push
mov
adc
cmp
or
or
add
pop
push
loope
cmpsl
push
imul
xor
adc
dec
mov
push
fcmove
int3
add
ret
adc
sub
sub
push
adc
imul
xchg
test
xchg
shrb
sarl
push
push
add
cmp
sbb
pop
jmp
adc
push
or
push
mov
add
cmp
xor
pop
outsb
outsl
or
idivb
movl
lock
in
js
fadd
dec
jae
pop
cmp
mov
lea
adc
push
mov
into
push
mov
popa
rclb
cmp
mov
add
js
sbb
add
jmp
mov
sbb
mov
cmp
ja
or
mov
push
xor
push
mov
adc
insl
sub
ret
xchg
je
jmp
imul
sbb
sub
adc
or
nop
subl
cmp
or
clc
sbb
dec
daa
push
pop
and
dec
insl
fndisi(8087
cmp
stc
or
inc
sti
insb
lods
mov
sbb
fstps
dec
int
bound
rcr
mov
mov
xor
pusha
sub
jl
dec
in
mov
xchg
repnz
adc
fbld
call
int
cmp
mov
popa
push
pop
out
imul
sbbb
inc
mov
aam
leave
add
outsb
add
or
push
pop
add
fnsave
loopne
adc
mov
int
gs
adc
loopne
test
xchg
lret
jns
cmp
popf
or
adc
leave
mov
xchg
pop
lock
aad
rcrb
faddp
sti
rclb
in
pop
mov
in
mov
add
or
mov
pop
sub
fisttps
lods
mov
cs
xchg
lds
shr
test
ljmp
subl
or
adc
clc
mov
leave
jno
mulb
insb
sarl
push
lcall
or
sbb
or
push
out
outsb
mov
je
negb
mov
xor
push
loope
xor
and
xlat
jp
scas
and
add
inc
cld
cmp
push
rcl
pop
fwait
push
or
and
sbb
lret
mov
jnp
insl
sti
fmuls
jne
jle
pop
push
pop
adc
fmull
scas
cmpsl
xlat
sbb
jg
jbe
jno
andb
and
inc
pop
ret
sarl
xchg
pushf
pop
mov
rolb
and
sbb
pop
push
push
pop
cwtl
scas
mov
or
sarb
rolb
jp
mov
icebp
jne
cmp
stos
shr
add
cmpsl
aas
int
hlt
mov
adc
or
shl
push
cs
rcrb
jne
mov
jae
adc
in
push
fwait
jmp
insl
mov
pop
jb
mov
push
mov
in
lahf
mov
pop
adc
inc
cmp
push
mov
sbb
shll
jbe
lar
sbb
push
pop
loop
add
into
sub
jmp
shll
sbb
bswap
jno
xor
push
inc
lock
mov
adc
mov
push
bound
mov
repnz
pop
jno
mov
lahf
cmc
jmp
mov
xchg
and
xor
jb
lahf
in
inc
xor
inc
in
jge
test
daa
sub
or
adc
fwait
push
adc
jp
insl
jp
xor
or
cwtl
xchg
cld
sbb
add
outsl
xor
cli
mov
add
add
test
mov
or
lret
xor
lret
pop
add
pop
add
sbb
pop
aaa
movb
sahf
sbb
icebp
xor
ret
lock
rorb
outsb
sub
shlb
adc
fucomi
or
mov
leave
jnp
fcomps
imul
jno
fisttpl
mov
xor
push
sbb
je
add
push
and
add
scas
movsl
pop
outsb
into
aam
jmp
cmpsb
popa
jb
sbb
test
xor
inc
rcrb
test
adc
movzwl
or
sarl
add
ljmp
outsb
mov
out
int
jae
xchg
push
mov
or
lret
dec
out
pop
pop
test
sahf
inc
lock
mov
cmpsl
sbb
lret
xlat
mov
repz
push
clc
inc
push
mov
push
stos
inc
or
inc
call
cmpsb
jno
xor
or
fnstsw
lock
pop
lret
xor
rcll
sub
mov
fdivs
push
mov
xchg
fwait
pop
push
cltd
push
faddp
adc
pop
sbb
jb
push
jmp
mov
push
or
leave
out
lds
dec
mov
xor
or
pop
mov
or
jp
out
mov
adc
dec
repz
enter
mov
roll
aaa
and
and
jle
stc
adc
aad
scas
mov
repnz
add
dec
xchg
or
sbb
ss
fnstcw
out
mov
iret
dec
sbb
ja
sbb
cli
dec
cmp
add
mov
into
sbb
js
inc
dec
shll
pop
movsl
ljmp
mov
sub
aaa
push
fstpl
pop
call
or
sbb
or
rcrb
adc
mov
mov
push
add
hlt
lret
pusha
ret
mov
cltd
cmp
neg
aad
add
dec
sbb
out
push
add
adc
test
and
adc
sbb
sbb
addr16
mov
sbb
adc
mov
das
dec
in
iret
inc
scas
mov
pop
incl
mov
fdiv
mov
pushf
lret
insb
dec
push
or
add
add
and
testb
test
pop
shlb
in
jo
mov
push
mov
data16
stos
add
fdivs
mov
inc
and
lret
leave
cs
js
jmp
push
out
cmp
das
mov
lds
push
adcb
ret
shl
push
loope
add
mov
pop
sarl
aam
mov
mov
xor
imull
loopne
push
push
movb
mov
dec
mov
call
jle
into
jp
push
outsb
loopne
int
lock
jns
push
mov
fimuls
dec
in
mov
pushf
and
lods
inc
jbe
mov
lret
adc
mov
mov
cmp
pop
inc
stos
mov
sbb
nop
cmpl
push
or
sbb
pushl
cmp
pop
fmull
cli
sbb
pop
out
popf
push
jnp
sub
dec
push
arpl
push
mov
shlb
shll
popf
and
inc
lods
or
push
xchg
inc
orb
pop
sbb
xchg
push
leave
stos
jns
push
stos
rorb
dec
stc
adc
or
add
pop
mov
add
mov
mov
cmp
inc
pop
sbbl
imul
add
js
pop
xchg
mov
popf
or
add
notb
adc
cmpsl
jb
idiv
or
imul
mov
push
jb
addl
rolb
fdivrp
lcall
xchg
push
arpl
rolb
add
into
or
nop
hlt
xor
ljmp
scas
lods
ficoms
add
push
addl
ds
pop
add
lret
mov
adc
les
inc
imul
mov
cli
xchg
mov
push
inc
ljmp
faddl
xor
or
les
fbld
pop
mov
mov
lret
les
pop
push
mov
pop
mov
and
sbb
pop
xlat
add
ret
roll
popl
sub
add
cmp
arpl
je
and
sarl
gs
insl
add
cli
mov
or
push
push
ss
addb
xchg
mov
arpl
and
sbb
pusha
lods
cmp
mov
jbe
sbb
xor
adc
xor
push
sbb
cld
cmpsl
loopne
icebp
in
shrb
cld
mov
movsb
leave
fs
js
mov
mov
lods
int
lods
pop
and
std
lock
outsb
mov
mov
pushw
jbe
ror
adc
and
sahf
and
dec
push
push
in
xchg
push
adc
push
cwtl
add
dec
int
inc
and
xchg
test
clc
cs
add
mov
adc
enter
xchg
js
push
sub
mov
test
push
adc
pop
flds
orb
cs
adc
dec
cmp
push
rcrl
pop
stc
mov
scas
add
lds
mov
pop
rol
push
sub
ljmp
les
adc
sar
lret
jne
add
jecxz
inc
mov
cmp
push
pop
sbb
stos
mul
clc
adc
subb
dec
cld
dec
test
loop
jecxz
andl
lahf
adc
gs
dec
punpckldq
ss
out
or
add
mov
mov
push
xor
adc
rorl
mov
adc
cli
sarl
hlt
roll
pop
sbb
test
and
or
push
mov
push
daa
clc
mov
mov
ficoml
int
mov
lcall
and
lret
add
fcoms
incl
mov
jo
add
sbb
or
cmp
loopne
add
dec
lcall
test
imul
ljmp
or
or
add
push
or
shlb
adc
add
pop
or
inc
cmpsb
mov
enter
clc
inc
xor
fcoms
push
push
int3
push
push
sbb
xchg
adc
xor
adc
sti
imul
cmp
outsl
add
int
adc
mov
push
addl
xchg
sub
repnz
out
or
push
mov
orl
sub
insl
jmp
popa
ret
dec
insb
mov
push
mov
or
cli
sbb
or
es
mov
and
mov
mov
pop
mov
sbb
mov
jge
mov
popl
mov
ds
stos
xchg
cmp
adc
aaa
push
out
test
rorl
int3
and
nopl
xchg
inc
xlat
cld
mov
sbb
mov
ljmp
pop
addb
sub
mov
sbb
add
add
pop
jg
pop
in
leave
loopne
pushf
xchg
sbb
sbb
je
push
xchg
loopne
pop
lds
push
mov
stos
and
js
jmp
or
loopne
inc
cmp
pushf
stc
add
add
outsb
cwtl
cmp
mov
sub
inc
repnz
and
inc
sbb
pop
add
push
and
pusha
cmp
cwtl
jp
cmp
imul
xor
push
push
jg
popa
push
push
cmc
bound
jle
leave
push
mov
sub
pop
shll
lods
dec
mov
push
ja
int
test
rorb
cli
addb
mov
sarl
iret
or
add
lea
sbb
sbb
and
push
clc
xor
push
pop
pop
jo
mov
popf
jg
adc
xchg
mov
push
test
mov
sahf
xchg
jae
mov
sub
push
mov
mov
addr16
mov
mov
or
add
push
sub
push
loopne
scas
mov
push
xchg
loop
mov
rcrl
push
sub
pop
inc
or
adc
or
sbb
rcl
ss
sbb
icebp
inc
mov
aam
sbb
ret
or
xchg
push
sbb
sub
and
fdivs
push
pop
adc
and
fmull
add
nop
adc
xor
sbb
jbe
push
or
xchg
movsl
ret
inc
add
mull
icebp
mov
in
sbbl
divb
mov
ljmp
shrb
rcll
adc
sbb
aas
sbb
dec
cltd
pop
pusha
push
jmp
rolb
add
xor
xchg
test
call
lret
aad
mov
mov
push
mov
mov
inc
sub
and
mov
fiaddl
cmp
notl
into
inc
add
insb
scas
dec
add
cmp
cmp
popa
fiaddl
push
push
jo
or
dec
loopne
lea
shr
mov
or
sub
push
movsl
xor
rcll
or
inc
sub
int3
mov
push
or
es
sbb
orb
cli
adc
sbbb
sub
add
or
rcll
push
or
add
add
jo
add
rcl
mov
mov
xchg
cmpl
leave
lods
add
sub
insl
push
loop
and
jge
lds
ljmp
inc
add
push
mov
push
adc
or
add
xchg
pusha
stos
xor
out
add
out
push
out
enter
or
adc
pop
add
pop
sahf
adc
lcall
ljmp
das
loopne
cmpsl
cli
push
push
mov
mov
jge
adc
sbb
rcrb
clc
movsl
and
and
sbb
cmp
sarb
daa
push
push
add
mov
addb
je
mov
mov
mov
push
jmp
mov
mov
inc
add
jne
sub
jmp
std
push
movsb
repnz
adc
push
jne
lret
sub
lcall
icebp
insl
stos
lock
mov
or
push
enter
pop
sub
lea
int3
movsb
mov
xlat
sbb
adc
dec
aam
lds
mov
enter
test
movsb
test
or
cmp
cmp
xchg
incb
adc
xchg
cld
mov
dec
push
out
rol
lret
inc
push
mov
es
jne
xor
add
mov
bnd
pop
inc
sahf
or
mov
pop
imul
mov
repz
pop
mov
aaa
call
sub
or
loopne
push
or
popa
testl
push
cmpb
mov
add
pop
loope
test
mov
dec
insl
mov
cltd
rolb
in
adc
inc
sub
icebp
lock
push
inc
push
push
mov
add
inc
add
testb
xor
loop
mov
adc
or
adc
xadd
outsb
and
sbb
roll
push
push
push
incb
sbb
xchg
ret
dec
out
mov
xlat
pop
cmp
or
dec
bound
cmovb
mov
or
mov
adc
sub
push
or
arpl
rcl
add
push
jge
cmpsb
push
jecxz
cmp
test
add
movl
cmc
out
pop
xchg
fmull
cmp
dec
pushf
sub
ret
inc
xlat
and
add
adc
shrb
cmc
movsb
and
lret
mov
push
cwtl
pusha
ljmp
push
lea
pop
xchg
add
adc
xor
scas
or
push
leave
jmp
icebp
lds
call
mov
push
ficoms
mov
mov
cmp
repnz
clc
pop
mov
imul
and
jmp
pusha
data16
shlb
and
imul
inc
insl
les
mov
xchg
sbb
xor
dec
pop
mov
sub
clc
sbb
popa
hlt
push
push
push
lock
scas
adc
adc
or
fcom
xor
ret
pop
aaa
shrl
test
cmpsl
test
xor
pop
xor
neg
push
mov
stos
sub
sub
out
idivb
xor
mov
sbb
rcl
or
loop
mov
out
ret
cs
push
test
push
sbb
jno
xlat
add
adc
push
push
lcall
jmp
aad
popf
xlat
add
or
sub
or
add
pushf
fcom
push
xchg
push
aam
mov
cmpsb
add
popa
dec
popf
enter
sub
and
or
add
push
out
sbb
ret
push
mov
rcll
into
icebp
jae
test
stos
adc
mov
pop
lea
jnp
sahf
mov
cmpl
adc
xchg
sub
nop
add
mov
mov
lods
mov
add
jne
push
das
enter
ja
and
add
adc
or
inc
shl
mov
add
ret
and
loop
ds
mov
mov
jo
mov
mov
sbb
jmp
loope
adc
shll
shlb
call
mov
call
adc
lods
dec
push
int
movzwl
mov
mov
xor
sbb
pop
decl
shll
and
mov
push
cmc
fwait
inc
imul
mov
lods
and
mov
and
out
inc
cmp
dec
xor
push
dec
popf
add
lea
stc
jne
scas
sbb
dec
xchg
xor
mov
xor
mov
inc
and
orl
jo
lcall
cmp
adc
mov
repnz
adc
popf
fwait
in
lds
xor
and
orl
enter
enter
dec
mov
es
jnp
gs
mov
adc
fdivrp
xor
mov
push
xor
xor
mov
xor
adc
cmp
hlt
sbb
test
pop
jmp
push
adc
pop
dec
mov
les
gs
shll
mov
sub
sti
or
push
aad
imul
mov
adc
call
sbb
shrb
es
popa
in
dec
mov
cmpsb
or
push
insb
add
aad
mov
lods
sbb
lcall
insl
ror
bound
mov
mov
add
mov
rorb
mov
mov
inc
xor
fistpl
outsl
xchg
leave
push
sub
fisttpl
mov
aad
es
je
xchg
push
js
jbe
scas
push
inc
adc
pop
mov
stos
or
lahf
rclb
mov
cmp
add
jge
lret
rcll
mov
fcmovne
push
rcl
and
dec
jle
fsubs
jle
adc
ja
or
pop
outsl
call
push
push
push
push
push
push
xchg
shrl
loop
and
xor
cltd
sahf
test
out
out
push
push
sub
or
push
xor
scas
sar
inc
cs
xchg
pop
loope
in
jg
dec
lcall
scas
pop
xchg
arpl
daa
jno
test
pop
loope
test
out
inc
and
or
cmp
jne
push
lock
rclb
adc
jo
add
pusha
test
push
xor
roll
mov
out
test
or
andl
xor
movsb
hlt
or
ffreep
add
jmp
mov
adc
add
test
cmp
popa
sbbb
or
xor
or
in
incb
cmpsl
pop
ljmp
inc
mov
mov
mov
push
rclb
xorb
sub
push
push
andl
or
data16
jecxz
dec
in
loopne
and
add
scas
add
dec
cmp
in
jle
sbb
cmp
add
push
push
bound
bound
fisubl
pop
pusha
sti
inc
fistpl
dec
or
aam
fdivrp
pop
pusha
and
mov
inc
pop
bound
pop
mov
std
ret
xorl
pop
pop
icebp
mov
push
sub
xor
or
lea
adc
loope
cmp
dec
and
push
inc
jnp
cmpsb
and
cmp
sbb
in
sbb
ljmp
es
stos
imulb
inc
sub
pop
mov
pop
in
pop
movsb
mov
xor
mov
dec
shll
bswap
push
cld
loopne
push
xchg
ljmp
addl
pusha
push
or
gs
mov
dec
xor
or
mov
lret
adc
int
out
js
push
inc
jmp
adc
gs
push
inc
sub
iret
aas
mov
jo
and
sbb
jle
xor
mov
clc
or
mov
lods
sub
xor
jnp
or
addl
or
mov
adc
sbb
pop
lock
inc
mov
cltd
xchg
xchg
sub
div
mov
jecxz
sub
nop
into
scas
repnz
lcall
and
push
adc
xlat
pop
mov
into
rorl
cs
or
cmp
mov
cld
lea
adc
divl
bnd
out
and
mov
test
push
xchg
push
mov
xor
imul
out
cmp
mov
call
xchg
insl
mov
hlt
mov
or
pusha
test
daa
mov
stos
sub
add
rcll
rcll
push
jmp
add
fs
adc
shrb
adc
xor
push
sub
leave
and
xchg
shrb
fistps
out
mov
rclb
dec
inc
pop
enter
nop
mov
push
cmc
and
lds
xor
add
sbb
push
fcomip
adc
insl
xor
xchg
and
and
mov
push
xor
sbb
sbb
push
call
ret
dec
adc
into
xor
and
mov
insb
sbb
scas
ss
lock
sbb
dec
dec
mov
xor
test
push
or
fwait
add
mov
sbb
mov
push
sbb
jg
cmpsb
pop
sbb
push
mov
mov
xchg
stos
sbb
pop
lock
clc
je
or
or
int
stos
aam
lret
addb
lcall
clc
cmpsl
andl
out
jno
inc
popf
out
cmc
inc
push
les
push
daa
out
repnz
ret
repnz
scas
inc
xor
sbb
fxch
clc
adc
jbe
push
ret
js
xor
notb
jo
sub
jmp
addb
call
aam
pop
mov
stos
sbbl
ret
mov
rorb
push
addl
sbb
xor
divb
mov
mov
sbb
fsubs
sbb
repz
add
push
mov
push
add
rclb
add
sub
mov
out
or
xchg
jmp
xchg
push
cmc
mov
ljmp
adc
leave
lods
sbb
sub
mov
dec
and
and
push
push
cltd
push
adc
pop
rolb
pusha
fcoms
push
or
pop
and
sbb
inc
xchg
mov
xor
add
push
or
nop
or
dec
rorl
loope
push
aaa
out
fistl
ljmp
and
aaa
add
mov
or
outsb
cmp
cs
adc
movl
or
cltd
dec
icebp
into
add
gs
or
dec
orl
jmp
pop
icebp
cmp
add
and
addr16
push
imul
adc
loop
or
in
push
out
int
ret
loopne
sbb
inc
gs
xor
andl
xor
bound
pop
add
rolb
lock
xchg
xor
inc
mov
pop
jns
mov
cmp
sub
das
sub
mov
push
lcall
push
stos
sub
pop
add
push
mov
cmpsb
dec
scas
bound
pop
cs
addl
mov
imul
scas
enter
push
jmp
jbe
mov
push
stc
jmp
cmp
adc
mov
in
mov
pop
jne
push
lret
inc
test
mov
cmp
mov
jb
jo
lret
xor
mov
mov
or
and
dec
inc
ret
and
add
enter
mov
sbb
andl
pop
sub
pusha
fnsave
icebp
cmpb
ret
movhps
jo
lret
popf
push
bndldx
mov
mov
shll
insl
mov
or
inc
push
fisubl
xchg
lods
or
xor
call
popa
push
ucomiss
dec
popf
addr16
js
rclb
inc
push
mov
inc
addl
xor
sbb
popa
sub
leave
cwtl
push
or
or
enter
cmp
adc
lret
mov
cmp
into
sbb
into
shlb
int3
int
cltd
pop
mov
push
jb
pushf
mov
add
es
jge
add
rcl
adc
orl
aad
adc
mov
push
ret
fldl
push
fcmovne
jb
sub
inc
adc
in
rol
roll
add
mov
in
adc
insl
mov
or
mov
popa
push
loop
inc
inc
lock
stc
cltd
xor
push
adc
test
das
test
js
adc
es
jb
cmp
shll
dec
lock
add
jbe
add
testb
xchg
pop
pop
sub
scas
adc
notl
cmp
push
mov
es
scas
mov
push
mov
popf
mov
add
jne
jmp
lods
mov
or
and
pop
ljmp
pop
scas
push
jge
dec
int
ror
add
shll
push
cmp
xor
inc
or
inc
rolb
mov
test
or
push
add
mov
pop
inc
rorl
js
adc
add
xor
out
cmp
gs
packuswb
pop
xor
push
sbb
adc
jge
inc
sbb
cs
lcall
mov
and
adc
in
leave
or
inc
shll
add
imul
je
lods
orb
and
pop
or
or
sub
and
adc
sub
loopne
scas
mov
ljmp
xchg
pusha
mov
xchg
push
cmpsl
rolb
xchg
lret
dec
movsl
pop
orb
or
jbe
push
xchg
cmp
ret
std
out
sub
add
dec
shlb
add
repz
pop
xor
xor
punpckhdq
pop
add
dec
sbb
push
cmp
out
dec
pushf
jmp
inc
lret
shll
jb
jle
mov
repnz
adc
xlat
mov
inc
rcr
loope
mov
and
cmc
and
pop
mov
inc
rclb
rolb
fs
xchg
aad
cmp
jbe
shrb
mov
and
scas
shl
add
shl
jb
push
mov
and
mov
sub
jge
and
jne
or
sub
sub
mov
xor
js
cmp
aad
mov
mov
ret
mov
sub
jbe
or
jb
and
stos
mov
cmc
ljmp
or
add
test
testb
jo
and
cmp
enter
inc
adc
icebp
jecxz
cmp
mov
int
lea
mov
aas
adcb
add
mov
xor
mov
add
sub
mov
out
ljmp
mov
out
mov
dec
mov
xor
mov
adc
inc
sub
das
jb
push
call
repz
scas
testb
mov
pop
cmp
es
pop
enter
jecxz
push
mov
inc
dec
test
sub
popa
and
mov
aaa
dec
inc
test
cmpsb
jb
add
push
xor
push
push
arpl
adc
das
ljmp
xchg
addr16
fisubrs
add
push
adc
xchg
out
xor
inc
sbb
subl
add
jae
inc
xor
lret
push
and
cs
inc
lcall
inc
adc
sbb
mov
push
mov
rclb
adc
pop
adc
into
mov
aam
pop
push
dec
lcall
or
pusha
jp
cmp
jl
popa
or
push
dec
js
out
add
mov
push
sbbb
es
mov
pop
leave
lahf
call
sbb
sub
mov
adc
in
js
fwait
into
shll
inc
mov
arpl
push
cwtl
push
enter
movsb
mov
loop
add
xor
mov
icebp
or
movaps
in
dec
pop
fistpl
mov
scas
pop
mov
ds
xchg
jo
call
rolb
insb
mov
ja
ficoml
test
xor
shll
stos
ret
mov
nop
rcrb
jbe
and
mov
sbbb
dec
add
sub
add
xor
xor
cmp
andb
in
adc
aad
test
shll
push
push
sub
sbb
xchg
inc
dec
or
and
sbb
mov
daa
addb
pop
pop
lock
ret
sbb
punpckldq
mov
scas
mov
push
sbb
movb
ljmp
popf
jmp
xor
jle
push
es
stc
notl
cmpsl
jp
cmp
jmp
sahf
in
orl
mov
xchg
sub
jo
push
push
out
push
jne
add
out
or
hlt
ret
popa
cmp
sub
rorb
push
xorb
lret
pushf
loop
pop
inc
int3
jne
in
mov
cmp
mov
fmul
xor
add
es
mov
sbb
mov
or
cwtl
push
leave
sub
adc
lock
push
pop
sub
push
jne
ret
jbe
ret
or
push
addb
icebp
pop
loope
lret
movsb
out
lret
mov
sbb
sbb
lret
repnz
push
aas
mov
sbb
call
lea
pop
jae
imul
push
adc
mov
mov
adc
das
pop
fiadds
mov
push
adc
inc
sub
lods
lea
enter
scas
test
adcl
loope
mov
inc
jmp
lods
call
cltd
arpl
cmpsl
shrl
xor
adc
in
push
xor
arpl
outsb
push
xchg
pop
test
lret
orl
clc
cmp
enter
xchg
xchg
out
mov
push
into
les
sbb
xchg
add
lds
mov
js
test
xchg
pusha
rol
rclb
push
scas
adc
dec
cmp
add
scas
jmp
adc
sbb
ret
dec
xor
and
mov
mov
mov
ret
sub
and
push
cmp
jle
dec
repnz
push
add
test
test
push
xor
repnz
add
daa
decb
pop
orl
fwait
push
mov
ja
and
xor
out
pop
cmp
cltd
xor
shll
movsl
rcll
and
rorb
fildll
cmovae
inc
adc
jo
add
test
es
pop
sub
stos
adc
sbb
stc
xchg
js
and
out
sbb
jb
dec
push
sub
cltd
cltd
mov
movb
or
lret
pop
imul
out
xlat
xorb
sub
loopne
pop
push
mov
inc
call
test
and
inc
lea
repnz
shrl
jle
bnd
add
xchg
fsubrs
push
sub
adcl
sbb
lods
xchg
lret
fwait
push
or
lods
test
loopne
pop
cmp
lea
stos
ljmp
push
xor
out
xor
xchg
lods
add
mov
fidivrs
mov
pusha
dec
std
jns
jmp
mov
push
or
dec
adc
mov
lds
xchg
test
pushf
daa
cmpsb
adc
cmpsl
cli
add
mov
dec
pop
inc
cmp
leave
imul
adc
sbb
push
cmp
in
inc
and
sub
adcb
mov
ss
or
mov
mov
inc
scas
adc
push
scas
xor
rcll
mov
mov
enterw
sub
jge
cs
stos
ret
pop
js
sub
in
mov
push
cmp
cwtl
mov
cmp
mov
dec
add
mov
or
sbb
sbb
hlt
or
jo
adc
adc
pop
js
cmpsb
stos
stos
push
rclb
mov
lret
add
mov
adcl
test
inc
test
je
fsubrp
sbb
popf
cwtl
push
or
and
pop
inc
xchg
add
xorb
rorb
ret
popa
lret
clc
into
or
xor
inc
or
scas
cmp
inc
adc
repnz
rolb
shl
sahf
mov
shl
test
sbb
push
cmp
cmp
mov
push
inc
mov
imul
sarl
pop
test
add
call
mov
mov
jmp
ret
clc
sbb
sbb
push
xchg
cmp
mov
adc
mov
les
dec
jnp
push
cmp
leave
mov
push
xor
jb
adc
shll
or
clc
stos
push
sbb
callw
or
stos
ror
push
xor
xlat
cmpsb
cs
add
call
mov
out
add
cmpsb
test
js
and
pop
and
dec
cmpsl
add
test
pop
out
aam
sbb
pusha
pop
xchg
insl
adc
push
cmp
in
add
dec
lods
push
or
push
add
inc
jg
push
push
movsb
dec
lret
jae,pn
jno
test
or
push
insl
push
xchg
sbb
push
pusha
js
sbb
test
movsl
fisubrs
xor
inc
adc
loope
sbbl
adc
inc
jae
or
rolb
add
shlb
je
cwtl
adc
fisubrs
add
xchg
push
xor
mov
adc
xchg
jb
into
adc
sbb
ss
loopne
cmp
sbb
xchg
dec
inc
push
lods
test
push
dec
les
pop
je
pop
adc
js
fmull
stc
xor
push
roll
enter
or
aad
ror
and
ds
pop
xchg
clc
push
jl
leave
lret
es
mov
inc
or
adc
and
movsl
negb
xchg
adc
dec
rorl
xor
enter
add
daa
cltd
mov
sbbb
xor
pushf
xchg
rcrb
mov
add
repnz
add
aad
rcll
mov
dec
pop
arpl
push
and
adc
leave
mov
arpl
out
adc
cwtl
cmp
add
adc
stos
mov
dec
cmpsb
adc
rclb
pushf
fistpl
mov
push
xchg
push
push
leave
mov
add
sbb
je
sbb
shlb
adc
inc
fnsave
mov
data16
add
mov
mov
fcmovne
test
sbb
push
push
push
mov
or
int3
lock
or
or
add
repnz
jmp
cmp
mov
lea
out
push
dec
icebp
outsl
push
prefetch
or
imulb
dec
inc
sbb
inc
xor
jle
push
sbb
add
ret
lds
mov
lret
push
jns
popf
inc
mov
xchg
mov
rorl
repnz
cmc
mov
push
mov
das
or
mov
or
mov
pop
mov
aad
inc
adc
lds
sahf
mulb
repz
and
xchg
pop
aam
sbb
ljmp
je
mov
push
in
enter
sub
fstpl
mov
les
mov
xor
and
mov
roll
mov
repnz
enter
lret
sar
add
add
cmp
xchg
adc
sbbl
or
cwtl
or
inc
jnp
pop
out
xchg
sub
in
int3
ret
mov
inc
dec
jmp
std
fildl
inc
stos
sbb
movb
push
or
mov
sub
int3
iret
add
rclb
mov
push
std
jbe
mov
rcrl
jecxz
mov
jl
fiaddl
loope
and
mov
or
mov
adc
mov
sbb
ljmp
ret
push
divl
addb
pop
rcl
cli
sbb
cmc
push
pop
je
lock
loope
cwtl
rolb
inc
or
or
mov
push
es
popa
mov
and
mov
add
inc
loopne
or
mov
pop
pop
loopne
or
out
adc
sahf
test
clc
or
rolb
jno
cmp
pop
and
pusha
cmp
fisubrl
mov
imul
bound
push
enter
rcrl
add
xor
or
fs
ljmp
or
and
scas
dec
fsubr
add
cmpsl
dec
inc
inc
jecxz
add
xchg
mov
rorl
sbb
testb
daa
cmc
add
addr16
or
fadds
sbb
fimull
mov
sahf
push
subb
jbe
sbb
add
or
and
jp
addb
lahf
out
dec
xor
movsb
sbb
push
xor
mov
aad
or
inc
dec
dec
jl
jne
sbb
mov
push
and
loope
sub
enter
adc
push
dec
mov
sbb
add
xchg
add
mov
push
xchg
xchg
inc
add
lret
dec
test
test
adc
mov
mov
sbb
mov
pop
dec
aam
movsb
mov
jge
and
idiv
add
push
stc
mov
negb
xchg
adc
cmp
shrb
mov
out
mov
test
popa
pop
xor
inc
push
gs
push
fsubrs
sbb
push
jo
inc
jae
mov
test
push
adc
or
shlb
and
bound
push
mov
push
cmp
pop
cmp
xchg
xchg
les
pop
lret
inc
add
jbe
stc
add
or
cmp
shll
xchg
or
loope
add
loopne
mov
xor
popf
fs
idivl
cmp
shll
and
inc
pop
ds
dec
xchg
dec
adc
mov
stos
adc
sub
adc
and
and
jae
push
les
inc
and
pusha
popf
addb
lcall
mov
es
imul
xchg
test
dec
pop
add
lcall
aad
loopne
cmp
cmpsb
dec
addr16
mov
mov
mov
add
sahf
mov
inc
jnp
mov
mov
or
ss
inc
adc
cmp
mov
mov
inc
in
xlat
negb
adc
xor
repnz
mov
dec
ret
ret
jne
or
pextrw
or
add
add
and
lock
jp
xchg
inc
mov
sbb
loop
push
test
push
stos
push
sbb
adc
add
xchg
sub
push
andl
add
mov
fbstp
nop
pop
mov
test
sub
sub
inc
pop
push
shll
xchg
andps
lods
shrb
or
sub
add
loop
and
sarl
out
dec
push
lcall
jge
sti
cmp
push
nop
clc
add
add
movsl
push
into
lds
int3
loopne
jb
push
push
loopne
movsb
jae
add
mov
mov
insl
loop
jl
xor
jb
addb
xchg
jno
je
movsb
push
pop
sbb
js
cs
icebp
dec
fprem1
jb
cmp
xlat
pop
and
rcrl
aad
and
fs
add
dec
ljmp
lea
dec
adc
hlt
rorb
lock
rorb
mov
or
mov
cmpsb
enter
mov
mov
dec
inc
call
add
loope
insb
inc
ret
leave
or
add
inc
aad
lret
or
cli
mov
sbb
push
cltd
enter
push
and
leave
pushf
or
xor
xchg
push
int3
add
sbb
icebp
or
das
bound
adc
call
daa
xchg
lret
shll
out
lea
sub
imul
pusha
mov
sbb
cs
scas
sub
sbb
data16
jne
xlat
or
push
sbb
sub
icebp
ficoml
mov
xchg
ret
jmp
icebp
in
push
add
push
push
in
inc
scas
push
rorl
shrl
push
add
jecxz
or
xor
adcl
mov
sub
pop
pop
or
pop
cmp
xor
sbb
pop
orl
inc
loopne
inc
mov
pop
cmc
pop
jmp
test
jnp
adc
es
rcll
pop
cmp
adc
inc
adc
mov
scas
push
xor
dec
xlat
inc
insb
stos
lret
or
push
sub
arpl
pop
cmp
push
scas
popf
ljmp
cwtl
sub
sub
adc
das
ret
out
rcl
pop
cwtl
pushf
xor
push
or
dec
rclb
mov
pop
adc
pusha
jb
gs
cmp
and
loopne
into
shrl
in
push
push
cmc
xor
jo
js
rolb
add
loopne
jmp
test
popa
push
mov
mov
dec
das
push
cmp
loop
pop
aam
or
mov
sbb
adc
adc
jo
add
addb
and
add
inc
insl
add
add
rclb
shr
or
fcoml
inc
sub
add
xchg
ret
js
shlb
jp
xchg
sub
mov
rcrb
add
push
push
inc
rol
pushf
dec
adc
shll
xor
loop
pop
dec
aam
cwtl
in
into
ret
push
mov
jecxz
mov
ljmp
into
notb
rclb
mov
xchg
adc
push
scas
pop
push
add
jecxz
jo
push
aaa
in
add
inc
lahf
leave
loopne
loope
pop
cmpl
scas
add
out
or
mov
cltd
and
daa
dec
daa
jb
inc
mov
push
adc
cmp
adc
test
push
addr16
stos
pushf
icebp
mov
roll
shrb
mov
es
adc
xor
dec
out
mov
sub
sbb
pop
andl
subl
add
xchg
push
loope
or
call
cmpb
sub
sbb
pop
or
nop
jae
gs
push
or
mull
add
inc
insl
pusha
push
jns
xchg
iret
js
cld
rcll
adc
or
rol
sbb
test
pop
shl
mov
or
adc
mov
out
js
jp
out
push
adc
push
xorl
data16
add
xchg
sbb
shlb
sarb
les
pop
fstl
ljmp
sbb
pop
push
xchg
jae
xchg
mulb
mov
shr
push
bound
enter
test
dec
das
icebp
mov
loop
dec
jecxz
xchg
and
add
lods
stos
xor
push
or
push
dec
rcll
or
cs
pop
aam
sbbl
or
sub
pop
xor
rcrl
mov
jb
inc
add
push
mov
dec
xchg
mov
push
pop
mov
ljmp
lock
lods
fisttpl
adc
adc
inc
cmp
rclb
xor
add
popa
mov
stos
int
push
cmp
test
pop
adc
sbbb
subl
adc
or
add
ret
xor
lods
ljmp
xchg
mov
xchg
push
or
ljmp
xchg
mov
inc
mov
sub
ret
push
sbb
addr16
ds
not
inc
outsb
test
sub
mulb
mov
mov
inc
push
dec
push
ss
inc
leave
pusha
inc
pushf
push
or
pop
into
pop
daa
stc
loop
mov
mov
mov
faddl
pushf
icebp
or
jbe
mov
sbb
inc
pop
cmc
mov
lock
or
add
jo
mov
or
loopne
pop
xor
add
mov
cmp
or
jo
bound
enter
sbb
mov
mov
xchg
test
mov
shlb
int
pop
pop
subl
outsl
arpl
lcall
push
push
cmp
or
es
nop
outsl
push
lea
pshufw
jl
add
push
fmuls
lock
mov
ret
mov
add
mov
mov
adc
ret
or
test
add
or
aaa
test
adc
push
andl
dec
loope
add
and
inc
inc
loope
repnz
inc
lock
add
es
add
push
cmp
and
add
sub
inc
jnp
cmp
in
inc
pop
mov
sub
pop
pop
and
inc
cmp
mov
sbb
and
jl
adc
or
cmp
in
dec
aad
add
inc
pop
adc
or
cmp
xor
arpl
push
sub
aam
mov
add
das
push
add
loop
daa
cmp
mov
jg
and
loopne
inc
das
cmp
pop
sub
ror
add
xchg
xor
xor
cs
cs
ror
leave
adc
jp
pop
xchg
mov
add
loope
inc
sbb
add
shll
cmc
mov
sub
addl
out
aad
notb
enter
jno
jle
enter
push
ljmp
test
loopne
and
lret
push
orb
xchg
inc
dec
mov
push
sahf
sub
in
or
cs
add
sbb
test
lods
addr16
movsb
roll
in
sub
roll
or
mov
mov
push
sub
xchg
stos
mov
out
ret
mov
push
push
add
pop
orb
sub
fisubl
jb
inc
es
xor
pop
rclb
sub
enter
scas
movsb
cmp
jnp
push
enter
and
inc
mov
jb
into
xor
push
cs
les
lahf
lahf
cmpsb
es
loope
scas
cs
xchg
sti
mov
into
icebp
cmpsl
loope
xor
push
xor
sti
je
jb
jp
shll
pop
xchg
sbb
clc
pop
inc
sub
add
cmp
loope
push
and
in
mov
cmp
sbb
pop
sub
adc
add
jo
mov
cmpsb
clc
rcll
inc
adc
xchg
add
push
sub
push
mov
inc
pop
sbb
cmp
loopne
aad
rclb
or
rolb
add
repnz
or
or
mov
push
xor
out
or
loop
loop
rcl
mov
mov
icebp
int3
push
fs
dec
in
xchg
fwait
dec
lahf
push
rorl
sbb
and
movsb
inc
jge
into
or
push
rcrl
mov
ret
push
or
mov
sbb
pop
fsubrl
push
or
mov
or
xchg
dec
pop
add
pop
jb
push
dec
push
mov
add
out
push
push
xchg
adc
sbb
mov
int
add
mov
add
rcrb
cli
mov
movsl
insb
sbb
sbb
icebp
stos
push
je
mov
lods
pop
pop
push
or
jge
inc
in
sub
push
sbb
pop
xchg
push
jo
jo
xor
dec
mov
push
cmpxchg8b
lcall
loopne
leave
pop
inc
inc
mov
mov
les
pop
dec
or
movsb
pop
mov
es
pop
popf
dec
push
lahf
hlt
jmp
xor
sub
xor
push
dec
lock
aaa
pop
mulb
push
sbb
push
xor
mov
xchg
cltd
add
sub
push
rorb
inc
mov
or
jnp
and
dec
mov
push
lcall
inc
outsb
in
inc
test
and
rorb
and
cltd
pop
int
rcrl
jle
adc
xor
pop
loope
push
movaps
sbb
andl
inc
xchg
sbb
adc
loopne
cmp
mov
ljmp
lcall
inc
pop
in
sub
adc
sbb
adc
pop
jmp
adc
addb
cmpsl
xor
xlat
sbb
sub
mov
into
sti
sbb
jp
pop
js
dec
adc
and
push
idivl
and
test
nop
xor
and
pop
add
adc
movsl
loopne
std
or
mov
or
sbb
push
nop
add
push
push
stc
or
adc
inc
pop
mov
shrb
repnz
xchg
push
sub
scas
mov
xchg
ret
push
or
dec
and
sbb
pop
pop
repnz
sub
sbb
xchg
add
or
xor
adc
sarb
ret
push
pop
xchg
in
cmpsb
pop
std
ljmp
inc
dec
mov
pop
or
adc
shl
mov
in
jecxz
inc
pushf
xchg
outsb
push
lods
pop
ja
dec
push
lods
or
push
cld
out
pushf
xchg
loope
or
lods
dec
mov
sub
aam
push
add
arpl
scas
dec
dec
sub
mov
jo
cmpsb
mov
pop
mov
or
jge
adc
mov
or
inc
mov
and
mov
fnstcw
into
push
testb
inc
push
sub
mov
adc
mov
imul
push
rcrb
aam
fldcw
repnz
test
ret
fimull
int3
sbb
adc
pop
outsl
inc
aam
inc
push
sbb
scas
jo
pop
xor
insb
xor
or
and
adc
jnp
xchg
rol
jmp
push
loopne
xor
shlb
sbb
fisubrl
inc
icebp
and
push
enter
movsb
sbb
sub
into
push
dec
push
loope
mov
movsb
out
cmpsb
enter
jne
adc
hlt
push
dec
dec
or
movsb
pushf
and
scas
add
or
aaa
xchg
dec
jl
add
or
xchg
push
cmp
cmp
xor
ljmp
out
xchg
cmp
jo
jp
sbb
pop
mov
or
aas
lea
and
push
push
out
inc
pop
push
xor
push
inc
shlb
sbb
add
pop
sbb
push
adc
push
in
inc
sub
sub
ret
adc
enter
leave
xchg
add
push
cmp
cltd
add
add
push
mov
int3
push
pop
or
xorb
call
pop
stos
xlat
test
dec
inc
pop
jecxz
sub
test
and
int3
xchg
and
sbb
add
in
or
adc
sbb
push
mov
in
cwtl
pop
pop
notb
pop
cmp
xor
inc
push
mov
scas
xlat
mov
lret
xchg
cwtl
incb
insb
aam
sub
mulb
cmc
cmp
mov
cli
mov
adc
cmp
test
movsl
or
push
push
inc
or
mov
inc
je
adc
mov
std
ret
sbb
stos
sbb
cmp
iret
sbb
fwait
pop
jnp
push
cli
add
orb
test
fcompl
aad
mov
push
sub
inc
iret
fists
mov
jo
jo
js
insl
and
jge
sub
xor
mov
inc
mov
inc
dec
jge
cmp
add
subl
stc
adc
decb
mov
xor
add
xor
mov
add
mov
push
cli
sbb
add
or
jle
aas
push
inc
insb
pop
sub
std
repnz
push
pusha
sbb
inc
push
cmp
push
es
adc
stos
rcrl
or
xchg
movl
adc
shlb
xchg
pop
add
sbb
add
jle
add
sbb
orl
das
push
push
push
divb
or
aam
aam
inc
mov
sub
clc
andb
fmuls
fwait
ret
mov
adcb
pop
cmp
mov
sub
adc
cmpl
mov
dec
adc
add
hlt
loopne
push
repz
cmp
or
sub
addb
push
int
stos
stos
mov
test
loopne
jmp
stos
fcmovnu
adc
push
adc
insl
stos
add
shrl
es
fstpt
pop
xlat
rcll
les
popa
sub
mov
push
loopne
sbb
or
scas
orb
rolb
scas
popf
ljmp
adc
push
mov
jbe
pop
mov
inc
and
scas
pop
pop
push
xor
adc
lods
inc
mov
fwait
mov
push
lock
push
jp
inc
sub
sub
cmp
adc
adc
push
push
sbb
psrlw
shrb
enter
or
mov
pop
push
pop
and
cmpb
icebp
inc
mov
in
pop
sbb
pop
scas
inc
bound
jno
lcall
scas
mov
nop
push
out
test
adc
fs
je
jp
mov
pop
jmp
fwait
fwait
mov
adc
test
jne
sbb
jae
inc
xchg
ds
ret
rorl
mov
popa
mov
int
ljmp
push
xor
push
das
add
pop
sub
xor
push
mov
test
and
inc
jo
sbb
jp
mov
cmp
adc
push
jo
sub
rcrl
add
inc
and
push
cwtl
mov
mov
xlat
aas
mov
or
pushw
mov
enter
pop
mov
and
cmp
adc
xchg
sub
and
repnz
or
fs
arpl
pop
push
sti
push
test
outsl
popf
push
call
add
or
mov
sbb
jl
out
mov
and
or
jno
dec
nop
aas
ljmp
mov
and
mov
inc
mov
sbbl
and
mov
xor
jl
xor
dec
inc
mov
insl
adc
push
lds
dec
lods
loop
push
xor
test
pop
add
add
mov
movsb
rol
sbb
cmp
push
lea
xchg
push
call
call
rcrl
xlat
and
in
xor
jbe
sub
add
shr
mov
lods
ret
xor
mov
push
es
ret
inc
lcall
in
clc
dec
loope
cltd
inc
mov
xor
xchg
or
imulb
mov
sbb
scas
or
inc
shlb
push
add
inc
sub
add
pop
push
inc
jmp
pop
test
push
aad
push
push
cwtl
shrl
ret
leave
push
adc
popf
ret
mov
clc
pop
cmp
adcl
js
les
clc
or
sbbl
sbb
sub
jmp
adcl
push
inc
jge
inc
sar
jae
sbb
mov
in
and
mov
or
popa
xorb
cli
inc
or
adc
add
or
stos
adc
sbb
test
add
mov
mov
add
mov
fisubrs
sbb
jg
sti
lock
push
shl
out
or
cwtl
sbb
adc
jnp
and
ljmp
sarl
scas
xchg
lds
ret
addb
mov
adc
movl
xor
sbb
xchg
dec
or
insb
push
pop
lahf
and
push
pushf
loopne
mov
adc
jmp
daa
push
lcall
add
or
outsl
inc
mov
inc
mov
cmc
or
xchg
xchg
inc
sbb
mov
daa
je
and
or
mov
push
inc
insl
stos
mov
pop
push
pop
mov
adc
add
or
lahf
mov
push
outsb
loopne
or
les
sbb
adc
pop
pop
rcrb
inc
inc
in
pop
mov
std
push
adcb
xchg
popa
sbb
and
loopne
movsl
je
xchg
or
pop
sub
setb
dec
popf
mov
hlt
je
enter
or
dec
or
in
sbb
adc
js
dec
rcl
or
stos
push
aam
fiaddl
cmpsb
xchg
dec
orl
xchg
hlt
sbb
mov
mov
or
pop
mov
stos
lea
jb
push
aam
add
out
test
mov
push
call
xchg
or
orl
pop
mov
jp
clc
inc
xor
cmp
cld
icebp
sahf
add
mov
jno
xor
ret
sbb
cmpsb
dec
and
and
mov
test
mov
push
sbb
pop
mov
sbbl
lods
ljmp
or
cmp
adc
pusha
push
sbb
lahf
enter
push
adc
xor
cs
ljmp
push
mov
int
clc
adc
add
fnsave
test
mov
nop
add
adc
rcrb
mov
dec
mov
out
jmp
add
adc
int
popf
scas
xchg
push
inc
aaa
inc
sub
push
inc
cmc
mov
clc
dec
adc
adc
lea
pusha
push
push
mov
mov
shrb
js
out
int3
imul
jae
cmc
sub
pop
popf
or
loope
xchg
test
sub
fisttpl
dec
stos
cmp
inc
dec
mov
pop
loopne
cmp
xchg
jo
sub
inc
jno
xchg
imul
and
outsb
arpl
add
test
adc
mov
shlb
sahf
stc
and
xor
cwtl
aam
pop
addr16
rorb
pop
lds
adc
push
not
cltd
push
inc
scas
mov
xor
push
pop
mov
fstl
inc
in
mov
popa
movsbl
or
cmp
pop
cli
mov
ret
xchg
test
push
adc
stos
pop
push
add
inc
adc
inc
cs
sub
pop
mov
adc
push
int
ss
or
loopne
push
cmp
or
dec
mov
push
outsb
add
inc
pop
aad
loopne
movsb
push
roll
mov
jbe
cmp
dec
xor
stos
in
loopne
scas
sub
into
add
sub
inc
aam
push
test
add
push
jne
push
movsb
jmp
push
pushf
fisttpll
sbb
ret
dec
mov
sub
sbb
inc
rclb
cmp
rcll
stos
jge
mov
add
pop
inc
pop
jp
mov
or
cmp
inc
add
or
xor
add
xchg
sub
jg
push
popa
nop
and
sbb
inc
add
and
jo
sub
xchg
mov
inc
popa
adc
nop
xchg
jmp
hlt
into
sub
sbb
add
dec
movsl
inc
mov
hlt
mov
inc
lahf
rorb
xchg
mov
bound
mov
movsl
push
or
xor
add
mov
add
inc
sbb
and
push
addr16
push
stos
cmpsl
cld
adc
test
mov
adcb
push
shrl
mov
inc
sti
shlb
inc
xor
loopne
aam
mov
cld
lahf
mov
or
jno
sahf
jo
and
mov
js
loope
cs
mov
nop
mov
cmpsb
mov
inc
xor
cwtl
lret
xlat
or
leave
fisttpl
or
add
or
sub
adc
repz
add
mov
sti
ret
push
push
jg
int3
aad
xor
lea
pop
adc
out
sub
rdtsc
adc
mov
mov
orl
add
add
pop
add
xchg
xchg
mov
push
mov
inc
mov
gs
inc
add
push
loope
sbb
and
stos
test
rolb
jp
or
and
pop
pop
inc
mov
and
xor
movsb
pop
xchg
pop
xor
push
add
pop
filds
adc
push
mov
inc
stos
cmp
or
push
jbe
inc
jae
aam
sub
out
and
xor
mov
push
jl
lret
inc
addb
and
andb
test
loopne
stos
notb
inc
ljmp
or
sbbb
aam
cmp
mov
js
add
aad
sub
push
sbbb
adc
push
rorl
cmp
pop
dec
and
pop
in
mov
mov
ret
inc
in
inc
std
push
jp
jmp
popa
movsb
and
cmc
pop
dec
ret
mov
inc
push
enter
rcrb
mov
mov
sub
mov
add
cmpsl
jae
xlat
jbe
sbb
add
icebp
jg
push
adc
imul
add
or
sub
push
and
test
jnp
pop
push
shrl
and
mov
mov
rolb
jg
leave
loopne
mov
ud2
jp
or
xchg
ret
push
and
adc
cld
test
cli
adc
sub
pop
sbb
add
cmp
sbb
jo
sbb
and
cmp
shl
or
cld
mov
adc
pop
inc
icebp
rol
add
inc
test
sbb
adc
inc
xor
pop
rclb
push
inc
test
js
add
sbb
jne
push
jb
push
std
push
ret
inc
in
cld
adc
pop
add
shlb
cmp
les
push
or
stc
in
push
int
scas
int
rdmsr
les
les
repnz
add
mov
stc
push
jno
inc
add
imul
andb
or
cmp
or
jns
lcall
aam
stos
leave
sub
icebp
inc
inc
fisttps
sbb
sbb
or
dec
rolb
bound
rcrl
adc
mov
cmp
les
cli
push
ja
push
add
sbb
push
cmp
popa
fwait
mov
jge
sub
pop
ljmp
cwtl
addl
jne
inc
fs
int3
idivb
add
out
or
les
imulb
sub
int3
fs
test
cmpl
xor
adc
sub
testb
xchg
sub
sahf
or
rorb
xchg
mov
push
jmp
inc
in
fucompp
mov
push
push
and
lret
test
sbb
jnp
adc
and
test
adcl
lret
dec
adc
mov
fimuls
and
mov
add
test
push
pop
lods
add
sti
fildl
dec
sub
inc
rorl
xlat
add
mov
sbb
lock
test
push
push
cmp
mulb
lcall
mov
sub
clc
or
pushf
push
rolb
lods
movsl
xor
mov
testl
and
lods
push
inc
lcall
sbb
sbb
dec
sub
sub
or
call
add
ljmp
iret
push
sub
shlb
andb
fidivl
push
or
pause
xorl
mov
push
or
test
pop
outsb
cwtl
or
adc
pusha
test
inc
adc
loope
sub
pop
and
or
dec
push
dec
push
cmpsl
sub
cld
fwait
enter
add
rclb
addr16
xchg
jo
adc
shll
sub
inc
test
ret
sub
adc
inc
push
inc
inc
test
push
pop
mov
add
adc
lcall
sbb
sub
push
insl
adc
pop
fistpll
inc
fnstcw
icebp
sub
push
push
push
xor
xchg
mov
push
add
xlat
mov
ret
push
push
mov
inc
push
js
pop
rolb
mov
es
and
jo
das
popf
push
dec
rcl
mov
inc
aad
push
mov
adc
push
loope
adc
rorl
popa
data16
pushf
and
jb
or
int
xor
bound
mov
lret
add
mov
test
inc
xchg
or
cltd
push
shll
or
icebp
xchg
sbb
xchg
add
xchg
loope
mov
stos
pop
xchg
pop
cltd
mov
mov
push
sbb
into
xchg
stos
cmp
iret
push
pop
dec
sub
xor
leave
roll
out
stos
xor
scas
test
push
mov
sbb
lds
sub
and
pop
or
push
clc
das
ss
inc
cmp
mov
shll
mov
daa
ret
int
cmpl
pop
aad
sub
adc
jbe
aas
sub
pop
push
sarl
add
rolb
inc
pop
or
or
in
loop
bound
ljmp
or
mov
mov
push
inc
xchg
jmp
mov
push
lret
subb
add
insl
nop
sub
adc
cmp
icebp
cmpb
inc
sbb
adc
sub
xor
mov
push
mov
adc
roll
add
add
and
xchg
stos
push
daa
xchg
dec
bound
inc
or
dec
and
leave
sub
ret
push
lods
sbb
xchg
pop
je
in
lea
lock
idiv
add
aam
hlt
or
adc
inc
xor
sbbb
mov
loopne
mov
pop
scas
adc
js
lods
movsb
mov
mov
mov
cmpsb
push
xor
or
adc
xchg
sub
push
lods
push
inc
fsubrl
pop
mov
into
inc
pop
stos
fs
add
fists
adc
jb
or
dec
mov
mov
es
fucompp
adc
add
mov
or
cs
pop
aam
pop
or
ficompl
lret
ret
inc
inc
lods
rcll
jbe
adc
inc
lock
stc
push
adc
out
or
mov
imul
push
loopne
xchg
xchg
push
mov
and
enter
pop
xor
pop
jle
out
sarb
into
push
or
sub
jns
into
and
adcb
jmp
adc
inc
sub
clc
js
or
ret
clc
mov
outsb
ret
push
pop
xchg
mov
add
int
daa
inc
lock
cmp
cmc
jp
push
les
push
pop
rcrb
xor
mov
rorl
call
xchg
or
orl
push
add
lods
iret
add
mov
ja
or
push
lret
rolb
outsb
sub
sbb
xlat
pop
cmp
mov
cmpsb
mov
int3
push
lds
xchg
stos
test
or
lcall
jg
ret
je
outsb
or
adc
mov
enter
pop
pop
nop
mov
dec
sbb
andb
hlt
or
mov
add
and
push
ljmp
push
mov
call
stc
add
inc
jp
pop
inc
leave
cmpl
gs
pushf
or
cmp
sbb
sbb
xor
inc
cmp
sbb
mov
fnstsw
enter
leave
aas
push
xor
and
xchg
push
xor
clc
jg
cli
push
xor
or
adcb
ficoms
scas
mov
das
and
pusha
xor
push
fimuls
jb
test
lcall
xchg
adc
outsb
pushw
push
popa
cwtl
inc
pop
or
push
sbb
scas
or
loop
loopne
mov
call
fs
add
push
inc
test
sbb
xchg
scas
pop
stos
insl
sub
cmp
mov
pop
ret
push
xor
push
push
jecxz
jl
sbb
sbb
fwait
or
inc
sub
mov
leave
pop
fldl
sub
push
sbb
jg
out
xor
in
add
pop
add
add
push
cli
iret
sbb
inc
es
idiv
sbb
or
push
push
push
push
sub
mov
mov
add
mov
add
enter
push
jo
sub
sbb
and
jb
fcom
xor
sbb
and
mov
xor
inc
mov
inc
mov
enter
jo
icebp
xchg
addb
rclb
daa
adcb
ljmp
or
das
jo
and
pop
push
xlat
and
dec
bound
xlat
rcr
mov
test
push
and
sbbb
sbb
adc
stos
mov
movsb
orb
imul
or
lods
and
cli
clc
inc
std
ljmp
inc
test
pop
mov
lcall
adc
negl
cs
add
dec
add
adc
movsl
js
mov
mov
xchg
mov
cmp
xor
mov
pop
push
sbb
add
xor
inc
jmp
rcrl
sub
lcall
shr
mov
sbb
lcall
jb
cmp
arpl
add
pusha
adc
xor
subl
test
in
sbb
push
hlt
add
add
adc
and
enter
sbb
ret
pop
adc
mov
cmc
inc
scas
adc
pop
jecxz
lea
in
movsl
stos
or
rclb
jno
or
adc
mov
xor
cmp
popa
mov
xor
inc
bound
xchg
test
icebp
es
jg
insb
ljmp
into
mov
dec
iret
mov
movsl
adc
das
add
ret
xor
hlt
cmpsb
push
aas
aaa
sar
push
sbb
popa
sbb
pop
aad
cmpsl
je
and
lds
movsl
sbb
push
inc
in
adc
repz
loopne
stos
add
rcrl
lcall
sbb
jo
mov
mov
or
and
inc
in
sub
rolb
inc
or
xor
call
jo
rclb
sbb
popf
arpl
les
in
xor
pop
xchg
inc
lcall
movsb
icebp
cmpsb
or
push
or
gs
stos
stos
add
xor
pop
pop
xor
repz
pop
cwtl
ds
or
adc
ret
movb
mov
pop
mov
inc
mov
and
mov
les
repz
and
add
jg
push
aam
loop
mov
sub
loopne
sub
add
add
push
or
popa
stos
dec
pop
or
sbb
ret
mov
in
notb
or
icebp
pop
insl
sbbl
or
jno
add
adc
mov
or
or
or
push
test
inc
icebp
add
cmp
leave
fdivrs
push
pusha
or
push
clc
add
inc
jae
scas
ja
mov
push
mov
enter
or
sub
mov
call
or
cmp
mov
or
divb
into
inc
in
sbb
xchg
xor
icebp
and
inc
popa
addb
pop
ret
and
or
and
pop
sbb
in
pop
xor
push
lea
cmp
out
cmp
mov
sub
rorb
pusha
jo
dec
push
loope
cli
sub
inc
pop
sbb
adcb
pop
jo
adc
cmpsb
sbb
les
add
sbb
add
mov
shll
rclb
test
inc
and
out
dec
sub
sub
pop
add
mov
test
lods
adc
push
jecxz
cmp
cwtl
dec
rcrb
call
cmp
popf
sub
mov
call
adc
xchg
insl
mov
aas
adc
adc
xor
push
pop
adc
int3
aas
pop
push
xchg
mov
cli
xor
cwtl
push
xor
push
or
lock
sbb
sbb
push
push
cmc
inc
push
rcll
pop
or
pop
and
add
in
pusha
lods
mov
inc
dec
out
rolb
xchg
out
fsub
sub
pop
mov
push
cmp
lret
or
pop
test
shrl
push
rolb
inc
push
add
mov
sbb
add
aam
lock
fisttpl
jge
outsb
lock
aam
inc
xor
lea
sti
scas
mov
xor
std
dec
adc
ficoml
decb
add
lds
inc
daa
sub
push
add
sub
lds
sti
cmp
add
or
in
push
pop
or
mov
mov
fxch
ljmp
ffree
cmp
inc
rclb
lret
mov
rorb
mov
sub
dec
shr
inc
cwtl
push
sbb
pop
sbb
pop
sti
xchg
ret
lock
xor
aad
push
mov
jb
pop
push
mov
sub
ja
roll
subw
pop
orl
add
aad
fs
inc
sbbl
lcall
lea
daa
push
jae
test
cmp
xchg
mov
sbb
xor
pop
sbb
mov
or
icebp
cmp
stos
or
shll
push
outsl
cmpsl
inc
push
add
push
xchg
in
movmskps
jl
push
cmp
mov
lock
mov
sbb
subl
push
lods
mov
orb
adc
test
jb
cmp
es
std
or
and
push
xchg
mov
or
dec
icebp
xor
aad
lcall
push
cmpl
jg
sbb
sarb
adc
push
out
mov
and
scas
inc
lea
mov
jo
sbb
adc
mov
xor
test
pop
or
xor
sbb
repnz
and
sbb
mov
mov
pop
rcll
add
rolb
mov
add
pop
je
jnp
pop
jb
pop
mov
add
add
jo
pop
or
mov
mov
lock
or
pusha
in
jl
mov
jbe
sub
orl
mov
dec
sbb
mov
mov
push
fucomip
and
in
xchg
push
cmp
xchg
fistpl
cltd
dec
adc
jbe
cmp
dec
scas
add
push
sub
inc
add
cli
pop
std
push
cmpsb
data16
add
into
push
out
inc
jnp
or
inc
cmp
adc
or
sub
add
rorb
popf
test
pop
xchg
loopne
inc
sub
inc
test
movb
mov
jmp
loop
outsl
adc
rorl
std
mov
sbb
loop
push
adc
mov
or
sbb
mov
cmp
sbb
sbb
push
scas
mov
add
adc
mov
add
inc
adc
jb
aad
xchg
or
pop
cmp
out
or
mov
stos
or
mov
lods
shrl
xchg
andb
enter
or
dec
adc
adc
mov
sbb
inc
jae
sub
sahf
add
inc
stc
mov
xorb
xor
adc
loope
lcall
orb
fsubrs
wrmsr
sub
mov
and
fwait
cwtl
adc
in
inc
pusha
subb
add
pop
mov
or
add
or
addl
das
sbb
mov
inc
test
or
or
or
pop
add
xor
ljmp
or
push
shrl
push
and
or
adc
rol
out
add
js
fists
gs
xor
jo
mov
inc
or
out
or
sub
fs
xorb
enter
or
test
mov
push
or
sbb
adc
xor
clc
outsb
or
xor
repz
push
sub
and
mov
sahf
or
mov
mov
add
das
mov
or
test
adc
das
mov
rclb
loopne
and
stos
sbb
sub
or
mov
andb
mov
lock
hlt
cld
cmc
mov
stc
jg
cmp
sbb
push
adc
push
test
mov
jo
loopne
mov
pop
mov
sbb
shll
cmp
jo
add
xor
and
push
pop
or
rolb
add
cli
jo
sbb
sub
sub
ror
lock
dec
xor
rcrb
mov
add
push
bound
adc
out
jp,pt
movsb
sub
xor
jmp
add
sbb
loop
sbb
rcrl
add
test
adc
sbb
int
mov
jno
fcoml
inc
add
push
inc
and
push
sbb
lods
push
jg
add
leave
push
xchg
loop
push
adc
bnd
xor
arpl
ret
mov
int
add
pop
push
pop
call
mov
fdivr
jne
sbbl
ljmp
test
push
stos
cs
and
leave
mov
add
pop
fisubrs
push
nop
fwait
push
js
add
sub
add
jecxz
sbb
adc
mov
lcall
jo
mov
shlb
call
cmp
sbb
mov
push
ljmp
or
call
jae
clc
stos
mov
cmpsb
pop
cmp
xor
push
or
xchg
inc
and
ret
lods
ss
or
inc
movsl
loopne
cmp
jb
pop
mov
mov
and
decl
mov
inc
movsl
push
inc
cmp
cmp
ret
sub
lds
cmp
add
insb
mov
ss
push
push
mov
scas
push
mov
cmp
or
mov
cmc
mov
and
mov
or
or
dec
mov
push
sub
into
adc
in
and
adc
fs
je
stos
ds
pop
mov
mov
str
mov
mov
xchg
int3
or
cmp
stos
xchg
ljmp
mov
aad
shll
lea
and
lock
fidivrs
or
inc
shll
hlt
mov
and
add
cmpsb
push
push
mov
mov
sub
cmp
sbb
dec
les
sbb
xchg
or
enter
decb
inc
stos
sbb
jo
rorb
lret
test
scas
and
mov
sbb
cmpsb
enter
inc
jmp
inc
loopne
or
sbb
sarb
out
ret
xor
clc
js
or
push
push
shrl
pop
xchg
decb
repnz
cmpsb
loop
or
push
pop
xchg
or
subb
push
gs
aad
ds
sbb
add
stos
outsb
pop
push
xlat
or
jns
push
sbb
xchg
jmp
xor
bound
pop
inc
enter
and
rorb
imulb
ret
sbb
jne
movaps
inc
in
in
out
jp
adcb
mov
mov
movmskps
or
scas
movsb
pop
or
call
icebp
and
push
cltd
or
stos
mov
adc
push
mov
fstps
adc
xchg
and
sbb
cs
dec
mov
cmpsb
jb
add
mov
add
aam
jo
imul
sbb
movsl
stc
add
and
sub
aad
sbb
stc
adc
pop
mov
dec
rcrb
inc
mov
mov
mov
cmp
bound
push
inc
add
and
mov
add
add
mov
fs
inc
dec
push
out
sbb
add
mov
je
inc
dec
add
das
ljmp
push
and
xor
das
add
aaa
test
rolb
add
ljmp
lock
pop
and
js
leave
daa
rolb
push
sbb
and
push
nop
mov
lods
mov
cltd
and
icebp
xchg
push
jnp
cmp
test
mov
xchg
jmp
es
mov
lret
ret
or
test
jg
inc
mov
push
test
push
or
ljmp
aas
mov
push
pop
testb
mov
or
les
fwait
jne
sbb
adc
push
je
std
enter
vandps
pop
test
loop
jo
dec
adc
add
enter
xor
ret
lds
orb
stc
sbb
insb
outsl
push
aad
or
adc
aaa
push
dec
movsl
adcb
add
fwait
mov
mov
or
call
cltd
out
addl
mov
into
jb
dec
inc
adc
push
push
movsb
data16
and
pop
xor
mov
ds
roll
in
vmovaps
dec
adc
pop
or
jae
mov
bound
or
icebp
add
in
les
subb
inc
lret
mov
pop
adcb
test
jae
sbb
leave
icebp
sbb
mov
xor
adc
mov
das
adcb
scas
data16
daa
pop
xor
ds
adc
lock
loopne
cmp
adc
xor
xchg
loopne
gs
fildll
push
or
out
cmp
icebp
dec
dec
test
mov
leave
xchg
push
pop
and
insl
adc
add
add
roll
subl
imul
sbb
sbb
mov
inc
stos
dec
xchg
in
xchg
inc
mov
pop
inc
push
icebp
and
add
sahf
pop
sbb
incl
xor
push
xchg
inc
in
or
pop
inc
or
jb
jmp
sub
adc
mov
inc
mov
sahf
jecxz
call
inc
je
push
fs
aad
add
pop
or
sbb
push
xchg
pop
mov
aam
push
push
add
push
lcall
pushf
mov
sbb
add
popf
inc
xchg
jp
dec
mov
adc
inc
or
lret
or
int
icebp
push
shrl
xor
cs
leave
jb
mov
and
push
enter
shl
call
insb
shrl
rclb
out
das
fildll
mov
xor
movsl
outsl
sbb
ja
and
xchg
xchg
jnp
xchg
add
dec
rcll
mov
jo
out
push
dec
add
scas
outsl
aaa
loopne
xchg
iret
xor
or
adc
lds
or
xor
add
adc
add
push
mov
popa
lcall
inc
inc
mov
cmpsl
daa
pusha
ffreep
pop
dec
xchg
sarb
sbb
repnz
inc
out
push
xorb
add
bound
les
addr16
push
and
xchg
pop
inc
fsubs
and
shlb
test
and
sbb
data16
pop
in
adc
inc
mov
jle
outsb
cmp
out
add
das
stc
or
or
mov
lods
data16
pop
dec
test
shr
adc
ficoml
sbb
loopne
testl
cmp
mov
shrl
int
mov
rorb
call
out
mov
mov
inc
sub
icebp
stos
jb
arpl
push
adc
into
add
cmp
sub
mov
dec
pop
daa
pop
xorb
cmpsb
push
mov
sub
sub
cmove
inc
aaa
push
and
decb
push
mov
and
push
inc
cmc
loop
push
shrb
push
pop
push
lea
mov
push
pop
mov
xor
xor
sub
dec
das
or
cmc
test
mov
mov
int
faddl
stos
pop
push
sbb
adc
adc
xchg
loope
pusha
bound
enter
mov
mov
lock
pop
push
sbb
cwtl
xorb
push
sub
subb
adc
test
sbb
adc
loop
mov
pusha
shlb
nop
xor
aam
aas
cmpb
xor
jecxz
adc
jle
mov
mov
add
loopne
adc
jnp
mov
and
in
mov
aam
aad
mov
sbb
test
fstps
mov
mov
dec
cmp
leave
or
add
pop
ljmp
inc
push
jno
adc
push
sbb
push
xchg
ljmp
inc
daa
push
add
push
add
sbb
jmp
les
jl
pop
mov
nop
mov
add
testb
xor
jp
jmp
add
insb
add
jo
push
xor
test
push
adc
jl
xor
aaa
push
fiaddl
js
adc
adc
aad
dec
jns
xchg
push
rcrb
test
mov
and
xchg
sub
pop
jne
add
add
adc
or
sub
add
loopne
pop
int3
jmp
push
xchg
lods
or
fs
mov
addr16
popa
loope
loopne
aad
sub
popa
mov
jae
sarb
cmp
xchg
mov
add
pop
sbb
ret
out
ficoms
xor
cmc
jg
adc
fs
cmp
lahf
xor
inc
andps
pop
push
mov
mov
cmpsl
and
outsl
xor
fs
outsl
cli
jne
ret
xchg
mov
and
fstpl
push
mov
add
loop
test
and
dec
dec
push
and
cmc
push
mov
push
push
mov
sbb
pop
add
loope
sbb
sbb
mov
adc
inc
push
rolb
or
scas
mov
into
out
inc
scas
xor
notb
adcb
inc
cwtl
ja
jo
rcrl
mov
adc
popa
pop
sub
push
scas
push
inc
and
or
push
mov
sub
mov
adc
xchg
jnp
or
enter
les
xchg
cmp
xchg
adc
in
add
mov
mov
das
cmp
leave
sub
loop
and
cmpsl
and
fisttpll
popf
adc
enter
xchg
mov
push
test
pop
mov
inc
dec
div
mov
jecxz
push
cmp
out
pop
addb
call
nop
orl
hlt
add
lock
ret
xor
daa
mov
adc
orl
mov
and
mov
lcall
and
lods
sbb
jnp
push
rcll
addl
mov
test
cld
enter
mov
insl
addr16
test
adc
mov
mov
cs
push
ja
aad
push
inc
mov
dec
and
test
aas
les
adc
add
cwtl
or
and
pop
icebp
aam
ja
lahf
sub
ret
mov
and
notb
mov
pop
add
adc
mov
or
adc
mov
add
movsl
lcall
movups
sbb
leave
jae
add
scas
mov
push
push
loope
push
adc
ja
addb
adc
push
pop
cltd
sub
mov
cmpsl
loopne
test
mov
outsl
mov
and
and
sbb
jmp
push
rolb
xchg
shrl
pop
or
sbb
push
sbb
pminsw
sub
popl
inc
test
ffree
adc
pop
cmp
xchg
test
dec
pop
cmp
dec
inc
or
ror
adc
cld
xchg
dec
test
cmp
or
ret
leave
lds
fbld
lock
adc
pop
sub
add
and
mov
adc
addr16
lret
sarb
push
pop
mov
pop
in
icebp
push
pop
rcrb
adc
int3
dec
dec
aam
or
lret
xor
lea
pop
dec
or
mov
scas
hlt
adc
or
shll
outsl
push
add
and
xchg
push
test
mov
or
push
push
jae
add
out
mov
cltd
push
int3
adc
leave
pop
mov
roll
repnz
cs
xor
stos
lcall
inc
push
adc
mov
mov
sub
iret
mov
cmpl
mul
cmp
lods
lret
sbb
or
jbe
push
or
loope
sbb
cmp
adc
mov
lret
call
sub
mov
inc
xor
subl
adc
scas
push
js
jo
call
inc
lea
or
jb
add
lock
iret
adc
sub
push
loop
sbb
mov
adc
cmp
cmp
cs
add
push
push
adc
mov
leave
or
in
fwait
in
cwtl
xchg
call
jo
push
rclb
loop
mov
popa
call
into
sbb
add
mov
jne
sbb
je
cs
sbb
icebp
push
or
jecxz
inc
pushf
roll
push
in
stos
dec
ret
pop
in
xor
adc
je
andl
sub
or
loop
aas
xchg
mov
pusha
push
xchg
fwait
adc
inc
jae
in
add
dec
movsb
push
div
cmpsb
mov
daa
adc
jne
mov
dec
sarl
push
push
sti
int
push
add
or
push
cmp
and
repnz
pop
xor
mov
add
fisttpll
outsl
mov
bound
cmp
mulb
push
addl
inc
sti
jns
add
sbb
sbb
mov
leave
jmp
pusha
and
xlat
shrb
inc
push
jno
jb
mov
icebp
push
jnp
adc
lods
or
rcll
mov
dec
movsb
add
repz
add
dec
test
aad
mov
clc
and
decb
jp
outsb
or
mov
sbbl
adc
test
leave
xor
and
dec
xchg
pusha
adc
adc
fwait
sub
loope
jnp
jmp
adc
scas
test
push
cmp
mov
inc
mov
shlb
pop
xor
fsub
out
adc
shr
push
mov
dec
mov
jmp
movl
add
pop
cld
stc
repz
fsubs
pushf
int3
add
cmp
push
lahf
aas
jg
daa
repnz
and
retw
jno
stc
repz
dec
sbb
add
mov
insb
outsl
xchg
out
jg
cld
stc
imul
std
das
loopne
pop
nop
xor
out
lahf
loop
push
jo
pop
mov
aad
jg
cld
stc
add
jns
add
xchg
xlat
adc
fistps
iret
lahf
aas
and
push
cmp
sub
stc
repz
xchg
sub
mov
stos
hlt
dec
in
ror
aas
jg
sub
cs
jb
adc
lock
inc
mov
punpcklbw
cld
inc
out
lahf
aas
cltd
fdivrl
and
push
and
lcall
repz
insb
lcall
pusha
pop
out
iret
lahf
aas
jg
lahf
pop
jmp
jb
movsb
std
push
scas
xor
out
mov
es
testl
out
insb
jnp
and
mov
leave
xchg
push
jbe
lahf
aas
jg
shr
add
movsb
les
cld
stc
repz
cmp
sbb
adc
push
pushf
movsl
fcompl
xor
dec
pop
test
cmpb
xchg
enter
lahf
pop
add
lret
xchg
jns
out
lahf
aas
cltd
mov
scas
sahf
xchg
cwtl
mov
xchg
test
cld
stc
repz
loope
pop
xchg
sbb
mov
insl
stc
lahf
inc
jbe
stc
jbe
push
mov
xor
aas
jg
cld
scas
std
sub
gs
xor
data16
out
lahf
or
fucomp
jae
das
or
es
mov
cld
stc
addl
add
pop
cmp
test
lahf
aas
lcall
stos
jnp
push
nop
cld
stc
repz
mov
push
das
lock
sub
cmpsl
iret
lahf
aas
jg
repnz
xor
stc
repz
push
add
ficomps
jl
ret
scas
mov
aas
jg
and
xor
pop
mov
aaa
fwait
mov
fadd
cmc
mov
movsl
sahf
ljmp
aas
jg
cld
cltd
jnp
outsb
or
add
ret
mov
repz
lahf
js,pn
mov
loope
mov
sarl
cld
stc
xchg
mov
test
ljmp
dec
xor
or
adc
imul
jg
lods
push
mov
pusha
add
cld
stc
repz
mov
xchg
cmpsl
mov
repnz
xchg
lahf
aas
jg
push
cmpsb
jle
mov
aas
jg
cmc
fnstsw
adc
nop
repz
lahf
mov
adc
inc
jmp
mov
repz
popf
loop
out
sbb
iret
lahf
aas
ret
sub
push
inc
jmp
push
cld
stc
repz
jp
adc
sub
pop
mov
iret
lahf
aas
jg
add
cli
mov
daa
inc
adc
stc
repz
cmp
sbb
fcmovnbe
or
lahf
aas
jg
mov
mov
js
lcall
repz
dec
cmp
mov
int3
stos
lahf
lret
jnp
push
aas
jg
cld
clc
lods
pusha
pusha
pop
push
mov
push
nop
mov
repz
lahf
cmp
or
jg
cld
stc
mov
mov
in
adc
mov
out
lahf
aas
jnp
dec
push
je
out
pusha
dec
adc
pop
in
and
aam
jg
fwait
movsl
bnd
cld
stc
pop
sbb
scas
aaa
pushl
jbe
pusha
mov
cmpsl
out
lahf
aas
sub
mov
popa
mov
stc
repz
xchg
fisubrs
lcall
fists
lahf
aas
jg
arpl
mov
dec
js
xchg
aas
mov
lds
cmpl
mov
enter
xor
pop
aad
das
and
cld
stc
repz
mov
lahf
sar
movsl
in
jb
dec
inc
or
iret
lahf
aas
jg
and
fcmovu
loope
xor
lahf
cs
stc
cld
stc
repz
pop
sahf
ds
push
stos
stc
pop
lcall
jg
ja
out
and
xor
repnz
int
stc
repz
and
sbb
push
xchg
arpl
jg
cld
add
mov
adc
mov
fimuls
stc
push
and
mov
cld
rorb
loope
negl
dec
lahf
ds
jg
ljmp
lahf
mov
and
jg
iret
lahf
aas
add
adc
sbb
cmp
cld
stc
repz
or
sar
cli
jmp
lock
adc
iret
lahf
aas
jg
add
stos
sahf
lds
repz
inc
orb
add
inc
popf
nop
mov
xchg
cmp
sub
sub
repz
shlb
add
lcall
jg
cld
imul
cltd
mov
addr16
lahf
xor
fdivs
xorb
cmp
jg
cld
stc
rcll
adc
adc
dec
mov
shr
nop
push
fsin
decb
add
sub
fwait
mov
out
int3
dec
loopne
push
jae
out
pop
iret
lahf
aas
jg
sahf
or
push
rol
in
sti
shlb
push
cld
stc
repz
shrl
enter
cmp
push
xor
fistps
mov
pop
call
inc
stc
repz
push
mov
aaa
cmpsl
pushf
cmp
ficomps
sarl
jg
cld
or
stc
jno
xchg
into
test
iret
lahf
testl
jge
call
into
pop
fldz
sub
sti
mov
mov
xchg
iret
lahf
aas
dec
cmp
repnz
movl
inc
fisttpl
fsubs
sbb
lahf
aas
jg
pop
mov
stos
jo
push
repz
pop
cli
mov
inc
int3
push
ja
inc
add
mov
mov
cmp
mov
iret
mov
int
mov
xor
pop
xchg
cmpsl
jnp
jle
stc
les
mov
das
cmp
mov
into
jno
daa
sbb
js
jg
cld
stc
push
outsl
and
push
cmp
sahf
arpl
iret
lahf
aas
icebp
lea
dec
mov
rorb
xchg
ds
stc
repz
mov
jmp
mov
cmpsl
popa
jo
repz
mov
jp
orb
jg
cld
stc
fdivp
dec
loopne
enter
aam
push
repz
iret
lahf
aas
sub
cmpb
int3
push
mov
cld
stc
repz
dec
adc
ds
nop
aaa
int
gs
outsb
xor
lahf
aas
jg
mov
cmp
jecxz
cmpsb
dec
pop
cld
stc
repz
cmovle
push
fnstcw
aad
sbb
lahf
aas
jg
lock
adc
icebp
xchg
das
push
stc
repz
cmc
add
mov
or
loope
lahf
aas
jg
notl
rcrb
mov
pop
add
inc
das
cld
stc
repz
mov
or
or
inc
jne
aas
jg
pop
push
fldl
add
popa
test
cld
stc
xlat
sbb
pop
or
fiaddl
je
iret
lahf
aas
jg
pop
jp
ret
stc
mov
in
cld
stc
repz
push
cmp
or
pop
aad
and
fbstp
aas
jg
push
mov
mov
mov
xchg
stc
repz
ljmp
push
xchg
adc
sbb
cld
inc
cmp
add
repz
imul
sub
ret
sub
in
roll
and
cld
mov
and
hlt
popa
out
out
aas
xchg
orb
inc
add
ds
stc
repz
add
xchg
cmc
cmp
lcall
mov
jecxz
pop
dec
int3
inc
jg
xchg
fldcw
jg
cld
stc
leave
les
cmc
xor
cmc
inc
mov
and
iret
lahf
aas
xchg
adc
sbb
cld
stc
repz
and
mov
iret
lahf
aas
jg
stos
je
inc
mov
jmp
repz
push
cmp
js
ficoml
into
mov
js
aas
jg
fstpl
fnstsw
test
das
pop
repz
stc
mov
fisttpl
movl
cld
jne
test
push
push
clc
adc
rep
mov
sbb
repnz
sbbl
iret
aas
jg
cld
xorl
loopne
enter
pop
dec
cmpsb
dec
or
out
lahf
xchg
outsl
bnd
xlat
imul
cld
cld
stc
lahf
lds
dec
test
rcl
loopne
sti
rcll
fcomip
inc
cmp
mov
sahf
aas
jg
xchg
lahf
jecxz
xchg
lock
pop
push
jo
lahf
aas
lcall
xchg
pop
dec
xor
hlt
mov
repz
inc
push
das
cmp
bnd
push
mov
mov
sarb
cld
pop
add
lcall
xor
fcoms
pushf
cmp
xchg
jg
cld
stc
pop
sub
roll
mov
andb
pop
cmp
mov
scas
jno
cld
stc
rep
rolb
jle
push
imul
aas
jg
jno
lods
inc
jne
leave
stc
push
inc
xor
repnz
into
adc
loope
cmp
jle
lahf
jg
cld
addr16
inc
cmpl
and
repz
sbb
inc
dec
popf
shl
adc
cld
aaa
lds
fcomps
cmp
shr
mov
cld
stc
repz
pop
shll
jns
mov
aas
jg
xor
sbb
inc
pop
divb
stos
imul
mov
int
pop
aas
jg
adc
ret
jns
push
inc
mov
lahf
jg
and
xlat
addr16
std
scas
dec
cmp
stc
repz
arpl
outsl
or
icebp
mov
xor
les
mov
or
pop
mov
jb
es
cld
in
out
pop
mov
and
jns
js
outsl
arpl
mov
in
insl
sarl
dec
pusha
popf
in
cld
stc
clc
insb
bound
andl
imul
lahf
aas
imul
pop
pop
cld
stc
repz
pusha
cmpsl
xchg
and
or
and
aad
mov
test
imul
mov
daa
or
mov
inc
mov
pop
mov
mov
mov
test
push
pop
stos
ja
inc
loopne
mov
pop
cmp
out
ret
hlt
lcall
nop
call
jle
sbb
aas
aaa
jecxz
movsl
frstor
addl
sub
jg
cld
stc
loopne
push
jb
test
push
sahf
sbb
jns
pop
xlat
push
ss
inc
insl
push
int
cld
stc
repz
ret
inc
out
fcmove
mov
xchg
fwait
mov
jg
aaa
or
or
cmpsl
sbb
stc
repz
addb
cltd
js
jns
pop
adc
jg
leave
or
dec
xchg
push
dec
inc
out
inc
xchg
iret
sub
adcb
push
movsl
pop
adc
or
xchg
stc
inc
aaa
outsl
fidivrs
inc
cmpsl
mov
add
mov
out
fwait
mov
scas
pop
clc
inc
add
inc
ret
out
pop
es
fidivrs
cmp
lahf
sbb
dec
jg,pt
stc
repz
fisttps
and
mov
push
xor
jg
cld
xor
cmp
pop
cltd
pop
xor
adc
out
lahf
lcall
subl
jg
cld
stc
xlat
sbb
into
push
xchg
fcom
cmp
cmp
aas
or
push
pop
or
lahf
aas
ljmp
repnz
lds
pop
or
stc
repz
in
jecxz
pop
clc
add
lahf
or
lahf
xchg
xor
mov
push
jno
cld
stc
rcl
pusha
push
dec
xor
sarb
fmul
lahf
aas
jg
mov
movb
das
cld
stc
repz
pop
cld
sub
les
stc
mov
adc
leave
push
popf
jp
aas
jg
cld
test
adc
jne
or
xchg
cmp
lahf
addb
cli
fcompl
cwtl
xor
cld
stc
sub
inc
push
dec
into
aam
mov
cld
lahf
stc
xrelease
movl
jg
cld
jno
sbb
xchg
jb
fcoms
lahf
out
call
sbbb
cld
stc
jne
push
dec
arpl
inc
inc
movb
xchg
or
iret
lahf
aas
bound
xor
bt
idiv
cld
stc
repz
test
repnz
dec
cmpsb
fadds
fsubp
or
arpl
cld
mov
sbb
popa
add
mov
fwait
aaa
outsl
ficoms
jbe
lret
or
shll
pop
sub
repz
or
cmc
mov
xor
xor
outsl
fidivrs
mov
loop
sub
enter
mov
mov
out
lahf
aas
pop
xor
scas
stos
sub
dec
fcmovb
add
mov
dec
sub
mov
aas
aam
inc
popa
out
lahf
aas
loop
pop
mov
jmp
mov
repz
inc
cmc
mov
mov
jl
xrelease
sub
cmc
imul
cmp
enter
clc
loope
lcall
xchg
adcb
iret
int
fdivr
mov
fwait
aaa
outsl
faddp
in
xor
jnp
jecxz
shl
js
out
arpl
insl
cmpsl
test
dec
dec
icebp
jmp
mov
inc
mov
adc
sub
pop
cmp
aaa
outsl
fiadds
pop
fistpl
jg
lret
sarl
int
jne
push
int3
pop
inc
xor
pop
cmp
fidivrs
mov
pop
repnz
cld
stc
repz
lahf
setnp
iret
push
std
cmp
daa
rep
jns
mov
or
and
in
sti
mov
cld
stc
popf
flds
movsb
roll
jns
outsb
ficoms
jne
xchg
cmp
outsl
mov
out
inc
adc
cmp
out
fwait
test
sahf
cs
fs
adc
jns
push
cli
lret
jge
mov
movsb
ret
outsl
fidivrs
inc
and
stos
jb
cmp
or
out
fwait
das
jl
mov
mov
arpl
aas
push
mov
sub
pop
push
out
stc
repz
push
adc
out
sub
cli
ret
or
jg
cld
or
and
push
fdiv
out
lahf
in
jecxz
xchg
shll
mov
cld
stc
push
pop
fisubrs
rcr
icebp
addb
inc
adc
rcrb
leave
mov
jp
test
test
push
cmpsl
lea
sub
adc
lahf
aas
jg
addl
mov
popf
js
out
push
jmp
dec
cmp
push
test
out
aas
lahf
add
and
dec
iret
test
push
loop
shrb
sub
cmp
sbb
jle
push
cmpsb
xlat
and
xor
add
dec
lds
push
jp
out
push
mov
mov
shll
aaa
cmpsl
cmp
cmpsb
call
jne
cmp
xchg
out
repz
and
decl
repz
mov
bound
push
xchg
movsb
sbb
lahf
aas
jg
add
push
mov
rcll
and
test
stos
mov
jle
fcmovnu
sub
inc
jle
push
xchg
popa
mov
test
repz
lahf
lahf
lcall
and
mov
jg
cld
stc
and
xor
pop
jb
in
xor
jno
daa
out
daa
lahf
aas
andb
std
jg
scas
xor
cld
stc
repz
pop
sub
xchg
lock
adc
pushf
cli
ja
push
pop
xchg
inc
rcr
outsl
add
aam
aaa
outsl
fidivrs
and
pushf
pop
mov
repz
fwait
mov
mov
mov
int3
loope
iret
xchg
and
fidivrs
cmp
outsb
sti
xor
fwait
sahf
xchg
js
mov
test
pop
fisttps
mov
sub
aaa
mov
cwtl
cmp
out
shlb
mov
adc
dec
sub
popf
inc
cld
loop
movsl
push
shll
stos
fsin
cld
stc
xlat
out
xor
fldt
clc
jne
lahf
aas
jg
jmp
dec
lock
xor
je
jl
in
stc
repz
or
push
sahf
push
xor
fdivrl
out
cld
or
pop
call
pop
icebp
aaa
cmc
js
adc
in
push
and
jg
cld
xor
pop
andb
repz
lahf
xchg
push
cmp
adc
jns
cs
dec
xorl
inc
xchg
shlw
sub
imul
stos
outsb
sbb
jns
out
lahf
jae
mov
rolb
sub
mov
divl
hlt
xchg
pop
mov
cld
stc
repz
clc
jns
jno
arpl
sub
jns
aas
jg
mov
cwtl
mov
negl
in
pmulhuw
add
pusha
push
lock
jne
dec
das
jg
cld
stc
fsubrl
jmp
push
xor
idiv
test
aas
xchg
xorb
leave
inc
xchg
mov
cld
stc
repz
scas
inc
insl
inc
mov
pop
xor
push
leave
sub
add
jb
mov
pop
mov
gs
stc
stc
repz
lock
pop
in
pop
inc
mov
push
add
ficompl
dec
imul
repz
cmp
cli
test
cltd
jae
adc
inc
outsl
fidivrs
int3
dec
inc
mov
jg
js
gs
out
fwait
aaa
fsin
mov
mov
jns
out
cwtl
jns
dec
addr16
cmp
movsb
arpl
jg
iret
outsl
icebp
negl
int
or
cld
stc
repz
pushf
pop
mov
adc
out
mov
lahf
aas
jg
or
xchg
mov
mov
cs
xor
movsb
push
lret
repz
cmp
ret
les
xchg
in
idivl
cld
stc
dec
stos
jle
pop
jnp
pop
lods
pop
jmp
into
out
lahf
aas
popa
aad
sub
push
xchg
cld
stc
repz
shr
scas
in
clc
adc
mov
enter
out
fmull
jge
data16
jl
or
cld
stc
repz
stc
dec
das
sbb
pop
pop
cmp
xor
lahf
aas
jg
lret
rol
and
jae
push
or
cld
stc
repz
popf
sbb
inc
inc
subl
push
ficoms
stc
dec
xor
pushf
imul
pop
xchg
fwait
aaa
outsl
sbb
stos
loop
sbb
aas
jg
jnp
sbb
jne
xor
xchg
cmc
jle
movsb
arpl
repz
sub
loope
ljmp
mov
fsubrs
and
insb
sahf
fcmovbe
scas
xchg
aaa
outsl
fidivrs
jge
in
mov
sub
pop
fistpll
aaa
jg
inc
es
fstp
dec
or
repz
iret
pop
test
cmc
fdivr
mov
ficomps
fnstcw
pop
insb
orl
or
sbb
mov
and
jle
into
add
inc
xor
pop
jns
xchg
xor
mov
push
lahf
aas
jg
adc
jl
cld
decb
cmc
test
jmp
leave
cmp
dec
ftst
push
dec
jp
inc
dec
mov
inc
outsl
push
pushf
mov
mov
jb
iret
lahf
aas
aaa
push
mov
in
pusha
out
cld
stc
repz
stos
dec
rorb
es
in
xchg
lahf
aas
jg
mov
mov
fst
cld
stc
notl
test
aaa
or
cs
aas
jg
mov
aas
sbb
je
cmp
mov
iret
sub
loope
dec
scas
popw
pop
jg
cld
stc
jp
cmp
iret
add
and
aas
mov
bound
iret
fldcw
inc
mov
xor
fildll
int
add
or
arpl
cmp
das
cmp
add
lahf
aas
jg
mov
movb
jns
push
scas
fs
stc
repz
int3
aas
mov
mov
mov
dec
dec
std
lahf
aas
jg
xor
xor
xor
scas
adc
push
es
in
push
je
addr16
jg
sbb
cmp
lods
pop
aad
iret
lahf
aas
and
dec
add
cld
stc
repz
sti
mov
mov
dec
xlat
iret
lahf
aas
jg
sub
push
scas
cld
stc
repz
push
cmp
out
pusha
dec
adc
jno
test
jg
jo
imulb
inc
lds
testl
lret
int3
shl
adc
or
push
rcr
jns
sbb
arpl
je
jnp
xchg
loop
repnz
mov
aaa
outsl
and
inc
mov
or
xchg
jg
in
addb
mov
mov
out
lahf
aas
or
pop
ds
pop
cmp
sarb
repnz
dec
and
mov
pop
mov
inc
rolb
fcoml
dec
sbb
mov
iret
lahf
aas
pop
jne
jp
lock
cwtl
pop
cld
stc
repz
es
mov
cltd
movsb
shlb
jg
add
mov
jg
mov
and
leave
jmp
sbb
sbbl
jns
cld
xorl
iret
lahf
mov
sbb
jp
scas
mov
cld
dec
add
mov
call
mov
pop
in
mov
sbb
xor
inc
jno
faddl
push
push
xchg
jo
mov
out
fwait
aaa
out
xchg
aas
std
cmp
mov
mov
subl
sbbl
inc
outsl
repnz
ss
cli
mov
cltd
or
aas
mov
in
cwtl
sti
add
mov
adc
or
jno
jge
mov
out
xchg
js
sbb
hlt
cmp
cld
stc
repz
aad
mov
sub
aam
lahf
aas
jg
push
bnd
add
inc
lods
cmp
stc
repz
icebp
mov
add
cwtl
jp
jge
sbb
lds
lahf
mov
ret
stc
cltd
sbb
out
jmp
sub
pop
or
xchg
mov
cld
mov
fsubr
dec
pop
dec
int
outsl
mov
fistpl
out
out
fwait
lods
xchg
pop
sbb
dec
inc
ret
inc
mov
fidivrs
sbb
push
shl
ljmp
roll
xchg
inc
push
repz
fwait
ja
xchg
dec
daa
mov
enter
fidivrs
fcomps
in
pop
leave
lods
mov
xchg
and
test
mov
pop
xor
cld
mov
mov
adc
jp
mov
adc
push
mov
in
enter
stc
repz
mov
xor
fwait
insb
inc
dec
lahf
aas
jg
and
loopne
fistl
adc
stc
repz
mov
cmp
mov
jg
jo
inc
push
int
mov
add
push
stc
repz
xor
pop
or
test
arpl
inc
ja
repnz
stc
add
or
sbb
push
ss
fwait
sbb
ljmp
dec
stc
mov
outsl
fidivrs
mov
mov
insl
jo
clc
or
sbb
lcall
fists
xchg
fidivrs
mov
out
cmp
sbb
fwait
aaa
outsl
addb
xchg
xchg
xor
pop
repz
lret
test
xchg
jnp
mov
dec
mov
pop
daa
fwait
aaa
outsl
fisubrs
das
mov
xchg
js
jp
repz
pop
xor
xchg
xchg
dec
xchg
je
xor
outsl
fidivrs
outsl
ret
andl
int
rcll
or
adc
add
cmc
stc
mov
jns
push
insb
lock
call
insl
sbb
jp
out
fwait
aaa
movsl
fwait
das
push
pop
mov
cmp
imull
lods
mov
jge
data16
popa
int
aaa
outsl
movsl
clc
aaa
and
cs
js
outsb
cmp
adc
test
inc
cli
out
mov
aas
jg
xchg
int3
clc
push
xchg
jle
pop
js
mov
iret
inc
pusha
clc
fisttpl
lods
popf
mov
mov
test
sub
in
xchg
fwait
aaa
outsl
fisubs
jmp
pop
pop
rolb
repz
iret
je
orl
ret
aas
xor
arpl
std
fs
sbb
loopne,pn
fwait
or
push
or
xchg
pop
clc
enter
xor
dec
sub
lcall
pop
sub
enter
or
xlat
jo
aas
cmpsb
aas
and
call
or
mov
data16
ljmp
xchg
mov
jb
and
outsb
inc
gs
cmpsl
cld
stc
repz
xor
ffreep
mov
or
mov
cmp
aaa
add
ds
movaps
repz
fwait
push
jg
and
ss
sahf
int3
movsl
xchg
mov
mov
pop
adc
pop
test
std
out
fwait
aaa
jle
mov
jmp
mov
cmp
sahf
std
pop
addr16
push
addl
xchg
xchg
test
mov
mov
lahf
aas
jle
incb
cmpsb
inc
lret
mov
repz
xchg
in
pop
add
lahf
rcrl
cld
filds
jbe
push
aaa
stos
inc
fimuls
jne
out
lahf
jne
sub
mov
inc
dec
cmpsl
aas
jo
repnz
cmpsl
adc
shlb
out
lahf
inc
adc
lods
dec
pop
popa
sbb
cld
stc
push
fdecstp
rcrb
daa
loope
arpl
fwait
test
out
lahf
aas
jnp
push
lret
out
rcrb
fdivrs
add
cld
stc
repz
jecxz
sbb
push
inc
xchg
mov
iret
lahf
aas
jg
loopne
gs
sbb
cs
stc
repz
mov
push
movsb
jle
loope
push
dec
ret
lahf
aas
jg
addb
inc
push
xlat
imul
into
mov
out
outsl
int3
out
lret
pop
stos
das
mov
popa
cwtl
aas
jg
cld
into
aam
sub
or
xchg
repz
lahf
mov
or
add
dec
mov
cs
ja
or
fcmovne
pop
test
xor
add
repz
movsb
pop
cld
stc
repz
pop
aam
cmpsb
and
into
js
lcall
aaa
filds
fwait
out
inc
cld
out
jecxz
cld
stc
repz
add
bound
xor
xor
clc
xorl
lahf
aas
jg
pop
xchg
aaa
arpl
mov
stc
repz
xor
push
xor
cmp
sub
es
sbb
jge
aaa
outsl
fdivp
push
and
arpl
mov
jg
out
xlat
sbb
push
test
lahf
xchg
fisttpll
cs
mov
cmp
jg
cld
stc
adc
xchg
pop
lahf
gs
out
lahf
aas
adcb
pop
mov
add
inc
jl
cld
stc
repz
clc
dec
shlb
push
dec
bt
lahf
aas
jg
stc
xor
jmp
daa
sbb
add
cld
stc
repz
rcr
push
ret
or
mov
leave
std
dec
lahf
aas
jg
jmp
jno
je
cld
pusha
scas
iret
mov
sub
repnz
aad
pop
popa
sbb
cs
cld
stc
inc
cmp
adc
xchg
dec
xor
inc
xor
lret
ds
dec
repnz
cli
nop
imulb
insb
or
fdiv
mov
pop
xor
pop
repz
pop
aas
imul
aaa
xor
enter
cld
stc
sub
pop
test
dec
lret
lods
push
jbe
fldln2
sub
out
lahf
jmp
in
jnp
jg
sbb
cld
stc
xchg
dec
aam
js
cmpsl
push
leave
mov
popa
pop
cmp
iret
lahf
aas
pop
loope
sub
movsb
loop
pop
orb
repnz
repz
mov
shll
ja
dec
in
cld
stc
repz
jg
fisubs
lahf
or
xor
lahf
aas
jg
jecxz
les
xchg
mov
sbb
pushf
pop
xor
pop
stc
repz
pushf
scas
cmp
mov
pop
jl
dec
cld
fcmovb
push
enter
sub
ja
or
pop
push
xchg
pop
imul
or
adc
adc
cmova
pop
and
or
std
bound
adc
jae
fidivrs
ljmp
shr
xor
adc
int
aaa
outsl
cmp
loop
gs
rolb
std
mov
sahf
aas
mov
adc
lods
dec
scas
add
jne
push
push
add
inc
push
and
repz
enter
or
sbbb
addr16
aas
jg
and
jmp
repnz
dec
sar
out
mov
fdivrl
mov
cld
mov
and
jnp
or
lea
lea
in
iret
lahf
icebp
std
aaa
xchg
xor
stc
jge
adc
jl
dec
into
jne
jg
fwait
aaa
out
pop
dec
mov
and
fucomip
out
mov
cmp
cmp
stc
rdpmc
cmp
cld
inc
outsl
fidivs
xchg
xor
cmp
fwait
aaa
aam
movl
in
jns
sbb
sbb
pushw
and
std
cmp
xchg
mov
mov
out
data16
mov
mov
fwait
aaa
outsl
cmp
inc
xor
mov
xor
mov
arpl
aas
mov
fwait
aaa
outsl
fimuls
jae
mov
push
xor
test
out
inc
ljmp
loopne
imul
aaa
outsl
fidivrs
fwait
ljmp
sbb
int
or
pop
aas
jne
cmp
mov
jns
fstps
addr16
divl
out
fwait
aaa
adc
in
push
mov
xor
mov
iret
movsb
ffreep
lcall
inc
shrb
push
cmpsl
rorb
test
lahf
popf
sbb
repz
push
fimull
addb
loopne,pt
out
cwtl
lods
lahf
aas
sarb
xor
ret
negl
in
iret
adc
not
mov
pop
mov
jg
nop
and
sub
jp
pop
jl
push
out
jns
insb
pop
xchg
add
outsl
fidivrs
lcall
xchg
mov
clc
push
out
fwait
aaa
push
dec
leave
mov
sub
mov
bound
cld
mov
hlt
loop
nop
cmc
push
test
outsl
inc
xorl
repz
scas
mov
mov
loopne
cld
pop
test
outsl
fidivrs
jae
jmp
sbbb
test
repnz
fwait
sbb
cwtl
lods
xorb
and
int
inc
jo
sub
xchg
push
dec
fwait
aaa
outsl
xlat
jb
mov
push
push
inc
jns
push
loop
in
lahf
lahf
cli
popa
xlat
adc
inc
jne
inc
fidivrs
cmp
out
fwait
ja
add
lods
lods
cmp
and
test
mov
leave
mov
hlt
sub
aaa
inc
pop
into
dec
out
sahf
push
jae
repz
shrb
dec
inc
or
pushf
adc
mov
ret
into
and
and
loope
pusha
pop
out
fwait
aaa
ret
inc
mov
sub
stc
fidivrs
loop
insl
ja
mov
dec
fstps
cwtl
xchg
int
aaa
outsl
xor
stos
stos
fstl
fucomi
add
push
das
xchg
adc
sti
bound
fwait
aaa
outsl
fidivs
sahf
nop
mov
jae
jmp
xchg
jns
out
cmp
ficomps
and
fsubrl
push
out
mov
out
shr
sahf
adc
push
inc
ss
mov
dec
ja
aas
jle
cmp
and
cwtl
arpl
xor
dec
sbb
dec
cmp
fistps
mov
push
mov
push
sub
addr16
cld
shrl
jg
cld
pop
xchg
push
jbe
mov
out
sub
repz
lahf
push
nop
mov
pop
push
sbb
lods
mov
cld
stc
daa
imul
xorb
cmp
aad
ds
hlt
ds
dec
pop
sub
mov
lahf
aas
jg
or
popf
add
sbb
adc
push
lahf
aas
jmp
xchg
jmp
xor
popf
es
out
cli
decl
insl
mov
out
lahf
aas
cmc
popa
xchg
imul
mov
dec
cld
stc
repz
pop
mov
jecxz
push
pop
inc
imul
mov
lahf
aas
jg
jo
ljmp
xchg
out
fwait
ljmp
add
aas
test
fnstcw
iret
sbb
xchg
pop
add
pop
mov
pop
inc
outsb
and
filds
out
fwait
aaa
daa
in
dec
enter
push
sub
jns
mov
push
xchg
xor
fsubrp
enter
loope
cwtl
cmp
out
pop
rcrl
inc
mov
ret
std
sub
and
xchg
out
inc
ret
jecxz
mov
jbe
in
iret
lock
inc
orb
push
sbb
iret
outsl
fidivrs
add
push
or
push
inc
out
fwait
aaa
jmp
inc
push
mov
mov
sarb
adc
xor
arpl
fwait
aaa
outsl
mov
cmp
jmp
jb
xchg
rcll
imul
pop
pop
ss
outsl
fiadds
cmp
inc
ret
fldt
mov
fwait
aaa
gs
faddp
sbb
push
sar
mov
cs
or
cmp
fnstcw
dec
bound
shll
jb
outsl
ficoms
dec
ja
aad
mov
dec
repz
fcmovnbe
popa
sti
xchg
das
nop
aaa
mov
fidivrs
pop
adc
pusha
orl
fwait
aaa
out
movsb
call
xchg
das
mov
repz
mov
or
repz
insb
sub
das
push
cli
nop
test
cld
stc
xor
mov
and
xchg
jmp
ficoms
jmp
ss
lea
jecxz
repz
fwait
jbe
outsl
aas
in
std
fstl
lcall
mov
ret
add
sbb
stc
cmc
mov
aas
jle
xchg
inc
cltd
arpl
mov
add
xchg
repz
mov
out
cmp
jae
daa
push
inc
or
push
add
mov
inc
sub
out
xchg
int
aaa
out
scas
das
dec
mov
rcl
frstor
ret
add
mov
ja
insl
icebp
mov
mov
bound
mov
inc
xchg
hlt
xchg
add
repz
prefetchwt1
mov
push
adc
jle
aaa
outsl
fsubrp
js
mov
inc
pop
and
fidivrs
ja
stos
bound
or
mov
sti
mov
stc
xchg
hlt
jge
lahf
int3
inc
xchg
pusha
leave
out
fwait
aaa
movsl
inc
aas
mov
addr16
xchg
iret
mov
fprem1
nop
jae
xchg
push
imul
xchg
cld
stc
repz
inc
clc
pop
ret
fdivrp
jns
insl
int
cmp
aas
jg
mov
cmp
inc
cld
stc
rorl
push
dec
mov
cli
xor
lahf
aas
jg
xor
sahf
jne
repz
daa
pop
sub
enter
inc
push
imul
push
aas
jg
rorl
enter
jo
adc
or
leave
lahf
xchg
leave
inc
mov
enter
dec
rclb
mov
xchg
cli
enter
xor
imul
fwait
jle
or
dec
addb
fidivrs
dec
shrb
popf
xchg
insb
addr16
outsl
dec
mov
add
cltd
xchg
int
call
push
inc
mov
mov
js
aas
das
sahf
pop
dec
jle
aad
cmpsb
out
inc
or
jno
mov
aas
stc
cld
mov
fsubrs
popa
fnstenv
dec
out
lahf
jg
xchg
andl
paddd
stc
repz
xchg
xchg
or
and
fs
lahf
aas
jg
popa
sub
fistpl
add
lock
pop
cld
stc
repz
sbb
mov
inc
or
dec
cmpsl
ds
lahf
aas
jg
aaa
pusha
test
sub
sarl
iret
pop
inc
add
call
insl
dec
rolb
inc
add
mov
insl
xorb
in
push
xor
movsb
mov
std
jns
cs
hlt
test
sahf
mov
iret
lahf
aas
ljmp
jo,pt
shlb
std
stc
add
sar
repz
jp
add
roll
int3
lret
sub
mov
outsl
fidivrs
popf
and
jb
dec
rcrl
neg
in
rorb
into
pop
push
mov
mov
xchg
xor
push
loopne
dec
push
and
stos
dec
cmp
mov
xor
flds
adc
pop
or
sub
repz
and
in
xchg
loope
pop
in
pop
lock
aaa
outsl
fimuls
sub
jnp
sub
dec
rclb
mov
arpl
jae
push
out
pop
jnp
dec
xchg
fsubrs
xor
in
fwait
aaa
outsl
inc
repz
call
pop
sbbl
adc
inc
xor
cmp
ljmp
cmpb
add
pop
sub
push
mov
or
inc
xchg
cmp
pand
lock
loope
in
jl
jns
out
or
cmpsl
outsl
aaa
mov
negl
out
and
sbb
pusha
in
call
out
fwait
mov
and
mov
inc
loop
outsl
fidivrs
leave
mov
xchg
xchg
adc
int
aaa
lods
mov
repnz
add
repz
enter
out
mov
sbb
sbb
mov
jnp
addr16
outsl
fidivrs
mov
das
xchg
and
fneni(8087
out
out
fwait
add
sti
cmovge
nop
mov
sbbb
iret
xor
fists
xor
stc
repz
mov
stos
inc
sbb
inc
sbbl
cld
mov
push
sbb
jno
dec
insl
in
lahf
leave
mov
mov
ja
imul
sub
pop
pop
insb
bound
jmp
lahf
aas
jg
lcall
daa
adc
lods
pop
subb
mov
sbb
repnz
sbb
mov
cmpsb
sub
stos
push
movsl
xchg
fnsave
out
mov
pop
cmp
add
ret
repz
fsubr
pop
hlt
sahf
iret
lret
out
push
xlat
das
flds
jb
add
dec
cmp
mull
pop
pop
pop
push
push
push
inc
dec
shlb
pop
outsb
out
fwait
aaa
pop
and
and
test
out
cmp
jg
push
or
fcoml
jns
pop
xchg
and
inc
ss
call
adc
cld
loope
jp
inc
xor
sti
fdivrl
xchg
out
enter
sbb
lret
add
out
ret
std
das
icebp
jbe
pop
mov
divb
adc
add
shlb
cld
mov
jg
sub
xlat
mov
iret
repz
pop
mov
daa
bound
push
outsl
fidivrs
sub
pop
mov
fwait
aaa
xchg
and
mov
repz
out
movsb
jecxz
mov
aad
outsl
fidivrs
dec
test
outsb
std
sbb
push
push
mov
cmp
ret
add
es
inc
lock
mov
aaa
out
add
div
loope
xchg
das
cmpsl
adc
out
fwait
pop
mov
xchg
sahf
dec
push
fimull
iret
inc
jle
cltd
jmp
fwait
rcrb
stc
repz
pop
add
mov
inc
mov
push
aam
movsl
and
and
mov
mov
mov
pop
fcoml
int
aaa
and
add
mov
mov
dec
mov
mov
mov
lahf
jg
push
cld
roll
and
cmp
out
push
hlt
outsl
mov
outsl
fidivrs
std
sahf
pop
lea
popf
test
shlb
fdiv
int
ljmp
xor
or
inc
mov
mov
and
pushl
push
or
fidivs
mov
lods
call
pop
mov
int
xchg
adc
iret
stc
sub
fidivrs
cwtl
movsl
pop
cld
add
or
or
out
fwait
mov
add
in
aas
add
jns
subl
sbb
int
mov
pusha
mov
das
clc
mov
inc
adc
out
testl
addr16
cld
mov
inc
vpmaxub
inc
xor
and
es
lahf
aas
jge
jl
lock
clc
sbb
mov
ret
pop
mov
mov
mov
daa
cmpsb
inc
cmc
jecxz
xor
insb
ficomps
mov
fiadds
pop
adc
imull
icebp
xchg
int
mov
lods
insb
jbe
mov
outsb
inc
jle
psadbw
test
push
repz
pop
out
rclb
sbbl
jg
cld
stc
adc
sub
mov
xor
out
lahf
aas
outsl
fidivl
imul
ret
cli
in
ja
test
nop
pushf
loope
pop
outsl
repz
lahf
inc
aam
cmpsl
cltd
shlb
lcall
cld
stc
dec
scas
mov
sub
clc
lea
xchg
out
cmp
mov
or
xor
sbb
outsl
fidivrs
pop
inc
gs
pusha
cli
bound
out
fwait
outsb
scas
pusha
std
popa
mov
movsl
fnstcw
xchg
xchg
xchg
fstpt
cmpsb
int
ja
inc
outsb
and
xchg
adc
push
repz
xchg
sbb
leave
int
adc
out
sbb
lods
adc
repz
cmc
jl
xchg
push
sub
sbb
sub
cmpb
fwait
aaa
outsl
or
insl
dec
stos
aaa
pop
cmp
and
mov
xchg
push
insb
in
lods
pushf
enter
dec
xchg
dec
fwait
aaa
outsl
fiadds
adc
dec
addb
dec
fwait
jns
out
inc
repnz
cli
in
addr16
mov
repz
xchg
sub
loopne
enter
scas
cmp
cmp
pop
ds
mov
cmp
out
pop
stos
ds
cmpsl
fnstcw
cmpsl
aaa
outsl
fidivrs
push
ljmp
int
cmp
test
out
and
fidivrs
push
std
jg
lods
xor
dec
repz
int
aaa
cld
push
loop
cmp
stc
dec
cmp
mov
rcll
push
and
clc
pop
xor
das
push
xchg
int
aaa
outsl
aam
push
push
jg
xchg
fwait
push
lock
lcall
iret
lahf
aas
cmp
outsl
sbb
mov
out
jnp
push
insb
js
shlb
sub
fadd
pusha
mov
into
jmp
repz
jp
rcr
lahf
insb
aas
pop
outsb
int3
aas
jg
cld
jne
lcall
push
push
outsl
mov
repz
lahf
xchg
mov
mov
xchg
jg
cld
stc
jp
test
pop
jno
enter
push
fcmove
push
inc
pop
mov
jle
jo
jbe
stos
sbb
pop
je
mov
mov
inc
jbe
mov
mov
out
lahf
rorb
les
jmp
cld
stc
mov
xor
ss
stos
xchg
sub
jle
lahf
aas
pop
cmp
ja
cmp
push
mov
dec
rorb
subb
cld
cmp
out
jno
test
pop
jbe
cwtl
pop
lahf
aas
jg
call
push
aam
lds
mov
inc
stc
repz
add
mov
push
sub
ret
sbb
xchg
popf
jle
lock
cmpsb
mov
jecxz
add
xchg
popa
and
in
adc
int
aaa
outsl
push
sti
fwait
cmp
dec
ja
inc
mov
lods
arpl
int
mov
xchg
testb
les
scas
ficoms
inc
lahf
call
iret
daa
stc
int
aaa
outsl
sbb
xchg
push
lret
inc
stos
jno
jns
out
push
outsl
adc
movsl
push
popa
test
ror
iret
mov
jmp
into
rcrl
fwait
aaa
mov
mov
sbb
sahf
or
jae
ja
int
iret
mov
cli
push
sbb
pop
rclb
jg
cld
push
cmp
rcrb
into
sub
aam
repz
lahf
xchg
xchg
jbe
mov
cld
stc
sti
push
in
fbstp
sarl
stc
addr16
lods
das
out
lahf
aas
test
ja
xchg
xchg
ret
jmp
cld
stc
repz
shll
call
sbb
jmp
test
inc
jle
dec
les
cmc
notl
cmp
jno
stos
pop
jg
cld
stc
adc
dec
mov
push
sub
fcoml
adcb
out
lahf
aas
repz
es
cld
stc
repz
stos
or
or
push
and
lcall
inc
sahf
and
add
inc
mov
mov
call
fidivrs
sbb
out
js
jne
loop
dec
int
imul
pop
adc
add
push
fimuls
enter
syscall
jmp
adc
cmp
sbb
jl
dec
cmp
ficoms
mov
repz
fwait
popa
sbb
in
adc
rcll
mov
lds
cld
sti
jmp
out
fwait
aaa
popa
mov
inc
dec
cli
rep
fidivrs
pop
xor
cmp
lret
sbb
and
outsl
fsubl
mov
push
jb
pop
jne
dec
dec
inc
push
cmp
mov
jns
out
sbb
sub
pop
ret
and
fwait
aaa
outsl
fdivrp
adc
into
sub
rorl
aad
xchg
repz
jae
and
dec
cli
xchg
fbstp
aaa
outsl
fidivrs
repz
stos
sbb
aam
out
fwait
enter
jno
out
lds
ficoms
mov
in
outsl
hlt
mov
pop
int
aaa
outsl
add
lds
negb
jns
out
push
inc
push
clc
out
ret
lcall
dec
mov
fwait
aaa
outsl
fimuls
pop
sbb
jae
jae
pop
iret
or
clc
enter
mov
sbb
das
mov
jle
adc
cld
stc
repz
std
push
data16
cmp
hlt
push
in
fmul
lahf
aas
jg
add
xor
test
mov
cld
stc
repz
adc
xor
mov
jg
aas
jg
lret
mov
cmp
pop
or
repz
inc
in
sub
movsb
adc
test
in
and
cld
je
pushf
lock
dec
push
xchg
fmull
mov
fldcw
or
popf
stos
or
scas
push
adc
pop
dec
repnz
or
xor
cmp
mov
jle
xor
scas
rclb
pop
sub
inc
ret
stos
push
fisubrs
sbb
loopne
fistl
lock
add
pop
fdivrl
cli
sbb
push
ja
sar
cld
stc
adc
mov
xor
inc
bound
push
iret
lahf
aas
jg
mov
imul
ljmp
out
add
imull
icebp
hlt
jb
adc
lahf
aas
jg
push
mov
mov
les
ljmp
mov
int3
push
outsl
fidivrs
in
clc
mov
xor
pop
ljmp
xchg
lcall
shl
mov
movsb
hlt
mov
popa
jnp
test
repz
mov
fwait
aaa
outsl
cwtl
pop
orl
and
data16
cmp
out
test
sbb
and
ror
mov
addb
or
aam
repz
lahf
aad
xchg
inc
sahf
mov
add
cld
stc
mov
stos
aad
mov
fmuls
fwait
dec
mov
iret
lahf
aas
push
leave
add
lcall
stc
repz
or
mov
fistps
call
lahf
aas
jg
add
shl
imul
repz
xchg
jne
cld
rcll
xor
aas
jg
pushf
fstps
ss
or
repz
lahf
push
popf
jae
mov
in
jecxz
jg
cld
or
mov
outsl
pop
xor
out
lahf
pop
pop
sarb
sarl
add
je
add
sti
popf
ret
arpl
daa
jg
fnstcw
inc
dec
lock
repz
lahf
daa
cmp
sbb
xchg
adc
cld
stc
lds
int
add
fcos
outsb
fnstcw
jnp
out
lahf
aas
outsb
jg,pt
adc
xchg
cld
stc
repz
jbe
pop
hlt
inc
push
mov
out
xor
inc
jle
bound
clc
out
lahf
aas
dec
fildl
add
or
insb
cld
stc
repz
sub
orl
jae
cmovne
aas
jg
movsl
and
cmpsb
mov
lahf
aas
ljmp
scas
pop
add
add
repz
or
pop
xchg
in
clc
fs
aas
jg
cld
jmp
mov
cmp
aas
cmp
xlat
imul
iret
lahf
adc
xchg
mov
fcomps
jl
push
sbb
pop
out
out
pop
pop
add
add
pop
pop
sub
repz
test
mov
push
dec
arpl
dec
cs
fidivrs
fstl
rorb
fwait
mov
call
mov
inc
test
stos
clc
xor
inc
ja
je
dec
jl
orb
mov
out
cld
stc
repz
fcomi
cs
jp
mov
enter
aas
jg
aad
lret
mov
pop
add
stc
repz
in
mov
aad
imul
jg
cld
jge
dec
nop
mov
inc
out
xchg
add
and
iret
leave
fwait
aaa
out
jg
xchg
mov
mov
lret
repz
aam
pushl
mov
jns
dec
cmc
out
inc
daa
loopne
mov
loope
loopne
int
aaa
lock
cmp
adc
or
mov
jns
cmp
push
xor
sbb
mov
jle
cmp
out
sbb
push
xchg
mov
ss
shr
test
xchg
iret
aas
setb
adc
les
pop
aam
jo
fadd
fsubrl
and
pop
and
cld
stc
repz
lock
addr16
cmp
outsl
andb
out
cs
xchg
adc
push
push
push
out
and
and
fwait
xchg
push
and
jne
int
sbbb
test
test
cmp
gs
jg
sbb
outsl
fidivrs
imul
in
xchg
call
mov
mov
or
rorb
shlb
push
rcrb
jns
out
iret
or
fs
popa
mov
fidivl
outsl
fidivrs
ret
es
pand
out
fwait
clc
in
mov
push
scas
fs
jno
fidivs
lds
push
jg
shll
push
xor
mov
int
aaa
popf
jp
xchg
icebp
xchg
lcall
fidivrs
outsl
add
scas
or
jae
dec
int
aaa
outsl
mov
sahf
xor
xchg
in
mov
das
sub
mov
bound
scas
imul
aaa
outsl
fidivrs
or
mov
shll
rorl
imul
mov
outsl
fidivrs
mov
inc
cmp
sbb
lock
fwait
aaa
push
inc
dec
pop
xchg
popa
push
mov
mulb
repz
inc
mov
outsb
int3
notl
sbb
inc
int
aaa
outsl
jecxz
xor
adc
clc
leave
mov
subl
or
xor
push
pusha
jge
aaa
add
inc
inc
cmpsl
call
int
mov
mov
subb
movsb
jp
ret
pushf
repnz
or
test
mov
fidivrs
or
ljmp
lret
insb
xchg
xchg
inc
add
clc
repnz
loope
stc
rolb
push
adc
daa
scas
lea
and
jg
arpl
push
sub
xchg
adc
cld
stc
enter
mov
cmp
loop
and
add
xchg
lahf
aas
jg
int
xchg
xorb
aaa
out
orb
test
xchg
sbb
int
mov
dec
stos
xor
push
and
out
int
inc
cwtl
jp
imul
pop
dec
pop
fidivrs
adc
xor
stos
or
mov
cmp
loop
cmc
bound
inc
mov
fildll
sarl
adc
in
push
mov
jns
out
mov
jmp
outsl
repz
lret
call
rcll
mov
cmp
push
push
mov
fistpll
and
adc
add
fwait
aaa
outsl
ficomps
pusha
xchg
mov
jp
adc
xchg
test
js
out
data16
repz
and
cmp
stos
ss
iret
pop
btc
repnz
fmuls
aas
sub
loope
add
or
fwait
cld
stc
repz
jb
mov
dec
ljmp
jg
addb
lods
clc
or
add
dec
shl
jmp
in
jmp
pop
mov
out
mov
cld
stc
loopne
push
xor
imul
and
xchg
and
stc
pop
ficomps
fidivrs
out
insl
enter
xchg
out
leave
mov
xor
outsl
shlb
in
sahf
cmpsl
sarl
loopne
int3
pop
inc
xor
pop
cmp
aaa
outsl
test
stos
xchg
and
daa
push
jge
repz
fwait
mov
leave
adcl
jns
mov
rcll
mov
jnp
das
pop
out
fwait
aaa
les
fcmovne
mov
je
ds
repz
gs
lahf
insl
icebp
insl
clc
enter
out
int3
xchg
mov
inc
stos
enter
add
addr16
xor
movsb
fwait
aaa
outsl
fimuls
add
or
and
cmp
jp
testb
out
add
loope
mov
xor
sbb
pop
aaa
outsl
fidivrs
jle
push
pop
faddl
pop
loop
repz
fwait
push
push
jo
push
movsb
fcoml
outsl
fidivrs
push
push
call
in
out
mov
pusha
xchg
dec
mov
inc
or
mov
je
repz
xchg
mov
pop
fistpl
jg
ljmp
push
cmp
add
mov
ficoms
outsl
rol
rclb
loopne
inc
mov
popf
xchg
out
fwait
adc
loope
add
je
outsl
fidivrs
dec
mov
push
mov
les
int
aaa
jae
pushf
leave
jae
cmp
fidivrs
mov
mov
cs
int
aaa
outsl
ss
xchg
sbb
nop
cmp
loop
jns
out
jbe
cmp
mov
rcrl
xor
mov
shl
cwtl
aad
in
jns
out
cli
movsl
js
pop
out
lea
shr
adc
mov
mov
test
sbb
sub
aad
sbb
aaa
clc
mov
ds
pop
cwtl
pop
jne
mov
adc
shl
scas
and
cld
sub
adc
aas
jg
arpl
int3
stos
xchg
pop
enter
lahf
pop
mov
lret
sbb
jg
jbe
or
adc
test
sti
outsl
ficoms
bnd
outsl
lret
push
cmp
aaa
clc
jno
jbe
jno
sbb
mov
repz
bound
or
pop
sbb
out
xor
int
aaa
outsl
adc
popa
sbb
movsb
imull
pop
or
in
stos
lret
xorl
ja
iret
lahf
jg
out
mov
fdivr
loope
aam
or
cld
lahf
jp
push
ret
add
lahf
fwait
ja
out
xchg
icebp
xchg
xor
repz
xor
stos
das
in
into
mov
push
movsl
aaa
outsl
fidivrs
scas
ja
jp
lea
out
fwait
jo
cli
data16
xchg
pop
adc
lods
loopne
das
pusha
gs
cmc
adc
stc
repz
pop
mov
and
inc
mov
in
pop
pushf
inc
lahf
aas
jg
pop
sbb
es
cmp
ds
mov
hlt
in
js
fdivrs
fistps
mov
test
cmp
jmp
jle
popa
fs
aaa
outsl
fiadds
or
out
repz
andl
outsl
fidivrs
lock
dec
mov
mov
aaa
dec
xor
jo
dec
das
mov
sarb
pop
cmp
aas
pushl
push
iret
daa
ljmp
popf
mov
sub
repz
cmpsl
jg
out
sub
cmc
xchg
movswl
mov
cld
jg
addr16
in
js
popa
data16
mov
shrl
inc
xchg
lock
ljmp
dec
xchg
jne
loope
xchg
enter
mov
stc
repz
adc
mov
jp
push
test
in
outsl
sub
push
shrl
test
mov
add
or
pop
inc
aas
sarb
adc
add
fstl
and
shlb
mov
dec
push
xlat
lea
mov
int3
or
call
sbbb
fs
push
loopne
push
mov
push
adc
ss
mov
mov
stos
adc
and
or
cmp
fists
insb
mov
add
inc
mov
fimull
mov
sbb
sahf
mov
lods
add
sbb
add
adc
xor
push
fs
cmpsl
in
mov
arpl
xor
mov
rcll
add
add
adc
ficoml
das
stc
sbb
leave
push
inc
push
pop
sub
cmpb
into
or
xchg
adc
mov
jb
rcl
inc
scas
cmpsb
add
adc
int
inc
cmc
out
lock
into
mov
icebp
sub
add
ss
or
or
adc
ss
roll
shrl
fwait
testb
dec
clc
stos
scas
subl
add
add
ret
cmpsb
pop
cli
pop
jo
sub
lods
icebp
add
and
inc
add
or
push
mov
pop
or
adc
sti
pushf
inc
push
adc
adc
ficoms
push
jno
mov
add
xor
cmp
push
adc
adc
adc
or
movb
or
fimuls
push
mov
mov
cmp
jo
test
cmp
adc
pop
push
or
or
rcll
sub
cmp
push
sub
sub
add
icebp
or
mov
cmp
mov
out
add
cmpsl
into
test
mov
jbe
xor
sbb
xor
adc
roll
bound
jl
jge
jl
imul
push
or
popa
jmp
push
sub
xchg
mov
les
or
mov
jge
mov
insb
mov
and
movsb
push
add
push
or
adc
adc
icebp
sub
mov
movsl
adc
fildl
andb
dec
adc
inc
inc
adc
imul
int3
xchg
jmp
and
je
add
add
add
mov
and
push
pop
add
or
push
cwtl
sub
jae
or
mov
cs
mov
add
negb
add
mov
xor
xorb
sbb
inc
pop
cmp
lret
adc
adc
add
mov
fadds
ret
add
push
out
or
mov
add
sbbb
fwait
test
fldl
adc
add
push
pop
dec
or
mov
sub
push
adc
sub
inc
mov
inc
xlat
add
adc
inc
inc
adc
lock
cltd
push
add
aas
push
and
mov
adc
inc
dec
xchg
adc
add
mov
xchg
mov
and
clc
mov
dec
push
mov
call
add
aaa
sbb
push
jbe
sbb
call
xchg
sub
cltd
pop
adc
add
pop
push
or
push
mov
adc
push
jmp
cli
mov
or
insb
sbb
stos
bound
inc
push
leave
gs
pop
clc
fisttpl
inc
lret
push
stc
es
add
cmp
inc
push
and
or
out
aas
sbb
dec
int
or
pop
data16
test
add
mov
mov
push
cmp
push
adc
stos
or
jmp
icebp
mov
test
mov
hlt
stos
push
fs
adc
rorl
cmp
cmp
push
jge
lock
and
pop
add
jp
scas
call
shll
cmpsb
in
mov
stos
test
mov
inc
sub
sbb
add
or
inc
sub
fmulp
cmp
test
push
repnz
inc
sub
inc
add
mov
sbb
push
cmp
inc
rolb
mov
rol
and
jo
xchg
mov
mov
cmp
testb
loopne
mov
fsubl
rcrb
mov
icebp
push
adc
xor
mov
test
enter
jge
sbb
adc
imul
rclb
and
sbb
add
out
inc
xor
popa
rcll
push
int3
mov
or
add
inc
push
add
test
push
roll
addr16
adc
mov
pop
or
adc
inc
inc
sub
add
mov
mov
mov
adc
in
push
mov
push
inc
mov
ret
xor
and
xor
mov
push
sub
sbb
push
insl
pop
cmp
sbb
ja
adc
lds
push
xor
add
or
call
in
jg
jns
idivb
leave
and
add
xor
inc
pop
push
aam
adc
ret
les
push
fwait
pop
out
rolb
adc
ret
fisttpl
inc
sbb
push
js
mov
mov
es
outsl
ja
into
fbstp
mov
rclb
add
scas
scas
inc
icebp
cmc
rclb
andb
adc
push
xor
icebp
inc
add
or
mov
inc
push
push
ja
mov
std
inc
mov
fdivrs
call
cmp
inc
xchg
or
sarb
or
in
idivb
je
test
test
popa
sbb
and
adc
pop
push
pop
call
lock
mov
inc
inc
jae
jo
loope
add
jmp
stos
test
out
and
push
adc
aas
shlb
add
xor
sbb
rcll
ja
ljmp
adc
sub
sub
inc
inc
sbb
rclb
nop
testl
xchg
push
aad
add
push
or
scas
lahf
push
mov
adc
test
subb
into
shr
adc
movsb
and
movsl
popa
adc
popf
push
insl
insl
or
add
inc
sub
cwtl
inc
andb
loop
mov
sbb
adc
stos
or
clc
mov
and
push
pop
add
jp
dec
in
and
push
xchg
repz
mov
sbb
nop
jno
out
inc
inc
add
mov
orl
push
adc
push
test
jo
sbbb
or
xor
clc
push
cli
add
imul
or
mov
ret
insb
cmove
mov
and
adc
jae
pop
cmc
push
popa
ficoml
jmp
xor
ds
pop
js
sub
sar
push
call
cmp
pop
pop
sbb
lahf
ret
adc
add
jp
loope
lock
into
push
jnp
cltd
orb
sub
push
adc
scas
pop
ficomps
cmpsb
add
add
push
stc
std
dec
push
mov
jbe
sbb
add
or
push
push
xlat
or
push
test
repnz
inc
ret
add
push
out
insl
pop
ds
add
adc
sub
sbb
cltd
sbb
push
scas
add
mov
or
mov
adc
mov
cmp
and
push
inc
je
sub
push
shrb
in
push
push
xlat
lret
test
sahf
push
sbb
dec
push
xchg
adcl
shlb
rol
lds
adc
in
loopne
je
sbb
repz
pop
cltd
adc
add
push
xor
pop
add
mov
lret
push
push
push
pop
shl
out
ret
lock
test
lret
lods
jns
jb
adc
xchg
rolb
sub
and
cs
mulb
adc
rolb
inc
fildl
inc
add
dec
sbb
push
mov
mov
or
or
mov
dec
jns
cmp
mov
and
lcall
cmp
in
test
aad
in
cmpsb
adc
cltd
cld
push
push
mov
cmpsb
fs
cwtl
cmp
jmp
mov
or
fisubrl
jmp
adc
push
add
pop
mov
test
bound
and
sbb
jle
clc
inc
cmpsb
pop
xorl
clc
add
dec
xor
push
pop
in
scas
addr16
dec
mov
adc
mov
ljmp
add
pusha
or
push
add
leave
fwait
in
mov
rclb
push
idiv
or
and
dec
rcrb
mov
jo
jp
xchg
cmp
xchg
cmp
repz
add
loopne
fadd
xchg
sub
call
inc
jle
out
adc
push
pop
out
push
into
push
fdivs
loopne
aas
sbb
cs
jmp
mov
vunpckhps
push
je
lret
xor
cmp
mov
jb
shl
rolb
dec
add
push
daa
inc
xchg
stos
add
dec
or
mov
bound
aam
in
jp
call
lret
push
adc
mov
and
push
sub
and
push
or
push
andb
sub
stos
add
addl
mov
cmp
mov
fwait
stos
sbb
push
xchg
xor
dec
or
adc
adcb
mov
or
mov
fsubs
cld
rcr
xor
xor
in
out
and
mov
dec
pushf
add
cmpsb
or
adc
hlt
push
aam
cmpsl
mov
push
push
xchg
pushf
test
cmp
ljmp
add
sub
add
xor
mov
subb
dec
pop
mov
addb
jecxz
jae
sub
pop
fsts
inc
mov
int
repnz
aam
cs
pop
test
xchg
xlat
pop
lods
xchg
aaa
mov
jle
mov
sub
inc
sub
ja
mov
in
gs
dec
adc
adc
aad
xchg
sub
xchg
mov
lods
es
icebp
std
xchg
add
clc
idivb
xorb
popf
push
pop
add
ret
or
jp
inc
incb
sbb
and
jo
push
pop
mov
push
push
dec
jmp
cli
or
jmp
inc
rcl
sbb
push
or
mov
push
bound
add
add
sbb
lahf
stos
call
adc
inc
enter
adc
fisubs
les
repz
shr
or
push
dec
loope
insl
mov
push
mov
loop
pop
add
jp
shrb
rcl
mov
addr16
mov
push
adcb
insl
lock
cmpsl
and
or
repz
fidivrs
mov
icebp
test
cmp
push
or
mov
std
push
sbb
dec
arpl
icebp
xor
sbb
lea
inc
add
stos
lret
outsl
jae
mov
jae
andb
inc
sahf
movsl
orb
push
mov
arpl
pop
js
call
xchg
pop
sub
jge
sti
add
imul
inc
cmp
test
imul
jmp
std
mov
insb
scas
xchg
or
xchg
xor
test
or
in
adc
jp
icebp
add
mov
je
dec
xchg
and
mul
dec
jae
add
iret
xor
adc
pop
xor
shl
ret
mov
int
push
cwtl
rcll
push
push
scas
lcall
icebp
or
push
inc
ret
ret
shlb
push
cmpsl
xor
stos
dec
and
jno
fwait
push
sbb
or
lret
jno
ret
mov
scas
inc
or
leave
popa
adc
cmpsl
mov
addl
lret
lds
adc
mov
pop
dec
add
pop
push
mov
pop
sub
pop
xor
test
stos
jno
js
and
scas
pop
into
pop
or
jo
cmpsl
cmp
icebp
xor
sbb
dec
push
dec
insl
sbb
pop
jne
addr16
and
rolb
loope
rolb
push
push
iret
out
or
mov
jnp
mov
pop
push
ret
adc
or
xor
push
int
push
dec
fucomip
lock
adc
in
adc
js
push
cmpl
cs
or
sti
leave
outsb
cmp
push
ds
repnz
dec
inc
pop
rclb
sbb
shrl
or
into
cmc
les
add
in
push
sbb
push
sbb
xchg
add
fistpll
dec
pop
pop
mov
xchg
out
mov
stos
loope
clc
adc
or
inc
test
xor
push
or
sbb
push
jmp
cli
rclb
ficoml
les
mulb
or
push
shl
jp
sbb
inc
lea
inc
push
lret
dec
or
sub
mov
mov
sub
pop
add
push
sar
mov
es
mov
lret
js
aad
rorb
or
add
int3
xor
add
xor
lods
or
dec
je
pusha
xor
loope
push
xor
sti
mov
adc
rcr
cmova
mov
inc
cmpsb
fdivrs
arpl
enter
or
in
lods
imul
sub
or
xor
mov
jle
fidivs
cmp
shr
push
adc
sbb
orb
or
in
rcll
jb
aam
imul
add
rcrb
mov
add
enter
and
mov
pop
cwtl
and
cmp
popl
shl
xor
ret
inc
test
loop
push
in
out
add
sub
ljmp
sub
cmpsw
push
sbb
sub
dec
add
xchg
sbb
inc
std
pop
mov
and
and
mov
call
out
sbb
adc
jo
sti
rorb
sti
or
sub
aam
jge
stos
icebp
push
icebp
popa
sbb
inc
mov
movl
sbb
mov
mov
jge
ja
push
xor
add
movsl
add
jmp
add
add
movsb
lea
adc
rcrl
mov
add
adc
xorl
or
jecxz
ret
pop
add
bound
shlb
cltd
or
inc
stc
or
mull
sbb
mov
inc
or
fsts
insb
lahf
add
push
inc
les
jp
add
inc
jl
repz
mov
mov
scas
test
or
mov
xor
sbb
into
jo
ja
lret
mov
mov
and
and
push
iret
aam
dec
rcrl
out
sbb
cmc
daa
dec
or
or
loop
add
xorb
idivb
push
rclb
sbb
jmp
push
sbb
push
and
dec
pop
mov
add
sub
xor
scas
scas
nop
add
adc
neg
add
mov
into
fistpl
or
inc
or
loop
sub
xorb
xchg
mov
in
inc
add
or
cltd
adc
into
or
ljmp
inc
stc
sub
push
mov
or
and
add
inc
test
cwtl
push
rcrb
test
inc
in
mov
mov
mov
int
sbb
pop
mov
sarb
bound
push
xlat
or
popl
push
cmp
xchg
xchg
cmp
lcall
popf
les
sub
sti
lret
dec
push
xor
mov
icebp
aam
fildl
ja
and
ret
inc
je
or
mov
test
adc
cli
or
addb
jbe
mov
add
push
sbb
jle
pop
xlat
mov
or
aam
das
insl
fsubrl
aaa
pop
cwtl
cmp
movsl
bound
push
repz
dec
nop
dec
mov
pop
pop
mov
pop
test
lahf
rcl
daa
adc
dec
inc
rolb
dec
and
mov
lock
jae
icebp
mov
jae
out
fwait
inc
sub
fcoml
rorb
push
push
fwait
sub
stos
cltd
nop
adc
sub
lcall
mov
jbe
push
adc
popf
enter
int3
push
and
add
push
icebp
xchg
ds
jg
les
mov
sbb
adc
testb
cmp
pop
adc
loop
inc
mov
pop
add
pop
rcl
in
aaa
or
addr16
pop
std
or
mov
mov
mov
and
pop
sub
xchg
push
xor
rclb
add
adc
ret
pop
add
or
xchg
add
shl
test
xor
fwait
sub
push
stos
sar
xor
mov
addr16
adc
xor
in
loopne
std
add
mov
jo
inc
mov
gs
xor
in
imul
js
and
adc
adc
mov
sbb
dec
cli
or
sub
mov
shrl
adc
js
add
imul
cwtl
rorl
jne
cmpsl
sbb
out
movsl
add
xor
pop
and
cld
add
cld
adc
daa
stos
push
jmp
add
dec
fsubl
sub
gs
push
mov
mov
mov
xchg
sti
push
insl
adc
adc
xchg
push
stos
cmp
pop
lock
movb
clc
shrb
mov
ret
mov
es
push
lahf
adc
add
cmpsl
pop
popf
ljmp
sbb
cltd
mov
test
jl
popa
mov
addr16
mov
out
imul
lods
sbbb
inc
in
mov
fdivr
push
xchg
mov
xchg
push
xor
sbbl
int3
xorb
mov
cwtl
mov
imul
movsb
in
cmc
rolb
jbe
aam
xchg
int
roll
sbb
adc
push
je
shlb
stos
sub
subb
and
add
xor
add
pop
mov
jae
jb
shlb
inc
lahf
lcall
push
stc
gs
xchg
mov
mov
adc
lea
push
mov
sub
roll
repnz
loopne
xchg
cmp
add
cmp
test
sub
add
dec
popf
sahf
mov
jl
shlb
push
push
insl
shrl
mov
push
xchg
push
push
push
jl
inc
aam
xchg
mov
mov
scas
push
lret
mov
add
rorb
stos
loop
cmp
mov
push
movsb
insl
xchg
push
xor
shl
pushf
rol
mov
stos
dec
mov
adc
inc
push
imul
cld
push
enter
sbb
add
adc
push
adc
mov
adc
loope
adc
lahf
push
rcrb
push
cmp
xor
mov
push
sbb
jmp
js
movb
outsl
mov
xor
ljmp
adc
repnz
inc
in
sbb
cmp
inc
inc
test
add
and
adc
ret
and
test
mov
stos
dec
out
pop
jle
sbb
movsb
test
test
adc
pop
inc
or
jb
in
adc
add
pop
add
dec
cwtl
inc
mov
in
loop
cltd
xor
sbb
push
lret
jge
ret
push
dec
add
je
and
lds
push
adc
mov
scas
inc
mov
pop
jne
stos
add
dec
add
push
jo
push
ds
adc
sub
xchg
xchg
sbb
mov
mov
cltd
sub
pusha
inc
push
adc
leave
cmp
add
jmp
or
adc
pop
mov
mov
mov
mov
push
adc
add
test
jo
and
xlat
adc
sbb
repnz
frstor
inc
push
roll
inc
popf
dec
inc
cmp
repnz
mov
pop
adc
or
fsubrs
xorb
mov
test
mov
push
daa
sbb
mov
inc
out
sbb
pop
cmp
call
bound
add
fs
stos
add
cwtl
inc
add
test
sahf
arpl
lods
or
xor
mov
pop
cmp
pop
or
ret
xor
nop
add
mov
ret
rcrb
add
test
push
pop
or
test
push
push
data16
out
add
mov
sbb
ret
sbb
cmp
sub
mov
cmp
push
mov
inc
mov
enter
lret
test
int3
not
mov
and
xchg
stos
aas
and
pushf
pop
push
testb
fbld
mov
stos
pushf
popa
inc
add
push
push
mov
hlt
sbb
and
mov
mov
xchg
nop
rorl
cmp
test
mov
push
xor
rclb
mov
dec
add
pop
xor
lea
and
inc
fs
push
addr16
cltd
sahf
and
int3
cs
test
popf
mov
mov
es
and
mov
inc
lds
fadd
adc
and
roll
shrl
mov
sbb
mov
push
ss
mov
sbb
out
je
das
lods
mov
jnp
mov
mov
adc
sbb
sbb
loopne
xchg
mov
psrlw
adc
rorl
adc
mov
mov
lret
or
data16
mov
sub
inc
in
adc
jo
cmp
test
sbb
ljmp
cltd
or
push
or
pop
enter
push
inc
stos
adc
shlb
mov
cmp
adc
sbb
incb
mov
mov
push
jb
loop
repnz
sub
and
push
scas
cmp
insl
pop
and
rcrl
js
xor
in
cmpl
or
push
ret
xchg
sbb
mov
and
roll
lcall
sub
int
dec
mov
inc
clc
rol
add
push
shlb
stos
or
in
mov
adc
scas
and
xor
add
scas
pop
push
push
lods
push
inc
jge
icebp
sub
mov
mov
xor
fldl
pop
add
movsb
cmp
mov
sbb
mov
jo
jno
rcrl
loopne
lea
and
push
imul
add
sub
rcr
adcb
jb
andl
jl
and
mov
push
pushf
or
scas
scas
nop
loope
loopne
rol
subb
sub
and
and
int
adc
mov
cmp
push
jge
sbb
push
sub
mov
xor
and
adc
push
insb
cmp
adc
mov
and
dec
sahf
xchg
jge
and
mov
cmpsl
mov
or
rorl
push
xchg
jns
sbb
xchg
mov
not
pop
push
out
adc
lret
loopne
add
fwait
mov
int3
scas
and
fwait
mov
test
pop
push
rcl
lods
push
repz
cmc
add
xlat
cmp
xchg
cmpsl
push
xor
mov
shrl
pop
push
pusha
stos
imul
adc
dec
in
push
pop
add
sub
xchg
mov
icebp
popa
leave
pop
mov
pusha
adc
xor
test
mov
cmp
les
and
add
sbb
jns
nop
sub
adc
sub
rorl
rcrb
jne
add
cmc
xor
out
add
mov
mov
add
jo
lea
call
sub
cmp
push
xorl
imul
pusha
mov
xlat
sbb
ror
pop
adc
cmp
in
xchg
ret
es
adc
loopne
nop
push
add
sbbb
loop
and
add
mov
sub
cmp
inc
pop
inc
pop
push
mov
jp
xor
mov
pop
xchg
add
in
fldl2e
cltd
or
shlb
sub
adc
pop
shlb
push
mov
mov
sub
enter
inc
je
js
test
adc
out
add
jbe
inc
dec
dec
ja
inc
inc
or
push
js
fnstcw
adc
outsl
or
sub
xchg
test
add
in
adc
ret
adc
addb
push
and
jnp
cmpsb
loopne
cmpsb
fchs
and
adc
and
sub
stos
sahf
xchg
jecxz
mov
popf
sub
lahf
sbb
mov
out
out
stos
andb
adc
mov
xchg
push
add
push
and
push
add
stos
lds
aaa
rolb
mov
fucomi
mov
mov
and
lret
mov
je
cmp
cli
cmp
js
inc
inc
xchg
pop
or
jb
cmp
nop
add
push
cmp
add
icebp
mov
push
roll
stos
or
imul
inc
push
sarb
sahf
sbb
in
xlat
sub
mov
mov
cli
dec
sbb
dec
mov
mov
push
loope
cltd
out
sbb
push
pop
sbb
cmp
addl
mov
mov
stos
xor
mov
mov
sub
movaps
or
addr16
roll
mov
add
pop
xchg
mov
mov
cmp
jecxz
xorb
mov
loop
arpl
inc
push
sbb
inc
adc
dec
push
push
jp
mov
sbbb
sbb
mov
shr
ljmp
mov
push
pusha
pop
insb
rcrb
ds
pop
mov
dec
leave
mov
mov
and
out
stos
pop
cmp
out
or
inc
dec
jo
popf
or
sub
sbb
xchg
inc
add
cmpsl
push
imul
lret
sbb
push
lea
inc
jecxz
dec
loope
inc
lea
add
push
sbb
push
add
add
inc
data16
push
push
cltd
pop
add
leave
add
test
add
cltd
ret
mov
cmpsb
test
or
push
mul
inc
dec
adc
aaa
ljmp
mov
shrb
sbb
or
scas
dec
cltd
adc
sbb
inc
xor
sbb
cmp
movsb
ljmp
cmp
xchg
mov
xor
dec
mov
mov
and
push
mov
divb
mov
and
sbb
mov
ljmp
rcl
inc
or
mov
and
mov
pusha
inc
daa
shlb
into
cmp
imul
lret
mov
or
les
inc
roll
pop
insb
inc
xchg
add
dec
push
xchg
sub
rorl
rclb
xchg
add
mov
insb
call
dec
push
je
loopne
sbb
subl
and
sarl
add
inc
mov
addr16
and
mov
jecxz
pop
aad
scas
mov
imul
movsb
mov
pop
sbb
adc
repz
icebp
xchg
cld
nop
or
adc
push
iret
jae
rcll
orl
mov
in
jbe
mov
imul
push
scas
rolb
adc
jae
call
andb
mov
lods
jns
cmpsl
loopne
sub
ljmp
pop
add
pop
daa
bswap
sbb
les
cmp
dec
ds
jl
pusha
or
sbb
dec
or
xor
dec
rcrl
push
adc
push
and
cmp
lock
xor
jo
add
ss
fsubrl
cli
repz
sub
ss
and
mov
popa
adcb
data16
inc
enter
scas
xchg
mov
mov
push
gs
xchg
dec
cld
lret
inc
or
mov
mov
pop
cltd
movsl
movb
sbb
and
add
xor
push
and
in
subl
fcompl
pop
ret
add
lock
sbb
nop
shrl
sbb
and
push
rolb
jg
arpl
xlat
int
push
and
mov
mov
mov
add
sbb
lock
call
or
xchg
mov
push
push
mov
or
sbb
add
and
push
fdivrs
or
pop
popf
adc
mov
push
sbb
mov
sbb
jmp
push
mov
adc
or
jne
or
adc
es
or
int
and
sbb
sub
fildl
scas
push
xchg
lcall
dec
xchg
xchg
add
pop
push
push
or
and
cmovns
mov
enter
mov
adc
add
inc
pop
sbb
xchg
add
push
ret
rcrl
inc
cmp
icebp
push
mov
inc
cmp
inc
or
mov
mov
lret
ljmp
mov
add
mov
adc
shll
scas
add
out
adc
and
push
ret
sbb
mov
fidivrs
test
call
data16
sarb
lods
inc
dec
pop
adc
sub
xchg
addl
rolb
or
mov
hlt
xor
popa
sub
sub
loop
les
cmc
sub
je
pop
or
inc
rcll
cmp
pop
icebp
and
incl
pop
adc
xor
or
mov
mov
hlt
push
add
ljmp
pop
add
fstps
loop
lock
ds
pop
insl
adc
ljmp
xor
or
cmp
adc
aas
inc
dec
inc
push
adc
ret
xor
mov
push
and
add
mov
shlb
or
cwtl
subb
inc
mov
pop
dec
inc
testl
test
mov
sbb
push
rcrb
daa
push
sbb
enter
xor
adc
push
jb
test
and
int
add
loopne
push
fcomps
rclb
rorl
mov
rcrl
sub
pop
xchg
sbb
sub
push
pop
add
xor
rolb
xchg
add
das
pop
shlb
and
icebp
xor
ljmp
rcrl
mov
stc
or
pop
ret
mov
call
and
jp
push
inc
cmp
daa
ljmp
inc
loopne
mov
and
cmpsb
push
push
data16
incb
mov
mov
xchg
lds
jnp
dec
adc
and
adc
dec
push
sub
add
cmp
and
or
rol
mov
daa
mov
shr
or
data16
inc
sti
push
mov
ja
and
leave
lods
pushf
imul
lods
shl
repnz
cmp
shlb
addr16
lock
or
aaa
insb
sub
jo
dec
inc
jge
or
lods
mov
mov
mov
ret
add
mov
push
or
loopne
jge
inc
dec
pusha
add
sarl
lret
and
add
adcb
daa
cwtl
push
xchg
adc
arpl
adc
push
std
push
adcl
xchg
adc
sbb
dec
and
daa
mov
add
faddl
pop
xchg
loop
dec
mov
js
mov
rcll
push
or
add
shlb
push
roll
push
add
mul
es
push
push
nop
xchg
call
imul
sub
sbb
sbb
lods
push
sbb
adc
sbb
lcall
psubsb
xor
mov
fcompl
xorb
test
test
ja
sub
or
add
add
cmp
mov
lcall
adc
cmp
mov
add
push
lea
or
lds
cmp
mov
enter
mov
mov
inc
cs
jo
pop
push
jo
mov
inc
js
and
adc
movsl
sbb
push
or
push
call
adc
inc
lret
fimull
das
clc
sbb
add
push
insl
jb
mov
dec
outsl
adc
js
in
test
out
xchg
push
mov
or
and
cli
add
aam
call
shl
adc
inc
cwtl
xchg
daa
inc
lods
jnp
dec
movb
enter
loopne
enter
sub
pop
aam
or
and
or
mov
push
add
adc
test
fmuls
das
cwtl
adc
stos
mov
mov
idivl
cmp
and
mov
ret
cltd
dec
icebp
inc
xchg
sti
das
push
ss
loopne
inc
in
push
push
outsb
je
xorb
inc
pop
sbb
jp
sub
imul
mov
and
cmp
sar
add
cmp
jg
pushf
mov
rcrb
leave
cmc
roll
mov
or
add
pop
ret
or
inc
xchg
inc
mov
nop
rcr
push
sti
test
cmp
add
mov
mov
stc
sub
iret
stc
push
std
std
mov
lods
mov
add
push
xor
test
stos
push
push
jge
cli
push
cmc
popa
mov
inc
sbb
lret
or
mov
add
out
pushf
or
add
add
sub
or
clc
stos
ret
push
test
mov
lds
inc
adc
or
out
sbb
loop
nop
add
or
cltd
scas
sbb
lret
outsl
add
inc
push
andl
pop
or
push
roll
sbb
fs
repnz
das
or
cmp
pop
cli
mov
sbb
jne
add
or
push
pop
sbb
add
xchg
mov
adc
inc
sub
or
enter
lods
imul
and
push
rorl
testb
push
das
mov
lretw
xor
add
push
aam
push
pop
mov
cmpsl
fcmovbe
sarb
stc
dec
adc
rorb
adc
xor
fnstcw
and
dec
mov
clc
add
adc
shll
add
and
add
aam
cltd
icebp
mov
add
jne
mov
cmp
dec
jg
add
cmp
push
push
push
adc
adc
push
dec
test
xchg
push
pop
test
push
inc
and
add
add
mov
jb
and
bound
sub
sbb
push
or
ret
jbe
adcb
xor
out
xchg
ds
mov
adc
add
call
arpl
pusha
jb
icebp
test
or
add
popa
mov
adc
jo
in
mov
sbb
jns
mov
std
xor
or
sahf
out
xchg
or
add
or
sub
call
xchg
mov
mov
test
adc
or
push
in
icebp
pop
sub
test
mov
sahf
pop
cli
adc
and
or
clc
loopne
add
adc
add
mov
push
dec
jmp
xor
push
imul
adc
adc
das
aaa
rolb
es
pop
sbb
sbb
pop
inc
xchg
movsl
js
xor
andl
imulb
ljmp
js
inc
sub
icebp
mov
ret
leave
ret
ja
rorl
push
scas
add
lods
sub
or
je
pop
int3
mov
pop
cmp
sub
or
dec
das
jo
cmp
xchg
je
int
add
mov
fimuls
fcomip
sub
inc
lods
add
mov
jae
in
cmp
icebp
filds
inc
jae
lcall
and
sbb
or
and
xchg
xor
mov
jo
inc
bound
mov
mov
mov
push
xchg
sub
ret
jnp
push
stos
orl
add
mov
vandnps
fildl
pop
les
pop
mov
sub
add
or
dec
insl
cmp
jae
jmp
fistpl
cmovo
mov
insb
mov
imul
lea
inc
jmp
or
enter
mov
enter
js
fstps
push
adc
pop
fisubrl
xchg
rcrl
cwtl
movsl
ficoml
pusha
ret
mov
cmp
sbb
cmp
enter
push
xchg
test
cmp
adc
jo
rol
pop
add
sbb
cmp
xchg
pop
push
jo
out
rclb
add
add
push
pop
mov
cmp
inc
or
loopne
pop
mov
pop
rclb
adc
outsl
add
add
and
popa
sahf
jno
addr16
adc
aad
cmp
fldl
pop
roll
or
push
and
xchg
xor
jno
and
and
push
or
push
or
pop
fcoms
cmp
xchg
sbb
fs
jge
or
arpl
clc
or
outsl
aam
sbb
jmp
inc
lret
lods
and
push
inc
mov
repnz
adc
fmulp
adc
sub
push
inc
inc
sahf
ror
inc
roll
or
cmp
sbb
cmovo
xlat
outsl
lea
sub
jmp
test
inc
sbb
mov
inc
bound
fwait
mov
push
push
lods
push
and
pop
pop
add
dec
sub
loopne
pusha
adc
xor
ret
push
jp
je
adc
add
shl
adc
or
jmp
jo
bound
jl
push
mov
and
orb
adc
or
lea
fistpl
rorl
into
adc
sbb
mov
or
xor
loop
adc
push
push
xor
out
dec
and
addl
push
gs
pop
pop
dec
jb
cs
xor
jmp
mov
call
fmuls
lret
ret
test
cmp
dec
or
jae
loopne
sub
and
popf
loopne
pop
rcrl
or
or
outsb
insl
flds
lret
push
popa
inc
cmc
mov
movsb
lret
and
or
fs
repnz
xchg
push
lods
les
shll
sbb
xchg
or
sbb
shrb
into
or
mov
inc
out
adc
out
sub
xor
daa
pop
add
daa
out
mov
sub
add
loopne
adc
stos
xor
pop
ljmp
in
jecxz
sub
push
or
mov
mov
inc
mov
sbb
dec
adc
xor
iret
sbb
mov
push
pop
popa
shrl
shlb
add
pusha
add
mov
roll
aad
add
rolb
sub
push
push
shll
or
add
adc
mov
mov
pushf
out
inc
mov
cmp
inc
pop
rcr
shl
in
mov
adc
or
push
push
lcall
mov
in
leave
inc
movsb
lcall
and
pop
add
xor
leave
ret
sbb
pop
mov
jmp
addr16
fs
push
push
fs
out
and
push
push
mov
call
rorb
pop
fmuls
mov
or
or
mov
push
sbb
or
nop
decb
stos
pop
test
jne
dec
gs
fstpl
fcoml
adc
testb
jbe
mov
pop
sbb
mov
inc
orb
jge
mov
mov
sub
lea
push
jg
sub
push
nop
mov
testb
je
movzwl
jmp
push
pop
lret
push
push
and
and
push
pop
mov
or
and
in
mov
or
fucomip
ja
sbb
ret
mov
jne
push
cmpl
out
add
or
and
or
dec
dec
leave
xchg
divl
and
mov
hlt
in
add
jecxz
and
divl
add
and
pop
jmp
adc
push
add
adc
outsl
inc
sahf
or
push
or
adc
cmp
mov
jnp
jne
sbb
sub
imul
cmpl
mov
and
mov
mov
lock
lea
push
int
fcmovb
jb
push
pushf
bnd
dec
pusha
xor
cltd
sbb
bnd
jmp
fistpl
je
or
pop
ret
subl
test
sbb
pop
or
jnp
pop
ja
mov
enter
movb
movb
ret
jo
push
sbb
mov
or
push
cmovno
fisttpl
mov
or
fstpl
sti
add
sbb
sub
ret
adc
daa
loop
dec
push
int
mov
mov
dec
sbb
test
scas
enter
xchg
push
dec
jge
lea
mov
push
movsb
pop
jle
pop
fs
and
addr16
cmp
jl
inc
rcrl
cmp
inc
jne
movl
nop
jno
dec
cmp
xchg
test
cmp
push
cwtl
out
xchg
cmp
fisttpl
pop
add
iret
rcrl
js
pop
jmp
call
push
push
lods
cld
mov
or
jmp
arpl
pop
pop
leave
mov
push
fldt
cmc
or
xor
je
lea
add
adc
jae
cmp
jne
out
adc
pop
sub
pop
pop
paddsw
arpl
std
cmp
mov
cmp
jne
mov
inc
pop
je
test
dec
movzbl
incb
je
inc
jmp
cmpb
or
jg
cmp
jbe
inc
or
ja
xor
add
lods
negl
jmp
fstpt
sbb
mov
xor
daa
cmp
je
std
dec
jg
cmp
je
inc
out
jns
pop
lea
add
add
jge
jnp
adc
cmp
mov
lods
in
jg
rcrl
or
pop
je
push
push
cmp
outsb
jg
call
dec
and
cmp
das
push
fnsave
gs
pushl
or
pop
bound
std
fcomip
lds
incl
mov
pop
fldl
test
pop
jb
ss
mov
and
push
ja
dec
clc
mov
jbe
ret
dec
mov
mov
push
add
push
push
push
lahf
mov
mov
pop
mov
xchg
fmuls
aam
sbb
mov
fsubrs
daa
and
push
push
xor
cld
daa
adc
pop
movsb
pushf
hlt
mov
jecxz
dec
sbb
andl
out
or
xchg
jne
jecxz
or
add
push
sbb
aaa
jg
shlb
fwait
inc
mov
inc
subb
test
mov
and
mov
enter
test
jo
adc
mov
jmp
or
andb
inc
inc
fistl
sbb
add
jae
outsl
leave
testb
and
lret
pop
or
or
jne
dec
mov
int3
shl
shlb
cmpsl
sbb
dec
add
xlat
inc
sub
pop
enter
int3
mov
add
rcl
mov
pop
jne
inc
inc
jmp
xchg
sub
ret
add
inc
cmp
or
jecxz
sbb
aaa
or
sbb
sete
mov
dec
test
aad
xchg
push
inc
mov
inc
mov
jne
xor
mov
cmpsl
dec
cmpl
or
insl
je
minps
sbb
and
cmovo
mov
add
imul
sbb
jbe
femms
push
movl
out
push
sti
pop
ret
dec
and
adc
xor
add
test
add
push
out
popa
repz
jnp
aam
sub
or
ficompl
add
lret
lods
ret
insb
sbb
lret
or
test
ret
mov
leave
aam
in
inc
inc
or
jne
push
movsl
das
pop
mov
sar
mov
pop
add
inc
and
cmpsl
xor
xor
adc
push
push
shll
lea
or
daa
hlt
daa
loope
pop
or
ret
jmp
je
xlat
ss
jne
movsl
test
mov
pusha
mov
je
inc
cmp
add
fisttpll
dec
mov
stos
sti
jmp
lcall
insb
push
cmp
fidivrl
dec
in
scas
int
pop
dec
push
es
test
sbb
mov
dec
mov
and
fmul
jae
outsl
add
andl
inc
add
or
pop
jmp
and
mov
jg
data16
in
or
cmp
movsl
dec
xchg
mov
add
push
clc
jl
gs
or
jge
mov
imul
push
cmp
xorl
orb
aas
shll
pusha
or
mov
bound
mov
mov
jl
jmp
or
sbb
cmp
jle
pop
jno
mov
test
lcall
push
mov
and
mov
popa
add
pop
or
shll
add
or
fwait
inc
add
inc
cmp
jl
pusha
pop
sub
cmp
decl
ss
das
cmpl
pop
jmp
ret
dec
neg
sbb
divb
popa
cmc
or
jp
push
jo
ret
or
in
orb
pop
mov
jne
or
add
subb
jl
dec
ret
jge
jo
pop
test
jae
adc
fidivl
cld
pop
push
cmc
fidivrl
sub
sbb
xchg
push
divb
pop
adc
pop
sbb
pushl
push
pop
arpl
xor
adc
mov
mov
push
xor
adc
data16
rol
les
or
inc
and
insb
es
push
pop
adc
repnz
pusha
outsl
pop
jge
add
or
in
out
push
push
push
cmpsb
pop
enter
sub
and
insb
xor
nop
ret
aam
push
int3
int3
mov
addr16
inc
add
mov
pop
xlat
std
dec
ror
dec
testl
testl
adc
imul
push
push
orb
xor
add
jo
mov
jmp
mov
outsb
or
dec
xchg
jl
jne
std
sti
xchg
sbb
sub
call
jp
or
ret
popl
movsl
outsl
push
cmp
lcall
insl
jl
push
test
cmp
add
fistl
sbb
fisubrl
mov
popa
dec
add
imul
ret
hlt
fucomip
push
inc
xor
pop
inc
xor
mov
lds
pop
or
testl
fwait
js
adc
popa
stc
push
fbld
and
or
popa
xchg
mov
das
je
push
push
lea
test
pop
pop
cmp
or
push
mov
loopne
pop
mov
add
push
or
sub
ss
fimuls
or
or
sbb
mov
jmp
les
imul
fnstcw
pop
push
in
aaa
mov
xchg
mov
inc
sbb
add
test
and
mov
rolb
add
or
adc
fcomps
call
rolb
or
leave
mov
add
hlt
scas
sub
icebp
je
mov
cs
mov
sbb
jmp
cwtl
call
inc
aaa
adc
test
jne
icebp
lea
cld
std
test
cwtl
sub
xor
adc
push
sub
in
add
in
in
or
pop
gs
sub
or
push
clc
or
ljmp
loopne
cltd
xchg
pusha
inc
adc
pop
imul
mov
sbb
rcrl
iret
gs
mov
push
cwtl
xchg
lea
in
adc
xor
imul
dec
lcall
jl
sti
rorl
xorb
call
pop
xchg
inc
push
sbb
int3
lods
loope
mov
subl
lock
ja
pop
jne
push
push
pop
clc
push
outsl
shrb
adc
scas
mov
add
out
outsb
push
cmc
es
pusha
ds
push
sbb
les
sbb
or
adc
add
test
mov
add
loop
mov
mov
sbb
cwtl
fidivrs
mov
inc
adc
mov
dec
add
pop
mov
sbb
xchg
cmp
rorb
pusha
cmp
sub
insl
shrb
cmp
out
push
pop
mov
cmp
pop
sub
inc
mov
push
call
sbb
test
add
imul
andl
add
fists
stos
stos
mov
xchg
cmpb
mov
cmp
outsb
cmpsb
push
mov
inc
incl
mov
xchg
and
cmp
out
jmp
fnsave
lret
add
lea
ljmp
je
mov
mov
add
xchg
neg
mov
cld
mov
inc
inc
adc
mov
jbe
inc
inc
cmpb
aam
push
ret
sbb
popa
mov
shll
jle
js
lods
push
mov
das
mov
scas
fstp
out
jo
mov
shll
pushl
mov
mov
lret
inc
cmp
sti
jb
push
cmp
dec
push
lods
jnp
loope
pop
or
add
loopnew
jmp
jo
inc
xchg
cs
add
popl
xchg
jmp
xchg
or
cmc
mov
leave
sub
inc
gs
mov
call
nop
fdivs
mov
movsl
push
loopne
movsb
cld
rclb
dec
xchg
adcb
cmp
push
push
mov
rep
adc
or
push
jno
or
mov
testb
iret
pop
xchg
icebp
lea
clc
cwtl
adc
push
push
aas
sarb
mov
jb
mov
movb
add
aaa
aad
push
repz
add
ja
ja
mov
shr
test
outsl
call
out
loope
rep
inc
inc
mov
xor
rcrb
push
mov
scas
popa
in
cli
mov
mov
mov
outsb
fnstenv
push
push
push
xor
aad
leave
enter
dec
outsb
dec
add
and
jb
lret
std
mov
adc
ret
add
mov
mov
je
filds
mov
mov
or
mov
mov
adc
mov
in
in
test
xor
sbb
shl
in
ja
and
and
dec
inc
add
dec
mov
dec
out
adc
test
mov
dec
cmp
mov
xlat
ds
sbb
push
test
pusha
sub
imul
sbb
add
pop
arpl
pop
addr16
lea
loope
clc
push
test
inc
sarl
push
hlt
add
jne
mov
enter
and
test
call
mov
in
sbb
in
sarb
lea
add
jmp
lods
sarl
pusha
or
sbb
rorb
cmpsb
inc
ljmp
jmp
mov
inc
mov
sub
outsb
imul
test
daa
test
aaa
adc
push
cmp
lds
movb
mov
subb
pop
sbb
push
cmp
xchg
outsb
cltd
jl
loopne
ss
ja
adc
dec
jne
aam
iret
rorl
adc
pop
sbb
fwait
xor
test
xor
pop
add
insb
push
and
cmp
inc
push
cmp
push
push
popa
ret
out
test
pop
xchg
pushf
or
outsb
adc
int
inc
test
ret
adc
sub
ret
and
std
cld
or
mov
jne
dec
sub
inc
shlb
inc
sbb
cmp
jbe
clc
jb
loop
mov
mov
and
sub
adc
jmp
or
clc
loopne
fldenv
insb
pop
test
push
enter
out
mov
loopne
or
xor
rorl
out
aaa
mov
add
mov
sbb
pop
int3
lea
sub
sub
pop
and
enter
nop
and
inc
aas
mov
scas
sbb
scas
add
lcall
inc
mov
mov
cmpsb
imul
imul
or
xlat
out
sbb
or
lock
push
lea
int
shll
popf
or
adc
inc
inc
jo
or
js
lea
jl
cld
jg
ret
testb
push
neg
gs
sbb
cmp
dec
stc
sub
jne
sahf
jl
and
or
mov
fisttpll
pop
mov
add
outsl
add
dec
push
and
or
mov
pop
mov
out
add
add
mov
daa
and
sub
push
scas
inc
pop
lea
lcall
adc
imul
inc
xchg
sbb
imul
imul
movsb
imul
lcall
mov
pop
subb
xchg
test
mov
adcl
lods
add
or
add
movsl
loopne
fidivs
ljmp
adc
pop
nop
shrl
daa
push
jne
je
and
or
and
js
push
jle
mov
test
int3
cmp
adc
cli
add
jmp
pop
jg
xchg
bound
clc
push
sbb
scas
adc
dec
adcb
sti
fcmovne
inc
mov
pop
xchg
fidivl
addr16
pop
push
or
push
push
mov
lret
sbb
imul
sub
add
push
rcl
mov
cld
push
sarl
jp
imul
push
test
mov
mov
pop
inc
dec
push
or
test
or
jne
rcrl
aas
dec
pop
or
iret
jbe
int
adc
push
and
dec
nop
or
inc
das
dec
jae
mov
dec
add
xlat
loopne
loope
and
and
jmp
push
int3
add
sub
outsb
mov
push
jns
push
adc
adc
xor
add
add
or
mov
sar
icebp
aas
jnp
pop
das
pop
mov
mov
loope
in
fisubs
and
mov
pop
cmp
cmpsb
fistpl
mov
inc
sbb
inc
mov
lahf
ds
jbe
cli
mov
add
push
mov
leave
and
and
sub
shlb
xchg
dec
in
mov
add
inc
lods
xchg
or
xchg
jmp
test
or
xchg
mov
mov
lea
or
mov
aad
xchg
lods
push
add
jbe
inc
mov
xchg
inc
mov
jae
mov
cmovbe
mov
jmp
or
ds
fs
sbb
sub
lea
xchg
sahf
lds
and
test
or
mov
sbb
inc
xchg
in
cli
dec
mov
mov
or
stos
mov
jo
loope
add
push
sbbb
notb
call
pop
xor
push
or
sti
shll
inc
adc
jo
mov
paddd
or
jns
cmpsb
dec
ficoms
andl
adc
sub
fisubl
pushl
pop
adc
adc
sbb
jmp
add
bound
test
lods
xchg
jmp
in
push
lea
push
dec
mov
imul
pop
incl
xor
stos
xchg
xchg
mov
lods
insb
push
movsb
into
mov
xchg
sub
subb
jecxz
sbb
jbe
pop
push
out
push
dec
xor
push
xor
out
sub
mov
pop
lret
hlt
jmp
shlb
shr
push
or
pop
and
dec
mov
jae
pushl
sbb
sub
decb
iret
jne
add
cmp
sbb
pop
jne
mov
cmp
es
add
pop
and
sahf
popf
pop
mov
or
aaa
jmp
rcrb
out
push
aad
push
fisttpl
test
jnp
test
test
mov
aaa
loopne
jmp
jmp
test
mov
cli
dec
sub
ret
mov
mov
mov
push
push
push
fstl
push
in
or
inc
or
mov
jne
xchg
pop
mov
sbb
mov
cmp
xlat
je
mov
insl
sbb
pop
dec
jbe
push
into
jne
mov
push
fs
test
jl
shl
inc
jmp
mov
push
ja
frstor
fmuls
sub
jnp
incb
aam
orl
aam
cmp
fcompl
and
pop
push
and
jl
pushf
shl
gs
ja
in
and
mov
decb
jne
call
sub
or
xor
sub
mov
ss
jb
inc
mov
test
or
hlt
mov
clc
add
addr16
test
test
add
ret
xchg
outsb
xchg
push
decb
jge
les
imul
mov
cmp
add
or
das
sub
jge
dec
orb
jnp
mov
lods
sub
cs
mov
cmp
or
mov
jne
clc
insl
sub
xor
lahf
mov
pop
lock
stos
and
jne
arpl
dec
cmp
imul
in
inc
add
cli
es
or
and
cmp
jne
pop
mov
lock
sbb
push
xchg
pushf
cmp
je
sbb
mov
xor
xor
inc
loopne
inc
xor
pop
sbb
je
push
inc
mov
jmp
cmp
mov
mov
dec
sbb
xor
dec
aam
mov
incl
xor
adc
sbb
or
fcmovnb
dec
lea
inc
ret
aaa
imul
add
push
or
add
mov
test
shl
rclb
adc
pop
mov
lea
in
mov
cli
ja
lea
dec
repnz
hlt
lea
cld
lock
jge
mov
push
out
jmp
call
inc
inc
jmp
push
add
mov
clc
xchg
es
ficompl
lods
lea
or
inc
jno
ljmp
enter
stos
or
cmpsb
or
sbb
js
mov
push
inc
push
rolb
push
xor
iret
movsb
addr16
mov
or
jge
popa
inc
je
adc
jle
imul
adc
or
dec
mov
or
push
call
cmp
add
push
adc
add
dec
ror
cmp
and
cs
xchg
jp
mov
insl
call
adc
sub
mov
jno
jne
jmp
inc
inc
mov
clc
push
inc
inc
dec
je
adc
pop
mov
jmp
sbb
je
and
test
ret
adc
push
pop
je
cmp
push
adc
out
insb
sbb
les
cmp
arpl
cmp
xchg
fisubrs
or
adc
cmp
sbb
imul
xor
push
icebp
push
popa
mov
mov
pop
jne
mov
test
bound
sbb
das
jo
inc
cmc
sub
push
push
or
xor
mov
mov
push
sbb
push
sbb
and
sbb
and
dec
mov
pop
adc
mov
cmp
js
pop
or
call
cs
mov
push
sbb
sbb
popa
and
sbb
dec
fmull
insl
in
roll
mov
mov
jae
andb
loopne
mul
or
aaa
and
or
ss
out
sbb
or
or
les
push
jmp
clc
mov
pop
mov
adc
dec
data16
dec
fsubl
push
hlt
adc
jnp
dec
in
sbb
idivb
je
testb
je
ds
mov
jbe
add
aad
push
fidivl
inc
cwtl
lods
lea
xor
addr16
xor
sub
push
jo
mov
and
pop
loopne
jne
bound
je
push
fs
outsb
out
xchg
addr16
mov
add
jmp
cmp
jo
mov
push
mov
mov
lods
cmp
adc
push
dec
rclb
xor
inc
mov
xchg
repz
lret
enter
sub
add
pop
rcrb
adc
mov
lods
inc
outsb
cld
push
cmpb
inc
in
push
pop
push
push
outsl
add
movsl
mov
adc
mov
push
mov
fimuls
ljmp
repnz
add
jmp
add
xor
xchg
sbb
pop
sbb
push
sub
and
fdivl
push
je
gs
or
jl
mov
push
int3
sub
into
xchg
or
insl
jbe
push
sub
push
pop
sbb
pop
inc
jnp
push
clc
xlat
xchg
mov
and
cmc
int3
mov
in
mov
lahf
add
popa
or
arpl
test
loopne
je
sbb
pusha
add
jns
sub
test
add
sub
addr16
sarb
add
add
push
adc
je
mov
push
rep
cmp
and
out
adc
mov
pushfw
inc
pop
xchg
mov
jmp
loopne
pop
or
adc
cmpsb
int3
lock
add
lea
lcall
pop
push
dec
test
cmpsb
inc
cmp
sub
mov
push
add
pushf
mov
cmp
push
jb
adc
jmp
mov
add
inc
and
jmp
mov
les
cmpsb
imul
and
push
add
dec
xorb
mov
call
jb
sub
or
jae
adc
or
loope
out
fadds
push
cmp
enter
push
enter
lock
enter
in
or
enter
rcl
fadds
add
add
movsl
cli
frstor
add
imul
outsl
jb
stc
outsl
neg
or
dec
push
push
adc
add
dec
inc
jg
sti
add
inc
dec
dec
inc
adc
push
xor
cmp
pop
fisubrs
sub
insb
je
and
imul
insb
imul
aaa
daa
aaa
outsb
outsl
mov
cmp
and
popa
arpl
data16
outsl
cs
cmp
outsl
outsb
aaa
sbb
inc
jae
fs
jo
jb
jbe
jb
jne
xor
std
and
arpl
sub
mov
sub
pop
das
pop
push
das
in
fs
fsub
pop
xor
imull
fdivs
xor
pcmpgtb
arpl
fcompl
or
inc
and
gs
aaa
adc
sbb
aaa
jl
outsb
jne
lods
je
mov
arpl
sub
jae
fs
add
mov
addr16
insl
and
ss
popa
das
test
xor
dec
adc
push
sub
jl,pn
inc
sub
popa
jb
jne
jae
mov
and
xor
outsb
outsb
subb
outsl
add
out
ficoms
pop
loope
sub
push
imul
inc
sub
and
dec
imul
int3
jge
or
adc
pop
jecxz
push
aam
ret
add
fwait
imul
loopne
sub
insb
ja
jo,pt
outsl
sbb
je
popa
xor
jbe
push
fidivl
mov
xorps
filds
addr16
outsl
js
add
and
jmp
sub
sub
mov
add
or
cmp
mov
pop
imul
ljmp
add
aad
xor
add
bound
add
add
or
rorb
sbb
int
lea
mov
orb
xchg
orb
xchg
xchg
and
fldl
add
js
or
and
sbb
add
fists
jo
inc
or
dec
push
jns
or
cwtl
repnz
xchg
adc
sbb
sbb
dec
sahf
cmp
call
sbb
repnz
xchg
js
jns
jp
cld
enter
sbb
or
mov
shrb
fs
adc
sub
push
lret
add
das
movsb
add
enter
jns
and
iret
lahf
lahf
sbbl
mov
fsubs
pop
inc
sbb
mov
inc
mov
stc
or
mov
sbb
in
call
xchg
cld
jbe
push
add
pop
pop
fisubrl
xor
mov
loopne
cmp
jle
add
cltd
xor
jnp
jp
jne
sub
dec
add
or
inc
test
push
add
nop
addl
pop
addb
sub
cmp
and
add
or
and
adcl
sub
pop
addb
or
mov
pop
add
fs
gs
popa
outsb
fs
aas
sti
or
dec
outsb
outsw
adc
insl
insl
add
pusha
ja
dec
imul
stos
push
rclb
inc
sbb
stos
mov
arpl
or
arpl
add
adc
push
ja
daa
adc
xor
insb
pop
jb
add
mov
popa
insl
pop
inc
jb
gs
popa
mov
or
jb
addr16
subb
push
push
imul
dec
xchg
xor
pop
pop
sub
test
cld
int
mov
add
aas
sti
mov
or
jne
jb
push
fucomip
jle
gs
fs
insb
jae
push
popa
insb
jne
add
bound
push
jo
in
add
cmpsl
and
sti
cmp
ds
or
and
sub
and
clc
insb
imul
sbb
push
je
inc
ja
mov
mov
xor
or
or
xchg
sbb
jb
je
outsb
bound
dec
push
jbe
rclb
negb
imul
or
dec
inc
dec
or
rclb
sbb
pmulhw
fs
dec
pusha
cwtl
add
shrb
xchg
lea
insb
ret
inc
ja
or
xchg
push
jo
pop
dec
add
inc
test
cwtl
mov
insl
inc
sub
int
lods
inc
movsl
jae
repz
js
lods
popa
jae
push
int3
sub
lahf
or
not
and
mov
int
adc
lahf
pop
mov
add
inc
xlat
loopne
jb
jae
in
insb
dec
jae
popa
jno
cmpsb
mov
fisubrs
je
shlb
push
dec
inc
xor
adc
lcall
jo
push
imul
push
daa
js
gs
mov
mov
shlb
xchg
mov
add
dec
cmp
cmpb
aas
add
inc
adc
in
das
lock
add
add
jge
xor
add
imul
cmp
add
add
and
adc
sbb
jnp
insl
lock
mov
push
xor
add
add
add
push
dec
ljmp
aad
adc
inc
adc
xchg
add
add
pop
fistpll
xchg
mov
mov
mov
fstpt
mov
xchg
sbb
mov
add
jp
cmp
notb
int3
lock
sbb
xor
xor
mov
mov
fidivs
and
inc
cmp
adc
fnstsw
out
mov
sub
cmp
jnp
push
push
dec
mov
jno
jle
sarb
add
outsl
inc
add
outsl
cmp
add
inc
shll
mov
loope
mov
test
das
inc
sub
mov
jmp
bound
or
sbb
imulb
jae
jg
inc
test
lds
loop
cli
stos
mov
cld
xor
inc
leave
add
fistpll
in
mov
add
arpl
push
add
in
outsl
clc
push
aas
push
add
cwtl
mov
dec
xor
pop
fcoms
mov
fildl
lock
mov
ljmp
dec
cmp
stc
add
ss
add
dec
arpl
outsb
jnp
add
add
inc
in
add
sub
add
idivl
xchg
push
int
dec
lds
cmp
fstpl
add
ret
xlat
ret
mov
into
add
xchg
add
add
pop
fstpt
mov
jle
xor
mov
dec
push
aam
test
pop
pshufw
xchg
pop
aas
add
imul
push
lcall
pop
add
or
add
loopne
enter
jo
inc
out
push
insl
loope
fsubrs
pop
outsl
cmp
sti
test
jnp
add
push
or
insb
or
xor
or
idiv
in
sbb
cmp
adc
pop
or
or
push
push
push
test
pushl
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
xor
aas
push
adc
xor
std
call
pop
adc
and
push
xor
adc
add
inc
or
adc
sbb
adc
sbb
sbb
lock
add
adc
or
inc
adc
fistps
push
or
adc
adc
sub
xor
or
xor
mov
and
mov
pop
adc
mov
or
inc
cwtl
add
push
outsl
mov
adc
filds
push
movups
lock
pop
scas
mov
add
sbb
add
dec
push
add
or
pop
push
sbb
nop
xor
push
or
jecxz
xor
sbb
dec
add
push
sbb
adc
or
fimuls
std
jno
inc
cmpsb
lock
add
adc
test
ficomps
adc
sbb
adc
or
ret
adc
sbb
pop
mov
sbb
sbb
pop
push
xor
inc
add
adc
sarl
adc
xchg
add
cld
adc
pop
mov
add
add
lods
or
or
cmc
fcmovnbe
jmp
adc
lock
add
push
inc
dec
dec
nop
add
into
orl
movhlps
loopne
add
or
or
add
sbb
mov
inc
fnstenv
push
or
aad
pop
std
dec
xchg
jns
lock
push
inc
sbbl
pop
push
das
add
in
mov
rolb
inc
aaa
cmpxchg
loopne
or
cmc
push
and
cmpsl
mov
xlat
rcll
nop
sub
pop
jmp
and
pusha
jb,pn
push
aam
ja
pop
aam
xchg
pop
inc
add
xor
pop
cs
cld
or
push
arpl
dec
dec
mov
jb
jmp
or
cmpsb
dec
mov
jns
adc
ja
loopne
cld
outsl
dec
inc
sbb
mov
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
call
in
add
add
cmp
add
cmp
sub
cmp
add
sub
imul
sub
sbb
das
inc
sbb
add
sbb
mov
jle
or
sub
cmp
movl
and
insl
sti
in
fistps
imulb
sbb
cmp
add
bswap
dec
ja
sti
mov
ds
sub
minps
sub
mov
and
dec
sbb
rorb
mov
mov
pop
mov
sub
imul
add
sub
jnp
mov
adc
push
or
into
mov
mov
mov
jmp
ret
cmp
sbb
adc
push
mov
enter
clc
sub
inc
divl
fucomi
push
call
sub
lret
insl
jnp
adc
sarl
jb
adc
icebp
sub
jg
inc
or
imul
sub
cwtl
sbbb
insl
and
call
imul
add
invd
insb
pop
sti
sbb
or
or
or
test
je
fstl
fcoms
inc
cmp
add
notb
jns
ret
mov
inc
clc
or
aaa
mov
sub
mov
mov
fisubl
mov
lcall
mov
pop
pop
sub
push
add
cmp
mov
insl
test
bound
cmp
or
xchg
aaa
test
mov
sub
shl
lods
rclb
xor
xchg
push
add
add
jbe
mov
sub
clc
adc
push
sarb
jle
rclb
adc
pop
nop
mov
add
dec
mov
or
xchg
idivb
rclb
test
push
mov
insb
int
mov
out
ret
pop
das
sbb
adc
sbb
aaa
testb
sub
sub
mov
insl
mov
shrb
or
loope
pop
fistpl
ss
sbb
jbe
lods
lock
or
mov
repnz
lods
insl
test
or
sub
add
jl
shll
icebp
cmp
sbb
mov
sbb
mov
sbb
ljmp
rcrb
andb
arpl
or
sbb
sbb
ja
jb
shr
add
imul
insl
popa
xlat
aas
mov
mov
push
mov
or
scas
add
pop
or
xor
lret
insl
jg
call
sbb
mov
ret
or
icebp
mov
data16
add
fmull
ja
mov
ret
aaa
pop
mov
fldl
sbb
js
lret
cmp
icebp
pop
push
or
and
test
sbb
sbb
cmpsb
mov
mov
mov
cmpsl
lods
out
add
ss
adc
adc
and
insl
imul
insb
out
mov
add
mov
mov
pop
cmp
pop
mov
dec
test
lsl
repnz
call
adc
es
xor
and
pop
or
repnz
add
push
mov
data16
mov
fstl
daa
subl
inc
inc
ljmp
in
pop
add
mov
movsb
add
dec
jmp
jno
cmp
hlt
icebp
aam
pop
or
xor
jecxz
adc
adc
ret
and
lea
jmp
or
jo
add
sarb
dec
push
mov
adc
cmp
or
or
add
pop
push
loope
cmpsl
push
imul
xor
adc
dec
mov
push
fcmove
int3
add
ret
adc
sub
sub
push
adc
imul
xchg
test
xchg
shrb
sarl
push
push
add
cmp
sbb
pop
jmp
adc
push
or
push
mov
add
cmp
xor
pop
outsb
outsl
or
idivb
movl
lock
in
js
fadd
dec
jae
pop
cmp
mov
lea
adc
push
mov
into
push
mov
popa
rclb
cmp
mov
add
js
sbb
add
jmp
mov
sbb
mov
cmp
ja
or
mov
push
xor
push
mov
adc
insl
sub
ret
xchg
je
jmp
imul
sbb
sub
adc
or
nop
subl
cmp
or
clc
sbb
dec
daa
push
pop
and
dec
insl
fndisi(8087
cmp
stc
or
inc
sti
insb
lods
mov
sbb
fstps
dec
int
bound
rcr
mov
mov
xor
pusha
sub
jl
dec
in
mov
xchg
repnz
adc
fbld
call
int
cmp
mov
popa
push
pop
out
imul
sbbb
inc
mov
aam
leave
add
outsb
add
or
push
pop
add
fnsave
loopne
adc
mov
int
gs
adc
loopne
test
xchg
lret
jns
cmp
popf
or
adc
leave
mov
xchg
pop
lock
aad
rcrb
faddp
sti
rclb
in
pop
mov
in
mov
add
or
mov
pop
sub
fisttps
lods
mov
cs
xchg
lds
shr
test
ljmp
subl
or
adc
clc
mov
leave
jno
mulb
insb
sarl
push
lcall
or
sbb
or
push
out
outsb
mov
je
negb
mov
xor
push
loope
xor
and
xlat
jp
scas
and
add
inc
cld
cmp
push
rcl
pop
fwait
push
or
and
sbb
lret
mov
jnp
insl
sti
fmuls
jne
jle
pop
push
pop
adc
fmull
scas
cmpsl
xlat
sbb
jg
jbe
jno
andb
and
inc
pop
ret
sarl
xchg
pushf
pop
mov
rolb
and
sbb
pop
push
push
pop
cwtl
scas
mov
or
sarb
rolb
jp
mov
icebp
jne
cmp
stos
shr
add
cmpsl
aas
int
hlt
mov
adc
or
shl
push
cs
rcrb
jne
mov
jae
adc
in
push
fwait
jmp
insl
mov
pop
jb
mov
push
mov
in
lahf
mov
pop
adc
inc
cmp
push
mov
sbb
shll
jbe
lar
sbb
push
pop
loop
add
into
sub
jmp
shll
sbb
bswap
jno
xor
push
inc
lock
mov
adc
mov
push
bound
mov
repnz
pop
jno
mov
lahf
cmc
jmp
mov
xchg
and
xor
jb
lahf
in
inc
xor
inc
in
jge
test
daa
sub
or
adc
fwait
push
adc
jp
insl
jp
xor
or
cwtl
xchg
cld
sbb
add
outsl
xor
cli
mov
add
add
test
mov
or
lret
xor
lret
pop
add
pop
add
sbb
pop
aaa
movb
sahf
sbb
icebp
xor
ret
lock
rorb
outsb
sub
shlb
adc
fucomi
or
mov
leave
jnp
fcomps
imul
jno
fisttpl
mov
xor
push
sbb
je
add
push
and
add
scas
movsl
pop
outsb
into
aam
jmp
cmpsb
popa
jb
sbb
test
xor
inc
rcrb
test
adc
movzwl
or
sarl
add
ljmp
outsb
mov
out
int
jae
xchg
push
mov
or
lret
dec
out
pop
pop
test
sahf
inc
lock
mov
cmpsl
sbb
lret
xlat
mov
repz
push
clc
inc
push
mov
push
stos
inc
or
inc
call
cmpsb
jno
xor
or
fnstsw
lock
pop
lret
xor
rcll
sub
mov
fdivs
push
mov
xchg
fwait
pop
push
cltd
push
faddp
adc
pop
sbb
jb
push
jmp
mov
push
or
leave
out
lds
dec
mov
xor
or
pop
mov
or
jp
out
mov
adc
dec
repz
enter
mov
roll
aaa
and
and
jle
stc
adc
aad
scas
mov
repnz
add
dec
xchg
or
sbb
ss
fnstcw
out
mov
iret
dec
sbb
ja
sbb
cli
dec
cmp
add
mov
into
sbb
js
inc
dec
shll
pop
movsl
ljmp
mov
sub
aaa
push
fstpl
pop
call
or
sbb
or
rcrb
adc
mov
mov
push
add
hlt
lret
pusha
ret
mov
cltd
cmp
neg
aad
add
dec
sbb
out
push
add
adc
test
and
adc
sbb
sbb
addr16
mov
sbb
adc
mov
das
dec
in
iret
inc
scas
mov
pop
incl
mov
fdiv
mov
pushf
lret
insb
dec
push
or
add
add
and
testb
test
pop
shlb
in
jo
mov
push
mov
data16
stos
add
fdivs
mov
inc
and
lret
leave
cs
js
jmp
push
out
cmp
das
mov
lds
push
adcb
ret
shl
push
loope
add
mov
pop
sarl
aam
mov
mov
xor
imull
loopne
push
push
movb
mov
dec
mov
call
jle
into
jp
push
outsb
loopne
int
lock
jns
push
mov
fimuls
dec
in
mov
pushf
and
lods
inc
jbe
mov
lret
adc
mov
mov
cmp
pop
inc
stos
mov
sbb
nop
cmpl
push
or
sbb
pushl
cmp
pop
fmull
cli
sbb
pop
out
popf
push
jnp
sub
dec
push
arpl
push
mov
shlb
shll
popf
and
inc
lods
or
push
xchg
inc
orb
pop
sbb
xchg
push
leave
stos
jns
push
stos
rorb
dec
stc
adc
or
add
pop
mov
add
mov
mov
cmp
inc
pop
sbbl
imul
add
js
pop
xchg
mov
popf
or
add
notb
adc
cmpsl
jb
idiv
or
imul
mov
push
jb
addl
rolb
fdivrp
lcall
xchg
push
arpl
rolb
add
into
or
nop
hlt
xor
ljmp
scas
lods
ficoms
add
push
addl
ds
pop
add
lret
mov
adc
les
inc
imul
mov
cli
xchg
mov
push
inc
ljmp
faddl
xor
or
les
fbld
pop
mov
mov
lret
les
pop
push
mov
pop
mov
and
sbb
pop
xlat
add
ret
roll
popl
sub
add
cmp
arpl
je
and
sarl
gs
insl
add
cli
mov
or
push
push
ss
addb
xchg
mov
arpl
and
sbb
pusha
lods
cmp
mov
jbe
sbb
xor
adc
xor
push
sbb
cld
cmpsl
loopne
icebp
in
shrb
cld
mov
movsb
leave
fs
js
mov
mov
lods
int
lods
pop
and
std
lock
outsb
mov
mov
pushw
jbe
ror
adc
and
sahf
and
dec
push
push
in
xchg
push
adc
push
cwtl
add
dec
int
inc
and
xchg
test
clc
cs
add
mov
adc
enter
xchg
js
push
sub
mov
test
push
adc
pop
flds
orb
cs
adc
dec
cmp
push
rcrl
pop
stc
mov
scas
add
lds
mov
pop
rol
push
sub
ljmp
les
adc
sar
lret
jne
add
jecxz
inc
mov
cmp
push
pop
sbb
stos
mul
clc
adc
subb
dec
cld
dec
test
loop
jecxz
andl
lahf
adc
gs
dec
punpckldq
ss
out
or
add
mov
mov
push
xor
adc
rorl
mov
adc
cli
sarl
hlt
roll
pop
sbb
test
and
or
push
mov
push
daa
clc
mov
mov
ficoml
int
mov
lcall
and
lret
add
fcoms
incl
mov
jo
add
sbb
or
cmp
loopne
add
dec
lcall
test
imul
ljmp
or
or
add
push
or
shlb
adc
add
pop
or
inc
cmpsb
mov
enter
clc
inc
xor
fcoms
push
push
int3
push
push
sbb
xchg
adc
xor
adc
sti
imul
cmp
outsl
add
int
adc
mov
push
addl
xchg
sub
repnz
out
or
push
mov
orl
sub
insl
jmp
popa
ret
dec
insb
mov
push
mov
or
cli
sbb
or
es
mov
and
mov
mov
pop
mov
sbb
mov
jge
mov
popl
mov
ds
stos
xchg
cmp
adc
aaa
push
out
test
rorl
int3
and
nopl
xchg
inc
xlat
cld
mov
sbb
mov
ljmp
pop
addb
sub
mov
sbb
add
add
pop
jg
pop
in
leave
loopne
pushf
xchg
sbb
sbb
je
push
xchg
loopne
pop
lds
push
mov
stos
and
js
jmp
or
loopne
inc
cmp
pushf
stc
add
add
outsb
cwtl
cmp
mov
sub
inc
repnz
and
inc
sbb
pop
add
push
and
pusha
cmp
cwtl
jp
cmp
imul
xor
push
push
jg
popa
push
push
cmc
bound
jle
leave
push
mov
sub
pop
shll
lods
dec
mov
push
ja
int
test
rorb
cli
addb
mov
sarl
iret
or
add
lea
sbb
sbb
and
push
clc
xor
push
pop
pop
jo
mov
popf
jg
adc
xchg
mov
push
test
mov
sahf
xchg
jae
mov
sub
push
mov
mov
addr16
mov
mov
or
add
push
sub
push
loopne
scas
mov
push
xchg
loop
mov
rcrl
push
sub
pop
inc
or
adc
or
sbb
rcl
ss
sbb
icebp
inc
mov
aam
sbb
ret
or
xchg
push
sbb
sub
and
fdivs
push
pop
adc
and
fmull
add
nop
adc
xor
sbb
jbe
push
or
xchg
movsl
ret
inc
add
mull
icebp
mov
in
sbbl
divb
mov
ljmp
shrb
rcll
adc
sbb
aas
sbb
dec
cltd
pop
pusha
push
jmp
rolb
add
xor
xchg
test
call
lret
aad
mov
mov
push
mov
mov
inc
sub
and
mov
fiaddl
cmp
notl
into
inc
add
insb
scas
dec
add
cmp
cmp
popa
fiaddl
push
push
jo
or
dec
loopne
lea
shr
mov
or
sub
push
movsl
xor
rcll
or
inc
sub
int3
mov
push
or
es
sbb
orb
cli
adc
sbbb
sub
add
or
rcll
push
or
add
add
jo
add
rcl
mov
mov
xchg
cmpl
leave
lods
add
sub
insl
push
loop
and
jge
lds
ljmp
inc
add
push
mov
push
adc
or
add
xchg
pusha
stos
xor
out
add
out
push
out
enter
or
adc
pop
add
pop
sahf
adc
lcall
ljmp
das
loopne
cmpsl
cli
push
push
mov
mov
jge
adc
sbb
rcrb
clc
movsl
and
and
sbb
cmp
sarb
daa
push
push
add
mov
addb
je
mov
mov
mov
push
jmp
mov
mov
inc
add
jne
sub
jmp
std
push
movsb
repnz
adc
push
jne
lret
sub
lcall
icebp
insl
stos
lock
mov
or
push
enter
pop
sub
lea
int3
movsb
mov
xlat
sbb
adc
dec
aam
lds
mov
enter
test
movsb
test
or
cmp
cmp
xchg
incb
adc
xchg
cld
mov
dec
push
out
rol
lret
inc
push
mov
es
jne
xor
add
mov
bnd
pop
inc
sahf
or
mov
pop
imul
mov
repz
pop
mov
aaa
call
sub
or
loopne
push
or
popa
testl
push
cmpb
mov
add
pop
loope
test
mov
dec
insl
mov
cltd
rolb
in
adc
inc
sub
icebp
lock
push
inc
push
push
mov
add
inc
add
testb
xor
loop
mov
adc
or
adc
xadd
outsb
and
sbb
roll
push
push
push
incb
sbb
xchg
ret
dec
out
mov
xlat
pop
cmp
or
dec
bound
cmovb
mov
or
mov
adc
sub
push
or
arpl
rcl
add
push
jge
cmpsb
push
jecxz
cmp
test
add
movl
cmc
out
pop
xchg
fmull
cmp
dec
pushf
sub
ret
inc
xlat
and
add
adc
shrb
cmc
movsb
and
lret
mov
push
cwtl
pusha
ljmp
push
lea
pop
xchg
add
adc
xor
scas
or
push
leave
jmp
icebp
lds
call
mov
push
ficoms
mov
mov
cmp
repnz
clc
pop
mov
imul
and
jmp
pusha
data16
shlb
and
imul
inc
insl
les
mov
xchg
sbb
xor
dec
pop
mov
sub
clc
sbb
popa
hlt
push
push
push
lock
scas
adc
adc
or
fcom
xor
ret
pop
aaa
shrl
test
cmpsl
test
xor
pop
xor
neg
push
mov
stos
sub
sub
out
idivb
xor
mov
sbb
rcl
or
loop
mov
out
ret
cs
push
test
push
sbb
jno
xlat
add
adc
push
push
lcall
jmp
aad
popf
xlat
add
or
sub
or
add
pushf
fcom
push
xchg
push
aam
mov
cmpsb
add
popa
dec
popf
enter
sub
and
or
add
push
out
sbb
ret
push
mov
rcll
into
icebp
jae
test
stos
adc
mov
pop
lea
jnp
sahf
mov
cmpl
adc
xchg
sub
nop
add
mov
mov
lods
mov
add
jne
push
das
enter
ja
and
add
adc
or
inc
shl
mov
add
ret
and
loop
ds
mov
mov
jo
mov
mov
sbb
jmp
loope
adc
shll
shlb
call
mov
call
adc
lods
dec
push
int
movzwl
mov
mov
xor
sbb
pop
decl
shll
and
mov
push
cmc
fwait
inc
imul
mov
lods
and
mov
and
out
inc
cmp
dec
xor
push
dec
popf
add
lea
stc
jne
scas
sbb
dec
xchg
xor
mov
xor
mov
inc
and
orl
jo
lcall
cmp
adc
mov
repnz
adc
popf
fwait
in
lds
xor
and
orl
enter
enter
dec
mov
es
jnp
gs
mov
adc
fdivrp
xor
mov
push
xor
xor
mov
xor
adc
cmp
hlt
sbb
test
pop
jmp
push
adc
pop
dec
mov
les
gs
shll
mov
sub
sti
or
push
aad
imul
mov
adc
call
sbb
shrb
es
popa
in
dec
mov
cmpsb
or
push
insb
add
aad
mov
lods
sbb
lcall
insl
ror
bound
mov
mov
add
mov
rorb
mov
mov
inc
xor
fistpl
outsl
xchg
leave
push
sub
fisttpl
mov
aad
es
je
xchg
push
js
jbe
scas
push
inc
adc
pop
mov
stos
or
lahf
rclb
mov
cmp
add
jge
lret
rcll
mov
fcmovne
push
rcl
and
dec
jle
fsubs
jle
adc
ja
or
pop
outsl
call
push
push
push
push
push
push
xchg
shrl
loop
and
xor
cltd
sahf
test
out
out
push
push
sub
or
push
xor
scas
sar
inc
cs
xchg
pop
loope
in
jg
dec
lcall
scas
pop
xchg
arpl
daa
jno
test
pop
loope
test
out
inc
and
or
cmp
jne
push
lock
rclb
adc
jo
add
pusha
test
push
xor
roll
mov
out
test
or
andl
xor
movsb
hlt
or
ffreep
add
jmp
mov
adc
add
test
cmp
popa
sbbb
or
xor
or
in
incb
cmpsl
pop
ljmp
inc
mov
mov
mov
push
rclb
xorb
sub
push
push
andl
or
data16
jecxz
dec
in
loopne
and
add
scas
add
dec
cmp
in
jle
sbb
cmp
add
push
push
bound
bound
fisubl
pop
pusha
sti
inc
fistpl
dec
or
aam
fdivrp
pop
pusha
and
mov
inc
pop
bound
pop
mov
std
ret
xorl
pop
pop
icebp
mov
push
sub
xor
or
lea
adc
loope
cmp
dec
and
push
inc
jnp
cmpsb
and
cmp
sbb
in
sbb
ljmp
es
stos
imulb
inc
sub
pop
mov
pop
in
pop
movsb
mov
xor
mov
dec
shll
bswap
push
cld
loopne
push
xchg
ljmp
addl
pusha
push
or
gs
mov
dec
xor
or
mov
lret
adc
int
out
js
push
inc
jmp
adc
gs
push
inc
sub
iret
aas
mov
jo
and
sbb
jle
xor
mov
clc
or
mov
lods
sub
xor
jnp
or
addl
or
mov
adc
sbb
pop
lock
inc
mov
cltd
xchg
xchg
sub
div
mov
jecxz
sub
nop
into
scas
repnz
lcall
and
push
adc
xlat
pop
mov
into
rorl
cs
or
cmp
mov
cld
lea
adc
divl
bnd
out
and
mov
test
push
xchg
push
mov
xor
imul
out
cmp
mov
call
xchg
insl
mov
hlt
mov
or
pusha
test
daa
mov
stos
sub
add
rcll
rcll
push
jmp
add
fs
adc
shrb
adc
xor
push
sub
leave
and
xchg
shrb
fistps
out
mov
rclb
dec
inc
pop
enter
nop
mov
push
cmc
and
lds
xor
add
sbb
push
fcomip
adc
insl
xor
xchg
and
and
mov
push
xor
sbb
sbb
push
call
ret
dec
adc
into
xor
and
mov
insb
sbb
scas
ss
lock
sbb
dec
dec
mov
xor
test
push
or
fwait
add
mov
sbb
mov
push
sbb
jg
cmpsb
pop
sbb
push
mov
mov
xchg
stos
sbb
pop
lock
clc
je
or
or
int
stos
aam
lret
addb
lcall
clc
cmpsl
andl
out
jno
inc
popf
out
cmc
inc
push
les
push
daa
out
repnz
ret
repnz
scas
inc
xor
sbb
fxch
clc
adc
jbe
push
ret
js
xor
notb
jo
sub
jmp
addb
call
aam
pop
mov
stos
sbbl
ret
mov
rorb
push
addl
sbb
xor
divb
mov
mov
sbb
fsubs
sbb
repz
add
push
mov
push
add
rclb
add
sub
mov
out
or
xchg
jmp
xchg
push
cmc
mov
ljmp
adc
leave
lods
sbb
sub
mov
dec
and
and
push
push
cltd
push
adc
pop
rolb
pusha
fcoms
push
or
pop
and
sbb
inc
xchg
mov
xor
add
push
or
nop
or
dec
rorl
loope
push
aaa
out
fistl
ljmp
and
aaa
add
mov
or
outsb
cmp
cs
adc
movl
or
cltd
dec
icebp
into
add
gs
or
dec
orl
jmp
pop
icebp
cmp
add
and
addr16
push
imul
adc
loop
or
in
push
out
int
ret
loopne
sbb
inc
gs
xor
andl
xor
bound
pop
add
rolb
lock
xchg
xor
inc
mov
pop
jns
mov
cmp
sub
das
sub
mov
push
lcall
push
stos
sub
pop
add
push
mov
cmpsb
dec
scas
bound
pop
cs
addl
mov
imul
scas
enter
push
jmp
jbe
mov
push
stc
jmp
cmp
adc
mov
in
mov
pop
jne
push
lret
inc
test
mov
cmp
mov
jb
jo
lret
xor
mov
mov
or
and
dec
inc
ret
and
add
enter
mov
sbb
andl
pop
sub
pusha
fnsave
icebp
cmpb
ret
movhps
jo
lret
popf
push
bndldx
mov
mov
shll
insl
mov
or
inc
push
fisubl
xchg
lods
or
xor
call
popa
push
ucomiss
dec
popf
addr16
js
rclb
inc
push
mov
inc
addl
xor
sbb
popa
sub
leave
cwtl
push
or
or
enter
cmp
adc
lret
mov
cmp
into
sbb
into
shlb
int3
int
cltd
pop
mov
push
jb
pushf
mov
add
es
jge
add
rcl
adc
orl
aad
adc
mov
push
ret
fldl
push
fcmovne
jb
sub
inc
adc
in
rol
roll
add
mov
in
adc
insl
mov
or
mov
popa
push
loop
inc
inc
lock
stc
cltd
xor
push
adc
test
das
test
js
adc
es
jb
cmp
shll
dec
lock
add
jbe
add
testb
xchg
pop
pop
sub
scas
adc
notl
cmp
push
mov
es
scas
mov
push
mov
popf
mov
add
jne
jmp
lods
mov
or
and
pop
ljmp
pop
scas
push
jge
dec
int
ror
add
shll
push
cmp
xor
inc
or
inc
rolb
mov
test
or
push
add
mov
pop
inc
rorl
js
adc
add
xor
out
cmp
gs
packuswb
pop
xor
push
sbb
adc
jge
inc
sbb
cs
lcall
mov
and
adc
in
leave
or
inc
shll
add
imul
je
lods
orb
and
pop
or
or
sub
and
adc
sub
loopne
scas
mov
ljmp
xchg
pusha
mov
xchg
push
cmpsl
rolb
xchg
lret
dec
movsl
pop
orb
or
jbe
push
xchg
cmp
ret
std
out
sub
add
dec
shlb
add
repz
pop
xor
xor
punpckhdq
pop
add
dec
sbb
push
cmp
out
dec
pushf
jmp
inc
lret
shll
jb
jle
mov
repnz
adc
xlat
mov
inc
rcr
loope
mov
and
cmc
and
pop
mov
inc
rclb
rolb
fs
xchg
aad
cmp
jbe
shrb
mov
and
scas
shl
add
shl
jb
push
mov
and
mov
sub
jge
and
jne
or
sub
sub
mov
xor
js
cmp
aad
mov
mov
ret
mov
sub
jbe
or
jb
and
stos
mov
cmc
ljmp
or
add
test
testb
jo
and
cmp
enter
inc
adc
icebp
jecxz
cmp
mov
int
lea
mov
aas
adcb
add
mov
xor
mov
add
sub
mov
out
ljmp
mov
out
mov
dec
mov
xor
mov
adc
inc
sub
das
jb
push
call
repz
scas
testb
mov
pop
cmp
es
pop
enter
jecxz
push
mov
inc
dec
test
sub
popa
and
mov
aaa
dec
inc
test
cmpsb
jb
add
push
xor
push
push
arpl
adc
das
ljmp
xchg
addr16
fisubrs
add
push
adc
xchg
out
xor
inc
sbb
subl
add
jae
inc
xor
lret
push
and
cs
inc
lcall
inc
adc
sbb
mov
push
mov
rclb
adc
pop
adc
into
mov
aam
pop
push
dec
lcall
or
pusha
jp
cmp
jl
popa
or
push
dec
js
out
add
mov
push
sbbb
es
mov
pop
leave
lahf
call
sbb
sub
mov
adc
in
js
fwait
into
shll
inc
mov
arpl
push
cwtl
push
enter
movsb
mov
loop
add
xor
mov
icebp
or
movaps
in
dec
pop
fistpl
mov
scas
pop
mov
ds
xchg
jo
call
rolb
insb
mov
ja
ficoml
test
xor
shll
stos
ret
mov
nop
rcrb
jbe
and
mov
sbbb
dec
add
sub
add
xor
xor
cmp
andb
in
adc
aad
test
shll
push
push
sub
sbb
xchg
inc
dec
or
and
sbb
mov
daa
addb
pop
pop
lock
ret
sbb
punpckldq
mov
scas
mov
push
sbb
movb
ljmp
popf
jmp
xor
jle
push
es
stc
notl
cmpsl
jp
cmp
jmp
sahf
in
orl
mov
xchg
sub
jo
push
push
out
push
jne
add
out
or
hlt
ret
popa
cmp
sub
rorb
push
xorb
lret
pushf
loop
pop
inc
int3
jne
in
mov
cmp
mov
fmul
xor
add
es
mov
sbb
mov
or
cwtl
push
leave
sub
adc
lock
push
pop
sub
push
jne
ret
jbe
ret
or
push
addb
icebp
pop
loope
lret
movsb
out
lret
mov
sbb
sbb
lret
repnz
push
aas
mov
sbb
call
lea
pop
jae
imul
push
adc
mov
mov
adc
das
pop
fiadds
mov
push
adc
inc
sub
lods
lea
enter
scas
test
adcl
loope
mov
inc
jmp
lods
call
cltd
arpl
cmpsl
shrl
xor
adc
in
push
xor
arpl
outsb
push
xchg
pop
test
lret
orl
clc
cmp
enter
xchg
xchg
out
mov
push
into
les
sbb
xchg
add
lds
mov
js
test
xchg
pusha
rol
rclb
push
scas
adc
dec
cmp
add
scas
jmp
adc
sbb
ret
dec
xor
and
mov
mov
mov
ret
sub
and
push
cmp
jle
dec
repnz
push
add
test
test
push
xor
repnz
add
daa
decb
pop
orl
fwait
push
mov
ja
and
xor
out
pop
cmp
cltd
xor
shll
movsl
rcll
and
rorb
fildll
cmovae
inc
adc
jo
add
test
es
pop
sub
stos
adc
sbb
stc
xchg
js
and
out
sbb
jb
dec
push
sub
cltd
cltd
mov
movb
or
lret
pop
imul
out
xlat
xorb
sub
loopne
pop
push
mov
inc
call
test
and
inc
lea
repnz
shrl
jle
bnd
add
xchg
fsubrs
push
sub
adcl
sbb
lods
xchg
lret
fwait
push
or
lods
test
loopne
pop
cmp
lea
stos
ljmp
push
xor
out
xor
xchg
lods
add
mov
fidivrs
mov
pusha
dec
std
jns
jmp
mov
push
or
dec
adc
mov
lds
xchg
test
pushf
daa
cmpsb
adc
cmpsl
cli
add
mov
dec
pop
inc
cmp
leave
imul
adc
sbb
push
cmp
in
inc
and
sub
adcb
mov
ss
or
mov
mov
inc
scas
adc
push
scas
xor
rcll
mov
mov
enterw
sub
jge
cs
stos
ret
pop
js
sub
in
mov
push
cmp
cwtl
mov
cmp
mov
dec
add
mov
or
sbb
sbb
hlt
or
jo
adc
adc
pop
js
cmpsb
stos
stos
push
rclb
mov
lret
add
mov
adcl
test
inc
test
je
fsubrp
sbb
popf
cwtl
push
or
and
pop
inc
xchg
add
xorb
rorb
ret
popa
lret
clc
into
or
xor
inc
or
scas
cmp
inc
adc
repnz
rolb
shl
sahf
mov
shl
test
sbb
push
cmp
cmp
mov
push
inc
mov
imul
sarl
pop
test
add
call
mov
mov
jmp
ret
clc
sbb
sbb
push
xchg
cmp
mov
adc
mov
les
dec
jnp
push
cmp
leave
mov
push
xor
jb
adc
shll
or
clc
stos
push
sbb
callw
or
stos
ror
push
xor
xlat
cmpsb
cs
add
call
mov
out
add
cmpsb
test
js
and
pop
and
dec
cmpsl
add
test
pop
out
aam
sbb
pusha
pop
xchg
insl
adc
push
cmp
in
add
dec
lods
push
or
push
add
inc
jg
push
push
movsb
dec
lret
jae,pn
jno
test
or
push
insl
push
xchg
sbb
push
pusha
js
sbb
test
movsl
fisubrs
xor
inc
adc
loope
sbbl
adc
inc
jae
or
rolb
add
shlb
je
cwtl
adc
fisubrs
add
xchg
push
xor
mov
adc
xchg
jb
into
adc
sbb
ss
loopne
cmp
sbb
xchg
dec
inc
push
lods
test
push
dec
les
pop
je
pop
adc
js
fmull
stc
xor
push
roll
enter
or
aad
ror
and
ds
pop
xchg
clc
push
jl
leave
lret
es
mov
inc
or
adc
and
movsl
negb
xchg
adc
dec
rorl
xor
enter
add
daa
cltd
mov
sbbb
xor
pushf
xchg
rcrb
mov
add
repnz
add
aad
rcll
mov
dec
pop
arpl
push
and
adc
leave
mov
arpl
out
adc
cwtl
cmp
add
adc
stos
mov
dec
cmpsb
adc
rclb
pushf
fistpl
mov
push
xchg
push
push
leave
mov
add
sbb
je
sbb
shlb
adc
inc
fnsave
mov
data16
add
mov
mov
fcmovne
test
sbb
push
push
push
mov
or
int3
lock
or
or
add
repnz
jmp
cmp
mov
lea
out
push
dec
icebp
outsl
push
prefetch
or
imulb
dec
inc
sbb
inc
xor
jle
push
sbb
add
ret
lds
mov
lret
push
jns
popf
inc
mov
xchg
mov
rorl
repnz
cmc
mov
push
mov
das
or
mov
or
mov
pop
mov
aad
inc
adc
lds
sahf
mulb
repz
and
xchg
pop
aam
sbb
ljmp
je
mov
push
in
enter
sub
fstpl
mov
les
mov
xor
and
mov
roll
mov
repnz
enter
lret
sar
add
add
cmp
xchg
adc
sbbl
or
cwtl
or
inc
jnp
pop
out
xchg
sub
in
int3
ret
mov
inc
dec
jmp
std
fildl
inc
stos
sbb
movb
push
or
mov
sub
int3
iret
add
rclb
mov
push
std
jbe
mov
rcrl
jecxz
mov
jl
fiaddl
loope
and
mov
or
mov
adc
mov
sbb
ljmp
ret
push
divl
addb
pop
rcl
cli
sbb
cmc
push
pop
je
lock
loope
cwtl
rolb
inc
or
or
mov
push
es
popa
mov
and
mov
add
inc
loopne
or
mov
pop
pop
loopne
or
out
adc
sahf
test
clc
or
rolb
jno
cmp
pop
and
pusha
cmp
fisubrl
mov
imul
bound
push
enter
rcrl
add
xor
or
fs
ljmp
or
and
scas
dec
fsubr
add
cmpsl
dec
inc
inc
jecxz
add
xchg
mov
rorl
sbb
testb
daa
cmc
add
addr16
or
fadds
sbb
fimull
mov
sahf
push
subb
jbe
sbb
add
or
and
jp
addb
lahf
out
dec
xor
movsb
sbb
push
xor
mov
aad
or
inc
dec
dec
jl
jne
sbb
mov
push
and
loope
sub
enter
adc
push
dec
mov
sbb
add
xchg
add
mov
push
xchg
xchg
inc
add
lret
dec
test
test
adc
mov
mov
sbb
mov
pop
dec
aam
movsb
mov
jge
and
idiv
add
push
stc
mov
negb
xchg
adc
cmp
shrb
mov
out
mov
test
popa
pop
xor
inc
push
gs
push
fsubrs
sbb
push
jo
inc
jae
mov
test
push
adc
or
shlb
and
bound
push
mov
push
cmp
pop
cmp
xchg
xchg
les
pop
lret
inc
add
jbe
stc
add
or
cmp
shll
xchg
or
loope
add
loopne
mov
xor
popf
fs
idivl
cmp
shll
and
inc
pop
ds
dec
xchg
dec
adc
mov
stos
adc
sub
adc
and
and
jae
push
les
inc
and
pusha
popf
addb
lcall
mov
es
imul
xchg
test
dec
pop
add
lcall
aad
loopne
cmp
cmpsb
dec
addr16
mov
mov
mov
add
sahf
mov
inc
jnp
mov
mov
or
ss
inc
adc
cmp
mov
mov
inc
in
xlat
negb
adc
xor
repnz
mov
dec
ret
ret
jne
or
pextrw
or
add
add
and
lock
jp
xchg
inc
mov
sbb
loop
push
test
push
stos
push
sbb
adc
add
xchg
sub
push
andl
add
mov
fbstp
nop
pop
mov
test
sub
sub
inc
pop
push
shll
xchg
andps
lods
shrb
or
sub
add
loop
and
sarl
out
dec
push
lcall
jge
sti
cmp
push
nop
clc
add
add
movsl
push
into
lds
int3
loopne
jb
push
push
loopne
movsb
jae
add
mov
mov
insl
loop
jl
xor
jb
addb
xchg
jno
je
movsb
push
pop
sbb
js
cs
icebp
dec
fprem1
jb
cmp
xlat
pop
and
rcrl
aad
and
fs
add
dec
ljmp
lea
dec
adc
hlt
rorb
lock
rorb
mov
or
mov
cmpsb
enter
mov
mov
dec
inc
call
add
loope
insb
inc
ret
leave
or
add
inc
aad
lret
or
cli
mov
sbb
push
cltd
enter
push
and
leave
pushf
or
xor
xchg
push
int3
add
sbb
icebp
or
das
bound
adc
call
daa
xchg
lret
shll
out
lea
sub
imul
pusha
mov
sbb
cs
scas
sub
sbb
data16
jne
xlat
or
push
sbb
sub
icebp
ficoml
mov
xchg
ret
jmp
icebp
in
push
add
push
push
in
inc
scas
push
rorl
shrl
push
add
jecxz
or
xor
adcl
mov
sub
pop
pop
or
pop
cmp
xor
sbb
pop
orl
inc
loopne
inc
mov
pop
cmc
pop
jmp
test
jnp
adc
es
rcll
pop
cmp
adc
inc
adc
mov
scas
push
xor
dec
xlat
inc
insb
stos
lret
or
push
sub
arpl
pop
cmp
push
scas
popf
ljmp
cwtl
sub
sub
adc
das
ret
out
rcl
pop
cwtl
pushf
xor
push
or
dec
rclb
mov
pop
adc
pusha
jb
gs
cmp
and
loopne
into
shrl
in
push
push
cmc
xor
jo
js
rolb
add
loopne
jmp
test
popa
push
mov
mov
dec
das
push
cmp
loop
pop
aam
or
mov
sbb
adc
adc
jo
add
addb
and
add
inc
insl
add
add
rclb
shr
or
fcoml
inc
sub
add
xchg
ret
js
shlb
jp
xchg
sub
mov
rcrb
add
push
push
inc
rol
pushf
dec
adc
shll
xor
loop
pop
dec
aam
cwtl
in
into
ret
push
mov
jecxz
mov
ljmp
into
notb
rclb
mov
xchg
adc
push
scas
pop
push
add
jecxz
jo
push
aaa
in
add
inc
lahf
leave
loopne
loope
pop
cmpl
scas
add
out
or
mov
cltd
and
daa
dec
daa
jb
inc
mov
push
adc
cmp
adc
test
push
addr16
stos
pushf
icebp
mov
roll
shrb
mov
es
adc
xor
dec
out
mov
sub
sbb
pop
andl
subl
add
xchg
push
loope
or
call
cmpb
sub
sbb
pop
or
nop
jae
gs
push
or
mull
add
inc
insl
pusha
push
jns
xchg
iret
js
cld
rcll
adc
or
rol
sbb
test
pop
shl
mov
or
adc
mov
out
js
jp
out
push
adc
push
xorl
data16
add
xchg
sbb
shlb
sarb
les
pop
fstl
ljmp
sbb
pop
push
xchg
jae
xchg
mulb
mov
shr
push
bound
enter
test
dec
das
icebp
mov
loop
dec
jecxz
xchg
and
add
lods
stos
xor
push
or
push
dec
rcll
or
cs
pop
aam
sbbl
or
sub
pop
xor
rcrl
mov
jb
inc
add
push
mov
dec
xchg
mov
push
pop
mov
ljmp
lock
lods
fisttpl
adc
adc
inc
cmp
rclb
xor
add
popa
mov
stos
int
push
cmp
test
pop
adc
sbbb
subl
adc
or
add
ret
xor
lods
ljmp
xchg
mov
xchg
push
or
ljmp
xchg
mov
inc
mov
sub
ret
push
sbb
addr16
ds
not
inc
outsb
test
sub
mulb
mov
mov
inc
push
dec
push
ss
inc
leave
pusha
inc
pushf
push
or
pop
into
pop
daa
stc
loop
mov
mov
mov
faddl
pushf
icebp
or
jbe
mov
sbb
inc
pop
cmc
mov
lock
or
add
jo
mov
or
loopne
pop
xor
add
mov
cmp
or
jo
bound
enter
sbb
mov
mov
xchg
test
mov
shlb
int
pop
pop
subl
outsl
arpl
lcall
push
push
cmp
or
es
nop
outsl
push
lea
pshufw
jl
add
push
fmuls
lock
mov
ret
mov
add
mov
mov
adc
ret
or
test
add
or
aaa
test
adc
push
andl
dec
loope
add
and
inc
inc
loope
repnz
inc
lock
add
es
add
push
cmp
and
add
sub
inc
jnp
cmp
in
inc
pop
mov
sub
pop
pop
and
inc
cmp
mov
sbb
and
jl
adc
or
cmp
in
dec
aad
add
inc
pop
adc
or
cmp
xor
arpl
push
sub
aam
mov
add
das
push
add
loop
daa
cmp
mov
jg
and
loopne
inc
das
cmp
pop
sub
ror
add
xchg
xor
xor
cs
cs
ror
leave
adc
jp
pop
xchg
mov
add
loope
inc
sbb
add
shll
cmc
mov
sub
addl
out
aad
notb
enter
jno
jle
enter
push
ljmp
test
loopne
and
lret
push
orb
xchg
inc
dec
mov
push
sahf
sub
in
or
cs
add
sbb
test
lods
addr16
movsb
roll
in
sub
roll
or
mov
mov
push
sub
xchg
stos
mov
out
ret
mov
push
push
add
pop
orb
sub
fisubl
jb
inc
es
xor
pop
rclb
sub
enter
scas
movsb
cmp
jnp
push
enter
and
inc
mov
jb
into
xor
push
cs
les
lahf
lahf
cmpsb
es
loope
scas
cs
xchg
sti
mov
into
icebp
cmpsl
loope
xor
push
xor
sti
je
jb
jp
shll
pop
xchg
sbb
clc
pop
inc
sub
add
cmp
loope
push
and
in
mov
cmp
sbb
pop
sub
adc
add
jo
mov
cmpsb
clc
rcll
inc
adc
xchg
add
push
sub
push
mov
inc
pop
sbb
cmp
loopne
aad
rclb
or
rolb
add
repnz
or
or
mov
push
xor
out
or
loop
loop
rcl
mov
mov
icebp
int3
push
fs
dec
in
xchg
fwait
dec
lahf
push
rorl
sbb
and
movsb
inc
jge
into
or
push
rcrl
mov
ret
push
or
mov
sbb
pop
fsubrl
push
or
mov
or
xchg
dec
pop
add
pop
jb
push
dec
push
mov
add
out
push
push
xchg
adc
sbb
mov
int
add
mov
add
rcrb
cli
mov
movsl
insb
sbb
sbb
icebp
stos
push
je
mov
lods
pop
pop
push
or
jge
inc
in
sub
push
sbb
pop
xchg
push
jo
jo
xor
dec
mov
push
cmpxchg8b
lcall
loopne
leave
pop
inc
inc
mov
mov
les
pop
dec
or
movsb
pop
mov
es
pop
popf
dec
push
lahf
hlt
jmp
xor
sub
xor
push
dec
lock
aaa
pop
mulb
push
sbb
push
xor
mov
xchg
cltd
add
sub
push
rorb
inc
mov
or
jnp
and
dec
mov
push
lcall
inc
outsb
in
inc
test
and
rorb
and
cltd
pop
int
rcrl
jle
adc
xor
pop
loope
push
movaps
sbb
andl
inc
xchg
sbb
adc
loopne
cmp
mov
ljmp
lcall
inc
pop
in
sub
adc
sbb
adc
pop
jmp
adc
addb
cmpsl
xor
xlat
sbb
sub
mov
into
sti
sbb
jp
pop
js
dec
adc
and
push
idivl
and
test
nop
xor
and
pop
add
adc
movsl
loopne
std
or
mov
or
sbb
push
nop
add
push
push
stc
or
adc
inc
pop
mov
shrb
repnz
xchg
push
sub
scas
mov
xchg
ret
push
or
dec
and
sbb
pop
pop
repnz
sub
sbb
xchg
add
or
xor
adc
sarb
ret
push
pop
xchg
in
cmpsb
pop
std
ljmp
inc
dec
mov
pop
or
adc
shl
mov
in
jecxz
inc
pushf
xchg
outsb
push
lods
pop
ja
dec
push
lods
or
push
cld
out
pushf
xchg
loope
or
lods
dec
mov
sub
aam
push
add
arpl
scas
dec
dec
sub
mov
jo
cmpsb
mov
pop
mov
or
jge
adc
mov
or
inc
mov
and
mov
fnstcw
into
push
testb
inc
push
sub
mov
adc
mov
imul
push
rcrb
aam
fldcw
repnz
test
ret
fimull
int3
sbb
adc
pop
outsl
inc
aam
inc
push
sbb
scas
jo
pop
xor
insb
xor
or
and
adc
jnp
xchg
rol
jmp
push
loopne
xor
shlb
sbb
fisubrl
inc
icebp
and
push
enter
movsb
sbb
sub
into
push
dec
push
loope
mov
movsb
out
cmpsb
enter
jne
adc
hlt
push
dec
dec
or
movsb
pushf
and
scas
add
or
aaa
xchg
dec
jl
add
or
xchg
push
cmp
cmp
xor
ljmp
out
xchg
cmp
jo
jp
sbb
pop
mov
or
aas
lea
and
push
push
out
inc
pop
push
xor
push
inc
shlb
sbb
add
pop
sbb
push
adc
push
in
inc
sub
sub
ret
adc
enter
leave
xchg
add
push
cmp
cltd
add
add
push
mov
int3
push
pop
or
xorb
call
pop
stos
xlat
test
dec
inc
pop
jecxz
sub
test
and
int3
xchg
and
sbb
add
in
or
adc
sbb
push
mov
in
cwtl
pop
pop
notb
pop
cmp
xor
inc
push
mov
scas
xlat
mov
lret
xchg
cwtl
incb
insb
aam
sub
mulb
cmc
cmp
mov
cli
mov
adc
cmp
test
movsl
or
push
push
inc
or
mov
inc
je
adc
mov
std
ret
sbb
stos
sbb
cmp
iret
sbb
fwait
pop
jnp
push
cli
add
orb
test
fcompl
aad
mov
push
sub
inc
iret
fists
mov
jo
jo
js
insl
and
jge
sub
xor
mov
inc
mov
inc
dec
jge
cmp
add
subl
stc
adc
decb
mov
xor
add
xor
mov
add
mov
push
cli
sbb
add
or
jle
aas
push
inc
insb
pop
sub
std
repnz
push
pusha
sbb
inc
push
cmp
push
es
adc
stos
rcrl
or
xchg
movl
adc
shlb
xchg
pop
add
sbb
add
jle
add
sbb
orl
das
push
push
push
divb
or
aam
aam
inc
mov
sub
clc
andb
fmuls
fwait
ret
mov
adcb
pop
cmp
mov
sub
adc
cmpl
mov
dec
adc
add
hlt
loopne
push
repz
cmp
or
sub
addb
push
int
stos
stos
mov
test
loopne
jmp
stos
fcmovnu
adc
push
adc
insl
stos
add
shrl
es
fstpt
pop
xlat
rcll
les
popa
sub
mov
push
loopne
sbb
or
scas
orb
rolb
scas
popf
ljmp
adc
push
mov
jbe
pop
mov
inc
and
scas
pop
pop
push
xor
adc
lods
inc
mov
fwait
mov
push
lock
push
jp
inc
sub
sub
cmp
adc
adc
push
push
sbb
psrlw
shrb
enter
or
mov
pop
push
pop
and
cmpb
icebp
inc
mov
in
pop
sbb
pop
scas
inc
bound
jno
lcall
scas
mov
nop
push
out
test
adc
fs
je
jp
mov
pop
jmp
fwait
fwait
mov
adc
test
jne
sbb
jae
inc
xchg
ds
ret
rorl
mov
popa
mov
int
ljmp
push
xor
push
das
add
pop
sub
xor
push
mov
test
and
inc
jo
sbb
jp
mov
cmp
adc
push
jo
sub
rcrl
add
inc
and
push
cwtl
mov
mov
xlat
aas
mov
or
pushw
mov
enter
pop
mov
and
cmp
adc
xchg
sub
and
repnz
or
fs
arpl
pop
push
sti
push
test
outsl
popf
push
call
add
or
mov
sbb
jl
out
mov
and
or
jno
dec
nop
aas
ljmp
mov
and
mov
inc
mov
sbbl
and
mov
xor
jl
xor
dec
inc
mov
insl
adc
push
lds
dec
lods
loop
push
xor
test
pop
add
add
mov
movsb
rol
sbb
cmp
push
lea
xchg
push
call
call
rcrl
xlat
and
in
xor
jbe
sub
add
shr
mov
lods
ret
xor
mov
push
es
ret
inc
lcall
in
clc
dec
loope
cltd
inc
mov
xor
xchg
or
imulb
mov
sbb
scas
or
inc
shlb
push
add
inc
sub
add
pop
push
inc
jmp
pop
test
push
aad
push
push
cwtl
shrl
ret
leave
push
adc
popf
ret
mov
clc
pop
cmp
adcl
js
les
clc
or
sbbl
sbb
sub
jmp
adcl
push
inc
jge
inc
sar
jae
sbb
mov
in
and
mov
or
popa
xorb
cli
inc
or
adc
add
or
stos
adc
sbb
test
add
mov
mov
add
mov
fisubrs
sbb
jg
sti
lock
push
shl
out
or
cwtl
sbb
adc
jnp
and
ljmp
sarl
scas
xchg
lds
ret
addb
mov
adc
movl
xor
sbb
xchg
dec
or
insb
push
pop
lahf
and
push
pushf
loopne
mov
adc
jmp
daa
push
lcall
add
or
outsl
inc
mov
inc
mov
cmc
or
xchg
xchg
inc
sbb
mov
daa
je
and
or
mov
push
inc
insl
stos
mov
pop
push
pop
mov
adc
add
or
lahf
mov
push
outsb
loopne
or
les
sbb
adc
pop
pop
rcrb
inc
inc
in
pop
mov
std
push
adcb
xchg
popa
sbb
and
loopne
movsl
je
xchg
or
pop
sub
setb
dec
popf
mov
hlt
je
enter
or
dec
or
in
sbb
adc
js
dec
rcl
or
stos
push
aam
fiaddl
cmpsb
xchg
dec
orl
xchg
hlt
sbb
mov
mov
or
pop
mov
stos
lea
jb
push
aam
add
out
test
mov
push
call
xchg
or
orl
pop
mov
jp
clc
inc
xor
cmp
cld
icebp
sahf
add
mov
jno
xor
ret
sbb
cmpsb
dec
and
and
mov
test
mov
push
sbb
pop
mov
sbbl
lods
ljmp
or
cmp
adc
pusha
push
sbb
lahf
enter
push
adc
xor
cs
ljmp
push
mov
int
clc
adc
add
fnsave
test
mov
nop
add
adc
rcrb
mov
dec
mov
out
jmp
add
adc
int
popf
scas
xchg
push
inc
aaa
inc
sub
push
inc
cmc
mov
clc
dec
adc
adc
lea
pusha
push
push
mov
mov
shrb
js
out
int3
imul
jae
cmc
sub
pop
popf
or
loope
xchg
test
sub
fisttpl
dec
stos
cmp
inc
dec
mov
pop
loopne
cmp
xchg
jo
sub
inc
jno
xchg
imul
and
outsb
arpl
add
test
adc
mov
shlb
sahf
stc
and
xor
cwtl
aam
pop
addr16
rorb
pop
lds
adc
push
not
cltd
push
inc
scas
mov
xor
push
pop
mov
fstl
inc
in
mov
popa
movsbl
or
cmp
pop
cli
mov
ret
xchg
test
push
adc
stos
pop
push
add
inc
adc
inc
cs
sub
pop
mov
adc
push
int
ss
or
loopne
push
cmp
or
dec
mov
push
outsb
add
inc
pop
aad
loopne
movsb
push
roll
mov
jbe
cmp
dec
xor
stos
in
loopne
scas
sub
into
add
sub
inc
aam
push
test
add
push
jne
push
movsb
jmp
push
pushf
fisttpll
sbb
ret
dec
mov
sub
sbb
inc
rclb
cmp
rcll
stos
jge
mov
add
pop
inc
pop
jp
mov
or
cmp
inc
add
or
xor
add
xchg
sub
jg
push
popa
nop
and
sbb
inc
add
and
jo
sub
xchg
mov
inc
popa
adc
nop
xchg
jmp
hlt
into
sub
sbb
add
dec
movsl
inc
mov
hlt
mov
inc
lahf
rorb
xchg
mov
bound
mov
movsl
push
or
xor
add
mov
add
inc
sbb
and
push
addr16
push
stos
cmpsl
cld
adc
test
mov
adcb
push
shrl
mov
inc
sti
shlb
inc
xor
loopne
aam
mov
cld
lahf
mov
or
jno
sahf
jo
and
mov
js
loope
cs
mov
nop
mov
cmpsb
mov
inc
xor
cwtl
lret
xlat
or
leave
fisttpl
or
add
or
sub
adc
repz
add
mov
sti
ret
push
push
jg
int3
aad
xor
lea
pop
adc
out
sub
rdtsc
adc
mov
mov
orl
add
add
pop
add
xchg
xchg
mov
push
mov
inc
mov
gs
inc
add
push
loope
sbb
and
stos
test
rolb
jp
or
and
pop
pop
inc
mov
and
xor
movsb
pop
xchg
pop
xor
push
add
pop
filds
adc
push
mov
inc
stos
cmp
or
push
jbe
inc
jae
aam
sub
out
and
xor
mov
push
jl
lret
inc
addb
and
andb
test
loopne
stos
notb
inc
ljmp
or
sbbb
aam
cmp
mov
js
add
aad
sub
push
sbbb
adc
push
rorl
cmp
pop
dec
and
pop
in
mov
mov
ret
inc
in
inc
std
push
jp
jmp
popa
movsb
and
cmc
pop
dec
ret
mov
inc
push
enter
rcrb
mov
mov
sub
mov
add
cmpsl
jae
xlat
jbe
sbb
add
icebp
jg
push
adc
imul
add
or
sub
push
and
test
jnp
pop
push
shrl
and
mov
mov
rolb
jg
leave
loopne
mov
ud2
jp
or
xchg
ret
push
and
adc
cld
test
cli
adc
sub
pop
sbb
add
cmp
sbb
jo
sbb
and
cmp
shl
or
cld
mov
adc
pop
inc
icebp
rol
add
inc
test
sbb
adc
inc
xor
pop
rclb
push
inc
test
js
add
sbb
jne
push
jb
push
std
push
ret
inc
in
cld
adc
pop
add
shlb
cmp
les
push
or
stc
in
push
int
scas
int
rdmsr
les
les
repnz
add
mov
stc
push
jno
inc
add
imul
andb
or
cmp
or
jns
lcall
aam
stos
leave
sub
icebp
inc
inc
fisttps
sbb
sbb
or
dec
rolb
bound
rcrl
adc
mov
cmp
les
cli
push
ja
push
add
sbb
push
cmp
popa
fwait
mov
jge
sub
pop
ljmp
cwtl
addl
jne
inc
fs
int3
idivb
add
out
or
les
imulb
sub
int3
fs
test
cmpl
xor
adc
sub
testb
xchg
sub
sahf
or
rorb
xchg
mov
push
jmp
inc
in
fucompp
mov
push
push
and
lret
test
sbb
jnp
adc
and
test
adcl
lret
dec
adc
mov
fimuls
and
mov
add
test
push
pop
lods
add
sti
fildl
dec
sub
inc
rorl
xlat
add
mov
sbb
lock
test
push
push
cmp
mulb
lcall
mov
sub
clc
or
pushf
push
rolb
lods
movsl
xor
mov
testl
and
lods
push
inc
lcall
sbb
sbb
dec
sub
sub
or
call
add
ljmp
iret
push
sub
shlb
andb
fidivl
push
or
pause
xorl
mov
push
or
test
pop
outsb
cwtl
or
adc
pusha
test
inc
adc
loope
sub
pop
and
or
dec
push
dec
push
cmpsl
sub
cld
fwait
enter
add
rclb
addr16
xchg
jo
adc
shll
sub
inc
test
ret
sub
adc
inc
push
inc
inc
test
push
pop
mov
add
adc
lcall
sbb
sub
push
insl
adc
pop
fistpll
inc
fnstcw
icebp
sub
push
push
push
xor
xchg
mov
push
add
xlat
mov
ret
push
push
mov
inc
push
js
pop
rolb
mov
es
and
jo
das
popf
push
dec
rcl
mov
inc
aad
push
mov
adc
push
loope
adc
rorl
popa
data16
pushf
and
jb
or
int
xor
bound
mov
lret
add
mov
test
inc
xchg
or
cltd
push
shll
or
icebp
xchg
sbb
xchg
add
xchg
loope
mov
stos
pop
xchg
pop
cltd
mov
mov
push
sbb
into
xchg
stos
cmp
iret
push
pop
dec
sub
xor
leave
roll
out
stos
xor
scas
test
push
mov
sbb
lds
sub
and
pop
or
push
clc
das
ss
inc
cmp
mov
shll
mov
daa
ret
int
cmpl
pop
aad
sub
adc
jbe
aas
sub
pop
push
sarl
add
rolb
inc
pop
or
or
in
loop
bound
ljmp
or
mov
mov
push
inc
xchg
jmp
mov
push
lret
subb
add
insl
nop
sub
adc
cmp
icebp
cmpb
inc
sbb
adc
sub
xor
mov
push
mov
adc
roll
add
add
and
xchg
stos
push
daa
xchg
dec
bound
inc
or
dec
and
leave
sub
ret
push
lods
sbb
xchg
pop
je
in
lea
lock
idiv
add
aam
hlt
or
adc
inc
xor
sbbb
mov
loopne
mov
pop
scas
adc
js
lods
movsb
mov
mov
mov
cmpsb
push
xor
or
adc
xchg
sub
push
lods
push
inc
fsubrl
pop
mov
into
inc
pop
stos
fs
add
fists
adc
jb
or
dec
mov
mov
es
fucompp
adc
add
mov
or
cs
pop
aam
pop
or
ficompl
lret
ret
inc
inc
lods
rcll
jbe
adc
inc
lock
stc
push
adc
out
or
mov
imul
push
loopne
xchg
xchg
push
mov
and
enter
pop
xor
pop
jle
out
sarb
into
push
or
sub
jns
into
and
adcb
jmp
adc
inc
sub
clc
js
or
ret
clc
mov
outsb
ret
push
pop
xchg
mov
add
int
daa
inc
lock
cmp
cmc
jp
push
les
push
pop
rcrb
xor
mov
rorl
call
xchg
or
orl
push
add
lods
iret
add
mov
ja
or
push
lret
rolb
outsb
sub
sbb
xlat
pop
cmp
mov
cmpsb
mov
int3
push
lds
xchg
stos
test
or
lcall
jg
ret
je
outsb
or
adc
mov
enter
pop
pop
nop
mov
dec
sbb
andb
hlt
or
mov
add
and
push
ljmp
push
mov
call
stc
add
inc
jp
pop
inc
leave
cmpl
gs
pushf
or
cmp
sbb
sbb
xor
inc
cmp
sbb
mov
fnstsw
enter
leave
aas
push
xor
and
xchg
push
xor
clc
jg
cli
push
xor
or
adcb
ficoms
scas
mov
das
and
pusha
xor
push
fimuls
jb
test
lcall
xchg
adc
outsb
pushw
push
popa
cwtl
inc
pop
or
push
sbb
scas
or
loop
loopne
mov
call
fs
add
push
inc
test
sbb
xchg
scas
pop
stos
insl
sub
cmp
mov
pop
ret
push
xor
push
push
jecxz
jl
sbb
sbb
fwait
or
inc
sub
mov
leave
pop
fldl
sub
push
sbb
jg
out
xor
in
add
pop
add
add
push
cli
iret
sbb
inc
es
idiv
sbb
or
push
push
push
push
sub
mov
mov
add
mov
add
enter
push
jo
sub
sbb
and
jb
fcom
xor
sbb
and
mov
xor
inc
mov
inc
mov
enter
jo
icebp
xchg
addb
rclb
daa
adcb
ljmp
or
das
jo
and
pop
push
xlat
and
dec
bound
xlat
rcr
mov
test
push
and
sbbb
sbb
adc
stos
mov
movsb
orb
imul
or
lods
and
cli
clc
inc
std
ljmp
inc
test
pop
mov
lcall
adc
negl
cs
add
dec
add
adc
movsl
js
mov
mov
xchg
mov
cmp
xor
mov
pop
push
sbb
add
xor
inc
jmp
rcrl
sub
lcall
shr
mov
sbb
lcall
jb
cmp
arpl
add
pusha
adc
xor
subl
test
in
sbb
push
hlt
add
add
adc
and
enter
sbb
ret
pop
adc
mov
cmc
inc
scas
adc
pop
jecxz
lea
in
movsl
stos
or
rclb
jno
or
adc
mov
xor
cmp
popa
mov
xor
inc
bound
xchg
test
icebp
es
jg
insb
ljmp
into
mov
dec
iret
mov
movsl
adc
das
add
ret
xor
hlt
cmpsb
push
aas
aaa
sar
push
sbb
popa
sbb
pop
aad
cmpsl
je
and
lds
movsl
sbb
push
inc
in
adc
repz
loopne
stos
add
rcrl
lcall
sbb
jo
mov
mov
or
and
inc
in
sub
rolb
inc
or
xor
call
jo
rclb
sbb
popf
arpl
les
in
xor
pop
xchg
inc
lcall
movsb
icebp
cmpsb
or
push
or
gs
stos
stos
add
xor
pop
pop
xor
repz
pop
cwtl
ds
or
adc
ret
movb
mov
pop
mov
inc
mov
and
mov
les
repz
and
add
jg
push
aam
loop
mov
sub
loopne
sub
add
add
push
or
popa
stos
dec
pop
or
sbb
ret
mov
in
notb
or
icebp
pop
insl
sbbl
or
jno
add
adc
mov
or
or
or
push
test
inc
icebp
add
cmp
leave
fdivrs
push
pusha
or
push
clc
add
inc
jae
scas
ja
mov
push
mov
enter
or
sub
mov
call
or
cmp
mov
or
divb
into
inc
in
sbb
xchg
xor
icebp
and
inc
popa
addb
pop
ret
and
or
and
pop
sbb
in
pop
xor
push
lea
cmp
out
cmp
mov
sub
rorb
pusha
jo
dec
push
loope
cli
sub
inc
pop
sbb
adcb
pop
jo
adc
cmpsb
sbb
les
add
sbb
add
mov
shll
rclb
test
inc
and
out
dec
sub
sub
pop
add
mov
test
lods
adc
push
jecxz
cmp
cwtl
dec
rcrb
call
cmp
popf
sub
mov
call
adc
xchg
insl
mov
aas
adc
adc
xor
push
pop
adc
int3
aas
pop
push
xchg
mov
cli
xor
cwtl
push
xor
push
or
lock
sbb
sbb
push
push
cmc
inc
push
rcll
pop
or
pop
and
add
in
pusha
lods
mov
inc
dec
out
rolb
xchg
out
fsub
sub
pop
mov
push
cmp
lret
or
pop
test
shrl
push
rolb
inc
push
add
mov
sbb
add
aam
lock
fisttpl
jge
outsb
lock
aam
inc
xor
lea
sti
scas
mov
xor
std
dec
adc
ficoml
decb
add
lds
inc
daa
sub
push
add
sub
lds
sti
cmp
add
or
in
push
pop
or
mov
mov
fxch
ljmp
ffree
cmp
inc
rclb
lret
mov
rorb
mov
sub
dec
shr
inc
cwtl
push
sbb
pop
sbb
pop
sti
xchg
ret
lock
xor
aad
push
mov
jb
pop
push
mov
sub
ja
roll
subw
pop
orl
add
aad
fs
inc
sbbl
lcall
lea
daa
push
jae
test
cmp
xchg
mov
sbb
xor
pop
sbb
mov
or
icebp
cmp
stos
or
shll
push
outsl
cmpsl
inc
push
add
push
xchg
in
movmskps
jl
push
cmp
mov
lock
mov
sbb
subl
push
lods
mov
orb
adc
test
jb
cmp
es
std
or
and
push
xchg
mov
or
dec
icebp
xor
aad
lcall
push
cmpl
jg
sbb
sarb
adc
push
out
mov
and
scas
inc
lea
mov
jo
sbb
adc
mov
xor
test
pop
or
xor
sbb
repnz
and
sbb
mov
mov
pop
rcll
add
rolb
mov
add
pop
je
jnp
pop
jb
pop
mov
add
add
jo
pop
or
mov
mov
lock
or
pusha
in
jl
mov
jbe
sub
orl
mov
dec
sbb
mov
mov
push
fucomip
and
in
xchg
push
cmp
xchg
fistpl
cltd
dec
adc
jbe
cmp
dec
scas
add
push
sub
inc
add
cli
pop
std
push
cmpsb
data16
add
into
push
out
inc
jnp
or
inc
cmp
adc
or
sub
add
rorb
popf
test
pop
xchg
loopne
inc
sub
inc
test
movb
mov
jmp
loop
outsl
adc
rorl
std
mov
sbb
loop
push
adc
mov
or
sbb
mov
cmp
sbb
sbb
push
scas
mov
add
adc
mov
add
inc
adc
jb
aad
xchg
or
pop
cmp
out
or
mov
stos
or
mov
lods
shrl
xchg
andb
enter
or
dec
adc
adc
mov
sbb
inc
jae
sub
sahf
add
inc
stc
mov
xorb
xor
adc
loope
lcall
orb
fsubrs
wrmsr
sub
mov
and
fwait
cwtl
adc
in
inc
pusha
subb
add
pop
mov
or
add
or
addl
das
sbb
mov
inc
test
or
or
or
pop
add
xor
ljmp
or
push
shrl
push
and
or
adc
rol
out
add
js
fists
gs
xor
jo
mov
inc
or
out
or
sub
fs
xorb
enter
or
test
mov
push
or
sbb
adc
xor
clc
outsb
or
xor
repz
push
sub
and
mov
sahf
or
mov
mov
add
das
mov
or
test
adc
das
mov
rclb
loopne
and
stos
sbb
sub
or
mov
andb
mov
lock
hlt
cld
cmc
mov
stc
jg
cmp
sbb
push
adc
push
test
mov
jo
loopne
mov
pop
mov
sbb
shll
cmp
jo
add
xor
and
push
pop
or
rolb
add
cli
jo
sbb
sub
sub
ror
lock
dec
xor
rcrb
mov
add
push
bound
adc
out
jp,pt
movsb
sub
xor
jmp
add
sbb
loop
sbb
rcrl
add
test
adc
sbb
int
mov
jno
fcoml
inc
add
push
inc
and
push
sbb
lods
push
jg
add
leave
push
xchg
loop
push
adc
bnd
xor
arpl
ret
mov
int
add
pop
push
pop
call
mov
fdivr
jne
sbbl
ljmp
test
push
stos
cs
and
leave
mov
add
pop
fisubrs
push
nop
fwait
push
js
add
sub
add
jecxz
sbb
adc
mov
lcall
jo
mov
shlb
call
cmp
sbb
mov
push
ljmp
or
call
jae
clc
stos
mov
cmpsb
pop
cmp
xor
push
or
xchg
inc
and
ret
lods
ss
or
inc
movsl
loopne
cmp
jb
pop
mov
mov
and
decl
mov
inc
movsl
push
inc
cmp
cmp
ret
sub
lds
cmp
add
insb
mov
ss
push
push
mov
scas
push
mov
cmp
or
mov
cmc
mov
and
mov
or
or
dec
mov
push
sub
into
adc
in
and
adc
fs
je
stos
ds
pop
mov
mov
str
mov
mov
xchg
int3
or
cmp
stos
xchg
ljmp
mov
aad
shll
lea
and
lock
fidivrs
or
inc
shll
hlt
mov
and
add
cmpsb
push
push
mov
mov
sub
cmp
sbb
dec
les
sbb
xchg
or
enter
decb
inc
stos
sbb
jo
rorb
lret
test
scas
and
mov
sbb
cmpsb
enter
inc
jmp
inc
loopne
or
sbb
sarb
out
ret
xor
clc
js
or
push
push
shrl
pop
xchg
decb
repnz
cmpsb
loop
or
push
pop
xchg
or
subb
push
gs
aad
ds
sbb
add
stos
outsb
pop
push
xlat
or
jns
push
sbb
xchg
jmp
xor
bound
pop
inc
enter
and
rorb
imulb
ret
sbb
jne
movaps
inc
in
in
out
jp
adcb
mov
mov
movmskps
or
scas
movsb
pop
or
call
icebp
and
push
cltd
or
stos
mov
adc
push
mov
fstps
adc
xchg
and
sbb
cs
dec
mov
cmpsb
jb
add
mov
add
aam
jo
imul
sbb
movsl
stc
add
and
sub
aad
sbb
stc
adc
pop
mov
dec
rcrb
inc
mov
mov
mov
cmp
bound
push
inc
add
and
mov
add
add
mov
fs
inc
dec
push
out
sbb
add
mov
je
inc
dec
add
das
ljmp
push
and
xor
das
add
aaa
test
rolb
add
ljmp
lock
pop
and
js
leave
daa
rolb
push
sbb
and
push
nop
mov
lods
mov
cltd
and
icebp
xchg
push
jnp
cmp
test
mov
xchg
jmp
es
mov
lret
ret
or
test
jg
inc
mov
push
test
push
or
ljmp
aas
mov
push
pop
testb
mov
or
les
fwait
jne
sbb
adc
push
je
std
enter
vandps
pop
test
loop
jo
dec
adc
add
enter
xor
ret
lds
orb
stc
sbb
insb
outsl
push
aad
or
adc
aaa
push
dec
movsl
adcb
add
fwait
mov
mov
or
call
cltd
out
addl
mov
into
jb
dec
inc
adc
push
push
movsb
data16
and
pop
xor
mov
ds
roll
in
vmovaps
dec
adc
pop
or
jae
mov
bound
or
icebp
add
in
les
subb
inc
lret
mov
pop
adcb
test
jae
sbb
leave
icebp
sbb
mov
xor
adc
mov
das
adcb
scas
data16
daa
pop
xor
ds
adc
lock
loopne
cmp
adc
xor
xchg
loopne
gs
fildll
push
or
out
cmp
icebp
dec
dec
test
mov
leave
xchg
push
pop
and
insl
adc
add
add
roll
subl
imul
sbb
sbb
mov
inc
stos
dec
xchg
in
xchg
inc
mov
pop
inc
push
icebp
and
add
sahf
pop
sbb
incl
xor
push
xchg
inc
in
or
pop
inc
or
jb
jmp
sub
adc
mov
inc
mov
sahf
jecxz
call
inc
je
push
fs
aad
add
pop
or
sbb
push
xchg
pop
mov
aam
push
push
add
push
lcall
pushf
mov
sbb
add
popf
inc
xchg
jp
dec
mov
adc
inc
or
lret
or
int
icebp
push
shrl
xor
cs
leave
jb
mov
and
push
enter
shl
call
insb
shrl
rclb
out
das
fildll
mov
xor
movsl
outsl
sbb
ja
and
xchg
xchg
jnp
xchg
add
dec
rcll
mov
jo
out
push
dec
add
scas
outsl
aaa
loopne
xchg
iret
xor
or
adc
lds
or
xor
add
adc
add
push
mov
popa
lcall
inc
inc
mov
cmpsl
daa
pusha
ffreep
pop
dec
xchg
sarb
sbb
repnz
inc
out
push
xorb
add
bound
les
addr16
push
and
xchg
pop
inc
fsubs
and
shlb
test
and
sbb
data16
pop
in
adc
inc
mov
jle
outsb
cmp
out
add
das
stc
or
or
mov
lods
data16
pop
dec
test
shr
adc
ficoml
sbb
loopne
testl
cmp
mov
shrl
int
mov
rorb
call
out
mov
mov
inc
sub
icebp
stos
jb
arpl
push
adc
into
add
cmp
sub
mov
dec
pop
daa
pop
xorb
cmpsb
push
mov
sub
sub
cmove
inc
aaa
push
and
decb
push
mov
and
push
inc
cmc
loop
push
shrb
push
pop
push
lea
mov
push
pop
mov
xor
xor
sub
dec
das
or
cmc
test
mov
mov
int
faddl
stos
pop
push
sbb
adc
adc
xchg
loope
pusha
bound
enter
mov
mov
lock
pop
push
sbb
cwtl
xorb
push
sub
subb
adc
test
sbb
adc
loop
mov
pusha
shlb
nop
xor
aam
aas
cmpb
xor
jecxz
adc
jle
mov
mov
add
loopne
adc
jnp
mov
and
in
mov
aam
aad
mov
sbb
test
fstps
mov
mov
dec
cmp
leave
or
add
pop
ljmp
inc
push
jno
adc
push
sbb
push
xchg
ljmp
inc
daa
push
add
push
add
sbb
jmp
les
jl
pop
mov
nop
mov
add
testb
xor
jp
jmp
add
insb
add
jo
push
xor
test
push
adc
jl
xor
aaa
push
fiaddl
js
adc
adc
aad
dec
jns
xchg
push
rcrb
test
mov
and
xchg
sub
pop
jne
add
add
adc
or
sub
add
loopne
pop
int3
jmp
push
xchg
lods
or
fs
mov
addr16
popa
loope
loopne
aad
sub
popa
mov
jae
sarb
cmp
xchg
mov
add
pop
sbb
ret
out
ficoms
xor
cmc
jg
adc
fs
cmp
lahf
xor
inc
andps
pop
push
mov
mov
cmpsl
and
outsl
xor
fs
outsl
cli
jne
ret
xchg
mov
and
fstpl
push
mov
add
loop
test
and
dec
dec
push
and
cmc
push
mov
push
push
mov
sbb
pop
add
loope
sbb
sbb
mov
adc
inc
push
rolb
or
scas
mov
into
out
inc
scas
xor
notb
adcb
inc
cwtl
ja
jo
rcrl
mov
adc
popa
pop
sub
push
scas
push
inc
and
or
push
mov
sub
mov
adc
xchg
jnp
or
enter
les
xchg
cmp
xchg
adc
in
add
mov
mov
das
cmp
leave
sub
loop
and
cmpsl
and
fisttpll
popf
adc
enter
xchg
mov
push
test
pop
mov
inc
dec
div
mov
jecxz
push
cmp
out
pop
addb
call
nop
orl
hlt
add
lock
ret
xor
daa
mov
adc
orl
mov
and
mov
lcall
and
lods
sbb
jnp
push
rcll
addl
mov
test
cld
enter
mov
insl
addr16
test
adc
mov
mov
cs
push
ja
aad
push
inc
mov
dec
and
test
aas
les
adc
add
cwtl
or
and
pop
icebp
aam
ja
lahf
sub
ret
mov
and
notb
mov
pop
add
adc
mov
or
adc
mov
add
movsl
lcall
movups
sbb
leave
jae
add
scas
mov
push
push
loope
push
adc
ja
addb
adc
push
pop
cltd
sub
mov
cmpsl
loopne
test
mov
outsl
mov
and
and
sbb
jmp
push
rolb
xchg
shrl
pop
or
sbb
push
sbb
pminsw
sub
popl
inc
test
ffree
adc
pop
cmp
xchg
test
dec
pop
cmp
dec
inc
or
ror
adc
cld
xchg
dec
test
cmp
or
ret
leave
lds
fbld
lock
adc
pop
sub
add
and
mov
adc
addr16
lret
sarb
push
pop
mov
pop
in
icebp
push
pop
rcrb
adc
int3
dec
dec
aam
or
lret
xor
lea
pop
dec
or
mov
scas
hlt
adc
or
shll
outsl
push
add
and
xchg
push
test
mov
or
push
push
jae
add
out
mov
cltd
push
int3
adc
leave
pop
mov
roll
repnz
cs
xor
stos
lcall
inc
push
adc
mov
mov
sub
iret
mov
cmpl
mul
cmp
lods
lret
sbb
or
jbe
push
or
loope
sbb
cmp
adc
mov
lret
call
sub
mov
inc
xor
subl
adc
scas
push
js
jo
call
inc
lea
or
jb
add
lock
iret
adc
sub
push
loop
sbb
mov
adc
cmp
cmp
cs
add
push
push
adc
mov
leave
or
in
fwait
in
cwtl
xchg
call
jo
push
rclb
loop
mov
popa
call
into
sbb
add
mov
jne
sbb
je
cs
sbb
icebp
push
or
jecxz
inc
pushf
roll
push
in
stos
dec
ret
pop
in
xor
adc
je
andl
sub
or
loop
aas
xchg
mov
pusha
push
xchg
fwait
adc
inc
jae
in
add
dec
movsb
push
div
cmpsb
mov
daa
adc
jne
mov
dec
sarl
push
push
sti
int
push
add
or
push
cmp
and
repnz
pop
xor
mov
add
fisttpll
outsl
mov
bound
cmp
mulb
push
addl
inc
sti
jns
add
sbb
sbb
mov
leave
jmp
pusha
and
xlat
shrb
inc
push
jno
jb
mov
icebp
push
jnp
adc
lods
or
rcll
mov
dec
movsb
add
repz
add
dec
test
aad
mov
clc
and
decb
jp
outsb
or
mov
sbbl
adc
test
leave
xor
and
dec
xchg
pusha
adc
adc
fwait
sub
loope
jnp
jmp
adc
scas
test
push
cmp
mov
inc
mov
shlb
pop
xor
fsub
out
adc
shr
push
mov
dec
mov
jmp
movl
add
pop
cld
stc
repz
fsubs
pushf
int3
add
cmp
push
lahf
aas
jg
daa
repnz
and
retw
jno
stc
repz
dec
sbb
add
mov
insb
outsl
xchg
out
jg
cld
stc
imul
std
das
loopne
pop
nop
xor
out
lahf
loop
push
jo
pop
mov
aad
jg
cld
stc
add
jns
add
xchg
xlat
adc
fistps
iret
lahf
aas
and
push
cmp
sub
stc
repz
xchg
sub
mov
stos
hlt
dec
in
ror
aas
jg
sub
cs
jb
adc
lock
inc
mov
punpcklbw
cld
inc
out
lahf
aas
cltd
fdivrl
and
push
and
lcall
repz
insb
lcall
pusha
pop
out
iret
lahf
aas
jg
lahf
pop
jmp
jb
movsb
std
push
scas
xor
out
mov
es
testl
out
insb
jnp
and
mov
leave
xchg
push
jbe
lahf
aas
jg
shr
add
movsb
les
cld
stc
repz
cmp
sbb
adc
push
pushf
movsl
fcompl
xor
dec
pop
test
cmpb
xchg
enter
lahf
pop
add
lret
xchg
jns
out
lahf
aas
cltd
mov
scas
sahf
xchg
cwtl
mov
xchg
test
cld
stc
repz
loope
pop
xchg
sbb
mov
insl
stc
lahf
inc
jbe
stc
jbe
push
mov
xor
aas
jg
cld
scas
std
sub
gs
xor
data16
out
lahf
or
fucomp
jae
das
or
es
mov
cld
stc
addl
add
pop
cmp
test
lahf
aas
lcall
stos
jnp
push
nop
cld
stc
repz
mov
push
das
lock
sub
cmpsl
iret
lahf
aas
jg
repnz
xor
stc
repz
push
add
ficomps
jl
ret
scas
mov
aas
jg
and
xor
pop
mov
aaa
fwait
mov
fadd
cmc
mov
movsl
sahf
ljmp
aas
jg
cld
cltd
jnp
outsb
or
add
ret
mov
repz
lahf
js,pn
mov
loope
mov
sarl
cld
stc
xchg
mov
test
ljmp
dec
xor
or
adc
imul
jg
lods
push
mov
pusha
add
cld
stc
repz
mov
xchg
cmpsl
mov
repnz
xchg
lahf
aas
jg
push
cmpsb
jle
mov
aas
jg
cmc
fnstsw
adc
nop
repz
lahf
mov
adc
inc
jmp
mov
repz
popf
loop
out
sbb
iret
lahf
aas
ret
sub
push
inc
jmp
push
cld
stc
repz
jp
adc
sub
pop
mov
iret
lahf
aas
jg
add
cli
mov
daa
inc
adc
stc
repz
cmp
sbb
fcmovnbe
or
lahf
aas
jg
mov
mov
js
lcall
repz
dec
cmp
mov
int3
stos
lahf
lret
jnp
push
aas
jg
cld
clc
lods
pusha
pusha
pop
push
mov
push
nop
mov
repz
lahf
cmp
or
jg
cld
stc
mov
mov
in
adc
mov
out
lahf
aas
jnp
dec
push
je
out
pusha
dec
adc
pop
in
and
aam
jg
fwait
movsl
bnd
cld
stc
pop
sbb
scas
aaa
pushl
jbe
pusha
mov
cmpsl
out
lahf
aas
sub
mov
popa
mov
stc
repz
xchg
fisubrs
lcall
fists
lahf
aas
jg
arpl
mov
dec
js
xchg
aas
mov
lds
cmpl
mov
enter
xor
pop
aad
das
and
cld
stc
repz
mov
lahf
sar
movsl
in
jb
dec
inc
or
iret
lahf
aas
jg
and
fcmovu
loope
xor
lahf
cs
stc
cld
stc
repz
pop
sahf
ds
push
stos
stc
pop
lcall
jg
ja
out
and
xor
repnz
int
stc
repz
and
sbb
push
xchg
arpl
jg
cld
add
mov
adc
mov
fimuls
stc
push
and
mov
cld
rorb
loope
negl
dec
lahf
ds
jg
ljmp
lahf
mov
and
jg
iret
lahf
aas
add
adc
sbb
cmp
cld
stc
repz
or
sar
cli
jmp
lock
adc
iret
lahf
aas
jg
add
stos
sahf
lds
repz
inc
orb
add
inc
popf
nop
mov
xchg
cmp
sub
sub
repz
shlb
add
lcall
jg
cld
imul
cltd
mov
addr16
lahf
xor
fdivs
xorb
cmp
jg
cld
stc
rcll
adc
adc
dec
mov
shr
nop
push
fsin
decb
add
sub
fwait
mov
out
int3
dec
loopne
push
jae
out
pop
iret
lahf
aas
jg
sahf
or
push
rol
in
sti
shlb
push
cld
stc
repz
shrl
enter
cmp
push
xor
fistps
mov
pop
call
inc
stc
repz
push
mov
aaa
cmpsl
pushf
cmp
ficomps
sarl
jg
cld
or
stc
jno
xchg
into
test
iret
lahf
testl
jge
call
into
pop
fldz
sub
sti
mov
mov
xchg
iret
lahf
aas
dec
cmp
repnz
movl
inc
fisttpl
fsubs
sbb
lahf
aas
jg
pop
mov
stos
jo
push
repz
pop
cli
mov
inc
int3
push
ja
inc
add
mov
mov
cmp
mov
iret
mov
int
mov
xor
pop
xchg
cmpsl
jnp
jle
stc
les
mov
das
cmp
mov
into
jno
daa
sbb
js
jg
cld
stc
push
outsl
and
push
cmp
sahf
arpl
iret
lahf
aas
icebp
lea
dec
mov
rorb
xchg
ds
stc
repz
mov
jmp
mov
cmpsl
popa
jo
repz
mov
jp
orb
jg
cld
stc
fdivp
dec
loopne
enter
aam
push
repz
iret
lahf
aas
sub
cmpb
int3
push
mov
cld
stc
repz
dec
adc
ds
nop
aaa
int
gs
outsb
xor
lahf
aas
jg
mov
cmp
jecxz
cmpsb
dec
pop
cld
stc
repz
cmovle
push
fnstcw
aad
sbb
lahf
aas
jg
lock
adc
icebp
xchg
das
push
stc
repz
cmc
add
mov
or
loope
lahf
aas
jg
notl
rcrb
mov
pop
add
inc
das
cld
stc
repz
mov
or
or
inc
jne
aas
jg
pop
push
fldl
add
popa
test
cld
stc
xlat
sbb
pop
or
fiaddl
je
iret
lahf
aas
jg
pop
jp
ret
stc
mov
in
cld
stc
repz
push
cmp
or
pop
aad
and
fbstp
aas
jg
push
mov
mov
mov
xchg
stc
repz
ljmp
push
xchg
adc
sbb
cld
inc
cmp
add
repz
imul
sub
ret
sub
in
roll
and
cld
mov
and
hlt
popa
out
out
aas
xchg
orb
inc
add
ds
stc
repz
add
xchg
cmc
cmp
lcall
mov
jecxz
pop
dec
int3
inc
jg
xchg
fldcw
jg
cld
stc
leave
les
cmc
xor
cmc
inc
mov
and
iret
lahf
aas
xchg
adc
sbb
cld
stc
repz
and
mov
iret
lahf
aas
jg
stos
je
inc
mov
jmp
repz
push
cmp
js
ficoml
into
mov
js
aas
jg
fstpl
fnstsw
test
das
pop
repz
stc
mov
fisttpl
movl
cld
jne
test
push
push
clc
adc
rep
mov
sbb
repnz
sbbl
iret
aas
jg
cld
xorl
loopne
enter
pop
dec
cmpsb
dec
or
out
lahf
xchg
outsl
bnd
xlat
imul
cld
cld
stc
lahf
lds
dec
test
rcl
loopne
sti
rcll
fcomip
inc
cmp
mov
sahf
aas
jg
xchg
lahf
jecxz
xchg
lock
pop
push
jo
lahf
aas
lcall
xchg
pop
dec
xor
hlt
mov
repz
inc
push
das
cmp
bnd
push
mov
mov
sarb
cld
pop
add
lcall
xor
fcoms
pushf
cmp
xchg
jg
cld
stc
pop
sub
roll
mov
andb
pop
cmp
mov
scas
jno
cld
stc
rep
rolb
jle
push
imul
aas
jg
jno
lods
inc
jne
leave
stc
push
inc
xor
repnz
into
adc
loope
cmp
jle
lahf
jg
cld
addr16
inc
cmpl
and
repz
sbb
inc
dec
popf
shl
adc
cld
aaa
lds
fcomps
cmp
shr
mov
cld
stc
repz
pop
shll
jns
mov
aas
jg
xor
sbb
inc
pop
divb
stos
imul
mov
int
pop
aas
jg
adc
ret
jns
push
inc
mov
lahf
jg
and
xlat
addr16
std
scas
dec
cmp
stc
repz
arpl
outsl
or
icebp
mov
xor
les
mov
or
pop
mov
jb
es
cld
in
out
pop
mov
and
jns
js
outsl
arpl
mov
in
insl
sarl
dec
pusha
popf
in
cld
stc
clc
insb
bound
andl
imul
lahf
aas
imul
pop
pop
cld
stc
repz
pusha
cmpsl
xchg
and
or
and
aad
mov
test
imul
mov
daa
or
mov
inc
mov
pop
mov
mov
mov
test
push
pop
stos
ja
inc
loopne
mov
pop
cmp
out
ret
hlt
lcall
nop
call
jle
sbb
aas
aaa
jecxz
movsl
frstor
addl
sub
jg
cld
stc
loopne
push
jb
test
push
sahf
sbb
jns
pop
xlat
push
ss
inc
insl
push
int
cld
stc
repz
ret
inc
out
fcmove
mov
xchg
fwait
mov
jg
aaa
or
or
cmpsl
sbb
stc
repz
addb
cltd
js
jns
pop
adc
jg
leave
or
dec
xchg
push
dec
inc
out
inc
xchg
iret
sub
adcb
push
movsl
pop
adc
or
xchg
stc
inc
aaa
outsl
fidivrs
inc
cmpsl
mov
add
mov
out
fwait
mov
scas
pop
clc
inc
add
inc
ret
out
pop
es
fidivrs
cmp
lahf
sbb
dec
jg,pt
stc
repz
fisttps
and
mov
push
xor
jg
cld
xor
cmp
pop
cltd
pop
xor
adc
out
lahf
lcall
subl
jg
cld
stc
xlat
sbb
into
push
xchg
fcom
cmp
cmp
aas
or
push
pop
or
lahf
aas
ljmp
repnz
lds
pop
or
stc
repz
in
jecxz
pop
clc
add
lahf
or
lahf
xchg
xor
mov
push
jno
cld
stc
rcl
pusha
push
dec
xor
sarb
fmul
lahf
aas
jg
mov
movb
das
cld
stc
repz
pop
cld
sub
les
stc
mov
adc
leave
push
popf
jp
aas
jg
cld
test
adc
jne
or
xchg
cmp
lahf
addb
cli
fcompl
cwtl
xor
cld
stc
sub
inc
push
dec
into
aam
mov
cld
lahf
stc
xrelease
movl
jg
cld
jno
sbb
xchg
jb
fcoms
lahf
out
call
sbbb
cld
stc
jne
push
dec
arpl
inc
inc
movb
xchg
or
iret
lahf
aas
bound
xor
bt
idiv
cld
stc
repz
test
repnz
dec
cmpsb
fadds
fsubp
or
arpl
cld
mov
sbb
popa
add
mov
fwait
aaa
outsl
ficoms
jbe
lret
or
shll
pop
sub
repz
or
cmc
mov
xor
xor
outsl
fidivrs
mov
loop
sub
enter
mov
mov
out
lahf
aas
pop
xor
scas
stos
sub
dec
fcmovb
add
mov
dec
sub
mov
aas
aam
inc
popa
out
lahf
aas
loop
pop
mov
jmp
mov
repz
inc
cmc
mov
mov
jl
xrelease
sub
cmc
imul
cmp
enter
clc
loope
lcall
xchg
adcb
iret
int
fdivr
mov
fwait
aaa
outsl
faddp
in
xor
jnp
jecxz
shl
js
out
arpl
insl
cmpsl
test
dec
dec
icebp
jmp
mov
inc
mov
adc
sub
pop
cmp
aaa
outsl
fiadds
pop
fistpl
jg
lret
sarl
int
jne
push
int3
pop
inc
xor
pop
cmp
fidivrs
mov
pop
repnz
cld
stc
repz
lahf
setnp
iret
push
std
cmp
daa
rep
jns
mov
or
and
in
sti
mov
cld
stc
popf
flds
movsb
roll
jns
outsb
ficoms
jne
xchg
cmp
outsl
mov
out
inc
adc
cmp
out
fwait
test
sahf
cs
fs
adc
jns
push
cli
lret
jge
mov
movsb
ret
outsl
fidivrs
inc
and
stos
jb
cmp
or
out
fwait
das
jl
mov
mov
arpl
aas
push
mov
sub
pop
push
out
stc
repz
push
adc
out
sub
cli
ret
or
jg
cld
or
and
push
fdiv
out
lahf
in
jecxz
xchg
shll
mov
cld
stc
push
pop
fisubrs
rcr
icebp
addb
inc
adc
rcrb
leave
mov
jp
test
test
push
cmpsl
lea
sub
adc
lahf
aas
jg
addl
mov
popf
js
out
push
jmp
dec
cmp
push
test
out
aas
lahf
add
and
dec
iret
test
push
loop
shrb
sub
cmp
sbb
jle
push
cmpsb
xlat
and
xor
add
dec
lds
push
jp
out
push
mov
mov
shll
aaa
cmpsl
cmp
cmpsb
call
jne
cmp
xchg
out
repz
and
decl
repz
mov
bound
push
xchg
movsb
sbb
lahf
aas
jg
add
push
mov
rcll
and
test
stos
mov
jle
fcmovnu
sub
inc
jle
push
xchg
popa
mov
test
repz
lahf
lahf
lcall
and
mov
jg
cld
stc
and
xor
pop
jb
in
xor
jno
daa
out
daa
lahf
aas
andb
std
jg
scas
xor
cld
stc
repz
pop
sub
xchg
lock
adc
pushf
cli
ja
push
pop
xchg
inc
rcr
outsl
add
aam
aaa
outsl
fidivrs
and
pushf
pop
mov
repz
fwait
mov
mov
mov
int3
loope
iret
xchg
and
fidivrs
cmp
outsb
sti
xor
fwait
sahf
xchg
js
mov
test
pop
fisttps
mov
sub
aaa
mov
cwtl
cmp
out
shlb
mov
adc
dec
sub
popf
inc
cld
loop
movsl
push
shll
stos
fsin
cld
stc
xlat
out
xor
fldt
clc
jne
lahf
aas
jg
jmp
dec
lock
xor
je
jl
in
stc
repz
or
push
sahf
push
xor
fdivrl
out
cld
or
pop
call
pop
icebp
aaa
cmc
js
adc
in
push
and
jg
cld
xor
pop
andb
repz
lahf
xchg
push
cmp
adc
jns
cs
dec
xorl
inc
xchg
shlw
sub
imul
stos
outsb
sbb
jns
out
lahf
jae
mov
rolb
sub
mov
divl
hlt
xchg
pop
mov
cld
stc
repz
clc
jns
jno
arpl
sub
jns
aas
jg
mov
cwtl
mov
negl
in
pmulhuw
add
pusha
push
lock
jne
dec
das
jg
cld
stc
fsubrl
jmp
push
xor
idiv
test
aas
xchg
xorb
leave
inc
xchg
mov
cld
stc
repz
scas
inc
insl
inc
mov
pop
xor
push
leave
sub
add
jb
mov
pop
mov
gs
stc
stc
repz
lock
pop
in
pop
inc
mov
push
add
ficompl
dec
imul
repz
cmp
cli
test
cltd
jae
adc
inc
outsl
fidivrs
int3
dec
inc
mov
jg
js
gs
out
fwait
aaa
fsin
mov
mov
jns
out
cwtl
jns
dec
addr16
cmp
movsb
arpl
jg
iret
outsl
icebp
negl
int
or
cld
stc
repz
pushf
pop
mov
adc
out
mov
lahf
aas
jg
or
xchg
mov
mov
cs
xor
movsb
push
lret
repz
cmp
ret
les
xchg
in
idivl
cld
stc
dec
stos
jle
pop
jnp
pop
lods
pop
jmp
into
out
lahf
aas
popa
aad
sub
push
xchg
cld
stc
repz
shr
scas
in
clc
adc
mov
enter
out
fmull
jge
data16
jl
or
cld
stc
repz
stc
dec
das
sbb
pop
pop
cmp
xor
lahf
aas
jg
lret
rol
and
jae
push
or
cld
stc
repz
popf
sbb
inc
inc
subl
push
ficoms
stc
dec
xor
pushf
imul
pop
xchg
fwait
aaa
outsl
sbb
stos
loop
sbb
aas
jg
jnp
sbb
jne
xor
xchg
cmc
jle
movsb
arpl
repz
sub
loope
ljmp
mov
fsubrs
and
insb
sahf
fcmovbe
scas
xchg
aaa
outsl
fidivrs
jge
in
mov
sub
pop
fistpll
aaa
jg
inc
es
fstp
dec
or
repz
iret
pop
test
cmc
fdivr
mov
ficomps
fnstcw
pop
insb
orl
or
sbb
mov
and
jle
into
add
inc
xor
pop
jns
xchg
xor
mov
push
lahf
aas
jg
adc
jl
cld
decb
cmc
test
jmp
leave
cmp
dec
ftst
push
dec
jp
inc
dec
mov
inc
outsl
push
pushf
mov
mov
jb
iret
lahf
aas
aaa
push
mov
in
pusha
out
cld
stc
repz
stos
dec
rorb
es
in
xchg
lahf
aas
jg
mov
mov
fst
cld
stc
notl
test
aaa
or
cs
aas
jg
mov
aas
sbb
je
cmp
mov
iret
sub
loope
dec
scas
popw
pop
jg
cld
stc
jp
cmp
iret
add
and
aas
mov
bound
iret
fldcw
inc
mov
xor
fildll
int
add
or
arpl
cmp
das
cmp
add
lahf
aas
jg
mov
movb
jns
push
scas
fs
stc
repz
int3
aas
mov
mov
mov
dec
dec
std
lahf
aas
jg
xor
xor
xor
scas
adc
push
es
in
push
je
addr16
jg
sbb
cmp
lods
pop
aad
iret
lahf
aas
and
dec
add
cld
stc
repz
sti
mov
mov
dec
xlat
iret
lahf
aas
jg
sub
push
scas
cld
stc
repz
push
cmp
out
pusha
dec
adc
jno
test
jg
jo
imulb
inc
lds
testl
lret
int3
shl
adc
or
push
rcr
jns
sbb
arpl
je
jnp
xchg
loop
repnz
mov
aaa
outsl
and
inc
mov
or
xchg
jg
in
addb
mov
mov
out
lahf
aas
or
pop
ds
pop
cmp
sarb
repnz
dec
and
mov
pop
mov
inc
rolb
fcoml
dec
sbb
mov
iret
lahf
aas
pop
jne
jp
lock
cwtl
pop
cld
stc
repz
es
mov
cltd
movsb
shlb
jg
add
mov
jg
mov
and
leave
jmp
sbb
sbbl
jns
cld
xorl
iret
lahf
mov
sbb
jp
scas
mov
cld
dec
add
mov
call
mov
pop
in
mov
sbb
xor
inc
jno
faddl
push
push
xchg
jo
mov
out
fwait
aaa
out
xchg
aas
std
cmp
mov
mov
subl
sbbl
inc
outsl
repnz
ss
cli
mov
cltd
or
aas
mov
in
cwtl
sti
add
mov
adc
or
jno
jge
mov
out
xchg
js
sbb
hlt
cmp
cld
stc
repz
aad
mov
sub
aam
lahf
aas
jg
push
bnd
add
inc
lods
cmp
stc
repz
icebp
mov
add
cwtl
jp
jge
sbb
lds
lahf
mov
ret
stc
cltd
sbb
out
jmp
sub
pop
or
xchg
mov
cld
mov
fsubr
dec
pop
dec
int
outsl
mov
fistpl
out
out
fwait
lods
xchg
pop
sbb
dec
inc
ret
inc
mov
fidivrs
sbb
push
shl
ljmp
roll
xchg
inc
push
repz
fwait
ja
xchg
dec
daa
mov
enter
fidivrs
fcomps
in
pop
leave
lods
mov
xchg
and
test
mov
pop
xor
cld
mov
mov
adc
jp
mov
adc
push
mov
in
enter
stc
repz
mov
xor
fwait
insb
inc
dec
lahf
aas
jg
and
loopne
fistl
adc
stc
repz
mov
cmp
mov
jg
jo
inc
push
int
mov
add
push
stc
repz
xor
pop
or
test
arpl
inc
ja
repnz
stc
add
or
sbb
push
ss
fwait
sbb
ljmp
dec
stc
mov
outsl
fidivrs
mov
mov
insl
jo
clc
or
sbb
lcall
fists
xchg
fidivrs
mov
out
cmp
sbb
fwait
aaa
outsl
addb
xchg
xchg
xor
pop
repz
lret
test
xchg
jnp
mov
dec
mov
pop
daa
fwait
aaa
outsl
fisubrs
das
mov
xchg
js
jp
repz
pop
xor
xchg
xchg
dec
xchg
je
xor
outsl
fidivrs
outsl
ret
andl
int
rcll
or
adc
add
cmc
stc
mov
jns
push
insb
lock
call
insl
sbb
jp
out
fwait
aaa
movsl
fwait
das
push
pop
mov
cmp
imull
lods
mov
jge
data16
popa
int
aaa
outsl
movsl
clc
aaa
and
cs
js
outsb
cmp
adc
test
inc
cli
out
mov
aas
jg
xchg
int3
clc
push
xchg
jle
pop
js
mov
iret
inc
pusha
clc
fisttpl
lods
popf
mov
mov
test
sub
in
xchg
fwait
aaa
outsl
fisubs
jmp
pop
pop
rolb
repz
iret
je
orl
ret
aas
xor
arpl
std
fs
sbb
loopne,pn
fwait
or
push
or
xchg
pop
clc
enter
xor
dec
sub
lcall
pop
sub
enter
or
xlat
jo
aas
cmpsb
aas
and
call
or
mov
data16
ljmp
xchg
mov
jb
and
outsb
inc
gs
cmpsl
cld
stc
repz
xor
ffreep
mov
or
mov
cmp
aaa
add
ds
movaps
repz
fwait
push
jg
and
ss
sahf
int3
movsl
xchg
mov
mov
pop
adc
pop
test
std
out
fwait
aaa
jle
mov
jmp
mov
cmp
sahf
std
pop
addr16
push
addl
xchg
xchg
test
mov
mov
lahf
aas
jle
incb
cmpsb
inc
lret
mov
repz
xchg
in
pop
add
lahf
rcrl
cld
filds
jbe
push
aaa
stos
inc
fimuls
jne
out
lahf
jne
sub
mov
inc
dec
cmpsl
aas
jo
repnz
cmpsl
adc
shlb
out
lahf
inc
adc
lods
dec
pop
popa
sbb
cld
stc
push
fdecstp
rcrb
daa
loope
arpl
fwait
test
out
lahf
aas
jnp
push
lret
out
rcrb
fdivrs
add
cld
stc
repz
jecxz
sbb
push
inc
xchg
mov
iret
lahf
aas
jg
loopne
gs
sbb
cs
stc
repz
mov
push
movsb
jle
loope
push
dec
ret
lahf
aas
jg
addb
inc
push
xlat
imul
into
mov
out
outsl
int3
out
lret
pop
stos
das
mov
popa
cwtl
aas
jg
cld
into
aam
sub
or
xchg
repz
lahf
mov
or
add
dec
mov
cs
ja
or
fcmovne
pop
test
xor
add
repz
movsb
pop
cld
stc
repz
pop
aam
cmpsb
and
into
js
lcall
aaa
filds
fwait
out
inc
cld
out
jecxz
cld
stc
repz
add
bound
xor
xor
clc
xorl
lahf
aas
jg
pop
xchg
aaa
arpl
mov
stc
repz
xor
push
xor
cmp
sub
es
sbb
jge
aaa
outsl
fdivp
push
and
arpl
mov
jg
out
xlat
sbb
push
test
lahf
xchg
fisttpll
cs
mov
cmp
jg
cld
stc
adc
xchg
pop
lahf
gs
out
lahf
aas
adcb
pop
mov
add
inc
jl
cld
stc
repz
clc
dec
shlb
push
dec
bt
lahf
aas
jg
stc
xor
jmp
daa
sbb
add
cld
stc
repz
rcr
push
ret
or
mov
leave
std
dec
lahf
aas
jg
jmp
jno
je
cld
pusha
scas
iret
mov
sub
repnz
aad
pop
popa
sbb
cs
cld
stc
inc
cmp
adc
xchg
dec
xor
inc
xor
lret
ds
dec
repnz
cli
nop
imulb
insb
or
fdiv
mov
pop
xor
pop
repz
pop
aas
imul
aaa
xor
enter
cld
stc
sub
pop
test
dec
lret
lods
push
jbe
fldln2
sub
out
lahf
jmp
in
jnp
jg
sbb
cld
stc
xchg
dec
aam
js
cmpsl
push
leave
mov
popa
pop
cmp
iret
lahf
aas
pop
loope
sub
movsb
loop
pop
orb
repnz
repz
mov
shll
ja
dec
in
cld
stc
repz
jg
fisubs
lahf
or
xor
lahf
aas
jg
jecxz
les
xchg
mov
sbb
pushf
pop
xor
pop
stc
repz
pushf
scas
cmp
mov
pop
jl
dec
cld
fcmovb
push
enter
sub
ja
or
pop
push
xchg
pop
imul
or
adc
adc
cmova
pop
and
or
std
bound
adc
jae
fidivrs
ljmp
shr
xor
adc
int
aaa
outsl
cmp
loop
gs
rolb
std
mov
sahf
aas
mov
adc
lods
dec
scas
add
jne
push
push
add
inc
push
and
repz
enter
or
sbbb
addr16
aas
jg
and
jmp
repnz
dec
sar
out
mov
fdivrl
mov
cld
mov
and
jnp
or
lea
lea
in
iret
lahf
icebp
std
aaa
xchg
xor
stc
jge
adc
jl
dec
into
jne
jg
fwait
aaa
out
pop
dec
mov
and
fucomip
out
mov
cmp
cmp
stc
rdpmc
cmp
cld
inc
outsl
fidivs
xchg
xor
cmp
fwait
aaa
aam
movl
in
jns
sbb
sbb
pushw
and
std
cmp
xchg
mov
mov
out
data16
mov
mov
fwait
aaa
outsl
cmp
inc
xor
mov
xor
mov
arpl
aas
mov
fwait
aaa
outsl
fimuls
jae
mov
push
xor
test
out
inc
ljmp
loopne
imul
aaa
outsl
fidivrs
fwait
ljmp
sbb
int
or
pop
aas
jne
cmp
mov
jns
fstps
addr16
divl
out
fwait
aaa
adc
in
push
mov
xor
mov
iret
movsb
ffreep
lcall
inc
shrb
push
cmpsl
rorb
test
lahf
popf
sbb
repz
push
fimull
addb
loopne,pt
out
cwtl
lods
lahf
aas
sarb
xor
ret
negl
in
iret
adc
not
mov
pop
mov
jg
nop
and
sub
jp
pop
jl
push
out
jns
insb
pop
xchg
add
outsl
fidivrs
lcall
xchg
mov
clc
push
out
fwait
aaa
push
dec
leave
mov
sub
mov
bound
cld
mov
hlt
loop
nop
cmc
push
test
outsl
inc
xorl
repz
scas
mov
mov
loopne
cld
pop
test
outsl
fidivrs
jae
jmp
sbbb
test
repnz
fwait
sbb
cwtl
lods
xorb
and
int
inc
jo
sub
xchg
push
dec
fwait
aaa
outsl
xlat
jb
mov
push
push
inc
jns
push
loop
in
lahf
lahf
cli
popa
xlat
adc
inc
jne
inc
fidivrs
cmp
out
fwait
ja
add
lods
lods
cmp
and
test
mov
leave
mov
hlt
sub
aaa
inc
pop
into
dec
out
sahf
push
jae
repz
shrb
dec
inc
or
pushf
adc
mov
ret
into
and
and
loope
pusha
pop
out
fwait
aaa
ret
inc
mov
sub
stc
fidivrs
loop
insl
ja
mov
dec
fstps
cwtl
xchg
int
aaa
outsl
xor
stos
stos
fstl
fucomi
add
push
das
xchg
adc
sti
bound
fwait
aaa
outsl
fidivs
sahf
nop
mov
jae
jmp
xchg
jns
out
cmp
ficomps
and
fsubrl
push
out
mov
out
shr
sahf
adc
push
inc
ss
mov
dec
ja
aas
jle
cmp
and
cwtl
arpl
xor
dec
sbb
dec
cmp
fistps
mov
push
mov
push
sub
addr16
cld
shrl
jg
cld
pop
xchg
push
jbe
mov
out
sub
repz
lahf
push
nop
mov
pop
push
sbb
lods
mov
cld
stc
daa
imul
xorb
cmp
aad
ds
hlt
ds
dec
pop
sub
mov
lahf
aas
jg
or
popf
add
sbb
adc
push
lahf
aas
jmp
xchg
jmp
xor
popf
es
out
cli
decl
insl
mov
out
lahf
aas
cmc
popa
xchg
imul
mov
dec
cld
stc
repz
pop
mov
jecxz
push
pop
inc
imul
mov
lahf
aas
jg
jo
ljmp
xchg
out
fwait
ljmp
add
aas
test
fnstcw
iret
sbb
xchg
pop
add
pop
mov
pop
inc
outsb
and
filds
out
fwait
aaa
daa
in
dec
enter
push
sub
jns
mov
push
xchg
xor
fsubrp
enter
loope
cwtl
cmp
out
pop
rcrl
inc
mov
ret
std
sub
and
xchg
out
inc
ret
jecxz
mov
jbe
in
iret
lock
inc
orb
push
sbb
iret
outsl
fidivrs
add
push
or
push
inc
out
fwait
aaa
jmp
inc
push
mov
mov
sarb
adc
xor
arpl
fwait
aaa
outsl
mov
cmp
jmp
jb
xchg
rcll
imul
pop
pop
ss
outsl
fiadds
cmp
inc
ret
fldt
mov
fwait
aaa
gs
faddp
sbb
push
sar
mov
cs
or
cmp
fnstcw
dec
bound
shll
jb
outsl
ficoms
dec
ja
aad
mov
dec
repz
fcmovnbe
popa
sti
xchg
das
nop
aaa
mov
fidivrs
pop
adc
pusha
orl
fwait
aaa
out
movsb
call
xchg
das
mov
repz
mov
or
repz
insb
sub
das
push
cli
nop
test
cld
stc
xor
mov
and
xchg
jmp
ficoms
jmp
ss
lea
jecxz
repz
fwait
jbe
outsl
aas
in
std
fstl
lcall
mov
ret
add
sbb
stc
cmc
mov
aas
jle
xchg
inc
cltd
arpl
mov
add
xchg
repz
mov
out
cmp
jae
daa
push
inc
or
push
add
mov
inc
sub
out
xchg
int
aaa
out
scas
das
dec
mov
rcl
frstor
ret
add
mov
ja
insl
icebp
mov
mov
bound
mov
inc
xchg
hlt
xchg
add
repz
prefetchwt1
mov
push
adc
jle
aaa
outsl
fsubrp
js
mov
inc
pop
and
fidivrs
ja
stos
bound
or
mov
sti
mov
stc
xchg
hlt
jge
lahf
int3
inc
xchg
pusha
leave
out
fwait
aaa
movsl
inc
aas
mov
addr16
xchg
iret
mov
fprem1
nop
jae
xchg
push
imul
xchg
cld
stc
repz
inc
clc
pop
ret
fdivrp
jns
insl
int
cmp
aas
jg
mov
cmp
inc
cld
stc
rorl
push
dec
mov
cli
xor
lahf
aas
jg
xor
sahf
jne
repz
daa
pop
sub
enter
inc
push
imul
push
aas
jg
rorl
enter
jo
adc
or
leave
lahf
xchg
leave
inc
mov
enter
dec
rclb
mov
xchg
cli
enter
xor
imul
fwait
jle
or
dec
addb
fidivrs
dec
shrb
popf
xchg
insb
addr16
outsl
dec
mov
add
cltd
xchg
int
call
push
inc
mov
mov
js
aas
das
sahf
pop
dec
jle
aad
cmpsb
out
inc
or
jno
mov
aas
stc
cld
mov
fsubrs
popa
fnstenv
dec
out
lahf
jg
xchg
andl
paddd
stc
repz
xchg
xchg
or
and
fs
lahf
aas
jg
popa
sub
fistpl
add
lock
pop
cld
stc
repz
sbb
mov
inc
or
dec
cmpsl
ds
lahf
aas
jg
aaa
pusha
test
sub
sarl
iret
pop
inc
add
call
insl
dec
rolb
inc
add
mov
insl
xorb
in
push
xor
movsb
mov
std
jns
cs
hlt
test
sahf
mov
iret
lahf
aas
ljmp
jo,pt
shlb
std
stc
add
sar
repz
jp
add
roll
int3
lret
sub
mov
outsl
fidivrs
popf
and
jb
dec
rcrl
neg
in
rorb
into
pop
push
mov
mov
xchg
xor
push
loopne
dec
push
and
stos
dec
cmp
mov
xor
flds
adc
pop
or
sub
repz
and
in
xchg
loope
pop
in
pop
lock
aaa
outsl
fimuls
sub
jnp
sub
dec
rclb
mov
arpl
jae
push
out
pop
jnp
dec
xchg
fsubrs
xor
in
fwait
aaa
outsl
inc
repz
call
pop
sbbl
adc
inc
xor
cmp
ljmp
cmpb
add
pop
sub
push
mov
or
inc
xchg
cmp
pand
lock
loope
in
jl
jns
out
or
cmpsl
outsl
aaa
mov
negl
out
and
sbb
pusha
in
call
out
fwait
mov
and
mov
inc
loop
outsl
fidivrs
leave
mov
xchg
xchg
adc
int
aaa
lods
mov
repnz
add
repz
enter
out
mov
sbb
sbb
mov
jnp
addr16
outsl
fidivrs
mov
das
xchg
and
fneni(8087
out
out
fwait
add
sti
cmovge
nop
mov
sbbb
iret
xor
fists
xor
stc
repz
mov
stos
inc
sbb
inc
sbbl
cld
mov
push
sbb
jno
dec
insl
in
lahf
leave
mov
mov
ja
imul
sub
pop
pop
insb
bound
jmp
lahf
aas
jg
lcall
daa
adc
lods
pop
subb
mov
sbb
repnz
sbb
mov
cmpsb
sub
stos
push
movsl
xchg
fnsave
out
mov
pop
cmp
add
ret
repz
fsubr
pop
hlt
sahf
iret
lret
out
push
xlat
das
flds
jb
add
dec
cmp
mull
pop
pop
pop
push
push
push
inc
dec
shlb
pop
outsb
out
fwait
aaa
pop
and
and
test
out
cmp
jg
push
or
fcoml
jns
pop
xchg
and
inc
ss
call
adc
cld
loope
jp
inc
xor
sti
fdivrl
xchg
out
enter
sbb
lret
add
out
ret
std
das
icebp
jbe
pop
mov
divb
adc
add
shlb
cld
mov
jg
sub
xlat
mov
iret
repz
pop
mov
daa
bound
push
outsl
fidivrs
sub
pop
mov
fwait
aaa
xchg
and
mov
repz
out
movsb
jecxz
mov
aad
outsl
fidivrs
dec
test
outsb
std
sbb
push
push
mov
cmp
ret
add
es
inc
lock
mov
aaa
out
add
div
loope
xchg
das
cmpsl
adc
out
fwait
pop
mov
xchg
sahf
dec
push
fimull
iret
inc
jle
cltd
jmp
fwait
rcrb
stc
repz
pop
add
mov
inc
mov
push
aam
movsl
and
and
mov
mov
mov
pop
fcoml
int
aaa
and
add
mov
mov
dec
mov
mov
mov
lahf
jg
push
cld
roll
and
cmp
out
push
hlt
outsl
mov
outsl
fidivrs
std
sahf
pop
lea
popf
test
shlb
fdiv
int
ljmp
xor
or
inc
mov
mov
and
pushl
push
or
fidivs
mov
lods
call
pop
mov
int
xchg
adc
iret
stc
sub
fidivrs
cwtl
movsl
pop
cld
add
or
or
out
fwait
mov
add
in
aas
add
jns
subl
sbb
int
mov
pusha
mov
das
clc
mov
inc
adc
out
testl
addr16
cld
mov
inc
vpmaxub
inc
xor
and
es
lahf
aas
jge
jl
lock
clc
sbb
mov
ret
pop
mov
mov
mov
daa
cmpsb
inc
cmc
jecxz
xor
insb
ficomps
mov
fiadds
pop
adc
imull
icebp
xchg
int
mov
lods
insb
jbe
mov
outsb
inc
jle
psadbw
test
push
repz
pop
out
rclb
sbbl
jg
cld
stc
adc
sub
mov
xor
out
lahf
aas
outsl
fidivl
imul
ret
cli
in
ja
test
nop
pushf
loope
pop
outsl
repz
lahf
inc
aam
cmpsl
cltd
shlb
lcall
cld
stc
dec
scas
mov
sub
clc
lea
xchg
out
cmp
mov
or
xor
sbb
outsl
fidivrs
pop
inc
gs
pusha
cli
bound
out
fwait
outsb
scas
pusha
std
popa
mov
movsl
fnstcw
xchg
xchg
xchg
fstpt
cmpsb
int
ja
inc
outsb
and
xchg
adc
push
repz
xchg
sbb
leave
int
adc
out
sbb
lods
adc
repz
cmc
jl
xchg
push
sub
sbb
sub
cmpb
fwait
aaa
outsl
or
insl
dec
stos
aaa
pop
cmp
and
mov
xchg
push
insb
in
lods
pushf
enter
dec
xchg
dec
fwait
aaa
outsl
fiadds
adc
dec
addb
dec
fwait
jns
out
inc
repnz
cli
in
addr16
mov
repz
xchg
sub
loopne
enter
scas
cmp
cmp
pop
ds
mov
cmp
out
pop
stos
ds
cmpsl
fnstcw
cmpsl
aaa
outsl
fidivrs
push
ljmp
int
cmp
test
out
and
fidivrs
push
std
jg
lods
xor
dec
repz
int
aaa
cld
push
loop
cmp
stc
dec
cmp
mov
rcll
push
and
clc
pop
xor
das
push
xchg
int
aaa
outsl
aam
push
push
jg
xchg
fwait
push
lock
lcall
iret
lahf
aas
cmp
outsl
sbb
mov
out
jnp
push
insb
js
shlb
sub
fadd
pusha
mov
into
jmp
repz
jp
rcr
lahf
insb
aas
pop
outsb
int3
aas
jg
cld
jne
lcall
push
push
outsl
mov
repz
lahf
xchg
mov
mov
xchg
jg
cld
stc
jp
test
pop
jno
enter
push
fcmove
push
inc
pop
mov
jle
jo
jbe
stos
sbb
pop
je
mov
mov
inc
jbe
mov
mov
out
lahf
rorb
les
jmp
cld
stc
mov
xor
ss
stos
xchg
sub
jle
lahf
aas
pop
cmp
ja
cmp
push
mov
dec
rorb
subb
cld
cmp
out
jno
test
pop
jbe
cwtl
pop
lahf
aas
jg
call
push
aam
lds
mov
inc
stc
repz
add
mov
push
sub
ret
sbb
xchg
popf
jle
lock
cmpsb
mov
jecxz
add
xchg
popa
and
in
adc
int
aaa
outsl
push
sti
fwait
cmp
dec
ja
inc
mov
lods
arpl
int
mov
xchg
testb
les
scas
ficoms
inc
lahf
call
iret
daa
stc
int
aaa
outsl
sbb
xchg
push
lret
inc
stos
jno
jns
out
push
outsl
adc
movsl
push
popa
test
ror
iret
mov
jmp
into
rcrl
fwait
aaa
mov
mov
sbb
sahf
or
jae
ja
int
iret
mov
cli
push
sbb
pop
rclb
jg
cld
push
cmp
rcrb
into
sub
aam
repz
lahf
xchg
xchg
jbe
mov
cld
stc
sti
push
in
fbstp
sarl
stc
addr16
lods
das
out
lahf
aas
test
ja
xchg
xchg
ret
jmp
cld
stc
repz
shll
call
sbb
jmp
test
inc
jle
dec
les
cmc
notl
cmp
jno
stos
pop
jg
cld
stc
adc
dec
mov
push
sub
fcoml
adcb
out
lahf
aas
repz
es
cld
stc
repz
stos
or
or
push
and
lcall
inc
sahf
and
add
inc
mov
mov
call
fidivrs
sbb
out
js
jne
loop
dec
int
imul
pop
adc
add
push
fimuls
enter
syscall
jmp
adc
cmp
sbb
jl
dec
cmp
ficoms
mov
repz
fwait
popa
sbb
in
adc
rcll
mov
lds
cld
sti
jmp
out
fwait
aaa
popa
mov
inc
dec
cli
rep
fidivrs
pop
xor
cmp
lret
sbb
and
outsl
fsubl
mov
push
jb
pop
jne
dec
dec
inc
push
cmp
mov
jns
out
sbb
sub
pop
ret
and
fwait
aaa
outsl
fdivrp
adc
into
sub
rorl
aad
xchg
repz
jae
and
dec
cli
xchg
fbstp
aaa
outsl
fidivrs
repz
stos
sbb
aam
out
fwait
enter
jno
out
lds
ficoms
mov
in
outsl
hlt
mov
pop
int
aaa
outsl
add
lds
negb
jns
out
push
inc
push
clc
out
ret
lcall
dec
mov
fwait
aaa
outsl
fimuls
pop
sbb
jae
jae
pop
iret
or
clc
enter
mov
sbb
das
mov
jle
adc
cld
stc
repz
std
push
data16
cmp
hlt
push
in
fmul
lahf
aas
jg
add
xor
test
mov
cld
stc
repz
adc
xor
mov
jg
aas
jg
lret
mov
cmp
pop
or
repz
inc
in
sub
movsb
adc
test
in
and
cld
je
pushf
lock
dec
push
xchg
fmull
mov
fldcw
or
popf
stos
or
scas
push
adc
pop
dec
repnz
or
xor
cmp
mov
jle
xor
scas
rclb
pop
sub
inc
ret
stos
push
fisubrs
sbb
loopne
fistl
lock
add
pop
fdivrl
cli
sbb
push
ja
sar
cld
stc
adc
mov
xor
inc
bound
push
iret
lahf
aas
jg
mov
imul
ljmp
out
add
imull
icebp
hlt
jb
adc
lahf
aas
jg
push
mov
mov
les
ljmp
mov
int3
push
outsl
fidivrs
in
clc
mov
xor
pop
ljmp
xchg
lcall
shl
mov
movsb
hlt
mov
popa
jnp
test
repz
mov
fwait
aaa
outsl
cwtl
pop
orl
and
data16
cmp
out
test
sbb
and
ror
mov
addb
or
aam
repz
lahf
aad
xchg
inc
sahf
mov
add
cld
stc
mov
stos
aad
mov
fmuls
fwait
dec
mov
iret
lahf
aas
push
leave
add
lcall
stc
repz
or
mov
fistps
call
lahf
aas
jg
add
shl
imul
repz
xchg
jne
cld
rcll
xor
aas
jg
pushf
fstps
ss
or
repz
lahf
push
popf
jae
mov
in
jecxz
jg
cld
or
mov
outsl
pop
xor
out
lahf
pop
pop
sarb
sarl
add
je
add
sti
popf
ret
arpl
daa
jg
fnstcw
inc
dec
lock
repz
lahf
daa
cmp
sbb
xchg
adc
cld
stc
lds
int
add
fcos
outsb
fnstcw
jnp
out
lahf
aas
outsb
jg,pt
adc
xchg
cld
stc
repz
jbe
pop
hlt
inc
push
mov
out
xor
inc
jle
bound
clc
out
lahf
aas
dec
fildl
add
or
insb
cld
stc
repz
sub
orl
jae
cmovne
aas
jg
movsl
and
cmpsb
mov
lahf
aas
ljmp
scas
pop
add
add
repz
or
pop
xchg
in
clc
fs
aas
jg
cld
jmp
mov
cmp
aas
cmp
xlat
imul
iret
lahf
adc
xchg
mov
fcomps
jl
push
sbb
pop
out
out
pop
pop
add
add
pop
pop
sub
repz
test
mov
push
dec
arpl
dec
cs
fidivrs
fstl
rorb
fwait
mov
call
mov
inc
test
stos
clc
xor
inc
ja
je
dec
jl
orb
mov
out
cld
stc
repz
fcomi
cs
jp
mov
enter
aas
jg
aad
lret
mov
pop
add
stc
repz
in
mov
aad
imul
jg
cld
jge
dec
nop
mov
inc
out
xchg
add
and
iret
leave
fwait
aaa
out
jg
xchg
mov
mov
lret
repz
aam
pushl
mov
jns
dec
cmc
out
inc
daa
loopne
mov
loope
loopne
int
aaa
lock
cmp
adc
or
mov
jns
cmp
push
xor
sbb
mov
jle
cmp
out
sbb
push
xchg
mov
ss
shr
test
xchg
iret
aas
setb
adc
les
pop
aam
jo
fadd
fsubrl
and
pop
and
cld
stc
repz
lock
addr16
cmp
outsl
andb
out
cs
xchg
adc
push
push
push
out
and
and
fwait
xchg
push
and
jne
int
sbbb
test
test
cmp
gs
jg
sbb
outsl
fidivrs
imul
in
xchg
call
mov
mov
or
rorb
shlb
push
rcrb
jns
out
iret
or
fs
popa
mov
fidivl
outsl
fidivrs
ret
es
pand
out
fwait
clc
in
mov
push
scas
fs
jno
fidivs
lds
push
jg
shll
push
xor
mov
int
aaa
popf
jp
xchg
icebp
xchg
lcall
fidivrs
outsl
add
scas
or
jae
dec
int
aaa
outsl
mov
sahf
xor
xchg
in
mov
das
sub
mov
bound
scas
imul
aaa
outsl
fidivrs
or
mov
shll
rorl
imul
mov
outsl
fidivrs
mov
inc
cmp
sbb
lock
fwait
aaa
push
inc
dec
pop
xchg
popa
push
mov
mulb
repz
inc
mov
outsb
int3
notl
sbb
inc
int
aaa
outsl
jecxz
xor
adc
clc
leave
mov
subl
or
xor
push
pusha
jge
aaa
add
inc
inc
cmpsl
call
int
mov
mov
subb
movsb
jp
ret
pushf
repnz
or
test
mov
fidivrs
or
ljmp
lret
insb
xchg
xchg
inc
add
clc
repnz
loope
stc
rolb
push
adc
daa
scas
lea
and
jg
arpl
push
sub
xchg
adc
cld
stc
enter
mov
cmp
loop
and
add
xchg
lahf
aas
jg
int
xchg
xorb
aaa
out
orb
test
xchg
sbb
int
mov
dec
stos
xor
push
and
out
int
inc
cwtl
jp
imul
pop
dec
pop
fidivrs
adc
xor
stos
or
mov
cmp
loop
cmc
bound
inc
mov
fildll
sarl
adc
in
push
mov
jns
out
mov
jmp
outsl
repz
lret
call
rcll
mov
cmp
push
push
mov
fistpll
and
adc
add
fwait
aaa
outsl
ficomps
pusha
xchg
mov
jp
adc
xchg
test
js
out
data16
repz
and
cmp
stos
ss
iret
pop
btc
repnz
fmuls
aas
sub
loope
add
or
fwait
cld
stc
repz
jb
mov
dec
ljmp
jg
addb
lods
clc
or
add
dec
shl
jmp
in
jmp
pop
mov
out
mov
cld
stc
loopne
push
xor
imul
and
xchg
and
stc
pop
ficomps
fidivrs
out
insl
enter
xchg
out
leave
mov
xor
outsl
shlb
in
sahf
cmpsl
sarl
loopne
int3
pop
inc
xor
pop
cmp
aaa
outsl
test
stos
xchg
and
daa
push
jge
repz
fwait
mov
leave
adcl
jns
mov
rcll
mov
jnp
das
pop
out
fwait
aaa
les
fcmovne
mov
je
ds
repz
gs
lahf
insl
icebp
insl
clc
enter
out
int3
xchg
mov
inc
stos
enter
add
addr16
xor
movsb
fwait
aaa
outsl
fimuls
add
or
and
cmp
jp
testb
out
add
loope
mov
xor
sbb
pop
aaa
outsl
fidivrs
jle
push
pop
faddl
pop
loop
repz
fwait
push
push
jo
push
movsb
fcoml
outsl
fidivrs
push
push
call
in
out
mov
pusha
xchg
dec
mov
inc
or
mov
je
repz
xchg
mov
pop
fistpl
jg
ljmp
push
cmp
add
mov
ficoms
outsl
rol
rclb
loopne
inc
mov
popf
xchg
out
fwait
adc
loope
add
je
outsl
fidivrs
dec
mov
push
mov
les
int
aaa
jae
pushf
leave
jae
cmp
fidivrs
mov
mov
cs
int
aaa
outsl
ss
xchg
sbb
nop
cmp
loop
jns
out
jbe
cmp
mov
rcrl
xor
mov
shl
cwtl
aad
in
jns
out
cli
movsl
js
pop
out
lea
shr
adc
mov
mov
test
sbb
sub
aad
sbb
aaa
clc
mov
ds
pop
cwtl
pop
jne
mov
adc
shl
scas
and
cld
sub
adc
aas
jg
arpl
int3
stos
xchg
pop
enter
lahf
pop
mov
lret
sbb
jg
jbe
or
adc
test
sti
outsl
ficoms
bnd
outsl
lret
push
cmp
aaa
clc
jno
jbe
jno
sbb
mov
repz
bound
or
pop
sbb
out
xor
int
aaa
outsl
adc
popa
sbb
movsb
imull
pop
or
in
stos
lret
xorl
ja
iret
lahf
jg
out
mov
fdivr
loope
aam
or
cld
lahf
jp
push
ret
add
lahf
fwait
ja
out
xchg
icebp
xchg
xor
repz
xor
stos
das
in
into
mov
push
movsl
aaa
outsl
fidivrs
scas
ja
jp
lea
out
fwait
jo
cli
data16
xchg
pop
adc
lods
loopne
das
pusha
gs
cmc
adc
stc
repz
pop
mov
and
inc
mov
in
pop
pushf
inc
lahf
aas
jg
pop
sbb
es
cmp
ds
mov
hlt
in
js
fdivrs
fistps
mov
test
cmp
jmp
jle
popa
fs
aaa
outsl
fiadds
or
out
repz
andl
outsl
fidivrs
lock
dec
mov
mov
aaa
dec
xor
jo
dec
das
mov
sarb
pop
cmp
aas
pushl
push
iret
daa
ljmp
popf
mov
sub
repz
cmpsl
jg
out
sub
cmc
xchg
movswl
mov
cld
jg
addr16
in
js
popa
data16
mov
shrl
inc
xchg
lock
ljmp
dec
xchg
jne
loope
xchg
enter
mov
stc
repz
adc
mov
jp
push
test
in
outsl
sub
push
shrl
test
mov
add
or
pop
inc
aas
sarb
adc
add
fstl
and
shlb
mov
dec
push
xlat
lea
mov
int3
or
call
sbbb
fs
push
loopne
push
mov
push
adc
ss
mov
mov
stos
adc
and
or
cmp
fists
insb
mov
add
inc
mov
fimull
mov
sbb
sahf
mov
lods
add
sbb
add
adc
xor
push
fs
cmpsl
in
mov
arpl
xor
mov
rcll
add
add
adc
ficoml
das
stc
sbb
leave
push
inc
push
pop
sub
cmpb
into
or
xchg
adc
mov
jb
rcl
inc
scas
cmpsb
add
adc
int
inc
cmc
out
lock
into
mov
icebp
sub
add
ss
or
or
adc
ss
roll
shrl
fwait
testb
dec
clc
stos
scas
subl
add
add
ret
cmpsb
pop
cli
pop
jo
sub
lods
icebp
add
and
inc
add
or
push
mov
pop
or
adc
sti
pushf
inc
push
adc
adc
ficoms
push
jno
mov
add
xor
cmp
push
adc
adc
adc
or
movb
or
fimuls
push
mov
mov
cmp
jo
test
cmp
adc
pop
push
or
or
rcll
sub
cmp
push
sub
sub
add
icebp
or
mov
cmp
mov
out
add
cmpsl
into
test
mov
jbe
xor
sbb
xor
adc
roll
bound
jl
jge
jl
imul
push
or
popa
jmp
push
sub
xchg
mov
les
or
mov
jge
mov
insb
mov
and
movsb
push
add
push
or
adc
adc
icebp
sub
mov
movsl
adc
fildl
andb
dec
adc
inc
inc
adc
imul
int3
xchg
jmp
and
je
add
add
add
mov
and
push
pop
add
or
push
cwtl
sub
jae
or
mov
cs
mov
add
negb
add
mov
xor
xorb
sbb
inc
pop
cmp
lret
adc
adc
add
mov
fadds
ret
add
push
out
or
mov
add
sbbb
fwait
test
fldl
adc
add
push
pop
dec
or
mov
sub
push
adc
sub
inc
mov
inc
xlat
add
adc
inc
inc
adc
lock
cltd
push
add
aas
push
and
mov
adc
inc
dec
xchg
adc
add
mov
xchg
mov
and
clc
mov
dec
push
mov
call
add
aaa
sbb
push
jbe
sbb
call
xchg
sub
cltd
pop
adc
add
pop
push
or
push
mov
adc
push
jmp
cli
mov
or
insb
sbb
stos
bound
inc
push
leave
gs
pop
clc
fisttpl
inc
lret
push
stc
es
add
cmp
inc
push
and
or
out
aas
sbb
dec
int
or
pop
data16
test
add
mov
mov
push
cmp
push
adc
stos
or
jmp
icebp
mov
test
mov
hlt
stos
push
fs
adc
rorl
cmp
cmp
push
jge
lock
and
pop
add
jp
scas
call
shll
cmpsb
in
mov
stos
test
mov
inc
sub
sbb
add
or
inc
sub
fmulp
cmp
test
push
repnz
inc
sub
inc
add
mov
sbb
push
cmp
inc
rolb
mov
rol
and
jo
xchg
mov
mov
cmp
testb
loopne
mov
fsubl
rcrb
mov
icebp
push
adc
xor
mov
test
enter
jge
sbb
adc
imul
rclb
and
sbb
add
out
inc
xor
popa
rcll
push
int3
mov
or
add
inc
push
add
test
push
roll
addr16
adc
mov
pop
or
adc
inc
inc
sub
add
mov
mov
mov
adc
in
push
mov
push
inc
mov
ret
xor
and
xor
mov
push
sub
sbb
push
insl
pop
cmp
sbb
ja
adc
lds
push
xor
add
or
call
in
jg
jns
idivb
leave
and
add
xor
inc
pop
push
aam
adc
ret
les
push
fwait
pop
out
rolb
adc
ret
fisttpl
inc
sbb
push
js
mov
mov
es
outsl
ja
into
fbstp
mov
rclb
add
scas
scas
inc
icebp
cmc
rclb
andb
adc
push
xor
icebp
inc
add
or
mov
inc
push
push
ja
mov
std
inc
mov
fdivrs
call
cmp
inc
xchg
or
sarb
or
in
idivb
je
test
test
popa
sbb
and
adc
pop
push
pop
call
lock
mov
inc
inc
jae
jo
loope
add
jmp
stos
test
out
and
push
adc
aas
shlb
add
xor
sbb
rcll
ja
ljmp
adc
sub
sub
inc
inc
sbb
rclb
nop
testl
xchg
push
aad
add
push
or
scas
lahf
push
mov
adc
test
subb
into
shr
adc
movsb
and
movsl
popa
adc
popf
push
insl
insl
or
add
inc
sub
cwtl
inc
andb
loop
mov
sbb
adc
stos
or
clc
mov
and
push
pop
add
jp
dec
in
and
push
xchg
repz
mov
sbb
nop
jno
out
inc
inc
add
mov
orl
push
adc
push
test
jo
sbbb
or
xor
clc
push
cli
add
imul
or
mov
ret
insb
cmove
mov
and
adc
jae
pop
cmc
push
popa
ficoml
jmp
xor
ds
pop
js
sub
sar
push
call
cmp
pop
pop
sbb
lahf
ret
adc
add
jp
loope
lock
into
push
jnp
cltd
orb
sub
push
adc
scas
pop
ficomps
cmpsb
add
add
push
stc
std
dec
push
mov
jbe
sbb
add
or
push
push
xlat
or
push
test
repnz
inc
ret
add
push
out
insl
pop
ds
add
adc
sub
sbb
cltd
sbb
push
scas
add
mov
or
mov
adc
mov
cmp
and
push
inc
je
sub
push
shrb
in
push
push
xlat
lret
test
sahf
push
sbb
dec
push
xchg
adcl
shlb
rol
lds
adc
in
loopne
je
sbb
repz
pop
cltd
adc
add
push
xor
pop
add
mov
lret
push
push
push
pop
shl
out
ret
lock
test
lret
lods
jns
jb
adc
xchg
rolb
sub
and
cs
mulb
adc
rolb
inc
fildl
inc
add
dec
sbb
push
mov
mov
or
or
mov
dec
jns
cmp
mov
and
lcall
cmp
in
test
aad
in
cmpsb
adc
cltd
cld
push
push
mov
cmpsb
fs
cwtl
cmp
jmp
mov
or
fisubrl
jmp
adc
push
add
pop
mov
test
bound
and
sbb
jle
clc
inc
cmpsb
pop
xorl
clc
add
dec
xor
push
pop
in
scas
addr16
dec
mov
adc
mov
ljmp
add
pusha
or
push
add
leave
fwait
in
mov
rclb
push
idiv
or
and
dec
rcrb
mov
jo
jp
xchg
cmp
xchg
cmp
repz
add
loopne
fadd
xchg
sub
call
inc
jle
out
adc
push
pop
out
push
into
push
fdivs
loopne
aas
sbb
cs
jmp
mov
vunpckhps
push
je
lret
xor
cmp
mov
jb
shl
rolb
dec
add
push
daa
inc
xchg
stos
add
dec
or
mov
bound
aam
in
jp
call
lret
push
adc
mov
and
push
sub
and
push
or
push
andb
sub
stos
add
addl
mov
cmp
mov
fwait
stos
sbb
push
xchg
xor
dec
or
adc
adcb
mov
or
mov
fsubs
cld
rcr
xor
xor
in
out
and
mov
dec
pushf
add
cmpsb
or
adc
hlt
push
aam
cmpsl
mov
push
push
xchg
pushf
test
cmp
ljmp
add
sub
add
xor
mov
subb
dec
pop
mov
addb
jecxz
jae
sub
pop
fsts
inc
mov
int
repnz
aam
cs
pop
test
xchg
xlat
pop
lods
xchg
aaa
mov
jle
mov
sub
inc
sub
ja
mov
in
gs
dec
adc
adc
aad
xchg
sub
xchg
mov
lods
es
icebp
std
xchg
add
clc
idivb
xorb
popf
push
pop
add
ret
or
jp
inc
incb
sbb
and
jo
push
pop
mov
push
push
dec
jmp
cli
or
jmp
inc
rcl
sbb
push
or
mov
push
bound
add
add
sbb
lahf
stos
call
adc
inc
enter
adc
fisubs
les
repz
shr
or
push
dec
loope
insl
mov
push
mov
loop
pop
add
jp
shrb
rcl
mov
addr16
mov
push
adcb
insl
lock
cmpsl
and
or
repz
fidivrs
mov
icebp
test
cmp
push
or
mov
std
push
sbb
dec
arpl
icebp
xor
sbb
lea
inc
add
stos
lret
outsl
jae
mov
jae
andb
inc
sahf
movsl
orb
push
mov
arpl
pop
js
call
xchg
pop
sub
jge
sti
add
imul
inc
cmp
test
imul
jmp
std
mov
insb
scas
xchg
or
xchg
xor
test
or
in
adc
jp
icebp
add
mov
je
dec
xchg
and
mul
dec
jae
add
iret
xor
adc
pop
xor
shl
ret
mov
int
push
cwtl
rcll
push
push
scas
lcall
icebp
or
push
inc
ret
ret
shlb
push
cmpsl
xor
stos
dec
and
jno
fwait
push
sbb
or
lret
jno
ret
mov
scas
inc
or
leave
popa
adc
cmpsl
mov
addl
lret
lds
adc
mov
pop
dec
add
pop
push
mov
pop
sub
pop
xor
test
stos
jno
js
and
scas
pop
into
pop
or
jo
cmpsl
cmp
icebp
xor
sbb
dec
push
dec
insl
sbb
pop
jne
addr16
and
rolb
loope
rolb
push
push
iret
out
or
mov
jnp
mov
pop
push
ret
adc
or
xor
push
int
push
dec
fucomip
lock
adc
in
adc
js
push
cmpl
cs
or
sti
leave
outsb
cmp
push
ds
repnz
dec
inc
pop
rclb
sbb
shrl
or
into
cmc
les
add
in
push
sbb
push
sbb
xchg
add
fistpll
dec
pop
pop
mov
xchg
out
mov
stos
loope
clc
adc
or
inc
test
xor
push
or
sbb
push
jmp
cli
rclb
ficoml
les
mulb
or
push
shl
jp
sbb
inc
lea
inc
push
lret
dec
or
sub
mov
mov
sub
pop
add
push
sar
mov
es
mov
lret
js
aad
rorb
or
add
int3
xor
add
xor
lods
or
dec
je
pusha
xor
loope
push
xor
sti
mov
adc
rcr
cmova
mov
inc
cmpsb
fdivrs
arpl
enter
or
in
lods
imul
sub
or
xor
mov
jle
fidivs
cmp
shr
push
adc
sbb
orb
or
in
rcll
jb
aam
imul
add
rcrb
mov
add
enter
and
mov
pop
cwtl
and
cmp
popl
shl
xor
ret
inc
test
loop
push
in
out
add
sub
ljmp
sub
cmpsw
push
sbb
sub
dec
add
xchg
sbb
inc
std
pop
mov
and
and
mov
call
out
sbb
adc
jo
sti
rorb
sti
or
sub
aam
jge
stos
icebp
push
icebp
popa
sbb
inc
mov
movl
sbb
mov
mov
jge
ja
push
xor
add
movsl
add
jmp
add
add
movsb
lea
adc
rcrl
mov
add
adc
xorl
or
jecxz
ret
pop
add
bound
shlb
cltd
or
inc
stc
or
mull
sbb
mov
inc
or
fsts
insb
lahf
add
push
inc
les
jp
add
inc
jl
repz
mov
mov
scas
test
or
mov
xor
sbb
into
jo
ja
lret
mov
mov
and
and
push
iret
aam
dec
rcrl
out
sbb
cmc
daa
dec
or
or
loop
add
xorb
idivb
push
rclb
sbb
jmp
push
sbb
push
and
dec
pop
mov
add
sub
xor
scas
scas
nop
add
adc
neg
add
mov
into
fistpl
or
inc
or
loop
sub
xorb
xchg
mov
in
inc
add
or
cltd
adc
into
or
ljmp
inc
stc
sub
push
mov
or
and
add
inc
test
cwtl
push
rcrb
test
inc
in
mov
mov
mov
int
sbb
pop
mov
sarb
bound
push
xlat
or
popl
push
cmp
xchg
xchg
cmp
lcall
popf
les
sub
sti
lret
dec
push
xor
mov
icebp
aam
fildl
ja
and
ret
inc
je
or
mov
test
adc
cli
or
addb
jbe
mov
add
push
sbb
jle
pop
xlat
mov
or
aam
das
insl
fsubrl
aaa
pop
cwtl
cmp
movsl
bound
push
repz
dec
nop
dec
mov
pop
pop
mov
pop
test
lahf
rcl
daa
adc
dec
inc
rolb
dec
and
mov
lock
jae
icebp
mov
jae
out
fwait
inc
sub
fcoml
rorb
push
push
fwait
sub
stos
cltd
nop
adc
sub
lcall
mov
jbe
push
adc
popf
enter
int3
push
and
add
push
icebp
xchg
ds
jg
les
mov
sbb
adc
testb
cmp
pop
adc
loop
inc
mov
pop
add
pop
rcl
in
aaa
or
addr16
pop
std
or
mov
mov
mov
and
pop
sub
xchg
push
xor
rclb
add
adc
ret
pop
add
or
xchg
add
shl
test
xor
fwait
sub
push
stos
sar
xor
mov
addr16
adc
xor
in
loopne
std
add
mov
jo
inc
mov
gs
xor
in
imul
js
and
adc
adc
mov
sbb
dec
cli
or
sub
mov
shrl
adc
js
add
imul
cwtl
rorl
jne
cmpsl
sbb
out
movsl
add
xor
pop
and
cld
add
cld
adc
daa
stos
push
jmp
add
dec
fsubl
sub
gs
push
mov
mov
mov
xchg
sti
push
insl
adc
adc
xchg
push
stos
cmp
pop
lock
movb
clc
shrb
mov
ret
mov
es
push
lahf
adc
add
cmpsl
pop
popf
ljmp
sbb
cltd
mov
test
jl
popa
mov
addr16
mov
out
imul
lods
sbbb
inc
in
mov
fdivr
push
xchg
mov
xchg
push
xor
sbbl
int3
xorb
mov
cwtl
mov
imul
movsb
in
cmc
rolb
jbe
aam
xchg
int
roll
sbb
adc
push
je
shlb
stos
sub
subb
and
add
xor
add
pop
mov
jae
jb
shlb
inc
lahf
lcall
push
stc
gs
xchg
mov
mov
adc
lea
push
mov
sub
roll
repnz
loopne
xchg
cmp
add
cmp
test
sub
add
dec
popf
sahf
mov
jl
shlb
push
push
insl
shrl
mov
push
xchg
push
push
push
jl
inc
aam
xchg
mov
mov
scas
push
lret
mov
add
rorb
stos
loop
cmp
mov
push
movsb
insl
xchg
push
xor
shl
pushf
rol
mov
stos
dec
mov
adc
inc
push
imul
cld
push
enter
sbb
add
adc
push
adc
mov
adc
loope
adc
lahf
push
rcrb
push
cmp
xor
mov
push
sbb
jmp
js
movb
outsl
mov
xor
ljmp
adc
repnz
inc
in
sbb
cmp
inc
inc
test
add
and
adc
ret
and
test
mov
stos
dec
out
pop
jle
sbb
movsb
test
test
adc
pop
inc
or
jb
in
adc
add
pop
add
dec
cwtl
inc
mov
in
loop
cltd
xor
sbb
push
lret
jge
ret
push
dec
add
je
and
lds
push
adc
mov
scas
inc
mov
pop
jne
stos
add
dec
add
push
jo
push
ds
adc
sub
xchg
xchg
sbb
mov
mov
cltd
sub
pusha
inc
push
adc
leave
cmp
add
jmp
or
adc
pop
mov
mov
mov
mov
push
adc
add
test
jo
and
xlat
adc
sbb
repnz
frstor
inc
push
roll
inc
popf
dec
inc
cmp
repnz
mov
pop
adc
or
fsubrs
xorb
mov
test
mov
push
daa
sbb
mov
inc
out
sbb
pop
cmp
call
bound
add
fs
stos
add
cwtl
inc
add
test
sahf
arpl
lods
or
xor
mov
pop
cmp
pop
or
ret
xor
nop
add
mov
ret
rcrb
add
test
push
pop
or
test
push
push
data16
out
add
mov
sbb
ret
sbb
cmp
sub
mov
cmp
push
mov
inc
mov
enter
lret
test
int3
not
mov
and
xchg
stos
aas
and
pushf
pop
push
testb
fbld
mov
stos
pushf
popa
inc
add
push
push
mov
hlt
sbb
and
mov
mov
xchg
nop
rorl
cmp
test
mov
push
xor
rclb
mov
dec
add
pop
xor
lea
and
inc
fs
push
addr16
cltd
sahf
and
int3
cs
test
popf
mov
mov
es
and
mov
inc
lds
fadd
adc
and
roll
shrl
mov
sbb
mov
push
ss
mov
sbb
out
je
das
lods
mov
jnp
mov
mov
adc
sbb
sbb
loopne
xchg
mov
psrlw
adc
rorl
adc
mov
mov
lret
or
data16
mov
sub
inc
in
adc
jo
cmp
test
sbb
ljmp
cltd
or
push
or
pop
enter
push
inc
stos
adc
shlb
mov
cmp
adc
sbb
incb
mov
mov
push
jb
loop
repnz
sub
and
push
scas
cmp
insl
pop
and
rcrl
js
xor
in
cmpl
or
push
ret
xchg
sbb
mov
and
roll
lcall
sub
int
dec
mov
inc
clc
rol
add
push
shlb
stos
or
in
mov
adc
scas
and
xor
add
scas
pop
push
push
lods
push
inc
jge
icebp
sub
mov
mov
xor
fldl
pop
add
movsb
cmp
mov
sbb
mov
jo
jno
rcrl
loopne
lea
and
push
imul
add
sub
rcr
adcb
jb
andl
jl
and
mov
push
pushf
or
scas
scas
nop
loope
loopne
rol
subb
sub
and
and
int
adc
mov
cmp
push
jge
sbb
push
sub
mov
xor
and
adc
push
insb
cmp
adc
mov
and
dec
sahf
xchg
jge
and
mov
cmpsl
mov
or
rorl
push
xchg
jns
sbb
xchg
mov
not
pop
push
out
adc
lret
loopne
add
fwait
mov
int3
scas
and
fwait
mov
test
pop
push
rcl
lods
push
repz
cmc
add
xlat
cmp
xchg
cmpsl
push
xor
mov
shrl
pop
push
pusha
stos
imul
adc
dec
in
push
pop
add
sub
xchg
mov
icebp
popa
leave
pop
mov
pusha
adc
xor
test
mov
cmp
les
and
add
sbb
jns
nop
sub
adc
sub
rorl
rcrb
jne
add
cmc
xor
out
add
mov
mov
add
jo
lea
call
sub
cmp
push
xorl
imul
pusha
mov
xlat
sbb
ror
pop
adc
cmp
in
xchg
ret
es
adc
loopne
nop
push
add
sbbb
loop
and
add
mov
sub
cmp
inc
pop
inc
pop
push
mov
jp
xor
mov
pop
xchg
add
in
fldl2e
cltd
or
shlb
sub
adc
pop
shlb
push
mov
mov
sub
enter
inc
je
js
test
adc
out
add
jbe
inc
dec
dec
ja
inc
inc
or
push
js
fnstcw
adc
outsl
or
sub
xchg
test
add
in
adc
ret
adc
addb
push
and
jnp
cmpsb
loopne
cmpsb
fchs
and
adc
and
sub
stos
sahf
xchg
jecxz
mov
popf
sub
lahf
sbb
mov
out
out
stos
andb
adc
mov
xchg
push
add
push
and
push
add
stos
lds
aaa
rolb
mov
fucomi
mov
mov
and
lret
mov
je
cmp
cli
cmp
js
inc
inc
xchg
pop
or
jb
cmp
nop
add
push
cmp
add
icebp
mov
push
roll
stos
or
imul
inc
push
sarb
sahf
sbb
in
xlat
sub
mov
mov
cli
dec
sbb
dec
mov
mov
push
loope
cltd
out
sbb
push
pop
sbb
cmp
addl
mov
mov
stos
xor
mov
mov
sub
movaps
or
addr16
roll
mov
add
pop
xchg
mov
mov
cmp
jecxz
xorb
mov
loop
arpl
inc
push
sbb
inc
adc
dec
push
push
jp
mov
sbbb
sbb
mov
shr
ljmp
mov
push
pusha
pop
insb
rcrb
ds
pop
mov
dec
leave
mov
mov
and
out
stos
pop
cmp
out
or
inc
dec
jo
popf
or
sub
sbb
xchg
inc
add
cmpsl
push
imul
lret
sbb
push
lea
inc
jecxz
dec
loope
inc
lea
add
push
sbb
push
add
add
inc
data16
push
push
cltd
pop
add
leave
add
test
add
cltd
ret
mov
cmpsb
test
or
push
mul
inc
dec
adc
aaa
ljmp
mov
shrb
sbb
or
scas
dec
cltd
adc
sbb
inc
xor
sbb
cmp
movsb
ljmp
cmp
xchg
mov
xor
dec
mov
mov
and
push
mov
divb
mov
and
sbb
mov
ljmp
rcl
inc
or
mov
and
mov
pusha
inc
daa
shlb
into
cmp
imul
lret
mov
or
les
inc
roll
pop
insb
inc
xchg
add
dec
push
xchg
sub
rorl
rclb
xchg
add
mov
insb
call
dec
push
je
loopne
sbb
subl
and
sarl
add
inc
mov
addr16
and
mov
jecxz
pop
aad
scas
mov
imul
movsb
mov
pop
sbb
adc
repz
icebp
xchg
cld
nop
or
adc
push
iret
jae
rcll
orl
mov
in
jbe
mov
imul
push
scas
rolb
adc
jae
call
andb
mov
lods
jns
cmpsl
loopne
sub
ljmp
pop
add
pop
daa
bswap
sbb
les
cmp
dec
ds
jl
pusha
or
sbb
dec
or
xor
dec
rcrl
push
adc
push
and
cmp
lock
xor
jo
add
ss
fsubrl
cli
repz
sub
ss
and
mov
popa
adcb
data16
inc
enter
scas
xchg
mov
mov
push
gs
xchg
dec
cld
lret
inc
or
mov
mov
pop
cltd
movsl
movb
sbb
and
add
xor
push
and
in
subl
fcompl
pop
ret
add
lock
sbb
nop
shrl
sbb
and
push
rolb
jg
arpl
xlat
int
push
and
mov
mov
mov
add
sbb
lock
call
or
xchg
mov
push
push
mov
or
sbb
add
and
push
fdivrs
or
pop
popf
adc
mov
push
sbb
mov
sbb
jmp
push
mov
adc
or
jne
or
adc
es
or
int
and
sbb
sub
fildl
scas
push
xchg
lcall
dec
xchg
xchg
add
pop
push
push
or
and
cmovns
mov
enter
mov
adc
add
inc
pop
sbb
xchg
add
push
ret
rcrl
inc
cmp
icebp
push
mov
inc
cmp
inc
or
mov
mov
lret
ljmp
mov
add
mov
adc
shll
scas
add
out
adc
and
push
ret
sbb
mov
fidivrs
test
call
data16
sarb
lods
inc
dec
pop
adc
sub
xchg
addl
rolb
or
mov
hlt
xor
popa
sub
sub
loop
les
cmc
sub
je
pop
or
inc
rcll
cmp
pop
icebp
and
incl
pop
adc
xor
or
mov
mov
hlt
push
add
ljmp
pop
add
fstps
loop
lock
ds
pop
insl
adc
ljmp
xor
or
cmp
adc
aas
inc
dec
inc
push
adc
ret
xor
mov
push
and
add
mov
shlb
or
cwtl
subb
inc
mov
pop
dec
inc
testl
test
mov
sbb
push
rcrb
daa
push
sbb
enter
xor
adc
push
jb
test
and
int
add
loopne
push
fcomps
rclb
rorl
mov
rcrl
sub
pop
xchg
sbb
sub
push
pop
add
xor
rolb
xchg
add
das
pop
shlb
and
icebp
xor
ljmp
rcrl
mov
stc
or
pop
ret
mov
call
and
jp
push
inc
cmp
daa
ljmp
inc
loopne
mov
and
cmpsb
push
push
data16
incb
mov
mov
xchg
lds
jnp
dec
adc
and
adc
dec
push
sub
add
cmp
and
or
rol
mov
daa
mov
shr
or
data16
inc
sti
push
mov
ja
and
leave
lods
pushf
imul
lods
shl
repnz
cmp
shlb
addr16
lock
or
aaa
insb
sub
jo
dec
inc
jge
or
lods
mov
mov
mov
ret
add
mov
push
or
loopne
jge
inc
dec
pusha
add
sarl
lret
and
add
adcb
daa
cwtl
push
xchg
adc
arpl
adc
push
std
push
adcl
xchg
adc
sbb
dec
and
daa
mov
add
faddl
pop
xchg
loop
dec
mov
js
mov
rcll
push
or
add
shlb
push
roll
push
add
mul
es
push
push
nop
xchg
call
imul
sub
sbb
sbb
lods
push
sbb
adc
sbb
lcall
psubsb
xor
mov
fcompl
xorb
test
test
ja
sub
or
add
add
cmp
mov
lcall
adc
cmp
mov
add
push
lea
or
lds
cmp
mov
enter
mov
mov
inc
cs
jo
pop
push
jo
mov
inc
js
and
adc
movsl
sbb
push
or
push
call
adc
inc
lret
fimull
das
clc
sbb
add
push
insl
jb
mov
dec
outsl
adc
js
in
test
out
xchg
push
mov
or
and
cli
add
aam
call
shl
adc
inc
cwtl
xchg
daa
inc
lods
jnp
dec
movb
enter
loopne
enter
sub
pop
aam
or
and
or
mov
push
add
adc
test
fmuls
das
cwtl
adc
stos
mov
mov
idivl
cmp
and
mov
ret
cltd
dec
icebp
inc
xchg
sti
das
push
ss
loopne
inc
in
push
push
outsb
je
xorb
inc
pop
sbb
jp
sub
imul
mov
and
cmp
sar
add
cmp
jg
pushf
mov
rcrb
leave
cmc
roll
mov
or
add
pop
ret
or
inc
xchg
inc
mov
nop
rcr
push
sti
test
cmp
add
mov
mov
stc
sub
iret
stc
push
std
std
mov
lods
mov
add
push
xor
test
stos
push
push
jge
cli
push
cmc
popa
mov
inc
sbb
lret
or
mov
add
out
pushf
or
add
add
sub
or
clc
stos
ret
push
test
mov
lds
inc
adc
or
out
sbb
loop
nop
add
or
cltd
scas
sbb
lret
outsl
add
inc
push
andl
pop
or
push
roll
sbb
fs
repnz
das
or
cmp
pop
cli
mov
sbb
jne
add
or
push
pop
sbb
add
xchg
mov
adc
inc
sub
or
enter
lods
imul
and
push
rorl
testb
push
das
mov
lretw
xor
add
push
aam
push
pop
mov
cmpsl
fcmovbe
sarb
stc
dec
adc
rorb
adc
xor
fnstcw
and
dec
mov
clc
add
adc
shll
add
and
add
aam
cltd
icebp
mov
add
jne
mov
cmp
dec
jg
add
cmp
push
push
push
adc
adc
push
dec
test
xchg
push
pop
test
push
inc
and
add
add
mov
jb
and
bound
sub
sbb
push
or
ret
jbe
adcb
xor
out
xchg
ds
mov
adc
add
call
arpl
pusha
jb
icebp
test
or
add
popa
mov
adc
jo
in
mov
sbb
jns
mov
std
xor
or
sahf
out
xchg
or
add
or
sub
call
xchg
mov
mov
test
adc
or
push
in
icebp
pop
sub
test
mov
sahf
pop
cli
adc
and
or
clc
loopne
add
adc
add
mov
push
dec
jmp
xor
push
imul
adc
adc
das
aaa
rolb
es
pop
sbb
sbb
pop
inc
xchg
movsl
js
xor
andl
imulb
ljmp
js
inc
sub
icebp
mov
ret
leave
ret
ja
rorl
push
scas
add
lods
sub
or
je
pop
int3
mov
pop
cmp
sub
or
dec
das
jo
cmp
xchg
je
int
add
mov
fimuls
fcomip
sub
inc
lods
add
mov
jae
in
cmp
icebp
filds
inc
jae
lcall
and
sbb
or
and
xchg
xor
mov
jo
inc
bound
mov
mov
mov
push
xchg
sub
ret
jnp
push
stos
orl
add
mov
vandnps
fildl
pop
les
pop
mov
sub
add
or
dec
insl
cmp
jae
jmp
fistpl
cmovo
mov
insb
mov
imul
lea
inc
jmp
or
enter
mov
enter
js
fstps
push
adc
pop
fisubrl
xchg
rcrl
cwtl
movsl
ficoml
pusha
ret
mov
cmp
sbb
cmp
enter
push
xchg
test
cmp
adc
jo
rol
pop
add
sbb
cmp
xchg
pop
push
jo
out
rclb
add
add
push
pop
mov
cmp
inc
or
loopne
pop
mov
pop
rclb
adc
outsl
add
add
and
popa
sahf
jno
addr16
adc
aad
cmp
fldl
pop
roll
or
push
and
xchg
xor
jno
and
and
push
or
push
or
pop
fcoms
cmp
xchg
sbb
fs
jge
or
arpl
clc
or
outsl
aam
sbb
jmp
inc
lret
lods
and
push
inc
mov
repnz
adc
fmulp
adc
sub
push
inc
inc
sahf
ror
inc
roll
or
cmp
sbb
cmovo
xlat
outsl
lea
sub
jmp
test
inc
sbb
mov
inc
bound
fwait
mov
push
push
lods
push
and
pop
pop
add
dec
sub
loopne
pusha
adc
xor
ret
push
jp
je
adc
add
shl
adc
or
jmp
jo
bound
jl
push
mov
and
orb
adc
or
lea
fistpl
rorl
into
adc
sbb
mov
or
xor
loop
adc
push
push
xor
out
dec
and
addl
push
gs
pop
pop
dec
jb
cs
xor
jmp
mov
call
fmuls
lret
ret
test
cmp
dec
or
jae
loopne
sub
and
popf
loopne
pop
rcrl
or
or
outsb
insl
flds
lret
push
popa
inc
cmc
mov
movsb
lret
and
or
fs
repnz
xchg
push
lods
les
shll
sbb
xchg
or
sbb
shrb
into
or
mov
inc
out
adc
out
sub
xor
daa
pop
add
daa
out
mov
sub
add
loopne
adc
stos
xor
pop
ljmp
in
jecxz
sub
push
or
mov
mov
inc
mov
sbb
dec
adc
xor
iret
sbb
mov
push
pop
popa
shrl
shlb
add
pusha
add
mov
roll
aad
add
rolb
sub
push
push
shll
or
add
adc
mov
mov
pushf
out
inc
mov
cmp
inc
pop
rcr
shl
in
mov
adc
or
push
push
lcall
mov
in
leave
inc
movsb
lcall
and
pop
add
xor
leave
ret
sbb
pop
mov
jmp
addr16
fs
push
push
fs
out
and
push
push
mov
call
rorb
pop
fmuls
mov
or
or
mov
push
sbb
or
nop
decb
stos
pop
test
jne
dec
gs
fstpl
fcoml
adc
testb
jbe
mov
pop
sbb
mov
inc
orb
jge
mov
mov
sub
lea
push
jg
sub
push
nop
mov
testb
je
movzwl
jmp
push
pop
lret
push
push
and
and
push
pop
mov
or
and
in
mov
or
fucomip
ja
sbb
ret
mov
jne
push
cmpl
out
add
or
and
or
dec
dec
leave
xchg
divl
and
mov
hlt
in
add
jecxz
and
divl
add
and
pop
jmp
adc
push
add
adc
outsl
inc
sahf
or
push
or
adc
cmp
mov
jnp
jne
sbb
sub
imul
cmpl
mov
and
mov
mov
lock
lea
push
int
fcmovb
jb
push
pushf
bnd
dec
pusha
xor
cltd
sbb
bnd
jmp
fistpl
je
or
pop
ret
subl
test
sbb
pop
or
jnp
pop
ja
mov
enter
movb
movb
ret
jo
push
sbb
mov
or
push
cmovno
fisttpl
mov
or
fstpl
sti
add
sbb
sub
ret
adc
daa
loop
dec
push
int
mov
mov
dec
sbb
test
scas
enter
xchg
push
dec
jge
lea
mov
push
movsb
pop
jle
pop
fs
and
addr16
cmp
jl
inc
rcrl
cmp
inc
jne
movl
nop
jno
dec
cmp
xchg
test
cmp
push
cwtl
out
xchg
cmp
fisttpl
pop
add
iret
rcrl
js
pop
jmp
call
push
push
lods
cld
mov
or
jmp
arpl
pop
pop
leave
mov
push
fldt
cmc
or
xor
je
lea
add
adc
jae
cmp
jne
out
adc
pop
sub
pop
pop
paddsw
arpl
std
cmp
mov
cmp
jne
mov
inc
pop
je
test
dec
movzbl
incb
je
inc
jmp
cmpb
or
jg
cmp
jbe
inc
or
ja
xor
add
lods
negl
jmp
fstpt
sbb
mov
xor
daa
cmp
je
std
dec
jg
cmp
je
inc
out
jns
pop
lea
add
add
jge
jnp
adc
cmp
mov
lods
in
jg
rcrl
or
pop
je
push
push
cmp
outsb
jg
call
dec
and
cmp
das
push
fnsave
gs
pushl
or
pop
bound
std
fcomip
lds
incl
mov
pop
fldl
test
pop
jb
ss
mov
and
push
ja
dec
clc
mov
jbe
ret
dec
mov
mov
push
add
push
push
push
lahf
mov
mov
pop
mov
xchg
fmuls
aam
sbb
mov
fsubrs
daa
and
push
push
xor
cld
daa
adc
pop
movsb
pushf
hlt
mov
jecxz
dec
sbb
andl
out
or
xchg
jne
jecxz
or
add
push
sbb
aaa
jg
shlb
fwait
inc
mov
inc
subb
test
mov
and
mov
enter
test
jo
adc
mov
jmp
or
andb
inc
inc
fistl
sbb
add
jae
outsl
leave
testb
and
lret
pop
or
or
jne
dec
mov
int3
shl
shlb
cmpsl
sbb
dec
add
xlat
inc
sub
pop
enter
int3
mov
add
rcl
mov
pop
jne
inc
inc
jmp
xchg
sub
ret
add
inc
cmp
or
jecxz
sbb
aaa
or
sbb
sete
mov
dec
test
aad
xchg
push
inc
mov
inc
mov
jne
xor
mov
cmpsl
dec
cmpl
or
insl
je
minps
sbb
and
cmovo
mov
add
imul
sbb
jbe
femms
push
movl
out
push
sti
pop
ret
dec
and
adc
xor
add
test
add
push
out
popa
repz
jnp
aam
sub
or
ficompl
add
lret
lods
ret
insb
sbb
lret
or
test
ret
mov
leave
aam
in
inc
inc
or
jne
push
movsl
das
pop
mov
sar
mov
pop
add
inc
and
cmpsl
xor
xor
adc
push
push
shll
lea
or
daa
hlt
daa
loope
pop
or
ret
jmp
je
xlat
ss
jne
movsl
test
mov
pusha
mov
je
inc
cmp
add
fisttpll
dec
mov
stos
sti
jmp
lcall
insb
push
cmp
fidivrl
dec
in
scas
int
pop
dec
push
es
test
sbb
mov
dec
mov
and
fmul
jae
outsl
add
andl
inc
add
or
pop
jmp
and
mov
jg
data16
in
or
cmp
movsl
dec
xchg
mov
add
push
clc
jl
gs
or
jge
mov
imul
push
cmp
xorl
orb
aas
shll
pusha
or
mov
bound
mov
mov
jl
jmp
or
sbb
cmp
jle
pop
jno
mov
test
lcall
push
mov
and
mov
popa
add
pop
or
shll
add
or
fwait
inc
add
inc
cmp
jl
pusha
pop
sub
cmp
decl
ss
das
cmpl
pop
jmp
ret
dec
neg
sbb
divb
popa
cmc
or
jp
push
jo
ret
or
in
orb
pop
mov
jne
or
add
subb
jl
dec
ret
jge
jo
pop
test
jae
adc
fidivl
cld
pop
push
cmc
fidivrl
sub
sbb
xchg
push
divb
pop
adc
pop
sbb
pushl
push
pop
arpl
xor
adc
mov
mov
push
xor
adc
data16
rol
les
or
inc
and
insb
es
push
pop
adc
repnz
pusha
outsl
pop
jge
add
or
in
out
push
push
push
cmpsb
pop
enter
sub
and
insb
xor
nop
ret
aam
push
int3
int3
mov
addr16
inc
add
mov
pop
xlat
std
dec
ror
dec
testl
testl
adc
imul
push
push
orb
xor
add
jo
mov
jmp
mov
outsb
or
dec
xchg
jl
jne
std
sti
xchg
sbb
sub
call
jp
or
ret
popl
movsl
outsl
push
cmp
lcall
insl
jl
push
test
cmp
add
fistl
sbb
fisubrl
mov
popa
dec
add
imul
ret
hlt
fucomip
push
inc
xor
pop
inc
xor
mov
lds
pop
or
testl
fwait
js
adc
popa
stc
push
fbld
and
or
popa
xchg
mov
das
je
push
push
lea
test
pop
pop
cmp
or
push
mov
loopne
pop
mov
add
push
or
sub
ss
fimuls
or
or
sbb
mov
jmp
les
imul
fnstcw
pop
push
in
aaa
mov
xchg
mov
inc
sbb
add
test
and
mov
rolb
add
or
adc
fcomps
call
rolb
or
leave
mov
add
hlt
scas
sub
icebp
je
mov
cs
mov
sbb
jmp
cwtl
call
inc
aaa
adc
test
jne
icebp
lea
cld
std
test
cwtl
sub
xor
adc
push
sub
in
add
in
in
or
pop
gs
sub
or
push
clc
or
ljmp
loopne
cltd
xchg
pusha
inc
adc
pop
imul
mov
sbb
rcrl
iret
gs
mov
push
cwtl
xchg
lea
in
adc
xor
imul
dec
lcall
jl
sti
rorl
xorb
call
pop
xchg
inc
push
sbb
int3
lods
loope
mov
subl
lock
ja
pop
jne
push
push
pop
clc
push
outsl
shrb
adc
scas
mov
add
out
outsb
push
cmc
es
pusha
ds
push
sbb
les
sbb
or
adc
add
test
mov
add
loop
mov
mov
sbb
cwtl
fidivrs
mov
inc
adc
mov
dec
add
pop
mov
sbb
xchg
cmp
rorb
pusha
cmp
sub
insl
shrb
cmp
out
push
pop
mov
cmp
pop
sub
inc
mov
push
call
sbb
test
add
imul
andl
add
fists
stos
stos
mov
xchg
cmpb
mov
cmp
outsb
cmpsb
push
mov
inc
incl
mov
xchg
and
cmp
out
jmp
fnsave
lret
add
lea
ljmp
je
mov
mov
add
xchg
neg
mov
cld
mov
inc
inc
adc
mov
jbe
inc
inc
cmpb
aam
push
ret
sbb
popa
mov
shll
jle
js
lods
push
mov
das
mov
scas
fstp
out
jo
mov
shll
pushl
mov
mov
lret
inc
cmp
sti
jb
push
cmp
dec
push
lods
jnp
loope
pop
or
add
loopnew
jmp
jo
inc
xchg
cs
add
popl
xchg
jmp
xchg
or
cmc
mov
leave
sub
inc
gs
mov
call
nop
fdivs
mov
movsl
push
loopne
movsb
cld
rclb
dec
xchg
adcb
cmp
push
push
mov
rep
adc
or
push
jno
or
mov
testb
iret
pop
xchg
icebp
lea
clc
cwtl
adc
push
push
aas
sarb
mov
jb
mov
movb
add
aaa
aad
push
repz
add
ja
ja
mov
shr
test
outsl
call
out
loope
rep
inc
inc
mov
xor
rcrb
push
mov
scas
popa
in
cli
mov
mov
mov
outsb
fnstenv
push
push
push
xor
aad
leave
enter
dec
outsb
dec
add
and
jb
lret
std
mov
adc
ret
add
mov
mov
je
filds
mov
mov
or
mov
mov
adc
mov
in
in
test
xor
sbb
shl
in
ja
and
and
dec
inc
add
dec
mov
dec
out
adc
test
mov
dec
cmp
mov
xlat
ds
sbb
push
test
pusha
sub
imul
sbb
add
pop
arpl
pop
addr16
lea
loope
clc
push
test
inc
sarl
push
hlt
add
jne
mov
enter
and
test
call
mov
in
sbb
in
sarb
lea
add
jmp
lods
sarl
pusha
or
sbb
rorb
cmpsb
inc
ljmp
jmp
mov
inc
mov
sub
outsb
imul
test
daa
test
aaa
adc
push
cmp
lds
movb
mov
subb
pop
sbb
push
cmp
xchg
outsb
cltd
jl
loopne
ss
ja
adc
dec
jne
aam
iret
rorl
adc
pop
sbb
fwait
xor
test
xor
pop
add
insb
push
and
cmp
inc
push
cmp
push
push
popa
ret
out
test
pop
xchg
pushf
or
outsb
adc
int
inc
test
ret
adc
sub
ret
and
std
cld
or
mov
jne
dec
sub
inc
shlb
inc
sbb
cmp
jbe
clc
jb
loop
mov
mov
and
sub
adc
jmp
or
clc
loopne
fldenv
insb
pop
test
push
enter
out
mov
loopne
or
xor
rorl
out
aaa
mov
add
mov
sbb
pop
int3
lea
sub
sub
pop
and
enter
nop
and
inc
aas
mov
scas
sbb
scas
add
lcall
inc
mov
mov
cmpsb
imul
imul
or
xlat
out
sbb
or
lock
push
lea
int
shll
popf
or
adc
inc
inc
jo
or
js
lea
jl
cld
jg
ret
testb
push
neg
gs
sbb
cmp
dec
stc
sub
jne
sahf
jl
and
or
mov
fisttpll
pop
mov
add
outsl
add
dec
push
and
or
mov
pop
mov
out
add
add
mov
daa
and
sub
push
scas
inc
pop
lea
lcall
adc
imul
inc
xchg
sbb
imul
imul
movsb
imul
lcall
mov
pop
subb
xchg
test
mov
adcl
lods
add
or
add
movsl
loopne
fidivs
ljmp
adc
pop
nop
shrl
daa
push
jne
je
and
or
and
js
push
jle
mov
test
int3
cmp
adc
cli
add
jmp
pop
jg
xchg
bound
clc
push
sbb
scas
adc
dec
adcb
sti
fcmovne
inc
mov
pop
xchg
fidivl
addr16
pop
push
or
push
push
mov
lret
sbb
imul
sub
add
push
rcl
mov
cld
push
sarl
jp
imul
push
test
mov
mov
pop
inc
dec
push
or
test
or
jne
rcrl
aas
dec
pop
or
iret
jbe
int
adc
push
and
dec
nop
or
inc
das
dec
jae
mov
dec
add
xlat
loopne
loope
and
and
jmp
push
int3
add
sub
outsb
mov
push
jns
push
adc
adc
xor
add
add
or
mov
sar
icebp
aas
jnp
pop
das
pop
mov
mov
loope
in
fisubs
and
mov
pop
cmp
cmpsb
fistpl
mov
inc
sbb
inc
mov
lahf
ds
jbe
cli
mov
add
push
mov
leave
and
and
sub
shlb
xchg
dec
in
mov
add
inc
lods
xchg
or
xchg
jmp
test
or
xchg
mov
mov
lea
or
mov
aad
xchg
lods
push
add
jbe
inc
mov
xchg
inc
mov
jae
mov
cmovbe
mov
jmp
or
ds
fs
sbb
sub
lea
xchg
sahf
lds
and
test
or
mov
sbb
inc
xchg
in
cli
dec
mov
mov
or
stos
mov
jo
loope
add
push
sbbb
notb
call
pop
xor
push
or
sti
shll
inc
adc
jo
mov
paddd
or
jns
cmpsb
dec
ficoms
andl
adc
sub
fisubl
pushl
pop
adc
adc
sbb
jmp
add
bound
test
lods
xchg
jmp
in
push
lea
push
dec
mov
imul
pop
incl
xor
stos
xchg
xchg
mov
lods
insb
push
movsb
into
mov
xchg
sub
subb
jecxz
sbb
jbe
pop
push
out
push
dec
xor
push
xor
out
sub
mov
pop
lret
hlt
jmp
shlb
shr
push
or
pop
and
dec
mov
jae
pushl
sbb
sub
decb
iret
jne
add
cmp
sbb
pop
jne
mov
cmp
es
add
pop
and
sahf
popf
pop
mov
or
aaa
jmp
rcrb
out
push
aad
push
fisttpl
test
jnp
test
test
mov
aaa
loopne
jmp
jmp
test
mov
cli
dec
sub
ret
mov
mov
mov
push
push
push
fstl
push
in
or
inc
or
mov
jne
xchg
pop
mov
sbb
mov
cmp
xlat
je
mov
insl
sbb
pop
dec
jbe
push
into
jne
mov
push
fs
test
jl
shl
inc
jmp
mov
push
ja
frstor
fmuls
sub
jnp
incb
aam
orl
aam
cmp
fcompl
and
pop
push
and
jl
pushf
shl
gs
ja
in
and
mov
decb
jne
call
sub
or
xor
sub
mov
ss
jb
inc
mov
test
or
hlt
mov
clc
add
addr16
test
test
add
ret
xchg
outsb
xchg
push
decb
jge
les
imul
mov
cmp
add
or
das
sub
jge
dec
orb
jnp
mov
lods
sub
cs
mov
cmp
or
mov
jne
clc
insl
sub
xor
lahf
mov
pop
lock
stos
and
jne
arpl
dec
cmp
imul
in
inc
add
cli
es
or
and
cmp
jne
pop
mov
lock
sbb
push
xchg
pushf
cmp
je
sbb
mov
xor
xor
inc
loopne
inc
xor
pop
sbb
je
push
inc
mov
jmp
cmp
mov
mov
dec
sbb
xor
dec
aam
mov
incl
xor
adc
sbb
or
fcmovnb
dec
lea
inc
ret
aaa
imul
add
push
or
add
mov
test
shl
rclb
adc
pop
mov
lea
in
mov
cli
ja
lea
dec
repnz
hlt
lea
cld
lock
jge
mov
push
out
jmp
call
inc
inc
jmp
push
add
mov
clc
xchg
es
ficompl
lods
lea
or
inc
jno
ljmp
enter
stos
or
cmpsb
or
sbb
js
mov
push
inc
push
rolb
push
xor
iret
movsb
addr16
mov
or
jge
popa
inc
je
adc
jle
imul
adc
or
dec
mov
or
push
call
cmp
add
push
adc
add
dec
ror
cmp
and
cs
xchg
jp
mov
insl
call
adc
sub
mov
jno
jne
jmp
inc
inc
mov
clc
push
inc
inc
dec
je
adc
pop
mov
jmp
sbb
je
and
test
ret
adc
push
pop
je
cmp
push
adc
out
insb
sbb
les
cmp
arpl
cmp
xchg
fisubrs
or
adc
cmp
sbb
imul
xor
push
icebp
push
popa
mov
mov
pop
jne
mov
test
bound
sbb
das
jo
inc
cmc
sub
push
push
or
xor
mov
mov
push
sbb
push
sbb
and
sbb
and
dec
mov
pop
adc
mov
cmp
js
pop
or
call
cs
mov
push
sbb
sbb
popa
and
sbb
dec
fmull
insl
in
roll
mov
mov
jae
andb
loopne
mul
or
aaa
and
or
ss
out
sbb
or
or
les
push
jmp
clc
mov
pop
mov
adc
dec
data16
dec
fsubl
push
hlt
adc
jnp
dec
in
sbb
idivb
je
testb
je
ds
mov
jbe
add
aad
push
fidivl
inc
cwtl
lods
lea
xor
addr16
xor
sub
push
jo
mov
and
pop
loopne
jne
bound
je
push
fs
outsb
out
xchg
addr16
mov
add
jmp
cmp
jo
mov
push
mov
mov
lods
cmp
adc
push
dec
rclb
xor
inc
mov
xchg
repz
lret
enter
sub
add
pop
rcrb
adc
mov
lods
inc
outsb
cld
push
cmpb
inc
in
push
pop
push
push
outsl
add
movsl
mov
adc
mov
push
mov
fimuls
ljmp
repnz
add
jmp
add
xor
xchg
sbb
pop
sbb
push
sub
and
fdivl
push
je
gs
or
jl
mov
push
int3
sub
into
xchg
or
insl
jbe
push
sub
push
pop
sbb
pop
inc
jnp
push
clc
xlat
xchg
mov
and
cmc
int3
mov
in
mov
lahf
add
popa
or
arpl
test
loopne
je
sbb
pusha
add
jns
sub
test
add
sub
addr16
sarb
add
add
push
adc
je
mov
push
rep
cmp
and
out
adc
mov
pushfw
inc
pop
xchg
mov
jmp
loopne
pop
or
adc
cmpsb
int3
lock
add
lea
lcall
pop
push
dec
test
cmpsb
inc
cmp
sub
mov
push
add
pushf
mov
cmp
push
jb
adc
jmp
mov
add
inc
and
jmp
mov
les
cmpsb
imul
and
push
add
dec
xorb
mov
call
jb
sub
or
jae
adc
or
loope
out
fadds
push
cmp
enter
push
enter
lock
enter
in
or
enter
rcl
fadds
add
add
movsl
cli
frstor
add
imul
outsl
jb
stc
outsl
neg
or
dec
push
push
adc
add
dec
inc
jg
sti
add
inc
dec
dec
inc
adc
push
xor
cmp
pop
fisubrs
sub
insb
je
and
imul
insb
imul
aaa
daa
aaa
outsb
outsl
mov
cmp
and
popa
arpl
data16
outsl
cs
cmp
outsl
outsb
aaa
sbb
inc
jae
fs
jo
jb
jbe
jb
jne
xor
std
and
arpl
sub
mov
sub
pop
das
pop
push
das
in
fs
fsub
pop
xor
imull
fdivs
xor
pcmpgtb
arpl
fcompl
or
inc
and
gs
aaa
adc
sbb
aaa
jl
outsb
jne
lods
je
mov
arpl
sub
jae
fs
add
mov
addr16
insl
and
ss
popa
das
test
xor
dec
adc
push
sub
jl,pn
inc
sub
popa
jb
jne
jae
mov
and
xor
outsb
outsb
subb
outsl
add
out
ficoms
pop
loope
sub
push
imul
inc
sub
and
dec
imul
int3
jge
or
adc
pop
jecxz
push
aam
ret
add
fwait
imul
loopne
sub
insb
ja
jo,pt
outsl
sbb
je
popa
xor
jbe
push
fidivl
mov
xorps
filds
addr16
outsl
js
add
and
jmp
sub
sub
mov
add
or
cmp
mov
pop
imul
ljmp
add
aad
xor
add
bound
add
add
or
rorb
sbb
int
lea
mov
orb
xchg
orb
xchg
xchg
and
fldl
add
js
or
and
sbb
add
fists
jo
inc
or
dec
push
jns
or
cwtl
repnz
xchg
adc
sbb
sbb
dec
sahf
cmp
call
sbb
repnz
xchg
js
jns
jp
cld
enter
sbb
or
mov
shrb
fs
adc
sub
push
lret
add
das
movsb
add
enter
jns
and
iret
lahf
lahf
sbbl
mov
fsubs
pop
inc
sbb
mov
inc
mov
stc
or
mov
sbb
in
call
xchg
cld
jbe
push
add
pop
pop
fisubrl
xor
mov
loopne
cmp
jle
add
cltd
xor
jnp
jp
jne
sub
dec
add
or
inc
test
push
add
nop
addl
pop
addb
sub
cmp
and
add
or
and
adcl
sub
pop
addb
or
mov
pop
add
fs
gs
popa
outsb
fs
aas
sti
or
dec
outsb
outsw
adc
insl
insl
add
pusha
ja
dec
imul
stos
push
rclb
inc
sbb
stos
mov
arpl
or
arpl
add
adc
push
ja
daa
adc
xor
insb
pop
jb
add
mov
popa
insl
pop
inc
jb
gs
popa
mov
or
jb
addr16
subb
push
push
imul
dec
xchg
xor
pop
pop
sub
test
cld
int
mov
add
aas
sti
mov
or
jne
jb
push
fucomip
jle
gs
fs
insb
jae
push
popa
insb
jne
add
bound
push
jo
in
add
cmpsl
and
sti
cmp
ds
or
and
sub
and
clc
insb
imul
sbb
push
je
inc
ja
mov
mov
xor
or
or
xchg
sbb
jb
je
outsb
bound
dec
push
jbe
rclb
negb
imul
or
dec
inc
dec
or
rclb
sbb
pmulhw
fs
dec
pusha
cwtl
add
shrb
xchg
lea
insb
ret
inc
ja
or
xchg
push
jo
pop
dec
add
inc
test
cwtl
mov
insl
inc
sub
int
lods
inc
movsl
jae
repz
js
lods
popa
jae
push
int3
sub
lahf
or
not
and
mov
int
adc
lahf
pop
mov
add
inc
xlat
loopne
jb
jae
in
insb
dec
jae
popa
jno
cmpsb
mov
fisubrs
je
shlb
push
dec
inc
xor
adc
lcall
jo
push
imul
push
daa
js
gs
mov
mov
shlb
xchg
mov
add
dec
cmp
cmpb
aas
add
inc
adc
in
das
lock
add
add
jge
xor
add
imul
cmp
add
add
and
adc
sbb
jnp
insl
lock
mov
push
xor
add
add
add
push
dec
ljmp
aad
adc
inc
adc
xchg
add
add
pop
fistpll
xchg
mov
mov
mov
fstpt
mov
xchg
sbb
mov
add
jp
cmp
notb
int3
lock
sbb
xor
xor
mov
mov
fidivs
and
inc
cmp
adc
fnstsw
out
mov
sub
cmp
jnp
push
push
dec
mov
jno
jle
sarb
add
outsl
inc
add
outsl
cmp
add
inc
shll
mov
loope
mov
test
das
inc
sub
mov
jmp
bound
or
sbb
imulb
jae
jg
inc
test
lds
loop
cli
stos
mov
cld
xor
inc
leave
add
fistpll
in
mov
add
arpl
push
add
in
outsl
clc
push
aas
push
add
cwtl
mov
dec
xor
pop
fcoms
mov
fildl
lock
mov
ljmp
dec
cmp
stc
add
ss
add
dec
arpl
outsb
jnp
add
add
inc
in
add
sub
add
idivl
xchg
push
int
dec
lds
cmp
fstpl
add
ret
xlat
ret
mov
into
add
xchg
add
add
pop
fstpt
mov
jle
xor
mov
dec
push
aam
test
pop
pshufw
xchg
pop
aas
add
imul
push
lcall
pop
add
or
add
loopne
enter
jo
inc
out
push
insl
loope
fsubrs
pop
outsl
cmp
sti
test
jnp
add
push
or
insb
or
xor
or
idiv
in
sbb
cmp
adc
pop
or
or
push
push
push
test
pushl
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
xor
aas
push
adc
xor
std
call
pop
adc
and
push
xor
adc
add
inc
or
adc
sbb
adc
sbb
sbb
lock
add
adc
or
inc
adc
fistps
push
or
adc
adc
sub
xor
or
xor
mov
and
mov
pop
adc
mov
or
inc
cwtl
add
push
outsl
mov
adc
filds
push
movups
lock
pop
scas
mov
add
sbb
add
dec
push
add
or
pop
push
sbb
nop
xor
push
or
jecxz
xor
sbb
dec
add
push
sbb
adc
or
fimuls
std
jno
inc
cmpsb
lock
add
adc
test
ficomps
adc
sbb
adc
or
ret
adc
sbb
pop
mov
sbb
sbb
pop
push
xor
inc
add
adc
sarl
adc
xchg
add
cld
adc
pop
mov
add
add
lods
or
or
cmc
fcmovnbe
jmp
adc
lock
add
push
inc
dec
dec
nop
add
into
orl
movhlps
loopne
add
or
or
add
sbb
mov
inc
fnstenv
push
or
aad
pop
std
dec
xchg
jns
lock
push
inc
sbbl
pop
push
das
add
in
mov
rolb
inc
aaa
cmpxchg
loopne
or
cmc
push
and
cmpsl
mov
xlat
rcll
nop
sub
pop
jmp
and
pusha
jb,pn
push
aam
ja
pop
aam
xchg
pop
inc
add
xor
pop
cs
cld
or
push
arpl
dec
dec
mov
jb
jmp
or
cmpsb
dec
mov
jns
adc
ja
loopne
cld
outsl
dec
inc
sbb
mov
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
