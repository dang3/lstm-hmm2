decb
xorb
add
add
pusha
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
add
push
push
pop
sub
mov
shl
lea
lods
ror
add
add
xor
add
test
jbe
pop
push
mov
sub
jle
pop
sbb
ja
jmp
mov
call
push
pop
loop
int
add
jno
add
add
add
add
decb
push
push
push
mov
push
subl
mov
push
push
mov
inc
mov
call
add
mov
sub
sub
mov
pop
mov
mov
lea
lea
mov
mov
xor
sbb
sbb
lea
xor
cmp
je
sub
sub
or
sbb
add
mov
pushl
sub
sub
pop
bswap
jmp
xor
push
xor
mov
nop
call
sub
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
push
mov
sub
push
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
or
adc
imul
jne
adc
enter
inc
push
cmpsl
lret
mov
std
push
test
test
lock
mov
xlat
add
shrb
leave
addr16
xor
pushf
cmp
xchg
es
inc
imul
nop
push
xchg
dec
cmp
fdivrl
sub
cmp
mov
std
add
stos
lcall
sahf
mov
das
cwtl
push
mov
and
jge
clc
inc
cmp
daa
push
js
pop
sub
sahf
imul
lret
mov
nop
sbb
jae
push
mov
xchg
fwait
test
jb
test
push
jb
insb
mov
inc
test
pop
les
rep
movsb
xlat
jg
inc
mov
mov
add
sbb
and
adc
xor
jb
mov
jmp
mov
inc
movsb
push
jns
lahf
outsb
and
fistps
adc
mov
jmp
inc
mov
xor
push
test
test
pusha
jg
lahf
ss
rclb
and
ljmp
jne
mov
mov
sub
jb
jb
loope
leave
lods
aaa
jae
and
push
add
jo
sbb
popa
push
cmp
loopne
out
les
stos
sub
in
insl
xor
mov
shlb
dec
rolb
clc
xchg
int3
xchg
mov
loope
sbb
shl
dec
aam
lret
adc
pusha
test
into
inc
xchg
xchg
stc
cmpsb
test
inc
test
test
loopne
jge
mov
cmpsl
or
and
and
cs
xor
inc
enter
outsb
mov
lods
xchg
mov
es
dec
add
and
ja
xchg
js
mov
daa
jno
jle
fstl
add
cmc
fsubl
inc
sub
mov
push
add
lods
adc
jae
in
imul
pop
jmp
push
enter
add
fwait
pop
sbb
cmp
xor
into
mov
fidivl
imul
into
xchg
push
mov
xor
inc
fisttpll
xchg
sbb
adc
or
jne
je
jne
pop
mov
cmp
out
pop
hlt
add
out
bound
scas
mov
addl
stos
dec
fcoms
xor
aad
leave
lea
adc
mov
test
out
into
mov
jnp
jne
test
push
out
stc
xchg
lea
and
add
sbb
add
mov
call
sahf
cmp
xchg
pop
dec
xor
cmp
das
rol
dec
mov
mov
sub
cmc
clts
xchg
jns
jb
testb
or
ret
pusha
or
addr16
cmp
out
dec
sbb
pop
cmc
xchg
loop
je
stc
adc
in
hlt
loop
ja
roll
pop
std
popa
insl
cli
dec
imul
xlat
dec
dec
mov
cmp
cmc
mov
outsl
adcl
test
adc
cli
inc
add
dec
mov
cmp
xchg
cmp
push
les
leave
test
nop
lret
cmp
mov
js
fimull
mov
push
xchg
mov
pop
push
cmp
addb
nop
aad
jbe
mov
jl
sbb
lahf
jo
cmp
repz
test
cmp
adc
cmp
mov
arpl
inc
mov
pop
xor
es
fsubrs
test
lods
push
sub
dec
mov
aad
ss
lods
inc
rolb
add
mov
pop
nop
scas
mov
xchg
mov
subb
jge
gs
mov
ds
jle
cs
jp
and
sti
adc
add
xchg
ficoms
lds
cmp
leave
fldt
push
sarl
test
mov
rol
daa
jbe
ljmp
repz
jns
sub
pushf
jb
nop
push
cmc
popa
ja
dec
inc
cmp
sub
in
test
adc
adc
dec
inc
xorb
pop
fwait
sahf
mov
mov
rorb
arpl
pop
sbb
push
rorl
and
arpl
adc
or
loope
xor
mov
inc
dec
mov
pop
js
mov
adc
ret
cmp
repz
mov
xor
cmp
dec
mov
and
ret
pusha
fidivs
pop
add
repz
or
repnz
test
push
cmp
jle
or
orl
or
gs
les
push
test
adc
cli
xor
ficompl
fs
or
loopne
add
xchg
dec
sbb
nop
mov
rolb
adc
arpl
dec
rcl
and
xor
je
aaa
stc
xor
jl
push
push
out
lahf
stc
adc
fs
jl
dec
push
ficompl
pop
ss
push
jmp
xchg
frstpm(287
sarb
sub
jnp
orl
add
cld
in
dec
push
enter
cmp
mov
dec
pop
cmp
sbb
cmpsb
xchg
imul
push
pop
in
xchg
lret
sbb
xchg
scas
cmc
or
sub
scas
pop
cmpsb
push
sub
cmp
pop
sahf
mov
mov
imul
pushf
test
loop
bound
mov
lods
sti
arpl
dec
mov
mov
sub
lods
xlat
filds
loopne
adc
sarl
mov
lahf
lcall
mov
add
addr16
out
popa
fidivl
xchg
mov
iret
add
xor
iret
xor
into
add
pushf
into
aaa
lret
cltd
arpl
add
mov
rolb
fsubr
lret
inc
shlb
cmpl
xchg
jg
imul
mov
jns
sti
sarb
sti
mov
jbe
rclb
lock
jecxz
or
je
shlb
mov
scas
and
or
adc
arpl
out
fnstenv
push
andl
lret
xchg
cltd
ss
cmp
sub
adc
int
icebp
xor
push
adc
iret
jmp
xor
ds
xor
lahf
daa
cmp
fdivs
shrl
add
fists
mov
adc
in
push
ljmp
add
pop
popa
sub
.byte
.byte
