and
dec
mov
xchg
bound
cltd
rolb
ret
shrl
sub
lret
lock
loopne
xor
xor
sub
xchg
mov
jg
sti
push
es
adcl
inc
sub
sarl
js
pcmpgtb
lods
dec
and
sub
cmp
sub
ret
popf
out
inc
xchg
ljmp
jae
shl
cmp
inc
sub
aam
pop
jne
outsb
xchg
adc
mov
mulb
daa
arpl
cmc
jnp
addr16
inc
jae
push
and
sub
and
imul
cltd
call
insb
push
movsb
js
push
aaa
stos
out
in
xchg
cmp
ja
adc
xor
stos
call
push
add
push
mov
xchg
lods
loope
aas
inc
push
fnsave
es
cwtl
inc
imul
pop
pop
or
xchg
aas
fisttps
js
dec
jge
add
add
add
add
add
add
add
jno
add
jno
add
push
add
add
add
add
jno
add
or
xlat
jmp
cmp
out
mov
pop
or
or
sti
scas
stc
jge
jnp
xchg
cli
jns
dec
mov
call
fstpt
adcb
insl
dec
mov
sahf
lea
and
inc
int
mov
clc
push
imul
out
mov
arpl
push
sahf
cmpsl
mov
das
sar
sbb
insb
sti
outsb
or
xor
or
pop
xlat
or
scas
in
bound
mov
bound
sahf
mov
sahf
jno
jb
pop
sbb
mov
ret
out
and
cmpsb
xor
pop
cmpsl
je
jnp
adc
mov
and
pop
xchg
jmp
ja
mov
cmp
pop
mov
loope
cld
sbb
cmp
sti
std
dec
aad
out
mov
lret
adc
fcompl
sub
or
push
cmp
outsb
rcrl
es
icebp
xor
out
mov
fisttps
and
dec
adc
rcll
cmc
lret
add
out
mov
jno
inc
add
or
cmp
cmp
inc
icebp
mov
cmp
mov
mov
mov
cli
pop
popf
addb
mov
jns
sbbb
sub
js
imul
out
movsb
jp
repnz
loope
lock
in
cmp
inc
cmp
and
mov
cltd
fs
pop
and
cmpsl
daa
sub
icebp
push
stos
fbstp
hlt
test
add
jno
jo
leave
mov
arpl
cmp
addr16
dec
push
mov
or
mov
or
das
pop
icebp
cmpsl
fcomp
inc
movsl
ret
js
fcomip
cmp
aaa
fwait
fwait
sbb
and
into
pop
lret
sub
push
jmp
out
scas
inc
insl
xchg
dec
pop
inc
adc
stos
add
das
mov
add
sub
testb
fcoml
push
lods
out
pop
push
cmc
adc
pop
pop
insl
out
scas
jne
loope
sub
xor
sbb
sti
ljmp
sbb
repz
lret
jl
mov
adc
cmpsl
mov
add
in
sbb
sbb
mov
inc
adc
je
cmp
push
adc
bound
dec
stc
loop
ss
insb
add
fsubrp
sub
inc
out
lcall
sub
sbb
mov
test
loopne
lret
nop
sub
inc
jae
inc
cmpsl
repnz
in
push
inc
push
dec
sub
push
sti
dec
fs
ret
and
mov
shrb
sub
std
sub
mov
int3
testb
lret
pop
gs
aaa
sbb
or
fists
or
mov
movsl
and
ret
test
iret
mov
scas
jecxz
cmp
imul
les
push
mov
pop
out
loopne
sub
pop
jbe
jecxz
push
hlt
iret
jno
xor
sbb
mov
mov
inc
mov
in
in
fdivrl
fldl
pop
adc
xchg
push
sbb
call
adc
push
addr16
ret
rorl
pusha
fs
test
jl
popf
dec
lcall
jno
push
mov
shlb
aad
lret
or
dec
aam
sub
push
stos
lcall
into
mov
pop
push
nop
push
ret
sub
xchg
and
outsb
pop
imul
lds
adc
fs
mov
aad
xchg
mov
mov
sub
cltd
mov
stos
loopne
or
pop
out
lret
push
fsts
push
and
lods
gs
jne
negl
xchg
js
and
nop
jno
push
xchg
lret
and
lcall
jge
rol
or
push
jge
push
cli
pop
inc
out
fs
dec
test
xchg
pop
pop
sub
push
out
sbb
cmp
aas
push
xor
and
inc
icebp
cmp
ljmp
dec
push
jae
js
aaa
xor
pop
shll
rolb
in
pop
call
jp
idiv
nop
add
or
mov
lea
xor
test
cmp
in
mov
pusha
inc
loopne
inc
repz
add
idiv
mov
mov
sti
push
pusha
xor
xchg
ja
nop
rcll
push
mov
clc
xor
imull
data16
fstl
mov
fildl
dec
or
mov
fmul
mov
sub
cmp
dec
push
hlt
mul
in
cmp
ljmp
pop
jbe
ja
xchg
loopne
jo
arpl
push
or
pop
push
fdivrs
pop
xor
pop
dec
clc
push
or
push
ds
cld
or
sti
xlat
cmp
inc
sahf
mov
std
cltd
xor
imull
gs
lret
cmc
dec
into
loope
daa
out
sub
adc
movsb
cld
mov
enter
jl
fcomps
push
loop
aad
shlb
cmpsb
or
sub
aas
jno
jns
jmp
rcll
divb
call
sub
cli
jne
test
sub
iret
lea
mov
shr
rcll
aas
cld
add
mov
cwtl
mov
sbb
cmp
sub
loope
or
mov
aas
cmp
icebp
xrelease
pop
jae
lcall
clc
push
mov
sub
mov
add
sub
setbe
in
ret
jge
mov
aad
inc
xor
adc
fstl
add
cs
adc
mov
cld
inc
inc
mov
sbb
jae
mov
insb
stos
out
cltd
xchg
xchg
shll
cld
stc
cltd
dec
adc
scas
or
xor
iret
push
jge
loop
rcl
faddl
cs
xor
pop
mov
das
inc
stos
call
mov
mov
xchg
scas
iret
dec
aas
cli
push
or
inc
shrb
or
aam
jl
mov
adc
dec
mov
xchg
pop
in
iret
fdivl
xchg
outsb
cs
adcl
add
mov
shrb
das
mov
out
sbb
inc
pop
mov
push
add
xchg
insl
inc
pop
scas
mov
pop
add
ja
addr16
mov
xor
push
out
pop
sub
or
cltd
sbb
mov
lret
movhps
arpl
fdivp
or
mov
lods
xchg
adc
and
push
inc
jp
testb
inc
pusha
and
pop
inc
mov
sub
aaa
xchg
imul
into
lret
mov
int3
push
xchg
test
sbb
pop
out
pusha
xor
loop
jmp
ss
mov
or
and
insb
sbb
cmpsb
cmp
xor
push
add
add
xor
inc
sbb
push
jo
fs
stc
rclb
arpl
imulb
pop
fdivl
notl
jge
shll
in
lea
pushf
dec
mov
push
adc
add
aaa
mov
fidivl
jbe
sbb
sbb
shrl
sbb
ljmp
iret
xor
and
mov
in
inc
xchg
rcrl
and
xor
outsb
lret
add
pcmpgtb
movsl
sti
sub
mov
lret
insb
mov
insb
mov
test
insb
sub
fldl
lods
add
pusha
outsl
cltd
add
or
popf
int
xchg
push
xor
push
fisttps
mov
test
and
sub
ljmp
sub
jecxz
stc
adc
mov
xchg
xor
fdivrs
in
mov
adc
push
mov
jne
in
cltd
pop
negb
dec
shrl
loope
xor
out
outsl
cli
loopne
xor
lahf
scas
out
cmpsb
mov
inc
pushl
pusha
adc
into
dec
jl
jmp
inc
in
xor
jmp
cltd
lods
es
jae
adc
rorl
lret
jmp
into
mov
aam
sub
mov
jo
inc
cmpsl
or
andl
loopne
repnz
vmread
cmp
xchg
movsl
enter
in
test
dec
add
jle
pop
or
nop
pushf
or
js
mov
and
xor
shrl
cmovg
das
cmp
stos
or
xor
insb
lret
push
mov
in
mov
xor
mov
les
pop
fs
aaa
add
mov
loopne
and
cwtl
adcw
inc
fsts
or
iret
cmp
adc
aas
inc
arpl
lret
negl
push
xchg
xchg
mov
push
int3
cld
pop
out
pop
xchg
add
xor
lret
jno
mov
cld
rorb
sbb
mov
stos
outsl
inc
adc
xchg
mov
mov
pusha
lret
sbb
inc
xchg
jo
inc
ja
in
lret
push
sti
sub
mov
pop
pop
mov
push
jae
inc
xor
into
cs
jbe
int3
faddl
idivl
int3
push
hlt
push
jnp
mov
adc
shl
mov
push
rorl
add
sbbl
pushf
addl
sub
rclb
scas
xlat
pop
bound
idivb
out
cwtl
das
xchg
in
fcomip
das
movsb
or
lds
adc
adc
addr16
mul
sarl
test
icebp
repnz
xor
cmpsb
lahf
pop
xchg
mov
shl
dec
xor
adc
aas
pusha
outsl
jp
jge
daa
clc
ljmp
add
adc
loopne
cltd
sub
pop
ljmp
pop
push
das
les
inc
insl
sahf
je
sub
add
inc
push
mov
dec
dec
inc
pop
pop
lds
sbb
aaa
push
cmp
push
push
push
xchg
jae
pop
out
push
push
cmc
sbb
dec
mov
stos
cmp
sub
add
into
repz
xchg
cltd
add
or
push
add
ljmp
stos
test
or
push
pop
mov
data16
pop
movsl
and
int
loope
or
loope
add
push
jnp
nop
ljmp
inc
xrelease
iret
shlb
mov
imul
jecxz
jle
add
xchg
mov
and
sbb
xor
jl
and
cltd
adc
loopne
pop
mov
out
sahf
add
stos
int
je
jmp
addr16
out
cmp
mov
mov
lahf
lret
and
sahf
aad
xor
inc
repnz
jbe
push
mov
divb
out
fadds
sahf
outsl
sub
jnp
bswap
cmpsb
int3
or
lahf
loopne
push
adc
mov
cmp
daa
mov
jmp
das
add
add
add
xor
fsubrs
sbb
outsb
mov
inc
aas
test
pop
xchg
lret
popf
sub
mov
sarl
lods
push
in
and
ljmp
insl
adc
mov
sub
cmpsl
sbb
pop
inc
inc
xor
rorb
push
stos
cmpsl
enter
das
cmp
fwait
out
push
outsb
decl
xor
das
xor
cmp
inc
popf
pusha
stc
cmpb
push
lret
imul
orb
decb
xor
arpl
movsb
jno
jb
push
and
cwtl
ja
testb
cmpsb
push
cmpsb
jecxz
sbb
ret
mov
dec
push
xor
mov
push
dec
idivb
das
jg
in
xor
je
jbe
jecxz
mov
add
pop
out
mov
add
cli
inc
das
data16
sti
xchg
lret
mov
mov
movsl
cwtl
inc
mov
mov
jp
ss
test
and
add
and
in
es
push
cmpsb
testl
xor
ret
sbb
mov
mov
or
outsb
push
lea
in
flds
mov
cmp
push
and
mov
add
loope
ds
inc
cmp
mov
mov
adc
inc
xor
jbe
mov
mov
mov
fsubrl
push
aad
les
mov
push
add
les
add
daa
xor
cmp
xchg
adc
inc
xchg
scas
shl
push
imul
jns
pop
dec
pop
and
xor
xlat
push
jnp
xchg
sub
imul
leave
sti
fildl
cwtl
pop
sbb
jle
mov
add
dec
in
addr16
push
and
adc
sub
notb
xor
push
movb
call
pushf
pusha
lea
jae
pusha
push
movb
lea
jne
jmp
in
insb
mov
push
cwtl
out
pushf
jmp
mov
push
jae
mov
xchg
lret
cmp
out
sbb
xor
ret
imul
clc
cmp
cltd
cmp
in
push
jns
enter
cltd
cmp
dec
jge
addr16
jecxz
insb
cmp
xor
cmpsl
jmp
jmp
dec
ja
and
cmp
sbb
jmp
or
mov
jbe
fldl
sbb
cli
jnp,pt
mov
pop
mov
std
lret
idivb
mov
push
iret
cmp
pop
sub
jno
inc
jnp
fs
stos
daa
xor
and
lcall
fsubrs
leave
sbb
rol
mov
out
mov
rorb
xor
or
jo
and
pop
nop
je
push
inc
jno
jbe
mulb
adc
push
dec
adc
cli
sbb
out
mov
jg
xor
scas
push
out
mov
lahf
xchg
aam
push
ds
cmp
adc
lea
notb
aam
cmpb
jle
mov
mov
or
call
jno
push
rolb
out
ror
mov
mov
shrb
rclb
je
mov
pop
or
jmp
sub
cmc
pushl
cmp
pushl
lea
ja
clc
imul
test
cmp
add
push
movw
lea
jmp
js
fnstenv
push
sbb
cld
mov
jmp
xchg
out
and
lea
test
inc
test
xlat
test
pop
lret
jle
lcall
lods
lds
and
iret
sbb
pop
movsl
inc
stos
and
decl
jae
clc
loope
mov
movsb
xchg
int
adcl
push
lret
pop
and
xchg
aad
dec
or
ss
addr16
idivl
inc
lcall
test
add
add
mov
scas
jne
push
pop
mov
cmp
insb
pop
pop
or
push
sahf
addb
xchg
xor
gs
xor
fstl
mov
fidivs
loop
xchg
ss
push
xor
pop
jmp
ud1
sti
lods
add
call
movl
mov
lea
jmp
rep
call
pop
not
mov
lea
jmp
cs
jbe
push
sub
inc
inc
cmp
out
sahf
xlat
or
xchg
aad
mov
push
mov
mov
lcall
out
rolb
addl
or
push
in
cmp
sub
jo
mov
pop
and
movlps
fmull
xchg
mov
jo
mov
xor
jnp
xor
xor
inc
cmp
mov
sub
cwtl
jmp
leave
mov
ffreep
clc
gs
incl
mov
enter
jbe
push
xchg
add
push
add
fs
in
cmpsl
push
jecxz
in
lea
andl
xchg
mov
mov
stos
xor
dec
clc
lds
jnp
outsb
dec
lret
jno
repnz
fwait
jge
stc
push
sub
mov
decl
push
sub
es
outsl
aaa
testb
icebp
mov
aaa
jle
cmp
cmp
ret
imul
lods
pop
jecxz
add
push
xchg
scas
shrl
cmpsl
faddp
jge
mov
fsubp
mov
es
add
stos
xchg
test
push
bt
shl
shld
movsbw
mov
test
sub
call
push
movl
movb
lea
jae
call
call
push
mov
sub
or
dec
cltd
in
pop
rdtsc
testl
je
lret
shrl
ret
or
and
loop
jecxz
in
cmp
cs
decl
icebp
sub
data16
xor
mov
iret
int
cs
jp
inc
ret
fucomp
push
jp
xor
sub
inc
cmpb
mov
jbe
test
jnp
sti
and
mov
fisubrl
mov
ds
inc
cmp
sarl
ss
xchg
orl
sbb
mov
iret
ds
dec
pop
into
sbb
ret
adc
jge
push
pop
inc
sbbl
into
shrb
mov
dec
repz
pop
cs
push
mov
dec
push
rcrl
leave
xchg
ffree
cs
lcall
mov
xchg
cld
out
and
int3
dec
loop
jl
xlat
dec
pop
add
inc
gs
outsl
fs
gs
imul
add
movl
adc
add
inc
and
ret
pusha
movb
pushf
movb
lea
call
push
pusha
cmc
cmp
push
lea
jae
test
push
cmp
pushf
lea
jae
push
stc
cmp
call
mov
mov
dec
clc
shl
pushf
setbe
jmp
movsbw
push
mov
jmp
sbb
push
push
scas
pop
sub
mov
fsubr
sti
lods
incl
adc
imul
outsl
scas
lret
leave
mov
mov
shl
adc
dec
aam
and
insl
inc
sbb
cmp
les
leave
stos
fidivrs
mov
sub
push
testl
fcmovu
call
aaa
pushf
pusha
mov
push
lea
jmp
cmp
jno
push
mov
jno
xor
inc
jne
mov
push
repz
adc
cwtl
into
cld
stos
fsubrs
shrb
sbb
movsw
ds
sbb
xor
lods
bound
pop
pop
ljmp
pop
sbb
mov
mov
sbb
ljmp
push
imul
add
pusha
hlt
and
xchg
add
mov
mov
call
mov
cwtl
movl
pop
bswap
call
movzbw
jmp
mov
push
rcll
shlb
pop
and
je
scas
xor
cmp
pop
in
cli
rcr
jo
dec
or
jmp
rorl
test
rolb
loopne
sub
lods
adc
outsl
push
dec
xchg
call
and
xor
arpl
pushf
pusha
lods
push
call
clc
cmp
movsbw
movw
bswap
movsbw
lea
lahf
movzbw
setb
mov
call
movb
pusha
pushf
adc
mov
movb
pushf
pushl
lea
jmp
pusha
jmp
stos
xchg
pop
jae
push
mov
or
pushf
mov
mov
clc
movsl
dec
imul
dec
inc
xchg
aam
jecxz
ret
lods
lret
icebp
adc
stos
push
adc
adc
xlat
cmpsb
push
loop
fsubrp
mov
add
cs
sbb
adc
dec
mov
inc
mov
shll
loope
add
mov
xchg
xlat
imul
aam
push
fwait
in
adc
push
pop
xchg
test
pusha
mov
push
and
iret
mov
shrb
dec
xor
imul
and
ret
pop
outsb
sahf
pop
xchg
ret
or
pop
sub
adc
push
add
xchg
sbb
cmpsb
fistl
add
sub
push
frstor
lcall
int
les
loop
adc
pop
rcll
dec
fstpl
je
ret
fsubrl
repnz
pop
cmpl
fwait
inc
fbld
sbb
cmp
arpl
imul
or
outsl
pop
sub
mov
dec
jge
jbe
outsb
dec
sbb
mov
jg
sarl
or
adc
push
add
pop
fs
mov
xchg
divl
out
fists
mov
cli
push
in
lahf
push
add
sti
lea
test
push
leave
mov
xchg
adc
jmp
nop
enter
int
in
jl
push
stc
dec
pop
push
mov
sub
rcll
sub
dec
clc
or
aaa
sub
mov
add
jb
call
shl
aam
adcl
xchg
ja
mov
adc
nop
lods
scas
xchg
xchg
mov
fstps
mov
push
ljmp
jae
xlat
pusha
stc
jle
cmpsl
loop
xchg
adcl
sbb
xor
pusha
and
sub
push
das
adc
and
cmpb
sub
enter
in
repnz
jno
push
add
cmp
push
popa
jbe
inc
inc
add
cmc
cmp
push
call
stc
call
pop
outsl
sbb
sbb
xchg
push
leave
or
pop
push
std
mov
lahf
ret
cld
dec
lock
cmp
iret
div
jo
or
stos
adc
inc
mov
and
lods
ret
dec
jae
orl
push
adc
aaa
pop
or
hlt
pop
cmpsl
mov
jne
mov
inc
jge
push
xchg
inc
xchg
inc
pop
es
out
mov
sbb
mov
inc
sbb
fstps
adc
sbb
movl
push
mov
stc
dec
les
and
push
or
mov
mov
dec
jbe
pop
jnp
pop
dec
incb
mov
mov
cmp
lea
pop
dec
sbb
nop
push
insb
xor
daa
gs
pop
sbb
push
cs
ret
pop
or
add
push
cld
mov
aam
xchg
sarb
shrl
in
out
mov
js
inc
stc
ss
adc
mov
popa
ficoml
pop
mov
add
jno
popf
xlat
lods
fldenv
daa
xchg
add
or
sub
mov
dec
push
mov
mov
dec
cld
and
imul
cmc
out
les
and
xor
lods
sub
adc
mov
xchg
addl
xor
cmp
les
xor
daa
ffree
jle
sub
pop
sub
movsb
jg
repz
out
cs
jmp
jmp
movsl
inc
movsb
pop
jns
cltd
fadd
mov
add
cmp
mov
xor
mov
push
inc
mov
lcall
pushf
outsb
sbb
or
scas
mov
data16
mov
inc
sbb
adc
add
arpl
sub
inc
mov
lcall
sub
lock
add
fwait
cmpsb
cmc
sub
xchg
sti
and
sub
popf
daa
jge
pop
cmpl
arpl
push
sbb
testl
repz
push
and
xorl
push
adc
push
mov
in
sahf
inc
pop
popa
mov
fldcw
jg
cli
pusha
rol
mov
jb
roll
pushf
inc
addb
or
lea
js
push
mov
xchg
jmp
dec
or
cmp
sahf
jo
cmp
sbb
sbb
xchg
mov
test
ret
cli
aaa
js
push
es
xor
out
xchg
test
sahf
pushf
int
icebp
and
xor
cld
or
in
repz
cmp
fsubrp
mov
sti
mov
mov
pop
and
outsl
adc
xor
or
or
in
hlt
cmp
push
inc
inc
push
call
mov
add
ja
inc
sbb
jbe
xchg
outsl
inc
push
mov
or
dec
mull
xchg
pop
sbb
add
scas
stos
aad
mov
jg
clc
and
inc
ss
inc
push
lds
jbe
mov
mov
jg
fsub
pop
cmpl
xchg
and
push
js
push
push
lds
mov
hlt
loope
in
xchg
je
xchg
or
shrl
loope
push
dec
mov
out
mov
iret
inc
and
rcr
xor
sbb
push
xchg
push
mov
shlb
push
xchg
fcoms
jbe
adc
insb
jb
xor
call
mov
adc
sbb
add
decb
dec
lcall
push
sub
push
mov
or
stos
push
fmull
push
popf
pop
loopne
imul
push
lods
scas
pop
out
fwait
jecxz
mov
mov
push
js
fldcw
ss
es
inc
mov
mov
dec
jne
jb
sbb
pop
pushw
jb
pop
les
add
push
jns
movsl
xor
xor
lock
mull
xor
int
stc
xchg
es
dec
jg
cmp
dec
mov
stos
dec
fucom
sbb
ja
out
sbb
add
out
shll
ss
xchg
fwait
or
jo
inc
icebp
jle
mov
push
mov
in
sbb
into
jg
shrl
mov
adc
or
ljmp
mov
pop
pop
xchg
jp
push
inc
mov
push
inc
adc
inc
push
fs
adcb
rcl
xchg
sti
or
int
and
adc
inc
fimull
rol
add
rolb
pop
adc
call
sbb
in
xor
sbb
sbb
mov
push
jnp
shll
jg
into
int
call
cmp
sbb
pop
add
es
pop
int3
lds
adc
mov
pop
jp
push
repz
out
es
repz
pop
inc
fiadds
push
fldl
ja
insb
jae
sub
and
cmp
loope
mov
mov
and
stos
jno
aaa
outsl
mov
push
stos
lret
fsubl
sub
or
aad
repnz
int3
add
push
cmc
in
daa
push
test
add
add
pusha
repnz
movsl
stc
scas
lahf
inc
pop
sub
fs
push
jae
sbb
jmp
jne
adc
lods
pusha
mov
xchg
fstpt
idivl
test
jo
sbb
iret
repnz
addr16
fwait
fldt
jmp
call
sti
in
fwait
jge
mov
stc
leave
shrl
sarb
cli
inc
pop
out
jg
outsb
leave
sti
pop
and
xchg
fsts
inc
dec
dec
xor
cs
insb
add
iret
movzbw
push
lea
movw
bswap
mov
mov
mov
call
inc
stc
bt
sub
jle
cmp
shr
pushf
lea
je
jno
pusha
adc
pushf
pusha
lea
jmp
mov
push
push
daa
mulb
mov
push
inc
xor
and
loopne
push
xchg
sub
in
enter
xlat
and
outsb
gs
pop
sti
cmp
add
gs
add
in
xor
xor
xchg
call
push
inc
stc
int
xlat
xchg
imul
ja
inc
loop
arpl
mov
push
push
push
xor
out
repz
jecxz
testl
mov
jp
inc
pop
call
les
loopne
addr16
cmp
cmp
dec
adc
mov
lea
not
not
push
lods
not
inc
inc
not
inc
ror
neg
shl
xor
pushf
call
add
dec
outsl
arpl
inc
jb
add
ss
add
sbb
jmp
in
ds
outsl
sbb
pop
lods
imul
lds
test
mov
roll
inc
jbe
lea
movsl
xor
stc
insb
push
lahf
mov
out
mull
add
sbb
out
or
scas
xchg
sub
enter
xor
test
mov
insl
sbb
cmpsl
jle
lcall
xor
test
add
repnz
js
shrl
inc
jle
mov
push
pop
dec
fldcw
scas
pop
das
cmp
sbb
mov
aas
xchg
push
push
jns
add
xchg
movsl
hlt
mov
fidivl
xor
into
sub
add
fstps
loope
loopne
movsl
mov
repz
xor
dec
adc
rorl
es
and
and
jecxz
ja
push
loop
scas
cwtl
sub
push
fmull
aam
push
in
lock
jge,pn
lods
or
rcr
push
mov
sub
sar
xchg
pusha
mov
sbb
add
rcr
bsf
bswap
adc
shr
bts
jmp
lea
jne
pushf
jmp
str
pushf
pushf
movl
call
add
hlt
data16
xor
inc
jb
repnz
ss
scas
xchg
push
fs
sbb
pop
sub
xlat
xchg
push
and
pop
xchg
addr16
stos
add
js
add
and
mov
xorl
push
mov
push
inc
aas
lea
xchg
sub
daa
ficompl
cmpsl
mov
loope
ss
dec
fwait
out
movsl
aas
add
cmp
add
sbb
push
and
jmp
call
hlt
leave
add
add
add
jl
mov
sbb
xchg
mov
stc
mov
dec
fcoml
xchg
push
gs
jae
push
and
lret
repnz
inc
push
push
sub
mov
add
jge
jge
data16
daa
push
ja
mov
fbld
pop
pop
mov
sbb
add
lock
and
lods
sub
js
pop
push
mov
dec
mov
bndldx
int
fs
and
cmpsb
les
sub
pop
and
jb
dec
adc
fldenv
out
push
testw
cltd
pop
addr16
daa
pop
mov
lods
ja
xor
stc
mov
sbb
cmp
dec
in
cmp
pop
fiaddl
jne
sbbb
mov
repnz
aad
adc
xchg
aam
insl
add
inc
sti
out
sbb
call
dec
pop
in
cmp
or
push
insl
mov
loop
les
or
and
xchg
cltd
bound
mov
inc
dec
cmp
mov
fistps
aaa
movsb
loop
fadds
pop
stos
pop
data16
or
jle
out
sub
out
xchg
out
into
lret
cmp
and
and
hlt
aam
pop
sub
jne
push
std
mov
push
inc
pushf
inc
ffreep
pushf
inc
cmp
xchg
in
mov
adc
pusha
pusha
pushf
lea
jae
pushf
lea
jne
call
roll
test
xor
mul
mov
xchg
imul
jle
fdivrs
or
hlt
sub
xchg
fisubl
icebp
push
mov
pop
jge
sub
fstpl
xchg
das
ds
scas
xlat
test
movsl
adc
pop
cli
cmp
bound
in
rclb
and
filds
sbb
popa
xchg
pop
outsb
adc
sbb
cmpsl
loop
mov
in
mov
sahf
scas
out
and
push
xor
adc
xor
daa
xor
sbb
mov
push
cmp
jbe
test
lea
pop
jb
mov
pop
dec
sbb
lcall
inc
jle
popf
into
pop
mov
jmp
add
or
popa
add
jg
sbb
cld
dec
fmull
js
sbb
jnp
in
mov
call
pop
xor
jnp
shr
xchg
push
lods
addb
repz
push
stc
mov
xchg
cltd
leave
aad
popf
es
lahf
stc
push
adc
mov
test
jle
stc
loop
lock
sbb
scas
shrb
imull
mov
mov
dec
scas
iret
pop
add
popa
add
ja
lock
movsl
nop
and
mov
mov
xor
dec
ss
push
dec
mov
cmp
sbb
pop
xor
in
cmp
inc
mov
je
test
aaa
sbbb
pop
mov
lods
jp
pop
imul
mov
xchg
out
imul
cmp
and
movsb
jle
mov
inc
xor
dec
daa
repz
pop
lock
popa
sbb
sti
ret
ss
pop
and
mov
sub
pop
sbb
bound
push
ficoms
nop
and
push
mov
mov
repz
mov
lret
negl
jp
inc
dec
sbb
ficompl
lds
rorl
xchg
jno
lret
loop
sub
dec
enter
dec
sbb
or
nop
es
pop
mov
or
sub
outsl
arpl
sub
int
lock
push
ljmp
sahf
xchg
jo
int3
xchg
mov
sub
arpl
push
jmp
adc
adc
hlt
mov
lock
mov
movsl
jmp
gs
scas
repnz
notb
xchg
outsb
xchg
pop
sahf
cmpsl
and
sub
and
xchg
add
outsl
cmpsl
in
lock
cmc
mov
mov
and
and
lods
mov
roll
mov
adc
fisubrl
jbe
mov
pop
pop
sarl
ds
sti
mov
adc
mov
xor
adc
je
stos
clc
jecxz
ret
xchg
cli
jecxz
sub
jo
arpl
push
insl
mov
or
fisttpl
nop
call
pop
sbb
lea
addr16
rcrb
jnp
adc
jbe
sbb
aam
xor
jnp
mov
mov
cld
in
mov
adc
aam
jecxz
out
aas
jg
sub
imul
xor
xchg
nop
repz
lahf
bnd
test
out
and
orl
cmp
js
sbb
mov
push
mov
je
bswap
call
mov
bswap
pushf
mov
not
mov
jmp
rolb
push
lea
pushf
push
dec
mov
incb
lea
arpl
add
insl
adc
jne
sub
xchg
sub
sub
push
fsubrs
jecxz
cwtl
jmp
std
in
xchg
dec
xchg
xlat
push
out
dec
sti
xor
push
lods
aad
push
jno
xor
dec
xor
xchg
jl
mov
loope
ret
mul
roll
hlt
add
lahf
and
test
mov
pop
and
punpcklbw
test
pop
sbb
xor
xor
fs
je
ret
xchg
iret
lds
and
push
mov
outsb
push
or
inc
jne
pushf
pop
hlt
mov
sahf
pusha
jp
cltd
mov
sbb
bsf
call
lea
jno
push
cwtl
push
pop
pushl
setne
cwtl
pusha
mov
setge
movl
call
roll
cmp
xchg
mov
dec
cmp
mov
mov
shll
jne
xor
and
out
mov
push
out
jno
fmuls
mov
push
push
mov
test
arpl
pop
push
outsl
movsb
jo
push
fsubp
cmc
int
push
icebp
rcrl
stos
popf
mov
fsubs
std
bound
mov
frstor
jmp
mov
inc
shl
fsubr
fistpll
in
inc
data16
adc
fdivrs
in
xchg
hlt
rcr
cmp
and
sbb
lock
xchg
scas
jg
pop
test
mov
mov
jno
push
jecxz
lcall
and
lods
mov
mov
or
sub
jmp
movl
call
jo
imull
push
out
xor
push
lds
mov
xchg
push
sub
inc
repz
sub
test
loop
les
mov
push
rolb
mov
jge
loope
sbb
pop
rorb
sub
gs
cmp
int3
jne
ja
or
outsl
movsl
xor
jae
sbb
jecxz
bound
dec
jno
icebp
or
ss
sbb
dec
lds
mov
mov
add
repnz
jb
xchg
add
out
xorl
loop
movsb
loope
movswl
inc
cmp
stc
call
sahf
int3
pop
jge
sub
sbb
push
add
js
rcll
shl
mov
rcl
sbb
mov
add
xor
pusha
pushl
popl
mov
push
push
pushl
ret
adc
pushl
pushl
lea
jae
push
push
lea
jne
jmp
push
pushf
mov
jmp
pushl
lea
jne
movsbl
mov
push
pushl
push
lea
jmp
movl
movb
lea
jmp
daa
push
shrl
push
add
arpl
add
movsb
imulb
sub
sbb
push
decl
cltd
push
daa
cmc
mov
jno
adc
imul
test
mov
push
dec
stc
push
rcrl
adc
pusha
sbb
mov
push
das
adc
sbb
mov
pusha
pop
mov
inc
xchg
lods
cmp
lock
push
sbb
fstpt
xor
roll
movl
mov
lea
jmp
cmp
push
xorb
daa
push
push
mov
push
adc
lcall
inc
jle
push
shl
mov
mov
insb
jle
inc
sbb
cmp
js
or
call
ficoml
test
in
xchg
xor
inc
pop
leave
sbb
das
push
jp
hlt
cmp
pushf
xchg
lahf
loop
movsl
cmp
xchg
in
js
cli
lret
xchg
in
cld
cmp
add
mov
push
push
lea
jmp
pushf
push
call
mov
lea
ja
pushf
inc
inc
setne
inc
push
inc
jmp
pusha
pushf
lea
je
jmp
in
inc
imul
loop
and
cmpsb
pop
adc
mov
nop
int3
sbb
mov
push
jle
scas
inc
jl
rcll
push
ss
dec
pop
sahf
int3
stos
lcall
mov
pushw
test
and
push
mov
inc
jp
inc
shll
or
push
cmp
jecxz
outsl
aad
push
sub
das
mov
mov
in
push
dec
xchg
dec
push
call
and
shrb
push
add
mov
mov
xchg
inc
push
in
mov
inc
sub
jae
adc
jnp
jbe
dec
push
push
outsl
call
cmp
ljmp
xchg
xchg
xlat
aam
cmpl
cmpsb
xchg
clc
test
xor
xchg
mov
or
insl
mov
leave
into
hlt
mov
push
sti
and
lcall
push
dec
xor
out
add
mov
call
enter
dec
or
push
push
jnp
mov
imul
mov
hlt
outsb
add
fmull
adc
dec
sbb
and
xchg
sbb
inc
aaa
xchg
scas
in
cwtl
inc
xchg
mov
cmp
imul
iret
cmc
adc
pop
lock
jge
sub
inc
inc
mov
pop
mov
add
lea
dec
jbe
fucom
mov
add
shrb
fwait
in
and
xchg
data16
repz
mov
pop
push
clc
pushf
stc
mov
lea
mov
pusha
mov
lea
rcl
mov
pushf
cmc
jmp
movsl
in
push
push
stc
sub
test
sub
dec
dec
pop
sub
or
and
movsb
push
adc
enter
sbb
cmp
add
outsl
shll
aam
fiadds
mov
xor
mov
test
sub
movsb
add
or
test
mov
add
je
cmp
movsb
pop
xchg
push
movsb
add
scas
mov
jo
out
ljmp
imul
jg
mov
pop
push
dec
jecxz
sbb
fwait
sti
lret
pop
fcmovnb
test
mov
push
ljmp
repz
xlat
repnz
sbb
add
sub
sub
lret
aad
xchg
das
push
iret
cltd
push
cmp
mov
fsub
sub
add
imul
cmp
pop
mov
pop
add
aad
inc
inc
enter
xor
push
daa
mov
mov
fbld
fcoms
mov
sbb
fwait
or
hlt
mov
pop
clc
lods
scas
pop
imul
lret
push
clc
mov
cmp
fisubl
fs
cmp
fwait
ret
cmp
cmp
stos
stc
fistpl
mov
push
add
adc
xor
mov
cmc
or
shrl
inc
xchg
call
dec
scas
mov
les
pop
dec
sbb
mov
pusha
fists
mov
dec
aaa
rcl
aad
stos
push
mov
and
cmc
inc
jns
stos
jp
repnz
and
out
les
fwait
enter
pop
xor
popf
pushl
lea
ja
mov
inc
dec
inc
dec
shl
shr
add
xchg
pusha
mov
rcr
mov
add
cmp
jmp
call
and
aam
add
icebp
adc
push
addr16
mov
repnz
cmc
fs
xchg
lods
cltd
xchg
adc
or
xchg
inc
cs
fsubl
mov
testl
mov
push
rcl
movsl
cmpsb
or
xchg
jnp
jnp
mov
or
mov
outsb
imul
cmpsb
pop
push
aas
push
pop
and
inc
fildl
aas
loope
xchg
jl
aaa
cs
mov
pusha
lea
jmp
dec
and
push
add
pop
stos
fisubrl
int
push
pop
adc
lea
cwtl
in
xor
mov
lock
pop
roll
les
dec
push
lea
mov
sub
data16
ret
lahf
test
fiaddl
leave
sub
fwait
mov
mov
lret
jns
jns
lods
popf
cli
mov
fisubrs
mov
bound
jg
cli
dec
push
ret
pop
ficoml
push
aad
mov
rcrb
das
pop
lods
popf
cli
in
shr
pop
and
sub
dec
xor
cld
lea
sub
cwtl
ret
dec
lock
je
sti
push
or
vmovntdq
jb
pop
xor
xchg
pop
cmp
lock
mov
imul
pop
push
cmpb
push
mov
fwait
in
cmpb
dec
push
dec
jge
bound
stos
and
inc
test
mov
push
les
outsl
ss
enter
test
setbe
subb
mov
cmp
jmp
pusha
push
movw
lea
call
pusha
call
hlt
int
push
add
ret
xchg
out
add
nop
mov
ret
adc
xchg
jmp
sub
addr16
mov
stos
inc
out
jg
cmp
or
adc
push
ds
dec
sbb
mov
xchg
jmp
outsl
aam
cmp
or
cmpsl
jl
inc
hlt
mov
push
add
xor
adc
cmpl
out
or
bound
gs
push
xchg
dec
or
sub
cli
test
inc
pop
dec
shrl
xchg
scas
test
or
bound
push
inc
push
cmp
call
sub
ja
bt
test
jmp
add
push
add
sub
mov
insb
jp
fisttpll
rcrl
and
jmp
out
mov
test
daa
in
out
sub
push
cs
push
out
loopnew
lcall
xor
and
xor
mov
into
or
les
arpl
mov
imull
sahf
pmaxub
pop
daa
sbb
movsb
cltd
lret
push
jg
xor
cmpsb
add
notl
push
clc
push
inc
push
dec
or
xchg
iret
sahf
xlat
xchg
inc
pop
sbb
cmpsb
stos
mov
xchg
pusha
adc
mulb
out
push
push
mov
mov
jo
scas
mov
push
xchg
mov
sub
mov
insl
cmp
mov
or
repz
adc
adc
push
movsb
cmp
mov
ret
xor
aaa
sbb
or
and
push
inc
push
sti
dec
and
pop
or
mov
out
movsl
cld
gs
or
mov
aaa
daa
in
mov
mov
test
imul
das
cmp
jb
mov
lcall
inc
xchg
xchg
das
jno
inc
clc
lods
jmp
jne
push
nop
hlt
mov
or
xor
loopne
inc
aaa
xchg
loopne
jg
or
jecxz
mov
fisubrs
pop
ret
notb
push
sub
out
ret
clc
add
loopne
mull
hlt
cmp
push
jmp
cmp
lret
ljmp
insb
clc
leave
push
out
mov
jb
or
sub
bound
cmp
lcall
sbb
xchg
sbb
push
or
mov
mov
sub
hlt
push
cmp
pop
and
adc
mov
aaa
or
nop
cmp
xor
mov
mov
jne
xchg
mov
or
sbb
ret
sbb
icebp
js
push
lret
mov
add
mov
shlb
sub
sub
jmp
pop
sub
push
add
cmp
js
sti
test
pushf
lea
and
sub
movsb
ficoms
lock
mov
in
dec
jo
dec
adc
xchg
test
sahf
cmpb
fcomps
dec
dec
cmc
jnp
adc
sub
pop
push
add
loopne
mov
fcmove
pushf
mov
add
inc
pop
mov
pop
pop
pop
adc
and
cmp
xor
cwtl
adcb
sub
ja
nop
int
lret
pop
xchg
inc
jbe
popf
inc
push
add
push
gs
insl
gs
push
add
sbb
add
add
imul
pusha
call
not
jmp
lcall
int3
fsubrp
cli
or
test
scas
cmp
sub
mov
mov
ja
insl
xor
push
sub
sub
shlb
lds
push
add
lahf
lret
mov
cmpsb
push
mov
in
pop
or
and
lods
les
pop
dec
jae
inc
push
cmp
fsubr
stos
out
adc
dec
aad
out
cmp
sbb
xchg
and
repnz
push
jne
xchg
aam
xchg
sub
popa
pushf
loop
bound
push
add
adc
nop
add
gs
je
rolb
out
xchg
and
mov
xor
out
mov
add
cmp
popa
pop
dec
jle
add
bound
loope
inc
adc
push
gs
loopne
sbb
inc
adc
mov
adc
test
sbb
inc
push
sbb
pushf
xchg
cmpl
or
or
sub
lods
xor
int3
jne
jb
jno
std
mov
sub
sahf
sub
icebp
push
add
xor
adc
xor
add
inc
push
loope
or
lea
or
les
adc
push
aas
inc
xchg
cmpsl
inc
mov
mov
repz
cmpsl
inc
cmpsb
ss
imul
outsb
inc
stos
and
adc
adc
cmpl
lret
mov
cmp
lcall
adc
daa
jbe
mov
or
movb
movb
mov
lea
jne
rol
mov
cmc
stc
stc
jmp
lahf
lea
call
sub
sti
in
pop
push
mov
leave
pop
or
adc
aam
sahf
iret
lea
sbb
xchg
sarb
add
and
fiaddl
mov
pop
and
cmpsl
addl
inc
adc
nop
adc
mov
adc
loop
inc
cmp
mov
testb
mov
jno
jg
sar
cmp
fisttps
push
sbb
jg
inc
ljmp
push
stos
hlt
in
jge
or
or
or
call
pop
mov
sub
outsl
pop
jns
stos
aaa
mov
scas
aam
adc
inc
lock
lds
add
jecxz
fiadds
bound
mov
sbb
fsubrs
xor
stc
aam
imul
xchg
fidivl
scas
das
xor
out
aam
adc
or
mov
dec
push
scas
xor
into
mov
sti
test
roll
pop
add
loopne
and
mov
jb
xchg
cmpsl
mov
pop
add
insb
jo
add
pop
pop
out
jge
inc
cwtl
int3
mov
sbb
sbbl
fldl
movsb
test
or
rolb
ss
clc
movsb
repnz
inc
aas
out
dec
xor
scas
pop
sub
jecxz
jecxz
fucom
mov
scas
repnz
lahf
inc
dec
stc
mov
xor
mov
xor
ja
sbb
mov
ss
pop
add
jns
push
or
sbb
or
cmpsl
jle
ds
mov
mov
inc
sti
xchg
cmp
mov
fwait
addl
cs
and
stos
mov
call
cmc
adcl
add
adc
movsl
jecxz
sar
adc
adc
arpl
mov
mov
xor
cld
mov
pop
gs
add
in
mov
or
sbbl
and
and
and
aas
sahf
xlat
mov
stos
ljmp
push
in
xorb
and
movb
lcall
xor
std
sub
inc
je
mov
fiadds
mov
push
jo
cmp
loope
jge
mov
jo
ss
mov
imulb
inc
fucomp
sbb
aaa
jne
dec
or
sub
xchg
jo
outsl
push
out
push
pop
or
dec
push
scas
pop
into
jo
xchg
or
mov
add
or
sahf
mov
divps
push
fisttps
cwtl
lods
cld
or
jnp
clc
dec
mov
cmp
mov
jle
pop
inc
jg
lock
gs
imul
jg
jecxz
inc
jge
cmp
jmp
mov
dec
std
ds
cmp
mov
fisubs
stc
adc
push
push
mov
fucomi
ret
les
sbb
xlat
adc
push
mov
or
push
and
push
addr16
fmuls
sahf
sub
loopne
lods
mov
loopne
int
xlat
xchg
loopne
sub
cmp
cli
and
mov
mull
cmp
pop
and
cmp
dec
into
cwtl
loop
mov
pop
not
not
lea
movzwl
pushf
lea
movsbw
mov
jmp
xor
pop
add
ss
adc
mov
cmc
lods
aam
jge
mov
push
out
mov
jnp
add
push
out
scas
inc
push
ficoml
rcll
hlt
jge
je
xchg
inc
jns
and
insl
push
cmpsb
into
into
stos
test
sub
inc
mov
add
pushl
pop
dec
sbb
mov
adc
sub
rcr
mov
or
int
inc
add
ret
xchg
lods
call
cmpsl
lcall
push
lahf
mov
in
mov
clc
gs
mov
mov
jmp
jg
pop
add
leave
sbb
js
pop
sub
sub
fildll
arpl
mov
inc
jle
jecxz
jp
das
popa
mov
cld
mov
fcompl
pop
hlt
dec
inc
sbb
fildll
cmpsl
mov
mov
fildl
sub
imul
enter
cmpb
fimull
les
mov
fisttps
mov
outsl
fisttpll
ds
pop
scas
cmp
xchg
mov
shlb
lds
mov
scas
insb
xchg
into
pop
cmp
push
test
and
int
repz
mov
stc
push
mov
inc
pop
jno
mov
hlt
mov
cs
xchg
add
jge
leave
mov
adc
push
sarl
mov
jb
shrl
out
outsl
icebp
or
enter
jb
rorl
pop
adc
roll
bt
call
xchg
pushf
call
lea
jne
push
jmp
ret
pop
add
es
ja
aaa
inc
ja
push
out
loop
lds
bound
filds
jns
push
sbb
jno
push
scas
or
cwtl
sbb
push
pop
or
jmp
push
in
and
push
pop
int3
decb
daa
jno
in
outsb
cmp
adc
scas
push
or
pop
fisubrl
movsb
sbb
jmp
push
bswap
mov
pusha
mov
bswap
push
pushl
bswap
mov
pusha
pushl
ret
push
imul
fadds
jge
jp
jp
out
jnp
jge
xor
testl
gs
dec
push
inc
and
fsubr
pop
inc
pop
and
mov
jmp
adc
unpckhps
int3
push
or
sub
data16
adc
pop
pop
adcb
push
mov
xchg
mov
mov
cwtl
dec
je
stos
stos
pop
xchg
shll
adcb
push
in
xorl
xchg
rcrb
cmp
iret
lods
inc
sub
sub
mov
pop
dec
pop
roll
adc
addr16
cld
scas
cmp
popa
hlt
and
shll
push
iret
jno
ss
mov
push
int3
push
sub
inc
fs
daa
aaa
dec
ja
pop
add
js
sbb
fisttps
fwait
pop
xor
je
fscale
sub
jne
pop
inc
scas
push
dec
mov
dec
pop
and
dec
mov
cmpsb
sbb
cmp
or
rorb
dec
rsqrtps
inc
adc
clc
xor
mov
hlt
leave
lea
adc
cli
push
dec
jns
mov
int
stos
cli
inc
pop
daa
cli
inc
stc
cmpsl
cmp
push
test
out
mov
or
push
negb
lods
pop
scas
mov
sbb
xchg
out
mov
mov
les
xor
and
xor
mov
add
cmpsl
dec
cmpb
jle
fmull
mov
jb
xchg
mov
push
jmp
mov
xchg
mov
inc
loop
test
push
ss
xor
and
leave
test
aad
xor
dec
push
lret
pop
jecxz
mov
mov
testb
cmc
in
enter
sbb
and
call
pushf
lea
jne
bswap
mov
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
pop
std
std
test
xchg
popa
inc
mov
ret
jbe
pusha
mov
and
add
ss
leave
cld
lods
jge
mov
inc
movsb
and
aam
pop
les
ljmp
cmpsl
test
in
popf
cwtl
add
cltd
mov
push
jmp
cmpsl
hlt
lds
enter
mov
fiaddl
ja
or
inc
add
inc
adc
xor
arpl
mov
jge
push
mov
jl
mov
leave
add
xchg
stos
xchg
nop
xor
sbb
pop
pop
movsl
jnp
inc
popf
test
or
repz
push
xchg
aam
clc
jle
jg
daa
push
xchg
test
mov
cmpsl
fcompl
gs
aas
adcb
cli
addr16
inc
sub
cmpsb
pop
cmpsb
push
add
or
lret
mov
ss
cltd
push
and
dec
aaa
ljmp
add
and
cwtl
movsl
imulb
sub
cmc
bt
neg
clc
stc
mov
xor
pusha
push
pushf
jmp
or
popl
push
jnp
pop
mov
mov
cmp
pop
iret
xchg
sbb
lods
in
adcl
push
jle
enter
push
xchg
or
dec
sbb
inc
push
dec
inc
jp
dec
arpl
dec
test
add
std
or
nop
iret
or
inc
aas
inc
std
rolb
enter
outsl
xchg
mov
hlt
mov
hlt
cmpsl
or
mov
js
aas
test
fs
jne
push
lahf
mov
pusha
lea
jmp
inc
add
jo
neg
clc
bt
xor
pusha
pusha
pushf
inc
jmp
lret
repnz
inc
add
sbb
int3
cmp
jns
push
in
rcrb
mov
movsl
sub
pop
testl
mov
sbb
adc
mov
repnz
cmp
fsubl
sub
out
pop
or
add
clc
dec
mov
cmp
and
pusha
aam
pusha
and
pop
stos
std
cmp
imul
sbb
pushf
movsl
fsubl
cwtl
inc
fildl
mov
jg
and
mov
push
shlb
mov
repnz
inc
jno
rolb
pop
bound
jno
stos
repz
adc
pop
sub
stos
lret
xor
xchg
andps
fildl
scas
sub
test
das
adc
clc
adc
aam
mov
jne
test
shl
and
fs
inc
imul
ret
jmp
enter
je
push
push
cmpsb
inc
out
pop
nop
aad
fisubrs
push
lock
jp
pop
xchg
dec
sbb
stos
testb
push
pop
xchg
xchg
repnz
push
dec
jno
pusha
mov
xchg
bswap
xchg
mov
bswap
xchg
mov
pushf
pushl
movzbw
mov
mov
pushf
mov
call
xchg
test
inc
add
adcl
movsb
jb
adc
pop
jno
pop
add
inc
lds
aas
movb
dec
ficoms
cmp
mov
flds
lods
in
ret
and
or
mov
mov
ds
jp
loop
lret
pushf
ljmp
sbb
pop
add
cli
add
out
iret
jne
and
ss
fsts
add
xor
jecxz
cmpsl
xor
faddl
test
ljmp
xchg
jo
xor
mov
jae
test
inc
repnz
jns
inc
out
arpl
cmp
imul
cmp
xchg
call
cltd
nop
in
jp
pop
jmp
aaa
popa
cmp
lahf
cmp
out
test
arpl
pop
leave
stos
popa
test
outsl
sub
loope
add
fwait
or
ljmp
hlt
stos
shr
rolb
out
add
call
call
test
stc
repnz
call
mov
push
daa
lret
sbb
je
sahf
xlat
push
jg
mov
rorb
out
and
pusha
push
inc
mul
cmp
testb
mov
mov
xchg
or
push
in
add
in
mov
jl
pop
insl
pop
cmpsl
xor
scas
test
pop
and
lcall
jl
cmp
std
jge
mov
or
xor
lds
cwtl
insb
das
dec
shlb
cmpb
stc
pop
fisubl
imul
mov
inc
add
mov
mul
jae
nop
inc
xlat
xorl
push
fildll
scas
xchg
and
repnz
movsb
cmc
outsb
inc
push
cmp
push
sbb
aas
out
out
pop
insb
xchg
xlat
imull
xlat
inc
mov
stos
movsl
xchg
out
xor
cmp
add
mov
ss
dec
fiadds
sbb
lea
jno
movzwl
movzbw
bswap
pushf
pop
lea
push
not
not
lea
mov
lea
jl
push
pusha
lea
call
jmp
call
rolb
sub
cltd
imul
push
outsl
jns
std
sub
out
pop
add
inc
lahf
testl
pop
popa
stos
push
inc
xchg
dec
adc
jmp
add
pusha
pop
scas
insb
xchg
push
ret
arpl
lock
adc
imul
mov
test
xor
add
std
mov
imul
lret
cmp
mov
test
dec
push
dec
imul
adc
push
fs
shlb
push
mov
adc
les
xchg
jecxz
cmp
pop
pop
int
jmp
lds
cli
add
int
adc
incl
cli
xchg
mov
add
or
and
int
cwtl
enter
movl
jle
xchg
sbb
or
mov
jno
leave
std
sbbl
sahf
and
das
mov
mov
adc
jl
mov
lahf
push
data16
loope
sub
add
xchg
mov
out
repz
aaa
mov
sub
xlat
xchg
adc
mov
cmp
push
ljmp
fcmovne
cmp
ljmp
cs
int3
aad
int3
popf
and
fiadds
dec
stos
roll
std
repz
lahf
sahf
setle
sahf
jnp,pt
jl
push
jne
call
jne
sbb
inc
pushl
popa
xor
sbb
shrl
inc
add
adc
mov
jns
fs
jno
aad
repnz
mov
push
sub
add
es
rolb
push
add
and
add
xor
xchg
into
mov
jp
hlt
sub
popa
sbb
cli
sub
inc
cmp
adc
into
mov
pushf
lods
push
inc
add
mov
cwtl
and
daa
ja
rclb
fbld
mov
dec
cmp
popf
icebp
sub
lahf
push
gs
ljmp
repz
push
insl
pop
jne
aas
mov
and
sbb
add
add
movl
pushl
ret
sbb
xchg
dec
add
push
movsb
mov
xor
mov
push
dec
test
out
daa
icebp
pop
dec
nop
inc
cmp
cmp
or
lea
add
fadds
jae
push
jno
xor
mov
rcrb
add
in
test
jg
pop
xchg
daa
inc
in
imul
jnp
lahf
popa
sbb
push
sbb
std
or
mov
jmp
std
les
dec
add
lods
mov
insb
jp
jge
push
push
test
scas
lahf
inc
bound
pop
dec
scas
push
outsl
aas
jp
pop
pop
gs
outsb
shll
pop
ret
add
add
call
xor
shl
mov
sbb
adc
push
rolb
inc
mov
fucomip
mov
or
dec
xor
shrb
jo
aam
repz
ds
xor
dec
add
scas
pop
lods
js
ss
xchg
stos
ret
sarb
lds
mov
cltd
sub
fisttps
dec
fldt
gs
ret
lods
push
aas
repnz
cmp
fwait
in
mov
fistps
jecxz
dec
rcr
push
pop
fstl
inc
arpl
add
popa
cmp
clc
mov
mov
scas
and
push
mov
jns
jo
pop
inc
mov
loop
xchg
push
mov
je
clc
in
and
push
and
push
in
add
jle
daa
test
scas
aad
xchg
push
push
cs
mov
mov
push
and
outsl
xchg
mov
mov
ret
orl
and
xchg
test
adc
daa
movsb
test
push
and
shll
mov
push
push
iret
mov
xor
and
imul
fs
sbb
pop
dec
hlt
sub
hlt
lret
push
push
dec
cmpsb
fildl
jecxz
lods
testb
es
add
ret
icebp
inc
xor
xchg
add
pusha
xchg
inc
push
inc
std
mov
hlt
fadds
ljmp
scas
push
mov
fistpl
and
xor
je
xchg
ja
sbb
jno
popa
add
mov
fs
mov
inc
mov
fsubrl
xor
pop
mov
scas
dec
push
or
sbb
int3
add
int3
jno
jbe
testb
ss
push
cmpsb
pop
into
outsl
cmp
fcmove
int3
mov
push
xchg
inc
xor
mov
aam
pop
xorl
ret
mov
xchg
jle
stos
inc
sub
das
cmpsb
cmp
loope
mov
aam
cmpsb
mov
frstor
testl
xchg
mov
or
xchg
sti
int
das
pushf
inc
xchg
xor
mov
aas
frstor
push
adc
decl
push
jl
sbb
mov
loop
xor
ret
sub
test
pushf
movl
call
cmp
movb
jmp
and
dec
add
mov
mov
xchg
and
push
in
jl
out
aas
add
mov
dec
or
dec
sbb
mov
out
cltd
test
lret
mov
pop
jmp
inc
sbb
sahf
cmpsl
inc
sub
mov
cmc
mov
jp
adc
fwait
cmp
pop
ljmp
lock
rorb
push
add
add
loop
data16
mov
push
fisubrl
xchg
mov
push
cmc
mov
dec
sbb
imul
xor
push
or
sbb
dec
and
cmp
fisttpll
lcall
mov
subl
sub
adc
add
xor
add
iret
shlb
mov
jge
and
or
clc
sbb
jg
test
or
out
movsb
mov
xor
push
or
out
push
push
mov
push
add
fisttpl
pushf
and
add
cmp
pop
cwtl
lea
movsbw
mov
call
add
push
and
xor
adc
hlt
in
popa
adc
xlat
adc
loopne
push
out
and
repz
cs
xlat
mov
xchg
jecxz
mov
inc
scas
push
add
adc
pop
or
add
xchg
push
in
rclb
pop
test
jo
push
cmpsb
xlat
lods
jbe
sbb
cmpsl
mov
add
outsb
dec
iret
outsb
cli
sub
call
mov
push
mov
jo
xchg
mov
xchg
or
cmp
lret
aaa
xchg
xchg
cli
mov
sarl
lds
fistpl
ret
xor
nop
movsb
sub
adc
es
jbe
ret
pop
ja
lods
scas
xchg
inc
sub
mov
mov
rcl
leave
mov
aad
pop
adc
popf
and
stc
in
mov
not
popf
in
test
push
add
iret
repnz
dec
add
stc
stos
cltd
sub
mov
sbb
push
loop
pop
icebp
add
inc
aad
xor
mov
pushf
lods
jnp
cwtl
lds
push
jnp
mov
push
mov
test
fs
pop
bnd
inc
cmp
xchg
enter
sub
and
pop
stc
inc
cli
cmpsl
lcall
jbe
xor
and
movb
lea
jmp
hlt
int
dec
add
inc
rol
shll
adc
push
and
std
and
popf
int3
cmp
ljmp
fsub
jne
out
movsl
std
lods
pop
mov
sbb
mov
cmp
add
lcall
push
xchg
push
iret
xchg
mov
test
adc
sub
mov
sahf
cmc
mov
lods
in
test
imull
add
out
cmp
or
sub
mov
rorb
pop
mov
and
aaa
popl
clc
cmp
pushf
cmc
cmp
push
lea
ja
bt
clc
sub
add
setb
shl
add
shld
rcl
stc
mov
pusha
mov
pushl
repnz
pushf
jmp
xor
push
and
xorb
lret
mov
mov
nop
xchg
mov
sub
jo
mov
xchg
mulb
xor
movsl
pop
and
mov
inc
sbbl
fdiv
ret
dec
gs
das
adc
xchg
ret
sarl
sbb
push
jge
cmp
xor
or
lds
dec
or
mov
jecxz
push
mov
add
lods
les
mov
mov
mov
pop
sub
add
sub
jns
xchg
out
mov
and
pslld
sbb
xor
push
mov
mov
loope
inc
pop
or
sbb
rcll
add
repnz
dec
add
xchg
ja
pop
sbb
rcrl
xor
or
popa
pop
scas
sbb
mov
push
push
in
jb
dec
xchg
fstpl
movsb
stos
out
loope
jecxz
add
mov
xchg
rcrb
pop
inc
pop
js
int
add
mov
mov
inc
pop
add
movsl
icebp
mov
loopne
imul
mov
jmp
cmp
sbb
cwtl
test
loop
mov
add
out
jmp
sbb
pop
es
inc
cld
scas
loope
add
arpl
pushl
pushf
lea
js
stos
push
pusha
pushf
lea
jmp
jmp
mov
mov
imul
jmp
ljmp
imul
sub
push
mov
jp
mov
shll
imul
lcall
xor
icebp
ds
pop
push
and
movsb
jb
loop,pt
mov
ret
shr
divl
pop
arpl
fisttpl
rcl
andl
inc
sbb
movl
rorb
sub
add
add
outsl
adc
scas
pop
out
sbb
lock
mov
rcll
sub
add
sbb
xchg
in
cld
push
add
cltd
fs
pusha
lods
xor
cltd
lret
out
ds
decb
mov
nop
test
ret
mov
scas
mov
push
xor
rcr
sbb
cmp
cmp
jg
test
ret
fs
fildl
insb
sbb
dec
pop
fimuls
add
cld
add
mov
pop
ret
jmp
shll
shrl
lock
xchg
test
push
out
pop
mov
fadds
faddl
bound
adc
mov
data16
rolb
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
cmpsb
add
movsb
xchg
cmpsl
mov
mov
jg
cli
insl
mov
mov
fs
cmp
lods
stc
test
scas
mov
adc
js
js
loope
jbe
xchg
es
xor
jle
in
je
mov
sbb
movnti
outsb
lahf
or
dec
mov
mov
jp
jne
icebp
mov
ja
in
xchg
mov
fistpl
lahf
fwait
cltd
sub
ss
push
and
push
cmp
pop
jge
jp
in
jno
mov
shr
movsl
cmp
in
mov
xchg
or
sub
dec
jbe
repnz
dec
mov
inc
jl,pn
add
int3
cmp
stos
fmulp
sbb
rsqrtps
jl
rorb
lret
test
lea
lods
lret
divps
push
test
cmpsl
imul
mov
cs
push
xchg
rcl
movsb
stos
pop
cli
cmp
jl
push
jnp
mov
sbb
dec
push
out
and
repz
inc
addr16
mov
cli
sub
lahf
std
mov
jmp
js
hlt
lds
call
mov
shrb
pop
sbbb
insb
mov
add
lea
je
jmp
xchg
cmpsb
rolb
outsl
ret
jns
jo
sbb
test
loop
jb
decl
mov
or
imul
xor
sub
push
imul
adc
test
test
aam
ret
and
fstpl
sbb
cmc
jp
add
push
pop
out
mov
lcall
jmp
enter
add
lock
add
xchg
sub
add
rorb
lret
clc
shr
pushf
pushf
lea
je
push
jmp
cmp
mov
mov
xchg
ret
mull
aam
mov
data16
test
pop
add
es
imulb
rol
and
cmp
jnp
mov
mov
jne
addl
mov
inc
inc
and
scas
popf
inc
popf
out
out
ja
xor
lock
pop
fstl
jns
decl
imull
dec
hlt
push
mov
lret
aas
jo
bound
or
int
push
lea
call
call
bound
xor
push
data16
xor
out
inc
jo
nop
adcb
clc
mov
jl
xchg
sub
cmp
push
cs
cs
lds
sub
stc
in
cld
mov
fsubs
sbb
xchg
pcmpeqb
addr16
xchg
xor
push
aaa
xorb
adc
stc
add
pop
jge
mov
push
or
push
mov
bt
push
neg
cmc
bt
jmp
add
cmc
xor
push
cli
shl
xor
nop
add
mov
dec
jae
inc
cwtl
add
ss
loopne
fsubrl
cmp
fidivl
xor
and
pop
sbb
cmp
mov
adc
inc
jle
cltd
add
ds
sub
lret
and
popa
cwtl
push
jp
fisttps
insl
loope
insb
sbb
subl
sub
xlat
pop
imul
cwtl
in
jb
movsb
pop
sub
xor
rorb
xor
adc
js
sbb
add
movsb
mov
add
aad
int
pusha
lea
jmp
mov
push
out
fmuls
mov
in
pop
mov
lea
dec
pop
in
cmpsb
jno
sbb
push
cmpsb
sub
inc
xor
shrl
mov
mov
mov
or
inc
in
inc
mov
jno
lret
imul
mov
add
sub
insl
mov
mov
aad
shll
sbb
adc
xor
int3
repnz
push
ret
rep
jp
sbb
std
std
mov
sub
inc
shld
cmp
mov
pop
jns
xor
jecxz
cld
cmp
add
dec
movsb
and
aam
pop
leave
add
jmp
sub
inc
test
popf
xchg
xchg
xor
adc
adc
les
mov
scas
xchg
and
xchg
call
enter
roll
cmp
cmc
xor
add
xchg
rclb
push
xorl
or
add
mov
jge
mov
nop
jp
add
sub
and
cltd
pop
stos
mov
jmp
into
mov
mov
mov
insl
or
or
daa
mov
lock
dec
or
movsl
aad
fldcw
inc
sbb
and
les
out
fs
sbb
test
in
shrb
xor
push
adcb
and
add
adc
in
mov
out
icebp
jmp
fbld
or
pop
sub
fidivrs
aaa
arpl
adc
mov
loopne
or
ljmp
lods
es
stos
fistpl
adc
ret
mov
lods
jbe
bnd
iret
xor
insb
aas
ljmp
adc
pushf
pusha
pushf
push
movl
pushf
movl
pusha
lea
jmp
test
call
loop
outsb
xor
push
lcall
adc
scas
out
sahf
xlat
push
outsb
push
scas
ret
cld
cmp
lahf
sub
lea
test
push
and
sbbl
mov
in
fsts
sti
sbb
add
icebp
mov
gs
jge
das
mov
cld
test
fadds
xchg
ljmp
inc
fnstcw
mov
das
xchg
jg
mov
push
jl,pn
inc
pop
pop
cwtl
in
xchg
in
inc
push
xchg
inc
imul
out
in
sbb
adc
test
add
mov
xchg
mov
rcrl
fnstsw
add
add
lods
test
fiaddl
and
push
adc
push
xchg
sub
xchg
addr16
jb
push
lods
jae
dec
push
dec
or
inc
ds
and
lahf
shrl
mov
pop
inc
mov
icebp
out
mov
out
data16
out
inc
pop
sbb
adc
and
popf
insb
ret
dec
inc
pop
mov
call
sub
rorl
jb
sbb
adc
fstpl
push
enter
lods
jmp
repz
pop
jb
lahf
shrl
mov
fcmovne
cmp
pop
cwtl
movsb
enter
outsl
jmp
in
mov
loop
and
pop
fistpl
mov
fisubl
push
push
ds
clc
ja
cmp
in
imul
std
xor
add
out
pop
out
loopne
iret
clc
fldt
les
imul
fstpl
push
mov
outsl
sbb
xchg
push
cltd
ficomps
dec
cld
imul
inc
sbb
rcll
out
cld
mov
jmp
xchg
pop
add
dec
add
adc
inc
and
mov
pop
test
sbb
sbb
lods
adc
dec
pop
imul
in
push
dec
pop
or
xor
mov
pop
mov
sahf
cli
in
dec
sub
xchg
testl
or
pop
pushf
or
jl
push
fs
fstps
push
or
outsl
pop
lods
add
xchg
mov
mov
fsubrs
js
mov
add
loop
pop
mov
aaa
adc
fstpl
cmp
adc
lods
push
sbb
xor
or
in
or
mov
dec
push
jo
mov
test
lahf
jb
pop
add
xor
setl
cs
add
cmp
enter
fisttps
inc
mov
mov
stos
push
and
mov
das
push
fidivrl
xchg
clc
xor
in
test
das
jmp
lcall
das
xchg
clts
test
dec
inc
and
pushf
les
repnz
enter
stos
pop
sub
adc
sub
lahf
push
add
inc
pushf
stc
sub
sub
js
fdivl
adc
inc
sub
jne
loop
aaa
sub
cmp
sbb
sub
shrl
xchg
cmp
inc
pop
xor
cld
dec
lods
cmp
jp
pop
push
outsl
pop
out
push
loop
dec
fwait
mov
sbb
cmp
push
cmp
cmp
push
jl
mov
sbb
js
cltd
xchg
mov
les
xor
xlat
sbb
es
rcrl
or
sub
xor
popf
mov
loop
or
scas
mov
out
cmpb
sbb
lcall
sub
dec
cmp
push
cld
sbb
lahf
lret
sub
and
nop
sbb
outsl
jne
cmp
in
push
fiaddl
sub
lock
adc
cmp
clc
ljmp
pop
sbb
sbb
ja
jns,pn
data16
or
sbb
pushf
push
pop
fwait
icebp
pop
xlat
inc
stc
cmp
adc
jle
mov
pop
xlat
pop
rcll
nop
sbb
icebp
mov
cmpsb
xor
pushf
in
dec
dec
nop
xor
pop
addb
pop
pop
xor
roll
jae,pt
jo
or
xor
jo
sbb
pushf
or
aam
arpl
mov
jne
and
dec
xor
pop
xor
fmull
push
pop
ss
test
jp
ss
insb
xchg
pop
ss
out
adc
dec
ss
adc
in
aaa
adc
aaa
and
aaa
loopne
pop
call
faddl
sbb
aaa
dec
pop
and
scas
adc
jl
in
mov
jnp
mov
or
adc
hlt
sub
std
push
fsubr
xor
repz
outsb
mov
cmp
into
sub
insl
das
jp
push
xchg
pop
bound
out
push
jp
or
xor
clc
je
repz
pushf
jns
pop
adc
xchg
push
adc
cmp
es
inc
pop
insb
cmp
clc
pop
pusha
sbb
adc
nop
es
and
jecxz
adc
stos
dec
and
cmp
arpl
adc
add
sbb
mov
xor
add
jge
sbb
jmp
lock
inc
pop
jg
adc
cmc
ds
xor
clc
call
jl
sub
dec
cmp
pop
inc
cmp
mov
out
add
sbb
mov
sbb
cmc
xor
cmp
mov
ret
xor
mov
test
jl
scas
xor
mov
lea
sbb
nop
pop
inc
fsubrl
sbb
nop
pop
pusha
faddl
pusha
sbb
pop
mov
cmp
cwtl
loope
cwtl
lahf
xchg
add
loop
cmp
cmp
pop
cmp
adc
stos
or
cmp
nop
stos
cmpsb
or
pop
mov
arpl
cmp
pop
mov
or
jne
and
fcompl
arpl
jns
xchg
cmp
pop
pop
mov
xchg
sub
sub
mov
cmp
jp
cmp
xchg
push
push
jecxz
sbb
cmp
add
pop
mov
jae
sbb
mov
mov
cs
or
cmpl
popf
cmp
cwtl
cmp
fstl
aaa
add
inc
fdivrl
sub
dec
xlat
cwtl
pop
icebp
sbb
cmp
sub
stos
test
add
in
mov
in
out
mov
cmp
xchg
or
lret
ds
sub
ljmp
pop
cmp
mov
hlt
pop
dec
sbbl
loopne
jl
test
mov
int3
fstpl
pop
or
pop
mov
adc
mov
sbb
in
or
jle
jle
ja
sub
nop
loopne
jl
js
lock
sbb
aas
push
sbb
jle
sub
sbb
pop
aas
cld
cmp
cmp
dec
test
sbb
fbstp
lds
push
add
aas
into
push
inc
xchg
dec
xor
inc
jg
adc
mov
shll
or
out
sub
aas
ds
dec
pop
call
pop
rclb
push
sbb
ja
lds
cmp
out
jbe
dec
in
xchg
arpl
add
fcomps
mov
lods
ret
shl
add
ret
hlt
lcallw
daa
sahf
faddl
sbb
jle
shll
cwtl
jecxz
jle
and
cltd
addr16
sbb
sub
add
sbbb
sbb
test
sbb
test
mov
or
cmp
paddb
les
ds
xchg
xchg
add
mov
add
xor
cmp
in
xchg
mov
adc
inc
xor
jo
ljmp
sbb
out
sbb
pop
cmp
scas
cmp
lahf
cld
scas
cmp
in
dec
test
cmp
pop
pop
into
in
mov
nop
ds
xor
inc
lods
push
insl
push
mov
mov
jl
sub
xor
cmp
add
or
dec
add
stos
adc
or
insl
popf
xchg
sbb
sbb
xlat
stos
ret
pop
push
movsb
push
cmp
add
xchg
pop
shrl
sbb
cmp
mov
push
adc
aam
pushf
push
stc
hlt
rcll
inc
jns
rcrb
ljmp
clc
push
shll
lahf
fsts
insb
fisttpll
add
pop
icebp
dec
lods
rorl
cmp
xor
out
pop
adc
mov
xchg
cmp
cmp
adc
sub
add
sub
xchg
cld
js
add
adc
add
cwtl
sti
add
jae
adc
das
pop
fimull
lahf
cli
in
xchg
adc
std
mov
sub
aas
xor
cwtl
fs
pop
addb
popf
add
fsubr
rcll
lods
lock
jecxz
sbb
mov
test
xorps
push
repz
or
insb
inc
sub
mov
pop
sbb
pop
mov
or
pop
sbb
mov
cmp
adc
pop
mov
mov
cmpsb
pop
jnp
sbb
sbb
xchg
imul
fcompl
hlt
cld
sbb
xchg
pop
stos
add
sub
push
adc
sbb
add
jae
push
lahf
pushf
xor
pop
xor
lods
jae
out
xor
cmp
add
inc
fsubl
pop
adc
fistps
add
dec
cmp
add
in
outsl
cli
popf
add
inc
cmp
add
mov
pusha
cmp
shll
xchg
cmp
out
ja
jge
in
outsl
cli
out
add
inc
cmp
inc
sbb
or
mov
adc
adc
cmc
pop
push
mov
cmp
push
mov
adc
psllw
sbb
xor
mov
xchg
mov
xor
in
or
push
adc
adc
hlt
jmp
lods
adc
xor
fbstp
sub
inc
xchg
adc
dec
dec
dec
xchg
push
lock
jmp
fs
inc
inc
inc
lret
fisttpll
mov
sub
aam
sbb
popa
cwtl
push
aaa
sub
outsl
or
push
pop
repz
cmp
or
cmp
adc
dec
imul
mov
insb
xchg
lahf
dec
sub
xchg
sbb
testb
test
cmp
add
lods
neg
adc
popf
negl
lods
out
pop
cmp
or
nop
stos
adc
or
cwtl
or
imul
popa
pop
or
pushf
sbb
xchg
test
or
clc
adc
insb
xchg
adc
push
jne
aas
leave
pop
or
cld
sub
xor
xor
jno
ret
push
sarb
adc
pop
push
in
add
adc
adc
fisubs
pop
sbb
and
pushf
adc
cmp
sub
adc
xchg
dec
or
pop
mov
repz
dec
dec
jp
mov
or
pop
push
fmull
mov
in
popa
pop
push
jl
push
popa
xchg
dec
outsl
mov
repz
adc
mov
pop
push
cld
lods
pop
push
stos
xchg
adc
dec
gs
xor
adc
cmp
lcall
dec
hlt
pop
mov
adc
mov
pop
pop
push
stos
dec
shrb
pushf
je
lea
fwait
hlt
or
xchg
xchg
mov
arpl
bound
sub
sbb
mov
pop
in
adc
les
bound
sarb
les
adc
add
push
clc
sbb
pop
lea
push
inc
inc
mov
leave
aad
or
cmp
or
or
lahf
or
pushf
jp
cmc
icebp
lret
jns
test
adc
push
xchg
xor
cmp
int3
nop
pop
add
repz
mov
push
ljmp
mov
pop
leave
mov
out
rol
mov
std
cwtl
adcb
jo
cwtl
inc
adc
cmp
mov
icebp
shr
lods
and
mov
mov
cli
inc
enter
cmp
popa
xor
adc
adc
pusha
sbb
adc
cmpsl
lret
dec
popa
adc
aaa
adc
adc
push
lods
enter
pusha
mov
cli
je
js
and
jmp
push
adc
adc
dec
pop
aam
adc
enter
fidivl
cmpb
or
repz
sti
popa
sbb
fcoms
push
xchg
mov
fisubrs
lcall
rcrb
mov
lea
setl
into
pop
push
mov
sbb
dec
fdivs
mov
mov
lret
push
popf
cli
sti
xlat
setl
dec
dec
push
xchg
sbb
push
fadds
cmp
push
dec
in
adc
push
xor
sub
int3
fwait
in
sub
mov
cmpsb
or
pushf
cmp
fisttps
inc
mov
in
sub
stos
sbb
and
sbb
or
and
sbb
pop
or
outsl
pop
push
adc
test
adc
clc
inc
sub
mov
ss
xor
sahf
lahf
mov
mov
mov
pop
dec
pop
outsb
pop
mov
adc
sarb
pop
jmp
rclb
mov
fmuls
scas
lahf
adc
stos
mov
mov
xchg
dec
or
pop
addr16
js
clc
jb
jl
xchg
dec
mov
pushf
je
sub
addr16
xchg
push
mov
pushf
pusha
dec
in
sbb
dec
cwtl
adc
lret
xor
mov
pop
xchg
faddl
sahf
pop
mov
imul
xchg
dec
or
mov
es
inc
mov
cld
cmp
or
sub
adc
fistpl
adc
or
mov
sbb
xchg
cwtl
pop
int3
sbb
mov
int3
mov
nop
dec
fsubs
cmp
aas
mov
add
scas
mov
xchg
xchg
outsl
sbb
aad
cmp
mov
sbb
mov
sbbb
fmull
dec
mov
pop
xor
inc
xor
mov
mov
movsb
in
cmp
out
mov
adc
and
jecxz
fisubs
cmc
push
pop
adc
pusha
fiaddl
aad
ret
mov
popl
ss
xlat
repnz
dec
repnz
push
je
std
cltd
sub
add
inc
fsqrt
lock
add
push
cmp
dec
mov
mov
and
sub
pop
pop
and
arpl
enter
mov
sar
jge
in
jl
pop
and
and
hlt
sub
ss
xor
jae
movd
ss
repnz
mulb
add
sbb
xchg
adc
shlb
loopne
pop
cld
cmp
xchg
hlt
fdivr
jbe
ja
inc
sbb
test
pop
cld
adc
cltd
in
sbb
adc
dec
stc
push
es
in
ficomps
loopne
pop
sbb
sub
icebp
push
adc
bound
addr16
inc
stc
jns
inc
inc
xchg
sub
notb
repnz
sbb
push
inc
hlt
test
fwait
pusha
dec
dec
xor
cld
inc
sub
xor
cmpsl
or
dec
js
js
mov
pusha
jmp
inc
xlat
xchg
add
and
pop
xchg
adcl
add
or
sbbb
adc
and
addr16
dec
sahf
icebp
adc
xchg
cs
pop
adc
xor
xchg
or
jle
cltd
pop
jns
xlat
pop
sbb
movsl
mov
jg
or
sub
sbb
add
sbb
js
adc
sbb
in
int3
add
rorl
aaa
xchg
dec
lods
push
negl
or
mov
push
fsubp
dec
cld
sbb
or
adc
jb
push
mov
fisttpl
adcb
jl
mov
dec
pop
cwtl
aad
pop
lcall
arpl
into
pop
xor
pop
inc
xchg
and
sub
pop
dec
pop
and
mov
inc
add
and
mov
dec
xor
lret
ja
addr16
sbb
pop
ss
or
xor
fisttpl
shl
or
mov
mov
lret
cmp
mov
je
leave
test
cld
cmp
inc
lds
ds
cltd
dec
push
and
jmp
fstpl
lods
inc
push
and
push
xchg
adc
mov
sbb
dec
cld
xor
sbb
fiadds
je
jnp
je
mov
fstpl
pop
push
rep
punpckhdq
or
nop
fwait
sub
shll
pop
mov
pop
daa
dec
std
nop
insl
je
mov
insl
dec
test
mov
jbe
xchg
sbb
xor
sbb
dec
and
pop
fists
add
or
cmpsb
adc
fmulp
sbb
pop
rcll
ret
push
sub
inc
cwtl
cwtl
test
cld
cmc
xchg
jge
add
fisubrl
aam
outsl
jge
jge
sub
xchg
push
fdivl
adc
movsl
push
pop
ds
pop
in
and
jmp
or
sbb
sub
xchg
push
fwait
adc
dec
dec
cmp
movsb
ret
push
cld
mov
aas
jl
arpl
mov
ds
repz
xor
mov
arpl
add
jl
adc
mov
pop
push
rclb
or
xor
dec
dec
dec
rcrb
clc
cltd
adc
sub
dec
mov
aas
jmp
in
sub
cld
out
mov
xchg
and
cmp
sbb
in
xchg
inc
insb
lock
xchg
push
dec
cmp
cmp
add
scas
and
outsl
add
pop
sbb
sbb
or
sub
lahf
rcrl
mov
pop
xchg
push
popf
push
mov
sahf
int3
add
cli
movsb
push
and
jp
xlat
loop
data16
insb
sbb
push
dec
cltd
sbb
dec
and
push
xchg
push
popa
push
sub
xor
and
ljmp
aaa
add
add
and
add
xchg
or
pushf
dec
mov
sbb
in
push
mov
pop
test
pushf
rcll
loopne
sbb
dec
sub
mov
jle
shr
mov
test
mov
ror
arpl
or
cld
shlb
imul
jb
mov
cmp
mov
out
cmp
xor
dec
inc
rcrb
or
sub
inc
call
adc
adc
and
or
mov
adcl
fcomps
cld
pop
fucomip
cmp
inc
lcall
adc
jg
xor
sbb
dec
addr16
fiaddl
stos
out
adc
push
add
sbb
loop
test
lret
sbb
adc
push
das
ficoms
add
sahf
jo
xchg
adc
lds
mov
pop
cmp
cmp
lret
dec
adc
push
nop
adc
pop
sub
ds
fcmovnbe
adc
dec
cwtl
lahf
sub
push
adc
pop
sbb
pop
outsl
aas
push
sbbb
dec
sarl
enter
cmp
fdivl
test
and
add
mov
sbb
lcall
jle
lea
xor
add
mov
cmp
addr16
imul
pushf
xchg
push
imul
aaa
inc
push
mov
ficoms
or
cld
into
cmp
xchg
dec
or
push
enter
in
xor
sub
and
and
xchg
outsb
add
sbb
data16
push
inc
cld
sbb
push
inc
or
adc
mov
adc
sbb
aad
jne
or
push
pop
push
push
call
inc
loopne
pop
mov
or
and
sbb
add
sbb
int
or
add
mov
cmp
pop
add
sbb
shrl
sbb
push
js
push
mov
lcall
push
push
int
shlb
jne
icebp
pop
fdivrs
mov
sbb
sbb
or
add
push
dec
push
mov
daa
lods
pop
cmpl
cmpsl
repz
pop
xor
push
clc
sbb
or
and
cwtl
xchg
inc
xchg
sbb
dec
in
cld
lret
insb
or
xlat
push
inc
sbb
outsl
adc
fisttpll
js
incl
clc
mov
in
or
pop
push
cmp
popf
mov
push
push
xchg
rcrb
adc
cli
xchg
mov
or
daa
push
pop
xor
fsubs
add
fstpl
rclb
aas
lea
dec
sub
push
xchg
mov
into
jg
add
aas
lcall
outsl
add
in
xor
enter
sub
js
nop
stos
pop
aas
fistl
daa
pop
push
add
mov
push
push
loopne
ds
adc
pop
or
push
jb
outsl
adc
xchg
pop
icebp
sbb
push
lods
sbb
and
lds
mov
imul
pop
or
add
add
xor
sbb
ret
add
mov
ret
xchg
or
push
push
add
sbb
clc
push
cmp
ds
dec
and
and
addr16
int
cmp
int3
pop
sbb
repz
sbb
jl
xchg
pop
push
add
jne
stos
push
or
rcrl
push
dec
dec
lahf
sub
inc
jp
enter
mov
stos
xor
xlat
mov
fsubrl
in
mov
daa
aaa
ljmp
xchg
push
adc
cld
psubusb
js
push
cmpsb
fmul
adc
sarb
shrb
xchg
pop
or
dec
mov
js
or
jo
lahf
push
rcll
or
imul
inc
jae
sbb
pushf
lret
imulb
ds
stos
or
je
sbb
fsts
test
sbb
jb
test
dec
push
fcomps
sub
sbb
inc
or
shll
push
dec
sbb
adc
mov
rorb
or
test
mov
sbb
inc
cmp
popf
sub
and
xchg
xchg
pop
adc
hlt
and
aas
sbb
add
dec
cmp
pop
jl
jl
pop
pop
fidivrl
hlt
repz
insb
adcw
dec
cmp
cmp
push
push
sbb
xchg
sub
pusha
xor
lahf
push
adc
loope
cmc
cmp
fimull
sbb
cltd
std
sti
adc
inc
dec
mov
pop
aad
push
cltd
fcmovne
xor
rcrb
or
xchg
or
mov
rcrl
and
iret
cltd
add
nop
dec
jns
pop
sbb
pusha
add
push
jecxz
mov
ret
push
sbb
or
cli
pop
in
ret
int
and
sub
cld
jno
into
jg
sub
mov
ss
xorb
dec
rcrl
xor
mov
xchg
sti
push
sub
xor
sbb
cld
push
sub
cmp
fsubrl
cltd
lcall
push
add
cmpsb
push
xchg
mov
xchg
mov
xchg
xor
xor
sbb
shll
push
xor
popa
push
mov
mov
cmc
add
push
mov
dec
frndint
xchg
push
and
lods
bound
or
cmp
pop
fs
rcrb
jbe
jbe
loopne
mov
or
loope
pop
in
sahf
sahf
sbb
sub
inc
bound
pop
inc
nop
cld
adc
rolb
pusha
dec
pop
xchg
xor
push
xor
push
xchg
add
movsb
or
pop
test
addr16
lahf
jg
inc
negb
fstpl
les
mov
push
xchg
lret
pop
push
sbb
fwait
xor
or
xchg
mov
cmpsl
xor
dec
fstpl
int3
mov
mov
lcall
mov
sbb
icebp
dec
inc
jns
cld
mov
push
in
add
shrd
xchg
out
xor
adc
cmp
mov
or
pusha
push
cmp
sbb
mov
out
push
sub
ds
xchg
and
push
xchg
push
mov
xor
xor
xchg
add
push
adc
cmp
jmp
dec
xorb
iret
sahf
sub
cmp
rorl
xchg
inc
cld
mov
lahf
add
clc
xor
mov
inc
fwait
add
and
cli
dec
add
pop
mov
lret
lods
push
test
pop
fcompl
adc
fdivrl
pop
rcll
and
push
stos
inc
xchg
jl
mov
xchg
dec
adc
cld
leave
lods
cmp
jnp
fs
cmp
fbstp
xchg
push
dec
inc
add
push
mov
pushf
fdivl
stos
in
jb
xor
mov
add
dec
inc
sbb
pop
cmp
fstp
pop
add
and
sbb
int3
xchg
pop
js
push
adc
mov
icebp
flds
pop
pop
mov
leave
xchg
adc
repnz
add
movsb
test
int3
xchg
adc
fldcw
fwait
in
pop
push
gs
bound
inc
xor
mov
fcomps
and
pop
pushf
inc
sbb
cmpsb
setbe
pop
xchg
push
jmp
and
adc
pop
adc
js
out
adc
mov
aam
adc
sti
sub
or
push
adc
clc
gs
pop
cld
cld
aas
iret
scas
icebp
ja
inc
outsl
adc
xor
in
call
dec
jmp
fcmovnb
outsl
pop
cld
out
lahf
or
cmpsb
adc
push
and
mov
jmp
ss
sbb
test
fcomi
movsb
mov
mov
sbb
out
and
and
pusha
or
pop
out
push
adc
jg
cmp
flds
jno
insb
cs
mov
pop
scas
jnp
outsl
inc
xchg
fimuls
dec
jp
out
mov
ja
cmc
mov
sbb
imul
and
in
sub
sti
sbb
mov
test
xchg
pop
xchg
inc
imul
cmpsl
pushf
xchg
test
scas
xchg
add
mov
sbb
clc
and
cmpsl
xchg
imul
or
xchg
or
inc
pop
dec
daa
dec
pop
inc
jg
aaa
or
loopne
push
adc
in
push
xor
in
imul
add
sbbl
fcmovu
in
xor
lahf
pop
pop
inc
in
ds
mov
xor
dec
mov
loope
inc
test
jge
adc
aam
adc
sbb
or
jnp
sub
pop
das
pop
outsb
mov
imul
aam
mov
push
popf
xchg
and
and
pushw
adc
xchg
inc
insb
pushf
push
add
and
inc
and
sbb
push
push
or
out
sbb
mov
xor
xor
outsl
pop
adc
ds
push
loop
or
call
movsb
je
xchg
jbe
or
in
push
lods
cmp
aad
or
sbb
sbb
jecxz
test
cmp
in
aam
mov
cmp
inc
and
fistpl
and
cld
rclb
cmp
insb
sub
mov
push
adc
push
pop
add
repz
jnp
pop
push
cmp
and
and
outsb
add
xor
pop
mov
in
sub
pop
lahf
xor
xchg
or
dec
fdivrs
loope
push
add
and
or
xor
adc
mov
dec
or
xlat
inc
loopne
cmc
push
push
xchg
aam
sub
aas
pop
into
sub
add
push
sbb
out
push
jl
orl
dec
mov
pop
cld
fildl
lahf
out
data16
push
xor
mov
add
add
sbb
and
push
cmp
fdivrs
mov
addr16
xchg
mov
or
sbb
sarb
cmp
call
mov
sub
fisttpll
icebp
adc
jg
and
mov
push
js
jg
stos
add
cltd
fdivrl
cmp
xchg
mov
aam
pop
add
or
push
cld
mov
dec
in
mov
iret
xor
pushf
inc
mov
sbb
hlt
pusha
fucomp
push
dec
enter
cmp
adc
jg
in
ret
push
movsl
or
sarl
js
addr16
push
adc
in
sbb
cmp
movsb
mov
inc
push
or
lret
in
gs
repnz
pop
add
pop
cmpsl
xlat
mov
pop
sub
dec
mov
stos
adc
aas
xor
cmp
mov
sub
lods
bound
pop
dec
push
inc
mov
ljmp
inc
sub
inc
or
or
and
outsl
or
in
loop
add
gs
ficomps
fisttps
cmp
jecxz
cmp
pop
or
movsb
inc
xchg
and
adc
xor
out
xor
stos
js
jecxz
cltd
or
mov
xchg
push
sub
sbb
xchg
cmp
xchg
adc
data16
insl
add
or
lret
dec
stc
sbb
pop
rorl
or
je
inc
stos
and
repnz
dec
jae
dec
push
mull
push
out
fcoml
inc
and
int
xchg
repnz
lods
sarl
addr16
dec
dec
cld
mov
mov
add
xor
and
int3
popw
and
push
icebp
add
loope
out
adc
in
mov
sbb
xor
int
dec
sbb
icebp
pop
clc
fisttpl
sbb
add
xchg
jp
pop
lahf
sbb
cmp
mov
push
sbb
or
push
in
out
dec
dec
dec
hlt
adc
add
cmp
sbb
pop
add
xchg
or
mov
cmp
xor
mov
push
pop
fwait
shr
fcoml
shrb
adc
adc
mov
jno
bound
insb
mov
cld
lock
xchg
xchg
and
sbb
or
out
xchg
adc
imul
push
addr16
mov
daa
and
xchg
fdivl
xchg
lret
xchg
push
aad
push
ret
pop
mov
shl
push
push
ret
dec
inc
inc
aaa
sub
movsl
xchg
and
jl
aaa
cmp
mov
push
xor
ss
cld
jo
adc
sbb
push
xchg
mov
jbe
mov
jmp
mov
push
xchg
int3
pushf
adc
jle
ret
mov
cli
ljmp
jecxz
pop
xor
or
pop
pusha
call
xchg
pop
inc
mov
shl
cmp
adc
movd
sbb
dec
test
pushf
pop
sbb
mov
shlb
rorb
mov
dec
mov
inc
filds
imul
aas
fldenv
adc
sbb
pop
adc
inc
and
xor
add
mov
outsl
sbb
jb
dec
mov
dec
addr16
mov
sahf
pop
xchg
js
inc
ret
cmp
push
sar
mov
and
mov
cwtl
mov
xor
jl
or
aaa
sbb
es
cld
dec
mov
sub
daa
adc
pushf
inc
pop
daa
fstpl
pop
cld
clc
fwait
pop
cmp
fisubrs
pushf
pop
sbb
dec
arpl
and
cld
aas
cmp
push
arpl
adc
adc
test
sbb
mov
push
fcomps
dec
xchg
je
or
fcompl
sbb
int3
aam
lcall
mov
inc
icebp
sub
pop
nop
aaa
push
jle
xlat
dec
sub
rolb
pop
or
xchg
mov
xchg
dec
cmp
xor
jb
fsubs
daa
inc
popl
mov
into
pop
lcall
pushf
push
in
jg
mov
dec
movsb
dec
enter
mov
imul
lcall
sahf
dec
dec
add
out
xchg
das
or
and
loope
xchg
jne
push
pop
cld
mov
cmp
and
and
sahf
aaa
cmp
es
dec
fwait
aam
adc
cwtl
pop
xchg
xchg
adc
scas
or
jo
and
cmp
call
mov
push
daa
cld
jmp
jb
lcall
mov
push
adc
loopne
loope
add
pop
cmp
add
and
mov
pop
mov
sbb
addr16
push
sub
das
mov
push
push
fwait
bound
cmp
or
sbb
stos
mov
or
cmpsb
mov
cmp
mov
and
fs
stos
test
or
aad
pop
adc
adc
sub
out
fsubr
pop
fcmovnbe
cld
push
adc
gs
and
aam
dec
cld
inc
test
test
outsl
push
iret
sti
push
push
dec
add
lsl
pop
ret
fstps
pop
outsb
sbb
xor
inc
or
inc
icebp
or
fcomps
add
inc
insb
daa
sti
pop
lea
mov
repz
out
sub
pop
lret
imul
cld
sbb
jbe
mov
adc
xor
scas
xchg
ss
popf
fisubl
arpl
call
jg
sub
xchg
sbb
test
outsl
jnp
in
xlat
les
mov
and
push
dec
jl
sbb
das
mov
aaa
in
and
adc
js
push
and
int
mov
and
sbb
sbb
pop
out
push
jecxz
cmp
or
xchg
fisubrl
sbb
or
cld
fnstcw
cmpsb
insb
mov
mov
sbb
or
orl
test
mov
aaa
jl
add
xchg
lcall
sbb
ret
adc
xchg
xlat
jnp
jg
or
inc
pop
sbb
sub
sub
dec
test
push
add
inc
cmp
stos
or
fs
jmp
shll
stos
sub
or
roll
movaps
pop
adc
sahf
and
add
cmp
xchg
adc
outsl
mov
arpl
jo
mov
inc
mov
stos
xchg
scas
or
xchg
mov
mov
sbb
adc
popf
mov
dec
cmp
and
push
push
and
cld
or
push
push
ljmp
and
bound
mov
push
mov
adc
or
stos
aaa
imul
xchg
jns
mov
pusha
xor
pop
xor
push
sub
or
mov
arpl
pop
mov
nop
aas
cwtl
jmp
and
addr16
xchg
jo
mov
adc
unpcklps
icebp
push
adc
push
out
test
daa
adc
push
rcrl
and
adc
dec
dec
xchg
ja
jno
sahf
xor
mov
xor
sbbb
add
jl
leave
xlat
adc
stos
lods
add
aas
push
pmaxub
inc
inc
push
inc
das
rcl
lret
fisubrs
mov
das
mov
sarl
and
and
lds
lret
or
clc
adc
movsl
or
out
xor
push
cwtl
scas
xchg
jg
in
xchg
nop
add
mov
and
ljmp
inc
or
stos
cmp
sbb
sub
pop
push
leave
cli
inc
mov
adc
pop
push
sbb
and
and
mov
negb
js
pop
scas
sti
fisubrl
dec
aam
push
shrl
cld
dec
and
rolb
push
push
fsubrs
repz
int3
dec
imul
pop
xchg
xchg
xor
scas
loop
arpl
mov
pop
outsl
and
in
add
adc
push
in
sahf
jae
inc
push
jge
into
adc
sbb
nop
mov
mov
push
enter
sarb
mov
mov
nop
jo
mov
mov
aad
in
testl
sbb
iret
clc
mov
cwtl
fcmovb
push
or
mov
sbb
pop
into
cmp
push
xchg
jno
imul
sub
daa
mov
outsb
loop
sub
lcall
cmp
pushf
cmp
adc
in
stc
filds
clc
aas
mov
loope
paddb
sahf
jl
pop
ffreep
aaa
xor
and
pop
push
inc
imul
int
and
test
cmc
inc
lahf
push
daa
add
xor
adc
adc
fdivr
cmp
mov
xor
xchg
xor
or
cmp
xchg
outsl
pop
jl
xchg
add
mov
add
inc
mov
push
mov
mov
xchg
stc
sbb
lcall
push
in
outsb
pop
mov
cld
pop
imul
mov
xchg
xor
fnsave
jb
dec
cmp
lea
insb
mov
xchg
adc
cld
pop
das
mov
push
das
lahf
adc
loope
insl
adc
pop
adc
push
adc
fdivp
mov
adc
lret
inc
and
or
fistpl
imul
mov
push
cmp
hlt
leave
cmp
cmp
xchg
mov
sbb
xor
cltd
aad
fwait
clc
test
in
in
in
adc
and
mov
inc
mov
imul
cwtl
push
repz
pushf
jb
sbbl
je
fwait
dec
xchg
stc
fwait
pop
in
dec
insb
sub
cltd
loop
or
push
mov
cld
xor
sbb
pop
cmc
lods
pop
adcb
cmp
dec
lret
int3
repz
push
std
repz
mov
dec
cmp
jne
dec
out
mov
adcb
stos
test
pop
movsb
xorb
outsl
mov
dec
fcomps
into
lahf
fcomps
sbb
jae
inc
jb
and
fstpl
lods
adc
jmp
jp
dec
push
mov
int
mov
aaa
mov
cltd
push
sbb
dec
sbb
jmp
pop
mov
or
in
xor
aam
sub
push
mov
or
jmp
cmp
mov
mov
xor
sub
jecxz
or
fldcw
push
sbb
pop
push
cmp
cmp
dec
cld
xor
lret
das
jb
mov
fs
xlat
hlt
and
repnz
out
clc
xor
mov
imul
fbld
cmp
sbb
push
jae
dec
cltd
hlt
add
or
insb
lock
lahf
xchg
sbb
push
pusha
add
sbb
ds
adc
add
aaa
ret
cmp
ss
sbb
adc
outsb
or
adc
outsl
pushf
insl
pop
aas
cld
mov
outsb
pop
jno
hlt
inc
fisttpl
ds
jl
aam
jnp
fsts
sbb
pop
lahf
lock
out
out
mov
sbb
in
or
or
jge
test
repz
lahf
pop
cmp
insb
data16
repz
mov
repz
adc
aas
xor
gs
add
or
daa
or
mov
pop
sbb
loop
push
xor
data16
sbb
sti
shl
mov
nop
adc
adc
sbb
aas
xchg
call
add
lahf
lret
sub
bound
insl
cmp
pop
scas
dec
adc
cmp
add
imul
cs
mov
or
gs
outsb
push
sbb
fcoml
aam
mov
push
ja
dec
jbe
push
sub
push
xchg
xchg
cld
xor
std
in
adc
icebp
data16
and
adc
inc
cmp
std
mov
adc
and
adc
inc
lret
pusha
rcl
push
dec
movl
cmp
lcall
dec
adc
cmp
rolb
gs
fsubs
outsl
add
stos
dec
push
inc
fstpl
add
jl
test
cld
xor
outsl
sbb
xchg
or
push
call
mov
loopne
fstl
inc
and
insb
fcompl
mov
adc
arpl
sub
jns
dec
xchg
popl
mov
dec
dec
push
stc
loope
cmp
push
push
out
dec
insb
ja
pop
mov
js
adc
lahf
jl
ret
push
and
arpl
or
mov
add
dec
fdivrp
push
ret
scas
push
jp
or
xor
jo
xchg
push
in
xlat
jecxz
adc
add
cld
call
and
in
cld
test
and
fldt
mov
pop
cmp
test
popf
ret
cmpb
call
leave
or
xchg
xchg
mov
add
xor
pop
icebp
in
mov
lcall
das
mov
xor
mov
pop
rorb
fwait
add
inc
cmp
adc
xor
adc
add
js
cmp
pop
subl
jae
push
xchg
sub
pop
sti
sbb
or
cmp
xchg
lock
imul
xchg
arpl
lret
and
testl
fcompl
mov
out
flds
inc
aad
pop
push
jge
sbb
decb
faddl
pushf
ja
insb
sbb
fisttpl
xor
mov
cmpsb
pop
roll
inc
mov
or
int3
scas
jecxz
cmp
shlb
popa
fidivl
mov
dec
mov
nop
cld
sub
in
push
testl
inc
xor
lcall
add
mov
add
in
push
lret
js
xchg
fs
loope
mov
or
stos
fs
sahf
fs
pop
dec
push
fsubrl
dec
aam
add
sub
rorb
add
cwtl
js
fmulp
mov
or
pusha
sbb
lock
mov
out
jb
fists
lea
pop
sub
sub
add
sbb
pop
xor
insb
push
sbb
jb
jne
das
into
sub
push
je
fsts
sbb
xor
mov
fistps
cltd
inc
arpl
je
repz
xlat
adc
fcmovb
inc
xor
in
lahf
dec
sub
scas
out
mov
fisttpl
js
or
adc
mov
push
sub
push
jmp
and
xor
mov
jae
add
out
add
stos
movsl
pop
sbb
mov
or
lods
xor
sbb
cwtl
or
clc
add
add
lods
mov
adc
sub
stc
int3
pop
push
mov
insb
push
or
and
inc
and
ljmp
fstps
andl
cmpsl
or
aaa
dec
lcall
push
mov
repz
mov
pop
ja
cltd
push
imul
cmpsl
je
cwtl
mov
nop
push
negb
xor
sbb
ficomps
sub
mov
test
mov
sti
data16
sub
or
sbb
or
cmc
fwait
dec
push
jmp
push
out
jl
and
mov
aas
mov
ficompl
cmp
outsb
adc
or
loop
adc
mov
mov
push
cmp
aad
xor
inc
mov
out
scas
pop
xor
jp
or
ret
les
dec
testb
mov
xlat
call
movsb
mov
pop
test
cmp
adc
fsubr
repnz
pop
jp
jmp
mov
jmp
inc
sbbb
pop
mov
add
adc
ss
lock
mov
jno
stc
sbb
and
addb
lods
outsl
imul
jo
pop
or
int
add
and
inc
xchg
scas
inc
imul
dec
and
adc
pop
cmp
and
add
dec
inc
jo
and
xlat
sbb
xchg
pop
test
push
aas
into
xchg
rclb
xor
add
cltd
repnz
cmp
xchg
cmp
pushf
push
push
sbb
sub
subb
inc
and
mov
pop
sahf
je
sti
insb
adc
mov
xor
es
cwtl
in
mov
insb
and
jl
cmp
xchg
push
lods
jnp
pusha
gs
and
shll
adc
jmp
pop
insb
and
or
out
movsl
insl
jbe
add
enter
push
gs
push
ret
shll
cld
push
jmp
fldcw
add
xchg
std
into
daa
add
mov
bound
hlt
add
inc
rcl
cli
xchg
push
dec
jmp
andb
inc
mov
and
adc
mov
push
xor
into
inc
cmp
dec
xchg
loop
add
push
jns
pop
mov
push
mov
mov
loopne
fisttps
mov
dec
sub
add
xor
adc
dec
vmulpd
and
adc
jb
push
in
or
loop
cmp
aad
xchg
mov
inc
xchg
inc
adc
mov
mov
fs
sub
imul
inc
sbb
mov
mov
cmp
dec
cli
pop
adc
sub
imul
test
lret
rcrb
sbb
xlat
mov
fcomps
jecxz
nop
arpl
mov
adc
dec
sbb
and
push
sub
sub
repz
pop
dec
inc
pop
or
inc
cmp
xor
inc
xchg
jl
xchg
sbb
rclb
and
orb
mov
jnp
mov
scas
pushf
in
jmp
mov
ret
jno
pop
xchg
pop
into
aad
sahf
jl
push
mov
inc
push
xchg
les
cmp
cmp
jecxz
inc
and
fwait
lock
mov
insb
xchg
outsl
inc
cld
imul
div
addr16
xchg
mov
inc
pop
cld
roll
push
dec
sbb
in
negl
or
cld
mov
adc
mov
push
lahf
neg
and
aas
xchg
call
shll
out
fbstp
pop
or
mov
dec
jl
ljmp
xchg
lcall
sbb
jge
sub
addr16
sub
pop
repnz
mov
lods
hlt
dec
fnstsw
insb
dec
shrb
pushf
ficomps
in
cmpsb
shlb
jl
xchg
lods
push
lcall
xchg
dec
lcall
cwtl
mov
loopne
push
push
dec
bndldx
pop
int
add
out
xor
or
xchg
mov
cmp
push
addl
sbb
inc
dec
sub
mov
pop
test
add
or
loope
sub
dec
cmp
xchg
xchg
pushf
shll
xlat
push
outsb
cmp
cmpsl
push
sahf
or
fistpll
xchg
pop
xor
clc
fimuls
xchg
sahf
mov
inc
inc
xor
dec
xor
jo
jae
shl
mov
mov
repz
xor
pop
xchg
pop
cli
iret
cwtl
push
sahf
rclb
mov
movsl
mov
js
and
xchg
mov
cmp
dec
pop
ds
and
pushf
je
inc
rclb
pop
push
mov
sub
xchg
pop
mov
sbb
pop
add
fisttpl
ret
dec
repnz
les
fcompl
sub
xchg
inc
out
imul
mov
jmp
dec
cmp
or
pop
push
mov
adc
jno
push
cld
mov
out
mov
adc
cmp
jb
jle
adc
jno
and
cmp
cld
mov
pop
lahf
push
or
sbb
adc
sbb
lock
mov
jb
dec
pop
pop
inc
adc
cld
xchg
adc
cmpsb
mov
cmp
outsl
aaa
lahf
movsb
orl
and
dec
mov
mov
inc
jb
dec
fs
adc
jb
js
mov
andb
out
std
inc
psubsb
sbb
pop
jecxz
cltd
push
cmpsb
mov
pop
aad
icebp
pop
cmp
lret
dec
adc
cmp
pop
cmp
or
ljmp
jp
xchg
pop
pop
add
push
lahf
sbb
mov
in
inc
in
dec
pop
push
jbe
and
xorb
pop
pop
mov
xor
pop
xor
xor
push
inc
cltd
push
mov
ja
shll
adc
xor
mov
cmp
push
add
jb
pushf
outsb
push
stos
addr16
pop
or
cmp
xchg
call
jne
push
push
imul
inc
or
jnp
add
inc
clc
xchg
dec
cmp
cmc
and
fimull
adc
dec
inc
sahf
mov
ficompl
sbb
sar
lods
sub
inc
std
lcall
or
jno
cmp
pop
lahf
push
rcr
dec
xchg
ret
dec
dec
fwait
movsl
adc
sbb
imul
cmc
fbld
in
cmpsb
sbb
push
es
leave
data16
sbb
or
hlt
and
mov
jno
adc
cmp
icebp
nop
enter
dec
xor
adc
leave
scas
aas
or
cld
bound
mov
stos
adc
repz
pop
inc
lock
std
shll
push
jp
pop
loopne
dec
cmp
sbb
inc
cmp
fs
cs
mov
and
cmp
nopl
sbb
testb
sahf
insl
sub
and
or
cmp
inc
or
dec
loop
sub
scas
cmp
add
fistl
adc
test
pop
sub
lahf
mov
and
fstpl
xor
sub
aaa
dec
xchg
test
lea
adc
add
or
mov
adc
cld
xor
shll
outsb
insb
and
cmpsl
xchg
jp
mov
mov
mov
cmp
ss
imul
adc
cmp
sub
cmpl
sbb
pop
repz
add
cmp
pop
cmpsl
pop
int3
popf
add
mov
sarl
sbb
jb
xor
popa
cwtl
push
mov
ss
push
dec
shr
xor
cmp
cmp
stc
xchg
lea
push
dec
cmp
push
fmuls
adc
dec
fcompl
mov
lods
or
xor
dec
inc
andb
inc
aas
mov
jae
inc
mov
inc
into
adc
iret
dec
pop
xor
into
lods
mov
dec
push
cmp
push
and
imul
or
xchg
aas
pop
push
fwait
dec
sbb
icebp
sub
in
push
mov
sbb
sbb
add
mov
pop
sub
out
and
lods
xor
pop
jmp
jno
sti
ljmp
pusha
or
rorb
lods
movsb
or
xchg
cmp
int
or
xor
add
clc
dec
sbb
shlb
pop
in
rcll
dec
in
push
push
in
ret
push
add
cmp
je
test
pop
cmp
pop
repnz
js
jns
sbb
cwtl
or
lcall
mov
icebp
add
jo
daa
jmp
jmp
popf
xor
enter
push
clc
in
or
dec
sbb
mov
and
cld
imul
cmp
mov
add
push
pop
sub
push
jl
cmp
sbbl
fwait
cmpsb
dec
and
mov
inc
and
adc
lods
push
jno
add
xor
out
inc
lret
or
addr16
fidivs
fisttpll
mov
loop
push
lods
and
fnsave
dec
fiadds
xor
jns
xchg
sbb
daa
in
pop
das
push
mov
push
jno
sub
sti
je
sbb
arpl
aaa
jo
out
es
out
ja
cltd
xchg
mov
dec
cld
outsl
push
dec
cltd
pusha
adc
das
sub
ljmp
lcall
xchg
push
sub
push
pop
add
or
pop
dec
or
push
cmp
popf
add
mov
jae
pop
cmp
add
dec
add
inc
pusha
cmp
divb
in
sub
dec
fcmovne
rep
mov
stos
xchg
sbb
sub
lods
xor
jle
in
test
loop
fcmovu
cld
add
shr
cmc
mov
aam
push
xchg
add
mov
push
pop
mov
and
jmp
ss
fdivrl
icebp
jle
jg
mov
cld
pop
push
data16
cld
mov
in
icebp
sub
sarb
mov
push
dec
mov
push
dec
mov
push
add
or
push
out
or
stos
es
cmp
add
pop
add
mov
cmpsb
enter
jbe
mov
mov
shll
xor
push
cld
mov
xor
addl
ss
fstpl
pushf
mov
sub
dec
sahf
je
xchg
andb
cmp
pop
jns
xchg
pop
cli
push
mov
movsl
pop
add
fdivr
pop
add
adc
dec
lock
movsb
fstpl
mov
xchg
ret
sbb
adc
movsb
mov
push
sarb
cmp
pop
imul
xchg
outsl
sbb
dec
mov
and
mov
xor
das
aaa
mov
fimuls
pop
adc
fisubrl
mov
mov
fnstenv
out
es
cmp
aas
sbb
xchg
nop
out
cmp
push
or
adc
inc
stos
jle
xlat
cmp
xchg
xchg
push
push
inc
fdivrl
fwait
imul
xor
xchg
pushf
adc
add
cltd
fimull
jb
xor
mov
push
aas
insb
inc
fisttps
stos
lods
dec
adc
adc
adc
and
jne
je
or
xor
dec
xchg
push
dec
or
gs
push
dec
mov
pushf
inc
mov
pop
movl
lods
aaa
bound
fnstenv
aas
inc
stos
in
inc
mov
xor
dec
dec
jb
cld
or
add
inc
cmp
sbb
push
insb
sbb
hlt
cmpsl
repz
push
mov
push
pop
xchg
push
jb
pop
jmp
or
fmuls
sub
add
and
stos
dec
nop
call
aas
xor
mov
fwait
mov
test
cmp
push
push
push
or
cmp
in
pop
sbb
out
jmp
jp
cmp
pop
pop
pop
enter
stos
adc
and
jno
jnp
mov
pop
dec
pop
jmp
inc
sbb
sub
mov
aas
lods
mov
incl
mov
aaa
mov
in
outsl
push
dec
aam
sub
iret
mov
cltd
lcall
je
adcl
sbb
sbb
out
adc
stc
mov
aas
pop
inc
xor
mov
xchg
andb
pusha
mov
loope
insb
cmp
loopne
jb
push
jl
sbb
inc
add
addr16
add
or
sbb
dec
mov
dec
mov
cli
adc
adc
inc
sbb
sub
cs
cld
mov
pop
mov
dec
pop
cmp
adc
xchg
pop
xor
sbb
push
fistpl
daa
outsl
sbb
dec
jo
jne
test
lret
adc
pop
xchg
sbb
sub
adc
mov
test
pop
mov
cmp
jecxz
insl
ja
cs
pop
mov
fistl
mov
pop
mov
or
dec
pop
pop
stc
dec
adc
sub
mov
bound
xor
push
pop
inc
enter
cmp
sub
push
mov
inc
cmp
pusha
jno
add
pop
push
cli
cmp
sub
imul
and
adc
adc
push
xor
in
adc
dec
aad
pop
test
mov
xchg
sub
repnz
clc
nop
int
dec
sbb
outsl
pop
mov
pop
add
xor
dec
and
xlat
mov
inc
outsb
xor
xor
add
sub
lock
les
pop
xor
fidivrs
shl
and
arpl
loop
int
mov
loop
pop
jg
push
sbb
push
cld
mov
lds
inc
call
push
cwtl
fisttpl
add
mov
or
xorl
adc
fwait
sti
jge
aas
xchg
xchg
xor
sub
mov
fstl
xchg
mov
out
and
cwtl
mov
movsb
pop
lea
sub
or
cmp
aaa
out
push
fnstenv
ret
xor
sbb
pop
loope
mov
cmp
pop
clc
xchg
roll
sbb
dec
mov
push
jbe
outsl
xor
stos
push
fwait
or
cld
ss
adc
or
or
pusha
or
sub
xchg
ficompl
add
push
fs
inc
xor
cmp
inc
inc
xchg
dec
sahf
sbb
lods
movsb
jnp
enter
stos
roll
int
sbb
mov
shrb
adc
sbb
or
mov
or
and
cld
shl
pop
aam
push
js
jnp
outsb
jg
scas
lret
out
lahf
xor
and
add
and
repz
insl
push
sub
inc
push
insl
cld
inc
mov
fucomi
outsb
sbb
mov
mov
lods
es
lds
jnp
jg
test
mov
pop
xchg
cmp
cld
push
das
or
add
mov
pop
mov
cld
inc
imul
add
or
mov
fmuls
jbe
cmpsb
push
jno
dec
shl
push
pop
or
jge
ds
add
pop
add
jae
mov
pop
push
ljmp
add
adc
push
out
add
xor
cmp
push
add
jnp
or
or
xor
flds
mov
pop
inc
push
or
hlt
jl
outsb
lahf
cld
mov
adc
not
jne
xchg
cmp
push
adc
and
jecxz
leave
fmull
xchg
sub
out
pop
push
lods
pop
leave
rcrl
push
cmc
in
jae
js
inc
push
inc
jnp
and
jne
test
sbb
shll
mov
icebp
pop
mov
push
adc
sub
sbb
adc
sbb
push
adc
mov
movsl
jne,pt
es
mov
mov
jecxz
sbb
pop
aaa
rol
inc
mov
xchg
push
jnp
xchg
sbb
xchg
mov
js
mov
sbb
rcl
icebp
push
push
test
push
pop
lds
loopne
add
jns
fnstenv
add
sbb
adc
aas
stos
fwait
jb
or
sub
mov
mov
xor
adc
stc
dec
sahf
adc
pop
push
inc
cmp
and
cmp
mov
xchg
dec
pop
dec
or
pop
dec
scas
add
mov
fwait
rcr
add
pop
jno
push
pushf
cmp
inc
out
in
inc
pop
sub
mov
or
inc
mov
fst
sbb
in
fldenv
ss
xchg
addb
in
and
cmp
xorl
add
dec
jg
xor
mov
jo
out
cmpsb
addr16
fwait
pop
and
shll
outsl
sbb
fwait
pop
or
adc
out
dec
mov
push
jge
push
cld
inc
mov
xchg
rorl
or
or
flds
imul
xchg
test
cmc
stos
pop
cmp
pushf
push
call
dec
push
cld
test
scas
adc
dec
test
fldcw
inc
inc
pop
dec
xchg
inc
dec
cmp
clc
pop
add
ds
xor
fiaddl
icebp
out
sub
lea
mov
or
mov
sbb
cmp
cmp
stos
mov
int
or
pusha
out
push
push
adc
sbb
pop
adc
fstl
mov
adc
and
movsb
jno
fdivrl
gs
loopne
pushf
mov
pop
clc
push
pop
mov
movsb
mov
mov
jno
test
push
or
pop
dec
fists
aaa
ljmp
inc
jo
cmp
add
mov
pop
outsb
popf
xchg
mov
in
movsb
sbb
mov
inc
stc
fwait
cld
jg
movsb
lea
fsubr
push
inc
and
push
and
fmull
push
push
inc
adc
adc
adc
frstor
jl
aas
add
push
decl
dec
cmp
jae
inc
fdivrs
sub
inc
inc
inc
cmp
pop
nop
testl
imul
add
mov
fidivs
sbb
ror
je
mov
out
mov
pushw
pop
mov
fsubrp
call
hlt
xor
xchg
cmp
sbb
ret
ficoms
loop
jmp
scas
jns
scas
inc
dec
hlt
test
les
xor
adc
mov
inc
rep
je
push
scas
imul
stos
std
and
pop
dec
cld
xor
insb
outsl
pushf
sahf
cwtl
mov
mov
or
cmp
nop
xchg
sbb
js
sub
outsl
push
xchg
arpl
push
adc
cmpsb
aas
cmpsl
test
fstl
sub
add
and
xor
or
mov
data16
push
cld
cmp
sbb
push
sbb
xor
mov
or
sbb
cwtl
aas
aam
inc
aas
add
xchg
xchg
movsl
sbb
dec
and
xchg
insl
and
in
adc
sbb
sbb
call
jno
add
cmp
movsl
dec
pop
push
scas
sbb
aam
test
pop
imul
unpcklps
fisttpll
mov
pusha
call
aam
fiadds
mov
loopne
xor
sbb
sahf
notl
push
mov
in
jb
ljmp
mov
mov
loope
pop
mov
adc
repz
popa
ja
lea
fldenv
loope
xor
adc
push
mov
jp
push
xchg
insl
incb
xchg
cmp
inc
ret
pcmpgtw
sbb
xchg
js
or
popl
pop
repnz
arpl
or
adc
and
movsb
adc
and
push
shrl
fsubl
fsubrp
fmull
jle
jns
add
data16
test
mov
xchg
movsb
add
push
fs
test
dec
adc
push
repnz
int
push
call
xchg
pop
adc
cld
dec
je
scas
push
mov
mov
dec
mov
std
cmp
pop
out
jmp
lret
or
cmp
xor
repz
and
inc
mov
xor
push
mov
jecxz
test
cld
lret
sub
test
sbb
sub
pop
je
int3
addr16
lcall
mov
xor
dec
xchg
dec
jae
bound
dec
out
add
in
aas
outsb
mov
mov
pop
jo
push
call
or
xchg
sub
and
xor
mov
je
push
mov
push
push
mov
ds
rcrl
gs
adc
lret
pop
cmp
xor
fs
pop
push
negb
adc
adc
cwtl
sub
cmpsb
adc
cwtl
cmp
ret
mul
push
adc
push
mov
sbb
mov
pop
pop
call
fstpt
mov
andb
aas
cwtl
add
xor
xchg
jecxz
xchg
cmpb
sbb
cmp
lahf
out
or
or
xchg
add
sub
sbb
icebp
sbb
pop
pop
pop
pop
xchg
das
sarl
jnp
mov
push
xchg
adc
inc
sub
sub
push
and
ret
ficoml
push
fbld
xchg
pop
cmp
push
rcrl
cmp
loop
andl
or
fs
leave
xor
push
test
cmp
dec
mov
sbb
mov
into
xor
in
mov
cli
mov
or
pop
dec
lock
and
movsl
and
mov
mov
xor
cmpsl
push
int3
sbb
ljmp
stc
jno
mov
inc
or
lods
push
inc
rorl
cmovl
cli
sbb
call
lods
adc
mov
add
movsb
pop
into
and
cmp
jae
mov
pop
push
pop
movsb
sbb
faddp
pusha
je
cmp
lods
js
and
mov
ret
mov
pushf
jecxz
pop
arpl
fstps
inc
in
inc
aaa
ljmp
sbb
outsl
pop
pushf
inc
and
mov
add
call
and
sub
or
dec
dec
imul
adc
pop
and
xor
into
fs
sahf
movsb
and
push
mov
push
inc
js
bound
push
dec
mov
fcomps
add
push
out
xchg
jl
je
sbbl
inc
repz
mov
ret
aam
inc
sbb
mov
loop
sbb
repz
mov
call
gs
add
ret
jne
ficomps
xor
add
xor
movsl
cmp
inc
xlat
push
fdivl
test
pop
push
inc
les
dec
cwtl
mov
pushf
mov
pop
cld
ds
mov
sarl
xchg
loope
and
or
push
adc
jae
lea
inc
pop
lods
jecxz
rcr
sbb
jo
lods
xor
test
xchg
mov
lret
in
mov
nop
adc
cmp
mov
ret
imul
mov
xor
arpl
loope
stos
cmp
stos
or
mov
cmp
rorb
test
les
push
inc
jl
or
pop
adc
pop
mov
mov
aas
dec
orb
test
dec
dec
les
mov
dec
cli
push
adc
jmp
push
pop
inc
jecxz
adc
pop
js
pop
aaa
xor
jl
mov
adc
iret
rcrb
in
adc
stos
push
dec
push
mov
xchg
lret
xchg
dec
sbb
xchg
filds
push
ret
jnp
call
adc
xlat
push
mov
cmp
dec
or
add
ja
sbb
mov
cmp
loop
sub
pop
dec
and
pop
add
popf
or
mov
popf
inc
dec
dec
push
lcall
sbb
add
mov
cld
adc
negl
mov
fists
mov
xchg
cld
loopne
outsb
mov
mov
mov
cld
pop
pop
push
push
inc
jle
push
je
jb
push
int
jl
push
add
sub
add
add
or
sbb
dec
jg
nop
dec
xor
mov
mov
pop
pop
sub
sbb
pop
push
sbb
fdivl
dec
mov
sbb
sbb
jae
fdivl
subl
lahf
push
jb
xor
mov
in
xor
incb
push
mov
js
inc
sti
js
pop
sub
cmpsb
rorb
inc
dec
cmp
inc
jae
rcrb
sub
add
fwait
jmp
sbb
test
outsl
fisttpl
xchg
cmp
cli
rclb
cmp
rcll
or
loopne
aas
loope
sub
push
push
push
mov
push
and
dec
je
pop
test
outsl
adc
mov
in
jmp
pushf
in
sahf
cmpsl
jb
inc
push
into
push
mov
jecxz
push
cli
jecxz
or
dec
test
push
ljmp
adc
pop
cmp
push
lret
leave
cmp
ret
in
adc
sub
das
inc
pop
test
cli
movsl
push
push
mov
pop
iret
and
and
adc
push
jnp
je
roll
ss
xchg
iret
cmp
mov
pop
stos
ret
dec
adc
mov
fcompp
aaa
imul
aam
out
jecxz
cwtl
sbb
pop
and
pusha
lods
insl
pop
outsb
sahf
dec
fmuls
jp
jg
pushf
jg
clc
adc
test
stos
or
xchg
insl
jg
loop
jne
dec
addb
cmp
xor
xor
pop
push
or
jb
cs
and
push
lods
sbb
sbb
dec
inc
push
and
or
in
jmp
jne
sbb
outsl
adc
fildll
or
xor
mov
aas
mov
shl
int3
int
inc
pop
int3
cltd
mov
add
fldt
mov
jecxz
imul
xorl
sarb
arpl
je
add
js
imul
sbb
imul
sahf
adc
or
aaa
jl
xchg
jg
dec
gs
add
dec
je
mov
xor
xchg
xor
fnsave
push
in
lock
inc
or
mov
xchg
outsb
adc
cld
divl
push
dec
fstl
or
mov
sti
sahf
cmp
lahf
cmc
aaa
or
push
push
out
insb
test
mov
mov
mov
in
and
mov
dec
push
clc
iret
sbb
xor
xor
mov
pop
cmp
xchg
adc
and
adc
jns
pop
faddl
andb
incb
and
call
mov
xchg
add
hlt
dec
adc
lcall
hlt
mov
icebp
clc
enter
push
push
pop
xchg
insl
outsb
sub
add
out
stc
or
sbb
xchg
mov
push
jl
mov
sub
adc
test
mov
jno
ds
push
lods
mov
adc
xchg
xchg
pop
xor
add
popf
push
clc
jecxz
mov
jl
sub
cld
lret
pop
clc
or
mov
or
push
pop
add
and
xchg
outsb
cld
mov
leave
push
jl
pushf
in
sbbb
lret
fdivs
das
jl
sub
adc
or
pop
xchg
push
hlt
ret
add
mov
push
sub
hlt
adc
aas
jg
stos
mov
dec
cmp
ficomps
sbb
dec
xchg
jg
push
cli
stos
mov
push
notl
or
lret
test
aaa
mov
jbe
popf
hlt
mov
mov
xor
dec
loop
or
ja
xor
pop
jne
pushf
rcrb
jecxz
mov
rclb
mov
cmp
push
lcall
dec
mov
aas
push
mov
xchg
xchg
xlat
inc
popa
jl
mov
inc
cmp
or
jb
inc
adc
or
scas
cmp
jno
int
adc
dec
jbe
and
scas
jbe
xchg
push
xor
xlat
clc
fisubrl
dec
dec
sbb
adc
add
push
dec
addr16
xchg
loopne
mov
inc
sbb
or
pop
xchg
rorl
dec
pop
push
push
clc
xchg
add
mov
or
cmpsb
mov
dec
icebp
js
add
imul
jns
jb
pop
ret
cltd
adc
leave
or
pop
mov
pop
sbbb
jne
or
jnp
mov
mov
pop
out
mov
scas
movsl
pop
xchg
outsl
ficoms
pop
dec
or
sahf
or
jl
adc
mov
pop
dec
add
inc
add
xchg
sbb
cld
sarb
nop
into
adc
lods
push
pop
ds
mov
nop
cmp
aas
dec
pop
mov
inc
inc
cmp
fcompl
mov
mov
cmp
sbb
fiaddl
sbb
xor
mov
push
mov
int3
adc
fstpl
inc
int
fstpl
sbb
sbb
push
iret
sbb
cmpsl
outsb
cmp
outsb
bound
mov
add
add
mov
jae
fdivrl
movsl
jnp
insl
xor
ret
mov
sbb
les
fcoms
cmpsb
jbe
add
cmp
pop
cmpsl
mov
and
mov
test
adc
cld
cmp
test
fidivrl
outsl
or
jmp
test
cmp
cmp
cltd
loop
or
lea
add
push
pop
fnstenv
sbb
jp
dec
pushf
xor
push
push
cmpsb
xor
cld
shl
pop
dec
cwtl
cmc
add
ret
push
xchg
or
cs
push
shlb
dec
fwait
sub
or
int
add
mov
jb
push
inc
jecxz
mov
adc
sarl
adc
sarl
push
cmp
cld
push
and
insb
aad
ficomps
shll
pop
cltd
inc
push
cwtl
hlt
sti
inc
data16
push
sbb
pop
mov
sub
add
add
push
test
adc
hlt
test
inc
push
pop
adc
out
push
jo
sub
inc
mov
mov
push
jae
and
cmp
aas
inc
ds
push
adc
fistpll
shlb
pushf
loope
pop
outsb
mov
lds
ret
enter
cmp
outsb
or
mov
les
mov
stos
mov
pop
mov
in
clc
xlat
cmp
pop
and
adc
xor
andl
mov
push
mov
xchg
pop
lret
sbb
outsl
add
jno
scas
pop
dec
arpl
les
icebp
pushf
test
fcomp
sahf
enter
push
mov
cwtl
or
ljmp
dec
mov
push
pushf
xchg
adc
pop
jge
les
cmpsl
xor
test
push
cld
aad
stos
incb
sahf
jno
mov
les
dec
negl
call
mov
mov
andb
push
add
or
sub
cmp
cmpsl
xor
xchg
add
xor
jmp
and
lock
stos
mov
cli
adc
mov
cld
push
inc
aas
adc
enter
test
push
stc
lods
fneni(8087
jecxz
les
cmp
lods
pop
pop
scas
ds
adc
push
add
aas
aas
pop
sub
sbb
inc
popf
dec
push
pop
xchg
pop
or
lea
inc
stos
cmc
inc
pop
xor
mov
mov
clc
arpl
pop
jbe
xor
jns
cwtl
hlt
test
add
mov
cli
shll
pop
aam
mov
sub
cltd
pop
fcomi
sub
sbb
push
je
sar
cmp
pop
inc
and
dec
lret
imul
pop
sbb
movsl
xchg
iret
adc
movsl
adc
xchg
dec
sbb
es
cmp
sub
aam
push
or
test
and
dec
sbb
adc
inc
add
popf
fcoms
cmp
push
and
dec
cmp
mov
or
adc
dec
pop
adc
or
fs
dec
push
pop
mov
pop
sbb
add
test
fisttpll
dec
test
add
and
scas
out
mov
add
cwtl
xchg
inc
orl
adc
fstl
jl
cwtl
add
jb
std
mov
xor
sub
jo
lahf
mov
cmp
xchg
xor
xlat
dec
pop
inc
pop
js
and
sahf
mov
push
push
insb
mov
xor
dec
dec
sbb
sbb
shll
jo
adc
xchg
jl
sub
jb
dec
je
adc
xchg
jbe
cwtl
pop
popa
or
inc
popf
cmp
mov
mov
mov
or
lret
sbbb
cmp
xlat
xchg
jb
xchg
shrb
dec
cltd
jnp
xor
xchg
sub
fisubl
pushf
pop
dec
sbb
cmpsb
mov
jno
jns
mov
fstl
loopne
insb
adc
clc
mov
subb
mov
sub
mov
pop
inc
icebp
mov
cmp
xchg
or
jmp
rcrb
push
mov
mov
push
xchg
dec
adc
cmp
outsb
or
loop
push
xor
adc
dec
jl
lds
fiadds
dec
mov
fs
enter
and
aam
or
fwait
int3
sub
xchg
test
pop
or
sub
xchg
inc
call
adc
pop
add
add
shr
jno
imul
and
dec
and
add
pop
sbb
outsb
pop
rclb
dec
inc
and
and
or
in
sbb
sub
jg
flds
jnp
inc
les
add
jb
cld
mov
pop
and
jp
or
lret
js
mov
pusha
xor
hlt
mov
jl
cmp
testl
jge
pop
add
pop
mov
jo
xor
cmp
adc
xchg
cmpsb
ja
leave
and
aad
es
dec
cmp
pop
ficoms
fdivl
pop
aaa
out
test
mov
or
push
dec
sbb
mov
daa
adc
and
cmp
pushf
rcrl
xorb
mov
jno
iret
cmpb
insb
icebp
pop
mov
mov
jmp
test
sbb
js
adc
xchg
dec
aad
mov
pushf
or
fwait
sub
jnp
je
hlt
dec
js
imul
cmp
es
or
dec
mov
or
add
out
jbe
aas
popf
out
pop
or
dec
cmp
xchg
adc
or
cmp
dec
inc
inc
and
inc
xor
js
jl
fdivl
pop
je
ljmp
mov
insb
dec
dec
sarb
fsubrp
sub
hlt
push
mov
cmp
mov
push
fnstcw
xchg
push
cmp
adc
nop
nop
cmp
push
or
jne
fwait
mov
out
pushf
cmp
ret
jecxz
inc
scas
and
xchg
pop
and
mov
jecxz
ja
mov
xchg
dec
dec
mov
sbb
xor
ljmp
outsb
cld
adc
inc
adc
popf
insb
mov
jo
cmpsl
cwtl
push
mov
push
jnp
xor
sub
call
movsb
pushf
dec
push
scas
js
daa
dec
add
sbb
enter
rorb
adc
pop
mov
sbb
in
mov
mov
xchg
pop
cld
and
pop
sbb
ret
or
jb
hlt
adc
xchg
fdivrl
loopne
nop
push
add
lcall
adc
mov
pop
push
sbb
in
adc
xchg
js
add
add
dec
mov
xchg
lahf
rorl
jp
roll
aaa
aam
inc
in
aam
out
inc
cmp
lods
dec
cmpsl
lock
adc
scas
mov
push
mov
aas
push
or
imul
popf
adc
inc
add
popf
xchg
call
mov
test
nop
cmp
inc
mov
adc
andb
fmull
xor
frstor
mov
movsb
sahf
pop
fdivrs
lods
mov
sbb
movsb
insl
push
cmp
sbb
aam
fcmovbe
and
jg
push
sbb
int3
repz
mov
mov
push
push
jecxz
xchg
hlt
popf
mov
call
inc
sbb
arpl
mov
sbb
sbb
xchg
pop
mov
fsub
inc
xchg
dec
in
cmc
mov
xor
or
das
mov
adc
mov
cld
fnstcw
loop
loope
addr16
sbb
add
call
iret
pushf
iret
popf
ret
repnz
das
sbb
cmc
cmp
nop
or
cli
push
fsubrs
fcompl
pop
cmpl
gs
movsb
and
push
lods
push
add
imul
sbb
ret
push
iret
dec
js
push
dec
clc
pop
pop
mov
call
pushf
inc
inc
mov
jae
and
pusha
int3
mov
in
data16
inc
outsl
dec
lds
jmp
mov
sub
movsl
mov
xor
loopne
dec
adc
sub
lret
nop
ret
and
insl
sbb
and
adc
addr16
push
inc
dec
pusha
adc
dec
push
adc
lret
push
fisubl
dec
lods
fiaddl
pop
stos
sub
adc
sbb
sbb
sbb
add
nop
adc
fcomps
sbbl
sbb
enter
cmp
xor
push
mov
cmp
sbb
cmpsb
mov
sbb
enter
cmp
lcall
test
ret
lcall
into
mov
push
int3
aam
popf
and
xchg
jb
int
jp
push
scas
push
in
mov
sbbb
fcmovb
mov
sahf
push
pop
xor
jecxz
pop
xchg
arpl
push
scas
fistpl
sahf
pop
mov
mov
mov
aas
dec
je
xchg
sti
xchg
js
and
movsb
sub
cmp
lods
jo
push
push
test
iret
sbb
mov
stos
or
cmp
pop
cwtl
cli
mov
int
adc
rcr
aad
je
scas
shlb
or
dec
pop
mov
pop
outsl
adc
nop
xor
dec
add
mov
jnp
or
push
adc
adc
push
mov
and
add
adc
cltd
fldl
cmpb
bnd
mov
scas
insb
popf
adc
mov
mov
loopne
cwtl
cmp
mov
dec
sbb
je
xchg
xchg
lret
addb
jns
xchg
outsb
into
or
xchg
mov
pcmpeqw
pop
mov
jne
pop
mov
dec
cld
jbe
add
stc
inc
clc
push
cmp
pop
pop
adc
mov
xchg
mov
inc
ficompl
clc
pop
sbb
lcall
insl
outsl
xor
xor
roll
push
mov
std
adc
adc
shrl
xor
inc
jp
ret
jno
push
or
dec
ret
sbb
push
fs
jmp
jge
test
jmp
sbb
enter
dec
fistl
cmp
xlat
shll
jmp
inc
nop
add
adc
mov
sbb
sbb
cmp
mov
cmp
test
dec
pop
adc
pop
and
jmp
in
mov
popf
cmp
sbbl
xchg
aad
sti
cmp
pop
pop
lcall
inc
fcoml
out
es
adc
pop
outsb
mov
fcompl
cmp
inc
mov
sub
js
sbb
push
cltd
popa
movsb
pop
insb
jecxz
xchg
out
fwait
dec
std
movsb
mov
js
adc
jae
ret
aam
js
adc
pop
insb
mov
in
ficompl
push
sub
movsb
out
insl
scas
adc
mov
ret
mov
jmp
sti
add
add
in
or
dec
outsl
xchg
inc
mov
test
inc
test
mov
mov
mov
mov
mov
xor
xchg
adc
test
mov
loopne
insl
cld
in
repnz
in
xchg
pop
pusha
dec
push
push
xor
scas
push
push
push
mov
jnp
mov
cmpsb
pop
mov
add
sbb
sbb
lock
adc
jg
sub
inc
mov
push
fcomps
imul
and
add
cmp
add
pushf
cmc
outsl
pop
add
pop
mov
push
lock
jmp
outsl
or
push
aas
decl
inc
ret
sbb
lods
or
in
mov
inc
movsb
jecxz
stos
addb
push
mov
movsb
lahf
repnz
cmc
andb
xchg
dec
mov
sbb
int
sahf
dec
cmp
xor
push
dec
jg
jg
sbb
mov
adc
rcrb
inc
shlb
pop
mov
out
test
xor
out
cmp
push
fcoml
ds
cmp
adc
popf
mov
xchg
dec
sub
adc
fdivrs
push
or
popf
lahf
inc
add
imul
push
out
add
pop
clc
lcall
sbb
fcomps
loope
rcrb
adc
mov
pop
sahf
hlt
sub
fildll
loop
mov
aaa
jno
or
enter
pop
pop
sbb
mov
cmp
push
dec
dec
mov
ret
push
mov
mov
xchg
push
sub
xor
mov
loope
inc
leave
dec
in
mov
mov
sbb
lcall
pushf
cmp
push
sbb
xor
leave
fwait
inc
push
ljmp
sbb
adc
pop
and
sub
push
inc
into
mov
xor
adc
or
dec
add
xor
je
sub
mov
ja
fs
and
jmp
jo
popf
jae
sub
pop
and
sub
xchg
lods
or
mov
lds
fisubrl
push
jp
ja
shll
pusha
test
inc
mov
mov
gs
mov
fcomps
pop
lcall
sub
adc
fistps
bnd
and
xchg
lret
fistpll
sti
dec
mov
xchg
add
mov
jb
cli
test
movsl
lahf
pop
dec
fbstp
mov
add
and
dec
call
aas
clc
sub
call
push
jl
movsl
ret
cmpl
pushf
pop
test
push
add
addr16
insb
fdivl
xor
mov
jo
xor
daa
push
addr16
push
mov
stos
jmp
mov
jecxz
mov
fisttps
loope
xor
ret
pop
cwtl
mov
push
inc
adc
call
fs
les
popa
lock
mov
popf
fadd
stos
outsb
loop
inc
and
popa
sub
cmp
fs
data16
sarl
call
pop
and
mov
aam
fsts
lea
push
dec
sbb
pop
bound
jge
or
and
arpl
sub
sbb
or
push
fldcw
push
jae
adc
and
add
sbb
xor
inc
lret
jbe
clc
push
in
sbb
and
pusha
adc
shll
repnz
pop
adc
xchg
xchg
andb
sub
push
adc
hlt
xchg
incb
adc
xor
mov
mov
stos
push
or
mov
data16
push
je
iret
ror
sub
cmp
js
fistpl
mov
aas
hlt
jae
push
and
pusha
rep
jb
dec
data16
pop
and
loop
ret
cmc
popa
sahf
andl
ds
jg
dec
mov
push
dec
in
imull
add
sub
cmp
cld
adc
pop
shlb
sbb
out
xchg
or
outsl
pop
add
pusha
repnz
or
cmpl
js
push
pop
lea
push
lret
dec
push
xchg
cmc
movsb
psllw
xor
jg
inc
pop
dec
inc
cwtl
cmpsb
roll
inc
adc
loopne
jns
out
notl
adc
pop
insl
mov
pop
dec
sub
pusha
lods
xchg
insb
aam
movsl
ffreep
xor
test
lahf
sbb
jl
xchg
js
jns
nop
bound
adc
or
jle
or
lods
bound
jmp
push
add
fdivrs
push
cmp
pop
jle
sub
lock
adc
pop
loopne
pop
jg
es
jg
into
pop
outsl
sti
bnd
popf
repz
push
xchg
lcall
dec
pop
div
inc
mov
xchg
pop
movsb
cmpsl
push
mov
icebp
movsb
adc
adc
sbb
mov
xor
fsubs
mov
and
shll
and
mov
cmp
or
jle
pop
jp
adc
or
or
mov
dec
cmp
xor
call
sbb
mov
push
or
xchg
pop
dec
cmp
add
fdivrl
cmp
or
xchg
in
or
fs
sahf
pop
pushf
cmp
xchg
cmp
cmp
cmp
mov
pop
mov
cmpb
xor
push
mov
mov
cmp
cmp
dec
inc
je
dec
push
sub
cmp
inc
mov
add
lcall
mov
loop
mov
lcall
sub
inc
pop
jmp
pop
pop
cmc
mov
or
cmp
cmp
jl
fstpt
in
sub
lcall
adc
fcompl
popa
adc
dec
mov
mov
leave
in
js
cmp
js
aam
aaa
icebp
pop
outsb
jl
mov
adc
cmp
add
and
xchg
inc
or
test
lret
js
adc
orl
xor
and
dec
mov
push
sahf
imul
gs
fwait
lock
leave
sub
aad
cmp
adc
pop
sbb
inc
jns
and
lds
and
cld
push
leave
jne
fnstsw
sbb
xchg
das
in
fistps
inc
or
pop
mov
jae
cmp
and
mov
repnz
ficompl
and
fstpt
ljmp
rcll
aam
scas
pop
fisubrl
pop
mov
xor
adc
repnz
lahf
sub
adcb
sbb
repnz
sahf
xor
fwait
lock
or
insb
cld
clc
pop
cwtl
adc
sub
xchg
je
popf
lahf
call
jmp
push
xchg
loope
sbb
out
mov
xchg
inc
cmc
cwtl
in
popa
adc
dec
add
cmp
cmp
mov
xor
push
add
pop
sbb
or
jle
inc
and
cmpl
adc
sub
inc
sbb
pop
push
xor
jae
push
or
repnz
mov
mov
sahf
insb
je
pop
jo
in
cld
cmp
and
cmp
out
or
sub
movb
inc
shll
repz
dec
outsb
nop
jno
popa
out
xchg
outsl
adc
adc
xor
repz
mov
cmpsl
lock
xor
push
push
pusha
sub
add
mov
out
cs
mov
dec
cmp
xor
fmuls
les
data16
icebp
mov
ja
add
mov
adc
pushf
dec
adc
cld
sti
or
into
jns
adc
sub
cld
daa
xor
mov
push
push
arpl
mov
sub
dec
mov
sub
test
fcoms
pop
loop
shll
inc
add
sub
mov
cmpsb
daa
cwtl
cmp
add
jmp
add
inc
push
cmp
jo
push
fistps
dec
mov
xchg
inc
mov
je
clc
in
dec
inc
sbb
jl
xorl
imul
push
gs
xchg
mov
xchg
daa
jo
cli
decb
cli
mov
insb
in
inc
mov
push
sahf
lods
ljmp
mov
in
cwtl
shl
out
inc
mov
or
push
mov
push
testb
lea
xchg
aas
sbb
mov
addl
js
mov
cs
push
ss
lret
dec
cmpsb
fdivl
jge
xor
sbb
adc
xchg
xchg
ds
incb
or
ds
das
add
bound
outsb
cld
and
or
mov
push
aam
negb
addl
sbb
cli
push
scas
xor
pop
mov
adc
lahf
cwtl
ficoms
rol
mov
dec
jb
dec
into
sub
sub
mov
outsl
cmp
fmul
ficompl
aas
adc
push
push
fisttps
sub
loopne
int3
outsb
mov
je
les
pop
je
hlt
xchg
and
out
sbb
xor
mov
icebp
enter
mov
pop
dec
or
and
scas
xor
mov
or
fiaddl
xchg
mov
pusha
sbb
in
lcall
addr16
cmpsl
lret
fstpt
dec
cld
xor
cmp
and
add
inc
cmp
dec
or
fisubs
inc
push
and
enter
fistpll
fmull
ret
add
xchg
fs
xchg
sbb
push
mov
inc
inc
or
pop
cmp
imulb
jecxz
mov
jne
in
dec
mov
mov
push
test
pop
sbb
pushl
mov
inc
pop
mov
mov
push
push
js
pop
sahf
push
and
pop
sbb
nop
pop
or
or
mov
or
cmpsb
xor
sbb
push
pop
filds
popa
or
sar
pop
cmp
xor
js
fimuls
fadd
pop
or
out
js,pt
push
pop
cwtl
aas
dec
mov
cwtl
hlt
add
aaa
fcoms
xor
fwait
sbb
pop
mov
jle
inc
aas
aaa
ljmp
push
cltd
sub
or
or
push
je
cld
or
jg
add
rolb
push
clc
aaa
inc
adc
pop
mov
and
xchg
pop
push
jle
rcr
mov
sahf
cmp
push
lds
pop
lcall
sbb
in
les
mov
cmp
xchg
js,pn
sbb
dec
sbb
into
adc
in
or
test
sbb
mov
add
cmp
loope
push
adc
sahf
mov
lock
je
mov
or
sbb
call
mov
data16
jg
fwait
jbe
int
pop
mov
inc
aas
sbb
pop
pusha
pop
ds
or
cmp
jl
xor
icebp
mov
out
cmp
hlt
inc
xchg
pop
inc
daa
sub
jno
mov
cmp
rcrl
sub
adc
fs
fsubrs
jl
sbb
cld
ret
test
cwtl
pop
icebp
cli
adc
adc
inc
js
fwait
fwait
xor
mov
sahf
pop
test
cmp
mov
in
xchg
xor
mov
ljmp
sbb
adc
xor
push
repnz
in
mov
fistps
pusha
mov
add
jbe
or
mov
hlt
mov
mov
mov
pop
clc
pop
sbb
aaa
mov
lock
jg
cmp
jle
adc
pushf
test
pop
daa
das
mov
push
test
mov
pop
mov
test
adc
mov
clc
sub
lret
add
or
sarb
les
cld
or
adc
call
loopne
mov
add
mov
sahf
insl
adc
push
push
mov
mov
adc
add
cmp
out
pop
pop
cmp
cmp
pushf
xor
sub
idivl
ucomiss
cmp
popf
sbb
push
pop
cmp
push
cmp
dec
adc
pop
inc
cmp
inc
pushf
js
jl
jo
das
je
dec
push
cmp
fmul
jp
sub
or
pop
movsb
pusha
fists
push
mov
inc
xor
nop
adc
pushf
mov
mov
pop
test
mov
sahf
pop
mov
test
lods
pushf
mov
pop
ficompl
pop
fdivrl
rorb
aam
enter
sbb
cwtl
pop
les
clc
adc
fdiv
pop
hlt
cmp
or
or
sahf
les
or
push
and
cwtl
pop
or
or
add
pop
cmp
xor
xor
sub
nop
pop
and
and
pushf
pop
pop
pop
jp
sub
push
cwtl
pop
dec
cmp
pushf
inc
fdivrs
js
jl
jo
pop
je
daa
push
dec
out
xor
loop
push
lcall
sbb
dec
stos
sahf
inc
mov
pop
mov
call
sbb
and
adc
sub
addr16
or
adc
sbb
frstor
jmp
fwait
mov
xchg
push
pusha
outsb
sahf
push
add
mov
aam
add
sbb
aaa
stos
cltd
inc
inc
pop
sbb
out
test
xchg
sub
lret
mov
js
adc
xchg
sub
xor
jge
jle
inc
or
pop
jg
popl
fldcw
xchg
mov
ret
sbb
out
fs
js
push
sub
inc
add
push
sbb
xchg
cmc
insb
add
les
cmp
inc
aaa
cmp
std
or
ss
xor
cld
inc
xchg
ljmp
repz
in
popa
mov
mov
cmpsb
stos
mov
sub
out
xchg
add
in
and
mov
pop
sti
cwtl
push
adc
adc
or
adc
mov
cltd
mov
adc
icebp
sti
or
pop
pushf
sbb
lods
lds
inc
mov
or
dec
dec
or
nop
pop
in
mov
test
xchg
push
mov
lcall
inc
dec
xchg
in
repnz
push
cld
das
jns
shl
pop
mov
sbb
jb
sbb
jl
or
cmp
inc
push
cs
cwtl
icebp
lret
sub
dec
je
pop
sub
xor
sub
stos
mov
push
and
dec
outsb
cmp
mov
or
out
add
inc
dec
dec
xchg
ds
fstpt
mov
inc
xor
inc
xor
inc
subb
sahf
pop
xor
sbb
sub
pop
pop
fldt
push
lret
push
push
pop
dec
lcall
push
dec
icebp
pop
cmp
pop
fdivrp
fstps
sbb
sub
add
and
lea
ds
or
pop
cli
jl
or
or
pop
int3
dec
js
sbb
push
pop
movsb
push
pop
lds
insb
in
mov
rolb
inc
push
push
push
xor
cwtl
nop
into
addr16
or
push
and
fwait
cs
add
or
cmp
stos
mulb
dec
push
stos
sbb
cmp
push
jl
or
xchg
dec
push
insb
rclb
mov
fisubrl
ljmp
mov
cld
lret
mov
and
jnp
mov
cs
jo
or
aad
sub
or
push
dec
sub
icebp
sub
cmc
nop
movsb
mov
pushf
sub
aad
sub
lahf
aam
add
and
mov
cmp
fisubl
and
nop
cmp
cwtl
jo
loopne
pop
and
jo
cmpsb
jg
mov
jecxz
les
and
insl
push
cmp
or
adc
insb
push
pop
cld
iret
lret
sub
mov
ljmp
sub
lret
inc
inc
insl
fstpl
loope
movsl
cli
add
adc
pop
jae
lea
sub
pop
punpckhbw
cld
jge
jo
or
loop
ss
int
jo
mov
adc
jb
leave
push
jb
adc
fdivrs
sbb
or
or
xchg
addr16
pop
in
sub
cld
das
pusha
cmp
or
pusha
leave
sbb
enter
ljmp
sbb
data16
inc
in
mov
jb
jp
sbb
in
pusha
notb
cmp
or
testb
jge
cmp
stos
cmp
stos
hlt
push
pop
and
sbb
mov
aam
or
negb
pop
sbb
cmp
arpl
aas
push
fistps
push
xchg
pop
or
mov
pop
or
out
pop
cmp
or
adc
popf
aas
addl
dec
jno
push
je
insl
shr
loope
call
test
int
lahf
xchg
mov
or
fcoml
mov
sub
mov
dec
or
jmp
mov
ret
inc
add
adc
dec
lret
mov
mov
jl
jne
into
cld
pop
pop
icebp
test
add
cwtl
test
int3
mov
aas
sub
arpl
push
and
sbb
mov
add
faddl
pop
pop
push
sub
imul
mov
leave
lahf
jl
cmc
jo
xor
push
mov
add
sar
push
mov
adc
adc
fistps
xor
and
dec
cld
push
mov
hlt
inc
mov
mov
dec
stos
ja
imul
stc
insl
scas
fmull
fwait
cmp
and
and
sbbl
push
stos
jecxz
or
pushf
xchg
dec
pushf
jecxz
inc
and
add
call
cmp
sub
adc
popf
pop
gs
cmp
mov
sbb
pusha
hlt
cwtl
lods
dec
das
mov
mov
and
inc
int
stc
sbb
mov
outsl
xchg
lcall
dec
into
dec
in
xlat
pop
pop
bound
ret
jnp
add
jle
adcb
and
es
sbb
enter
lret
dec
flds
lock
xchg
leave
dec
icebp
bound
fidivrs
cld
inc
mov
icebp
les
push
and
jl
fdivs
or
xchg
mov
pop
and
insl
fdivrs
and
xor
xor
bound
sarb
sbb
pop
pop
test
test
jecxz
dec
pop
pop
fnstenv
push
out
inc
stos
outsb
fnsave
sub
pop
and
adc
lret
adc
or
or
sbb
cwtl
pop
out
pop
mov
shl
cmp
ja
sbb
add
mov
sub
or
lret
out
bound
xchg
xchg
adc
shlb
sbb
push
add
jp
fstpl
xor
pop
into
rcr
movsb
sahf
pop
fs
repz
jne
inc
xchg
push
test
mull
scas
fists
orl
push
adc
imul
movsb
xchg
or
fdivrs
sub
cwtl
outsl
adc
cmp
lds
adc
sbb
inc
insl
arpl
xor
test
fidivs
sub
add
fstps
lods
call
outsl
sbb
sbb
mov
pop
dec
xor
aam
das
leave
mov
shl
cmp
dec
and
sbb
xchg
lret
mov
or
mov
das
mov
xlat
jb
cli
pop
add
dec
sub
adc
sub
xchg
jbe
inc
fistl
jl
ds
mov
pusha
jno
or
imul
push
int
mov
add
gs
dec
test
or
dec
dec
or
js
test
adc
popa
aam
iret
mov
inc
add
popa
mov
inc
imul
push
dec
add
cmpb
push
pop
or
sti
in
jl
mov
in
sbb
add
jge
or
jp
ds
pop
lret
sbb
xchg
stos
add
aad
mov
add
aaa
xchg
jnp
or
add
ds
je
test
flds
cmp
and
mov
dec
jmp
aas
clc
repz
add
inc
sbb
push
mov
je
test
ja
push
and
lret
sbb
push
and
jle
movsl
fisubl
inc
mov
push
or
add
outsl
adc
dec
adc
insl
adc
xchg
and
adc
jle
out
xchg
into
add
je
movsb
movsb
sahf
xchg
imul
outsb
or
adc
sub
and
inc
mov
ljmp
jg
xor
xchg
adc
sbb
sbb
lds
adc
jbe
stos
ljmp
pop
fs
mov
add
sbb
rcl
fs
mov
push
adc
adc
repnz
push
mov
pusha
sbb
stos
out
sub
inc
ljmp
push
aaa
rorl
mov
and
arpl
aaa
sub
sbb
ds
inc
push
add
push
shr
and
dec
aaa
sub
sahf
pop
cmp
jns
faddl
sbb
mov
or
push
xchg
pop
ljmp
loop
cmc
push
dec
xchg
inc
sbb
aaa
jp
dec
add
jne
dec
cmc
sub
push
in
xor
rcll
aad
jg
roll
fidivrs
cmp
xor
mov
xchg
pop
dec
xchg
int
sbbl
lds
dec
jb
test
jl
lea
jge
jae
or
inc
jl
les
dec
mov
out
loopne
xchg
jne
cmp
adc
adc
jmp
aad
or
sbb
dec
jnp
repz
data16
pop
repnz
fdiv
pop
ja
sbb
out
dec
insb
add
inc
hlt
popf
jne
xchg
dec
inc
xchg
fidivl
xor
arpl
xor
mov
dec
jae
adcb
and
fimull
lret
dec
cmp
lret
mov
mov
mov
cwtl
sub
fnsave
dec
scas
pop
fldenv
loopne
pop
cltd
cmp
sbb
lock
pop
mov
jecxz
xchg
dec
adc
les
cmp
decl
enter
into
jne
inc
add
ret
inc
push
sahf
xchg
push
xor
mov
sbbl
inc
cwtl
or
adc
mov
inc
enter
call
push
add
fwait
pop
dec
xor
mov
mov
push
rcll
dec
iret
and
aas
and
xchg
jne
push
lds
inc
pop
or
lcall
cmp
movsl
sub
lret
sbb
mov
dec
cs
loope
or
test
shl
dec
addr16
fmuls
cmp
pop
adc
popf
sbb
pop
je
pop
xchg
xchg
pop
out
hlt
dec
inc
outsb
jae
push
shll
lahf
mull
adc
mov
or
pusha
add
outsl
sub
sbb
sbb
sar
inc
xrelease
dec
and
xchg
aam
mov
pop
add
mov
out
fsubrs
dec
das
xchg
xor
sbb
out
std
sbb
cmp
add
sub
aad
js
pop
mov
adc
push
lea
icebp
cltd
xorl
push
dec
and
shlb
cltd
or
sbb
cmp
or
repnz
cmp
xchg
and
sbb
push
adcl
pop
test
cld
add
cmp
adc
pop
repz
aaa
test
add
fistl
aas
add
adc
cmp
clc
mov
in
pop
xchg
mov
std
lret
or
mov
mov
sub
xchg
jmp
test
imul
and
cmpsl
ficompl
xor
or
inc
cmp
dec
das
cmp
and
dec
hlt
aam
dec
mov
jns
adc
add
mov
inc
mov
sahf
mov
lock
jge
sub
dec
adc
sbb
lahf
mov
inc
gs
push
pop
xlat
fimull
xchg
sbb
int3
lea
aam
sti
in
loopne
xchg
data16
mov
or
add
pop
fucomp
lods
xchg
sbb
mov
push
inc
in
leave
roll
push
push
lea
mov
cmp
sti
lods
push
sarl
pop
ret
enter
sbb
hlt
popf
out
dec
inc
and
cmp
adc
lea
mov
jo
add
in
xchg
and
in
inc
xor
adc
aam
fdivs
cmp
adc
cmp
aaa
add
lds
fbld
inc
or
leave
into
inc
mov
and
lods
sub
add
mov
test
cli
xlat
lds
cmpsl
daa
addr16
dec
stos
aad
lret
das
cmp
xchg
adc
inc
inc
push
and
repnz
jb
cmc
rolb
push
in
in
je
mov
test
push
push
mov
add
andl
movsb
sbb
in
jg
pop
mov
outsl
or
stos
add
and
call
push
shrl
mov
data16
jnp
xor
mov
addl
adc
inc
cmp
push
in
mov
jmp
mov
fsubr
test
in
fsubl
fmull
cmp
push
push
dec
dec
je
adc
sbb
inc
xchg
pop
dec
xor
mov
lret
push
lock
or
mov
testb
sbb
pop
xor
cmp
fs
jae
push
pop
movsl
rcrl
and
in
push
gs
dec
insl
dec
push
pop
dec
js
icebp
popa
inc
add
push
cmp
adc
repz
adc
push
lds
xchg
push
sbb
mov
xchg
adc
sub
repnz
popa
int
sbb
mov
cmp
sbb
pop
fwait
xor
dec
or
loope
push
lds
jmp
test
xor
outsl
xor
mov
daa
push
pop
push
pop
push
push
jl
adcl
xchg
push
mov
xchg
inc
add
sbb
sub
jnp
add
inc
fnstcw
cmp
sbb
pop
cmpsl
repnz
jns
cli
push
or
pop
cwtl
out
cltd
push
call
push
jle
outsb
jo
and
or
fsubs
mov
cmp
push
testl
imul
pop
xchg
lcall
adc
xlat
cld
stc
cmp
icebp
mov
and
xor
mov
fwait
pop
in
inc
aam
adc
sahf
jns
adc
das
jns
xchg
mov
sub
and
cmp
push
and
addr16
xchg
mov
push
pop
lods
sub
es
pop
cmc
inc
inc
mov
adc
mov
call
arpl
in
call
or
jmp
adc
lea
cld
and
mov
iret
fisttps
leave
aam
pop
iret
push
add
mov
test
or
cli
mov
aas
ret
insl
xchg
xor
jno
xor
sbb
out
sub
and
out
xchg
push
ret
cltd
aad
push
divb
shr
xchg
filds
jbe
ss
mov
adc
rcll
sbb
fidivs
bndldx
xor
xchg
fimuls
push
xor
test
mov
adc
fwait
testl
jbe
pop
lods
mov
dec
lea
adc
icebp
out
jmp
jbe
daa
sbb
dec
lods
test
pop
adc
ret
xchg
inc
cwtl
nop
jmp
mov
push
fidivs
mov
cmp
ret
lods
loope
popf
push
rcl
or
call
or
test
cmp
add
outsb
sub
dec
adc
push
and
jne
adc
mov
dec
addr16
adc
repz
dec
mov
lret
xchg
inc
insl
lea
mov
sbb
sub
aas
cmpsb
jmp
sub
cmp
and
rcll
fisttps
aam
sbb
sbb
imul
cltd
movsb
or
jle
sti
cli
lods
cs
push
cmp
stos
hlt
dec
push
cmp
sub
inc
mov
in
push
je
stos
test
jg
mov
icebp
xchg
mov
in
push
jg
cmp
and
aaa
repz
jl
xchg
gs
inc
mov
movsb
or
mov
and
xchg
aaa
xchg
in
pop
mov
sti
xchg
xchg
push
cmp
hlt
out
lret
lahf
push
add
test
push
cmp
sbb
fnstsw
or
faddl
insl
nopl
and
adc
push
aad
fcmovnbe
xchg
test
xchg
ror
add
cmpsb
cld
mov
adc
test
in
in
pop
cltd
testb
fidivrl
xchg
flds
pop
xor
pop
xchg
push
outsl
test
pop
fmuls
daa
push
xor
flds
inc
ffreep
adc
push
jg
ljmp
cmp
xchg
or
out
mov
cmp
pop
mov
dec
cmp
dec
or
lods
loope
daa
pop
adc
clc
rorb
ss
dec
push
dec
dec
add
or
pop
les
hlt
xor
shr
jo
jmp
aaa
cld
mov
lds
pop
test
mov
mov
bound
out
fistps
jmp
mov
sub
adc
jmp
and
loopne
fsubrs
cwtl
arpl
mov
cmp
ret
sub
push
adc
int3
outsl
sbb
pop
cld
fsubr
mov
xor
repnz
or
cld
aas
pop
push
add
push
nop
inc
icebp
lret
push
sbb
aaa
sub
inc
inc
fnstenv
in
sbb
out
hlt
stos
sub
sbb
leave
loop
outsb
add
fidivrs
sbb
scas
inc
pop
jnp
sub
or
es
mov
jno
inc
js
aas
fistps
push
aad
mov
scas
pop
mov
adc
sub
sti
push
sbb
test
test
lret
sub
fwait
xchg
push
mov
out
push
push
mov
int
hlt
adc
adc
clc
add
fwait
ja
xor
mov
ss
ret
push
or
xlat
and
xorl
push
sub
sub
sbb
jb
pop
and
out
aaa
pop
adc
outsl
pop
ficoml
mov
insb
daa
aas
sahf
pop
shl
dec
xchg
les
clc
push
test
loope
fs
fidivs
xor
dec
sbb
aas
add
orl
testl
js
cmp
and
cs
lret
or
int
xchg
push
inc
sar
pop
lods
imul
lea
dec
out
dec
push
in
ret
xchg
pop
sbb
cmp
aaa
lcall
or
inc
inc
jecxz
fcoml
push
mov
adc
mov
pop
pop
xchg
je
or
nop
xchg
insb
inc
sbb
mov
jmp
push
lods
mov
add
dec
cmpsl
jmp
jl
sahf
int3
mov
out
adc
xchg
js
jl
sbb
cld
repnz
rcl
inc
sbb
pop
in
pop
loopne
xchg
lret
fbld
dec
mov
fbstp
dec
pop
adcb
adc
add
inc
cld
sahf
scas
repnz
testb
int3
test
shlb
pop
mov
hlt
ficompl
cld
mov
lahf
adc
sbb
or
sahf
sbb
or
push
xchg
movsb
mov
aaa
fstpl
cmp
inc
or
cmp
clc
pop
jp
push
pop
inc
cmp
arpl
mov
insb
clc
mov
jg
cmp
push
cld
jecxz
or
mov
mov
cmp
fildl
or
pop
add
pop
clc
sub
ljmp
jo
cmp
inc
cwtl
pop
into
cmp
rcr
sbbb
mov
test
cld
and
jp
arpl
adc
cld
dec
aam
mov
jo
xor
cmp
xchg
xchg
mov
mov
cmpb
je
cld
popa
push
jnp
mov
push
push
cld
sub
cmp
xchg
rcr
aam
xchg
and
lret
rolb
dec
lret
add
arpl
push
inc
mov
ljmp
sahf
dec
les
clc
mov
lock
sahf
pop
call
sbb
jl
dec
push
scas
push
imul
push
mov
cltd
mov
xor
dec
or
or
pop
add
pop
cmp
xchg
rcl
sub
cmp
xor
int
divb
or
rorl
lods
decb
dec
mov
loop
in
inc
jecxz
mov
sbb
shl
add
aaa
aaa
or
outsb
fdivr
add
add
inc
sbb
imul
mov
xor
sbb
insb
mov
push
adc
pushf
xchg
pop
loop
aam
in
out
stos
dec
and
pop
mov
adc
hlt
cs
push
inc
adc
in
mov
xor
aas
aam
dec
sbb
ret
in
shlb
ret
repz
xchg
dec
shlb
jb
or
cmp
inc
or
dec
call
add
cld
cmpb
sahf
stos
adc
movsl
iret
xchg
pop
ds
outsl
adc
sub
nop
stc
sbbl
jge
dec
inc
add
adc
or
addb
cmp
aaa
jp
out
cmp
mov
and
adcb
inc
rorb
pusha
xor
sbb
or
add
xchg
pop
push
arpl
mov
or
push
faddl
or
add
add
xchg
cmp
xor
addr16
pop
or
cli
mov
rcll
sub
int3
mov
xchg
mov
pop
push
pop
sbbb
xchg
sahf
fcompl
add
adc
pop
adc
pop
pop
cmp
fsubrl
clc
sbb
push
and
sbb
pop
sbb
int
or
aad
adc
cld
dec
out
inc
jge
and
cmp
cld
lret
cmp
xor
add
sub
pop
movsl
cmp
jge
sbb
sub
cltd
pusha
adc
int3
popf
sbb
es
enter
mov
mov
ret
test
ret
push
stc
cmp
loopne
push
mov
sub
cli
push
push
mov
lahf
testl
dec
mov
ficomps
sbb
sbb
out
push
test
or
push
pop
cld
sub
mov
stos
xor
frstor
push
or
adc
mov
popf
dec
or
pop
repz
lcall
and
sub
ret
pop
les
test
jae
push
test
add
cmp
pop
adc
fnstsw
fwait
push
out
add
pop
jne
jb
lret
es
xor
in
push
jmp
jnp
and
jae
xor
aas
hlt
jp
jae
loop
push
pop
push
xor
or
lds
dec
sub
out
xor
pop
add
adc
sub
int
psllw
test
pop
push
ficoms
xor
loop
dec
xchg
pop
cltd
add
push
pop
mov
ficomps
repz
cmp
push
pop
sub
add
out
mov
dec
xchg
pop
push
mov
sbb
pop
outsl
xchg
sub
xor
fistps
repz
pop
push
mov
ss
leave
adc
mov
daa
sub
adc
int3
or
pop
jb
or
shlb
loope
in
and
xorb
cmp
adc
scas
hlt
out
cltd
xor
inc
fstpt
fdivp
sti
adc
push
dec
leave
pop
adc
jb
push
or
mov
jnp
test
sbb
adc
and
repz
push
xor
push
dec
dec
rcrb
pop
pushf
sub
insl
dec
loop
test
pop
push
cmp
repz
dec
stos
push
adc
sbb
arpl
aas
inc
sarl
push
xor
xchg
mov
xor
sahf
mov
or
xor
mov
inc
push
xchg
sbb
xor
adc
jb
mov
and
fs
cmp
jg
scas
outsb
jle
add
les
push
xchg
fnstsw
xchg
insb
pop
lret
nop
insb
adc
add
xorb
mov
fucom
and
dec
divb
nop
jo
or
cmp
xor
or
popa
adc
push
xchg
or
pop
movsl
shl
in
mov
mov
xchg
or
sahf
ljmp
cwtl
pop
lahf
xor
mov
sub
dec
push
cmp
adc
xlat
pop
or
fildll
push
inc
ljmp
cmp
subl
outsl
add
xlat
fs
test
imul
or
loopne
xchg
and
adc
frstor
mov
sub
push
xor
mov
vmread
sub
sbb
addr16
mul
int
stc
pop
jne
fcmovne
jl
push
xor
vmptrst
inc
cmp
adc
pop
pop
aas
push
enter
push
cmpsb
xor
pushf
ror
fwait
clc
push
mov
aaa
pop
pop
inc
sbb
mov
imul
ret
cld
cmp
sbb
pop
fidivrs
push
xor
jnp
pusha
or
or
or
lods
sub
xorb
sbbl
in
cltd
mov
repz
or
imull
lea
dec
imul
adc
pop
mov
stc
cmp
or
push
sahf
pop
mov
aad
pop
xchg
and
lcall
cld
push
push
xor
xchg
nop
xor
sahf
outsl
push
adc
adc
pop
cmpsl
repz
pop
scas
dec
dec
or
jo
bnd
mov
sub
jge
push
stos
insl
adc
fisttpl
mov
adc
inc
push
sarb
push
cmp
xchg
cmp
xlat
and
cli
xchg
xchg
or
fmull
bound
dec
xor
sbb
inc
cwtl
xchg
sbb
lret
sbb
mov
int
loop
add
cmp
pop
lea
faddl
cmp
and
add
ljmp
pop
push
cmc
insl
and
inc
rorb
adc
dec
cmp
cli
test
sahf
hlt
dec
sbb
mov
call
cli
rolb
pop
sub
push
popf
inc
cmp
pop
mov
pop
icebp
fidivrs
sub
sbb
int3
mov
mov
add
clc
add
je
or
ficomps
mov
cmp
nop
xor
fsubs
add
popa
push
lock
pop
sbb
and
unpcklps
push
sahf
and
cmp
loopne
movb
sub
cmp
add
lahf
ds
pop
fwait
xchg
push
jp
dec
les
cld
xchg
add
sub
arpl
cwtl
pop
ljmp
adc
cmp
dec
dec
iret
push
push
lahf
cmp
push
add
xlat
pop
mov
xor
mov
pop
xor
add
daa
add
jle
loop
xorb
aas
imul
push
test
xor
in
es
or
sti
sbb
outsl
cmc
leave
or
adc
dec
outsl
or
mov
stos
pop
repz
mov
xchg
nop
or
sbbl
dec
cmp
cwtl
sbb
sahf
aaa
repnz
push
mov
add
sub
inc
and
and
mov
lods
sbb
in
loopne
fsubrl
pop
mov
or
cmp
sahf
fcoms
cmp
add
cmp
loopne
icebp
cs
bound
mov
push
cmp
insb
nop
stos
and
jmp
incl
fcoml
inc
xor
mov
imul
in
cmp
loopne
xchg
dec
add
jae
ds
cmp
insl
adc
xchg
fs
fcomi
adc
jle
xchg
popw
add
clc
mov
cmp
push
sbb
add
sahf
xor
fwait
jo
js
push
aam
and
adc
cmp
push
mov
and
and
pop
sub
jb
sbb
push
insb
repz
sbb
cmpb
shlb
sbb
pop
int3
mov
push
pop
aas
nop
jno
or
popf
sbb
adc
js
cmp
add
mov
fisttps
push
lahf
jnp
jmp
add
imull
lods
sbb
push
adc
loop
test
dec
or
or
cmp
sub
mov
int
pop
aas
sbb
cmp
lea
push
xchg
and
ljmp
out
lahf
add
cmp
in
aam
sbb
pop
xchg
call
loopne
xor
into
mov
sub
sub
pop
xor
pop
sub
inc
dec
mov
icebp
inc
adc
xchg
in
xor
jecxz
xchg
dec
sbb
adc
sbb
in
movsl
fdiv
into
repnz
dec
cmc
orb
jnp,pn
icebp
imul
push
and
dec
xchg
pop
dec
stos
inc
out
mov
into
push
add
dec
call
and
pop
les
mov
add
add
or
rorl
xchg
daa
and
lcall
add
add
fcoml
icebp
mov
adc
pop
adc
sub
add
das
and
push
xchg
jns
insl
cmp
std
and
fdivl
and
fsts
or
and
and
bound
xor
sbb
les
cmp
pop
mov
xchg
out
or
rolb
js
adc
sarl
xchg
xchg
mov
mov
adc
fwait
and
push
cmp
pop
jg
adc
dec
fnsave
sbb
repnz
jmp
leave
out
sti
adc
shrl
lods
ds
enter
add
sub
cli
or
inc
pop
sub
xor
das
shll
push
mov
push
lods
cmp
push
gs
pop
cmp
pop
sbb
outsl
pop
or
mov
dec
push
dec
fnstsw
out
sbb
push
lock
mov
push
pop
mov
sub
cmp
xchg
dec
dec
je
dec
cmpsb
loopne
pop
notl
pop
add
pushf
jle
cmp
mov
xchg
into
pushf
in
mov
xchg
imul
into
movsb
clc
add
cmpsb
mov
and
push
outsl
jbe
call
sub
or
scas
xchg
add
stos
mov
inc
sti
inc
or
addl
push
cmp
push
bnd
sub
mov
daa
iret
sqrtps
push
lahf
xor
cmpsb
xchg
or
enter
lock
xchg
sahf
dec
xlat
and
nop
push
pop
pushf
cmp
xor
inc
lahf
fdivs
in
mov
hlt
and
cmc
sub
inc
cld
hlt
addr16
out
push
lock
or
mov
movsb
sub
xchg
outsl
cld
adc
shl
push
jne
sub
or
and
push
icebp
popa
pminsw
lods
cwtl
pop
jg
jmp
inc
lods
imul
fdivrl
sbb
insl
imul
push
icebp
or
sahf
int3
sbb
lods
frstor
or
lret
and
and
mov
jns
cmp
ficoml
adc
call
xchg
sbb
pop
jecxz
xchg
or
xor
je
scas
rol
jbe
pop
cwtl
xor
je
inc
inc
xchg
inc
cmpsl
mov
push
pop
or
sub
add
bound
jp
xchg
lods
pop
mov
fstps
jle
add
push
push
arpl
and
mov
push
push
mov
sbb
lret
cmp
fwait
dec
inc
outsl
adc
jmp
inc
inc
movsl
xor
xor
xchg
and
cmpl
lret
mov
nop
push
nop
jp
or
rcr
pop
pop
pop
jmp
mov
inc
arpl
pop
je
xchg
or
jne
sti
sbb
cli
add
call
xchg
pop
cld
test
aas
call
jno
push
pushf
scas
insb
push
ja
in
xchg
inc
nop
cmp
or
add
inc
inc
bound
add
pusha
push
clc
mov
inc
aam
xor
adc
xchg
dec
inc
mov
fnsave
cmp
mov
cld
sbb
pusha
pop
xor
jae
mov
xor
xor
cmp
incb
mov
movsl
je,pt
aas
sub
arpl
mov
xchg
enter
sub
sub
dec
xchg
popa
cltd
cltd
aad
pusha
repz
adc
add
dec
and
and
cmp
pop
fsub
pop
pop
pop
and
pop
xchg
cmp
mov
mov
jb
and
pop
jg
pushf
cltd
mov
hlt
dec
xchg
fdivrl
pop
jg
jmp
or
adc
jb
inc
jnp
mov
fcomp
pop
fimull
or
sub
or
mov
lods
push
xchg
sbb
cld
roll
push
push
sub
testb
and
dec
mov
dec
inc
push
cmp
js
xchg
test
adc
push
mov
adc
push
sarl
push
cmp
cmp
xchg
mov
pushf
adc
aam
orl
cmc
shlb
or
cmpsb
mov
pusha
gs
jl
pusha
pop
jge
sub
pop
inc
xchg
and
stos
movb
pop
dec
dec
jge
adc
loope
dec
mov
repz
cmp
dec
xchg
sub
mov
xchg
rorb
mov
jg
push
and
repz
lea
in
jle
mull
aas
push
mov
push
lcall
je
cmp
add
icebp
sub
inc
fsubrs
jns
dec
mov
daa
sub
cs
dec
cmp
xchg
das
or
or
les
lea
addr16
das
push
icebp
mov
dec
sbb
xor
add
mov
push
ljmp
insb
dec
xchg
stos
pop
xchg
adc
or
push
cmpsb
test
push
lea
out
fbld
mov
and
xchg
sahf
icebp
or
sub
jae
ret
aam
dec
cltd
xchg
add
sbb
jmp
fcmovnbe
pop
out
daa
pop
sbb
ja
and
sbb
mov
cmpsb
fwait
xlat
mov
mov
adc
test
mov
pop
adc
cmp
cmp
mov
cmp
jge
lahf
mov
push
sub
xchg
mov
mov
fmull
int
jno
hlt
inc
fdivs
sbb
and
xchg
aaa
pop
pop
push
dec
or
lcall
mov
daa
lret
sub
xchg
adc
imul
mov
push
mov
inc
xor
test
pop
shll
call
and
addr16
mov
aas
or
ds
mov
add
xchg
mov
pop
xchg
or
add
xchg
pop
out
or
and
fwait
inc
cmp
int
adc
loop
inc
loope
rcll
xor
jecxz
decl
mov
xor
push
mov
cmp
pop
or
add
xor
or
xchg
inc
rcll
and
popa
push
leave
int3
jae
rcrb
enter
fistl
outsl
scas
sbb
dec
ss
fldenv
test
adc
icebp
cmp
stos
lods
push
in
test
test
leave
mov
mov
adc
xchg
int3
jg
nop
clc
cltd
mov
xlat
outsb
add
push
xchg
lods
pop
jne
cld
pop
testb
jge
sbb
mov
xchg
push
adc
scas
pop
cld
movsb
ror
jo
add
pop
push
or
dec
xor
aas
orb
xchg
push
or
or
bound
or
push
jne
outsl
loope
cmc
sbb
pop
jecxz
cmp
inc
in
jecxz
sahf
cmp
ret
rolb
pop
cltd
and
xor
fimuls
inc
data16
fistpll
adc
gs
aas
inc
jne
xchg
cmp
or
mov
mov
push
xor
rclb
sub
aas
mov
mov
push
or
int3
xchg
xchg
lods
push
nop
insb
mov
xlat
fs
adc
test
rcrb
loop
int
std
adc
xor
and
sub
or
jae
fldt
and
enter
jne
add
push
ljmp
aaa
xor
cmpsb
lods
movsb
xlat
outsb
sahf
push
or
movsl
mov
xor
jl
aam
fsubrs
xchg
insb
cmpsl
or
adc
inc
ret
inc
push
dec
adc
mov
jne
pop
cmp
pop
fcmove
fmul
pop
fstpt
dec
fwait
or
dec
cld
mov
push
hlt
fwait
adc
jmp
xchg
jbe
les
sbb
mov
sub
mov
dec
xor
fwait
sub
sbb
cmp
adc
and
or
insb
adc
imul
jecxz
dec
loopne
push
or
in
fstl
shll
jno
aam
pop
and
xor
cld
stos
dec
add
or
nop
mov
mov
lods
push
leave
sbb
mov
movsl
fsubrl
sbb
pop
mov
jecxz
test
and
in
data16
adc
sbb
adc
shr
ret
xor
cli
into
ficompl
shl
jo
mov
and
pusha
sti
xchg
xchg
push
fs
mov
pop
adc
outsb
pusha
cmp
add
sbb
lea
mov
dec
jb
push
adc
lods
outsb
pop
push
idiv
es
test
ss
repz
loopne
mov
cld
or
popa
jno
adcl
cmp
stos
dec
sbb
xchg
nop
dec
dec
dec
pushl
dec
adc
cwtl
rcrb
dec
pop
adc
push
cmp
or
sbb
stos
jle
cmp
mov
jnp
cli
inc
jle
outsb
xlat
shll
sbb
bound
mov
cmp
and
or
mov
mov
cmp
cmp
or
sbb
fcmovbe
lods
and
xchg
adc
xor
jae
sbb
int
xorl
or
fadd
dec
xor
mov
repnz
repz
xchg
ret
or
ds
fsubp
adc
jb
cmp
js
cmp
pop
repz
mov
adc
or
mov
xor
stc
dec
test
out
fcoms
xlat
ljmp
add
sbb
dec
or
dec
ficoms
add
cmp
lods
fistpl
sbb
fcmovnb
sub
adc
lods
imul
push
adc
or
arpl
out
push
cmp
sbb
mov
arpl
dec
dec
mov
cmp
cmp
rorb
add
cld
mov
xor
pop
or
aas
das
sbb
repz
xor
inc
fs
imull
add
pop
sbb
push
int
mov
test
sbb
push
add
inc
mov
cltd
inc
inc
ficompl
xchg
sbb
inc
mov
jp
xchg
xchg
cmpsb
enter
movmskps
int3
mov
sbb
cmc
sbb
ret
call
lcall
or
push
mov
mov
add
adc
or
xor
or
push
cmp
or
cld
js
xchg
pop
add
into
cmp
icebp
push
movsl
inc
clc
pop
and
cmp
insl
push
out
ret
or
sub
adc
sub
pop
and
sub
xchg
aaa
mov
cmp
inc
sbb
cli
cmpsl
faddl
pop
xor
fnstsw
les
cmpsb
sahf
js
imul
lock
lea
inc
outsl
ret
mov
sahf
insl
or
cmp
dec
mov
sub
sub
or
inc
sub
adc
xchg
mov
ljmp
sbb
clc
xchg
aas
lods
in
pop
jmp
or
lahf
adc
pusha
dec
mov
fdivrl
push
testl
jnp
test
dec
lahf
das
dec
cmp
std
push
lret
stos
or
dec
or
mov
push
imul
aas
sub
push
sub
xchg
rcll
adc
nopl
insl
pop
push
pushf
add
rcrb
inc
inc
int
xor
fidivs
mov
push
pop
in
push
popa
popa
lods
divb
mov
and
add
dec
sub
mov
xchg
cmpsl
shll
and
cmpsb
pushf
jne
jg
sbb
les
or
addr16
mov
insl
mov
dec
sbb
pop
mov
es
xchg
mov
dec
xor
push
cmp
push
fsubl
lea
test
pop
xor
push
outsl
mov
or
int3
cmp
sub
fstps
lret
fucomi
add
sbb
test
andl
addl
push
mov
pop
out
fdivs
inc
push
ret
or
inc
xor
dec
mov
adc
sbb
dec
mov
or
adc
fwait
mov
cli
out
incb
mov
lcall
cld
cmp
in
xor
or
lea
lock
xchg
push
pop
sub
cmpsb
inc
mov
outsl
ret
or
xor
sbb
inc
sbb
outsb
xlat
inc
test
cmpsb
shr
jg
insb
mov
mov
das
dec
stos
mov
pushf
and
push
movsl
out
dec
pop
or
push
leave
jmp
lea
and
mov
jge
inc
add
or
lcall
add
xor
or
cmpsl
jle
insb
adc
dec
jmp
or
and
inc
mov
push
dec
adc
xchg
dec
and
dec
iret
shll
into
aaa
and
out
nop
ds
dec
mov
dec
pop
push
xor
push
and
sbb
iret
cmp
push
xchg
in
daa
rclb
jecxz
enter
pop
push
pop
sub
and
add
data16
or
incb
mov
insb
andb
nop
je
jb
jne
ja
pop
enter
adc
jg
xor
pop
xchg
inc
and
sbb
aas
test
add
mov
lret
inc
lods
or
popa
cmp
lods
xor
add
pop
add
fs
pushf
xchg
inc
rcrb
insl
inc
fstpt
or
call
loopne
les
add
insl
cmp
adc
adc
or
in
jp
addl
je
insb
push
sarb
adc
mov
push
cmpsl
negb
pop
jne
inc
mov
fcompl
xor
sarl
jb
sbb
xchg
xor
sub
inc
pop
jg
cmc
in
fwait
and
leave
lea
adc
aaa
add
sub
or
aam
gs
sub
xor
lahf
adc
lret
stos
dec
jnp
dec
out
inc
cmpsl
add
fildll
loop
movsl
jg
mov
adc
int
cs
iret
inc
or
mov
movsl
mov
aas
lods
loope
stc
dec
push
sub
fstpl
mov
jae
icebp
sub
test
popf
and
xor
out
lea
add
jae
mov
jno
jns
push
dec
cmp
inc
inc
ret
inc
aas
enter
dec
mov
dec
xor
hlt
mov
repnz
sbb
cli
inc
jmp
push
lcall
push
je
push
mov
xchg
dec
dec
jnp
stos
sbb
mov
sub
add
jbe
outsl
dec
stos
adc
aas
movsl
mov
and
push
add
inc
xchg
pusha
dec
mov
sbb
or
jnp
dec
lret
iret
in
mov
and
sbb
push
cmp
or
ss
shrl
cmc
sbb
jne
adc
mov
cwtl
test
nop
mov
push
fcmovne
psllq
jg
pop
aas
loopne
inc
cmp
lods
popf
push
enter
mov
cli
lods
int3
mov
js,pn
fdivrp
bound
in
pushf
fs
xchg
ss
sbb
adc
add
cmc
xor
push
icebp
sbb
push
mov
cwtl
in
and
xor
jl
insb
sub
sti
push
fisttpl
test
stos
jmp
and
sub
cli
cld
xor
add
xchg
push
fcmovb
xchg
jne
cli
dec
addr16
sbbb
sbb
sub
fs
or
add
rcrb
add
dec
adc
aad
popa
dec
sub
push
dec
lock
ss
mov
xlat
sub
jmp
rol
xchg
popf
push
pusha
push
push
mov
mov
loope
adc
dec
mov
scas
iret
out
xor
add
xchg
pusha
cwtl
fdivl
xchg
cmc
aaa
cwtl
and
pop
cwtl
movb
es
cmp
cld
xor
add
aas
dec
idivb
loopne
rorb
dec
xchg
outsl
pop
fiadds
int3
jns
xchg
enter
in
fsubrs
dec
push
push
push
rcrl
or
sub
and
sbb
dec
pop
imul
ja
mov
xchg
mov
pop
mov
sbb
sbb
ret
dec
rolb
xchg
sbb
mov
repnz
mov
imul
cld
xor
adc
ds
push
mov
ret
adc
adcb
or
or
lret
xor
jno
rcr
fwait
out
fbstp
inc
xor
fisttpl
lods
stos
xor
cs
sbb
xor
test
outsl
dec
dec
rcl
sbb
dec
dec
jl
enter
mov
fwait
sti
jns
sub
sub
idivl
push
in
rorl
pop
icebp
addr16
sbb
or
cmp
subl
inc
mov
popf
fs
and
int3
pushf
xchg
insb
cwtl
xchg
jne
mov
out
pusha
jg
daa
sub
lock
lods
mov
fsubrl
mov
fiaddl
push
jae
sbb
js
sub
lea
mov
mov
cmp
iret
xor
mov
pop
adc
mov
ljmp
pop
xchg
adc
orl
xor
xchg
sbb
add
iret
jmp
cmp
or
imul
inc
in
mov
mov
xor
and
call
jnp
xchg
inc
movsb
dec
sub
add
sub
dec
stos
push
sbb
sti
lcall
adc
adc
add
add
mov
int
std
cmpsl
adc
cmovbe
rcr
lahf
imul
sahf
add
xchg
push
xor
fwait
mov
jae
mov
in
or
mov
push
dec
sbb
cltd
cmpsb
je
outsl
pop
xchg
stc
jp
dec
push
int
push
pop
std
xchg
cmp
jne
lcall
cmp
loop
in
je
setno
or
xor
stc
sti
sbb
push
or
jno
sub
cmp
iret
js
into
xor
xlat
in
adc
in
incl
lcall
fs
test
mov
inc
mov
jp
push
push
outsb
xchg
jle
or
gs
xchg
push
in
icebp
ss
jnp
and
les
and
dec
dec
add
or
mov
and
outsb
lods
enter
stos
fildll
jle
imull
push
mov
imul
icebp
mov
ds
in
movsl
adc
sbb
icebp
aad
xchg
pop
iret
adc
into
lret
mov
fstpl
xor
mov
xchg
mov
fstl
mulb
stos
das
adc
xchg
cmp
loop
stos
sarb
xchg
push
xchg
xor
jle
adc
adc
out
lret
adc
fistpl
ljmp
jecxz
inc
out
cmp
std
xchg
push
dec
or
rorl
dec
lret
and
sti
pop
jno
mov
or
data16
add
roll
dec
adc
xor
out
mov
outsl
sbb
lds
and
sbb
dec
sbb
outsl
call
mov
cmpsb
addr16
int
in
repz
xlat
push
pop
pop
mov
pop
mov
lock
xchg
adc
loopew
adc
xor
push
out
loope
sbb
loopne
cld
jge
lods
inc
scas
push
insl
inc
enter
jecxz
mov
clc
dec
cmp
pop
in
dec
ljmp
xor
push
lds
clc
push
adc
cmp
mov
push
push
loope
jge
and
adc
jg
xchg
aas
sub
push
sahf
les
or
out
mov
ljmp
ds
dec
cld
sub
cmp
cmp
clc
roll
aam
test
daa
leave
cwtl
inc
or
or
ljmp
or
loope
adc
xor
cmp
push
outsb
xchg
movsb
or
repz
dec
in
int
inc
and
push
or
rolb
imul
bound
inc
dec
lods
and
adc
xchg
in
mov
pop
mov
pop
out
enter
lock
or
cmpsl
pop
scas
xlat
mov
xor
fwait
mov
or
pushf
rcrb
jmp
lcall
add
in
adc
test
push
push
outsl
ss
int3
fcmovnbe
jne
stos
xor
sbb
or
adc
sbb
das
inc
lret
scas
lea
cmp
pop
test
cs
sbb
jge
add
xorps
mov
lock
popf
shll
iret
nop
cmp
dec
and
sub
sbb
sub
jb
cwtl
dec
ja
shrl
mov
call
mov
roll
lret
pop
xchg
pushf
flds
dec
inc
sbb
inc
lock
fstpl
shrl
addl
ret
icebp
inc
mov
stos
in
adc
repz
xor
jb
xchg
jns
ret
lds
ja
insb
shl
push
inc
push
arpl
xchg
mov
mov
dec
in
pop
jl
and
dec
pop
dec
cmpsb
mov
gs
loop
nop
sbb
scas
loopne
xor
push
aas
xchg
and
js
fimull
or
hlt
sahf
movsl
jl
xchg
cmpsb
mov
pop
sahf
cmp
adc
sub
orb
sub
dec
and
lods
lret
adc
lea
stos
sub
gs
into
cli
sub
sub
inc
cld
mov
and
hlt
sbb
dec
test
cltd
or
loopne
std
inc
cltd
lods
xor
mov
and
mov
lcall
dec
add
sti
cld
sbb
fs
mov
push
mov
sub
mov
adc
mov
mov
enter
aas
and
jmp
fstpl
push
or
in
or
test
xchg
stos
sbb
and
mov
xlat
inc
insb
jecxz
aaa
outsb
sub
push
ljmp
stos
or
pop
push
xchg
pop
add
insb
mov
lods
or
xchg
jbe
pop
std
popa
xchg
inc
sub
pop
cwtl
or
jmp
idivb
scas
jmp
mov
mov
pop
xchg
fsubs
mov
shr
cld
scas
das
jge
sbb
jge
ljmp
inc
ljmp
pop
cmpsl
sbb
xchg
lret
cmp
pop
fwait
or
or
sbb
or
movsb
adc
cmp
sbb
add
cli
data16
add
add
sbb
ret
cltd
cmp
cltd
fsts
cmp
sbb
add
test
adc
mov
or
cld
std
es
xor
jnp
lcall
dec
out
cmp
cmpsl
inc
out
sub
cltd
aaa
add
add
xchg
mov
pusha
pusha
jl
jbe
test
xchg
fldenv
arpl
push
stos
shlb
enter
mov
mov
mov
mov
add
enter
outsl
mov
inc
arpl
inc
hlt
sbb
cltd
mov
inc
cmp
les
xchg
push
cmpl
xchg
call
les
iret
pop
repnz
test
mov
movb
loop
adc
stos
fs
fdiv
je
pop
xchg
xchg
push
test
pop
adc
xlat
into
test
xorb
push
sti
jns
cmp
das
inc
adc
jmp
push
adc
add
movl
pop
movsl
pusha
push
push
in
shr
push
aas
and
push
push
mov
call
int
adc
dec
mov
aas
and
pusha
insb
jne
push
lds
leave
fstpt
test
cmp
dec
mov
in
movsl
xchg
xor
cmc
xor
fsubrs
mov
dec
xor
mov
cmp
xchg
pusha
pushf
aaa
je
gs
in
adc
xchg
pmaddwd
cmp
pusha
mov
inc
rcrb
sbb
xchg
xor
out
and
out
std
imul
sub
lods
loope
push
jnp
pop
mov
xor
add
pusha
cld
pop
push
mov
cltd
lock
cmp
push
test
shrb
cmp
notrack
out
mov
dec
movsb
xor
adc
imul
pop
je
add
sbb
sbb
mov
stos
or
mov
xor
hlt
jecxz,pn
fmuls
add
sbb
cld
inc
xor
or
cld
add
push
and
aad
lea
mov
inc
inc
popa
xor
xor
ss
adc
pop
dec
fstp
notl
or
and
push
pop
icebp
pop
add
loope
bound
fdivs
mov
push
cmp
inc
imul
xchg
fldt
mov
outsl
xchg
mov
mov
sub
sub
xchg
fmul
scas
into
cmp
pop
cmp
pushf
or
pop
sbb
arpl
dec
in
xchg
data16
dec
outsb
cmp
adc
xchg
dec
dec
inc
gs
mov
jno
adc
scas
fmuls
mov
call
cltd
loope
or
sbb
xchg
dec
fisttpl
or
and
pop
cmp
lret
out
mov
loop
lods
sub
sbb
jmp
mov
fistpll
pushf
pusha
enterw
loope
sbb
aas
sbb
pop
cmp
mov
sub
dec
sbb
inc
lret
nop
lahf
add
fistl
testb
cmp
pop
add
rcl
add
out
cmp
outsl
adcb
test
add
or
dec
stos
cmpsl
in
push
je
sbb
lock
pcmpgtw
orl
dec
mov
xchg
mov
mov
push
add
push
clc
dec
cmp
jae
push
and
dec
adc
xchg
pop
pop
stos
sbb
xor
cmp
rorb
daa
cmp
sbb
mov
js
popf
scas
insl
push
in
lock
sarb
dec
cmc
pushf
iret
lods
jno
jnp
sahf
rorb
rorl
dec
and
cwtl
push
jne
xor
push
add
icebp
jp
xor
cli
or
xor
lea
pop
stos
xchg
xchg
movsb
pop
imulb
or
aas
xor
daa
cltd
fldlg2
in
jg
dec
dec
pop
xor
dec
sub
inc
in
push
rcrb
aas
leave
outsl
dec
mov
cmpsl
jle
push
or
out
jnp
or
aaa
orl
dec
inc
cwtl
inc
cli
adc
ret
imul
adc
adc
cmc
or
inc
dec
ljmp
mov
mov
mov
mov
subb
xchg
rcrb
xchg
cli
sub
or
lret
dec
cmpsl
out
push
jg
mov
mov
cwtl
icebp
dec
adc
inc
fistpll
fisttps
nop
inc
scas
ss
add
sub
into
clc
ss
add
notb
cmpsb
cmp
push
out
xchg
lock
xor
adc
fiadds
sbb
adc
dec
jle
negl
sbb
dec
fsubr
arpl
enter
lds
adc
adc
push
and
dec
lret
pop
cmp
fsubrs
out
sbb
testb
or
jl
insb
pop
repz
xor
outsl
pop
out
and
sub
push
and
int
test
push
mov
push
pop
add
jle
popw
adc
sbb
or
adc
int
out
add
ds
idivl
fiaddl
repz
mov
js
cmp
xor
cltd
loope
test
mov
int
dec
dec
inc
std
push
cmp
and
sti
pop
adc
out
fs
mov
int3
xchg
jb
pop
or
into
cmp
shl
in
mov
xorl
mov
sub
lahf
lret
sbb
lret
cmp
adc
sub
xchg
sbb
and
test
or
mov
repz
xchg
inc
aad
mov
inc
inc
mov
aam
pop
xor
pop
minps
andb
repz
dec
jo
mov
xor
push
sbb
loope
add
repz
mov
outsl
pop
mov
aad
pop
popw
fisttpl
add
mov
mov
xor
cli
add
repz
add
add
cmp
aaa
push
push
sbb
sub
hlt
jno
lahf
push
les
sti
cmc
pop
scas
sbb
adc
and
mulb
mov
and
ljmp
testb
lock
dec
jo
pushf
in
pop
cmp
jbe
mov
aaa
subb
mov
fwait
in
out
mov
sbb
xchg
pop
xchg
push
adc
sbb
fnstsw
jae
dec
fmuls
mov
and
sbb
or
xchg
dec
pop
mov
mov
mov
adc
pop
pushl
fimull
dec
outsb
add
cmp
jb
aad
movsb
sbb
clc
sbb
pop
fstpl
push
sbb
sbb
je
jle
push
hlt
adc
insb
pop
add
ja
leave
je
dec
dec
xor
pop
jg
mov
dec
cmp
dec
fildl
add
adc
lret
mov
mov
mov
inc
cmpsb
jae
and
shll
and
test
pop
pop
jo
mov
mov
pop
push
push
mov
cmp
and
inc
pop
repz
dec
in
or
adc
add
icebp
cwtl
sbb
sbb
cld
stc
sti
push
es
outsb
push
aaa
dec
push
lock
xor
repz
adc
shl
push
dec
cmp
dec
scas
lea
stos
in
pop
jecxz
test
inc
mov
sbb
mov
stc
lcall
sub
sub
push
jl
aas
inc
jo
and
add
cmp
lcall
or
adc
fisttps
and
mov
je
sbb
push
ret
sbb
insb
or
leave
and
lds
dec
push
ficoml
jl
fwait
jecxz
out
pop
adc
xchg
dec
or
cmpsb
fisttps
pop
push
sub
gs
or
aaa
out
jg
jg
lahf
or
xor
pop
scas
fldl
add
sub
and
inc
notb
push
push
cmp
xchg
adc
dec
pop
sahf
mov
sub
or
popa
adc
dec
mov
adc
cmp
test
lahf
outsb
repz
xchg
xchg
inc
xchg
sbb
push
je
push
stos
and
clc
sbb
stos
adc
pop
sbb
mov
or
xor
pushf
je
fcomip
sub
cwtl
cmp
ja
cli
sub
fsts
pop
pusha
fwait
inc
or
mov
fistpll
std
mov
push
cltd
les
mov
nop
mov
inc
dec
jmp
mov
push
jl
and
cld
fcos
scas
jbe
pop
inc
insl
xchg
jo
cmp
mov
push
dec
call
icebp
push
adc
push
push
pop
add
xchg
dec
jp
xchg
imulb
gs
and
and
xor
loope
mov
adc
andb
sbb
sub
sbb
mov
arpl
enter
or
or
pop
fwait
in
dec
push
adc
or
xchg
in
push
inc
jmp
and
aas
dec
lcall
cmp
cmp
enter
xchg
cmp
add
xor
ja
arpl
movsb
xor
cmp
or
pop
and
pusha
call
sbb
or
or
xchg
mov
jecxz
and
adc
incl
lds
pop
pop
xor
stos
sub
ds
clc
mov
xor
push
lods
es
mov
cmpb
cwtl
dec
out
cltd
out
insb
or
out
or
and
adc
rcrl
sub
rep
loop
mov
mov
fnstenv
mov
scas
mov
push
lods
mov
xchg
je
inc
popf
repnz
sub
cwtl
mov
xchg
xorb
mov
cmp
pop
pop
dec
dec
movsl
pop
fiaddl
xchg
or
or
test
sahf
push
sar
xor
push
jno
stos
icebp
dec
xor
pop
out
pop
std
invd
inc
aas
jns
mov
mov
mov
lret
popa
jl
jo
lods
insb
lea
repz
pop
shr
adc
ljmp
or
inc
add
cld
jmp
sub
sub
andb
add
push
cmp
xchg
int3
jmp
adc
inc
in
cli
cwtl
insb
inc
push
fimull
xchg
xorl
jecxz
mov
int
mov
hlt
nop
sbb
pop
cmp
xor
int3
push
or
sbb
inc
test
pop
push
and
or
stos
cmp
fsubl
mov
mov
xlat
dec
psubsw
movsb
or
xor
out
aam
lahf
rcl
dec
lea
fsubrl
and
adc
int
pushf
or
push
dec
loope
mov
push
repnz
push
pop
sbb
fstps
push
sub
in
inc
add
xchg
dec
and
adcb
adc
popf
sbb
xchg
cli
cld
cmp
test
push
xchg
xchg
cld
fldenv
call
int3
xor
in
adc
mov
cmp
repz
xchg
repz
jle
das
xor
jo
jg
mov
sbb
std
pop
jmp
or
sti
das
jle
sti
mov
fwait
out
add
int3
adc
test
push
cmpsl
sbb
push
lcall
inc
or
outsb
lods
sbb
insb
ss
fidivs
inc
ss
bound
xor
sub
sbb
dec
mov
dec
or
aad
repnz
mov
pop
inc
pop
mov
add
sub
cwtl
jmp
int
dec
cltd
mov
adc
adc
xchg
sub
pop
cld
cmpsb
and
pop
xor
and
aaa
roll
xchg
fs
dec
cld
xchg
and
mov
aas
xchg
fwait
loope
jae
ffreep
adc
rorl
insb
pop
stc
and
mov
inc
ss
lea
out
jp
dec
in
jle
pop
sbb
cmpb
push
sbb
inc
lock
push
xor
cmp
inc
and
xchg
idivb
sub
xor
pusha
cld
mov
addr16
cmpps
xchg
lret
sbb
dec
mov
mov
pop
cld
lods
das
imul
xchg
xor
sahf
cmpsb
xchg
mov
cmp
iret
mov
repz
pop
pop
xchg
mov
shll
out
cmp
sub
ja
js
cmp
dec
pop
push
xor
xor
icebp
or
cld
es
sbb
es
cmp
dec
mov
mov
jne
or
sub
cmp
insl
sbb
mov
inc
mov
add
hlt
xor
sbb
add
stc
jb
in
push
aaa
gs
mov
subl
jne
cmp
aaa
loope
divl
mov
or
pop
fwait
sub
cvtps2pd
js
xor
in
or
xchg
push
push
push
mov
out
cld
add
das
inc
dec
xor
fidivl
sahf
xor
adc
xor
xchg
add
mov
daa
pop
loop
or
test
mov
iret
add
sbb
scas
sub
add
imull
or
movsb
inc
push
and
repz
dec
inc
sbb
ss
or
outsl
jmp
fcoms
int
cmp
mov
sub
cmp
sbb
sub
sbb
jno
mov
dec
dec
sahf
jo
jg
gs
nop
xchg
add
std
mov
out
pop
mov
xchg
sti
cld
sub
adc
loope
adc
dec
mov
jmp
sub
sbb
loopne
ds
and
das
fnsave
xchg
scas
adc
hlt
rcrl
andb
lds
out
ds
enter
out
and
push
lods
leave
lahf
jmp
jno
fimull
jbe
cmpsl
xor
sbb
inc
push
ss
cmpsl
pop
pop
cltd
fstps
adc
xchg
popa
data16
cld
push
push
dec
clc
aaa
and
outsb
mov
lret
xchg
inc
and
and
and
add
cmp
or
inc
xchg
cmp
xchg
mov
lods
mov
stos
adc
add
push
gs
push
adc
insb
jge
imul
add
mov
dec
sub
xor
dec
xor
mov
cmp
mov
dec
jl
inc
into
xchg
xor
dec
sub
faddl
repz
aas
inc
sar
dec
or
cmp
jl
pop
sub
sbb
jle
mov
fldcw
adc
fstpt
pop
jecxz
cwtl
sbb
xchg
mov
cmp
cwtl
mov
js
mov
adc
loope
add
fimull
or
cmp
pop
cmp
cmp
rorl
mov
pop
pop
cmpsb
xchg
jae
sti
lret
mov
outsb
xchg
or
fmull
repz
popf
add
sbb
jmp
and
sub
into
out
inc
mov
or
mov
sub
xchg
dec
aam
popf
sub
and
jmp
and
xchg
mov
clc
pop
mov
sarb
arpl
sahf
shlb
into
dec
xchg
lcall
or
xor
or
push
mov
pop
scas
cmp
push
xchg
adc
pause
nop
pop
mov
nop
pop
mov
test
xchg
xchg
pop
inc
orps
sbb
push
outsb
xchg
imul
push
addr16
xchg
xchg
xor
shrb
ficoms
loopne
push
xchg
popf
fadds
inc
lahf
xchg
jp
jnp
repz
shll
jmp
ljmp
shll
xchg
in
dec
push
mov
pop
cmp
cmp
push
mov
pop
stos
inc
in
sub
cmp
pop
testl
lcall
mov
sbb
or
bound
fists
ret
aaa
cwtl
or
pop
ds
jae
mov
pusha
gs
or
pop
lret
ret
leave
xor
popf
call
add
xchg
jp
adc
or
pop
cltd
adc
cwtl
cmp
add
popf
pop
xor
sbb
cmp
pop
push
loop
js
scas
push
jmp
xchg
sbb
mov
pop
adc
call
fidivl
push
adc
xor
inc
adc
push
push
stos
xchg
mov
pop
cmp
aam
cld
movsl
cmp
in
stos
and
std
ret
outsb
movnti
cmp
dec
lret
add
nop
sbb
xor
cld
ja
xchg
pusha
movb
aam
fwait
push
dec
aas
rolb
sbb
cld
lods
dec
adc
pop
dec
mov
popf
adc
ds
inc
xlat
aas
xchg
mov
jmp
fwait
push
push
out
lahf
mov
ret
push
cmp
test
shld
xor
pop
cld
je
rcll
cltd
mov
cld
shlb
cmpsl
inc
outsl
pop
and
lea
mov
dec
push
sbb
aaa
inc
fldenv
mov
ret
push
cmpsl
arpl
imulb
int
lret
push
push
sbb
out
sub
inc
stc
gs
outsb
int3
es
mov
fidivs
cld
mov
xchg
dec
sbb
or
in
pop
adc
lods
jno
sbb
sbb
fcmovu
in
repz
mulb
and
icebp
popf
rcll
or
loop
sbb
lods
mov
jo
xchg
cltd
mov
jbe
scas
or
mov
xor
or
and
inc
in
dec
mov
or
lea
inc
or
dec
movsl
jnp
aaa
repnz
sbb
add
setae
or
or
cld
xor
int
nop
jle
push
xor
js
push
sub
sub
mov
sbb
jl
cmp
mov
xchg
xchg
test
insb
cmp
scas
je
cltd
adc
pushf
sub
lahf
dec
dec
cmpsb
push
adc
mov
adc
adc
repz
pop
xchg
sti
ss
pop
adc
jbe
cmp
sub
dec
mov
data16
add
addr16
jp
lds
fwait
xchg
dec
cmp
gs
rclb
loope
pop
xor
pop
pop
xor
sbb
pop
xor
arpl
sub
pop
std
sub
enter
lret
adc
pop
fidivrs
je
mov
and
lock
adc
jns
pusha
dec
sub
xorb
sbb
add
aas
lret
cltd
adc
outsl
pop
and
movsb
jne
lea
cmp
pop
xor
push
or
adc
xchg
insl
lcall
repz
xor
inc
pop
push
or
les
sti
dec
cmp
jg
dec
pop
lret
add
idivb
push
inc
inc
fidivl
push
fs
mov
adc
orl
xchg
cmp
shl
add
ja
pop
loope
loopne
mov
sub
or
cmpsb
cmp
lock
jl
js
cmp
inc
outsb
pop
js
xor
xchg
jl
lret
jo
pop
inc
mov
lock
lahf
fcoms
jns
xchg
xchg
subb
pop
sub
adc
pushf
popf
jp
dec
pop
adc
lock
leave
inc
pop
mov
dec
inc
dec
sbb
mov
fnstcw
jecxz
shrl
jno
or
dec
sahf
mov
addr16
sbb
xchg
or
inc
jle
addr16
or
sbb
pop
push
adc
mov
icebp
sbb
cltd
enter
lcall
pop
repz
shll
push
aaa
test
xor
dec
ret
lret
inc
mov
in
fcomps
pop
rcl
out
jnp
push
ret
mov
imul
cli
sahf
sub
lea
mov
shll
data16
pop
push
gs
out
mov
cmp
nop
adc
xchg
dec
pop
or
nop
pop
cmp
mov
lcall
push
lahf
and
jno
filds
xor
leave
popf
hlt
out
push
ret
or
mov
dec
das
cltd
je
xchg
pop
aaa
lds
pop
dec
call
lea
or
xchg
aas
jb
inc
mov
push
or
out
mov
push
jp
push
outsl
pop
bound
pusha
jno
dec
push
outsl
rol
jnp
int3
jb
leave
movsl
clc
fldcw
add
inc
iret
mov
fistps
idiv
addl
jle
in
dec
jl
xor
push
pop
out
int3
scas
xchg
or
mov
daa
je
loop
js
or
and
mov
jecxz
jmp
xchg
mov
and
testb
mov
mov
fldenv
lock
stc
cld
aas
je
lds
xor
sarl
dec
pusha
call
outsl
pop
cmpsb
dec
into
push
inc
jmp
cmp
lret
jb
jmp
lds
pusha
out
mul
and
in
ljmp
pop
or
jbe
adc
dec
mov
rorl
push
shl
lcall
add
sbb
ror
push
bnd
cmp
les
mov
test
sbb
in
lds
xchg
xchg
xor
pop
xor
int
stos
repz
mov
adc
push
popl
out
xchg
push
inc
aam
dec
or
cld
cmp
ficompl
std
aas
xchg
fmulp
jnp
loope
push
lods
and
and
push
mov
dec
jo
pop
sahf
popf
and
push
xchg
dec
ja
or
pop
jl
xlat
outsl
adc
adc
fwait
icebp
adc
adc
pop
and
lcall
sbb
cmp
pop
adc
adc
into
ror
add
jl
mov
jl
aaa
sbb
enter
ljmp
je
pop
push
jle
cmp
mov
loopne
mov
and
dec
sub
je
add
cmp
cld
mov
out
in
xor
xchg
sub
push
ficompl
es
jb
push
mov
cmpsb
mov
loope
adc
cmc
sbb
xchg
sbb
jne
mov
cmp
and
fisubrs
or
or
cmp
cmpsb
adc
or
add
dec
and
cltd
push
daa
mov
xor
add
cmpsb
je
mov
sti
rorb
mov
or
test
sarl
insb
call
js
pop
loopne
push
mov
pcmpeqb
pop
stos
dec
sbb
dec
imul
sahf
sarb
loopne
in
sub
adc
push
insl
jle
cmpsl
adc
fistpl
or
cmc
push
sbb
std
jg
or
xchg
or
push
ror
sub
or
inc
int3
lahf
dec
xor
lret
and
push
cs
jmp
push
loopne
test
cmc
mov
ljmp
xchg
xchg
lds
mov
mov
out
mov
and
xor
push
xor
mov
push
mov
mov
outsl
cmp
inc
xchg
sbb
bound
pop
sub
xchg
ss
sbb
adc
aas
out
loop
mov
pop
loop
sub
fisubrs
mov
push
push
sub
sbb
mov
adc
scas
or
aas
pop
mov
addr16
sarl
sub
or
dec
movsl
xchg
sbb
fwait
aad
out
push
pop
call
add
or
lods
or
add
push
out
sub
js
movsb
int3
jb
mov
jecxz
mov
pop
add
dec
sub
test
mov
pop
stos
dec
inc
pop
or
push
movsl
adc
cld
mov
cmpl
jmp
loope
imul
jnp
sbb
fmull
test
or
imul
sbb
inc
and
pushf
cmp
aad
rorb
push
outsl
push
xor
adc
sbb
push
lods
mov
jecxz
pop
sub
xchg
or
dec
hlt
inc
push
jle
and
and
push
test
adc
jae
sbb
mov
es
jl
jmp
dec
pop
jl
sbb
sbb
in
pusha
ret
nop
fwait
pop
dec
xchg
pushl
mov
add
xchg
es
xor
or
mov
test
pop
and
loopne
in
andb
xlat
or
fcom
filds
pop
bound
mov
subb
out
out
lahf
mov
xchg
in
xor
cld
pop
mov
fidivrs
aas
adc
mov
loop
adc
sub
or
js
movntq
cmp
loopne
add
sbb
or
adc
mov
mov
xchg
pop
xchg
mov
dec
sahf
add
mov
inc
add
movsb
sti
cld
inc
inc
rorl
pop
inc
das
mov
sub
adc
jp
adc
scas
fs
inc
cld
add
push
or
aam
xor
in
jecxz
insb
push
fstl
ret
cmp
xchg
iret
push
fnstcw
mov
aad
inc
and
mov
lret
testl
jb
mov
test
es
mov
outsl
das
mov
sbb
mov
or
cs
inc
int
ss
mov
mov
outsl
adc
and
insb
popf
pushf
fnstcw
and
repnz
or
add
mov
enter
mov
test
xchg
xchg
mov
imul
mov
mov
aaa
push
push
push
push
pushf
test
pop
lods
lret
mov
pop
or
add
adc
jne
and
push
inc
jge
cmp
or
xchg
iret
and
inc
cld
or
mov
fwait
xchg
or
mov
gs
cld
shl
leave
cmp
mov
cmpsl
outsb
mov
inc
fbstp
sub
enter
dec
test
fistps
jno
fldcw
dec
mov
push
fcom
insl
repnz
fisubl
xchg
aas
imul
push
add
stos
mov
fsubs
rolb
outsl
xchg
aas
push
test
xchg
mov
push
sub
fsubrl
add
rclb
mov
andb
xchg
mov
mov
add
cmc
pushf
adc
cmp
sbb
adc
mov
jns
popa
or
mov
mov
mov
pop
cmp
dec
inc
xchg
pushf
movsl
mov
push
and
sbbl
xchg
insb
pop
adc
pop
dec
jle
inc
and
addr16
jnp
jb
outsb
mov
or
mov
and
in
shlb
push
mov
in
add
pusha
leave
mov
cmpsb
jnp
jo
stos
js
mov
iret
sbb
movsl
adc
xor
das
sub
or
inc
in
mov
pop
sahf
pushf
pop
sbb
pushf
pop
dec
xor
cmp
ret
xchg
jae
pop
fmul
loop
and
adc
pop
test
cld
push
pop
adc
cld
fcompl
mov
addb
out
adc
jle
insb
mov
cmc
pushf
sub
cmp
mov
ret
xchg
testb
mov
orl
in
fmul
mov
fiadds
paddusw
out
faddl
jo
loopne
shlb
push
mov
pop
mov
in
out
scas
or
and
aam
push
pop
adc
xlat
dec
xor
pop
sbb
pop
call
pop
sbb
mov
push
dec
ss
daa
dec
xchg
test
jbe
push
aas
xchg
iret
cltd
insl
push
mov
jecxz
pop
add
cmp
lahf
inc
fs
push
pop
mov
sbb
mov
lret
hlt
pop
mov
stc
adc
jb
dec
or
cmp
or
cmp
inc
popf
sbb
sahf
in
fwait
enter
adc
iret
lret
aam
sub
iret
arpl
call
imul
lods
cmp
jecxz
scas
ucomiss
or
xchg
cmpsl
adc
cld
cli
cmovp
orb
outsl
lea
or
jb
dec
pushf
lods
sub
stos
fsts
or
mov
es
sub
or
imul
jnp
or
pop
pop
pop
sbb
out
lahf
add
js
cmp
push
pop
pop
cmp
mov
fcoml
dec
cmp
pop
sbb
sub
std
dec
sti
fiaddl
cmp
jb
cmp
data16
insl
lock
scas
jmp
fisubs
movsl
loope
mov
mov
lret
fadd
pushf
test
stos
pop
imul
mov
data16
mov
rorl
pop
fimuls
pop
inc
push
adc
addb
dec
cmp
xor
inc
sbb
mov
cmp
movsl
out
es
out
addb
cmpsb
xor
lods
jbe
dec
dec
pop
push
stc
jnp
dec
inc
mov
fisubs
testl
sti
and
pop
or
int3
aad
sub
push
xchg
test
divb
xor
add
sbb
adc
fisttpll
or
stc
scas
inc
mov
pop
or
pop
jb
adc
mov
adc
je
mov
fs
test
mov
shl
fsubs
cmp
add
push
pop
fisubl
adc
push
cs
imul
cmp
xor
cmp
adc
mov
les
add
and
pop
in
mov
lret
dec
inc
enter
sbb
push
fadd
add
and
dec
pop
push
or
insb
mov
out
stos
jae
ret
aad
mov
inc
sbb
in
fists
add
pop
cmp
daa
and
int3
xor
sahf
jbe
pop
xchg
mov
mov
adc
sub
add
adc
sahf
pop
int3
adc
sbb
sarb
or
mov
sarb
les
cmp
push
fs
mov
sbb
mov
in
rcrb
fadds
and
jp
adc
inc
mov
aad
xor
sub
or
inc
icebp
add
sub
jg
bnd
jne
jnp
rcrb
lahf
mov
adc
mov
dec
sbb
pop
mov
xchg
enter
mov
stos
and
add
and
adc
push
cwtl
test
mov
add
jmp
lahf
js
mov
or
and
xchg
out
adc
ret
push
cmp
sbb
cmp
pop
add
sub
mov
sbb
push
cli
pop
mov
pushf
jno
inc
adc
sarl
aad
or
mov
fsubrs
cmpsl
dec
xchg
call
mov
xor
adc
pop
leave
mov
ds
cltd
mov
cmpsl
sti
cmpsb
pop
andl
fimull
sahf
or
mov
test
cld
stc
jg
testb
push
movsl
xor
sbb
xlat
and
ss
mov
lret
movsl
pusha
sub
outsl
sub
or
aas
xor
push
repnz
movsl
imul
icebp
inc
or
sahf
call
adcb
or
add
sbb
mov
addl
xchg
inc
aam
popa
outsl
pop
lea
xchg
sahf
pop
push
sbb
push
pop
arpl
lods
rdpmc
adc
add
sub
pop
cmp
mov
in
dec
push
or
sbb
mov
fcompp
ljmp
jl
movsb
adc
js
cmp
sbb
inc
and
jp
outsb
shrb
call
cmp
jb
icebp
add
sbb
xchg
js
cmpsl
cmp
cld
cmp
inc
and
xchg
addr16
and
mov
sbb
push
jp
inc
push
dec
dec
push
mov
push
mov
add
cld
movsl
jae
jle
ljmp
and
gs
sub
adc
xlat
dec
adc
cli
jmp
fisubl
outsl
fsubr
pop
and
or
mov
adc
sub
and
mov
clc
cld
mov
or
xchg
or
test
push
adc
adc
dec
movsb
loopne
pusha
xor
push
int3
fwait
popw
jle
push
loopne
sbb
fwait
lods
insb
pop
sub
add
add
in
jmp
and
shlb
mov
loop
add
sar
mov
mov
dec
sbb
jl
gs
pop
mov
popl
adc
mov
add
sbb
sahf
add
sbb
int
jbe
cmp
sub
pop
cld
add
outsl
dec
gs
call
popa
cmpsl
sbb
dec
mov
push
adc
adc
or
and
fldl2e
add
sti
mov
mov
xchg
inc
dec
dec
dec
sub
jl
xor
into
and
or
sbb
adc
jecxz
sbb
and
rep
fistpll
push
aas
xor
dec
test
xor
clc
movsl
jb
sbb
fisubs
shrb
adc
cmp
mov
sbb
cld
or
xchg
mov
mov
bound
sub
cmp
cmp
out
icebp
adc
test
pop
cmpsb
sbb
sub
popf
xchg
push
cld
cmp
in
fwait
push
fimuls
lea
loop
and
js
js
xor
push
mov
sub
inc
test
jecxz
mov
pop
fs
sti
mov
ss
mov
or
sub
outsb
call
cmpl
das
shrl
or
jo
sub
sub
frstor
lods
sub
test
xchg
daa
cbtw
pop
push
icebp
int
mov
xor
sahf
jno
adc
sub
scas
iret
movsl
ret
sub
pushf
subl
icebp
mov
fwait
mov
daa
iret
push
mov
in
push
fmuls
test
or
insl
pop
aad
adc
loop
jb
in
mov
in
and
jmp
inc
aam
push
adc
xchg
dec
stos
dec
lds
pop
dec
sub
push
jns
test
out
inc
inc
pusha
aaa
mov
dec
cs
mov
cmpl
adc
pop
inc
or
aaa
fsts
jo
imul
mov
lds
pop
ret
cmp
cmp
push
loopne
and
sbb
test
inc
lock
cltd
fdivrl
and
sub
and
xorl
push
into
movsl
jmp
and
pop
cmp
and
xor
les
movsl
popa
pop
ds
sub
jl
mov
orl
push
lods
imul
dec
in
mov
push
fdivl
or
dec
inc
mov
loop
mov
or
jnp
sbb
add
mov
jbe
lods
cmpsb
rolb
cmp
mov
or
sbb
dec
fsubp
sub
sbb
ret
loope
or
sub
pusha
test
popf
adc
dec
push
adc
sub
inc
fwait
sahf
pop
nop
add
adc
inc
cld
leave
bound
inc
adc
shrl
icebp
test
adc
cmpsb
lock
cwtl
adc
dec
sub
jp
cmp
jecxz
int
mov
sub
push
cli
pop
mov
xor
mov
inc
xorb
movsl
cmp
bound
loop
test
jbe
mov
dec
jecxz
or
fwait
repz
sbb
and
repz
xchg
cmp
ret
dec
fstpt
push
xlat
mov
cmc
pop
sbb
aam
or
pushf
rclb
inc
adc
out
jo
push
xor
data16
mov
jmp
pop
push
push
out
jno
lds
sahf
add
jl
lock
push
adc
pop
in
lds
cwtl
gs
fstps
inc
pavgb
and
push
or
adc
jmp
in
sbb
ds
pop
push
dec
loopne
sbb
addl
push
xor
lahf
lea
jo
js
loopne
pop
mov
and
pop
mov
push
push
test
add
and
addl
inc
cli
movsl
dec
clc
push
pushf
dec
push
inc
and
mov
sbb
stos
out
mov
inc
adc
fldenv
pusha
test
iret
pop
nop
sbb
dec
gs
movsb
adc
xchg
inc
pop
and
jl
cwtl
mov
fdivl
pop
xor
stc
pop
and
sbb
imul
pop
xchg
and
push
les
lods
adc
int
inc
xor
cltd
dec
jle
out
sti
aam
push
test
repz
fstps
aaa
add
adc
dec
sub
addr16
or
popf
scas
xchg
lea
and
or
jle
jp
mov
std
and
xchg
sub
jge
negb
sbb
jne
sub
sbb
lret
notb
call
sub
pusha
popf
adc
dec
inc
mov
xchg
mov
inc
arpl
test
mov
xor
xchg
pop
push
mov
pop
in
pop
and
mov
mov
push
xor
aas
jg
rcl
dec
mov
ljmp
test
insb
fstpl
dec
and
and
cld
dec
test
mov
int3
cld
sti
inc
push
xor
sub
cmp
mov
xor
pushf
sbb
out
movsb
dec
xor
xchg
repz
cmpsl
out
or
push
lahf
aam
outsb
dec
cmp
pop
scas
fdivrl
ret
xchg
pop
push
shl
pop
ret
and
imul
mov
scas
sti
and
mov
cltd
ficomps
or
sti
inc
aam
xchg
dec
lahf
dec
ret
inc
cmc
fcomps
jg
dec
sbb
dec
or
test
adc
outsl
lods
arpl
out
repz
pop
adc
jecxz
add
push
push
and
aaa
pop
inc
imul
test
push
sahf
cld
hlt
sub
popf
mov
outsl
bound
jo
cmp
stos
cli
adc
or
jns
out
mov
jl
or
in
jnp
and
shlb
xchg
popa
fadds
xor
cmp
xor
mov
jnp
push
pop
icebp
mov
jbe
nop
or
jno
test
hlt
aam
mov
push
outsl
or
mov
ret
jno
and
pop
cltd
movsl
clc
mov
xchg
or
and
dec
add
test
xchg
or
xchg
or
adc
roll
pop
lods
add
xor
dec
dec
lock
in
sbb
ljmp
rorl
push
fmul
int
pop
bnd
into
sbb
jno
xorl
mov
aam
pop
sub
push
loopne
loope
pop
fwait
stos
adc
xor
xchg
pop
iret
dec
mov
push
imul
ficoms
or
push
xchg
fisubrs
pop
cmp
inc
sub
pop
repz
mov
mov
ss
xchg
fiaddl
aam
add
sub
dec
sub
jbe
jnp
mov
sub
mov
aam
mov
sahf
pop
ret
cmp
fsubs
push
adc
stos
xor
ljmp
xchg
pop
or
cmp
sbb
jne
add
dec
mov
and
fs
or
add
loop
push
outsl
and
xchg
iret
push
sub
loope
ljmp
pusha
and
js
dec
repnz
adc
in
addb
enter
js
cli
icebp
sbb
pop
xor
out
sbb
sbb
mov
sub
nop
lock
mov
pop
in
bound
jle
and
push
shrb
pop
inc
adc
and
jp
enter
iret
lock
test
dec
sti
add
sbb
movsl
ffreep
sahf
mov
cmpsb
fs
push
xchg
es
jmp
cltd
pop
xchg
pop
inc
mov
or
cltd
cli
out
leave
outsl
push
xchg
add
sbb
dec
sbb
adc
push
arpl
adc
pusha
shl
js
xchg
mov
xorb
push
mull
add
adc
sbb
dec
mov
or
sbb
xor
aad
js
cs
or
and
nop
xor
sbb
mov
mov
adc
mov
push
insb
aam
mov
cmpsb
jge
adc
loope
aas
outsb
inc
pop
fmull
rcrb
mov
cmp
orl
mov
mov
movsl
cli
icebp
xchg
cmp
in
push
mov
inc
scas
clc
push
leave
fcomps
cwtl
or
shrl
mov
jge
int3
xor
or
jle
dec
test
adc
inc
lods
cs
sbb
shr
xor
sbb
dec
insb
jle
pop
dec
popa
dec
push
inc
call
lods
mov
inc
lret
lret
lret
sub
mov
pop
push
cmp
and
push
js
movsl
fdivs
inc
insl
icebp
sub
pop
xor
mov
int
dec
outsb
cmp
int
sarl
insb
dec
imul
cld
adc
mov
dec
in
xor
sbb
cld
call
inc
sahf
punpcklbw
push
imul
in
aaa
notb
mov
or
mov
mov
gs
ficoml
push
lcall
adc
push
dec
das
jge
es
int3
cwtl
mov
dec
cmp
or
push
test
mov
inc
jne
xor
mov
mov
aam
rcll
and
sbb
subl
adc
cs
dec
adc
ss
rcrl
pusha
nop
xchg
add
dec
xor
sbb
pop
sbb
push
fs
roll
ret
inc
mov
sti
psrad
xchg
cmp
icebp
nop
inc
dec
popa
mov
and
mov
cmp
test
or
dec
cld
mov
xor
pushf
or
add
cld
lea
cwtl
inc
sub
mov
insl
jb
sbb
pop
insb
dec
mov
sub
adc
loopne
push
repz
movsb
aaa
addr16
inc
test
add
lahf
cmp
aaa
into
fstps
test
pushf
cmc
sbb
pop
or
jle
cld
dec
or
out
or
jl
jns
loopne
inc
xchg
add
cmp
xchg
pop
icebp
jmp
jo
clc
mov
dec
sahf
adc
cmc
sbb
in
or
gs
fildll
divl
lahf
jmp
cmp
sub
add
mov
in
xchg
cwtl
mov
cmpsl
pop
sbb
pusha
repnz
adc
nop
push
cmp
sbb
stos
in
adc
jnp
inc
push
cltd
cld
fs
div
push
dec
inc
sbb
std
dec
cld
mov
ficoml
incb
cld
ljmp
cmp
mov
repnz
jnp
push
arpl
lret
repz
inc
loope
fldt
add
push
int3
icebp
xchg
in
xchg
fwait
mov
insb
dec
xchg
and
cld
repz
adc
push
sbb
shrb
xchg
or
je
in
xchg
pop
jo
loope
add
adc
jne
or
push
in
jge
cmp
jecxz
ljmp
adc
outsb
mov
rorl
fidivl
xor
add
jae
sahf
ret
push
sub
mov
int
pop
inc
fcomp
adc
cs
stos
cmp
out
mov
test
xchg
adc
and
fdivr
es
xlat
sbb
xchg
add
jg
or
cmp
sub
popa
pusha
inc
js
adc
cld
mov
and
sbb
sahf
test
and
push
xchg
pslld
or
sub
cld
dec
dec
pop
cmp
xor
loop
or
and
cmp
cli
and
xchg
xchg
lock
cwtl
push
or
sub
dec
aas
dec
add
adc
mov
in
push
push
gs
insb
fcoms
loope
mov
jnp
xor
dec
bound
dec
dec
lea
jo
insl
inc
inc
mov
push
inc
adc
repz
push
jnp
mov
push
out
mov
mov
dec
sbb
out
lcall
mov
xchg
clc
fisubrl
cmpsl
or
mov
push
insb
out
sub
inc
jb
mov
xchg
inc
inc
mov
mov
in
pop
or
mov
arpl
push
push
xchg
and
mov
xchg
sbb
outsl
mov
testl
pop
sub
xchg
cmp
push
stc
cmp
mov
pop
das
cld
je
and
add
dec
lods
cmpsb
mov
enter
popa
mov
ljmp
adc
cmpsb
xchg
shlb
mov
inc
xor
inc
add
mov
pop
add
add
or
xchg
jbe
mov
lret
cmp
lods
out
cmp
mov
aad
js
mov
int3
sbb
scas
roll
das
mov
or
mov
loope
xor
xchg
orl
dec
inc
fisttps
dec
cmp
or
lcall
ret
adcl
stos
xor
pop
sub
jle
xor
rclb
cltd
adcl
pushf
cmpsb
mov
js
mov
sub
adc
in
cltd
cmp
jb
mov
adc
mov
adc
mov
xchg
icebp
out
jo
dec
push
pushf
outsl
push
cmp
cmp
fcmovu
dec
popf
add
cmp
dec
or
sub
push
push
or
sub
push
stos
aam
scas
arpl
jmp
dec
inc
rcrb
pusha
fnsave
pop
aam
push
adc
cmp
in
fisubrl
mov
inc
cli
shrl
xchg
ja
dec
scas
imul
dec
add
sarb
mov
or
outsl
es
add
hlt
xor
or
dec
pop
movsl
pop
mov
dec
jl
push
push
mov
jmp
push
imul
jmp
stos
and
sbb
out
int3
push
idivb
inc
sub
jl
or
jmp
sbb
push
pop
ljmp
or
clc
adcl
lcall
push
push
xchg
js
dec
jno
imul
insb
ss
outsl
imul
insl
pop
je
inc
inc
gs
aaa
push
sbb
mov
cmp
daa
insb
pop
push
cmpsl
pushf
push
insl
aaa
or
sbb
inc
mov
clc
cs
inc
inc
in
dec
cld
mov
aam
xchg
aam
sahf
loopne
jl
dec
push
clc
xor
lahf
inc
shl
rorl
inc
mov
adc
repz
adc
enter
add
cmp
pmaddwd
adc
adc
pop
in
pop
or
or
and
push
loope
push
jp
xor
lahf
fistps
lock
gs
dec
cmp
out
es
inc
push
dec
test
adc
std
xchg
lcall
dec
sub
inc
jb
xchg
into
repz
dec
fisubrs
pop
xchg
mov
sbb
arpl
or
out
call
jb
push
cmp
pop
push
xchg
arpl
dec
cli
xor
xor
mov
and
mov
test
scas
or
call
dec
pop
mov
push
inc
push
js
mov
pop
adc
pushf
sbb
add
inc
inc
adc
pop
je
cmp
mov
push
shl
dec
cmc
addr16
mov
nop
sbb
push
pusha
cmp
mull
outsl
repz
adc
sub
pop
pop
xchg
lahf
mov
add
fwait
ds
movsl
dec
mov
cmp
sbb
sbb
fs
add
xchg
pop
cmp
pop
adc
bound
sbb
mov
or
cwtl
inc
lcall
jle
cld
xchg
push
int
xchg
xchg
or
orb
mov
enter
inc
sti
jle
sub
cld
cli
or
or
dec
cmpsl
push
cmp
mov
stc
vphsubdq
xchg
xchg
sbb
popf
adc
mov
rcrb
adc
add
add
cmp
imull
add
cmp
shl
ljmp
gs
cmpsb
pop
bound
sbb
adcb
sub
dec
mov
test
cmpsb
aaa
add
call
lock
xchg
insl
pop
or
lds
push
test
dec
mov
dec
fildll
fildl
mov
or
pop
aas
ret
hlt
mov
imul
push
paddb
lcall
mov
and
data16
dec
xchg
fiadds
pushf
pop
push
in
scas
fists
xor
stc
push
movsl
ss
sbb
pop
mov
addl
ss
sbb
dec
pushf
in
mov
lods
cmp
xchg
aas
mov
inc
fildl
loope
xchg
clc
inc
ficoml
sub
or
mov
or
call
daa
cmp
adc
add
cmp
adc
test
repz
enter
je
add
sbb
sbb
and
in
pop
jecxz
aam
cli
cltd
les
loop
sub
mov
ret
push
cltd
loope
pusha
pop
adc
add
pop
adc
mov
inc
inc
xor
or
add
xchg
sub
stos
or
dec
das
sahf
aam
cwtl
loop
jmp
cmpsb
xlat
jmp
inc
inc
or
out
xchg
bound
cmpsl
sub
in
inc
gs
or
shll
pop
mov
push
aas
add
mov
xchg
dec
jmp
or
loopne
leave
pop
hlt
ret
flds
pop
fisubrl
pop
cmpsl
mov
rclb
orl
in
jp
andb
push
mov
mov
pop
xchg
push
call
pop
fwait
pop
scas
icebp
das
sbb
imul
jg
add
pusha
sahf
pushf
inc
or
in
out
shlb
ds
xchg
fs
xor
sub
xor
cmc
stos
fsubr
gs
add
push
or
add
shrl
or
dec
jne
shl
in
push
push
cmpl
es
xchg
icebp
pop
mov
dec
add
push
xor
in
dec
insb
mov
jl
xchg
jno
mov
sahf
jp
mov
aas
adc
mov
adc
cmp
out
pop
adc
push
jo
je
orb
cmp
nop
add
sbb
inc
icebp
pop
stc
add
inc
pop
mov
icebp
adc
into
jl
lret
dec
or
adcl
xchg
xor
sbb
test
push
add
movsl
add
mov
pop
jo
pushf
inc
inc
pop
pop
repz
lret
mov
in
sub
adc
sub
sbb
lock
lahf
aam
mov
push
in
mov
dec
push
test
mov
inc
mov
imul
push
sbb
sbb
aaa
mov
mov
mov
in
or
scas
aas
mov
lret
sub
sub
sbb
test
xchg
scas
push
clc
sub
inc
pop
mov
mov
dec
cmp
repnz
push
dec
movsb
jmp
adc
les
mov
mov
xchg
push
mov
cmp
or
push
loop
mov
dec
popa
mov
or
je
lock
jns
sub
daa
jl
push
ss
xchg
bound
cwtl
loop
sub
xchg
mov
push
push
in
jge
push
cmp
mov
xchg
add
cmpsl
iret
jo
mov
adc
fdivrs
pop
ficoml
ljmp
inc
ret
pop
js
pushf
cltd
repz
dec
xchg
sub
push
or
cli
cwtl
jbe
dec
sbb
xchg
add
fidivs
adc
or
push
or
inc
in
leave
adc
stos
out
xchg
xor
lcall
scas
in
mov
adc
jb
andps
mov
jo
rcrb
cmp
out
pop
lahf
jae
cmp
push
push
jle
sub
insb
lock
xchg
jge
xchg
pop
sbb
push
xchg
in
cwtl
and
pop
out
insb
lahf
and
sbb
adc
fs
sub
adc
movsb
or
push
js
and
pop
pop
fcomi
adc
fiaddl
and
pop
in
and
shll
adc
insb
xor
or
sbb
or
pop
sbb
and
scas
jp
push
mov
and
mov
or
repz
cld
fimuls
adc
lds
mov
fsubrs
cmp
and
fnclex
push
xor
call
mov
popf
pushf
and
pop
mov
cmp
mov
ret
mov
mov
or
xchg
addl
ljmp
subb
dec
dec
adc
int
jb
adc
sub
or
loop
in
adc
pop
sbb
pushf
sub
xchg
add
cmp
add
sbb
mov
fisubl
out
cmp
push
jp
sbb
or
lcall
aaa
shr
nop
jp
xor
in
mov
or
or
xchg
pop
shll
push
data16
xchg
xor
movsb
fucomp
inc
pop
jl
mov
inc
push
je
push
mov
xchg
mov
lret
pusha
mov
sbb
jp
xor
xchg
les
push
vfrczps
jo
loope
adc
jne
cmp
je
cmp
xchg
imul
cmp
and
nop
jns
fdivrs
movsl
dec
psllq
cltd
test
inc
lret
loop
lods
mov
in
shl
stc
sbb
mov
sbb
adc
fwait
les
int
sub
or
mov
push
inc
imul
xchg
insb
or
xchg
xor
and
dec
scas
mov
cld
ret
fwait
jne
shl
xor
add
aaa
cmp
out
xor
rclb
or
das
aas
mov
mov
jmp
imul
push
es
xchg
sbb
stos
lea
mov
xchg
jge
jl
xchg
nop
insb
dec
popl
and
lods
mov
int
adc
sti
inc
stos
pusha
cmp
adc
lcall
sbb
test
xor
pop
ja
inc
jecxz
xchg
push
inc
mov
adc
mov
jg
pop
xlat
xor
mov
flds
sbb
in
xor
and
inc
push
sbb
fsubrp
mov
add
xlat
not
and
push
dec
inc
in
push
cmp
push
out
ljmp
adc
push
ds
inc
dec
xor
sub
dec
addr16
fnsave
push
xchg
mov
gs
xor
and
ljmp
xor
lods
or
mov
mov
ret
dec
sbb
lods
and
cmp
sarl
jl
js
das
and
aas
mov
mov
dec
mov
inc
pop
pop
inc
addr16
mov
scas
pop
movsb
cld
or
pop
and
leave
mov
das
fadd
or
mov
dec
ss
notb
addb
out
leave
dec
sub
add
mov
xor
fwait
jb
adc
rclb
mov
lret
std
cmp
mov
js
nop
or
lods
repnz
mov
movsb
mov
cmp
pop
jmp
or
sbb
inc
inc
stos
ret
push
mov
push
inc
adc
push
cmp
xchg
or
push
dec
test
dec
cmp
lret
aad
pop
sbb
or
or
adc
stos
adc
lcall
pop
stc
push
cmp
and
sbb
jecxz
lahf
inc
inc
push
jp
stc
cld
pop
shll
sarb
repz
cld
mov
pop
mov
loopne
xchg
iret
in
push
cld
mov
mov
data16
mov
hlt
add
mov
sahf
jb
cmp
outsb
jg
mov
mov
push
testl
aas
sbb
pop
push
push
push
fidivrs
lea
lret
in
aad
push
inc
sbb
test
dec
sbb
rcrl
xor
ljmp
in
mov
mov
pop
pop
and
sub
mov
jb
stos
mov
pop
adc
mov
lea
orb
inc
fnstenv
cmp
data16
push
sbb
and
je
pop
fs
mov
sbb
cmp
cmp
dec
and
xchg
push
loopne
ret
lods
cmpsl
out
xor
and
fstpl
add
adc
adc
icebp
ljmp
jb
rorb
push
push
mov
mov
or
inc
scas
and
pop
fs
dec
fwait
and
lret
mov
adc
cltd
mov
cmp
stos
test
stos
incl
fnstcw
ficompl
cwtl
dec
ficoml
inc
pop
pop
add
into
sbb
cmp
inc
mov
jae
mov
mov
push
outsb
dec
les
enter
adc
addr16
mov
cmp
dec
cmpsb
cmpsb
and
cmp
or
dec
pushf
movsb
and
push
mov
jb
mov
and
rclb
cmp
cld
mov
inc
cli
fsubp
repnz
push
popa
ljmp
psadbw
and
sub
std
fisubrl
add
add
adc
lock
xchg
jle
mov
push
aad
rclb
or
out
daa
push
xchg
adc
ds
in
sub
lds
leave
inc
call
cld
fstpl
jge
call
inc
frstor
shr
fs
dec
in
xchg
dec
cmp
out
mov
pop
add
popa
sbb
cld
stos
subb
test
sub
add
add
cli
sbb
mov
sub
daa
dec
push
sub
xchg
inc
jo
jbe
or
xchg
dec
mov
sub
es
enter
sti
sbb
fwait
aaa
bound
out
pop
xor
adc
jle
movb
dec
inc
lahf
or
lock
jp
enter
jnp
cmp
fwait
addr16
addr16
insl
xor
ret
mov
pop
or
and
add
mov
xchg
cmp
adc
cmp
enter
cmp
push
mov
push
addr16
enterw
xchg
fwait
cmp
sbb
outsb
outsl
int3
daa
in
fdiv
jns
jno
insb
cmp
xchg
push
imul
pop
and
mov
movsb
mov
cmp
pop
call
cli
gs
cwtl
or
xchg
cmp
jne
adc
sahf
push
fwait
subb
adc
hlt
xor
rcl
rclb
mov
push
out
in
xchg
push
fs
aam
stos
cmp
or
dec
aam
push
push
pop
jb
lock
fimull
or
mov
push
test
int3
mov
fisubrl
fadds
mov
add
or
dec
push
lea
stc
stc
out
mov
inc
mov
ds
pop
adc
push
xor
sub
pop
jnp
pop
movsb
push
lock
imul
fists
jb
or
stos
xor
shrl
hlt
push
ficompl
cld
repz
call
or
jp
xchg
adc
xlat
cltd
test
incl
ja
insl
sub
xchg
adc
dec
and
imul
rclb
mov
dec
cmc
ss
sti
xchg
rcl
push
dec
and
mov
inc
mov
sub
rclb
pusha
imul
mov
es
sub
xor
inc
dec
call
lods
xor
mov
ret
and
sub
imul
aas
sub
and
xchg
mov
dec
and
out
dec
adc
data16
fwait
lock
out
mov
ss
lods
or
ret
push
mov
dec
cmp
and
mov
pop
cmp
gs
cmp
push
xlat
inc
lret
cmp
and
add
test
call
jecxz
nop
adc
push
loop
or
mov
outsl
jl
xchg
repnz
adc
adc
sub
out
and
mov
dec
jb
enter
mov
jmp
jnp
adc
sub
fnstsw
cmp
adc
dec
loop
clc
xchg
aaa
mov
int
cs
sti
mov
or
mov
xlat
js
sbb
push
mov
xor
outsl
sbb
mov
iret
push
mov
daa
push
rcll
mov
and
sub
pop
neg
fwait
inc
adc
xor
push
dec
xchg
xchg
aas
add
pop
xchg
dec
inc
or
sbb
leave
inc
xchg
jmp
cltd
adc
inc
push
pop
jae
insl
push
xor
add
pop
loope
test
cmpsl
movhps
fwait
adc
mov
popf
adc
fmull
mov
dec
mov
sub
cmpsb
cmpsl
shl
pop
test
lds
mov
cmpsb
cmpl
in
js
or
xor
cmp
test
addr16
xchg
or
add
adcl
fcomps
inc
cmp
dec
sbb
adc
cmc
push
inc
or
stos
push
scas
fwait
add
mov
test
cwtl
adc
pop
or
aaa
stos
in
pop
pop
cltd
fsub
and
outsl
adc
dec
andl
inc
pushf
push
xor
jnp
pop
pop
mov
cmp
fdivl
test
int3
adc
push
adc
fs
dec
outsl
sub
sbb
xor
pop
and
sti
cmp
sbb
push
mov
fstl
adc
or
adc
and
adc
inc
movsb
in
dec
in
ret
lock
push
adc
sbb
mov
mov
mov
jno
mov
lret
les
sbb
loopne
in
outsl
pop
sbb
std
sub
andl
xor
sbb
cld
cmp
ret
xchg
dec
ss
mov
sbb
sbb
push
int
setno
outsb
push
jne
pop
add
pop
cs
dec
or
xchg
icebp
js
pop
test
popf
adc
fmull
adc
push
lea
hlt
cmp
dec
stos
xchg
pop
in
insb
ja
xlat
sahf
clc
rolb
ret
outsl
cmp
js
inc
pop
mov
pop
pop
test
gs
fisubrs
pushw
test
jecxz
andb
rorl
cwtl
pop
jecxz
xor
lods
inc
movsl
scas
push
ljmp
push
cmpsl
pop
shll
jl
das
add
mov
mov
or
les
jne
xor
xchg
dec
cmp
pop
sbb
cli
ret
sbb
ret
mov
push
pusha
xor
adc
cwtl
push
scas
idivb
aad
lds
scas
push
fwait
nop
dec
adc
insb
pushf
rolb
xchg
das
cmp
imul
adc
xchg
sbb
out
inc
cmpsb
sub
adc
dec
cmp
mov
ljmp
adc
adc
negb
and
fnsave
jle
push
and
xor
das
movsb
mov
stos
xchg
cmp
cld
daa
stos
sbb
xchg
pop
xchg
push
adc
ret
xor
pop
xchg
dec
sbb
aas
stos
sbb
sub
int3
roll
std
adc
clc
xor
mov
les
ljmp
dec
inc
push
enter
mov
push
cmpsb
push
xor
sbb
mov
icebp
or
pop
pop
add
push
fiaddl
das
int
lret
mov
push
pop
mov
push
dec
int
pop
fld
or
mov
xchg
sbb
dec
aam
dec
push
xchg
and
daa
or
and
push
cs
hlt
nop
imul
movsb
xor
pushf
aam
lahf
imull
and
jae
push
aam
movsl
and
push
je
in
icebp
ljmp
pop
fs
and
pop
xor
je
xor
pop
cmp
xchg
addl
push
inc
pop
and
add
sub
add
cwtl
flds
out
lea
loope
mov
cld
aas
xor
insl
xor
enter
sbb
sbb
xor
or
sub
aas
shll
or
dec
adc
sbb
cwtl
shr
addr16
push
ds
sub
adc
lcall
fwait
push
std
pop
daa
and
in
push
aam
adc
sub
data16
push
dec
cmp
bound
and
and
or
sbb
sbb
jmp
push
inc
lcall
fcoms
sbb
cmp
add
movhps
fcmove
outsl
sbb
cmp
adc
fcomip
sub
adc
push
xchg
cmp
mov
jl
das
cmpb
mov
sbb
add
cmp
ja
lds
adc
pop
ss
loope
or
lahf
xor
iret
pushf
mov
cmp
pop
jns
je
mov
pop
jo
inc
data16
jge
into
lods
push
nop
leave
stc
push
xlat
mov
mov
mov
adc
or
xchg
inc
pusha
cmpb
and
or
popa
add
dec
inc
add
sub
or
in
and
push
adc
outsb
xchg
dec
pop
jmp
outsl
lret
xchg
loopne
aaa
inc
push
xchg
fptan
cmp
jmp
push
lods
lds
dec
cmc
xor
push
mov
sarl
sub
loope
aaa
enter
or
int
jno
inc
popf
jo
and
mov
jno
outsl
bound
mov
add
jg
fsubr
cld
out
aaa
jmp
lret
sub
or
mov
pop
leave
sbb
cmp
mov
inc
push
daa
sub
ljmp
call
inc
jno
fsts
add
dec
push
cmp
cmpsb
out
adc
jecxz
sbb
and
pusha
jns
int3
fstps
push
sbb
cmc
dec
inc
inc
inc
in
or
push
jle
sbb
mov
outsl
add
mov
sbb
mov
clc
adc
mov
lods
or
hlt
adc
test
outsb
sbb
in
sbb
sub
cmp
mov
pusha
jae
mov
jae
jmp
dec
inc
aas
cltd
fmull
push
dec
add
push
lods
pushf
scas
pop
push
dec
out
test
pop
and
pushw
adc
adc
xchg
dec
and
into
arpl
movsb
movsl
or
lock
pop
rorl
push
or
xor
adc
pop
and
inc
jnp
fs
mov
mov
inc
pop
cld
and
sarb
mov
push
sbb
leave
mov
ret
xor
icebp
lcall
xlat
push
rcr
xchg
push
sbb
mov
movsl
mov
cmp
repz
mov
mov
sub
int3
sub
push
call
and
pusha
xor
pusha
adc
rcrb
addr16
or
cmpsb
lods
adc
pop
inc
jl
mov
mov
mov
mov
lds
loope
test
in
xchg
xchg
ret
jl
sbb
or
xchg
loopne
dec
dec
js
add
out
mov
fnsave
jns
inc
adc
test
es
fisttpll
sbb
push
hlt
hlt
fdivl
add
sub
cld
mov
mov
sahf
adc
and
sti
repz
dec
add
stos
sub
push
aas
cmp
test
lret
push
repnz
lock
pop
jmp
pusha
in
lea
pop
xor
in
notb
dec
fmul
and
jg
lcall
xchg
or
cmpsl
xchg
loope
xchg
jb
cld
mov
mov
loop
dec
fcoms
and
sbb
adc
inc
or
stos
fdivrs
hlt
xor
movsl
mov
sub
es
lods
sahf
rorb
incb
jae
add
and
mov
sbb
inc
pop
sbb
dec
pop
icebp
pop
rol
and
xchg
enter
inc
or
dec
clc
scas
jp
hlt
iret
or
xor
mov
and
invd
or
repz
adc
jb
xchg
and
adc
add
cmc
stc
sarb
in
dec
aam
popf
pop
cmp
mov
imul
mov
adc
xchg
cmp
mov
mov
pop
adc
xor
fcmovnb
sub
or
adc
in
adc
xchg
das
cmp
inc
adc
loop
pop
xchg
xor
add
cmp
xchg
shll
ret
adc
cmp
js
pop
xor
add
cli
or
into
lahf
out
inc
out
pushf
or
aas
mov
dec
mov
xchg
sbb
cld
dec
cmc
movsl
pusha
aad
and
mov
jb
rcpps
cmp
mov
inc
je
fcmovnu
sti
pop
jno
and
xchg
cmp
adc
adc
jl
mov
gs
inc
pusha
dec
or
fists
enter
pop
lret
mov
sub
and
and
fidivrl
pusha
call
lds
lds
xor
adc
gs
xchg
sbb
hlt
icebp
push
adc
push
out
xchg
sub
adc
hlt
loope
je
test
jg
aas
jbe
jno
clc
cmp
adc
and
mov
sbb
push
mov
lock
imul
dec
filds
in
or
dec
sub
enter
fwait
push
adc
or
lahf
cwtl
cmp
xor
fs
adc
xor
in
pop
outsb
cld
pop
insl
pop
call
out
sub
andb
add
inc
popf
sub
lcall
mov
xor
xor
cmp
js
pop
pop
fcoms
inc
imul
mov
inc
adc
mov
out
sbb
xor
and
popa
dec
ret
pop
imul
cld
les
sahf
sbb
sub
mov
lods
cmp
inc
xchg
out
pop
and
xchg
je
dec
repnz
cmp
or
in
pushf
loop
js
adc
cmp
sti
fiaddl
xchg
pusha
mov
pop
sbb
adc
leave
jle
sarb
push
addr16
je
sbb
and
push
sub
push
inc
cmc
adc
dec
mov
clc
mov
or
sbb
push
pop
mov
and
fwait
lock
rcrl
fcmovu
fsubrp
cwtl
lahf
cld
inc
push
adc
jp
je
mov
rorb
pop
push
sbb
adc
cwtl
inc
or
adc
adc
fsts
xor
cltd
imul
or
xchg
mov
mov
repz
cld
cmp
adc
and
jp
mov
mov
mov
mov
jl
sbb
jbe
insl
mov
pusha
xor
xor
adc
inc
sbb
cwtl
lds
push
xchg
cmp
fs
jecxz
push
adc
popl
push
outsl
mov
sub
cmp
sbb
cmp
or
dec
lods
dec
or
sbb
paddusb
xchg
adc
xor
xchg
cmp
andl
dec
cs
daa
xor
aas
in
push
test
fcompl
cld
sbb
push
test
inc
cli
dec
fistpl
les
cmp
sbb
fsubp
xor
mov
fs
pop
lret
sub
dec
cmc
nop
add
cmp
dec
xchg
jb
inc
ja
adc
mov
movsb
jmp
xchg
push
mov
sbb
lock
cmp
jg
cmp
lcall
sbb
cs
shll
aaa
insb
mov
dec
lret
jno
mov
push
lea
mov
cmp
jmp
cmp
inc
xor
stc
push
and
jle
mov
xchg
cmc
mov
or
ret
repnz
and
gs
jae
pop
out
jp
out
je
lea
mov
mov
lea
notl
jns
ret
fldl
faddl
fs
xchg
hlt
lcall
mov
outsl
cmp
xor
fbstp
sarb
sbb
inc
pop
sbb
lret
lods
inc
out
dec
jbe
pop
sub
add
js
outsb
shl
jo
add
jb
stos
iret
dec
jo
and
mov
in
movsl
test
mov
gs
sar
jo
cmp
jmp
xor
mov
inc
mov
ljmp
popf
dec
mov
add
fidivrl
outsl
add
leave
and
adc
pusha
ljmp
sub
or
cmpsb
mov
sub
mov
adc
adc
jl
daa
out
dec
roll
leave
sar
fmuls
sbb
push
mov
or
sbb
xlat
lods
xchg
fwait
arpl
call
and
pop
pushf
push
pop
sbb
add
xchg
pop
sbb
pop
fwait
out
jae
jmp
inc
jne
xor
ljmp
add
pop
aas
mov
adc
and
dec
lcall
sbb
data16
fsts
aam
repnz
ficompl
pop
std
jbe
pop
rol
cmpsb
xor
jbe
ror
mov
or
ja
or
rcll
enter
js
push
js
icebp
add
inc
adc
push
xor
pop
fsub
std
add
xlat
mov
repnz
mov
push
fs
push
xor
xor
inc
loop
sbb
imul
das
icebp
adc
stos
js
loopne
push
dec
push
push
push
adc
push
pop
add
adc
xor
adc
push
mov
outsb
xor
xchg
rclb
add
push
lods
jae
add
ljmp
int3
xchg
lahf
or
fndisi(8087
adc
xchg
cltd
xor
cld
jl
cmp
cmpl
in
pop
popf
and
push
or
cmp
aad
call
popa
lock
int
enter
add
or
xor
adcb
sub
je
and
pop
xchg
xchg
push
xchg
xchg
adc
xchg
inc
popf
adc
sub
or
dec
mov
pop
test
xchg
xchg
out
push
inc
mov
cmp
adc
xor
in
insb
mov
pop
mov
mov
push
cmp
sbb
jmp
fidivl
adc
shrl
mov
xor
push
mov
leave
testb
insl
pop
movsl
cli
cwtl
push
and
icebp
sti
data16
test
xor
dec
mov
xor
and
icebp
adcl
out
pop
cmp
mov
push
adc
clc
cli
iret
xor
dec
lock
inc
mov
xchg
dec
xor
pusha
repz
mov
push
or
dec
in
aaa
xor
sub
add
add
or
and
xor
inc
cmc
or
and
xchg
sbb
sbb
sbb
push
push
and
fldlg2
sbb
sbb
pop
adc
add
fsubrs
pop
cld
ret
in
repz
dec
xchg
mov
sahf
cwtl
fwait
dec
pop
lahf
lret
lcall
push
mov
push
addl
push
mov
add
fdivrs
cld
jmp
in
mov
inc
inc
jp
push
mov
push
add
xchg
xchg
movsb
sbb
pop
mov
pop
pop
pop
repnz
pop
aas
dec
mov
adc
ds
xchg
jae
xlat
mov
jne
inc
or
cltd
xor
push
mov
pop
ret
push
jmp
in
mov
fsubl
xchg
and
loopne
jo
dec
mov
addr16
sbb
rep
cmp
push
ja
out
cmp
mov
inc
xor
rcl
push
out
fmul
push
sub
addr16
pop
add
mov
mov
cmp
in
push
push
dec
xchg
inc
mov
pop
push
ljmp
add
dec
call
jmp
fwait
das
pushw
cmpb
stc
cs
xchg
mov
dec
and
jg
jbe
sbb
or
jge
add
push
adc
xchg
push
int
jae
in
jo
xchg
mov
xor
and
add
adc
xor
jb
sbb
ret
dec
dec
pushf
imul
lods
inc
jp
or
xchg
jmp
or
or
daa
les
and
pop
xchg
adc
push
ljmp
dec
cmpl
cmp
push
out
cld
cld
adc
ljmp
push
jne
lcall
arpl
xchg
cmp
and
andb
out
icebp
mov
icebp
int3
xchg
push
popa
push
imul
clc
mov
inc
inc
sahf
cld
sbb
push
jmp
pop
gs
or
sub
lea
cld
fstps
mov
rorl
dec
mov
pop
xchg
push
ss
jle
cmp
fdivp
ljmp
push
clc
lods
data16
cmp
cmp
inc
jne
outsl
dec
sbb
repnz
lds
inc
add
fimull
pop
ss
jl
inc
js
loope
in
aaa
pop
fnstenv
mov
or
adc
mov
adc
xchg
data16
aas
inc
test
jo
out
ficompl
dec
cld
jp
fidivl
mov
subb
test
aaa
popf
shl
or
notb
testb
xor
jne
fsubl
lcall
sub
jbe
pop
xchg
aam
aam
rcl
inc
sub
addr16
jns
call
ret
call
xchg
dec
das
stos
cmp
sbb
cmc
cmp
xor
fsubrs
aaa
pushf
xchg
sub
jb
jbe
jnp
adc
add
ror
jmp
fbstp
mov
sub
test
or
rorl
lods
lcall
add
rorl
or
dec
cmp
push
movsb
adc
scas
popl
mov
jmp
cmpsl
cmp
lcall
imul
shrb
fcoml
jp
sahf
inc
in
popa
cmp
push
cwtl
sahf
dec
pop
cltd
sub
xchg
push
jl
mov
xor
jl
fwait
ficomps
cmp
or
xor
and
dec
cwtl
std
das
jl
dec
lock
adc
push
or
int
in
clc
push
imulb
push
pop
rclb
js
inc
into
cmpsb
sub
sbb
push
mov
xor
pop
inc
and
adc
out
jecxz
push
or
push
subl
mov
xchg
inc
jmp
or
dec
cld
jns
test
pop
test
in
jne
push
mov
mov
jne
xchg
and
lods
push
jb
lret
push
cli
xchg
inc
getsec
pusha
and
sbb
pushf
into
jg
hlt
pop
addr16
popf
je
fidivl
mov
sub
ljmp
cld
xor
xchg
in
xchg
outsl
loopne
rcll
mov
pop
pop
sbb
push
inc
sbb
lods
cmp
lahf
pop
enter
pop
icebp
inc
mov
test
mov
cmp
cmpsl
xor
mov
mov
cld
cmp
les
xchg
add
push
and
je
push
xchg
test
inc
adc
mov
addr16
paddb
mov
adc
pop
pusha
mov
fmuls
jp
cmp
lock
dec
or
inc
xchg
daa
fdivl
gs
lock
inc
jl
or
pushf
adc
mov
xor
dec
cld
push
mov
lods
add
push
xor
cmp
pop
sub
cmpsl
add
pop
adc
cld
push
adc
lods
sbb
push
mov
xor
jbe
pop
data16
sbb
dec
rorb
cmp
fstpt
gs
sbb
insl
aaa
push
pop
mov
add
pushf
stos
imul
pop
aam
xchg
popa
dec
pop
pusha
cmp
add
pop
sbb
inc
mov
xor
xchg
add
pop
and
icebp
popa
dec
add
ja
ret
add
xor
cmp
addl
xchg
jl
cli
push
mov
mov
dec
loop
jno
lret
outsl
lock
xor
int
les
sbb
lret
lahf
loope
jae
pop
int
add
cmc
xor
push
cmc
fcompl
cld
mov
dec
push
out
cmp
js
xchg
xor
in
cmpsl
arpl
lock
loopne
jl
icebp
add
mov
inc
sbb
stos
test
cltd
aam
dec
jle
xchg
enter
gs
hlt
adc
jmp
push
les
shll
xchg
loopne
adc
outsb
pusha
es
stc
popf
push
stos
sub
inc
push
sub
jge
inc
pop
outsb
jecxz
fwait
lret
sbb
jb
jnp
je
jmp
dec
xchg
xor
pushf
push
loopne
xor
cld
sub
sbb
movsl
jle
push
out
xor
mov
pop
loope
xor
jnp
cld
popf
jno
jmp
adc
repz
sbb
add
ret
inc
rcl
bound
cld
mov
jl
sbb
jns
sbb
and
and
inc
enter
xor
fsubs
sbb
mov
sbb
cmp
jnp
or
cmpb
push
repz
jecxz
pop
rcrb
rolb
cld
lcall
inc
push
push
sbb
dec
pop
cld
cmp
incb
clc
or
add
xchg
push
add
adc
stos
sbb
push
fsubp
or
push
addr16
outsb
fs
xor
jg
pop
xchg
pop
je
lahf
out
loope
mov
dec
sbb
jmp
movsb
or
sarl
pop
add
scas
push
andb
fidivl
sbb
sub
push
outsl
push
xchg
mov
jl
cwtl
and
push
or
testl
jp
push
hlt
pop
push
enter
cld
jmp
push
scas
je
cli
cmp
xor
outsb
mov
ljmp
mov
push
adcb
es
adc
roll
push
gs
sub
xchg
xchg
sti
std
mov
mov
mov
push
push
or
nop
outsb
push
or
pop
fidivs
xchg
sub
or
mov
cmp
jbe
jae
or
cli
sbb
ficoms
xchg
or
dec
xor
into
pushf
pushf
mov
aas
dec
test
jmp
dec
clc
sbbl
add
pop
mov
lret
cmp
xchg
add
shll
imul
nop
cmc
add
and
sbb
adc
push
sbb
dec
dec
inc
mov
int
arpl
fs
push
mov
test
imul
push
xor
push
adc
mov
xor
fs
xlat
cmc
cwtl
dec
jl
or
push
clc
test
test
fldenv
cld
nop
lcall
out
pop
xorb
push
and
dec
std
insb
in
add
pop
sbb
das
dec
mov
aad
shl
push
push
rep
out
jp
movsb
ds
xchg
pusha
inc
insb
test
data16
mov
scas
mov
or
add
push
pop
frstor
or
dec
push
mov
inc
mov
lcall
jmp
sti
sbb
shlb
jnp
aad
adc
mov
jno
adc
mov
jl
push
lret
inc
mov
fsubp
jae
aam
je
push
sbb
mov
clc
stos
xlat
lods
or
xchg
cs
rcr
dec
dec
mov
adc
adc
sbb
add
pop
pop
or
xchg
push
or
mov
lods
rcll
mov
jg
sub
sbb
adc
out
pushf
sbb
scas
xor
adc
sbb
fsubrs
fs
fwait
lock
jmp
aam
pop
and
ret
and
mov
jnp
pop
xchg
cltd
add
push
outsl
in
sti
push
imul
out
add
adc
je
stos
into
xor
sbb
pop
xchg
mov
add
inc
rcll
je
adc
test
js
xchg
movsl
cli
mov
lods
and
loopne
sahf
outsb
sub
cld
add
push
arpl
lods
xor
cmp
push
negb
xchg
jbe
jl
push
and
inc
cmp
pop
pop
in
push
repnz
cmp
dec
fld1
movsb
stos
xchg
nop
mov
push
hlt
mov
lahf
xchg
mov
xor
cli
push
mov
aad
and
outsl
inc
out
mov
inc
mov
data16
and
in
inc
out
insl
cmpsb
push
cmp
adcl
push
push
pop
ss
fcoms
sbb
in
xor
mov
or
sarb
pop
pop
cld
es
cwtl
mov
xchg
xchg
fimuls
sarl
jnp
inc
pop
or
sahf
or
add
mov
sbb
push
add
cld
push
inc
jg
adc
jl
cwtl
punpckhwd
inc
lret
xchg
movsb
sbb
ss
loop
cmp
inc
out
mov
sbb
or
adc
mov
mov
cld
pop
mov
and
pop
cmp
xchg
test
movl
and
cld
test
sbb
mov
jae
pop
push
push
pop
cld
insl
sub
mov
repz
scas
dec
or
aam
xor
stos
jno
xor
mov
jmp
jno
popf
repz
mov
pop
pop
negb
test
fwait
sub
pop
add
dec
pop
pop
dec
cld
xchg
js
ljmp
push
js
jmp
lods
mov
dec
cld
dec
inc
xor
data16
sub
push
cmp
cli
aaa
js
hlt
filds
cmp
sub
jmp
adc
repz
imul
jo
cli
mov
push
jmp
add
push
leave
gs
into
xor
mov
pop
or
adc
icebp
mov
dec
pop
pusha
cmp
adc
js
mov
or
lcall
movsb
lods
xchg
scas
pop
repz
xor
dec
dec
xor
sbb
pop
adc
out
xor
push
and
ret
jb
push
add
fimull
enter
icebp
jnp
jae
inc
sarb
lcall
jb
adc
or
or
aas
rolb
mov
fsts
and
add
and
xchg
jp
inc
jl
mov
repz
data16
sbb
add
or
clc
out
cmp
movq
bound
add
add
repz
push
dec
mov
sarl
sub
iret
sarl
pop
loopne
pop
enter
popa
aas
push
in
jmp
arpl
fcmovnu
pop
es
xchg
xchg
push
hlt
add
loop
faddl
dec
adc
imul
ret
pminub
inc
inc
mov
or
cmp
pop
add
sbb
or
out
add
fidivl
jnp
adc
outsl
cwtl
jg
jae
mov
dec
aas
adc
test
or
dec
push
stos
add
sub
adc
xor
push
inc
ret
and
out
or
cmpsb
outsl
sub
mov
fwait
sbb
lret
dec
push
push
add
repz
jmp
sub
add
loopne
in
inc
scas
ja
lods
rclb
xchg
mov
sbb
cs
add
movsb
inc
push
jo
xor
lcall
push
and
jae
setnp
mov
popf
inc
mov
push
cmp
fists
int
xchg
lret
dec
lahf
in
push
dec
aas
scas
mov
aaa
or
push
pop
inc
adc
rcr
dec
imul
mov
mov
push
dec
fwait
mov
jne
jmp
xor
out
inc
mov
fistpl
cld
lahf
pop
cmp
aas
cmpsb
xor
or
test
adc
outsl
inc
fisttpll
sbb
cmpsb
mov
sbb
sub
cmp
sbb
cld
iret
dec
fiadds
sub
sub
sahf
je
mov
insl
xor
sub
shll
jecxz
cld
and
or
movsb
call
movsl
inc
sti
lea
sbb
stos
or
fimuls
mov
in
in
lods
test
in
and
jmp
out
test
dec
dec
rolb
bnd
push
repnz
sbb
fucomip
adc
xchg
in
mov
jle
adc
inc
cld
jns
jo
push
fdivrl
pop
push
cmp
jl
popf
pop
jl
cmpsl
pop
ucomiss
pusha
sub
xor
sbb
pop
adc
loopne
out
mov
push
subl
mov
sti
sbb
mov
add
lcall
inc
inc
cmp
dec
xchg
xchg
in
fs
jo
leave
pop
cmpsl
and
xchg
addb
icebp
mov
sbb
aaa
rorb
lods
test
pop
push
push
scas
fdivr
dec
xor
xor
addr16
push
cmp
and
in
xchg
mov
int3
pusha
scas
and
inc
addr16
lahf
pop
jbe
pop
add
mov
and
pop
pop
fimull
pop
mov
cmp
aas
xchg
or
divb
aad
movl
and
xor
and
xor
out
and
push
inc
std
aas
jle
loopne
inc
cld
sub
push
jo
dec
dec
dec
add
pop
rcrb
jl
add
xchg
inc
jge
inc
pop
dec
inc
cmp
testl
addb
iret
lods
arpl
fs
sbb
loop
sbb
mov
mov
xor
adc
std
cld
pop
cmp
out
incb
ljmp
popf
xor
idivl
adc
ss
xchg
ljmpw
pusha
arpl
push
pop
lahf
jb
std
pop
dec
fcomi
fsubl
jb
js
stos
aad
mov
xor
gs
pop
adc
lahf
sbb
insb
outsl
das
jb
imul
aaa
xchg
fdiv
ret
mov
cmp
sbb
cmp
orl
or
xchg
jb
inc
mov
insb
and
test
jp
push
lret
aad
xor
jb
sbb
sbb
sub
enter
mov
mov
repnz
sbb
lahf
in
es
push
dec
pop
pop
mov
fstpl
cmp
in
imul
pop
sbb
bound
jl
jbe
xor
xlat
sbb
cld
les
movsb
cwtl
push
rolb
mov
movsl
or
test
cmp
xchg
jne
mov
dec
cmp
fstps
mov
pop
and
inc
jns
dec
and
loope
push
movsl
stc
std
dec
mov
sub
push
in
std
and
test
sub
pop
gs
dec
dec
push
fldl
leave
stos
and
add
xchg
mov
jge
cmp
lods
cmp
cltd
xlat
mov
iret
out
orb
aam
jg
cmpl
or
ds
rol
dec
pop
dec
cmp
lea
pop
push
dec
xor
push
xor
push
dec
xchg
inc
xor
lds
mov
in
dec
aaa
sbb
pop
jnp
lret
in
mov
loope
xorb
out
out
sbb
lds
cld
mov
pop
jne
add
push
pusha
arpl
sbb
push
sbb
sbb
mov
inc
add
cmpb
or
fistl
xorb
lea
mov
subl
sub
fsubrs
js
ret
and
cmpb
pop
mov
sub
and
cmp
inc
aas
mov
andl
outsb
mov
fsubrs
testl
xchg
aas
dec
addr16
cmp
push
fwait
lock
movsl
js
xlat
lods
xor
int
and
fists
or
mov
add
cli
fiaddl
sbb
and
orb
mov
cmp
pop
sbb
jl
jp
xor
imul
nop
cmp
int3
int
push
or
pop
mov
cli
sbb
cwtl
ficompl
or
int3
mov
out
cmp
dec
in
movsb
pop
aas
cwtl
int
mov
adc
sub
scas
fidivs
cmp
psrld
mov
sub
cmpl
mov
cwtl
test
mov
adc
xchg
data16
cwtl
pop
in
jge
aas
daa
out
jge
sbb
lahf
daa
push
movsb
mov
outsl
lea
sbb
pop
adc
enter
sbb
jl
negb
lods
xor
int3
cmp
and
imul
and
pop
mulb
mov
dec
sbb
in
jbe
inc
outsl
and
dec
xlat
push
fadds
stc
popa
push
lret
push
loop
faddl
dec
add
push
dec
or
adc
es
jecxz
jp
pushf
push
fstps
cmp
fdivrs
movsb
adc
sbb
add
sti
dec
jns
adc
inc
jecxz
cmc
dec
sub
sbb
sbb
add
pop
je
arpl
insb
sbb
jb
push
mov
adc
dec
mov
dec
repnz
les
fwait
jnp
adc
mov
mov
pusha
sbb
push
pop
lcall
jo
sbb
popf
fisttps
xchg
outsl
cmp
push
add
shr
enter
xor
pop
push
sti
adc
sti
rcrl
push
adc
sbb
mov
xor
xchg
jp
pop
jl
jp
ret
cwtl
mov
push
outsl
jns
lcall
and
aam
and
imul
clc
fdivrs
imul
sub
ficoml
xchg
xchg
adc
push
dec
push
mov
shr
pushf
pop
mov
sub
inc
inc
cld
mov
xor
pop
push
or
outsl
jp
xchg
ds
dec
aas
push
lret
cld
stc
rolb
cmp
out
xor
mov
or
in
loop
push
repz
lea
les
sti
adc
fsubrp
push
dec
sbb
xchg
sub
dec
ffreep
insl
loopne
leave
add
and
cwtl
jbe
arpl
lcall
mov
mov
jo
cmpsl
dec
aas
push
gs
push
mov
adc
jge
pop
push
fists
stos
or
das
pop
and
cmpsb
dec
xchg
mov
arpl
mov
mov
xchg
jp
or
jbe
xchg
or
or
cmpsl
adc
cld
sub
xor
das
pushf
rcr
push
xor
aas
dec
idiv
sbb
cld
shlb
push
inc
pop
adc
push
cs
sbb
pop
or
repnz
std
jmp
pop
dec
pop
dec
and
clc
into
call
out
gs
push
pop
orb
sub
sbb
pushfw
xchg
sbb
push
cmp
push
inc
int3
mov
mov
push
adc
push
sbb
mov
mov
add
xchg
or
push
jb
sbb
pushf
dec
out
pop
push
push
xchg
or
cltd
insb
cmc
ficompl
movsl
push
outsl
fsubl
out
adc
pop
xchg
sbb
cli
cwtl
pushf
jo
aaa
into
sarl
cmpsl
pop
inc
push
cmp
ficoml
imul
pop
and
push
imul
xchg
dec
sub
mov
je
add
nop
lock
cld
or
xchg
cmc
pop
out
imul
iret
add
mov
adc
in
jne
pop
sbb
aad
mov
pop
mov
xchg
add
push
sub
or
sbb
mov
es
outsl
shld
inc
sbb
in
imul
enter
xchg
or
loopne
pop
inc
arpl
sbb
pop
pushf
addr16
push
jno
mov
mov
gs
and
dec
xchg
sub
pop
daa
sub
in
test
sub
adc
xchg
dec
adc
sahf
pop
mov
cwtl
sbb
push
ds
jmp
mov
push
imul
push
dec
pop
xchg
stos
xor
push
mov
adc
push
add
in
mov
outsl
push
cmp
jmp
out
sub
loop
and
ljmp
pop
and
mov
imul
and
dec
jbe
xchg
nop
push
enter
mov
lods
cmpl
xchg
adc
and
push
sbb
rcll
or
cmpsl
popf
movsb
push
enter
pop
xchg
fwait
sbb
mov
mov
in
mov
dec
outsl
xchg
nop
outsb
sbb
lahf
add
ficompl
cmp
outsb
xor
inc
and
dec
in
sarl
or
dec
hlt
jecxz
test
lods
out
ja
call
test
jbe
dec
sub
cmp
push
lret
pop
xchg
cmp
cmpsl
negl
fwait
sti
sub
ljmp
sbb
mov
mov
jb
icebp
addr16
leave
mov
push
xchg
rcl
js
pop
mov
lret
icebp
andps
dec
inc
out
push
out
mov
dec
push
mov
ss
outsb
sbb
cld
xor
daa
push
dec
pushf
lret
stos
mov
jp
scas
sub
test
jo
test
and
push
int
push
add
and
xchg
add
cmp
dec
sub
or
xor
repz
inc
mov
fcoms
dec
dec
cwtl
or
or
push
jbe
fs
push
jo
clc
push
push
cmp
pop
jb
pop
xchg
pop
adc
ret
adc
dec
dec
test
fdivs
mov
dec
push
ja
pop
push
lret
and
pop
repz
adc
inc
mov
push
push
bound
push
cmp
mov
inc
jl
jg
mov
icebp
clc
sahf
and
sahf
jae
adc
imul
push
and
cltd
out
faddl
repnz
outsl
cmpb
and
sbb
out
outsl
adc
adc
out
sbb
cmp
insl
ret
jb
hlt
add
mov
jb
and
cmp
iret
xor
sub
push
sbb
rorb
mov
adc
inc
xchg
js
jl
clc
lods
sbb
int
into
cwtl
movsb
fimuls
imul
cld
mov
cmp
sbb
add
stos
mov
cmp
repnz
dec
rorl
lret
dec
mov
jmp
mov
mov
push
push
lods
aam
mov
dec
push
adc
stos
cmpsl
mov
cmp
scas
and
outsl
dec
sub
push
cmpsl
inc
inc
adc
add
xchg
and
daa
js
push
xchg
or
ljmp
mov
int
pop
mov
mov
sub
adc
imul
test
or
sti
cmp
mov
mov
fs
test
or
outsl
hlt
sub
es
test
mov
scas
adc
adc
jne
in
idiv
sbb
dec
xchg
pop
xchg
xor
push
mov
test
inc
aam
movsb
idivl
mov
scas
cmp
mov
out
jg
imul
push
or
in
js
pop
xchg
push
push
leave
mov
cmp
sbb
dec
jns
dec
int3
pop
or
jp
cmp
inc
push
push
mov
ret
jle
fwait
adc
xchg
sbb
repz
in
inc
xor
les
jl
inc
or
cld
cmp
adc
pop
shll
rclb
outsb
push
out
lock
mov
or
cmp
bound
fldenv
and
inc
xchg
inc
shlb
fwait
movsb
addr16
pop
sbb
push
pop
scas
out
jo
dec
mov
test
cld
nop
push
movb
das
lods
cld
pop
and
inc
outsl
lcall
fdiv
add
cltd
and
adc
insb
inc
jb
js
push
push
int3
or
test
aas
in
add
in
int3
cltd
js
dec
lods
ds
mov
dec
mov
sub
mov
push
pop
jb
cld
add
dec
sbb
sbb
fwait
push
ljmp
sbb
cld
mov
inc
and
cmpsl
fcomps
cld
js
inc
adc
into
int3
push
jle
lahf
sbb
outsb
mov
test
and
sahf
adc
rolb
adc
in
icebp
lods
xchg
rcrl
pop
stos
xchg
fwait
and
inc
std
lea
mov
push
bound
dec
adc
repz
cmc
sub
or
mov
jno
xchg
lcall
lds
add
scas
mov
mov
test
stos
inc
and
in
adc
sbb
fisttps
cld
out
adc
pop
pop
or
adc
mov
inc
dec
lea
test
daa
inc
add
mov
cli
sbb
or
or
add
xchg
loope
cmp
rcr
cwtl
xor
or
mov
mov
xchg
dec
sub
test
push
hlt
fwait
dec
cld
fs
add
pop
mov
xor
add
mov
iret
aas
ja
mov
dec
aam
push
xchg
outsl
clc
data16
dec
popa
cld
and
loope
test
cmp
add
pop
mov
inc
scas
imul
cld
imul
sbb
adc
cmp
push
cld
loop
mov
dec
filds
mov
jl
dec
inc
pop
cld
jmp
pop
jns
or
lea
dec
je
cld
pop
mov
jo
fisttpll
and
ljmp
ds
and
lods
int3
bound
push
adc
mov
bound
jmp
pop
adc
xchg
cmp
inc
cmp
insb
test
dec
cmp
jno
fsubrl
movsl
add
xor
movl
xchg
nop
and
xchg
scas
xchg
rcrl
in
sbb
popl
push
sub
aas
cmp
sub
dec
into
inc
movsl
stc
xchg
add
pop
icebp
mov
xor
xchg
out
xchg
roll
sub
lcall
add
xor
pop
dec
lcall
mov
inc
pushf
jnp
scas
inc
ss
mov
cmp
dec
nop
dec
add
data16
cmp
cmp
int3
pop
data16
or
xchg
pop
dec
xor
or
sbb
ficoml
cltd
push
or
adc
adc
jb
sahf
imul
cmp
fiadds
pop
push
xchg
lahf
pop
mov
js
xorb
jne
or
adc
or
cmc
cwtl
loop
aam
mov
jns
xor
push
cmp
les
and
mov
stos
lcall
rcrb
setns
xchg
cmp
movsb
mov
push
ret
into
sub
nop
cmp
lcall
mov
cmpsl
sbb
cmp
jnp
scas
in
xchg
push
sub
push
jae
xor
jmp
sbb
push
adc
pushf
sbb
cmp
mov
cwtl
cmp
xchg
je
in
push
je
mov
push
rclb
cld
push
cmp
ds
xchg
or
dec
and
cld
adc
add
jl
inc
push
sbbl
inc
sbb
mov
pop
cmp
cs
xlat
cmc
into
adc
mov
adc
es
int
push
inc
loope
push
in
aaa
sar
cli
fists
sub
sbb
loopne
rcrb
scas
sbb
jle
sbb
add
mov
cmpsb
pop
fwait
cld
lahf
lods
xor
mov
mov
inc
loop
imul
mov
fists
xchg
push
je
jl,pt
test
cmp
mov
mov
sahf
cld
das
push
in
lea
cmp
xchg
js
dec
mov
xor
sbb
mov
ret
test
mov
xchg
mov
subb
xor
mov
jns
cmp
nop
addr16
cmp
das
cld
jl
out
inc
pop
xchg
xchg
loopne
sub
sbb
dec
and
xchg
jo
and
fidivrl
fisttps
dec
add
push
jmp
add
cmp
push
jp
dec
pop
push
sub
mov
daa
and
out
call
mov
aad
aam
inc
sbb
push
sbb
jo
fdivrs
mov
addl
lea
fwait
push
dec
inc
push
jnp
cltd
and
and
notb
fs
and
sbb
sbb
ret
or
xchg
mov
fxtract
sbb
icebp
cmp
lock
lret
sub
mov
cmp
adc
or
stos
add
mov
lea
lret
mov
rorl
add
sarl
cmp
push
add
dec
in
inc
mov
andb
lcall
fcmovnb
sbb
xor
and
rcll
xor
jo
push
ss
push
and
divb
lods
adc
xchg
sahf
push
xchg
nop
ficoml
xchg
pop
das
cld
and
lcall
lcall
inc
notb
inc
stc
jp
shll
sub
or
fnsave
fisubrl
jbe
shlb
pushf
pop
out
lock
xor
mov
pop
lods
sub
sub
in
insb
xchg
out
sbb
das
stos
pop
xchg
dec
push
out
ljmp
xor
scas
je
push
in
push
icebp
pop
enter
fsubs
syscall
mull
xlat
in
repz
pusha
cli
add
pop
pop
sbb
and
add
movsb
mov
cmpsl
dec
xchg
pusha
and
jg
je
mov
add
js
mov
xor
movsl
imulb
fcom
into
sbb
sbbb
in
sub
je
pop
push
sbb
xchg
orl
push
ficompl
adc
mov
xor
push
outsl
ljmp
dec
and
jp
pusha
scas
scas
gs
dec
xchg
push
mov
or
add
loopne
pop
jmp
orl
loope
sub
movsb
data16
aam
outsb
js
jno
hlt
je
mov
sbb
rcrl
sub
mov
inc
cmp
inc
mov
xor
xor
std
push
lret
fistl
outsb
jne
cmp
mov
inc
cmp
push
and
sub
push
sbb
adcb
push
in
pop
fimull
add
filds
pop
cltd
fistps
dec
dec
hlt
adc
inc
add
cmp
cmp
sub
shrl
test
outsl
sbb
cs
push
and
xchg
in
cwtl
lcall
cmp
stos
mov
or
xor
and
jnp
or
adc
sbb
std
inc
leave
pop
repz
sub
cmp
outsl
roll
jae
das
cmpsl
pop
lcall
sub
outsl
mov
pop
adc
xchg
inc
fcompl
fldt
fs
xchg
mov
lds
nop
and
xchg
or
cmp
insl
push
loop
int3
and
outsb
mov
movsl
or
sub
add
repz
shrb
add
cltd
sub
xchg
sbb
jl
sub
dec
rcl
mov
addr16
in
in
setno
test
sbb
sahf
movsl
arpl
inc
sti
inc
or
mov
jle
xlat
mov
xor
sub
inc
scas
cmp
dec
stos
jge
sbb
push
fstl
jb
cwtl
dec
cli
push
fs
xchg
adc
daa
xor
pushf
outsb
es
cmp
aam
ljmp
icebp
mov
xchg
imul
scas
cmp
xchg
sbb
inc
in
subb
aas
and
fwait
jl
mov
pop
and
pop
fwait
sub
inc
pushf
sbb
xchg
enter
lea
popf
xchg
inc
mov
or
jle
outsl
sbb
pop
addr16
dec
icebp
ds
cmp
add
adc
invd
fwait
call
data16
aam
adc
and
in
sbb
xchg
push
dec
test
stos
inc
mov
adc
xor
push
cmp
cld
pop
sub
stos
or
jb
add
push
jle
sbb
xchg
int
mov
cli
pop
sub
xor
cmpsl
mov
adc
xchg
stc
ljmp
sbb
lcall
ja
fwait
stc
push
push
negl
or
sub
fwait
cmp
sbb
cmp
mov
inc
into
cmp
inc
xor
push
sbb
pop
xchg
xor
out
inc
cmp
push
sti
jle
inc
cmp
fwait
inc
pop
xor
push
sbb
mov
adc
lcall
sbb
or
repnz
pusha
arpl
lea
push
in
pop
jo
outsl
or
lds
rorl
je
in
sbb
cld
add
or
sbbl
ss
sbb
inc
movsl
ret
mov
lcall
xor
pop
aam
mov
cmp
ret
outsb
jl
xchg
cld
xor
xor
faddl
pop
push
cmp
cmp
dec
mov
outsl
cmp
push
dec
int
pusha
or
cmpsl
inc
movsl
into
or
movsl
sarl
or
xchg
dec
and
cmc
jne
test
clc
cmp
cld
and
inc
lea
loope
andl
insb
dec
inc
dec
push
ljmp
adc
push
dec
hlt
mov
mov
ss
xor
xchg
rorl
adc
data16
sub
pusha
cli
push
pop
push
je
sub
popa
cmpsl
fsubrs
add
movsb
rcrb
push
ds
adc
shll
stos
push
sub
cmp
lds
jb
jbe
aam
popf
or
ret
das
adc
pop
xor
push
adcl
sbb
clc
movsb
ret
cld
push
adc
push
daa
sbb
mov
jns
adc
dec
stos
mov
or
sahf
adc
xor
mov
cmp
lea
push
cmp
add
inc
loopne
xlat
push
cmp
add
mov
xor
and
mov
movl
iret
out
add
inc
sub
sub
mov
loopne
jle
pop
push
insb
loope
aam
mov
xor
mov
jecxz
in
or
pop
fwait
cld
inc
call
push
inc
lock
test
sub
dec
idivl
mov
inc
loopne
push
fldenv
cmp
out
or
cmp
leave
cmp
addr16
loopne
mov
rolb
test
sub
lea
rcrl
mov
jmp
mov
loopne
lcall
xor
je
xchg
xchg
cltd
and
mov
adc
sbb
loope
mov
mov
decb
dec
inc
jbe
aad
aam
jnp
jecxz
add
rolb
adc
sbb
rcrb
mov
cmp
xchg
pop
repnz
add
movsb
cmp
mov
cmp
cmc
repz
dec
add
inc
pop
push
je
pop
sbb
cmp
sbb
ja
xorl
movsl
adc
into
xchg
mov
repnz
shl
mov
mov
js
jb
sub
loopne
out
cmp
add
add
ret
push
cld
sub
clc
adc
lahf
out
pop
add
xchg
subb
adc
icebp
repnz
bound
sbb
clc
negb
mov
movsl
loopne
jp
adc
outsl
mov
out
clc
sti
sbb
add
pop
pop
xchg
mov
popa
loopne
aas
std
sbb
xor
push
aaa
in
test
aas
or
cwtl
pop
popl
jno
pop
lea
orl
outsl
and
push
cmpl
test
lcall
inc
mov
adc
sbb
push
sbb
sub
out
cmpsl
sbb
gs
xlat
adc
mov
push
add
sbb
xchg
add
lock
dec
inc
push
addr16
add
or
lods
inc
or
mov
and
mov
pop
sbbb
mov
xchg
pop
mov
pop
push
negb
dec
mov
jbe
xor
dec
stos
xor
xor
add
loop
stos
shr
xor
subl
mov
dec
dec
push
sub
jle
dec
call
pop
movsl
data16
pushl
dec
adc
xchg
lcall
or
add
cmp
xchg
sub
mov
fdivrl
xchg
fdivs
popf
popf
insb
add
repz
push
inc
pop
mov
cmp
ss
inc
xchg
dec
fimuls
mov
ljmp
and
xlat
pop
jp
cmpsb
cmp
and
bound
in
sub
fisttpl
push
mov
or
xchg
cmp
or
fwait
mov
sbb
add
stc
repz
and
sub
loopne
cmp
out
inc
out
sub
mov
out
mov
or
or
jg
lahf
negb
or
adc
jb
inc
in
push
push
pop
cld
adc
or
lock
pop
cmp
adc
mov
mov
cli
dec
pop
pop
and
cmp
call
into
pop
sbb
jp
rep
push
popa
xchg
enter
push
dec
int
mov
lods
pop
sahf
mov
xor
decb
pusha
ss
dec
or
cld
xchg
mov
inc
sahf
repz
arpl
pop
inc
inc
loopne
inc
lea
adc
in
inc
or
jp
jmp
testb
sbb
sbb
jns
fsts
inc
inc
mov
subb
jmp
sbb
lods
dec
push
data16
push
push
sub
aam
lcall
xor
jp
xor
jmp
dec
aam
addr16
ds
fists
in
xchg
dec
sbb
pushf
or
pop
cmpsl
les
push
outsl
push
hlt
jmp
lds
out
ja
and
cli
sub
lahf
out
dec
outsl
adc
cli
adc
inc
rclb
cld
xor
jb
inc
loopne
cmova
in
or
lret
outsl
or
int3
cmp
ds
and
cld
arpl
push
adc
repz
xlat
pop
jne
inc
adc
dec
stos
adcl
add
and
sbb
xor
and
clc
or
inc
out
mov
andl
mov
outsl
push
pop
dec
sbb
sub
mov
inc
gs
sbb
fwait
sbb
push
fdivs
popa
pop
or
and
add
add
pop
cmp
hlt
sbb
xor
idivl
or
ljmp
rcll
or
das
or
lahf
stos
cld
repz
ljmp
cmp
push
cld
or
add
aas
stos
idiv
sti
add
xchg
adc
lock
lret
lahf
cmc
fldl
mov
and
fs
push
insl
pop
xchg
lcall
lret
subl
add
adc
jmp
fistpll
xor
dec
mov
loop
mov
lods
xlat
push
jne
lods
mov
mov
into
or
and
and
iret
andl
in
lds
xchg
popf
add
lret
and
mov
fidivrs
lret
cwtl
adc
out
in
xor
aam
adc
out
or
or
xor
lea
and
sub
cmp
or
ds
or
arpl
fnstcw
ljmp
cmp
mov
shrl
adc
cmp
xchg
mov
adc
inc
or
inc
fsubrl
nop
and
int
xor
dec
sbb
mov
jecxz
adc
or
sbb
adc
push
xchg
sbb
jle
push
push
mov
ds
adc
cmpsl
int3
cld
fistpll
sbb
push
sbb
or
jg
loop
adc
xchg
gs
sub
jo
cmp
loopne
mov
fs
les
dec
sahf
adc
ret
dec
cmp
iret
jbe
in
mov
cld
dec
in
pop
aam
add
and
pop
cwtl
dec
and
sbb
loopne,pn
shrl
push
push
and
loop
sbb
lret
push
sub
mov
pop
inc
pop
jl
ficoml
push
cmp
or
mov
adc
and
dec
cmp
dec
sahf
pop
cld
jb
ss
lahf
adc
inc
mov
mov
pop
dec
and
inc
push
adc
adc
push
movsb
aaa
pop
cmc
adc
dec
sbb
dec
cmp
dec
hlt
pushf
xchg
sub
inc
pop
sub
or
push
xchg
add
xchg
sbb
cwtl
aad
sbb
cwtl
inc
rcl
dec
call
push
mov
push
aas
and
pop
sub
loop
cmc
rcll
add
add
sub
add
inc
sbbl
sub
adc
mov
push
sbb
push
inc
lahf
aas
idivb
inc
push
mov
push
cmp
pop
dec
cmpsb
push
notb
inc
js
xor
fdivrs
negl
mov
std
cmc
orl
insb
in
fldcw
inc
adc
dec
movsb
fwait
pusha
cld
adc
cmp
test
xor
push
lods
js
test
push
xor
addr16
dec
pop
push
loope
jo
cld
sub
sub
or
loopne
sub
or
sub
push
sahf
or
and
xor
dec
cmp
inc
dec
dec
xor
cmpps
mov
adc
dec
arpl
or
or
mov
repz
movsl
loopne
mov
gs
test
testl
int
and
pusha
int
int3
or
xchg
movsl
call
jns
sub
jo
mov
push
fucomip
icebp
dec
nop
cmp
xor
jnp
dec
je
out
test
push
xchg
inc
sbb
lahf
push
add
inc
pushf
test
jnp
jl
sub
sbb
jl
pushf
fwait
sub
push
push
dec
call
fnstcw
jl
lcall
dec
int3
sub
sub
sbb
dec
jmp
cmp
ja
jno
out
jg
cs
dec
mov
sarb
push
cltd
xor
push
or
and
pusha
pop
inc
xchg
lret
pop
mov
and
pop
pop
push
push
icebp
cmp
or
adc
adc
dec
cmp
add
jmp
mov
adc
dec
pushf
adc
push
xchg
inc
add
push
jmp
sbb
mov
jle
dec
dec
push
push
ret
popa
pop
js
jecxz
pop
loopne
adc
ss
movsl
mov
dec
mov
into
or
pop
inc
inc
pop
adc
int3
fisttpll
adc
or
push
aam
adc
cs
push
popa
push
jb
jb
out
js
xchg
mov
adc
add
xor
and
repz
in
sti
add
mov
dec
mov
adc
or
or
shl
sub
add
dec
fdivrs
sbb
adc
pop
inc
aaa
cmc
sub
aad
das
fwait
aas
mov
jnp
or
mov
add
inc
in
pop
push
inc
push
cmp
fxch
pop
cwtl
pop
mov
or
sub
sub
mov
in
add
xlat
push
xor
cmp
mov
sub
cld
xchg
push
cmp
xor
scas
adc
push
int
int3
adc
popa
lcall
cli
push
or
pop
jae
or
pushf
jb
adc
rorb
mov
aas
lret
mov
pop
cli
loope
sti
xchg
into
adc
jp
xchg
sbbl
add
fistpl
mov
fisttpll
jbe
insl
jle
add
imul
shll
push
mov
adcb
icebp
lea
pop
jae
mov
cmc
pop
dec
dec
aaa
jl
jmp
xchg
adc
cld
mov
jnp
imul
pop
dec
iret
decl
sub
out
popf
add
cmp
xor
xchg
int3
xchg
xchg
jb
lahf
jb
cld
adcb
in
or
mul
sub
xor
les
mov
popa
aam
pop
jp
fnstcw
inc
sbb
fidivrl
aas
jb
mov
sub
sub
push
sbb
fildll
xchg
cmp
jl
cmpsl
adc
push
adc
arpl
or
sbb
fs
pop
sbbl
xor
or
test
push
cmp
stos
xor
mov
sbb
sbb
pop
push
cmp
leave
adc
sbb
movsb
dec
loop
adc
push
cmp
pop
push
test
push
and
cmp
or
or
adc
addr16
ficoms
pop
stos
mov
call
js
push
fcmovnu
sbb
mov
imul
and
xchg
mov
fwait
pop
cmp
dec
movsb
cwtl
ds
adc
xor
gs
ds
cld
bound
cmp
push
adc
out
adc
sbb
hlt
test
sub
pop
pop
mov
icebp
mov
cwtl
std
add
jecxz
dec
out
and
push
push
out
push
mov
adc
add
xchg
sub
and
cld
pushf
pop
or
sbb
popl
mov
push
aas
xor
fs
adc
adc
aas
push
mov
inc
dec
sbb
nop
rorl
sbb
outsl
adc
lock
xchg
inc
pop
stos
cmp
add
or
or
cmp
jo
pop
adc
outsb
pop
sbb
shrl
push
pusha
clc
mov
ficompl
ss
sbb
cmp
sbb
add
jb
push
and
scas
sub
adc
sub
pop
insl
or
sub
cmp
sbb
or
adc
mov
sbb
ss
or
sbb
rcrb
cmp
sbb
dec
xchg
mov
push
mov
movsl
jecxz
adc
gs
call
dec
jb
inc
jecxz
cmp
cmp
mov
pop
pop
les
adc
daa
cmp
je
cmp
lods
or
pop
lock
add
cmp
add
pushf
mov
xchg
or
cmp
inc
or
inc
cmp
rolb
loopne,pt
inc
pop
push
daa
lahf
mov
call
pushf
adc
add
jle
pop
sbb
or
sbb
or
cmpsb
sbb
cmp
data16
xchg
push
add
in
jcxz
push
fadds
inc
xor
mov
insb
fadds
dec
jle
dec
jmp
addr16
push
in
adc
outsl
adc
xchg
push
fsub
pop
rolb
sbb
adc
pop
mov
sbb
push
mov
shlb
fstps
and
xchg
addr16
jb
mov
push
dec
dec
dec
fsubrp
rol
or
dec
jp
and
push
div
jno
adc
mov
mov
jl
fucomi
or
push
aaa
adc
push
in
push
adc
push
into
sbb
push
gs
sahf
shll
pushf
in
out
es
cld
orb
jge
je
jo
daa
or
mov
or
outsl
push
negb
into
cmc
pop
push
fcmovnbe
adc
pushf
pop
or
and
cmp
lds
icebp
inc
mov
push
lret
push
inc
cmpsb
add
sbb
subb
adc
mov
out
sub
dec
or
push
cmp
add
pop
cmp
jge
sbb
add
mov
test
sbb
xchg
dec
xor
or
cmp
outsl
sbb
pop
push
mov
sbb
push
or
repnz
cmp
pop
mov
cmpsl
out
cltd
xchg
or
pop
jl
lcall
push
xchg
mov
xchg
ds
cs
pop
ror
sbb
xchg
stc
add
cmp
and
add
movsl
cli
std
pop
je
sub
int3
push
push
sub
in
or
push
aam
cltd
clc
dec
xor
icebp
inc
jns
dec
int3
add
rclb
xor
fstpl
pop
lahf
imul
roll
mov
arpl
dec
or
mov
icebp
cmp
lahf
lods
push
jp
mov
mov
sbb
lret
sbb
cmp
aam
or
fwait
mov
jmp
inc
and
cmpsb
cmp
dec
or
sub
aaa
sti
or
or
xchg
in
cld
outsl
inc
dec
cmpsb
aas
in
adcl
pushf
inc
outsl
push
pop
cltd
sub
mov
rcr
popa
arpl
lds
cmp
bound
sbb
adc
sbb
xchg
mov
fisubs
ret
mov
inc
fsubrs
cld
out
or
adc
cmp
dec
ljmp
push
xchg
sahf
in
pusha
daa
push
ret
xchg
movsb
shlb
add
pop
mov
cmc
sub
pop
popa
mov
movsl
xchg
jmp
mov
dec
shrl
cmp
jmp
ret
push
mov
pop
pop
xchg
and
push
sbb
mov
cmp
dec
cld
mov
cmc
xor
scas
aam
pop
loope
sbb
adc
je
jnp
mov
mov
gs
out
xor
mov
fs
out
shll
or
xor
mov
cmc
adc
das
insb
or
es
or
adc
out
jmp
add
jmp
xor
mov
lds
xlat
loop
cli
xor
aam
jne
add
mov
in
fnstcw
jno
push
and
or
call
push
iret
jmp
fwait
push
gs
test
lahf
jb
out
out
mov
mov
cmp
call
in
ds
adc
inc
fdiv
push
sbb
movsl
fstps
iret
pop
stos
fwait
sub
or
sbb
xor
xlat
subl
aaa
add
sub
sbb
cmp
cmp
mov
adc
cmp
adc
mov
outsb
xlat
add
dec
cli
push
adc
mov
cmp
cmp
sub
aad
push
lret
aam
dec
dec
mov
les
mov
add
cld
scas
push
or
push
test
jp
jecxz
aam
hlt
xchg
sbb
or
sahf
in
mov
or
inc
mov
jo
pop
jmp
popl
inc
ljmp
xchg
cmc
sahf
pop
daa
jbe
add
jecxz
hlt
xchg
jp
add
pop
mov
mov
nop
fs
dec
stos
add
add
into
cld
aas
test
xor
loope
adc
xor
push
inc
pop
mov
insl
lret
bound
aas
jge
pusha
jae
cld
sarl
mov
shr
or
or
lds
repz
push
push
mov
out
xor
nop
xor
repz
mov
xchg
in
imul
jl
mov
push
mov
adc
or
push
xchg
fisttpll
xchg
xchg
icebp
pop
sub
adc
sub
jecxz,pn
fdivp
add
cs
inc
repz
sbb
lret
fisubrl
xchg
nop
xchg
call
notb
xchg
loop
addr16
sbb
mov
xor
cmp
adc
dec
dec
icebp
push
sub
cmpsb
test
ficompl
mov
rclb
cld
imul
jp
jnp
sbb
addr16
cmp
sbb
pop
xchg
adc
daa
data16
inc
sbb
add
or
into
inc
xchg
pop
xor
and
pushf
adc
xor
mov
nop
cmp
and
cmp
or
jno
out
adc
sub
dec
in
cltd
cli
cmp
jl
dec
sub
fwait
lock
fs
dec
adc
popa
mov
mov
mov
sub
fs
adc
or
sahf
push
and
fcoml
xchg
push
adc
xchg
mov
std
sub
adc
and
sarb
push
xor
pop
dec
stos
mov
cmp
adc
roll
pusha
movsl
aas
imul
int
push
xchg
mov
and
cli
dec
movd
mulb
lods
das
push
cmp
xor
addr16
sbb
xlat
xor
in
cmc
sbb
xlat
jmp
in
add
xchg
fildll
mov
cmp
icebp
push
ret
out
mov
mov
sbb
in
iret
dec
pop
xchg
lods
pop
loop
scas
hlt
dec
jle
fwait
cmpsb
addr16
rcll
mov
ja
and
pop
rep
add
fsts
cmc
adc
or
or
add
add
push
dec
adc
fwait
push
flds
inc
fs
lahf
shll
pusha
dec
mov
add
pop
dec
mov
cli
shrb
xor
inc
repz
test
addr16
outsb
inc
add
repnz
xor
sbb
gs
xor
int3
xchg
repz
loope
les
lds
das
out
mov
mov
fnstcw
stos
cmpsb
or
adc
icebp
adc
sbb
or
pop
mov
mov
jno
dec
adc
repnz
adc
fmul
xchg
loope
popa
lret
scas
inc
lods
shr
push
push
fimull
and
add
xor
lcall
and
cltd
fidivs
mov
adc
pushf
dec
nop
add
mov
loopne
push
loope
pop
out
push
outsl
js
xchg
cmp
pop
push
in
es
out
jne
mov
je
dec
mov
sbb
jmp
je
sbb
test
ds
adc
adc
add
xor
xchg
repnz
sti
rcrl
popa
scas
repnz
aas
dec
dec
jbe
in
push
and
in
aas
xlat
hlt
push
mov
push
in
and
repnz
push
fstl
fwait
sti
inc
movsb
xor
shl
pop
xchg
lods
add
xchg
adc
pop
or
adc
pushl
sbb
add
cmp
js
pop
in
sbbb
sub
lahf
notl
pop
mov
pop
or
cld
dec
jae
movsb
pop
out
outsw
xchg
sbb
and
sub
cmp
sub
js
data16
and
fimuls
xchg
out
push
or
or
cmp
or
sub
mov
icebp
push
test
sub
pop
popa
jae
adc
sbb
and
test
xchg
rorl
out
xchg
add
rclb
mov
sub
lock
shlb
mull
dec
add
mov
stos
pushf
adc
add
roll
bound
sub
xchg
es
scas
sub
xor
push
xchg
int
push
je
shll
adc
adcl
cmpsl
adc
and
pop
adc
loopne
insl
pusha
dec
outsl
sbb
fmull
mov
inc
add
inc
loopne
pop
fstpt
loope
stos
push
mov
frstor
popa
insl
jb
in
mov
mov
mov
fsubp
cwtl
jp
dec
dec
enter
dec
cld
adc
je
push
daa
pop
xchg
inc
mov
aas
mov
out
aaa
sbb
mov
aam
pop
jnp
aas
sbb
cmp
sub
xchg
outsl
pushf
pop
insl
inc
xor
outsl
xchg
mov
adc
ret
pushf
push
jo
dec
push
push
dec
xor
mov
sub
mov
clc
lods
test
sti
mov
pusha
popf
or
push
out
test
pop
mov
mov
xchg
mov
xchg
ret
enter
xor
imul
dec
or
mov
in
cmpsb
mov
je
adc
das
pop
adc
cmpsb
adcb
adc
and
bound
ficomps
cld
test
adc
arpl
mov
dec
popl
inc
je
add
push
or
inc
cmp
inc
adc
test
pop
pop
mov
jb
push
loope
inc
xor
loope
mov
lret
or
scas
dec
out
inc
fistl
dec
lock
push
or
add
cmp
cmp
xor
xor
and
js
scas
loop
fcompl
and
into
orl
push
push
sbb
or
adc
lret
cmp
dec
mov
lahf
movsb
icebp
fucomip
cmp
inc
std
sub
sbb
jl
dec
je
js
mov
es
push
inc
jno
loope
outsl
inc
rolb
outsl
jo
xchg
adc
pop
xchg
cwtl
cwtl
pop
mov
lods
sub
push
pop
dec
xchg
sub
xchg
mov
xchg
xchg
fmull
mov
adc
test
xchg
sub
jo
mov
movsb
or
outsb
dec
or
fwait
fwait
sub
dec
pop
test
mov
xchg
xchg
cld
rorl
inc
sbb
pop
push
popa
sahf
test
scas
repz
mov
popa
aaa
or
push
xor
daa
xor
jae
in
xor
fs
fcomi
adc
jbe
add
cli
idivl
pop
fsin
or
cmp
or
push
push
xchg
jbe
xchg
aad
push
push
mov
movsl
sbb
cli
xchg
dec
insb
push
xchg
cld
dec
enter
push
xchg
test
or
hlt
xchg
push
adc
or
cmp
sub
xchg
pop
xor
push
xor
mov
cmp
rcrb
pop
add
cwtl
push
call
inc
dec
xor
sub
mov
inc
adc
int3
cmp
movsb
push
xor
lods
mov
mov
xor
repz
and
imul
inc
inc
xor
dec
fs
sbb
scas
repnz
adc
dec
push
faddl
or
and
and
int3
imul
or
cld
adc
fildll
sbb
pushf
xor
jl
into
adc
pop
fwait
and
loopne
push
mov
into
fdivrl
fwait
cli
dec
push
add
pop
dec
lret
add
sti
cmp
mov
cld
pop
lret
add
cmp
push
in
pusha
xor
xor
sahf
pop
xor
sbb
movsb
or
cltd
bound
adc
icebp
or
add
mov
rcrb
sbb
inc
sub
pop
int3
out
push
arpl
push
sub
mov
in
mov
dec
dec
xor
dec
shlb
and
roll
ret
and
xchg
pop
ret
js
lock
push
or
ficompl
xor
fucomi
sbb
movsb
xchg
sbb
or
in
movsl
mov
aam
xor
js
dec
in
icebp
cmp
ret
jo
and
jae
dec
push
loop
cmp
sti
adc
in
int3
inc
push
add
gs
xor
push
popf
push
outsl
jle
scas
fs
pop
or
adc
sub
fcmovb
xor
xchg
push
sub
bsr
push
popf
lds
adc
cli
xchg
mov
push
or
xchg
insb
xchg
dec
inc
dec
xor
sub
or
pop
dec
popw
clc
test
popf
jb
push
mov
jo
xchg
daa
mov
popf
sarl
pop
js
pop
icebp
inc
sub
js
fsubrp
fistpll
cld
iret
out
mov
pushw
cld
dec
scas
inc
dec
stos
pop
cs
sbb
outsl
sbb
jbe
xchg
sub
aaa
data16
mov
and
notb
jmp
push
or
lahf
pop
fistpl
cmp
inc
dec
insl
jmp
lcall
dec
cld
mov
xor
xchg
fs
cmp
push
mov
sbb
pxor
push
pop
inc
push
mov
mov
ret
mov
dec
or
inc
sbb
lea
adc
in
inc
imulb
push
stos
inc
sbb
into
dec
out
dec
out
pushf
add
or
cmc
outsl
push
adc
push
add
adc
mov
test
or
dec
jecxz
or
pop
fsubl
mov
sbbl
inc
lock
push
test
inc
cmp
gs
mov
sbb
dec
dec
mov
push
test
mov
sbbl
sbb
adc
cmp
sahf
pop
fdivs
lea
divps
in
xchg
cs
repz
test
mov
lods
orb
int
jecxz
hlt
lret
mov
aas
shll
and
cmpsb
jnp
sysexit
push
mov
shlb
out
outsl
or
adc
mov
sub
push
sbbb
cwtl
or
xchg
add
jp
inc
dec
pop
xchg
mov
shll
mov
hlt
pop
popf
mov
test
js
or
call
adc
js
cmpsb
repz
and
or
imul
pop
dec
sar
inc
pop
mov
adcl
lcall
or
loop
xor
or
aam
ss
cld
pop
xchg
sbb
mov
iret
sbbb
xor
sbb
nop
or
addl
push
sbb
in
and
dec
into
inc
shlb
mov
enter
xchg
sbb
sbb
adc
adc
sub
rclb
xor
and
mov
pop
aas
mov
inc
int
or
sbb
hlt
rclb
and
int3
std
or
or
mov
mov
shlb
pop
xchg
adc
dec
push
das
and
xchg
daa
jo
push
sbb
stos
and
fsubl
hlt
imul
sbb
adc
cmp
adc
mov
mov
jl
dec
jg
add
cmp
dec
cmpsl
nop
jg
adc
jl
jl
xchg
repz
lods
sti
in
and
jl
add
outsb
and
mov
sahf
inc
xchg
or
mov
or
mov
pop
xchg
ror
sbb
std
insb
push
cmc
lea
sub
and
pop
adc
ljmp
xchg
adc
adc
jbe
dec
addb
cmp
add
cmp
xchg
repnz
daa
pop
stos
sub
inc
mov
frstor
pop
xor
int
pop
icebp
outsb
mov
outsb
sbb
cmp
or
push
int3
or
ds
int
or
cld
cmp
dec
sub
pop
iret
push
ret
xchg
out
mov
mov
cmpsb
or
bound
fstps
negb
push
add
sbb
sbb
outsl
in
xchg
rorl
inc
inc
lahf
xchg
sub
imul
and
test
adc
sbb
rcr
dec
outsl
sub
cmp
xchg
pop
push
pop
inc
xor
data16
ftst
and
outsb
add
dec
push
push
pop
mov
fstpl
out
and
pop
in
xor
lahf
jb
dec
sub
add
pop
xor
imul
push
mov
pop
mov
sbb
outsb
sub
cmp
jns
ficoml
pusha
cld
fists
fs
hlt
imul
xor
dec
loope
mov
imul
add
inc
mov
aam
roll
fwait
and
mov
andl
sbb
sbb
and
in
inc
cltd
movsb
cmp
inc
icebp
jmp
jo
dec
ds
clc
out
dec
inc
dec
push
cmpb
loope
loope
jns
lea
sub
push
test
loop
mov
adc
cmp
push
and
mov
adc
movsl
xor
leave
stos
xchg
mov
cmp
ss
xor
and
outsb
sbb
pop
xor
jl
dec
xchg
pop
mov
dec
sbb
jo
add
xlat
dec
cmp
scas
lret
mov
xchg
pop
mov
ret
outsl
ss
outsb
dec
aaa
and
fidivl
jb
int3
addr16
inc
repnz
add
mov
xchg
repnz
cmp
inc
pop
js
xchg
jo
push
jo
fcoml
cmp
pushaw
pop
push
imul
test
sbb
cmp
aad
pop
sahf
adc
xor
sbb
add
faddl
lods
sub
mov
sbb
in
sub
int
imul
mov
stos
mov
dec
dec
cmp
addr16
add
pop
xor
push
sbb
xchg
dec
sub
mov
inc
adc
cmp
hlt
or
fs
das
mov
sub
addl
dec
or
jmp
jns
insb
aaa
and
icebp
shrb
dec
mov
xor
stos
stc
mov
je
imul
mov
adc
dec
cmp
out
jp
adc
xchg
sbb
and
xor
inc
in
jbe
adc
divl
add
dec
sub
mov
punpckhbw
dec
jp
xchg
push
lea
pop
xchg
out
sbb
jb
addr16
pop
or
adc
push
insl
dec
push
cld
jl
mov
mov
push
adc
jbe
outsl
aaa
inc
mov
test
ret
pop
out
dec
fistl
jp
mov
sbb
out
es
cld
mov
adc
sub
xchg
lods
mov
xor
out
add
mov
rol
rorb
mov
aas
dec
mov
or
sahf
addr16
jns
inc
and
pushf
cltd
dec
fucomp
js
daa
pusha
int3
jl
test
sbb
dec
push
cld
mov
je
mov
aaa
rol
mov
pushf
ds
lret
mov
mulb
adc
mov
lret
data16
dec
xor
xchg
xchg
or
adc
sbb
push
adc
dec
jne
ret
ljmp
push
adc
in
js
add
dec
out
or
add
pushf
pop
add
mov
sbb
sbb
pop
or
lcall
mov
xor
and
push
ret
fwait
rcrl
sbb
push
and
xchg
pop
jge
fisubl
jge
push
add
lret
adcl
outsl
popa
xor
sbb
pop
sti
shll
jnp
push
xchg
mov
xchg
xchg
mov
dec
test
pushf
xor
pop
test
sbb
dec
push
pop
and
aas
imul
push
out
jle
pushf
loop
movsl
push
inc
lods
xor
imul
hlt
fsubrs
test
out
inc
ret
jecxz
sbb
adc
cltd
decb
aas
cmp
or
sbb
je
lret
and
sbb
and
xchg
adc
ja
int
mov
lods
inc
fistps
es
sub
adc
and
sub
mov
dec
jl
mov
jae
js
add
add
push
push
pop
jg
pop
jle
cmp
lahf
mov
lods
sbb
pop
and
aam
sbb
and
sbbb
data16
xchg
fimull
adc
pop
and
adc
mov
and
adc
in
mov
sub
sub
daa
sbb
test
cs
xchg
and
xchg
dec
lea
adc
data16
jecxz
and
push
adc
xor
and
adc
xor
dec
inc
and
adc
add
out
xor
xchg
sarl
mov
and
sub
push
xlat
xchg
pop
lret
or
cltd
xchg
loope
repnz
sbb
adc
jne
sbb
jle
repnz
jno
into
aas
adc
mov
call
jmp
cltd
movsb
or
out
loop
stc
lahf
idivl
cmpsl
call
or
in
inc
cmp
mov
sbb
pop
fwait
push
ja
lcall
ret
and
movsl
or
aaa
repz
inc
inc
mov
cmpsb
adc
js
push
jae
fisubrs
xchg
xor
cld
dec
jmp
inc
mov
or
mov
sti
inc
mov
outsl
push
add
iret
add
sbb
xchg
dec
rclb
out
es
repnz
xor
rcrl
xor
ficompl
pop
pop
jmp
sub
xor
add
lahf
cmp
pop
ljmp
xor
xlat
xor
leave
sarb
mov
or
inc
loopne
push
pop
fsubr
sub
push
adc
filds
movsl
in
fisubs
ljmp
cmp
mulb
mov
mov
test
jns
sbb
mov
leave
pop
cmp
sti
mov
jne
movb
push
xor
repz
mov
mov
adc
cmpsb
xchg
jb
xchg
jmp
mov
fisttpl
mov
lcall
and
mov
sbb
sub
aaa
dec
imul
inc
insl
jbe
jae
je
xchg
inc
jne
fsubrl
add
push
jo
aas
jno
sub
mov
jbe
data16
aam
push
xor
xchg
cmc
push
je
in
lds
repnz
jns
insb
mov
outsl
fadd
cld
idiv
jle
fcompl
orl
or
lcallw
push
pop
sti
sub
fmuls
and
loope
imul
sbb
cmp
push
pusha
nop
mov
inc
inc
dec
shlb
or
mov
jne
sbb
aam
nop
inc
push
stos
fsubs
aad
and
cmp
push
pop
jp
loope
lcall
ror
push
inc
stos
xchg
add
daa
push
loope
shrl
xor
add
adc
lcall
sbb
mov
pop
xchg
cs
xchg
mov
cmpsl
xor
nop
sbb
ret
dec
jle
cmp
adc
jae
lea
dec
xor
dec
adcl
outsl
sub
push
jne
stos
mov
cmc
add
rorb
push
mov
xor
movsb
fwait
leave
or
dec
flds
mov
xchg
and
dec
or
movsl
mov
push
hlt
or
in
xchg
aas
sbbl
stos
cmp
sbb
out
fisubs
adc
lahf
push
mov
push
test
ja
sub
cmp
cmp
jp
xchg
dec
dec
dec
cmp
pop
test
idivb
or
cmp
cmp
fldenv
or
aam
xchg
mov
data16
xchg
sahf
fwait
dec
jl
jle
and
sbb
lret
sub
and
cmpsl
xor
cld
adc
test
imul
jnp
in
inc
loopne
rol
in
push
mov
cmp
movsb
aaa
add
nop
dec
aam
push
mov
xchg
movsb
test
lret
push
adc
and
dec
mov
dec
pop
movsl
rcr
xchg
les
mov
cmpsb
fmulp
je
inc
divb
lea
hlt
mov
sti
nop
pop
pop
sti
xlat
xor
dec
pop
sub
push
cmp
add
adc
sbb
aaa
push
incb
shlb
into
mov
pop
jl
xor
or
clc
mov
mov
push
or
inc
mov
out
dec
mov
test
push
cmp
jg
mov
cmp
mov
pop
sub
in
or
fcomps
push
stos
mov
or
out
inc
cmp
pop
and
xchg
out
sbb
es
inc
aam
sub
icebp
inc
aas
leave
xor
cmp
scas
sbb
mov
cmp
mov
push
inc
fwait
dec
fmuls
mov
js
mov
jmp
mov
mov
or
or
xor
pop
les
dec
jb
cmp
add
lds
adc
dec
jg
jne
or
push
out
negb
add
or
dec
add
loope
cld
jbe
fcoml
cld
ds
adc
jnp
je
rorb
jl
and
outsl
and
pop
outsb
js
push
inc
out
aaa
data16
mov
pushf
ret
sub
push
inc
xchg
loop
add
loopne
push
xor
scas
lret
lret
int3
sub
jecxz
aam
push
and
outsl
setnp
js
pop
push
add
dec
out
ja
dec
jno
xchg
cld
sbb
mov
push
and
xor
lcall
repz
out
verw
push
push
in
xor
pop
dec
inc
sbb
xchg
push
clc
std
lods
push
push
dec
mov
enter
fwait
cld
rol
sbb
ja
xchg
les
add
adcl
or
sub
loope
jmp
pop
mov
fcomi
sub
cmp
into
mov
ficoms
xor
cld
scas
push
roll
adc
and
mov
sbb
rclb
cli
add
or
sbb
cld
int
jl
lods
data16
js
lea
pop
rorl
pop
dec
cmp
xor
pop
mov
rcr
cmp
inc
cmpsl
inc
outsb
adc
mov
pushf
adc
and
mov
jne
dec
inc
in
rcrb
jecxz
shlb
sub
inc
inc
mov
cmpsb
sbb
xchg
fstpl
imul
ret
adc
or
arpl
or
push
pop
inc
icebp
xor
dec
and
sbb
xor
sub
repnz
loopne
push
mov
mov
xchg
or
cmp
xchg
mov
lret
xchg
pushf
sbb
fs
push
lods
shrl
mov
xchg
mov
and
in
adc
hlt
xchg
xor
cld
imul
sbb
sub
push
shl
or
pop
sbb
push
push
fisubl
mov
jo
pop
addr16
mov
lods
hlt
push
imul
js
dec
cmp
fcmove
stos
int3
cwtl
sub
adc
ljmp
add
rcll
sub
pop
test
fwait
cmp
sbb
push
or
adc
fwait
in
mov
pop
das
iret
sbb
adc
ret
push
fnstcw
sub
fsts
jb
inc
mov
sbb
orl
add
sti
icebp
push
dec
add
sbb
jb
in
push
jb
push
fisubl
jb
or
jb
jmp
add
xchg
or
pushf
dec
add
nop
mov
lea
icebp
pop
repz
mov
add
int
sbb
call
into
xchg
mov
add
mov
xchg
add
mov
push
xchg
sub
adc
clc
adc
sbb
into
je
adc
mov
scas
aaa
ret
inc
xchg
mov
push
fsubp
pop
mov
xchg
lahf
pop
or
pop
cmpsl
sbb
or
ss
aas
jbe
dec
mov
xor
add
aad
inc
push
jecxz
bound
push
push
shrl
sub
xor
dec
outsl
push
xor
jns
xchg
pop
faddl
sub
inc
xchg
xor
or
repz
dec
cmp
fstps
xor
pop
pop
jmp
pop
ret
mov
pop
sbb
sti
sbb
inc
jge
shl
dec
daa
cld
loope
mov
add
cmp
xchg
dec
adc
pop
or
adc
lea
xchg
stc
popa
mov
pop
cmc
xor
fs
or
fsubrl
xchg
dec
imul
daa
leave
fists
xchg
cmpsl
lock
fwait
in
out
scas
or
loop
push
push
aam
sbb
sub
adc
fsub
inc
dec
hlt
lahf
cld
mov
loope
shrb
sbb
scas
push
fcoms
or
adc
cmc
sub
or
inc
popa
pop
and
adc
dec
into
out
and
xor
adc
xor
push
mov
scas
mov
push
xor
sbb
adc
mov
dec
jp
add
int3
push
inc
sub
mov
cmp
adc
lock
pop
jle
push
mov
or
adc
iret
dec
pop
aam
fldl
mov
loopne
xchg
popf
shr
pop
mov
or
in
mov
ficomps
dec
aas
pop
adc
aaa
sbb
pusha
shlb
mov
or
or
insl
xchg
imul
out
jg
fistl
jge
sub
inc
pop
adc
sub
or
aam
mov
movsl
mov
xor
sbb
loopne
xchg
aam
pusha
fs
cmp
adc
add
mov
ret
rorb
mov
jle
xchg
jb
enter
sbb
fmul
add
inc
or
stc
pop
insb
xchg
mov
adc
cmpsl
mov
add
adc
mov
xchg
cmpsb
xchg
jg
lock
aaa
dec
or
pusha
ds
xor
pop
aad
xlat
inc
ss
rclb
and
fiadds
ja
add
lea
aam
add
pop
dec
and
aas
or
sub
pop
pusha
add
pop
sbb
shl
inc
cmp
adc
int3
jg
cld
and
aas
pop
icebp
pop
cmp
add
inc
sub
mov
pusha
xor
dec
inc
xchg
xchg
fdivs
in
pop
fcom
add
movsb
xor
les
dec
fsts
adc
in
fs
jmp
cmp
lds
cmp
in
data16
cmp
xchg
daa
insl
or
and
shll
push
dec
cmp
adc
sub
out
mov
jb
pop
pop
or
mov
sbb
adc
xchg
movsl
push
mov
adc
in
sahf
inc
xor
or
dec
jl
push
mov
mov
inc
outsl
or
inc
adc
cmp
insb
xor
xchg
addr16
add
pop
adc
dec
inc
xor
lret
out
xchg
mov
sbb
mov
mov
mov
cld
dec
xchg
bound
xor
aas
or
mov
mov
test
dec
pop
adc
inc
jecxz
popa
cmp
fstpl
push
sbb
pusha
sbb
icebp
js
loope
jae
dec
es
cli
jp
inc
lret
mov
jmp
clc
inc
pop
inc
lds
cwtl
rorb
push
jge
repnz
jp
dec
mov
addr16
dec
dec
add
lcall
adc
mov
hlt
pop
adc
pop
pop
xchg
xor
sub
adc
test
movsb
cmp
pop
adc
cmp
lahf
rorl
add
push
popa
in
nop
mov
mov
mov
adc
pusha
data16
pop
add
ss
cwtl
into
cwtl
daa
clc
mov
notl
push
xor
leave
test
cld
fsts
test
sahf
inc
add
fmull
sub
sub
nop
sbb
fwait
add
dec
dec
mov
aaa
jnp
jnp
jb
test
repnz
lahf
inc
add
enter
fld
or
push
mov
cmp
or
loopne
and
adc
pop
xchg
pop
nop
jecxz
out
add
push
call
sbb
insb
in
add
mov
repnz
pop
mov
sub
daa
or
dec
xor
lock
jno
rolb
xchg
es
push
int3
aas
imul
lea
icebp
cmp
sbb
xchg
aas
and
sbb
push
stos
pop
or
shr
loop
cld
loop
clc
lods
in
inc
mov
hlt
jecxz
adc
mov
mov
shll
jecxz
mov
stc
or
stos
out
lock
jmp
ret
lods
pop
add
pop
mov
fmull
rolb
aas
mov
and
cli
push
insb
sub
sbb
or
xchg
lcall
xchg
add
fwait
mov
add
xor
arpl
jmp
lods
lds
inc
jge
pop
or
arpl
lods
or
xor
fnstenv
pushf
push
mov
call
hlt
mov
and
xchg
dec
ret
mov
sbb
mov
cmp
and
xchg
pop
or
jle
inc
pop
inc
pop
lretw
in
out
xchg
jno
lds
cmpsb
loope
mov
or
sub
pop
mov
in
push
sub
pop
jle,pn
and
nop
and
push
aam
pop
sbb
rcrb
sbb
adc
push
sti
pop
xor
add
fwait
lock
xchg
pop
sub
or
dec
pop
test
xlat
jns
jmp
addr16
fstpl
sbb
pop
jbe
nop
or
pushf
or
and
and
cwtl
pop
ja
cmp
jae
push
add
fsubs
or
xor
push
xor
roll
push
je
cld
pop
fnstsw
adc
paddb
sahf
outsb
enter
cld
ss
add
or
add
mov
add
or
ljmp
adc
push
pop
insb
mov
cld
and
add
pop
or
xor
pop
cld
or
pop
sbb
adc
cmp
adc
cld
icebp
adc
les
cld
adc
adc
cmp
and
mov
std
test
pop
jp
and
sbb
cld
orl
or
pop
cld
sbb
or
scas
dec
jge
sbb
sbb
pop
mov
cld
sarb
mov
jl
mov
movsl
jle
mov
mov
push
cwtl
cmp
push
stos
out
inc
dec
stos
pop
sub
test
jl
insb
sub
cwtl
cmp
cmp
push
push
xor
cmp
cmp
cmp
dec
push
aaa
cld
cmp
dec
push
xor
cmp
dec
push
xor
cmp
push
xor
cmp
cmp
dec
push
cmp
cmp
cmp
dec
push
ds
cmp
dec
push
aas
cld
cmp
dec
dec
cld
lods
dec
lahf
pop
cmp
mov
je
cld
xchg
dec
subl
cmp
jae
dec
and
or
add
jge,pt
sub
add
sbb
cld
dec
dec
sbb
cld
lcall
dec
dec
sbb
cld
mov
add
cmp
mov
adcw
fwait
push
fdivrs
fnstenv
das
fsubrs
pop
movsb
inc
jae
jl
cwtl
lahf
jle
mov
fiaddl
or
aaa
cld
mov
lret
jb
movsb
sub
jno
sbb
pop
cwtl
dec
lcall
adc
adc
adc
adc
sbb
dec
pop
xchg
aam
adc
pop
outsb
mov
adc
dec
mov
sbb
dec
xchg
xchg
add
pop
jb
pop
add
sbb
jle
mov
lcall
lcall
lcall
sub
dec
and
dec
lahf
dec
adc
and
push
mov
je
adcb
jg
xchg
sub
xchg
repnz
fcomps
xor
pop
and
pushf
adc
comiss
push
mov
sbb
dec
xchg
pshufw
pop
dec
sub
inc
adc
mov
cwtl
dec
push
mov
jo
cmp
sbb
fs
outsl
cmc
jmp
xor
inc
xor
rcr
lret
push
lods
movsl
je
sti
cmp
rcrb
ret
js
aas
mov
movsl
outsb
lds
cld
pop
adc
xor
adc
jp
push
push
pusha
cmp
cmp
pop
fistps
call
call
pop
pop
dec
in
leave
xchg
mov
xchg
int3
in
frndint
loope
decl
mov
cmc
dec
xchg
in
cli
push
push
in
fistpl
dec
mov
push
cmp
jno
orb
fimuls
push
pushf
fs
mov
pop
or
xchg
mov
pop
push
sbb
pop
out
cli
adc
cmp
add
movsl
jg
push
and
xchg
xchg
in
out
jecxz
xchg
or
test
cld
cmp
imull
jl
insl
push
dec
adc
cld
mov
jae
ljmp
or
or
inc
mov
lea
dec
dec
add
inc
inc
lret
or
xor
pop
rol
push
inc
or
sub
cli
jg
add
pop
std
mov
pop
push
mov
cltd
loope
outsb
test
int3
pop
lea
shr
aam
push
and
cmp
xor
aad
mov
cmpsb
cmpsl
add
cmp
test
jbe
or
insb
fnstsw
cmpl
clc
jl
repz
repnz
push
sbb
icebp
cmp
out
cmp
ficompl
push
std
fidivl
iret
js
iret
sub
mov
jecxz
test
cmc
jl
adc
out
mov
push
inc
sub
xchg
test
mov
daa
test
movsb
push
push
aad
push
push
out
lahf
push
hlt
mov
stos
icebp
push
dec
jge
cmpsl
sahf
mov
mov
pop
cmp
adc
xchg
adc
adc
add
or
xor
fldcw
rclb
push
sbb
push
mov
ficoms
cmp
jno
clc
mov
mov
jo
jle
mov
pop
pop
mov
adc
sbb
or
imulb
pop
or
xchg
mov
dec
mov
push
mov
cmp
popl
cmp
rcrl
and
ds
adc
cld
sub
out
xchg
mov
dec
test
sub
hlt
popl
mov
pop
dec
jecxz
push
outsl
add
imul
dec
jb
icebp
int3
cmpsb
faddl
rcrb
scas
push
sub
mov
filds
mov
jae
je
dec
or
add
cld
pop
in
sbb
xor
jb
pop
pop
sub
callw
or
jo
adc
or
dec
popa
scas
adc
sub
mov
dec
mov
mul
pushf
mov
ret
xor
outsl
cmp
dec
xor
sub
dec
cld
repz
sbb
pop
and
adc
jb
out
out
leave
jb
xlat
push
jae
dec
sahf
cmp
roll
dec
scas
push
addr16
icebp
loope
mov
push
hlt
addr16
icebp
inc
lcall
add
xchg
insl
sbb
and
ret
add
inc
and
and
lcall
icebp
sbb
and
lcall
xchg
test
icebp
add
mov
in
stos
lcall
push
fdivrl
aas
pop
push
movsb
push
cld
leave
xchg
es
pop
ja
stos
cmp
push
pop
xor
dec
arpl
in
or
add
sub
aas
rcrl
fdivrp
jecxz
cmp
popw
lods
push
or
pusha
sbb
inc
icebp
lea
push
dec
outsl
outsb
imul
in
mov
dec
dec
push
adc
mov
mov
cmp
loop
add
xor
sbb
dec
xor
adc
or
sub
push
and
sbb
mov
add
cwtl
int3
icebp
or
xchg
lahf
xor
mov
pop
push
in
push
or
inc
sbb
imul
push
fdivrl
jbe
lret
fstpl
cld
lret
int
or
orb
enter
xor
fsts
inc
imul
and
js
push
inc
sbb
pop
pop
sti
adc
inc
ror
fdivl
movsb
sub
xchg
sub
ja
fcoms
aam
cli
push
jl
hlt
pop
push
test
push
pop
hlt
call
xchg
test
jo
inc
inc
faddl
push
cmp
sbb
in
adc
outsb
mov
mov
aam
aam
sub
aas
jb
loopne
fadds
ret
dec
mov
xchg
insl
out
fdivl
or
push
ds
sahf
add
mov
inc
lock
and
ficoml
pop
sbb
ret
in
lds
or
push
mov
packssdw
cmc
fmull
call
in
hlt
xchg
pop
les
push
xor
inc
pusha
insb
push
sbb
or
out
es
lcall
icebp
je
mov
jb
or
push
lods
divb
pop
js
mov
and
and
outsl
add
sahf
push
sbb
outsl
dec
loopne
movsl
aam
fdivrp
cmpsl
cmp
les
mov
dec
sub
jge
pop
jecxz
scas
inc
jmp
pop
add
cld
rorl
and
aas
add
or
ljmp
mov
mov
out
or
dec
icebp
adc
sahf
mov
or
out
adc
nop
out
popa
sbb
push
aaa
inc
or
aas
mov
adc
mov
subl
cmp
hlt
fs
gs
cmp
lret
mov
jmp
imul
cmp
insb
mov
push
adc
sub
jae
ror
mov
cli
shr
lods
sub
adc
shlb
jle
xor
jo
mov
adc
mov
sub
mov
pop
jno
ja
push
pushf
fnstenv
in
aam
jge
jge
jno
jg
pop
push
add
imul
and
sub
inc
mov
lock
mov
or
xchg
mov
cmpsl
xchg
out
sti
pop
jle
std
aam
mov
cmpsl
repz
push
in
mov
addr16
push
data16
js
xchg
fimuls
jl
add
mov
push
pushf
or
mov
jno
inc
sub
adc
add
rcr
mov
cmp
call
lahf
adc
scas
push
or
cmpl
mov
dec
push
inc
dec
or
pop
inc
cmp
xchg
pop
inc
and
out
add
daa
cld
jbe
add
lods
mov
addr16
jno
lea
and
data16
or
cmc
push
sub
scas
out
push
jnp
lahf
out
inc
lret
sbb
sbbb
pop
adc
in
push
ss
or
and
push
pop
fcomps
jbe
jmp
jo
stos
test
enter
xor
cmp
sbb
add
dec
xor
je
sub
sbb
and
cli
fwait
std
pusha
xchg
dec
fstpl
fcoml
cmc
and
pop
gs
enter
stc
mov
cs
add
stc
mov
movsb
and
rolb
xor
lods
js
sub
mov
xchg
adc
mov
mov
hlt
inc
xchg
aam
and
adc
in
or
jle
xor
xchg
pop
adc
sbb
push
sub
movsl
xchg
adc
dec
push
add
xor
cld
xor
sbb
pop
imul
push
lcall
and
jbe
sbb
push
dec
xchg
pop
cmp
inc
push
sbb
push
lock
fldz
fsubs
sbb
push
lods
pop
je
sbb
xor
sbb
jl
sbb
lcall
shlb
lea
fmul
insb
xor
cld
push
xchg
adc
jl
ss
aaa
in
xor
lcall
int
inc
mov
adc
sbb
and
mov
fs
mov
xor
jge
icebp
push
popf
hlt
push
mov
ds
movsb
push
pop
movsb
pop
sbb
dec
test
cltd
and
dec
cmp
iret
add
adc
hlt
cmpsl
mov
lcall
push
out
xchg
and
adc
cli
push
sbbb
pop
or
or
xor
dec
fidivl
or
jns
fidivrl
inc
mov
in
fimull
aam
add
cld
lods
push
loop
xchg
in
mov
mov
cmp
lods
cmp
mov
lcall
mov
pop
loope
je
imul
mov
gs
xchg
dec
sahf
iret
adc
popf
jnp
add
xchg
sbb
ret
out
pop
or
lods
cmp
fs
sbb
rcrb
adc
cwtl
repnz
lahf
xchg
xchg
adc
push
and
mov
cmpsb
sub
push
jmp
movsb
xchg
dec
xor
xor
ss
add
loopne
in
push
ss
push
jmp
jno
adc
inc
push
out
mov
mov
xor
sub
dec
dec
xor
lods
pop
cld
add
cmp
ss
add
sub
or
inc
adc
mov
fisubl
fs
repz
into
sub
push
and
and
jmp
pushf
dec
sub
rorl
sub
mov
es
sbb
push
push
dec
jne
cmpl
sbb
sub
sub
mov
dec
and
xchg
mov
sub
mov
dec
push
xlat
pop
dec
inc
jno
pop
mov
aam
loopne
aam
jecxz
sub
push
cltd
fstpt
or
adc
sub
test
and
push
enter
pop
pop
loop
fdivrs
mov
jmp
ret
popa
test
idivb
imul
dec
mov
cmp
arpl
push
addb
aam
and
in
lahf
dec
or
mov
jge
pop
jle
add
push
jecxz
in
iret
push
sub
lods
aaa
cmp
stos
cwtl
jl
ds
add
cmp
mov
lret
pop
or
repnz
lods
xor
or
data16
adc
dec
icebp
mov
or
dec
adc
ret
arpl
push
jo
sbb
sbb
and
gs
int3
popw
dec
fdivrl
mov
add
xor
dec
dec
jnp
aad
sbb
xchg
and
or
cmp
cmc
lss
mov
in
xor
jb
and
sub
push
cmp
xchg
mov
xlat
xor
dec
sar
or
lret
xor
adc
cmpsb
pop
push
push
pop
jecxz
jge
adc
xchg
gs
fistl
loope
mov
push
mov
mov
nop
dec
subb
jl
mulb
pop
lock
cmp
xor
and
and
and
adcl
loope
jne
sbb
jp
in
jo
mov
sti
mov
rol
jge
and
ret
aas
cmpsb
sbb
clc
push
fdivp
sub
xor
xchg
xchg
xor
dec
add
dec
dec
xchg
pop
sub
mov
push
fcomps
dec
cmc
call
cmpsb
sub
mov
adc
arpl
js
or
cmp
or
push
adc
outsl
adc
mov
mov
fcoms
xor
pop
js
mov
push
inc
dec
lret
pop
and
xor
adc
lods
inc
jns
rorl
shlb
dec
mov
sbb
xor
inc
sbbb
cld
mov
adc
gs
mov
in
je
lret
sub
dec
cs
push
int3
mov
movsb
pushf
in
jge
add
insl
gs
pop
pushf
out
or
loope
pusha
xor
shll
sub
aas
call
add
sbb
add
xchg
xor
cltd
repz
icebp
dec
jb
jp
pop
aas
and
ljmp
loop
dec
sub
pop
or
sbb
dec
xor
dec
jns
data16
pop
push
ja
pop
ss
sbb
sbb
mov
sub
or
adc
je
xor
shlb
mov
cli
adc
addr16
pop
jge
cmp
frndint
loope
faddl
jb
sub
out
pop
cmp
xor
fcmovbe
lret
repz
lea
aaa
fwait
cld
pop
inc
gs
pop
lods
dec
mov
sbb
cmp
cmp
cmp
int3
enter
cli
mov
sub
xchg
pushf
cmpsl
cmp
push
fdivrs
xor
push
test
sub
mov
clc
sbb
lods
js
jae
call
pusha
in
or
mov
or
mov
jle
and
add
in
cmp
mov
jne
sbb
push
lds
int
pop
and
inc
add
xor
cld
xchg
cmp
adc
mov
nop
nop
jno
int
and
dec
lods
loope
sbb
sahf
cmp
push
lds
mov
cmp
jo
nop
pop
add
movl
mov
leave
lods
or
idivl
cmp
repnz
or
add
pushf
pusha
mov
addr16
adc
subl
rclb
xor
inc
cmp
adc
mov
xchg
xor
pusha
mov
and
xor
jle
mov
stos
push
cmp
ficoml
add
xchg
cmp
lea
fs
pop
jl
jle
xor
pop
dec
mov
mov
add
sub
cli
in
push
or
jb
adc
or
fwait
inc
fisttpl
stos
pop
and
xchg
or
cld
mov
idivb
adc
jb
sbbl
or
cmp
mov
cld
out
mov
push
mov
xorl
scas
mov
xchg
add
stos
xchg
or
fisttps
add
cmpsb
jmp
cmp
dec
mov
cmp
pop
hlt
icebp
inc
cmp
adc
xchg
mov
mov
push
dec
mov
mov
cmp
push
sbb
fnclex
push
dec
push
mov
jle
xor
dec
push
cmpsl
pop
insl
mov
sbb
lock
add
mov
adc
pusha
adc
pop
sbb
lcall
or
aam
int
fisubrl
lcall
in
push
push
pop
pop
in
lret
add
cmp
sbb
cmpsl
aam
cld
inc
mov
jb
std
dec
fidivrs
lret
cmp
add
pop
or
adc
fsubl
pop
pop
repz
aaa
int3
dec
fmuls
push
adc
int
int3
push
push
xchg
std
mov
sarl
push
push
push
push
push
dec
out
pop
adc
or
arpl
sbb
dec
pop
dec
push
mov
aas
cmp
push
add
das
mov
or
mov
iret
sbb
or
sub
faddl
mov
xor
mov
imul
shlb
mov
lret
in
pop
aam
pusha
or
fld1
pop
push
add
cmpl
decb
jg
cs
stos
push
xchg
jmp
add
and
xchg
fstl
fistps
jne
adc
push
jns
stc
sbb
int
aam
push
clc
or
out
aad
or
sbb
push
bound
pop
decl
pop
push
lods
pop
and
sub
stos
in
push
in
adc
cwtl
push
push
aam
cmp
shll
lock
fwait
lock
adc
dec
mov
cld
jne
mov
sti
shlb
and
cld
sbb
push
sbb
mov
dec
bound
cmp
repnz
call
adc
cmp
mov
or
out
hlt
nop
test
or
or
jp
dec
clc
stos
enter
test
cmp
push
stc
in
cwtl
sub
mov
xor
aaa
push
cmp
insl
aam
sbb
push
dec
dec
or
or
jge
and
sbb
rorl
pop
pop
movsb
jb
sbb
sub
aas
xchg
outsl
clc
shrb
dec
mov
lds
mov
nop
mov
dec
jb
jg
cwtl
inc
pop
jmp
adc
insl
or
adc
sbbl
mov
xor
mov
stc
in
pop
or
nop
pop
sub
and
bound
dec
aad
inc
cld
movsl
push
movsl
sub
addb
cmp
lret
add
inc
stos
add
movsl
mov
bound
mov
lds
dec
xor
xor
mov
mov
fdivl
lea
mov
pop
test
add
xor
ja,pt
mov
fucomi
xchg
inc
loop
lea
fisttpll
mov
sbbl
sbb
mov
push
and
push
bnd
outsb
push
mov
or
or
xchg
rorl
test
push
outsl
sbb
fmull
mov
mov
test
jge
xor
stos
test
leave
sub
xor
push
es
pop
xor
mov
xor
mov
add
or
dec
pop
cmpsl
addl
add
pop
xchg
inc
xchg
mov
jmp
push
insb
push
and
pushf
inc
pop
pop
pop
xchg
jo
call
push
sbbb
sahf
xor
jo
add
inc
gs
adc
adc
and
add
jb
js
cld
into
sub
inc
mov
add
filds
fs
idivl
inc
pop
pop
dec
push
push
push
loope
loop
cmpsl
das
in
or
les
js
rclb
jno
add
sti
lret
or
ret
in
push
inc
pop
and
sbb
jle
pop
mov
add
jmp
and
insl
mov
mov
mov
adc
jp
push
iret
adc
jo
mov
cmpsb
inc
adc
cmp
insb
shld
lock
xchg
dec
and
or
cld
dec
add
sbb
cwtl
adc
and
or
cld
cmp
js
sbb
sub
je
push
pusha
mov
add
pushf
jp
lock
movsl
sbb
cld
and
in
mov
mov
mov
lock
cltd
in
push
push
sahf
adc
fdivr
pop
pushf
xchg
dec
jb
push
and
cld
ret
or
fcomip
sar
pop
cmpsb
ret
mov
dec
in
xchg
dec
in
cltd
inc
stos
inc
lcall
frstor
jbe
adc
or
xor
rclb
adc
add
pop
mov
inc
js
add
pop
in
pop
mov
lods
sub
fbld
pop
div
lcall
loop
nop
pop
sub
mov
clc
in
and
or
mov
or
or
ljmp
leave
mov
push
leave
inc
pop
iret
or
call
in
imull
fwait
repz
loop
xor
cld
jnp
sub
and
jmp
sub
cwtl
lret
xchg
outsb
cmc
cmp
mov
cld
call
pop
jmp
mov
sbb
fmuls
mov
test
xlat
pop
out
subl
pusha
push
xor
push
aad
pop
daa
leave
mov
dec
js
sbb
repz
and
cmp
icebp
and
xor
jecxz
mov
jp
push
xor
pop
pop
pusha
add
pop
into
cmp
jl
nop
adc
and
mov
fmul
sub
xor
sbb
xor
fs
cld
inc
cmc
mov
cmp
push
pop
and
inc
fcomps
and
mov
shrb
rol
jle
dec
rolb
int3
mov
xchg
push
push
out
clc
or
ret
in
and
in
fists
inc
aam
xchg
cwtl
sub
sbb
push
nop
das
aam
cmp
out
adc
push
dec
in
jg
cmp
xchg
push
sbb
repz
xlat
xchg
xchg
ljmp
adc
jl
sbb
pop
adc
aam
adc
in
pushf
lahf
sbb
outsb
mov
push
repz
inc
call
xchg
cmpsb
scas
cmc
push
and
pop
cli
xor
pop
dec
movsl
enter
and
idivb
mov
mov
sub
dec
pop
sbb
sub
cld
or
and
xchg
or
cld
in
dec
adc
cmp
addr16
or
stos
sub
dec
stos
jno
or
push
lea
jmp
pop
dec
fcompl
insl
adc
or
loopne
lods
rcr
fs
addr16
fisttpl
popf
sub
divb
clc
push
jle
lcall
mov
pop
and
adc
adc
ficomps
lods
shrl
sub
sub
or
stos
aas
adc
dec
sub
pop
sbb
push
xor
push
cmpsb
aas
push
push
adc
dec
jnp
ja
xchg
dec
dec
cmp
orb
sub
jle
xchg
pop
and
pop
dec
pushf
insb
xchg
xchg
jbe
xor
nop
cmp
or
xor
and
imul
cwtl
sub
mov
push
and
push
ret
repnz
push
pop
cwtl
stos
sbb
pop
out
iret
jp
insl
call
cwtl
pop
pop
js
sbb
lret
rcll
pop
adc
insl
or
mulb
and
clc
dec
mov
leave
jp
dec
outsl
xor
ret
sbb
push
icebp
test
lea
xchg
sbb
add
add
mov
sbb
sbb
cmpsb
lods
or
adc
mov
rorb
or
repnz
sbb
or
repz
dec
jne
inc
push
aaa
and
lods
push
pop
icebp
and
cld
scas
inc
inc
or
mov
mov
xlat
aas
push
and
sub
sbb
sbb
sub
dec
xor
es
push
pop
jns
mov
xor
daa
dec
dec
inc
mov
adc
pop
and
mov
pop
test
dec
ret
loopne
xchg
xor
shr
movsb
lahf
ja
or
pop
mov
dec
pop
xor
sti
adc
push
sbb
nop
lea
xor
push
sbb
loop
hlt
js
inc
out
or
dec
repnz
mov
mov
outsl
leave
inc
pushf
inc
jb
adc
mov
jo
and
call
mov
xor
xchg
rorb
mov
jb
cld
loop
jne
lahf
cmp
xor
pop
lahf
adc
fimull
rcrb
jb
adc
pop
icebp
lret
clc
sbbb
dec
xchg
fwait
cmpb
mov
movsb
xchg
bnd
push
xor
popf
mov
lahf
xchg
adc
shrl
dec
cmp
cmp
std
add
adc
ss
fisttpl
jne
dec
pop
test
dec
loop
scas
and
cwtl
sub
rorl
sub
cmp
jno
xchg
dec
push
or
scas
cli
js
sub
xor
std
test
js
stos
in
sbb
and
out
mov
cwtl
or
stos
cmpsl
ljmp
lcall
add
sbb
cmc
pop
cmp
sub
and
mov
xchg
fldcw
xchg
inc
jae,pt
adc
fmuls
mov
xor
ret
idivb
je
fdivr
cld
sbb
sarl
fsubrs
ret
icebp
fistpl
fimull
add
or
call
add
out
mov
dec
cmp
pusha
sbb
outsb
push
sbb
aaa
push
xchg
push
sbb
cs
cmp
lcallw
dec
mov
xor
call
xchg
inc
and
andb
cmp
movsl
cli
scas
inc
aad
fcmovnb
out
mov
dec
mov
mov
push
movsl
clc
xor
cwtl
jae
mov
sbb
aas
inc
add
fcmove
push
mov
cmovo
outsl
stos
jp
push
sub
es
inc
push
cmp
rclb
rcl
les
inc
adc
orl
pop
dec
adc
outsl
dec
dec
pop
push
jl
frstor
into
loope
inc
sbb
sbb
js
stos
mov
je
dec
and
and
sbb
mov
sbb
cs
mov
gs
mov
aas
push
pop
arpl
dec
gs
fsubrl
push
cltd
pop
pop
sub
mov
push
cmp
test
lcall
pusha
dec
sbb
sub
jecxz
movsl
call
ljmp
enter
fcomi
add
arpl
scas
lcall
fisubrl
inc
cmp
pop
jmp
pushf
enter
fwait
sar
or
lret
xchg
mov
sub
add
fidivs
adc
push
lret
int
or
sti
sbb
sti
pusha
or
or
adc
sar
fistpl
jo
js
aaa
add
test
jge
mov
icebp
jl
lods
mov
mov
xchg
jb
test
pusha
pop
push
packuswb
sti
mov
pop
inc
pop
push
lcall
fldenv
push
dec
and
js
aas
or
stos
push
dec
and
dec
dec
push
daa
dec
pop
xor
mov
stc
andl
pop
movl
sbb
jmp
and
mov
and
js
daa
xor
xchg
repz
or
loope
push
addr16
sub
xchg
cmp
lods
xchg
fs
enter
and
es
hlt
sbb
dec
data16
or
inc
inc
push
xchg
xchg
lods
fsubrs
into
or
fwait
mov
dec
and
mov
imul
subl
sbb
fs
adc
pop
pop
lahf
sbb
push
sti
adc
and
mov
fsubrp
fdivrl
inc
clc
add
xor
cld
imul
mov
sbb
sbb
adc
hlt
cli
or
insb
je
cld
cmp
adc
push
cld
rorb
sti
pop
lds
mov
push
dec
and
or
cld
orb
notl
lahf
pop
push
rolb
inc
out
jl
sbb
cld
jb
push
sub
push
or
sti
fadds
fidivrl
adc
or
mov
aam
xchg
sub
pop
and
jmp
push
adc
inc
movsb
xchg
and
adc
xchg
popf
pop
mov
mov
mov
mov
dec
popa
mov
iret
sbb
cmp
xchg
fisttpll
push
ret
push
sbb
sbb
shr
adc
dec
js
inc
adc
movsb
in
divl
loopne
mov
dec
inc
in
dec
scas
lea
lea
xchg
xor
jge
inc
push
cmp
sbb
push
call
int3
sub
pushw
mov
pushf
popf
lds
cs
stos
xor
aam
and
pusha
push
cli
push
cld
dec
xor
les
push
mov
pop
add
dec
mov
xchg
cmp
inc
pop
sahf
pop
mov
sbb
inc
les
fldl
loopne
shrl
xor
fcoms
pop
cmp
in
push
sub
add
mov
out
ficompl
cmc
pop
inc
jnp
int
pop
sbb
add
push
push
jmp
mov
pop
cld
dec
pop
dec
aas
aad
mov
mov
adc
mov
or
pop
jle
rorl
push
inc
cld
inc
sbb
vmovntpd
push
mov
lcall
inc
in
in
int3
mov
mov
pop
ret
dec
sub
or
ss
or
add
push
or
aas
xor
xchg
and
cmp
div
jmp
sbb
sbb
mov
imul
xor
jo
gs
rcll
add
cmpsb
mov
js
loop
mov
add
loopne
aas
in
iret
inc
ret
rol
inc
push
inc
inc
or
in
push
sub
repz
test
das
out
test
ljmp
push
dec
xor
int3
test
push
negl
dec
cld
push
or
lock
sbb
in
mov
add
jp
outsl
aas
ret
pop
into
adc
jae
dec
adc
cmc
mov
sbb
repnz
in
cld
pop
pop
cmp
sbb
addr16
shll
imul
aas
adc
sub
push
pop
movl
int
dec
push
iret
adc
loopne
or
xor
pop
mov
dec
pop
aas
sub
cli
adc
xchg
vunpcklps
fcomp
mov
push
jb
std
xorb
cwtl
mov
loope
jge
pop
inc
push
dec
mov
daa
fistpl
or
push
sti
cmp
fimuls
loopne
add
loopne
adc
frstor
mov
insl
add
mov
scas
inc
push
mov
mov
xor
dec
dec
int3
ret
out
mov
punpcklwd
mov
aaa
aas
inc
in
flds
xor
movsb
add
mov
sub
lods
jnp
fucom
xchg
push
shll
call
ret
sub
scas
jns
push
mov
jge
ljmp
sbb
and
int3
sbb
jo
cmpsl
in
into
scas
and
sbb
xor
rorl
test
cld
cmp
idivl
mov
out
movsb
mov
add
outsb
cli
dec
pop
or
dec
scas
or
and
data16
add
aam
pushf
add
and
adc
addl
das
push
icebp
or
push
js
inc
adc
int3
or
inc
add
aas
or
inc
pop
or
lea
sub
inc
je
jae
add
ret
mov
or
pop
ret
push
into
jle
add
add
sub
jmp
ja
lret
dec
pop
imul
xchg
jg
aas
sub
pop
sbb
outsb
xchg
jae
mov
xchg
clc
repz
incb
and
fisubl
aam
inc
fildll
jmp
and
sbb
mov
or
mov
aas
jb
cwtl
cmp
bound
mov
add
add
and
repnz
push
out
faddp
and
lret
mov
push
mov
stos
js
and
dec
fldl
jbe
out
adc
inc
adc
cwtl
mov
mov
xor
int3
inc
sbb
xorb
lret
fbstp
xlat
xor
aad
jno
or
adc
test
dec
xchg
add
adcb
into
fmuls
or
fisttpll
cmp
xor
ret
pop
dec
mull
add
dec
push
xchg
mov
inc
icebp
cmp
cmpsb
lahf
push
xchg
push
inc
mov
cld
insb
scas
push
ja
or
adc
adc
sbb
jmp
xor
xchg
add
test
lahf
sbb
sbb
nop
pop
lea
outsb
loop
leave
and
xchg
and
outsl
push
repnz
andl
test
xchg
inc
ds
pop
mov
pop
sub
jae
sub
sbb
mov
cmp
mov
mov
pop
das
pop
loop
sti
lods
mov
sbb
stos
inc
jns
and
or
mov
sahf
pop
cmpsb
fdivl
cli
xchg
jbe
popa
xor
lcall
pop
dec
cmp
or
adc
fidivl
sbb
loopne
pop
addl
pop
shrb
dec
and
outsl
inc
push
jb
push
stc
cltd
repz
rcll
cs
and
push
push
cmp
outsb
ja
pop
add
or
leave
in
push
mov
dec
clc
xor
sbb
mov
outsb
xchg
stos
outsb
mov
mov
adcb
out
add
fsubs
ss
je
scas
rcll
ficoml
pop
clc
aas
mov
lcall
push
jl
das
add
xchg
cwtl
in
xchg
lcall
dec
jb
and
sar
lds
cmp
dec
inc
adc
mov
mov
mov
aaa
cmp
inc
xchg
aam
rcl
gs
test
adc
shl
lds
mov
fst
dec
sub
mov
cmp
fwait
or
pushf
iret
cmp
push
mov
sbb
int3
and
fcmovnbe
dec
mov
addr16
jb
xchg
ss
idivb
adc
cli
icebp
adc
or
jp
inc
xchg
pop
cwtl
dec
cmp
adc
push
mov
sub
popa
inc
mov
call
pop
mov
fnstcw
xor
out
cmp
ss
xor
push
jne
hlt
jnp
add
adc
dec
call
add
push
pop
sbb
push
aad
hlt
fdiv
adc
push
in
jge
adc
xchg
and
aas
and
push
scas
enter
xlat
mov
repnz
ficoml
inc
inc
iret
dec
lods
push
adcb
dec
or
inc
inc
cmp
inc
or
nop
lea
decb
test
or
fcompl
jns
xchg
rcr
adc
aad
mov
pusha
scas
cmp
mov
push
cmp
outsb
push
scas
sub
fsub
stc
xor
loopne
and
push
dec
pop
sub
mov
insl
fcompl
int
push
mov
pop
leave
out
aaa
pop
ret
xchg
mov
mov
fs
insl
sbb
pop
or
mov
bound
into
outsl
xchg
jno
sub
sub
sbb
cmp
dec
adc
loopne
in
add
adc
and
pop
lret
mov
push
lds
dec
pusha
adc
test
cmp
push
and
dec
cld
in
and
mov
push
in
into
mov
lcall
aam
sub
pushf
push
aas
pop
or
cld
mov
sub
dec
cmp
cmp
mov
xchg
stos
sub
push
ret
mov
jae
jnp
dec
call
mov
lds
in
int3
and
dec
or
or
in
fisubl
xchg
shll
adc
adc
roll
pop
shr
xchg
mov
inc
shll
adc
lret
filds
inc
mov
addr16
jge
inc
les
cld
xchg
xor
repz
add
sub
and
mov
aad
mov
or
lret
jl
xor
sbb
repnz
cmp
pop
and
sbb
cld
adc
adc
cmp
mov
jmp
xchg
fbld
sbb
push
data16
movl
or
enter
adc
dec
push
sbb
fnstcw
xchg
pop
push
ret
push
imul
ret
loop
dec
xchg
add
cmp
lret
push
js
jl
dec
in
mov
or
push
jmp
cmp
das
lods
xor
mov
lock
mov
inc
ret
xchg
lods
pop
mov
out
addb
gs
cmp
and
sub
or
xchg
pushw
xchg
or
mov
jmp
cmpsl
xchg
push
in
mov
lcall
or
out
dec
dec
movsb
adc
addr16
pop
xchg
repz
pop
aam
cmpsb
lahf
adc
cs
cmp
pusha
ret
data16
pushf
or
push
add
xor
lahf
stc
leave
sub
pop
xchg
sub
clc
in
or
fmul
bound
xchg
rcl
push
xchg
xor
fsubl
push
jns
fstpl
aam
push
cmp
sub
add
mov
and
out
xchg
and
roll
add
hlt
push
cld
enter
push
push
popf
push
or
or
fisubrl
sbb
jge
repnz
aam
add
or
mov
push
movsb
mov
xchg
push
aam
lcall
lods
xchg
push
cmp
inc
xchg
out
add
aam
or
sub
insb
and
test
mov
push
lods
arpl
or
fcoms
push
sbb
sbb
icebp
out
pop
xchg
xlat
push
jmp
nop
push
out
fcomps
lret
clc
and
jg
test
adc
pop
ja
sbb
or
pop
cmp
pop
mov
pop
fsubl
mov
ficomps
add
sti
jmp
roll
mov
stos
fldcw
test
nop
and
ljmp
lea
ljmp
ja
mov
loop
mov
in
pop
or
lds
out
cmp
test
push
adc
jno
cwtl
fwait
lock
push
dec
aam
cld
fmulp
test
aam
inc
jo
pop
sbb
fdivp
imulb
jg
xor
push
inc
xor
or
cmpsb
push
leave
or
cmp
cmp
lcall
sbb
lods
xrelease
cld
sub
out
lahf
jb
cmc
and
iret
dec
push
dec
out
sbb
mov
cltd
jns
and
and
xchg
ljmp
mov
scas
cmpsl
cmp
adc
mov
add
inc
or
mov
dec
in
push
jbe
and
std
adc
xor
mov
xchg
sbb
pop
mov
mov
fidivl
push
adc
ljmp
dec
out
adc
adc
je
outsb
push
xchg
jl
jb
inc
cmp
add
jb
mov
into
rorb
ss
mov
sbb
cwtl
cmp
pusha
adc
mov
jb
orb
adc
mov
cld
hlt
call
cltd
js
pop
mov
jnp
push
xor
shl
dec
mov
mov
dec
fisttpl
push
dec
push
idiv
add
fwait
jp
cs
data16
loopne
push
push
mov
xchg
mov
dec
out
bound
push
push
cmp
es
scas
push
cmp
aas
cwtl
adc
sub
test
and
in
in
int
adcl
push
ret
cli
sbb
call
or
int3
lea
or
mov
xchg
dec
lea
mov
mov
lahf
negb
sub
cld
pop
inc
fdivrp
sbb
icebp
repnz
pop
sbb
popf
sbb
aas
iret
mov
push
add
repnz
push
adc
sub
insl
add
and
aas
jle
in
stos
cmp
push
push
lret
mov
pop
cmp
inc
or
pop
push
push
cmp
push
jl
call
lds
jmp
adc
cld
int3
cmp
icebp
sbb
cmp
xor
fadds
data16
or
mov
ds
dec
ret
cltd
mov
mov
and
cld
push
fisubrl
lods
push
or
mov
cmc
push
adc
orl
repnz
push
scas
fwait
jne
add
loop
gs
scas
and
hlt
rcrb
adc
pushw
add
lods
add
aad
push
add
push
shlb
outsl
adc
cmpsl
sbb
loopne
ja
cmp
push
lahf
xor
sbb
or
sbb
in
xlat
xor
sbb
sbb
mov
iret
add
rcll
fistps
inc
or
pop
xor
xor
mov
pop
pop
adc
aas
or
and
stos
pop
jns
pop
jp
fwait
xlat
mov
jl
loope
adc
cwtl
dec
xor
fldenv
dec
pop
mov
test
xor
incl
push
rolb
pop
cmp
lcall
mov
pop
cld
jl
cltd
xor
test
repnz
repz
movsl
mov
dec
imul
xchg
push
mov
push
cmp
fildl
or
mov
inc
sub
jg
inc
inc
sbb
dec
dec
xchg
insb
pushf
in
push
fstpt
push
je
jg
or
daa
sbb
movl
and
pop
mov
sbb
adc
cmp
into
ljmp
fisttps
sbb
or
adc
sub
mov
sub
rcll
js
pop
addr16
adc
je
mov
fmuls
lret
jg
daa
in
xor
inc
sub
xor
cmp
in
or
mov
scas
into
push
push
cmp
arpl
mov
fdivrl
repz
cld
inc
xchg
pop
adc
push
dec
and
push
jecxz
test
add
pop
mov
mov
sub
xor
fidivl
aad
aaa
icebp
or
out
jnp
fidivrl
pop
fs
addl
cmp
xor
jns
cmpsl
cmp
fdivrl
sub
movsl
push
lds
popa
mov
inc
push
pop
mov
mov
aas
repz
add
sbb
adc
jno
ds
inc
call
push
test
sbb
inc
dec
push
pop
pusha
outsb
xchg
es
lock
pushf
push
pop
inc
inc
sar
jge
sbb
fs
mov
mov
mov
popa
xor
fcoml
xchg
xchg
mov
mov
cs
imul
inc
rorl
push
push
mov
sbb
mov
inc
dec
adc
out
leave
int3
imul
or
stos
icebp
sub
ret
adc
xor
push
xor
pop
dec
sbb
lock
data16
mov
sarb
mov
inc
cli
push
cmp
out
sbb
leave
stc
dec
addr16
loope
pop
aas
std
push
inc
fbstp
mov
push
lds
xor
cmc
and
sbb
xchg
aas
stos
cmpl
test
stos
xchg
cmp
xchg
adc
jae
fsubp
sbb
cld
mov
outsl
jmp
sub
cld
and
jg
sub
loope
xchg
aam
adc
mov
xchg
sub
pop
fiaddl
jno
xchg
push
sub
test
xor
enter
pop
cld
fwait
shll
cwtl
cmp
sbb
mull
adc
test
lret
test
xor
adc
out
ficompl
decl
or
dec
and
dec
aas
sbb
and
dec
dec
cld
dec
mov
leave
pop
pop
ret
push
xchg
mov
or
dec
enter
and
lods
movsb
lods
sbb
and
std
push
aam
sub
cld
inc
cs
mov
sbbl
fisubs
inc
pop
jle
push
xchg
push
inc
inc
lcall
pop
sbb
and
dec
aas
adc
sbb
add
faddl
dec
cld
inc
xchg
in
cld
lods
xchg
dec
in
jle
push
add
and
sahf
loop
add
in
xchg
pop
scas
out
mov
cwtl
loopne
stos
and
in
fisubrl
pop
inc
xchg
mov
cltd
icebp
cmp
enter
outsl
cmp
push
pop
adc
push
xchg
aam
negl
jmp
es
mov
dec
decb
inc
adcb
cmc
xchg
xor
pusha
lcall
jle
or
gs
pop
dec
sbb
add
and
fsub
les
adc
push
cmp
call
add
or
mov
adc
push
sbb
xchg
xchg
and
lea
bound
push
loopne
xchg
mov
push
dec
pop
aas
out
add
inc
stos
sub
mov
xor
inc
or
mov
xchg
leave
or
mov
loope
jp
or
repz
sbb
xor
ffree
aas
stos
loope
lds
xor
stos
or
sub
es
arpl
cmp
mov
fwait
sti
sub
fcoml
lcall
xor
push
or
sbb
aam
dec
nop
xchg
or
ds
inc
inc
or
mov
xchg
dec
add
or
mov
fldt
xor
sub
mov
test
mov
cmpsl
shlb
shll
loope
lock
ss
sub
pop
je
icebp
aas
jb
call
and
adcl
loope
add
fdivrl
jnp
xchg
sbb
loope
aas
enter
fadd
sbb
adc
push
adc
imul
xor
push
imul
sbb
xchg
adc
outsl
lds
add
push
sbb
xchg
dec
or
or
cmp
or
jnp
divb
mov
and
imul
cmp
fisttpl
mov
add
aas
stos
cmp
jae
seto
jns
sbbb
scas
push
cmp
mov
leave
popa
mov
sbb
or
sbb
inc
outsb
inc
inc
fld
pop
push
roll
sbb
mov
cs
aas
and
jne
mov
mov
push
mov
in
xlat
mov
pop
insl
inc
add
in
push
test
pop
sbb
or
push
cltd
and
pop
and
stos
fstl
sbb
test
pop
pop
or
push
cmc
sub
adc
jg
xor
cli
xor
fistpl
ljmp
int
adc
dec
cmp
aaa
test
cld
jle
mov
dec
sbb
cmp
and
fdivrs
aam
test
lock
adc
xchg
adc
mov
cmp
pop
in
out
sbb
mov
cmp
movsl
sub
aam
out
jecxz
push
dec
les
jl
xchg
xor
jns
adc
or
aaa
repz
or
test
mov
sbb
jge
adc
sbb
mov
and
subb
inc
dec
ficomps
and
cli
shrl
sar
mov
push
pop
iret
mov
jg
fistpl
jl
sub
xchg
mov
or
dec
inc
and
add
data16
and
inc
rcr
add
jns
inc
push
sbb
dec
add
punpcklbw
hlt
frndint
mov
cmp
icebp
mov
movsl
lahf
cmpsl
and
pusha
test
and
test
ds
and
dec
jg
mov
enter
repz
and
mov
xchg
and
insb
cld
addr16
lods
jl
push
mov
cmpsb
imul
and
mov
sub
ss
icebp
xchg
lods
cwtl
mov
xchg
or
push
xchg
arpl
jbe
imul
lcall
mov
in
cld
sti
mov
test
stc
in
leave
sub
idiv
jle
mov
mov
sub
dec
or
je
xor
push
test
push
sbb
cmp
pop
add
cmp
pop
sub
ss
repnz
rep
ds
add
add
pop
adc
push
inc
mov
ds
mov
andl
lea
mov
cmp
add
push
sahf
orps
sbb
pop
pop
xchg
xchg
and
movsl
jno
dec
mov
stc
cmp
push
ss
xchg
loopne
adcl
or
lret
xor
xchg
mov
lcall
pop
lds
or
xchg
jp
pushf
lock
sbb
xchg
mov
adc
inc
cmpsl
push
das
mov
orb
mov
jbe
pushf
out
xor
leave
bound
add
dec
das
pop
dec
or
in
repnz
nop
xchg
add
push
xor
repz
sub
cli
pop
sbb
pushf
and
or
sbb
fiaddl
mov
fdivl
sub
dec
push
je
mov
mov
fcompl
xorb
and
sbb
lods
or
dec
push
icebp
popa
cmp
pop
inc
pop
add
icebp
jp
adc
dec
sub
pop
add
mov
shll
into
mov
out
lods
xchg
fucomp
sbb
fdivrl
aad
dec
rclb
or
push
adc
in
lret
sub
cli
lds
xlat
or
outsl
or
cmpsb
mov
loop
lea
mov
sbb
and
pop
pop
cmp
out
rorb
in
movsl
cmp
mov
push
pushf
cmp
or
or
clc
push
cwtl
and
leave
shrb
or
pop
sub
movlps
sahf
cmp
adc
push
push
dec
and
sbb
sbb
push
call
sbb
adc
dec
inc
adc
in
jo
add
lods
sbb
sub
or
and
add
sub
popf
sub
dec
popa
imul
jecxz
fimull
pop
imul
xor
mov
mov
xorb
iret
ljmp
loopne
mov
in
inc
stc
xor
inc
mov
hlt
icebp
loop
mov
dec
out
loopne
rorb
cs
cld
sub
push
push
std
mov
fidivs
mov
leave
cld
ljmp
cmpsb
por
repnz
or
adc
mov
adc
test
push
and
pop
pop
stos
repz
mov
jg
mov
push
add
xchg
aas
xor
mov
dec
dec
and
or
int3
fisttpl
adc
fadds
mov
subl
or
fadds
cwtl
in
push
les
mov
pop
dec
push
stc
or
xorb
jecxz
jle
fsubrl
pop
cmpsb
or
sub
cld
sub
adc
mov
sbb
jno
inc
sarb
cmp
rcrb
fsubrs
pop
dec
push
mov
dec
inc
loopne
dec
inc
mov
shll
cmc
ljmp
dec
out
sbb
xor
mov
popa
lods
dec
pop
xor
dec
test
adc
and
repz
in
push
add
xchg
push
cmp
pop
adc
sbb
ret
jnp
bound
or
rorb
pop
jle
dec
mov
mov
xlat
lcall
cmp
sub
dec
cld
pushf
jbe
adc
or
iret
inc
ds
cmc
pop
mov
fcmove
inc
dec
lods
gs
xchg
add
xchg
fwait
dec
cld
push
movsl
adc
cmp
ficomps
fwait
repnz
outsl
add
mov
mov
dec
mov
sbb
xchg
dec
inc
mov
and
cwtl
or
or
pop
decl
daa
sarl
iret
fistps
or
mov
test
pop
xchg
add
sub
dec
push
mov
loopne
mov
mov
cmp
mov
cld
popf
push
xorb
xor
test
je
loop
mov
pop
fs
mov
sti
into
pop
xchg
movsb
jno
add
pop
lods
popa
lods
ljmp
sahf
or
and
dec
loop
inc
pop
or
int3
push
lock
pop
inc
jo,pn
in
shrl
cmp
cmp
sub
mov
xor
sub
cltd
test
ss
cmp
scas
and
or
shlb
scas
mov
clc
pop
enter
mov
ret
or
hlt
lds
rcrl
jnp
jns
adc
mov
sub
adc
fistpll
mov
gs
outsb
leave
add
or
jecxz
mov
cltd
ret
xchg
add
xchg
insb
adc
or
jl
cmp
pusha
scas
xor
repz
in
dec
int3
adc
dec
loopne
mov
jp
xchg
scas
arpl
mov
mov
cmp
xchg
fsubrs
xor
and
lret
cmp
inc
sbb
sub
lahf
mov
or
fists
sub
ljmp
lea
xor
xor
icebp
or
test
test
test
add
testb
or
xor
cld
loope
sub
sbbb
adc
inc
push
and
adc
sbb
iret
pop
mov
insb
fadds
rcrb
xlat
mov
push
and
pop
dec
sbb
je
mov
sbb
das
test
xchg
pop
lea
push
shl
cmp
xor
cld
scas
ljmp
sbb
cmpsl
cmp
fdivs
inc
jecxz
cmp
push
je
xor
xor
fldt
shll
jl
rorl
pop
in
cmpsl
movsl
sub
es
cld
mov
push
loopne
inc
dec
cmp
pop
sbb
popf
push
stos
sub
aaa
into
rcll
cmpl
mov
imul
rorb
sar
fldenv
mov
lret
push
imull
popf
push
cwtl
pop
xchg
mov
or
and
imul
je
les
and
clc
jns
dec
ljmp
test
pop
adc
mov
cmp
mov
xchg
sub
cwtl
out
or
fsubrl
pop
or
mov
add
addr16
test
mov
adc
stc
loope
inc
lret
in
cmc
jmp
dec
push
pop
pop
dec
dec
or
push
dec
xorb
pop
sbb
push
add
cld
inc
fwait
ljmp
out
jno
jne
inc
xchg
inc
sbb
or
aas
jl
jg
or
xchg
fcomps
pop
push
orl
pop
popf
mov
pop
fcompl
push
rcrb
xor
data16
push
add
arpl
test
repz
jae
loope
jb
adc
data16
test
pop
stos
aas
sub
push
bound
xor
cmp
adc
loopne
lods
into
push
js
clc
bound
push
leave
sub
imull
outsb
verr
cltd
add
movsb
or
test
fcmove
inc
push
pop
add
xor
cmp
add
sub
js
mov
adc
insb
pop
je
and
push
adc
ror
or
jnp
sub
adc
xor
jo
aam
sbb
adc
jp
xlat
add
lock
popa
adc
ja
jecxz
cmp
push
fdivl
pop
fistps
mov
mov
mov
pop
icebp
aam
cmpl
rcl
push
push
sbb
or
test
lock
js
dec
or
imul
js
mov
adc
in
add
or
cmp
xor
iret
icebp
lret
mov
fidivrs
icebp
jae
sub
dec
adc
or
inc
adc
push
xor
mov
or
push
icebp
adc
sbb
outsl
xor
mov
cmpsb
push
adc
add
cld
lcall
bound
sahf
push
add
cltd
mov
movsl
and
nop
mov
sub
dec
jge
pop
mov
jge
sbb
jmp
pop
sub
xchg
push
sbb
push
std
push
out
and
or
xchg
mov
mov
pop
sbb
fadds
test
or
std
mov
mov
mov
xchg
cwtl
pop
cmp
lock
arpl
ret
cmp
fcomp
in
push
jp
mov
mov
js
insl
lods
cmp
and
mov
mov
adc
or
rcr
outsb
das
pushf
xor
cld
ret
aaa
cmp
pop
push
add
aaa
push
or
je
pushf
mov
enter
idivl
push
sub
push
aas
adc
out
jg
adc
push
xchg
inc
insb
in
push
ljmp
xlat
jge
jb
daa
sbb
repnz
push
rcrb
add
js
mov
mov
dec
cld
and
push
iret
arpl
inc
stc
lds
push
dec
outsl
mov
repz
mov
or
sbb
pushf
sbb
rorl
mov
es
jbe
rclb
fimuls
push
or
cwtl
xchg
incb
out
push
xchg
insb
cwtl
push
pop
cmpsl
test
repz
xorb
pop
lock
fsubs
dec
and
dec
push
pusha
xchg
loop
mov
call
pushf
push
shlb
dec
push
sbb
push
inc
js
push
or
lret
and
movsb
xchg
adc
adc
cmp
inc
rcll
dec
sbb
xor
jae
jle
pop
pop
jb
jne
and
ds
hlt
fldcw
aaa
inc
xor
ja
shll
inc
adc
rorl
ss
fdivrs
pushf
shr
scas
sar
outsl
push
imul
add
inc
outsl
dec
add
pop
fnsave
lods
pop
mov
pop
cmc
fwait
inc
push
dec
or
add
lock
ret
mov
pop
push
dec
jno
fld
insl
pop
mov
xor
push
and
add
ror
mov
add
push
cmc
pusha
cli
scas
je
lds
push
mov
aad
ret
push
pop
sahf
pop
lds
icebp
mov
mov
out
sub
or
xor
sbb
cwtl
push
xor
sub
pop
jmp
mov
mov
mov
jl
cld
int3
mov
sub
lahf
fstl
or
sbb
ret
inc
aaa
repnz
insl
pop
lds
fstp
adc
jbe
dec
sahf
inc
addb
push
dec
adc
adc
inc
out
push
lret
xlat
cld
fisubs
adc
dec
jmp
js
adc
mov
pop
xchg
mov
push
mov
icebp
push
sub
orps
nop
dec
pushf
mov
loop
ret
adc
inc
js
nop
inc
fs
xchg
inc
movsl
or
inc
es
or
push
and
sbb
pushf
les
pop
inc
inc
mov
sub
jo
or
aam
dec
fs
push
jmp
lcall
push
sti
fwait
movsb
outsl
add
inc
jno
sub
clc
rorb
pop
or
int3
fstpl
pop
xor
jl
out
mov
js
mov
add
repz
arpl
and
notl
out
dec
aas
outsl
fists
cld
jmp
jns
js
push
icebp
lods
pop
aam
or
push
mov
in
int
repz
lret
sbb
fs
push
adc
cmp
sbb
movsb
sub
mov
mov
xor
inc
cld
mov
add
cmp
pop
push
popa
test
xchg
add
aam
and
nop
mov
inc
dec
adc
movsb
dec
mov
sub
add
mov
test
dec
cmpsb
int
jb
pop
out
xor
jae
dec
sbb
inc
xchg
xor
incb
mov
in
mov
sub
rcrl
mov
out
mov
sub
mov
pop
jge
mov
add
or
pop
push
pop
dec
fstpl
adc
jo
andb
dec
add
cmp
cmpsl
shlb
popa
test
adc
pop
pop
fwait
dec
dec
vcmppd
jmp
pop
xor
or
dec
push
sti
add
cmpsl
int3
push
aaa
cltd
mov
sub
fwait
mov
adc
arpl
out
in
lds
aaa
call
adc
add
adc
je
xchg
push
add
mov
push
pop
sbb
add
cmp
shrl
fs
lahf
cld
mov
lock
sahf
cmp
addr16
jns
jno
sub
mov
jns
test
test
or
int3
fmul
outsl
pop
adc
pop
cli
mov
jecxz
mov
pop
inc
rcll
mov
cwtl
aas
sbb
cmp
lcall
cld
sbb
movsl
or
xchg
fwait
mov
xchg
fmulp
daa
pop
out
pushf
push
sti
jbe
cmpb
stc
fnsave
pop
int3
pop
xor
lret
sahf
adc
push
adc
negb
lea
addr16
xchg
mov
nop
dec
pusha
dec
mov
or
data16
pop
sbb
addr16
mov
and
int
je
pusha
xchg
xchg
inc
dec
arpl
or
inc
lds
jmp
aad
sahf
or
std
out
dec
fcompl
pop
dec
fwait
xlat
xor
lods
and
lret
cmp
mov
mov
mov
jp
cltd
sbb
ljmp
or
and
cmp
or
xchg
push
aas
inc
xchg
and
idiv
or
loopne
cmpl
xchg
aas
cwtl
icebp
sbb
repz
mov
fcmovnb
insb
popl
push
dec
jmp
xor
pop
stos
scas
ret
push
loop
loope
lret
jno
mov
stos
xor
outsb
fstps
out
cmp
dec
cmc
jo
les
out
negb
xor
jp
sbb
lods
bound
mov
pop
inc
fnstcw
sbb
mov
cmp
dec
sbb
mov
push
add
dec
fldt
cld
xchg
mov
or
rcl
lea
sbb
dec
jae
sub
addr16
lock
and
pop
mov
push
movsl
xlat
lret
sbb
enter
enter
in
mov
mov
push
cmp
cld
mov
push
gs
xchg
sbb
push
bnd
mov
xchg
pop
mov
stos
jno
cmpsl
inc
insl
rcrl
adc
push
rcrl
insb
pop
pop
mov
or
inc
lods
insb
cwtl
or
adc
les
sub
iret
cwtl
cmp
fisubrl
aam
ficoml
jp
mov
icebp
inc
fiadds
jg
and
cmp
dec
sbb
test
dec
cmp
cwtl
mov
sbb
mov
lods
sub
dec
cmc
dec
add
clc
fistps
lcall
push
clc
push
in
idivb
cmpsb
lock
jecxz
or
dec
dec
enter
hlt
cmpsb
cmpsb
inc
and
mov
adc
mov
or
inc
push
mov
mov
icebp
dec
cmp
cmp
and
mov
sbb
icebp
dec
adc
or
lcall
loop
push
cmp
popa
cwtl
sbb
xchg
xor
testw
push
fwait
mov
es
cli
jmp
lods
ret
jp
sbb
iret
jle
inc
xor
rclb
adc
mov
cld
pop
filds
ja
mov
repnz
in
jo
xchg
stos
or
mov
ret
sub
loop
popf
and
mov
fisttps
or
jl
cmp
lods
jb
sar
jnp
addr16
xchg
push
lds
cld
sbb
push
aas
fidivl
ss
pushf
mov
sub
loopne
rcll
outsl
cmp
mull
dec
push
sub
pop
cmpsl
mov
push
jecxz
inc
sub
xchg
or
addb
jl
leave
js
jae
xor
or
mov
adc
push
call
adc
out
lcall
out
pusha
push
sbb
fidivs
dec
jb
ficomps
sub
cltd
mov
nop
pop
pop
pop
cmp
movsb
mov
xor
pusha
push
mov
jae
or
nop
jae
cmpsl
pop
movb
shr
or
and
and
sahf
add
pop
sub
ficompl
fists
rorb
stos
dec
fcomps
jns
dec
lret
stc
imul
jns
pop
ja
call
mov
and
jg
fisttpll
dec
test
mov
test
push
cmp
bound
shlb
mov
addr16
filds
pop
jne
or
shll
dec
dec
push
dec
fsubr
mov
pop
adcb
pop
sub
mov
cld
call
mov
adc
or
pop
sbb
adc
inc
dec
jge
cmp
sbb
int
mov
and
cmpsb
mov
xor
cmovnp
xchg
or
or
hlt
pop
and
pop
fwait
lock
xlat
mov
xchg
sbb
ss
mov
dec
shr
push
push
or
xchg
cmc
sar
stos
cltd
adc
push
xchg
jbe
cmpsb
int
mov
divb
js
clc
add
sbb
sbb
mov
dec
sbb
frstor
jg
sbb
in
cwtl
ficomps
or
xor
mov
xlat
enter
pop
jne
inc
jnp
mov
pop
hlt
cmp
ja
out
push
mov
adc
dec
cwtl
je
nop
fdivr
mov
dec
mov
hlt
push
addr16
inc
pusha
sub
adc
repz
fstps
and
aam
pop
fiadds
inc
add
repz
sub
lret
es
cmp
cmp
mov
dec
pop
in
js
mov
dec
adc
jae
pop
pusha
ret
cmpsb
dec
lret
cmp
xor
lods
lods
stc
xor
or
daa
and
add
jmp
or
push
fsts
xchg
sbb
mov
xlat
test
into
loope
add
inc
out
cs
out
pop
adc
cmp
jp
cmp
jp
cmp
jge
mov
pushf
sbb
pop
in
cmp
pop
out
cmp
pop
out
cmp
pop
call
cmp
pop
ljmp
insl
les
arpl
xchg
data16
adc
fisubrl
mov
dec
daa
pop
add
pop
xchg
pop
imul
jp
inc
inc
add
mov
cmpsl
fisubrs
or
jae
adc
add
rorb
inc
out
lahf
and
or
and
jecxz
sub
inc
or
in
lret
pop
adc
adc
lcall
add
xchg
push
mov
push
push
repz
inc
lock
mov
scas
lret
out
dec
mov
inc
mov
add
push
push
cld
push
imul
mov
mov
push
insl
out
leave
mov
imul
mov
pop
or
out
jns
in
sbb
xchg
pop
add
mov
nop
mov
pop
adc
mov
or
dec
inc
adc
mov
sub
les
fs
and
scas
push
jmp
lock
adc
push
and
pushl
pushf
xchg
or
pop
adc
sar
xchg
daa
outsl
push
and
fcomi
sbb
mov
or
lret
lahf
out
cmpsb
xchg
or
and
fisubs
adc
pop
mov
pop
adc
jge
push
js
shl
iret
fnstsw
sub
in
mov
outsl
adc
test
outsb
push
pop
pop
adcl
stos
stos
push
add
pop
cmp
or
push
or
sbb
jb
frstpm(287
sbb
hlt
push
and
clc
cmc
dec
dec
test
cwtl
ds
jg
cmp
add
ja
jb
in
lds
mov
jecxz
ljmp
pop
add
pop
cmp
push
push
ss
or
cwtl
mov
repz
push
xchg
cmp
int
outsl
pop
lcall
outsl
stos
or
pushf
outsl
aas
test
pop
adc
sbb
mov
adc
push
outsl
repz
adc
shrl
mov
mov
and
pop
xor
je
sub
adc
fnstsw
mov
nop
popf
lret
sbb
sub
and
stos
mov
movsl
mov
icebp
xor
ja
inc
push
and
fsubl
out
movsl
into
divb
js
cmp
addl
add
and
adc
cltd
ficoms
int3
xor
push
jae
sub
dec
mov
in
mov
fiaddl
add
and
cmp
or
dec
data16
push
pop
adc
and
push
dec
int3
and
outsl
pop
in
pop
sbb
adc
jno
loopne
orb
sbb
pop
dec
outsl
cld
cmp
pop
shrb
inc
lock
fucom
xor
jns
add
adc
push
ss
or
xchg
repz
jbe
push
mov
sbb
add
pop
sub
fcomps
jno
push
clc
lods
andl
xchg
xor
xor
movsb
sub
cmp
lret
sarb
mov
movsl
orb
dec
ret
dec
loopne
lret
xchg
xor
sbb
jmp
push
xchg
cltd
mov
sbb
sub
inc
pop
mov
dec
aam
xchg
jae
jp
in
mov
cmp
loope
ficompl
xor
jno
sbb
add
hlt
jns
fwait
aas
mov
xor
pop
mov
xchg
leave
mov
cmc
jae
or
cmp
js
int
cwtl
dec
loope
xchg
xor
cmp
imul
mov
dec
xor
pusha
cmpsb
dec
push
addr16
xchg
sbb
outsb
sub
mov
inc
in
xchg
lds
cld
shlb
test
mov
adc
xchg
testl
pop
hlt
rcrl
xlat
lock
out
sti
xchg
mov
or
inc
scas
pop
dec
cld
fwait
js
cltd
fsubp
jbe
shll
cmp
sti
sbb
mov
push
jmp
jp
test
cld
xchg
icebp
sbb
adc
dec
push
mov
test
pop
sbb
and
outsl
mull
fwait
lock
in
orb
dec
insb
and
inc
subb
scas
mov
sbb
insb
in
popa
pop
lds
pop
xchg
ficoml
mov
iret
movsl
inc
mov
mov
jmp
mov
xchg
dec
rcrb
rcll
lods
inc
and
xor
lods
addr16
or
jmp
xor
adc
inc
iret
fnsave
push
or
pop
clc
daa
adcb
cwtl
dec
jae
adc
out
sarb
sbb
cmp
sbb
push
or
mov
test
hlt
out
outsb
mov
ds
fbld
pop
outsl
add
pop
xlat
push
rorb
sahf
shll
sahf
enter
adc
int3
jb
or
push
cmp
xchg
rclb
mov
fcomps
test
pop
xlat
out
dec
xor
pop
fistps
in
rorb
in
mov
sbb
adc
dec
jnp
loopne
cmpsl
gs
sbb
adc
inc
xor
pop
pushf
dec
adc
lcall
lcall
adc
gs
push
fildl
xchg
out
pushf
movsb
sbb
aad
pop
jns
nop
sub
jl
ficompl
adc
inc
sub
cmp
lahf
outsb
pop
mov
cmpsb
xchg
and
shlb
hlt
fwait
jp
cmpsl
mov
fdivs
pop
ja
mov
lar
push
mov
add
mov
in
sbb
adc
cmp
shrb
cld
ret
push
mov
mov
out
xchg
orb
lahf
test
pushf
sti
dec
ficompl
sbb
out
xchg
pop
cmp
fcmovu
std
adc
fidivl
movsl
loopne
jae
or
push
or
addb
sbb
add
xor
hlt
lret
adcl
mov
mov
push
adc
test
not
pushf
rcrb
dec
fcoms
jb
repnz
dec
insl
mov
xchg
pop
loope
negb
sub
or
push
cmpl
mov
movsb
sbb
pop
and
daa
outsl
push
dec
test
and
in
stos
lret
inc
or
iret
mov
mov
cmp
pop
loop
lcall
and
cs
push
dec
xor
sub
pop
add
nop
mov
mov
xor
xor
jno
sub
or
and
or
push
fdivl
cmp
outsl
add
hlt
cmp
adc
mov
push
hlt
mov
cmpsb
scas
pop
imul
or
jno
jle
ret
out
add
arpl
cmp
les
fcoml
mov
inc
call
cmp
rclb
adc
orl
nop
mov
fwait
or
add
cmp
dec
popa
cmp
leave
xchg
daa
pop
pop
push
dec
pop
inc
pop
sub
lock
test
or
or
dec
push
cmp
cmp
outsl
int3
xor
std
add
pop
mov
push
push
imul
cltd
dec
addr16
push
daa
insb
sub
jge
dec
xchg
pusha
aam
or
aaa
jmp
lret
sub
ja
adc
inc
inc
addb
push
je
mov
adc
add
adc
sub
dec
mov
in
or
movsl
insl
add
out
mov
adc
shrb
lret
movsb
and
js
mov
leave
or
pop
add
jecxz
aas
xor
dec
outsb
xchg
xchg
push
out
xchg
cmpsb
sbb
sbb
adc
shr
adc
push
lock
sbbl
cmp
mov
xor
dec
les
ficompl
repz
lahf
outsl
imul
push
or
sbb
js
repnz
sub
negb
lds
sbb
lret
or
push
adc
xor
cli
pop
movzwl
test
or
cltd
jecxz
xchg
lods
hlt
out
jno
pop
jl
inc
pop
pushf
sahf
pop
lret
aas
loopne
xor
repz
pop
push
xchg
xchg
cmova
jecxz
sbb
pop
xchg
cwtl
sub
in
int
dec
incl
mov
mov
sbb
out
cmp
or
push
lds
cmp
cmp
ret
pop
xchg
icebp
dec
lods
lds
jb
and
and
mov
mov
ljmp
inc
cltd
daa
gs
std
or
aad
and
xchg
and
cltd
dec
sahf
cli
pop
cmp
cmp
mov
sbb
cmp
test
cwtl
cmc
sbb
pop
and
les
shlb
rorb
and
jnp
adc
das
jg
and
inc
fst
rcr
push
into
adc
xor
push
or
jp
mov
es
mov
pop
pop
addr16
add
nop
fwait
cmp
sbb
xor
mov
and
clc
cld
fcompl
push
push
xor
ret
sahf
int
mov
iret
jo
jae
xchg
mov
int
ds
sbb
xor
pop
ficoml
js
mov
inc
mov
mov
add
pop
pushf
sbbb
push
pop
sbb
push
xchg
subb
cmp
push
testl
and
lock
cld
or
inc
adc
out
out
jge
sarl
mov
inc
dec
dec
movsl
xor
xor
mov
mov
jecxz
in
sbb
mov
mov
adc
cmpsl
adc
sub
adc
rcr
push
nop
mov
pop
xchg
pop
mov
pop
cmp
mov
pop
call
xchg
add
xchg
push
enter
out
mov
lahf
push
push
sub
xchg
pop
cld
dec
pop
add
lock
and
push
and
mov
ret
and
aas
pop
mov
xor
pusha
xchg
outsl
push
mov
push
pushf
cmpsb
out
push
mov
or
sub
out
pop
or
xchg
int3
ret
push
stos
or
adc
cmp
jecxz
sbb
dec
lds
mov
dec
pusha
dec
out
test
insl
repz
sbb
and
push
jecxz
mov
or
cwtl
stos
cmpsl
call
pop
out
mov
outsb
addl
hlt
testl
adc
inc
lcall
sub
das
loopne
xor
and
pushf
test
repnz
cld
dec
out
imul
push
das
por
add
dec
xor
subl
add
xchg
mov
data16
push
push
xchg
pop
xchg
dec
pop
adc
xor
or
loopne
orb
xor
mov
inc
rolb
push
mov
inc
push
and
xor
mov
sub
push
orb
jp
outsb
out
jge
ds
mov
sub
push
sahf
xchg
sahf
push
inc
mov
push
cltd
push
cld
sbb
and
push
xor
push
pop
push
push
and
or
push
xor
cwtl
mov
testb
fildl
push
repz
pushf
sub
orb
mov
adc
xchg
push
fisubrs
adc
int
int3
adc
mov
popa
pop
sbb
addr16
gs
sbb
and
or
imul
xor
and
inc
pop
adc
pop
xorb
xor
fcomps
sub
sub
lahf
dec
hlt
lret
pusha
push
mov
fldl
sub
lret
inc
jo
or
dec
inc
push
shl
clc
dec
and
adc
xchg
imul
jp
daa
xchg
adc
dec
pop
stos
cwtl
aam
test
sub
cmp
ja
lock
sbb
and
adc
push
xor
dec
add
repz
imul
aam
sarl
xor
push
adc
sbb
jecxz
out
ret
clc
jmp
scas
psubsb
movsb
adc
xchg
push
and
outsb
push
cmp
subl
adc
push
or
or
mov
jo
mov
cmp
sub
orb
pushf
in
dec
add
es
cmp
andl
xor
mov
es
cmp
jne
xchg
jg
xchg
out
adc
push
xchg
push
mov
call
xchg
arpl
sub
or
lock
adc
push
dec
stc
push
addr16
or
jecxz
icebp
scas
mov
cmp
sub
pop
pop
adc
sarb
and
out
adc
or
dec
lret
push
xor
fildll
mov
xchg
pop
xchg
sbb
xchg
insl
imul
vpmacssdd
sbb
pop
test
add
adc
out
nop
std
lds
mov
outsb
jmp
adc
and
or
cmp
and
adc
lahf
fisubrs
mov
xchg
dec
loope
push
or
mov
mov
popa
shl
inc
fnstenv
cld
mov
dec
adc
shl
xchg
xchg
sahf
adcb
dec
xchg
push
pop
test
cltd
ds
in
xchg
mov
dec
sbb
pop
or
sahf
std
jle
or
cmp
fisttpl
adc
movsb
outsl
lret
icebp
sbb
pop
pop
movsb
sbb
sbb
adc
cmp
jl
add
xchg
push
add
and
ds
or
pop
pop
pop
repz
adc
push
push
ret
and
imul
jg
repz
sbb
fmull
sbb
fdiv
push
pop
pop
mov
push
pop
cmp
cmp
leave
leave
cmp
cmp
aas
nop
cmp
pop
mov
je
sub
and
or
lock
jae
fidivl
jp
test
sbb
mov
adc
xchg
adc
cmp
mov
add
and
lahf
pop
mov
mov
out
inc
push
test
fcompl
lds
lcall
lahf
jbe
xor
dec
adc
or
jns
icebp
xor
push
push
dec
xchg
icebp
add
int3
xchg
mov
and
add
gs
and
loope
jmp
aas
mov
sub
or
push
pop
sbb
fildll
hlt
lock
adc
or
sbb
push
orl
orl
cmp
pop
mov
in
outsl
or
pop
sbb
testb
sarl
fwait
push
repnz
int3
mov
add
and
rorb
and
hlt
push
fcomi
jmp
sarb
inc
push
in
sub
sub
pop
ficoml
pop
push
adc
in
test
frstor
sbb
aam
pop
cwtl
jmp
pushf
inc
or
cmpsb
sbb
xor
or
imul
pusha
call
jl
cmp
aad
and
lret
jle
push
xchg
jnp
pop
add
ds
or
and
push
inc
mov
out
sbb
sbb
and
jecxz
and
mov
das
adc
icebp
stos
fwait
jbe
test
and
push
push
sbb
sbb
xchg
and
mov
sbb
js
push
fdivl
shll
rcr
push
dec
sahf
shlb
pushf
test
mov
mov
or
outsl
fs
xor
mov
js
cmp
add
sbb
stc
sbb
ret
cmp
add
adc
mov
push
out
dec
std
jmp
loop
rcrl
push
movsb
stc
imul
or
inc
adc
dec
push
je
mov
test
cld
aaa
scas
mov
stos
add
push
sar
xor
sub
push
sub
push
fildl
fdivrs
dec
push
inc
js
icebp
dec
add
aad
fs
and
adc
mov
jb
inc
inc
xor
iret
jae
mov
mov
dec
sub
dec
lret
in
jne
xchg
mov
aas
pop
pusha
add
adc
push
mov
aas
adc
js
jne
push
mov
aam
loopne
cmp
daa
or
or
jns
mov
sub
lret
pop
in
nop
mov
mov
stos
out
popa
leave
rol
aad
pop
adc
outsl
sub
cmp
jecxz
pop
sbbl
movsl
push
sbb
xchg
cltd
rcll
inc
pop
push
sbb
mov
aaa
cltd
and
sbb
push
ficoml
jbe
xchg
push
mov
xor
pop
pop
sub
ret
jns
jecxz
orb
aad
and
ljmp
lret
es
push
or
lea
outsl
or
adc
out
bound
dec
and
in
mov
push
out
mov
xchg
mov
push
lods
test
adc
or
inc
loope
add
cmp
icebp
xlat
sub
adc
nop
mov
fmull
sub
push
scas
cmp
add
xor
outsl
std
xor
cli
mov
lea
rolb
and
push
sbb
mov
clc
push
xorb
mov
test
sub
and
repz
add
ss
fs
xlat
repz
or
pop
dec
adc
scas
hlt
mov
pop
and
outsl
cmc
lahf
pop
or
sub
int
pop
pop
sbb
cld
jecxz
in
lcall
pop
out
mov
insl
pushf
lret
push
repz
push
push
or
or
sbb
div
mov
sub
push
cli
popf
or
pop
sub
inc
nop
jge
and
xchg
adc
or
ss
mov
jo
out
sub
xchg
dec
xchg
pop
xchg
or
adc
push
xlat
lret
cmc
jmp
imul
mov
or
icebp
pop
bound
mov
outsl
adc
rclb
jp
iret
dec
int
dec
cwtl
dec
xchg
pop
lods
xchg
ret
add
dec
int3
dec
lods
jl
shl
mov
aaa
push
pusha
dec
insb
movsl
shr
or
push
fs
sbb
xchg
sbb
push
push
or
sub
jae
inc
ljmp
and
push
repz
mov
push
test
jae
sub
pop
push
ss
jge
bound
xchg
je
xor
push
and
push
mov
pop
xchg
jmp
pop
dec
jle
and
leave
dec
in
sbb
push
div
add
mov
or
push
dec
scas
pop
fdivp
es
inc
and
pop
mov
sbb
adc
pushf
and
pusha
jecxz
adc
loop
push
and
dec
out
cld
ss
xchg
aam
push
sbb
push
adc
fnstenv
push
xor
outsb
testl
pop
mov
sub
xor
roll
mov
or
pushf
outsl
xor
push
sub
adc
sub
adc
shlb
pop
mov
pop
push
arpl
xor
shlb
or
push
pop
sbb
pop
dec
dec
pop
fnstsw
stos
jecxz
fadds
adc
ficoms
mov
inc
test
push
sub
or
or
inc
roll
or
shlb
hlt
mov
lahf
mov
push
mov
cmpsb
repz
ss
xor
cld
scas
or
sbb
filds
test
sbb
dec
cld
mov
or
mov
pop
xchg
mov
jnp
sbb
ljmp
pop
xchg
andl
push
pop
cwtl
in
loopne
or
pop
push
xchg
in
aas
aad
mov
xchg
insb
sbb
or
out
mov
data16
jnp
xor
xor
hlt
cmp
cmp
dec
repnz
sub
mov
lahf
inc
cld
int
mov
pop
sub
mov
push
fldenv
cwtl
xchg
out
fsubrl
push
frstor
xor
dec
sbb
mov
outsb
pop
push
push
fcoms
test
test
pop
dec
dec
mov
pop
std
dec
in
out
xchg
out
push
test
sub
sub
sub
call
idivb
push
scas
push
cmpsb
test
sahf
adcl
cwtl
cmp
mov
repnz
sarl
cmp
rorl
imul
aad
dec
sbb
aad
pop
insb
xchg
cmp
mov
shll
pop
add
sbb
or
jo
or
sub
movsb
je
ficoml
inc
and
inc
inc
or
add
xor
and
and
mov
push
jp
or
xor
icebp
adc
idivl
imul
add
pop
cmp
or
add
pop
lcall
lods
dec
sbb
int3
in
adc
dec
push
ret
adc
jno
jns
cld
add
in
adc
movsl
push
shrl
mov
and
dec
hlt
rorl
lidtl
and
or
xorb
cmp
xchg
xchg
loopne
or
pop
sub
push
inc
pop
and
xchg
pusha
addr16
js
outsl
jno
or
lret
mov
out
jmp
inc
dec
inc
sub
pop
sahf
lods
inc
test
jns
movsl
pop
adc
test
dec
jns
cmpsb
adc
dec
push
mov
dec
cltd
jl
inc
inc
pop
xchg
sahf
pushf
cmp
out
rcr
dec
mov
lahf
jnp
lock
mov
stos
add
outsl
adc
int
mov
icebp
pop
push
stos
loopne
cmp
fsubs
test
data16
repnz
or
lahf
aaa
mov
cld
out
int3
loop
mov
test
in
repz
mov
xor
in
mov
xlat
aad
mov
or
daa
lahf
repz
outsb
lock
mov
sub
cltd
add
dec
repnz
icebp
ret
and
lea
dec
xchg
stos
aad
push
dec
adc
test
sub
mov
fisttpll
dec
pop
pushf
add
mov
mov
fbstp
dec
push
jge
stos
and
addr16
mov
pop
cmp
std
or
rcrb
add
hlt
mov
add
repz
stos
or
pop
outsb
pop
fisubrs
imul
test
in
cmp
push
dec
stos
adc
ja
sub
jecxz
mov
mov
cwtl
sub
xlat
mov
jb
icebp
adc
mov
mov
sbb
push
cli
mov
jno
scas
pop
pop
adc
js
mov
push
dec
jecxz
mov
xchg
push
test
sub
sub
or
pop
sub
notl
test
sbb
addr16
mov
xchg
jo
fcoms
pop
add
add
ds
xor
outsl
mov
xchg
cmp
cmp
jp
pusha
aam
test
enter
xchg
mov
adc
leave
cmp
fdivs
dec
aas
dec
inc
cmc
sub
mov
dec
or
or
lcall
cwtl
aas
sbb
push
pop
sbb
lock
fwait
inc
xchg
pop
and
push
push
inc
push
aas
pop
into
fwait
cmp
fsub
enter
adc
sbb
xchg
mov
call
add
mov
mov
dec
adcb
rcrl
repz
jo
repnz
adc
xrelease
cld
pop
pop
dec
dec
push
jge
push
pop
or
push
xor
addr16
insl
jl
push
cli
mov
lea
mov
negb
addr16
cld
aaa
mov
std
leave
xchg
les
xor
xchg
push
pop
scas
inc
or
dec
inc
addr16
jns
cwtl
jo
mov
jecxz
sbb
xor
add
xor
inc
or
jne
cmp
sbb
pop
jmp
inc
jb
xor
push
arpl
lcall
jne
fcoml
xor
xlat
push
xchg
jb
enter
xor
dec
or
fists
pop
aaa
cmp
or
fidivl
out
shl
mov
dec
into
xor
jle
push
push
sbb
dec
lret
push
mov
xchg
data16
stc
xchg
pop
sbb
jmp
cmp
dec
movsb
and
pop
pop
xor
lcall
movsl
inc
mov
add
pop
xor
nop
add
jl
or
popa
dec
clc
dec
cld
sbb
jle
ret
lds
mov
and
inc
mov
sbb
xchg
dec
pop
mov
push
xchg
scas
adc
cld
cs
adc
push
mov
outsl
les
clc
lahf
xor
sbb
jno
add
xor
mov
je
cmp
pop
add
lahf
ljmp
adc
aaa
xor
test
adc
lds
outsb
sbb
movsb
cmp
fmull
push
dec
push
add
mov
mov
pop
pop
cltd
push
and
sbb
or
sbb
mov
pop
xchg
add
cmp
addb
test
les
jbe
repz
mov
xchg
enter
repnz
dec
sub
outsl
push
and
cmp
mov
dec
cwtl
jg
dec
xor
xchg
pavgb
stos
inc
adc
mov
or
out
fists
dec
out
push
orl
pop
sbb
mov
pop
push
dec
lahf
xchg
pop
and
cltd
adc
mov
mov
ljmp
push
pushf
cmp
cwtl
push
icebp
pop
popa
push
mov
pop
push
pop
ret
jb
and
add
pop
pop
mov
inc
dec
cli
mov
push
addr16
fsubrs
sub
sub
insl
push
pushf
dec
jb
xor
sub
dec
loope
mov
mov
test
mov
fldl
enter
into
cbtw
cld
inc
lock
xor
push
adc
pop
hlt
lods
rclb
mov
rcrl
enter
adc
lds
test
inc
sub
pusha
sti
cmp
push
sbbb
sti
jp
mov
push
dec
not
jp
jp
lock
repz
jecxz
adc
push
aam
dec
and
cld
mov
or
cmp
dec
cmp
jg
movsl
xchg
dec
xchg
and
xor
out
push
loopne
scas
inc
cmpsb
inc
mov
or
mov
pop
xor
and
and
jp
icebp
push
test
cmp
sbb
push
sbb
add
and
and
sub
fimull
push
mov
mov
push
repnz
fs
scas
sub
clc
add
jb
sub
push
push
and
cld
sbb
inc
push
pop
sti
adc
cmp
or
loope
lcall
xor
sbb
pop
sbb
mov
dec
js
lahf
or
mov
js
push
adc
jne
nop
daa
pop
lea
lock
scas
jnp
xchg
mov
inc
and
xchg
jle
dec
mov
add
mov
dec
push
cmp
sbb
xchg
and
repz
dec
mov
cld
mov
sbb
or
fidivs
dec
xlat
xor
sarl
push
stos
fwait
xor
sbb
pop
mov
dec
xchg
fidivl
mov
xor
sub
add
jg
sbb
pop
add
ret
xchg
sbb
ss
sub
in
and
add
and
mov
cmp
xchg
in
ficompl
xor
fmull
cld
imul
rcrb
mov
das
sbb
ds
pop
cmp
incl
sub
cmp
jbe
ret
adc
sub
lret
sub
in
gs
cmpl
test
and
and
pop
adc
icebp
mov
mov
sbb
jns
or
push
mov
lea
mov
xchg
push
push
inc
jne
dec
push
pushf
push
sub
push
jmp
pop
inc
push
inc
fsubs
xchg
test
mov
outsl
xchg
push
and
fld
push
cmp
lea
adc
aad
fdivr
pusha
cmp
ror
mov
sub
mov
or
xchg
mov
lret
mov
ss
mov
push
cltd
repz
repnz
jl
enter
xchg
push
fwait
and
pushf
hlt
xchg
xor
scas
pop
or
mov
dec
outsl
push
dec
lret
adc
dec
or
into
mov
add
or
or
mov
mov
cmp
mov
xchg
out
fs
xchg
adc
dec
and
xchg
lea
negb
fs
xlat
loop
cwtl
push
sub
cmpsl
popa
mov
or
sti
xor
xor
sub
stc
lea
xor
adc
and
or
jp
sbb
push
and
mov
xchg
sub
aam
loopne
repz
and
cmp
dec
cmp
fs
dec
mov
lahf
xor
adc
inc
ret
xor
and
inc
push
jmp
dec
push
or
pop
mov
dec
fdivr
sub
jecxz
dec
inc
jb
pushf
inc
dec
inc
rcl
stc
or
dec
stos
cmp
addr16
xchg
rorb
and
clc
xchg
mov
dec
mov
addr16
jg
ds
cmp
lret
or
fwait
pop
sub
and
or
adc
lds
fsubrs
inc
addb
addr16
push
mov
js
cmp
jp
xor
xchg
adc
fcmovu
call
xor
ffreep
xchg
or
test
bound
fadds
ficoms
sti
adc
push
adc
or
rclb
pop
xchg
mov
fldl
xor
xchg
pop
cmp
lret
mov
dec
sub
pop
jmp
push
outsl
repnz
loopne
dec
inc
or
push
dec
mov
and
repnz
push
cmp
sbb
cld
inc
jbe
es
and
sti
out
pop
xor
jmp
jle
ret
call
jmp
sbb
loopne
cmp
int3
lods
jl
jae
mov
inc
ret
jb
sbb
inc
push
add
out
and
repnz
cwtl
hlt
clc
mov
sbb
outsl
jb
inc
fisttps
fs
inc
push
xchg
pop
pop
jno
cltd
push
loopne
pop
xchg
arpl
jae
roll
cld
lds
fistl
push
leave
inc
ss
mov
fildll
jb
sbb
in
clc
ja
inc
add
mov
cmp
pushf
lret
ss
dec
cli
dec
and
inc
in
es
pop
inc
mov
xor
iret
outsb
in
insl
cld
cli
orb
jno
fbstp
repnz
outsb
push
and
dec
xchg
mov
imul
test
sbb
jbe
jb
insl
popa
hlt
cmp
ror
and
mov
lret
out
mov
jp
sub
movsb
ret
add
dec
mov
jo
mov
adc
xchg
mov
or
js
or
inc
into
je
cmpsl
rorl
cli
add
push
adc
out
dec
sub
push
push
out
sbb
push
pop
dec
cld
loope
push
jnp
sbbb
inc
mov
sub
mov
fstpl
add
ja
aaa
mov
or
dec
jl
lret
orb
int3
lods
fwait
cltd
pop
inc
push
es
add
je
xor
dec
jecxz
adc
rclb
pop
xor
rorl
movsl
sbb
mov
nop
pop
sahf
push
sub
mov
xor
adc
xchg
inc
inc
arpl
cmc
fisttpl
dec
fidivs
inc
inc
fistl
fcmovne
outsl
add
loop
mov
out
ljmp
dec
lahf
addl
sbb
fimull
shlb
loopne
dec
push
mov
sub
stos
outsl
and
cld
add
enter
jno
push
or
adc
xor
pop
jecxz
ret
repnz
jb
sbb
inc
adc
cmpsl
sub
dec
mov
leave
out
lret
aam
dec
push
filds
dec
or
jge
xchg
mov
xchg
xor
aad
jmp
ja
xor
fnsave
movsl
cmp
fistl
insb
pop
shlb
mov
push
adc
ljmp
mov
cmp
push
mov
xorb
xchg
sbb
or
nop
in
cld
or
sbb
and
mov
xchg
xor
js
push
xchg
ljmp
rorl
push
call
mov
cld
pushf
push
dec
int
outsl
hlt
mov
pop
inc
js
jbe
or
insl
adc
pop
shlb
scas
pop
push
xor
pushf
push
cmpsb
xor
and
add
xchg
adc
pop
cmp
insl
dec
hlt
ljmp
ljmp
jg
cld
cli
into
sbb
dec
mov
push
fistpl
push
and
add
xchg
inc
xchg
lcall
jbe
push
push
cld
insl
push
xor
jb
fwait
cmp
pushf
jp
lahf
cmp
mov
rorb
adc
sbb
js
mov
and
jg
sbb
push
or
adc
aam
or
aaa
push
mov
or
fld
in
pop
xor
fs
je
andb
xchg
push
js
imul
sbb
inc
pop
fimuls
mov
ret
fcmovnb
adc
cld
imul
mov
dec
stc
lods
and
fdivr
inc
orl
mov
std
pop
adc
mov
movsl
addl
inc
test
cmpsl
out
test
jae
mov
pop
push
adc
cmp
xchg
aaa
and
es
push
dec
xor
push
pop
dec
jl
dec
cltd
mov
js
xor
cmp
lock
xchg
movsb
js
jne
pop
or
repz
mov
xchg
stos
ret
cmp
cmp
movsl
dec
dec
xchg
pop
test
mov
inc
inc
dec
inc
ja
push
in
fldl
push
dec
cld
inc
pusha
cmpsb
pop
cmp
dec
cmp
pushf
repz
fiaddl
push
inc
fimull
jecxz
lock
aad
sub
mov
cmp
dec
aas
pop
push
dec
movsb
pop
sbb
jnp
add
dec
adc
into
lahf
push
idiv
testb
das
fnstsw
cltd
xor
add
insb
dec
stc
lahf
sbb
mov
pop
aad
add
pop
xor
pop
std
and
or
or
mov
cmp
imul
or
cs
imul
sub
imul
lret
shlb
xchg
push
push
dec
dec
out
cmc
hlt
cld
fldcw
adc
lock
mov
xor
fcmove
or
pop
bound
loope
aas
fwait
xor
call
jne
cmp
test
cwtl
mov
and
ficoms
aaa
iret
cmp
mov
lret
lahf
clc
cmp
aas
push
aas
inc
pop
ret
push
xor
dec
mov
cmpsb
pop
add
dec
jg
add
dec
repz
test
scas
sbb
leave
fcmovnb
sbb
imul
shlb
pop
inc
and
sbb
in
cmp
push
adc
and
sub
mov
cmc
mov
pop
mov
dec
fistpl
cld
int
add
cwtl
adc
ficompl
fcoml
std
scas
xor
mov
xchg
in
les
cvtps2pd
insl
rol
test
mov
shll
int
pop
cmpsl
mov
dec
sub
cmp
xor
xchg
push
sbb
cld
sub
jno
aaa
push
mov
xor
jne
gs
mov
adc
pop
fmul
adc
sub
jmp
ss
test
mov
shll
cwtl
in
cmp
mov
mov
push
mov
loopne
aam
outsb
test
addr16
or
loop
fwait
mov
jb
test
loope
int
inc
mov
cwtl
dec
xor
fwait
shll
inc
pop
js
aaa
mov
push
dec
jp
pusha
and
je
adc
push
cld
aad
std
or
mov
lods
push
or
push
idivb
sbb
outsb
insl
push
outsl
jo
out
mov
pop
stos
pop
dec
rclb
inc
ja
push
jnp
adc
xor
je
cltd
arpl
or
sbb
adc
pop
mov
push
mov
dec
mov
fcompl
xchg
pop
out
dec
xchg
mov
or
dec
jno
movsb
xor
ds
push
sub
into
enter
inc
jno
jbe
or
or
sbbb
in
lea
loopne
adc
adc
add
icebp
sbb
mov
mov
push
adc
icebp
out
out
jnp
and
pop
push
sbb
inc
mov
das
sbb
lock
jo
popa
cmp
jno
xor
fdivr
adc
imul
pop
push
push
call
push
sbb
imul
dec
aas
outsb
push
repnz
loope
fdivp
rcrl
and
dec
xchg
adc
aam
add
ja
or
jmp
mov
push
sbb
ss
push
ficomps
dec
push
in
pop
sbb
repz
mov
cld
adc
movsb
negl
cmpsl
fsubrl
aad
inc
add
or
adc
push
push
fsubrl
mov
cmp
into
mov
jp
or
lret
cmpsb
test
cmp
dec
cmp
aam
into
out
inc
sbb
shlb
add
aas
out
sbb
jnp
or
mov
insl
push
sbb
inc
dec
cmpb
sub
arpl
jae
mov
dec
sbb
xor
in
xchg
cld
sbb
js
push
dec
stc
es
fwait
jae
cmp
sbb
dec
enter
in
adc
pop
sbb
stos
mov
icebp
sub
push
dec
mov
imul
jmp
in
adc
idivb
xor
cld
xor
mov
mov
fadd
pop
xor
loopne
mov
or
cwtl
pop
pushf
sub
roll
and
add
cmp
push
dec
ret
jge
inc
xchg
mov
cld
popf
adc
lahf
mov
lret
pop
push
sub
outsl
out
leave
loopne
sarl
add
push
push
fdivl
xchg
mov
in
cwtl
fldcw
xchg
aam
mov
pushf
dec
pop
jns
sbb
or
pop
jno
sub
jne
cmovs
adc
and
inc
xor
call
sbb
sbb
xlat
pop
inc
dec
mov
push
notl
lret
cmp
inc
and
or
jo
insl
sub
mov
or
push
jbe
lret
mov
rcr
popa
lock
xor
mov
push
cwtl
pushf
lods
push
ret
ds
dec
and
push
imul
out
add
sbb
outsb
inc
outsb
push
aaa
icebp
xchg
jmp
movsl
sub
mov
inc
pop
pop
push
sub
cmpsl
adc
imul
jbe
mov
inc
add
lods
xchg
insl
pop
fldt
cld
aam
aas
daa
push
loop
push
mov
js
lock
add
or
or
mov
inc
mull
in
or
cmp
and
aas
fistps
jmp
sbb
cmp
cmp
push
add
xor
sahf
mov
clc
scas
outsl
cli
cmp
adc
int3
pop
mov
and
pop
nop
jl
inc
inc
pop
push
mov
data16
inc
or
fwait
test
pop
js
push
dec
sbb
add
aaa
xchg
adc
sub
add
push
pushf
push
sete
mov
sub
movsb
push
cmp
xchg
rcrb
dec
enter
imul
enter
push
cmp
js
arpl
mov
sbb
lods
push
lods
inc
mov
mov
scas
push
or
cltd
inc
cwtl
adc
cmpsb
add
out
out
outsb
pop
jl
xor
cmp
ret
ret
lcall
cwtl
cltd
icebp
jmp
enter
fldt
mov
ss
xchg
or
in
insb
daa
add
xor
cmpsb
dec
aaa
xchg
fcompl
pop
rcl
in
addr16
add
xlat
out
pop
sbbb
jno
jnp
lret
or
sbb
adc
roll
adc
jmp
pop
adc
push
shrb
es
xchg
pusha
dec
loope
mov
sbb
sahf
pop
inc
cmp
xchg
orb
mov
mov
loop
xor
ljmp
in
sbb
fldl
sub
mov
push
adc
xchg
push
jo
cmp
mov
push
mov
push
adc
mov
mov
xor
pop
aas
pop
out
lods
sbb
cmc
fmuls
push
icebp
sbb
mov
in
push
inc
push
mov
or
xor
or
cmp
fbld
cmpsb
fsubl
outsl
js
xor
outsl
pop
xchg
cs
lea
lock
stc
dec
enter
dec
or
clc
pop
or
pop
das
cld
dec
jnp
xchg
out
mov
dec
lahf
inc
and
sbb
sub
jo
fs
cld
push
pop
das
or
fdivs
pusha
pop
bnd
mov
mov
pop
and
outsl
jg
mov
sub
push
dec
out
lds
adc
cmp
arpl
pop
sbb
notl
cmp
jmp
rcrb
imul
mov
inc
lcall
movsb
and
dec
adc
ret
jno
sbb
ret
movsl
and
sbb
push
fbld
out
mov
mov
push
xor
cmpsl
sahf
ret
mov
xor
or
cmp
data16
mov
ret
jns
lea
inc
jl
inc
jecxz
xchg
inc
addr16
mov
sbb
xor
scas
aam
dec
cltd
push
mov
dec
insl
js
notb
fwait
mov
pop
dec
mov
push
pop
and
inc
push
imul
xchg
mov
aaa
jb
pop
sbb
pop
xchg
cld
push
addr16
pop
adc
cli
xchg
dec
and
fstl
mov
cwtl
jae
sub
pop
lock
xchg
lock
lds
mov
int3
mov
aaa
lock
lds
xchg
cmp
and
sub
push
nop
push
mov
dec
aas
inc
mov
push
or
or
stc
cmp
mov
and
push
jg
loopne
inc
adc
cltd
dec
dec
mov
cld
inc
enter
inc
sbb
insl
xlat
or
sub
xor
test
outsl
adc
jge
mov
cmc
dec
sub
lret
push
js
imul
jae
push
pop
rclb
loope
stos
adc
xor
rcrb
test
or
stc
adc
sahf
mov
scas
inc
push
stos
sbbl
or
jg
lods
pop
or
sbb
cli
stc
pop
xchg
dec
or
cmp
cwtl
mov
dec
push
push
lea
push
ljmp
lods
into
scas
add
or
push
dec
rcl
adc
mov
cmp
sbb
sbb
push
or
dec
sub
cmp
pop
test
movsl
leave
pop
mov
adc
and
mov
push
dec
cli
push
dec
adcb
push
js
cmp
jle
aaa
push
inc
inc
add
or
pop
dec
sbb
cwtl
inc
or
adc
or
xchg
sahf
pushf
mov
cwtl
inc
scas
stc
sahf
cld
hlt
out
insl
subl
dec
in
ret
inc
mov
insb
lahf
cmpsl
sbb
popa
sub
dec
xchg
or
mov
inc
xor
fldt
dec
dec
ss
inc
dec
std
fmull
push
fcoml
loopne
push
lret
mov
push
jbe
dec
dec
cld
jne,pt
pop
or
iret
xchg
mov
ja
lret
mov
test
mov
stos
xchg
inc
loopne
xor
mov
cmp
cmp
pusha
icebp
dec
inc
inc
dec
pop
sub
xor
xchg
mov
test
push
or
cmc
clc
mov
inc
lds
mov
sub
cli
int3
push
fnstcw
push
dec
inc
fisttpl
scas
push
mov
icebp
aas
inc
mov
ss
inc
out
pop
cmp
into
loopne
jmp
mov
xor
mov
aaa
sarb
jb
faddl
leave
xchg
movsl
sbbl
lret
pop
out
mov
clc
aas
sub
push
sbb
lahf
inc
dec
aaa
fcomps
dec
add
sahf
ret
cmp
daa
or
and
xor
scas
add
cmpsl
out
roll
xchg
mov
or
jg
icebp
jno
xchg
addb
icebp
sbb
cmp
outsb
pop
sbb
dec
cld
test
fsts
fsubr
adc
sub
jns
lcall
or
push
sbb
shr
xor
push
cmp
mov
clc
mov
cmp
sbb
mov
int
adcb
inc
ret
cld
aas
loop
fstps
pop
int3
mov
call
add
or
pushf
movsb
fcoms
mov
push
lods
mov
and
out
or
fs
push
jle
add
or
test
or
push
pop
adc
pop
cmp
fwait
sbb
push
outsb
xor
pop
jnp
je
movsb
inc
insb
pop
and
adc
xchg
cltd
or
mov
dec
adc
adc
cltd
push
sti
nop
rcrl
leave
les
xor
dec
cld
movsl
jmp
fcompl
fistps
xchg
das
cmc
push
scas
push
inc
dec
pop
and
gs
rcll
mov
xchg
xchg
sub
xchg
stos
outsb
in
xchg
imul
sbb
in
or
outsl
ljmp
push
push
stc
rclb
loop
sbb
js
dec
mov
mov
test
insb
jo
dec
repz
push
loop
mov
push
movsb
cmp
daa
imul
sub
mov
push
push
test
lret
pushf
fs
adc
cltd
shll
and
xor
mov
xchg
pop
mov
jmp
or
movsl
addb
pop
jae
dec
aaa
repz
dec
dec
add
dec
sub
mov
and
dec
out
insb
pop
xor
jmp
xchg
sbb
sbb
dec
fsubrl
and
dec
loop
ds
fwait
sbb
add
insb
pop
sub
xor
dec
and
cmp
xchg
lcall
cmp
cmp
stos
mov
xor
js
cmp
pop
xchg
in
ficomps
shlb
nop
les
arpl
adc
xlat
xchg
sbb
fstps
icebp
jge
pop
mov
aas
in
adc
mov
add
mov
pushf
in
pop
pop
out
add
or
leave
pushf
dec
sbb
in
mov
push
jae
js
mov
add
add
adc
push
mov
dec
inc
inc
sub
jp
push
mov
pop
pop
out
cmp
dec
mov
icebp
or
adc
xchg
orl
sbb
mov
je
cld
push
xchg
in
cmp
sarb
sbb
or
adc
sbb
out
lcall
les
cmpl
sbb
sbbb
lret
sbb
xor
cmp
or
push
mov
and
fists
xchg
adc
xchg
push
imul
dec
xor
or
push
pop
dec
not
dec
sbb
jnp
xchg
push
sbb
push
jns
and
out
inc
dec
jg,pt
adc
mov
and
sub
daa
out
outsl
cld
push
addr16
inc
outsl
enter
test
cmp
pushf
sti
notb
xor
call
adc
pusha
jle
inc
in
mov
cmp
push
cmp
add
cmp
mov
push
adc
pop
in
mov
push
inc
adc
push
or
sub
push
add
push
cmp
xor
push
movsl
movsb
std
and
adcb
int3
and
cltd
xchg
ja
orb
push
sbb
push
add
xor
sbb
lret
and
xchg
push
pop
adc
xchg
and
out
mov
pop
jo
adc
out
adc
pop
xchg
sbb
loopne
pushf
fwait
adc
jecxz
sbb
and
mov
add
jns
mov
jbe
push
nop
xchg
in
xchg
or
dec
repnz
leave
pop
icebp
or
xchg
pop
adc
aam
dec
jg
loopne
cmp
xor
sbb
xchg
xchg
pop
sbb
mov
push
lret
add
dec
in
add
inc
pop
fidivs
call
pusha
mov
cli
insb
out
ret
sbb
lock
xor
jl
mov
in
sub
lret
adc
and
out
icebp
cld
mov
cmp
xchg
add
repnz
xor
insb
add
fistpl
push
mov
push
cld
add
aad
cld
repnz
mov
mov
push
out
add
xor
push
dec
xchg
dec
sbb
push
std
jle,pt
sbb
xor
in
shll
push
push
aad
fs
cwtl
cmp
or
cmp
das
pop
pop
or
jl
add
std
sarl
push
fsubr
xchg
push
mov
mov
fcompl
scas
push
adc
pushf
jnp
or
mov
xchg
fmul
call
xor
shrl
ficoml
mov
and
cmp
leave
scas
jmp
push
mov
incl
mov
andb
out
xchg
clc
sbb
rcr
dec
aas
dec
push
jnp
icebp
sub
jle
push
mov
add
les
leave
push
fwait
lret
in
repnz
rorb
enter
pop
sbb
and
jl
int
lods
sti
mov
pop
jne
push
push
add
sbb
loope
test
add
or
or
or
push
rolb
sbb
fwait
std
push
mov
jbe
adcl
mov
daa
push
aam
adc
and
int
and
dec
cmp
ss
mov
adc
rolb
in
mov
cs
cmp
cmp
add
lds
cmpsl
or
pop
xor
push
dec
sub
inc
cmc
dec
push
sbb
aam
loop
dec
sbb
stos
sbb
and
add
hlt
cli
sahf
pop
lret
repnz
ret
pop
add
adc
or
pop
adc
xor
aad
and
mov
cwtl
arpl
lret
frstor
cli
fdivrl
mov
sbb
les
sbb
mov
cld
sbb
data16
fstl
inc
mov
int
fcompl
leave
ret
outsl
dec
sub
sahf
fs
out
pop
daa
or
jo
xchg
insb
pop
pop
xchg
std
push
cld
js
leave
add
and
sbb
sbb
cmc
adc
lds
adc
pop
adc
or
mov
cmp
jmp
add
push
enter
ficompl
icebp
cmp
outsl
push
sbb
pop
pop
ja
pop
and
sub
fildl
js
adc
sub
and
sbb
pop
aas
enter
bound
push
shrl
xchg
or
push
dec
fstpt
test
fincstp
dec
sub
mov
sub
js
pop
sbb
jb
dec
or
outsl
out
push
sbb
xor
or
adc
cmp
pop
data16
int
push
pop
xchg
outsb
fwait
or
mov
aad
adc
dec
mov
push
cmc
push
xor
or
pop
hlt
or
or
rolb
ja
inc
or
push
pop
mov
xchg
aas
push
stc
sbb
pusha
pop
sbb
cmp
jg
psubusb
mov
add
dec
fdivrs
sub
or
incb
xchg
mov
xchg
cmp
fsubs
pop
nop
pop
sbb
xlat
sub
mov
xchg
or
das
mov
cmp
call
xlat
pushf
ds
pop
mov
and
mov
xor
and
mov
sbb
int3
cmc
dec
jb
add
xchg
js
int3
pop
or
rcll
or
lock
fisttps
push
push
cs
shr
scas
fldcw
loop
xchg
cltd
stos
cwtl
lret
adc
fcoml
movsl
sbb
or
cltd
data16
enter
or
and
or
jne
adc
pop
and
push
dec
scas
aas
mov
add
push
pop
and
xor
cmp
inc
inc
or
mov
std
jmp
cmpb
rclb
loop
add
pop
pusha
cmp
sbb
out
adc
sub
mov
js
out
cmp
jae
fsubrl
fdivl
mov
pop
out
mov
mov
lds
fwait
dec
cld
xor
sbb
imulb
sub
pusha
or
cmp
cli
cmc
mov
bound
cmp
addl
in
popf
fstl
dec
pop
faddl
aad
pop
or
sbb
or
xchg
pop
sti
sbb
in
test
cld
gs
addr16
add
lods
movsl
or
loop
movsl
lods
xchg
dec
dec
mov
inc
testl
cwtl
sahf
les
or
ss
in
lcall
and
bswap
xor
roll
cmpsl
ss
iret
push
lahf
fdivrs
mov
adc
outsl
jg
sahf
and
push
out
lock
xor
gs
inc
lea
int
fs
push
ret
xchg
fiadds
inc
xchg
mov
or
imulb
jecxz
push
add
mov
xor
sbb
shr
fstps
push
lods
xchg
data16
mov
push
push
icebp
sarl
adc
or
push
dec
cmp
jae
sub
arpl
cld
sub
aas
out
jp
hlt
push
in
fwait
sti
dec
push
and
adc
mov
mov
in
pop
in
fldl
das
add
roll
lret
push
pop
dec
jp
pop
lods
ficoml
in
aam
or
jb
jg
das
xor
jge
mov
push
and
jge
xchg
inc
pushf
js
scas
sub
shl
ds
mov
nop
sbb
sub
pushf
sbb
nop
mov
popa
or
pop
in
sbb
mov
mov
les
cs
lea
mov
fmuls
xchg
pop
add
push
insl
jb
dec
cld
outsb
sub
dec
nop
cmp
adc
push
pop
addr16
adc
xchg
inc
sbb
ficomps
inc
xchg
mov
xor
push
push
pop
movsb
push
adc
dec
cld
cs
adc
inc
jne
rcrl
push
mov
push
test
arpl
rorb
and
in
movsb
cld
inc
cmpsl
fimull
in
add
xor
outsl
and
push
outsl
paddb
add
out
stos
fsts
xchg
cltd
add
adc
add
js
cmp
adc
test
inc
int3
xchg
push
dec
push
sbb
jecxz
loopne
imul
jne
jns
fildl
adc
pop
cmpsb
mov
sti
dec
inc
rcl
out
es
push
aad
out
dec
pop
push
pop
adc
int
jnp
lcall
add
mov
mov
ret
jnp
jo
pop
jae
int3
inc
cs
sub
mov
jo
adc
inc
xor
sub
shlb
adc
push
in
imul
adc
movsl
dec
je
movsl
inc
pop
cmp
lea
mov
and
dec
add
ret
push
sbb
int
jge
push
lret
rorb
sub
fdivs
xor
add
xchg
cld
popl
cld
divl
xchg
arpl
mov
mov
inc
cld
dec
inc
xor
outsl
adc
out
xchg
inc
sbb
and
add
cld
jb
clc
adc
sbb
shr
inc
jecxz
mov
sbb
lods
ss
sbb
fsubrl
add
and
imull
jb
adc
leave
rcrb
push
daa
or
shr
push
testl
ss
push
add
sub
sahf
decb
sub
inc
iret
lret
sbb
sbb
lret
test
ja
xor
frstor
aas
fstpl
mov
jne
test
outsb
sbb
out
sub
mov
dec
adc
add
cmp
xchg
add
ret
pop
cmp
add
push
and
clc
subl
or
lea
inc
mov
lahf
adc
ficompl
push
inc
mov
bound
adc
leave
movsl
sbb
fs
jl
xchg
mov
sub
pop
stc
or
sti
arpl
sbb
mov
in
fnclex
sbb
mov
pop
push
lret
call
push
xchg
adc
adc
mov
icebp
es
in
sbb
movsl
mov
sbb
mov
roll
test
and
lret
push
mov
pop
add
jo
outsl
xor
cs
mov
pop
add
faddl
adc
pushf
fimuls
sbb
or
mul
in
sbb
cmovl
pop
stos
xchg
dec
rcrl
jnp
fwait
sbb
mov
lahf
sti
shlb
cmp
mov
sbb
mov
imul
push
mov
lods
stos
pop
add
inc
cld
pop
push
subl
xor
lret
push
aas
sub
push
mov
push
pushf
ficoml
fs
mov
dec
jns
pop
mov
and
push
and
inc
cmc
inc
mov
xchg
jnp
sbb
nop
sbb
cs
or
pop
sbb
leave
jnp
pop
jnp
in
inc
push
lods
popa
mov
imul
adc
pop
ja
in
mov
push
lret
aam
mov
lods
cmp
pop
cmp
mov
adc
jns
cltd
cwtl
push
and
jo
push
sbb
xor
and
pop
sub
inc
js
sub
mov
les
inc
clc
push
adc
ret
cli
pop
adc
fnstcw
add
mov
je
mov
sbb
fisubs
fdivs
or
lods
sbb
lahf
jl
addr16
jecxz
pop
shll
inc
mov
adc
ljmp
pminsw
add
mov
pop
xor
xchg
cmp
xchg
adc
fmull
cmpsl
aad
adc
push
xchg
adc
xor
adc
cmp
in
inc
jecxz
mov
mov
pop
out
je
pop
ret
or
bnd
xchg
sahf
jl
test
dec
xchg
test
neg
inc
or
dec
or
jmp
and
loope
cltd
mov
aaa
outsl
dec
push
lret
aas
inc
rcrb
push
pop
mov
pmaxsw
and
push
jne
jb
jecxz
dec
push
push
data16
fildll
cmp
inc
enter
icebp
cmp
jb
sbb
out
and
push
pop
push
sub
add
aas
cmp
int
fidivrl
das
mov
pop
cwtl
test
mov
in
into
mov
mov
and
imul
adc
and
repz
fldt
enter
dec
in
fdivl
lret
cmp
loopne
cwtl
mov
out
mov
in
mov
push
cwtl
aas
es
sbb
dec
adc
rcrl
pop
add
adc
jg
dec
and
cmp
pop
dec
xor
pop
cmp
xchg
stos
add
int
sub
dec
xor
cmpsl
push
mov
xchg
xchg
xchg
aaa
popa
sub
dec
lcall
pushf
outsb
cmp
inc
adc
mov
cltd
cmp
imul
ljmp
lret
adc
or
es
ja
and
mov
mov
ficompl
pop
test
lds
inc
inc
inc
fnstcw
add
xor
pop
inc
ljmp
lret
push
sbb
dec
pop
repz
jge
or
repz
out
jp
fucomi
or
cmp
push
mov
mov
or
inc
fs
fstpt
outsl
testb
notl
push
mov
add
pop
push
movsl
and
gs
sub
sbb
fcmove
sbb
sbb
xor
mov
cmp
push
and
fisttpll
out
cld
dec
push
fs
push
or
xchg
adc
lcall
cmp
or
xchg
push
lcall
xor
inc
mov
filds
push
fbstp
sbb
add
mov
aam
xor
mov
xor
push
mov
sbb
xchg
es
outsb
aas
sti
add
aas
push
pop
ret
iret
repz
dec
stc
in
lock
dec
sbb
push
cmp
ja
and
and
mov
push
jecxz
mov
mov
das
mov
dec
fstpt
lcall
pop
sahf
hlt
xor
mov
pop
out
adc
xchg
push
mov
dec
notb
xor
mov
je
imul
xchg
sub
lahf
loope
push
jns
or
sub
out
sbb
sub
add
sub
jae
jne
lret
in
aas
xchg
xchg
pop
outsb
add
lahf
or
mov
idivb
jg
add
inc
outsl
call
cmp
xchg
fimull
nopl
adc
ja
lds
std
push
nop
fisttpll
cltd
or
scas
add
push
fmuls
sbb
outsb
add
adc
xor
xchg
jl
aas
pop
pop
mov
out
jp,pt
adc
fnstsw
jae
lcall
loope
add
cmp
ja
xchg
mov
in
movsb
repnz
in
repz
or
aas
inc
push
or
jae
pop
dec
icebp
or
ljmp
jecxz
mov
cld
xchg
cmpsl
aaa
cs
insl
mov
pop
adc
adc
or
pop
pusha
sbb
std
inc
xchg
add
fdivrs
test
movsl
cmp
scas
je
xor
in
pop
gs
pop
sub
in
mov
loopne
and
test
out
lret
pop
jl
cwtl
pop
daa
sub
into
jo
sub
ret
mov
or
lods
mov
mov
cmp
std
add
cmp
pushf
lods
dec
or
mov
addb
jne
pop
xchg
je
add
or
cmp
cmp
cmp
adc
cmpsb
xchg
push
lock
sbb
jle
cmp
les
hlt
imul
addr16
push
or
and
dec
cmp
lahf
mov
xor
fwait
pusha
add
mov
jp
pop
fimuls
add
dec
psllw
out
pop
cmp
cwtl
cwtl
cmp
sahf
or
sbb
push
addr16
aam
sbb
jmp
int3
not
pop
dec
wrmsr
lock
pop
dec
xchg
xchg
add
xlat
sub
mov
or
push
jae
loopne
dec
xchg
sub
pushf
add
das
sbb
sahf
dec
sbb
xchg
push
fdivr
subl
inc
sti
repz
es
adc
sbb
cmc
sub
xchg
inc
das
test
and
out
push
dec
push
test
pushf
inc
dec
mov
pop
mov
mov
mov
lret
insb
adc
movsb
push
adc
cmc
out
push
fdivs
pop
dec
adc
mov
mov
testl
push
ret
clc
ret
outsl
adc
xchg
push
les
pop
fcomi
sbb
cmpsb
aas
pop
sbb
std
ficoms
ret
pop
in
imul
xchg
inc
insb
adc
push
testb
repz
add
and
sub
mov
movsb
pop
out
jae
ds
or
or
or
push
push
fmuls
xor
xchg
in
icebp
inc
jnp
jo
cmovae
out
movsl
xchg
testb
and
lea
pushf
jo
adc
push
enter
pop
sbb
xchg
lcall
mov
pusha
adc
loop
outsl
fwait
into
je
icebp
movsl
inc
xchg
and
cld
pop
sarb
push
shlb
stos
pop
rcr
lahf
add
xchg
pop
mov
pushf
cld
lret
rcrb
xchg
mov
loop
push
lcall
add
cmp
pop
sar
push
popf
sahf
adc
aaa
push
repnz
push
lods
pop
mov
insb
jl
inc
and
fcompl
pop
repnz
aaa
or
and
push
adc
inc
aam
push
cltd
cmp
jns
adc
xchg
adc
dec
int
pop
out
pop
cmp
ficoml
pusha
leave
pop
push
pop
adc
jne
dec
xor
popf
jmp
inc
fcoms
inc
fcmovbe
sbb
mov
pop
roll
adc
sbb
xor
inc
in
push
jl
jne
out
xor
dec
js
aas
out
out
ficomps
xor
js
sbb
push
push
dec
inc
sbb
icebp
jb
out
daa
ljmp
sbb
lea
xchg
ret
push
dec
mov
int3
in
add
cld
insb
in
push
cld
lods
icebp
mov
shll
cmp
push
stos
adc
adc
outsl
add
sbb
adc
xchg
nop
sbb
int
cmc
stc
cld
add
out
cs
inc
adc
in
in
push
xlat
fsubl
sbb
pop
std
rolb
cli
dec
adc
pusha
pop
in
lret
dec
jecxz
nop
push
cmp
adc
sbb
add
out
leave
fldenv
adc
sbb
push
ret
in
xchg
xchg
int3
pushf
xchg
xor
int3
pop
add
hlt
loope
std
push
int3
icebp
adc
sbb
xchg
mov
jge
and
xor
xor
out
inc
adc
xchg
cwtl
sbb
out
lret
in
fcomi
pop
xchg
adc
sarl
mov
pop
shr
fisttps
sbb
xor
popf
pop
sbb
fwait
adc
loop
pop
dec
flds
lret
add
sbb
pop
xor
cmp
add
fldenv
sbb
sbb
addl
jg
aam
xchg
ret
iret
je
mov
fs
int
and
std
cltd
fstps
cmp
loop
cwtl
shr
out
fldenv
cmp
in
fstp
pop
or
xchg
loop
cwtl
jl
dec
fnstcw
add
fildll
adc
xchg
rcr
push
xchg
xchg
pop
fcomps
xchg
test
mov
addl
push
repnz
add
sbb
aam
and
dec
mov
imul
mov
loope
cmp
pop
pop
add
dec
adc
pushf
adc
push
repnz
aas
fldt
roll
jmp
mov
cmp
push
cmc
out
sbb
mov
pop
nop
adc
add
push
out
xchg
inc
faddl
and
pop
xchg
js
int3
cmp
icebp
pop
stos
cmp
movsb
adc
add
call
mov
subl
adc
inc
ds
or
pop
mov
push
mov
js
or
push
mov
scas
jmp
std
pop
cld
stc
int
fstpt
pop
pop
mov
aam
adc
xor
mov
sbb
add
sbb
or
jo
das
jle
stos
sub
sbb
or
aad
fstps
lods
repz
inc
mov
fwait
decb
rorb
jbe
push
iret
icebp
rol
add
mov
leave
std
mov
rcll
cmc
lcall
adc
stc
loope
lds
mov
xlat
sti
cmp
and
dec
ret
pop
lret
mov
xor
das
pop
adc
fcmovne
sbb
fwait
adc
add
mov
mov
xor
mov
iret
pop
call
or
cwtl
rcl
sub
push
mov
or
iret
sti
mov
fidivl
fimuls
ret
dec
mov
repz
mov
pop
mov
pop
mov
cmp
lret
mov
adc
fstpl
in
mov
or
das
jecxz
sub
loope
cwtl
pop
and
mov
jne
jge
pop
leave
add
push
push
nop
cwtl
cmp
shl
int3
mov
and
xchg
push
outsb
xor
xor
cmpsb
cmp
stos
push
lcall
fdivrl
xor
adc
and
in
push
repz
mov
sbb
cmp
fwait
out
imul
pop
mov
aas
mov
sub
and
pop
scas
nop
dec
es
ja
lock
add
adcb
lcall
clc
js
cmp
sbb
pop
scas
aam
and
cld
lcall
sub
cmp
jbe
pop
repnz
mov
sbb
rorb
test
cld
mov
push
imul
xchg
in
stc
insb
mov
popf
in
jg
push
add
inc
push
mov
xchg
in
std
insb
mov
loope
rorl
mov
or
pop
mov
sub
fisubs
inc
cmp
in
fisubrl
cli
mov
push
andl
iret
hlt
lcall
sub
dec
add
lahf
xor
enter
call
pop
sub
and
and
inc
stos
inc
pusha
xor
pop
pushf
dec
sbb
or
adc
aam
ret
sub
hlt
les
mov
and
incl
add
pop
adc
jl
cwtl
sbb
add
les
lds
mov
pop
jb
mov
jg
mov
fadd
mov
or
call
jne
inc
add
cmp
call
fstpl
cmp
rcr
sti
lret
and
pusha
repz
pop
pushf
push
or
push
sub
xchg
xor
mov
mov
mov
pop
or
test
cmp
xor
rcll
push
ss
push
push
xchg
dec
inc
or
flds
inc
jg
cmc
lret
mov
lea
mov
cmc
data16
xor
jl
rclb
xchg
jb
xor
add
mov
loop
jno
push
fdivrl
xor
pop
jecxz
movsb
jl
call
adc
mov
aas
mov
cmp
pop
sbb
cwtl
lahf
cwtl
cmp
fsubl
and
jecxz
fs
mov
sbbb
add
insb
js
jp
cmp
or
xor
push
mov
mov
outsl
xchg
sub
decb
cltd
xorb
add
dec
push
sub
mov
jne
aam
sbb
mov
test
dec
outsl
xor
shl
sbbb
outsl
add
movb
fiaddl
loopne
scas
and
and
add
xor
xchg
sbb
cmp
rcrb
jl
lret
xchg
addb
icebp
xor
stos
arpl
orb
outsl
mov
cmp
pop
jle
xor
notl
aaa
sbb
adc
call
popa
dec
aam
pop
xor
and
sub
neg
ret
inc
mov
mov
inc
fimuls
bound
mov
popf
stc
push
pop
xor
leave
lods
push
cld
inc
repnz
xchg
add
mov
dec
gs
jo
bound
fstpl
ret
jmp
push
pop
imul
sbb
sub
push
push
cld
mov
cmc
fs
out
shlb
sub
jl
aas
dec
movsb
adc
repz
test
gs
insl
hlt
xlat
adc
ljmp
push
xchg
xchg
dec
loopne
push
sbb
adc
sbb
cmp
add
xchg
sbb
sbb
push
inc
inc
repz
leave
loop
add
cmp
test
stc
mulw
sbb
sbb
cltd
les
pop
mov
fmull
jmp
mov
lds
enter
mov
in
mov
jae
jno
mov
bound
rcll
or
icebp
xor
adc
ficoms
mov
cmp
lahf
mov
mov
jecxz
scas
fcmovb
loope
ret
or
lahf
scas
xlat
mov
adc
add
or
inc
sbb
dec
imul
out
pop
ljmp
call
add
sar
push
and
dec
xchg
sub
xor
pop
cmpsl
or
push
lret
cmpsl
push
and
repnz
xor
and
jp
ds
in
xchg
in
pop
xchg
or
and
rcr
xchg
push
mov
sbb
out
dec
out
out
outsl
and
and
imul
adc
fistpl
dec
lds
cmp
fiadds
push
mov
mov
in
xchg
sub
mov
imul
ljmp
sarl
mov
mov
xchg
cmpsb
lret
dec
jb
dec
mov
push
cld
xor
inc
adc
pop
xchg
xor
rcrb
cld
cmp
movsb
lods
pop
and
ret
fldt
xchg
fisubs
cld
cmovb
jno
sub
aam
and
pop
jb
daa
dec
cld
dec
inc
adc
ss
dec
add
xchg
sbb
out
push
jbe
add
inc
dec
stc
mov
enter
adc
xor
and
adc
sub
add
lahf
aam
add
pop
pop
xchg
adc
jg
or
push
push
sub
sub
dec
dec
add
mov
xor
pop
and
imul
xchg
xor
add
rcll
mov
push
push
lock
inc
addr16
icebp
add
add
mov
mov
inc
out
lahf
int
adc
xchg
push
mov
es
mov
cwtl
enter
push
push
or
or
les
or
sub
mov
pop
push
or
xchg
or
mov
and
inc
push
push
push
outsb
pop
and
mov
outsl
lds
fldcw
dec
lret
sbb
dec
push
movsl
stc
pushf
sub
pop
pushf
pop
rclb
or
imul
pop
and
jae
imul
xor
add
aas
gs
sbb
xor
jge
ret
cmp
repz
sbb
fldcw
jne
cld
lods
sti
xor
orb
pop
sbb
mov
inc
dec
lods
nop
adc
jecxz
not
sbb
add
test
lods
pusha
or
jb
or
jle
mulb
lret
mov
mov
js
lcall
push
sub
push
xor
outsb
in
or
mov
loop
mov
xor
mov
subb
xchg
sub
mov
sub
into
and
xor
or
mov
xchg
shrl
leave
les
repnz
daa
jge
cld
sbb
xchg
pop
imul
sbb
out
ret
cmpsb
lods
fsub
jo
adc
ret
cld
xlat
pop
cmpsl
push
xchg
clc
aaa
xor
idivb
and
shlb
cld
and
repz
lret
xchg
xchg
in
pop
lcall
adc
xchg
adc
sbb
mov
scas
jg
pop
pop
push
push
clc
pushf
enter
mov
sub
add
mov
cld
mov
cmpsb
pop
mov
lock
ljmp
adc
sbbb
jnp
jb
mov
xor
add
cmp
lds
adc
xor
in
or
mov
xchg
inc
jle
cmp
pop
inc
adc
rcll
sub
cmpl
shl
int3
mov
add
adc
sub
jecxz
pop
mov
movsl
jnp
test
mov
xor
leave
stc
test
rcrb
push
dec
push
mov
aas
xchg
push
lret
mov
dec
punpcklbw
mov
cmc
push
xchg
cmc
js
icebp
enter
mov
push
add
nop
pop
pop
xor
xchg
xchg
lock
cltd
ficomps
in
loop
test
cmpsl
or
sarb
fnstenv
out
call
sbb
sbb
loopne
inc
aam
add
jb
test
mov
icebp
mov
mov
fmuls
repnz
or
jns
dec
jae
sub
add
sub
mov
xor
xor
lods
rcrb
out
loope
dec
data16
dec
les
popa
and
mov
pop
pop
xchg
adc
mov
mov
js
pop
sbb
cmp
lahf
stos
repz
dec
xor
mov
xchg
popf
in
addr16
popf
cmpsl
sahf
fisttpll
std
lret
pop
inc
xor
xor
sbb
mov
push
std
data16
call
push
sbb
cltd
ficompl
mov
pop
repnz
int
mov
adc
add
pushf
and
add
in
push
push
mov
xor
and
adc
push
outsl
cli
scas
stos
jb
jnp
test
jmp
out
movsl
shll
xor
adc
xchg
mov
and
dec
icebp
stc
stos
mov
dec
test
mov
push
sub
or
mov
fidivrl
cmp
arpl
sub
pop
sub
mov
jno
mov
or
jmp
xlat
sbb
mov
lret
sbb
in
fcmovnu
mov
test
aas
out
test
or
ss
fs
push
fwait
mov
dec
sbb
pop
pushf
pop
rclb
jg
mov
or
lds
imul
sbb
mov
sbb
adc
jp
cmp
lret
or
pop
dec
pushf
or
pop
pop
pop
adc
mov
fdivr
push
pop
xor
lods
aad
cmp
movsb
pop
xor
or
sbb
loop
xor
insb
and
or
aam
cmp
clc
hlt
push
aas
stos
xor
pop
sbb
adc
fdivrl
pop
lcall
adc
cmp
add
sub
and
stos
add
push
or
xchg
cmp
xor
adc
ljmp
nop
pop
ret
add
xchg
ficoml
or
cwtl
mov
popf
sbb
movsb
les
es
in
mov
pop
adc
lcall
fldl
push
dec
xchg
dec
clc
adc
mov
pop
jle
stos
fsubrs
ficoml
mov
sub
mov
call
sbb
enter
cmp
and
sahf
outsb
jo
daa
cmp
pushf
push
sbb
push
or
cs
pushf
sbb
sub
add
adc
cmp
sub
push
fdivr
sub
loop
enter
insb
sbb
js
sub
mov
hlt
sahf
pop
push
cmp
repnz
adc
lds
xor
or
cs
cmc
adc
sahf
dec
pop
or
cs
or
or
cs
fcompl
sub
add
add
pop
aam
push
xchg
push
fcoms
pop
cmp
cs
cmp
inc
shl
aas
fwait
cmp
cwtl
adc
jl
fmul
cmpsl
push
cld
sbb
lods
dec
outsb
jne
mov
aam
xchg
or
out
pusha
sub
inc
adc
pop
sbb
mov
sub
or
fists
cld
scas
test
push
and
push
dec
lret
sti
jns
xor
jb
jl
xor
xchg
cld
int
xchg
xchg
leave
mov
xor
push
inc
mov
jmp
sbb
dec
dec
add
and
mov
and
inc
dec
mov
sub
add
adc
ss
xchg
scas
sbb
adc
aaa
icebp
add
xor
jb
push
dec
or
mov
xor
in
xchg
pop
stos
or
or
push
jmp
add
xor
pop
add
test
mov
jno
lret
push
push
imulb
sub
dec
in
stc
lds
sub
and
xchg
and
dec
call
pop
scas
sub
xor
xorb
jne
scas
sbb
inc
lods
fmull
dec
or
mov
repz
divl
loopne
adc
mov
je
repnz
jae
hlt
inc
fs
mov
sbb
adc
mov
xchg
dec
cld
xor
jg
push
cli
sbb
push
scas
lds
xor
int
and
xor
adc
bound
mov
insl
lret
jp
clc
and
inc
negl
dec
ljmp
pop
ljmp
mov
cmp
mov
insb
adc
adc
sub
pop
xor
dec
mov
push
loop
xor
mov
and
mov
int3
sbb
pop
rcrb
scas
sbb
xchg
cltd
and
lret
fistl
pop
or
pop
cmpsb
mov
lods
out
or
ss
call
add
sub
pop
mov
rclb
or
rcrl
cmpsl
dec
cmp
in
mov
aas
in
cmp
js
mov
adc
test
in
aas
out
fnstenv
jo
fstpt
jb,pt
rorb
mov
sub
or
dec
adc
testl
call
sub
stos
hlt
sbb
cmp
pop
test
int3
out
pushf
and
hlt
mov
sbb
jo
lahf
dec
cwtl
pop
cwtl
test
inc
jb
xor
jecxz
pop
adc
imul
lods
enter
sub
mov
xor
sahf
fdivrs
jl
ss
nop
cld
cmp
insb
sbb
in
aaa
add
adc
cwtl
adc
pop
sarl
mov
cmp
dec
inc
jnp
fistps
jb
cltd
inc
aas
cmpsb
loope
outsl
cwtl
inc
inc
loope
push
or
push
int
mov
inc
inc
or
mov
les
jmp
fimull
leave
sbb
ud1
xchg
cwtl
push
mov
insl
clc
pop
lea
cli
pop
push
or
cmp
jp
fsubl
mov
cmp
push
cld
xor
pushf
mov
fisubrl
dec
adc
sahf
loopne
pop
lea
fnstsw
add
lds
mov
push
push
mov
pushf
outsl
dec
mov
pop
pop
dec
cwtl
in
test
cld
cs
inc
add
inc
sbb
or
dec
icebp
mov
je
push
pop
cmp
mov
jb
pop
popa
dec
lcall
mov
push
sbb
cmp
cld
dec
ljmp
adc
jl
or
add
add
sbb
add
add
rcr
xor
inc
dec
inc
test
cmp
aam
dec
cltd
xor
ss
fidivrs
stos
arpl
or
push
jle
dec
ds
cld
push
mov
int3
ljmp
jmp
stos
rclb
outsl
or
cmp
push
dec
jl
or
inc
cld
or
cld
fidivrs
cmpsb
pop
clc
xchg
dec
sahf
test
clc
inc
fldcw
cld
adc
push
xchg
lock
cmp
cli
sahf
hlt
xor
xchg
cmp
dec
jno
outsl
sub
lcall
adc
push
xchg
or
icebp
adc
imul
popf
jae
xlat
cli
js
dec
mov
mov
dec
or
dec
adc
lock
jl
scas
stc
xor
mov
gs
or
xor
mov
cs
sbb
inc
dec
cmp
lds
xor
in
lahf
sub
dec
cmp
scas
nop
sar
jo
jmp
adc
arpl
fdivr
xchg
inc
fnstcw
rcll
fidivrs
jl
push
or
xchg
stos
mov
mov
pcmpeqw
and
pop
je
test
not
mov
repnz
out
xchg
sbbl
adc
xor
inc
mov
dec
inc
mov
lret
pop
adc
or
mov
dec
aad
xor
pop
xor
cmp
xchg
mov
push
mov
pop
hlt
pop
push
dec
sub
or
mov
mov
imul
push
js
cmp
push
inc
mov
mov
enter
jl
mov
pop
and
dec
and
xor
xchg
adc
neg
add
js
test
cmp
jle
loop
mov
cmc
aad
mov
push
addr16
fwait
aaa
and
test
dec
movsl
call
dec
push
jnp
xor
push
push
fbld
je
mov
loopne
idivl
and
or
mov
cli
test
aas
dec
call
sub
inc
push
and
or
dec
inc
or
pop
pop
icebp
or
mov
mov
aam
mov
negb
dec
inc
dec
cmp
pop
sbb
mov
sub
lods
dec
iret
mov
hlt
mov
xchg
adc
stos
fsubrl
clc
jge
stos
xlat
dec
adc
movsl
cmp
loope
adc
push
xchg
cmp
fwait
mov
pop
sbb
int
icebp
insl
mov
xchg
pop
dec
mov
loopne
ret
test
rclb
dec
call
push
stos
cmp
icebp
pop
stos
mov
insb
enter
inc
push
sarb
add
adc
push
stos
and
or
pop
or
jp
push
cmpsb
mov
sub
int
repnz
xchg
xchg
sarb
cmpsl
out
sub
cwtl
cmp
mov
pop
mov
push
sub
daa
add
fnstsw
cmp
lahf
icebp
aaa
rorb
ffree
mov
sub
push
xor
cmp
popf
rcll
loopne
pop
mov
loop
jae
pop
xchg
pop
pop
cmp
push
shll
stc
mov
push
xchg
cmp
or
mov
mov
movsb
xchg
je
clc
and
mov
xchg
mov
lcall
push
or
dec
mov
and
ja
dec
adc
inc
dec
xor
jl
mov
push
fmuls
out
push
sub
mov
sub
cmp
pop
les
adc
jp
xchg
outsl
adc
xor
jmp
lahf
aad
data16
loope
pop
pop
jo
xor
mov
adc
data16
xor
push
adc
cmp
and
jg
mov
sbb
sbb
adc
push
cwtl
cmp
adc
sub
or
and
add
dec
fnstcw
xchg
sub
pushf
fs
cltd
movsb
out
pop
xlat
cwtl
sub
cmp
cwtl
in
dec
sub
inc
clc
movsb
jl
xchg
adc
mov
je
dec
cmpb
sub
aaa
pop
cwtl
arpl
cmp
xor
xchg
push
iret
rorb
movsl
xchg
jmp
pop
mov
xor
mov
bound
sbb
sarl
mov
ret
push
rorb
sub
pop
add
add
adcl
ss
stos
pop
int
add
inc
or
scas
sbb
xchg
stos
mov
scas
idivb
adc
jbe
pop
negb
push
or
pop
or
push
jae
adc
lret
je
add
pop
or
xor
packssdw
and
pop
mov
pushf
sub
adc
xchg
shll
in
and
add
push
and
in
js
fs
cld
je
lods
mov
loopne
mov
stos
cld
inc
sub
test
xchg
push
rcrl
push
cmp
std
hlt
loopne
push
cmpsl
stc
cmp
in
dec
xchg
sbb
xchg
lock
inc
outsb
std
xchg
aaa
mov
jmp
mov
dec
shlb
and
pop
push
xchg
dec
add
adc
ss
sbb
add
cld
iret
dec
loopne
xchg
orl
sub
xor
in
adc
subl
xor
iret
loopne
cmpb
push
or
gs
or
sub
or
into
fisubl
inc
xchg
or
ja
ljmp
inc
xlat
mov
add
rorl
or
notl
ret
out
pop
das
jae
and
call
and
cmc
sub
pop
inc
jae
mov
sub
pop
mov
jge
push
imul
dec
inc
adc
adc
push
inc
out
or
mov
scas
push
pop
fsubrl
dec
dec
mov
pop
sbb
adc
add
jmp
cld
jp
sub
fwait
cmpsl
mov
daa
adc
inc
out
icebp
ret
dec
xchg
inc
pusha
sbb
pop
sbb
jbe
les
hlt
jno
sbb
aad
fiaddl
jmp
or
or
mov
pop
sub
lock
push
pop
sbb
lea
pop
inc
add
dec
add
jnp
sbb
test
xor
mov
jl
or
sahf
cli
lcall
mov
lods
imul
pop
shll
pop
js
or
sahf
inc
test
pop
sbb
mov
add
push
aam
or
clc
sbb
jmp
xchg
out
pop
or
pushf
cmp
jg
insl
pop
xchg
add
sub
inc
pop
test
dec
push
lret
stos
mov
dec
pop
pop
cmp
cmp
add
imul
fs
fwait
or
cmpsl
fidivs
mov
jmp
xor
sub
jmp
adc
mov
cmpsb
sub
clc
mov
xor
mov
xor
popf
lock
mov
sub
and
xor
je
sahf
adcl
dec
fimuls
testl
test
sbb
sub
mov
xor
cmp
ss
pop
push
or
cli
or
cmp
adc
push
add
add
adc
cld
incl
mov
loop
mov
mov
dec
enter
fimull
xchg
aam
adc
cmc
rclb
test
rolb
push
cmp
jnp
sbb
int
xor
dec
xchg
cmpsb
mov
aad
lds
aad
or
fdivs
push
sbb
cld
xchg
les
mov
aam
mov
push
stc
cs
xor
add
ss
pop
lds
cmc
adc
push
mov
or
mov
idiv
or
std
out
scas
or
adc
fwait
mov
cmp
xchg
jbe
push
sarl
icebp
sbb
and
outsl
ss
inc
lret
dec
fstpl
sub
sub
adc
adc
inc
sbb
dec
jnp
push
loope
dec
out
fistpll
inc
dec
adc
cmpsl
imul
push
jg
add
divl
aas
and
sub
sub
xchg
inc
loopne
mov
push
fstl
jo
rclb
lods
rolb
xchg
int
adc
dec
sahf
sbbl
aas
push
and
pop
je
pop
add
push
ficompl
pop
out
shlb
inc
inc
inc
xchg
lret
push
adc
sub
cwtl
aas
xor
dec
fsubr
scas
ret
imull
push
je
scas
dec
ds
hlt
mov
mov
and
push
sarl
cwtl
call
fildl
aam
cld
push
mov
push
pop
cli
cmp
js
sbb
mov
push
loope
or
inc
js
adc
lahf
clc
movsl
mov
iret
cli
or
or
idivb
cli
sub
or
adcl
inc
fcos
or
pop
ss
mov
dec
add
cmp
dec
mov
fstpl
pop
adc
pop
push
add
mov
sbb
pop
daa
imul
mov
jmp
adc
and
xor
pop
pushf
pop
dec
push
push
mov
push
les
dec
adc
sbb
xor
in
pcmpeqb
ja
imul
mov
sti
nop
out
cmpsb
and
out
sub
adc
xor
addr16
dec
dec
sbb
sbb
rorl
push
pop
test
cltd
sbb
sbb
push
call
hlt
lock
addr16
add
sbb
or
jns
pop
sbb
test
iret
mov
push
hlt
mov
ljmp
sbb
insl
cmp
sti
xchg
push
ljmp
push
popa
push
and
cltd
test
inc
ficoms
jnp
or
and
mov
dec
mov
cmp
data16
or
push
xchg
cmp
outsl
push
dec
mov
adc
dec
mov
mov
mov
stos
cmp
push
cmpsb
pop
movsb
lret
or
shrb
pushf
ja
popf
add
or
jle
xlat
jae
jo
imul
push
cmp
mov
mov
fwait
lock
dec
dec
and
push
negb
lcall
sbb
mov
fildl
jb
mov
pusha
sub
jle
xlat
sub
int3
mov
in
lods
sub
mov
es
xchg
or
pop
fwait
or
pop
lret
or
push
dec
ss
das
cld
loopne
sub
jle
push
dec
inc
into
dec
push
cmp
inc
je
mov
xchg
test
sbb
xchg
mov
inc
fdivrl
pop
in
test
push
sbb
in
cmp
lds
mov
cltd
or
sti
lds
pop
dec
in
ret
mov
xchg
pushf
xlat
js
je
lods
enter
or
es
pop
das
out
out
push
push
mov
stos
sub
cmpsb
xchg
iret
lds
xchg
adc
pop
push
cmpsb
pop
add
inc
sub
aas
push
add
sub
int
shlb
aas
dec
fdivs
push
imul
push
jg
in
pop
push
das
imul
fisttps
ds
in
or
sti
jmp
in
xor
add
sub
movsb
jp
or
popa
fneni(8087
jbe
aad
gs
xchg
jle
cmp
cld
add
jnp
adc
jo
xor
in
stos
dec
or
outsl
lret
xor
or
mov
push
js
mov
fisttps
popf
sahf
enter
or
cmp
push
loop
xchg
push
add
push
aas
jecxz
dec
dec
loopne
xchg
out
std
mov
sbb
inc
je
jb
jg
pop
jo
jae
sbb
in
fistl
jbe
int
inc
jecxz
mov
cmp
fwait
inc
and
push
xlat
dec
xor
add
xlat
cs
es
inc
jno
cs
pop
dec
xlat
and
pop
mulb
add
sahf
xor
leave
mov
fimuls
mov
hlt
mov
push
dec
icebp
lahf
mov
rorl
sub
xor
mov
aad
add
fiadds
sti
mov
xchg
and
mov
inc
push
in
ret
jae
mov
sbb
push
mov
pushf
cmp
lahf
pop
aaa
nop
inc
test
inc
adc
xchg
inc
mov
mov
push
sub
fs
in
mov
mov
dec
insb
xor
pop
popa
pushf
fstp
pop
mov
sub
adc
mov
movsl
xor
es
mov
add
mov
ss
outsb
js
jb
dec
push
sub
pop
xchg
jp
dec
lds
jo
mov
mov
xor
pop
pop
iret
je
xor
into
aaa
jl
sbb
lock
and
test
and
adc
cmp
xchg
xlat
lcall
adc
or
xor
cwtl
sbb
mov
jge
fiaddl
les
outsb
ja
inc
aas
or
cli
mov
aaa
ljmp
pop
inc
cmp
addr16
add
mov
mov
and
xchg
popl
xchg
sub
jmp
mov
xor
mov
jnp
cs
setae
adc
fsubr
cmpb
incb
cmpsl
jne
add
imul
aam
dec
xor
adc
cmp
inc
js
sub
cmc
xchg
adc
sbb
hlt
or
pop
pushf
xchg
pop
and
push
andb
xchg
andl
mov
insl
sbb
jb
int3
dec
and
adc
loope
or
or
inc
jp
sti
inc
dec
cld
scas
fwait
inc
push
cmp
enter
cmp
inc
sub
rorl
or
pop
jae
mov
push
in
fdivl
jbe
xor
pushf
inc
dec
lods
ljmp
dec
or
in
adc
sbb
je
push
cmp
or
jb
xchg
jo
pop
stos
mov
outsl
mov
xor
fisubs
fidivrl
xchg
sbb
dec
inc
les
in
or
jo
jnp
movsl
cltd
add
xor
lock
xchg
mov
sbb
jmp
xchg
jl
cwtl
ljmp
or
jae
sbb
pushf
nop
mov
dec
cltd
in
add
outsl
pop
dec
incb
icebp
push
cmp
outsl
sbb
or
sahf
movsl
push
push
jle
push
mov
sarl
xchg
sbb
pop
mov
stos
ds
popa
mov
adc
test
outsl
sbb
or
fwait
add
push
sub
mov
aas
iret
push
push
adc
add
inc
mov
aam
or
cmp
incb
mov
mov
fmull
xchg
int
inc
int
sub
xlat
pop
pop
and
jg
sub
cltd
sbb
sub
inc
lret
shll
dec
dec
leave
lods
imul
iret
xor
sub
push
add
sbb
pop
jl
ss
dec
xchg
in
fsts
int3
adc
dec
add
stc
lock
or
sbb
neg
push
and
push
je
xor
scas
or
scas
push
add
and
jg
shll
int
dec
add
xchg
or
push
sbb
out
adc
adc
pop
cmp
sbb
cwtl
lret
xor
outsl
pop
add
sbb
sbb
pop
jno
adc
push
and
ss
and
jp
pusha
mov
add
xchg
std
test
push
loop
lret
fbld
pop
movsl
rcll
ret
js
sbb
adc
pop
jno
leave
adc
sub
inc
mov
cltd
cmp
ljmp
add
adc
or
popf
cs
xchg
ret
sahf
in
rolb
mov
pusha
stos
es
mov
jle
or
out
add
cbtw
inc
pop
mov
popa
sbb
clc
repnz
aas
rcll
and
pop
xchg
pop
push
adc
aam
fmuls
sbb
adc
dec
cli
dec
fidivs
pop
xor
pop
sub
lret
mov
xor
fisttpl
xor
iret
out
adc
or
gs
xchg
pushf
bound
dec
popf
stc
rclb
test
in
sbb
adc
imul
adc
cld
adc
add
out
or
arpl
shl
pop
inc
sbb
inc
out
or
push
sbb
push
movsb
inc
dec
mov
inc
lods
pop
cmpsb
push
sbb
adc
mov
repnz
jbe
xorl
data16
iret
mov
or
scas
pusha
mov
dec
mov
outsb
push
mov
or
pop
or
mov
push
aaa
sub
neg
mov
cltd
push
aad
gs
dec
push
add
imul
mov
lret
inc
push
outsl
adc
sbb
adc
pop
dec
adc
adc
push
push
jb
dec
loopne
dec
pushf
xor
sub
aad
adc
arpl
scas
in
fs
inc
aaa
sbb
xor
roll
dec
xor
sarb
orb
or
pop
and
pop
add
jle
mov
aaa
pop
outsb
leave
xor
jbe
adc
cmpb
mov
or
test
movsl
bound
ljmp
inc
in
xor
mov
sub
cmp
jne
or
mov
sbb
mov
mov
mov
fwait
lock
xchg
sub
xchg
aaa
movsb
xor
shr
mov
adc
pop
mov
fistpll
js
dec
push
sbb
mov
decl
sbb
push
cld
out
xchg
js
test
add
leave
add
loopne
mov
jl
mov
in
loopne
sub
cmp
fstenv
xchg
push
ret
mov
or
add
mov
mov
rolb
xor
repnz
lret
mov
std
pop
lods
dec
out
or
and
sbb
icebp
jle
inc
dec
xchg
or
mov
mov
jle
fwait
pop
xor
cld
std
mov
cmp
cld
xchg
xchg
inc
adc
mov
xchg
mov
scas
mov
pop
lods
jecxz
add
dec
adc
xor
scas
push
fbld
or
mov
outsl
jo
dec
dec
push
mov
mov
fs
mov
fistpl
clc
cmp
xor
aam
mov
mov
enter
rorb
xor
shl
mov
mov
loop
movsb
jmp
jecxz
lea
mov
and
cwtl
nop
orb
dec
dec
fstps
and
mov
push
mov
inc
add
test
divb
or
cmp
daa
pop
fsts
add
add
pop
add
out
call
cld
jo
inc
stos
clc
adc
add
sub
or
enter
cmp
xchg
and
imul
fdivrs
dec
mov
push
or
mov
or
pop
sbb
or
sbb
vmread
xor
cmp
andb
clc
mov
pop
sub
sub
mov
jo
pop
dec
jb
dec
rclb
pop
pushf
push
mov
push
adc
mov
mov
xchg
push
rep
lea
in
fcomps
cwtl
das
in
lcall
xchg
insb
cltd
sahf
cmp
call
rcll
in
mov
daa
insb
mov
push
jo
cmp
mov
pop
mov
mov
pop
cwtl
jns
gs
xlat
xchg
mov
mov
pusha
loop
lods
enter
shlb
sbb
mov
add
jae
lods
or
pop
xor
in
adc
lret
lahf
fistl
test
xor
icebp
xorl
sbb
dec
xchg
jne
push
jge
and
push
pop
out
or
pop
mov
clc
add
stos
jge
jno
leave
cmp
xlat
adc
pop
dec
mov
cli
cmpsl
inc
call
or
test
sbb
sbb
stos
push
pop
call
movsb
dec
lock
adc
mov
xorl
jle
or
getsec
in
inc
jmp
orl
inc
ds
in
insl
adc
clc
xchg
mov
sbb
ret
xor
enter
pushf
fwait
loope
pop
dec
call
push
loop
push
push
cld
sub
adc
and
fisubrs
daa
and
ss
in
xor
ljmp
pop
ljmp
sub
adc
xchg
out
ret
adc
sbb
xchg
xor
cmpsl
outsb
mov
inc
adc
xor
fwait
int3
jmp
or
leavew
call
pop
ss
and
daa
jae
mov
cld
test
xor
push
test
setp
or
loope
jl
test
adc
movsl
sub
dec
or
call
adcb
cld
add
in
and
xchg
xor
js
inc
loopne
or
pop
mov
cmp
push
pop
outsl
mov
imul
out
cltd
fistl
and
mov
adc
icebp
cmp
sub
mov
pop
scas
and
adc
push
test
xorl
push
sub
adc
nop
mov
and
test
sub
pop
push
cwtl
pop
scas
or
sbb
mov
daa
fstpl
mov
mov
lods
xlat
dec
andb
inc
test
xchg
cld
shll
cwtl
pop
lahf
pop
xbegin
inc
jl
mov
stc
adc
inc
or
mov
icebp
mov
cmp
sti
sti
fwait
add
sub
cwtl
test
mov
pop
out
sub
fstpl
cmp
sbb
repz
sbb
je
xchg
push
and
jl
lahf
pushf
fsubs
mov
je
pop
mov
mov
lea
lea
fisttpl
pusha
imul
loope
movsl
nop
mov
cmp
add
fmull
inc
mov
cmp
arpl
and
pop
adc
push
sbb
and
inc
xchg
stos
lahf
xor
adc
xchg
testb
sub
jmp
ss
pop
lods
insb
sahf
lea
mov
je
xlat
cld
cli
cwtl
in
add
stos
cmp
dec
dec
mov
aaa
dec
pop
aas
iret
lea
fwait
lock
cmp
dec
mov
aaa
adc
pop
and
pop
xchg
rcrb
pop
ds
pop
or
xor
dec
push
cld
mov
test
enter
inc
cmp
cltd
loop
or
into
loopne
adc
xor
push
jmp
mov
adc
jb
xor
cmp
push
jp
xor
in
pushf
mov
sub
xchg
or
xrelease
jle
add
loope
mov
je
data16
push
or
clc
xor
fldl2t
lret
dec
jecxz
clc
cmp
nop
out
dec
lea
add
lds
xchg
mov
popf
popf
adc
cltd
jne
mov
mov
sub
insl
and
xchg
cmp
shll
xchg
cmpsb
ret
pop
ret
sub
inc
rclb
pushf
pop
jl
lea
xor
pop
add
fidivrl
rcl
push
sbb
cld
push
mov
sbb
dec
add
addr16
sub
clc
sub
test
or
fldcw
insb
insl
push
inc
mov
mov
ds
cmp
pop
cmp
repz
sbb
subl
inc
push
ret
xor
mov
push
dec
inc
leave
popf
cmp
xchg
outsl
dec
jae
sbb
push
cli
sub
mov
je
xchg
mov
sbb
cmpl
stc
pop
lds
adc
pop
mov
ret
mov
or
in
data16
rcrl
adc
dec
or
push
add
addr16
mov
sub
shr
cld
push
lods
adc
addr16
mov
cmp
dec
aam
and
sub
outsl
stos
adc
add
rcrb
pop
xchg
jmp
jo
movsb
ds
mov
call
mov
add
mov
dec
add
dec
xchg
push
adc
or
aas
dec
fdivrs
mov
dec
pop
int
testl
jae
push
test
hlt
dec
lret
jne
pop
mov
int3
in
fnstcw
jb
out
adc
push
es
xor
dec
repnz
pop
daa
fdivrs
adc
repz
pop
sbb
bound
pushf
daa
xchg
lods
stos
scas
inc
lds
cmp
mov
arpl
and
pop
pop
popf
dec
outsl
pop
outsb
sbb
and
adc
es
lahf
and
and
into
push
dec
cld
and
pop
push
repz
xchg
sbb
pushw
push
int
jg
pop
out
jnp
ds
dec
add
popa
cmp
jno
mov
or
pop
jne
push
int3
and
pop
hlt
fistps
popa
pop
std
mov
test
lahf
xor
adc
inc
mov
xchg
test
xlat
sbb
sbb
adc
pop
or
icebp
jbe
pop
cmovb
rcrb
scas
or
hlt
push
dec
icebp
dec
pop
arpl
inc
repnz
jecxz
ss
inc
and
push
dec
pop
jo
adc
adc
rcrl
sbb
rolb
and
int3
into
fdivs
sub
cltd
rolb
lret
mov
popf
adc
jl
loope
pop
xchg
notl
mov
add
push
cmpsb
outsl
pop
mov
xor
icebp
in
hlt
mov
jmp
or
in
lcall
scas
stos
mov
adc
push
fisubrl
adc
or
dec
sub
enter
or
jecxz
cmp
icebp
adc
inc
inc
sub
out
jmp
jns
faddl
sbb
xchg
push
popa
mov
pop
xchg
clc
dec
sbb
imul
idivl
je
cld
push
in
ljmp
and
repz
inc
cld
sti
mov
xor
mov
cmp
clc
or
movsl
dec
pop
cmpsb
fldcw
cmp
outsb
fldenv
sbb
je
push
clc
out
sub
adc
add
pusha
xor
sbb
mov
push
popf
stos
mov
or
addr16
adc
push
sub
push
je
adc
lcall
sub
sahf
and
aam
std
add
and
or
push
xor
dec
or
xchg
cwtl
adc
nop
cmp
fs
fwait
outsl
lcall
in
fwait
push
push
inc
ds
movsl
mov
cltd
loop
dec
mov
or
pop
xor
adc
inc
add
mov
es
push
mov
dec
push
in
in
lret
add
sbb
dec
pop
or
pop
and
hlt
popf
adc
and
fdivrp
insl
pusha
inc
call
cmp
rorb
push
xchg
jg
dec
js
xlat
ss
out
mov
or
or
pop
sbb
mov
in
jo
sub
cwtl
pop
adc
xchg
fimull
movsl
shlb
fwait
scas
call
jmp
push
aas
lret
push
fisttps
pop
dec
shl
lea
cmpsb
daa
lods
sbb
es
xchg
ds
sub
xor
xchg
stos
or
sbb
stos
xor
sub
push
lahf
cltd
loope
cld
stos
add
inc
jo
cmp
dec
icebp
jl
xor
or
mov
pop
je
mov
pop
cld
push
ret
ficompl
inc
inc
push
push
sbb
lahf
int3
outsl
mov
fdivr
enter
loop
jl
lret
or
sub
aaa
dec
push
movsb
orb
mov
es
cld
roll
inc
push
hlt
das
push
or
sbb
icebp
add
adc
inc
adc
leave
aad
sbb
and
adc
data16
and
lods
insl
popf
xor
pushf
cltd
and
movsb
outsl
dec
push
dec
test
cmp
cld
xlat
les
lods
aas
xor
inc
and
cltd
mov
add
movsl
outsb
add
test
in
test
push
inc
cmpsl
cwtl
rolb
cmp
add
test
and
fstpt
mov
sbb
fldenv
cli
imul
in
outsl
loop
sahf
pushf
ss
jmp
fcoms
dec
ret
mov
pop
sbb
jmp
sbb
xchg
push
pop
and
dec
lcall
enter
or
ds
pop
xchg
sbb
and
push
xor
adc
fsubr
cmpsb
stos
rcll
lret
sti
mov
gs
jp
iret
adc
repz
inc
dec
and
mov
or
dec
mov
adc
data16
in
sbb
sahf
clc
test
pop
xor
xchg
jbe
pop
movsb
xor
ret
adc
sbb
cli
and
lahf
dec
cld
in
and
fstpl
push
adc
cli
lock
add
ficoml
jae
push
pop
adcb
jne
xchg
sub
lret
pop
aam
cmp
in
iret
mov
movsl
test
pop
dec
dec
or
gs
adc
fcomps
adc
cmp
add
ljmp
les
dec
xchg
push
adc
std
cmp
lahf
mov
ret
inc
sbb
mov
loopne
and
adc
addr16
scas
cmp
mov
and
dec
ds
aam
mov
aas
shrb
daa
xor
mov
sub
mov
xlat
cld
pop
inc
scas
pop
lret
push
pop
or
pushf
daa
push
dec
mov
adc
push
daa
dec
xor
xor
scas
sbb
inc
sbb
and
dec
fisubs
inc
repz
cltd
fstps
pop
add
inc
jecxz
jecxz
jae
xor
cli
fs
or
add
push
fwait
pop
jg
enter
jecxz
inc
je
pop
movsl
xchg
pop
push
repnz
int3
pop
push
adc
pop
push
lea
mov
inc
lret
cs
sub
sbb
push
pop
data16
sahf
jecxz
out
xor
mov
test
inc
push
mov
fisttpl
cltd
outsb
cmp
add
or
or
sahf
mov
pop
or
pop
icebp
adc
shl
mov
inc
pop
mov
bound
xlat
rolb
add
faddl
outsl
mov
ficompl
adc
aad
xor
mov
in
mov
outsb
icebp
pop
scas
sbb
dec
stc
lcall
or
sete
pop
test
xchg
sub
mov
stos
stos
out
pushf
mov
sub
es
cmp
jbe
or
cmp
or
or
dec
out
xorl
ret
lock
or
sbb
jmp
insb
mov
dec
push
aas
jo
cmp
adc
add
jmp
lcall
jp
jp
inc
add
sbb
sub
fimull
push
out
cmp
mov
jo
sbb
dec
enter
push
in
xor
sar
adc
out
push
jne
mov
xor
imul
mov
lcall
cmp
rep
das
dec
dec
loop
jbe
jbe
cld
sarl
jle
scas
sub
movsl
je
imul
pop
inc
and
stc
xchg
xor
push
xor
enter
ds
dec
stos
jae
lcall
adc
jb
cld
dec
add
lcall
cld
mov
mov
pop
cmp
xchg
dec
and
sarl
fldt
mov
loope
sbb
fists
insb
inc
cli
std
adc
mov
fldcw
outsb
inc
and
jb
adc
in
sahf
dec
mov
dec
xor
lods
sbb
repnz
sbb
pop
mov
je
jb
jo
mov
mov
out
mov
sbb
pop
cltd
pop
xor
fiaddl
cltd
inc
stos
pushf
in
mov
jne
dec
jno
int3
or
shll
fstpt
or
jo
cmp
loope
cmpb
xor
icebp
adc
test
ss
inc
loope
sub
loop
jne
int
xor
dec
in
ret
pop
out
int
fisubs
mov
lahf
cld
ljmp
mov
or
lret
scas
or
pushf
jmp
rcl
dec
leave
push
xor
sub
push
inc
loop
add
out
inc
push
into
mov
mov
imul
dec
cwtl
pop
push
push
loop
aam
ljmp
lea
lahf
push
int3
add
cmp
subl
or
pop
adcb
or
loop
pop
cli
cmp
jmp
clc
je
js
and
add
pop
out
dec
mov
jb
sub
push
sbb
out
fbstp
push
nop
push
lahf
pop
mov
dec
xor
in
test
add
movsb
or
or
std
lret
pop
jle
dec
popf
dec
enter
std
adc
ficompl
pop
out
ret
and
pop
loope
inc
mov
and
pop
adc
pop
push
sbb
cmp
pop
pop
mov
xchg
sbb
xor
push
hlt
mov
arpl
js
dec
adc
aas
test
cli
add
lret
lea
pop
adc
enter
sbb
in
mov
gs
or
movsb
dec
or
cmp
rorb
incb
test
ret
inc
sbb
les
mov
enter
lret
outsb
push
inc
ret
and
fsubrl
jl
pop
cld
inc
rclb
mov
push
and
sbb
lds
pushf
cld
mov
cltd
cmp
xchg
lods
adc
push
cltd
ret
adc
adc
je
outsl
or
dec
insl
cwtl
sub
adc
or
arpl
loope
dec
cmp
int
test
or
lds
add
push
hlt
jg
dec
pop
xor
ret
mov
lods
shlb
lret
jp
and
lods
fildl
cwtl
jne
imul
sub
cmp
or
incb
jae
sbb
lret
add
repz
and
fdivrp
outsb
popa
fwait
cmpsb
imull
jb
je
mov
mov
movups
inc
and
lods
xor
dec
into
mov
movsl
adc
sub
cltd
in
daa
xchg
inc
sbb
sbb
push
aas
dec
in
jp
les
xchg
cmp
cmp
hlt
push
ds
mov
cmp
and
js
sub
aas
pop
nop
and
lret
rcrl
or
xchg
fstps
mov
bt
adc
mov
inc
push
mov
push
dec
hlt
xor
adc
out
dec
or
iret
adc
adc
push
adc
lds
jle
mov
fidivrs
sub
inc
lea
sbb
xchg
stos
imul
clc
or
push
gs
jl
fisttpl
cmp
sbb
fnstenv
push
sahf
pop
fldl
jmp
jae
sbb
pusha
rclb
mov
or
push
dec
sbb
cmp
xor
mov
pop
sub
dec
pop
add
inc
addr16
pop
dec
sub
test
xor
add
dec
or
jbe
or
cmpsb
nop
mov
cmc
and
and
add
je
mov
das
cwtl
pop
cmp
hlt
push
dec
jecxz
adc
cmp
push
cmp
in
arpl
daa
fsubs
push
sub
or
mov
jb
dec
lret
cmp
pushf
xchg
data16
sbb
aam
test
or
push
fcoms
cmp
pop
repz
pop
xor
inc
dec
mov
pushf
gs
or
das
stos
icebp
jle
nop
or
mov
sub
mov
sbb
xor
cmp
popa
push
dec
cmp
fstpl
xor
pop
jle
sbb
mov
pop
push
adc
push
js
nop
push
pusha
push
jbe
bound
in
sub
xor
outsb
hlt
and
jae
ds
jmp
stos
sub
add
or
xchg
pushf
mov
sbb
jl
inc
jo
sub
fs
pop
sbb
movsb
repnz
sarl
add
fisttpl
sti
mov
sbb
pop
icebp
add
adc
ja
mov
or
dec
cmp
push
addr16
and
sub
pop
mov
fwait
data16
dec
sub
xor
pop
and
push
push
shl
aad
jbe
js
pop
rcl
pop
sbb
pop
sbb
pusha
jp
adc
dec
ss
jge
dec
pop
cld
cmp
sub
cli
sbbl
lea
mov
lcall
ja
outsl
pushf
dec
rcl
lret
pusha
mov
xor
sbb
mov
mov
lret
sbb
dec
cmpsb
cld
inc
xor
mov
daa
sar
outsb
bound
ja
mov
dec
fdivl
or
std
push
fimull
push
jne
mov
jns
xchg
pop
cs
ficomps
mov
sbb
or
mov
dec
push
pop
mov
xor
repnz
jo
jno
xor
mov
push
fbstp
jge
and
sbb
pop
std
outsl
js
test
repz
pop
push
mov
fldenv
mov
xlat
insb
adc
sbb
push
enter
aam
cmp
je
movsb
or
mov
js
push
shlb
mov
inc
pop
enter
xchg
and
dec
std
fisubrl
sbb
sbb
pop
xchg
push
pop
in
add
jbe
fwait
pop
add
gs
adc
and
ss
mov
push
test
sub
adc
cmp
or
or
or
dec
outsl
mov
mov
repnz
mov
jae
scas
out
or
cmp
js
sarb
or
pop
add
inc
push
mov
fsubrp
int3
and
push
ret
imull
scas
or
lcall
add
mov
push
popa
out
pop
out
cmp
and
pop
or
pop
cld
jne
sbb
divb
xor
arpl
ret
nopl
dec
or
adc
mov
pop
jo
repnz
movsb
sub
adc
push
movsl
dec
add
dec
in
xor
test
jo
xchg
or
lods
add
jns
insb
out
in
js
pop
push
insb
fildll
mov
loope
or
push
cmp
push
xchg
cmp
fidivrl
sbb
sti
sbb
imul
fdivrl
cld
jae
into
pop
idivl
mov
push
xchg
push
repnz
and
les
movsl
adc
out
popa
inc
pop
gs
and
or
sub
ds
insb
inc
lea
push
add
popf
cmpsb
xchg
fwait
dec
cld
les
sbb
adc
in
movsb
shl
pop
lea
mov
cmp
mov
sbb
sarb
ret
mov
push
xchg
ljmp
and
cmp
inc
lret
aaa
jb
mov
adc
cmp
fwait
mov
add
adc
add
sub
sbb
push
mov
movsb
mov
daa
dec
aas
lods
add
mov
or
or
into
push
adc
push
jl
dec
cmp
dec
cmp
mov
outsb
cmp
add
inc
mov
dec
inc
or
mov
or
lret
pop
inc
sub
and
and
and
pop
rolb
js
or
mov
xchg
aaa
data16
popf
sbb
mov
cli
movsl
popf
test
add
sub
inc
dec
in
bound
and
sub
mov
gs
mov
clc
movsb
adc
or
adc
out
cmp
mov
push
fdivrp
and
mov
jae
xchg
stos
mov
sahf
arpl
xor
loope
scas
add
pop
in
dec
out
adc
mov
and
inc
sbb
stc
leave
push
gs
push
cmp
add
mov
std
add
fwait
or
loope
sbb
jnp
jmp
push
cmc
rol
adc
adc
inc
add
mov
lret
out
out
cltd
xchg
xor
dec
xchg
repz
clc
add
lret
gs
xor
pop
in
xchg
sti
cmpsb
add
out
sbb
sbb
clc
push
fs
or
pop
sarb
jb
sbb
test
add
cmp
adc
mov
dec
sarl
or
xor
pop
mov
pop
pushf
xlat
mov
push
jle
mov
addb
inc
inc
js
loope
mov
int3
xchg
int3
pop
push
outsl
jns
push
or
xchg
jmp
xchg
test
dec
dec
aad
inc
mov
flds
popa
pushf
mov
test
mov
add
xchg
jp
inc
cld
daa
jmp
dec
sti
pop
pop
push
in
fsubr
cwtl
mov
movsb
mov
pop
and
gs
fists
or
insl
and
dec
mov
ljmp
adc
dec
imul
push
cmpsl
in
mov
sbb
dec
xchg
insb
adc
sbbb
jle
sbb
xor
push
loopne
lcall
out
adc
pop
add
sbb
pusha
mov
jmp
dec
insb
sbb
sub
sbb
outsl
jmp
sub
add
sbb
cvtdq2ps
dec
and
dec
sub
cld
test
jo
hlt
xchg
sbb
jle
in
dec
sub
dec
sub
mov
cmp
xor
dec
pop
jg
popl
addl
lcall
aam
popf
mov
pop
fnstsw
pop
cmp
jo
push
sbb
and
inc
out
xor
adc
call
cmp
inc
hlt
jg
sub
mov
addr16
bswap
hlt
test
mov
inc
and
scas
cmpb
and
push
pop
test
jg
sbb
inc
push
aam
pusha
push
adc
int
sbb
push
sbb
and
and
push
sbb
lahf
ljmp
sbb
out
mov
test
pop
sbb
mov
push
push
push
ss
repz
adc
sub
call
adc
cmp
lahf
and
lahf
orb
xchg
les
and
std
push
dec
adc
or
mov
sbb
pop
push
mov
outsl
jbe
ja
jl
dec
pop
outsb
pop
sub
sti
outsl
xlat
jbe
outsb
push
adc
cmp
dec
sbb
inc
fwait
int3
lahf
imull
loop
push
add
fwait
mov
sbb
leave
repz
add
clc
push
inc
inc
adc
jb
xchg
lret
xchg
add
add
sbb
xchg
mov
and
push
cmp
inc
lahf
cmp
das
pop
push
xor
jbe
sub
mov
pop
pop
add
and
hlt
jae
add
add
fdivs
loopne
pusha
dec
repnz
xor
jo
aam
popf
sbb
sbb
adc
dec
sub
call
movsb
sub
push
outsl
ret
fcoml
cmovns
xorl
cmp
addr16
ret
add
fistpl
adc
cmpb
mov
data16
cmp
push
adc
or
or
and
adc
iret
call
cltd
cltd
repz
and
mov
inc
dec
jne
xchg
or
mov
pop
and
add
or
push
push
fmull
lret
dec
or
ja
cwtl
xchg
adcl
push
mov
icebp
stos
mov
fldcw
into
xor
sub
or
jle
jle
outsb
add
rcr
pop
addr16
int
sub
add
xchg
into
xor
les
xor
pop
aam
fstpl
and
icebp
xor
xchg
iret
adc
js
push
inc
cmp
lcall
call
fimull
xchg
xor
cs
mov
mov
cmpsw
push
dec
or
adc
dec
fimull
movsb
inc
lods
dec
xor
mov
push
popf
or
mov
outsl
push
cli
dec
mov
lret
sbb
add
mull
cmp
adc
sub
mov
inc
xor
sub
xor
into
pop
jnp
js
stos
adc
lret
pop
xchg
rep
push
cmp
push
adc
cmp
or
ljmp
iret
xchg
imul
bound
mov
enter
test
jae
lss
prefetchwt1
cli
cwtl
sbb
mov
xchg
ss
or
pop
gs
stos
movsb
jl
mov
mov
jp
dec
addl
xchg
cmp
inc
mov
and
fisttpl
hlt
sbb
jb
pop
xor
movsb
insb
out
push
lcall
push
push
cwtl
xlat
lods
xor
stos
jp
push
ss
pop
sub
and
ss
xchg
dec
std
insb
push
movsb
or
add
stos
add
loopw
add
js
inc
inc
in
xchg
pop
in
xor
out
adc
cld
and
test
adc
mov
jnp
dec
fnstsw
mov
sbb
daa
sbb
xchg
xchg
push
sahf
repz
sbb
dec
cmp
mov
inc
es
mov
xor
push
inc
loopne
push
pop
cmp
adc
adc
pop
lods
jl
lock
inc
je
mov
dec
test
pushf
fcompl
jp
jg
or
mov
jmp
mov
call
dec
mov
adc
sarb
mov
cmp
mov
and
out
mov
lods
adc
les
sbb
test
jmp
adc
add
call
xor
cli
pushf
and
js
out
mov
cmp
sub
adc
out
sbb
aad
sbb
adc
push
adc
adc
pop
and
push
sbb
es
mov
repz
sbb
jbe
shrl
and
push
inc
jl
xchg
sahf
call
stos
pop
pushf
dec
hlt
fisubrs
and
xor
dec
fistl
mov
arpl
adc
inc
push
adc
sahf
push
adcl
jo
aad
stos
push
xor
push
xchg
push
mov
jno
dec
imul
cltd
ret
out
ljmp
ss
xchg
ret
jns
scas
mov
or
push
sbb
xor
es
and
add
enter
lahf
fimull
xchg
xor
sbb
add
idivl
lahf
test
xor
and
rorl
xchg
or
lods
insb
push
les
aaa
or
pop
add
mov
scas
sub
and
or
jns
push
outsb
push
cmp
or
sbb
and
cmp
movsl
mov
and
mov
cld
int3
cmpsb
or
adc
mov
rorl
and
mov
push
mov
cmp
xchg
loop
sub
in
adc
inc
sbb
mov
mov
mov
aas
ljmp
les
cli
lock
cmp
adc
sbb
dec
dec
mov
test
push
adc
ljmp
add
dec
xor
add
adc
cmp
mov
cwtl
jno
jae
mov
jb
mov
dec
jge
stos
data16
add
push
add
jbe
movsl
dec
int3
bound
int
pop
sbb
cmp
pop
and
or
sbb
iret
das
pop
out
sbb
jle
cmp
divb
and
nop
inc
test
push
or
lret
outsl
loopne
or
pusha
scas
in
push
and
insb
inc
pop
fstpl
out
mov
pop
sbb
sarb
in
dec
sbb
ret
xor
stc
aam
mov
inc
jae
fistps
cltd
and
pop
aam
shlb
sbbb
mov
jmp
stc
inc
les
xchg
and
dec
add
pop
dec
or
lret
gs
sbb
pusha
push
fmul
ljmp
dec
lods
jmp
xchg
or
adc
xchg
push
add
aam
xchg
addr16
fcompl
lcall
pop
mov
lds
je
mov
lcall
add
fimull
fxch
fldt
test
repz
inc
fldenv
sub
test
or
inc
sbb
xchg
ss
movsl
ss
outsl
add
inc
ljmp
fisubl
sbb
pop
scas
rolb
test
pop
xchg
cmpsb
shr
popf
das
adc
cmpsl
adc
ljmp
lret
sbb
pop
and
inc
ja
cmp
adc
push
push
adc
cmp
in
fndisi(8087
sbb
sub
cmpsl
push
push
outsb
arpl
jae
dec
je
pop
jmp
xchg
pop
mov
xchg
sub
icebp
rcr
push
cmpsb
xor
pop
sbb
test
cmovge
mov
inc
mov
xor
std
sbb
xor
xchg
jg
pop
mov
cmp
jbe
mov
push
push
xor
cmp
lret
cmp
sbb
inc
pop
popf
mov
push
push
scas
pop
in
sub
push
dec
ja
iret
mov
push
std
inc
add
add
pop
pop
and
mov
mov
sub
pop
sbb
inc
pop
mov
xor
cltd
mov
cmp
scas
insb
jbe,pt
mov
call
jecxz
inc
lods
and
push
jbe
imul
sbb
add
dec
xchg
jb
arpl
add
xchg
je
push
push
fcmovnbe
sub
xor
out
pop
add
xor
mov
insb
cld
ljmp
add
or
mov
and
cld
insl
ljmp
adc
xchg
bound
xor
adc
jp
dec
mov
sub
adc
adc
loope
shlb
mov
jmp
mov
xchg
push
push
inc
add
fcoms
and
loop
and
dec
dec
jl
mov
sbb
in
andps
pop
outsl
sub
notb
es
and
cmp
xchg
imul
fisubrl
sbb
sbb
xchg
inc
adc
sbb
dec
sub
sbb
fstps
in
loope
and
cmp
cltd
stc
adc
jne
pop
aaa
pusha
adc
or
add
lock
mov
sbb
adc
fistps
in
shll
mov
mov
fmull
mov
jp
dec
pop
xchg
pop
movsl
lret
adc
adc
scas
jl
mov
adc
push
sbb
int3
icebp
push
cmp
cwtl
aad
pusha
sbb
add
int3
pop
cwtl
into
loopne
cmp
mov
add
adc
sub
arpl
add
int
lock
push
cmp
push
outsl
mulb
in
push
data16
pop
lahf
idivb
insb
push
inc
and
jecxz
movsl
cli
jmp
shl
in
mov
mov
xchg
cmpsl
xor
hlt
decb
fistpll
or
mov
mov
adc
or
iret
subl
mov
dec
lock
pop
push
xchg
lahf
or
dec
mov
in
arpl
mov
lret
jecxz
adc
sbb
adc
pop
or
pop
test
sbb
out
clc
push
lds
popl
lret
ljmp
lock
shl
jo
loop
lods
mov
add
pushf
jb
mov
cwtl
push
sbb
sahf
jb
fwait
xchg
scas
jl
mov
dec
adc
push
xchg
push
or
shr
xlat
ret
xchg
xor
cli
clc
or
lock
mov
incb
xchg
adc
push
push
aas
xchg
repnz
dec
cld
xlat
or
das
pusha
jae
add
mov
push
dec
ljmp
add
push
push
and
les
pop
or
je
sbb
sbb
adc
and
or
adc
test
lcall
and
sbb
ljmp
fisubl
mov
in
xchg
cld
adc
add
push
adc
push
and
mov
dec
pop
fincstp
push
loop
nop
adc
mov
push
pop
push
cld
scas
inc
pop
cmp
and
and
and
sbb
push
outsl
mov
adc
xchg
adc
cli
jecxz
jae
movsl
cmp
cmp
or
inc
inc
or
pop
sbb
pop
stos
inc
outsb
sbb
dec
cld
xchg
movsb
rcr
je
push
outsb
pop
mov
jmp
xchg
pop
ss
or
push
sub
rcll
out
mov
imul
adc
xchg
dec
mov
cltd
fstl
stos
adc
repz
rcll
hlt
xor
and
xchg
adc
dec
fs
or
enter
mov
or
dec
add
movl
sbb
rolb
mov
popa
rcrb
xchg
je
outsl
adc
stc
pop
sbb
out
sbb
loop
sbb
sbb
push
aad
mov
and
ficoml
mov
xor
xor
out
imul
adc
call
lfence
or
cmc
into
jo
cmpsl
out
outsl
pop
adc
dec
xor
pop
pop
xchg
dec
push
mov
xchg
adc
push
mov
negb
stos
scas
mov
add
inc
adc
sbb
mov
xchg
sbb
xchg
fidivs
mov
dec
in
pop
cwtl
sbb
out
movsl
fstl
jecxz
xor
mov
shll
adc
insb
mov
pop
xchg
fistpll
pushf
cmp
test
adc
sbb
loop
pop
xchg
cmpsb
outsb
psubusb
inc
into
mov
sbb
push
outsl
out
and
out
jg
add
test
sbb
jnp
outsb
pop
adc
or
sti
sbb
xchg
add
mov
adc
ret
adc
out
fiaddl
mov
sar
xlat
and
lea
xor
mov
jae
jge
add
fisubl
dec
sbb
push
aas
fmull
jmp
inc
fdivl
adc
mov
pop
daa
sbb
out
sarl
xchg
pop
outsb
js
add
xchg
movsl
pop
mov
pop
sbb
push
and
push
inc
sti
push
pop
xchg
aas
sbb
lahf
mov
nopl
orb
push
sbb
sbb
inc
pop
fisttpll
dec
dec
mov
push
push
inc
movsl
movsb
rolb
sub
gs
imull
lcall
pusha
jnp
pop
movsb
mov
adc
push
loop
xchg
jp
icebp
aas
insl
ds
push
cwtl
int
xchg
push
mov
xchg
dec
les
adc
adc
dec
dec
call
adc
adc
pop
xchg
push
push
cld
fmuls
push
or
sub
add
cmp
js
cld
pop
pop
je
js
dec
cltd
adcb
in
orl
fnstsw
sub
xchg
negb
xchg
pop
lods
insb
sub
mov
sub
cmp
aas
outsl
mov
data16
inc
adc
xor
add
add
sub
iret
pop
pop
mov
adc
sbb
or
repnz
scas
xchg
xchg
ljmp
push
mov
lods
fistpl
push
mov
fwait
pop
cld
xlat
fisubl
and
outsb
das
pop
xchg
adc
cwtl
arpl
int3
shll
arpl
mov
xorb
mov
add
loope
push
jp
rcl
xor
push
cmp
mov
mov
sbb
xor
bound
jbe
xor
push
int3
imul
push
lcall
adc
mov
lock
mov
mov
pusha
outsl
add
pop
pop
push
or
xchg
shll
test
add
repz
inc
pop
ljmp
lret
pop
aaa
insw
cmc
cmp
or
movsl
fisttpl
movsb
add
sbb
xor
mov
enter
adc
fldenv
cmp
call
lods
push
or
in
sub
in
push
dec
xchg
pop
push
xor
or
in
fimuls
cmc
ljmp
xchg
dec
stos
daa
ret
xor
adc
mov
pop
aam
adc
int3
or
stos
and
outsl
xchg
pop
fistps
dec
arpl
pop
inc
cmp
arpl
or
sub
cwtl
push
cld
add
sub
add
xchg
inc
add
rcrl
int3
cwtl
pop
cmpb
lock
inc
ret
inc
and
mov
push
pop
inc
add
aas
push
mov
mov
arpl
aad
shlb
std
jmp
xchg
js
adc
test
or
or
mov
pop
adc
shrb
pop
push
insl
xor
sub
and
inc
cmp
outsl
pop
push
xor
cli
loopne
sbb
sub
iret
sub
sub
mov
cmp
rcll
sbb
sbb
push
ljmp
inc
or
mov
loopne
pop
mov
movsl
lcall
outsl
rorl
lret
jg
xor
jne
aas
lahf
pop
mov
adc
adc
out
sub
jne
xchg
mov
mov
adc
adc
inc
and
rol
pop
sbb
push
enter
push
gs
mov
jb
pop
lods
inc
and
jnp
ffree
sbb
sbb
sbb
stos
mov
sbb
fdivrs
fs
mov
sbb
or
adc
adc
shl
mov
xorb
cmp
inc
fcmove
insl
cmp
fndisi(8087
mov
xor
shr
je
xchg
pop
icebp
std
shrl
outsb
mov
lahf
push
sub
cwtl
and
jle
in
adc
jmp
mov
add
pop
jo
sub
sbb
and
sub
es
sbb
push
repnz
pop
push
stos
je
or
xor
movsl
cwtl
dec
dec
fdivr
repz
lahf
inc
cmc
adc
cmp
popa
or
sbb
push
ljmp
clc
inc
loopne
adc
lret
stc
and
cmp
xor
push
ret
and
icebp
gs
pusha
ret
xchg
pop
pop
jg
cld
add
mov
inc
pop
call
mov
cmp
fldl
dec
dec
clc
cwtl
sbb
or
mov
and
test
pop
pop
stc
cwtl
pop
sbb
xor
inc
pop
mov
push
or
hlt
jl
or
and
arpl
or
cmp
mov
xor
sbb
outsl
sbb
out
punpcklbw
cld
es
pop
adc
roll
add
fsts
push
add
xchg
in
in
jmp
imul
std
jae
push
xor
lods
lcall
pop
add
dec
cltd
bound
out
dec
aad
insb
jnp
xchg
xchg
int3
pop
outsb
arpl
inc
js
mov
in
das
push
and
inc
or
sub
sbb
inc
ret
cmp
test
add
xchg
mov
inc
insb
pop
and
xchg
sbb
mov
cmp
movsl
inc
stos
adc
addr16
in
jp
int
mov
xor
pop
test
cmp
sub
iret
dec
cli
xchg
out
adc
cld
imul
push
jmp
adc
popa
popa
adc
mov
or
cmp
mov
pop
and
movsb
outsl
adc
jl
jo
jecxz
push
das
imul
jne
cmpsb
pushf
push
inc
icebp
aam
sbb
sahf
sub
inc
adc
dec
mov
loopne
inc
adc
xor
push
jns
ss
cmp
jl
gs
xchg
mov
add
stc
lahf
pop
xchg
adc
mov
or
icebp
push
inc
dec
and
sub
adc
pop
jo
ss
sub
xchg
or
icebp
xlat
xor
lret
adc
or
sbb
icebp
pop
mov
sub
adc
cmp
xor
dec
jns
mov
add
pop
mov
jo
sub
mov
push
push
xchg
push
or
rcrb
repnz
sbb
aad
dec
pop
pop
ret
mov
jae
xor
int
lcall
xchg
and
and
mov
dec
test
jno
jb
xchg
cmp
jno
mov
sti
push
push
adc
adc
int
and
cmp
cwtl
out
inc
mov
pop
test
ficoml
mov
sbb
mov
mov
sbb
out
adcb
pop
inc
xor
lret
pop
adc
jo
sbb
dec
fs
mov
mov
cmp
sub
daa
inc
shrb
fmull
xchg
mov
adc
sti
push
mov
xor
js
aaa
push
outsl
and
cmp
add
adc
xchg
push
lods
stos
jae
dec
cmp
js
adc
mov
jmp
jp
mov
xchg
test
ret
int3
mov
and
inc
movsb
pop
pop
cwtl
cmpl
dec
sbb
nop
dec
and
jecxz
rcrb
sahf
mov
sub
fistpll
jbe
dec
adc
push
lret
add
aas
sarl
loop
fcompl
mov
jge
lret
in
mov
pop
jno
jle
xchg
in
sub
pusha
scas
xor
adc
dec
loop
pop
mov
xorb
xchg
dec
mov
xor
jb
lcall
outsb
decl
fldenv
fs
xchg
push
xor
in
fisttpl
fisubl
outsl
subb
mov
fwait
cmp
and
lods
bound
shll
add
repz
xlat
idiv
mov
adc
mov
ljmp
js
xor
dec
xlat
inc
adc
sbb
xor
cli
in
push
test
push
cld
ja
ret
call
push
mov
xchg
js
loop
insl
cmp
cmp
push
dec
pop
mov
adc
pop
or
fstpl
fs
pop
out
cmp
mov
xor
addr16
add
push
lock
sub
insb
cmp
icebp
add
scas
xor
loopne
inc
idivl
movsl
inc
adc
xchg
insb
cmp
ja
js
mov
dec
pop
mov
pop
in
mov
dec
sbb
adc
rolb
add
jp
and
adc
pusha
fcoml
mov
inc
xor
or
mov
xchg
adc
mov
test
scas
leave
mov
add
xor
pop
sub
pop
push
adc
add
mov
inc
cltd
fbstp
jl
movsb
push
pop
mov
sti
push
xchg
push
dec
in
int3
pop
or
out
fadds
cmp
test
dec
sarb
dec
jns
push
and
push
and
sbb
mov
outsl
jbe
jg
dec
call
stos
outsb
sbb
aad
add
or
imul
cmp
inc
movsb
loope
mov
xchg
rolb
sbb
cmp
push
fs
cmp
sarb
sahf
push
push
in
push
sbb
sub
adc
mov
add
js
cwtl
push
les
mov
aas
into
xchg
push
data16
pop
mov
iret
mov
test
adc
xchg
push
roll
lods
imul
or
dec
dec
sub
sub
pusha
sbb
idivb
mov
das
in
inc
mov
xorb
mov
add
push
sbb
stos
and
rclb
repz
ret
and
repz
out
in
rorl
or
jo
and
jo
jge
mov
lret
out
xlat
nop
ljmp
aam
sub
pop
sub
and
out
xor
cltd
ficomps
xor
loopne
xchg
push
outsl
lock
rol
popf
add
jno
inc
pop
pushf
scas
insb
adc
or
fidivs
or
jmp
test
push
pop
inc
sub
xchg
outsl
xchg
xchg
or
push
nop
test
inc
push
inc
mov
aas
add
xlat
fs
jae
xor
rclb
lret
popf
pop
ja
push
adc
dec
in
and
inc
mov
sahf
xor
add
lea
sub
sub
sub
dec
xlat
ja
jne
adc
sbb
push
and
inc
push
outsl
sti
psraw
pop
jbe
loopne
movsb
out
mov
mov
cmp
dec
dec
lahf
leave
cmpsb
jmp
nop
int
xor
add
js
cltd
cld
sbb
dec
pop
andl
or
jle
nop
sahf
mov
dec
jnp
and
mov
sub
pushf
push
add
bound
aam
adc
movsl
inc
jae
cmp
cmp
test
jge
ret
sub
xor
mov
outsl
adc
inc
xchg
mov
fildll
dec
rcl
insb
pop
cmp
ret
sub
iret
ja
or
sbb
lcall
xor
add
fdivs
xor
and
mov
push
cmpsl
mov
movswl
test
sbb
adc
aaa
add
ljmp
aaa
movsl
adc
rolb
xchg
rcll
and
popf
out
mov
mov
or
inc
bound
or
pop
cmp
and
push
mov
xchg
cmp
dec
cltd
mov
fsub
mov
or
inc
mov
sbb
inc
loopne
and
pop
inc
sbb
das
int
add
and
jo
lods
outsl
fwait
lods
pop
stos
adc
scas
inc
stos
jg
and
inc
adc
pop
mov
gs
push
flds
and
out
imul
dec
sbb
xchg
imul
in
pop
xchg
push
push
in
adc
fnstenv
sarb
inc
inc
ljmp
ret
or
lods
xchg
xchg
adc
pop
sub
icebp
arpl
nop
push
and
xchg
pop
sub
or
lahf
jb
mov
adc
mov
adc
out
or
cli
out
in
jae
pusha
mov
pushf
adc
dec
adc
adc
xlat
lds
shl
sub
aam
jb
scas
jmp
jl
mov
pop
mov
pusha
stos
jne
dec
sbb
pop
sbb
adc
daa
xchg
sbb
add
dec
shlb
sbb
fildl
pop
jne
jo
sbb
sbb
sbb
mov
roll
cmpsl
enter
dec
lcall
les
adc
out
lcall
test
mov
xor
aaa
ret
sub
xchg
push
mov
and
xchg
lcall
pop
sbb
xchg
repz
or
adc
test
cmpsl
and
jmp
pop
xor
aam
lods
cmc
xchg
cwtl
push
frstor
add
jecxz
cmp
aas
mov
mov
cmp
bound
cmp
and
stos
and
pop
shrl
add
imul
sub
add
lret
stos
dec
xlat
daa
adc
aad
pushf
mov
mov
lods
cmp
aas
fs
jbe
sbb
fstpl
and
mov
mov
psubusb
dec
pusha
xchg
cmpsl
data16
and
enter
cltd
mov
push
cmp
arpl
sbb
sub
scas
insl
adc
jne
pop
out
mul
popf
mov
fiadds
insl
mov
les
out
sub
cmp
adc
dec
mov
push
repnz
jno
aas
sub
mov
imul
dec
mov
lock
sbb
mov
test
repz
sub
cltd
push
mov
push
cli
and
ja
imul
cmp
out
aad
xor
data16
pusha
xor
in
mov
xor
mov
xor
pusha
fildll
and
mov
adc
pop
addr16
rorb
pop
shrl
adc
xchg
inc
pushf
pushf
adc
in
dec
dec
dec
dec
dec
jne
or
mulb
push
and
clc
loop
sbb
push
xor
add
fmuls
out
push
lods
push
mov
fnstenv
shr
xor
cwtl
in
gs
add
dec
sub
sti
push
mov
xor
cmp
iret
pop
fmuls
clc
out
jnp
cmp
loope
xchg
sahf
jno
sub
sub
cmp
loope
rolb
or
jne
js
pop
pop
pop
xchg
push
or
imul
mov
mov
mov
sub
dec
cmp
negb
xor
addl
adc
push
mov
and
cltd
lock
dec
and
jp
out
push
push
xlat
xchg
cmp
cmpsb
lea
rcrb
mov
mov
js
sbb
and
dec
repz
add
inc
or
jo
or
cmp
adc
arpl
fdivrl
push
fstps
jecxz
rorl
and
dec
ret
xchg
mov
out
clc
popa
int
std
push
in
and
mov
adc
or
lea
fistpll
mov
mov
sbb
lea
push
fiaddl
xchg
ljmp
fisubrl
lret
add
push
adc
cltd
fisubrs
maskmovq
mull
mov
jecxz
pusha
movsl
mov
cmp
jo
xchg
cmp
addr16
pop
xchg
xor
das
jg
mov
jnp
xor
add
lea
scas
clc
mov
sub
aaa
lcall
mov
mov
pop
inc
aas
sti
push
sbb
loope
aas
pop
xor
push
fcoms
xor
dec
rcrb
aas
xor
add
lahf
cmp
ret
xchg
divl
push
or
test
or
fdivrl
mov
sub
sub
fiadds
cmp
sbb
cltd
and
push
jp
xchg
add
incb
js
xor
inc
std
or
xchg
jae
cwtl
outsb
in
adc
jns
inc
aaa
dec
inc
xor
faddl
dec
addr16
outsl
mov
cmp
popf
lcall
loopne
cmp
pop
xor
lret
inc
lret
mov
jne
cmp
adc
cmpsl
push
adc
sub
addb
ja
aam
adc
outsb
xor
pop
ror
jg
jp
or
loope
push
fbld
hlt
adc
iret
stos
insl
sub
adc
or
das
pop
test
inc
adc
push
or
push
lock
loopne
pop
push
mov
fnstsw
das
pop
sbb
sbb
adc
cmp
add
in
inc
add
iret
lock
stos
shlb
mov
mov
xchg
int
fdiv
push
lods
aas
sbb
pop
pop
and
sti
lahf
inc
je
or
adcl
aas
dec
xchg
mov
jge
mov
outsb
adc
adc
fs
mov
mov
cwtl
sbbl
xor
xchg
xor
adc
push
popa
xchg
or
imul
sbb
xchg
mov
cltd
je
dec
pusha
stos
adc
xchg
pop
aam
cmp
pop
or
sbb
data16
outsb
outsb
dec
or
aas
inc
sbb
or
popf
popf
pop
sbb
add
ret
and
mov
test
inc
test
fstps
popa
mov
lds
push
mov
xchg
sub
gs
cld
sbb
xchg
lea
pop
inc
sbb
outsl
pop
inc
xor
cmp
pop
mov
xchg
aas
test
scas
arpl
and
insl
push
in
cmc
inc
test
jae
bound
mov
ret
mov
xor
jns
xchg
adc
fimull
mov
fildl
aaa
je
sahf
rcll
pop
xor
scas
push
adc
and
imul
or
sbb
pusha
sub
outsl
push
mov
fisubrl
pop
sbb
xor
push
push
jmp
dec
sub
imul
sbb
cmp
push
icebp
add
aas
mov
icebp
push
pop
cmp
aaa
into
xor
adc
xchg
pop
lds
pop
xchg
xchg
test
push
add
sbb
jo
adc
pusha
adc
push
jmp
std
adc
fs
cltd
cmp
add
or
out
aam
mov
fs
pop
lahf
mov
sbb
sbb
jbe
add
test
pop
or
push
popa
pop
shlb
es
pusha
in
pop
or
jecxz
sahf
push
adc
mov
cmp
or
push
or
xor
lahf
fisttpl
push
cmp
incb
cmp
and
add
mov
js
ret
jo
mov
stos
gs
mov
lcall
fcompl
or
sbb
push
stos
ja
aas
pop
and
cmp
jbe
dec
add
cmpb
dec
xor
sub
int
dec
xor
sbb
sbb
xor
sbb
in
out
xor
sahf
leave
cli
enter
pop
cmp
icebp
add
imul
in
int3
xchg
mov
jle
pop
push
sub
push
mov
insb
add
xor
addr16
mov
push
adc
cmp
push
push
js
pop
add
add
and
pop
lods
sbb
mov
jae
and
mov
add
fstl
mov
cltd
aad
cld
frstor
sbb
sub
inc
sbb
xchg
push
imul
or
sbb
push
sbbb
sub
stos
fists
dec
dec
push
in
push
mov
dec
xor
out
mov
int
shrb
sub
fs
lods
sub
out
insl
sub
shr
jmp
sub
jmp
loope
lods
js
sub
sub
and
cwtl
neg
fstl
fcoms
pop
dec
rcrl
xor
fimuls
nop
pop
pop
cmp
pop
jecxz
xor
out
push
mov
or
flds
fildll
xlat
jl
repnz
push
pop
into
mov
mov
and
imul
aad
lock
int
hlt
sub
xor
mov
push
xor
enter
dec
ret
mov
xchg
filds
fcoml
fisubrl
lcall
jmp
out
pusha
das
imul
repz
cmp
mov
adc
adc
and
popf
xlat
add
sub
pop
pop
cltd
loop
mov
xchg
mov
cwtl
lret
cmpsb
ljmp
and
outsl
or
dec
mov
sbb
cmp
and
imulb
xchg
and
inc
outsl
iret
sub
out
mov
pop
and
sti
xor
xchg
pop
je
or
push
or
sbb
xor
push
cmc
push
call
mov
rclb
inc
mov
cmpsb
test
fwait
xor
dec
sbb
icebp
les
mov
fs
adc
jl
pop
mov
pop
and
xor
aam
sbb
leave
inc
lock
cmp
jmp
sbb
pop
fwait
fs
cmp
adc
or
outsl
mov
insb
mov
or
pop
cwtl
dec
jns
add
cmp
pop
and
sub
mov
pop
push
adcb
fnstcw
jecxz
js
fwait
icebp
out
cmp
inc
adc
adc
cmpsl
cmp
jo
and
xchg
call
cwtl
jle
call
inc
dec
stos
hlt
push
repz
sarb
add
push
fildll
cmp
adc
repnz
inc
mov
dec
ds
push
sbb
inc
and
cli
fsubrl
nop
push
movl
repnz
pop
cmp
roll
in
mov
outsl
adc
fucomp
addr16
in
jae
dec
cld
icebp
movsl
rcll
ja
mov
adc
icebp
sbb
cli
out
aaa
fmull
jbe
xchg
decl
lods
fs
pop
push
cmp
and
lret
mov
cmp
cmp
dec
stos
pop
and
data16
leave
jbe
imul
out
pop
xchg
lret
sbb
jmp
fcoms
iret
jge
gs
js
sti
adc
push
sbb
test
jl
xchg
and
mov
int
gs
or
pop
mov
push
pop
lods
adc
js
les
adc
inc
add
and
aad
cmc
rorb
mov
inc
sahf
jo
xchg
mov
cmp
cmpsb
xchg
aad
and
mov
hlt
sbb
adc
mov
add
mov
js
xchg
jnp
rcll
ss
or
outsl
lret
mov
mov
jecxz
dec
or
in
out
xor
test
cmc
imul
xchg
nop
xor
cmp
test
pushf
js
inc
xchg
dec
xchg
data16
cmp
out
lods
rorl
mov
sub
movsl
ljmp
leave
loope
fstl
dec
inc
or
adc
and
adc
push
or
dec
fisubl
sbb
or
pop
xchg
dec
call
xchg
push
mov
xor
into
pop
push
fsqrt
inc
dec
mov
setae
push
scas
lcall
and
shlb
or
pusha
jae
sub
mov
imul
sbb
iret
mov
xor
inc
or
inc
bound
sub
pop
inc
sub
cmp
or
data16
and
push
pop
dec
ds
sub
fcmovu
addr16
les
xchg
mov
inc
add
lret
push
loope
into
adc
and
test
pop
into
mov
aas
addr16
es
pop
cwtl
xchg
int
loop
xlat
cmc
pop
mov
adc
xchg
icebp
sub
ja
adc
pop
hlt
cld
jl
repz
lret
or
mov
add
dec
and
addr16
dec
cltd
pushf
push
imul
and
push
call
inc
push
scas
sbb
push
sbb
jecxz
lret
sub
pop
sbb
icebp
sbb
inc
cmpb
das
sbb
and
nop
cmp
jmp
sbb
nop
pop
sub
push
sub
jecxz
cltd
pop
or
test
xor
pop
out
mov
or
inc
loope
lret
lcall
push
or
and
or
adc
cmp
sub
and
adc
cltd
rcr
shlb
xchg
in
pop
repnz
add
dec
add
lahf
call
movsb
loopne
mov
ljmp
enter
sbb
or
lret
test
fnsave
jle
mov
pop
push
inc
ret
pop
arpl
stos
dec
push
sub
and
ret
ljmp
push
xor
mov
lds
cmp
xchg
subb
jecxz
xor
sub
add
pop
fwait
pop
push
add
xor
and
push
or
xor
pop
adc
mov
dec
inc
fucomi
movsl
sahf
aam
hlt
ffree
cmp
inc
shlb
adc
ss
shr
cld
jbe
xchg
ss
or
ficoml
fcmovnu
ss
lock
sahf
adc
or
shll
mov
repz
add
or
inc
jne
ja
push
pop
and
jmp
ss
push
filds
or
nop
sbb
ret
in
add
and
fdivp
aas
xchg
loop
cmp
notb
inc
decb
jnp
lock
flds
sub
push
jle
jp
stos
out
add
mov
cli
cli
xchg
pusha
mov
and
icebp
pop
adc
adc
gs
pusha
inc
cmpl
push
mov
adc
dec
mov
cmp
adc
pop
gs
or
cmc
and
pop
xchg
out
mov
xchg
push
xchg
mov
or
push
out
pop
rolb
sbb
jmp
addb
lahf
push
jb
mov
xchg
xchg
int3
and
dec
jmp
fcoml
sub
sahf
mov
pop
xchg
sbb
int3
rolw
push
in
xlat
mov
imul
outsl
push
add
push
xchg
pop
ja
dec
or
push
fcom
push
sbb
fcom
inc
or
les
mov
nop
push
scas
mov
or
adcb
mov
mov
lods
js
sub
pop
outsb
or
mov
adc
lods
cmp
dec
pop
lahf
sub
nop
or
aaa
push
jle
mov
or
push
or
pop
jns
jne
jbe
sbb
je
or
rcrl
ret
cmp
dec
rcll
inc
xor
pop
stos
jmp
lahf
xchg
fwait
hlt
lods
mov
push
or
mov
lcall
and
add
adc
andb
jecxz
push
push
xchg
push
not
sub
enter
xchg
popa
xlat
cltd
adc
inc
sbb
pop
adc
mov
jecxz
mov
inc
ss
inc
and
inc
js
test
adc
adc
mov
adc
xor
and
dec
sbb
cld
xor
and
xchg
leave
fnstsw
mov
mov
mov
sbb
cmp
push
xchg
pop
loope
in
pushf
cmp
xchg
fdivr
mov
sub
add
pop
inc
or
jge
mov
out
push
out
cltd
dec
and
daa
jns
jl
mov
lods
sahf
push
or
sub
xchg
sub
pop
and
mov
xor
mov
mov
pop
or
mov
repnz
or
lods
stos
push
pop
fnsave
enter
stos
pop
test
dec
aas
insb
mov
dec
sahf
pop
and
jb
cmp
push
ret
pop
outsl
xor
out
and
pushf
dec
push
and
push
adc
pop
push
push
repz
push
aam
imul
stc
xchg
cmp
orl
pop
jne
adcl
add
dec
nop
shrb
fidivs
adc
or
pusha
pop
jmp
xor
repz
lods
xchg
or
cli
dec
or
or
adc
lret
mov
adc
fndisi(8087
clc
cs
outsl
mov
sbb
adc
mov
mov
mov
call
ja
fcmove
js
push
out
add
inc
das
dec
sbb
adc
sbb
dec
pop
push
push
add
shlb
or
mov
push
cmpsb
mov
shll
imulb
and
addr16
cmp
xor
xchg
add
xchg
test
loop
cmp
sbb
repnz
cmpl
fadds
xor
xchg
xor
jb
fcmovnu
dec
lret
push
or
pop
sub
cmp
mov
xor
je
xor
cmp
jae
adc
jg
sahf
das
pop
out
pop
cmp
fucom
in
ljmp
in
test
pop
or
add
inc
movsl
pop
js
decb
mov
sub
aas
int
push
fnstcw
outsb
jb
dec
cmpsl
xchg
add
mov
lea
push
mov
push
and
outsl
adc
dec
xchg
dec
sub
pop
cmp
or
pusha
mov
add
pop
cwtl
or
cmp
and
ds
pop
adc
dec
std
or
jnp
push
bound
mov
sahf
pop
xchg
push
js
dec
and
or
jne
test
xor
test
push
popf
daa
aad
pop
pop
and
dec
cld
xchg
pop
loope
adc
movsl
pushf
push
sbb
xor
push
popf
or
push
cmpsb
outsl
lcall
loopne
mov
in
aas
xchg
nop
sub
lods
aas
iret
or
or
or
test
xchg
push
add
pop
dec
cltd
out
mov
dec
adc
fincstp
push
cmp
push
lods
sub
dec
push
cmpsb
pop
fxch
push
aas
jp
popf
push
push
jmp
mov
sub
cmpsl
xor
clc
push
lods
adc
lods
mov
insb
xchg
xor
xchg
jno
fcomi
sbb
sbb
cmpsl
xchg
jle
arpl
or
adc
div
cmpsl
or
in
ljmp
cmp
mov
popf
push
test
lret
inc
add
mov
xchg
sbb
or
sub
push
push
pushf
cmp
movsl
orl
push
add
xor
shl
ljmp
add
push
pop
sbb
lock
jmp
mov
test
inc
andl
pusha
sbb
repnz
jg
xor
ljmp
das
jecxz
je
add
push
aam
ss
mov
mov
lds
sub
xor
dec
pop
xor
aas
inc
iret
pop
pop
es
pop
out
cmp
xor
repz
rcll
movsl
sbb
cmp
fs
push
or
dec
int3
cwtl
mov
icebp
rolb
iret
sar
hlt
fsts
in
decl
push
cmp
cli
arpl
jp
sahf
inc
mov
fistpl
lahf
mov
les
inc
pop
mov
jp
add
inc
pop
fs
lcall
pop
sbb
out
aam
mov
cmp
or
in
mov
xchg
push
inc
and
jge
mov
in
adc
fdivs
lods
sbb
adc
dec
test
add
addl
sbb
inc
cmp
or
outsl
divl
xchg
test
dec
sub
sahf
add
insb
mov
lods
lock
test
outsl
lods
aaa
pop
pop
iret
adc
adc
xchg
jl
xor
imul
in
and
mov
pop
into
loop
adc
out
mov
pusha
fiadds
push
mov
inc
in
ljmp
iret
sbb
int
js
sbb
repnz
mov
imul
push
enter
sbb
add
sbb
bound
mov
jae
adc
icebp
imul
add
ficoml
push
pop
push
push
sbb
and
add
mov
cmp
pushf
je
decl
repnz
leave
inc
pop
xor
push
and
or
movlps
adc
fistps
in
faddl
xchg
pop
dec
in
xrelease
pushf
mov
int
rcll
cltd
fldl
adc
xor
movsb
sbb
imul
xor
imul
daa
rcrb
ret
inc
loopne
inc
shll
popa
push
fstpt
je
icebp
xor
push
sub
mov
aaa
push
mov
push
mov
fldcw
cmp
loope
pop
inc
loopne
add
cmp
add
adc
mov
sub
jnp
jae
push
outsl
cmc
ss
push
out
aam
push
sbb
loope
or
aaa
sub
adc
jp
dec
xor
aaa
jb
jecxz
pop
in
pop
xchg
cmpsb
mov
fstpl
testl
adcl
pop
stos
push
dec
addr16
push
mov
dec
mov
xchg
dec
sbb
shlb
jb
js
mov
mov
jae
cmp
push
jo
dec
scas
clc
mov
mov
sub
popf
push
pop
push
hlt
or
jmp
in
aas
sahf
mov
or
icebp
pushf
insl
adc
or
aam
pop
cmp
push
dec
ds
pop
dec
sbb
addl
push
test
add
ljmp
notl
push
jecxz
jbe
loopne
shrb
or
add
dec
cmc
or
xor
shrb
lret
xchg
pop
out
ret
adc
mov
notl
ret
fidivl
rolw
and
cwtl
cs
dec
jecxz
cli
sub
pop
mov
push
test
jno
or
mov
or
inc
inc
cmp
sub
pop
dec
pop
clc
mov
mov
dec
lahf
jbe
pop
adc
scas
fstl
pushf
dec
xchg
faddl
sbb
sbb
clc
popf
push
sub
imul
push
push
lods
or
mov
inc
movsl
repz
popa
movsb
mov
pop
mov
pop
add
adc
cli
sbb
adc
xor
out
adc
and
inc
inc
sub
ja
ficoml
pop
fucom
mov
add
popl
aad
pop
dec
mov
adc
cmp
mov
lds
gs
stos
test
daa
stos
jne
stos
mov
lock
jl
or
pop
push
mov
or
out
sbb
test
push
and
adc
xor
aas
mov
lds
sahf
sub
jo
cmp
cmp
clc
mov
xor
push
mov
inc
pop
sbb
xor
xchg
inc
pop
pop
cmpsb
pop
cs
push
fcoml
xchg
sub
push
mov
jmp
ror
adc
push
adc
push
out
xchg
and
in
outsl
adc
and
xchg
leave
in
xor
mov
push
test
pop
je
or
lcall
mov
mov
dec
xor
cmp
orl
or
pushf
sbb
insl
or
pop
mov
fsts
push
adc
jecxz
xor
add
inc
pop
fwait
sbb
pusha
lods
dec
xchg
pop
pushf
cwtl
or
enter
adc
fsubrl
mov
jns
sbb
je
aas
in
daa
adc
shrl
rcrb
inc
push
push
inc
jnp
fbstp
inc
lcall
xchg
jg
xchg
out
out
inc
movsl
hlt
daa
and
adc
flds
inc
dec
push
mov
mov
xchg
adc
inc
fsubrs
push
xchg
out
or
adc
or
pop
pop
sti
xchg
imul
dec
lret
cmpsl
ja
pop
xor
dec
stos
push
out
xchg
enter
cmpsl
push
lods
mov
fimuls
imul
mov
and
pop
inc
xor
mov
xor
cld
pop
xor
and
cmp
fdivs
dec
dec
push
add
imul
push
push
lcall
loopne
add
insl
or
mov
inc
push
ret
pop
sbb
int3
inc
pusha
push
pop
lahf
inc
in
cmp
push
hlt
xchg
sbb
mov
lods
lret
cmc
shll
inc
sub
xchg
add
xor
stc
mov
sub
dec
xchg
xchg
nop
lret
or
sub
mov
cwtl
es
lahf
arpl
cmp
dec
aam
les
push
icebp
loop,pn
in
mulb
out
imul
jnp
xor
xor
aad
aas
lret
mov
out
lock
cltd
cwtl
xchg
cmc
js
xchg
inc
xor
xor
in
push
data16
pusha
fs
loop
pop
cmp
adc
cmpsl
pop
dec
xchg
push
in
mov
loope
ficoms
or
mov
fimull
imul
push
sarb
push
pop
jp
mov
test
cmpsb
outsl
adc
adc
sub
jmp
bound
lcall
xchg
ss
imul
pushf
add
sbb
cs
movsl
xchg
pop
add
aad
int3
jnp
adc
dec
xchg
inc
sub
shrl
xchg
outsl
jo
or
dec
push
fbstp
jg
and
jge
pop
adc
sbb
es
jns
xchg
cld
into
fildll
or
mov
lcall
jo
mov
icebp
mov
xor
sbb
xchg
dec
xor
pop
xchg
jbe
in
xchg
pop
xchg
adc
je
push
lret
ud2
pop
xchg
outsb
dec
add
push
xchg
dec
push
add
fnclex
gs
mov
dec
pop
mov
call
sub
fsts
sub
or
push
sub
sahf
fwait
push
and
pop
fldenv
push
outsl
int3
inc
pop
dec
push
inc
in
mov
adc
sbb
cwtl
repz
test
xchg
sub
scas
insb
clc
adc
inc
inc
xchg
je
ss
pop
nop
dec
xchg
inc
out
sbb
ss
and
ds
sbb
cmp
xchg
cmp
inc
inc
push
add
xchg
icebp
and
xor
and
loopne
cmp
ds
inc
jge
iret
pop
cmp
mov
adc
sbb
pop
filds
adc
and
fs
add
lds
je
and
dec
push
sbb
inc
addr16
into
ss
icebp
pop
xchg
push
xchg
sbb
outsl
fldcw
add
inc
sub
sbb
or
addr16
push
push
insb
test
xor
flds
push
pop
push
orl
adc
jp
shr
mov
sub
pop
cltd
inc
push
mov
or
mov
lahf
and
fsubrs
repz
inc
adc
sbb
add
jb
jne
and
xchg
or
clc
lret
xor
sbb
push
or
aas
cmp
add
mov
js
loop
mov
cmp
test
or
pop
add
push
cmp
movsl
sub
mov
pop
jne
mov
push
cmp
cmp
jg
repnz
push
mov
addr16
mov
repz
mov
mov
pop
mov
addr16
lahf
pop
cmp
mov
hlt
popf
pop
mov
sbb
and
stc
call
sbb
xor
push
insb
push
adc
push
nop
icebp
ss
xchg
aas
stos
and
mov
inc
mov
jo
xor
and
std
fdivrp
dec
adc
xchg
add
or
adc
sbb
outsl
cmc
addr16
mov
or
call
adc
pop
in
or
inc
add
jmp
mov
mov
or
pop
mov
lods
xor
ds
mov
jns
inc
cltd
movsl
fs
in
mov
mov
mov
xchg
sub
loope
add
push
mov
fisubrl
repz
js
mov
or
ds
or
lret
sbb
std
mov
add
jmp
clc
ror
push
in
lahf
addr16
push
xchg
outsb
lret
dec
je
fwait
inc
fsubrs
xor
sub
gs
xchg
jne
jae
arpl
and
shlb
or
mov
xor
and
adc
and
xchg
push
lds
xchg
pop
adc
and
mov
loopne
ss
cmpsl
xor
aam
out
test
cld
rcll
leave
jge
imull
loop
dec
sahf
sbb
stos
and
loope
pop
ljmp
and
or
push
mov
xchg
gs
xor
fs
out
inc
js
mov
push
xorl
add
outsl
cmpb
lret
pusha
xor
orb
das
in
push
pop
add
dec
sub
daa
push
insb
das
insb
je
mov
dec
sbb
mov
sti
sbb
js
cmp
dec
lret
xor
mov
cmp
sbb
add
sbb
lahf
in
sbb
xchg
add
or
mov
lds
sbb
ret
js
in
xchg
mov
repnz
jl
mov
mov
outsl
xorb
mov
adc
test
dec
cmpsl
cmp
sub
in
cld
and
push
out
or
adc
cmp
push
cmp
hlt
fadds
aaa
lret
jne
sub
adc
sbb
xor
and
loop
imulb
or
push
pop
or
cmp
jecxz
push
iret
add
fcompl
sub
mov
and
push
loopne
add
loope
insb
cltd
shll
in
adc
in
mov
shrb
mov
pop
or
or
sbb
mov
jne
rorl
pop
loopne
nop
jmp
mov
pop
adc
icebp
cmp
xchg
xchg
xchg
pop
xor
ret
cmpsl
push
nop
fldenv
xchg
dec
andl
push
out
mov
sub
add
or
das
and
test
pop
cmpl
movsb
sbb
adc
ss
add
in
stos
movsb
aas
xchg
lods
push
or
test
adc
push
cmp
sub
fwait
cmp
imul
pop
push
adc
inc
mov
sarb
ljmp
cmpsb
jp
xchg
xchg
add
fwait
dec
add
or
setl
imul
es
or
add
ud2
or
pop
inc
mov
movsb
pop
frstor
sbb
push
out
push
xor
lea
icebp
outsb
mov
mov
clc
push
push
dec
push
in
cmp
mov
ds
pop
and
dec
cld
or
leave
test
sub
jnp
xor
pop
and
imul
test
sbb
pop
jecxz
push
pop
xor
fwait
bound
outsb
adc
or
push
jnp
jmp
out
mull
hlt
xchg
pop
rcrl
sbbl
mov
outsl
push
cmp
or
int
mov
xor
faddp
or
outsl
sbb
pop
or
mov
popa
adc
cmp
push
lahf
repz
push
mov
sub
mov
sbb
mov
add
mov
fdivp
cmp
add
or
xchg
outsb
and
ud0
fisubs
lcall
push
jne
xor
sub
or
lcall
in
repnz
dec
or
sub
adc
imul
xchg
xchg
sbb
pop
push
test
leave
pop
sub
shll
mov
jmp
mov
add
stos
xor
adc
adc
movsb
adc
dec
and
xchg
movsl
ss
repnz
js
adc
adc
xor
pop
cmp
mov
pop
fsub
adc
push
test
or
xchg
jb
cmc
call
xor
ds
or
xor
xor
orl
mov
bound
xchg
loope
add
fwait
mov
adc
out
push
outsb
sbb
loop
pop
sbb
or
bnd
inc
jo,pt
cltd
inc
js
lods
cmc
and
loope
les
pop
jecxz
aas
arpl
test
into
xchg
jecxz
jg
outsb
clc
or
imulb
orl
mov
mov
pop
adc
cwtl
pop
sbb
adc
sbb
mov
and
pop
xchg
or
aas
mov
pop
inc
imul
sbb
test
mov
nop
add
orb
movsl
mov
mov
xchg
test
gs
das
sbb
cmc
push
pushf
and
mov
aaa
insb
dec
leave
xor
sbb
xor
sub
in
jmp
inc
dec
shlb
popf
adc
loop
jle
adc
inc
jae
sbb
int
aas
loop
jl
aam
xchg
out
out
mov
aas
icebp
insl
ljmp
sub
dec
insb
out
xchg
enter
push
lea
lods
xchg
fsub
movsl
mov
repnz
dec
mov
add
xor
sbb
cmp
inc
ret
mov
sarb
sbb
negl
add
xor
mov
mov
add
sub
or
add
dec
loop
cmpsl
lods
loope
or
pop
inc
lock
punpcklbw
push
push
cld
push
mov
loope
xor
loopne
pusha
movl
inc
sbb
sbb
lock
mov
pusha
add
pop
mov
mov
sbb
dec
test
je
repnz
icebp
and
test
je
xchg
mov
ss
lahf
repz
push
cld
pslld
xchg
mov
mov
pop
cmp
or
fmuls
insb
out
xcrypt-cbc
cmpsl
adc
push
adc
cmp
jp
mov
lcall
out
cmc
in
push
push
outsl
jmp
je
insb
or
xchg
ret
ss
shll
aaa
ret
leave
enter
pop
sbb
lret
loop
pusha
negl
cmp
cmpsl
xlat
ret
dec
lock
or
fisubs
out
stos
stos
nop
and
ret
xor
scas
stos
mov
imul
loope
and
xor
mov
mov
push
mov
jmp
add
or
nop
sub
aam
into
fcomp
fs
xor
xchg
or
pop
jns
xchg
jb
cld
and
pop
dec
inc
sti
out
add
and
sbb
outsl
pushf
mov
mov
movsl
pop
pop
xorb
pop
cmp
stc
scas
inc
lock
and
fistpll
mov
mov
jle
adc
test
pop
and
repnz
outsl
or
mov
ret
pop
cmpsb
or
add
inc
clc
std
aas
or
pop
adc
into
out
jno
xchg
dec
movsb
sbb
sub
repnz
cli
pop
ret
cld
xor
sbb
xchg
sbb
push
adc
adc
push
xor
push
outsl
fdivrl
mov
inc
es
mov
add
xchg
adc
ret
dec
cmp
and
push
je
adc
ss
sub
dec
xor
dec
pop
cmp
insl
push
jb
push
les
stos
xchg
movsb
lods
sbbb
push
mov
icebp
and
loop
cmp
push
scas
xchg
shlb
std
pop
imul
mov
mov
xor
xchg
adc
pushf
push
fistpl
jmp
or
ds
stc
xorb
aas
outsl
fisubrs
lock
sbb
and
mov
dec
mov
and
lods
js
mov
popa
test
sbb
fndisi(8087
pop
push
out
push
in
push
mov
out
xchg
out
stc
dec
pop
test
out
fstpl
dec
pop
aad
dec
dec
push
aaa
inc
inc
mov
and
push
cmp
sub
sbb
push
lret
sbb
mov
jg
sub
jp
enter
adc
sti
xchg
adc
xor
out
nop
mov
mov
pop
xchg
xor
inc
cmp
sub
sub
cmpsb
or
add
shlb
ffree
sbb
jmp
mull
sti
push
adc
fbstp
mov
dec
cmp
add
popa
cmpb
adc
pushf
cwtl
fiaddl
adc
jne
clc
mov
inc
into
add
lret
loop
dec
xchg
divb
and
into
or
lret
jp
ss
shrl
and
pop
fs
push
cmp
xor
icebp
push
sbb
jno
jecxz
adc
mov
or
push
sub
add
mov
cli
adc
or
dec
xor
push
das
or
lret
les
movsb
and
aad
ss
jmp
in
and
xchg
rol
sbbl
hlt
xlat
icebp
xchg
js
inc
mov
out
icebp
fmuls
cmpsb
cmc
fsts
sbb
push
cmp
clc
aad
fdivs
add
imul
les
xor
xor
pop
jo
and
aas
icebp
and
pop
or
cmpsl
icebp
mov
mov
add
inc
adc
sbb
shll
ficoms
dec
jmp
rcll
xchg
mov
inc
fld
push
sbb
out
mov
push
adc
scas
pop
push
push
inc
jb
and
and
movsb
lods
pushf
adc
pop
test
shll
repnz
xor
in
and
dec
push
mov
icebp
imul
xchg
popf
adc
inc
jmp
movsb
xor
into
js
pop
cmp
xchg
or
mov
aaa
shrb
stos
xor
dec
pop
jecxz
gs
test
xchg
add
popa
and
add
bound
sbb
cmp
add
push
xchg
sbb
xchg
int3
push
rclb
out
mov
addr16
push
xchg
xchg
fstl
or
outsl
xor
inc
sbb
int
mov
dec
cmpsl
mov
push
pop
pushf
or
xlat
sub
imull
xchg
add
xor
fiaddl
push
xchg
pop
add
outsl
cmpsl
pop
fstpl
in
pop
sbb
cmpsb
ret
jbe
out
int3
push
xchg
mov
and
and
push
jae
pop
sbb
cltd
lock
dec
inc
push
dec
sub
ret
pop
mov
cmp
out
negl
and
pop
inc
je
subb
pop
pushf
inc
fadds
mov
mov
pop
sbb
shl
cmpb
and
lds
cmc
ja
dec
sbb
pop
push
test
roll
daa
insb
push
je
das
cld
cmp
insb
out
xchg
push
dec
cltd
add
aas
adc
loopne
mov
je
push
sbb
cmc
fistpl
mov
mov
or
mov
adc
xor
out
aaa
and
sarb
inc
sub
add
sahf
push
orb
inc
dec
or
inc
insb
adc
fsubr
sub
subl
lock
rolb
or
pop
ds
ljmp
ja
cmp
adc
and
xor
dec
push
dec
sbb
cwtl
sbb
push
pop
dec
sbb
mov
and
or
ds
stos
mov
nop
aad
cwtl
cs
xchg
push
and
and
gs
dec
lcall
or
xchg
sub
mov
xchg
insb
sbb
js
xchg
jl
lret
jno
pop
je
pushf
cwtl
sbb
add
ljmp
adc
or
sbb
clc
into
fstps
xchg
dec
cwtl
cld
pop
addl
and
fcom
fnstsw
int
fcompl
mov
jne
adc
add
fs
sbb
aam
sbb
sbb
ret
sti
push
or
cmp
xor
in
push
jo
or
sub
sub
pop
and
adc
sarl
sbb
xor
jl
js
add
sbb
xchg
sbb
inc
sti
aaa
cmp
add
pop
dec
push
in
jp
push
jnp
pushf
fsubp
add
xchg
daa
inc
fisubs
sbb
inc
push
stc
popf
into
idivb
dec
xlat
cld
push
xchg
push
lcall
addb
lods
add
fldt
fsubs
and
push
or
mov
aaa
cmp
mov
or
xchg
fiadds
outsl
sahf
lds
mov
into
lds
imul
or
xchg
xor
je
fnclex
lcall
dec
xor
and
imulb
jecxz
pusha
push
pusha
scas
in
inc
sbb
shll
outsb
xchg
test
jb
mov
inc
and
mov
xlat
xchg
or
int3
lds
fbld
dec
ss
cmp
out
popa
and
hlt
mov
or
in
push
shrb
lods
mov
sbbl
in
sub
movsb
jge
test
mov
jl
ss
rclb
or
xchg
mov
shlb
mov
pop
into
mov
sbb
push
lahf
fsubrs
es
xchg
jp
xor
imull
mov
push
lahf
dec
mov
in
cltd
add
cwtl
pop
push
xor
out
outsl
lret
leave
push
clc
movsl
or
and
gs
cwtl
popf
lcall
or
fimuls
push
outsl
xor
rorl
inc
fwait
push
pop
aaa
cmpsb
adc
lretw
gs
mov
mov
mov
or
sbb
sbb
fucomip
jecxz
pop
lahf
stos
adc
cmp
pop
xchg
and
and
imulb
addr16
lret
hlt
unpcklps
pcmpgtw
push
pusha
jecxz
pop
xor
aam
xchg
pop
aad
shlb
inc
sbb
ljmp
outsl
cmp
popf
xchg
ljmp
cli
and
stos
mov
mov
mov
or
xor
xchg
jae
out
pop
lcall
pop
imull
int
mov
inc
adc
xchg
inc
dec
cmpb
int
or
sahf
jecxz
shl
mov
sbb
lods
mov
and
or
sbb
jmp
push
push
mov
repz
and
cwtl
sub
loop
rcrb
lcall
imul
sub
aas
gs
orb
mov
or
push
popa
push
jecxz
addr16
popa
scas
cmpb
jmp
enter
mov
pop
sbb
push
outsl
jmp
pop
ds
push
add
cld
push
sub
inc
out
push
lahf
jae
mov
adc
hlt
jo
or
in
cmp
jno
test
and
adc
mov
jbe
xchg
push
mov
and
dec
add
jns
cmc
insb
mov
scas
push
cwtd
jp
cwtl
dec
sbb
inc
call
mov
or
mov
loopne
ret
dec
jae
push
xchg
cmpsl
push
pop
jo
call
adc
iret
xchg
sbb
out
sbb
dec
xchg
and
push
std
movsb
or
and
js
dec
in
mov
fistpl
cmpsl
ss
push
cltd
push
adc
push
sub
and
test
or
fcomip
mov
mov
xor
mov
loopne
icebp
or
cmc
push
pusha
mov
sbb
cld
mov
push
ja
push
pop
mov
add
mov
xor
fsts
inc
xchg
inc
pusha
sub
mov
frstor
dec
mov
mov
enter
enter
nop
add
or
into
xchg
adc
jp
cltd
and
clc
lret
out
lahf
cld
inc
inc
xacquire
faddl
push
gs
fsubrl
clc
cmc
repz
imul
adc
sub
in
mov
mov
pop
or
jp
xor
pop
push
adc
adc
ret
jbe
add
push
ja
push
in
jg
sub
outsb
fbstp
or
fsubl
outsl
inc
or
inc
sahf
test
and
dec
push
mov
orl
sbb
jl
scas
sbb
inc
lret
inc
mov
jg
pop
pop
pop
testl
lcall
cmp
xchg
sbb
out
ret
xchg
xchg
ret
fiadds
subl
inc
sbb
push
outsl
stos
cmp
dec
fdivr
mov
stos
pushf
adc
outsl
fs
and
inc
in
fbstp
add
jo
pop
repz
loopne
cmp
ds
push
es
dec
push
mov
mov
loope
lods
sub
nop
fistl
or
setl
es
sbb
mov
faddp
pop
push
pop
cmp
mov
jmp
sub
scas
dec
pusha
sub
xchg
mov
xchg
loop
and
xchg
popa
pop
xlat
push
sub
add
dec
ret
mov
fwait
test
negl
lods
jns
aas
jp
adc
pusha
insb
push
bound
cmp
push
mov
mov
adc
pop
push
pop
and
and
insb
dec
and
push
outsb
jnp
pop
loopne
pop
push
dec
push
or
jl
pop
mov
jne
jmp
fsts
cmp
jno
or
dec
outsb
cmc
xchg
xor
pop
out
xchg
inc
fstpl
bnd
shl
xor
sub
repnz
push
loope
sub
addr16
lcall
xor
and
fs
xor
mov
mov
pop
mov
mov
shlb
mov
mov
mov
dec
clc
test
adc
insb
js
out
or
mov
push
in
mov
iret
cli
or
outsb
mov
out
push
adc
insl
mov
cli
xchg
lock
mov
push
roll
incb
pop
cmp
adc
hlt
push
sub
icebp
push
cltd
loope
sbb
jle
adc
or
data16
popf
mov
into
jmp
push
aaa
or
dec
sbb
jbe
jg
lahf
fmull
arpl
or
std
pop
sub
or
addb
sbb
mov
push
gs
pop
icebp
fninit
adc
cmp
mov
mov
mov
mov
xchg
outsl
xchg
and
jp
adc
mov
sub
hlt
push
sbb
lret
pop
pop
sbb
inc
xchg
lret
ret
add
dec
xchg
push
push
dec
enter
and
push
test
outsl
pop
pushf
adc
lds
test
icebp
adc
push
out
push
std
jecxz
mov
cmp
pop
cs
or
sub
or
in
int3
lahf
shl
nop
push
xchg
push
push
xchg
in
cmp
lea
push
xchg
int
nop
cltd
adc
imul
mov
aaa
push
jnp
push
jbe
jl
xchg
adc
cmpl
or
cmp
and
push
sub
adc
ss
pop
jmp
sbb
pop
fwait
out
push
data16
jge
fcmovbe
mov
xchg
imul
pop
pushf
outsl
push
dec
mov
and
xchg
pop
js
out
pusha
jmp
addr16
push
or
mov
cltd
mov
addb
testb
xchg
cwtl
dec
and
inc
xor
and
push
je
mov
mov
cmp
dec
icebp
add
xor
pop
pop
jbe
pop
incb
in
xchg
push
sub
lods
mov
shlb
outsb
or
cld
loop
pop
push
or
jecxz
xchg
pop
pop
xchg
or
push
test
ss
dec
pop
jle
cs
pushf
dec
je
sbb
xchg
movsb
imul
test
pop
insb
xchg
xchg
dec
repz
jbe
mov
mov
aam
jle
add
sbb
out
and
jecxz
mov
sub
adc
adc
xchg
or
add
loopne
repz
mov
fdivr
xchg
es
xchg
addr16
dec
lock
jle
icebp
add
push
les
stos
data16
ret
lahf
sub
dec
mov
adc
sbb
pop
hlt
pusha
jae
icebp
imul
ktestw
lret
movsl
adc
push
icebp
sbb
push
movsl
cmpsl
ret
out
loop
fistpl
push
les
cmp
adc
loope
sarb
pop
or
imul
cmp
in
add
out
lahf
dec
dec
lods
dec
test
dec
mov
cmp
pusha
xchg
scas
jbe
dec
xor
lret
xor
sub
lea
mov
or
insl
xor
push
in
push
test
test
in
les
pop
push
outsl
in
data16
or
xor
mov
mov
add
cmp
stc
pop
in
cmp
mov
push
inc
mov
cmp
or
out
lret
and
scas
stc
mov
cmp
inc
test
arpl
sti
add
xor
jmp
and
xchg
les
pop
scas
sub
daa
pop
pop
repz
and
or
xor
fidivs
arpl
shll
roll
adc
lsl
jno
aas
into
lret
and
sub
mov
push
cld
movsb
pop
cli
pop
add
movsb
lods
jae
shll
and
sahf
jno
loopnew
mov
push
mov
mov
cli
inc
or
pop
pop
mov
orb
loop
jle
in
fldt
lahf
push
xchg
pusha
pop
int
mov
and
mov
push
gs
iret
inc
fmull
add
mov
jnp
and
inc
leave
scas
xchg
adc
add
push
fisubs
sub
cmp
xor
cmp
push
ds
outsl
int3
push
push
test
arpl
idivb
sub
push
pop
sub
push
push
roll
pop
pop
mov
loope
adc
cli
mov
xor
push
je
mov
pop
mov
xor
or
je
loop
cs
xchg
lahf
test
int
mov
in
aaa
and
fcoms
pop
sub
bound
xor
push
into
mov
push
sbb
shl
xor
mov
das
out
mov
dec
jmp
lret
cmpsb
cmp
or
je
shrl
loop
popa
sti
or
inc
add
test
jbe
sub
push
adc
pop
pop
pop
or
nop
cli
outsl
test
xchg
mov
dec
mov
les
aas
and
and
insl
test
cmp
sub
and
inc
xchg
jge
iret
orl
pushf
and
and
out
push
xor
mov
addl
adc
lret
jns
jo
jnp
ja
pop
pop
adcl
dec
push
xor
movsl
rolb
aaa
and
pop
push
in
sbb
pop
out
aad
cld
and
jmp
jmp
cmp
jmp
pushf
push
dec
adc
inc
add
dec
ret
inc
lret
add
jb
sbb
mov
movsb
stc
sbb
sahf
lcall
movsl
cmp
xchg
jecxz
dec
mov
sub
std
or
adc
push
mov
xor
movsl
add
sbb
pushf
adc
pop
or
insb
cmc
or
xor
cmpsb
push
sub
or
jecxz
lret
push
data16
or
outsl
xchg
mov
repnz
outsb
or
cmp
out
mov
hlt
adc
icebp
dec
dec
xor
cmp
pop
mov
push
fnstsw
push
ja
pop
xchg
mov
lahf
xor
in
mov
lock
sub
neg
pushf
pop
movsl
xchg
dec
push
dec
jb
or
dec
cmc
das
stos
mov
and
into
mov
fidivs
jle
imul
xchg
aaa
mov
and
bound
add
sbb
xchg
dec
sub
out
test
push
loope
mov
inc
mov
int
in
adc
mov
sbb
sbb
scas
fadds
add
push
and
inc
out
mov
adc
xchg
cli
sti
or
dec
mov
cld
jp
pop
cmc
mov
cmp
imull
sub
xor
lods
fiadds
sbb
hlt
adc
sbbb
push
xchg
leave
arpl
fucomip
xor
jo
mov
sahf
xor
push
jecxz
sbb
sbb
xchg
idivb
cs
and
std
push
in
adc
push
xor
pushf
sbb
mov
mov
lods
mov
sbbb
cmp
pop
mov
scas
js
fnsave
mov
cmp
stos
mov
push
es
ljmp
xor
push
add
je
inc
adc
roll
je
or
cmp
or
or
adc
js
adc
add
sbb
jb
sahf
addb
adc
out
pop
adcl
imul
stc
imul
jg
jns
xor
sub
inc
mov
fcoml
sbb
adc
and
xchg
icebp
in
add
fcoml
sbb
cmp
mov
mov
subb
rcrb
sub
out
test
repnz
push
adc
xor
test
and
loope
xor
jae
rorl
icebp
out
dec
xor
xchg
int3
scas
or
stc
jmp
mov
sbb
mov
xbegin
or
mov
xchg
or
or
adc
pushf
or
jle
and
add
push
nop
pop
sub
outsb
addb
loope
mov
xchg
inc
dec
and
test
mov
ficomps
in
cmp
arpl
push
jb
je
inc
jno
loopne
jae
dec
pop
push
mov
sub
dec
cmc
pop
pop
xchg
lea
mov
inc
into
dec
push
sbb
sbb
mov
or
dec
aam
int
imul
adc
push
xor
cld
sub
cwtl
cwtl
pop
mov
fwait
sbb
sbb
pop
xchg
sbb
sbb
sbb
sbb
pop
sbb
out
add
and
aam
push
push
rcll
or
inc
push
shl
xlat
push
shll
xchg
in
jmp
xor
clc
cmc
shr
xchg
js
flds
adc
sti
mov
mov
jae
or
jo
out
call
mov
cld
mov
xor
mov
int3
mov
push
xor
mov
or
inc
sar
rorl
mov
sbb
pop
inc
int3
mov
and
adc
mov
mov
nop
add
imull
rolb
jge
push
out
dec
jmp
out
cmc
mov
lahf
jge
fiaddl
adc
sbb
or
push
pushf
add
or
int3
dec
sbb
xor
and
fsave
pop
cli
outsl
cltd
pusha
pop
dec
std
xor
lahf
mov
inc
in
jle
sub
std
adc
cwtl
xchg
xor
fptan
dec
cmpsl
ds
sub
cmp
xor
and
sahf
pop
hlt
xor
js
out
sub
mov
adc
cmp
int3
sbb
cli
sub
or
lock
inc
fsubrl
fsubrs
dec
out
inc
push
adc
ljmp
mov
cmp
inc
bound
xor
cmp
push
adc
and
pop
add
cwtl
out
or
or
sub
loope
or
dec
adc
push
xor
inc
adc
cltd
and
and
mov
mov
sub
xchg
cld
insb
imul
lods
sub
movsb
js
cmpsb
ret
testb
les
xor
rcll
mov
adc
or
or
push
jae
or
je
stos
pusha
gs
fwait
adc
sub
fsts
scas
push
push
mov
xchg
adc
pop
xlat
in
xor
dec
xor
add
pop
push
lret
dec
cmp
mov
xchg
dec
add
inc
add
inc
add
mov
dec
push
outsb
out
stos
test
jmp
lret
add
movsl
je
popl
pop
iret
xchg
push
or
xchg
sbb
adc
add
add
or
jno
scas
xchg
and
aaa
sahf
sub
sub
sbb
add
pop
push
bound
sbb
inc
gs
adc
dec
lods
ljmp
in
mov
mov
mov
push
or
xchg
cmp
push
xchg
push
mov
mov
xor
mov
movsb
xchg
stos
jl
ljmp
fucom
push
dec
fidivl
mov
push
push
inc
add
mov
or
outsl
or
out
inc
es
jae
sbb
dec
pop
dec
push
mov
clc
add
mov
xor
arpl
inc
adc
push
inc
dec
add
fistl
cmp
push
mov
adc
adc
icebp
mov
pop
jne
repz
outsl
xor
or
inc
pushf
mov
in
sbb
sbb
sbb
pop
sbb
adc
adc
or
xor
aad
hlt
lahf
roll
cmpsb
jecxz
adc
cmp
call
jecxz
push
shll
mov
push
pop
lea
pop
or
dec
and
sub
das
js
jl,pt
pop
add
out
adc
jle
mov
lds
jp
adc
pop
lds
outsl
cmp
adc
jecxz
bswap
cwtl
push
pusha
mov
push
mov
cmp
cli
pop
in
jns
or
inc
lret
or
xchg
addl
ret
lds
fwait
lods
sub
fdivrl
dec
sbb
sbb
rcrl
mov
cmp
add
sbb
xor
ficoms
sub
pop
shll
or
xor
or
push
dec
pop
addb
cmpsb
test
fimull
jae
test
jg
xchg
mov
pop
cmp
cmp
xor
dec
scas
lcall
mov
add
jg
jg
or
and
sbb
je
xor
inc
jecxz
push
add
push
sub
jle
push
ret
and
push
add
and
inc
ret
dec
adc
fcomip
mov
mov
das
fimuls
jb
imul
lahf
rorl
or
ret
mov
repz
lret
add
testl
add
add
movsb
int3
fidivrl
cmp
inc
sahf
imul
jg
repnz
cmp
repz
js
add
aam
iret
and
jle
pop
dec
sub
daa
xor
dec
add
or
fcmovne
hlt
xor
pop
pop
add
arpl
lods
push
loope
inc
inc
xchg
cmp
push
out
push
dec
push
cmp
or
inc
cmp
add
or
xor
mov
mov
aas
scas
push
xor
xor
fistps
repz
enter
out
js
add
mov
popa
mov
xor
pop
dec
add
adc
sahf
add
and
fisubrl
or
inc
dec
jecxz
push
push
icebp
jp
test
or
leave
dec
out
lahf
pop
push
xchg
pop
pop
cltd
cmp
stos
mov
and
mov
and
lods
in
adc
sarl
mov
xchg
sbb
mov
inc
xor
sub
mov
imul
dec
mov
subl
sbb
jle
es
dec
and
lds
inc
lret
jae
xor
cs
fisttpl
inc
pushf
adc
xor
ret
sti
cmp
mov
je
dec
xor
cld
xchg
scas
fstps
xor
sbb
or
or
pmullw
sbb
dec
lret
sub
pop
add
adc
push
sbb
sub
mov
inc
dec
push
cld
add
stos
or
loopne
sub
dec
pop
pop
cld
les
aad
cld
fisubrs
nop
add
cmp
cmp
ret
fcompl
lahf
and
rolb
xchg
mov
fldl
mov
jle
aaa
test
repnz
push
imul
aad
inc
xor
mov
push
cmp
adc
or
sbb
adc
inc
dec
aam
repnz
dec
sub
add
insb
or
add
adc
je
adc
add
or
push
hlt
loopne
lods
adc
outsl
add
test
mov
pusha
jbe
xchg
dec
les
or
jnp
push
and
push
pop
adcb
loopne
and
add
sbb
add
or
adc
repz
sbb
lret
stc
xchg
inc
xor
pop
sbb
xchg
pop
jne
push
les
xor
push
sbb
ficoms
shrb
ficompl
add
sbb
or
fsubp
lret
xor
out
repnz
jae
popf
jbe
jb
lret
data16
out
cwtl
cmp
pop
push
or
cs
addr16
pop
jo
adc
or
lock
cmp
fcompl
jl
mov
lcall
and
dec
sub
sbb
mov
xor
ljmp
dec
sbb
adc
adc
xor
xchg
mov
add
pop
lea
and
xchg
cmp
or
mov
in
dec
sbb
and
aaa
lahf
lret
pushf
adc
js
push
movsb
sub
push
and
and
pusha
fsubl
aaa
dec
add
rcll
push
or
inc
dec
add
fimull
adc
outsb
jne
movb
jmp
outsl
cmp
ret
or
pop
dec
push
lret
ss
js
push
or
mov
push
adc
add
sbb
cli
xchg
pop
enter
out
xchg
lret
lret
or
cli
inc
movsl
push
xor
in
jae
push
stc
fwait
mov
add
dec
mov
or
push
mov
cmp
mov
mov
pop
inc
cmp
lret
xor
adc
xchg
lret
pop
xor
outsl
pop
sbb
jecxz
xlat
sub
ficompl
add
xor
lret
xor
fyl2x
sub
push
aas
mov
ja
lock
data16
sbb
dec
shll
sarl
cmp
add
adc
test
mov
sarb
stos
dec
fcoms
jnp
cltd
sbb
lods
jp
xor
dec
jmp
inc
ret
or
pop
js
sbb
js
sbb
mov
jl
insb
pusha
push
pop
lahf
cmp
clc
and
hlt
or
cli
or
fistl
scas
jb
and
repz
inc
andb
rcrl
ljmp
sbb
in
cld
nop
lret
xchg
xor
iret
xor
sub
inc
adc
in
repnz
jae
cmpsb
pop
orl
cmp
mov
push
mov
test
dec
les
popf
jmp
or
or
mov
test
sbb
xor
fwait
push
pop
pop
pop
adc
cld
idivl
xor
mov
in
ficompl
js
imul
pop
in
sbb
pusha
pop
xchg
inc
sbb
enter
dec
xor
ficomps
outsb
out
fidivrl
std
ds
pop
sbb
dec
jle
cmpsl
dec
jle
sub
add
xchg
aaa
adc
insb
cmp
push
loop
xor
out
orb
pop
sbb
fidivrs
shlb
out
nop
daa
pushf
push
or
mov
mov
inc
mov
mov
lcall
rorl
pop
enter
pop
stos
or
mov
or
and
bound
cwtl
rcrb
inc
xchg
cwtl
sbb
pushf
sbb
jl
mov
adc
xor
or
adc
aam
fsubrs
fidivl
fstpl
adc
movsb
scas
into
fs
xchg
xchg
adcb
push
cmpsb
adc
or
dec
jae
dec
adc
or
shl
popf
pop
add
insb
mov
and
insb
xor
push
mov
fwait
adc
pop
pop
lock
xchg
ret
mov
push
es
jge
rolb
xchg
push
shll
sub
ret
add
xor
push
in
mov
jl
flds
cld
sbb
mov
in
idiv
mov
call
jb
dec
mov
inc
push
mov
stos
jmp
lods
popf
rcrb
jbe
lods
dec
inc
mov
cld
cmc
pop
fistl
jne
aas
jae
outsl
imul
sub
jne
stos
pop
aas
and
stos
stos
and
pusha
scas
dec
je
cwtl
fstps
jo
pushf
xchg
push
test
mov
push
divl
gs
in
xchg
sub
enter
cld
into
pop
xor
js
out
xchg
das
or
and
push
mul
push
adc
pushf
cmp
push
sub
shlb
cmp
sub
or
cld
xor
cmp
popf
adc
cwtl
pop
fs
pop
xor
lret
scas
jo
cwtl
insb
ficompl
push
iret
jecxz
mov
call
mov
cmpsl
mov
in
aam
les
pop
and
adcb
out
cmpsl
fwait
arpl
and
outsb
sbb
cmp
leave
pop
cmp
mov
adc
inc
inc
push
mov
xor
popa
rorl
dec
mov
cmp
push
cmp
gs
cwtl
pop
outsb
pop
xor
pop
and
cmp
jl
add
dec
jns
test
adc
pop
cmp
aas
add
scas
lcall
adc
fisubs
ss
fsts
repz
divb
sbb
out
inc
xchg
pop
pushf
jae
dec
rcrb
arpl
xchg
mov
lea
fsubp
fstpl
rolb
sub
mov
fdivs
js
inc
or
push
jo
jecxz
xor
pop
xchg
cld
leave
fbstp
cmpsb
mov
int3
inc
movsb
push
inc
fstpl
fmull
testl
sub
rclb
arpl
cmp
sahf
mov
mov
and
mov
cltd
cmp
jo
sbb
pop
jl
sbb
pop
add
std
cmc
sub
push
cmp
iret
push
xchg
and
cmp
jle
jmp
adc
fldl
notl
dec
dec
jbe
movsl
je
dec
je
in
push
dec
lock
mov
into
popa
fsubs
icebp
cltd
aad
cli
sbb
out
subl
dec
popf
aas
in
clc
mov
cld
hlt
fnstsw
dec
jbe
push
lock
xor
jno
or
pusha
sarb
ljmp
mov
dec
cltd
ja
sbb
pop
mov
out
rclb
mov
imul
mov
das
mov
or
push
mov
pop
stos
adc
mov
das
xor
arpl
add
leave
sbb
lahf
pushf
add
out
xchg
cmc
outsl
adc
test
cs
scas
icebp
jo
mov
in
cld
xor
xorl
lods
push
add
mov
lahf
pop
pop
roll
outsl
xor
inc
shrb
dec
out
adc
icebp
div
and
xchg
xchg
jg
out
or
or
ret
ret
mov
jae
push
pop
movsb
xchg
gs
lret
xchg
inc
inc
movsb
dec
dec
subb
or
test
and
roll
dec
adcl
mov
sub
es
sub
sbb
or
dec
mov
pushf
cmp
or
xchg
test
insb
cwtl
mov
es
jp
mov
pop
dec
je
sbb
fs
push
clc
add
jle
pusha
lds
jg
and
inc
fnstenv
lock
sub
adc
sbb
int3
xchg
cwtl
addl
in
clc
lods
repz
dec
push
sbb
nop
sub
or
inc
out
jb
mov
es
dec
add
js
bound
xchg
adc
insb
add
inc
sbb
jmp
pusha
sbb
outsl
sbb
pop
mov
pop
add
or
jg
sub
fstl
push
sub
xor
xchg
hlt
addb
push
jo
popf
inc
jl
cmp
or
jb
dec
dec
loopne
jg
fcmovbe
mov
or
ret
pop
adc
sbb
push
dec
dec
popf
mov
mov
push
mov
sahf
add
adc
push
push
dec
xchg
lods
ret
daa
and
jl
in
sub
pop
mov
sbb
roll
push
movsl
sbb
fimull
imul
bound
shr
mov
sbb
mov
add
outsb
push
inc
leave
push
push
cmp
cwtl
in
mov
aas
adc
xchg
mov
sbb
sub
ficompl
cmp
pop
mov
dec
pop
xchg
lock
and
cld
xor
mov
out
fcomps
add
jo
adc
xchg
push
sti
xchg
or
ficomps
cmp
mov
pop
stos
pop
xor
aaa
mov
enter
sahf
cmp
xor
fisubl
cld
ss
aas
jb
push
mov
pushf
xchg
mov
inc
cmpsb
cmp
mov
pop
mov
rorb
pop
push
sbb
ficoml
cld
inc
lahf
push
dec
ljmp
icebp
pop
call
jnp
lahf
push
cmpxchg
sub
js
aam
and
pop
mov
xor
push
mov
test
sub
pop
xor
paddb
insl
mov
inc
pop
mov
cmp
cwtl
mov
xor
rcrl
pop
nop
push
dec
pusha
popa
and
sub
popf
sbb
jmp
pop
cmp
nop
insl
outsl
push
adc
pushf
icebp
or
or
mov
jb
out
dec
or
pop
inc
jmp
and
test
out
dec
cwtl
scas
inc
data16
and
fisubrl
adc
sub
pop
out
adcl
movsb
dec
jp
cmp
mov
adc
xchg
xchg
lretw
dec
dec
sub
andl
lret
js
fiaddl
outsb
and
lods
dec
add
fldl
pop
inc
sbb
cld
lret
push
cmc
mov
out
xor
out
pop
dec
push
stos
inc
dec
jecxz
pop
fwait
ljmp
adc
pop
cld
jl
dec
add
in
fs
jbe
cld
or
push
or
movsb
pushf
sbb
adc
or
push
hlt
mov
inc
cld
xlat
pop
mov
lahf
outsl
mov
mov
ja
push
xor
xchg
sub
fldl
outsl
or
inc
inc
mov
fucom
mov
dec
xor
js
dec
adc
les
cwtl
or
xor
pop
sarl
roll
push
je
movsl
popa
fwait
add
xor
add
sub
and
int
fimull
sbb
push
das
mov
mov
dec
ds
mov
add
xchg
test
sub
push
pusha
movsb
inc
push
orb
ljmp
push
sub
adc
push
call
sub
dec
jge
pmuludq
in
dec
mov
imul
or
mov
pop
pop
jb
int3
mov
andl
sbb
movsl
fstpl
stos
jns
cmc
ficoml
cld
jne
mov
adc
cli
adc
dec
je
out
insl
hlt
push
jecxz
xor
in
xchg
push
imul
stos
inc
sbb
dec
out
jo
fmulp
or
lahf
je
sti
xor
fwait
mov
test
adc
push
nop
pop
icebp
pop
cmp
aas
sbb
inc
pop
xor
push
adc
push
inc
jle
jp
bndldx
dec
ja
inc
add
cmp
imul
addr16
dec
loope
pop
jecxz
xor
in
sahf
mov
sahf
pop
pop
push
arpl
xchg
rorl
and
cmp
int
push
xchg
add
cli
sbb
pop
test
mov
je
xchg
or
push
aaa
hlt
dec
dec
dec
mov
xchg
sbb
jmp
sbb
stc
xchg
push
in
inc
dec
jmp
ds
dec
ret
int
jbe
lock
push
aaa
dec
ja
push
out
inc
pop
test
xlat
je
stos
mov
mov
cld
pop
push
xchg
cmpsb
aas
call
pop
add
movsb
mov
cld
cltd
mov
movsl
pop
icebp
sbb
push
dec
add
dec
and
jp
push
in
mov
idivb
cmpsl
outsl
pop
xor
std
sbb
push
push
dec
sub
es
push
stos
rcrl
push
inc
cltd
popa
movsl
push
js
pop
cltd
and
pop
or
daa
push
aas
and
inc
and
push
xor
lret
sbb
imul
pop
mov
add
lock
adc
add
shrb
or
in
iret
pop
xor
sub
adc
add
mov
xlat
jb
xor
cmp
or
dec
push
mov
fsub
cmp
ss
popf
rcrl
push
dec
inc
imul
pop
andl
mov
ljmp
mov
push
sub
inc
adc
repnz
mov
cmp
mov
adc
shlb
lods
dec
lret
test
movsb
sbb
inc
inc
or
fsts
mov
enter
adc
jmp
nop
lods
mov
outsl
push
cmpl
push
mov
sbb
mov
push
sub
pop
ud2
hlt
mov
push
jb
sar
push
idivl
adc
dec
push
and
pop
rolb
daa
xchg
cmp
adc
mov
push
orps
call
into
mov
das
and
jg
xchg
jg
scas
cmp
or
adc
jl
dec
out
dec
sub
sbb
push
mov
rcl
cmp
dec
sbb
jmp
shll
add
aam
lret
outsl
cmp
or
push
lret
cmp
push
pop
repnz
pop
xchg
in
js
inc
pop
mov
or
adc
hlt
jle
lcall
sbb
ds
out
fpatan
jb
push
lahf
push
int
pop
xchg
pop
pop
cmp
out
fistps
push
mov
dec
mov
cmc
shl
jl
jl
cld
mov
dec
data16
or
inc
pop
testb
bound
inc
mov
lcall
add
pop
jae
xchg
loop
xchg
sarb
outsl
sbb
add
ds
pop
mov
out
push
les
or
pop
adc
dec
clc
stos
loope
sbb
fadds
cli
jmp
rorb
repz
leave
sbb
push
rcll
negl
ss
mov
dec
repz
hlt
loope
adc
fsubrs
sub
push
arpl
push
aas
lods
xchg
adc
gs
mov
mov
or
push
pushf
je
jns
shl
push
adc
sti
jge
and
adc
push
cld
jne
mov
inc
push
or
int3
xor
sbb
jecxz
add
pusha
fcoml
es
aam
call
int3
icebp
stos
insl
iret
jmp
cltd
cli
or
fs
aad
mov
jmp
add
sub
or
dec
into
adc
jl
les
es
lahf
mov
mov
xchg
add
out
inc
mov
pop
hlt
lea
enter
xor
outsl
adc
and
xor
stc
sbbl
cmp
cs
idivb
or
cmp
popf
pop
sbb
mov
or
push
xchg
adc
leave
push
add
or
dec
fdivp
lret
cmp
aam
sti
mov
sub
into
jo
fwait
roll
fs
sbb
jl
lahf
adc
cld
imul
je
in
dec
inc
cmc
add
dec
jl
enter
les
mov
test
push
sbb
sbb
xchg
mov
inc
test
punpcklwd
aad
pushf
ss
or
or
adc
mov
es
lahf
fsts
mov
dec
fdivl
adc
pushf
push
push
xrelease
xchg
test
shr
jb
daa
fcmovu
jno
shlb
mov
pop
iret
leave
mov
fs
andb
sahf
push
mov
loop
hlt
inc
mov
cltd
cld
pop
dec
sbb
and
push
mov
mov
push
adc
mov
into
xlat
or
fdivrs
pop
icebp
dec
in
shrl
xor
xor
outsl
icebp
dec
xchg
ds
lods
inc
fidivrl
cmp
inc
sbb
cmp
dec
addr16
je
and
arpl
xor
clc
cmpsb
mov
sub
sbb
fs
aad
jbe
sbb
lea
mov
dec
pop
or
sbb
adc
sbb
push
mov
stc
xchg
js
cmp
xchg
cmp
ds
sbb
nop
mov
pop
daa
xchg
das
test
aas
or
sbb
inc
lahf
dec
push
je
adc
xchg
push
sub
pushf
push
inc
andl
mov
xlat
sub
es
ret
add
arpl
inc
adc
rorl
mov
fs
test
jmp
fstpl
mov
lds
aad
xchg
shl
cmpsl
xchg
push
pop
loopne
adc
stos
jl
pop
xor
add
cld
sub
adc
nop
addr16
adc
xchg
pusha
xchg
cmp
mov
mov
sahf
cmp
mov
mov
cwtl
stc
aas
jo
movsb
xchg
insb
fwait
jb
xor
fmuls
cmp
xchg
jnp
cwtl
sbb
pop
adc
mov
dec
arpl
push
ljmp
xor
popa
jecxz
push
mov
sbbl
mov
xor
jl
mov
xchg
sbb
bound
insl
cmp
sub
sub
outsl
cmp
icebp
or
movsl
sbb
mov
pop
xchg
push
sbb
push
cld
lods
out
js
sbb
or
or
push
cltd
add
push
in
ret
pop
push
dec
jmp
jp
cltd
loope
lahf
sub
in
sub
sub
pop
cwtl
adc
sbb
pop
call
sbb
or
adc
pop
xchg
jno
lahf
mov
jbe
dec
loopne
sbb
shl
ret
pop
xchg
push
and
inc
clc
dec
cld
dec
cmpb
sub
fwait
push
dec
cld
mov
xor
lea
mov
inc
sub
jnp
movsb
out
dec
dec
fcoms
xor
mov
fsubrs
xor
repz
adc
mov
push
cwtl
mov
test
mov
sbb
push
aad
pusha
fisubrs
es
std
out
mov
js
loop
pop
xchg
pop
sbb
add
in
loopne
aaa
push
mov
inc
inc
jecxz
jae
fs
rcrb
xor
xor
icebp
inc
sbb
xchg
fwait
lock
cli
scas
and
fstpt
out
dec
inc
cmpsl
push
test
xchg
mov
inc
enter
pop
inc
mov
xchg
cmp
pop
cmp
jns
mov
test
cld
iret
inc
ljmp
lds
xchg
fsubp
ljmp
sub
mov
jg
cmp
or
xorb
dec
inc
rolb
cld
loope
je
push
pushl
pop
out
bound
sbb
cltd
cmp
push
sub
add
jp
dec
pop
push
cmp
out
faddp
fs
cld
imul
sub
push
sub
movsb
sbb
ljmp
or
jb
rolb
fs
rcll
shrb
xor
push
adcb
popf
dec
pop
clc
pop
shlb
daa
dec
call
xor
push
mov
cmc
inc
mov
xor
pop
or
adc
push
dec
dec
sbb
pop
xor
xor
lock
or
sbb
cmp
and
aaa
jl
sbb
repnz
ss
mov
ja
cmp
mov
or
sub
imul
ficoml
popf
call
dec
out
pop
cmp
pop
jg
dec
push
out
add
xchg
jb
cwtl
into
nop
jmp
and
cmp
jecxz
lcall
push
xchg
jb
mov
or
hlt
sub
jne
cmpsl
testl
xor
add
in
dec
ljmp
stos
mov
fisubl
cmp
lds
add
sub
int
cmp
ficoms
add
adc
mov
lock
add
adc
mov
pop
nop
inc
imul
mov
sti
fiaddl
xor
dec
movsl
enter
mov
ficoml
adc
and
inc
jbe
adc
mov
cmp
jmp
sbbb
pop
fcmovnb
jg
xor
fs
stos
lds
data16
fsubs
mov
adc
xchg
sbb
cwtl
maxps
adc
cmp
loope
and
xchg
or
cld
stc
pop
jp
or
dec
hlt
or
fldl
arpl
adc
mov
mov
cld
jle
mov
cmpsb
dec
scas
in
mov
fxch
adc
jp
sbb
cmpsb
test
xchg
fsts
xor
push
into
pop
in
lock
scas
adc
cmp
or
dec
and
int
mov
movsl
ds
add
adc
daa
sbb
sbb
mov
jae
push
push
adc
lods
cmp
jmp
and
popf
add
push
enter
xchg
mov
jecxz
xchg
lock
andl
sbb
jno
in
movsb
adc
push
adc
jne
push
push
push
lahf
fisubl
sub
xchg
hlt
pop
xchg
mov
cmp
cld
mov
mov
add
jle
xchg
sbb
mov
push
mov
ficompl
fildl
or
jg
out
mov
ret
popf
outsl
js
fwait
cli
outsl
add
sbb
ficoml
sub
movhps
insl
in
push
mov
sub
add
stos
jl
ja
mov
sbb
aas
adc
adc
pop
or
nop
adc
sbb
insb
enter
jecxz
and
negl
jle
sbb
xor
int
out
inc
mov
dec
jb
xor
adc
xor
mov
fwait
into
adc
mov
fs
out
xor
nop
out
lcall
adc
sbb
sbb
outsl
sub
lods
andl
jle
jmp
xchg
and
nop
aas
or
ja
xor
ss
dec
fisubs
icebp
adc
jg
call
sub
movsl
pop
fs
aad
and
cmovg
adc
sbb
mov
mov
adc
or
add
and
daa
add
inc
mov
xchg
xchg
inc
in
sbb
fnstcw
jae
ja
xor
adcl
adcl
cltd
jno
sbb
and
sahf
push
pop
or
jno
and
ficompl
repz
mov
pop
clc
rcrl
lahf
rol
pop
aam
mull
ret
lret
sti
sub
int3
fcmovnb
and
out
xor
shll
filds
stos
gs
movl
inc
mov
or
adc
mov
mov
add
add
pop
aam
pop
sub
int
dec
pop
cltd
ret
or
inc
dec
nop
movsb
mov
add
xor
jnp
lahf
das
dec
sbb
cltd
lcall
rolb
jns
popa
cld
cli
inc
cmp
add
sbb
sbb
xchg
lds
xchg
cmp
xchg
cmp
add
adc
push
xchg
shll
adc
cmp
mov
hlt
push
out
scas
pop
pop
add
sbb
fldl
cmp
inc
push
addl
repnz
mov
popf
push
stc
dec
hlt
push
ljmp
jb
lret
sbb
lcall
jb
and
inc
add
push
and
daa
push
cmpsb
movsl
fnsave
adc
icebp
jl
fsubrl
mov
mov
lds
mov
shrl
icebp
nop
and
pusha
sbb
rcrb
fucomi
pop
and
lods
adc
sub
or
or
push
icebp
cmc
adcl
cmp
adc
imul
hlt
shrl
push
sbb
cmp
inc
or
aam
adc
inc
jl
pop
shrb
dec
aas
int
rorl
sbb
cmp
fcomi
adc
es
xchg
leave
rcrb
add
or
loop
cmp
sbb
rol
push
sbb
stos
mov
pop
push
push
cwtl
imul
pop
mov
sub
adc
sti
pop
rol
repz
sbb
fs
cld
inc
test
lds
mov
adc
lcall
imul
xor
push
push
and
pop
ret
dec
out
pusha
mov
lock
mov
mov
push
adc
push
rolb
sbb
cld
xchg
push
mov
clc
and
les
movups
xor
ret
jae
stos
inc
adc
loop
int
lret
xor
lea
xchg
fcompl
adc
loopne
and
hlt
aas
rcr
xchg
cmp
adc
lock
cmp
clc
cmp
js
cmp
js
outsl
cmp
mov
daa
dec
orb
sub
mov
dec
dec
adc
adc
sbb
or
pop
out
aas
jo
sbb
mov
pop
pop
mov
xchg
aas
push
inc
jg
sbb
gs
pop
dec
std
or
in
in
mov
add
ds
fnstcw
arpl
fdivrl
imul
or
or
mov
cld
enter
fwait
inc
inc
fimull
xchg
fdivl
dec
mov
outsb
dec
stos
sub
adc
or
dec
cmp
add
adc
xor
fsubrl
inc
or
in
leave
stc
aam
or
dec
dec
loope
aas
in
adc
jge
js
movsl
cld
jns
mov
add
and
xor
cmp
mov
or
cmpsb
xor
dec
or
mov
sub
jae
adc
inc
sub
jo
cmpb
faddl
bound
cmp
rol
mov
pop
mov
movsl
push
lcall
test
add
out
aad
add
leave
shll
inc
or
add
cmovl
inc
repnz
cld
mull
adc
mov
cmp
arpl
sub
dec
sti
fstpl
xchg
sub
aas
fnstenv
push
sbb
rorl
push
outsb
jp
xor
out
imul
pushf
ds
clc
add
jb
mov
sbb
mov
ficompl
jle
jle
cwtl
mov
sahf
mov
adcb
nop
mov
outsb
add
add
fs
inc
xchg
xchg
fldl
or
outsl
ljmp
lret
cmp
fsubrs
adc
gs
mov
in
xchg
xchg
fdivrs
jae
sbb
jmp
cmpsl
xchg
xchg
es
adc
popa
adc
cwtl
and
cmc
ja
inc
add
add
xor
shll
xchg
or
aas
xchg
cmp
fcoms
dec
ficoml
adc
adc
add
pop
imul
je
arpl
dec
cld
mov
lret
mov
push
inc
rclb
out
add
mov
je
jne
xorl
dec
pusha
sub
adc
fistps
mov
in
mov
dec
sub
and
int3
filds
hlt
cmc
push
aam
sbb
rep
and
mov
inc
mov
push
push
push
jl
fs
fnstcw
inc
jl
mov
pop
fdivrs
pop
xor
cwtl
adc
jl
stos
rclb
jl
add
enter
adc
cmp
or
sbbl
xor
pop
nop
jge
fcomps
xchg
aam
pop
or
pop
xor
aas
adc
cmp
aas
lret
je
sub
xor
xchg
loop,pt
add
icebp
mov
scas
sbb
push
addr16
mov
pusha
dec
pop
icebp
pop
sub
pop
add
or
ret
dec
out
push
orl
icebp
push
out
sti
fcomps
sub
sub
cmp
mov
in
or
cld
mov
push
hlt
or
jmp
cmp
data16
mov
stos
sahf
jno
adc
paddb
stos
aam
jbe
ret
outsl
or
inc
ficomps
out
and
push
push
dec
xchg
dec
loop
imul
push
movsl
push
xor
jne
dec
xchg
das
imul
pop
xchg
pop
inc
add
lods
xchg
popa
or
outsl
cs
mov
adc
adc
push
cmp
outsl
and
cmp
or
out
pop
js
mov
cwtl
mov
pop
add
mov
sbb
mov
test
push
sbb
sbb
mull
stos
orb
xchg
and
movsb
sbb
hlt
or
xchg
sbb
inc
pop
jno
cld
movntps
and
cmp
popa
jnp
adc
mov
insb
pushf
test
xor
adc
and
in
xchg
pop
push
jp
adc
out
daa
push
mov
cmp
pop
push
scas
sbb
adc
adc
in
insl
popf
aaa
inc
and
and
pop
mov
lods
sub
lret
nop
add
rol
stos
scas
sarb
cmpsl
cs
rcll
stc
stos
dec
clc
jg
frstors
in
pop
std
sbb
dec
call
aad
loopne
aas
ljmp
pop
lods
or
dec
dec
sti
mov
sub
mov
cmp
pop
pusha
push
xlat
dec
xor
jp
mov
xor
arpl
cmp
aam
cltd
or
test
xchg
in
adc
jbe
je
push
movsb
xor
aas
cmp
sub
in
sbb
pop
sub
inc
or
jbe
pop
lcall
lds
mov
fwait
sub
lahf
stc
loope
stos
and
inc
cmp
stc
outsb
add
pop
adc
mov
hlt
dec
scas
loop
fwait
jb
mov
out
pop
jns
clc
mov
xchg
and
ret
rcrb
mov
outsb
dec
dec
rclb
aas
adc
push
enter
adc
mov
lock
fists
pop
jb
xchg
popa
lods
xchg
cmp
jns
push
pop
mov
and
dec
jle
mov
add
fstpl
jo
lea
push
pop
faddl
push
sub
dec
mov
in
arpl
adc
cltd
xchg
test
fldpi
dec
xor
clc
pop
xchg
pop
xor
fwait
xor
repnz
jecxz
cltd
and
data16
fwait
lock
aad
fdivr
mov
mov
mov
dec
xchg
aad
into
jmp
lahf
rol
cmc
dec
dec
arpl
push
pushf
addr16
and
push
dec
xor
xchg
les
jo
dec
mov
pop
push
push
test
add
cmp
cmp
cmc
cwtl
cmc
mov
clc
xchg
xchg
pop
adc
shll
pushf
cmp
adc
add
jne
enter
pop
adc
lods
push
imul
loopne
or
xorl
mov
cmp
jp
dec
lds
sub
sub
jg
ds
push
cmp
sahf
jp
mov
je
fldt
add
or
cld
adc
adc
repz
mov
icebp
mov
fnsave
js
xor
pop
mov
mov
sbb
xor
ds
add
and
sti
test
mov
subb
mov
inc
inc
int3
in
icebp
out
lods
pop
hlt
pop
cwtl
jnp
aas
mov
jmp
popf
rcrb
xchg
cmp
adc
movsb
outsl
fistpl
js
inc
adc
or
mov
mov
or
cmp
repnz
fsubs
daa
fstps
cld
imul
in
jle
data16
es
push
jne
outsb
shrl
or
outsl
pop
mov
fs
clc
out
cmpsb
jne
lret
adc
inc
jo
mov
clc
dec
adc
push
add
inc
pop
sub
push
and
fwait
in
out
adcb
outsb
and
or
and
jno
clc
push
lcall
fcomip
or
loopne
jnp
xor
out
fs
sbb
repnz
pusha
sub
xchg
dec
leave
inc
scas
pop
enter
or
test
daa
outsb
ja
xor
sub
adc
cmpsl
fidivrs
cmp
mov
aam
xchg
sub
push
xor
mov
jl
movsb
jmp
push
push
push
cmpsl
add
or
add
es
ds
hlt
adc
pop
sbb
add
adc
or
or
sub
xor
pop
adc
sbb
sbbl
rorl
and
cmp
add
and
sbb
and
das
pop
out
daa
or
jb
or
int
loopne
adc
adc
push
dec
inc
pop
inc
jno
dec
xor
icebp
iret
mov
fcmovnu
dec
jb
out
je
in
push
dec
rcll
xor
pop
test
xor
pop
sahf
fisubrl
xchg
fsubs
inc
mov
fisttpl
pop
cltd
add
mov
pop
test
nop
call
nop
mov
faddl
pop
rclb
lahf
fs
mov
sbb
pop
jae
arpl
cld
add
cli
or
fidivs
rorb
test
outsb
sbb
fs
out
or
stos
mov
mov
sbb
and
mov
stc
inc
dec
push
popf
mov
xchg
push
mov
and
sbb
mov
stos
lock
mov
roll
lods
cltd
pop
je
dec
mov
or
rol
inc
push
pop
push
add
pop
pop
ja
xor
xor
js
pop
mov
in
cltd
aas
fisttpl
xor
test
or
test
loop
pop
and
jns
inc
scas
popa
xor
imul
jbe
and
adc
xchg
adc
sbb
aaa
mov
push
cmovnp
lcall
or
fmull
sbb
mov
push
push
jo
cli
push
jno
mov
add
push
jecxz
sysexit
cld
popl
adc
or
push
js
aaa
icebp
lcall
outsb
xchg
aaa
sbb
mov
bound
adc
inc
fidivs
into
lcall
arpl
es
andl
or
push
pop
or
dec
add
mov
xor
std
pop
and
bound
jl
cmp
insb
mov
sbb
mov
cs
add
aad
icebp
popa
adc
xchg
cmp
dec
scas
adc
sbb
adc
push
or
jo
push
lods
push
push
aad
fstpt
inc
outsl
notl
push
cmp
pop
pop
mov
inc
inc
and
adc
sub
pop
add
insl
mov
cs
inc
test
add
scas
hlt
stos
push
jbe
scas
xor
lock
jg
sub
fcompl
pop
scas
jo
jg
add
lret
aad
clc
or
pusha
sahf
jb
adc
movsl
fmuls
mov
cwtl
sub
lret
jp
adc
pop
fdivr
mov
lods
cmp
pop
push
or
cmp
hlt
pop
pop
push
je
cmp
and
jl
jo
push
mov
mov
jp
adc
sub
outsl
sbb
sbb
jno
ljmp
sbb
pop
lea
jae
lods
pop
test
je
sbb
aaa
movsb
lods
lcall
or
sbb
cmp
cli
jb
and
dec
and
mov
xchg
push
pop
loopne
mov
aaa
or
pop
push
sbb
je
je
inc
fdivrs
sbb
jo
mov
add
pop
pop
push
xor
scas
xor
cwtl
cmp
gs
bound
dec
xchg
fcoms
loopne
add
cmpsl
dec
and
outsb
or
add
mov
fwait
cmp
sbb
inc
xchg
jp,pt
cld
mov
pop
xor
movsl
dec
fistpll
ja
mov
mov
lcall
iret
cmp
adc
mov
dec
pop
inc
imul
or
dec
aad
cmp
out
rclb
sub
dec
outsb
inc
sbb
or
in
sub
les
lock
xor
cmp
pop
rolb
flds
jbe
sub
cmpb
out
shrl
sub
and
push
xlat
sbb
push
out
jno
mov
jl
push
and
add
clc
pop
icebp
push
shlb
cld
adc
mov
inc
push
adc
and
push
pop
and
lock
cld
jmp
cmp
jae
icebp
push
out
loopne
or
lods
in
adc
dec
les
mov
adc
jl
xor
ror
orb
outsb
push
cmp
sbb
ljmp
xchg
je
scas
dec
pop
repz
dec
adc
test
mov
ss
inc
pop
ja
sbb
or
pop
pushf
pop
cld
loop
pop
enter
into
sbb
jbe
jecxz
ds
lret
jle
arpl
and
mov
lahf
out
xchg
push
xchg
pop
add
sbb
inc
or
es
inc
jnp
jno
sub
aaa
push
test
add
or
fsubrp
leave
dec
repnz
aaa
dec
call
adc
outsl
out
or
and
and
into
loop
sti
push
add
mov
sbb
jle
in
xlat
xor
mov
outsl
add
cmp
es
sbb
bound
outsl
les
sbb
sti
sahf
stos
sahf
jno,pt
or
loopne
cwtl
lods
jg
push
shll
and
or
hlt
lret
mov
and
mov
jmp
xor
into
cmp
mov
pushf
sahf
and
adc
fisubl
lods
lds
ret
movsb
or
js
pop
adc
sbb
adc
sub
push
and
adc
sbb
out
inc
scas
xor
or
xchg
jnp
cmp
outsl
sbb
xchg
xchg
xor
jnp
jl
sub
adc
sahf
out
adc
jmp
pop
lods
scas
mov
ss
enter
pop
adc
sbb
xor
daa
sub
push
adc
sbb
sbb
cwtl
mov
push
call
and
xchg
jnp
rcrb
jnp
or
outsl
push
and
and
adc
and
fsubl
xor
adc
push
cltd
dec
outsl
aam
push
rcll
xor
or
repz
aas
sahf
in
int
insb
sbb
inc
pop
incb
outsl
jp
mov
adc
jmp
pop
or
add
cwtl
test
ret
adc
je
rorb
push
test
call
and
sub
sbb
sbb
xor
dec
dec
adc
cld
mov
lods
sbb
adc
mov
cmp
cmpsb
aad
adc
push
movsl
inc
call
enter
pushf
in
jae
pushf
mov
xchg
cmp
mov
sbb
or
es
mov
or
fiaddl
pop
lret
push
clc
divb
or
dec
addr16
sbb
in
in
outsb
xchg
or
sbb
fisttpl
adc
add
mov
ljmp
sbb
repz
push
dec
ja
aaa
in
addr16
push
push
dec
jmp
push
mov
xchg
leave
xchg
inc
or
xchg
push
jle
inc
adc
icebp
adc
jle
add
xchg
movsl
negl
or
adc
outsb
sbb
sub
or
jle
adc
adc
sahf
pop
push
dec
and
sub
dec
popf
outsl
sub
loop
jo
scas
push
jg
push
pop
inc
and
in
push
sbb
inc
paddb
iret
cld
cmp
fwait
mov
mov
xor
add
xor
or
inc
mov
add
add
adc
in
les
sub
jnp
pop
in
sub
sbb
hlt
mov
mov
dec
jb
or
mov
mov
nop
push
dec
je
stos
mov
lock
mov
lea
mov
aas
sub
aad
sbb
scas
std
inc
das
cmp
xchg
pop
in
mov
fwait
push
cld
lea
loopne
xlat
mov
pop
or
and
adc
cld
mov
sub
mov
add
and
sub
daa
fwait
fwait
das
pushf
adc
popf
and
hlt
icebp
fisubl
aam
cmp
fcmovnb
je
in
sahf
push
push
dec
pop
loop
xchg
or
xor
jle
std
add
pop
dec
inc
mov
sub
xor
movsb
insb
int
nop
xchg
pop
repnz
add
lret
inc
mov
lock
push
fwait
mov
cmp
inc
push
or
dec
mov
cwtl
cltd
out
subb
sbb
test
mov
fcoml
mov
movsb
js
mov
and
pop
jle
cld
or
inc
mov
addb
adc
lret
dec
push
insl
sbb
sub
test
sbb
aam
sarb
dec
fsubrl
int3
addr16
es
push
push
add
push
icebp
xchg
add
hlt
cmp
cmp
dec
sbb
dec
pop
adc
inc
add
aas
pop
cmpsl
out
push
push
hlt
lret
or
cmpsb
rorb
push
clc
xor
shrb
or
movsb
test
rclb
pop
call
adc
fwait
scas
inc
test
ja
daa
outsb
pop
es
push
outsl
xor
add
les
imul
pop
push
outsb
hlt
das
cmc
inc
rcrl
pusha
in
xor
sbb
popf
icebp
xor
cld
or
and
pop
aam
xchg
xor
lahf
adc
les
outsl
inc
int3
push
lock
pop
push
test
pop
add
sahf
dec
mov
xor
add
fwait
or
in
sub
adc
mov
push
subb
lock
adc
xchg
shl
leave
sbb
adc
rol
pop
lret
or
dec
lahf
push
sbb
neg
mov
in
movb
sbb
cmpsb
sbb
nop
mov
sub
pop
inc
leave
int
insb
cmp
push
popf
mov
fs
cmpsl
pop
jo
xchg
pop
std
test
mov
dec
pop
mov
sub
cld
sbb
jns
or
sub
sub
dec
sbb
pop
je,pt
adc
xor
mov
cmp
cld
loope
dec
sbb
xor
bound
add
or
or
mov
loop
daa
cmp
stos
dec
pop
add
mov
xchg
cld
je
das
mov
jge
fsubs
mov
inc
shlb
mov
push
sbb
imul
inc
sbb
push
jg
iret
jl
xchg
push
push
sbb
pop
mov
push
popa
sub
push
push
cmp
sub
push
or
sbb
js
dec
inc
adc
cltd
push
adc
dec
aam
popa
adc
dec
sahf
push
pop
js
push
fs
inc
sbb
dec
sub
inc
push
inc
ss
lods
je
inc
xchg
xchg
xchg
out
jmp
lahf
cmp
xor
inc
jns
pop
mov
outsb
add
sub
push
fdivrl
outsb
sbb
stos
inc
dec
les
push
test
adc
inc
lock
pusha
add
dec
xchg
test
xor
neg
jb
mov
cmp
pop
nop
push
push
push
movsb
fsubrl
and
ret
and
xor
push
fmuls
hlt
xor
xchg
ljmp
cs
cmpb
fdivs
in
and
jns
fst
cmp
sbb
jns
mov
scas
mov
cmpsb
lret
popf
pop
cld
ret
sbb
xchg
sbb
add
pushaw
dec
lods
sub
movsb
iret
fiadds
sahf
xchg
inc
insl
stos
cli
or
into
movl
dec
cli
lods
lds
data16
imul
sub
xchg
lods
xchg
je
cmpsb
mov
gs
mov
nop
adc
test
or
or
sahf
lods
fisubl
sub
or
add
or
mov
cwtl
xchg
xchg
enter
mov
int3
cmp
add
cwtl
repnz
cld
pop
xchg
sarl
and
and
inc
xlat
cltd
cli
fdivrl
cmp
aas
cmp
push
ljmp
xchg
push
jbe
pop
dec
lock
mov
in
cmp
repz
inc
xor
and
adc
js
jl
mov
mov
scas
mov
sub
pop
or
lcall
stos
ljmp
sub
dec
sub
jne
mov
push
and
dec
xlat
cmp
pop
jnp
xor
das
jmp
mov
and
jb
jns
push
push
stos
popa
cmpsl
mov
xchg
or
push
add
dec
or
xchg
aas
mov
imul
adc
out
aaa
pop
sbb
aam
adc
inc
mov
pop
out
jo
pop
add
cld
ret
sub
ja
lock
ret
xor
lahf
dec
jge
int3
fwait
dec
cld
mov
push
push
cmp
adcl
fidivrs
cli
mov
enter
jns
push
jl
cmp
dec
loopne
cwtl
or
pop
xor
test
arpl
mov
sub
subb
cmpl
pop
mov
xor
fwait
mov
jbe
sti
imul
repnz
out
in
adc
or
dec
push
stc
add
adc
lods
pop
les
repz
push
testb
mov
mov
mov
mov
sub
outsl
inc
dec
mov
fdivr
aam
mov
and
adc
xchg
sub
subl
out
jge
hlt
sbb
push
push
ret
fisttpl
nop
mov
fdivp
mov
lods
lret
imul
sbb
mov
cmp
dec
clc
imul
out
je
jb
orl
sbb
fcoms
incl
pop
sbb
sbb
xor
or
pop
or
cltd
addr16
lods
sbb
mov
jge
stc
xchg
outsb
idivl
arpl
xor
inc
cmpsl
jo
cld
dec
inc
push
js
enter
push
sbb
int
mov
cli
pop
adc
popa
push
or
mov
xchg
jae
ds
or
or
sbb
push
loope
add
icebp
bound
or
sub
xor
sub
jb
cmp
mov
and
aaa
jp
add
jg
add
dec
jmp
stos
and
pop
adc
jno
add
push
test
push
std
sub
cld
fstps
mov
js
cmpl
jge
push
push
lret
js
xchg
push
cwtl
add
push
pusha
ss
shr
adc
push
sbb
pop
aas
pushf
pusha
mov
subl
dec
adc
jns
sarl
insb
mov
hlt
push
inc
call
rcr
and
cltd
lcall
add
out
inc
xor
dec
adc
add
push
add
enter
cmp
xor
iret
xor
dec
aas
or
mov
jge
pop
mov
nop
sub
and
sbb
repnz
adc
loopne
add
dec
mov
lock
stos
out
inc
fwait
mov
stos
inc
sbb
lcall
jmp
jns
dec
fcompl
dec
jl
cmpsl
stos
adc
lock
xor
lcall
sbb
dec
mov
incl
xchg
pop
sarb
rcrb
fcompl
mov
cld
fs
repnz
jo
loopne
fstl
mov
sbb
popf
movsl
repz
mov
sti
clc
adcl
loope
mov
pop
jl
jb
enter
xor
incb
lret
test
xchg
adc
cmp
xchg
pop
add
dec
mov
adcl
addr16
cltd
js
das
hlt
push
fmuls
dec
cwtl
jmp
mov
addl
fcompl
pop
je
js
adc
add
icebp
rorl
mov
rorb
lock
mov
fwait
pop
js
cmp
jmp
mov
mov
xor
ds
sbb
pop
dec
mov
or
mov
fnstenv
cld
cmp
arpl
pop
lea
outsl
ss
push
je
jb
lods
xchg
jl
out
push
pop
push
push
fdivrp
pop
dec
sub
or
push
xor
mov
xor
add
push
inc
ficoms
mov
iret
and
add
ds
rcrb
shl
jno
xor
aad
sub
xchg
mov
jle
movsl
orb
fdivl
cli
adc
outsl
jb
add
cmp
fisttps
sti
sti
push
pop
xor
outsl
icebp
and
out
rcr
xchg
aas
cld
push
adc
iret
enter
test
pop
clc
mov
lea
nop
and
mov
jp
lock
and
jmp
jle
movl
mov
adc
mov
aam
lcall
test
pusha
stos
test
notl
push
pop
stc
pusha
mov
pop
adc
ljmp
push
xor
adc
jb
dec
or
pop
dec
mov
cmp
pushf
les
fldl
sub
pop
xchg
sahf
icebp
adc
mov
scas
adcl
mov
mov
icebp
add
xor
xchg
jae
clc
call
and
add
cmp
and
push
push
mov
adc
push
stos
daa
inc
xorb
pop
pop
add
or
pop
push
sub
adc
push
stc
dec
jo
xchg
push
shrl
pop
lcall
add
push
push
ffree
scas
adc
dec
sbb
packssdw
aas
imul
pop
push
loop
dec
add
aam
outsb
pop
insl
out
imull
sbb
xor
mov
mov
and
jo
mov
xor
or
data16
sbb
test
sbb
cmp
pop
pop
not
xor
loopne
mov
loop
lods
mov
xchg
hlt
nop
xchg
xor
sbb
lcall
dec
or
jbe
dec
pop
cmpsl
stos
inc
loopne
imul
orl
in
sub
enter
or
rcrb
clc
mov
out
in
sub
fsubp
cmp
call
jb
lahf
dec
in
dec
adc
xchg
add
insb
rol
dec
push
ja
pop
inc
cs
push
jae
seto
or
repnz
add
incb
cmpsb
je
pop
ret
jmp
add
and
cmp
jno
sbb
dec
fsin
sub
cmp
es
icebp
or
lret
cmp
push
fiadds
jl
xchg
insl
push
fsubrs
nop
cmp
jns
mov
mov
aam
adc
mov
sub
cmp
xchg
sub
adc
lcall
dec
dec
mov
cmp
mov
les
sub
pop
adc
lods
push
icebp
dec
inc
xor
in
orl
or
stos
les
add
cmp
inc
insl
pusha
mov
xorb
or
adc
adc
mov
mov
psubb
mov
push
cld
rcrl
mov
push
loope
mov
mov
xchg
insl
push
add
cs
loop
xchg
fstpl
adc
popa
push
dec
mov
dec
jle
lret
mov
mov
push
sub
lock
dec
ja
cltd
adc
inc
insb
push
dec
insl
pop
es
jnp
fwait
adc
inc
lods
cmp
outsb
inc
insb
repnz
inc
pop
push
push
loope
loopne
pop
xchg
push
sbb
test
fwait
out
mov
sbb
cwtl
dec
sbb
cltd
adc
out
bound
outsl
adc
inc
sbb
inc
inc
lahf
into
in
popf
cltd
fistpl
and
sbb
cld
dec
cmp
inc
inc
sub
jmp
mov
and
pop
push
in
xchg
mov
notb
mov
jl
jbe
pop
sbb
adc
pop
aad
pop
sub
or
sbb
inc
lcall
std
jle
dec
sbb
pop
add
push
movsl
mov
adc
adc
lcall
xchg
sub
inc
and
test
and
hlt
arpl
sub
in
push
dec
fmul
movsl
rclb
sbb
jns
pop
lea
sbb
rolb
inc
sub
inc
push
test
jmp
xchg
cmp
popa
stos
mov
add
arpl
or
push
cwtl
add
arpl
enter
scas
fmull
jl
mov
loopne
cld
das
and
cltd
es
mov
cmp
repnz
or
daa
xchg
pop
mov
fsubs
sbb
aas
in
daa
jecxz
jb
inc
adc
fimull
adc
dec
ss
and
icebp
inc
adc
gs
adc
fs
ficoml
inc
cli
in
push
jl
xchg
sub
and
repnz
dec
or
shlb
inc
jle
fwait
xchg
scas
mov
lcall
inc
sbb
mov
sbb
push
inc
testb
insl
bound
push
inc
push
fldcw
xor
std
mov
cmpsb
push
sbb
cli
dec
mov
push
inc
xchg
arpl
and
mov
cmpsb
cmp
inc
outsb
push
mov
int
insl
mov
xchg
mov
pop
push
and
inc
push
lock
fwait
std
fistl
fildl
jb
jl
aas
push
into
in
pop
cld
jns
js
cmc
mov
and
fwait
aad
pop
adc
dec
mov
inc
pushf
hlt
jge,pt
sub
icebp
push
call
dec
push
jl
sbb
mov
jle
lea
fs
div
cmpb
mov
pop
add
pushf
cmp
aaa
divb
sbb
test
fiaddl
cmpsl
fldt
push
mov
sbb
adc
jl
negl
push
xchg
out
cmp
jl
fwait
push
icebp
xchg
stos
lea
jmp
mov
pop
jo
fstp
adc
mov
cld
in
xchg
test
xchg
push
sbb
in
lret
dec
cmp
or
fdivl
jne
add
in
cmp
mov
push
jns
pop
sub
cmp
xor
call
leave
xchg
cld
or
and
nop
test
push
test
popf
es
cmp
test
test
push
sbb
jl
xor
cmpsb
mov
push
sub
and
push
push
pushf
pusha
fcompl
std
xchg
fs
xorb
push
mov
jmp
fdivrp
push
cld
pop
sub
or
rcrb
lods
cmp
aas
rclb
dec
cmp
shlb
aas
dec
out
outsb
fstps
inc
jl
jle
or
sbb
jae
pop
arpl
sub
imul
repz
das
mov
inc
shrb
fmuls
pop
je
cld
xor
push
pop
fdivl
data16
or
xchg
dec
sarb
xor
mov
rcrb
mov
adc
pop
test
mov
sbb
sbb
bound
push
fmull
and
nop
push
es
cmc
jbe
lahf
xor
pop
adc
sbb
add
mov
rcll
xor
or
add
adc
iret
scas
cld
loope
or
inc
xchg
mov
test
cmp
dec
xor
dec
rcll
xor
xchg
mov
adc
sahf
aas
sub
or
jmp
and
lods
push
sub
imul
mov
in
int
cmc
sbb
es
scas
push
mov
push
mov
iret
adc
pop
int3
fs
and
jp
dec
lods
mov
or
mov
jl
dec
or
pop
sbb
fsubr
mov
dec
rorl
in
cmp
or
or
xchg
add
dec
pop
fs
pop
push
dec
dec
sti
sbb
xchg
cmp
sbb
imul
dec
jmp
aas
jb
nop
mov
cmc
repz
pusha
pop
dec
je
xor
sbb
push
shrb
mov
push
mov
movsl
add
dec
imul
sub
jl
mov
mov
addb
sub
lods
sarl
push
andb
mov
inc
ljmp
mov
loopne
mov
mov
push
pop
dec
cltd
cmpsb
mov
pop
xor
inc
or
fs
cmpsl
lahf
aam
mov
pop
mov
test
fmull
adcl
aaa
mov
outsl
rcl
clc
outsl
shl
dec
jecxz
cmp
cltd
mov
int3
sbb
rcl
daa
pop
rcll
xchg
sub
aaa
jmp
mov
lods
pop
add
mov
cld
push
push
ret
push
lahf
leave
in
hlt
std
scas
scas
sub
inc
je
adc
sub
hlt
xor
pop
sub
xchg
test
xchg
or
pop
cld
jae
mov
adc
shll
mov
out
xor
scas
nop
test
mov
aas
pop
mov
xchg
xor
adc
lods
aaa
sarb
adc
lods
mov
hlt
shl
je
inc
jno
scas
loopne
xchg
sbb
and
pop
and
xchg
test
and
icebp
out
mov
xchg
dec
or
push
iret
xchg
pop
cwtl
cmp
mov
mov
and
push
sbb
push
sarl
lcall
lahf
sbb
loope
xchg
dec
ss
and
lcall
fbstp
cld
sub
addr16
in
je
add
das
lret
rcll
repz
sbb
dec
jmp
sbb
je
out
enter
jno
pop
pop
data16
xchg
cmp
jbe
cwtl
test
clc
mov
mov
cmp
inc
inc
pop
sbb
aaa
aas
pop
loope
in
pop
mov
pop
cld
xchg
aaa
adc
dec
inc
sub
pop
fildl
mov
push
sub
lret
push
sbb
and
and
push
insl
xchg
add
adc
dec
pop
push
mov
sbb
popf
and
outsb
int
sti
sub
adc
je
jbe
xor
scas
push
adc
popl
inc
sbb
sbb
call
mov
adc
mov
inc
sbb
jae
dec
sub
and
int3
push
xchg
sbb
mov
dec
xchg
sub
aas
stos
cmpsb
push
mov
adc
mov
cmpsb
or
dec
fisubl
dec
inc
mov
add
jecxz
xchg
xchg
and
push
loop
or
dec
loope
xchg
aam
roll
jmp
mov
mov
xor
inc
aaa
stos
jl
or
sbb
sbb
ss
fstps
adc
hlt
push
sbb
adc
push
inc
ret
cld
ret
enter
xor
xorl
pop
push
adc
rcll
lock
jne
adc
icebp
jl
push
enter
dec
mov
inc
inc
xor
dec
xchg
inc
outsl
cmp
cld
lret
pop
cmpsl
ret
mov
js
cli
shl
and
cmp
dec
std
or
movsb
lock
dec
sbb
mov
xor
pop
mov
scas
loopne
xchg
xchg
xchg
imul
adc
dec
and
dec
nop
shll
and
sbb
xchg
dec
jp
add
xchg
iret
mov
push
mov
out
dec
push
repnz
or
or
adcb
or
test
push
addr16
xor
adc
sbb
or
mov
or
lods
mov
loop
jae
fldt
and
lods
xchg
mov
pop
or
or
pop
fcompl
pop
sbb
rcl
add
push
enter
les
cmp
push
call
add
and
bound
push
mov
lret
sti
push
insb
outsb
aas
jl
jg
push
gs
sarb
rorb
push
cmp
scas
mov
add
ljmp
sub
sbb
xchg
push
rclb
lock
push
inc
fs
dec
or
test
fnstcw
cs
stos
leave
ds
pushf
int3
push
mov
xchg
mov
adc
fisttpll
or
loop
cmp
je
sbb
test
xchg
pop
sti
xor
rcrb
pop
divl
cli
js
call
sub
mov
and
inc
dec
js
xchg
cmpsb
jp
cld
stc
mov
pusha
mov
mov
das
sub
cmp
jo
push
add
subl
or
push
mov
inc
pop
rorb
js
inc
mov
inc
inc
aas
mov
iret
mov
xchg
nop
cmp
cld
fwait
cmp
lock
ret
jno
pop
mov
adc
push
mov
fdivl
inc
fildll
and
push
adc
adc
or
jno
sbb
adcl
sub
mov
pop
cli
sbbw
fiaddl
pushf
pop
popf
xchg
fwait
jae
dec
aas
push
dec
les
push
les
dec
push
mov
push
popa
es
iret
mov
aad
sub
inc
xlat
mov
leave
push
int3
xor
orb
pop
push
rcl
sub
cmp
sbb
insb
xor
adc
lret
sbb
xchg
icebp
mov
and
xor
data16
leave
push
adc
sub
icebp
cmp
push
clc
and
push
pop
inc
aad
and
pop
addb
loopne
incb
pop
adc
mov
and
lock
lods
sub
and
sub
mov
sub
sbb
xchg
or
dec
adcl
adc
push
nop
mov
inc
ficoms
cld
into
push
fnstsw
mov
pop
adc
pusha
lods
in
add
sub
sub
hlt
out
int3
sub
or
jge
cmp
or
jge
cmpl
or
loope
pushf
out
out
lcall
pop
mov
psubusw
push
dec
inc
xlat
iret
jmp
mov
cld
xlat
and
lret
dec
popf
push
mov
push
jmp
pop
sbb
dec
jecxz
pop
inc
pushf
int
pop
leave
dec
negb
mov
cmp
push
fmull
push
push
cmpsb
dec
cwtl
sub
mov
pop
xchg
jne
sbb
shrb
xchg
sub
or
and
mov
push
inc
push
addl
popa
pop
add
mov
push
imul
bound
cltd
ret
cs
xchg
cs
lds
pop
and
aas
cld
cmp
adc
sbb
bound
jae
rcrl
dec
xchg
imul
les
push
es
aaa
sub
sbb
xchg
es
loopne
test
inc
xchg
jle
sub
fs
xchg
pop
or
jmp
call
inc
outsl
jle
aaa
sub
dec
test
dec
pop
push
add
push
in
pop
fucom
xchg
mov
push
jbe
and
and
xchg
dec
push
fsubrl
inc
or
int
dec
pop
stos
mov
sbb
mov
push
pop
and
int3
dec
xor
aam
cwtl
pop
aad
xchg
daa
js
enter
adc
pop
lahf
repnz
stc
pop
add
shl
xchg
sbb
dec
jl
gs
fidivl
inc
out
pop
ds
sub
or
or
lcall
pop
sbb
xchg
inc
jne
pop
lea
mov
push
jno
lcall
cld
jg
ret
aaa
dec
push
pop
adc
repz
xor
jae
shll
xchg
sarb
jbe
arpl
cmp
jge
subb
jbe
mov
mov
push
jmp
push
and
sbb
enter
push
push
test
hlt
mov
lods
pop
cwtl
cmp
sub
mov
mov
push
xchg
mov
sub
push
pop
shr
ljmp
loopne
inc
lock
movsl
lcall
pop
sbb
inc
sbb
fidivrl
adc
js
fwait
lock
mov
cmp
mov
inc
adc
enter
cmpl
cmp
sti
sub
and
mov
les
pop
fcompl
cmpsl
jne
insb
jg
xchg
pop
addr16
dec
mov
fcmove
pop
mov
je
jb
rcll
daa
es
adc
fcmovnb
loopnew
adc
test
cld
js
sbb
insl
inc
lods
filds
add
test
xor
adc
push
sbb
add
push
adc
or
dec
in
xorl
add
fcoms
pop
dec
push
lcall
rorl
es
or
sbb
push
paddb
jns
push
push
push
shlb
sbb
mov
or
pop
data16
push
dec
pusha
rorb
clc
xchg
fs
leave
jb
sub
sub
pop
pop
cmp
xor
push
add
fwait
dec
nop
jl
into
push
or
cmp
insb
or
pop
fs
das
or
cwtl
or
jae
orl
jb
sub
dec
add
mov
adc
nop
inc
jb
sbb
scas
outsl
je
fpatan
sbb
rorb
jnp
sub
dec
xchg
jb
sbb
sbb
aam
stc
jae
dec
out
gs
push
es
repz
pop
fdivrs
push
push
push
js
aam
lcall
jae
mov
stc
addr16
roll
add
push
cmp
adc
ss
mov
add
xor
mov
cmp
fnstcw
mov
push
outsb
push
cltd
movsl
icebp
pop
scas
push
fs
sbb
push
lcall
mov
outsl
lcall
xchg
rcr
jge
cmp
push
cld
outsl
movsl
test
cmp
pop
push
les
pop
add
push
jmp
add
cmp
es
pop
push
data16
jnp
sbb
sahf
cmp
sbb
lock
lcallw
cmp
lret
outsb
and
jle
adc
mov
inc
test
in
push
xor
xchg
das
cmpsb
adc
xchg
cmc
xchg
adc
push
cltd
or
mov
mov
inc
icebp
mov
xchg
ja
rolb
scas
sahf
push
insb
int
pop
ds
jmp
push
adc
adc
or
pop
stos
cmp
dec
fldt
or
fsts
add
movsb
dec
add
sub
dec
adc
xchg
push
cmp
mov
push
out
push
push
push
xchg
or
and
cmp
inc
adc
sbb
push
and
inc
int3
aas
add
pushf
scas
xor
inc
fbstp
pop
push
in
fmull
ljmp
add
dec
jnp
repz
sbb
xchg
je
push
outsl
jg
cmp
add
dec
pop
lahf
lret
pop
jmp
add
insl
test
pop
sbb
mov
vmovhps
sbb
sbb
sbb
je
adc
adc
fimuls
pop
or
mov
jno
shll
ds
movsb
icebp
adc
push
aad
mov
pop
mov
stc
repz
push
sti
sbb
imul
mov
dec
aas
sub
sbb
out
int3
insl
adc
jle
xchg
adc
push
inc
aam
lods
scas
loope
xlat
adc
or
xchg
aam
adc
enter
lret
in
lea
sbb
sub
inc
push
jle
pop
xor
cltd
ja
or
push
insb
mov
or
lret
std
jg
adc
in
adc
das
dec
jb,pn
and
outsl
jecxz
test
arpl
sbb
pop
dec
xchg
pop
or
push
loope
and
push
adc
xor
push
mov
jnp
je
and
sub
inc
lahf
ds
in
push
push
xor
popf
dec
mov
add
notb
sar
mov
int
jge
push
ret
xchg
and
mov
cltd
imul
aas
test
xchg
pop
out
inc
lods
pop
and
fdivrl
fbld
cmp
aaa
push
inc
repz
repz
icebp
sub
jo
aaa
xchg
fsubrs
in
jo,pn
out
sub
aaa
fbld
pop
lods
clc
js
xor
pop
pop
and
jp
mov
mov
cmp
bound
mov
mov
shlb
xrelease
and
ljmp
mov
or
pop
xor
jb
lea
jle
push
or
les
dec
and
mov
inc
lods
xchg
sbb
or
cld
sub
movsl
call
outsl
ljmp
clc
add
leave
push
push
inc
fcmovbe
rcrl
out
add
inc
test
loope
add
sbb
pop
icebp
mov
inc
xchg
pop
push
cmp
or
incl
es
sub
or
push
cmp
xlat
or
push
je
hlt
sbb
adc
adc
xchg
inc
and
push
lods
rclb
or
frstor
insl
push
sub
dec
xor
sub
add
inc
in
or
dec
into
mov
pop
pop
mov
pop
in
icebp
pop
xchg
jmp
call
fcompl
icebp
sub
add
inc
mov
inc
sbb
adcl
mov
jbe
add
sbbb
dec
subb
inc
xchg
and
and
inc
addr16
icebp
adc
jge
hlt
dec
xchg
inc
pop
fadds
mull
push
mov
cwtl
inc
int3
fwait
roll
sbb
in
mov
inc
loope
loopne
sub
pop
jno
lds
mov
jp
sub
inc
in
shrl
frndint
push
push
imul
or
pusha
cmpl
scas
mov
pop
addr16
repnz
fs
sbb
mov
xchg
sbb
sub
inc
xor
push
cmp
and
icebp
cmpsb
dec
ret
pop
xchg
movsl
in
fstpt
cld
imul
mov
adc
aad
movsb
add
outsb
xchg
cmp
pop
into
cmpsl
pusha
lea
int3
dec
sbb
mov
mov
negb
mov
pusha
ret
xchg
xchg
dec
test
sbb
fwait
adc
addr16
pop
mov
outsb
push
lahf
mov
sbb
call
out
call
cmp
cmp
push
cld
push
or
insl
sti
xor
mov
das
mov
mov
push
push
push
dec
pop
test
in
push
or
mov
pop
mov
cmp
mov
or
pop
cmc
cmp
adc
push
jno
js
mov
andb
xor
and
push
or
push
push
or
mov
sub
or
sub
push
adc
sub
aad
aas
dec
rcrb
cmpl
dec
adc
dec
sub
mov
int3
cmp
frstor
or
fcmovb
and
imul
clc
out
jno
gs
sahf
sbb
push
repnz
mov
and
dec
rclb
test
or
adc
loopne
test
jecxz
loope
mov
sub
add
mov
in
sbb
adc
push
dec
fstpl
inc
pop
pop
rorb
insl
scas
sub
dec
xor
shrb
sbb
pop
call
enter
adc
ficoml
push
inc
mov
adc
xor
xchg
aaa
mov
pop
mov
into
sub
cmp
mov
jl
adc
jmp
mov
or
cmp
stos
push
mov
mov
in
mov
and
and
and
cmp
adc
test
or
sub
sbb
pop
lahf
daa
add
js
hlt
aaa
dec
xchg
inc
pushf
xchg
dec
dec
in
mov
mov
and
push
mov
cli
dec
add
cli
adc
loop
arpl
fdivr
test
push
mov
push
dec
inc
xor
add
push
repz
out
dec
call
rcll
sbb
cwtl
jmp
sti
or
ljmp
cmp
lahf
or
movsb
movl
cwtl
mov
mov
scas
sbb
inc
dec
push
push
pop
sub
sub
xchg
adc
leave
sbb
pop
sbb
fwait
sub
cmp
loopne
push
mov
sbb
outsb
dec
push
pop
clc
pop
fwait
mov
das
repz
adc
lahf
mov
pop
jbe
inc
xchg
push
mov
adc
sbb
inc
mov
xor
sbb
or
and
inc
dec
push
scas
cmp
ret
push
test
jne
push
cld
mov
repz
inc
fsubrs
lods
js
pop
pop
xchg
push
cld
stos
mov
pop
jo
js
fadds
cmp
cmp
xor
inc
jne
jl
dec
fistl
cld
loop
pop
xchg
cmp
or
movsl
adc
nop
push
sbb
adc
pushl
call
xor
cmp
add
push
lods
pop
sbb
enter
and
xchg
shlb
mov
pop
sahf
sbb
push
adc
pushf
sbb
andb
inc
jecxz
jp
hlt
out
cld
sbb
add
jo
test
data16
or
aam
push
cld
mov
pop
aam
es
jecxz
cmp
adc
sbb
mov
pusha
mov
or
je
in
mov
adc
cmp
push
mov
push
mov
fstps
les
add
mov
aas
pop
add
mov
leave
jbe
jo
stos
pop
insl
aaa
lcall
adc
jp
test
xchg
mov
pushf
sbb
sbb
lea
mov
pushf
sub
sbb
aam
dec
sbb
jmp
nop
push
push
dec
aaa
shlb
dec
dec
repnz
add
in
cld
stos
mov
lahf
mov
sarb
sahf
out
sbb
cld
std
mov
xor
pop
xor
in
mov
sbb
int3
cmp
dec
testb
mov
pushf
les
add
push
sahf
adc
xchg
push
pop
xor
movsl
pop
lcall
repz
adc
movntq
xchg
cmp
mov
cwtl
and
sub
out
dec
sbb
fs
fs
mov
fs
mov
mov
bound
and
cmp
pop
cmp
out
sub
fimull
pop
das
cmp
lea
mov
xchg
pop
roll
inc
outsb
adc
movsb
add
push
icebp
lock
rolb
outsl
push
cmp
les
cld
cwtl
mov
pusha
out
stc
fildll
push
lods
int
cmp
dec
jp
cmp
call
inc
sbb
jg
test
pop
mov
sub
jo
xor
jb
pop
test
leave
js
push
sbb
into
rcll
iret
out
push
xchg
aaa
fmuls
aaa
inc
mov
cltd
cli
aad
fimull
jl
sbb
inc
jo
cld
dec
mov
push
sbb
pop
movsb
pushf
or
push
in
lock
movsb
lcall
fstpl
ret
push
adc
push
cld
cmpsl
inc
ja
dec
stc
mov
or
enter
or
sbb
outsb
xor
lock
sbb
xchg
ret
nop
movsb
xor
movsl
pop
and
pushf
add
loope
ds
arpl
mov
mov
pop
jmpw
repnz
and
xchg
sub
fdivr
mov
mov
add
sbb
sbb
lock
xchg
sar
mov
push
fsubs
push
mov
jp
dec
out
imul
out
ds
pushf
adc
test
imul
scas
out
inc
nop
pop
clc
nop
cmp
mov
nop
xor
xchg
pop
xchg
outsb
lahf
adc
mov
in
adc
mov
cmp
push
les
adc
loope
and
xchg
dec
nop
mov
cmp
inc
call
enter
stos
std
pushf
or
sbb
xor
pop
mov
cmp
push
dec
fmull
stc
mov
imul
je
test
ret
fdivrs
sbb
js
mov
outsb
pusha
sub
mov
mov
sub
cmp
add
mov
pop
adc
sbb
pop
pop
xchg
fwait
mov
push
pop
outsl
cld
jbe
xchg
push
fdivr
dec
mov
dec
adc
pop
jo
push
push
push
push
hlt
or
das
cmp
mov
inc
enter
lock
sbb
xor
in
or
mov
push
adc
pop
ljmp
das
popf
jmp
inc
pop
push
js
mov
ljmp
adc
cwtl
add
mov
push
add
cld
mov
or
xor
out
scas
fcmovu
aad
jnp
scas
mov
push
jae
popf
jg
inc
mov
ss
mov
mov
mov
rcrb
push
pop
jae
mov
sbb
out
or
orb
or
jb
pop
jb
add
shr
adc
xchg
shrb
repnz
insl
and
pop
push
adc
sbbb
or
repz
shlb
pop
push
pop
pop
cmp
in
sbb
xor
ljmp
fidivl
sub
push
jo
cwtl
pop
add
nop
jp
cmp
lahf
pop
mov
popf
arpl
xor
ss
sbb
mov
pushf
or
pusha
jnp
xchg
cmp
sbb
push
or
iret
sbb
or
mov
xchg
pop
mov
jle
xchg
fcoml
loopne
adc
push
mov
or
sahf
pushf
stos
rorl
cmp
mov
or
fsubrl
cli
sbb
xchg
outsl
aam
cmpsl
xor
mov
mov
scas
pop
xor
repz
sbb
lahf
jp
imulb
xchg
pshufw
push
out
pushf
sbb
cmp
push
pop
ss
dec
jbe
icebp
adc
outsl
jne
push
or
pop
in
stos
dec
lea
push
adc
xor
test
mov
push
mov
mov
dec
mov
loop
mov
adc
mov
sbbb
cmp
or
push
dec
scas
sbb
mov
mov
testl
addr16
jb
or
cmp
into
jo
shrb
in
push
dec
ds
mov
or
push
cmp
das
outsl
sub
add
dec
adc
ss
push
lods
movsl
adc
fistpll
cmp
aam
testb
mov
inc
js
add
les
and
xor
addr16
popa
pop
sahf
aaa
cmc
cld
adc
popa
sbb
or
ret
fidivrl
pusha
iret
sub
les
xor
fsub
testl
add
movsb
xchg
or
dec
icebp
adc
clc
ficoms
pop
fsubrs
adc
stc
adcb
xor
inc
xchg
aad
outsl
add
dec
mov
mov
outsl
mov
lods
js,pn
dec
pop
xchg
imul
ds
out
dec
mov
xchg
pushf
inc
mov
sti
sbb
cmp
add
sbb
mov
dec
shlb
jle
and
jne
add
adc
adc
loop
mov
pop
and
ret
or
mov
mov
add
mov
mov
adc
nop
ljmp
xchg
mov
pop
pusha
push
into
popa
pushf
mov
psrad
cltd
fidivl
fmul
push
mov
les
lcall
int3
movsl
cmp
out
add
pop
addl
mov
aas
adc
dec
ss
jbe
int3
push
js
dec
cli
xchg
cmp
push
push
and
pop
cli
fadds
cmp
out
fdivs
xchg
inc
pop
sbb
clc
outsl
lcall
mov
mov
jmp
aas
add
add
mov
add
lret
pop
out
and
sarl
sbb
adc
dec
jmp
movsb
pop
and
push
cmc
xor
sub
push
inc
stos
pop
xor
and
sbb
loop
aad
imul
jmp
aaa
dec
repz
loop
scas
ror
outsb
adc
push
push
and
pop
or
jb
cltd
call
jne
nop
adc
fsts
adc
xchg
cmp
xchg
inc
sbb
push
outsl
jno
sub
int
lock
in
repz
mov
lods
daa
mov
add
add
cli
push
pop
push
add
rcr
pop
push
pop
rcll
sub
or
dec
sbb
stos
lods
fucomip
cmp
pop
or
rorl
scas
or
ret
cltd
xchg
movsl
jmp
cmp
mov
cmpsb
loopne
push
idivl
or
pop
divl
bound
xchg
or
mov
sub
or
cmp
adc
pop
jae
lret
in
sub
aas
ror
jle
or
insl
mov
sbb
into
stc
cmp
add
inc
aad
sbb
mov
xor
cld
sbb
pushl
sbb
repz
jb
push
jmp
rcll
pop
adc
xchg
dec
shlb
mov
sbb
std
out
in
outsb
inc
push
jmp
jecxz
scas
aas
sbb
jb
inc
cltd
mov
mov
push
dec
dec
push
cs
and
pop
jl
push
test
mov
adc
les
iret
sub
inc
sbb
sbb
cmc
jecxz
xchg
nop
scas
jle
push
pop
lods
xor
repz
shl
repnz
das
mov
xor
add
loope
orb
push
sub
mov
add
adc
fdivrs
adc
je
insl
fiaddl
scas
mov
pop
or
pop
lahf
ret
movsl
pop
or
and
divl
lret
mov
mov
push
and
sbb
stos
inc
jb
les
outsl
adc
cmc
pop
mov
push
test
or
pop
or
mov
sub
or
dec
push
dec
ja
and
pusha
cmp
fdivrs
jp
or
notb
cmp
out
push
cltd
rcrb
jo
jb
sbb
jb
add
movsb
sub
orb
insl
out
out
push
les
sub
in
add
scas
ret
jg
cmp
adc
or
cmpl
cld
clc
cli
scas
jbe
iret
imull
jae
fisubrl
mov
pop
xor
les
add
jle
xchg
xor
xchg
movsb
or
sbb
sbb
mov
jae
and
outsb
jp
mov
mov
scas
fs
inc
pop
jb
shll
rcll
and
and
icebp
cmp
xchg
xchg
add
pop
cli
adc
cmp
jecxz
inc
xor
pop
fcomp
mov
inc
aad
sub
cld
movsl
sub
in
mov
mov
sub
adc
mov
loope
adc
lock
jmp
sbb
lds
out
adc
lds
xchg
sbb
test
ds
rcl
sub
adc
mov
dec
push
out
fdivrl
or
fs
xor
push
cmp
add
xchg
jb
jbe
in
adc
push
dec
dec
in
mov
sbb
sbb
cmp
jecxz
decb
fmuls
ja
sub
sar
sub
cwtl
or
fidivl
xor
data16
stos
mov
xchg
les
cltd
cmpsb
rcrl
dec
push
push
cmp
or
xchg
xchg
pop
add
push
movb
or
aas
loope
sbb
cwtl
or
mov
add
or
adc
fidivrl
in
fcmovb
icebp
push
adc
inc
mov
test
inc
xchg
clc
push
rorb
and
movsb
mov
pop
lret
inc
fists
rcll
lcall
sub
mov
adc
lahf
pushf
adc
add
sbb
jmp
cmp
xorb
push
iret
shr
sbb
pushf
push
cld
aaa
mov
or
mov
cmp
push
pop
je
jae
jnp
ja
dec
xor
jnp
or
pop
into
adc
bswap
pop
shlb
imul
push
xchg
lcall
jae
pop
lcall
repnz
inc
outsb
adc
loop
clc
adc
pop
push
daa
and
dec
xor
push
xor
flds
aad
ficoml
mov
mov
ret
pause
jbe
push
fisttpl
push
roll
popa
add
add
mov
inc
call
sub
add
sarl
add
push
clc
ljmp
scas
sub
xchg
push
xor
and
stos
out
fcoml
push
and
setns
sbb
lahf
adc
outsl
adc
in
sbb
xlat
jg
cld
and
mov
xchg
jl
shrl
mov
and
sub
adc
xchg
lods
pop
nop
inc
push
lea
pop
jns
xor
or
in
insl
add
cmpsl
cmp
jl
adc
icebp
sbb
cmp
inc
adc
sub
pop
inc
or
push
mov
or
mov
push
mull
imul
pop
inc
negb
ret
arpl
mov
and
or
and
repz
fsubs
test
sub
pop
dec
xchg
push
cltd
stc
sub
and
sub
push
adc
xchg
pop
sbb
inc
or
mov
adc
jmp
push
cmc
mov
push
sbb
cld
add
mov
insb
mov
xor
mov
aam
sbb
out
inc
jp
pop
rol
loope
cmp
add
cmp
adc
fwait
adc
add
push
rorl
inc
lret
test
adc
adc
xchg
in
adc
pop
or
fisttps
xor
test
inc
mov
and
aam
push
mov
mov
lahf
lret
sbb
push
xchg
inc
mov
pop
push
dec
insb
or
push
and
loopne
cmp
and
fldl
push
adc
setg
mov
jnp
ja
and
sbb
aad
out
icebp
cmp
and
xchg
or
test
inc
icebp
movsl
jno
push
mov
mov
pop
mov
js
inc
push
sbb
idivb
jb
push
cld
push
iret
push
mov
jp
jl
cwtl
outsb
outsl
mov
pop
xor
xor
and
pop
fdivrl
xor
adc
xor
int
jg
inc
daa
adc
xor
rclb
xor
jb
cmp
xchg
mov
add
cmpsb
or
dec
mov
orb
sbb
pushf
or
or
push
outsl
xchg
jo
sub
popf
jnp
loop
sbb
int
stos
fstl
jl
out
xchg
js
adc
rcrl
push
dec
sbb
xchg
xor
pushf
cmpsb
aam
mov
push
orb
adc
imul
push
outsl
cmp
sahf
movsl
jns
adc
out
inc
adc
pop
shlb
push
dec
cmp
adcl
bound
push
leave
mov
jb
inc
push
push
stos
aaa
sbbb
xchg
push
dec
adc
lods
sbb
mov
shl
std
adc
ret
adc
push
inc
fwait
pop
cltd
loope
sub
adc
decb
mov
test
inc
jmp
push
inc
ret
cwtl
inc
jl
sub
les
ds
rcrb
into
mov
adc
and
imul
push
dec
pop
shll
int
jae
loopne
stos
pop
and
stos
cwtl
xchg
add
jl
sbb
ds
fidivrl
js
cmpsl
push
aaa
and
pushf
lret
mov
loopne
int3
insb
ficoms
xor
and
dec
pusha
mov
xor
and
fdivp
out
mov
loop
or
push
or
in
xchg
lock
je
sub
daa
or
pop
jp
xor
aas
pop
cmp
push
mov
cmp
jno
pop
inc
test
jns
cmpsb
rol
mov
test
pusha
and
xchg
das
dec
xor
sub
mov
sbb
bound
std
ss
cld
pop
or
or
ret
add
and
cmp
imul
push
dec
cld
and
xchg
sbb
cltd
faddl
cld
mov
cltd
xchg
lods
xor
mov
mov
out
ljmp
jne
inc
pushl
push
out
outsl
fcoml
adc
in
mov
jecxz
data16
cmp
mov
adc
lret
xchg
repnz
jmp
ss
mov
push
movb
clc
test
push
jne
mov
or
in
pop
sbb
lods
pop
repz
xorl
les
sub
cwtl
dec
push
push
rorl
add
repnz
adc
test
icebp
pop
pusha
mov
ja
push
shll
cmp
rcrl
pop
fimuls
or
out
inc
rcrl
outsl
les
xchg
xor
outsb
je,pt
fmull
fcomi
adc
orl
adc
xorb
sub
xchg
ficoms
adc
imul
or
cld
add
mov
or
lods
fsts
sarl
sbb
ljmp
jne
or
fnsave
scas
repnz
jno
mov
fistpll
sub
jp
cmp
icebp
add
dec
adc
xor
outsl
adc
mov
dec
je
fisttps
jmp
push
push
and
out
xchg
cwtl
or
paddusb
dec
cwtl
out
adc
xchg
lods
shrd
pushf
mov
pop
or
mov
or
ret
decl
aaa
into
lahf
xchg
pop
cmp
addb
and
pop
lods
cmp
and
ljmp
fdivrp
push
mov
or
sbb
adc
or
lahf
popf
mov
push
or
mov
inc
rcl
mov
insl
inc
repz
xor
adc
jge
adc
add
and
dec
adc
dec
xchg
xor
jp
sbb
pushf
xor
cmp
sub
insl
sub
out
mov
data16
daa
jp
xor
out
gs
arpl
js
push
add
ficompl
push
aaa
adc
fdivs
sbb
cli
adc
inc
inc
ret
lods
xor
cld
sbb
outsl
cmp
repz
jmp
jbe
sub
ljmp
jae
pop
add
lods
icebp
ss
in
xor
sbb
push
pop
cltd
jecxz
add
jb
mov
daa
ret
aam
cld
shl
mov
push
sbb
mov
pop
fsubrl
push
push
push
repz
push
pop
in
pop
xchg
fwait
rclb
xchg
rcll
push
pop
inc
push
fidivrl
pop
mov
cld
js
pop
adc
push
mov
pop
adc
mov
pop
ss
stos
jp
cmp
push
rclb
lods
pushf
addb
adc
xor
into
mov
cld
scas
add
sbb
push
pop
cmp
or
pop
loopne
cli
xchg
mov
add
jae
pop
pop
or
imul
sub
lahf
sbb
mov
add
ret
fs
cld
aas
xor
mov
lds
xchg
lds
ja
xor
xor
xor
test
cmpl
adc
sar
in
js
fistpll
loope
popa
adc
outsb
push
sbb
sbb
mov
stos
sub
xchg
int3
lock
adc
jo
outsl
dec
push
push
dec
cmp
push
pop
fs
pushf
inc
daa
repz
xor
xchg
sarb
addb
add
dec
inc
gs
cmp
and
ss
repz
cmp
lods
aaa
xor
cmp
loop
ss
out
sbb
lahf
cmp
push
mov
mov
cld
xor
push
xor
js
icebp
mov
mov
push
mov
xchg
or
cmp
push
dec
xor
add
pusha
out
fistl
clc
xchg
dec
cld
test
xchg
movsl
xor
push
and
cmc
and
bound
fwait
mov
enter
sub
push
lods
fsubrl
movsl
push
lds
int3
pop
fcomi
sbb
js
push
enter
mov
clc
int3
push
test
scas
mov
inc
add
movsb
pusha
lock
jl
adc
xchg
stos
mov
dec
ds
clc
sti
push
add
mov
inc
pop
adc
jno
ret
aam
cmp
jne
enter
cmp
pop
pop
loopne
out
aam
in
and
call
push
dec
cltd
aaa
subb
pop
jle
das
pop
dec
cmp
sti
cmp
or
sub
or
pop
out
fcmove
mov
mov
inc
frndint
ret
mov
repz
std
cltd
das
pop
ljmp
xor
loopne
shl
push
xor
aas
pop
dec
cmp
xchg
inc
dec
adc
cltd
scas
lret
or
fistpll
sar
cli
lods
cmp
fcmovbe
adc
pop
pop
dec
sub
jns
or
pop
pop
xor
jno
or
xor
rorb
ret
shll
int
pop
adc
pop
dec
jle
sub
dec
or
and
jle
ss
jmp
xor
pop
sbb
jecxz
adc
cli
add
cld
dec
sub
cmp
out
cmp
sti
pushl
jnp
mov
repnz
push
loopne
mov
pop
out
xor
jnp
imul
repz
cmp
cmp
cld
push
xor
add
or
aam
sbb
icebp
sub
fldt
cmp
sbb
lret
push
mov
mov
cs
daa
pop
mov
aam
mov
fwait
cli
lahf
add
sbb
outsl
push
adc
push
lods
adc
xchg
rorb
cmp
xor
dec
nop
aas
inc
in
jnp
out
mov
push
test
pop
movsl
fdivl
adc
in
stos
inc
sub
int3
xor
pop
add
push
xchg
pop
jo
push
movsb
negl
dec
dec
sbb
aaa
inc
pop
mov
pop
lods
repz
push
out
pusha
imul
xor
repz
mov
sbb
das
add
pop
ss
out
ficompl
lock
scas
sbb
mov
loopne
mov
fs
or
inc
out
mov
or
add
jbe
mov
sbb
inc
add
dec
imul
jno
jnp
push
cmp
jle
aas
iret
lret
daa
cmp
lahf
pop
xchg
add
aam
es
or
pusha
lds
int
inc
jno
imul
pop
sub
leave
pop
pop
iret
sbb
dec
repz
test
xor
push
pop
loopne
sub
inc
in
lcall
icebp
push
test
das
dec
scas
inc
cs
std
pop
das
pushf
mov
add
loop
loop
push
pop
mov
lock
bound
or
add
pop
pop
ss
jb
cwtl
push
leave
das
or
jae
or
sub
sarl
xor
mov
repz
adc
rcrb
lcall
mov
pop
jno
pop
jno
xchg
std
mov
jns
dec
mov
cwtl
push
stc
ds
movsl
push
test
inc
shl
ret
sbb
out
and
sbb
mov
mov
jge
adcb
lret
xchg
fisttpl
inc
inc
inc
mov
out
push
mov
aam
rolb
mov
push
xchg
push
rorl
mov
outsl
dec
cld
cmp
cmp
or
pop
push
cmp
or
lahf
dec
sub
je
decb
jp
inc
dec
dec
fcoml
or
sbb
es
xchg
xor
inc
pop
push
push
fcompl
cmp
flds
jl
add
jge
out
pop
push
test
jae
out
mov
or
rclb
arpl
loope
mov
addr16
roll
add
adc
or
jmp
gs
inc
pop
sarb
pop
out
mov
cmp
sub
aad
sbb
data16
jbe
ljmp
sbb
jecxz
lcall
ficoml
jl
jle
inc
lret
outsl
push
in
cmpsb
sub
mov
lahf
testl
pop
inc
xor
outsl
dec
adc
jnp
lret
and
adc
cmp
jb
sti
call
or
insl
add
dec
and
stc
dec
or
inc
fistpl
fmul
sbb
pop
cs
push
add
lods
call
jns
dec
adc
mov
xchg
sbb
adc
es
add
or
sub
outsl
adc
clc
dec
jg
pop
pop
enter
leave
sub
pop
sub
sbb
dec
call
pop
xchg
ss
xchg
inc
mov
sbb
jns
rcrb
int3
cmpsb
dec
pop
inc
popf
sbb
add
sbb
cld
dec
cmpl
orb
ret
es
and
jp
les
test
not
lea
sbb
sbb
pop
jae
int
mov
add
or
cmp
mov
mov
and
hlt
add
insl
data16
inc
jl
loopne
cltd
lock
lahf
or
jle
mov
cld
fsubrs
fdivrs
fildl
repz
je
in
mov
lret
sub
sub
jae
outsl
ljmp
insb
mov
cmpsb
cmp
add
out
stos
sbb
cmp
push
loopne
hlt
pop
pop
xchg
sarb
ja
xchg
sbb
rcrb
jle
sub
xchg
jns
enter
add
xor
testb
jmp
jnp
orb
cmpsb
scas
icebp
or
repz
push
shlb
mov
xor
fnstsw
icebp
push
adc
fwait
testb
push
adc
test
outsb
pop
jbe
cmp
insb
cmp
mov
int3
mov
xchg
jno
lea
mov
roll
jno
jb
xbegin
inc
andb
pusha
and
lcall
xchg
sbb
outsb
push
inc
pop
pop
and
in
sahf
inc
jp
push
js
aam
pop
imul
or
sub
pop
push
pusha
mov
mov
lahf
push
pop
ljmp
pop
pop
or
loope
aaa
jnp
in
xor
push
sti
and
mov
in
push
sbb
lods
sbb
cmp
gs
jl
pushf
cltd
js
loopne
lods
inc
jle
das
mov
add
xchg
daa
lea
movsb
jle
test
mov
sbb
cmp
jl
xchg
add
or
in
or
js
pop
mov
pop
call
or
push
cltd
cwtl
dec
andl
add
enter
dec
adc
pop
jmp
push
push
pop
outsb
sbb
jno
inc
inc
insl
and
or
dec
cmc
push
inc
push
inc
pop
add
adc
push
jb
jecxz
pop
outsb
imul
inc
cs
sbb
sbb
sbb
pop
icebp
lret
dec
cld
or
leave
inc
incl
adc
mov
adc
and
orb
mov
inc
mov
xlat
xor
cwtl
pop
adc
sti
dec
pop
push
xor
xchg
push
or
xchg
divb
sbb
sub
pop
rcrl
fsubrl
xor
mov
xchg
out
popf
and
and
icebp
aad
inc
out
fldcw
in
inc
int3
mov
inc
shll
mov
ret
lea
cwtl
push
xor
repnz
shl
inc
cmpl
mov
mov
add
dec
lahf
xchg
dec
aam
cld
jnp
dec
xchg
and
sbb
or
sub
xor
lods
lea
mov
out
lret
ret
into
or
rorl
or
push
mov
fildl
pop
test
rep
or
adc
pop
adc
adc
in
push
sti
test
dec
lds
or
push
pop
js
xor
adc
sti
adc
inc
dec
mov
daa
mov
dec
xchg
cltd
stos
pop
lret
repz
jp
xor
lcall
mov
je
and
fs
jbe
push
cwtl
movsb
movsb
sbb
adc
pop
shr
aam
add
dec
push
sbb
pop
dec
cmp
jmp
pop
jbe
mov
and
ret
jle
dec
inc
mov
xchg
icebp
mov
and
xchg
pop
mov
inc
loop
cmp
outsl
cli
pusha
or
pushf
jo
jp
jg
inc
sub
mov
mov
pop
dec
in
sbbl
aam
or
out
lcall
dec
sub
and
in
icebp
jno
cmp
push
loopne
fstpt
push
or
in
dec
push
fmul
fs
and
mov
js
push
xchg
loopnew
or
lea
jl
rol
adc
pop
push
out
cltd
repnz
outsl
mov
loopne
or
sti
adc
jecxz
outsl
adc
lods
movsb
mov
push
sbb
pop
sbb
out
fwait
jg
pop
adc
es
pop
out
icebp
jnp
pushf
call
mov
pop
mov
sbb
or
mov
ret
xchg
sahf
adc
and
push
jno
out
add
cmp
push
sbb
sbb
lods
js
inc
outsl
mov
mov
pop
js
push
rcrl
cmpsb
cltd
or
movsb
addr16
int3
xchg
leave
push
jle
and
pushf
or
add
xor
pusha
mov
stos
jle
or
leave
icebp
pop
or
add
or
lret
icebp
xchg
pop
repnz
int3
adc
sahf
adc
and
cmp
movsb
mov
push
jns
dec
insl
sbb
sbb
sbb
xchg
ficomps
jo
cli
cltd
repz
cmp
dec
dec
mov
ficompl
mov
or
add
or
cli
jb
jecxz
mov
sahf
mov
test
or
arpl
dec
loop
mov
pusha
stos
fcompl
mov
adc
pushf
adc
xor
movsl
or
aam
mov
mov
push
adc
das
lret
sbb
pop
lret
push
lcall
mov
repz
and
sbb
cmp
fstl
cltd
or
sbb
and
mov
xor
fs
push
xchg
insb
andl
and
mov
cmp
sbb
pop
sbb
sbb
xor
inc
pop
rcr
xchg
push
xor
or
decb
mov
add
pop
pop
add
adc
and
cmp
dec
cmp
sub
cld
mov
lock
mov
call
mov
loopne
xchg
push
andb
and
in
adc
cmp
cmp
nop
pop
test
inc
push
pop
xchg
xchg
sub
add
xor
xor
xchg
push
and
cmp
out
jbe
jmp
jnp
in
ret
cmp
lcall
cmp
sbb
lcall
sub
adc
sbb
shrb
out
mov
negb
cmc
cmp
nop
xor
aaa
cmp
push
mov
notb
mov
mov
pop
pop
inc
enter
test
mov
rcrb
rclb
mov
push
pop
or
pop
adc
pop
sbb
add
adc
or
adc
and
pop
lods
xsave
pushf
unpcklps
push
or
lret
fdivp
mov
push
adc
sbb
pop
in
mov
test
aad
dec
insl
loopne
mov
adc
dec
pop
movsb
adc
add
add
cmp
mov
mov
ljmp
jbe
sub
movsb
mov
and
fcomip
sbb
repnz
movsl
enter
jb
ret
mov
cld
mov
and
or
shlb
subl
xlat
sub
push
or
cmp
lret
or
or
pop
in
rcrl
icebp
ret
cmp
xchg
test
stos
push
pop
hlt
call
push
or
cli
mov
jle
pop
or
hlt
loop
sbb
pop
cmc
sbb
lahf
in
and
roll
fs
sti
xchg
push
call
pushf
push
clc
sbb
and
loop
out
dec
lock
fimull
add
fs
sub
adc
push
adc
repnz
jecxz
add
jae
shl
jb
fstpl
mov
out
out
inc
jg
inc
loope
mov
sbb
pop
mov
in
and
ss
dec
daa
test
and
int3
or
lcall
lock
pop
xchg
fadd
add
sti
mov
rclb
inc
in
aam
in
inc
test
pop
pop
outsl
push
xchg
dec
or
repz
mov
mov
loopne
aaa
fiadds
push
xchg
dec
or
insb
pop
push
icebp
pop
pushf
or
leave
aaa
rorl
add
int
imul
xchg
mov
aas
aaa
insb
push
jl
sub
pop
repz
fdivrs
xor
ret
dec
test
bound
mov
cld
xchg
sti
add
lock
cmp
pop
fcmovnu
pop
push
test
fwait
cld
xor
inc
sbb
dec
cltd
stc
jecxz
pop
push
cmp
push
sub
pop
ss
fisubrl
xchg
and
xchg
inc
lock
and
sub
inc
loop
cmpl
xchg
out
inc
cltd
fdivl
xchg
push
and
push
sub
dec
push
hlt
push
fwait
push
push
xor
ficoml
cmp
adc
or
push
addr16
mov
or
sti
pop
pop
xor
mov
adc
push
sbb
stos
iret
lahf
push
mov
xchg
pop
or
dec
ljmp
adc
push
xchg
push
dec
enter
xor
mov
mov
iret
nop
jmp
mov
lods
int3
mov
icebp
dec
jg
or
jae
sub
or
test
push
scas
arpl
fsubrl
add
adc
xor
out
push
cmp
adc
rcrb
dec
xchg
lret
jg
ss
dec
dec
mov
mov
sub
ret
mov
fldcw
add
shll
jp
pusha
sbb
insl
cmp
cmp
inc
cmp
cmp
sbbb
sub
clc
lods
jb
adc
sub
das
mov
pop
adc
mov
fcom
jne
sub
adc
xchg
sahf
xor
icebp
xchg
cmpsb
aam
je
adc
push
adc
push
xchg
inc
cwtl
sub
push
or
ss
into
inc
mov
lcall
or
inc
pop
pop
lcall
shlb
inc
mov
xchg
push
pop
and
lcall
mov
pop
inc
or
fimull
outsb
lcall
push
sti
into
addr16
cmp
mov
jmp
lret
repz
cmp
pop
add
ret
in
add
cmp
pop
xchg
inc
shrl
dec
fldt
pop
add
mov
xchg
dec
cmp
repnz
mov
fistl
pop
sbb
scas
test
sbb
decb
movsb
fiaddl
fwait
xor
fs
pusha
lret
inc
push
fldenv
add
loop
das
sbb
dec
mov
push
repz
jno
and
push
daa
je
fldt
xor
sbb
loop
dec
pop
xchg
rcll
ds
adc
sbb
cmp
cmpsb
das
lcall
lods
test
mov
xchg
add
outsl
icebp
add
test
enter
sub
xchg
adc
adc
inc
adcb
adc
repnz
daa
dec
cld
jo
daa
push
or
adc
addl
xor
add
sbb
in
lret
icebp
lahf
sbb
push
and
aaa
inc
sbb
imul
mov
icebp
push
filds
test
jne
cmp
addl
or
mov
ss
out
rclb
ret
jnp
jnp
mov
dec
pop
cld
add
sbb
dec
lcall
orl
inc
call
call
jb
in
adc
dec
pop
int
inc
cli
stc
inc
lret
bound
out
fsubl
dec
push
pop
loope
mov
cltd
daa
je
inc
dec
sbb
pop
imul
cmpsl
shrb
jmp
add
incb
mov
js
mov
pop
inc
hlt
outsb
jno
popa
cltd
or
sbb
popf
imul
pop
mov
pushf
imul
icebp
mov
andb
insb
pop
xchg
dec
mov
cmpsl
test
sbb
jl
sbb
js
pop
and
arpl
addr16
adc
pop
out
jo
fcmovnb
sbb
mov
cltd
sbb
or
call
call
in
das
or
sbb
dec
psubusw
ret
adc
sbb
lcall
hlt
aam
xchg
in
jnp
sbb
fs
sub
outsl
arpl
sub
jg
mov
cmpsl
cmp
inc
xchg
jno
fimull
lds
xchg
pop
in
pop
pushf
fnstsw
aas
adc
sub
dec
add
pop
push
out
daa
xor
sub
cmovae
stc
mov
push
insl
xor
mov
aam
sbb
rcrl
mov
daa
adc
scas
or
push
loope
or
imul
pop
inc
cld
mov
xchg
pop
in
into
repnz
js,pn
pop
push
xchg
pop
push
lahf
pop
dec
ds
or
ficompl
pop
sub
imul
shl
dec
pop
or
notl
int3
dec
cmp
or
adc
in
shll
cltd
jmp
in
and
rcr
fwait
sbb
outsl
add
fcomps
sbb
cmp
inc
inc
xchg
push
xchg
pop
loopne
sub
push
push
rorb
push
push
std
inc
and
sub
cmp
mov
stos
mov
and
sbb
push
xchg
inc
mov
sbb
xchg
pop
add
lcall
insl
pop
fucom
jmp
mov
xchg
inc
push
outsl
cmp
dec
or
sub
popf
lret
adc
push
xchg
dec
sbb
cmp
sarl
mov
insb
in
outsl
adc
imul
lret
lahf
je
sbb
pop
outsb
fists
inc
xchg
lock
lahf
sbb
in
mov
fdivrl
push
lahf
sbb
data16
dec
cmp
push
add
xor
dec
cld
xor
jb
inc
mov
popa
les
sbb
push
test
dec
cmp
add
sbb
lret
pop
pop
push
lahf
or
lds
call
push
push
push
pusha
add
jb
hlt
call
leave
stc
fcomi
sbb
xchg
push
das
les
leave
sti
pop
icebp
lock
ret
or
ficoml
leave
les
cmp
ja
sbb
xor
mov
sub
and
jae
push
aaa
mov
rcll
mov
sub
mov
pop
push
add
loope
das
or
lds
or
dec
adc
out
roll
push
repz
pop
push
pop
dec
lret
cwtl
push
xchg
push
cmp
cmpsb
sub
inc
cmp
nop
into
or
fsubrl
add
js
addl
add
sbb
xchg
xor
inc
adc
dec
push
out
jp
adc
movsl
cmp
add
sub
leave
push
das
sbb
jns
or
xor
fistps
icebp
and
aas
adc
and
and
add
cmp
inc
or
xchg
push
outsb
pop
inc
mov
int3
xor
loopne
hlt
mov
jmp
js
fsubrs
mov
mov
sbb
xchg
pop
jns
js
sub
repnz
add
mov
bound
cmp
pop
sbb
inc
add
xchg
das
mov
fldl
stos
sahf
mov
lret
adc
out
sbb
and
shrb
lret
loopne
sub
push
inc
shll
jmp
xor
clc
lds
add
ds
out
lcall
lods
jb
or
cmp
xchg
pop
rcll
clc
ljmp
push
clc
je
insb
jae
jp
sub
mov
inc
aam
insb
push
mov
mov
sub
push
push
push
mov
sahf
dec
cmp
push
mov
out
xchg
pop
ljmp
and
push
adc
aas
ss
mov
scas
ljmp
shll
sbb
or
mov
notb
insb
lods
cmp
daa
push
les
sbb
icebp
cmp
aas
lcall
out
jl
lods
push
add
xchg
fmul
cmp
cmp
mov
lahf
cmpsl
daa
orl
adc
push
int3
xlat
dec
adc
clc
jg
dec
push
cmp
js
rorb
rorb
aas
xor
shll
add
test
jnp
repnz
pop
pminub
push
cli
js
cld
pop
movsb
pop
ss
xchg
cmpsb
pushf
cmp
or
les
adc
or
lahf
testb
dec
lds
lret
dec
rcll
xor
add
sbb
cwtl
mov
movsl
mov
inc
mov
in
jns
loopne
loop
pop
in
cmp
adc
xchg
mov
stos
mov
dec
mov
aam
or
pop
das
sub
cmpsb
adc
ljmp
repz
icebp
jns
in
push
sbb
rcll
lret
xchg
shr
adc
and
mov
pusha
les
and
sub
inc
cli
mov
int3
dec
push
cmpb
push
xchg
sub
jl
rolb
xchg
inc
shl
and
mov
mov
clc
pop
push
pop
das
mov
fisubrs
sbb
cmp
pop
push
mov
dec
out
sbb
jp
loop
push
mov
popw
mov
test
aad
int3
inc
dec
cld
sub
je
mov
fcompl
psubsb
push
or
pushf
inc
mov
int3
outsl
cmp
dec
mov
adc
adc
xchg
inc
cmp
pop
cmpsl
and
mov
stos
add
aad
imul
lret
inc
shll
adcl
cmp
das
es
das
pop
and
outsb
sbb
fiadds
mov
popl
cmpb
out
adc
lahf
in
mov
jae
test
imul
sbb
fdivr
ss
je
jno
or
movd
test
lock
rol
repnz
movsl
mov
sbb
fistpll
or
mov
shll
ficoms
pop
daa
xor
xor
js
jnp
or
dec
or
dec
aas
cld
and
dec
cltd
lcall
jle
fisubrl
and
pop
je
pop
stc
icebp
push
push
push
popl
cmp
cmp
xchg
pop
push
pop
add
dec
cld
scas
test
mov
sbb
int
loop
rorb
sub
leave
test
pop
cmpsl
jno
shl
dec
mov
sub
in
and
repz
lahf
or
inc
pushf
loopne
loopne
pop
pop
imul
fidivrs
mov
xchg
jmp
les
in
dec
or
inc
push
lahf
sbb
insb
and
mov
daa
cltd
mov
sbb
fwait
mov
cld
inc
mov
xlat
mov
arpl
lret
add
sub
mov
add
mov
pop
inc
faddp
fs
adcb
pop
mov
orl
mov
add
mov
dec
outsl
aas
push
fdivrs
add
mov
cmc
inc
cmpsb
cld
repnz
jmp
shr
mov
push
les
cmp
in
dec
jmp
pop
sbb
loop
enter
mov
sbb
icebp
jmp
in
pop
xchg
push
push
divps
xchg
add
mov
shrb
jle
push
aas
dec
push
jbe
divl
adc
sbb
rcl
mov
jle
cmpsl
xor
fmul
lcall
mul
sbb
cld
mov
into
jae
xchg
sbb
sbb
je
lea
mov
xchg
xor
rclb
inc
pop
movsb
popa
mov
push
adc
cmp
jp
push
sub
mov
pop
cmp
adc
cmp
inc
in
lds
aas
and
mov
sub
lret
pop
adc
pushf
jg
jmp
lret
pop
lret
ds
leave
not
push
dec
mov
je
adc
mov
xor
jae
or
cltd
aad
in
pop
adc
push
mov
xchg
icebp
or
push
divl
in
andb
xchg
sub
jno
xchg
subb
jecxz
fldenv
xchg
and
fldenv
inc
push
mov
pop
inc
add
mov
jle
pushf
jmp
pmuludq
popf
fidivl
jl
nop
gs
adcl
adc
paddb
mov
or
adc
sub
add
adc
hlt
lock
pop
sbbb
je
pusha
cmp
hlt
xchg
in
sbb
xchg
adc
adc
hlt
pop
hlt
xchg
pop
hlt
xchg
pop
inc
jle
adc
pop
mov
pop
enter
hlt
dec
jb
adc
or
xor
hlt
repz
or
inc
scas
and
sub
and
hlt
fisubrl
out
xor
lret
in
pop
faddl
in
push
jg
out
fwait
jae
xchg
adc
add
sub
sahf
push
outsb
fwait
lahf
aaa
pop
sbb
mov
shrl
push
adc
mov
add
mov
sbb
ss
out
imul
arpl
sarl
fnstenv
add
js
xchg
push
dec
stos
pushf
jmp
xchg
add
lahf
xchg
pop
or
add
mov
inc
cltd
xor
xchg
jnp
mov
fiadds
sbb
push
addr16
push
loop
ds
jb
dec
syscall
push
mov
fsubl
jl
sbb
xchg
mov
pop
jmp
push
push
lods
or
cltd
stos
jmp
xchg
ss
lods
jmp
and
sbbb
or
psubq
dec
into
mov
mov
lods
mov
pop
dec
loope
xchg
adc
pop
rorl
and
out
rcrb
mov
test
in
ret
dec
outsb
or
lock
fnstcw
or
js
xor
xchg
mov
cli
ds
or
fwait
xor
lar
inc
movsb
inc
outsb
lahf
lea
and
mov
lock
mov
xchg
push
sbb
adc
pop
sub
cmpsb
push
xchg
or
adc
inc
dec
and
and
cld
cmpsl
mov
das
test
scas
xor
mov
mov
push
adc
out
sub
inc
pop
sbb
ljmp
or
out
mov
dec
adc
std
fmull
mulb
bound
sahf
push
and
xlat
pop
inc
cmpsb
js
in
sub
jl
or
sbb
test
dec
aaa
xchg
inc
xchg
jo
xor
dec
xor
xor
adc
jecxz
stos
bswap
lcall
or
dec
or
icebp
and
push
aaa
pop
xor
push
xchg
ret
les
dec
xor
pop
sub
movsb
sub
dec
test
fadds
or
inc
add
repz
cli
cmp
xor
push
inc
pop
inc
cmp
pop
xor
dec
cmp
dec
adc
cmp
jecxz
test
cmp
or
mov
daa
fs
dec
add
loopne
addr16
xor
mov
outsl
lret
xchg
cld
insb
bound
sub
test
out
push
mov
cld
cmp
cmp
lods
mov
xor
pop
mov
inc
fstpl
add
pop
repz
xor
lock
cmp
clc
ret
and
sub
jb
sti
ss
addl
xchg
sub
mov
xor
mov
jne
xor
pop
sbb
or
dec
in
addr16
adc
cmp
or
jne
pop
xchg
mov
test
push
imul
adc
cmpsl
cli
mov
fildl
popa
pop
ficompl
pop
adc
dec
out
jcxz
push
lods
jb
mov
sub
sbb
add
xchg
cmp
jo
sbb
movsl
jo
push
addr16
iret
push
pop
jmp
and
or
mov
adc
pop
ficompl
iret
movsl
incb
inc
push
push
gs
xchg
in
push
jl
xchg
push
pop
inc
cld
adc
clc
adc
int3
add
es
aam
cmp
mov
lret
test
popf
xor
daa
ror
cmp
push
jno
movsl
into
add
enter
cmpsb
dec
xchg
in
icebp
push
fsubs
sbb
or
pop
adcb
dec
xchg
imul
and
push
pushf
and
out
daa
and
testl
and
pop
xchg
adc
adc
pushf
sub
inc
push
mov
xchg
adcb
adc
scas
daa
push
fwait
adc
mov
imul
leave
xor
shr
add
pop
test
mov
cmp
jecxz
pop
inc
mov
or
and
sbb
cs
lods
mov
les
imul
repz
xchg
addr16
pop
sbb
or
mov
repz
popa
ret
xchg
mov
mov
fwait
sub
cmpsl
cld
scas
pop
pop
imul
enter
push
inc
inc
mov
lahf
xor
fstpt
add
fdivrl
mov
divb
xchg
mov
cmp
and
int3
sysenter
icebp
add
ret
dec
mov
dec
test
fwait
out
xchg
or
inc
mov
stos
js
push
mov
pop
cmp
sbb
push
mov
fcoms
or
adc
sbb
cmpsb
inc
hlt
jae
movsl
push
std
shrl
dec
aas
popa
pop
mov
push
push
cwtl
mov
mov
pop
cmp
xor
fcmovu
push
dec
pop
aaa
in
or
push
add
popf
ss
adc
mov
popa
pop
and
sbb
mov
aas
inc
cmpsl
pushf
sbb
cmp
fcomp
cmp
cmp
pop
pop
test
pop
icebp
aam
fs
ja
push
cltd
mov
add
push
sub
cmp
lcall
jp
cmp
insl
jb,pt
es
outsl
les
push
adc
and
cmovl
cmp
and
outsl
or
add
sbb
mov
clc
dec
sub
mov
dec
dec
pushf
ret
adc
pop
repz
lahf
lock
dec
dec
mov
adc
dec
cmp
dec
push
adc
sbb
pop
cli
jb
je
or
sub
adc
idivb
push
mov
cwtl
push
clc
shrb
pop
xor
adc
adc
cwtl
xor
dec
mov
repz
or
pop
or
or
pushf
cwtl
loopne
fwait
sbb
push
mov
outsl
add
mov
addr16
sbb
lods
mov
outsb
cmp
out
add
punpckhbw
adc
stos
cmp
out
jno
mov
in
lods
pop
cmpsl
jmp
push
adc
in
sub
and
gs
sub
jo
and
add
dec
jb
pop
add
jp
hlt
ret
xchg
cld
lods
aas
mov
fsubrp
push
or
add
jmp
jecxz
testb
insl
pop
cld
jne
jno
mov
pop
inc
das
sbb
out
andb
push
nop
cmp
adc
xchg
insl
imul
mov
pop
mov
cwtl
xchg
adc
fwait
mov
or
lock
call
rclb
negb
dec
roll
call
cmpsl
cmp
adc
pusha
inc
inc
sbb
cs
movsb
adc
adc
loope
cmpsl
or
in
dec
adc
sbb
push
or
pop
popf
and
fbstp
mov
push
loop
push
and
dec
in
shll
daa
fcmovnu
sbb
cwtl
mov
push
push
pop
les
sbb
insl
push
push
mov
xchg
icebp
movsl
xor
pushf
pop
xchg
aaa
mov
test
add
icebp
scas
popa
cmp
add
or
enter
mov
sbb
jecxz
mov
push
pushf
movsb
fucomp
sbb
lret
nop
clc
pop
xchg
adc
jno
and
ja
cwtl
cmp
es
mov
orb
pusha
push
sbb
js
nop
adc
lret
icebp
in
lahf
scas
mov
inc
into
and
cld
jle
cmp
sbb
in
out
repnz
daa
pop
or
fs
pop
push
insb
insb
pop
data16
xchg
jnp
push
dec
adc
fiaddl
jne
pop
jmp
jmp
sub
mov
cld
popa
pop
dec
out
imul
jl
xorb
and
in
jb
cld
inc
jns
xchg
mov
sbb
xchg
pop
movsl
fs
call
pop
les
sbb
push
xlat
lahf
pop
imul
sub
sbb
hlt
pusha
add
cld
pop
fcoml
cli
sbb
add
int3
sahf
dec
or
mov
fwait
xchg
pop
add
les
hlt
push
adc
movsl
xchg
or
xlat
inc
in
and
addr16
and
fnstenv
dec
sbb
sbb
cmpsb
scas
pop
jge
adc
push
mov
xor
mov
sub
push
sub
hlt
jmp
xor
rcll
add
jno
and
xchg
cltd
jnp
cmp
xchg
dec
push
lods
cld
das
aas
xor
addr16
or
inc
aas
and
push
inc
lahf
sbb
pop
sbb
out
repz
aaa
mov
or
xor
push
pop
daa
in
sub
jnp
sbb
push
lahf
cmp
pop
fstpt
dec
mov
js
push
xchg
fwait
in
cld
jmp
inc
adc
pop
testb
cwtl
mov
xchg
or
lret
mov
scas
sub
sbb
in
or
xchg
sbb
and
idiv
cmp
add
push
fisubs
xor
and
lods
mov
icebp
aas
push
or
clc
dec
cmp
xchg
pop
jnp
cmp
out
pop
faddp
cmp
jg
test
dec
add
enter
ret
mov
orb
arpl
aas
inc
mov
dec
or
pop
dec
insl
dec
fidivrs
ret
adc
add
das
mov
aas
mov
push
xorb
xor
sarb
addl
adc
sub
mov
xor
mov
dec
or
outsl
adc
pusha
jecxz
dec
adc
pushf
adc
out
sbb
sbb
sbb
outsl
adc
and
mov
sbb
idivl
je
repnz
and
fldcw
push
cmpsb
cmp
push
dec
movsl
fcmovne
add
jae
cmp
mov
mov
pop
pop
arpl
dec
push
fidivrs
adc
faddl
pusha
cmpsb
pushf
sbb
out
mov
push
xchg
pop
ljmp
dec
in
dec
dec
xchg
dec
jmp
push
insl
fs
pop
xor
out
mov
add
mov
lahf
cmp
iret
cmp
cs
adc
inc
inc
dec
xor
xlat
pop
mov
add
cmp
pop
push
cmovle
cld
or
cmp
or
cmp
repnz
lds
mov
test
xchg
push
or
fisubl
adc
mov
jg
mov
sbb
adc
add
mov
test
cmp
movsl
icebp
push
mov
mov
je
add
adc
cmp
fsubl
add
mov
add
or
punpckldq
push
andl
enter
push
fmuls
xor
push
out
int3
rol
inc
sbb
ror
or
dec
pop
test
je
stos
xchg
adc
lcall
add
push
pop
pop
icebp
cmc
inc
adc
adc
mov
in
in
cmp
push
out
sub
pop
fsubrl
mov
imulb
push
cmc
repz
lret
repz
or
jle
xchg
mov
leave
rcrb
push
in
fsubl
push
sbb
inc
psubq
push
jg
cmpsb
add
and
xor
inc
pop
in
repz
or
xchg
loop
cld
inc
jmp
cmpsb
or
pop
sbb
negb
aas
je
adc
adc
in
lret
addr16
xor
pop
cltd
jmp
js
insb
pop
xor
cmp
in
sbb
and
pusha
cli
scas
jno
push
cmp
mov
frstor
inc
cltd
xor
adc
fwait
sbb
daa
mov
sbb
cmp
mov
add
daa
xchg
lahf
adc
lcall
sbb
daa
mov
pop
xchg
mov
push
leave
inc
xchg
ljmp
dec
add
dec
fisttpl
je
dec
add
pop
lods
pop
pusha
dec
scas
fsubl
add
and
push
mov
imul
out
add
cmp
xchg
fiaddl
aas
fidivs
out
pop
aas
cld
loopne
cmp
das
mov
xor
icebp
iret
push
adc
and
or
rcr
sub
fdivr
pop
leave
xchg
es
pop
adc
and
fisubrs
jb
dec
sbb
repz
mov
xchg
or
mov
rcrl
sub
push
inc
and
adc
pop
call
jae
lea
fcomps
cmpsl
idiv
loop
push
enter
or
jmp
loop
jmp
xchg
add
dec
cld
arpl
outsl
xchg
push
inc
pop
fs
mov
leave
push
and
xchg
xor
push
xor
arpl
aas
stc
sub
sbb
sbb
outsl
roll
mov
pop
movsl
xchg
pop
mov
push
pop
repnz
inc
xchg
cli
loopne
cmpsb
sub
adc
push
movsb
hlt
out
adc
xor
out
or
push
shr
int
sahf
inc
dec
xchg
add
push
xchg
int3
std
cli
movb
test
lcall
rclb
mov
int
push
sahf
insb
ret
mov
out
push
sub
pop
scas
clc
cmp
pop
mov
add
in
cmp
push
adc
cli
sub
xor
sub
aas
sub
xor
sbbb
sbb
loop
movsl
push
xor
shl
pop
sbbl
cld
rcrl
adc
adc
dec
pop
sbb
pop
and
pop
mov
pop
dec
add
ret
jae
sub
push
pop
daa
xlat
add
adc
mov
push
cmp
jle
lea
jg
add
test
sbb
cmpsb
jmp
mov
pop
cmpsl
lea
bnd
or
pop
inc
outsl
pop
sbb
icebp
in
cmp
pop
lea
push
test
fs
insb
cmp
xchg
clc
xchg
mov
dec
adcl
dec
add
add
adc
icebp
xchg
leave
push
cld
mov
adc
push
inc
pop
stos
aaa
dec
into
lcall
pop
or
xchg
pushf
and
ret
pop
ss
dec
add
rcrl
sub
add
aaa
mov
in
sub
out
pop
adc
cmp
mov
loopne
flds
and
mov
loope
jb
push
lret
mov
outsl
adc
mov
and
and
nop
ljmp
mov
cli
pop
add
sbb
xchg
push
shlb
aas
pop
adc
and
pop
fidivrl
and
push
jmp
or
jecxz
sbb
cld
mov
mov
xchg
and
push
inc
das
sbb
les
pop
and
push
aam
gs
sarl
dec
inc
push
push
enter
scas
push
adc
aad
pop
inc
pop
xchg
adc
das
push
lcall
xor
add
add
lahf
neg
outsb
pop
stos
push
outsb
frstor
adc
out
xor
xchg
jle
test
sti
pop
adc
jp
pop
stc
dec
or
repnz
add
push
cmp
adc
jo
fcompl
icebp
pop
pop
cld
adc
daa
mov
add
mov
push
or
mov
aad
add
xchg
sahf
xor
and
imul
mov
ficoms
pop
pop
adc
cmp
test
adc
add
repnz
stos
and
ficoms
pop
sub
dec
lock
and
lods
xor
push
in
pusha
cmp
and
fs
dec
cmpsb
mov
outsb
aad
dec
mov
cwtl
mov
push
fldt
hlt
inc
xchg
sbb
insb
xchg
and
xchg
push
cmpsb
pop
rcrl
popf
adc
pusha
lods
lods
cli
mov
adc
cmp
adc
iret
push
mov
fdivrl
xchg
or
mov
lahf
adc
dec
cld
inc
loop
or
lret
int
add
mov
pop
adc
dec
inc
cmc
sbb
xchg
adc
pop
pop
and
pusha
push
test
or
cltd
and
outsl
push
lahf
in
cmp
jb
dec
icebp
lcall
mov
push
fsubl
jecxz
aam
or
shrl
stc
adc
jbe
pusha
es
pop
push
fs
les
adc
pop
fs
cltd
loope
pusha
in
das
fsts
cld
stc
mov
and
add
add
js
aas
mov
inc
jb
insl
mov
mov
add
pushf
cmp
daa
xlat
sti
or
xor
inc
sbb
cltd
movsb
in
jp
and
adc
xor
xchg
les
dec
cmp
test
jbe
mov
xor
repz
rorl
in
out
mov
movsl
test
icebp
cmp
dec
scas
push
aaa
orb
cmpb
mov
shlb
lds
cld
leave
xor
sub
inc
sbb
xchg
pop
and
fsts
push
sbb
xchg
pop
add
pop
sbb
movsl
lcall
rclb
xchg
xchg
lahf
jl
xor
fnsave
out
pop
xor
cltd
cmpsl
pop
insb
pop
inc
or
or
pop
push
stos
pop
sbb
enter
xchg
lods
into
and
rcll
xor
adcl
ret
imul
push
gs
sbb
jnp
push
sbb
add
les
add
fsubl
lahf
cld
mov
xlat
sbb
add
icebp
push
adc
out
rcrl
sbb
pop
test
test
adc
mov
lret
test
es
fadds
or
dec
inc
pop
mov
lock
mov
setl
icebp
and
ljmp
lock
mov
mov
hlt
xor
test
mov
push
fs
push
inc
mov
jmp
push
in
repz
test
or
mov
loope,pn
jne
xchg
out
mov
jl
inc
push
ret
outsl
or
pop
xchg
jb
jmp
mov
cmp
mov
jge
pop
xor
es
cmp
loop
out
mov
sbb
push
pusha
test
mov
mov
dec
and
hlt
stc
movsb
loopne
push
daa
out
or
sbb
sbb
mov
dec
cmp
push
stc
pop
pop
inc
test
outsb
js
jmp
inc
cmp
inc
jb
in
and
adc
cwtl
inc
push
sbb
add
outsb
jo
or
sbb
cld
push
fcmovbe
and
mov
sub
fmuls
cmp
cltd
hlt
and
stc
call
hlt
lcall
cs
xor
inc
fldcw
mov
pop
cli
jl
mov
scas
test
cmp
jl
add
mov
pop
or
cmc
imul
xor
push
ds
pop
and
xorb
gs
sti
jno
or
call
jo
rorb
inc
pop
xchg
dec
jb
outsl
ljmp
push
push
pop
sbb
fs
mov
push
adc
xchg
pop
jge
outsl
out
push
push
ja
or
cld
push
test
pop
jecxz
inc
cmc
jnp
rcr
push
test
xchg
adc
nop
adc
xchg
adc
push
adc
push
sbb
aam
repz
popa
add
gs
ds
jg
mov
inc
mov
loop
aas
sub
xlat
push
xor
outsl
enter
dec
stos
push
fneni(8087
pop
cmc
test
rcr
fcompl
mov
iret
clts
xor
cmp
and
jmp
aas
sbb
daa
call
xor
push
pop
fs
sub
adc
push
icebp
divl
xor
loop
adc
sbb
or
dec
out
push
sti
xor
in
xorb
outsl
lahf
cltd
add
dec
andl
xchg
mov
sbb
sbb
sbb
add
adc
pop
fidivrs
or
dec
push
movsl
shll
dec
decb
xor
in
iret
cmpsl
out
orb
lahf
dec
rol
mov
add
sbb
xchg
rorb
fadd
mov
les
aaa
or
iret
adc
dec
js
sbb
xor
jnp
sbb
sub
or
push
aad
mov
mov
mov
outsb
sbb
xchg
mov
rclb
or
lods
in
cmp
pop
sbb
stos
imul
jl
mov
outsb
fwait
cwtl
push
adc
inc
adc
int
add
fidivs
pop
cmp
and
push
arpl
in
shll
js
or
pop
dec
mov
xchg
cmp
sub
ret
adc
mov
fisttpll
arpl
popf
and
call
xchg
in
arpl
rorb
lret
push
dec
mov
addr16
or
or
and
outsl
les
out
ficomps
xor
inc
pusha
cmp
sbb
int
notb
sbb
push
xor
sbb
ret
pusha
loop
pop
or
cmp
inc
pushf
gs
sbb
pop
out
xor
aas
dec
jmp
sbb
pusha
sbb
inc
je
cltd
or
jb
push
mov
push
sbb
cmp
int3
dec
out
inc
push
lcall
in
scas
dec
jmp
call
push
hlt
loopne
push
fwait
pop
pusha
ds
fldenv
cmp
or
push
outsl
jecxz
xlat
out
es
jne
cmp
loope
mov
icebp
invd
mov
or
lea
cltd
sub
push
pop
sub
xor
jle
jl
or
mov
lret
mov
push
scas
pop
xor
mov
sub
lods
mov
adc
adc
xor
sbb
test
cmpsl
cmp
jmp
movsb
mov
push
and
rcll
jmp
pop
or
imul
repnz
rorl
mov
jnp
loop
jae
add
or
cmp
jmp
aaa
add
out
fisubl
adc
out
push
stos
fsub
cld
pop
fisubrs
movsb
inc
lret
pop
cmp
iret
sbb
mov
sbb
pop
imul
fld
notl
clc
add
imul
lret
flds
pop
fsts
fldcw
ds
lock
sub
add
insl
aad
push
inc
lahf
xor
ret
div
cmp
js
js
cmp
add
xchg
repz
incl
pop
sbb
sub
dec
adc
lcall
or
xchg
or
push
and
jbe
xchg
cwtl
popl
dec
or
insb
out
pop
pop
loopne
and
rclb
leave
xorl
in
imul
mov
insl
jae
call
mov
inc
xor
sbb
sarb
push
adc
push
inc
pop
and
fstps
bound
pop
sbb
jle
xchg
inc
push
aad
inc
std
out
and
mov
xchg
mov
xchg
pushf
call
mov
sbb
add
sti
xchg
lock
cmp
fwait
mov
push
movsb
xchg
sbb
pop
cltd
fsts
adc
jl
and
arpl
fbld
pop
iret
les
popa
jp
sbb
fmuls
aaa
das
bound
rcll
psllw
mov
loope
shll
push
mov
push
rclb
or
pop
enter
lea
or
into
adc
ss
adc
dec
mov
insl
jg
xchg
cmpsl
add
gs
pop
cmp
lcall
xacquire
adc
cmp
lahf
call
sti
xchg
bound
aas
or
aad
out
repz
jne
lock
inc
arpl
inc
icebp
or
pop
sbb
ja
icebp
arpl
cmp
mov
xor
sbb
ss
cli
sbbl
xor
push
ret
jo
sbb
mov
lea
scas
ret
sbb
movsb
stos
jecxz
cmpsb
inc
cld
mov
loopne
xchg
daa
pop
sub
sbb
lcall
gs
jbe
add
fcoml
std
cmpsb
cmp
push
ret
adc
or
sbb
pop
xor
or
es
iret
pop
lods
addb
out
push
lret
add
les
mov
sbb
cld
xrelease
dec
xor
sub
fbld
pop
icebp
loop
dec
xor
jo
inc
inc
fdivl
pop
outsl
cmp
pop
or
aas
loop
int3
mov
ja
jg
pop
lock
sub
cmp
rolb
cmp
cmpsl
out
xchg
imul
sub
movsl
dec
clc
es
enter
outsb
les
aaa
mov
pop
insl
fucom
popf
dec
sub
ds
dec
push
imul
or
adc
and
pop
or
mov
pop
mov
sub
push
ja
std
mov
mov
pushf
iret
and
push
cmp
cs
pop
xchg
mov
cld
das
sub
cmp
cmc
aaa
in
push
das
fdivl
fisubrl
movsb
imul
shll
and
mov
push
push
pop
cmp
or
ret
icebp
dec
cmp
sub
cld
or
push
imulb
xlat
xor
idivb
mov
mov
mov
lmsw
and
das
sub
xchg
cmp
xor
jns
or
sbb
aam
movsl
mov
cmp
in
pop
and
mov
outsl
push
xor
fidivrs
mov
sub
cld
sahf
pop
stos
cltd
es
les
jl
aas
sub
cmp
cld
cmp
sbb
imul
jnp
or
cmp
sbb
std
addr16
out
cmpsl
aad
add
xor
lahf
adc
or
sbb
pop
mov
xor
add
xchg
orb
into
fwait
psllw
push
sbbl
arpl
call
out
sub
mov
loope
xor
dec
push
imul
mov
mov
xchg
push
adc
xor
daa
test
sbb
xor
push
mov
hlt
add
xor
adcl
movsl
ds
pushf
xchg
roll
call
and
fs
lret
cmp
cltd
cli
cmc
lods
pop
adc
adc
inc
lds
jbe
loopne,pt
xlat
xor
or
ss
fcomi
sbb
aad
out
mov
inc
xor
or
gs
cwtl
out
and
cltd
pop
push
adc
sbb
in
mov
or
or
add
maxps
mov
jnp
in
insb
cmp
push
jnp
add
adc
fldt
pop
cltd
loop
sub
scas
test
adcb
xchg
rcll
adc
loopne
sbb
xor
es
cmp
add
loop
sbb
pop
arpl
jp
gs
mov
cltd
xor
ret
cli
add
leave
add
sub
call
push
sahf
cmp
add
lock
pop
or
sbb
or
dec
data16
sbb
adc
out
and
divl
or
cmp
cmp
cmp
cmp
add
cwtl
dec
mov
lds
mov
sub
add
cltd
lret
orl
pushf
sbb
adc
fcmovnbe
push
jmp
out
xlat
xchg
sbb
pop
adc
sbb
xchg
fistps
jo
sarl
sbb
sub
xor
or
xor
sbb
inc
and
sub
xchg
dec
fistpl
add
inc
push
outsl
inc
adc
insl
lcall
mov
je
adc
jb
cld
jnp
pop
loope
mov
push
out
jae
and
in
int
fmull
mov
pop
lods
les
fdivl
pop
fwait
jecxz
cld
dec
enter
cmp
xor
lahf
xchg
ficompl
sbb
adc
int3
xchg
fimuls
call
add
dec
popa
fistpll
aaa
push
pop
or
lret
push
push
je
fmull
add
cmp
mov
stc
sbb
xor
xor
rcrl
xchg
jmp
or
imul
xchg
push
aas
xchg
sub
adc
mov
jp
adc
stc
jle
nop
xor
dec
sbbb
and
leave
movsb
pop
lret
pop
loop
mov
or
xor
xor
jae
inc
xchg
es
cmp
add
hlt
mov
or
pop
outsl
stc
mov
lds
pop
or
jle
inc
inc
sub
add
xchg
or
jb
fimull
movsb
mov
fists
in
mov
or
xchg
push
in
mov
or
enter
mov
jle
mov
jge
repnz
or
dec
push
mov
loopne
pop
inc
mov
jge
mov
sti
or
lcall
mov
mov
inc
add
sbb
cld
push
sub
div
sub
adc
cmp
adc
dec
push
fdivl
and
xchg
push
faddl
pusha
testl
call
jg
loop
sti
mov
adc
push
push
and
jmp
or
sbb
scas
addr16
and
pop
aam
out
jns
les
adc
aam
push
out
sti
sbb
jne
outsl
adc
aam
test
in
jns
xor
mov
pop
jle
jno
push
rorb
in
sbbl
push
inc
pop
push
cmp
add
jbe
adc
cmp
push
repz
mov
sarl
push
std
sarb
adc
clc
cmpsb
shrl
xor
adc
lret
jg
fisttps
adc
cltd
push
push
sbb
adc
icebp
std
xchg
and
fisttpl
or
scas
lds
icebp
cmp
xchg
mov
and
cmpsb
sbb
cmp
dec
sub
xchg
outsb
pop
repz
sub
cwtl
push
filds
sar
adc
mov
mov
cmpsb
push
mov
ret
ja
pop
jecxz
fcoms
xchg
adc
aaa
hlt
ss
aad
roll
or
pop
cltd
jmp
push
loopne
or
sub
inc
adc
pop
cmp
dec
icebp
add
mov
xor
push
push
push
mov
punpckhbw
or
pop
ljmp
sbb
xchg
cli
inc
inc
sbb
xchg
dec
lcall
add
mov
mov
inc
push
pop
adc
daa
push
mov
xchg
sbb
ljmp
push
sbb
sub
fsubrl
dec
sbb
aaa
out
inc
fldcw
and
dec
xchg
sbb
add
cmc
pop
and
out
jecxz
xor
sbb
xchg
lahf
push
sub
andb
jecxz
inc
stos
fidivrs
cvtps2pd
fnstsw
icebp
fstps
or
jbe
xchg
or
inc
jl
aad
scas
cmp
aad
imul
xor
xor
adc
loope
imul
jl
aam
push
xchg
outsb
or
lahf
cmp
outsl
add
xchg
cld
pop
add
fs
mov
adc
addr16
movsl
push
pushf
jle
dec
push
pop
adc
data16
jp
inc
inc
inc
adcb
dec
je
mov
scas
inc
icebp
push
and
lds
push
call
popa
inc
int3
idivl
fildll
fwait
daa
shl
xchg
push
xchg
inc
int
mov
sbb
mov
jnp
out
shll
pop
das
sub
ror
out
adc
popl
jle
repz
adc
mov
pop
push
fs
add
adc
cmp
adc
cmp
push
inc
ret
pusha
sub
pop
and
jmp
dec
imul
inc
sub
or
mov
pop
add
out
into
arpl
iret
mov
test
push
aas
or
sbb
add
inc
jl
insb
fmul
cmp
rorl
adcl
bound
cltd
lock
and
mov
cld
inc
gs
adc
push
ret
adc
cmp
mov
outsb
fsubrs
add
xorb
jmp
and
adc
jl
es
inc
pop
or
push
cmp
shlb
cld
dec
and
or
mov
fsubrl
xchg
shrb
cwtl
insb
or
cmc
out
sti
testl
out
push
add
insb
cwtl
xchg
dec
orb
xchg
cwtl
xor
rclb
cmp
rolb
rolb
push
inc
add
pop
std
cld
inc
or
adc
paddsb
dec
mov
les
and
rcll
cmp
add
mov
sub
mov
aaa
adc
mov
dec
push
test
dec
rolb
cmp
cmp
rcrb
popf
test
insb
pop
rcrb
mov
loope
xor
mov
xor
or
mov
lret
xlat
push
inc
cmp
xlat
xchg
jg
jge
lods
popa
pop
push
pop
pushf
sub
or
adc
insl
mov
xchg
or
call
push
inc
cmp
add
mov
sub
mov
aaa
adc
lahf
insb
cmp
or
push
mov
adc
cmp
or
jecxz
pushf
fs
mov
sub
les
sub
push
push
pop
ret
sub
jbe
push
dec
mov
lock
xor
cld
mov
xor
adc
int3
out
add
fwait
push
adc
and
adc
adc
cmp
cmp
shlb
rclb
pop
and
or
or
call
cmp
out
je
out
inc
in
shl
xor
pusha
or
pushf
jae
jecxz
push
fcomps
xor
push
popf
pop
jecxz
mov
dec
sub
cmp
in
jnp
dec
dec
dec
les
das
fisubrl
or
cltd
push
push
ljmp
lcall
dec
int3
test
adcl
ss
push
push
or
add
xor
dec
or
pop
xor
or
movsb
and
push
stc
pop
xor
int3
insl
inc
add
pushf
ret
or
loop
outsl
pop
add
roll
loope
sbb
icebp
je
pop
fs
xchg
cmp
in
int3
icebp
mov
mov
sub
insb
push
pop
sub
add
mov
fsubl
sbb
and
cmp
mov
lret
stos
mov
or
rorl
rclb
fadd
cltd
adc
sbb
daa
cmp
aaa
js
add
mov
sub
fisubrl
loopne
push
adc
mov
lods
dec
movl
lods
pop
ret
int3
push
adc
mov
jge
adc
xor
and
ficomps
in
add
pop
add
add
mov
jl
and
lret
push
mov
shrb
xor
or
flds
sbbl
cmp
push
push
loope
ret
or
cmp
cmp
daa
cmpsb
nop
adc
push
sbb
lds
stos
icebp
add
daa
fiaddl
lcall
push
xchg
mov
popa
lods
mov
lahf
out
mov
loopne
xchg
out
inc
mov
mov
dec
jmp
xchg
jl
jge
and
nop
ret
jmp
inc
or
pop
adc
jbe
into
mov
fmull
insl
shlb
lahf
je
lods
fisubrl
sbb
es
les
in
inc
lahf
call
jne
add
inc
or
mov
sbb
notl
leave
icebp
push
lret
push
mov
ficomps
lret
nop
mov
in
dec
cld
add
scas
adc
call
cmp
movl
negl
sbb
mov
pusha
dec
sti
or
pusha
dec
subl
out
insl
aas
pop
xchg
repnz
push
xchg
push
inc
cld
popa
sub
pop
and
cltd
leave
in
pop
cmc
push
cmp
jns
add
dec
push
pop
sbb
cmp
cli
jns
cld
add
cltd
dec
cmp
das
shlb
das
gs
jb
ss
push
imul
push
cli
mov
dec
sbb
adc
hlt
into
pop
call
inc
mov
outsl
dec
pushf
mov
push
daa
cmp
sub
mov
mov
je
adc
mov
push
sub
fsubrl
fsubrs
xor
cmp
xchg
cltd
and
leave
inc
into
sub
loope
lea
cmovbe
hlt
out
pop
scas
dec
mov
icebp
lods
pop
inc
loope
imul
inc
insb
icebp
das
mov
sti
sub
xor
mov
gs
das
scas
sbb
pop
jp
add
cmp
call
adc
mov
js
sbb
stos
mov
testb
xchg
xchg
insl
cmp
push
mov
test
sub
idivb
xor
xchg
sbb
and
roll
aam
cmp
push
scas
inc
pop
jnp
jns
fdivrl
and
mov
imul
pop
cmpsl
cmp
mov
sub
sbb
sub
daa
adc
cwtl
pop
add
or
xor
and
fucomi
loope
mov
mov
loope
mov
jmp
xchg
inc
fnstcw
add
xchg
adc
in
in
pusha
mov
pop
ja
out
mov
insl
cmp
mov
repnz
xor
lds
fldenv
sub
xchg
sbb
icebp
repz
aas
ret
mov
jb
icebp
jb
lcall
inc
jo
pop
adc
daa
orb
stc
arpl
dec
pop
adc
and
out
sbb
inc
fiaddl
xchg
or
or
div
pop
mov
test
jl
add
or
sub
out
push
cmp
sub
int
push
rolb
ficomps
xor
stos
or
sbb
jnp
es
lods
pop
sbb
cmp
sbb
add
mov
fbld
adc
repnz
cld
ljmp
es
push
fwait
sub
imul
insb
or
in
jmp
lods
fstps
scas
dec
cmp
cli
and
mov
lret
push
mov
dec
cld
adc
pop
dec
add
js
cmpsl
sub
or
adc
cwtl
and
out
or
jnp
pusha
sbb
or
pop
sbb
cwtl
mov
push
dec
cmpsb
mov
test
jp
xchg
inc
inc
push
xor
adc
add
pop
in
add
in
jge
or
cld
jbe
dec
adc
sub
dec
shlb
outsl
fcomp
mov
adc
sub
pop
imul
cmp
lret
lret
xor
xchg
addr16
cmpsl
call
dec
sub
or
push
xchg
and
xchg
ss
sub
aad
sub
gs
xchg
inc
insl
dec
pop
loope
push
adc
data16
push
loop
sub
sbb
in
lcallw
sub
sbb
shll
push
cmp
es
push
call
out
adc
mov
icebp
mov
inc
mov
pop
dec
mov
dec
pop
sub
lods
and
pushfw
lcall
mov
imul
push
mov
mov
xchg
setl
adc
test
push
push
cwtl
push
dec
dec
popf
mov
or
xor
xor
cld
push
xchg
and
sub
loopne
inc
sti
cmpsl
inc
or
xchg
pushf
hlt
jnp
imul
mov
iret
adc
fisubrs
push
fs
hlt
cmp
std
pop
push
insb
jne
dec
sbb
pop
repz
or
mov
enter
mov
pop
pusha
cltd
push
xchg
xchg
push
and
push
sbb
and
mov
push
jbe
daa
cmp
inc
cld
mov
jno
push
mov
sbb
jmp
dec
arpl
stos
push
hlt
aad
roll
jp
in
cmp
fs
adc
test
aas
daa
popw
ds
rcrl
dec
xor
pop
hlt
add
adc
fmulp
popf
pop
jb
insl
clc
push
cmp
add
movsl
das
xor
push
or
sub
icebp
mov
sub
push
jg
loope
outsb
repz
add
ficompl
dec
sbb
and
and
dec
xor
add
cld
adc
cld
leave
dec
dec
and
jne,pn
out
or
enter
incb
pop
cmp
and
sahf
imulb
adc
adc
push
or
or
negl
xchg
inc
push
sbb
divl
jbe
enter
icebp
cmp
pop
in
aad
cld
sub
jmp
xchg
clc
aam
fdivl
aam
xchg
adc
divl
adc
je
mov
stos
and
test
movsb
or
jo
jbe
pop
cmp
pop
cld
and
cs
ror
enter
jl
loopne
aad
cs
push
mov
clc
sbb
jle
je
and
cltd
gs
test
mov
xchg
or
push
mov
out
jmp
add
dec
imul
ret
mov
rcrb
or
adc
outsl
inc
arpl
cmp
js
jno
xchg
pop
mov
or
test
push
out
cmc
adc
pop
lock
outsb
lea
and
xchg
cmp
xor
or
xchg
xchg
mov
jp
push
or
mov
test
pop
lds
and
xor
inc
mov
push
adc
pop
xor
or
push
fbstp
push
mov
sbb
xchg
sbb
sbb
sbb
icebp
lea
pop
outsl
and
add
mov
push
gs
cmp
jge
testl
dec
cmp
pop
cmp
arpl
xlat
push
out
and
mov
xchg
pop
sbb
pop
or
es
mov
add
faddl
push
lcall
dec
repnz
push
cmp
cmpsb
sti
sub
popf
fisttpll
and
pop
sbb
add
jl
cmp
pushf
mov
sub
je
test
mov
pop
sub
push
adc
loope
aas
outsl
or
lock
sbb
sbb
pusha
pop
or
xchg
rclb
xchg
test
in
aas
and
jg
dec
mov
pushf
push
ja
std
add
xchg
cltd
mov
movl
jecxz
push
adc
mov
test
pop
inc
inc
movsl
sbbl
sub
aas
dec
or
pusha
ficompl
and
add
dec
cmp
or
or
icebp
adc
shrl
notl
dec
push
add
and
or
icebp
sbb
testl
leave
inc
sbb
xchg
push
inc
cmpsl
repz
in
inc
add
fnstenv
pop
je
mov
gs
adc
ss
pushf
cmp
pop
push
inc
and
sbb
dec
out
outsl
das
movsl
lods
loop
lcall
aad
mov
push
xor
xchg
sub
inc
jbe
addr16
add
inc
shlb
inc
adc
insl
mov
lods
sbb
pop
icebp
dec
or
adc
scas
lret
out
cmc
in
sbb
loop
pop
out
xchg
mov
jmp
adc
sarb
loopne
or
je
and
pop
adc
xchg
repnz
pop
mov
pop
dec
scas
popa
sub
lods
or
mov
jnp
aas
sar
rolb
int
or
pop
sahf
faddl
xor
and
inc
add
mov
adcb
call
or
repz
jns
test
mov
stos
jl
inc
lret
pushf
roll
nop
mov
je
add
cmpsb
loope
daa
mov
mov
sbb
inc
dec
jl
push
jns
iret
andl
cmpsl
fsubrs
or
pop
cmp
cmp
sub
cld
pop
inc
pop
push
inc
sub
fiaddl
pop
mov
or
data16
adc
pop
loop
mov
lock
daa
popa
dec
mov
inc
std
inc
xor
pop
jae
sub
sbb
aam
xor
ljmp
mov
data16
movsb
int3
xchg
inc
clc
and
mov
sub
sbb
out
fsubrs
push
push
or
cmp
fsubs
sbb
icebp
or
inc
or
push
call
dec
pop
jp
pop
dec
cld
out
adcb
add
mov
adc
lock
and
in
push
sbb
push
add
ljmp
push
mov
lahf
sub
cld
rorb
adcl
loop
pop
movsl
dec
cli
mov
enter
or
push
shrl
dec
rcl
clc
jl
movsb
call
xchg
push
test
sbb
icebp
push
xchg
xor
jl
sbb
mov
cmpsl
add
push
imul
repz
adc
pop
movsl
dec
add
push
jno
int3
out
lea
inc
data16
repz
adc
pushf
jmp
pop
pop
add
jno
sahf
cmpsl
jecxz
lea
and
movsl
dec
mov
in
rol
pop
sbb
icebp
push
jne
adc
adc
mov
adc
jo
cmpsl
loope
and
adc
or
aas
adc
xchg
stos
aaa
jb
jle
pop
rcrb
xchg
or
outsl
sbb
add
cltd
aas
pushf
rolb
push
nop
or
or
pusha
pop
scas
pushf
sbb
adc
add
xor
pop
add
xor
fwait
je
aam
in
push
aam
cmp
lds
adc
cmp
cld
daa
pop
cmpsb
dec
adc
cltd
ficomps
cmc
adc
rcrl
dec
jle
nop
sbb
push
negb
mov
sub
loopne
sub
lds
sub
call
adc
jmp
out
fidivl
data16
sbb
cld
and
sbb
and
sbb
push
lcall
mov
stos
xchg
push
push
sbb
in
les
inc
lods
pop
out
adc
lcall
push
les
mov
fdivrs
fcompl
pop
inc
sbb
push
sbb
data16
inc
sbb
call
adc
dec
adc
lret
ja
xor
call
xor
fnstcw
fndisi(8087
sbb
cmc
push
sbb
outsb
sbb
lret
xchg
sbb
and
mov
push
imul
les
cltd
loope
add
in
into
xor
push
sbb
cmp
push
les
lods
mov
jne
sub
adc
adc
cmp
inc
cmc
scas
adc
push
repnz
xchg
xchg
fwait
inc
lret
sbb
cmpsl
sbb
inc
cmpsb
je
cltd
adc
fiaddl
outsl
inc
xchg
push
add
dec
pushf
push
adc
add
fs
cmp
notl
add
pop
mov
xor
pop
ds
dec
cmp
daa
repnz
xlat
lret
or
fildl
hlt
in
mov
iret
data16
mov
pop
cld
test
mov
adc
mov
and
adc
in
add
sub
sbb
pop
add
and
cltd
mov
adc
out
pop
adc
aad
arpl
sbb
cltd
inc
sbb
mov
xor
push
jae
in
je
adc
fbstp
xchg
ret
loope
sub
xchg
movaps
or
fs
dec
sub
movsb
push
or
dec
repnz
inc
or
movsl
enter
mov
pop
xor
push
pop
cmp
push
push
ja
or
xor
xchg
daa
mov
mov
js
fisubrs
xlat
push
aaa
lods
int3
pop
pop
or
cmp
jecxz
bound
add
addr16
call
dec
mov
daa
les
leave
cld
add
jl
ss
mov
sbb
add
dec
and
xchg
les
loopne
push
cltd
or
xchg
ret
cwtl
cmp
icebp
inc
sub
imul
lock
push
imull
lahf
movhps
pop
xor
pushf
push
cld
dec
sub
xchg
aaa
pop
push
sub
sbb
in
inc
jecxz
adc
mov
loop
pop
dec
loopne
call
and
pop
sub
cmp
sbb
out
jno
adc
or
or
and
and
and
int
insb
repz
mov
in
jnp
push
xor
stos
outsl
pop
mov
roll
inc
mov
lret
push
sti
pop
icebp
in
xchg
pop
sub
pushf
adc
js
jmp
inc
adc
cltd
pop
and
aaa
and
pop
xchg
xchg
push
jnp
sbb
in
lahf
xor
adc
enter
lock
pop
cmc
lcall
inc
fwait
push
lock
icebp
je
push
stos
paddusb
test
addl
pop
aaa
pop
sahf
xlat
stos
stos
lret
inc
and
mov
testl
lahf
mov
jmp
movsb
mov
stos
dec
xchg
cmp
mov
push
fwait
out
adc
mov
mov
rcr
movsl
stos
inc
leave
cmc
adc
adc
jecxz
pop
mov
xor
xchg
push
les
dec
popa
xor
ret
sahf
adc
sub
sbb
sbb
loopne
sub
subl
lret
mov
or
sub
inc
test
push
pop
xchg
arpl
add
jp
and
js
hlt
or
xor
jae
sbb
xchg
sbb
pop
sbb
pop
pusha
xor
scas
jnp
xor
inc
xchg
loope
cmp
das
fadds
inc
dec
fcomps
adc
dec
cmpl
inc
rorl
push
mov
pop
sub
xchg
adc
xchg
lods
lds
jl
pop
adc
xor
push
add
inc
stos
xchg
sbb
add
adc
jg
and
mov
addr16
fdivrs
push
fidivs
jns
cltd
lret
xor
jne
sbb
imul
es
mov
pop
push
fldcw
jae
lcall
cltd
js
and
sbb
out
int3
inc
push
push
add
sbb
adc
fs
dec
cld
xor
dec
inc
dec
jbe
lret
pushf
outsl
les
loop
insl
and
pop
hlt
pop
fldl2t
test
loopne
adc
mov
roll
cmc
and
pop
sbb
frstor
pop
nopl
dec
push
aaa
std
pusha
fs
fstl
aas
pop
in
fcomps
pop
jle
jbe
or
and
js
xchg
mov
and
mov
movsb
mov
outsl
sbb
or
int3
xor
in
lret
lahf
jle
scas
xor
out
jp
inc
lret
jmp
sbb
xchg
je
xor
repnz
repnz
fistl
push
and
pop
xor
jb
rcrb
ficoms
rcl
push
xchg
or
ret
outsl
cltd
inc
xchg
pop
call
xor
push
push
inc
or
xchg
inc
clc
and
add
xchg
push
sbb
adc
pushf
xor
cmp
adcb
xchg
add
push
gs
inc
xor
xor
sbb
in
movsl
lret
jecxz
mov
cmp
adc
in
push
xchg
sub
xor
or
inc
sbb
jecxz
loope
adc
inc
and
or
int
add
arpl
xchg
and
nop
sbb
lea
adc
popa
lahf
mov
lret
mov
icebp
aas
cmp
pop
xor
push
push
pop
pop
dec
adc
push
push
dec
mov
jmp
in
repz
repnz
xchg
and
pop
lds
scas
sub
sub
fdiv
cmp
dec
xchg
lcall
push
js
dec
add
cmp
ss
outsl
pop
add
jo
cmp
pop
bound
push
xchg
jo
push
fcomps
xchg
insl
ret
bound
imul
push
inc
fwait
xchg
sbb
adc
add
popa
mov
loope
push
mov
jp
mov
daa
stc
pop
and
pop
jp
pushf
adc
cmp
jp
push
bound
xchg
sbb
or
push
mov
in
push
dec
ljmp
icebp
pop
sub
add
aaa
inc
xor
cwtl
aas
dec
adc
cmp
dec
and
or
aas
iret
lds
scas
in
js
iret
sub
jno
add
and
iret
mov
mov
lods
sbb
hlt
outsl
push
test
adc
js
js
add
in
icebp
setae
mov
xor
xchg
pushf
xor
dec
popf
jl
gs
adc
jg
scas
out
cmpsb
inc
mov
aaa
and
out
adc
cmp
sub
sub
fwait
out
mov
adc
dec
cld
sbb
movsb
lock
sbb
in
imul
mov
pop
pop
fwait
push
loop
adc
and
fwait
dec
scas
or
shl
pop
cmp
jo
xchg
cmc
addr16
mov
push
add
cmp
sarb
cmp
xor
data16
in
aas
fstpt
add
xlat
push
orl
pop
mov
dec
fistpl
cmp
pop
sub
push
xor
sub
leave
pushf
sub
jl
and
or
pushf
push
sbb
cld
cmp
shrd
lret
fwait
jecxz
mov
xor
sub
cmp
xchg
and
jg
inc
mov
sbb
cmc
icebp
fistl
pop
push
push
lods
jmp
arpl
pop
add
pushf
sub
adc
dec
loop
cmc
mov
dec
cld
jae
outsl
sbb
mov
data16
push
mov
jg
or
shlb
pop
adc
pop
xchg
adc
push
add
sub
outsl
push
sub
mov
cmpsl
pop
in
ljmp
inc
push
fcompl
sbb
xor
push
cmp
sub
xor
xor
fwait
dec
jecxz
mov
fsubrl
push
or
adc
cmp
and
js
adc
in
loope
sbb
push
or
dec
stos
repnz
sti
dec
mov
test
out
mov
sti
data16
jb
inc
add
fnsave
ficomps
sbb
adc
and
xor
sbb
xchg
adc
pusha
sbb
and
outsb
cmovns
mov
inc
adc
repnz
sub
push
add
pop
sbb
mov
in
xchg
lahf
les
sub
add
or
ret
pop
jb
push
ds
sbbl
and
push
cmp
pushl
pop
jo
xchg
pop
and
add
cmp
jb
xchg
mov
in
jae
adc
mov
and
icebp
cld
in
inc
scas
mov
mov
in
call
sbb
sbb
sbb
ds
sbb
sbb
xor
lcall
push
dec
xchg
dec
mov
repnz
repnz
inc
lods
or
in
dec
cld
mov
dec
loopne
xchg
lret
cbtw
test
fs
call
add
mov
cwtl
or
pop
popl
pop
popf
sbb
outsl
into
xchg
daa
mov
jp
xchg
sub
mov
and
jno
add
adc
sbb
pop
adc
mov
xor
aaa
mov
sahf
js
cmpsl
inc
outsb
sub
clc
loope
out
std
jae
setl
sub
xor
ret
xor
jo
pop
cmp
xor
fwait
or
mov
jmp
mov
pop
adc
and
xchg
hlt
mov
fwait
cmp
and
imul
cltd
sti
insl
sub
daa
repz
sbb
in
fs
xchg
repnz
adc
and
imul
outsl
xor
orb
and
icebp
in
mov
push
dec
in
push
add
js
dec
fldt
lcall
sbb
cmpsl
outsl
imul
sub
out
push
gs
outsb
and
inc
xlat
dec
sbb
addr16
cltd
icebp
add
pop
stos
adc
pop
mov
mov
andl
pushf
push
adc
ds
cmp
xor
jae
sub
icebp
jnp
fsubs
je
pushf
fimull
push
jbe
cmpsl
jno
adc
xor
sarb
mov
push
adc
adc
and
or
or
mov
fcompl
pop
xor
icebp
inc
imul
cltd
sub
insl
xor
mov
adc
sub
push
sbb
call
xchg
pop
test
cmpsl
nop
aam
xor
dec
cmp
out
shrb
lods
jle
and
and
pop
mov
jns
movsb
sbb
lock
icebp
jno
jle
add
rorl
lret
aam
or
fwait
or
lods
aaa
fistl
sub
dec
xor
data16
cmpsb
mov
data16
cmp
add
sbb
andb
or
aam
or
cltd
addr16
rclb
add
or
adc
sbb
jl
push
sbb
rclb
pushf
add
sbb
popf
repz
add
cmp
or
clc
push
fcompl
or
enter
push
lea
push
mov
add
pop
jnp
mov
jnp
xchg
ljmp
fs
test
shlb
loope
aas
outsl
cmp
stos
pop
pop
sbb
adc
sub
mov
xchg
xor
and
repz
jno
mov
andl
sbb
test
xor
push
and
push
jp
repz
adc
adc
and
insl
test
sub
sti
cli
mov
cmp
add
aad
fwait
sub
mov
add
pop
shl
rorb
jg
fcmovb
stc
jno
jge
lret
aam
adc
dec
xor
mov
stos
push
pop
ja
imul
push
dec
popf
in
jge
xchg
mov
push
fisttpll
cmp
or
cld
pop
jecxz
mov
adc
fs
lahf
push
sbb
xchg
mov
or
mov
mov
adc
push
jp
pop
mov
ret
loop
jle
xchg
add
adc
cmp
fcmovnu
into
push
scas
call
jle
jle
jmp
sbb
std
iret
or
fsts
push
sub
lds
xchg
inc
test
xlat
jp
pop
in
push
xor
push
sbb
adc
pushf
add
cld
dec
insl
xchg
stc
cli
lahf
pushf
sub
adc
das
inc
stos
jp
sbb
pushf
data16
xchg
icebp
xor
adc
adc
fistps
sbb
adc
cld
add
xchg
dec
hlt
xchg
pop
mov
repz
pop
bnd
sbb
fbld
jecxz
xor
hlt
or
lret
cld
clc
lret
leave
std
fdivp
repnz
stos
ret
nop
lock
addl
cld
pop
push
jge
es
mov
fcomip
das
fldl
push
or
fdivrs
lret
inc
pop
inc
lods
and
jg
or
sbb
call
add
shlb
push
cli
xchg
adc
in
mov
push
test
and
push
lods
sub
pop
stos
out
outsl
sbb
repnz
jmp
fs
fwait
fdivs
push
xchg
inc
jbe
mov
xchg
xchg
adc
sahf
sub
sbb
rorl
mov
jae
movlps
jae
xchg
cs
movsb
ljmp
pop
cmp
push
dec
cmp
xor
xor
sbb
cmp
and
pop
sub
xlat
push
sbb
mov
jae
clc
adc
gs
mov
dec
es
lea
adc
push
hlt
repnz
sbb
rcrb
pushf
icebp
icebp
xchg
pop
cmpl
sbb
adc
dec
dec
stos
subps
daa
cmp
or
cmpsb
ljmp
mov
daa
sbb
sub
adc
adc
icebp
pop
cltd
es
jg
adc
out
mov
sbb
movsb
xor
jmp
dec
adc
cmp
enter
les
sbb
sub
add
pop
stc
or
pusha
lods
jbe
imul
adc
sti
ret
push
out
clc
cs
push
pop
or
sbb
adc
push
in
cmpsb
pop
inc
and
cmp
adc
clc
pop
xor
jae
test
lea
sbb
add
fstl
sbb
idivb
mov
xor
hlt
mov
add
out
loope
and
stos
cmp
pop
call
sub
mov
xor
mov
push
pop
hlt
fcoms
cmp
sbb
sub
lock
loopne
fincstp
and
xchg
sbb
pop
mov
add
daa
xor
add
out
sbb
jecxz
xor
sbbl
sub
testl
dec
sbb
xor
jg
or
repnz
jge
xchg
repnz
push
inc
out
push
jg
popf
lock
roll
add
hlt
inc
pop
and
insb
dec
or
sbb
mov
inc
sub
movsl
xchg
sub
cwtl
pop
arpl
dec
icebp
adc
aam
cmovae
in
sti
lcall
clc
ss
mov
aam
pop
cmp
cld
shrb
or
sti
inc
xor
adc
sbb
popa
sub
sbb
movsb
lea
jle
sub
pushf
adc
lcall
push
sbb
or
sbb
mov
cld
mov
outsl
pop
in
cmpsl
test
orb
lock
je
and
call
cmp
sub
clc
int3
adc
or
bound
add
imulb
jo
push
shlb
ja
lods
sub
push
dec
pop
ja
lcall
stos
push
jne
sbb
xlat
in
test
push
js
lret
sbb
xchg
dec
dec
loopne
xchg
jle
and
xor
sub
clc
movsl
bound
and
cmpsb
cmpl
fisubl
adc
jle
pop
xchg
addr16
or
daa
mov
insl
pusha
test
dec
loopne
and
xchg
lret
pop
pop
adc
inc
lret
out
icebp
pop
mov
pop
jns
leave
inc
pop
lods
test
and
test
xor
ljmp
mov
xchg
cmp
out
es
sbb
mov
push
clc
test
clc
jg
or
pop
pop
and
jo
out
in
add
xor
sbb
aad
xchg
mov
pusha
int
in
pop
lcall
or
sbb
sti
in
inc
dec
mov
xchg
in
sbb
sbb
and
mov
adcb
sbb
mov
xor
int
pop
sbb
sub
loopne
jl
dec
pop
mov
minps
inc
adc
inc
clc
cld
lcall
in
pop
push
ret
rcrl
lods
cmp
lock
fs
pop
pop
popa
and
adc
mov
fistps
inc
inc
add
xor
adc
fs
inc
sub
jecxz
sub
cwtl
setnp
pop
and
sub
mov
inc
xor
inc
mov
inc
out
test
add
shl
mov
out
adc
lea
insl
lock
enter
mov
iret
movsb
jae
and
shrb
clc
mov
adc
add
lcall
mov
out
fldt
imul
test
add
mov
pop
pop
icebp
add
enter
sbb
mov
xorl
nop
mov
dec
iret
sahf
xchg
outsl
or
xor
fucomi
frstor
imull
fwait
cltd
adc
cwtl
and
ljmp
cmp
rep
bound
pop
sbb
jo
pop
outsl
jne
stos
push
ss
pop
dec
out
or
in
cmp
or
aas
and
pop
mov
jne
enter
dec
fcomp
inc
lcall
lret
or
cmp
add
sbbb
test
fs
push
sbb
sti
lcall
call
or
and
or
adc
push
icebp
or
xchg
push
pop
int
jl
pop
cmc
repnz
aad
add
mov
mov
xchg
sar
pop
repz
fnstenv
add
push
lods
pop
test
dec
js
ds
sbb
fnsetpm(287
pop
pop
pop
sub
push
push
add
insl
sbb
sub
int3
or
aam
outsl
pop
imul
cmp
sbb
in
ret
loope
and
sub
ret
popl
and
jp
fdivp
cmp
mov
xchg
cltd
add
xchg
sbb
lahf
lret
pushf
jmp
ret
fiaddl
popa
call
push
sbb
dec
fucom
push
inc
xchg
jae
lods
iret
filds
cmp
ljmp
fcmove
push
pop
insl
sbb
test
sbb
fwait
push
mov
mov
mov
bound
fs
icebp
cmpl
cwtl
movsb
mov
rcrb
xor
adc
insl
push
inc
fcoml
inc
cs
cmpsb
cli
movsb
adc
shrl
or
jnp
xchg
jo
sbb
aas
push
adc
or
jmp
xchg
push
sarb
mov
pushf
push
or
dec
mov
fs
fstl
ret
sbb
pop
rcll
pop
cld
repz
ljmp
in
loope
xor
pop
sub
sbb
aam
xchg
inc
lods
loope
pop
sbb
and
in
ss
imul
xor
loope
adc
push
mov
daa
pop
sub
push
loop
pop
push
cltd
push
out
fdiv
rcrb
sbb
pop
push
xor
pusha
aam
dec
cmp
lret
nop
icebp
cmp
cmp
sahf
xor
push
jo
insl
call
ret
push
cmc
adc
insb
or
lahf
push
gs
adc
pop
imul
adc
push
enter
inc
loope
push
pushf
and
adcb
in
sbb
adc
cltd
jl
mov
jbe
fsubrs
cmp
jns
or
push
popa
add
xchg
scas
repnz
push
in
adc
add
mov
es
fstps
ljmp
rcrb
inc
sbb
aaa
xchg
test
xor
adc
or
sbb
xchg
jb
adc
adc
add
xchg
mov
adc
jb
inc
pop
mov
sahf
out
aaa
pop
pop
sbb
or
xchg
scas
and
and
aaa
outsl
push
pushf
xchg
xchg
push
fidivrl
xor
jb
insb
pushf
mov
mov
icebp
jno
xor
mov
data16
lahf
cmp
inc
jo
ret
lret
ret
shlb
orl
int
cmp
sub
or
pop
dec
xchg
outsl
jle
xor
cmp
add
xor
jbe
test
pop
sbb
mov
mov
xlat
push
sbb
jg
lret
xchg
aas
movsl
out
pop
and
push
jg
sub
aaa
or
pop
sahf
cmp
filds
jle
cmp
cmp
xchg
ret
pop
push
fmull
inc
sbb
sbb
xchg
or
push
pop
rclb
shlb
xchg
mov
fcomp
fwait
push
enter
cli
cmp
pop
dec
outsl
adc
push
fstl
mov
scas
data16
mov
mov
xchg
test
je
lods
mov
out
push
call
push
fstps
cmp
and
loop
xor
fstps
mov
xchg
rep
push
pop
jnp
sbb
and
cmp
fstl
add
sub
dec
testl
adc
or
jl
cmp
fsubp
xor
add
sbb
sahf
jns
sub
adc
mov
jns
lock
stc
mov
adc
repz
xor
jb
jnp
in
xor
repz
mov
pop
adc
xlat
lcall
adc
test
push
cld
in
lcall
test
popa
movsb
test
stos
jp
dec
mov
dec
imul
push
testl
pop
and
imul
sbb
in
aam
insl
cmp
or
push
hlt
xor
ljmp
lcall
adc
adc
sub
fcoml
add
cmp
pop
sbb
pop
add
jg
pop
daa
call
push
sbbl
xor
cwtl
add
in
ret
sub
add
jb
roll
xor
cld
leave
cli
add
jecxz
sbb
push
pop
subb
rcrl
aad
jle
adc
mov
xor
pushf
pop
fmull
inc
pop
in
scas
sbb
ds
xchg
and
mov
push
xor
ds
or
mov
xchg
push
hlt
inc
mov
adc
sbb
popa
cmp
pop
sbb
xor
cmp
push
sahf
addl
fidivrl
dec
mov
mov
outsl
push
mov
push
out
cmp
sbb
dec
loop
lods
arpl
mov
pop
lahf
stc
js
xchg
es
outsl
push
mov
sub
test
adc
or
js
rorb
mov
cmovae
jbe
cmp
push
sbb
dec
jle
fadds
and
hlt
jne
je
dec
push
add
pop
push
jnp
icebp
popf
fcoms
cmc
cmp
int3
sub
xchg
or
sbb
or
jg
inc
hlt
dec
cmp
shrb
data16
repz
mov
pop
in
and
adc
div
sbb
incb
or
popa
hlt
ret
icebp
xchg
add
fmuls
cmp
stos
nop
sub
adc
scas
fistpll
mov
lret
outsb
sbb
cwtl
in
sbb
and
lret
insl
out
push
mov
in
push
jo
cld
pop
sbb
ret
pusha
add
sbb
sbb
pop
push
nop
pop
leave
xor
inc
fisubrl
jle
xchg
mov
cli
inc
enter
icebp
js
es
sub
mov
test
out
clc
dec
adc
push
push
pop
xor
fidivl
shll
fsts
push
adc
mov
sub
mov
xor
test
aam
faddp
aas
cmpsb
inc
scas
mov
pop
ljmp
dec
icebp
lcall
ret
std
mov
test
or
xor
or
sub
lea
lcall
lahf
dec
data16
push
inc
lret
jle
cmp
sub
negb
adc
in
insb
adc
cmp
cld
pop
push
jmp
das
push
cwtl
cld
test
fimuls
push
pop
in
xchg
in
lods
pop
pop
inc
and
repnz
iret
push
sahf
push
adc
lcall
or
pop
nop
ljmp
fs
push
sbb
out
push
push
popf
in
lock
bound
cmp
push
sbb
out
dec
hlt
iret
js
adc
pop
outsl
adc
lods
je
sbb
mov
adc
dec
push
xchg
pop
push
push
lahf
fstps
sbb
dec
insb
in
push
push
sbb
mov
fidivs
fxch
jmp
mov
sub
jb
dec
push
fabs
imul
movsl
fdecstp
pushf
mov
sbb
pusha
push
inc
dec
lods
pop
push
in
or
inc
push
push
cmc
xor
std
dec
mov
cmp
cmp
jo
xchg
loope
ss
inc
xchg
pop
sti
xchg
lea
mov
mov
cwtl
jb
xor
mov
sbb
sbb
cmpb
inc
inc
lea
aam
scas
movsb
push
sbb
mov
pop
aaa
add
cmp
aaa
xor
lds
pop
push
pop
in
repnz
jmp
xchg
or
and
outsb
xchg
nop
or
dec
pusha
push
shrb
add
out
xor
or
and
ss
mov
push
insb
lods
xchg
repnz
clc
test
push
imul
push
or
repz
sub
add
jno
or
pop
adc
prefetchw
mov
sbb
in
lds
les
mov
push
sbb
push
aas
push
dec
push
cmp
xor
fisttpl
hlt
xchg
jg
rcll
mov
addb
cli
enter
cmp
and
mov
inc
dec
stc
rorb
out
cmp
sub
push
test
dec
mov
inc
flds
pop
pop
mov
scas
pop
je
cld
xorl
cmp
adc
fimuls
imul
xchg
mov
jns
mov
xchg
and
lea
pop
sbb
cwtl
lds
mov
pusha
movsl
das
jle
outsl
mov
test
jmp
les
inc
mov
aas
mov
or
enter
pop
xchg
jg
and
push
mov
lods
lret
adc
addr16
fwait
jo
push
pop
cld
sbb
jmp
test
add
stos
cmc
js
loop
push
popf
neg
cmp
out
js
or
into
jle
jl
addb
and
xor
push
inc
xor
dec
or
mov
cmp
sbb
pop
pop
mov
je
mov
push
movsl
jp
and
fcomp
in
pop
cld
mov
adc
lea
sbb
sahf
scas
out
fs
xchg
fsubrs
jmp
popa
in
or
jns
jle
clc
adc
lea
or
sbb
adc
fdivrs
push
popf
mov
or
xor
sahf
lahf
xchg
rol
jle
aas
jg
out
jb
dec
or
inc
ror
adc
fildl
fdivr
adc
xchg
sub
sbb
ficoms
pop
jnp
xchg
inc
or
and
xchg
and
and
adc
push
adc
sbb
sbb
sbb
pop
xor
adc
es
xchg
sub
sahf
mov
and
dec
pop
aam
or
incl
mov
inc
icebp
lcall
ja
mov
xor
push
lahf
push
lahf
repz
adc
daa
add
xchg
fidivrs
inc
xchg
lahf
int
imul
outsl
sbb
xchg
insl
adc
loope
sbb
ror
in
insb
negl
pusha
or
bound
mov
sbb
push
in
cmp
mov
imul
dec
mov
inc
or
icebp
inc
fisubrs
imul
jecxz
sbb
pop
aam
icebp
ja
pop
lret
nop
cmp
push
arpl
cmp
push
pop
loop
fstps
es
xchg
add
adc
sub
icebp
xor
jno
sub
fs
fsubl
mov
repnz
sub
push
add
insb
pop
movsb
or
inc
jecxz
inc
push
mov
pushf
pop
xor
xor
push
push
mov
es
pop
push
cwtl
jmp
and
pop
cwtl
aad
outsb
ss
outsl
pop
pop
or
xor
daa
sub
mov
pop
mov
push
inc
pushf
fadd
jp
movsl
sti
test
test
sub
cltd
cmp
pop
mov
mov
mov
push
sbb
xchg
push
push
loope
aam
cld
add
jge
mov
outsl
pop
sbb
scas
fwait
add
cmc
sti
test
jb
push
jle
add
jmp
xchg
add
hlt
pop
add
push
mov
pop
add
push
fists
cmp
pop
cltd
leave
sub
aaa
fadds
cmp
dec
and
pop
sbb
sahf
repnz
data16
loope
out
xorl
sub
leave
or
fsubp
sbb
sbb
and
sbb
hlt
fcoml
shlb
ror
pop
and
xor
xchg
push
xchg
dec
add
js
imul
pop
fnstsw
in
fcmovne
pusha
adc
mov
es
or
jle
jp
mov
cld
cmp
lcall
inc
pop
mov
aam
push
adc
xchg
push
call
cltd
xor
cld
stc
sbb
xor
adc
jae
in
mov
sbb
orb
sti
xor
add
and
adc
pusha
mov
cmp
scas
fwait
pop
jne
or
lret
hlt
inc
es
mov
test
lea
fldl2t
xchg
fmuls
ss
and
mov
mov
or
les
xor
pop
jmp
push
fidivrl
hlt
fsubrl
mov
mov
test
test
push
push
mov
add
call
nop
adc
and
inc
jb
add
lods
push
jae
dec
sahf
pop
adc
pop
in
sarl
sbb
push
push
cmpsl
shrl
scas
pop
out
and
mov
call
pushf
mov
aas
push
or
in
mov
and
pop
test
inc
inc
mov
cmovle
and
xchg
pop
adcb
mov
stos
or
jae
push
icebp
jge
fwait
mov
jle
xchg
adc
loop
hlt
movlps
iret
adcb
movsl
add
std
in
and
fsts
sbb
cltd
dec
add
je
out
sbb
inc
loopne
sbb
and
cmp
pop
cltd
xor
and
dec
pushl
cmc
or
or
xrelease
sub
mov
cmpsl
sbb
pop
fiadds
cmp
das
mov
add
out
inc
int3
xor
jp
fwait
and
repz
mov
mov
ficompl
dec
ss
mov
fs
in
shr
movsb
inc
aam
mov
cltd
ficomps
sub
icebp
xor
pop
mov
test
rorl
xor
dec
sbb
sbb
fpatan
cmc
addr16
outsl
push
inc
mov
push
cmovae
xor
or
or
jno
or
in
ret
add
mov
adc
lock
mov
mov
fiadds
push
sbb
fistps
mov
pop
fwait
or
sub
sbb
sbb
push
das
inc
cmc
push
mov
pop
or
pop
sub
dec
dec
movsl
ljmp
or
xchg
pop
mov
jle
mov
or
pop
addps
push
add
icebp
or
or
rcll
jae
push
sbb
dec
and
xor
fistps
jbe
enter
clc
push
cmp
mov
pop
cmp
or
add
pop
aas
dec
push
aaa
out
mov
aam
pop
dec
add
pop
cmp
icebp
ficomps
lods
ror
sti
sbb
inc
loopne
pop
or
pop
dec
adc
popa
lcall
mov
sbb
and
addr16
test
adc
pusha
insb
fdivrl
data16
addr16
mov
out
cmp
sbb
pop
xor
xor
push
push
jae
out
mov
cwtl
out
add
test
cld
push
adc
cmc
pop
lret
inc
sbb
rcll
mov
or
add
into
mov
pop
ss
adc
mov
jae
xor
push
fucomi
sbb
sbb
cwtl
and
andb
pop
or
and
fdivrs
xchg
sbb
iret
mov
stos
jecxz
adc
repnz
outsl
sub
pop
popa
pop
push
scas
js
jnp
adc
pushf
and
sbb
sbb
mov
dec
lahf
fwait
sub
push
and
addr16
outsl
xor
cmp
dec
sub
cmp
jge
stos
adc
inc
out
or
jecxz
icebp
dec
mov
push
mov
mov
xor
arpl
pop
pop
inc
rcpps
push
sbb
pop
or
fisubl
pushf
xor
cwtl
pop
fmul
dec
mov
sbb
scas
cmpsl
bound
mov
cmp
add
dec
push
test
or
pop
push
hlt
mov
mov
outsl
sbb
cmp
rorb
jl
mov
mov
mov
jge
cmp
sub
adc
jl
xor
mov
nop
mov
sbb
lods
shll
mov
adc
push
fimull
inc
push
mov
pop
or
cli
pop
sbb
repnz
icebp
in
aaa
inc
aaa
dec
dec
adc
hlt
xchg
jmp
mov
fs
in
aam
adc
out
jl
mov
pop
ret
ja
icebp
inc
sar
sbb
call
or
repz
int
add
mov
stos
sbb
jb
dec
and
sbb
sbb
sbb
jecxz
adc
sbb
sbb
push
sbb
adc
scas
ret
movsl
loopne
lahf
into
cmpsl
mov
push
add
or
or
ljmp
pop
or
in
rcrb
cmp
and
xlat
add
cmc
pop
icebp
or
jbe
inc
adc
fstl
inc
test
cmp
dec
mov
push
xchg
xchg
mov
or
sbb
in
repnz
pop
mov
push
pushf
rcrb
aas
pop
inc
lcall
adc
inc
pop
in
add
icebp
sbb
xchg
sahf
sbb
mov
adc
dec
outsl
push
adc
popf
xchg
pop
fiaddl
push
cltd
add
rcll
add
inc
fwait
push
addl
sub
adc
push
out
sbb
in
cli
loopne
or
pop
test
sbb
xchg
popa
sbb
sub
mov
add
mov
bound
mov
adc
jo
dec
mov
sbb
xchg
insb
add
mov
cvtpi2ps
xor
sbb
test
std
cwtl
shll
cwtl
push
dec
jmp
mov
pop
inc
sbb
or
inc
subl
pop
or
xchg
pushf
push
mov
xor
inc
xchg
mov
cmp
movsl
push
mov
inc
push
cmp
push
int
xchg
mov
xor
test
frstpm(287
enter
faddl
jmp
mov
dec
sub
cmpsb
xor
sub
cmp
push
cmp
out
out
jecxz
cmpsb
stos
mov
inc
lahf
cmp
ds
pop
sbb
nop
mov
int
inc
and
xor
ja
orl
loop
lret
and
mov
xor
or
mov
fdivl
cmp
rcr
cld
adc
call
jb
jle
push
or
mov
jb
sbb
in
mov
fs
lds
adc
faddp
sbb
xchg
sub
cltd
mov
ss
shll
jg
or
jmp
cmp
adc
mov
push
push
push
insl
mov
xlat
sbb
cmp
jbe
icebp
shlb
xor
loope
movsb
lods
xor
call
sub
dec
xchg
fldl
test
cmp
out
inc
and
call
mov
xor
push
insl
sbb
pop
add
sbb
cwtl
loope
xor
push
adc
icebp
and
int3
or
xor
dec
loope
mov
or
call
pop
out
sahf
adc
pop
mov
add
adc
pusha
pop
and
dec
cmp
dec
mov
adc
add
xchg
insl
or
imul
repz
mov
fstpt
fs
gs
sbb
cld
dec
push
popf
imul
sub
adc
mov
push
inc
mov
adc
mov
and
in
test
mov
in
iret
xchg
out
adc
cmp
outsl
pop
out
mov
jl
fs
dec
mov
sbbb
dec
shll
jl
xchg
mov
aaa
sbb
fadd
jecxz
iret
stos
inc
pop
xchg
dec
or
repnz
rcll
fcompl
lods
and
sub
sbb
ficomps
xor
shl
rolb
mov
push
adc
pop
jb
inc
push
pushf
adc
in
addb
repz
insb
fstl
imul
sub
ss
sbb
out
out
dec
jnp
or
pop
sbb
or
cld
cmpsl
jae
mov
shll
insb
inc
dec
lcall
push
inc
or
sbb
add
pavgb
mov
lcall
and
aam
movsl
ret
dec
add
jb
xor
lock
ret
data16
lahf
cmp
jle
pop
adc
movsl
in
faddl
pop
repz
mov
ss
or
ret
jg
icebp
fs
dec
sbb
mov
jnp
lret
mov
icebp
cmp
sar
cmp
leave
in
push
or
dec
push
rorb
adc
icebp
js
push
sbb
dec
sub
in
aaa
fcompl
out
pop
cli
mov
sbb
outsl
pop
xchg
stos
sbb
aam
fnsetpm(287
icebp
add
or
scas
dec
cwtl
shl
vmovsd
adc
aad
sbbb
outsb
mov
cmpsb
sub
pop
add
push
dec
repnz
adc
dec
pop
adc
scas
xor
or
pop
fwait
push
pop
mov
gs
adc
loopne
push
push
stos
xchg
es
or
sub
loope
lock
aaa
inc
hlt
fldl
sbb
testb
in
xchg
mov
outsl
push
and
pop
lods
adc
xchg
lock
jns
xor
stc
stos
inc
aam
rcrl
xchg
push
adc
out
jnp
mov
fidivs
outsl
mov
adc
sub
cmp
stc
dec
xchg
push
cmp
sti
or
icebp
nop
mov
mov
nop
addr16
xchg
pop
lret
and
rcr
jg
psraw
sub
dec
lods
jno
pop
popa
rcrl
sbb
js
outsl
daa
pop
sarb
fsubl
jl
sbb
add
sbb
and
and
jmp
pop
loop
mov
or
inc
add
cld
stc
mov
adc
aaa
push
lcall
fsubr
push
xchg
push
repz
xchg
xchg
fisubrs
mov
subl
or
addr16
rorb
and
pop
xchg
pop
fcoms
jno
xchg
mov
or
fcomps
push
popf
shrb
sub
in
or
leave
testb
pop
xlat
leave
adc
sbb
sbb
rorb
outsb
mov
mov
jnp
sti
adc
sub
push
sub
sbb
cmp
cli
repz
jb
into
je
inc
inc
sbb
xchg
sbb
outsl
mov
rcll
dec
dec
sbbb
out
int
enter
or
lods
xchg
das
cwtl
mov
arpl
or
cmp
push
xor
fsubrs
push
jne
js
int3
mov
push
cltd
mov
adc
aaa
pushf
add
outsl
test
jae
outsl
sub
push
mov
fwait
cmp
std
and
cwtl
jnp
inc
lcall
pop
arpl
push
mov
inc
jmp
jo
and
sub
adc
add
pop
add
fs
inc
add
std
inc
xor
mov
cld
mov
out
mov
cld
sbb
cmpsb
int3
mov
lods
push
mov
mov
cld
lods
fsubrs
hlt
cli
data16
fcompl
aam
clc
add
gs
les
add
adc
iret
adc
pop
outsl
sbb
std
mov
push
inc
xchg
add
popf
insl
sbb
enter
fs
sub
adc
sub
out
repz
mov
and
lret
pop
out
pop
add
xor
mov
add
enter
gs
fnstsw
icebp
push
mov
or
sub
mov
xor
mov
adc
mov
sbb
pop
adc
or
data16
jns
add
jg
xchg
push
or
out
nop
push
fsts
fbld
adc
jns
inc
jl
xchg
xchg
and
push
and
out
hlt
xor
aam
cmp
cli
cmp
inc
inc
jb
jne
add
mov
xchg
icebp
xor
scas
jae
sbb
lret
adc
mov
fimull
movsl
push
shrb
cmc
dec
or
cmp
inc
imul
add
or
ret
sbb
mov
sbb
adc
or
repz
cmc
inc
push
testl
imulb
dec
xchg
push
pop
out
mov
ds
xchg
pop
and
nop
pop
js
inc
inc
cltd
jb
icebp
jg
stos
xlat
or
cltd
xchg
out
jge
mov
xchg
repz
icebp
adc
pusha
push
xchg
cmp
in
dec
push
rep
pop
out
fldt
icebp
test
push
in
mov
movsb
scas
test
push
cltd
clc
mov
xchg
inc
sbb
fwait
popf
adc
xchg
fs
cmp
lds
out
mov
xchg
insb
pushf
fsubrs
movsl
and
je
sbb
fldenv
mov
into
pushf
sub
push
std
xor
addr16
mov
in
push
jb
or
and
mov
mov
out
mov
pop
jae
icebp
in
or
cltd
adc
add
aas
arpl
stos
sub
pop
mov
dec
loope
xchg
clc
mov
mov
jo
pop
or
mov
fcoml
adc
and
or
daa
ficompl
jbe
adc
aad
rcrl
dec
push
jmp
xchg
push
nop
lret
pop
sbb
pop
inc
daa
mov
inc
sbb
cli
out
test
cld
inc
pop
xchg
dec
std
add
fisubl
rcr
loope
scas
push
movsb
xchg
jns
mov
sbb
lea
dec
adc
push
sbb
movsb
stc
inc
xchg
and
xchg
inc
sbb
pop
adc
or
jno
and
mov
imul
add
daa
pop
pop
xchg
xchg
jo
jmp
rcrl
mov
mov
cli
js
sbb
rcll
and
mov
sarb
add
adc
aam
pop
sub
adc
or
mov
outsb
lret
lahf
outsb
roll
in
divl
jae
leave
loop
cmp
leave
or
xchg
test
or
jp
in
cli
sub
add
sbb
call
gs
sti
and
bound
inc
jl
icebp
aaa
iret
adc
inc
jae
inc
cmp
sub
stos
sbb
push
cld
lock
sarb
xor
mov
lock
dec
imul
and
push
cs
sbb
dec
out
xchg
mov
inc
adc
xor
ror
jmp
dec
les
inc
cmc
lret
pusha
xchg
xchg
or
lahf
clc
push
stc
xchg
xor
mov
in
stos
push
sahf
adc
cmp
sbb
push
add
notb
rcll
lret
fstpl
jg
push
lret
and
xor
adc
or
sbb
jl
sub
cmp
test
xchg
push
sbb
les
repz
mov
sub
push
mov
rorl
mov
in
sub
pop
getsec
and
cltd
loop
sbbl
loop
lea
or
sbb
idiv
shrb
mov
sbb
aaa
icebp
sti
dec
sub
outsb
jmp
movsl
fidivl
sbb
and
shlb
sahf
fwait
mov
sbb
pop
dec
mov
mov
xchg
xchg
dec
pop
mov
push
jl
into
icebp
and
and
pusha
and
std
jae
or
jb
adc
mov
aam
data16
adc
sub
lea
dec
es
mov
stos
add
insb
sub
ss
data16
push
clc
sub
mov
jg
adc
sbb
and
pop
xchg
or
push
push
xor
or
mov
inc
or
or
mov
or
cmp
in
xchg
mov
jo
ret
arpl
and
mov
adc
mov
fs
sub
insl
sub
add
add
push
sbb
add
push
push
jb
icebp
sub
out
pop
mov
jmp
les
push
sbb
push
cld
jle
and
dec
icebp
hlt
je
loop
imul
out
mov
lahf
xchg
mov
mov
push
adc
sub
mov
and
nop
cmp
in
cmp
adcl
mov
pop
adc
fs
sbb
sbb
cmp
lahf
repnz
cltd
push
push
lahf
es
push
out
push
movl
aas
cwtl
pop
pop
adc
je
and
add
gs
jg
ss
test
pop
call
xlat
mov
cmp
xor
fiaddl
pop
sub
cwtl
or
scas
push
mov
inc
adc
dec
pushf
xor
pop
dec
pop
xor
cmp
in
pop
add
push
loope
rorl
js
cmp
jecxz
inc
in
imul
push
loopne
push
or
sbb
inc
repnz
adc
mov
jge
adc
dec
pop
in
outsl
add
dec
push
out
arpl
push
roll
dec
xchg
cmp
xchg
mov
call
inc
add
dec
sub
jbe
cmpsl
cmp
ds
repnz
push
es
push
xlat
js
loopne
jecxz
pushf
daa
and
sbb
and
mov
adc
jnp
popa
add
adcb
jo
mov
dec
or
test
mov
fisttpl
cmp
cmp
pushf
aas
dec
ret
lret
inc
daa
push
in
ficoml
mov
and
inc
ror
adc
popa
test
repnz
sub
sub
shlb
iret
ret
sub
leave
ror
nop
mov
or
jbe
dec
or
push
dec
jmp
cld
lods
inc
or
adcb
loope
mov
cli
cmc
or
scas
insb
xor
insb
out
push
sbb
xchg
jo
in
fcomi
add
mov
mov
sti
in
inc
add
push
lds
test
flds
xchg
pop
push
sbb
jne
aad
xlat
aad
mov
lods
aam
adc
and
dec
sub
push
and
xchg
push
xor
sbb
sbb
dec
inc
dec
mov
addr16
mov
inc
scas
loope
jb
loope
adc
sbb
inc
aas
jbe
sahf
sahf
adc
cmp
add
mov
fsubrl
cmp
iret
andl
mov
mulb
and
gs
in
sbb
leave
cmpsb
addr16
lahf
jle
adc
pop
call
out
jle
in
and
pop
adc
dec
add
xchg
jg
or
cmpsb
ljmp
dec
sbb
clc
rorb
pop
std
cld
xchg
repz
cmp
pop
lock
adc
loope
cmc
and
out
sbb
aaa
icebp
sbb
lahf
mov
outsl
push
bnd
xor
loop
psubw
sbb
sbb
sub
out
jle
mov
bound
ss
repz
in
xor
sbb
xor
pop
lea
push
movsb
cli
jae
cmp
ss
sahf
add
add
jl
cmp
jno
sbb
inc
pop
fcoml
jl
stos
pop
push
add
xchg
or
ficoml
or
jae
adc
push
pop
inc
sbb
mov
pop
mov
push
loop
rcll
addr16
leave
test
jecxz
mov
out
dec
in
adc
push
mov
js
sbb
loopw
and
clc
pop
cmp
xor
sbb
insl
out
rorl
or
push
ja
lods
cli
sbb
repz
enter
ja
test
sahf
pop
and
xchg
sbb
test
out
add
add
jmp
ja
or
cmp
pcmpgtd
pop
cmp
jne
sbb
and
icebp
xor
inc
outsl
mov
outsl
pushf
sub
icebp
loopne
gs
mov
insl
stos
push
rorb
xchg
shl
xchg
mov
ljmp
adc
pushf
idivb
ljmp
fs
das
xchg
cwtl
adc
sbb
push
dec
mov
adc
add
sbb
in
sbb
push
xor
xor
pushf
adc
shrb
adc
inc
or
jnp
push
xor
sbb
call
pop
xor
jns
fisubl
push
leave
stos
sbb
or
push
push
lock
mov
push
mov
cmp
fwait
push
std
mov
jle
cmp
xchg
or
or
mov
inc
js
push
mov
loop
movsl
out
popf
pop
mov
jp
icebp
and
mov
ficompl
outsl
or
js
dec
shll
xor
inc
and
sub
repz
inc
add
cld
cmp
add
and
or
subl
mov
mov
xchg
mov
adc
and
sbb
loope
adc
adc
sbb
sbb
test
out
insb
or
or
nop
mov
or
outsl
cltd
decb
lods
adc
cld
lret
xlat
lods
gs
loopne
add
call
sub
add
jo
mov
adc
adc
sbb
aas
inc
inc
std
fs
adc
stos
repnz
lret
push
or
sbb
push
mov
loopne
lods
sbb
adc
pop
pop
ret
pop
in
push
pushf
push
sahf
pop
repnz
je
movsl
ret
sub
aad
arpl
insl
adc
add
jo
add
outsl
jge
pop
not
xor
js
or
pop
lods
jle
pop
mov
mov
fsts
dec
icebp
push
mov
call
xchg
mov
mov
out
adc
cltd
push
push
push
adc
push
js
adc
pop
push
push
pop
ret
icebp
pop
cs
lds
in
call
leave
fs
cltd
ds
data16
imul
mov
jo
cmp
les
dec
nop
add
sarl
jno
gs
std
and
pop
dec
dec
pushf
cltd
flds
fnstenv
sbb
push
xchg
fwait
and
fadds
dec
adc
dec
incb
out
push
jne
gs
pusha
cltd
cld
pop
lods
adc
fcoms
and
inc
fisubl
cltd
sbb
add
shlb
gs
adc
into
insl
cmp
mov
stos
adc
mov
cld
or
pusha
push
sti
lret
call
mov
jg
mov
sti
jmp
and
push
icebp
inc
push
dec
mov
push
jl
cld
add
ss
add
dec
dec
and
push
jmp
popf
daa
roll
mov
cmp
aas
gs
push
adc
cltd
push
mov
stos
int
and
mull
or
movsb
dec
cld
cmpsl
sbb
in
xor
sbb
mov
ds
scas
aas
jb
inc
gs
fstps
nop
call
adc
push
cltd
xchg
sbb
repz
lds
fwait
pusha
sbb
icebp
scas
leave
xchg
xor
mov
xor
and
and
addr16
cmp
pop
loopne
and
rcrl
cmp
cwtl
mov
pop
or
adc
sbb
cmp
mov
pushf
insb
push
sarl
mov
cmp
aas
addr16
inc
mov
dec
fstpt
push
push
lods
push
in
push
adc
dec
adc
cld
jl
push
push
add
mov
push
xchg
cli
dec
add
out
or
es
and
mov
push
loope
ret
mov
movsl
mov
int3
mov
mov
push
shrb
cmp
push
pop
adc
or
push
in
jbe
dec
push
inc
stos
mov
mov
mov
xlat
sbb
scas
fcoml
cmpl
lods
dec
mov
push
or
pop
mov
sbb
dec
adcb
push
push
outsl
cwtl
in
sub
aas
gs
add
adc
mov
jmp
les
in
std
addl
add
dec
in
jl
mov
cld
xchg
jp
or
stos
mov
rcrl
out
mov
adc
pop
fstpl
shl
mov
sub
jmp
mov
cli
in
or
shlb
and
cmpsl
dec
push
dec
ret
mov
inc
sbb
dec
add
shl
dec
push
in
pop
xchg
insb
lahf
insb
in
xchg
xchg
scas
sti
mov
clc
aas
add
xchg
shrb
outsl
jp
clc
ret
icebp
dec
push
hlt
push
sbb
ljmp
ss
aam
scas
dec
xchg
pop
sbb
out
sbb
stos
into
mov
push
test
mov
das
add
clc
xchg
push
incl
jbe
les
jbe
in
xchg
setp
cwtl
push
outsl
mov
rol
jmp
or
in
jae
cmp
xor
push
xor
sbb
sub
sbb
push
in
pusha
js
xor
enter
inc
aam
jg
int3
das
push
insb
xchg
outsl
mov
inc
xor
mov
je
dec
in
fadd
mov
test
lcall
movsl
out
pop
push
shrb
out
cwtl
rcrl
fmull
adc
fcompl
movsb
inc
es
or
pop
push
mov
push
punpcklwd
xchg
mov
arpl
arpl
adc
ds
loope
push
push
pop
and
or
add
fisttpl
push
push
pop
mov
mov
dec
rorb
mov
in
cmc
stos
aaa
inc
out
fistpll
cmp
adc
shlb
dec
cld
inc
mov
dec
add
cwtl
fstpl
out
outsl
movsb
pop
mov
pop
and
jb
mov
adc
adc
mov
icebp
adc
aaa
pusha
push
xor
insb
xchg
ret
mov
fsubs
lcall
mov
push
cs
pop
out
int
or
call
jle
sti
jp
sbb
cmp
ja
add
or
mov
push
lret
paddusb
xor
inc
sub
fstpl
ds
lea
inc
shrb
push
outsl
cmp
cmp
xlat
or
pop
pushf
movsl
adc
mov
adc
cmp
mov
xchg
nop/reserved
push
add
dec
sbb
and
push
jae
fidivrs
mov
popf
mov
push
out
pushf
mov
jb
inc
xor
pop
popf
sbb
and
mov
or
pop
cwtl
in
jae
cmp
pop
das
mov
ret
or
sbb
mov
fs
pop
mov
or
cltd
and
imul
adc
adc
add
outsl
sbbb
inc
fdivl
daa
push
pop
lret
fwait
or
xor
pop
pop
add
add
mov
leave
negb
stc
push
daa
int3
or
push
sbb
adc
repz
iret
lahf
xchg
cltd
es
xchg
mov
data16
sbb
mov
or
sbb
jge
jp
push
fsts
mov
fisttps
add
and
adc
push
lods
push
lahf
icebp
sub
cmpsb
fs
push
test
lea
cmp
adc
push
pop
mov
icebp
dec
cmp
les
cwtl
movsl
mov
and
clc
add
lods
dec
jnp
adc
in
inc
cmp
pusha
mov
and
fstpl
movsl
mov
sbb
lcall
stc
clc
or
ret
xor
inc
mov
mov
stos
xchg
cmpsl
clc
rclb
pop
or
jae
push
outsb
cmp
scas
pop
push
je
adc
fistps
pop
in
dec
cmp
das
inc
in
inc
and
jae
jae
jnp
or
xchg
cltd
inc
in
cld
aam
je
xchg
sbb
jno
fs
inc
leave
cltd
mov
inc
push
and
adc
mov
jnp
and
add
pushf
fmul
mov
dec
lahf
lods
push
fs
mov
pop
or
push
jo
sti
or
repnz
mov
cld
int
sub
inc
or
mov
ficoml
inc
jb
dec
dec
push
adc
arpl
mov
rcll
enter
mov
inc
pop
mov
adc
and
in
sahf
mov
mov
fidivl
add
sahf
js
sbb
xchg
sbb
insb
cwtl
or
sbb
or
repnz
js
jp
adc
pop
insl
shlb
or
cmp
in
adc
adc
or
or
mov
aam
jle
frstor
aaa
pop
js
movsb
cmp
arpl
xchg
pop
adc
sbb
scas
lea
jmp
adc
aad
inc
adc
jg
fnclex
fwait
pop
and
push
add
or
sbb
stos
jl
insb
push
mov
adc
jbe
in
sub
push
pop
mov
rorl
inc
pop
push
insb
imul
fcompl
pop
loope
rcll
push
and
aad
lcall
mov
inc
jnp
or
xchg
imul
out
push
je
pop
int
sbb
lcall
bound
sbb
xchg
imul
and
sti
mov
mov
pop
cmpsb
fldenv
or
or
mov
inc
sub
int
jmp
sub
aaa
sbb
lret
mov
dec
fadds
inc
mov
sti
sbb
subb
fiadds
or
fwait
cwtl
leave
movsl
mov
pop
lds
addr16
push
pop
push
fists
loop
sub
lret
mov
sub
aas
xchg
pop
adc
cld
jl
push
sbb
and
mov
pop
cld
fs
arpl
adc
mov
inc
insb
mov
sub
or
xchg
dec
in
and
dec
pop
sub
push
cmp
jg
insl
add
cs
and
mov
imul
sbb
inc
aad
test
cmp
cmp
lea
pop
pop
inc
pop
icebp
fsubrl
movsb
stos
dec
adc
rclb
jl
scas
pop
xchg
xchg
fdivrl
jns
or
fsubrl
inc
mov
arpl
jmp
es
scas
pop
jbe
movsl
scas
inc
pop
sbb
mov
cmp
iret
mov
mov
mov
cwtl
data16
and
rcl
insb
data16
clc
xchg
sarb
pop
adc
cwtl
pop
inc
cmp
adc
push
push
adc
adc
cmp
or
push
in
dec
jl
sti
cmp
or
push
lock
dec
xor
mov
pop
adc
xchg
ficoms
pop
cld
dec
cmpsb
jmp
and
xchg
adc
mov
inc
fisttpll
sbb
mov
or
inc
mov
or
mov
leave
mov
push
add
pop
push
repz
dec
out
fisttpl
fisttpl
ss
add
add
je
call
pop
and
sbb
and
cmp
cld
dec
jp
jo
jne
adc
adc
cltd
daa
mov
call
adc
jo
mov
jl
bndstx
imul
sub
jns
fdivr
add
dec
xor
aaa
mov
mov
imul
icebp
ds
das
add
sbb
jmp
fldl2e
mov
lods
add
call
icebp
lret
push
out
jg
lock
mov
cbtw
mov
or
test
cmp
mov
xchg
and
sub
xor
mov
loope
jp
push
in
xor
cwtl
sub
or
mov
adc
sbb
pop
or
cmpsb
gs
pop
clc
cmp
pushf
pop
jo
or
and
adc
sub
popa
add
cmp
repz
jg
daa
adc
lods
mov
push
test
icebp
adc
sbb
mov
mov
and
xchg
fcomps
lods
push
or
push
stos
sub
test
adc
mov
push
cmp
fdiv
jp
mov
inc
mov
adc
push
fwait
dec
sbb
bound
repz
sahf
fimull
icebp
test
fmull
mov
pop
adc
push
mov
add
push
and
inc
movsl
dec
push
js
mov
push
xor
dec
mov
mov
aad
repz
push
jae
stos
cli
aaa
int
or
fisttps
xchg
adc
adc
loope
aas
or
mov
jecxz
xor
loopne
jns
push
push
aas
push
push
dec
mov
xchg
jmp
sbb
imul
aaa
rorl
push
mov
cmp
or
pop
pop
sbb
push
sbb
sbb
adc
inc
xchg
lods
aaa
push
addl
leave
les
in
xor
cwtl
pop
pusha
xor
fildl
fmull
add
pop
sti
jne
imull
jg
scas
fldcw
lea
push
lahf
lods
pop
fwait
mov
xor
sti
adc
and
cltd
inc
xchg
ret
ret
faddl
adc
jl
sahf
sbb
mov
inc
xor
pop
push
mov
int3
mov
push
mov
adc
pop
repnz
imul
int3
fimuls
aas
xchg
push
iret
cwtl
mov
mov
mov
shl
or
or
loopne
clc
loop
mov
cmp
xor
sbb
shlb
mov
std
fcomps
adc
fdiv
add
xchg
or
sbb
ds
mov
les
fidivrs
adc
pop
inc
cmp
pop
les
and
sbbl
and
mov
int3
mov
push
or
rorl
and
add
and
sahf
lea
cmp
pop
mov
jno
subb
sbb
push
mov
lahf
sub
jb
add
add
push
shlb
push
cmpsl
cli
push
cwtl
jp
lret
or
cmpsl
rcrb
dec
xor
movsl
shll
xchg
adc
test
js
pop
inc
pop
lcall
pusha
test
fldenv
push
cmpsb
int3
jmp
out
cs
dec
lods
jl
xchg
pop
jl
or
cmp
push
sahf
rcrb
or
xchg
sub
push
push
pusha
sbb
hlt
cltd
data16
xlat
pop
lock
jl
ljmp
or
fstps
push
or
inc
imul
xchg
stos
mov
push
fisubrl
imul
sbb
dec
xchg
pop
cmp
aam
sarl
inc
mov
or
add
jnp
inc
adcb
adc
movl
xor
andl
and
in
addr16
xchg
in
push
sbb
add
mov
sbb
xchg
pop
in
push
inc
mul
cmp
push
outsl
clc
mov
dec
xor
imul
sbb
negb
sbb
adc
nop
lods
xor
push
pop
dec
or
mov
jb
in
movsl
or
lods
test
inc
sahf
cli
pop
jae
call
or
outsb
mov
fwait
movsb
les
out
and
loope
dec
add
or
jno
shrl
jmp
loop
je
mov
adc
in
fisubrs
movl
add
loopne
pop
lods
xorb
test
sub
sub
and
test
cs
push
insb
sbb
push
dec
icebp
cld
repnz
jg
jbe
push
sbb
addr16
jl
call
xchg
push
xor
and
imul
jp
adc
mov
xchg
sub
dec
mov
push
add
sbb
xchg
enter
add
jl
sbb
in
fs
iret
cmp
xchg
cmp
pop
add
rorb
mov
mov
push
pop
std
adc
int3
lahf
inc
icebp
in
push
push
inc
dec
das
push
out
lret
sbb
dec
cld
mov
roll
rorb
push
hlt
sarb
mov
push
bound
int3
sti
pop
aaa
pop
lods
aam
and
mov
dec
inc
dec
test
dec
cmp
pop
add
mov
or
dec
mov
mov
xlat
jp
das
in
inc
mov
cmp
mov
dec
mov
repz
mov
add
cmp
es
cmpsl
lret
insb
js
xor
mov
dec
inc
shll
mov
or
data16
adc
pop
movsl
mov
orb
and
jb
xchg
xlat
js
insl
scas
clc
and
and
popf
sbb
lret
and
xor
sub
fwait
sub
iret
insb
push
mov
cmp
fistpl
adc
out
cwtl
sub
or
mov
push
clc
or
or
xor
icebp
mov
inc
cmc
jl
adc
sub
dec
adc
std
inc
adcb
dec
lds
lahf
and
movsb
xchg
xor
cmp
cmp
cs
imul
jbe
aad
mov
aad
adc
pop
sti
mov
and
outsl
cwtl
in
sbb
cld
aad
sar
cwtl
cmc
stos
cmpb
or
push
aad
cmp
cmp
or
call
or
dec
or
cmp
xchg
sub
sbb
sbb
pushf
mov
pushf
out
lahf
add
mov
mov
cmp
sbb
stos
dec
adc
jmp
or
and
cmpsl
mov
push
sbb
ss
adc
je
rclb
in
movsb
xor
jecxz
mov
cltd
fldt
sbb
cmc
xor
xchg
push
fsts
mov
push
mov
lcall
mov
sbb
push
imulb
bound
push
rcll
sbb
jb
in
pop
dec
shrl
cmp
jnp
pop
dec
negl
js
dec
mov
jb
mov
xor
ror
aam
pop
mov
mov
push
adc
cmpl
mov
out
stc
fmull
addb
shlb
pusha
sub
mov
data16
sub
icebp
sbb
and
mov
dec
cmc
dec
fcmovu
scas
pusha
outsl
fdivs
aam
xchg
fmulp
pop
jl
popa
push
cmp
sub
adc
cltd
jbe
mov
mov
mov
xor
int3
xchg
xchg
sarl
inc
iret
addr16
add
ror
jl
jo,pt
cmp
sbb
pop
push
decl
shl
jecxz
and
pusha
adc
fadds
sbb
xchg
and
bound
call
sarl
fld
fidivrs
pushf
mov
fsubl
xor
jae
adc
push
cld
and
popa
movsl
push
insb
add
add
sti
sbb
mov
bt
pop
xor
inc
test
mov
test
in
push
aam
insl
cmp
fnstsw
adc
in
jns
mov
mov
pusha
div
xor
pop
enter
int3
mov
sti
sahf
sbb
or
iret
cmp
lods
mov
movsb
lcall
lods
cwtl
push
adc
sub
js
dec
push
sub
xchg
pushf
lds
stc
sbb
jb
rclb
adc
fsubrl
and
cwtl
jae
aam
and
cli
sbb
cld
cmp
sub
icebp
shlb
hlt
push
adc
dec
cmp
iret
mov
les
jbe
lds
and
adc
cwtl
jecxz
cmpsb
push
cmp
fsubrs
ss
jg
dec
push
mov
mov
inc
xchg
iret
aaa
jmp
pop
jo
xor
or
push
push
dec
and
and
outsb
lret
dec
or
mov
in
sub
orb
js
add
cld
inc
pop
fwait
sub
or
sub
das
push
sub
dec
lods
and
push
addb
xor
dec
push
adc
xor
mov
pushf
ficoms
ret
ret
adc
cmp
adc
dec
cwtl
fidivl
mov
xchg
cmp
pop
add
lret
cli
sub
xchg
xor
xlat
out
movsl
fwait
shr
sub
jnp
cmp
sbb
sti
rorb
pop
xor
negl
inc
fdivrl
add
gs
jg
cld
lods
cld
xor
mov
fstl
pusha
ds
shlb
sti
add
adc
cmpsl
sti
sub
cmpsl
push
push
add
add
dec
mov
lods
cmp
lahf
aas
sbb
cmp
ss
cmpsb
push
push
das
pop
jmp
test
mov
dec
sub
pop
sbb
lock
daa
pop
call
push
aaa
mull
mov
cmp
bound
fcomps
mov
insb
movsl
or
sub
sub
mov
mov
sub
or
fs
jge
sbb
or
cmp
lahf
cmp
xor
dec
push
mov
dec
or
add
outsl
xor
mov
lods
xchg
test
in
jns
xchg
or
iret
and
xchg
call
adc
movsl
xchg
add
pusha
jbe
push
adc
test
sbb
adc
pop
dec
xor
js
jg
sub
cltd
xor
fsubrp
lea
daa
mov
enter
xlat
shl
push
push
push
std
loop
cmp
add
lret
sub
inc
sub
icebp
fnstsw
lods
push
push
loop
or
jno
dec
aam
jno
push
aam
jge
lock
sub
and
ja
cmp
icebp
repnz
pop
or
mov
push
mov
pop
into
fucomp
xor
in
sahf
cmp
fs
outsl
jmp
and
add
cltd
lret
out
imul
pop
or
mov
push
cld
or
rep
adc
dec
leave
adc
lods
outsb
push
and
inc
and
cwtl
xchg
sbb
sbb
mov
jge
hlt
scas
xchg
imul
inc
mov
sub
std
push
fisubrl
jecxz
pop
cwtl
scas
xor
inc
shlb
call
push
push
ss
mov
add
in
loop
sti
sub
and
or
pop
lods
cmp
lahf
ljmp
mov
add
fisubrs
lret
in
imul
dec
and
dec
dec
inc
sub
call
jecxz
icebp
jmp
lock
fadds
and
or
bound
push
dec
inc
ja
jno
int3
mov
test
stc
push
adc
xor
mov
imul
pop
xchg
jle
sahf
push
push
jns
mov
mov
inc
adc
xchg
cmp
jecxz
inc
and
fsubrl
loope
mov
add
insb
or
dec
scas
adc
loopne
mov
scas
push
inc
jp
xor
add
sbb
rcrb
outsb
or
test
pop
pop
jns
loop
hlt
mov
shll
cmp
sbb
cmp
jmp
or
dec
xchg
and
pop
aaa
leave
push
inc
mov
xor
mov
lcall
dec
cmp
movsl
arpl
adc
sbb
and
shrb
outsb
push
dec
ror
and
push
add
nop
andb
adc
hlt
pop
and
xor
inc
ljmp
cmpsl
cmc
sbb
loopne
jns
loop
push
and
sbb
pushf
xor
sbb
movsl
clc
mov
ds
xchg
jns
jb
cmp
pop
loopne
popf
lret
inc
mov
jno
rclb
sbb
icebp
fisubs
pusha
add
cmp
popf
mov
push
cwtl
push
daa
jno
cmp
adc
sbb
notb
xor
pop
add
jae
or
jnp
xorb
mov
cs
icebp
dec
rcrb
data16
outsl
into
push
mov
push
and
outsb
lcall
arpl
int
pop
into
push
cltd
sahf
dec
mov
and
movsb
sbb
in
sbb
loope
insl
push
lret
dec
dec
in
cmpsb
dec
icebp
stos
or
mov
mov
lds
xchg
push
cmp
xchg
scas
icebp
es
scas
cld
in
lds
scas
cmp
mov
pop
mov
sbb
sub
jb
movsl
xchg
or
mov
fdivr
cmp
in
jmp
pushf
and
pop
test
call
mov
cli
xor
adc
ficompl
in
fdivl
sbb
std
adc
aas
mov
add
inc
insb
push
mov
pushf
or
orb
and
fsubl
xchg
orb
sbb
nop
pop
fs
sub
sbb
dec
or
fwait
cmp
mov
xchg
xor
cwtl
sahf
pop
ljmp
mov
jbe
ret
aas
aas
adc
icebp
jl
dec
pusha
inc
mov
cmp
push
inc
aas
in
fisttps
sbb
je
dec
sbb
dec
adc
cmp
xchg
xor
ficoms
mov
sbb
mov
pop
xchg
je
fldl
aaa
sbb
adc
movsl
insb
jbe
mov
pop
adc
jbe
rcr
dec
daa
jb
adc
mov
or
push
mov
jge
xlat
cld
das
out
fisubl
xchg
pop
call
fstpl
fisttpl
push
fsubs
sbb
repz
xchg
jb
mov
cmp
jnp
dec
adc
mov
jae
jl
cwtl
rcrl
inc
imul
loopne
xchg
jl
mov
cmp
mov
mov
pop
in
sub
mov
jp
pop
leave
loopne
sub
andl
xchg
gs
and
loopne
adc
ds
or
jne
mov
add
ljmp
xchg
fldl
jp
or
mov
fsub
cmpsb
mov
andl
push
int
push
repz
or
sbb
adc
dec
pop
mov
xor
mov
cmp
push
popf
test
adc
inc
dec
push
int
push
dec
or
jp
mov
push
stos
lret
push
dec
xchg
dec
adc
cld
push
cmp
cmp
fsubr
sbb
gs
pop
pop
xor
idivb
sbb
inc
mov
push
push
in
fdivrs
inc
iret
stc
pop
jae
push
in
adc
cmp
ja
mov
negl
and
push
scas
data16
fisttpl
arpl
jecxz
pop
in
or
setle
mov
sti
cmp
adc
idivb
js
mov
dec
aad
ljmp
jns
loop
cmp
dec
sbb
jmp
test
pop
sbb
aas
pop
sbb
mov
adc
cmp
lock
jmp
or
sbb
flds
xor
cs
add
and
pop
cmpb
jge
inc
xchg
jg
jmp
cmp
jb
adc
mov
dec
push
out
dec
xchg
imul
call
push
cwtl
shll
lock
stos
cs
dec
lods
cmp
lods
push
pop
jle
or
push
pop
loopne
lret
jnp
mov
out
push
mov
pop
cmpxchg8b
stos
adc
add
adc
sahf
je
xor
mov
add
mov
lock
pop
xchg
dec
adc
mov
push
loopne
add
jo
pushf
lea
cld
enter
sbb
pop
pop
xchg
icebp
js
and
mov
push
js
dec
cmp
mov
push
dec
js
and
notl
push
cs
lods
adc
pop
call
roll
mov
and
xor
into
lea
aad
sbb
sub
or
cld
pop
test
inc
dec
or
xchg
dec
xor
inc
aam
mov
loope
aas
idivb
sbb
inc
push
xchg
pop
jg
adc
inc
xorl
aaa
nop
mov
mov
sbb
adc
jmp
mov
out
mov
or
xchg
or
jmp
dec
pushf
in
and
jne
add
and
movups
fsub
and
data16
xchg
mov
or
xchg
int3
mov
fidivrl
enter
or
sub
nop
sub
scas
dec
jp
and
pop
frndint
lcall
adc
loopne
stc
mov
gs
les
mov
loopne
push
inc
push
adc
inc
pushf
inc
out
outsb
icebp
push
add
int3
add
sti
popa
sub
add
fmul
lods
push
or
inc
pop
adc
aas
stos
sbb
push
adc
adc
jns
lret
jg
inc
pop
adc
repnz
cmp
mov
xor
pop
data16
loopne
adc
sbb
or
leave
mov
in
and
cs
or
lods
sbb
pop
jne
jnp
pop
cltd
mov
add
jl
xchg
mov
out
cld
hlt
sbb
loope
push
push
or
push
xchg
movsb
insl
incb
pusha
pop
aad
fmul
in
in
je
jb
push
into
loop
dec
inc
sahf
and
scas
jns
or
imul
sbb
jl
outsl
add
sbb
cltd
push
cld
popf
jmp
push
loope
int3
cmpsb
pop
xchg
pop
sbb
std
insb
add
inc
sarl
adc
sbb
push
jle
mov
lock
std
lock
sar
push
in
cmp
push
loope
dec
pop
adc
add
mov
outsl
les
sbb
fcomi
test
lret
adc
and
pop
or
mov
pop
je
push
add
xor
mov
repz
xchg
int3
mov
shlb
fmull
int
in
lret
sbb
push
adc
insl
lahf
sbb
add
xor
or
sbb
jmp
rolb
or
dec
dec
cwtl
dec
hlt
push
cld
aaa
adc
arpl
xchg
jo
adc
int
cmpsb
cmp
pop
callw
mov
dec
lds
icebp
popa
pushf
fildl
enter
adc
xor
or
mov
dec
sbb
stc
and
dec
test
sbb
push
jg
push
shrl
push
xchg
sub
cmp
adc
imul
outsb
pop
xor
inc
push
pop
pop
cld
ret
sahf
pop
push
cmc
mov
lods
cmc
or
lods
addb
mov
fs
push
outsl
inc
lea
push
dec
dec
push
cld
leave
pushf
adc
fildl
pop
push
push
dec
movsl
sub
pusha
ljmp
jnp
adc
mov
ficompl
sbb
adcl
dec
cmp
and
outsb
or
cmp
and
lahf
mov
jp
add
pop
sub
adc
addl
fbstp
push
stc
sbb
mov
sbb
sbb
dec
enter
xchg
das
mov
xor
jbe
cmp
in
push
xor
lret
push
pop
ss
sti
push
mov
pop
ds
cmp
inc
orl
cwtl
mov
rcr
dec
cmpsb
mov
fisttpl
adc
xlat
and
lods
add
sub
inc
data16
push
out
test
movsl
jmp
cmp
cmp
push
sbb
leave
nop
test
je
scas
push
pop
jbe
jg
sub
fcoms
mulb
pop
mov
xchg
daa
popa
jecxz
lods
or
push
sbb
dec
sbb
add
mov
insl
or
xchg
xor
or
js
sub
inc
lock
imul
lret
mov
sub
cmpsb
jae
jb
mov
cmpsl
cld
into
js
sub
bound
cmp
add
sbb
adc
push
inc
out
fmuls
pop
sbb
nop
push
jae
adc
sbb
push
and
out
mov
mov
fwait
ss
jle
and
ss
adc
repz
stc
aaa
sbb
mov
popa
btc
les
dec
or
aas
std
sbbb
cmp
cmpl
xor
fsubl
repnz
inc
shll
xor
ljmp
idiv
scas
push
push
fwait
lods
cli
addr16
or
movsl
or
push
jl
mov
and
cmp
hlt
mov
fsub
mov
js
pushf
ds
push
out
mov
aad
jns
cmp
adc
insb
push
adc
test
ficomps
jle
xchg
pop
and
add
test
pop
push
jb
mov
sahf
or
mov
mov
jae
push
sub
lods
pop
add
out
test
fidivrs
out
or
sti
stos
xor
sbbb
sbb
push
shl
or
sub
mov
adc
fwait
mov
mov
testl
push
fwait
loope
fwait
mov
xor
dec
adc
in
es
dec
adc
mov
and
add
ret
cmp
rcr
mov
imul
sbb
xchg
testl
and
push
aas
ja
jecxz
pop
mov
push
es
mov
mov
ljmp
xchg
jg
mov
nop
inc
jns
outsb
insl
push
adc
fwait
adc
lods
sub
ljmp
fcompl
cld
mov
movsb
sbb
imul
xchg
push
shl
pop
or
test
and
test
lcall
add
ret
mov
push
clc
pop
les
loop
stos
mov
xchg
inc
push
aas
stc
cmc
iret
sub
xchg
movsb
cwtl
orl
fldcw
sbb
push
cmpb
cmp
out
fidivrl
jl
orl
adc
jl
clc
fisubrl
ljmp
sbb
jno
mov
jl
pushf
test
leave
mov
daa
and
jmp
and
mov
enter
pusha
xchg
xor
cmp
add
sbb
js
aas
fs
data16
movsb
and
dec
jl
jmp
enter
inc
out
sahf
stc
cmc
xchg
negl
fsubrs
fcom
out
loope
rcrb
xchg
jp
lock
stc
int3
inc
inc
mov
dec
pop
add
cli
or
or
dec
xor
dec
adc
in
mov
or
out
pop
mov
cltd
out
dec
push
adc
jp
stos
mov
fcoms
and
rolb
adc
outsl
jnp
fidivrl
inc
enter
ds
dec
fildl
dec
ja
cmpsl
pushf
mov
and
cmp
push
ja
cld
xor
inc
mov
jnp
fdiv
sbb
fiadds
lock
push
popf
push
mov
and
scas
fmul
lock
cmp
loopne
jnp
push
dec
insb
movsb
push
xorl
orb
jle
push
arpl
add
into
dec
adc
dec
fcmovbe
xor
jle
popf
shufps
sbb
inc
adc
or
sub
test
pop
adc
xor
aaa
and
insb
dec
adc
loop
nop
pop
or
pop
mov
imul
cmp
adc
jno
call
fcomps
outsl
test
add
sub
mov
pop
cmp
fstl
xor
out
out
out
jns
push
mov
jle
pop
orl
push
out
test
mov
cltd
sbb
push
int
addb
cmp
sbb
mov
fdivs
mov
push
push
xor
push
cld
pop
push
xlat
ret
movsl
add
sub
icebp
add
push
rclb
adc
ret
test
xchg
mov
cld
jge
test
add
imul
cmc
push
add
mov
dec
shll
xor
es
out
cmp
imul
sbb
mov
aam
loop
aam
sbbb
jb
sub
repnz
cmp
stos
cwtl
xchg
sarb
pushf
shll
mov
sub
dec
push
and
lret
popf
and
in
add
aad
or
mov
movb
xchg
jne
faddl
push
idivb
ds
test
lcall
cmp
xchg
sub
int
push
pop
cmp
mov
and
and
mov
jns
cmp
mov
jno
aas
xchg
cmpsb
mov
call
sbb
sbb
push
cld
inc
cwtl
sub
add
das
pop
push
dec
hlt
int3
xchg
adc
rcrb
out
fnstenv
xchg
xor
mov
pop
push
push
sub
ss
aas
inc
dec
fiadds
fnstenv
cltd
les
push
test
lock
mov
xor
addr16
xchg
push
ret
xchg
sbb
cmp
jp
cltd
gs
inc
loope
pop
mov
xor
insl
or
stc
jns
add
mov
inc
push
out
inc
pop
es
or
mov
out
sbb
jle
data16
pop
push
test
adc
or
add
icebp
sbb
adc
cmp
in
fistpl
or
adc
jp
xor
stos
fldcw
inc
fs
jecxz
cmp
loop
cmpsl
push
out
and
or
or
xor
or
aaa
mov
push
push
out
ljmp
cmp
sbb
fidivrl
dec
dec
jp
mov
cs
mov
mov
pop
pop
or
ds
push
out
sub
test
jno
ficoml
pop
pusha
mov
sbb
pop
cmp
push
es
and
cld
cli
sbb
jl
es
ljmp
cs
es
mov
xor
pop
or
adc
cmp
es
out
movsb
fmuls
jle
jbe
leave
pop
loop
sbb
xlat
pop
cmp
dec
sahf
cld
test
arpl
add
lret
dec
fstpl
test
add
aaa
pusha
push
cmp
cmp
and
push
mov
xchg
imul
and
out
push
in
mov
mov
popf
lods
jbe
adc
sub
in
lret
cmp
adc
and
jns
or
dec
add
pand
adc
or
or
das
sbb
adc
or
jle
jb
pop
lcall
lret
lock
mov
gs
pop
xchg
in
fdivl
inc
dec
lods
loope
cmp
inc
stos
icebp
call
dec
repnz
movsl
rorl
loop
inc
notl
inc
stos
mov
and
hlt
outsl
and
call
pop
aaa
cld
mov
int
sbb
adc
cmp
rorl
push
sti
fsubs
imul
add
test
pop
pop
push
or
insl
dec
das
inc
int3
cltd
icebp
pop
and
and
or
aas
lahf
lahf
pop
in
fs
loopnew
icebp
stos
pop
loope
js
mov
xchg
sbb
dec
dec
popa
lret
out
int
fwait
mov
xchg
push
adc
es
stos
les
inc
mov
imulb
xor
in
rclb
adc
cmc
sbb
and
push
xor
jmp
push
cli
fbld
imull
adc
push
dec
shll
inc
push
pushf
outsb
cld
sub
jb
iret
popf
daa
movsb
sub
ret
fwait
sub
shl
hlt
mov
stos
sbb
pop
and
shrl
mov
cmp
sti
sbb
je
fwait
out
inc
push
push
mov
icebp
shl
in
cmp
or
mov
cmc
mov
cmp
pop
xor
insl
sub
test
lock
enter
dec
fdivs
jns
inc
icebp
sbb
scas
xor
out
fsubrl
mov
sub
popa
sub
ret
rorb
jo
negl
out
mov
cmp
scas
inc
pop
adc
inc
call
xor
cltd
sub
je
sub
and
xchg
push
repz
and
test
inc
adc
adc
jecxz
nop
test
stc
es
test
test
mov
or
loop
scas
test
mov
push
lahf
mov
push
and
outsl
mov
inc
xor
nop
loopne
test
dec
push
ja
and
out
jne
dec
cmp
or
out
inc
add
xchg
push
dec
insl
xor
mov
cmc
cmp
sbb
call
out
leave
lds
popa
jle
stc
add
enter
sbb
jnp
sub
enter
sub
ror
movsl
rolb
out
sbb
or
and
out
jmp
mov
adc
and
rcr
cmpsb
test
add
lcall
xchg
repnz
sbb
inc
adc
pop
add
std
out
adc
inc
aaa
xchg
sti
lock
xchg
push
inc
mov
aad
sbb
cli
daa
outsl
out
cmp
adc
mov
dec
mov
xor
push
lock
scas
inc
aas
jb
push
sub
cmp
xor
or
and
and
add
push
popa
icebp
and
push
or
jae
mov
mov
icebp
jns
out
or
pop
dec
mov
adc
dec
jno
stos
inc
enter
push
sbbb
cltd
xor
jbe
int
mov
arpl
or
or
movsb
cld
pop
jo
push
push
push
test
dec
les
out
xchg
ja
loopne
sbb
adc
clc
dec
or
pop
in
xor
pop
dec
fwait
jge
cwtl
push
hlt
cmpsb
sub
sbb
cs
cmp
adc
sub
aas
outsl
add
popf
xchg
scas
outsl
jecxz
push
add
into
pop
add
mov
xor
loopne
loope
enter
cli
pop
adc
cmp
and
decb
dec
les
aam
repz
int
adc
mov
or
and
xchg
and
adc
dec
inc
loope
xchg
cmp
pop
cli
jae
in
bound
or
pop
push
jb
add
xor
push
iret
sbbl
xor
sub
add
push
adc
push
test
hlt
inc
mov
adc
jl
mov
stos
or
outsl
lcall
into
dec
pop
lock
decb
popf
imul
lds
outsl
push
inc
inc
int
fmull
dec
cltd
gs
push
push
in
dec
sahf
jne
xchg
inc
dec
mov
shrl
sub
push
dec
enter
sbbl
mov
cwtl
cwtl
cmpsb
lret
jnp
add
std
cmp
push
pop
push
cmp
repnz
pushf
adc
adc
lock
addl
add
jge
sbb
cli
out
adc
js
push
lea
pushf
popf
sub
mov
xor
xor
or
push
outsl
cmp
dec
lcall
xor
sbb
lea
into
and
mov
add
push
jb
sbb
sub
inc
into
and
jmp
dec
adc
cmp
sub
cli
lea
ret
adc
imul
push
outsl
cmp
fistps
mov
mov
aam
dec
mov
ljmp
jecxz
mov
imul
or
dec
pop
jecxz
mov
mov
test
cmpsl
push
inc
xor
idivb
divb
jp
call
lock
dec
inc
stc
flds
aad
cmpsl
clc
jmp
int3
sub
sbb
mov
aam
enter
adc
xor
mov
fdiv
icebp
push
loopne
cmp
xor
mov
sbb
rol
in
ret
loopne
push
push
in
fwait
loopne
or
adc
movb
aas
xlat
pop
test
fwait
push
adc
xor
inc
test
push
cmp
popf
push
int
push
es
test
xor
mov
dec
movsl
xor
jne
sub
ss
leave
xor
rcr
or
and
cmp
lahf
in
enter
mov
push
cmpb
sbb
je
mov
out
test
pop
xchg
adc
pushf
cvttps2pi
pop
cmp
pushf
aam
movsl
add
pop
push
sub
push
cmp
test
cltd
inc
aad
or
clc
daa
and
icebp
push
xlat
pop
jb
inc
mov
scas
test
adc
insl
in
in
sbb
and
outsl
ds
sub
bound
bound
js
mov
and
adc
push
inc
rorl
mov
add
outsb
outsl
and
shlb
sarl
cmpsb
sar
out
jmp
inc
ret
dec
cmp
insl
cwtl
ss
cmp
cld
iret
imul
lret
sbb
pop
sub
enter
mov
xchg
pop
push
sub
sub
pop
sbb
insl
jo
push
cld
jmp
adc
rcr
daa
cli
in
sbb
jae
test
mov
adc
push
add
pop
or
add
fdivl
movsl
pop
push
mov
inc
dec
jb
or
add
cmc
dec
ret
sarl
pop
int
idivb
dec
in
push
adc
insb
pop
icebp
pop
pop
sbb
lea
add
jns
hlt
or
cmp
fisubrs
out
and
push
xchg
sub
icebp
or
inc
fsts
sub
mov
cmp
divl
push
mov
push
leave
pop
sub
shlb
sahf
inc
shrb
fisttps
adc
imul
push
pop
lcall
rcr
lds
pusha
stos
mov
in
lods
push
inc
xchg
fsubrl
mov
imul
mov
mov
push
inc
push
scas
mov
roll
cmp
aaa
xchg
pop
add
out
sbb
dec
in
popf
roll
data16
or
ret
fs
inc
data16
rcll
sub
outsl
ss
pop
data16
pop
sbb
dec
xor
lods
xor
pop
xchg
leave
push
je
jno
xor
testl
xchg
pushf
mov
mov
es
mov
push
xor
mov
xchg
adc
int3
or
jb
push
dec
lods
aad
add
inc
insb
cmpsb
pop
lcall
push
mov
cmp
pushf
cli
ljmp
jl
mov
pop
adc
cmp
lret
inc
addl
lret
sbb
test
push
pop
mov
test
push
es
mov
sub
int3
and
fwait
adc
rorb
xor
or
add
call
dec
cs
sbb
clc
ds
dec
pop
into
or
out
adc
add
imul
and
add
icebp
insl
dec
push
shlb
or
shll
push
adc
popf
fmulp
imul
cmp
and
and
cwtl
cld
clc
adc
sbb
adc
push
fcom
jmp
or
push
dec
push
jb
sbb
xchg
jg
test
cld
sub
cs
ja
cltd
repnz
leave
lahf
pop
jmp
imul
cs
mov
loopne
stos
stos
aaa
insl
inc
pop
push
shlb
in
add
push
int3
pushf
inc
adc
jnp
rcll
dec
out
imul
pop
dec
in
lea
ja
dec
fistpll
jne
stos
push
fimuls
shrl
insb
inc
sbb
or
aad
or
cmp
dec
jl
and
inc
push
xchg
xor
fcomps
inc
pop
add
loop
int
xor
and
mov
call
inc
mov
in
mov
xchg
sub
hlt
add
out
or
sarl
and
adc
jns
lret
call
inc
and
xchg
fistps
push
inc
push
xchg
push
fadds
mov
mov
mov
jns
je
and
adc
xor
nop
cmpl
xor
xchg
mov
inc
aas
stos
jb
or
jb
cmp
fstp
xor
jnp
pop
adc
sbb
hlt
lea
and
add
iret
fs
iret
and
push
into
pop
out
jo
cltd
lret
pop
mov
scas
fisttps
pop
push
pop
adc
push
dec
jl
jmp
xor
ljmp
cmp
cli
push
in
ficoml
in
stos
pop
js
out
adc
fwait
and
and
push
push
cmp
sbb
outsl
out
hlt
push
sbb
or
insl
int3
pop
call
cmpl
mov
or
push
gs
xchg
pop
int3
int3
mov
pop
orb
dec
push
rdpmc
push
or
cs
push
pop
jo
in
sbb
push
popa
pushf
int
inc
loope
fstp
mov
pop
and
insb
ljmp
push
cltd
loope
lds
adc
pop
loopne
cmpsb
cmp
xchg
cmp
je
sub
and
aas
cmp
add
dec
cld
call
test
and
or
xor
cwtl
es
cmp
js
lahf
push
and
mov
mov
cmp
int3
lods
rorb
jb
sbb
fs
fiadds
pop
fmull
sbb
and
pop
sbb
cmp
xchg
das
lcall
and
sbb
jle
pop
mov
jo
xlat
rclb
ds
push
arpl
mov
shrb
inc
cmp
dec
je
fimull
out
repnz
jbe
icebp
pop
adcb
daa
jnp
push
lds
sbb
or
jl
stos
aas
sbb
push
dec
or
ficompl
jns
in
sbb
and
ja
dec
les
pop
loopne
mov
push
addb
arpl
out
pop
mov
lock
add
pop
lock
adc
rcll
mov
jae
add
repz
dec
push
cli
dec
inc
inc
xor
add
dec
hlt
in
repz
xor
add
lahf
outsl
pop
adc
pop
cmpsl
roll
test
and
lods
lcall
push
adc
xchg
pop
sub
gs
sbb
mov
cmp
xchg
sbb
imul
sub
leave
mov
int3
push
mov
aam
js
lds
jnp
icebp
ss
outsb
push
sub
les
pop
rclb
sub
imul
repz
in
inc
cwtl
enter
pushf
divb
icebp
cmp
adc
lea
in
leave
pop
leave
lret
adc
rcl
fmull
cmp
xor
pop
xchg
or
pushf
xor
pop
adc
cmp
ret
lods
in
adc
stc
jmp
inc
cmc
movsb
jmp
add
adc
ficoml
mov
icebp
dec
hlt
pop
dec
gs
or
nop
shl
sbb
scas
adc
in
idivb
mov
add
pop
mov
test
jo
cwtl
push
icebp
and
jo
add
add
fadds
xchg
dec
mov
outsl
ljmp
icebp
push
mov
js
or
cmp
icebp
dec
insl
push
int3
outsl
dec
mov
imul
pop
in
xchg
lods
mov
lea
aas
stc
scas
cmp
outsl
inc
add
xchg
mov
stc
ficoml
or
rorl
dec
pop
push
fwait
xor
mov
adc
imul
add
mov
es
repnz
adc
inc
cmp
popf
push
sbb
adc
cmp
adc
or
cmp
push
adc
fcoml
cmp
mov
inc
jb
adc
jl
pxor
test
cwtl
xor
mov
inc
and
fstl
push
fs
dec
jmp
popf
lods
dec
jge
adc
std
mov
xor
inc
icebp
stc
or
push
sub
les
mov
or
fimuls
jb
adc
addr16
mov
push
sub
push
out
dec
push
xor
add
jbe
lods
std
loopne
adc
roll
outsl
cmpsb
popa
imul
in
sti
dec
jcxz
lcall
insb
jle
pop
push
pop
sbb
cld
ret
sahf
ss
dec
cmp
popf
xchg
cld
xchg
cmp
inc
lcall
push
imul
xchg
sbb
in
iret
in
push
mov
popa
in
stos
cwtl
pop
add
repnz
xor
mov
mov
test
adc
lds
xor
mov
ja
pop
out
repnz
js
out
adc
sub
sub
xor
inc
and
lock
arpl
daa
jb
rcl
ja
push
xchg
mov
sbb
mov
jle
or
xor
push
push
fistpl
push
dec
mov
cmpb
cld
xor
xor
cmp
push
and
icebp
push
jmp
rcrl
adc
repz
adc
dec
rorl
push
add
push
and
dec
cld
cmpsl
sub
adc
cmp
mov
xor
es
js
mov
mov
cmpb
inc
or
repz
xor
mov
mov
dec
add
cmp
xchg
pop
inc
icebp
loopne
mov
mov
and
sub
push
aas
dec
sbb
je
xorl
std
jne
mov
lret
mov
jl
mov
pmulhw
mov
movsl
fistl
gs
addr16
or
xchg
jl
dec
outsb
inc
mov
icebp
push
dec
mov
insb
xchg
push
or
inc
sub
push
rolb
cmp
dec
xor
dec
cld
or
adc
fmull
pop
adc
inc
and
sub
mov
sub
xchg
mov
lahf
int3
xor
dec
into
mov
out
out
rcrl
out
xor
pop
dec
dec
in
arpl
push
sub
dec
pop
adc
adc
and
jle
adc
lods
push
lahf
icebp
inc
lret
ret
push
int3
mov
xor
arpl
aas
mov
call
pop
and
lds
fdivrp
imul
iret
push
fimuls
aad
mov
cmp
mov
dec
mov
std
jns
push
push
lods
jecxz
stc
pop
dec
seta
outsb
data16
arpl
jo
jnp
dec
cld
inc
idivl
push
mov
push
xchg
sub
lcall
clc
mov
nop
push
push
mov
addr16
add
adc
or
add
jbe
mov
lds
dec
subl
ret
dec
and
insl
jo
mov
bound
adc
or
and
xor
push
outsl
addr16
scas
nop
mov
pop
push
outsl
pop
les
push
mov
or
and
lods
dec
xchg
das
or
pop
je
xchg
push
and
dec
mov
icebp
js
test
xchg
cmp
unpckhps
sbb
mov
mov
push
push
push
call
sub
xor
sub
xor
dec
pop
lods
xchg
lcall
icebp
jns
jl
inc
imul
and
js
dec
push
jle
cmp
push
sbb
out
ret
loope
fidivrs
shlb
cmp
xchg
inc
addr16
fs
call
jmp
mov
lods
jp
push
adc
mov
pop
xor
cmpb
ret
fistl
ljmp
jl
fstps
mov
cmp
fisubrl
mov
and
in
cli
add
psubusb
cwtl
loope
dec
adc
clc
pop
imul
aaa
mov
pop
dec
shrd
or
adc
mov
adc
mov
sbb
cs
repz
jnp
aam
adc
adc
das
fwait
mov
or
cmp
adc
add
into
lea
out
sbb
add
mov
pop
out
or
inc
ljmp
jb
or
test
xor
or
or
lods
cmc
rcrl
ljmp
int
stos
repz
insl
pop
push
xor
mov
sub
and
inc
mov
jae
por
jo
inc
adc
adc
xchg
and
das
cmp
imul
lock
cmpsb
dec
ljmp
clc
jo
ret
push
pushf
repnz
int
movsb
jmp
iret
push
mov
scas
adc
cli
rcl
ret
mov
lret
mov
sbb
imul
xor
sbb
inc
daa
data16
xor
lahf
mov
dec
mov
or
xorb
aas
cwtl
outsl
pop
out
in
inc
mov
xor
sbb
loopne
in
sbb
or
inc
push
adc
pop
insb
mov
daa
shrb
stos
nop
ss
jb
mov
xor
add
xchg
loop
push
repnz
jp
out
pop
pop
repnz
adc
adc
mov
xchg
dec
stc
cwtl
cmpsb
lret
mov
aaa
cmp
xor
mov
rcrl
mov
inc
rorb
addr16
xchg
pop
xchg
popf
add
stc
es
sbb
ds
inc
in
pop
icebp
cmp
inc
fstpl
mov
push
pop
push
rcll
jnp
rcrb
ja
jne
push
jmp
or
ja
jbe
mov
mov
inc
xchg
cmp
nop
push
adc
popa
sbb
cmpl
ret
or
popa
icebp
lea
cmp
sahf
jl
scas
and
dec
cmpsb
cmp
sbb
sub
push
mov
adc
adc
jb
dec
sbb
in
adc
sbb
add
cmp
outsl
and
and
adc
dec
adc
push
jo
adc
add
test
cmpsb
test
inc
pusha
out
mov
dec
dec
or
nop
leave
and
sbb
or
aas
dec
loopne
std
xchg
pusha
icebp
aaa
into
dec
cld
add
insl
cmp
int3
pop
jl
sbbb
cs
mov
dec
xlat
es
add
fs
les
and
xor
xor
daa
xchg
imul
dec
enter
in
sub
pop
shlb
mov
xchg
adc
and
addr16
push
cmp
icebp
or
loop
push
jecxz
out
push
sbb
insl
mov
xchg
fsubr
outsl
jo
sub
pusha
adc
adc
pop
xor
divl
psubb
ficomps
dec
dec
je
in
fimuls
and
mov
lods
aas
xor
push
inc
dec
ljmp
adc
fldlg2
stos
pop
fnsave
adc
xor
divl
or
add
or
xchg
or
stc
adc
dec
mov
std
rclb
cmp
shlb
iret
sbb
insb
ja
inc
xchg
push
push
mov
sub
incb
push
adc
daa
sub
dec
fistl
push
je
lods
jae
outsl
adc
sbb
and
add
jecxz
lods
mov
les
pop
fidivrs
adc
inc
outsl
add
mov
mov
mov
ljmp
cmp
inc
sbb
and
pop
ret
push
or
xor
adc
push
cmp
ds
or
push
cmc
jp
or
test
insl
sbb
dec
cld
jl
outsb
xor
and
dec
aas
dec
ret
and
sbb
xchg
or
pusha
les
adc
dec
xor
mov
xor
sbb
aaa
mov
ret
sbb
mov
push
sub
fbstp
test
outsb
dec
mov
loopne
push
call
or
fdivl
and
xchg
push
repz
sahf
in
and
pop
or
or
adc
cmp
add
cmp
jle
push
mov
xchg
add
adc
jb
jge
sub
xchg
sbb
inc
mov
loope
sarb
insl
cmp
cmpsl
pop
aas
outsl
jp
aaa
sub
jae
cld
add
dec
cwtl
pop
js
adc
decb
int
pop
adc
cmp
sbb
adc
sbb
xor
xor
pop
inc
scas
xchg
icebp
xchg
pop
pop
cmp
shrb
pop
mov
cmc
mov
fs
cld
mov
and
ss
addr16
outsb
in
inc
lcall
or
adc
mov
mov
adc
scas
inc
in
add
push
fdivrp
ljmp
adc
adc
jb
jp
stc
sti
push
negb
test
xchg
outsb
and
sub
dec
cld
dec
movups
or
cmp
pop
adc
addr16
cmp
or
enter
or
pop
push
jbe
fwait
into
jp
pop
dec
xor
ss
movsb
sub
pop
inc
mov
and
in
aam
cmp
pop
mov
mov
cmp
xor
dec
xor
cld
stc
ljmp
pop
aam
push
scas
imul
out
leave
jb
fcmovnb
aas
mov
inc
clc
jecxz
add
jp
ja
push
ljmp
xchg
cld
inc
into
sub
sbb
movsb
inc
jge
faddl
fs
sub
xchg
dec
sbb
in
pop
scas
je
add
sbb
cmp
mov
mov
mov
rolb
andb
hlt
enter
out
jno
adc
ficompl
cwtl
int
fdivrl
clc
cwtl
xchg
or
das
inc
cwtl
test
jmp
pop
push
call
cmp
nop
dec
cld
inc
fcomps
hlt
fs
jg
and
push
adc
pop
xlat
and
das
fs
jecxz
in
sbb
add
pushf
lds
push
cmp
lahf
in
cld
sbb
add
sub
pop
xchg
ja
cwtl
out
mov
orl
dec
pop
pop
sbb
rcll
movsl
les
addr16
cwtl
pop
and
mov
mov
es
sbb
xchg
pop
mov
or
and
mov
xor
mov
and
add
enter
pop
es
sbb
mov
dec
or
inc
push
in
cmp
and
xor
adc
dec
movsb
jae
push
mov
push
mov
xor
out
mov
ss
popl
sbb
scas
xchg
sbb
dec
test
cld
pop
ret
vrcpps
rolb
mov
dec
jnp
in
mov
fstpt
xchg
es
jle
iret
aaa
mov
testl
inc
dec
pop
clc
pop
push
mov
mov
or
dec
cwtl
mov
sbb
sbb
dec
sbb
dec
jbe
mov
cmp
push
cmpsb
sbb
sub
setno
xor
lret
in
filds
test
icebp
adc
pcmpeqb
fistpll
hlt
lds
sub
xchg
inc
jo
stos
cld
mov
arpl
pop
push
ljmp
jo
fisttpl
mov
sub
sti
push
add
adcl
aaa
je
push
fnstsw
sub
sub
dec
outsb
les
sub
ss
fsubrl
icebp
pop
int
pop
or
mov
push
xor
adc
int3
jle
mov
fnstcw
add
lock
jbe
sbbl
add
scas
pop
push
inc
add
pop
cld
or
ret
cmp
insb
js
sub
lahf
lret
pusha
adc
adc
sbb
test
mov
mov
or
cld
sbb
fldt
icebp
or
mov
adc
ds
add
dec
xor
dec
jle
out
das
nop
mov
push
mov
es
push
aas
fadd
mulb
mov
addr16
icebp
add
push
add
mov
dec
es
inc
pop
faddl
dec
dec
lret
mov
jl
imul
push
sbb
iret
cmc
repnz
js
xchg
sbb
cmc
mov
clc
add
push
fwait
cmp
pop
insb
dec
into
mov
leave
sbb
pop
or
cmp
mov
push
cld
out
lret
sub
divb
xlat
jne
int3
mov
nop
in
or
nop
aam
push
nop
ret
mov
inc
outsl
push
cmpsl
inc
int
cmp
lods
lock
fstpt
mov
mov
inc
pop
cmp
push
adc
jnp
xchg
arpl
je
cmp
xor
fs
fwait
lock
mov
call
mov
in
ds
cli
test
out
inc
fcmove
push
out
pop
sbb
cmpsb
dec
cld
std
out
sub
jnp
mov
xchg
dec
push
lods
neg
mov
lcall
je
xchg
cli
test
push
neg
lret
adc
into
pop
scas
fmull
movsl
pop
stos
dec
add
xchg
clc
dec
push
push
cwtl
mov
dec
or
jbe
cmp
or
pop
cmp
dec
mov
push
dec
adc
lret
insl
cmc
pop
jo
outsb
insb
adc
shl
inc
sti
xor
or
popf
cld
dec
inc
xchg
adc
stc
adc
clc
pop
inc
add
jb
jns
cmpsb
jle
inc
popa
dec
dec
or
lcall
push
fs
subb
inc
inc
adc
cmc
pushf
sbb
in
dec
jno
jp
mov
je
sbb
or
orl
pop
popf
js
sbb
adc
or
cwtl
lods
inc
out
xchg
fldcw
inc
adc
pushf
pop
fisubs
lret
pop
sbb
push
cmp
cs
mov
pop
xchg
popf
cwtl
xor
pop
cld
xor
test
add
ret
mov
inc
enter
or
sbb
push
push
mov
inc
push
sub
daa
lret
movsl
mov
jnp
inc
pop
jecxz
pop
cmpsb
stos
pop
xorb
adcb
pop
mov
jns
add
bt
outsl
sbb
in
add
adc
leave
icebp
adc
notl
cld
or
inc
sarb
gs
add
push
dec
sbb
push
mov
or
jmp
dec
xor
add
daa
mov
sub
mov
sti
icebp
pop
and
mov
and
adc
add
mov
and
cmpsb
cli
shlb
pop
mov
fildll
sbb
je
jge
add
data16
je
in
outsl
and
xor
insb
mov
mov
jp
xor
aaa
xchg
loopne
lods
push
push
out
xor
jb,pt
jbe
fistl
xor
jp
fidivs
bound
icebp
aaa
pop
xchg
cmpsb
dec
cmp
sub
pop
fstpt
sub
iret
mov
push
adc
or
sbb
lods
sub
test
loope
ret
out
dec
inc
xchg
or
stos
loopne
insl
ljmp
aaa
and
fildll
mov
repz
push
add
cmc
add
dec
xchg
adc
adc
sbb
pop
jl
pop
sbb
outsl
jle
pop
or
cmp
dec
or
dec
xchg
or
adc
icebp
pop
adc
cmp
pop
dec
aaa
xor
add
or
mov
jns
es
mov
sbb
push
je
or
and
adc
push
dec
add
inc
dec
lods
inc
fld1
or
dec
add
jge
clc
int3
mov
sbb
repnz
mul
outsb
aas
sbb
cld
scas
push
iret
pop
les
push
data16
outsl
pop
dec
add
int
push
out
popa
xchg
inc
push
inc
dec
sti
arpl
push
pop
sti
ja
mov
xor
cmp
inc
dec
js
xchg
push
mov
scas
pop
fisttpl
xchg
and
les
inc
push
inc
sbb
icebp
aas
bnd
inc
push
aad
test
out
inc
lahf
repz
rolb
sbb
xor
adc
stos
int
cs
sbb
stos
shlb
inc
in
fisttpl
mov
or
mov
sub
iret
mov
or
ljmp
mov
lods
subl
sbb
and
std
push
pop
push
adc
sbb
popf
cld
mov
loope
sub
adc
mov
frndint
mov
xchg
in
lcall
xchg
mov
cld
push
shlb
adc
inc
insl
mov
push
add
mov
je
xchg
stos
xchg
sub
inc
sub
inc
je
scas
mov
xchg
lods
add
ds
push
inc
or
pop
cmp
push
ds
pop
xchg
pusha
jb
addr16
sahf
pop
out
sbb
dec
scas
inc
and
je
pop
adcb
mov
xor
shr
push
mov
push
and
cld
sbb
test
jno
sbb
push
add
push
les
das
jp
and
sarb
adc
push
or
add
push
pop
xchg
out
jo
mov
push
es
or
mov
icebp
xor
push
dec
test
push
jp
jmp
or
sub
mov
add
dec
pusha
lcall
movsl
movsl
data16
das
adc
bound
mov
cwtl
pop
movsl
lahf
push
das
or
cmp
nop
popf
add
sbb
mov
pop
pop
rcrb
dec
xor
hlt
xor
daa
loope
mov
inc
or
dec
lea
cmpsb
add
scas
cmp
jge
mov
lahf
xor
adc
testb
mov
mov
mov
xchg
pop
and
cltd
jg
add
cld
adc
sub
in
call
mov
dec
sahf
jl
push
push
pop
fdivr
sub
div
sarl
lret
jl
dec
xchg
inc
testl
dec
sbb
dec
cld
cmp
add
fildll
push
int
jecxz
add
xor
sub
movsl
inc
xchg
cmp
cwtl
adc
xchg
mov
add
jmp
adc
push
aam
xchg
adc
xor
add
adc
or
or
add
xor
push
xchg
adc
dec
inc
loope
mov
inc
inc
sti
and
imul
nop/reserved
add
cmp
pop
js
out
out
fxtract
sub
or
jo
push
dec
adc
xchg
arpl
mov
push
out
or
ror
test
cmpl
int
dec
mov
dec
outsb
or
dec
dec
cmc
pop
leave
dec
fdivrl
push
leave
ljmp
ss
je
sahf
jl
or
mov
das
xor
pop
jg
out
cmc
shr
and
jbe
push
inc
dec
mov
inc
bswap
sbb
cld
or
dec
ficoms
adc
stos
out
sbb
pop
pusha
pop
or
sub
mov
or
xchg
icebp
pop
aas
adc
mov
sbb
outsb
pop
dec
icebp
xchg
cld
xor
xchg
add
mov
adc
mov
pushf
js
push
orb
repz
xchg
lahf
ret
rorl
pop
add
mov
test
push
movsl
scas
pop
sbb
dec
or
out
int
adc
imul
icebp
sub
scas
sub
xchg
push
arpl
cmp
mov
pop
icebp
clc
in
xor
push
mov
mov
mov
cmovge
adc
jge
mov
loopne
shrl
add
and
in
mov
mov
dec
jns
aas
cmc
ficomps
les
mov
mov
scas
mov
mov
jecxz
orl
adc
sub
out
jne
out
pop
orl
add
cmpsb
sub
pop
fs
arpl
test
push
sbb
lea
push
je
cmp
xchg
dec
adc
push
int
loope
and
sbbb
icebp
adc
insb
outsl
add
les
lock
mov
mov
ficompl
into
or
cmp
fcomps
mov
xorl
inc
jp
lcall
and
outsl
and
aaa
mov
repz
pusha
fnsave
cwtl
and
add
movsl
sub
imul
pop
and
repnz
jle
mov
fisubrl
mov
xor
sbb
mov
sahf
movsl
fsts
adc
daa
cmp
sub
xchg
stos
in
imul
push
mov
jg
adc
clc
movsb
xor
fsubs
pop
inc
inc
aaa
outsb
fstps
dec
add
insb
jbe
pop
mov
inc
ret
in
push
pop
int3
cltd
mov
in
sbb
cmp
cltd
adc
mov
pop
add
xor
jae
add
rol
push
dec
lret
push
mov
adc
enter
add
pop
push
push
or
aam
or
movsl
adc
cs
fisubrs
xchg
pushw
lcall
xchg
ds
xor
cmp
jns
outsl
movsb
cmpb
les
jl
xchg
arpl
aaa
lods
sahf
mov
jnp
pop
cmp
rorl
jle
idivl
sbb
pushf
mov
xchg
lcall
add
push
popf
in
pop
mov
ja
dec
fsubrl
cmp
mov
push
push
das
insb
push
cmpsb
aad
shlb
push
adc
popf
mov
punpckhbw
data16
sbb
mov
cli
data16
hlt
dec
movsl
xchg
cmp
movsl
test
add
sbb
xchg
aas
jbe
adc
pop
adc
push
scas
mov
lret
loop
adc
jl
int3
imul
lds
or
jne
insb
sbb
dec
hlt
pop
adc
inc
inc
mov
dec
aad
xchg
dec
add
dec
test
xor
jb
pop
jno
push
aas
hlt
inc
fisubl
adcb
outsb
mov
nop
shll
mov
gs
pop
mov
mov
sbb
fstpl
or
rcll
pop
dec
out
push
push
jmp
cld
sub
sbb
mov
fistl
mov
es
xchg
insl
add
xorb
push
addr16
repz
daa
cmp
scas
pop
sbb
xor
dec
or
add
aas
push
pop
sarl
stc
test
cltd
stos
push
lahf
je
mov
icebp
mov
bound
cmp
push
sbb
push
push
fs
icebp
inc
cltd
sub
and
push
leave
cmp
push
icebp
pop
xchg
sbb
pop
xor
insw
sub
push
movsl
lock
bound
push
inc
fwait
sarb
lods
das
sub
push
mov
inc
add
cmp
inc
add
dec
mov
mov
clc
adc
or
pop
sete
cltd
push
icebp
fnstsw
and
jne
mov
push
ss
cmp
scas
pop
inc
sub
push
cmp
and
gs
sbb
push
inc
repz
push
jb
mov
rolb
aaa
pop
lods
xchg
rorb
cwtl
sbb
lcall
xchg
or
out
fsubrs
repz
aaa
stc
sbb
add
or
add
repz
adc
mov
fistpl
inc
cmp
sbb
or
add
adc
xor
inc
sbb
sbb
ret
and
lret
push
mov
dec
dec
enter
push
cld
testb
jp
sbb
push
dec
pand
ret
shll
or
stos
add
rolb
dec
and
movsl
mov
adc
stc
dec
into
or
incb
imul
inc
mov
lods
mov
and
and
xor
push
and
pushf
cmpsl
sbb
in
pop
cmpps
jno
xor
out
push
icebp
jmp
mov
dec
scas
bnd
fadds
push
jecxz
in
or
xor
test
lahf
mov
or
mov
enter
dec
xchg
out
sbb
sub
sub
pop
xor
es
fldenv
data16
scas
sub
mov
cmp
fsts
les
faddp
pop
xchg
xor
or
jo
jmp
sbb
add
clc
sbb
and
adc
and
mov
loopne
mov
cmp
sub
xchg
add
or
inc
outsb
add
cmp
sbb
fcmovbe
rclb
cwtl
sbb
mov
cs
dec
mov
xchg
repnz
lcall
mov
jnp
xchg
rclb
out
clc
stos
pop
inc
imul
pushf
and
pop
or
fildll
int
test
inc
out
lods
cmp
xor
or
cmp
sbbl
and
adc
adc
lods
xchg
xchg
sub
inc
inc
cmpsl
aas
sbb
in
in
lahf
inc
mov
fcmovu
popa
cmp
push
pushf
cmpsb
pushf
dec
xchg
push
in
subb
pop
out
sbb
mov
dec
imul
rol
outsl
inc
mov
dec
push
cltd
cld
cmp
scas
push
pop
cli
or
add
xor
pop
adc
and
sbb
fcompl
frstor
addr16
push
fisubrl
mov
push
and
mov
call
lods
movsb
stc
xor
ret
sahf
adcb
mov
int
cwtl
lahf
mov
pop
sub
lock
sahf
cmc
jno
cli
idiv
inc
aad
cld
xchg
mov
inc
fstpt
sbb
or
xor
add
inc
in
and
or
mov
mov
dec
xchg
fnsave
cltd
add
inc
mov
mov
lock
call
aas
sbbl
in
adc
adc
xchg
push
enter
adc
out
fcompl
push
test
fdivp
pop
test
and
jmp
cltd
movsb
add
jb
rcll
push
mov
xchg
sti
or
jb
jecxz
and
jle
sbb
neg
mov
fcoms
cs
inc
jl
push
cltd
les
push
int
adc
pop
pop
pop
xchg
push
mov
lret
sub
add
pop
xchg
cltd
cmp
mov
lock
icebp
sbb
inc
movsb
ljmp
cmp
inc
outsl
clc
add
dec
push
pop
bound
icebp
cltd
inc
push
out
repnz
jmp
pop
adc
sahf
lret
adc
xchg
xorl
sahf
dec
arpl
inc
mov
push
fwait
adc
fisttpll
dec
jmp
xchg
and
cli
fbstp
lret
pop
pop
out
jb
cmpsb
mov
push
nop
pop
cwtl
ret
sbb
mov
ficompl
or
inc
add
lret
mov
or
push
mov
sbb
jl
sahf
adc
notl
and
push
dec
jae
call
pop
lcall
gs
mov
push
test
jae
popa
push
pop
mov
push
xor
dec
add
sbb
movsl
push
mov
adc
sbb
mov
dec
subl
lea
pop
iret
dec
jg
mov
pop
in
inc
lock
push
lods
pop
xchg
out
push
push
or
sub
mov
test
mov
sbb
cmp
sbb
xchg
or
mov
pop
push
loopne
ljmp
adc
lahf
idivl
imul
pop
dec
fmuls
sbb
push
movsb
in
movsb
data16
pop
and
sub
mov
push
pop
mov
cmp
inc
cmpsb
xchg
mov
dec
les
jo
loop
and
lret
fbld
int3
adc
inc
sbb
inc
in
jle
stos
pop
xor
dec
cld
xor
pop
push
xor
or
dec
cld
les
addr16
cbtw
jb
push
loop
mov
mov
lahf
inc
in
call
xchg
cld
lods
mov
and
out
lahf
inc
movsl
nop
iret
mov
orl
cmpsb
add
and
push
pop
and
fwait
mov
sbb
into
movsl
sahf
pop
in
int3
xchg
or
inc
dec
into
jne
pop
adc
xchg
push
add
mov
push
push
loopne
push
lcall
divl
les
out
jno
mov
push
add
push
pushf
loopne
xor
or
adc
or
xor
push
sub
sub
adc
add
adc
jle
add
icebp
fidivs
xchg
adc
adc
sbb
adc
jb
pop
mov
inc
xor
icebp
pop
aam
orb
f2xm1
cmpsb
outsb
push
adc
dec
into
stc
add
in
dec
or
cmp
vpmacssww
adc
mov
divl
das
clc
mov
add
outsb
push
pop
ljmp
mov
pop
or
rol
jb
insl
adc
dec
mov
adc
mov
idivb
sbb
adc
out
xchg
or
test
sbb
dec
fwait
pop
add
inc
fnsave
roll
push
bound
cmp
adc
shlb
cmp
cmp
xchg
movb
sbb
xor
shlb
dec
cmpl
jp
dec
xchg
dec
fbld
push
lods
lea
ljmp
test
idivl
lea
in
cmpsb
aas
or
fcomp
cmp
mov
lods
pop
dec
pop
lcall
cmp
test
adc
cld
mov
cmp
pop
pop
adc
out
pop
push
jmp
leave
xlat
or
xor
sub
into
push
lods
mov
fidivs
push
push
mov
repnz
sbb
cmpsb
push
mov
sbb
mov
mov
inc
push
fisttpl
and
sbb
xchg
mov
ds
dec
ja
outsb
fs
or
mov
pop
hlt
js
test
push
jmp
aaa
aam
jl
into
adc
sbb
int
stos
jne
scas
repnz
cmp
fiaddl
std
pop
inc
scas
push
mov
push
xchg
clc
push
mov
dec
sub
sub
cmp
pop
sbb
and
adc
mov
cld
dec
pop
pop
xchg
das
call
jnp
inc
sub
es
test
inc
cmp
inc
pushf
add
jbe
sahf
jp
dec
cld
cmp
adc
arpl
loop
and
cld
repz
jnp
test
push
test
xchg
adc
std
and
cld
add
jecxz
jg
leave
mov
aam
push
adc
mov
test
cmp
pusha
test
stos
dec
sub
sahf
mov
adc
cld
sub
push
lret
inc
notb
push
mov
in
aaa
pop
adc
xchg
call
or
lahf
dec
clc
or
and
loop
adc
hlt
jmp
sub
pop
mov
sub
xchg
stc
xchg
mov
sti
push
test
cmp
rclb
mov
loopne
mov
lret
js
les
pop
pop
push
push
pop
hlt
inc
pop
sahf
or
cmp
adc
jecxz
mov
pop
adc
cs
leave
xchg
gs
out
cmovge
or
cli
outsb
fwait
cmp
insb
out
xchg
shr
push
jbe
xchg
mov
pusha
in
inc
dec
pushw
mov
jecxz
cli
lea
lahf
rclb
adc
sub
xchg
cmp
sbb
iret
xchg
inc
sbb
dec
adc
mov
xor
jp
push
loop
lds
inc
cmp
lea
add
pushf
push
shlb
mov
stos
imul
or
fistl
insb
imul
pop
or
xchg
outsb
inc
adc
movl
sti
adc
out
out
mov
and
hlt
jno
cmovs
mov
mov
cmp
and
push
cld
gs
push
adc
out
stos
jbe
jae
pop
adc
hlt
stos
push
pop
cwtl
loope
xchg
mov
or
jae
and
jb
push
js
xor
add
mov
cli
sub
fs
fstpl
dec
sub
push
push
stos
shll
jl
cld
scas
dec
push
loope
int
je
in
jb
mov
ret
out
jmp
mov
cmp
push
mov
das
cld
pop
mov
clc
dec
test
mov
push
fisubs
pop
lods
mov
std
out
mov
mov
stos
fcoml
fstpl
xchg
cmp
mov
mov
cmp
pop
inc
out
sub
in
hlt
lret
subb
cwtl
cmp
pushf
sbbb
push
or
dec
test
dec
cld
and
pop
out
cmp
outsb
cmp
xchg
fcom
cmp
sub
pop
mov
jle
das
cld
movsl
sub
rorl
lods
dec
pop
decb
loopne
or
lahf
pop
add
and
inc
xlat
push
shl
jnp
add
cmp
jmp
adc
push
pushf
or
insl
nop
cltd
bound
inc
xor
cmp
fiaddl
lock
mov
call
scas
and
ds
movsb
test
ficompl
mov
inc
lahf
jae
scas
xchg
mov
or
push
jmp
cmp
or
sbb
or
pop
mov
cmp
lods
popf
cs
lret
dec
in
and
xchg
ficompl
and
pop
add
push
addr16
cld
xor
or
jae
mov
pop
push
cmp
inc
mov
cmp
cmp
jmp
jecxz
cs
pop
outsb
ret
lcall
xor
sub
mov
sub
cltd
imul
icebp
cs
loopne
lret
test
gs
pop
pop
ljmp
mov
lods
pop
inc
repz
xchg
in
cmc
mov
xchg
push
inc
or
imul
cmp
mov
and
icebp
push
push
cmc
pop
fcompl
push
cmc
pop
sbb
mov
aad
jp
sub
jns
adc
scas
mov
in
cmp
xor
mov
rcrb
or
call
jns
xchg
xchg
mov
sbbl
aas
lcall
iret
pusha
dec
pop
rcrl
xor
gs
std
sub
sub
in
lret
cwtl
cwtl
push
add
sahf
mov
push
es
lcall
ds
or
lret
or
jle
or
lods
cmp
and
and
jb
add
adc
add
fdivs
mov
out
sbb
add
cli
and
pop
out
mov
pop
pushf
mov
or
data16
addr16
adc
cwtl
out
push
cmp
sub
fstpt
lea
jp
test
cmpl
sbb
arpl
mov
or
xlat
jae
in
xchg
cmc
sub
cltd
inc
push
cld
daa
mov
inc
push
sub
aad
arpl
jne
adc
or
cmp
cmpl
leave
mov
imul
mov
cmp
push
cmp
cmp
fcomi
lds
lret
mov
mov
sbb
xor
xor
fldenv
jnp
or
aaa
xor
call
hlt
add
ret
and
pop
rorl
in
xor
push
sbb
push
fcoml
sbb
and
or
pop
and
inc
loopne
or
insl
sbb
in
pop
dec
shrb
pop
sbb
adc
inc
jbe
or
push
xor
xchg
cmp
sub
xchg
icebp
add
in
xchg
lret
adc
jle,pn
push
sbb
add
sti
mov
fldenv
adc
inc
lods
iret
and
clc
mov
ret
push
push
adc
pop
push
dec
pop
in
sub
push
and
jno
test
outsb
mov
mov
inc
testb
xchg
jmp
mov
jns
ret
xchg
adc
xor
jnp
push
xor
fwait
icebp
ret
dec
xor
jl
inc
sbb
fildll
and
push
insl
dec
sbb
in
sub
cmp
dec
cmp
xor
dec
mov
repnz
mov
xchg
push
sub
mov
push
inc
add
jmp
pop
adc
jecxz
fst
push
mov
fs
push
push
dec
hlt
arpl
inc
mov
fidivl
inc
add
cmp
dec
cmp
xchg
xor
cmp
adc
in
jp
push
ficoms
xchg
imul
aaa
mov
icebp
sbb
test
mov
ret
mov
add
sbb
push
mov
imul
mov
dec
out
sti
into
mov
imul
pop
nop
adc
adc
mov
mov
adc
stos
movsb
ficoml
rcll
data16
aam
sahf
aas
push
adc
mov
cld
push
sbb
lods
sbb
lods
aam
lret
aas
xor
jbe
adc
lods
jbe
scas
fadds
adc
cwtl
push
xor
pop
xchg
xchg
lret
xchg
in
in
pop
fwait
xchg
pop
mov
jle
popf
dec
and
ret
xchg
adc
adc
test
xchg
xor
mov
sbb
jge
pop
adc
cmp
jb
mov
xchg
sub
cltd
les
sub
adc
mov
jl
lods
popa
adc
dec
lcall
insb
lods
inc
fcomip
xor
cmc
push
adc
or
movsb
xor
sti
adc
add
loop
aas
jb
enter
and
sub
loop
lea
add
add
adc
xchg
adc
js
pop
dec
mov
push
dec
sahf
pop
int3
ret
lret
fwait
inc
daa
das
push
sub
dec
icebp
lods
xchg
faddp
jg
test
mov
scas
repnz
and
pop
xchg
lret
sbb
sahf
repnz
xchg
scas
loopne
sub
or
pop
loop
and
cmc
fistpll
push
or
jmp
cmp
scas
adc
mov
negl
cld
sub
adc
adc
cwtl
cmc
inc
fucomip
mov
out
xchg
pop
inc
cmp
jo
pop
sub
jno
inc
sub
add
inc
push
adc
movsb
cmp
into
inc
adc
push
jecxz
xchg
push
lret
mov
mov
imul
into
ljmp
pop
mov
push
or
out
inc
push
sub
test
lret
imul
test
inc
mov
adc
insl
icebp
pushf
add
and
dec
inc
addl
sbb
or
test
or
orb
xor
jae
mov
test
adc
xchg
add
xchg
cmp
mov
xchg
mov
lahf
test
xor
xchg
push
jge
loop
adc
or
push
lds
stos
jns
pop
je
call
outsl
sub
les
jae
sub
sub
add
out
pop
xchg
fmuls
loopne
rolb
sub
sub
lods
xor
push
add
sbb
mov
js
enter
scas
adc
add
sbb
cmp
or
push
push
xchg
mov
jmp
shlb
test
test
xchg
repnz
loopne
xchg
loope
mov
repnz
lcall
mov
cwtl
mov
pop
daa
mov
sbb
mov
div
adc
lds
loopne
pop
pop
xchg
jns
loopne
imul
or
loop
lods
push
cmp
or
xchg
push
mov
dec
sub
inc
mov
inc
movsl
popa
fstpl
cmp
outsb
push
jne
jnp
push
or
push
cli
add
cmp
stos
or
stos
leave
inc
mov
sub
push
cwtl
cmp
pusha
pop
sbb
dec
dec
shll
push
das
inc
sbb
pop
xor
pusha
or
mov
dec
push
js
xorl
and
xchg
pop
add
sub
loop
sbb
or
or
mov
add
or
pop
pop
adc
insl
jae
cmp
movsl
push
adc
in
adc
dec
fiaddl
outsl
shlb
lret
in
mov
push
cmp
lret
adc
push
push
imul
add
adc
sub
dec
cltd
das
loope
mov
sub
ret
pop
fwait
stos
out
mov
xor
je
int
loope
outsl
or
cmp
xchg
jne
aas
jae
sbb
xchg
sub
cmp
or
xchg
rcl
push
fdivr
into
icebp
cmp
fsubr
outsl
push
mov
xor
fcompl
dec
mov
addr16
xor
adc
clc
lcall
push
xor
adc
jl
enter
test
inc
inc
mov
pusha
dec
inc
out
adc
mov
or
das
sub
and
loopne
add
jl
movsl
dec
and
jns
aam
adc
loope
es
lods
jne
xlat
pop
jmp
or
pop
jbe
dec
movsl
jl
push
sbb
mov
movl
pop
sub
adc
insl
test
xor
add
add
out
lds
dec
dec
xchg
out
dec
stc
pop
es
or
pop
outsl
jo
xchg
scas
ficoml
add
jae
out
jno
lret
dec
cwtl
cld
adc
mov
push
fs
dec
xor
rorl
pop
cld
ljmp
popa
inc
imul
sbb
and
mov
adc
sbb
loope
sub
fsubr
adc
lcall
add
mov
jo
push
shl
out
outsl
jg
cltd
mov
jl
cli
cmp
push
popa
cmp
in
mov
rcl
leave
cmp
pop
repz
xchg
fsubs
mov
int
cmp
push
dec
les
xor
pop
pop
fnop
inc
sbb
add
clc
jnp
pop
xor
mov
jbe
loop
fcomps
lcall
inc
inc
sub
or
cmp
out
sbb
cld
push
inc
aas
xor
sbb
ret
cmp
in
adc
pop
pop
cmp
add
or
jmp
mov
scas
pop
sbb
mov
and
sub
test
xchg
xor
out
adc
inc
add
lret
lds
sbb
mov
push
jl
aas
cmp
outsl
loope
pop
push
icebp
sub
adc
sub
mov
xor
push
sbb
sbb
stos
push
pop
dec
ljmp
shll
and
test
out
push
pusha
lea
adc
dec
dec
xor
inc
push
push
xchg
inc
ret
sbb
push
fnstenv
decl
xchg
roll
ret
ret
mov
repnz
dec
mov
mov
jns
and
inc
mov
or
sub
lcall
xchg
aas
in
xchg
fldcw
jg
fldenv
push
cmc
adc
inc
insl
mov
in
fsubs
js,pn
cmp
jp
sbb
mov
jb
outsl
pop
sub
aam
adc
dec
in
pop
repnz
aad
mov
mov
inc
icebp
inc
xor
jl
xlat
scas
xor
aas
mov
jbe
sub
pusha
push
leave
push
jae
add
pop
ds
inc
rcr
int3
pop
or
les
lea
dec
gs
sbb
out
push
push
push
aas
outsl
pop
les
and
push
jmp
fldcw
les
movsb
add
cld
sub
push
sbb
sub
and
cmp
sub
fwait
aad
outsl
jecxz
xchg
sbb
sbb
in
inc
sbb
dec
loopne
mov
push
lock
movsl
sbb
jne
push
loopne
sub
fsubs
ficomps
sbb
push
pop
hlt
pop
push
les
addr16
cmp
mov
pop
pop
loop
adc
xchg
xor
ret
loopne
inc
mov
loope
cmp
adc
das
fcoml
pop
gs
push
mov
mov
cld
or
test
dec
leave
lcall
or
xor
and
lret
jp
sbb
xchg
lods
iret
xorb
das
push
dec
push
pop
das
gs
sbb
jl
sbb
mov
jl
xchg
add
lcall
mov
push
mov
movsb
pop
sub
pop
xchg
das
mov
cld
test
rcrb
xor
adc
mov
shll
aas
or
fsubs
mov
stos
xor
push
cmp
sub
or
sub
lods
test
pop
mov
jno
lahf
pushf
mov
mov
test
fidivl
mov
mov
dec
jnp
mov
repz
jbe
outsl
or
repnz
aaa
cltd
insb
inc
inc
sbb
stos
insl
pop
jno
adc
int3
out
adc
in
fdivrs
xor
ljmp
loopne
xchg
int3
dec
pushf
pushf
in
sub
adc
les
mov
push
repnz
and
in
setg
fstpl
mov
inc
sbb
jle
test
sbb
aad
jp
cmp
lret
xor
sbb
jl
cmp
roll
mov
cld
enter
xor
arpl
rcr
inc
jp
dec
dec
int
data16
push
xchg
or
and
popa
sbbb
xchg
lock
sbb
jno
js
or
popf
aas
pop
adc
movsb
repz
sbb
int3
sbbl
or
dec
jl
adc
out
daa
pushf
or
cmp
test
clc
outsl
inc
dec
cmpsl
inc
hlt
dec
cld
cmp
mov
xchg
push
push
or
aad
mov
pop
fwait
into
sub
or
or
and
cmp
or
cmp
es
icebp
fwait
lods
adc
mov
fldl
mov
or
xor
call
sbb
cmp
xor
pop
mov
push
sub
or
pop
add
adc
mov
insl
lahf
cmpsb
add
inc
call
lea
xchg
je
dec
cs
cld
outsl
inc
push
jmp
imul
pop
cmc
xchg
ljmp
mov
or
xchg
adc
xchg
xchg
pop
jge
sub
cmp
sahf
mov
loopnew
or
call
and
call
cmp
mov
adc
xchg
xchg
push
xchg
clc
push
mov
or
ret
icebp
fildll
stos
dec
das
call
mulb
pop
icebp
in
add
xor
dec
push
dec
mov
stc
ret
xchg
xchg
pop
inc
imul
or
les
cmpsb
fdiv
cmpsl
cmc
xor
xchg
xchg
stc
adc
jl
cmp
pop
xor
lcall
out
repz
jnp
cmp
divl
in
dec
add
in
fstpl
ds
outsl
adc
jg
cmp
xchg
xor
push
cmp
dec
lret
dec
int
dec
mov
or
subl
and
lea
sub
mov
mov
adc
in
xor
mov
sbb
fs
dec
xchg
dec
adc
pop
shll
fnstcw
mov
mov
fsubrs
xchg
adc
push
xchg
repnz
inc
push
mov
add
fisubrl
fisubrl
mov
mov
jp
adc
arpl
outsl
push
jmp
call
mov
jb
adcb
jle
dec
mov
lea
lcall
fnstenv
xchg
jl
sub
ret
pop
push
dec
xorl
mov
jae
push
push
jecxz
nop
psrld
and
mov
mov
inc
cld
push
xlat
cld
add
jo
xchg
sbb
fisttps
inc
call
inc
and
out
cld
mulb
test
jbe
add
mov
pop
add
clc
or
add
imul
hlt
jbe
dec
push
fwait
bound
dec
repnz
fdivrl
ret
loope
pop
mov
fcmovnb
and
or
pop
mov
jb
enter
sub
rcrb
mov
adc
lods
push
nop
add
lret
dec
loop
lretw
imull
lea
dec
mov
inc
sbb
addr16
sahf
jge
cwtl
clc
xor
push
cmp
insb
sbb
pop
mov
dec
decl
jl
cmp
mov
adc
push
popl
sbb
jecxz
add
adc
nop
int
xor
xchg
icebp
dec
bnd
inc
mov
jg
int3
xor
mov
inc
ds
dec
cwtl
inc
std
jmp
out
lock
jg
jb
ds
int3
mov
inc
inc
fwait
pop
subl
test
stos
or
sbb
cmp
inc
fidivrl
dec
aas
mov
cmp
dec
lods
fcom
scas
xor
pop
imul
or
pop
nop
pushf
jnp
adc
mov
cmp
sahf
push
pop
loop
xchg
fmuls
jp
adc
pop
bound
or
push
fisttpl
fdivr
xor
int3
stos
pushf
cmp
dec
pop
scas
inc
or
push
repz
outsl
sbb
inc
mov
cmpsb
andl
and
cld
push
in
mov
xchg
adc
dec
pop
or
xor
test
jl
out
sub
int3
sbb
mov
jmp
sbb
out
lods
mov
ljmp
fcoml
lods
lods
adc
sahf
adc
aaa
push
jecxz
aas
sub
shlb
and
icebp
pop
pop
inc
cld
push
jmp
jb
mov
inc
rorl
mov
pop
sub
fisubs
ret
cwtl
pop
dec
mov
sub
push
stos
nop
test
pusha
jae
ds
xchg
jnp
add
fsubs
jl
adc
and
mov
mov
lcall
int
mov
popf
mov
stos
stc
popa
bound
jno
adc
test
cmp
movsl
xchg
fildl
shrl
add
adc
aas
push
movsb
adc
inc
adc
clc
xchg
jo
xchg
add
lret
push
movsb
dec
push
fisttpl
inc
adc
xlat
xor
xor
outsb
push
cld
jecxz
loope
sarl
xor
push
fsubrl
xor
lock
ja
add
cmp
test
dec
fistpl
pop
cld
push
icebp
jecxz
pop
add
es
cwtl
movsl
in
cmp
addr16
mov
xor
test
inc
push
jae
fldenv
aas
xchg
pop
inc
aam
dec
fidivl
inc
xchg
enter
ficoms
pop
adc
push
mov
test
cmp
cmpsl
and
or
dec
cld
xor
lret
sub
icebp
jbe
arpl
cmp
fmuls
xor
push
sahf
cld
jno
mov
push
xor
sarl
orb
movsl
adc
clc
push
or
cmp
or
or
repz
pushf
lods
les
sub
cmp
int3
mov
xor
inc
adc
gs
ret
imul
pusha
pushf
aaa
out
mov
dec
loop
ljmp
mov
cs
and
in
push
sbb
jl
lods
dec
mov
push
xor
mov
lret
nop
ret
ss
sbb
mov
mov
pushf
adc
push
sub
adc
sub
xchg
loopne
adc
jl
aad
loope
shll
and
push
or
hlt
xchg
jb
js
mov
dec
cmp
dec
pop
sub
pop
xchg
mov
jl
pop
faddl
adc
dec
mov
and
jle
jmp
imul
fldcw
inc
adc
cwtl
mov
jle
mov
pop
add
push
sbb
stc
jl
mov
aas
xor
pop
or
mov
cmp
icebp
jl
lods
xchg
test
mov
ficoms
jmp
cmp
addr16
pop
aas
sbb
dec
add
jb
xchg
and
sbb
lahf
pop
sbb
mov
lahf
and
cmp
inc
mov
cltd
mov
out
jae
frstor
jns
sbbb
shlb
sub
inc
xchg
dec
movl
lds
and
fidivrl
popa
xchg
adc
mov
xor
dec
push
mov
pop
push
mov
mov
xchg
xor
sbb
cmp
xor
cmp
lods
daa
or
mov
mov
pop
adc
mov
insl
push
out
insb
mov
inc
or
sbb
fs
mov
mov
push
dec
int3
or
inc
pop
mov
pop
pop
dec
adc
sub
rcr
clc
adc
xor
dec
inc
cmp
negb
movsb
sbbl
sbb
mov
ss
sub
xchg
gs
push
sbb
cwtl
repnz
popa
cmpsb
out
jno
mov
lds
inc
mov
xor
stos
cmp
iret
inc
inc
lahf
cld
cmp
ret
int
adc
push
push
sbb
adc
jmp
js
cmp
sub
push
in
sub
xchg
pushf
xchg
push
js
push
add
cmp
dec
sbb
sbb
adc
and
sbb
pop
xor
add
out
sbb
pop
cmp
xor
add
or
add
add
ss
iret
cmp
in
sbb
addr16
cmp
push
sbb
pop
pop
fs
cltd
rolb
xchg
push
rclb
jo
xchg
and
mov
mov
pop
test
cmp
dec
sbb
ret
aam
rcrl
mov
or
xchg
dec
fstpt
insl
pop
cmp
ljmp
nop
mov
xchg
mov
adc
or
js
aas
lock
or
push
add
pop
add
cmp
adc
cltd
arpl
pop
push
inc
call
cmp
xor
push
dec
and
pop
push
pop
cmp
iret
xchg
sbb
or
hlt
insb
add
cmp
pop
es
jmp
pop
xor
jl
inc
add
in
inc
ja
or
dec
in
cmp
add
xor
shrl
dec
dec
mov
inc
cli
dec
lds
push
scas
stos
jecxz
xlat
xchg
xor
jl
cmpsl
in
adc
or
out
and
push
or
roll
mov
mov
jb
sbb
push
dec
je
pop
push
lcall
inc
movsb
sub
test
sub
imul
aam
and
repnz
jbe
push
push
xor
icebp
jp
and
enter
shll
or
inc
mov
jmp
mov
es
xchg
push
dec
dec
jecxz
adc
adc
aas
repnz
out
sub
bound
mov
aam
mov
jne
pop
out
shr
sbb
mov
dec
cmp
cld
insb
inc
add
into
cmpsb
loope
push
xchg
adc
xchg
cwtl
ss
mov
bound
adc
cmpsb
sbb
leave
jno
out
pop
insb
sbb
pushf
jp
sbb
lods
sbb
outsl
div
out
sbb
jb
push
ds
dec
loopne
test
insl
add
adc
sbb
aas
cltd
fsubrp
bound
sub
mov
out
das
jl
cmp
add
sub
sbb
and
addr16
out
jecxz
notb
frstor
and
add
out
cwtl
popf
test
or
push
pusha
jmp
lea
add
in
dec
outsl
lea
aam
jl
shll
testb
test
mov
aaa
jecxz
fs
dec
stc
xor
and
or
cltd
cmp
cmp
pop
cmp
mov
mov
iret
adc
js
dec
dec
mov
mov
lret
push
xchg
xchg
fs
in
mov
and
sbb
outsl
loop
cmp
and
inc
adc
rolb
inc
and
pusha
push
xchg
pop
mov
adc
and
inc
invd
push
test
dec
sub
inc
inc
xor
loope
and
mov
sbb
add
xchg
mov
push
inc
imul
mov
sub
mov
loopne
test
push
loopne
sub
cld
jns
mov
add
in
sbb
xchg
lcall
add
stos
xchg
dec
mov
push
mov
fists
fcmovbe
sub
insl
fdivs
mov
mov
adc
imul
sub
mov
xor
or
mov
xor
sbb
mov
jno
mov
pushf
cmp
xchg
sbb
push
loope
push
cmp
push
inc
ret
fwait
mov
or
mov
dec
cld
xchg
cmpsb
push
push
test
std
and
aam
or
jmp
in
aas
push
mov
cli
pop
fcompl
mov
mov
mov
je
sbb
and
sbb
adc
in
xchg
test
clc
lods
cmc
cli
jmp
or
xchg
popa
in
cmpsb
insb
std
fwait
push
jnp
push
mov
and
fcmovb
adc
divl
sarl
mov
movsb
mov
shlb
pushl
xchg
ret
test
arpl
add
jmp
push
xor
push
imul
push
sub
fcomps
lahf
jns
inc
adc
add
dec
out
insb
jecxz
call
push
in
adc
fbld
add
adc
out
fadd
pop
lods
pop
add
dec
jg
lock
sub
pop
ljmp
je
sub
push
sub
and
loop
push
adc
out
push
fmull
adc
insl
insl
rcrl
into
mov
cli
lahf
dec
jbe
xchg
sbb
sbb
es
in
cmp
inc
mov
pop
in
sarl
movsb
jno
out
pop
stos
sub
jae
gs
lods
adc
and
bound
pop
mov
ljmp
insb
xchg
adc
pusha
nop
pop
cltd
daa
call
push
pop
adc
push
xor
adc
aas
adc
adc
stos
push
mov
mov
xchg
loopne
imul
lods
sbb
mov
ret
xchg
arpl
addr16
pushw
mov
clc
sbb
mov
data16
in
movsl
in
rcll
xchg
xchg
das
push
test
mov
sbb
sbb
lea
aad
jl
cmpsb
insl
icebp
push
stos
xchg
xchg
push
lock
or
fs
pop
stos
xor
pop
test
push
mov
ret
adc
cmp
push
mov
leave
rcrb
cmp
sub
inc
cltd
mov
fwait
xchg
sbb
cwtl
push
or
mov
add
fstps
push
dec
dec
pop
fstps
sbb
cltd
daa
add
or
lods
ror
xchg
push
pop
stc
mov
or
in
lcall
insl
pop
fisubs
pop
mov
dec
sub
es
lock
in
xchg
jle
pop
mov
shll
ficompl
ja
js
stos
dec
adc
dec
inc
xchg
fwait
sbb
out
fwait
sbbl
insb
xor
mov
int3
push
sbb
or
loop
mov
hlt
test
dec
repz
nop
or
sub
push
jbe
cmp
cld
lahf
cmp
orl
lods
into
push
sahf
test
jge
fidivrl
and
int3
jnp
data16
loope
popa
mov
mov
outsb
push
insb
adc
push
xchg
insb
xchg
mov
jp
iret
jmp
or
movsl
mov
sub
shlb
stos
xchg
les
xor
pop
fistps
pop
les
inc
mov
insl
add
push
dec
mov
sub
out
sbb
pop
test
cld
das
xchg
xchg
mov
mov
fidivrl
xchg
stos
dec
imul
pop
out
sbb
or
pop
aas
and
jo
xchg
adc
cmp
dec
ret
jmp
test
ss
mov
bound
aam
pop
popf
adc
or
cmp
fsub
pop
ja
xchg
inc
xchg
pop
jne
pop
adc
out
sbb
push
or
in
sti
gs
xor
arpl
inc
pop
dec
sub
fmull
xchg
int
or
in
cmpsb
orb
jb
dec
jno
andl
hlt
lret
in
push
adc
add
fisttps
add
scas
adc
sub
sbb
aam
rcrb
mov
les
push
out
push
shr
inc
sbb
in
fwait
cmp
inc
icebp
pop
jl
gs
in
pop
lcall
or
and
jns
fmul
inc
xor
adc
sbb
mul
fwait
mov
xchg
push
push
pop
sarl
push
xor
push
hlt
add
das
and
add
cmp
mov
xchg
aad
xor
push
dec
jmp
subb
sub
sbb
cwtl
stos
mov
fadd
scas
sub
pop
sbb
sub
pop
jnp
dec
lock
mov
adc
mov
lret
call
push
lods
and
out
inc
mov
or
lods
add
sub
cld
push
scas
mov
sub
lcall
dec
shrb
insb
or
pop
cmp
dec
cwtl
mov
adc
or
stos
dec
add
lret
xor
inc
lds
cmp
push
sbb
lahf
pushf
mov
add
add
mov
xchg
pop
cld
outsl
insl
jmp
mulb
or
out
lret
lahf
popf
cmp
push
sub
push
lahf
cmpsl
loope
das
adc
pop
cmpsl
test
pop
sub
adc
jecxz
jle
sbb
push
cld
movsb
jmp
push
xor
adc
stos
pop
adc
test
stos
je
pop
jle
unpcklps
in
or
push
push
mov
inc
scas
push
sbb
mov
sub
mov
clc
jnp
push
sbb
push
lock
pop
sbb
or
call
push
data16
add
adc
or
jb
fwait
lret
xchg
ja
lea
loopne
xor
lret
cmp
mov
xchg
outsl
or
push
xor
sahf
in
and
outsl
sub
inc
loopne
push
adc
fs
out
pop
stos
pop
rclb
add
icebp
push
xor
xchg
fldenv
xchg
pop
insb
and
xchg
pushf
shrb
xchg
inc
loopne
pusha
cli
push
hlt
push
ds
je
mov
sbb
cltd
fsub
rorb
pushf
fnstcw
inc
push
jle
mov
lahf
orb
orb
push
inc
outsl
xchg
push
enter
xchg
push
and
in
pop
xor
outsl
adc
test
push
or
icebp
inc
ret
sub
inc
xchg
or
push
in
sbb
xor
inc
push
test
pusha
adc
or
fidivrl
dec
mov
out
add
data16
pop
pop
movsl
popa
jb
popf
scas
fwait
mov
and
mov
push
or
sahf
aad
inc
cld
mov
mov
or
pushf
in
cmp
xchg
dec
loopne
cmp
fiaddl
cmp
cmp
fcoml
out
or
or
maxps
xor
jge
pop
push
dec
add
lods
adc
dec
aam
int
mov
in
ja
into
jecxz
sbb
pop
sub
and
aas
inc
js
setp
cmp
aas
push
and
pop
mov
nop
push
adc
rcll
aam
cld
sbb
rclb
mov
add
add
xor
mov
inc
enter
inc
out
or
mov
inc
daa
mov
cmpsb
sub
ss
add
and
daa
cmp
hlt
scas
les
popa
push
mov
aas
jl
popf
or
int
or
push
and
fnstsw
movsb
fisubs
push
pop
inc
adc
inc
push
mov
out
mov
fsubrs
fistpll
lret
std
inc
ds
and
into
in
int3
rcl
cmc
sub
mov
popf
add
rcrl
outsl
sub
push
inc
xchg
das
pop
pop
cld
push
ret
xchg
fstps
imul
dec
mov
cmp
sbb
jae
lods
imul
pop
adc
in
adc
push
pop
cmp
das
cmpsb
xchg
mov
mov
mov
and
adc
dec
rorb
rcll
cld
dec
in
cmp
loope
punpcklbw
inc
fiadds
push
push
pop
dec
xor
add
dec
int
dec
jmp
cmpsl
and
inc
cld
jp
mov
pop
adc
jp
sub
leave
test
mov
fistpll
push
or
loopne
adc
jp
mov
cld
mov
mov
push
and
add
stc
dec
rcrb
pop
lods
sub
push
push
inc
rorl
jl
cmpsb
add
push
lods
mov
xchg
push
fs
enter
inc
sbb
fisubs
aaa
inc
and
lods
lock
dec
inc
sbb
in
pusha
dec
cld
fisubrl
scas
fcoms
leave
and
pop
jno
cmp
mov
pop
cmpsl
cld
jo
and
mov
add
fwait
xor
adc
aas
inc
call
sarl
lds
lahf
in
scas
outsb
pop
js
movsl
out
lahf
dec
jl
mov
cli
idivl
inc
push
add
push
mov
mov
mov
test
rolb
mov
sub
and
aaa
je
mov
cmp
dec
dec
mov
push
mov
mov
pop
inc
add
aas
add
pop
adc
adc
sahf
pop
mov
dec
stos
pop
lds
add
jne
mov
pop
xchg
dec
pop
pop
inc
enter
aas
lods
pop
xchg
push
inc
andl
cld
divl
clc
jae
es
xchg
push
or
adc
sbb
push
js
pop
mov
adc
adc
nop
js
pop
push
mov
cmp
add
pop
mov
cmp
mov
mov
jge
inc
outsb
cmp
gs
push
mov
fdivrl
adc
cltd
xchg
lret
icebp
pop
jns
or
rcll
imul
out
ja
loop
dec
inc
pop
dec
fstpl
sahf
adc
dec
fstpl
mov
mov
cld
aam
push
aas
mov
mov
call
dec
cld
enter
pop
adc
push
sbb
jg
stc
inc
frndint
je
add
jb
insl
fsub
jp
mov
test
jo
outsb
or
out
dec
daa
scas
std
and
mov
sbb
cwtl
dec
mov
xor
or
add
cmp
dec
aas
push
mov
dec
test
push
pop
test
mov
sbb
push
daa
inc
repnz
push
outsb
pop
cld
lea
jl
xor
mov
xor
test
cmp
inc
idivl
js
jne
add
aas
sub
dec
cmp
adc
and
sub
add
push
add
pusha
sbb
add
popf
sub
test
push
fldt
test
jns
inc
scas
mov
add
cwtl
shr
int
add
in
pop
fstpl
pop
daa
cwtl
sti
mov
or
shll
sbb
cmp
adc
mov
or
pop
dec
jno
psubq
cmpsb
push
enter
dec
int
cmpsb
sbb
or
cld
sub
add
adc
stos
sbb
add
imul
lret
test
shr
fcomp
fsubs
or
inc
add
shl
clc
stos
push
pop
add
xor
jnp
out
addr16
and
adc
mov
stc
xchg
pop
out
sub
push
fldlg2
pop
pop
sti
pop
cld
iret
repz
mov
push
repz
mov
fdivl
or
cmp
repnz
ret
popf
outsl
adc
faddp
push
jge
es
xor
data16
pop
hlt
adcb
shlb
das
sbb
in
cmp
sbb
sbb
pop
add
lret
push
arpl
or
push
mov
shll
popf
and
jae
aaa
sahf
mov
dec
and
adc
or
lds
popa
out
jno
fiaddl
xlat
xchg
pop
int
xchg
and
inc
mov
push
in
test
pop
sbb
xor
out
xchg
je
add
sbb
xor
ljmp
xor
push
dec
scas
movsl
lret
or
pop
pop
out
adc
sub
sarb
mov
fs
aad
enterw
add
push
imul
lret
aas
out
sti
gs
jno
dec
push
in
jge
jns
mov
or
or
test
sub
sahf
pushf
fsubrl
ljmp
pop
mov
mov
add
adc
icebp
push
outsl
pop
xchg
rorl
or
rclb
pop
cld
daa
inc
jl
push
inc
test
inc
lds
pop
xchg
fsubs
sub
cmp
or
inc
dec
cmpsl
mov
xor
sbb
pushf
and
out
xchg
lret
mov
mov
jge
sbb
adc
je
xor
sahf
cwtl
loop
fisubl
in
fdivl
adc
inc
or
aaa
cwtl
pop
mov
xor
mov
dec
movaps
sub
and
clc
or
add
inc
cmp
bound
dec
loopne
xor
sub
movsb
inc
fstpl
adc
cmp
outsb
sub
adc
push
sbb
jp
xchg
clc
out
xchg
dec
or
mov
mov
shlb
mov
xor
cmpsl
push
repz
sbb
add
push
cmp
xor
xor
popf
out
pop
iret
push
push
aas
lods
add
lret
fsubl
xchg
push
add
mov
pop
cld
insb
and
enter
rolb
sbb
popl
push
push
pop
inc
pop
lds
cmp
sbb
xchg
jo
pop
es
pop
xchg
decb
xor
inc
mov
iret
and
xchg
into
add
jg
inc
jnp
leave
mov
mov
jb
sub
out
pop
leave
in
adc
iret
mov
or
pop
push
sbbb
pop
sar
inc
lods
or
fmuls
in
mov
loopne
outsl
shlb
popa
adc
mov
insb
shrb
inc
push
aad
into
clc
cmpsb
test
jbe
xchg
std
and
xchg
frstor
leave
jo
inc
mov
cmp
leave
aad
cmp
insl
lahf
cmp
fcoml
cld
jbe
adc
push
sahf
dec
xor
out
add
movsb
int3
cwtl
out
mov
dec
insb
push
into
mov
fmuls
jne
xor
adc
sbb
xchg
push
sbb
cwtl
cmp
push
cmp
xor
stos
aad
jmp
xlat
sti
jbe
xchg
mov
dec
lods
pop
add
dec
je
cmp
dec
nop
jge
frstor
jl
ss
jbe
rclb
into
cli
add
in
mov
mov
sub
imul
and
jecxz
mov
ret
test
adc
ret
push
jle
loopne
xor
mov
pop
mov
add
cmp
repnz
fcomps
mov
sub
lods
ret
push
ja
lods
scas
add
mov
pop
in
aad
pop
add
repz
fstpl
xchg
jbe
add
imul
adc
jb
add
adc
dec
push
test
or
fcoms
xor
push
mov
insl
rcr
int
dec
or
sbb
xor
ds
cld
sbb
pop
fwait
jcxz
adc
adc
sbb
sbb
pop
hlt
int
divl
out
packsswb
rolb
fwait
icebp
out
lods
mov
lds
jo
cmp
cmp
out
mov
test
push
cld
fucomi
lret
div
enter
shrb
jmp
mov
sub
xor
jmp
push
mov
pop
enter
aas
sub
mov
cld
cmpb
pop
pop
and
mov
mov
and
mov
adc
in
push
rcr
push
mov
mov
dec
testb
cmc
pop
fsubrl
mov
jns
es
mov
lea
push
push
scas
test
lods
cmp
fisubl
and
ficoml
adc
cmp
or
pusha
push
mov
pop
or
xlat
fdivrl
fsubrs
cmpsl
add
outsb
add
inc
xlat
clc
add
inc
lods
clc
jle
adc
outsl
inc
xor
mov
pop
fmuls
pop
sub
adc
out
and
xor
shlb
clc
dec
mov
or
xor
mov
movsb
xor
adc
adc
leave
lcall
pop
xor
dec
mov
push
lcall
je
or
sub
adc
add
sbb
push
js
jge
xor
inc
icebp
bound
jb
sbb
jbe
sbb
push
push
xchg
push
xor
cltd
add
xchg
cmp
xchg
or
sub
or
mov
push
adc
rorb
rorl
repz
inc
mov
test
adc
cmp
dec
test
xchg
ss
pop
xchg
xchg
aas
outsl
repnz
jg
mov
insb
out
imul
stos
aas
clc
out
cli
dec
pop
mov
lcall
sbb
dec
rcr
pushf
sbbb
test
mov
fwait
cmpsb
test
into
scas
jmp
xor
jl
lock
push
push
ret
xchg
sub
jl
or
sbb
cld
xchg
ss
loopne
or
cld
add
lret
repz
hlt
clc
fistpll
popa
pop
aas
movsl
in
rcrb
mov
dec
and
stos
pop
je
jns
inc
int
push
cmp
and
xchg
sbb
sbb
pushf
push
out
pushf
repnz
cs
cmp
cltd
enter
fxch
fs
add
adc
push
mov
dec
shll
repz
ds
das
ss
sbb
mov
into
insb
inc
popf
test
push
aad
cld
jo
fldt
push
xor
inc
mov
cmp
in
ret
cmp
les
sbb
aad
test
mov
int3
xor
pop
jg
enter
icebp
dec
jb
add
fucomp
or
icebp
inc
inc
jl
stos
or
or
leave
adc
xchg
imul
mov
ja
inc
icebp
sub
out
in
push
insl
xor
xor
xchg
sub
fdivs
mov
mov
jnp
mov
hlt
adc
divb
adc
fs
cld
dec
xchg
mov
push
sbb
sub
sbb
lods
fstpt
push
fdivs
xor
jge
or
dec
enter
lods
and
jle
or
int3
cmp
and
or
in
subb
xor
xor
test
in
andl
hlt
push
ret
push
int
ffreep
fdivrs
adc
xchg
outsl
insb
fwait
ja
and
and
inc
and
adc
add
mov
fwait
lahf
test
cwtl
cli
lock
jne
sub
mov
dec
sbb
cmpb
clc
pusha
or
and
shl
in
mov
mov
sub
ret
jl
call
cmp
xchg
push
mov
int
orb
movsb
adc
cld
sbb
movsb
or
negl
les
jl
cmp
push
mov
adc
pop
lahf
or
sub
inc
jp
sbb
and
ficompl
xor
xor
dec
fdivs
dec
push
rcrl
dec
cld
shl
adc
and
mov
cld
sbb
fimull
fst
sbb
insl
jge
xchg
mov
mov
push
cmp
pushf
fildl
dec
mulps
push
push
push
pusha
ja
add
addr16
inc
in
jno
cmc
and
lcall
sahf
icebp
cmp
or
sub
dec
sbb
jle
and
rorb
es
sbb
pop
adc
xchg
jg
outsl
jecxz
fisttpll
das
add
sub
ljmp
add
add
lret
or
fistpll
sbb
sbb
cmc
mov
sbb
adc
fsubrl
push
and
xchg
enter
mov
loop
mov
shlb
movsl
cmp
jmp
pop
js
cmc
and
xchg
pop
outsl
adc
adc
cmc
mov
enter
cmp
pop
inc
xor
cmp
out
and
inc
push
sbb
inc
mov
lahf
hlt
aam
aaa
xchg
adc
xlat
cwtl
shrl
add
jecxz
or
mov
cmpsb
inc
xor
into
adc
sti
movsl
sbb
xchg
xchg
push
sbb
push
outsl
ror
jmp
adc
je
in
inc
xchg
adc
cmp
lcall
ret
add
push
or
bound
push
sbb
into
movsl
adc
mov
xchg
test
cwtl
popf
or
lahf
xchg
lret
sbb
fdivrs
paddusb
xchg
outsl
adc
xlat
icebp
aaa
pop
add
lods
or
pop
clc
cwtl
push
mov
or
sub
loop
adc
add
push
ficompl
push
fst
int3
sbb
sbb
daa
push
sahf
call
dec
and
sbb
xlat
lret
mov
mov
mov
outsl
js
lcall
subb
jae
pop
bnd
inc
adc
subb
xor
fsubr
adc
inc
in
pop
jg
jnp
or
xchg
and
or
sub
adc
popf
out
mov
cli
and
cltd
dec
fisubrs
aas
or
inc
aas
or
rorb
inc
jb
fists
jae
pop
inc
mov
dec
adc
lods
or
lret
fwait
or
add
mov
adc
ja
adc
dec
les
or
push
add
push
xchg
sub
iret
or
push
out
push
adc
push
pushf
scas
and
inc
or
push
repz
out
mov
lods
push
fstps
les
cmp
ficompl
bound
inc
mov
mov
and
mov
fmull
cmp
test
sbb
mov
xchg
adc
jnp
aam
xor
cmc
loop
xchg
dec
xor
outsl
out
sbb
or
cmp
leave
mov
mov
pop
inc
adc
inc
mov
call
sti
xchg
pop
sbb
fcom
pop
inc
leave
dec
stc
or
inc
or
cmp
shlb
sbb
dec
fs
sub
sbb
js
mov
add
sub
sbb
adc
ficoms
aam
ror
push
xchg
pop
cmp
aas
imul
bound
fisttpl
call
xchg
lahf
cmp
pusha
lcall
mov
sbb
cld
pop
mov
cwtl
imul
and
dec
sub
movsb
cmp
hlt
lods
ljmp
mov
mov
aaa
int3
inc
ja
icebp
arpl
dec
rcl
shl
cmp
and
cld
cmpsl
mov
adc
and
mov
adcb
lahf
outsb
add
push
fimuls
adc
sub
notl
out
rcll
cwtl
lcall
sbb
fcmovnu
icebp
jecxz
sbb
and
sub
jbe
test
adc
dec
hlt
jbe
test
jle
mov
jo
fidivrl
adc
js
pop
and
mov
push
jle
pop
sbb
mov
push
gs
mov
pop
xchg
outsl
push
lods
shlb
pushf
test
or
sbb
ljmp
dec
js
cwtl
sarl
cltd
adc
sub
into
adc
cmp
push
stc
sbb
into
xor
jecxz
sbb
test
jp
xor
inc
pop
outsb
sbb
cmpsl
aas
xchg
mov
cmpsl
cmp
fadds
or
adc
jb
sahf
xchg
mov
mov
mov
inc
or
and
scas
dec
aaa
inc
in
mov
jb
fcoms
jl
mov
pop
or
cli
xor
lods
daa
cmp
mov
xchg
xlat
sub
pop
jg
out
pop
push
xchg
ljmp
xor
dec
ljmp
lcall
sub
cmpsl
mov
xor
cmp
pop
xchg
pop
sub
cmp
in
cmp
hlt
sbb
inc
icebp
pop
sbb
adc
or
jb
and
pop
cmp
je
imul
fimuls
push
insb
and
mov
dec
lahf
sbb
pop
dec
icebp
mov
xor
or
repz
stos
pop
push
cmp
mov
sub
push
icebp
or
or
aaa
lahf
push
and
sub
pushf
sbb
pop
inc
adc
call
ja
movsl
pushf
and
push
outsl
push
cld
movsl
aam
push
and
sub
inc
and
or
cmpsl
jno
aad
lcall
adc
adc
mov
add
jns
and
push
pop
xchg
xor
and
dec
dec
push
lods
add
int
insb
xchg
push
out
aaa
lret
mov
push
xchg
lods
adc
aaa
push
inc
lret
jge
mov
jnp
adcl
sbb
dec
in
jle
adc
aam
popf
negb
in
ret
sbb
sbb
enter
xchg
sub
loopne
int
add
jo
and
cmp
ret
fwait
std
cmp
push
cmpsb
fs
cmp
xor
data16
icebp
nop
add
insl
mov
xor
pop
inc
mov
sbb
cmp
xor
adc
fldcw
push
inc
in
jb
inc
stos
out
std
inc
popf
aad
mov
pop
jb
or
push
cmp
pushf
js
movsb
rcrl
cld
add
test
add
pop
inc
hlt
test
shlb
repz
dec
lods
fsubp
mov
cwtl
test
popf
and
pop
mov
mov
xchg
or
pop
fdivs
pop
cmp
mov
xchg
insb
cld
jge
in
sbb
pop
lret
adc
fs
sub
stc
xchg
adc
xchg
dec
icebp
jb
push
xor
cmp
cld
das
mov
lret
les
jnp
xchg
fwait
push
add
hlt
xchg
mov
mov
sbb
arpl
cltd
cmp
or
loop
mov
mov
lods
lea
sbbl
je
push
mov
je
sbb
xchg
insl
sbb
ret
pushf
inc
mov
stos
jne
xlat
jle
das
and
iret
or
adc
sbb
insb
shrl
in
cli
leave
mov
dec
xchg
mov
scas
jmp
call
xor
sti
movsb
push
adc
xchg
mov
push
dec
inc
xor
dec
xor
push
out
stc
and
push
shl
das
ret
js
les
jecxz
lods
or
sub
insl
pop
cmp
xor
and
push
call
add
lahf
mov
xchg
adc
scas
sbb
int3
pop
test
push
lds
iret
sbb
jns
cmp
fmull
aam
jbe
cmp
aas
dec
push
test
insb
enter
xchg
adc
std
or
jb
xor
mov
ja
pop
in
or
add
mov
pop
push
cmp
or
xor
inc
jns
jge
cmp
dec
adc
test
les
xchg
movsl
adc
movsb
sahf
or
add
test
lock
std
dec
sub
sti
mov
pop
jecxz
lahf
sti
test
pop
mov
sbb
cmpb
les
movsb
popf
or
dec
xor
cld
cmp
jecxz
adc
or
adcl
lods
test
fisttpll
mov
les
push
or
xchg
test
pop
adc
or
push
or
lods
jp
cmp
pop
loopne
sub
mov
adc
xor
dec
xor
adc
loop
sub
lcall
add
and
ss
adc
add
lods
and
loope
xor
pop
les
and
push
push
popa
inc
mov
cwtl
cmp
or
pushf
lock
orb
sub
push
jns
rcrl
das
aam
adc
insb
cmp
mov
pop
loope
push
xchg
inc
mov
or
cmp
mov
rcl
cmp
loope
fs
pushf
dec
jecxz
je
sub
aaa
push
fs
pop
push
repz
sbb
cmp
pop
rolb
push
or
push
and
mov
jo
ficompl
and
loop
sbbl
ljmp
or
pop
aam
int3
xchg
cmp
add
jmp
adc
jp
daa
aaa
dec
lcall
cmp
sbb
imul
ss
mov
dec
xchg
add
jae
cmp
in
lret
shrb
iret
xor
xlat
fists
cmp
ss
pop
xchg
cmp
push
or
xchg
mov
add
pop
out
jbe
pop
push
mov
lcall
mov
shl
aas
sbb
fsubs
sbb
sbb
test
cltd
daa
xlat
xor
lea
je
adc
out
push
lock
hlt
out
sbbl
pop
xor
int
adc
adc
or
xor
cmp
in
mov
adc
or
and
cmp
inc
call
jecxz
test
and
clc
fwait
inc
movsb
sbb
lahf
clc
rcrb
dec
xor
and
andb
sbb
ss
add
adc
adc
cmp
pop
push
stos
out
sbb
add
data16
adc
fstl
dec
adc
pop
cmp
les
mov
sub
aaa
popf
sahf
popa
fwait
lods
push
lea
cmp
sbbb
fwait
pop
sub
pop
mov
add
popa
mov
xchg
pop
dec
sbb
mov
and
shrb
movsl
je
aaa
lahf
cmpsb
fstps
sbb
xor
xor
mov
test
test
pop
xchg
mov
enter
mov
sbb
or
adc
mov
nop
sbb
jg
sti
xor
ss
jg
stos
xchg
cwtl
ss
sbb
xor
pop
mov
xchg
mov
cmp
cwtl
sub
xor
mov
mov
sahf
lahf
out
aam
dec
or
adc
add
in
xor
or
cmp
xchg
adc
mov
fwait
and
push
mov
mov
in
sbb
push
add
jl
xchg
cmp
jnp
cmc
cmp
int3
jl,pn
pop
fdivl
or
add
dec
sbb
adc
adc
adc
xchg
mov
dec
test
mov
xor
jmp
mov
sbb
xor
ss
and
jl
mov
xchg
push
hlt
rolb
sbb
mov
jecxz
test
lret
fistpll
lods
dec
push
inc
cmp
fmull
lea
add
fcompl
es
in
adc
mov
pop
pushf
aad
test
inc
cmp
mov
adc
sarb
test
mov
xor
cmp
mov
inc
std
sbb
mov
in
sbb
or
or
sbb
xchg
pop
hlt
and
repz
adc
adcl
or
sbb
mov
es
roll
pushf
aam
jae
adcl
sbb
lahf
adc
xchg
sarb
or
adc
sbb
sbb
add
loopne
nop
pop
sub
int3
pop
pop
cmp
or
cmp
or
cmp
pop
mov
cwtl
pop
movsb
cmp
push
push
scas
and
lea
cmp
adc
mov
sub
pop
sbb
mov
pop
add
xor
sub
cmp
pop
push
cmp
pop
inc
cmp
or
pusha
pop
loope
adcb
mov
mov
in
inc
pop
sbb
pop
into
cmp
adc
sub
test
cwtl
and
mov
out
sub
sbb
pop
lds
pushf
xor
or
xor
loope
pop
sbb
pop
or
mov
mov
add
push
cmp
and
cwtl
pop
aaa
pushf
rclb
clc
hlt
cmp
mov
and
fsubp
in
nop
pop
sub
lods
pop
pop
cmp
sbbb
xchg
or
cmp
cmp
pop
mov
js
movsb
cmp
push
sub
scas
and
jae
adc
xchg
xor
add
dec
push
add
pop
adc
sub
xchg
mov
xchg
pop
inc
cmp
pop
push
cmpb
pop
mov
nop
add
nop
mov
mov
push
js
add
jecxz
pop
xchg
cmp
pop
test
js
push
xor
cmp
adc
mov
mov
jp
sarb
pop
mov
cmp
and
repz
cld
pop
xchg
sub
dec
stos
jbe
jne
adc
pop
adc
xchg
mov
out
fsubrl
add
lods
xor
push
mov
nop
cld
in
movsl
faddl
dec
sbb
repz
cmp
cmc
sbb
add
sub
fcmovb
cmp
push
inc
fldl
push
push
ret
je
push
push
test
sbb
aam
sub
dec
nopl
or
add
xor
pop
movsb
cmp
ret
sbb
cld
cwtl
pop
mov
cld
in
or
or
lcall
xchg
lods
inc
pop
aaa
fstpl
stc
repz
pop
push
test
int
mov
leave
push
push
adc
push
and
dec
push
loop
inc
pusha
ret
ret
push
add
adc
mov
cmp
mov
xor
decl
mov
pop
pop
pushf
pop
clc
pop
imul
or
popf
adc
sti
int
or
xchg
out
lcall
addr16
jne
enter
xchg
xorb
rclb
cwtl
cmp
out
mov
add
xor
js
cwtl
cmp
cmpsl
xchg
push
lahf
jge
sahf
pop
adc
test
dec
xor
inc
fdivrs
push
mov
push
and
adc
sbb
pop
pushf
mov
dec
mov
add
cmp
aaa
pop
in
dec
repnz
jge
lods
push
pop
mov
dec
adc
loope
mov
push
cmp
xor
mov
dec
dec
out
pop
in
cmp
adc
xor
dec
inc
push
xchg
cmp
fldl
mov
lahf
pushf
sub
pushf
cld
pop
pushf
mov
lret
cwtl
mov
jecxz
sbb
pop
nop
mov
rcrb
out
sub
inc
push
cmp
jae
xor
outsb
xchg
sarb
cwtl
out
and
sub
pop
imul
push
mov
push
pop
fbstp
ja
pop
sbb
call
rcll
test
lret
adc
xchg
rolb
add
hlt
and
sub
and
sub
aaa
sub
cmp
dec
in
hlt
or
fs
popf
int
in
imul
mov
add
int3
adc
lock
cwtl
les
xor
jl
lods
cmp
pop
adc
add
les
cmpsl
mov
mov
scas
or
int3
add
loop
add
ficoms
or
out
cmp
mov
std
or
xchg
shrb
popf
sbbl
mov
adc
mov
mov
sbb
xor
ljmp
test
pop
lock
push
cmp
dec
xchg
xor
push
test
xchg
insb
push
test
in
fwait
xor
adc
sbb
aas
adc
mov
dec
cmp
je
loope
adc
jmp
cmp
and
sbb
mov
shll
mov
jge
pop
int3
popf
iret
lods
loop
adc
xor
pop
test
pop
or
pop
adc
cli
pop
mov
or
aas
add
adc
cli
xor
fdivr
inc
stos
nop
pop
adcl
add
jmp
mov
fs
inc
test
push
and
test
sub
fdiv
sbb
movsl
loop
mov
ficoms
test
mov
dec
loopne
lahf
xchg
mov
mov
sub
lods
inc
lahf
hlt
xchg
mov
jge
xchg
push
mov
in
fwait
adcb
loope
call
pop
loopne
adc
pop
jecxz
cwtl
dec
push
push
pushf
sub
mov
insl
or
or
int3
cmc
cmp
add
gs
je
inc
inc
test
xchg
mov
and
mov
sbb
repz
push
fwait
pop
popf
hlt
enter
insb
aas
mov
adc
add
or
jnp
cli
jo
cmp
sub
sbb
or
setno
or
adc
pushf
mov
or
and
test
clc
testb
pushf
cld
cltd
popa
sub
or
and
insl
mov
scas
testb
movsl
imul
xchg
sbb
lods
or
xor
and
ret
pushf
test
add
lret
cmp
xor
jecxz
adc
pop
add
lods
push
jl
leave
icebp
adc
inc
sub
xchg
xor
rcrb
add
or
enter
xchg
je
gs
mov
insb
gs
out
add
loopne
aam
dec
nop
mov
cwtl
sub
cmp
and
insb
add
inc
sbb
lahf
cld
movsb
add
pushf
add
and
mov
and
jb
adc
xchg
dec
or
or
and
sbb
pop
add
lock
movsb
dec
or
in
lods
lock
mov
fwait
cmp
adc
lahf
fisttpll
movsb
rclb
or
cld
mov
in
movsl
xchg
dec
xchg
adc
sbb
pop
and
aas
cld
dec
sbb
or
or
aad
js
cmp
adc
test
xchg
in
push
add
popf
js
cmp
and
fdivrl
outsb
out
nop
sub
pop
pop
aaa
bound
in
add
sbb
add
pop
add
inc
fs
loope
adc
pop
loop
pop
mov
dec
adc
fmull
or
fstpl
sbbb
push
sbbl
pusha
sub
and
push
mov
pop
icebp
cmp
adc
fdivrs
pop
iret
js
cmp
add
xor
pushf
or
sti
adc
dec
adc
fcoml
or
addr16
push
push
fs
clc
push
xchg
adc
dec
cmp
int3
fcmovbe
je
xchg
shlb
in
adc
subl
mov
addr16
xor
shlb
in
adc
aam
aad
je
mov
adc
lea
in
adc
or
aad
je
ja
adc
jp
or
cmp
or
in
repz
push
cmp
mov
mov
cmp
repz
pushl
push
adc
or
pop
push
cmp
lea
fcomps
sbb
sbb
and
fimull
pop
insb
xor
pop
or
and
xor
xchg
mov
cmp
or
add
or
fmull
jp
mov
aam
lods
dec
push
adc
mov
adc
xchg
adc
cwtl
adc
out
fbld
aaa
pop
cmp
lock
getsec
pop
iret
icebp
cmpsb
cmp
or
adc
sbb
adc
sbb
out
cmp
lahf
xchg
std
lret
loop
push
or
adc
jo
xchg
push
cmp
rcrb
add
adc
sbb
js
in
and
pop
xchg
or
mov
sub
pushf
lods
cmp
add
in
or
xchg
adc
push
mov
jne
pop
sbb
cwtl
pop
push
stos
cmp
aam
xor
lret
cwtl
add
and
mov
add
cmp
push
lret
xchg
sbb
cwtl
pop
aad
jbe
je
mov
js
cmp
sub
xchg
or
dec
loope
movsb
push
or
jecxz
fcoml
pop
dec
cmp
adc
fadd
out
es
cmp
or
out
pop
ret
sbb
cmpsb
cmp
xor
pushf
or
pop
xor
sbb
stos
aas
loop
call
arpl
sbb
push
loope
cmp
adc
xor
or
out
aam
and
sub
mov
push
xor
jecxz
xchg
dec
idivb
push
lahf
mov
lret
jl
push
std
dec
fidivrl
dec
mov
or
movsb
pop
dec
cmp
jb
pop
popa
ret
les
pop
xor
inc
arpl
fdivrl
fdivrl
xor
sbb
popa
pushf
adc
mov
add
data16
mov
xor
subb
lods
lahf
mov
add
jl
pop
cmp
pop
adc
fstpl
loope
xor
popf
aam
or
adc
ds
pop
mov
mov
je
cmc
ret
lods
pop
outsl
xor
cmp
mov
push
lods
adc
jecxz
fisubl
ret
pop
push
add
mov
or
xchg
lret
or
fdivp
dec
adc
xor
shlb
xor
cmp
push
cmp
aas
bound
lods
sub
mov
popf
push
and
and
sub
or
push
andl
add
cmp
pop
cs
dec
popl
xchg
add
cmp
add
and
jecxz
sbb
insl
out
adc
adc
cmp
dec
adc
sub
cmc
adc
in
push
loope
aam
inc
push
push
mov
or
sub
mov
scas
pop
les
in
sbb
aas
mov
js
loopne
int3
lods
pushf
and
xchg
lods
aad
push
insb
xchg
cmp
pop
lock
mov
adc
cwtl
ds
test
insb
sbb
adc
pop
cpuid
loope
cmp
pop
add
mov
push
xchg
adcl
pop
adc
adc
inc
cmp
cmp
pop
mov
sub
ds
mov
push
iret
les
push
sbb
pusha
adc
je
fsubrl
fsubrl
inc
adc
pop
mov
test
xor
int3
js
fdivrl
add
dec
in
push
mov
xchg
in
sbb
shll
or
jle
movsb
push
pop
ret
aam
pushf
sub
cld
sbb
movsl
bound
dec
pop
cmp
lahf
dec
in
mov
fs
or
jb
fdivrl
insl
aam
cmp
or
and
xor
aam
jb
pop
add
mov
into
adc
sbb
adc
insb
sbb
cld
dec
mov
sbb
xor
jnp
or
or
pop
sbb
pop
test
or
inc
add
pop
cmp
xor
shlb
lods
push
imul
pop
inc
xor
jl
xchg
cmp
cwtl
pop
sub
imul
and
adc
push
xchg
or
fdivl
adc
cmp
daa
add
push
outsb
ljmp
dec
jo
or
and
pusha
jo
std
inc
stos
loopne
pusha
in
jmp
or
jae
xor
push
fcom
push
shll
nop
lods
adc
mov
or
or
or
es
int3
add
stos
adc
jne
jl
sub
in
sbb
into
cmp
cs
pop
mov
lods
mov
movsl
jl
lret
ret
test
test
lret
nop
outsl
pop
fcompl
add
imul
cmp
mov
add
mov
xor
add
cmp
pop
xor
ss
push
pop
add
or
movsl
jmp
xchg
inc
jge
or
cwtl
aaa
aaa
arpl
test
hlt
pop
xor
in
adc
scas
cmp
mov
sbb
cld
mov
cs
adc
pop
test
and
sub
cmp
mov
push
mov
or
dec
inc
or
sub
xchg
jmp
pushf
add
lret
mov
push
pop
cwtl
insb
xchg
jl
pop
xchg
cwtl
inc
xchg
jl
pop
xchg
xchg
sbb
mov
lock
xchg
lret
mov
pop
pushf
xchg
lock
mov
out
and
xchg
jl
out
or
ljmp
push
cmp
lods
or
sub
push
fsub
pop
inc
dec
rorb
adc
push
stos
add
sub
leave
pop
adc
or
in
pop
pushf
mov
xchg
in
push
je
ud0
sbb
mov
xor
and
inc
cwtl
jge
dec
adc
xchg
push
sub
push
sbb
in
dec
or
mov
cmp
clc
sbb
je
sub
popf
jl
adc
pushf
mov
movsb
scas
imul
adc
cwtl
lcall
cld
cmc
mov
push
adc
aam
cwtl
cmpsl
popf
imul
sub
push
hlt
xchg
sub
or
jne
inc
xchg
pop
sbb
sbb
mov
sti
imul
add
xchg
lahf
push
movsb
xor
fmuls
daa
loope
cltd
xchg
xor
jmp
hlt
add
push
popa
dec
cwtl
dec
or
push
in
push
sbb
jle
clc
adc
out
test
or
or
add
dec
sbb
lret
xlat
lods
xchg
or
aam
shl
add
mov
mov
aam
xor
and
pusha
pop
testb
pop
mulb
sbb
fisubs
nop
xchg
inc
add
add
add
out
hlt
or
or
mov
in
and
xchg
lahf
repz
jne
pop
or
arpl
xchg
pop
and
push
outsb
cmp
ja
jl
xor
push
stos
adcb
xchg
test
add
or
push
jno
test
sub
in
or
adc
mov
lods
add
fucom
dec
ret
in
adc
or
cmp
adc
out
int3
pop
or
pop
xchg
out
test
lahf
mov
or
js
and
adc
bound
pop
test
xchg
or
or
aad
jp
dec
out
xor
mov
cwtl
jnp
adc
insb
mov
sbb
xor
jnp
cmp
push
jns
je
jmp
xchg
test
les
data16
xchg
dec
xor
pushf
stc
in
cwtl
and
pop
cmp
frstor
or
xchg
jle
arpl
mov
dec
sbb
mov
or
sbb
add
popf
fidivl
sbb
mov
fcoml
xchg
xor
movsb
push
dec
add
cmp
data16
pop
cmp
movsl
popa
cmp
inc
fs
in
inc
or
add
gs
mov
int
push
pop
xor
or
push
cmp
and
inc
pop
cmp
mov
lods
dec
push
sub
test
mov
xchg
test
cmpsl
in
jae
push
and
cwtl
sbb
ss
lea
push
jle
jp
or
jmp
xor
cmp
push
jp
or
jb
push
ljmp
push
lcall
pop
pop
xor
je
adc
out
repnz
scas
adc
dec
cmp
ja
movsl
adc
xor
clc
loop
movsb
dec
mov
fmull
test
xor
or
pop
cmp
out
js
sahf
xchg
or
test
adc
mov
sub
std
mov
ficomps
push
cwtl
mov
ret
lock
cwtl
dec
movsb
push
fimull
xchg
lods
hlt
movups
jecxz
or
negb
or
push
int
mov
mov
in
int3
lods
and
push
fstpt
jl
adc
and
pop
inc
xchg
cwtl
dec
orl
cmp
or
cmp
fcmovu
pop
xor
push
push
pop
jb
dec
or
fs
push
cmp
cmp
or
and
or
and
ficoml
or
xor
jp
sarl
leave
in
jo
mov
loopne
sub
add
mov
cmp
test
adc
jecxz
mov
in
adc
gs
fstps
cmp
push
jno
jl
or
out
adc
jae
pop
or
movsb
test
jmp
add
adc
test
mov
cmp
mov
pop
dec
or
adc
mov
jo
mov
in
or
daa
jmp
mov
mov
or
or
adc
pushf
js
lods
adc
cmp
jg
sti
sub
or
cwtl
pop
xchg
fsubrl
push
pop
mov
mov
out
or
enter
sbb
jns
repz
xchg
mov
adc
sbb
mov
sub
cmovp
mov
fs
mov
dec
mov
inc
shl
out
test
push
jecxz
out
mov
xchg
cmp
scas
add
fs
leave
fcompl
pop
cmp
sbb
xorl
cmp
sbbb
adc
sbb
jecxz
sub
jecxz
ficomps
xor
outsb
pop
stos
cmp
or
insb
sbb
xlat
out
or
mov
nop
lods
int
mov
and
insb
pop
out
pushf
and
cmp
add
inc
mov
aam
pusha
xor
push
xchg
xor
xchg
movsb
sbb
sahf
mov
sbb
out
jne
push
cmp
jmp
adc
or
inc
call
adc
adc
pushf
inc
pop
dec
jg
in
test
mov
sub
adc
cltd
jnp
add
fmull
mov
pushf
sub
or
call
mov
jg
sbb
pushf
pop
leave
sub
mov
movsl
imul
xchg
arpl
pushf
mov
cmc
pop
shlb
push
cmp
out
mov
cmp
rcl
push
or
jne
rcr
or
pushf
inc
inc
mov
test
pop
fdivrl
sub
inc
enter
cmp
call
in
push
sub
inc
pop
add
call
inc
imul
xchg
push
jns
int3
pop
shr
jo
sbb
pop
push
fnsave
movsb
sub
pop
test
push
lahf
mov
cmp
pop
cmp
unpcklps
es
imul
inc
and
je
and
dec
fcoms
add
add
mov
pop
add
jl
pop
sub
sarb
flds
or
idivl
js
jle
loop
mov
lods
hlt
xor
icebp
ljmp
push
rcrb
pushf
mov
sub
cld
xor
inc
cmp
sbb
scas
or
insb
dec
add
adc
push
mov
sub
xchg
aas
cmp
or
jg
cmp
cmp
sbb
jle
jb
adc
inc
cwtl
stos
mov
sub
mov
mov
mov
sbb
pushf
imul
or
sahf
pop
cltd
cmp
jmp
add
dec
jae
pop
sbb
icebp
ds
push
xchg
adc
nop
pop
cld
cmp
mov
pop
pushf
push
aas
cmpsb
or
sbb
test
dec
pop
mov
addl
divb
divb
sub
cmp
fcoml
xor
fucompp
testl
dec
xchg
orb
sub
aas
je
and
repz
or
inc
mov
push
pop
jl
cld
and
lahf
adc
adc
cmp
js
dec
scas
pushf
adc
shl
bound
ror
sub
adc
mov
pop
sub
shlb
mov
stos
jo
repz
pop
or
test
xchg
and
cltd
xchg
bound
or
sbb
mov
cmp
pop
cmp
pop
dec
test
rorw
push
pop
test
in
adc
lds
add
add
nop
pop
insb
arpl
mov
aam
push
nop
dec
cmp
cld
pop
sarl
in
or
push
sbb
andl
sub
pushf
add
xchg
movsb
cmc
pop
mov
xchg
ret
sbb
mov
cmp
ret
lahf
shlb
add
repz
cld
jae
or
mov
push
test
nop
fwait
and
push
cmp
adc
xchg
push
push
ret
jg
add
or
test
sbb
cmp
xor
mov
aad
push
cmp
add
repz
push
or
adc
loope
xor
mov
push
dec
mov
jae
push
out
imul
lea
or
mov
mov
jno
lahf
mov
xchg
jecxz
pop
mov
movsb
sbb
jmp
dec
mov
orl
cmp
jo
cmp
add
or
aam
push
push
jbe
and
daa
sbb
inc
xchg
add
cmpsb
mov
orl
int3
cmp
and
or
pop
push
dec
dec
pop
unpcklps
mov
inc
xchg
stc
add
pop
movsl
cmp
pop
mov
mov
cwtl
setle
sbb
inc
cld
or
cmp
aaa
xchg
jp
xor
lret
or
push
insb
cmp
sbb
enter
or
je
sbb
movsb
in
ljmp
jp
stc
das
pop
mov
sbb
sub
sub
out
in
adc
inc
jnp
cmp
or
xor
push
fisttpll
inc
jl
mov
test
sub
shrl
ss
cmc
popl
inc
sbb
jle
and
mov
in
es
movsb
adc
outsb
adc
imul
adc
mov
adc
sub
push
jne
push
arpl
cmpsl
mov
out
xchg
pop
mov
inc
mov
pop
stc
push
mov
dec
mov
nop
add
popa
xor
mov
testl
add
lahf
pop
das
clc
lods
int3
aam
dec
mov
out
inc
ror
lret
xchg
in
test
pop
out
rcr
sahf
adc
xchg
or
push
mov
aad
das
fildll
push
enter
and
inc
pop
add
mov
xchg
xor
xchg
aad
xchg
scas
bound
push
xchg
add
and
adc
xchg
adcl
sti
das
pop
sub
pop
fiaddl
scas
and
decb
jo
out
jo
mov
xchg
in
out
arpl
movsl
jl
sti
pusha
jbe
mov
stc
dec
inc
stc
jo
fimull
xor
mov
fs
xor
scas
lods
bound
lods
nop
test
sbb
xor
push
push
push
sbb
xchg
jmp
or
xor
and
push
fmul
jo
fprem1
pushf
pushf
or
pushf
lea
je
jmp
lea
call
pusha
movl
call
jae
call
push
or
stc
or
mov
int3
sbb
pop
pop
repnz
push
sub
sub
sbb
pop
jg
cmp
aaa
xchg
mov
jns
pushf
loope
and
or
cltd
mov
sub
pusha
cmp
jp
fdivrl
or
or
adc
pop
pop
sub
fwait
mov
dec
xor
movsb
sbb
fisubs
pop
mov
hlt
into
jg
and
icebp
lods
mov
add
pusha
pushf
pushf
pushl
ret
cli
or
lcall
iret
gs
xor
pop
cs
dec
ljmp
inc
ja
pop
inc
hlt
inc
sbb
xchg
in
pop
xchg
add
andb
test
sub
push
pop
jb
push
push
cwtl
push
loope
cmpl
decl
mov
mov
mov
incb
dec
je
mov
sbb
pop
in
dec
or
xchg
and
outsl
xchg
xlat
xchg
xchg
iret
or
sub
jns
jg
xor
test
movsb
fisubl
jecxz
cli
lret
adc
test
or
imul
fmulp
pop
iret
cmp
dec
cs
mov
fisubrl
cmp
mov
mov
das
in
mov
gs
mov
sbb
xchg
lds
xor
sbb
and
or
pop
in
and
mov
mov
push
inc
loopne
leave
mov
dec
insl
sti
sub
repnz
cld
cmp
or
jecxz
add
ja
mov
xor
xlat
scas
mull
test
mov
or
cltd
out
mov
in
cmpl
mov
push
lods
out
stos
mov
bnd
push
and
add
arpl
inc
push
in
out
testl
popf
lods
mov
test
dec
adc
sub
into
cwtl
pop
insb
xchg
pop
es
or
add
aas
daa
and
fsubp
adc
sti
jno
jne
loopne
push
fwait
dec
je
mov
test
xlat
mov
mov
mov
xchg
lss
mov
push
gs
adc
adc
sbb
add
add
add
add
add
cmpsb
push
add
add
add
add
add
dec
mov
add
add
add
mov
add
add
add
add
add
rcll
add
add
push
xor
add
add
mov
add
add
add
addb
add
or
add
mov
add
add
add
cmp
add
adc
add
test
add
and
add
add
dec
or
pop
or
adc
xchg
and
in
sbb
lods
stc
iret
jmp
ret
pop
stos
xchg
stc
mov
push
pushf
sbb
mov
lds
je
xchg
mov
inc
cli
adc
je
cwtl
jb
cmpsb
cmc
idivb
pop
cmp
adc
and
cmpsb
sbb
push
les
cmc
repnz
mov
sub
mov
adc
mov
pop
gs
ret
call
mov
adc
lret
lcall
mov
arpl
push
lods
mov
cltd
divl
es
popa
or
mov
inc
pop
fwait
add
icebp
or
mov
cmpsl
repz
int3
or
fildl
aas
insl
lahf
lcall
jp,pn
inc
test
mov
in
pop
movsb
mov
inc
xor
mov
mov
loop
leave
mov
pop
xchg
cmpsb
je
cltd
scas
aad
xor
lahf
push
es
push
adc
nop
insl
jae
adc
push
shll
push
test
in
xchg
add
or
hlt
and
add
xor
mov
fmull
mov
sub
mov
push
inc
pop
je
push
lock
mov
jp
xchg
mov
add
jg
lret
xor
hlt
leave
jo
xchg
mov
dec
push
outsb
cmp
pop
sarl
and
call
push
pushf
pusha
pushf
adc
jmp
xchg
xchg
cmpsl
xchg
inc
xchg
addr16
add
ljmp
mov
mov
mov
xchg
mov
ss
or
rcpps
cwtl
daa
shrb
popf
jmp
or
jle
aaa
ret
shlb
stos
lea
and
daa
mov
xchg
dec
dec
push
push
filds
push
or
rorb
fwait
aam
out
push
fs
or
shr
or
xor
or
rcl
xchg
add
test
xor
dec
or
add
or
mov
je
iret
fildl
push
cmc
in
in
test
adc
pop
stos
std
mov
sub
cmpl
fisubs
cli
dec
jmp
push
dec
fwait
and
inc
out
pop
fnstenv
dec
dec
cmpsl
and
insl
push
sub
inc
cmp
xchg
push
inc
jmp
jecxz
and
cltd
lcall
ficompl
push
movsb
popf
fnstcw
lret
xchg
rolb
repnz
in
xchg
add
push
stos
out
cmp
pusha
sub
push
inc
mov
lea
xchg
movzbw
pushf
mov
lea
mov
pusha
mov
bswap
pop
pushf
pusha
movw
pushf
pushl
ret
add
add
lea
push
aad
mov
cmp
rol
sub
bsf
daa
sbb
push
bts
bts
xor
bsr
push
aas
push
bts
rcl
mov
shld
sub
pusha
lahf
pop
lea
pushf
pushf
mov
pusha
mov
jmp
dec
sbb
adc
fsubr
js
jnp
pop
test
test
int
insl
or
cmp
push
clc
sub
mov
rdmsr
pop
cmp
mov
mov
add
popf
loop
cltd
ljmp
divl
mov
bound
sub
in
cltd
icebp
mov
dec
push
sarb
dec
jle
jmp
jnp
ss
adcb
push
in
jle
ret
test
adc
mov
call
fisubs
jns
jp
cmp
inc
adc
leave
push
xchg
xlat
int
pusha
lea
pushf
mov
lea
cwtl
not
lea
jge
lea
jmp
pusha
pushf
lea
jb
push
pushl
ret
cmpb
mov
mov
push
loopne
cmpsl
jbe
scas
jns
inc
jns
push
inc
jge
jecxz
stos
loop
jecxz
jp
pop
jmp
inc
xor
jae
ljmp
iret
xor
imul
aaa
sysexit
jne
in
mov
add
aad
popa
jne
int
jbe
jg
inc
cmp
xchg
call
inc
push
mov
repz
mov
into
loopne
stc
pusha
shll
jno
mov
nop
loopne
dec
pop
mov
aad
lahf
mov
int3
mov
lock
sar
subb
stos
cmp
daa
mov
adcl
sub
jns
mov
imull
adc
jp
testb
inc
fldt
push
sub
in
les
xchg
rcrl
cmpsl
out
mov
lea
sti
rclb
sub
sub
repnz
adc
mov
fstpl
pop
add
cmp
inc
sti
cmpsl
testb
mov
imul
inc
jmp
push
repz
sbb
dec
fwait
js
rclb
out
sbbl
js
mulb
jmp
pop
mov
xchg
out
and
clc
dec
pop
data16
mov
es
cmp
and
testl
in
or
ja
jl
je
ljmp
lds
pop
jle
or
push
lods
pop
pop
fcmovb
jns
mov
loopne
sub
mov
in
call
nop
ljmp
sahf
sub
push
push
xchg
pushf
mov
sbb
sbb
pop
cs
push
fsts
pop
outsb
pop
bound
sbb
sub
inc
out
cmp
push
push
add
cli
sbbl
lret
push
xchg
js
mov
xchg
scas
push
mov
push
incb
ja
inc
fmuls
sbb
cmp
pushf
cmp
aaa
push
add
mov
mov
or
ds
pop
into
sub
add
xor
mov
mov
xchg
ret
das
rorb
push
adc
push
or
sub
in
insb
sahf
lret
mov
movsl
popaw
cld
mov
outsb
jae
movsb
jg
or
add
inc
push
add
mov
in
pop
sub
adc
and
and
out
push
insl
xlat
adc
xor
pusha
cmp
sti
mov
and
sub
dec
xchg
ja
repnz
fsubrl
jg
mov
mov
test
fucomip
loop
outsb
sbb
adc
jle
push
add
fiadds
faddl
add
push
adc
add
add
add
add
add
cmpsb
push
add
add
add
add
add
dec
mov
add
add
add
mov
add
add
add
add
add
rcll
add
add
push
xor
add
add
mov
add
add
add
addb
add
or
add
mov
add
add
add
cmp
add
adc
add
test
add
and
add
add
movl
movb
pushl
popl
pushf
movw
pushl
pushl
ret
std
rorb
cmp
dec
fisubrl
sbb
imul
aas
dec
jp
xchg
jecxz
lods
call
mov
sbb
mov
js
icebp
lods
mov
stc
sti
ljmp
cmp
loopne
push
insb
sbb
cli
sbb
iret
and
xchg
test
inc
fildl
adc
dec
cmc
and
pop
cltd
push
out
into
push
pop
sub
addl
dec
sbb
sub
push
inc
cmp
mov
sbb
movsl
fs
xchg
lret
shlb
fstl
sbb
daa
xchg
loopne
and
jecxz
daa
adc
push
or
mov
jae
decl
mov
int
scas
fiadds
sarb
pop
mov
mov
movsb
xchg
mov
xchg
cli
stc
add
or
stc
mov
push
loopne
les
jnp
cmpsl
mov
ljmp
pop
jmp
mov
icebp
inc
inc
inc
dec
xor
cs
insb
add
daa
ljmp
enter
js
xor
nop
test
stos
mov
jp
repz
or
decb
sub
das
ds
ds
out
jno
in
adcb
mov
test
rcrb
push
cmp
adc
pop
jmp
jo
insb
movsl
mov
bound
or
or
aas
push
mov
push
add
push
mov
icebp
or
xor
add
xlat
cs
nop
or
sub
mov
fisttpll
mov
jg
sbb
jmp
sbb
xchg
xchg
loopne
mulb
outsb
mov
dec
cmp
test
add
mov
out
adc
outsl
bound
or
and
xchg
loope
data16
scas
mov
test
jp
xor
xor
lods
fstpl
mov
xor
dec
fldenv
pop
pop
popf
rcr
cmp
jl
sbb
test
xor
lds
or
xor
pop
xor
add
pusha
ss
mov
lahf
push
insb
jns
push
inc
sbb
sarb
cmpb
das
push
test
xor
addr16
xor
or
mov
mov
pop
test
dec
cmp
xor
and
jb
and
cmpsl
lcall
dec
inc
rcrb
push
sub
mov
sbb
pop
mov
pop
or
xor
aas
xchg
inc
repz
push
sub
shrb
insl
ds
cmp
or
out
or
adc
xchg
and
and
xchg
cwtl
sbb
mov
xchg
loopne
push
pop
cmpsb
inc
ret
push
inc
cmp
dec
shl
add
adc
aad
shr
adc
push
das
pop
cwtl
test
add
lock
dec
and
mov
or
jg
adc
and
cmp
ret
and
ss
push
mov
sub
push
enter
iret
inc
adc
cld
xor
or
loope
inc
push
add
shlb
push
lcall
cmp
nop
adcl
rcll
sub
push
add
rorb
es
jne
ljmp
inc
pop
das
aad
mov
out
out
dec
mov
xor
inc
mov
hlt
cmpsb
arpl
std
dec
pop
sbbl
cltd
les
pop
push
sbb
pop
inc
or
test
push
test
mov
xor
cmc
in
les
sahf
xchg
push
adc
int
jbe
mov
shr
push
sub
loop
push
fsubrl
aam
inc
pop
fcomps
stc
sub
popa
inc
jo
push
mulb
int3
shrb
jnp
test
push
cmp
pop
pop
pop
in
repz
push
ljmp
daa
push
pushf
add
outsl
xor
dec
or
jnp
std
les
lock
adc
aas
inc
mov
or
push
dec
xlat
into
shrb
mov
in
cld
out
and
push
repnz
mov
push
ret
rolb
xchg
ret
mov
cmp
ret
repz
movsl
fisubrs
xchg
cmp
add
push
nop
or
xor
std
pop
fs
shrb
mov
inc
sub
fwait
int
enter
mov
dec
int
or
inc
cwtl
add
and
popa
cmp
pop
popa
xor
push
xor
add
testb
add
gs
pop
gs
mov
adc
rorl
cmp
in
cmc
es
cmp
mov
cmpsl
pop
push
and
into
mov
addb
sub
int
cltd
and
cmp
in
push
cmpsb
inc
cmp
call
cmp
ficoms
push
jne
jge
cmp
inc
cltd
cmpsl
fldl
lcall
pop
add
sub
stc
rorb
movsl
xchg
test
xchg
lds
xor
sahf
xor
mov
movsl
fs
mov
mov
xchg
fsubr
mov
jne
fmuls
cmc
test
xchg
sub
mov
daa
push
inc
jg
and
inc
push
ljmp
testb
mov
cmovle
jmp
inc
stos
fwait
add
out
jo
ret
jbe
fisubs
fisubs
add
fmuls
loope
dec
jae
ja
mov
setl
push
inc
pusha
lea
jae
mov
push
push
call
adc
add
scas
pop
dec
pop
or
into
mov
mov
pop
popa
cmp
adc
stos
or
sahf
pop
cltd
add
sahf
mov
mov
out
or
popa
les
stos
insb
sbb
in
test
cld
cli
subb
popa
loop
xchg
and
movsb
sbb
cmp
adc
fsubp
rorb
scas
xchg
pop
push
or
fldcw
imul
mov
and
enter
call
lea
pop
shlb
xchg
stos
aam
adc
push
out
mov
test
xchg
lret
out
xor
push
or
mov
iret
sbb
jp
fsubrp
sbb
rclb
inc
movsb
push
stos
into
xor
in
imul
mov
test
mov
sbb
call
clc
mov
pop
movsl
sti
rcrl
jno
inc
jo
push
ljmp
add
mov
or
xchg
xorb
shlb
inc
adc
cmp
jne
gs
pop
add
scas
repnz
test
adc
out
xchg
cmpsl
cs
je
sbb
pop
jle
sub
lods
mov
leave
add
lret
repnz
or
dec
js
jns
aas
dec
mov
imull
dec
push
or
xchg
or
sbb
adc
push
lahf
or
pop
or
mov
fsubl
mov
pop
inc
pushf
testl
mov
jmp
stos
mov
idivl
pushf
push
adc
jo
aas
jno
mov
mov
or
imul
int3
or
jecxz
fwait
adc
test
jbe
adc
pop
call
fwait
loop
popa
pop
adc
inc
xor
and
xchg
cmpsl
hlt
push
sti
mov
sbb
arpl
and
add
push
xchg
dec
mov
call
jmp
movl
pop
into
fisttpl
test
je
sbb
mov
out
and
mov
popa
add
xchg
pop
out
ret
xor
lret
das
leave
enter
xchg
inc
cmpb
ficoml
daa
push
xlat
xchg
cmp
lcall
fmull
sub
and
xchg
repnz
jb
aad
mov
push
mov
push
xchg
jecxz
mov
mov
pushf
mov
movb
pushl
ret
dec
or
add
xchg
pop
shlb
in
xor
cmp
add
adc
sarb
mov
fbstp
jo
xor
cwtl
shlb
pop
push
mov
xchg
adc
nop
daa
adc
and
orl
cmp
bound
jg
cltd
cmp
mov
xor
test
push
sub
xchg
xchg
rol
ds
pop
jmp
je
adc
xlat
dec
hlt
sub
xor
and
imull
and
push
movl
pushf
pushl
popl
pusha
pusha
movb
pushl
ret
cmpsb
fwait
push
add
loope
mov
je
je
mov
push
rolb
fiaddl
push
mov
dec
add
in
jp
pushf
lea
xchg
sarb
fcompl
jno
lret
lret
xor
fsubrs
sbb
shrb
push
or
cli
repz
dec
stc
enter
jge
pop
add
stc
loopne
test
rcrl
pop
xchg
and
dec
pop
add
inc
and
dec
jmp
jmp
pusha
movb
lea
call
jmp
cmpsl
loop
add
mov
sub
and
fwait
rclb
test
pop
or
in
test
cmp
cmpsb
shl
fsub
js
or
jbe
call
dec
out
cmc
cs
imul
sbb
cmp
or
sbb
das
pop
int3
bound
adc
repz
push
lcall
cmc
mov
ret
add
not
movzwl
jmp
setbe
jmp
or
incl
or
das
sahf
out
jns
sbb
dec
fisubrs
cmp
pop
es
mov
adc
popf
pop
push
pop
insb
cmp
sbb
rcll
push
xor
ret
fistl
lahf
mov
mov
fsubrs
pop
or
lods
faddp
es
addr16
xor
stos
dec
icebp
pop
daa
shll
mov
jbe
xchg
mull
pop
add
push
sub
dec
dec
dec
in
aam
dec
and
xchg
gs
sbb
or
out
lcall
hlt
dec
imul
lock
adc
mov
adc
stos
sub
lahf
lds
mov
movzbl
pushl
lea
jb
lea
pusha
pushf
call
icebp
cmpsl
jbe
or
cmpsb
ja
mov
mov
push
xchg
adc
pop
int3
mov
xor
xchg
jb
jle
jmp
xor
imul
mov
xor
ret
xlat
cmpl
int3
xchg
into
mov
es
mov
daa
movsb
cs
pop
hlt
ficoms
int3
iret
cmp
mov
sbb
arpl
fdivs
mov
lods
xor
push
int
or
rorb
ja
jp
sbb
add
out
ret
push
shlb
push
and
enter
popa
rclb
jno
icebp
outsl
pop
jne
rorb
sahf
loop
out
mov
dec
dec
inc
mov
ljmp
mov
leave
push
int3
mov
xchg
xor
cli
cli
pusha
fldcw
mov
pop
sub
clc
daa
push
add
xchg
push
xor
push
xchg
or
insl
sub
cmpsb
push
imul
add
or
pop
in
xchg
cmp
cmpb
out
adc
std
or
pushf
pusha
lea
je
pushf
call
movl
mov
push
lea
jmp
jbe
xchg
push
mov
push
and
and
lcall
sub
scas
xchg
dec
in
loopne
or
mov
loopne
add
mov
dec
std
aaa
test
pshufw
jge
add
pop
lret
lahf
mov
nop
mov
in
cmpb
push
pop
inc
notb
adc
insb
jne
mov
lods
push
cmp
push
jno
add
addb
inc
lods
popa
divl
dec
ficomps
pop
insb
push
sub
pop
add
sar
test
sub
inc
jle
or
mov
repnz
jno
ss
fildl
cwtl
ret
xchg
and
test
lcall
xor
inc
mov
daa
data16
ds
or
xor
mov
lds
sbb
pop
out
in
sub
cwtl
mov
sbb
and
push
jl
xor
in
push
or
iret
mov
sarb
in
dec
jne
jmp
fldt
outsl
repnz
mov
icebp
test
mov
in
push
push
add
loop
adc
mov
push
pushf
sub
leave
pop
dec
mov
outsb
cmp
lods
sti
mov
inc
sbb
jle
push
test
sbb
adc
cmp
dec
inc
xor
push
pop
cmpsl
jbe
adc
dec
or
in
mov
scas
test
daa
adc
jnp
jmp
pop
bound
scas
pushf
lea
xor
inc
dec
sbb
push
or
sbb
dec
mov
stos
stc
stos
adc
and
jl
mov
call
jb
jmp
adc
stos
cli
xchg
outsl
push
xchg
hlt
mov
adc
xchg
add
insb
mov
les
push
mov
pop
or
cltd
fstps
pop
pop
inc
pop
and
jl
adcb
imulb
lds
dec
jne
xor
cmc
test
imul
pop
cli
aaa
mov
les
push
or
mov
repnz
ss
rolb
mov
push
enter
aam
jmp
outsl
nop
dec
fsub
ret
sub
test
cltd
jo
push
xlat
inc
xor
xchg
or
lahf
je
jecxz
out
lcall
cltd
cmp
fistps
xor
or
fsubr
pop
or
imul
jg
and
fwait
dec
push
dec
xor
dec
mov
mov
sahf
add
fsubr
lea
mov
lods
sbb
test
int
cmp
push
cmp
mov
mov
mov
cld
faddl
add
cli
dec
daa
popa
data16
imul
popa
mov
pop
and
sub
mov
mov
xor
and
shl
inc
mov
xlat
push
insb
push
mov
dec
jo
jp
pop
pop
insb
add
ja
add
jp
fwait
pop
cmp
and
lahf
lock
dec
imul
jo
add
movsl
mov
adc
insb
push
mov
lea
jbe
xor
loop
xchg
test
add
fmuls
out
mov
push
scas
mov
aad
mov
xchg
and
in
adc
xchg
cs
ljmp
sbb
or
pop
pop
push
or
jne
call
mov
add
or
shlb
jecxz
daa
jb
xor
loopne
mov
xorb
xchg
les
xlat
add
frstor
fs
and
scas
vrcpps
sbb
ja
lods
stc
in
xor
ret
cmp
lret
lret
rcrb
lock
xchg
mov
rcll
pop
bound
jns
xor
jg
js
fwait
popa
jnp
cmp
jo
jp
sub
call
or
and
xchg
loopne
test
scas
mov
sahf
dec
js
mov
adc
lcall
push
dec
iret
rcll
mov
scas
mov
dec
mov
jae
push
imul
adc
cmp
push
mov
lahf
inc
jmp
jae
jb
out
pusha
sbb
testl
jo
cmp
ror
movsl
test
mov
ficompl
pop
jo
xor
je
adc
imull
inc
aaa
add
xchg
cmp
dec
and
mov
mov
jo
sub
xchg
outsb
test
jg
lods
cmp
sub
jmp
data16
popa
mov
jb
stos
mov
inc
sub
and
ss
outsl
out
aaa
or
push
outsl
sbb
lret
push
imul
je,pn
push
pop
mov
push
xchg
add
leave
movb
push
push
movb
lea
jmp
ss
or
icebp
add
xchg
inc
aad
icebp
and
fsub
popa
scas
sub
adc
inc
cmp
out
or
scas
xchg
adc
insl
sbb
test
addb
imul
mov
mov
addr16
or
push
test
insl
int
jb
cmp
xchg
test
jmp
mov
rol
scas
mov
mov
lret
xchg
push
xchg
xor
mov
mov
faddl
pop
sarl
je
sbb
les
inc
and
push
pop
add
push
call
pushf
movl
jmp
lea
call
stc
clc
bt
cmp
pusha
pusha
push
lea
jae
clc
cmp
pusha
lea
jae
clc
bt
stc
cmp
call
jb
orb
push
lea
push
inc
repnz
mov
fisubs
ss
dec
stc
shlb
jne
mov
and
cmpsl
jg
push
in
sbb
jl
ljmp
jp
jno
jno
insb
push
adc
inc
pop
or
push
ja
pop
loop
arpl
icebp
or
imul
xchg
lods
pushl
out
xchg
cmpb
mov
push
inc
push
xchg
inc
cmp
pop
insl
mov
dec
ja
stc
mov
sub
mov
sbb
cmp
out
inc
dec
aas
jne
cs
js
and
lock
std
mov
mov
push
lcall
mov
push
bound
xor
je
jl
jg
popa
pop
scas
pop
mov
and
add
inc
push
push
dec
push
lods
mov
or
vpsubsb
sbb
add
je
add
pushl
pusha
pushf
lea
jmp
pusha
lea
jo
mov
lea
mov
call
adc
hlt
or
push
adc
aam
xor
aaa
mov
add
mov
inc
xor
sub
jmp
mov
sub
xchg
inc
cmp
imul
lea
adc
push
add
push
sbb
adc
add
inc
adc
mov
add
inc
push
shll
out
clc
ljmp
xchg
mov
adc
push
add
hlt
out
mov
sti
in
imul
or
sahf
mov
scas
sbb
jle
cmp
xor
dec
cwtl
mov
mov
push
int3
pushf
mov
in
int
push
test
cmc
dec
loope
mov
jle
pop
mov
xor
jne
and
in
lcall
clc
sub
shrb
fadds
sbb
cwtl
bound
imul
or
add
movsl
pushf
push
cmc
or
xchg
loope
cmpsb
mov
adc
xlat
adcl
sub
rolb
sbb
inc
add
cld
test
in
mov
shll
mov
push
pop
xchg
cltd
jge
inc
pop
fldt
pop
sbb
popa
xor
pushl
movsl
fs
push
or
sbbb
in
and
push
aas
insb
sbb
aam
mov
jbe
xchg
or
inc
pop
inc
aas
and
aas
insl
xchg
xlat
mov
sub
add
stos
add
cltd
paddusw
cmp
outsl
xchg
mov
jo
insb
cmp
pop
rclb
xor
xchg
aam
push
arpl
cwtl
add
out
cli
mov
add
fcomps
mov
xchg
loop
aam
add
pop
pop
xor
jnp
popa
imulb
xor
cmc
in
pop
aam
cmp
sub
push
push
add
mov
xor
cld
mov
gs
in
out
mov
or
pop
jae
imul
aad
jg,pt
sbb
inc
sbb
adc
cwtl
scas
mov
lahf
ret
xchg
aad
mov
pop
push
popa
lods
cltd
out
jg
testb
xchg
jmp
sub
clc
rcrl
fsubl
mov
dec
add
out
jmp
add
fisubrs
shr
nop
sti
jmp
call
add
dec
in
adcb
mov
adc
mov
je
sbb
dec
inc
imull
lahf
jmp
push
cmpb
push
shrb
dec
pop
dec
or
dec
imul
fsubr
jge
cwtl
out
out
add
in
adc
iret
bnd
ret
fstl
mov
ret
or
mov
or
cmp
rcl
fdivs
dec
cltd
xor
sahf
lods
adc
call
jb
ss
cmp
mov
dec
ss
cs
or
divl
mov
mov
or
xchg
mov
stos
push
outsl
decb
sbb
iret
mov
push
lret
cmp
lods
aam
mov
xchg
push
fnsave
or
ret
mov
ljmp
adc
jg
mov
sbb
testl
mov
pop
imul
xchg
enter
mov
xor
lret
loop
int3
cmp
test
adcl
fnstenv
inc
imul
les
pop
sbb
das
jg
and
cwtl
mov
test
inc
hlt
leave
aam
cwtl
js
sbbb
cli
or
push
loop
ret
cmp
mov
sbb
inc
test
mov
ret
and
or
addr16
mov
push
add
movsb
shll
push
inc
xor
imul
lea
stos
fisubl
mov
sbbb
xchg
ds
sub
out
cmp
inc
pop
out
movsl
scas
loop
dec
or
cmp
sbb
mov
ja
cmpsb
jecxz
sub
repnz
or
sbb
loopne
aad
js
jne
inc
repnz
inc
xor
outsl
pop
inc
push
jns
cmp
gs
repnz
cmpsb
jnp
iret
nop
and
ja
pop
pop
pop
loop
bound
lock
faddl
lret
lock
jg
fwait
push
stos
cmp
mov
push
mov
inc
jecxz
in
scas
cmc
daa
std
clc
adc
or
xor
mov
mov
mov
das
shr
and
sbbb
xchg
sti
add
call
scas
into
repnz
es
and
push
pop
outsl
inc
fndisi(8087
sti
lods
push
lds
jmp
sub
or
insb
adc
adc
dec
and
imul
cmp
icebp
or
stos
mov
dec
push
push
fsubrs
aaa
or
jno
rorb
into
xor
in
cmpsb
je
xchg
xchg
test
dec
inc
nop
jb
rcl
ror
mov
lahf
pop
add
int3
ficoms
aam
and
addr16
mov
jo
icebp
adc
sbb
movsb
jno
xchg
iret
repnz
ret
lea
pushf
testl
rcrl
cld
out
stos
aad
mov
aas
add
and
inc
fbld
call
je
jnp
repnz
mov
pushf
mov
lea
jbe
mov
pop
not
pushf
pop
pop
call
iret
repnz
repnz
clc
xorl
push
adc
push
xlat
dec
sbb
cmpsl
pop
add
stos
add
stos
testb
repnz
jne
xor
dec
xorl
shlb
dec
inc
xchg
and
and
es
fstpl
dec
lret
popw
sub
cmp
stos
fcmovbe
adc
push
or
outsl
repnz
mov
ds
ds
test
insb
sub
or
or
mov
ss
mov
adc
or
mov
mov
out
add
lea
jbe
mov
rcl
mov
shld
xchg
add
rol
mov
shrd
add
btr
shl
btc
movl
jbe
lea
mov
stc
call
mov
push
ljmp
fisttpl
cmp
sub
ja
jnp
mov
popa
inc
xchg
in
mov
loope
xchg
aaa
or
add
test
mov
mov
clc
cli
js
push
pop
add
inc
frstor
jne
mov
xchg
les
xchg
mov
cmp
clc
stos
sub
xchg
into
fidivl
xchg
or
inc
shll
xchg
fs
push
fadd
mov
jle
std
arpl
sbb
adc
adc
loopne
vmwrite
leave
inc
pop
mov
mov
shlb
sahf
into
scas
xchg
sub
testl
or
mov
jno
dec
pop
in
repnz
sub
outsl
cmc
lock
jp
repnz
outsb
mov
stc
nop
and
push
sub
test
push
add
inc
xchg
mov
add
cld
or
cld
dec
ljmp
cmp
fcoml
cmp
mov
mov
push
push
imul
int3
xor
shll
ljmp
out
cmp
insl
push
mov
adc
dec
sbb
mov
cwtl
inc
call
adc
push
inc
xchg
jp
fisubs
clc
push
addr16
jns
push
out
pop
imull
out
lcall
push
leave
push
or
cmp
pop
and
mov
out
je
or
lret
sbb
cli
aaa
cld
or
push
jns
jno
jae
outsb
fs
xlat
arpl
xchg
sub
test
outsl
fisttpll
or
jbe
mov
sbb
add
mov
scas
aam
dec
adcb
cmpsb
xlat
xlat
lods
xchg
iret
out
jmp
enter
jo
out
mov
je
mov
sbbl
lds
aas
lods
aaa
pop
sbb
popa
sub
mov
adc
mov
push
mov
sahf
movsb
icebp
push
jbe
xor
movl
push
std
or
mov
jae
push
rcll
fadd
or
push
pop
shrb
xor
pop
test
mov
inc
pop
inc
and
mov
mov
and
sarb
push
sub
jne
loopne
data16
or
cmp
mov
mulb
push
les
ljmp
adc
mov
pop
fsubrl
push
mov
test
mov
shr
test
or
popf
loopne
sub
lret
jmp
push
jl
pop
jmp
cmp
push
lret
push
fmuls
cmp
pop
call
dec
xor
pop
orb
addr16
int
outsb
pop
jo
xchg
or
adc
or
sbbl
inc
idivb
nop
cmp
push
mov
xchg
mov
dec
xchg
pop
outsl
jno
sti
and
scas
lock
or
xchg
push
mov
add
loop
mov
cli
and
xor
movw
inc
clc
bt
cld
pushw
popfw
movw
inc
jmp
and
aam
or
push
add
xorb
inc
ss
adc
mov
add
sub
cs
ss
mov
sub
inc
aas
or
cmc
mov
out
sbb
mov
mov
lods
jl
insl
mov
adc
jp
sub
xchg
jne
loop
in
xor
or
ja
inc
sahf
sub
mov
adc
nop
mov
xlat
lods
mov
aaa
fs
push
lock
jnp
mov
jmp
mov
pusha
pusha
rol
push
dec
call
and
push
pop
imul
cltd
lods
cli
mov
stos
mov
add
jg
bound
mov
cmpl
outsb
aaa
repz
push
or
mov
cmp
sub
jo
xlat
xchg
int3
shll
in
or
sarl
gs
xchg
nop
dec
mov
push
pop
loopne
or
jl
shr
imull
test
push
push
jecxz
hlt
mov
xchg
decl
push
test
out
cltd
stos
sahf
outsl
mov
loope
inc
push
adc
stos
xrelease
adc
mov
scas
sbb
mov
int
daa
push
adc
or
int3
cwtl
push
mov
rclb
mov
js
stos
sub
out
cmp
cmp
push
cwtl
loopne
out
int
jp
sbb
pop
dec
mov
push
pop
bound
fsubrs
pop
in
rorb
and
fsubl
mov
xor
xor
repz
cld
dec
sub
loope
inc
push
fsubp
sub
or
mov
mov
jmp
sub
out
pop
push
int3
mov
inc
and
iret
add
jg
daa
push
test
or
lods
sbb
xchg
in
pop
mov
and
mov
arpl
in
test
dec
and
pop
roll
dec
repz
ret
std
and
popf
add
jg
loop
inc
fnstcw
xchg
pop
clc
or
mov
dec
pop
stos
stc
imul
imul
adcb
lds
or
mov
divl
test
add
fsubl
test
jns
repz
sbb
add
jnp
cwtl
fidivs
push
scas
in
sbb
xchg
adc
popa
jl
cld
add
xchg
bound
cmp
js
jb
cmp
dec
jb
stc
or
sbb
jge
jp
pop
ret
add
sbb
fsubrp
sarl
sbb
mov
adc
mov
push
outsb
outsb
mov
dec
and
test
cmp
fstl
js
rclb
imulb
xchg
into
repz
pusha
xor
mov
sti
push
jne
aas
into
aas
inc
mov
cmp
cmpsb
fwait
enter
cmp
or
popl
pushl
movl
pushl
ret
or
stc
or
scas
pop
or
push
mov
push
sbb
sub
and
sbb
iret
xchg
lahf
add
aad
pop
mov
sub
pslld
inc
sbb
mov
loope
inc
aas
and
dec
pop
jnp
sti
or
ljmp
or
add
inc
inc
push
push
xor
cs
insb
add
les
cli
or
push
sbb
lods
sbb
sub
adc
mov
in
cli
loopne
jecxz
ljmp
xor
mov
imul
ja
pop
lret
mov
loope
roll
adc
jo
out
pop
notl
cmp
stos
xchg
xchg
popa
mov
xchg
shlb
sub
jns
popa
mov
jl
sbb
push
inc
adc
push
jne
mov
movsl
cwtl
test
ja
lock
movsb
jmp
clc
sub
xor
call
jmp
xchg
jge
test
xor
adc
adc
xor
jns
sbb
mov
std
rol
testl
pop
mov
mov
call
test
mov
xchg
mov
clc
mov
ds
fs
mov
aas
cmpsl
mulb
xor
addr16
fucom
cmp
mov
scas
mov
mov
hlt
xor
cmp
push
and
cmpb
lock
dec
aas
mov
lods
mov
or
lcall
sub
sub
rcrb
xchg
je
sub
push
and
jno
mov
mov
or
ja
inc
add
bound
ja
mov
mov
cmc
mov
cwtl
and
mov
je
cld
sbb
xor
mov
jae
test
add
add
sti
and
jae
ja
shrl
mov
sarl
xchg
int3
popa
aam
cmp
adc
loop
add
mov
aas
jp
in
push
shll
inc
test
inc
push
addr16
mov
jb
cmp
sub
test
mov
xor
mov
mov
ffreep
scas
and
enter
ja
fdivl
inc
cmp
aas
cld
roll
outsl
push
cli
inc
insb
jmp
movsl
int
call
fistl
arpl
imul
mov
shll
cmpsb
jmp
push
ljmp
dec
andl
sbb
mov
pushf
mov
out
push
fadds
jno
cmpsl
mov
or
pop
jge
cmc
in
push
cli
jo
shl
lock
jo
aam
lock
clc
inc
out
cmp
addb
mov
or
icebp
push
xorb
sub
movb
fwait
ret
xor
cmc
outsl
xor
mov
inc
ret
ja
inc
inc
push
stc
sti
ljmp
mov
mov
into
mov
xchg
jg
aas
mov
sub
inc
fldenv
mov
xchg
fs
push
mov
mov
rcrl
or
test
loopne
xorb
or
ja
and
jle
loopne
push
mov
test
arpl
inc
mov
fldenv
out
out
mov
cmpsl
faddp
xor
lods
movsb
cld
dec
sbb
daa
cmp
insl
fisubl
mov
mov
mov
sbb
std
mov
shl
mov
movsb
repnz
test
pop
lds
xor
xchg
paddusw
fisubl
cli
in
jecxz
cmc
adc
fsubrl
leave
add
movsl
push
dec
sbb
pop
sub
stos
loop
fistps
leave
push
inc
movsl
je
int
cmc
mov
mov
push
xor
xchg
lds
push
push
lea
out
in
scas
xor
push
mov
scas
sti
or
rcrb
inc
mov
add
xchg
and
push
inc
jbe
hlt
cmp
sbb
jnp
cmp
jnp
mov
or
jmp
mov
cmpsl
add
insl
imul
jae
je
nop
cld
xor
or
lock
aaa
xorl
int
dec
adc
fwait
addr16
mov
loopne
and
mov
movb
movsb
aaa
mov
cli
xor
add
sub
loope
mov
fcmovb
or
clc
mov
aaa
sub
leave
jle
popa
in
fsubrl
push
xor
mov
in
mov
jne
ret
push
arpl
imul
out
push
out
mov
jmp
mov
jle
push
adc
mov
andb
jno
fldcw
adcb
push
adc
pop
gs
inc
xor
sahf
loope
lret
shrb
pop
jo
movsb
repz
and
pusha
out
cmp
lahf
int
stos
mov
fwait
sub
insl
cld
pop
popa
aas
pop
pushf
idivb
movsb
mov
push
adc
jge
pop
andl
xchg
adc
pop
test
inc
stc
and
cmpsl
faddp
stc
arpl
inc
push
pop
pushf
sbb
popa
sub
hlt
cmp
or
js
pop
sub
adc
and
lea
push
push
or
and
xor
mov
push
data16
cmpsb
je
xchg
and
push
xchg
lcall
jmp
push
ds
addr16
pop
mov
shll
xchg
sub
in
std
jl
sahf
mov
fsubs
sti
bound
push
jmp
movsb
imul
pop
call
enter
jnp
pusha
mov
xor
sub
mov
iret
cli
int3
sbb
pop
setl
mov
push
jecxz
cmpl
mov
mov
add
popa
insb
inc
insb
insb
outsl
arpl
or
clc
loopne
push
sub
std
das
jge
pop
or
sahf
in
flds
mov
add
das
test
and
dec
fimull
sarb
pop
jg
rorl
dec
or
sub
test
mov
ds
mov
inc
aas
pop
flds
ret
mov
jns
sbb
int3
sub
push
enter
push
jle
push
adc
in
push
inc
xor
push
jne
jp
and
inc
sahf
fs
cmp
jmp
xor
and
loopne
push
cmp
jns
cli
lods
jle
cli
insb
sbb
fcmove
mov
adc
inc
cmp
stos
icebp
sbb
jns
mov
push
xor
push
push
lds
pop
popw
dec
cmp
adcl
and
movsb
fisttpll
and
in
cld
mov
xor
int
enter
mov
loopne
icebp
inc
aad
xor
push
inc
mov
and
test
or
xchg
mov
out
outsl
loope
push
fwait
dec
fildll
ljmp
js
and
cmc
test
movsb
xchg
sarb
popf
dec
push
adc
shll
pop
int3
fcmovb
sub
insl
mov
in
pop
sub
daa
sbb
es
push
xchg
lret
push
imul
pop
je
fidivrs
fnstenv
out
test
dec
scas
std
sarl
and
insl
icebp
inc
xor
dec
test
scas
mov
jae
out
pop
in
pop
sub
inc
jle
std
movsb
jle
mov
int3
iret
pop
add
push
inc
push
pusha
pushl
lea
call
pusha
pusha
pushf
jmp
adc
push
dec
fwait
push
cwtl
dec
ljmp
sbb
cmp
sti
gs
lods
fsubr
xor
cmp
add
std
mov
dec
popa
add
loop
out
pop
in
or
xchg
sub
mov
popa
test
cmp
adc
jbe
push
call
iret
jb
lea
mov
imul
xchg
fisubl
hlt
sub
lock
pop
inc
fwait
add
in
pop
cmpsb
jecxz
repnz
mov
mov
or
arpl
xor
rol
mov
push
sub
fistpll
adc
adc
std
test
inc
js
std
mov
stos
in
cmpsl
pop
cltd
add
insb
push
xlat
ret
sarl
pop
lcall
cmpsb
divb
rcl
lret
mov
mov
outsl
pushf
jp
lcall
dec
stc
pshufw
cmpsb
pop
add
es
inc
clc
mov
pop
lods
dec
pop
pop
pusha
lods
jecxz
push
mov
sub
pop
dec
mov
mov
sbb
lds
call
sbb
xchg
fucom
cltd
cmp
test
pop
stc
mov
push
je
call
test
movsl
push
or
mov
xchg
dec
mov
sub
or
fsubrl
loop
push
sub
xor
mov
data16
push
out
gs
pop
xchg
jecxz
push
inc
xor
es
inc
cwtl
flds
and
ljmp
or
dec
jnp
sti
lret
clc
or
cmpsl
push
cltd
jae
dec
sbb
pusha
lods
pop
add
mov
testl
xchg
ljmp
inc
push
jmp
sub
aaa
in
imul
adc
pop
inc
cmpl
mov
jecxz
and
jmp
ret
stc
xchg
aam
sub
mov
add
push
test
inc
dec
jnp
push
push
ret
pop
dec
push
cmp
scas
sti
push
cmp
stc
scas
sahf
in
mov
sub
inc
jne
pop
add
inc
mov
inc
sbb
jne
cmc
loop
jne
mul
aad
push
in
or
adc
xchg
mov
nop
add
pop
sub
fisttpl
mov
inc
sbb
xor
repz
fsubrs
cs
push
imul
fsubrl
rol
out
mov
ret
xchg
daa
arpl
cs
mov
jbe
dec
popf
push
sarb
je
mov
shrl
lret
pop
dec
int
cmpsl
sbb
add
adc
dec
mov
and
mov
jg
lcall
push
in
or
jne
xor
icebp
inc
xchg
addr16
inc
push
dec
cmp
pop
push
add
in
mov
add
shll
hlt
insw
adc
daa
loopne
and
add
fwait
insl
cmp
adc
out
dec
push
xchg
jg
int
popf
loop
leave
xor
jg
jecxz
jo
nop
sbb
mov
xchg
lods
xchg
cs
dec
xchg
out
xchg
fisubrl
pop
cmpsl
jmp
mov
jmp
icebp
int3
add
or
inc
push
arpl
inc
push
jecxz
addr16
pop
and
cmpsb
dec
clc
int3
call
add
mov
sahf
jb
ret
in
or
mov
lahf
mov
das
push
dec
cmp
and
sbb
inc
pop
in
xor
out
pop
add
roll
mov
sbb
mov
js
or
in
loop
sbbl
in
pop
popa
jp
lahf
dec
xor
fnstcw
push
lahf
outsb
pop
dec
pop
scas
js
jg
lahf
imul
jns
mov
aaa
outsb
sbb
leave
inc
sbb
jg
scas
scas
mov
in
in
aam
xchg
push
stos
dec
push
sbbl
shrl
add
lret
mov
mov
cmp
sub
in
push
sub
mov
adc
sub
insb
sub
inc
mulb
pop
out
into
push
sub
hlt
imul
daa
sahf
and
pop
mov
or
push
dec
pop
lret
or
mov
jnp
faddl
fiadds
sbb
pusha
shlb
hlt
mov
leave
insb
push
sub
jb
or
fistl
sub
xchg
aam
and
jge
ffree
cltd
test
cltd
sub
dec
jmp
data16
or
cli
out
or
aas
lea
lret
mov
addr16
jp
add
or
call
adc
inc
xchg
cs
cmp
dec
ja
dec
push
cmpsl
fcmovb
std
inc
mov
in
ss
xchg
leave
mov
lods
loope
jae
jo
ficoml
dec
dec
push
out
scas
ljmp
pop
or
push
negb
cmpsb
loopne
iret
lea
fmull
loope
daa
popf
xchg
push
adc
dec
or
mov
imul
int3
push
int3
mov
xchg
dec
stc
rorb
sbb
mov
jle
jge
clc
push
pop
nop
sbb
cltd
in
lahf
rorb
stc
mov
test
repz
lods
jnp
jns
das
jecxz
das
push
aam
xchg
pop
xor
mov
mov
adc
pop
or
lcall
xchg
dec
inc
jp
adc
jne
jp
jp
sahf
int3
insl
push
hlt
pop
scas
pop
xchg
xchg
mov
insb
adc
hlt
xlat
or
dec
pop
bound
out
call
sbb
scas
push
or
dec
fldcw
xchg
inc
aas
data16
dec
sahf
dec
ss
call
js
imul
jp
adc
mov
mov
jl
nop
je
paddw
mov
ret
ja
fucomip
testl
ret
cmc
inc
xor
inc
push
out
arpl
pop
add
sahf
pusha
pop
or
outsl
mov
pop
dec
pushf
call
or
out
fcmove
popf
push
cmp
test
xchg
in
push
dec
sub
push
pop
rcr
repnz
mov
xchg
lcall
bnd
leave
mov
bnd
jno
push
adc
jl
test
test
sub
inc
push
mov
cld
sub
sbb
and
pop
and
sbbb
sbb
out
jmp
dec
mov
imul
xor
int3
mov
pop
stos
cwtl
pop
bound
aam
mov
lret
sbb
sbb
pop
imul
pushf
loop
stos
daa
in
sub
xor
jmp
push
xchg
lret
mov
pusha
cmp
sub
xor
mov
movsb
mov
fldt
xchg
dec
add
cmpsl
std
psrld
imulb
mov
xor
lret
jb
sbb
out
test
ja
inc
push
dec
inc
dec
xor
cs
insb
add
fstl
jmp
shlb
rolb
xchg
xorb
call
pop
in
pop
gs
pop
stos
xor
inc
push
jbe
test
lahf
push
sub
scas
xchg
pop
mov
push
jne
cltd
out
in
and
test
sbb
mov
mov
and
je
jmp
stc
sub
push
lea
jge
pusha
lea
call
call
loop
pop
ljmp
stos
cmp
sbb
pop
dec
pop
dec
mov
mov
std
leave
pop
add
pop
lds
frstor
xor
jge
je
and
dec
lret
call
or
cmpsb
pop
inc
mov
movsb
fucomi
bound
xchg
xor
mov
iret
enter
mov
sbb
dec
repz
fcomps
ficompl
insl
mov
mov
in
inc
adc
mov
das
xchg
jmp
sub
sub
dec
shrb
jns
scas
mov
sub
lds
ljmp
fisttps
mov
nop
stos
repz
rcrl
sub
sarl
call
cmp
push
aad
xlat
out
ficompl
or
jo
loope
dec
sbb
imul
push
xchg
lret
inc
shrw
fstpt
fwait
arpl
dec
dec
stos
jb
add
lods
in
das
sub
or
in
dec
pop
mov
jns
fimuls
les
out
movsb
jge
pop
inc
ficompl
lcall
xor
jmp
push
or
stos
cmp
int3
fisubrs
sarl
imul
arpl
fdivrs
in
loop
in
or
mov
nop
mov
ret
test
push
lret
xor
lods
mov
push
imul
and
cmpb
pushf
jmp
cmpsl
sahf
push
jmp
push
xorl
adc
jb
mov
xchg
xorb
mov
pushf
sbb
sbb
mov
xor
pop
inc
sbb
arpl
sub
out
jb
sub
shrl
inc
add
dec
sub
jmp
bswap
xlat
dec
lcall
iret
xor
adc
sahf
jno
dec
xchg
popa
jnp
outsl
shl
push
cwtl
rol
mov
bsf
sub
aas
aad
lahf
bswap
push
add
add
setle
aas
push
movzbl
sar
add
btc
push
clc
lea
push
shrd
sar
mov
bt
test
pusha
push
lea
je
add
push
mov
and
shl
cmc
xor
add
and
jmp
pushl
mov
mov
mov
xchg
pop
cwtl
movsbw
cwtl
push
lea
setg
mov
push
lea
call
loopne
adc
or
jno
xchg
inc
inc
xchg
loopne
add
or
inc
sbb
aad
rolb
mov
jne
pop
pop
mov
mov
mov
bound
repz
push
insl
sub
mov
and
xchg
aas
jp
cltd
jecxz
sahf
xlat
popa
mov
cli
fidivrs
inc
ds
lret
xor
rorb
mov
xchg
iret
cltd
inc
inc
faddl
sub
or
jmp
mov
pushf
movw
or
pushf
pushf
lea
jne
shl
shl
rcr
mov
pushf
test
or
pushf
movb
pusha
push
lea
je
movzbw
call
aaa
or
aad
push
pop
inc
shl
xchg
shll
rcll
and
fnstsw
mov
enter
stc
mov
mov
sub
and
and
push
add
jecxz
dec
mov
dec
test
ss
gs
fwait
xor
xor
jno
stos
jle
xor
in
pop
dec
push
dec
daa
repz
push
push
dec
cmp
pop
pusha
frstor
mov
push
mov
push
and
adc
jp
push
or
sbb
ss
cli
fimull
xlat
mov
lret
mov
xchg
mov
imul
sahf
mov
dec
insb
test
jnp
pop
sbb
data16
sub
repz
test
dec
inc
pop
stc
mov
pushf
je
mov
lods
mov
je
cmc
inc
pop
leave
mov
cmpb
xchg
sub
pop
sub
cli
sahf
testb
jb
pushf
mov
mov
mov
mov
bnd
dec
dec
or
bound
and
add
push
inc
xchg
or
fs
lods
in
xchg
pop
out
mov
cli
dec
adc
daa
lret
js
je
xor
mov
xchg
loop
in
or
push
push
pushf
xchg
lret
xchg
push
push
add
stc
xor
add
xor
xor
jle
inc
jno
inc
jo
sub
stc
stos
push
xor
test
into
shll
daa
mov
xor
cmp
sub
ja
xorl
xchg
sub
out
xchg
stos
jbe
sbb
mov
cltd
push
xlat
or
mov
adc
jb
xchg
lret
ret
in
cmp
outsl
test
pop
outsb
push
fnstcw
out
jle
ficompl
cld
jb
xor
sub
xchg
ja
lds
xchg
dec
std
sub
jns
cld
idivb
xchg
es
xchg
repz
sbb
mov
int3
imulb
jmp
pop
or
xlat
or
lcall
sbb
cmp
cmp
pop
add
jp
pop
push
loope
mov
cmp
xchg
test
xor
ret
pushf
mov
xchg
pop
jns
movsb
lock
test
sbb
lds
xchg
in
stc
inc
sub
fs
xor
pop
sub
pop
data16
or
mov
and
popf
out
push
scas
mov
xor
mov
mov
mov
xlat
sbb
xor
pushf
pushl
pushl
ret
fstps
test
xlat
inc
mov
jo
push
mov
dec
push
lods
popa
out
mov
push
andl
and
xchg
ss
pop
sbb
and
jns
pushf
into
das
inc
adc
out
ss
push
mov
addr16
clc
adc
addr16
dec
stc
mov
and
popf
mov
push
mov
dec
fcompl
push
leave
test
xchg
ljmp
fiadds
jg
nop
ljmp
cmpl
xchg
shlb
xchg
mov
xchg
sub
mov
repnz
xorl
inc
mov
ficompl
test
xchg
dec
push
loopne
lods
adc
aam
jnp
fs
push
push
sbb
lods
push
les
dec
stc
stos
pop
lret
bound
ja
push
sahf
iret
mov
and
out
cmpb
pop
leave
mov
adcl
xchg
rorl
adc
jecxz
push
mov
adc
push
test
stos
clc
xchg
iret
mov
jmp
sub
sti
cmp
jbe
movsb
pcmpgtd
pop
outsl
mov
push
out
add
xor
sahf
dec
adc
lds
inc
sub
adc
cmp
scas
js
xor
bound
fsub
clc
lds
xchg
adc
jae
add
inc
and
lea
pusha
cwtl
movzbw
movl
lahf
lea
mov
lea
je
push
push
call
pushf
movl
pushf
pushf
pusha
lea
jmp
movzbl
add
xchg
clc
sub
jmp
xor
rorb
pop
into
pop
lea
cmp
aas
dec
aas
cmp
sub
imul
cli
lods
sbb
cwtl
frstor
sti
xchg
dec
xor
sub
scas
std
dec
push
jmp
and
dec
stos
lock
mov
and
pop
xchg
stos
sbb
hlt
scas
dec
enter
jo
push
sub
shr
mov
jae
aam
adc
lret
mov
ret
and
stos
int
xor
rorb
jno
xchg
xor
loopne
movsb
jb
jno
push
mov
test
inc
push
addr16
jno
and
push
lret
cltd
test
lret
mov
int3
jp
xchg
lcall
inc
jmp
incb
ret
outsl
jp
adc
dec
jnp
adc
add
inc
pushl
xchg
jmp
lods
lea
popa
in
mov
pop
or
xchg
aad
mov
pushf
inc
xchg
mov
cs
pop
movsl
cmp
mov
ret
movsb
imull
add
xchg
andb
and
clc
lea
ja
push
jmp
pop
gs
or
int
sub
or
or
icebp
stos
and
test
xor
jnp
cmpsb
xlat
outsl
mov
mov
mov
xor
and
mov
mov
mov
sub
lret
sub
jmp
xchg
fsubl
xor
jo
push
int
dec
imull
out
dec
popf
rcll
fst
or
cld
sub
dec
pop
stos
mov
push
adc
test
inc
cwtl
inc
jo
popa
pushf
pop
mov
test
pop
bound
out
andl
rolb
loopne
jp
cltd
sbb
lea
lcall
in
mov
jne
pop
test
icebp
push
adc
mov
xor
and
shrb
ret
test
add
loopne
fstl
push
sub
cmp
faddl
pop
and
jl
cmp
push
mov
jmp
lock
fmull
mov
call
cltd
inc
lea
das
ja
pop
shl
dec
lcall
daa
xchg
push
lds
dec
in
sbb
sbb
mov
inc
adc
push
leave
das
popf
sahf
or
mov
lods
insl
sub
iret
mov
das
jle
mov
ds
aaa
in
sbb
mov
movsl
jg
clc
data16
inc
dec
mov
test
add
lea
or
inc
jae
rolb
push
in
inc
mov
pushf
inc
sbb
div
pop
icebp
jno
mov
dec
mov
mov
int
out
aaa
sar
lods
mov
and
fmulp
sbb
sbb
imull
push
mov
sub
jbe
leave
fbld
int3
jmp
push
jmp
pusha
lea
call
jmp
sub
fcmovnu
or
mov
scas
movsl
mov
ret
and
jle
xchg
fimull
pop
imul
cmp
das
adc
pop
lcall
faddl
enter
lahf
push
lret
push
cs
imul
pop
pop
ljmp
pop
test
add
jge
fiadds
sbb
bound
ret
lcall
add
ficompl
adcb
je
pop
inc
hlt
inc
nop
xchg
and
aam
xchg
push
add
push
xlat
cs
mov
xor
sbb
stos
adc
je
cmpsb
mov
mov
ja
pop
dec
nop
mov
dec
xchg
sub
adc
and
out
jmp
push
mov
int3
fisubrs
scas
sbb
cmp
iret
xchg
loope
and
adc
daa
adc
ss
imull
xlat
sbb
dec
or
xchg
inc
jle
or
shrb
xchg
popa
add
or
cli
mov
in
arpl
and
push
sbb
fsubs
out
gs
mov
mov
std
and
adc
adc
cmp
sbb
inc
sbb
adc
sahf
test
or
frstor
mov
adc
arpl
in
shlb
mov
ljmp
lret
mov
dec
pusha
xor
les
mov
xchg
orb
add
cld
shrl
mov
nop
in
mov
hlt
and
cs
inc
repnz
inc
ds
sarl
push
push
pop
mov
shl
mov
daa
sbb
lds
push
push
xlat
scas
cld
dec
jns
aas
ljmp
mov
repz
scas
test
sbb
fisttps
icebp
and
pusha
cmc
inc
mov
cmc
mov
andl
cmpsb
cli
int3
ja
jg
adc
fisttpll
insl
dec
and
and
sbb
rclb
add
xlat
xlat
fmuls
imul
aaa
inc
sti
xor
sub
adc
cmp
mov
les
and
fisubrl
rorl
or
cmovno
add
in
or
leave
xlat
push
lea
dec
imul
orb
push
popf
dec
jge
cltd
int3
sub
mov
push
dec
popf
jecxz
dec
pushf
mov
fdivrl
data16
test
add
mov
lret
mov
jle
das
cli
in
outsl
mov
in
loop
sbb
daa
rcll
sti
test
cld
lret
mov
pop
imul
mov
cmp
sub
add
pop
xchg
fmuls
je
shll
xchg
gs
mov
pop
fs
pushf
mov
out
movsl
bound
mov
or
mov
adc
inc
cmp
jo
mov
dec
jp
xlat
in
jb
adc
stos
xlat
loope
addr16
ss
or
xchg
imul
pop
and
dec
or
loope
inc
push
sbb
in
fmuls
lret
jl
sti
or
inc
repz
pop
or
dec
stos
inc
mov
pop
aaa
dec
xor
mov
jle
stc
les
cld
sbb
fwait
push
test
mov
or
mov
xlat
push
add
sbb
add
cmpsl
xchg
out
shlb
jb
outsl
mov
add
inc
jae
lahf
mov
inc
jnp
enter
mov
int3
cmc
popf
ficoms
mov
or
dec
mov
rcll
imul
addr16
mov
int3
lds
sbb
xor
jns
mov
xor
arpl
xchg
xchg
out
push
out
xchg
out
nop
dec
jo
mov
enter
js
cltd
pop
stos
test
inc
sti
xchg
inc
cmp
and
test
jmp
lea
jne
call
divl
aaa
add
xchg
add
hlt
test
pop
cmpsb
inc
emms
mov
ret
adcl
sub
xor
or
sbb
and
js
inc
pop
pushf
fcoms
mov
mov
lods
clc
lds
fisubrs
xor
xor
test
lea
int3
mov
dec
xchg
sub
jbe
mov
ss
xor
stos
stc
cmp
into
xchg
cmp
mov
fimull
scas
das
ds
stos
pop
outsl
push
call
arpl
in
mov
adc
and
pop
xchg
mov
push
xchg
or
cmp
mov
pusha
mov
cmp
scas
sti
mov
sub
mov
jns
aad
xor
js
sbb
xor
test
fsubl
sbb
mov
dec
jnp
aaa
stos
pushw
das
mov
shl
push
sarl
cli
shr
lea
jno
je
pusha
call
movsl
pushf
push
fisttpl
xor
test
xlat
push
test
data16
stos
fisttpl
nop
in
loopne
jb
push
add
out
mov
mov
insb
push
incl
or
sahf
jne
mov
xchg
test
mov
sub
mov
mov
mov
mov
test
jl
cmp
pop
aas
mov
dec
fstps
lret
cltd
dec
fisttpl
or
jmp
cmp
inc
pop
xor
repnz
mov
sub
int
outsb
push
dec
leave
xorl
mov
repnz
mov
test
xchg
mov
adc
or
repnz
jecxz
cld
scas
sbb
hlt
inc
jnp
fisttpl
mov
push
out
push
or
and
add
repnz
repnz
adc
je
xchg
popw
xchg
add
or
push
and
mov
pop
sub
arpl
xor
pop
push
adc
push
mov
std
in
lock
jp
jmp
sub
imul
sbb
pop
push
xchg
dec
or
xor
adc
ss
rcrb
pusha
push
movsb
jne
lcall
popf
bnd
fwait
push
cmc
int3
aad
je
cmpsb
outsb
lahf
dec
push
scas
aaa
cs
sub
sub
push
add
ljmp
xchg
add
adc
xor
jbe
adc
popf
mov
aas
push
cmp
movsb
inc
test
add
fwait
in
dec
je
fidivrl
je
xchg
jnp
mov
imul
mov
int
shll
jbe
lock
lds
inc
jnp
pop
sarl
pop
or
rol
stos
aaa
cs
jmp
push
sahf
lds
cmp
jl
cmp
fmull
lret
addr16
lahf
jmp
cmp
or
and
outsl
cmp
jo
ss
xchg
clc
mov
sbb
sub
or
push
fnstenv
dec
dec
test
lods
adc
ja
xchg
rclb
inc
cwtl
sti
out
sub
sbb
cmpsb
pop
popa
cld
bound
jnp
fwait
enter
popf
in
mov
and
add
pusha
push
add
push
add
pusha
push
add
add
add
add
jge
pop
inc
inc
push
inc
push
dec
xor
cs
insb
add
fs
jne
pusha
mov
inc
push
sub
jl
pusha
neg
cmp
pushf
bt
xor
call
or
lds
sub
mov
lods
sti
test
rcl
aaa
in
mov
movsl
cld
lods
cltd
enter
xorb
lock
sub
sub
popa
sbb
daa
mov
cli
inc
out
inc
daa
mov
jb,pn
mov
out
cmpb
imul
add
mov
cmp
clc
cli
inc
pop
xchg
xchg
test
imul
insl
jno
iret
jg
fsubs
gs
jmpw
lahf
and
loope
repz
xchg
in
cld
jmp
pusha
jmp
hlt
mov
or
std
outsl
fcmove
std
das
pop
or
cmp
sbb
movsl
sbb
xchg
add
mov
xor
pop
and
clc
arpl
inc
pop
in
icebp
mov
ret
adc
jmp
imul
xchg
xlat
inc
incl
and
and
insb
fs
mov
sbbl
add
es
loope
rcr
arpl
shll
inc
aaa
and
data16
je
xlat
jmp
mov
cmp
mov
frstor
loope
xor
in
add
pop
test
push
mov
dec
sbb
xor
push
mov
lret
push
mov
and
call
cli
mov
mov
jo
xchg
arpl
daa
sbb
push
incb
sbb
push
sbb
fmuls
mov
ror
mov
ror
stc
test
bsf
mov
test
mov
xor
call
dec
push
ret
or
repz
jae
adc
faddl
out
or
out
cwtl
arpl
ja
add
aad
push
sub
mov
add
mov
add
xchg
out
jb
jmp
mov
mov
push
imul
in
repnz
cmp
sub
fisttps
cs
movsb
cld
dec
mov
ss
cmp
dec
xchg
lods
in
pop
or
iret
les
mov
push
sub
or
dec
jb
jb
imul
sub
rclb
mov
rorb
inc
xchg
sub
bound
notl
icebp
xchg
sbb
inc
sbb
push
in
out
push
adc
inc
mov
xchg
stos
jb
pop
out
in
repz
dec
push
dec
nop
jmp
sub
jl
pop
dec
jmp
add
rorb
lock
xor
jae
aaa
and
fwait
inc
adc
sbb
mov
add
outsb
frstor
rcrl
push
push
lds
shll
lret
notb
push
mov
mov
mov
flds
loopne
inc
aaa
xor
and
push
in
push
dec
test
imul
and
loopne
jb
jae
xor
xchg
cli
fisubs
lcall
cli
push
pop
jmp
dec
add
fcmovb
or
mov
leave
jg
mov
adc
add
shll
xchg
mov
push
fs
pop
inc
and
lret
xorb
jmp
shr
out
iret
and
aam
cmc
mov
lcall
test
fldl
clc
inc
xchg
dec
lods
jle
pop
cmpsl
cmp
ret
jge
push
ret
lcall
out
rorb
sbb
inc
and
daa
stc
pop
push
movl
pushl
mov
movw
lea
jmp
fstpl
adc
xchg
lock
adc
push
sub
pop
fcmovne
mov
in
lock
flds
sbb
test
lcall
imull
movsl
fisubrs
das
pop
mov
or
xchg
mov
cmp
sahf
and
mov
aas
test
aas
and
mov
loope
and
movlps
imul
outsb
sub
mov
add
les
and
out
movsl
pop
push
jbe
jns
lea
mov
lcall
and
ret
sbb
jmp
lahf
lods
mov
xor
xor
fsubrp
ja
test
imul
dec
scas
pop
aaa
hlt
lret
addr16
inc
pop
in
sbb
mov
and
mov
int
push
stos
aam
out
test
adc
imul
aaa
mov
jmp
xchg
xchg
lea
push
leave
dec
sbb
arpl
jb,pn
pop
sub
pop
xchg
ret
or
adc
xchg
inc
push
add
aaa
pop
pop
lds
xor
mov
mov
adc
daa
pop
aas
sub
loope
pop
les
lods
scas
xor
jae
xor
ds
cmp
cmp
cmp
and
pop
scas
not
imul
xor
xlat
icebp
gs
sub
xor
xor
dec
aad
icebp
mov
loopne
out
pop
sub
jge
jge
cli
les
push
inc
pop
xchg
js
adc
push
inc
jnp
pop
or
xor
mov
les
push
mov
mov
arpl
add
inc
xor
or
rclb
xchg
ds
int3
mov
mov
stos
out
pop
pop
jnp
into
adc
inc
outsl
cmpsb
or
inc
mov
adc
jle
cltd
mov
int3
shl
jmp
xchg
andl
mov
add
pusha
movl
pushf
movl
pushl
pushf
lea
jmp
movsbw
setg
mov
push
lea
pushf
mov
setae
lea
movzbw
mov
mov
not
mov
sete
mov
mov
pushf
call
cmc
int3
add
or
fldenv
dec
jae
push
xchg
xlat
push
cmp
dec
cmp
adc
mov
adc
adcl
shll
add
mov
mov
inc
add
and
lds
scas
xlat
out
aaa
xorl
popf
xchg
fwait
sbbb
mov
inc
jns
pop
add
incl
dec
cmp
lsl
adc
cltd
movsl
addr16
push
or
mov
add
rolb
inc
pop
sub
mov
pushf
repnz
dec
inc
push
out
subb
int
popf
fsub
dec
and
xchg
stos
push
or
ljmp
inc
setns
push
pop
in
dec
or
sbb
jno
xchg
or
dec
outsl
flds
or
and
mov
lods
stos
push
inc
ds
ja
lods
dec
or
fwait
das
sahf
das
push
mov
cmp
and
icebp
imulb
sti
mov
jmp
call
add
pop
rcll
sti
leave
push
cmp
sub
sarb
pushf
test
fs
pop
add
loope
sbb
mov
xor
lock
jb
lret
fwait
sbb
mov
imull
in
imul
in
sbb
add
xchg
into
fmul
scas
add
mov
mov
add
mov
add
jl
lock
shlb
loopne
enter
iret
int
shrl
clc
or
fwait
in
mov
into
xchg
add
mov
sbb
add
mov
into
mov
sbb
rorb
lcall
test
add
lock
inc
or
mov
mov
xchg
out
daa
mov
incb
mov
rclb
lret
jne
lahf
mov
xchg
bswap
call
sarl
fsubrs
leave
cld
or
dec
aas
mov
push
add
or
out
vmovups
movsb
inc
test
rcrb
rcll
push
xchg
shl
dec
mov
jmp
and
mov
ficoms
cmp
ja
jl
jge
js
ret
cmp
push
pop
pop
data16
loopne
stos
push
or
iret
push
push
jne
icebp
mov
fs
mov
add
fs
imul
add
mov
setg
pop
setne
xchg
pop
mov
bswap
push
mov
pop
pushf
lea
mov
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
cs
jmp
add
or
in
xlat
add
push
push
push
add
in
mov
jecxz
jmp
jl,pt
jge
xlat
mov
push
outsl
lret
int
dec
push
call
inc
mov
into
sub
clc
xchg
inc
inc
push
jbe
out
ds
lods
fimull
xchg
test
mov
sbb
sub
repz
scas
or
inc
daa
jo
sub
popf
lret
cmpsl
jecxz
mov
fxch
imulb
cmp
sbb
in
mov
sub
in
xchg
lret
jb
sbb
xchg
lea
loopne
add
ljmp
ret
xor
mov
xor
jp
scas
jecxz
divb
sub
add
mulb
inc
sbb
dec
je
adc
dec
add
das
inc
push
icebp
mov
les
dec
xlat
data16
rcl
insl
js
inc
loope
mov
call
dec
adc
mov
mov
pop
je
jnp
jb
ljmp
and
jmp
xor
push
mov
shl
cmp
arpl
dec
push
sbb
mov
loop
call
adc
leave
or
aas
or
fwait
mov
es
test
or
sbb
and
pop
mov
sbb
pusha
xor
sbb
test
and
sbb
fnstsw
lods
aaa
mov
pop
lret
outsl
test
test
xor
mov
iret
insl
mov
sub
neg
or
xor
push
or
enter
test
stos
cmc
push
dec
fisttpll
jns
outsl
cmp
sbb
out
aam
pop
dec
or
insl
sub
ss
mov
mov
je
ja
je
push
shll
push
shl
and
push
adc
test
sahf
lods
cwtl
test
add
outsl
sub
adc
rclb
lock
roll
lds
pop
sahf
lock
and
mov
push
sub
mov
push
xor
push
outsl
xor
repnz
mov
shrl
testb
push
xor
lea
or
add
jmp
scas
lods
dec
cmp
stos
incl
loopne
add
jb
push
push
sbb
dec
roll
ja
xchg
in
xchg
mov
jmp
scas
stos
xchg
imul
fiaddl
mov
js
subb
dec
cmp
jae
xor
jmp
sub
mov
pop
enter
pop
pusha
dec
push
sub
icebp
add
push
push
xor
inc
pop
movsb
mov
sbbl
cli
mov
daa
pop
cwtl
lret
or
lcall
in
pop
imul
sub
sub
jno
ret
cmpsb
rcrl
clc
adc
pop
les
ljmp
mov
sarl
call
mov
out
push
mov
mov
lds
out
stc
les
add
jo
aas
es
popa
cld
and
fdivl
dec
fsub
cwtl
push
mov
push
fmull
ljmp
fwait
ljmp
aam
cld
and
mov
xchg
outsb
xor
movsb
mov
sbb
rclb
push
inc
xchg
dec
jne
gs
and
std
imul
sub
out
lahf
inc
cmpsb
dec
push
int
xchg
aam
inc
imul
out
jle
add
push
fcmovnb
push
pop
sbb
xorl
and
and
cmc
mov
jnp
clc
xchg
push
sti
xchg
rcrb
pushf
mov
fisttps
mov
sti
mov
loopne
scas
sbb
dec
pop
or
and
jp
mov
ja
add
xchg
pop
jnp
test
mov
inc
ljmp
mov
loop
imul
mov
mov
push
sub
mov
loop
add
pminsw
decl
pop
in
sbbl
inc
cli
add
outsb
mov
call
jno
adc
call
inc
push
mov
push
fsubrp
sbb
fisubrs
enter
sbb
adc
mov
mov
movsl
inc
jo
push
outsb
fisttps
ljmp
adc
test
lret
push
outsb
pop
mov
cli
popa
adc
sub
daa
lret
je
mov
mov
mov
lret
insl
cmp
mov
imul
push
sbb
inc
mov
int3
ret
mov
cmc
dec
decl
and
mov
bound
aad
lods
sbb
dec
xor
or
adcl
mov
je
filds
add
push
pop
fucomip
fisubrl
mov
dec
mulb
rolb
mov
xor
add
sbb
and
xor
rolb
test
aad
lret
enter
test
or
lods
xor
lock
mov
test
aaa
into
xchg
test
jae
mov
jge
add
mov
into
push
sti
jnp
mov
cwtl
mov
dec
sbb
or
aad
dec
js
xchg
sub
stos
rclb
sbb
adc
adc
imul
and
xor
jecxz
fsts
loopne
cmp
sub
lds
pop
popf
add
push
push
cmp
push
cwtl
cs
push
pop
cld
popf
cmpsb
sbb
sbb
das
lcall
scas
sbb
mov
data16
std
std
movsl
mov
xchg
sub
inc
orl
jmp
or
cli
iret
cltd
imul
push
xchg
jle
loope
or
add
shr
test
jns
lods
ficoms
sbb
test
iret
add
mov
fistpll
imul
mov
movsb
testb
lret
mov
mov
adc
lahf
inc
mov
ss
shlb
pop
xchg
inc
cmp
mov
pop
push
push
inc
sarl
test
popf
bound
mov
push
inc
pop
out
add
aam
mov
mov
xor
dec
lea
or
mov
mov
sbb
cmpsl
jbe
cmp
lds
sbb
or
and
outsl
ds
add
shlb
sub
data16
cmp
mov
xlat
insl
sub
mov
aam
shlb
je
push
or
out
mov
xchg
in
adc
jp
push
lret
jnp
imul
or
fldpi
jle
sahf
sub
ds
fmul
and
xor
inc
adc
nop
xchg
push
inc
pop
in
out
add
mov
mov
ljmp
ret
sub
add
pop
or
out
in
leave
pop
xor
in
testl
fchs
cmp
inc
xor
fldl
cltd
les
pop
sahf
mov
cmp
adc
mov
or
or
sub
or
outsl
mov
leave
dec
xchg
lret
cmp
push
mov
fsts
lea
orl
aad
inc
sbb
push
jns
xchg
stos
adc
sbb
inc
push
mov
sub
jne
cmp
and
js
dec
jl
jp
iret
push
lods
fadd
jae
or
inc
mov
cltd
xchg
aam
movsl
repz
negl
std
xor
mov
icebp
in
mov
adc
adc
add
pop
add
and
sbb
jbe
add
add
push
stos
std
loop
jge
jmp
add
push
mov
push
dec
mov
leave
decl
fadd
cld
xor
jne
cld
test
stc
or
cmp
lods
aaa
inc
sbbb
add
push
mov
cmp
lret
adc
into
mov
shr
adc
mov
or
add
xchg
icebp
out
mov
ja
lahf
data16
pop
cmp
fmuls
push
out
adc
mov
xorb
mov
dec
ss
or
xchg
add
mov
dec
dec
inc
push
push
lock
inc
testl
jnp
arpl
pop
xchg
or
sti
push
push
inc
ret
pop
sbb
jge
loop
enter
sbb
push
xchg
inc
cmc
cmp
xchg
inc
sbb
xor
xchg
push
mov
aaa
mov
push
ret
cmc
cmpsl
xor
inc
jno
testb
mov
roll
sbb
shrb
add
dec
cltd
loop
lds
clc
mov
data16
sub
push
xchg
push
jmp
test
roll
dec
dec
mov
jle
jp,pn
xor
adcb
test
cmpl
mov
jbe
xchg
mov
cwtl
inc
rorl
ror
adc
test
imull
inc
pop
ret
rorl
mov
push
insb
fimull
push
dec
lcall
insb
icebp
loopne
pop
mov
push
lods
mov
mov
jmp
mov
xchg
rclb
add
cmpsb
sbb
mov
push
icebp
sbb
mov
shlb
add
mov
popf
sar
xchg
mov
fldcw
fs
inc
shrl
cmc
mov
insb
push
test
subps
mov
jns
cltd
rorb
not
lahf
lea
jmp
ret
mov
push
lcall
pop
xchg
xor
stos
int3
push
dec
js
lods
sti
outsb
aas
out
clc
or
inc
pop
jnp
dec
push
or
cmpsb
lahf
movsl
xor
or
xor
pushf
inc
jnp
cmp
sti
mov
in
das
fidivs
stos
jge
fisubrl
push
xor
or
std
scas
pop
xor
push
add
push
popa
adc
cmpl
xor
mov
mov
mov
aas
sub
dec
push
sbb
out
and
or
aaa
inc
dec
jp
les
popa
dec
addr16
jge
insb
lahf
inc
sbb
inc
xor
aam
adc
outsb
sbb
sub
fcmovnb
outsl
push
fs
sti
test
mov
add
mov
insl
ja
fisubrl
cmp
loope
stos
fisubrl
mov
sbb
adc
fimull
mov
and
inc
dec
pop
pop
or
cmovns
push
jo
js
xor
mov
adc
es
lods
shrl
or
or
sbb
repnz
mov
push
addr16
jp
mov
les
sahf
les
cmp
inc
jnp
jb
inc
dec
sbb
jg
mov
outsb
mov
cmp
pop
or
mov
ljmp
fwait
and
lahf
mov
cmp
mov
insl
nop
out
es
mov
pusha
pushl
ret
popf
rdtsc
nop
pusha
mov
lea
jae
pushf
movl
jmp
lea
ret
xor
mov
test
ret
xchg
ret
pop
ret
arpl
testl
loop
ljmp
xor
jp
xchg
ss
sarl
xchg
outsl
pop
cmovp
cld
or
mov
imul
sbb
jecxz
xchg
int
sbb
mov
out
push
mov
sar
xchg
nop
pextrw
or
clc
lds
or
hlt
ret
ds
cwtl
test
jae
je
jo
hlt
cs
adc
ja
test
ret
adc
push
xor
shlb
shl
adc
jbe
cltd
rolb
xchg
into
jg
jb
mov
or
mov
mov
push
xchg
or
pop
sbb
addr16
pop
mov
mov
daa
nop
out
jge
push
out
push
addr16
les
aaa
dec
les
sbb
pop
in
out
and
rolb
rep
push
lahf
movl
pushl
pusha
push
lea
jmp
cwtl
lret
or
pop
pop
imul
flds
xchg
push
aam
icebp
das
aaa
in
xchg
cmpl
popa
movups
sub
add
lcall
add
xchg
gs
in
jecxz
sub
cmp
push
xchg
das
out
shrl
push
xchg
mov
inc
mov
jle
push
notb
jnp
lock
insb
push
mov
iret
repnz
xor
sbb
mov
or
les
xchg
inc
xor
loopne
leave
push
sub
jb
mov
dec
shll
push
pop
or
xor
pop
out
cmp
popa
jo
sbb
dec
mov
pop
dec
sbb
mov
outsl
or
jge
and
pop
stc
nop
imul
mov
push
sahf
call
push
jns
pop
daa
jns
mov
lock
movsb
insb
and
sarb
inc
das
imul
ret
xlat
mov
dec
lret
inc
mov
sub
sbb
sahf
jmp
or
int3
in
sub
add
scas
push
nop
push
adc
hlt
aad
xor
fst
xchg
mov
cli
xorl
sbbl
movsb
sbb
movl
call
out
imul
sub
or
push
sub
in
mov
movl
sarb
pop
or
add
mov
stc
andb
aam
sub
adc
push
add
mov
out
xor
outsb
mov
add
sbb
xchg
out
jnp
push
xchg
jmp
pop
and
pop
or
in
out
push
cmp
out
xchg
and
dec
cmovo
jecxz
push
pop
stos
mov
and
cmpb
aad
xchg
test
push
call
mov
add
push
ret
xchg
out
inc
mov
xchg
pop
mov
stc
movsb
rcl
roll
aaa
dec
push
xchg
dec
stc
scas
fstpl
enter
aaa
inc
sub
gs
jns
pop
and
adc
fmull
pop
pop
test
mov
cmp
fnstcw
ffreep
sbb
sbb
sub
dec
fisubrl
movsl
mov
inc
dec
inc
push
out
jecxz
and
add
pusha
sbb
dec
sbb
decb
jl
sti
mov
sti
aam
incl
bt
bt
mov
clc
clc
cmp
test
push
pusha
pusha
lea
je
pushf
pushf
add
call
fwait
mov
fwait
or
fwait
or
cmpsb
pushf
jecxz
pusha
ljmp
ljmp
aas
inc
mov
xor
mov
mov
pop
nop
in
loop
inc
out
sti
or
loop
in
mov
xchg
push
cmp
xchg
cltd
or
sbb
rorb
lahf
dec
mov
mov
sar
es
shl
xchg
cmpb
jb
sbb
and
pop
faddl
test
push
nop
mov
arpl
or
enter
add
inc
pop
sarb
mov
mov
jo
aaa
push
xlat
mov
fcoms
ljmp
loopne
pop
pop
mov
jle
scas
pop
adc
leave
jbe
xor
or
cmpsl
sbb
loop
in
ficompl
shl
imul
pusha
xlat
sub
imul
fisttpll
adc
fsin
mov
mov
fmull
lret
cmpsl
repz
and
je
mov
shr
repz
or
dec
jae
pop
add
push
call
jge
xor
xor
gs
jl
jae
xor
iret
push
jb
mov
mov
push
cmpsl
push
arpl
push
and
adc
scas
push
mov
xlat
jge
jg
jg
cmp
push
imul
and
fbld
mov
ss
adc
outsl
push
add
incb
sub
ljmp
xchg
dec
insb
pushf
jmp
sub
push
jne
xchg
inc
jb
push
inc
mov
xchg
cmpsl
xor
int3
mov
sbb
pop
inc
push
stos
call
mov
rolb
push
xchg
iret
cmc
push
imul
scas
dec
xchg
pushf
pusha
call
pushf
jmp
jmp
dec
jne
mov
sub
lods
push
dec
fmulp
lcall
xlat
shll
cmpsl
mov
xchg
mov
pushf
mov
test
mov
stc
and
jns
pop
sbb
dec
mov
sbb
cmp
fldl
out
add
xor
sub
aas
out
jbe
xor
lret
in
adc
mov
pop
push
jo
popa
mov
sbbl
imul
sahf
fs
addr16
cmpsl
and
push
jne
clc
into
adc
jge
cs
mov
iret
sahf
dec
fsubrp
std
dec
cltd
mov
jmp
pop
push
inc
inc
adc
xchg
jb
push
cmpsl
sub
cmp
stos
dec
adc
icebp
dec
cwtl
jle
push
and
pop
xchg
sbb
aam
inc
js
mov
mov
pop
xchg
out
sahf
pop
jg
imul
pop
stos
sti
jmp
sbb
xor
pop
mov
outsb
lods
iret
xor
cmc
into
mov
lods
lock
push
xchg
scas
std
cltd
dec
int3
call
int3
mov
movsl
mov
jae
shl
adc
add
cmp
xor
mov
aam
inc
sbb
call
xchg
mov
call
xor
stos
movsb
dec
push
cli
pop
loopne
mov
shlb
cmp
xor
pushf
push
push
aam
sbb
gs
cmp
push
pop
testl
dec
movsb
or
int3
fisubrl
popf
ja
pop
lods
jmp
cs
scas
popa
push
aam
jae
sbb
jns
cmp
lcall
psubusw
aad
outsl
adc
out
or
cwtl
push
pop
cmpl
mov
or
or
aad
aaa
outsl
mov
cmp
leave
xchg
movsl
xchg
test
lea
adc
in
xchg
test
push
cmpsl
adc
sub
out
mov
adc
sbb
lods
call
ja
repz
mov
cmp
and
inc
popa
fidivs
sbb
dec
imul
mov
push
dec
cmc
mov
jecxz
adc
jbe
mov
shlb
xchg
int3
xchg
lock
xor
popf
test
das
cltd
sub
cmpb
insb
sub
cmc
push
insb
pushf
mov
xor
dec
sbb
iret
mov
pop
pop
dec
ljmp
bound
stc
and
shlb
or
inc
and
fcom
jge
xchg
xlat
cmp
ljmp
mov
cmp
push
or
add
test
inc
lods
call
iret
inc
int
test
aad
or
xchg
xlat
shll
and
hlt
test
repz
adc
out
cmpsb
shll
xchg
daa
xor
daa
aas
cld
addr16
push
push
add
lock
mov
adc
cmp
cmp
adcb
xor
mov
int3
pusha
pop
in
mov
jne
xchg
test
dec
push
scas
jno
push
push
loope
loopne
sub
aaa
leave
insl
fs
mov
xor
sti
lret
inc
push
stos
pop
cmp
xchg
inc
cmovo
dec
cmp
xchg
push
data16
mov
xchg
push
jne
iret
adc
ss
xchg
push
bound
out
ss
mov
pop
xor
repz
lahf
adc
aam
inc
aaa
outsb
cmp
fmuls
js
or
mov
xchg
push
jge
sbb
sbb
push
fs
xchg
inc
lods
mov
stos
fs
xchg
push
xchg
push
test
fwait
jnp
ss
mov
lock
mov
fs
mov
and
mov
xchg
push
pop
movl
ss
xchg
fs
imul
pop
jp
adc
mov
inc
and
pop
loope
cmp
xchg
push
jns
cmp
ss
xchg
push
imul
outsl
fs
clc
adc
xor
mov
xchg
push
mov
test
cmp
xchg
push
jno
std
pop
cmp
xchg
push
test
mov
xor
mov
xchg
push
adcb
fs
xchg
lcall
repnz
xchg
add
mov
sahf
aaa
loope
fs
mov
inc
insl
icebp
repz
repnz
xchg
stos
or
mov
clc
movups
lds
scas
push
xchg
xchg
pop
cs
inc
scas
lea
jle
cli
shrl
sbb
xchg
xchg
pop
cltd
test
inc
orb
fimuls
fisubrs
jle
mov
stos
into
cld
sub
add
adc
mov
push
rcr
inc
pop
sbb
sub
xor
pop
rorb
add
sub
xchg
ret
xor
aas
pop
jns
loopne
xchg
inc
popf
ds
in
dec
push
imul
xchg
cmpsl
add
or
mov
roll
rcll
std
les
iret
jb
xchg
mov
aas
loope
lahf
out
popa
xor
xor
repnz
cli
aaa
mov
loopne
addr16
outsl
cs
movsb
xor
inc
mov
daa
fstpt
lods
xor
mov
xor
or
push
dec
out
mov
rolb
imull
dec
push
sub
mov
fsubr
push
scas
cmpl
xchg
dec
jp
mov
ja
xor
push
sub
out
mov
subb
mov
cwtl
addb
push
sub
pop
and
sub
insb
icebp
out
push
scas
aad
jbe
push
or
les
mov
jecxz
pop
pop
cli
aaa
mov
mov
mov
jbe
adc
adc
dec
int3
loope
popa
adc
mov
aad
push
xchg
paddd
or
xchg
cmp
mov
or
enter
inc
and
scas
adc
xchg
idivb
jg
push
cmpb
cmp
inc
ss
ds
das
adc
push
addr16
pop
cmpsb
push
or
lret
xchg
scas
adc
xor
pop
jmp
pop
fisubl
lods
ljmp
jmp
sti
insl
mov
fs
xlat
roll
add
rcr
ds
shll
fnsave
mov
push
xor
cmpsb
cli
lret
jp
lods
and
jl
sub
stos
aad
jmp
mov
scas
outsb
repz
popa
push
adc
pop
gs
leave
mov
leave
push
imul
push
mov
mov
mov
mov
pop
xor
dec
pop
pop
outsb
jo
cmp
add
mov
add
daa
clc
push
jle
lea
jmp
dec
ja
mov
dec
clc
or
imul
nop
sub
call
and
mov
lret
mov
mov
xor
mov
add
xchg
mov
repnz
lds
jo
lret
addl
test
and
add
outsb
ss
aam
ret
mov
icebp
insb
fmuls
inc
sti
in
inc
cmp
fbld
fcomip
repz
jo
pop
push
mov
cmp
pusha
call
call
movl
call
fs
cs
ljmp
and
scas
add
imul
ss
mov
add
mov
and
mov
rorl
mov
jae
in
inc
adc
pop
imul
popa
mov
outsl
xchg
mov
xchg
and
push
sub
sbb
and
mov
lea
xorb
xor
pop
push
int3
push
lds
mov
jge
ret
dec
out
enter
loop
or
lods
testb
insb
sbb
in
cmc
mov
ja
jb
pop
or
jge
pop
pusha
aam
aad
int3
outsl
push
popa
jno
into
cli
daa
leave
imul
repz
add
push
bound
xor
adc
mov
hlt
mov
sub
cmpb
dec
js
jnp
hlt
adc
ljmp
pop
je
stc
jb
mov
dec
jns
rep
cmp
pusha
scas
mov
mov
fs
or
mov
movsl
cwtl
loope
clc
sub
adc
xchg
dec
testb
enter
lock
jns
pop
out
jbe
fmuls
push
mov
test
cmp
outsl
sub
push
adc
jp
in
data16
jp
cld
add
jmp
jo
xlat
test
cmp
push
dec
pop
in
push
inc
jge
mov
in
pusha
cmc
mov
xor
clc
add
push
push
mov
lods
incb
ret
pop
fildll
xchg
cmpsl
xor
arpl
fisubrs
dec
pop
mov
cmp
scas
lret
xchg
add
lock
ss
movsb
dec
jle
ret
test
stos
xor
jae
dec
fldenv
jo
inc
jp
sahf
or
push
mov
inc
stc
and
and
addr16
push
mov
mov
jno
shr
lods
or
mov
jbe
push
mov
mov
divb
dec
push
mov
pop
adc
lods
mov
push
xor
fwait
and
ret
movsb
xchg
or
mov
lea
mov
aaa
outsl
ds
adc
adc
imul
daa
cmp
mov
push
mov
inc
xchg
jo
fists
test
xor
mov
pushf
les
test
push
data16
lds
cli
das
jbe
enter
insb
push
scas
xchg
out
rolb
ds
and
je
call
bound
lods
or
push
inc
mov
push
push
mov
mov
xchg
ljmp
enter
int
jno
push
dec
je
pushf
scas
into
and
mov
mov
adc
or
or
inc
sub
pop
jbe
pop
addr16
dec
push
dec
lret
xchg
arpl
sub
xchg
cli
mov
push
jle
sub
test
push
das
jecxz
pop
ret
mov
scas
jmp
scas
sub
lahf
cs
gs
bound
jl
cld
test
cmp
xchg
xchg
inc
hlt
stos
jo
pop
pusha
lods
lods
or
sub
in
sbb
lods
popf
mov
mov
jecxz
mov
daa
xchg
std
cmpb
das
sub
cwtl
fdiv
movsl
cwtl
loope
add
ljmp
fbstp
es
clc
push
cmp
and
sub
push
push
jmp
lods
mov
mov
xchg
stos
je
adc
dec
xor
aaa
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
shrl
add
gs
jae
pop
add
je
push
out
fildl
push
imul
and
mov
movsl
pop
add
xchg
enter
mov
inc
adc
jo
pop
mov
mov
cmpsb
lahf
in
movsb
loopne
repnz
push
aad
and
lcall
int3
rorl
scas
repnz
inc
add
xlat
xor
mov
inc
and
decb
mov
inc
and
and
lea
jmp
test
push
scas
or
les
out
adc
and
push
cmpsl
pop
pusha
lods
enter
loopne
call
add
pop
jecxz
pop
clc
leave
out
das
hlt
mov
movsl
insl
pop
add
fidivrl
mov
int
jbe
inc
add
fisubrs
leave
rcll
sub
loope
dec
mov
push
imul
fwait
or
es
arpl
imul
in
jae
mov
mov
push
fucom
mov
cli
test
out
mov
leave
hlt
cmp
dec
pop
in
jg
sbb
in
mov
inc
add
mov
mov
out
and
stos
cmp
jmp
ret
cmp
js
bound
dec
fs
inc
or
sbb
dec
mov
mov
cmp
lcall
dec
xor
pop
fcomip
mov
cmpsb
lahf
push
test
push
adcb
xor
adc
rol
adc
jb
push
pusha
push
dec
fwait
inc
cmp
mov
dec
stos
xchg
call
jecxz
adc
clc
mov
lret
out
push
mov
and
or
out
jmp
mov
push
mov
mov
cmpsl
divl
loope
int
sub
vmwrite
xor
shrl
outsl
xchg
push
xchg
out
and
cmpb
jb
jne
xchg
and
fs
loopne
xchg
adc
js
icebp
je
pop
test
popf
test
pop
xchg
cmp
cmp
repnz
ljmp
out
nop
dec
nop
and
jo
lea
push
pop
dec
mov
pushf
jecxz
enter
int3
adc
or
bound
push
pusha
shlb
xor
push
xlat
test
mov
push
in
les
jno
and
mov
sbb
sti
cs
mov
sub
out
loopne
mov
fisubl
pop
or
fmul
and
xchg
enter
insl
cmp
mov
es
push
xor
jno
pop
iret
adc
pop
sarl
sbb
clc
rcll
dec
adc
push
jb
xchg
aad
push
xorl
rol
fiaddl
pop
adc
std
loope
dec
cld
lods
call
das
jnp
inc
mov
loope
dec
rorb
test
in
sbb
dec
into
inc
pop
sub
add
bound
cs
stos
nop
pop
rclb
popa
bound
in
fsubs
into
leave
je
jne
jb
sbbb
jb
push
in
sbb
mov
mov
xchg
rcll
and
hlt
out
ficoms
stos
or
bnd
mov
shlb
test
ret
adc
mov
mov
cmp
inc
sbb
hlt
in
mov
icebp
fiaddl
cmpsl
push
and
int
in
dec
push
loop
scas
dec
and
in
aad
jo
stos
dec
or
scas
inc
stos
jecxz
or
sbb
xchg
mov
inc
std
sub
dec
ss
testb
mov
lahf
push
insb
sub
adc
xchg
test
popa
xor
rolb
pushf
inc
sbb
pop
out
fiaddl
lock
jae
cmp
subb
inc
sahf
addb
aas
add
test
xor
lcall
jg
push
and
mov
movsl
repz
add
push
push
lret
jne
sbb
jg
popf
jecxz
rorb
push
cmp
ljmp
mov
lock
push
add
push
jno
pushf
sbbb
push
jmp
pop
or
clc
cs
push
inc
jg
mov
or
jecxz
dec
cld
shrl
cwtl
cwtl
test
pusha
cmp
jmp
xor
fldenv
aas
imul
add
jbe
mov
lea
inc
xor
pop
leave
jp
adc
popa
sbb
cmp
in
xor
cmc
insb
sub
mov
push
test
sub
xor
push
lea
fldl
pushl
lea
jae
push
jmp
lods
xchg
pop
stos
or
pop
mov
dec
stos
fstl
jns
dec
adc
inc
test
mov
imul
mov
scas
jmp
xor
out
bound
icebp
subl
in
mov
xor
mov
and
outsb
cmp
sub
push
mov
adc
dec
lea
imul
incl
or
push
fwait
stos
rclb
lea
cmp
lea
fs
xchg
pop
call
cmp
ret
jge
push
push
xor
sub
aam
xchg
or
cmp
stc
dec
mov
mov
ja
stc
loope
call
and
cwtl
out
sub
aam
jno
mov
add
or
ljmp
jl
fstps
and
loope
inc
push
inc
or
test
jg
pop
imulb
mov
loopne
addr16
stos
clc
pushf
pusha
jge
ss
inc
or
jmp
fstps
sub
cmp
mov
pop
sub
pop
cmp
and
and
add
add
add
push
add
add
sti
cmp
cmp
xor
aas
dec
je
sub
and
adc
sbb
pop
je
add
hlt
repnz
movsl
pop
sbb
fstl
les
and
cmp
sbb
mov
or
adc
fcompl
movsl
fsubs
xchg
xchg
mov
pop
aad
and
push
pushf
aaa
sbb
xor
or
mov
and
pop
lcall
inc
cmp
adc
push
js
xchg
pop
rcrb
push
nop
sbb
jnp
je
xchg
pushf
sbb
stos
adc
xchg
fs
dec
mov
scas
sbb
and
adc
adc
add
sbb
pop
add
add
add
aam
pop
movsb
mov
mov
or
jl
sbb
ret
inc
adc
stc
sbb
shlb
xlat
ljmp
add
in
stc
lret
out
out
rcr
lcall
clc
cmpsb
fistpll
rcr
aam
sbb
jl
adc
sub
out
add
repz
cmpsl
cmpsb
pop
sub
adc
outsl
adc
fdiv
fs
iret
mov
stos
sbb
into
fs
mov
adc
push
movsb
ss
pop
dec
pop
in
insb
jns
je
jae
sub
and
mov
push
out
insl
push
jg
xor
pop
jae
jo
add
aam
aad
add
mov
imul
adc
or
push
in
ljmp
out
fsubs
xor
xor
dec
pusha
sbb
leave
aam
and
lds
pop
inc
adc
lods
scas
mov
sbb
ret
sbb
cwtl
loopne
cmp
pop
mov
sub
adc
shll
fcoml
jo
loopne
push
sub
sbb
push
mov
pop
imul
icebp
or
cmp
test
cmp
or
mov
or
out
cld
sbb
icebp
or
pop
nop
cmp
inc
lcall
rorl
sbb
jl
inc
fwait
nop
sbb
or
loop
inc
ljmp
or
mov
mov
icebp
add
add
sbb
add
icebp
mov
adc
and
mov
popf
or
sbb
mov
or
in
sbb
jmp
outsb
dec
sbb
mov
js
xchg
push
mov
mov
jno
cld
jecxz
insb
inc
mov
mov
or
in
add
xchg
xor
push
sbb
ss
inc
mov
popa
inc
int
pushf
es
mov
in
or
adc
or
out
shll
dec
or
cli
sbb
mov
or
adc
outsb
fwait
sbb
pusha
les
ljmp
dec
mov
or
js
sbbb
jae
arpl
lock
jns
mov
and
or
jecxz
outsb
popf
cmp
pop
inc
sarl
in
sbb
xor
ja
cmpsb
out
mov
sbb
inc
loopw
in
sub
inc
pushf
push
xchg
or
mov
xlat
faddl
pop
cld
loop
mov
xor
sub
adc
clc
mov
scas
or
mov
mov
clc
mov
pop
jne
int
mov
push
dec
or
sbb
ja
popa
mov
iret
and
inc
and
int
lock
jno
imul
divl
pop
fs
cmp
lock
cmpsl
pushf
fucomip
popa
push
pop
sbb
sbb
lret
lret
mov
inc
movsl
mov
push
mov
xor
mov
push
sbb
sbb
out
cmc
push
out
mov
popa
bound
xorb
js
pop
outsl
decl
push
sbb
pop
aas
or
sbb
xchg
dec
pushf
mov
lret
sbb
ret
sbb
adc
sbb
sbb
rcrb
test
adc
psubsb
xchg
rclb
adcl
sbb
popa
clc
inc
cmp
sbb
stc
sbb
add
addl
aaa
pusha
stos
pop
cmp
scas
sbb
mov
scas
sub
scas
xor
sbb
test
push
repnz
fmuls
adc
sub
adc
mov
enter
push
pop
movsl
mov
ds
pop
cli
cmp
cld
sub
clc
cs
pop
or
sbb
in
inc
pop
std
xlat
gs
cmp
lods
jbe
xchg
or
sbb
sbb
iret
xchg
outsl
mov
dec
sub
xor
sbb
rorb
push
fwait
sbb
sbb
addl
test
shr
sbb
cmp
xor
mov
and
adc
fcmovnu
pop
mov
jmp
jge
push
sub
testl
insb
xor
sub
cmpl
jge
adc
loop
adc
repz
cmpsl
cwtl
repnz
sbb
mov
pushf
cmc
dec
mov
and
in
dec
dec
mov
into
mov
cmc
aaa
imull
insl
cmp
sarb
inc
mov
push
mov
imul
xchg
push
cli
out
dec
pushf
in
xor
xor
pop
in
rorl
ljmp
pusha
je
pop
or
pop
out
mov
clc
pop
pop
je
sbb
cmp
mov
adc
je
std
add
or
mov
imul
sbb
pop
sub
dec
jl
jo
sub
sub
js
popf
cli
je
mov
jnp
jae
nopl
dec
imul
cmp
push
xlat
ss
adc
shl
sar
mov
shl
scas
fcomps
cmpsb
movsb
aam
hlt
mov
aad
mov
jmp
into
int3
scas
mov
repz
stos
loopne
idivb
or
mov
push
sub
into
scas
stos
int3
aam
in
jmp
mov
sub
stos
push
push
mov
or
fwait
pushf
scas
aad
lret
ror
mov
add
in
lret
es
xchg
sub
mov
out
hlt
sarl
lods
scas
mov
mov
adcb
mov
inc
lcall
aad
int
lahf
cmc
cmpsb
clc
add
fldt
pop
sub
iret
lds
mov
fst
sbb
stos
cmpsb
push
les
adc
test
pop
push
aam
mov
aad
scas
lret
iret
adc
lods
dec
pop
pop
xor
add
add
fstpt
test
fsubrl
fidivrl
mov
test
nop
cmp
rclb
insb
lock
sub
lret
lods
pop
lcall
cmpsb
vpaddq
cmpsb
negb
aam
xor
ds
mov
push
sahf
push
xor
sbb
pop
push
dec
cmp
aas
js
xor
or
in
xchg
push
push
pop
mov
fistpll
adc
mov
lcall
stos
sub
adc
mov
jne
ret
jbe
jns
ja
jnp
adc
sub
pop
nopl
add
and
jl
je
into
pop
movsl
ljmp
fs
dec
push
pop
inc
fcompl
enter
push
arpl
jnp
and
andl
sub
or
or
lock
jne
jbe
jns
dec
ljmp
or
and
std
imul
ret
imul
cmp
sbb
mov
and
int
imull
ds
push
test
test
mov
filds
aam
xchg
jl,pn
push
sbb
call
sarb
pop
adc
lret
and
sbb
dec
into
sbb
into
push
and
in
add
or
lods
into
mov
pop
add
imul
xchg
fwait
je
or
pop
push
fiaddl
icebp
cwtl
add
rcl
jle
cmp
add
dec
jbe
jg
aas
adc
mov
fwait
or
or
pop
in
pop
dec
push
dec
inc
push
pop
mov
mov
sbb
leave
push
loope
xor
mov
push
inc
adc
sar
or
movsb
fistl
rcr
test
xor
ds
out
aam
adc
loop
push
mov
lods
add
adc
int
mov
rolb
fst
int3
test
cmp
jne
adc
arpl
leave
push
adc
aad
push
sbb
or
or
mov
cmp
fsubl
xor
xchg
icebp
inc
aam
mov
adc
sbb
ljmp
pop
cmp
pop
add
sbb
sti
mov
pop
xor
inc
add
push
xor
dec
femms
jecxz
add
mov
inc
inc
pop
pusha
push
jp
pop
sub
cmp
sub
sub
in
mov
inc
push
adcl
or
jg
adc
dec
roll
xor
push
sbb
xor
sub
sbb
adc
push
xchg
pop
adc
push
pop
ds
xchg
das
sahf
and
and
inc
imul
inc
push
mov
inc
cmp
aas
inc
adc
rorb
dec
fmuls
jg
pop
adc
dec
pop
cmp
dec
sbb
mov
or
test
lods
es
sub
arpl
xor
insl
sbb
call
jne
mov
xor
sti
add
les
addb
xor
insb
cmp
and
or
adc
int3
push
and
mov
and
lock
sbb
lret
adc
or
and
sbb
pop
lods
inc
mov
mov
hlt
pop
jnp
cmp
mov
jg
sub
add
xor
cmp
and
cmp
sub
cs
add
cmc
pop
in
or
cmpsl
shll
push
pop
pop
mov
mov
xchg
sbb
cs
test
inc
xor
lock
pop
dec
sub
data16
cwtl
es
sub
and
lret
sub
xor
add
sub
adc
push
dec
js
sbb
ds
sbb
cmp
inc
rcrl
mov
sbb
test
dec
shll
pop
cmp
adc
test
cmp
mov
cmp
ss
es
jp
mov
lcall
or
xor
rcrl
scas
rcrb
cmpl
pop
cltd
sbb
fdivl
adc
fimuls
jae
jbe
jne
ja
lods
lahf
push
cmp
push
insl
adc
pop
sub
jle
adc
sbb
sub
hlt
adc
pop
cmp
add
sbb
xchg
mov
jo
sbb
sbb
sbb
xchg
pop
xchg
mov
xchg
lcall
mov
jge,pn
sbb
arpl
cwtl
in
adc
push
sbb
sbb
into
adc
iret
sbb
pop
ret
jae
mov
inc
pop
cmp
push
js
or
mov
sbb
pop
xchg
jo
push
cmp
mov
sbb
inc
adc
dec
pop
adc
push
pop
xchg
push
or
cmp
mov
adc
and
xchg
and
or
sub
or
xor
xchg
xor
push
cmp
or
pop
add
xchg
add
add
add
adc
sbb
add
cwtl
pop
cmp
in
pop
cmp
xchg
cmp
lock
pop
clc
mov
cmp
pop
cmp
enter
aam
xor
rcrb
fcoml
aaa
pop
movsb
mov
cmp
xor
test
sub
sub
mov
sub
das
pop
test
sub
jp
jns
jle
jl
jb
in
ja
je
push
push
insb
arpl
clc
or
adc
pop
in
or
adc
sbb
sub
imul
jo
ja
imul
cmp
add
add
sub
das
sub
xor
cmp
xor
aaa
sub
sub
pop
jl
jb
jno
jp
jle
jnp
jg
in
add
add
push
add
cmp
dec
cmpsb
leave
sbb
add
xchg
or
push
add
sti
sbb
sbb
shrl
add
push
add
or
push
fs
pop
lock
jmp
adc
mov
sbb
sbb
adc
xor
arpl
mov
adc
mov
sbb
ljmp
xchg
sub
cmp
adc
adc
sub
sbb
or
pop
add
add
fs
sbb
or
cmp
sbb
or
jo
adc
add
nop
xor
adc
or
cmp
add
xor
sbb
or
fs
cmp
cmp
push
xor
cmp
xchg
add
pop
dec
sbb
add
dec
cmp
pop
cmp
insb
cmp
mov
add
cmp
aas
cvtps2pi
lock
xor
and
outsb
or
sbb
adc
sub
cmp
and
push
sbb
cmp
pop
jecxz
add
sahf
pop
aaa
fsubrl
inc
das
xor
test
xor
ljmp
and
ss
adc
sbb
add
dec
add
sbb
xchg
adc
fs
pop
sub
xor
dec
fs
xor
lret
das
mov
xor
add
sbb
clc
cmp
sub
adc
mov
sub
bndldx
push
sbb
and
aaa
mov
xchg
es
and
mov
push
fs
pop
lock
push
sbb
pop
adc
add
sbb
adc
add
sbb
stos
add
mov
pop
lods
adc
sbb
sbb
or
cmp
add
push
fs
add
cmp
pop
push
fs
push
fs
push
push
add
sbb
push
rorb
cmp
pop
lahf
js
or
stos
sub
xor
cmp
jo
xor
sbb
dec
add
sub
lahf
cvtpi2ps
cmp
fsts
cmp
cld
dec
fs
or
lahf
pop
dec
xor
cmp
dec
rorb
dec
adc
or
inc
aad
add
add
cmp
add
pop
push
sbb
sub
adc
inc
repz
sbb
adc
sbb
xor
add
bndldx
pop
jp
mov
and
sub
das
insb
sbb
fs
lods
jle
aaa
sbb
xor
imul
sbb
jae
add
sbb
sbb
sbb
xchg
xor
adc
sbb
ja
pusha
sbb
fwait
jbe
sub
sbb
loop
xchg
je
sbb
imul
push
ljmp
push
fsubrs
insb
stos
arpl
sbb
jl
sbb
sarb
pop
ss
inc
sub
repnz
pusha
add
xor
clc
xor
addr16
fs
dec
sub
sub
nop
pop
cmp
fwait
loopne
loope
add
cltd
mov
push
add
inc
or
cwtl
dec
fs
dec
add
cmp
pop
lahf
fs
rolb
add
popf
xor
push
sbb
xchg
pop
sub
add
xchg
cmp
fs
push
xchg
adc
sbb
or
adc
and
adc
mov
add
mov
xchg
xchg
add
xchg
adc
sbb
adc
xchg
pop
cs
sub
xor
pop
aas
stos
xor
add
xor
pop
cmp
mov
clc
sub
mov
stc
sbbl
ljmp
adc
sbb
andl
sbb
add
sub
xchg
test
push
dec
add
lahf
mov
pop
add
sbb
add
and
sbb
mov
pop
mov
adc
sbb
cmp
cmp
mov
mov
sbb
shrb
cmp
mov
stos
xchg
ljmp
add
or
add
sub
add
imul
aas
adc
fs
xor
xchg
cmp
sbb
fimuls
adc
pop
xor
xor
clc
dec
das
sbb
cmp
jp
cmp
pop
add
pusha
or
jle
sub
sbb
jl
or
xchg
add
add
cs
xor
sbb
xor
xor
sbb
jg
or
jns
movsb
cli
fistpl
sub
fisubl
fsubs
adc
fstl
push
sbb
fdivrl
shll
sbb
shll
push
xor
sbb
sub
aaa
adc
aam
xor
sbb
xor
xor
fcmove
mov
and
add
pop
sub
sbb
cmp
xchg
xchg
sub
sbb
pop
xor
push
sbb
sbb
add
push
pop
add
cmp
ljmp
cmp
xchg
sub
adc
fs
das
cmp
cmp
add
sbb
add
cmp
sub
test
sbb
sbb
sbb
add
lds
and
les
dec
add
xchg
cli
ltr
cmp
stc
fs
add
pushl
sti
fs
push
std
stos
cld
mov
sbb
inc
cmp
out
adc
sub
jl
divl
testb
cmc
cmp
add
xor
or
pop
pop
xor
sahf
pop
aaa
cmp
add
and
pop
sbb
cs
out
fsubrs
fs
stos
pop
and
push
sbb
sbb
das
sub
pop
adc
xor
fs
loopne
mov
xchg
add
sbbb
jecxz
xchg
add
aam
fs
cmp
add
cs
jne
xor
sbb
stos
xor
cmp
pop
pop
cmp
xor
fcoms
sub
pop
and
out
sbb
in
or
cmp
bound
pop
or
jbe
adc
sbb
add
pop
sbb
xor
sbb
and
pop
adc
push
data16
sbb
or
xchg
push
sbb
adc
adc
adc
sub
out
jl
adc
aas
pop
sbb
mov
jl
add
inc
mov
cld
adc
xor
cs
pop
adc
mov
or
xlat
or
push
sbb
sub
cmp
push
xor
sbb
xor
sub
jl
pop
sbb
or
or
xor
inc
xor
sub
dec
sub
sbb
cmp
sbb
add
sbb
or
js
popa
cmp
je
fwait
push
mov
mov
sbb
mov
sub
outsb
pop
cmp
lahf
fidivrl
fwait
mov
stos
sub
out
xor
xchg
cmp
aas
inc
sub
xor
push
ds
mov
push
sbbl
mov
in
or
cmp
pop
xor
cmp
add
xor
push
sbb
cmp
sub
test
add
add
add
pop
xor
sbb
pop
sub
xor
add
sbb
or
js
xor
sub
js
cmp
ret
cs
mov
sbb
aaa
xchg
sbb
sub
sbb
pop
loopne
repz
adc
stos
sbb
cmpsb
add
sbb
sub
or
sub
and
pop
es
adc
sbbb
and
sub
das
jnp
fwait
pop
sbb
sahf
pop
pop
enter
fistps
adc
mov
sbb
pop
sbb
sbb
xor
das
xchg
pop
pop
cli
mov
lahf
je
sbb
in
add
xor
cmp
out
cli
out
call
add
pop
sbb
adc
cmp
jp
or
pop
aaa
xor
add
push
subl
cs
lcall
ret
or
ljmp
int
nop
pop
pop
cmp
sbb
sub
sub
mov
add
aaa
add
adc
insb
push
sub
add
pop
xor
lret
push
mov
pop
or
cmp
and
push
fwait
push
cvtps2pi
add
and
in
fisubl
pop
sahf
insb
jne
cwtl
into
push
out
mov
xchg
push
sahf
jne
lods
leave
mov
add
and
xor
sbb
adc
in
js
sahf
adc
xchg
fs
push
fwait
and
or
mov
adc
insb
adc
or
pop
cmp
jecxz
lcall
xor
sub
or
adc
adc
sbb
mov
add
subb
sbb
sar
sub
sub
add
pop
pop
sub
cmp
dec
sbb
aaa
mov
xor
test
xchg
in
sub
add
pop
inc
ljmp
fsubr
xor
pop
or
adc
add
adc
ret
cwtl
mov
adc
pop
jb
inc
sub
dec
fwait
push
aaa
sbb
push
add
sub
or
sub
mov
int3
jns
in
getsec
mov
push
push
sbb
movsb
in
cmp
or
nop
sbb
mov
sub
cld
stos
inc
imull
push
jbe
add
or
add
or
ficoml
adc
or
lods
push
cmp
cmp
sahf
add
les
push
or
sbb
xor
cld
mov
sub
dec
sub
dec
lods
out
push
sub
pusha
repnz
sbb
cld
adc
cmp
xchg
sbb
cmp
push
xor
add
sbb
pop
cli
adc
xor
adc
mov
scas
sbb
sbb
mov
pop
dec
inc
cs
cwtl
aas
sbb
or
dec
fwait
mov
adc
sbb
or
sbb
cmp
xor
aas
loopne
pop
add
jecxz
and
add
inc
mov
adc
xchg
sbb
sub
pop
dec
pop
stos
mov
out
or
push
hlt
sub
push
xchg
and
add
push
sbb
push
push
sub
lahf
ret
cld
inc
mov
pusha
inc
inc
inc
jl
or
adc
lods
sbb
cmp
sub
or
dec
xchg
bound
sub
sbb
adc
or
pop
cmp
add
xor
pop
or
inc
and
or
sub
sub
sbb
xlat
sub
push
add
or
adc
add
mov
sub
pop
test
aas
and
js
test
add
push
sar
test
sub
sbb
lcall
aaa
sub
sub
stos
hlt
and
adc
jl
enter
push
inc
pop
test
pavgb
jl
das
or
mov
jae
jg
cwtl
mov
sub
stos
push
cmp
mov
out
sbb
add
cmp
pop
js
in
add
repnz
xor
pop
or
push
inc
xchg
sbb
inc
jle
movsb
cvttps2pi
add
je
xor
pop
loop
pop
loop
mov
into
mov
or
enter
or
sbb
sbb
add
or
enter
jl
push
sarb
dec
das
mov
mov
sub
stos
push
popf
xor
xchg
lret
fwait
pop
add
ljmp
push
add
sbb
jbe
jne
or
xor
add
ss
aam
adc
mov
pop
adc
sbb
mov
sub
pop
mov
xchg
ret
idivl
add
rcrb
xor
mov
sbb
je
incb
or
jne
movl
fld
or
adc
fists
sbb
adc
cli
push
xchg
cmp
xchg
mov
imul
ret
rorl
jbe
movsb
or
outsl
push
xor
xchg
mov
bswap
enter
add
int3
mov
sbb
adc
mov
ss
add
js
push
xor
pop
sbb
es
rclb
clc
push
add
cmp
or
stos
mov
scas
or
xor
jo
xor
or
jl
add
sbb
pushf
mov
fsubrl
insb
fwait
push
dec
bound
inc
push
and
adc
ss
push
popa
mov
test
mov
out
enter
jmp
mov
fwait
loopne
mov
sbb
sbb
icebp
mov
pop
lcall
stos
loopne
sbb
insb
xchg
sarb
scas
cmp
mov
cmp
push
push
fs
inc
lgdtl
sub
fsubr
inc
adc
lcall
repz
sbb
stos
adc
dec
push
inc
adc
pop
cmp
dec
lret
fdivrl
enter
test
int3
repz
dec
mov
xor
inc
pop
sub
rcrb
sbb
lods
xchg
push
cwtl
xor
ret
add
cli
clc
pop
outsb
sub
add
or
loopne
inc
add
insb
enter
mov
dec
ret
fwait
or
add
adc
je
mov
adc
pop
sub
or
cwtl
sbb
sbb
in
xor
test
cmc
inc
mov
mov
adc
pop
cmp
push
cmp
pushf
clc
mov
dec
cmp
or
in
scas
push
das
ret
adc
inc
adc
xor
mov
push
clc
jb
mov
cmp
pop
mov
pop
adc
ret
call
xchg
fwait
sbb
mov
jne
je
pop
cmp
pop
adc
fidivs
and
cmp
dec
nop
adc
cmp
or
add
adc
xor
cmp
mov
scas
or
or
pusha
fwait
out
das
push
cwtl
fcoml
mov
repnz
push
pop
cmp
add
adc
add
xor
mov
xor
xchg
lahf
lods
jb
mov
lcall
lods
mov
aas
sbb
mov
cli
push
rclb
lahf
loop
iret
add
cltd
int3
push
and
jp
adc
add
aaa
inc
sbbb
jp
cli
mov
shr
fiaddl
scas
jnp
sub
jp
inc
mov
push
jp
jp
pop
and
xor
sbb
jl
lcall
pop
dec
iret
dec
push
rclb
mov
push
add
aas
adc
mov
dec
adc
jb
jp
xchg
mov
pop
sbb
mov
dec
imul
pop
mov
call
rcl
dec
popl
fwait
out
mov
jl
je
or
mov
call
fwait
repnz
das
adc
filds
repnz
cmp
cmp
pop
mov
mov
rorb
mov
and
add
mov
aaa
sbbl
mov
inc
jl
lret
pop
xor
add
lahf
pusha
sahf
ds
mov
jb
adc
xor
mov
mov
xor
cmp
fldenv
sub
push
insb
pop
sub
push
push
pop
fcomps
jnp
daa
push
pop
cwtl
dec
fmull
mov
cmp
fidivs
sub
mov
or
lcall
xchg
sahf
push
lret
and
subb
pop
lcall
adc
sub
dec
orb
adc
das
out
aas
in
clc
fs
adc
or
sbb
into
xchg
sub
add
or
cmp
and
insb
inc
ret
mov
hlt
sahf
adc
adc
fidivl
adc
and
fimuls
jl
test
push
cmp
xchg
jp
inc
jb
cld
or
dec
bound
mov
ret
inc
push
sbb
jmp
push
movsl
add
add
xorl
adc
sub
xor
cltd
clc
xor
xor
or
mov
test
and
mov
sbb
enter
cwtl
sub
dec
mov
add
or
cmpsb
or
push
sub
mov
int3
js
in
test
ss
push
enter
insb
mov
xchg
xchg
xchg
sbb
mov
push
test
inc
inc
push
pop
or
mov
sbb
cwtl
add
sbb
sbb
push
or
jle
addr16
add
loopne
cmp
adc
hlt
out
cmp
mov
jmp
pop
xorb
jbe
sbb
in
push
shlb
or
sbb
push
mov
rclb
inc
sub
push
ds
jmp
sub
mov
add
adc
cwtl
mov
xchg
mov
fisubl
push
sbb
mov
jl
sbb
test
and
sub
sub
jae
xchg
jle
pop
push
mov
cld
mov
and
inc
fnstcw
push
mov
js
lcall
pusha
scas
nop
or
cltd
cmpsb
adc
in
xor
sub
stos
jae
adc
repz
mov
dec
loope
or
js
ret
sbb
or
mov
or
push
mov
test
pop
pop
cli
cmp
js
cmp
mov
cvtpi2ps
push
jle
clc
mov
fwait
or
das
mov
dec
into
inc
outsb
add
aas
sub
jecxz
pop
mov
inc
xor
push
ds
sbb
mov
lcall
cmp
sub
pop
mov
jmp
sbb
or
es
ret
aam
enter
xor
aas
adc
pop
push
das
adc
or
mov
adc
movsb
jae
mov
fcompl
add
add
add
xchg
pop
sub
pop
outsb
cmc
dec
test
cmp
pop
ret
lahf
fdiv
push
sub
push
insb
out
loop
mov
mov
sbb
or
sahf
pushf
pop
jbe
jo
push
scas
or
or
adc
in
pusha
or
or
fwait
or
jb
add
adc
cmp
cld
or
or
sbb
mov
jb
into
repnz
sbb
fwait
jnp
pop
mov
mov
cmp
in
sub
or
push
lar
je
mov
sbb
xor
mov
mov
or
xor
dec
mov
das
dec
xor
cmp
xchg
inc
mov
mov
dec
ds
scas
cmpsb
aas
pop
adc
push
adc
add
adc
mov
ds
decb
cli
push
lcall
in
or
sahf
ds
or
and
fwait
mov
push
pop
xor
cmp
inc
or
adc
mov
pop
xchg
mov
xchg
push
adc
jp
jp
jp
push
push
insb
test
lock
cmp
jnp
repz
ret
pop
test
jl
insb
call
mov
fwait
nop
add
or
xchg
push
sbb
sub
push
xor
movsb
push
xor
push
add
jg
lea
add
add
push
cmp
fimull
insb
lock
adc
mov
jp
adc
jnp
mov
shrb
mov
push
adc
mov
mov
rorb
add
les
hlt
or
xor
stos
xchg
iret
xor
push
and
or
pop
cmpsb
js
xor
inc
or
inc
or
xchg
push
dec
cmp
xchg
outsl
xchg
pop
or
adc
xchg
jb
or
add
adc
adc
rorb
push
dec
or
pop
cli
push
sbb
fistl
jno
ficoms
sbb
mov
pushf
jns
pop
push
rcrb
mov
aam
rolb
loop
sbb
jnp
xor
or
jle
pop
jae
lock
sahf
fisubrl
push
push
or
cmp
adc
mov
pop
add
sti
mov
mov
fidivrl
cwtl
das
or
pop
sbb
cmp
int
mov
sub
pop
push
pushf
pop
adc
sub
pusha
out
inc
push
push
push
movsb
fsubs
sub
adc
pusha
mov
or
add
mov
rcll
push
cmp
sbb
stos
sahf
cs
and
add
das
pop
push
or
xorb
sbb
adc
sbb
push
push
enter
adc
fistpl
das
mov
fidivrs
pop
mov
fucom
orl
xchg
or
inc
add
adcb
lock
xor
testb
cli
pop
shrl
jnp
adc
push
add
jb
pop
mov
dec
adc
xchg
call
adcb
xchg
scas
dec
push
sbb
cmp
pop
or
cmp
loopne
and
or
loop
and
cmp
jb
pop
fcompl
fs
pop
jo
push
lea
dec
xchg
cli
jle
cwtl
lds
push
mov
push
adc
loopne
fnstenv
or
push
add
pop
cwtl
push
ficoml
or
orb
out
jl
int3
sub
add
xchg
inc
or
jg
sub
pop
rcrl
in
lcall
pop
hlt
cmpsl
shlb
pop
lcall
dec
xor
out
mov
mov
mov
cmp
in
push
mov
push
mov
pop
add
xor
pop
fs
dec
sbbl
push
pop
sar
push
shlb
call
jg
jnp
pop
clc
ljmp
jo
cmp
repnz
cmp
cmp
hlt
lods
push
xchg
mov
mov
pop
mov
sub
mov
cmp
mov
push
add
push
or
mov
cltd
mov
inc
xor
fwait
aam
lret
mov
pop
add
adc
cmp
jl
into
cmp
xchg
fs
fdivrl
mov
enter
stos
push
sbb
push
mov
jnp
cmp
mov
cmp
add
test
push
aam
or
fwait
push
enter
xchg
add
cmp
sub
pusha
mov
mov
mov
rcl
sbb
enter
adc
jo
sarb
and
fisttpl
cmp
aad
mov
out
adc
lods
das
aam
insb
or
or
iret
mov
add
stos
pop
push
pushf
inc
das
leave
sbb
mov
adc
fimull
jnp
imul
mov
adcb
jno
out
rolb
add
xchg
loop
cltd
mov
or
dec
fimull
into
mov
aas
jmp
xchg
cmp
push
add
data16
xchg
push
out
rcrb
ja
mov
dec
hlt
stos
mov
imul
adc
mov
outsl
negb
cmpsb
mov
add
and
xor
fcomps
ss
scas
mulb
or
add
jo
lock
add
pop
sahf
xor
pop
mov
pop
jle
cmp
mov
push
push
sub
pop
xor
adc
or
pop
push
mov
pop
sbb
add
testl
cmp
sub
enter
rolb
clc
cs
adc
sbb
dec
mov
je
mov
aas
fbld
cli
jae
pop
test
xor
jne
int3
mov
or
pop
aam
adc
pop
pop
enter
pop
lret
add
and
outsb
or
push
add
orb
add
xor
and
dec
mov
jecxz
mov
mov
das
iret
je
mov
lock
outsb
dec
and
and
push
xor
xchg
cs
cwtl
xor
xchg
pop
nop
ret
iret
xchg
dec
lret
mov
sbb
cmp
mov
aas
mov
outsb
cmp
add
pop
js
mov
xchg
mov
pusha
das
push
xor
jmp
fwait
scas
and
jo
fsubp
xor
cmp
sbb
mov
sub
rcrb
sbb
ljmp
inc
sbb
xor
leave
jl
inc
pop
push
int3
fcomps
psubb
inc
pop
scas
icebp
sub
in
or
adc
mov
xchg
int3
mov
jo
stos
mov
sub
lahf
je
adc
adc
lret
sub
shrb
mov
and
or
test
rol
mov
adc
push
xor
xor
xchg
mov
mov
lret
mov
pop
pop
sbb
mov
and
xor
popl
xor
stos
jo
adc
adc
sbb
cld
cmp
adc
mov
push
cld
rcrl
fsts
xchg
insb
lcall
mov
jo
sbb
cwtl
sub
ljmp
adc
sub
or
inc
add
pushf
and
or
dec
xchg
insb
repz
xchg
push
adc
sbb
pop
shrb
sbb
ss
xchg
sbb
test
push
repz
mov
pop
insb
imul
adc
pusha
iret
lret
ljmp
push
lahf
jbe
push
pop
insb
sbb
adc
cmp
mov
push
faddl
test
xchg
cmp
mov
pusha
ret
jno
xor
add
mov
int
xor
sub
add
or
add
mov
adc
mov
mov
jmp
push
push
or
pop
push
cmp
mov
ret
pop
adc
fcompl
call
and
jb
sbb
or
mov
scas
sub
or
push
lods
pop
dec
ja
sbb
scas
adc
add
jo
or
cmp
test
sbb
push
repz
das
push
mov
sar
sub
dec
mov
pop
cmp
lcall
adc
push
add
adc
or
sub
cs
sarb
pushf
cmp
or
push
inc
jbe
xchg
divl
sbb
out
jecxz
sbb
aad
push
dec
or
add
cmp
divb
pop
aas
sbb
shll
inc
add
sub
das
add
ret
jp
iret
sahf
sub
pop
scas
fstps
aas
or
pop
sub
pop
cmp
jbe
test
jmp
pop
mov
mov
adc
cs
push
cmp
ficoml
sub
cmp
jp
cmp
sub
movl
mov
push
je
lcall
push
cmp
das
sbb
add
or
adc
add
aas
lcall
pop
xor
js
out
add
loopne
cwtl
cwtl
mov
pop
test
das
xchg
cli
stc
pop
incl
lea
adc
add
push
pop
les
inc
sti
aam
push
fsubl
adc
dec
pop
sbbb
push
mov
pop
cmp
add
push
xor
adc
jb
mov
str
insb
xchg
ss
or
pop
mov
mov
fwait
xor
aas
xchg
xchg
pop
add
add
add
test
out
add
add
cmp
push
add
push
pop
cmp
add
insl
popf
call
push
adc
push
das
or
jle
pop
cmp
jl
pop
mov
push
jae
adc
sahf
mov
sub
pop
add
fcom
push
push
mov
push
and
push
sbb
add
pop
loopne
scas
js
stos
pushf
sbb
cmc
adc
cmp
or
enter
xor
cmp
pop
or
add
stos
adc
icebp
call
add
xor
xchg
xor
sub
leave
pop
cwtl
dec
mov
adc
adc
push
pop
cmp
fdivs
add
jno
hlt
push
and
pop
add
adc
and
outsl
pushf
mov
mov
mov
cmp
pop
pusha
pop
jbe
mov
cli
lsl
pop
cmp
adc
xor
xor
or
out
loope
ficomps
decl
adc
pop
sbb
sub
pop
das
out
jnp
adc
add
pop
mov
cwtl
cs
mov
inc
cmp
mov
les
and
or
stos
or
push
pop
cmp
sub
pop
das
sub
lahf
push
xor
or
mov
and
dec
xor
push
es
cmp
adc
push
je
cwtl
adc
push
add
cmp
cmp
pop
dec
les
cmp
sbb
sysexit
cs
addb
lahf
sarb
inc
push
cmp
test
push
cmp
xor
adc
popa
sahf
lock
lret
xchg
push
pop
fidivs
iret
mov
test
xor
push
sbb
xchg
aas
je
push
cmp
or
add
das
xchg
cmp
aas
or
push
add
ret
sbb
dec
push
mov
xor
js
loopne
idivl
es
enter
mov
test
dec
das
test
or
push
xchg
or
inc
jmp
mov
xorb
cmp
dec
cmp
push
adc
xchg
xchg
cmp
push
pop
sub
adc
or
lcall
jl
out
aam
adc
and
push
sbb
push
inc
enter
out
jp
push
xor
out
sub
jp
sbb
shrl
enter
test
mov
clc
test
adc
dec
mov
xor
push
pusha
xchg
pop
cmpsb
or
mov
jle
pop
push
xchg
js
faddl
cmp
cmp
or
fists
rcll
sbb
cmp
pop
jnp
jp
push
adc
add
xor
cmpsb
enter
loop
lock
sub
pop
or
xor
jbe
adc
cmp
test
push
ds
dec
sub
jb
mov
mov
rcrl
sbb
sbb
bound
fs
rcr
enter
mov
sub
daa
push
lret
aas
or
push
daa
and
pop
out
pop
cmp
cmp
jg
xor
nop
cli
push
inc
xor
pop
into
mov
jp
sbb
dec
repnz
hlt
mov
cmp
xchg
in
jo
push
xor
stos
pop
cmpb
sbb
dec
dec
nop
mov
push
sbb
xor
mov
aaa
nop
push
sub
cwtl
lods
cmp
add
mov
adc
cmp
test
dec
jo
inc
push
adc
mov
push
cmp
or
bound
adc
add
push
cs
daa
sbb
enter
mov
push
sub
sbb
into
aaa
das
mov
push
mov
mov
dec
or
ljmp
cmp
nop
inc
mov
sub
lahf
push
bound
dec
cld
fcoml
mov
insb
sbb
ss
xchg
jp
pushf
cmp
push
xor
lea
inc
sbb
das
nop
ljmp
test
jno
adc
jnp
pop
mov
loopne
pusha
sahf
inc
fcoml
mov
pop
jne
movl
mov
jg
sbb
xchg
sub
adc
dec
rcll
int
jge
enter
fidivrl
insl
sahf
mov
push
or
fwait
sub
pop
outsl
scas
sub
inc
sub
dec
arpl
imul
imul
pop
jl
xchg
push
jnp
adc
push
cmp
je
jp
imul
jg
lds
sbb
cwtl
push
fs
add
les
aad
aam
mov
in
cwtl
add
lods
sub
out
push
xor
pusha
loopne
adc
sbb
out
cmp
inc
sbb
les
rep
test
adc
adc
adc
or
mov
push
mull
test
orb
sub
mov
mov
aam
pop
clc
pop
adc
dec
dec
lea
inc
sti
negl
or
mov
dec
or
dec
and
push
push
jl
pop
pop
inc
decb
lahf
cmp
dec
or
xor
dec
cmpsb
add
push
jb
outsb
ljmp
popf
jl
push
push
inc
adc
push
xchg
pop
or
sub
xor
cmp
add
or
xchg
sbb
sbb
in
add
hlt
cmp
pop
int3
xchg
aam
fdivrl
movsb
pop
lods
mov
xchg
mov
xchg
cmp
cmp
insb
xchg
push
pop
jl
inc
cmp
pop
xchg
and
sub
xor
cmp
fmuls
xchg
sbb
loopne
sbb
cmp
pop
int3
mov
cmp
or
jo
inc
pop
push
and
adc
push
sbb
mov
cmp
pop
mov
mov
push
pop
adc
pop
xchg
pop
or
pop
pop
pop
mov
pop
push
push
xchg
push
or
push
pop
push
mov
pop
dec
dec
xchg
dec
or
dec
pop
dec
mov
inc
inc
jbe
imul
imul
insl
andb
jae
mov
imul
pop
imul
insl
pop
insb
mov
faddl
pop
cli
xor
inc
cmp
or
xor
or
xor
inc
cmp
or
sbb
adc
cmp
or
push
jbe
push
pop
push
jl
jle
mov
sub
sti
inc
adc
xchg
mov
and
sub
das
fsubrl
jecxz
add
push
mov
lahf
daa
test
push
mov
mov
shlb
testb
in
adc
fiaddl
xchg
push
adc
adc
sub
and
das
cmp
mov
fsubrl
divl
dec
pop
pop
into
pop
pop
ficomps
pop
scas
pop
mov
mov
inc
sub
and
xchg
pop
dec
cmp
dec
fmull
dec
push
and
xchg
pop
push
cmp
push
fcoml
push
push
and
xchg
pop
pop
cmp
pop
lds
pop
fcompl
mov
mov
into
lock
jae
push
push
pop
cmp
pop
pop
push
in
pop
mov
pop
dec
pop
enter
xor
arpl
and
pop
sahf
idivl
xor
push
ret
ss
cwtl
ret
ss
pop
into
lods
iret
icebp
adc
jnp
imul
jbe
sub
pop
jmp
out
inc
mov
jmp
and
jle
xor
les
push
ja
or
adc
cmp
mov
pushf
xchg
push
addr16
push
jae
pop
add
jbe
sahf
scas
ret
dec
push
test
push
in
sbb
adc
out
xchg
out
in
xor
loopne
lock
loope
sarb
pop
fsub
xchg
lods
or
cmp
out
pop
pusha
out
xchg
js
call
mov
cmp
in
jmp
add
sbb
cmc
add
xor
fs
testl
inc
mov
cmp
xor
repz
xor
cld
cmp
pop
je
xchg
inc
or
cmp
mov
cli
pop
xor
xchg
sbb
les
pushf
xor
lds
rcrb
mov
or
mov
cmp
ret
ret
or
cmp
pop
sbb
cmp
pop
movsb
iret
xchg
mov
pop
leave
mov
pop
je
xchg
inc
or
cmp
aad
sub
pop
add
xchg
sbb
sarb
call
fmull
rcll
fstpl
fidivrs
push
pop
fildll
xchg
fmuls
cmp
flds
mov
sub
or
cmp
adcl
movsb
or
sbb
mov
cmp
mov
mov
mov
lods
xchg
push
or
pushf
hlt
aas
or
aam
test
pop
push
pop
mov
xchg
insl
cld
mov
fcoms
fld
push
dec
insb
shlb
pop
or
stos
hlt
loopne
cmc
jae
or
hlt
test
mov
xor
push
shll
push
lods
fstp
jmp
call
and
test
nop
test
test
movsl
mov
mov
out
xor
sbb
out
into
shll
push
fs
test
cmc
push
cmpsl
mov
push
mov
sar
cmp
loop
clc
add
cmp
aad
push
pop
lods
cmpsl
sub
cmp
fcmovnbe
test
stos
loope
mov
sbb
stos
repz
lret
jnp
movsl
leave
sahf
sbb
dec
out
dec
int
into
scas
scas
faddl
adc
adc
popa
sarb
stos
mov
push
sub
add
mov
push
fs
cld
xor
fldcw
add
xchg
xchg
ficoms
cwtl
xchg
cmp
sbb
cmp
or
fdivrl
enter
xchg
pop
mov
mov
adc
and
lds
inc
mov
mov
mov
inc
pop
aad
xor
lret
xchg
int
mov
out
stos
or
sub
aam
out
test
fstpl
add
dec
push
negl
bound
add
push
dec
mov
sbb
xor
pop
cwtl
dec
lret
pop
mov
or
pop
pop
xchg
or
js
cmp
or
mov
jb
dec
sub
push
movsl
iret
mov
push
je
pop
call
clc
add
cmpsb
fs
or
push
xor
inc
xor
aam
or
test
jp
dec
cmp
shlb
cwtl
and
mov
stos
mov
add
test
mov
pop
cwtl
cs
push
ds
or
xchg
add
lods
ffreep
lahf
sub
mov
or
push
aam
add
and
xchg
push
movsb
mov
mov
sbbl
mov
pop
adc
push
mov
pop
orb
cmpsl
stos
push
and
or
xchg
int
xor
stos
hlt
loope
mov
add
mov
mov
cmpsl
fldl
lahf
sbb
mov
clc
shl
lea
mov
mov
push
add
repnz
lods
lds
or
shl
mov
xor
test
add
into
xor
push
sbb
cmpsb
push
into
int3
lods
jmp
test
adc
cmp
adc
add
clc
adc
clc
mov
mov
mov
out
sub
xchg
insb
clc
ret
push
imul
inc
fldl
xor
mov
ljmp
aam
xchg
mov
xchg
lock
sbb
xchg
dec
adc
stos
stos
loop
rorl
xlat
mov
stos
adc
iret
aad
cmp
test
mov
inc
mov
loop
enter
xor
mov
add
lahf
movsb
add
cmp
inc
stos
pop
push
mov
add
sub
xor
loopne
add
mov
pushf
pop
cli
jne
jo
outsl
push
jae
jno
pop
daa
mov
iret
shll
je
cmp
jmp
cmp
mov
add
pop
jnp
dec
sbb
mov
in
mov
aas
aas
cwtl
mov
leave
mov
cli
out
mov
mov
loope
or
cmp
cmp
add
imul
push
adc
rcl
stos
lds
int
sbb
leave
lret
fiaddl
popa
fldenv
pop
sub
jae
sbb
hlt
lcall
aad
pop
cmp
mov
repz
mov
adc
sbb
fisubs
adc
lret
inc
or
js
cmpsb
and
inc
sbb
sbb
pop
inc
inc
xchg
inc
or
inc
pop
jnp
jp
sbb
xor
or
adc
or
ss
pop
cld
les
cmp
xor
lret
sbb
negl
out
ficompl
mov
pop
or
in
pop
mov
pop
adc
call
shr
xor
adc
push
mov
iret
dec
out
dec
jl
push
mov
adc
movsb
test
imul
inc
adc
or
lods
or
add
dec
fmull
xchg
sbb
fsubs
sbb
inc
or
sbb
or
sbb
sbb
or
cmp
in
je
fwait
jl
in
or
adc
sbb
cmp
or
and
adc
push
dec
xor
jne
adc
outsb
dec
cmp
in
mov
sub
mov
push
sbb
lock
or
xchg
nop
stos
in
xor
pushf
fcoml
nop
test
adc
pop
test
xor
in
push
int3
sbb
rorb
aam
stos
xor
ds
sbb
pop
shlb
lret
fwait
test
fstl
movsb
scas
mov
shlb
int
aad
push
cmp
fadd
mov
add
and
sub
and
pop
stos
int3
mov
adc
pop
push
inc
adc
lods
push
and
adc
lret
cwtl
push
adc
cwtl
adc
je
fmul
fcmovu
test
inc
pop
mov
and
fs
cmp
mov
fs
adc
mov
jne
outsl
xor
ja
jg
jnp
int
jns
js
adc
sbb
clc
fdivrl
mov
fcompl
push
xor
ljmp
pop
push
aad
adc
or
je
loopne
xchg
sbb
or
push
insb
rcrb
inc
and
mov
mov
sub
cmp
and
mov
or
jl
cmp
sub
mov
or
pop
cld
sub
cwtl
or
push
or
add
call
test
mov
push
jg
cmp
inc
xchg
dec
add
fsubl
and
idiv
sub
icebp
push
cmp
pusha
adc
cwtl
push
sub
das
fwait
cld
mov
fsubrl
or
adc
fdivrl
add
add
or
or
mov
nop
cmp
test
sbb
inc
add
dec
xor
xlat
push
adc
in
repnz
data16
repnz
mov
and
fsubrp
mov
sar
inc
sbb
pop
push
jnp
inc
jmp
or
inc
sub
int
shlb
dec
and
push
fists
dec
jg
dec
mov
or
fcomp
xlat
stos
dec
jl
int
in
or
jbe
and
push
xorb
mov
cmp
aad
shlb
std
mov
test
mov
scas
int3
into
lods
test
push
jle
mov
shr
in
enter
loope
mov
iret
mov
push
movsb
out
ror
aam
stos
mov
adc
mov
mov
sbb
jo
jbe
shlb
fs
ss
lods
jmp
pop
leave
mov
cmc
hlt
aam
dec
mov
add
push
jo
hlt
dec
adc
or
mov
cmpsl
jo
adc
scas
jns
push
jmp
push
pop
stos
ljmp
cmp
or
punpckldq
ja
jo
sbb
push
jne
push
push
int
into
push
loopne
pop
jg
ficoml
xchg
fxch
ss
adc
outsb
lcall
mov
mov
jae
mov
scas
fcompl
pop
or
jne
popf
mov
sub
jmp
mov
mov
mov
sub
xor
pop
into
mov
xor
and
test
into
hlt
mov
mov
leave
push
push
lds
ret
mov
dec
mov
mov
out
jg
mov
mov
in
jle
mov
xlat
sarl
lods
ret
test
nop
or
fldt
cwtl
push
jp
dec
mov
out
shl
cmp
hlt
lea
cwtl
loop
or
idivb
cmp
fs
mov
sbbl
imul
call
sub
xchg
bound
mov
mov
scas
fxch
mov
lea
dec
fadd
lahf
xchg
adc
and
jle
xor
push
jo
add
dec
xchg
je
lcall
jbe
enter
mov
xlat
repnz
xchg
cmp
mov
loopne
mov
mov
sar
xchg
jo
dec
lcall
nop
adc
test
aam
insb
mov
cli
add
lods
mov
push
lcall
cld
sub
outsb
sti
lret
xor
js
inc
push
int
iret
loope
mov
orb
cmp
mov
scas
or
sbb
ds
pop
or
fidivs
push
sar
fnstcw
mov
or
stos
movsl
xchg
pop
out
push
mov
push
mov
cltd
stos
scas
mov
inc
movups
sbb
xor
pushf
cmp
push
dec
loop
mov
pop
loop
nop
loop
pop
add
test
pop
sub
mov
aam
and
jle
scas
push
clc
cs
mov
loop
push
dec
cli
xchg
push
dec
and
xor
mov
cmp
popf
push
or
push
mov
dec
data16
das
dec
dec
es
andb
push
lods
push
dec
or
pop
leave
incl
push
and
adc
mov
sbb
mov
sbb
enter
xor
movsl
rorb
repnz
cmp
stos
out
jmp
test
fs
bound
fdivr
or
test
push
xchg
ret
adc
xchg
sub
adc
cmp
in
cmp
push
sbb
test
xor
sub
leave
cmpsb
addl
js
and
mov
jg
jbe
pop
inc
mov
fistl
jns
jmp
in
jle
aas
add
mov
sub
pusha
push
je
jne
or
call
aas
adc
les
mov
or
push
scas
loopne
sbb
sub
sbb
sub
pop
sub
xor
pop
sbb
mov
lock
popf
mov
nop
cmpsl
pushf
call
or
in
cmp
pop
cmp
push
push
mov
or
add
fsubs
mov
test
cmp
jecxz
or
pop
idivl
pusha
pop
push
cmp
dec
pop
pop
clc
jmp
push
adc
hlt
fnstcw
loopne
js
adc
pop
fdivrs
cld
mov
imul
mov
mov
icebp
mov
fstpt
mov
xchg
pushf
push
mov
filds
dec
mov
in
push
je
cmpsb
cmp
cmp
or
ja
push
outsl
je
test
test
lcall
sbb
cli
in
pop
insb
ds
push
and
and
sti
ljmp
push
xorb
xor
adc
xchg
inc
and
mov
sysret
outsl
and
cmp
or
pop
movsl
push
testb
into
add
adc
dec
sub
ss
pop
or
enter
ss
mov
jae
inc
cltd
mov
mov
mov
es
fldt
mov
test
aad
xchg
sbb
mov
imulb
add
lcall
push
cmp
fiaddl
subl
lea
pop
lea
repz
or
sub
push
cmp
jo
push
test
loop
add
fisubl
and
sub
or
mov
je
aam
hlt
push
jg
mov
arpl
and
icebp
xchg
insb
out
pop
and
mov
and
pop
sub
dec
and
popf
aam
cmp
mov
or
in
add
or
push
xor
xor
xchg
dec
dec
bound
jl
push
rcrb
or
pop
push
jl
fdivr
dec
adc
or
jo,pn
in
lahf
dec
jg
mov
and
mov
or
mov
dec
lods
lcall
xchg
scas
or
dec
or
lock
push
jae
jo
jge
lahf
push
jp
push
pop
xor
imul
ret
cmp
jns
push
outsb
pop
inc
jge
dec
push
bound
sub
dec
gs
pop
mov
popf
push
push
arpl
cmp
mov
movsb
lods
pop
sub
push
hlt
jne
jp
pop
repnz
mov
or
lock
or
push
sbbl
ss
jnp
ja
je
je
dec
jge
xchg
mov
repz
cld
mov
dec
pop
dec
pop
push
sub
add
add
dec
push
pop
xchg
push
xchg
add
ja
adc
pop
dec
pop
addr16
xchg
sbb
stos
push
lret
xor
je
or
faddl
dec
mov
xchg
jmp
jnp
loope
mov
xchg
fsubl
dec
push
push
insb
call
jb
jbe
shll
xchg
push
push
inc
jbe
stc
and
push
ja
into
loope
sbb
shr
ljmp
int
and
add
dec
jl
jg
js
xchg
aad
iret
fmull
jbe
outsl
cmp
pusha
sahf
add
jo
fdivl
popf
les
jne
push
js
lods
pop
pushf
xor
xchg
pop
sub
xchg
std
imul
sahf
fmull
jne
push
shrl
jo
jae
cmp
leave
xor
lea
inc
inc
lret
push
pop
mov
test
add
jbe
adc
sarl
ret
mov
pop
ja
pop
pop
dec
adc
add
pop
test
jbe
pop
mov
in
ljmp
rclb
addr16
xor
adc
add
orb
mov
lahf
add
xchg
lret
push
pop
push
hlt
xchg
pop
cwtl
xorl
shr
pusha
add
imul
inc
jbe
cmp
pusha
mov
and
lret
or
pop
add
pop
arpl
jg
mov
mov
imul
xor
add
pushf
dec
xchg
push
sti
imul
pop
pop
add
jb
arpl
dec
push
mov
popa
pop
xchg
rorl
fwait
pop
sub
mov
jae
jle
or
popf
add
or
dec
jae
cmc
push
inc
or
pop
cmp
or
adc
push
testl
pop
pop
pop
outsb
mov
push
cmp
dec
inc
sbbl
sarl
push
add
mov
pop
jne
cwtl
sub
jno
or
dec
dec
popf
xor
fsubrl
add
dec
hlt
dec
mov
pop
push
inc
sub
mov
fwait
enter
mov
cmp
adc
mov
lret
test
les
and
dec
or
in
and
add
or
mov
out
sbb
insl
daa
xlat
jo
nop
xchg
mov
dec
push
cmc
and
cli
aas
cmpsb
int3
cwtl
lods
push
push
mov
sti
push
jp
mov
mov
ss
dec
in
cmpsl
jae
mov
outsl
imul
push
roll
mov
outsl
mov
imul
and
sbb
les
lods
cmp
into
inc
negl
js
or
imul
xor
fistps
test
adc
testl
or
mov
fiaddl
adc
outsb
or
in
adcb
push
sbb
sbb
and
mov
cwtl
pop
add
sbb
sbb
pop
jb
pusha
shll
mov
dec
push
sbb
mov
test
scas
js
and
cmp
jnp
cmp
pop
or
xchg
adc
sbb
or
sarb
lock
int3
xchg
rorb
fdivrl
fcomps
mov
mov
mov
mov
mov
fs
insb
push
xor
xchg
jl
inc
cmp
mov
xor
xor
cmp
sbb
rorb
pop
lcall
sub
cmp
pop
mov
js
adc
adc
or
sbb
add
and
mov
push
dec
adc
or
or
add
mov
pop
mov
dec
or
dec
sub
pusha
jo
or
ja
xchg
je
add
push
mov
xorl
test
mov
cmp
mov
mov
js
push
mov
int
cmp
sbb
or
arpl
cmp
sbb
mov
cmp
loopne
and
sub
push
add
fcoml
and
scas
lea
pop
push
cmp
mov
inc
cld
sti
inc
add
xchg
xor
adc
inc
shll
movsb
inc
and
sub
adc
data16
js
add
push
push
pop
xchg
sbb
pop
xchg
fcoml
mov
mov
mov
insb
push
les
or
add
xlat
push
cmp
jae
adc
add
adc
fcompl
sub
cmp
pop
fmull
xchg
or
cmp
mov
add
rcrl
aam
insb
or
bound
test
movsb
lods
fistl
push
sub
sbb
fs
adc
inc
sarb
imul
or
cs
adc
and
jg
je
stc
sbb
fs
ficompl
cmpsl
cmp
stc
adc
fcos
jl
movsb
movsb
pushf
das
fidivrl
push
ret
mov
xchg
or
sar
sti
sti
adc
mov
mov
lods
pop
cmp
mov
sub
sbbb
xchg
cmp
nop
cmp
pop
cwtl
mov
cmp
adc
jo
pop
pop
js
push
cmp
inc
xchg
add
dec
cmp
pop
push
mov
cmp
and
add
sub
add
or
cmp
or
xchg
push
or
adc
cmp
xchg
cmp
sbb
cmp
call
out
rorb
cmc
gs
cmpsl
cmp
adc
shlb
push
js
sbb
mov
mov
and
inc
xor
and
testb
and
mov
mov
pop
into
pop
lods
push
mov
push
cmp
inc
inc
xchg
jle
jo
push
xchg
mov
rclb
out
push
int
cmp
jp
xchg
xchg
or
mov
cmp
add
int3
pop
add
xchg
pop
or
jno
lahf
mov
into
xchg
repnz
ret
sbb
mov
jp
bound
cmp
pop
lret
adc
ret
pop
sub
dec
or
outsb
pop
mov
sbb
pop
rcll
insb
inc
add
xchg
adc
inc
or
or
dec
sbb
pop
sbb
cmp
call
adc
pop
cwtl
call
sbb
lcall
and
movsb
dec
imul
mov
xor
sbb
push
sarb
and
or
mov
mov
clc
add
jnp
adc
aam
mov
push
mov
in
add
add
pop
inc
or
push
or
or
loopne
adc
inc
in
xchg
push
pop
and
adc
sbb
adc
sarb
push
push
mov
cmc
pop
sub
and
insl
xchg
mov
test
leave
pop
ljmp
jo
push
ja
mov
loopne
das
pop
adc
fs
fwait
mov
add
pushf
mov
mov
and
adc
pop
pop
cwtl
loop
aaa
clc
adcb
cwtl
push
fsts
or
mov
cmpsb
add
movsl
sbb
add
rcl
out
fisubl
leave
push
in
hlt
xchg
mov
xchg
aam
out
lcall
add
les
int
pop
push
pop
xchg
xor
movsl
test
fwait
or
lock
sbb
insb
pusha
in
faddp
nop
repz
mov
lahf
jno
in
and
pop
in
in
jecxz
loope
data16
dec
pop
mov
ljmp
pop
cmp
push
or
stc
loop
icebp
mov
and
push
bound
rcr
mov
mov
stc
mov
adc
imul
mov
das
lods
stos
testl
daa
sbb
in
mov
movsb
dec
mov
out
xchg
inc
in
aas
inc
xchg
jecxz
jge
mov
in
jmp
loop
in
jbe
roll
sbb
fdivrs
outsl
xchg
loope
rcl
sbb
fs
imul
or
mov
in
js
lds
lea
fs
xor
sbb
dec
or
aam
cmp
cwtl
pop
add
les
scas
in
jo
pop
cmpsl
sub
in
mov
mov
and
jnp
or
es
in
push
inc
sti
push
fsubs
rcll
outsl
pop
xlat
data16
xorb
and
pop
push
stos
aad
sbb
cmp
cli
mov
es
bound
dec
inc
dec
pusha
or
mov
xor
pop
lahf
psraw
in
mov
cmp
movsb
addr16
clc
in
js
pop
aam
dec
es
popa
push
sarb
dec
insl
cltd
push
in
fwait
daa
inc
loop
add
in
pop
sub
lret
sub
pop
lea
rcrb
add
ficomps
in
outsl
sub
imul
lret
sub
push
xchg
inc
and
mov
ret
hlt
mov
jl
or
inc
lods
adc
aas
push
in
aaa
sub
mov
popa
jno
xchg
inc
sbb
in
cld
fiadds
xchg
pushf
inc
in
mov
movsl
push
cltd
cmp
out
xchg
mov
mov
or
test
sbb
fcompl
mov
pop
mov
jg
xchg
jno
pushf
imul
pop
sbbl
or
and
pop
std
mov
pop
or
sub
xchg
xchg
push
imul
adcl
sbbb
pop
adcl
add
test
test
ljmp
or
pop
outsb
fxch
dec
imul
mov
pop
mov
mov
sbb
pop
adc
xor
arpl
stos
lret
bound
lods
or
imulb
sahf
pusha
fildl
mov
sub
data16
xor
and
pop
fs
or
jnp
aaa
fildl
mov
pop
adc
sbb
pushf
les
jg
sbb
sahf
lcall
imul
inc
adc
decl
lea
jg
pop
out
test
push
dec
out
mov
iret
or
add
arpl
add
cwtl
rorl
mov
adc
push
mov
out
push
add
mov
or
dec
mov
cld
mov
mov
dec
loop
sub
js
pop
sbbl
cmp
cmp
pop
cmp
jl
fsubr
fwait
out
fistl
and
jno
push
push
add
jo
jecxz
adc
and
les
adc
inc
insl
xorl
cmp
sub
push
xor
and
xor
add
pop
ss
cmp
xor
and
jbe
mov
js
ja
push
inc
stos
push
sub
sbb
pop
sub
lcall
sbbb
cmp
xchg
pop
sbb
cmp
and
cltd
pop
xor
jb
test
xorb
mov
jo
std
mov
pop
mov
lahf
pop
jbe
xchg
pop
push
lahf
jne
mov
je
add
imul
adc
pop
out
pop
sub
xchg
push
and
cwtl
xchg
sbb
add
push
sub
imul
sbb
mov
xor
and
outsl
pushf
push
sub
sbb
dec
xor
mov
adc
lahf
mov
fsts
leave
pushf
stc
xchg
ljmp
out
add
xor
inc
out
in
je
add
add
inc
rcrl
jl
push
lea
call
pusha
pusha
pushf
lea
jae
cmc
push
call
outsl
insb
xor
cs
insb
add
xchg
pop
inc
or
mov
scas
pop
in
jp
sahf
sarb
lods
xor
sti
xorb
mov
lds
shll
ja
dec
pop
pop
cwtl
popf
and
inc
fmuls
adc
pop
and
mov
ret
hlt
out
arpl
mov
sub
int3
push
iret
mov
dec
pop
call
into
add
and
jmp
pushf
movl
pushl
mov
mov
mov
pushl
popl
push
pushf
pushl
pushf
pushl
ret
mov
aaa
inc
or
adc
jbe
xor
mov
pop
jl
insb
out
mov
cmpsb
cli
sub
sub
dec
and
ret
mov
mov
mov
repnz
fisubrs
push
into
sahf
mov
into
out
sub
sub
inc
das
push
mov
jp
push
add
jmp
inc
pop
out
xor
loope
inc
jo
and
and
pop
inc
add
ficompl
cs
aam
shlb
push
test
bound
sub
stos
xchg
mov
in
mov
mull
loope
inc
or
xlat
and
xor
push
imul
ja
pusha
sbb
mov
loope
pop
jl,pn
js
sarb
dec
push
add
aas
popa
mov
testl
mov
mov
outsl
cmp
insb
cmp
test
loop
sarb
jge
mov
int3
push
pop
inc
mov
mov
pop
sbb
loope
xchg
inc
fisubs
and
mov
loope
mov
outsw
jnp,pt
or
push
pop
loop
test
jl
insb
adc
lcall
into
aaa
dec
push
push
cmpsl
and
xchg
std
shlb
les
mov
imul
xchg
das
inc
adc
int3
adc
add
pusha
lea
call
pusha
jmp
test
sub
pushf
pushf
jmp
jmp
pop
inc
or
fldcw
enter
jmp
or
adc
push
cltd
lds
hlt
xor
jae
sti
mov
test
sub
sub
es
scas
sub
jae
cmp
xchg
int
add
int3
xchg
cmp
pop
popf
jecxz
dec
sbb
sbb
pop
movsb
sbb
mov
mov
and
roll
cwtl
lahf
test
mov
sub
push
sahf
dec
add
mov
xlat
push
into
pop
out
xchg
sub
or
ja
sbb
push
insb
adc
cwtl
gs
lea
call
call
stos
pushf
mov
lea
jmp
pusha
pusha
movl
pushf
pushf
movb
lea
jmp
cltd
mov
mov
int3
mov
int3
in
fists
and
lret
push
arpl
xchg
add
test
and
jmp
mov
push
daa
mov
mov
in
lds
pushl
popl
mov
movw
pushl
pushl
ret
popf
mov
mov
enter
lods
cmp
mov
popf
push
scas
testl
push
mov
pop
daa
movsb
aas
cs
mov
push
or
mov
xchg
ret
xchg
rcrl
shll
sbb
push
sub
push
adc
add
lods
imul
xor
shl
fildl
pop
inc
fwait
bound
lret
add
rorl
or
jmp
push
xchg
bound
cmpsb
mull
popa
xchg
sub
sbb
cmc
in
addr16
adc
ss
and
xchg
xor
sbb
add
pop
dec
in
sarl
mov
dec
push
cmp
or
pop
loope
inc
inc
xchg
ljmp
sub
push
ret
adc
jle
sahf
ljmp
cmpsl
std
xchg
and
int
pop
dec
mov
je
call
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
es
rolb
push
ret
jb
adc
icebp
out
loopne
xor
xor
ljmp
mov
jecxz
mov
outsl
std
addr16
test
pop
xchg
add
add
mov
sbb
pushf
stc
mov
xor
lret
xor
icebp
mov
test
pop
mov
or
sarb
testl
lods
lock
rclb
lea
call
pushf
lea
jmp
sbb
nop
inc
or
adc
sub
push
lds
ss
xor
mov
addr16
fimuls
jns
jle
mov
outsl
cmp
sbb
js
pop
and
mov
inc
xchg
scas
xchg
xorb
mov
test
push
push
sub
insl
push
gs
cmp
pop
mov
mov
adc
aas
mov
sub
popl
push
jnp
sbb
mov
xchg
xlat
sahf
das
jbe
mov
lret
mov
or
int3
jns
sbb
scas
xchg
mov
mov
and
cs
sti
js
pop
push
xor
lahf
loopne
xchg
in
lods
out
pop
lods
mov
pop
push
adc
int
inc
ret
sahf
sahf
push
cwtl
inc
pop
inc
inc
cmp
mov
shll
in
and
sub
cmp
xchg
scas
test
inc
jo
ss
push
loopne
les
mov
cli
ret
nop
cwtl
rclb
movsl
fucomp
jb
mov
movb
lea
call
push
lea
jae
call
fstpl
test
adc
mov
hlt
and
imul
les
mov
or
mov
pop
iret
cmp
outsl
push
les
push
scas
ss
jbe
sub
or
pop
mov
add
inc
or
lea
dec
pop
into
clc
stos
cmp
sbb
or
int
pop
loopne
stos
lcall
shll
mov
cld
inc
fadd
fadd
adc
data16
insl
in
xor
sub
out
sbb
xchg
fistpl
xchg
mov
mov
out
roll
aaa
mov
cmpsl
int3
cwtl
and
and
xchg
mov
popa
mov
and
and
bound
fildl
dec
adc
nop
sub
push
insl
adc
fbld
inc
mov
inc
jge
inc
or
ss
and
push
inc
xor
pushf
pop
and
xchg
add
and
or
inc
scas
sub
leave
mov
mov
and
dec
idiv
movsb
mov
sub
sub
sbb
aad
movsl
fisubs
je
out
aam
jns
jo
in
outsl
dec
pop
addb
push
sbb
test
and
inc
add
cli
pop
loop
push
in
inc
popf
inc
mov
cmpsl
cltd
jecxz
pop
or
loopne
and
imul
xor
mov
call
stc
les
push
pusha
dec
sub
shll
test
jae
mov
mov
nop
mov
inc
push
or
jl
cmp
aad
aad
or
fstp
inc
mov
imul
nop
cmc
mov
sbb
jge
aam
fldt
xchg
pop
dec
je
push
sub
pop
addr16
dec
adcl
pop
sbbl
stc
arpl
add
sar
push
dec
mov
jl
fs
je
not
movzbw
mov
pusha
movzbl
call
pop
ds
or
push
insb
push
mov
xor
nop
shrl
or
lahf
push
sbb
pop
mov
into
pop
add
test
lcall
int3
mov
pop
in
dec
mov
gs
out
repnz
test
ret
in
addr16
mov
mov
outsl
insb
sub
in
mov
jo
xor
ret
adc
cmc
or
mov
lods
ss
push
push
xor
mov
scas
cltd
inc
sahf
sub
mov
or
in
mov
shlb
and
add
add
and
inc
mov
cmpsb
movsl
shrl
aam
sub
mov
popw
arpl
push
adc
mov
push
pop
cli
fldcw
push
in
ret
lahf
scas
push
dec
ss
and
movlps
lcall
xchg
and
or
jns
cmp
inc
jne
nop
pop
ss
sbb
dec
repnz
mov
addr16
dec
lock
int
imul
push
pushf
insl
fmul
sbb
sti
dec
jnp
push
xchg
jns
jl
jne
mulb
aas
arpl
sbb
jne
dec
dec
add
insl
add
sub
mov
jo
or
test
pop
mov
add
cwtl
sahf
fcoml
ror
repz
xlat
add
icebp
dec
addr16
imul
inc
pop
xchg
add
dec
repz
push
iret
add
cwtl
pop
dec
or
dec
jnp
mov
leave
pop
es
movsl
adc
pushf
les
and
aam
pop
lods
outsl
divb
lret
testb
cltd
mov
xor
add
inc
pop
test
test
sbb
push
add
cmp
or
cmp
mov
fidivs
jo
inc
addl
test
lods
aas
and
inc
sbb
fsubl
inc
sbb
popa
loope
rorb
sbb
push
rcll
xor
testl
scas
xchg
pop
or
jmp
xor
ret
sbb
xchg
test
mov
sub
sbb
jb
ror
insb
test
xor
ja
add
cmp
leave
test
jo
lret
jge
jl
fldcw
xor
mov
out
adc
int
leave
ljmp
shr
incb
add
test
cli
call
pushf
mov
movb
pushl
ret
push
mov
xchg
not
pusha
pushl
popl
pushf
setp
mov
pushl
pusha
movsbw
movl
bswap
cwtl
lea
push
mov
movl
jmp
incb
xchg
cmpsl
xor
add
mov
or
les
cmp
cmpsb
jecxz
push
mov
test
das
or
push
xor
stos
xchg
jmp
daa
addr16
inc
test
fstps
or
out
outsb
jnp,pt
inc
mov
xor
iret
xchg
cli
add
pop
test
cwtl
in
stos
xchg
mov
psrlw
jge
stc
ret
pop
push
mov
or
inc
lahf
xchg
jmp
lds
inc
xor
sbb
test
or
pop
loope
clc
push
addr16
xlat
mov
dec
cmp
cmp
imul
push
inc
rcr
nop
cmpsw
lcall
in
in
sub
call
cmp
jecxz
sub
ja
rol
stc
das
popf
daa
mov
xchg
loopne
push
iret
outsb
or
mov
fmulp
cmc
jg
and
push
int
sub
mov
jmp
ja
mov
les
push
loopne
incl
pop
mov
adc
inc
vpsubq
pusha
lret
fs
loopne
arpl
lods
push
das
jae
cmp
dec
test
bound
pop
sub
call
dec
sahf
jae
lds
inc
or
sti
mov
mov
sub
les
int3
ss
xchg
test
fisttpll
mov
aas
decl
sbb
gs
and
mov
or
insb
add
leave
add
dec
or
adc
dec
frstor
adc
out
stc
scas
mov
inc
ss
xchg
pop
minps
fucomp
sahf
in
or
fstl
mov
xor
orb
jno
adc
shrb
pop
scas
dec
insb
and
stc
and
mov
les
cwtl
cmovns
dec
mov
xchg
xchg
pop
sbb
jl
out
mov
xor
in
sbbl
add
jecxz
out
mov
mov
sub
not
xor
lea
add
pushf
pushf
sub
pusha
jmp
fdivr
mov
mov
adc
push
sbb
cli
xchg
std
mov
rcll
pop
push
jo
and
inc
adc
nop
mov
mov
sub
add
shlb
adc
jae
cli
jmp
pusha
lods
dec
or
dec
decb
dec
sbb
mov
arpl
jno
fxch
testb
iret
dec
les
mov
insl
test
fs
cmp
xchg
mov
fcmove
imul
hlt
and
xchg
dec
icebp
sbb
pushf
mov
into
int
fisubrs
adc
xor
rcll
loop
sbb
cmp
sbb
pop
push
mov
insb
push
pop
fnstenv
ja
fs
nop
dec
or
add
xor
rclb
pop
mov
in
xchg
mov
sub
cwtl
dec
pop
int
in
xchg
cmp
leave
mov
add
pop
loopne
mov
pop
insb
icebp
pusha
stc
pusha
sbb
inc
add
sbb
jmp
stos
xchg
repz
loope
jb
iret
rcl
pop
mov
jp
ljmp
dec
inc
pop
inc
icebp
xchg
in
mov
add
test
mov
push
and
sbb
in
std
adc
jge
mov
dec
or
lods
sahf
sub
setge
sub
xlat
loopne
pushf
lods
je
cmp
push
ftst
popf
dec
popf
scas
push
xchg
iret
xchg
inc
movsb
movsl
int
ss
popf
test
shll
rol
dec
cs
jbe
and
fidivrl
in
out
xchg
jmp
aam
leave
hlt
mov
jg
mov
test
in
add
mov
pop
gs
test
inc
sbb
push
pop
pop
outsl
adc
pop
cmp
lret
dec
or
lret
clc
mov
sbb
sub
repz
repz
dec
aam
xchg
test
and
roll
pop
pop
push
add
inc
in
dec
jne
enter
inc
jmp
add
fsubs
xor
pushf
sub
xchg
dec
mov
mov
push
fwait
mov
filds
pushfw
lock
sbbl
add
mov
jbe
mov
lea
mov
call
pop
bsf
shld
mov
jmp
jo
xorb
ja
xchg
and
jo
test
cli
mov
xchg
rcll
and
cs
and
mov
pop
add
push
es
stos
add
stc
lods
nop
loope
sub
adc
insb
xor
jo
adc
cltd
push
sbb
fsubrl
pusha
cld
add
jbe
repz
or
push
jne
cmp
ficompl
icebp
sti
dec
push
cwtl
sub
data16
loop
movsl
jmp
jl
dec
stc
test
xor
add
test
cmp
clc
pusha
movzwl
add
bts
bt
mov
jmp
lea
je
bswap
mov
jne
mov
jmp
popa
and
xor
jp
ds
cmp
out
jge
pop
insb
jbe
leave
ret
or
and
push
push
pusha
shr
add
sbb
sbb
mov
push
xor
sub
push
cmp
in
imul
fs
out
xchg
stos
adc
sbb
ret
mov
movsb
jp
adc
xchg
test
std
les
xor
cli
dec
lcall
mov
inc
add
pushl
daa
push
into
jg
push
enter
cmp
bound
sub
xor
or
gs
js
adc
test
dec
jo
xor
rclb
fildl
xor
div
add
das
cmc
das
jecxz
dec
or
std
addr16
jge
in
jbe
or
iret
push
jmp
test
or
int3
adc
shr
frstor
pushl
pushl
popl
movl
pushf
pushl
pusha
pushl
ret
es
ss
in
mov
scas
sbb
js
or
dec
iret
hlt
test
sar
jns
sahf
dec
cmp
xchg
dec
jg
movsb
cli
add
orl
or
adc
xchg
arpl
add
inc
cmp
inc
xchg
add
std
xchg
loopne
adc
test
lds
xlat
add
out
fistpll
sbb
cltd
pop
adcl
cmpsb
sbb
inc
adc
add
mov
int
aas
mov
sbb
in
stos
lods
ss
adc
cmp
pusha
dec
stc
test
sub
and
mov
int
into
push
nop
leave
lret
dec
fcompl
sub
jmp
fidivrs
xchg
pop
pop
sahf
sbb
into
mov
and
imul
pop
inc
pop
call
stos
pop
xor
jo
or
insb
icebp
scas
jne
in
xor
inc
sbb
and
aaa
or
mov
mov
hlt
adcl
jnp
jnp
add
sbb
pushf
jge
jno
dec
decl
jbe
frstor
add
fs
ret
cli
sbbl
dec
xchg
js
jno
aas
imul
pop
iret
mov
or
add
hlt
mov
test
push
push
and
shr
in
aaa
xchg
cmp
cmp
adc
movsl
es
sarb
mov
adc
xchg
aaa
cmp
or
repnz
sbb
push
pop
lret
fnstcw
loopne
push
push
jne
push
in
in
and
cmpsl
fld
fiaddl
fs
push
add
mov
in
in
xor
lret
sbb
pop
ret
stc
and
push
lock
jp
lret
sub
test
mov
insl
cmp
cmp
and
sbb
pop
push
mov
add
mov
add
mov
mov
mov
dec
sbb
jbe
rcll
vpaddsb
jmp
sbb
into
mov
mov
mov
xor
dec
or
ffree
roll
movsl
mov
sub
push
sub
xchg
sbb
adc
dec
mov
pop
xchg
xorb
xor
mov
xor
or
dec
std
lret
repnz
xor
mov
mov
insb
jle
pop
arpl
aas
xchg
test
push
mov
mov
imul
mov
mov
and
adc
data16
movsb
inc
inc
inc
mov
mov
sub
jns
xchg
cmpsb
pop
mov
jp
out
stos
das
xlat
or
popf
mov
sub
in
and
inc
cmp
sbb
mov
mov
into
adc
xor
mov
push
test
pusha
push
or
mov
mov
jle
shl
rcll
lods
add
inc
icebp
jecxz
sub
into
mov
insl
sub
xchg
and
lret
ss
add
popf
pop
gs
push
loope
sbb
sub
cmp
pop
cmp
mov
xchg
mov
and
ss
dec
xor
jne
xor
sbb
orl
and
pushf
bt
jmp
jmp
push
push
inc
push
xor
cs
insb
add
push
scas
cmp
mov
das
pop
movsb
fstpl
testl
shr
subb
lahf
mov
pop
push
xchg
ljmp
mov
in
ret
push
sub
das
xor
test
hlt
or
outsl
push
jne
fisubl
pusha
sbb
mov
inc
adc
shrb
cmp
mov
push
repnz
and
ficoml
orb
out
cmp
out
cmpsl
das
fwait
inc
xchg
xor
cmp
xchg
fnstcw
dec
mov
jge,pt
fdivp
inc
sbb
insb
xor
push
sub
movsb
fnstsw
pop
popa
and
jl,pn
push
rolb
mov
pop
movsl
mov
in
outsl
inc
fwait
lods
rorb
inc
add
xor
stos
mov
push
dec
add
pushf
add
icebp
mov
jo
stos
adc
adc
cmp
push
and
mov
popf
jge
cltd
and
pushf
int3
icebp
repnz
or
sub
mov
ret
push
add
sbb
sbb
inc
addl
stc
mov
repnz
stos
jae
dec
jle
mov
or
sub
leave
hlt
sub
rolb
jo
cwtl
es
xor
push
inc
mov
icebp
inc
push
add
fs
mov
jne
mov
cmp
mov
push
mov
lods
sahf
mov
jnp,pt
cmpsl
lods
adcb
popf
lods
clc
mov
sub
cltd
insl
sbb
jae
xor
orb
dec
xchg
out
loop
fisubrl
push
je
aaa
stos
rorl
xlat
out
mov
xlat
out
and
aas
cmp
push
jae
mov
mov
xchg
icebp
int
stos
inc
aas
mov
mov
xor
and
jbe
in
sbb
out
out
mov
mov
xor
dec
fwait
aas
and
scas
sbb
cmc
aas
dec
lock
add
rorb
call
add
inc
mov
xchg
and
and
xlat
add
cmc
test
mov
insb
xor
pop
pusha
popf
mov
test
fcmovnb
pop
bound
pop
or
push
mov
push
pushl
call
sahf
fistl
cmp
data16
mov
xchg
cmpsb
mov
imull
cmp
sbb
push
shrl
sbb
pushf
fnstenv
mov
insb
arpl
ds
jae
inc
push
push
sub
pop
loope
xor
xchg
fmul
mov
mov
inc
sbb
dec
scas
scas
dec
dec
out
mov
fstps
repz
jp
inc
sbb
sti
loope
xchg
out
xor
xchg
ret
stc
and
xchg
fs
loopne
inc
pop
mov
fstpt
xchg
int3
jge
sub
cmp
push
mov
xor
mov
shl
sbb
je
popf
mov
or
jge
xor
les
or
and
sbb
pop
mov
sub
xor
shl
rorb
nop
enter
adc
jg
or
push
in
cld
cmpl
mov
jo
push
mov
ljmp
loope
jmp
ds
mov
arpl
jge
and
mov
or
push
fmull
cmp
cmp
cmp
mov
inc
dec
push
pop
sbb
sahf
out
xchg
xlat
xchg
xchg
mov
or
dec
fwait
inc
fldt
scas
adc
clc
testl
mov
mov
roll
adc
sub
cli
cmp
out
inc
fldt
xor
in
xchg
divl
mov
push
int
and
mov
jmp
xchg
js
push
sti
sti
push
addr16
or
sbbl
loope
jnp
rorb
fldenv
mov
push
mov
mov
lock
dec
in
mov
add
dec
sbb
test
xlat
jmp
lahf
rol
add
xor
push
push
dec
dec
dec
cs
push
push
add
xchg
aas
or
mov
aad
cld
mov
repz
dec
mov
mov
fistpl
dec
cs
lret
pushf
insl
dec
mov
test
push
xchg
push
cmp
xor
decb
lods
push
mov
adc
jb
jno
adc
dec
je
pop
lock
pusha
cmp
pop
fldenv
xor
call
ja
cmpl
push
push
ret
xor
lock
push
repz
adc
xchg
xchg
imul
cwtl
test
ds
negb
outsb
push
scas
inc
add
insb
cli
pop
arpl
mov
fisttpll
rorl
repz
movsl
ds
cmp
lahf
push
hlt
movsl
push
test
mov
cmp
inc
cli
daa
sbb
rol
fildl
mov
inc
cmp
cmpsl
pop
ss
lods
in
int3
mov
outsl
xchg
leave
lret
dec
sbb
lret
sbb
fwait
dec
pop
or
sbb
push
adc
cmp
push
aas
and
cmp
push
stc
mov
outsb
mov
xchg
mov
jle
push
fdivs
mov
popf
movsb
mov
add
pop
jp
mov
aaa
and
fmul
orl
jae
scas
push
lret
insl
in
or
sbb
ret
stc
mov
dec
out
adc
ds
push
lahf
inc
cmp
add
jmp
mov
mov
jp
add
jmp
inc
js
testl
and
or
arpl
sbb
inc
add
fadd
sti
insb
leave
mov
sti
popa
lods
cmp
sbb
ljmp
lahf
jg
mov
sub
mov
push
cwtl
pop
in
xor
push
jbe
mov
mov
jle
mov
cmp
add
jmp
out
dec
fwait
mov
pop
and
pop
nop
and
ror
mov
lods
rorl
push
scas
push
ljmp
imul
pop
loopne
adc
or
xor
and
push
mov
icebp
mov
mov
dec
fmul
mov
mov
out
pop
mov
dec
lahf
jmp
or
push
ljmp
jg
aaa
ljmp
push
or
adc
dec
jo
gs
shrb
push
adc
mov
mov
adc
data16
xchg
add
lds
popf
scas
adc
aad
insb
push
filds
loopne
push
cmp
fsubrl
dec
imulb
imul
xor
mov
pop
mov
popf
fcoms
pop
loop
cmpsb
adc
shl
mov
mov
xor
mov
push
jb,pn
pop
xor
jge
adc
fdivs
shr
in
mov
xchg
into
cwtl
cmp
mov
rorb
cmp
cwtl
jae
sub
dec
iret
mov
and
int3
out
or
cwtl
fcoml
mov
jns
fistpl
pop
in
cmp
imul
push
imul
lret
cwtl
les
roll
cltd
cmpsl
mov
jle
cmp
dec
pop
or
mov
jp
std
bswap
lret
nop
es
addr16
rcrb
loope
xor
dec
shll
xchg
adc
inc
gs
pushf
int
jmp
add
jl
insl
sbbb
or
push
or
cmp
je
adc
mov
stos
xchg
mov
pusha
mov
hlt
mov
dec
jp
jge
mov
movsb
popf
ret
adc
push
inc
test
cs
jmp
xchg
aam
cmp
sbb
sti
int
dec
clc
imul
xchg
inc
xchg
jb
ljmp
outsl
test
into
cs
inc
sub
std
and
mov
mov
cmp
daa
lods
daa
pop
les
mov
ffree
jp
mov
cmp
xchg
pop
push
inc
add
xchg
inc
push
push
inc
mov
xor
cld
mov
dec
or
bound
and
dec
pop
daa
insb
xor
enter
cmpl
inc
lcall
repnz
lahf
test
mov
cmp
cmpsl
mov
xchg
ret
icebp
add
push
mov
push
inc
push
arpl
push
xchg
add
push
xchg
ja
mov
lcall
xor
sbb
aad
pop
aas
test
jbe
and
mov
out
test
push
push
xor
adc
inc
sbb
cli
dec
frstor
and
addr16
lcall
push
aad
in
sub
mov
or
xor
pop
shll
movsl
aam
pop
test
mov
jbe
xchg
leave
les
xor
in
push
mov
jge
lods
hlt
popf
dec
test
sbb
mov
psrlq
pop
pop
jno
jge
mov
rol
or
mov
adc
pop
or
push
xchg
sub
push
and
hlt
fiadds
popf
or
add
xchg
mov
aas
negb
adc
add
push
movsl
cwtl
loopne
in
xchg
cs
fcomp
test
mov
rolb
es
insl
out
jmp
mov
cmpsl
xchg
add
inc
aas
dec
je
add
in
test
imul
cmp
or
jne
mov
push
or
sub
push
pop
outsb
aam
dec
pop
jae
mov
cwtl
int
rorl
and
sti
push
pop
push
xor
popl
repz
or
mov
mov
sbb
fs
pusha
push
push
mov
test
adc
call
into
or
scas
rclb
arpl
push
leave
inc
cltd
adc
fstps
adc
es
xchg
fwait
int3
mov
jae
nop
loope
add
out
mov
add
cmpl
pop
dec
push
aad
lock
mov
lret
dec
mov
push
or
and
movsb
jns
push
loop
sub
sbb
jbe
cmp
mov
mov
and
mov
mov
add
rcll
mov
movsb
lods
in
pop
or
mov
adcb
int
mov
fcoml
jne
mov
loop
add
and
inc
inc
aam
cmp
sbbl
dec
sbb
pop
xor
es
rolb
cmp
and
pop
arpl
es
adc
sub
cmpsl
mov
ljmp
xchg
ret
jo,pt
insl
test
arpl
mov
inc
add
jg,pn
jae
cmp
push
pop
xchg
pop
xor
or
loopne
xchg
test
mov
and
jnp
mov
mov
imul
mov
dec
roll
ret
lret
mov
icebp
or
pushf
mov
push
aaa
into
in
push
mov
stos
mov
or
stc
inc
jnp
mov
fs
adc
adc
loope
adc
jbe
movsl
mov
and
ret
out
jnp
mov
xchg
cli
pop
xchg
lret
ret
push
test
sti
popa
pop
dec
or
pop
daa
mov
inc
cld
xor
stc
push
ss
jg
jne
jge
lcall
push
icebp
jae
outsl
fimull
inc
test
or
push
inc
dec
orb
pop
popa
adc
add
shll
scas
data16
pop
pushf
lret
cld
cli
dec
mov
adc
sub
lret
shrb
pop
inc
push
addr16
lods
std
insb
cmc
popf
dec
push
outsb
pop
push
mov
or
movb
clc
push
mov
pop
xor
adc
inc
mov
repnz
fildll
rolb
cld
fcmovbe
jns
sbb
repnz
cli
adc
jns
pop
xor
or
mov
test
sub
arpl
jo
js
pusha
ret
loop
clc
cmp
pusha
stc
hlt
data16
lds
inc
jge
in
sbb
sub
in
sub
jne
rolb
mov
ret
or
add
pop
and
fcoml
or
inc
mov
mov
xor
fs
fucomi
clc
repnz
scas
mov
lahf
fdivp
ds
mov
shrb
ss
cmp
add
daa
bound
jne
jno
mov
std
push
sarb
lret
ficomps
es
mov
mov
test
fists
mov
test
mov
movsb
aaa
jp
and
jp
movl
fwait
lret
mov
int
jge
jns
push
lret
cmc
push
lea
adc
pushf
jno
xchg
hlt
sbb
mov
cltd
or
adc
push
call
dec
mov
arpl
mov
xorb
inc
pop
ljmp
inc
les
shlb
pop
inc
adc
add
fwait
and
dec
mov
push
loop
jmp
out
and
push
jae
mov
movsl
jecxz
enter
cmpsb
lods
icebp
xchg
mov
adc
mov
xchg
int
and
imul
rclb
loop
xchg
pop
in
adc
in
cld
jnp
insl
cmp
push
cmp
pop
popf
add
jp
jae
pop
popf
pop
test
mov
clc
cld
jnp
test
pop
popf
and
lcall
xchg
ret
fstps
sub
lock
fidivrs
das
imul
xchg
add
popa
lds
test
insl
xor
mov
popf
push
mov
addb
dec
stos
adc
jbe
sbb
dec
rorl
dec
xor
in
rolb
push
ljmp
aad
cmp
jecxz
les
pop
arpl
mov
mov
xchg
pusha
lods
push
outsl
rcll
push
mov
ds
cmp
out
dec
adc
xor
or
lahf
xchg
pop
sbb
pusha
and
add
icebp
in
push
in
fiaddl
call
incl
test
mov
lds
insl
int
call
pop
leave
push
mov
xchg
lds
je
adc
mov
push
pop
sbb
movsl
mov
jb
aad
push
or
in
jg
pop
xor
push
inc
or
add
leave
loope
out
xchg
jmp
stc
test
cli
nop
xor
jbe
push
xor
pushf
iret
sbb
or
test
sub
shll
push
rcr
sub
push
lret
adc
lds
jg
push
in
mov
sbb
mov
loope
out
test
dec
inc
imul
xor
jns
aad
xor
mov
add
or
cmp
jp
pop
cmc
insb
cli
cmp
stc
jp
sub
aam
daa
mov
ljmp
or
xor
or
cmpl
daa
sbb
dec
call
xchg
inc
jecxz
xchg
imul
mov
sbb
lds
and
lods
in
adc
ljmp
hlt
in
cmp
loopw
bnd
mov
lods
cmp
jecxz
in
ret
ret
cmp
sbb
xchg
sti
mov
pop
bound
push
pop
and
cmpsl
lcall
loop
mov
lods
shrl
dec
push
xchg
stos
lock
fisubrl
adc
imul
dec
jmp
xor
jmp
testb
mov
stos
mov
cmp
cmp
or
add
cwtl
add
pop
push
addr16
outsb
aas
inc
xor
cmp
sub
lret
push
jge
lahf
leave
mov
mov
dec
mov
or
jl
add
mov
lea
push
pusha
cmc
insb
sub
pop
mov
ficomps
sbb
pop
or
test
ljmp
popf
xor
test
mov
fcmovbe
cmpsl
in
into
mov
add
cmpl
sahf
or
pop
mov
scas
hlt
int
xor
int3
dec
movsl
fldcw
imul
pop
sbb
cld
jg
stos
cld
mov
ret
jno
jne
mov
jecxz
iret
daa
jp
notl
mov
pop
lds
push
scas
adc
rclb
test
in
sub
lods
dec
dec
inc
jmp
pop
lret
lcall
repz
adc
mov
mov
sub
fisttps
push
imul
ja
ja
sub
jns
jge
or
push
push
adc
sbb
sub
xlat
mov
iret
lods
xsha256
cmpsb
xchg
sub
in
cmpsl
fisttpl
or
aas
movsl
in
or
lods
xor
bound
mov
ja
lods
add
pop
ret
repnz
mov
in
mov
addr16
mov
xor
dec
adc
xor
movsl
jecxz
push
mov
rolb
lcall
add
jns
xor
pop
mov
and
mov
insl
xor
fxch
or
xchg
sub
jecxz
and
outsl
cs
ja
movsb
and
inc
sbb
addr16
jbe
sbb
xor
mov
push
and
dec
outsl
xchg
mov
xchg
loope
mov
loope
sbb
fisubrl
mov
xlat
dec
fadds
pop
sti
addl
js
imul
xor
jne
add
ljmp
imul
add
je
or
pop
and
jnp
mov
pop
dec
jae
pop
insl
es
enter
jb
flds
push
enter
fistpl
inc
xor
jle
xor
ljmp
jcxz
add
lods
js
xor
loopew
outsl
cli
mov
pop
leave
push
adc
dec
movsl
xchg
add
pop
jo
adc
mov
inc
cmp
movsb
or
xchg
addb
cmpsb
push
push
cld
pop
and
jmp
xchg
push
jne
imul
mov
popa
adc
lods
or
nop
and
cmpsl
loope
xchg
test
mov
sbb
inc
aam
pop
sbb
andb
ret
or
test
js
imulb
fstpt
pop
call
adc
add
int
push
push
adc
mov
xchg
outsl
out
aas
dec
jne
dec
dec
xor
dec
ja
inc
shll
add
je
mov
mov
mov
shrl
pop
add
imul
xor
lods
cmp
pop
sub
dec
adc
lods
std
mov
mov
inc
jp
rol
cltd
les
jg
mov
les
lcall
sub
imul
clc
popa
pop
scas
call
in
aas
inc
xor
push
and
cld
movsb
cmc
mov
imul
sub
and
pop
add
ljmp
sbb
mov
cmpsb
or
add
xchg
stos
pusha
dec
and
cmpsl
popa
cmp
enter
pop
or
add
adc
mov
and
add
pop
xor
leave
push
loope
test
testb
or
inc
adc
mov
adcl
sbb
sbb
sahf
scas
mov
nop
rcll
dec
stc
inc
xorl
xor
repz
aad
jb
mov
mov
sub
or
push
ret
fwait
in
xchg
les
mov
add
ret
shlb
rorl
xchg
or
mov
icebp
test
sub
scas
scas
nop
int
jmp
in
or
fdivs
imul
pop
sti
test
xchg
add
xor
cmp
xchg
sub
ds
mov
xor
rolb
std
xchg
adc
sub
sahf
pop
dec
inc
ret
outsb
testb
xchg
mov
scas
mov
int
stos
ds
jae
inc
push
lock
cmp
dec
or
lods
pop
mov
in
inc
das
jg
cmpsb
aaa
scas
stc
mov
pop
add
mov
xor
jmp
xchg
cmpl
pop
inc
mov
loop
mov
push
sub
xor
inc
add
icebp
imul
and
out
xchg
lds
xchg
std
insb
cmc
arpl
imul
rolb
jecxz
adc
outsl
cmp
push
mov
mov
push
int
sub
ds
push
in
inc
fcmovnb
cmp
imul
push
aad
mov
ret
mov
pusha
inc
fisttps
pop
add
rcrb
repnz
jne
dec
and
aaa
scas
fadds
in
push
mov
jnp
push
add
xchg
scas
xchg
mov
xchg
pop
push
jnp
jno
jnp
mov
clc
push
jl
inc
ror
js
popf
and
aam
mov
mov
popf
mov
in
inc
cld
lret
cmpsl
pushf
and
sarl
and
rcll
mov
push
in
pcmpeqb
jo
imul
push
jg
ficoml
pop
in
and
push
adc
insl
xor
cmp
mov
loope
adc
or
pop
sbb
adc
std
mov
movl
adc
sbb
jg
fildl
lods
push
loopne
mov
arpl
hlt
scas
pop
mov
sbb
mov
adc
out
inc
add
jo
test
pop
int3
mov
outsb
aad
mov
mov
popa
dec
jb
sub
mov
sbb
adc
ss
jmp
lds
or
daa
push
and
jnp
fdivs
push
mov
addr16
lret
push
push
pop
sub
jbe
mov
inc
sub
jmp
jo
fisttps
rclb
or
repz
add
mov
xchg
sub
lcall
xchg
into
mov
dec
aam
inc
push
xchg
push
cwtl
iret
push
addr16
fwait
ret
sub
hlt
lock
fldl
scas
movsb
cmc
mov
ret
xchg
mov
and
jmp
jno
push
adc
jnp
sub
mov
cs
jns
sahf
iret
adcl
cmpsl
loop
stos
aam
jge
jo
jl
lds
lahf
pop
inc
hlt
xorps
addr16
fstpt
xlat
stc
stc
dec
int3
mov
lods
mov
ljmp
mov
rcrl
mov
push
adc
out
ja
int3
pusha
loop
int3
xchg
shrl
push
idivb
mov
sti
jmp
popf
sbb
cmpsl
add
mov
dec
push
xchg
ss
outsl
mov
sub
jnp
ja
push
sub
xlat
add
and
mov
xchg
xchg
popf
movsb
xor
adc
mov
es
outsb
ret
aaa
mov
xchg
mov
inc
adc
ljmp
push
sbb
movsb
imul
sbb
fdivrs
bnd
popf
jo
mov
cmp
in
xor
xchg
test
shll
shrb
fstl
int3
sub
xor
add
repz
pop
dec
imull
mov
jle
push
fmuls
mov
daa
inc
mov
sbb
dec
popa
dec
mov
mov
mov
rcrb
xchg
mov
pop
dec
loop
xchg
into
and
addr16
push
jl
mov
or
pmaddwd
pushf
and
out
jp
add
mov
push
dec
shll
dec
sbb
popl
mov
pop
jmp
cmc
cs
mov
mov
aam
sbb
bound
fisttpl
pop
add
fs
cwtl
or
subb
sub
cmp
adcl
inc
mov
shrl
adc
leave
push
sahf
dec
cmc
cmp
fs
aad
cmp
mov
and
push
test
popl
xor
enter
test
inc
adc
mov
rclb
lret
loope
cli
mov
and
mov
ja
cwtl
inc
cli
cmp
int
push
jge
push
and
loopne
test
push
xchg
push
aaa
and
xor
or
data16
popa
xchg
cltd
sti
adc
cmp
xor
jmp
leave
lods
roll
dec
je
rclb
scas
aaa
rcll
jg
cmp
xor
negl
fdivrs
cmp
xchg
pop
ficoms
push
xchg
push
dec
fdivrl
xchg
jae
in
int
outsb
mov
clc
mov
jp
cmp
mov
fmuls
cmpb
jno
jbe
adc
jg
inc
cmp
shrl
adc
roll
mov
cwtl
outsl
xor
arpl
mov
pushf
loopne
and
sarl
or
bound
mov
cmp
cltd
or
jbe
ret
movsl
pop
insl
adc
fnstenv
je
cltd
iret
mov
js
jg
cwtl
enter
rclb
cmp
push
push
pop
bound
mov
cltd
or
push
xchg
sahf
in
lds
xor
adc
sbb
popf
pop
inc
or
push
fs
mov
mov
daa
mov
mov
lahf
jne
push
pop
pop
push
les
dec
mov
fs
std
aas
and
aad
xchg
xor
jae
dec
aad
pop
into
push
adc
cmp
dec
xchg
clc
mov
nop
nop
mov
jnp
cmp
dec
jne
xchg
add
add
test
test
push
and
inc
lds
mov
jp
sahf
sbb
fxtract
leave
pop
pop
in
xor
xchg
loop
ljmp
sub
jl
inc
mov
fadds
sub
xchg
divl
push
fsubl
daa
dec
ljmp
outsb
push
push
cmpl
dec
movsl
cmp
in
das
jmp
jg
mov
pop
jno
sbb
iret
adc
mov
dec
jge
sbb
enter
sbb
sub
jo
xchg
test
sub
mov
adc
bound
dec
mov
push
int
mov
xchg
add
test
jecxz
mov
add
inc
addr16
es
xor
sbb
in
stos
pop
add
jmp
out
xchg
jns
pop
dec
hlt
lods
scas
adc
xchg
or
fcmovne
dec
inc
mov
or
mov
cld
mov
fbld
inc
adc
ja
xchg
ficomps
mov
push
std
int
jno
decl
mov
jmp
lods
std
xor
xchg
mov
mov
les
pop
add
faddl
sbb
xlat
mov
add
lahf
cltd
decl
mov
shlb
push
dec
fldl
outsb
fwait
cwtl
pop
mov
inc
mov
mov
sbb
sarb
popa
imul
mov
inc
adc
mov
clc
pop
fcom
and
fwait
mov
xchg
daa
jae,pn
sub
or
fstps
lods
xor
aas
cmpb
add
lret
pop
aas
shrl
testb
das
or
xchg
cli
adcl
aas
push
sti
xor
or
mov
sub
insl
sbb
jmp
test
pop
jnp,pt
xor
dec
pop
roll
stos
or
mov
mov
cmpsb
loopne
pushf
mov
mov
test
loope
cmc
dec
dec
sub
out
mov
xchg
jbe
mov
jns
xchg
lret
insl
dec
repnz
mov
inc
xor
jns
dec
ret
shll
clc
popf
or
xor
sub
add
fdivrp
rclb
inc
mov
jb
sahf
stos
addl
mov
sarb
add
sbb
jecxz
jbe
xchg
insl
sti
mov
fildl
cmp
iret
or
push
xchg
outsb
mov
xor
ljmp
sbb
cltd
mov
jmp
shlb
add
sub
enter
jae
stos
addr16
hlt
dec
fldenv
xor
in
in
mov
sbb
imul
imul
sbb
and
mov
jo
sbb
fisttpll
pop
jno
je
jl
xor
lods
lgs
int
adc
sti
mov
dec
int3
popa
xor
aad
add
ror
mov
mov
mov
cmp
and
inc
mov
outsl
dec
xor
test
jnp
and
call
push
dec
hlt
cmp
mov
sti
adc
rcrl
xchg
stos
push
leave
jb
shrb
sbb
leave
ljmp
fstps
icebp
jne
push
add
dec
xor
jb
xchg
lret
and
mov
fstps
dec
mov
push
rcrb
aas
xchg
or
mov
cli
scas
divb
mov
xlat
pop
out
leave
cmp
iret
fildl
and
inc
push
or
lahf
push
fcomps
mov
jle
sbb
outsb
mov
ss
add
jmp
insl
in
pop
out
cmpsb
jge
jl
into
push
and
or
lds
popa
mov
cld
adc
mov
data16
dec
sub
cwtl
or
mov
add
xor
lods
divl
call
and
xchg
mov
jae
cltd
loop
sub
adc
test
pop
or
jg
mov
arpl
popa
je
adc
add
xchg
add
pop
lods
xor
xchg
pop
call
mov
mov
in
push
and
xor
push
push
add
addr16
push
jb
add
jmp
dec
xchg
sarl
inc
aaa
pop
sbb
pop
adc
cmp
xor
lock
or
inc
push
mov
outsb
les
push
sbb
leave
mov
xchg
jmp
cmpb
outsb
cmp
repnz
push
pushf
or
mov
push
cmp
push
ret
dec
and
dec
sbb
add
outsb
adc
and
add
arpl
jp
jg
lea
stos
hlt
cmp
lea
jb
pushf
jmp
push
push
not
inc
mov
setp
inc
inc
movb
push
pushl
mov
movb
lea
call
call
popf
mov
cltd
sub
mov
enter
lods
jns
jle
repnz
clc
data16
fldlg2
sarl
jne
cmp
fwait
sub
inc
lea
sub
sub
push
imul
dec
aad
shrl
jl
mov
cmpb
jnp
and
pushf
icebp
aaa
xor
pusha
movb
movl
pusha
pushf
push
pushl
lea
jmp
or
push
idivb
mov
mov
fisttps
dec
mov
pusha
push
stos
mov
ds
mov
popa
and
in
test
aas
add
sub
fwait
dec
ljmp
add
push
cmp
cmp
ficompl
jb
jb
inc
addr16
cmp
sbb
lret
xchg
sqrtps
lret
push
out
jno
lret
fdivr
insb
lods
frstor
xchg
sbb
xchg
xor
xor
cmc
iret
xchg
sti
mov
lahf
sbb
pop
dec
je
push
stos
int
fwait
xchg
mov
mov
sub
inc
pop
mov
les
nop
inc
testb
adc
or
or
roll
daa
fiaddl
pop
mov
xor
or
mulb
fs
xor
call
mov
adc
push
fidivs
fs
fisubl
mov
arpl
push
mov
fldenv
and
lahf
and
and
mov
and
loopne
loop
push
mov
adc
fisubrs
adc
dec
mov
mov
mov
inc
imul
decl
mov
cmp
adc
push
add
inc
jle
sbb
fldt
decb
xlat
fdivr
pushl
sbbb
push
je
nop
sti
adcb
js
push
xchg
inc
out
lret
or
sbb
mov
sahf
addr16
orb
lcall
inc
mov
addr16
sbb
repnz
jo
xchg
mov
cmp
pop
jg
mov
js
push
mov
loope
in
mov
sub
testb
bound
clc
dec
lcall
dec
icebp
insb
xor
add
mov
sarb
dec
xchg
movl
pusha
pushf
lea
jmp
mov
push
lea
call
push
call
cld
lds
pop
or
push
stc
das
mov
cmovge
lcall
mov
add
mov
push
inc
loope
pop
popf
adc
dec
repnz
lahf
dec
sbb
push
or
lea
add
cmc
mov
and
clc
mov
mov
push
mov
ds
fisubrl
cmp
sbb
fisubl
arpl
jle
inc
mov
mov
bound
incl
push
roll
arpl
and
arpl
arpl
cli
pop
and
mov
mov
mov
add
movsl
cwtl
jecxz
or
lret
sub
mov
xchg
aam
cmp
and
jnp
arpl
cwtl
jo
and
je
mov
rcrl
mov
adc
adc
lret
xor
push
ret
xor
jns
cmp
pop
jne
push
mov
pushf
pushl
push
call
arpl
loopne
or
add
aam
xchg
add
jae
jo
mov
dec
cmp
mov
jecxz
imul
cmpsl
sahf
sbb
push
adc
add
aad
fwait
cmpsb
fildll
push
bound
jae
cmp
or
in
adc
push
das
jnp
repz
adc
mov
and
test
adc
fidivrl
mov
xchg
loop
test
loop
xchg
addb
lock
mov
mov
adc
or
mov
pop
inc
aaa
lds
loope
inc
jae
jecxz
repnz
add
outsl
ja
inc
adcl
stos
cmpl
in
add
push
outsl
pop
repz
test
and
lcall
add
jle
jecxz
inc
inc
sbb
addr16
inc
jo
cmp
cmc
out
daa
movzbl
lahf
mov
push
push
pusha
pushf
lea
jmp
fsubl
xchg
loop
and
data16
push
mov
ds
mov
jnp
jae
pop
in
lods
arpl
out
out
mov
leave
aad
pop
sub
add
shrl
mov
das
inc
pop
outsb
test
jle
cmp
fldenv
dec
icebp
sbb
lahf
xchg
push
test
leave
jo
cmp
mov
ds
hlt
and
sbb
pop
std
sbbb
std
outsl
mov
push
in
imul
xor
lea
dec
je
cmpsl
inc
jl
sbb
pop
mov
jo
ja
ja
push
jb,pn
outsl
pop
and
stos
out
xchg
and
xchg
mov
fs
cmc
mov
add
jl
clc
cmc
scas
dec
cmpsl
popf
jb
mov
cmpsl
std
xor
cmpsl
das
mov
sbb
shr
es
pop
ret
pop
mov
pop
pushw
pop
pop
rol
jnp
fwait
mov
add
add
aam
in
pushf
mov
movl
pusha
pushf
mov
lea
jmp
jmp
and
push
jge
pop
or
jmp
das
mov
sqrtps
push
mov
push
inc
ja
movsb
dec
adc
or
sub
cmpsl
inc
sbbl
outsl
loopne
sub
daa
aam
int3
movsl
fisubs
inc
mov
or
leave
adc
aad
std
xor
outsl
repnz
jno
testb
in
aad
in
xlat
hlt
adc
jbe
sbbb
push
push
arpl
push
inc
adcl
cmp
jno
jp
cmp
ja
xchg
in
sbb
add
add
movsl
fdivrp
sub
mov
xor
xchg
mov
add
cmp
dec
dec
lea
jecxz
insl
inc
push
or
xchg
std
dec
pop
out
hlt
inc
adc
aam
push
pop
rcrl
jno
add
cmp
fcoms
test
add
nop
and
mov
push
and
jle
mov
repnz
ss
dec
mov
jne
jb
adc
ret
add
cmp
sub
push
pushf
movb
lea
jmp
rol
stc
cmc
cmp
neg
mov
movl
rol
test
mov
pushf
call
neg
bt
test
xor
call
ljmp
pop
sub
fwait
mov
pop
std
pop
push
or
cmp
popf
sbb
add
mov
dec
xor
imul
xchg
in
cmp
jp
pusha
cmpsl
adc
mov
xchg
or
pop
es
fadd
cmpsl
pop
push
xchg
scas
ja
pop
inc
jl
jae
mov
repz
pop
or
popf
dec
loopne
xorps
rcl
mov
rorb
cmp
and
cmpsl
cli
lcall
stos
add
pop
dec
fucomi
mov
insl
cmp
test
mov
jns
and
bound
add
and
push
add
or
mov
std
jecxz
sub
jl
pusha
pop
sbb
cmpsb
out
sub
mov
push
aaa
popa
hlt
in
push
pushf
dec
in
shr
lods
inc
fiaddl
jae
mov
inc
add
out
rorl
sbb
pop
xlat
sbb
push
jb
push
sub
lret
mov
add
and
push
push
adcb
shlb
jb
int
fsubrp
jl
fwait
push
add
mov
jle
xchg
fldl
jg
pop
movb
push
ja
jno
mov
scas
cli
test
pop
leave
cmc
cmp
sub
lock
sub
pop
sbb
xchg
sub
notl
hlt
pop
call
mov
cwtl
pushf
or
setbe
je
divl
in
add
sbb
sbb
add
out
mov
sbb
sub
and
push
or
dec
cmp
jp
jge
pop
or
sub
imul
push
sub
xchg
adc
dec
je
pop
push
fdivrs
lcall
out
cmp
pop
cmp
aad
adcl
int3
push
push
sub
and
jle
xchg
lea
xor
cmp
mov
xchg
mov
dec
mov
xchg
call
fmull
inc
mov
pop
xchg
push
or
aam
push
popa
repnz
test
and
mov
mov
mov
dec
inc
nop
jbe
mov
xor
icebp
in
inc
stc
arpl
frstor
test
mov
testl
sahf
sbb
pop
or
popf
in
push
add
popa
lahf
xchg
xlat
sbb
lret
inc
cmp
loopne
pusha
xor
loopne
scas
pop
add
ret
popa
xchg
ret
ficoms
scas
cmc
rcll
mov
lds
adc
and
and
cmp
adc
inc
jno
pop
jne
adc
scas
jae
aam
fwait
push
shlb
sbb
imul
aas
test
iret
push
sub
cmp
cmp
cmp
xor
loopne
mov
pop
and
dec
mov
xchg
xchg
pop
pushf
call
mov
movl
pushf
push
lea
jmp
js
mov
or
sub
fwait
lret
pop
lret
sub
pop
add
mov
sbb
popf
dec
out
add
arpl
add
or
ret
das
pop
ret
or
xchg
pop
faddl
lahf
dec
adc
pop
mov
imul
and
mov
jg
mov
pop
lret
pop
stos
inc
cmp
nop
test
dec
mov
loope
xchg
je
in
pop
mov
jg,pn
fildl
mov
sbb
lret
pop
fimuls
scas
mov
int3
call
add
shlb
xchg
ret
push
pusha
xor
das
sbb
call
and
xchg
test
push
sahf
mov
mov
int
popl
fcoml
and
and
sbb
lret
push
or
jge
mov
xchg
jbe
push
xchg
call
fwait
repnz
cmp
lret
shrl
stc
lods
call
mov
xchg
stos
rorb
lret
fstpl
int
xchg
pop
sub
pop
add
and
loop
js
stos
mov
xchg
jmp
test
clc
pusha
sub
lea
call
xchg
or
or
minps
or
dec
cmovge
loop
sub
cmp
test
inc
adc
sbb
test
pushf
sub
fildl
or
subb
sub
sbb
test
jbe
sbb
pop
jle
popf
aam
jge
cwtl
dec
add
imul
inc
adc
jno
dec
jne
sbb
cmp
add
inc
mov
in
lds
add
pop
data16
lock
inc
lcall
push
iret
out
stc
in
mov
dec
lods
push
stc
lret
cmp
xchg
jl,pn
ret
xchg
test
jb
mov
mov
fildll
fadds
pop
loope
es
pop
pop
or
adc
jp
xor
jl
push
roll
or
mov
adc
movsb
push
stos
mov
mov
cwtl
mov
sbb
dec
push
mov
lcall
lods
adc
ljmp
mov
call
roll
mov
out
dec
jmp
push
sbb
inc
lret
push
stc
cli
sahf
out
xchg
mov
daa
pop
mov
push
push
outsl
push
loopne
insb
mov
mov
testl
push
or
or
pop
outsb
sub
sahf
movsb
mov
pushl
pushl
pusha
movl
pushl
pushf
movl
push
mov
push
lea
jmp
cmp
cltd
add
fmuls
pop
sub
fsubrl
pop
xchg
xchg
push
pcmpeqb
call
sarb
mov
ljmp
dec
adc
or
push
add
and
or
push
mov
jb
xchg
imul
jg
andb
sbb
push
int
pop
pop
out
lret
into
je
or
cmp
and
data16
mov
mov
cmp
push
cwtl
in
sbb
mov
or
mov
dec
sbb
pop
in
mov
lcall
mov
sbb
adc
sub
arpl
inc
aam
dec
mov
mov
jb
mov
fmuls
pop
inc
pop
addr16
inc
add
fucom
mov
jo
nop
and
lret
and
or
xchg
sub
mov
xchg
jmp
mov
cltd
aad
testb
mov
or
and
inc
mov
testb
bound
pop
test
jl
repz
adc
inc
outsl
aas
jp
aas
xor
scas
pop
mov
test
flds
dec
lock
inc
pop
fs
test
xor
lret
xrelease
pop
mov
cld
popa
cwtl
inc
pop
gs
cmpsb
cmc
mov
and
pushf
lea
je
btr
pusha
add
add
shl
mov
pushf
add
cmc
pushf
test
mov
test
mov
stc
test
pushl
bt
cmp
call
add
or
push
je
aam
xor
xlat
add
xchg
lea
push
inc
int
inc
jo
jo
cltd
daa
mov
mov
or
sbb
pusha
add
sub
mov
cmp
into
cli
jmp
adc
ljmp
aas
test
pop
lret
testl
lahf
inc
mov
pop
pop
fnstsw
push
leave
fldenv
lea
jg
push
push
pushf
push
mov
movl
pusha
lea
jmp
push
aaa
cli
or
sub
mov
or
jae
aas
jbe
dec
adc
xchg
test
xchg
add
notb
push
xchg
push
rcrl
cld
data16
push
dec
repz
sahf
sahf
pushf
sub
mov
jb
shrl
xor
cli
test
in
loopne
test
int3
insl
jecxz
aad
cmpb
jno
repnz
shr
xor
xchg
stos
clc
pop
data16
jns
std
xor
jne
cmp
pushf
aas
xor
rcl
mov
add
cmc
shl
add
add
mov
call
movw
call
mov
push
xorl
push
xor
and
jae
cmp
mov
cltd
or
aad
push
out
data16
xor
mov
jmp
pop
inc
cld
push
in
sbb
dec
dec
cmc
jno
push
and
cmp
daa
dec
or
cli
push
in
popf
iret
or
insb
pop
call
xor
lock
push
jo
fists
adc
cld
xor
or
in
jo
mov
inc
cmc
mov
xchg
xchg
xlat
ljmp
stos
iret
fldenv
mov
ljmp
push
cli
and
movsb
pop
jecxz
add
testl
add
push
or
imul
mov
jns
lret
dec
stos
in
imul
xor
cwtl
ficoml
xchg
scas
ljmp
add
les
adc
dec
fs
cmp
adc
pop
jbe
icebp
prefetchwt1
hlt
inc
adc
cmc
inc
push
rorb
inc
lcall
mov
stos
sbb
jp
mov
dec
mov
adc
jne
stc
ds
les
add
xor
sub
cld
ljmp
fucom
cmp
cmpsl
cmp
pop
pop
xchg
pop
sahf
fistps
andb
jnp
sti
mov
add
rorl
mov
dec
addr16
pop
sahf
fcmovnb
ficoms
out
mov
inc
mov
xor
jp
js
push
xor
mov
fidivl
cmpsb
decb
push
flds
stos
clc
add
pop
pusha
lea
mov
cs
or
jns
sub
or
xchg
fiaddl
cltd
add
and
loop
dec
push
sbb
push
add
pop
lods
sbb
sub
leave
nop
in
xchg
int
std
cwtl
popa
test
stos
clc
cmpl
inc
ds
push
scas
or
sbb
jmp
gs
shrl
rcl
dec
das
jmp
add
pusha
jno
js
adc
jmp
fwait
mov
loopw
xchg
nop
xchg
adc
push
dec
xchg
clc
mov
inc
pop
xchg
jnp
enter
icebp
and
test
dec
push
iret
mov
xchg
mov
repz
fxch
mov
jmp
xchg
or
add
or
xchg
cmpsl
xor
addr16
dec
hlt
add
jo
into
testl
cli
test
push
inc
iret
in
jae
and
insb
mov
cmc
push
push
outsl
push
outsl
cmp
sub
cmp
idivl
or
aas
dec
aaa
movsb
cmp
adc
xchg
call
sub
push
adc
xchg
test
pop
lahf
insl
sub
dec
push
addr16
std
and
mov
jmp
and
adc
add
mov
negb
icebp
inc
ja
shr
mov
sbb
xor
ret
or
add
or
inc
jb
stc
and
adc
xchg
shlb
in
xchg
test
pushf
or
inc
xchg
repnz
leave
mov
sbb
sbb
mov
les
push
insl
sub
imul
add
cld
mov
daa
cwtl
lcall
pop
pop
push
inc
jnp
pop
dec
or
adc
fwait
and
sbb
jbe
mov
cmpsb
sbb
jecxz
push
xlat
mov
lret
mov
adc
imul
mov
rcrb
dec
popf
pushf
pushf
movl
pushf
movl
pushf
pusha
pushf
pushf
lea
jmp
jmp
mov
lea
jae
xchg
not
mov
pushf
mov
pusha
dec
inc
call
pushl
lea
ja
jmp
inc
jp
or
push
loop
push
adc
push
dec
adc
test
nop
addr16
scas
lcall
repz
mov
mov
add
lret
inc
nop
jmp
or
and
test
shrb
lock
fsubs
in
fs
mov
mov
pop
xchg
movb
fnsave
lock
xchg
lea
mov
inc
idivl
inc
cmp
shl
xor
xlat
int
lea
xlat
sub
inc
ja
cmc
adc
push
cmp
lcall
lcall
js
jmp
cld
lds
or
dec
sbb
mov
push
push
dec
or
xchg
sarb
xor
add
push
outsl
push
jnp
mov
mov
das
out
pop
cli
movl
cwtl
pop
jg
dec
xor
mov
push
add
jbe
and
jo
js
pop
fadd
fsubrs
cwtl
leave
fwait
cmpb
push
sub
flds
sbb
les
cmp
pop
in
imull
arpl
rcrl
or
pop
in
sbb
test
dec
outsl
mov
test
adcl
mov
adc
pop
in
cli
cmp
iret
pop
inc
xor
mov
lret
lcall
out
lds
cs
cs
iret
ret
rcrb
mov
lds
inc
jnp
adc
jo
mov
sar
or
adc
addr16
jbe
dec
inc
loope
jl
pop
mov
xor
shlb
push
imul
fistpl
mov
mov
mov
jbe
sarl
lods
dec
or
repnz
lret
call
in
cli
dec
xor
cli
sbb
in
sbb
mov
lods
xchg
xorl
mov
mov
mov
lds
mov
fwait
leave
xchg
mov
cli
ljmp
dec
js
fmuls
cmp
sbb
fwait
lret
mov
iret
push
ret
repz
and
or
in
push
inc
mov
adc
mov
fisttps
add
sti
sbb
lahf
jmpw
sar
dec
jbe
dec
dec
and
in
pusha
insl
nop
jmp
mov
stc
and
cli
xchg
push
bound
imulb
mov
push
push
ret
negb
lods
call
into
clc
mov
stos
dec
pushf
out
lret
pop
scas
fisttpll
sahf
lods
jbe
lods
push
mov
pop
pop
fwait
push
mov
js
dec
repnz
mov
adc
xchg
notl
jge
shr
stos
mov
test
stos
lods
into
lret
out
jae
lcall
push
inc
add
cmp
nop
sub
push
pusha
sbb
xlat
or
xchg
or
stos
pop
mov
stc
inc
cmp
pushf
pusha
lea
jmp
jnp
mov
or
or
mov
dec
pop
dec
fildll
sub
lcall
fsubrp
pop
gs
movsb
lea
fstps
xchg
mov
mov
mov
and
ret
mov
ret
fsubs
mov
fildll
loope
shrl
fwait
stos
outsl
cmp
xchg
sub
call
mov
xchg
ds
mov
xchg
data16
mov
nop
int3
lcall
mov
xchg
stos
lock
lods
xor
push
push
jno
ret
mov
popa
mov
and
xchg
movsb
cmpl
lea
jmp
and
testb
jg
cmp
mov
int
insl
mov
jmp
out
aas
pusha
js
mov
imul
movsb
push
sub
out
rcr
adc
int3
lock
hlt
cmp
in
mov
mov
out
js
dec
jnp
sub
and
out
dec
jbe
pop
xlat
lcall
ret
adc
xchg
jne
jb
xchg
rorb
daa
out
clc
sub
ror
xor
andnps
insb
cmp
push
cli
lds
lock
ja
push
or
cli
sub
dec
lcall
test
inc
cli
cmpsl
mov
cmc
fadds
movsb
dec
ljmp
movsl
inc
cmpb
or
ja
nop
or
lods
lods
scas
add
jmp
jmp
lock
push
lods
inc
mov
into
iret
loope
enter
fs
mov
jno
push
mulps
cmp
xchg
rorb
rorb
call
outsl
insb
gs
cs
insb
add
push
cmpsl
jbe
adc
roll
aaa
inc
or
mov
es
jnp
push
jg
push
lea
iret
jo
cmp
imul
cs
lret
mov
lret
loopne
mov
fisttpll
dec
pop
xchg
pop
jl
push
lea
dec
je
push
out
xlat
test
dec
rcll
and
fmuls
dec
cmp
pop
fsubrl
dec
pop
push
pusha
or
xchg
int3
or
adc
shlb
sub
in
sbb
ret
in
lds
ret
outsb
jg
sub
rorb
test
fsubs
push
adc
addr16
mov
test
int
fsubs
std
mov
mov
faddl
fsubl
and
jecxz
mov
or
fisubl
pop
inc
sbb
push
xchg
jge
mov
jnp
int3
add
or
add
pusha
push
out
rclb
jb
xor
jns
sbb
es
enter
dec
or
loop
xchg
iret
jle
jbe
or
add
push
or
fwait
sti
bound
pcmpeqd
or
add
out
int3
cwtl
loop
dec
mov
push
lahf
jge
add
test
push
dec
js
mov
and
cmc
aas
push
push
into
mov
or
fistpl
repnz
push
sub
repz
pop
stos
sti
sbb
jne
jne
movhps
mov
iret
repnz
out
cmpsl
mov
xor
pushf
lea
jae
dec
xchg
mov
pushf
mov
call
push
sahf
icebp
or
mov
or
cmp
das
dec
jno
xchg
dec
push
sbb
in
inc
cmpsl
inc
cmp
imul
hlt
ret
and
mov
sti
roll
movsl
sub
and
hlt
mov
int3
push
inc
test
mov
lds
mov
lahf
fimuls
or
fldenv
xchg
icebp
or
push
add
orl
mov
jno
repnz
mov
mov
sbbl
inc
sahf
and
insl
dec
adc
cmp
add
mov
int3
jno
cmp
sbb
into
aas
xchg
inc
sahf
push
inc
fstpl
lds
stc
das
xor
jmp
fldcw
outsb
xchg
push
insb
sub
icebp
xor
out
xchg
inc
ds
dec
mov
mov
xchg
xchg
je
push
int
shlb
int
imul
dec
je
inc
adc
adc
mov
mov
or
or
mov
pop
inc
push
xlat
inc
ror
testb
int
das
sahf
push
daa
jno
adc
inc
shll
shll
inc
cli
out
xchg
xchg
daa
mov
lock
and
jo
push
pusha
pusha
pushf
movl
pushf
movl
push
pushf
lea
jmp
push
insl
mov
add
es
mull
je
lahf
movsb
mov
mov
mov
add
cli
mov
dec
stc
dec
icebp
int3
or
ja
push
sub
scas
dec
popf
jp
pop
pop
xor
pop
jnp
stos
clc
sbb
push
mov
repz
rcrl
cmp
addr16
mov
hlt
scas
xchg
rol
add
jmp
call
pop
outsb
aas
sarl
data16
and
push
push
daa
lcall
and
repz
insb
sbb
push
cltd
mov
push
dec
and
push
dec
test
dec
sbb
ja
arpl
mov
cld
xor
jno
sub
dec
daa
and
daa
hlt
dec
mov
jne,pt
rorl
or
mov
mov
les
cmp
mov
mov
xchg
adc
loope
cli
stc
xchg
fidivl
ret
stc
ret
jae
inc
add
dec
stos
cmp
lods
je
xlat
enter
repz
mov
push
push
out
mov
hlt
or
push
push
push
dec
dec
cs
insb
add
icebp
cmpsl
shlb
movsb
push
and
and
in
xchg
jmp
pop
mov
sbb
std
mov
adc
xchg
test
xor
lahf
out
subl
cwtl
movsl
fstpl
adc
cmp
test
nop
jnp
test
aaa
mov
jbe
lods
cwtl
movsl
cmpsb
push
lahf
add
jecxz
and
cwtl
and
int3
adc
jg
decb
repnz
mov
adc
outsl
rclb
push
or
pop
jecxz
add
pop
sbb
add
sbb
sbb
popf
loopne
add
sbb
push
sbb
cmpsb
sbb
sbb
jb
sbb
push
sbb
sbb
sbb
jp
sbb
mov
jmp
add
add
add
add
add
lret
sbb
sub
sbb
mov
sbb
mov
jmp
add
add
add
add
add
sbb
lcall
add
add
add
mov
add
add
add
add
add
add
sbb
dec
jmp
add
add
add
add
add
adc
sbb
mov
sbb
insb
add
pop
jmp
add
add
add
add
add
sbb
fs
add
jecxz
add
jmp
xchg
pushl
std
or
push
xorb
in
movsl
push
ret
lock
stos
repnz
repz
adc
xor
xchg
adc
mov
fs
add
mov
mov
std
inc
jbe
outsl
pop
add
cmp
adc
add
inc
inc
jbe
cmp
lahf
push
jmp
sub
and
push
ds
stc
ret
mov
lock
shlb
addr16
les
and
inc
rorl
popf
rcrb
push
inc
push
and
push
and
aaa
lds
or
push
xor
jge
aad
roll
shll
and
jae
jmp
pop
xchg
movsb
add
fistps
and
xchg
insl
add
fistpl
pushf
int
xchg
dec
jmp
cli
outsl
mov
nop
scas
xchg
insl
push
dec
xchg
in
nop
push
mov
mov
push
repz
pop
loop
insb
sub
decb
push
adc
push
inc
mull
inc
mov
pop
in
and
push
or
xor
jbe
pop
adc
sub
enter
jnp
mov
mov
out
outsb
mov
adc
mov
scas
cld
pusha
fmuls
mov
mov
call
adc
add
mov
xchg
and
fwait
dec
scas
adc
jmp
adcl
cmp
mov
sbb
jbe
dec
vpunpcklqdq
lock
lods
hlt
lods
gs
mov
fsubrs
add
mov
inc
push
and
mov
xor
mov
adc
repnz
or
adc
je
pop
arpl
or
jmp
int3
push
insb
cmp
sub
pop
adc
stos
jno
or
daa
pop
xchg
pushf
inc
test
stos
movb
test
or
lods
hlt
movsb
int3
dec
sbb
sub
xchg
std
cmp
das
mov
push
pop
inc
push
out
repnz
jge
jge
mov
aaa
xor
push
mov
or
push
dec
xor
repz
iret
inc
push
xor
lcall
decl
push
xchg
fisttpll
jge
pop
jmp
lret
loope
fidivs
jecxz
adc
mov
and
lret
jl
mov
jge
mov
xchg
repnz
cltd
sub
es
dec
push
push
cs
push
and
pop
pop
cmp
repnz
xlat
ljmp
decb
lds
and
ds
xor
sar
push
adc
push
les
push
pop
rorb
shlb
leave
mov
repnz
and
arpl
pop
mov
decl
mov
or
outsl
cmpsw
pop
xchg
in
push
jp
mov
in
sbb
mov
popf
in
push
loop
jecxz
aas
les
hlt
stc
ret
jbe
mov
lahf
mov
push
or
leave
shr
push
push
call
pop
ds
or
mov
mov
shlb
mov
push
fs
repnz
sub
bound
push
xorb
and
adc
icebp
pop
cmp
mov
fucomip
jp,pn
aas
loop
add
cmp
repz
adc
cmp
lcall
cmpb
mov
shll
lahf
fs
mov
or
testb
fwait
leave
int
or
pop
adc
call
dec
test
dec
fcompl
aad
mov
xchg
les
sarb
pusha
pop
and
jge
adc
mov
jae
xor
stc
or
add
popa
adc
xor
test
jmp
mov
cmp
out
xor
int3
icebp
test
mov
mov
jo
lret
dec
sbb
mov
mov
nop
mov
lret
fidivrl
ds
sub
jne
inc
push
inc
pop
xchg
clc
add
jno
cmpsl
movsb
jo
mov
mov
out
aam
fsubrl
dec
nop
push
dec
dec
enter
or
nop
in
adc
push
or
mov
mov
dec
xchg
or
sbb
pop
xor
cli
or
fsubrs
int
into
mov
or
rorl
fs
jnp
mov
aaa
gs
out
push
and
mov
and
lds
subb
roll
sub
pop
and
xchg
aad
push
push
js
test
pop
movsl
fisubrs
ret
ja
jae
inc
lahf
push
in
jp
fisttpll
mov
loope
inc
sbb
pop
cmpl
mov
addr16
jmp
push
adcb
push
addr16
insb
stos
lods
rorl
mov
ret
adc
xchg
imul
lods
shll
scas
rep
cmc
enter
inc
pop
pop
loopne
cltd
leave
hlt
or
mov
ret
outsl
cmp
ret
mov
jnp
push
xchg
mov
pushf
das
push
sub
push
dec
mov
and
insl
push
or
jno
push
dec
cmp
fiadds
fildll
std
inc
fldl
fiaddl
pop
cmpsl
icebp
mov
stos
inc
pop
add
or
icebp
xor
inc
xchg
xchg
inc
xchg
jno
nop
lahf
sbb
loop
jno
rol
push
push
cli
out
sbb
stos
dec
dec
and
push
repnz
add
stos
sub
or
pop
sub
mov
and
mov
std
sub
xchg
aam
fbld
sbb
popa
test
mov
imull
mov
lods
inc
push
outsb
push
inc
int
inc
sti
or
in
xorl
push
aaa
and
loopne
xchg
pushf
xchg
dec
mov
mov
aas
daa
lock
jns
outsb
add
cld
sbbl
loope
adc
outsb
mov
negl
popa
xchg
cld
aas
cmpb
mov
adc
xchg
push
add
fcomps
in
and
push
lds
icebp
pop
cmc
dec
push
outsl
xor
sub
add
sub
add
xchg
pop
arpl
insb
stc
call
mov
out
adc
inc
xchg
daa
gs
movsb
fildl
add
push
pop
xchg
xor
cmp
add
and
test
pop
dec
cli
scas
jmp
jle
fstpl
out
stos
outsl
sub
fdivs
lahf
inc
clc
adc
sub
shrl
orb
xor
cld
sub
jb
jo
push
adc
xchg
cs
add
sahf
push
or
loopne
inc
sbb
xchg
std
cli
arpl
jne
mov
sbb
lret
sbb
or
pushf
mov
push
mov
outsb
mov
mov
fwait
cltd
shlb
mov
push
add
js
jo
ds
lock
jb
cmp
mov
loopnew
cli
nop
insl
aaa
inc
mov
in
lcall
pushf
add
xchg
add
mov
sub
push
outsb
cmp
sbb
bt
cmpb
mov
jmp
lea
jae
shrd
and
adc
add
mov
test
mov
pushf
mov
push
xor
clc
repnz
mov
lea
jne
pushf
mov
jmp
in
push
loope
movsl
mov
hlt
data16
mov
push
gs
mov
addr16
ret
mov
repnz
mov
cmp
clc
int
pushf
fsubs
and
insb
jp
xchg
loopne
and
jmp
push
repz
ficompl
pop
xor
mulb
outsl
stos
clc
fwait
xor
scas
mov
fimull
pop
xor
loop
mov
mov
movl
push
dec
aam
mov
ljmp
jo
xchg
stos
stc
repnz
inc
cmp
lods
js
mov
or
in
mov
stos
jl
pop
dec
jl
rorb
loope
sbbl
mov
mov
mov
mov
je
mov
add
test
mov
fsubrl
add
jmp
test
adc
push
xor
adc
rcll
cltd
iret
or
lret
cmp
push
mov
aaa
dec
xor
push
cs
xor
push
add
jecxz
mov
cmp
mov
mov
mov
mov
nop
es
xor
xor
loopne
cmp
cmp
xchg
lret
testl
dec
jbe
jbe
pop
push
xchg
push
adc
mov
mov
add
adc
sahf
popf
pop
jl
bound
push
adc
or
add
and
stos
mov
movsb
sbb
cmpsl
pop
and
pop
mov
popf
into
arpl
xor
xchg
xchg
mov
lods
sbb
lret
pop
in
mov
add
cmp
test
push
sub
sub
fcmove
shr
push
mov
lods
cmpsb
mov
lret
mov
cs
aam
icebp
mov
mov
in
lds
mov
xchg
ds
orb
or
rcrl
aas
data16
pop
daa
sbb
cwtl
xchg
scas
stc
cmp
cli
mov
hlt
into
cld
loope
gs
sbb
sbb
cmp
jg
adc
je
mov
jb
out
push
or
outsb
jl
mov
push
push
insl
or
fs
into
mov
xchg
loopne
dec
into
jg
je
jnp
lcall
or
sub
mov
push
sub
mov
les
xchg
into
incl
jne
inc
mov
or
sub
jp
sbb
imul
test
cli
mov
add
outsl
xor
cmp
sbb
cmp
aam
xchg
js
cmpsb
imul
pop
add
sbb
xchg
inc
ret
add
roll
push
das
sub
inc
int
sub
cmp
cltd
rcll
xor
mov
jnp
xor
inc
mov
outsb
xor
shrb
aaa
insl
push
pop
divb
mov
mov
mov
or
jo
aaa
and
in
in
xchg
call
or
mov
ljmp
stos
arpl
add
mov
sahf
pop
inc
andb
dec
sahf
dec
aam
faddl
jl
in
out
jae
and
fsts
add
add
pop
dec
hlt
fwait
loopne
bound
jno
jbe
xchg
pop
aaa
rorb
insb
popf
mov
scas
insl
xchg
pop
or
adc
imul
dec
mov
cwtl
into
cwtl
incl
push
jnp
fcompl
sub
movntps
and
shrl
imulb
outsl
add
mov
cmp
mov
shll
leave
xchg
or
outsb
xor
xchg
imul
rcrb
sti
test
push
mov
repz
mov
lea
xorl
dec
xor
mov
lods
jge
mov
shll
dec
push
inc
jns
fsubrl
cmp
enter
stos
push
sbbb
loop
inc
pop
cmp
add
mov
inc
xchg
imul
test
xor
or
mov
loope
push
jo
mov
popl
xchg
daa
jno
in
dec
or
ljmp
ljmp
mov
lods
jg
jg
out
popf
out
cmp
orl
das
fwait
or
xchg
test
addr16
adc
and
mov
xor
je
adc
pop
push
fs
shl
sub
mov
dec
inc
cmp
push
adcl
lret
push
out
enter
pop
push
mov
pusha
sbb
sbb
out
mov
push
xor
push
xchg
daa
add
xor
mov
sahf
mov
xor
inc
sub
icebp
int3
push
and
xchg
aas
cmp
adc
outsl
jno
adc
jmp
jecxz
imul
xlat
jmp
call
push
pop
cmp
sahf
dec
cmp
lret
pop
and
out
xor
imul
rorb
cmc
clc
cmpsl
in
push
dec
xchg
flds
xorl
cmpl
movsb
cld
lret
pusha
nop
leave
pop
jbe
and
pushf
subb
adc
xchg
data16
enter
pusha
jbe
sbb
jmp
lcall
adc
mov
cmp
mov
fstl
clc
xlat
lods
mov
adc
pop
test
sbb
pop
bound
pusha
lods
cli
and
test
bt
clc
test
shl
call
pushf
pushf
push
call
cmp
push
mov
xor
adc
and
das
jg
dec
mov
sbb
stos
add
fists
add
mov
cmp
jge
jbe
inc
push
into
jg
add
inc
push
es
adc
test
sbb
xlat
dec
xor
out
adc
std
jmp
loop
xorb
fistl
jecxz
push
ret
ja
mov
mov
xor
roll
jbe
xchg
movsb
or
mov
add
jo
repz
mov
push
test
fbstp
or
pop
push
es
pop
push
in
and
pop
arpl
ret
mov
or
loope
out
add
sbb
cmp
imulb
push
or
push
scas
shr
mov
lods
pushfw
xchg
add
in
or
sub
sbb
pushf
dec
decl
add
mov
outsb
xor
aaa
push
aas
add
mov
mov
jmp
push
jmp
ss
sti
dec
or
inc
xlat
adc
push
lret
into
or
test
dec
div
and
mov
call
shrl
pop
pop
cmp
adc
or
fldcw
pop
sbb
push
push
shlb
pop
mov
jb
imulb
push
enter
push
pop
push
pop
add
jb
sub
je
imul
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
addl
call
adcl
in
or
cmpsb
xor
adc
shll
rolb
and
or
xchg
mov
jno
in
stos
mov
movsb
popa
inc
xorb
xor
adc
test
in
bswap
pop
mov
not
not
jmp
lret
in
or
fisttps
jnp
lahf
jmp
cmpsl
mov
xlat
leave
nop
out
dec
sahf
and
pop
sub
in
push
cmc
rcl
sub
ret
jl
add
xor
mov
mov
cld
cmpsb
out
cmp
nop
push
cmp
cmpsl
lea
jge
and
je
shrb
pop
add
dec
pop
ss
daa
jge
lcall
adcb
jp
pop
out
inc
mov
cmpsl
cli
xchg
ret
add
repnz
rorb
aas
mov
lcall
call
push
lea
jae
jmp
ss
out
or
test
addr16
xor
xchg
movsb
orl
repnz
je
mov
lret
jns
iret
jmp
push
lahf
pop
arpl
lods
aam
es
and
mov
add
push
outsb
xchg
jmp
jge
fcom
mov
or
jmp
or
decl
xor
xchg
stos
ds
jge
out
in
fwait
dec
adcl
imul
inc
jle
stos
mov
outsl
icebp
dec
imulb
push
das
jge
pop
std
jl
mov
pop
add
add
push
pop
jmp
mov
push
jmp
sbb
xchg
out
or
push
shl
jbe
shll
arpl
mov
enter
jp
pusha
lods
cli
outsl
mov
jl
cmp
movsb
dec
testb
mov
dec
fidivl
cltd
fs
es
jecxz
jmp
iret
xchg
insb
push
test
stos
jno
push
lret
repnz
cmpsl
mov
sub
or
imul
jge
sahf
jmp
enter
sub
test
mov
mov
mov
int
rcl
loop
ljmp
jb
sub
mov
add
push
fs
mov
pop
outsb
mov
daa
xchg
mov
cmp
push
iret
push
stos
xor
adc
loop
cwtl
push
push
das
sahf
and
jmp
or
fmuls
into
sbb
fildll
jmp
add
imul
dec
popa
mov
repnz
cwtl
into
fwait
ret
pop
sbb
rorb
enter
mov
out
cmp
out
je
sbb
fsubl
scas
movb
scas
stos
test
shll
jne
jne
stos
xchg
inc
inc
scas
nop
data16
outsb
fmulp
lret
add
mov
add
test
cmpb
fwait
mov
test
jb
adc
call
or
pop
int
or
mov
xchg
test
cs
dec
mov
loope
add
sbb
roll
pop
dec
js
jl
out
lea
roll
sahf
ret
xor
pusha
std
sbb
lcall
dec
movsb
popa
cmp
iret
out
push
mov
loop
or
jg
gs
bound
pop
cmp
repz
shr
xor
outsb
les
lea
scas
xor
rclb
jmp
insb
adc
push
jg
jne
mov
fnsave
jl
sbb
jae
shll
js
add
jnp
jle
sub
pop
je
ret
sub
jle
cs
pop
pop
push
cltd
dec
push
push
push
dec
xchg
pop
dec
jmp
dec
rcrl
push
cmp
shlb
dec
pop
push
pop
cld
push
push
dec
inc
cmp
push
jae
add
cmp
jge
mov
pushf
xor
stc
addb
dec
and
lahf
pop
pop
dec
xor
das
sbb
sub
push
push
pop
pop
dec
sbb
add
xor
jnp
imul
inc
xlat
push
enter
sub
loopne,pn
jge
pushl
imul
pusha
xor
add
lods
inc
fisttpl
jnp
push
push
mov
xchg
push
push
mov
add
and
sbb
xchg
or
sbb
adc
push
sbb
adc
outsl
push
xchg
sbb
mov
mov
cmp
add
fmull
adc
adc
outsb
or
movsb
cmp
shlb
insb
xchg
je
inc
mov
sbb
adc
cmp
gs
and
or
loope
gs
loopne
sbb
cmp
or
and
jns
push
loopne
sub
inc
sub
jne
mov
adc
add
push
xchg
loop
fcoml
adc
jb
movsb
sub
and
sbb
sbb
hlt
cmp
sbb
or
cmp
pop
and
push
dec
jo
adc
and
sti
sub
push
sbb
cmp
hlt
aam
xor
sbb
pushf
pop
cmp
jnp
adc
out
dec
loopne
push
or
mov
sub
xor
ljmp
add
add
xchg
test
dec
push
adc
xchg
or
adc
cwtl
cmp
adc
sbb
nop
jle
add
sbb
out
and
fcomps
pop
sbb
rep
adc
hlt
add
jb
adc
loopne
jle
fstl
pop
aad
ljmp
leave
adcb
cwtl
and
shll
mov
insb
mov
or
adc
push
fwait
xor
and
lahf
roll
pusha
sbb
add
sbb
popf
jecxz
sbb
cmp
aaa
pop
sbb
or
jge
and
or
add
pop
rcl
fistl
xor
movsb
sbb
sbb
mov
xor
in
pushf
push
out
push
xor
cmpl
mov
insb
or
arpl
adc
xor
or
je
jl
dec
or
push
dec
xor
adc
cmc
sub
fdivr
hlt
push
adc
mov
sbb
cwtl
js
sbb
and
fldcw
fs
sub
lcall
cli
mov
and
jle
sbb
adc
in
mov
in
leave
fistpll
xor
and
cli
mov
pop
mov
push
xor
xchg
and
adcb
and
lods
dec
xchg
sbb
fs
daa
mov
mov
sbb
jnp
add
adc
popa
push
inc
xchg
sbb
fwait
dec
in
xchg
and
sbb
popf
add
or
sbb
sbbl
inc
icebp
sbb
daa
sbb
jge
add
int
dec
xlat
mov
adc
mov
lds
ds
out
xchg
or
xchg
or
out
sub
popf
jp
pop
nop
test
fwait
sub
into
sbb
xchg
cwtl
adc
popa
or
pushf
lock
xchg
push
lcall
test
or
loop
or
or
sbb
hlt
pushf
fcoms
mov
mov
pop
jb
call
mov
insb
cmp
ja
add
insl
sti
push
pop
or
xor
xor
jecxz
dec
cmc
je
push
adc
inc
lcall
dec
movsl
dec
or
adc
je
adc
in
push
pop
enter
jge,pt
adc
adc
adc
inc
popf
xor
pop
repnz
in
lcall
daa
adc
inc
mov
insl
mov
insb
mov
outsb
popf
cwtl
call
adc
rclb
cmp
dec
subps
mov
pop
adc
dec
pusha
popf
cwtl
call
andl
and
mov
dec
in
push
xchg
sbb
sbb
insb
stos
ficoms
pop
out
movb
adc
nop
sbb
lods
in
pop
loop
cmp
fs
jle
xor
pop
or
int3
sbb
cli
adc
xchg
adc
add
insb
sbb
mov
hlt
xorb
pop
push
or
lods
hlt
out
jl
stos
shlb
xor
pop
gs
pop
jno
fsubrl
stos
rcrl
sti
inc
pop
test
add
pop
les
mov
or
dec
ss
add
inc
dec
mov
out
outsb
cmp
cmp
insl
mov
scas
push
mov
cmp
pop
sbb
gs
sbb
add
stos
push
popf
mov
push
dec
scas
mov
lret
gs
lods
insl
mov
sbb
sbb
pop
out
lods
jae
push
push
leave
leave
adc
mov
in
or
cmp
adc
pop
sbb
cmp
jl
push
lcall
xchg
test
xchg
popa
mov
lods
hlt
xchg
cmp
sub
mov
pop
mov
loopne
pop
push
sub
pop
mov
movsb
push
sub
jbe
xor
ljmp
adc
sub
fadd
cwtl
call
std
popf
insb
inc
sub
ds
pop
add
je
add
pop
xchg
push
scas
or
iret
jl
jo
push
test
push
xchg
cmp
xchg
sub
rclb
mov
mov
sub
xchg
mov
int3
fcoml
add
or
mov
xchg
dec
clc
pop
adc
popf
adcb
sti
cmpsb
push
sbb
insb
in
xorl
dec
sbb
nop
js
sbb
adc
daa
test
dec
call
in
mov
or
push
add
dec
sbb
ja
out
inc
cmp
push
pop
push
cmp
push
or
cmp
push
cmp
mov
mov
lahf
sbb
jmp
sbb
lods
insb
push
sbb
or
hlt
mov
and
enter
orb
out
xor
dec
jae
ret
insb
lods
pop
xor
hlt
cmp
popf
fcoml
fstpl
scas
sub
adc
ds
dec
lcall
inc
sbb
add
add
dec
mov
cltd
adc
push
jo
xor
xchg
jnp
jge
jg
dec
faddl
jp
inc
das
add
jne
insl
pcmpeqd
push
pop
push
adc
adc
js
push
pop
adc
mov
sbb
dec
pop
adc
adc
mov
mov
pop
lods
pop
sbb
jl
mov
mov
dec
inc
scas
jno
push
fs
pop
or
xor
pop
scas
ja
fsubs
and
pop
cmp
pop
out
test
js
xchg
sbb
ds
sub
sub
jle,pn
push
dec
dec
stos
jp
rcrb
clc
cmp
add
dec
push
adc
pushf
mov
pop
adc
pop
mov
add
pop
fdivrl
pop
fwait
loope
test
ficomps
pop
push
xchg
push
xor
and
sbb
scas
push
inc
push
xor
pop
adcl
push
or
jbe
pop
and
adc
pushf
mov
mov
daa
inc
stos
int3
je
enter
inc
xchg
or
sub
test
rcrb
sub
cmp
sub
mov
lcall
xor
inc
and
repz
sub
insl
mov
icebp
je
jle
pop
call
loope
add
pop
add
mov
ss
sbb
mov
xor
sbb
lret
jne
test
or
push
and
mov
push
sbb
repnz
fistps
adc
add
mov
ljmp
dec
in
or
sub
cmp
fidivrs
cmp
xor
push
jp
jno
cmp
push
cmp
cmp
inc
push
mov
add
pop
pop
stos
sub
sbb
loopne
inc
jg
pushf
push
dec
pop
inc
cmp
xchg
loop
push
inc
sbb
mov
push
dec
inc
mov
xor
dec
rol
xor
xor
dec
pushf
pop
ja
pop
inc
mov
push
cmp
inc
adc
insb
mov
sbb
add
inc
les
mov
and
in
xchg
mov
movsl
cmp
sub
add
pop
sbb
push
movsl
xlat
inc
or
pop
xor
sbb
sbb
cmp
aam
jecxz
sub
test
add
pop
push
push
js
xor
xor
sub
adcb
mov
cmp
clc
loopne
loopne
cmp
enter
loopne
adc
sbb
fstpt
mov
dec
adc
inc
add
sub
aaa
pop
rclb
push
cld
leave
push
push
pop
push
sub
or
xor
lock
cs
sbb
push
sbb
je
cmpsb
xchg
jbe
jecxz
inc
or
add
sbb
cmpb
hlt
aam
add
jge
call
xor
imul
mov
les
jl
pop
dec
and
sbb
sbb
and
pop
mov
in
xor
popf
jg
out
push
and
xor
pop
les
dec
fwait
jo
out
lcall
sbb
dec
js
sub
xor
lods
and
mov
xchg
dec
or
push
push
shl
jno
imul
dec
dec
pavgb
adc
fldt
cmp
jb
add
das
sbb
pop
sbb
outsl
imul
jo
inc
mov
incb
insb
sub
xchg
inc
pusha
cmp
adc
cmpsl
movsb
push
pusha
cmp
inc
aad
mov
inc
sahf
cmp
imul
adc
inc
jno
adc
dec
lods
jae
pop
push
jmp
push
adc
xchg
pop
outsb
gs
pushf
lret
adcb
rorb
sbb
sbb
aaa
mov
inc
xchg
push
inc
fistpl
and
dec
xchg
dec
pop
inc
xor
inc
lcall
cmpb
push
cld
cmp
xor
cwtl
fs
dec
enter
pop
add
int
mov
je
pop
jns
inc
inc
adc
popf
mov
sbb
xor
mov
xor
lods
inc
pop
inc
outsb
push
stos
inc
or
xor
mov
bound
mov
push
iret
xchg
sub
and
test
xor
sub
int3
dec
push
pushf
mov
jbe
ficompl
sbb
in
mov
dec
mov
pop
and
dec
dec
inc
inc
popa
rorb
ds
cld
lds
lcall
fmull
pop
sarb
dec
out
je
push
add
or
cmp
sahf
adc
inc
mov
fstpt
push
lret
jg
mov
sub
pop
mov
xchg
cmp
lds
mov
sbb
jbe
and
push
and
mov
test
nop
and
mov
loop
push
xor
jl
pushf
mov
jmp
dec
jl,pt
add
shrl
sbb
adc
clc
sbb
pop
jl
mov
sub
adc
xchg
bound
ret
vorps
pop
sbb
inc
pop
sub
andl
jp
ja
stos
aad
add
orps
and
and
hlt
xchg
test
jecxz
enter
hlt
mov
adc
cmp
pop
sbb
ss
mov
adc
cmpb
jecxz
adc
in
jp
jmp
and
test
sbb
test
imul
cwtl
fistpll
jo
shlw
cmp
and
adc
inc
in
lcall
adc
les
adc
cmp
adc
adc
sbb
xchg
pop
bound
push
popa
mov
lods
rcll
sbb
push
inc
aaa
or
jno
pop
js
lret
adc
jne
mov
push
mov
cmp
push
inc
test
sub
mov
push
jmp
fldt
add
les
clc
subb
test
push
xchg
jge
sbb
pop
push
xchg
push
lods
adc
lcall
push
push
pop
aas
add
out
jg
jo
or
pop
jge
ljmp
push
jl
add
pop
push
aam
xor
addr16
pop
js
cltd
mov
adcl
fsubl
add
xor
pop
sti
sbb
or
dec
cwtl
pushf
pop
dec
fcomps
movsb
clc
das
adc
push
out
adc
js
rcll
les
aaa
sbb
cmpsl
pop
cmp
mov
aam
push
push
add
dec
test
mov
push
test
sub
icebp
scas
jo
mov
in
imulb
cwtl
lret
mov
mov
inc
mov
pushf
push
aam
push
push
dec
dec
test
mov
push
hlt
sbb
test
mov
fs
repnz
mov
inc
test
jmp
dec
dec
and
ljmp
push
dec
sbb
xor
sbb
xchg
mov
add
fidivl
push
push
fwait
les
jl
fimuls
movsb
push
xor
pop
dec
jp
ds
xchg
mov
lahf
mov
fcompl
push
in
push
xor
loop
add
inc
sbb
out
jge
mov
adc
pusha
lds
xor
sbb
sub
sbb
int3
jp
pop
xchg
cmp
jbe
cs
jo
push
lahf
dec
mov
jo
test
test
ljmp
mov
lret
sbb
pop
cwtl
ficompl
sbb
jns
jl
inc
aas
xchg
or
xchg
adc
mov
mov
aas
stos
sub
add
aam
cmp
mov
cmp
dec
data16
mov
cwtl
mov
adc
jae
cwtl
or
add
and
push
fdivr
xchg
mov
xchg
lret
aas
rcrb
clc
push
aas
add
bound
incb
mov
or
xchg
dec
xor
cld
jo
dec
arpl
idivb
mov
or
mov
ret
dec
and
out
sbb
add
sbb
pop
add
pusha
jnp
adc
inc
loop
jbe
cwtl
add
cmp
mov
sub
xchg
dec
push
jp
leave
or
inc
cmpb
pushf
xor
push
adc
jno
push
mov
inc
aas
cmp
jae
sbb
or
sub
and
imul
pop
idivb
inc
movsb
inc
and
dec
cmc
mov
jae
mov
jb
cld
mov
inc
push
inc
pop
push
jge
mov
xor
sbb
jg
popf
cmp
adc
or
mov
jno
add
mov
scas
nop
dec
lea
sub
mov
pop
dec
add
push
cmp
inc
cmp
adc
inc
xchg
mov
inc
and
and
popa
add
mov
adc
mov
mov
xlat
mov
sbb
jns
or
adc
push
add
fstpt
pusha
and
cmp
or
arpl
add
inc
mov
jb
pusha
mov
add
mov
push
test
decb
xchg
ret
data16
inc
shrb
lcall
or
mov
jp
xchg
mov
xor
or
add
adc
loope
xchg
xchg
pop
ds
sbb
into
push
mov
add
or
inc
dec
sahf
jo
clc
repnz
mov
enter
push
or
or
in
xchg
ljmp
orl
mov
aam
cwtl
or
mov
push
cmp
add
pop
or
mov
xchg
mov
mov
ret
xor
adc
jns
shrb
inc
aam
push
pop
or
cld
push
or
push
jnp
sub
pop
adc
cmp
xchg
push
outsl
cmp
ds
push
dec
paddsb
mov
rclb
jle
ljmp
or
dec
xor
sub
xchg
or
ret
mov
cwtl
in
fisttps
test
sahf
inc
mov
cwtl
push
insb
inc
insb
into
inc
dec
sub
jp
data16
or
xchg
data16
xor
mov
fs
push
jle
mov
push
scas
push
add
dec
rcr
push
pop
push
push
inc
fisubrl
out
inc
imul
push
rorb
cmp
mov
xchg
jle
mov
jp
dec
fwait
adc
in
dec
mov
xchg
xchg
mov
sbb
push
cmp
inc
js
andl
xchg
adc
push
ds
dec
xchg
pop
iret
pop
int3
loop
or
subl
cltd
pusha
adc
jo
call
cmpsb
pop
dec
mov
loope
jp
cmpb
lcall
outsb
ds
dec
or
push
out
add
cmp
fdivs
cmp
xchg
out
xchg
sbb
add
stos
xchg
push
sbb
sub
data16
incl
aaa
sbb
test
pop
imul
xchg
sub
ss
jecxz
in
inc
and
pop
cld
arpl
push
movb
pushf
pushl
popl
pushl
pusha
movb
pushl
pushl
ret
std
rorb
mov
mov
das
icebp
dec
mov
enter
lods
cmp
sarl
adc
enter
jg
ds
call
ret
hlt
js
sub
fldenv
int
jmp
push
into
mov
into
repz
mov
cld
and
fwait
ljmp
popa
fsubs
gs
inc
mov
inc
mov
std
and
push
xchg
inc
les
push
nop
es
push
inc
push
out
adcb
and
mov
add
shlb
inc
jns
int3
or
adc
push
sbb
das
clc
sarl
push
dec
and
mov
in
cmpsb
inc
cmpl
pop
cmc
fwait
jp
inc
dec
mov
les
insb
pop
push
stos
mov
scas
dec
dec
stos
push
cmpsb
push
pop
pop
xchg
popf
leave
arpl
cmp
push
dec
ret
or
movsb
jge
nop
ss
xor
outsl
std
pusha
cmp
mov
arpl
das
xor
xor
pop
ret
cld
cs
call
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
xchg
or
push
lcall
or
out
or
test
add
push
pop
sbb
ret
cmpsl
ret
push
xchg
xorps
cmp
mov
or
aas
daa
scas
xor
imul
daa
pop
pop
sub
mov
test
shrl
push
hlt
inc
fcmove
jg
lahf
pop
out
in
mov
adc
dec
inc
add
add
sbbl
pusha
pushl
call
xchg
not
movzwl
jmp
mov
pusha
call
and
push
pop
enter
or
mov
das
cmp
xchg
iret
fstps
and
pop
outsl
stc
rclb
fiadds
add
jmp
or
dec
push
imul
jnp
cmpsb
cli
insb
enter
inc
sub
in
pop
xchg
lds
outsb
sbb
jb
pop
xchg
out
lahf
jno
xchg
sub
pop
arpl
add
sbb
mov
adc
rolb
mov
int
or
rcl
mov
je
xor
push
adc
dec
dec
pop
push
sub
lcall
mov
test
daa
dec
add
popf
add
xchg
dec
inc
push
or
lcall
insl
inc
les
mov
inc
add
push
and
jge
cmp
aad
sub
push
popa
fsub
inc
xor
pushf
inc
cmc
movsl
clc
popl
xchg
cld
mov
xor
add
lock
fnstsw
push
into
js
jge
cwtl
inc
mov
dec
or
mov
and
mov
sub
or
adc
add
mov
bound
or
lock
push
shll
hlt
loope
mov
add
dec
xchg
and
jo
inc
pop
dec
jae
mov
add
enter
sbb
sti
mov
lds
lds
xchg
xchg
cli
add
add
xor
test
js
xchg
shrb
adc
aad
jl
push
shl
daa
mov
aam
int
jl
jnp
lahf
in
push
insl
adc
jmp
pop
mov
js
add
pop
popa
sbb
mov
lret
or
jl
sti
dec
cwtl
fstps
xrelease
adc
sarl
dec
dec
push
lock
sbb
stos
aas
cs
cs
aad
and
insb
push
lahf
out
push
adc
imul
mov
dec
or
add
jl
sti
pop
sbb
jp
lret
jb
je
cli
mov
rclb
inc
xor
xchg
pop
or
fbld
fists
inc
sbb
cwtl
outsb
adc
adc
scas
and
mov
dec
xor
mov
mov
aas
or
movsb
loop
pop
dec
jne
ret
test
add
mov
and
pop
jge
mov
jle
testb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
rcrl
rorb
mulps
sbb
fimuls
imul
add
nop
push
or
push
js
cmp
enter
and
bound
ret
enter
inc
sub
enter
add
inc
xchg
pushf
pop
out
in
mov
addb
cwtl
bound
sbb
int3
sbb
loop
mov
or
xchg
sub
loopne
gs
divb
push
mov
je
adc
jae
mov
shll
xor
or
mov
add
inc
adc
mov
idivb
mov
mov
sbb
mov
incb
aaa
cmpsb
xor
stos
rcrl
dec
cld
lret
xchg
sub
mov
pop
lock
adc
pop
mov
or
mul
xor
dec
mov
ja
lret
aaa
cmpsb
xor
shl
int3
stos
loopne
inc
mulb
loopne
add
jecxz
xor
dec
cli
insb
imulb
lods
mov
test
in
cmp
push
hlt
test
ret
popf
mov
sbb
popa
and
rorl
mov
xor
ja
push
push
xor
jo
mov
push
or
loop
inc
aas
mov
mov
pop
fbstp
jp
les
sbb
jl
sbb
mov
jne
cmp
aaa
push
insl
adc
mov
inc
mov
cmp
pop
xchg
pop
cmpsl
outsb
dec
fsubl
aad
adc
mov
fnsave
pop
sbb
mov
adc
js
std
unpckhps
rorl
in
xchg
ret
mov
outsl
dec
push
inc
mov
rcrl
or
insl
lahf
lea
lods
js
fmull
sub
insl
clc
popa
lahf
fistpl
adcl
adc
sbb
sbb
aam
adc
int3
loop
fadds
push
mov
jb
inc
ret
sub
lods
aam
sbb
push
inc
stc
stos
fimull
jbe
mov
xchg
lods
jbe
fcompl
lret
stos
add
or
mov
mov
cwtl
sbbl
clc
mov
jp
xchg
xchg
dec
movsl
icebp
int3
mov
add
daa
cmp
push
mov
dec
lcall
std
test
outsl
add
push
or
ja
dec
xchg
into
pop
or
nop
mov
mov
push
test
and
roll
imul
mull
mov
or
repz
dec
jbe
jmp
add
adc
jb
mov
pop
add
xor
cmp
dec
or
shlb
pushf
pop
sub
movsb
aad
mov
mov
loopne
dec
jmp
rorl
pop
dec
jae
add
loope
enter
and
out
aam
rcrl
jge
insl
fldcw
sti
mov
fbld
and
dec
pop
ret
add
mov
or
jne
mov
xor
pop
xor
enter
and
inc
sbb
jg,pt
frstor
lret
imul
push
add
loope
and
lock
cmp
xchg
sar
sbb
dec
push
xlat
push
xor
ret
lods
lcall
mov
push
out
push
dec
jno
jbe
mov
cmp
mov
bswap
lea
call
es
ror
or
push
cmp
mov
jmp
loop
cmp
push
sub
sti
outsl
cmp
jne
jns
ret
push
xchg
bound
cmp
mov
add
popf
lods
decb
push
ficoms
xchg
repz
bound
dec
ds
aam
in
bts
mov
push
addl
dec
shll
mov
push
dec
pop
inc
enter
iret
repnz
aaa
jecxz
inc
cld
cmp
xor
dec
cmc
sub
outsl
ss
pop
mov
mov
filds
add
or
push
xchg
loope
add
ret
ja
xor
loope
add
jb
push
shrl
jge
movsb
push
lods
std
mov
adc
repz
fnstsw
ds
push
subb
sbb
sub
cltd
cmpl
pop
in
ficompl
fsubrs
test
inc
ds
add
pop
jno
rorl
push
in
jp
frstor
push
outsb
mov
push
or
and
nop
ficoms
mov
xor
or
shl
adc
mov
jae
aaa
lds
es
add
leave
xor
xor
sub
sub
iret
imul
mov
inc
mov
pop
push
ror
test
out
pop
mov
mov
es
adc
test
add
jne
jae
shlb
nop
mov
add
aam
scas
loopne
push
and
fs
pop
stos
rorl
scas
mov
pop
test
int
inc
adc
sub
in
movsb
sbb
arpl
and
sbb
iret
outsl
add
aad
adc
jmp
stc
bt
pushf
add
add
push
call
loop
push
into
or
mov
jo
aam
adc
nop
ret
xchg
mov
lahf
push
sub
ljmp
add
cltd
sahf
sbb
fucomp
movsb
sub
xchg
in
sbb
sarb
outsb
cmp
mov
dec
repnz
adc
iret
mov
and
test
arpl
add
xchg
out
pushf
movsl
mov
inc
jns
pop
push
out
mov
ds
mov
xor
xchg
mov
push
cmp
int3
jne
sub
push
imul
adc
mov
mov
xor
imul
adc
sub
or
fsubl
into
or
std
dec
mov
adc
push
movsl
test
test
dec
jp
loopne
pop
push
and
fs
push
mov
shll
push
pop
dec
stos
mov
push
cwtl
inc
fwait
fbld
ss
mov
movsb
test
xchg
mov
or
jns
mov
lock
sbb
push
inc
cmp
iret
or
fildll
adc
test
test
inc
fisttpll
mov
cmp
mov
imul
jnp
jo
adc
xchg
add
inc
inc
pop
call
rorl
mov
or
sbb
or
es
in
mov
pop
jae
sbb
mov
cmp
fadd
sbb
mov
fs
mov
add
inc
and
sbb
push
jmp
fs
jne
movzbw
mov
push
pushf
mov
push
lea
jmp
loop
push
or
shlb
testl
data16
mov
mov
nop
enter
pushf
xchg
sub
and
cmpsl
lcall
iret
js
sahf
push
mov
adc
or
lcall
testb
cwtl
loopne
mov
xchg
pop
jbe
cmpsl
inc
push
repz
push
mov
pop
adc
int3
jnp
xchg
jg
xlat
mov
ds
ljmp
jne
inc
pop
pusha
mov
les
cmpsb
fildl
jl
sti
mov
out
cmp
add
dec
push
inc
daa
pop
cwtl
enter
sahf
or
call
pop
addr16
mov
loop
jae
ja
push
leave
movsb
shlb
ja
lret
shrl
out
pop
popa
sbb
adc
push
out
mov
dec
adc
mov
outsb
jb
in
mov
mov
clc
sti
inc
mov
ljmp
insb
xchg
ret
fwait
adc
jbe
xchg
cmp
dec
mov
adc
mov
pop
sub
ja
xor
hlt
cmpsl
xchg
mov
popa
cmp
push
popf
leave
or
cmp
pop
test
lahf
jmp
xchg
mov
lea
xchg
mov
pop
fcomp
bound
sub
aam
clc
sbb
mov
or
hlt
jmp
push
lret
es
inc
jo
add
ss
jmp
lret
idivb
leave
or
lcall
imul
lret
mov
mov
jle
jmp
xor
movsb
dec
scas
or
push
stos
fimuls
lret
imul
inc
pusha
fcomip
arpl
add
fs
sub
dec
fcmovne
xor
xlat
and
inc
aas
inc
std
rolb
xchg
jne
push
xchg
movsb
fildl
sub
shrb
dec
sbb
dec
push
or
cmp
xchg
xchg
ror
dec
sar
mov
rcr
sbb
test
mov
stc
test
cmp
xchg
rcr
clc
mov
stc
cmp
pusha
push
sub
pushf
lea
jl
rep
lea
mov
pop
pusha
lea
jmp
out
fs
mov
mov
rolb
push
sub
outsl
push
pop
push
add
loopne
mov
xor
test
add
test
inc
xchg
in
mov
xchg
dec
inc
mov
jp
sbbb
lcall
or
sub
dec
movntq
mov
movsb
sahf
push
and
jnp
push
loop
lock
dec
in
xor
push
js
jo
push
out
xchg
dec
shrb
enter
cli
sub
xlat
sbb
or
fwait
stos
cmp
cld
dec
sbb
fmull
dec
fwait
mov
inc
movsb
stc
xor
dec
popf
ret
sub
xor
mov
mov
push
cvtps2pi
push
movsb
and
inc
xchg
cmp
push
int
filds
sub
push
fstpl
jmp
popf
imul
dec
adc
adc
jns
mov
fs
stos
aad
std
pusha
cltd
pusha
mov
xchg
in
pushf
iret
pop
fistpl
jg
aam
lcall
jge
lret
or
jbe
jno
push
and
inc
rolb
push
xchg
test
or
jecxz
movsb
lret
in
cmpsb
or
leave
fwait
ret
insb
lock
fisubs
sbb
jno
pop
outsb
cmp
mov
mov
aas
inc
in
filds
xor
je
sub
lods
and
lret
jns
pop
mov
and
test
lock
push
bound
mov
xchg
outsb
hlt
into
mov
jae
gs
xlat
jle
sahf
mov
clc
mov
push
jmp
sbb
lea
lahf
lods
fadds
and
fidivl
or
jl
mov
imul
aas
jno
inc
int
push
test
js
daa
xchg
cs
insl
leave
mov
ljmp
stos
cs
enter
mov
in
daa
push
xchg
daa
lods
push
cmpsb
cmp
fadd
jnp
clc
sbb
out
push
jnp
push
psllw
push
push
mov
repz
testl
aam
pop
add
insl
adc
das
fsubrl
js
cmp
dec
int
nop
call
mov
push
sub
lcall
aad
in
inc
lcall
mov
cmp
or
and
rep
xchg
dec
and
inc
pushf
xor
imul
insl
adc
cltd
inc
mov
setp
push
xchg
xchg
mov
movsbw
setb
mov
sets
call
or
xorb
cmpsb
hlt
mov
repz
js
cmpsl
sti
in
fldl
aam
data16
notb
and
jnp
or
aam
sbb
imulb
sbb
cld
es
or
das
imul
pop
sub
inc
jmp
and
adc
mov
jb
adc
push
js
int3
pop
pusha
sbb
mov
push
pop
stos
push
sub
cltd
mov
cmp
push
dec
movzwl
pop
inc
sbb
jns
cmp
imul
sti
mov
xchg
loop
ljmp
adc
loope
shlb
jl
push
dec
jae
cmp
cli
cmp
mov
stos
dec
and
dec
in
iret
lahf
mov
mov
dec
cmpsl
adc
mov
push
cld
xor
test
loope
and
mov
pusha
outsb
mov
insl
test
cmp
gs
aad
xchg
in
repnz
xchg
insb
jb
push
or
bound
inc
aaa
imul
mov
mov
push
mov
mov
mov
shrb
xchg
xlat
gs
fisubs
inc
int
xchg
in
mov
or
or
sti
ret
push
push
add
fwait
push
iret
faddl
xor
cltd
push
mov
int3
cmp
call
mov
jecxz
stos
mov
cmp
jecxz
mov
pushf
shlb
jle
jp
push
push
xchg
sub
jmp
pop
sub
push
add
bound
ret
inc
sbb
sti
test
pushf
sbb
sub
inc
mov
or
test
pop
add
cmpsb
incl
push
fldcw
sbb
mov
out
cmp
stos
lea
outsb
testb
add
push
push
add
or
dec
jae
push
mov
test
cwtl
hlt
push
lret
sub
mov
adc
mov
ljmp
jnp
andb
into
jne
iret
or
sub
cli
insl
mov
ret
lods
sti
and
test
imulb
fwait
cbtw
add
cmp
cmp
inc
jle
xor
cld
add
inc
gs
imul
inc
add
cmovne
test
push
popa
pop
inc
push
movsl
push
and
test
cli
imul
iret
aam
mov
inc
nop
inc
loopne
std
push
add
lea
arpl
cld
jne
xchg
daa
lret
or
adc
nop
jmp
dec
je
jp
in
jo
and
lock
add
fcomps
inc
fsts
inc
out
fsts
loop
pop
add
dec
call
mov
add
push
jnp
push
push
fwait
jo
int
adc
jmp
out
lods
faddl
hlt
in
arpl
cmp
xchg
int
push
lea
scas
std
pop
ret
xlat
cmpsb
mov
insl
fs
xor
cs
insb
add
push
pop
push
cs
leave
fsubr
mov
mov
arpl
jecxz
mov
sub
cmp
js
mov
mov
in
iret
xchg
adcl
out
mov
pop
jbe
cmp
push
mov
sub
hlt
movsb
cltd
jne
jbe
xchg
mov
and
fiaddl
mov
mov
in
xchg
iret
cltd
fs
pop
and
cmpb
mov
push
pushf
mov
not
movsbw
pusha
mov
pushf
pushf
pushf
pushl
ret
lea
jne
pushf
stos
pushl
pushf
lea
jmp
mov
not
movsbw
push
push
mov
push
pushl
ret
jmp
pushl
inc
pusha
mov
lea
jmp
cmp
pusha
pushf
lea
jbe
and
stc
sub
adc
jmp
jmp
pusha
pushf
call
inc
add
mov
push
fsubrs
fmul
fisttps
ljmp
pop
out
repz
lods
mov
dec
aaa
add
and
push
mov
aad
aaa
mov
arpl
mov
or
xchg
scas
ds
nop
call
jge
or
sub
sbb
stc
iret
mov
mov
bound
fsubrl
xchg
xchg
out
adc
push
or
orps
out
fstpl
jno
fldenv
and
mov
push
jge
fmulp
lcall
int3
mov
mov
or
and
xchg
je
or
xor
les
cmpsb
mov
mov
andl
hlt
aam
test
xor
mov
jno
and
xor
add
inc
pop
daa
mov
adc
fisttpl
cmpb
push
dec
push
push
jne
push
fcmovnu
sub
add
mov
not
pop
pushf
pushl
ret
sub
push
mov
mov
jne
mov
shl
xchg
inc
push
or
pop
add
popa
push
dec
mov
jo
xor
jb
sub
leave
lret
js
jae
mov
rol
xchg
jmp
fists
ja
dec
push
les
add
jg
dec
and
out
xor
nop
in
add
data16
add
insl
pop
hlt
fiaddl
shll
jecxz
rcl
push
push
mov
cli
sbb
lcall
push
and
push
imull
push
cmp
in
out
sahf
or
ljmp
pushf
imulb
lods
jne
pop
xchg
loopne
es
push
call
push
sub
test
jmp
rcrb
xchg
cmp
mov
cmp
mov
push
push
bound
rol
jae
repz
popw
cbtw
shll
dec
lcall
scas
movsb
lret
sbb
pusha
adc
xchg
adc
es
jns
aas
scas
pop
mov
je
push
nop
xor
cmp
imull
xlat
push
lret
fcmovu
mov
mov
fucompp
lock
mov
inc
jp
pop
inc
ds
ljmp
push
push
pusha
call
pop
gs
or
imul
dec
pushf
jmp
ja
or
xchg
add
mov
loope
mov
jae
or
jmp
push
mov
xor
cld
and
mov
shr
adcb
adc
xchg
cltd
pop
ret
mov
push
and
sub
jbe
insb
mov
sub
mov
jns
xor
bound
div
mov
repnz
adc
cmc
adc
flds
fisubrs
xchg
push
or
inc
fisubl
inc
mov
arpl
cwtl
lret
arpl
jb
sub
inc
xlat
hlt
lock
mov
popa
es
jo
or
rcr
ftst
sbb
pushf
dec
ficompl
pushf
mov
lock
sbb
inc
lea
mov
push
mov
jb
fbstp
aam
lods
call
es
xchg
inc
sub
imul
and
in
fiaddl
aad
int
jp
cmp
in
dec
mov
push
sbb
in
das
dec
cltd
push
lret
cs
sarb
add
pop
in
lret
jmp
pushf
imul
sub
inc
ljmp
mov
in
sbb
mov
js
in
hlt
aas
dec
and
in
aaa
ljmp
dec
in
fcoms
and
xchg
out
in
push
xchg
and
sbb
aad
add
out
add
adc
xor
push
sbb
loope
loopne
xchg
sbb
dec
sbb
fmull
fcom
xchg
in
lods
daa
insb
mov
clc
in
inc
mov
lds
data16
ror
mov
icebp
inc
scas
in
cwtl
in
out
mov
sub
in
or
arpl
icebp
jmp
lods
ljmp
push
iret
inc
pop
and
sub
xor
pop
xchg
mov
or
sbb
mov
hlt
add
inc
loopne
lock
js
lret
dec
data16
xor
adc
cli
mov
jb
push
cmc
ja
popf
lock
xchg
sub
fs
dec
cwtl
loop
loopne
test
and
mov
pop
sbb
sbb
or
lea
xor
mov
fistpll
orb
jo
fcoml
movsb
in
sbb
mov
inc
in
rclb
dec
jnp
sbb
dec
and
out
aam
sbb
in
cmpsb
pop
cli
push
cmp
sbb
adc
movsb
addr16
jl
push
stc
xchg
in
mov
les
adc
gs
add
push
cmpsl
pop
andb
jmp
xchg
sub
into
mov
loop
xorl
in
fimuls
cmp
shll
xor
call
int
lret
or
jg
xchg
pop
push
clc
lock
lds
add
lea
jb
push
in
jle
outsb
or
nop
in
out
xchg
push
cmp
frstor
leave
xor
sub
jl
push
je
sub
jp
inc
add
and
jecxz
jbe
lods
sbb
popa
loope
or
faddl
jnp
pop
loopne
enter
shl
scas
bound
or
mov
paddw
inc
ret
jmp
and
aas
mov
xor
out
in
push
cli
into
nop
mov
add
or
push
lcall
in
popf
les
out
jle
push
jno
jg
jae
jl
adc
out
sbb
adc
negb
ljmp
in
mov
int3
iret
mov
cli
push
stos
aas
das
jle
sbb
jmp
mov
push
in
xor
leave
jle
jl
pop
sub
in
adc
cmp
mov
mov
ret
mov
and
loope
sub
in
les
insb
sbb
add
popf
cmp
sub
arpl
fwait
pusha
in
repnz
cmp
andl
rorb
in
push
imul
std
cmp
mov
rclb
sbbl
nop
in
fmull
add
xchg
xchg
in
out
push
hlt
add
sbb
fmull
mov
fwait
adc
push
fs
sar
lock
test
mov
in
pop
jo
mov
jg
sub
sub
mov
fs
xchg
fisubrl
inc
mov
push
repnz
adcb
movsb
movsl
inc
sub
inc
out
jb
jnp
dec
in
mov
xchg
cmp
testb
jo
mov
sub
sbb
sub
in
lcall
shll
lods
hlt
imul
aad
inc
xchg
pushf
dec
xor
and
hlt
xchg
mov
sbb
loop
popa
xchg
enter
in
out
xor
inc
in
cmp
ljmp
mull
ret
dec
sub
arpl
and
xor
leave
pop
fsts
in
xchg
test
and
mov
xchg
test
clc
pop
mov
fldt
add
mov
enter
pop
xchg
pop
sti
movsb
leave
xchg
js
sub
mov
pop
mov
mov
dec
sahf
fdivrp
les
and
fwait
mov
pop
loopne
jne
xchg
fimull
and
addr16
lahf
fildll
add
jb
jle
sbb
cltd
or
push
inc
imul
adcl
pop
sbb
jmp
subl
rcrl
fistpl
sahf
test
cmp
dec
sbb
movsb
popa
push
adc
ja
outsb
jbe
pushf
inc
xchg
xor
inc
in
mov
jmp
mov
fs
xor
ss
and
or
push
add
or
cli
ljmp
shll
dec
in
je
pop
insl
insb
mov
pushf
ss
dec
outsl
pop
sbb
ja
inc
sbb
fstp
movb
in
and
in
xorl
add
sbb
cmpsb
in
repnz
xor
je
pop
dec
push
xor
xchg
mov
and
hlt
imul
pop
sub
les
pusha
adc
in
push
loop
mov
inc
jnp
push
or
mov
out
push
adc
add
sub
ss
pop
cmpsl
imul
cld
in
add
testl
mov
push
pop
int
je
ucomiss
rcll
mov
push
push
add
clc
add
mov
ljmp
inc
sbb
cmpsb
test
scas
les
cmc
in
sbb
mov
test
scas
in
fwait
xchg
sub
aam
add
dec
lret
and
fsubr
pop
and
mov
ficoms
add
cmp
jae
push
or
imul
inc
inc
pushfw
repz
and
sub
in
sub
cmp
xor
popa
clc
sbb
xchg
sbb
or
jp
mov
push
cmp
stc
rorl
inc
outsl
inc
in
mov
cmp
inc
in
mov
scas
sbb
pop
subl
in
sub
bound
cld
pop
in
dec
and
adc
sbb
enter
add
in
sti
shlb
and
or
sbb
push
adc
xor
in
jl
inc
sbb
push
aas
or
mov
sbbb
fwait
and
and
jnp
in
in
fisttpl
and
sbb
loope
rorl
shlb
mov
jb
insl
lea
jecxz
imul
imul
mul
rclb
jl
ja
pop
sbb
sbb
ret
sbb
xor
fwait
je
add
adc
and
mov
nop
push
and
loope
xor
fisubs
xor
insb
lea
fcoms
sbb
cmp
es
push
or
push
pop
push
mov
push
pop
dec
inc
xchg
jae
popa
cmp
cmp
ret
or
cmp
push
push
repz
fcoml
cmp
push
jo
pop
imul
push
and
pop
xchg
sbb
jne
jno
or
dec
rolb
jne
jae
arpl
lods
jbe
les
je
push
cmp
js
les
push
and
push
outsl
sbb
mov
adc
push
xor
sbb
jb
jns
pop
dec
pusha
mov
addl
lods
jbe
adc
clc
jne
push
je
jns
shrb
push
or
jecxz
jnp
loopne
ret
and
jo
pop
push
je
gs
orb
push
je
jns
lcall
jnp
je
adc
in
jbe
push
push
xor
cmpsl
adc
les
sbbb
cmp
sbb
and
aaa
sub
inc
push
xchg
lcall
pop
sbb
or
adc
test
mov
sbb
xchg
xchg
or
pop
lea
mov
sbb
sbb
orb
test
cmpb
pop
int3
and
dec
pop
xchg
stos
or
repnz
das
push
xchg
ljmp
pop
dec
test
lahf
aam
jbe
cmp
cwtl
enter
mov
or
data16
fs
lods
outsb
lahf
clc
sbb
cmp
lea
add
adc
add
push
sbb
sub
inc
xchg
cmp
pop
hlt
push
add
into
lods
and
sbb
and
pop
xchg
cld
je
cld
pop
inc
push
js
sbb
xor
pop
sbb
and
out
pop
add
jnp
add
out
movsb
div
js
sbb
sub
sub
movsl
and
repz
fdivrs
data16
sub
in
scas
xlat
test
fmul
mov
or
adc
push
adc
les
add
or
movsb
dec
or
add
je
push
cmp
aam
and
dec
and
jp
and
sbb
pop
sub
pop
pop
cs
pop
cmp
insl
jp
adc
mov
fstpl
pop
pop
in
mov
fcomps
movsb
or
sub
pop
pop
sub
ja
int
jge
movsl
std
xor
negb
push
fstpt
repz
mov
movsl
ret
hlt
aam
das
pop
and
cltd
jb
sub
pop
lea
negb
fldcw
pop
sti
pop
loope
out
scas
aad
test
pop
adc
push
sub
sub
mov
inc
popa
xor
sbb
xchg
cmc
pop
inc
in
int3
sar
mov
xor
inc
std
fsubs
pop
repnz
shll
test
xor
xlat
fcomps
iret
and
insb
and
sarb
das
mov
pop
arpl
pop
sub
cmpsb
pop
xor
les
add
cmpsl
std
jl
fdivrs
std
sub
cltd
aaa
jg
js
xchg
pop
xor
and
movsl
xor
fwait
shrl
xor
leave
cmc
lret
enter
repz
jp
aam
jle
js
add
jl
and
into
pop
outsb
cmp
jmp
jns
mov
jle
jp
lret
xchg
nop
mov
push
mov
stos
aam
or
add
mov
mov
mov
sbb
pop
repz
sbb
push
cmp
sbb
arpl
sbb
pop
cmp
sahf
test
and
sbb
cli
push
mov
inc
mov
and
dec
sub
adc
ud2
mov
add
scas
push
cli
or
jbe
sub
lahf
repnz
ftst
cmc
mov
fcoms
push
out
push
test
and
sbb
push
sub
lea
add
push
push
in
fistl
xor
pop
hlt
out
cltd
test
movsl
ret
into
jl
je
sbb
sti
add
lahf
clc
icebp
xor
pop
fs
jecxz
jmp
and
sbb
xor
cmp
pop
icebp
ljmp
pop
push
cli
ljmp
in
nop
cmpsl
pop
lods
sbb
nop
enter
shrl
jg
outsl
pslld
or
ljmp
pop
mov
mov
xor
mov
filds
pop
sub
push
adc
jmp
loop
sub
testb
jmp
sub
sbb
jg
jno
dec
jmp
mov
xorb
clc
loopne
lahf
pop
xrstor
jae
das
dec
sbb
stos
into
leave
fs
jae
cmp
popf
insl
ret
repz
jne
mov
ja
dec
jae
insl
xchg
out
rcrl
in
lahf
cld
test
sbb
lods
hlt
sub
pop
add
or
pop
aam
and
sub
std
jle
or
xchg
or
pop
js
outsb
jae
jns
and
bound
out
movsl
mov
je
daa
fdivrs
int3
stos
iret
cmp
sub
xchg
lret
into
xchg
adc
mov
mov
jbe
push
insl
dec
push
pop
push
je
pop
jbe
push
jle
xor
loop
and
scas
dec
ficoml
lods
fucomip
lock
xlat
sbb
fsubrs
mov
mov
push
pop
insb
jae
jne
xchg
sbb
sub
sub
sbb
and
xor
mov
add
das
js
dec
jns
ja
mov
fdivs
dec
imul
clc
insb
arpl
outsb
jg
movsb
aad
push
lret
sub
mov
and
adc
pop
mov
jnp
push
daa
jne
jae
aaa
in
scas
leave
mov
test
adc
cmp
mov
pop
fwait
sbb
pop
fistpll
or
dec
pop
jle
add
adc
cmp
mov
mov
cli
stos
push
sbb
sti
mov
sbb
mov
in
or
xor
cmpsb
xor
sbb
xor
mov
sub
jb
mov
pop
mov
adc
xchg
sbb
pop
cmp
xchg
mov
pop
sbb
jbe
mov
mov
xchg
mov
and
sub
sbb
sbb
cmp
or
sbb
sbb
out
loopne
outsb
xor
mov
or
add
mov
inc
push
pop
sbb
xor
sbb
fcompl
mov
nop
xlat
xor
sub
add
and
mov
adc
aam
clc
js
or
pop
and
sbb
sub
ljmp
loope
fsub
testl
mov
pop
or
adc
cmp
or
xchg
test
fs
cmp
inc
out
insb
mov
jecxz
jo
sbb
sbb
cmp
loop
sbb
xchg
mov
pusha
call
sbb
sbb
mov
cwtl
ljmp
sbb
mov
movsb
mov
cmp
and
push
sbb
aam
and
adc
xchg
aam
mov
and
loopne
nop
push
fmull
xchg
movsb
jg
sbb
xor
mov
xchg
or
cltd
mov
js
push
sbb
loopne
ja
xor
lea
sbb
mov
pop
fdivr
loopne
xchg
mov
lahf
sbb
pushf
sub
push
cwtl
pop
pop
cmp
pushf
cmc
add
jae
pop
sub
test
cmp
pop
repz
pop
popf
adc
aam
mov
insl
lcall
cmp
push
aas
jecxz
sbb
loop
loope
xchg
loopne
out
test
mov
sbb
pop
aam
mov
push
test
jo
sbb
sahf
mov
cmp
out
push
sbb
mov
add
xchg
loopne
sub
sbb
negl
sbb
push
sbb
sbb
jp
pop
mov
jmp
movsb
push
bound
push
nop
xchg
outsb
in
push
in
mov
inc
pop
inc
sbb
mov
test
push
sbb
and
lret
pop
sbb
sbb
dec
cmpsb
lret
push
push
mov
test
mov
sbb
or
sbbl
pop
loop
sbb
or
inc
or
dec
sbb
cs
loope
mov
cmp
xlat
ds
movsb
je
pop
cli
dec
sbb
adc
stos
and
ss
sbb
mov
sbb
enter
push
ror
sahf
decl
fs
in
push
pusha
nop
orb
lret
sbb
sub
jecxz
loop
negb
xlat
ret
pop
repz
mov
pop
adc
sahf
fwait
mov
sbb
cmp
adc
dec
enter
shrb
dec
loopne
ret
out
push
sahf
call
ljmp
cmc
inc
sbb
lahf
mov
cmp
pop
jmp
mov
sbb
adc
adc
adc
pop
pop
push
mov
adc
sbbb
sbb
or
shlb
inc
scas
aam
xchg
out
inc
mov
mov
ljmp
fs
adc
push
xchg
icebp
sbb
push
jecxz
sbb
test
adc
mov
ljmp
sub
sbb
adc
adc
mov
or
pop
mov
sbb
mov
or
or
cwtl
rorb
fmull
inc
push
loopne
insb
cmp
orb
in
repz
xor
mov
adc
clc
out
push
test
jg
push
scas
call
std
faddl
repnz
cmp
out
cmp
out
imul
les
sbb
iret
adc
mov
cmp
pop
push
or
sbb
sbb
sbb
mov
int3
ret
or
or
pop
mov
cwtl
pop
push
mov
cwtl
call
notl
repnz
fdivr
mov
sti
sub
les
mov
sbb
sti
pop
stc
mov
cmp
pop
repnz
pusha
out
mov
sbbl
sbb
fadds
push
movsb
jle
add
pop
add
mov
add
push
mov
xor
push
adc
sarl
or
and
insl
aam
dec
dec
mov
loop
nop
cmp
dec
test
xchg
std
out
aam
sti
jg
adc
push
rol
adc
loopne
xchg
out
mov
call
les
cli
pop
push
xchg
lock
loop
out
fcompl
or
and
shl
fdivrs
adc
add
fdivrs
adc
push
cwtl
rcrb
add
add
rorb
sti
lret
dec
adc
xor
mov
cs
shl
adc
shl
stc
rorb
adc
mov
sbb
nop
sub
and
dec
rclb
aam
mov
push
sub
idivb
ss
mov
or
adc
push
or
add
sub
cmp
cmp
sbb
push
add
dec
mov
cmp
push
rorb
sbbb
add
andl
les
lcall
mov
lock
xchg
repz
fsubrs
lods
ret
mov
sbb
xchg
push
ljmp
xorl
cli
mov
pop
dec
mov
loopne
mov
fdivrl
loop
mov
fmuls
mov
cmp
aas
orb
sbbb
pop
cmp
push
inc
sbb
cmpsb
sub
xor
jg
add
sbb
clc
in
sbb
fsubr
cmp
loope
add
sub
fsubr
andl
mov
divl
fwait
out
movb
cmpsb
std
cmp
repnz
jns
jle
in
pop
xlat
mov
mov
fs
jae
or
mov
mov
cmp
pusha
sbb
rclb
cmp
test
push
sub
cmp
add
xor
adc
rclb
jo
sbb
shl
fmuls
xchg
cmpl
les
mov
ret
xlat
notl
add
int
and
push
push
testb
les
clc
test
and
shl
subl
sub
adc
nop
sbb
push
je
push
test
xchg
xor
jb
sbb
aam
cs
sarb
adc
cmpl
pop
or
sub
mov
out
mov
mov
int3
std
shl
ljmp
fwait
mov
push
test
shll
iret
xor
adcl
push
movl
cmc
imul
cmp
into
inc
clc
shrl
add
pop
push
cmp
cmp
xor
adc
adc
repnz
adc
add
adc
add
rolb
or
adc
repnz
into
mov
mov
repnz
xor
sti
cwtl
dec
xchg
sbb
clc
xor
inc
scas
xor
adc
int3
cmp
ret
cmp
xor
ljmp
in
jge
xchg
clc
cmc
xchg
negb
fsub
xor
or
cld
add
ds
xor
cmp
dec
fdivrs
js
cmp
push
fsubrl
cmp
sbb
ds
sub
or
and
sub
adc
mov
add
push
fdivr
js
data16
sbb
or
mov
int
or
lret
or
mov
sbb
add
inc
enter
fcompl
xchg
clc
faddl
adc
or
pop
adcb
xor
pop
xor
xchg
xor
xor
cmp
push
rcrb
cmp
shrb
add
or
pop
les
mov
in
adc
cmc
mov
clc
jo
std
dec
hlt
mov
subb
mov
dec
xchg
sub
lret
sbb
sarl
and
xchg
adc
and
mov
and
repz
cmp
adc
rsm
sub
xor
movsb
jl
or
mov
add
fadds
fisubl
repnz
faddl
into
sbb
int3
je
dec
out
fdiv
and
mov
jmp
add
out
sub
lret
scas
data16
lret
pop
rolb
iret
mov
fidivs
dec
shr
jl
xchg
rorb
hlt
sub
das
out
mov
repnz
or
inc
push
imul
pop
xchg
push
ret
mov
inc
push
lods
rcrl
xor
xchg
bnd
and
ror
cmp
pop
ret
aas
addb
push
cmp
ljmp
inc
cli
out
test
push
mov
mov
fimull
lret
aam
cmp
fsubrl
pop
rcll
lret
ds
inc
jg
pop
call
lock
call
nop
mov
lds
stgi
cmp
push
xor
xor
push
cs
cmp
dec
and
pop
stos
add
pop
mov
mov
sbb
add
and
fsubs
mov
sub
adc
mov
ret
xchg
aaa
imul
sbb
dec
or
push
cwtl
or
addb
out
aam
test
cmpsb
mov
mov
push
lods
mov
scas
ror
adc
add
rolb
lods
rcr
adc
mov
cs
sbb
repnz
call
aam
cmp
mov
fcompl
and
push
stos
orb
dec
mov
inc
sub
add
inc
xor
pop
dec
inc
push
stos
dec
mov
dec
mov
sub
sub
sub
sbb
add
sub
push
ss
push
xor
cld
add
enter
out
inc
fisttpl
lods
inc
mov
push
mov
mov
xchg
shlb
mov
mov
mov
dec
lods
pop
aam
rorb
lock
leave
js
ret
mov
adc
and
xchg
pop
push
loop
sub
dec
adc
inc
push
jge,pt
jo
jne,pt
mov
cmp
mov
jnp
mov
rcrb
movsb
and
pop
aaa
add
cmpb
sbb
call
mov
mov
cmp
mov
sbb
mov
fwait
repz
cltd
mov
sahf
or
mov
mov
ds
inc
sbb
enter
call
aad
leave
mov
mov
das
mov
xchg
cmp
insb
dec
or
pop
jl
push
push
arpl
mov
cltd
inc
mov
cs
cmp
or
jp
mov
sub
xor
sbb
mov
pop
lods
sarb
cmp
push
inc
imul
jnp,pt
mov
jl
lea
arpl
mov
add
data16
outsl
shll
cmp
repnz
mov
scas
jo
cmp
pushf
test
mov
xor
cmp
sarl
mov
push
mov
lcall
dec
mov
das
les
rorb
sbb
mov
push
jp
shrb
cmp
mov
fwait
mov
insb
inc
cmp
mov
mov
pop
pop
dec
jae
inc
cmp
stos
rorb
rorb
pushf
cmp
mov
mov
rclb
cmp
jb
sub
into
js
pushl
fs
pop
mov
ds
cli
mov
lea
sarb
mov
sub
mov
test
in
jb
repnz
pop
dec
movsb
fdivl
mov
xchg
hlt
mov
xor
mov
or
mov
mov
sbb
loope
or
aam
or
inc
adc
lret
mov
mov
mov
jne
orb
mov
jo
xchg
push
xchg
aas
cmp
xchg
inc
lods
fdivrl
lods
pop
test
mov
mov
pusha
aas
jae
rorb
sub
xor
fdivrs
or
dec
fmull
cmp
ss
ss
mov
lcall
push
push
mov
rep
pop
sub
push
stos
cmp
inc
xchg
js
imul
cmp
cmp
push
pop
dec
cs
enter
cmp
xor
subb
push
cwtl
push
add
cmp
mov
lods
mov
add
dec
rclb
out
cmp
mov
mov
fwait
cmp
pop
pop
push
sub
fcompl
mov
aad
fdivrs
cmp
dec
sbb
xchg
cmp
popa
pop
mov
sub
movsb
dec
lret
dec
and
pop
cwtl
xor
mov
push
pop
aas
rclb
dec
jnp
jns
cmp
mov
sahf
inc
mov
dec
cld
ds
test
cmp
add
rorl
sahf
jnp
mov
dec
sahf
push
dec
mov
push
lods
adc
mov
mov
xor
pop
and
ret
push
sbb
pop
cmp
cmp
push
test
ds
push
jg
cmp
mov
pop
cmpsl
inc
and
dec
mov
xchg
shlb
insb
add
jle
into
inc
aas
push
push
mov
mov
es
shlb
lret
fadd
sbb
inc
aad
shlb
xor
lea
mov
cmp
mov
lcall
inc
rclb
js
popa
fcoml
pop
cmp
inc
mov
test
mov
push
or
push
adc
aas
mov
mov
push
rorb
cmpsb
add
out
push
jbe
orb
fmuls
lret
inc
cwtl
mov
imul
jnp
nop
dec
cmp
movsb
and
call
sbb
daa
mov
pop
xchg
test
mov
pushaw
shl
xor
sahf
cmpsb
lret
dec
xchg
fmull
add
mov
dec
orb
adc
lea
aas
mov
pop
movsb
push
cwtl
sarl
inc
xlat
mov
adc
sarb
push
dec
mov
mov
hlt
js
fistpl
sbb
xchg
daa
test
out
jg
addr16
ljmp
and
mov
cmp
pop
ja
negb
dec
xchg
pop
jae
and
mov
das
jbe
adc
push
enter
dec
push
roll
inc
dec
fidivs
mov
mov
adc
xor
jbe
mov
je
push
push
bound
int3
sub
scas
pop
mov
js
test
nop
mov
mov
xor
pop
mov
sbb
aad
jl
mov
movsl
cmpsb
subb
xor
mov
push
mov
xor
stos
mov
push
xchg
mov
js
mov
inc
fwait
xchg
jo
dec
xor
mov
movsb
pop
pause
and
sub
xor
out
sbb
push
ss
sub
push
cmp
clc
jae
orl
or
out
push
faddl
ljmp
lcall
fst
clc
les
xchg
loop
mov
xor
aas
mov
fcomps
test
cmpsl
inc
subb
fcompl
into
xchg
mov
dec
cmp
sbb
xchg
notb
push
pusha
adc
test
pop
cwtl
sub
inc
push
lcall
test
adc
xchg
cmp
pop
mov
xor
pop
mov
and
mov
push
xchg
xor
mov
add
xor
fsubp
cli
mov
into
xor
test
insl
sti
xchg
cmp
mov
sbb
cmp
nop
mov
inc
iret
xchg
cmp
ficoms
mov
jg
das
fdivr
mov
les
adc
sub
enter
lahf
mov
inc
cs
test
test
das
push
mov
pushf
inc
je
dec
push
fsubl
mov
sysenter
fdivrl
xor
mov
cmp
sub
ds
mov
mov
dec
loopne
xlat
adc
fsubrl
or
mov
shrl
adc
shr
inc
sub
mov
pop
mov
push
mov
dec
subb
or
int
push
push
cli
movsl
ret
dec
adc
repz
xchg
fdivl
pop
mov
lret
push
or
lcall
addr16
test
insb
aas
pop
lahf
xor
push
fdivrl
sti
js
sub
add
insb
sub
mov
dec
rclb
sub
inc
mov
adc
scas
push
pop
jle
fbstp
dec
clc
les
mov
stos
cs
or
insl
push
nop
pop
repnz
mov
lods
mov
cmp
stos
les
adc
jmp
jp
cmc
cmp
stos
jne
leave
dec
mov
push
xchg
mov
icebp
sbbb
je
push
ret
push
sub
xchg
pushf
cmp
sub
lcall
adc
cld
std
out
std
loop
mov
stos
or
dec
cmp
xchg
and
aas
add
mov
fcoms
or
jns
push
cwtl
les
ss
test
dec
dec
fsubrl
dec
add
fdivrl
rcll
adc
out
les
or
pusha
push
mov
pusha
pop
je
pusha
push
mov
je
dec
out
repnz
mov
xchg
mov
sub
sub
lcall
pushf
xor
xorb
adc
sti
xor
jmp
lods
fs
icebp
ror
and
mov
out
in
nop
ret
adc
add
repz
lret
call
sub
dec
cmpb
fs
loop
add
push
xor
adc
mov
inc
xlat
jne
js
pop
cmp
test
repz
xor
add
and
in
or
push
jecxz
les
hlt
pop
lcall
mov
mov
adc
and
lret
fcompl
lret
out
fildl
pushf
das
mov
adc
or
popfw
xchg
not
push
and
in
out
sub
xchg
push
fisttpll
push
add
mov
dec
ud1
es
pop
mov
in
xchg
in
lret
jecxz
cld
inc
stc
adc
push
mov
mov
arpl
mov
nop
in
fdivl
bound
inc
out
stos
cmp
mov
es
fstpt
dec
out
sti
lods
jg
pop
mov
push
jmp
fstpt
cmp
lea
fcmovu
xchg
sbb
pop
lods
roll
les
pop
sub
cmp
nop
mov
loopne
fnstenv
fdivrl
cmp
test
dec
lods
fsts
pushf
clc
cltd
mov
je
adc
arpl
adc
mov
xorl
pop
in
inc
mov
xor
into
inc
loope
sub
mov
xchg
xchg
cmp
fdivrs
ret
adc
sbb
pop
dec
lahf
je
test
adc
add
out
es
pop
inc
es
fsubl
dec
dec
in
mov
pusha
pop
xchg
data16
push
adc
aas
cli
cmpsb
push
rclb
rclb
or
fisubl
push
aam
adc
dec
es
pop
mov
or
adc
out
xchg
pusha
xchg
mov
test
xor
pop
jecxz
mov
xor
add
jecxz
push
push
jecxz
and
mov
popf
push
stos
rcrl
fstl
dec
test
fwait
stos
cmp
lret
or
pop
nop
loopne
test
dec
rorb
nop
push
adc
push
imul
jae
lods
pop
es
stc
ret
stc
mov
fldenv
std
aaa
add
add
orl
push
jl
adc
xchg
mov
into
xor
test
aad
jno
xor
mov
push
inc
pop
push
adc
gs
or
out
out
adc
pop
dec
popf
mov
fnstsw
sbb
or
fcomi
sub
inc
fisubl
adc
outsl
leave
dec
inc
cli
gs
fnstcw
cmp
loop
bound
fsts
adc
sbb
adcb
movsb
adc
leave
mov
ds
loopne
xor
jnp
add
sti
into
xor
jnp
xor
fistl
jmp
movsb
loope
adc
leave
and
mov
daa
adc
mov
push
adc
fs
or
lock
dec
mov
aad
rcll
fiadds
pop
mov
ljmp
int
inc
je
iret
jno
hlt
add
sbb
movsl
push
iret
xchg
adc
pop
out
mov
and
mov
data16
cmp
addb
sub
pop
test
fidivs
sub
sbb
loopne
int3
mov
cmp
ljmp
cmp
inc
pop
loopne
sbb
popf
fiadds
and
rolb
sbb
xor
stos
arpl
add
xor
xorb
mov
xchg
mov
mov
lock
adc
cmp
in
mov
mov
push
and
mov
mov
jle
lods
dec
push
int3
sub
into
jecxz
lods
jmp
inc
sub
popf
movsb
popf
mov
cwtl
je
mov
jp
adc
push
mov
push
jecxz
xor
push
gs
dec
lods
fdiv
xchg
js
push
sti
clc
pop
cli
jnp
dec
ljmp
fsubrl
inc
insb
add
in
in
push
sbb
adc
add
pusha
inc
je
out
cmp
aaa
rclb
xchg
lcall
pop
mov
dec
fmul
push
add
jmp
dec
fsubl
cld
cld
add
jmp
dec
loope
fs
scas
xchg
int3
pusha
lods
push
and
ret
fsubr
in
stc
mov
in
mov
pop
pusha
pop
xor
and
iret
cmp
add
ljmp
adc
adc
cwtl
or
fldenv
xor
cmp
xchg
outsb
xor
mov
inc
add
push
out
inc
add
movsb
inc
jne
dec
aam
inc
cmp
cmp
faddl
aam
nop
mov
mov
sbb
lea
adc
or
fstps
movsb
mov
mov
fidivs
nop
in
adc
ljmp
inc
lret
mov
lods
fst
rcrl
ret
cli
add
push
mov
and
or
fnstenv
dec
inc
push
enter
dec
in
and
fsubrl
sub
mov
in
ljmp
cld
bound
xor
rcl
push
es
sbb
inc
or
pop
jo
add
push
cli
out
sahf
or
jnp
jecxz
dec
ret
daa
xchg
fisubs
es
out
fnsave
cwtl
add
ljmp
mov
call
mov
xchg
push
es
cmpl
or
push
add
loopne
inc
cmp
pusha
ja
dec
pusha
pop
insb
xchg
lods
mov
icebp
dec
lret
dec
mov
mov
jno
jns
stc
fcompl
push
cld
fsubrp
pushf
hlt
ret
in
cmpsb
in
jmp
ss
adc
in
sbb
in
sub
insl
xchg
dec
xchg
mov
push
mov
in
mov
sbb
insb
jae
adc
mov
cmp
cmp
clc
sbb
jp
es
and
arpl
out
fnsave
or
pusha
pusha
add
inc
loop
pop
faddl
mov
push
lds
add
ljmp
cmp
pop
in
cwtl
or
push
call
or
add
data16
dec
cmp
sub
push
sahf
outsb
ljmp
mov
mov
jmp
hlt
adc
mov
dec
lods
pop
mov
jl
adc
adc
mov
dec
xchg
mov
cmpsb
pop
fdivrl
and
xchg
push
cmp
mov
icebp
pop
cmp
push
in
or
adc
mov
out
stc
mov
fiaddl
repnz
loopne
push
fnstcw
out
lcall
fldcw
cltd
mov
imul
and
cwtl
jae,pt
sbb
dec
sbb
mov
or
sahf
jns
pop
mov
sub
xchg
add
sti
mov
or
sbb
push
js
push
setae
es
pop
adc
clc
cmp
add
nop
dec
xchg
enter
inc
lods
cli
pusha
inc
xchg
hlt
pop
push
test
lods
xchg
dec
add
je
out
sbb
add
mov
mov
pusha
dec
dec
xchg
inc
push
test
aad
dec
mov
lea
ljmp
out
pop
mov
sahf
pusha
xor
add
push
cmc
dec
xor
mov
add
sub
lods
add
ficompl
cmpsb
xchg
xchg
jne
jge
es
adc
ds
outsb
xchg
push
pusha
inc
dec
imulb
es
lds
jmp
or
cld
and
je
push
shl
sub
fdiv
in
add
and
and
or
sarb
jnp
mov
or
les
mov
mov
dec
or
sti
les
cld
pop
pop
hlt
pop
enter
dec
cmp
es
pusha
aas
push
dec
int
xchg
cs
js
sub
push
or
xor
gs
inc
es
and
mov
cmp
cwtl
dec
and
pop
daa
es
inc
mov
out
dec
lods
dec
lret
cmp
fisttpll
icebp
frstor
outsl
mov
pusha
xchg
inc
int
or
sbb
cmp
mov
sbb
push
dec
movsb
or
push
fidivl
cld
in
jecxz
test
in
sbb
in
dec
sti
mov
add
and
in
pop
ret
lods
shlb
hlt
ds
and
sti
xorb
js
insl
js
fwait
stos
dec
pusha
fs
pop
pusha
outsl
lods
and
xor
or
or
je
mov
jmp
cmp
add
pop
je
pusha
and
jecxz
pop
inc
mov
sub
add
pop
call
flds
aaa
out
cld
mov
movsb
jmp
push
inc
pop
mov
push
fwait
loop
mov
push
icebp
add
mov
add
outsb
repz
mov
inc
sub
jecxz
push
jmp
sbb
in
pop
dec
aas
out
popf
in
rol
add
or
and
sbb
xor
scas
lods
lcall
test
cmpsl
je
pop
and
lods
jg
nop
mov
sub
sbb
jns
cli
and
push
pusha
push
sti
test
push
ljmp
cmp
loopne
jo
lret
daa
sub
push
lret
cmp
add
xchg
xchg
jle
out
xchg
call
in
pop
lcall
xchg
mov
cmp
pop
test
sbb
mov
jmp
mov
sbb
cs
loopne
pop
cli
pop
fsts
mov
lock
lds
repz
push
mov
push
push
nop
xchg
dec
aam
mov
hlt
jo
xor
mov
cmp
add
dec
dec
fcomp
xchg
fcomp
fidivl
pop
push
cli
xor
push
loopne
repz
mov
je
mov
sbb
add
rorb
push
rclb
fmuls
jle
or
and
add
cld
fmull
dec
in
adc
test
repnz
push
cmp
cltd
lods
inc
xchg
inc
insb
pusha
popf
mov
sub
insb
stos
mov
pusha
repnz
out
sbb
movsb
push
popf
lods
fisttps
fcoml
pop
in
push
xchg
pop
jmp
jnp
je
mov
fdivp
push
xor
je
lret
mov
mov
in
repz
into
loop
sahf
mov
testb
pusha
insb
push
push
es
or
xchg
sbb
aam
sbb
rorb
push
orb
inc
pusha
jns
pop
pusha
fwait
xchg
les
je
pusha
cli
je
inc
cmp
mov
pop
push
ss
push
aaa
push
cli
sub
xchg
fisubrs
test
inc
cld
lahf
in
mov
loope
adc
aad
addl
hlt
push
sbb
jmp
aam
out
push
dec
jl
pusha
insb
mov
pusha
dec
add
addr16
sbb
popf
pop
inc
mov
mov
xchg
cmp
xor
and
mov
xor
adc
xor
hlt
out
or
rcll
sub
hlt
mov
sub
out
dec
bound
popf
bound
sbb
cmpsl
es
adc
repnz
push
xchg
lcall
es
xor
faddl
in
pop
mov
faddl
push
or
fld1
xchg
mov
popf
lret
cmpsb
mov
jo
sub
cmp
aam
sbb
and
test
adc
jl
xor
push
adc
out
stc
dec
mov
movsb
call
in
stc
jns
cmp
stos
fcmovbe
shl
imul
sbbb
les
and
stos
lods
jle
sbb
les
push
leave
push
push
adc
pop
mov
mov
lds
pushf
pop
out
cmp
andb
cld
sbb
test
sub
out
mov
xchg
jl
jno
jl
mov
push
iret
push
add
xchg
cltd
fmull
jge
sub
push
mov
add
sub
ficompl
mov
sbb
notb
aad
cwtl
sub
sbb
mov
fdivr
cmp
xor
pop
repz
fidivl
xchg
xchg
xchg
inc
adc
in
sbb
pop
into
mov
jp
pop
clc
mov
push
jo
sbb
or
push
inc
cltd
jb
lret
stc
inc
jmp
mov
cltd
inc
push
fldenv
fistps
mov
add
mov
pop
sarb
stc
sub
or
sti
repz
loope
push
cld
pushf
hlt
vandps
call
dec
loopne
and
xchg
cmp
pop
daa
les
in
out
cld
cld
ja
inc
xor
idiv
std
lock
loopne
lods
mov
ja
pop
mulb
hlt
and
adc
xlat
cld
cld
mov
pop
fcoml
sbb
les
add
cmp
xchg
repnz
inc
stc
and
call
mov
xchg
jbe
cmp
and
mov
and
clc
xor
mov
or
sub
out
jp
xchg
rcrb
push
test
sbb
xor
cmp
and
pop
pushf
es
gs
and
add
aas
int3
shll
mov
sti
mov
outsb
jmp
cmpsb
sub
push
loopne
jo
mov
ret
jg
pop
mov
fsub
fisttpll
or
mov
sbb
fsubs
stos
mov
cmc
xchg
mov
sbb
mov
lock
mov
cmp
loop
in
out
lods
sub
ss
lods
and
sbb
sub
add
shlb
repz
in
and
aas
ficoml
mov
xchg
les
cld
jo
xor
mov
jecxz
insb
cmp
mov
push
add
mov
push
push
cmp
mov
and
push
loope
jns
mov
jns
jl
pop
stc
jbe
add
sbb
in
imul
dec
loopne
and
sub
inc
aam
sub
push
fcoms
pop
jb
xor
and
xchg
ljmp
out
lods
mov
xchg
cli
pop
dec
ja
sti
mov
lods
pop
dec
rcrl
fnstsw
lods
add
mov
fldt
or
cmp
shr
sbb
fsubrs
les
in
adc
pop
xchg
push
insb
dec
outsb
je
pop
je
push
mov
cltd
loop
stc
ljmp
lods
cmc
lahf
test
fnstsw
mov
jmp
mov
stc
add
fdivrp
out
xchg
add
mov
mov
cmp
adcl
xchg
xchg
mov
and
jns
mov
out
pushf
mov
iret
lock
loopne
xchg
pop
out
xchg
cmpsb
sahf
add
or
mov
fucomip
or
jp
mov
leave
in
loopne
sbb
adc
jno
xor
insl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
sbb
push
les
in
stos
imulb
and
add
sbb
fidivl
js
outsb
xchg
inc
dec
int
pop
and
bound
or
pusha
jecxz
les
sbb
mov
push
ficomps
cmp
mov
and
pop
xchg
mov
adc
hlt
ret
adc
and
mov
mov
out
mov
dec
xor
fisubrs
push
sarb
jmp
cmp
loope
call
sub
push
sub
loopne
push
xchg
lea
test
pop
sbb
ljmp
leave
rcrb
add
mov
mov
push
fsts
nop
cmp
sbb
lods
lahf
rorb
xchg
adc
pushf
mov
mov
jno
cltd
xchg
shlb
ds
outsl
lcall
adc
ljmp
out
popf
xor
lcall
push
imul
in
fld
loope
fnsave
popf
xchg
pop
xchg
ficomps
in
lock
cmp
sub
mov
lock
test
xor
push
test
cmp
push
push
inc
adc
xchg
jns
cmp
pop
xchg
imul
les
and
add
jle
fwait
push
mov
jl
cmpl
xchg
sub
add
popf
pushf
and
clc
add
sbb
lret
xor
sub
mov
loopne
mov
stos
and
pop
aaa
jmp
loop
sbb
test
push
cmp
pop
cld
inc
mov
es
push
push
dec
adc
loope
push
lea
andb
xchg
xchg
dec
mov
xchg
test
je
push
cmp
adc
add
nop
in
mov
lods
jb
lea
outsb
cmp
push
lods
or
in
lods
sub
push
mov
mov
xchg
cltd
stos
sbb
and
sub
pop
pusha
subb
sbb
stc
push
test
out
hlt
popf
cld
outsl
in
sti
hlt
je
pop
ss
mov
xor
add
call
je
xor
outsb
aad
sbb
and
inc
sbb
dec
or
sub
in
jl
and
pop
into
cmp
cld
aaa
cld
scas
jmp
ror
cmp
in
test
in
es
sbb
enter
push
and
xor
insl
xor
cmpb
and
outsb
and
es
cmp
mov
mov
lock
push
pop
into
loop
add
jbe
divb
fcomps
inc
dec
adc
sub
insl
pop
mov
mov
scas
sub
push
sbb
dec
inc
mov
xchg
inc
jmp
ljmp
xlat
hlt
adc
push
mov
pop
rolb
in
mov
or
pop
fimull
jp
in
in
push
rcrb
lahf
push
adc
insb
shll
sbb
stos
test
and
out
push
fs
or
popa
in
fldenv
loopne
pop
sub
nop
mov
vucomisd
mov
test
mov
int
sbb
sub
xor
or
push
loopne
rcr
sti
push
out
sbbb
or
mov
add
in
sub
loopne
inc
and
sbb
es
adc
in
loope
push
test
mov
and
mov
clc
adc
faddl
adc
mov
sbb
out
shlb
nop
mov
pop
mov
jns
dec
xor
fisubrl
insl
aaa
data16
mov
mov
in
mov
and
push
mov
add
inc
add
pusha
aad
cmp
jle
fwait
dec
mov
adc
push
int3
stc
or
test
pusha
push
mov
aam
clc
pop
in
push
add
pop
mov
outsl
fcoms
icebp
loopne
xchg
jno
fndisi(8087
fmuls
jbe
jo
push
cmp
sbb
icebp
mov
sahf
lods
nop
std
lret
addr16
pop
ljmp
xchg
push
push
sub
test
out
pop
push
es
es
inc
fmuls
mov
push
lcall
nop
mov
mov
jnp
aaa
mov
mov
out
out
sbbb
pop
xchg
out
adc
loopne
inc
push
aam
shl
push
mov
push
xlat
loop
and
mov
cmpsl
and
or
icebp
sbb
adc
push
jbe
ljmp
lret
rcll
cld
cmp
cmpsl
sub
fidivrl
movsb
push
into
loope
and
and
pusha
or
add
js
sub
jmp
push
push
mov
cmpsb
stc
jmp
dec
add
pop
shll
adc
pushf
push
hlt
jg
pusha
xor
mov
jbe
adc
push
push
or
push
or
pushf
test
or
stc
jmp
in
mov
out
scas
dec
adc
push
or
adc
aas
fs
fstpt
loope
xchg
mov
inc
xchg
xchg
or
sbb
stc
xchg
mov
mov
fnstcw
stc
es
sub
xor
sub
loopne
scas
add
gs
out
imul
imul
xchg
or
mov
test
sbb
and
sbb
loope
sbb
mov
mov
pop
add
nop
cld
iret
in
ret
hlt
out
mov
cli
aas
lods
lods
icebp
sub
mov
loopne
sbb
popf
dec
popf
ret
fs
dec
out
inc
rcrl
sbb
push
fdivs
sub
sub
cli
adc
fwait
mov
out
lret
dec
aam
sbb
ret
loopne
push
push
mov
cpuid
nop
es
and
dec
pop
jmp
or
leave
mov
mov
hlt
icebp
sbb
push
add
add
jb
pop
loope
sub
lcall
cmp
and
test
out
and
and
push
mov
dec
sbb
lea
mov
xchg
notb
sbb
sub
pop
mov
adc
outsl
repz
jns
or
cmp
xor
pop
and
and
movsb
adc
pop
out
jg
inc
fsub
hlt
mov
xor
push
lods
pusha
sbb
pop
ret
mov
sbb
popf
out
jbe
mov
arpl
push
add
lcall
es
dec
lcall
daa
mov
inc
test
cmpsb
scas
and
aad
pop
sti
scas
lea
push
lret
add
je
mov
mov
fs
test
add
mov
daa
addr16
in
lods
mov
cmp
sbb
pop
sbb
loope
pop
mov
dec
rcl
push
pop
lods
ljmp
pusha
cltd
pusha
inc
xchg
into
pusha
pop
dec
cmp
push
aas
inc
and
xchg
or
ret
ds
ljmp
imul
jecxz
inc
jno
insb
cmpsb
add
fwait
pop
adc
and
push
jg
mov
add
lods
push
mov
les
add
lahf
cld
dec
xchg
test
dec
in
jb
sub
cmp
loope
leave
sbb
loopne
pop
test
lods
sbb
enter
sbb
or
or
sti
mov
popa
out
inc
in
sbb
fwait
dec
scas
loopne
jl
push
sub
push
cmp
nop
data16
ds
imul
xor
jno
and
sbb
or
lret
push
cmp
cli
sti
sub
sti
xor
pop
call
fisubs
call
stos
jmp
jo
inc
sub
xor
mov
push
push
mov
int3
hlt
enter
sbb
adc
sbb
jecxz
stc
hlt
mov
jl
dec
mov
adc
psraw
and
jbe
adc
fwait
jl
push
out
sbb
out
pop
cld
mov
push
mov
loopne
les
xor
adc
xchg
mov
test
push
and
xchg
dec
test
inc
or
adc
popf
cli
out
sbb
lcall
sbb
lock
jo
insl
hlt
jns
add
out
or
sub
in
add
sbb
pop
adcl
aas
sbb
out
mov
push
enter
jge
mov
es
adc
inc
xchg
jmp
cli
fchs
mov
sbb
mov
add
mov
dec
cld
sub
and
and
jnp
aam
out
test
aam
fmul
xchg
pop
int3
fmuls
jmp
enter
sbb
add
movb
loope
lret
enter
xlat
cmp
jmp
neg
dec
fimuls
loopne
pop
push
dec
int3
pop
cmp
rorb
test
ds
sbb
pop
dec
pop
mov
loop
les
hlt
cs
xchg
sahf
adc
sbb
pop
xchg
jns
inc
mov
pop
push
les
dec
add
jecxz
push
loop
pop
nop
add
or
mul
mov
mov
sahf
cmpsl
insb
in
daa
cld
push
ss
ljmp
les
cmp
test
stos
sti
push
es
lods
and
jns
clc
and
test
sbb
js
push
movl
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
loopne
jg
inc
in
sbb
mov
xchg
xchg
lock
push
mov
repz
out
mov
aas
dec
pop
cmp
int3
dec
aam
shr
push
cwtl
add
xchg
jbe
loopne
cmp
cmp
cmpsb
loope
sbb
pop
cmp
mov
xor
inc
hlt
fwait
in
pop
aad
pop
xchg
js
jl
adc
push
lock
mov
add
xchg
loopne
sbb
push
sbb
adc
mov
lock
call
aas
sti
and
pop
sbb
add
insb
shrb
inc
cmp
loop
ss
push
add
icebp
add
sbb
mov
pop
mov
sub
nop
sub
mov
out
cld
movsb
repz
push
adc
jg
ret
adc
or
inc
fs
out
push
sbb
out
or
push
mov
loope
jle
scas
test
dec
sbb
jecxz
fisttpll
nop
test
and
cmp
jp
xor
je
inc
xor
out
xor
pop
test
loopne
adc
sarl
bound
stc
aam
sbb
inc
in
or
in
or
cmp
insb
les
sbb
cmp
cmp
nop
pop
imul
das
rcrb
sub
pop
aam
popf
adc
popf
and
mov
flds
stc
xchg
mov
cmpsb
xchg
movsb
mov
aas
and
jne
push
xor
dec
xchg
dec
sub
ret
aas
add
clc
mov
out
loopne
push
daa
sbb
lcall
and
loopne
pop
push
cwtl
adc
mov
mov
enter
or
leave
push
sbb
xchg
setbe
dec
sbb
jbe
jl
pop
out
push
jb
pop
inc
xor
cmp
iret
cltd
xorb
add
fnstenv
jbe
insl
sbb
add
shl
and
cld
call
jno
sbb
mov
mov
clc
lcall
xchg
lcall
lret
mov
out
sbb
out
cld
lock
sbb
in
imul
test
add
in
sbb
in
sbb
mov
cmp
sti
les
or
loopne
pop
or
loop
mov
jno
add
fistps
popa
stos
dec
push
in
gs
pop
sbb
gs
or
xchg
sub
and
dec
lahf
push
cltd
scas
je
movsb
cmp
out
clc
lcall
pop
shr
cltd
outsb
mov
push
push
repz
mov
adc
in
pusha
cld
adc
fdiv
cmc
ss
subb
fcmovbe
pop
adc
add
loope
in
je
lock
adc
sti
sbb
cmpsb
push
out
clc
pop
or
sub
pop
or
test
push
lods
sbb
or
ficomps
jmp
mov
push
in
out
pop
imul
repnz
push
add
stc
js
aas
lcall
mov
mov
sbb
sti
movsl
sbb
repz
mov
sbb
aas
add
dec
jnp
jl
das
pop
int3
mov
xchg
ljmp
insb
push
add
adc
xor
mov
lret
scas
or
outsb
and
mov
xchg
js
rcr
test
cmp
and
movb
sub
hlt
mov
xchg
xor
in
pop
mov
pop
lcall
sbb
jo
and
mov
jne
or
in
lcall
lods
sbb
adc
sbb
lret
lret
iret
jecxz
sbb
dec
lock
mov
jb
push
xchg
dec
jns
xchg
push
mov
jmp
sub
adc
js
cmp
jp
mov
sub
js
out
fstpt
loope
sbb
lea
loop
sbb
push
adc
ficompl
pop
aam
adc
shl
lahf
lret
dec
lret
ljmp
pop
loope
push
xlat
adc
cmc
sub
addr16
int3
adc
xchg
mov
jl
and
push
ds
pop
or
in
je,pt
outsb
add
mov
out
sbb
out
lret
or
out
sti
jo
fcoms
shl
xchg
jl
dec
sbb
fisubl
pop
inc
cld
shl
xchg
hlt
decl
xchg
pop
push
add
push
or
ss
mov
std
movsb
negb
pop
scas
sbb
sbb
adc
cwtl
out
or
xchg
and
jecxz
movsb
jne
insl
aas
lock
pop
bound
ret
pop
fndisi(8087
inc
xor
push
int
cmp
loop
loop
js
shl
xchg
jmp
pop
imul
jmp
cmp
mov
xor
jmp
jo
sbb
and
les
and
lcall
adc
hlt
cld
push
movsb
lcall
sub
add
and
pop
test
fs
push
lret
out
cld
inc
cld
ss
sbb
jp
push
in
loope
push
bound
push
pop
cmpsb
loop
mov
mov
adc
push
lcall
jmp
je
push
pop
or
push
test
jbe
push
sub
repnz
push
mov
out
xor
push
or
and
cmpsl
loop
pop
push
mov
add
cmp
and
je
pusha
shr
add
fs
sbb
push
mov
leave
pop
xchg
pop
xchg
xor
loopne
sbb
push
popa
les
in
cmp
sub
xlat
push
push
cwtl
adc
mov
in
outsb
push
cld
mov
cli
adc
adc
cmpsb
out
fnstcw
mov
cld
push
push
ljmp
or
cmp
hlt
sub
and
pushf
jnp
sbb
sbb
xor
pop
pushf
add
xorb
loopne
and
negb
jmp
mov
pop
mov
dec
jmp
clc
jmp
or
adc
sbb
xor
xor
xchg
cmp
pop
pop
push
cmpsl
mov
mov
mov
sbb
xchg
es
push
shlb
and
add
or
add
sbb
xchg
sub
xchg
stos
inc
aaa
sti
enter
fisttpl
lock
test
mov
pop
fs
mov
cmp
and
nop
pop
jg
xchg
mov
in
push
stc
ret
test
enter
push
xchg
dec
push
adc
pusha
push
arpl
jmp
hlt
mov
lock
xor
sbb
sti
sbb
bound
xchg
out
clc
mov
xchg
into
out
stc
mov
sbb
shl
sarl
jp
outsb
sbb
and
sbb
fcmovnb
and
and
push
jge
andb
cwtl
les
out
dec
push
and
push
pop
mov
movsb
xchg
sbb
pusha
sbb
les
out
pop
dec
ss
in
inc
mov
mov
and
lods
loope
pop
push
pop
sbbl
ds
std
jecxz
pop
out
push
nop
push
fadds
or
mov
rcr
cwtl
popf
and
out
cwtl
mov
jmp
lret
or
je
xchg
sbb
ljmp
out
lcallw
add
les
xchg
loopne
call
sub
pop
push
in
filds
lcall
sbb
sbb
pop
mov
and
in
icebp
in
or
loopne
and
stc
dec
push
es
sbb
dec
fstps
out
sbb
fcom
mov
ficomps
cs
in
pop
and
cmpsb
adc
out
call
data16
push
jg
sbb
mov
push
into
repz
cld
jle
scas
ficoms
mov
xor
ljmp
inc
sbb
xchg
pop
shlb
lods
scas
sbb
and
in
sbb
xchg
je
mov
xor
aaa
ja
call
push
clc
test
mov
je
sahf
adc
or
or
test
fbld
out
and
cmp
sbb
cmp
loope
fcmovnbe
pushf
ss
cmp
mov
sahf
or
pusha
pop
push
and
mov
mov
add
stos
es
adc
out
fmull
in
sub
xchg
jbe
adc
sbb
mov
cmp
inc
push
mov
cld
add
inc
hlt
dec
es
ss
andb
shl
pop
pop
repnz
sbb
cli
sbb
enter
push
fstpl
jns
mov
sbb
lock
leave
loopne
aas
int
jl
stc
out
push
mulb
lahf
fsubs
mov
xor
in
jge
pusha
add
hlt
mov
or
fidivl
shl
xor
rcrl
cmp
popf
insl
fcomi
sbb
js
lea
movsb
xchg
xor
les
mov
sti
jp
sti
dec
jmp
and
mov
mov
push
les
or
push
cltd
xchg
push
push
testb
adc
daa
sbb
out
cmp
and
pop
into
loopne
xchg
push
movb
inc
adc
mov
scas
jmp
jmp
jmp
xor
cmp
popf
jp
dec
sbb
xor
dec
out
shrb
pushf
out
lea
fwait
out
loope
cltd
cld
loop
sbb
stos
sbb
cmp
xchg
adc
push
popf
rcr
pop
movsb
and
subl
mov
ret
pusha
mov
ds
adc
pop
popf
lock
out
sbb
fbstp
rcl
or
and
insl
fnstenv
cmpsb
lcall
pop
frstor
cwtl
inc
lock
adc
mov
xor
aas
sbb
test
cmpsl
stc
mov
sub
fistpl
mov
movsb
jmp
out
sbb
jmp
ljmp
mov
hlt
jae
pusha
pop
or
aam
cmp
sbb
pusha
dec
in
adc
iret
out
mov
in
aad
aad
rorl
mov
adc
test
sbb
xchg
movsb
pop
pop
pop
pop
cmp
cmp
addr16
pusha
sti
hlt
dec
jge
loopne
pop
lods
pop
scas
xchg
popf
or
rol
test
loopne
lds
orl
clc
sbb
out
mov
dec
mov
jo
xor
or
test
xchg
insb
adc
mov
mov
fxch
cli
fstps
stc
popa
stc
jmp
hlt
aam
fs
inc
lock
loopne
enter
pop
inc
out
loopne
pop
stos
xor
pop
sti
cmc
adc
pusha
inc
fimull
add
mov
fistpl
jbe
js
xchg
or
cld
mov
out
sub
ret
add
lock
inc
pusha
xchg
std
pop
pop
add
sbb
mov
push
add
out
cmp
out
pusha
mov
loopne
lahf
sub
jp
or
sbb
push
inc
out
sti
lock
fwait
sbb
int3
xor
ljmp
jecxz
jno
scas
adc
in
popf
xor
sti
outsb
lret
fucomi
adc
sub
les
inc
pop
lahf
loopne
jl
addb
in
fstl
xor
stc
lret
mov
mov
push
mov
and
pop
push
push
int3
sub
mov
bound
test
or
ret
sbb
sbb
es
stc
sub
lds
jecxz
repz
sti
imull
add
icebp
cli
fstpt
outsl
lock
mull
push
xor
call
pop
xchg
hlt
cwtl
jnp
movsb
mov
push
aam
sbb
pop
negb
out
pop
lods
loopne
imul
call
pop
cwtl
push
pop
push
inc
adc
inc
xchg
or
sbb
lock
or
dec
cltd
loopne
adcl
xor
addr16
mov
sbb
movsl
sbb
sbb
negb
mov
pop
sbb
cmpsl
loope
pop
addl
add
jmp
cmpsb
mov
sbb
cmp
or
jo
mov
dec
mov
pop
lea
jns
pop
ss
movsb
xor
xchg
cld
lock
push
mov
hlt
hlt
dec
lods
sbb
inc
fbld
mov
sbb
test
fcmovnbe
jo
sbb
adc
push
sbb
aam
pop
insb
dec
add
fadds
into
lods
and
push
sbb
sbb
out
mov
das
fldenv
int3
loopne
and
fwait
adc
mulb
xor
sbb
sbb
add
in
or
or
push
loop
or
or
inc
adc
jecxz
pop
mov
js
mov
loop
push
popf
out
rcrb
lcall
hlt
lret
dec
les
jbe
adc
xchg
pop
push
jp
pop
ds
mov
out
aam
inc
add
in
push
sti
fsubl
sub
xor
out
call
insb
pop
cltd
fdivrl
jae
cs
arpl
sbb
sbb
in
mov
es
stc
and
lock
sub
xlat
negl
adc
xchg
sbb
push
sbb
test
movsb
mov
mov
push
out
cmp
inc
fcoms
or
jg
movsb
rclb
sbb
lods
test
lret
ja
xchg
add
jp
movsb
jecxz
hlt
dec
push
sub
ret
add
xor
pop
leave
popf
mov
hlt
adc
xchg
lods
push
fcomp
ss
xchg
stos
xchg
dec
adc
pop
pop
pop
int3
push
les
mov
push
jo
fs
or
mov
ja
loopne
sbb
loop
inc
or
pusha
sahf
push
inc
sbb
in
in
fld
fiaddl
push
dec
jecxz
popf
mov
je
test
insb
arpl
loope
cmp
fnstsw
dec
jnp
sbb
in
inc
sbb
std
xor
xchg
push
popf
and
clc
or
stc
sti
adc
xchg
jnp
lret
pop
cli
fistl
mov
inc
loopne
push
hlt
push
les
add
push
insb
add
jl
xlat
fldt
aam
sbb
shr
pop
movsb
push
test
cli
add
mov
mov
scas
sbb
out
loopne
push
sub
and
xchg
sbb
mov
lahf
or
xor
pushf
and
adc
dec
push
pop
pop
loope
push
aas
fistl
jecxz
enter
lret
mov
jns
rcrl
mov
jg
xor
or
into
mov
test
mov
mov
mov
mov
subb
notl
xchg
shlb
ds
mov
add
sbbb
dec
adc
push
or
and
mov
pushf
shr
pop
push
sbb
test
ret
imul
gs
sbb
fwait
xchg
sbb
imul
fstpl
pop
test
cltd
sbb
aam
in
xor
xor
iret
sbb
out
out
cmp
sub
fidivl
sbb
sbb
sbb
pop
fdivrs
test
in
es
mov
and
sbb
mov
sarb
cmpsb
pusha
daa
add
sub
mov
xor
mov
mov
fstpt
fucomi
aam
in
mov
call
loopne
push
sbb
mov
es
sbb
fimull
push
pushf
mov
cli
cltd
es
cli
mov
sti
sti
pop
loop
clc
mov
or
xchg
sbb
push
sbb
loopne
fnstcw
inc
jne
and
addr16
sti
cmp
sub
jnp
jp
mov
pop
movsb
out
inc
cmp
pusha
mov
jns
lock
sbb
enter
mov
sbb
imul
loopne
jbe
push
insb
insb
inc
mov
sbb
dec
pop
xlat
pop
jb
mov
sub
int3
jo
mov
mov
je
inc
or
ss
add
ficomps
sbb
lret
jle
xchg
adc
sbb
dec
jle
notb
push
cli
insl
xchg
push
xchg
stos
adc
xchg
cmpsb
xchg
inc
adc
sbbb
jb
and
lds
sub
pop
jns
test
xor
dec
hlt
aas
pop
sbb
cmp
shl
pop
mov
outsb
fwait
pushf
sbb
pop
fs
pop
and
sbb
loope
mov
cmp
xor
jbe
cmp
adc
stc
rcr
xchg
dec
add
loop
call
xchg
dec
into
adc
popf
sbb
repz
clc
and
sub
imul
push
lcall
cmpsb
in
adc
scas
out
sbb
test
outsl
xor
loop
movsl
push
fcmovnu
sbb
dec
xchg
inc
outsl
sbb
xchg
push
sbb
pop
or
jnp
mov
jecxz
hlt
push
jge
cwtl
nop
loope
in
aam
loopne
es
sbb
testb
push
and
sbb
adc
and
adc
out
je
fnstcw
loopne
movsb
add
imul
in
jecxz
sbb
or
and
hlt
ret
sbb
push
push
cmp
jno
lret
mov
adc
mov
or
cmp
insb
ficoml
in
add
push
pop
jl
push
mov
add
mov
push
test
dec
pop
and
add
lahf
stos
cwtl
inc
movsb
push
out
in
arpl
out
adc
aad
popf
loope
enter
cmp
jecxz
stc
insl
mov
ret
stc
adc
fdivr
cmp
add
pop
movsb
fsub
sbb
loope
and
das
hlt
cmp
mov
xchg
inc
in
stc
add
adc
ficoml
cmp
xor
add
pushf
pop
call
push
pop
fstps
cmp
movsb
mov
add
cld
out
cmp
push
ljmp
and
in
inc
mov
repnz
pop
aam
loopne
inc
jbe
fcoms
push
enter
push
pop
rorl
test
xor
pusha
aaa
mov
pusha
xor
pusha
sub
pusha
inc
insb
add
push
rcrb
add
fsubl
push
adc
sbb
push
dec
lods
xchg
in
sbb
out
loope
lret
popf
popf
jb
mov
pop
pushf
sar
in
in
jge
loopne
and
adc
sbb
cmp
mov
into
adc
sbb
push
imul
cltd
popa
push
inc
add
call
sbb
lret
inc
leave
lret
loope
cli
inc
fidivrl
repnz
pusha
loop
pusha
aad
lcall
cmp
popf
cmpb
push
sub
add
and
aas
or
jl
jecxz
ss
pop
sub
cmp
fnstenv
sbb
push
gs
mov
movsb
aas
out
in
outsl
cld
pop
orb
inc
xchg
pop
loope
xchg
sbb
lea
shlb
and
mov
pusha
or
mov
pop
and
fwait
jle
out
jnp
lret
aas
jmp
imul
cmp
ljmp
stos
loop
push
outsl
pop
cli
sti
dec
in
mov
push
sbb
sbb
and
or
sub
lret
push
lahf
sbb
int
sbb
add
mov
es
xchg
lahf
add
or
movsb
pusha
pop
insb
jnp
pop
pusha
gs
test
add
pop
lods
out
cmp
inc
push
add
ja
test
adc
fs
sbb
adc
sbb
mov
das
push
xchg
pop
shlb
push
pop
or
pop
xchg
fwait
add
nop
adc
sbb
sbb
in
arpl
and
jmp
in
scas
push
or
or
lea
mov
mov
pop
sbb
fcoms
xchg
inc
lahf
mov
lcall
push
popf
add
pop
and
mov
or
loopne
pop
cld
shlb
stc
mov
insb
fnstenv
add
jecxz
insb
sbb
push
pop
hlt
cwtl
inc
fnstsw
xor
cmpsb
sbb
push
fnstenv
cmp
hlt
mov
and
and
loope
lahf
lahf
mov
inc
push
jecxz
xchg
fcmove
test
and
or
cmp
or
sahf
cld
pusha
in
shr
inc
xchg
in
pop
jnp
sbb
loop
hlt
fs
fwait
xchg
inc
mov
test
cmpsb
adc
icebp
sbb
jne
or
test
insl
rorb
inc
out
repz
sub
push
test
lea
loop
fistps
mov
adc
fimuls
adc
adc
cltd
xor
xchg
mov
gs
jle
in
movsl
fwait
stos
sbb
cld
xlat
fmul
addr16
inc
out
test
popf
xor
loopne
or
xor
push
add
inc
jmp
dec
sub
aad
push
push
pop
push
pop
push
pop
lods
out
loopne
and
add
loopne
sbb
sbb
sbb
or
into
sub
xor
jnp
test
scas
cltd
dec
stc
bound
mov
cwtl
out
fisttpl
je
in
mov
aaa
fildl
and
inc
sbb
cmp
out
pop
mov
out
sbb
loop
fwait
into
mov
sbb
sub
pop
jnp
mov
fadds
cld
pop
and
je
xchg
pop
in
pop
outsl
sti
push
lret
jmp
and
xor
adc
jbe
adc
jge
pop
out
mov
pop
xor
test
xchg
stos
in
sbb
loopne
cmpsl
fwait
dec
pop
push
add
adc
insb
les
inc
out
pop
aam
mov
sar
push
mov
xor
loopne
jmp
pop
shlb
sbb
adc
mov
hlt
push
pop
ds
add
jl
cmpsb
loope
popf
int3
pop
mov
nop
int3
pop
in
dec
in
lahf
in
dec
jecxz
fldcw
xchg
xchg
add
sub
cmp
into
in
hlt
sti
mov
adc
sbb
pop
rolb
pusha
dec
dec
pop
fsubr
mov
les
sbb
xchg
fs
pop
out
sbb
lret
das
jmp
out
jg
into
sbb
sub
out
add
jp
push
or
adc
inc
in
jb
push
mov
xor
or
or
imul
ss
rorl
cmpsl
xor
pop
sbb
imul
enter
fistl
jne
lods
rcrl
sub
inc
andb
sarl
push
adc
jmp
add
mov
dec
daa
hlt
outsb
loope
cld
cli
xor
iret
mov
pop
sub
push
xchg
sub
es
ret
mov
xchg
xchg
leave
xchg
mov
sbb
out
je
loope
rcl
sbb
push
sbb
popf
fs
fdivl
popf
push
push
gs
imul
or
fadds
pop
add
sbb
mov
mov
adc
mov
pop
hlt
mov
scas
sbb
pop
sbb
icebp
in
sbb
push
in
dec
sbb
in
cmpl
push
mov
push
or
inc
sbb
loop
sbb
loope
outsb
push
fwait
mov
mov
sbb
out
cltd
es
je
inc
inc
hlt
jp
loopne
xor
inc
loopne
test
and
lcall
jbe
cld
add
pop
stos
sbb
inc
push
lods
shll
push
xchg
pusha
stos
add
mov
ret
cld
adc
cli
int3
mov
sbb
leave
js
fnstenv
stc
mov
aam
les
sbb
in
inc
cld
mov
sbb
test
in
and
add
sub
js
cmp
out
js
jo
cmp
lahf
xchg
pop
je
add
icebp
jecxz
frstor
movsb
nop
rolb
in
enter
ret
add
int
add
cld
adc
mov
fldenv
xor
xchg
dec
sbb
xor
lret
or
fildll
sub
adc
lret
loopne
pop
adc
add
and
out
loopne
xchg
inc
mov
xchg
and
push
xor
dec
cld
mov
pop
es
and
push
es
cs
scas
jmp
xor
loope
xchg
sbb
outsb
sbb
icebp
int
cmc
push
push
rcrl
js
mov
int3
in
pop
cmc
out
push
les
mov
jns,pt
stc
pop
fcmovne
pop
xor
sub
jno
and
adc
and
movsl
pushf
mov
or
cld
jl
cmp
fildl
jns
adc
dec
sbb
test
lods
loop,pt
mov
es
es
cmp
stos
in
xchg
mov
out
inc
pop
xor
sbb
adc
movsb
jmp
sti
out
and
sub
lcall
dec
mov
addr16
push
stc
and
test
inc
out
xor
mov
sbb
lcall
dec
dec
inc
hlt
hlt
pusha
lods
fisttpl
and
fcompl
popf
push
ljmp
lcall
push
push
push
jae
lret
mov
ret
in
mov
arpl
xor
and
adc
adc
pusha
mov
in
fnstcw
sbb
or
sbb
and
outsl
pop
push
es
xor
arpl
sbb
push
sbb
ret
loope
and
mov
xor
push
and
leave
sbb
push
rcrb
adc
out
ret
push
mov
lcall
adc
movsl
jp
movb
pop
xor
dec
push
push
add
pop
or
loopne
lods
jne
ss
pusha
sub
movsb
mov
xchg
mov
push
clc
mov
and
adc
out
aam
push
adcb
lea
jno
test
jecxz
cld
mov
hlt
inc
in
out
jecxz
les
jb
pop
out
aas
test
mov
and
pushf
fmulp
adc
shlb
push
jne
data16
insb
add
push
in
adc
pop
int3
sbb
fnstsw
fstpt
push
test
test
pop
rcr
mov
test
pop
popa
out
or
loopne
and
aas
rcll
push
movsb
sub
sbb
cmpsl
push
pop
sub
sbb
aas
fisttpll
push
add
hlt
ret
shlb
or
pop
jle
cmp
push
xor
inc
sbb
sbb
in
sbb
pop
adc
or
ljmp
push
loope
sbb
mov
push
fwait
jecxz
sbb
in
pop
sbb
sti
scas
sti
popa
jmp
stos
fcoms
xor
add
movsl
or
inc
popf
sbb
sbb
hlt
lahf
add
stos
add
sub
call
adc
hlt
mov
shlb
shlb
inc
aaa
aaa
popf
sbb
pop
mov
xor
nop
dec
test
hlt
lret
jecxz
adc
in
cmc
in
jo
inc
sub
mov
jne
adcb
in
sbb
les
xor
scas
add
mov
pop
lret
pop
iret
sub
es
aam
dec
sarb
push
push
fisubrl
mov
pop
test
sti
sub
jno
push
fiaddl
iret
cmp
test
jno
sbb
xor
ds
es
add
pop
push
pusha
add
loope
jp
sbb
mov
adc
aam
lahf
movsb
dec
jbe
push
andb
test
pop
xchg
loopne
sbb
pop
loop
sbb
lret
aam
xchg
insb
ret
push
sti
add
inc
hlt
inc
sbb
push
push
pop
js
or
loopne
in
out
sbb
into
movsl
fstpt
mov
dec
and
in
inc
in
sbb
out
and
mov
add
bound
mov
aam
insb
fisubl
nop
and
mov
xor
mov
pop
mov
or
scas
jnp
pop
insb
data16
mov
and
lods
loopne
stos
mov
push
xlat
push
xchg
hlt
push
push
jmp
shrb
in
cmpsl
es
and
inc
mov
fnstenv
out
adc
fists
pushf
xchg
xchg
adc
fadds
in
mov
push
rcrb
mov
push
sbb
jg
in
or
cld
pop
and
mov
and
insl
es
aas
jl
dec
mov
pop
add
cld
popf
xchg
pop
hlt
test
out
inc
mov
push
lcall
mov
inc
es
lcall
ja
das
out
xor
nop
mov
das
sbb
pop
pop
mov
push
pop
cmpsl
loopne
jnp
aam
push
sbb
pushf
pop
jbe
push
popf
xchg
xchg
int3
mov
fiaddl
cltd
push
xchg
xchg
mov
call
mov
sbb
jbe
sbb
adc
cmpsb
dec
in
and
xchg
cmpsb
adc
pop
push
loopne
hlt
jb
int
mov
and
and
sub
sbb
sub
xchg
pop
fs
pop
movsl
popf
orb
loopne
into
sbb
mov
es
addl
clc
leave
fstpl
sbb
les
sbb
into
je
xor
pop
in
lret
mov
adc
xchg
and
and
js
cmp
lods
aaa
sbb
jp
push
out
dec
popf
shlb
out
jecxz
inc
test
or
loopne
stos
push
out
pushf
lcall
xchg
repz
insb
cmp
mov
es
xor
lret
jae
movsb
test
sbb
push
pop
fs
enter
push
adc
sbb
rcrb
add
loopne
adc
pushf
add
and
hlt
dec
sti
sarb
push
or
push
es
cmp
rcl
inc
jmp
sub
out
scas
fidivl
xchg
sbb
stos
cld
sahf
xrelease
ss
sub
addr16
test
inc
push
jge
inc
sbb
mov
sbb
cs
push
sbb
jecxz,pt
fcmovnu
int3
imul
jb
andb
fisubs
mov
hlt
out
pop
loopne
and
inc
mov
add
stos
fnstenv
jecxz
cli
mov
insb
call
push
adc
xchg
jl
jne
add
loop
add
push
pop
pop
mov
push
sbb
cmp
mov
je
dec
xchg
les
mov
sbb
lods
pop
and
push
sbb
jne
enter
inc
push
mov
hlt
sti
hlt
repz
enter
loop
inc
sbb
aaa
pop
cmp
dec
add
or
pop
mov
sbb
les
pop
sbb
repz
mov
in
sub
sbb
mov
or
jnp
and
dec
insb
inc
pop
ret
pop
and
add
sbb
les
les
loop
push
test
std
push
or
stos
in
push
cld
lahf
cld
outsb
mov
sti
clc
sbb
in
and
loop
adc
loope
mov
out
je
pop
ds
and
adc
pop
cmpsl
test
push
es
pop
adc
fdivr
rcrb
clc
cltd
adc
stc
jecxz
xchg
push
pop
push
loope
pop
mov
aas
adc
or
sbb
mov
pop
adc
jle
xchg
inc
lods
popf
jle
pop
mov
lock
xor
andb
dec
xchg
adc
rcl
clc
push
je
push
push
or
and
fnstsw
aaa
outsb
popf
inc
jne
mov
xchg
loope
fldcw
movsb
mov
imul
pusha
insb
push
adc
rol
dec
in
push
loopne
out
xor
jl
jle
sub
mov
out
lea
in
and
scas
cld
and
out
xchg
push
lcall
adc
pop
sbb
lret
in
inc
sbb
bound
xor
pop
out
out
mov
sti
jle
adc
adc
xchg
adcb
int3
mov
pop
pusha
mov
jp
dec
dec
mov
xor
fstpt
sbb
cmp
sbb
jno
and
xor
dec
sbb
out
sbb
fs
push
loop
push
aas
fs
inc
cld
shl
jmp
xor
out
out
push
push
popa
loop
lea
andb
test
cld
sbb
or
inc
mov
lock
in
hlt
es
mov
fs
lock
shrb
and
ja
jl
sbb
aam
loope
mov
xchg
loopne
adc
and
movsb
scas
lret
fidivrs
xor
xchg
cld
xchg
and
repnz
loop
popa
mov
pop
test
xchg
inc
cmp
insb
je
pusha
lds
pusha
ja
adc
sbb
xchg
adc
sbb
cld
mov
add
sbb
xor
sbb
sbb
loopne
jb
pop
arpl
cltd
cwtl
test
mov
mov
cmpb
sti
int3
mov
sub
loope
cli
inc
dec
into
insb
mov
dec
sbb
fstpl
jno
lcall
in
mov
call
mov
in
les
inc
loopne
lahf
mov
movsb
test
loop
cli
inc
mov
in
push
jecxz
sbb
or
adc
xor
mov
or
decb
pop
add
jmp
jge
mov
rcrl
sbb
dec
adc
ds
and
sbb
notb
adc
xchg
icebp
xchg
cli
xchg
fwait
mov
add
rorb
jp
jnp
outsl
fldt
ss
or
adc
push
cmp
insb
or
sub
in
loope
sbb
xchg
dec
push
sbb
xchg
mov
pushf
jmp
hlt
sub
pusha
sbb
lods
inc
dec
movb
and
sub
xor
sub
and
sbb
inc
adc
mov
or
pop
imul
pop
inc
frstor
sbb
fistpl
loope
jmp
ficompl
pop
outsl
cwtl
into
adc
aam
cld
xor
shlb
out
dec
ds
and
xor
inc
pop
cli
mov
stos
mov
divb
pop
xor
sbb
and
push
mov
jp
out
pushf
jb
mov
ficoml
inc
call
leave
jl
and
sub
push
inc
loope
sbb
pop
jecxz
hlt
jecxz
push
fwait
mov
imul
add
dec
sti
pop
loop
sbb
sub
loopne
or
or
sbb
out
mov
jge
iret
std
outsb
sbb
ds
sbb
lcall
pop
push
mov
fcomps
pop
or
aam
loope
inc
push
andb
movsl
push
scas
hlt
clc
cs
mov
adc
add
adc
in
mov
push
cmp
les
mov
out
pop
test
xchg
push
mov
push
sbb
pop
xor
cmp
pop
add
add
adc
sbb
call
lret
sub
out
jp
insl
adc
popf
clc
xchg
mov
sbbl
lret
fs
adc
lock
out
lods
dec
cld
das
in
ljmp
fcoms
hlt
jb
gs
push
sbb
ljmp
insl
loop
mov
xchg
push
in
out
pop
mov
idiv
jne
cmpl
add
andb
cmp
fs
movsb
sbb
popf
cli
jmp
push
imul
sti
inc
int3
sbb
popf
adc
sbb
sbb
lods
xchg
adc
pop
int3
xor
in
in
xchg
sbb
loope
pop
mov
push
ret
and
andl
nop
lock
inc
mov
adc
lea
lods
jns
orb
fdivs
mov
cmp
lock
mov
scas
imul
add
jae
mov
fsub
call
mov
repz
mov
outsb
in
pop
sbb
icebp
adc
ficoml
sbb
loopne
cld
add
scas
mov
xor
int3
andb
aas
in
or
push
sbb
xor
dec
sub
pop
jmp
jecxz
jmp
add
sbb
js
mov
inc
arpl
test
fwait
cltd
dec
jmp
in
adc
mov
mov
inc
adc
sbb
bnd
sub
jmp
lret
jmp
enter
ret
stc
in
adc
js
pop
sub
jmp
in
in
loopne
out
imul
mov
mov
aam
sbb
jecxz
xchg
insb
lcall
jbe
outsl
sbb
cmpsl
pop
movsl
fadd
mov
xor
add
popf
mov
out
push
fstpl
jg
fistps
cmp
movsb
xor
xchg
cmp
xchg
sbb
es
sahf
inc
cmp
into
or
clc
or
lock
jle
mov
adc
es
adc
and
aaa
jmp
clc
je
or
lods
or
push
js
sub
loope
ss
fdivrs
dec
push
jecxz
push
adc
push
xchg
divl
je
fisubrl
test
push
xchg
fwait
cltd
loopne
xor
sub
xor
dec
or
fldt
xor
fsubrl
call
sbb
cwtl
sub
jg
into
test
out
lea
stos
xor
pop
xor
jae
repnz
adc
pop
and
sub
sbb
aam
sbb
bound
data16
mov
fsubr
pushw
lods
fnop
ds
sbb
push
rcl
mov
push
fldlg2
mov
or
and
call
pop
fs
mov
cmp
sub
cld
out
xchg
es
jmp
ljmp
mov
add
adc
xor
xchg
pop
fs
push
pop
push
push
loope
push
test
aad
push
movsb
adc
je
lods
movsb
sbb
scas
insb
in
inc
pop
xor
push
sbb
sbb
movsb
push
movsb
cld
cli
in
ret
hlt
and
loopne
and
es
sbb
push
lods
js
dec
or
pop
or
jo
jge
fwait
inc
in
in
mov
adc
sub
push
cmp
and
loope
push
lahf
insb
push
push
sbb
push
fldl2e
xchg
mov
mov
loop
jp
test
sbb
jmp
mov
stc
shrb
jle
imul
mov
jbe
fs
call
mov
xor
add
and
cli
jmp
sbb
fistps
repnz
mov
es
sub
cmp
fistl
movsb
hlt
adc
mov
push
call
es
pop
int3
adc
push
cltd
cmp
mov
sti
stc
mov
in
sub
je
dec
push
push
cwtl
sbb
cmpsl
sub
inc
aas
decl
push
sbb
dec
pslld
cmp
je
and
in
mov
push
jb
in
loopne
mov
xor
frndint
jecxz
loop
pop
cltd
xchg
pop
adc
push
cltd
sbb
stc
test
in
cmp
xchg
sbb
sbb
cltd
sbb
mov
das
out
and
or
and
adc
inc
int3
mov
jecxz
sbb
pop
aad
in
nop
mov
inc
aad
mov
fwait
dec
clc
push
dec
loope
loopne
cmp
movsb
mov
inc
cld
and
push
mov
push
mov
into
dec
add
bound
ljmp
lock
shll
pusha
mov
mov
jmp
jecxz
jecxz
mov
push
loop
mov
jbe
pop
outsl
lret
adc
adc
inc
mov
jb
test
adc
add
or
push
data16
xchg
inc
pop
in
mov
addb
std
add
cmp
pop
loop
fs
fwait
out
pop
loopne
out
lock
bound
and
es
cmp
fsubp
jmp
xorb
or
in
mov
fsubr
es
and
in
push
cmpsb
pusha
jae
ja
ss
jnp
std
lret
inc
lret
mov
cltd
scas
mov
insb
or
add
ljmp
aam
mov
in
push
cld
xchg
mov
jecxz
stc
sub
push
stc
out
or
scas
cltd
and
sub
je
xchg
pusha
pop
mov
or
cltd
inc
outsl
cltd
inc
mov
mov
or
rolb
out
xchg
jmp
es
loopne
mov
cld
dec
in
pop
hlt
js
shll
pusha
pusha
pusha
scas
jne
pop
xchg
lcall
out
cltd
jp
out
dec
cld
mov
mov
insb
sub
push
mov
lahf
nop
shll
adc
loope
pop
mov
shr
leave
aas
add
je
inc
pusha
cltd
sub
mov
mov
xor
jle
scas
les
in
fcomps
test
test
call
pop
ja
jg
repz
outsb
test
mov
pusha
shrl
pusha
jne
xchg
dec
dec
repnz
add
test
pop
xor
cltd
hlt
les
sub
out
out
xchg
and
sub
les
insl
add
push
test
test
xchg
shl
sbb
push
popf
data16
lahf
loop
ror
pop
xchg
jo
ja
xor
lahf
xchg
fnstcw
je
adc
rcr
mul
popf
cmc
dec
adc
sbb
mov
jp
flds
xor
ljmp
in
mov
add
ds
push
fldl
data16
cmp
sbbl
sbb
scas
aam
stc
out
lahf
dec
cwtl
popf
hlt
in
sbb
push
nop/reserved
out
cwtl
jb
lock
or
pop
add
dec
add
negb
in
sub
in
cli
pusha
dec
dec
jbe
jns
sbb
stc
clc
fs
loope
sti
icebp
test
in
xor
jnp
and
mov
sub
push
pop
aad
loope
mov
sti
add
cmp
mov
sub
sub
pusha
push
jo
cwtl
cmp
lahf
lret
fists
nop
xchg
fwait
pop
in
sub
adc
rclb
mov
in
cmp
out
insb
lahf
or
popf
ds
add
and
in
adc
cmc
sub
sub
mov
jbe
jo
sbb
jecxz
int3
xchg
aas
aam
js
test
fisttpll
pop
push
sbb
shrb
xor
mul
inc
add
jecxz
jg
lock
and
pop
sbb
sbb
in
sti
inc
stos
aam
sbb
test
add
mov
lea
in
jecxz
in
loopw
out
loope
add
loopne
and
in
loop
push
repz
sahf
pop
cmpsb
sbb
adc
pushf
pop
das
pop
mov
cmp
inc
loopne
cmp
push
out
or
or
xchg
inc
in
mov
lea
or
ficompl
xchg
out
outsb
or
ss
or
in
adc
jbe
loop
imulb
data16
or
scas
in
fcomps
adc
xchg
lret
jbe
in
push
jb
adc
adc
ret
dec
test
mov
mov
add
lods
adc
xor
das
hlt
and
popa
and
mov
mov
adc
out
fnstsw
pop
mov
jl
stc
mov
xchg
mov
test
inc
pop
lcall
cld
enter
mov
icebp
cmpsl
xor
fstpl
dec
dec
add
lret
in
out
pop
mov
sbb
jbe
jmp
add
flds
push
push
ss
push
pop
mov
mov
push
fwait
and
sbb
daa
mov
jmp
dec
inc
push
into
out
mov
lcall
cmp
lods
pop
loopne
lds
fwait
jmp
sub
pop
and
pop
cld
add
lret
pop
ljmp
inc
fwait
enter
scas
mov
or
jmp
sub
jmp
lret
jo
sbb
idivl
pop
pusha
fs
xchg
lds
leave
into
in
pop
mov
stos
sbb
repz
or
pop
cs
data16
andb
cmc
or
sbb
pop
es
sbb
mov
popf
stos
sbb
sbbl
cltd
js
mov
enter
push
cmp
incb
imul
sti
jb
hlt
push
out
movsl
mov
dec
mov
lret
xchg
or
stos
sub
repz
dec
lret
lret
imul
mov
sub
shrl
enter
insb
adc
aas
push
in
leave
in
scas
lods
ss
mov
xchg
lcall
out
add
pop
pusha
test
mov
data16
adc
mov
push
in
mov
add
loopne
mov
cld
cld
pop
mov
jo
sbb
test
aam
es
add
andb
and
aas
loope
inc
mov
push
sbb
adc
push
mov
push
mov
ret
cld
push
sti
sti
sbb
cmpsb
sub
pop
xchg
sub
jl
inc
int
adc
dec
sbb
outsl
sbb
or
pop
mov
gs
and
jecxz
inc
inc
in
push
rcrl
pop
in
push
pop
lret
sbb
fs
xor
je
push
jecxz
cmp
loope
loopne
pop
lods
mov
adc
adc
push
insb
push
pusha
inc
push
sub
inc
mov
push
mov
scas
jp
cltd
mov
mov
lahf
mov
or
xchg
insb
mov
add
push
sbb
or
inc
mov
cmp
repnz
sti
shrb
js
lods
je
sbb
insb
popf
pusha
jmp
xchg
cltd
ss
cwtl
push
mov
sbb
add
sbb
cwtl
pusha
fnop
xor
repnz
in
out
aas
sbb
fwait
xchg
adc
inc
sahf
jecxz
sub
std
in
mov
dec
pop
jns
sbb
lret
in
xor
fildll
mov
or
adc
pop
add
mov
mov
jns
hlt
inc
cld
fld
adc
mov
sbb
loop
dec
movsb
or
nop
insb
push
sbb
push
orb
lock
aaa
pop
insb
or
int
fadds
aam
push
mov
or
sbb
xchg
into
xchg
loopne
jnp
adc
cmp
adc
dec
dec
fisubrl
pop
fnstcw
pop
je
push
int3
lock
insl
and
sbb
push
cld
es
movsb
aas
mov
pop
pop
cmp
push
adc
push
pop
sti
out
icebp
adc
xor
add
add
push
push
sbb
xchg
push
adc
lock
add
add
stos
aaa
call
xchg
push
cmp
add
out
enter
test
mov
push
or
mov
es
pop
inc
sbb
pop
mov
pusha
in
pop
dec
loope
push
cmc
mov
push
sbb
test
cmpsb
fidivrl
in
in
leave
les
loop
sti
sbb
repz
sbb
je
imulb
add
push
test
lret
out
ljmp
sbbl
adc
sbb
shlb
sub
mov
ficompl
insb
stos
hlt
dec
jp
push
stc
out
add
mov
stc
mov
enter
imul
mov
mov
mov
pop
pop
fisttpll
fisttpll
fistpll
ficoml
xchg
jae
mov
add
push
mov
sbb
mov
sbb
insb
pop
in
pop
jle
inc
sbb
push
dec
adcl
fwait
insb
pusha
jae
adc
xor
xchg
dec
in
and
sbb
lahf
cmp
add
push
fs
xchg
jb
jecxz
and
jp
pop
sahf
dec
sti
or
mov
fnstenv
push
and
andb
push
scas
adc
mov
enter
lret
xor
sar
jae
sbb
pop
cli
leave
stc
mov
push
jns
les
pop
dec
loope
pop
jle
mov
fistpll
mov
fnstsw
mov
cli
pop
sti
fadds
inc
fstps
dec
sub
dec
lods
push
sub
jbe
adc
cmp
sbb
lahf
fistps
lods
cwtl
shlb
push
jo
aam
add
and
andb
and
push
xchg
mov
stc
test
cld
mov
les
mov
repnz
les
mov
aam
inc
clc
test
loopne
mov
test
int3
out
cmpsl
lahf
test
loop
adc
rolb
push
push
or
in
in
jne
fldln2
pop
mov
inc
sbb
jmp
jns
cld
fsubr
xor
in
in
in
sub
and
arpl
adc
and
imul
pushf
stos
and
xchg
push
les
sti
mov
pop
aas
dec
jl
out
clc
lret
je
or
cmpsl
push
dec
xchg
nop
xchg
adc
adc
enter
es
es
push
aam
inc
stos
fsubrs
cwtl
jmp
mov
sbb
loope
mov
repz
ljmp
add
and
xor
daa
inc
es
adc
and
sub
adc
pusha
out
pop
cld
js
pop
and
es
aas
jns
mov
loope
sub
pusha
add
mov
sbb
mov
popf
dec
popf
out
dec
fstl
sbb
movsb
fsub
jns
inc
pcmpeqw
pop
mov
stos
shl
mov
int
lea
pop
sbb
les
pusha
ds
mov
jmp
and
movlhps
sbbl
xchg
loopne
cld
popa
and
lds
nop
in
cmp
cltd
add
sbbl
sbb
sbb
xchg
test
ficoms
decb
pusha
push
xchg
repnz
loopne
pusha
push
push
xor
and
push
ret
sbb
cmp
or
adc
mov
scas
jnp
lahf
fistpl
jmp
fcmove
movb
ds
add
clc
out
popf
les
std
sub
insl
cmp
cld
aad
loope
in
int3
cmp
loop
or
je
icebp
test
out
and
loopne
jb
xchg
fcom
stos
aad
rorb
out
push
or
or
sub
or
adc
mov
lcall
sbb
push
insb
out
test
out
mov
adc
sbb
lods
cld
mov
and
pop
pop
pop
push
stos
pop
incb
push
sbb
mov
daa
xchg
adc
adc
rclb
mov
loop
outsl
lahf
mov
pop
add
sbb
mov
cmp
test
mov
lea
in
in
cld
mov
popf
movsb
cmpsb
rcrl
sbb
hlt
jo
in
push
scas
jnp
push
sti
and
lret
jecxz
jecxz
jecxz
sub
mov
clc
out
sbb
sub
ss
adc
aam
inc
cmp
cli
dec
jne,pn
cs
dec
cli
push
fsubrs
sub
cli
sarb
fsin
and
icebp
cltd
add
fs
out
scas
and
lea
insb
mov
pop
cli
sub
sbb
orb
mov
push
into
mov
jge
outsb
movsb
adc
jae
fsubs
lods
pop
pop
xor
or
leave
adc
sbb
nop
lret
test
xor
int3
les
mov
or
add
xchg
clc
in
mov
pop
push
in
sbb
jp
push
adc
sbb
xchg
fdivrp
hlt
loopne
loop
push
add
loope
xchg
xchg
mov
add
les
inc
in
movsl
adc
stos
dec
sbb
sub
xchg
jb
add
or
mov
pusha
mov
and
fisttpl
pop
out
jmp
fcmovu
mov
outsl
pop
cmpsb
cwtl
cltd
mov
lahf
sbb
and
mov
clc
mov
pop
mov
lret
mov
bound
add
cld
add
cmp
mov
rcrl
imul
xlat
popf
xchg
fstpt
sbb
mov
test
mov
jmp
je
test
add
inc
sbb
cld
sbb
jl
addr16
into
movb
fwait
ss
lret
push
lret
pop
icebp
in
je
push
les
in
inc
bound
dec
pop
fcmovbe
fsubp
push
push
xchg
and
pusha
push
rorb
fldenv
cld
out
fnstcw
test
in
mov
mov
add
sbb
gs
and
jmp
mov
sbb
push
out
mov
stos
xchg
test
inc
or
mov
jb
or
pop
in
sbb
imul
pop
sar
fbstp
or
es
add
fucomi
test
les
lods
mov
fildll
and
lahf
aam
fstl
rcrl
cmpsb
sbb
jno
stos
cmp
add
push
fabs
pop
cli
movsb
int
sbb
popf
mov
test
mov
pop
lret
pop
cwtl
xchg
pop
add
lock
dec
loopne
loop
xchg
loope
pop
sti
xchg
inc
popf
mov
sbb
fwait
dec
clc
jecxz
cmp
sbb
pop
dec
cs
hlt
mov
pop
cmp
and
pop
clc
sbb
out
sbb
cmp
sti
jnp
hlt
mov
pop
adc
xor
or
adc
rorb
inc
int
mov
push
xor
mov
aam
out
dec
sti
inc
out
sbb
cmpsb
fnstenv
mov
andl
add
mov
int3
aas
popf
insb
jp
jbe
xor
xchg
clc
pusha
cmp
push
jmp
or
jl
in
push
mov
pusha
es
out
fiaddl
cmpsl
push
dec
fstps
xor
sbb
add
xor
cltd
les
xchg
aaa
cmp
js
orb
lret
add
cltd
dec
push
adc
push
push
cmp
push
xchg
rcll
push
jnp
cmp
and
dec
int3
jmp
sbb
xlat
sbb
push
pop
cli
xchg
mov
sbb
pop
sbb
outsl
pop
add
add
jno
mov
fisubl
add
lods
and
xchg
fcomps
sub
jecxz
jns
test
out
in
add
dec
cld
dec
mov
jmp
loopne
and
cs
push
cmp
jbe
daa
rcll
jg
sbb
into
dec
lock
movsb
xor
clc
out
mov
out
out
popf
jbe
xchg
push
fsubr
mov
cmc
call
push
xchg
in
loopne
stos
mulb
data16
push
push
das
stc
out
lcall
ss
lcall
xchg
rcll
sbb
adc
pop
push
shlb
push
fdivrp
imul
adc
mov
insb
pop
mov
cmpsl
aad
xchg
mov
aas
mov
popf
pop
cmc
clc
in
loop
jl
mov
loope
adc
lock
aam
cmc
fisubl
jae
int3
mov
out
jnp
aam
loop
xorb
fs
cli
loopne
cld
leave
cld
jae
mov
stos
cld
sbb
out
cli
or
add
mov
shl
stc
cmpsl
sti
into
pop
xor
jmp
jnp
data16
sub
or
push
lret
adc
call
data16
in
fs
jne
pusha
in
jb
fdivr
inc
stc
jle
push
stc
dec
clc
cltd
es
cmp
aas
lcall
push
sbb
xor
test
movsl
mov
add
add
sahf
pop
mov
loop
mov
mov
adc
xchg
sbb
sbbb
add
mov
lret
fsubr
cmp
jmp
pusha
es
jle
add
into
pop
les
daa
adc
loop
add
mov
stos
repnz
sar
loop
pop
jle
arpl
lods
mov
xchg
sbb
mov
pop
mov
enter
fldenv
test
jmp
cli
lret
and
inc
and
push
push
xchg
call
call
sti
jbe
pop
xchg
les
inc
fwait
mov
lahf
fcoml
in
push
add
add
pop
out
xor
hlt
add
or
adc
les
clc
in
mov
in
sti
xchg
add
pop
cmp
sti
addb
std
loopne
pop
xor
rclb
lret
scas
jecxz
add
out
or
pop
enter
pop
fsubl
loop
jmp
mov
int
and
test
jl
sahf
xchg
push
add
loop
push
xchg
push
in
enter
dec
sbb
xor
fstpl
mov
cmp
jle,pt
xchg
dec
andb
sbb
addl
push
movsb
push
in
pop
hlt
sbb
push
or
andb
sahf
adc
mov
xor
xlat
out
push
sbb
and
pop
add
les
in
sub
cli
cmp
and
mov
or
mov
pop
loope
pop
pop
int3
inc
cmpsb
loopne
add
insb
xchg
pop
cmp
pusha
xchg
cld
les
mov
and
add
cwtl
insb
push
dec
pop
push
pusha
aad
or
out
push
sub
call
je
jns
cmp
cmp
sarl
int
loopne
push
inc
or
mov
add
loopne
sbb
es
pop
sbb
popf
out
and
push
addr16
push
push
out
sbb
sbb
jb
mov
ret
icebp
push
xchg
mov
gs
sub
jo
pop
pop
mov
jno
aam
out
add
mov
cld
cmpsb
adc
sbb
xor
data16
jae
adc
ret
lock
pop
adc
adc
out
add
mov
dec
aam
mov
jno
push
cltd
mov
sbbb
fadd
ficoms
movsb
mov
and
jns
bound
mov
jbe
pop
mov
in
sbb
sbb
sti
vmovaps
xchg
mov
push
jp
in
adc
adc
adc
sbb
sbb
pusha
cltd
call
repz
cs
ret
mov
pusha
ficoml
ljmp
push
les
test
out
cmp
jp
push
cmp
movsb
mov
les
cld
in
push
in
loop
andb
rcrb
jecxz
xchg
push
mov
jns
mov
addr16
jo
movsl
jmp
mov
fsubl
dec
daa
cwtl
sub
inc
cs
cli
es
inc
out
ret
repnz
sbb
sti
loopne
inc
xchg
out
xor
pop
ret
or
je
test
aad
iret
mov
xchg
inc
xchg
test
out
mov
jae
imul
fnstenv
test
and
push
int3
es
movsb
adc
push
cmp
je
mov
je
mov
dec
inc
cmp
xor
bound
loopne
hlt
ja
in
inc
fstp
push
ficoml
cli
push
outsb
mov
test
xchg
in
js
cwtl
fisubrl
dec
inc
push
daa
les
add
mov
in
cmp
cli
lcall
fldenv
hlt
dec
cld
clc
in
lock
and
mov
xor
xchg
sbb
jmp
push
call
out
lock
sbb
mov
push
sbb
pop
pop
cmpb
in
dec
dec
xlat
call
cmp
sti
pop
jp
mov
push
add
enter
inc
cmp
xlat
sbb
mov
sbb
mull
inc
cmp
aaa
pop
fcompl
cmp
pusha
orb
ljmp
daa
pop
mov
cld
ret
and
sbb
pushf
mov
push
lcall
loopne
push
aad
push
adc
lahf
xchg
xchg
xchg
jb
dec
adc
push
pusha
pop
dec
ljmp
hlt
cmp
xor
push
lods
enter
sub
jle
shlb
push
les
mov
or
and
lret
jno
sahf
push
out
pop
mov
in
add
js
loope
pop
fisubl
jae
add
pop
cmpsl
jmp
pop
and
mov
add
adc
sbb
sbb
sbb
cmc
mov
mov
repnz
popf
cmp
sbb
popf
adc
mov
and
xor
dec
sbb
cmp
sub
push
sbb
in
jecxz
in
cld
or
dec
jmp
sub
in
cmp
mov
dec
loop
and
fsubrl
cmp
pushaw
push
xchg
fstps
jp
or
add
jmp
jmp
jmp
imul
mov
lret
clc
jecxz
sti
jmp
stc
mov
sub
movsl
sti
xchg
lret
iret
mov
xchg
xchg
cmp
pop
gs
fistps
adc
sbb
push
adc
mov
sbb
ret
pop
inc
fcomps
xchg
pop
aam
test
call
test
jns
xor
push
push
or
pop
xchg
jmp
jb
add
sti
pop
pop
and
in
lods
cld
push
mov
and
pop
aaa
icebp
popf
or
fstl
dec
pop
loopne
sti
cltd
aam
loope
xor
dec
fldcw
scas
loop
lret
sub
or
loopne
jmp
xor
leave
jmp
mov
cld
pop
sbb
and
mov
and
sub
and
adc
sbb
in
cld
mov
push
cld
lahf
adc
insb
into
pusha
repz
xchg
or
stos
nop
jecxz
mov
loop,pt
push
sub
mov
call
and
and
ss
cli
xor
sub
dec
jmp
lret
mov
pop
loop
js
jne
ss
sbb
sub
dec
lods
sbb
iret
loop
loope
jecxz
jecxz
xor
or
push
xchg
xor
ss
rcr
enter
icebp
sti
jnp
sub
push
push
sub
fiadds
inc
out
push
or
test
sbb
mov
lods
sbb
and
push
ds
es
scas
push
sbb
and
cmp
sub
es
andb
cmpsb
cmp
idiv
or
out
add
out
js
lcall
clc
push
mov
xor
bound
xchg
jle
dec
mov
and
stc
loop
rcrl
popa
fisubl
nop
daa
out
movsl
and
outsl
les
out
pushf
dec
push
and
lods
jb
mov
push
in
and
data16
cmp
ljmp
insb
xchg
insb
inc
inc
js
pusha
pusha
pop
dec
data16
mov
loope
or
push
loopne
xor
add
cli
or
dec
in
lret
out
mov
lods
push
push
sub
pop
sbb
in
sbb
call
push
jae
test
add
sbb
push
add
dec
pop
xchg
add
sbbb
sbb
pop
push
insb
bound
lret
sbb
dec
push
sub
lods
push
add
arpl
sbb
add
sbb
and
mov
mov
int3
push
fistpl
xchg
in
int3
push
shrb
add
lods
pop
jno
icebp
push
mov
add
rcr
lea
lods
push
out
loopne
xchg
xchg
fistpl
dec
sti
or
sub
mov
sub
adc
je
xchg
mov
es
mov
push
enter
fnstcw
out
lcall
movsb
test
jmp
push
adc
push
mov
adc
sbb
and
addr16
stc
in
pop
es
sbb
repnz
clc
mov
outsb
push
lret
popf
out
mov
pop
inc
mov
sub
insl
push
mov
movhps
jecxz
lods
mov
fsts
mov
adc
enter
add
loop
pop
and
je
and
and
negl
adc
dec
repnz
arpl
ljmp
xor
mov
and
fiadds
xchg
add
and
out
repz
xchg
lock
movsb
pop
and
add
sbb
cmp
cwtl
movsb
call
dec
test
push
cmp
rcr
jbe
neg
mov
jp
repz
addb
xchg
hlt
call
fnstcw
cltd
fs
sbb
mov
call
and
or
sbb
das
fisubl
xor
cmp
push
out
jecxz
sbb
movsl
in
mov
push
mov
insl
loope
stc
or
sti
in
lret
cld
test
jecxz
daa
xchg
push
and
mov
test
push
cmp
repnz
mov
lods
sub
movsb
inc
sbb
movsb
push
pop
inc
and
xor
es
lods
and
jp
test
adc
sbb
sbb
jo
ret
push
inc
xchg
mov
sub
aad
jl
sbb
sbb
test
out
cltd
sub
ja
lahf
ljmp
jle
pop
add
cld
mov
push
stos
sub
loopne
cmp
cmp
cmp
push
mov
add
cmp
mov
cld
pop
loopne
insl
jecxz
lods
mov
lret
fldenv
loop
mov
adc
mov
cmp
outsb
jg
mov
sarb
add
pop
in
adc
xchg
lods
in
xchg
les
fistpl
pop
sbb
mov
sti
test
clc
pop
xchg
dec
push
aas
cltd
xor
add
clc
fildll
xchg
inc
jmp
sbb
lock
mov
enter
jne
xchg
enter
pop
out
or
inc
fldz
sbb
out
loopne
repz
insl
fnstenv
jb
dec
adc
imul
es
es
mov
bound
mov
inc
hlt
inc
in
mov
cmp
mov
xchg
and
push
pop
ret
or
js
loope
and
cmp
addl
or
add
dec
fldl
std
xchg
fcomps
fcomps
xchg
repnz
fs
mov
mov
cld
sbb
add
loopne,pn
bound
adc
xchg
sbb
push
dec
cltd
xor
mov
jmp
push
and
add
popf
inc
pop
pop
lods
mov
sbb
ds
addr16
mov
cwtl
add
es
sub
mov
pop
xchg
in
enter
lock
cmp
fisubs
lcall
aaa
xor
pop
jge
js
insb
mov
push
mov
and
pusha
dec
pop
cli
jmp
jecxz
jmp
jecxz
imul
and
loopne
sub
fldenv
xchg
mov
xchg
call
out
dec
sbb
or
test
mov
adc
push
push
add
test
pop
jp
into
jle
rorl
mov
jp
pop
mov
popf
adcb
cld
add
sbb
push
sbb
out
xchg
fstl
cmp
out
pop
loopne
mov
adc
xchg
xchg
xchg
push
adc
fidivl
data16
rolb
mov
cli
loop
mov
jecxz
out
ljmp
pop
pop
adc
test
adc
add
jecxz
in
sbb
and
imul
adc
in
mov
rorb
and
lahf
out
or
sti
lock
stos
sub
ficompl
cli
jb
and
pusha
fdivrl
in
sub
shr
lods
inc
mov
or
cmp
test
mov
sbb
pop
neg
push
cltd
inc
sbb
sbb
daa
or
rcll
xchg
push
rcl
xchg
xor
pop
xchg
xchg
enter
mov
rclb
xor
mov
inc
loopne
inc
cli
ss
sbb
push
jecxz
add
in
popfw
push
in
jnp
pop
jmp
jmp
jmp
jmp
sti
push
xchg
hlt
xchg
loop
out
data16
outsb
or
repnz
shrb
or
add
lahf
fisubl
mov
ret
cli
leave
jae
adc
pop
xor
lret
sbbb
cli
ljmp
inc
mov
popf
add
shlb
cmp
mov
je
adc
pop
or
push
pop
adc
bound
mov
cltd
push
cmp
popf
cli
mov
fmuls
icebp
add
das
les
hlt
add
aad
sbb
fsubr
xor
cmp
jle
shll
jb
cld
sar
loopne
mov
cltd
out
mov
iret
fldl2e
loop
mov
enter
lds
loopne
shlb
data16
push
pop
les
push
push
inc
in
xchg
push
test
fstps
insb
fwait
jecxz
pop
cmp
lret
xchg
pushf
adc
pop
scas
movsb
inc
sbb
mov
insb
fwait
insb
sub
and
push
rcrb
daa
cmp
adc
inc
clc
mulb
push
test
les
icebp
adc
sbb
pop
int
lcall
mov
gs
mov
adc
push
es
adc
or
pop
js
mov
enter
jne
push
push
sahf
push
scas
test
push
xor
lret
jo
xchg
jnp
pop
loopne
shll
add
adc
mov
test
and
and
je
aad
lods
lret
push
leave
or
pop
push
dec
sbb
push
jl
sub
push
sahf
loope
je
push
add
sbb
or
pop
sbb
and
inc
jmp
or
aas
in
cmp
and
les
mov
xor
pop
movb
pop
negl
jg
loop
xchg
sbb
jb
dec
jnp
add
shrb
sahf
popa
les
mov
mov
les
xor
jnp
shll
xchg
push
mov
lods
out
mov
stos
push
aas
add
into
hlt
mov
and
andl
aaa
popf
popf
cmp
test
mov
jnp
leave
and
xor
sub
in
mov
je
movsl
loopne
hlt
sti
loopne
cmpsl
sbb
xlat
pop
add
je
in
les
scas
sbb
loopne
es
pop
cmp
mov
fldenv
cli
inc
mov
lods
jp
inc
pop
movsb
cltd
sub
jnp
in
inc
sbb
push
ja
movsb
xchg
add
lahf
std
sub
popf
pop
popf
mov
dec
cld
pop
in
mov
cmp
lea
rcl
cmp
pop
or
loopne
sbb
pop
loop
stos
xor
mov
pop
in
mov
cld
movsb
cld
and
in
imul
in
jecxz
fnsave
xor
jecxz
out
loop
mov
sub
lcall
enter
sub
push
jl
jp
dec
jns
jp
pusha
inc
inc
cmpl
mov
and
in
in
push
mov
xor
inc
cltd
dec
fdivs
outsb
push
push
out
push
push
adc
je
je
stos
jmp
out
sti
stc
jecxz
imul
mov
mov
lock
outsb
fbstp
sbb
xor
adc
call
sbb
shl
mov
mov
xchg
clc
gs
out
ret
adc
popa
lcall
stc
jne
stc
jmp
scas
jecxz
xchg
sar
xchg
in
xchg
in
pop
loop,pt
inc
and
mov
and
es
jb
mov
dec
loopne
sbb
push
adc
movsb
dec
sbb
xchg
lods
sbb
xchg
pop
int
sbbl
push
mov
jmp
sti
push
jmp
ljmp
inc
inc
xchg
sbb
mov
in
add
ljmp
mov
or
push
pusha
pop
add
jp
cmp
in
lock
lods
jo
fs
and
fucomi
bound
fs
inc
jbe
mov
jmp
cmp
pop
dec
and
and
adc
ret
test
testb
xchg
rcl
xchg
fcoms
ficoml
xchg
cwtl
aad
adc
clc
xor
mov
mov
sbb
incb
aad
pushf
mov
bound
cld
sbb
push
mov
aaa
inc
cmc
xor
gs
add
fsubs
push
jmp
ja
insb
adc
inc
nop
les
aad
dec
sbb
sub
cmp
fmuls
or
xchg
add
pushf
repz
bnd
sbb
out
push
scas
fprem
data16
frstor
out
jmp
lret
mov
sbb
xchg
lock
into
pop
adc
or
inc
add
mov
add
mov
pop
cmpsb
adc
jmp
jbe
mov
loopne
cld
xchg
lods
fistpl
cmc
loop
out
inc
jecxz
fcmovne
jecxz
fildl
addr16
in
adc
pop
xchg
push
xchg
xchg
pop
arpl
cli
push
nop
and
lods
push
push
pop
pop
movb
sbb
sbb
push
dec
lret
inc
lret
popa
sti
imul
pop
add
gs
in
push
cld
adc
push
push
fs
fs
xor
stos
pushl
clc
xor
lock
loop
and
je
dec
pop
jecxz
adc
in
enter
sti
mov
icebp
push
fdivl
and
cmpsb
movsb
loopne
mov
insb
outsb
mov
push
sub
es
sub
es
adc
jb
call
outsb
imul
movsl
push
pop
int3
adc
mov
pushf
add
mov
cmp
stos
pop
xchg
pop
xor
mov
and
push
and
out
and
cltd
pop
sbb
lret
push
in
ds
pop
in
xor
xchg
add
into
fs
and
adc
shll
test
icebp
sub
subb
lock
cmpsl
xchg
bound
mov
loop
jbe
jecxz
push
cmp
add
xchg
jbe
lret
jecxz
pop
pusha
call
adc
loope
or
loopne
jmp
mov
pop
in
shrb
lock
push
loop
mov
enter
sbb
or
and
xor
pop
cmp
lahf
cmp
sbb
jmp
aam
sbb
andb
aas
pusha
fisttpll
scas
sbb
mov
aam
or
cmp
ret
mov
popf
push
vmovapd
mov
clc
lods
popf
inc
rcrl
ljmp
lcall
pop
data16
or
and
out
or
pop
mov
xor
rorb
jnp
loope
rcrl
and
push
sbb
sbb
mov
testb
or
pushw
aaa
test
stos
cmp
lea
add
dec
sti
int3
aam
sbb
cmpsb
pop
pop
mov
and
mov
xchg
stos
or
fmull
pusha
pusha
cmp
outsb
fstps
push
inc
mov
jnp
xor
pop
and
and
aaa
sbb
pop
or
fwait
test
fldt
cmpsl
cltd
mov
negb
popf
pop
or
add
stc
cli
fs
mov
push
mov
fisttpll
pop
jge
std
or
mov
mov
push
mov
ret
push
or
or
in
sub
data16
adcw
clc
stos
notb
out
jmp
cltd
or
fcmove
sti
lcall
loop
sti
je
jecxz
pusha
jle
xlat
dec
or
push
sbb
adc
jnp
ret
or
hlt
sub
pusha
mov
jo
and
outsb
in
call
aad
mov
mov
into
add
imul
pop
sub
fistpl
jmp
hlt
jo
inc
mov
je
enter
lcall
sbb
ret
loopne
and
mov
loop
add
les
in
mov
pusha
jl
pop
loope
pop
lods
cmp
pop
pop
loopne
out
test
call
je
push
mov
mov
fistpl
and
push
or
shlb
lds
das
dec
in
aad
mov
xchg
addr16
movsb
mov
ljmp
scas
push
jno
dec
xor
std
fnstcw
stos
dec
sbb
push
adc
adc
fdivl
movsl
or
adc
icebp
xchg
add
adc
xchg
pop
ss
push
cld
push
fcomp
fldlg2
xlat
popf
jns
sbb
mov
push
mov
scas
jnp
adc
repnz
test
js
dec
xchg
push
cmpsl
sbb
add
sub
jecxz
fucomip
cwtl
cld
pop
decb
push
mov
push
in
or
loopne
cld
mov
adc
mov
mov
or
mov
subb
add
dec
mov
lret
sbb
frstor
fnsave
je
in
cld
mov
adc
mov
xchg
cmp
or
add
not
addr16
adc
shr
mov
push
inc
xor
and
aas
out
jp
fcmovne
iret
jecxz
stc
lods
std
jo
cmpsl
mov
cmp
push
mov
dec
mov
push
movsl
aaa
sbbb
fidivrl
sbb
or
inc
cmpsb
push
lret
cmp
adc
loope
mov
rcrb
mov
or
cmp
and
jmp
es
inc
cld
push
and
cmpsb
and
sbb
jae
and
out
push
lret
xchg
pushf
and
adcl
dec
sbb
xchg
repz
in
pushw
pusha
subl
mov
jmp
hlt
iret
sbb
orl
pop
jge
or
loop
push
mov
push
pop
out
jge
fsubrp
and
sub
sub
in
mov
lcall
fnsave
add
stos
test
add
jmp
jecxz
fistl
pop
dec
pop
leave
fistps
and
aas
nop
popf
movsl
mov
adc
dec
push
sbb
fwait
lret
cmp
jb
fsubl
adc
sarb
inc
loop
jp
mov
flds
mov
adc
mov
rcr
pop
inc
clc
outsb
sbb
cmp
pop
fwait
inc
add
sar
mov
push
and
sbb
mov
gs
cmpxchg
inc
call
jge
jp
lcall
fwait
enter
fcmovnu
xor
push
jbe
out
sbb
out
jp
jp
enter
hlt
testb
xchg
rcrb
and
mov
dec
cmpsb
adc
lea
xchg
sti
int
xchg
cld
aad
lds
pop
daa
add
clc
and
and
jo
out
push
icebp
lret
pop
test
add
and
les
xchg
push
and
aad
aam
andb
sub
pop
push
mov
xchg
and
icebp
push
insb
or
inc
popf
lret
mov
mov
xchg
pop
jb
aas
push
or
xchg
test
jo
in
push
cld
jbe
add
repz
les
cld
cmc
xchg
xchg
aaa
sbb
hlt
clc
or
lret
out
fdivs
jo
movsb
xchg
hlt
loopne
mov
fidivrl
loope
or
push
arpl
jecxz
cmp
ds
sbb
or
pop
xchg
pop
lret
std
lret
dec
and
out
cli
inc
call
iret
mov
push
add
cmp
mov
repnz
adc
adc
js
inc
lock
hlt
hlt
sti
loop
pop
pushf
rcrl
ds
mov
test
cld
scas
ljmp
mov
sbb
fdivrs
fs
push
cld
sbb
add
out
fmuls
popf
inc
push
pop
outsb
outsl
xchg
fcomps
fldt
fstpt
pop
sub
stc
inc
call
xor
loopne
neg
mov
mov
add
inc
add
sbb
xor
ss
dec
adc
jbe
inc
cmp
loope
aad
mov
loopne
pop
std
ss
push
cwtl
jge
sti
push
out
add
or
movsb
add
jno
xchg
sbb
bound
es
push
adc
push
or
xchg
cmpsl
sti
mov
jmp
sub
jns
jns
testl
push
enter
ret
out
xor
add
mov
mov
js
adc
in
push
scas
in
out
in
movsl
cwtl
loopne
adc
inc
je
mov
mov
adc
adc
push
in
data16
add
fsub
int
xchg
push
xchg
xchg
aad
sbb
pusha
mov
fsubrp
sub
sbb
in
or
movsb
lret
lods
lret
ljmp
adc
dec
rolb
xor
dec
or
or
xchg
sub
xchg
cmp
cmp
inc
mov
test
cli
mov
into
jbe,pn
or
pop
pusha
lods
push
push
orb
or
push
add
push
add
insb
adc
push
cli
adc
jne
push
mov
lods
pop
ds
lret
jmp
fcmovnbe
insb
ljmp
xchg
test
jmp
sti
fisubl
and
push
fstl
sbb
lock
fcmovu
lods
xchg
cmp
push
lcall
xchg
push
rcr
cmp
mov
cli
mov
mov
cmpsb
cmp
mov
push
mov
push
outsl
adc
mov
out
lret
adc
fwait
push
out
sub
pusha
int3
rclb
out
sarb
cmp
out
sub
sub
cld
loop
xchg
insb
sub
pop
daa
je
lahf
push
and
loope
mov
push
cs
push
cs
or
sbb
sbb
in
xor
sbb
jmp
lcall
or
addb
scas
fdivr
cltd
test
fdivp
add
out
fidivrl
loope
bound
add
insb
or
pusha
addr16
push
mov
jmp
cmp
pushf
mov
mov
jae
xorb
adc
call
adc
adc
dec
jp
xor
in
inc
cmpsb
cltd
cwtl
jbe
sbb
xchg
push
cmp
mov
dec
sbb
ljmp
sub
mov
sbb
sbb
xor
aad
xchg
in
shr
fcoms
pop
jl
add
sbb
push
loop
jmp
pop
neg
xor
jb
xchg
inc
test
push
inc
mov
adc
pop
xor
add
sbb
or
adc
mov
repnz
pop
mov
or
add
in
repnz
and
adc
xchg
mov
adc
mov
push
psubusw
jmp
ljmp
filds
mov
and
movsb
push
sub
dec
lcall
jnp
jmp
sbb
std
push
lahf
mov
or
xchg
call
idiv
psubd
jae
loop
call
xor
cmp
pop
and
jmp
ljmp
mov
mov
loopne
cmp
pmuludq
add
call
pop
test
out
mov
and
js
faddl
cltd
add
lcall
insb
scas
pop
xor
dec
aaa
inc
lock
loope
dec
push
jle
aam
push
jecxz
xor
push
pop
push
or
sub
and
inc
adc
in
mov
fists
cwtl
ss
lds
push
push
jo
push
mov
xor
xor
les
fdivrp
sbb
fcmovnb
cmp
lret
sahf
lret
fs
and
dec
stos
enter
jecxz
ss
scas
aas
mov
mov
push
mov
inc
mov
ret
pop
enter
lods
pop
mov
hlt
in
jnp
lret
test
push
int
ss
cld
test
sahf
lcall
fmuls
lods
popf
std
pop
fisttpll
std
fmuls
mov
and
xchg
xchg
cltd
dec
jecxz
hlt
test
cmpsl
in
push
push
in
and
mov
jmp
lret
cmp
insb
inc
les
cwtl
jo
pop
insb
insb
aas
mov
inc
push
adc
in
push
mov
pop
sbb
lea
call
and
cmp
fucomi
pop
xchg
jmp
lret
and
sbb
mov
mov
adc
sti
je
out
sub
loope
test
dec
lahf
push
in
cmp
out
lock
cld
faddl
rolb
stos
push
in
loope
lock
add
bound
push
int3
inc
insb
mov
adc
xor
mov
sahf
mov
ds
or
out
mov
aam
jae
cmp
push
mov
dec
or
ret
in
cmp
push
jecxz
xchg
mov
movsb
push
xlat
lods
push
cli
or
push
or
mov
jmp
pop
inc
lcall
fwait
insb
push
sbb
cld
ds
sbb
and
and
subl
repz
in
es
cli
test
sbb
mov
add
inc
int3
loopne
and
cmp
jne
push
test
loopne
adc
lods
loop
call
jecxz
in
cld
xchg
mov
jno
in
adcb
loop
je
cmp
jo
loopne
xchg
mov
cld
pop
rcr
push
mov
movsb
mov
in
es
aas
and
aad
popa
cmpsb
add
mov
dec
je
loop
jge
ss
pop
dec
cld
sbb
sub
cwtl
les
in
dec
sbb
sbb
sub
sbb
sub
ljmp
into
adc
insb
cmp
push
push
pop
fidivrl
int
test
fstpt
js
repnz
inc
imul
je
aas
xor
xchg
xchg
jp
ss
mov
jmp
dec
fidivrs
cld
js
notb
sbb
loope
jmp
push
mov
jge
pop
test
lahf
push
push
hlt
aam
xlat
xchg
push
jp
loop
movsb
add
and
movsb
or
sub
loop
sbb
les
dec
and
roll
in
cld
fs
pop
sbb
fstps
add
xchg
sub
mov
out
jecxz
add
or
in
hlt
adc
ds
hlt
xchg
mov
push
enter
adc
cmp
popf
addr16
sbb
sub
mov
stc
push
call
repnz
and
js
ficoms
xor
lods
int3
xor
sbb
loope
mov
cmpsb
xchg
mov
and
cmp
fwait
lds
pusha
loopne
cld
push
push
out
jecxz
xchg
adc
cli
in
xchg
cld
out
cld
in
hlt
pop
jecxz
rcl
xchg
sbb
iret
les
stc
push
insb
out
adc
pop
or
jo
in
rep
dec
cmp
test
sbb
xchg
int3
pusha
fsubs
insb
out
and
push
jo
xchg
fsubr
adc
cmp
add
pop
cwtl
cli
hlt
push
repz
jbe
and
mov
sbb
push
sub
lods
jmp
pusha
and
aad
pop
adc
lock
xor
adc
enter
clc
jl
je
aam
push
and
push
adc
xchg
clc
rcrl
adc
data16
lea
aad
dec
push
stos
test
add
loopne
cld
jb
fstpl
incl
loope
and
add
pusha
jo
popf
push
js
dec
mov
sub
es
pushf
cmp
pop
out
push
rcrl
inc
sbb
or
ret
lahf
dec
mov
sbb
popa
fstpt
jmp
xor
loopne
into
sub
je
daa
cld
adc
fs
sbb
push
loop
ret
pop
fiaddl
ja
push
in
repnz
jmp
dec
cmpsb
lahf
ljmp
fnstcw
lcall
loop
in
enter
sbb
leave
and
jl
jp
and
out
loopne
jnp
out
imul
mov
mov
mul
or
stc
lret
sub
lret
or
push
bound
dec
sbb
in
mov
or
xchg
sbb
ljmp
pop
out
repz
lock
pusha
ffreep
sbb
ljmp
sbb
popf
aaa
sbb
sbb
pop
sarl
add
jmp
mov
outsb
jecxz
xchg
iret
mov
or
stos
aam
push
adc
adc
or
bound
pusha
adc
mov
adc
outsb
cld
jmp
clc
push
mov
lock
push
jo
cld
scas
hlt
push
loope
adc
fwait
cmp
insb
jecxz
sub
cwtl
loopne
mov
pop
rcrb
into
aas
push
insl
mov
shlb
mov
jecxz
cli
lret
sbb
std
mov
cmp
cwtl
mov
adc
mov
push
and
cltd
es
xor
inc
cltd
jle
stc
push
stc
leave
fnstcw
cmp
or
in
adc
push
push
jmp
in
in
lods
push
test
add
daa
xor
jg
out
loope
xchg
out
cli
push
mov
int3
mov
outsb
lods
mov
cmp
push
fldlg2
ljmp
imul
add
jmp
lret
outsb
jmp
movsb
or
je
mov
loope
aad
pop
dec
into
mov
out
sbb
inc
sbb
test
or
scas
adc
xchg
mov
fs
sbb
out
push
call
and
inc
inc
cmp
cmp
dec
push
mov
and
and
cwtl
mov
adc
mov
or
repz
or
sti
jb
sahf
cmp
fdivrs
popf
adc
cli
pop
mov
add
js
adc
inc
xor
sub
es
test
aaa
out
push
push
push
je
push
sbb
pushf
imul
add
pushf
hlt
jae
enter
loop,pt
mov
sub
inc
or
out
dec
imul
lods
es
imul
inc
inc
rcrb
push
cli
xchg
stc
hlt
push
sbb
or
orb
sbb
int3
push
pop
push
fisttps
adc
pop
or
fsts
cli
jp
call
mov
ds
std
repnz
cmpsl
xchg
hlt
in
xchg
mov
out
or
or
xor
sti
pop
xchg
xchg
clc
lahf
bound
mov
dec
ss
popf
mov
lret
xor
loopne
xchg
xor
dec
sti
sub
cbtw
push
lahf
push
cltd
adc
pusha
push
xor
push
cltd
push
das
test
out
clc
cmp
lock
loopne
out
fcompl
cld
aam
popf
rolb
push
xor
or
cmp
pusha
and
jl
sbb
jmp
jbe
andb
push
and
je
or
cmp
add
dec
subl
rorl
les
sbb
je
insb
mov
pop
fisttpl
lods
xor
stos
pop
cmp
fstps
sbb
mov
sbb
pop
mov
lods
int3
and
cmp
es
dec
xor
aaa
cmpsl
pop
hlt
mov
xchg
xchg
mov
jns
jmp
mov
inc
hlt
test
sub
sbb
rolb
clc
ficompl
adc
cltd
insb
sbb
push
out
lods
ficompl
lahf
lret
add
inc
lock
push
mov
lds
fsubrs
iret
adc
test
dec
test
push
mov
add
loopne
adc
xchg
pop
sarb
shlb
pusha
cmp
adc
in
and
lds
dec
outsb
rolb
push
fstl
cwtl
fstl
sbb
daa
ljmp
out
push
pop
repz
cmpsb
pusha
out
fadds
ret
mov
add
pusha
inc
pop
adc
loope
cli
outsb
aam
leave
jecxz
fsubrs
adc
int3
adc
insb
imulb
in
jecxz
outsb
push
jne
fsts
lret
sahf
jns
sbb
fs
mov
loopne
in
xlat
mov
xchg
notb
repnz
jnp
mov
fcmove
mov
lahf
sbb
test
mov
mov
lcall
dec
mov
inc
xchg
jnp
or
and
sub
incb
and
in
xchg
or
roll
sahf
insb
loopne
addr16
fisubs
or
dec
pop
ds
out
or
mov
cmp
fwait
scas
je
ja
scas
xor
mov
xchg
std
mov
add
insb
adc
pop
pop
loope
lcall
mov
shl
adc
enter
loop
imul
mov
fstpt
data16
lahf
fcmovu
test
push
cmp
call
mov
adc
xor
push
fisttpll
mov
xchg
pop
aam
cmp
or
adc
mov
hlt
xchg
lret
shrl
jnp
sti
adc
fidivrl
into
jae
cli
call
lods
mov
test
enter
mov
fstps
cli
push
clc
xchg
mov
push
and
test
lea
and
cwtl
je
insb
dec
pusha
jp
and
pusha
pusha
aas
out
jmp
xchg
dec
add
les
xchg
mov
ljmp
in
add
or
push
xchg
jmp
mov
pop
xchg
xor
and
mov
loopne
xchg
jecxz
xor
enter
testb
and
jle
lods
sbb
sbb
es
and
sti
fxch
mov
stc
lahf
stc
adc
sbb
jmp
loopne
or
sbb
sbb
push
push
sbb
push
add
mov
sub
lock
enter
mov
out
mov
jmp
xchg
out
stc
inc
mov
pushf
loop
add
inc
mov
test
ljmp
sahf
and
push
ljmp
cmp
or
jmp
nop
pop
sub
popa
test
push
jle
negb
loop
cltd
cs
mov
sahf
rcrb
fcmovb
int
sbb
pop
push
adc
in
in
sub
push
jmp
dec
rorb
dec
add
fwait
loopne
sbb
into
cld
dec
xchg
lods
es
and
cmpl
pusha
and
popf
xchg
rclb
in
dec
or
in
repz
jmp
dec
arpl
sbb
repnz
lahf
mov
sbb
sbb
jecxz
jmp
pop
sarl
stc
dec
mov
cmp
jp
gs
fists
xchg
ss
stc
cmp
xor
sbb
dec
fimull
out
lret
rolb
push
pop
ljmp
hlt
hlt
sub
std
xchg
ljmp
mov
add
mov
adc
shr
pop
inc
xorb
xor
or
pop
loopne
and
mov
sub
cmp
mov
xchg
sti
sti
or
cli
mov
jecxz
xor
xchg
dec
in
push
dec
out
pop
ljmp
push
or
stos
fucom
push
xchg
outsl
adc
pop
notb
cld
rcll
in
and
cwtl
xor
popf
dec
mov
and
sbb
in
mov
test
pop
and
xchg
xor
sbb
les
lds
or
clc
mov
icebp
xchg
or
adc
scas
in
mov
mov
push
insb
bound
sub
push
and
and
sbb
fldl
std
loope
lods
pop
int3
push
enter
call
jl
mov
cmpsb
mov
or
sub
adc
insb
je
mov
push
cld
out
mov
sbb
and
cwtl
xchg
jp
sbb
icebp
adc
pop
les
loopne
jo
and
and
cmpsl
out
xchg
jg
cmp
loope
or
cmp
xchg
mov
mov
mov
and
jge
mov
mov
mov
cli
fsub
sbb
xor
lcall
jmp
scas
jp
fsqrt
out
popf
ret
lahf
repnz
test
lods
enter
ljmp
mov
insb
divl
push
pop
xor
pop
or
adc
adc
into
pop
popa
jb
je
mov
mov
fcomi
adc
jns
fcomi
adc
xchg
or
lods
jno
adc
data16
adc
shrb
push
jecxz
pop
jmp
fildl
enter
xor
hlt
cwtl
cmp
lock
lret
icebp
lret
fwait
rcrl
add
adc
sbb
inc
inc
cwtl
lods
mulb
sub
int
decb
and
jle,pt
and
xchg
adc
test
loopne
and
out
jecxz
and
inc
and
xchg
jo
in
movsl
adc
in
lock
cmp
loopne
add
push
test
clc
cli
jns
repz
por
jmp
cmp
jmp
jnp
sti
mov
sub
and
cmp
les
aaa
pop
scas
cmp
inc
iret
addb
push
inc
popf
mov
fistpll
xchg
push
cmp
or
dec
cmpsl
frstor
mov
dec
jp
push
cmp
lods
aas
dec
out
out
loopne
jmp
insb
xchg
cli
adc
pop
pop
cmp
or
jg
pop
fcmovbe
dec
xchg
and
lods
data16
mov
xchg
push
les
jmp
sbb
mov
push
push
sbb
xchg
fstpt
es
lret
popf
xchg
fmul
lock
leave
or
stos
les
jb
push
or
daa
aas
adc
out
fnstcw
and
pop
pop
xchg
sub
ss
insb
lods
rcrb
push
mov
fld
inc
mov
mov
cld
add
and
sbb
sbb
jo
les
in
in
push
nop
fcomip
lock
sbb
loope
sub
fnstenv
mov
push
lock
sbb
std
pop
mov
dec
xchg
hlt
pusha
es
adc
test
jmp
jno
stos
cmp
mov
sti
outsb
push
inc
stc
sbb
je
push
push
sbb
hlt
push
outsl
lea
fildll
cld
push
mov
aas
sbb
jnp
adc
jg
mov
add
loopne
xchg
mov
aam
pusha
int3
lods
mov
lods
loopne
gs
insb
add
mov
mov
sub
mov
pop
xchg
aaa
or
stc
out
cmp
shrl
add
out
and
mov
inc
add
cmp
imul
adc
aam
addr16
lret
in
cmpsl
loop
hlt
xchg
cld
sbb
out
and
fs
jecxz
mov
aam
add
loope
pop
xchg
or
ss
or
pushf
push
pop
loop
sahf
fwait
test
xchg
sbb
push
scas
mov
loopne
cmpsb
adc
cmpsb
push
adc
mov
stos
sub
popa
aad
mov
xchg
push
test
push
mov
adc
xchg
add
insb
cmp
mov
mov
jno
lret
je
je
mov
mov
xchg
enter
ret
aas
mov
insl
sbb
jmp
and
jmp
mov
or
xchg
add
cltd
pop
push
adc
les
adc
pop
xchg
xchg
xchg
aad
and
clc
outsb
push
xchg
push
inc
pop
and
lods
add
xorl
inc
or
fisubs
int
jmp
jno
stc
xchg
sub
sbb
ja
pop
in
mov
jns
sbb
add
jnp
pop
pop
mov
sbb
cli
sub
in
imul
loopne
and
and
aaa
xchg
mov
pop
cmp
sub
sbb
cmp
xlat
sbb
sbb
add
pusha
pop
subl
cmp
push
mov
fidivrl
push
jns
in
xor
lahf
hlt
stc
popf
mov
lcall
adc
leave
mov
xchg
xchg
lds
insb
bnd
lea
mov
push
and
je
je
out
lcall
push
frstor
pop
push
push
xchg
inc
xchg
mov
mov
fprem
iret
stc
int3
fiaddl
mov
repz
pusha
jmp
push
xchg
in
mov
xchg
inc
jecxz
shlb
mov
hlt
aaa
mov
insb
adc
aam
lahf
xor
nop
push
sbb
out
out
or
stos
add
inc
shll
add
pusha
pusha
dec
pusha
pop
xchg
dec
add
aam
out
fs
sbb
mov
ja
sbb
fsubp
popf
ljmp
cltd
push
and
sub
sbb
fldt
dec
jmp
sti
cmc
mov
push
xchg
adc
jle
add
add
data16
mov
shl
mov
add
sahf
dec
mov
add
sub
mov
sbb
cwtl
cwtl
xor
lds
cmp
jecxz
clc
fsub
lcall
pop
add
fcmovnu
jecxz
and
sbb
in
xchg
out
pop
mov
aam
test
xchg
adc
sub
lcall
pop
xor
jmp
and
ficomps
cli
imul
push
push
jp
cmpsb
push
dec
sub
loope
lret
mov
or
and
cmp
popa
push
add
rolb
add
shlb
aaa
dec
popf
call
jecxz
ret
fistpl
jmp
pop
push
call
aaa
sbb
mov
cli
adc
push
jbe
insb
mov
or
je
push
xor
sub
push
add
popa
movsl
and
fbld
lret
outsb
jecxz
cs
ja
insb
dec
lea
mov
fxch
fsqrt
xor
in
frstor
pop
inc
fldt
rclb
cli
mov
push
lods
loopne
pop
inc
ds
sub
xchg
lock
loope
add
pusha
lods
push
inc
scas
fadds
adc
lret
pop
and
mov
test
or
sub
jo
jecxz
lea
les
sbb
push
and
add
push
push
push
xchg
icebp
pop
aam
push
and
les
les
rolb
out
lahf
movsb
add
inc
pop
push
jecxz
cmp
pop
inc
mov
fstpl
fmuls
mov
inc
pushf
bswap
adc
sbb
int
mov
xchg
out
fs
je
je
xor
in
pop
push
or
sbb
out
cld
and
push
push
movsb
in
loopne
sti
loopne
clc
adc
fs
loope
hlt
call
jmp
jmp
lret
shrl
inc
sti
mov
into
sub
adc
or
adc
ss
sbb
mov
push
mov
or
mov
sbb
sub
pusha
jbe
xor
inc
mov
sbb
xor
mov
fwait
es
sub
ds
adc
jmp
push
lds
mov
rcll
repz
popf
hlt
push
and
jbe
jecxz
enter
jmp
jmp
pop
mov
adc
clc
fs
outsb
xchg
movsb
repz
fidivrl
lcall
lret
pop
fistl
scas
cwtl
xchg
ficoml
pop
or
hlt
loopne
lret
xor
hlt
jo
lcall
adc
test
rcrb
or
imul
test
dec
in
mov
mov
mov
pop
out
pop
movsb
push
in
or
pusha
mov
xchg
inc
add
xchg
push
stc
push
pop
fsubp
mov
loop
jnp
clc
jmp
mov
movsl
sti
dec
pop
lret
sub
pop
int3
loopne
pop
xchg
mov
movsb
aaa
enter
push
push
int3
lods
jnp
cmp
push
xlat
or
lret
add
push
cmp
pop
stos
sbb
out
inc
les
mov
lods
fdivrl
mov
sbb
rcrl
loopne
enter
sbb
hlt
fcomps
or
push
les
les
or
loop
jge
push
fbld
pop
xor
fdivr
sub
inc
bound
into
shr
into
in
mov
fs
test
jne
dec
stc
or
outsb
stc
cmp
mov
rorb
sub
adc
push
ds
push
cwtl
aaa
bound
aaa
mov
xchg
lcall
cmp
pop
dec
fmuls
out
sbb
xchg
or
and
inc
mov
call
push
sbb
sbb
add
pop
or
repnz
mov
jp
add
leave
pop
sahf
loope
fildl
xor
push
test
cltd
push
sbb
fldenv
mov
pop
cli
pop
stc
loop
sub
stc
push
xor
adc
pop
pop
enter
mov
add
in
arpl
xchg
mov
bound
or
adc
loopne
outsb
hlt
nop
repz
push
lods
hlt
push
mov
jecxz
lcall
rcrl
pop
push
jp
cmp
fisubrs
lret
jle
and
pop
repz
bound
sub
addr16
lcall
loopne
push
pop
lea
push
ljmp
mov
fbstp
cld
xchg
inc
mov
fisubl
hlt
adc
mov
ficompl
or
jnp
sbb
sti
mov
fwait
jbe
imul
lods
ss
mov
in
jecxz
cwtl
xor
loop
and
jecxz
shlb
and
xchg
les
xor
xor
fdivl
or
mov
into
into
adc
lea
sub
mov
movsb
cltd
xchg
ss
repnz
adc
sahf
gs
cmp
and
test
out
in
cltd
stos
fnstsw
cmpsb
add
inc
lock
adc
movsb
and
clc
or
adc
int3
mov
and
aas
rcll
or
sbb
call
lods
fwait
retw
stos
ss
inc
je
vsqrtpd
jl
xor
clc
enter
mov
push
negl
add
dec
xchg
push
je
mov
leave
dec
mov
mov
adc
out
and
jge
mov
push
push
in
pop
add
push
add
push
test
cmpsb
sti
cmpsb
cmp
data16
testl
mov
sahf
push
pusha
sub
cwtl
xchg
push
pusha
daa
pusha
pop
add
xor
insl
sbb
mov
sbb
movsl
inc
enter
jb
pop
clc
dec
adc
shlb
out
adc
inc
dec
repz
rcrb
lcall
mov
in
fxtract
lods
in
dec
cmpsl
jnp
sbb
adc
in
mov
out
test
fwait
cwtl
lahf
fstpt
lods
outsb
push
adc
inc
je
sbb
in
mov
inc
mov
pop
mov
add
add
shrb
or
imul
sbb
in
into
je
inc
jl
cmp
pop
jp
and
cs
sbb
out
pop
mov
sbb
rcl
xchg
or
in
stos
lods
xchg
in
xchg
mov
and
stc
jl
sbb
test
mov
add
aas
fisubrl
sbb
mov
mov
inc
mov
pop
pop
fisubl
or
clc
je
icebp
je
insb
in
je
inc
push
in
pop
sub
dec
call
dec
ficompl
mov
sbb
lret
cltd
adc
sbb
add
fxch
rcr
push
cld
repnz
jp
loopne
add
mov
enter
mov
mov
adc
sbb
enter
sti
xchg
jbe
loopne
or
mov
adc
mov
out
scas
mov
ljmp
int
loopne
ficoms
cmpsb
pop
mov
dec
or
loope
push
out
push
nop
xor
insb
cld
pusha
ds
or
je
incl
xor
repnz
js
jb
sbb
mov
loop
dec
push
vmwrite
idivb
cltd
xchg
cmpl
cltd
xor
aas
sub
sbb
out
outsb
push
les
movsl
add
je
adc
xchg
data16
or
int
add
inc
sbb
jnp
and
in
mov
hlt
cld
sbb
adc
cmpsb
mov
push
outsb
loop
mov
sbb
scas
jmp
mov
js
fistpl
cmpsb
sarb
xor
push
push
cmp
mov
stc
stc
and
pushf
push
orb
fcomps
jp
repnz
lods
mov
mov
xchg
push
push
or
cmpsb
xchg
pusha
cmp
mov
add
popf
out
xchg
cwtl
in
mov
add
pop
mov
xor
mov
out
adc
lds
es
sbb
lret
or
fistl
push
aam
push
loopne
lock
xor
loope
xchg
ror
sbb
sub
lds
push
lahf
push
jnp
jbe
dec
or
lods
add
adc
sbb
sbb
jle
pop
lock
sbb
test
adc
fistpl
mov
push
loopne
push
mov
pop
lcall
scas
scas
pop
repnz
jnp
jecxz
xor
ljmp
dec
rorb
ss
sahf
and
lea
sbb
sub
pusha
pop
dec
test
mov
sahf
jle
in
sub
ljmp
pop
cltd
add
in
data16
insb
sbb
imul
fcompl
mov
dec
cmpsl
in
xor
jecxz
push
adc
mov
hlt
cld
addl
adc
adc
cltd
test
add
lahf
shlb
aaa
in
movsl
les
into
adc
adc
rorb
repz
insb
mov
popf
mov
lret
push
in
mov
pop
in
ljmp
cltd
dec
pushf
cli
aam
or
lahf
mov
or
push
add
jo
insl
or
in
ret
les
repnz
mov
pop
lret
insb
xor
mov
mov
cmp
lcall
push
sub
cli
mov
sbb
js
push
mov
pop
adcb
rcrl
push
push
sub
xlat
sub
insb
inc
xor
movsb
aad
movsl
push
push
jbe
mov
add
es
inc
mov
stos
add
push
add
pop
xchg
xor
push
jb
aaa
in
insb
pop
inc
subb
out
push
cmp
sti
inc
and
cli
jle
imul
and
outsl
mov
or
ja
jle
mov
cld
lcall
mov
repz
mov
jl
xor
je
ljmp
rolb
addr16
decb
mov
adc
out
pop
and
fyl2xp1
sub
xchg
jmp
dec
popf
cmp
push
adc
or
dec
fnstcw
call
and
cld
out
sub
bound
or
les
sbb
and
es
push
and
and
ss
xor
add
ret
repnz
ds
adc
mov
push
add
fs
push
popf
push
inc
cmc
in
ja
pop
sbb
loopne
mov
add
push
or
cltd
call
hlt
push
push
pusha
fwait
inc
ljmp
les
movsl
in
loopne
pop
push
xor
nop
addb
cmp
and
hlt
es
jg
add
aam
and
sub
aas
pop
pop
in
mov
mov
inc
cli
mov
lds
je
fistps
pusha
mov
pusha
je
call
add
sbb
push
add
mov
fnstenv
sbb
inc
push
out
or
inc
insb
xchg
je
push
pop
cwtl
les
inc
rcl
mov
inc
fmuls
lcall
inc
lret
or
push
loop
mov
lret
jmp
or
cmp
lcall
daa
push
movsl
add
pop
cmp
dec
pusha
lret
mov
pop
fistps
xor
or
mov
push
in
or
cmp
mov
sub
push
sbb
fisubs
out
pop
sbb
xchg
sbb
sub
sub
mov
mov
pop
hlt
mov
xchg
negb
pop
aam
mov
fdiv
stc
jmp
jp
test
fsubs
ljmp
aad
jo
add
stc
jno
or
in
push
push
lcall
shrl
adc
test
in
add
roll
in
or
push
or
pushf
ss
and
es
adc
jo
ds
movsb
fiadds
xor
rclb
sahf
and
insb
jbe
js
or
pop
pop
fcomp
int3
imul
sbb
mov
add
and
push
and
dec
pop
icebp
rcrb
add
imul
xor
pop
leave
sub
icebp
xor
sbb
dec
sti
or
dec
xor
into
fwait
out
mov
mov
jecxz
lret
int3
loopne
lods
push
and
cmc
and
inc
adc
loopne
jle
push
jb
insb
mov
xor
fwait
inc
adc
addb
add
cmp
sub
in
repnz
adc
popf
movsb
cli
sbb
out
xchg
xchg
mov
mov
or
or
mov
ret
push
dec
xor
rclb
sti
ss
adc
scas
fisttpl
ljmp
outsb
pop
scas
xchg
pop
push
add
cltd
mov
jne
dec
pop
jp
cmpsb
cli
sub
cmp
es
gs
loopne
cmp
pusha
in
inc
fisttps
scas
ror
xor
push
jl
push
mov
and
int
push
sbb
repz
inc
dec
loope
pop
shl
push
leave
and
jge
jl
sbb
fdivs
mov
in
je
loopne
pop
ss
bound
in
xchg
and
dec
xchg
mov
cmp
inc
jmp
xor
lock
dec
mov
xor
loop
xchg
or
sub
push
cli
fcomp
cwtl
jmp
int3
outsb
outsb
or
movsb
push
fsub
hlt
xchg
xor
cmp
repnz
cmp
test
out
mov
add
loopne
jp
sti
shl
mov
hlt
push
in
enter
sbb
mov
pop
lret
mov
imul
inc
and
jbe
sbb
lahf
mov
xor
in
and
xchg
in
popf
mov
fisttpll
fldl
popf
frstor
popf
fcmovu
mov
loop
push
cld
adc
push
jecxz
sub
test
cmp
mov
cwtl
and
mov
int3
pop
mov
xchg
hlt
fwait
les
and
push
sbb
or
inc
cwtl
in
and
mov
aaa
fldt
mov
sti
inc
mov
add
sub
cmp
sbb
fisttpl
stc
inc
xor
push
adc
and
fisubrs
test
jns
out
and
pop
int3
and
adc
xor
aaa
jmp
push
fsubs
pop
nop
shll
test
ret
aas
insb
add
sti
pop
lret
mov
xor
fildl
mov
loop
fwait
add
sbb
clc
lcall
shl
loopne
ljmp
pusha
std
pusha
or
pusha
xchg
sahf
pusha
push
pusha
jge
push
jb
cmp
sti
sbb
pop
lea
test
loop
mov
mov
mov
sbb
mov
xchg
xchg
clc
adc
lea
and
xchg
push
xchg
pop
imul
sbb
mov
call
das
sahf
pop
lods
and
into
mov
mov
pusha
push
callw
cwtl
fcompl
xchg
mov
insb
stc
and
lea
js
loopne
aaa
sti
ret
sti
jmp
jmp
push
in
adc
sub
int3
adc
cli
movsb
pop
in
xor
sbb
push
out
or
dec
mov
pop
adc
popf
divb
fdivrs
xchg
out
xchg
fists
sti
adc
in
or
fisttpll
adc
ja
cwtl
push
cmpsl
loopne
xor
add
cwtl
pop
out
out
test
xor
sbb
pop
mov
rcll
or
inc
dec
pop
data16
ljmp
cld
mov
cld
mov
fwait
pop
in
rcrb
dec
out
das
mov
inc
sti
add
outsl
mov
popa
push
mov
sbb
dec
fdiv
repz
sub
push
lods
in
mov
or
add
and
sbb
and
js
movsl
arpl
stos
mov
xchg
xchg
sub
add
lea
xor
es
loopne
and
pop
cmp
mov
push
scas
pop
or
pusha
xor
mov
xchg
les
sti
mov
dec
cmp
dec
dec
xchg
push
cmp
mov
pushf
xor
push
adc
fsubp
cld
mov
aam
bound
loop
lock
and
stc
xor
aam
loope
int3
push
pop
inc
iret
bound
push
out
enter
in
les
jg
es
cld
aam
sub
dec
lret
mov
insb
push
test
in
iret
jmp
cmp
mov
xor
repz
push
mov
out
andb
add
pop
mov
mov
lock
sub
sub
or
cld
repz
decl
or
and
sub
xor
aas
jnp
pop
jnp
jmp
fcmovu
sub
mov
pop
loopne
and
jp
adc
pop
sbb
lahf
clc
add
loopne
jp
jns
xchg
gs
outsb
inc
cmovbe
loopne
pop
movl
or
out
xchg
dec
enter
push
or
inc
out
adc
pop
ret
sahf
inc
sub
xchg
dec
or
inc
lods
adc
lock
scas
and
push
xchg
and
or
sbb
adc
ror
insl
adc
cmp
loope
pop
mov
mov
les
out
mov
cmpsl
out
clc
les
pop
inc
fs
sbb
test
inc
lock
adc
test
pop
sar
dec
mov
sbb
ret
sbb
cli
data16
repnz
or
dec
sub
jns
scas
sbbb
popf
and
js
pop
pop
sub
mov
adc
pop
std
mov
cld
adcb
syscall
data16
inc
lcall
cmp
sahf
cld
insb
jbe
mov
adc
into
adc
cld
cmp
sarb
xchg
aas
ret
pop
les
sti
mov
and
pop
movsb
adc
sbb
sbb
push
ljmp
ss
mov
inc
pop
inc
cmp
or
cmc
leave
adc
repz
pop
dec
sbb
out
sbb
nop
lret
dec
cli
iret
jns
pusha
mov
sbb
add
ret
and
jnp
dec
lock
lods
dec
mov
xchg
push
inc
mov
pop
jo
loope
mov
fs
cltd
cmp
in
out
fisubrl
fs
and
faddl
xchg
std
fistl
leave
lret
mov
sti
lock
ret
filds
inc
loopne
and
sub
aaa
or
sarb
pop
cld
lret
cld
cmp
add
fimuls
cwtl
je
insb
xchg
fimull
jnp
aaa
xchg
pusha
push
shr
dec
push
lods
cmp
shl
std
stc
sub
std
lahf
cltd
xchg
sahf
in
je
push
fcmovnu
adc
iret
jnp
jns
adc
push
lcall
in
and
inc
rcrl
shl
xchg
jmp
lret
inc
jmp
sti
push
xor
testb
dec
pop
xchg
repz
push
and
mov
sub
aas
pop
jp
sbb
dec
hlt
aam
push
dec
cltd
sti
aas
loope
scas
nop
cld
xchg
je
enter
sbbl
pop
pop
lcall
test
lcall
popf
inc
pop
push
xchg
mov
push
xchg
sbb
fstl
fldl
lret
movsb
pop
jns
jmp
cltd
xchg
xor
add
cwtl
xorb
pop
pop
lcall
outsb
loopne
lods
out
sbb
hlt
cmp
mov
or
add
lcall
xchg
outsb
xchg
mov
lock
sahf
fnstsw
xor
cmp
mov
xor
lret
repz
mov
scas
push
sarb
sahf
mov
insb
pop
lods
bound
pusha
mov
mov
popf
sbbb
and
ret
cwtl
or
xchg
adc
add
sub
loopne
and
mov
out
mov
lahf
ss
into
pop
inc
lcall
xchg
add
sbb
or
mov
outsl
push
pusha
je
inc
into
fadds
xor
push
xor
jb
rcr
loopne
push
jecxz
inc
mov
hlt
push
jb
out
sahf
push
sarl
stc
xor
pop
push
pop
rorb
je
push
xor
sub
xor
and
jnp
inc
je
xchg
pushf
popf
out
stos
adc
inc
popf
test
dec
or
bound
sbb
mov
push
pop
sbb
loopne
mov
mov
icebp
sbb
loopne
xchg
pushf
rclb
sbb
push
hlt
ds
scas
mov
insb
xor
push
sub
sbb
adc
push
aas
xchg
and
xchg
mov
mov
fnsave
rolb
rolb
inc
mov
cmp
pusha
ficoml
hlt
les
mov
pop
mov
jge
jbe
fisttps
xchg
clc
or
mov
push
aaa
jecxz
mov
movsb
mov
and
popf
sahf
and
hlt
into
sbb
fldcw
xchg
pop
repnz
adc
nop
sbb
sbb
repz
push
in
test
mov
sbb
and
insb
jne
cwtl
xchg
lret
xchg
testl
data16
in
sahf
in
cwtl
dec
add
dec
cmp
cmp
inc
fiaddl
xor
int
out
test
test
mov
mov
inc
sbb
rcrb
les
mov
je
push
add
call
hlt
imul
jl
cmc
xchg
push
test
pop
adc
sbb
xchg
mov
jnp
jbe
or
add
les
cmpsl
push
clc
dec
hlt
loopne
cld
test
rol
and
testl
pop
in
scas
lret
lahf
fistl
fcomp
ljmp
add
out
pushf
loopne
fsubs
in
dec
mov
push
mov
popf
jle,pt
jne
adc
xchg
push
xchg
xor
les
and
inc
pop
inc
test
sbb
adc
adc
aaa
xor
adc
jb
lea
add
int3
pop
inc
pushf
addb
and
mov
xor
xchg
nop
in
loopne
sbb
stos
out
push
aam
cli
inc
in
ljmp
xchg
hlt
hlt
ds
cli
popf
inc
out
xchg
sbb
xchg
sbb
cmp
pop
jnp
fcmovu
neg
movsb
cld
out
push
push
pop
fidivrl
xchg
fistps
in
loop
and
and
mov
lock
mov
adc
loopne
mov
pop
push
pusha
mov
pop
test
dec
sti
imul
cmp
add
add
pop
scas
aam
push
cmpsb
hlt
fdivl
and
mov
iret
jmp
jne
xchg
mov
mov
xchg
adc
int3
xor
sbb
xchg
out
sbb
inc
dec
aam
jp
iret
adc
lock
and
and
push
aas
or
and
out
mov
fdivp
adc
out
push
rolb
push
inc
mov
inc
sub
dec
negb
xor
mov
cmp
arpl
hlt
insb
cld
cmp
pop
add
movsl
cltd
xor
aaa
mov
jo
pop
mov
fs
mov
or
jbe
in
adc
into
rorb
lret
pusha
push
jo,pt
fcoml
sub
lea
mov
and
loopne
ret
in
mov
shlb
sbb
lret
es
or
js
push
sub
sbb
aam
mov
aaa
pushf
mov
cmp
rorb
jecxz
call
repz
into
out
sbb
adc
adc
adc
cmp
les
and
xchg
pop
outsb
jecxz
jl
jae
push
cwtl
inc
test
mov
sbb
fsubp
xchg
pop
lcall
test
movsl
sbb
pop
or
cli
dec
sbb
and
cmp
or
push
aam
xchg
sbb
lock
pop
sub
mov
test
sbb
loopne
enter
in
pusha
push
xor
sahf
or
inc
cmpsl
sbb
lock
jmp
or
mov
adc
test
push
insb
xchg
out
xchg
pop
jnp
push
lret
mov
push
cmp
push
mov
sti
sub
jbe
jo
dec
cmp
movsl
scas
popf
decb
rcrl
iret
pop
stos
hlt
sbb
sbb
or
lcall
push
dec
cltd
clc
nop
cltd
in
cli
mov
clc
fbld
push
in
imul
push
or
sbb
adc
sub
fs
inc
cmp
dec
push
xchg
cli
sahf
in
cmp
sub
fdivs
sarb
mov
sbb
or
xchg
bound
lcall
sbb
out
pop
push
pop
mov
js
jecxz
shrb
test
xor
or
adc
dec
sbb
jnp
mov
fsub
rcrl
shrb
cld
les
push
call
andb
push
cmp
add
jp
sub
adc
sub
push
inc
loopne
mov
or
pop
out
adc
nop
or
je
push
rcr
les
scas
pop
mov
mov
cmpsl
jmp
js
push
sahf
fimull
fdivrp
mov
push
push
insb
fsts
push
inc
stc
or
lahf
je
pusha
mov
cli
jecxz
jno
loop
cmp
push
aas
pop
test
iret
sub
and
es
sub
into
fstpl
fwait
imul
loope
jmp
lret
pusha
jmp
cli
sti
sarb
jmp
add
and
jmp
or
mov
pop
lods
and
push
lods
dec
movsb
ss
cld
je
add
aam
pop
adc
sbb
lret
add
stos
cwtl
cmp
pushf
fwait
cli
out
cmp
pop
mov
xor
cld
lret
mov
xchg
pop
jmp
cli
xchg
cld
and
dec
mov
test
jne
xor
mov
scas
cmpb
push
push
cltd
mov
sub
inc
je
inc
jo
xor
push
lcall
or
add
in
push
mov
mov
jne
jbe
xchg
pop
push
or
and
push
cwtl
sbb
lret
in
sbb
aam
fstps
mov
fnstcw
fldcw
or
pop
stc
add
cltd
inc
popf
out
fnsave
leave
fnstsw
sub
lret
sub
sub
aaa
cmp
loop
adc
add
popf
mov
cmpsb
add
or
sbb
sbb
out
push
mov
add
lcall
push
push
rolb
adc
push
sbb
test
sbb
lods
pop
mov
dec
rcrl
adc
mov
out
xor
mov
push
mov
inc
mov
les
lods
jnp
pop
sub
cli
fldt
sub
lods
into
neg
sbb
aam
rcrl
fdivr
fnsave
rorb
rolb
add
in
mov
xor
sub
cld
into
aaa
int3
pop
sub
stc
es
rcrl
pop
lea
mov
mov
and
data16
and
bound
sbb
int3
sub
pusha
xchg
jb
mov
inc
dec
loopne
sub
mov
add
or
cs
fadds
rcll
and
push
mov
and
and
je
push
arpl
jmp
pop
xchg
sbb
push
insb
push
aad
or
movl
push
adc
jmp
je
rcll
dec
out
add
inc
mov
nop
aad
hlt
stc
loopne
ret
in
xchg
cld
push
mov
out
sti
cmpsl
hlt
xor
inc
rol
mov
mov
sub
nop
sbb
fcomps
lret
inc
xor
mov
outsb
add
and
dec
push
or
jmp
data16
rclb
loop
dec
les
xchg
mov
dec
cli
jg
adc
pop
pusha
dec
mov
aas
out
fldenv
push
aad
lret
sbb
xchg
popf
fmul
ffree
fisttpl
out
jmp
imul
lret
xor
lods
adc
xor
xchg
fdivl
push
rcr
mov
lret
pop
mov
cmpsl
scas
cmp
pop
adc
int
dec
pop
mov
stc
mov
add
sbb
jle
cmp
jo
jmp
dec
lods
xchg
sbb
adc
mov
les
sti
xchg
or
push
test
xchg
aaa
cmpb
cwtl
cli
lret
int
cld
test
out
sbb
in
inc
push
out
push
sbb
dec
out
lcall
push
or
adc
int3
xchg
jmp
mov
pop
dec
iret
jmp
cmp
xor
and
push
lcall
push
ljmp
mov
stc
imul
data16
je
push
flds
pop
xchg
aaa
cmp
pop
push
fldenv
or
loope
and
xchg
and
es
or
mov
test
fsubs
loopne
call
mov
pop
fdivrs
leave
lret
addr16
jne
pop
fnsave
sbbb
iret
pop
lods
jge
cli
push
sbb
pop
stos
mov
add
fisubrl
mov
outsb
push
adc
adc
xor
fistpl
lods
cmp
xor
jnp
sbb
pop
xchg
push
mov
and
outsb
dec
xor
mov
aaa
das
popf
xor
in
or
and
into
pop
test
cmp
es
inc
mov
pusha
inc
add
test
mov
or
sub
dec
sbb
ffreep
enter
aam
test
fmull
pop
pop
or
in
int
in
mov
aad
aad
mov
enter
cwtl
jg
push
outsb
mov
cmp
lods
lock
test
repz
hlt
jo
das
xchg
push
nop
add
add
bound
stos
or
mov
or
leave
cmp
jno
js
push
out
rcrb
push
out
xchg
repz
and
das
add
test
mov
or
xor
sti
pusha
jbe
aam
out
aas
sbb
push
movsb
push
bound
repz
jbe
jmp
sub
xchg
outsb
and
test
dec
push
mov
loope
out
popf
rclb
popf
push
dec
enter
mov
popf
adc
mov
stc
mov
lret
stc
push
jmp
xor
mov
xor
push
sub
jne
mov
mov
cmp
fcoms
mov
push
loop
dec
test
fcomps
clc
sbb
ror
insb
loop
fimull
cwtl
push
daa
cwtl
mov
adc
adc
mov
in
push
ds
xor
inc
dec
hlt
jbe
leave
adc
add
aam
pusha
out
icebp
pop
mov
add
scas
roll
cmp
pop
mov
sti
pop
fsubrl
lcall
jmp
mov
fwait
push
mov
sahf
or
or
mov
add
mov
je
cmp
out
push
dec
hlt
pusha
or
je
cmp
pop
cmp
pop
mov
and
xchg
call
cli
or
mov
outsl
push
jne
pusha
xor
adc
pusha
xchg
or
pusha
ret
push
mov
sub
cmpsl
pop
cwtl
sarl
and
lcall
adc
enter
jo
idiv
inc
push
adc
out
aam
inc
sub
aas
adc
and
add
mov
insb
sub
mov
cli
stc
xor
aas
out
sub
pop
stos
add
ret
cmpsb
cmc
adc
addb
xor
lret
cs
into
pusha
sub
popw
clc
sbb
push
xchg
xor
cmp
icebp
sbb
mov
and
cmp
out
mov
add
pusha
aad
popf
mov
push
cwtl
inc
mov
jg
push
leave
dec
add
fsts
and
popf
adc
cmpsb
movsl
fwait
hlt
aas
out
fildl
in
cld
fidivl
add
hlt
je
push
mov
dec
cmp
dec
mulb
xor
jne
inc
fs
out
in
test
ret
add
adc
jl
adc
cltd
jle
lcall
mov
fimuls
xchg
jnp
inc
cmp
mov
xchg
mov
dec
inc
cmp
loop
int3
pusha
pop
pop
sti
dec
add
pop
lret
mov
push
ljmp
je
loopne
dec
fisubl
pop
mov
int
cmp
aam
out
std
adc
adc
out
add
not
lcall
pop
fdivr
cltd
aam
sub
aam
push
sbb
pushw
lret
call
sub
pop
imul
popf
sti
sub
fimuls
dec
lcall
mov
and
add
push
dec
adcb
or
lea
movsb
push
and
xchg
xchg
movsl
testb
push
int3
or
outsb
jg
enter
pushf
es
mov
imul
xchg
nop
hlt
cmp
movsl
xchg
adc
cmp
cmp
in
fwait
hlt
mov
lret
xchg
sbb
xor
xchg
cmp
popf
ljmp
int3
pushf
rcrl
fistpl
popaw
push
scas
or
loop
mov
push
adc
pusha
xchg
adc
in
dec
sub
pop
inc
xchg
inc
pop
ds
fcoms
sbb
mov
or
insb
lret
pusha
push
cmp
les
push
cld
mov
fs
mov
lret
add
fldl
xor
add
push
sti
mov
mov
call
push
mov
jp
xchg
and
les
jmp
mov
sahf
data16
push
dec
and
nop
and
dec
push
push
mov
es
in
int3
lcall
push
sarl
cmp
clc
pop
loop
sbb
scas
xchg
ds
lcall
xchg
sti
mov
jnp
pusha
shlb
std
into
mov
add
cmp
push
filds
outsl
jp
jp
cltd
pop
in
loopne
sbb
sbb
call
adc
mov
adc
push
insb
sahf
xchg
mov
mov
sbb
lret
or
push
fisubrs
lods
loopne
push
xchg
fprem
dec
dec
inc
pop
cwtl
ss
sbbb
or
push
push
jp
mov
test
std
sbb
cmp
rcrb
loopne
or
cmp
sub
lock
into
hlt
lock
cmpsl
pop
call
mov
inc
sti
push
scas
jne
push
sbb
jae
push
outsb
fildl
fs
push
mov
push
jmp
xor
sarl
ljmp
sahf
cltd
in
add
pusha
jecxz
cmp
mov
push
cld
loopne
ficompl
cmp
lcall
lea
pusha
rclb
jb
in
outsb
xor
sti
les
adc
pop
enter
cwtl
outsb
in
ss
lret
int3
sahf
push
xchg
fcmovbe
cmpsl
pop
mov
inc
mov
es
xor
sbb
pop
sub
leave
dec
add
cld
jecxz
mov
add
pop
sbbb
pop
cli
mov
lock
sub
aas
rcrb
push
lahf
pop
sti
es
push
call
je
mov
dec
push
pop
into
or
push
hlt
loope
mov
cmp
cmp
fiaddl
mov
mov
hlt
xchg
cld
mov
sahf
hlt
xor
stos
test
ss
pop
lods
fdivs
test
ret
loopne
flds
fnsave
sub
mov
push
lods
inc
pop
push
lret
and
cwtl
adc
rcrb
xor
sub
push
bound
sbb
mov
hlt
mov
sar
adc
lock
push
sbb
inc
xlat
sahf
cmp
add
dec
data16
and
rclb
and
in
adc
pushf
in
xor
xchg
cwtl
imull
scas
and
decb
lcall
stos
movsb
ss
sbb
pop
push
pop
scas
mov
or
fnstenv
mov
mov
dec
add
or
sub
add
dec
data16
es
xor
out
xchg
inc
aam
lcall
mov
mov
adc
iret
xor
lret
add
out
out
cmp
push
aam
lock
fsts
mov
hlt
aam
lret
in
out
les
rorb
pop
movsb
fcmovu
and
push
or
es
mov
or
xchg
cmp
cmp
out
push
dec
les
mov
xchg
and
inc
es
es
ss
rorb
push
insb
in
fbstp
subb
sub
and
hlt
cli
mov
mov
xor
test
pop
pop
add
leave
fstpt
push
mov
fwait
test
add
push
ljmp
sub
lods
pop
sbb
lret
adc
sbb
jle
xchg
ss
or
das
mov
push
cwtl
je
or
je
push
subb
les
and
fidivrl
out
jl
sbb
adc
lock
pop
cmp
sahf
pushf
mov
iret
push
ficoms
shl
xchg
js
enter
enter
inc
mov
pusha
out
addl
pusha
push
inc
inc
mov
or
mov
pop
mov
cld
pop
cmpsl
fstpt
outsl
jnp
pusha
js
insl
mov
jp
mov
mov
cwtl
call
pop
dec
in
xchg
or
rolb
mov
icebp
cltd
add
mov
mov
in
jmp
dec
call
jno
xor
mov
loopne,pn
sti
pop
cwtl
add
stos
mov
inc
shrl
pushf
lock
or
jp
xchg
roll
adc
movsb
cwtl
aam
push
inc
fadds
cmpsb
xchg
sbb
lcall
inc
sub
cmp
test
push
fidivrl
jbe
xor
jg
cli
and
xchg
jmp
mov
dec
fdivl
dec
cmp
pop
les
mov
mov
scas
popf
aam
pop
loope
fdivl
stos
jp
jnp
cmpsb
cli
sti
add
ljmp
lcall
pusha
sub
jecxz
xchg
andl
test
xlat
movsl
cltd
adc
frndint
lahf
xor
je
adc
ret
daa
cmpsb
adc
inc
cmp
hlt
enter
xor
xchg
cld
imul
xor
cmp
cld
sti
pop
xchg
mov
sub
jo
cmp
push
adc
add
out
cmp
mov
lret
dec
cli
fiaddl
jns
cmpb
mov
lods
fsubrs
enter
push
fsub
sti
mov
adc
and
xchg
popw
mov
stos
xchg
cld
push
cwtl
cs
hlt
mov
mov
fiadds
stc
hlt
cltd
imul
adc
sbb
push
cld
add
jb
mov
je
mul
pop
add
out
ljmp
inc
mov
in
dec
xchg
shrb
movsl
ret
shll
lret
pusha
stc
and
sbb
out
sbb
sbb
mov
rolb
xchg
or
or
push
inc
lods
sbb
and
cmp
std
movups
xor
mov
mov
cld
dec
scas
adc
js
mov
inc
fidivs
in
mov
inc
xchg
in
xchg
sbb
push
mov
adc
rorb
data16
test
enter
or
andb
es
and
loopne
aaa
in
push
ljmp
shrl
lock
inc
xchg
fistpl
mov
scas
xchg
sbb
add
pop
stos
cmp
fnstcw
adc
adc
or
dec
xor
pop
xor
out
sub
jp
and
fisttps
push
cltd
repnz
cltd
sbb
cli
dec
stc
imul
push
xchg
int3
fcoms
notb
push
loop
stos
xchg
adcb
cmp
adc
setl
aaa
jp
jns
call
push
test
cli
fcmovnbe
dec
sub
and
dec
pusha
mov
cmpsb
push
adc
pusha
push
test
ljmp
jl
into
ljmp
cmp
push
aad
sub
mov
shrl
add
cmp
mov
sti
mov
push
cli
jge
sub
sahf
xor
mov
mov
cli
out
pop
insb
hlt
dec
in
aad
in
xor
aas
push
adc
inc
jb
or
push
pop
fstl
push
or
adc
push
mov
adc
mov
mov
fwait
movb
mov
sbb
adc
loopne
and
and
cld
shlb
push
and
jg
jnp
adc
sbb
or
xorb
jnp
or
ljmp
adc
in
jmp
add
sub
mov
push
in
int
xchg
sub
mov
mov
scas
xchg
adc
repz
jb
push
mov
jbe
jl
nop
mov
aam
adc
inc
icebp
scas
jnp
hlt
lret
outsb
jmp
and
mov
shlb
bound
sbb
push
ret
je
inc
cmp
cld
inc
xchg
fcoml
xchg
hlt
mov
loopne
scas
lcall
dec
fidivrl
cmp
jp
call
push
cld
push
fidivrl
pop
mov
fcomps
pop
inc
dec
push
fimull
pop
test
repnz
stos
in
pusha
jecxz
jmp
sti
cmp
lret
cmp
pop
push
xchg
cmp
cmp
lock
nop
lcall
sbb
push
xchg
mov
scas
hlt
cli
movsl
in
inc
idivl
popa
scas
sahf
or
mov
sbb
push
add
or
sub
pop
test
pop
int3
mov
je
jno
adc
mov
into
stc
aad
pop
fdivrs
fistl
pop
mov
in
movsl
mov
adc
test
shlb
cltd
cli
add
stc
stc
cltd
jp
fidivl
fcmovb
jnp
mov
in
pop
aas
je
lcall
fbstp
sar
rorb
aas
fiaddl
mov
mov
orb
push
sub
sub
add
mov
mov
movl
mov
jl
xor
lret
jns
aas
adc
pop
xchg
mov
or
out
mov
dec
in
aad
popf
mov
pop
xchg
dec
les
mov
or
lcall
inc
mov
xor
je
push
jecxz
push
popa
mov
fsub
je
ss
je
mov
push
add
in
or
nop
leave
fiaddl
mov
in
jns
inc
test
call
inc
clc
cltd
sahf
sar
cli
jp
cld
inc
fstl
add
mov
xchg
lcall
jb
ret
and
sti
mov
das
jmp
jmp
ljmp
movsl
cli
popf
in
mov
adc
push
jnp
sbbb
lock
lods
es
push
insb
push
cmp
addr16
hlt
fnstenv
ss
rcrb
fucomi
pusha
and
push
cld
dec
cwtl
jb
fs
out
lcall
inc
xchg
mov
jnp
mov
lcall
inc
lahf
cmp
call
mov
push
push
xchg
jb
sbb
xor
dec
ds
bound
nop
test
mov
popf
sar
fucomip
add
cmpsb
pop
push
pop
cli
and
insb
add
sub
push
sub
lods
push
ret
add
or
test
and
aaa
push
push
out
out
xor
xchg
test
push
int
loopne
push
inc
push
adc
in
data16
mov
push
hlt
inc
adc
test
shl
ret
or
cmp
repnz
jno
pop
int3
jmp
ds
hlt
push
test
push
sbb
cmp
andl
inc
pusha
movsb
test
pushf
lahf
pop
xor
adc
adc
xor
sbb
js
xor
test
outsb
sti
mov
insb
push
and
and
xchg
rclb
sub
incl
adc
ds
cmp
jbe
sub
mov
pusha
leave
jne
fadds
xor
mov
out
iret
popf
push
jle
test
mov
adc
or
test
insb
rcrb
pop
mov
pusha
pop
sub
xchg
mov
divb
dec
daa
ds
test
test
sbb
jmp
ljmp
sub
mov
or
clc
filds
jp
cwtl
and
orb
lock
push
push
stos
fistps
mov
cs
or
mov
dec
cmp
push
leave
fmuls
mov
in
and
lcall
push
xor
mov
cld
fldenv
xchg
mov
push
adc
js
adc
adc
dec
xchg
shrb
dec
pusha
push
xor
push
mov
test
pusha
ret
pop
ficomps
dec
push
daa
pushf
push
andl
inc
or
lcall
cwtl
inc
cli
aam
mov
xchg
ljmp
ljmp
pop
lods
lods
fsubl
inc
aas
das
push
inc
sub
test
push
pusha
sbb
int3
xchg
int3
mov
inc
adcl
mov
pusha
test
insb
ss
pusha
sub
lcall
in
jnp
pop
imul
sti
clc
pop
lock
cmp
add
fisttpll
pop
fstpt
fidivrl
inc
addr16
hlt
out
fisubrl
push
mov
js
mov
add
loopne
or
into
popf
fcmovbe
nop
or
xchg
in
add
jl
fisubl
jmp
ljmp
cmp
adc
mov
popa
ficompl
jnp
mov
dec
mov
imulb
ret
fsubs
fcomip
push
and
mov
xor
pop
cmp
mov
hlt
and
in
mov
xchg
inc
pop
adc
mov
aad
stos
adc
mov
test
int3
pushf
push
lock
adc
add
pop
mov
cli
push
lret
mov
adc
into
mov
sbb
scas
adc
dec
pop
pop
push
push
xor
cmp
sbb
mov
mov
adc
inc
in
aam
push
sub
and
mov
inc
inc
js
les
push
ret
test
cmp
mov
push
sbb
jno
dec
mov
cwtl
inc
and
je
pusha
add
pop
push
cli
test
insl
in
push
stos
or
out
pushf
add
aam
xchg
mov
loopne
push
push
or
dec
jbe
mov
fmuls
notb
data16
inc
pop
ljmp
lahf
in
shr
aas
jl
mov
xor
push
je
clc
cmp
mov
inc
push
xor
mov
andb
fstpt
mov
aad
or
int3
mov
sbb
xor
and
ljmp
std
js
imul
or
mov
dec
xchg
dec
push
or
adc
pop
adc
dec
jp
mov
fadds
jg
mov
fistps
lret
outsl
pop
pop
pop
mov
lods
sbb
jp
rcrb
dec
sub
and
lcall
sti
mov
mov
xchg
hlt
mov
xor
dec
movsl
fldt
push
aas
scas
pop
sub
fldl2e
mov
sahf
xchg
nop
dec
mov
inc
fsubs
mov
xor
stos
in
fucom
lahf
add
js
cld
les
fisubs
lret
push
fisubs
fldt
lret
movsl
cmp
jge
call
adc
cmpsb
xor
es
pop
jno
push
aam
push
pop
test
mov
and
mov
push
jnp
push
dec
sti
test
push
ljmp
cli
pop
out
jb
mov
popf
jb
fcomps
inc
insb
pusha
sarl
out
jnp
add
call
cltd
into
mov
jl
add
mov
sub
cs
stc
and
out
fwait
insb
ljmp
push
fimull
mov
inc
push
adc
inc
xor
xor
mov
sbb
pop
fs
or
sbb
mov
cmp
push
mov
cmpsb
dec
pop
xor
je
mov
sub
xor
js
mov
cwtl
push
sbb
ret
dec
in
push
loopne
and
mov
cmp
dec
and
cwtl
daa
cwtl
in
pop
lock
cmp
fisttpl
in
movl
shl
push
js
sub
mov
inc
mov
enter
imul
int3
sbb
loopne
lock
inc
pop
pop
or
xchg
or
inc
push
add
fsts
xor
xorb
push
repz
lock
xchg
hlt
dec
pop
in
cmp
cli
jg
cld
cld
xor
jecxz
jb
cmpsb
cmp
cmpsl
enter
je
loop
push
push
xor
pop
add
xor
clc
pop
cs
test
pushf
push
popf
loopne
xchg
dec
sahf
popf
outsb
outsb
pop
add
push
negb
lcall
add
and
cmp
rolw
loopne
sbb
in
pop
pop
or
or
les
movsb
xchg
fstpl
mov
pop
push
xchg
mov
popa
jecxz
mov
cmpsb
mov
pusha
mov
mov
jae
aaa
in
push
bound
mov
push
xor
ss
xchg
adc
aaa
dec
cmp
push
hlt
loopne
cld
shrl
sub
push
mov
hlt
dec
jno
add
and
pop
js
js
hlt
dec
sti
test
cwtl
sub
ret
and
cmp
push
aaa
adc
sbb
lock
or
xor
mov
mov
adc
adc
aas
adc
inc
cmp
xchg
sub
jb
lds
mov
add
push
je
inc
enter
cmp
insb
les
pop
sbb
fmuls
xor
cmp
loope
popl
fnstenv
popf
fcomi
out
shl
lret
fistps
push
loop
je
lods
fdivrl
lea
das
in
adc
jnp
aad
cwtl
adc
inc
mov
sub
sahf
pusha
mov
pusha
jns
push
stos
jo
cmp
adc
mov
ljmp
mov
pop
adc
call
fsubr
cld
add
ret
je
pusha
cli
inc
scas
adc
sub
out
fdivs
push
dec
jp
xchg
adc
int3
push
inc
hlt
lcall
lahf
push
mov
inc
mov
push
cmp
mov
mov
jecxz
cltd
jp
mov
cwtl
dec
inc
pop
push
outsb
xchg
sbb
fnstsw
bound
xchg
ss
cmp
push
lods
adc
es
dec
repnz
jbe
xchg
stc
je
push
out
inc
adc
pop
xor
into
pusha
sub
pusha
inc
pusha
lret
inc
xorb
xor
int3
nop
nop
int3
mov
or
xor
mov
fsubrp
xor
sbb
test
loopne
mov
pop
pop
fdivs
sbb
dec
push
pushf
push
push
cmp
mov
rclb
adc
out
jnp
jns
pop
aas
scas
sbb
xor
jae
and
push
inc
xchg
pop
int3
mov
rcr
enter
pop
jmp
xor
mov
jbe
andb
movsl
in
ss
cli
dec
pop
xchg
sbb
jnp
adc
fiaddl
sub
push
mov
pop
shr
sbb
push
sub
sahf
mov
inc
mov
xor
aas
dec
insb
mov
pusha
inc
jle
adcb
sar
push
xor
or
pop
mov
add
repz
and
inc
inc
cbtw
or
dec
add
lret
jg,pt
jne
loopne
sbb
or
cmp
lods
xchg
fcomp
mov
jp
adc
jb
sub
scas
adc
je
lods
lcall
cld
jno
les
clc
or
sbb
push
cltd
jp
fxch
cltd
cmp
aam
push
push
lcall
add
ret
fiaddl
push
rcl
aaa
aam
and
aam
test
sbb
mov
dec
repnz
decb
adc
popf
movsb
notb
adc
or
inc
clc
jl
pop
push
lods
daa
xchg
cmp
movsb
xchg
cwtl
mov
cli
lcall
fimull
in
push
daa
push
and
loopne
xchg
jne
add
callw
rolb
xchg
dec
sahf
xor
stos
and
sbb
popf
xchg
jns
push
hlt
jle,pt
int3
jbe
or
loop
je
push
inc
call
mov
push
sub
or
or
push
dec
pop
xchg
push
xchg
dec
pop
dec
cmp
push
jmp
jmp
hlt
mov
inc
rcrb
push
sti
dec
jg
sbb
push
je
push
push
adc
clc
cmp
push
inc
jp
lods
push
add
jle
into
fiaddl
mov
enter
xor
data16
xorb
hlt
movsb
inc
pushf
adc
ret
lods
pushw
mov
stc
and
mov
pop
sbb
pop
xchg
xchg
jecxz
dec
or
test
shr
inc
sti
icebp
cli
inc
xchg
lahf
inc
call
dec
fprem
outsl
sub
in
lret
iret
sbb
popf
mov
xchg
fisubl
fsts
lcall
sub
jmp
and
les
loop
outsl
mov
repnz
pop
adc
xor
enter
sbb
ds
add
lods
mov
rorb
adc
pop
dec
inc
pusha
or
lret
aad
or
addb
mov
xor
or
mov
popf
mov
pushl
ficompl
sar
subb
add
cmp
dec
fdivrs
mov
mov
sub
inc
add
hlt
cltd
cld
je
into
dec
arpl
and
xor
cmp
xchg
dec
int3
mov
cmp
xchg
cmp
mov
mov
pushf
ds
push
test
enter
add
faddp
mov
mov
push
pop
xchg
flds
add
inc
xor
push
pop
mov
ja
add
out
lcall
xchg
ficoml
pop
int
repnz
inc
adc
clc
lcall
test
and
or
adc
dec
xchg
rclb
loop
ds
mov
cwtl
out
adc
inc
push
or
int3
mov
es
scas
pop
movsb
adc
jo
fisubl
and
adc
jns
xchg
or
xchg
cmp
add
push
inc
cmp
in
leave
stos
jb
add
cltd
in
mov
js
adc
fiaddl
push
popf
add
dec
shr
add
into
bound
dec
les
cld
sub
pop
bound
mov
int3
xorb
popf
adc
pop
pop
and
pop
les
or
mov
out
sbb
adc
aam
pusha
push
push
cmpl
aad
dec
push
mov
loopne
insb
insb
pusha
mov
mov
jns
push
sbb
bound
out
fdivrp
jecxz
lret
stos
dec
enter
or
xor
pop
fsubrs
or
push
inc
xchg
sbb
inc
mov
or
hlt
lods
xchg
cli
mov
mov
dec
lods
lcall
lcall
fxch
pop
push
mov
add
cmpsl
sti
and
std
or
stc
cmpsl
adc
cld
or
push
mov
div
aaa
cmp
jno
jno
fdivr
mov
mov
out
sbb
das
hlt
clc
in
pop
in
cmp
adc
push
sub
hlt
mov
pop
or
xor
in
mov
cld
push
cld
xchg
inc
loopne
and
dec
fsubl
sub
fnstsw
add
push
fidivrl
icebp
outsl
sbb
out
and
sub
scas
cwtl
fisubs
fildll
fisubrl
cli
cld
mov
or
and
jge
in
hlt
fisubl
gs
pusha
mov
pop
mov
mov
aaa
adc
lods
lahf
lret
loopne
lock
inc
data16
lret
dec
loopne
sub
and
ss
mov
hlt
loop
imull
pop
test
cli
lret
xchg
ret
or
out
and
cld
jmp
xchg
adc
add
popf
or
xchg
lcall
imulb
or
jo
or
fsubs
data16
pushf
out
add
or
push
cmp
xor
jne
or
mov
push
pop
xchg
cwtl
data16
push
push
mov
and
bound
mov
nop
lahf
cld
mov
adc
sbb
cmc
out
fistpl
mov
mov
adc
popf
rcrb
and
cmp
sub
les
lods
xchg
pop
adc
jb
add
cltd
call
jmp
sub
lahf
jb
or
or
add
enter
xor
fistpl
sbb
pop
addr16
data16
imulb
jnp
mov
push
mov
xchg
dec
xchg
sub
adc
cmp
nop
sbb
je
out
insl
fldenv
jmp
xchg
loopne
cmpsl
pop
or
popf
and
cmp
jg
sbb
dec
add
outsb
add
sub
push
addr16
jbe
and
sub
fidivl
push
shlb
or
sahf
push
sti
xchg
mov
inc
mov
lret
cmp
sti
push
mov
lock
mov
insb
les
outsl
cwtl
pusha
sub
loopnew
xchg
add
faddp
add
out
push
das
sub
lods
fyl2xp1
imul
push
arpl
sbb
out
enter
adcl
dec
notb
cmp
cmp
sub
aas
pop
or
cmp
pop
and
imul
pop
sbb
aam
sbbl
mov
mov
lret
mov
inc
pop
adc
stos
aas
cmc
popf
and
push
mov
lcall
pop
and
es
aam
aam
push
stos
and
pusha
pop
pop
iret
sahf
push
mov
in
mov
in
test
lods
sub
add
or
push
cli
inc
xchg
add
or
inc
add
int3
call
push
mov
xchg
or
mov
xor
push
xlat
aam
outsb
jbe
aaa
push
push
pushf
or
inc
sbb
imul
push
push
push
into
sbb
int3
dec
jnp
jae
rcrb
popf
aam
aaa
cld
or
addb
mov
push
insb
dec
mov
int3
xor
and
jb
pop
mov
ficompl
fnstcw
fisubl
push
mov
jbe
cli
movsb
mov
test
inc
lock
sti
in
cmp
xor
loop
adc
jmp
pop
les
jbe
xchg
adc
shlb
outsl
pop
outsb
in
dec
and
pushl
repz
mov
mov
scas
cltd
xor
stc
inc
mov
xor
adc
leave
inc
aas
push
adc
add
mov
out
dec
int3
push
outsb
and
jo
lds
in
loopne
sti
repz
pop
js
push
cmpsb
fdivrl
mov
adcb
out
clc
scas
pop
call
out
aaa
in
mov
mov
sub
test
inc
xchg
push
les
sbb
cmpsb
adc
jnp
ljmp
insb
repnz
xorb
xchg
lods
or
pushf
sbbb
xchg
xor
push
fstl
stc
sti
bound
fs
js
jnp
in
mov
rolb
cmpsb
rcrl
sbb
mov
mov
test
test
and
push
xchg
movsw
cwtl
xchg
test
mov
ljmp
or
mov
pop
xor
add
ds
popf
push
jb
jp
in
pop
pusha
in
inc
or
push
cmp
lret
addr16
push
decb
xchg
test
cld
xchg
hlt
lods
ret
hlt
push
mov
add
sbb
in
push
dec
pop
imul
ficomps
add
clc
jg
cmp
xor
aaa
jnp
dec
xor
rorb
dec
or
sub
sbb
push
push
mov
inc
xlat
sub
inc
loopne
loopne
loopne
lods
pop
mov
xchg
jmp
push
push
mov
outsb
pop
or
fldcw
and
push
repz
outsb
adc
lret
je
inc
pop
or
inc
push
or
pusha
dec
fdivrl
mov
mov
cld
fildl
mov
xchg
xchg
in
add
mov
sahf
and
outsb
lods
xor
daa
sub
cmp
add
push
cld
pop
cmpsl
pop
es
sbb
ret
ljmp
lods
in
pop
in
jl
pop
in
loope
adc
js
adc
lahf
push
push
xchg
test
popa
fidivl
cmp
js
inc
fidivl
jb
pop
cmpsb
mov
jb
mov
aas
fisubl
aam
jmp
sub
cmpsb
push
bound
fsubrs
loopne
aaa
cmp
pop
lods
lahf
pushf
aad
adc
mov
test
scas
inc
lods
cmp
pusha
mov
xchg
std
mov
mov
aas
or
mov
mov
sbb
cld
adc
jle
push
mov
pop
inc
loope
pop
js
mov
movsb
sub
xor
inc
andl
push
into
jl
mov
out
mov
dec
loopne
in
or
fs
sahf
idiv
int
jge
adc
decb
inc
push
lds
mov
inc
mov
out
mulb
ja
dec
or
enter
pop
rcrl
loope
mov
jb
adc
cmp
pusha
test
push
aam
push
inc
test
dec
mov
jns
sbb
cmp
int3
call
repnz
xchg
cmp
fdivs
ficompl
mov
mov
pop
lock
pusha
out
pop
jle
lahf
loopne
adc
xchg
inc
loopne
or
sub
inc
and
pop
aam
add
sbb
mov
into
stos
push
xor
sbb
in
test
decl
es
popa
pop
out
insb
js
mov
mov
shl
push
pop
mov
push
mov
jmp
xor
mov
mov
ds
dec
lods
mov
sahf
pusha
push
and
sub
pop
push
add
loop
sbb
xchg
or
lods
sub
cmp
jbe
sub
mov
aam
movsl
xchg
dec
lahf
push
into
loope
dec
ret
mov
leave
mov
fmuls
sub
mov
data16
testb
js
sub
pop
scas
add
dec
sub
jmp
cmp
sahf
inc
mov
fisubl
jb
jp
jp
xchg
xchg
and
out
jp
pusha
add
add
and
stc
pop
mov
inc
stc
or
gs
xchg
dec
or
xchg
adc
adc
loopne
add
pop
les
pop
jmp
pushf
sub
cmp
aas
sbb
lahf
in
lcall
cld
jnp
jmp
dec
mov
fnstsw
cmp
jo
mov
xor
lock
add
xchg
inc
pop
dec
inc
mov
xchg
push
dec
lock
and
es
in
aam
dec
in
cmc
lret
adc
scas
jnp
pop
xor
xchg
adc
and
pusha
cmp
movsb
lods
cmpsl
out
testb
xchg
push
xchg
mov
sbb
mov
icebp
je
add
inc
test
push
pop
adc
pop
dec
sub
das
fcom
push
repnz
or
aas
jns
xchg
inc
cmc
push
int3
push
adc
aam
inc
cmp
push
mov
or
adc
test
outsb
add
xchg
lret
inc
les
mov
aas
cmpb
and
cwtl
les
mov
mov
inc
repnz
lret
pop
or
orb
test
add
pop
pop
xchg
cmp
outsl
jo
in
es
push
pushf
pop
dec
push
and
mov
fstpt
mov
jbe
push
jecxz
xchg
or
add
bound
addr16
repnz
fxam
sbbb
loope
ds
pop
sub
popf
mov
sub
iret
xchg
int
aaa
mov
xchg
push
sti
xchg
sub
lods
adc
cmp
loope
dec
xchg
jb
mov
cmp
sbb
cs
push
mov
sbb
lcall
xchg
addr16
jb
and
xchg
sahf
inc
xchg
or
xor
mov
xchg
xchg
cmp
sti
test
aam
xchg
sbb
shr
mov
jp
out
cmp
fidivrl
xchg
fimull
adc
int3
fmull
nop
xor
sbb
sub
clc
es
jl
ds
add
mov
xchg
out
into
push
sarb
adc
cwtl
cmc
inc
mov
jle
loop
lret
loop
aas
les
pusha
pop
js
inc
pop
pop
mov
cmp
add
push
ret
and
xor
dec
clc
and
call
push
add
in
popf
push
out
es
inc
push
rclb
hlt
add
or
mov
outsb
insb
pop
mov
in
out
aam
addr16
fidivrl
mov
mov
sti
cmp
and
test
imul
mov
push
adc
out
loope
mov
and
xor
mov
fs
movsb
test
or
insb
sub
and
jp
jnp
xor
cmp
sbb
push
repnz
add
ficompl
inc
mov
mov
mov
mov
push
lcall
fdivl
adc
pop
stos
mov
push
fmull
xchg
popa
fistl
jno
sub
jecxz
mov
xchg
nop
dec
xchg
bound
data16
lcall
add
xchg
and
fmuls
daa
les
stos
xchg
js
sub
jmp
mov
nop
push
fcoml
in
bound
mov
sub
idivl
jae
fdivs
jnp
jmp
sbb
loopne
test
stos
jecxz
fcmovu
pop
cltd
cmp
aad
stos
cmp
cmp
ljmp
ja
in
mov
sub
mov
ret
pusha
and
fisubs
mov
icebp
dec
lret
fdivrs
inc
xor
xchg
sub
pop
and
mov
or
pop
lret
lahf
sub
cmc
adc
outsb
pop
or
fisubl
xchg
pop
mov
add
inc
dec
and
clc
pop
mov
in
int3
pop
add
mov
mov
imul
jmp
xor
lods
adc
pusha
lahf
pusha
pop
shll
fidivl
mov
lods
sub
xor
fdivrl
jg
jbe
fcoml
outsb
js
pop
mov
data16
sti
enter
sub
and
pop
xor
jmp
mov
call
xor
xor
fistl
pop
push
xor
pushf
pop
lea
popf
lcall
insb
rclb
mov
cwtl
aas
mov
mov
mov
mov
jns
fcmovb
pop
and
xor
sub
xor
cmpsb
pop
in
cmp
pop
jnp
mov
sub
ja
mov
adc
xor
data16
push
sti
mov
xchg
popf
cmpsb
jecxz
ret
dec
mov
flds
mov
jg
pusha
mov
data16
mov
xchg
cltd
test
mov
out
xchg
jmp
sti
cmc
dec
test
out
cld
inc
loopne
call
and
es
sub
aas
pop
jnp
push
jmp
and
je
scas
xchg
sahf
in
cmp
pusha
loope
fcomp
cli
je
pop
je
dec
mov
adc
ret
fwait
mov
and
int3
je
dec
hlt
fnstcw
jnp
push
jmp
jl
xor
xor
sub
mov
mov
fcmovu
or
les
push
ds
call
mov
mov
ret
lea
lods
shll
sbb
adc
insb
and
scas
pop
repnz
xchg
hlt
push
mov
pop
stc
negb
aas
pop
out
mov
cmpb
or
mov
adc
dec
lret
les
cmpsl
sbb
add
sbb
adc
pusha
jns
outsb
or
sbb
push
push
mov
test
mov
in
loopne
mov
mov
enter
in
loopne
cltd
lahf
mov
sbb
adc
es
push
sbb
inc
out
push
ljmp
bound
jae
es
inc
cli
pop
scas
daa
dec
enter
mov
jl
idivl
sub
aaa
xor
out
test
fmull
add
cltd
lret
test
xor
add
cld
into
push
rclb
pop
and
mov
inc
call
mov
cltd
cmp
es
out
and
mov
dec
pop
js
xor
sbb
adc
pop
jbe
jo
xor
mov
into
sbb
jae
ficomps
mov
pop
jae
pop
sbb
dec
or
inc
cmp
jnp
jmp
cmp
adc
jle
adc
lods
xor
pop
push
pop
repnz
jne
shl
ljmp
je
push
or
scas
pop
mov
mov
into
cld
or
jg
pop
dec
ret
inc
mov
lcall
movsl
and
enter
push
ljmp
adc
test
or
push
in
push
lds
jmp
ret
hlt
nop
push
inc
adc
ds
je
ljmp
adc
dec
adc
pop
lds
xchg
nop
mov
mov
cmp
outsl
int3
cmp
sti
outsb
sbb
pop
jnp
add
sbbl
pop
sbb
push
mov
idiv
insb
mov
cmc
sti
enter
cwtl
mov
sub
push
int3
cmp
rcll
das
call
sti
test
hlt
stos
add
lods
add
pop
out
rcll
lret
shrl
mov
xchg
scas
pop
fsubs
or
push
dec
fcmovb
pop
insb
shlb
inc
clc
and
jo
test
push
push
or
or
mov
es
push
test
in
pop
push
add
dec
loop
test
inc
out
adc
mov
cld
mov
cld
test
add
sbb
dec
es
je
push
push
adc
sbb
and
clc
inc
cmpsb
test
test
pop
add
or
cmp
scas
push
cwtl
ud2
pop
push
je
jo
xor
jmp
lcall
mov
movsb
test
aam
mov
loop
xor
sub
add
and
jb
dec
enter
inc
mov
pop
add
dec
xchg
cmp
cmp
or
aam
lock
xchg
cmp
aas
movsl
pop
cmp
cmp
push
xchg
adc
cmpsl
or
dec
mov
sub
bound
in
out
callw
test
std
lea
xor
fldcw
and
ficoml
and
mov
orb
ficoml
push
inc
pop
flds
mov
rcr
in
xchg
push
data16
xchg
mov
fs
js
cld
fstps
rcrb
fldl
mov
mov
mov
lret
lods
es
xchg
lods
xor
pop
fidivrl
sub
cmp
js,pt
js
stc
hlt
xor
mov
cmpb
mov
jo
fldt
xor
in
loope
jl
roll
js
mov
fwait
cld
xchg
in
dec
hlt
mov
cmpsl
jnp
push
jecxz
ljmp
pop
in
sti
cmpsb
adc
out
push
cltd
mov
or
loope
cmp
xchg
mov
sbb
aas
sbb
push
int3
push
or
xchg
push
mov
fcmovbe
and
inc
fcmovu
pusha
in
outsb
mov
push
sub
pop
mov
fimull
add
fmuls
out
dec
pop
in
jp
cmpsl
fnsave
mov
mov
lret
sub
mov
js
pop
in
ds
cli
add
stos
mov
adc
enter
fs
adc
imul
xchg
hlt
jno
int
adc
iret
dec
xchg
pop
flds
lret
push
or
xchg
cld
arpl
xor
lods
push
bound
fiadds
mov
sbb
test
adc
xor
int3
pop
and
sub
jmp
jmp
jmp
movsb
fstps
xchg
pusha
inc
dec
lahf
pop
push
je
dec
push
ljmp
jnp
bound
lcall
les
push
mov
pusha
cmp
push
mov
pop
add
aaa
sub
jle
cld
aaa
cmp
and
movsb
or
loopne
mov
gs
fcoml
sti
xchg
jp
adc
sarb
pusha
inc
icebp
or
aaa
pop
mov
or
cmp
push
orb
sbb
inc
loop
repnz
add
icebp
stc
jbe
mov
inc
sahf
mov
dec
enter
aad
leave
xchg
xchg
xchg
mov
in
pop
sbb
push
sti
dec
jp
aas
jb
dec
push
xchg
push
push
test
mov
xchg
out
out
push
into
xor
loopne
pop
fsubrl
dec
and
jmp
pop
loopne
dec
inc
add
enter
push
cmp
and
movsl
lods
inc
andb
and
es
pop
js
fimull
sbb
pop
sahf
mov
rcrb
out
sti
inc
test
mov
xchg
add
gs
icebp
adc
dec
xchg
mov
jne
add
lods
dec
sbb
jp
inc
cmp
hlt
or
outsb
xchg
cltd
out
sbb
mov
out
sbb
stos
mov
js
dec
cmp
adc
sub
push
ds
sbb
out
sbb
fs
insb
cmp
or
sbb
lcall
add
test
in
inc
xor
lret
mov
and
aam
push
ret
adc
into
test
mov
cli
scas
dec
or
or
push
aas
aam
push
leave
add
jp
fldcw
push
mov
fs
adc
cmp
push
or
adc
cmpsb
ret
stc
sar
dec
js
cmpsb
sti
mov
push
mov
push
enter
fisubrs
add
fsubp
rol
mov
jg
pop
mov
or
xchg
xor
sub
add
jmp
popf
ss
mov
inc
ja
mov
and
ds
ficompl
mov
mov
adc
lock
cmp
and
insb
out
aas
test
pop
test
sahf
jb
or
xchg
into
cmp
movsl
mov
inc
cmp
jmp
lods
pop
lock
mov
pop
xchg
push
mov
inc
orl
es
lret
lea
jecxz
adc
mov
lock
cmpb
data16
call
sti
loopne
gs
pop
mov
pusha
or
fchs
or
mov
jae
and
or
je
inc
repnz
aas
pop
dec
lret
call
push
mov
mov
push
pop
adc
insb
jb
subl
cmc
popa
adc
cli
sti
adc
fisubrl
push
push
bound
cmpsb
sti
loopne
and
in
rcll
es
pushf
pop
fwait
or
out
fcoms
and
xchg
cwtl
into
ficomps
add
adc
push
pause
sub
sub
sti
rep
imul
std
sbb
je
xchg
int3
cld
jmp
mov
push
push
pusha
cmp
inc
xor
or
add
fildl
imul
call
repnz
mov
and
int3
xor
pop
mov
out
add
leave
push
movsl
gs
cld
hlt
pop
call
lea
test
xlat
fistpl
sub
push
jbe
loopne
mov
push
js
lahf
cld
mov
jmp
int3
lcall
lcall
xchg
adc
sub
cmp
sbb
pop
out
inc
sub
insl
into
dec
adc
or
mov
hlt
scas
in
imul
push
adcb
je
insb
hlt
out
movsl
pop
push
xchg
sahf
pop
pop
mov
inc
adc
scas
cmp
push
sbb
adc
mov
sbbb
outsb
lock
les
mov
roll
call
add
cs
or
adc
lret
cmp
xor
aam
lods
and
inc
adc
cltd
repnz
push
cmp
lret
cwtl
js
adc
loopne
ds
dec
mov
push
aas
pop
mov
xor
jp
test
mov
inc
jle
in
std
xchg
or
lcall
call
cmpsb
rcrb
into
dec
push
pop
inc
hlt
and
inc
pop
and
js
mov
or
add
xor
push
add
push
cmp
shlb
jnp
aad
or
inc
xchg
scas
cwtl
xchg
mov
test
push
dec
mov
jle
mov
outsl
xchg
dec
adc
xor
adc
clc
cmpsb
fadds
mov
push
aaa
pop
sbb
hlt
mov
mov
fbstp
xchg
pushf
mov
fcmovnu
jnp
int3
pusha
xor
ss
dec
aaa
rclb
in
mov
cwtl
les
xor
fcmovu
xor
sbb
int
cmpsb
pop
mov
loope
push
dec
inc
out
mov
cmp
in
out
push
rorb
lods
pop
fdivrs
xchg
push
test
lods
mov
inc
outsl
cli
xor
fildl
push
es
add
push
pop
push
cmp
inc
cmp
push
call
ret
xor
imul
dec
jnp
cmp
sti
push
add
test
fstps
test
and
fistl
js
add
jp
aam
testb
lods
pushf
push
clc
scas
mov
insl
lret
hlt
sbb
sahf
inc
push
sbb
jbe
cmp
sbb
cwtl
jb
rcrb
incb
push
ds
mov
in
repz
iret
and
fdivs
fisubrs
les
adcb
ficoml
pop
adc
pusha
roll
sti
dec
xor
xchg
jecxz
loope
loopne
and
iret
push
push
ss
mov
xchg
push
popa
lcall
lret
xchg
mov
mov
jge
push
mov
inc
lea
sbb
out
test
xchg
hlt
mov
icebp
push
cmp
ret
jnp
dec
jnp
jl
and
dec
popf
js
pop
test
or
in
xchg
sbb
and
jle
arpl
jmp
ljmp
rep
xchg
sbb
rcrl
out
dec
in
mov
xchg
in
enter
lods
ret
test
adc
mov
rcrb
cmp
out
repnz
fcmovnu
jo
adc
in
out
or
and
mov
rcrl
fidivrl
fimull
cld
clc
cltd
xor
into
js
mov
pop
les
xor
push
aam
push
cmp
lods
aaa
jp
popf
xor
xchg
cmp
inc
lcall
rcrl
and
or
roll
hlt
cmpsb
xchg
mov
inc
add
mov
pop
mov
cmp
imulb
call
imul
mov
in
dec
es
sub
aam
lods
imul
fidivs
ret
inc
rolb
mov
movsl
hlt
shrb
push
mov
ljmp
or
mov
jb
mov
fidivrs
adc
repnz
adc
ljmp
outsb
add
or
push
or
aam
pop
sbb
push
pop
add
or
cltd
dec
add
adc
leave
push
dec
lods
call
jp
inc
lret
add
out
test
cmp
inc
in
xor
adc
pusha
or
out
or
fsubs
adc
femms
xchg
push
mov
jmp
ret
pop
cmpsb
or
enter
push
cmp
xor
nop
xor
in
adc
xor
xor
in
fcmovne
vmwrite
stos
out
les
jae
mov
popf
inc
pop
in
into
mov
and
pop
hlt
sbb
in
and
push
mov
pop
mov
popf
xor
fstl
fnstsw
loop
jp
insb
dec
fwait
ljmp
lahf
xchg
adc
cmp
mov
lods
ljmp
sti
mov
mov
mov
jno
adc
pop
mov
push
sti
push
and
push
scas
push
js
lea
jne
and
xor
sub
xor
push
or
adc
fbld
leave
rcrb
ds
les
add
sub
xor
lods
xor
pusha
cmp
mov
cmp
inc
and
mov
xor
cs
xor
xchg
mov
call
push
rolb
ffreep
lods
jp
sbb
push
cmpsl
filds
testb
or
lock
lret
xchg
into
pop
jp
dec
loopne
push
lar
aam
sti
stos
xor
lods
aas
std
and
push
out
mov
fimull
adc
adc
mov
sahf
mov
jge
popf
fmull
xor
jg
sahf
cwtl
jle
sarb
fisubl
outsl
loopne
lea
cmp
out
inc
mov
fldcw
stc
inc
mov
push
ja
xor
outsb
es
xor
fadds
repnz
out
xor
mov
movsl
cltd
cld
and
aas
lcall
adc
jle
sbb
mov
clc
hlt
push
xchg
dec
inc
cmp
inc
lret
test
out
imul
les
es
xchg
hlt
into
or
mov
cmp
outsl
pop
or
xchg
sbb
loopne
les
sub
hlt
test
lods
fsubrp
hlt
in
sub
loopne
and
ret
flds
pusha
out
jnp
lcall
jae
fdivs
xor
es
mov
xor
mov
ds
dec
xor
adc
scas
add
mov
orb
movsb
or
je
lret
mov
cs
movsb
sub
cmp
cmp
mov
adc
outsl
scas
push
add
xor
or
adc
pushf
int3
call
mov
adc
push
mov
mov
sbb
out
jmp
lret
push
xor
and
jmp
mov
xchg
push
cmpl
je
push
cmp
push
fisubrl
repz
loop
mov
mov
and
adc
adc
aam
pusha
stos
inc
add
xor
bound
je
mov
in
cld
mov
xchg
aaa
cmpsb
dec
inc
inc
mov
adc
inc
inc
sub
mov
sbb
cmp
inc
lahf
rcrb
ljmp
js
ss
add
stc
mov
fiadds
je
inc
hlt
mov
lods
sbb
cld
sub
ss
adc
sub
ljmp
jp
or
les
cld
jb
add
or
sub
aaa
mov
cltd
mov
mov
sub
sti
popa
hlt
pop
mov
add
fistpl
push
les
adc
and
inc
push
or
fadds
add
hlt
push
dec
adc
aas
test
fucom
mov
sti
dec
pop
repnz
adc
mov
nop
sahf
andb
pop
movsb
or
lock
ja
mov
dec
jmp
sub
jecxz
xor
and
test
mov
pop
push
mov
jge
xchg
stos
fmulp
or
icebp
lods
dec
jp
mov
inc
cld
inc
pop
xchg
push
lcall
lcall
add
pop
dec
lock
and
lock
ss
xchg
cmp
xchg
sub
hlt
rolb
out
mov
dec
out
dec
cmp
xor
aaa
scas
jnp
mov
fimull
enter
or
push
dec
xor
add
lcall
push
outsb
test
sti
or
outsb
inc
push
push
or
mov
cmp
jno
pop
pop
je
inc
imul
ljmp
lea
lret
dec
popf
cld
fstpl
loope
jo
mov
shr
xrelease
jle
ss
mov
pop
les
push
xchg
jnp
inc
pusha
mov
jp
cmpsl
cwtl
sub
mov
cmpsb
pop
jle
les
pop
mov
lods
sti
jle
ljmp
pop
insb
mov
lcall
push
cmpsb
mov
gs
inc
lcall
add
loop
xchg
xor
lahf
sbbb
cmpsl
stc
popf
out
lcall
mov
push
adc
aaa
iret
xchg
pop
pop
fimuls
hlt
loopne
lea
call
mov
fnstcw
xchg
addr16
neg
nop
cmpsb
mov
or
data16
mov
js
and
cli
ljmp
cmp
xchg
and
repnz
sti
je
xor
mov
lock
aam
dec
int3
lret
dec
std
mov
sub
cmp
inc
and
inc
jnp
xor
add
dec
jo
and
ficoms
jle,pt
push
ss
add
ficoml
sbb
es
pop
bound
nop
stc
xor
sub
insb
mov
sbb
ljmp
idiv
gs
addb
cmpsl
sbb
ficoms
leave
jo
test
hlt
roll
dec
cwtl
cli
mov
mov
mov
jl
cmp
cmp
pop
jo
sub
out
add
mov
xchg
pop
mov
ret
cmp
out
data16
ss
sbb
data16
push
bound
jle
lcall
loopne
push
pop
xchg
add
lds
mov
cli
xchg
xor
add
inc
xor
adc
fsincos
jo
sti
nop
cmpsb
loopne
andl
push
mov
stos
inc
jnp
jecxz
mov
popf
loopne
inc
cld
push
cmp
adc
add
or
xchg
jbe
aas
lahf
mov
lret
pop
pushf
je,pt
es
pop
rcr
push
push
or
cmpsb
sbb
dec
in
test
push
jo
cmp
test
mov
je
jb
pop
fisubrl
lcall
mov
xor
loopne
lcall
or
hlt
pop
out
stos
jg
testb
js
rcr
inc
loop
js
xor
repnz
push
adc
and
xchg
imul
add
pop
scas
enter
lock
pop
mov
push
xor
pop
adc
and
mov
adc
and
push
in
push
popa
cli
xchg
and
out
in
cltd
cmpsl
cwtl
je
sti
adc
stos
xchg
fcmovnu
pop
shrb
mov
jl
sbb
repnz
and
js
adc
in
jb
inc
shll
data16
add
mov
mov
inc
push
push
push
or
lock
push
or
xor
mov
jno
nop
aas
dec
lahf
popf
xchg
lret
sbb
dec
mov
cs
xchg
xor
add
int3
mov
or
inc
lret
mov
test
lods
push
ss
xchg
scas
rcrl
sti
push
shll
mov
cmp
inc
push
adc
pop
shll
hlt
cwtl
pop
push
aam
lcall
dec
mov
mov
into
inc
or
fsubs
lcall
je
or
push
hlt
sbb
xchg
orb
aaa
dec
push
fcmovnbe
dec
imul
push
aaa
mov
mov
mov
rorb
lcall
mov
mov
or
adc
mov
xchg
pop
push
lcall
leave
and
ds
je
jnp
inc
adc
jle
fnstcw
mov
hlt
jbe
cmpsl
hlt
push
mov
mov
adc
cmpsb
xchg
imul
lock
cmp
je
idivb
push
or
decb
movsl
xchg
jl
push
data16
mov
fists
aam
lret
leave
fcompl
adc
push
cmp
clc
les
push
sti
xchg
gs
enter
sbb
jnp,pt
scas
jmp
and
sub
push
xchg
repnz
sti
orb
cltd
push
fwait
scas
in
or
fstps
fistps
cmpsb
ret
int3
cmp
loope
mov
or
ljmp
pop
les
imul
adc
aad
ror
xor
lods
xchg
out
dec
insb
bound
hlt
sbb
cwtl
sub
loopne
push
call
mov
cwtl
cwtl
add
out
aaa
aam
adc
test
xorb
push
nop
fdivs
mov
lcall
sbb
pop
int3
sbb
data16
ret
stos
pusha
data16
in
push
lock
adc
aad
sarb
xor
cld
xchg
cmc
enter
fidivs
pop
pop
sbb
ss
push
or
mov
mov
add
lds
push
pop
cld
pusha
xor
xor
cmp
and
fistpl
js
shl
into
hlt
xchg
je
push
neg
mov
sbb
add
jle
js
lea
cli
sub
sahf
lods
sbb
push
clc
sub
lahf
js
xlat
lea
lret
fnstsw
push
iret
mov
cli
pop
repnz
pop
adc
cmp
and
jbe
pusha
loop
adc
and
adc
pusha
and
test
clc
scas
dec
sbb
dec
xor
add
adc
imul
mov
fcoml
outsb
sub
or
pushf
cmp
or
cmp
cwtl
ds
or
mov
enter
jge
push
fisttps
adc
outsb
push
lds
dec
add
jp
xlat
test
lret
in
ret
scas
adc
stc
pop
lcall
lock
lcall
mov
cmp
and
scas
popf
mov
push
dec
or
adc
sbb
scas
inc
xchg
into
inc
adc
int3
jmp
int
sahf
mov
ficoms
sbb
fistl
pusha
repnz
test
xor
lock
outsb
cmovne
faddl
lcall
xchg
ljmp
sbb
mov
xor
clc
xchg
pop
movsb
jnp
leave
imul
adc
cwtl
jb
cwtl
add
clc
sbb
je
lds
addr16
std
xor
shrb
movsb
lods
mov
cmp
mov
je
in
xchg
cmp
xchg
push
test
nop
ficoml
orb
push
or
xchg
dec
sahf
cli
cmpsl
test
nop
ljmp
and
jae
inc
movsb
cmp
leave
enter
test
cmpsl
sbb
or
sub
mov
push
jnp
lahf
in
mov
cmp
xchg
sti
xchg
sti
fs
aaa
lahf
dec
adc
loop
mov
lock
add
jp
or
scas
and
or
sbb
lcall
xchg
test
fidivl
cmp
into
adc
mov
int3
cmp
je
idivb
adc
imul
cltd
call
out
push
sbb
sti
inc
into
add
movsl
dec
out
js
mov
or
shrb
rorl
xchg
inc
in
movsb
es
lcall
mov
add
jp
in
sbb
jo
push
ss
mov
les
cmp
cmp
mov
inc
nop
sub
test
jo
fnstenv
push
pop
clc
hlt
lahf
test
lea
lret
int3
ret
mov
pushf
jl
ss
pop
les
xor
adc
add
outsl
stos
push
mov
scas
sbb
test
aam
sbb
pushf
lret
clc
sti
push
hlt
cltd
repnz
xchg
push
pop
es
jmp
popa
mov
cmp
out
sbb
adc
xchg
xor
cmpsl
clc
adc
xor
inc
decb
les
sub
push
imul
lcall
or
or
mov
add
xor
in
ja
mov
scas
out
in
or
insb
push
push
mov
enter
into
clc
lcall
or
mov
pop
cwtl
scas
lcall
mov
lcall
jmp
cmp
sbb
dec
int3
test
sub
push
mov
adc
sub
pop
xor
fiaddl
lcall
fdiv
jg
xor
repnz
pusha
sbb
or
push
loopne
lock
pusha
dec
inc
test
or
sbbb
out
adc
adc
mov
lcall
or
add
pop
pop
xchg
loope
xchg
cmp
mov
add
jb
insb
aad
xchg
addr16
xor
push
test
cmpsb
jg
fidivrs
sbb
xor
pop
push
sbb
arpl
stc
xchg
fisubl
pop
movsl
adc
or
add
adc
notb
popa
xrelease
or
pop
adc
clc
loopne
push
aas
sbb
jne
xor
pop
pop
adc
xlat
loopne
mov
xbegin
dec
les
pop
mov
xor
cld
sub
cs
lods
jp
jns
and
sub
xor
inc
adc
fidivl
or
loopne
scas
or
loopne
cmp
mov
push
popa
cltd
je
push
mov
xor
jae
pop
jb
ss
stos
jae
fdivrl
repnz
sti
cld
aas
jmp
ds
push
orb
stos
adc
loopne
fisubrl
xor
cmp
dec
jo
orb
cld
dec
jne
je
add
pop
push
lahf
es
mov
adc
and
cmp
adc
pop
xor
pop
outsb
jae
movsl
xor
les
js
cmp
push
sub
push
sub
fmuls
push
cld
les
sbb
and
mov
notb
mov
cmpsb
lahf
and
pop
mov
aam
adc
loop
jecxz
data16
ret
jp
cmp
add
inc
loopne
loopne
rcll
dec
repnz
sub
add
aam
js
sahf
ds
pusha
sahf
dec
jo
leave
test
pop
cmp
movsl
fstps
fsubs
add
mov
hlt
in
mov
jbe
popf
mov
scas
hlt
dec
lods
push
in
xchg
scas
hlt
cmp
inc
push
adc
fdivl
xchg
mov
adc
xchg
mov
daa
add
call
into
or
in
rol
push
test
push
push
fists
mov
aas
scas
pop
cli
popa
mov
mov
outsl
or
out
out
fsubrs
push
xchg
inc
addr16
ss
les
adc
push
add
adc
int3
ljmp
lret
or
push
add
loopne
cwtl
in
lcall
stos
in
xor
jg
and
or
test
xor
pusha
lods
or
adc
daa
movsl
sbb
in
pusha
mov
fldenv
xchg
pop
clc
les
jnp
add
push
pop
mov
sbb
xor
shlb
cmpsl
sti
out
jecxz
sti
mov
or
mov
dec
jecxz
jmp
jbe
or
xchg
ss
fisubl
mul
adc
inc
cli
cli
popf
and
sbb
loope
or
sbb
or
je
push
aam
mov
xor
stos
scas
add
aas
std
dec
aam
ljmp
daa
lds
test
xchg
cmp
dec
xchg
pop
dec
cmp
cmp
cld
mov
sub
cli
push
ror
jno
adc
mov
pop
mov
adc
repnz
cmp
ficompl
cmp
cmp
jno
push
jo
mov
out
lcall
dec
pop
fdivs
in
int
pop
call
push
mov
hlt
movsb
xor
sub
rclb
xchg
mov
xchg
rcrb
jo
sbb
mov
lret
mov
mov
push
mov
nop
xchg
or
mov
adc
shl
icebp
push
int3
shlb
or
enter
push
cli
sbb
inc
in
xorb
inc
dec
cmpsb
sub
data16
cmp
sub
scas
call
mov
push
aas
adc
test
call
pusha
jae
out
xchg
bound
sarb
aas
popf
pushf
add
pop
lds
loop
outsb
or
and
jnp
mov
jmp
cmpsb
adc
js
mov
fcmove
arpl
int3
lods
mov
jecxz
mov
aad
sbb
es
cmp
sub
pusha
loopne
loopne
lods
cwtl
sub
jle
cli
popf
cli
mov
jae
lcall
sbb
cmp
into
inc
or
pop
push
mov
movsl
mov
sub
mov
inc
loopne
int
mov
mov
fmull
aaa
inc
add
cmp
or
pop
xchg
inc
jmp
aam
in
imul
xchg
xor
cmp
xor
in
mov
dec
test
push
push
dec
rolb
sub
push
dec
push
les
xchg
adc
jmp
pusha
mov
add
jo
mov
out
xorl
test
xchg
or
mov
clc
lcall
push
dec
test
adc
mov
or
ds
bound
mov
sti
les
in
lods
orb
add
jge
sti
mov
jmp
and
jbe
dec
and
int
mov
lret
mov
push
jp
out
pop
or
mov
shr
mov
lock
hlt
outsl
rorl
lods
mov
sbb
xchg
mov
or
sub
shr
mov
xorb
mov
sub
xchg
mov
lcall
inc
mov
testb
sarb
adc
xor
sbb
xchg
and
sbb
xor
dec
hlt
nop
aad
adc
push
cmp
inc
push
mov
and
fnstsw
movsb
dec
inc
xor
or
cltd
outsb
imul
mov
rorl
fnstcw
inc
xchg
jo
and
add
sub
xor
inc
in
or
sub
pop
sbb
push
and
aam
hlt
inc
inc
add
push
clc
pop
sbb
movsb
fidivrl
imul
push
add
rorb
and
jne
movsb
int3
adc
test
aaa
fisubrl
or
cmp
aas
mov
adc
jle
hlt
mov
xor
sub
pushf
aas
ret
jnp
fidivl
out
xor
leave
sub
adc
sub
test
shrb
cmp
in
mov
lods
or
push
cmp
push
and
cmc
out
out
xchg
pop
aad
insb
push
fiaddl
xor
fistpl
stc
stc
sub
lea
jo
aas
lods
mov
adc
sbb
push
dec
push
fidivrs
lcall
data16
push
hlt
xor
adc
push
pop
sbb
jno
dec
xchg
movsl
fcmovb
sbb
add
testl
mov
je
je
pop
cmp
cs
xchg
inc
pop
lock
daa
les
mov
cmp
jmp
pop
loopne
push
mov
jns
mov
cmpsb
in
or
cmp
dec
mov
ss
adc
xchg
adc
hlt
pop
insb
shlb
pop
xor
mov
gs
adc
adc
pop
decl
xchg
inc
lahf
mov
test
xchg
inc
enter
movb
cmp
xchg
and
jb
xor
adc
pusha
adc
sub
loop
dec
sbb
imul
mov
jecxz,pn
mov
fildl
lret
adc
or
sahf
ficoml
pusha
or
fmull
notl
xchg
add
jle,pn
push
js
fwait
xchg
push
jl
aaa
cltd
jnp
stos
das
add
and
mov
stos
outsb
rolb
inc
std
fnstcw
sti
in
and
adc
adc
cli
adc
xchg
fcmove
out
xchg
aas
adc
push
sub
es
cmp
out
pop
inc
push
xchg
inc
xor
adc
adc
fsubs
push
cmc
or
mov
sub
nop
xor
push
mov
sbbl
xchg
in
adc
insb
out
popf
insb
pop
mov
and
dec
add
jecxz
jecxz
sub
and
inc
out
ret
movsl
inc
lahf
adc
cmpsb
and
hlt
mov
pop
mov
les
push
or
pop
mov
out
bound
adc
add
fwait
jg
sbb
adc
ljmp
insb
fcomps
xor
dec
pop
test
sbb
push
shll
pusha
pop
outsl
in
pop
mov
push
fiaddl
stc
cwtl
inc
cwtl
test
inc
sti
sar
pusha
ss
mov
adc
test
dec
pop
rolb
cmp
sub
push
or
fnstenv
cmpsb
ret
sbb
sub
cmp
data16
movb
push
shr
int
notb
sub
cmp
xor
and
lods
movsb
subb
popf
lock
nop
fdivrs
mov
aam
xor
sub
and
dec
pushl
fldl
xchg
lahf
ds
cltd
adc
or
enter
mov
mov
push
add
and
mov
cmp
lods
or
test
pop
jge
dec
or
or
in
mov
insl
mov
pop
les
lahf
dec
cmp
mov
ja
cs
je
push
push
test
cmpb
inc
add
hlt
lock
xor
or
cwtl
aaa
xchg
or
cltd
adc
cmp
inc
or
push
sbb
push
fldt
out
lahf
lcall
popf
sahf
fadds
stos
and
addr16
add
dec
frstor
fsts
hlt
adc
int3
push
je
dec
stc
ret
lahf
sub
adc
sbb
mov
inc
test
out
iretw
pop
enter
out
clc
in
lods
les
sti
addl
mov
mov
addr16
jp
push
mulb
mov
push
jbe
jo
cmp
fistpl
sbb
and
les
mov
aam
or
test
ss
xchg
lahf
mov
int3
push
lcall
test
test
ss
add
loopne
rcrl
sahf
adc
lods
repz
pop
mov
pop
les
ss
mov
adc
cmp
in
mov
fsub
add
pop
mov
jle
jnp
gs
nop
push
mov
fldt
pop
and
inc
sti
lods
pop
mov
cli
jl
mov
inc
pop
stos
push
inc
or
adc
xor
mov
sbb
lock
inc
rclb
in
aam
mov
fcmove
leave
int3
xchg
in
pop
loopne
push
cmp
leave
inc
jbe
repz
lock
jae
pop
inc
mov
test
lret
push
dec
lcall
cli
out
jnp
sub
fcomps
lods
outsl
push
xor
fcmovnb
lret
test
adc
into
dec
mov
aas
and
test
jb
mov
pushw
pop
in
sub
push
cmp
fsubr
inc
movsl
cwtl
sub
lods
ds
lock
push
addb
push
cmpsb
mov
outsb
ss
andl
or
pop
addb
pop
add
jo
or
mov
lods
popf
sub
add
scas
add
sbb
jbe
sbb
mov
shlb
movsb
gs
sub
ljmp
lret
les
jecxz
data16
jecxz
lods
adc
loop
out
dec
inc
jbe
inc
cmpsl
jp
dec
cmovno
sub
mov
push
dec
fidivrl
cli
jae
in
mov
hlt
les
ret
les
jb
ficoml
inc
jbe
mov
xor
ss
in
pop
fsubrp
mov
adc
adc
sti
push
jb
mov
jnp
cmpsb
fildl
and
push
daa
and
xor
cmp
mov
int3
fs
stc
mov
dec
test
cmp
fcomp
scas
aam
adc
jp
push
out
sub
aaa
pop
jp
inc
cmp
scas
test
xchg
popf
call
cld
and
lods
int
jge
push
mov
add
out
or
push
push
fdivr
cwtl
loope
test
mov
test
xchg
lcall
or
mov
jg
or
sub
je
test
and
ficoml
lcall
push
jl
add
jb
lock
xor
jo
xchg
lret
pop
lret
es
adc
clc
cmp
mov
xchg
enter
ss
enter
adc
sti
push
ds
adc
pop
pop
jo
ja
xorb
and
mov
cmp
mov
cwtl
add
mov
lahf
dec
in
hlt
sub
adc
pusha
data16
cmp
data16
mov
mov
test
push
push
xchg
shl
loopne
adc
mov
cwtl
cli
cmpsb
fdivrs
rclb
add
and
fwait
popf
xor
in
std
adc
insb
or
push
sbb
fs
ds
subb
aam
push
test
cmpsb
leave
mov
es
shlb
inc
test
into
mov
pusha
inc
cmp
pushf
inc
xor
adc
sbb
subl
mov
mov
sbb
data16
shlb
jge
sbbb
xor
jo
enter
xchg
jge
pop
xchg
or
in
push
lea
jle
int3
sbb
les
scas
lahf
or
loop
sbbb
push
ss
inc
pop
or
cwtl
aaa
jno
xor
adc
pop
pop
das
les
push
popa
cltd
add
adc
mov
adc
push
push
xchg
sti
loop
int3
mov
lock
adc
arpl
insb
cmp
push
stc
jnp
mov
dec
adcb
outsw
in
ds
jbe
ds
cs
or
lcall
orb
cld
fsubrl
push
pusha
loopne
push
fsubl
shl
pop
adc
fistpl
sub
xor
mov
lahf
mov
inc
pusha
in
je
inc
cli
hlt
push
fstpt
popa
cltd
lods
xor
adc
mov
mov
inc
pusha
mov
pusha
sub
push
fcoml
stos
test
cmp
mov
loopne
jecxz
sub
ljmp
into
test
inc
cltd
int3
pop
ljmp
jecxz
mov
les
inc
sahf
push
mov
pop
jl
fsubrs
mov
mov
repnz
nop
sbb
pop
pop
xchg
mov
xchg
mulb
aaa
jnp
push
and
jb,pn
sbb
icebp
testb
jl
xor
xchg
adc
xchg
lret
sub
into
lahf
fcomp
lods
imulb
shrl
aad
and
push
push
test
fldl
fcomp
aam
adc
lock
and
shll
cli
in
sbb
scas
mov
mov
adc
mov
testb
ljmp
dec
jns
int
push
mov
mov
mov
stos
inc
push
fbstp
pop
adc
in
and
es
and
notb
inc
sbb
es
push
mov
and
ljmp
xor
pop
arpl
ficoml
int3
adc
sbb
jge
pop
cwtl
jnp
and
dec
in
cwtl
add
pop
adc
fsts
xchg
aaa
jecxz
inc
pop
mov
aaa
and
mov
and
das
adc
sti
fdivs
cmpsb
mov
call
pusha
lock
lret
rcll
lods
jnp
mov
sub
cwtl
cs
loopne
xor
jmp
add
mov
jae
dec
clc
js,pt
mov
fisubl
ljmp
sarl
pop
jp
out
cmpsb
stos
inc
in
popf
dec
pusha
push
xchg
aas
test
mov
sti
push
int3
push
in
jmp
sbb
jnp
mov
jnp
jp
popf
fidivl
int3
dec
pusha
mov
xlat
mov
clc
movsl
jnp
in
pop
push
pop
adc
cli
loop
pop
pop
lahf
fcmove
fldenv
or
aam
push
cmp
push
rcrb
leave
cmp
or
adc
hlt
or
out
dec
xchg
daa
lock
js
rorb
push
andb
jg
andb
push
es
movsb
dec
or
pop
or
adc
cmp
addb
jmp
insb
or
dec
and
sbb
clc
cwtl
ror
enter
or
jl
les
jp
mov
dec
out
outsb
popf
sub
pop
jne
fcoms
add
ljmp
pop
loopne
pop
inc
jle
addr16
mov
ljmp
pop
int3
stos
push
popw
pop
rolb
scas
insb
push
push
inc
add
out
shrb
rol
pusha
jecxz
and
and
ds
adc
lcall
test
out
lods
pop
pushf
call
cmpb
loopne
and
xor
push
movsb
inc
fsts
jnp
ljmp
test
mov
push
pushf
or
pusha
dec
pusha
insl
mov
test
mov
sti
dec
sbb
cmp
jecxz
cmp
sub
sbb
testl
insb
lcall
hlt
mov
lea
loopne
in
gs
jnp
jmp
scas
inc
or
scas
popf
cmp
xchg
sbb
xchg
push
cs
ss
sub
sub
xor
adc
ds
mov
rcrl
ljmp
lods
dec
pop
push
sti
fidivl
adc
cld
jle
inc
mov
push
fcoms
test
lock
mov
sti
lock
popa
adc
mov
aas
rcll
incb
push
jb
js
mov
js
frstor
popfw
les
mov
dec
insb
push
inc
pop
push
inc
and
jne
ret
int3
and
sub
aaa
les
or
dec
xor
enter
ret
fisubrl
rol
and
mov
xor
mov
cwtl
xchg
and
cmp
rcpps
adc
xchg
xchg
push
pushf
out
lea
test
and
xor
add
fsin
lods
fdiv
lahf
insb
cmc
add
pop
popf
bound
leave
hlt
mov
test
pop
xor
lea
les
mov
mov
pusha
hlt
mov
es
sbb
in
stos
cmp
fs
dec
in
mov
int3
fdiv
lcall
jmp
or
hlt
mov
xor
movsb
xchg
add
sarb
pusha
push
lea
fcmovbe
lret
dec
or
lcall
inc
mov
aaa
mov
adc
shll
add
push
test
push
fmull
test
enter
xor
data16
pushf
stos
js
jae
mov
dec
sub
mov
and
mov
push
out
popa
inc
lods
inc
xor
mov
lcall
test
repz
call
cli
aas
test
adc
daa
andb
inc
scas
pop
or
push
lods
loope
fsubs
dec
xor
scas
aam
xchg
cld
fcomip
daa
mov
inc
lods
xchg
inc
pop
xor
repnz
inc
push
push
mov
add
lock
or
fcoml
test
lods
into
ljmp
or
mov
cmp
aas
adc
push
call
icebp
mov
fwait
hlt
inc
mov
pop
jbe
xchg
and
xor
jg
cmpsb
mov
push
push
outsl
add
mov
arpl
and
pop
lcall
inc
sub
sti
mov
fistpl
ljmp
out
sbb
mov
test
mov
push
test
or
aam
dec
shlb
hlt
add
aad
rclb
adc
call
insb
syscall
int3
cmp
notb
xchg
xor
sub
neg
dec
insb
push
sub
xchg
push
pop
mov
fistpl
fstpt
push
xchg
inc
pop
orb
or
push
mov
lock
mov
mov
aam
leave
pop
push
jle
adc
imul
cmp
add
sahf
les
push
pop
cmpsl
sete
jp
pushf
rol
push
fs
out
adc
in
and
jmp
xor
push
mov
cmp
aam
mov
pop
sub
mov
mov
cmp
ja
xor
out
scas
int3
or
mov
aam
adc
lods
cwtl
cmp
jnp
enter
pop
jg
jnp
sub
movsb
nop
outsl
mov
insb
push
jg
sbb
stos
inc
add
js
je
xor
lret
rorl
cld
dec
scas
sub
stos
int3
sbb
jl
push
xorb
adc
cwtl
mov
mov
cmp
dec
cld
xor
sub
xor
push
testb
or
xor
rcrb
mov
fsubl
sti
cltd
in
mov
arpl
out
cwtl
inc
mov
scas
sbb
loopne
xor
rorl
std
out
in
inc
and
scas
fsubrs
lds
push
jmp
xchg
or
jnp
push
push
in
imul
or
push
pop
push
inc
fs
mov
sub
rorb
iret
push
push
jecxz
xchg
cli
inc
pop
mov
push
and
add
sbb
push
cs
jb
ljmp
mov
ja
push
inc
neg
scas
lret
in
jecxz
cmp
sub
push
ljmp
repnz
test
or
fs
mov
fistps
dec
sbb
push
mov
xor
xchg
imul
aaa
jbe
mov
add
lods
negb
or
cld
loopne
adc
mov
push
add
adc
cmp
and
cmpsl
jecxz
cmp
dec
xchg
add
jmp
ljmp
bound
ret
adc
push
lret
ret
ljmp
push
in
add
movsb
xchg
call
aas
cli
add
into
pop
das
push
cltd
les
out
mov
out
test
inc
cmp
fwait
clc
scas
jbe
pop
xchg
adc
mov
dec
cmp
inc
stos
or
lahf
int3
mov
hlt
cmp
ss
cmp
je
push
cs
adc
scas
push
dec
lcall
xchg
roll
sbb
jae
pop
rclb
inc
stos
push
shrl
aas
nop
les
dec
scas
cmp
jecxz
sub
sahf
sub
and
inc
das
mov
pop
jecxz
cmp
adc
insb
out
test
dec
rol
sbb
fmull
mov
inc
xchg
push
push
push
jl
push
xor
repz
push
pushf
inc
pop
jbe
adc
aas
dec
sbb
sti
in
lcall
jne
push
insb
cmp
js
les
push
jp
popf
bound
insb
lea
les
scas
adc
rcll
shr
je
loope
dec
lods
les
cmpsb
xor
mov
mov
push
sti
loopne
les
idivb
mov
adcb
rcl
adc
push
scas
mov
push
aad
mov
data16
pop
outsb
dec
and
call
out
aas
insb
cmp
ror
cmp
push
dec
stos
pusha
stos
or
push
addr16
jb
xor
adc
repnz
push
fimull
add
enter
fimull
pop
data16
inc
lcall
jmp
js
cmp
push
es
jg
imul
insb
into
pusha
lods
push
dec
cltd
mov
ficoml
fcoms
xchg
cmp
pusha
jbe
into
lahf
push
bswap
adc
stos
sbb
xchg
push
xor
rclb
cmp
les
pop
pop
lret
push
bnd
cmc
aam
insb
std
js
adc
pusha
add
lcall
psubw
cmovle
ds
or
cld
add
push
in
inc
imul
inc
inc
add
or
mov
rolb
loopne
hlt
ja
in
loop
pusha
inc
rclb
cmp
adc
sahf
hlt
fcompl
pusha
inc
test
pop
cmp
lahf
lock
loopne
dec
lock
mov
mov
stos
sbb
cmpsl
sub
les
sbb
scas
jb
adc
xchg
fcoms
enter
mov
mulb
out
pusha
ss
popf
pop
dec
das
je
in
add
jp
cmp
ja
fcoml
mov
add
push
sub
cmp
jbe
mov
nop
jo
jo
jp
cwtl
bound
cmpsb
and
insb
fdivrl
iret
enter
rcrl
fildl
cmp
mov
pusha
into
push
dec
test
xor
frndint
pop
stc
popf
push
mov
mov
lcall
dec
inc
aas
stos
insb
push
inc
int3
adc
jmp
clc
mov
into
adc
data16
mov
in
pop
adc
lahf
sub
adc
lcall
test
push
xchg
mov
fistpl
mov
loopne
int
fcmove
adc
loop
js
jl
cmp
push
repz
mov
sub
pop
pop
js
in
repnz
fldl
xor
inc
seto
sub
inc
sahf
pop
pushf
lea
push
enter
aaa
mov
pusha
and
lcall
hlt
sbb
movsl
in
lcall
in
leave
lcall
hlt
stos
inc
flds
mov
mov
ficoml
cwtl
loop
clc
test
or
adc
dec
repnz
xchg
jmp
xor
or
or
insb
mov
push
pop
fimull
jae
xchg
xor
mov
jne
add
test
adc
fisubl
lods
insb
test
mov
dec
call
jae
rclb
adc
cmp
jle
daa
cmp
pusha
xor
popf
enter
jnp
mov
add
into
mov
hlt
pusha
mov
fiaddl
ds
and
repnz
adc
or
enter
cwtl
ss
pop
call
nop
ds
push
dec
or
push
sarb
xor
sbb
loop
ss
sbb
aas
insl
lahf
mov
sti
dec
les
in
jmp
and
decl
aam
jmp
or
and
rcrl
push
mov
mov
outsl
cli
je
jbe
xchg
je
je
arpl
test
or
mov
aas
lods
lods
into
adc
sub
xor
push
repnz
mov
and
jg
push
loopne
ds
xor
push
xchg
mov
push
hlt
icebp
mov
lds
repnz
jge
or
les
ret
fcoms
adc
cld
mov
js
imul
cmp
or
loope
orb
push
aas
mov
out
mov
lock
in
push
xor
mov
pusha
shlb
outsl
inc
xor
cmp
mov
add
jl
inc
pusha
cwtl
ficoms
mov
push
mov
adc
addr16
les
clc
cltd
inc
iret
ljmp
dec
lcall
pop
loop
xor
add
push
push
lea
aas
es
fcmovnu
inc
sti
out
dec
ljmp
outsl
cmpsl
lahf
enter
push
cmp
inc
loopne
pop
xchg
jmp
fs
fidivl
aas
push
lahf
xchg
xor
mov
push
movups
add
or
xchg
or
or
popf
mov
cmp
jnp
mov
jo
orl
sub
jnp
sub
sub
ljmp
loop
or
jecxz
add
adc
aam
test
pop
repnz
sti
testb
icebp
mov
add
jecxz
fisttpl
push
call
loope
cmp
push
hlt
mov
jnp
inc
sub
jno
dec
xchg
sub
jmp
xor
aam
pop
js
push
pushf
push
lcall
fmuls
xor
scas
fimull
stos
lods
ds
push
push
pop
add
sbb
or
pusha
mov
sbb
mov
insb
data16
scas
dec
orl
xor
xchg
dec
insb
pop
inc
ja
xor
repnz
jo
notl
inc
int3
or
enter
lock
testb
push
cmp
and
stos
sbb
pusha
push
or
push
mov
pop
sbb
cmp
add
dec
cmp
ds
je
sbb
xor
nop
inc
rep
popa
sti
add
popf
mov
xchg
out
jp
mov
xor
mov
aas
and
sub
ljmp
out
aaa
sub
push
mov
roll
lret
jecxz
adcb
add
mov
push
into
test
mov
mov
shl
call
loopne
pop
mov
lods
mov
test
xor
adc
leave
lcall
mov
jmp
adcb
push
faddl
pop
fsubp
mov
or
and
stos
imul
jmp
loop
ret
push
jmp
nop
popa
push
adc
dec
lahf
cmp
dec
inc
sub
adc
cmp
mov
jo
lods
pop
and
push
lcall
sub
mov
mov
adc
adc
hlt
sarb
inc
adc
sub
cwtl
mov
ficompl
xchg
test
push
clc
fidivl
xchg
je
lret
shll
jmp
cmpsb
lock
in
adc
xchg
int
je
lcall
inc
push
add
inc
adc
push
out
jmp
imul
sub
pop
mov
and
and
push
int3
dec
dec
inc
arpl
mov
clc
fisubrl
inc
cwtl
cmp
mov
aas
dec
jnp
push
push
ljmp
std
mov
mov
sbb
int3
mov
mov
les
xor
fdivr
xor
cmpsb
lret
repz
lods
cs
cmp
cmpsb
mov
repz
xchg
or
je
lcall
sbb
lcall
int
jp
aam
inc
fs
or
jne
cmp
cld
push
add
xchg
inc
mov
mov
cmc
push
push
push
loopne
adc
je
push
mov
xor
or
push
ret
out
popa
leave
adc
cli
test
or
mov
jno
xchg
mov
dec
push
inc
push
dec
call
js
and
cwtl
std
les
cmp
jne,pt
cmp
outsl
xchg
xor
enter
or
sti
mov
loopne
or
mov
xchg
pushf
xor
push
or
nop
cmp
jp
push
mov
movsl
mov
mov
jmp
inc
lcall
cmp
inc
sti
dec
adc
mov
fsin
xchg
push
je
dec
fimuls
mov
add
or
sub
mov
lods
mov
xchg
and
sbbb
lock
out
push
repz
shl
jb
add
mov
insl
lcall
adc
lcall
dec
out
in
mov
sub
adcb
das
or
mov
mov
hlt
push
sub
rcl
adc
push
lock
out
adc
adc
push
add
add
jle
adc
add
in
in
pop
xor
mov
sahf
jle
or
jnp
sbb
leave
cmp
cltd
xor
negl
jecxz
sbb
xor
cwtl
jmp
loopne
das
mov
cli
push
or
dec
xor
call
pop
add
pop
cmp
das
fiaddl
add
jp
cmp
sub
aas
inc
insb
cld
push
xchg
jbe
rclb
lcall
or
mov
int3
or
cs
pop
aaa
xchg
call
jle
aam
mov
xor
adc
out
and
mov
lea
pop
cmp
test
cwtl
mov
les
or
enter
push
jl
cmp
popf
inc
sti
sbb
fistpl
add
shll
clc
pop
sbbb
xor
lcall
pop
sahf
adc
mov
xchg
ds
notb
push
mov
mov
sarb
aas
dec
adc
das
cmp
out
fcmovnbe
pop
bound
pop
stc
cld
and
cmp
neg
push
jg
sbb
jne
daa
and
adc
mov
cld
jg
loopne
lcall
push
push
dec
jo
jg
inc
jle
xchg
mov
lret
and
insb
jmp
pushf
push
leave
cltd
adc
push
mov
inc
adc
mov
adcb
adc
dec
int3
add
xchg
out
xlat
and
mov
loopne
out
test
pop
jle
push
adc
or
insb
pop
jle
hlt
test
mov
ret
movsb
xor
dec
lods
cmp
in
fdiv
mov
test
popf
adc
les
jo
cld
pop
imul
push
adc
dec
scas
sbb
mov
mov
ret
sub
hlt
subb
int3
push
xchg
rclb
adc
mov
out
sti
push
jne
aam
out
outsb
bound
push
jno
jle
into
sbb
inc
aam
pushf
xor
or
jns
int3
rorb
aas
out
xor
js
mov
jecxz
leave
push
adc
sub
cmovp
push
inc
je
dec
sbb
dec
ror
mov
gs
pop
scas
aam
lock
cwtl
mov
fdivs
loop
loop
rclb
xor
push
adcb
rorl
sbb
adc
xchg
inc
aam
inc
dec
lcall
cld
sarb
mov
insb
jo
pop
fadds
sub
je
sbb
stos
and
mov
push
sbbl
mov
ljmp
hlt
dec
cwtl
inc
push
mov
xchg
mov
out
inc
mov
and
mov
jb
jmp
push
gs
jae
xchg
mov
adc
lret
fcmove
pop
mov
sub
es
sub
aas
add
loop
adc
je
xchg
or
cmp
nop
rclb
mov
add
out
cli
int3
fnclex
leave
dec
loopne
addr16
stos
sbb
outsl
mov
sbbb
jecxz
rolb
je
je
dec
enter
cld
sub
cmpb
mov
lea
ret
pop
sbb
adc
pop
add
enter
jle
xchg
hlt
bound
inc
ret
add
push
sarl
movups
in
lret
lods
fidivl
pop
sub
pop
adcb
fucomi
pop
fistl
out
or
stos
les
adc
jp
pop
and
push
and
inc
fcmovb
mov
inc
mov
fwait
push
test
xor
push
stos
mov
in
es
cmp
rcll
fmul
lahf
xchg
adc
leave
inc
mov
pusha
jae
pop
add
cs
lea
cld
mov
add
das
fistpll
jl
data16
ss
adc
add
sub
and
loope
xchg
push
lahf
test
pop
xchg
cmpsb
mov
sarb
lret
ds
aaa
ja
je
push
push
pop
ss
mov
sbb
les
loopne
ret
lock
pop
dec
push
cltd
push
sbb
adc
je
fwait
les
out
cmp
les
fisubs
jp
push
out
aam
jl
ret
rorb
sahf
push
mov
mov
adc
adc
ljmp
mov
push
cmp
push
pop
pop
inc
lock
cli
xchg
insb
sarb
cmp
cld
or
cmpsb
hlt
mov
add
fnsave
sbb
add
sub
inc
mov
fdivr
xor
lock
cli
cmp
bound
xor
push
push
andb
xchg
int3
fildl
and
cmp
popa
jle
enter
sub
lcall
pop
sbb
jl
sahf
aas
and
mov
pusha
add
data16
inc
inc
call
inc
loop
cli
hlt
push
mov
jl
aaa
xchg
sbb
cmp
insl
xchg
sbbb
pop
mov
or
jae
lds
fimuls
adc
cmpsb
jecxz
aas
outsb
xchg
sub
adc
sbb
les
cmp
lret
pusha
call
out
inc
pop
fldenv
pop
lcall
test
nop
pop
pop
xchg
sbb
inc
sub
inc
push
dec
jno
mov
fs
js
mov
xchg
out
mov
lret
sahf
jnp
data16
arpl
or
dec
test
mov
fdivs
xor
xchg
inc
push
push
in
js
cmp
lods
dec
aas
sbb
mov
les
mov
test
xor
add
insb
adc
fldt
adc
adc
aam
movsl
sahf
add
xchg
adc
stc
ds
push
addb
and
cmp
mov
xchg
fildll
mov
pop
lret
into
cmp
jae
int3
xchg
fldenv
sarb
cmp
lcall
int
popf
in
cmpsb
xor
cli
pop
jo
lret
add
fiadds
insb
push
push
pop
aas
xor
cwtl
mov
cmp
mov
or
inc
push
add
xchg
or
push
sub
lcall
or
push
out
push
into
inc
push
fs
fcmovnu
push
dec
outsl
fcompl
test
outsb
orb
hlt
data16
inc
sub
ds
mov
je
sti
or
sub
push
push
cmpsb
repz
inc
hlt
mov
cmp
adc
cmp
rolb
mov
dec
pusha
mov
mov
push
iret
mov
cli
int
rcrb
push
das
adc
shrb
add
lods
dec
xor
push
enter
test
push
enter
dec
xchg
in
and
faddp
je
stos
adc
inc
inc
sub
sarl
bound
push
ljmp
or
stos
push
sub
xor
jbe
jg
data16
mov
dec
dec
inc
push
mov
push
insb
lea
loop
mov
pusha
mov
loop
sarb
lahf
mov
mov
popf
mov
or
sbbb
aaa
mov
jg
inc
pushf
movsl
movsl
popf
les
push
push
sub
xchg
mov
adc
sbb
cld
clc
cs
enter
insl
jnp
dec
imul
xor
jo
push
je
inc
dec
test
das
sti
push
add
je
push
or
movb
jo
mov
push
cmp
sub
cmp
enter
into
aas
cmp
clc
icebp
sub
mov
push
hlt
adcb
pusha
adc
and
push
xor
xchg
push
adc
mov
mov
ror
inc
inc
call
jb
sub
shr
dec
cmp
fs
and
sub
adc
idiv
subb
pop
sub
mov
rorb
mov
mulb
inc
aad
dec
shr
rcl
pop
sub
and
cwtl
stos
cli
push
rep
ja
cmp
aad
mov
orb
sbb
fisubrs
xor
mov
xchg
mov
fistps
adc
jnp
push
fistl
js
sbb
fcmove
or
pop
aam
xor
jns
jbe
je
sarb
test
inc
enter
aas
insl
cmp
hlt
lret
dec
call
and
loopne
xchg
fidivrs
sbbl
jo
sbb
cli
push
sbb
mov
adc
sub
es
adcb
mov
xchg
fistpl
push
push
and
dec
out
jl
inc
test
pop
mov
cli
es
sahf
fwait
repnz
rolb
aaa
mov
sub
inc
push
dec
repz
add
sti
cli
addb
xchg
inc
jg
mov
lods
movsb
es
cmp
stos
jl
jae
adc
jecxz
mov
add
ficoms
jg
sbb
lret
adc
mov
dec
inc
mov
data16
jp
leave
sub
cwtl
dec
arpl
in
sub
push
pushf
pusha
imul
data16
loopne
lret
xor
mov
mov
jmp
jg
xor
scas
adc
je
fdivrs
add
inc
push
in
xchg
bound
adc
add
or
add
aas
sub
pop
mov
out
or
shll
and
jb
mov
aas
imul
sti
cmpsb
or
push
repz
cmp
mov
cmp
leave
mov
xchg
packssdw
push
icebp
push
add
faddl
sub
loop
mov
inc
ss
pop
dec
ljmp
sbb
lahf
lcall
push
addr16
mov
cmp
add
dec
mov
pop
lahf
nop
cltd
call
or
or
data16
ds
or
js
movsb
pusha
jle
push
inc
inc
cmp
dec
aas
test
das
popf
mov
lea
adc
mov
call
cli
xchg
xchg
outsb
cmp
rclb
in
cmpsb
push
xchg
mov
mov
and
cltd
ljmp
enter
data16
push
ret
out
shlb
cli
cmp
push
les
mov
jno
xchg
jne
sub
sub
adc
rcll
mov
mov
push
or
cwtl
mov
mov
or
or
or
mov
into
jnp
and
mov
ret
decl
push
lods
push
and
adcb
push
aam
je
push
and
push
cmp
adc
jb
or
loopne
dec
hlt
adc
in
and
scas
popf
in
clc
adc
inc
pop
jl
push
mov
fs
cmc
cmpsl
dec
or
add
fisubrl
je
inc
ss
es
cli
fcmove
rolb
cmp
aad
mov
sub
cmp
ljmp
push
mov
or
movb
lcall
bound
lcall
aaa
stos
fcmovnu
mov
sub
xchg
ds
sub
sub
xchg
add
mov
or
aam
xchg
mov
adc
push
push
mov
idivw
jle
add
clc
lock
ds
mov
push
and
shrl
dec
push
sarl
popf
mov
add
shr
xor
fdivs
idivb
stc
sub
cs
cmp
sbb
in
shr
test
cmp
mov
adc
mov
imul
inc
pop
adc
sbb
inc
inc
fnstenv
cmpb
push
lcall
lret
inc
pop
mov
inc
cld
sub
xor
lret
aam
push
enter
cwtl
cli
adc
pop
jae
dec
xor
xchg
inc
pop
push
inc
out
mov
push
lcall
aas
inc
cwtl
add
jp
mov
sub
pusha
and
outsb
mov
mov
rorl
and
mov
scas
xchg
fdivrl
repz
cwtl
adc
cmc
adc
pop
jp
bound
ds
cmp
jmp
fs
push
cmp
add
push
xor
andb
fwait
mov
inc
stos
lock
dec
inc
and
mov
push
mov
hlt
loop
pop
add
movsb
lret
mov
cltd
sbb
push
sahf
jmp
push
add
or
loop
push
inc
lds
js
rorl
inc
fidivrs
lret
mov
sub
fdivrl
repnz
mov
cltd
xchg
lcall
push
inc
repnz
lahf
inc
je
add
adc
adc
cmp
mov
xchg
ds
aas
test
adc
or
rclb
rolb
cwtl
into
pop
mov
aas
out
movsb
push
repz
js
pusha
mov
cmp
notl
or
subl
add
lea
adc
xor
xor
mov
ljmp
add
stos
dec
push
out
add
dec
scas
test
jo
aam
adc
cld
js
sub
mov
in
pushf
inc
mov
push
insb
adc
fwait
scas
xor
subl
sbb
push
cmp
repz
mov
pop
cmp
or
insb
test
jb
rsqrtps
cmp
bound
mov
lret
incb
mov
fmuls
pop
mov
mov
push
dec
into
and
mov
fcoml
push
and
mov
mov
fistpl
xchg
cs
jns
jae
pop
daa
dec
outsb
inc
or
ljmp
js
popl
xchg
movsl
push
fs
adc
scas
jnp
fstpt
sub
pushw
lock
cmpsl
aaa
adc
cli
jp
push
and
jg
dec
mov
es
push
mov
pop
sub
cld
push
es
lods
scas
hlt
lret
incb
sbb
hlt
or
cwtl
loopne
adc
sbb
xor
iret
xchg
push
cmp
push
hlt
pushf
xchg
in
and
sbb
hlt
mov
add
movsb
sub
sub
jbe
sub
jo
jbe
dec
hlt
aam
mov
repnz
push
fcmovb
mov
enter
test
lret
jae
lds
adc
and
mov
in
daa
mov
ljmp
andb
popf
sub
aas
dec
popf
rolb
xchg
lret
jae
pop
push
xor
or
inc
shl
cmp
loop
ret
add
adc
jne
and
fmull
push
inc
mov
dec
js
sub
in
les
jle
xchg
xor
popa
shrl
adc
xor
inc
ja
and
mov
pop
sub
aas
sar
and
mov
test
jbe
int3
cmp
js
iret
rclb
rcl
mov
inc
pop
sub
loopne
les
test
or
add
sar
test
loopne
out
mov
push
js
xor
or
ds
clc
mov
rorb
adc
jp
push
cmp
lret
fwait
adc
test
mov
adc
mov
outsl
mov
fidivl
xchg
mov
outsb
sarb
fs
cmpsb
add
jnp
loope
xor
mov
sti
outsb
es
ds
cmpsb
mov
dec
in
test
lcall
adc
inc
jns
je
loopne
rol
xchg
rcr
imul
xchg
pusha
in
out
mov
movsl
enter
push
inc
loop
xor
int3
sarl
fstps
adc
hlt
scas
push
add
push
clc
lods
sub
sub
sub
xor
mov
out
jnp
in
jecxz
test
pop
adc
aas
xor
and
push
xor
mov
jecxz
and
call
stos
ljmp
xchg
daa
in
in
push
add
scas
in
out
push
or
aas
enter
adc
cs
push
cmp
aas
jle
ret
movsb
cmp
scas
mov
adc
lods
cmp
xchg
adcb
mov
data16
mov
xchg
push
xor
or
addr16
xchg
dec
pop
mov
push
dec
fsubr
cltd
or
mov
es
test
insb
ss
jnp
xor
push
dec
movsl
mov
aas
adc
aaa
xor
add
xchg
loopne
cmp
ljmp
lods
jge
ljmp
lahf
push
shl
pushf
push
notb
outsb
notl
ret
inc
or
adc
jb
dec
stos
ljmp
lret
int3
xchg
inc
int
cmp
lret
inc
mov
fidivrs
xor
je
out
mov
push
fildl
or
out
mov
aas
js
in
faddl
adc
pop
cwtl
mov
outsb
push
or
mov
mov
or
push
push
aam
inc
cmp
in
sbb
cs
mov
sbb
cmpsl
sbb
pushl
nop
jbe
call
lea
sub
mov
inc
aam
inc
or
cwtl
and
push
dec
add
call
dec
lock
enter
push
mov
mov
mov
call
pop
push
repnz
aas
adc
jmp
sbb
or
dec
xor
dec
cmp
rolb
cmp
scas
mov
gs
cltd
es
jecxz
fs
cmp
xor
repnz
xchg
or
xchg
test
adc
cwtl
sahf
cmp
sub
dec
dec
xchg
or
add
sbb
add
push
or
sub
xor
pusha
lahf
dec
mov
xor
and
divl
shl
mov
shl
clc
sub
sub
or
sahf
add
add
pop
push
jp
adc
scas
js
push
shlb
cmpsb
rolb
pop
movmskps
sub
jmp
sbb
out
jae
mov
je
sub
inc
cmpsl
pop
jmp
js
jbe
push
push
ljmp
mov
fsub
xor
ret
dec
mov
stos
rcll
sub
js
test
test
xorb
mov
aas
push
pop
mov
ss
lret
mov
les
inc
adc
fidivrs
lahf
or
inc
jb
incb
lcall
fldcw
push
lcall
call
mov
movsb
sbb
xchg
xor
arpl
jnp
cmp
mov
aas
js
sbb
ret
cmpsl
scas
shlb
scas
lcall
xor
mov
adc
test
enter
inc
jmp
lret
push
jbe
loopne
adc
mov
adc
xchg
jno
adc
loop
dec
push
pop
pop
aam
pusha
imul
rolb
stos
test
add
push
pop
enter
cmp
mov
cmp
ds
leave
and
cmpsb
cli
mov
or
lea
cmp
test
shrb
cltd
add
xor
pop
addr16
jbe
hlt
movsb
mov
adc
mov
cld
inc
es
cltd
xchg
movsb
dec
mov
sti
scas
pop
push
movsb
lret
mov
sarl
iret
adc
cmp
ret
jnp
sub
out
ds
adc
mov
lret
jno
pop
sub
outsb
les
stos
xchg
mov
insb
iret
mov
sub
xchg
cltd
cltd
sub
inc
add
rclb
int3
test
rcrb
shll
push
xor
shlb
sub
lahf
stos
notl
notb
in
xor
iret
fistpl
xchg
sub
ret
dec
ljmp
movsl
lret
pop
inc
jae
and
js
subb
adc
push
fildl
add
and
mov
cs
jp
gs
aas
rcrb
mov
notl
call
adc
es
sbb
dec
or
jl
les
adc
dec
mov
mov
out
orb
test
pushf
push
or
insb
scas
or
mov
hlt
rorb
fwait
jmp
sub
jno
and
int3
push
je
inc
das
adc
xchg
aas
add
xchg
clc
sub
nop
xchg
push
faddl
or
stos
pop
sbbb
rol
push
cmp
test
call
jb
jbe
inc
cli
mov
es
adc
jg
leave
mov
or
lock
int3
mov
fisubl
sbb
je
jl
cmp
dec
aam
call
outsb
pop
aam
je
inc
shll
sbb
hlt
outsl
mov
pop
cmpsb
push
push
out
xor
cmp
ljmp
mov
ss
out
push
repz
push
cmpsl
sbb
in
push
pop
sti
dec
aas
sub
ss
pop
stos
or
mov
call
or
shll
fiadds
lods
gs
cmpsb
cmp
dec
mov
insb
insb
insb
sub
mov
stos
enter
cmp
adc
scas
and
adc
aad
das
fdiv
mov
mov
fdivp
mov
xchg
outsl
adc
ljmp
mov
xor
add
mov
lcall
push
dec
fidivrl
jae
cmpsb
arpl
adc
sahf
inc
lea
icebp
cmpsl
add
mov
inc
lcall
cli
dec
loopne
inc
rolb
lea
mov
stc
jecxz
push
push
push
les
inc
into
int3
hlt
rclb
fsubr
movsl
xchg
adcb
jae
pop
dec
in
xchg
je
push
rcr
cmp
cmp
leave
mov
ror
shlb
repz
aas
adc
lcall
leave
test
sub
ljmp
or
inc
or
inc
mov
pop
lods
mov
ljmp
and
xchg
imul
adc
cld
aas
dec
pop
cmp
sub
sub
pop
data16
dec
adc
ds
mov
xchg
jge
pop
idiv
mov
mov
and
dec
push
loopne
xchg
scas
fstpt
fs
push
cwtl
jge
sub
jne
mov
into
jl
push
and
mov
vmread
sub
jg
iret
mov
sbb
adc
lods
inc
ss
mov
push
or
cltd
push
pop
std
adc
lock
xor
or
stos
xchg
mov
push
inc
ljmp
idivb
js
repnz
jecxz
cmp
int
cmpsb
push
rcrb
jp
sub
lcall
movsb
or
xchg
pop
mov
movsb
adc
mov
mov
cld
xchg
bnd
mov
dec
movsb
xor
cmp
ljmp
insb
mov
lods
push
jbe
xchg
das
int
nop
imul
push
and
adc
cmpsb
frstor
adc
test
repz
test
push
call
sub
mov
mov
xchg
cmpsb
in
cli
lahf
call
mov
xchg
fdivs
es
xor
mov
add
adc
pusha
push
jnp
add
jb
xor
insl
fidivl
xchg
je
push
xchg
mov
outsl
scas
sub
pop
jae
xor
ss
adc
outsb
push
add
mov
mov
adc
cmpb
xor
iret
fcmovu
jb
push
pushf
lcall
mov
cmp
test
sub
pmaddwd
lds
mov
inc
stc
mov
repnz
add
adc
pop
mov
hlt
mov
mov
mov
push
pusha
incb
mov
push
cmp
incb
push
test
lods
subb
inc
mov
and
push
or
cmpb
in
mov
pop
scas
fistpl
or
rol
aas
ds
mov
inc
inc
lods
aaa
rcrl
adc
cmc
mov
push
mov
fs
pop
pop
es
js
bound
mov
adc
and
ljmp
rclb
stos
sub
lcall
jnp
loopne
cs
imul
or
cltd
sahf
sub
jo
loope
mov
fsubrs
ljmp
scas
mov
aas
sbb
sbb
pop
pop
pop
jnp
cmp
mov
or
xchg
fsubr
mov
aas
cmp
sahf
mov
lock
or
cli
dec
cmp
out
js
sub
lods
les
fs
mov
filds
movsb
or
mov
sahf
cmp
cmp
ss
push
lcall
xchg
push
popa
mov
je
push
mov
xor
pop
sub
sub
aas
fistps
shlb
cmp
fimuls
aas
hlt
sbb
mov
int
jg
xchg
movsb
mov
and
popf
mov
xchg
fnstcw
addb
sarb
jnp
sbb
test
jl
cmp
jbe
pusha
jb
xchg
jmp
xor
xlat
int
ficoml
ss
dec
cmp
mov
push
push
cmp
enter
xor
insl
xchg
lods
adc
pop
and
popa
adc
push
pop
sbb
push
adc
sub
cmp
fcmovb
fimull
jecxz
push
add
dec
push
lcall
or
lcall
popf
inc
lret
sbb
mov
dec
aam
lret
aas
push
lahf
in
ret
movsl
cmp
and
das
lods
xorl
push
enter
add
adc
mov
shl
test
or
push
xor
call
sub
mov
in
add
sbb
mov
sahf
adc
imul
inc
mov
ljmp
mov
addl
repnz
mov
lds
cmp
dec
cmpsl
mov
movsb
push
shll
xor
jmp
jg
test
sub
sub
les
fildll
mov
mov
daa
jl
ds
jo
out
push
xor
jle
xchg
out
dec
mov
test
cwtl
repnz
jl
ret
test
fwait
adc
pop
and
js
cld
mov
or
cmp
xor
mov
pusha
mov
je
dec
aaa
shlb
mov
mov
fcom
adc
xchg
add
jp
mov
and
pop
pop
cwtl
inc
xchg
jae
dec
push
sub
push
mov
nop
lods
sbb
or
repz
test
sbb
mov
push
stc
ljmp
push
loopne
sub
leave
adc
add
push
push
cmp
stos
sub
push
mov
lods
mov
stc
lret
ja
jmp
and
in
push
or
jno
mov
hlt
inc
push
into
in
fcoms
loopne
xchg
arpl
mov
push
push
push
push
fisubl
jne
pop
dec
mov
test
call
ja
cmp
mov
sahf
sub
or
cmp
lock
lods
dec
outsb
add
push
or
adc
cmp
fsubl
pop
add
pop
xor
cltd
sbb
add
mov
fimull
jae
adc
out
pop
sbb
dec
xlat
pop
jecxz
ljmp
push
dec
fldt
test
push
in
pushf
mov
scas
xor
dec
sub
sbb
cld
shlb
int
adc
sub
bound
lcall
stc
dec
ljmp
push
mov
add
mov
cmp
loope
adc
insb
cmp
and
cltd
fstpt
inc
and
mov
push
lock
stos
shrl
int3
call
dec
jae
adc
cmp
fdivl
test
sbb
leave
les
jae,pn
insb
and
mov
push
mov
push
fcmovb
adc
sub
loopne
sub
rorb
fdivp
push
mov
test
lea
les
cwtl
es
loopne
je
je
js
adc
mov
and
or
js
aas
inc
lock
lcall
pop
xor
mov
lock
mov
mov
ss
and
dec
sbbl
addr16
jl
addl
jge
shl
out
pop
mov
push
adc
lock
add
mov
outsl
lcall
rcrl
mov
inc
dec
mov
pop
mov
jle
mov
pop
cmp
idivb
push
adc
sub
xor
sbb
mov
lahf
mov
jecxz
loopne
in
jae
stos
in
push
lds
adc
mov
rorb
fiaddl
fcomp
adc
movups
into
mulb
push
lahf
popa
cltd
shlb
mov
push
mov
xchg
adc
fisttpl
xchg
add
add
cmp
dec
loop
pop
dec
icebp
jl
mov
sub
dec
sub
aas
outsl
fistl
es
jbe
xor
cmp
mov
xchg
mov
insl
mov
sbb
mov
push
jmp
push
sbb
pop
in
rcrb
adc
jns
aaa
stos
lret
mov
sbb
adc
cmp
ficoml
bound
loopne
jae
sub
das
inc
cld
mov
faddl
in
xor
mov
sar
mov
inc
pop
jmp
dec
mov
inc
pop
xchg
es
sub
inc
or
jecxz
push
sub
pop
iret
dec
lock
rcll
pop
movsl
mov
movsb
or
lcall
adc
cmp
fistps
lock
push
lock
subb
xchg
je
rcrb
mov
hlt
dec
lahf
jle
loope
inc
int
es
mov
pop
cmp
pop
repz
cwtl
push
cmpsl
cmpb
push
fnstenv
stos
pop
sbb
mov
lahf
clc
mov
ss
push
aas
and
pop
das
add
mov
or
shll
xor
int3
scas
in
push
scas
popf
out
pop
por
jbe
lcall
fdivl
mov
mov
mov
pushf
mov
aam
ljmp
inc
cmp
mov
push
sub
mov
xchg
jns
aam
in
dec
and
gs
or
cmpsb
push
jmp
sahf
and
and
pop
fisttpl
bound
push
fs
popa
repnz
jge
lret
jae
xorl
jnp
icebp
jecxz
push
sub
add
cld
and
pushf
addb
nop
in
mov
cmp
or
pop
enter
and
jbe
mov
push
insb
push
je
push
shlb
hlt
mov
xor
jbe
les
add
repnz
call
cmc
mov
bound
push
push
cwtl
in
loop
add
adc
lock
pusha
sbb
cmp
pop
cmp
jge
subl
add
movsb
mov
in
sbb
inc
fcomps
in
inc
sbb
fwait
ret
push
sbb
dec
lea
fcoml
cwtl
ds
mov
push
push
inc
fstps
sub
and
mov
lret
repz
add
int3
leave
sub
and
sub
es
es
aad
mov
push
in
or
pop
add
xor
xchg
aas
or
mov
hlt
data16
imul
mov
std
lods
test
test
mov
jg
cmp
aam
xchg
mov
sbb
ret
cmp
aas
cmc
dec
mov
adc
jcxz
sub
je
push
ljmp
push
adc
fs
sub
xlat
jmp
data16
fidivrl
mov
inc
mov
sub
push
or
cmp
test
push
frstor
rcrl
stos
mov
sbb
test
jo
sti
nop
and
sub
sub
adc
lds
adc
sub
out
inc
add
decl
mov
js
adc
jns
sub
xchg
outsb
hlt
cmp
ret
pusha
inc
push
adc
sarl
movsb
fstpt
ret
mov
jmp
cli
rcll
push
jecxz
daa
jg
and
ds
repnz
or
adc
jle
push
adc
dec
nop
pop
lods
and
add
fistl
jo
test
xchg
dec
mov
lea
adc
jle
ja
repz
scas
push
sbb
push
test
sbb
sbb
dec
adc
adc
xor
or
push
inc
lds
sub
xchg
pop
sub
mov
push
inc
adc
shll
sbb
das
dec
push
push
adc
stc
aas
push
fsubr
cmp
loopne
scas
fiaddl
mov
sahf
xorb
fidivrl
imul
cmp
je
outsl
stos
adc
and
xor
idivb
sarb
in
int3
mov
jecxz
push
push
fists
fsts
lea
aaa
sbb
les
adc
add
scas
lahf
loopne
loop
xchg
xchg
hlt
movb
js
xor
pop
scas
jmp
dec
cwtl
mov
adc
test
lods
xchg
pop
cmp
insl
mov
add
adc
mov
xchg
dec
aam
fidivrl
scas
jle
hlt
dec
xor
test
dec
pushf
lea
cli
jb
jo
movsb
jmp
cmpsl
dec
loopne
push
pop
and
dec
sahf
xor
add
repnz
icebp
sbb
enter
test
add
mov
roll
and
lods
das
mov
fisubrl
inc
test
push
push
mov
icebp
fidivl
ret
or
mov
sub
add
xchg
addl
test
push
sbb
jge
xor
gs
adc
in
sbb
test
aad
xchg
add
push
pop
jl
pop
add
cli
inc
jae
add
aaa
repz
int3
lods
xor
mov
cld
dec
int3
or
or
jle
loopne
lret
inc
pusha
stos
mov
inc
cmp
inc
jecxz
push
in
nop
dec
push
mov
push
fcompl
and
cmp
cmp
adc
pop
and
or
pusha
hlt
or
push
movb
xchg
hlt
nop
scas
cli
mov
sti
push
mov
cmp
aaa
ret
movsb
rolb
jmp
inc
js
xchg
add
out
ficompl
sbb
dec
mov
inc
es
adc
cmp
sub
sub
enter
push
sbb
xor
dec
test
js
xor
inc
mov
pusha
mov
sbb
fdivs
roll
lock
adcb
js
aaa
stos
pop
push
popa
fimull
fldl2e
popf
xor
cmp
lahf
pop
pushf
les
or
mov
push
ficompl
pop
push
js
and
bound
scas
cmp
adc
xchg
add
push
jmp
seto
jae
fs
mov
jmp
push
pop
pop
test
sbb
lods
clc
lea
lret
push
xorb
mov
adc
mov
cli
ret
xchg
popa
adc
mov
xor
jo
push
fxch
cmp
lock
mov
insb
outsb
and
mov
adc
aam
adc
sub
cmp
mov
loope
outsb
or
xor
xchg
daa
jae
mov
sbb
push
faddl
scas
xchg
mov
mov
push
inc
xchg
push
xor
pop
jns
xchg
cmp
mov
or
push
pusha
pop
mov
adc
push
pushf
and
pop
ficompl
mov
mov
push
in
lcall
push
sbb
inc
or
cmpb
or
sub
inc
dec
xchg
mov
jnp
adc
push
dec
xchg
ret
xor
inc
fisttpl
subb
hlt
cs
push
pushf
cmp
push
or
int3
outsb
inc
pushf
cltd
mov
xchg
mov
sub
adc
stos
sti
cwtl
fisttps
iret
jae
jmp
fsubrs
or
mov
lret
pop
sub
test
mov
int
stos
test
xor
dec
mov
fnstcw
cmpsb
bnd
adc
test
je
dec
pop
mov
fstps
cli
roll
or
in
in
orb
inc
out
les
imul
sbb
outsb
mov
mov
or
fs
pop
adc
add
int3
sbb
cmpsl
lahf
aam
mov
push
ficoms
lcall
xor
or
cli
sub
sub
xchg
mov
dec
lcall
into
sbb
into
ret
hlt
mov
js
lret
aam
inc
pushf
xorb
rorb
pop
cmp
mov
add
fwait
ror
pop
stos
je
jge
mov
lock
mov
rorb
jne
mov
repz
rcll
lret
lods
cld
dec
sub
xor
xor
bound
xlat
fisttpl
loopne
xchg
jmp
pop
push
adc
and
mov
xchg
lods
inc
rolb
test
ficompl
mov
dec
push
jbe
fmuls
cs
push
out
in
inc
mov
sarb
mov
das
stos
adc
inc
adc
imul
mov
mov
or
fwait
in
sbb
ja
fisubs
mov
sbb
dec
inc
std
add
es
mov
insb
insb
jbe
cmpsb
pop
lods
pop
int3
lahf
adc
int3
ss
jo
data16
add
hlt
pusha
into
mov
dec
adc
adc
iret
inc
mov
cld
push
test
xchg
fidivrs
adc
cmp
hlt
push
aas
mov
cmp
dec
aas
into
popa
test
mov
push
adc
lock
stos
sbb
lahf
bound
xchg
fstpt
sahf
sbb
mov
dec
les
outsb
mov
pushf
add
cmp
mov
scas
nop
orb
jge
ds
fmuls
jae
xor
xor
pop
lcall
test
shlb
fisubs
adc
test
sub
insl
mov
push
test
leave
lea
rorw
insb
ljmp
ret
adc
mov
inc
clc
mov
adc
adc
push
hlt
mov
inc
xchg
rol
cmp
in
stos
pop
inc
scas
add
jbe
movsb
cs
or
aad
loopne
mov
dec
rcrb
and
cmpsl
pop
push
imull
mov
test
jbe
sub
lods
or
adcb
fcmovne
jo
fs
orb
cltd
and
lcall
xor
fs
aam
xchg
mov
cs
lret
mov
in
hlt
pinsrw
orb
push
sub
and
push
inc
lock
and
inc
ret
enter
movsl
popf
test
fmuls
mov
cwtl
mov
loop
pop
in
ljmp
mov
fstpl
fcmovnbe
mov
add
mov
clc
push
loopne
ficompl
or
sub
imul
mov
cli
aaa
gs
cmp
push
or
push
stos
js
sbb
jl
cmp
stc
int3
fcoml
movsb
and
outsb
or
ss
mov
inc
cli
mov
dec
js
jle
stos
je
push
xchg
push
cmp
mov
xor
sub
push
sbb
test
push
in
cltd
loopne
flds
data16
aad
outsl
ret
and
stos
xlat
cmp
push
hlt
pop
in
std
lret
inc
xchg
or
dec
bound
cmp
iret
test
shrl
push
inc
add
je
dec
out
shrl
sti
add
xor
or
out
cwtl
lret
aaa
stos
in
and
adc
mov
lods
pusha
fldl
adc
pop
cmp
push
mov
aas
ss
and
jo
subl
xchg
add
push
xor
adc
cmp
or
sahf
push
rorb
xchg
jb
mov
idivb
daa
push
pushf
xor
inc
push
lods
push
adc
pop
push
mov
mov
lods
movb
cld
pop
lea
or
cmpsl
sub
cmp
jp
jo
mov
xor
popf
stos
loope
sub
jo
inc
mov
cwtl
sub
test
outsl
cmpb
jno
loop
insb
push
push
dec
jb
xor
lcall
sbb
adc
mov
sahf
add
pop
mov
fidivl
pop
push
adc
sti
xchg
cmpb
jl
fdivrl
and
jle
aas
cmp
inc
sbb
cmp
push
mov
test
test
or
dec
adc
xor
aam
push
mov
lods
clc
mov
add
mov
into
insl
ret
inc
stos
sub
or
cmp
and
nop
loope
test
cld
push
stos
jo
dec
mov
inc
rclb
jge
ja
arpl
adc
lods
cmp
xor
add
or
lahf
push
sbb
lcall
loopne
sbb
adc
xor
ret
mov
inc
mov
hlt
out
ljmp
outsl
lret
adc
out
lcall
cltd
sub
je
pusha
int3
test
ds
push
adc
cmp
rorb
test
jbe
or
lret
dec
fimull
movsl
dec
sbb
cmp
sbb
lods
lods
add
enter
cmp
lahf
mov
mov
call
ficompl
roll
cmp
test
sub
sbb
fistpll
add
dec
mov
lcall
inc
cmp
aas
insl
pop
cmp
mov
scas
push
nop
rclb
sub
sub
adc
insb
push
fwait
mov
aaa
lcall
fwait
mov
xchg
sbb
mov
and
es
push
fcoms
push
adc
cmp
cs
je
pusha
stos
dec
pop
mov
mov
fcomp
fistl
jl
pop
test
add
lods
das
loopne
aas
and
and
jo
adc
loopne
sarb
les
add
lret
js
not
and
mov
adc
push
adc
pop
int3
push
into
or
push
in
mov
mov
call
sub
jb
dec
fdivrl
inc
adc
or
add
pushf
adc
add
pop
dec
push
mov
xchg
mov
movsb
push
bnd
and
mov
insb
fstpt
push
jl
jecxz
js
lret
add
hlt
je
push
es
jl
add
add
or
flds
cli
nop
roll
sub
xor
les
insb
inc
push
sti
ret
ret
mov
mov
xchg
sahf
push
into
aam
leave
jnp
fdivrs
ss
test
inc
or
jo
arpl
in
mov
inc
stc
xor
cwtl
loop
je
push
fsubrs
mov
pusha
lret
jg
pop
out
ficoml
mov
shrl
jg
sbbl
xor
lcall
or
insb
sahf
mov
and
js
ret
lahf
fsub
add
fisttpl
aaa
fstpt
jl
xor
movsb
lea
data16
adc
jmp
add
arpl
xchg
hlt
dec
jb
je
daa
mov
in
insb
popa
pop
push
add
xchg
sub
mov
sahf
add
and
es
and
mov
or
mov
into
pop
push
lock
es
xchg
mov
imul
or
xchg
push
test
insb
stos
inc
mov
push
in
xor
adc
or
and
inc
les
enter
mov
mov
xchg
push
lret
aam
push
scas
adc
cmp
loope
mov
adc
sbb
mov
cmp
ljmp
sbb
lret
jae
fldl2t
mul
jno
inc
cwtl
add
mov
push
int
cmp
mov
test
aam
sub
jle
dec
dec
enter
adc
pop
mov
add
jl
ds
mov
cmp
pop
sti
mov
sti
stos
lock
fisubrs
addr16
mov
fsubs
aam
ljmp
scas
adc
cmp
lret
push
sbb
adc
adc
loopne
mov
insb
cltd
ret
dec
mov
fldt
dec
testb
pop
mov
sbb
hlt
push
mov
add
xor
pop
sub
xor
inc
mov
daa
rcrl
popf
push
ffree
pop
inc
aam
aad
aam
mov
mov
and
lcall
loopne
add
sbb
xor
je
push
aaa
push
sbb
mov
call
aad
out
adc
inc
xor
js
fwait
test
in
mov
xor
mov
in
je
pusha
fcoms
mov
xchg
les
js
cli
pop
jnp
ds
mov
inc
orb
int3
and
mov
js
lahf
shll
loopne
aam
les
mov
sub
mov
js
repnz
mov
cmc
int
mov
xrelease
lds
nop
imulb
lret
push
outsb
lods
adc
lcall
cld
mov
adc
sub
fidivl
lret
js
std
xchg
ljmp
dec
fmul
ds
andb
sti
and
pop
nop
mov
xor
push
sub
stos
and
bound
dec
push
mov
loop
mov
xor
add
lcall
adc
fsubrs
lods
xlat
lret
xchg
and
or
mov
dec
orb
jge
scas
call
mov
out
sbb
pop
aas
xor
dec
insb
adc
xchg
pusha
fmull
loop
shl
pop
aam
je
inc
mov
sbb
hlt
push
push
hlt
push
cmp
adc
push
test
xchg
mov
cmp
movsb
mov
int
push
adc
cmp
aam
cmp
dec
stos
mov
les
or
jns
jge
push
sbb
mov
mov
out
cmp
push
rcrl
outsl
les
mov
pop
je
push
xchg
mov
pusha
test
mov
loop
dec
mov
iret
sbb
adc
scas
adc
ds
ret
cmp
ret
incb
lods
adc
jb
push
outsb
dec
out
outsl
ljmp
sti
lea
fiaddl
or
cwtl
fdivs
lret
out
dec
or
sarb
mov
push
neg
in
scas
je
inc
pop
cwtl
xor
pop
add
push
rol
mov
cwtl
outsb
mov
push
es
pop
aaa
lcall
rorl
push
mov
lods
insl
mov
sahf
hlt
fs
lods
pop
fadd
pusha
sub
mov
mov
push
cmp
adc
aas
adc
mov
ljmp
cmp
ds
subl
xor
add
xchg
test
xor
call
je
jle
dec
int3
xor
fidivl
adc
sahf
pushf
aas
add
mov
stos
cmp
sub
in
je
push
pop
or
add
fimull
cli
adc
rolb
adc
xchg
aas
enter
pop
jae
add
out
scas
push
sub
sbb
or
sub
sub
repz
fistpl
mov
mov
sbb
lods
push
adc
int3
in
mov
subl
add
mov
xchg
xlat
loopne
enter
stc
popa
xor
jae
push
jnp
cmp
imul
test
mov
pop
les
fildl
pop
and
lret
xor
or
ds
sub
shrl
jecxz
js
flds
aaa
fldt
adc
pop
add
xor
push
xor
sahf
or
sub
ss
arpl
mov
hlt
fcoml
fldcw
pop
push
call
test
cmp
mov
jae
inc
push
cltd
push
inc
add
xor
enter
ficompl
into
jle
pop
divb
test
dec
push
push
fwait
aam
sub
inc
test
xchg
mov
stos
mov
notb
fidivs
inc
mov
cmp
lods
xor
mov
fsubs
aas
cmp
pop
lock
inc
mov
insb
cmp
mov
mov
cmp
push
int3
vmovhps
xchg
push
test
jmp
fldt
daa
outsb
ficoml
hlt
enter
pop
ret
dec
mov
jge
sub
enter
inc
adc
popa
pushf
lret
je
pop
inc
insb
ds
sbb
jl
fiaddl
stc
push
hlt
test
xchg
mov
test
cmp
push
les
pop
jno
fsubrl
fisttpll
addr16
mov
mov
mov
sbb
add
fs
jmp
sub
in
mov
sbb
ja
mov
and
daa
mov
out
pusha
les
les
mov
jecxz
mov
jnp
mov
adc
lock
shrl
mov
jbe
mov
mov
test
cmpsl
jno
js
je
mov
mov
aas
cmp
push
into
int3
sub
push
fcomps
mov
cmp
in
outsb
mov
inc
push
or
cltd
push
or
add
je
sbb
outsb
sub
scas
divl
call
and
dec
sbb
mov
push
fsubrl
sub
sar
xchg
push
dec
push
movsb
xchg
push
popf
or
push
inc
cmp
mov
jnp
mov
insb
jb
cltd
push
xchg
outsl
lock
or
bound
int
mov
push
fsts
test
push
mov
fidivl
push
outsl
inc
hlt
divps
sub
aas
push
outsb
adc
aaa
push
pushf
and
clc
roll
cli
into
lcall
push
notb
cmpsb
xchg
lret
jae
sbb
adc
lods
insb
dec
mov
mov
fsin
sub
or
jo
ficoms
cltd
cmp
mov
out
imul
push
inc
mov
insb
mov
xor
jmp
sub
sub
sub
cmp
mov
lcall
sub
push
mov
mov
push
inc
sbb
lea
lcall
jo
push
dec
mov
and
dec
and
imul
push
or
cmp
mov
and
push
jle
dec
cwtl
mov
xor
mov
pop
cmp
pop
les
test
punpcklbw
pop
aas
inc
cwtl
fs
adc
sub
cltd
loopne
daa
xchg
jne
fcompl
pusha
add
or
jmp
stos
dec
mov
dec
les
aaa
js
cmp
xchg
or
ss
ficoml
mov
adc
xlat
cmp
and
das
pop
mov
pop
fldenv
sbb
je
les
mov
bound
inc
mov
nop
in
push
or
sti
out
mov
out
xchg
xor
add
fdivl
scas
xlat
xchg
mov
sbb
call
fimull
jp
enter
dec
mov
jno
inc
roll
sub
es
xor
ss
int3
orl
stc
xorl
sub
push
mov
es
cwtl
and
mov
add
mov
xor
mov
cmp
mov
push
es
es
ss
mov
push
adc
hlt
inc
sbb
push
les
mov
ss
mov
mov
jl
xor
sub
fnstcw
push
xchg
orl
add
push
mov
dec
push
cli
jle
mov
jge
push
xorb
lahf
lock
mov
adc
jns
bound
jbe
adc
test
test
mov
sub
bound
push
insb
bound
std
cmpsl
sbb
mov
dec
repnz
in
dec
loope
mov
jp
mov
cmp
sub
enter
and
sbb
cmpsb
push
or
rcr
iret
je
push
aam
int3
shr
jge
sbb
dec
mov
rcrb
and
mov
rorl
cmp
push
andl
xchg
fcmovne
jmp
or
push
xchg
mov
ja
sbbl
fisttpl
stos
aas
mov
cmp
mov
adc
clc
ljmp
sub
mov
hlt
pusha
test
sbb
xchg
add
jno
xor
je
stos
inc
mov
stos
sub
inc
insb
aas
repz
add
lret
pusha
pop
jmp
cmp
xchg
je
nop
enter
stos
cwtl
push
push
inc
popf
push
sbb
addb
add
daa
in
shrb
das
add
mov
add
rcll
mov
cmpsb
jae
mov
xchg
sub
pushf
sub
clc
dec
dec
inc
inc
js
xor
mov
stos
jnp,pn
js
xor
lret
rcl
cmp
push
ret
dec
leave
mov
mov
fdivrl
in
push
les
cmpsl
insb
sbbl
sbb
mov
and
or
and
lods
push
mov
arpl
and
push
cmp
mov
jae
ja
or
or
mov
and
or
test
and
cs
cmp
sbb
aaa
add
xor
cmp
push
mov
adc
out
repz
iret
fldt
shrl
xor
je
cmp
lret
push
ds
dec
xorb
nop
push
scas
js
je
inc
pop
adc
dec
mov
dec
xor
loopne
ljmp
push
lahf
and
mov
push
in
stos
pop
dec
movsb
sub
xor
loopne
cmpsb
adc
mov
decb
fists
std
dec
xor
cli
ja
cmp
mov
or
add
scas
pop
xlat
adc
cmp
scas
cmp
fmull
pop
push
inc
cmp
lret
outsl
mov
ss
lcall
test
sbb
mov
rorl
xchg
sub
pop
int3
sahf
mov
das
fldt
pusha
add
sub
xor
test
push
push
pop
jg
ja
mov
push
fldlg2
jge
ret
mov
inc
mov
lods
mov
mov
push
mov
or
aas
adc
mov
fsubs
pop
cmpl
rclb
fnstenv
cmp
lret
push
fmuls
fcmovne
dec
fsub
push
enter
daa
hlt
jbe
mov
sbb
adc
sbb
cmp
or
and
jae
and
lret
jae
inc
cmp
ss
lea
jo
push
adc
jmp
cmp
jg
sub
jg
push
int3
xchg
jmp
cmp
push
icebp
mov
out
into
sub
int3
pop
shl
leave
lods
sub
mov
outsl
fdivr
fwait
mov
push
shrb
je
xchg
xor
mov
movsb
jg
push
xor
fdivs
subb
jbe
add
pusha
sbb
or
ds
enter
mov
add
xor
push
push
jno
pusha
imul
je
loop
jg
xchg
cmc
inc
xchg
sbb
fcom
sbb
add
stos
cmp
cmpsb
push
or
or
adc
push
sbb
add
divb
out
hlt
add
dec
adc
dec
mov
and
js
xchg
mov
dec
and
push
push
mov
dec
lahf
test
stos
sub
sub
jle
mov
xchg
mov
ret
xor
aas
cli
cmp
xor
lcall
adc
adc
rcrl
jl
out
sbb
scas
or
push
and
push
mov
cmp
out
pop
pop
sbb
push
loopne
xorl
push
ret
mov
push
addr16
or
ror
cmp
fistl
adc
lods
je
inc
ficoms
adc
jnp
rcr
cmp
inc
sub
stos
or
and
shrl
stos
lock
rclb
xor
addb
cmp
test
rcrb
add
cmp
fs
push
ret
adcb
je
push
cvtps2pd
sub
jp
push
dec
ss
ret
pop
sbb
loop
and
push
adc
sbb
test
inc
aas
inc
push
mov
push
mov
rcl
mov
ljmp
stos
addr16
outsl
rorb
lods
push
adc
inc
inc
adc
sbb
aas
jge
dec
sbb
loopne
jg
adc
push
sarb
pop
push
mov
mov
es
cs
adc
xchg
cmp
sub
fwait
je
inc
jecxz
and
cmp
mov
and
test
pop
or
fdiv
adc
aam
jmp
mov
fimull
cmp
scas
test
in
mov
pop
mov
dec
jbe
mov
mov
fidivrl
shrl
out
mov
dec
lret
mov
je
fst
out
adc
adc
aam
cmpsl
pop
dec
xor
push
pop
test
inc
pop
inc
arpl
cmp
js
ffreep
jl
mov
xchg
dec
xor
and
outsb
mov
push
ljmp
cmpsl
imul
push
shr
into
xor
or
mov
inc
je
push
and
jle
sub
lea
loopne
cld
stos
lcall
loop
xor
xchg
test
lcall
dec
xor
cmpsb
mov
in
inc
and
jl
js
push
in
adc
sbb
scas
pushf
push
mov
jno
adc
mov
mov
cwtl
inc
jg
mov
sub
mov
iret
mov
data16
je
mov
inc
mov
xorb
into
scas
pop
and
pop
int3
inc
bound
xor
mov
push
jns
pusha
pop
jo
push
push
call
mov
pop
sahf
sub
mov
sbb
or
int3
jmp
cmp
sub
cmp
mov
xor
cld
jo
cmpsb
sub
aas
add
add
add
imul
dec
les
dec
cld
xchg
lods
mov
cwtl
decb
sbb
xor
or
cmp
sub
sarl
and
ret
lret
adc
dec
cld
in
repnz
dec
pop
lcall
dec
adc
push
testl
adc
and
cmp
ja
adc
or
push
or
sub
inc
mov
cmp
insb
test
jg
dec
dec
cwtl
in
pusha
enter
sarb
sbb
data16
inc
movsb
stos
dec
ds
notl
call
push
jo
stos
lret
ljmp
cmp
rcr
adc
sub
cs
or
je
sbb
in
xor
jno
scas
out
sub
iret
adc
mov
loopne
cmpb
push
stos
faddl
aad
cld
inc
enter
pop
push
cmpsb
aas
aas
mov
cli
dec
es
sub
adc
lock
pop
jmp
mov
subb
xor
sub
and
clc
ds
lcall
dec
sbbl
jmp
orl
cmp
pop
cmp
pop
test
cmp
xchg
outsl
bound
ja
shll
add
push
test
lods
xor
sbb
pop
xor
loop
fidivrl
xor
mov
aas
xchg
jg
push
push
loop
scas
rorb
xor
sarb
add
ds
inc
mov
push
pop
jge
in
shll
jmp
or
lock
ds
dec
inc
cmp
cmp
cwtl
lcall
xchg
mov
cmpsb
and
xor
push
lods
jbe
lahf
mov
push
fsubrl
sahf
insl
pusha
inc
or
jb
pop
xor
adc
ret
loopne
cmpsb
hlt
pop
iret
pop
push
lret
push
lcall
push
push
dec
fcmovbe
je
jg
mov
mov
orb
lret
sar
les
ljmp
or
mov
in
xor
subl
and
inc
je
pop
shr
and
lea
push
xor
cmp
push
je
push
or
xor
aam
cmp
or
adcb
cmp
insb
mov
jg
push
inc
outsl
add
push
jl
sub
jle
and
mov
clc
cmpsb
sbb
mov
xchg
inc
jb
aaa
dec
pop
add
movsb
pop
nop
xlat
or
scas
pop
push
fistl
stos
cmp
mov
dec
popa
mov
sub
add
jmp
push
movsb
push
enter
mov
push
pop
jl
xor
fistl
or
push
cmpsb
out
cwtl
cld
cmp
rclb
lret
add
movsl
imul
fchs
sbb
imul
sub
inc
pop
add
movsl
jo
jmp
cmp
cmp
push
popf
pop
mov
mov
push
inc
and
xchg
cs
add
xor
ss
jns
rcrl
lods
cmp
fildl
mov
mov
xor
adc
dec
jo
mov
test
sahf
push
fisttpl
pop
dec
jnp
jb
movsb
xchg
mov
jbe
sub
ss
rolb
add
mov
push
push
push
xor
aaa
push
sbb
jo
roll
rolb
push
scas
je
xchg
aas
pop
lahf
lods
cmpb
inc
test
fisubrl
cmp
xchg
test
sbb
add
sbb
iret
push
lods
mov
adc
cmp
mov
xlat
jge
mov
or
fsubl
mov
adc
lcall
shll
sub
pop
xor
pop
jne
inc
cmc
push
scas
lea
cs
or
xlat
xor
and
push
xor
scas
inc
cmc
adc
call
call
outsb
cmp
mov
xor
and
or
xor
pop
rcrl
in
cmp
pop
addb
push
push
dec
sbb
jecxz
cmpsl
bnd
dec
je
jp
cmp
fisttpl
adc
add
jl
mov
or
push
cmp
dec
or
cmp
test
ds
add
add
add
test
push
adc
sub
sub
xorb
rcr
andb
xor
cmp
ss
xor
add
lret
mov
cld
repz
fcoms
mov
movsl
js
je
inc
mov
xor
push
shlb
insb
push
out
xor
js
idiv
push
cmp
movsb
sbb
into
add
pop
pop
into
and
fsts
cli
pop
not
fcoml
adc
add
inc
sub
push
sub
pop
mov
out
sbb
and
pushf
inc
stos
data16
dec
mov
mov
es
rcr
dec
frstor
mov
pusha
inc
push
xchg
outsl
pusha
mov
dec
cld
sub
mov
pop
push
in
mov
dec
or
fidivrl
outsb
lret
repz
sahf
dec
clc
xchg
ror
aam
push
cmp
sbb
and
mov
dec
mov
adc
push
rclb
adc
mov
js
ret
fisubl
jmp
adc
shlb
add
push
cmp
das
dec
dec
lods
xor
fadds
dec
xor
or
cld
daa
push
shl
enter
rcl
dec
cwtl
loop
cmpsb
pushf
aaa
xchg
pop
hlt
pusha
cli
jo
dec
loopne
in
xor
loop
jl
adc
add
push
pop
adc
idivb
notb
or
mov
or
mov
and
xchg
mov
dec
cld
xor
cmp
mov
stos
cmpb
into
cmp
mov
mov
jb
scas
inc
inc
adc
adc
jg
ja
mov
mov
cmpb
cmp
mov
mov
mov
test
mov
xor
out
pop
cmp
lcall
js
ret
cmp
add
adc
xor
lods
push
sub
sub
xor
movsb
xor
mov
icebp
push
jae
mov
mov
iret
ljmp
jae
pop
orl
addr16
jo
jecxz
psubb
testl
dec
test
mov
movsb
mov
mov
out
and
icebp
ljmp
jecxz
add
adc
lea
jmp
rolb
push
cmp
xor
ja
test
mov
js
add
imull
mov
mov
lcall
or
xchg
cmp
xchg
adc
aas
stos
push
adc
aam
inc
inc
mov
cmp
fmul
sbb
loopne
xchg
pop
cmp
lret
hlt
sahf
inc
mov
js
mov
lret
scas
xor
push
push
inc
adc
lcall
ds
rcr
push
lret
lret
nop
mov
lcall
or
dec
dec
scas
negb
or
fidivs
jge
rclb
mov
cld
in
push
pop
mov
add
jne
ljmp
clc
mov
ds
aas
cli
dec
mov
lcall
fcompl
xor
mov
mov
je
rolb
add
mov
cmp
int
js
fidivs
push
pusha
xchg
sbb
push
fildl
or
inc
js
inc
mov
add
cmc
mov
mov
adc
js
adc
lret
push
and
mov
clc
inc
call
mov
lret
push
pop
sarl
pushf
fdivrs
movsl
mov
mov
pop
push
jl
adc
out
pushf
das
push
loope
adc
ficoml
mov
push
int
call
pop
jmp
fistl
fdivp
lret
mov
xchg
insb
cmp
pop
push
push
push
jl
inc
test
jne
es
xor
fmull
fsubr
and
or
in
or
xorl
or
push
adc
aaa
cld
sbb
mov
cmp
mov
xor
or
incl
cs
les
ss
xor
push
push
int3
mov
inc
lahf
ljmp
je
mov
repz
cmp
sub
mov
inc
gs
test
cli
fmull
mov
shll
aas
mov
repnz
fistl
sub
cs
mov
es
mov
into
push
cwtl
jo
aaa
and
aad
dec
data16
dec
and
dec
mov
jae
mov
mov
mov
mov
xchg
subl
adc
add
fucomi
test
sub
xchg
fstps
push
mov
scas
imul
cltd
pop
lea
lds
int3
imul
cmp
push
aas
jns
mov
push
adc
cmp
or
sahf
rolb
cmp
cmp
xchg
xchg
push
cmpl
nop
leave
sub
js
jno
cmp
and
or
clc
ds
mov
xor
pop
fildl
fisttpl
arpl
lahf
fildl
xchg
pusha
add
push
add
aas
ljmp
cmp
inc
test
inc
lret
add
fcoms
push
pusha
fldl
es
iret
fmull
cli
lcall
push
push
test
or
repz
fsubrl
std
in
adc
or
aas
ljmp
stc
push
cli
out
lcall
dec
bound
dec
call
jnp
or
es
repz
in
push
mov
rorb
push
mov
into
sub
cmp
pop
dec
aad
lret
cmp
lret
push
aam
xor
notl
fisubrl
lea
cmp
push
jg
jo
movb
pop
out
inc
aaa
xchg
or
sti
fs
shlb
clc
mov
mov
les
sbb
mov
xchg
sub
push
cmp
les
adc
mov
inc
pushl
mov
jl
in
pop
orb
mov
addb
xchg
mov
cli
mov
jl
xchg
ret
cmpsl
dec
push
mov
cmp
hlt
ds
movb
sbb
jmp
sub
cmp
mov
int3
in
je
inc
pop
mov
lea
scas
inc
rcr
aaa
int3
into
cwtl
mov
test
stos
cld
push
cmpsb
adc
cmp
mov
cmp
pop
adc
push
cmp
dec
movsl
inc
or
ret
xor
clc
cmp
in
insl
clc
js
or
sbb
dec
or
or
das
add
repnz
cmp
inc
cmp
mov
jo
adc
orb
ss
add
frstor
mull
jmp
sti
out
mov
cmp
les
mov
cmp
pop
aaa
push
dec
sub
and
adc
das
loope
mov
xor
xchg
mov
sarl
jbe
push
push
pop
es
sub
sub
popa
into
mov
sub
sysret
push
jg
daa
mov
fcompl
sbb
pushf
mov
shrb
cmp
loopne
xor
pop
mov
ret
or
pop
dec
fs
mov
scas
xor
ret
iret
lret
fbld
cmpsl
sbb
inc
fwait
enter
cwtl
dec
add
pop
stc
mov
iret
ja
mov
rol
sahf
xor
sbb
push
xorl
push
test
mov
mov
push
mov
xchg
fimuls
lcall
and
decb
jmp
fistpl
push
cwtl
inc
jecxz
xchg
push
js
jle
adc
push
out
sub
inc
insb
push
mov
aad
out
adc
jecxz
add
jo
pop
or
stos
xchg
xlat
test
push
stos
sbb
fidivs
xlat
jecxz
dec
subb
outsl
sub
cmp
mov
cmpsb
sub
and
xor
das
adc
cmp
or
inc
loope
jbe
lea
inc
mov
cmp
xchg
lcall
jmp
test
jmp
cltd
testl
xchg
cmp
lcall
loope
ret
mov
loop
scas
cmpsb
or
ficompl
stos
stos
jp
lods
pop
push
xchg
jae
mov
fbstp
loopne
mov
adc
jle
jo
cmp
and
cmp
lcall
rcll
aad
dec
push
cmp
cmp
cld
adc
aam
inc
adc
sub
xor
fmull
inc
xor
sar
js
xor
push
pusha
fdivl
outsl
push
sbb
cmp
mov
ds
xchg
xchg
and
mov
push
push
xchg
dec
pop
push
jg
xrelease
pusha
push
aam
jnp
mov
push
mov
cmp
repz
ss
into
icebp
add
js
inc
mov
js
daa
jle
xchg
js
cwtl
jno
xchg
push
loop
inc
lods
add
test
je
stos
sbb
jae
jp
ret
sbb
push
xlat
push
insb
pop
push
dec
mov
inc
inc
test
or
loopne
jl
xchg
shrb
test
mov
xchg
jg
jae
addr16
dec
mov
and
sub
dec
sbb
push
cmp
sbb
call
es
mov
mov
notb
cld
rolb
aam
mov
adc
sbb
stos
pop
mov
xchg
cmp
inc
adcl
subb
mov
adc
mov
mov
xchg
cltd
xor
add
pop
dec
push
movsb
push
mov
ret
or
add
mov
ret
dec
pushf
pop
dec
push
mov
lahf
and
jle
add
les
push
push
cmp
mov
adc
idivl
pop
push
lret
test
sar
mov
decl
pusha
mov
mov
fidivrl
cmp
and
shl
pop
sbb
ret
mov
leave
fwait
aam
cmp
inc
add
rorb
inc
mov
dec
cmp
pop
sti
fnstcw
jo
adc
sbb
xor
and
xchg
jmp
lock
sub
out
sarl
or
or
push
les
and
cmp
cmp
aas
outsb
sbb
xchg
mov
lea
mov
mov
mov
and
orl
inc
mov
cld
jns
cmp
jae
jnp
sub
jae
push
sub
mov
or
ret
adc
test
lret
out
cs
lcall
pushl
loop
sbb
lods
lahf
insb
xor
inc
pop
les
adc
popa
out
lcall
insl
push
inc
jle
adcl
jbe
es
in
repnz
fisttps
mov
xchg
jb
cmp
inc
push
mov
push
push
or
roll
push
push
dec
pop
scas
or
push
cmpsb
pop
lods
in
dec
xchg
xchg
jbe
ds
ljmp
es
jmp
inc
jmp
mov
inc
or
or
mov
call
sar
es
ds
orb
dec
mov
or
clc
mov
stos
mov
mov
push
xor
mov
mov
aas
loopne
mov
xor
cmp
mov
ds
je
or
pop
mov
adc
clc
pusha
mov
mov
push
adcb
cld
push
xlat
and
lret
cmp
fwait
or
push
push
cwtl
inc
xor
cmp
sbb
xor
pop
mov
add
int
jae
int3
push
mov
mov
add
mov
outsb
xlat
cmp
and
adc
mov
lret
in
add
jle
mov
lret
jg
mov
cli
mov
test
enter
pop
xor
adc
outsl
and
fsubs
push
into
stos
ds
cmp
mov
mov
cld
xchg
and
sbb
stos
push
repnz
adc
cmp
push
lcall
shll
enter
aas
cmp
push
movsl
mov
push
incb
jge
mov
mov
mov
fsubr
adc
jecxz
mov
cmp
lret
mov
popl
hlt
cmp
cmp
sub
fimull
cmp
cli
nop
push
rorb
movsb
mov
cltd
cli
test
jmp
inc
hlt
push
and
add
and
push
lock
inc
push
push
mov
dec
xor
jp
push
push
cld
inc
xchg
pop
inc
lret
or
lods
in
stos
test
xor
nop
xchg
mov
push
inc
and
and
xor
add
or
push
cmp
mov
movsl
ret
inc
sbb
fcmovnu
pusha
cmp
les
mov
cmp
mov
arpl
and
add
inc
clc
into
lods
xrelease
push
pop
fcom
inc
mov
xor
push
jmp
mov
lods
jg
inc
mov
call
mul
ds
or
int
mov
xor
loop
cmp
ficompl
fisttpl
pop
jp
sub
shll
ret
xlat
mov
dec
lcall
cmp
adc
pop
out
clc
xor
lods
mov
jg
mov
pop
mov
es
add
popl
rcr
es
sub
sub
andb
cld
push
pop
idivl
mov
mov
fcomp
pusha
adc
ds
shll
aam
cmp
or
jl
rcrb
mov
insb
ds
mov
mov
loopne
imul
cmpb
lock
insb
or
lds
testb
or
cwtl
repnz
into
mov
cmp
jnp
mov
out
stos
jbe
lods
pminub
nop
aas
insb
daa
jg
ds
xchg
mov
ss
sar
jge
cmpb
dec
mov
mov
cltd
lcall
cmovl
sub
test
je
cmp
xor
test
iret
fs
jle
adc
dec
into
pop
test
shrl
mov
sub
std
psadbw
and
xchg
rorl
cmp
xor
xor
mov
shr
cmpsb
lret
outsl
fsubrs
inc
inc
lods
cmp
mov
jge
jl
je
pusha
test
push
roll
ret
arpl
filds
stos
and
push
fmull
shrl
cmpsl
add
cwtl
mov
jp
jnp
out
inc
aam
int3
lods
cmpsl
enter
rorl
fiaddl
cmp
push
repnz
add
or
push
cmpsl
add
movsl
xor
sbb
stos
push
shlb
in
rolb
scas
dec
scas
add
cwtl
aas
adc
addr16
mov
and
mov
adc
in
mov
movsb
sbb
cmp
cli
vmovaps
pop
mov
dec
push
mov
jnp
adc
dec
pop
inc
orb
sub
les
mov
cmp
pop
sub
and
xchg
pop
mov
test
jg
int3
adc
hlt
inc
mov
dec
sub
xor
or
rorl
mov
shrl
pusha
push
push
jbe
shrb
mov
cwtl
mov
popa
scas
enter
push
push
hlt
cmp
loopne
xchg
cmp
or
clc
das
fcomi
lret
sub
pop
ss
mov
outsb
add
or
adc
mov
mov
adc
push
dec
cli
pop
orl
stos
lcall
push
leave
nop
aas
mov
add
mov
jmp
aas
imul
ficompl
test
out
aaa
sbb
push
lods
call
add
fdivl
into
fwait
into
es
mov
scas
hlt
cmp
aam
fcmove
adc
aam
sub
sbbl
bound
imul
ja
mov
rcr
xchg
in
arpl
mov
push
pop
sbb
repnz
mov
cltd
pop
inc
mov
mov
repnz
mov
push
pushw
mov
push
lahf
sub
pop
repnz
xchg
idivl
call
inc
subl
sub
repz
xchg
sub
dec
mov
sbb
bound
negb
or
mov
adc
test
push
inc
scas
mov
aas
mov
mov
xor
and
push
mov
dec
push
cmpsb
inc
fistl
or
push
fistpl
stos
xor
push
push
push
cmpsl
push
stos
sub
stos
ja
mov
rorl
cmp
jle
add
fidivs
jl
sub
dec
cltd
scas
push
lahf
mov
test
adc
int3
sub
xor
inc
ffree
ss
nop
ja
push
rorl
leave
cmp
movsb
lret
jae
subl
push
cs
in
addb
loope
adc
jb
clc
mov
fdivrl
mov
xchg
adc
mov
aaa
adc
adcl
xchg
mov
aam
xlat
and
or
mov
push
clc
and
pop
adc
add
mov
mov
xchg
fidivl
xchg
fdivrl
mov
jle
sbb
out
cmp
mov
xor
cmp
add
stos
and
ljmp
das
stos
mov
scas
aam
xor
lret
ret
rcll
lret
stos
inc
cmp
push
sub
push
sub
mov
dec
lcall
cmp
mov
mov
leave
xor
subb
stos
or
mov
mov
sub
or
aas
and
and
movsb
add
and
jp
adcb
xor
out
jae
rclb
loope
xor
push
and
push
mov
sbb
push
sarl
mov
inc
dec
nop
jmp
fcmovne
xor
xchg
push
mov
xchg
test
mov
js
or
lret
inc
inc
add
scas
hlt
pop
rcll
xor
out
sub
dec
sub
cs
fwait
hlt
cli
cmp
test
aam
sarl
cmp
pusha
jae
jbe
push
jle
dec
push
jge
cmp
movsb
mov
int3
jecxz
xchg
loop
data16
bswap
ds
mov
cmpsb
cmp
bound
lret
aam
sti
xor
int3
dec
outsl
push
add
adc
jnp
repz
or
aas
test
test
test
cs
inc
lods
or
lea
adc
add
shll
ss
outsl
xchg
les
aas
push
ret
add
dec
stos
or
mov
mov
ds
cltd
nop
mov
xor
xor
mov
hlt
imul
adc
adc
or
cmp
mov
push
or
adc
add
ljmp
dec
mov
push
movsb
stos
enter
adc
mov
cmp
adc
mov
test
mov
into
shlb
adc
add
cld
cmp
loopne
xlat
dec
sbb
or
rorl
sub
pop
js
push
test
push
mov
push
xor
sub
xor
lcall
push
jle
aas
xchg
mov
stos
sbb
mov
les
js
ljmp
xor
inc
jns
jno
sbb
pop
inc
mov
push
pop
mov
push
daa
fcmove
and
jp
insb
inc
aas
push
insb
or
add
scas
cmp
ds
dec
pusha
mov
call
pop
add
mov
int3
mov
push
les
mov
jecxz
mov
in
mov
into
ds
test
push
xchg
daa
add
push
push
add
push
aam
xchg
xchg
aas
add
mov
jae
popf
insb
mov
jae
test
dec
cmp
stos
fcmovnu
fcoms
repnz
xlat
shll
jecxz
sub
push
inc
lcall
xchg
sub
mov
in
mov
mov
cmp
aad
int
sahf
and
icebp
sarb
stos
mov
inc
sub
dec
subb
addr16
inc
cwtl
leave
dec
lahf
das
fistps
ja
orb
push
les
orb
loope
lock
mull
cmp
ret
sti
jb
gs
dec
sbb
rcrl
jp
pop
mov
in
fs
or
movsl
or
pop
ds
jae
dec
adc
ss
push
pushf
push
lcall
gs
jo
mov
ds
fwait
xchg
jp
xchg
push
xor
aas
mov
shrb
sbb
ja
rcll
cmp
sub
cmp
jnp
xchg
push
jg
jecxz
mov
adc
xor
xor
fs
out
jmp
aas
xor
push
ret
cmp
orb
xor
js
add
inc
sbb
ds
out
mov
jmp
pushf
jmp
movsl
fildll
loopne
enter
cmpb
or
mov
jmp
loopne
mov
lds
ljmp
inc
inc
or
js
or
push
adc
cmp
or
push
adc
pop
and
repz
adc
dec
and
je
mov
xor
scas
mov
jnp
mov
arpl
sub
push
mov
js
xchg
sbb
mov
push
push
push
nop
test
cmp
aam
pop
repnz
cmp
push
xor
insl
pop
js
push
push
pop
adc
mov
cltd
lds
adc
mov
dec
ret
repnz
test
leave
adc
shl
mov
loop
fnstenvs
dec
insb
into
mov
or
icebp
dec
cld
fidivl
hlt
mov
shrb
nop
cmp
movsl
xchg
xorb
movsb
sahf
xor
aam
push
cmc
add
inc
jno
push
mov
cltd
test
mov
sti
icebp
xor
sbb
add
add
dec
fmuls
mov
imul
dec
ret
push
sub
fcomps
scas
or
mov
xor
stos
sbb
xchg
rorl
ret
mov
mov
inc
cmp
adc
pop
test
sbb
add
xor
negl
popf
xlat
or
cmp
inc
sub
lds
movmskps
pop
xchg
call
test
cmp
test
aam
jmp
mov
loop
ret
or
cmpl
xchg
push
mov
sahf
arpl
insb
loopne
adc
lcall
adc
fisttpl
sub
add
dec
adc
cwtl
call
mov
jo
sub
dec
push
nop
xchg
out
pushf
scas
in
xor
jl
push
insb
jo
das
cmp
cmp
cmp
xchg
clc
je
cmp
cli
mov
ret
xor
fcomps
add
idivb
lock
mov
ja
jp
enter
and
adc
sbb
ljmp
mov
mov
mov
enter
or
js
push
das
test
and
fadds
sub
sub
hlt
arpl
add
adc
nop
push
das
dec
cmpb
cmpsb
sub
aas
mov
inc
test
sub
outsb
mov
test
cltd
lret
xor
push
shrl
fdivp
jmp
dec
in
mov
scas
out
mov
push
aas
fimull
repnz
xor
pusha
stos
jae
add
sbb
and
or
cmp
adcb
and
pop
add
or
orb
out
sarl
orb
or
dec
pop
inc
sbb
loope
ljmp
push
rclb
js
lret
sbb
fcmovne
test
cmp
adc
sub
jl
imull
aas
push
ret
xchg
jmp
cmp
lock
aas
dec
fisttpll
pop
ret
mov
mov
mov
xchg
or
xchg
fs
scas
ljmp
aas
lret
cmp
int3
cmp
fs
mov
mov
test
pop
test
bnd
adc
xor
shl
dec
rcrl
daa
mov
lds
adc
test
bound
add
xlat
lret
sahf
lock
xchg
enter
jle
lods
mov
push
pop
adc
xchg
cmp
sbb
inc
in
fsubrl
int3
popl
mov
push
xchg
filds
mov
push
cmp
pusha
pop
mov
push
add
push
mov
cmp
pop
or
jge
add
adc
mov
inc
adc
test
sub
ds
cwtl
js
fs
leave
jbe
cltd
aad
aaa
test
mov
int3
add
jns
push
push
fisubrl
adc
js
push
movhps
push
test
pop
add
cmp
in
stos
inc
sub
sub
ss
aas
and
cmc
imul
xor
out
mov
aad
pushf
sahf
bound
xor
push
pop
scas
sub
mov
data16
pop
cltd
push
enter
jl
dec
int3
std
push
loop
sbb
pop
scas
mov
or
cmp
mov
lea
xor
popa
add
xor
jns
test
push
mov
cmp
mov
add
aas
test
loop
mov
ljmp
jecxz
sbb
and
adc
push
mov
and
cmp
push
aaa
pop
nop
and
xor
dec
push
insb
dec
adc
adc
xlat
add
incl
stos
test
xor
mov
push
bound
js
push
in
or
out
adc
adc
cmp
cmp
js
test
push
lret
sti
add
aas
add
cld
inc
jno
xor
cmp
loopne
mov
push
dec
pushf
orl
ss
mov
inc
scas
je
mov
push
pop
sub
xchg
shll
mov
mov
cli
xorl
and
clc
push
or
jo
push
add
adc
push
fdivs
aam
ror
mov
lock
rcr
pop
adc
clc
mov
xor
cmp
aas
push
rcr
pop
add
add
insw
dec
lock
ss
fbstp
mov
lods
arpl
mov
js
aad
loope
ret
adc
movsl
mov
pop
lods
jae
and
mov
mov
xor
rcrl
or
push
nop
pop
adc
test
repz
hlt
ss
inc
sarl
push
push
xchg
adc
dec
add
sub
dec
lret
cs
adc
dec
or
mov
push
es
mov
stc
sbb
or
cmp
push
push
jo
dec
cmp
lahf
xor
cmp
mov
push
add
inc
jnp
ss
mov
inc
inc
sti
dec
rol
pop
rcrb
xlat
dec
sbb
test
les
loop
mov
jns
dec
push
fmull
adc
mov
jle
stos
arpl
addb
dec
les
and
inc
adc
cmp
out
ret
pop
js
adc
inc
sub
dec
cmp
cmp
pop
push
dec
pop
pop
into
inc
mov
and
and
mov
sub
sub
daa
mov
mov
in
sbb
inc
jo
ret
dec
adc
mov
stos
in
roll
cmpsb
mov
rorb
adc
test
cwtl
mov
pusha
sub
push
lcall
nop
insl
mov
or
mov
aam
dec
shr
pop
test
mov
pusha
mov
add
push
xor
cs
mov
or
jns
xor
lret
push
cwtl
outsb
and
xor
mov
jge
out
inc
lea
mov
or
ret
xchg
das
mov
scas
pop
addr16
mov
cwtl
mov
jae
xchg
push
sub
jo
push
hlt
push
mov
outsb
lcall
mov
push
push
jmp
ret
dec
clc
mov
sub
stos
sub
movsb
lret
mov
loope
dec
mov
push
cmp
or
mov
clc
pop
or
or
test
fnstenv
cmpb
mov
mov
int3
xor
cmpb
shlb
cltd
dec
mov
cmp
mov
fidivrl
out
scas
jge
das
sahf
clc
xor
cmp
test
js
dec
popa
enter
imul
add
lds
ljmp
ds
lea
dec
mov
call
inc
jmp
sub
loope
pop
loopne
push
adc
adc
pop
decb
xchg
push
cmp
mov
push
ljmp
mov
mov
push
test
xor
in
dec
jg
idivl
mov
xor
xor
sub
and
and
cmp
jmp
sti
rorl
mov
mov
sbb
xchg
mov
push
xor
dec
lds
mov
fs
xchg
push
add
into
nop
les
shll
mov
rclb
pushf
sub
lea
dec
out
fcoml
mov
mov
scas
jb
and
adc
adc
pop
mov
mov
lret
sbb
mov
mov
and
pop
mov
xchg
mov
cmp
adc
adcl
cmp
sbb
or
std
and
cli
pop
push
test
mov
aaa
out
clc
pop
mov
push
int3
rcll
mov
sub
add
add
scas
rolb
inc
pusha
ljmp
sub
adc
sub
pop
mov
idivl
sbb
loope
roll
ds
mov
insb
xchg
pop
mov
das
ret
push
push
test
cld
push
jecxz
jge
sarb
test
or
leave
adc
aam
in
cmp
clc
cld
leave
movsb
in
jmp
and
or
fdivrl
and
push
insl
adc
ds
adc
xchg
cs
add
xor
out
repnz
sub
inc
pop
cmp
insl
push
mov
sub
cmp
in
shrb
jae
xorl
js
xor
and
loop
lret
push
mov
add
dec
rolb
push
sbb
into
leave
mov
adc
ficompl
cli
ds
into
mov
push
fs
jmp
mov
push
mov
or
iret
repz
fildl
fistpl
dec
mov
sbb
xchg
mov
fs
mov
xchg
lods
sahf
sub
cs
shr
add
ss
mov
shlb
out
cmpsb
adc
movsb
cmp
pop
add
lock
sub
mov
sub
int
aaa
mov
adc
adc
pushf
fadd
shll
mov
mov
addr16
lods
je
pusha
mov
add
xlat
mov
sbbb
stos
push
push
clc
pop
add
xor
ss
rcll
add
push
sub
or
out
mov
lock
clc
enter
fcomps
xchg
lods
mov
mov
jg
mov
rorl
jle
xchg
sar
push
out
dec
xor
pop
mov
inc
cmp
xchg
lret
xchg
lcall
rep
cwtl
mov
insl
dec
mov
data16
dec
pushf
imul
and
cmp
cmp
lahf
jecxz
xchg
stos
sub
mov
in
repz
push
aam
aaa
stc
xchg
mov
ss
push
cli
loopne
pop
mov
or
push
push
pop
or
jae
and
add
sub
daa
mov
mov
ja
or
stos
pushf
mov
ja
push
loop
mov
and
xchg
cmp
cwtl
mov
aam
xlat
add
shl
loopne
mov
popf
jmp
adc
call
out
or
mov
fldenv
jle
push
jmp
mov
pop
ficompl
mov
adc
cmp
mov
fwait
xor
push
mov
push
xor
dec
xchg
mov
push
pop
push
pop
mov
mov
lcall
jo
pop
push
mov
dec
lods
leave
cmp
ret
loopne
cmpsl
or
clc
sub
cld
in
pop
js
inc
and
inc
push
lahf
adc
jae
fs
rcrb
mov
inc
orl
mov
and
sbb
xor
or
add
sbb
pop
mov
es
xor
mov
rclb
lcall
pop
mov
adc
inc
arpl
xor
cmp
add
es
std
sub
loopne
into
aaa
test
inc
inc
ret
push
fsubrs
adc
aam
stos
or
jns
and
rolb
xchg
cmp
adcl
mov
cmp
cld
sub
and
xor
sbb
lret
lock
cmp
cmp
mov
nop
lret
js
shrb
cmpsb
xchg
and
pusha
movsl
js
pop
loop
xchg
mov
icebp
jmp
sub
mov
xor
inc
adc
int3
or
jbe
push
lock
mov
cwtl
leave
mov
cmp
lock
and
push
push
jo
mov
or
mov
mov
rorb
in
gs
popa
mov
mov
shll
cmp
add
sub
sbb
aas
hlt
lret
push
push
test
xor
aas
insb
in
xor
inc
xchg
mov
xchg
stos
adcb
cmp
adc
adc
pop
je
pop
prefetchwt1
jge
pop
sbb
loopne
jle
jae
dec
out
inc
cs
inc
std
ljmp
int3
push
ss
sub
mov
push
dec
rcll
adc
push
xchg
and
mov
xchg
leave
inc
clc
test
add
pop
cmpxchg
adc
mov
daa
sub
mov
mov
fstpl
nop
jo
mov
sub
rcll
cmp
cmpsl
or
testl
clc
adc
jmp
cli
xchg
pop
sbb
in
ljmp
sub
lcall
lods
js
xor
mov
xor
clc
xor
mov
ret
sti
hlt
repz
stos
mov
and
jo
add
pop
mov
dec
je
push
pop
pop
cmp
bound
sbb
mov
mov
loopne
xchg
dec
adc
mov
pusha
and
clc
push
fwait
push
mov
lahf
aas
jle
lret
xor
movsb
xchg
test
sub
bound
lock
ja
add
jnp
lods
dec
push
loope
mov
into
mov
and
fidivs
dec
cwtl
lea
push
push
test
incl
fbld
xor
mov
fs
testb
or
jb
mov
sbb
lcall
into
rclb
sarb
mov
insb
cwtl
adc
leave
mov
mov
dec
outsl
mov
add
xchg
enter
sbb
fisttpll
push
add
xchg
jb
sub
push
inc
dec
sub
dec
scas
or
scas
mov
and
aam
icebp
cmp
sarl
mov
push
pop
adc
insl
les
ror
es
cmp
ds
aam
pop
fmull
fldt
in
test
movb
cmp
test
int3
xlat
jno
add
loop
mov
filds
test
or
cmp
add
les
stc
test
aad
iret
sub
mov
adc
test
adc
xchg
in
or
xchg
jno
sbb
lods
aaa
adc
leave
and
add
loopne
mov
push
push
loop
xchg
mov
into
jg
add
pop
xchg
push
sub
cmp
jp
sbb
out
adc
push
inc
or
adc
pop
mov
cmp
cmp
call
adc
sarl
ret
jmp
lret
jae
rorl
shr
cli
sub
divb
loopne
mov
mov
pop
cmp
push
clc
das
pop
cmp
daa
cmp
lret
mov
cmp
enter
es
int3
and
mov
inc
mov
xchg
push
mov
add
xor
xchg
repnz
push
cmpsb
outsb
mov
jb
es
cmp
subl
mov
xchg
push
cmp
insl
xorb
shlb
cmp
cmpsl
insb
sahf
fsubs
aad
cmp
mov
inc
push
int3
dec
jns
pop
ss
cmp
and
push
xor
jo
out
dec
pop
cmpsl
clc
cmp
mov
cld
hlt
mov
pop
clc
enter
repz
mov
add
sti
aas
mul
rorb
cli
rcll
mov
mov
add
and
movsb
test
rclb
push
mov
std
cmpsl
jl
dec
push
mov
push
loopne
push
inc
pop
cmpb
push
aas
adc
sbb
push
push
jbe
jg
push
mov
orb
mov
orb
cmc
cmp
movsb
test
dec
flds
mov
aas
push
mov
dec
mov
inc
ficompl
inc
add
js
and
mov
stos
pusha
out
jb
int
test
cmp
fisubl
test
mov
cmp
cli
and
jp
cmpsl
imul
adc
jge
cmp
mov
inc
or
jle
int3
aam
dec
sarl
test
pop
mov
mov
dec
dec
dec
mov
mov
mov
adcb
add
xor
dec
dec
xchg
mov
aas
scas
pop
mov
lock
adcl
adc
loopne
mov
pop
sbb
pop
cli
inc
fimull
push
js
inc
mov
jg
cli
sub
xor
mov
aas
or
lcall
inc
sti
pop
nop
push
pop
xchg
js
fisttpll
lods
mov
mov
fiaddl
fisttps
mov
hlt
xor
mov
cmp
push
pop
pop
hlt
jle
pop
stos
dec
jle
and
inc
sub
outsb
es
cmp
je
push
ror
aam
or
adc
dec
push
js
mov
xor
stos
dec
mov
cmpl
or
mov
sahf
adc
mov
rcrb
aaa
ret
mov
sahf
dec
in
outsb
mov
jg
inc
push
mov
lcall
mov
lret
push
cmp
cmp
pop
pop
je
bound
mov
nop
push
shlb
int3
jb
incb
pushf
sbb
cmpsl
mov
xor
mov
jbe
jnp
subb
test
adc
jecxz
mov
shl
dec
sbb
adcl
push
add
in
cli
inc
mov
shrl
pop
cmpsb
fcompl
stos
mov
es
pop
iret
or
sarb
pusha
sbb
je
roll
xor
test
into
cs
xor
inc
clc
fdivs
mov
mov
int3
cmpsl
mov
out
mov
clc
mov
add
adc
inc
and
pop
xor
mov
adc
push
sbb
add
jbe,pt
pop
jl
dec
xchg
add
mov
push
pop
inc
nop
decb
sub
test
dec
test
pushf
shr
sub
push
push
jb
cmp
sub
inc
repz
dec
jbe
ljmp
fists
adc
loop
add
add
xor
scas
std
jmp
xor
ds
add
mov
cmp
test
lcall
cmpsb
push
mov
jg
in
lret
add
inc
push
mov
jecxz
or
sbb
mov
data16
into
adc
and
add
push
aaa
sarb
fsubrl
es
push
pop
adc
sub
xor
cmp
xchg
pop
out
fadd
cmp
sub
loopne
iret
mov
jecxz
subb
out
cmpsb
mov
fsubrl
push
aas
mov
adc
loop
mov
cmp
xor
mov
loop
or
cli
aad
out
xchg
or
add
cmp
loopne
out
test
jg
xor
mov
pop
adcb
cli
pop
sub
mov
add
xchg
ljmp
dec
fwait
mov
mov
addb
sti
das
pop
loop
xchg
or
push
pop
adc
add
jne
aaa
cmpsb
push
adc
mov
lret
mov
fcoms
push
jae
dec
fcoml
enter
jg
or
enter
out
dec
out
ret
mov
fisttpl
fisubrs
xor
lock
clc
fwait
dec
int3
sahf
int
push
rcr
gs
nop
outsb
push
out
jae
out
inc
pop
fisttpl
mov
iret
int3
dec
rclb
or
test
icebp
into
ljmp
hlt
sbbl
sub
add
or
test
clc
mov
ret
cmp
ret
sub
fldt
sbb
mov
mov
ror
sbb
pop
cmp
loop
lcall
mov
add
pop
shlb
mov
ret
push
add
xlat
cld
or
mov
mov
loop
icebp
test
inc
mov
xchg
mov
cltd
fsubrs
adc
add
adc
mov
cmpsb
js
lods
scas
xchg
hlt
clc
fs
cmp
mov
mov
adc
jno
fs
in
xor
push
and
push
jae
inc
sub
jle
cld
or
cmp
fcmovne
jb
adc
int3
cmp
pop
pop
aas
jo
lret
roll
js
int
mov
shl
sbb
js
cltd
lods
jecxz
add
sti
ret
enter
mov
dec
lock
pushf
sbb
pusha
xor
sub
cmp
jne
mov
and
aaa
cmp
push
mov
add
sbb
jae
rol
arpl
add
inc
sarb
icebp
push
mov
pusha
ret
cmpsl
repz
sbb
fdivl
aaa
push
aam
cmp
hlt
pop
and
lahf
adc
add
ljmp
adc
sbb
sbb
fwait
aad
jecxz
xlat
sub
sub
add
ds
cmp
xor
adc
push
mov
or
fdivl
mov
mov
adc
push
jb
subl
cmp
xor
inc
aas
push
call
xlat
sbb
and
out
pop
bound
insb
push
mov
js
fdivp
cmp
lahf
mov
outsb
inc
clc
jle
sub
lea
popa
pop
push
nop
aas
cwtl
mov
stc
push
add
xlat
enter
inc
push
jle
insl
or
dec
mov
jge
filds
aas
or
dec
xlat
push
movsl
aas
out
mov
lret
rcl
push
mov
sbb
icebp
cmp
add
mov
cwtl
lock
ret
daa
jno
int3
aaa
pop
or
insb
cmp
cmp
aaa
add
or
mov
mov
inc
xchg
mov
or
push
imul
or
popf
data16
aaa
mov
divl
mov
jp
cmpsl
jle
js
fldt
pop
mov
pop
push
push
outsl
pop
leave
inc
pop
call
shll
sti
push
test
jle
test
xchg
pop
js
mov
in
and
cmpsl
das
les
enter
stos
push
idivb
cld
repnz
lock
idivl
lock
push
mov
xor
js
dec
lret
insl
clc
nop
sar
dec
aas
ljmp
push
insb
adc
fdiv
inc
adc
push
xor
cwtl
cmpsl
dec
push
in
cmp
pop
mov
sar
mov
sbb
mov
xchg
push
mov
cmp
mov
inc
or
mov
fwait
jae
xchg
push
inc
xchg
add
popf
inc
and
call
or
js
js
xchg
testl
ficoms
out
ss
test
lcall
lock
inc
push
clc
inc
push
add
js
or
add
cmpsl
imul
enter
js
xchg
repnz
push
dec
stc
in
cmp
incb
dec
sub
ret
or
int
mov
and
lods
jg
sbb
xor
mov
push
enter
andb
push
jb
xchg
or
mov
das
stos
xor
cmp
mov
dec
mov
inc
dec
out
pop
subb
movsl
mov
mov
cmp
mov
into
pushf
mov
jl
rcrl
aas
xchg
pop
loop
mov
cmp
jl
sub
inc
fidivl
loop
push
idivl
pop
fmull
loopne
jae
jae
call
sahf
xchg
leave
push
xchg
and
mov
out
inc
mov
pop
les
aam
sub
dec
cmp
test
xorb
ret
shrl
mov
ljmp
sub
mov
ljmp
dec
ljmp
inc
add
xlat
or
dec
inc
jo
jmp
cmp
fdivs
cmp
leave
shlb
stos
jno
cmp
pop
faddl
xor
sub
ds
fadds
ljmp
call
mov
adc
sub
loope
inc
loopne
sbb
or
push
cld
shll
add
xchg
sub
cmp
xchg
dec
adc
inc
sub
dec
movsl
jecxz
add
cmp
mov
sub
outsl
jp
int3
sbb
mov
cmp
and
stos
ror
test
fsub
pop
sarb
enter
mov
mov
mov
sbbb
push
adc
fcomi
es
mov
mov
jg
mov
data16
xchg
mov
data16
lods
mov
jl
add
notl
out
fcmovu
pop
divb
push
imul
jnp
lea
stos
mov
sbb
adc
out
decl
push
icebp
inc
sub
add
mov
pop
mov
dec
nop
call
ja
test
cmp
stos
adc
divb
lret
add
sub
pop
test
mov
stc
cli
and
stos
or
mov
test
psrad
adc
cmp
sub
dec
mov
push
add
or
or
out
push
xlat
pop
cmp
pusha
xlat
stos
lret
les
xchg
mov
push
lcall
or
mov
ret
sbb
addl
sub
xor
int3
cs
cmp
enter
push
sbb
popa
cmp
adc
in
mov
or
lret
xor
cmpb
cmp
pop
das
sbb
sub
xor
dec
stos
cmp
push
test
mov
mov
sti
cmp
lret
loopne
shll
aad
fsubl
push
cld
stos
mov
pop
xchg
push
push
in
jl
fstpt
mov
je
inc
dec
lcall
xor
ret
nop
cmpsl
xchg
lret
mov
enter
lret
or
sub
test
les
in
ds
divb
cmp
mov
insb
sub
jecxz
push
pop
push
ss
dec
pop
jmp
adc
push
rorl
into
jo
or
nop
cmp
sub
cli
or
sbb
sbbl
or
sbb
enter
mov
out
sbb
movsb
test
cmpsl
add
std
dec
out
in
ror
mov
leave
mov
popf
repnz
mov
jl
repnz
imul
dec
mov
mov
mov
sbb
sub
ds
push
cmpsb
mov
pmovmskb
iret
repz
repnz
rolb
lea
xchg
dec
push
pusha
dec
inc
cld
inc
rorb
lahf
ficompl
enter
push
cmp
pop
mov
adc
lret
dec
push
pop
shl
ds
jle
mov
addr16
out
sub
sbb
loopne
xchg
gs
pop
cwtl
mov
cltd
mov
jne
incl
clc
rorb
scas
push
mov
mov
push
push
mov
fs
fucom
cmp
shlb
mov
ret
dec
jae
add
xor
out
out
lods
cmp
inc
hlt
cmp
repnz
stc
dec
sub
push
xor
mov
jo
nop
xchg
sbb
mov
adc
cmp
int
sub
mov
mov
jl
push
ja
andb
dec
xor
add
and
data16
xor
jno
pop
cmp
cmp
fcoml
int3
cmp
dec
ds
push
add
imul
scas
adcl
aam
xor
xchg
cmp
push
clc
loopne
mov
shl
dec
pop
jo
cmpb
dec
insb
inc
xor
mov
adc
adc
inc
add
dec
mov
sbbb
rclb
mov
mov
out
cmp
jbe
ja
add
popa
mov
clc
cmp
iret
stc
jnp
jecxz
loop
inc
cmp
add
rclb
les
pop
xchg
push
pop
pushf
lret
out
push
fbld
pusha
pop
cmpsb
fdivs
pop
leave
mov
mov
in
in
adc
and
fstpt
clc
inc
dec
jmp
int3
jne
and
scas
push
in
in
call
sub
icebp
push
js
sbb
mov
cmc
leave
mov
jmp
cmp
inc
sbb
and
sub
push
mov
hlt
cmp
les
nop
clc
lret
add
stc
test
inc
or
xor
dec
xor
push
push
out
push
adc
orb
xor
mov
sub
xchg
movl
lahf
rcrl
rolw
les
std
paddsb
pop
pop
cli
incb
outsl
fwait
mov
mov
mov
xchg
dec
mov
inc
rcl
inc
cmp
scas
push
or
xor
enter
lock
pop
dec
test
cmp
jg
adc
push
cmpsb
lods
mov
ret
pusha
mov
xchg
add
push
xlat
scas
inc
xlat
jae
sub
mov
inc
leave
test
je
push
test
mov
xchg
faddl
mov
lds
push
xor
dec
mov
fdivrs
js
add
rclb
cli
clc
notb
add
rcrl
and
sub
cmp
xor
negl
insl
or
cmp
push
jb
adc
add
scas
out
dec
cmp
fiaddl
cmp
lods
jecxz
sub
cmp
mov
scas
push
cmpsb
stos
sub
xlat
clc
jmp
out
mov
cmp
cmp
test
pusha
mov
outsb
add
jg
sub
mov
iret
clc
inc
cmp
cmc
loop
lods
add
scas
ret
out
fcoms
fistpl
mov
js
imul
mov
stos
mov
and
lcall
mov
or
push
aaa
xchg
xor
movsb
push
sub
sub
push
xor
jp
mov
cmpsl
je
jne
iret
add
mov
inc
mov
cwtl
shlb
push
and
es
sub
mov
adcl
add
ret
sbb
inc
in
ljmp
stos
mov
lods
sub
lea
xor
iret
scas
jecxz
mov
jbe
adc
hlt
xor
jae
call
clc
jge
add
repnz
and
loop
aam
jo
movsb
loopne
mov
push
push
cmpsl
jae
fdivrs
sbb
ret
cli
loop
repz
sarl
mov
pop
adc
sarl
jecxz
mov
cmp
adc
xchg
int3
mov
in
mov
sbb
adc
pop
lret
test
pop
daa
jmp
sub
pop
negl
aad
test
jno
push
mov
shlb
fadds
ljmp
sbb
and
jle
movsb
sub
fwait
sub
or
push
jne
inc
inc
cld
test
int
mov
mov
mov
mov
iret
sbb
mov
cmpsl
ret
ja
sbb
loopne
mov
sarl
inc
lret
dec
or
scas
js
and
fmull
or
out
xchg
push
das
sub
adc
add
jno
adc
jg
cmp
push
sbb
adc
sbb
lods
addb
sbb
add
aam
xchg
sbb
pop
pop
ja
ror
or
xor
repnz
rclb
fcmovne
outsb
mov
and
push
repz
fbstp
mov
pushf
test
sub
dec
mov
jb
dec
mov
push
js
sub
or
cmp
cltd
test
test
xchg
mov
xor
cmp
daa
sub
sbb
xor
ds
pop
add
ds
mov
loopne
xchg
mov
xlat
test
cmp
mov
movsw
fadds
js
lods
cmp
pop
xchg
inc
int3
and
pushl
loop
pop
addb
inc
mov
or
sbb
cmp
loopne
insb
out
cmp
aam
clc
adc
xchg
mov
dec
sbb
mov
sbb
lods
mov
push
fisubs
lret
mov
or
jo
add
in
jmp
dec
stos
sub
mov
adc
adc
xchg
lods
ss
in
sbb
adc
push
cmp
fdivrs
mov
push
sarl
mov
mov
ljmp
dec
pop
aam
mov
jle
lret
add
test
cmpl
sub
and
pop
out
pop
mov
xchg
mov
cmp
xor
mov
mov
inc
mov
in
mov
push
xchg
push
adc
mov
test
push
jle
add
xor
mov
and
dec
sub
push
push
pop
jae
jmp
nop
or
mov
xlat
inc
popa
loopne
xchg
ret
clc
cs
sub
adc
in
rol
xor
movsl
xchg
mov
data16
sbb
or
ljmp
lods
push
push
lcall
add
sub
test
js
out
mov
xchg
lock
or
push
adc
lret
pop
ja
push
jo
sbb
push
out
pop
shlb
out
pop
test
xor
fidivrl
inc
mov
into
ret
and
mov
repz
insb
shlb
shll
aad
add
ss
and
fildl
nopl
mov
xor
mov
mov
scas
clc
hlt
mov
cmp
test
pusha
scas
stc
pop
jno
inc
sub
cmp
inc
clc
fmull
repnz
nop
cmp
cmp
xor
jo
aas
adcb
cmpsl
pop
clc
push
ss
mov
xor
lock
stc
out
sti
mov
dec
les
sbb
jmp
or
sbb
mov
push
test
insb
lcall
push
mov
push
mov
cmc
mov
daa
dec
nop
fwait
shrl
mov
out
mov
fcoms
lods
inc
jmp
popa
pushf
xor
and
dec
outsl
dec
pop
mov
mov
mov
inc
pusha
cwtl
xchg
add
and
cmp
js
sub
mov
or
sbb
lock
and
pusha
scas
jg
xlat
push
shl
and
movsl
sub
fcomps
lahf
repz
cli
shrb
pushf
jmp
and
je
shl
cmp
mov
push
sbb
cmp
adc
add
push
jmp
push
mov
stos
insb
pop
or
clc
pop
push
and
div
push
sti
mov
xor
cwtl
mov
lcall
leave
dec
mov
jmp
stos
lock
stc
rorb
addb
ljmp
pop
mov
mov
adc
cli
outsl
inc
clc
xor
lret
sub
ds
test
add
nop
aam
into
aad
les
out
inc
mov
jge
adc
mov
stos
sbb
pop
lods
jge
sbb
test
adc
cs
add
inc
sub
loop
out
dec
jo
jge
enter
mov
lods
xlat
shlb
fmuls
lods
test
sbb
lds
leave
sbb
cmp
dec
cli
out
adc
shr
lock
cli
pushf
insb
pop
rorl
mov
adc
add
xor
cs
imul
pop
outsb
aaa
pop
rcrb
test
out
pop
push
push
hlt
adc
pop
into
rcl
fucom
ss
and
pusha
inc
cmpsl
cmp
xchg
loope
jl
mov
out
xor
mov
cwtl
out
cmp
loope
out
adc
dec
lea
mov
xchg
sub
or
xor
mov
cmp
sub
cli
pop
jmp
sub
sub
add
xor
mov
sub
pop
addl
adc
sub
pcmpeqb
out
push
call
add
sbb
rclb
ds
xchg
fsubl
pop
sub
loopne
adc
push
or
cmp
and
scas
push
mov
push
push
cmp
sbb
outsb
js
mov
fcoml
hlt
int
repz
or
sbb
repz
sbbl
xadd
sti
loopne
aad
jmp
psraw
pop
cmpsb
aas
or
js
xor
or
mov
lock
push
adcl
add
cmp
pop
mov
fldenv
mov
out
addr16
ds
negl
pop
es
mov
inc
clc
out
dec
enter
test
xlat
js
adc
inc
adc
mov
rcrl
cmp
ljmp
test
fidivrs
push
mov
pop
push
pop
cmpsl
pop
rcll
and
mov
shlb
cmp
pop
and
int
jbe
aad
stc
rol
out
mov
in
push
push
mov
testl
sbb
adc
cmp
adc
add
leave
pop
sbb
stos
adc
xchg
rclb
movsl
adc
push
ljmp
ds
cmp
lret
mov
inc
cli
aam
jp
add
xor
test
lret
fists
mov
cs
mov
mov
es
adc
rol
xchg
icebp
or
jae
adc
sbb
cli
sub
in
rcrb
pop
sbb
or
xchg
hlt
sbb
incl
jmp
push
pop
or
nop
xchg
lret
lcall
mov
fistpl
fiadds
lret
xor
shll
loopne
cs
push
push
add
sub
push
shrl
push
lret
fsubrp
lea
je
cli
inc
push
adc
test
xchg
push
or
cmp
in
xchg
pop
xor
loop
mov
cmp
push
xchg
cmp
and
cmp
mov
cli
sub
push
stos
xor
and
and
lods
or
stos
dec
xor
fimull
out
push
cmp
add
pushf
sub
lods
push
mov
cli
out
mov
out
dec
sbb
pinsrw
lcall
imul
or
jmp
inc
pushf
adc
roll
adc
jb
in
scas
inc
or
cli
in
push
xchg
adc
adc
fsts
cmpsb
dec
mov
aaa
mov
sub
js
fnstcw
add
cmp
cmp
add
stos
and
flds
mov
adc
push
dec
stc
fdivr
mov
mov
mov
cld
mov
into
xchg
mov
sub
xor
testb
sbb
pop
adc
mov
ss
js
cmc
mov
jle
test
pop
xlat
lods
call
ret
or
dec
push
xchg
repnz
call
cli
sub
xor
je
leave
or
push
pusha
or
push
out
add
cmp
mov
lret
mov
loopne
jecxz
mov
mov
inc
or
aaa
or
push
cmp
les
adc
adc
in
sub
loope
sub
push
mov
push
ss
je
sbb
cmpsl
fmull
loopne
enter
or
faddp
mov
inc
fiadds
cmp
fdivl
add
push
pop
les
and
adc
add
add
fsubl
in
xor
xchg
rcll
mov
jno
je
lret
adc
xchg
mov
adc
sub
cmp
and
mov
mov
inc
push
rcrb
mov
jl
ds
out
pusha
fnsave
ja
fldt
add
cli
jle
rcrl
enter
mov
dec
or
xchg
dec
pop
mov
loopne
addb
clc
ret
js
mov
mov
mov
xchg
cmp
fidivs
rcrb
lahf
sti
rcll
lock
or
xor
push
push
pusha
add
repnz
mov
lock
sub
adc
cmpsb
push
int3
xchg
out
lds
outsb
std
cmp
lds
cmpsb
into
js
insb
pushf
mov
sarl
ljmp
mov
and
into
sub
scas
ljmp
xorb
inc
dec
cmp
mov
roll
xor
push
shll
or
fadds
fcoml
es
ret
pop
or
jle
cmp
sub
jg
xlat
cmp
loopne
cmp
or
in
mov
mov
fcoml
ret
shl
inc
nop
add
jle
ja
movl
or
imul
xor
adc
cmp
repz
sub
shr
and
lea
inc
cmp
lock
sbb
imulb
sub
jmp
jecxz
sub
aas
loopne
iret
je
push
rcl
sbb
iret
push
test
iret
xlat
mov
sbb
inc
xor
jb
push
addl
lods
sub
adc
bound
xchg
call
push
push
js
pop
movsl
js
fwait
lock
xchg
inc
xor
call
dec
andb
repz
jmp
pusha
clc
mov
push
mov
push
je
mov
adc
push
call
sbb
or
sahf
add
cmp
shll
xor
xchg
push
sbb
xchg
sbb
insb
aas
cli
shrb
sub
cvtpi2ps
cmp
dec
fsub
ret
or
cmp
lock
or
in
pop
cli
dec
xor
int3
push
icebp
mov
ficoms
adc
xor
mov
push
sbb
clc
shr
repz
out
clc
pusha
jecxz
loopne
inc
cwtl
cmp
mov
sub
adc
mov
pop
push
adcb
ljmp
or
inc
imul
sbb
dec
mov
aas
sbb
pop
pop
or
or
pushf
push
std
adc
mov
rcll
jmp
jae
xor
and
pop
mov
jecxz
sbb
add
add
and
push
loopne
jl
call
xor
pop
call
inc
push
push
int3
sub
sti
add
les
adc
cmp
test
cs
rcl
cmp
mov
loopne
cmp
jecxz
mov
lea
jo
das
shl
in
stos
or
aad
clc
cs
cli
jnp
or
add
sub
mov
dec
adc
in
xchg
pop
addr16
jmp
sub
mov
inc
dec
fmuls
mov
in
or
repz
cmp
loope
sbb
jge
aas
sar
loopne
or
cli
push
dec
mov
sub
sbb
add
shll
sarb
insb
int
out
sub
cmp
inc
std
cmp
xchg
or
popl
mov
adc
ds
lcall
or
sbb
mov
hlt
push
out
xchg
jecxz
push
out
scas
xor
repz
pop
sub
inc
push
movsl
inc
push
cmp
dec
sbb
cmp
xchg
rsm
adc
adc
push
dec
notb
call
xor
mov
xor
cmp
dec
mov
test
add
xor
mov
jno
out
cld
cmp
push
rorl
push
mov
andl
xor
aam
mulb
ljmp
add
pop
test
lods
push
notl
ficomps
inc
sbb
pop
mov
cs
mov
sahf
ljmp
in
push
push
ss
lcall
add
js
cmp
mov
jecxz
sub
jl
push
out
push
mov
out
and
js
adc
jl
pop
loope
or
sub
outsl
push
adc
rorl
sbb
xor
adcl
out
pop
ret
adc
cmp
dec
mov
push
fwait
mov
shl
clc
push
dec
idivl
sahf
sbbl
add
dec
cmp
scas
sub
xor
mov
rolb
into
xchg
dec
add
daa
xlat
add
rdpmc
in
jb
add
sbb
xor
fcmovnbe
out
fisubrl
fcmove
sbb
nop
ficoms
int
clc
loop
fsub
mov
or
xor
or
push
push
rcrb
push
das
mov
out
mov
les
cmp
cld
add
xor
or
movsl
cmp
aam
mov
ss
mov
pop
repnz
mov
sti
sbb
adc
clc
mov
sbb
sub
sbb
lea
in
in
pushf
mov
push
cmp
out
into
mov
in
icebp
cmp
cld
inc
insb
push
out
pushf
ss
ret
ja
movsl
or
adc
sbb
dec
mov
push
push
adc
add
ds
xor
mov
xorl
aaa
xchg
lea
add
or
or
lret
in
adc
movsl
sahf
xor
xchg
adc
cmp
shrl
add
ficoms
idivl
loope
or
fs
jecxz
and
cmp
stc
sub
or
xorl
mov
mov
jle
push
ss
and
push
push
adc
pop
sbb
adc
adc
push
lea
push
sbb
xlat
cld
sbb
jmp
adc
add
ds
loopne
jns
sub
pop
sarb
movsb
mull
popl
and
and
sahf
push
pop
cld
mov
sti
test
js
test
dec
out
jl
sub
stc
sub
movsb
add
ja
test
stc
ret
push
cmp
jae
xchg
xchg
xor
stos
sub
mov
cmp
inc
push
loopne
and
xor
sbb
cmc
add
pushf
cmpsb
inc
aas
or
adc
mov
out
cmp
movsl
cwtl
inc
scas
pushf
sub
xor
push
add
add
mov
ds
pusha
adc
xor
add
cmpsl
cmovs
je
push
ret
stos
push
inc
fidivs
jmp
or
inc
xor
cmpl
sub
out
shl
mov
jecxz
and
adc
sbb
mov
xor
cmp
sbbb
lds
xor
sbb
add
sbb
stos
xor
cmp
aam
mov
mov
mov
mov
xchg
mov
hlt
push
mov
or
sahf
mov
in
test
push
adc
insl
sub
data16
sbb
pop
mov
rclb
adc
lea
adc
cmc
in
xchg
loopne
call
pop
or
psubb
into
add
pop
push
mov
mov
cmp
push
mov
add
adc
mov
pusha
push
sub
or
pusha
sti
pop
mov
loope
mov
pop
xor
in
outsb
nop
pop
sbb
cmp
mov
jecxz
out
sbb
sub
jns
cmp
jle
scas
xor
sub
jle
sub
scas
cmpb
jae
mov
jle
jo
push
ljmp
int3
cmpsb
out
inc
je
push
scas
adc
test
es
sub
mov
gs
cmp
xchg
dec
xor
cmp
rsm
shlb
ret
fs
enter
sbb
aas
lret
iret
inc
mov
add
or
cmp
cwtl
mov
sbb
add
test
int
hlt
inc
sbb
loopne
xlat
sub
cmp
xor
int3
rcrb
out
mov
les
pop
adc
in
stos
cmp
orb
out
push
lea
ret
xorl
enter
cmp
ffreep
cli
or
lea
jno
adc
push
orl
pop
out
outsb
sub
call
fildll
and
pop
addr16
adcl
and
mov
mov
mov
push
cli
sbb
dec
ret
nop
lret
ror
mov
mov
push
dec
dec
lods
xor
jmp
rcrl
sub
jmp
sbb
pop
cmp
or
mov
cmpsb
or
js
sbb
bound
sub
decb
rcl
clc
add
xor
js
xlat
sbb
add
sub
ja
jecxz
or
lods
push
jecxz
out
pop
mov
repnz
sub
push
pusha
xchg
testl
jno
cmp
ja
enter
sbb
jge
bndstx
sbb
divb
push
mov
dec
scas
or
sbb
jl
cmpl
add
sub
and
ljmp
mov
rcr
pop
dec
push
lock
sub
cmp
jmp
inc
sbb
adc
mov
or
xor
jo
pop
cmp
mov
dec
xchg
sahf
into
inc
push
cmp
push
and
mov
cld
jmp
fucomi
cmp
xchg
clc
xchg
loope
in
pop
or
dec
mov
pop
int
jecxz
add
ret
jb
xchg
and
stos
fdivr
shll
push
and
push
lret
jb
lds
sbb
push
adc
inc
nop
or
xor
shll
nop
xor
fdivrl
inc
and
mov
jg
or
fcompl
sbb
mov
ljmp
push
lret
xor
sbb
mov
sbb
aaa
jae
stc
dec
mov
je
icebp
adc
xor
imul
sbb
cwtl
hlt
sub
cmc
loope
or
mov
push
test
movsb
js
inc
ds
mov
stos
in
mov
loope
mov
jmp
xor
jae
inc
cmpsb
xor
dec
jno
pop
sbb
and
ds
jbe
pop
sbb
scas
push
inc
aad
ret
mov
xor
mov
cli
insl
or
cs
push
adc
call
nop
and
ss
clc
movsb
es
jecxz
push
ficoms
fisttps
xorl
and
data16
lret
xchg
in
es
vmwrite
sar
inc
cld
add
es
cmp
jl
or
ljmp
out
fdivp
mov
xchg
sbb
cmp
mov
mov
fmull
sbbb
inc
cmpsb
nop
push
orl
insb
clc
xchg
or
sbb
out
decb
rolb
mov
sbb
repz
pushf
fwait
enter
stc
sarb
add
lods
mov
mov
fcoml
mov
push
inc
outsb
inc
sbb
out
out
ss
shll
icebp
mov
jl
cmp
testb
filds
pushf
jle
aad
loopne
add
mov
cmp
jle
repz
aaa
mov
lds
pushf
or
mov
pop
std
stos
in
push
fistpll
testb
rcrl
js
adc
into
scas
stos
int3
lds
pushf
push
ljmp
push
push
jle
call
lcall
mov
pop
enter
push
cmp
pop
cmc
cli
mov
sub
mov
xchg
out
mov
add
pop
lahf
call
mov
add
jecxz
adc
inc
push
push
clc
fs
hlt
mov
push
xchg
ja
adc
adc
pop
call
aas
int3
pushf
mov
add
xlat
repnz
xchg
cmp
hlt
out
cmp
pushf
push
js
dec
sbb
push
push
mov
sbb
pushf
mov
xchg
add
out
mov
jg
sub
dec
push
or
xchg
shlb
cli
dec
lds
and
or
lea
in
add
clc
push
dec
ss
pop
imul
sar
or
cmp
or
pop
shr
hlt
aam
sahf
push
push
test
inc
mov
insb
pushf
mov
lock
sbb
loop
test
push
cmp
sub
pop
or
ljmp
testb
divl
sarl
and
adc
sbb
fdivrl
pop
add
mov
add
mov
pop
add
data16
adc
mov
stos
adc
mov
xor
aam
and
and
ret
push
rcll
mov
fs
push
mov
adc
pop
scas
push
imul
cmp
mov
sub
adc
test
pop
addr16
lock
sbb
xchg
jo
dec
out
cld
rclb
xlat
cli
adc
push
sbb
pop
repz
jmp
ret
xchg
sbb
dec
mov
dec
sub
mov
sbb
cmc
xor
xlat
and
push
cmp
push
jg
mov
pavgb
pop
cwtl
xor
in
aam
xchg
pop
iret
out
pushf
add
test
inc
dec
push
cmp
mov
mov
push
pop
xor
cld
xchg
iret
xchg
sbb
dec
clc
dec
cli
add
out
xchg
call
mov
inc
jns
push
fistps
fmull
add
aas
mov
loop
xchg
cmpb
cmp
lea
idiv
lcall
adc
aaa
adc
push
rcll
add
rolb
add
add
cmp
stos
and
dec
push
xor
repnz
out
mov
sub
clc
or
adc
outsb
dec
push
adc
scas
mov
push
pushf
sbb
mov
push
ficomps
ljmp
movsb
cmp
or
shrl
mov
enter
inc
sbb
adc
or
xchg
out
mov
push
mov
into
shll
ret
mov
mov
mov
into
or
jge
cmp
sbb
stos
inc
push
push
dec
imul
ret
movsb
inc
rcr
lock
cmpsl
lea
mov
movsb
mov
dec
fsubrp
aam
ja
arpl
sub
or
or
add
or
and
ljmp
add
cmp
xor
pop
mov
dec
xchg
jl
pop
test
mov
xchg
lods
mov
or
and
pop
or
inc
andl
push
dec
adc
push
test
or
adc
and
pop
sbb
jl
xchg
repnz
ficoms
jge
pop
mov
cmp
xchg
push
stos
sbb
mov
call
icebp
cmp
in
and
fsubs
cltd
call
adc
sbb
pusha
mov
aaa
push
js
lods
xchg
mov
xchg
push
pusha
ficoms
out
cli
ret
xor
inc
fsubl
pinsrw
fwait
out
mov
cmpsb
push
pop
loop
inc
mov
lods
dec
out
push
les
rcll
ret
clc
inc
push
push
cmp
subl
push
pop
sbb
jle
push
and
and
dec
or
loop
hlt
cmp
jae
icebp
sub
add
ret
push
cmp
call
sbb
mov
sub
xor
sub
dec
nop
pop
mov
xchg
sbb
mov
mov
mov
fnstsw
imull
mov
int3
sbb
stos
adc
paddusb
or
das
inc
scas
loop
mov
lcall
movsl
aaa
cwtl
sbb
lret
sub
cmp
and
insb
aam
xchg
adc
imulb
faddl
jne
aaa
out
and
adc
sub
das
adc
sti
dec
ss
data16
push
or
out
in
push
out
or
or
cmp
and
mov
push
xor
sbb
out
es
cmp
xchg
sbb
xchg
cli
arpl
aaa
int3
inc
andl
pop
push
xor
ret
inc
in
jp
sub
jecxz
cmp
sub
push
mov
sub
adc
shlb
lea
loopne
mov
cs
js
add
subl
dec
push
push
add
ja
adc
in
cmp
int
fcmovnb
mov
or
data16
testb
adc
pop
jmp
and
mov
xor
testl
fmull
out
mov
xchg
sbb
cmp
out
loopne
or
cli
test
ret
ret
push
xchg
or
adc
inc
je,pt
xor
and
mov
adcb
stos
dec
hlt
or
rcrb
lret
ljmp
cli
mov
sarb
cmpsb
pop
add
lret
xor
in
cli
lret
push
ds
push
ds
sub
push
in
and
push
xorb
adc
fcomps
lods
cmp
bnd
inc
push
out
cmp
out
cs
jae
pop
mov
xor
xor
or
add
inc
fsubrs
js
adc
pop
sbb
in
sbb
aam
ds
xor
scas
bound
hlt
into
out
push
loop
sub
cmp
pop
adc
mov
cmpsb
inc
mov
fdivrs
sbb
mov
sbb
and
sbb
inc
sub
out
dec
lock
sbb
mov
ljmp
inc
push
push
pop
enter
cli
mov
hlt
sub
cmpsl
cli
fsubrp
push
mov
jle
or
ds
cmpb
std
fcomps
notb
stos
aaa
shr
cli
mov
adc
adc
imul
push
inc
testb
js
lock
sbb
push
ljmp
fsubrs
mov
scas
xchg
xor
add
shll
sbb
aaa
cmc
mov
sub
ret
dec
or
pop
cmp
aas
fdiv
mov
fsubr
or
rclb
jo
orl
or
out
clc
int3
mov
or
ds
cmp
aaa
cmp
cmp
push
fcmove
push
rorb
push
xlat
adc
aas
xor
test
loopne
cmp
cmp
pop
fcompl
push
pop
loopne
cmp
jecxz
sub
sub
imul
pop
lods
sub
pop
adc
xchg
push
and
jae
jle
push
adc
lea
push
shlb
aam
js
xor
ret
push
dec
push
dec
rclb
xor
aaa
xor
lahf
xor
mov
push
jle
adc
cmpsb
sub
sarl
imul
out
idivb
inc
data16
shll
lret
push
sbb
xchg
leave
push
inc
push
loopne
jg
mov
cmp
push
ljmp
std
movsb
jle
aaa
or
cmp
mov
xchg
inc
add
cmp
jl
movl
sbb
cmpl
inc
mov
out
out
loop
sbb
dec
mov
lods
pop
push
sbb
or
cmp
mov
and
xchg
jmp
arpl
xchg
sahf
insb
sub
jle
pusha
xchg
push
pusha
pusha
xchg
je
int3
adc
mov
or
add
aam
loopne
loopne
add
inc
jbe
or
mov
cmc
sub
pop
scas
aas
ljmp
clc
loopne
fdivr
push
xor
sub
xor
push
push
xor
leave
stos
int3
xor
jg
xlat
push
jecxz
fadd
mov
mov
dec
add
popa
push
into
hlt
xorl
cwtl
rol
pusha
pushf
fadd
mov
das
ljmp
aas
out
xor
and
bnd
add
clc
roll
shlb
push
sub
sbb
jg
or
int3
das
hlt
out
mov
pop
wbinvd
xchg
push
adc
pop
loope
fsub
xchg
pop
shlb
lret
and
cmp
or
sub
aaa
sbb
sub
mov
sti
das
mul
mov
dec
rcrl
fdivs
out
sub
cmp
add
das
aas
mov
ds
enter
into
sub
pop
mov
cmp
mov
test
adc
sub
aaa
push
sub
pop
divb
test
push
push
sub
enter
in
loop
arpl
add
data16
out
fcoms
call
mov
insl
mov
cmp
into
push
xchg
test
sub
sbb
cmpsb
loopne
loope
ret
or
sub
add
fcoms
pop
in
fcoml
push
mov
andb
cs
cmpsb
pop
or
or
adc
repz
scas
mov
and
leave
add
sub
or
mov
push
cmp
dec
add
out
lock
cmp
adc
lret
or
in
add
add
push
sbb
in
cmp
nop
or
jmp
stos
call
dec
lock
inc
ds
cmp
ret
cmp
add
adc
xchg
push
rcrl
aam
sbb
inc
cmpsb
or
ljmp
pop
sbb
roll
add
pop
or
or
inc
pushf
mov
lret
repnz
or
mov
push
gs
in
call
mov
lock
aaa
stos
xor
or
cmp
xchg
out
faddl
cmp
cmp
adc
out
push
pop
ret
jb
push
stos
lret
aaa
cli
sbb
xchg
push
dec
pusha
mov
scas
leave
lahf
mov
dec
sbb
jl
xchg
scas
push
mov
or
push
pop
rcl
pop
push
sbb
shr
adc
je
sbb
inc
mull
repz
insb
aas
or
xor
mov
int3
sbb
cmp
stos
or
sbb
cli
ljmp
sti
scas
jae
xchg
push
xchg
sbb
sbb
sbb
lret
adc
div
xor
cmp
aaa
or
ja
sbbl
push
push
pushf
testb
sub
cmp
pop
sbb
xor
sbb
cs
cld
data16
push
jl
push
xor
rol
add
cs
enter
dec
mov
out
push
out
cmpsb
mov
scas
out
jle
xor
jg
add
push
loop
or
fadd
sub
filds
dec
repnz
insl
adc
inc
mov
inc
ret
lea
or
jmp
mov
or
lret
ss
jg
rcrb
cli
pop
in
dec
mov
rcll
dec
addb
jecxz
mov
sbb
fxch
sub
add
adc
pushf
cmp
xchg
jbe
mov
inc
sti
add
ret
adcl
aam
inc
xchg
mov
dec
mov
clc
xor
sti
jl
pop
cli
mov
imul
cmp
and
scas
mov
stos
fmuls
push
adc
xchg
pop
nop
cld
ds
aaa
out
mov
mov
mov
xor
lea
or
adc
adc
clc
out
aad
xchg
push
shl
adc
adc
sarl
loopne
cmpb
pop
adc
lods
sub
sbb
xchg
loopne
adc
add
outsb
jae
xchg
jecxz
movsb
or
cli
ds
test
add
cmp
cmp
arpl
insl
push
xor
out
jecxz
ss
cmc
mov
jb
bound
jp
lock
push
cmp
pop
call
adc
pop
push
ret
mov
or
jle
adc
inc
pop
adc
or
add
xor
cmp
mov
in
out
jecxz
xchg
lock
push
or
xchg
mov
push
fisttps
push
mov
fwait
add
popa
cmp
or
mov
adc
pop
and
mov
xor
rcrb
jg
in
cmp
shrl
or
loopne
jo
jecxz
dec
mov
pop
arpl
int
mov
or
pop
out
dec
loope
stos
mov
mov
jge
push
loop
in
adc
pusha
push
jne
lret
unpckhps
adc
dec
out
inc
or
shrb
jge
cmp
scas
shlb
add
out
adc
inc
sub
cld
lods
push
xor
xor
inc
xorl
cmpl
repnz
mov
orl
jbe
mov
out
cli
orl
or
or
rcrl
add
jmp
data16
adc
test
add
add
push
or
jl
jo
das
and
dec
addb
sbb
leave
mov
sbb
mov
jmp
mov
addr16
into
sub
sbbl
pusha
sbb
in
outsb
pop
addl
inc
mov
sub
mov
sub
xor
xor
clc
js
inc
int3
outsb
mov
xor
aam
fcmovb
ficoms
cmp
lret
ret
cli
adc
jecxz
cli
push
lds
push
xlat
jecxz
mov
push
cmp
pop
in
lret
pop
push
nop
mov
aaa
shlb
add
dec
cs
fidivs
push
sbb
lock
aaa
pop
sub
or
ret
sbb
cmc
aas
dec
lcall
ficoms
xchg
pop
mov
cmp
pop
lock
daa
into
ja
xor
push
jge
adc
fadds
mov
or
sbb
enter
out
push
fstps
xor
mov
cmp
pop
cmp
jo
pop
pop
sbb
testl
jmp
push
out
sub
sbb
mov
sbb
sub
or
mov
jae
cmp
adc
les
xchg
loope
out
sbb
sahf
xchg
add
imul
sbb
sbb
adc
adc
fs
js
adc
loopew
mov
mov
push
xchg
jp
cmp
xchg
pop
subb
arpl
xchg
sbb
dec
iret
shlb
add
loop
sahf
or
jae
push
mov
imul
aas
lret
aam
or
pop
add
push
push
dec
dec
js
push
cmc
mov
cwtl
sar
ret
daa
int3
adc
dec
adc
or
mov
shr
mov
xchg
inc
pop
shll
push
cmp
outsb
and
add
scas
enter
cmp
add
cmp
push
dec
lcall
ret
sub
repnz
outsb
pop
or
and
bound
dec
sbb
mov
inc
out
jge
xchg
popa
push
es
out
mov
fdivs
repz
push
pop
std
repnz
testl
loope
sbb
out
push
jae
insb
pop
adc
xchg
pop
mov
dec
or
push
mov
sbb
jl
add
jb
push
jecxz
cmp
or
push
inc
push
es
rcrb
stos
mov
sbb
bound
inc
cmp
cmp
mov
sbb
int3
xor
stos
ficoms
pop
lods
lods
push
cld
shlb
inc
fiadds
cmpsl
pushf
mov
mov
faddl
lea
lods
lret
enter
xchg
out
bound
ret
mov
adc
cmovp
outsb
aas
push
pop
sub
in
out
push
push
mov
sarb
sbb
xor
je
cmpsb
sub
rorb
loopne
adc
test
out
dec
or
cmpl
pushf
lock
push
loopne
cmp
sub
dec
sbb
aaa
adc
lret
shrl
push
inc
or
sbb
mov
and
out
pop
pop
adc
lahf
int3
xchg
lock
cmp
pop
pop
mov
sbb
mov
jle
sbb
adc
xchg
out
ds
or
loopne
into
lret
lret
jb
cli
or
out
push
icebp
rcr
lea
push
neg
mov
or
stos
nop
inc
pop
xor
repz
add
cld
jbe
cmp
inc
cmp
push
adc
cmp
enter
stos
xor
sahf
aaa
out
add
push
int3
add
xchg
lods
leave
sub
adc
mov
push
push
inc
sub
sbb
lret
call
in
loop
mov
je
mov
enter
cmpsl
js
jle
adc
add
sbb
das
cmp
or
sub
inc
or
xorl
xchg
adc
mov
sbb
sbb
or
sbb
xchg
sbb
cmp
or
outsb
sbb
pop
pop
jno
adc
push
dec
fnstcw
aaa
cli
ss
xorb
test
in
idiv
into
and
call
sar
jecxz
xor
repz
mov
jae
pop
jae
in
cmp
push
mov
sar
sbb
adc
into
xchg
sub
pop
mov
shll
cmp
or
adc
inc
add
inc
or
call
stc
repz
adc
dec
push
sbb
in
loopne
nop
notl
sbb
hlt
out
ret
mov
push
mov
sbb
ret
ss
cli
mov
inc
pop
mov
or
add
add
push
inc
add
jp
push
out
sbb
out
or
in
or
sub
jbe
movsl
xchg
test
sbb
jp
enter
stos
loopne
adc
jl
pop
sbb
sbb
or
ljmp
xor
into
mov
add
sub
inc
lret
call
mov
push
push
adc
repz
add
adc
adcl
repnz
loope
cwtl
enter
je
add
push
xor
pop
pop
sbb
jmp
int3
sub
and
into
cmp
sti
bound
xchg
lea
jp
sub
punpckhbw
fadds
push
pop
sbb
add
xchg
jo
xor
sub
rclb
push
xor
sbb
lods
ret
outsb
and
dec
xlat
pop
and
adc
cmp
sub
pop
insl
push
and
lock
movsl
inc
cmp
xor
sbb
ljmp
mov
lret
mov
push
or
mov
mov
mov
or
jecxz
fadds
pushf
repnz
mov
clc
inc
movsb
pop
pop
add
fsubl
cmpsl
or
dec
call
aas
adc
fisttps
push
sbb
adc
dec
xchg
push
int3
add
cli
lahf
sbb
pop
pushf
ret
dec
push
inc
insb
mov
adc
gs
cld
ds
clc
sub
sub
add
enter
addb
leave
cmp
sbb
xchg
sbb
ret
sbb
repz
pop
or
and
jo
inc
ljmp
xchg
cwtl
int3
xlat
ret
xchg
or
adc
add
int3
push
jecxz
push
data16
xor
je
inc
or
mov
outsl
stos
pop
push
fdivrs
adc
movsb
jecxz
push
mov
adc
cmp
in
js
inc
ljmp
aam
cmpsl
add
jecxz
incl
fdiv
mov
icebp
mov
jle
add
jg
out
aas
sub
mov
lock
test
cld
jle
adc
sub
lret
push
andps
js
dec
fidivs
jo
aam
and
into
jecxz
mov
or
push
fdiv
cld
sub
out
sbb
or
cli
lds
cmp
mov
loop
sbb
jge
push
mov
jb
add
mov
sbb
pushf
xchg
push
pop
andb
lret
aas
enter
dec
imulb
ljmp
sbb
imul
jb
add
scas
push
enter
push
cmp
jg
stos
je
jmp
jbe
pusha
leave
pusha
cmp
in
pop
jecxz
jp
int
imulb
ja
or
cmp
negb
inc
loopne
inc
sbb
jg
mov
add
loope
dec
pop
cmpsl
xchg
bound
adc
mov
call
cmp
fsubl
pop
ljmp
pop
idiv
xchg
or
push
mov
clc
xchg
push
dec
ljmp
mov
cmc
leave
cmp
ljmp
repz
pushf
push
mov
repnz
faddp
cwtl
fdivp
bound
cmpb
lock
rcr
jl
inc
jge
adc
and
cmp
data16
push
pop
stc
aaa
sbb
adc
sub
push
xor
iret
js
adc
pop
or
mov
lock
push
subb
mov
mov
bound
push
mov
dec
push
mov
mov
mov
xchg
jbe
pop
cmp
sub
push
mov
cmp
jne
sub
mov
adc
fdiv
cmp
push
pop
mov
add
dec
jbe
sub
push
add
inc
fsubs
sbb
adc
pusha
lahf
sub
idivb
pop
jmp
test
in
mov
sbb
xchg
sbb
pushf
xchg
lock
push
xor
cmp
push
adc
leave
dec
test
shlb
sbb
jecxz
inc
adc
push
push
sti
movsb
outsb
xor
sbb
aas
xchg
roll
cmp
lock
loop
mov
mov
shl
pop
inc
xchg
adc
int3
xchg
les
mov
adc
icebp
popa
ljmp
nop
mov
test
cmp
cmp
adc
adc
fdiv
lea
mov
repz
js
sti
cli
and
pop
loopne
mov
sti
xor
stos
fidivs
mov
mov
in
adc
jae
mov
mov
xchg
fidivl
mov
sbb
mov
xor
jnp
cmpsb
out
in
xor
ljmp
push
or
cs
push
testb
or
sub
sub
mov
lret
sbb
dec
mov
cmp
or
mov
enter
sbb
jl
adc
rclb
push
mov
xchg
cld
loope
aas
push
cld
int
iret
cmp
cmp
mov
andb
xchg
js
cmpsl
mov
lods
dec
and
mov
jp
pop
addl
loopne
aam
inc
into
into
jle
pop
cmpsb
jle
cli
outsb
push
sbb
jp
push
push
jo
or
jmp
xor
ljmp
dec
in
sub
mov
inc
inc
xchg
xchg
or
or
or
int
push
inc
push
dec
sbb
test
leave
dec
add
aas
fcmovb
add
xor
lahf
sbb
add
inc
fsubrs
sbb
repnz
hlt
sub
push
push
jo
mov
jecxz
aas
aam
xchg
jmp
mov
jb
aad
sbb
push
adc
jae
insb
sbbb
jge
sub
inc
add
hlt
push
rcl
jecxz
fcompl
hlt
pop
loopne
call
inc
or
push
sbb
fidivl
or
cld
mov
clc
mov
sbb
std
mov
add
insl
inc
cmp
repz
dec
call
push
leave
add
mov
lcall
push
sbb
inc
push
cwtl
cwtl
ljmp
jecxz
push
ds
mulb
sbb
outsb
mov
jp
sbb
or
pushf
xor
mov
push
jge
sbb
loope
nop
push
sti
cld
sub
test
clc
push
adc
stos
sbb
push
jecxz
js
icebp
or
sub
jmp
mov
ss
hlt
ljmp
sbb
mov
mov
mov
mov
mov
lock
cmpsb
sub
loop
xor
stos
aas
adc
stos
adc
jb
pop
pop
loop
es
add
stos
xor
out
dec
sbb
stos
cld
or
hlt
test
aam
mov
sbb
sbbb
dec
sbb
loop
js
jmp
jae
mov
sub
cmp
adc
fs
push
adc
into
xchg
sbb
jae
bnd
rcr
in
push
lods
xorl
push
and
ja
mov
out
cld
push
mov
sbb
jmp
mov
sub
jmp
push
or
sub
dec
aas
pop
js
repz
cmp
xchg
sub
mov
aas
pushf
xor
sbbb
test
add
cmpsb
test
es
pop
in
shl
orb
or
sbb
cmp
push
repz
mov
jg
inc
es
xor
jg
push
insb
push
xchg
mov
push
mov
jle
xor
xchg
push
repz
xchg
adc
jo,pt
bound
dec
pop
sbb
mov
push
fsub
mov
or
out
aaa
ljmp
loopne
push
cmpsl
jbe
cmp
adc
adc
jp
sbb
movsb
mov
mov
movl
push
sbb
add
mov
aas
shll
cmp
fs
add
out
in
ljmp
shl
pop
sub
pop
cmp
mov
push
mov
out
loopne
pop
pop
sbb
dec
mov
add
inc
and
out
add
jecxz
sbbb
je
fwait
sbb
adc
cmp
pop
push
pusha
lods
mov
or
xchg
mov
inc
and
test
test
stc
je
mov
sbb
fists
mov
loop
adcb
in
xor
fldl
fsubrs
out
pop
enter
dec
sub
icebp
or
dec
shr
jecxz
bound
jmp
jmp
scas
mov
out
mov
or
add
pop
or
xchg
adc
js
jecxz
cmp
cmc
out
pusha
pop
adc
xchg
pushf
sbb
push
sbb
stos
shlb
cmpb
or
pop
fists
scas
les
test
int3
push
out
hlt
mov
mov
push
fdivl
dec
test
mov
mov
lret
push
dec
push
adc
pop
bound
inc
mov
movsb
stos
movsb
mov
pushf
and
in
xchg
mov
loope
or
mov
jne
dec
idivb
push
xor
sbb
dec
scas
sub
bnd
mov
scas
sub
pop
rclb
ret
lret
sbb
pushf
out
aam
or
comiss
or
push
cmp
push
stc
adcb
sbb
or
pop
dec
pop
adc
pop
not
xchg
sbb
and
fsubr
jns
xor
mov
cmpsl
lods
cmp
pop
adc
roll
dec
inc
sub
out
xlat
nop
sbb
adc
sbb
add
mov
pop
fdivs
mov
ret
lss
sarb
xchg
mov
inc
xchg
add
push
aas
hlt
mov
adc
push
call
rolb
push
aas
dec
cmpsl
inc
fsubr
jno
es
out
sbb
out
jno
fiaddl
jp
sbb
or
lock
xchg
jge
push
mov
aas
testl
js
or
push
inc
add
js
mov
cmpsb
js
das
hlt
cld
sbb
push
push
adc
pop
gs
imul
mull
loopne
adc
push
adc
push
or
lret
ja
mov
or
sbb
pop
in
dec
and
dec
push
div
add
cmp
dec
sarl
arpl
out
clc
pop
inc
mov
push
adc
fcomps
loop
test
lcall
push
push
dec
sbb
sbb
test
icebp
xchg
dec
mov
and
sbb
push
stos
adc
popa
mov
sbb
subl
xchg
sbb
mov
sbb
mov
mov
adc
sbb
pop
sbb
fstl
sbb
dec
mov
cmp
xor
cmp
pop
movsl
cmp
add
gs
iret
add
jecxz
cmp
jo
push
je
in
aas
or
test
cmp
push
aas
call
pop
mov
out
cmp
push
arpl
loope
addb
clc
mov
cmp
fcompl
push
imul
cmp
in
inc
clc
or
mov
std
mov
cmp
stos
inc
push
pop
fs
lock
and
loopne
leave
xchg
call
push
xor
sbb
out
mov
out
in
setae
adcb
or
sub
add
dec
inc
add
or
push
dec
dec
mov
cmp
push
je
outsl
sub
repz
incb
inc
pushf
sti
fidivs
in
push
clc
mov
fcomps
sbb
push
data16
addr16
lods
push
pop
nop
in
jg
mov
lret
fucomip
ljmp
push
mov
push
loope
or
and
pusha
inc
ljmp
pusha
xchg
or
cmp
sar
push
push
xchg
movsl
add
in
xor
mov
add
insb
int3
clc
pushf
sbb
scas
fcoml
xorl
nopl
mov
in
jo
mov
cmpsb
sbb
adc
cld
mov
sbb
aam
sbb
xchg
sbb
xor
sbb
jb
adc
mov
dec
push
insb
sbbl
cmp
pop
and
jbe
sbb
push
xor
xchg
adc
lock
add
adc
sbb
je
test
dec
lods
or
in
push
lret
ret
imul
pushf
add
subl
and
adc
xorl
jecxz
xchg
repnz
es
nop
leave
jmp
xor
mov
xchg
lcall
push
mov
dec
cli
adc
dec
out
xor
cmp
inc
sbb
lret
pop
push
cld
or
sbb
adc
ljmp
mov
test
sbb
shr
lock
push
out
push
lret
cmp
fmul
idivb
ficoms
loope
push
or
enter
sub
xchg
add
aam
lcall
adc
fadd
mov
test
add
cli
add
cmpb
fucomip
sub
out
push
fcompl
ds
loopne
jp
loope
sub
in
push
push
pushf
call
mov
xchg
rol
adc
adc
leave
xor
add
or
jl
fcoms
rorb
mov
xchg
cs
loopne
pop
adc
push
out
test
inc
out
mov
data16
xchg
aas
jg
or
mov
aaa
mov
lods
pop
xchg
add
sub
out
xchg
mov
pop
call
push
xchg
sahf
push
sbb
fistpl
ficoms
sbb
lret
adc
nopl
aas
loopne
loope
or
hlt
ret
inc
mulb
mov
lea
jmp
jge
icebp
push
orb
or
outsb
fsubrl
fcoms
xor
jno
les
cmp
push
pop
fmuls
sbb
xor
mov
jno
arpl
popa
jge
xchg
adc
lret
push
mov
sbb
push
clc
popf
sbb
loop
test
shll
push
inc
sub
cmp
sbb
mov
mov
mov
or
sub
sbb
jg
shl
sbb
dec
jg
jbe
pop
out
mov
pushf
sbb
dec
dec
mov
out
xchg
in
push
inc
mov
xor
jp
sbb
xchg
pop
icebp
push
mulb
pop
loopne
into
sbb
lock
or
add
dec
add
mov
push
sbb
in
push
or
aaa
adcb
fisttpll
or
sbb
hlt
bound
pop
mov
push
shr
dec
imul
jp
jecxz
stos
ljmp
out
mov
push
leave
mov
sub
push
sbb
xor
nop
loop
push
sbb
sbb
and
add
push
adc
dec
test
mov
inc
testl
or
inc
sub
pop
in
pusha
mov
xchg
dec
loopne
cmp
push
adc
nop
shrl
sbb
dec
adcb
outsl
pop
xlat
lret
push
jp
aas
pop
sub
sbb
int
subb
ret
cmpsl
mov
outsb
cld
ror
mov
clc
dec
out
mov
or
pop
xchg
cmp
loopne
cld
push
test
mov
mov
xchg
ret
jmp
xchg
sbb
cmp
rcrl
mull
arpl
mov
loope
mov
mov
xchg
sbb
push
xchg
aas
dec
or
call
testl
outsl
sub
xor
bound
movsb
inc
cwtl
mov
int3
adc
sar
pshufw
or
or
cmp
ret
or
hlt
inc
fdivr
mov
sbb
inc
xchg
pop
cmp
cmpsl
incb
out
sbb
jecxz
push
add
cmpsb
sub
mov
lcall
inc
xor
push
push
rcrl
sti
pop
jg
stos
cmp
pop
xchg
adc
xchg
ret
mov
rcl
mov
jecxz
cmp
mov
test
xchg
out
lcall
aaa
jl
hlt
jge
cmp
out
cmp
pop
div
cmpsl
lock
out
out
pop
xor
xor
push
mov
negl
xchg
or
sbb
lods
cmpsl
mov
push
xor
ret
aam
pop
xchg
add
inc
mov
sbb
xor
add
mov
repz
stc
inc
aaa
stos
add
rcll
and
mov
sbb
sbbl
fcompl
es
aaa
pop
pop
test
push
xchg
push
sbb
shl
and
xchg
mov
pop
mov
mov
adc
push
rcll
out
adc
sbb
push
jp
shlb
dec
cmpsb
das
cmp
sub
lock
pop
mov
mov
ret
or
out
sahf
lcall
jecxz
mov
mov
nop
cli
loope
add
cs
in
add
fists
lock
xlat
xor
xor
hlt
cmp
inc
jecxz
shl
push
push
stos
mov
rorb
push
mov
sbb
mov
test
sbb
push
add
dec
ret
scas
ja
cmp
test
push
loop
arpl
mov
into
lret
push
mov
mov
mov
and
dec
mov
pushf
push
mov
int
push
and
stos
lods
inc
add
cld
test
aas
push
int3
push
or
shlb
pop
or
incb
pop
mov
push
mov
xor
call
push
repz
jecxz
in
cmc
mov
cld
pop
icebp
notb
lock
mov
cmp
adc
sub
lock
xor
sub
adc
mov
or
push
pop
sbb
adc
aam
adc
sbb
mov
jecxz
js
fistpll
mov
mov
pusha
jo
inc
ret
mov
lret
sub
in
imul
sbb
test
or
dec
pusha
test
fs
mov
insb
test
cld
xor
sbb
xchg
lods
decl
mov
repz
mov
and
out
lock
cmpsb
cld
jmp
mov
xlat
into
arpl
push
or
inc
mov
push
add
aad
sub
outsb
je
dec
pop
jno
es
fcoms
int3
scas
stos
fs
rcrl
adc
into
roll
mov
fidivrs
rorb
enter
push
sub
out
out
ret
mov
in
sbb
in
xlat
xor
enter
push
out
pusha
push
movl
xor
popa
pop
or
insl
jl
jmp
orb
pop
adc
mov
xor
add
push
outsb
push
out
incb
in
push
jmp
loopne
in
dec
mov
add
push
mov
dec
cmpsb
mov
cmp
rcrl
push
addb
push
xor
push
insb
mov
aam
sbb
inc
imul
xor
call
adc
pop
daa
sbb
nop
push
sbb
or
je
loop
or
jp
sbb
sub
jb
rclb
add
add
mov
subb
inc
or
loop
mov
xor
push
out
mov
push
mov
mov
sbb
sbb
sbb
mov
aaa
cmp
fdivs
rcll
inc
stos
je
add
sbb
call
rorb
push
sbb
mov
sbb
cwtl
bound
jmp
jl
cmp
ds
add
loop
cld
mov
add
xor
inc
jle
jecxz
ret
inc
push
sarb
out
rep
hlt
mov
repz
pop
adc
sbb
sub
mov
cmpsb
or
not
mov
movsb
mov
xchg
sbb
cli
add
push
loopne
lock
dec
xor
test
ljmp
pop
xor
mov
mov
pusha
pushw
pop
cld
orb
sti
sub
xor
fdivs
push
inc
js
cmp
sbb
mov
addb
fcmove
inc
push
jle
mov
out
jl
xor
cmp
sahf
inc
mov
mov
call
adc
insb
mov
lock
dec
inc
fdivrl
cld
cld
mov
ret
lock
pop
cwtl
lret
in
pop
imul
mov
js
out
mov
xorl
mov
outsl
mov
notb
in
push
fdivrs
outsb
jb
sbb
xchg
or
adc
add
xor
xchg
sub
out
lock
pop
in
outsl
bnd
aaa
mov
mov
stos
cmp
repnz
sbb
fucomip
stos
mov
call
adc
int3
xchg
sbb
push
push
pop
pop
push
std
add
push
ss
push
push
mov
pop
insb
repz
mov
dec
enter
mov
incb
lock
mov
mov
scas
fldl
jmp
call
jle
mov
stos
and
mov
shll
mov
rcll
inc
or
xchg
adc
jle
jbe
mov
mov
mov
loop
inc
mov
push
mov
rorb
orl
add
mov
jb
push
or
aam
or
xchg
loopne
movsb
push
xor
sbb
out
ret
lea
je
xchg
sbb
jno
and
movsb
loope
les
inc
jge
mov
cs
mov
mov
sbb
jp
sbb
adc
pop
rclb
lods
inc
out
ficoms
fiaddl
shlb
pop
sbb
sbb
rcrl
fcomip
cmp
dec
adc
mov
cs
inc
sbb
push
lods
insb
stos
sbb
mov
sbb
inc
pusha
jne
out
rcrb
inc
fsubs
movsb
xor
pop
push
out
stos
lock
arpl
mov
in
mov
mov
lcall
cld
int3
xchg
icebp
pusha
loopne
jle
push
jmp
subb
pop
lock
mov
inc
jmp
in
stos
aam
sbb
rcrl
nop
dec
xor
out
cmp
out
lock
dec
push
push
mov
enter
adcl
pushf
jecxz
mov
xor
ficomps
mov
mov
rolb
dec
in
out
inc
push
pop
push
sub
rcll
push
add
or
jns
fcompl
inc
loopne
aaa
stos
pushf
loop
xchg
insb
inc
insl
pushf
rcrl
sub
mov
lret
lock
sbb
or
inc
cld
repz
pop
repz
ds
movsb
ljmp
mov
sub
out
data16
and
into
fidivs
mov
push
data16
xor
ja
aas
call
mov
lret
fs
repnz
add
gs
sarb
jp
ss
bound
repz
mov
sbb
btc
xchg
in
cmp
in
daa
dec
xchg
call
int3
inc
subb
ss
out
xchg
sbb
jb
mov
aaa
push
adc
push
mov
into
cwtl
adc
in
in
lods
xor
jo
cmp
cmpsb
mov
ror
mov
pop
pushw
sbb
into
aaa
lret
cmp
pop
or
mov
and
fcoms
int3
push
jb
xchg
adc
ret
push
push
fistpll
out
and
cwtl
js
js
stos
sub
xor
ljmp
nop
adc
lea
mov
and
loop
add
repnz
loope
jg
mov
adc
sbb
push
orl
xchg
out
mov
mov
pop
mov
xor
or
in
add
pop
jp
sbb
pop
out
xchg
in
test
push
dec
loop
push
stc
inc
push
cli
jp
mov
mov
into
lret
imul
aam
xchg
sbb
sbb
js
and
mov
xor
ror
out
scas
mov
js
dec
movsb
xorl
mov
out
call
lods
xor
lods
jge
xor
sub
lock
shlb
pop
out
or
cmp
mov
sub
leave
and
mov
cld
jl
out
inc
dec
sub
xor
dec
mov
lods
xor
xchg
or
imul
out
addb
imul
into
daa
repnz
cld
push
pop
mov
int
mov
jl
in
jp
dec
orb
idivb
push
lock
and
jg
ss
dec
xor
mov
cmp
sbb
mov
loopne
dec
xchg
nop
xor
adc
cmp
stos
loopne
mov
inc
xor
loope
mov
adc
clc
cld
ret
sbb
arpl
fucomip
notb
sti
fs
call
scas
and
push
adc
adc
mov
xchg
push
data16
and
cwtl
push
das
push
dec
xor
cmp
mov
sbb
dec
xor
add
sbb
jecxz
add
out
mov
jl
inc
out
jae
mov
ficompl
rorb
adc
sbb
inc
sub
hlt
out
xchg
in
in
outsl
js
jl
xor
lock
mov
push
clc
sbb
add
enter
sbb
leave
cli
sahf
lret
ret
jno
inc
mov
mov
add
pushf
pop
mov
mov
push
xor
lret
fadds
adc
and
adc
pop
xor
loop
repz
out
rolb
mov
jecxz
in
push
loopne
sub
popf
mov
adc
sbb
push
xchg
inc
push
adc
sbb
leave
clc
mov
cwtl
aaa
jg
cmp
adc
and
adc
repnz
sub
stos
pop
mov
out
test
ljmp
adc
iret
dec
inc
jp
adc
ror
les
into
cmp
mov
test
jge
or
sbb
mov
loopne
mov
and
popa
inc
mov
jl
int3
mov
inc
in
es
out
outsb
fcomps
mov
jle
adc
movsb
inc
pop
out
or
sbb
sub
and
lods
notb
jg
mov
xor
push
stos
insb
push
xchg
clc
loope
idivb
mov
mov
adc
xor
or
mov
inc
dec
mov
pusha
mov
xchg
sbb
push
out
or
nop
pop
sbb
sbb
aam
out
xchg
push
dec
decb
aaa
inc
push
sbb
out
cwtl
roll
or
sbb
leave
xor
adc
lock
nop
addl
mov
dec
aad
push
xchg
cmp
jp
sbb
hlt
adc
inc
or
cli
lret
stos
cld
scas
push
les
std
jbe
in
rorb
out
cli
repnz
jl
inc
sbb
inc
ja
ljmp
ret
cmp
orl
dec
stc
mov
xor
sbb
mov
gs
mov
add
adc
clc
jmp
jb
lods
dec
cmp
jb,pt
lock
ljmp
test
ljmp
inc
es
lea
jo
cli
loop
cmpsb
fsub
push
out
repnz
sbb
and
dec
dec
cmpsl
mov
mov
and
shl
aas
push
push
mov
je
dec
adc
cwtl
mov
je
or
inc
xor
cs
and
cmp
call
xchg
pop
out
dec
cwtl
mov
mov
ja
rcrl
lock
mov
adc
push
out
loopne
out
imul
sbb
popa
and
jecxz
sub
mov
jmp
sbb
push
je
xchg
dec
filds
mov
lods
push
ja
cmp
cwtl
movsl
xor
push
ret
es
cld
ja
mov
cld
out
call
aas
pop
cmp
in
mov
mov
dec
clc
out
pushf
pop
mov
mov
push
xor
repz
cld
or
mov
out
sbb
addr16
jmp
xchg
cmp
arpl
jae
xor
cmp
cli
xor
xor
mov
nop
mov
xor
push
fistps
and
aas
sbb
pop
sarb
lock
decl
mov
push
aam
test
movsl
mulb
xchg
stos
in
jbe
test
cwtl
mov
mov
aas
clc
lret
mov
lods
cmp
inc
dec
sbb
test
cld
xchg
xor
loope
mov
jo
add
mov
in
xchg
mov
adc
shlb
cmp
sbb
repz
lretw
shlb
push
lcall
fcoml
and
scas
in
push
or
cld
push
mov
pop
inc
clc
sub
push
mov
ss
dec
push
mov
ret
into
sarl
mov
mov
and
into
pop
fmuls
sahf
imul
mov
sbb
sbb
cld
fimull
out
out
mov
je
xchg
sbb
je
call
pop
push
xchg
je
rorl
mov
in
out
fidivs
jg
or
push
loopne
mov
push
mov
cwtl
mov
mov
orb
and
mov
sbb
adc
mov
mov
ret
mov
shlb
adc
add
adc
lock
and
std
xor
jg
movsl
rcl
hlt
push
xchg
xchg
addb
xor
rorb
jmp
sbb
loop
popf
mov
jmp
jl
mov
dec
ljmp
push
add
shrl
sbb
shlb
call
mov
pop
pushw
mov
xor
rcrl
push
clc
mov
dec
popf
sbb
in
scas
mov
pop
jno
js
lods
cld
mov
pusha
insb
jb
lret
leave
mov
jo
sbb
ljmp
fs
clc
xor
push
add
cmpsb
mov
inc
xchg
sbb
lds
push
xor
es
inc
out
cmpsl
loop
jbe
test
cld
sbb
imul
jae
mov
push
jmp
and
push
sbb
push
adc
xor
out
inc
rorl
jl
mov
bound
adc
aam
stos
xchg
inc
xor
sbb
insl
test
pop
out
loop
enter
aam
or
or
cmp
mov
into
mov
test
les
sbb
arpl
cmp
xchg
out
sarb
lock
cli
call
sub
pop
and
xor
push
movsl
scas
test
sub
in
push
mov
cmp
loopne
shlb
mov
or
in
push
repnz
mov
roll
dec
push
push
ret
mov
aaa
mov
shlb
push
inc
lods
ffreep
mov
mov
cld
test
sar
and
mov
cld
inc
mov
out
xlat
mov
jb
jae
mov
cs
inc
mov
mov
cmp
pop
sbb
xor
scas
jge
das
mov
push
xor
jle
int
nop
jno
popa
xchg
mov
out
jo
dec
xchg
inc
sbb
cmp
mov
dec
push
mov
lea
ds
mov
sbb
push
mov
adc
cmp
pop
sbb
loop
andb
inc
dec
push
sbb
mov
roll
sbb
aaa
mov
test
sbb
test
cmp
negl
xor
mov
es
lret
sarl
jg
jecxz
mov
mov
rorl
dec
xchg
xchg
dec
dec
in
cld
mov
addb
sbb
jmp
cmp
sbb
mov
pop
mov
std
push
mov
test
inc
out
into
xchg
loopne
out
mov
lret
jp
fstpl
mov
into
mov
mov
inc
aas
ret
lcall
push
insb
mov
sbb
jle
lods
pusha
lods
scas
sub
mov
xchg
inc
push
push
xchg
or
mov
jae
insb
insb
call
adc
jno
cld
push
or
call
adc
ss
sub
jge
rcll
call
xor
fdivrl
and
dec
stos
test
insb
add
xchg
fcoml
mov
ss
adc
repnz
les
jecxz
ret
fdiv
xchg
inc
aaa
push
loop
loope
pusha
cmp
je
and
or
call
ret
rorl
mov
mov
xor
push
icebp
push
sbb
insb
mov
and
adc
pop
mov
rcl
xchg
sbb
mov
lods
je
fstl
sbb
jmp
jb
inc
ljmp
je
mov
push
mov
push
cmp
loopne
clc
mov
int3
lret
push
push
sbb
sbb
mov
jp
cli
mov
call
inc
cmp
ret
cmp
fsub
jecxz
mov
call
test
inc
loope
mov
xor
inc
xchg
adc
sbb
shrl
dec
xchg
imul
and
lcall
addl
leave
sbb
mov
imul
add
pushf
lret
lret
sbb
push
cli
loopne
jmp
loopne
lock
scas
or
arpl
push
mov
lahf
sbb
popf
push
imull
mov
test
notl
and
inc
pop
xor
add
jo
mov
pop
arpl
inc
mov
xor
xchg
hlt
mov
dec
sub
aam
push
mov
hlt
mov
ljmp
dec
loopne
aam
int
push
ljmp
lods
sbbb
push
mov
out
cmpsb
daa
sbb
dec
and
mov
lods
push
mov
js
inc
ret
cli
sahf
pushl
xor
outsl
xor
in
call
cld
jno
add
sbb
sbb
pusha
push
loop
push
mov
sbb
movsb
or
cwtl
ret
test
jmp
sub
add
or
sbb
pop
aas
push
mov
add
sub
mov
push
test
dec
jge
cmp
sahf
lods
push
fiaddl
out
std
adc
pop
scas
adc
push
mov
pop
pop
mov
cmp
fistps
aad
pop
sbb
and
je
fadds
or
mov
test
sarb
sahf
scas
sbb
cs
fists
xchg
dec
sbb
leave
mov
arpl
xor
sub
cmpb
lret
lahf
enter
or
lea
lcall
mov
or
dec
inc
sbb
es
pop
mov
out
xchg
sbb
mov
mov
scas
es
js
lock
movsb
bound
bound
aas
jmp
scas
hlt
lods
add
call
mov
inc
inc
sbb
sbb
pop
sbb
mov
sbb
cmpsb
mov
in
fcoml
inc
xor
xchg
push
rcrl
dec
pop
rcl
sbb
mov
arpl
clc
repz
sbb
adc
pushf
jae
xchg
ret
orl
dec
mov
inc
xchg
fdivp
cmp
ss
hlt
mov
mov
rol
js
into
nop
test
repz
inc
push
pop
mov
xor
mov
out
cli
gs
sub
and
xchg
inc
jmp
xor
cmp
scas
add
jle
fcompl
inc
adc
sbb
loopne
xor
sbb
lret
dec
cmp
sbb
sbb
leave
outsb
push
rcrl
sbb
sbb
aam
mov
mov
out
inc
push
jae
or
lea
lret
inc
in
insb
cs
push
lds
xchg
sarb
mov
std
xchg
jmp
rcr
mulb
and
roll
jge
cld
outsb
dec
dec
adc
sbb
aam
test
enter
lret
cmpsl
fisubl
push
mov
pop
loop
js
scas
jg
rorl
inc
mov
lret
push
xor
mov
enter
or
dec
repz
jne
dec
int3
mov
or
adc
clc
push
cmp
stc
test
xor
cmp
pop
jecxz
rcll
mov
dec
aas
idivl
mov
pop
mov
popa
push
cld
sbb
lcall
sbb
loopne
pop
xor
sbb
inc
iret
mov
sbb
ror
insl
scas
jle
inc
inc
push
sbb
sub
mov
mov
mov
int3
arpl
and
push
insb
push
sbb
test
jl
dec
sti
add
jae
xor
out
sbb
add
lock
sub
js
stc
insb
dec
jl
mov
adc
mov
adc
icebp
fistps
ljmp
fidivrs
sbb
movsb
cmp
dec
daa
in
ss
shr
cmp
xor
stos
dec
in
jae
test
test
jecxz
xor
push
mov
mov
mov
call
inc
push
sub
and
test
or
cmp
xor
test
rorb
es
pop
call
mov
repz
dec
in
aas
testl
out
add
cld
dec
je
popf
sbb
add
loope
aad
cmp
mov
mov
adc
data16
mov
ret
sbb
fimull
inc
cmpsb
jae
or
xchg
nop
sbb
inc
xor
cmp
mov
add
mov
jg
dec
push
sbb
leave
mov
mov
and
rcll
shl
ljmp
mov
sarb
clc
mov
inc
mov
movsb
mov
lret
inc
dec
push
cmpsb
inc
xchg
sbbb
popfw
rorb
stc
sarb
push
int
inc
stos
out
lock
and
sbb
push
inc
loopne
push
lret
mov
jbe
and
in
jae
add
mov
add
xor
sub
cmpsl
inc
inc
jae
jge
rcll
jl
call
jo
lret
repnz
sbb
xor
or
mov
int
pusha
test
addl
inc
mov
push
shlb
out
dec
test
rorl
lock
cwtl
imul
push
std
sahf
mov
lret
stos
es
xor
test
fsubr
out
push
test
add
call
addl
lods
aam
test
lods
inc
xor
loopne
push
jmp
sub
xchg
push
cmpsb
notb
mov
daa
add
adc
in
out
mov
testb
push
xchg
or
mov
call
lock
sbb
out
fdivr
std
inc
leave
vcmpfalse_osss
lret
loop
sbb
xlat
mov
popa
and
xor
sbb
leave
repz
cli
pop
rolb
pop
sbb
push
lret
into
mov
outsb
dec
xor
imul
sarl
adcb
invd
aas
lea
jmp
roll
mov
pop
out
cmpsl
adc
insb
push
mov
insb
mov
div
fsubl
dec
sub
push
jae
push
bound
out
mov
aas
scas
call
push
sub
inc
insb
loope
cld
push
repz
inc
mov
out
aas
push
and
out
inc
movsl
lret
sub
gs
jge
jne
lock
mov
sbb
mov
std
pop
jno
add
pop
inc
bound
cmpb
rcrl
inc
imulb
adc
outsb
xor
adc
rcll
mov
mov
insb
enter
pop
ljmp
sub
out
cmp
jae
ss
and
mov
addr16
dec
xor
xor
lea
arpl
jmp
jbe
je
movsb
into
leave
sbb
decl
in
or
mov
push
rcrl
fsubrl
xchg
aaa
cs
xlat
mov
out
dec
xchg
icebp
xchg
clc
inc
test
push
divl
enter
lods
repnz
shl
inc
les
push
out
lret
orb
clc
scas
in
adc
pop
scas
xchg
lods
push
out
adc
aad
aas
jmp
loopne
xchg
outsl
mov
faddl
ss
ljmp
inc
call
sub
jecxz
mov
xor
test
cmp
mov
cmpsl
xor
and
mov
js
outsb
je
filds
ja
and
insb
mov
sub
xchg
pop
mov
jle
or
lret
push
ret
sbb
mov
jb
push
lds
lds
add
mov
jle
mov
dec
aas
jge
bound
loop
into
jae
push
ds
sbb
sti
and
mov
cmc
pop
and
and
sbb
xlat
adc
push
mov
push
xor
call
dec
divl
sub
loop
jmp
lea
sub
in
and
mov
mov
cmc
push
jge
rcrl
aad
lret
insl
mov
dec
xchg
andb
cmp
out
ja
loope
pop
icebp
in
mov
inc
xor
add
addr16
out
push
adc
out
movsb
out
gs
push
shll
xchg
mov
daa
add
loopne
inc
inc
das
sbb
mov
push
sbb
pop
fdivs
xor
loope
and
outsl
inc
dec
jb
mov
pop
icebp
leave
js
mov
gs
push
inc
addr16
pusha
push
in
sbb
sub
push
sbb
lods
mov
ljmp
xor
add
mov
push
les
sbb
adc
mov
xor
call
inc
xchg
xor
sub
pop
mov
sti
shlb
fldcw
lret
in
mov
enter
mov
imul
jg
push
hlt
and
cwtl
adc
adc
stc
jae
adc
sub
and
imul
jle
adc
push
add
xor
push
adc
jae
imul
je
push
jge
lcall
pop
pushf
push
pop
sbb
and
or
cmp
sbb
jbe
ficoml
sbb
rep
sub
xchg
mov
or
daa
fiaddl
push
adc
cld
and
or
fs
pop
xor
dec
xchg
mov
jno
ficomps
es
pop
ljmp
add
arpl
mov
rolb
inc
cmp
js
and
test
mov
lahf
sbb
movsb
ss
jne
or
push
xchg
fnsave
ja
pop
jno
call
mov
sub
cmp
les
pushf
lds
xor
sbb
fdivr
movsb
fs
jns
or
sub
mov
sub
movsb
rcrb
sbb
cwtl
shlb
mov
adc
lahf
fsts
push
xchg
mov
adc
sbb
xchg
stos
sbb
mov
or
sbbb
repz
subl
push
aam
pop
in
jmp
xchg
iret
call
pop
cli
sbb
enter
arpl
pop
push
mov
sbb
and
mov
insb
arpl
push
xlat
mov
or
gs
call
nop
dec
outsb
decl
xor
and
in
inc
scas
cmpsl
and
idivb
mov
test
push
stos
sahf
loope
add
imul
sti
pop
std
notl
push
in
cltd
lahf
sahf
push
orl
jae
inc
lret
imul
out
iret
fs
and
shrl
mov
jne
xchg
jbe
out
dec
pushf
fs
jg
or
push
xchg
mov
sub
sbb
inc
shl
in
repnz
dec
lds
addr16
sbb
or
pop
mov
in
dec
lock
add
orl
sbb
js
fmuls
sub
pop
adc
xchg
or
pop
in
jl
push
ror
pop
jecxz
mov
jb
xchg
out
pop
insb
in
sub
cmc
pop
jne
fisubs
int
jb
adc
cmp
rorl
sbb
sbb
repz
jge
mov
adc
movsb
xchg
push
dec
popa
cld
mov
inc
adc
cmp
in
dec
sahf
push
pop
push
jg
pop
jns
jae
imul
cmc
je
movsb
arpl
addr16
sub
mov
adc
cltd
sbb
lea
jmp
leave
repz
repnz
movsl
pop
sbb
movsb
dec
repz
sbb
fs
dec
in
syscall
out
dec
fisubrs
ss
xchg
outsl
sbb
in
int
xor
xchg
fs
lock
jl
jns
mov
sbb
lahf
or
push
dec
jae
sti
sbb
fstps
cmp
cmp
dec
and
xor
int
cld
adc
repz
and
jl
pop
test
ficoml
inc
xchg
xor
fs
fbld
repnz
pop
and
cld
outsb
add
nop
in
xor
out
test
stos
sbb
cwtl
rcll
sub
add
jl
pop
out
lahf
add
iret
fcomi
sbb
mov
add
fwait
mov
stos
ds
in
jb
aad
dec
gs
aaa
stc
jbe
scas
out
sbb
inc
push
lock
pop
and
ficoml
lret
lock
in
jnp
shll
mov
imul
dec
fwait
std
in
in
jge
jbe
aam
cmp
arpl
shl
mov
cmp
in
jl
cmp
bound
in
lea
and
mov
mov
and
in
xchg
ss
xchg
lcall
fildl
in
xlat
lods
je
mov
cmp
or
xchg
sbb
ljmp
into
or
push
out
movsb
fdivrs
mov
sti
stos
pop
jno
mov
xor
ret
dec
frstor
pop
cmp
ror
inc
sub
dec
fdivs
scas
xor
adc
std
sbb
cmp
frstor
jno
in
push
jbe
or
shrb
subb
hlt
fildl
cs
sbb
in
nop
gs
std
and
fistl
les
int
sub
adc
mov
jg
pop
inc
push
fstp
adc
fs
adc
cmp
les
fwait
int3
in
adc
and
adc
sub
fcmove
sbb
jo
xchg
or
mov
xor
out
in
test
jbe
cmp
pop
sub
sub
mov
mov
out
mov
mov
push
in
mov
cmp
sbb
dec
scas
inc
arpl
dec
fs
jle
out
mov
fbstp
loopne
test
xlat
add
sub
leave
and
jge
cwtl
int
lods
das
and
out
test
fistps
movsb
ret
roll
xorb
sarl
sbb
inc
mov
stos
lret
in
sarl
add
daa
pop
lds
mov
xor
and
or
shl
sbb
jl
adc
out
andb
js
sub
movsb
mov
and
pop
pop
dec
dec
sub
sub
pop
addr16
mov
dec
adcb
aam
popf
xor
cmp
pusha
mov
pop
jle
mov
cmpb
nop
fidivrs
cltd
in
fimuls
cltd
and
repz
mov
xor
inc
cmc
pop
daa
cwtl
out
cld
popf
in
or
mov
sbb
call
repz
sahf
data16
imulb
adc
xchg
in
out
int3
sbb
cmp
sbb
cltd
fstpl
out
xchg
test
out
cwtl
jmp
pop
loopne
andb
jmp
fs
mov
cld
mov
aam
mov
les
adc
push
popf
movsl
adc
imul
movsb
jg
jb
in
pushw
mov
in
push
shrb
pop
fs
movsb
inc
shll
push
movsl
adc
xchg
and
fptan
sbb
add
mov
in
mov
or
pusha
aad
rcrl
adcb
cmpl
sbb
mov
in
cmpsb
jecxz
xor
sub
arpl
ds
mov
sub
mov
sub
push
xchg
in
pop
outsl
push
mov
dec
jo
int3
aaa
xor
mov
shlb
ss
xor
popf
ljmp
jb
dec
in
mov
push
add
mov
sbb
sbb
pop
outsl
cwtl
push
lret
lods
sub
shr
or
dec
jp
push
and
cltd
dec
sub
inc
das
ja
in
fsts
sub
in
push
and
rorl
mov
hlt
push
mul
jae
cmove
and
sbb
jne
add
lret
dec
in
stos
fisubl
sbb
icebp
inc
push
mov
popf
or
mov
sub
inc
cmp
sbb
cld
jb
flds
hlt
ret
sti
rorb
mov
ljmp
adc
mov
outsb
pop
in
xchg
add
and
addr16
test
rorb
shlb
das
xor
jne
test
adc
daa
sarb
push
repz
in
mov
out
test
jl
aaa
insl
adc
es
inc
push
hlt
and
test
fstps
cmp
pushf
xchg
loope
adc
aas
icebp
mov
xor
out
add
call
dec
negl
fcmovne
adc
or
into
add
push
out
cwtl
cs
fiaddl
pop
sbb
adc
lret
scas
xchg
subb
push
cmp
dec
and
rclb
mov
mov
xor
stc
in
pop
pop
jnp
sbb
in
push
sub
imul
pop
mov
sbb
clc
inc
xor
sub
nop
jl
add
push
mov
mov
cmp
sbb
adc
sahf
dec
movl
push
ficomps
scas
jnp
xchg
sub
lcall
adc
push
pop
out
pushf
or
xchg
fldpi
sar
sub
arpl
or
addr16
jo
add
enter
adc
sub
out
cmc
mov
xchg
stc
jl
push
lods
outsl
adcl
push
lahf
adc
ljmp
pop
sbb
adc
mov
mov
push
mov
in
dec
pushf
xchg
sub
push
scas
int3
in
hlt
repz
in
xchg
inc
and
adc
pop
dec
cmovno
xor
popf
push
and
subb
xchg
iret
aad
cwtl
jmp
pushf
or
xor
add
push
cmp
jmp
cmp
xor
insl
jp
in
add
fnstsw
cmp
movsb
lock
test
bound
pushf
pusha
mov
push
out
lret
sarl
dec
adc
push
insb
and
mov
cmp
jmp
sbb
jae
mov
test
into
in
jg
out
subl
imul
jl
push
movsb
ret
mov
cltd
mov
ds
add
cmp
lds
mov
popf
data16
divb
sbb
or
xor
xchg
mov
lods
xor
xchg
cmp
out
sbb
push
adc
add
in
mov
aam
clc
sbb
mov
aad
mov
dec
ljmp
sbb
cld
pop
int3
sub
xchg
rorb
das
push
cli
enter
or
repz
fs
std
xor
push
push
xor
rcr
xor
in
nop
sbb
sub
testl
push
push
or
sti
pop
in
adc
xchg
dec
xchg
sbb
mov
pop
or
cmpsb
lods
adc
dec
in
lock
das
sub
pop
xor
mov
loop
xchg
je
in
popf
cltd
enter
sbb
cmp
scas
insb
cmp
imul
mov
and
cmp
sub
in
dec
push
iret
and
dec
aaa
loop
xor
xor
dec
dec
ret
shlb
lea
movsb
adc
jno
mov
iret
inc
cmp
sbb
bound
in
mov
fiaddl
mov
sbb
fwait
inc
in
jno
out
push
xor
rclb
xor
sbb
into
dec
cmp
gs
sub
lods
xchg
jbe
sbb
mov
adc
call
lods
ljmp
jle
arpl
test
dec
jl
ja
addps
int3
sbb
push
cmpsl
sti
inc
pop
inc
and
xchg
fwait
push
add
pop
mov
cli
movsb
xchg
xor
add
ficompl
fwait
scas
iret
push
popf
in
orl
sbb
aaa
mov
xchg
mov
popa
or
pop
push
jae
adc
out
repnz
in
nop
fwait
add
in
and
push
push
in
in
lcall
ss
test
daa
mov
adc
push
jnp
ds
shll
movsb
lret
pop
into
xchg
add
enter
adc
andb
push
mov
loop
loop
fistps
mov
jns
mov
push
push
or
das
or
rcl
xor
in
push
out
pop
or
out
faddl
loope
push
xchg
in
fnstenv
ret
adc
sub
in
sbb
xchg
out
in
and
mov
xor
jp
dec
sub
ret
in
jb
cmp
enter
fs
mov
push
test
adc
mov
or
mov
imul
test
inc
push
in
outsl
mov
and
in
dec
cmp
in
fldenv
aam
sbb
jge
jmp
cli
mov
add
jns
data16
cmp
into
add
xor
jmp
inc
cmp
into
hlt
inc
out
mov
jnp
sbb
in
xchg
push
cmc
push
icebp
aad
repz
sbb
loope
mov
stc
xchg
cmpsb
pop
rorb
or
in
xchg
or
cwtl
rorb
ret
jmp
loopnew
lds
rcll
aad
and
mov
fs
adc
sub
sub
mov
in
pusha
pop
jecxz
mov
aam
sub
mov
sbb
adc
cld
lods
mov
mov
movsb
movsl
ja
inc
in
sub
push
das
jnp
jns
movsb
mov
mov
in
pop
inc
cld
xchg
inc
subb
stc
adc
insb
add
inc
sbb
popa
dec
in
in
lret
pop
xchg
xchg
sbb
jnp
pop
mov
pop
xchg
jl
movsl
cmc
sbb
xchg
jl
mov
outsl
pop
js
call
enter
and
cltd
adc
sbb
in
fisubrs
push
repz
pop
popa
and
jge
arpl
into
in
push
hlt
mov
scas
rorl
sbb
xor
daa
mov
xchg
adc
add
dec
dec
cld
dec
and
pusha
in
push
out
mov
cltd
add
scas
test
or
pop
mov
xchg
test
sbb
and
subb
test
sub
push
lods
and
cmp
ret
pop
inc
in
and
stos
or
outsl
cmpsl
add
lahf
lock
and
repz
shlb
push
dec
movsb
cmp
fstl
mov
lds
ret
sbb
push
stos
loopne
bnd
add
push
in
sub
test
pop
cmp
or
or
addl
in
das
fwait
push
mov
pop
adc
dec
aad
cmc
out
or
enter
rcrb
in
mov
jo
sbb
repz
das
stos
enter
repnz
mov
lock
push
std
adc
xchg
or
inc
xor
into
adc
rorl
adc
cld
inc
shll
push
inc
rclb
in
je
lods
scas
lea
sbb
mov
push
addr16
in
stc
lods
push
xchg
outsb
insl
jbe
lock
xor
loope
in
es
scas
mov
gs
in
and
fadds
mov
jo
rcll
sub
pop
mov
int
fsubl
fs
add
dec
in
lret
pop
cmp
push
cli
nop
pop
jle
cld
in
leave
mov
lock
xchg
bound
cmp
xor
push
push
jge
adc
jle
mov
addr16
pusha
inc
xor
cltd
fs
jecxz
addb
fsubrl
mov
or
mov
inc
xor
adc
cmp
je
push
pushf
rorb
data16
or
adc
cmc
rcrb
fnsetpm(287
cmp
push
add
mov
rolb
add
hlt
hlt
outsb
fs
xchg
lds
sbb
lods
inc
repz
lret
xor
or
mov
pop
jbe
in
adc
ds
sub
in
cli
inc
mov
in
shrl
inc
nop
in
insb
in
mov
fadds
ja
push
jg
jl
add
dec
repz
xchg
sbb
push
pushf
inc
hlt
or
push
push
push
push
and
xchg
or
cld
push
lret
cli
push
sbb
in
jns
shr
lret
xchg
mov
and
cmp
sbb
rcrb
loopne
insl
test
mov
aam
adc
add
scas
call
adc
mov
in
mov
cmp
lret
cmpsl
rol
fists
aam
adc
test
enter
cmp
adc
ficoms
pop
xorb
xchg
les
cmpsb
and
fstl
leave
xchg
mov
xchg
push
add
add
mov
push
pop
adc
sub
enter
cltd
fisttpl
test
movsb
out
inc
in
sub
xor
insb
jg
sti
mov
incl
and
in
ds
mov
lea
mov
mov
in
lock
in
outsl
adc
in
testb
mov
adc
and
sarl
in
lock
cmc
xor
inc
rorb
in
int
inc
pop
xchg
push
push
inc
out
push
mov
dec
push
outsl
mov
pushf
fimull
bound
mov
loop
xchg
mov
lock
and
adc
pusha
jg
pop
dec
fstp
out
test
leave
in
jo
notl
in
dec
loopne
cltd
aad
fstl
in
imul
xchg
sbb
adc
cld
loop
adc
movsb
mov
andl
mov
stos
jns
lods
icebp
rol
inc
adc
les
sbb
sub
dec
leave
push
pop
adc
jo
clc
scas
insb
and
and
pop
out
dec
ja
and
and
xlat
frstor
dec
xchg
mov
pushf
fwait
sub
lret
push
mov
in
and
out
and
das
mov
xchg
mov
js
pop
stos
xchg
pop
in
pushf
mov
sub
jb
add
mov
call
movsb
roll
insb
in
mov
movsl
and
lods
cld
adc
push
loopne
in
cmp
int
leave
cmc
lea
mov
fldt
mov
loopne
push
in
sub
fs
jns
faddp
ja
sub
addb
or
dec
movsl
xchg
cld
adc
imul
arpl
or
push
sub
fildl
fwait
xchg
in
cs
cmp
mov
outsb
adc
pop
push
mov
mov
mov
pop
adc
add
in
sub
jecxz
push
or
ds
jno
inc
add
movsb
xchg
jg
fiadds
jg
mov
xchg
adc
clc
nop
adc
xor
out
cmp
xor
add
mov
xor
mov
icebp
dec
mov
in
inc
aas
sbb
jl
jmp
sbbb
sti
xchg
fs
in
push
and
dec
inc
mov
cmp
inc
aam
ret
dec
fiadds
insb
fs
out
mov
xor
shll
cmp
in
cld
jbe
and
sbb
int
gs
sbb
in
ficoml
in
leave
stos
pop
jecxz
or
mov
mov
jb
add
mov
stos
dec
fldenv
clc
sbb
pop
pop
into
or
push
sbb
das
add
filds
cmp
add
cwtl
out
sbb
mov
pop
fwait
mov
cmp
in
iret
or
in
sub
pop
fsubp
out
jbe
movl
push
sbb
sarl
in
xchg
sub
mov
in
mov
call
in
dec
lcall
pop
js
mov
out
je
cmp
cli
jg
pop
push
pop
repnz
dec
mov
mov
ficoml
mull
sbb
out
and
shll
pusha
mov
pop
jecxz
xchg
sti
jbe
mov
or
cld
subb
in
adc
testb
in
out
mov
xor
repnz
in
movsl
push
cmp
insb
call
sub
cmc
repnz
sbb
and
sub
movsb
dec
dec
sbb
add
pop
nop
pmulhuw
test
inc
xchg
and
int
in
in
ret
in
je
push
dec
lock
lahf
cmpl
inc
mov
push
pop
cmp
jl
xchg
in
ds
leave
ret
notb
add
or
frstor
ret
jmp
cmp
lahf
sub
movsb
shlb
lret
ret
jl
int3
ljmp
in
pushf
jb
pop
cmp
and
xchg
push
xor
jge
mov
dec
and
dec
xchg
and
mov
nop
or
div
aad
cmp
movsb
loop
out
push
mov
push
aad
sahf
pop
xchg
mov
in
lea
dec
scas
insl
ror
in
test
adcb
cmp
pop
lcall
popf
test
jmp
inc
push
mov
mov
sti
inc
out
mov
lods
add
sub
hlt
incl
mov
sbb
push
push
push
jne
sbb
add
jae
xchg
push
xlat
add
fldenv
mov
outsl
push
jae
dec
mov
adc
cmp
lahf
ss
lds
sbb
mov
jo
or
xor
xchg
pushf
fs
out
jecxz
cmc
arpl
in
fistpl
mov
inc
push
fcmovnbe
or
cmc
sbb
jno
xor
movzbl
in
inc
sti
ret
pop
push
lcall
ss
in
aad
adc
sbb
pop
sub
jp
mov
push
xchg
cmpsl
je
mov
mov
pop
leave
or
outsl
mov
lods
pop
mull
pushf
push
or
push
push
and
sub
push
or
std
mov
mov
psrld
add
out
add
in
mov
push
push
xchg
in
cmp
dec
outsl
push
adc
pop
cmp
sub
jno
stos
sbb
dec
push
cmp
push
xor
in
push
aas
and
fisttpll
clc
popa
mov
lahf
ds
mov
mov
loop
outsb
mov
xor
fcomps
mov
call
dec
mov
jns
sub
aad
sbb
sub
xchg
movsb
mov
and
lea
pop
sub
dec
sbb
adc
clc
cs
cmp
add
ds
fisubrs
loop
je
ret
shrl
xor
loope
xchg
in
ljmp
lret
dec
aaa
scas
pop
cmp
aas
in
outsl
cs
jno
mov
cmp
rorb
adc
in
jnp
push
out
cmp
movsl
or
daa
in
mov
stos
push
pop
mov
in
sysexit
mov
xchg
pusha
in
dec
scas
mov
mov
leave
lods
mov
in
sbb
std
mov
cmp
xor
test
cmp
loop
dec
pop
test
in
cmp
cmpsb
scas
inc
lret
daa
das
scas
xchg
push
and
xor
ud0
ljmp
aas
in
or
loop
pop
sbbl
in
lahf
dec
inc
push
lods
push
scas
outsb
shll
bt
pushf
in
mov
ljmp
dec
xor
mov
adc
lret
push
in
inc
repnz
es
push
data16
cmp
test
fcmovnb
in
pop
cmpsb
mov
popf
jle
push
in
xor
jge
das
popa
sbb
sbb
cld
jae
in
mov
sub
pop
in
cmc
fcoml
add
clc
mov
dec
add
pop
in
xchg
inc
scas
push
pop
in
add
jo
push
pop
das
test
les
sbb
mov
sub
inc
cmp
test
in
lock
jl
xchg
in
fimull
or
sub
rcrl
xchg
int3
insl
repz
or
gs
in
and
loop
push
push
or
cmp
scas
lahf
mov
xor
adc
pop
sub
mov
pop
cmp
adc
arpl
ljmp
popf
into
xor
jno
in
xchg
int
cmp
js
movsb
stos
test
adc
in
adc
push
movsl
scas
cwtl
and
fwait
add
rcrl
mov
jns
in
setb
or
shlb
inc
ret
xchg
pop
repz
test
in
jp
lahf
pop
imul
mov
and
lods
ret
in
loope
das
fcompl
insb
into
in
std
imul
adc
in
mov
pop
inc
in
cs
scas
adc
insl
shll
push
das
in
mov
dec
mov
push
bound
nop
bound
shlb
cmp
mov
int3
jp
in
inc
loopne
in
in
das
adc
pusha
gs
sbb
jnp
and
sbb
mov
inc
and
xor
test
jge
loop
in
cli
adc
pop
lahf
mov
mov
imul
lods
ja
and
inc
jge
lods
dec
in
dec
divl
fistps
jb
pop
arpl
xchg
mov
movsb
dec
das
mov
push
hlt
xchg
in
mov
pop
in
lcall
or
je
mov
mov
lea
icebp
mov
and
xchg
push
in
push
jg
mov
adc
cwtl
data16
adc
cmp
or
cmp
in
in
xor
lahf
inc
in
es
jge
sbb
mov
in
sub
mov
mov
sub
add
add
cld
scas
int
and
add
movsb
sub
idiv
add
mov
imul
pop
mov
lahf
add
mov
idivb
dec
mov
clc
in
test
xchg
xlat
jp
scas
in
dec
add
in
add
lds
jl
sar
pop
imul
sbb
mov
lock
arpl
in
or
mov
cmp
mov
push
in
fmul
cmp
mov
jmp
xor
faddp
add
notb
add
out
fimull
cmp
sub
cwtl
sub
out
add
add
scas
shrb
aad
xchg
xor
or
pop
ficoml
bndstx
stos
cmpsl
rcrb
push
jae
xchg
lahf
mov
fwait
test
dec
or
push
xor
in
aad
subb
sbb
pop
in
or
sbb
mov
js
test
arpl
in
inc
mov
loop
cltd
in
ss
mov
es
xchg
cmpsl
xchg
fdivs
clc
lcall
in
xor
lds
mov
inc
add
cltd
xchg
leave
pop
jmp
adc
sub
lods
cs
push
mov
mov
mov
pop
push
in
or
jae
lods
push
loope
hlt
popa
mov
imul
cld
fstpl
jno
pushf
and
sub
xchg
mov
jp
lcall
sbb
sub
mov
dec
lock
dec
and
adc
in
adc
bound
loop
add
dec
xchg
and
in
xchg
xor
or
and
mov
mov
in
lods
out
sub
out
and
lahf
cltd
push
add
adc
std
inc
in
test
dec
sbb
add
mov
in
pop
int
jbe
xchg
frstor
scas
imul
in
repz
ljmp
jmp
xor
out
lods
loopne
and
sub
mov
loop
adc
sbb
fdivrs
xchg
inc
mov
imul
or
push
pop
mov
cli
dec
movsl
pop
stos
lods
sub
mov
jecxz
ret
gs
je
push
cmp
mov
ds
loope
inc
push
stos
adc
mov
mov
and
cmp
mov
jmp
push
enter
inc
jg
sub
bound
in
aas
je,pt
movsb
jns
dec
je
lods
adc
es
mov
adc
xchg
cmpsb
adc
lahf
sbb
xor
arpl
and
mov
in
sub
sbb
and
gs
mov
sub
test
cs
cmc
and
lods
aas
xor
add
repz
nop
pop
cld
dec
sahf
insb
out
insl
jecxz
das
jg
sub
lret
imul
stos
in
fdiv
inc
adc
cmp
in
adc
sub
insl
and
mov
aas
push
popf
unpckhps
mov
jne
adc
add
add
add
in
bound
stos
roll
and
sub
pslld
in
es
mov
cmp
in
clc
xchg
or
push
test
push
dec
out
sahf
fdiv
loop,pt
shl
data16
cmpsb
dec
pusha
push
lea
pop
sub
in
or
js
hlt
mov
cmp
aam
pusha
fucom
or
inc
dec
push
pop
mov
sub
add
rcrb
pop
and
loopne
test
and
xor
or
xchg
xchg
nop
fst
dec
or
in
sbb
add
dec
and
in
cmpsb
dec
inc
pop
daa
sti
and
out
sbb
in
je
in
sbb
and
sub
es
shlb
test
insb
jg
ljmp
cmp
mov
fcomp
mov
inc
imul
adc
scas
or
in
cli
xchg
or
mov
scas
hlt
adc
aas
in
test
fmuls
in
dec
or
ss
aad
mov
in
inc
cmp
jp
push
dec
adc
dec
in
icebp
out
adc
pushf
in
inc
rolb
aaa
das
add
jno
push
in
xor
in
push
push
sub
repnz
inc
cmp
dec
dec
add
push
in
xchg
mov
in
adc
push
scas
sti
mov
mov
add
int
stos
push
hlt
fs
out
jns
insl
push
adc
in
cmp
inc
hlt
mov
in
inc
daa
or
bound
xor
addr16
shl
out
std
sub
push
push
in
cmp
test
out
xor
mov
and
jb
pop
out
bound
movsb
enter
add
lds
mov
iret
js
sub
or
sub
das
insb
and
imul
mov
movsb
enter
lods
scas
cmp
mov
inc
pushf
xor
mov
decb
loope
sbb
je
xor
xchg
mov
add
dec
cmp
push
in
outsl
sub
cmp
mov
inc
inc
mov
add
and
out
xchg
stos
and
sbb
jne
scas
jno
sbb
xor
push
test
xchg
pop
imul
fstl
add
inc
cltd
sub
and
int3
test
test
in
scas
in
dec
inc
in
ss
and
in
test
and
jecxz
call
in
jbe
cmp
xchg
sub
push
jl
lock
les
sbb
push
ret
sub
push
idiv
popa
in
jl
invd
test
inc
in
les
and
add
lods
mov
loope
push
fimuls
xchg
sbb
testl
sub
mov
imul
dec
aam
in
xor
sti
inc
jns
in
dec
out
add
sbb
pop
jne
and
stos
dec
and
scas
in
mull
xchg
loope
push
jecxz
pop
sbb
pop
or
loopne
jne
sti
pusha
mov
les
enter
ret
adc
repnz
clc
mov
in
inc
xor
outsb
or
lret
in
mov
data16
ret
jecxz
pop
in
cmp
lods
dec
loopne
in
mov
mov
jg
mov
or
xchg
sbb
fs
and
repnz
or
adcb
adc
adc
jmp
push
jl
ret
in
dec
dec
jo
sub
ljmp
push
mov
add
fnstsw
in
and
das
test
in
push
jno
lahf
fimull
push
in
cmp
mov
in
fldl
jae
mov
push
in
dec
jle
push
in
decl
int
sub
adc
jne
mov
test
or
in
test
pushf
in
or
inc
out
data16
in
xchg
cmp
fwait
dec
xchg
das
mov
inc
lahf
and
cli
mov
iret
adc
push
or
fadds
cmp
pop
subb
stc
jns
dec
lret
add
js
cmp
sahf
in
loopne
pop
in
add
xchg
in
mov
dec
pop
inc
fdivs
and
push
aas
lahf
inc
in
mov
push
insb
mov
in
fmuls
dec
arpl
jno
bound
clc
add
scas
jl
jg
enter
repnz
sub
hlt
mov
adc
outsb
movups
rcll
movsl
in
push
insl
out
cmp
in
cmp
dec
popa
adc
fs
cld
cwtl
and
in
fisubrl
jae
movsl
mov
mov
mov
add
popf
fwait
iret
pop
xor
push
leave
lea
adc
sbb
fiadds
inc
aam
push
in
fcomip
mov
and
outsl
add
push
in
fisttpll
sbb
inc
sub
pop
add
js
cld
punpckhbw
fucom
enter
mov
jae
xor
push
int
dec
in
cmp
scas
jle
into
sbb
sbb
cmpb
movsb
cld
scas
push
sbb
inc
loope
fimuls
push
xor
pop
mov
xor
leave
pop
dec
and
scas
call
push
and
or
in
mov
dec
jbe
mov
inc
insb
dec
in
push
addr16
insl
in
scas
mov
pop
hlt
sub
mov
cmp
and
or
in
mov
pop
ljmp
in
or
mov
popa
adc
int3
mov
lret
test
std
in
lods
fldenv
jne,pt
mull
out
and
in
lahf
movsb
dec
hlt
popf
or
fs
mov
mov
sub
push
and
daa
push
scas
mov
testl
or
inc
xchg
sub
popa
in
std
sub
sbb
imul
movsb
mov
call
pop
imul
pop
mov
or
andl
out
repnz
fisubs
mov
xor
or
fsubrs
adc
testb
add
mov
std
push
fwait
insl
lret
cli
int3
push
dec
in
repnz
xchg
das
pop
xchg
out
in
xor
sbb
fsub
fs
scas
pop
daa
pusha
fidivrl
or
and
test
add
lcall
in
test
push
push
push
test
repz
or
or
inc
inc
cmp
es
cmp
call
jno
mov
push
push
adc
sub
outsb
scas
cmp
mov
movsl
stc
inc
mov
in
ljmp
in
inc
leave
inc
pop
out
iret
and
dec
xor
and
rcrl
add
scas
jecxz
out
pop
shl
lods
in
jge
mov
push
mov
std
push
adc
sub
int
mov
leave
inc
mov
or
push
cltd
and
cmp
hlt
sbb
and
dec
cwtl
in
in
mov
pop
sbb
jl
sti
sub
out
in
divl
inc
in
xchg
sub
push
mov
push
in
outsl
test
mov
xchg
or
or
in
xor
mov
hlt
inc
dec
push
push
and
repnz
push
lods
stos
push
in
hlt
cmp
je
mov
test
dec
or
and
out
out
in
push
sub
xor
rorb
loop
ljmp
rorb
jge
jg
popf
je
pop
mov
mov
xor
insb
sub
inc
in
jns
dec
pop
lahf
and
and
in
aaa
mov
js
lahf
vpcmov
pop
cmp
sbb
add
loopne
in
xchg
and
into
lcall
scas
or
inc
mov
pop
pop
xlat
stc
mov
movsb
push
sahf
sarb
in
push
push
jno
pop
and
adc
std
in
add
xchg
pop
lcall
in
or
sbb
sahf
aaa
mov
add
in
daa
loopne
idivl
add
in
inc
in
daa
add
lock
test
adc
repnz
lret
xchg
mov
sub
xchg
scas
in
fnstcw
xchg
pop
stos
push
in
dec
xchg
push
cs
in
add
jns
xor
in
lods
cmp
and
mov
xchg
sub
xor
jl
jecxz
in
pusha
fcomps
in
js
xchg
daa
sub
ficompl
add
rcr
mov
and
and
mov
mov
mov
in
add
inc
in
in
inc
pop
pop
cmp
in
lahf
hlt
faddl
sub
and
scas
and
into
mov
fs
gs
popa
push
sbb
in
cwtl
push
orl
xor
in
cmp
pop
iret
add
and
push
repz
shl
mov
lea
or
in
push
fisubrs
jg
push
adc
shrb
or
in
negl
rclb
rcrb
stc
jecxz
fistpll
sbb
adc
shll
in
std
insl
ficomps
roll
in
dec
push
notb
cvttps2pi
add
loop
in
js
fists
dec
mov
xor
add
subb
inc
setae
ss
pop
loop
inc
in
adc
xchg
sbb
dec
mov
push
sahf
mov
sbb
loop
data16
int3
pop
in
mov
out
aas
pusha
mov
insb
xor
lods
pop
push
mov
mov
ljmp
sbb
push
inc
loope
cmp
mov
fbld
add
cmpsb
xchg
call
ljmp
mov
scas
sub
xor
sbb
push
mov
add
ljmp
cmp
bound
mov
sbb
in
aas
in
or
scas
push
in
push
mov
mov
ret
cmp
out
add
sbb
outsl
in
adc
std
mov
xor
cmp
dec
sbb
add
dec
jbe
cmpsb
in
cmp
addl
pop
pop
xchg
pusha
dec
push
fcmovnb
sahf
mov
pop
sbb
int3
and
lahf
mov
in
clc
aad
push
dec
xchg
ljmp
ds
inc
add
cmp
and
es
inc
and
scas
fs
and
push
inc
adc
in
sub
adc
cmp
add
sbb
jg
adc
lret
in
push
xchg
push
mov
add
stos
mov
dec
imul
xor
cli
add
fnstcw
pop
sbb
fistl
in
mov
pop
jge
push
insb
add
outsb
in
mov
hlt
ret
lret
pop
aaa
adc
jl
inc
aad
fidivs
repnz
in
repz
dec
jns
in
mov
scas
push
sbb
dec
xor
das
dec
pop
shrl
push
arpl
fcomps
movsb
int3
in
out
cmc
cmp
mov
lds
push
mov
in
or
imul
iret
lods
xchg
mov
jl
out
pusha
in
in
inc
mov
aaa
in
mov
out
or
or
shlb
jp
insl
in
das
dec
fstpl
ljmp
dec
jmp
mov
add
dec
pop
shlb
les
inc
popa
in
icebp
xchg
xchg
adc
cltd
sub
dec
push
or
jae
nop
mov
in
jl
dec
out
in
jne
pop
out
inc
jnp
inc
imul
adc
fisubrl
fs
pop
sub
in
mov
adc
das
or
push
test
hlt
movsl
mov
sbb
aas
xchg
in
fnstenv
xchg
nop
lahf
test
in
mov
and
adc
les
fwait
and
and
test
out
push
and
add
pop
les
dec
pop
rcrl
sub
jmp
in
dec
mov
loope
lds
cld
push
xchg
mov
or
sbb
and
dec
dec
in
daa
aas
out
and
and
sbb
in
mulb
inc
jb
in
or
test
das
mov
adc
adc
adc
movsl
out
daa
sub
jbe
aas
pop
in
dec
in
sub
je
out
push
add
movsb
roll
sbb
icebp
ret
pushf
add
sbb
js
inc
add
inc
sub
stc
jle
xor
in
lods
int
and
inc
sti
scas
ja
mov
sbb
out
adc
sub
pop
push
bound
repnz
jle
push
scas
loopne
lock
in
or
mov
lea
mov
data16
mov
in
add
jo
addb
rcrb
pop
negb
lods
aaa
cmp
bound
sbb
push
adc
xchg
mov
pop
es
sbb
data16
pop
mov
pmuludq
cmp
inc
shlb
sbb
int
push
inc
push
in
fdivl
jno
add
adc
cmc
cs
mov
ret
incl
dec
repnz
scas
in
xchg
ret
pusha
shl
lret
ret
insl
pop
jno
into
arpl
mov
mov
ljmp
jg
mov
out
gs
cmp
jp
jle
mov
sbb
inc
mov
sbb
outsb
loop
jle
fs
in
fsubrp
push
add
sub
sbb
xor
mov
cmp
xor
xchg
pop
jns
xor
scas
and
movsl
or
jl
or
jne
xchg
outsl
xor
lahf
mov
in
cmp
es
xchg
repz
in
inc
or
dec
insl
out
in
add
imul
addb
out
pop
dec
pop
xchg
loop
in
loopne
insb
repnz
mov
outsl
orb
lahf
add
and
push
lcall
cmp
enter
iret
jle
insb
in
out
out
inc
inc
cmp
adc
push
and
xchg
scas
xchg
mov
test
ds
mov
test
jns
dec
daa
daa
mov
mov
mov
or
out
or
pop
mov
cmpsl
cmp
xchg
dec
rorl
cmpl
arpl
in
jg
cmpsl
mov
mov
and
mov
sub
in
and
popa
popl
pop
push
xor
negl
daa
sub
xchg
jge
dec
sub
xlat
dec
mov
int3
jae
std
in
push
xchg
xor
rol
sub
iret
or
xor
inc
dec
sarl
in
pop
dec
mov
cmp
aam
insb
iret
mov
adc
std
cmpl
push
sbb
lods
pop
pop
iret
mov
cmp
clc
mov
adc
in
fistl
add
in
out
mov
pop
push
incl
push
jg
in
or
sub
in
movswl
and
clc
subl
out
dec
sbb
mov
sub
inc
mov
xlat
sbb
int
pop
mov
call
mov
sahf
pminsw
xchg
in
lea
push
sbb
jg
mov
scas
or
in
xor
ftst
or
mov
jmp
rol
sub
sbb
inc
int3
fisttps
push
loop
in
cmp
mov
imul
fiadds
mov
mov
enter
outsl
loop
in
cs
jno
dec
dec
call
or
xor
std
mov
movsb
fs
pop
in
scas
stc
push
add
dec
and
and
iret
adc
sub
and
add
mov
dec
je
push
dec
mov
popf
outsb
test
popa
xor
mov
or
cs
sub
aas
lods
arpl
adc
sbb
pop
ror
pop
loope
in
movsbl
in
arpl
fisubrl
rcrb
in
outsl
xchg
pop
jmp
rclb
sahf
jg
adc
mov
lret
sbb
sbb
lea
or
add
xchg
in
aam
imul
sbb
sub
arpl
fcoml
call
and
shl
in
jb
mov
push
xchg
test
rorb
in
ret
lret
and
orl
pop
dec
scas
adc
push
push
xor
prefetch
in
jge
push
mov
or
int
pusha
mov
push
inc
push
adc
push
sti
sbb
and
in
and
notb
scas
into
sbb
leave
jmp
inc
add
push
fs
push
jecxz
xor
sub
pop
fisttps
mov
cwtl
andl
inc
cmpsb
cli
add
callw
in
fs
popf
insl
push
stos
sbb
test
int
outsb
dec
imul
mov
push
divb
bound
and
outsb
movsb
sub
rcrb
out
xor
sbb
sbb
jp
cmp
popw
out
repnz
das
jo
or
pop
add
jle
xchg
and
inc
cmp
adc
subb
in
enter
scas
dec
fs
cmp
in
pop
xor
in
in
pop
mov
movsl
inc
xor
push
in
inc
jae
sub
mov
test
mov
and
fcoms
jno
or
sbb
xor
mov
mov
test
stos
add
clc
sbb
mov
cmp
in
jmp
adc
in
out
and
aaa
mov
adc
pusha
jbe
outsb
mov
mov
jge
les
inc
stos
cwtl
out
in
inc
sub
jnp
sahf
in
sub
mov
out
in
cmp
repz
nop
vandnps
in
cmpsl
and
sub
cmc
and
cmpsb
xlat
or
push
das
xchg
and
adc
sbb
cmp
lock
mov
mov
and
xor
or
push
add
sub
fs
mov
inc
lea
mov
out
lods
sub
pusha
aas
in
movl
loop
mov
ljmp
test
lea
push
add
loopne
test
sbb
push
mov
leave
cmp
jae
das
sbb
hlt
test
sbb
test
and
fs
mov
lahf
push
mov
inc
mov
in
fidivs
push
sbb
fnstenv
in
or
fdivs
dec
inc
inc
in
int
xor
loop
dec
sbb
xchg
sti
cltd
xor
sbb
add
fcompl
add
flds
or
and
faddl
adc
js
add
loop
sbb
aam
add
jae
ret
mov
insl
popf
clc
xchg
stos
adc
or
dec
and
jp
or
xchg
fsubrs
fiaddl
and
or
out
jnp
jp
or
cmp
add
cmpsb
insl
pop
pop
rorl
adc
aad
subb
pusha
and
in
imul
sbb
ss
lret
lods
lret
xchg
idiv
dec
add
fnstenv
push
clc
cmp
cmp
test
in
ljmp
movsl
in
and
add
cltd
sub
mov
pop
sbb
in
das
adc
test
sub
test
in
and
mov
pop
inc
xorb
iret
in
or
xchg
push
sub
rorl
push
in
stc
sbb
testb
scas
lods
shr
aam
aad
in
test
out
in
test
push
rorb
out
cli
enter
in
mov
pushf
xchg
sbb
sub
fcompl
vmovups
xchg
or
insl
add
cltd
rorb
icebp
dec
out
fcomp
imul
mov
inc
add
pushf
sbb
in
dec
int
sbb
mov
pop
ljmp
stc
adc
xchg
in
dec
aas
sbb
loop
pop
cwtl
test
and
xchg
dec
xor
push
out
xor
nop
in
xchg
xor
aad
mov
push
adc
pop
cmp
mov
movsb
mov
cld
lods
sbb
add
pmulhuw
loope
xchg
int
mov
jmp
test
mov
aad
and
or
push
sbb
adc
mov
je
out
test
mov
movb
in
push
test
cmp
in
xchg
add
xchg
in
xorps
outsb
mov
aaa
ss
into
sarl
mov
daa
add
adcb
arpl
jmp
sbb
out
pushf
or
mov
mov
in
arpl
mov
in
dec
mov
sub
outsl
or
sbb
push
sahf
mov
in
jo
adc
adc
in
xchg
jp
repnz
mov
cld
fmull
or
push
fildl
testl
jge
add
xor
inc
mov
mov
cmp
mul
sbb
sub
mov
jae
or
out
js
sub
push
ret
or
out
jmp
xchg
dec
xchg
cmovne
sbb
repnz
iret
shlb
cmp
inc
lock
das
xchg
xor
sbb
dec
mov
xchg
fdivs
pop
cld
sub
dec
pop
repnz
in
add
aaa
in
xchg
and
in
fsubl
in
add
sub
jns
insb
in
mov
dec
mov
mov
and
pop
testb
ret
sbb
cmpsl
or
in
xchg
and
push
mov
adc
lahf
adc
pop
push
jns
out
test
dec
testb
cwtl
sbb
test
pop
xor
into
ret
mov
jg
in
les
mov
adc
incb
sub
cmp
or
jl
and
aam
in
sahf
add
insl
notb
cli
sub
mov
pushf
sbb
inc
pop
jmp
sbb
fs
and
notb
dec
aaa
mov
sbb
in
aad
dec
xor
mov
sub
or
stos
in
jmp
add
inc
cli
stc
and
movsl
rorb
mov
inc
in
fistps
out
test
ret
inc
sbb
cmp
inc
sti
cli
and
mov
shl
outsb
ljmp
inc
or
xor
and
sbb
and
xchg
aam
mov
in
out
or
sub
insb
pop
or
adc
inc
test
sub
mov
mov
xchg
lret
jns,pt
mov
das
mov
in
sbb
xchg
xchg
sbb
add
sub
push
inc
lods
fldcw
xor
cltd
in
test
stos
in
xor
lcall
in
leave
pop
jmp
xchg
dec
mov
sub
in
mov
adc
in
push
xor
mov
pop
cmp
and
fwait
jecxz
pop
inc
enter
ds
lea
mov
aas
dec
in
push
frstor
ljmp
mov
xchg
sbb
cmp
add
scas
out
into
cmp
shll
add
sub
xor
lret
sub
es
push
cmp
mov
jnp
xchg
mov
jg
sub
mov
daa
in
mov
int3
pop
pop
movsl
sbb
ret
test
rcr
ret
pop
in
int
in
xor
jae
in
adc
dec
in
xlat
or
stos
js
pop
mov
mov
push
sbb
iret
inc
add
mov
dec
or
sbb
ss
jmp
sbb
or
mov
std
push
out
pusha
and
push
mov
jle
xchg
loope
ds
testl
or
test
cmp
in
xorl
adc
scas
shlb
shlb
out
mov
dec
mov
daa
sbb
xchg
inc
clc
lods
pop
in
cwtl
jp
stos
repz
out
push
cmp
mov
test
cmpsl
dec
test
pop
in
jnp
test
push
jge
negb
fmull
ljmp
imul
out
and
in
dec
mov
dec
outsb
lods
int3
popa
xchg
or
fstps
cmp
sti
dec
fsub
push
jg
enter
fs
jno
sbb
or
test
lods
in
in
cmc
or
int3
dec
push
pop
mov
in
out
nop
testl
adc
pushf
inc
int3
and
in
jge
xadd
push
loopne
cwtl
mov
loop
ljmp
aas
shll
clc
outsl
inc
in
mov
mov
in
xchg
fdivrl
sbb
movsb
call
call
ja
sub
xlat
je
loop
in
in
or
adc
add
mov
xchg
cmpsb
jnp
ret
jo
push
stos
and
pop
fs
adc
cmpb
mov
push
lods
add
bound
pop
in
adc
mov
lret
out
xchg
popa
sub
enter
mov
in
mov
fs
cmp
popa
into
sbb
dec
ds
in
mov
push
and
stos
sbb
in
add
mov
test
nop
std
int
pusha
inc
sbb
adc
adc
push
imulb
dec
arpl
xor
in
lock
iret
mov
pop
imul
in
lods
inc
out
das
and
std
fisubl
mov
xor
cmpsl
enter
cs
stc
stos
insb
push
sbb
jne
pop
in
cld
pop
and
push
les
adc
lahf
in
in
inc
call
push
in
and
mov
movsl
fs
sbb
test
in
les
add
hlt
pop
or
scas
aaa
xchg
jp
shl
nop
in
xchg
mov
mov
inc
int3
in
or
movsl
cld
in
loope
ljmp
inc
adc
je
in
stos
xor
sahf
or
out
std
iret
dec
enter
push
in
in
into
jecxz
or
inc
js
sbb
pop
movsb
inc
cmp
testb
mov
pop
int
popl
mov
and
leave
push
ret
popf
push
and
rclb
arpl
lahf
cli
xchg
mov
cmp
jg
mov
dec
scas
and
in
shrl
jae
outsb
or
sbb
cs
ror
mov
or
addr16
lock
in
mov
gs
inc
cmp
add
mov
arpl
adc
adc
mov
xchg
negl
lods
lret
ret
dec
xor
ret
cmc
in
movlps
push
lods
in
jg
jge
xchg
xor
clc
sub
sbb
sub
pop
jecxz
std
mov
data16
mov
rolb
pop
lock
xchg
mov
xor
arpl
cltd
stc
aam
ds
imulb
mov
in
sub
jae
jp
mov
cli
into
call
int3
dec
shll
dec
or
iret
int
pop
xor
push
addl
in
fnstcw
lret
jo
mov
mov
mov
lods
jl
inc
popa
in
mov
xchg
outsb
popf
adc
jbe
inc
in
push
sti
push
pop
and
sbb
dec
jle
lods
fcomi
and
sbb
adc
cmp
add
mov
xchg
and
push
xchg
mov
jo
nop
lcall
into
lret
testl
sbb
mov
mov
push
out
or
dec
lods
and
push
in
push
pop
sti
mov
xchg
or
in
fsubrs
cmp
cs
push
in
pop
pop
test
xorl
xor
out
and
lods
mov
pop
pop
push
dec
in
push
ret
or
add
test
in
push
dec
dec
xchg
mov
inc
ror
in
or
fucomp
push
int
in
xor
xlat
scas
and
in
subl
and
js
push
push
sub
mov
add
jge
pop
lcall
push
aam
lcall
jnp
fwait
outsl
lret
cmp
call
pop
fldt
lock
lahf
xchg
push
mov
mov
xchg
jecxz
xchg
addr16
test
rcrb
push
dec
jl
lcall
scas
xchg
and
fisubl
insb
mov
mov
std
jle
in
dec
xlat
mov
and
sub
lret
mov
xor
cmp
and
in
or
sub
pop
mov
mul
je
sbb
sbb
jb
lret
mov
movsl
in
pop
cmp
dec
push
mov
out
mov
and
add
out
test
fnstsw
in
mov
pop
aas
pusha
mov
push
stc
xchg
dec
fstl
stos
in
or
in
fimull
in
dec
lock
adc
in
jp
pusha
ja
shl
inc
mov
adc
movsl
adc
movsb
pop
cli
outsb
enter
test
adc
mul
cwtl
out
out
jg
ja
loopne
push
mov
add
sub
or
jl
pop
in
push
fs
movsb
scas
xor
les
xrelease
mov
xchg
lahf
inc
int
sbb
hlt
pop
and
sbb
sahf
rcll
js
mov
sub
mov
cmp
out
in
lret
inc
mov
sbb
pop
or
inc
mov
sbb
sub
pop
in
roll
push
in
adc
repz
pop
sub
adc
and
ds
pusha
pop
enter
or
xchg
or
imul
imul
adc
inc
int
add
jmp
mov
clc
and
inc
adcb
cmp
fldenv
and
test
addsd
movsb
orl
out
pop
ret
mov
in
xchg
scas
insl
mov
push
popa
test
in
add
push
in
add
icebp
add
aam
outsb
cld
daa
mov
push
and
in
cmpsb
movsb
inc
aam
sar
xor
lods
cmp
xor
push
pop
cwtl
xchg
popa
in
inc
sbb
shrl
mov
in
mov
sub
push
add
sbb
mov
iret
clc
loopne
sbb
xorl
sbbb
push
mov
sahf
pop
xor
push
mov
sbb
push
dec
loopne
daa
ret
clc
cmpsb
add
mov
imul
movsb
and
mov
and
cmp
adc
int3
adc
xchg
sbb
adc
dec
or
lea
lcall
fdivl
pop
fsubl
outsb
dec
sbb
insb
cs
cmp
mov
loopne
or
clc
sbb
or
jmp
adc
mov
dec
jne
aaa
je
ficompl
push
pop
lcall
negl
insb
sub
js
fmull
ja
sbb
pop
xchg
mov
sub
rclb
fucomp
call
das
mov
push
addr16
inc
test
movsb
cmpsl
push
in
imul
lret
xchg
push
jno
dec
or
inc
in
stos
in
inc
cmpsb
push
mov
mov
clc
push
test
xor
and
aad
jl
mov
pop
adc
jmp
sbb
and
inc
pop
ss
cli
xchg
in
mov
add
in
aaa
jcxz
cltd
cld
pop
arpl
xor
fmull
data16
pop
sbb
je
sbbb
add
cmpsb
push
cmp
ss
and
inc
adc
fldt
or
in
mov
adc
add
or
or
push
xchg
inc
and
inc
loop
lods
shll
pop
sub
and
nop
sbb
in
es
int
iret
mov
sbb
fsubp
prefetcht1
ret
mov
in
and
in
in
cmp
sbb
xlat
and
cmpsb
fs
mov
add
push
and
jno
lahf
aad
scas
loope
mov
xchg
sbb
pusha
aaa
in
sahf
je
int
cmp
outsl
mov
mov
xor
cltd
or
adc
jno
rorb
push
and
inc
mov
mov
ret
loopne
rorl
lock
sbb
push
pop
sub
adcb
fs
xchg
mov
scas
add
adc
or
pushf
jae
arpl
cwtl
lock
out
shlb
cmp
clc
sub
iret
mov
sbb
popa
sbb
std
inc
js
push
in
jg
pop
test
lds
adc
or
in
sbb
std
fsubr
rcrb
leave
push
push
pushf
into
test
insb
and
dec
xor
or
adc
xchg
adc
pop
sub
adc
add
cltd
adc
push
stos
outsb
push
bound
adc
in
jnp
ret
loope
dec
jl
in
mov
je
fs
pop
mov
mov
btc
mov
rclb
cmp
add
pop
mov
in
or
jp
and
mov
cmpsl
in
push
in
aad
mov
and
rolb
sub
or
in
jmp
cwtl
adc
pop
lret
in
xchg
xor
scas
gs
mov
cltd
enter
dec
and
aas
loopne
movsb
xchg
xchg
shll
sbb
pop
pop
add
js
sub
fwait
xor
fs
jecxz
xor
lret
xchg
pushf
fs
fld
and
je
mov
iret
sbb
in
mov
int3
push
inc
sarb
inc
ds
mov
rorl
and
into
xor
sti
jl
test
outsl
fs
roll
jecxz
imul
and
and
sbb
jae
and
xchg
push
adc
mov
repz
add
andb
cmp
push
ret
sbb
repz
ret
xchg
out
aaa
push
pop
into
inc
xchg
sahf
sbb
pop
pop
and
stos
inc
repz
xchg
mov
lahf
addr16
mov
xchg
or
int
in
or
pusha
mov
push
inc
out
add
and
xchg
ss
xchg
stos
imul
mov
cltd
dec
mov
pop
mov
or
mov
mov
jo
or
arpl
rorl
movsb
pusha
push
adc
add
cltd
xlat
and
mov
repnz
cmp
lret
xchg
push
cmp
out
imul
movsl
sub
movsb
and
push
iret
dec
mov
lea
adc
in
popa
xor
push
out
mov
inc
in
mov
mov
or
out
cwtl
lds
sub
pusha
mov
je
mov
shlb
in
dec
fcomps
insb
push
sbb
movsb
leave
sub
inc
bound
adc
xchg
sbb
or
pop
fs
insl
push
loope
int3
gs
in
xchg
es
out
cmc
sbb
jge
imul
jno
xchg
pop
add
shr
adc
jp
out
and
cwtl
pop
sahf
mov
aam
xor
add
rolb
xor
popl
movsl
sbb
add
andl
in
inc
pop
std
insb
es
sbb
sbb
and
loop
or
jbe
xchg
movsb
xchg
push
sbb
imul
in
push
cmp
cld
insl
out
or
insl
and
pushfw
in
lock
xlat
push
in
xor
mov
fwait
test
add
das
call
sub
data16
xchg
sbb
push
lret
je
jecxz
fs
scas
aaa
inc
inc
mov
fs
pop
xchg
js
in
cld
adc
out
mov
ljmp
das
sbb
gs
lods
dec
xchg
cmp
and
sbb
dec
mov
in
push
jge
enter
in
cmp
fmuls
dec
cmp
fnstcw
sahf
int
lea
rolb
out
and
mov
jne
filds
add
in
mov
popa
fldl
dec
add
pop
in
dec
lods
inc
xor
adc
lea
sbb
mov
push
in
lods
dec
lret
add
std
sbb
shll
repz
mov
mov
das
aam
sbb
mov
cmp
inc
lock
push
push
in
pop
in
cs
pop
pop
mov
push
mov
in
adc
cwtl
xor
push
cmp
test
js
and
das
dec
incb
cld
adc
movsl
testb
aam
lds
jns
jl
mov
mov
fstps
jge
scas
icebp
loop
int
mov
andps
mov
inc
aas
in
repz
sub
ss
in
and
outsl
in
cmc
test
cmp
std
push
sbb
adc
fs
jle
in
pushf
cmp
in
inc
sti
push
test
mov
clc
add
in
addb
sub
mov
or
sbb
mov
lret
lret
pmulhuw
push
pop
xlat
sbb
mov
cmp
daa
cli
jg
jbe
and
inc
sub
jmp
dec
in
das
pop
cli
sub
jle
sub
inc
mov
in
cmp
pop
dec
nop
mul
add
or
lea
cmp
push
repnz
or
cmp
das
icebp
les
ja
mov
shlb
stc
dec
test
adc
outsb
sbbl
dec
outsl
mov
and
and
mov
sub
cld
out
addr16
mov
insl
jno
mov
ficomps
dec
nop
add
mov
in
fwait
add
out
sbb
lds
popa
fwait
in
fabs
adc
out
in
mov
ljmp
inc
insb
push
loop
movb
fldl
addr16
in
or
enter
das
in
bound
into
daa
pop
out
insl
jne
fnstenv
xchg
mov
test
adc
mov
insl
cmp
addl
outsl
and
out
mov
sbb
imul
cmp
inc
shrb
std
or
cmp
outsb
xor
out
pop
cltd
sub
xlat
fcomps
das
movsl
and
lea
jmp
in
incb
mov
pop
in
into
adc
in
adc
xor
or
mov
icebp
into
sub
in
test
in
and
notb
int
sbb
and
fs
stc
into
sub
sbb
mov
out
and
push
and
jo
loop
das
divb
test
scas
insb
jp
xor
lods
mov
insb
jle
and
std
setno
and
mov
pmulhuw
add
cmp
dec
push
or
call
push
shll
mov
or
test
fs
sub
pusha
in
call
into
int3
in
push
and
add
fadds
in
pop
push
scas
push
add
out
and
fs
mov
lock
push
in
lahf
out
xchg
dec
inc
dec
imul
push
or
add
in
int
and
jne
and
insl
addr16
sbb
sbb
shlb
sbb
add
test
jno
cmp
outsb
jg
mov
shld
lret
out
jne
in
mulb
inc
in
mov
ljmp
sbb
loop
jnp
push
xor
iret
sbb
or
imul
lea
sub
in
sub
sub
in
idivl
arpl
adc
cmp
mov
nop
sbb
in
pop
jmp
scas
repnz
push
fiaddl
in
cmp
sahf
xchg
xchg
xor
enter
test
adc
jge
mov
push
mov
jnp
mov
adc
movsl
mov
stc
cltd
sbb
push
cli
push
decb
in
jno
add
insb
cmpsl
adc
fs
stos
cmp
sub
jmp
int
pusha
inc
adc
fsubrl
xchg
in
ljmp
mov
fwait
out
lock
in
test
sbb
aam
xorb
mov
in
out
and
jo
sub
ljmp
in
jbe
mov
xchg
fstps
call
jecxz
pop
fs
xchg
in
adc
mov
sbb
inc
jmp
in
in
aas
call
in
lea
cmp
popf
adcb
loop
xlat
fisttpll
scas
cmp
arpl
in
adc
das
and
dec
sub
sahf
sub
ret
rorb
push
outsl
push
cmp
popf
into
and
mov
fcomps
jmp
and
xor
xor
in
pop
cmpsb
ljmp
add
sbb
loope
aas
test
xor
movsl
popa
cmp
in
mov
jmp
dec
js
dec
out
clc
loop
ljmp
fdiv
adc
movsb
inc
cmp
adc
add
cmpsl
sbb
in
jle
ljmp
sbb
pop
mov
or
sbb
popl
dec
iret
sbb
add
je
sub
inc
enter
cli
repnz
in
into
popf
cmp
in
dec
lods
das
iret
push
sub
lret
and
and
xor
cs
in
outsl
int
popf
imul
fs
dec
sub
in
sub
push
dec
mov
in
pop
fwait
dec
loop
test
xchg
movsb
das
inc
inc
cmp
sub
movlhps
inc
sbb
test
xchg
sbb
inc
sbb
jg
and
jmp
das
in
add
lea
cmp
jne
les
sub
push
mov
das
sbb
ret
rep
outsl
hlt
pop
in
mov
idivb
mov
popa
out
lods
pop
in
and
ficomps
mov
aam
jmp
inc
insb
cs
into
test
sbb
pop
adc
pop
push
arpl
adc
add
iret
scas
or
push
jl
popf
in
xchg
es
sub
cmp
or
push
pop
add
in
add
in
sub
dec
add
ds
pop
add
xor
pop
lahf
rcrb
call
cltd
in
xlat
repnz
ret
push
imulb
adc
les
cmpb
lcall
jne
lods
scas
ret
in
fildl
mov
dec
inc
jns
dec
repnz
sbb
outsb
out
mul
xor
aas
sub
adc
inc
push
push
das
in
mov
insb
mov
inc
push
sub
lcall
nopl
lods
or
loop
in
sub
sub
out
pop
mov
pop
mov
cltd
dec
in
xchg
cwtl
and
mov
xchg
repnz
call
in
cmp
or
dec
xor
cli
stc
repnz
and
enter
movb
sbb
xchg
pop
jo
mov
pop
mov
out
dec
add
push
mov
adc
pop
in
lock
pop
and
sub
sbb
cmp
movsl
inc
lds
push
in
jle
je
cwtl
lahf
fwait
in
mov
mov
pop
in
fidivrs
jmp
test
into
in
sbb
ljmp
outsl
loope
pop
mov
jg
in
popf
cmp
adc
enter
mov
insb
sbb
in
sub
fistpl
ret
jmp
call
ror
dec
pop
fistl
and
sub
ljmp
mov
insl
punpckhbw
sti
lahf
or
out
xchg
add
mov
repnz
negb
cli
movsl
pushf
lahf
add
sbb
adc
mov
pop
repnz
movsb
lahf
inc
into
out
lea
in
lret
sub
mov
or
jecxz
es
xchg
pushf
sub
and
mov
push
xchg
and
pop
insb
push
lods
jbe
test
or
inc
and
jmp
arpl
dec
sub
mov
int
dec
ret
iret
sahf
in
cltd
or
int3
mov
in
mov
sub
xchg
ja
decl
jbe
pop
adc
sub
and
pop
cmp
in
jae
mov
cs
dec
ljmp
sub
ret
sahf
aas
inc
subl
xlat
sbb
repnz
int
ss
mov
cmp
fbld
out
sbb
iret
das
cmc
or
insl
push
fiaddl
and
cmp
lods
dec
subl
adc
push
inc
ret
in
add
lret
ljmp
pusha
sbb
in
dec
jg
or
dec
or
dec
div
enter
jb
mov
les
in
fcomps
and
adc
cmp
adc
cmp
ljmp
sbb
sbb
fnsave
je
fsub
sbb
popa
cmp
sbb
ljmp
movb
iret
adc
fs
popf
dec
mov
aam
mov
add
int3
sbb
dec
bound
call
out
mov
fs
loope
insl
in
lahf
aas
pop
sub
and
clc
outsb
add
sbb
mov
mov
or
jnp
add
ficompl
jge
testl
in
leave
or
dec
lret
in
mov
loop
cmp
inc
in
scas
or
shl
insl
add
mov
popf
es
in
xor
jg
mov
loopne
sti
in
dec
mov
out
add
in
dec
jnp
fnsave
pop
in
sbb
add
leave
je
dec
ja
sbb
jae
lret
popf
dec
pop
mov
movsb
adc
hlt
cmp
in
mov
mov
cmp
loop
enter
dec
sbb
mov
in
jp
xchg
hlt
clc
add
pop
push
incl
std
sarb
les
sbb
dec
les
nop
push
or
data16
mov
jne
ficoms
test
int
cltd
in
jns
pop
mov
push
sbb
pop
fidivrs
inc
pop
jmp
sub
arpl
sbb
loop
lea
add
inc
jb
aas
sub
in
pop
adc
and
into
lds
lsl
dec
cli
in
add
stos
and
je
sbb
daa
xor
cmp
add
in
aas
or
in
fadds
pop
in
push
dec
push
in
adc
das
cmp
and
and
inc
inc
out
mov
in
bound
insb
das
sub
loop
in
mov
mov
in
or
dec
negb
enter
xchg
dec
add
test
mov
ljmp
mov
pop
sbb
cmp
jp
sti
cwtl
stc
dec
mov
jg
out
add
leave
mov
add
xchg
ret
inc
dec
hlt
int
in
adc
sahf
lods
aaa
adcb
xor
mov
dec
fistps
jne
inc
pop
outsb
sub
sbb
xchg
mov
fistps
loopne
pop
ljmp
pop
sbb
pop
sbb
mov
fnstcw
int3
or
ret
mov
sbb
rorl
push
in
aaa
test
and
scas
ljmp
hlt
jne
into
pop
aad
cs
xor
lods
aas
add
push
cmp
cmpsl
pop
into
cmpsb
xchg
xor
sbb
add
loopne
sub
cli
out
xchg
push
in
sbb
cmpl
in
ret
call
adc
jmp
adc
pop
sbb
push
add
scas
dec
leave
mov
cmpsl
jne
ret
enter
inc
xchg
jmp
aas
add
xchg
xchg
out
sbb
jae
daa
loop
mov
and
sbb
xor
mov
adc
test
jns
outsl
iret
mov
shrb
sbb
mov
jg
ja
xchg
fld
pusha
call
jmp
xor
sbb
adc
das
daa
mov
sbb
jne
imul
dec
and
sbbl
sar
in
sbb
xor
je
sub
sbb
les
sbb
push
insb
pop
in
pop
sub
pop
xlat
cmp
mov
or
sbb
popl
fcmove
pop
popf
inc
in
add
out
shr
mov
cli
adc
mov
jno
in
push
outsl
sbb
aaa
inc
and
mov
pop
xor
cld
aas
in
mov
into
and
test
push
mov
adc
and
and
adc
mov
mov
jp
aas
in
cmp
dec
fildll
jns
in
ds
mov
icebp
divb
out
xchg
push
lcall
andl
mov
lahf
out
fs
adc
mov
jns
add
in
popf
push
mov
sub
push
lahf
cmp
dec
aaa
movsb
inc
cld
incl
sbb
test
in
add
mov
in
data16
fs
adc
pop
add
add
ret
pop
push
out
mov
in
int3
fs
sbb
in
jge
cmp
xor
add
add
mov
inc
and
mov
sbb
push
popl
repz
fiadds
sub
sbb
adc
pop
adc
aaa
mov
sub
dec
cli
in
lods
insl
dec
cmp
inc
mov
outsl
ficomps
into
sbb
aad
mov
xchg
pop
fnstsw
cli
sub
sub
ljmp
xor
in
out
adc
mov
pop
in
sub
inc
sbb
mov
fcmovnu
sub
jmp
jg
mov
repnz
cmc
inc
clc
inc
loope
add
lahf
sahf
inc
pop
lock
in
pxor
sub
dec
in
lea
sbb
cmp
adc
push
in
popf
jnp
clc
out
fwait
xor
in
mov
adc
dec
xlat
in
inc
xchg
and
in
inc
sub
lods
jge
jne
or
cmp
sub
rolb
and
mov
shr
or
test
mov
sti
loop
jne
lock
addr16
mov
aam
aad
adc
in
negb
xchg
cltd
in
pop
push
pop
mov
pop
mov
push
dec
js
test
or
jns
in
adc
sbb
ret
lods
mov
push
and
or
lcall
roll
or
negl
jge
mov
aad
ret
dec
add
aaa
fistpl
xor
mov
dec
addr16
push
je
popa
movsb
pop
or
push
adc
and
in
movsl
es
in
cmp
aam
outsb
test
mov
in
test
mov
adc
inc
in
loop
jae
add
mov
insl
std
in
sub
inc
xchg
out
test
and
cli
mov
jbe
xchg
and
sbb
jnp
sbb
sub
in
xor
xchg
out
out
negb
pop
cmp
inc
ret
test
push
in
sahf
int
jns
ret
lods
pop
addb
pusha
sbb
cmp
mov
mov
pop
dec
mov
add
sbb
mov
adc
sbb
test
es
and
push
add
pop
or
arpl
or
cmp
xchg
add
and
mov
sbb
jns
cli
and
out
add
push
sbb
mulb
fistpll
xor
jb
or
iret
xor
in
push
js
push
or
in
out
cmp
adc
imul
xchg
scas
sbb
pop
js
cli
mov
test
push
jo
ret
into
fs
test
cmp
dec
dec
cwtl
sbb
inc
push
lret
out
cld
push
mov
add
xlat
or
xor
xor
xorl
sbb
rcr
and
cmp
enter
loop
jnp
stos
cmp
adc
inc
dec
add
or
loope
movsl
adc
and
push
fiadds
in
dec
es
adc
adc
pop
rol
lock
in
cmp
in
sub
xchg
or
loopne
push
and
in
dec
outsl
out
gs
push
adc
popa
scas
jns
fs
mov
inc
mov
xchg
loop
fs
mov
in
inc
sub
add
loop
lock
idivb
xchg
push
das
test
and
adc
or
mov
scas
and
mov
xor
cmp
inc
pop
repnz
mov
xor
sbb
cmp
jne
fs
inc
inc
testb
sub
or
sbb
in
aaa
mov
inc
fsts
movups
pop
push
add
or
adc
add
jmp
mov
push
cld
add
pusha
sbb
xchg
push
and
inc
cmpsb
xlat
jle
imul
dec
xchg
lea
jae
js
or
ret
aas
add
push
arpl
in
enter
jmp
jp
xor
sub
pop
adc
in
fistpl
cld
loopne
mov
mov
in
pop
mov
scas
xor
mov
pop
xchg
repnz
add
mov
std
mov
cmp
sbb
sub
pushf
in
clc
xor
jl
mov
fwait
inc
in
pop
or
add
test
aas
hlt
adc
add
xchg
adc
fcomip
and
pop
jnp
and
in
pushf
out
addr16
xor
in
lret
lcall
cld
lret
mov
mov
adc
lret
sbb
imul
push
mov
enter
or
test
in
mov
jl
in
out
aad
idiv
add
add
sarb
push
and
sbb
lock
imul
pop
fs
adc
cltd
jge
xchg
inc
mov
sub
je
xor
or
dec
xchg
xchg
movsl
insb
jne
mov
mov
adc
mov
push
repz
pop
and
ljmp
adc
mov
or
xorl
jecxz
adc
test
dec
mov
or
xchg
lret
test
add
lock
loop
fistps
into
mov
rcrl
scas
push
adc
stc
sbb
popa
cmp
in
loope
dec
dec
test
sbb
mov
and
les
push
ffreep
or
mov
in
ja
push
mov
sub
xchg
in
nop
jl
shlb
mov
enter
cltd
push
imul
in
sub
in
dec
adc
cmp
movsl
jg
cmpsb
stos
in
mov
xchg
push
mov
mov
sti
insl
mov
mov
icebp
scas
push
mov
test
or
movsb
lock
sbb
movsl
rcrl
jns
lods
sbb
lahf
sbb
fbld
fcomps
in
cltd
cmp
stos
xor
pop
inc
in
les
cmp
lods
test
aad
test
in
scas
and
pushf
jecxz
test
push
out
and
mov
inc
add
repnz
scas
shlb
imul
imul
stc
xor
add
push
mov
inc
sbb
lods
into
pop
addr16
xor
scas
sbb
cld
mov
pop
dec
je
in
sub
sub
es
pop
in
push
fisubrs
or
pop
scas
lods
mov
add
jb
or
push
aam
adc
inc
lcall
mov
insl
push
dec
lods
scas
in
dec
mov
add
inc
aas
dec
jb
sbb
out
les
sub
push
sbb
mov
je
pop
xchg
xor
xchg
sbb
sqrtps
lret
fmull
mov
ror
push
in
test
mov
cld
inc
in
ljmp
in
pusha
por
test
dec
cmp
xor
mov
movsl
in
hlt
or
fs
cmpsb
loop
in
ret
push
arpl
int
inc
mov
repz
xor
rclb
mov
or
faddl
lds
inc
cli
mov
adc
mov
xor
orl
mov
or
sbb
mov
inc
insb
les
pop
mov
mov
dec
fdivrl
mov
aaa
adc
inc
mov
and
nop
pushf
addr16
in
fnsave
dec
pusha
inc
sbb
int3
mov
sarb
dec
mov
mov
mov
test
in
sub
in
cmpsl
xchg
fnsetpm(287
xchg
add
mov
mov
sbbb
sbb
jb
rolb
or
notl
jnp
shrb
adc
in
arpl
es
cmp
aad
xchg
and
and
xlat
mov
push
jecxz
inc
push
mov
pusha
outsb
xor
hlt
sub
xor
pop
adc
loopne
jnp
clc
dec
jns
pop
add
mov
in
sbb
mov
fsubr
shlb
sbb
loope
imul
out
pop
fs
sbb
adc
mov
or
pop
pop
sbb
mov
dec
cwtl
in
fsts
es
xchg
sbb
sbb
stc
mov
adc
in
inc
mov
lret
sub
sbb
push
call
jbe
inc
decb
pop
hlt
insb
add
jns
adc
call
fsubrs
lahf
pop
ja
lds
dec
jg
pop
push
pop
lcall
cmp
pop
scas
pop
fstpl
and
push
ljmp
insb
xchg
bound
mov
loop
mov
test
mov
sahf
in
xchg
dec
in
mov
shrb
dec
loope
xor
dec
sbb
mov
fildll
clc
cli
lret
push
cmp
arpl
push
mov
pop
daa
and
int3
insb
or
cmpsl
shll
in
hlt
mov
js
push
jae
cmp
add
jbe
pop
mov
fs
outsb
syscall
inc
fnsetpm(287
roll
cltd
push
int
mov
fbld
in
into
out
pop
call
mov
lods
dec
popa
inc
sub
aaa
push
dec
pop
arpl
je
in
lea
xor
inc
andl
fbstp
jmp
and
dec
dec
jge
pop
daa
insl
xlat
in
cli
cmp
add
js
movsl
mov
pop
inc
loope
in
bound
and
cmp
dec
cmpsl
cld
xchg
xchg
push
push
sub
lahf
cmp
jo
sbb
sbb
fsubrl
test
in
mov
shlb
sbb
push
mov
jns
shlb
fs
cld
fcompl
daa
les
cmc
in
push
scas
test
out
sbb
adc
push
out
xchg
in
popl
and
cmp
adc
int3
mov
sub
mov
push
mov
xchg
fs
fcomps
add
adc
sbb
jbe
sub
jecxz
shl
cmp
or
insb
dec
outsb
and
mov
push
fisubrs
cmp
nop
test
mov
in
or
sbb
xchg
pop
or
rolb
xchg
in
repnz
pop
add
pusha
cmp
push
das
stc
jmp
jnp
sbb
ss
jmp
and
xor
stos
cltd
fldl
in
push
test
mov
jbe
loope
sbb
adc
pop
cmpsl
push
aaa
sbb
in
push
pop
add
dec
jnp
in
push
ret
cmp
lcall
ret
push
je
in
mov
addr16
in
dec
sahf
das
push
in
fisttps
sbb
ficoml
adc
test
sub
mov
in
or
fimuls
negb
mov
sub
in
in
test
inc
xchg
loop
int3
in
cmpsl
jp
sub
adc
sbb
xchg
or
push
inc
or
add
push
dec
jmp
push
adc
xchg
and
xor
daa
sbb
movsb
xchg
sti
xor
lea
cmp
in
notl
cmp
xor
or
jb
dec
sbb
in
cmp
dec
mov
lock
cmpsl
mov
insl
nopl
adc
gs
mov
sarl
bound
adc
mov
mov
adc
das
inc
clc
fs
std
sahf
int
sbb
push
aaa
dec
les
testb
push
arpl
loopne
int3
mov
test
sub
sahf
in
nop
lds
cmp
pop
into
in
test
loop
add
adc
mov
or
lock
cmp
sbb
and
inc
cmpsl
fs
mov
clc
pop
or
cmc
out
jle
xchg
fsubrl
decl
inc
imul
and
les
sub
push
mov
pop
loop
push
bound
fstps
enter
inc
xchg
negb
mov
xor
push
fadds
mov
outsl
pop
or
pop
mov
cmp
imul
adc
and
inc
icebp
fwait
xor
cmp
pop
imul
mulb
mov
pop
and
jnp
or
in
push
das
fiadds
out
pushf
lods
in
sbb
fs
fsub
sub
add
inc
incl
or
push
aas
out
jno
sbb
or
fsub
cltd
push
cmp
add
jne
mov
ret
sbb
and
sub
lret
mov
in
inc
mov
push
adc
push
in
mov
cs
popa
jne
data16
sbb
rcrb
lock
arpl
jo
and
movsl
fcmovnu
jg
push
pop
mov
add
inc
mov
push
sbb
imull
mov
inc
mov
mov
sub
adc
adc
setae
mov
mov
daa
movsb
stc
pop
xor
push
lret
sub
call
xor
test
and
daa
mov
fs
insb
pop
jnp
jl
arpl
mov
dec
sbb
ljmp
imul
fstps
cmc
fdivs
sub
adc
jb
hlt
push
arpl
in
and
in
adc
stos
or
add
cmpsb
cli
adc
and
pop
mov
pusha
sbb
ret
movhps
das
or
sbb
cmc
xchg
into
popf
int3
and
mov
les
inc
jo
sub
pop
out
movsb
jl
enter
inc
data16
mov
mov
jne
movsb
and
pop
xchg
stos
fsubs
mov
push
mov
in
pop
push
cld
or
mov
add
in
lahf
pusha
jnp
inc
in
mov
rorl
xor
in
push
in
cmp
push
mov
cs
or
loop
out
pop
add
pop
cld
pop
sahf
or
mov
std
rcll
ja
je
mov
jmp
pop
and
out
push
in
jo
decl
fimuls
add
sub
adc
sub
and
fwait
sub
in
jne
jge
int
out
in
xchg
inc
or
or
push
sahf
cwtl
lcall
jle
lcall
in
mov
inc
push
adc
shll
mov
iret
enter
aaa
pop
push
sbb
pop
cmp
mov
dec
in
fucomi
sbb
in
test
jg
lea
cmp
or
mov
jb
clc
das
roll
mov
in
mov
into
inc
loop
aad
leave
jae
push
push
xchg
mov
in
adc
mov
cmp
push
movl
mov
mov
and
out
in
push
in
sub
addr16
push
mov
aas
pop
xor
loopne
stos
or
jge
xchg
dec
lods
and
in
jle
mov
push
jne
out
sbb
cltd
add
and
xchg
mov
cmp
mov
jno
xor
in
inc
sbb
nop
popf
aad
push
jp
scas
and
add
insl
clc
call
sar
fs
xchg
lahf
sub
cltd
loopne
add
mov
pop
jecxz
dec
jmp
jp,pt
dec
in
dec
ja
or
and
in
in
dec
scas
pop
cmp
int
in
mov
jl
in
cmpsb
or
in
ret
sbb
cmc
fs
je
push
cmp
add
in
inc
int
les
mov
push
lock
sub
pusha
andb
mov
push
cmp
lret
adc
add
mov
inc
in
sub
add
mov
jns
sub
jecxz
adc
repz
or
loope
jg
mov
insb
jae
adc
fisttpl
xchg
cltd
in
mov
jb
faddl
iret
jae
test
cmpsl
sahf
dec
adc
sub
dec
and
and
sbb
sub
dec
arpl
in
stc
imul
push
pop
pusha
movsb
cmpl
sbb
js
push
mov
cmp
xchg
cmpsb
decl
hlt
in
ret
mov
adc
jbe
sbb
or
dec
scas
sbb
mov
je
dec
sbb
jo
sub
push
stc
fmull
aad
xadd
mov
movsl
in
enter
idivl
push
pop
mov
cmp
pop
in
mov
pusha
insl
ja
cmp
push
mov
stos
rcrl
sarl
aam
scas
mov
in
fisubrs
aaa
add
and
in
outsl
lcall
bound
movsb
das
add
iret
loopne
aas
sub
subb
mov
pop
xchg
test
cmp
push
lret
and
jle
xchg
inc
mov
or
sbb
and
in
addl
insb
cmpsl
cmp
in
or
lods
fcomps
testl
sahf
ljmp
popf
jmp
in
adc
sbb
push
xchg
sbb
sub
insb
in
fincstp
mov
lods
dec
in
shlb
test
xchg
sbb
test
fs
push
fstl
or
les
fimull
sbb
loopne
jb
pop
sbb
in
lock
out
and
mov
int
push
std
adc
in
dec
out
inc
sub
pop
and
fstpl
call
in
outsl
aad
loope
xor
ljmp
fisttpll
in
aad
je
add
mov
ja
jb
and
sbb
int
sub
in
xchg
adc
add
out
ljmp
push
aaa
les
in
fstpt
in
jbe
mov
test
jno
sub
imul
outsb
shll
int
lret
mov
movsb
in
dec
add
sbb
popf
gs
or
ret
sbb
out
lods
push
test
loope
cmp
imul
dec
enter
cmp
in
dec
cli
mov
in
mov
lahf
lock
pop
es
push
iret
adc
hlt
fs
test
jp
inc
mov
in
push
and
in
xor
sbb
xor
push
sub
int3
mov
cmp
xchg
outsb
std
mov
out
js
ret
jae
cwtl
popa
push
push
rclb
int
cmpsl
pop
ja
and
xor
rol
in
push
cli
mov
mov
ret
pop
push
adc
or
mov
push
jp
mov
adc
gs
mov
mull
insb
xchg
xchg
pop
sbb
jb
jmp
jge
push
enter
mov
ret
mov
in
sbb
mov
sbb
pusha
jl
xlat
pop
xchg
loop
dec
in
outsl
add
add
arpl
fcompl
dec
ficompl
out
js
jge
in
pop
clc
lock
add
in
inc
lret
in
mov
sbb
in
xchg
mov
xor
icebp
add
in
sub
or
xchg
adc
imul
adc
lods
scas
jmp
adc
lock
fistpll
clc
mov
ljmp
or
es
sub
in
shlb
mov
push
inc
loope
inc
pop
lods
data16
push
and
insl
and
pop
mov
mov
shl
movsb
js
or
dec
imul
sarl
cs
lahf
loope
add
mov
cli
xchg
fmuls
adc
cmp
mov
and
imulb
in
in
inc
clc
testl
and
aaa
sbb
cmpsb
push
adcb
rorb
xor
lods
inc
in
daa
add
gs
pop
jmp
fistpl
es
scas
mov
xchg
pop
push
lods
cwtl
sbb
arpl
push
repnz
mov
xchg
cwtl
pop
insl
out
rolb
shrb
and
jae
jo
cltd
mov
adc
in
mov
adc
bound
jbe
jmp
ss
jg
in
push
xor
scas
in
test
inc
je
sub
call
dec
insb
push
out
cli
movsb
push
cmp
xor
shl
inc
mov
mov
fnstcw
jnp
insl
scas
dec
inc
lahf
adc
in
test
mov
sbb
lods
in
jns
and
pop
aas
push
inc
pusha
xchg
and
jge
dec
in
and
pavgb
jle
xor
xor
lahf
out
mov
inc
pop
mov
sbb
and
cli
stos
in
pop
jo
cmp
push
sbb
insl
out
xor
xchg
scas
pop
add
daa
and
loope
nop
mov
mov
jp
test
fs
mov
sbb
adc
lahf
push
mov
inc
out
loop
sti
in
push
add
mul
push
cltd
push
add
and
fs
push
pushf
mov
gs
in
ret
xchg
cmp
rorb
mov
je
mov
lock
push
jb
jno
scas
lretw
dec
inc
out
add
adc
mov
in
cmp
js
dec
arpl
in
movsl
mov
adc
shlb
shrd
in
int
mov
loop
in
jae
ret
add
or
lret
sub
sbb
movsl
rcrb
scas
mov
cli
in
stc
push
add
in
pop
adc
in
mov
das
dec
scas
adc
add
xchg
cltd
popf
mov
adc
sbb
push
fidivrs
rcrb
add
xchg
sbb
insb
lret
cmp
in
lods
in
cmp
inc
loopne
xor
pop
lds
lahf
cmp
out
in
addr16
or
sbb
scas
inc
mov
cld
mov
mov
xor
stc
mov
and
cli
rcrb
pop
pop
add
shl
dec
popf
stc
inc
sbb
dec
in
aad
ss
xor
adc
out
mov
mov
dec
fsubr
les
sbb
add
inc
popa
cmpl
mov
addr16
sti
pusha
out
push
rcll
inc
and
mov
repnz
in
mov
std
popf
sbb
das
adc
mov
cli
in
sub
push
adc
movsl
cmp
scas
ds
test
std
lods
add
in
aas
push
in
sbb
fisttpl
gs
sub
xchg
push
daa
jge
je
scas
push
xor
cmc
push
and
xchg
sub
mov
outsb
fsubrl
in
fidivs
dec
shr
std
in
xchg
test
cmp
cs
movsb
mulb
add
push
int3
mov
pop
mov
clc
and
out
insb
scas
cltd
enter
sbb
das
pop
inc
xchg
in
mov
aaa
mov
xchg
cmpsl
or
add
in
mov
les
scas
in
icebp
pop
repnz
pop
in
fsubs
and
and
inc
or
mov
test
jae
ja
adc
js
cmpsl
movsb
out
repz
mov
gs
and
adc
mov
ds
in
shrl
in
sbb
insl
xchg
add
or
push
into
ljmp
pushf
lea
insl
orb
stos
and
mov
repnz
rcl
sahf
movsb
push
rcrb
or
fidivrs
into
jbe
ljmp
sub
pop
lahf
xlat
aam
sbb
fldcw
nop
test
dec
or
jge
push
ret
and
fs
loope
inc
dec
mov
sbb
popf
out
fwait
mov
mov
aas
mov
test
pop
adc
mov
xchg
rcrb
fwait
push
jne
clc
push
mov
popa
out
in
cmpsb
pop
cmp
mov
xchg
sbb
and
in
dec
add
xchg
imul
or
pop
sub
or
test
dec
call
add
fisttps
scas
insb
mul
cltd
dec
ja
in
sbb
lods
dec
adc
sub
sub
outsl
lds
add
mov
aad
and
inc
lahf
or
pop
pusha
fistl
adc
xchg
lds
xchg
jnp
jle
repz
in
lock
das
outsl
xchg
in
mov
rclb
js
push
cwtl
xchg
arpl
int
jo
mov
inc
or
test
ljmp
fucomi
addr16
pop
in
pop
push
ret
imul
lea
and
lret
popa
in
sub
sbb
mov
adc
add
jp
rcrb
es
fstl
js
in
or
sub
imul
adc
inc
inc
sub
iret
ljmp
and
fdivr
ss
mov
lods
sub
sti
sbb
mov
and
add
dec
jno
pusha
in
mov
sbb
xchg
in
jecxz
pmulhuw
daa
or
sbb
mov
call
push
adc
jnp
in
sub
and
mov
mov
out
xchg
mov
fisubrs
mov
in
dec
push
push
jecxz
mov
in
mov
or
adc
add
cmp
scas
or
xchg
into
mov
sbb
hlt
xchg
jbe
push
add
call
mov
in
mov
in
or
dec
pop
in
std
and
and
enter
out
sbb
push
in
ja
movl
mov
inc
cmc
add
inc
test
dec
push
jno
mov
and
push
sbb
loope
add
lods
mov
cmp
adc
das
mov
aas
insl
test
sub
sbb
cwtl
push
mov
loop
adc
mov
sub
fs
leave
add
mov
pop
loope
lcall
cmp
in
dec
or
outsl
repz
lods
in
hlt
mov
sbb
push
sub
rclb
les
jg
cmp
dec
or
aas
cmp
add
mov
mov
ds
insb
dec
sbb
rclb
push
jg
jnp
loop
mov
dec
in
jbe
lret
pop
rcrb
dec
sub
imul
mov
or
jb
push
adc
rcll
psrld
gs
and
or
sar
or
repz
jl
cmc
push
in
push
dec
nop
push
mov
push
fucomi
aas
movsb
and
je
stos
cs
aad
and
mov
xchg
jg
sbb
mov
fdivp
in
sub
or
cwtl
test
in
clc
sti
call
xchg
dec
in
jecxz
sbb
in
dec
cmc
xor
or
ja
cmp
sub
mov
and
and
dec
mov
mov
cli
pushf
mov
test
ret
cmp
jb
outsb
and
xchg
jae
in
sub
add
stc
movl
push
pop
outsl
sbb
fs
cmp
sbb
sub
jg
rcll
add
pop
add
adc
pop
push
xchg
cli
test
test
xchg
lahf
sbb
imul
sbb
xor
movsb
add
jo
mov
sbb
xchg
pop
mov
test
ret
add
cli
in
add
dec
xchg
mov
or
inc
push
in
popa
call
adc
mov
and
rol
in
or
sub
in
ss
fwait
xchg
sub
in
or
push
in
mov
ja
jp
or
pop
xor
cltd
sub
cwtl
divl
in
add
jg
arpl
pop
je
imul
mov
push
in
fdivr
loop
in
stos
inc
push
cmpsb
mov
cmp
xchg
aad
data16
cli
or
leave
in
lret
clc
mov
enter
rolb
nop
in
repnz
ljmp
or
fdivs
aam
out
aad
ret
enter
jb
sbb
cltd
push
adc
insl
ftst
inc
dec
lcall
fcoml
loopne
push
movsb
clc
inc
mov
in
arpl
shlb
add
pushf
lahf
sbb
in
clc
loope
sub
mov
in
jl
mov
imul
stos
in
pop
adc
icebp
inc
test
adc
mov
push
push
sbb
in
repz
aad
jl
in
stos
add
into
pusha
daa
out
bound
adc
lret
in
lds
mov
hlt
lcall
cmp
cmpsb
out
in
int3
fsubrp
sub
in
fldt
fstps
sbb
dec
push
push
lea
call
in
cwtl
and
mov
or
lea
pop
add
je
mov
adc
sub
clts
loopne
mov
out
pop
subl
and
inc
jg
aam
icebp
adc
int3
xchg
adc
push
add
and
sub
stos
push
repz
add
sub
mov
cld
or
ljmp
push
mov
jns
push
icebp
or
inc
popf
sbb
outsl
pop
lock
mov
jecxz
or
sub
in
mov
inc
in
or
imul
add
fisubs
cmp
sub
inc
mov
icebp
jle
sbb
in
in
jns
cmpsl
dec
inc
insl
sbb
ja
adc
push
rcrb
sbb
mov
je
lds
jg
jne
imulb
sbb
push
sbb
jae
mulb
pop
sbbl
stc
jbe
in
sub
fildll
pslld
or
adc
iret
pusha
test
and
adc
iret
ret
sub
push
and
fs
fnstcw
xchg
jmp
xor
test
in
out
xchg
sbb
inc
dec
insl
into
mov
leave
daa
adc
cmp
stos
outsl
movsb
mov
or
notl
in
adc
int
and
sbb
jb
or
stos
jp
add
loopne
cmp
in
out
jmp
pop
in
lea
sti
es
mov
in
fsubrp
sub
adc
push
lcall
outsb
in
mov
or
in
out
or
adc
add
add
push
movsl
and
push
mov
in
jl
fwait
add
add
add
out
in
je
hlt
sbb
sbb
in
sbb
xorb
in
inc
and
test
mov
ja
cltd
stc
sub
in
pop
lret
jge
pop
in
mov
pop
and
push
mov
jns
sbb
xchg
and
adc
in
or
shll
pmulhuw
popa
sbb
ljmp
stc
dec
out
in
pop
repnz
push
sub
push
insl
and
sub
addb
or
jo
mov
icebp
push
mov
inc
xorl
cmpsl
in
out
jp
test
test
and
adc
sbb
sbb
fs
add
dec
fld
lods
in
je
mov
in
inc
lret
inc
int
jge
in
subb
in
filds
in
scas
sub
cmp
jnp
inc
mov
push
negb
add
adc
in
jne
inc
mov
pusha
ljmp
cmp
pop
jo
inc
xor
mov
xor
stos
adc
sbbb
in
outsl
int3
out
cmp
hlt
cmp
ldmxcsr
push
les
cmp
mov
adc
add
xor
std
cltd
shrb
data16
int
and
adc
pinsrw
div
imul
jo
and
fiadds
in
dec
pop
mov
bnd
out
push
push
jl
inc
cmp
jb
fwait
andl
cmp
in
scas
roll
frstor
lock
add
jns
add
test
inc
cltd
pusha
mov
add
xchg
aam
jne
loop
push
imul
insl
cmpsb
addl
xlat
adc
pop
and
out
loope
inc
outsl
push
not
sbb
pop
insl
mov
mov
cmp
xchg
out
xor
inc
fs
leave
push
cmp
stc
mov
mov
out
mov
xchg
push
rorb
in
pop
cld
arpl
rorl
popa
notb
mov
inc
mov
jno
mov
hlt
scas
and
into
sub
imul
aad
int
outsb
xchg
ja
xchg
xchg
les
xchg
push
jb
test
in
sub
mov
mov
inc
in
xchg
in
inc
push
add
xor
sarb
ficoms
into
pop
das
out
pop
and
lahf
and
and
out
push
and
in
shll
in
lret
test
jge
stc
xchg
and
in
rclb
icebp
sbb
xchg
addr16
jb
gs
sub
test
fs
mov
shr
in
fs
fimull
inc
clc
xor
sbb
arpl
in
fxam
xor
xchg
sahf
xchg
sbb
cmp
test
test
add
add
pop
in
push
add
dec
sub
or
mov
inc
sub
push
xor
mov
inc
sbb
pop
jb
sub
movsb
scas
int3
fdivp
into
push
gs
out
mov
int
sub
dec
test
lds
in
dec
sbb
sbb
adc
adc
in
stc
push
std
cmpl
cmp
lahf
mov
lods
sbb
cmpl
jp
imul
in
adc
in
sbb
icebp
in
or
sub
push
pcmpeqb
xor
loope
dec
bound
mov
add
lds
xor
cwtl
adc
outsb
mov
jnp
mov
and
jb
rcrl
add
xor
push
into
cmp
insl
mov
je
fsubs
loop
and
and
cmpsb
in
cmp
jne
fmulp
and
int
xchg
adc
in
xchg
test
adc
and
and
mov
sbb
stc
rcl
scas
pop
in
cmc
loope
lret
icebp
in
xchg
out
sub
adc
idivl
jle
sbb
mov
in
sbb
inc
sub
sub
lea
push
pusha
dec
sbb
sti
sbb
jbe
ret
pop
in
test
sti
call
mov
fs
gs
xchg
xor
mov
sub
in
movb
adc
pop
jg
lret
ret
sbb
sbb
rolb
sbb
xchg
clc
in
lock
call
inc
adc
xchg
mov
mov
xlat
les
xchg
jle
stos
in
out
push
or
xor
sub
in
inc
arpl
fistpll
dec
in
int
jle
cmp
in
shl
mov
into
cmp
and
icebp
in
cwtl
sbb
sbb
adc
mov
fisttps
adc
js
add
js
enter
test
mov
je
call
mov
sub
addl
inc
lahf
enter
scas
mov
int3
lock
call
popf
popa
loope
xchg
in
xchg
jg
add
xchg
pusha
sbb
adc
add
in
inc
pop
orb
in
aaa
lock
loopne
in
adcb
adc
mov
in
xlat
mov
sarb
lods
int
ftst
cs
les
push
add
cld
enter
ljmp
mov
test
sbb
cmp
out
sbb
push
fs
or
adc
test
sbb
adc
dec
enter
popf
cmp
inc
mov
cltd
pmaddwd
push
nop
cmp
std
cmp
outsl
inc
mov
popf
and
xchg
and
int
mov
pop
mov
enter
sub
dec
dec
std
in
cli
xchg
sub
jp
sbb
dec
sbb
ss
mov
add
popa
shll
jge
test
pop
inc
sub
shlb
inc
adc
adc
test
and
popf
cmp
adc
and
repz
push
out
addb
adc
std
sbb
nop
sbb
mov
pop
jmp
rcrl
inc
in
push
popl
push
mov
in
stc
mov
mov
std
cmp
sbb
icebp
subb
adc
inc
mov
int
testb
push
mov
push
or
in
sti
fcmove
or
add
jl
push
push
aaa
loope
shrb
push
xchg
sbb
lods
adc
add
xchg
in
in
inc
fs
sbb
cmpsl
push
inc
scas
in
sbb
cltd
lock
ficompl
lahf
in
xor
repnz
jnp
adc
jmp
xchg
inc
pusha
mov
xchg
sbb
or
push
inc
adc
jle
iret
and
cmpsl
sub
or
popf
adc
adc
ret
ficompl
sar
add
adc
in
jecxz
pop
push
imul
sub
pop
repz
in
inc
mov
out
xor
in
add
xchg
lahf
test
jmp
and
shlb
add
or
in
daa
ss
ljmp
pop
in
fiadds
loope
in
lock
mov
sbb
jle
lcall
mov
call
sbb
push
fisubl
adc
xchg
push
jb
js
int
mov
fcompl
jle
in
inc
enter
jg
sbb
mov
adcl
cmp
rcll
jnp
js
jae
push
add
in
nop
loope
cld
add
scas
sub
xor
fisubl
xchg
in
sbbl
dec
decb
in
and
xchg
in
movsl
mov
out
lcall
xchg
cmp
mov
iret
xor
and
idivl
jp
inc
sbb
flds
fistpl
shrl
push
clc
aad
mov
stc
in
mov
negb
push
pop
sbb
mov
xor
in
pop
int3
dec
mov
outsb
xchg
in
pop
fstpt
xchg
pushf
int
jl
mov
add
enter
cmp
std
andb
push
dec
idiv
icebp
in
lcall
in
push
push
mov
in
dec
test
cmc
adc
outsl
notl
test
xchg
popa
stos
inc
in
sub
insl
in
jecxz
dec
jns
add
push
das
mov
inc
sbb
gs
jecxz
movb
push
pop
sub
repnz
fldcw
aad
daa
imul
int
in
idivb
cmp
push
lods
and
lahf
and
lcall
jle
popf
jl
sub
and
mov
adc
popf
xchg
adc
xchg
jne
mov
ljmp
cmpsb
shlb
or
sbb
fstl
add
rcll
jl
xor
sbb
mov
mov
push
pusha
sbb
decb
icebp
add
sbb
int
mov
push
add
jl
setb
cmp
adc
xchg
lods
leavew
scas
hlt
test
sbb
loopne
je
sub
add
xor
fnstsw
lret
out
aas
add
cwtl
insl
adc
jbe
and
test
pop
lret
les
ret
or
lds
loop
mov
sbb
xor
leave
xchg
push
cld
in
mov
sbb
roll
lods
inc
in
xchg
push
in
lret
and
icebp
adc
ficompl
cmpsb
fs
gs
fs
inc
ret
adc
fs
fimuls
clc
das
in
pop
out
mov
addr16
sti
inc
or
scas
add
in
rcll
cli
or
in
je
aaa
sti
xchg
or
in
lcall
arpl
jo
leave
push
add
cs
rcrb
in
stos
js
push
cmp
inc
cli
cmp
dec
in
insl
mov
jmp
addr16
mov
adc
lock
mov
fstps
push
pop
or
movsb
rol
fdivl
insb
out
add
repz
pop
fcoms
dec
in
sbb
cmp
in
arpl
lcall
ljmp
loope
jl
scas
in
fisubl
add
in
imul
lret
leave
jmp
shll
jns
push
aad
dec
setl
insl
adc
int3
in
fwait
inc
ljmp
das
mov
sub
cld
dec
je
sti
loopne
rcrl
mov
stos
test
je
out
in
adc
or
sti
imul
fnstenv
mov
insl
push
in
jge
cli
ds
shl
mov
push
sub
push
xlat
xchg
mov
and
inc
push
dec
ret
stc
in
cld
push
fisttpl
add
sub
xorb
insl
sbb
fdivrs
test
test
dec
xchg
push
mov
dec
add
fnstsw
pusha
xchg
push
ds
loope
or
in
das
push
dec
xchg
adc
js
mov
mov
nop
push
repz
xchg
in
pusha
frstor
sub
movsl
bound
es
into
imul
fsts
mov
in
dec
pop
adc
cwtl
jp
in
jno
mov
in
xchg
divl
push
jecxz
sbb
es
aam
repz
mov
popf
sbbb
mov
mull
lcall
fiadds
sub
in
and
push
dec
outsb
adc
sub
inc
fbld
xchg
cmpsl
rcrb
and
in
push
test
in
ja
shl
pop
sti
in
sbbl
pop
andb
lret
dec
cmpsb
mov
adc
xorb
mov
inc
dec
push
push
sbb
mov
out
mov
fs
inc
out
cmpsl
jl
fcompl
lret
fs
sbb
inc
pushf
adc
cmp
adc
pop
mov
cmp
xor
push
mov
push
cld
idivl
cmp
push
inc
push
rorl
xor
push
fbld
mov
inc
adc
fdivp
xlat
cltd
lahf
push
jl
adc
in
in
cmp
jne
push
insl
sbb
mov
in
pusha
adc
loope
push
test
movsb
sub
xchg
push
mov
std
and
pop
jmp
cli
or
rorb
mov
in
fwait
sub
push
int
aaa
in
inc
jno
and
mov
inc
fincstp
sub
in
dec
dec
shlb
in
and
adc
pop
in
fwait
adc
dec
pop
lea
sbb
in
cmpsb
fstpt
gs
dec
aad
fsub
addr16
out
xor
dec
in
call
jg
stc
push
out
pop
jnp
adc
fimull
adc
out
push
mov
or
sbb
dec
mov
movl
inc
sbb
add
iret
dec
adc
stc
and
daa
xor
and
jne
outsl
insl
jo
pop
jae
push
jnp
in
jle
pop
jl
mov
jno
lcall
sbb
inc
or
mov
sub
xor
in
push
lahf
or
hlt
add
in
loop
scas
adc
xchg
notb
sub
sbb
fs
in
jecxz
les
and
in
dec
jne
js
lret
inc
sbb
adc
mov
cmp
adcb
jne
pop
push
sbb
stos
push
sub
cmc
sbb
aam
repz
xchg
icebp
int3
xchg
sbb
cmp
call
mov
inc
in
adcb
cmp
xchg
jge
jp
jp
data16
lods
push
and
out
cmc
push
movsb
or
aas
mulb
xchg
xchg
xor
pushf
pop
cwtl
add
outsb
add
xchg
push
out
fcomps
les
pop
imul
cmp
in
jge
mov
jg
pop
in
insl
cmpsl
das
pop
cli
inc
stos
in
in
and
mov
in
fisubs
decl
mov
xor
sbb
lock
mov
push
in
xchg
sub
fimuls
adc
sahf
jge
clc
pushf
add
repnz
adc
stos
in
shrb
xor
dec
in
rorb
cld
pop
inc
test
cmc
in
out
scas
and
in
fwait
jne
dec
sub
sbb
add
pushf
in
push
sbb
cmpl
stos
lock
shrl
arpl
xchg
insb
sub
neg
pop
cmp
sub
movsb
popf
in
cmp
lea
xlat
aaa
testl
adc
movsb
sbb
xor
scas
shrl
mov
jl
stos
xchg
shl
cmp
cltd
pop
loopne
sbb
mov
push
dec
sbb
adc
or
mov
mov
lds
and
aam
testb
inc
mov
pushf
jae
add
ss
lret
add
stos
sbb
test
xchg
dec
fisttps
push
sub
das
enter
add
notb
cld
js
and
sbb
adc
in
xchg
sbb
into
sbb
inc
dec
xchg
ja,pn
adc
cmp
mov
scas
ds
aad
imul
pop
out
adc
and
in
jecxz
in
push
stc
sbb
push
xchg
inc
fadds
inc
test
jmp
and
pop
ret
das
pushf
std
dec
mov
in
mov
test
pop
push
sbb
mov
inc
fbld
out
bound
sbb
mov
xor
sbb
ljmp
push
inc
outsw
mov
xchg
test
leave
sti
shll
sahf
mov
fwait
lcall
aaa
xchg
adc
dec
lret
das
mov
adc
divl
or
in
in
std
out
pop
out
aam
and
pop
add
repz
jle
adc
push
fwait
push
xchg
in
xlat
xchg
adc
lea
xchg
rcr
inc
jmp
pushaw
adc
cmp
jecxz
cmpsl
les
cwtl
cmc
or
jle
mov
jl
mov
addr16
mov
movaps
inc
xor
movsb
jp
and
loopne
push
mov
in
jl
sahf
leave
fisttpl
sub
repz
or
sbb
stc
lcall
inc
mov
xchg
iret
cmpl
aad
lods
add
mov
pushf
adc
lods
into
or
and
inc
cmp
adc
xor
sbb
gs
adc
xchg
out
sub
mov
sti
icebp
sarb
sbb
add
sub
mov
xchg
adc
xchg
test
push
push
mov
or
jo
sbb
clc
push
or
das
stos
fisttpl
xor
xor
test
in
dec
aad
fdivrl
jns
imul
shll
dec
or
cmp
popf
scas
in
vminpd
mov
sbb
lahf
mov
cld
ljmp
out
add
add
bound
in
xchg
and
add
sbb
sub
hlt
mov
movsl
xchg
and
or
cmp
ss
add
mov
scas
fldl
mov
jne
sub
test
int
dec
gs
or
or
and
in
cmp
add
das
cmpb
in
mov
repnz
rolb
jp
mov
mov
ret
add
dec
dec
sub
outsl
and
cmp
scas
clc
dec
push
push
dec
in
arpl
xchg
mov
frstor
ret
mov
mov
in
insl
push
jp
es
jmp
jo
movsb
js
jae
in
or
sub
add
cmp
mov
and
sbb
cmp
es
dec
fwait
in
jge,pt
push
pop
mov
in
cmp
and
adc
and
leave
dec
outsl
ds
pop
outsb
push
push
add
in
pop
xor
and
mov
orl
movsb
cmpb
mov
pop
inc
ss
subl
jmp
dec
cmp
in
lods
jl
hlt
add
cmp
popa
pop
int3
aaa
mov
mov
push
lods
or
test
xchg
mov
dec
adc
repz
in
cmc
faddl
pop
daa
insl
sbb
dec
mov
sub
cmp
sarb
lea
mov
add
ds
cs
dec
mov
pop
jl
in
inc
loop
pushf
jo
mov
add
and
das
push
movlps
test
xor
jl
sub
xchg
in
sbb
cmc
sbb
xchg
dec
mov
ret
mov
ss
sbb
pop
lods
hlt
stos
xor
sbb
inc
stos
pop
or
shlb
in
sbb
mov
jno
cmpsb
cmp
dec
xor
add
sub
inc
xor
sub
in
or
or
int3
push
sub
xchg
enter
repnz
aam
int
lahf
divb
daa
in
push
dec
push
mov
outsl
pop
stos
sub
es
add
sub
cs
mov
scas
lret
sub
pop
pop
clc
addr16
lock
sbb
mov
mov
mov
mov
jb
out
sbb
rcll
cli
or
je
dec
out
in
cmc
jns
jnp
add
in
jle
fs
scas
daa
cmp
in
or
test
mov
out
adc
fs
sbb
gs
cmp
xchg
adc
in
dec
adc
cmp
enter
mov
fs
out
out
movsb
mov
jl
sti
sbb
or
sbb
in
add
in
or
out
in
ljmp
adc
les
and
and
push
fs
ret
lods
and
add
std
cs
call
rcll
in
imul
cs
fdivr
and
je
in
lret
inc
lret
call
inc
lahf
adc
test
sub
in
hlt
cltd
insb
lahf
pop
lds
mov
in
dec
xor
in
push
scas
stc
fldt
out
in
insl
mov
adc
dec
lahf
push
mov
xor
sahf
jne
mov
or
imul
or
or
jbe
xor
xor
jecxz
lret
out
xor
daa
cmp
jns
je
pop
in
push
sbb
fmul
fs
mov
pop
mov
dec
das
cld
jl
and
mov
mov
adc
sub
in
xchg
mov
imul
sti
inc
cmp
inc
into
in
mov
pop
dec
in
popa
push
in
cli
jns
cld
push
in
addr16
mov
or
lods
repz
push
divb
aaa
lock
ja
out
or
or
in
ss
addb
insb
inc
sbb
je
pusha
jg,pn
and
mov
mov
pushl
sub
xor
dec
xchg
push
je
cmp
out
btl
lock
aam
clc
sbb
xor
cld
test
nop
scas
pop
and
fisubl
in
cli
les
dec
stc
test
xor
pusha
scas
in
dec
das
call
mov
test
insl
xor
inc
sahf
fs
outsl
aaa
insb
or
push
or
insl
ret
and
push
mov
or
fimull
mov
pop
mov
push
ret
sub
mov
sbb
mov
jle
push
outsl
jge
repz
in
pop
mov
push
and
popf
pop
mov
dec
out
bound
stos
push
xlat
sbb
dec
fcoml
fmul
or
in
xor
sbbb
nop
pop
testl
cmp
into
xchg
mov
sbb
pusha
popa
ljmp
adc
add
jecxz
flds
mov
xor
lods
pop
adc
lret
mov
imul
les
ficoml
pop
ret
pop
repz
xchg
xor
jo
and
lea
add
and
in
add
jp
in
in
mov
mov
sbb
lds
push
shrb
inc
cwtl
in
outsl
rorl
inc
jb
jecxz
call
sbb
xor
daa
mov
in
imul
cmp
bound
sbb
in
pop
roll
jo
pop
sbb
sub
aam
cmp
add
inc
and
fistpll
mov
in
mov
mov
insb
mov
sub
inc
cmp
mull
ss
outsb
mov
xor
cmp
mov
cs
ss
ds
and
cmpsb
out
and
cwtl
jg
mov
insb
mov
lea
movsl
or
icebp
mov
push
cmpsb
movsl
test
gs
and
inc
or
movsl
dec
inc
repz
mov
jmp
in
xchg
cmc
jmp
inc
jo
enter
in
and
mov
jp,pt
daa
or
mov
or
add
rcrb
clc
icebp
insl
leave
negb
pop
lds
addr16
ftst
and
inc
insl
data16
mov
or
mov
fcompl
mov
xor
out
cld
clc
jo
add
fs
movsl
inc
loope
jle
adc
adc
jecxz
insl
pushf
dec
xchg
fisttps
pop
pop
pop
lcall
push
sbb
fsubrp
xchg
dec
repz
sub
jl
fwait
jno
and
testl
stos
sbb
jg
adc
in
dec
mov
add
test
and
jb
mov
pop
push
lahf
fidivs
xor
sub
lret
mov
xchg
in
mov
pop
leave
adc
sbb
mov
lock
lcall
cmp
push
sbb
mov
rclb
push
outsl
addr16
add
leave
adc
hlt
cmp
jnp
fdivr
jl
outsb
ret
hlt
sbb
add
adc
lahf
mov
xchg
pop
outsb
fs
lds
shll
sub
mov
in
jns
xor
xchg
fs
or
cld
daa
mov
lret
pop
shrb
in
jmp
ficoml
xor
sub
js
mov
jne
sbb
push
add
adc
faddl
in
dec
adc
jl
mov
sbb
fsub
pop
cld
add
inc
lock
sub
pop
inc
stos
cmp
sbb
cmp
fwait
jp
addb
sub
sti
sbb
mov
test
push
shrb
inc
mov
xchg
xor
and
std
sbb
imul
rorl
in
fwait
int
cmp
call
in
bound
in
std
ss
jo
add
cmc
aas
mov
hlt
xchg
and
xchg
mov
sub
push
sbb
movsb
and
jl
jno
and
cmp
xchg
pop
loopne
cltd
xor
dec
imul
pop
inc
arpl
pushf
pop
add
or
cld
aas
imul
pop
out
pop
in
outsb
aaa
rcrl
fmuls
mov
or
mov
pop
mov
sbb
hlt
out
outsb
adc
mov
pop
pop
xchg
lret
cmp
inc
aas
clc
push
sub
xchg
mov
jmp
dec
fiadds
mov
dec
in
mov
jnp
adc
fs
scas
xor
in
stos
push
sub
jg
push
xchg
sub
cmpb
push
leave
rcrb
dec
not
adc
sbb
jl
out
add
add
xchg
sbb
xor
ret
outsb
call
push
mov
adc
out
dec
iret
or
add
in
icebp
ljmp
in
les
gs
dec
lock
xchg
sti
test
out
in
add
ficoml
jnp
aad
int
addr16
mov
fdivr
sbb
push
jae
xlat
push
insl
jge
sub
notb
sub
inc
outsb
pop
pop
sbb
pop
dec
push
xlat
push
xor
jb
stos
adc
mov
cmp
andb
inc
movsb
or
insb
ljmp
hlt
in
or
js
aam
sub
dec
das
jb
adc
fldl
add
sbb
repz
xchg
hlt
push
inc
push
or
sahf
ret
std
mov
sub
popa
xchg
js
lds
jg
test
cltd
dec
aad
push
mov
mov
hlt
shr
fstps
call
int
sub
lods
jnp
cmp
jns
ljmp
pop
int
pusha
in
gs
jnp
cmp
adc
or
xchg
sti
jae
ficompl
movsb
add
pushf
cld
repz
call
and
mov
sub
movsb
fcomps
xchg
aam
or
je
lret
hlt
movsl
jecxz
adc
adc
pop
push
or
out
stos
sbb
xor
xchg
rcrl
cmp
lods
ja
js
push
mov
sbb
shl
mov
pop
sub
gs
xchg
adc
fldt
fs
pop
and
daa
les
ds
xchg
ret
repz
mov
jecxz
mov
dec
cmp
insl
loopne
sub
xor
jmp
mov
sub
sub
cmp
push
pushf
push
inc
dec
adc
repz
faddl
movsb
shrl
hlt
pop
in
call
mov
repz
pop
inc
test
xchg
push
mov
call
add
push
sti
icebp
in
orb
jo
leave
sbb
cmpl
loop
in
sbb
push
call
xchg
shlb
add
and
xor
mov
inc
push
xchg
shll
ljmp
scas
pusha
xor
ret
mov
xor
mov
cld
mov
add
mov
in
push
es
mov
xor
xchg
in
push
add
pushf
cmc
loop
sbb
lret
ficompl
adc
and
xchg
pop
adc
out
or
stos
xchg
cmp
inc
and
sub
into
inc
movsb
ficomps
dec
ja
fwait
sbb
leave
jbe
test
mov
or
adc
xchg
mov
inc
fidivrl
mov
cmp
add
cwtl
in
adc
pop
lock
and
mov
mov
jp
pop
in
mov
in
movsl
push
xchg
xchg
sub
mov
sbb
add
pop
lcall
in
jbe
outsb
sub
fcomps
inc
and
mov
or
outsl
dec
outsl
test
aaa
mov
scas
cmp
icebp
lea
fiaddl
xchg
or
push
cmpsb
or
out
movsb
jae
push
daa
loop
xor
aaa
mov
cwtl
jmp
mov
jl
sbb
lret
or
pop
repz
or
cmpb
jnp
decl
inc
pop
inc
pop
cmpsb
push
repz
add
in
std
sub
scas
inc
inc
punpckldq
mov
das
movsb
mov
fldl
mov
push
inc
js
clc
sbb
in
mov
rcl
test
int3
les
mov
and
stc
aad
out
mulb
sub
ror
in
rcl
scas
cmp
dec
in
hlt
mov
or
dec
mov
js
in
cli
scas
enter
cmp
add
sub
adcl
or
ljmp
jbe
lods
lea
dec
repz
sbb
push
jmp
mov
or
and
mov
in
aam
fsubr
add
lods
lock
roll
call
jp
xor
sahf
pop
add
sub
iret
jno
lods
in
jecxz
mov
arpl
add
and
fldl
loopne
insl
inc
add
or
mov
or
dec
adc
and
mov
vmovaps
push
jbe
jle
cmp
es
hlt
and
sbb
mov
cvtpi2ps
inc
jecxz
inc
jno
sub
cmc
mov
xchg
push
push
push
jmp
sarl
fwait
or
hlt
aas
pop
lods
imul
pop
pop
sub
and
in
cmp
cmp
in
sub
add
in
mov
xchg
fisubl
pop
sbb
data16
mov
lret
push
out
in
push
std
fucom
cmp
ret
es
jmp
in
jb
out
pop
testb
sbb
stos
xor
cmpl
fiaddl
js
push
add
out
add
push
inc
in
cs
jmp
xchg
in
inc
or
negl
ljmp
jp
dec
repz
in
ss
add
mov
mov
add
xlat
lods
shlb
mov
mov
lods
inc
inc
cld
fwait
mov
jb
push
dec
in
call
dec
xchg
xchg
shl
pop
es
jle
jmp
xchg
lret
scas
popf
jbe
shr
pop
push
mov
imul
sbb
cmp
dec
cmc
add
jle
push
shlb
add
ret
mov
in
out
mov
in
es
adc
cmp
sbb
cmc
xchg
push
pop
sti
sub
dec
fs
cmp
jbe
add
jmp
lret
fs
out
sub
push
psubusw
pop
xor
aas
dec
mov
insl
mov
jecxz
movsl
cmpsb
repnz
in
scas
aaa
sub
dec
xor
mov
add
sti
lret
popf
adc
mov
in
inc
orl
fisttps
pushl
adc
in
push
sbb
push
mov
push
mov
fdivrl
iret
sahf
sbb
sub
push
xchg
inc
shl
cmc
pushl
xchg
in
std
sub
aas
in
arpl
cmp
add
lea
sbb
movsb
dec
pop
xchg
push
adc
ret
inc
adcb
daa
aaa
in
inc
movb
enter
fistl
or
pop
jle
fbstp
jo
call
cwtl
ret
les
cmp
adc
jg
xchg
push
push
xor
jecxz
out
pushw
scas
enter
shrb
addr16
jmp
jge
fs
pop
outsb
sub
inc
clc
or
sub
scas
cmp
pop
es
out
cmp
dec
daa
nop
push
enter
sbb
cmp
push
sbb
mov
gs
in
xchg
das
pop
sbb
xlat
scas
ljmp
in
adc
mov
in
dec
pop
inc
inc
aad
pop
sbb
cld
adcb
mov
jle
in
add
out
mov
in
cmp
pop
push
cwtl
inc
push
cmpb
and
dec
les
cs
js
into
scas
push
jmp
dec
out
jb
cmp
movsl
sbb
and
sbb
pop
push
sub
push
dec
pop
ja
lods
sbb
mov
xor
adc
add
andb
pop
cmp
push
scas
dec
push
in
outsl
aas
xchg
cmp
dec
pop
jg
mov
pop
out
push
andl
and
cmp
mov
sti
jno
jbe
pop
into
add
inc
in
inc
push
jne
insl
lods
push
in
jecxz
inc
pop
xor
sbb
cmpsl
fs
push
scas
and
push
mov
cmp
aaa
lahf
lea
mov
adc
bound
add
out
sub
sub
in
jge
sub
insb
mov
in
clc
ret
mov
sti
add
fsubrs
ljmp
ja,pt
aas
push
push
insb
mov
ret
in
pop
es
cmp
and
dec
loop
popa
in
jmp
pop
sbb
les
out
push
popa
jle
mov
xchg
cltd
push
mov
loop
xor
clc
ud0
jnp
ret
xchg
adc
mov
mov
in
or
int
or
adc
inc
out
dec
in
jle
sub
ret
push
jns
jno
fcoms
sbbb
outsb
or
in
jp
jne
in
xor
int3
add
or
add
mov
fwait
in
mov
add
or
jnp
orb
mov
fisttpll
push
inc
in
pop
cmp
out
iret
out
fsubp
sti
lods
push
lret
mov
in
adc
or
jp
scas
out
out
sbb
xor
cwtl
and
inc
sbb
pop
jge
xor
mov
ds
cmpsb
fstpl
cs
fmull
in
stos
test
sahf
jle
jmp
in
or
out
in
lods
ljmp
sbb
outsl
or
mov
in
pop
jne
test
and
pop
aas
inc
shl
inc
scas
fldenv
stos
jbe
mov
mov
cmpsb
ja
dec
pop
sbb
loopw
push
xor
in
xor
rorb
add
lea
cs
ljmp
testl
addr16
and
cmpsl
clc
jb
mov
adc
shr
xchg
addr16
dec
mov
jg
sub
xchg
dec
mov
push
cs
repnz
lods
cld
in
and
jbe
inc
shl
out
mov
insl
lock
in
mov
sahf
mov
icebp
push
scas
mov
sub
push
sbb
jmp
outsb
addb
dec
es
in
aas
jg
mov
inc
adc
ds
xchg
xor
mov
addr16
repnz
in
mov
xlat
es
jecxz
lods
push
cmp
or
sbb
jo
iret
js
xor
dec
push
sbb
xor
mov
mov
inc
loope
aaa
push
hlt
jmp
dec
in
cwtl
jo
bound
or
movsl
shlb
sarl
and
push
sbb
leave
mov
mov
lea
adc
push
bound
mov
add
aad
and
add
or
ret
cs
subw
mov
fiadds
jmp
dec
in
jns
insl
fimull
mov
outsl
and
jecxz
or
fwait
sar
aad
lds
in
lods
mov
lock
in
int
daa
sbb
push
shrl
push
adc
int
dec
gs
cmpsl
add
or
jmp
stc
jne
in
adc
call
fst
in
test
inc
sub
mov
ret
and
in
arpl
xor
push
ds
int3
aam
stos
adc
in
push
adc
add
dec
mov
in
xor
insb
lods
or
sbb
pop
aam
sahf
into
inc
sbb
add
mov
sbb
lret
lods
jle
push
ja
inc
out
call
lcall
jecxz,pn
pusha
std
aad
in
je
out
sbb
and
lcall
mov
clc
and
and
sbb
pop
mov
in
add
insb
imul
inc
sarb
jbe
ss
fwait
cmp
dec
jmp
xchg
and
mov
and
pcmpgtb
jmp
mov
lods
fcmove
xchg
jg
int3
rclb
jns
mov
movsb
push
pop
ficomps
adc
push
dec
out
imull
cltd
and
or
stos
adc
adc
pop
ss
jno
pop
pop
add
scas
in
movsl
pop
jmp
aas
out
jecxz
dec
and
das
cmp
adc
lret
ret
inc
outsb
dec
fidivrl
xchg
imul
fucomp
sub
idivl
lret
in
insb
cmc
lock
dec
jecxz
pop
add
pop
repnz
dec
lea
jo
inc
cmp
dec
scas
in
and
push
pusha
lds
sub
aad
mov
mov
in
stos
sbb
rorl
mov
inc
lahf
adc
int
and
ds
xlat
rclb
fs
sub
push
mov
add
aam
cwtl
mov
add
jle
into
cmc
sub
mov
aad
mov
inc
addr16
testb
sbb
push
fs
mov
icebp
inc
and
or
rcl
ss
iret
mov
or
lahf
out
test
xchg
jp
and
ss
sub
sahf
pop
xchg
lods
push
mov
dec
scas
outsb
rcrl
push
add
inc
xchg
cld
arpl
lock
loop
test
enter
dec
mov
jns
scas
filds
ds
repnz
in
into
mov
in
push
dec
int
push
fwait
pop
outsb
sahf
mov
sbb
lea
into
scas
and
fs
push
sbb
dec
or
xchg
into
pop
in
dec
movsb
aam
frstor
stc
int3
popf
rolb
in
outsl
pop
in
jne
jecxz
cmp
lods
mov
scas
dec
push
mov
sub
mov
call
repz
mov
xchg
and
cmp
icebp
jmp
sub
and
in
daa
divb
in
push
imul
add
fadds
negl
test
cltd
nop
or
cmc
int
sbb
pop
sbb
sbb
xchg
pop
add
outsb
scas
xor
movsb
inc
scas
or
lret
jg
xlat
inc
dec
cmp
insb
cmp
hlt
mov
inc
pop
clc
je
ds
sahf
and
sub
std
insl
add
repnz
cmpsl
inc
and
add
ret
out
cmp
sbb
push
push
cwtl
push
out
mov
ret
mov
push
sti
mov
cmc
out
je
shl
test
cmp
and
je
fidivrs
cmp
xlat
pop
testl
cmc
dec
xor
add
out
lcall
in
loop
jb
adc
in
pop
mov
mov
sbb
in
jg
mov
in
sub
ficompl
mov
addl
or
xor
push
aas
cmp
cld
mov
push
xchg
sti
in
es
mov
pop
pop
jle
xchg
xchg
rcl
pop
in
loopne
pop
outsl
cmp
xor
popf
mov
pushl
into
and
and
iret
clc
outsl
icebp
ja
and
mov
inc
stos
fldcw
adc
test
mov
sbb
push
xor
repz
and
mov
or
outsl
outsb
adc
push
dec
add
adc
xor
imul
in
and
sbb
in
push
ds
mov
cmp
inc
cmpsb
sub
fiadds
xchg
aaa
mov
or
xchg
jmp
xlat
leave
mov
call
in
out
stos
xchg
add
add
in
into
mov
hlt
in
xor
stc
in
cld
cmpsb
cmp
in
in
mov
cli
in
lds
and
jo
pop
ficomps
lcall
jecxz
outsb
subb
daa
call
lds
jne
or
movsl
ja
pop
hlt
rcll
adc
mov
in
lods
inc
outsb
lods
jne
in
out
std
int
iret
daa
mov
in
xorl
mov
in
call
xor
mov
sbb
in
dec
fidivrl
mov
jp
or
push
sbb
mov
stos
mov
pop
iret
cmp
fsubrl
je
pop
xor
in
std
stc
push
in
dec
xchg
sub
xor
std
push
sbb
push
lods
les
cmp
adc
jge
fsubr
icebp
cmp
lds
push
outsl
inc
xchg
xor
out
iret
sbb
push
rcrb
notl
rcrb
in
dec
wbinvd
mov
cmpb
mov
repz
les
jno
push
jns
bswap
movsb
pop
push
xchg
pop
in
xor
cmp
dec
and
pop
rorl
adc
in
cmp
adc
lea
popf
into
push
dec
mov
add
in
xor
mov
out
xor
je
push
clc
fcompl
and
inc
inc
sub
and
and
sub
in
pop
hlt
xor
pushl
orl
in
movsl
dec
into
jns
mov
fldenv
xor
ljmp
lods
mov
and
fmul
and
in
mov
inc
addr16
jge
aas
pop
cwtl
mov
in
add
je
dec
clc
pop
in
enter
push
inc
and
and
push
push
in
jo
je
mov
pop
sub
sbb
cmovno
roll
pop
sub
mov
xchg
fs
or
in
add
es
dec
in
das
jge
xchg
mov
in
lods
arpl
inc
xor
sbb
or
sub
adc
mov
dec
jmp
xchg
popf
dec
sbb
jecxz
mov
fs
lahf
into
pop
in
inc
pushf
inc
cmp
addr16
adc
in
sub
mov
in
push
fs
mov
outsb
in
int
or
dec
in
mov
test
cmp
push
add
out
fldl
mov
imul
mov
in
jne
or
jo
repz
dec
mov
adc
out
in
mov
push
dec
mov
in
inc
jne
jge
mov
inc
cltd
test
and
sbb
jp
cltd
inc
cmp
loope
aam
aam
es
fs
sbb
jno
mov
lea
sahf
int3
flds
mov
in
popf
inc
in
adc
add
add
lds
and
sub
sub
adc
mov
in
dec
in
and
inc
add
inc
mov
mov
out
out
out
out
out
shll
sbb
mov
std
fs
xor
xor
xchg
in
jns
mov
in
fldl
fs
dec
adc
test
adc
in
pop
and
cmp
add
jg
daa
pop
outsl
mov
dec
mov
cmp
push
add
sbb
or
pop
push
in
dec
lods
dec
push
mov
sub
jg
inc
popf
pop
sub
mov
rorb
or
in
xchg
mov
sbb
xchg
mov
adc
std
fsubr
out
insb
cli
in
sbb
cwtl
sub
pusha
sub
fstl
cmpsb
xchg
dec
or
sbb
les
mov
test
outsl
pop
movb
mov
mov
dec
push
inc
pop
sbb
cmp
mov
in
aam
cmp
stc
mov
cs
and
js
int
das
push
subl
testb
in
mov
adc
js
push
mov
or
sub
lcall
sbb
shll
bound
hlt
or
popa
and
push
aad
test
sarl
mov
adc
mov
lock
rclb
clc
loope
loope
loope
loope
loope
jecxz
lods
out
out
out
out
out
jbe
jecxz
pop
in
dec
in
fs
inc
in
pushf
in
jle
and
outsb
in
movsl
movsw
mov
sahf
icebp
xchg
sub
test
cmp
popa
mov
sbb
scas
test
repnz
nop
das
push
pop
unpckhps
sub
out
and
inc
clc
pop
sub
xchg
and
mov
sbb
sub
fbld
fisubrs
or
insl
add
xor
les
cmp
push
mov
or
pop
xchg
pop
xchg
xchg
mov
mov
sbb
lods
stc
mov
mov
xchg
in
out
ret
push
inc
es
dec
and
clc
mov
outsl
jge
in
adc
mov
adc
in
bound
xchg
mov
xor
int3
mov
ljmp
xlat
sub
in
jmp
xor
cmp
loope
or
arpl
cmp
adc
das
sub
ds
and
sbb
pop
test
lods
sbb
xor
lea
sub
mov
sbb
orl
inc
xchg
inc
inc
andb
sbb
ss
inc
mov
cmp
sbb
cltd
into
and
pop
daa
inc
lahf
pop
movsb
and
shl
xchg
sub
insl
enter
popa
cmp
and
pop
add
sbb
fdivrs
iret
jo
xorb
inc
outsb
ds
jmp
bound
or
cmpsl
stc
mov
outsl
push
imulb
sbb
insl
in
sub
and
add
dec
sub
inc
in
sbb
or
pmaxsw
and
pop
sbb
add
sbb
cmp
mov
and
cs
lea
fnsave
pop
gs
mov
mov
scas
filds
xchg
cwtl
adc
or
mov
cld
stos
lcall
call
mov
pop
in
aas
add
xchg
push
out
enter
ret
clc
les
insb
je
int
mov
mov
jp
sub
scas
jno
and
push
xor
test
xlat
pop
xor
jmp
dec
sub
in
adc
js
int3
pop
pop
in
int
lcall
mov
push
mov
or
inc
adc
sbbb
movsb
adc
jl
add
mov
mov
mov
pop
mov
sbb
sbb
push
adc
sub
or
pop
xor
aas
ret
xor
mov
and
daa
fsubrl
test
pop
xchg
xchg
cld
mov
push
imul
mov
in
hlt
xor
arpl
lock
push
xor
movsb
jmp
mov
cld
je
in
mov
ljmp
sub
or
in
mov
mov
sub
negl
add
cltd
sub
in
inc
push
jle
push
xor
imul
mov
pusha
jae
xchg
rcrb
cmc
sbb
loope
in
xlat
fstpt
and
pushf
scas
mov
jmp
arpl
jo
jne
fstl
mov
mov
inc
xor
lret
stc
mov
in
or
inc
add
in
and
es
in
add
sbb
xchg
ret
cmpsl
add
subb
sti
cmp
pop
sbb
jmp
pop
stc
int
movsb
jnp
outsb
jecxz
cmp
push
jae
fistl
inc
dec
push
in
adc
inc
dec
rolb
fiadds
dec
or
sarb
loop
loopne
adc
popf
sbb
out
jp
inc
adc
adc
das
push
jbe
inc
xor
dec
cld
xor
jae
mov
fs
fs
out
or
cmp
and
sub
fldenv
sahf
cmpsb
int3
movsl
call
dec
and
jmp
call
or
sbb
aad
adc
in
mov
xchg
cmp
filds
xchg
and
cmp
cwtl
leave
in
gs
into
cltd
ja
sbb
insb
xor
sub
sti
push
loop
out
jno
movsl
popf
inc
jb
fisubl
loope
fidivrs
sbb
roll
popf
add
push
xchg
ljmp
aad
sbb
addr16
pop
fdivl
pop
fwait
pushf
jbe
test
adc
cmp
and
pop
repz
shll
adc
mov
push
lock
xor
out
add
xor
xor
pop
jnp
stc
add
jbe
js
insl
mov
push
pop
fwait
jl
and
negb
sbb
or
in
cltd
and
pop
dec
data16
in
pop
out
inc
lods
xchg
or
sub
bnd
addr16
or
inc
xchg
negl
lcall
jl
fimuls
jecxz
xchg
sbb
dec
add
shl
xchg
sub
flds
call
and
xor
enter
mov
cld
and
and
sbb
mov
xor
call
in
outsl
sbb
push
xor
iret
xchg
into
xor
adc
adc
aam
daa
repz
scas
dec
push
leave
inc
in
lea
mov
ljmp
push
lods
add
inc
and
mov
dec
cwtl
das
in
dec
add
cltd
in
icebp
jnp
xor
add
inc
std
or
push
push
xor
cmp
mov
pushf
cmp
cmp
fistpl
xor
add
aas
ja
cmp
jmp
gs
in
sub
sahf
and
sbbb
mov
enter
pusha
inc
add
sbb
inc
test
cmp
xlat
movsb
arpl
in
es
pmulhuw
aad
orb
and
pop
fiadds
je
xchg
or
gs
or
in
add
shl
xor
fmull
cs
or
adc
or
outsb
sbb
lds
test
pop
and
push
mov
nop
fs
push
cmp
sub
pop
cltd
addb
shr
jmp
xchg
or
fs
in
mov
mov
and
mov
in
sbb
es
fildl
xor
std
in
int
add
outsl
sbb
and
pop
dec
sbb
fwait
shlb
mov
jmp
mov
out
in
push
pop
pushf
mov
mov
inc
cmp
aaa
mov
dec
or
xchg
cld
lods
in
cmp
test
push
adc
push
ljmp
andl
das
in
xchg
or
fwait
add
mov
sbb
fldl2t
das
dec
aam
movsl
xor
xchg
fs
movsb
push
dec
dec
cmp
pop
arpl
mov
fnsave
dec
and
push
lahf
imul
popa
repnz
fsubrs
in
aas
ss
pop
add
pop
jmp
xchg
cmp
mov
xor
pop
mov
icebp
aam
xor
in
mov
into
iret
sti
mov
in
mov
shll
dec
adc
add
pop
aas
jecxz
in
jge
test
aad
push
mov
mov
mov
pop
fimuls
insl
and
mov
das
xchg
imul
and
pop
pop
in
jno
scas
push
dec
imull
imul
cmpsl
add
repnz
xor
cmpl
insl
test
jmp
sbb
cmc
mov
inc
popa
add
fbld
sub
call
test
and
xor
add
pop
les
mov
mov
das
or
sub
mov
jg
cmp
ss
repnz
and
jno
inc
pusha
decl
push
mov
dec
subl
cmc
in
jge
in
jns
out
xor
gs
dec
fsubp
fs
data16
in
fsubrs
sub
dec
ret
in
test
sbb
dec
test
shlb
jp
in
insb
mov
add
and
push
mov
dec
cmp
sub
push
pop
addr16
and
xorl
jge
cld
ret
test
mov
je
in
mov
cltd
insb
add
cs
mov
and
mov
add
into
cmp
mov
xor
mov
cld
dec
inc
xor
sbb
and
insl
adc
std
popf
dec
mov
pushf
pop
inc
lock
cmp
push
cmp
rclb
int
fldl
adc
pop
jmp
mov
into
ret
push
sbb
movsb
xor
test
inc
ljmp
dec
iret
loop
sbbb
mov
mov
fnstsw
mov
xor
in
idivl
xchg
in
cmp
cwtl
in
sub
js
pop
mov
popl
pop
xchg
and
das
cmp
adc
in
rcll
inc
cmp
scas
divb
lahf
mov
xor
fidivl
mov
adc
add
add
jmp
push
sub
add
fucomi
and
outsl
cmc
fdivrs
add
in
mov
imul
scas
in
xor
das
or
xchg
cmp
cmp
push
imul
repnz
adc
fwait
sbb
loopne
sub
inc
jge
in
inc
add
stos
dec
push
cmp
xor
push
pop
mov
insb
fnsave
jb
loop
pop
das
jecxz
test
iret
cmp
mov
mov
dec
shlb
jge
je
add
es
aas
pop
arpl
xchg
in
int
add
sbb
aad
push
or
stos
push
repnz
or
int3
mov
or
fnstcw
mov
mov
or
mov
and
stos
lcall
mov
in
mov
and
je
add
sbb
fisubrs
mov
call
in
mov
fstl
in
jecxz
lret
add
cld
in
cmp
xor
dec
lea
in
nop
cli
or
push
push
adc
outsb
sub
out
lods
out
sbb
dec
adc
negl
sbb
clc
jecxz
aad
xor
cmp
dec
cmc
cmp
fldenv
push
xchg
in
mov
std
mov
sbb
adc
fdivrp
dec
hlt
mov
in
mov
xor
insl
dec
aas
add
jnp
push
movsb
insb
jo
sub
in
insl
mov
adc
and
ret
inc
in
add
dec
fwait
sbb
or
fcomip
hlt
sub
mov
aas
mov
cmp
xor
inc
mov
sub
shlb
sbb
cmp
pusha
fmuls
mov
and
mov
xor
xchg
mov
push
in
rclb
jge
mov
subl
in
out
jl
push
pop
in
mov
mov
push
lods
aaa
mov
inc
add
cmp
bound
mov
mov
mov
jno
push
stos
sbb
in
loope
push
mov
inc
dec
cmp
sub
pop
xor
add
ljmp
and
xor
scas
cmpb
idiv
in
inc
fsubl
jns
push
out
in
xor
sub
adc
icebp
and
jle
test
fsubrl
cltd
test
movsb
add
add
pop
jne
ret
pop
sbb
rcr
jecxz
xchg
pop
les
and
push
xor
xchg
adc
inc
sbb
inc
cmp
xor
mov
adc
jle
inc
push
sbb
les
sbb
and
push
cmp
in
les
xchg
jno
jns
xor
sub
and
cltd
js
addr16
in
jo
sbb
jno
dec
in
shll
icebp
and
pop
sbb
stc
jo
hlt
rcl
in
mov
mov
dec
mov
sub
or
repz
inc
mov
in
cmp
adc
or
rorb
pop
mov
inc
es
imul
sub
fs
inc
popl
xor
cmp
sbb
in
mov
aam
lds
out
incl
jne
in
cmp
sbb
ss
scas
xor
shlb
movsl
popa
lea
in
xor
test
mov
and
movsb
fs
xchg
in
mov
cmp
push
jge
push
filds
out
xor
pop
movsl
dec
inc
loop
push
mul
and
popa
mov
jne
enter
rcrl
iret
mov
adc
pushf
mov
jno
stc
sbb
push
fs
scas
pop
lret
ss
mov
and
push
push
and
add
and
xchg
in
addr16
fxch
fstpl
pop
sbb
push
sub
push
in
inc
and
daa
mov
in
pop
or
cld
gs
leave
in
push
scas
dec
popa
ret
mov
in
push
pushf
lret
pop
repnz
das
ds
add
cmp
mov
std
fwait
mov
jmp
fsubrs
stos
scas
pop
jg
xor
mov
fs
orb
sahf
out
add
pop
insl
in
cmp
lret
in
lock
in
xor
call
les
xor
and
inc
lods
or
test
ret
mov
fucom
sub
popf
or
jge
scas
mov
and
sub
es
in
pop
jns
out
pop
sbb
mov
push
clc
pop
sub
andl
outsl
in
loope
shlb
gs
adc
and
push
jle
jo
or
popa
mov
in
lds
and
or
jae
in
fs
vcomiss
dec
inc
aas
mov
sbb
andb
insb
mov
xor
or
stc
and
sub
out
in
ret
push
push
in
inc
mov
filds
xorl
in
mov
in
in
mov
inc
jecxz
cwtl
push
in
jge
andl
in
scas
and
shrl
in
mov
scas
dec
in
pop
lahf
test
xchg
inc
pop
cmp
dec
inc
test
push
adc
lahf
add
leave
test
daa
or
jbe
and
or
ss
movsl
fldenv
icebp
add
jae
cmp
pop
in
inc
mov
test
push
aad
es
lds
lea
mov
das
lock
sbb
pop
inc
xorl
pusha
dec
pop
test
mov
jnp
clc
loopne
mov
mov
test
gs
inc
mov
push
rol
in
test
sub
jnp
cmp
test
mov
jg
sub
dec
dec
in
xor
out
inc
push
out
in
pop
sbb
cmp
push
sub
test
stc
and
fs
inc
out
stos
loopne
ret
in
mov
cmp
xor
mov
mov
leave
mov
out
in
daa
inc
dec
sub
lock
add
fcompl
js
adc
aas
std
inc
mov
das
out
cld
lds
mov
xchg
dec
inc
in
pop
jno
or
andl
sahf
adc
adc
sbb
mov
daa
insl
mov
mov
jno
andl
pop
mov
sub
popa
sub
xor
sbb
inc
ss
mov
test
lea
cltd
into
adc
in
mov
cmp
in
std
es
mov
pop
in
inc
dec
push
test
test
out
push
in
inc
mov
jg
jne
loope
push
dec
movsb
mov
sub
dec
push
das
cmpl
sbb
and
xor
cmp
out
sbb
repz
mov
and
xchg
sub
dec
std
in
out
iret
add
lods
pop
mov
movsl
lds
jl
mov
jne
arpl
sbb
add
mov
movsb
je
subl
mov
or
sub
push
inc
xchg
test
sbb
adc
and
test
push
mov
sub
jne
sub
outsl
and
mov
jecxz
pop
dec
popa
lods
cmp
fs
cmp
inc
xor
adc
lret
push
inc
cmpsb
and
mov
aas
test
roll
mov
fcomps
into
shl
aaa
call
sbb
in
dec
cwtl
sub
aas
das
lods
adc
daa
bound
into
push
pop
and
adc
or
add
sbb
xorl
jle
test
mov
in
push
popaw
mov
sahf
pop
or
into
xchg
dec
test
fldl
in
dec
in
mov
sbb
in
stc
or
cmpsb
popa
nop
les
adc
pop
arpl
cld
add
sub
mul
mov
push
pop
sbb
dec
clc
jle
icebp
imul
fsts
loop
adc
outsl
inc
sub
sbb
pop
cmp
in
into
test
aas
mov
sbb
shl
test
insb
scas
xchg
lret
adc
cmc
jge
sbb
sbb
sub
inc
movsb
add
nopl
push
sbb
push
fwait
data16
stc
hlt
cmpsl
aas
in
mov
mov
sub
pop
in
das
and
jge
xor
hlt
mov
jo
dec
arpl
data16
sbb
jno
mov
imul
add
dec
ror
das
frstor
popf
mov
outsb
cmp
fsubr
pop
aas
in
sbb
xlat
inc
ficoms
fnstenv
js
gs
push
pusha
and
imul
xchg
sbb
test
popf
int
xor
mov
dec
and
popf
loopne
ret
fs
push
in
inc
dec
mov
sbbl
pop
into
adc
xchg
ljmp
inc
push
mov
and
fs
sbb
ds
test
mov
adc
dec
in
jmp
fsubrs
bound
call
sarb
test
clc
popf
adc
popf
add
test
clc
int3
bndstx
int3
mov
mov
xchg
sbb
jno
pop
ds
mov
mov
mov
fs
jnp
push
add
jmp
scas
test
in
jne
aas
xor
fstl
inc
sub
or
arpl
cmc
sbbb
stos
sbb
adc
add
mov
or
sbb
cmc
ret
sbb
pop
mov
cld
fstl
fcomi
cli
notb
sbb
jmp
mov
mov
in
adc
test
dec
inc
das
mov
sub
mov
in
cwtl
inc
dec
push
and
mov
cmp
int3
cltd
jg
and
outsl
pop
daa
xchg
cmp
in
and
in
imul
xor
xchg
iret
movsb
mov
cmp
and
add
xchg
or
adc
in
add
flds
jg
sbb
xor
lret
sub
mov
or
sbb
mov
dec
sbb
add
xlat
shlb
in
xor
leave
gs
nop
in
test
or
in
push
and
inc
in
dec
sti
clc
fs
in
enter
jo
mov
and
xchg
popa
fcompl
cwtl
das
in
lcall
push
adc
aad
fs
dec
and
pop
push
sbb
in
push
lods
out
jae
fistl
dec
scas
daa
fdivrp
insl
cmp
hlt
movsl
stos
or
and
mov
into
in
and
mov
lock
cmp
ljmp
inc
xchg
sbb
in
adc
mov
out
push
call
pop
inc
add
loopne
xchg
inc
in
and
call
mov
lds
add
daa
in
push
lea
sbb
in
jne
xchg
sbb
out
in
fadds
sub
test
daa
and
fs
cmpb
loopne
sub
or
test
inc
scas
cltd
ljmp
add
fs
test
das
xchg
lock
and
sahf
fdivl
outsb
sbb
popf
cmpl
sub
sbb
pop
add
ficomps
in
jae
pop
push
cs
cmp
ds
add
fsubrp
fwait
ds
mov
jnp
sbb
cli
iret
enter
test
sbb
das
fsub
xchg
and
add
clc
and
cmc
sub
test
xchg
out
cmp
daa
jg
mov
imul
jnp
gs
dec
in
sbbl
ftst
and
push
push
aad
pusha
jmp
call
inc
test
inc
mov
and
lret
inc
cmpsb
cmp
mov
out
aas
popa
repz
fnstsw
pop
dec
pop
pop
cmp
mov
or
out
mov
cltd
in
outsb
cmp
loope
dec
call
repnz
xor
sbb
into
inc
roll
or
fs
fidivrl
sub
cs
jecxz
sub
sbb
out
shll
inc
std
cmpsb
in
cmp
std
lds
pop
dec
arpl
sbb
inc
popa
mov
popf
jmp
adc
push
das
fs
cmpsl
jmp
push
dec
xlat
test
dec
adc
in
int
nop
cmp
out
fnstcw
fists
mov
adc
pusha
in
test
xor
push
incl
inc
dec
dec
xor
cmc
clc
mov
das
sbb
push
loope
cmpsl
je
inc
scas
jp
mov
and
pop
shl
mov
or
test
sub
xor
xchg
add
movsb
and
cmpl
push
in
dec
cs
or
mov
adc
rorl
cwtl
ret
push
pop
jb
push
loope
in
popf
out
mov
mov
xor
cmp
scas
pusha
into
and
icebp
int
pop
les
sbb
xchg
cli
ficompl
mov
rcrl
or
outsl
imul
xchg
in
push
insb
pop
xchg
jge
pusha
cmp
and
clc
dec
es
das
inc
xchg
xorb
mov
in
mov
mov
in
sub
aad
xor
pop
mov
dec
mov
cmp
cld
xor
pop
ret
rorl
popa
lods
movsb
or
pusha
cmp
pop
mov
and
mov
flds
outsb
mov
stos
in
xchg
ja,pn
mov
in
pop
push
movsb
scas
and
add
add
in
aas
dec
mov
sub
jge
lock
xchg
sub
sub
pop
in
aas
shrl
dec
push
dec
mov
and
sub
in
jne
int
pop
push
sbb
inc
mov
add
scas
and
push
push
jne
sbb
inc
push
in
int
dec
ret
das
xchg
int3
sti
inc
repz
jge
out
rcr
cmp
in
mov
leave
xor
mov
ljmp
inc
push
push
int3
stc
sbb
addl
cmp
xchg
push
les
in
or
mov
in
push
bound
es
cwtl
into
cmp
cmpsb
fs
add
shrl
sub
inc
dec
cmp
jbe
ds
sub
adcl
fs
shrl
inc
mov
popf
jg
test
adc
and
in
and
in
lods
xchg
xor
sbbl
sar
test
movsl
and
sbb
test
inc
xor
pusha
rcrl
je
cmp
movsb
popl
lods
adcb
pusha
mov
and
aas
pop
lods
pop
mov
xchg
cltd
loope
push
adc
sbb
lret
jmp
hlt
sbb
mov
cmp
sbb
fldcw
das
xor
test
movsb
dec
test
icebp
aas
sbb
xorl
test
ds
bound
dec
jge
js
mov
jecxz
movb
popf
xchg
idivb
lods
rcrl
fucom
test
sbb
xchg
mov
push
in
subb
push
pop
fcmovb
cs
jge
loope
incb
inc
out
dec
lcall
orb
js
push
xor
popa
xorl
mov
sub
inc
addr16
sbb
and
inc
mul
mov
cmp
test
ljmp
and
xchg
fstps
fildll
adc
pop
outsb
sbb
aam
push
adc
lods
adc
cmp
je
or
xor
arpl
cmpsl
sbb
insb
mov
in
fwait
cmp
cmp
jae
enter
pop
jo
jmp
mov
sbb
push
pop
les
xor
add
mov
in
ds
jns
insl
test
lcall
cs
popf
xchg
cmp
mov
sbb
or
lds
inc
sub
pop
subl
cmp
stos
pusha
push
sbb
lods
xchg
in
mov
and
cmp
fsub
cmp
stos
adc
push
mov
pop
cmp
adcl
in
das
mov
aaa
movsb
fcomps
pop
test
xchg
xchg
add
scas
mov
dec
jb
push
inc
aam
cmc
mov
jmp
ret
in
fs
sub
loop
push
inc
cmc
in
popf
fidivrl
movsl
add
inc
cltd
das
jg
mov
sbb
ret
bnd
mov
addr16
mul
movsl
das
imul
fsubrs
add
jno
sub
and
cmp
and
lahf
add
bound
lahf
das
sbb
push
inc
adc
test
cmpsl
mov
inc
xor
xor
dec
push
cs
out
js
dec
test
jle
fucom
xor
jge
mov
mov
sbb
aaa
dec
lods
test
das
xor
adc
pushl
test
pop
les
sbb
test
fldl
or
cli
lods
sub
cmp
jecxz
fidivl
sbb
adc
in
rol
jg
fists
add
and
dec
jns
mov
inc
push
insl
aas
add
in
dec
insb
and
rcrl
inc
mov
fs
sbb
dec
sbb
add
fiadds
int3
push
jl
dec
in
std
xor
xchg
imul
sahf
inc
or
movsb
mov
iret
add
jecxz
idiv
mov
cmp
in
push
sbb
and
xor
cltd
xor
mov
push
scas
into
add
call
mov
and
add
int3
sub
fs
faddp
mov
cltd
push
bound
popf
aad
jmp
js
fistpl
or
sbb
add
icebp
push
cmp
test
xchg
and
adc
xchg
loop
sbb
cmp
fs
sub
in
and
aam
mov
inc
sub
mov
push
push
lcall
enter
ds
call
fs
xor
in
outsb
mov
pop
arpl
jecxz
xor
loop
js
out
mov
outsb
xchg
pusha
inc
mov
in
add
inc
pop
in
sub
fbld
cmp
inc
lea
shl
les
xchg
popf
lods
mov
in
sbb
call
or
add
cmp
or
sbb
jp
ret
loopne
jns
fildll
jmp
inc
shrb
sbb
mov
pop
std
stc
lock
push
or
sarl
inc
in
jmp
in
ficompl
mov
stc
mov
xchg
and
xor
add
push
out
scas
mov
cmpsl
lret
cmpsb
add
sub
and
sub
or
lods
in
add
push
adc
sbb
sbb
incl
scas
in
pop
push
lods
xor
hlt
pop
mov
ljmp
and
scas
stos
fs
stc
add
inc
fdiv
or
add
cmp
mov
lea
lock
adc
push
mov
imul
mov
sbb
aaa
dec
sbb
mov
mov
mov
dec
jg
inc
add
vpmulhuw
fnstsw
in
mov
fnstcw
add
scas
push
test
adc
pmulhuw
mov
dec
cli
cmpsl
sub
rorb
movsb
dec
cmp
adc
daa
xor
xor
push
cld
in
ficomps
adc
scas
loopne
dec
hlt
add
in
in
cld
push
dec
or
out
in
clc
in
cmp
pop
sub
add
jge
inc
dec
mov
mov
mov
iret
sub
push
jp
jns
inc
scas
out
sarb
ret
subb
xor
aad
push
lea
iret
in
ss
ficompl
sbb
aas
add
mul
pusha
cld
and
iret
dec
mov
push
sub
xlat
in
cs
push
add
and
imul
jl
in
mov
dec
sbb
dec
pop
xor
lods
in
outsl
cmp
jge
lahf
in
popa
add
or
add
inc
adc
mov
sbb
outsb
mov
call
in
fstl
jne
stos
xor
insl
cld
jmp
xchg
loopne
cmpsl
movhlps
ja
ret
push
inc
insb
es
in
int3
jp
scas
push
mov
cmp
inc
lcall
sbbl
adc
ret
add
test
das
pop
icebp
in
jle
lods
inc
testb
test
cli
mov
test
insb
cmp
shrl
or
stos
adc
jg
or
popf
adc
mov
in
loope
push
cmp
pop
mov
push
iret
add
mov
dec
js
cmp
sub
dec
inc
sbb
call
and
and
cmpsl
inc
je
push
sbb
cmp
rcrb
or
adc
cltd
xor
ljmp
xchg
jne
push
mov
bound
or
outsb
or
jae
in
inc
dec
imul
mov
ja
xchg
daa
in
xlat
add
inc
in
adcl
dec
scas
add
sbb
sarl
test
fidivs
lea
mov
sbb
xor
dec
in
das
scas
ja
sbb
mov
dec
jmp
push
pop
sbb
pop
jge
int
jmp
cmp
movsb
stos
add
and
cmpsb
inc
pop
jle
in
sti
adc
mov
push
lahf
or
movsl
in
mov
in
scas
sarl
in
mov
lods
cmp
sbb
inc
pop
in
hlt
notl
mov
cmp
arpl
cmp
mov
dec
out
in
popa
rclb
push
ret
icebp
fdivr
cwtl
cmp
cmp
clc
add
lret
xor
pop
in
pop
pop
sub
jns
lock
xchg
je
add
add
cmp
mov
sub
xchg
pusha
sbb
and
fdivrl
or
push
add
cs
xor
fimull
ljmp
mov
pop
or
in
pop
repz
jnp
in
leave
push
cmp
inc
outsl
cld
sbb
dec
aas
addr16
sbb
push
push
lock
sbb
in
les
and
push
insb
and
mov
adc
xor
repz
fs
sbb
cld
in
fs
cmpsb
cmc
iret
test
cmp
stc
movsl
sbb
inc
cmpsb
push
in
dec
repnz
or
insb
in
or
lds
add
xor
pusha
add
aas
sbb
xchg
scas
mov
mov
sub
add
sti
in
fneni(8087
mov
jge
inc
out
in
add
bound
mov
mov
adc
out
cmp
lea
push
sub
les
push
or
mov
decl
jle
aaa
scas
sub
push
movsl
dec
pop
sub
into
xor
adc
shll
mov
push
xor
in
inc
mov
push
popf
pop
inc
xchg
adcb
xchg
jecxz
mov
shrb
sbb
sbb
fs
inc
das
push
inc
mov
insl
hlt
adc
in
out
ja
add
sub
scas
add
dec
pusha
add
xchg
push
in
pop
ss
xor
imul
fisttpl
mov
gs
test
in
mov
shl
push
dec
inc
and
jge
push
in
mov
dec
test
add
loop
sub
inc
in
push
jbe
adc
add
xchg
push
cmp
inc
sub
lcall
les
add
mov
xchg
cld
or
in
orb
jmp
mov
in
in
int
inc
in
jbe
sahf
adc
in
in
add
xchg
clc
dec
imul
test
pop
cs
add
jns
mov
xor
and
sbb
mov
mov
popa
cmp
push
pop
rcrl
pop
cld
cli
test
je
or
nop
or
clc
xchg
in
lret
es
pusha
mov
ljmp
stos
and
pop
add
add
movsb
nop
ljmp
ss
xchg
in
out
incl
insb
sarb
jns
in
in
add
cli
subl
enterw
xchg
pushf
sub
and
rclb
sbb
movsl
in
aad
sub
xchg
or
leave
psubsw
fisubrl
in
or
push
call
into
leave
scas
jns
clc
or
test
mov
fs
pop
dec
mov
adc
repz
aas
sub
rolb
mov
in
daa
test
in
dec
push
sub
iret
in
sbb
arpl
mov
xor
dec
pop
les
insl
and
in
xchg
mov
aad
movsl
in
mov
sbb
inc
pop
mov
icebp
sbb
sub
scas
in
cmp
mov
and
sti
mov
pop
push
inc
leave
ds
loope
cmp
repz
cmpsb
mov
mov
cmc
enter
dec
insl
adcl
mov
out
mov
jno
out
hlt
pop
inc
and
in
cmp
dec
scas
inc
pmulhuw
adc
jmp
out
xchg
in
in
jle
sar
or
inc
ficoml
daa
pop
pop
loop
in
dec
pop
or
aad
xchg
lock
xor
mov
lret
cwtl
out
lcall
in
sbb
dec
in
and
push
mov
sbb
dec
je
arpl
cmc
dec
enter
pop
mov
fs
push
cld
in
movsl
nop
je
inc
mov
cli
or
sbb
sbb
or
jo
in
out
xchg
cmp
mov
stos
into
fs
and
stos
push
daa
mov
push
in
and
inc
aas
dec
add
dec
fs
mov
sahf
sti
dec
pop
jb
in
or
add
mov
xlat
in
dec
xor
pop
cmp
adc
scas
or
aam
nop
xor
das
cmp
sub
mov
int3
sbb
mov
adc
mov
fs
sub
shl
mov
dec
sub
stc
sbb
pop
in
out
scas
test
dec
xor
in
sbb
in
inc
pushf
cmp
aas
test
bnd
mov
in
cmp
jecxz
dec
orb
inc
adc
mov
lock
inc
in
and
scas
lds
insb
sbb
mov
mov
sbb
in
hlt
jno
sbb
mov
je
add
les
in
mov
popf
icebp
jl
int3
loope
cmp
in
mov
xchg
xor
inc
call
out
fnstcw
add
in
subl
or
or
sub
js
rolb
lock
repnz
mov
dec
mov
stos
dec
mov
and
inc
mov
xor
cmp
xchg
sbb
test
cmp
mov
dec
lret
pop
fs
popa
ds
test
jge
mov
xchg
shll
or
cmp
push
out
push
addb
popf
cmpl
xor
mov
add
and
jl
inc
pop
dec
enter
fwait
out
dec
inc
into
jecxz
je
in
inc
push
inc
push
loop
ljmp
push
in
jp
cmp
scas
aaa
xchg
sub
push
push
popf
sbb
fs
fs
xchg
xor
clc
cmp
and
daa
sub
inc
xchg
je
push
mov
xor
hlt
test
loope
in
jns,pt
pop
imul
flds
dec
jo
push
lods
adc
xchg
in
push
pop
sbb
subl
dec
std
in
or
dec
and
xor
jo
mov
sub
and
pop
testl
scas
fsubs
mov
xor
xlat
aaa
xor
ficompl
test
loop
inc
sub
add
inc
sub
adc
je
xor
mov
out
outsb
cs
iret
rcrb
cmp
pop
sbb
imul
aas
adc
nop
sub
cmpsl
push
int
or
dec
xchg
jns
in
mov
and
xor
xor
sbb
cmpsb
cltd
cmp
sbb
fs
dec
and
xor
jo
jnp
dec
scas
les
out
in
lods
out
cmp
mov
sub
aam
pop
lea
jo
cmp
mov
adcb
bound
shlb
pop
or
fsubp
and
adc
cmp
mov
pop
popf
lcall
mov
push
in
iret
sub
mov
push
lret
aaa
clc
xor
xchg
adc
idivb
or
mov
sbb
ljmp
fsts
test
cmp
out
in
xchg
ret
adc
push
jno
ljmp
mov
cmp
pop
jmp
xor
mov
sub
in
xor
fimull
or
inc
xchg
test
xchg
or
loop
les
lods
shlb
imul
add
fmull
dec
sbb
in
mov
lods
in
pop
les
pop
jl
adc
outsb
cs
inc
xchg
sbb
repnz
es
pop
in
or
add
sbb
insl
push
clc
dec
ds
in
pop
xchg
push
pop
dec
out
pop
into
sbb
fs
mov
in
and
in
adc
in
push
ret
js
dec
inc
mov
pop
xchg
jl
dec
dec
dec
add
cld
jge
dec
fs
mov
pop
cmp
fs
dec
pusha
xorb
sbb
popl
clc
fs
into
cmp
ficompl
mov
sbb
out
adc
pop
fmuls
fmull
movsb
and
push
mov
mov
sub
adc
cmp
in
add
or
les
in
mov
mov
mov
in
sub
mov
fs
in
frstor
scas
xchg
ja
xchg
std
outsl
outsl
hlt
or
imul
in
pop
pop
ljmp
fsts
icebp
scas
dec
or
jne
in
and
popa
inc
and
in
out
push
movsl
dec
repz
out
lahf
fwait
mov
sbb
push
xchg
rcrb
scas
les
and
shr
into
mov
mov
out
pop
push
push
test
es
pop
gs
mov
in
ss
clc
in
sbb
add
xchg
jg
adc
les
mov
sub
push
inc
fcompp
pop
push
idiv
and
andl
pop
in
cli
pop
push
add
xor
mov
sbb
push
movsb
xor
in
nop
scas
sub
or
lret
xor
fisubrs
inc
test
and
add
push
movsb
adc
mov
sbb
outsl
cmp
int
dec
rclb
push
pavgb
cwtl
or
and
xchg
test
outsb
pop
in
aad
movsl
or
cmc
in
cmp
lret
push
sbb
and
or
fstps
sub
hlt
pop
push
add
in
mov
aam
clc
pop
or
insl
push
in
xchg
add
pop
daa
cmpsb
movsb
sub
insl
in
pop
les
mov
pop
imul
inc
xchg
fnstcw
cmpl
push
xchg
jnp
and
and
test
pop
push
in
lcall
sbb
or
inc
out
in
cmp
cltd
imul
push
leave
ljmp
mov
and
in
or
xchg
xor
test
pop
and
mov
mov
cmpsb
in
add
fstl
int
dec
in
and
or
call
cli
pop
sub
movsb
push
cmc
out
in
xor
repz
outsb
add
iret
pop
sbb
sub
adc
sbb
mov
cmp
xchg
aas
and
orl
lahf
stc
inc
mov
xor
sub
or
pop
dec
mov
sbb
xchg
ficoml
jne
rorb
in
repnz
and
push
push
in
idivb
cmp
sub
xor
lahf
dec
cmp
adc
in
cli
xchg
std
sahf
mov
push
jns
hlt
sub
and
fcmovu
mov
mov
sbb
mov
and
negl
in
add
pop
cmp
es
mov
dec
movsl
jno
push
mov
sbbl
ficompl
sbb
hlt
mov
and
dec
inc
je
dec
ljmp
jne
xchg
pusha
testl
cltd
dec
test
repnz
fcmovnb
addr16
ljmp
jns
jae
adc
in
nop
xchg
andb
int
test
stos
inc
stc
in
sbb
jo
inc
and
cmp
int
scas
push
inc
fwait
out
add
jno
lods
pop
dec
pop
mov
arpl
mov
loope
mov
push
frstor
pop
fisubl
cmp
sbb
pushf
mov
pop
sbb
cs
test
in
pop
jecxz
shlb
pop
in
dec
mov
inc
add
or
jb
xchg
pop
scas
popf
sbb
popa
les
fwait
sbb
and
and
in
aas
addr16
ret
data16
sbb
cmp
pop
ds
mov
jle
iret
lcall
in
and
jmp
sbb
xchg
pop
in
jge
insl
dec
pop
popa
and
pop
and
mov
jns
add
cld
clc
dec
ss
test
pop
in
stos
xor
in
and
clc
gs
test
in
hlt
pop
cmp
add
out
add
jge
bound
lods
cwtl
and
mov
rclb
clc
jnp
or
push
jg
movsb
aam
push
sbb
pop
test
imul
inc
or
cmp
add
adc
je
mov
inc
fisubrl
in
mov
mov
shlb
pop
cmp
pop
sbbb
sbb
push
rolb
clc
rolb
dec
pop
pusha
mov
mov
cmpsb
test
hlt
pop
adc
xor
sti
add
xchg
test
fcmovb
arpl
and
xchg
mov
ds
leave
hlt
sbb
dec
inc
fwait
dec
iret
cli
in
in
push
push
cmp
jl
in
les
jno
dec
and
cmp
jne
cmp
andl
mov
sub
rolb
lret
xor
pop
in
sbb
and
call
jo
in
movsl
push
fstps
xor
jge
push
adc
xchg
adc
fstpl
testb
push
in
mull
addl
pop
imul
test
stc
cmp
in
ja
enter
push
sbb
cld
and
jge
dec
sbb
sbb
mov
push
mov
fcmovbe
in
ja
icebp
les
sbb
in
or
shl
cmp
jbe
stc
out
sub
xchg
dec
mov
cmp
imul
insb
pop
sbb
mov
fdivs
in
sub
sub
in
out
push
in
jne
dec
dec
iret
loopne
cmp
fstpl
scas
imul
mov
mov
pop
sbb
mov
hlt
sub
and
dec
iret
das
dec
fiaddl
scas
testl
jmp
push
push
les
movb
sbb
xchg
cmp
pop
push
outsl
aas
pop
mov
scas
fs
js
lcall
cmpb
xor
sub
mov
hlt
cmp
stc
jp
pop
mov
cwtl
adc
dec
inc
in
xchg
add
or
adc
dec
xchg
adc
imul
cld
and
call
stos
fcoml
data16
mov
dec
sbb
sub
enter
in
xchg
rclb
into
adc
push
pop
clc
mov
inc
repnz
cmp
test
cltd
out
in
dec
pop
arpl
inc
mov
mov
js
sub
sbb
sub
rcrl
jno
ret
jmp
imul
out
sub
jns
cmp
cwtl
cmpsl
ret
cmp
aaa
jge
fucom
sbb
js
cwtl
jnp
outsb
out
sbb
and
and
prefetch
or
sarb
inc
lea
in
push
ret
jbe
jne
cmp
data16
in
mov
add
loop
xor
les
dec
stos
dec
out
push
jmp
in
pop
imull
adc
cli
out
and
into
sbb
mov
add
xchg
ret
popf
jmp
pop
in
hlt
gs
pushf
pop
sbb
and
pop
cmp
gs
outsb
mov
in
jb
push
and
cmp
inc
enter
stos
inc
dec
popf
add
les
xchg
rcrb
xor
dec
or
in
push
subl
adc
int
fs
push
cmp
lods
inc
inc
jae
stos
fcompl
dec
add
lret
out
sub
in
mov
xchg
in
in
rcr
imull
jp
pop
es
mov
movsb
sbb
lds
gs
addr16
cmc
inc
scas
mov
gs
in
mov
or
jo,pn
push
ja
cmp
fisttpll
sub
sub
jmp
out
leave
outsb
lret
in
ficompl
and
sbb
movsl
dec
xor
call
in
mov
aad
ljmp
aas
adc
sbb
hlt
lods
testb
rolb
mov
ss
lds
incl
jno
jp
sub
push
lock
mov
push
mov
pusha
in
cmp
adc
movsb
cmp
dec
and
test
sub
jmp
stos
in
push
jno
jne
repz
cs
rclb
jle
in
inc
pop
sub
arpl
pop
daa
clc
mov
sets
stc
scas
std
adc
movsl
mov
and
pop
sbb
mov
lea
and
jns
xchg
in
fcoml
in
add
push
mov
hlt
mov
nop
inc
push
cld
in
adc
inc
or
arpl
and
mov
sub
xor
and
mul
dec
mov
add
dec
cmp
mov
mov
out
inc
xchg
lahf
in
cmpsl
push
sub
xlat
pop
sbb
mov
and
dec
mov
xor
cmpl
sub
lods
in
add
dec
je
shl
pusha
cld
sub
mul
sub
pop
xchg
scas
pop
and
mov
mov
xor
cmp
pop
sub
sub
adc
testb
lea
cs
pop
dec
in
or
cld
cmpsb
in
imul
sbb
test
inc
cli
shrb
dec
push
pop
sub
push
in
cmp
popa
in
and
push
lea
movsb
sbb
clc
cmp
and
sbb
sbb
sub
jns
pop
mov
mov
fs
xchg
in
lret
mov
lds
out
fdivp
mov
add
xchg
inc
push
and
inc
bound
fs
adc
cmp
lock
or
in
fdecstp
adc
pop
sbb
sub
sbb
cmpsb
sbb
mov
jns
fnsave
mov
push
in
fisttpll
sub
mov
fwait
and
add
push
dec
jbe
cmp
cld
int
mov
inc
xor
xchg
mov
out
or
popf
mov
clc
sub
mov
and
scas
pushf
cmpsl
pop
sbb
popf
leave
push
ds
jnp
stos
or
lret
in
sub
pop
in
decb
or
cmp
lock
fcoml
movsb
push
add
imul
dec
pop
cmp
sub
push
and
sbb
scas
add
fiadds
cmp
push
pop
es
ret
dec
or
inc
mov
sbb
push
cld
sbb
cmp
xchg
movsb
adcb
scas
int3
add
stc
sbb
sbb
or
dec
inc
sub
in
jns
imul
add
add
adc
pop
repz
xchg
hlt
nopl
out
int
pop
inc
adc
in
call
add
pop
adc
clc
sbb
cmp
xlat
pop
je
test
pop
mov
shrl
out
mov
les
pop
das
jae
cli
scas
jb
daa
dec
push
int3
xchg
mov
inc
lods
sahf
inc
mov
mov
in
sbb
sbb
pop
and
in
ja
mov
movsb
loope
mov
in
je
or
sbb
dec
xchg
dec
jne
les
xlat
push
in
pop
pop
sub
repz
test
idivl
fsubs
loop
es
xlat
shlb
addr16
ja
sbb
jns
fldpi
sub
xor
fucom
sbb
add
jo
mov
loope
add
mov
xchg
mov
fisubl
movsb
or
clc
inc
leave
iret
addr16
hlt
pop
ljmp
nop
pusha
aas
shll
inc
das
leave
push
cwtl
ffree
and
fcomip
sub
sbb
mov
stc
lods
ret
repz
mov
push
sbb
mov
mov
xlat
sub
in
iret
cmpsl
adc
mov
and
cwtl
or
jne
xchg
pop
in
lods
cmp
in
mov
and
dec
out
sub
fldenv
in
sbb
mov
xor
in
fisttps
adc
ja
in
fstl
in
jnp
xor
in
movsb
add
int
in
adcl
jecxz
sub
push
in
adc
and
in
pop
test
or
pop
movhlps
add
in
scas
shlb
pop
jmp
cmp
jg
sbb
mov
sbb
fs
mov
adc
pusha
scas
sub
ss
aaa
ds
xchg
in
push
dec
push
cs
mov
test
das
sub
jmp
push
fs
push
aam
cmp
hlt
in
adc
in
out
cld
insl
pop
cmp
xchg
lret
mov
dec
in
fdivrs
jns
sarl
in
cld
pop
and
xchg
fsubs
mov
dec
inc
call
push
dec
in
pop
scas
push
mov
es
mov
add
ret
and
icebp
add
add
test
in
dec
pop
cmp
sub
mov
dec
in
or
icebp
mov
xorb
in
add
test
sbb
iret
and
pusha
insl
mov
enter
pop
test
stc
ret
mov
xlat
add
and
icebp
cmpsb
xor
sub
cmp
and
in
push
pusha
adcl
loop
lods
rolb
addr16
in
mov
je
xor
fidivrl
and
cmp
inc
je
in
inc
mov
hlt
xor
mov
cld
push
scas
lods
inc
push
bound
data16
flds
mov
add
sbb
pushf
and
lahf
movsb
iret
pusha
iret
or
jecxz
xchg
xor
jmp
repz
mov
jg
or
mov
pop
adc
inc
mov
or
lock
cmp
orl
push
mov
fs
xchg
push
xorb
insb
loopne
sub
ror
or
mov
xlat
imul
or
idivb
ss
dec
xchg
xor
into
jl
iret
xchg
subb
inc
stc
push
adc
fsubp
xor
dec
stos
mov
pop
xor
dec
mov
nop
push
es
jle
sub
iret
test
hlt
sbb
fxtract
fwait
sbb
sbb
mov
xor
inc
mov
in
repz
in
jg
jne
js
jbe
jnp
push
aas
outsl
lds
insb
loope
cmc
jge
into
jp
out
in
loope
aad
push
movsl
and
push
inc
arpl
jmp
test
adc
jl
push
mov
adc
and
push
cmp
mov
xor
xorb
fldt
aam
or
mov
test
xchg
inc
shr
in
jb
fidivrl
imul
mov
xchg
in
mov
xchg
sub
addr16
xchg
scas
xor
ret
xchg
divl
rcrl
cmp
xchg
ret
in
in
mov
xor
in
add
add
pop
shr
call
imulb
mov
adc
sub
les
jae
stc
nop
clc
adc
movsb
flds
outsb
movsb
dec
in
sbb
test
adc
jbe
in
int
add
jnp
in
shl
or
lods
int3
mov
das
mov
mov
or
jbe
hlt
adc
int3
test
and
add
mov
outsl
inc
jmp
and
pusha
adc
or
adc
sbb
mov
sbb
xor
xor
es
dec
sbb
xor
xchg
call
add
divl
pop
and
outsl
in
test
cmp
cmp
mull
sahf
repz
cltd
xchg
push
mov
mov
test
mov
in
or
scas
push
mov
leave
js
jg
sahf
jmp
in
movsb
dec
xchg
das
sbb
aam
sub
loope
cmpsl
jge
mov
fyl2xp1
xlat
mov
inc
rcll
sti
cld
sub
sbb
mov
jmp
je
gs
ret
jne
fs
xor
mov
inc
push
movsb
dec
jno
out
out
je
mov
sub
add
jns
push
push
pop
fidivrl
pushf
test
pop
lret
sbb
in
mov
enter
and
int
inc
inc
cld
insl
call
dec
sub
or
cmpsb
repnz
inc
inc
sub
push
push
sub
adc
mov
mov
sbb
or
and
add
adc
lods
popa
into
cmp
adc
add
call
cltd
loope
jl
push
xorl
add
mov
xchg
sbb
pop
jnp
js
jbe
int3
mov
in
mov
and
sbb
daa
sbb
add
into
xchg
sub
test
aam
int
inc
loopne
and
inc
in
add
sbb
mov
movsb
negb
jl
in
xchg
push
or
mov
in
fwait
xchg
push
mov
in
add
and
repz
nop
adc
push
xchg
movsl
push
fwait
sbb
jle
popa
rorl
inc
pop
add
cli
jno
gs
add
nop
mov
sarl
dec
jle
out
into
lods
fcompp
cmp
pop
push
adc
and
mov
jge
mov
sbb
push
in
fstl
scas
cs
in
pop
sbb
js
int
mov
xor
xchg
cmp
and
out
incl
ljmp
jnp
mov
or
nop
ret
cwtl
jb
movsb
cmp
mov
fucomi
outsl
imul
xor
mov
fnstsw
into
dec
mov
dec
iret
fwait
sub
inc
aas
daa
fsubs
jge
hlt
mov
xor
cmp
in
je
jmp
and
scas
and
call
mov
clc
not
push
sbb
out
xchg
aaa
cmpsb
movsb
dec
pop
mov
cmp
push
xchg
fs
xor
mov
mov
pop
add
and
cmp
adc
lcall
inc
xchg
call
mov
sbb
dec
rcrl
nop
add
dec
pusha
xchg
ds
sub
or
test
in
int
pop
into
push
inc
xor
shll
lock
pop
ljmp
fsubs
movsb
mov
sub
cwtl
or
add
orl
inc
fwait
add
mov
fs
dec
dec
sbbl
movsl
repz
sub
and
xlat
xchg
loop
enter
stc
dec
mov
mov
xor
je
in
enter
rcl
repnz
or
adc
and
xchg
ret
mov
adc
in
mov
adc
dec
inc
sahf
fcoml
add
cmpsl
movsb
xchg
aam
adc
mov
mov
sbb
adc
cwtl
movsb
sbb
sbb
ret
imul
les
out
fadds
sbb
je
pop
in
cld
ds
pop
movsl
sbb
das
fs
in
outsl
push
or
in
sbb
inc
push
in
cmc
paddb
jb
add
mov
stos
cmp
fs
sub
xchg
adc
cmp
mov
in
not
push
insl
leave
out
adc
in
cld
sub
mov
stos
inc
jg
pop
mov
jnp
in
inc
add
inc
sub
lods
in
mov
push
xchg
sbb
cmp
lea
in
call
mov
dec
lods
jno
and
push
fs
lea
pushf
sbb
out
test
jo
idivb
loope
in
arpl
sub
xor
mov
test
sbb
sbb
test
sbb
hlt
xchg
fs
aam
xchg
insl
cwtl
xorb
fwait
mov
movsb
add
cmp
aas
jbe
cltd
cmp
dec
cmp
les
cmp
xor
xchg
mov
pop
sbb
lea
lahf
mov
or
pop
or
jns
add
pop
or
push
adc
jge
add
dec
sub
mov
ds
sbb
sbb
in
mov
push
sbb
or
inc
les
out
in
sbb
xchg
push
xchg
stc
jno
fwait
dec
in
mov
push
in
jle
repz
shll
mov
std
xlat
pop
fbld
jge
fiaddl
insl
cmp
mov
leave
out
aam
jnp
push
cli
mov
sbb
add
push
jmp
push
push
in
pop
fcmovnbe
les
in
or
mov
xchg
jne
icebp
test
in
mov
lret
push
shr
push
sbb
push
fcoms
mov
adc
ds
push
mov
inc
inc
and
lods
or
xchg
pop
and
xor
mov
in
cmpsb
mov
pop
and
cmp
mov
movsb
repnz
orl
jg
add
mov
adc
loope
fbld
pop
cmc
push
sub
decb
mov
or
sbb
push
pop
jnp
cmp
and
sti
into
and
test
lock
or
pop
cmpsl
dec
and
popf
xchg
fs
insb
lea
and
mov
mov
stos
in
ds
sbb
outsl
or
xchg
aas
aam
outsb
and
and
sbb
lea
in
adc
xchg
push
fwait
ror
xchg
in
mov
out
mov
lds
in
fisubs
or
lock
in
cltd
lods
inc
jne
pop
aaa
add
fsubs
mov
jecxz
mov
push
sbb
sub
lcall
cld
hlt
xor
das
sbb
sub
stc
mov
sbb
in
mov
pop
push
inc
roll
xchg
xor
cs
cmp
adc
into
push
push
sti
in
andb
push
pop
es
cld
ss
out
movl
jecxz
and
jno
aad
ret
fcmovb
inc
js
fisubs
fstpl
inc
sbb
jecxz
and
or
cld
les
adc
inc
call
inc
fucom
xchg
test
loope
cs
icebp
inc
jmp
pop
in
in
cld
mov
xchg
lods
nop
and
gs
pop
loop
into
popa
in
shlb
adc
int3
mov
jmp
xor
pop
jnp
pop
adc
jo
iret
adc
xlat
cmpb
in
xchg
pop
cmpsl
dec
stc
mov
mov
mov
jl
dec
mov
imul
ss
sub
dec
inc
cmp
adc
add
into
lahf
test
mov
jmp
add
adc
mov
shr
inc
outsb
xchg
fnsave
in
in
or
mov
addr16
fsubp
insl
jge
ss
outsl
push
daa
push
fwait
mov
loopne
mov
es
xchg
sbb
mov
mov
insb
and
mov
xchg
add
in
std
dec
lret
dec
xchg
sub
jmp
testl
fwait
sbb
testb
shrb
jl
into
add
out
ja
lret
dec
stc
or
pusha
sbb
negb
loope
dec
lods
pop
in
or
and
add
or
in
mov
dec
lock
out
lret
out
and
in
sub
cmp
fcomps
into
cmp
rep
in
inc
add
fnstcw
add
pop
mov
sbb
jle
aam
fsts
dec
cld
int
inc
repz
and
testb
xor
adc
fwait
inc
call
cld
lahf
fwait
es
xlat
mov
out
les
jecxz
rcll
pop
fisubrl
fs
push
pop
sbb
jo
imul
jnp
dec
pop
aas
mov
data16
in
repz
fwait
ljmp
push
cli
lds
icebp
mov
sbbb
push
divl
or
or
imul
stc
adc
pop
push
dec
sbb
and
mov
push
mov
cmp
addr16
lcall
adc
mov
lods
xor
mov
jmp
sbb
call
cs
push
insb
inc
xlat
loope
sbb
cmpb
mov
add
subb
xor
repz
lahf
out
in
pop
leave
sbb
es
and
sbb
push
lret
lahf
loop
inc
fs
xor
std
in
and
xchg
sbb
jl
mov
sbb
inc
lods
mov
out
sbb
inc
aas
push
adc
pop
mov
pop
jno
mov
cld
gs
movsb
ss
out
fdivs
adc
cmp
aam
push
je
xchg
jo
lahf
iret
adc
fcmovnu
sti
xchg
jecxz
xor
add
adcb
in
xchg
pop
fwait
repz
icebp
push
add
shlb
push
sbb
fsubp
jnp
sbb
in
into
push
pop
in
es
scas
jecxz
int
stos
fs
out
aam
rcl
add
sub
fisubs
lret
add
cmp
out
push
leave
adc
fs
sbb
sub
sbb
in
test
sahf
enter
hlt
xor
sub
xchg
out
aam
in
xlat
xchg
sbb
sbb
xor
pop
test
daa
push
decl
into
in
push
lock
dec
in
mov
push
imul
cmc
xlat
sarb
stos
fwait
das
pop
sbb
sbbb
popa
mov
push
je
jns
fcoml
sbb
popa
in
cmp
loop
iret
movsb
cmc
lds
ljmp
mov
daa
lock
imul
xlat
lahf
sbb
push
jmp
cmpsl
repz
cmp
cli
das
cmp
xor
ficoml
fldl
cld
lods
inc
ret
cmp
xchg
xchg
adc
jle
es
leave
shll
and
mov
test
sarl
push
fstpt
in
stc
andb
xlat
mov
sti
sbb
add
fisttpl
repz
das
or
jmp
into
in
shlb
fsub
dec
std
adc
adc
stc
cld
fwait
or
je
push
movb
aas
or
int
in
sar
inc
sub
js
ret
add
lret
into
test
cltd
mov
mov
lods
mov
in
data16
lret
dec
and
pop
dec
jmp
shrb
dec
clc
fs
cmp
add
in
mov
shll
mov
sub
inc
mov
push
aas
cmp
mov
sub
pop
adc
sbb
sbb
pop
sub
sbb
lods
rclb
xchg
out
pop
sbb
push
lds
jmp
pop
push
push
add
es
push
or
sub
sbb
xchg
outsb
jmp
inc
orl
adc
js
push
or
ds
xchg
push
ret
or
adc
mov
js
pop
out
shlb
or
add
inc
jns
cmc
mov
fwait
cmp
ret
mov
gs
mov
or
icebp
bswap
or
popa
adc
and
and
push
mov
gs
xor
test
dec
xor
enter
fisubrl
mov
xor
loope
add
jmp
in
in
jb
xchg
dec
lret
lods
inc
or
fidivrs
mov
loope
cmp
inc
jo
dec
pop
imul
sbb
sbb
rorl
scas
aad
sbb
or
mov
ds
js
mov
push
je
or
push
in
loope
mov
adc
or
test
sahf
jo
inc
push
enter
and
daa
adcb
cmp
add
xor
xchg
in
repz
test
leave
adc
out
jno
imul
mov
ficoml
jno
data16
dec
out
pop
xor
fnstenv
xchg
scas
jmp
bound
cmp
add
in
popa
ret
daa
dec
push
jge
aas
in
dec
xchg
loop
div
or
lds
outsb
out
push
clc
push
cmp
jb
movsb
movsl
je,pt
lods
and
test
sbb
in
lcall
add
fldcw
adc
push
je
in
jne
or
cmp
in
adc
pusha
iret
popa
fsubrs
stos
or
push
aas
inc
shll
mov
inc
fwait
mov
mov
in
insl
adc
andps
imul
lahf
out
repz
cmpsl
call
shl
adc
and
mov
adc
out
xor
std
sti
in
push
sbb
jmp
fisttpll
in
cmp
pop
xor
loope
mov
gs
rorb
push
push
push
xchg
out
imul
inc
imull
popa
mov
ljmp
mov
fmuls
ret
pop
dec
xor
jmp
add
or
add
add
aam
mov
or
adc
lcall
adc
push
aas
or
sbb
lret
in
jmp
data16
cwtl
xchg
push
hlt
xchg
adc
ljmp
and
aam
test
jbe
or
jnp
mov
sub
hlt
lahf
loop
mov
push
out
xorl
call
jecxz
sti
test
je
push
out
cli
mov
push
mov
mov
push
jg
xor
and
mov
fmull
clc
hlt
test
loopne
mov
pop
mov
in
jbe
cmpb
daa
ljmp
sbb
inc
sti
fsub
pop
inc
pop
in
ror
mov
jl
adc
xor
fisttps
push
push
sbb
mov
pushf
dec
stos
outsl
sbb
movsb
inc
inc
inc
cmp
stos
cmp
je
in
in
das
xor
sbb
push
xor
xor
jbe
imul
sbb
inc
sub
lock
out
test
test
adc
imul
dec
lret
movsl
enter
pop
clc
ret
inc
sbb
mov
sub
sbb
dec
into
adc
in
mov
jl
in
int3
mov
les
aas
mov
mov
pop
test
fs
jp
movsl
sbb
sbb
jno
xchg
test
in
jae
mov
in
pop
jno
and
das
movsl
daa
cwtl
int3
adc
in
or
cmp
or
in
push
das
xchg
lcall
aaa
mov
cmp
je
in
cld
sub
dec
insb
in
lds
mov
lock
mov
adc
pop
mov
in
call
aam
in
dec
add
in
ret
ds
mov
or
add
xor
mov
add
int3
jns
mov
push
lahf
sub
in
or
int3
and
repz
pop
out
in
jnp
icebp
stos
mov
pop
pop
cmp
pop
adc
inc
ljmp
dec
mov
mov
dec
fs
sbb
aaa
stc
in
sbb
in
jle
pop
mov
pop
dec
sbb
sub
mov
fcomps
add
add
outsb
pushf
insb
fistpll
push
xchg
in
pop
xor
out
shrl
mov
mov
popa
shll
inc
add
aaa
nop
or
xor
jae
mov
aad
out
test
or
xchg
int
or
dec
jmp
push
pop
leave
or
jne
out
movsl
movsb
cmp
je
movsb
jle
mov
rcll
std
sub
movsl
ss
outsl
in
jno
or
inc
in
sbb
das
and
addr16
add
dec
dec
sbb
jmp
adcb
or
in
xchg
clc
mov
mov
andl
test
xchg
cmp
rclb
out
push
cmpsb
outsb
fldl
push
outsl
je
mov
mov
xchg
repnz
lahf
in
std
push
or
imul
in
in
test
outsl
push
jo
les
xor
pop
jae
cmp
push
jns
pop
jp
loop,pn
ret
cmp
lods
mov
sahf
dec
push
jle
insl
adc
cmp
jno
arpl
adc
ss
or
pop
or
push
add
aad
int3
adc
mov
cmp
fcmovne
mov
in
lcall
in
rorl
pop
pop
dec
mov
cmpsl
add
or
out
cmpsb
push
pusha
int
mov
rcr
out
mov
jl
shll
dec
sub
mov
fwait
sbb
sti
dec
ret
cld
lret
sbb
or
jecxz
xchg
push
pop
pushf
dec
in
dec
ficomps
in
push
gs
std
push
stos
push
or
xchg
aad
int
mov
mov
sub
dec
jmp
xor
adc
inc
mov
xor
sub
push
movsb
int3
pop
hlt
sbb
in
loope
cmovns
adc
stc
jb
lret
in
mov
daa
or
push
fsubr
ljmp
sbb
add
stos
loop
pop
pop
push
mov
scas
in
cmp
inc
xor
xchg
sets
in
add
xchg
sbb
fmul
pop
push
push
mov
hlt
and
ja
daa
test
xchg
aas
imul
xchg
jae
repnz
sbb
cmp
dec
jp
adc
and
iret
movsl
aaa
in
push
dec
inc
nop
sub
mov
lds
in
or
or
movsl
adc
scas
je
in
popa
mov
fdivrp
jno
sbb
rclb
jg
fisubl
in
clc
cltd
ficomps
cld
pop
cmp
mov
popa
stos
mov
adc
jmp
and
ss
mov
dec
adc
mov
aaa
repz
xor
inc
cmp
das
push
data16
push
adc
sbb
jl
sbbl
jns
cmp
adc
shll
jp
sbb
sub
orl
imul
repz
bound
dec
push
mov
lahf
or
jp
fstpl
pushf
sbb
int3
rorl
in
adc
push
mov
push
fcoms
enter
in
sahf
inc
jno
push
cmpb
mov
cmp
sti
int
pop
outsb
adc
dec
xchg
and
in
push
pop
outsl
cmp
fs
iret
cld
xor
jbe
add
or
adc
icebp
or
adc
dec
add
leave
test
jecxz
sahf
call
push
mov
movsb
adc
or
cwtl
or
cvttps2pi
jecxz
fucomi
sbb
or
mov
in
dec
rcll
in
aad
and
mov
xchg
sbb
movsl
mov
je
mov
adc
lea
pop
mov
sbb
pop
cmp
sub
jle
pop
in
bound
or
pop
fstpl
leave
mov
popa
in
popa
sub
movsl
or
in
mov
insl
ds
cltd
sub
cmp
mov
repz
out
adc
cmpsl
and
imul
sbb
enter
movsb
mov
push
pop
push
cld
cmc
push
in
jne
lahf
cwtl
jmp
or
enter
fiaddl
jl
xchg
fld1
mov
out
out
shlb
sbb
test
cmp
stos
push
cmp
jge
icebp
and
push
add
pop
lock
sbbb
cmp
pusha
sub
data16
add
cld
mov
cmp
sub
jg
inc
in
sbb
fcmovnb
sbb
push
xchg
fs
jmp
flds
in
jbe
jnp
jg
into
in
sti
iret
inc
pop
daa
stos
das
es
in
out
sub
add
icebp
inc
gs
arpl
out
dec
inc
hlt
jno
imul
fsub
gs
add
mov
push
pop
imul
in
mov
and
insl
testb
clc
in
cs
in
into
lea
jbe
int
lahf
jnp
stc
mov
jge
or
daa
aaa
sbb
push
mov
and
js
push
shufps
sbb
hlt
lods
sub
push
push
jae
pop
bound
in
sbb
popf
push
in
jmp
fbstp
sub
cmpsl
mov
fs
pushf
ljmp
aaa
fnstsw
inc
les
mov
or
adc
xor
cs
test
xor
fwait
test
jp
xchg
popf
in
jbe
mov
sbb
jo
xlat
xchg
je
sbb
call
das
in
mov
pushf
mov
iret
sub
cs
push
test
ss
hlt
shr
sbb
test
jb
mov
cld
xor
jmp
or
iret
in
xchg
jns
sbb
dec
or
sub
adc
inc
mov
inc
or
in
jle
jecxz
hlt
push
sbb
xor
xchg
aas
and
dec
stos
cltd
aaa
xor
addl
and
sbb
cli
add
push
fstp
pop
jnp
inc
imul
xchg
lret
in
adc
pop
push
in
or
xor
cmp
aaa
pop
aam
and
scas
and
jle
bound
mov
fmuls
and
mov
nop
xchg
and
mov
mov
arpl
cmp
out
adc
in
ja
call
mov
and
dec
scas
leave
in
adc
fisttps
cld
stos
add
jge
sarl
shrb
das
scas
or
xor
fwait
movsl
xor
sbb
and
lahf
in
add
mov
mov
jnp
sarb
sbb
jb
cmpl
loopne
bound
add
int3
mov
loop
in
mov
and
in
mov
inc
insb
pop
sbb
jns
into
jnp
lds
dec
fcompl
in
and
test
push
mov
xchg
out
sub
insb
mov
jp
mov
dec
orl
add
push
fistps
pop
fcoms
cmp
cmp
scas
sbb
pusha
aaa
out
ret
cmpsb
mov
and
test
movsb
cmovns
xor
out
mov
ljmp
jge
aam
dec
in
repz
lret
cmc
or
and
lahf
test
call
shrl
jno
and
das
push
mov
into
inc
in
sub
enter
rcrb
add
idivl
in
push
jne
fwait
loop
jg
sub
arpl
in
xor
or
out
ficompl
sub
in
stos
lret
mov
xchg
shll
jnp
int3
xlat
loopne
xchg
in
gs
xor
in
jmp
popf
mov
imul
pop
cmp
push
or
push
mov
out
mov
and
sub
aaa
mov
jecxz
mov
jno
lcall
mov
xchg
lcall
sbb
daa
pop
cltd
fiadds
add
xchg
call
or
xor
jno
in
push
add
into
in
dec
cli
shrl
cwtl
fadd
popf
sbb
shlb
bound
sbb
cmp
fstps
mov
cmc
or
in
pop
in
lret
xlat
pusha
lds
pushf
xchg
loope
loopne,pn
sbb
outsl
incb
cmpsb
jbe
mov
in
out
cld
test
jmp
movsb
inc
aas
jle
mov
cmp
mul
lods
sub
in
leave
mov
mov
xchg
repz
repnz
xchg
and
lcall
pop
loop
in
adc
les
stos
xchg
sub
in
out
test
negl
xor
in
rcrb
xchg
addr16
orb
cli
fs
adc
and
xchg
ret
cli
sbb
mov
mov
sbb
mov
push
sbb
push
popf
das
test
dec
sbb
dec
cmc
lcall
shll
lea
sub
mov
inc
or
jo
and
lea
gs
dec
pop
out
xorl
enter
in
in
int
scas
rcr
push
cwtl
cltd
xchg
clc
aad
movsb
mov
data16
pop
mov
sub
mov
jecxz
out
popf
fs
adc
mov
lods
lret
mov
jno
movsb
fstl
scas
aam
popa
inc
and
cs
or
push
xchg
sub
sbb
pop
or
divl
xor
cli
ljmp
or
dec
loope
lret
iret
adc
push
adc
fsts
mov
sahf
fcoml
xchg
outsb
dec
push
std
cmpsb
ljmp
ds
mov
sbb
or
cld
pop
mov
and
imul
clc
sbb
popa
test
loopne
ret
xchg
pop
daa
mov
dec
xor
or
call
loop
mov
setnp
xor
sbb
movsb
mov
cmp
xor
push
cs
mov
xor
movsb
xlat
mov
fmull
imul
cld
in
ret
mov
das
sub
lock
jbe
iret
pop
fistpll
in
jne
mov
pop
popa
fucom
aas
cltd
adc
out
or
mov
sub
pop
mov
fs
and
insl
js
push
xor
fistpll
cmpsl
jbe
insb
aam
repnz
outsb
mov
loop
es
rcrl
dec
adc
pusha
mov
jl
dec
ss
stos
and
xor
adc
fs
and
pop
cltd
dec
xchg
sbb
sbb
mov
mov
sbb
in
dec
dec
cmp
add
sub
jb
push
jo
popf
dec
xchg
outsl
cltd
sbb
or
or
jmp
inc
cld
sahf
test
fs
sbb
mov
push
pop
cmp
ja
ret
test
push
loope
in
and
and
sbb
stos
loopne
xchg
sbb
shll
mov
stc
jnp
dec
add
xchg
push
in
lds
iret
cli
lods
out
sbb
mov
test
cmp
pop
add
in
jne
mov
in
enter
test
cmp
inc
sub
imul
arpl
pop
xchg
sti
fimuls
scas
sbb
add
mov
pop
pop
push
dec
push
hlt
pop
push
jne
pop
dec
jge
or
cmp
pushf
inc
or
gs
jnp
xor
test
pushf
in
fisubs
sbb
shll
fsubrl
sbb
in
add
or
mov
scas
sbb
pushf
mov
dec
je
in
or
xchg
adc
push
fimuls
ret
loope
movsl
sbb
adc
jne
cmp
in
xchg
jb
popa
test
andl
out
in
sahf
mov
adc
insl
cmpsb
sbb
ret
les
pop
dec
cs
or
inc
sarb
xor
test
in
dec
mov
pop
addr16
mov
test
or
in
sub
std
mov
adc
add
xor
and
int3
popa
mov
mov
mov
push
pop
jmp
fs
cmc
add
sti
adc
jmp
jnp
pop
mov
outsb
outsl
sbb
cmp
pop
cmp
pop
and
add
fcmove
sbb
mov
add
or
sbb
pop
lret
fs
dec
jle
fistps
inc
push
and
dec
sbb
push
adc
jmp
pushf
push
inc
cs
pop
xchg
jae
pop
loopne
push
addr16
dec
cmp
popa
sbb
scas
or
scas
push
pop
int3
push
out
and
mov
xchg
xchg
sub
in
mov
cwtl
adc
out
ficomps
fs
fidivrs
nop
in
and
mov
sbb
sub
negl
or
xchg
in
nop
add
cmpsl
jmp
test
mov
dec
inc
or
fs
fidivs
call
mov
insl
int
add
inc
jno
shrl
fsts
cwtl
jo
push
dec
leave
xor
insl
movsb
sahf
jb
cmp
in
std
popa
imul
jl
test
xor
sbb
dec
sub
clc
iret
in
jg
inc
cmp
cwtl
in
cmp
rcrb
push
loopne
stc
in
test
fs
pop
sbb
in
cmp
testb
pop
in
push
js
int
cmc
and
in
mov
xor
or
mov
in
lds
jp
mull
add
jno
ror
xchg
jb
insl
hlt
xchg
sbb
and
enter
in
ss
cmpb
jg
neg
in
xchg
ja
mov
jne
adc
fwait
loope
jae
jmp
sti
test
mov
clc
js
push
mov
arpl
inc
and
sbb
lahf
push
fdiv
lret
imul
or
and
mov
in
jge
adc
je
shlb
jae
push
in
das
mov
mov
dec
jge
dec
lea
in
push
sub
adc
in
mov
dec
dec
sbb
xchg
aam
popf
adc
push
clc
scas
int
adc
sub
aas
rcrb
mov
ljmp
jo
mov
orl
iret
jle
xor
mov
and
movsb
add
in
dec
ror
fstpl
hlt
jg
mov
mov
call
out
fs
or
inc
or
push
scas
mov
xor
loope
push
pop
dec
icebp
sbb
into
push
xchg
lock
push
out
test
repz
jl
sbb
xlat
fstl
mov
sti
adc
pop
aas
mov
out
cmpsb
jl
sbb
inc
hlt
mov
dec
adc
inc
cwtl
mov
push
adc
repz
dec
stos
outsl
xor
mov
jbe
inc
fs
mov
in
mov
sbb
cmp
and
mov
xchg
mov
in
pop
inc
push
sbb
popf
insl
cs
test
hlt
addr16
movsb
ror
mov
dec
xchg
pop
lcall
les
pop
adc
pushf
je
fs
adcl
pop
lahf
or
push
cld
rcr
std
hlt
mov
push
adc
sub
rcrl
dec
or
adc
add
add
shrl
add
in
mov
call
push
mov
lret
or
repz
push
push
popa
int3
loop
mov
xor
pop
cld
xchg
mov
mov
cmp
movsb
jo
dec
ljmp
push
xor
dec
repz
leave
sub
movsb
mov
sbb
clc
cld
pop
cmpsl
gs
gs
inc
mov
xchg
xchg
sub
dec
or
test
inc
ss
push
adc
xor
sar
in
popf
out
mov
push
or
cmp
in
pop
jne
adc
mov
sub
cmp
add
mov
gs
orl
in
pusha
stos
unpcklps
sub
in
je
mov
sbb
hlt
test
cmp
shr
into
popa
aaa
push
or
jnp
in
jnp
push
sbb
fcmovnu
jecxz
fldl
fadds
pop
add
sbb
pop
out
cwtl
scas
call
inc
or
cld
cmp
xor
sub
repz
and
mov
in
pop
mov
jp
aaa
jp
cmp
pmulhuw
pop
clc
fists
inc
add
sti
ljmp
dec
mov
push
xor
hlt
jp
fnop
xchg
inc
xchg
jl
repnz
decb
sbb
cmp
lea
cli
pop
sbb
xor
shrb
sub
notb
adc
into
adc
cltd
in
push
fabs
nop
mov
mov
test
in
xchg
data16
aam
add
inc
ficomps
in
hlt
les
dec
xor
icebp
mov
ss
dec
out
xchg
sbb
cmpsb
jns
rcll
sbb
adc
cmp
push
daa
rcll
xchg
xchg
push
js
rorl
jbe
jmp
movsl
add
jae
repnz
mov
mov
mov
in
push
mov
mov
push
push
in
pop
push
in
mov
xchg
pushf
gs
dec
in
push
cmp
mov
and
cmpsb
mov
inc
dec
and
xchg
in
jle
shrb
xor
in
push
hlt
imul
shlb
test
dec
addb
sub
js
inc
sub
andl
fs
xor
frstor
sbb
ljmp
pushf
in
scas
fmulp
mov
jns
in
xchg
xor
movsl
xchg
cs
jl
pushf
push
xchg
and
mov
shlb
jecxz
adc
fmull
inc
inc
repz
mov
xchg
int3
adc
mov
repnz
shlb
in
sti
imull
sbb
int
stos
mov
scas
cmp
mov
and
and
int3
jecxz
push
idivb
mov
mov
xor
movsl
enter
mov
fmull
adc
adc
xchg
int
out
dec
pop
pop
nop
mov
pop
jecxz
imul
and
xchg
rorl
push
xchg
lret
dec
or
add
movsb
xchg
push
mov
ljmp
lret
and
sbb
pushf
inc
ljmp
mov
xchg
sbb
test
dec
ss
push
add
push
xchg
idivl
add
jl
test
dec
loop
imull
add
mov
sti
fistps
sub
stos
push
aam
std
insl
in
ja
das
or
xor
je
sbb
jp
clc
mov
mov
adc
outsl
hlt
add
hlt
and
fs
repz
mov
jo
idiv
ljmp
jno
jae
aam
in
bound
or
add
add
mov
repz
adc
adc
pop
push
sbb
movsb
lret
popf
inc
pusha
in
in
adc
movsb
inc
mov
in
fisttps
cmpl
insl
mov
cmp
cmpsb
and
inc
add
in
stc
int3
adc
jmp
popa
and
push
sub
ljmp
push
cmp
int
aas
pop
in
inc
mov
mov
mov
test
pop
in
int
ja
inc
lods
in
adc
fmulp
imul
gs
push
pushl
and
in
in
or
pop
ret
jno
in
push
xchg
test
add
cltd
push
cwtl
mov
lret
rcll
fsub
sbb
nop
loopne
sbb
cmp
jg
loop
inc
or
mov
mov
in
lcall
sbb
lods
fchs
or
cmp
sbb
inc
xor
lods
and
lock
mov
in
inc
mov
jae
cmc
push
or
cmp
dec
repnz
pop
pop
xchg
and
popa
sbb
fs
jecxz
and
in
pop
fwait
dec
push
insl
call
push
insb
sbb
mov
adc
push
jbe
ss
test
outsb
or
js
out
arpl
push
add
mov
xchg
stc
out
loop
mov
rol
mov
in
mov
imul
cli
test
ret
div
adc
add
cmc
jle
xor
sbb
cwtl
jmp
jl
add
je
dec
mov
mov
sbb
fmulp
fstpl
out
xchg
ja
dec
insb
add
jnp
jno
fwait
loope
test
sbb
jl
cld
pop
fistl
fs
sbb
sub
sbb
inc
fstps
sti
fidivrl
cld
repz
es
adcl
icebp
adc
leave
xor
popa
les
push
inc
out
or
outsl
in
roll
pop
shll
cmp
xchg
cltd
incl
adc
cmp
or
and
scas
mov
data16
out
mov
and
filds
pusha
sub
in
stos
add
fs
sub
testb
xchg
addl
sbb
sbb
jb
xchg
je
sub
clc
ret
mov
sub
sub
xchg
xchg
push
out
mov
dec
in
leave
jne
outsl
and
popa
in
xlat
arpl
cs
push
out
add
sub
or
cmpb
movb
stos
xchg
movsl
cmpsl
cmp
hlt
pop
or
adc
scas
imulb
mov
popf
and
insb
pop
pop
inc
xchg
dec
inc
int3
pop
mov
in
pop
pop
xchg
popl
loopne
cmp
mov
test
leave
fcomip
hlt
sub
or
pop
repnz
push
pushf
in
mov
in
jno
pop
sub
imul
sti
loopne
pushf
sbb
jmp
lcall
mov
xor
adc
mov
push
sbb
repnz
cmp
sub
in
xorb
sbb
sub
cltd
fadds
add
mov
push
xor
ljmp
push
fsubl
sbb
inc
pop
xchg
imul
jae
push
dec
cld
test
xchg
leave
pop
sub
inc
inc
adc
dec
sarb
or
inc
icebp
push
bound
cmp
rolb
sarl
push
mov
dec
mov
and
sbb
inc
in
movb
xchg
sub
loop
lahf
out
push
push
pop
mov
xchg
jl
lea
jns
sub
sub
jl
mov
rorl
jp
pop
sub
mov
sbb
push
sub
movsb
addr16
jo
fwait
test
pop
sbb
lock
lret
mov
mov
fs
cltd
pop
ficomps
in
sbb
sbb
repz
pop
leave
push
cli
shll
fs
mov
cwtl
faddl
in
push
jbe
scas
pop
lret
jle
adc
add
mov
insb
into
movsb
xor
xchg
jo
pop
dec
xor
popa
in
movsl
dec
stos
cs
mov
std
sbb
adc
in
fwait
cmc
popf
jo
cld
jl
das
test
inc
sbb
or
test
or
jmp
xlat
cmpsb
fs
inc
bnd
jl
jp
out
inc
push
sbb
jno
push
shll
mov
mov
ja
push
jecxz
in
mov
and
cli
sti
add
xchg
add
movsb
inc
sbb
mov
cwtl
out
mov
movsb
adc
or
int
int3
sbb
fwait
sar
mov
sub
pop
add
loop
call
int3
dec
or
int
popf
sub
push
or
dec
jp
lods
cwtl
adc
xchg
cmp
and
or
mov
cmp
dec
pop
sbb
xor
cli
or
in
add
daa
sub
movsb
or
imul
xchg
mov
out
pop
repnz
scas
inc
enter
dec
add
sahf
in
adc
movaps
fwait
ror
push
inc
or
jp
sarl
fisubrl
jae
loop
pop
push
sbb
hlt
in
scas
inc
fdivr
insb
cmpsl
adc
in
jmp
int
sbb
icebp
xchg
dec
inc
sub
in
push
fldt
icebp
aas
cmp
mov
xchg
in
sub
lret
popa
xlat
sbb
aad
dec
fcoms
lahf
std
int3
jle
jl
dec
fcomip
mov
jns
fidivl
cmp
std
xor
in
sti
shrb
pusha
push
lret
push
mov
lock
jae
scas
mov
gs
loopne
push
adc
dec
lds
fwait
ljmp
cld
add
sbb
jl
xchg
adc
sbb
movsb
cld
out
and
xchg
dec
or
sbbl
inc
xchg
and
xchg
imul
xchg
adc
lcall
xor
sbb
lcall
outsl
or
pushf
jp
orb
in
or
int3
cltd
sbb
sbb
pop
dec
test
jmp
adc
das
mov
xchg
pop
sbb
xchg
iret
xchg
stos
push
adc
push
pushf
xchg
stos
cmp
pop
sub
mov
xchg
mov
cld
mov
inc
mov
adc
je
push
dec
fcmove
js
dec
psllq
dec
pop
flds
cld
cmpsb
lods
aam
sbb
xchg
mov
adc
adc
lret
adc
xchg
int3
push
in
out
ret
xchg
push
sbb
fldcw
jg
push
mov
pushf
pusha
mov
and
dec
shrb
inc
lods
xor
pop
mov
insl
test
sahf
cld
aas
xor
add
jl
pop
pop
sti
mov
popf
mov
mov
pop
inc
loope
js
fwait
push
push
and
push
repz
sbb
push
push
push
push
mov
push
pop
mov
sbb
fcoms
fwait
mov
add
dec
push
xor
repz
xchg
sub
xchg
fs
in
adc
rcll
loopne
lahf
pop
sub
ja
in
mov
pop
cld
cwtl
dec
dec
xor
jle
vpshad
and
xchg
pop
jecxz
mov
cld
add
dec
sarl
xor
fs
sbb
adc
fisttpl
fucomp
lret
sbb
jbe
cmp
imul
ljmp
fldl
cli
sbb
inc
repnz
stos
sbb
sbb
out
into
leave
cwtl
repnz
dec
sbb
pusha
cld
jns
xor
insl
ss
sbb
int
cmpsb
mov
sbb
dec
dec
xorl
xchg
jl
cs
mov
and
enter
cld
xchg
imul
inc
cmp
jp
xlat
in
sbb
movsb
aam
dec
xchg
das
sbb
fucomi
jb
or
sbb
andb
in
or
cld
js
scas
dec
lds
lcall
in
imulb
ds
test
pushf
adc
and
mov
arpl
in
jecxz
jp
out
xchg
jns
adc
and
lock
sahf
jmp
jae
nop
cmpsb
fildl
fwait
jl
fildll
js
aaa
inc
jnp
dec
and
jbe
ljmp
cld
cmp
loope
cld
insb
cmp
js
andb
fbstp
out
mov
out
push
inc
push
add
lahf
mov
mov
test
dec
mov
dec
pop
sub
movsb
sub
cltd
mul
cmp
cmp
daa
in
repnz
icebp
addl
stc
or
out
push
test
jo
add
sbb
mov
mov
dec
fsts
push
cwtl
xchg
cld
repz
add
and
dec
jnp
and
sub
lea
inc
jmp
scas
pop
fisubrs
xchg
dec
ret
or
mov
jl
or
fwait
sbb
jge
cmp
popa
popa
xor
int3
pop
xchg
xchg
outsb
push
out
xor
xchg
fstpt
fsubrs
setl
mov
mov
cmp
out
sub
in
and
aam
mov
jp
mov
cli
cwtl
in
mov
in
btr
roll
psllq
and
dec
out
adc
sbb
fbld
and
xchg
jns
std
pop
ss
fnstsw
mov
pop
pop
or
icebp
aaa
jecxz
mov
cmp
es
and
jle
popa
sub
adc
inc
xor
fstps
hlt
repnz
fs
mov
in
xorb
inc
cmpsb
out
setl
sbb
popa
push
in
pop
inc
mov
dec
cmp
jecxz
adc
jb
fwait
or
jecxz
jns
dec
xchg
adc
aaa
repz
push
dec
loope
sbb
mov
stos
cmp
repz
pop
xchg
push
inc
inc
jmp
lret
out
mov
dec
dec
or
sbb
or
pop
fs
ds
cltd
mov
cmp
sub
adc
mov
sub
test
ja,pn
mov
adc
sbb
aam
lahf
cli
sub
or
cld
sub
out
aas
inc
lock
in
aam
das
sbb
adc
cmp
dec
or
fisttpll
sub
sub
jl
outsb
push
outsl
int3
adc
inc
adc
cmp
repz
mov
sub
imul
sbb
jmp
sbb
lret
jecxz
in
and
movsb
rcrb
xor
xor
cld
andb
in
or
aad
in
mov
imul
inc
test
test
dec
pop
xor
sbb
dec
test
xor
sbb
xor
inc
adc
enter
fwait
jecxz
cld
or
xor
mov
sub
imull
push
jl
repz
jae
mov
cld
xor
adc
adc
loopne
jmp
cmc
adc
iret
out
dec
add
push
cld
divb
ficoms
ds
xor
inc
dec
cmp
out
fs
movups
inc
js
cld
push
pop
inc
ret
jl
rcll
inc
inc
dec
enter
dec
daa
xor
jl
imul
mov
mov
mov
sbb
jl
mov
xchg
ficoms
mov
js
cs
repz
pushf
mov
cmc
pop
or
gs
mov
aas
mov
push
mov
or
cmp
adc
and
int3
cmp
add
in
mov
add
jno
jo
shrl
inc
inc
cs
addb
adc
or
dec
lea
repz
out
add
aam
rcrl
jle
dec
cmpsb
dec
aam
in
mov
pop
insb
daa
shll
fldt
fisubrl
leave
inc
push
mov
andb
xchg
or
lahf
sahf
pop
out
sbb
arpl
jne
mov
rcrl
fneni(8087
adc
add
xor
or
popf
sbb
leave
dec
stos
jbe
lret
sub
loopne
fwait
out
fsts
jl
xchg
push
fildl
or
mov
call
xor
or
mov
sbb
sbbl
xchg
popf
jb
push
pop
stos
pop
imul
repz
mov
sub
addl
adc
ficoms
out
sbb
les
xchg
sbbl
lods
and
imul
testl
sbb
xor
xchg
pop
fs
js
std
mov
dec
loopne
cld
fwait
int
push
fstpt
inc
filds
push
dec
repnz
popf
mov
cld
cmpsl
jb
pop
and
adc
nop
push
pop
and
add
fldcw
cmp
mov
push
std
or
cld
ficomps
mov
sahf
fadds
sub
insl
adc
or
xorl
insb
ds
repz
or
inc
jp
movb
mov
sub
cmp
fmull
fiaddl
out
pop
jle
lds
decb
and
push
addb
and
fidivrs
lahf
xor
scas
jecxz
jp
adc
pop
loop
out
int3
mov
jl
mov
cmp
xchg
outsb
xor
adc
out
pop
rcrl
add
cmpsl
jg
mov
iret
add
in
fwait
out
adc
fsts
xchg
or
mov
iret
ret
in
jecxz
iret
ficompl
out
push
push
cmp
pop
and
adc
or
out
stc
into
test
cld
inc
or
and
jmp
movsb
in
fldt
push
lods
adc
call
out
out
adc
shl
and
jo
add
ja
call
and
aas
cmp
jp
inc
pop
roll
xchg
cld
test
xor
dec
enter
aam
insl
jbe
dec
inc
test
mov
cmp
test
mov
inc
xchg
add
xchg
cmp
repz
mov
sub
outsb
insl
and
sbb
lret
fimull
adc
fsubs
test
or
and
adc
jae
xor
sbb
repnz
pop
das
outsl
push
adc
fbld
pusha
inc
cwtl
repz
xlat
and
inc
shll
lret
push
sbb
call
dec
or
adc
add
fcoml
loopne
cmpsb
jle
roll
sub
daa
push
sbb
or
mov
xchg
shlb
cwtl
mov
or
xor
or
mov
outsl
jo
pop
js
pop
inc
pusha
add
movsb
mov
or
movsb
sub
gs
out
fisttpll
fcomi
sbb
jl
adc
mov
sub
into
push
in
lahf
rolb
sbb
cmp
xlat
adcb
in
ja
fcomps
push
cmpsl
xor
xchg
push
push
stos
in
pop
push
add
add
jecxz
pop
sbb
adc
shl
cmc
in
jl
cmp
xchg
js
jns
sbb
jne
shll
enter
sub
dec
aam
fsubrs
cmp
or
movsb
and
cmp
repz
bound
add
dec
cld
mov
xchg
in
xchg
dec
repz
cwtl
cmpb
dec
push
adc
cmp
or
loop
and
mov
rcr
test
xchg
lods
sarb
push
adc
in
outsl
sbb
cmp
mov
loop
cmp
adc
outsb
popa
add
cltd
cmp
movsb
shlb
and
adc
test
mov
jb
pushl
and
mov
inc
jo
movsb
test
ljmp
sub
sti
xchg
or
lret
leave
mov
ret
adc
mov
iret
in
iret
sub
jbe
push
push
or
pcmpeqb
lock
sub
push
jnp
lret
leave
out
leave
or
in
loopne
cwtl
sahf
push
pushf
mov
lret
in
xor
test
fwait
lock
dec
fiaddl
sbb
xchg
cwtl
in
cwtl
jmp
sbb
outsl
adc
in
lret
xchg
pop
in
in
dec
movsb
negb
xor
xor
into
jbe
loop
sub
xchg
push
imul
loop
out
stos
push
sbb
push
iret
cmp
pop
add
xchg
xchg
xor
inc
cltd
scas
mov
xor
xor
movsl
popf
jo
and
or
lret
xor
jecxz
inc
out
test
pop
adc
jecxz
subl
loopne
call
std
movsl
dec
sbb
cmp
jb
jne
pop
shll
fimuls
cmp
xor
xor
lret
jp
pop
ja
mov
inc
mov
mov
pop
cld
pavgb
push
sbb
push
xchg
mov
and
fsubs
ror
add
ret
pop
mov
adc
andl
xor
jo
or
lock
iret
icebp
lock
mov
xor
jmp
and
fsubl
loope
xchg
aad
pop
mov
xchg
fsubl
imul
aaa
dec
lahf
sti
sbb
mov
push
lock
mov
xor
sarl
push
mov
into
cltd
loop
dec
adc
push
mov
cmp
pop
pop
lds
aam
idivb
bndldx
rorl
push
out
std
sbb
xchg
sbb
adc
in
jl
jns
push
mov
cmp
mov
sti
mov
jp
sbb
sub
aas
jl
repz
adc
shl
shlb
and
push
jae
fsubr
xchg
mov
scas
fmuls
fadd
inc
incb
and
mov
sbb
mov
pop
sbb
out
xchg
lods
pop
sub
in
rol
push
mov
inc
out
lcall
rep
sub
data16
loop
dec
mov
mov
pop
popf
in
fwait
lcall
xchg
push
xchg
pop
pop
push
jmp
add
mov
popf
pop
repz
nop
adc
mov
subb
or
test
and
pop
loopne
pop
enter
in
pop
push
sub
inc
in
jl
and
test
sub
aam
adc
mov
lods
ret
xchg
add
sbb
adc
mov
inc
insb
lds
leave
fdivp
xchg
and
adc
mov
jp
call
or
aad
fwait
dec
jbe
stos
jl
xchg
in
pusha
and
xor
inc
adc
or
aaa
hlt
sbb
cmp
aaa
dec
je
or
icebp
mov
mov
push
push
in
xchg
ret
ficomps
pop
xor
adc
mov
out
fstps
lods
jecxz
pop
lods
xor
mov
in
int3
fs
aaa
adc
sbb
pop
or
pop
repz
mov
and
sub
push
pushf
clc
or
imul
jp
shlb
jle
xor
shlb
enter
cli
mov
mov
mov
lea
add
mov
hlt
fwait
push
loop
stos
adc
jb
jp
fsts
in
notb
lcall
ljmp
xor
adc
adc
shr
cld
inc
enter
scas
imul
sbb
lock
dec
xor
pop
adc
xchg
mov
adc
imul
jmp
push
in
daa
enter
fs
lcall
out
and
fisttps
iret
ss
sbbb
stc
std
adcb
xor
popf
fnclex
mov
sbb
in
xor
inc
in
aaa
jecxz
pop
mov
mov
aad
add
jno
and
cmc
xor
jl
popa
or
xchg
hlt
sub
jae
pop
xorb
xchg
sub
xor
lock
fisttpll
repz
cmp
sbb
fwait
adc
or
call
or
outsb
shll
andl
dec
out
ret
jecxz
sahf
std
push
adc
sbb
and
cmp
repz
movsb
adc
lret
out
sbb
icebp
idiv
fistpl
cld
nop
and
mov
dec
out
bound
inc
cs
adc
adc
decl
xchg
or
push
stos
cmp
aaa
rcrl
mov
adc
dec
xchg
xchg
xchg
inc
icebp
dec
ret
push
popf
iret
xchg
fdivrl
test
pop
test
ljmp
sbb
xchg
or
adc
in
cmp
sub
mov
cld
adc
xchg
pushf
insb
inc
mov
dec
inc
jp
push
adc
ss
cwtl
aam
int3
cld
xor
sub
cli
jl
movsb
ret
inc
lods
lret
data16
sbb
pop
push
pop
push
lea
fsubs
out
cld
mov
sbb
pop
in
or
js
push
push
mov
fisubrl
cwtl
aas
adc
les
xchg
push
jl
mov
aad
dec
inc
mov
cld
faddl
arpl
jg
mov
test
inc
xor
push
mov
fcomps
sbb
lods
cmp
jle
cld
mov
and
push
jecxz
push
in
lcall
inc
sbb
rorl
mov
mov
stos
cmpsb
jecxz
cmp
mov
test
fdivrs
jl
iret
sbb
jns
aad
gs
push
dec
xchg
mov
in
inc
push
push
lahf
stc
xor
testl
lret
enter
pop
jl
pop
xlat
je
inc
pop
lcall
push
xchg
adcb
icebp
repz
mov
cmp
pop
push
into
jge
ljmp
fs
sbb
sbb
gs
xchg
fcmovnb
sar
pop
aaa
cld
sarl
pop
xchg
iret
cmpsb
cmp
loop
repnz
inc
or
dec
fimull
mov
psllq
mov
iret
dec
mov
add
mov
rorl
or
xor
repz
push
xor
sbb
or
aam
scas
leave
cld
push
pop
sbb
cs
sbb
jno
rol
xor
js
hlt
push
dec
and
mulb
arpl
cmpsl
cmp
rcll
sbb
pop
jl
push
cltd
xchg
pop
in
dec
sarb
cltd
sub
pop
ret
jg
dec
mov
dec
and
aam
cmp
push
xchg
mov
sbb
test
in
jb
stos
fisttpl
fpatan
repz
lahf
roll
xor
jge
loop
cld
push
mov
adc
dec
adc
ja
sarb
and
cmpsl
dec
and
cld
adc
push
cmp
popa
outsb
loope
popa
cmp
or
fs
cld
inc
mov
push
sbb
jo
push
ja
scas
jmp
add
fcomi
adc
fwait
lock
push
xchg
mov
jns
std
in
rorl
scas
test
sub
xor
or
out
adc
fucomi
sub
xchg
shll
fst
sub
out
jecxz
iret
fs
repz
xchg
fidivs
inc
std
sti
or
or
ljmp
daa
push
lcall
mov
dec
lods
out
sub
in
in
push
shl
pop
cltd
pop
jecxz
ret
out
and
in
cwtl
clc
pop
fistl
xchg
mov
mov
dec
inc
push
pushf
pop
in
jb
sbb
sbb
in
aam
xor
xor
cmp
mov
inc
adc
cld
fildl
jmp
dec
in
sbb
cmpl
mov
add
pop
adc
mull
loop
jno
int3
sbb
fdiv
add
ss
mov
sbb
xchg
and
sbb
push
hlt
push
xchg
out
fdivrp
xor
ficoml
std
test
sbb
sahf
in
fucomi
gs
hlt
fadds
mov
or
leave
cltd
aam
mov
les
int3
adc
into
fs
push
aaa
adc
xchg
adc
cld
push
ja
or
pushf
jecxz
xchg
push
mov
arpl
xor
cmp
sbb
pop
xchg
aam
shrl
mov
es
cmp
pop
adc
pop
sbb
cld
dec
push
jp
je
in
mov
popa
std
jmp
lret
cmp
xchg
movsb
clc
push
xchg
movsl
out
fs
jecxz
std
cmp
repz
dec
dec
and
inc
jle
sub
lea
mov
out
into
iret
es
in
idivl
cmp
adc
sbb
push
push
xor
aaa
jg
and
test
xor
sbb
add
addr16
or
jmp
idivb
add
ret
xchg
mov
out
loopne
dec
loope
inc
sti
ficoml
ds
ljmp
pop
push
push
sub
inc
mov
imul
data16
pop
repnz
jo
push
add
push
nop
setge
rorl
mov
mov
mov
inc
push
mov
pusha
into
lret
sahf
add
pusha
icebp
mov
bound
or
pushf
dec
xor
add
mov
lret
shl
out
sub
mov
jmp
push
xchg
lahf
div
add
test
add
das
movl
popf
and
insl
stc
xor
lret
popl
push
cmp
loope
in
jnp
lahf
shlb
mov
jmp
adc
xorl
enter
shl
jl
movsb
jns
repz
mov
stos
sbb
xor
xchg
mov
push
stos
push
pop
and
adc
cmpb
aas
jmp
jge
ljmp
repz
cmp
push
pusha
dec
push
idivb
data16
in
dec
jl
sub
scas
adc
and
mov
xor
cmp
iret
sbb
aam
in
xchg
cwtl
in
xchg
out
out
mov
or
pop
jecxz
dec
iret
xor
mov
repz
insb
sarb
xchg
fisttpll
cld
test
adc
cmpsl
push
es
mov
testb
fdivs
lds
pop
xlat
das
stos
jp
sbb
jae
dec
cmp
pop
xchg
out
push
aas
adc
add
pop
adc
cld
mov
push
loope
cmp
dec
push
imul
xchg
push
or
mov
shlb
push
adc
bound
xchg
inc
and
enterw
jbe
mov
xor
adc
jp
into
push
ljmp
out
imul
repz
inc
cmpsb
mov
adc
jne
and
ljmp
in
fidivrs
mov
push
ficompl
lret
mulb
jbe
xor
cli
dec
pop
fcompl
jle
jmp
mov
mov
and
test
inc
out
add
push
ret
cmc
push
sbb
sub
hlt
imul
aaa
clc
xchg
fidivrs
push
shr
xchg
xchg
push
sub
iret
add
into
cld
fwait
leave
leave
mov
aaa
clc
imul
xor
out
test
das
enter
xor
out
es
sar
lock
add
or
dec
lahf
adc
push
push
push
loop
fcomp
add
fcomip
add
sub
orb
and
fdivrs
jecxz
cld
scas
repz
dec
or
mov
cmp
add
in
adc
sub
out
mov
repz
mov
sbb
sbbb
jecxz
mov
and
push
or
je
das
and
dec
inc
mov
pop
cltd
es
push
pop
cld
push
cli
sbb
fadds
fnstsw
cmp
xchg
stc
les
xchg
orl
jbe
test
loope
daa
lods
mul
call
jp
sbb
add
jb
add
aas
cs
sub
add
add
adc
pop
sub
adc
fs
cmp
sub
pop
call
jle
pop
and
fistpll
dec
jo
jecxz
push
or
pop
cmp
push
xchg
shl
cmp
pop
cld
or
xchg
or
add
xor
lds
add
lret
test
les
add
cmp
xor
mov
sbb
mov
sbb
xorl
pop
pop
adc
inc
xor
pop
sbb
dec
or
ds
pop
and
jge
fs
or
cwtl
sbb
test
jl
xchg
pop
and
je
sbb
or
mov
pusha
fdivl
fcom
mov
test
cwtl
in
xchg
and
push
dec
and
test
adc
xchg
hlt
xorb
pop
sub
inc
cmp
push
sarb
fucomp
xchg
jo
xchg
adc
push
js
bswap
xor
or
push
mov
sub
psubusb
addb
push
inc
test
jecxz
sbb
cmp
sub
or
and
mov
movsb
mov
mov
lcall
pop
push
sub
clc
dec
movsb
jg
inc
je,pn
mov
xor
xchg
xchg
pop
insb
popa
mov
ret
xor
je
mov
dec
mov
sbb
sbb
cmp
push
or
pushf
lods
pop
mov
js
jle
inc
cwtl
add
movsb
lds
pop
pop
lock
mov
mov
mov
mov
insb
andb
cmp
sbb
and
fcomps
ds
hlt
clc
ds
mov
pushf
andb
cld
sahf
in
mov
movsb
jbe
cwtl
rorb
testl
enter
sub
ss
mov
testl
push
ljmp
pop
mov
push
call
mov
mov
icebp
clc
inc
push
push
sub
notl
dec
jmp
inc
mov
call
jle
jb
xchg
addb
adc
cmpsl
repnz
cmpsl
push
ficompl
mov
into
daa
xchg
or
adc
push
ret
add
mov
or
popa
add
dec
vsqrtps
out
inc
into
pop
inc
cld
aaa
mov
test
or
push
xchg
mov
dec
popf
lds
inc
adc
rcrb
testb
lret
jmp
daa
sbb
movsb
mov
fiadds
ljmp
adc
or
cmpsb
jp
pop
leave
fcmove
jge
out
int3
cmp
idivl
arpl
jecxz
adc
sbb
outsl
clc
sub
ret
out
cld
pushf
jp
cmp
loop
cli
or
pusha
cmp
lret
fwait
out
popf
or
stos
mov
push
sub
cmp
cld
aaa
adc
xchg
addr16
dec
out
sbb
repz
xor
mov
jp
ret
flds
cmpsb
cmp
ret
aad
xchg
shl
fsubr
sbb
dec
add
pop
mov
lcall
jl
std
fwait
insl
sbb
mov
repz
mov
add
inc
cwtl
cmpsb
adc
aas
dec
add
cmpl
push
xchg
jae
and
fs
into
int3
repz
dec
jmp
ljmp
inc
fs
std
imul
push
pop
or
and
leave
rcrb
in
js
push
xor
xchg
sub
push
rcr
clc
mov
add
mov
or
pushf
cli
shll
out
mov
xor
or
ficoms
mov
ljmp
xchg
dec
push
jp
ror
in
mov
xor
aas
push
addr16
jecxz
out
and
addr16
fwait
in
and
adc
stos
xchg
sbb
mov
pop
in
fisttpl
mov
dec
out
fldl
inc
jl
or
xchg
bound
inc
adc
repz
ret
scas
bound
pushf
and
sub
add
jl
push
sbb
adc
cli
dec
or
stos
enter
mov
cld
sub
in
ljmp
xor
jg
dec
jecxz
xchg
out
and
add
cmp
ja
and
mov
fs
push
adc
lock
sbb
loop
inc
dec
hlt
fcmovnb
mov
adc
jne
mov
dec
adc
lods
cmp
aam
shlb
cmp
cmp
mov
adc
clc
inc
push
pop
out
aam
cld
test
stos
leave
inc
xbegin
jecxz
icebp
or
xchg
lods
mov
add
mov
or
adc
aam
cltd
xor
mov
sti
faddl
inc
lret
inc
aas
jmp
cli
or
cld
push
ljmp
cmc
filds
cmp
mov
push
ljmp
sbb
repz
in
push
xchg
push
ljmp
and
jmp
out
stc
xlat
rcll
int3
repnz
scas
sub
pushf
dec
out
aam
pop
jl
push
ja
call
cmp
fdiv
lds
sub
jp
aas
ds
inc
je
jns
adc
lcall
adc
adc
and
mov
les
fwait
jae
push
and
and
and
mov
daa
call
mov
add
stos
or
ret
test
adc
sub
and
jno
out
sub
cs
add
sbb
nop
xor
sub
aam
sbb
mov
xchg
push
inc
fisubl
sbb
pop
jge
or
lods
out
sbb
fcompl
test
adc
cmp
stos
push
mov
imul
add
outsl
iret
movsl
pop
or
ja
js
jg
pop
out
push
fs
xlat
fsubs
sbb
movsl
mov
or
lods
aad
pushf
mov
jae
dec
jl
xor
les
adc
negl
sbb
sbb
adc
adc
sbb
push
push
loop
push
sbb
enter
sbb
pop
fdivrl
add
mov
push
jle
adc
mov
js
sub
mov
out
sbb
in
lcall
dec
movsb
pop
sbb
xor
ss
cmp
xor
mov
mov
jnp
jg
pop
and
aas
les
mov
mov
out
in
lods
sbb
cmp
push
mov
mov
xchg
in
icebp
push
jle
dec
cmp
dec
dec
pop
push
leave
dec
add
sub
loopne
xchg
pop
sbb
add
jnp
adc
cltd
cld
movsb
push
outsl
pop
jl
fnstsw
in
jle
adc
pop
cwtl
inc
ficompl
cwtl
pop
xchg
das
adc
pop
xchg
push
sbb
jb
fcompl
dec
lds
cmp
xor
pop
xchg
push
test
pushf
pop
sbb
and
rcrb
outsl
or
dec
iret
js
adc
xor
sub
mov
test
push
jl
or
aas
sbb
pop
sbb
fwait
lahf
movsb
outsl
or
daa
pusha
add
xorb
mov
sub
cmp
sub
mov
jecxz
fmuls
cmp
adc
xchg
pop
xor
and
cmp
mov
xchg
test
ss
cmp
and
cltd
or
adc
or
mov
scas
push
sbb
add
lods
movsb
sarl
xor
dec
or
pop
xor
xor
cmpsb
xchg
add
adc
ds
jl
xchg
push
hlt
adc
es
fdivs
dec
push
gs
or
inc
and
cmp
or
mov
cmp
pop
or
add
or
add
sbb
mov
daa
sahf
bound
fstpl
int
pop
cmp
push
pop
add
dec
in
push
dec
pushf
dec
sbb
cmp
xchg
xor
int3
xchg
movq
adc
mov
add
mov
mov
xor
pop
mov
sti
into
add
jl
sbb
pop
inc
inc
xchg
fldcw
and
out
adc
sbb
or
inc
pop
jl
bound
mov
sbb
into
cmp
repnz
fsub
push
pop
mov
push
adc
adc
pop
dec
inc
push
ret
push
push
rcrl
adc
in
movsl
repz
clc
stos
loop
or
jmp
and
pop
hlt
jno
pop
xor
jl
sbbb
dec
push
add
jecxz
js
mov
mov
jp
or
js
jo
push
mov
jns
rorl
adc
je
pop
cmp
push
outsb
aas
cmp
bound
pop
js
outsl
mov
jmp
sbb
cmp
add
gs
aaa
sub
mov
sub
clc
pop
scas
sbb
cld
push
jnp
imul
outsb
inc
outsl
push
mov
xchg
js
jo
add
sbb
sbb
imul
mov
dec
jbe
pop
add
lret
insb
pop
sahf
or
mov
mov
cmp
sarb
push
adc
adc
hlt
or
add
sub
dec
in
push
pop
adc
cmpsb
jbe
push
dec
dec
pop
pop
or
push
in
jmp
orb
mov
jnp
ja
and
xchg
ja
push
imul
ror
adc
add
int
aad
and
or
add
cmpsb
scas
outsb
ss
inc
dec
lds
popf
add
xor
das
inc
jo
pop
jb
jns
adc
out
test
pop
push
mov
je
jp
sbb
divb
xor
sub
outsb
pop
insb
push
bound
jnp
jge
jbe
lcall
mov
data16
test
mov
retw
data16
data16
in
add
sub
pop
fnstcw
ja
addr16
fucomip
shr
iret
jmp
lock
sbb
or
or
xor
and
push
call
pushf
loopne
out
in
mov
je
js
mov
int3
jl
jns
jp
jbe
sub
push
rolb
jle
jne
daa
jnp
cmp
jg
dec
sub
mov
imulb
and
cmp
and
add
mov
push
push
mov
jnp
arpl
jbe
into
daa
add
mov
cmc
and
jp
jge
movsl
pop
add
or
pop
and
outsl
jno
and
push
nop
pop
cwtl
adc
sub
or
push
ja
adc
push
and
jns
jne
lahf
xor
mov
add
jno
push
xor
arpl
imull
in
cli
mov
jb
xor
rcr
lods
jmp
dec
in
stos
cmpsb
fsubs
mov
lods
push
aad
mov
and
scas
mov
mov
test
jmp
add
movsl
mov
add
cmp
inc
inc
and
mov
add
call
sub
sbb
jle
adc
aam
sbb
cmp
pop
fs
lea
or
push
sub
adc
std
daa
pop
sbb
lock
or
dec
jno
add
sbb
pop
ljmp
and
fcomip
jns
sub
dec
jl
ss
inc
push
jne
pop
jle
push
push
fwait
pop
mov
je
gs
mov
sub
mov
outsl
sbb
jmp
divl
pop
add
dec
fs
xchg
push
dec
and
lret
cmp
jbe
push
iret
mov
dec
jle
je
jns
and
xchg
adc
daa
js
pop
push
mov
pop
push
or
mov
sub
push
jnp
in
je
add
jbe
or
dec
inc
push
mov
add
or
jp
mov
sub
fstps
cmp
push
cmp
add
popa
pop
lcall
jp
jns
js
push
pop
push
fidivs
adc
std
xchg
or
push
sbb
mov
and
jmp
adc
cmp
add
sbb
sbb
adc
and
and
mov
sbb
pushf
adc
or
mov
adc
pushf
rcll
fs
adc
mov
sub
clc
jle
ljmp
inc
sbb
lret
lret
sbb
or
sbb
cmp
adc
xchg
push
xchg
sbb
push
fcompl
push
js
push
add
sbb
fistpl
mov
fsubrp
sbb
xchg
adc
movsb
mov
fistpll
fcompl
mov
jl
add
inc
pushf
xchg
out
dec
dec
pop
sbb
push
es
xor
scas
jecxz
adc
aad
lods
ror
fcmovb
xor
fcmovb
or
adc
adc
stos
sti
iret
shll
jp
cmp
xlat
adc
mov
adc
iret
cmpsb
mov
sub
imul
dec
xor
les
int3
nop
mov
adc
enter
ljmp
pop
je
mov
inc
xchg
sbb
sbb
es
fsubrp
scas
mov
in
into
mov
add
or
and
xchg
sbb
xchg
sbb
jb
cld
sbb
pusha
insb
lock
fidivrl
push
pop
sbb
sbb
pop
adc
adc
lods
into
int
sbb
ds
pop
call
mov
sahf
mov
imul
cmp
or
mov
mov
lret
into
and
add
pushf
scas
dec
xchg
sub
aas
add
sbb
sbb
cmpsl
or
xor
mov
fcomps
movsb
add
clc
jg
inc
sbb
dec
pop
test
wrmsr
jae
mov
cmp
js
ljmp
sbb
or
into
dec
inc
pop
xchg
xchg
enter
or
sbb
mov
pop
lea
jmp
or
shlb
pop
or
cmp
les
into
in
lret
nopl
sbb
fcmovb
and
sti
pop
sbb
inc
inc
xchg
pop
shrl
shll
pop
pop
int3
scas
mov
dec
pop
or
icebp
xchg
and
call
mov
sub
sbb
mov
adc
ret
push
sub
push
cld
mov
adc
mov
fsubrl
imul
cmp
es
out
push
xor
cmp
sub
in
cld
lret
stos
mov
pop
sub
mov
sub
das
push
add
jmp
adc
push
or
shr
sub
lods
rcrl
dec
sub
or
xchg
cmpb
fmuls
es
jnp
dec
ss
jb
mov
lcall
adc
cmp
sbb
pop
pop
insb
hlt
lock
sbb
cmp
push
es
push
xchg
adc
hlt
xor
dec
test
pop
int3
fildl
ds
cs
sbb
lock
fs
pop
les
mov
adc
fldt
test
rcrl
pushf
and
movsb
out
out
in
jle
add
sub
adc
pop
lahf
in
in
mov
nop
sbb
mov
mov
adc
mov
push
aam
xlat
daa
jl
or
sbb
sbb
cmp
adc
pop
xchg
mov
cmp
fcoml
clc
cmp
jmp
or
push
jp
sbb
cmp
mov
cli
hlt
xor
mov
sub
xor
push
sbb
fwait
cwtl
add
sub
push
xor
xor
xor
fs
pop
je
movsb
push
test
sbb
ret
cli
les
or
out
hlt
inc
xchg
dec
int3
xor
mov
adc
or
mov
or
cmp
adc
pop
add
xor
add
pushf
mov
mov
movsb
orb
or
cmp
sbb
les
push
sahf
es
push
hlt
es
fs
outsl
mov
sbb
or
pop
mov
lret
pushf
fs
pusha
cmp
hlt
test
sbb
pusha
xor
dec
xor
es
push
xchg
cmc
sti
mov
cmp
es
or
inc
xor
jl
adc
fwait
or
mov
xchg
mov
faddp
sub
repz
push
xor
mov
adc
js
add
xor
add
add
mov
test
lods
cmp
pushf
mov
mov
dec
mov
mov
adc
pushf
in
pop
in
adc
cmp
es
je
cmp
mov
adc
sub
sub
and
pushf
or
aam
mov
jecxz
imul
rcll
aad
mov
movsb
push
xor
xchg
lods
pop
adc
add
jle
cmp
in
aam
and
mov
lods
mov
lods
mov
movsb
pop
stos
sti
add
aaa
in
jge
or
movsb
mov
adc
jp
es
lods
xor
dec
add
cmp
cli
je
lods
mov
cwtl
or
mov
lock
rcll
mov
sbb
addr16
addr16
sub
dec
pop
sub
movsl
add
cmp
cmp
cwtl
fisubs
imul
test
adc
sti
add
imul
pop
dec
cld
inc
pop
shll
ret
fadd
and
or
and
in
movsb
push
int
loopne
mov
add
pop
repz
sbb
fs
push
cmc
and
sete
mov
or
sbb
pusha
xchg
push
mulb
or
mul
fcomi
adc
in
and
aad
shl
add
pusha
jp
jnp
mov
cmc
dec
loopne
jno
jmp
in
fidivl
add
cmp
ljmp
pushf
hlt
cmc
pusha
xor
je
mov
int3
jo
int3
hlt
inc
out
mov
hlt
out
inc
sbb
cld
in
mov
ja
lret
or
push
in
ja
fs
test
lea
pop
or
sbb
test
mov
and
cld
jbe
cmp
xchg
adc
je
movsb
aaa
push
pop
pop
sbb
pop
jno
mov
cld
les
sub
aam
jl
jl
sub
add
lcall
inc
cmp
jecxz
add
pushf
in
mov
pusha
pop
adc
sbb
add
imul
aam
sbb
inc
pop
les
mov
pop
mov
mov
push
fs
or
in
push
lock
or
sti
aam
jns
aam
pop
popf
jp
or
and
lret
pushf
int3
je
mov
push
sub
les
test
sub
xor
fs
cmpsl
sbb
sub
dec
push
xchg
je
sub
les
imul
outsb
aam
push
or
jl
je
adc
int3
enter
cmp
pop
std
cli
in
les
stc
pop
xchg
sbb
push
loope
mov
xchg
lods
mov
fbld
fs
fs
lods
fwait
mov
adc
jp
xchg
sbb
adc
add
or
push
std
adc
scas
xor
sub
fwait
out
sbbb
shlb
push
dec
xchg
adc
mov
adc
in
mov
mov
sahf
xor
mov
cmp
push
add
fucomip
adc
or
fidivs
mov
adc
adc
pand
fidivrl
fdivrs
inc
xor
loopne
fdivp
cmp
fcom
pop
mov
inc
rcrb
pusha
mov
adc
dec
add
sbb
fidivrs
pop
dec
sub
inc
adc
frstor
fcompl
cwtl
xor
data16
xor
adc
hlt
mov
and
je
cld
lods
and
repz
repnz
push
sub
sbb
add
pop
js
cmp
cmp
andl
aam
pop
add
xor
pop
fdivrp
sbb
pop
or
inc
fimull
jne
jl
add
dec
sub
shll
sub
xlat
test
xor
jecxz
out
in
fs
mov
jns
xor
or
addl
sub
dec
test
mov
add
xor
add
cmp
add
dec
add
sbb
sbb
ret
xchg
mov
int3
mov
push
bound
es
add
cmp
hlt
mov
ficomps
mov
les
fcoms
and
enter
sbb
cld
cmpsl
jmp
or
cmp
sbb
aas
dec
add
xchg
je
test
test
sbb
xor
es
sbb
aas
sbb
les
inc
js
jnp
xor
icebp
or
xchg
pop
dec
xchg
sbb
mov
and
xor
aam
jecxz
fcom
mov
sbbb
into
or
mov
sbb
pop
dec
jae
xchg
cmp
sbb
jl
pushf
scas
add
clc
cmp
in
mov
fs
cmp
pop
cwtl
pushf
fldenv
cmp
adc
inc
mov
jns
mov
jne
push
mov
test
call
cmp
aam
enter
add
xor
or
loopne
jl
xchg
xchg
xchg
push
test
pop
test
rcll
push
pop
pop
pop
jp
add
inc
mov
push
push
jl
sbb
lods
pop
je
les
pop
and
movsb
aam
in
fildl
inc
jl
je
jge
pop
add
in
imul
mov
and
dec
pop
or
sbb
test
aam
pop
sbb
ljmp
push
or
sbb
xchg
aas
mov
add
rcrb
pop
add
pop
fsubrs
popf
jbe
adcb
xchg
mov
push
add
fwait
cmp
mov
test
les
nop
andb
in
mov
inc
sub
les
or
adc
fs
add
adc
adc
cmp
int3
add
mov
fists
int3
in
movsb
xchg
xchg
ficoml
sbb
push
das
pop
mov
sub
shr
sub
sbb
lahf
test
lret
mov
xchg
pop
faddl
sbb
lods
pop
xor
pop
push
xlat
aam
sub
cld
je
sbb
xor
xor
xor
lahf
cli
adc
adc
inc
pop
adc
mov
int3
outsb
sub
xor
pop
pushf
movsb
add
adc
ss
add
push
rorl
mov
sbb
mov
ds
je
and
pop
sub
xor
je
or
outsb
in
push
cwtl
and
fs
sbb
hlt
jg
fdivrl
sti
test
icebp
xor
movsb
lods
cmp
jl
jo
fisubs
dec
inc
mov
mov
pop
cwtl
push
mov
pop
das
add
loopne
cld
movsb
shrb
push
jo
repz
test
movsb
jb
pusha
sub
sbb
jno
inc
cwtl
adc
pop
and
jbe
test
sbb
xchg
mov
sahf
inc
hlt
jmp
ds
call
pop
dec
or
pop
loop
xchg
pop
setno
enter
inc
cmpsb
push
xor
sbb
mov
mov
dec
pop
or
inc
repz
jnp
pop
ljmp
cli
pop
mov
pop
xchg
mov
pop
push
lret
mov
mov
cmp
or
jl
pop
sbb
add
mov
pop
lret
adc
fs
mov
xchg
pop
mov
push
mov
dec
inc
cmp
pop
clc
and
dec
xchg
mov
inc
lret
adc
test
fistpl
mov
cmp
pop
out
cwtl
and
pop
jbe
sbb
pop
jge
push
adc
addb
sub
imul
xchg
lahf
clc
into
hlt
adc
jle
adc
lret
insb
dec
add
outsb
jnp
fwait
lret
les
jne
mov
pusha
and
xchg
sbb
ret
movsb
dec
shrb
fsubrs
movsl
lock
xor
mov
frstpm(287
sbb
je
popa
or
cwtl
cmp
mov
mov
push
or
and
inc
ret
inc
inc
cmp
sbb
shll
or
inc
mov
xchg
add
adc
add
aam
dec
push
or
jp
pop
cmp
sub
adc
or
ljmp
lods
mov
or
add
pop
cmp
inc
sti
add
test
xchg
mov
sbb
mov
mov
xchg
push
nop
xchg
pushf
fcomip
repnz
pop
test
push
xor
hlt
fdivs
xchg
sbb
lods
psadbw
lods
aas
scas
mov
jnp
repnz
add
add
negb
inc
testb
adc
imul
push
hlt
pminub
xchg
hlt
mov
nop
cmpsb
orb
pushf
push
or
fiaddl
pop
pop
cwtl
and
pop
and
cmp
je
push
pop
lods
test
push
cmp
sub
or
inc
push
xor
je
xor
jecxz
dec
pusha
xorb
lahf
je
out
loopne
les
pop
je
aam
mov
sbb
or
dec
cwtl
xchg
or
es
or
xchg
int3
test
pop
sub
adc
xchg
lahf
and
enter
lahf
pushf
or
sbb
dec
lock
int3
sbb
mov
add
or
adc
sub
add
adc
mov
xor
xor
xchg
add
or
fcomps
idivl
pushf
push
mov
incb
pop
mov
sub
adc
cmp
pop
xor
mov
inc
rclb
rolb
adc
xchg
xor
sub
and
sub
aaa
jo
js
adc
adc
xchg
daa
or
cmp
cmp
sbb
add
and
mov
adc
in
out
adc
pop
jmp
xchg
fisttpl
fwait
cmp
cmp
cmp
pop
in
mov
cmp
pop
movsb
fs
dec
test
push
fs
sub
add
popa
loopne
jp
jl
movsl
pop
adc
data16
add
pop
ja
jp
test
ja
dec
sub
add
adc
pop
and
and
adc
sub
lcall
cmp
nop
je
int3
adc
movsl
or
xchg
adc
rcll
lds
sbb
jnp
stos
push
sub
shlb
push
mov
or
push
jp
ljmp
movsb
jae
insb
repz
dec
sti
les
sbb
dec
mov
hlt
adc
in
loopne
fldcw
jmp
in
and
je
push
mov
test
gs
les
xor
add
in
stc
or
xor
test
mov
addb
jns
dec
mov
test
sbb
sub
sbb
sub
in
shll
loope
lods
insb
cwtl
pop
test
in
push
mov
insl
in
cld
or
cmp
or
in
icebp
add
cmp
mov
js
dec
in
jno
inc
mov
sbb
sub
push
es
sbb
sub
pop
xlat
daa
out
lcall
data16
pop
stos
imul
cli
or
testb
in
sti
or
aaa
testl
mov
jbe
inc
in
jnp
dec
mov
xchg
adc
and
push
fisubrs
out
in
shll
jecxz
fildll
out
in
push
mov
outsb
in
push
mov
outsl
in
repnz
decb
into
in
repz
aas
decl
iret
in
jb
inc
mov
mov
addl
dec
je
scas
sub
enter
and
inc
cltd
insb
lock
aas
lret
hlt
hlt
adc
lcall
pop
xchg
cld
cwtl
add
test
pop
mov
cmp
shrl
in
mov
push
rorb
sbb
lahf
cmp
push
xlat
mov
repz
add
cmp
lds
or
and
shlb
jl
lfs
mov
imul
xchg
or
fisubrl
adc
pop
ljmp
ljmp
cmp
sbb
test
add
out
or
test
out
sbb
movsb
xchg
adc
sbb
daa
dec
push
add
movsb
rcrb
jnp
rcrb
xlat
and
and
test
rcrl
jns
iret
push
leave
add
add
enter
mov
xor
inc
mov
aam
lret
fs
lret
adc
int
pop
sbb
xor
sub
xchg
subl
inc
or
pop
sub
xorb
int3
xchg
aam
test
mov
sub
insb
pop
xor
add
pushf
jae
hlt
je
outsl
inc
lret
jmp
lahf
aam
divb
mov
stos
mov
adc
sbbb
xor
adc
popa
add
movsl
cmp
mov
adc
sbb
sbb
cmpsb
push
sbb
lcall
shll
push
add
xor
and
je
jnp
adc
mov
aam
xor
es
sar
sbb
jecxz
pushf
adc
pushf
add
jno
int
mov
aas
xor
mov
sub
mov
in
dec
es
int3
cmpsb
in
cmpl
mov
pop
xchg
dec
outsl
je
cmp
pop
insb
jns
imul
xor
push
jg
dec
dec
arpl
aam
nop
dec
pop
sbb
xor
int3
cmpsl
cld
xor
fdivrs
adc
in
pop
sahf
cmp
adc
sbb
jp
xor
adc
mov
stos
adc
mov
je
mov
inc
xor
sar
jp
sbb
cltd
adc
rorb
xor
bts
mov
cmp
rorl
mov
cmp
mov
leave
ljmp
out
sub
jp
dec
mov
pop
out
cmp
push
push
xchg
xchg
or
leave
pop
in
mov
inc
aam
mov
mov
xchg
dec
fwait
je
js
xchg
int
inc
xchg
or
dec
jl
popf
mov
or
arpl
clc
shrb
pusha
cmp
jnp
imul
sbb
inc
cmp
sbb
push
jo
add
pop
adc
push
sti
push
imul
jg
mov
cld
pop
xor
daa
adc
sbb
in
push
pop
dec
adc
aam
jae
push
pop
shl
sub
or
jl
decl
imul
jae
dec
stos
test
pushf
xchg
or
stos
insb
in
dec
imul
add
lds
xor
add
adcl
cmp
or
add
lds
les
xchg
xchg
ret
or
sti
sbb
cmp
cli
sbb
inc
in
mov
adc
cmp
add
jecxz
push
mov
jmp
pushf
mov
inc
hlt
sub
loopne
push
daa
pushf
or
xchg
loopne
lods
xor
hlt
sbb
push
subb
add
inc
lret
xchg
mov
lret
sbb
mov
daa
pop
cmp
nop
sub
add
and
hlt
mov
jmp
mov
rorb
in
rclb
movsb
mov
add
insb
popa
cmp
aam
lcall
pushf
or
xchg
clc
popa
xchg
je
fwait
mov
jg
je
adc
or
jl
adc
inc
add
xchg
je
lahf
fmuls
push
jne
dec
or
stos
pop
ret
pop
xchg
fisttpll
or
push
push
dec
cmp
shll
or
ljmp
rcrb
add
jnp
jno
adc
ljmp
sub
push
mov
sub
pop
push
aam
dec
jbe
cmp
hlt
insb
rcll
fs
xchg
sahf
cmp
mov
lods
mov
xor
or
das
adc
cs
sarl
xor
rolb
stos
es
add
sbb
sbb
cmp
pop
mov
xor
syscall
mov
push
pop
ss
lcall
jl
jmp
or
sbb
xor
xorb
cmp
sbb
xor
pop
xor
inc
dec
cmpsb
xchg
jbe
fsubl
mov
xor
add
mov
stos
add
insb
push
jo
js
push
mull
adc
sub
or
mov
imul
push
and
jnp
cmp
xor
movq
jl
pop
xchg
dec
jae
insl
sub
mov
andb
sub
push
and
push
xchg
pop
add
pop
hlt
imul
push
adc
icebp
pushf
lds
or
jae
adc
in
and
inc
dec
arpl
fstpt
vmwrite
dec
rcll
stc
lcall
mov
sahf
fdivp
es
rcrl
dec
es
mov
mov
and
daa
sbb
mov
xchg
les
lret
sbb
ss
cmp
adc
push
push
lods
stc
out
sub
sbb
das
pop
sbb
add
or
sbb
mov
sarb
arpl
fs
jl
je
sbb
mov
rcll
int3
xor
mov
jp
adc
inc
cli
or
xchg
fistpl
push
add
mov
movsb
mov
xor
orb
push
pop
es
mov
test
cli
xor
aam
movsb
add
lods
negl
sbb
cmp
push
dec
xchg
and
and
loop
jecxz
fcoms
and
mov
pop
dec
hlt
push
cld
xchg
cld
push
aas
sbb
xchg
push
push
pop
xchg
jnp
fs
fisubrs
xchg
or
mov
adc
xor
sbb
inc
pop
dec
fwait
lahf
clc
addr16
nop
inc
pop
incl
sbb
fcomp
fdivs
or
insb
or
push
out
xor
rclb
sub
pop
lahf
adc
mov
inc
sbb
pop
and
addr16
xor
xor
js
and
dec
inc
push
sti
pop
inc
push
adc
inc
and
sub
mov
cmp
and
dec
popf
pop
hlt
cmp
ficoml
cmp
sbb
pop
adc
or
adc
push
les
clc
xor
pop
mov
je
cmp
push
mov
movsb
test
lock
pop
je
jecxz
adc
sbb
pop
sti
mov
cs
inc
mov
xor
scas
aam
pop
jecxz
push
mov
ret
push
push
outsb
jl
insl
lods
push
insb
xchg
dec
bnd
push
sbb
movsb
mov
xor
cmp
pop
add
vmwrite
fidivrl
shl
adc
pusha
fstps
mov
test
stos
jmp
jle
xchg
aas
lods
stos
pop
les
push
repnz
mov
imul
aaa
cmp
cmp
cwtl
push
jge
sub
cmpl
repnz
adc
pop
leave
adc
pop
push
sub
iret
jnp
adc
pushl
jno
or
pop
xchg
hlt
mov
int3
mov
jns
add
add
or
je
aas
push
es
jns
jae
loopne
in
adc
fs
pop
pop
or
cmc
mov
sub
dec
out
jge
shlb
fwait
pop
aas
in
adc
jne
test
adc
insb
test
scas
push
add
mov
pop
ja
dec
or
push
adc
cmpb
or
pop
sbbb
mov
sub
shl
mov
aam
jl
dec
add
lea
adc
hlt
imul
adc
ret
sbb
test
adc
or
sbb
insb
lds
push
fdivrl
test
push
jl
sbb
roll
or
adc
sub
addb
sub
lret
imul
or
roll
or
or
shlb
lods
mov
nop
ljmp
push
mov
cmp
cmp
lret
aam
ror
mov
xchg
subl
cld
cmp
add
or
jns
jne
or
aaa
pop
dec
out
aas
add
mov
push
jbe
pop
push
mov
sti
sub
jne
in
mov
or
sbb
jge
sti
push
jnp
xor
dec
dec
jne
mov
push
imul
js
jo
jae
push
cmp
inc
jg
in
fisubrl
jg
adc
or
adc
fidivrl
lock
cmpsl
pop
jno
sub
je
pushf
sbb
hlt
jns
or
stos
jns
fistpll
xchg
push
imul
sub
int3
push
test
mov
add
jp
xor
mov
inc
inc
sub
pop
movsb
push
jns
and
repnz
and
sbb
lock
jno
scas
and
aaa
pop
inc
pop
lock
aam
sbb
push
lret
and
fsubrl
hlt
popf
adc
push
push
adc
cld
rorl
or
pop
jl
ds
or
cmp
adc
add
adc
lahf
out
enter
pop
sahf
insb
ss
mov
pop
adc
adc
pop
sub
fstps
in
mov
cmp
pop
jmp
and
push
xchg
pop
xor
xor
add
mov
cmp
pop
sub
movsb
ds
fisttps
rclb
pop
loopne
pop
sbb
or
dec
cmp
push
dec
idivl
jne
push
adc
imul
push
in
mov
inc
cmp
ret
iret
nop
sub
adc
mov
jge
sbb
gs
xchg
hlt
or
adc
inc
cmp
pop
sbb
int3
mov
or
push
test
imul
scas
dec
bndstx
sbb
dec
lahf
and
sbb
sbb
and
push
cmp
lret
lret
add
pop
sbb
jg
sub
insb
push
jl
nop
mov
sarb
sbb
mov
add
pop
inc
pop
fists
pop
adc
repnz
fmull
or
push
xor
jns
xor
jle
adc
adc
cmp
adc
jl
add
mov
dec
ss
push
hlt
pop
cmp
add
cmp
test
pop
inc
mov
lcall
sbb
pop
mov
lcall
push
push
mov
in
test
into
mov
jae
dec
rorl
mov
push
pop
fdiv
pop
aad
jbe
in
in
outsl
leave
int3
lock
andb
xor
hlt
mov
add
and
xor
imul
fsubr
movsl
andb
nop
sub
xor
inc
cmp
sbb
xor
add
shl
adc
imull
test
adc
nop
aas
cmp
jl
jp
dec
and
fcomps
and
or
and
sbb
sbb
das
pop
add
cmp
cs
and
sbb
or
xor
fmuls
dec
cmp
aam
pop
or
pop
sbb
int3
xchg
push
or
jmp
add
ret
adc
add
adc
sbb
xor
pop
lcall
sbb
cltd
pop
and
cmp
fwait
adc
xor
test
data16
pop
pushf
push
xor
fwait
pop
or
sbb
pushf
cmp
sbb
add
test
pusha
inc
adc
mov
sbb
sub
ficoms
dec
inc
pop
sub
insb
hlt
adc
stos
inc
stc
loope
pop
inc
add
fisttpl
sti
cmp
inc
sbb
pop
adc
js
adc
xchg
mov
or
xlat
sub
cs
lock
inc
adcl
jnp
xchg
sub
sub
mov
test
cmp
jmp
add
inc
or
ljmp
adc
fdivr
or
loope
cmp
les
sbb
xor
pop
mov
pop
in
add
jns
cmp
addr16
mov
mov
sbb
pop
or
or
sbb
jmp
call
jae
mov
or
shll
xor
add
pop
pop
sarl
dec
insb
inc
lods
add
add
jg
lret
fistps
jg
pop
or
mov
push
ja
das
cld
xchg
push
xor
jbe
dec
sbb
jbe
add
cmpsb
cmp
imul
mov
or
xor
ja
dec
js
sbbb
adc
mov
adc
subl
push
adc
inc
hlt
mov
les
fsts
les
sbb
sbb
adc
test
or
mov
push
adc
push
mov
mov
and
xor
cmp
sub
stos
aaa
sub
lahf
or
ds
inc
jle
ret
out
or
sub
adc
sub
jne
stos
sahf
les
xchg
mov
in
fmuls
xor
adc
shll
fbstp
mov
out
xor
enter
inc
xchg
cltd
pop
mov
and
aaa
pop
int3
aas
sub
push
lock
jg
inc
mov
dec
mov
sub
arpl
mov
push
cwtl
add
data16
jns
in
dec
mov
in
mov
push
jp
xor
ljmp
dec
pop
sub
dec
and
inc
cwtl
dec
das
adc
rcr
pushf
adc
sahf
lea
adcl
incl
imul
ficomps
jnp
dec
inc
test
fidivl
inc
xlat
dec
push
xchg
xor
sub
mov
add
out
push
or
pop
outsl
insb
dec
das
dec
jne
jl
ret
sub
pushf
sub
cs
outsl
xor
mov
sub
lahf
jecxz
pop
nop
je
sub
pushf
push
mov
push
sub
aam
dec
test
enter
pusha
fst
nop
mov
in
imul
xor
sub
pop
hlt
cmp
sbb
cmp
pop
js
xchg
les
loopne
or
sbb
jl
xor
or
js
adc
in
pop
and
mov
fs
xor
xchg
sub
or
add
dec
fs
ljmp
pushf
fcompl
xchg
fcomps
fadd
xchg
lock
rcrl
or
shll
fwait
imul
cwtl
push
mov
adc
inc
mov
popf
pop
inc
adc
and
xchg
cwtl
mov
and
mov
jns
ja
aad
xor
adc
mov
adc
pop
and
shrb
js
cltd
add
outsl
sbb
popaw
xor
jmp
dec
and
or
pop
adc
outsb
adc
push
fstl
fsubs
js
fnstcw
push
mov
jbe
jg
pop
repnz
jno
adc
pop
jg
jp
outsl
or
push
sbb
adc
pop
dec
sbb
pop
pop
jg
arpl
and
and
sub
loopne
jmp
cmpsb
adc
jl
imul
pop
loop
or
adc
dec
dec
outsl
sbb
pushf
and
lcall
mov
pushf
das
mov
adc
mov
adc
push
push
pop
push
iret
push
out
dec
int
imul
addr16
popa
dec
pusha
dec
xchg
add
js
aam
mov
cmpsb
enter
pusha
dec
fimuls
xor
into
push
pop
aaa
adc
pop
aam
or
sub
aaa
add
xchg
adc
push
mov
jecxz
aad
je
sub
cmp
add
jne
ret
popf
inc
jl
je
orb
insl
jae
and
std
add
repnz
inc
das
sbb
xchg
xchg
rorl
pop
jmp
jns
jmp
dec
cmp
sub
inc
dec
xor
aam
sbb
inc
xchg
sub
in
jmp
aad
imul
mov
xchg
je
cld
mov
dec
mov
ja
pop
jno
dec
xor
xor
xor
or
sahf
das
lcall
ja
test
mov
jo
testb
cmpsb
push
xchg
sub
test
inc
pop
dec
ja
adc
inc
cmp
sub
inc
lcall
inc
dec
jnp
xor
fcmovb
jbe
jge
sub
push
nop
fs
push
ss
dec
cmpl
dec
addr16
pop
pop
xor
testl
in
cmp
pop
inc
or
cmp
push
mov
push
and
sub
mov
cltd
jle
dec
jno
popa
insl
movsl
lods
push
movsb
sbb
movsl
pop
pop
xor
imul
popa
ret
aaa
lods
pop
xor
lret
aam
or
movsb
push
mov
and
jl
cmp
and
sub
cmc
gs
jb
sbb
adc
gs
jbe
adc
jle
jle
mov
ja
js
add
lahf
cli
jnp
jp
cld
or
add
and
or
cmp
push
cs
outsb
adc
imul
jnp
xor
sbb
adc
pop
and
jl
test
imul
jge
dec
xor
je
xchg
insl
fstpt
lcall
ss
out
mov
inc
or
adc
inc
or
outsb
fadds
stos
notb
lret
sub
cmc
or
mov
adc
clc
or
roll
or
and
es
ljmp
adc
sub
push
jg
sbb
ficompl
addr16
sbb
sbb
pop
adc
xor
or
add
insb
sub
dec
sbb
in
es
outsl
and
sbb
je
insb
lds
in
pop
pop
and
ficoms
lods
jp
popf
inc
outsl
push
jo
inc
xor
notl
lahf
adc
mov
or
adc
sbb
cmp
jle
or
adc
pop
add
cmp
adc
mov
push
adc
arpl
aas
push
jo
scas
pop
mov
aas
xor
sbb
inc
mov
aas
pop
outsl
mov
outsl
push
or
cmpsl
cs
xchg
mov
outsl
pop
cmp
and
mov
mov
or
or
adc
cmp
dec
push
pop
lods
jge
push
xchg
sarb
pop
xlat
dec
sub
sub
adcb
scas
push
jo
dec
pop
fs
gs
aaa
sub
fnsave
xlat
inc
add
cmp
unpcklps
fdivrl
adc
cwtl
push
stos
adc
or
xchg
movb
cmp
or
mov
adc
xchg
sarl
scas
fsubr
inc
and
lcall
les
add
fmuls
nop
hlt
movsb
jo
sbb
pushf
lret
xlat
or
subb
jmp
add
imul
orl
jl
add
or
adc
mov
xchg
scas
push
ljmp
hlt
adc
sbb
xor
call
add
sub
cmp
add
cwtl
scas
push
dec
cltd
adc
movsb
and
fs
cmp
lods
dec
test
pop
lret
test
adc
lcall
pop
cmp
mov
or
cmp
or
repz
sbb
sbb
popf
clc
sbb
adc
adc
adc
popf
clc
adc
lock
adc
pminsw
add
popf
clc
add
adc
push
xor
out
test
adc
cmp
sbb
sbb
pop
add
mov
imul
je
mov
jl
sti
push
ss
cmp
sbb
or
pushf
lock
fsubrl
sbb
sbb
inc
push
pushf
fnstcw
and
xor
jl
or
pop
les
xor
or
cld
loopne
dec
ret
push
mov
and
pop
mov
pushf
ret
mov
test
pop
mov
or
push
mov
and
cli
hlt
es
pop
lcall
hlt
sbb
ret
and
fcompl
push
or
xor
lret
xchg
push
test
pop
test
jg
and
arpl
add
or
push
stos
or
add
pop
and
or
jl
and
mov
fwait
pop
mov
push
js
jne
cld
cld
pop
or
or
jl
les
shr
or
or
push
pushf
fmuls
and
je
ret
fs
pop
xchg
pop
int3
mov
pop
aam
or
or
in
rclb
adc
push
and
cmp
or
dec
stos
push
adc
jl
fwait
push
fs
or
pop
adc
pop
int3
movsb
fcoml
mov
add
push
mov
xor
sub
pop
fistpl
cmp
or
pop
out
imul
insb
jmp
inc
or
pop
mov
mov
pandn
ja
sbb
mov
movsb
fdivl
and
cmp
movsb
pusha
dec
dec
or
pop
xor
xchg
push
lock
xchg
ja
pop
mov
lods
orl
cmp
lds
cli
in
scas
dec
fs
adc
sbbl
lahf
je
les
or
int3
dec
ret
xchg
adc
mov
push
or
mov
rorb
clc
adc
or
pop
jge
clc
sti
jne
push
aam
xor
xor
aam
ss
sti
cld
rorb
aam
xor
les
pop
sbb
pop
or
sbb
mov
sub
or
mov
insb
dec
mov
or
pop
dec
xor
mov
lods
movsb
mov
test
aam
xor
adc
arpl
pop
add
or
push
push
fcomps
cmp
or
sbb
xchg
lods
cwtl
mov
adc
cld
sbb
pop
movsb
mov
test
cld
dec
jb
je
clc
xchg
pop
xor
mov
sub
clc
hlt
cli
push
scas
push
fwait
pop
inc
push
or
cmp
sarl
test
hlt
imul
cmc
sbb
sbb
and
les
incl
inc
dec
and
insb
mov
pop
pop
or
test
lods
lods
lods
mov
test
fmull
es
or
hlt
ret
fstl
sbb
and
inc
mov
loope
inc
dec
inc
push
and
jl
or
mov
pusha
pop
insb
mov
dec
test
push
movsb
jmp
clc
ja
and
adc
std
hlt
mov
or
pop
mov
push
std
ja
fistpll
mov
scas
in
std
cmpsl
add
lret
les
in
std
ss
loopne
xchg
adc
xchg
or
adc
stc
in
cld
lods
test
dec
push
test
pop
jl
jne
push
lock
xchg
clc
mov
orl
push
push
fadd
pop
in
aam
sbb
repz
jge
roll
paddb
pop
repz
aam
mov
in
cs
fwait
pop
mov
or
jecxz
xchg
lock
pop
rep
hlt
mov
test
adc
or
or
jge
fcoms
inc
cwtl
inc
push
xchg
sub
fs
jmp
jl
push
pop
sub
cmp
nop
ljmp
lock
int3
repnz
push
pop
or
in
hlt
push
or
fs
xor
push
sbb
je
lret
dec
adc
adc
add
test
push
test
jg
and
icebp
cmp
les
pop
hlt
sub
xchg
movsb
loopne
and
or
jge
ljmp
or
stos
in
lock
push
test
pop
mov
jg
and
int3
in
hlt
lock
pop
or
fsubrs
mov
mov
jl
aad
aad
xchg
testl
insb
test
mov
pop
ficoml
push
in
mov
les
xchg
add
dec
and
es
and
jl
jl
mov
and
xchg
mov
sub
test
pop
int3
or
bound
cmc
xchg
fimull
push
or
xchg
push
add
push
lret
fcomps
push
fs
pop
pop
xchg
sub
insb
xchg
push
lret
in
and
push
and
movsb
xchg
cld
je
adc
cmp
xchg
cld
loopne
imul
in
dec
pop
hlt
xchg
pop
xor
or
jge
fcoms
sub
movsb
call
jg
and
in
adc
fwait
in
adc
sbb
orl
push
push
faddl
lock
pop
insb
aam
xor
mov
dec
int3
jecxz
inc
push
and
int3
mov
sbb
xor
popf
push
xor
and
jl
push
js
dec
sbb
fs
test
xchg
or
mov
xchg
lods
loopne
xchg
test
in
or
cld
inc
lods
in
add
jmp
fwait
and
or
push
push
mov
dec
push
sub
mov
jl
pop
or
sbb
aam
ret
dec
les
pusha
mov
scas
push
sbb
call
or
popf
je
push
pushf
ja
sbb
orl
ljmp
xor
inc
jge
imul
hlt
scas
insb
cltd
dec
mov
jecxz
mov
rcrb
xor
push
or
hlt
mov
jl
pushf
out
lods
test
mov
pop
cld
aam
clc
cld
sbb
hlt
orb
cmp
test
sub
dec
std
mov
pop
jle
adc
xor
or
push
pushf
cmp
xor
add
fs
push
mov
cwtl
sbb
push
mov
mov
and
jl
add
jne
sub
push
in
sub
in
jbe
fs
cli
pop
in
sub
or
in
jmp
lahf
fwait
inc
jp
push
mov
aam
fsubl
jecxz
or
or
mov
ffreep
sub
adc
cmp
pop
sub
pop
dec
xor
add
cmp
test
mov
mov
jecxz
pop
test
and
pop
movsb
cmp
pop
jl
les
pop
cld
rorb
insb
fbld
sbb
add
gs
jl
cmp
imul
cmp
cmp
je
sbb
sbb
sahf
mov
cmp
cmp
ficompl
xlat
sbb
int3
or
stc
jecxz
and
mov
xchg
cmp
loop
add
or
and
mov
push
adc
aad
shld
or
cmpl
sub
mov
mov
mov
loope
les
mov
mov
lcall
xchg
shlb
inc
loope
std
push
or
mov
add
mov
clc
hlt
push
cmp
scas
cmp
adc
stos
pop
or
add
xor
xor
cmp
or
push
push
cmp
jns
push
dec
dec
jbe
xor
xchg
xor
movsb
loopne
insb
int3
lahf
fiaddl
or
sub
pop
scas
cmp
les
cld
mov
jl
fs
dec
push
movsb
and
dec
xor
xchg
mov
fdivl
sub
jl
pop
adc
push
cmp
insb
dec
and
das
pop
mov
cwtl
out
xor
xor
movsb
sbb
fsubrl
aam
dec
xchg
pop
stos
hlt
mov
lods
jmp
push
sub
cmp
pop
xor
xor
and
int3
je
mov
and
cld
sti
xor
je,pn
pop
pop
sti
fs
adc
inc
in
cwtl
outsb
fldcw
pop
in
test
in
cmp
movsb
mov
in
inc
pop
les
cmp
xor
push
mov
jl
cmp
add
cmp
xor
sub
jo
insb
and
hlt
inc
mov
pop
faddl
dec
jno
cmp
fwait
and
hlt
sub
clc
test
or
add
and
sbb
adc
sbb
add
cmp
cmp
in
das
je
inc
push
add
fcompl
fldenv
les
fs
paddusw
int3
inc
cmp
sub
push
scas
cmp
movsb
and
fmull
push
sbb
pushf
sub
hlt
mov
sbb
adc
jns
fistpll
jl
fmuls
and
pop
pop
pop
push
xchg
or
cmp
imul
sub
xchg
adc
adc
adc
adc
push
stos
mov
sbb
sarb
push
sub
mov
and
in
pop
fdivl
xchg
add
xor
xchg
and
movsb
insb
mov
adc
lods
sbb
movsb
push
and
push
and
mov
hlt
xchg
pop
in
cmp
insb
or
ficoml
jecxz
fdivrl
pop
xor
sbb
ljmp
insb
inc
mov
mov
xchg
dec
pushf
xor
aam
pop
test
sbb
xchg
push
movsb
dec
cmp
stos
les
dec
out
sub
cmp
cmp
push
or
push
cmp
pop
mov
sbb
push
pop
pop
inc
xchg
push
or
sbb
cmp
or
mov
cmp
or
cmp
cmp
pop
or
and
or
cmp
pop
xor
xchg
or
cmp
or
pop
jl
xchg
outsb
or
cmp
cmp
pop
test
xchg
mov
push
cmp
inc
in
sbb
lods
in
fsubrs
mov
jp
dec
mov
or
sub
cmp
pushf
fisttpll
fnstsw
fnsave
pushfw
fstl
fnstsw
fcomps
pushf
pushf
fucom
pushf
ficoml
dec
sub
sub
cli
sub
cli
sub
sub
inc
cli
sub
sub
sub
mov
sub
sar
repnz
xor
in
xchg
pop
or
dec
or
xchg
mov
dec
sub
cli
ret
je
push
jnp
sbb
jnp
dec
xor
mov
mov
inc
mov
test
rcrb
int3
pop
mov
fadd
aaa
je
push
add
adc
imul
test
mov
scas
and
movsb
jl
insb
sub
test
hlt
sbb
in
jl
lods
jne
adc
cmp
les
adc
pushf
push
arpl
fdivl
pop
dec
test
dec
pop
xchg
dec
pushf
adc
pop
inc
lods
inc
pushf
fdivl
mov
or
or
fmuls
jno
in
outsb
pushf
fstpl
fisttpll
mov
dec
into
cmp
sbb
and
xchg
adc
add
pop
pop
aas
mov
cmp
pop
adc
xchg
or
pop
fdivrs
fdivrs
fdivrs
ffreep
inc
jp
cmp
cmp
mov
and
mov
les
sti
mov
or
jmp
in
ficoms
in
mov
cmp
cmp
cmpsb
cld
rorb
and
pop
and
push
in
push
sbb
xor
xchg
sub
xchg
and
and
xchg
in
jl
je
imul
xchg
cmp
mov
mov
js
pop
sbb
jbe
les
xchg
inc
sub
sbb
fnsave
frstor
xchg
jle
insb
pop
nop
insb
dec
scas
fs
fs
insb
shlb
sub
and
cld
sub
fcompl
mov
lods
pop
sbb
mov
ret
mov
shl
xor
loop
pop
in
adc
and
and
cld
cli
inc
scas
sub
dec
inc
cmp
pop
xor
adc
inc
and
add
je
jge
xchg
andb
xor
xchg
mov
in
ljmp
aam
pop
xchg
push
and
je
cmp
or
stos
aam
cli
add
xor
and
sub
lret
cmp
inc
mov
dec
imul
mov
test
mov
pushf
pushf
cmp
rorb
fcoml
fsubrl
inc
and
cmp
pop
xor
movsb
xchg
mov
hlt
jp
or
dec
test
js
or
jmp
mov
popa
nop
dec
cltd
cmp
cmp
sbb
mov
xor
stos
push
push
fs
lret
mov
pop
cmp
mov
scas
or
jecxz
test
cmp
cmp
xchg
ss
movsb
inc
push
shl
hlt
clc
in
imul
or
jmp
push
add
and
cli
or
das
cmp
inc
sar
dec
ljmp
mov
xchg
fwait
adc
sbb
rcrl
clc
int3
jne
inc
inc
test
sbb
jbe
add
mov
cs
pop
xchg
imul
and
dec
inc
cmp
jl
pop
fcoml
pop
movsb
cmp
pop
les
xchg
in
stc
fdivs
push
les
in
jbe
xor
xor
paddw
inc
jns
fdivrs
fmuls
mov
xor
mov
in
jno
or
mov
jg
sub
je
sbb
pushf
xchg
cmpb
imul
sub
mov
mov
les
scas
xchg
push
and
add
xchg
mov
cmp
push
push
cld
cmp
lahf
imul
inc
fdivs
cmp
inc
jmp
inc
push
cmp
arpl
nop
pop
sbb
xchg
cmp
imul
and
cmp
cmpsb
test
sbb
stos
dec
or
cwtl
movsb
inc
add
fs
push
int3
or
les
or
cmp
or
inc
cmp
jl
sbb
push
sbb
jnp
pushf
cmc
or
push
faddl
jle
fmull
jnp
in
cmp
test
and
sbb
fcoml
add
pushf
hlt
jmp
and
jp
in
cmp
xor
cmp
arpl
int3
arpl
jo
insb
add
fidivl
jp
adc
sub
inc
xor
test
push
jl
lahf
clc
aam
int3
xchg
clc
test
pop
adc
mov
aam
push
fdivr
jp
in
jmp
push
push
jns
xchg
or
jns
fistpll
sub
sub
jns
fdivrs
dec
or
and
nop
hlt
push
or
jmp
jmp
test
or
jmp
scas
jmp
fucomi
or
jmp
int
or
jmp
imul
or
jmp
sbb
fsubl
adc
hlt
push
jmp
cmp
or
jmp
sub
or
jmp
dec
fmull
cmp
jbe
xchg
arpl
cmp
cwtl
pop
aas
mov
cmp
cmp
xor
xor
rcrb
cmp
pop
ljmp
sbb
sbb
pop
or
pop
pop
sti
xor
daa
or
aas
inc
mov
push
lods
xchg
inc
or
or
or
or
or
or
jle
psubusb
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fsubs
mov
dec
cld
sub
stos
jmp
mov
jns
xchg
movsb
push
into
dec
les
cld
mov
mov
adc
xchg
fiaddl
insb
movsl
add
xchg
sub
push
imul
mov
mov
xchg
popf
mov
mov
mov
jns
hlt
adc
jl
daa
fsubrp
xor
pop
xchg
ljmp
and
or
sub
fcoms
insb
sarl
mov
sub
fstl
nop
insb
cld
nop
insb
jmp
cmp
jae
or
push
add
push
das
cmp
and
fcoml
sub
dec
sbb
cmp
cmp
cmp
jns
xchg
fistpll
mov
jns
mov
fistpll
mov
cld
cmp
les
cld
push
je
xchg
sahf
or
jb
add
pop
cmp
add
jns
xchg
dec
cmp
pop
and
sbb
pushf
rcrb
jl
jmp
les
mov
mov
cmp
pop
in
ljmp
adc
xchg
pop
into
sbb
or
in
sbb
sbb
xchg
pop
or
sti
jl
add
sub
cmp
push
sub
insb
imul
and
add
je
jg
aaa
xor
cmp
pushf
xchg
clc
mov
xor
clc
mov
lods
push
pop
inc
ljmp
xchg
jne
hlt
mov
push
fsubrl
add
dec
insb
pushf
int3
dec
xor
cmp
push
push
aas
inc
cmpsl
adc
xor
je
cmp
xchg
mov
les
adc
stos
fsubr
test
sbb
mov
hlt
xchg
pop
sbb
xchg
cli
adc
mov
stos
xchg
ds
stos
test
cli
imul
ds
dec
sub
fildll
je
sub
xor
xchg
clc
test
movsb
xchg
jmp
sbb
jmp
fadd
repz
and
sbb
cmp
adc
ss
test
jno
add
mov
les
mov
cmp
lods
cmp
sbb
sbb
je
lahf
cwtl
cmp
pushf
jecxz
or
nop
cmp
les
add
sbb
or
jmp
cwtl
and
data16
sub
cmp
pushf
clc
xchg
cli
and
adc
loop
add
pop
insb
cmp
cmpsl
adc
and
sub
cmp
fs
je
pop
xor
and
xor
and
add
pop
xor
insb
insb
inc
test
ljmp
cld
hlt
stos
and
pop
push
aam
inc
sub
dec
xor
or
xor
cmp
cmpsl
fs
mov
adc
dec
pop
mov
fidivs
add
adc
pop
mov
pop
pop
sub
pushf
pop
xor
les
sbb
jne
pop
jne
int3
pop
add
or
lods
and
mov
inc
xchg
pop
sbb
fs
sbb
xchg
dec
js
jne
test
mov
fsubr
int3
sub
xor
pop
je
sbb
and
add
add
cmp
sbb
inc
jne
and
pop
pop
test
dec
adc
inc
xor
inc
add
int3
pop
mov
lods
mov
or
lods
aam
cmp
xor
hlt
mov
mov
dec
imul
mov
cmp
mov
xchg
and
and
cmp
xchg
clc
inc
and
xchg
clc
fs
cmp
sub
mov
rcrb
dec
aam
fdivl
hlt
cmp
pop
mov
lods
cli
adc
sub
adc
aam
push
pop
xor
jl
or
sbb
xchg
pop
sub
and
enter
call
fbstp
mov
xor
jmp
adc
fs
push
xor
iret
lods
pop
cld
cmpsl
mov
mov
lahf
repnz
js
icebp
xor
xor
adc
xor
fdivrs
loope
dec
fdivrl
pop
lea
xor
dec
movsb
mov
faddl
mov
jl
adc
and
cmp
imul
in
xchg
das
lea
or
cli
inc
cmp
dec
xchg
imul
aas
fidivs
nop
insb
popa
nop
insb
xchg
nop
insb
lea
fsubrl
sub
cli
sub
cli
sub
cli
sub
cli
xor
push
sub
cmp
out
push
xor
and
push
test
dec
xchg
je
cmp
xchg
call
mov
lods
sbbl
sub
cmp
lods
les
nop
out
mov
inc
jno
push
adc
insl
fcoml
into
dec
xor
fsubrl
les
shlb
insb
push
dec
xor
aad
or
sti
cmp
add
dec
xchg
clc
aam
int3
push
pop
pushf
ljmp
xor
adc
outsb
dec
pushf
cmp
push
sub
pop
test
xor
inc
cmpsl
or
add
or
cmp
sbb
sub
clc
test
clc
ret
cmp
sbb
and
pop
and
pop
and
pop
xor
adc
pop
add
push
mov
in
das
jne
insl
clc
das
jne
insl
clc
das
jne
insl
clc
das
jne
insl
clc
das
jne
insl
insb
imul
cmp
adc
loop
movsb
sub
xor
clc
add
push
or
xchg
jg
mov
lods
push
pop
insb
and
test
xor
je
dec
cmp
add
mov
imul
xchg
stc
and
testb
and
jecxz
push
sti
cmp
add
arpl
cmp
jns
fdivrs
fmul
insb
pop
jmp
fdivl
insb
push
inc
jl
inc
mov
mov
int3
add
movsb
fsubrl
aam
int3
add
jmp
in
sub
lcall
stos
add
js
sahf
sbb
xor
xchg
sub
adc
xchg
sub
sub
inc
fsubs
xchg
cld
sub
cmp
push
push
add
pop
ret
pop
mov
and
add
push
lods
xor
movsb
bound
inc
les
in
popf
mov
movsb
rcr
cmp
pop
xor
cld
insb
movsl
test
fdivrs
fdivrs
fdivrs
adcl
add
mov
and
and
popf
mov
cmp
lods
add
adc
hlt
sbb
cmp
cld
xchg
clc
sub
xor
cmp
imul
popf
mov
xchg
pop
test
insb
pop
test
roll
cmpsl
test
hlt
add
jo
pop
add
pop
push
push
fdivrl
pop
pop
sbb
and
mov
push
inc
push
mov
jmp
add
out
je
in
fadd
cmp
pusha
cld
cmp
push
call
in
daa
je
addr16
mov
cmp
adc
adc
adc
adc
nop
push
pop
cmp
test
pop
push
ljmp
push
pop
test
rolb
fsubr
hlt
push
jecxz
fcomps
data16
pop
and
add
or
add
and
aam
pushf
je
aas
xor
in
and
push
dec
and
insl
sub
push
and
or
xchg
pop
xchg
in
and
cmc
or
repz
clc
lods
inc
sub
into
dec
pushf
rcrb
popf
jecxz
add
xchg
pop
jge
or
push
hlt
mov
fimull
and
andb
imul
fs
add
ljmp
cmp
fsubl
aam
sub
int3
and
pop
pop
cli
lock
cmp
inc
cmp
pop
sbb
mov
aam
inc
xor
pop
js
sub
mov
cli
adc
lods
pop
ljmp
imul
cmp
pop
adc
adc
adc
adc
add
xchg
in
add
mov
sbb
sbb
mov
pushf
aam
das
cmp
clc
fcompl
mov
mov
lret
in
xor
or
cmp
int3
ljmp
jbe
and
xchg
mov
xor
inc
cmp
dec
jne
push
sbb
adc
aaa
mov
in
sub
rorb
mov
movsb
push
les
sub
inc
lock
cmp
inc
popa
lcall
and
or
je
dec
les
sbb
add
pusha
arpl
xchg
arpl
mov
cmp
movsb
in
mov
push
cmp
jl
adc
add
and
cmp
cmp
push
insb
call
jno
or
lcall
arpl
add
and
in
add
dec
popa
ficoml
adc
ljmp
sub
sub
sub
sub
jl
pop
sub
hlt
pop
push
sti
adc
jo
test
les
stos
call
test
push
mov
pushf
xchg
push
loopne
mov
sbb
jmp
cltd
pop
insb
add
or
jmp
in
push
sarb
cltd
cld
cmp
pop
push
cmp
pop
fs
cmp
pop
sbb
jmp
dec
loope
push
push
mov
pop
popf
or
test
mov
mov
dec
mov
sbb
mov
in
mov
mov
sub
xor
pop
pushf
mov
cld
xchg
inc
add
pop
push
cli
loopne
xor
cwtl
mov
insb
adc
in
push
and
and
cli
aam
test
inc
sub
data16
and
leave
pushf
aam
scas
or
ja
or
or
icebp
adc
or
lods
inc
xchg
pop
sbb
jg
and
cmpb
pop
mov
push
or
jmp
cli
les
dec
es
cwtl
adc
jbe
lods
mov
sub
pop
sub
pop
les
cld
mov
pop
fdivrs
out
arpl
mov
frstor
or
imul
add
dec
pop
pop
or
mov
and
xchg
fiaddl
pusha
mov
add
fdivrl
out
in
fdiv
xchg
pop
jge
add
cmp
push
sub
loopne
push
dec
dec
dec
jle
cmp
in
mov
push
dec
or
dec
out
in
lahf
jo
pop
cltd
sub
sbb
or
jmp
sti
xor
adc
push
dec
jbe
pop
pushf
cmp
xor
fcoms
cmp
arpl
adc
fistpl
or
sbb
test
insb
xor
adc
and
sub
lods
sub
sub
dec
add
mov
and
cmp
adc
dec
lods
imul
pop
ret
in
dec
movsl
sub
mov
jmp
mov
sbb
pop
insb
ljmp
cmp
dec
dec
les
adc
pushf
mov
dec
cmp
jp
cmpsl
dec
mov
hlt
cmp
or
movsb
outsl
shlb
pop
adc
idivb
movsb
jp
dec
sub
or
xchg
fdivr
aad
or
xchg
push
adc
or
sub
lcall
xchg
mov
clc
add
xchg
hlt
inc
int3
fmuls
popf
xchg
in
dec
imul
cmp
and
add
xchg
xchg
add
jl
sbb
xor
movsb
pop
pushf
sbb
mov
hlt
ljmp
xchg
fimull
push
inc
push
cmp
push
xor
aam
sbb
pop
int3
mov
insb
stos
mov
sbb
dec
push
les
fisttpl
push
adc
cmpsl
cli
stos
and
dec
sbb
dec
sbb
adc
insb
dec
xor
dec
or
or
ljmp
and
xchg
sbb
inc
adcl
sbb
subl
sbb
add
xchg
pop
push
cmp
mov
in
inc
js
push
sbbl
imul
mov
xor
xchg
pop
sbb
inc
cli
shlb
enter
lds
inc
test
sbb
cmp
mov
fstp
shrd
jno
cmp
cli
sbb
sub
mov
sbb
in
or
xor
xor
cmc
adc
pop
dec
lods
sbb
les
pop
inc
cli
mov
push
pop
cmp
pop
inc
rol
dec
loop
jns
cli
xchg
orl
lods
lea
cmp
inc
imul
inc
lods
nop
xchg
pop
sbb
inc
jge
pushf
inc
aas
test
jl
unpcklps
mov
mov
clc
lods
xor
faddl
fdivrs
sbb
cld
ljmp
movsb
ret
adc
jb
pop
xchg
mov
ret
sti
and
sbb
xchg
xor
insb
adc
cmp
daa
adc
in
jg
lods
out
cmc
sbb
aaa
or
xchg
adc
cmp
cld
cld
sbb
mov
cmp
jnp
fsubp
nop
clc
sbbl
mov
sbb
push
in
les
jge
mov
lahf
mov
push
in
roll
outsl
inc
push
pop
push
sbb
mov
mov
int
repz
cmpsl
mov
mov
sbb
les
insb
or
in
xchg
sub
pop
mov
aad
mov
addr16
inc
lahf
les
mov
andb
inc
pop
fwait
sbb
in
test
nop
jno
clc
fs
cs
pop
shll
adc
call
xchg
jo
jbe
int
and
addb
jmp
add
roll
or
imul
popf
pop
mov
mov
roll
in
es
mov
insl
in
cmp
push
fs
imul
js
adc
pop
es
loopne
sbb
rcr
outsl
or
std
les
sbb
lcall
xchg
sbb
hlt
fwait
sbb
cmp
outsl
push
or
push
lret
or
mov
jl
pop
xchg
jle
or
jne
repz
pushf
or
adc
cmp
jae
ret
js
adc
dec
mov
jbe
insb
cwtl
xchg
mov
mov
mov
cmp
pop
out
and
push
xchg
cmp
sub
pop
pop
inc
mov
xchg
lcall
dec
adc
mov
cmp
add
fs
pop
mov
xchg
cld
or
aas
push
push
lods
add
sub
inc
les
enter
cmpsb
mov
fs
fwait
je
adc
ficomps
pop
ds
cmp
push
xchg
sbb
in
bound
lock
int3
pop
fsubl
cmp
jp
dec
or
sub
xor
ljmp
or
lcall
sub
add
or
nop
push
adc
cmp
pop
divb
fcoml
rorb
sahf
bound
pop
pop
mov
cmp
pop
adc
and
clc
xchg
or
nop
cmp
inc
xchg
push
or
cmp
pop
cmp
push
addr16
jae
cli
enter
lods
cmp
inc
pop
push
pop
xchg
sub
xor
add
loopne
or
cmp
pop
scas
mov
cmp
js
dec
cmp
pop
ss
popa
and
test
lock
out
push
pusha
or
cmp
pop
pop
dec
xchg
inc
or
xchg
pop
orb
repnz
loopne
push
mov
xor
xchg
sub
cmp
js
adc
adc
mov
cmp
or
or
or
cmp
add
sbb
or
xchg
sbb
adc
es
in
inc
inc
movsb
sub
fistpl
adc
adc
mov
xchg
out
cmp
sbb
pop
add
xor
and
dec
xchg
jle
push
mov
les
sbb
mov
cmp
push
dec
xchg
jl
lcall
sub
jb
inc
dec
xchg
pop
or
cmp
pop
or
push
adc
jne
clc
pop
into
rclb
mov
mov
lcall
xchg
or
push
pop
push
lods
pop
call
les
lret
pop
mov
pop
sahf
outsb
xchg
jb
inc
cmp
sub
cmp
add
fidivrl
hlt
ja
clc
pop
int3
mov
cmp
or
jl
dec
mov
sub
adc
sbb
incb
sbb
cmp
ss
pop
push
xchg
jp
data16
cmp
pop
and
not
or
adc
jo
arpl
push
add
jae
adc
pop
test
xchg
lret
cmp
pop
push
data16
mov
cmp
inc
push
cmp
cmp
pop
clc
out
pushf
adc
add
xor
and
dec
mov
insb
pop
xchg
test
int3
pop
decb
imul
and
inc
xchg
je
data16
setl
jge
js
cs
insb
mov
sbbb
xchg
rorb
ret
pop
sahf
pushf
loopne
or
cmp
pop
ficoms
xor
and
fcoml
fcompl
jg
loopne
rcll
push
adc
pop
addb
add
out
lcall
push
or
orl
es
inc
or
nop
pop
mov
dec
sarb
rcrb
xchg
and
test
xchg
xor
sbb
inc
sbb
mov
sub
fsub
dec
sbb
pop
push
push
mov
and
cli
sbb
in
outsb
add
push
mov
in
pushf
enter
mov
in
aad
and
sub
insl
sbb
in
pop
sub
movsb
fsubrs
jnp
sbb
dec
imul
adcb
into
cmp
testl
dec
in
or
inc
xchg
xchg
shll
mov
push
sub
ds
cmp
inc
das
std
iret
xor
int3
les
ss
in
push
popa
pop
sbb
inc
push
pushf
sub
jl
sub
test
sbb
jmp
xor
popa
or
sub
jl
jg
pop
mov
mov
mov
inc
inc
movsl
sbb
jge
pop
out
stos
sbb
fisttps
cmp
inc
mov
xchg
cmp
lret
and
std
repnz
pop
and
inc
cmc
loop
inc
sub
add
inc
or
fwait
mov
rcrb
pop
inc
sbb
scas
xchg
jno
in
dec
or
jp
in
sbb
daa
int3
daa
fs
adc
cmpsl
sub
ret
mov
fcoml
cld
xchg
xor
int
cld
add
sbb
in
inc
repz
sub
loop
or
push
mov
mov
jge
mov
jno
add
test
or
in
pop
dec
dec
push
push
pop
push
jl
inc
cs
jae
sbb
dec
xchg
aad
stc
aas
or
jle
cmpsb
add
cmp
xlat
insb
push
jns
fwait
inc
add
ds
add
pop
jnp
and
jge
movsl
in
push
mov
test
mov
push
sahf
adc
adc
cwtl
push
imul
sub
icebp
sub
mov
add
push
add
int3
add
jmp
xor
mov
mov
fidivs
xchg
cmp
sbb
sub
hlt
test
cmpsl
sbb
dec
cmpb
add
nop
insb
jne
sbb
pusha
pop
mov
std
lods
fisubs
lret
inc
inc
and
insl
fmull
sbb
xor
sarl
add
in
arpl
xor
ficompl
les
sti
sbb
xor
jl
adc
xchg
addr16
jae
pop
sbb
filds
xchg
fs
ficomps
mov
inc
cmp
fistps
int
ficoml
lock
or
push
adc
xor
mov
lds
cmp
pop
xor
daa
imul
pop
inc
in
jmp
sbb
sub
lcall
inc
out
in
je
push
xchg
sbb
testb
in
dec
push
xchg
push
or
and
sub
adc
lods
sbb
pop
ret
je
pop
cmpb
aas
fs
stos
jno
in
and
add
sub
daa
add
fldenv
cltd
mov
mov
sbb
loope
jmp
add
test
pop
jg
jnp
mov
add
into
addb
les
or
add
loop
jmp
cs
adc
lock
loopne
sbb
mov
stc
sbb
in
and
sbb
in
push
icebp
movsl
in
rcr
add
adc
lcall
lea
jbe
sub
adc
dec
fs
out
dec
lret
push
idivb
dec
sub
dec
in
aaa
sbb
jb
mov
popf
sbb
lds
push
xchg
inc
fistpl
inc
add
lea
inc
movsb
jge
int3
ds
add
das
adc
add
out
mov
mov
fs
imul
cmp
lods
adc
stc
xchg
mov
push
ret
or
adc
outsb
cli
and
adc
imul
movsl
fildl
aaa
push
in
xchg
sub
ds
in
inc
in
sbb
xchg
stos
filds
mov
or
les
pop
dec
mov
ror
xor
or
iret
push
jle
xchg
imul
in
adc
cmp
pop
inc
andb
negb
movsl
pop
jge
xchg
add
stc
out
pop
jp
mov
repz
divl
fbstp
in
fsubp
cmp
outsb
add
ljmp
mov
dec
sbb
sarb
imul
jb
in
lcall
push
xor
push
in
pop
inc
daa
sarl
in
xchg
mov
loop
sub
sahf
push
jecxz
mov
out
adc
sti
dec
sub
imul
stos
mov
in
dec
adc
enter
in
iret
ljmp
mov
xlat
jg
je
ret
xchg
adc
int3
push
rol
dec
mov
sbbl
mov
in
pushf
jecxz
aam
xor
dec
in
aaa
cltd
dec
xlat
ror
addb
sbb
pop
rcl
xor
cmc
adc
xor
xchg
cmp
mov
insl
push
fs
stos
mov
fildl
mov
lock
stos
in
fists
adc
mov
call
mov
and
adc
movsl
hlt
sti
add
mov
and
dec
sub
pop
jg
aad
mov
mov
mov
jno
sbb
xchg
xchg
das
in
pop
repnz
adc
jns
les
cld
int3
xlat
dec
pop
mov
lcall
neg
xor
mov
jno
push
xchg
push
push
jb
ret
aad
test
mov
mov
jp
sbb
out
lret
push
movsb
add
sub
add
and
popa
mov
rcr
and
jl
fnstenv
push
test
aas
inc
or
mov
pop
in
xchg
and
aas
test
pusha
inc
cmc
mov
js
push
jle
adc
push
out
mov
loopne
in
push
mov
sub
arpl
or
dec
pusha
mov
or
or
dec
cmp
fistpl
push
sub
adc
jne
cli
in
outsb
outsl
out
das
in
add
popa
mov
xor
clc
push
je
pop
in
add
mov
fldenv
in
mov
adc
pop
sub
fs
xorb
cs
dec
and
or
cmp
in
add
ret
cmc
push
daa
cmpsb
ss
mov
test
fs
mov
adc
lcall
loop
enter
add
cli
scas
xor
inc
xchg
add
cmp
in
sti
lret
test
je
in
push
iret
xor
mov
sbb
and
test
loopne
in
mov
repnz
dec
or
xor
decl
sahf
jmp
js
mov
fmul
mov
movsb
jo,pt
fstpl
jmp
dec
cmp
call
outsb
je
in
xor
add
adc
mov
inc
lret
adc
imul
sbb
jl
xlat
add
dec
push
or
and
add
jmp
mov
or
je
in
add
les
jge
mov
cmpsb
push
fs
test
mov
sbb
mov
sbb
push
ljmp
daa
dec
dec
adc
pop
in
scas
outsl
sti
arpl
and
addr16
or
cmpsb
dec
add
movsb
push
pop
fcoms
cld
rcll
mov
loope
or
cmp
sub
out
daa
xchg
aaa
dec
shrb
dec
sbb
jecxz
js
out
cmp
loopne
in
lock
jecxz
sbb
pop
in
repz
inc
sbb
push
mov
and
nop
sbb
inc
ja,pn
jecxz
lods
sub
jne
insb
push
sbb
sub
out
fs
outsb
fsubrs
and
in
dec
mov
push
adc
mov
add
jnp
aad
jp
scas
add
dec
icebp
jle
xchg
stos
and
add
or
add
sbb
adc
movsb
fwait
mov
mov
out
int
dec
sbb
in
in
incb
pop
bound
les
stc
ret
mov
out
and
mov
push
sbb
pop
xchg
inc
cmpsl
sbb
and
mov
push
int3
fs
dec
mov
mov
inc
pop
aam
inc
xchg
sbb
xchg
xor
adc
jge
inc
and
mov
cmp
pop
sbb
iret
xlat
sbb
fdivrl
in
pop
sarl
fsubp
andb
push
fwait
in
adc
outsb
rorb
fnstenv
xor
cmp
mov
sbbl
push
or
sbb
aas
pop
aam
add
adc
push
repnz
movsb
fstpt
adc
or
ss
fistps
in
xchg
scas
fidivs
xchg
push
in
xor
jae
in
aas
xchg
lea
fistl
add
scas
mov
jle
jge
fisubl
pop
loopne
mov
dec
inc
add
adcb
or
in
sbb
jecxz
stos
xlat
pop
xchg
cmp
insl
in
data16
add
mov
jae
mov
ljmp
lock
in
sub
popa
sbb
lret
test
cs
in
rorl
sub
mov
cltd
add
lret
decl
adc
lea
push
into
lahf
mov
aad
popf
in
inc
int
push
loope
pushf
sbb
inc
ss
stos
jno
push
popf
sbb
loop
dec
jo
mov
xor
xchg
in
xchg
sub
test
cmp
push
es
fwait
jecxz
dec
in
in
movsb
mov
push
rolb
in
sub
in
pop
inc
or
jle
popf
insb
dec
in
or
movsb
movsb
clc
pop
ficoms
sbb
sahf
sbb
in
ja
mov
test
mov
nopl
in
mov
fidivl
push
push
loopne
loope
mov
popf
or
jo
rcrb
or
pop
fs
xor
sub
fcoml
mov
push
mov
mov
ret
and
dec
cmp
lods
lock
les
int3
xor
mov
push
in
ja
aas
mov
jmp
push
pop
and
out
and
xor
stc
and
in
jb
cmp
bndstx
push
xchg
cltd
je
mov
jne
in
aaa
std
push
sbb
adc
rorl
sub
xor
ljmp
addr16
and
inc
jle
adc
mov
pop
push
insb
cmp
aad
movsb
aaa
xor
les
and
push
dec
notl
jno
fldt
in
xlat
mov
or
or
xor
adc
cmc
push
fadd
mov
data16
sti
sbb
movsb
shll
dec
fsub
mov
fidivrl
pop
sti
add
in
lock
dec
xor
cs
bound
adc
pop
in
inc
ret
in
ljmp
sbb
gs
movsb
rcrb
pop
popf
fmull
bound
hlt
inc
adc
adc
or
out
ret
dec
insb
test
in
pop
push
sub
inc
add
xlat
cmp
arpl
mov
sbb
ret
jge
repz
in
mov
shrl
and
in
push
adc
jmp
sbb
push
push
test
adc
add
outsb
lea
sbb
dec
add
rclb
pop
divl
mov
push
je
out
flds
sub
add
sahf
mov
mov
loop
xchg
das
insb
adc
inc
lods
rcrb
in
in
mov
scas
cli
sbb
pop
mov
nop
in
fnstenv
jl
arpl
sbb
shll
and
fcmovne
add
push
mov
subb
inc
in
jo
ljmp
and
push
sbb
mov
iret
testl
je
mov
fsubp
leave
insl
cmp
xchg
int3
fisubl
pusha
adc
add
push
sbb
adc
mov
frstor
sub
ret
cmpsl
lock
dec
out
mov
xor
sbb
mov
lcall
add
in
push
fs
push
push
push
xlat
or
xchg
and
fs
movsb
aaa
outsb
bound
xorl
mulb
stc
arpl
in
out
cmp
std
adc
cmp
xlat
inc
mov
mov
push
push
or
subl
out
in
fs
out
jo
stc
jl
cmp
cmp
fwait
xchg
fmull
pop
sarl
movsl
jge
stc
sub
movsb
fs
add
adc
movsb
and
lcall
dec
adcb
test
sbb
jecxz
add
cmp
ficoms
mov
jo
in
stos
add
rcl
jno
cmp
out
sbb
negb
pop
xchg
in
sbb
leave
inc
sub
outsb
push
jg
and
popf
test
push
xor
sbb
mov
xchg
fucom
sbb
sub
push
xchg
sbb
lcall
pop
mov
test
in
lds
ja
mov
arpl
push
aam
jae
lahf
fdivrl
in
pop
cmpsl
xlat
xor
and
arpl
sbb
and
int3
sbb
icebp
sahf
sbb
repz
cwtl
xor
push
jl
xor
in
mov
fstl
test
addl
hlt
mov
dec
fs
jmp
mov
es
sahf
dec
pop
inc
mov
adc
bound
push
sub
test
adc
push
xor
sbb
mov
das
sbb
aas
rcll
sbb
add
xor
sbb
icebp
in
mov
jge
adc
sbb
lds
pop
insb
rcrl
hlt
roll
adc
push
cli
and
pop
adcb
in
test
jns
shl
in
cmc
loop
jl
or
mov
add
adc
in
sbb
jl
mov
mov
mov
push
sahf
imul
xchg
inc
xor
in
mov
in
movsl
jns
repz
inc
je
sbb
xchg
sbb
jg
ret
in
mov
out
lods
hlt
in
cmc
fists
mov
mov
das
mov
or
int3
in
movsb
jnp
shlb
push
mov
sub
sbb
or
cmp
ficoms
mov
jns
or
mov
and
mov
jl
cwtl
sbb
xor
xchg
movsb
jecxz
xor
fs
scas
aaa
insb
or
mov
dec
cwtl
sbb
jge
pop
xchg
sahf
je
xchg
cmp
push
ret
gs
in
xchg
mov
sub
movsb
add
lcall
adc
leave
xlat
jmp
add
int3
das
xor
adc
push
scas
loopne
and
rcrb
call
in
in
inc
fisttps
je
sub
pusha
mov
sub
sbbl
in
sub
dec
xchg
fwait
in
jg
movsl
xchg
mov
adc
dec
lock
mov
in
xchg
pop
hlt
cwtl
sahf
stc
lock
in
adc
push
push
sbb
into
aaa
test
sbb
sub
sbb
push
fdivr
dec
shll
inc
in
call
mov
inc
lock
hlt
mov
xor
adc
iret
mov
mov
xchg
in
fwait
clc
mov
cmp
push
ja
and
in
sub
sub
movsb
enter
in
mov
outsl
and
jb
pop
imulb
dec
in
sbb
mov
sbb
jle
mov
push
ret
mov
push
inc
xor
xor
xchg
insb
sarb
mov
sbb
dec
pushf
into
push
fimull
testl
mov
stos
xor
test
or
push
ror
push
add
in
xor
sbb
lods
xorb
mov
mov
add
shll
xor
cmp
and
and
add
stos
fs
outsb
fsubrp
jl
xchg
lods
fs
sbb
aam
mov
in
push
js
or
aad
clc
jmp
inc
pushf
jl
add
mov
xor
stos
clc
lahf
sbb
and
cmc
gs
pusha
ljmp
push
cmp
sub
scas
in
outsl
in
aad
mov
xlat
xchg
test
in
pop
xor
jnp
mov
cmp
inc
cmpsb
in
leave
sub
push
lea
xor
fmuls
push
inc
loope
mov
push
inc
popf
jg
ret
inc
in
adc
xor
push
sbb
jns
mov
cmp
dec
xorb
add
repnz
movsb
sub
scas
stos
push
inc
call
push
clc
je
std
in
sbb
and
aas
mov
sub
mov
jae
dec
in
pop
notb
sbb
aaa
cmp
mov
lea
add
ficoms
mov
lret
rcrb
movsb
outsb
jo
es
in
adc
call
sbb
fcoms
or
out
push
ljmp
jg
cs
sub
imul
leave
movsb
cltd
push
ljmp
push
push
push
sbb
adc
add
sbb
add
jae
push
ds
xor
in
pushf
movsl
add
cmpsl
sbb
add
out
fs
or
pop
dec
xchg
cmp
cmpsl
push
push
xchg
sbb
arpl
push
adc
js
inc
jae
mov
sbb
jns
pop
xchg
arpl
adc
push
aad
scas
movsb
jb
repz
inc
pop
xchg
daa
call
out
push
je
cli
lret
jbe
jg
adc
ljmp
jnp
data16
sbb
es
repnz
cld
adcl
add
cli
out
mov
loope
xchg
add
jbe
dec
and
push
or
fcom
ds
out
test
or
outsl
test
shll
add
jge
xchg
fistpll
xor
jle
adc
sahf
push
hlt
imul
rcrb
ficoml
pushf
imul
test
adc
jno
out
movsl
xor
in
out
add
cmp
push
inc
pop
jmp
push
sbb
test
dec
jnp
ficompl
in
enter
sahf
ffreep
les
pop
inc
sar
fdivs
testl
push
add
push
in
test
cwtl
jle
mov
sbb
sub
inc
sbb
push
mov
fildl
stc
adc
push
sbb
sbb
loop
in
cmp
push
fdivrl
sbb
aad
and
push
aam
jne
jp
negl
inc
sbb
mov
pop
in
jmp
cmp
cmp
int3
mov
push
in
dec
jne
sbb
lock
in
mov
mov
jno
aam
ret
and
adc
pop
jne
es
and
and
insb
int3
in
add
or
nop
js
pop
sti
and
sbb
jle
in
sub
jno
hlt
cmp
in
test
shll
pop
sbb
xchg
push
movsb
push
rolb
and
pop
leave
es
mov
std
jecxz
and
jo,pt
cmp
lock
sub
cwtl
push
dec
and
into
and
in
add
cmpsl
cmp
in
outsb
mov
mov
cmp
sbb
das
es
into
cmpsl
repz
cli
sbb
xchg
sbb
inc
mov
mov
in
lahf
dec
add
in
jl
test
inc
adc
pop
mov
adc
jmp
call
sbb
out
jnp
mov
popa
xchg
push
jle
jne
cltd
or
lcall
xor
jge
mov
stos
and
add
fildll
insb
fs
ss
sbb
mov
int3
push
add
or
lret
shrb
and
dec
iret
mov
or
and
sbb
ss
out
adc
pusha
jae
pop
in
push
jo
imul
pop
enter
push
cmp
stc
movsb
aam
and
inc
push
push
sub
and
inc
dec
lods
rcrb
filds
mov
or
add
sub
pushf
je
jno
mov
push
xchg
mov
jbe
add
xchg
sti
bound
cltd
inc
inc
test
movsb
js
in
cld
mov
sti
jb,pn
test
jnp
in
push
jbe
cmpsl
mov
xchg
or
cmpsb
add
rorb
push
sbb
push
in
mov
and
push
cmp
out
sbb
push
ror
xchg
adc
xchg
mov
hlt
dec
in
xchg
sbb
jno
jl
inc
addb
mov
xchg
in
push
fld
dec
mov
push
mov
mulps
cmp
cwtl
and
jp
aam
lea
in
xchg
or
aas
xor
mov
movsl
ss
mov
jle
add
jl
adc
mov
sbb
in
in
push
adc
xor
mov
out
jmp
xor
inc
aaa
aad
xchg
cmpsl
je
mov
or
push
xchg
mov
rorl
inc
dec
lock
sar
dec
clc
pop
cmp
mov
cmp
xor
jne
sbb
push
mov
mov
test
mov
and
gs
in
fisubs
add
movsb
add
pop
stos
sub
sbb
das
fistpll
enter
cmpsb
push
and
popf
and
push
sbb
cmc
mov
movsb
fildl
cmp
lcall
in
sbb
pop
mov
test
adc
fs
inc
mov
xor
mov
sbb
mov
je
sahf
jno
ds
insb
in
push
adc
mov
push
mov
out
lret
adc
inc
rorb
sbb
jg
aas
outsb
sahf
stos
mov
push
test
mov
fs
mov
orl
mov
push
in
leave
sahf
stos
movsb
cltd
scas
imul
sbb
fstpl
adc
mov
mov
lcall
in
jecxz
dec
lods
das
mov
in
clc
xor
and
add
cmp
stos
in
int3
pop
mov
sbb
shlb
movsb
xchg
fst
jb
in
mov
orb
not
dec
add
fs
test
jp
imul
or
pop
or
std
cmc
push
movl
adc
les
sub
movsl
pop
mov
xchg
or
insb
in
sub
mov
cmc
pop
and
mov
add
mov
or
inc
dec
in
mov
pop
arpl
sbb
shr
or
cmpsb
stos
je
dec
loop
imul
out
xor
and
fisttpll
sub
jno
push
and
enter
fisubs
cmp
xor
pop
xchg
scas
pop
imul
lods
and
or
fwait
ss
aam
mov
lret
sub
adc
push
cmp
pop
es
xchg
pop
in
popf
aam
aad
jecxz
push
xlat
shl
sub
jp
xchg
inc
in
pop
aaa
dec
idiv
or
and
cmp
push
int3
nop
in
loopne
stos
push
daa
repz
sub
mov
out
jmp
jb
adc
add
inc
jns
fiadds
lods
iret
rcrb
stos
dec
sub
call
sbb
outsb
in
in
int
cmp
sbb
divb
add
pusha
cmpsb
inc
or
sbb
adc
xchg
pop
or
jnp
in
dec
sbb
or
adc
pop
sbb
mov
cmp
rclb
and
dec
shrb
sti
shlb
fistpl
out
test
into
mov
imul
and
sarl
push
imul
jmp
int
jg
sbb
xchg
push
jmp
add
pusha
sbb
lcall
mov
inc
or
pop
sub
ja
cwtl
in
movsb
mov
lahf
data16
cmp
loopne
or
adc
xchg
popf
jns
fs
pop
cmp
cwtl
or
test
xor
in
inc
gs
sbb
in
in
push
xchg
and
les
or
vaddsubps
mov
dec
out
adc
fs
out
cmp
lods
sbb
icebp
imul
pushf
in
jno
outsb
pusha
test
mov
insb
popf
cmp
inc
je
movsb
lock
notb
add
pushf
fs
adc
sbb
insb
inc
in
adc
lret
sub
dec
testb
stos
cltd
pop
lcall
cmc
push
in
cmp
daa
lcall
dec
sub
andl
iret
call
push
pusha
dec
xor
mov
cmp
and
mov
bound
add
out
out
test
or
iret
movsb
test
pusha
or
add
sub
in
inc
and
sti
divl
mov
mov
test
pop
ret
cltd
pop
xchg
mov
int3
insl
fnstsw
pushf
mov
mov
pushf
addr16
xlat
push
shl
nop
fnsave
loopne
mov
in
jp
xchg
dec
jl
int3
and
push
mov
mov
add
clc
pop
icebp
cmpsl
ljmp
sbb
fs
or
inc
sub
push
lods
and
addl
lahf
push
cmp
dec
cmp
adc
clc
mov
mov
inc
jg
sbb
xchg
les
fwait
in
movsl
add
adc
mov
mov
movsl
push
sbb
fdivl
imul
jb
jae
in
aaa
movsl
rcr
add
in
or
push
cmc
adc
jmp
inc
mov
pushf
sbb
mov
pop
out
jl
pmulhuw
and
sti
jl
push
arpl
push
push
in
jg
xchg
push
adc
cmp
xor
inc
mov
sbb
adc
in
lods
push
fnstsw
popa
es
loop
inc
mov
aaa
fstl
je
or
test
dec
sub
shld
sbbb
sub
xlat
in
mov
fbstp
test
xchg
in
jnp
mov
hlt
cmp
push
dec
das
dec
hlt
and
addr16
xor
add
sbb
push
lcall
dec
jo
movsb
xchg
cwtl
adc
jnp
push
nop
lock
imull
sbb
mov
xorb
xchg
test
sbb
test
test
or
and
repnz
out
les
sub
xchg
and
jo
push
push
in
jae
pop
xor
adc
or
cs
popf
pop
mov
mov
pop
sub
xchg
mov
fildl
or
xchg
sbb
and
es
in
aam
push
loopne
shll
in
ret
lcall
notb
das
mov
arpl
movsb
stos
mov
xor
mov
push
fcomip
ljmp
xchg
mov
out
lock
in
xor
incl
lods
adc
mov
push
jno
jge
lock
test
fcoms
out
nop
je
leave
in
or
in
in
call
inc
mov
push
pop
sub
lret
pop
cmp
mov
sub
jmp
jle
sub
fs
insl
mov
cli
mov
mov
mov
icebp
and
lahf
out
xchg
xor
int3
pushf
jg
push
dec
xchg
jb
insl
mov
pop
in
push
push
rcrb
mov
inc
call
and
rcrl
xchg
lret
lods
cli
in
cmpsl
jp
iret
lea
jns
mov
gs
lock
xchg
adc
aad
push
cmpsl
push
sub
loopne
sub
sbb
out
sbb
inc
movsl
fsubl
imul
test
jle
les
pop
fmuls
add
out
pop
out
xchg
sub
imul
xchg
mov
hlt
test
sahf
inc
pop
pop
push
movsl
lahf
movsl
and
insl
inc
jbe
mov
xor
push
jle
das
jmp
iret
repnz
lret
loopne
add
hlt
jmp
mov
pop
jge,pn
sub
sti
add
sub
fdiv
ss
sarl
lods
cmp
sbb
pop
sub
lcall
aaa
loopne
mov
outsb
and
dec
jae
in
sub
aad
mov
xchg
mov
mov
lcall
ljmp
inc
mov
and
gs
and
daa
adc
mov
cmp
pop
and
inc
jp
adc
push
in
jbe
aad
push
call
xchg
fst
inc
cltd
movsb
mov
call
sub
push
enter
in
shll
adcb
leave
push
outsb
inc
xchg
mov
jmp
and
lds
dec
add
addr16
icebp
add
push
imul
aaa
hlt
outsl
jle
hlt
inc
add
out
inc
stc
jl
popa
hlt
push
mov
hlt
rorl
or
sub
pusha
movl
pusha
lea
jmp
and
divb
push
ds
fimuls
sbb
mov
dec
adc
ret
dec
adc
rcrl
repz
inc
ds
inc
sub
shll
xchg
lods
das
mov
mov
dec
or
jl
cli
movl
or
mull
lods
adc
dec
addb
cli
xor
jg
popf
insb
lods
lret
xchg
dec
mov
iret
adc
or
or
dec
push
jmp
sysexit
mov
or
dec
xlat
out
mov
fs
pusha
pushf
push
jmp
jecxz
adc
ss
ret
xchg
ret
jb
push
rclb
icebp
dec
push
shlb
cmpsb
jno
xor
shrb
cmp
scas
inc
cmpb
push
cs
pop
fisttps
pop
pop
out
cmp
inc
pop
mov
push
push
shlb
push
aas
jnp
inc
cmp
pusha
fistps
js
popf
push
xor
insb
push
or
frstor
or
in
lea
ja
push
add
sub
cmc
sub
push
rcl
mov
clc
movl
cmp
call
int
inc
lock
mov
ss
rclb
adc
sti
in
lret
out
lods
or
inc
shlb
xchg
shll
sahf
sbb
cltd
sub
dec
cwtl
mov
adc
push
add
mov
lret
cli
inc
jmp
out
add
addl
jmp
gs
mov
push
test
outsl
lret
out
in
jns
jno
xchg
mov
insb
push
stos
xchg
dec
icebp
out
test
je
adc
cmp
pop
fs
or
insb
push
dec
std
scas
fisubrl
dec
popf
dec
push
in
inc
clc
push
jbe
decl
jno
sbb
or
imul
mov
jno
lcall
push
lahf
scas
fdivl
cmc
out
mov
jmp
mov
pushf
push
mov
xchg
and
cmpl
dec
lea
sbb
pop
cmc
add
mov
push
mov
pusha
lea
jmp
mov
lea
jb
call
aaa
popa
mov
ss
pusha
push
jecxz
xorl
movsb
push
xchg
xchg
lret
or
ljmp
jnp
sbb
lret
xor
push
inc
js
mov
cli
mov
mov
ja
ds
mov
sub
in
pop
or
inc
popa
sub
mov
xor
cmp
insl
push
cld
icebp
mov
sbb
in
loope
andb
outsl
mov
sbb
ret
mov
repz
pop
imul
push
push
scas
movsb
add
fbld
add
inc
insb
outsl
jae
inc
insb
imul
add
inc
and
inc
xchg
dec
pushf
call
add
repnz
and
cmpsb
je
xchg
loope
popa
nop
xchg
aaa
icebp
add
pop
cwtl
test
xchg
cmpsl
out
or
dec
pusha
cmp
pop
in
inc
dec
int
outsl
in
cmc
and
cmp
popa
cmp
pop
or
int
xchg
fs
push
dec
popa
sbbb
pop
es
jbe
adc
xchg
call
mov
je
test
subb
jp
pop
pusha
mov
adc
mov
mov
fbld
pop
adc
fadd
out
jg
cld
repnz
or
cmp
fisubrs
push
pop
add
mov
pushf
rorb
add
push
inc
testb
jae
in
push
pushf
testl
fstl
fs
int
jns
cmp
pop
popa
xor
int
cltd
movsl
cmp
nop
loope
loopne
stos
int
dec
push
xlat
scas
xorb
jl
lock
push
leave
pop
or
and
lods
push
push
aas
out
push
jmp
not
lea
jmp
cmp
pushf
jmp
movsb
popf
push
repz
pop
jb
xchg
in
addr16
push
and
jnp
jns
xlat
or
push
push
cld
mov
pusha
test
int
adc
loope
mov
jo
roll
push
das
jae
int
sbb
loop
ss
arpl
mov
mov
repz
aam
and
test
add
xor
push
ffree
or
xorps
subl
sbb
dec
iret
loope
lret
add
loopne
test
pusha
flds
inc
add
out
dec
adc
ss
dec
lahf
int
or
fldt
lea
test
xchg
iret
fstps
jnp
subb
insl
pop
das
push
insb
inc
inc
cltd
push
cld
lods
mov
insl
enter
jnp
jae
enter
loope
imul
jbe
fsubrs
ret
mov
mov
out
imul
xchg
call
xchg
adc
jle
sahf
sub
popw
pusha
pusha
push
dec
mov
call
jnp
cld
ss
ret
mov
roll
xchg
std
mov
push
dec
pop
inc
jo
mov
jno
add
push
ret
or
sub
jl
arpl
stos
arpl
sbb
xorb
sbb
and
cmp
jno
ret
pop
roll
inc
mulb
pop
mov
mov
imul
ljmp
pop
xchg
popl
sub
inc
mov
pop
test
insb
push
loop
adc
jno
dec
pop
mov
or
pop
out
shll
setae
xor
lahf
sub
add
xor
js,pn
and
je,pn
jl
clc
push
pop
and
aas
insb
pop
cmpsl
stos
fsubr
lock
mov
adc
test
js
jmp
xlat
mov
push
bt
push
test
add
pushl
movzwl
clc
and
clc
mov
stc
stc
add
cmp
mov
pusha
test
call
jmp
divb
mov
mov
sbb
in
shlb
inc
jg
dec
add
imul
sahf
push
fwait
push
xchg
dec
xorl
mov
rcr
pop
add
mov
imulb
stos
lcall
lods
xchg
test
add
xchg
push
fisubrs
cmp
mov
fldt
fwait
outsb
nop
add
cmp
dec
test
sub
pop
jmp
aas
xchg
add
mov
aas
leave
mov
mov
ss
aad
mov
xchg
add
cmp
jmp
pop
xchg
pushl
lock
jnp
pop
inc
hlt
test
adc
xchg
rcll
mov
push
dec
pop
push
movw
mov
lea
jae
stc
test
call
pushl
lea
call
call
pushf
lea
ja
bt
push
imul
jmp
pusha
jmp
inc
add
ss
sbb
dec
call
jp
bnd
pushf
lods
mov
sbb
mov
inc
mov
aas
aad
sbb
cltd
dec
pop
ja
xchg
and
adc
shrb
ss
or
or
stos
mov
jmp
call
sbb
inc
ds
push
pusha
cmp
ret
push
lret
std
mov
mov
push
ret
lock
push
and
push
loop
push
test
nop
pop
add
popa
pop
sub
cwtl
sarb
cwtl
sbb
cmc
jbe
minps
xorb
fistpl
and
xchg
xor
dec
cltd
movsb
pop
add
aas
arpl
cmp
iret
bound
push
dec
lea
mov
cmovge
test
xlat
add
loope
pop
jo
aas
out
xchg
dec
popf
inc
cmp
fs
stc
cmpb
jb
xchg
adc
pusha
call
xor
mov
ss
arpl
inc
xchg
arpl
jbe
push
xchg
mov
jge
xor
jbe
fldcw
insb
loopne
jmp
xchg
mov
mov
pop
jae
mov
push
and
jno
jnp
popf
adc
lods
outsl
jns
mov
mov
xor
loopne
insb
cs
mov
and
outsb
iret
mov
or
les
cmpl
and
dec
mov
push
pusha
push
in
xor
pusha
lea
jne
bsr
rcl
xchg
mov
cmc
movzbl
btr
and
sub
clc
shl
inc
mov
pusha
mov
stc
push
sub
pusha
clc
movw
pushl
popl
test
cmp
cmp
pushf
pushf
jmp
call
mov
push
int
or
fmull
fsubrs
fadds
inc
add
cltd
or
xchg
insb
push
loope
bound
sub
sbb
cmp
cmp
lds
mov
inc
inc
mov
stos
pop
and
std
repz
jne
pop
fs
sar
fldl
xchg
scas
shll
iret
mov
mov
stc
pushf
cmpb
pusha
call
cltd
lret
sbb
ss
push
xchg
rolb
mov
cmc
ret
sbb
test
cmpsb
nop
add
pop
cmp
sbb
enter
aas
fnsave
and
xchg
sub
test
cmp
pushf
lock
mov
flds
jge
shlb
inc
push
add
mov
xchg
pop
dec
stc
iret
std
loopne
cmpsl
cmp
add
ds
xor
inc
js
adc
test
ss
push
jecxz
xorb
icebp
add
mov
push
out
aam
xchg
inc
xchg
shll
jg
and
loopne
loop
push
inc
ret
cmpsb
jge
imul
mov
out
loope
or
rorl
hlt
out
loopne
inc
lods
lcall
pop
loope
shl
inc
sbb
push
lods
sbb
or
mov
and
aaa
mov
repnz
rclb
rcr
aas
dec
mov
addr16
loop
inc
ffreep
cmp
sbb
fsubl
and
hlt
or
jecxz
stos
xchg
fdivr
xor
xor
push
push
pushl
ret
enter
ss
nop
xor
mov
xor
repz
and
xchg
adc
sbb
jmp
lcall
imul
lds
jle
icebp
pop
addr16
jns
fcom
sub
std
dec
cmpsb
mov
imul
mov
addl
jo
pop
add
cmp
inc
pop
es
mov
lock
mov
xor
adc
mov
inc
push
iret
rcrl
sub
fdivr
ss
or
test
enter
enter
or
adc
push
out
push
pop
mov
daa
mov
and
mov
cmp
dec
adc
fcmovnb
cltd
or
pop
push
repz
cwtl
jle
add
inc
rclb
in
jae
stos
push
dec
icebp
fisttpl
loop
mov
imul
dec
sbb
inc
xchg
dec
xchg
pop
dec
xor
inc
push
adc
bound
mov
mov
xchg
insb
mov
mov
fists
pop
adc
push
cwtl
sti
ss
dec
fimuls
das
cmp
mov
mov
clc
rclb
inc
cmp
xchg
mov
int3
cmp
xchg
hlt
mov
cwtl
andl
lret
mov
adc
jns
adc
cwtl
jne
ds
inc
mov
or
xor
lods
adc
or
dec
push
out
es
sti
mov
inc
inc
sarb
inc
inc
cmpsl
test
dec
loope
lret
mov
or
push
sub
cmp
jns
jle
pop
arpl
adc
das
inc
fmuls
pop
xchg
in
push
popw
and
mov
push
push
into
xchg
fnstsw
lahf
dec
mov
lcall
mov
fs
cmp
mov
inc
pop
js
call
pop
mov
jge
ds
jle
enter
fisttpll
das
gs
stos
fimull
mov
imul
mov
dec
dec
movsb
ror
faddp
jne
mov
and
lods
scas
fsts
inc
hlt
scas
hlt
cmp
pop
push
popl
pop
cmpsl
sbb
pushf
xchg
ljmp
mov
xchg
adc
mov
add
rclb
xor
je
mov
roll
jo
or
fsts
gs
popa
pop
ss
ret
xlat
lods
imul
std
pop
mov
mov
jg
sub
inc
mov
out
cmp
das
push
push
mov
add
xchg
lret
les
push
sahf
out
sahf
add
pop
pop
inc
push
sarb
sub
or
fwait
loop
stos
xchg
pop
in
push
scas
js
cwtl
sub
lods
mov
dec
lahf
orl
in
out
repz
stos
and
in
in
sarb
or
sub
test
pop
inc
testl
lahf
lds
jmp
xlat
in
xchg
dec
pop
or
mov
cmp
lcall
pusha
push
pushf
lea
jmp
sub
in
push
test
push
add
inc
xchg
add
mov
mov
sbb
cmp
std
shlb
inc
dec
xor
ss
push
in
push
cmp
add
push
loope
out
jecxz
inc
aad
mov
idiv
popa
stos
mov
in
sbbb
ss
out
lahf
xchg
aaa
stos
fxch
lea
leave
loope
xchg
add
sub
pop
lea
sub
xchg
lds
adc
push
cmpb
js
sub
fisttps
dec
fildll
test
fmuls
pop
outsb
fildl
jmp
pop
andl
inc
pop
cmc
mov
sbb
movsl
cwtl
lock
inc
jecxz
push
rcrl
cmpsl
fdivp
adc
mov
xchg
xchg
in
int
aas
mov
push
adc
ds
cmp
adc
or
mov
es
xchg
jle
mov
adc
mov
cmp
fldenv
push
stos
adc
pop
sub
jnp
sbbl
lahf
aaa
or
out
push
scas
pop
in
sbb
dec
sbb
cld
push
in
cld
add
mov
test
lahf
mulb
push
repz
push
and
xchg
out
data16
push
cmp
loopne
jne
aad
cmpsl
mov
jle
push
clc
adcb
cld
std
dec
je
scas
mov
cmpsb
adc
cmp
add
jl
dec
fs
bound
stos
lods
jo
jno
repnz
xor
rorb
cmpb
inc
cmp
loopne
sbb
ret
xor
pop
lea
cmp
fldt
lods
cmp
add
std
mov
loop
jns
add
cwtl
jmp
push
roll
and
push
push
push
dec
sbb
scas
dec
ja
movsb
or
push
ja
or
jns
and
fldt
xchg
mov
test
outsl
shrb
xor
adc
mov
in
pusha
lea
jb
pusha
pushf
cmp
stc
cmp
jmp
pushf
or
jmp
pushf
rep
bswap
mov
pusha
lea
jmp
push
pushf
mov
jmp
lea
bswap
movsbw
lea
pushf
call
lods
nop
pop
loopne
push
lea
mov
sub
sbb
add
int
pop
ret
arpl
insl
and
sub
push
arpl
cli
push
bnd
add
leave
out
cmpsl
push
cld
jo
and
imul
mov
pop
push
dec
sub
mov
in
loopne
push
push
lret
cmpsl
cmp
ja
xor
popa
cld
add
mov
jae
enter
or
out
call
movb
mov
lea
call
push
lea
jne
lahf
setno
setns
movsbl
mov
push
mov
pusha
push
lea
jmp
adc
movb
call
stc
pushf
sub
cmp
stc
test
stc
cmp
pusha
pusha
lea
jae
pushf
pushl
lea
jmp
in
insb
loope
push
arpl
pop
jmp
cmp
lock
ds
sub
push
xchg
jbe
push
pushf
lods
lcall
stc
push
add
cld
and
push
imul
pusha
lods
dec
mov
mov
les
and
sub
mov
lods
jg
jo
xor
loope
es
lahf
leave
adc
lock
mov
aam
icebp
cmpsl
aad
adc
jb
push
sub
test
dec
push
insb
aas
mov
int
popf
pusha
push
push
push
pushf
lea
jne
setp
push
movb
pusha
pushf
setae
mov
call
mov
mov
push
movsbw
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
lret
loope
push
sbb
sbb
mov
dec
pop
leave
mov
jne
add
push
and
mov
movsl
aam
ljmp
lret
cmpsl
cmp
inc
sbb
sub
scas
sarl
cmpl
cmpb
sub
mov
jno
fisubrs
lods
jne
jbe
sub
push
dec
mov
cmp
fiaddl
rcl
pop
int
fisubs
pusha
sbb
inc
fiadds
lcall
insb
mov
pop
neg
clc
clc
stc
cmc
ror
movl
call
push
outsb
mov
pop
out
mov
imul
inc
pop
inc
and
pop
mov
pushf
or
jmp
inc
cmc
movsl
cwtl
cmc
push
stos
and
in
fcomi
cmp
mov
jns
dec
push
out
dec
hlt
rorb
adc
ds
fcomps
test
adc
jbe
mov
gs
mov
data16
and
inc
or
outsb
mov
and
mov
or
xor
repz
jns
dec
xchg
add
int3
jp
xchg
xor
xchg
cli
adcl
cmp
inc
cmp
cmpsb
fsub
sbb
mov
mov
lea
jne
pusha
mov
stos
pusha
push
lea
jmp
ror
test
mov
cmp
jmp
ret
cli
aaa
jecxz
push
out
test
loopne
test
and
add
and
js
imul
incl
adc
cwtl
aad
xchg
incb
insb
scas
adc
pop
cmp
mov
push
call
inc
test
push
xor
mov
rclb
es
inc
sub
sbbb
inc
cmp
loopne
adc
jo
lcall
sub
or
call
sbb
mov
aaa
sub
ret
repz
mov
pushf
test
popf
ja
jg
inc
jae
loop
push
test
adc
xchg
mov
lret
or
test
rcl
mov
aad
sbb
xchg
cmpsl
icebp
push
add
mov
jae
mov
nop
dec
xchg
outsb
aaa
dec
mov
mov
xchg
mov
in
ss
xor
jnp
aaa
dec
aaa
or
imul
inc
add
shlb
xor
icebp
and
pop
and
aas
clc
out
aas
and
cwtl
insl
jno
inc
fisubrl
insb
dec
cmp
and
test
xchg
push
mov
arpl
mov
int
leave
add
fimull
testb
adc
stos
aam
jbe
jge
fisttpl
mov
and
xchg
push
mov
xor
pop
inc
dec
mov
sti
mov
lock
mov
test
dec
mov
mov
cld
inc
add
rcrl
or
popa
mov
ss
inc
jne
mov
push
loopne
adcl
inc
repnz
mov
stos
jae
xor
stc
dec
cmc
cmpsl
out
add
and
sub
movsl
mov
in
clc
out
das
sahf
negb
sub
bound
jo
int
ret
xchg
push
pop
push
xchg
sub
xlat
imul
clc
cmpl
inc
icebp
test
mov
xchg
test
fnstenv
mov
pop
out
ds
aad
adc
scas
xchg
stos
clc
mov
ret
rcrl
fsubr
ss
sarl
dec
mov
movsl
jnp
in
ljmp
in
ret
icebp
and
inc
push
add
sbb
xor
popa
jno
pop
add
and
ret
lds
push
sbb
jne
cmp
into
and
sbb
insl
repz
xchg
sub
leave
shrl
aam
aam
adc
int
sub
mov
adcl
push
shll
jae
aaa
filds
out
faddp
fmuls
push
xor
mul
cwtl
mov
gs
pop
xchg
sbb
inc
xchg
lds
pop
pop
mov
or
push
adc
pand
mov
xor
push
sub
aas
cs
loope
lahf
add
fmuls
sbb
xlat
lret
in
mov
bt
push
stc
cmp
pushf
pushf
pushf
pushf
lea
jbe
pusha
shl
sub
ror
mov
test
mov
shr
pushf
movzbw
lea
add
xor
inc
shr
stc
sub
mov
movsbw
movzbw
bsf
add
not
lea
movzbw
mov
mov
pusha
pushf
mov
pushl
not
lods
stc
pushf
jmp
call
call
push
adcl
adc
xorl
push
xor
loopne
dec
adc
push
adc
in
cwtl
enter
sbb
pop
pop
sub
dec
je
cli
pop
and
jecxz
mov
push
xlat
mov
out
jle
xor
jl
nop
dec
sbb
inc
jnp
push
rol
ss
das
xchg
sub
call
xchg
xlat
test
adcb
iret
add
scas
xchg
pop
out
ss
push
adcb
xchg
rclb
xchg
mov
cltd
rorb
or
addr16
lock
sbb
push
stos
jle
and
xchg
mov
cmp
fucom
dec
xor
mov
scas
in
jl
cld
fistpll
shrb
fwait
sbb
leave
aad
lret
mov
cltd
loopne
imul
popa
xchg
mov
sbb
aam
add
xor
push
sub
mov
adc
lret
mov
adc
ret
pop
and
iret
jne
popa
pop
xchg
call
mov
adc
iret
repnz
xlat
addr16
adcb
int3
pop
mov
sbb
lods
and
loop
xchg
add
cli
adc
jmp
dec
xor
inc
mov
mov
add
mov
xchg
push
xchg
lcall
pop
in
mov
xor
stc
and
pop
jmp
in
cld
call
dec
stc
jmp
icebp
ss
mov
pop
in
sub
inc
mov
fistpl
and
push
add
xor
outsb
cmpsb
ja
js
faddl
cwtl
loop
push
pop
out
xchg
pop
mov
dec
xchg
rcrb
add
and
pushl
mov
mov
cwtl
setns
movl
not
lea
pusha
movl
pusha
mov
call
cltd
sbb
jmp
out
ljmp
jno
xlat
clc
fisttpl
sti
add
xor
ret
rolb
sub
jae
notb
aaa
add
dec
adc
pop
sbb
in
pop
jmp
call
bswap
cmc
pshufw
fldl
lcall
test
in
push
sub
xchg
lods
push
scas
push
push
in
es
shrl
push
push
ja
xor
add
lcall
sbb
push
in
sub
mov
cmpl
jmp
mov
cmp
cmp
nop
mov
or
sub
sub
arpl
add
jno
adc
repnz
cltd
movsb
fisubl
sbb
pop
add
movsb
idivb
cld
cmpb
movl
pushf
mov
lea
jmp
fstpl
pop
xchg
push
data16
aaa
mov
nop
sub
adc
outsl
pop
shl
stc
les
push
stos
or
cld
into
xrelease
into
ret
in
push
inc
push
popa
mov
dec
xchg
mov
sbb
sub
cmp
push
nop
dec
push
into
xlat
out
push
push
push
aas
jo
shlb
movsl
call
ss
mov
push
mov
jnp
dec
cmp
std
movsb
dec
adc
data16
jae
push
adc
aas
enter
lods
aad
mov
scas
repz
cmpsw
sub
push
sub
es
ss
out
jl
jmp
inc
add
mov
sbb
pusha
fs
sbb
push
push
idiv
mov
insl
fwait
mov
cs
dec
pop
in
arpl
and
arpl
in
addr16
or
push
imul
and
jmp
push
sbb
mov
insb
std
sub
insb
jp
mov
outsl
ror
jns
lods
stos
les
push
or
cmp
int
fsubrs
mov
lret
or
fsubs
gs
mov
push
nop
dec
adc
xchg
test
and
push
pusha
mov
clc
inc
xor
and
mov
and
xchg
test
inc
imul
lock
mov
mov
aam
repz
xor
dec
fcompl
push
insl
adc
ss
insl
pushf
lea
lahf
test
cmp
mov
cmpl
stc
movsl
xchg
movsl
cwtl
lock
sahf
ds
in
fs
mov
outsb
cmc
jecxz
arpl
push
dec
icebp
sbb
pushf
mov
cld
cmp
mov
cld
cmpsb
push
test
outsb
inc
cs
in
lods
jne
mov
xchg
outsl
push
or
aad
cmc
push
dec
xlat
mov
sti
shr
pushf
movl
movb
lea
je
pusha
adc
push
pushf
lea
jmp
add
inc
js
je
jb
arpl
jae
cld
rorl
push
add
pop
out
pop
into
cwtl
lea
mov
mov
jbe
mov
xor
jb
jp
xchg
mov
fbld
iret
jno
lds
in
mov
mov
loope
imul
pop
or
cmp
jns
aas
jle
hlt
add
sbb
js
sub
push
add
pusha
mov
out
lea
rorb
lea
mov
movzwl
not
pop
lea
lea
jae
mov
call
push
movl
push
pushf
pushf
push
movl
pusha
pushl
pushf
lea
jmp
mov
pushf
movzbl
mov
lea
call
inc
mov
bt
cmp
clc
stc
cmp
movw
lea
jb
stc
bt
cmp
call
jmp
pop
stos
aad
push
jp
jle
pop
enter
push
adc
int
jo
cmp
jne
pop
imul
roll
mov
stc
fisttpll
mov
sbb
mov
fstps
xchg
mov
mov
or
mov
sbb
repnz
imul
ja
mov
cmp
jb
jge
and
mov
and
ret
fwait
cmpsb
aas
popa
pop
or
aam
cmpsb
aaa
gs
ss
fs
xchg
inc
mov
jno
test
loopne
or
out
sub
inc
sbb
sbb
stc
dec
and
sub
push
lods
out
incb
dec
sbb
shl
iret
xor
mov
dec
loopne
pop
cmc
fs
push
xchg
and
push
cs
sub
ljmp
adc
stos
fstpt
leave
out
adc
ss
ret
rolb
jecxz
add
xorb
jbe
lods
jmp
and
xor
jecxz
scas
dec
mov
loop
cmp
enter
jnp
xchg
xchg
cmp
fcmovb
jns
imul
lret
mov
sbb
jnp
cmp
or
andl
jg
js
insl
fucomp
and
mov
std
in
les
xchg
adc
or
fadds
push
bound
bound
hlt
inc
roll
lods
pop
test
divl
aad
inc
lock
adcb
sbb
enter
adc
xor
jb
test
in
imul
stc
adc
movsb
cmpsl
mov
imul
cmp
nop
hlt
iret
repnz
in
leave
or
push
imul
push
sub
out
xor
push
je
xchg
stos
shl
jl
jmp
bt
stc
clc
or
call
lea
call
push
lea
jne
movsbw
call
mov
cwtl
cwtl
lea
pushf
movl
push
pushf
call
adc
loopne
ss
adc
hlt
adcb
add
movsl
adc
push
in
shrl
xchg
jmp
mov
mov
jge
lea
dec
sbb
adc
inc
cltd
arpl
fadds
push
leave
xchg
out
jmp
je
data16
mov
cmc
rcll
lods
sti
pop
bound
xlat
pop
add
cltd
test
aad
xor
xchg
sub
aad
sbb
sbb
inc
jae
inc
adc
jbe
cmp
into
mov
xchg
stos
push
dec
ja
testl
mov
mov
pop
mov
cmc
pushl
or
jmp
xlat
ljmp
rolb
mov
cmp
inc
add
popa
jo
hlt
dec
mov
or
loope
pop
lret
pushf
cs
mov
in
cmp
jo
stos
adc
or
fcoms
push
sub
mov
xchg
push
adc
push
sub
xorl
js
aaa
cmp
push
jnp
dec
mov
sbb
data16
push
movsb
int3
mov
imul
cmp
aad
fiaddl
cli
cmp
ss
das
adc
lahf
outsb
xor
aas
in
call
sub
pop
bound
mov
int3
mov
push
lret
pop
jbe
aas
ret
xor
rolb
lahf
cmp
cltd
fcmovnu
mov
decb
cld
cmp
bound
inc
cmp
jns
and
dec
stc
ljmp
pop
sbb
js
fsub
sbb
mov
icebp
cld
push
js
ror
ret
repnz
loope
loop
fwait
or
dec
lods
push
xchg
cmpsb
cmp
pop
xchg
call
in
mov
or
xlat
call
pop
jle
mov
sbb
inc
mov
adc
test
stos
lods
testb
sarb
or
adc
int3
xchg
sti
xchg
aad
mov
mov
sar
mov
leave
pushf
cli
pop
fs
enter
xorb
shl
mov
mov
pushf
in
les
xlat
repz
jmp
cltd
dec
mov
push
dec
rorb
push
outsl
push
sub
mov
pop
inc
push
inc
lea
je
test
push
stc
pushl
add
bt
jmp
add
shlb
push
cld
in
jl
cmp
pop
mov
imul
imul
inc
paddusb
inc
enter
shlb
fstpl
and
ret
fistps
xor
ror
adc
andl
mov
cmp
fimuls
xchg
leave
lea
mov
cmp
ret
nop
out
adc
sahf
jecxz
stc
inc
mov
fldl
xchg
push
ficomps
adcb
je
push
shll
adc
xor
mov
mov
movsbl
cmp
pop
dec
dec
sub
push
adc
aas
mov
dec
and
outsl
out
sub
add
lcall
inc
add
int3
jae
and
jl
vpunpckldq
dec
sub
sti
jp
fnstsw
in
cmc
mov
lret
mov
fiaddl
or
pop
ret
mov
and
fidivrl
mov
push
cltd
shll
push
dec
sbb
sbb
mov
inc
mov
sub
loope
out
fdivs
inc
xchg
jl
jg
xchg
and
push
jmp
jecxz
ja
icebp
pusha
sbb
in
mov
sti
ljmp
mov
push
or
adc
mov
xor
mov
stos
dec
sub
rcrl
mov
push
dec
leave
clc
movb
adc
xor
add
sbb
add
cs
les
mov
and
xchg
dec
aam
movb
pushf
jmp
adc
sub
dec
jle
pop
sbb
fdivrl
loop
adcb
add
pop
sti
hlt
fstpl
sbb
sub
mov
pop
xor
das
sub
push
xchg
pusha
pop
add
or
or
dec
movsb
jl
sbb
push
push
cmp
or
adc
or
inc
mov
outsb
add
shll
mov
and
and
adc
xchg
xor
cld
out
aad
inc
inc
fimuls
fldenv
lret
push
repz
xor
mov
lock
inc
out
and
inc
cmp
adc
add
mov
sbb
in
out
adc
push
cld
repz
and
rcrl
add
fs
add
xchg
repz
push
xchg
dec
adc
push
lods
push
xchg
clc
les
aad
sub
and
adc
cmp
cltd
fistps
cmpb
aam
jl
fmull
pop
enter
dec
in
cmc
sbb
mov
movsb
and
xchg
sbb
cwtl
adc
sbb
sbb
sti
adc
adc
sbb
cwtl
ret
jecxz
adc
sub
aam
dec
push
dec
lock
mov
xchg
and
push
adc
in
aas
push
cmpsl
mov
push
repz
outsb
dec
sub
adc
movsl
jecxz
rorb
push
or
cmpsb
push
jmp
divl
gs
or
in
popf
xchg
xlat
jecxz
and
out
xor
sub
out
push
add
fistl
sbb
sbb
mov
and
scas
out
fstpl
sub
lahf
sbb
in
jl
popf
out
add
jo
lds
sbb
mov
repz
adc
shlb
xchg
mov
sbb
cmp
in
adc
mov
add
jl
mov
sub
and
bound
sub
add
add
xor
mov
mov
or
jecxz
ficoml
xchg
sbb
repz
push
mov
jecxz
enter
cltd
std
and
cltd
hlt
jl
icebp
movsl
xor
dec
lret
push
mov
fists
cld
lds
push
popf
sarl
nop
xlat
jbe
sub
in
iret
aad
int3
das
mov
mulps
xor
mulb
cmp
xlat
dec
and
xchg
bound
inc
xchg
adc
test
out
cld
push
cmp
push
sub
lahf
push
cli
test
jle
sbb
repz
xor
pop
cmp
lea
pop
repz
cmpsb
inc
test
andb
loopne
jl
aaa
ja
mov
dec
rorb
cmp
pop
and
xor
sbb
jle
std
dec
out
sar
adc
into
or
sbb
pop
sbbb
in
xchg
and
adc
jle
xchg
lcall
aam
jae
or
mov
pop
sbb
xchg
inc
inc
dec
sahf
add
outsb
sub
mov
rcrl
in
int
lret
pop
cmp
push
inc
loopne
cmp
ds
mov
call
rcll
dec
shl
cld
dec
das
int3
inc
adcl
mov
xchg
inc
aaa
or
sbb
lock
push
jnp
push
movsb
ret
movsb
push
xchg
fs
cwtd
mov
mov
movsb
lcall
aam
adc
pop
and
lock
xor
dec
sub
stos
clc
loop,pt
add
and
add
dec
sti
js
sbb
cld
jl
xchg
cmp
cwtl
fstl
add
mov
or
repz
push
add
roll
cld
nop
orl
dec
call
xchg
cld
ss
mov
cld
into
fadds
int3
xchg
cmp
mov
ret
int3
in
lret
icebp
xchg
and
inc
out
leavew
lods
mov
popf
sahf
hlt
or
push
adc
fs
mov
sbb
scas
and
jne
sbbb
das
lcall
dec
add
inc
add
adc
jbe
xchg
test
pop
xchg
jg
divb
int
sub
and
loop
rclb
cmpsl
dec
int
adc
aad
cmp
in
out
cli
in
mov
cmp
dec
clc
mov
pop
dec
xor
movups
ret
mov
adc
mov
sub
mov
cli
or
mov
inc
cmp
adcl
cld
xchg
repz
sub
inc
add
inc
fisttps
cmp
addb
nop
lret
xor
adc
seta
je
dec
jae
and
sbb
dec
xlat
sbb
mov
and
rcr
and
sub
std
mov
mov
xor
insb
pop
xor
sub
cmc
push
xlat
and
sub
ds
or
pop
aam
pushf
sub
mov
int3
jo
mov
pop
repz
cmpl
add
dec
xchg
add
or
jnp
mov
mov
dec
dec
push
mov
pop
nop
int
ljmp
mov
add
iret
cmp
push
jecxz
adc
fstl
lahf
inc
push
cmpsb
in
add
lcall
fsub
jl
or
adc
push
xchg
sbb
push
clc
dec
xchg
and
mov
sti
or
outsl
mov
xchg
popf
cli
test
cld
mov
outsl
pop
push
repz
inc
in
jmp
out
cwtl
repz
scas
leave
xor
or
mov
mov
cmc
sub
cmovs
mov
mov
inc
pusha
push
fs
cmpb
outsb
cmp
out
fdivr
mov
cld
sub
das
sbb
mov
or
lret
lods
push
subb
xor
or
repz
add
adc
mov
mov
sub
sti
pop
mov
pop
xchg
test
push
mov
mov
out
jl
jns
incl
inc
mov
push
xchg
loope
or
dec
dec
insl
fsts
repz
push
movsl
jbe
push
inc
daa
cmp
xor
movsl
pop
or
push
jl
stos
cmp
push
mov
mov
cmp
rclb
jl
inc
xchg
sbb
es
aas
ljmp
inc
xor
sbb
mov
lods
push
xchg
sub
jns
inc
cltd
pop
out
test
jb
or
cld
cmpsl
dec
out
es
add
mov
daa
xlat
xchg
jg
add
xchg
fcomps
inc
leave
les
mov
clc
jp
fwait
rorl
pop
cltd
fidivrl
movsb
xchg
jbe
cmpsb
sti
rclb
in
xchg
stos
fisttps
cmc
mov
lcall
cld
adc
hlt
leave
xor
adc
ret
lret
pushf
mov
pop
push
in
jl
negl
lods
mov
repz
mov
adc
dec
loop
dec
rcrb
hlt
jl
and
mov
adc
xchg
fadd
icebp
daa
pop
nop/reserved
loop
mov
jl
cmp
cmc
gs
lret
inc
xchg
add
imul
push
jle
repz
sbb
adc
push
loopne
in
mov
adc
adc
fwait
jl
shlw
xchg
test
jo
sbb
fsubrs
cmp
cmp
mov
stos
test
inc
add
sbb
mov
shl
or
ds
pop
ds
mov
inc
sbb
jle
test
call
bound
dec
movsb
ret
jle
adc
push
inc
jle
leave
out
push
ds
sub
sbb
pushf
cld
pop
repz
push
sbb
push
xor
push
repz
inc
shrd
xchg
cld
mov
ret
mov
xchg
or
xchg
jl
ud2
dec
repz
mov
or
aas
es
jle
sub
lcall
sbb
sub
adc
adc
push
pop
dec
cld
aam
nop
xchg
xchg
loop
lock
push
fs
dec
jl
ret
fistpll
inc
and
lods
ljmp
fadd
test
ret
pop
out
xchg
inc
mov
push
or
loop
shlb
out
aam
cld
pop
pop
aam
sbb
inc
inc
inc
adc
mov
adcb
pop
cmc
mov
cli
xor
out
mov
fbstp
adc
pop
mov
jns
or
cmpb
xor
inc
or
sub
clc
repz
dec
xchg
jmp
add
or
lahf
mov
out
pop
movsb
hlt
sbb
roll
dec
adc
scas
dec
add
icebp
pop
in
push
pop
dec
adc
sbb
add
mov
lret
inc
sbb
mov
mov
mov
inc
or
outsl
inc
add
jmp
cmp
and
mov
cld
jno
mov
pop
cmp
pop
lret
aas
jl
lock
jno
aaa
and
and
arpl
and
rcll
add
stc
test
outsb
lahf
cmpsl
rclb
test
jg
jno
xchg
cmp
cs
xor
nop
dec
push
push
add
and
repnz
in
and
adc
test
out
ret
jge
jl
inc
add
dec
mov
cli
hlt
or
cld
pushf
xchg
arpl
ljmp
fadds
cmp
xchg
sub
mov
xor
sbb
fcmovne
push
fs
ds
js
xor
in
sub
sub
out
enter
sbb
sub
inc
fdivl
push
or
dec
jno
cld
inc
lea
pusha
mov
push
and
mov
mov
loopne
sti
mov
cmp
mov
pop
pop
push
repz
mov
scas
sar
cmp
push
push
repz
sub
in
out
cmp
arpl
adc
divl
pop
orb
lahf
jle
pop
push
shll
cmp
iret
jg
dec
pop
iret
dec
cwtl
mov
jmp
int
in
mov
mov
sbb
fs
jl
imulb
or
and
xor
cmp
pop
add
repz
cmpsb
pop
mov
mul
dec
or
mov
repnz
fwait
lret
xor
adc
out
and
fcompl
cwtl
fucomi
int3
cli
sbb
inc
sub
mov
test
adc
inc
cmc
pop
ss
sbb
and
sub
adc
xchg
lods
cmp
add
xchg
push
in
and
inc
out
fnstenv
dec
sbb
jmp
bound
or
add
test
es
mov
jbe
xor
jge
jmp
mov
sbb
push
jnp
cmp
lcall
dec
cs
mov
xor
xchg
mov
mov
sub
shlb
xlat
mov
xor
ret
pop
mov
xchg
movsb
repnz
mov
mov
dec
jnp
daa
add
test
test
or
mov
sbb
mov
adc
dec
adc
leave
in
repz
mov
push
sub
add
jb
adc
mov
loope
cmp
lahf
adc
cltd
outsl
adc
or
sbb
cmp
xor
imul
jp
xchg
jle
push
pop
sbb
xchg
xchg
cmp
sbb
cld
sub
adc
cmc
cmp
nop
lret
cmp
dec
dec
xor
cmp
pop
xor
and
testl
jle
push
or
movsb
jp
imul
mov
test
fcomp
inc
mov
and
sbb
es
and
push
repz
xchg
pop
mov
out
xchg
add
sbb
ja
inc
test
scas
pop
fwait
inc
adc
aad
xchg
pop
cmp
mov
js
inc
xchg
xor
repz
sub
ljmp
pushf
xor
ret
arpl
jle
cmp
jle
out
out
imul
and
xor
and
push
xchg
adc
fists
sbb
cmc
roll
dec
popa
lds
sti
jmp
jo
jmp
shlb
jg
pcmpeqb
dec
xor
sbb
xor
pop
int3
push
mov
or
dec
sbb
sub
add
ret
adc
pop
push
push
jecxz
or
cld
or
ljmp
jo
mov
in
roll
xchg
lret
and
mov
iret
leave
mov
pop
adc
dec
inc
sbb
ficomps
fstps
fidivrl
aam
in
sbb
cmpsb
cwtl
out
pop
jmp
dec
xor
adc
sbb
or
pop
and
mov
js
mov
cmp
pop
or
mov
out
adc
cmp
into
and
dec
jl
movsl
mov
repnz
imul
dec
ficoms
bnd
sub
mov
mov
imul
dec
push
pop
lret
int3
dec
dec
call
inc
pop
stos
jnp
xchg
inc
bound
adc
xchg
cmp
or
pop
xor
xchg
cs
xor
stos
xor
jmp
leave
cmp
sbb
push
add
in
adc
jne
rorl
mov
sbb
or
shll
jns
dec
jbe
dec
and
mov
mov
out
jle
push
mov
cmc
sbb
sbb
cwtl
jmp
dec
sbb
push
stos
pop
fdivl
mov
out
jb
shll
sbb
aad
push
subb
fistl
jnp
cmp
addb
pop
or
mov
dec
sti
xchg
fisubrl
cmp
xchg
sbb
sub
out
fsubs
dec
mov
gs
mov
lock
inc
adc
pop
xor
popf
movsl
inc
mov
or
push
cmp
dec
sub
fdiv
pop
and
repz
xor
faddp
jge
cld
xchg
out
xchg
pop
sbb
scas
lods
push
repz
cld
push
ljmp
notl
dec
ret
or
mov
adc
cltd
and
adc
test
mov
sar
lret
or
fwait
inc
stos
xchg
dec
imul
ret
cld
outsb
out
or
xor
sbbl
adc
and
ret
sbbb
fcmovne
adc
lds
fsts
sub
outsb
movsl
xrelease
into
adc
adc
cmp
movsl
in
mov
cmc
cmp
cltd
and
xchg
sbb
push
mov
ljmp
jl
cwtl
nop
sub
sub
mov
in
fisubs
pop
xorl
and
dec
xchg
push
sbb
jecxz
int3
out
in
cmpl
pop
jg
daa
mov
out
shlb
or
test
pop
repz
sub
push
cltd
test
das
ss
mov
sub
push
xor
mov
mov
mov
push
jle
outsl
push
sbbb
pop
xor
or
aaa
push
sbb
call
mov
push
add
push
movsb
mov
push
movsb
push
cmpsl
into
sub
xor
int3
cmp
jo
inc
data16
clc
movsb
and
ficoml
cli
test
mov
push
cmc
aaa
lcall
dec
pop
mov
imul
mov
out
enter
sbb
cld
in
icebp
jl
pop
mov
dec
mov
adc
inc
sbb
xchg
adc
jecxz
sbb
xchg
xlat
aad
dec
adc
xchg
fiaddl
fstpl
out
stc
or
or
std
fs
fsts
or
xor
test
sub
js
add
rsqrtps
out
or
imul
xor
push
dec
aas
jbe
mov
repnz
hlt
sti
arpl
push
mov
lcall
insb
mov
aas
incb
fs
lret
xchg
pop
jecxz
cmp
in
xchg
repz
ficompl
aas
mov
dec
inc
ds
divl
cli
mov
mov
dec
mov
fwait
xor
adc
enter
dec
pushf
fisubl
imul
sbb
sub
sub
mov
pushf
clc
roll
push
nop
pop
adc
notb
adc
leave
cwtl
cmp
pop
sub
xor
push
xor
into
icebp
push
xchg
lret
sub
fs
and
mov
js
lods
popf
int3
cmp
jl
loop
repz
inc
xor
js
mov
cmp
cs
mov
xor
fistps
sbb
out
mov
dec
cmp
and
mov
lret
xor
aaa
pusha
xchg
test
add
cmp
and
inc
xor
jl
push
inc
jno
or
jge
xchg
out
rcr
or
jl
cmp
fcompl
fwait
inc
inc
sub
ud1
mov
outsb
dec
movsl
js
pushf
mov
adc
pop
xchg
ret
jge
inc
cmpsb
jl
stos
ret
inc
add
or
mov
add
cmpsb
add
gs
or
pop
pop
test
cmp
or
sub
sub
add
cld
adc
push
lret
aad
jl
xor
rcrb
or
pop
xchg
push
js
mov
aas
xchg
scas
mov
xor
sahf
pop
and
xchg
sbb
cld
xor
push
mov
ss
ja
jno
dec
push
sbbb
adc
andb
jg
daa
add
sti
inc
push
int3
ret
xchg
loope
mov
add
jmp
scas
lods
stos
aaa
aam
cmp
mov
or
repz
xor
dec
or
les
pop
fcomi
adc
sub
fsubs
in
psllq
xor
add
jl
pop
mov
cs
orb
and
fsubrs
cli
cmp
imul
sbb
ss
jge
cli
fistps
out
cld
push
sub
adc
or
mov
clc
lret
hlt
and
jne
xchg
dec
push
leave
pushf
fwait
adc
repnz
add
jecxz
xor
sbb
scas
cmpsb
fstps
xchg
push
cwtl
out
dec
movsb
push
sub
xor
lods
pop
lcall
cli
jmp
mov
jns
adc
xor
pop
cmpsl
rclb
outsb
das
mov
pop
xor
fildll
lods
ret
jg
adc
push
or
bound
in
or
sarb
nop
sbb
xor
jg
repz
lds
mov
test
mov
bound
adc
or
adc
sub
mov
sbb
popf
sbb
xor
inc
jo
sbb
xchg
and
cmp
sbb
sbb
fs
add
pushf
add
pop
jo
and
in
pop
cltd
inc
nop
mov
cwtl
js
adc
ficompl
test
mov
add
cmp
ficompl
sbb
mov
add
jl
lods
sbb
or
mov
loopne
dec
cmp
adc
adc
or
stos
js
adc
fs
cmp
mov
jl
test
xchg
sub
cmp
mov
mov
sub
sbb
cli
push
insb
lret
insb
lock
in
or
inc
fwait
mov
fs
mov
aam
sbb
mov
push
fs
xor
push
fcomps
cmp
inc
xor
sarb
jl
call
adc
mov
hlt
push
cld
subb
jle
and
xor
or
subb
sti
mov
rcl
clc
xor
sub
cmp
mov
fs
sbb
call
mov
pop
xor
xor
cwtl
nop
sbbb
jl
inc
test
and
icebp
mov
inc
sbb
pop
push
cmp
fcoms
fs
sub
sbb
xor
subl
or
popf
cld
sub
addl
jle
les
xorb
test
or
inc
or
cmp
and
inc
or
int3
jg
movmskps
clc
cwtl
xor
js
fs
xchg
aas
movsb
lods
pop
lahf
dec
testl
jnp
xchg
scas
loop
xchg
inc
lret
icebp
mov
movsb
xchg
sub
ret
dec
aaa
xchg
rcll
rcll
adc
xchg
inc
dec
out
in
xchg
add
std
pop
aas
das
xchg
mov
pop
addr16
gs
push
cli
mov
mov
movsb
inc
mov
ljmp
cld
xor
fidivrl
xor
popf
push
jge
push
inc
lahf
fldenv
dec
fdivrp
mov
rorl
jne
xchg
cmp
dec
pop
jo
aas
add
pop
pop
repz
pop
test
xchg
mov
xchg
jmp
sbb
repz
lods
loope
push
fs
lods
push
pop
push
push
mov
sub
sbb
mulb
mov
xchg
je
scas
mov
fldcw
xchg
pop
cld
out
mov
rclb
fistl
repz
testl
pop
popf
leave
push
xor
jecxz
inc
ja
mov
adc
out
enter
mov
mov
data16
in
out
jl
cltd
sub
fidivrl
lahf
loope
cwtl
neg
or
stc
sbb
lret
popf
dec
mov
je
outsl
hlt
jo
push
adc
pop
mov
test
xchg
cmp
cli
fmuls
in
or
rorb
repz
decl
inc
xchg
xchg
adc
imul
cmp
sub
push
out
lret
sti
pusha
and
push
pop
movsl
mov
xor
pop
enter
or
sbb
pop
test
inc
insb
jne
adc
jl
push
imul
testb
bound
cld
pop
in
add
cltd
jl
push
mov
sub
sub
push
push
rclb
cld
test
sub
dec
pop
pop
insl
sbb
loop
inc
subb
mov
pop
in
enter
loop
push
in
jl
add
mov
fsubr
dec
rcrl
fs
int
push
cmp
loopne
in
fadd
es
les
fcomp
imul
scas
vpsubusw
push
testl
dec
int3
popf
in
movsb
sub
inc
xchg
into
rep
in
subb
outsb
lcall
inc
pop
adc
mov
stos
jo
add
ljmp
cmpsb
dec
sbb
or
inc
push
inc
sbb
cmc
pushf
mov
out
pop
pop
scas
jmp
fcomip
jecxz
sub
add
lock
sarb
popf
sub
or
xchg
adc
call
xchg
lock
inc
out
ret
les
dec
sbb
sub
or
imul
out
cmpsb
mov
fadd
xchg
fcmove
fbld
js
xchg
push
stos
loope
xor
mov
out
dec
cmp
push
je
adcb
js
hlt
stos
inc
movsl
push
jb
mov
or
push
test
lea
in
js
mov
sbb
aad
clc
loopne
lcall
or
and
ret
jl
cmpsb
leave
aam
leave
mov
push
clc
jle
pop
add
adc
dec
push
sub
dec
adc
js
sbb
lcall
sub
cmp
loopne
cmpsb
stc
sbb
insb
loope
push
jo
xor
mov
gs
out
adc
jl
push
iret
and
in
in
ficompl
adc
inc
repz
mov
icebp
cmp
cmp
das
jg
mov
jl
fisttpl
rolb
push
lds
inc
sbb
xor
repz
insb
int3
mov
push
sub
jnp
rcr
fildll
lods
insb
mov
out
fdiv
mov
fildl
pop
ret
sbb
push
test
inc
sbb
xor
repz
mov
push
add
pop
hlt
mov
pop
enter
mov
sbb
mov
add
and
mov
popaw
lcall
in
xor
inc
or
cwtl
ljmp
mov
jp
std
pop
push
in
xchg
sbb
leave
or
in
xor
inc
test
mov
adc
fs
jg
scas
lods
movsb
repz
sbb
mov
or
xchg
stos
test
lods
orb
mov
xorb
mov
xchg
and
lret
orl
dec
scas
jmp
xlat
push
movsb
scas
add
pop
pop
inc
mov
pushf
sbb
and
inc
xor
cmp
push
daa
jns
adc
mov
lock
fbld
mov
loope
sub
push
sti
sub
xor
mov
stos
movsl
adc
sbb
pushf
adc
sbb
cld
push
idivb
pusha
add
cwtl
pop
xor
pop
arpl
test
sbb
xchg
repnz
and
sub
mov
jnp
test
mov
cli
hlt
xchg
sub
jl
arpl
cld
pop
xchg
inc
dec
inc
dec
jns
adc
push
sub
fnstcw
add
rcrb
aaa
cmp
pop
cmpsl
adc
xor
ficoms
jb
fdivr
add
ds
or
faddl
sbb
add
xor
fcomps
push
sbb
lds
sub
popf
pop
xchg
mov
loop
or
in
jecxz
ss
pop
mov
add
test
lock
inc
rcrb
cld
into
or
repz
call
call
scas
stc
mov
stos
mov
faddl
jp
rcrl
jmp
push
mov
idivb
or
inc
sbb
jg
xchg
insb
xor
das
adc
shll
nop
lret
xor
xchg
lods
adc
pop
outsb
pop
lret
ret
aam
and
jp
int
into
inc
arpl
xchg
cld
sbb
mov
insb
or
pushf
pop
cmc
js
out
shll
xchg
repz
lcall
mov
adc
into
inc
bound
aas
hlt
sbb
in
and
dec
repz
jnp
cli
or
stos
sti
cmp
mov
enter
mov
out
cwtl
pushf
jle
aam
mov
or
dec
sbb
inc
mov
push
dec
popf
daa
fmul
mov
dec
lods
sub
int
cmp
insl
mov
or
jp
mov
jl
jne
mov
xor
xor
rcr
popa
push
mov
add
dec
movsl
mov
push
push
adc
into
test
adcb
loop
enter
jg
jns
and
fisubl
leave
ret
add
rcrb
mov
ljmp
cld
fcoml
bound
mov
or
notb
add
pop
xor
jl
xor
leave
insl
sub
pop
dec
xor
push
ds
push
cld
or
hlt
mov
ds
ret
inc
cmpsb
mov
enter
dec
xor
sbb
out
nop
mov
adc
or
or
sub
cmp
test
or
or
enter
addr16
fsubrp
add
pop
or
andb
jae
and
movsl
or
aas
je
movsl
mov
sbb
push
imul
ret
nop
cmp
adc
out
cmpsb
sbb
lret
or
das
xchg
insl
pop
sahf
jl
sti
xor
bound
iret
out
xlat
inc
push
mov
mov
sub
nop
subb
stos
or
dec
jl
xor
inc
mov
repz
dec
out
xorb
xchg
clc
call
popf
insl
andl
imul
dec
js
cmp
pop
xchg
mov
xor
cld
lret
lock
sbb
pop
fsub
sub
imul
lds
pop
mov
sbb
lret
push
repz
dec
cmp
rcll
je
inc
stos
jmp
or
sub
ds
mov
xchg
fnstsw
sbb
icebp
sbb
repz
out
cmp
inc
rcrb
jecxz
adc
dec
enter
rcll
xchg
inc
repz
in
xor
push
sbb
sub
out
mov
bound
jae
psllq
xor
enter
pushf
pop
adc
jno
flds
repz
mov
aas
sbb
and
adc
lahf
dec
out
xor
sbb
adc
sub
and
sti
idivb
dec
sbb
sbb
outsl
aaa
repz
outsl
cmp
add
js
lahf
cltd
sbb
in
jl
push
dec
pop
xor
push
arpl
xchg
mov
mov
or
and
cld
and
pushf
sub
or
or
mov
mov
mul
cmpsb
mov
push
xchg
int3
outsb
adc
mov
mov
int
dec
pop
das
or
es
xor
call
sahf
cmp
xor
xlat
jno
xchg
mov
inc
mov
shll
jmp
sub
ficoml
andb
fwait
mov
xchg
mov
cmpl
in
cli
out
ljmp
add
pop
outsb
push
adc
movsb
dec
cli
mov
cmp
push
jge
add
push
add
sub
sbb
loop
jmp
inc
xchg
push
xor
sub
nop
mov
sub
mov
cli
int3
adc
test
aam
ficoms
cld
lret
nop
mov
inc
test
cmpsb
xor
adc
add
aam
sub
mov
dec
addb
jbe
mov
imul
push
mov
mov
ret
cwtl
pushf
nop
sbb
or
daa
es
adcb
or
pop
mov
dec
stos
aad
inc
aam
jl
dec
aaa
jbe
orb
jmp
xchg
push
in
push
fs
push
or
push
rclb
dec
add
pop
movl
or
iret
sub
iret
sarl
xchg
lock
loopne
jmp
repz
push
adc
loop
xchg
icebp
divb
pop
cld
movsl
bound
pop
dec
es
sbb
shl
dec
or
repz
dec
outsl
std
push
les
dec
dec
dec
sub
push
fsubrs
cld
jns
leave
dec
mov
orl
mov
daa
fcoms
fdiv
sub
sbb
jge
je
addr16
out
movsl
or
jae
call
addr16
xstore-rng
cmpsl
inc
sub
mov
jmp
or
sbb
les
xchg
sbb
in
repz
loop
pop
fdivl
jge
fidivs
sarl
movsb
jl
ja
jns
cld
push
js
or
dec
repz
jnp
popa
or
lock
fldt
in
mov
fs
popf
bound
pop
pushf
xor
js
or
xchg
adc
mov
dec
subl
icebp
cmpsb
add
aas
mov
sbb
clc
das
std
jbe
iret
cld
ds
cmpsl
mov
repz
mov
adc
in
movsb
aam
addb
fwait
in
js
shl
push
xchg
sbb
les
mov
mov
pushf
push
dec
adc
jecxz
mov
jno
sub
cld
xor
lds
pushf
push
push
pop
sete
loopne
xchg
and
popf
inc
sbb
stos
jne
stos
adc
loop
into
pop
push
inc
gs
jns
dec
stos
xor
mov
call
pop
fnsave
enter
push
ret
or
pusha
push
sbb
jae
cmp
pop
xor
fndisi(8087
or
ja
or
pop
sti
pop
jbe
lret
in
imul
sub
push
outsl
or
dec
lock
inc
sub
inc
add
jge
cld
outsl
mov
je
and
daa
and
fmulp
lcall
dec
pop
sbb
add
dec
cmp
or
pop
repz
lcall
and
dec
adc
add
cmp
cmp
and
fstps
xchg
cmp
cmp
out
out
mov
jmp
mov
sbb
rol
pop
push
cld
test
std
and
jbe
insl
cltd
adc
leave
jecxz
or
dec
mov
std
mov
int3
add
lock
icebp
inc
mov
inc
test
jb
test
lods
lea
push
adc
inc
adc
mov
repz
push
lret
fcmovne
sub
cmpsb
or
and
fildll
or
and
mov
test
mov
mov
pop
ficoml
lret
xchg
cld
mov
test
call
jge
cltd
out
cld
mov
dec
jb
mov
jl
mov
and
cmp
popf
cmc
fs
adc
jge
dec
dec
fmuls
ret
not
adc
leave
cmc
jle
rcr
inc
mov
btc
rolb
jl
insl
testb
push
cmpsb
fisubrs
jo
fcompl
idivl
pop
or
pop
pusha
sbb
cs
cmpsb
push
push
js
and
xlat
ljmp
mov
xor
mov
repz
mull
mov
sbb
lahf
inc
in
enter
pop
ja
sarl
jecxz
push
or
lahf
sbb
pushf
movl
sbb
shlb
or
inc
sbb
mov
cvttps2pi
cmp
dec
sbb
inc
xchg
addl
xchg
sbb
or
adc
mov
fistl
jp
mov
dec
iret
stos
adc
sub
fimull
mov
xor
loope
adc
out
cwtl
sbb
lods
add
xor
addb
fcmovnb
sahf
pop
jl
fs
pop
and
daa
and
inc
inc
lret
dec
pop
sbb
mov
sub
cmp
or
fdiv
dec
cwtl
outsb
mov
sbb
mov
outsl
mov
dec
push
xchg
sbb
fs
xchg
jl
mov
and
cmp
xor
movsb
dec
xrelease
push
outsl
xor
pop
mov
adc
xor
call
xchg
dec
jecxz
lds
sbb
pop
xchg
add
clc
xchg
scas
cmpsb
mov
outsl
sub
adc
shl
sbb
xchg
shl
and
push
cld
dec
jl
pop
leave
adc
and
sbb
or
xor
xor
add
lret
pushf
xchg
push
aaa
testb
sbb
adc
pop
aaa
sbb
cld
push
aam
repz
inc
sbb
jl
aaa
je
fists
fs
or
cmp
dec
dec
fwait
push
sub
dec
cmp
aas
jmp
and
test
push
lea
movsl
or
push
and
cld
mov
sub
jle,pn
ftst
adc
pop
push
pop
pushf
jno
xchg
out
mov
cld
pop
pop
nop
inc
xchg
sub
and
lods
mov
xor
enter
xor
aam
mov
add
loope
fnstsw
flds
sbb
call
jae
sar
lahf
mov
pop
outsl
adc
inc
fldt
jl
gs
sbb
sarb
mov
repnz
les
movsl
sub
fildl
cld
cli
aas
outsl
sbb
or
add
in
mov
and
jl
out
jae
xchg
pop
pushf
in
fwait
inc
add
popf
and
mov
pop
xor
adc
mov
fldl
or
rorl
andb
test
sbb
sbb
dec
pop
cs
loope
sbb
icebp
jo
movsl
cmpsl
mov
in
ficoml
shlb
dec
jl
add
cltd
and
pop
cwtl
fcoml
add
push
cli
push
es
or
je
pop
jno
cwtl
jae
xor
inc
adc
mov
jae
test
cmpsl
pop
dec
rep
jne
test
mov
push
xchg
sbb
push
pusha
xor
sbb
stc
imul
or
or
call
pusha
xlat
mov
mov
dec
add
out
int3
test
or
rorb
jge
pop
test
inc
fwait
jmp
int3
inc
loope
imul
cmp
sbbb
or
shl
add
das
mov
sub
add
cmpb
lds
adcl
jl
test
pop
jmp
lods
cld
clc
stos
xor
inc
adc
outsb
adc
dec
dec
jae
push
mov
add
sahf
push
and
daa
mov
xchg
and
repz
cmpb
into
jp
fs
push
clc
into
push
sbb
mov
push
adc
add
and
push
sbb
pusha
out
mov
jmp
orb
popf
std
in
scas
jmp
jl
lea
jmp
add
pop
lods
jbe
add
repz
sbb
inc
std
mov
cli
jge
pop
les
push
repz
lahf
mov
xchg
out
fadd
mov
clc
or
jo
lret
add
mov
loopne
outsb
cmpsl
push
in
out
jl
pop
scas
sahf
ret
icebp
mov
cwtl
push
bound
mov
sbb
dec
sbb
in
aas
enter
add
js
cmpsl
or
dec
pop
mov
and
dec
jp
adc
addr16
jbe
push
repz
lahf
cmp
fs
rclb
lret
insl
xchg
and
cmp
inc
mov
jae
jle
or
cld
mov
lds
cmp
hlt
or
call
lods
imul
cmpsl
das
xchg
out
mov
adc
test
roll
inc
cmp
pop
sub
jmp
dec
ret
or
or
test
dec
add
test
aas
inc
or
inc
sbb
add
popf
ret
daa
movsb
cmp
rclb
jns
les
sub
mov
pop
ret
mov
or
test
pusha
je
aam
xchg
add
cmp
shl
sbb
mov
mov
stos
mov
push
cmp
gs
icebp
dec
dec
shll
push
adc
jb
dec
sbb
pop
cmp
movsb
shrl
mov
clc
xchg
and
adc
jne
movsl
add
inc
xor
das
add
lds
mov
xor
mov
or
add
movsl
js
int
and
orb
pop
push
insb
xchg
in
push
mov
movsl
scas
push
add
clc
xchg
cmp
jno
subl
pop
cmp
aas
jmp
jecxz
push
cltd
or
jns
mov
add
dec
sub
lcall
xchg
adcl
add
dec
xchg
fs
mov
inc
cli
jle
jp
imull
aad
mov
rcrl
inc
outsb
and
xchg
cwtl
mov
xchg
test
sahf
mov
xchg
sbb
leave
cmpsl
pop
adc
psrad
lock
sub
pop
mov
cmp
sbb
jge
pusha
sbb
shll
and
cld
jno
add
xor
pop
xchg
call
es
inc
and
iret
xchg
test
xlat
in
inc
adc
cmp
pop
fidivs
loop
mov
push
dec
pushf
or
in
sbb
dec
xor
ret
cmp
and
in
movsl
orb
dec
mov
repz
xor
js
rcl
subb
sarl
inc
ljmp
lods
pop
cmp
pushf
mov
mov
or
sbb
fwait
in
das
dec
sub
jl
adc
mov
jg
jae
sbb
lret
or
sti
xchg
andps
mov
jbe
xchg
xor
stos
dec
sub
xchg
and
jl
push
dec
or
rorl
fistpl
mov
xor
imul
dec
and
push
and
faddl
mov
insb
cmp
sbb
and
lods
iret
xor
xor
loopne
mov
shl
pop
sbb
mov
repz
xor
mov
je
iret
pop
outsl
cmp
add
sbbb
or
adc
bound
sub
stos
adc
fwait
std
sbb
push
and
jl
stc
repnz
dec
dec
xchg
mov
outsb
cmpsl
ss
sbb
push
and
into
mov
adc
pop
inc
fwait
xchg
mov
test
mov
xor
out
pop
enter
fbld
inc
call
out
cmp
test
sub
orb
and
jo
fdivs
lock
les
sahf
xor
jle
dec
push
jmp
push
pop
push
add
out
lcall
mov
push
fs
jb
movsl
push
es
or
fisubl
out
sbb
add
lret
cmp
cmp
or
sbb
add
repz
sbbb
jp
dec
int
and
cli
aam
fistpl
xchg
orb
push
insb
into
out
cmp
scas
sbbb
fxch
add
and
call
mov
push
mov
adc
aad
enter
push
xchg
xchg
sub
xchg
movhps
fimull
push
lds
movsl
sbb
xor
push
jns
adc
sarl
and
adc
iret
push
pop
push
jecxz
orl
jl
popa
push
dec
nop
cltd
and
sub
xor
rcll
sbb
cwtl
mov
dec
aas
add
adc
stos
push
aas
clc
clc
shll
ja
pop
add
lods
mov
pop
or
fsubrl
cmp
in
addr16
sbb
fsubl
aas
jns
add
push
movsb
pushf
or
out
dec
stos
sbb
pop
loop
cmp
adc
filds
or
out
scas
mov
inc
dec
or
xor
pop
addb
ficoml
xor
cld
rorb
cmp
ficompl
sarl
loope
in
dec
jge
adcb
repz
mov
xor
dec
stc
push
push
ficoml
ja
jle
into
xchg
mov
pop
sbb
xor
fcoms
jae
scas
xor
hlt
ss
cmpsb
insl
jle
push
pop
xor
lret
fs
imul
fs
sahf
mov
push
pop
xor
xchg
pop
xchg
insl
xchg
imul
and
sub
or
mov
mov
dec
imul
dec
lret
push
mov
loope
fdivrs
test
jl
jmp
aas
dec
pop
std
xor
mov
sbb
inc
stos
pop
cltd
cltd
in
outsl
into
outsb
push
push
push
aam
pop
dec
xchg
scas
lahf
aas
pop
test
and
or
or
mov
xchg
push
and
inc
xchg
mov
out
sbbl
bound
sbb
ret
add
push
call
push
stc
sbb
addb
pop
insb
out
push
pop
sub
cld
mov
inc
inc
push
movsl
mov
add
out
xchg
fdivrs
push
cld
test
mov
test
ljmp
lea
adc
bound
mov
push
mov
sahf
sarb
mov
cmp
hlt
dec
lret
test
pop
adc
dec
cmp
or
repnz
push
dec
push
jae
push
xor
mov
mov
xor
cld
cmp
jl
or
jmp
out
mov
mov
int3
sbb
sbb
cmpb
rclb
out
outsl
pop
xchg
push
outsb
lea
in
int3
inc
push
lahf
jl
sub
out
fcomps
add
fistl
lea
stc
xor
xor
xchg
jle
sbb
or
adc
into
and
out
fdivr
scas
rcr
in
leave
test
or
sub
clc
test
sbb
jl
adc
pop
ficoml
flds
in
repz
sub
mov
sbb
jecxz
test
sbb
inc
or
xchg
xchg
push
and
test
rorb
pop
rcrl
adc
es
andb
je
cld
xchg
xchg
sbb
fimuls
insb
cli
push
inc
push
stc
add
mov
xchg
jbe
sti
cmc
aas
xor
sbb
and
jl
jne
and
pop
cmp
xor
movsl
ljmp
mov
xchg
add
jg
sbb
lea
lock
adc
adc
cmpsb
cld
icebp
pop
pop
test
push
inc
and
test
mov
sub
aad
inc
in
add
jle
sarb
adc
lods
and
sub
sub
jge
ss
and
jns
out
jl
repz
mov
cld
rol
sbb
sbb
out
out
mov
pop
insl
aaa
jne
xor
adc
dec
mov
out
es
addb
negl
mov
inc
popa
pop
ljmp
inc
dec
inc
xor
push
fs
outsb
out
stos
leave
xor
sarl
sub
push
adc
push
dec
adc
fwait
jl
fsubrl
mov
push
movsl
filds
adc
cld
gs
mov
orb
cmp
js
push
outsl
ljmp
fs
push
loope
push
clc
mov
sbb
popf
mov
ret
dec
push
jo
in
jle
sub
inc
xchg
mov
movsl
js
xchg
mov
in
mov
test
mov
jae
or
call
xchg
mov
scas
adc
lock
jmp
xor
icebp
mov
xchg
cmpsb
jb
aas
or
xchg
lods
stc
dec
xchg
or
mov
movsl
loopne
inc
xor
jnp
add
adc
outsl
sub
inc
lea
adc
or
js
shll
xor
pushf
das
iret
ficoml
std
daa
insb
lea
test
int3
cmp
ud2
or
out
pop
ret
lds
jmp
inc
xor
add
add
fnstsw
aad
mov
sub
inc
mov
add
jle
push
fmull
ret
pop
test
fldenv
xchg
out
cmp
lret
mov
stc
and
cmp
mov
int
dec
mov
orl
mov
inc
or
sahf
out
sbb
mov
in
dec
dec
xchg
mov
add
std
out
rcrl
lock
inc
lods
nop
pusha
pop
lcall
xchg
dec
aad
xchg
push
out
or
push
int
icebp
and
aam
mov
cltd
xchg
lds
sbb
add
push
andb
sti
stos
shlb
inc
push
dec
dec
mov
fiaddl
or
mov
adc
push
roll
shrb
dec
test
pop
sub
ss
cmp
sbb
insl
pop
jnp
lods
rclb
test
addl
xchg
fs
arpl
cs
and
inc
cmp
or
clc
movsl
loopne
push
andb
mov
jecxz
in
add
bound
inc
orl
in
scas
jl
pusha
mul
xchg
xor
aas
fists
pop
repnz
xor
lcall
sbb
movsb
icebp
xor
adc
pop
xor
jb
in
shlb
shl
pushf
adc
xchg
scas
mov
mov
fs
adc
lods
mov
jnp
aam
and
test
test
popf
add
sahf
xor
xchg
xchg
xchg
xchg
mov
or
dec
movsb
xor
fldln2
add
test
jmp
repz
movsb
or
pop
cmpb
jle
test
inc
mov
lret
cmp
jb
dec
clc
test
xchg
sbb
mov
push
jmp
or
ss
fsubrl
shlb
mov
ss
mov
mov
add
dec
aas
addb
cld
popf
addr16
in
sub
jmp
pushf
sbb
fcoml
fs
jnp
jl
mov
mov
inc
lock
and
ret
xor
and
mov
hlt
pop
xchg
aam
ja
add
pushf
adc
scas
dec
pop
jl
xor
xchg
fwait
and
lods
dec
mov
incb
sub
loop
repz
cwtl
dec
cmp
fdivrl
lret
pusha
pushf
add
mov
mov
inc
and
push
mov
xchg
repz
mov
adc
les
mov
jl
inc
or
mov
mov
mov
xchg
cmp
leave
inc
fs
test
push
cmp
sbb
xor
sub
movsb
and
or
cmp
pop
addb
xchg
outsl
cmp
sar
jge
and
xor
push
dec
adc
inc
dec
rclb
add
push
pop
js
stos
cmp
cld
addb
sbb
inc
cli
jl
jg
cmp
ficoml
aaa
cmpsb
add
leave
sbb
pop
out
iret
jb
push
leave
mov
aam
mov
mov
scas
push
arpl
sub
je
mov
and
xchg
sbb
scas
pop
and
cld
inc
dec
cwtl
push
xchg
clc
lods
cmp
sbb
fistpl
mov
push
adc
out
inc
adc
xchg
mov
dec
shl
sub
xchg
dec
cwtl
mov
adc
popf
xchg
dec
in
lock
mov
cmp
movsl
lcall
sub
dec
out
dec
pushf
and
sub
cmp
repz
xorl
ret
imull
js
or
or
aaa
mov
mov
negb
push
sub
sub
es
cmp
mov
inc
cmp
out
jg
add
mov
inc
scas
rclb
ret
add
cmp
xor
sub
cwtl
gs
mov
mov
sbb
rorb
jb
xor
cmp
xchg
and
push
adc
jmp
gs
and
push
mov
bound
loopne
cmp
repz
xchg
js
mov
add
pop
andb
xlat
sbb
jae
je
xor
lds
lret
jmp
or
sub
movsl
orl
xchg
enter
add
lds
pop
adc
adc
sbb
mov
mov
adc
mov
inc
inc
mov
sbb
test
cmpsb
lret
rolb
mov
sbb
mov
add
jp
clc
xor
push
fistl
cld
cmp
add
sbb
test
sub
inc
out
jg
lds
mov
xor
loope
lahf
adc
xchg
lods
sub
xor
int
clc
or
int
mov
pop
or
jecxz
push
ret
push
add
or
fdivrl
add
mov
insb
rcrl
sub
mov
push
sbb
lret
or
pop
sbb
movsl
lret
int3
push
push
or
sub
les
test
mov
lea
sbb
xsaveopt
jae
movsb
lcall
sub
clc
inc
push
mov
mov
xchg
outsb
xor
xor
sbb
lods
push
or
mov
fwait
loopne
adc
inc
cmc
je
out
adc
mov
sbb
cld
push
mov
cwtl
cmp
fsubs
test
sti
inc
mov
push
inc
jmp
in
add
mov
sbb
cmp
stos
lods
cmp
bound
sbb
mov
jl
adc
ficoms
pushf
in
xchg
push
jl
pop
mov
inc
mov
xchg
inc
mov
add
mov
mov
adc
cld
insb
xor
jge
adc
sbb
lods
jp
jmp
fnstenv
in
sahf
mov
mov
aad
popa
stos
sub
mov
ds
jl
icebp
arpl
xchg
add
mov
dec
mov
dec
mov
cli
or
inc
add
addr16
inc
popf
cmp
dec
jae
pop
jle
cwtl
fmull
mov
push
pop
adc
enter
ljmp
lods
dec
adc
cld
loop
xchg
xor
cmpb
out
sarb
sub
stos
jl
add
or
xorb
fwait
loope
push
pop
cmp
xchg
pushf
sbb
add
mov
pop
or
mov
cmp
pop
adc
loopne
leave
push
sbbl
push
out
cmpsb
mov
jl
scas
into
data16
aad
mov
andb
mov
es
mov
repz
xor
cld
testb
cmp
sub
or
out
sbb
aaa
mov
inc
add
push
xor
xchg
scas
push
push
inc
cmp
sbb
or
aas
push
cltd
and
mov
pop
and
inc
sahf
cmpsl
fnstsw
mov
xchg
sahf
sbb
xchg
mov
loope
cmp
pop
sub
movsb
xchg
dec
mov
add
adc
cld
sub
mov
sbb
cli
sub
adc
jg
xchg
call
data16
xlat
stc
mov
mov
inc
sub
cmp
mov
stc
jnp
xchg
pusha
mov
cld
das
leave
or
and
movsl
add
aam
outsl
mov
loope
cmp
int
mov
js
sbb
sbb
add
push
lret
add
push
inc
stc
inc
mov
insl
dec
ja
mov
test
adc
pop
repz
arpl
arpl
mov
adc
call
mov
push
jb
cld
cmp
test
cmp
adc
insb
mov
data16
js
inc
lock
je
scas
dec
add
xchg
adc
mov
xchg
test
icebp
rcrb
sbb
arpl
sahf
cld
sbb
fldl
adc
dec
cmpsb
sub
mov
inc
mov
xchg
and
fisttps
aad
dec
inc
cli
add
mov
nop
mov
cmp
push
stos
xchg
sbb
je
xor
sub
shl
jge
outsl
pushf
adc
ret
cmp
and
or
pop
out
aaa
call
enter
sbb
or
in
and
mov
cmp
iret
mov
add
push
adc
sbb
sbb
fisubrl
sbb
push
loope
popa
adc
arpl
inc
divl
or
data16
sub
repz
jae
orb
xchg
js
repz
pop
and
xchg
in
push
push
in
cltd
xchg
test
mov
pop
in
mov
inc
push
cltd
imulb
push
sbb
imul
fidivrl
push
mov
pop
cmp
rcll
pop
nop
test
cld
dec
jnp
inc
and
or
push
in
jl
out
es
lea
iret
cmp
add
repz
sub
inc
xor
sub
mov
adc
repz
and
push
and
pop
xor
dec
or
or
test
cmpsl
sbb
aad
jmp
scas
movsb
ds
sbb
test
and
je
xor
outsl
fstpt
dec
repz
adc
cld
das
gs
push
dec
sbb
dec
pop
pop
xor
stos
jp
sbb
xor
or
out
add
mov
adc
hlt
jle
lods
sbb
cmp
dec
lock
sub
and
dec
push
movsb
adc
bound
js
and
incl
mov
adc
bound
adc
inc
inc
popf
int
addr16
dec
xor
sbb
jp
jnp
sbb
je
aaa
pop
ss
testb
mov
jmp
or
or
lret
adcb
xlat
bound
leave
mov
push
fimull
cmpsb
roll
pop
mov
cmc
lahf
xchg
out
mov
pusha
jb
pop
mov
pop
xor
xchg
subl
push
fwait
jp
and
dec
aam
mov
sbb
mov
jp
mov
scas
rorl
xchg
dec
inc
fsubrs
iret
push
mov
fwait
cld
or
int
pop
aaa
sbb
iret
cmpsl
hlt
shlb
cmpsl
cmp
xor
test
xlat
scas
push
mov
inc
call
and
pop
cltd
dec
jl
sti
fsubr
xor
add
dec
xor
js
add
sub
pop
sub
and
push
mov
repnz
fdivrs
testl
adc
test
aam
ljmp
jo
pop
mov
add
ret
or
std
sbb
xor
jl
add
ret
add
inc
xchg
ficompl
mov
pop
mov
push
jge
scas
pop
push
out
in
movsb
adc
aas
mov
inc
pushf
or
dec
insb
jge
dec
or
fwait
inc
sub
push
jnp
test
in
iret
sub
or
rcrl
addb
jmp
enter
orb
pop
lret
xchg
arpl
sub
test
adc
lods
or
ret
popa
or
mov
arpl
and
inc
mov
repnz
clc
jl
maxps
mov
adc
mov
cmp
std
cltd
sbb
push
inc
fs
mov
sarb
pop
and
cmc
es
or
sahf
lret
je
je
clc
fwait
ljmp
shr
dec
push
jmp
push
jae
and
imul
sub
mov
push
push
sbb
rcl
xchg
push
fimuls
cld
fmull
lahf
in
cmpsb
pop
mov
xor
xchg
int3
mov
inc
cmp
cmp
cmp
push
nop
repnz
and
into
lret
aas
or
adc
xchg
inc
push
dec
xchg
mov
add
aas
inc
inc
and
push
cmpsl
aam
mov
mov
push
cmpsl
cwtl
xor
leave
ljmp
pop
lods
push
iret
pop
fcoms
push
and
jne
and
dec
mov
movnti
mov
repz
pop
xor
cmpsb
aam
data16
mov
push
inc
cld
or
jne
xor
xchg
sub
fs
fsubrs
xor
loope
test
inc
cli
jmp
repnz
jnp
testb
dec
xchg
lret
inc
leave
repz
push
cwtl
aas
pop
clc
push
lcall
mov
mov
repz
les
pop
lea
cmpsl
and
xchg
jecxz
pop
test
test
pop
sbb
jl
pop
popa
cmpsl
add
push
and
clc
bound
sbb
gs
adc
sbb
adc
lret
adcb
push
xor
sahf
mov
cmp
in
push
inc
add
lods
or
inc
jl
fidivrl
sbb
test
fdivs
lret
jb
pusha
rcrb
mov
dec
cld
mov
fisubs
cmp
ret
ss
dec
cld
dec
test
ret
xchg
pop
lods
xor
orb
cmp
lcall
pop
out
push
add
outsl
call
sub
bound
xchg
pop
ljmp
call
repz
fisubl
repz
lcall
in
hlt
add
int
jp
test
fiaddl
push
add
loope
inc
in
lock
jnp
andb
or
xchg
int3
adc
in
nop
xchg
xor
cmp
cmp
push
stos
cmp
enter
fcomps
mov
cld
and
in
cwtl
test
in
data16
sbb
pop
sbb
push
lods
test
adc
add
cld
add
in
fdiv
mov
int3
pop
jnp
clc
pop
cmp
inc
dec
js
adc
cld
insb
jmp
int3
lcall
test
xchg
push
dec
sbb
das
daa
push
inc
mov
faddl
mov
jp
test
sub
jl
xor
inc
xor
mov
jle
test
pop
sbb
fs
lds
inc
sub
sub
jmp
pop
ss
in
int3
push
into
jp
or
jns
adc
or
pop
xor
repz
ret
jmp
mov
sub
clc
cmp
add
pop
lret
mov
ds
imul
jl
lds
popf
mov
cmp
push
inc
rorb
dec
arpl
push
popa
jmp
and
sahf
imul
mov
sbb
mov
cmp
cmp
in
adc
aam
mov
lcall
ror
xchg
repz
sbb
loopne
mov
pop
loopne
adc
push
sbb
or
sbb
mov
push
pop
int3
ja
sub
cmp
xchg
mov
jmp
sbb
icebp
add
aas
lds
dec
sub
push
adc
lock
shlb
pop
cmpsb
sub
dec
arpl
xor
push
mov
repz
icebp
lret
pusha
xchg
hlt
stos
push
int
frstor
cwtl
add
mov
pop
ja
cmp
repz
xchg
jmp
test
cmp
pop
fwait
cld
sbb
push
push
cmp
ret
aad
dec
mov
push
mov
jmp
xor
in
lret
inc
fs
fimull
push
inc
pop
test
xchg
mov
pop
pop
mov
icebp
push
pop
stos
jno
jl
ficoms
sub
cmpsb
add
es
sub
pushf
push
mov
xor
or
mov
cmp
sti
mov
sub
fidivrl
jp
pop
mov
mov
pop
xchg
push
sbb
lcall
movl
push
jge
or
scas
jne
xor
lea
mov
jnp
or
pop
push
outsl
fisubrs
rcll
adc
xchg
imul
sub
mov
cmp
push
adc
pop
xor
mov
mov
mov
test
push
adc
push
ficompl
sti
and
push
das
rcl
mov
xchg
aas
jl
sbb
sbb
in
or
sbb
adc
outsb
add
push
push
inc
sbb
ss
sbb
leave
xor
xchg
in
jnp
push
cmp
mul
jns
mov
mov
mov
inc
rclb
cmp
push
sbb
add
pop
int
pusha
popf
out
cltd
sti
xor
lahf
pop
xor
jne
inc
jmp
push
call
out
aam
mov
push
in
neg
push
pop
movsl
sub
cld
mov
pop
movsb
lods
adc
inc
pop
cmp
and
nop
push
inc
in
dec
jl
pop
mov
sbb
push
mov
push
inc
insb
xor
sub
pop
push
sbb
dec
scas
push
inc
inc
in
lea
jb
cmp
fnsave
loopne
lcall
mov
fs
xchg
sbbl
dec
clc
or
xchg
mov
add
lock
adc
pop
dec
mov
scas
add
jg
or
dec
clc
mov
mov
dec
rcrl
jmp
mov
and
cmp
lock
cmp
jno
cmp
les
fdiv
lcall
cmpb
xor
outsb
fsubrs
repz
cld
mov
outsl
fdivs
or
push
push
push
adc
cmpsl
dec
ret
dec
lods
in
lea
mov
cmc
pop
pushf
cld
and
lahf
sub
push
xchg
cmp
ret
push
jne
shl
and
pop
xor
xchg
jae
int3
add
mov
dec
cmp
dec
xor
sub
sbb
pop
lods
adc
xchg
or
in
jbe
fimull
or
mov
js
ja
dec
loope
jl
mov
mov
cmp
lret
aaa
dec
inc
sub
test
bound
mov
xchg
xchg
cmp
insb
movswl
pop
sahf
lods
xor
dec
inc
or
mov
mov
das
out
mov
xchg
stos
loop
sarl
adc
dec
sbbb
adc
xor
pop
cmp
mov
mov
mov
xchg
mov
leave
xor
loopne
scas
ds
adc
cmp
mov
je
pop
sub
inc
jnp
push
sub
add
xchg
sbbl
adc
sub
movsl
mov
and
jb
jecxz
inc
add
popf
inc
imul
and
imull
adc
push
sbb
mov
aad
sbbb
ret
pop
and
dec
pop
and
insl
or
out
popf
mov
or
xor
inc
ret
pop
lret
push
negb
cmpsl
inc
xor
fwait
aam
adc
movsl
sub
movsb
or
fbstp
fs
mov
aam
mov
je
lods
clc
rorl
clc
cmp
repz
xchg
mov
mov
and
and
pop
push
cmp
imul
cld
fldl
loopne
jmp
and
or
repnz
cmp
add
adc
dec
rol
repz
mull
nop
fisubs
push
xchg
lods
jae
xchg
aas
xor
cld
push
out
insb
sbb
sub
repz
inc
cmpsl
cmc
sbb
xor
bound
fmull
cld
mov
pop
dec
push
jbe
sahf
ficoml
jo
cmp
xor
inc
dec
mov
movsl
inc
rorb
push
rcrl
fcomps
push
xlat
inc
pop
leave
pop
fildl
in
lret
sarb
xchg
or
push
sbb
and
xlat
scas
je
and
cli
xor
dec
adc
insb
test
cmp
cmp
sbb
pusha
xor
jb
pop
xchg
mov
mov
sbb
fistpll
mov
mov
mov
pop
xor
cmp
fstpl
inc
sbb
sarb
and
repz
lea
out
cli
adc
js
jl
rcrb
incb
jp
adc
inc
jae
data16
loope
shll
adc
xchg
push
xchg
xrelease
cmpsl
fwait
lret
mov
push
mov
movsb
adc
sti
xor
jbe
add
jecxz
movsb
mov
push
cmc
xor
adc
adc
jb
xor
rcll
nop
dec
orb
xchg
insl
mov
outsb
cld
mov
cmp
push
mov
xor
rcrb
xchg
pop
xchg
or
daa
mov
or
jle
lret
adc
add
and
jbe
es
pop
aaa
ficomps
dec
mov
push
addr16
dec
cld
jo
push
and
add
ficomps
lods
cmp
sbb
and
push
jecxz
in
in
int
outsl
add
repz
inc
je
lret
fstps
sub
xlat
and
cli
jmp
scas
inc
loop
pop
mov
in
mov
pushf
test
xchg
lcall
lods
or
sbb
mov
outsl
loop
push
jg
stc
loop
pushl
sub
jge
jl
add
cld
into
mov
lods
push
rolb
cli
inc
jg
bound
mov
rolb
xchg
add
in
jmp
test
popa
mov
xchg
mov
bound
adc
cli
bound
adc
dec
ret
xor
jecxz
sub
cmpb
negl
sbb
icebp
push
mov
mov
xor
mov
xchg
sub
or
or
push
or
lock
xchg
mov
fbld
mov
test
dec
aaa
dec
push
xlat
jne
jle
ret
push
out
fwait
jb
and
xor
push
adc
mov
ja
addl
pop
imull
cmp
outsl
or
test
pop
push
xchg
adc
into
cmp
or
lods
pop
rclb
movsb
sbb
dec
repz
icebp
out
iret
mov
or
nop
mov
xor
push
sbb
std
xchg
sbb
add
pop
pusha
insl
lea
sbb
xchg
cli
negl
or
inc
sbb
out
pop
dec
lcall
inc
shll
xor
jle
aaa
cmp
mov
and
cld
iret
mov
mov
leave
or
xchg
fs
repz
stos
sbb
and
outsb
adc
add
lret
mov
and
xor
pop
mov
lods
aad
loopne
test
pop
add
js
jecxz
cwtl
cmp
test
cmp
mov
push
fs
dec
pop
xor
mov
or
popf
sbb
out
sbb
mov
fcmove
push
xor
out
mov
loop
stos
add
fwait
stos
adc
cld
or
xchg
cmp
push
repz
pop
cmp
and
leave
mov
sub
fsincos
sbb
in
das
add
cwtl
cwtl
mov
lret
mov
mov
andl
cmp
ret
cwtl
ja
mov
aam
mov
inc
movsl
sub
mov
out
add
dec
dec
inc
aad
mov
xlat
inc
sub
sbb
push
enter
xor
dec
repz
inc
lods
sub
xlat
clc
pop
fimull
xor
mov
leave
mov
ds
mov
pop
adc
xchg
fs
xchg
jno
mov
pushf
ja
xchg
dec
add
mov
jl
inc
add
jb
pusha
notb
mov
adc
outsl
je
test
mov
or
push
and
jl
out
push
repnz
or
incb
inc
subb
xchg
mov
mov
fcomps
test
xchg
or
fldenv
cmp
mov
std
roll
lret
dec
pop
fwait
add
rcll
mov
push
stc
test
addr16
jmp
and
and
or
xchg
test
xchg
or
or
rep
cld
sub
and
aaa
sbb
shlb
pop
ja
cmc
sub
adc
push
dec
mov
repz
mov
jns
adc
lds
sub
mov
cltd
fsubr
dec
lea
jl
mov
test
push
insb
rcll
mov
jb
mov
mov
icebp
or
adc
adc
jno
fimull
add
lcall
pop
pop
outsb
aas
pop
mov
pop
push
inc
xchg
adc
pop
cmp
jle
adc
adc
movsl
hlt
push
xchg
cmpsl
sbb
mov
iret
sub
inc
and
pop
es
cmpsl
pop
sbb
add
into
mov
xor
mov
popa
or
lea
test
lock
xchg
out
add
mov
mov
lcall
pop
push
xchg
xor
lea
cmp
mov
les
cmp
shll
xor
sarl
mov
mov
mov
push
inc
loopne
push
cli
ljmp
gs
mov
mov
jno
jp
push
adc
jl
push
mov
cmp
or
out
xchg
js,pn
sti
xchg
gs
mov
xor
ljmp
out
xorb
dec
dec
cld
popa
push
je
jno
ss
and
xchg
cld
jmp
jne
test
push
les
loope
ficoml
mov
lods
cli
pop
loopne
push
outsb
stc
push
ret
mulb
js
push
xorl
imul
xchg
in
ffreep
push
aad
jl
pusha
out
cs
adc
lods
cmp
movsl
adc
mov
xchg
in
push
pop
sahf
add
mov
repnz
addr16
xor
xlat
inc
in
push
popf
cltd
in
filds
cmp
test
fnstenv
lcall
fs
in
and
pushf
test
pop
repnz
push
leave
sub
pop
lcall
add
cmp
stc
rcr
adc
test
pop
jg
out
cltd
push
sbb
test
out
in
shlb
ss
imul
repz
adc
inc
filds
in
mov
dec
jnp
imul
ret
jno
icebp
sub
sbb
and
mov
ss
lods
fwait
cld
pop
xor
or
mov
movsl
in
dec
inc
repnz
pop
xchg
fs
fcoml
lods
mov
sar
xchg
stc
sahf
aam
mov
inc
mov
pop
sub
nop
xchg
ret
out
lret
mov
push
mov
jmp
push
popa
cmp
jl
ljmp
stos
push
push
xchg
xor
dec
out
push
push
push
movsl
or
pop
cmp
fstpt
lock
ljmp
pop
push
dec
sub
mov
fdivrp
adc
jg
lret
fcmovnbe
movsb
inc
or
inc
out
cmc
sbb
fldl
popa
pop
pop
mov
adc
xchg
or
mov
mov
cmp
in
xchg
xor
loopne
push
stos
out
pushf
and
cwtl
jne
pop
push
mov
or
adc
in
lds
cwtl
adc
jecxz
cmp
in
cld
xchg
or
mov
mov
cmpsl
js
aas
mov
jecxz
or
ja
jp
jns
mov
xor
out
mov
xchg
mov
or
aaa
mov
adc
cld
add
and
lock
sub
ds
mov
xchg
cmp
sbb
pop
cld
push
inc
xor
cwtl
push
subb
rcll
shlb
mov
cld
xor
pop
jp
pop
inc
push
loope
popa
cmp
push
cltd
dec
cld
mov
aas
and
adc
inc
inc
les
cmp
out
dec
or
mov
cmp
xchg
xor
push
bnd
cmp
and
lret
into
adc
std
andb
inc
add
xchg
movsb
mov
mov
cmp
mov
inc
and
rcll
pop
mov
mov
adc
clc
daa
test
movsb
jl
cltd
cmpsl
in
call
mov
aaa
jo
mov
mov
adc
jno
out
inc
pusha
cmp
adc
jae
inc
fisubrs
fstpt
cld
fadd
dec
lods
repnz
arpl
scas
icebp
mov
dec
shrl
repz
adc
xchg
mov
lods
fadds
fwait
pusha
sbb
or
rorl
mov
lds
jbe
xorl
sub
add
or
xchg
movb
sbb
in
xor
loope
lock
fisttpl
jecxz
iret
mov
shl
pop
xchg
loope
mov
jge
jo
and
cld
or
sbb
inc
or
mov
cmpsb
cmp
loope
xchg
sbb
fsubrs
out
std
push
popa
aaa
adc
sbb
shl
rorb
sbb
or
sub
out
mov
jecxz
inc
sbbl
mov
cld
insl
inc
lock
cltd
sub
cmpsl
fsubrs
test
ret
lret
stc
daa
cmp
imul
es
out
pushf
and
adc
fs
icebp
mov
hlt
pop
adcb
daa
out
pop
addb
or
add
sub
xor
incb
int
sbb
popa
dec
sbb
test
aaa
fwait
sbb
aas
ds
push
movsb
mov
mov
shll
inc
pop
fldcw
lods
dec
lea
xor
or
or
in
sbb
and
fdivp
call
mov
cld
ss
add
inc
xor
movsb
jl
push
cmc
imul
and
pop
fmuls
test
out
mov
and
xor
mov
pop
std
jo
add
mov
fists
icebp
xchg
pop
xchg
and
jle
push
lret
add
xchg
xchg
outsl
scas
sbb
inc
repz
inc
in
dec
scas
xchg
mov
lahf
push
dec
dec
fwait
mov
aaa
or
xor
sbb
aam
sbb
movsl
cld
inc
hlt
pop
adc
movlps
inc
fsubs
std
or
scas
cmp
sbb
adc
mov
mov
hlt
aad
mov
outsb
lahf
xchg
push
fadds
cmp
adc
pop
loopne
xchg
dec
out
sarl
and
push
fwait
pop
jne
pop
and
cli
and
popf
popf
push
push
clc
gs
orb
movsl
cmp
sub
push
xchg
xchg
mov
test
push
pop
xor
stos
mov
mov
add
xchg
xchg
lea
xchg
adcl
jo
jne
push
adc
xchg
dec
out
and
fimull
loopne
daa
fsubl
or
adc
xchg
or
mov
test
sbb
inc
jb
dec
xor
push
aas
or
add
test
or
mov
add
lret
sbb
mov
mov
push
xchg
sbb
sar
incl
dec
inc
xchg
xor
fistl
addr16
push
aam
adc
cmpsl
add
xchg
pushf
cwtl
ljmp
and
cmp
jbe
repz
xchg
xchg
popf
pop
cmp
jge
stos
sti
xchg
lods
fistpl
push
mov
push
cmp
mov
sbb
cmc
push
andl
cmp
jnp
mov
cmp
sti
inc
or
jecxz
xchg
sbb
xchg
stos
movsl
pop
xor
and
iret
pop
mov
sub
pop
inc
mov
mov
rclb
mov
adcl
jl
xchg
pop
fistl
mov
pop
push
mov
scas
cmp
mov
adc
sbb
lds
sub
pusha
dec
fdiv
sub
and
push
aas
repz
xchg
inc
andl
int
mov
xchg
js
dec
push
add
xchg
adc
test
jno
or
xor
insb
xor
mov
out
or
add
lock
inc
and
or
mov
cli
or
rcll
repz
fldenv
inc
or
pop
pop
xor
inc
sbb
mov
adc
add
fstps
and
sub
sub
shr
sahf
repz
inc
sbbl
ret
sbb
shrb
xor
xor
cs
es
sbb
fabs
and
cli
inc
or
arpl
dec
lods
inc
mov
lahf
dec
and
mov
mov
xor
jae
xchg
into
cltd
jae
sbbl
xor
cmpsl
mov
leave
dec
push
cmp
sbbb
mov
jnp
movsb
and
pop
sbb
xlat
out
pop
ret
mov
in
jl
jae
dec
cld
jne
xchg
out
mov
pusha
mov
cld
push
fs
call
jae
stos
lcall
cmp
adc
mov
fcmovu
push
push
fsubrl
std
push
into
sbb
push
sub
cmp
stos
dec
or
js
pusha
inc
xchg
pusha
and
inc
les
sub
mov
fst
imul
mov
ja
xor
inc
inc
xchg
cmpsl
sbb
jno
dec
imul
xor
sbb
dec
addl
xchg
adc
pop
in
daa
aaa
sub
jmp
cs
or
xchg
sbb
cld
push
xchg
cmp
xchg
jns
test
mov
push
ror
test
xchg
jl
arpl
nop
fwait
out
ret
or
xor
push
xchg
cmpsb
outsb
inc
or
mov
int3
shl
out
push
jle
stc
xor
dec
xchg
mov
in
xor
cmpsb
mov
in
cmpsb
ljmp
or
mov
mov
xor
fcoml
fsts
les
mov
cld
arpl
ljmp
sbb
mov
sbb
or
notb
leave
fimuls
xchg
andl
xchg
mov
mov
int3
pop
mov
xchg
push
pop
adc
pusha
pop
inc
test
sbb
jge
push
xchg
cmpsl
mov
mov
jl
sub
adc
mov
add
out
mov
fcoml
int
push
push
inc
ljmp
out
mov
icebp
inc
adc
pop
fnstsw
decl
and
cld
jl
js
and
xlat
adc
std
iret
loopne
or
or
push
cmp
repnz
neg
add
and
push
dec
rclb
xor
or
int3
inc
aaa
xchg
in
jno
nop
out
sub
hlt
outsl
and
int
leave
mov
mov
lods
add
ja
or
jnp
sub
and
xchg
mov
lods
ljmp
dec
pop
cld
mov
aaa
mov
outsb
sub
leave
lods
pop
sbb
xchg
cmp
inc
xchg
scas
or
mov
jmp
xor
and
ret
inc
sbb
mov
mov
ds
dec
mov
out
outsb
push
jecxz
es
jl
js
outsb
repz
test
mov
sub
jbe
in
xchg
jb
adc
inc
movsb
cwtl
test
repz
push
add
lret
mov
pop
and
scas
loope
movsl
mov
pop
sub
lods
es
outsl
pop
jno
push
in
xor
fwait
aas
into
sub
push
or
lcall
fcmovb
push
into
or
mov
dec
aas
imul
dec
in
dec
call
sub
sarb
insb
pop
mov
cli
ret
repz
popf
aam
lods
dec
je
mov
sbbb
xchg
jns
push
sahf
push
cld
out
push
inc
xchg
xor
cmpsb
mov
or
out
out
or
aas
pop
stos
mov
cmp
jmp
cli
jns
lret
jmp
xchg
jl
call
dec
rcr
test
jl
movsl
imul
xchg
adc
les
lret
dec
int3
pop
xor
and
sbb
repz
mov
icebp
mov
stos
std
mov
jo
pop
mov
add
aad
mov
dec
fdiv
pop
loopne
jnp
jl
ret
cmpb
add
cld
mov
adc
fimull
popf
clc
sbb
mov
jl
mov
cmp
mov
test
mov
repz
dec
cld
fwait
push
aam
mov
mov
and
push
xchg
jmp
lods
rorl
in
dec
xor
pop
cwtl
xor
bound
inc
mov
packssdw
sbb
cmp
jmp
inc
in
cwtl
cld
int
testb
jl
rcrl
adc
mov
push
xor
push
inc
adc
adc
jl
xchg
mov
je
push
pushf
jl
mov
repnz
xor
in
bound
or
lods
inc
xor
cmp
inc
or
loop
repz
pop
rcrl
and
adc
and
repnz
mov
aas
mov
and
xchg
out
sub
cs
dec
fmulp
push
xorb
or
sbb
repz
mov
mov
xchg
dec
pop
rol
addb
testb
cmc
cmp
push
call
pop
inc
adc
pop
sub
fcmovnu
repz
jb
popa
bound
aaa
dec
fbstp
xchg
ret
outsb
dec
lds
pop
mov
pop
sbb
in
sbb
fidivrs
sub
fnstenv
ljmp
jae
push
aam
inc
add
orl
mov
pop
call
icebp
sbb
mov
repnz
jg
cmp
pop
fcmovb
or
aas
jg
fdivr
cmp
shrl
mov
pop
xor
cmp
movsl
sub
sub
pop
inc
fs
jl
cli
sub
loopne
dec
cmp
and
rclb
cmp
cmp
cld
data16
gs
jne
adc
fstp
sbb
shlb
jnp
fldt
aas
adc
cmp
or
les
add
inc
les
jbe
dec
xor
sub
push
dec
or
lea
adc
xor
dec
dec
push
xchg
or
cmp
cmp
scas
jb
dec
pop
in
out
mov
adc
pop
mov
push
pop
andl
fpatan
cmp
mov
test
unpcklps
xchg
lcall
aam
jb
ficoms
out
filds
dec
addb
rolb
dec
test
dec
adc
imul
mov
lds
cli
cld
icebp
andl
neg
imul
scas
jmp
outsl
cmpsl
adc
subb
fcoml
dec
js
pop
push
out
jl
ret
mov
inc
push
push
mov
pop
mov
xlat
push
jno
stc
les
xorl
scas
cmp
mov
jae
gs
cmpsb
or
mov
xchg
inc
shll
loopne
test
test
jp
sub
adc
mov
lcall
jmp
sarl
add
inc
add
fcmovu
iret
fisttps
pop
lea
mov
dec
sarb
clc
or
cmp
dec
xchg
push
xor
lcall
adc
imul
addr16
out
pop
into
packuswb
sbb
xchg
jno
push
dec
rcrb
and
pop
jmp
lods
or
daa
pop
mov
cmpsl
cwtl
sub
pusha
jno
adc
ljmp
scas
jecxz
pop
in
sub
dec
fidivrl
xchg
xchg
push
and
aaa
into
ja
add
lret
movsl
fdivrl
dec
fcoms
cmp
cmc
orb
push
pop
pop
cwtl
pop
push
mov
push
sub
fbstp
mov
cmpsl
mov
pushf
push
in
xchg
push
and
pop
adc
repz
loope
pop
jae
jmp
call
sbb
push
jle
lcall
jl
fidivrs
inc
push
inc
lds
mov
pop
or
popf
cltd
sbb
sbb
out
ds
lahf
in
dec
pusha
in
xchg
cmp
out
mov
lea
rcr
clc
xchg
xor
jae
scas
or
and
fs
xchg
jno
and
pop
cmp
sbb
scas
xchg
icebp
cmp
and
cld
aas
loope
leave
mov
jb
inc
out
aas
pusha
enter
pop
inc
repz
inc
outsb
mov
aam
scas
test
ds
cmpsl
mov
xchg
out
push
inc
or
xchg
sbb
mov
xor
scas
add
adc
or
pop
adc
sar
push
bound
lods
cmp
mov
sub
xchg
lods
in
clc
out
adc
test
in
lret
jl
sti
pop
push
popa
aam
ja
pop
fs
das
cwtl
repz
lahf
movsl
sbb
dec
repz
xchg
orl
dec
cmp
pop
mov
cmp
movsl
sbb
inc
dec
adc
dec
rolb
pop
xor
sub
or
mov
les
push
dec
sbb
mov
add
nop
ret
outsl
add
rorl
dec
adc
push
pop
and
or
adc
pop
xor
xor
sbb
push
mov
cmpsb
mov
push
cs
xor
xchg
mov
sub
xorb
mov
sbb
xor
cwtl
popa
mov
mov
jmp
mov
pop
xor
xchg
cli
inc
adc
into
dec
jno
movsb
dec
aas
or
hlt
cld
mov
cld
pusha
lods
fmull
pushf
lret
or
cld
xchg
xor
ret
jecxz
add
rep
and
aad
inc
enter
into
inc
daa
xlat
xchg
in
call
in
dec
pop
arpl
fisttps
out
sahf
mov
cmp
xchg
adc
movsb
loopne
push
out
pop
push
je
jae
nop
shrb
dec
outsb
and
xchg
cld
xchg
inc
pop
insb
es
jne
fsub
lret
pop
outsl
scas
mov
mov
fcoms
aam
repz
test
push
test
jo
pop
cmpsb
lea
aam
fwait
in
jl
push
dec
mov
rcrl
repz
js
jp
xlat
gs
loope
fs
cld
push
and
fsubrs
cli
or
loope
cmp
ret
repz
mov
pushf
xor
mov
fsubp
mov
mov
mov
aas
stc
sub
mov
jmp
push
pop
adc
jmp
repz
shlb
xchg
xchg
mov
inc
add
and
das
das
hlt
adc
mov
pop
adc
cmc
sub
cld
jmp
pop
aad
and
stos
sbb
repnz
jnp
in
jb
jo
fmuls
aam
xor
test
and
fbld
sub
lock
repz
xor
mov
or
xor
jo
push
sub
mov
ljmp
dec
mov
mov
dec
sub
js
xchg
repz
ret
inc
lret
repz
xchg
ss
mov
pop
pop
pop
ret
pop
jno
pop
mov
and
adc
cld
push
cli
sub
lock
fsubs
lods
jge
mov
js
cmpsl
out
adc
xchg
sbb
cltd
sbb
adc
mov
cltd
adc
xchg
fstl
in
or
dec
leave
mov
sbb
or
xor
dec
lahf
push
enter
jae
push
adc
xor
sbb
test
out
cs
xchg
test
sbb
movsl
xor
jge
aam
inc
adc
pop
adc
lahf
inc
or
cmc
xchg
les
test
stos
data16
and
jns
stos
fstpt
test
adc
fwait
dec
or
xlat
jge
cmp
test
sbb
sbb
xchg
mov
cmc
lds
mov
repz
cld
xchg
lods
loop
insl
clc
sbbb
xchg
or
lods
mov
pop
pop
mov
aaa
mov
xor
in
hlt
lahf
jb
nop
xor
aas
lret
fiaddl
movsl
jbe
push
movsl
fcomp
mov
xchg
aas
push
mov
ficompl
stos
aad
xor
movsb
stos
pop
les
jge
hlt
inc
sbb
cmp
sti
out
in
push
aaa
scas
sub
cmpsl
push
xor
popa
ds
test
add
jl
cmp
dec
mov
hlt
push
jbe
add
adc
pop
mov
mov
jecxz
shll
inc
push
movsb
jecxz
adc
ds
mov
push
push
sub
adc
mov
mov
out
cmp
cmp
jno
push
sbb
push
xor
mov
adc
push
popa
pop
outsb
adc
cwtl
jl
push
fs
je
lods
sbb
dec
nop
stos
ja
test
push
cmpl
out
std
pop
push
scas
push
dec
inc
test
lods
add
jg
jl
mov
lods
push
enter
sbb
inc
dec
clc
cmp
out
mov
sbb
or
and
mov
out
sub
fbstp
andl
pop
rep
sti
jge
lret
mov
mov
dec
mov
xor
lcall
fs
or
jl
pop
adc
jecxz
lcall
jmp
lcall
sub
rcrl
sbb
push
xchg
xchg
mov
mov
push
enter
pop
cld
cmc
sbb
stos
pop
sbbb
cld
rcr
lahf
push
cmc
mov
out
int
in
and
notl
sbb
inc
movsl
jp
jno
enter
shll
loop
jecxz
jl
pop
lds
dec
pop
movsl
gs
adc
fiadds
call
aas
sbb
test
mov
or
add
ss
or
push
lcall
lret
cmp
pusha
mov
cmpsb
leave
mov
mov
cwtl
clc
sbb
mov
outsl
adc
repz
negl
jbe
mov
scas
fistps
mov
xchg
or
lods
mov
add
movsb
adc
and
jl
ds
xchg
aas
dec
decb
mov
jl
mov
pop
inc
fimuls
inc
jb
cld
inc
ja
sbb
inc
popa
aaa
inc
clc
pop
jl
xor
inc
push
cmpsl
scas
test
or
stos
mov
aas
or
sbb
inc
mov
repz
pushf
int3
mov
lods
xor
repz
push
jp
xchg
in
add
dec
cmp
pop
movsl
jae
adc
outsb
jecxz
xchg
mov
lds
out
mov
jno
dec
lea
adc
outsl
jmp
sbbl
xor
xor
cmp
mov
mov
test
inc
mov
mov
or
or
mov
out
pop
mov
or
sub
xor
inc
movsl
fiaddl
je
sahf
shl
dec
shl
cld
mov
loop
sub
sbb
xor
aas
push
mov
inc
xchg
aaa
lret
gs
cmp
dec
arpl
sub
jns
paddb
aaa
xor
xchg
aam
jb
push
icebp
test
orb
int3
push
inc
fistps
fisubl
jo
and
xor
loope
nop
inc
js
mov
pop
push
cld
rol
mov
repz
in
mov
or
jne
xor
inc
call
xchg
push
jno
jmp
adc
and
adc
in
mov
lahf
fiadds
jg,pt
in
je
lret
jo
xchg
mov
mov
pushf
subb
je
jl
and
pop
inc
lds
mov
mov
into
sbb
fcom
jge
mov
pop
cmpsl
subb
or
mov
adc
rcrl
insl
mov
lods
in
loope
movsl
fmull
setae
jae
cmpsb
orps
pop
mov
sbb
bound
test
mov
repz
int
sbb
cmc
aas
fstl
inc
js
inc
sbb
jecxz
sbb
dec
fadds
cmp
dec
jmp
repz
jb
sbb
mov
stc
mov
out
and
pop
iret
fists
or
jl
aas
loopne
mov
cmp
mov
aad
add
inc
xchg
or
cld
adc
push
push
push
repnz
pop
stos
mov
sub
out
repz
movsb
cmp
lods
test
mov
jns
dec
push
imul
sahf
push
ret
cld
scas
fwait
ror
inc
jb
outsb
dec
xchg
and
mov
aaa
stos
or
in
inc
fcompl
lods
movsb
sub
cmp
push
xchg
push
pop
shrl
cmp
ss
dec
nop
inc
iret
pop
repz
adc
cmp
loop
ja
push
adc
mov
xchg
ss
xor
and
pop
mov
cmp
out
lahf
mov
pop
xlat
pushf
ss
cltd
movsl
mov
push
lods
push
lcall
std
adc
jl
push
push
mov
hlt
push
lea
std
xor
sbb
aas
push
fmull
jg
inc
data16
in
sbb
outsb
lock
nop
push
pop
push
xchg
xor
sbb
gs
mov
dec
and
aam
aaa
add
cwtl
and
filds
mov
xchg
push
push
out
lea
and
cmpsb
mov
jge
push
push
sbb
push
inc
cmp
jae
lods
pop
fs
jl
sbb
mov
into
dec
adc
mov
test
pop
out
aam
inc
jo
mov
stos
cmp
inc
xchg
jbe
push
add
mull
leave
dec
mov
movsb
or
pop
xor
in
repnz
repnz
cmp
jl
out
cld
sbb
xchg
mov
mov
popf
xchg
cmpl
pushf
sub
in
mov
test
mov
outsl
and
mov
mov
pop
cmp
push
dec
fldt
mov
out
or
std
xchg
gs
push
dec
out
in
addr16
adc
mov
jbe
loopne
push
rcr
lret
mov
cltd
xchg
and
mov
pusha
push
and
mov
jg
ds
out
shrl
adc
pushf
out
push
iret
adc
sub
pop
mov
fwait
subb
push
pop
push
das
es
pop
mov
mov
mov
insb
clc
ds
mov
lahf
decb
loop
pop
pusha
or
ret
sub
fistps
rorl
inc
push
cmp
dec
ss
push
fidivl
mov
add
fwait
add
pop
mov
push
inc
xchg
pushf
jo
dec
jo
mov
mov
dec
sbb
int3
xchg
loope
mov
sbb
xor
movsb
scas
std
cld
add
adc
push
dec
jle
add
sub
add
ds
mov
mov
xor
in
pop
mov
lods
test
sub
aaa
testl
dec
mov
shll
cmp
out
cltd
es
aad
cmp
fmul
pop
scas
movsl
icebp
add
cmp
shrl
mov
sbb
xchg
mov
push
outsl
aaa
mul
fsubrl
cmp
enter
mov
sbb
inc
imul
xchg
pop
push
int
scas
lds
fsubs
aam
insl
adc
stos
push
dec
les
sbb
mov
fimuls
nop
fwait
xchg
dec
push
sbb
cmp
push
mov
mov
test
flds
aas
push
cmp
fisttpl
adc
js
sbb
and
js
in
repz
pop
cli
movsl
ljmp
mov
adcl
lcall
call
and
xor
xchg
imul
or
mov
mov
dec
inc
jo
inc
xchg
fsubrl
push
cld
mov
movsl
cmp
xchg
sub
aaa
adc
outsb
cmp
cmpb
or
fisubs
cmc
jne
push
mov
popa
mov
xchg
hlt
xorl
dec
cmpsb
ja
rorb
sbb
dec
cmp
fcomps
leave
mov
push
lahf
inc
insl
fcoml
or
adc
and
insl
mov
xorb
cmpsl
mov
xchg
mov
lcall
jle
jbe
popa
push
lods
push
cmp
mov
lret
add
pushf
push
cwtl
dec
mov
and
iret
loopne
sbb
inc
dec
in
jle
loope
inc
adc
out
int
pushf
pop
and
movsl
xchg
test
pop
xchg
ss
dec
push
sti
jb
xor
push
push
in
lods
sub
imul
faddl
ret
inc
jae
xor
mov
jecxz
fwait
mov
or
push
andb
and
push
inc
cmp
add
sub
fsub
mov
in
xchg
and
jno
mov
shl
dec
dec
mov
fucomp
dec
sbb
xchg
mov
into
leave
jo
sbb
fldt
ljmp
pop
cwtl
pushf
xchg
mov
push
int
pop
test
aaa
push
adc
adc
mov
aas
mov
push
push
inc
std
daa
push
daa
push
and
push
fcoms
ds
arpl
lcall
mov
jns
dec
cmp
push
xchg
in
adc
jp
out
testl
dec
repz
cmp
imul
rcl
xchg
lret
test
xchg
inc
add
subb
filds
jg
cmp
sbb
into
inc
scas
stos
or
mov
pushl
out
sbbl
rorb
jb
ficompl
mov
xchg
xor
jg
lock
lret
cmp
fwait
pusha
loop
xchg
lods
daa
mov
not
jle
jl
je
push
repz
jno
inc
sbb
inc
xchg
xor
nop
je
mov
bound
sub
iret
cld
push
lret
rol
xchg
in
out
cmp
adc
lret
clc
fiadds
lods
mov
and
mov
sbb
pop
mov
xchg
fdiv
inc
push
dec
sbb
repz
std
ds
test
ret
mov
inc
adc
jnp
ljmp
adc
cmp
push
sbb
pop
fiaddl
xchg
dec
popa
sbb
pop
cmpb
push
pop
mov
xchg
imul
xchg
jge
mov
into
mov
adc
sbb
jbe
push
inc
inc
iret
mov
cmp
add
jbe
xchg
mov
in
add
mov
jl
sbb
pop
pop
add
xor
push
ret
xor
addl
xchg
mov
pop
xchg
inc
sbb
andb
cwtl
cmovg
and
pop
push
repz
push
add
aaa
ds
xlat
add
inc
js
and
jl
dec
out
lea
sbb
jecxz
pop
push
inc
scas
jle
pop
lahf
aad
add
lods
cs
sub
jae
test
out
mov
sub
cmp
aas
ss
mov
cld
inc
loopne
bound
daa
push
jg
xor
xor
cld
push
add
cmp
cwtl
stos
jl
pop
in
add
inc
or
mov
icebp
mov
inc
dec
test
enter
adc
in
sub
cmp
or
add
in
lahf
gs
js
sbb
sbb
jae
add
movswl
movsb
and
adc
fcmovnbe
adc
movsb
lods
jecxz
pop
test
jl
or
jmp
push
adc
xor
outsl
andl
push
repz
lea
sahf
inc
pop
xchg
or
jo
cmp
movsl
or
in
xor
mov
adc
xchg
xchg
in
lea
mov
fisttpl
and
jae
lahf
pop
orb
xchg
xchg
shlb
mov
cld
lods
stos
cli
mov
fst
xor
in
jl
push
test
xor
mov
addr16
repnz
movsb
mov
mov
cmp
add
dec
mov
fcoml
sbb
lret
out
xchg
jno
adc
in
mov
push
jne
dec
sub
dec
out
xor
pop
sbb
repz
pop
leave
aas
pop
push
lret
ret
loopne
repz
xchg
mov
add
imul
xchg
dec
scas
cmpsl
add
inc
and
push
mov
sbb
insl
testb
push
mov
inc
mov
stos
jle
daa
xchg
lcall
pop
cwtl
cltd
aam
push
in
jge
cmpsb
xchg
cmp
cmpsl
sahf
das
cmp
jecxz
cmp
jge
adc
mov
stc
bound
loope
out
lret
in
mov
xchg
xchg
and
or
inc
mov
inc
shl
inc
xchg
sbb
adc
mov
cmp
or
jl
outsl
push
fwait
test
stos
or
or
mov
loopne
inc
lds
cwtl
into
jecxz
shlb
sub
dec
mov
and
lret
xor
cwtl
jecxz
sub
in
fs
adc
cld
out
push
les
mov
xchg
ret
jns
cltd
pop
aad
or
push
fildll
xchg
into
fidivl
dec
dec
fcomps
xchg
dec
jp
pop
mov
gs
sub
or
aas
inc
subl
dec
sub
pusha
ss
sbb
rcrb
sub
sbb
add
cmpsl
xor
lods
push
cwtl
pop
sbbl
xor
cmp
fwait
rorb
sbb
jmp
cld
xchg
inc
cs
popa
push
fsubrl
add
hlt
jl
add
or
lock
dec
fimull
jge
add
subl
xchg
push
mul
xchg
mov
fs
rolb
scas
adc
mov
sbb
xchg
lds
popf
movsl
std
sti
cmpsb
or
fimull
test
into
repnz
scas
cld
ds
popf
dec
dec
rolb
popf
aaa
aad
rcrb
or
sbb
in
sbb
dec
pop
ds
jns
push
jo
popa
loop
bound
add
stos
mov
stos
or
push
cmpsb
ret
jns
xchg
test
pop
repz
es
cmp
cltd
push
inc
pop
jge
sub
imul
fnstsw
adc
xchg
repnz
and
inc
insl
add
adc
lahf
pushf
sbb
ss
and
mov
jl
or
movsb
xchg
scas
xchg
lea
sahf
xchg
mov
add
jo
adc
cmpsb
adc
mov
repz
jl
aam
mov
jne
mov
adc
scas
fsubrs
pop
das
movsl
push
movsb
xor
push
outsl
cld
test
cmp
mov
leave
jl
or
lds
mov
mov
repz
cwtl
sarl
xchg
pop
dec
ds
and
mov
jo
adc
push
jns
cs
mov
push
cld
jecxz
insb
js
xor
mov
ficoms
push
mov
negb
lahf
add
outsb
test
loope
jl
sub
mov
or
repnz
xor
aam
or
jp
dec
popa
fsubrs
pop
mov
mov
xorb
fsubrs
notl
out
arpl
adc
sbb
iret
pop
cmp
add
push
pop
arpl
cmpl
adc
je
inc
lods
nopl
xchg
loopne
xor
movsl
clc
dec
scas
cmp
scas
lahf
and
xchg
hlt
xor
sbb
inc
hlt
mov
dec
cmc
mov
mov
xchg
repz
cmp
or
loopne
jno
sbb
inc
icebp
adc
inc
test
nop
dec
mov
push
jmp
add
pop
jl
ljmp
ss
mov
sbb
xchg
lea
outsl
xor
stc
in
test
adc
addb
jecxz
popf
push
mov
add
shrd
lret
in
inc
cmpsb
and
lods
push
mov
push
xor
sbb
mov
inc
repnz
fs
adc
addb
ret
pop
push
mov
repz
jnp
xchg
or
mov
es
rclb
pop
scas
mov
xchg
js
xlat
push
lcall
out
xor
inc
mov
jmp
cwtl
repz
sbb
push
mov
adc
xchg
outsl
mov
sbb
jno
mov
xchg
ret
mov
lods
inc
lea
insb
fadd
xor
xor
and
mov
pop
sub
movsb
cmpsl
mov
sbb
shr
gs
jg
pop
fdiv
push
xchg
mov
mov
iret
mov
push
mov
pop
dec
mov
fdiv
sbb
xchg
pusha
pop
adc
jns
push
cmpsl
sub
inc
mov
fldcw
xchg
adc
repz
mov
ja
cs
mov
mov
lds
xorb
pmaxub
xor
xorl
or
dec
push
xchg
adc
out
sbb
xor
pop
mov
imul
or
in
sarb
or
mov
inc
mov
sbb
xor
imul
movsb
mov
sbb
dec
repz
outsl
xor
mov
cli
jg
jl
icebp
fcomip
movsl
fdivrl
add
sar
fwait
cmpsb
jecxz
ror
lret
into
aas
shlb
pminub
adc
out
fsubrl
imul
add
mov
xchg
and
xchg
outsb
outsb
and
xor
sub
lea
rclb
push
clc
jg
rorb
sarl
add
inc
push
shrb
in
mov
ds
mov
daa
movsb
loop
dec
jnp
hlt
fstpt
mov
pop
cwtl
mov
repnz
inc
bound
add
mov
lret
pushf
push
fildl
and
cld
imul
mov
pop
xchg
cmp
jne
mov
je
jae
lret
jle
out
cmp
cmp
mov
or
shrb
push
test
pop
mov
adc
fistpll
or
sbb
call
mov
std
or
jb
cmpsl
fwait
xchg
adc
or
add
lods
push
movsb
in
and
xor
das
in
dec
ss
dec
push
dec
pop
mov
jl
or
das
in
clc
sbb
mov
xchg
push
dec
push
rorl
pop
cmp
xor
pop
into
scas
dec
pushf
insl
mov
jne
sub
pop
iret
jl
add
push
test
add
cmp
pop
ljmp
xor
mov
mov
adc
pushf
pop
ret
jl
stos
push
add
mov
and
mov
es
into
push
test
adc
loope
inc
mov
mov
dec
xchg
push
mov
or
dec
pop
mov
xor
or
jmp
mov
ss
inc
push
push
pusha
lret
sbb
xchg
loope
sbb
rcrb
sbb
adc
xchg
jb
xchg
insl
and
cmp
leave
or
adc
pop
imul
cmp
movsb
cmp
xchg
sub
mov
add
push
sbb
sbb
mov
push
xchg
cmp
clc
push
mov
aaa
pop
call
or
sbb
decb
pop
scas
ficomps
jmp
sub
adc
in
pusha
cmpsb
imulb
call
sahf
jno
leave
stos
inc
and
mov
mov
adc
mov
push
es
push
dec
inc
dec
fistps
movsl
rcl
mov
pop
push
mov
sbb
xchg
mov
loop
mov
sbb
stos
aad
stc
xor
int3
mov
fistpl
fcompl
in
xchg
subl
inc
cld
dec
mov
lahf
mov
mov
sbb
xchg
inc
lods
mov
jne
or
jl
frstor
pop
popa
adc
inc
movsl
lods
korw
mov
dec
sbb
pop
pop
adc
sbb
test
xchg
movsb
dec
and
iret
pop
mov
in
ret
or
sub
cmp
inc
mov
clc
shlb
fistl
ret
pusha
jmp
xchg
or
xor
add
cld
ja
leave
push
shl
add
out
adc
mov
aaa
push
fcom
aaa
cld
push
in
dec
jl
mov
movsb
push
scas
fisttpl
jle
rorb
xor
push
rcrb
sub
loopne
xor
adc
and
push
push
jbe
fld
xchg
xchg
mov
jnp
bound
mov
rolb
add
xor
xor
inc
dec
and
test
xchg
fldl
outsb
inc
subl
mov
lods
xchg
lcall
mov
and
adc
sub
adc
mov
jnp
mov
add
cmc
je
scas
stos
mov
sub
roll
movsl
lea
mov
lret
dec
sub
and
jge
cs
rcll
repz
std
jl
and
addr16
daa
xchg
mov
in
push
int3
cwtl
mov
dec
mov
sbb
jg
cmp
sub
scas
lods
xor
push
push
je
jo
push
lret
lds
out
andb
mov
xor
pop
xor
stos
movsb
into
pop
test
sbb
lcall
mov
jl
roll
clc
insb
sbb
and
xchg
jnp
adcl
xor
dec
or
or
mov
or
sbb
sbb
and
sbb
mov
stos
add
in
and
test
btl
lcall
xor
cld
pop
out
add
fsubs
mov
adc
pop
pop
push
daa
mov
cmp
mov
inc
sar
sti
dec
jb
push
out
or
adc
ja
loopne
xlat
fcmovne
cld
daa
inc
xlat
and
cmpsb
pop
rcrb
cmc
cmp
dec
out
mov
cli
or
jae
sbb
cli
pop
aaa
xlat
pop
lahf
sbb
cmpsl
mov
sbb
or
andb
test
daa
and
add
test
sbb
pop
push
jl
pushf
jg
subb
inc
out
lret
mov
sbb
or
add
fs
push
xlat
mov
push
xor
cltd
mov
cmpsl
pop
jae
arpl
sub
cmpsl
pop
xor
out
popf
jnp
inc
cmp
mov
lds
sarb
addb
fs
fistpll
fldt
gs
xorb
xor
jbe
mov
push
loope
aad
loop
xor
push
xchg
and
mov
jle
mov
aaa
xchg
pop
xor
aas
je
jecxz
sbb
xchg
fwait
scas
xchg
ljmp
xchg
inc
push
adc
pop
cmpl
mov
sbb
inc
gs
dec
repz
xchg
into
subl
jne
add
sbb
mov
pop
ss
sahf
in
subb
adc
dec
daa
rolb
rclb
jo
jecxz
fsubl
xchg
orl
lcall
inc
jecxz,pt
inc
and
mov
repz
rorl
lret
lret
inc
cwtl
cld
sub
sub
jl,pt
sbb
mov
or
shrb
int
mov
js
xchg
cmp
mov
mov
movsl
xchg
inc
ret
xchg
adc
cmp
fstl
daa
rol
nop
stos
jecxz
divl
jb
imul
inc
dec
dec
repz
cmp
adc
or
mov
mov
xchg
mov
or
loop
xchg
xchg
mov
jl
or
outsl
rcrb
test
push
lcall
fmull
repz
mov
adc
push
gs
fs
outsl
pop
into
pop
push
cld
and
xor
sbb
jnp
and
cld
inc
or
dec
stos
or
fistl
sub
xchg
aad
add
jle
push
jnp
insb
mov
cld
add
and
popf
outsl
dec
aaa
hlt
mov
aas
pushf
cld
adc
inc
pop
xchg
repz
sbb
in
xchg
jecxz
repz
sbb
addb
dec
push
test
cld
mov
add
push
xchg
daa
fwait
cltd
cmp
insl
gs
or
push
jno
adc
mov
pop
les
inc
dec
pop
rol
insb
in
movsb
jns
adc
xchg
adc
lcall
fwait
mov
mov
xlat
push
sbb
and
leave
inc
mov
in
push
gs
in
or
jmp
in
and
jge
xchg
test
call
xor
push
pop
xchg
mov
pop
je
adc
lret
xor
hlt
rcrb
mov
je
aaa
int
inc
pop
jecxz
dec
push
adc
and
jno
cmpsl
aam
adc
adc
inc
in
mov
push
ficoml
sub
jl
fcom
mov
pop
pop
xchg
xchg
lock
movsl
ret
arpl
adcb
mov
xchg
repz
mov
xchg
loopne
dec
sbb
sahf
fisubrl
inc
testb
or
scas
jl
mov
pop
jnp
fstpt
das
loopne
fmul
out
lods
bound
mov
adc
push
pop
rcrb
lea
mov
xor
cmp
scas
lcall
into
dec
std
mov
enter
rorl
lret
xchg
loop
cmc
cmp
pop
repnz
dec
push
js
or
subl
rcrl
daa
stc
adc
or
or
bndldx
test
fistps
sub
icebp
jno
aad
jbe
dec
xor
jl
stos
pop
negb
out
aam
xchg
in
mull
mov
lods
add
repnz
mov
lea
jmp
adc
lret
lea
pop
or
sbb
push
lods
mov
jmp
sbb
adc
jb
pop
movsl
xor
or
repz
cli
or
imul
dec
xchg
or
ljmp
cmpsl
xchg
xor
cli
lahf
fs
into
mov
das
push
inc
inc
inc
and
and
loop
xor
and
push
roll
jl
adc
cltd
add
repz
mov
cld
mov
sbb
cmp
cmp
out
out
xchg
dec
rolb
mov
les
fs
jg
jge
lret
sbb
filds
add
adc
iret
stc
movsb
in
xchg
mov
test
test
cld
jmp
push
or
ret
cmovle
inc
or
cmp
add
fs
bsr
test
pop
pop
jle
and
ja
push
ss
inc
push
fwait
idiv
cli
pop
cmpsb
add
push
fs
add
lcall
push
pop
dec
stc
cwtl
out
mov
jnp
xchg
cs
or
imul
loope
and
inc
out
inc
dec
push
and
or
dec
jp
adc
xchg
mov
popf
lods
jno
nop
pusha
cld
inc
fnstenv
sbb
mov
dec
and
inc
test
pop
xchg
cwtl
inc
int
sub
fsubs
add
sbb
incl
mov
mov
test
xor
sbb
stos
xchg
and
push
enter
jl
mov
js
ret
adc
sub
push
addr16
icebp
pop
adc
outsb
push
iret
nop
cmp
in
and
out
xchg
xchg
pusha
jne
pcmpgtb
and
mov
and
mov
ljmp
pushf
mov
push
and
rcll
jecxz
cmp
fstpl
hlt
out
sti
cmp
pop
xor
adc
sbb
int3
ds
pop
cmp
and
jo
pop
inc
push
mov
cmpsl
sbb
in
call
test
shl
sbb
adc
lds
inc
bnd
stos
or
xchg
out
leave
clc
icebp
fwait
inc
jo
push
dec
fists
bound
pop
movsl
add
rcrl
cmp
pop
loopne
jns
xchg
lock
add
out
cmp
and
popf
mov
fs
pop
adc
in
sub
inc
or
cmpsb
lds
dec
sub
inc
out
cmpsb
sub
adc
das
dec
add
out
mov
mov
pop
adc
into
cld
mov
adc
sbb
cmpsb
loopne
addb
cmpb
lods
and
mov
stos
bound
inc
cmp
cmp
mov
fcmove
ficoml
add
mov
filds
mov
cmp
outsl
fiaddl
test
jmp
xor
sbb
pop
xor
repz
cmc
movsl
inc
fimull
inc
mov
cld
sti
mov
out
call
lcall
mov
clc
jnp
sbb
mov
repz
dec
stc
les
mov
rclb
and
xor
push
and
xchg
jle
loope
mov
ds
jl
adc
fxch
add
inc
add
adc
cmpsl
jle
das
adc
dec
jmp
imul
pop
push
nop
adc
sub
int3
repnz
jl
pushf
in
mov
adc
dec
jp
pop
xchg
push
mov
jno
mov
scas
xchg
dec
in
or
sub
cmp
cwtl
cmp
out
adc
das
sbb
mov
dec
dec
cmpsl
ja
sbb
lret
xchg
lcall
adc
fiadds
lcall
xchg
call
jae
cmp
stos
pop
and
repz
pop
xlat
jmp
sbb
mov
dec
stos
jbe
jmp
inc
push
and
cmp
movsb
jl
je,pt
repnz
mov
or
inc
sub
jae
add
adc
aam
mov
sub
mov
jbe
mov
cld
mov
jge
fneni(8087
lods
daa
and
dec
clc
sbb
popa
mov
mov
cld
fmuls
push
lea
push
cmc
call
push
cmp
mov
fdiv
stos
push
mov
cs
inc
scas
inc
loopne
pushfw
sub
dec
sbb
dec
or
std
inc
mov
push
mov
xchg
insl
xchg
mov
and
lret
test
xchg
jl
icebp
pushl
xchg
mov
cltd
orl
mov
aam
aaa
repz
add
dec
movsl
faddl
jbe
pop
push
dec
mov
pop
adc
out
dec
pop
ds
int3
movsl
xlat
fisttps
adc
mov
push
out
je
mov
push
adc
imul
xor
shrl
ss
inc
addl
add
sbb
cld
jo
inc
inc
dec
lock
inc
shlb
sbb
push
push
push
es
push
push
cmp
sbb
push
mov
std
movsl
out
cmp
xchg
fildl
jns
and
dec
adc
push
xchg
stc
dec
mov
into
call
xchg
xchg
ret
jb
dec
fbld
repz
and
fimull
xchg
inc
out
enter
inc
pop
out
push
adc
inc
lahf
xchg
inc
mov
jne
mov
popl
cmp
or
mov
pop
psadbw
aas
aas
jb
sahf
cld
jne
aam
std
lcall
jg
scas
mov
adc
scas
dec
inc
rcrl
loop
mov
int
and
adc
sub
mov
inc
enter
es
cld
loop,pt
fisubs
lds
and
cmp
imulb
dec
push
and
lods
push
jge
xchg
test
in
mov
jl
jp
xor
mov
mov
cmp
jl
push
sub
cmc
or
aam
cld
inc
or
andb
stc
xchg
inc
or
cwtl
xchg
repnz
xchg
fwait
or
sub
hlt
xchg
mov
js
mov
out
or
mov
push
nop
cli
je
test
lahf
lret
mov
mov
push
adc
repz
int3
fsubp
scas
mov
and
out
out
add
aam
cld
enter
push
jmp
push
test
xchg
fs
adc
fdiv
xchg
pop
fcmovu
icebp
mov
pop
in
test
sbb
xchg
iret
out
pop
gs
je
cld
leave
loop
sub
jae
out
or
adc
or
jp
sbb
push
cmp
dec
mov
sbb
xchg
pusha
cmpb
addr16
and
cmp
popf
xorl
push
mov
add
in
ror
mov
mov
cmp
repz
xor
shlb
cmc
dec
push
dec
iret
js
mov
int3
adc
inc
lcall
in
xchg
jecxz
clc
pop
mov
lds
jl
mov
test
adc
enter
inc
jl
or
add
cmpsl
or
push
xchg
lret
fisubs
cmp
clc
inc
icebp
inc
repz
scas
jmp
inc
inc
adc
sub
adc
adc
or
dec
add
loopne
clc
mov
jae
sahf
push
dec
xchg
aas
gs
mov
into
outsb
and
and
in
ret
adc
sbb
dec
in
xchg
rclb
push
lcall
cld
or
push
cwtl
dec
pop
xchg
push
jg
shlb
sub
push
cmpsb
das
stos
sbb
push
and
aaa
adc
out
push
inc
dec
jl
and
mul
sbb
or
inc
cld
ret
cmp
lret
jmp
pop
nop
sbb
repnz
mov
adc
mov
mov
pushf
inc
adc
je
push
xor
das
push
sbb
cmp
bound
cmpsb
mov
in
mov
push
pushf
pop
xchg
adc
cwtl
push
cmpsl
cmp
lods
leave
pushl
cmp
mov
out
adc
cltd
adc
mov
push
lock
aam
in
loop
lahf
push
adc
in
daa
or
xor
jp
jl
in
xor
mov
xor
mov
inc
jne
aam
outsl
subl
in
mov
xor
fwait
and
xchg
and
dec
pop
and
mov
jmp
mov
mov
jl
inc
cld
cltd
mov
xor
imul
dec
push
shr
push
andb
mov
cmpsb
pop
je
imul
das
xor
int
test
push
call
clc
push
insb
sbb
fnstsw
pop
hlt
movsb
xchg
je
sbb
xchg
dec
out
int
sbb
dec
xchg
test
push
inc
sahf
in
in
pop
mov
lcall
notb
out
jno
or
jmp
test
out
jb
inc
cmc
xor
adc
mov
mov
mov
fsub
adc
push
js
push
sbb
push
cld
popf
test
push
lods
lea
jl
leave
pusha
mov
and
sarb
jl
dec
jp
adc
mov
push
std
adc
aad
dec
cld
frstor
sbb
cmp
push
adc
in
xchg
scas
iret
xchg
inc
pop
dec
lahf
add
cld
mov
mov
movsl
push
cmpb
or
or
pop
mov
lock
es
dec
repz
adc
jmp
nop
pop
dec
aam
mov
gs
pop
jo
jp
icebp
xchg
fisubs
sbb
and
popf
inc
pop
pushf
movsb
sbb
mov
cmp
enter
jg
enter
dec
rcl
aaa
repz
ret
mov
cmp
in
fisubl
mov
call
adc
adcb
push
inc
lock
sbb
jecxz
test
fnstcw
cld
je
xor
push
out
testl
push
fxtract
push
add
jns
pusha
loopne
push
sbb
adc
push
mov
xchg
or
orb
icebp
xchg
in
addl
pop
cmp
add
xlat
cmp
and
add
sbb
rcll
ljmp
xchg
popa
mov
mov
aaa
push
lret
out
nop
add
scas
and
into
jno
nop
xchg
sbb
dec
mov
mov
xchg
and
or
or
es
jno
imul
js
clc
mulb
adc
sub
sbb
fnstsw
mov
rcr
mov
ds
jge
adc
or
xchg
icebp
movsb
mov
lahf
movsl
in
in
push
xor
cmp
cld
and
cmp
lahf
inc
mull
pop
test
pushf
pop
mov
jne
jg
inc
push
sarb
sub
test
mov
fpatan
mov
xor
sbb
icebp
cmp
sbb
xchg
pop
mov
bound
xor
mov
sbb
jae
cmc
repnz
dec
dec
in
sbb
xor
nop
repnz
movb
and
repz
pop
add
xor
and
pop
mov
push
gs
loopne
pop
cmpb
mov
mov
data16
mov
loopne
cli
sbb
fwait
fs
xor
pop
movlps
mov
push
loopne
xorl
add
popl
add
and
or
pop
pop
xor
cld
data16
or
stos
leave
adc
dec
fcoml
pusha
inc
and
repz
incb
nop
rorl
inc
hlt
int3
clc
aas
jbe
xchg
pushf
enter
mov
gs
and
fs
dec
xor
add
cld
ja
popl
mov
sahf
or
and
sub
int
lret
ja
in
jl
in
aad
xchg
test
aam
inc
push
mov
xor
fcoml
scas
sub
test
or
mov
fsubrl
cld
mov
jl
or
lods
in
pop
shl
cmp
or
inc
cwtl
jnp
add
and
mov
sub
pushf
movsl
xor
push
cmpb
popa
xchg
adc
mov
inc
pop
int3
lods
sbb
mov
test
insb
shll
cmpl
or
jne
icebp
sub
pop
scas
aam
mov
adc
insl
add
xchg
adc
gs
mov
mov
lock
in
xchg
in
sub
jl
mov
in
inc
lcall
test
push
inc
movsl
cmp
fisttps
inc
test
sbb
jmp
adc
in
jb
cmp
cld
add
fldenv
push
xor
cld
dec
daa
test
insb
or
mov
mov
addb
or
stos
push
jg
ret
push
push
lock
inc
mov
mov
fmull
movsl
jp
push
push
mov
mov
test
gs
in
roll
test
into
jmp
mov
enter
mov
lods
inc
insl
aaa
sbb
or
ljmp
push
js
lret
pop
cmpsb
insl
xor
roll
dec
lods
and
cmc
jne
mull
mov
into
or
aas
out
jl
fwait
clc
xlat
call
lods
or
js
adc
pop
test
inc
push
lcall
cmpsl
clc
es
add
or
sbb
jb
dec
push
divb
lret
adc
xchg
mov
lds
test
add
aaa
and
add
add
jae
dec
inc
orb
pop
ficoms
std
dec
mov
inc
sahf
popf
pushf
cld
mov
subb
mov
das
inc
xchg
in
ror
inc
or
mov
sbb
jl
fwait
lods
cld
mov
xorb
fnsave
lods
test
xlat
nop
pop
xor
inc
mov
sbb
out
adc
dec
sarl
icebp
mov
pop
mov
push
andl
mov
pop
fwait
dec
dec
cld
je
sahf
xor
inc
inc
mov
pop
adc
jg
xchg
aad
cmp
xor
mov
or
mov
arpl
push
lret
xchg
lods
xchg
hlt
gs
aad
jecxz
add
cld
lods
cli
mov
or
into
mov
arpl
sub
fmul
arpl
lods
adc
inc
push
aas
jo
lock
fwait
and
pop
push
aam
nop
pop
lahf
xchg
frstor
lret
dec
pop
es
sbb
adc
stos
outsb
adc
test
pop
xor
add
xlat
inc
repz
test
out
xor
mov
mov
cld
lods
test
imul
xchg
mov
loopne
adc
movsb
push
inc
jecxz
xchg
cmp
ss
jnp
pop
les
xor
mov
push
inc
and
ret
leave
in
gs
ljmp
aam
push
movsl
fwait
cld
dec
repz
gs
push
xor
push
mov
hlt
js
test
jbe
xor
shll
or
mov
fwait
dec
push
jne
and
rcrb
repz
outsb
adc
test
xchg
aas
mov
cld
cmp
popa
ds
jno
sbb
sbb
inc
xchg
arpl
adc
xor
lret
fcoml
ret
adc
imul
test
cmp
push
mov
and
test
sbb
push
outsl
inc
xor
jg
lods
adc
and
cmpsb
mov
inc
inc
sbb
xchg
mov
adc
sbb
push
push
dec
and
fcmove
xchg
mov
mov
inc
adc
call
mov
pushf
pop
cmc
mov
cmc
pop
inc
cld
push
in
dec
in
enter
rdmsr
cmp
and
xchg
outsl
insb
movsb
lds
cld
push
roll
jle
test
sbb
addl
push
mov
mov
lock
add
xchg
test
jb
inc
xchg
sub
jl
pop
xlat
cltd
mov
jge
je
pop
pop
mov
push
scas
outsb
dec
movsb
data16
aas
xchg
or
mov
in
pop
cmp
popa
and
in
test
imul
adc
pop
repnz
shl
mov
sbb
and
and
mov
test
pmulhuw
fimull
xchg
inc
sbb
in
mov
std
imul
hlt
bts
cmp
jb
or
cmp
xchg
cmc
cwtl
stc
mov
sbb
cs
bound
imull
cmp
cld
and
xchg
sub
icebp
cmpsl
cli
inc
or
repz
icebp
enter
and
sub
mov
inc
add
sub
aas
test
call
icebp
and
inc
push
mov
push
mov
jl
xor
xor
xlat
push
inc
xor
adc
push
data16
ret
pushf
shlb
mov
cmp
jnp
je
in
repz
scas
movsb
pop
cld
test
adc
out
and
andb
and
push
xchg
xchg
fimull
dec
mov
in
lock
add
push
sbb
adc
add
sbb
sbb
and
cmp
or
aam
clc
popl
sub
mov
xchg
xchg
out
or
mov
mov
mov
jae
jmp
dec
and
clc
cmpl
dec
cmp
sub
or
inc
jl
arpl
pusha
mov
lcall
pop
cmpl
loope
popf
movl
lock
adc
stc
push
lret
mov
cmp
xchg
out
and
add
into
inc
pop
pop
mov
pop
fs
les
insb
int
xor
aas
push
fimuls
jbe
loopne
std
add
popf
loop
dec
push
jl
sbb
xor
jle
fcompl
mov
xchg
xchg
fmul
call
std
cmpsl
cld
imul
lahf
or
ja
aas
mov
mov
dec
call
aad
jecxz
sahf
pushf
add
xchg
add
sar
movsl
xorb
lods
stos
adc
lret
jb
or
add
addr16
ret
mov
sbb
out
push
xchg
mov
icebp
cmp
movsl
mov
repz
adc
ret
leave
and
push
mov
xchg
pop
or
movsl
adc
or
fs
fidivrl
mov
jp
jns
arpl
or
cmc
lahf
cmp
sbb
push
jle
into
inc
mov
adc
loopne
xchg
repz
xchg
ljmp
cmp
adc
pop
enter
mov
pop
push
outsl
add
arpl
stos
adc
pop
mov
lea
adc
pop
pushf
push
in
or
pop
dec
scas
loopne
sub
xor
sahf
push
icebp
xorb
les
bound
lods
out
jl
popf
mov
cld
xor
mov
xor
xchg
or
mov
xchg
mov
push
inc
sbb
mulb
repz
xor
cli
lcall
mov
jbe
add
mov
add
cmp
std
mov
lret
cwtl
push
pushf
mov
stos
xchg
dec
xor
test
sti
arpl
inc
xchg
cmp
and
inc
pop
fs
dec
xchg
cmpl
xor
dec
xor
sahf
and
mov
adc
pop
pop
or
int3
pop
insl
adc
xchg
in
mov
jg
add
outsl
add
popa
lds
mov
mov
rcll
inc
mov
mov
and
rep
sub
rcll
mov
lods
fidivl
xchg
add
sbb
jle
ja
dec
cmp
call
dec
mov
sub
cltd
imulb
fdiv
movsl
loop
dec
rclb
cmpsb
sub
leave
xor
push
mov
outsl
popa
mov
mov
sub
mov
pop
sub
dec
loop
ret
cmpl
push
pushf
out
jno
cmp
xlat
and
mov
in
mov
movsb
push
jle
pop
fistpl
mov
shr
clc
pop
dec
mov
xor
cmpsb
inc
inc
cmp
jl
jns
add
test
or
outsl
or
enter
out
adc
flds
popa
sbb
cmpsb
xchg
pop
lods
loopne
test
fs
ja
ljmp
into
movsl
cmp
loope
sub
repz
mov
into
clc
jnp
cwtl
shll
cld
cmpsl
dec
xor
and
cmp
push
std
cmp
mov
xchg
pop
enter
or
fprem1
dec
adc
sbb
pushf
xchg
movsb
push
push
or
mov
lret
jae
insl
in
push
adc
cld
fbld
push
sbb
mov
lret
xchg
mov
xchg
imull
xor
stos
pop
inc
or
or
pushf
test
je
jl
sub
mov
dec
cmpsb
adc
or
cli
clc
jno
mov
and
loope
inc
ss
adc
or
xchg
js
stos
pop
inc
call
pop
fmull
and
xor
in
int3
jl
add
xchg
out
sub
mov
rcrl
inc
cmpsb
or
push
push
ret
loop
cltd
jge
outsl
mov
fninit
in
bnd
and
xor
subl
int
dec
push
pop
mull
adc
je
shrb
repz
push
inc
mov
sbb
push
outsl
mov
mov
pushf
inc
adc
push
jl
insb
adc
inc
test
idivl
mov
fdiv
push
repz
sbbb
push
cmpsl
or
outsb
jmp
push
cmpsl
loope
pop
loop
mov
lret
pop
out
push
push
push
arpl
add
xchg
pop
xor
dec
fsubl
push
xchg
inc
xor
repz
sbb
in
mov
rcl
loope
fs
xor
ret
mov
mov
nop
dec
lahf
sbb
clc
dec
pop
pop
lea
dec
or
inc
xchg
cmpsl
pop
cwtl
mov
fcoml
stos
fstps
ret
out
leave
xchg
pop
push
xchg
xchg
xor
cld
pop
sbb
and
sub
mov
add
mov
insb
pop
cs
sbb
iret
mov
ss
in
ljmp
mov
dec
mov
enter
jl
push
mov
cmp
cwtl
aas
icebp
shlb
cmpsb
pop
pop
cld
cmc
ss
pop
dec
testl
mov
xchg
adc
test
mov
leave
and
pop
pop
fldcw
inc
sub
jbe
popf
sub
xchg
je
insl
fsubr
lcall
dec
repz
sbb
test
xchg
mov
cli
stos
insb
lods
leave
pop
sbb
mov
popa
inc
bnd
pop
lcall
das
loop
xor
movsl
inc
xor
jle
ss
and
shl
cwtl
jp
push
out
iret
lret
push
mov
aas
mov
xchg
sbb
stos
mov
arpl
scas
xchg
push
aas
rclb
or
mov
pop
sub
pop
jmp
dec
fcmovbe
sbb
jbe
push
push
add
cmp
and
pusha
adc
inc
push
and
ret
adc
dec
mov
leave
fwait
push
clc
jbe
sub
xchg
orb
mov
mov
xor
out
sbb
sub
enter
and
cmp
fistpll
xor
mov
add
repnz
jp
inc
cmp
inc
mov
fstpt
xchg
call
cmpsl
clc
mov
dec
test
push
into
lcall
cmp
pop
ja
nop
push
cld
sub
mov
loop
xchg
mov
lret
xor
pop
and
xor
pop
add
rorl
adc
cmp
mov
sahf
cmp
fistl
repnz
mov
insl
add
sbb
lea
test
and
mov
dec
clc
and
pop
mov
mov
jl
arpl
iret
ficomps
repz
jnp
cmp
or
pop
loopne
add
icebp
xor
cmc
sub
out
add
or
pop
cmp
add
mov
mov
inc
xchg
lcall
or
test
or
and
call
lods
cmp
imulb
in
into
mov
mov
inc
jne
repz
push
inc
pop
in
cmc
jno
movsb
xchg
jge
and
push
aaa
or
ja
inc
imull
in
ds
leave
cld
xorb
mov
dec
pop
add
jp
insb
push
addb
mov
xor
repz
stos
or
sti
lcall
mov
outsb
shll
cli
insl
clc
cmp
adc
sbb
orb
cld
inc
cld
fistps
repnz
repz
pop
sarl
xchg
push
push
and
fwait
pop
adc
mov
in
jmp
cld
push
pop
sbb
aas
jne
insl
mov
jl
mov
dec
mov
or
mov
dec
outsl
mov
jae
movsl
fdivrl
pop
out
dec
pop
nop
repnz
ljmp
push
xorb
out
ja
aas
jb
mov
sbb
lcall
ss
cli
xchg
sbb
push
add
ds
adc
pop
xlat
outsl
jbe
pop
push
add
pop
mov
movsl
inc
js
fistps
jecxz
into
call
movsb
mov
or
ss
xor
pop
or
cld
call
jg
adc
sahf
enter
mov
mov
mov
jnp
mov
pop
stos
ja
inc
popa
fs
pop
aaa
cmpsb
pop
xor
pop
fs
inc
xlat
scas
repz
dec
pusha
or
push
pop
test
leave
jo
mov
lret
cmp
sub
or
inc
bnd
aam
int3
or
in
or
inc
jmp
jb
add
loope
mov
sahf
fs
jns
push
add
xchg
xchg
sub
dec
fcomps
xchg
inc
mov
dec
mov
cwtl
jmp
lods
xlat
and
dec
cld
cmp
pop
ja
adc
mov
mov
in
fists
xor
mov
sub
repz
das
inc
sti
inc
xchg
adc
mov
pop
ffreep
cld
and
or
movsl
rclb
dec
adcl
lahf
jl
addr16
cltd
mov
push
sbb
mov
jge
sub
dec
push
int
test
fstps
and
arpl
popa
lahf
or
mov
cmp
movsb
mov
push
fildl
adc
dec
pop
in
push
mov
jl
xor
shr
and
mov
repz
test
or
or
dec
fbstp
gs
in
fwait
repz
call
and
mov
fnstenv
data16
loop
or
aam
cmp
mov
adc
pop
into
lret
or
call
int3
mov
cmpsl
into
and
ficoms
inc
movsb
mov
ljmp
mov
xchg
cmc
ds
mov
dec
inc
insb
mov
sub
mov
push
repnz
sub
lret
stos
inc
dec
sub
inc
out
push
js
pop
sbb
or
pop
cmp
clc
push
ror
dec
inc
push
and
xchg
fldt
lods
pushf
xor
lods
stos
data16
andl
ljmp
repz
icebp
pushf
inc
dec
or
inc
push
pop
xlat
add
das
les
std
dec
pop
dec
mov
xor
xor
jl
xchg
or
pop
xor
and
mov
adc
sbb
and
sbbl
xchg
inc
fcoml
push
mov
mov
push
fmull
popf
daa
jge
mov
adc
dec
mov
dec
xchg
lods
incl
enter
enter
pop
cwtl
repz
xor
neg
sbb
mov
in
sub
adc
xchg
dec
shrl
movlps
adc
lcall
sub
std
inc
rcrb
fistpl
cmp
aam
adc
adc
int3
xchg
push
add
leave
sub
xchg
sahf
mov
sbb
mov
jp
sbb
or
or
inc
mov
test
adc
fwait
lea
ds
add
and
fwait
jge
xchg
add
cmp
lcall
mov
push
adc
addr16
jae
and
repz
pop
push
mov
lret
inc
js
xor
shrl
jmp
repz
or
lods
fs
in
cmpsb
sbb
aas
mov
mov
pop
pop
loope
lds
push
dec
orb
lods
or
xchg
sbb
cmpsb
mov
sbb
cmp
and
fldcw
out
popf
ret
adcb
cmpsl
push
push
out
push
fdivl
int
rorb
pushf
in
push
pushf
cmc
xor
mov
pop
iret
mov
adc
repz
in
mov
sbb
lods
pop
add
adcb
xchg
xor
add
std
push
dec
shll
mov
and
or
pop
push
jl
dec
je
fadds
mov
loopne
das
popa
cmp
add
mov
call
cld
mov
xor
movsb
push
out
iret
mov
mov
fwait
adc
out
jl
sahf
ret
push
shl
jl
cmpb
xor
insb
sbb
jno
cmp
xchg
es
dec
jne
push
push
dec
mov
mov
cmp
mov
fadd
or
cld
mov
mov
lea
mov
xor
iret
divl
push
out
cmpsl
aas
mov
testb
pop
pop
scas
xor
and
sub
shl
jp
mov
dec
fstl
insb
repnz
lods
pop
rcrl
popf
insl
pop
dec
or
or
cld
aad
or
xchg
cmpsb
push
sbb
jl
adc
or
arpl
call
rcrb
pop
jl
shl
icebp
jno
out
cld
sbb
sbb
mov
adc
sbb
in
lret
or
push
mov
daa
adc
xor
out
inc
push
or
adc
insb
mov
mov
lock
test
iret
data16
cwtl
lock
inc
push
mov
fbld
cmp
test
mov
push
popf
lock
scas
or
repz
cltd
push
cmp
in
xchg
scas
test
cmpsb
inc
xor
sub
addr16
call
jne
inc
repz
scas
push
mov
xchg
push
mov
clc
in
repnz
sbb
cld
shlb
fdivrl
cmpsb
cmp
inc
or
add
in
jno
mov
push
mov
addb
cmp
inc
ljmp
or
push
xchg
adc
pop
repnz
jmp
xchg
cmpsb
sub
and
in
add
sbb
hlt
shlb
lods
jecxz
xchg
sub
lret
mov
out
dec
cmpsb
add
ds
pop
insb
rep
sbb
sbb
jnp
jo
mov
push
xor
fistpll
push
pop
fs
std
dec
jge
popf
fildl
or
mov
add
out
add
sbb
je
stos
test
fistpl
cld
shlb
push
fcoms
xchg
and
and
inc
sbb
jmp
jecxz
ficomps
push
nop
test
mov
popa
dec
xchg
dec
dec
mov
cltd
push
rclb
leave
int
jae
pusha
xchg
mov
mov
fs
and
cld
xor
inc
xchg
scas
xorl
or
lret
adc
xor
mov
adc
or
sti
pop
movsl
jno
push
mov
dec
add
loope
inc
inc
xor
mov
repz
mov
mov
adc
cmp
iret
test
sbb
popa
xchg
or
in
xchg
cmpsl
and
push
pop
adc
addr16
data16
and
into
pop
movb
aad
pop
cmpsb
jecxz
pushf
xchg
jmp
stos
push
xchg
pop
lret
lret
push
dec
cmpsb
adc
push
lods
enter
test
cld
push
imul
adc
pop
push
in
aas
lods
dec
jge
xor
inc
negl
sub
dec
xchg
cmp
add
es
pop
sub
es
in
jl
rcrb
add
adc
pop
xchg
sub
pop
inc
scas
sbb
nop
std
enter
in
xchg
xor
pop
mov
imul
fists
mov
jl
inc
in
or
pusha
sub
cmpsl
dec
sbb
mov
mov
cs
or
cmp
add
jmp
nop
lock
or
and
cmp
ds
adc
inc
mov
xor
movsl
push
cmp
or
push
push
adc
out
pop
cmp
cmp
jno
sbb
int3
test
insl
adc
fs
or
xchg
push
shl
mov
inc
xchg
cs
and
xchg
xlat
push
cli
sbb
repz
in
divl
addr16
push
adc
xchg
dec
cld
xor
sbb
xor
lcall
shlb
mov
pop
aam
push
xchg
inc
dec
test
mov
add
inc
mov
jge
inc
ret
adc
mov
aaa
imul
jg
repz
std
xchg
sbb
mov
push
scas
arpl
ljmp
sub
aam
mov
mov
sub
je
xor
cld
in
xor
adc
cli
insb
cmp
out
into
rolb
lcall
lahf
ja
movsb
inc
lds
add
push
pop
ja
data16
pop
mov
cld
lahf
negb
loope
cmp
sub
xor
ja
lods
rcr
xor
adc
add
cmpb
pop
jne
mov
inc
clc
repz
out
jb
addr16
addl
shl
jl
divl
pop
inc
into
adc
adc
add
add
push
shrb
shrb
ret
jbe
sti
cmpsl
lahf
mov
rcll
jnp
call
cmpsb
fdivr
xor
mov
movsb
repz
fmuls
xchg
jecxz
mov
cmp
lea
xchg
pop
fisubl
fnsave
je
data16
js
push
cld
ja
fwait
inc
add
rcrb
fidivrl
test
insb
pop
repz
test
mov
test
arpl
cmp
push
mov
inc
or
fs
popa
add
inc
cmpsl
fiaddl
sbb
adc
gs
je
pop
test
out
lret
dec
pop
push
test
jb
insb
xlat
cmpsl
out
inc
push
lahf
cmp
mov
call
xchg
mov
cmp
sub
jo
mov
sbb
xor
push
cmp
and
mov
pop
stos
fs
hlt
into
movsl
pop
push
cs
out
push
leave
arpl
or
in
sub
or
xchg
out
dec
ds
jno
pop
or
cmpsl
or
outsb
data16
lock
adc
idivl
xabort
xor
fistpl
shlb
dec
aas
pushf
mov
push
push
cli
or
mov
iret
xchg
movsb
cld
push
lods
sbb
vcvtsd2ss
ret
frstor
fmuls
mov
loop
out
fs
lods
fisubl
call
test
push
add
js
adc
pop
push
jge
mov
int
cmp
bound
cmp
mov
enter
aad
mov
xchg
pusha
jl
add
add
jmp
add
scas
fistps
jp
ret
pusha
shll
outsb
rolb
addr16
push
mov
fldl
xchg
pop
dec
nop
leave
out
lods
and
dec
push
jns
sub
xchg
and
in
je
test
nop
dec
inc
xchg
hlt
pusha
outsl
repz
dec
push
xor
sub
xchg
js
out
mov
mov
pop
repz
gs
es
call
pop
xchg
inc
mov
jl
or
push
aas
sbb
cmp
push
fdivrl
data16
stc
outsb
mov
dec
or
xor
cs
dec
outsb
sbb
imul
dec
and
adc
push
sub
out
mov
rorb
aad
adc
rcrl
outsl
loop
pop
call
cmpsl
ds
mov
loope
mov
iret
mov
jbe
pusha
or
icebp
ret
xor
jo
rorl
repz
push
push
shr
jmp
dec
pop
adc
push
push
roll
add
jl
jb
inc
adc
int3
sbb
push
and
rorl
inc
sti
mov
dec
fadds
xrelease
add
push
adc
push
xchg
adc
lret
aaa
or
mov
into
sbb
xchg
cmp
jmp
lock
sbbl
sub
inc
lret
mov
cmp
int
sbb
jns
adc
push
cmp
negl
int
ds
test
gs
jecxz
dec
dec
outsl
cmp
sbb
cmp
adc
test
xor
mov
clc
dec
inc
mov
sub
adc
xchg
and
add
das
adc
rorb
push
les
jns
mov
sbb
mov
and
dec
popl
aas
ret
add
xchg
xlat
dec
sub
adc
jo
mov
cmp
cmp
repz
mov
adc
and
movsl
outsb
mov
jl
sub
cmc
sub
dec
lahf
inc
or
adc
movsl
dec
dec
cmp
fsubl
sbb
cs
cmpsb
outsl
arpl
push
sub
sub
lcall
imul
arpl
repz
outsl
fldcw
sti
ret
shlb
mov
pop
ret
push
mov
jo
aas
sbb
inc
dec
inc
outsb
push
orb
rolb
fadd
repz
fs
cwtl
sbb
and
cld
xor
mov
pop
aas
aam
inc
mov
push
and
daa
cld
push
xchg
mov
subl
test
aaa
inc
mov
dec
mov
shll
int3
push
movsl
xchg
mov
stos
daa
mov
ds
pop
push
or
cmp
push
xor
and
ljmp
jl
pop
push
sub
fnsave
lret
and
or
aas
inc
and
cld
cmp
and
popa
mov
push
nop
in
jns
sbb
loop
dec
test
popf
pop
idiv
xchg
push
in
addr16
pop
aas
std
push
mov
fsubr
mov
lea
daa
call
fidivrl
push
mov
inc
mov
rorl
leave
daa
inc
xchg
lcall
inc
dec
sub
fdivs
xchg
imul
pop
cmova
xor
or
in
fidivl
fsubl
mov
dec
pop
jl
shlb
mov
cmp
mov
jo
jo
stc
push
repz
fdivr
and
mov
jl
or
aas
int3
movsb
fsubs
fidivl
test
mov
loop
mov
push
jo
fisubrl
push
xor
adc
jns
ret
hlt
ljmp
xchg
sbb
xchg
sbb
cld
mov
insb
lds
shlb
fs
and
or
xchg
gs
mov
xchg
and
les
sti
inc
repz
pop
sub
and
jnp
leave
bound
pushf
mov
xor
subb
sbb
mov
cmp
sbb
jns
xor
fsubrl
pop
dec
sbb
xlat
push
inc
jb
inc
xchg
lahf
nop
push
loopne
pop
push
push
fwait
xchg
fldenv
cmc
test
mov
imul
mov
sbb
int3
mov
dec
iret
fsubp
adc
andl
jl
ljmp
jl
adc
push
dec
cld
popa
push
int
icebp
jnp
aam
fwait
scas
inc
inc
cmpsl
push
mov
sbb
sbb
insl
adc
push
xchg
mov
push
mov
and
cli
jge
dec
mov
addr16
call
cmpl
jne
and
jl
cwtl
lahf
cmpsb
stos
clc
in
je
adc
mov
add
jecxz
xor
imul
movsl
mov
adc
push
sbb
fisubrl
and
push
pushf
adc
push
inc
mov
addr16
int3
popa
adc
jp
push
mov
jg
xchg
xchg
mov
insl
dec
bound
or
pop
dec
pop
repnz
adc
sahf
ret
shll
xchg
andl
mov
insb
and
sbb
cmp
ds
repz
divb
dec
data16
fnstenv
outsl
mov
cwtl
cld
lds
addb
inc
enter
fcomps
adc
cs
or
mov
ret
push
cwtl
int3
push
dec
inc
mov
fcompl
in
les
xor
xchg
cld
aad
sbb
xor
sbb
or
mov
into
push
jecxz
jl
test
ret
add
push
adc
mov
xor
cmpsl
subb
bndldx
loop
ss
cmp
xchg
xor
xchg
icebp
xor
in
pop
xchg
push
mov
add
cmpl
sbb
xorl
sbb
mov
push
insl
pop
movsb
ret
xchg
adcl
or
mov
das
jl
cli
test
xchg
pop
les
int
mov
mov
jb
dec
mov
pushf
cmp
push
roll
repz
test
lcall
mov
sbb
dec
sub
fbld
mov
and
sbbb
mov
dec
xor
dec
xchg
mov
adc
fildl
pop
jnp
sbb
ss
cwtl
sub
jae
ret
into
push
fidivl
sti
mov
cmp
sbb
mov
pop
pop
mov
or
das
or
cmp
mov
sti
mov
in
xchg
xor
jge
enter
and
pop
cmpsl
or
icebp
pop
mov
push
je
js
sbb
xchg
sbb
jecxz
jl
outsl
jmp
pushf
mov
es
out
lahf
cmpsl
inc
cmp
push
lcall
loopne
lahf
repz
mov
int3
je
mov
mov
cmpsb
adc
cmp
daa
and
sbb
pop
aad
out
jp
jg
mov
and
pop
xchg
adc
pop
xchg
or
inc
mov
clc
fcoml
nop
dec
mov
and
and
repz
orb
les
test
test
add
popl
repnz
stos
ljmp
push
push
and
jmp
xor
jmp
xchg
shlb
dec
popf
call
inc
mov
mov
pop
fwait
push
xchg
xchg
ja
adc
aas
call
jmp
repnz
adc
dec
dec
out
push
lret
mov
sbb
std
xchg
les
test
ljmp
xor
sbb
adc
test
cmc
movsl
pop
scas
cmp
mov
int
cwtl
dec
les
mov
inc
or
push
dec
push
fcoml
divb
xorl
shll
pusha
mov
cmpl
fadd
dec
hlt
cmp
icebp
cltd
mov
adc
cmp
push
out
add
sbb
push
mov
adcl
cmpsb
daa
xor
loop
pop
shrl
mov
scas
cltd
sbb
push
xor
jp
add
repz
jbe
adc
stos
dec
push
sbb
dec
add
xor
mov
sti
cmp
mov
dec
out
iret
lahf
and
lret
imul
loop
jnp
pop
xor
dec
rorb
sbb
mov
insl
fisttpl
pop
je
mov
dec
push
inc
fmuls
jbe
fs
adcl
stos
jnp
sarb
mov
ljmp
insl
repz
sbb
mov
or
das
mov
adc
and
jl
stos
jnp
or
pusha
inc
mov
pop
in
mov
xchg
repz
mov
xchg
loopne
inc
dec
shl
pop
ljmp
nop
inc
fs
dec
inc
mov
js
pop
mov
or
leave
jecxz
fld
scas
or
lods
mov
rcll
mov
sub
add
lcall
sub
sbb
mov
fsts
fistpl
and
stos
mov
fmuls
jl
xor
int
inc
dec
push
test
sbb
pop
mov
aas
and
adc
sahf
push
cld
call
in
movl
fwait
jl
loop
mov
adc
repz
inc
sbb
xchg
mov
inc
mov
mov
pop
mov
ficoms
ficoml
pop
lods
inc
xor
cmp
cmc
cs
dec
icebp
inc
mov
sahf
cld
lds
in
fadds
lds
add
or
hlt
rolb
sbb
or
int3
lret
adc
adc
pop
mov
mov
cltd
xchg
or
andb
mov
push
adc
push
or
sbb
dec
mov
adc
ret
mov
fdivs
es
outsb
push
adc
xchg
cmpsb
outsb
mov
scas
jecxz
mov
pushf
xor
aaa
or
or
add
adc
cld
xor
bound
xchg
jno
and
xchg
mov
jl
mov
mov
je
pushf
mov
push
xchg
mov
mov
add
repz
daa
rol
cmp
movsl
enter
nop
and
inc
sbb
jge
sbb
adcl
add
sub
cwtl
rclb
and
subl
mov
mov
inc
push
aas
aas
test
push
add
push
in
cli
int
xchg
lds
fstpt
jnp
mov
inc
mov
ror
push
xchg
sub
mov
add
sbb
jle
push
inc
arpl
test
push
hlt
pop
test
lcall
mov
cld
push
aas
cmp
cmc
xor
sbb
push
xchg
cmpsl
nop
out
test
in
jbe
hlt
sub
popl
adc
jge
mov
cmpsb
jg
testb
adc
push
dec
mov
pop
add
sbb
out
lret
xchg
fsubs
sbb
push
mov
dec
cltd
aad
or
xchg
aas
lock
aad
fisubrs
sub
aam
nop
scas
inc
in
ljmp
xrelease
sbb
mov
push
mov
inc
adc
or
or
fisttpl
cld
movsb
loopne
or
mov
icebp
adc
mov
mov
mov
pop
inc
aad
sbb
add
pop
repz
mov
popf
mov
sub
mov
adc
xor
adc
popf
inc
mov
dec
push
mov
mov
fs
xorl
in
ficoml
rcrl
orb
push
lret
ss
push
sbb
imul
inc
aad
push
cltd
ljmp
cli
mov
xchg
dec
and
cltd
and
cmpl
add
dec
inc
jp
dec
jmp
fs
inc
aam
subb
sub
fcomp
mov
mov
pop
lcall
outsl
ja
fcomip
lret
lock
cmp
popa
aas
insb
sbbb
fsts
cmp
lea
sbb
mov
lods
arpl
sahf
in
dec
mov
in
test
loop
jmp
mov
fcmovu
clc
mov
xor
insb
outsb
push
dec
sbb
leave
js
imul
lret
mov
xchg
idivb
or
or
mov
add
pop
cmp
scas
idivl
popa
dec
adcl
push
aam
stc
out
pop
xor
fwait
dec
pop
mov
arpl
cmc
cmp
insl
rclb
push
xchg
lods
xchg
iret
sti
jg
jmp
repz
addr16
jmp
lret
xchg
dec
xor
push
adc
repnz
loop
scas
lock
pop
dec
sub
int3
cld
fnstenv
cmpsb
cmpsb
xor
jl
push
push
jmp
pop
leave
ss
sub
sbb
add
insb
push
dec
adc
mov
lods
fwait
mov
in
daa
popf
cmpsl
stos
test
pop
cld
jne
xchg
add
mov
or
and
pop
js
xor
xchg
es
fwait
inc
fucomi
xor
push
fdivs
imul
mov
addr16
dec
jl
cmp
inc
icebp
mov
ds
gs
icebp
scas
pusha
adc
sbb
dec
ret
or
mov
fwait
inc
pop
cmp
fcomps
jl
test
jb
outsl
push
sbb
aad
sti
scas
es
lahf
mov
pop
jae
les
stc
jo
and
pop
imul
pop
mov
push
dec
mov
dec
loop
sbb
lret
pop
inc
daa
iret
cmp
and
cmp
sbb
das
cmp
stos
in
aad
repz
fwait
sbb
cld
mov
and
lods
mov
in
mov
jge
inc
or
fsubrp
push
popa
cmp
movsl
ss
cmp
adc
push
pop
jno
xor
pop
pop
ds
frstor
addr16
repz
xchg
icebp
dec
mov
imul
repz
inc
rol
jbe
sub
lret
xchg
pop
jno
cmp
add
add
out
dec
cmc
jb
push
add
test
mov
rclb
sbb
cmp
push
push
cli
lcall
imul
je
repz
sbb
stc
mov
mov
aas
add
add
std
lods
pop
aam
cmpsb
mov
rolb
push
xor
mov
repnz
repz
xchg
pop
push
xor
jb
mov
mov
cli
scas
push
jle
loopne
pop
ror
sbb
cmpsb
sub
xor
sbb
scas
test
lahf
sub
test
fstps
xor
outsb
decb
shlb
aad
push
inc
in
push
rclb
into
sbb
mov
jne
in
test
fisubrs
mov
push
push
loopne
movsl
cmp
addl
mov
push
pop
cmp
cmp
out
jp
dec
lods
fcomp
sbb
loopne
stos
cltd
push
dec
stos
xchg
jecxz
jp
cmpsl
and
adc
and
or
xor
xchg
push
xchg
pop
dec
inc
xorb
cmp
cwtl
add
adc
inc
filds
call
adc
movsl
mov
jbe
in
jg
xor
fmulp
movsb
sbb
sbb
jmp
inc
dec
in
int
lods
mov
mov
outsb
rolb
cmpsl
adc
mov
inc
jno
push
push
out
jl
push
adc
pop
fnsave
xchg
mov
ds
int
cmc
ja
xor
adc
push
lsl
push
lds
fisttpl
sbb
loope
repnz
mov
out
dec
adc
mov
push
and
mov
push
dec
in
mov
push
fistpll
enter
rol
adc
sbb
outsb
inc
pop
pop
cmpsb
cli
push
mov
dec
nop
shrb
jae
push
in
mov
xchg
fcmovnbe
xchg
or
aas
std
push
int3
es
adc
jae
cmp
mov
cmc
pop
icebp
cmc
aam
test
es
fisubrl
inc
jae
sub
cmc
xchg
addr16
popa
mov
es
pop
int
mov
fmulp
mov
repz
mov
stos
ljmpw
xchg
push
inc
inc
dec
test
and
cmc
es
test
adc
ret
outsl
push
sub
dec
cltd
or
or
cmp
inc
scas
mov
loopne
push
aas
mov
rep
in
xor
inc
push
out
or
aaa
ja
pusha
push
fs
ss
scas
leave
inc
mov
cmpb
rcll
jns
push
ret
aas
flds
push
or
in
inc
leave
imul
push
cmp
or
popf
inc
nop
rcrb
mov
push
roll
daa
cmp
inc
pop
sub
repz
mov
cmp
push
jbe
int3
jg
int
sbb
fs
push
xor
inc
dec
lcall
repnz
cmp
and
mov
cld
push
ss
stos
hlt
sbb
loope
gs
clc
movsb
lods
addb
cmp
cmpsl
mov
pusha
sbb
mov
shl
and
sbb
xchg
push
cli
loop
addl
mov
test
pop
les
dec
je
sub
mov
pop
sahf
xor
xor
push
imul
pop
inc
jae
xor
mov
out
daa
jl
loopne
push
or
xor
pop
andl
and
jmp
cmp
push
cli
and
lret
insl
cmp
mov
add
or
push
test
lretw
cmp
pop
pop
test
lcall
jl
movl
repz
imul
in
jp
dec
lret
cld
sub
cltd
sbb
add
stc
pop
jo
push
cmpsl
sbb
mov
xor
cmc
cmp
inc
inc
test
popa
adc
imul
adc
out
xchg
xor
xchg
not
jae
sbb
push
dec
cmc
pop
jl
sub
pop
xor
xchg
aad
icebp
inc
mov
pushf
and
pop
lahf
scas
mov
ret
or
dec
repz
pop
mov
xchg
mov
push
pop
in
fcoms
cmpb
sbb
adc
add
shrl
les
xor
adc
jp
push
repz
out
sbb
jg
add
pop
jmp
movsl
pop
aas
sbb
fstps
ljmp
sbb
inc
cld
insl
inc
cltd
mov
push
push
out
daa
or
adc
out
mov
loop
sbb
data16
push
scas
cmp
add
aam
cmp
mov
mov
inc
cmp
mov
outsl
dec
push
es
push
mov
rcll
or
inc
push
jno
inc
cmp
mov
int3
xchg
test
call
cmp
inc
arpl
push
insb
jmp
push
mov
dec
adc
fsubrl
add
xor
adc
lods
adc
aaa
dec
xor
push
lret
stc
pop
adc
push
dec
loopne
fwait
pop
and
test
xchg
pushf
mov
push
cmpsb
push
das
dec
cmpsb
mov
test
addr16
loop
jbe
push
inc
or
dec
push
pop
aas
adc
sub
adc
ljmp
hlt
jp
mov
je
xor
push
jle
and
out
cld
out
bound
repz
adc
jl
or
loop
cmp
insb
scas
dec
jmp
cld
inc
jno
sbb
push
push
flds
pop
sbb
pop
movsb
iret
jo
fisubrl
outsl
inc
and
movsl
pop
scas
dec
pusha
add
shll
push
icebp
cmp
adc
mov
pop
mov
cld
ret
in
insb
outsl
inc
leave
mov
imulb
aad
cld
jp
ss
int
inc
xchg
incb
leave
pop
insl
lock
ja
mov
lcall
rolb
mov
xchg
dec
ljmp
repz
mov
mov
outsb
out
mov
fnstsw
sbb
repz
cld
lea
dec
negb
je
xchg
mov
imul
imul
shrb
xchg
pop
addl
or
outsl
daa
in
inc
lods
xchg
movsb
jl
mov
or
push
add
fbld
ds
or
leave
fidivrs
xor
out
loopw
or
push
shl
std
xchg
cmp
les
pop
push
outsl
ret
cld
push
pop
outsb
xorb
fsubrl
push
mov
or
mov
clc
xor
sub
movsb
dec
jl
test
mov
mov
push
add
fists
dec
pop
mov
and
jle
and
jne
inc
xor
xlat
sub
pop
repz
loope
addr16
mov
xchg
sbb
and
sahf
repz
inc
or
pop
mov
lcall
aas
dec
jg
pop
xor
sbb
cmpsl
inc
out
pop
pop
jmp
jnp
inc
ss
mov
inc
repz
xchg
fwait
jl
cmc
cmp
mov
xlat
sbb
lods
das
and
clc
pop
adc
xorl
dec
jbe
mov
mov
inc
push
dec
sarb
mov
mov
inc
push
outsb
lahf
and
mov
repz
leave
sbb
mov
or
dec
fimuls
jl
mov
pop
cmpsl
pop
aam
pop
jnp
jge
dec
dec
push
ret
inc
mov
xchg
mov
fisttpll
popa
jno
push
pop
sbb
stos
test
pop
in
jne
aaa
dec
pop
dec
jp
clc
push
add
push
jno
nop
fwait
in
movsl
xor
stos
pusha
cmp
cs
fadds
cld
into
pop
pop
pop
adc
xchg
ja
inc
dec
movsb
cld
or
sbb
pop
ja
push
cltd
leave
idivb
xchg
push
in
inc
pop
jl
ljmp
test
lret
add
fwait
test
fs
std
sbb
jnp
pop
test
out
push
insb
fimull
xor
aam
jne
lock
lods
sub
sbb
adc
nop
push
jmp
pusha
les
out
cli
adc
sbb
daa
mov
lods
mov
in
mov
mov
dec
mov
movsl
push
sbb
fs
pop
and
lock
outsl
out
arpl
sbb
mov
adc
in
movl
cmpl
rcl
jnp
stos
mov
jno
jl
cld
dec
icebp
push
mov
sbb
xchg
fisubs
xchg
repz
movb
std
and
dec
lods
dec
scas
enter
sub
push
sbb
xchg
ss
lock
lods
int3
xchg
xchg
ficoml
lret
lock
xor
mov
sbb
fistpll
push
sbb
push
sbb
sti
stc
dec
and
push
push
sub
and
dec
push
inc
inc
xchg
inc
test
lods
leave
leave
add
fwait
mov
fadd
cmp
push
rcll
fisubrs
imul
or
fdivr
xchg
or
dec
pop
xor
add
enter
mov
jle
mov
cmpsb
stos
sbb
in
test
cld
cmp
push
add
ficoml
mov
test
pushf
in
adc
and
adc
add
adc
or
out
mov
adc
jecxz
or
test
mov
pop
mov
imul
call
xor
push
dec
mov
cmp
xchg
clc
mov
mov
xchg
cmp
mov
cld
adc
mov
pop
cmp
sub
mov
or
mov
movsl
add
pop
fwait
les
push
push
xchg
lock
testb
sub
enter
ror
into
insl
lcall
push
push
idivb
stos
cmp
mov
inc
or
push
fwait
inc
and
mov
cmc
dec
add
push
or
fdivs
inc
aam
and
xchg
mov
je
sub
inc
repz
lock
cld
cmc
pusha
mov
xor
and
jmp
testl
wbinvd
cmp
into
jmp
repz
je
subl
adc
dec
mov
cmc
inc
pop
shrl
outsl
fildl
and
jl
clc
adc
movsl
jb
xor
cld
xor
xlat
fs
cmp
into
cmpsl
sub
sbb
iret
inc
cld
xor
adc
jmp
clc
dec
inc
arpl
cmp
and
movsb
mov
mov
jne
mov
lahf
stc
cld
cmp
pushl
insl
mov
mov
orb
sbb
cli
pop
xor
movsb
iret
sti
or
arpl
inc
decb
imul
cltd
xor
mov
xor
fs
pushf
das
jecxz
in
icebp
mov
pop
mov
lahf
mov
push
xor
pop
ficompl
data16
jo
adc
xor
jmp
xchg
sbb
dec
outsb
in
subl
sub
dec
dec
dec
pop
or
inc
imul
xchg
mov
mov
mov
pop
in
mov
cld
repnz
mov
adc
pop
xchg
push
push
xchg
xchg
shll
push
mov
mov
sbb
sbb
dec
inc
fwait
adc
dec
mov
dec
out
pushf
push
cld
lock
fadds
pop
out
mov
adc
inc
xor
and
inc
movsl
loopne
imul
xlat
shlb
addr16
dec
in
xchg
xor
lcall
jl
pusha
jb,pn
scas
cmp
inc
cld
mov
mov
mov
mov
xchg
push
dec
xchg
in
fidivrl
faddl
xchg
cmpsl
sar
inc
pop
mov
sar
dec
cmpsl
fcomp
sbb
pushf
jl
cli
add
jnp
cmp
adcb
push
cmc
das
mov
mov
dec
mov
adc
sbb
mov
adc
je
cmp
mov
lret
mov
xor
and
aam
xchg
loope
push
cmpsl
into
inc
sbb
sti
sbb
cmp
es
mov
mov
dec
xor
push
fsubp
sub
icebp
cwtl
ret
mov
outsl
pusha
xchg
jp
add
cmpsl
jp
or
test
gs
adc
pop
rcrb
dec
add
sbb
cmpsb
jl
ja
clc
mov
and
scas
push
xor
shrl
mov
lea
dec
jae
or
pop
ficomps
iret
jl
cmpsb
testl
das
out
lods
clc
out
mov
cmp
xor
inc
dec
mov
xchg
repz
scas
ffreep
adc
dec
in
fcomi
xor
sbb
cwtl
jae
jg
lcall
mov
add
loop
mulb
jl
push
xor
out
cmpsb
repz
lea
pusha
ret
push
cltd
mov
clc
push
repnz
mov
xor
inc
push
cwtl
xor
insb
mov
dec
sub
mov
or
decl
inc
dec
pop
xlat
sarl
xchg
lea
push
inc
cmp
mov
cmpsb
jae
sub
sti
stos
adc
scas
or
cli
jb
jl
ljmp
cld
sub
aaa
adc
adc
sahf
int
xchg
adc
sub
rcll
jno
fwait
mov
out
icebp
dec
pop
mov
mov
les
add
xchg
or
fisttps
fcomi
sarl
dec
fcompl
push
test
mov
and
mov
int
es
and
inc
ss
mov
xchg
flds
push
cmp
lahf
or
sbb
mov
sub
push
jo
js
sahf
inc
in
pop
mov
pop
pop
xchg
scas
pop
dec
push
cmc
das
mov
aaa
or
enter
test
pop
pusha
jl
sbb
into
lahf
repz
xor
cmp
push
sbb
nop
aaa
int
pop
xor
fwait
push
fsubl
cld
cmpsl
xor
dec
jl
xor
lcall
jl
dec
adc
push
pop
addr16
popfw
xchg
xlat
xor
lcall
mov
mov
fcoms
loopne
enter
pusha
mov
mov
adc
push
sbb
call
mov
push
mov
pushf
pop
out
cmp
leave
mov
rcr
cmp
fisubrl
fmuls
mov
scas
loopne
cmp
sbb
clc
pop
xor
sbb
aas
mov
xor
mov
fwait
add
jo
cmp
sub
sbb
xor
cli
pop
push
mov
and
int3
popa
fnstenv
xchg
mov
or
jecxz
jbe
sub
pop
push
xchg
out
lock
std
push
mov
neg
mov
lock
aaa
call
shll
push
test
aam
xor
dec
aas
inc
xorb
cld
aam
adc
ljmp
sub
lock
mov
mov
dec
mov
pop
sbb
fdivs
jmp
pushf
dec
jae
sbb
mov
xchg
rcll
adc
dec
scas
es
push
stc
test
addl
and
dec
jl
push
sub
jge
leave
out
push
push
icebp
das
lea
mov
inc
lock
bound
mov
mov
and
clc
xchg
jo
gs
add
push
rcrl
mov
mov
or
inc
dec
lret
outsl
je
mov
and
inc
scas
pop
and
lcall
push
les
sbb
in
push
leave
mov
jmp
adc
pop
iret
andb
inc
push
mov
jge
loope
fwait
pop
sub
lock
jl
div
jg
dec
sub
sub
stos
out
sub
xchg
out
daa
ljmp
pop
clc
mov
das
mov
adc
sbb
mov
mov
daa
sbb
aad
popf
neg
pop
lret
or
or
outsb
cs
cld
cmp
test
lahf
int
aas
mov
lods
pop
test
jmp
sbb
movsl
shl
cld
xor
into
inc
mov
pop
fadd
outsl
mov
outsb
pushf
mov
cmp
xchg
xchg
jb
cmp
jbe
jae
or
sbb
in
push
mov
jmp
dec
testl
push
push
or
pop
push
jmp
xchg
cmp
cmc
push
dec
mov
les
adc
mov
xchg
pop
fnstcw
push
xlat
lret
sbb
and
mull
insb
xchg
pop
aas
mov
inc
xchg
add
push
mov
lods
xchg
mov
fisttpll
movsb
mov
mov
mov
push
testb
stos
sbb
fcmovnbe
stos
into
imul
xchg
aas
or
rclb
repz
add
sbb
sti
xor
jns
fistps
ret
repz
mov
lock
push
out
iret
xchg
jno
mov
in
popf
shrb
sahf
icebp
repz
and
loopne
fists
or
push
js
rolb
xchg
push
xchg
es
jmp
or
add
cmpsb
shrb
mov
scas
pop
mov
test
lds
cmpsl
jecxz
cmp
and
fdivl
or
add
xchg
sbb
push
mov
mov
sbb
clc
push
mov
sbb
fucomip
mov
jecxz
lock
xchg
fnsave
push
ret
or
or
adc
jmp
xor
test
sbb
and
subb
xor
cs
mov
pushl
jmp
add
mov
push
movsb
ret
dec
popf
inc
push
nop
cmp
movsl
or
jg
push
movsl
sahf
jbe
test
fmuls
imul
jl
pop
mov
xor
adc
cmp
data16
lds
aaa
scas
inc
adc
cld
push
push
iret
mov
shll
lcall
mov
gs
not
je
aas
inc
mov
cmp
jl
mov
dec
lcall
orb
pop
shrl
dec
xchg
adc
movsb
fcmovnb
and
pop
mov
cld
push
into
fcmove
enter
daa
or
jl
lret
js
aas
pop
test
repz
push
xchg
clc
rorl
push
sbb
add
outsb
pop
dec
mov
scas
pop
or
stos
data16
cmp
inc
mov
lahf
fs
sti
push
and
or
adc
push
xor
hlt
out
jb
adc
push
mov
push
mov
add
xchg
push
fists
testb
push
cld
aaa
inc
pusha
addr16
dec
inc
ss
fs
fs
xchg
mov
sbb
dec
mov
incb
iret
pop
mov
push
add
mov
lods
ljmp
out
aas
iret
mov
lcall
mov
sbb
outsl
test
shll
add
in
cmpsb
add
and
lahf
sbb
addl
mov
add
stc
addr16
mov
push
lods
imul
outsl
pop
outsb
out
fwait
pop
sbb
cld
sub
fbld
es
push
pop
sub
icebp
or
xchg
les
add
pop
inc
andb
mov
or
inc
mov
xchg
sub
xchg
sbb
not
enter
sbb
call
fstl
sub
fs
lds
mov
sbb
mov
adc
loopne
pop
or
aam
and
and
lcall
shll
xor
push
sbb
iret
cld
push
jge
sbb
out
fcomp
std
sbb
shlb
lods
test
mov
xor
stos
scas
xor
add
xchg
inc
inc
mov
std
cld
inc
imul
gs
mov
dec
jnp
push
sbb
stos
push
dec
sub
dec
aas
mov
out
in
mov
aam
inc
repz
pop
scas
pop
mov
pop
push
or
fwait
xchg
mov
sub
adc
dec
mov
stos
inc
sbb
xlat
je
jle
dec
scas
mov
xor
cmp
stos
jp
dec
inc
cmp
repz
mov
xchg
xchg
adc
stos
cmp
sub
xchg
movsl
dec
loop
sti
dec
or
popf
adc
ret
push
lahf
or
orb
shlb
lea
test
pop
imul
into
push
sbb
cmp
addb
aas
dec
mov
ss
gs
pop
mov
sub
scas
mov
pusha
lret
rolb
push
inc
inc
jne
out
lret
sbb
loopne
mov
adc
or
pop
mov
subl
cld
icebp
cmc
aaa
and
mov
add
rclb
adc
and
xor
cmp
xchg
icebp
pushf
cmp
popf
loopne
imul
repnz
or
cwtl
mov
add
leave
mov
hlt
aas
xchg
dec
push
or
gs
jle
icebp
in
add
pop
into
xchg
nop
cmp
movsb
pop
push
test
mov
mov
push
dec
imul
lahf
cs
stos
xchg
ja
xchg
adc
pop
bnd
dec
mov
mov
dec
outsl
inc
loop
je
sbbl
pop
jb
push
dec
adc
ficoms
cmc
js
cld
mov
test
cld
xor
enter
in
mov
adc
xchg
or
push
mov
jmp
cmp
lock
adc
mov
cld
dec
popf
fiadds
je
jb
out
fucomp
into
insl
inc
or
sbb
into
rorl
in
xchg
dec
jae
cli
lods
fmull
xor
push
popf
xlat
inc
xchg
test
inc
push
mov
decb
add
dec
lcall
aam
or
in
dec
lds
jmp
or
inc
inc
popf
pop
xchg
das
or
sar
dec
mov
mov
xchg
aad
and
pop
scas
lods
pusha
jno
dec
testl
mov
mov
popa
out
sahf
push
cld
fwait
incb
push
shlb
inc
cmpsb
pop
popf
in
jp
in
push
xchg
xor
push
out
push
and
int3
mov
int3
cmp
sbb
jp
xor
lods
mov
dec
pusha
nop
jnp
jb
jp
sbb
xchg
add
dec
cld
sub
add
sbb
mov
pop
std
fsubs
cli
fs
fadds
scas
adc
dec
data16
xor
mov
mov
rorl
pop
jns
push
pop
inc
cli
xlat
ret
cmp
scas
insb
pop
fbstp
adc
and
or
jecxz
add
data16
repz
and
aas
pop
mov
lcall
pop
push
push
mov
mov
cwtl
or
lret
sti
xor
cmp
lcall
popa
inc
mov
movsb
and
sub
pop
dec
stos
pusha
insb
pop
movsb
jl
pusha
iret
push
and
add
xchg
push
je
pop
gs
imul
cmpsl
pop
mov
or
cltd
scas
cwtl
ret
or
xor
jl
sbb
add
cmp
sub
dec
daa
xor
sbb
cltd
add
in
stc
or
dec
ret
sbbb
iret
pop
add
dec
dec
add
cmpsl
dec
pop
clc
xchg
adc
fistps
inc
pop
sbb
iret
cwtl
xor
adc
cmpsb
sbb
jl
mov
or
roll
sbb
repz
mov
aas
mov
stos
test
inc
repnz
cmpsl
imul
or
outsl
adc
push
fbld
cmp
lcall
in
leave
mov
or
inc
int3
cltd
cld
xor
roll
xchg
ret
jmp
mov
rcr
cmp
xor
jno
lock
add
mov
mov
cwtl
movsb
imul
push
pop
jp
dec
mov
pusha
int3
push
sbb
or
loop
mov
fisubrs
fsubs
loope
inc
cmp
sub
cmp
sub
fdivrs
out
sbb
xchg
aaa
xor
sbb
dec
mov
cli
inc
dec
addr16
dec
mov
sbb
fistps
cld
dec
nop
adc
dec
cmp
mov
inc
lcall
add
iret
rol
mov
mov
cmpsl
cmc
sbb
fwait
movsb
and
test
lcall
pop
pop
rol
ljmp
pop
push
repz
mov
out
addr16
pop
data16
jp
add
insl
aaa
movsl
mov
xor
push
mov
arpl
js
adc
stos
pop
in
jl
add
aaa
out
xlat
jp
adcl
iret
mov
pop
cmp
dec
pop
rcrb
dec
cmp
call
mov
or
inc
xchg
stc
add
aaa
mov
cmp
mov
mov
mov
or
imul
fisttpll
push
pop
adc
test
test
fbstp
xchg
out
out
gs
loope
not
shrb
xchg
xchg
push
es
test
fidivl
push
aad
push
sub
adc
cmp
mov
stos
pop
jne
sbb
mov
or
dec
nop
push
mov
lods
xchg
jl
mov
test
fnstsw
mov
test
lods
lret
cmp
adc
inc
or
jae
sub
test
push
add
loopne
mov
adc
leave
in
pop
or
xor
adc
adcb
pop
repz
cld
lods
fsubrl
daa
lods
fs
xchg
mov
push
mov
cmpsl
nop
out
ds
sub
mov
mov
addr16
lcall
rcr
xchg
sub
outsb
or
or
mov
popl
sub
pavgb
test
add
sub
je
ja
cwtl
cld
xchg
out
nop
aaa
movsl
adc
orps
aam
or
inc
jl
mov
cmp
cmp
jl
cmpsl
pop
and
popa
loop
cwtl
orb
xchg
mov
fcomip
cmp
xchg
sbb
mov
iret
fimuls
xor
mov
lods
sub
xchg
and
pop
adc
lahf
pop
push
cmpl
xor
cwtl
inc
sahf
cmpsb
push
and
inc
mov
add
add
dec
or
jl
fmulp
jp
cmp
jb
ds
cmp
repnz
mov
lods
cmpl
or
loop
scas
mov
ficomps
shll
roll
push
andb
adc
lea
ficoml
jno
movsl
mov
or
xchg
rcl
repz
push
fs
pop
mov
outsl
mov
inc
insb
inc
sbb
xchg
aam
lods
out
jo
sbb
repz
dec
adc
iret
cmpsl
cmpsb
js
hlt
mov
dec
aaa
mov
aas
dec
jbe
ds
fmull
jle
xchg
inc
pop
aas
lds
xchg
mov
mov
or
inc
push
or
mov
cmc
in
daa
negl
jno
sbb
movsl
pop
mov
pop
cmpl
dec
xlat
out
call
push
mov
xor
adc
fmul
icebp
les
mov
inc
int3
fsubrs
adc
cmp
js
loope
cwtl
mov
jne
lcall
or
adc
add
push
out
push
mov
xchg
bound
gs
sub
and
cmp
mov
xchg
xchg
pop
push
and
cmp
repnz
sti
lahf
pop
mov
push
xor
das
xor
mov
sbb
test
or
xor
cmpsb
clc
out
sub
mov
xchg
divl
mov
popf
or
ret
or
in
pop
popf
aam
mov
jbe
push
or
xor
add
adc
push
cli
movsb
insb
xchg
xchg
xchg
sub
sbb
filds
dec
out
or
iret
sbb
ss
dec
out
mov
sbb
mov
pop
cld
push
movsl
mov
dec
sbbl
or
xchg
xchg
cmp
cwtl
push
or
sub
and
xor
dec
or
cmp
jns
insl
mov
cld
aas
mov
out
imul
cmp
test
scas
in
dec
adc
cld
push
push
loop
mov
inc
dec
aas
loop
xor
inc
sbb
test
ficompl
std
and
add
aaa
shrl
inc
addb
sbb
shrb
icebp
aas
andb
les
jl
or
or
mov
xor
cwtl
stc
popa
pop
push
shlb
cltd
jae
rcrb
loop
mov
movsl
adc
gs
pop
lods
add
jl
adc
cmpsb
outsb
dec
test
ja
jmp
mov
add
sbb
icebp
inc
mov
fnstenv
fists
jbe
bound
dec
cld
ss
cmp
popf
into
jne
sti
fwait
int3
cmp
fimull
lods
call
cmc
test
add
mov
fisubs
scas
lcall
xor
xchg
push
adc
inc
or
pop
jecxz
fs
cld
add
movsl
ds
scas
sbb
je
jl
cld
iret
adcb
out
pop
xor
mov
ss
cmc
roll
lret
add
or
xchg
adc
jmp
repz
insb
add
pop
in
stos
jb
xor
mov
andl
sbb
or
test
mov
sub
or
and
enter
push
xor
pop
pop
fldenv
int3
cld
xchg
dec
daa
repz
pop
push
adc
ljmp
xchg
in
push
sti
push
dec
dec
imul
imul
mov
jmp
xchg
cmp
adc
push
mov
push
aaa
or
and
mov
fs
fisttpl
push
iret
and
cmp
test
dec
cmp
stos
dec
aas
cltd
add
jmp
xchg
ror
adcl
push
mov
xchg
nop
push
test
jl
or
pop
mov
movsl
cmp
sbb
and
sbbl
lret
push
insb
dec
jg
insb
mov
dec
sbb
sbb
mov
xor
and
test
sbb
or
mov
test
inc
mov
pop
push
scas
shlb
xor
cli
or
sbbb
es
cmp
repz
sarb
in
or
xor
mov
mov
cmovbe
inc
pop
or
add
cmpsl
dec
xlat
cmp
jle
push
mov
sbb
aad
jnp
sub
rorl
fmull
mov
add
or
jnp
push
push
push
test
mov
jmp
mov
dec
stos
fwait
insl
jecxz
and
cld
xor
ror
pop
or
push
jo
and
inc
aas
xchg
sbb
imul
in
xchg
int3
hlt
sti
cmp
fildl
and
push
repz
cmc
xor
xor
adc
popa
dec
daa
dec
pusha
shlb
pushf
loope
mov
adc
pop
mov
outsl
js
movsl
lret
jnp
mov
test
sbb
mov
dec
inc
xchg
popa
sbb
xchg
mulb
mov
repz
insb
and
mov
jmp
or
mov
mov
ret
adc
pop
clc
mov
pop
pop
lea
lods
or
jmp
repz
roll
add
imul
and
fnop
cwtl
loop
fadd
pop
mov
aam
add
imul
enter
sub
repnz
jmp
xchg
mov
jns
sbb
iret
sbb
loop
outsl
xchg
or
into
sub
push
sbb
push
repz
inc
pop
fisttps
shlb
aad
pminub
ret
iret
mov
jl
jmp
jne
xor
sbb
mov
leave
icebp
dec
js
cmpsl
rolb
push
mov
jg
dec
adc
outsl
xchg
pop
enter
cli
inc
adc
mov
lret
in
xchg
inc
xor
add
fisttps
shlb
dec
repz
push
aam
out
mov
aaa
orb
insb
mov
addr16
sub
mov
shll
rorb
and
sarl
rorb
xor
adc
movsl
sub
xchg
push
cwtl
inc
sub
push
adc
pushf
cld
sub
push
inc
adc
in
dec
dec
xchg
lds
icebp
inc
bound
bound
testb
adc
or
mov
mov
pop
shlb
stos
xchg
shlb
out
mov
fsts
cmpsb
or
pop
xchg
mov
sbb
xor
push
inc
mov
jno
repz
or
xor
or
xor
mov
inc
pop
fisubl
out
xchg
fmuls
inc
test
std
mov
in
sbb
mov
fiadds
lods
test
daa
test
and
data16
mov
xor
cmpsb
or
dec
inc
and
xor
dec
lahf
scas
decl
cmpsl
push
mov
jno
cmp
rcll
fistl
sbb
add
cld
xor
sbb
xor
add
test
push
push
jecxz
inc
cmp
int
cmpsl
lock
adc
sar
cmp
sbb
pushf
mov
insl
fdivl
or
notb
test
jns
ret
or
inc
sbb
inc
es
add
gs
daa
iret
ret
dec
xor
stos
dec
stc
mov
jbe
jl
mov
inc
or
jl
pop
adc
pop
ja
int
cmpl
xor
dec
mov
call
adc
xchg
jo
out
sbb
nop
sbb
sbb
pop
es
fcomps
adc
std
repz
aad
pop
shrl
aaa
add
adc
xchg
adc
cli
inc
outsl
call
push
push
mov
mov
xchg
lea
or
xchg
jp
xlat
outsb
push
aad
adc
dec
loope
sbb
push
fs
fs
add
xor
aam
xchg
xchg
xor
sbb
or
mov
mov
add
outsb
xorl
push
sbb
inc
jmp
test
adc
pop
incl
push
negl
or
push
repz
dec
cmp
mov
pop
aaa
jg
pop
adc
pop
cmc
mov
jmp
ja
dec
fmuls
inc
fldt
cmp
sbb
outsl
adc
out
aam
lods
cmp
cld
in
mov
pop
mov
jl
pushf
sbb
outsb
sbb
aad
push
scas
outsl
dec
pop
jbe
xchg
jno
lods
mov
shll
shr
das
pop
dec
jg
add
jecxz
or
rcll
cmc
xchg
pop
or
xchg
inc
jecxz
or
fidivrl
sti
inc
cli
push
add
jl
push
insl
jge
outsl
and
shl
push
mov
xchg
pop
lcall
test
add
xor
xchg
aas
jl
gs
lock
mov
xchg
sbb
cmp
inc
xchg
sbb
mov
ss
sti
mov
testb
fdivr
mov
daa
inc
xor
popa
fcmovnb
mov
sbb
cmpsb
jg
aaa
fdivs
jle
addr16
scas
lret
mov
shrb
inc
push
push
xchg
lret
xchg
sbb
pop
int
cmpsl
push
xchg
push
pop
push
pop
aam
xchg
adc
test
mov
nop
push
xor
dec
push
ror
mov
fimuls
pop
jl
or
js
cmpsl
dec
out
fimull
movb
mov
adc
or
movsb
xlat
repz
push
test
cmp
push
or
je
in
push
clc
in
into
mov
push
fldt
aam
jl
aad
jnp
lds
iret
roll
push
mov
adc
mov
ja
jp
or
pusha
mov
pop
loopne
ret
popa
fdivrl
and
loop
sbb
sbb
sahf
mov
cli
out
arpl
mov
adc
dec
mov
lods
pop
ret
or
stos
mov
dec
repnz
loop
xchg
mov
insl
lock
fs
and
scas
rcrb
or
aas
test
sbb
or
mov
xorb
fwait
int
xchg
cmp
notl
fs
repz
push
stos
int
cmp
push
or
aas
mov
sarl
sbb
push
iret
mov
push
lret
push
inc
lods
adc
push
push
push
cld
push
mov
cmp
dec
adc
movsb
and
cmpsb
xchg
or
dec
movsl
orb
ret
addr16
sub
push
add
cwtl
adc
pop
cmc
xor
pushf
mov
mov
jle
or
push
je
imul
cwtl
lcall
cltd
or
ljmp
jne
insl
jl
cli
mov
cmp
pop
addb
mov
idivb
pop
test
xor
push
aam
mov
lods
dec
pop
mov
dec
lds
inc
inc
and
and
in
mov
jl
shr
rolb
lock
cmp
adc
cmp
or
in
filds
ss
pop
hlt
test
and
push
in
xchg
dec
call
sub
xor
mov
mov
jb
push
adc
xchg
test
lcall
imul
sub
cmpsl
in
dec
repz
cmp
cmp
test
adc
dec
adc
fwait
out
imul
fisttps
in
cld
jge
mov
lods
jmp
adc
lods
cmovbe
inc
js
sbb
fsts
dec
sbb
iret
andb
aaa
sbb
pop
cli
enter
fbstp
in
sub
push
cld
and
testb
shll
out
inc
lret
mov
cmpsl
out
sahf
sbb
and
mov
xor
movsb
sarl
repz
popf
cli
inc
cmp
mov
jmp
scas
in
arpl
dec
xchg
lret
adc
cmp
into
pushf
pop
cld
mov
xchg
inc
or
cmp
ss
adc
test
insl
mov
enter
insb
les
mov
daa
repz
mov
cmpsb
repnz
mov
mov
repnz
out
jb
dec
sbb
je
lret
sub
mov
out
mov
adc
jo
pop
push
jle
inc
adc
outsb
dec
test
jnp
and
popf
fs
adcl
inc
sbb
adc
loop
jb
mov
out
pop
int
jge
and
mov
dec
adc
icebp
xor
mov
fcoms
add
out
xor
or
xchg
out
cmp
push
sti
xchg
cmpsl
jne
jnp
sub
out
outsl
sub
mov
push
fimull
cld
fimuls
push
mov
pop
jns
jg
push
xchg
push
cmp
fmull
mov
push
pop
dec
subl
or
das
mov
cmpsb
xlat
xor
dec
xor
cmp
or
shll
push
adc
xchg
mulb
pushf
mov
xchg
mov
popa
cld
cmpb
nop
sarl
jb
add
cmp
mov
xchg
add
dec
inc
hlt
lods
ss
pushf
add
lods
and
cmpsb
pop
and
inc
out
in
push
push
in
xor
mov
cli
cmp
mov
add
jmp
push
ret
adc
jae
cltd
jg
and
int3
lods
aaa
push
jp
xchg
ja
mov
dec
sbb
in
jne
mov
stos
mov
mov
adc
leave
jl
lgs
std
in
inc
je
movsl
push
lock
loope
fistpll
shl
add
es
mov
mov
fisttpll
ficoml
jl
pop
cmp
out
leave
decb
popa
inc
inc
cmc
sub
push
in
iret
and
adcl
pcmpgtd
push
pushw
jl
cli
push
jnp
push
cmp
cwtl
loopne
sbb
push
cld
stc
pop
inc
jno
fisubrl
add
push
mov
mov
sbb
mov
scas
hlt
in
into
mov
sub
dec
aam
fmull
dec
mov
stos
add
cmpsl
push
gs
scas
sbb
call
cmp
xchg
repnz
loop
or
push
test
mov
xchg
xor
mov
jno
test
add
pushf
jbe
pop
sbb
dec
or
in
inc
jl
fiaddl
lods
cmp
push
adc
mov
sbb
or
cmp
ror
sbb
inc
scas
out
divl
and
jno
mov
xor
xchg
cmpsb
aam
jl
xchg
pop
pop
cmp
test
push
clc
xchg
rcrl
dec
sbb
fwait
xchg
or
jmp
fcmovnu
jbe
jnp
mov
pop
sbb
inc
jl
fbstp
push
sar
jbe
pop
cmp
aas
daa
loope
xchg
mov
js
pop
out
loope
ljmp
arpl
push
or
les
js,pt
and
nop
and
jg
cld
sbb
xchg
and
xchg
ds
dec
xor
pop
in
stos
xchg
movsl
in
aas
lods
jecxz
push
out
sub
dec
enter
arpl
cli
ja
xor
arpl
cmp
fstpl
out
pop
in
push
movsb
sbb
pushf
repz
inc
je
fs
scas
xchg
stos
jl
lods
aas
leave
std
repnz
push
pop
push
fcmovnb
add
mov
lahf
ljmp
xchg
push
lret
loope
jl
adc
mov
jmp
dec
or
jmp
test
jg
push
lcall
jb
pop
mov
lds
fadd
into
cmc
xor
cld
adc
test
fs
xchg
lret
sub
xchg
dec
jg
inc
jecxz
mov
cmp
mov
inc
pop
fwait
iret
push
andb
das
mov
imul
mov
push
push
cmpsl
frstor
adc
fldcw
xor
jp
ljmp
outsl
adc
fisttpl
outsl
and
pushf
jae
je
test
out
mov
out
sub
jb
mov
test
repnz
test
shr
lods
shr
and
call
cld
adc
jne
adc
lock
fsubl
mov
push
out
ljmp
lock
xor
adc
pop
pop
dec
mov
jl
xchg
and
mov
leave
cmp
xor
mov
ficomps
repz
inc
inc
xor
into
loope
imul
and
stos
mov
push
pop
fbstp
lret
sbb
inc
push
cld
push
sbb
and
ucomiss
icebp
hlt
popf
es
out
push
dec
sbb
jl
imul
jnp
mov
xchg
push
repz
ficompl
dec
cmc
inc
in
aas
mov
xor
jecxz
icebp
shlb
xchg
push
or
lods
pushl
mov
dec
xor
push
lret
test
icebp
or
pop
jns
xor
dec
xchg
sbbl
xlat
mov
mov
pop
sbb
jbe
push
ja
lahf
and
pop
sti
xor
xor
jp
push
add
outsb
cs
jmp
mov
push
cmp
aam
adc
sti
adc
movsl
arpl
popf
bswap
ficoms
push
scas
push
xchg
out
or
sub
adc
in
sbb
dec
loop
xor
mov
add
cwtl
loope
loope
lods
pop
xchg
push
sbb
fs
cmpsb
sarb
jl
stos
or
sti
xchg
loop
dec
adc
add
cld
adc
xor
pushf
adc
dec
mov
mov
sbb
pop
jae
imul
dec
aas
pusha
push
cwtl
lods
mov
lcall
repz
jge
enter
sahf
adc
inc
aas
enter
sahf
mov
cld
pop
leave
rcll
xchg
adcb
pop
repz
and
xor
dec
pop
mov
int
rolb
or
mov
sti
or
pop
nop
mov
add
lods
jbe
in
cwtl
sub
mov
sahf
dec
dec
ret
adc
sti
push
adc
inc
ss
mov
scas
pop
jo
ficoml
sbb
add
loope
ret
in
gs
jmp
mov
divl
jo
lcall
hlt
or
pop
cld
dec
inc
jns
adc
mov
paddb
outsb
lret
sub
jmp
sub
ljmp
ljmp
mov
leave
aaa
push
aaa
lcall
and
cmpsl
jbe
rcr
repz
push
ja
cmp
aas
imulb
mov
cmp
adc
lret
ja
mov
dec
mov
cld
pop
scas
sahf
inc
jb
and
test
push
leave
jmp
sub
jno
outsb
movsb
mull
sbb
or
xchg
jbe
add
pusha
cmp
in
ret
popf
mov
sbb
pop
adc
dec
clc
mov
scas
jmp
cmc
and
push
adc
popa
add
call
jle
mov
fs
push
stc
mov
mov
in
pop
xor
lods
or
ror
icebp
sbb
sbb
decb
cmp
roll
int
clc
mov
mov
mov
xchg
add
xchg
push
outsl
js
movsl
stc
and
adc
sbb
push
push
fs
mov
jo
mov
div
push
pop
in
xchg
xchg
dec
xchg
mov
mov
xlat
dec
pusha
jle
les
in
nop
inc
dec
arpl
xchg
sqrtps
add
inc
cld
push
mov
repnz
stc
icebp
je
repz
mov
pop
popa
lcall
js
sbb
imul
dec
lahf
insb
xchg
inc
inc
xor
data16
jg
fidivl
push
popf
fbstp
jmp
and
or
or
xor
lcall
sti
xchg
sbbw
ret
inc
outsl
loope
sti
repz
in
loop
fidivl
fistl
cwtl
dec
repz
pop
sbb
mov
movb
sti
in
cmp
scas
outsb
adc
popf
cli
pushf
inc
pusha
nop
icebp
jo
jl
mov
mov
sbb
in
cmpsb
repz
inc
jae
faddl
rclb
mov
mov
pop
cli
cld
mov
and
push
mov
inc
test
aaa
psubsb
cmp
mov
jne
dec
in
pop
aam
pop
sbb
shll
dec
scas
and
cmpsl
xchg
and
mov
mov
mov
push
dec
xchg
idivl
lahf
push
xchg
jp
dec
out
test
push
hlt
and
sub
inc
leave
dec
dec
xor
arpl
add
das
cmp
inc
lds
mov
mov
scas
lds
jl
in
ret
push
cwtl
dec
jae
mov
jl
es
call
faddl
test
push
pop
loope
jbe
nop
and
imul
xor
daa
pop
mov
sbb
mov
subb
lock
add
cmpsb
repnz
hlt
mov
or
mov
pop
loop
negb
inc
push
adc
mov
adc
dec
pop
mov
out
lret
jl
push
mov
popa
subb
sub
cld
std
push
mov
xchg
repnz
cld
xor
xchg
inc
out
repz
sub
sbb
cmp
jne
mov
inc
add
push
or
inc
loopne
mov
shl
xor
int3
repz
aas
test
nop
and
dec
aas
cld
mov
int
outsl
insl
imul
mov
das
inc
pushf
jl
shrb
jo
cmp
add
out
mov
dec
jl
aam
pop
sbb
pop
mov
jbe
xor
cmp
lcall
call
mov
fisubs
cmc
fs
and
push
aas
lods
sbb
jnp
push
or
sbb
xchg
sbb
cmc
ljmp
out
iret
inc
push
repz
outsl
js
call
mov
pop
adc
push
sub
push
pop
sub
sbb
mov
sub
test
repnz
shl
js
or
inc
cmp
add
mov
lahf
loopne
push
retw
adc
das
push
in
cmp
xor
cmc
notb
xchg
sub
fcompl
sti
sbb
lods
pop
jmp
push
hlt
fstl
in
inc
xor
mov
jge
dec
sub
mov
pop
mov
push
xchg
mov
push
jl
loope
repz
addl
mov
sbb
mov
adc
data16
test
cmp
xchg
int
or
pop
stos
add
mov
dec
push
cli
fdivs
dec
int3
mov
mov
cmp
lea
mov
pop
jbe
jno
xchg
test
insl
out
cli
xchg
inc
popa
or
push
adc
mov
dec
test
mov
jl
xor
cmpsb
popf
inc
jo
cmp
cmp
ficoml
jns
jl
mov
push
mov
sub
insl
icebp
fnsave
inc
lcall
ss
push
test
adc
lods
lock
lods
adc
add
mov
push
int
sbbb
mov
into
adc
push
test
mov
rclb
je
cld
push
nop
test
sbb
jl
mov
shll
adc
cld
data16
sbb
outsb
mov
xor
cld
fldcw
pop
inc
mov
mov
sahf
cld
ds
xchg
ss
and
lret
mov
xor
cmp
cmc
clc
pop
addb
sub
flds
call
shrb
test
xor
or
xchg
aas
movsb
fs
add
fsts
sarl
adc
outsb
or
cmpsl
inc
jecxz
push
hlt
repnz
push
jmp
jl
push
sbb
rcll
mov
pop
aas
mov
cli
lcall
jbe
add
jb
xchg
testl
jl
push
adcl
jae
mov
sbb
sub
enter
out
pop
mov
fmul
adc
nop
add
xchg
movsl
jecxz
dec
pop
push
movsb
or
cld
jg
push
sbb
repz
sti
mov
call
aaa
xor
addr16
inc
shl
push
cld
sbb
loop
mov
mov
leave
dec
push
cmp
mov
inc
push
popf
clc
lods
pop
sbb
jl
cltd
dec
cmp
mov
push
jnp
jns
int
sbb
jbe
test
mov
scas
xchg
aaa
rclb
sub
insb
lcall
movsb
sbb
add
mov
cwtl
test
sub
scas
push
insb
test
cli
lret
and
adc
aaa
outsl
push
dec
fidivrs
lock
mov
push
pop
sbb
cmp
dec
pop
jg
sub
dec
inc
lret
inc
add
test
mov
xchg
dec
inc
add
fistpl
repz
mov
cmp
js
into
and
aaa
inc
call
adc
mov
or
sbb
je
xchg
cmp
lret
movsl
cmpsl
testb
dec
fsubs
cmp
push
xor
push
mov
stos
test
add
mov
fidivl
pop
movsb
sahf
xchg
sub
mov
xchg
mov
in
mov
in
lcall
or
dec
gs
stos
jae
orb
lret
out
jp
cmp
add
pop
imul
cld
test
xchg
test
xchg
insl
jbe
imul
xchg
cmp
sbb
and
cmc
lods
lods
adc
fists
add
cmpsl
jp
pop
fmuls
jns
push
xchg
outsb
orb
dec
and
lcall
adc
or
mov
jnp
rcrl
mov
cld
sbb
jbe
jge
sbb
xor
push
in
std
or
jge
xchg
dec
in
or
callw
les
mov
dec
ss
pop
icebp
xchg
mov
mov
addr16
mov
push
je
push
add
cwtl
cmp
or
dec
addr16
bound
dec
into
jo
int3
jne
lret
push
les
ljmp
lcall
inc
jno
dec
xchg
shlw
sub
std
cmpsl
pop
pop
les
addl
mov
and
jg
pushf
les
ret
fwait
cmp
iret
hlt
xor
xor
xchg
push
aaa
std
adc
dec
push
jmp
jecxz
ret
mov
repz
pop
aam
clc
jl
xchg
aas
push
jmp
bound
dec
or
clc
dec
push
cld
add
jae
movsl
cmp
inc
dec
test
repz
in
xchg
cmp
cmp
fwait
add
les
inc
dec
rorl
int3
out
aam
lret
pop
test
jae
push
aam
and
and
inc
adc
pop
sub
mov
repnz
into
mov
inc
dec
mov
ljmp
sbb
int3
mov
mov
xchg
ds
sahf
sbb
or
or
xchg
and
mov
mov
sti
inc
dec
loopne
add
pushf
popa
cld
aaa
and
cmp
inc
inc
in
lods
mov
inc
pop
iret
fists
pop
lret
int
repz
push
adc
hlt
les
scas
pop
jl
ja
xchg
push
dec
fcompl
sub
adc
cmp
movsb
push
jmp
sub
xchg
fisubs
pushf
add
dec
out
xor
jno
mov
add
inc
adc
mov
mov
cmp
lahf
lea
cld
mov
cmp
mov
add
repz
sbbb
nop
cmp
xor
fdivrs
mov
mov
jg
std
lock
sub
cmp
lcall
in
stos
inc
mov
push
inc
lods
dec
stos
pop
enter
cmp
lret
std
data16
xchg
loop
fwait
inc
mov
mov
mov
pop
fs
ja
pcmpgtw
fstpt
jmp
ret
mov
testb
adc
xchg
mov
sub
into
je
or
dec
jle
or
and
scas
hlt
rcrl
cwtl
pop
movsl
pop
and
jmp
out
pop
sbb
jnp
or
add
xor
sbb
xor
mov
adc
inc
enter
shll
and
xor
and
jl
outsl
cmpsb
lods
mov
pop
fs
push
rorb
xorb
ret
pop
fwait
pop
adc
arpl
or
ret
xor
sbb
mov
push
jle
sbb
add
xor
repz
mov
loopne
fcompl
dec
dec
push
or
filds
lods
sub
sbb
adc
aaa
push
xor
lahf
add
scas
sub
or
cmp
movsb
mov
jmp
mov
inc
lcall
pop
jbe
pop
std
divb
or
repz
daa
sbb
test
shll
stc
xor
inc
ret
xchg
lock
test
sbb
gs
push
lahf
mov
or
jne
dec
movsl
push
mov
xchg
fsubrl
psllq
xor
or
pop
stos
inc
mov
jl
mov
or
addr16
outsl
pop
aas
adc
add
adc
mov
cmp
aad
pop
lcall
imul
push
mov
out
or
movsb
ja
pop
fs
addb
lock
jns
sbb
cmpb
fnstsw
icebp
jbe
jno
sub
add
mov
iret
pop
lods
or
cmp
adc
xor
sub
sub
adc
out
stos
add
lahf
cld
movzbl
jecxz
or
fdiv
mov
ljmp
cld
dec
pop
push
sub
cmpb
dec
jmp
mov
sbb
push
sbb
add
adc
add
sbb
fildll
jb
cmp
les
enter
adc
cmp
add
push
and
inc
dec
push
test
mov
fldenv
sarb
or
repz
insb
jg
jne
fstps
mov
adc
out
in
pop
mov
arpl
lret
cld
lret
leave
out
push
pop
xor
xchg
dec
jl
jb
mov
jle
repz
inc
cmpsl
outsb
les
in
pop
std
sbb
jb
addr16
dec
push
inc
cmp
mov
mov
lcall
sbb
out
mov
cs
jl
cmp
repz
fmull
jl
push
mov
xor
pop
mov
cld
inc
add
ret
jne
dec
jnp
out
jae
call
cmc
jno
push
sbb
cli
cltd
inc
sti
push
frstor
dec
aam
in
or
mov
cmpsl
lock
idiv
or
test
hlt
ret
jge
sub
sbb
lock
dec
dec
mov
scas
clc
add
dec
or
dec
es
cld
ss
sub
jle
cmpsl
enter
inc
ljmp
sbbb
adc
rol
rolb
repnz
cwtl
jg
xchg
adc
into
daa
or
xchg
xchg
push
xchg
cmc
dec
cld
adc
mov
ss
mov
push
mov
xchg
dec
sbb
sbbb
int
inc
lock
lcall
std
fs
push
orb
push
xchg
ret
and
into
xchg
mov
mov
adc
adc
xchg
sbb
mov
into
push
pop
mov
pop
mov
xchg
jl
in
cmp
xchg
leave
adc
add
inc
ds
mov
dec
inc
repz
or
mov
or
and
sbb
repz
push
sbb
inc
int3
mov
outsl
enter
lret
movsb
sub
push
push
cmp
inc
xchg
sti
mov
add
aaa
aas
cld
ret
repz
movsb
sub
inc
bound
cmp
mov
cltd
cld
push
xor
js
mov
lds
jnp
sbb
push
lcall
dec
push
sti
cld
shl
xor
lea
xchg
add
fmuls
icebp
pop
push
xchg
dec
inc
cs
and
add
inc
fcomps
inc
mov
movsb
sbb
cld
rclb
lods
leave
push
cmp
mov
dec
rep
xchg
sbbb
xor
xchg
dec
movb
dec
xchg
aas
int
pop
shll
cs
sbb
or
int3
mov
adc
fs
xchg
je
adc
inc
mov
sbb
scas
sbb
dec
push
iret
pop
stc
rcrl
pop
jno
out
repnz
jno
mov
cld
mov
lret
js
jg
mov
cld
inc
out
push
lcall
inc
pop
mov
into
push
jno
push
or
dec
inc
jne
jmp
fcomi
outsl
xchg
sar
inc
xchg
jmp
jne
test
fisubl
sbb
faddl
jb
and
aas
push
xor
in
adc
pushf
icebp
shlb
sub
mov
inc
dec
cld
jmp
mov
in
fisttpl
mov
mov
cltd
add
scas
jns
jbe
sbb
in
lret
movsl
push
cmp
xor
xor
push
jp
repz
mov
push
or
rcrl
lcall
cmp
sbb
inc
mov
shll
in
cmp
adc
clc
pop
adcl
xchg
cld
in
jg
outsb
xor
sub
mov
movsl
cmp
icebp
dec
add
aam
dec
or
test
mov
push
lds
shll
je
add
insl
pop
mov
lods
mov
xchg
mov
cmc
test
in
cmpsb
in
mov
stc
and
sbb
sub
xlat
cmp
sar
jp
shlb
call
andb
lcall
sti
cwtl
xchg
xchg
scas
and
xchg
xor
movsl
xor
xchg
mov
lds
xlat
and
cli
test
lods
pop
mov
mov
out
cmp
dec
xor
or
insl
std
arpl
sbb
addr16
mov
pop
mov
stos
dec
inc
xor
cld
cmp
mov
jl
data16
xor
cs
rol
inc
pop
xchg
mov
jl
mov
pushf
and
pop
dec
pop
mov
cmp
xor
lret
or
ficoml
aaa
pop
push
pop
push
add
leave
mov
lds
mov
pop
jl
push
xlat
dec
fcoml
adc
cmpsb
cmp
dec
fistpl
adc
push
xchg
call
test
mov
xor
sub
sub
test
or
xor
cs
insb
inc
cld
cmp
push
mov
loop
divl
int
push
rorl
unpckhps
xchg
inc
xchg
aas
in
pushf
test
in
stos
xor
lds
jnp
test
mov
mov
sub
je
jecxz
pop
dec
pop
aas
sbb
add
sub
repz
add
pop
pop
popa
mov
outsl
mov
mov
aas
jp
inc
push
sbb
ficompl
test
sbb
arpl
fdivs
shrl
mov
fisttpl
jl
sbb
mov
lds
push
sbb
xchg
cmp
sub
sub
xchg
add
mov
xor
sub
in
jp
pop
and
aam
mov
add
fistpl
cwtl
mov
add
rorb
test
repnz
mov
mov
or
adc
xor
mov
cld
cmpsl
out
pop
xorb
mov
out
cmpsb
sub
mov
xor
popfw
aam
repz
add
into
pushf
mov
mov
adc
mov
mov
mov
jge
scas
call
out
add
cmpsl
cs
notb
inc
and
jb
mov
mov
or
inc
imul
lcall
movsb
jecxz
pop
xchg
sub
pusha
aaa
fdivl
dec
xchg
xorb
enter
lock
jns
loope
mov
inc
je
lcall
lods
leavew
loopne
sub
ret
push
cwtl
xor
mov
mov
mov
mov
cmpsl
ss
adc
dec
xor
jns
int3
or
adc
push
xor
je
repnz
cmp
push
mov
aas
inc
inc
dec
movsl
mov
jbe
jg
sbb
clc
es
je
xchg
fbstp
insb
notb
insl
dec
mov
add
cmpsb
shlb
xchg
lock
popl
jecxz
and
cmpb
add
cli
cmpsb
outsl
into
test
add
pop
inc
inc
stos
ds
loop
xorl
lds
pop
xchg
cmpsl
jne
lcall
cmp
mov
xor
out
mov
mov
push
out
adc
sbb
inc
or
ja
int
lock
repnz
add
push
add
jl
stc
adc
lea
pop
mov
addr16
inc
into
jae
pop
dec
das
sbb
or
dec
aas
mov
stos
fildl
arpl
sub
sbb
shl
test
std
mov
lcall
xchg
pop
andb
jp
push
dec
sub
cwtl
ds
adc
sbb
xchg
pop
xchg
xchg
pushf
add
or
js
insl
pop
inc
cld
lret
xchg
sbb
repz
popa
fimull
pop
aas
loopne
mov
scas
fbstp
jbe
xchg
adc
add
ret
cmp
xchg
mov
cmp
loop
mov
sbb
repz
inc
push
push
add
cmp
aas
mov
dec
hlt
outsl
in
jl
sub
push
popa
mov
and
inc
scas
jmp
mov
sub
sbb
popf
cmp
jo
es
inc
jmp
mov
xchg
fidivrs
rcll
popa
aaa
mov
leave
ss
xchg
push
push
mov
jmp
test
pop
cmp
xor
lods
jge
mov
arpl
cmp
movsl
pop
je
out
mov
je
or
aas
loopne
pop
pop
or
jge
outsb
sbb
sbb
lods
inc
rolb
mov
mov
sbb
dec
cld
fimull
in
xchg
cmp
arpl
inc
push
sbbb
jp
roll
cld
jno
push
pop
ret
sub
or
sbb
push
inc
lock
cmp
orl
scas
cli
dec
fbstp
lea
movsl
push
fsubs
push
pop
data16
repz
into
sti
jae
lock
or
dec
pusha
add
mulb
mov
pushf
addb
cmp
rorb
or
cli
ds
adc
adc
xchg
jl
dec
cmp
inc
mov
repz
xor
mov
sub
loopew
enter
pusha
mov
pop
lret
dec
fstps
mov
mov
popf
push
out
pop
js
pop
pushf
cs
out
jp
sbb
int3
bound
mov
xchg
jp
cs
pop
pop
aaa
nop
inc
lods
mov
fiadds
cmp
xchg
mov
xor
cld
cmp
mov
subb
in
in
int
xchg
data16
dec
in
cmp
push
shrb
adc
xchg
sbb
sub
mov
ljmp
fistps
imul
xor
scas
dec
ret
repz
sarb
push
icebp
cld
xchg
les
fdivrs
and
push
outsb
lea
mov
mov
jo
repnz
adc
pop
xor
xor
ret
iret
cmpsb
ljmp
mov
inc
sbb
jle
or
adc
adc
out
push
dec
cmp
pop
ljmp
ds
xchg
xchg
cwtl
jb
and
mov
int
jecxz
mov
pushf
test
push
scas
sub
femms
push
mov
lahf
push
divl
lock
rol
fcompl
inc
fmuls
dec
push
pushf
inc
into
or
out
or
in
sub
mov
loopne
jne
add
adc
stos
test
or
or
lret
loop
mov
sbb
xchg
jecxz
xor
adc
andb
cmpsb
xlat
xor
out
aas
dec
call
mov
fwait
cmpsb
cld
cltd
xchg
cmpsb
push
push
lock
push
loop
sbb
sbb
cmp
pop
movsb
add
je
pop
mov
sar
fucomi
popf
inc
xor
std
inc
push
jno
mov
add
scas
sub
mov
xchg
out
shrb
rorl
pop
mov
jecxz
test
adc
pop
push
rcll
cld
sbb
mov
mov
scas
in
addl
enter
or
rcrl
add
pop
test
jnp
mov
push
loope
fldt
cmpsb
jmp
lds
ret
add
test
push
or
je
imull
cwtl
cltd
jno
sub
xchg
dec
lea
lods
sbb
push
push
sti
sbb
jl
pop
daa
adc
jo
jmp
mov
mov
adc
dec
adc
popf
outsl
xchg
stos
repz
xchg
jle
push
call
sub
out
mov
adcl
fldcw
leave
popa
or
mov
jg
lret
push
testl
cmp
mov
stc
setp
add
jmp
ja
mov
test
aas
xchg
xor
int3
movsb
mov
add
mov
lods
jl
or
jp
ljmp
enter
test
sbb
xor
cmc
inc
repz
push
adc
xchg
mov
or
fstpl
push
mov
pushf
cltd
out
fsubrs
rcrb
jl
xchg
adc
jne
pop
aad
movsl
jnp
mov
xlat
inc
int3
out
or
je
mov
sbb
loopw
hlt
mov
push
movsl
loop
sar
cmp
pop
xchg
lret
movsl
scas
xorb
iret
lahf
ret
and
adc
inc
or
test
adc
imul
cmpsl
and
push
les
lods
arpl
pop
inc
pusha
cmp
dec
add
or
mov
lock
adc
sbb
sbb
pop
adc
pop
xchg
ret
loopne
pop
xchg
fimull
daa
adc
stos
stc
inc
mov
mov
fldl
pop
cmp
sbb
adc
in
mov
repz
ja
mov
mov
xchg
std
bound
out
dec
jae
inc
inc
or
push
fcompl
mov
sub
mov
push
fadds
loopne
icebp
push
cmp
test
shll
mov
xor
movb
fstl
cmp
lock
movsb
pop
fldenv
inc
mov
aas
inc
cmc
xlat
decb
add
cld
xchg
es
pop
int
jle
sti
repz
in
xchg
xchg
lret
lahf
clc
fbld
in
push
or
repz
sub
lret
cld
sub
stos
or
cmp
inc
xorl
push
push
es
sbb
sub
cmp
mov
jnp
adc
push
out
outsl
mov
lahf
shl
out
dec
jg
ret
push
ss
jb
lret
fmuls
cld
or
sub
in
cmpsl
lahf
xchg
push
in
iret
xchg
js
inc
mov
jmp
lret
dec
cmp
xchg
xorb
jo
dec
imul
test
mov
mov
lret
cld
hlt
sbb
or
stos
repz
xor
filds
je
mov
pop
mov
ja
dec
push
lcall
sub
jmp
aaa
outsb
aas
inc
stos
js
out
jae
int
jmp
jmp
or
repz
jnp
cmc
mov
and
mov
pop
push
out
sub
fs
or
insb
arpl
sbb
loopne
sbb
cmp
pop
ljmp
sar
lahf
or
aas
pop
out
cwtl
cli
out
shlb
negl
xchg
inc
inc
jp
scas
fisttpl
lcall
dec
inc
mov
shll
call
mov
push
pop
std
push
cmpsb
and
sbb
lods
xor
outsl
adc
je
or
xchg
in
lock
fdivrl
fs
xchg
negl
mov
push
inc
or
cs
loopew
sbb
ja
inc
lret
push
xchg
stos
adc
xchg
xchg
push
mov
les
lods
inc
cmp
popa
xor
mov
inc
jbe
adc
repz
pop
js
inc
jnp
paddusb
sbb
jnp
movsl
pop
cmp
hlt
out
in
shr
push
fldcw
cmp
pop
or
push
and
push
push
cmc
jcxz
push
lahf
movl
outsb
pop
pusha
adc
mov
xchg
adc
dec
mov
xchg
sbb
inc
in
into
dec
lods
ret
pop
pop
or
inc
rclb
xor
mov
gs
imul
cmp
lahf
mov
rcl
inc
test
mov
adc
rorb
pop
inc
sub
add
adc
pushl
movsl
cmp
rep
fidivrl
lahf
push
insl
or
sbb
or
rorb
or
sti
and
mov
fcompl
mov
adc
loope
mov
xchg
mov
pushl
pop
movsb
mov
test
xchg
aas
repz
je
inc
dec
mov
mov
jl
mov
jp
cld
lods
mov
mov
stos
and
xchg
push
loopne
mov
dec
fs
lods
push
stos
fidivrs
data16
sbb
add
sub
movsb
movsl
lods
sub
dec
cmp
jecxz
in
push
adc
mov
add
or
cld
and
lods
adc
dec
rorl
dec
and
xor
orl
int
adc
adc
mov
adc
mov
fisubrs
dec
aad
xchg
jb
jae,pn
jl
sub
xchg
fistpll
inc
xchg
addb
mov
mov
call
or
push
mov
add
int
negb
cmpsl
sbb
mov
mov
jp
int
jp
mov
lahf
fldt
test
adc
stos
cli
or
jnp
loope
mov
mov
inc
mov
and
sbb
dec
fcompl
mov
shlb
test
sbb
xchg
lcall
pop
and
adc
xchg
cwtl
aad
test
inc
or
push
dec
in
lea
pop
cld
out
fwait
dec
repz
mov
lahf
fsubr
xchg
mov
or
cmpsb
mov
xlat
push
movsl
cli
push
dec
xor
mov
nop
xchg
cld
aaa
xlat
inc
add
mov
imul
jae
in
lods
jno
rorb
mov
in
xchg
and
xchg
cmp
jge
lret
jne
fisttpl
xor
push
lahf
pusha
adc
clc
adc
rcll
cs
hlt
sbb
pop
adc
loopne
addr16
xchg
movsl
lret
jge
inc
lret
inc
lret
mov
lret
cld
mov
inc
mov
pushf
pusha
xor
inc
popf
cmpsb
inc
fs
mov
and
repz
fcmove
cld
jmp
gs
dec
mov
cmc
adc
mov
cmp
mov
repz
movsl
shlb
mov
jns
clc
pop
mov
nop
cwtl
or
dec
xchg
push
pop
repz
and
or
clc
mov
xor
movsb
inc
adc
jecxz
icebp
jl
sahf
dec
mov
dec
es
jo
setle
jbe
sub
fistpl
pop
cltd
and
out
push
and
sbb
mov
aaa
and
test
adc
in
cs
out
sbb
add
pushf
call
lea
lods
cli
aam
pushf
mov
inc
xchg
cmpsl
adc
pop
pop
jmp
lods
pop
push
or
sbb
push
fildll
ficoms
aad
or
mov
sub
sbb
dec
jg
loope
xor
xor
fstl
mov
inc
aas
lret
pop
dec
xchg
mov
xchg
cli
repz
inc
mov
cmp
sbbl
shll
add
inc
imul
ficoml
push
xchg
jp
mov
pop
pop
popf
mov
dec
jno
xchg
sbb
mov
sub
iret
dec
shr
outsl
add
sbb
mov
cmp
adc
cmp
mov
sub
and
stos
mov
push
and
pop
mov
xchg
mov
cld
pop
iret
gs
push
sub
xchg
adc
push
xor
call
aam
cwtl
sahf
int
xchg
fadds
pop
xchg
xchg
sbb
inc
xor
insl
cld
cmp
scas
loopne
ret
jecxz
push
loop
movl
out
je
stos
mulb
sarb
mov
aam
jnp
repz
push
sub
inc
aam
ficomps
cwtl
jo
sbb
jle
dec
mov
inc
lret
xor
mov
mov
add
adc
cmpsb
repz
lods
cmpsl
adcl
dec
mov
cmpsl
stos
xchg
outsb
adc
je
int3
adc
jo
mov
popa
aam
jl
mov
mov
call
pop
or
enter
cld
loop
mov
es
cli
cmpsl
das
sbb
mov
inc
fidivrl
loopne
xor
movsb
inc
sbb
in
inc
pop
mov
aas
xlat
js
fwait
sti
shll
push
lcall
orb
pop
fs
sbb
jg
push
enter
imul
lea
mov
cld
cs
shlb
lea
push
adc
jmp
clc
repz
add
rorl
data16
test
rorb
inc
lods
bound
lret
cmp
or
dec
xor
mov
mov
adc
jecxz
insb
xchg
test
mov
fdivrl
jl
repz
mov
or
adc
fcoms
jl
arpl
and
or
pop
add
or
movsl
enter
sbb
xchg
arpl
out
dec
and
mov
xchg
call
or
sub
cmpsl
add
or
mov
out
mov
or
pushf
repz
dec
fsave
rorl
mov
lahf
sar
scas
es
in
mov
jae
inc
push
push
int3
lahf
sbb
xchg
stos
mov
fsubl
mov
inc
out
lret
and
in
cmpsl
or
cmc
cmp
push
bound
inc
mov
or
and
jnp
dec
add
xlat
cmp
cld
fsubl
out
cmpl
push
xchg
push
adc
push
xlat
out
push
iret
mov
or
add
pop
movsb
cs
rorb
and
loope
or
rep
sub
cmpsb
cld
sbb
mov
into
pop
sbb
mov
lret
add
jg
iret
mov
fimuls
scas
adc
stc
loope
fbstp
cld
fdivrs
lcall
mov
mov
arpl
adc
fs
fwait
js
mov
cs
adc
stc
punpckhwd
mov
sbb
pop
sahf
mov
fmul
repnz
sbb
in
dec
imul
ja
in
lds
adc
dec
push
hlt
xor
mov
lahf
add
and
xchg
in
mov
test
pop
ret
cmp
in
int
js
mov
movsb
inc
adcl
flds
adc
mov
mov
xchg
cltd
shrl
sub
jge
pop
gs
inc
adc
movsb
filds
iret
mov
in
add
jnp
lret
and
icebp
cmp
rcll
xlat
out
enter
inc
gs
ret
inc
sbb
adc
or
aad
pop
push
js
push
pop
inc
shrl
cmp
cld
pushf
lahf
add
cltd
cmp
in
jge
push
pop
repz
lods
adc
push
push
clc
mov
add
mov
cmp
add
lcall
xchg
insb
lret
andl
scas
sar
push
xor
and
mov
mov
dec
fstl
mov
cld
decl
push
xchg
in
aas
mov
cld
lods
pop
fwait
sahf
mov
sub
into
mov
out
cld
ja
sbb
jl
cwtl
rcll
icebp
mov
xor
xchg
cmp
dec
lcall
mov
ret
dec
xor
xchg
pop
mov
inc
mov
scas
cmpsl
rcrb
lcall
scas
fdivrl
inc
add
fs
mov
in
cmpsb
xchg
ja
fistpll
icebp
enter
sbb
loope
aaa
int3
sbb
in
add
or
das
pop
jp
not
inc
xor
rcr
cltd
dec
sub
mov
xlat
fs
cld
movsl
or
sbb
jnp
jl
jnp
bound
dec
mov
sbb
out
mov
jb
or
or
lahf
add
adcb
filds
rcrl
addr16
xor
sbb
sub
cltd
pop
xor
mov
mov
xor
push
repz
lods
push
xchg
mov
or
mov
dec
sbb
mov
or
cld
test
add
mov
push
xchg
fwait
xor
sbb
dec
sub
pop
or
mov
ljmp
mov
movl
add
fsubp
jnp
xchg
and
fbld
movsl
dec
sub
and
add
mov
shll
mov
push
in
out
fwait
cmp
xor
dec
mov
lods
call
stos
inc
fsubl
loop
inc
and
leave
aaa
adc
jne
repz
rcr
mov
arpl
ds
add
popf
adc
cmpsb
xor
fisttps
call
in
movsl
loop
lahf
sbb
cmp
jno
in
rolb
jae
or
or
xorb
mov
out
adcb
add
pop
mov
in
icebp
sub
je
dec
mov
fs
in
lret
fiadds
in
inc
dec
xlat
mov
ds
mov
inc
outsb
xchg
xor
ss
gs
pop
push
or
lret
jb
push
js
jno
fidivrl
or
out
mov
dec
push
mov
mov
mov
add
es
dec
stc
push
xchg
jmp
dec
mov
xor
aaa
cmp
inc
pop
cwtl
push
ja
std
ficompl
mov
sub
fs
repz
jl
mov
aam
push
sahf
clc
icebp
inc
push
mov
mov
cmp
jne
mov
mov
pop
mov
repz
mov
int3
jecxz
cld
imul
xor
inc
cli
pop
in
jl
sbbb
jmp
outsl
dec
repnz
sbb
xor
ds
stos
or
xor
xchg
hlt
fwait
pop
sbb
cmpsb
sub
push
pop
aas
pop
pop
addr16
inc
dec
stos
push
cld
push
jl
push
add
out
outsl
or
add
sbb
ljmp
adc
mov
push
insl
jg
mov
pop
mov
decl
arpl
push
inc
mov
dec
dec
and
arpl
sub
dec
cmp
inc
loope
adc
inc
lea
mov
pushf
xchg
xor
cltd
jp
mov
xchg
jno
aam
add
push
jbe
dec
pop
movsb
repnz
mov
xor
insb
scas
outsb
mov
int
push
push
sbb
pop
ret
xor
xchg
fnstcw
outsb
mov
stos
adc
push
dec
dec
xchg
pop
and
nop
cmpsl
dec
jbe
orl
mov
jno
inc
andb
jae
outsl
adc
and
jl
ret
sbb
in
and
repz
je
push
bound
movsl
push
stos
repnz
mov
xlat
jmp
sbb
sar
push
mov
adc
into
jecxz
add
or
stos
sahf
push
add
out
pop
inc
mov
xchg
xchg
repz
push
sub
aas
inc
jmp
mov
test
pop
xchg
mov
pushf
and
in
cwtl
mov
ficoms
inc
pop
inc
xchg
pop
das
cltd
sahf
mov
jno
shrl
test
jl
ret
aam
imul
insb
lods
xor
fsubl
jl
cli
lcall
jl
mov
inc
cmp
inc
je
enter
mull
cld
lahf
xor
sbb
xor
movsb
push
sub
or
mov
pop
dec
jle
ss
aaa
mov
ljmp
dec
pop
sbb
pop
xlat
sub
test
adc
mov
pop
mov
fldl2t
xchg
fidivrl
sbb
int
mov
jge
cmp
adc
add
cmp
mov
push
lods
mov
or
mov
into
push
mov
mov
sub
inc
xlat
jmp
sbb
cli
sub
mov
xor
or
sub
cld
in
cmpsb
cli
xchg
push
push
mov
mov
push
out
xchg
xchg
cmp
enter
out
add
pop
pop
mov
movsb
clc
pop
int
xor
mov
cld
lret
scas
xor
out
movsl
and
mov
lock
popf
cmpsb
pushf
dec
cmp
movsl
adc
jg
mov
lods
cmp
aam
js
xlat
js
adc
fs
pop
push
or
push
add
mov
mov
jno
xor
sbb
pop
je
call
call
cltd
ds
cmp
inc
adc
mov
jle
lret
cld
stos
mov
pop
jl
sub
pop
mov
dec
add
push
xor
push
pop
push
mov
xchg
lds
fcomip
mov
dec
fmull
lret
fs
xchg
or
mov
popf
dec
xchg
pop
sbb
cmpsl
push
mov
inc
sub
or
xchg
xchg
iret
mov
dec
jae
in
bound
movsl
cmpsl
int
outsb
xor
pop
enter
lods
adc
jb
pop
add
adc
sbb
jne
iret
jecxz
cld
cltd
add
addr16
addl
add
mov
fldt
das
jb
sub
xorl
push
mov
push
sbb
in
push
pop
fbld
shl
sbb
popa
mov
mov
push
xchg
jge
into
js
cmp
fcoml
inc
xchg
loope
jle
sub
repz
popf
mov
pop
push
lods
bound
lret
jmp
incb
mov
adc
inc
xor
add
movsl
inc
incl
inc
lods
mov
cmp
cli
inc
jp
inc
jb
xor
adc
jbe
je
cltd
mov
les
cmp
or
test
jno
cld
xorl
lods
fimuls
inc
ss
xor
mov
pop
test
jb
cmpsb
push
jecxz
pop
jl
cmp
mov
nop
cmp
ljmp
adc
adc
cld
fs
dec
test
fsubrs
ljmp
test
in
addr16
lret
or
push
xor
mov
add
aam
pop
pop
out
and
pushf
iret
mov
mov
test
loope
jp
jns
in
clc
push
lods
popa
lea
shr
add
inc
movsb
cmp
sahf
insb
jo
aam
inc
dec
mov
inc
or
fnstenv
loopne
sbb
pop
add
imul
bnd
repnz
insl
xor
cmp
loope
adc
loop
ret
jbe
dec
xchg
mov
mov
sbb
scas
fstps
pop
xor
data16
call
sbb
xchg
lock
movsb
push
xchg
or
push
rcrb
jl
mov
fcmovu
sbb
push
dec
inc
clc
dec
pop
push
lret
sbb
cmp
add
mov
sub
roll
xchg
mov
out
xlat
push
xlat
mov
sub
jno
mov
lods
jge
or
cld
adc
pop
aas
sub
shl
sbb
adc
insl
mov
pop
inc
or
cwtl
mov
fs
das
push
push
xchg
mov
sbb
lret
sub
sbb
jmp
adc
mov
and
repz
testl
push
pop
repz
or
sbb
das
xchg
sbb
jle
push
and
cld
aas
shll
loopne
inc
add
popf
or
mov
ret
dec
jl
imul
mov
mov
lods
mov
inc
sbb
push
test
movsl
out
les
imul
push
cli
clc
test
push
rclb
std
pop
mov
ficoms
cld
shrb
shll
cwtl
imul
into
ficompl
mov
xor
push
push
movl
adc
gs
xor
xchg
xor
ds
popa
pop
in
mov
adc
or
sbb
fldl
ds
mov
jae
fmul
push
frstor
xchg
jno
sbb
call
adc
add
inc
xchg
dec
push
mov
xchg
push
loop
scas
movb
dec
xor
sbb
repz
in
inc
push
dec
pop
lock
adc
xorb
adc
fs
mov
or
push
mov
je
pop
lahf
fsubrs
rcll
cli
mov
push
add
push
mov
cmp
cld
or
lods
push
into
and
adc
pop
ss
sub
add
mov
xchg
adc
cmpsl
fwait
and
orb
mov
mov
psrlw
fldl
cld
pop
inc
mov
iret
dec
fs
shll
cmp
sub
sub
call
sub
and
in
adc
jns
in
cmp
push
jecxz
and
xchg
sahf
push
out
aad
pop
cmp
xor
rcrb
imul
dec
cld
aas
in
enter
mov
jnp
push
test
pushf
jo
imul
lahf
sub
sub
pop
fsubr
mov
andb
test
fcmovnbe
push
cmp
cld
clc
fistpl
dec
repz
xchg
ss
daa
shrl
jbe
mov
enter
jl
enter
dec
adc
repnz
divb
fwait
and
into
andb
push
in
push
mov
cld
test
sbb
xor
pop
imul
sti
and
pusha
aad
ljmp
lea
adc
pop
sbb
int
pop
add
mov
clc
xchg
fs
test
push
dec
add
mov
mov
idivb
sbb
xchg
xchg
mov
fistps
jo
lahf
jnp
lret
push
sbb
inc
test
xor
sub
mov
ljmp
mov
test
pop
pop
inc
into
scas
or
dec
adc
gs
repz
jae
pop
mov
jmp
pop
test
jo
pop
xor
mov
adc
mov
add
je,pt
jb
or
dec
jae
leave
mov
cmp
push
xor
and
inc
adc
das
ljmp
stc
sbb
adc
cmp
lods
mov
subl
or
inc
repnz
fs
out
or
mov
ficoml
int
orb
adc
mov
es
mov
or
negl
mov
push
adc
jbe
inc
rorb
pop
or
ljmp
add
dec
shl
popa
jg
push
lock
sub
jl
mov
jg
mov
call
sti
dec
mov
xchg
cmp
rolb
lods
jmp
ret
sbb
xor
bnd
or
jl
nop
inc
lock
inc
dec
imul
pop
outsl
mov
cmp
inc
dec
rcrl
aaa
xor
mov
cmp
enter
cmp
jns
sbb
cld
mov
fs
lods
xchg
push
pop
loope
clc
stos
call
adc
repnz
leave
add
push
dec
lret
nop
cmp
in
sub
dec
push
aas
pop
call
cmc
out
cmp
adc
and
rclb
push
aam
js
aam
scas
sbb
add
repz
adc
dec
popf
lahf
cltd
mov
xchg
sbb
cmc
jne
pop
push
dec
mov
fidivrl
repz
dec
xor
xlat
aas
loop
xor
inc
in
sub
xor
rorl
xchg
icebp
ljmp
dec
pushf
movsl
int3
xchg
or
repz
mov
cltd
rclb
pop
mov
shlb
mov
pop
or
xchg
xchg
sti
data16
push
mov
fsubs
adc
and
les
mov
lret
mov
mov
jl
and
xchg
repnz
sbb
into
fs
dec
lds
idivl
cmp
and
sub
push
cmpsb
test
aaa
inc
or
scas
test
or
cmp
repz
je
lret
hlt
cmc
and
jl
roll
push
xor
pop
xor
stos
cmp
adc
push
and
cld
movsl
inc
daa
mov
sbb
imul
push
inc
test
adc
cld
or
xor
std
and
and
adc
push
cld
sub
cmp
rclb
push
ss
sbb
loop
fisttps
inc
cmp
rolb
adc
and
xchg
nop
cld
fsubl
or
outsl
jbe
mov
orl
js
fisubrl
dec
xchg
stos
mov
adc
mov
pop
lret
jge
inc
mov
cmp
inc
loope
mov
dec
cld
test
imul
jp
cld
xor
pop
jl
sbb
sbb
into
cld
fmuls
in
jl
decb
xchg
mov
in
inc
xchg
mov
mov
push
outsb
lods
in
push
or
jmp
and
inc
xchg
mov
xor
push
or
push
and
mov
sbb
sub
sahf
mov
cmpsl
inc
fwait
enter
mov
cmp
out
imulb
in
notrack
mov
in
pop
push
pop
fdivs
jbe
xchg
je
movsb
inc
neg
pop
fiadds
xchg
pop
repz
adc
loopne
fcomps
push
ss
push
ret
fcoml
xor
jne
mov
cmp
jl
sbb
xchg
xchg
and
adc
call
ds
xor
xlat
aaa
inc
jb
or
or
insb
lea
sbb
jle
mov
dec
cmpsl
iret
std
pop
xor
pop
in
push
mov
fcmovb
xchg
or
mov
cmp
stos
repnz
cld
mov
call
xchg
stos
decb
cli
es
mov
xchg
mov
aas
dec
mov
decl
xchg
inc
inc
xchg
jbe,pn
lahf
in
aaa
pop
mov
mov
jl
aas
sbb
lea
sbb
jl
xor
dec
jp
jmp
mov
jp
xor
adc
repz
add
and
inc
mov
mov
sub
daa
cwtl
xchg
jbe
inc
inc
inc
or
loopne
nop
jne
call
mov
dec
test
push
aaa
and
in
stc
test
push
push
mov
fwait
mov
int
xor
xchg
inc
insb
sahf
out
mov
cs
mov
or
insl
cmpb
push
dec
mov
movsl
pusha
or
imulb
lea
mov
push
and
lret
dec
and
and
inc
pop
push
imul
mov
lock
mov
rclb
out
dec
pushf
inc
sub
repnz
insb
lcall
cmp
add
or
mov
rcll
hlt
push
adc
sub
add
repz
xchg
dec
mov
test
orl
sub
and
dec
testl
dec
sbb
cmp
dec
sti
xchg
xor
mov
jle
in
and
std
mov
pop
sub
adc
push
sbb
cwtl
in
fnstenv
adc
push
divl
or
pop
les
xchg
pop
dec
add
iret
pop
jl
out
scas
pop
out
loope
popf
mov
cmp
rorl
fidivrl
in
sub
repz
xchg
inc
jp
pop
push
xor
pop
call
inc
cld
outsl
loop
sub
imul
sbb
inc
jl
std
movsb
mov
xchg
or
mov
mov
cli
mov
mov
idivb
popf
enter
mov
jmp
jp
hlt
in
imul
mov
cmp
pusha
scas
out
mov
inc
ficomps
fcmovnu
into
repz
scas
dec
jne
sub
jne
mov
or
pop
push
repz
in
jmp
cs
inc
xchg
adc
push
std
mov
call
fcoms
test
insl
or
jle
cmp
ljmp
sbb
inc
mov
fmull
push
mov
test
jl
shll
jae
jg
aaa
inc
mull
jl
pop
aaa
mov
loopne
jb
iret
mov
outsb
jl
or
mov
aaa
cld
cwtl
cli
pop
into
pusha
jbe
inc
imul
xor
and
fsubrs
loop
iret
push
mov
shll
or
adc
adc
repz
mov
push
loope
and
dec
repz
inc
ljmp
xor
sub
mov
dec
or
std
enter
dec
xchg
xchg
xor
rcr
dec
adc
and
in
xchg
stos
sbb
hlt
loope
mov
dec
clc
scas
push
sbb
jo
cmp
cs
lret
mov
enter
mov
xchg
notb
out
mov
fstpl
mov
push
cld
fisttpll
and
aas
or
out
inc
or
ret
jno
adc
mov
jl
outsb
loop
rorl
idiv
sahf
es
mov
loop
lea
cmp
fwait
jb
nop
xor
xor
cmp
adc
test
pop
mov
add
sbb
cltd
pop
repz
aam
inc
inc
pop
push
cld
push
std
jno
and
mov
add
or
dec
popfw
inc
inc
test
inc
lock
push
dec
xchg
adc
xlat
xor
inc
icebp
fwait
cld
dec
dec
cmpsb
pop
cmpsl
mov
ljmp
loop
cltd
mov
lock
arpl
aad
and
xchg
jecxz
or
or
es
popf
out
inc
xor
cmpsb
and
sub
adcl
test
or
push
sbb
std
nop
pop
lods
add
popa
stc
ja
icebp
stos
xor
cmc
or
lret
inc
fdivs
lea
mov
push
scas
mov
jecxz
jns
repz
add
inc
or
into
adc
lahf
call
lcall
out
leave
les
sbb
sarl
cld
dec
icebp
cwtl
shll
fidivl
mov
cmp
out
ret
sub
mov
xor
dec
repz
notb
xchg
stos
adc
inc
push
repz
xor
inc
or
shll
sbb
ret
lea
repz
dec
rcr
sti
mov
jg
adc
cs
out
es
movsb
mov
and
xor
xchg
and
ja
pop
push
jb
mov
adc
outsl
stos
hlt
pop
arpl
dec
adc
inc
add
sub
push
inc
imull
nop
imul
lods
xor
cmpsl
inc
and
dec
addr16
sbb
pop
or
jle
or
pushf
cli
cld
fisubs
out
cmp
pop
adc
sbb
adc
cld
cs
in
jnp
xlat
outsl
divl
jmp
xor
mov
jg
mov
jne
mull
dec
dec
push
push
inc
mov
xor
in
inc
cld
xor
arpl
addb
pop
cld
cmp
and
repz
adc
jg
mov
lods
or
jbe
push
inc
lods
ror
cltd
xor
and
mov
xchg
repz
add
or
pop
aad
mov
sub
add
jmp
dec
loop
stos
repz
dec
scas
imul
or
mov
out
xchg
orl
cmp
jno
out
pushf
push
cmp
push
adc
test
movaps
mov
das
fildl
repz
nop
iret
ljmp
push
pop
es
mov
es
je
out
test
mov
ljmp
push
dec
movsb
xrelease
loopne
jnp
or
sbb
xchg
push
add
adcl
sbb
adc
stos
lcall
cmpsl
mov
stos
popf
lock
int3
and
cmp
mov
rorb
sbb
cmp
mov
inc
clc
xor
cmp
out
mov
cmp
into
cli
cmpsb
ljmp
daa
push
push
pop
mov
mov
mov
xchg
xor
int
int
shrb
add
dec
pop
pop
push
fwait
xchg
ljmp
movsl
in
sti
or
ljmp
pop
adc
dec
sbb
inc
in
test
cld
aas
inc
push
jbe
lcall
in
mov
in
mov
lahf
and
aam
mov
imul
cmp
rcrb
mov
adc
sbb
pop
fnstenv
push
mov
movsb
sbb
mov
fiadds
xchg
xor
cld
iret
addb
add
jg
xor
repz
mov
iret
insb
xchg
inc
mov
add
pop
test
inc
jb
fimuls
push
pop
mov
adc
faddl
fldt
dec
fucom
adc
or
mov
pop
cmpsl
xchg
fs
jl
dec
cltd
inc
in
mov
xchg
out
aam
pop
andl
adc
test
jecxz
add
jecxz
dec
push
es
leave
pop
adc
in
cmc
aam
fsubrl
cld
mov
sub
mov
dec
pop
movsb
ret
orl
inc
test
inc
testb
repnz
adc
jno
mov
inc
mov
lcall
jae
cli
pusha
gs
imul
fiaddl
popa
shlb
mov
mov
jnp
pop
cltd
mov
je
mov
and
mov
lods
ror
mov
movsl
je
pop
adc
pushfw
sbb
imul
or
mov
sbb
mov
fcomip
call
push
hlt
adc
or
pop
mov
add
push
mov
push
and
jnp
cmovno
xchg
dec
aam
mov
fisubrs
les
fdivl
test
sbb
mov
pusha
xchg
adc
add
mov
loop
pop
inc
push
into
push
rolb
imul
cmp
lret
pushf
and
cwtl
or
cld
cmpsb
mov
mov
outsl
decb
or
mov
dec
cmp
aaa
sbb
gs
pop
dec
jne
push
jmp
fistpll
cmc
sbb
sbb
jmp
test
cmp
cmp
adc
dec
xchg
mov
dec
push
sub
cmp
test
negl
pushf
test
into
sbb
cmp
or
ja
mov
in
adc
addr16
lahf
xor
int3
test
cli
sbb
and
mov
call
rcll
test
push
lea
adc
xchg
hlt
or
jl
xor
sbb
aam
call
addr16
aaa
paddusw
dec
jne
adc
pop
mov
fbld
bound
leave
push
mov
add
divb
jae
test
xchg
xor
lcall
aaa
dec
inc
and
or
cli
dec
push
lea
cmp
movsl
scas
bound
stos
adc
loopne
mov
shr
lret
fucom
or
test
cld
sub
pop
shlb
jle
aas
sbb
pop
in
cld
sarb
or
and
lret
frstor
mov
adc
pusha
insb
lock
inc
mov
xor
bound
push
mov
sbb
add
push
mov
fnsave
mov
ds
dec
rorb
loop
fst
repz
js
xor
pop
mov
lock
push
xorl
or
jo
dec
push
mov
scas
pop
pop
adc
or
filds
sbb
repnz
sti
fisttpll
sbb
pop
jo
aad
imul
push
add
popf
loopne
pop
les
xor
fldl
out
out
int
or
addr16
mov
loop
cmp
sub
aaa
insl
mov
out
in
add
jnp
dec
inc
mov
pop
enterw
psrad
test
lret
loop
inc
shrl
sub
and
dec
shlb
repz
cmpsl
enter
mov
jns
in
jl
scas
jle,pn
xor
cmp
mov
push
push
adc
fs
mov
inc
mov
sbb
sbb
in
mov
push
gs
insb
stos
sub
shr
push
data16
inc
rorl
andl
nop
cld
or
push
cld
icebp
iret
pop
into
scas
arpl
in
jl
cs
add
iret
cmp
int3
loopne
in
lock
cmp
addr16
mov
gs
mov
addr16
out
fnstenv
out
lret
adc
outsl
fisubs
xchg
xchg
scas
bound
fs
loopne
cmp
pop
pop
into
and
mov
lret
dec
sarl
orl
inc
xchg
or
fstpt
ss
fs
and
aas
adc
or
nop
cmpsl
cli
into
inc
mov
jl
or
xchg
adc
lahf
sbb
jle
inc
dec
addr16
cmpsl
adc
cmp
xchg
aaa
or
sbb
fwait
adc
sub
or
dec
test
inc
int
lea
add
xchg
add
popl
adc
xchg
inc
xor
push
loopne
jmp
and
iret
daa
aaa
popa
and
jp
push
xchg
lds
fmull
xchg
jo
mov
dec
outsb
in
dec
adc
pop
jmp
lock
jge
sbb
mov
jns
iret
push
insl
push
iret
pop
in
popf
lcall
jo
xor
dec
mov
add
lret
push
cltd
jle
inc
cmp
mov
and
inc
push
movsl
out
pop
cli
fmuls
xchg
les
sbb
push
pushf
fs
add
mov
adc
imul
pop
repz
mov
fisttpll
cld
or
sub
adc
scas
fdiv
and
inc
xchg
adc
push
scas
mov
nop
dec
test
push
lcall
adc
add
mov
dec
movsl
cmp
subb
add
cmp
adc
fdivl
adc
mov
push
scas
jae
imul
mov
sbb
dec
mov
lods
mov
xor
test
mov
cmpsb
mov
and
jl
movsl
mov
mov
push
mov
and
aas
gs
test
cmp
jecxz
ljmp
pop
push
dec
stos
mov
mov
inc
roll
pop
icebp
dec
repz
mov
int3
ss
roll
testb
in
sti
cltd
pop
push
pop
mov
mov
cmpsb
les
addr16
cmc
xor
cmp
ljmp
dec
loop
cld
imul
ret
push
icebp
push
or
mov
sbb
cmp
or
dec
cld
cmp
das
pop
pop
dec
mov
daa
mov
shl
mov
push
and
mov
movsl
add
cmpsb
loopne
lea
mov
sbb
mov
enter
repnz
out
cltd
sbbb
lcall
jb
lds
xchg
pushf
push
enter
sbb
cld
mov
repz
ret
lret
pop
sbb
push
mov
or
es
leave
jge
adc
sbb
cs
mov
sbb
ja
xor
shlb
or
lcall
inc
in
push
adc
and
cmp
sbb
aas
push
mov
aas
adc
xchg
xchg
cld
xchg
adc
out
cmpsb
xor
mov
lea
and
hlt
xlat
cmp
xchg
test
in
movsb
enter
push
cld
bswap
lret
jmp
insb
stc
popl
pop
sbb
inc
fmulp
aas
repz
push
mov
ss
iret
repz
roll
or
push
inc
stos
loop
sbb
sub
cmpsb
xor
fdivrs
xchg
push
loop
lods
sub
adc
sub
shl
lahf
scas
shll
mov
pop
fs
mov
out
cmp
mov
rcrb
jecxz
mov
movsl
dec
cltd
outsb
ds
and
pop
dec
loopne
scas
mov
adc
cmp
sbb
in
ljmp
jl
fsubrs
repz
sbb
cwtl
sub
xchg
js
cmpsb
sub
pop
lret
in
out
adc
out
mov
xor
fiadds
fcoms
mov
dec
pop
push
jle
enter
and
subb
cmpsl
or
jl
arpl
fcom
cmc
ljmp
xor
xchg
fisttpl
or
je
dec
cld
mov
xchg
scas
or
aam
scas
lcall
cmp
popf
inc
and
cld
add
inc
or
and
popf
push
aam
inc
cld
adc
pop
out
pushl
xchg
mov
push
xor
lea
and
xor
fistpl
cwtl
movsl
sub
xchg
mov
inc
lea
loop
hlt
in
movsl
sub
push
push
add
cmp
adc
mov
aas
dec
mov
mov
xchg
sub
mov
push
and
inc
int
enter
dec
movsb
mov
dec
sbb
sub
mov
lods
pop
pop
xchg
jbe
es
fs
inc
mov
sti
xor
push
hlt
mov
inc
out
or
mov
mov
xchg
cld
cli
push
inc
sbb
cmc
xor
and
mov
lret
jno,pn
xor
xchg
cmp
inc
sbb
popa
mov
dec
mov
int3
jecxz
addr16
or
or
testb
lea
jecxz
mov
adc
fwait
fwait
jl
xlat
test
loop
xorb
xchg
lds
jl
lods
jp
push
test
or
xor
cmp
inc
push
dec
stos
mov
sti
mov
leave
cltd
ret
xchg
jecxz
fmull
sbb
adc
or
push
adc
mov
sub
jnp
and
daa
xor
xchg
insl
push
pop
add
in
enter
sub
push
aas
push
jp
mov
imul
lea
adc
rorl
mov
in
lret
dec
aas
push
lret
cmc
push
cmp
xchg
pop
dec
cmpsb
pop
push
scas
icebp
mov
push
mov
cwtl
sbb
xchg
subl
ret
clc
pushf
daa
or
pop
xor
add
lret
push
cld
jno
and
jl
or
decb
dec
push
jg
xor
dec
addr16
mov
insl
dec
bound
repz
sub
mov
test
cmpsl
shll
lods
inc
and
push
shr
out
jge
inc
push
aad
movsl
into
add
xchg
xchg
popa
movsb
xor
outsl
or
sub
pop
add
cli
xor
jb
and
inc
imul
sti
add
cmp
xor
xor
sbb
icebp
aas
in
add
les
or
inc
pop
or
sub
aam
fisttpll
adc
pop
or
movsb
cmp
mulb
loop
add
xchg
mov
mov
mov
or
mov
mov
inc
and
pop
out
inc
xor
dec
xchg
mov
loope
outsb
loop
inc
fdivrs
cmp
lea
fstps
sbb
ds
aad
mov
inc
repz
loopne,pn
pop
sar
add
mov
mov
sbb
cmpsl
out
aas
push
xor
cmpsl
xchg
ja
mov
lods
dec
pop
stos
xchg
lods
testl
js
add
lock
scas
dec
aam
clc
sbb
adc
daa
icebp
sti
popa
stos
jle
jmp
xor
dec
outsl
mov
test
push
lahf
loop
stos
push
clc
negl
movb
lcall
test
mov
pop
add
inc
cmpsl
mov
jl
call
movsb
sbb
mov
scas
push
sub
mov
leave
sti
and
lcall
xor
pop
ret
add
push
xor
pop
aad
xchg
adc
into
loopne
xchg
rcrl
repnz
pop
jo
jbe
inc
lcall
mov
ret
xor
sti
movsl
aaa
pop
xchg
repz
stc
adc
cld
sahf
adcb
sbb
pop
mov
push
sbb
mov
aad
adc
or
les
lea
mov
sbb
outsl
mov
pop
xor
inc
cld
pop
jecxz
inc
cs
fcompl
cmp
lret
pop
cmp
cmp
mov
insb
lea
cmpsb
inc
jno
mov
fildl
pushf
push
adc
dec
mov
inc
mov
mov
aas
jne
mov
dec
in
and
ss
xchg
mov
jmp
cmp
ret
mov
xor
or
and
call
dec
inc
xchg
mov
jne
cwtl
lock
adc
push
fwait
mov
shlb
outsl
in
and
dec
cld
ljmp
xchg
imull
sub
sbb
mov
adc
roll
mov
fstps
mov
dec
int3
pop
sbb
lods
mov
cmp
pop
mov
pop
xchg
bound
fsubrs
sbb
mov
mov
fcoml
loop
pushf
dec
in
lret
out
outsb
scas
adc
push
les
jg
push
dec
mov
fnstcw
popf
iret
nop
lock
std
cmpsl
call
movsl
in
dec
cmp
add
call
adc
mov
push
dec
sbb
jno
sbb
xchg
push
and
pop
xor
test
sbb
push
aas
mov
mov
adc
lahf
xchg
dec
outsb
loop
mov
in
repz
rcr
push
movsb
jl
add
iret
cmp
gs
jl
sub
or
int
push
stc
xchg
pusha
xchg
xchg
and
cmp
adc
mov
ret
push
ret
pop
xchg
jo
dec
push
sbb
addb
adc
cwtl
or
lods
lods
cwtl
mov
mov
movsl
aaa
int3
clc
mov
imulb
dec
push
cmp
push
cmp
jge
mov
mov
cmp
mov
out
aas
inc
mov
aam
movsl
sbb
cmpsl
mov
mov
jl
movsb
adc
xlat
rcrb
into
test
loopne
js
sub
or
jnp
loope
sub
mov
repz
or
xchg
mov
stc
ret
das
and
mov
int3
mov
cwtl
sbb
xlat
ja
lahf
mov
sbb
xor
repz
ja
clc
cltd
add
lods
lds
lret
pop
sub
or
aas
sbb
pop
andb
mov
sbb
out
ret
stos
mov
fnstcw
inc
inc
fsubrl
dec
out
inc
fdivl
jle
jae
je
ret
ret
cmpsl
rol
clc
mov
enter
fisttpl
and
pop
imul
mov
scas
mov
lea
jg
rorb
cld
lds
aas
fadds
push
pushf
push
pop
scas
test
sub
push
xchg
sub
cwtl
push
cmp
sbb
inc
adc
fildl
cld
fisubs
imul
and
in
dec
add
lods
dec
ljmp
pop
scas
repz
enter
sbb
add
lds
mov
xchg
add
jl
repnz
mov
test
pop
cwtl
fidivrl
repnz
stos
jbe
lret
repz
jnp
movsl
push
push
pop
notb
sbb
and
pop
aad
dec
mov
loopne
push
mov
jno
out
add
in
mov
cmp
les
lahf
in
sbb
dec
mov
ficomps
dec
inc
lahf
jmp
insb
test
mov
inc
cmp
sbb
cltd
sbb
pop
pop
or
jl
cmp
adc
add
cmc
add
sbb
xchg
sbb
mov
out
call
or
clc
mov
sbb
cmpsl
popf
aas
in
xchg
movsl
aam
or
inc
movsl
mov
pop
pop
icebp
call
fcomip
andb
leave
adc
sbb
cmp
nop
mov
ss
addr16
cmovs
cwtl
mov
mov
jb
lahf
xchg
flds
cld
inc
mov
aaa
inc
or
xchg
lea
cld
mov
sar
aaa
cltd
dec
enter
xor
adc
test
adc
hlt
aas
popa
adc
or
mov
jne
dec
movsl
sub
fidivrl
jp
push
dec
jo
sarb
mov
ljmp
pop
and
push
shr
cwtl
mov
sarl
rolb
and
cltd
mov
aas
pop
lcall
sub
lcall
lret
stc
das
xchg
in
mov
loope
into
scas
loope
fs
stos
dec
sub
lds
sub
and
sub
push
scas
lcall
pop
mov
nop
sub
enter
cmp
cmpsb
sub
mov
adc
repz
cwtl
push
cld
out
int
out
es
das
xchg
fsts
dec
lods
into
fmul
cmp
adc
pop
cmp
jl
or
sbb
and
mov
bound
es
jecxz
sbb
add
cmpsb
cld
jbe
in
aam
mov
add
out
sbb
jbe
adc
fidivl
or
jp
jl
jecxz
fistl
sti
cmc
pop
mov
or
jbe
inc
shlb
push
or
mov
mov
aas
mov
stos
jge
sbb
xchg
mov
dec
lods
cmpsb
stc
loopne
jmp
adc
nop
mov
fbstp
pop
ss
in
ficoml
push
ret
sbb
das
xlat
cmc
in
orl
lahf
pop
loop
dec
es
adc
cmpsb
inc
or
jmp
lods
adc
outsb
push
movsb
loope
inc
or
stos
pop
int
xlat
jle
push
outsl
and
es
or
inc
mov
xchg
icebp
test
dec
xchg
xchg
xchg
jae
sbb
xor
gs
pop
pop
jl
dec
mov
mov
pop
xchg
aas
adc
cmpsl
add
mov
adc
xchg
jmp
sbb
push
adc
dec
not
loope
es
xor
sub
insl
fsubrs
in
leave
lea
xchg
xlat
jp
mov
dec
xchg
sub
or
sbb
sbb
pop
lcall
das
mulb
xlat
inc
and
cmp
adc
pushf
jle
dec
rcll
dec
xor
or
mov
iret
mov
push
popa
sbb
ss
fdivrl
pusha
inc
or
fs
pop
data16
stc
adc
push
lret
rclb
fcmovbe
xchg
adc
cld
mov
pop
adc
dec
sbb
xchg
out
out
push
inc
fsubs
aam
stos
fbstp
sub
loop
dec
shr
xor
pop
sub
out
cmpsb
dec
dec
lds
das
xchg
rcrl
push
pop
lods
sub
cmpsb
cmp
inc
xchg
or
pop
xor
inc
mov
notb
into
adc
mov
rorb
aas
mov
sbb
loopne
js
and
mov
cmpsl
cwtl
or
inc
sbb
jb
movsb
dec
push
mov
cli
xor
pop
popf
jmp
int
mov
xchg
xor
sbb
jns
orb
xchg
cld
aas
out
push
adc
dec
mov
in
xchg
and
gs
rolb
push
movsl
movsb
adc
mov
lret
xor
cmp
iret
dec
mov
xchg
mov
jae
ffreep
add
mov
sbb
xchg
mov
mov
xchg
adc
scas
cmpsb
arpl
dec
pop
mov
mov
or
pop
jecxz
cmp
xlat
xlat
inc
pop
je
clc
dec
push
lods
hlt
lret
sbb
push
inc
fld
movsb
jl
adc
outsb
insb
repz
sbb
xchg
insl
push
orl
stos
ss
jl
idivl
pop
jl
sub
and
not
dec
mov
popf
in
aaa
inc
jo
push
inc
pop
xor
das
add
or
movsl
add
nop
push
jb
inc
fiadds
lret
mov
jle
fwait
and
pop
pop
test
pop
mov
bound
pop
jecxz
jge
icebp
dec
mov
sar
and
popa
adc
test
pop
xchg
mov
rclb
test
xchg
mov
mov
jne
cmp
fistpl
repz
mov
cmp
scas
mov
mov
fisttpl
add
shrl
or
or
lds
sbb
or
mov
inc
xor
xor
push
inc
push
mov
xor
sub
dec
and
fwait
xchg
push
cld
ljmp
xor
pop
pop
fwait
inc
ja
iret
int3
js
xchg
fstps
lods
or
xchg
xor
jne
add
ss
sbb
adc
ljmp
add
or
adc
pushf
movsl
mov
cmp
fistl
iret
jns
push
jecxz
cmp
mov
les
sbb
pushf
loop
daa
adc
mov
xchg
outsl
mov
mov
sbb
jmp
repz
mov
cmpsb
enter
pop
int3
add
or
ds
xor
inc
add
fdivs
mov
popf
in
fidivrs
addr16
pop
aas
ficoms
xor
and
and
test
mov
popf
sbb
xor
not
into
adc
imul
xchg
mov
ret
or
push
cld
pop
imul
xchg
insl
in
aas
inc
adc
mov
lods
cmp
mov
outsb
mov
leave
cmp
movsl
movsb
inc
cltd
dec
adc
bnd
pop
addl
out
call
push
pusha
stc
mov
add
fsub
push
lcall
push
fs
fcmovb
movsl
in
mov
arpl
push
adc
test
mov
xor
sub
jp
or
sub
sbb
cs
enter
xchg
out
lret
push
inc
shlb
dec
xor
and
aaa
fisubl
in
cmc
mov
iret
mov
popf
int
mov
orl
repz
pusha
imul
sahf
fistpll
xchg
in
sub
pop
adc
sbb
xchg
pusha
adc
jmp
add
stos
cltd
mov
je
jno
rorl
loopne
mov
xor
fdivrs
push
inc
cwtl
sar
int
jb
jno
and
in
cltd
iret
adc
cld
subb
imul
fstl
flds
fdivrs
out
and
mov
dec
mov
mov
mov
popf
dec
and
mov
pop
out
enter
push
sbb
movsb
mov
je
insb
mov
push
repnz
and
mov
sub
jne
subl
adc
mov
inc
imul
subb
xor
xchg
push
je
add
cmp
scas
pop
jb
push
lds
lret
cli
and
inc
mov
lods
and
sahf
pushf
lcall
loope
dec
cld
movsb
push
repz
push
sbb
into
hlt
jae
insb
push
xor
fistpl
xor
xor
jmp
aas
hlt
stos
adc
loopne
adc
dec
int3
mov
ret
nop
adc
leave
inc
mov
popf
dec
xchg
sbb
js
stos
push
in
add
fcoml
mov
xor
fildl
rcll
stos
repnz
daa
fwait
jl
cli
and
pop
dec
add
or
sbb
ljmp
sub
push
adc
push
stos
popa
add
xor
sbb
xor
test
adc
adc
xchg
mov
aam
movsl
out
push
sub
add
scas
jb
xchg
xchg
dec
rorl
or
ret
loopne
pop
daa
inc
adc
fisttpll
adc
adc
ret
mov
cwtl
mov
cld
jne
repz
pop
xor
test
cwtl
jp
sbb
xrelease
bound
or
xchg
ss
scas
xor
call
push
incl
push
mov
and
jl
xchg
enter
inc
loope
dec
jns
clc
mov
push
inc
sub
sbb
outsl
lods
not
mov
cld
jns
sbb
and
add
lock
lods
cltd
or
cmpsb
stos
inc
scas
jl
dec
aam
out
dec
push
lcall
mov
stos
test
mov
scas
insb
and
cwtl
lret
xchg
mov
inc
jae
or
push
pop
jl
xor
mov
mov
pop
and
adc
sub
fistps
sbb
fiaddl
fcomi
xor
loopne
cmpsb
sub
adc
ret
jae
pushf
cld
faddl
mov
icebp
jg
jno
out
mov
jae
pop
fidivrl
cmpsl
add
dec
shlb
add
out
add
mov
sbb
inc
pop
jl
int3
lahf
pop
pushl
mov
loopne
hlt
jl
add
adc
mov
cmp
scas
jnp
or
push
std
dec
fildll
jp
dec
aas
ja
vmwrite
dec
orb
mov
cli
or
or
fsubl
popf
cld
inc
mov
adc
sub
sbb
mov
xor
mov
in
cmp
scas
or
sbb
fadd
cld
xorb
popa
inc
add
xor
mov
jae
ret
inc
xor
lret
ficompl
push
and
outsl
clc
das
sbb
test
inc
sbb
xchg
push
mov
add
mov
fsubrp
mov
out
pop
and
ss
pop
pop
fisubrs
cmp
mov
dec
movsl
xchg
popa
insb
roll
adc
xchg
push
or
and
push
xchg
push
jmp
or
pop
push
test
and
xor
rolb
movl
mov
inc
dec
sbb
push
sub
adc
inc
cld
mov
mov
mov
ret
mov
lret
jp
push
lods
ds
push
icebp
stos
sbb
jl
xchg
pop
dec
out
jbe
adc
and
pusha
mov
ret
push
cld
out
mov
xchg
adc
add
int
dec
push
xchg
push
sahf
das
jg
movsb
mov
icebp
stos
iret
in
daa
out
out
jnp
dec
cmp
rcrl
pop
or
loop
cld
fcomps
in
and
adc
sahf
pushf
push
int
inc
cld
lahf
ret
and
rcrl
and
repz
sub
test
adc
rorl
aas
lret
xchg
push
js
loop
int3
dec
pop
xchg
je
pop
das
test
ljmp
cmp
repz
imul
or
adc
or
ljmp
lds
mov
adc
inc
cmpsl
add
cltd
shll
mov
dec
pop
mov
jno
sub
or
mov
push
dec
out
or
test
lcall
xor
test
movsl
imul
xor
cmp
xor
stc
pop
movsb
dec
inc
xchg
mov
xchg
pushf
call
mov
inc
add
inc
cmpb
adc
repz
cmp
cld
subb
mov
add
cld
insl
adcb
out
loop
sub
cmpsb
lret
pop
cmpsb
aaa
sbb
fmuls
ds
dec
pop
lcall
cmpsl
jp
dec
inc
inc
mov
ds
xchg
jecxz
repz
pop
hlt
fbld
fcoml
jl
sub
cmc
jp
js
dec
enter
cwtl
repz
add
pop
xchg
ja
dec
mov
sub
imull
sub
lahf
pop
push
mov
pushf
xchg
inc
jg
sbb
popa
cld
lock
xchg
gs
xlat
imul
call
dec
push
xchg
and
mov
je
mov
repz
xchg
xor
push
push
loopne
mov
cld
mov
adc
enter
xchg
dec
aas
cli
cmp
xlat
pop
mov
clc
sbb
stos
xchg
clc
cmp
adc
jae
clc
jmp
inc
add
test
mov
cmpsb
popa
aas
addr16
dec
test
lcall
ror
cmp
xchg
out
jecxz
shr
xchg
in
scas
fldt
push
or
and
cli
fadd
imul
repz
inc
repz
dec
mov
push
daa
xchg
mov
sbbl
adc
or
pushf
pop
scas
adc
in
popf
adc
push
sbb
cmpsb
inc
fsubr
lods
mov
jle
push
ss
and
cmpsl
cld
movsb
inc
lock
rcll
jmp
push
cld
fisttpll
movsl
inc
xor
dec
movsl
or
cmc
adc
mov
movsl
pop
jecxz
js
dec
mov
cmp
cld
xchg
and
mov
mov
pop
fcmovbe
pop
xchg
dec
loope
nop
stc
adc
mov
subb
sarb
fsubl
mov
xor
add
fists
fwait
cwtl
sub
cld
add
push
cmp
dec
xlat
dec
sub
dec
mov
js
aam
scas
ljmp
sbb
icebp
inc
out
push
pop
loope
pop
xchg
fsubrp
push
or
cmp
mov
imul
in
icebp
add
pushf
inc
xchg
dec
jmp
addr16
aaa
mov
pop
gs
jecxz
push
sbb
cld
lods
loopne
inc
xor
bnd
xchg
push
int
pop
dec
inc
or
xchg
jb
clc
sub
sbb
out
jne
outsl
jmp
adc
sub
clc
or
aas
or
pop
xchg
shll
jns
xor
jno
aaa
or
dec
cmpb
cli
inc
lods
jecxz
and
cld
insb
cwtl
or
out
and
add
or
cmp
mov
jb
mov
sbb
cmp
xor
fwait
add
sbb
mov
or
jp
ficompl
lds
sub
adc
clc
mov
inc
cmp
loope
xchg
mov
lea
mov
jb
jmp
out
pop
lea
add
pop
add
popf
pop
jle
cmp
jae
lods
arpl
rorl
adc
aas
out
xor
sbb
pushf
mov
mov
xor
sbb
jns
in
addr16
jno
lods
pushf
mov
pop
jb
imul
and
rcr
popf
jmp
cmp
cmp
scas
cli
sub
xchg
sti
pop
mov
call
push
inc
ss
cmp
cltd
aas
xchg
cmc
cld
jnp
adc
repz
xor
inc
shrl
adc
lods
lcall
mul
mov
sbb
inc
das
mov
aam
push
adc
in
out
call
into
bound
clc
add
cmp
hlt
push
fs
push
push
repz
push
mov
cli
cmp
push
adc
xor
mov
out
jne
sub
mov
mov
xor
cmpsl
push
icebp
fiaddl
sub
fcomip
dec
mov
dec
cmpsl
push
insb
push
cli
cmp
xchg
mov
out
or
lret
pop
in
lea
push
pop
xchg
mov
iret
and
jmp
popf
shr
sbb
int3
cmp
test
icebp
push
mov
stos
push
pop
pop
xchg
popa
or
sub
test
aam
cwtl
insl
inc
pop
cmpsb
cmp
mov
jno
cli
or
inc
repnz
mov
mov
cli
mov
adc
or
stos
scas
pop
rcr
outsl
sbb
inc
cld
repz
out
pop
adc
in
xchg
bnd
mov
pop
shr
cmp
cli
dec
fiadds
xor
das
mov
jg
or
push
sub
stc
xchg
xor
lret
call
adc
loope
fmull
ret
dec
mov
shlb
cmpb
dec
movsl
xor
and
inc
adc
dec
pop
cld
in
add
mov
adc
cmp
mov
lret
or
into
or
loope
stos
xchg
fiadds
pop
and
or
adc
dec
dec
push
inc
or
inc
dec
xchg
dec
inc
fldcw
and
ds
push
data16
sar
pop
lods
in
jnp
push
push
sub
xchg
cli
adc
xor
clc
sub
cmpsb
test
xor
xchg
outsb
mov
divl
mov
sbb
adc
dec
loopne
lds
nop
and
js
dec
mov
iret
pop
movsl
push
fs
xor
icebp
inc
inc
clc
xchg
mov
or
or
mov
stos
mov
adc
jmp
ds
shlb
mov
test
inc
or
jp
or
scas
fwait
cmpsb
dec
adc
mov
std
jae
or
outsl
out
push
cld
mov
out
xchg
adc
mov
fmull
push
xor
pop
cld
xor
mov
ret
xor
xchg
movsl
mov
sbb
mov
andb
mov
and
mov
mov
lock
push
sbb
and
loop
lea
ret
rolb
lea
xchg
ss
dec
cmp
mov
test
lods
mov
xchg
shl
test
inc
add
in
dec
dec
jl
or
mov
xor
repnz
push
popf
sbb
stc
xchg
mov
cmpsl
cmp
xor
mov
mov
pop
or
mov
xor
stc
daa
lods
xchg
jae
es
fsub
cmp
xchg
fwait
sti
div
inc
cmp
pop
iret
jnp
enter
cmpsl
in
repnz
jns
scas
jle
inc
pusha
or
and
adc
push
out
enter
push
and
adc
outsb
push
inc
mov
pop
psrlw
rorl
mov
jl
imul
mov
outsb
mov
or
xor
dec
push
ds
lods
xchg
movsb
sbb
nop
inc
ret
pop
sbb
cld
xorl
aas
movsl
push
ret
mov
adc
scas
mov
movsl
data16
adc
jb
add
push
xchg
mov
dec
in
fstpt
jp
mov
and
je
iret
sbb
ds
mov
or
push
sti
cmc
enter
adc
inc
insb
aaa
and
xchg
sub
out
fisubl
cmp
sub
adc
and
imul
icebp
hlt
jbe
dec
loop
arpl
lods
jo
jae
inc
mov
pushf
scas
jmp
sti
cld
sub
xor
rcr
and
mov
lcall
and
xor
sahf
aas
xor
mov
ljmp
repz
divb
mov
adc
addr16
out
push
pop
pusha
icebp
je
lods
add
xor
aad
scas
repz
push
xor
xchg
scas
roll
loope
push
out
push
loope
sub
jl
cmp
push
nop
movsb
stos
sbbl
test
imul
out
inc
in
inc
mov
cmp
aam
js
cmp
push
addr16
mov
testl
adc
add
inc
fiadds
xchg
insb
scas
mov
pop
sbb
push
sbb
inc
jle
mov
clc
mov
adc
sbb
je
dec
xor
or
sahf
lret
lret
xor
inc
mov
add
push
stc
and
mov
xor
jmp
push
mov
adc
dec
pop
inc
cmp
xchg
jne
icebp
push
cltd
push
mov
out
lds
dec
jle
push
lcall
loopne
call
dec
jl
leave
cmp
int3
cmp
aas
popf
sbb
xor
mov
gs
repz
jecxz
aaa
add
jns
aas
cmpsb
push
sub
lods
inc
sub
mov
push
cld
out
pop
rclb
lea
stos
xorb
adc
or
add
repz
imul
xchg
push
push
cld
or
pop
mov
faddl
fsub
jp
xchg
inc
lods
pop
sti
jp
inc
icebp
test
iret
mov
mov
sbb
int
popf
rolb
fistl
cmpsl
in
xchg
adc
and
dec
enter
mov
mov
mov
fwait
nop
test
iret
adc
cld
pop
inc
test
loopne
inc
jne
xor
dec
adc
mov
daa
sub
jne
pop
test
jl
mov
jecxz
or
std
mov
dec
push
adc
cmp
cmp
sbb
pop
es
xor
or
sti
add
sub
mov
pusha
push
mov
rcll
pop
fptan
push
or
imul
adc
cltd
lds
loopne
sub
adc
xor
xor
mov
test
dec
cld
add
orb
js
sub
hlt
jge
loopne
inc
inc
insb
xchg
orl
out
add
dec
int
out
fcomps
jl
sbb
insb
cld
fistps
movsl
jbe
fisubs
jl
and
je
pop
cmp
jp
xor
jl
sti
cmp
fadd
mov
paddq
mov
jb
in
cmc
rol
cld
adc
fbld
mov
and
ds
roll
movsl
test
fwait
mov
jnp
mov
les
cmc
cmp
dec
not
jecxz
cli
lret
or
cmp
jns
cmp
call
stos
sbb
dec
fwait
xchg
adc
repz
daa
fnsave
imul
jmp
aas
inc
ds
notl
call
imul
mov
test
mov
sub
inc
jl
push
leave
lods
into
scas
dec
xorb
xor
repz
or
lcall
rcrl
comiss
and
lods
xchg
sbb
mov
aaa
mov
lcall
mov
ret
fistps
inc
jl
lcall
lcall
lea
andl
adc
dec
icebp
or
cs
repz
push
mov
jg
sbb
xor
bound
in
xor
inc
inc
negl
cmp
push
arpl
aaa
mov
js
push
add
xchg
cmpsb
ss
cld
shlb
mov
sbb
out
sti
xchg
mov
mov
push
inc
jmp
jle
sbb
xor
mov
cmpb
lods
cmp
cmc
int3
gs
sub
movsl
jle
push
sti
or
shl
test
mov
mov
stos
roll
adc
xlat
jne
lods
jp
lea
jg
dec
cmp
cld
scas
ret
jl
pop
mov
sbb
dec
outsl
pop
dec
adc
adcb
loop
mov
xor
aam
adc
test
daa
ljmp
repz
ss
pop
fldcw
lret
xorb
cwtl
repnz
push
movsl
aaa
shll
dec
hlt
out
insb
xchg
cmpsl
mov
sbb
mov
dec
imul
adc
stos
clc
fs
xor
mov
mov
enter
adc
jns
leave
jb
rcrl
push
mov
cmp
push
into
test
xchg
cmpsb
out
mov
pushf
sbb
sub
push
push
scas
fistl
pop
push
pop
jl
cmp
test
cmp
adc
fistpl
cli
shlb
inc
add
gs
mov
lcall
push
xchg
jno
pop
fsubrs
push
xchg
add
int3
lea
loope
fsts
sahf
xchg
ljmp
mov
inc
xor
push
idivb
mov
lcall
jl
push
or
cmp
lods
xchg
aad
aas
es
fiaddl
lods
mov
pusha
pop
ljmp
insl
es
adc
sbb
xchg
sarb
gs
mov
outsl
fs
push
pop
cld
cld
xchg
jno
push
add
das
push
sub
xlat
pavgb
cmc
mov
shlb
repz
stc
and
out
insb
xor
push
adc
mov
add
incl
jl
or
fsubr
loope
insl
xchg
aas
std
xchg
or
sbb
mov
adc
pop
or
out
mov
inc
cld
push
push
cs
clc
out
imul
ret
inc
push
sbb
jno
or
sub
jbe
cld
sahf
mov
imul
stos
xchg
es
mov
ret
push
push
hlt
outsl
imul
cmp
or
out
hlt
mov
jbe
scas
icebp
push
ljmp
lahf
sub
mov
xorb
and
and
sbb
loop
insl
inc
cmpsb
imul
mov
adc
fimuls
insl
xchg
dec
dec
xchg
in
xor
daa
xchg
cmpsb
ljmp
mov
popf
dec
dec
dec
add
loop
scas
xlat
repz
int3
sti
test
pushf
ljmp
addb
push
xchg
mov
inc
xor
je
xor
or
arpl
out
mov
insb
icebp
xor
push
push
int3
and
push
dec
mov
mov
jecxz
loope
js
inc
ret
mov
dec
pushf
add
sti
xchg
and
xchg
repz
xchg
pushf
testl
cmc
test
movsl
xchg
lret
mov
lods
sbb
call
scas
push
pop
add
or
mov
add
out
test
mov
jge
adc
mov
repz
jmp
fmulp
xor
fs
cmpb
loope
inc
cmp
ja
out
mov
push
test
cmp
jl
nop
mov
xchg
xor
aas
lret
cmpsb
cmp
xchg
adc
xor
fbstp
sub
in
add
lods
lds
cmp
imul
shr
ljmp
pop
pushf
cmc
pop
push
inc
mov
cmp
xchg
inc
cmp
mov
cltd
sbb
dec
xor
popa
ret
mov
mov
aaa
xchg
pop
or
mov
outsl
dec
push
pop
or
inc
out
repz
lret
leave
arpl
cwtl
push
dec
cld
dec
loopne
xchg
leave
iret
and
icebp
add
adc
adc
inc
mov
dec
aas
insb
test
mulb
gs
sti
xor
sti
and
out
ljmp
xchg
leave
pop
insb
adc
repz
aam
mov
cmpb
mov
lods
mov
jl
aaa
outsl
les
addb
data16
pop
je
js
mov
fwait
push
push
xor
cmp
or
cmp
dec
outsb
test
and
and
cmp
movsb
pop
lahf
xchg
or
inc
fcomi
pusha
mov
and
adc
mov
inc
or
sbb
xchg
loope
icebp
or
out
cwtl
pop
mov
pop
inc
xchg
inc
test
cmp
inc
mov
loope
lcall
jbe
jns
pop
popf
push
push
sbb
cld
sbb
mov
int
fisttpl
cmp
jmp
ret
mov
mov
movsl
imul
dec
popa
or
shll
push
push
out
jns
aas
and
enter
add
add
pop
lcall
xlat
fcmovnu
adc
repnz
imul
ss
lret
int
shll
repnz
dec
cmp
fwait
aam
into
cld
lahf
or
test
in
fwait
inc
jl
ljmp
arpl
add
fildll
ja
sub
xor
fucomp
clc
lcall
push
es
mov
repz
jns
lock
int
adc
clc
pop
fcmovb
inc
jmp
mov
not
inc
icebp
or
dec
mov
lcall
loope
fdivl
lods
jbe
pop
xchg
xor
dec
xchg
testl
fimull
xor
push
andb
add
dec
mov
out
xchg
xchg
repz
sbb
divl
inc
test
int3
das
jo
aas
sahf
xchg
adc
cltd
outsl
dec
sub
dec
repz
cmp
lahf
pop
add
inc
fldl
jno
inc
out
xchg
cld
cmp
popf
adc
xchg
push
push
lods
or
pop
inc
cld
ss
iret
push
mov
mov
or
fidivs
mov
ss
mov
movsb
xor
mov
xor
bound
ret
dec
mov
je
xor
add
frstor
mov
mov
js
sbb
jae
sub
loopne
pop
cmp
aas
mov
repz
jecxz
movsb
fwait
pop
les
dec
test
xchg
mov
repz
cmp
rolb
ret
rorb
dec
mov
push
out
cmp
cmpsb
loopne
test
shlb
sbb
xlat
int3
jbe
adc
xchg
int
push
or
dec
lods
inc
or
lods
xchg
and
or
mov
into
add
mov
movsl
nop
orb
or
xor
add
vhsubpd
movsb
jl
or
mov
and
and
jl
inc
inc
fbstp
push
lock
sub
aaa
jb
mov
xchg
repz
inc
rcll
les
out
cmp
stos
stos
push
inc
xchg
dec
adc
jp
push
mov
movswl
fwait
movsl
mov
repz
div
int
rclb
add
xchg
dec
cmp
jae
sbb
addr16
pop
rorl
call
pushf
add
pop
xchg
mov
pop
rorl
lahf
push
addb
out
dec
xchg
fimull
mov
fs
mov
in
lea
dec
push
insl
lret
ror
sub
jge
push
push
jp
pop
imul
jmp
cwtl
out
cld
outsb
dec
cli
dec
dec
cmp
cmp
sub
xchg
fisttpl
mul
ja
aas
dec
xchg
aas
inc
clc
adc
repz
or
and
pop
mov
ljmp
sbb
inc
cmpsl
mov
xor
repz
lret
cld
lret
xchg
inc
pop
push
dec
test
push
push
lret
inc
shrb
pop
inc
dec
xor
out
sbb
aas
dec
xchg
lods
cltd
fldcw
add
jle
add
jmp
fcomip
and
jl
cld
sahf
cmpsb
out
or
or
push
mov
dec
out
dec
mov
in
push
es
mov
shll
in
mov
lcall
call
sub
inc
lcall
loope
xchg
mov
adc
mov
cld
out
xor
pop
loop
test
sbb
and
cltd
sbb
xchg
int3
test
or
cli
mov
fistl
adc
add
xchg
cli
inc
jl
loopne
notrack
xchg
inc
adc
inc
dec
rorl
js
mov
ret
mov
inc
inc
dec
dec
inc
xor
cmp
inc
sbb
movsl
call
or
jne
pop
xchg
fsubs
mov
pop
pop
out
pop
push
mov
jecxz
cwtl
shld
cmp
int3
cmp
in
push
clc
ficoml
mov
fpatan
cs
dec
bound
xchg
lock
jp
push
cmpsb
sbb
pop
lea
cwtl
int
push
sub
jecxz
add
outsb
sbb
inc
cld
sbb
add
pop
sbb
or
pop
int3
in
icebp
out
out
xlat
in
dec
lahf
jmp
leave
pop
andb
add
inc
xor
or
push
lret
or
frndint
testb
sub
out
push
cmpsb
rcrb
push
lds
or
dec
xlat
pushf
or
sbb
dec
inc
cmpsb
push
xchg
pop
adc
inc
sbb
and
inc
or
adc
xor
adc
dec
lret
cld
push
or
addr16
jbe
sub
mov
in
aam
lahf
gs
sahf
or
aaa
dec
inc
cmp
jbe
insb
mov
idivb
mov
repnz
or
outsl
cltd
jge
xchg
lods
xchg
inc
inc
mov
dec
lods
and
fs
pop
adc
xlat
ret
mov
repz
sub
out
lods
pop
popf
push
mov
inc
pop
test
popl
pop
push
movsb
xchg
xor
xchg
add
and
lret
lahf
subb
push
push
sub
mov
cltd
dec
adc
inc
in
mov
adc
sti
and
jl
pop
xor
je
jle
push
jmp
stos
mov
push
mov
aaa
lock
lahf
scas
gs
fdivr
sub
repz
mov
fiaddl
dec
lea
lcall
movsb
cmpsl
cmp
rep
sbb
ret
test
dec
int3
cmovp
mov
mov
cmp
iret
cmpsb
cmpsb
sbb
pop
fldcw
pop
iret
sub
xchg
mov
scas
lods
and
inc
sbb
push
push
cmp
addr16
mov
cld
cmp
xchg
cmp
cltd
stc
and
jecxz
in
dec
lods
enter
fcomp
xor
pop
mov
gs
fstl
jmp
lret
in
sbb
divb
cmp
jg
cld
loopne
mov
mov
cwtl
hlt
adc
push
sets
or
je
outsl
repnz
aam
lods
js
orb
dec
fsts
xor
shll
lahf
cmpsl
cld
cmpsl
loope
ljmp
xchg
push
or
xchg
push
cmc
orl
loope
ja
sar
jne
and
addb
jl
mov
push
xor
aad
adc
cmp
insl
js
in
or
pusha
mov
orl
lcall
fdivp
repnz
lcall
pop
mov
inc
dec
jp
xchg
mov
mov
adc
stos
or
mov
in
test
mov
add
lock
xchg
into
iret
lock
cmp
sbb
cld
and
push
call
aaa
insl
xchg
add
and
out
mov
jmp
mov
jecxz
and
adcl
xchg
sbb
xor
and
cmpsl
and
cld
scas
jg
inc
mov
sbb
dec
movsb
notl
int3
iret
xor
aas
repz
mov
xor
stos
inc
ret
inc
pop
or
xchg
int
push
mull
add
add
inc
jg
mov
add
push
xor
xchg
mov
inc
lods
adc
fldt
and
stos
push
sub
les
xchg
cld
fwait
jbe
inc
cmpsb
dec
mov
pusha
adc
inc
out
or
push
and
xor
jp
pop
aaa
outsl
add
dec
aaa
out
xor
xchg
push
or
cld
hlt
mov
adc
push
jmp
dec
sbb
dec
movsl
imul
test
lcall
dec
jge
data16
push
sub
hlt
add
dec
dec
inc
sbb
push
test
fmuls
repnz
aaa
aaa
fcmovu
sbb
bound
mov
stos
xor
iret
xor
inc
mov
arpl
les
add
mov
sub
rcr
pop
and
jno
xchg
cmpsb
gs
mov
xor
or
andb
mov
or
dec
mov
jg
testb
mov
dec
mov
dec
adcl
jmp
rcll
push
sbb
jp
test
add
out
inc
mov
mov
out
pop
movsl
push
and
mov
jo
xor
pop
mov
mov
mov
xchg
daa
out
jle
out
mov
mov
mov
push
loop
flds
iret
lret
sbb
or
adc
pusha
pop
filds
sbb
not
test
cmp
outsl
daa
mov
in
push
cmpsb
mov
or
pop
lds
roll
xor
dec
cld
leave
xchg
or
xchg
fiadds
lods
loopne
pushf
push
jae
sbb
jecxz
icebp
test
mov
icebp
cltd
cwtl
cmp
mov
ja
scas
gs
rolb
decl
mov
cs
std
lcall
icebp
push
cmpsb
rorl
pop
ljmp
mov
movsl
mov
push
xor
and
ficoms
aas
and
or
xlat
sbb
cld
or
or
mov
roll
dec
sbb
data16
sub
dec
stos
int
xor
fs
adc
cmp
dec
xchg
sbb
adc
dec
jb
mov
fs
push
xchg
jae
xlat
cwtl
sbb
les
xchg
outsl
jmp
pop
inc
push
je
xor
clc
test
push
or
inc
mov
out
mov
and
popf
sahf
jl
or
mov
inc
outsw
sbb
push
notb
push
icebp
adc
or
cltd
push
aas
test
jecxz
test
pop
rep
lods
jbe
push
outsl
dec
imul
lods
fcompl
in
bound
jl
addr16
cld
repz
shll
mov
ret
dec
jp
cld
jmp
or
mov
adc
scas
lods
push
adc
mov
cmc
adc
cmp
mov
sbb
xchg
je
mov
fadds
pop
and
into
pop
cwtl
ret
repz
mov
imul
data16
lods
fs
or
and
mov
push
sub
adc
sbb
fldenv
sti
sbb
adc
into
fs
loope
ret
enter
jl
adc
cld
imul
mov
pop
sub
out
pop
test
fwait
inc
sub
and
push
ss
or
imulb
inc
push
fildl
shlb
cld
cmp
in
data16
xchg
xor
jns
mov
jmp
inc
subb
sbb
or
pop
ja
and
sbb
adc
add
mov
outsl
xor
sahf
mov
xchg
mov
push
add
incb
mov
cld
jns
cmp
in
or
push
add
pusha
sahf
mov
jmp
repnz
add
adc
sti
shll
bound
cmp
mov
es
test
and
mov
pop
sbb
push
and
jmp
push
mov
and
jl
popf
ja
addb
add
and
sub
in
adc
cmc
lods
shll
insb
repz
hlt
in
fnstenv
jp
jnp
shll
adc
or
xor
in
cmpsl
cli
cmpsl
lds
dec
xchg
or
adc
lahf
add
jl
insb
pusha
lock
inc
lock
or
xchg
jne
and
inc
and
adc
fwait
lcall
sbb
sbb
push
or
xor
cmp
lret
xchg
adc
dec
push
filds
jl
adc
lods
popa
cmp
lcall
inc
dec
pop
or
stos
sbb
adc
dec
mov
or
xor
push
or
cmpsb
outsl
data16
aas
sbb
cld
xchg
lret
cmp
xor
mov
xor
pop
cld
mov
js
sbb
inc
cmpsl
add
dec
pop
repnz
cmp
or
push
les
push
cmpsl
rcll
inc
cmpsb
fcoms
or
jge
adc
es
mov
dec
pop
adc
push
pop
mov
lahf
xchg
and
sarb
popf
jb
pushf
in
imul
mov
and
fcmovbe
xchg
xor
inc
inc
pop
sub
mov
es
pop
jl
mov
cmpsb
scas
cmp
and
sub
scas
ljmp
jne
add
movsl
pusha
mov
xchg
sbb
xchg
scas
sbb
into
pop
sbb
or
icebp
stc
dec
push
mov
fmuls
jae
pop
mov
cmp
in
ret
add
faddl
cmpsb
sbb
lods
mov
pop
out
mov
push
dec
dec
pushf
add
movsb
lcall
lcall
jns
outsl
scas
lea
push
iret
pop
gs
pop
dec
inc
je
cmpsb
jae
pop
ja
arpl
test
jae
dec
xor
xchg
cwtl
lret
mov
fildl
mov
mov
xor
iret
pop
push
pushf
sub
sbb
adc
and
sub
cmpsl
push
lods
outsb
andb
test
lock
fists
xor
cld
das
mov
xchg
cmc
adc
dec
xor
cltd
ss
sbb
addr16
jecxz
sbb
mov
jne
sbb
fucomi
repz
movsb
push
std
movsl
test
pop
cld
xchg
rep
cwtl
dec
cld
mov
daa
pop
xorb
pop
xchg
jecxz
cmc
pushf
mov
jle
adc
decb
cld
leave
xchg
inc
jb
aas
mov
js
out
loope
in
lods
mov
fwait
dec
cmp
dec
mov
nop
repz
rcl
sbbl
aaa
enter
inc
and
dec
push
test
pop
adc
adc
jmp
jno
fisttps
aam
dec
mov
xlat
fwait
jle
cmpb
dec
pop
ror
pop
insl
cmpsl
inc
add
mov
cmpsl
mov
cmp
fs
pop
adc
mov
adc
xchg
and
cmpsl
outsl
dec
je
jbe
sbb
push
cmpsb
out
fsubrl
inc
stos
fwait
xor
aas
mov
cwtl
pushf
push
push
not
mov
push
cmp
push
out
pop
popa
dec
or
pop
push
mov
and
cli
inc
mov
add
fstpl
mov
xchg
cmp
pushf
and
dec
sbb
fisttps
test
orb
repnz
test
xchg
xor
jae
mov
gs
or
repnz
dec
cld
fadds
leave
and
stc
sbb
add
add
cmpsl
cmp
xchg
cs
pop
or
loopne
mov
pop
xchg
inc
dec
loopne
jp
mov
outsl
pop
push
dec
out
pop
mov
xlat
and
addr16
inc
movsb
into
mov
stos
pop
push
push
cmp
pop
cs
lds
cmp
shll
and
cmpsl
jb
pop
test
jl
or
pop
pop
cmc
test
rorb
cmpsb
mov
cld
orb
or
pop
pop
das
dec
and
add
cmpsb
scas
or
inc
xor
aas
push
dec
cmp
jne
xor
daa
mov
xorb
jmp
mov
pop
or
inc
jmp
mov
aad
jp
lahf
sbb
dec
jae
xchg
test
lret
mov
jae
mov
pop
pop
scas
pop
shll
dec
mov
repnz
fisubs
outsb
jae
loop
test
loop
dec
xor
dec
movsl
sub
push
mov
xchg
dec
loopne
movsb
or
xchg
adc
sti
repnz
and
push
pop
movsb
mov
lea
test
cmp
inc
popa
jle
dec
test
insl
push
repz
call
hlt
or
into
data16
mov
pop
mov
lds
xchg
jb
mov
jmp
lods
shlb
popl
or
sbb
aad
push
fmull
dec
jae
xchg
fwait
outsl
imul
in
xor
jmp
fsubp
cmp
xor
jl
ja
dec
add
adc
fdivs
repz
wrmsr
inc
inc
pop
in
sub
mov
cmp
pop
push
scas
into
jp
testl
jle
fidivrl
fsub
aas
and
cmp
cmp
out
mov
cwtl
decl
and
cmp
cli
aaa
out
or
ds
adc
cmpsl
clc
push
xchg
inc
out
or
imulb
in
mov
push
push
rorb
dec
movsb
cmpsl
adc
mull
into
push
pop
push
dec
xchg
cmp
out
cmp
arpl
mov
xor
movsl
dec
add
cld
xchg
sub
mov
sbb
lret
arpl
cwtl
mov
in
imul
repz
clc
xchg
notb
xor
mov
or
adc
sub
and
cmpsl
rcr
ret
imul
pop
jl
jle
or
loop
test
sbb
sub
call
jo
std
inc
add
in
test
dec
loop
adcl
jmp
imul
adc
and
out
dec
push
cmp
daa
xor
cmp
pop
or
out
enter
or
mov
mov
cmp
lret
pusha
xor
scas
dec
sub
cltd
out
dec
xchg
test
out
lret
mov
pop
cli
in
sti
xor
pop
popf
pop
adc
adc
inc
adc
push
fstpt
jecxz
shrb
push
movsb
mov
icebp
pop
and
rcll
lods
addb
xchg
dec
pop
dec
xor
sub
add
jb
sub
mov
filds
aam
inc
pop
push
lret
sarl
pop
add
fsts
nop
push
mov
mov
cmc
and
jge
in
stc
cmp
mov
mov
push
dec
negb
cmp
or
test
pop
lods
std
xor
and
cld
aaa
push
mov
adc
out
sti
lret
out
mov
sub
das
sbb
lods
lea
lcall
push
daa
xor
push
cmpl
in
lds
mov
inc
out
iret
mov
imul
xchg
or
in
pop
in
push
sub
mov
adcl
lret
xchg
in
add
or
leave
sbb
sbb
es
xor
cmp
mov
add
daa
adc
lcall
and
xchg
jg
clc
movsl
jl
sbb
sbb
in
inc
adc
push
mov
push
xchg
cmp
sbb
faddl
mov
sbb
push
add
pop
sub
adc
jne
shlb
xchg
test
or
loope
mov
fs
jns
xchg
sbb
xor
mov
mov
lahf
adc
xchg
popf
push
call
jecxz
pop
test
pop
jb
cmp
inc
lods
pop
inc
cmp
or
push
loop
and
dec
mov
push
jns
data16
mov
sub
and
xlat
dec
jbe
push
ljmp
jl
dec
pop
ljmp
aas
call
and
dec
mov
jnp
sub
adc
mov
cmp
rcll
cmpsb
jb
addl
inc
fcomps
xacquire
lock
and
jmp
jl
sub
mov
fsubrs
loop
mov
into
adc
call
jl
mov
xor
jp
aas
adc
cli
lcall
xlat
add
xor
jl
xor
das
cltd
out
scas
inc
xor
aas
jcxz
jp
jl
cmpsb
mov
cmpsl
je
and
lret
lods
shlb
in
lods
pop
fwait
xor
fsubs
add
inc
xor
xchg
mov
shl
or
fwait
mov
mov
mov
imulb
aaa
xchg
dec
mov
cli
xor
adc
sub
loop
mov
xchg
rolb
add
push
iret
sbb
mov
push
mov
lea
dec
loopne
jns
push
adc
repz
dec
test
push
lret
sbb
mov
xchg
les
inc
pop
and
pushf
push
addl
add
adc
dec
xchg
leave
xlat
faddl
push
loopne
sahf
or
mov
popa
int
add
leave
andb
mov
dec
mov
mov
xor
jae
lods
lret
xchg
aaa
fildl
outsl
sub
mov
add
and
sbb
cmpsb
rcrl
mov
sarb
inc
cwtl
add
ss
scas
lret
lods
repz
dec
xorb
in
pop
sub
or
mov
dec
mov
push
outsl
push
cmc
stc
insl
add
jo
pushf
es
cltd
repz
icebp
lahf
push
fsub
sahf
sub
mov
xchg
dec
outsb
xchg
adc
mov
cmp
adc
dec
mov
fnsave
sbb
pop
shlb
push
repnz
mov
lock
cltd
lret
xchg
push
andb
mov
push
cli
scas
lea
lock
mov
jl
fnstsw
mov
add
cmp
shrb
push
or
shl
mov
sbb
sub
icebp
sbb
mov
mov
fstpt
dec
add
ljmp
outsb
bndldx
and
sbb
cwtl
leave
mov
cmpsl
push
lahf
pop
mov
out
pop
repz
hlt
mov
and
imul
fdivp
jmp
out
in
decb
popf
ret
inc
push
jecxz
cmp
cmp
inc
sub
jp
jecxz
cmpsl
cmpsl
mov
scas
imul
sbbb
fcoms
jne
movsb
jae
jne
loop
pop
test
stos
push
pop
mov
push
push
call
imul
test
fldenv
xchg
shll
inc
lock
push
movsl
jge
fimull
sbb
nop
cld
aaa
testb
jne
adc
les
aad
mov
pop
rcr
out
mov
hlt
xor
fwait
jl
fwait
xlat
xchg
and
cmc
xor
mov
shr
lods
popa
inc
cmpsl
mov
cmp
aam
test
push
pop
cld
psllq
sbb
arpl
shr
lret
lret
fsubl
push
daa
sbb
or
sbbl
jmp
adc
xchg
jnp
ds
popaw
inc
add
mov
scas
icebp
in
and
jnp
jl
outsb
push
lea
lock
shlb
dec
xchg
jecxz
movsl
repz
out
sub
fcompl
sub
and
in
jl
push
movb
or
sbb
outsb
pop
push
cld
ret
mov
dec
xchg
and
aas
or
sub
push
sbb
mov
mov
inc
pop
inc
cld
scas
fsubl
lods
data16
jp
sub
push
lock
jne
sub
push
pop
ret
and
mov
rclb
dec
or
lret
xchg
sbb
and
mov
inc
fldt
mov
cmpsb
repz
sbb
cli
jecxz
nop
xchg
gs
fcmovb
loope
and
scas
outsb
shlb
iret
or
add
out
cmpb
movsl
mov
inc
outsl
cld
sbb
outsl
cmp
sbb
cli
xor
cld
out
adc
aaa
insl
jp
ffreep
aad
and
jg
adc
mov
arpl
lahf
stos
hlt
adc
out
orb
mov
ret
cld
loop
mov
add
in
rcrl
inc
lds
xchg
lcall
inc
mov
dec
arpl
jnp
adc
es
sub
daa
inc
movsl
lret
fstpt
inc
scas
dec
adc
jb
in
icebp
jmp
pop
test
aaa
add
addb
data16
jne
rcr
jl
daa
loope
mov
ret
and
clc
sub
lock
pop
pop
sbbb
test
ficoms
bound
pusha
pusha
repz
jo
or
push
into
push
out
subl
jno
call
pushf
xchg
jl
nop
sub
dec
pushf
jae
add
adc
cmp
hlt
xor
rcrl
mov
cmp
pushf
inc
in
dec
mov
dec
sbb
mov
arpl
sbb
test
xchg
xchg
lcall
and
inc
mov
cmp
cli
addr16
in
cwtd
ljmp
iret
fcoms
ss
jle
and
cmc
or
jmp
pop
sbb
cwtl
in
int
fnsave
push
add
repz
insb
inc
lcall
push
jl
xor
xchg
jmp
mov
pop
stos
rep
es
pusha
rclb
or
xchg
add
adc
in
iret
cld
xor
aaa
push
fs
clc
inc
outsl
add
xor
imul
inc
int3
pop
mov
jo
cmp
in
dec
sbbb
movsl
jne
fwait
mov
fiaddl
add
mov
jb
pop
icebp
outsb
and
bound
pushf
int
push
mov
sahf
nop
mov
jmp
pusha
lcall
mov
xchg
mov
cmp
fs
dec
add
xor
cld
cmc
push
lahf
in
xchg
cld
and
mov
dec
or
jle
xchg
push
push
push
repnz
push
cmc
mov
dec
test
aas
out
xor
loope
and
jb
imul
pop
or
loop
mov
cmpb
push
xchg
mov
push
and
add
or
testl
ja
test
push
mov
dec
adc
push
pop
jae
adc
loop
push
inc
pop
mov
aaa
adc
sbbb
fstps
cmp
pusha
sti
sbb
cmpsl
push
or
mov
repz
jbe
pop
movsl
cmp
aas
sbb
and
sbb
pop
ljmp
pop
js
in
adc
int
loope
adc
jbe
mov
mov
push
xchg
iret
arpl
inc
mov
in
jle
add
movsl
pop
sbb
test
inc
cwtl
pop
sbb
mov
cwtl
sbb
pop
pusha
jbe
add
jl
call
dec
cmp
in
dec
jl
adc
inc
fwait
loopne
mov
inc
adc
adc
xchg
inc
roll
subb
loopne
ds
call
sarl
xor
lret
sub
loopne
fwait
mov
arpl
jecxz
jns
xlat
pop
ss
hlt
inc
lcall
imul
jmp
pop
testb
daa
xchg
imul
into
and
xchg
fcoms
jecxz
xchg
dec
out
outsb
outsl
inc
test
cmpsl
rcrb
and
call
cmp
adc
mov
push
xchg
or
or
dec
ljmp
cld
or
pop
xor
jle
xchg
sbb
adc
mov
adc
fs
and
icebp
inc
mov
jg
repnz
or
arpl
mov
and
add
inc
add
lods
sahf
mov
cld
xor
fcoms
mov
adc
sbb
arpl
test
xchg
lret
mov
lahf
scas
cmc
pop
cmp
popf
mov
shrl
in
and
or
xchg
mov
jmp
jb
pushf
test
incb
pop
cmp
add
sub
cmp
test
sar
push
cs
mov
ljmp
aas
pop
sbb
push
loopne
hlt
mov
roll
jecxz
cltd
push
inc
add
scas
xchg
insl
adc
cmpsb
aam
xor
sub
fadds
sub
leave
inc
push
mov
inc
mov
sbb
cmp
data16
lahf
fcoml
das
arpl
inc
loop
inc
inc
insl
scas
hlt
cld
dec
pop
mov
in
jl
jmp
jp
or
xchg
mov
cmp
jl
pop
or
repz
and
lods
lds
lea
dec
sbb
xchg
cmpsb
dec
out
cmpl
pushf
or
add
test
sbb
sbb
lret
sub
push
cltd
inc
add
or
out
les
xchg
fs
inc
dec
imul
xor
inc
sti
js
test
mov
repz
mov
xchg
push
xor
sbb
xchg
ret
clc
xor
cmpsl
cli
in
jne
mov
insl
fcom
arpl
inc
movsl
clc
sub
inc
aad
inc
cmpsb
mov
iret
and
inc
and
test
in
popf
add
lods
lret
mov
ret
lret
scas
fs
xchg
add
pop
xor
lock
mov
aam
in
adc
push
sbb
push
movsl
ss
les
jle
gs
pop
sbb
aas
lahf
enter
jnp
mov
dec
mov
dec
push
xor
pop
adc
and
cld
lcall
fisttps
mov
xor
add
dec
inc
dec
cmpsb
fdivrl
mov
aaa
inc
stos
jbe
jl
out
mov
xor
xchg
mov
arpl
xor
or
push
fcmovnb
cmp
fmull
pop
mov
jbe
xor
clc
scas
cld
xchg
test
hlt
imul
xor
pop
test
loopne
sahf
mov
pop
dec
inc
push
test
test
mov
inc
andb
sub
inc
or
insb
cmc
ss
push
mov
jbe
inc
pop
adc
fwait
inc
dec
lods
jnp
js
cld
add
out
clc
sub
mov
in
sti
stos
pushf
dec
js
push
sbb
int3
out
adc
or
jns
shlb
adc
or
lods
cmpsb
jl
in
push
lcall
sub
test
add
sbb
mov
push
jmp
sbb
sub
push
adc
sub
xchg
mov
mov
aam
in
dec
xor
xchg
scas
int
mov
cmc
cmp
sub
jge
xchg
push
or
lock
xchg
or
loopne
mov
mov
mov
adc
and
imul
mov
jg
and
jecxz
push
or
inc
pop
dec
lret
out
aas
pop
jge
or
mov
jno
fwait
outsl
incb
in
addr16
push
dec
lcall
in
xchg
add
aaa
in
call
add
mov
es
jl
sbb
push
push
or
dec
push
pop
lret
inc
repz
popf
pop
mov
or
xchg
or
jp
push
notb
add
xchg
push
jb
xor
aam
lret
loope
int3
notl
mov
movsl
sbb
xor
rcll
adc
fisubrs
cmp
dec
mov
add
adc
xor
push
jo
pop
add
daa
mov
push
mov
jecxz
fdivs
cld
jge
iret
cmp
lods
sbb
ss
jo
adc
mov
adc
cmpsb
stc
push
in
mov
outsb
ss
jl
xorb
xlat
inc
cmpsl
fs
scas
mov
rep
pop
cmp
xorb
adc
xlat
cmp
mov
scas
fwait
or
mov
add
adc
jl
inc
ret
dec
inc
jge
mov
js
hlt
and
jbe
inc
mov
pop
out
inc
push
mov
stos
dec
insb
pushf
push
test
jl
mov
jle
test
pop
enter
and
movsl
sub
xor
loope
fimull
pushl
pop
loop
mov
testl
fbstp
push
xchg
adc
add
pop
dec
and
mov
mov
sahf
ret
cmp
mov
notb
xchg
sbb
sub
gs
cmpsb
push
nop
adc
ljmp
addr16
dec
int3
jns
into
pop
lret
dec
or
addb
push
in
mov
jmp
mov
mov
fiadds
ds
mov
repnz
mov
arpl
movsl
pushf
repz
cwtl
or
movsb
out
jl
scas
sbb
nop
mov
sbb
sub
pop
dec
or
xchg
mov
js
push
shlb
jmp
xchg
mov
ficoml
push
xchg
lods
stos
icebp
shll
paddb
cmp
jecxz
push
jle
mov
in
mov
mov
das
js
ss
mov
mov
inc
pop
xchg
add
xchg
cmpsb
sbb
cmp
ljmp
enter
cmp
cmp
push
lods
movsb
sbb
mov
push
in
ss
pop
mov
add
mov
sbb
adc
jno
pop
add
mov
nop
adc
jmp
fcmovnu
ret
or
rorb
das
cmpb
test
xchg
push
jl
push
sbb
popa
negl
and
outsl
or
cmpsl
mov
adc
leave
and
daa
xchg
jge
scas
repz
lahf
aam
cmp
xor
xor
xchg
sbb
cmc
loopne
mov
cld
jnp
outsb
repz
mov
iret
mov
and
jnp
leave
dec
in
sub
fdivrs
pop
cmp
ds
xchg
xor
xchg
inc
fs
sbb
jno
mov
mov
or
in
cld
cli
mov
mov
sahf
out
call
xchg
data16
pop
fisubl
inc
xor
mov
and
pcmpeqw
pushf
push
mov
push
test
dec
dec
mov
dec
xor
dec
jl
testb
mov
push
orl
ds
cmpsl
addb
idivb
addb
and
ljmp
in
movsl
insb
push
outsb
fadd
not
cli
and
xor
xchg
movsl
out
js
repz
inc
ss
pop
push
or
in
cltd
cmp
fdivs
xchg
je
out
movsb
or
ds
in
and
xor
leave
or
mov
sahf
fisubl
es
inc
pop
jl
aas
rclb
lcall
nop
push
mov
xlat
push
out
fsubl
lcall
lret
cwtl
dec
adc
mov
xchg
xchg
sub
xchg
test
push
mov
mov
loope
push
mov
mov
in
imul
sub
test
sbb
decl
mov
xchg
push
lds
adc
xorl
add
pop
mov
stos
jmp
clc
subl
sub
paddb
pop
adc
or
mulps
push
mov
add
and
push
int3
lcall
movsb
adc
outsl
inc
inc
push
push
daa
adc
xchg
pop
xor
movsb
add
xchg
bnd
ss
inc
pushf
stos
mov
xchg
mov
mov
adc
icebp
pop
daa
xchg
push
mov
shll
xchg
fwait
pop
dec
xchg
xlat
adc
xor
sub
cld
push
adc
insl
push
and
rcrl
add
xchg
pushf
inc
scas
sbb
cld
cmpl
divl
xchg
test
jnp
outsl
dec
sti
mov
adc
add
arpl
push
fistl
push
push
cld
movsl
mov
imul
loope
fwait
mov
add
mov
scas
cld
add
call
andb
aaa
mov
pop
sub
sbb
cmp
mov
sbb
lods
push
outsb
jmp
xor
ret
test
xchg
nop
lds
stos
adc
and
adc
inc
dec
das
negb
jl
jae
pop
cwtl
lret
push
inc
int
cmpsl
aas
inc
pop
outsl
push
sbb
add
xor
and
sbb
mov
inc
cwtl
xor
out
lcall
ss
dec
mov
xchg
lahf
in
inc
push
loop
sub
dec
sbb
xchg
xchg
inc
jg
ds
pop
pop
test
cli
aas
sbb
cld
jno
push
or
stc
pop
incb
pop
mov
jp
mov
popf
sub
pop
stc
jmp
outsl
fs
xor
jl
add
iret
sbb
outsb
cli
lret
fisubrs
lret
in
shll
repz
fisttpl
arpl
repnz
rcll
jno
or
insl
mov
and
pusha
mov
leave
and
gs
inc
cmp
xor
mov
loope
jbe
add
xchg
sbb
push
or
jp
popf
push
mov
and
scas
add
push
pop
mov
cmpsl
shlb
mov
sbb
push
sub
rclb
nop
fs
mov
sbbl
jbe
mov
mov
or
sub
arpl
repz
icebp
out
out
push
cld
xor
mov
sti
xchg
pop
adc
lahf
pop
sbb
aam
pop
in
adc
stc
mov
add
jp,pn
jg
inc
ljmp
sub
iret
mov
out
mov
es
out
fstpt
sub
das
cld
ss
jmp
in
lea
xchg
bound
dec
inc
jne
jno
push
push
push
dec
adc
pop
mov
data16
jl
test
dec
clc
jbe
movsl
lret
fldenv
imul
xor
stc
std
jg
xor
lret
int
ret
inc
mov
adc
xchg
das
jl
sub
push
xchg
xchg
repz
jno
sbb
icebp
pushf
xor
lods
adc
xchg
cltd
inc
repnz
aam
or
jbe
mov
jg
in
sbb
rorl
lea
cwtl
sbb
xlat
sub
in
push
sbb
pop
scas
xor
dec
add
mov
sub
mov
gs
mov
push
cwtl
mov
data16
or
cmpsl
pop
push
and
mov
into
movsl
fstpl
push
push
sbb
xlat
push
or
lods
xchg
push
adcb
dec
imul
fsubrs
or
mov
into
aas
shll
leave
adc
dec
rclb
or
lods
es
jp
js
mov
clc
ljmp
cmpsl
outsb
std
arpl
repnz
lock
lret
lds
inc
aam
or
and
jl
or
xor
out
pop
inc
shlb
jl
mov
xchg
xchg
adc
rep
pop
pop
mov
xor
lret
sub
nop
sbb
dec
adc
adc
mov
push
adc
pop
inc
xor
sbb
mov
mov
adc
and
mov
jmp
cmp
mov
jmp
lcall
in
lds
aad
ljmp
fcoms
dec
push
jno
adc
pop
ds
cli
aas
inc
push
jno
sbb
daa
adc
std
xchg
adc
fwait
dec
cld
pop
ds
mov
iret
lods
repnz
iret
adc
sbb
and
add
cmp
sbb
mov
shr
imul
or
in
lock
mov
dec
in
mov
xchg
cwtl
sti
jecxz
cmp
or
push
inc
dec
mov
sbb
ja
inc
das
inc
loop
cmp
xor
mov
repz
inc
push
jnp
pop
xor
mov
in
push
movsl
xor
jl
cwtl
and
fs
xor
sti
jno
pop
sub
adc
add
sub
cltd
xchg
mov
mov
lods
push
inc
cld
sbb
test
sub
arpl
dec
jge
cs
cmc
ret
push
fisttps
int
push
push
cmp
add
mov
push
xor
subl
inc
sub
add
jl
push
mov
dec
cld
sbb
stos
sbb
xor
jmp
aaa
rcrb
add
xor
loope
mov
and
or
jl
data16
mov
inc
mov
or
insl
xchg
imul
mov
push
xchg
xchg
addr16
push
xor
pop
mov
cmc
in
int
xchg
fdivrl
sbb
jae
in
inc
std
sti
and
hlt
add
mov
and
adc
push
movsl
sbb
xchg
xchg
xor
cmp
and
fisttpll
xchg
in
je
and
in
decl
cmp
add
dec
dec
movsb
mov
str
loopne
xchg
sbb
push
gs
mov
mov
movsl
mov
xchg
fsubl
pop
push
fs
rolb
lret
push
xchg
xchg
jl
inc
inc
movsl
inc
inc
aas
int
jne
cld
out
jbe
dec
xor
js
mov
inc
lret
hlt
push
test
or
push
lock
xor
lods
fsub
jl
push
inc
sbb
jecxz
sbb
stc
fwait
insl
loope
inc
inc
sub
and
mov
pusha
bound
and
push
aam
scas
popf
push
cld
adc
fistpl
movsl
or
xor
imul
pop
loop
jle
cld
bound
mov
mov
mov
out
fs
test
fbld
cld
jns
or
cmpsb
push
sbb
in
aad
dec
or
add
pop
fwait
es
nop
dec
cwtl
push
xchg
loope
push
jmp
cmp
int
mov
test
xchg
cld
dec
jns
mov
loopne
xchg
pop
int
add
xor
in
jbe
jnp
sbb
mov
repz
push
test
fistps
and
js
out
lahf
dec
mov
cwtl
mov
test
jne
ret
push
push
mov
cli
push
mov
xchg
movl
cli
sub
cld
stos
lods
orb
sbb
mov
pushf
psllq
push
and
lods
fistl
je
cld
and
sarl
aas
cwtl
adc
scas
roll
mov
rclb
fidivs
jnp
mov
cwtl
adc
mov
lods
pop
cld
mov
insl
jp
in
int3
or
mov
push
lods
pop
cmp
ds
inc
pop
dec
cld
fcmovnbe
orl
sbb
mov
sbb
fadds
sub
in
and
jle
push
js
dec
imul
arpl
data16
jl
adc
sub
mov
loopne
popa
int3
out
pop
aas
or
add
orl
xor
out
mull
mov
push
or
pop
jg
sbb
mov
repz
in
ja
mov
add
loopne
mov
cmpsl
xor
pop
test
stos
int
cltd
mov
in
int
ficompl
loopne
mov
push
ret
mov
stos
out
lret
inc
jne
mov
mov
pusha
subl
jmp
dec
adc
lret
pusha
mov
add
and
lret
dec
mov
pop
mov
jbe
loopne
lret
loop
mov
push
inc
and
test
or
mov
push
flds
out
pop
loop
pop
or
mov
stos
mov
lea
das
inc
mov
mov
test
xchg
in
mov
aam
push
lods
inc
mov
in
fmul
sbb
or
lods
inc
pop
test
les
test
movsl
pop
data16
inc
in
adc
repz
jp
test
xchg
mov
and
jmp
lea
je
cmp
pop
adc
dec
orb
mov
pop
jl
ja
or
inc
push
pop
push
xchg
ljmp
jo
test
mov
aas
test
int
ss
xchg
in
dec
icebp
adc
stos
lods
int
outsl
push
sbb
adc
mov
test
inc
and
xchg
lea
push
aad
jp
and
xor
jp
cld
dec
push
mov
ret
aaa
cwtl
xchg
aaa
sbb
inc
cmpsb
and
inc
enter
fwait
inc
lods
les
dec
pop
or
adc
push
repz
je
sti
xor
pop
add
inc
scas
loope
mov
dec
fcoms
pop
loop
dec
dec
lahf
ss
mov
mov
mov
lahf
xchg
js
rcr
inc
xor
adc
lea
or
cmpsl
out
jno
loop
pop
and
daa
mov
aaa
cmp
in
data16
test
into
imul
adc
fadds
cmp
inc
sbb
cmc
fdivrl
dec
cld
sub
test
ret
pop
jmp
xchg
repz
inc
mov
or
out
stc
int
push
mov
mov
js
push
dec
fwait
mov
dec
inc
and
cmp
cld
cs
sub
addb
cmp
pop
cmpsb
or
cs
sbb
mov
movsb
cltd
jl
or
jbe
or
andb
repz
pop
xchg
mov
mov
aaa
pcmpgtw
push
aaa
repz
loop
cs
or
xor
mov
insl
jg
mov
jge
push
mov
in
adc
sbb
ret
mov
sub
and
xchg
flds
dec
sti
cmpsb
jp
sub
mov
mov
mov
bound
cmp
sbb
and
inc
jae
push
js,pt
mov
push
lock
pusha
add
fiaddl
in
ja
les
jecxz
xor
mov
and
cld
repnz
add
shlb
dec
dec
xchg
cmpsl
xchg
iret
inc
xor
dec
nop
mov
jns
repz
sub
mov
outsb
xor
adc
ss
loopne
fwait
pop
es
push
xorl
aam
xor
mov
fistpl
out
ds
xchg
inc
mov
jb
int3
dec
adc
ret
aas
add
sub
data16
xor
jl
stos
adc
add
je
cld
loope
xchg
jae
dec
movsb
mov
mov
xchg
xor
sbb
lcall
adcb
xchg
pop
lret
nop
and
or
fistpl
in
push
cmp
xchg
int3
push
fcompl
scas
inc
sbb
frstor
inc
dec
mov
mov
adc
loop
ss
inc
lock
xchg
push
and
jp
test
test
negb
jnp
lods
inc
in
sub
rolb
sub
dec
or
inc
sub
push
cmpsl
imul
add
adc
loope
bound
jge
sub
ds
xchg
mov
imul
push
fimull
das
fbstp
dec
mov
lret
sbb
icebp
scas
add
jecxz
scas
loop
xchg
lds
push
mov
xor
adc
sbb
loopne
and
inc
icebp
adcl
add
leave
mov
adc
lret
psubb
repnz
mov
aam
jns
sbb
sbb
inc
cmc
cwtl
rcrw
add
mov
lods
repnz
sub
mov
pop
cltd
int
jno
inc
gs
je
xchg
negb
movsb
stos
sub
xchg
fdivp
bound
stos
mov
cmc
pop
cwtl
enter
repz
ret
jo
hlt
mov
sbb
pop
loope
xchg
mov
pop
fisttpl
xchg
lcall
fwait
test
mov
stc
dec
lcall
pop
mov
sub
andl
push
pop
jae
lret
pop
xor
xchg
lret
sub
scas
js
aaa
and
call
test
push
mov
mov
sub
mov
fs
xchg
lahf
add
pushf
enter
lahf
aaa
fmul
jl
sbb
cmc
jmp
cmpsb
pop
push
push
in
ss
push
or
and
aas
out
ds
sbb
dec
cmp
inc
inc
mov
test
stos
mov
mov
pop
pop
xor
cld
sbbb
test
lea
lods
xor
jecxz
adc
pushf
and
repnz
sbb
xchg
mov
xchg
xor
adc
sub
int
in
clc
jae
das
aaa
hlt
lods
jmp
and
xor
sub
lcall
dec
ret
mov
loope
mov
fcoms
dec
in
mov
enter
lods
xchg
xorl
cmpl
cltd
push
out
mov
cmp
imul
out
mov
pushf
xor
mov
add
sub
sub
jo
sbb
cld
sbb
cmpsl
dec
and
push
sbb
and
xor
xorl
jae
push
aaa
in
cmpsl
jp
jle
fiaddl
sub
and
adc
inc
and
call
adc
cwtl
ds
repnz
enter
cli
mov
inc
test
fadds
std
shll
fwait
jl
xor
movsl
sbb
dec
xchg
ja
adc
push
and
lods
xor
xor
cmp
xchg
cmpl
inc
inc
repz
pop
mov
mov
or
rcrb
jp
pop
rclb
icebp
ljmp
xchg
es
push
repz
push
xlat
push
sub
cmp
fsubl
and
pop
inc
adc
clc
xchg
jecxz
loopne
fsubs
jb
insl
fdivrl
pop
dec
xchg
into
lods
push
adc
sbb
rclb
loop
xor
sbb
push
inc
push
cmp
adc
push
mov
andl
test
test
pushf
popf
les
or
fcoms
xchg
cmp
xchg
fcmovnbe
icebp
loopne
fwait
push
xchg
popa
inc
lea
mov
mov
testl
shl
data16
sahf
sbb
xchg
xlat
movsl
pop
push
or
daa
dec
js
push
cmc
inc
outsb
arpl
mov
ja
mov
mov
cmp
or
mov
adc
inc
dec
pop
xchg
mov
in
xor
mov
jmp
dec
div
data16
lods
fcmovb
pop
test
movsb
aam
sti
cmp
and
sahf
push
lahf
movsl
test
fiaddl
push
and
or
and
loop
sub
cwtl
inc
stc
pop
or
mov
mov
inc
pop
xor
adc
or
aas
icebp
scas
mov
iret
jecxz
push
adc
or
dec
dec
addr16
and
into
mov
fcoms
das
cld
fidivs
and
sbb
xor
mov
xchg
or
xchg
pop
loope
imul
jae
or
pop
xchg
sub
or
push
lods
dec
mov
mov
insl
and
mov
lret
inc
repz
ljmp
scas
lods
sbb
mov
pop
xor
repnz
mov
in
popa
cmp
jmp
pop
insl
cmpsb
shl
cmp
es
and
pop
push
cld
xchg
and
push
scas
and
cmp
cld
inc
ret
enter
lret
mov
jle
mov
mov
scas
dec
int3
lock
mov
fistpl
adc
or
jo
xor
add
mov
addl
sub
aas
adc
or
sub
sub
fisttpl
into
mov
xchg
stc
test
es
sti
pop
lret
movsb
add
dec
sub
inc
inc
sarb
stos
lcall
xor
mov
cmp
adc
adc
cmpsl
dec
or
xchg
jl
adc
xchg
repnz
xchg
inc
repnz
pop
out
sahf
jl
cltd
sub
jb
and
cmpsb
js
adc
mov
add
xchg
popf
sbb
negl
xchg
pop
mov
xchg
xchg
movsl
pop
sbb
test
lret
sub
sbb
aam
inc
daa
sbbb
inc
mov
inc
nop
cld
push
mov
or
test
sbb
push
js
stc
in
aas
out
xor
pop
call
pop
repz
in
and
mov
pop
icebp
orb
xor
aam
cmp
dec
add
aam
cmp
fidivrl
sbb
sti
mov
rol
cld
jb
mov
fs
enter
mov
or
insb
adc
outsl
adc
inc
pop
cli
inc
sub
lahf
xchg
sbb
or
add
rorb
sar
cmp
aaa
rorl
xor
inc
dec
mov
fistpl
xchg
mov
push
jns
mov
scas
sbb
or
pushf
dec
sarb
ret
repz
mov
cmp
dec
pushf
es
push
add
and
scas
xor
lret
adc
mov
pop
adc
pop
xor
fxch
repz
mov
cmp
xlat
jl
push
jbe
lcall
movsl
push
nop
pop
jb
lods
push
pop
push
scas
pop
repz
pushl
inc
pop
push
jp
dec
mov
inc
jecxz
dec
orl
xchg
inc
cmp
imul
xorb
mov
and
dec
mov
call
dec
mov
fwait
xor
add
adc
xchg
push
xchg
ljmp
xchg
fmull
stos
mov
cld
inc
js
sarl
mov
add
mov
nop
movsl
mov
dec
dec
pop
icebp
xchg
fldt
pop
les
rolb
mov
insb
inc
mov
sub
mov
rcrb
stos
or
adc
dec
jbe
sub
addr16
mov
repnz
xor
clc
jmp
nop
or
aaa
push
pop
push
data16
je
jecxz
push
int3
sub
repz
rcrl
jns
cmp
or
sub
and
sarb
jns
jp
jl
pop
pusha
test
lret
and
leave
fbstp
pop
daa
sbb
adc
and
cli
inc
sub
jg
loope
mov
jmp
daa
in
and
inc
or
xchg
out
out
sbb
sbb
mov
sub
dec
sbb
xchg
lods
jns
xchg
adc
xchg
pop
movsb
cmp
mov
jl
repz
inc
movsl
xchg
int
test
rorl
out
mov
add
xchg
cmpsb
or
in
into
popa
fadd
jl
fsubl
mov
sub
dec
or
in
jl
movsl
test
push
cmp
push
cmp
jle
je
sbb
jg
subb
aam
out
iret
jl
or
rorb
lretw
inc
movsl
mov
and
test
les
inc
dec
add
adc
sub
sub
es
loopne
test
jnp
pop
lods
mov
fs
out
arpl
adc
mov
jno
dec
jmp
scas
dec
push
mov
icebp
inc
ficompl
out
push
jb
insl
js
scas
adc
mov
push
cld
stos
dec
insl
mov
cmp
sbb
pop
repz
idivb
lea
cmpb
clc
pop
pop
outsl
mov
push
push
mov
fdivr
pop
loop
sarb
orb
pop
mov
cmp
pop
out
into
push
adc
sbb
push
xlat
mov
dec
mov
push
mov
mov
add
call
movsb
add
inc
mov
push
mov
insl
mov
dec
and
shlb
aas
mov
mov
add
push
jnp
aas
dec
add
xor
lds
jne
adc
cld
mull
or
dec
adc
int
mov
addr16
push
imul
mov
mov
fs
mov
loop
sub
cmpsl
adc
ds
pop
xor
cmp
pop
aam
cmp
inc
in
popf
or
ss
nop
sbb
xor
lock
insb
adc
mov
xchg
sbb
adc
loopne
mov
pop
ss
mov
xchg
sbb
mov
rcrl
and
cld
mov
cltd
das
push
inc
jle
ss
popf
fmuls
push
xlat
mov
adc
fwait
jbe
mov
pop
dec
or
jbe
jp
subb
ret
mov
xchg
or
clc
xchg
addl
lock
sub
push
js
scas
fs
ret
or
stos
sub
rep
xchg
into
cmp
movsb
push
rorl
dec
mov
add
icebp
scas
mov
das
mov
das
xlat
mov
and
mov
dec
aad
js
adcb
enter
pop
repz
xchg
inc
iret
adc
icebp
movsl
xor
xchg
addb
cltd
sbb
adc
ret
in
mov
jecxz
xchg
push
cmp
push
adc
jb
cmp
movsl
and
jl
or
cmp
movsl
lock
sbb
pop
pop
or
cmc
sbb
adc
inc
and
push
jno
movsb
pop
fsts
cmp
xor
inc
int3
stos
xor
dec
rolb
mov
cwtl
inc
repz
cmp
cmp
or
sbb
cmpsl
loop
or
sbb
xor
test
xchg
fadd
movsl
push
repz
xor
pushw
inc
jl
repz
and
inc
cmp
add
outsb
repz
adc
add
adc
push
sbb
pop
xor
mov
cmp
jne
mov
hlt
repz
xchg
mov
cmp
mov
mov
adc
out
push
pushf
sbb
insb
mov
add
sbb
push
inc
sbb
ret
mov
aas
fcoms
mov
imul
test
push
out
icebp
rcll
cmp
add
cmc
add
lods
jecxz
pop
adcw
repz
xchg
jmp
jne
lods
sbb
jmp
imul
xor
add
mov
inc
and
dec
lods
incl
sbb
mov
daa
pop
out
jbe
inc
push
dec
inc
adc
inc
and
sbb
sbb
inc
pop
pushf
jp
and
adc
push
sbb
pop
adc
pop
stos
aam
xor
adc
and
loope
push
aad
adc
inc
outsl
into
inc
pop
scas
in
fsubl
xlat
adc
aam
fwait
inc
pop
movsl
mov
aas
je
and
rcrl
addb
imul
iret
aas
mov
stc
dec
and
add
xchg
outsl
inc
and
pop
je
inc
push
lods
mul
push
hlt
clc
faddl
push
dec
int3
jae
mov
cld
push
push
icebp
cmp
pop
or
cmp
int
mov
fs
fldenv
push
mov
lret
push
pop
mov
lods
pop
subl
jmp
push
sbb
popf
xchg
lods
adc
in
in
scas
mov
mov
aas
cmp
sbb
inc
xor
dec
dec
pop
adc
mov
mov
sahf
outsl
jb
dec
cli
dec
addr16
mov
fs
clc
movsl
sti
or
shlb
aas
insb
loope
or
dec
xor
int3
lcall
xchg
add
mov
sbb
cwtl
lock
or
pop
std
adcb
setl
push
loopne
cmp
in
jbe
sub
test
pop
push
mov
sbb
push
fidivl
mov
and
in
lods
adc
mov
iret
pop
mov
into
inc
lcall
pop
xchg
sbb
xor
out
and
xor
mov
cmpsl
jg
lods
repz
or
pop
cwtl
fwait
loope
sbb
dec
lea
test
or
push
push
inc
inc
sbb
jb
mov
pushf
lret
flds
jns
ljmp
aas
push
sbb
outsb
jne
test
xchg
shrb
dec
jbe
sbb
inc
mov
fmuls
repz
lea
rol
test
or
adc
outsl
pop
jle
or
dec
outsl
sbb
clc
hlt
add
or
stos
aad
push
into
fwait
loope
insl
cmp
mov
movsl
adc
sbb
lods
sbb
cltd
lahf
mov
into
pop
in
lcall
repz
pop
mov
or
sti
insb
inc
inc
in
jmp
repz
jle
jl
push
jne
pop
cmp
dec
mov
sti
lea
sub
notb
mov
mov
dec
adc
ret
sub
ret
mov
call
or
sti
xor
sub
jmp
push
mov
mov
xchg
dec
inc
adc
stos
out
cld
mov
mov
xchg
sbb
and
sbbl
pop
adc
push
mov
jae
fdivrl
xor
inc
mov
iret
out
xchg
aas
scas
sbb
sub
int
stos
adc
rorb
fmul
movsl
mov
dec
inc
outsb
push
or
xchg
scas
inc
dec
lea
inc
lods
inc
out
lea
dec
testb
cmp
sub
mov
divl
adc
mov
inc
in
dec
sahf
sub
cmpsb
xchg
sbb
inc
jae
cld
xchg
rorb
xor
lret
pushf
add
xor
ds
mov
movsb
hlt
or
lods
js
test
pop
cltd
aad
and
mov
cs
int
sarb
pusha
inc
rcrl
xchg
jecxz
sbb
add
and
and
add
mov
push
idiv
cmp
lret
lret
pop
es
mov
rcrb
ljmp
mov
lods
adc
mov
lods
imul
cli
or
inc
inc
mov
repz
push
mov
movb
push
mov
inc
mov
push
xlat
or
inc
or
lods
and
div
lea
and
xchg
jl
pop
orps
aam
dec
add
lcall
inc
in
push
inc
or
mov
call
out
and
mov
fstl
dec
cmpsb
jle
les
movsl
rcll
cwtl
into
movsb
mov
std
sbb
sbb
lea
adc
popf
push
push
repz
xchg
or
nop
sbb
add
and
insb
in
inc
out
ja
push
inc
ficomps
stos
fs
jl
nop
sbb
outsb
scas
mov
mov
xor
fcomps
outsb
push
cmc
pushf
aam
add
sub
lods
cltd
jb
outsb
lahf
mov
fwait
aas
pop
arpl
mov
iret
jl
ret
jecxz
rorl
adc
sub
jns
pop
adc
xor
jl
adc
and
push
inc
sub
movsl
fistpl
aaa
lock
ss
les
enter
inc
mov
inc
adc
push
fbld
out
aam
xchg
push
dec
out
scas
fnstenv
cmp
enter
jp
mov
mov
into
sbb
out
ffreep
lahf
into
mov
push
xlat
stc
mov
pop
xchg
icebp
in
xor
shll
cmpsl
icebp
call
mov
lahf
mov
xor
arpl
adc
call
dec
pop
repz
out
mov
lret
cmc
sbb
jo
dec
sti
xchg
adc
jl
or
pushf
pusha
movl
in
mov
scas
adc
rolb
fldcw
popa
adc
pop
inc
fldenv
lahf
popf
adc
jecxz
cmp
iret
out
inc
inc
mov
pop
cld
push
lds
pop
scas
push
out
jle
orb
or
adc
shrl
push
loop
adc
xchg
sbb
inc
mov
imul
inc
jg,pn
mov
lahf
cld
xor
mov
dec
notb
insl
add
mov
aam
test
cld
shll
cmp
sbb
clc
loop
test
lcall
bound
fs
push
aad
outsl
push
mov
or
movsb
inc
cmp
mov
sbb
cwtl
push
xor
dec
jno
and
jbe
inc
repz
lcall
sbb
jmp
out
rcl
adc
lcall
repz
repnz
pop
and
scas
mov
outsb
xor
or
adcb
mov
shlb
sbb
adc
aaa
or
ss
add
xchg
xor
mov
inc
sbb
mov
lock
aaa
xor
dec
fs
inc
mov
pop
je
iret
mov
xchg
jmp
shl
jmp
cwtl
repz
mov
inc
dec
sbb
in
pop
cld
mov
adc
dec
out
mov
cld
xchg
addr16
xor
fs
push
into
ror
push
aam
adc
mov
cwtl
sbb
mov
mov
fcomip
out
mov
fstps
test
xchg
push
mov
and
inc
inc
test
push
push
test
adc
inc
and
aaa
lock
cmpsb
popf
lods
mulb
dec
push
cld
aam
call
pop
aam
aaa
lods
sti
inc
fsub
jo
aaa
xchg
int3
pushf
adc
fcoms
out
int
roll
mov
pop
pop
adc
in
xchg
xchg
insb
cmp
adc
cltd
xchg
xchg
dec
inc
test
mov
cld
test
orb
dec
pop
pop
cld
jae
sbb
mov
xchg
jecxz
pop
mov
adc
cmp
xor
or
js
loope,pn
adc
or
xor
push
and
pop
jmp
mov
into
repnz
repz
push
sbb
sti
jo
xchg
mov
sub
adc
jle
inc
mov
and
sahf
rep
jae
in
inc
xor
lret
push
sub
cmpsb
shl
push
mov
inc
mov
aas
xchg
push
gs
cmp
push
xor
add
and
mov
leave
gs
xchg
adc
shlb
rorl
sti
repz
je
les
movsl
or
sub
jno
jnp
in
leave
or
or
push
jp
jge
hlt
in
rclb
in
aaa
jge
sahf
cmpb
cs
pop
adc
mov
fnstsw
mov
mov
pop
cmpsl
push
xor
test
cmpsb
pop
pop
inc
push
pushf
xor
es
add
add
xchg
dec
add
sarb
sbb
or
cmpsb
loop
out
adc
daa
into
cmp
inc
scas
ds
test
sbb
jl
sti
idiv
push
xchg
jle
mov
adc
add
lret
cmp
or
fiaddl
mov
xchg
add
jmp
xor
loope
or
pop
push
ret
bnd
lret
imul
xchg
push
sti
loope
mov
jae
loopne
add
sbb
xor
mov
sbb
es
or
mov
sbb
sub
and
pop
int
cmpsb
push
pop
insl
ret
jns
dec
scas
xor
adc
lcall
xor
add
xor
dec
out
rcll
enter
push
ljmp
inc
jg
sbb
fisubs
lods
add
out
pop
xchg
adc
or
push
lock
repz
aas
mov
test
clc
inc
mov
sub
push
inc
mov
loop
sbb
repz
ret
mov
pop
pop
clc
shlb
inc
push
xor
jne
mov
out
inc
fistpl
xlat
lahf
or
je
dec
and
add
cld
addr16
in
scas
push
jecxz
fisttpl
add
cli
mov
ret
adc
xor
add
shrl
in
xchg
test
xchg
repz
add
push
dec
inc
add
inc
mov
xchg
jl
neg
and
divl
pop
lahf
mov
popf
stos
in
cs
popf
movl
or
adc
xchg
dec
enter
gs
sbb
rcll
sbb
mov
dec
jno
pop
xor
cld
sbb
pop
and
shrl
addl
out
inc
or
repz
mov
or
mov
inc
add
push
aas
push
cwtl
movsl
cmp
out
lahf
out
inc
mov
lock
pop
into
cmp
sbbb
lret
inc
xchg
add
imul
pop
add
jns
es
out
dec
mov
or
mov
nop
popf
insl
addr16
push
jecxz
adc
scas
inc
in
xor
xchg
mov
fwait
jno
aas
mov
mov
sbb
sbb
sbb
inc
cmpl
js
cmp
xchg
push
repz
inc
leave
mov
loop
addr16
popl
aaa
nop
and
ljmp
xor
hlt
lds
inc
jl
sarl
scas
rorl
dec
lods
rolb
arpl
and
mov
ja
lahf
das
icebp
nop
xchg
cmp
pushf
mov
test
gs
push
push
shlb
push
or
fwait
mov
adc
jg
mov
fs
ss
adc
gs
divb
push
cs
dec
xchg
mov
dec
leave
xor
xchg
push
pop
aam
insb
fs
push
frstpm(287
andb
push
sbb
test
or
fwait
ret
mov
xchg
cld
aaa
mov
cmp
push
cld
shll
ljmp
mov
or
and
in
dec
push
and
int
and
lcall
loope
push
mov
cmp
or
and
and
loop
lret
addr16
repnz
rep
cmp
xor
jl
push
sarb
jp
loope
inc
in
mov
jecxz
inc
push
arpl
and
in
xchg
cmp
add
lds
insb
ret
and
js
ret
or
mov
sub
sbb
or
mov
jne
sbb
xorl
mov
add
test
in
daa
aaa
arpl
cmp
int
mov
mov
inc
jp
pusha
xor
lcall
cld
pop
cld
push
inc
fists
cmpsb
jmp
pop
repz
int
arpl
inc
adc
pop
iret
mov
fs
jl
mov
call
imul
jl
mov
pop
ja
or
adc
ds
aad
adcl
cli
rorl
sbb
gs
sti
cld
sub
sbb
mov
and
lret
repz
lret
mov
arpl
push
sbb
cmp
dec
xor
inc
push
cmp
es
je
cld
or
cmpsl
sarb
pop
repz
mov
pop
or
adc
or
repz
dec
or
push
das
inc
sbb
sbb
cwtl
aam
mov
repnz
scas
dec
mov
jmp
xor
lahf
sbb
lahf
add
xchg
pop
dec
lods
sub
je
cli
movsl
dec
daa
sbb
sbb
int3
mov
sbb
xor
cmc
and
jb
outsb
bound
xor
bound
fiaddl
pop
inc
loope
or
add
mov
fistpl
lea
inc
cld
xchg
aas
clc
sub
ret
xchg
mov
je
mov
pushf
frstor
mov
mov
push
cmp
mov
pop
popa
lret
sub
repnz
pop
cld
orl
add
in
ret
xchg
dec
ror
push
xor
mov
add
lahf
repz
mov
scas
movsl
lahf
cli
pushl
pop
pop
xor
jne
je
mov
mov
enter
xchg
lret
lahf
into
mov
movsb
test
in
push
or
mov
cmpsb
mov
in
lahf
inc
lea
cli
iret
jp
push
out
jge
pop
xchg
mov
sbb
cwtl
sbb
sbb
xchg
repz
movsb
out
rol
adc
cwtl
inc
jae
sub
push
inc
dec
dec
dec
aam
jb
fstpl
dec
cld
sbb
popl
test
inc
aas
xchg
dec
cld
loopne
inc
push
xchg
ljmp
jl
push
lret
or
cmp
repz
mov
dec
cwtl
mov
js
out
sbb
mov
sti
push
sub
pushf
and
add
rcll
xor
cmpsb
mov
rep
xchg
orb
push
mov
xor
jmp
aam
cld
shll
mov
ficoml
jl
bound
push
jnp
cmc
cmpsl
subb
out
mov
out
sbb
sarb
mov
mov
or
adc
add
xchg
mov
cwtl
jnp
fidivl
int
mov
repz
inc
rolb
rorb
aam
lahf
test
lret
cmpsb
adc
xchg
jmp
push
inc
ret
popa
shrl
dec
cmpsl
dec
popl
dec
jp
shlb
mov
sti
pop
dec
push
or
fildl
xchg
mov
cmc
cmp
sbb
xor
call
xchg
lcall
sbb
adc
sub
fxch
repnz
gs
or
pushf
dec
lds
sbb
rcrl
push
jns
mov
xor
sbb
push
jl
mov
sahf
mov
lahf
je
cld
inc
int
hlt
xor
or
fsubs
js
test
aas
arpl
or
dec
and
hlt
sbb
push
cld
xchg
out
jae
add
push
dec
jl
add
or
xor
mov
imul
iret
orl
das
pop
cmpsl
sub
cmpsb
push
mov
jl
pop
dec
cmpsl
mov
mov
jmp
pop
push
xchg
and
inc
push
dec
dec
rolb
mov
mov
lcall
dec
xchg
iret
sbb
mov
ret
inc
inc
cmp
sbb
cmp
pop
xchg
and
cld
out
mov
inc
stos
xor
movsb
push
and
testl
dec
repz
fidivl
imul
out
jmp
mov
rorl
add
in
into
mov
cld
rcll
mov
jb
inc
stos
or
mov
les
fiaddl
or
and
mov
pop
pop
dec
pushf
mov
in
ljmp
sbb
je
enter
cmp
xor
jno
jo
and
and
aas
mov
call
andl
cmp
icebp
sbb
mov
or
jne
cmp
sbb
mov
in
fistpl
jl
push
pop
fistpl
imul
addb
xchg
xchg
xchg
mov
adc
rcrl
dec
lods
fwait
out
xor
xchg
mov
mov
sub
out
mov
mov
pop
xchg
pop
aas
xor
sbb
and
xor
inc
jne
repz
movsl
iret
sbb
test
and
add
sbb
jnp
pushf
flds
out
loope
dec
hlt
push
or
cmp
lds
jge
enter
xor
mov
adc
mov
push
xchg
sbb
ss
or
cld
xor
outsb
xchg
sub
dec
fstpl
mov
pushf
jecxz
and
dec
add
pop
and
cld
pusha
or
jg
inc
dec
std
scas
jae
and
jmp
popa
pop
in
fistl
cld
xchg
icebp
push
divl
out
sbb
enter
mov
ret
xchg
and
fists
push
repnz
fneni(8087
push
out
outsb
mov
dec
jb
xor
or
sti
jl
sub
scas
paddq
dec
jle
ficomps
es
xor
lret
dec
cld
scas
hlt
scas
pushf
enter
icebp
push
or
xor
mov
fldl
enter
cltd
and
pop
repz
dec
in
sbb
add
xor
mov
dec
sbb
ffree
out
push
cwtl
lock
addr16
test
inc
fs
sbb
or
xor
data16
das
xchg
push
pop
inc
xchg
in
jbe
xchg
std
jl
mov
orb
movsb
in
aam
xchg
mov
ret
lcall
ds
mov
mov
jno
sbb
cmp
jae
push
or
ja
jl
dec
cmc
pop
pop
lcall
clc
shll
push
lods
pushf
outsb
rcrl
xchg
adc
sar
outsl
and
mov
adc
cltd
cld
lods
or
adc
and
jl
dec
jae
and
pop
mov
stos
sbb
in
pop
inc
data16
push
xchg
daa
repz
jl
icebp
cmp
orb
mov
jg
mov
loope
int
inc
sub
aas
cld
push
out
and
repz
lods
add
pusha
jmp
adc
gs
cmp
mov
aas
push
cmpsb
lcall
mul
mov
cmp
lods
mov
loopne
xor
aaa
lds
ja
out
cmpsl
aaa
scas
dec
pushf
mov
sbb
mov
mov
ljmp
or
cmpsb
mov
enter
mov
xchg
stos
xchg
push
xchg
mov
aas
popa
dec
pop
repz
mov
and
lret
es
jno
test
pusha
hlt
mov
in
call
cli
cmpsb
sbb
mul
in
iret
je
test
push
int
mov
dec
mov
mov
xor
pop
ret
gs
xor
adc
adc
jl
xlat
pushf
cmp
je
mov
cltd
cmp
jmp
sub
push
mov
dec
notb
loop
outsl
pop
dec
push
call
aad
outsb
or
jbe
pop
repz
dec
out
arpl
lods
dec
fsubl
xor
push
mov
push
mov
dec
inc
pop
sbb
repz
jg
negb
cld
adc
or
popa
gs
mov
sub
negb
xchg
adc
cmpsb
imul
cmpsl
adc
sti
add
dec
push
cmp
pop
aaa
and
xor
cld
sbb
add
cmp
mov
mov
andb
fmuls
faddl
mov
in
out
js
sbb
ljmp
adc
cld
in
lret
mov
adcl
ret
mov
jl,pt
clc
mov
cli
jle
mov
pop
repz
stos
cmp
cmpb
bound
mov
fmuls
lcall
in
inc
loopne
mov
or
push
mov
das
xchg
push
cmpsl
fcoms
aas
iret
inc
inc
or
add
mov
mov
je
enter
push
cmp
repz
test
in
popa
xor
mov
sub
js
je
bound
call
jnp
push
adc
sbb
jl
or
les
imul
sbb
sbb
push
adc
bound
xor
dec
push
test
lahf
cmp
pushf
sub
movsl
int
les
roll
subl
dec
push
cmp
or
cld
push
scas
pushf
push
fidivs
ljmp
cmp
adc
mov
cwtl
popa
aas
movsl
es
popf
adc
lods
in
fdiv
out
push
out
push
shlb
arpl
repz
mov
jmp
jb
dec
in
lods
mov
sahf
repz
or
dec
inc
push
pop
jmp
jecxz
add
adc
call
mov
mov
ss
outsl
mov
repz
movsb
and
bound
or
dec
sbb
pop
data16
xor
mov
mov
mov
pop
adc
jl
push
adc
ret
inc
or
dec
mov
dec
dec
mov
and
mov
sub
and
cld
push
mov
add
repnz
jne
and
mov
jbe
xchg
hlt
dec
loopne
mov
movsl
sbb
adc
lahf
lea
out
xlat
cmp
xchg
nop
xor
mov
dec
adc
mov
dec
mov
jo
cmc
aas
fbld
dec
into
sbb
add
sbb
inc
and
add
out
mov
outsb
test
sbb
adc
adc
scas
lock
out
lods
xor
lcall
popf
lret
iret
fmulp
or
scas
and
and
insb
fcoml
xor
clc
into
inc
sub
jle
fwait
xor
jge
mov
dec
addr16
pusha
scas
and
cmc
lock
data16
add
dec
mov
cld
test
and
and
jl
mov
xchg
xchg
nop
mov
sbb
jl
or
fsts
lock
xlat
es
xchg
les
movsb
push
cld
ret
js
mov
in
push
inc
fwait
rcl
out
jnp
iret
mov
pop
ljmp
mov
jge
jl
cmpsl
pop
push
je
cmp
fsubl
scas
outsb
rcr
sbb
jmp
inc
popa
aaa
popa
popf
shlb
pop
nop
stos
dec
cmpsl
dec
lock
mov
cwtl
cld
xor
repz
xor
push
xor
xor
inc
and
js
mov
dec
gs
inc
push
cld
sub
xlat
mov
jge
lock
pminub
pop
fs
cmpl
out
movsb
and
adc
xor
push
in
sbb
cmpsl
mov
add
inc
jl
call
inc
xchg
out
dec
or
sub
test
xor
dec
enter
addr16
fildll
mov
inc
and
and
dec
out
jo
loopne
cli
cmpsl
aaa
fnstcw
movsb
cmp
and
loop
push
loop
mulb
repz
data16
mov
aas
pusha
dec
sbb
mov
push
out
push
test
push
icebp
pop
fs
xlat
icebp
xchg
mov
jl
pop
cmp
enter
cwtl
sysenter
pop
int
hlt
mov
test
xchg
sbbb
mov
jl
sbb
and
mov
pop
sbb
icebp
adc
mov
pop
jmp
loope
pop
stos
adc
leave
lahf
cmp
xchg
jp
mov
lahf
xor
addb
cmp
push
pop
sti
jae
aas
push
push
cs
movsb
shll
sbb
adc
and
fldt
dec
repz
test
mov
or
add
or
mov
add
insb
adc
lcall
or
js
xlat
pusha
daa
jnp
nop
popf
mov
xchg
repz
loop
sub
hlt
fisttpl
jmp
push
pop
in
jb
pop
sub
adc
outsw
mov
cmpsl
arpl
or
cmp
cmpsb
jge
aam
sbb
and
cld
ffreep
xor
pop
lods
pop
xor
mov
xchg
or
les
fstpl
xor
lock
movsb
jl
icebp
xlat
roll
mov
inc
mov
adc
or
aaa
jne
jg
or
ret
jno,pt
jl,pn
pop
mov
jp
adc
mov
push
sbb
dec
cli
or
mov
in
jl
jbe
push
pop
pop
inc
lods
loope
mov
and
repz
outsl
adc
test
sub
dec
ret
mov
mov
std
aas
ja
rolb
fwait
inc
sbb
dec
or
jns
sub
fimuls
adc
pop
pop
sbb
jge
nop
inc
repz
lea
push
sahf
xchg
add
sbb
std
inc
mov
lods
inc
scas
imul
mov
jle
and
push
xor
icebp
sbb
dec
push
loop
scas
inc
or
xchg
sbb
lret
insl
adc
clc
pushf
out
sub
inc
dec
mov
pop
mov
stos
push
call
clc
xchg
cld
push
js
inc
icebp
sub
mov
inc
dec
cwtl
cmpsl
ret
xchg
mov
fists
in
push
lret
mov
ljmp
repz
push
cmp
xchg
inc
inc
jae
ljmp
sub
push
mov
push
jle
sub
fwait
andb
lret
fisttps
out
dec
fs
movsb
add
pop
cmpsl
mov
bound
stc
incb
sub
dec
pusha
loopne
out
mov
or
std
testb
popa
cmp
loopne
xchg
xchg
mov
pop
mov
dec
adc
out
lea
pop
repz
xor
mov
lahf
sub
rcrl
jle
int3
adc
stc
call
inc
xchg
loope
jmp
mov
sbb
pop
je
xchg
xorb
test
or
std
or
dec
lea
sub
pop
jl
adc
sbb
or
jl
xchg
pop
insl
leave
icebp
mov
sbb
les
pop
push
sub
pop
addr16
mov
pop
dec
shl
test
xchg
das
cs
aad
test
cmpsl
aaa
add
inc
hlt
mov
or
repz
sbb
mov
and
or
mov
aas
popa
inc
inc
in
test
jbe
stc
lea
add
inc
fwait
xchg
call
mov
cmpsl
loop
dec
out
mov
push
es
xchg
int
xor
push
insl
rep
leave
mov
sbb
fcmovnb
pusha
push
out
push
lods
mov
mov
arpl
inc
cltd
adc
lods
iret
outsb
jp
cmp
stos
ficoms
repz
movsl
cld
xor
push
das
cmp
adc
repz
jmp
lds
iret
add
mov
jecxz
jecxz
cwtl
sar
xchg
lahf
cmpb
or
mov
aas
push
out
jno
mul
pop
or
fildl
xchg
and
xchg
cmpsl
jl
outsl
js
inc
iret
in
inc
out
add
mov
sbb
ljmp
and
cmc
mov
test
ljmp
dec
sbb
sbb
mov
cmpsl
jl
or
xchg
lods
sbb
fisttpl
leave
imul
push
mov
in
pushf
jmp
push
mov
sub
cld
fdiv
jecxz
repz
clc
dec
aas
cld
movsb
mov
push
mov
jnp
xchg
mov
push
ret
jbe
xchg
insw
shrl
repz
xor
xor
jg
divb
xchg
jns
test
mov
dec
inc
ret
mov
or
pusha
mov
adc
in
adc
cltd
jl
int
out
cmp
pop
or
movzbl
xchg
push
mov
jge
sub
push
mov
sbb
movsb
sub
sbb
imul
cmp
loop
loop
out
pop
sbb
add
fisttpll
popf
adc
pop
sbb
cmp
setae
js
push
fs
mov
sub
rolb
jb
sbb
out
outsb
loopne
gs
aas
lods
aad
js
mov
cmp
lret
push
mov
cmp
in
xchg
stos
sbb
cld
push
nop
lret
or
adc
test
cmp
arpl
adc
adc
cmp
add
hlt
or
jmp
es
scas
repz
jl
mov
push
mov
cmp
add
cs
int3
pop
inc
movsb
pop
xchg
andl
sbb
in
test
mov
mov
lods
or
jmp
ljmp
mov
cs
or
dec
xchg
aas
adc
popf
into
leave
and
add
repz
scas
adc
xchg
mov
push
push
mov
push
fidivs
mov
movsl
leave
add
mov
ss
hlt
jae
or
divl
fs
inc
scas
push
lock
inc
inc
mov
leave
sti
cld
cs
mov
inc
cmp
mov
sub
lea
mov
loop
sub
fidivl
fistps
dec
jmp
in
fcoms
push
in
inc
sbb
test
mov
mov
fistps
repz
xor
frstor
or
ret
or
rol
ljmp
out
imulb
fsts
mov
mov
mov
mov
pusha
pop
push
imul
fwait
fsubs
fstps
popa
stos
jp
cwtl
adc
cmp
dec
ficomps
mov
addr16
dec
mov
inc
adc
cmp
mov
mov
loopne
inc
mov
sbbl
out
push
scas
aas
dec
shrb
dec
gs
cmpb
stos
mov
jnp
jl
xchg
mov
psubsw
shll
cli
mov
push
pop
pop
lock
stos
adcl
or
shll
mov
sub
push
mov
in
loop
cld
daa
jecxz
jno
adc
inc
adc
mov
push
xor
push
imul
add
push
lods
mov
fistps
push
dec
xchg
insl
xchg
mov
cmp
lds
or
xchg
roll
lret
bound
pushf
mov
sub
xchg
cmp
sub
dec
outsb
dec
lcall
xor
aaa
jne
inc
mov
and
test
inc
fs
call
xchg
jecxz
jl
loopne
sbb
lods
decb
ds
adc
bound
cmp
xor
push
in
bound
testl
in
int
jno
repz
jl
stos
orb
repz
adc
in
jle
push
add
jl
mov
ss
and
out
aam
aas
dec
xchg
fmulp
xchg
cmpsb
rcrl
mov
sti
adc
mov
jo
adc
pop
loopne
cwtl
test
mov
jbe
out
fs
fs
mov
cmpb
lcall
cwtl
add
mov
pop
iret
mov
dec
pusha
pop
or
sub
in
fistl
inc
loopne
insb
sbb
decl
mov
sbb
xchg
iret
sbb
and
dec
mov
mov
and
test
out
dec
push
std
cmpsl
xor
xor
cmp
iret
mov
cmp
sub
jo
jl
sbb
pop
adc
adc
loopne
mov
xchg
enter
lea
data16
cmpsl
inc
push
daa
mov
popf
jl,pn
sbb
movsb
pop
pop
jnp
jmp
xchg
or
mov
je
sti
xor
push
int3
out
inc
cltd
pushf
mov
jae
add
mov
sbb
jne
adc
xchg
or
mov
jg
inc
push
js
or
sahf
adc
repz
or
and
sbb
ja
dec
cmc
jns
jnp
or
movsb
xchg
mov
xor
aam
inc
aaa
incb
inc
das
out
cli
xor
adcl
jmp
add
fs
xchg
daa
lret
test
mov
mov
lahf
push
out
mov
sbb
or
mov
dec
daa
mov
les
loopne
lret
fcoms
and
xchg
and
adc
lods
movsl
cmp
out
xchg
sub
push
jg
adc
jmp
bound
fists
pop
xchg
or
lock
jae
inc
movsl
inc
pop
movsl
mov
adc
out
movsl
stc
dec
or
cld
std
out
out
lock
repz
dec
sbb
cmp
cmpsb
fldt
or
jb
sub
ret
pop
popf
sub
rcll
dec
out
jnp
rorl
sub
mov
dec
xor
jl
adc
cwtl
subb
dec
xchg
inc
add
test
mov
mov
aaa
fistps
push
in
int3
cld
cmp
adc
cvttps2pi
mov
cmpsb
sub
inc
adc
inc
out
test
push
adc
push
cmpsb
ss
in
cmp
jmp
in
and
xchg
popa
scas
push
loopne
push
cld
push
sti
xlat
enter
out
jg
xor
iret
rolb
lret
mov
cmp
xchg
popa
adc
sub
jg
xor
cmc
dec
movsl
mov
push
repnz
push
les
and
js
and
cmp
add
add
inc
mov
fwait
xchg
int
jbe
aaa
fidivl
aas
cmp
cltd
std
mov
test
or
mov
das
inc
mov
das
mov
fisubl
pop
xchg
dec
loop
aas
roll
les
cld
fstpt
inc
inc
adc
nop
mov
inc
and
scas
jb
jne
adc
int3
mov
cmpb
ficomps
rep
inc
jecxz
cltd
adc
mov
shrb
outsb
in
fs
and
dec
or
pushf
mov
out
mov
repz
pop
leave
rcrl
adc
adc
xchg
inc
outsl
fcoms
test
fwait
pop
jl
jmp
xchg
mov
in
mul
sub
mov
aas
mov
repnz
in
rcr
cs
loope
add
push
or
ret
in
and
aam
push
mov
ficompl
cmpsb
dec
xor
ss
push
iret
test
mov
push
out
sti
sbb
clc
movl
cmpsb
mov
adc
jo
and
clc
lea
ss
out
call
imul
repz
push
cs
shlb
mov
xchg
fsub
or
xchg
xor
jge
or
xor
dec
cmpsl
add
push
sar
jne
jle
sub
and
popa
xchg
andb
int
lock
mov
int
div
adc
call
inc
inc
loop
movsl
int3
call
sub
out
sbb
dec
push
cmp
sub
mov
fidivrl
push
scas
mov
lods
fsubr
inc
and
jl
test
inc
jecxz
dec
or
push
cmp
push
mov
pushf
add
cltd
scas
dec
fistpl
cmp
cld
out
mov
or
adc
lods
sbb
adc
popf
push
movsl
addb
addr16
loopne
inc
inc
out
dec
iret
test
movsl
jno
mov
jno
adc
ficoml
sbb
scas
jnp
repnz
int3
insb
mov
cmpsb
inc
mov
test
cmp
popf
xor
mov
icebp
sbb
mov
out
cmp
mov
outsl
in
add
out
fdivl
movsb
xchg
cmpsb
into
push
xchg
inc
inc
xor
mov
inc
jp
jo
jns
and
jno
jmp
xchg
ds
outsl
leave
es
movsl
adc
or
das
xchg
ljmp
mov
xchg
js
stos
fldenv
mov
addr16
xchg
mov
mov
ja
loop
sbb
sbb
fcmovb
pop
mov
inc
cmp
xchg
jle
mov
sbb
sar
jno
lods
mov
cmpsl
leave
pop
xlat
jl
mov
xor
or
cs
ljmp
fistl
push
nop
icebp
shrl
negl
sbb
inc
mov
leave
enter
dec
divb
mov
inc
fsub
scas
xchg
dec
dec
jl
and
cmp
test
adc
dec
in
fcmovu
jb
jecxz
xchg
add
outsl
jle
push
outsl
mov
fs
cs
inc
out
pop
aaa
adc
mov
in
xchg
int
cmp
lods
sbb
adcl
jae
clc
js
test
je
lea
xchg
loopne
shr
mov
adc
lret
mov
test
sbb
jbe
push
shll
test
scas
cmpsl
adc
or
sub
add
mov
adc
das
pop
repnz
loopne
pusha
sti
popa
xchg
mov
jnp
je
push
call
cmc
sbb
or
xor
adc
lock
es
mov
cmp
jge
iret
push
scas
push
das
xchg
xchg
fistpl
or
and
or
inc
xchg
inc
dec
cli
in
pushl
test
test
or
adc
repz
lret
fdivs
js
push
push
or
sbb
fwait
pop
aas
rep
aaa
jno
jl
mov
sbb
cmp
jmp
cld
out
jecxz
or
push
cmpsl
aad
ret
pop
imul
outsl
fcomp
or
aaa
push
ja
sar
jnp
in
das
push
repz
sub
add
xchg
push
rcrb
and
scas
dec
sahf
fwait
imul
stos
mov
pop
aas
icebp
add
jae
inc
inc
add
loop
pop
jl
out
pop
lahf
cs
pusha
in
inc
rcll
mov
mov
pop
popf
jo
pop
sbb
pop
inc
ss
lret
popf
add
gs
mov
xlat
mov
int3
test
xchg
cmp
pop
pop
cltd
jg
inc
inc
and
repz
orl
xor
cld
or
loopne
mov
data16
pushf
pusha
sbb
pushf
icebp
dec
pushf
cld
sub
pop
jns
loop
mov
out
pop
mov
sbb
repz
dec
add
hlt
negl
fs
xor
inc
cmpsl
pop
inc
loopne
test
xchg
cmp
inc
xor
push
pop
xchg
add
sarl
xor
push
jecxz
dec
jle
inc
cmp
push
loop
jl
ljmp
repz
rorb
dec
cld
inc
scas
xlat
lods
xchg
xor
inc
and
sbb
out
cwtl
out
cltd
dec
fisubs
pop
bound
cwtl
adc
jl
or
bound
dec
rcrb
push
jp
cld
jbe
sbb
push
outsl
repz
das
sub
cld
in
pop
dec
sub
jp
xor
jl
cmpsb
push
mov
pop
fdivr
adc
dec
xchg
or
iret
jmp
je
push
and
add
cmp
inc
mov
lret
arpl
xor
mov
add
adc
lret
mov
lret
mov
push
jp
iret
mov
and
inc
iret
jb
cltd
or
xchg
sbb
ljmp
and
mov
aas
xor
push
jns
mov
push
xor
imul
and
push
inc
xchg
and
or
or
or
xor
mov
xchg
scas
mov
jl
or
add
and
stos
aaa
aas
inc
add
sbb
js
jp
ljmp
pop
stc
mov
cli
dec
mov
xor
dec
lret
mov
jno
pop
or
mov
popl
mov
pushf
sti
sbb
adc
hlt
jae
or
pop
adc
xor
pop
jge
adc
int
xor
repz
xor
xchg
dec
mov
mov
loopne
mov
inc
and
pop
jo
sar
sbb
adc
js
movsl
shrl
cwtl
jae
push
xor
int
push
mov
es
sahf
mov
loopne
inc
popa
or
mov
lods
repz
jmp
mov
lahf
stos
push
into
add
js
add
pop
pop
xchg
inc
xchg
adc
hlt
repz
enter
push
scas
rorb
leave
outsl
jmp
xchg
adc
repz
aaa
dec
inc
iret
mov
hlt
addl
lret
and
lahf
pop
mov
es
jns
push
pushf
mov
xlat
cmp
mov
dec
or
scas
xor
pop
andnps
adc
and
adc
ljmp
pop
sbb
or
and
test
pushf
push
scas
xor
jae
sbb
nop
ret
lahf
call
int3
cmp
rclb
jmp
scas
adc
movsl
std
sti
xchg
mov
ja
or
xchg
xchg
pop
test
daa
ret
leave
add
mov
inc
outsl
xchg
pop
cmp
outsl
lcall
lret
adc
loope
pop
sbb
cld
xchg
mov
repnz
push
cmp
insb
push
add
dec
repz
push
repz
leave
push
movsb
pop
jle
pop
movsl
xchg
add
xorl
sub
xor
ret
push
fdivr
or
add
jnp
stos
dec
jno
cmp
or
pusha
inc
inc
pop
faddl
movsl
xor
js
mov
adc
mov
cmp
pop
pop
adc
ret
lods
mov
add
pusha
call
rcl
fistl
pop
jl
inc
js
out
xchg
sbb
cmp
mov
call
adc
cmp
lret
xor
sahf
jbe
les
cmp
mov
in
fsubr
pushf
mov
inc
or
cltd
jl
ds
gs
xor
xchg
stc
sarl
addr16
mov
rcll
cld
decb
push
dec
xchg
fs
pop
sub
push
cmpsb
pop
push
sbb
ficoml
repz
inc
add
inc
push
inc
idiv
les
sub
test
dec
rcrl
xor
jne
clc
aas
sbb
pop
scas
jns
in
pushf
mov
lcall
dec
push
stc
ret
arpl
shl
popf
jecxz
mov
ret
mov
and
filds
imul
sbb
pop
push
testb
std
loope
xchg
pushf
lock
out
lret
fmul
xchg
lret
call
ret
mov
sub
insl
mov
sbb
and
clc
imul
jb
fsubrp
fadds
test
fwait
loope
mov
shlb
mov
cli
jg
cld
jmp
addr16
cmp
and
icebp
daa
sahf
dec
push
cld
sub
xchg
xchg
test
dec
adc
or
repz
pop
loopne
push
cmpsb
rcl
cli
push
cs
aaa
sub
cmpsb
dec
push
mov
in
roll
test
cmp
lahf
mov
cmp
popa
or
xchg
push
je
ret
xor
inc
and
or
fldenv
or
out
xchg
push
or
sbb
mov
xchg
dec
dec
inc
inc
xchg
xor
or
pop
pop
and
jl
inc
and
mov
mov
test
pop
and
and
outsl
test
adc
xor
and
fstl
mov
lea
movsb
lods
in
mov
inc
orb
add
pop
cld
addl
dec
mov
insb
mov
fnstcw
jl
pop
test
aad
push
push
pop
cmpsb
xor
iret
pop
cli
add
cld
jae
enter
loope
int3
xor
xchg
lock
push
and
pop
xor
push
xchg
push
or
mov
lods
leave
lock
orb
mov
mov
icebp
cld
or
in
mov
jnp
jne
jl
xchg
adc
cld
ljmp
inc
push
xor
cmpsb
jg
loope
jle
xor
cmpsb
push
pop
and
adc
repnz
mov
jl
movsl
push
cmp
out
mov
aas
push
xlat
rol
dec
shlb
aas
int
clc
das
adc
adc
push
push
fnstsw
mov
in
xchg
inc
push
outsb
in
mov
mov
not
adc
iret
outsl
cmp
lea
out
push
int
xchg
jne
xchg
rcrl
jl
sbb
test
sub
dec
imul
or
pop
or
fwait
sbb
arpl
clc
into
or
push
xchg
lret
dec
mov
push
pop
movsb
dec
ret
fs
lret
jp
mov
pop
into
out
dec
fdivs
outsb
pop
jnp
add
and
lock
repz
sbb
and
stos
lds
sbb
pop
xor
pop
adc
fadds
push
sti
les
xchg
scas
inc
movsb
stos
mov
scas
mov
sbb
repz
cmp
adc
mov
js
push
xor
repz
call
cs
mov
adc
fwait
or
in
ss
pop
sahf
loop
int
push
aas
clts
shlw
cmp
addb
dec
out
jb
adc
mov
repz
nop
out
repnz
sub
aas
sbb
or
das
or
xchg
sbb
idivb
xchg
mov
outsl
mov
jl
repz
xchg
pop
cld
icebp
xor
push
dec
jl
out
test
adc
lods
into
mov
xchg
imul
cld
adc
mov
dec
xor
pop
mov
in
push
push
data16
jge
dec
lret
aaa
xor
jo
mov
aas
addr16
sub
jmp
or
es
cmpsb
xchg
fdivr
mov
sub
addr16
sub
inc
mov
push
cmpsb
std
inc
xor
jo
nop
ds
ja
sbb
pop
jo
mov
repz
xor
test
aam
jp
pop
mov
aam
cld
pop
add
fldt
mov
lahf
test
or
or
push
out
enter
or
je
cmp
cmp
imulb
and
outsb
inc
inc
out
sbb
ret
addr16
jg
xchg
in
jg
enter
gs
sarl
mov
rcll
push
shl
jne
jo
mov
mov
arpl
cli
out
fwait
xchg
jbe
dec
stc
ret
call
stos
inc
call
and
jg
lea
aam
inc
imul
aam
movsl
pop
repz
mov
loope
cmp
movsl
dec
push
aas
xchg
mov
mov
dec
jmp
cwtl
popa
mov
push
cmpsl
push
cwtl
cld
mov
cmp
mov
mov
or
mov
jmp
fadds
cltd
cmp
stos
iret
inc
fcmove
sbb
cmpsb
mov
outsb
test
repz
js
sbb
cmpsb
stos
cmpsb
in
sub
out
xchg
stc
push
addb
sub
cwtl
cmp
mov
popa
sbb
jmp
cwtl
cld
mov
mov
js
mov
xor
scas
inc
les
test
xchg
inc
pop
bound
mov
or
scas
ljmp
push
mov
xchg
xchg
es
cmpsb
sarl
mov
dec
stc
pop
pop
sub
cmp
adc
pop
pmulhw
repz
push
fwait
in
sbb
test
pop
pop
sbb
sub
lds
jmp
dec
enter
outsl
sub
mov
sbbb
or
enter
xchg
in
clc
jl
pushf
sarl
mov
mov
lds
fdivl
lods
negb
jmp
dec
scas
inc
jo
inc
push
sbb
push
adc
cmpsl
sub
cld
jbe
lds
fiaddl
and
lahf
adc
lcall
sbb
fadds
inc
mov
into
sarl
sub
or
sbb
or
xlat
or
adc
int3
movsb
outsb
xchg
push
pop
ss
dec
or
cltd
out
and
lahf
xor
lret
andb
sbb
repz
daa
shl
aad
test
add
inc
rcrb
mov
sti
decb
js
add
and
mov
out
adc
lds
jge
popa
dec
ss
ficoms
cmp
mov
cwtl
sbb
jbe
repz
fcoms
data16
popa
or
repnz
sbb
and
mov
in
sbb
popf
daa
and
xor
sub
pop
and
enter
out
lds
inc
in
jnp
cmpsb
ffreep
and
jl
cmp
imul
mov
and
add
call
cmpsb
ja
pop
mov
fs
push
out
insb
mov
dec
dec
shlb
pop
int3
sbb
mov
cmp
cld
sbb
inc
push
push
popa
push
movswl
or
dec
inc
xorb
repz
xchg
out
in
jl
xchg
adc
imul
inc
int3
dec
or
adc
pop
subl
lock
push
insb
std
sbb
repz
clc
icebp
pop
mov
in
jge
xchg
aaa
sbb
sbb
pushf
xchg
mov
shll
int
xchg
outsb
popa
xchg
cmp
push
mov
lods
mov
cmp
sarb
insl
mov
repz
push
loope
arpl
jno
aas
adc
fsubrl
jecxz
cmpsl
clc
jl
jge
pop
pop
xchg
fildl
mov
das
mov
adc
mov
sub
pop
inc
mov
mov
fs
push
pop
movl
into
andl
das
negb
mov
cmp
cmc
dec
inc
psubd
shrl
scas
outsl
je
mov
or
cmp
pop
jp
jmp
pop
addb
cli
in
sbb
aam
cmc
test
and
into
arpl
into
jbe
push
dec
out
sbb
cld
loop
ror
lods
dec
push
sbb
mov
push
add
das
mov
aas
mov
push
cld
sub
mov
add
in
rcl
and
pop
jl
xchg
mov
add
xchg
mov
shl
cld
test
xor
mov
adc
ljmp
shlb
sbb
mov
mov
icebp
cmpsb
mov
or
push
mov
cld
adc
ficompl
jge
or
xchg
aam
js
push
loope
cmp
adc
pusha
xor
repnz
les
adc
lcall
and
xor
movsb
sbb
bound
cmc
adc
cmpsl
fwait
cmp
loop
stos
enter
fwait
push
shrb
cld
pop
cmp
roll
jns
add
daa
pop
cltd
popf
mov
in
pop
inc
dec
mov
sub
cld
or
cmp
inc
shr
in
mov
lret
repz
es
xchg
movsl
test
or
add
inc
inc
test
xchg
jmp
std
inc
mov
test
repnz
or
push
fs
repnz
or
cld
xor
sub
lock
mov
jmp
in
in
leave
movsl
stos
dec
je
push
inc
aas
add
pop
pcmpeqw
dec
or
ds
xchg
mov
cli
adc
pop
repz
mov
lret
and
sahf
popa
in
sahf
frstor
push
dec
loop
lret
jmp
js
enter
pop
or
ljmp
cld
add
push
repz
add
pop
pop
cld
test
js
mov
mov
pushf
repz
aad
fistps
out
repz
or
lea
fldenv
outsb
mov
lods
adc
fcmovb
push
add
add
sub
dec
out
shl
adc
adc
inc
inc
pop
dec
jp
mov
pop
sti
and
fidivs
int
mov
lret
mov
jbe
cld
ja
push
add
lea
jns
fisttpll
iret
cmp
repz
ret
lock
sub
in
test
pop
movsb
repz
dec
ds
inc
decl
scas
js
mov
das
rorl
add
inc
fwait
les
and
inc
stos
adc
dec
test
addb
xchg
js
inc
outsb
fs
jl
or
push
jl
popl
xchg
add
mov
mov
stc
out
pop
push
add
sbb
sub
in
in
dec
scas
mov
lods
push
roll
out
movups
repnz
fcmovnu
imul
and
js
mov
push
sub
cmp
xchg
or
mov
xchg
rcrb
jns
adc
arpl
gs
dec
mov
pop
pop
negb
es
adc
inc
and
push
in
or
inc
aas
lock
jl
jo
lods
out
stos
xor
dec
mov
cmpsl
mov
lock
xor
pushf
add
lods
dec
cmp
loop
lods
mov
and
push
inc
popf
dec
inc
mov
inc
out
jmp
jno
pop
repz
cmp
adc
lods
roll
cli
or
out
ljmp
xor
stos
dec
lock
mov
xchg
in
jl
lret
dec
dec
ds
xchg
mov
bound
sub
inc
or
ljmp
pusha
add
rcrl
jl
pop
pop
insb
mov
adc
in
out
mov
inc
shrl
cmp
data16
lea
cmp
inc
nop
mov
loop
push
dec
xchg
jo
cld
jno
cmp
pop
sbb
xorb
add
mov
cmc
or
inc
sbb
mov
cmp
or
xor
fsubrl
and
imul
mov
pop
xchg
push
dec
stos
leave
sbb
and
outsl
pushl
rep
sbbb
fmul
inc
mov
adc
and
in
sbb
movsb
adc
pop
xchg
pop
in
cld
ja
int3
aad
mov
in
dec
pushf
lret
lahf
xchg
nop
dec
or
mov
xchg
cld
loop
loopne
adc
clc
sub
dec
sbbb
repz
xor
enter
sbb
sbb
cwtl
xlat
cmpsl
xor
inc
gs
push
dec
repz
movsb
les
dec
mov
and
movsb
cld
mov
test
popf
outsb
sbb
andb
push
fs
incb
aam
scas
ret
ja
cld
cmp
jge
sub
dec
mov
and
xchg
enter
cmp
push
int
adc
insb
mov
hlt
rolb
sbb
xchg
sub
in
popf
aas
dec
dec
mov
cwtl
mov
repz
insl
pop
rorb
inc
dec
stos
mov
dec
mov
or
lock
cwtl
pop
mov
push
icebp
sub
and
sarb
clc
les
inc
out
bound
inc
aaa
cld
add
xor
push
call
adc
icebp
inc
jge
mov
js
scas
xor
je
je
sti
and
shr
inc
out
stos
jp
mov
rol
inc
push
add
aas
cld
mov
jnp
sub
sbb
xchg
repz
out
adc
sub
adc
jl
pop
in
mulb
movsb
jb
dec
add
stos
testb
xchg
jl
sub
push
pop
sub
xor
mov
mov
adc
pop
or
inc
inc
xchg
mov
xchg
xor
jg
das
mov
fisubrl
or
out
adc
jbe
xchg
jb
inc
pop
repz
jl
cmpsb
push
push
jno
fdivrl
adc
jp
jae
mov
jb
in
jl
jae
push
loopne
add
mov
or
cmp
sub
rcl
cld
sbb
out
es
int
rclb
loope
jb
in
xlat
cmp
mov
negb
and
lods
pop
outsl
cmp
cmp
mov
insb
sti
or
mov
adc
push
cmpsl
stos
jo
movsl
mov
cltd
add
mov
jnp
lods
xchg
pop
xchg
add
je
cld
out
lods
pop
jp
addb
xlat
sub
sbb
mov
es
xor
pop
jl
mov
push
repz
testl
shll
push
jl
aaa
popf
inc
jne
add
lods
dec
and
mov
movsb
inc
jl
mov
xor
adc
out
add
jmp
mov
sub
and
rorl
mov
aas
or
ja
test
shlb
in
das
and
lods
rorl
add
inc
dec
movsl
inc
jmp
fisubs
mov
mov
ret
insb
inc
or
mov
idivb
lock
sbb
ret
jns
fs
dec
jl
es
lods
call
mov
push
cmp
cld
jge
out
das
outsb
cmpsb
aam
xchg
mov
mov
push
lcall
inc
jl
fistpll
lea
sbb
mov
adc
mov
clc
cwtl
adc
adc
out
dec
lea
icebp
mov
mov
hlt
dec
shr
lea
mov
test
getsec
sbb
in
adc
inc
inc
jno
add
push
dec
cld
push
pop
sbb
and
or
rclb
imul
fistpll
mov
in
repnz
and
outsl
js
push
cld
roll
aam
xchg
cmp
rcrb
ds
outsl
or
call
lods
or
cmp
xchg
pushf
push
pop
ds
xchg
test
or
data16
pop
sbb
adc
adc
pushf
cld
hlt
imul
pusha
inc
or
adc
pop
jns
adc
mov
xchg
jg
mov
cwtl
add
pusha
push
jne
loopne
jl
or
push
cmp
ret
xor
rcrb
cmp
sbb
insl
lret
les
frstor
inc
popf
lret
insl
jg
lock
popf
xor
jnp
in
add
mov
pop
test
pop
xor
or
mov
aad
mov
lock
jno
xchg
sbb
ljmp
mov
dec
sahf
mov
xor
push
pop
out
pop
sti
pushf
insb
fwait
cs
lock
je
push
push
dec
cmp
adc
push
mov
push
aad
cld
pop
dec
fmulp
pop
imul
test
repz
dec
sbb
inc
dec
cltd
cmp
dec
out
adc
inc
clc
xchg
push
xor
cmp
repz
int3
sub
push
mov
cwtl
inc
inc
inc
stc
or
and
sub
repz
inc
test
and
ss
add
hlt
ret
fdiv
in
sub
pop
inc
shlb
outsb
out
jae
cmp
jl
aam
test
add
daa
repnz
or
xor
cmpsl
out
mov
or
mov
cmp
dec
outsb
idiv
repz
test
pusha
push
or
cld
jbe
cmp
int
in
call
xchg
loop
subl
nop
rcll
pop
ds
out
shll
jl
fcmove
adc
pop
cmp
add
addb
jp
loop
popf
int
out
mov
mov
insb
or
pop
cmp
jle
mov
inc
mov
andb
loope
inc
dec
mov
push
movsl
imul
xor
adc
cmpsb
pop
sbb
fdiv
inc
sub
mov
mov
xchg
dec
imulb
pop
dec
inc
pushf
cli
fs
jp
cmp
dec
or
cmpsb
sub
gs
je
gs
shll
je
movsl
jmp
orb
cmpsl
pop
test
aam
xlat
cld
or
into
pop
xchg
aad
sbb
jl
push
pop
xor
or
les
pop
gs
ret
and
add
fwait
cwtl
and
inc
popa
fcompl
orl
mov
outsb
adc
in
and
ljmp
pop
stos
pop
push
sbb
ret
sahf
mov
inc
dec
fnsave
and
mov
inc
cld
mov
int3
shl
dec
loope
or
out
sbb
das
xor
push
or
mov
jne
aad
out
fstp
pop
cli
push
into
or
sbb
repz
lcall
jecxz
scas
mov
dec
sub
mov
xchg
or
shl
mov
adc
insl
jmp
sbb
ja
outsl
test
subl
aad
repz
iret
insb
stos
cmp
fsubr
add
test
lcall
sarl
pop
clc
orl
lahf
cmc
adc
mov
cmc
das
mov
mov
mov
and
pop
inc
mov
shrl
arpl
test
pop
ljmp
jl
mov
jmp
dec
pop
add
cli
fsincos
or
stos
add
mov
jg
imul
inc
push
lods
enter
mov
push
mov
lock
repnz
inc
mov
imul
bound
dec
xchg
sbb
jbe
jnp
in
repnz
sub
fwait
pop
cmp
and
outsl
test
inc
pusha
jmp
rorl
in
sub
xlat
cmpsl
fucom
mov
cld
cmp
call
jns
add
sahf
sahf
xchg
das
sbbb
push
push
in
xchg
in
mov
xchg
aad
mov
mov
ss
xor
repz
loopne
fwait
sbb
inc
arpl
jns
inc
mov
mov
mov
jg
or
xlat
repz
aas
out
pop
shl
xchg
mov
aam
ds
dec
in
xor
adc
pop
fdivr
lret
fmuls
and
pop
lods
inc
inc
pop
negb
xor
add
testb
dec
mov
je
cld
jmp
aam
lret
inc
cmp
shll
data16
xchg
fisttpl
bound
or
ljmp
mov
dec
aas
movsl
dec
fwait
mov
call
fbld
cmp
push
repz
pop
adc
dec
xchg
inc
shll
dec
pop
dec
adc
fmull
lea
movsb
sub
xchg
in
cmp
jno
and
aas
movsb
cli
addr16
xchg
jmp
mov
testl
cli
ljmp
sub
int
push
inc
jo
inc
loopne
daa
xchg
sti
fcmovb
out
adc
jae
cmp
repnz
rolb
add
outsl
fcoml
mov
mov
out
popl
fisttps
mov
push
sub
dec
lock
mov
rolb
push
xchg
test
cmpsb
push
cmp
pop
rolb
mov
push
add
xchg
or
fwait
mov
mov
lret
mov
cmp
int3
xor
sub
inc
dec
int3
lea
adc
js
in
jl
outsb
mov
lods
lea
mov
loope
xchg
xchg
cmp
mov
sub
pop
mov
mov
stos
inc
sbb
xchg
fildll
sbb
les
sbb
mov
xchg
inc
jmp
mov
cli
movsl
ljmp
mov
or
adc
sbb
cmp
mov
push
mov
lods
arpl
cwtl
and
out
aad
pop
xlat
xor
std
fstpl
or
add
push
loope
sbb
dec
pop
mov
gs
adc
popa
movsb
inc
mov
iret
jg
mov
or
mov
dec
cmpsb
sub
idivl
iret
in
mov
in
sbb
or
aam
jbe
mov
into
addr16
bound
and
cmc
mov
add
or
cld
push
fmuls
sub
or
pop
adc
inc
jae
or
cmp
dec
jecxz
pop
shl
xchg
sti
push
ljmpw
test
cld
fldcw
scas
xor
cmpsl
push
pusha
inc
mov
sbb
mov
jmp
outsl
push
jb
push
cmp
and
clc
push
sbb
in
mov
inc
shrl
dec
mov
push
xchg
mov
test
jl
mov
pop
insl
negb
lea
cmpsb
sub
sbb
xlat
lcall
dec
sub
jnp
mov
cmp
adc
mov
popa
out
icebp
cmp
mov
loopne
outsb
fwait
bound
xchg
aam
sbb
sbbb
dec
outsl
add
cwtl
aaa
cvtps2pd
push
xor
inc
dec
sub
inc
psraw
sub
pop
or
orb
repz
mov
fisubl
xor
mov
sbb
mov
lock
fs
push
xchg
pop
repz
xlat
out
out
or
dec
cld
or
movsb
mov
iret
push
pop
and
out
fnstenv
cld
pop
xor
fs
adc
ljmp
inc
daa
xchg
and
stos
push
popa
pop
xchg
xor
push
jl
mov
xorl
sub
and
mov
adc
cwtl
sub
inc
push
xchg
cltd
pop
subl
inc
inc
jmp
popf
pop
or
jg
mov
lret
cmpb
ret
and
inc
shr
push
out
xchg
push
sbb
enter
subb
out
pop
sbb
popa
mov
jg
adc
mov
jg
ror
jne
std
insb
cmp
sbb
push
sar
cmp
pop
xchg
or
in
lock
cld
loope
mov
mov
out
outsl
pop
cmp
add
fisttps
loope
sub
inc
push
xorb
or
xor
dec
aaa
out
mov
popf
fwait
jg
sbb
cmp
push
dec
mov
rcrb
pop
push
xor
sbb
mov
inc
jmp
jns
dec
mov
addl
or
les
adc
adc
xchg
pop
es
inc
imul
scas
xchg
pop
pop
and
xchg
or
push
loope
popf
loope
or
xor
and
pop
shlb
into
mov
push
adc
xchg
xchg
rolb
or
inc
cmpsl
packssdw
lret
and
out
lea
lret
sti
pop
sub
cmc
push
jp
insl
std
jnp
mov
incb
test
sub
imul
dec
loop
adc
jmp
imul
or
xchg
inc
mov
and
sti
mov
into
sub
insl
push
or
mov
dec
loop
outsb
jb
sti
and
cld
and
xchg
cwtl
dec
mov
xchg
push
sbb
cmpsl
fwait
sbb
lods
sbb
jnp
aas
jo
adc
or
loopne
repz
cmp
rcll
cmp
pop
insb
inc
add
push
mov
mov
pop
adc
ds
mov
gs
xor
jle
imul
push
por
pop
lods
xor
repnz
fwait
rolb
gs
xor
out
scas
xor
ret
sbb
pushf
or
mov
jp
mov
xor
inc
mov
xchg
hlt
dec
cmp
pushf
out
loopne
test
and
dec
push
adc
cmpsb
outsl
or
mov
or
stc
adc
mov
jmp
cmp
inc
out
mov
mov
pop
push
inc
dec
loop
lea
mov
out
or
aaa
cmp
div
cmc
mov
cli
pop
lds
cmp
pop
rol
mov
loope
lea
pop
sub
in
xchg
cld
movsl
movsl
ret
ret
jl
loopne
cmp
bound
or
mov
push
xchg
push
adc
sti
scas
cmp
frstor
ret
or
xchg
hlt
js
add
mov
inc
push
es
ret
add
push
pushf
and
scas
jp
pop
movsb
mov
lret
data16
mov
outsb
and
jecxz
pop
std
mov
push
mov
repnz
movl
mov
pop
dec
and
imul
pop
insb
incl
or
xor
dec
mov
inc
jmp
add
js
enter
or
mov
cmp
or
rolb
mov
add
movsl
fs
mov
dec
cld
xchg
fldl
stc
sub
xor
mov
ret
cld
std
sarl
js
movsb
jo
ret
mov
mov
imul
mov
or
mov
mov
mov
adc
add
pop
fcoml
sub
jne
mov
xchg
aad
pop
ds
pop
aaa
and
data16
stc
jns
lds
scas
mov
jge
jbe
add
inc
jp
out
or
adc
lock
rcl
mov
inc
dec
add
and
mov
dec
pop
mov
loopne
js
movsl
loopne
mov
das
test
inc
cmpsb
iret
and
ret
or
enter
mov
dec
add
push
and
repz
outsb
pop
pop
adc
cld
data16
stos
lods
icebp
aas
push
dec
ret
repz
cmp
test
cli
lret
xchg
dec
mov
or
pop
test
inc
or
jecxz
push
dec
xor
sub
pushf
xchg
sbb
lods
dec
cs
xor
sbb
jne
and
jle
or
stc
add
mov
adc
cmp
or
adc
aaa
add
out
aam
adc
or
mov
cmp
xor
rolb
test
std
inc
and
outsb
repnz
hlt
mov
movsl
loopne
mov
mov
inc
cmp
xor
dec
push
or
push
sub
inc
loope
shlb
std
mov
cmp
ds
xchg
adc
enter
pusha
in
jle
mov
mov
lods
dec
push
movsl
push
add
cmp
insb
test
lock
push
mov
mov
pop
mov
cmc
and
jbe
add
lea
jo
mov
mov
ret
sbb
and
cmp
rcll
aas
mov
lods
push
js
out
fs
inc
or
imul
stos
in
push
dec
or
mov
add
mov
mov
js
and
ljmp
jl
push
inc
and
sub
je
lock
sub
jno
pop
sub
xchg
mov
jl
aaa
arpl
adc
aaa
daa
lret
xor
dec
push
fcmovu
xor
jo
movsl
out
ret
inc
jne
repz
inc
cmp
xor
cmp
in
push
popa
xchg
cmp
sub
dec
and
outsl
and
xor
rolb
movsl
sarl
popa
aaa
add
scas
push
jmp
in
stos
aad
xchg
push
mov
das
js
add
pusha
lock
xchg
ret
fimull
jae
lods
std
mov
dec
sub
mov
dec
pusha
es
push
mov
cld
aas
sbb
jecxz
jl
jp
xor
inc
or
inc
mov
adc
xchg
mov
out
sub
lods
adc
adc
or
mov
nop
mov
ret
pop
cwtl
sbb
insb
clc
inc
addb
pop
les
sbb
imul
mov
les
cmp
mov
repz
jne
enter
xchg
cmc
xchg
or
adc
or
mov
lds
cld
push
cmp
pop
aaa
adc
fs
mov
loop
aam
rorb
pop
dec
pusha
shll
fdivrl
push
notl
mov
adc
daa
pop
inc
or
dec
jno
fs
cmp
dec
dec
jae
lock
pop
cld
dec
repz
pushf
or
sbb
ljmp
xchg
add
or
outsl
dec
push
fs
test
inc
pop
negb
xor
shll
pop
ss
fcomi
mov
dec
mov
adc
int
mov
stos
sarl
sub
test
aaa
ret
inc
xor
faddl
rep
push
cmp
sbb
mov
xchg
outsl
or
mov
pop
or
inc
dec
dec
inc
cmp
pop
mov
jnp
lods
mov
clc
repz
or
daa
bnd
mov
sahf
iret
loope
test
cmpsl
dec
push
push
rcrl
lahf
inc
cmpsl
movsl
test
in
adc
dec
and
scas
gs
dec
cld
mov
pop
ds
test
nop
ss
int
xchg
in
cmp
movsl
adc
loop
dec
xor
xor
repz
push
sbb
cld
sub
pop
popa
xchg
push
mov
adc
push
or
mov
adc
pop
xchg
inc
data16
adc
out
addb
mov
lea
mov
dec
mov
cld
subl
dec
hlt
inc
insl
imul
popf
lcall
add
jge
mov
push
pusha
add
gs
aad
popf
rorl
dec
sub
xchg
out
repz
dec
in
jo
or
or
stos
bound
inc
jl
mov
jb
jae
push
sbb
mov
mov
ror
or
mov
test
sahf
adc
push
ljmp
out
rorl
or
or
gs
adc
push
xchg
push
xchg
mov
sub
push
and
mov
adc
adc
inc
add
stos
dec
xchg
sub
ret
mov
movsb
xor
add
mov
dec
dec
xchg
mov
cmp
jnp
aaa
rorb
cmp
sub
xor
loopne
mov
and
ja
loop
push
and
lock
push
sbb
cltd
repz
pop
or
cld
and
push
into
mov
xchg
dec
fcompl
arpl
repz
push
stc
imul
cld
and
push
dec
out
or
inc
or
pop
int
cld
xor
fsubrp
or
repz
je
scas
or
adc
shll
inc
pusha
dec
pop
xorb
dec
das
rep
inc
push
push
jmp
shl
xor
dec
xchg
mov
cmc
aas
scas
push
sbb
sbbl
mov
push
pop
add
mov
xor
fists
cmp
aaa
int
xor
fs
mov
sub
mov
loopne
imul
addr16
pop
cld
push
sbb
in
pop
pop
mov
adc
mov
mov
repz
movsb
test
add
mov
sub
jmp
repz
je
or
pushf
inc
cmp
and
adc
sub
push
push
out
xor
rcr
fcoms
aas
inc
fstpt
xor
repz
push
jle
ds
ret
and
repz
inc
je
mov
test
stos
icebp
rclb
movsl
cmp
fsubl
cld
inc
or
data16
mov
imul
xchg
imul
jae
cmp
xchg
jb
jle
sub
mov
inc
jo
cmc
jp
push
mov
cmpsl
adc
cld
push
inc
lcall
xor
pop
sub
pop
cmp
loop
mov
test
notb
sar
cld
sub
mov
mov
divl
out
cmp
and
stc
ljmp
fmulp
bound
mov
jo
add
addl
sub
xchg
arpl
dec
cmp
lea
dec
mov
dec
adc
xor
aaa
mov
or
repz
addr16
fmuls
jp
mov
and
mov
and
and
inc
adc
adc
cmpsb
in
cld
push
push
js
aas
adc
dec
dec
sbb
inc
sbb
stos
push
cmp
movsb
sbb
sti
incb
inc
js
daa
sbb
sub
call
in
adc
push
mov
scas
les
push
cmpl
cmp
cld
adc
push
jle
or
repz
mov
xchg
or
repnz
leave
stos
adc
iret
test
iret
pop
lods
sub
mov
stos
jecxz
mov
xor
out
sbb
stos
pusha
dec
jne
in
xchg
lea
lea
movsl
push
jl
or
or
pop
out
jp
sahf
roll
sub
arpl
imul
test
and
cld
outsl
dec
pop
cltd
jp
pop
push
ret
or
fdivl
mov
lds
inc
xor
arpl
cmc
push
mov
testb
pop
jp
stc
cmc
clc
cld
popa
add
loope
mov
out
stos
push
pop
data16
bound
sti
hlt
bound
push
cmp
adc
mov
pop
mov
lret
xchg
lcall
xchg
mov
cltd
cmc
xor
sbb
std
mov
cmpsl
adc
push
mov
sub
fldln2
repnz
mov
inc
cmc
lock
sbb
lcall
or
and
inc
cmpsb
mov
xor
xchg
or
mov
incl
movsb
xor
hlt
mov
sub
dec
inc
in
inc
ds
ds
adc
xchg
or
shr
movsb
stos
mov
cmp
lret
in
dec
rorb
cld
adc
fdiv
jge
pop
movsb
fistl
mov
stos
jns
mov
or
and
jl
or
sbbb
mov
test
ret
mov
jns
inc
inc
shl
inc
int
pop
out
dec
in
inc
fcoml
repz
pop
mov
cmp
push
jge
mov
out
js
bnd
nop
arpl
jo
add
or
shrb
cld
jno
cwtl
mov
xchg
test
push
xchg
in
into
inc
xchg
cld
push
inc
cmp
es
mov
sbb
mov
or
jns
test
cmp
adc
hlt
xchg
cld
pushf
movsb
aam
pop
not
outsl
adc
call
dec
push
push
cli
mov
out
mov
pop
ljmp
scas
mov
cld
jecxz
ja
xlat
add
scas
lods
inc
aaa
or
mov
mov
aas
and
leave
dec
add
clc
jb
outsl
add
sbb
adc
cmpb
inc
addr16
pop
cmp
es
pop
lahf
cld
xchg
lock
cmp
cmp
faddp
shl
xchg
aad
jecxz
mov
sahf
fistl
adc
lods
mov
cld
push
shl
loope
stc
push
mov
or
or
fcmovne
jp
and
into
daa
repz
push
stos
fcoms
mov
dec
out
push
adcl
out
orb
push
adc
movsb
scas
jp
subb
xchg
out
pop
push
fwait
xor
fs
xchg
jl
loope
and
in
andb
sub
rcrl
push
test
cmp
in
shlb
jbe
out
adc
hlt
les
cmp
pop
push
inc
icebp
mov
mov
and
push
or
inc
ljmp
xchg
mulb
in
divl
pop
test
push
idivl
pop
mov
sub
lahf
les
add
movsb
push
sub
nop
jmp
lret
add
jl
push
xor
push
xlat
and
add
mov
cli
rcl
ret
pushf
js
push
xchg
repz
jbe
mov
shl
addb
aas
je
sti
cmpsl
pop
mov
pop
mov
xlat
push
ss
sbb
inc
xchg
dec
ret
hlt
ja
sbb
mov
cmp
xchg
sub
jl
test
dec
and
jecxz
or
cld
shlb
jae
imul
or
sbb
or
jmp
mov
pushf
push
mov
mov
push
lcall
cmpsb
xchg
xchg
push
mov
js
in
out
fs
gs
pop
xor
cmp
andb
mov
push
add
subl
imulb
call
mov
addr16
sbbl
xchg
push
mov
mov
cwtl
adc
push
push
je
ficoml
adc
pusha
mov
repz
jnp
cmp
adc
and
xchg
popf
inc
into
mov
pop
inc
mov
cmp
fisubl
or
mov
lods
aaa
xorb
arpl
sub
outsl
test
int3
sub
cli
pop
in
inc
sahf
cmp
mov
lock
mov
jo
jg
imul
inc
mov
cwtl
repz
and
bound
mov
out
add
stos
inc
fisubs
push
pop
pop
stc
addl
int3
addb
jl
incl
dec
or
sub
inc
ljmp
std
scas
adc
push
es
movsl
pusha
or
xlat
or
nop
lret
out
lcallw
push
mov
cmpsl
aam
aad
punpcklbw
ret
nop
adc
inc
inc
adc
mov
dec
push
rclb
mov
push
push
ljmp
rclb
jae
mov
scas
sub
loop
idivb
add
jg
mov
sahf
and
rcrl
call
aaa
push
popa
ret
out
int
add
hlt
test
outsb
mov
xor
lahf
xchg
adc
aaa
or
jl
push
stos
roll
jns
dec
repnz
sub
shl
int3
test
adc
pushl
cld
xor
movsl
lret
adc
xor
dec
sbb
add
ret
out
cwtl
popa
outsb
xor
push
ljmp
hlt
pop
ss
pusha
aas
sbbl
inc
mov
bound
mov
adc
fcoml
sub
jl
inc
inc
test
sbb
adc
out
pop
xor
pop
loopne
push
dec
adc
movsb
inc
clc
lods
jg
cmpsl
push
mov
sbb
js
sub
out
xor
addl
lds
push
cld
sti
movsl
dec
pop
add
into
idivb
jmp
lret
pop
rclb
or
xchg
jmp
push
iret
adc
out
pop
or
mov
cmpsl
in
test
jl
leave
shll
push
mov
or
push
jg
adc
xchg
inc
dec
sbbb
sub
inc
mov
cmp
adc
sub
adc
jl
scas
lods
popf
mov
mov
push
cmp
js
mov
jle
adc
bound
cld
mov
imul
xor
cmp
faddl
xor
fisttps
cld
mov
sbb
dec
ds
shrl
xor
push
mov
jae
xchg
sub
xchg
mov
rcr
mov
cld
stos
push
icebp
movl
xor
mov
xor
scas
sbb
test
loop
out
pop
mov
sbb
idiv
cmp
test
jecxz
mov
mov
and
in
cmc
jno
int3
popa
mov
out
ljmp
insl
mov
and
int3
or
je
and
dec
mov
dec
arpl
mov
and
sbb
mov
cmpsl
push
icebp
subl
mov
sub
cmp
cmpsb
xchg
cld
psraw
test
jnp
call
add
cmp
xor
adc
rcll
mov
test
and
idiv
popf
and
roll
xchg
out
or
fcomip
out
hlt
inc
fdivrl
inc
bound
sbb
andb
or
sarl
pop
mov
xor
lods
adc
jmp
dec
ss
fcomps
call
in
in
lret
push
or
mov
mov
test
mov
data16
sbb
fcmovb
loopne
dec
fsubp
xchg
adc
and
sahf
inc
dec
lret
xchg
inc
bound
cmp
stc
inc
nop
icebp
div
lret
andl
adc
inc
in
push
addr16
clc
mov
inc
inc
sub
push
add
cmpsb
mov
xchg
jo
dec
loopne
mov
scas
or
rorl
test
inc
dec
gs
xor
pushf
mov
loope
scas
sbb
repz
jg
movsl
out
dec
aam
cmp
push
cmpsl
movsb
stc
pop
les
fcomp
out
movsl
dec
pushf
pop
lods
xor
imul
adc
sub
cmpsl
push
adc
mov
dec
in
adc
sbb
aas
push
hlt
inc
dec
cmpsl
push
popa
adc
shlw
xchg
dec
movsb
and
repz
jle
addb
pop
xchg
stos
sti
push
cmpsb
ljmp
nop
push
ret
cli
movsl
or
xlat
pop
jl
mov
xor
mov
repz
inc
sub
sub
std
int
mov
cmpsb
ja
aam
popa
ret
dec
push
sbbl
lods
inc
outsl
adc
test
dec
out
inc
rorl
xchg
jle
out
inc
jg
popa
mov
in
pop
xchg
cwtl
repz
lods
loope
int3
pop
xchg
sbb
xchg
or
jecxz
adc
repz
xchg
dec
jae
sbb
mov
daa
mov
mov
dec
inc
mov
repnz
jno
ds
out
aas
insl
iret
adc
icebp
aas
inc
push
mov
adc
xor
mov
xor
fwait
clc
dec
icebp
mov
shl
enter
xlat
iret
jns
int3
xchg
addr16
pop
jle
and
test
outsl
mov
or
sub
xchg
test
adc
add
pop
lret
push
in
xor
rcrl
xor
xor
push
test
insb
add
ljmp
repnz
hlt
cld
add
xlat
fwait
inc
es
pop
jl
mov
movsb
and
jmp
stos
movsl
call
fwait
pop
out
enter
notl
xor
push
dec
in
push
sub
xchg
add
lea
and
xor
jns
inc
ret
aas
or
cmp
outsb
out
faddp
sub
adc
xchg
mov
aaa
add
fnstenv
dec
imul
mov
lds
lea
mov
pop
and
js
popf
inc
scas
lods
push
mov
dec
call
adc
adc
inc
pop
add
cld
cmpsl
xchg
imul
jl
ds
loopne
inc
inc
xchg
push
int
dec
push
loope
and
fmuls
cltd
mov
lods
cmpsl
imul
xchg
fiaddl
lock
pop
xorl
fs
out
roll
xchg
mov
and
stos
movsb
mov
pop
inc
cmpb
inc
fcoms
cld
adcl
jno
dec
je
push
inc
out
pushf
mov
sbb
dec
adc
cli
mov
sahf
jbe
fstpl
xchg
andb
sbb
or
mov
or
push
in
into
pop
xor
pop
arpl
addl
rorb
adc
mov
stc
fisubl
les
cld
xor
sub
pusha
ficoml
cmpsb
in
iret
mov
adc
test
inc
mov
into
inc
lods
es
outsl
mov
or
stos
jne
rcrl
les
and
xchg
stos
mov
insb
inc
cmpsl
add
mov
sti
add
jns
mov
imul
repz
aaa
out
dec
add
adc
or
cmp
jnp
xor
sti
pop
shl
icebp
stos
push
sbb
cwtl
test
mov
lret
and
out
pop
imull
sti
mov
dec
das
sahf
dec
inc
repz
adc
cmp
mov
bound
std
pop
in
loope
iret
addr16
xor
add
fisubrl
lock
nop
mov
int
notb
and
pop
sti
jnp
xor
repnz
dec
dec
cld
push
adc
mov
pop
mov
lcall
out
xor
push
daa
sti
nop
pop
pusha
je
sti
cmp
mov
cwtl
push
cmc
ljmp
fbld
popl
inc
in
adc
cwtl
sbb
xchg
jae
iret
mov
lret
into
lcall
cmp
pop
pop
in
out
into
xchg
jl
stc
sbb
fs
xchg
or
push
or
push
aas
rep
adc
aad
dec
fstpl
adc
das
push
mov
pop
xchg
adc
or
aas
outsb
decl
inc
jo
mov
xor
loopne
clc
orb
js,pn
cmp
push
adc
dec
fidivs
icebp
sub
adc
and
pop
aas
sbb
test
out
sbb
jl
xchg
fst
dec
outsb
fimuls
push
dec
sub
xchg
xchg
int3
mov
nop
cmp
inc
cmpsb
ss
fwait
loopne
mov
xchg
pushf
cli
jae
lea
sbb
fsubs
sbb
xlat
or
mov
js
push
or
lcall
xchg
sahf
xchg
pop
xor
movsb
inc
repz
push
cmpb
and
pop
add
dec
inc
fstpt
dec
jp
jl
jb
lret
push
cld
mov
mov
xchg
cli
fs
fstl
cmp
xor
xchg
pushf
in
push
in
push
and
icebp
jne
pop
setbe
xchg
mov
add
cmpsb
push
push
mov
dec
or
ss
push
sub
std
pop
fadds
ja
cltd
pop
mov
push
mov
filds
mov
mov
and
xchg
inc
and
xor
xchg
in
pop
dec
push
mov
nop
ret
and
dec
pop
xchg
cmpb
gs
pop
cld
lret
orl
pop
call
andl
test
adc
outsl
ret
cmpsb
cmp
out
cs
shll
aas
and
mov
push
repz
xchg
mov
cmp
or
lret
cmp
repnz
int3
push
hlt
and
dec
xchg
lods
xchg
out
push
xor
outsl
inc
pusha
jae
push
lds
jno
ljmp
push
scas
mov
mov
push
and
sub
push
cmpsb
ret
ds
or
cmc
add
xchg
mov
test
and
or
dec
mov
and
cmp
mov
or
dec
rcll
int
shlb
push
dec
mov
sbb
mov
inc
push
fs
fdiv
adc
sub
lahf
inc
shlb
or
cmp
sbb
es
faddl
sub
mov
pop
ret
dec
outsl
pushf
or
mov
mov
cmp
pop
sbb
xor
pop
cwtl
jg
xchg
sub
sti
xor
scas
mov
xchg
in
or
sbb
aad
into
dec
mov
imul
pop
jl
mov
pop
jmp
xor
push
fstps
xor
cmpsb
or
ret
pop
cmp
inc
das
lret
dec
inc
ljmp
pop
dec
fcomi
adc
pop
jno
and
push
mov
jmp
pop
das
in
cmp
and
out
sahf
daa
sub
stc
jbe
cwtl
in
lret
xor
xchg
sahf
or
sub
add
clc
adc
in
mov
shrb
inc
adc
jle
push
xor
add
sub
mov
daa
add
adc
add
enter
xor
mulb
jb
pop
out
pop
stos
lock
movsb
pop
cmp
pop
and
frstor
cld
add
pop
sbb
xor
dec
mov
adc
lahf
fwait
xchg
xchg
push
ja
sub
loop
xchg
sbb
mov
ljmp
cld
inc
js
test
jbe
pop
jne
or
out
adc
mov
sarb
out
adc
loopne
mov
inc
xor
cmp
cmp
and
push
mov
cmp
and
add
inc
test
decb
daa
and
daa
daa
xlat
dec
adc
out
sub
mov
pop
or
and
shrl
inc
xchg
sub
jbe
addr16
pop
dec
ficoms
jbe
cs
dec
cmp
into
sahf
adc
mov
jecxz
mov
add
inc
xchg
lret
sbb
or
shlb
outsb
aaa
pop
xchg
idivb
sbb
iret
add
or
mov
jb
mov
int
nopl
test
data16
adc
inc
mov
add
in
mov
pushf
or
cmp
jae
sbb
xchg
movsl
icebp
stos
ss
xchg
or
jne
xor
repz
mov
adc
mov
xor
into
ss
xchg
xor
fwait
lods
lods
fsubs
stos
mov
mov
pop
or
xor
pop
das
roll
enter
fidivrl
repz
lret
in
enter
out
sub
add
cwtl
out
insl
dec
pop
and
cli
cld
push
es
outsb
ret
push
mov
lret
push
sahf
and
shlb
jb
sbb
xor
adc
jmp
dec
pop
ja
dec
mov
loop
test
mov
iret
loope
dec
flds
pushf
rcll
cmp
mulb
fcoms
fcoml
inc
mov
mov
cld
sub
movsl
add
cmp
test
addr16
xchg
and
les
out
shl
or
mov
mov
lock
cmp
and
sbb
dec
lahf
xchg
in
es
sub
xlat
in
and
add
and
mov
mov
lds
mov
fisubl
es
in
clc
jb
pop
sub
stos
out
lcall
mov
xchg
cmpsb
test
and
lods
xor
lret
ret
inc
and
and
je
adc
adc
dec
jl
xchg
mov
dec
rorl
orb
add
movsb
fsubl
mov
mov
push
push
mov
and
pop
mov
adc
mov
outsl
data16
shl
cmpsl
jl
xlat
jns
clc
push
dec
shlb
lahf
or
add
sbb
jae
or
lret
les
push
mov
xchg
pop
dec
lret
jg
aad
push
mov
ror
xor
cld
cmp
jecxz
mov
cmp
ret
inc
in
sub
cmp
xchg
loopne
pop
sub
ss
jle
jne
outsb
cmpsl
mov
dec
fcoml
repz
jae
jb
push
jnp
int
imul
inc
sbb
mov
shrl
aam
sbb
and
aas
xchg
mov
inc
push
xorb
in
push
dec
or
dec
lock
mov
adc
mov
jmp
xchg
test
aaa
or
subb
dec
stc
jo
inc
xchg
mov
pop
subb
mov
shlb
dec
sbb
data16
mov
incl
sub
mov
jecxz
sub
hlt
sbb
dec
inc
jnp
or
xchg
testb
js
sbb
add
lcall
push
push
dec
jg
ds
adc
test
addl
sub
test
adc
mov
fsubl
cmp
and
jbe
lret
lret
dec
xchg
scas
pusha
sub
push
dec
cmpsb
cmp
pop
dec
jg
mov
cli
inc
cmp
mov
xor
adc
dec
loop
adc
sahf
and
andl
inc
enter
adc
lea
push
std
in
into
aam
iret
lcall
cli
xchg
mov
rdtsc
aas
mov
stos
xchg
adc
shlb
pop
dec
mov
inc
subl
push
out
enter
and
or
lea
xchg
les
cltd
inc
xchg
mov
imul
dec
xlat
pop
lahf
data16
or
pop
lods
lret
fisubrl
mov
pushf
add
cmp
jne
cmp
cmc
das
stos
fsubrs
adc
add
cld
sbb
or
or
adc
add
xchg
mov
paddb
push
xchg
pop
fwait
mov
cmpsb
xchg
inc
pop
add
xor
cmp
inc
cmc
xor
repz
test
ljmp
test
jno
rolb
shll
rclb
int
cwtl
mov
stc
cltd
mov
jae
das
and
out
scas
cmc
mov
sbb
or
or
mov
pop
mov
insb
add
les
stc
lea
and
out
push
mov
cmp
cmp
cmp
cmp
in
leave
push
adc
mov
push
repz
fwait
test
push
sub
mov
fsts
cld
lahf
and
dec
push
ret
sbb
inc
pop
outsb
cmp
adc
jae
and
in
dec
adc
ds
js
sbb
aaa
ljmp
sti
addl
push
push
sbb
aaa
mov
dec
adc
clc
cmc
clc
mov
adc
jl
jge
push
sbb
jo
out
mov
xchg
or
loope
aam
sbb
addl
push
inc
movsl
cmp
push
cmpsl
mov
cmpsl
ret
insb
les
and
lock
fsub
jo
aas
bound
repnz
dec
fcompl
cld
inc
and
ret
pop
out
xchg
daa
jbe
hlt
aaa
icebp
cmp
sub
xor
mov
repz
dec
dec
push
xchg
or
out
hlt
inc
xchg
cld
test
cmpsb
and
add
or
std
or
int
pusha
jl
pop
sahf
xchg
cmp
fadds
out
fldcw
aas
pop
lods
cmp
out
mov
cmp
das
inc
add
movsb
jl
sbb
sub
jno
sbb
mov
and
cmc
cmp
or
std
cmc
and
jo
movsl
and
adc
and
mov
fdivs
in
adc
scas
js
out
mov
bound
sub
leave
jae
inc
cltd
adc
mov
shl
jl
mov
dec
ja
ja
mov
mov
test
out
jle
test
mov
mov
int
cmp
mov
outsl
xor
jl
sub
addr16
pop
push
ret
sti
inc
cld
jae
or
pushf
stos
mov
ljmp
fisubrl
dec
out
popf
push
or
popf
imul
mov
mov
or
in
ljmp
cmp
mov
repz
nop
adc
mov
mov
cmc
cli
cmp
cmp
push
xchg
lcall
fcomip
repnz
or
mov
pop
xor
inc
inc
push
in
dec
xor
repz
and
xchg
dec
cli
test
and
das
xor
cld
jns
mov
sub
sbb
mov
repz
adc
xchg
repz
popf
jl
cld
testl
jl
aas
and
movsl
or
mov
enter
jl
clc
insl
shll
jb
mov
push
stos
or
mov
fmull
inc
mov
adc
movsl
xchg
pop
fs
inc
adcb
add
sbb
das
add
clc
push
push
fisubs
nop
add
repnz
bound
cmp
xchg
dec
add
mov
mov
dec
sub
loopne
cmp
xor
aam
jge
xor
xchg
sub
js
push
mov
pop
scas
fistpl
lods
jne
dec
pusha
add
cmp
xchg
pop
sbb
dec
test
inc
int3
push
xor
and
lea
sbb
les
pushf
out
xchg
dec
adc
push
xchg
in
repnz
and
idivl
lret
adc
inc
pusha
mov
cmp
xor
xchg
xchg
push
mov
cmp
es
push
mov
and
sub
xchg
icebp
dec
inc
push
cld
sahf
pop
enter
in
outsb
or
pop
out
pop
push
bound
mov
push
mov
into
test
sbb
push
repz
pushf
in
dec
imul
push
fisttpll
movsb
adc
fidivs
cli
jae
add
ds
cmpsl
in
cmpsl
mov
aaa
cld
lret
cmp
xlat
test
stos
adc
push
lock
sub
inc
or
aas
mov
and
movsl
dec
out
movsb
lods
add
or
rcll
mov
popa
cmp
pop
add
add
jmp
lds
icebp
mov
movsb
lret
test
pop
bound
pop
enter
into
add
je
and
or
aas
lahf
sarb
mov
pop
mov
scas
sub
jmp
repz
xor
jmp
dec
inc
mov
icebp
xchg
mov
mov
or
out
mov
in
ret
xchg
adc
cmp
mov
push
push
mov
mov
cld
mov
hlt
xor
cwtl
cli
xchg
mov
adc
repz
mov
push
inc
jnp
into
xor
adc
mov
dec
lock
repz
inc
push
and
cld
fsubr
mov
arpl
xchg
mov
icebp
stos
out
dec
out
sti
cmpsb
mov
mov
sbb
mov
mov
fnstsw
xchg
fistps
inc
lock
push
in
xchg
mov
rcl
cmpsb
push
ret
loopne
lret
push
in
cwtl
lret
fistps
icebp
lods
pop
adcb
cmp
fcoml
or
pop
push
xor
mov
ss
mov
test
mov
nop
jmp
int3
addl
jmp
dec
dec
jnp
fs
sbb
outsb
dec
xchg
test
sbb
mov
sbb
mov
aaa
test
inc
out
adc
jnp
and
outsl
shll
ss
test
dec
out
mov
mov
scas
popa
addr16
cmpsl
xchg
or
lea
cli
push
fiadds
push
xchg
in
or
xchg
lods
adc
leave
daa
iret
jmp
lcall
xchg
add
dec
cld
xorl
dec
movsl
test
loop
xchg
mov
mov
push
or
push
inc
pop
sti
sbb
in
repz
mov
outsl
or
pushf
push
xlat
repz
sti
fisubl
clc
mov
and
jl
xchg
stos
push
inc
movsl
sbb
rep
xchg
scas
jae
jmp
mov
jnp
xor
cmp
mov
daa
xorl
bound
xchg
add
jp
hlt
lret
inc
loope
lcall
rorb
push
lcall
daa
push
icebp
or
pop
or
in
add
imul
sbb
dec
std
or
mov
mov
movsl
lods
mov
repz
fstpl
repnz
shrl
movsl
pop
sub
je
outsb
daa
data16
cwtl
cmp
jnp
sti
pop
popf
stc
dec
cmp
xor
rorl
sbb
sbb
push
push
inc
fwait
sarl
lahf
movsb
mov
cli
lret
shr
and
imul
out
mov
cwtl
push
in
push
pop
pop
cld
aaa
xchg
cmp
gs
push
cmp
nop
test
lret
mov
js
or
xor
jae
pop
loopne
push
xchg
jecxz
mov
add
pop
call
insb
ss
enter
imul
cmp
repz
mov
inc
pushf
push
dec
mov
fs
xchg
xlat
add
popf
cld
mov
ljmp
repnz
mov
pushf
mov
sub
jb
cmpb
push
test
in
xchg
sub
aaa
arpl
add
push
repz
pop
mov
sarb
mov
mov
ficoml
jnp
push
scas
and
and
xrelease
nop
mov
imul
sbb
or
jmp
test
cld
push
jg
jo
pop
ret
cmp
shll
pop
out
int
or
outsl
pop
cli
cmp
cmc
stos
iret
fs
mov
mov
mov
xchg
popa
arpl
js
icebp
jnp
adc
xor
test
jo
lea
ss
cmp
xchg
dec
xchg
popf
clc
dec
data16
ljmp
xlat
mov
adc
fs
sub
lock
pop
in
dec
cmpsb
fwait
mov
adc
cwtl
dec
mov
mov
push
push
or
pop
scas
jmp
rcrb
or
dec
ljmp
pop
inc
sbb
rorl
adc
into
mov
fdiv
or
orb
cld
mov
mov
mov
push
mov
test
subb
dec
cltd
addl
mov
sbb
into
lcall
or
push
and
sarl
rorl
rcll
push
xchg
pop
mov
add
dec
dec
dec
fcompl
repz
shlb
ret
add
cmpsb
mov
push
push
or
jecxz
js
cmp
in
cs
mov
andl
cmp
inc
imul
out
aam
in
dec
jl
jge
and
cmp
or
lods
inc
mov
sti
cwtl
inc
mov
xchg
inc
add
pop
pusha
push
dec
xchg
pop
xlat
inc
jbe
std
xor
cltd
ljmp
inc
fiadds
nop
out
das
xchg
jne
icebp
movsb
mov
stc
fists
pop
adc
iret
dec
jmp
add
and
mov
fs
lret
bound
jno
outsl
fcompl
pop
mov
jno
adc
adc
loope
add
aas
add
je
xorl
in
out
int
cld
ja
out
mov
inc
pop
es
jl
pop
loopne
pop
scas
fimull
adc
out
mov
int
outsl
xchg
mov
adc
inc
add
inc
imul
test
pop
add
mov
aam
popa
cmp
popf
mov
add
mov
add
imul
in
lret
lds
cmp
jecxz
push
adc
in
and
lret
inc
lret
and
pop
dec
xchg
mov
inc
ds
scas
in
cmp
and
aaa
push
in
data16
cld
jne
inc
dec
test
aad
xchg
dec
inc
lret
clc
popa
sbb
cmp
inc
gs
cld
lahf
test
in
ss
jmp
lret
xchg
sbb
jmp
scas
mov
mov
leave
fildl
xchg
lret
in
vmovntdq
gs
cli
clc
shll
inc
jbe
and
daa
imul
repz
test
inc
cmp
insb
push
fs
push
adc
mov
xor
shrb
cmpsb
push
or
sbb
movsl
adc
les
xchg
mov
outsl
or
xchg
imul
mov
notb
fwait
sahf
sbb
and
popf
pop
sbb
cmp
movsl
jnp
inc
cmc
push
in
test
in
add
cmp
add
jno
inc
pop
and
jbe
xchg
mov
aaa
stos
mull
fnstsw
cwtl
or
les
and
mov
xor
sub
sbb
xlat
in
inc
xchg
std
shll
fcompp
pop
sub
in
jle
out
mov
shrl
xor
in
outsl
repz
adc
inc
jno
mov
in
jnp
jmp
and
fsub
ss
popf
rcll
or
mov
jnp
pop
repnz
xchg
pop
or
adc
or
add
out
rcrl
mov
push
push
jmp
pop
mov
out
test
adc
or
aam
mov
imul
fcompl
cmpb
aam
mov
aam
stc
inc
xchg
sarb
fnstsw
xchg
jbe
adc
inc
cmp
loop
or
push
sub
ret
push
adc
stos
repz
lock
lret
dec
loope
sbb
repz
adc
out
sbb
je
gs
loopne
lea
ret
imul
test
inc
xchg
mov
or
pop
xor
dec
mov
or
loopne
mov
outsl
mov
out
xchg
cld
imulb
sarb
lahf
push
push
and
stos
add
mov
imul
xchg
push
sbb
mov
cmp
dec
fcompl
sub
jp
jg
dec
dec
mov
outsb
xchg
mov
lea
pop
adc
test
out
addb
daa
xchg
fwait
imul
sub
icebp
scas
shll
pop
adc
pop
mov
adc
xchg
sub
out
mov
enter
xor
sub
clc
add
shr
dec
cmp
xchg
sbb
out
cld
add
add
push
imul
jne
mov
mov
mov
dec
cld
dec
fimuls
xor
cmp
and
fstl
in
movb
adc
adc
cld
inc
or
bound
mov
loope
dec
mov
ret
adc
jle
cli
pop
in
pushf
push
pop
mov
and
sbb
mov
ljmp
mov
jno
dec
rcll
repz
arpl
pop
pop
repz
xchg
pop
mov
sbb
or
jecxz
shll
mov
xchg
lcall
or
icebp
xor
sub
adc
cld
lods
fcomps
test
push
ss
lea
mov
and
jl
out
nop
shrl
movsl
mov
imul
cltd
cmp
jbe
sahf
pushf
fcos
mov
and
repz
jns
pushf
xchg
and
dec
xchg
aam
mov
adc
dec
jne
movsl
cmp
lea
movsl
mov
pop
scas
in
add
mov
fs
and
lcall
data16
adc
loope
ljmp
mov
sbb
and
lods
out
es
cs
js
shll
mov
lcall
xchg
pushf
sub
or
pushf
add
mov
dec
cmpb
lret
bound
or
orb
call
dec
or
push
adcb
fwait
negl
inc
jae
cld
sti
arpl
pop
into
push
inc
lods
data16
pop
fucomi
xor
sub
bound
ss
dec
mov
repz
or
dec
fisttps
pop
xor
sbb
cmpb
cld
sub
sub
lret
jnp
mov
outsb
mov
cmp
mov
mov
in
mov
sbb
loope
fxam
test
push
jl
push
mov
insl
or
rclb
icebp
cmp
cmp
push
jne
sub
rorb
pop
jno
mov
testl
lock
aam
inc
cli
dec
fcomip
insl
out
scas
push
loop
mov
outsl
fcmovb
jmp
nop
fcoml
sahf
xlat
gs
xlat
xchg
aad
push
cmpsl
xchg
enter
sbb
mov
outsl
add
inc
pop
movsb
dec
jl
out
and
sub
xor
test
push
push
pop
mov
xor
pop
mov
sbb
dec
iret
into
mov
xchg
xchg
mov
adc
testl
push
es
xchg
lcall
add
andb
stos
cmp
repnz
filds
stos
add
adc
aad
into
dec
cmc
or
cld
rorl
and
dec
cld
and
fwait
jl
mov
and
in
test
js
xchg
popf
and
push
inc
test
jo
push
out
push
loopne
fmulp
sarb
sub
out
sti
push
jbe
push
or
les
loopne
mov
xchg
mov
sbb
adc
cmp
out
cmp
stos
xorl
jl
xor
aad
inc
insl
subb
cld
incl
mov
xchg
out
nop
sbb
xor
into
mov
out
inc
mov
mov
mov
mov
sbb
push
test
adc
add
sub
or
jp
lahf
cmc
loop
adcb
lds
aam
jmp
xchg
adc
es
into
adc
daa
outsl
sbbb
cmp
icebp
lret
jge
dec
pusha
adc
pop
mov
in
dec
int
aaa
out
fldl
ret
jbe
cld
addb
lods
shll
movsl
sarb
mov
cmpsb
inc
xchg
or
popf
add
pop
xchg
dec
adc
ss
mov
ret
rolb
int3
movsl
push
outsb
pop
movsl
sbb
fwait
push
adc
scas
xchg
pushf
and
xchg
sub
add
rcrl
xor
cwtl
shll
xchg
xchg
aad
jns
xchg
and
mov
test
adc
imul
and
arpl
mov
cli
jecxz
xor
dec
dec
fdivrs
inc
outsl
add
or
mov
movsb
das
mov
adc
lret
jg
subl
pop
jg
or
and
fldt
stos
push
and
xor
cld
setno
nop/reserved
dec
xor
or
aas
clc
mov
xor
leave
repz
jo
jae
js
inc
js
movsb
test
jl
ljmp
and
mov
mov
push
lea
aas
in
mov
stos
enter
daa
add
lret
push
sbb
test
mov
fsub
push
mov
inc
inc
jmp
in
into
fisubrs
jg,pt
test
xor
jl
cmp
js
nop
pop
pop
or
aas
fcoms
add
fisubs
inc
xchg
and
inc
dec
jne
xchg
out
js
add
addr16
adc
test
pop
push
adc
idivb
inc
cwtl
out
adc
pop
adcl
xchg
gs
xchg
jne
pop
adc
scas
and
push
add
gs
lods
sti
adc
ljmp
cld
pop
push
push
aas
jge
shrl
dec
fwait
fs
stos
leave
fdivl
ret
popf
and
mov
and
shrl
stos
lea
ret
lods
push
and
jmp
pop
fnstenv
notb
mov
out
and
ret
cld
cmp
inc
iret
push
xor
iret
in
les
insb
hlt
into
cmpsl
lcall
movsl
inc
imul
divl
repz
add
or
mov
adc
sbbb
lods
aaa
into
setno
ret
xchg
jmp
inc
and
mov
in
addr16
pop
scas
inc
loopne
loope
cmp
push
push
enter
xor
push
sbb
or
daa
add
arpl
or
subl
andb
leave
mov
fisttpl
mov
pop
aam
cld
shlb
and
stos
and
xchg
push
dec
add
push
and
rolb
sbb
adc
jb
fwait
mov
cmc
lock
and
insb
in
push
inc
int
repz
lods
jl
xchg
les
xchg
popf
inc
xor
ret
and
cld
mov
int3
subb
ljmp
and
add
or
xor
and
push
push
jl
scas
jne
inc
or
pop
nop
inc
cld
inc
xor
fcoms
out
sub
repz
mov
pushl
pop
jmp
stc
pop
push
das
pushf
pushf
dec
xor
cld
icebp
call
jge
jns
repnz
mov
or
mov
lea
pop
and
aad
call
sarl
ljmp
and
repz
xor
fmuls
push
mov
sbb
xchg
out
mov
test
lods
pop
movsl
in
insl
lret
cmp
adc
xor
adc
repz
and
pushf
movl
in
add
or
testl
cmpsb
stos
and
repz
pushf
jmp
aas
or
addr16
in
cli
cmpsb
out
sbb
aad
mov
or
push
das
fadd
adc
div
push
aaa
mov
mov
jns
mov
bnd
les
sub
popf
xor
dec
js
xchg
subb
fdivs
jge
sbb
fs
inc
or
push
and
andl
jg
cmp
adc
or
mov
cld
inc
jp
mov
leave
jmp
jecxz,pt
pushf
jo
adc
xchg
jge
mov
js
int3
popa
adc
mov
sbb
call
inc
mov
ja
or
jns
cmp
out
pop
gs
out
jmp
ficomps
ret
xchg
pushf
repnz
and
or
inc
loop
adc
push
and
jbe
mov
data16
mov
call
imul
push
outsl
sar
jp
push
mov
bound
mov
je
lods
loope
add
stos
sub
xlat
mov
pushw
fistl
pop
jmp
sub
pushf
bound
xchg
xchg
ss
mov
idiv
fistl
push
nop
pusha
push
push
jl
xor
mov
mov
adc
cld
sub
repz
gs
jl
sbb
jae
fwait
dec
push
or
jl
sbb
jle
adc
mov
mov
xchg
das
dec
mov
das
dec
cmpsl
mov
cld
adc
jg
sub
setg
test
push
push
dec
sbb
xor
jl
jb
test
test
xchg
fiaddl
lds
movsl
pop
scas
repz
mov
icebp
push
pushf
imul
cli
int3
sub
jl
or
leave
pop
dec
out
xor
dec
jl
or
into
mov
pushf
inc
jge
push
dec
hlt
mov
mov
adc
arpl
int
mov
mov
insl
pop
stos
mov
dec
jecxz
sub
je
cmp
lock
cld
xchg
adc
fxam
nop
inc
xchg
test
cmp
std
scas
jne
xchg
flds
inc
insl
ror
xchg
inc
inc
xchg
sbb
je
repz
imul
sbb
ja
cld
sbb
jecxz
mov
pushf
popa
dec
stc
and
mov
dec
aas
outsl
mov
das
sbb
mov
cld
push
inc
popf
cmp
shlb
imul
decb
loop
ret
add
inc
xor
lea
subl
enter
mov
inc
fcoml
adc
pop
in
sahf
fcmovb
lret
hlt
pop
adc
inc
mov
repnz
xor
adc
sub
push
inc
push
and
xor
and
mulb
hlt
cmp
or
mov
sub
mov
scas
movsl
lret
dec
shll
and
inc
xchg
sbb
mov
sbb
negb
in
test
lea
shlb
pop
xchg
cmp
fcoms
out
out
xor
mov
pop
into
cmp
pusha
arpl
push
and
ret
in
pop
sbb
jno
pop
jns
jno
or
lret
dec
jns
lods
or
rcrl
add
inc
sbb
ret
xchg
pop
pop
and
pop
push
adc
xchg
xchg
ss
repz
dec
pop
mov
enter
fwait
clc
dec
cld
jbe
adc
sbbl
scas
adc
das
repz
push
mov
xchg
inc
fadds
cwtl
out
mov
cmp
push
cmp
or
jg
adc
xchg
popf
xor
inc
dec
mov
leave
sbb
push
cmc
mov
mov
jl
dec
cmp
lock
push
push
jg
stos
div
lods
popf
shll
cmpsl
aas
inc
push
in
in
stos
jnp
stc
inc
in
into
adc
cmpsb
inc
jmp
adc
fsts
cmp
int3
pop
adc
mov
shll
iret
xchg
testb
xchg
cmp
divl
inc
lahf
or
sub
mov
or
inc
jo
inc
mov
into
mov
sbb
adc
fidivrl
out
dec
out
mov
icebp
cmp
mulb
sbb
leave
ss
sub
push
or
adc
stc
lods
out
mov
dec
cmpsb
jb
mov
sarl
jp
or
adc
jl
das
ds
insl
xor
repz
jle
testl
mov
xchg
repz
jbe
mov
pop
pop
xchg
dec
fnsave
pop
cwtl
test
mov
repnz
call
fmuls
je
scas
fcmovnbe
xor
cmp
mov
inc
popf
jmp
clc
adc
jnp
psllw
pop
dec
mov
repz
mov
sbb
cwtl
sahf
inc
rclb
daa
mov
xchg
popf
sbb
jns
mov
shlb
ret
insl
push
jmp
add
mov
push
adc
outsb
or
and
das
cwtl
data16
and
in
mov
xchg
repz
or
mov
adc
push
pop
or
adc
stos
xchg
cmp
jl
or
fwait
in
adc
inc
cmc
xor
push
int
mov
mov
adc
jl
or
call
push
jnp
dec
inc
and
fmulp
cmpsb
outsl
jno
adc
adc
dec
dec
or
cltd
sub
jbe
mov
pop
mov
adc
cmp
in
jl
or
pop
aad
test
or
cld
mov
jmp
xchg
lret
int
adc
out
or
pusha
sbb
mov
mov
pushf
cld
and
inc
bound
rcl
and
add
cld
pop
adc
sbb
fs
jl
mov
cmc
fcomi
xor
lret
das
lret
mov
ljmp
icebp
jae
lret
gs
cmpsl
rorb
add
xor
mov
mov
xchg
sahf
fwait
adc
add
or
jecxz
mov
inc
mov
sub
jg
xor
xchg
sbb
cwtl
mov
movsb
cmp
fwait
sbb
adc
mov
xor
inc
movsl
mov
sbb
mov
sbb
cs
jge
jp
test
ficompl
cltd
popf
movsb
or
sbb
sbb
in
jmp
adc
bound
sbb
adc
inc
dec
icebp
aam
shrd
aaa
jmp
cmpsb
xor
pushf
in
pop
into
dec
sub
and
pop
enter
xchg
fucom
sub
push
xchg
fdiv
lock
pop
sarl
mov
test
fistpl
mov
test
repz
mov
inc
aad
cmp
cld
leave
popa
mov
xchg
xor
lret
repz
push
push
jnp
inc
out
mov
mov
rcl
lret
sbb
cld
sub
pop
fistps
out
push
adc
mov
xchg
cmp
xchg
fwait
mov
jae
fadds
jbe
scas
dec
cmp
or
fnstcw
jge
xchg
movsl
out
mov
lea
xchg
clc
loope
loopne
dec
adc
push
jl
lea
in
mov
cmp
mov
rcll
xchg
sub
jne
pop
add
cs
add
ljmp
adc
pop
adcl
inc
int3
nop
faddl
mov
into
add
sahf
cmovp
mov
in
repz
mov
jl
mov
or
call
jae
pop
xchg
add
movsb
pushf
call
mov
out
sub
pop
add
dec
adc
pusha
pop
xor
mov
push
mov
mov
dec
mov
or
xor
sbb
sar
push
inc
aaa
pop
adc
mov
data16
icebp
stc
shr
jbe
or
or
leave
in
jne
mov
pop
clc
rorb
out
push
aas
enter
scas
iret
cli
push
push
xchg
add
push
insw
ss
and
xchg
xchg
xor
imul
repz
or
loopne
cs
lret
xchg
cld
lods
outsb
sbb
out
popa
dec
push
aad
or
icebp
mov
loopne
fcomi
jo
in
rclb
pop
fsubr
mov
ret
imul
fdiv
inc
mov
je
lds
push
daa
pushf
push
push
lods
sbb
repz
mov
cwtl
fadds
mov
dec
ret
enter
xchg
mov
push
lea
pushf
push
shll
dec
xor
sbb
jb
cmp
and
inc
cld
fistpl
loopne
inc
sub
sbb
mov
or
xchg
add
adc
shll
test
adc
adc
dec
test
jp
dec
pop
mov
xor
mov
push
call
popa
adc
repz
movsb
cld
fistpl
and
cld
scas
imul
in
inc
add
nop
or
mov
jmp
pushf
call
int
imul
addr16
push
lret
dec
cmp
xchg
test
push
or
scas
adc
fmuls
cmp
repnz
xchg
dec
cld
mov
xor
or
jbe
iret
dec
sub
in
inc
repz
xchg
lods
dec
inc
sub
cwtl
in
cmp
shlb
xor
iret
in
dec
in
pushf
shl
sub
jne
add
jl
ret
dec
xchg
pusha
push
adc
xlat
mov
rorb
sbb
icebp
and
loope
sti
pushf
lret
mov
mov
jge
push
and
std
or
jbe
pop
mov
sbb
inc
into
in
xchg
dec
gs
mov
xchg
and
movsl
shrb
adc
sbb
inc
lcall
xchg
inc
mov
xor
jmp
xor
in
lahf
lret
mov
xchg
imul
lods
cmp
rclb
cmp
cmpsb
negl
lock
cs
fcoms
ljmp
push
icebp
and
jl
scas
aam
or
sbb
lock
dec
andb
lahf
loop
out
mov
cld
int3
xchg
aas
inc
outsl
andb
adc
loopne
dec
or
push
repz
xor
and
mov
int3
and
sub
mov
ret
adc
orl
dec
mov
in
movsb
mov
repnz
cld
jo
out
js
cmc
lock
aad
mov
inc
jno
ja
sbb
fistl
pop
testb
jl
pop
fdivl
out
lahf
push
dec
push
push
insl
aam
scas
idivw
mov
fwait
loop
repz
dec
mov
jo
inc
repz
sti
mov
sbb
mov
dec
xchg
les
dec
ret
out
into
lret
mov
and
mov
sti
pop
push
imulb
test
mov
cld
mov
repz
jno
adc
sbb
jae
push
or
xchg
inc
movsb
dec
jl
sub
push
rcrb
in
xlat
xor
test
test
fs
imul
or
dec
cmpsl
cli
loope
mov
mov
add
cld
add
cmp
mov
cmp
push
adc
inc
adc
xorb
xchg
les
xchg
xchg
inc
pop
mov
or
xor
popa
inc
mov
fucomp
jp
or
int3
xor
push
cli
xchg
pop
stos
fildl
add
lds
fsts
int3
cmpsl
push
mov
pop
and
mov
push
inc
lea
mov
fcoml
add
fcmovb
mov
cmp
scas
jmp
jae
cld
xchg
xchg
push
in
jl
push
xchg
push
mov
lock
or
dec
jae
leave
call
out
pop
mov
test
push
inc
jne
ficomps
inc
jecxz
xchg
inc
xchg
pop
mov
pop
sbb
or
jl
sbb
into
outsl
add
cltd
jmp
jmp
aas
lret
xchg
fcmovu
cmp
int3
lret
sub
cmovo
or
or
or
cmpb
fisubl
aaa
cmp
xor
andb
iret
mov
xchg
movsl
ss
mov
push
push
cmp
aad
mov
fidivrl
pushf
or
stc
or
scas
mov
push
les
mov
lea
cs
popf
mov
in
jl
inc
fbld
sub
inc
cmp
mov
insl
test
mov
mov
xorb
sbb
scas
push
sub
inc
xor
add
add
outsl
les
ret
xchg
mov
pop
out
xor
mov
fdivl
test
xchg
jp
mov
add
dec
mov
mov
cmpl
outsl
sti
xlat
fwait
mov
stc
faddl
push
into
mov
loopne
adc
repz
inc
jmp
fbld
xor
cwtl
out
xchg
test
pop
cwtl
jb
andl
sti
xor
jl
arpl
in
andb
jecxz
aas
sar
push
sub
cld
mov
mov
xchg
out
inc
adc
jg
cmpsl
pop
sub
xchg
fsub
adcb
xchg
rcrb
push
and
div
ss
mov
xchg
and
or
fsubl
idivb
mov
stos
lret
and
shl
lcall
adc
dec
mov
aam
or
into
or
leave
icebp
cli
rcrb
cld
pushf
leave
xor
jno
in
pusha
cld
scas
xorl
daa
or
int3
or
or
push
sub
clc
push
push
nop
and
adc
mov
rcrb
mov
jmp
out
cmpsb
and
inc
out
cld
cmpsl
in
dec
stos
insb
pop
xorb
xor
ret
jl
add
lcall
fwait
cmpsl
sbb
xchg
ffree
imul
sub
or
mov
repz
adc
loopne
repnz
es
pop
cmp
sbb
inc
mov
inc
cmpsl
test
pop
mov
repz
hlt
cld
aaa
sbb
js
test
push
push
sbb
dec
negl
leave
fwait
mov
scas
or
adc
lcall
mov
repz
arpl
cmp
adc
mov
mov
push
jbe
inc
fstps
pop
out
mov
test
test
pop
sti
and
pop
jl
jmp
gs
push
xor
clc
and
xlat
pop
stos
lock
lods
and
cmp
out
cs
std
inc
lahf
mov
ds
jmp
jno
arpl
les
movsb
jp
xchg
pop
jb
loope
cmpsl
dec
aas
sbb
int
mov
rcll
fisttpl
popa
ret
repz
sub
cld
sub
nop
aas
dec
out
sahf
loope
test
adcl
fisubl
outsb
movsb
test
xor
xor
cmp
push
clc
mov
mov
insl
add
xchg
fprem1
nop
inc
jae
adc
push
js
fwait
push
adc
sahf
mov
out
movsl
int3
mov
jbe
adc
pop
nop
jg
lret
mov
push
enter
in
add
or
ss
sbb
xor
aam
fisttps
add
fwait
lret
cmpsl
sarb
std
or
sbb
add
pop
and
je
movsb
jp
pop
in
cwtl
or
sbb
not
fsts
xor
push
in
lods
ja
out
mov
mov
les
lahf
sub
and
pop
popa
repz
fwait
mov
sbb
insl
adc
fcmovnbe
ret
jno
icebp
sbb
push
inc
mov
push
inc
lahf
mov
inc
out
pop
or
cmp
shr
movsb
fisttpl
cltd
cmp
dec
sbb
xor
fs
cmp
cmpsl
sti
sbb
pushf
nop
imul
pop
daa
xchg
fildl
pop
pop
sbb
jecxz
and
pop
cmp
inc
xchg
jns
xor
adc
outsl
mov
xchg
int
pop
cmpsb
std
jo
cwtl
daa
fwait
sbbl
repnz
lea
xchg
push
pop
inc
dec
repz
icebp
mov
dec
sbb
cmpsl
pop
sub
dec
movsb
xchg
or
fnsave
mov
outsb
mov
das
inc
data16
fcoms
or
mov
mov
lock
aaa
shr
push
mov
jecxz
sbb
xchg
sbbb
repz
sub
dec
xchg
mov
mov
pop
adc
cmp
cmp
lret
movsb
dec
stc
pop
mov
mov
and
in
push
outsb
paddb
enter
insl
in
ret
mov
dec
jne
adc
mov
jge
cld
mov
test
jge
dec
ret
dec
adc
scas
pushf
push
push
mov
pop
xchg
add
shll
inc
popf
orb
or
and
inc
movsl
adc
push
fisubs
jle
cld
push
cmp
sbb
jl
rcrb
or
inc
dec
js
jge
dec
sbb
in
movsl
mov
dec
cmpsl
pop
cmpsl
xor
inc
pop
lea
add
repz
gs
fidivrl
xchg
dec
inc
mov
ljmp
in
mov
repz
in
xor
out
mov
sub
insl
sub
icebp
inc
lock
mov
lods
cmp
sub
test
adc
xchg
sbb
push
jae
pop
mov
cmp
adc
in
fistps
lock
cmp
push
aad
pop
inc
dec
or
rcrl
push
dec
scas
mov
dec
cld
adc
mov
stos
pop
inc
mov
cmpsl
hlt
pop
cld
leave
dec
sbb
jbe
push
into
data16
mov
lret
mov
scas
gs
sbb
or
fcomps
lods
inc
inc
rcll
sbbb
xor
stos
movd
clc
mov
sub
dec
pop
stc
add
mov
rcrl
or
pop
call
cwtl
loope
lea
pop
popl
pop
xchg
add
fs
inc
jl
das
imul
js
jle
scas
pop
push
sub
gs
xor
mov
test
shll
rcrl
jns
sbbl
rorl
or
cld
jns
daa
mov
inc
adc
adc
movsl
mov
mov
stos
fs
outsl
iret
pushf
movsl
add
cmpsl
inc
scas
mov
add
sahf
mov
push
mov
or
mov
mov
mov
lret
aaa
jge
adc
mov
ret
pushf
movsl
pop
repz
cmp
xor
inc
cmc
sub
dec
xchg
repnz
outsl
cmp
mov
ror
xor
and
aam
push
dec
and
lret
mov
lahf
sbb
add
jo
xor
adc
pushf
or
in
mov
mov
mov
data16
jp
enter
inc
jmp
mov
test
xchg
inc
add
popf
sbb
sub
jmp
adc
dec
lcall
ret
pusha
insl
push
ss
mov
dec
sbb
rcrl
aad
fnstcw
xchg
aaa
mov
inc
std
mov
inc
ljmp
add
jl
insb
and
loopne
jae
lret
pushf
dec
adc
dec
outsl
xor
xchg
aas
stos
movsb
bnd
dec
xchg
xchg
orb
jecxz
cmpsl
jp
sbb
repz
out
mov
inc
mov
sbb
dec
fsubl
inc
add
inc
fadds
sti
mov
fstpt
leave
sub
jle
andb
dec
movsb
mov
jmp
pop
pusha
dec
jl
and
xchg
mov
test
scas
aam
jmp
xchg
xor
dec
enter
sub
repnz
cmpb
mov
xchg
out
lcall
mov
mov
add
repnz
and
xchg
fildll
push
cwtl
nop
sub
rorl
adc
xchg
mov
push
test
push
mov
mov
adc
mov
push
inc
sarl
loopne
adc
add
dec
loope
mov
xor
jg
lods
rolb
jns
adc
jmp
inc
cmp
push
aas
stc
enter
mulb
pushf
jo
jl
data16
mov
cli
fwait
into
mov
iret
cld
fnstenv
out
push
inc
mov
xchg
ja
loope
cmc
orb
and
push
mov
push
sbb
cmpsl
and
and
push
sub
or
out
dec
repz
fisubl
cmpsl
mov
and
ljmp
mov
idivb
cwtl
mov
pop
xor
dec
fneni(8087
lock
fstps
fdivrl
adc
adc
ret
fisttps
jl
into
xor
sti
push
getsec
cld
adc
cmpsb
fcomps
rcrl
loop
mov
hlt
cmp
dec
lods
fildll
sbb
fistpl
out
jp
cmp
repz
sbb
dec
lret
outsb
sti
mov
gs
arpl
add
test
cmpsb
jge
aas
jb
ss
add
jno
jbe
out
out
add
test
imul
fistl
mov
pop
cli
subb
sub
arpl
nop
cld
push
pop
pop
lods
lahf
inc
sbb
mov
pop
mov
bnd
sub
push
lods
ljmp
and
cmp
and
dec
lea
or
nop
inc
rclb
sbbl
or
lds
cmp
clc
dec
dec
cmp
or
es
mov
mov
movsl
adc
dec
dec
mov
ss
call
insb
pop
std
xchg
ror
insb
pop
insl
test
mov
push
js
mov
cmp
or
adc
pop
sbb
int
mov
xor
cld
lods
loopne
mov
xchg
lret
jge
popa
xchg
dec
inc
mov
inc
or
addb
dec
cld
loop
mov
dec
aad
sub
xchg
push
pop
jb
cli
xbegin
inc
or
and
cmc
pushf
xor
adc
inc
mov
ds
lahf
test
mov
jnp
cltd
xor
in
mov
repnz
fldln2
cli
dec
push
sbb
ss
xchg
sub
or
sahf
mov
lret
dec
push
rorl
sub
adc
insl
cltd
es
mov
mov
jl
cli
dec
push
pop
ret
or
shrl
leave
loopne
lea
jns
out
sub
jmp
inc
cmp
xor
out
dec
inc
stos
sub
fs
adc
xchg
aaa
sbb
pop
lock
jnp
or
dec
jl
add
dec
aas
pushf
push
int
jp
cmp
into
out
hlt
push
in
xchg
xchg
cmp
dec
repz
iret
mov
adc
out
scas
push
jmp
mov
inc
dec
jecxz
xchg
test
inc
xor
repz
adc
scas
test
ret
push
mov
mov
push
loop
and
mov
cmc
add
mov
mov
push
pop
icebp
clc
inc
repz
scas
adc
cmpsl
sbb
pop
inc
mov
ds
cld
mov
xchg
lods
fstpt
mov
inc
add
adc
leave
cmc
jns
out
jle
aaa
mov
je
mov
lret
repz
jns
ret
rcr
outsl
mov
and
adc
int
xchg
sbb
add
and
push
sbb
xchg
or
sbb
push
stc
push
cmp
cld
inc
jp
xor
jne
lds
mov
in
popa
mov
les
pop
mov
iret
sbb
fmul
sarb
and
add
dec
jnp
add
adc
frstor
or
mov
sbb
mov
cli
push
mov
cld
in
mov
clc
push
stos
add
mov
loopne
leave
ret
fldl
repz
cmc
cmp
xchg
sbb
mov
pop
adc
andb
addb
or
inc
lcall
iret
pop
xor
or
mov
in
pop
adc
cld
sti
xchg
xchg
or
repz
xor
mov
ljmp
sub
out
sbb
inc
insb
repz
push
dec
push
testb
imul
sarb
movsl
cmp
push
in
andb
mov
jmp
js
mov
test
ljmp
xchg
mov
dec
inc
adc
adc
add
lods
pushf
jo
outsl
lods
out
scas
push
outsb
and
mov
movsl
jp
mov
mov
push
xlat
inc
dec
out
cli
test
dec
ret
pushf
add
cmc
ss
push
cld
jae
sbb
fcomps
in
cmp
sub
push
leave
sbb
fcomi
rcl
xor
mov
pop
insl
cmp
pop
sub
movsb
push
push
xchg
pop
les
fistpl
pop
push
xor
inc
mov
push
lods
mov
test
das
push
fstps
xor
push
mov
fwait
daa
movsl
xchg
xor
push
bound
cmc
jb
nop
imul
cmpsl
adc
insb
scas
and
jbe
jmp
imul
fcoml
add
addl
sub
cld
mov
out
push
bound
sbb
je
pop
js
pop
cltd
mov
repz
lea
inc
xchg
dec
data16
cwtl
add
hlt
lods
aam
daa
mov
roll
js
xchg
mov
cltd
or
push
movd
mov
pop
fldcw
fs
loopne
in
inc
sbb
add
pop
fwait
aas
les
repz
dec
xor
mov
lahf
dec
ljmp
gs
jle
cld
arpl
or
ds
cli
popf
gs
aam
jl
fmulp
and
push
inc
push
out
icebp
nop
mov
pop
pop
faddl
pop
test
fwait
push
jle
and
mov
mov
jnp
sbb
shr
lcall
sub
mov
popa
iret
sub
inc
jnp
lahf
addr16
xchg
stos
sbb
iret
data16
ljmp
out
xchg
adc
repnz
inc
dec
push
rorb
jle
int
sbb
sbb
repnz
pop
jnp
pop
scas
inc
push
mov
std
mov
inc
and
mov
lods
xor
mov
pop
lcall
push
mov
dec
iret
mov
loope
or
lods
cmpsb
test
fsubl
jecxz
push
sub
xchg
jmp
out
pop
test
fisttpl
adc
addr16
fdiv
je
push
jae
out
lds
fwait
mov
jmp
lods
push
movsb
jg
xor
xor
js
or
stos
out
or
inc
insb
inc
popa
push
xchg
pop
js
scas
cli
test
xor
pop
push
mov
jne
inc
adc
dec
mov
xor
icebp
pop
ljmp
leave
or
push
mov
inc
xor
push
into
mov
mov
adc
and
dec
icebp
stc
push
xchg
subl
inc
mov
inc
inc
push
mov
fsub
ret
dec
imul
mov
repz
and
adc
sub
jns
mov
cmpsb
loop
and
fildl
stc
xor
movswl
adc
cld
sbb
inc
inc
lods
push
jg
ja
dec
add
jo
xor
pop
xchg
sub
adcl
pushf
inc
fcomp
sbb
jl
cmc
fsubs
mov
cmp
xchg
sub
and
mov
popf
insb
clc
push
mov
aas
adc
xor
sbb
ljmp
xlat
push
or
and
fcmovu
mov
and
loopne
daa
cld
sub
push
sub
mov
push
mov
popl
call
std
adc
pop
repnz
cmp
inc
js
adc
dec
jbe
fwait
sub
jnp
push
pop
cld
or
mov
jecxz
add
dec
and
adc
fidivrl
push
cltd
jle
sbb
fldl
add
pushf
addr16
mov
cs
fdivrl
sbb
test
pusha
xchg
pop
outsl
sub
rclb
inc
mov
jl
test
shrl
cmp
and
adc
mov
push
shrb
adc
loopne
stos
inc
lds
inc
int
pop
dec
dec
and
jnp
fucomi
out
inc
pop
mov
dec
mov
aaa
mov
mov
pop
in
xlat
std
ss
adcb
push
and
roll
push
fwait
cwtl
das
jne
cmp
inc
xor
cmp
jl
repz
xorl
cmp
mov
jno
mov
aaa
mov
xor
jl
cmpsb
fsubr
push
inc
sbb
jae
xchg
mov
jp
data16
enter
xor
cld
loope
arpl
negb
aas
scas
ja
cmp
lahf
sti
pop
xor
arpl
push
inc
cmc
or
lods
mov
inc
push
sub
testb
push
stos
cmpsl
sbb
cwtl
and
sbb
test
fisubs
dec
sub
mov
cli
dec
lret
mov
cmpsb
inc
jmp
and
insl
dec
hlt
jp
aas
std
xor
dec
mov
ret
mov
into
test
pop
xchg
lods
sbb
cmpsb
inc
adc
cltd
and
jl
or
or
xlat
fldenv
outsl
movsb
in
push
cmpsb
int3
ja
dec
adc
mov
movsb
roll
pop
movsb
aad
imul
mov
push
imul
in
cmp
iret
ds
push
loope
cmp
or
mov
push
mov
dec
aas
xor
push
jl
adc
iret
sbb
loopne
jbe
cld
movsl
push
jl
xchg
clc
xchg
inc
dec
mov
xlat
in
lods
cmp
mov
dec
icebp
mov
adc
push
xchg
lods
lret
movsb
dec
outsl
push
lahf
xchg
cmp
cld
cmpl
out
iret
mov
dec
jle
ss
ret
push
repz
loope
cmpsb
cmp
xor
push
xchg
add
sbb
pop
mov
and
repz
inc
mull
xchg
xchg
or
inc
sbb
repz
push
and
adc
push
mov
adc
cmpsb
push
andl
inc
lods
cld
mov
fisttpll
lds
loopne
jle
push
jo
pop
adc
int3
xchg
cmp
jae
pushf
enter
aas
push
sub
and
loope
cmp
mov
cmpsb
or
adc
lret
dec
or
gs
fstl
sub
cmc
and
jo
mov
clc
rcrl
or
out
imul
push
dec
repz
rclb
repnz
add
outsb
push
lcall
lea
mov
cld
loopne
mov
cmp
sti
mov
nop
roll
fsubl
pop
or
add
fdivl
cmp
leave
mov
mov
push
andl
pop
ficoms
mov
xor
out
pop
xchg
sub
mov
xchg
push
inc
adc
jmp
and
dec
mov
pop
jnp
jl
ret
es
pushl
mov
icebp
orb
inc
leave
repnz
testl
fwait
add
xchg
out
fpatan
mov
cmp
fdivrs
sub
dec
shl
mov
inc
mov
and
sbb
cld
sbb
int
jne
add
movsl
sarl
pop
sbb
jmp
lea
sbb
cmc
gs
inc
popf
cli
outsb
gs
dec
lods
rcl
in
inc
adc
pusha
and
or
mov
fidivs
pop
jae
sub
push
outsl
cmp
ds
cmp
sub
into
sti
pop
out
push
dec
mov
sbb
into
sbb
dec
movsl
jno
in
sbb
inc
unpckhps
pop
cld
pop
mov
popa
mov
dec
js
cld
add
ds
inc
in
mov
sbb
push
or
mov
mov
repnz
push
loope
or
or
lret
popa
insl
jl
fstl
add
or
aam
scas
ret
cmpsl
lods
aaa
into
push
cmc
add
xchg
mov
or
div
stos
mov
jg
loopne
lret
lea
push
in
or
gs
inc
insl
movsl
mov
jg
daa
test
sarb
adc
cld
arpl
jecxz
stc
mov
mov
cmp
fsubrl
gs
and
mov
lcall
jns
or
jg
outsl
cmp
inc
jl
ds
jns
cmp
fisubs
cld
ds
adc
ret
pop
mov
lock
or
jecxz
push
mov
inc
cwtl
ret
inc
mov
mov
clc
or
aas
iret
or
adc
jae
mov
and
add
dec
repz
inc
xor
pusha
adcb
adc
fdiv
mov
cmp
andl
mov
shll
pop
arpl
cwtl
mov
das
cmp
or
insb
push
add
jl
adc
in
cmp
dec
pop
iret
andb
pop
sbb
add
sbb
subl
popa
lea
or
sub
in
mov
or
loope
mov
cli
movsl
push
inc
fwait
ds
dec
push
sbb
sbb
cmp
xor
shrb
jb
xchg
repnz
jmp
add
fcmovne
addr16
out
jae
push
mov
mov
mov
mov
pop
lret
inc
mov
inc
or
popa
cmp
mov
cmpsb
hlt
inc
push
sbb
or
int
repz
cmpsl
aas
jg
movsb
and
shll
push
mov
imul
imul
mov
dec
jae
pusha
jns
pop
mov
cmc
clc
lret
mov
cmp
in
mov
lods
dec
push
rorb
lea
pop
pop
mov
dec
jp
lret
popa
mov
push
les
sbb
bound
push
sar
and
jl
adc
repz
call
xchg
xor
sbb
std
movsb
pushf
or
xor
jns
mov
mov
pop
in
xchg
pop
insl
andb
pop
ss
sub
mov
test
popa
mov
jl
aas
xor
cld
mov
nop
cli
arpl
mov
xchg
inc
ljmp
ficompl
sarb
ret
or
jne
cmc
ds
jg
adc
push
leave
and
add
les
mov
mov
gs
cmp
add
jecxz
mov
pop
cmc
jmp
pop
lahf
repnz
sub
into
push
out
mov
lea
push
xchg
push
cmp
mov
pop
inc
sti
mov
jp
scas
into
inc
mov
jae
push
mov
pop
adc
jns
pop
mov
ret
and
pusha
jge
mov
or
je
adc
int
popf
adc
and
pop
or
imul
push
lahf
lret
push
sub
adc
out
mov
repz
fdivr
dec
inc
mov
mov
inc
mov
sbb
sub
or
orb
pop
inc
adc
pushf
dec
xor
or
repz
fsubr
data16
xor
into
adc
inc
mov
shrb
shr
push
mov
and
jl
cmp
aas
dec
dec
call
and
rcrl
jne
mov
or
sbb
xor
ret
sbb
inc
cmpsl
xchg
pop
jl
addr16
and
mov
adc
rol
push
nop
mov
push
shr
pop
and
mov
inc
fcomi
incb
adc
loope
adc
or
fistpl
sub
jg
and
mov
rolb
lcall
xlat
inc
lock
mov
out
daa
add
xor
xchg
popa
stc
mov
inc
fildl
xchg
pop
adc
mov
xchg
dec
arpl
add
mov
adc
adc
movsl
xor
lods
sbb
xlat
mov
fs
mov
shll
out
sbb
xlat
in
xchg
outsl
fsubs
dec
and
fisubl
test
inc
je
icebp
rorl
cld
xchg
add
cmpsb
in
mov
mov
xchg
and
sub
cld
xchg
sub
sahf
pop
adc
mov
je
push
add
mov
xchg
imull
test
pop
repz
xor
adc
cmc
inc
rcl
imul
push
pop
and
add
inc
cmpb
xchg
test
pop
inc
cld
lret
push
out
jle
out
and
jp
mov
pop
or
jmp
sbb
lahf
or
fcompl
cld
call
pusha
shl
fdivrl
mov
mov
aas
adc
or
xchg
cmc
arpl
adc
sbb
rcll
lods
rcrb
dec
dec
push
fs
aas
push
pushf
inc
push
dec
lods
in
addr16
and
das
outsl
jl
enter
fisubs
xor
mov
adc
out
shll
xchg
or
ljmp
mov
insl
cltd
scas
dec
xchg
cmpsl
nop
sti
add
mov
out
hlt
jno
cmp
testl
xor
cmp
ss
push
sbb
push
inc
pop
mov
jnp
dec
sarb
sub
leave
das
addr16
stos
fs
mov
repz
lahf
or
clc
fidivl
loopne
fsts
dec
sbb
add
shl
cmp
in
add
jecxz
adc
das
inc
sbb
mov
shll
push
and
jb
gs
int
popa
adc
outsl
cmp
loopne
add
in
in
mov
cmpsb
fs
xlat
hlt
add
xor
lret
scas
mov
push
cmp
in
fcmovnb
push
ja
lret
outsb
xchg
aam
sbb
lds
ror
dec
sbb
cmp
shlb
loop,pt
xor
shlb
xchg
inc
add
movsl
les
sbb
pop
test
out
dec
daa
das
adc
push
xlat
mov
mov
sub
out
mov
inc
mov
lret
insl
cmp
scas
xor
jle
sbbb
push
ficompl
js
mov
add
test
push
jbe
orl
adc
shl
xchg
les
not
into
jno
mul
cltd
out
jle
daa
xchg
mov
cmpxchg8b
repnz
loope
pop
and
in
lahf
xlat
repz
lret
jge
or
dec
lea
pushf
stos
push
test
fimull
in
add
fcmovnb
and
dec
call
or
loop
out
push
hlt
loope
xlat
push
scas
sarl
lret
push
inc
je
test
fwait
jl
mov
push
stc
pop
or
sub
dec
repz
mov
mov
xchg
adc
jg
mov
xor
adc
stos
ss
jbe
or
bound
push
and
dec
ss
pusha
inc
out
and
push
fsubrl
mov
or
cmp
xchg
test
lahf
cmpsb
push
mov
mov
ret
inc
inc
into
mov
mov
movups
adc
or
or
add
cli
mov
stc
pop
or
rorl
jecxz
push
or
dec
jnp
xor
adc
cmc
cmc
dec
mov
pop
push
xor
sarb
mov
inc
ds
sub
adc
scas
adc
dec
push
push
mov
jae
and
and
mov
lcall
add
les
xchg
gs
lahf
sub
shll
inc
push
cmpb
cs
cmp
outsl
lret
or
push
test
faddl
fs
mov
xor
mov
dec
jle
cmpsl
out
or
inc
push
and
add
outsl
jecxz
ds
xchg
mull
jb
inc
cmp
mov
lret
es
fcomip
cld
ret
dec
in
testb
lahf
lea
adc
iret
mov
sbb
scas
or
mull
adc
mov
inc
dec
lcall
inc
stc
inc
popa
into
out
movsl
pop
cli
xlat
jnp
cli
adc
in
push
add
mov
inc
jns
adc
decl
jl
loope
aam
sbb
ficoml
mov
inc
pop
fcmovne
repnz
sbb
ja
dec
test
mov
aad
jno
mov
pop
pusha
or
dec
fdivl
push
push
stos
test
loop
andb
xchg
call
jl
push
push
mov
sub
pop
mov
int
mov
js
movl
jbe
lds
das
xor
mov
insb
loopne
adc
lods
fs
mov
cld
outsb
lds
filds
ljmp
cli
lret
sbb
jl
adc
insl
fildl
inc
jns
or
pushl
and
mov
jne
mov
outsl
das
jg
jmp
xor
sbb
adc
ljmp
mov
add
add
inc
data16
ret
pop
sub
add
aad
loope
hlt
lods
aas
sub
rcrb
adc
loop
je
cmp
test
in
repz
dec
adc
dec
xchg
cli
dec
rcrb
sub
mov
mov
jge
sub
adc
cmp
repz
mov
cmp
adc
nop
push
adc
or
lahf
jne
lods
in
xor
rorb
cld
test
shll
bound
push
ret
mov
test
jmp
inc
mov
sbb
popf
dec
lret
mov
push
je
cld
not
fisttpl
and
xchg
fsubrl
test
jg
inc
mov
cmpsb
shll
data16
mov
in
data16
sti
fs
incl
loop
lea
imul
clc
rorl
ficompl
repz
mov
sar
xor
sbb
repz
call
cmpsl
adc
pop
mov
stos
add
dec
gs
pop
jl
test
cli
lcall
repnz
out
jo
pop
orb
pushf
hlt
or
sub
cmp
lods
jge
dec
push
repz
fwait
stos
xchg
aas
mov
ret
out
fidivrl
movsl
push
out
mov
and
imul
movsl
fwait
inc
dec
fsts
jmp
pushf
js
jg
ss
mov
sbb
adc
jmp
xor
or
cld
mov
scas
out
push
add
add
clc
jl
push
add
repnz
cld
cwtl
mov
mov
pop
sbb
pushf
pusha
adc
ds
aaa
hlt
insb
lods
sbb
sbb
push
sub
or
out
cmp
push
push
push
xor
cld
xor
pcmpeqd
xchg
mov
xor
loop
movsl
add
adc
mov
xchg
mov
xchg
sbb
push
push
or
test
xchg
clc
add
push
or
pop
fnsave
pushf
jge
ljmp
mov
sbb
cwtl
pop
add
dec
mov
push
dec
insl
dec
ret
cmp
dec
jp
out
adc
xor
int3
outsb
mov
loop
cld
mov
jno
cmp
dec
or
cld
shrb
add
dec
dec
jl
dec
jae
pop
shrl
out
or
repz
mov
iret
fnstcw
lods
cld
mov
mov
push
push
decw
pop
inc
mov
popf
into
gs
daa
es
sub
pop
sub
inc
repz
add
mov
cld
jns
int
add
repz
push
test
push
out
pushf
adc
jmp
push
xchg
sahf
lret
dec
cmpsl
aaa
mov
fwait
sub
in
cld
test
sub
xlat
adc
xor
xor
cmp
adc
lea
dec
nop
in
test
lea
cmp
adc
adc
les
cli
in
sub
cmp
fmull
mov
out
clc
repz
test
lds
out
movsb
dec
jnp
mov
lock
js
mov
cmpsb
push
out
jge
push
adc
shr
sbb
sbb
add
inc
pusha
call
push
cmp
push
mov
dec
add
fcomip
aas
add
cmp
lahf
idivb
aam
push
shll
jle
add
test
fisttpll
pop
imul
push
jnp
repz
jo
pusha
xchg
sbb
dec
xlat
bnd
sub
add
mov
mov
cld
dec
inc
enter
push
jmp
in
hlt
sub
test
mov
mov
dec
xor
push
sbb
sbb
or
lods
fwait
pop
cld
mov
into
call
or
push
fisubrl
sbb
loope
mov
jb
adc
inc
movsl
dec
cmc
fs
mov
and
dec
mov
add
mov
jl
mov
leave
lds
in
or
loope
cltd
xchg
add
mov
xchg
jle
sub
push
xorb
jecxz
loope
addr16
sbb
or
push
shrb
xchg
lock
ret
addr16
xor
xchg
jmp
jg
lods
xor
addb
call
xor
insb
mov
adc
iret
inc
cmpsl
add
mov
adc
rcll
or
lods
sub
pop
push
pushf
nop
fs
out
adc
ret
add
sbb
mov
or
ret
or
mov
insb
sub
pop
jae
inc
inc
lock
repz
rcl
dec
xor
idivb
xchg
popf
mov
or
mov
inc
mov
pop
or
cmp
xchg
xor
out
jns
mov
dec
mov
mov
lea
mov
dec
jae
lods
dec
loopne
sbb
push
dec
pop
int3
inc
mov
rcrl
or
test
mov
fcmovu
cld
jae
insl
rcrl
test
clc
xor
inc
gs
fstl
lods
ja
pop
fsubp
adc
push
pushf
lods
dec
cmp
imul
mov
sub
insl
push
mov
ss
xor
ret
fldt
and
and
mov
add
add
in
insb
lret
scas
pop
xchg
loop
dec
mov
aaa
xchg
int
xchg
jnp
inc
fmuls
adc
dec
xor
popa
mov
mov
push
xchg
jecxz
sahf
mov
mov
scas
dec
aas
lds
lea
pop
inc
and
movsl
scas
movsb
ja
aaa
mov
jne
push
pop
in
or
cmpsl
mov
pop
pop
repz
mov
add
cmp
aad
jecxz
movsl
or
adc
inc
psubusb
stc
pop
jg
test
cld
xor
mov
xchg
adc
lods
repz
jns
jo
test
cmp
popf
adc
cmp
adc
out
jmp
lea
cmp
movsb
xor
mov
xrelease
popa
popa
lods
sarb
enter
mov
cmp
les
orb
movsb
cmpsb
sarb
sbb
cld
stos
adc
ds
stos
or
jge
sub
cld
popa
push
int3
mov
fwait
adc
lahf
xor
and
andb
gs
xlat
in
pop
xchg
and
xor
xchg
cmpsb
lret
xlat
in
subb
dec
cld
daa
lods
dec
inc
movsl
js
in
xlat
jl
mov
pop
ss
push
and
push
jns
int3
ret
jl
mov
pop
mov
lret
repz
inc
insb
mov
repnz
pop
pop
or
je
mov
mov
mov
rcrb
cwtl
cmpsb
out
xchg
aad
add
pop
in
cld
ret
mov
repz
or
xchg
xchg
and
cmp
push
nop
jne
mov
in
push
dec
test
dec
orb
repnz
std
xchg
sbb
pop
mov
push
sbb
dec
push
sahf
adc
mov
jg
lahf
xchg
in
inc
push
call
outsl
dec
test
call
sbb
lock
sbb
pop
test
xchg
or
jl
dec
ficomps
or
cld
xchg
cmpsb
pop
sbb
cmc
jb
push
xor
adc
cwtl
mov
or
add
ret
xchg
xchg
loop
cmpsb
and
ja
arpl
scas
add
gs
repz
das
shl
adc
pushf
inc
push
incl
adc
mov
dec
iret
cltd
adc
scas
add
and
lock
cmp
in
shr
adc
push
inc
mov
xchg
inc
js
push
inc
fwait
cmp
push
mov
sub
fninit
sbb
jl
in
into
sub
xchg
rorb
pop
rolb
outsb
lcall
lahf
jno
mov
cli
pop
push
aas
dec
sub
jo
sbb
ja
sbb
cmpsb
mov
js
or
ds
out
xor
or
inc
push
rcrl
jl
pop
mov
pop
pushf
sub
cli
xor
dec
lds
or
cmc
jmp
mov
xchg
cmp
cmp
xchg
fwait
sbb
xor
sbb
sub
jmp
xchg
fbld
jae
mov
or
cwtl
xchg
stos
hlt
aas
orb
cld
xor
jp
xchg
shr
add
test
not
loopne
fsubl
mov
mov
repz
mov
gs
ret
mov
lods
dec
add
fistl
mov
cli
cmpl
dec
pop
mov
cmc
lods
mov
sbb
pop
loop
mull
add
sahf
inc
fs
pop
mov
push
daa
repz
push
lea
mov
mov
xor
stos
mov
mov
adc
mov
xchg
cmp
push
bound
jl
sub
dec
stos
call
xlat
adc
ret
inc
cmp
mov
je
jae
hlt
js
js
xlat
popf
or
mov
or
xor
jp
cmp
lock
iret
or
add
sub
jbe
xchg
js
lods
sar
mov
mov
test
les
add
jmp
xor
adc
lret
addr16
xor
jecxz
sbb
je
jae
pop
jmp
pop
xor
inc
in
nop
push
fwait
sarl
sub
adc
jp
mov
cwtl
and
movsb
loop
sbb
push
sbbb
add
xchg
mov
inc
rorl
pop
cltd
add
pop
mov
cld
sti
lret
fwait
jl
sbb
dec
adc
rcrb
pusha
shll
xor
mov
ret
push
out
xor
gs
add
push
out
xor
ret
pop
cmp
inc
popa
into
mov
push
mov
add
fisubs
shr
aas
cwtl
xchg
sti
out
mov
add
sbb
mov
xor
aaa
dec
cmp
sbb
inc
xchg
pop
movsl
jl
loopne
lock
xchg
push
inc
jb
fbld
jl
and
xchg
movsl
addr16
or
mov
mov
xchg
push
mov
in
jg
lcall
hlt
subl
lea
mov
hlt
cld
xchg
inc
ret
adc
faddl
cmp
cmp
insb
out
push
xchg
mov
push
lods
shrb
sarl
sbb
inc
mov
fscale
mov
jbe
ret
jns
inc
jmp
jmp
push
sbb
add
cmpl
outsl
test
stos
xchg
jmp
add
cmp
cld
xor
sub
adc
into
ljmp
setb
bound
inc
inc
cmpsb
xor
out
mov
adc
pop
xchg
icebp
test
repz
ja
jl
aas
scas
xchg
push
fs
dec
adc
mov
ffreep
cmc
out
inc
mov
cmp
adc
decl
cmp
scas
sbb
jns
jne
loope
inc
popa
and
add
cld
aam
lret
jb
cmp
pusha
pushf
shlb
or
push
test
xlat
add
mov
dec
jb
movsb
cmp
push
inc
adcl
push
je
data16
imull
xor
aad
jno
adc
stos
sbbb
sbb
jb
dec
mov
push
xchg
inc
sar
int
mov
pop
lods
iret
iret
lcall
and
and
loop
pop
jne
sarb
mov
lock
js
stos
leave
push
pop
pop
enter
inc
dec
lea
daa
ret
sbb
mov
sbb
std
int
mov
popf
addr16
jge
outsb
push
cld
lret
cmp
mov
nop
dec
popf
sbb
pop
or
jb
out
jb
or
xor
push
cltd
dec
mov
dec
add
jbe
notb
xchg
nop
sub
inc
fidivs
jae
pop
pushf
xchg
mov
int
or
repz
pop
lds
adc
loop
out
pop
sub
aaa
movsl
jb
movsb
and
and
sub
test
int3
cmpl
int
xchg
sahf
icebp
pop
xor
xor
adc
adc
sbb
and
rcrb
adc
dec
dec
in
mov
pop
dec
cld
push
sub
repnz
adc
out
or
stos
dec
xchg
xchg
mov
mov
ljmp
add
mov
jl
jecxz
xchg
jp
fisttps
in
sbb
cld
scas
dec
lcall
bound
loopne
mov
in
push
lea
dec
mov
mov
mov
sbb
push
cld
inc
fildl
ss
xor
push
lods
pop
sbb
pop
test
adc
hlt
aas
pop
mov
jno
cmp
notl
mov
jo
mov
imul
mov
pop
hlt
push
jl
test
jmp
inc
loope
mov
sti
int3
mov
mov
xchg
divl
sahf
call
dec
cmp
idiv
in
nop
fadds
test
xchg
mov
or
dec
testl
cmc
std
fwait
or
xchg
sbb
imul
mov
insb
dec
bound
hlt
jg
in
sub
add
jnp
int
scas
test
inc
hlt
repz
leave
push
fstpl
mov
mov
jns
pop
cwtl
addb
fdivl
xchg
or
cli
inc
or
xchg
out
aas
cmp
sti
mov
push
mov
adc
aaa
aam
push
cld
cld
ds
pop
repz
push
aaa
gs
iret
cwtl
rcrl
mov
xchg
movsb
pmaddwd
jge
sahf
adc
scas
cld
push
enter
push
mov
mov
cld
sbb
sub
shlb
push
mov
js
sub
and
notb
loope
jecxz
fwait
jl
call
and
aas
inc
cmc
aaa
pop
pop
lcall
js
and
sbb
stos
pushf
adc
aam
ss
fistps
call
outsl
repz
std
pop
sub
fs
push
ss
fwait
jge
jae
lea
mov
fdivs
mov
or
cmpsb
fdivr
pop
mov
and
jmp
jle,pn
ret
push
out
stos
shrd
push
shll
shll
inc
mov
add
fwait
mov
pusha
xor
dec
jmp
fs
adc
cld
cmp
in
adc
es
aad
add
je
cmp
dec
aad
or
repnz
fnstcw
mov
push
shlb
into
mov
enter
pop
mov
jg
lcall
sbb
lock
xor
faddl
push
sbb
rcrb
pop
adc
xor
or
cmpsl
push
hlt
fwait
clc
test
mov
xor
sub
clc
movsl
push
fidivl
lret
inc
mov
cmp
dec
fisttps
xorl
and
lcall
insb
push
inc
or
aad
test
addl
cmp
adc
push
push
dec
stos
or
sahf
jmp
aam
or
roll
xor
js
mov
je
sbbb
movsb
sub
lock
mov
inc
aaa
jbe
sub
insl
push
cmp
dec
sub
outsl
mov
xlat
lock
div
sbb
push
sbb
pop
out
test
jns
mov
or
push
add
cwtl
inc
cld
cmpsl
mov
push
and
mov
fimull
pusha
mov
lret
dec
adc
cmpsb
cmp
mov
xorl
lret
je
inc
ja
add
pop
add
mov
and
adc
fbld
aas
lods
rclb
daa
scas
push
aas
or
or
push
cmpsb
inc
aas
je
pop
repz
xor
mov
pop
cltd
sbb
rorl
int3
sbb
insl
insb
xchg
enter
xchg
int3
jle
mov
test
inc
loop
cmp
mov
cld
loop
mov
dec
mov
or
pop
fisubrl
imul
aad
inc
outsb
add
int
cld
out
into
mov
and
cld
jg
add
xor
in
aaa
xchg
mov
xor
or
jo
fsubrp
sarb
cmpsl
push
mov
divl
cwtl
hlt
push
mov
ret
xor
pop
sahf
cmpsl
pusha
push
pop
jl
fdivrl
pop
rcll
jno
movsb
mov
clc
rcr
cs
pop
xchg
push
aam
xlat
pop
rolb
jae
out
mov
out
xchg
adc
gs
push
adc
pop
cmp
icebp
jmp
ret
lahf
mov
push
mov
and
ljmp
sub
stos
leave
mov
xchg
sbb
or
inc
mov
inc
sahf
adc
mov
insl
inc
les
xchg
out
into
mov
mov
lcall
in
xor
jl
or
mov
cli
lcall
jg
aad
stos
or
sahf
or
add
js
clc
push
mov
xor
mov
xor
ss
lret
mov
outsl
cmpsl
push
push
mov
sbb
dec
mov
jns
push
pop
jbe
lods
test
cmpsl
jns
push
mov
or
sbb
test
jecxz
xor
cmp
imul
sbb
cwtl
mov
inc
imul
movsb
xor
call
cld
and
and
inc
dec
jp
pop
inc
adc
adc
jnp
imul
sbb
jmp
jbe
fmull
lea
mov
adc
mov
fbld
push
push
lret
ss
jae
xchg
inc
xor
ds
add
mov
jns
jp
lcall
push
pop
inc
fsubrl
movsl
or
inc
fstl
xor
jne
into
jnp
mov
in
in
dec
xor
sbb
push
mov
dec
dec
xchg
inc
dec
pop
rcl
or
call
dec
adc
adc
xchg
inc
dec
mov
enter
sti
fwait
lcall
mov
loopne
cmpsl
test
xchg
mov
mov
jnp
jge
fs
movsb
lods
xchg
push
mov
hlt
jne
push
adc
pop
mov
lock
das
fistpll
movsl
jecxz
adc
and
fld
sbb
xor
push
in
or
xchg
add
cld
mov
inc
adc
dec
in
pop
pushf
movsl
add
cld
repz
fdivs
movsl
nop
mov
andl
jmp
jp
mov
mov
bound
stc
xchg
mov
lcall
cld
push
xor
adc
insl
push
cmpsl
pop
cwtl
pop
dec
aas
test
addr16
test
mov
dec
mov
xchg
sbb
mov
cmp
icebp
xor
adc
cmpsl
js
or
in
fwait
inc
adc
mov
out
aas
adc
out
pop
roll
xor
sub
or
inc
cmp
dec
push
repnz
loope
dec
stc
fcomi
clc
cmpsb
cmp
or
leave
cli
push
pop
call
bound
jecxz
mov
mov
xchg
xor
gs
push
or
scas
in
int
xchg
and
lahf
loop
shlb
mov
cld
cmp
imul
or
pop
jl
dec
xchg
addb
cli
fstpt
inc
jle
ljmp
cmp
mov
xor
xor
jl
ja
xor
rorb
jns
mov
sbb
and
adc
and
sub
loopne
jge
sti
ds
shl
int
mov
pop
pop
jge
push
rclb
pop
aad
dec
and
mov
arpl
push
xor
cmpsl
out
shl
dec
fwait
pop
jg
sbb
cli
pop
and
or
mov
mov
or
fcoms
orl
pop
xchg
stc
cmpsl
cmp
add
dec
jl
or
xchg
lret
mov
and
out
pop
xchg
mov
mov
push
cld
aaa
out
imul
jecxz
std
outsl
push
clc
inc
mov
xorl
adc
cmp
test
cwtl
std
out
mov
lea
lahf
pusha
repz
mov
xchg
push
ljmp
dec
and
inc
mov
loop
dec
xor
ret
cmc
xchg
xor
push
push
jns
and
stos
or
out
fstl
lahf
push
dec
dec
add
xchg
inc
or
xlat
cld
sub
push
inc
stos
or
rcrl
and
sub
add
jnp
insb
cmp
out
pop
sbb
cmp
dec
pop
fwait
or
call
jl
out
out
mov
dec
fstpt
mov
mov
mov
and
lods
mov
shlb
pop
out
arpl
xor
inc
jl
and
jo
pushl
in
rolb
jp
dec
inc
cli
cld
mov
pop
sbb
mov
xchg
jecxz
inc
mov
push
add
sub
fsubr
push
cwtl
repz
je
iret
jno
sti
lahf
pushf
pusha
in
adc
out
push
dec
fdivrs
loope
inc
xor
jb
adc
std
sbb
lods
and
adc
bound
sub
mov
jg
clc
hlt
pushf
adc
adc
and
and
sbb
push
aaa
push
enter
xchg
mov
jl
xchg
mov
sbb
rol
mov
out
or
dec
out
pop
test
push
fsub
sub
pop
leave
mov
add
lret
pop
and
lea
cmp
inc
adc
xchg
stc
sbb
jbe
pop
mov
jmp
and
push
aas
jns
int3
jno
andl
clc
movsl
in
dec
jno
lods
sbb
stc
jecxz
enter
data16
fdivrl
add
fisubl
cmc
cld
dec
inc
or
mov
test
push
sbb
mov
adc
mov
pop
rorb
mov
dec
pop
sbb
dec
mov
ficomps
jl
mov
push
jge
scas
mov
push
dec
push
bound
ja
add
js
imul
inc
sub
jmp
or
rcl
inc
or
cld
pop
cmpb
dec
test
mov
pop
and
sub
incb
ljmp
out
dec
xor
fists
cli
rcll
push
pop
pushf
push
rcr
aad
dec
inc
imul
xor
fdiv
jp
mov
jne
jbe
mov
push
pop
dec
fs
cld
ret
mov
aaa
pop
leave
cmp
sub
sbb
cmp
mov
test
imul
into
mov
pusha
jns
sbb
push
dec
in
xchg
adc
lds
dec
jmp
fcomi
and
data16
ret
std
sub
mov
push
fisubrl
rorb
jo
cmc
mov
inc
xor
filds
sub
incl
cwtl
stos
adcb
nop
sbb
je
xchg
frstor
lods
inc
adc
inc
sbb
sbb
fimuls
push
ljmp
pusha
loope
mov
mov
inc
popa
pop
jg
adc
in
ret
cli
mov
sub
cmpsb
mov
cmp
sarb
jle
mov
dec
popa
cmp
cltd
mov
fidivs
inc
dec
imulb
bound
pop
icebp
mov
pop
xchg
or
rorb
mov
dec
les
mov
push
inc
lcall
icebp
stos
imul
pop
sbb
xor
sub
dec
fcmove
repz
xor
and
pusha
es
loop
fwait
cmp
inc
dec
or
ja
ficompl
sub
push
stos
add
jl
dec
in
sarl
push
adc
xor
rolb
popl
sub
hlt
and
mov
adc
mov
aad
mov
dec
xchg
and
fcoms
scas
adc
dec
lret
adc
leave
addr16
jg
mov
mov
or
enter
and
arpl
inc
loopne
pop
lods
out
xchg
or
dec
in
sub
mov
mov
pop
jp
push
push
pop
aaa
mov
xchg
mov
loopne
cltd
stos
push
or
arpl
aad
cmp
push
adc
jg
dec
adc
pop
jae
clc
test
cld
lret
mov
add
in
add
push
dec
sahf
mov
xorb
lret
dec
xor
inc
adc
mov
add
sbb
arpl
push
pop
aaa
push
xchg
mov
pop
cmovns
scas
lcall
sti
movsl
pop
mov
cld
inc
jbe
adc
sub
repz
adc
pushf
add
or
pop
pop
mov
iret
jnp
fwait
cld
arpl
movsb
push
dec
repz
jno
mov
cmp
or
loopne
xchg
add
shlb
les
fstl
sahf
lahf
pop
adc
loopne
repnz
icebp
fildl
dec
test
scas
mov
add
cmp
repz
adc
fwait
jmp
and
jl
jne
sbb
lock
fiadds
fidivl
inc
js
repz
popf
aas
iret
xorl
sbb
mov
or
inc
add
sbbb
jecxz
repz
inc
outsl
lret
imul
lods
jne
push
mov
clc
jl
mov
clc
pop
cmpsl
mov
inc
and
pop
mov
jb
jnp
fildl
clc
push
repnz
in
push
jmp
xchg
xor
cmpsb
adc
pop
and
xor
nop
sub
bound
cmp
or
sbb
test
enter
out
sub
xor
pop
inc
cld
pop
lcall
push
push
cmpsb
sar
jbe
addr16
popf
fmuls
fs
addb
or
inc
in
push
push
ret
and
js
dec
inc
pop
cwtl
mov
dec
repz
leave
sbb
rcrl
lret
rcrl
and
and
imul
push
sti
jns
or
inc
push
dec
call
pop
imulb
fmuls
jb
or
cmp
loope
sbb
xchg
or
dec
or
lret
pop
fs
push
aas
mov
or
sbb
fs
push
mov
cmpsb
inc
fcoms
pushl
jp
cmc
sub
mov
adc
int
cmp
in
xchg
iret
dec
xor
sbb
mov
out
pop
pop
inc
cld
loop
xchg
push
mov
cld
cmp
mov
orl
mov
push
lcall
inc
sbb
sub
les
sbb
sub
inc
adc
xchg
fimull
sub
imul
fdivrs
pop
xchg
clc
mov
fistpll
or
mov
adc
push
lods
or
mov
mov
push
iret
sub
or
lds
pop
mov
mov
in
aam
mov
stos
or
sub
mov
push
mov
sbb
cmp
test
inc
cmpsl
in
or
insl
js
or
xor
xor
mov
fisttps
cmp
sub
jo
pop
lock
fdivs
xchg
fiadds
or
xor
and
and
je
adc
idiv
jge
repnz
sbb
inc
out
adc
insl
cltd
lock
mov
sub
leave
stos
insl
bound
ret
push
mov
ss
push
pop
loop
cltd
ljmp
into
adc
fstl
clc
out
mov
pop
fldenv
lods
cli
mov
inc
and
movsl
pop
add
pusha
shrl
jl
mov
adc
jp
stos
enter
pop
aam
cld
hlt
loop
mov
clc
mov
cmp
xchg
lcall
adc
out
addr16
aaa
jne
lea
imul
pop
push
call
jmp
fdivrp
ds
add
mov
sti
mov
add
mov
shrb
cmpl
adcb
js
adc
jl
jl
push
addb
mov
mov
mov
inc
push
shll
mov
sbb
xchg
xor
jle
mov
jns
in
add
dec
lret
dec
inc
or
jl
sbb
sub
xor
and
stos
sahf
lods
lods
pop
and
cs
repz
xor
xchg
push
clc
sub
sbb
pause
movsb
ss
ficompl
xor
and
pop
jl
dec
sbb
pushf
dec
loop
and
ds
mov
xchg
sub
pusha
dec
mov
push
aam
dec
mov
jg
jbe
jmp
or
stos
fistl
enter
fistpll
push
cli
ljmp
cli
or
and
repz
push
cmp
pushf
push
push
dec
cld
jecxz
in
lahf
out
jno
adc
movsl
aam
fadds
movsl
xlat
fs
jo
icebp
jmp
lock
cmp
jo
add
mov
add
lret
and
scas
fs
xor
push
lret
testb
jbe
ljmp
mov
inc
sbb
jno
push
loop
and
xor
movsl
pop
inc
dec
cmpsb
push
inc
rorl
insl
sbb
ret
les
mov
jnp
mov
in
and
push
std
pusha
mov
loopne
out
cmpsl
cld
out
je
xchg
jmp
scas
or
popl
cmc
or
pop
cld
xchg
jae
and
into
imul
jae
shl
dec
push
shll
adc
std
cmpsl
call
pop
scas
sbb
mov
repz
pop
daa
xor
mov
adc
mov
lds
dec
jae
or
xor
pop
nop
ss
or
or
sub
push
dec
stos
pusha
jbe
lods
out
int
pop
int3
xchg
dec
idivl
or
push
cmpl
aam
repz
ret
jnp
pop
xchg
out
push
mov
inc
mov
or
insb
and
lods
adc
and
ds
in
ret
mov
dec
xor
or
addr16
scas
sbb
dec
outsb
rol
xor
mov
push
fsubrl
jno
dec
push
mov
adc
mov
or
inc
xrelease
sub
data16
test
xor
fstpl
pop
sti
fs
rep
cmc
loopne
int3
popf
lods
sti
xor
inc
jl
xchg
xor
dec
pusha
sahf
mov
xor
jg
aad
pop
movsl
repnz
inc
inc
push
mov
hlt
mov
cs
xlat
push
insl
adc
call
mov
outsl
xor
test
repz
call
inc
frstor
roll
push
inc
jnp
imul
mov
data16
mov
push
insb
negb
inc
adc
adc
out
lcall
sub
dec
pop
adc
pushf
mov
inc
xchg
cld
jbe
sub
dec
jno
mov
js
aaa
xor
inc
jmp
sbb
imul
cltd
adc
mov
xchg
mov
inc
lock
fwait
fs
jl
xchg
inc
ljmp
pop
sti
pop
jb
mov
or
fisttpll
aam
mov
aaa
pop
mov
pop
adc
out
shlb
in
loop
adcb
cld
sub
pop
inc
add
ret
lahf
repz
into
sbb
cmpsl
sbb
bound
mov
lea
into
mov
mov
mov
in
or
cmp
es
sbb
aam
mov
jb
or
sti
out
lea
push
or
icebp
sar
jo
out
ret
adc
pop
sbb
divl
mov
adc
mov
mov
cmpsb
xchg
cli
out
pop
fimuls
sub
and
push
dec
rclb
push
fcomi
addr16
js
mov
and
in
fmull
mulb
mov
std
dec
repz
sti
imul
xorb
mov
or
pop
inc
gs
addr16
popf
mov
push
jecxz
dec
dec
push
and
pusha
mov
repz
xchg
cmc
push
ss
adc
cld
js
mov
push
lods
or
rcrl
jp
inc
xor
add
sub
add
ficompl
addb
loope
and
popa
mov
cmp
mov
mov
ret
jp
shl
pop
cmpl
ret
icebp
cld
int3
push
jge
aas
sub
jns
std
sbb
fstpl
scas
push
or
aaa
cld
mov
sbb
in
dec
lock
adcb
dec
mov
xor
data16
inc
pop
adc
out
insl
add
leave
pop
inc
imul
jo
pop
adc
mov
fldl
mov
fwait
pop
push
pop
dec
dec
int3
jne
sbb
dec
or
jno
fs
jno
sahf
sti
adc
cli
fwait
xorl
inc
dec
dec
jecxz
push
sbb
dec
in
xchg
loopne
mov
push
cld
andb
inc
movsl
jnp
mov
clc
loopne
pusha
repz
mov
sbb
out
or
add
andl
xchg
int
sbb
add
sub
mov
sbb
xchg
cmp
push
cwtl
repz
sahf
mov
sbb
or
int
push
repz
icebp
cwtl
pop
jg
mov
ficoml
lahf
cmp
cltd
out
rcr
cmpsl
ljmp
and
jp
lods
dec
mov
mov
jge
sbbb
cmc
cwtl
mov
int3
fwait
fs
xor
mov
inc
xchg
xchg
lds
dec
and
dec
out
dec
aaa
sbb
inc
sub
xorl
aas
mov
pop
inc
cmpsb
sbb
or
pop
or
inc
xchg
cmp
loop
and
mov
push
mov
ljmp
repz
mov
in
jmp
scas
js
jae
sbb
cmp
aam
enter
push
push
mov
cmp
jae
icebp
lcall
icebp
data16
imul
push
test
mov
push
aas
out
adc
gs
dec
and
rcrb
cld
or
cltd
inc
hlt
inc
js
ficomps
jl
cmc
xchg
mov
sbb
aad
shll
and
dec
adc
mov
pop
jl
or
or
cmp
sub
cmc
mov
and
inc
subb
dec
push
mov
inc
inc
dec
jle
push
sub
aam
sarb
pop
jl
inc
dec
mov
test
gs
cs
loopne
test
rcrl
cmpsl
or
push
test
or
jne
add
adc
mov
or
push
adc
mov
pop
lods
js
inc
pop
aas
or
adc
adc
cld
inc
mov
xor
mov
movsb
stos
inc
mov
pop
fimull
xchg
out
leave
movsb
in
cmp
fs
pusha
mov
dec
aas
inc
adc
sbb
loope
mov
cli
ret
pusha
mov
popf
notl
cld
adc
inc
push
scas
dec
sbb
ljmp
sub
js
cmc
dec
mov
mov
mov
cwtl
cld
mov
aam
sarl
xor
xlat
push
inc
and
hlt
cld
ja
repz
test
fdiv
mov
cld
push
dec
push
outsl
int3
xor
cld
inc
mov
iret
sbb
stos
test
xorl
push
insl
push
sub
scas
test
dec
adc
mov
add
xor
js
and
movsl
adc
mov
rol
sub
ret
or
inc
icebp
xor
clc
enter
out
cmp
mov
je
scas
pusha
mov
scas
fsubl
xor
push
fistpl
push
sub
stos
sbb
es
fldenv
fistpl
adc
dec
repz
test
fiadds
inc
in
enter
add
scas
mov
movsl
sub
neg
xchg
pop
push
add
mov
push
aas
sbb
lods
fcoms
pop
movsl
jnp
sbb
aam
cld
test
pop
sub
jns
adcl
repz
iret
mov
stos
add
repz
lret
shr
mov
test
in
insl
or
mov
in
push
ret
clc
in
ja
push
add
adc
cmpsl
in
push
add
add
cmp
xchg
test
and
leave
out
or
inc
mov
add
lcall
dec
arpl
addr16
xor
xorl
repnz
addr16
cmc
pop
dec
les
cmpsl
pushf
mov
mov
push
sar
call
call
popf
or
adc
dec
repnz
in
pusha
inc
pop
fcompl
or
mov
cld
rep
pop
leave
lds
xor
cmpsl
push
dec
dec
xchg
or
addb
pop
inc
push
in
dec
lods
dec
cmpsl
or
cli
pop
dec
dec
jge
pop
hlt
cwtl
jae
lret
or
fldenv
jmp
mov
icebp
or
sub
fwait
repz
pushf
jmp
xor
or
arpl
push
adc
lret
ss
das
fdivrp
push
push
xor
sbb
jmp
jecxz
cld
mov
and
scas
lock
fs
arpl
jno
xchg
addr16
outsb
test
shlb
loop
les
addb
pop
repnz
in
adc
xchg
dec
in
ljmp
lcall
cwtl
out
loopne
loopne
jg
leave
shl
xor
or
addr16
sbb
nop
lcall
and
adc
mov
jno
ljmpw
xchg
or
mov
adc
or
xchg
adc
mov
lea
addb
test
repz
insl
mov
push
shll
cwtl
inc
pop
in
adcl
mov
push
icebp
add
xchg
mov
jg
fs
inc
adc
mov
inc
pop
notb
inc
lea
cli
gs
nop
movsb
mov
dec
aas
cwtl
int3
or
push
adc
int
xadd
orb
ret
mov
fcmovnbe
cmc
inc
ljmp
pop
lods
pop
mov
add
inc
ljmp
imul
jge
in
xor
in
mov
lea
mov
aas
jo
or
sbb
into
jmp
scas
sbb
int
pop
jno
fcoml
imul
jl
ja
mov
jno
addr16
aas
repz
aam
inc
pushf
lock
out
loopne,pn
ret
xchg
jns
pushf
xor
add
in
dec
fnstcw
mov
cld
arpl
push
inc
or
dec
mov
jp
outsl
rcr
pop
roll
test
mov
or
cwtl
cmp
push
stos
adc
pushf
xchg
imul
xlat
fcompl
aam
fistps
xor
mov
scas
inc
movsb
mov
mov
mov
pop
andb
xor
mov
hlt
ret
test
dec
and
fnstsw
push
sub
inc
arpl
push
inc
or
adcl
and
jo
cld
sub
inc
jle
xor
mov
sbb
jo
ja
int3
sti
pop
jl
mov
fdivl
jg
cmp
sahf
xchg
in
jo
push
cld
xchg
movsl
adc
scas
repz
sbb
repnz
lahf
mov
push
sbb
divb
mov
fadd
mov
movsl
jbe
xlat
dec
js
xchg
mov
repz
sub
in
jl
sub
clc
push
notb
mov
dec
pop
vpsllw
dec
gs
daa
cltd
mov
movsl
xchg
cmpsl
jmp
dec
fdivrs
les
lods
push
xchg
push
popf
je
dec
lods
jae
xor
add
icebp
and
sbb
inc
movsl
insb
outsb
decb
and
mov
add
mov
loop
mov
int
pop
pandn
pop
pop
sub
adc
mov
repnz
outsb
nop
data16
dec
mov
rclb
ret
out
mov
jl
push
xor
jnp
nop
mov
sbb
mov
fdivr
repz
je
dec
mov
adc
push
jl
loopne
inc
insb
sub
lret
aam
andb
xor
pop
mov
jg
push
enter
adc
mov
or
test
dec
mov
mov
scas
sti
jecxz
xor
and
jge
mov
ret
xchg
cld
adc
xchg
fists
mov
clc
loopne
push
pushf
mov
pop
out
or
in
xchg
cltd
les
cli
xchg
fnsave
jecxz
mov
mov
mov
jns,pt
mov
or
orl
inc
fstpt
mov
sub
outsl
jo
or
mov
ds
or
fbld
sub
sub
in
out
lret
inc
jp
mov
mov
cmp
add
pop
pop
mov
jecxz
inc
jle
lods
cld
xchg
fdivr
xor
ds
or
into
insl
pop
rolb
imul
movsb
test
hlt
mov
sahf
cmpsb
and
aam
lcall
dec
scas
fcomps
dec
pushf
mov
dec
arpl
and
rcll
mov
inc
and
sar
xor
pop
adc
arpl
push
pusha
and
repz
cmpsl
inc
mov
add
xchg
or
sub
dec
xor
sub
aam
popf
cmp
mov
lcall
cwtl
adc
xor
repnz
pop
jbe
in
lock
sub
lods
fisttpl
aam
out
xchg
lods
es
xchg
and
cld
test
int
repnz
notl
movsl
dec
cmpsl
dec
mov
xor
sub
adc
inc
insl
dec
sub
cmp
push
mov
mov
mov
and
push
shlb
cmp
dec
fiadds
shl
sarl
in
push
push
in
out
inc
cmp
xchg
imulb
and
movsb
in
mov
push
xchg
and
mov
mov
adc
loopne
pop
sarb
shll
andb
scas
lcall
and
sub
cld
cmp
push
popa
xchg
xchg
push
daa
shl
decl
repz
push
outsl
sub
cwtl
repz
jb
dec
dec
xor
repnz
jl
jp
outsl
inc
rolb
icebp
sbb
lds
dec
jnp
inc
repz
xor
push
fcompl
orb
xor
fcomi
dec
les
imul
pop
fimuls
fs
jle
lods
dec
bound
inc
test
push
cwtl
sbb
cmp
not
jno
push
and
or
or
lret
and
mov
push
jecxz
xchg
sbb
test
pop
cmp
ljmp
mov
xor
jb
lods
test
pop
aas
dec
lds
pop
inc
cld
add
mov
mov
mov
pop
cld
int
xchg
arpl
sub
fimull
dec
jb
cmpsb
pop
mov
fstps
sti
and
jl
pop
push
in
scas
cmpsl
jp
loopne
stos
setg
inc
inc
out
push
mov
mov
adc
jnp
out
jle
movsl
xchg
sbb
jne
mov
enter
fiaddl
adc
jmp
xchg
push
out
jnp
and
in
push
dec
and
rorl
pop
and
mov
lock
push
imulb
sub
sbb
mov
push
mov
les
sbb
popf
push
cld
bound
xor
lret
mov
mov
cld
inc
jmp
movsb
dec
mov
or
sub
push
cmc
mov
inc
in
jl
pop
push
cmp
in
sbb
pop
xchg
sarl
aaa
daa
cld
sahf
stos
mov
fdiv
out
adc
insl
add
iret
ljmp
inc
clc
jp
rcrl
pop
bound
loop
popa
hlt
icebp
mov
out
and
xchg
mov
sbb
test
movsb
pop
test
out
loopne,pt
push
sbb
rcll
test
gs
ret
aas
fcompl
inc
mov
call
test
jmp
scas
mov
outsl
push
xchg
or
mov
fiaddl
les
adc
sbb
call
cwtl
scas
cmp
jl
fcmovbe
pop
movsb
rorb
inc
adc
insb
int
push
mov
push
outsl
jb
insl
arpl
mov
jl
push
pcmpgtd
mov
mov
sahf
rol
lcall
shll
adc
dec
inc
inc
repnz
inc
pop
rorb
jge
jno
imul
jmp
popf
inc
dec
stos
cwtl
aaa
sub
in
jno
xchg
or
std
mov
push
push
dec
sub
clc
imul
scas
gs
sbb
cmp
movsb
jne
xchg
dec
sbb
test
xchg
dec
mov
inc
dec
or
xor
aaa
iret
les
lcall
jecxz,pt
and
out
ds
and
sahf
cmp
mov
push
lods
cli
repz
xor
cmp
pop
daa
std
jg
out
dec
or
xor
dec
xor
stos
lcall
jae
sbb
fsubl
jl
add
inc
test
pop
sub
and
imul
lds
xchg
scas
subb
mov
dec
fisubl
or
out
rolb
push
lock
ret
cmp
imul
pop
sub
and
popf
push
lods
cmc
cmp
xor
repz
mov
mov
add
jno
xchg
adc
int
cmp
push
xor
dec
fnstsw
aam
sub
sub
xor
test
ja
dec
stos
push
inc
in
mov
cld
mov
jnp
push
fwait
adc
ffree
dec
add
repz
xstore-rng
cmpsl
add
xorl
stos
gs
mov
jne
jle
push
rcrl
and
iret
lahf
clc
in
loopne
adc
lahf
jecxz
or
jns
cld
add
push
in
adcl
ret
cltd
sbb
out
xor
lds
push
xchg
cld
push
push
scas
loope
cmc
dec
xor
es
pop
jae
sbb
xchg
insl
jle
or
cld
lahf
out
dec
stos
dec
movsl
enter
repnz
push
mov
cs
mov
xchg
push
mov
iret
jmp
and
pop
mov
std
fcomps
imul
sub
jl
xor
dec
out
jne
and
into
lods
inc
jp
sti
dec
js
cwtl
popf
adc
cld
and
mov
dec
push
clc
aam
mov
xor
xor
aam
lret
mov
cld
add
dec
mov
add
push
push
int
icebp
out
mov
mov
lock
sbb
jno
add
mov
inc
cld
xchg
leave
push
push
adc
iret
ljmp
push
push
std
into
adc
push
cmpb
divb
sub
iret
dec
rorb
lea
cs
ret
scas
inc
daa
idivb
inc
loopne
je
sarb
mov
dec
cmp
ja
push
in
xchg
addr16
nop
into
dec
orb
adc
rorb
or
push
scas
xor
movsl
pop
sub
lret
xor
xor
add
sub
scas
pop
lahf
repnz
mov
adc
cld
mov
dec
scas
mov
call
mov
jecxz
cltd
add
xchg
lods
push
mov
test
or
cmp
adc
into
xor
xor
or
xor
lods
scas
xchg
ss
clc
testl
pop
movsb
and
inc
mov
mov
repz
dec
insl
test
dec
xchg
lret
push
mov
lock
mov
cld
ret
fnsave
stos
aaa
loope
js
scas
jl
movsl
add
arpl
movsb
aaa
cld
jno
mull
cmpsb
fmul
loopne
imul
iret
adc
jg
jl
mov
inc
dec
arpl
push
dec
sbb
mov
and
sub
cmpb
sbb
pop
out
xor
jmp
cmp
jae
inc
xchg
or
cli
cld
adc
mov
clc
adc
or
xchg
sbb
cmp
jno
in
jecxz
push
into
jp
xchg
or
mov
lcall
fs
adc
mov
dec
mov
dec
clc
inc
mov
sbb
dec
add
lea
add
test
add
push
setae
pushf
out
sub
cli
push
sbb
bound
or
stc
test
dec
xchg
or
xchg
scas
pop
call
inc
js
idivb
addr16
aaa
mov
repz
adc
jl
and
ljmp
inc
clc
mov
xor
cmc
add
or
mov
push
loop
icebp
outsb
and
sub
repnz
add
inc
popf
cmc
xchg
inc
popa
inc
incw
insb
mov
fdivrl
sub
dec
adc
push
mov
jbe
or
sbb
add
pop
insl
daa
pop
cmp
adc
push
stc
mov
pop
repz
xchg
in
inc
cmp
pop
loopne
and
movsl
xchg
pop
pop
mov
pop
pop
dec
pop
lds
loopne
sbb
inc
cld
jno
cmpsl
push
xor
and
das
popf
dec
stc
inc
or
mov
sub
mov
pop
test
adcb
xor
mov
fndisi(8087
movsl
out
jb
loope
ficoml
fimull
mov
xchg
repz
mov
fmuls
dec
mov
or
loop
xchg
cld
sbb
movsl
in
notb
icebp
ret
cld
mov
daa
rol
and
mov
cmp
pop
rorl
xor
dec
mov
lcall
cs
push
sub
mov
dec
and
jl
push
sahf
mov
dec
dec
jo
cmpsl
in
lcall
inc
push
jbe
mov
push
repz
out
jl
out
into
outsl
dec
xor
dec
inc
jle
mov
jne
mov
stos
in
and
inc
in
sti
push
push
xor
xchg
xorb
xchg
cmpsl
or
jb
out
push
and
and
insb
sbb
data16
adc
add
insb
loopne
inc
sbb
jge
lret
jbe
xchg
mov
sti
addr16
in
xchg
pop
push
jne
mov
in
or
and
dec
in
mov
mov
xor
sub
les
add
push
dec
and
cld
test
jg
in
push
pop
repz
pop
and
hlt
shll
repz
or
out
xor
add
mov
mov
mulb
dec
xchg
sbb
and
fwait
pop
sub
pop
data16
call
pop
push
jmp
adc
idiv
add
inc
inc
cmpb
push
lahf
lods
cmpsb
aas
xchg
movsl
or
outsl
loope
insb
pop
jl
sub
fsub
xor
cld
pop
jmp
loop
dec
fs
fistps
or
inc
js
or
lcall
pop
cmp
jae
adc
cltd
xchg
stos
mov
ljmp
adc
adc
cmpb
call
push
mov
jno
sbb
sahf
inc
xchg
call
rcrl
iret
inc
add
push
or
jns
lret
pushf
cwtl
and
sub
out
arpl
stc
xor
push
pop
pushf
aas
inc
lods
cwtl
dec
jl
push
repnz
icebp
out
or
movsb
mov
test
orb
popf
pushf
fisttpl
mov
test
adc
or
or
movsl
jmp
repnz
pop
mov
aas
add
mov
lahf
and
push
leave
dec
mov
xor
adc
inc
and
jl
jle
inc
xor
or
cmp
xor
lods
icebp
sub
cwtl
xor
cmp
out
lret
dec
mov
repz
test
xlat
ljmp
jl
imul
cs
push
xor
pop
pop
push
add
int
aaa
cmpsb
ret
dec
inc
mov
and
mov
and
dec
pop
fwait
jge
adc
cmp
sbb
je
cld
and
mov
aad
adc
push
out
ret
jge
or
dec
repnz
sub
in
mov
push
lea
cltd
inc
sti
lock
lret
fmuls
sub
dec
lods
add
loope
and
rcrl
icebp
clc
inc
repnz
fiaddl
jle
xchg
test
ds
aas
xlat
push
insb
jnp
pop
lret
js
cld
mov
fbld
scas
push
sbb
and
clc
cld
push
out
outsl
sub
inc
sub
cmp
dec
dec
inc
aaa
and
adc
mov
sbb
outsb
sbb
jl
clc
push
outsl
lods
push
lret
jl
sti
xor
pop
and
cld
mov
rcrl
stc
xchg
mov
push
inc
mov
sub
pusha
cmpsb
xchg
mov
cmpl
pushf
ret
jbe
adc
rorl
jo
into
arpl
push
sbb
into
arpl
and
mov
jae
xchg
cmpsb
or
cwtl
xor
mov
cld
xchg
inc
cmp
mull
mov
arpl
cltd
cld
sbb
loopne
das
aas
adc
iret
js
mov
cld
iret
aam
into
sbbb
dec
repz
push
inc
push
dec
mov
test
rcll
fs
inc
mov
xchg
out
xchg
push
cmp
jp
push
pop
cmp
out
and
pop
cmp
jb
pushf
mov
pushf
adc
cld
mov
gs
insb
xchg
mov
push
adc
pushf
push
std
push
fmull
in
jb
scas
orb
loop
in
jns
push
lret
and
mov
fwait
int3
mov
arpl
mov
roll
or
sbb
icebp
cmpsl
cmp
cmp
xchg
arpl
in
xchg
sbb
sbb
and
dec
sub
ljmp
test
bound
fdivl
addl
add
jbe
mov
es
mov
sub
test
jl
jmp
cmp
dec
pop
in
xchg
pushf
mov
addr16
test
sbb
jbe
cld
jo
mov
pop
or
xchg
orl
cmpsb
inc
xchg
repz
xchg
add
cld
pop
outsl
add
aad
cmp
pushf
or
adcb
mov
decb
xchg
and
xchg
dec
adcb
adc
cld
imul
gs
inc
js
inc
ret
out
push
xor
push
fcoml
pushf
negb
or
dec
jecxz
fiadds
addb
inc
cli
fiadds
sub
scas
mov
cmp
jno
sbb
je
cld
mov
sbb
push
scas
pop
dec
jbe
repz
scas
out
daa
test
dec
mov
ret
shlb
dec
xchg
in
lret
rol
fdivl
dec
push
mov
mov
xchg
test
call
aad
xchg
notb
xchg
shlb
mov
shrb
lea
sbb
dec
in
mov
dec
pop
nop
add
into
in
lret
push
mov
sbb
push
inc
xchg
push
cmc
cwtl
sbb
jns
dec
imul
fsub
lea
imul
insb
jp
insl
mov
cmc
mov
inc
mov
es
mov
inc
push
xchg
cmpsl
jmp
fldenv
pushf
dec
add
mov
mov
out
ret
icebp
mov
loopne
push
mov
or
pop
sub
mov
jl
xchg
es
nop
cmp
inc
stos
sbb
in
mov
adc
xchg
and
int
sbb
test
xchg
fdivrs
cli
jno
dec
rcrb
and
xchg
sbb
push
xchg
es
lret
dec
mov
push
ljmp
adc
stos
jecxz
mov
push
repnz
movsb
or
outsl
adc
repz
jge
fadds
and
sti
sub
mov
inc
mov
cmpl
movsb
ja
add
stc
lcall
sahf
stos
lret
pop
and
add
jl
cmp
movsl
inc
test
cmpsb
repnz
and
mov
pushf
jb
mov
insl
dec
jle
mov
and
dec
and
adc
dec
pop
mov
and
sbb
dec
arpl
loope
xchg
cld
xor
cmp
adc
add
sub
push
aam
cld
imul
hlt
mov
xchg
sbb
fists
mov
adc
lods
inc
int
or
sub
adc
xor
push
xchg
movsl
pushf
and
mov
pop
mov
ja
out
jle
or
sub
mov
out
mov
leave
out
aaa
dec
inc
or
iret
ret
cmp
dec
repz
fildll
rcll
inc
cld
inc
mov
jp
push
popa
xchg
not
int3
xchg
fs
xchg
jmp
adc
or
fs
into
adc
and
dec
notb
in
aam
dec
ror
outsb
mov
ds
dec
mov
aaa
jl
lds
orb
jl
push
or
cmp
idivb
scas
insl
mov
lahf
push
sub
mov
div
insl
xchg
inc
adc
inc
into
jl
pushf
call
scas
leave
shl
ficoml
pop
adc
repz
xorl
orb
shlb
xor
into
neg
lahf
jl
addr16
test
das
movl
and
dec
dec
test
dec
lods
rorb
ret
and
ja
cld
aas
xchg
shll
xchg
out
movsl
jo
movsb
insl
dec
repz
mov
mov
jae
dec
dec
repz
int3
enter
lahf
adc
imul
push
dec
push
aaa
fstpt
mov
xchg
sbb
iret
pusha
roll
mov
xchg
xchg
dec
xchg
xchg
sbb
mov
inc
aam
adc
test
pushf
iret
data16
ret
push
mov
sbb
add
pop
enter
jg
cmp
mov
jmp
sub
jl
sbb
cld
in
pop
mov
out
jl,pn
mov
ja
sub
orl
insb
push
xrelease
cld
fnstenv
xchg
addb
addr16
out
or
cmpsb
add
dec
pop
dec
out
movsl
repz
pop
mov
int3
dec
test
adc
scas
sub
jmp
fstps
add
repz
or
lea
mov
cmp
pop
adc
inc
in
in
mov
addr16
xchg
cld
pop
fimuls
js
jne
mov
mulb
dec
jl
xor
mov
and
pop
jl
shlb
repz
pop
add
mov
outsb
push
sub
ja
cmp
fucomip
jno
cs
xor
jmp
lods
out
mov
fsubl
mov
adc
cmp
cmpl
adc
fimull
decb
dec
push
inc
mov
xor
xorb
inc
bound
lea
mov
push
cmc
loopne
movsb
sbb
inc
cwtl
mov
mov
push
aaa
cli
stos
or
fprem1
inc
or
dec
mov
pop
or
insl
push
sti
repz
cs
sar
insb
push
repnz
sahf
or
add
ficompl
jbe
and
inc
add
jbe
das
shll
je
pop
mov
sub
enter
mov
insl
mov
inc
xchg
xchg
loopne
pusha
aas
cld
or
mov
mov
cld
rcrb
fcoml
sbb
leave
int
aad
inc
dec
jmp
insb
push
adc
mov
cmp
out
int
dec
inc
daa
cltd
scas
push
push
cld
lret
mov
rorl
push
repz
loopne
mov
push
sarl
mov
lea
faddl
jle
aad
cli
stc
dec
and
add
cltd
jl
push
and
cwtl
lods
jno
pop
loope
pop
repz
ss
in
inc
mov
dec
mov
out
call
and
mov
sbb
sbb
dec
mov
decb
int
fwait
mov
daa
adc
cld
mov
or
dec
icebp
movl
lret
xor
scas
mov
aam
jne
inc
pusha
outsl
dec
das
lahf
cwtl
jnp
mov
dec
adc
add
xlat
or
lds
test
jns
or
out
das
inc
jmp
movsl
cwtl
adc
lcall
push
adc
repz
push
inc
dec
dec
lcall
adc
mov
lret
xchg
enter
aam
xor
aad
out
cmp
pop
fmuls
dec
mov
jg
mov
mov
js
cltd
sbb
mov
adc
out
fsubp
test
jl
push
fistpl
dec
fsts
lahf
xchg
add
js
pop
pushf
cmc
shlb
xor
mov
xor
jl
or
mov
sub
lock
xor
push
pop
inc
mov
mov
cmpsl
test
push
pop
aad
push
and
xchg
dec
adc
dec
repz
dec
insl
push
pop
in
pop
push
add
icebp
fcmovu
aam
insb
cld
movb
cmp
out
cwtl
jmp
push
pusha
xor
push
or
call
mov
std
adc
in
mov
inc
pop
repz
push
sarl
dec
out
divb
and
add
fsts
imul
leave
fmul
mov
mov
adc
xchg
orl
rep
mov
pushf
inc
movb
call
rolb
leave
jl
mov
cmp
repz
cmpsl
les
mov
lds
push
sub
push
or
and
and
jecxz
xchg
mov
loope
call
pushf
js
lods
ret
scas
push
cld
mov
or
add
add
loop
stc
jae
sub
popf
or
xchg
sbb
cld
aas
sbb
push
mov
fcompl
sbb
out
or
out
cwtl
sbb
pop
push
sub
out
inc
popa
jge
addr16
inc
lret
sti
cmp
sbb
or
fdivrl
sbb
pop
cmp
stc
adc
fisttps
clc
ss
outsb
push
lret
cmpsb
cmp
test
cld
cmp
icebp
shll
aam
movsl
out
stos
add
xor
sub
test
xchg
addr16
shrb
lcall
adc
or
arpl
add
sub
pop
cmp
in
dec
sbb
nopl
shrl
stos
sti
out
sbb
fcompl
sbb
imul
sub
aaa
aam
nop
adc
fdivrl
xchg
mov
aam
xchg
mov
sub
outsl
aaa
or
sti
adc
cwtl
cmp
push
aaa
pop
mov
jge
les
sbb
test
cld
mov
xor
jne
push
clc
sub
mov
dec
pop
adc
aam
movsl
or
pop
out
inc
jp
dec
clc
rolb
popa
cld
add
adc
add
push
repnz
xor
inc
cmpsl
sub
mov
adc
movsl
cmp
xor
out
gs
pop
xchg
mov
addl
xor
push
inc
pop
mov
mov
jno
js
ds
mov
push
mov
cmp
jo
fcmovne
or
dec
add
ss
daa
test
mov
ds
dec
out
add
stc
ss
mov
and
jb
loop
out
in
repz
xor
lcall
fimull
pop
test
inc
test
jne
test
xor
mov
dec
xlat
pushf
rcll
insb
xchg
cmp
jbe
xchg
push
fiaddl
test
repnz
push
mov
mov
int3
jnp
les
jno
sti
pushf
push
lods
dec
lods
out
lahf
cld
test
lock
xchg
pop
cwtl
repnz
push
movsl
call
xchg
pcmpeqb
dec
movsb
inc
cmpsl
out
jne
dec
outsb
or
cli
fucom
lret
or
push
jl
or
mov
fwait
mov
fnsave
movsl
dec
push
int3
movsl
mov
cmpl
inc
xchg
fsts
aad
loopne
push
out
in
test
jae
mov
in
jge
out
and
in
lcall
test
rcl
jecxz
xor
lret
inc
dec
mov
pop
arpl
divb
es
dec
lods
mov
lock
push
xor
cmp
test
mov
leave
mov
cmp
xor
or
adc
out
mov
mov
stc
or
int3
aam
rcll
pop
out
fmulp
adc
dec
repz
push
mov
loope
adc
adc
add
xor
cltd
mov
repz
enter
cld
dec
test
sub
inc
setp
ficoms
cmp
push
xchg
js
testl
and
mov
outsl
add
pop
mov
xor
push
jno
cmpb
jp
xor
push
mov
lret
inc
adc
cwtl
cwtl
mov
inc
mov
fstpt
xchg
cmp
mov
aam
nop
stos
dec
jae
push
sbb
sub
loope
xchg
xor
jo
in
jl
sbb
jno
dec
xchg
fwait
sbb
pusha
sbb
sub
orl
push
adc
cltd
in
mov
mov
push
mov
xchg
sbb
lds
jne
fidivrl
fwait
xor
gs
lcall
pop
ljmp
push
fcomip
cltd
mov
xchg
rcll
scas
jmp
icebp
inc
popf
mov
fbstp
iret
dec
xor
xor
jne
mov
adc
inc
out
push
inc
dec
out
pop
aas
mov
inc
xchg
cltd
out
addl
cld
aaa
aaa
insl
out
push
insb
or
rolb
add
and
inc
dec
test
inc
cmp
nop
lret
mov
inc
sub
iret
dec
int
cli
xchg
xor
loop
cmp
sbb
out
enter
sbb
dec
insl
pop
movsb
cmp
arpl
sbb
aad
jne
rcr
cli
pop
push
pop
popa
add
in
cld
dec
rorb
xchg
cmp
call
mov
inc
arpl
cld
rorl
out
andl
xor
ss
jmp
jns
xor
imul
clc
repz
mov
inc
adc
popf
cmc
in
mov
cltd
xchg
mov
sbb
fcmovu
mov
add
push
scas
sahf
xor
ljmp
clc
dec
scas
adc
dec
dec
adc
xor
decl
ficomps
pop
pop
xchg
lock
lcall
mov
push
cmpsl
cmpsb
push
cmpl
push
push
sti
das
test
orl
out
xchg
inc
aas
aad
adc
pushf
fildll
adc
lods
xor
dec
push
and
xor
fwait
or
into
icebp
in
cmp
lcall
fiaddl
mov
movsb
mov
repz
cmp
mov
xchg
pop
mov
cmp
jg
cltd
les
call
push
call
scas
jo
pop
cmp
mov
pop
dec
fcomi
cmp
dec
add
or
cmpsl
or
gs
mov
push
or
test
mov
or
movsb
jl
hlt
frstor
rolb
sub
pusha
push
lret
cmpsl
mov
cmpsb
rcl
adc
les
pop
cmpl
or
dec
mov
pop
adc
or
adc
sbb
pushl
add
lock
or
dec
cld
into
lds
dec
push
in
fstps
int3
or
ret
js
lahf
sbb
mov
jl
or
xor
mov
ss
fistl
xchg
jl
in
pmullw
mov
cmpsb
pop
mov
pop
fisttpll
sbb
adc
sbb
insb
jle
push
scas
push
mov
out
sub
fs
movsb
cld
test
or
xor
adc
adc
rorl
repz
sub
sbb
int
jae
jbe
fldt
js
repz
movsb
jl
in
mov
mov
pusha
sbbb
or
add
hlt
sbb
pushf
aas
pushw
jne
notl
mov
xchg
pop
sahf
pop
aaa
pop
mov
dec
xchg
or
cmpsb
mov
sbb
scas
dec
jne
sub
jp
add
add
xchg
stos
sub
ficompl
gs
xchg
xor
sub
movsb
insb
inc
xchg
mov
jae
mov
xchg
xor
xchg
adc
jo
call
loope
xchg
cmc
outsl
xor
mov
insl
ja
roll
cmpsl
outsb
jle
xchg
xchg
sbb
ljmp
jl
lods
xchg
push
mov
adc
pop
pop
fwait
aas
stc
pop
daa
cmp
xor
cld
or
inc
out
add
jbe
out
sub
sub
inc
ss
mov
cli
lret
leave
mov
adc
mov
mov
or
xor
inc
in
movsl
aam
push
pop
cmp
adc
ds
cmp
xor
cld
scas
jne
mov
dec
clc
jecxz
movsb
mov
aad
rclb
movsl
cltd
dec
repz
notb
and
mov
or
and
das
pop
and
cld
or
ret
loop
or
loopne
test
cmp
xor
loope
insb
dec
mov
adc
fmuls
repz
movsb
mov
sub
xchg
push
out
and
mov
or
push
pop
pushw
rorb
mov
out
and
fs
out
adc
nop
lret
sarb
adc
js
cmp
add
mov
cmpl
push
stc
scas
pop
add
xchg
popf
cltd
sub
and
clc
addr16
inc
fstl
sbb
mov
aad
fldt
call
or
sbb
sbb
scas
cmp
insl
pop
push
and
inc
pop
sti
pop
push
out
data16
or
push
insl
in
les
mov
lcall
sub
dec
int
inc
adc
shl
ja
arpl
scas
insb
inc
cmpsb
outsl
into
lods
testl
sbb
sub
mov
stc
cld
pop
inc
mov
push
push
or
cld
sub
out
fsub
cld
insl
jo
ret
mov
xchg
ret
loopne
lock
jecxz
hlt
mov
or
lds
stc
addr16
daa
movsb
jns
andb
jns
fmull
andl
xchg
stc
xor
fcomp
mov
shlb
pop
adc
sbb
xlat
mov
jg
icebp
int
loop
aad
loopne
aas
int
in
jbe
data16
sahf
xor
fsubl
push
mov
dec
pop
cmp
dec
cmp
jnp
jmp
es
cwtl
fdiv
inc
testl
xchg
jle
jb
cmc
cmp
int
adc
jmp
pop
xlat
shlb
or
mov
movsb
nop
cmpsb
mov
pop
mov
jns
out
adc
pushf
int
dec
ret
pop
or
fsubs
mov
xchg
or
sbb
into
js
pushf
aad
and
jae
bound
rcrl
je
mov
xchg
in
jl
out
mov
mov
scas
pop
cmp
xchg
or
inc
imul
inc
adc
push
call
xor
in
xchg
mov
mov
mov
fbld
addb
mov
gs
scas
pop
mov
dec
mov
rol
or
add
cmc
jg
out
or
pop
jno
mov
icebp
aam
cld
rorl
pop
sub
mov
dec
sbb
xor
inc
dec
std
cld
cwtl
push
dec
in
inc
popf
stos
popa
adc
xchg
sbb
sbb
dec
in
addr16
sahf
jg
cmp
jl
scas
into
pushaw
scas
inc
out
dec
sbb
call
ret
cmp
push
adc
mov
mov
sbb
aad
dec
push
cld
sbb
add
xlat
in
jmp
lret
in
xlat
jp
sbb
mov
push
xor
jge
xchg
out
enter
xor
jl
mov
xor
popf
pop
movsl
xchg
roll
enter
inc
push
cmp
pop
arpl
mov
pop
adc
lock
es
and
pop
push
data16
xchg
inc
xchg
adc
out
aas
dec
or
jl
cmp
cmp
adc
int
iret
clc
mov
fdivs
pop
jl
xchg
xor
mov
scas
and
icebp
out
mov
scas
ds
xchg
cwtl
mov
and
push
loop
mov
loop
addr16
in
aas
iret
mov
and
and
jl
mov
jmp
daa
sahf
lret
cmpl
ficoml
push
mov
xchg
sahf
pop
push
addr16
aam
cli
dec
popa
sub
cli
pusha
dec
cmpsl
jge
iret
and
into
frstor
test
repnz
sbb
jp
leave
iret
and
jnp
fs
mov
aas
enter
in
dec
jb
dec
adc
stos
cld
lret
lcall
cli
adc
adc
or
les
jge
or
inc
or
mov
data16
lret
dec
or
cld
xor
push
out
jmp
mov
int3
mov
movsb
mov
stos
cmp
movsl
js
icebp
inc
lods
pop
lcall
call
scas
in
cli
and
ja
fldenv
mov
mov
adc
add
push
xchg
mov
xchg
loopne
gs
mov
or
ret
and
movsb
fldenv
lcall
xchg
inc
iret
arpl
pop
inc
inc
icebp
out
xchg
sbb
cmp
popf
dec
push
or
dec
fs
pop
fimull
inc
pop
inc
jge
fwait
xor
sub
popa
xchg
aaa
movsb
loop
pop
mov
xlat
cld
jp
popf
adc
mov
stos
mov
mov
lods
fs
mov
jae
cld
fcomps
ljmp
jl
or
mov
sbb
inc
sub
dec
mov
inc
in
gs
xor
adc
scas
pushf
push
dec
mov
add
lock
call
rcr
jmp
movsb
hlt
adc
inc
bound
mov
iret
addl
push
and
rclb
movl
or
inc
or
mov
xchg
mov
xchg
ja
je
xor
mov
shll
mov
push
test
sbb
pusha
loopne
mov
subl
push
cmp
call
ljmp
pop
mov
xchg
and
pop
fdiv
inc
in
sub
loop
cmp
push
ficompl
out
push
cltd
pop
add
in
inc
xchg
out
lret
rolb
cmp
mov
stos
popf
xchg
sub
rcrl
and
mov
cmp
pushf
and
or
or
sahf
jns
dec
or
adc
fistl
cmpsl
or
jnp
cmpsb
sub
mov
sub
xchg
sub
pop
mov
repz
lahf
movsl
hlt
out
int
clc
pop
dec
scas
xchg
jae
jl
push
sub
repz
outsl
mov
lahf
sahf
notb
ljmp
test
push
into
xchg
adc
adc
add
push
ret
stos
pop
jnp
push
outsb
lret
cmp
dec
xchg
or
lret
jecxz
ds
leave
push
scas
inc
int
sub
pop
repz
xchg
mov
sahf
loop
aas
pop
and
add
repnz
add
lods
scas
shr
int
in
bound
cmpb
das
fnstsw
sub
mov
adc
push
xchg
lcall
inc
es
mov
dec
call
lret
mov
sub
leave
jb
and
cld
rcll
add
fwait
jne
inc
xlat
and
scas
mov
pop
lcall
mov
lea
loop
lahf
pop
hlt
cli
in
mov
or
mov
bound
faddp
lahf
scas
lods
xor
iret
notb
mov
jns
mov
push
outsl
in
mov
pop
and
dec
jl
je
out
jp
int
xchg
rcrl
inc
cmpsl
jne
and
xlat
dec
pop
dec
jmp
and
push
in
or
test
pop
dec
out
mov
pop
jmp
movsb
sbb
lods
ret
and
xlat
out
lock
dec
mov
inc
cmp
incl
xlat
dec
jecxz
push
out
stos
cltd
cli
push
int
scas
adc
lods
xchg
cmpb
jl
sbb
inc
dec
xchg
js
xchg
sbb
pop
movq
adc
or
ficomps
lea
sub
mov
in
sub
ret
and
pop
out
mov
xor
xchg
pop
sub
mov
push
and
xchg
dec
mov
mov
incb
jno
mov
mov
pushf
rcl
bound
push
std
cmpsl
dec
xchg
sbb
fcoms
mov
cmp
jb
lods
xchg
dec
movsl
cmp
cld
inc
fsubrs
pushf
sti
mov
xchg
dec
xchg
jne
popl
fidivs
jl
push
jae
dec
icebp
sub
mov
ffreep
mov
lcall
cmp
cmpsb
jns
pop
or
ret
adc
xrelease
pop
cltd
xchg
andl
dec
sub
dec
std
pop
push
scas
mov
imul
cmp
pushf
sub
inc
rorb
add
mov
pop
sbb
sbb
mov
cmp
lods
in
adc
push
enter
sub
xchg
inc
xlat
lods
cmp
adc
jl
ja
insb
cmp
call
and
sbb
fsub
gs
sti
xchg
out
sub
fstps
movsl
inc
adc
test
adc
cld
inc
call
gs
xor
push
sti
xchg
mov
and
xrelease
mov
test
mov
repnz
mov
adc
fnstcw
xchg
sub
inc
test
lods
inc
inc
mov
mov
adc
not
xor
nop
add
dec
dec
addr16
out
mov
add
xor
bnd
cli
test
jno
popf
adc
pusha
les
jl
sbb
vmovshdup
sub
std
movsb
inc
stos
fs
loope
fidivl
push
mov
push
jg
sbb
test
ljmp
arpl
add
dec
inc
mov
add
fisttps
add
inc
push
or
push
inc
cld
dec
and
cli
push
and
in
inc
mov
jl
jecxz
bound
pusha
sbb
mov
mov
mov
insb
std
call
xchg
adc
enter
mov
hlt
outsl
cmp
clc
and
jae
and
lret
sti
add
iret
stos
adc
addr16
test
or
movsl
in
int
adc
popa
mov
fmulp
adc
ret
insl
fsubrl
push
js
mov
cmp
adc
jae
jp
jecxz
ret
cmpsl
jae
pop
adc
sbb
ftst
out
int
xchg
sbb
jg
jp
push
mov
pop
push
lret
add
loope
sahf
dec
shl
sbbl
jl
jno
sub
ret
nop
jae
daa
dec
inc
aaa
adc
or
iret
adc
jl
pop
inc
int
stc
mov
xor
sbb
aas
push
mov
adc
in
clc
jae
xchg
movsb
popf
cwtl
mov
repz
insl
or
mov
pop
lahf
roll
lahf
mov
int3
push
mov
aas
sbb
outsl
jg
cmp
mov
hlt
popa
enter
test
cmpsl
inc
cmp
push
mov
mov
or
movsl
dec
push
cvttps2pi
xchg
fldln2
xor
movaps
nop
jp
sbb
aad
enter
lret
xchg
add
sbb
inc
movsl
das
push
or
cld
addps
cmp
ret
scas
inc
in
sub
ljmp
jbe
inc
cmp
xor
ljmp
inc
and
dec
scas
inc
jmp
pushf
xor
stc
shll
mov
ret
int3
pop
cld
aaa
subl
adc
clc
inc
jae
jecxz
enter
inc
in
shlb
mov
fadds
mov
into
pslld
dec
cld
jl
call
dec
call
fistps
xor
xchg
into
int3
shll
dec
stos
push
inc
xor
sar
inc
ljmp
jb
dec
int
iret
cmp
movsl
inc
mov
cld
ds
outsw
adcl
nop
shl
cld
aaa
enter
dec
sbb
sub
pop
lods
out
and
adc
fmulp
sbbb
mov
inc
mov
jno
mov
nop
jo
popa
mov
ret
xor
icebp
jl
mov
imul
call
sbb
es
add
test
sub
inc
int
jno
add
inc
pop
shrl
mov
push
and
cmpsb
xchg
xor
mov
out
jp
push
cld
stos
aaa
push
dec
clc
and
push
xchg
es
pop
mov
sbb
xchg
inc
loope
dec
fldln2
push
cld
fdivl
push
lret
push
cmpsl
sub
ret
test
pop
and
cs
rcr
mov
push
fwait
cld
jmp
aad
push
pop
movsl
ror
les
cmc
stc
fdiv
mov
test
int
cmpsl
ret
push
rcll
aas
dec
in
stos
out
pop
jp
fwait
jo
inc
shlb
addb
fdivr
adc
hlt
inc
jne
inc
out
insl
aaa
icebp
lret
pushl
pop
repz
cld
scas
sub
push
fidivl
dec
inc
into
cmp
adc
dec
mov
inc
popf
in
adc
aaa
addr16
ret
mov
fs
adcb
dec
adc
mov
dec
adc
aas
sbb
xchg
pop
pushf
or
adc
test
cmp
mov
push
dec
enter
scas
or
xor
filds
push
add
aaa
jle
jmp
cmp
dec
cmc
aas
inc
mov
in
adc
enter
pop
inc
adc
jle
pushf
mov
in
les
pop
mov
sub
sub
fdivrp
lea
xchg
push
push
xchg
mov
imul
push
lahf
call
cmp
fisubs
jb
jp
push
add
aas
fs
or
sbb
pop
mov
imul
repz
cmp
sahf
xor
mov
mov
or
push
adc
test
loop
lods
out
push
xor
add
lods
dec
push
xorb
and
loope
addr16
in
push
repz
iret
inc
repnz
adc
jno
lcall
lahf
sbb
and
xchg
dec
es
lcall
inc
repz
add
jp
in
popw
mov
in
mov
or
in
movsb
and
lock
xchg
dec
or
call
jae
adc
push
cld
jmp
dec
fsubs
xor
or
insl
add
cld
mov
outsl
mov
xor
xor
cmc
mov
es
push
jmp
adc
lods
fldl
adc
mov
sub
shrl
in
pop
adc
call
xrelease
push
sub
mov
dec
in
roll
setbe
cld
divb
fists
movsb
sbb
js
loope
sbb
aaa
lcall
adc
out
xchg
mov
sub
mov
test
fcoms
dec
aas
lcall
jg
pusha
outsb
pop
xchg
popf
cmpsl
add
jl
lcall
call
icebp
mov
call
mov
mov
jge
xor
loopne
pop
sbb
lahf
jecxz
mov
push
cltd
rorb
mov
mov
loopne
sub
sahf
repz
test
test
push
shl
dec
dec
mov
dec
mov
aam
leave
or
sahf
ja
inc
notl
ret
gs
dec
and
mov
pop
rcl
jbe
add
pop
push
inc
xor
les
lods
add
data16
addr16
cmp
mov
dec
pusha
lcall
pop
pusha
xor
or
sbb
sbb
inc
daa
fimuls
add
inc
xchg
mov
xchg
cmpsb
rclb
mov
push
or
pop
dec
ss
mov
inc
pop
pop
mov
aam
xorb
movsl
leave
fs
mov
push
pop
ljmp
sub
test
cmp
jb
out
jae
movsl
cmpb
inc
cmpsl
jo
in
xchg
sbb
mov
test
repz
clc
xchg
pop
sub
addl
test
std
pop
out
dec
andl
filds
adc
enter
rolb
or
mov
pop
mov
adc
scas
jbe
pop
lcall
out
adc
fstpl
std
ss
mov
cmp
mov
stos
xor
aaa
mov
push
cmpsb
jbe
jp
jecxz
add
and
lea
cmp
shrl
ret
mov
inc
mov
cmp
cli
sub
pop
rcl
outsb
cltd
in
icebp
push
add
and
pop
fimull
scas
mov
les
mov
adc
jp
decb
orb
cs
pop
pusha
test
js
mov
pop
inc
sbb
jmp
mov
mov
or
insl
xchg
fstps
or
leave
mov
leave
lock
mov
dec
cmpb
adc
and
out
push
mov
push
mov
repz
insl
xchg
jp
mov
inc
dec
cmpsl
aas
lds
push
jp
int3
je
jnp
dec
and
pushl
adc
cmp
push
xor
sbb
imul
mov
mov
int3
js
aad
icebp
nop
mov
aas
iret
icebp
xchg
dec
adc
das
and
jmp
bound
adc
nop
push
mov
ljmp
pop
cli
repnz
jg
pushf
and
shl
mov
fstps
or
out
xchg
xchg
mov
mov
inc
sbb
push
or
fldenv
out
outsb
cmpsl
aad
fwait
je
mov
inc
adcl
xchg
dec
jp
dec
push
jge
test
or
sbb
dec
repz
mov
fwait
push
mov
and
xor
cld
pop
mov
sbb
jp
mov
jge
pop
push
push
movl
or
mov
ret
xor
ror
cmc
shrl
dec
iret
jle
push
adc
adcb
mov
repz
and
insl
or
cmc
add
dec
nop
mov
fdivs
and
dec
cld
xchg
push
shll
rolb
lret
adc
inc
arpl
jbe
cwtl
cmp
out
pop
sti
fnsave
daa
in
pop
data16
xchg
orb
inc
add
mov
shl
adc
mov
stos
or
pop
loop
push
adc
and
sbb
aam
leave
inc
aas
cmp
mov
mov
push
or
xchg
sbbb
cld
inc
xor
fdivs
das
lock
dec
iret
fimuls
loop
cmp
mov
movsl
aas
out
pop
mov
popf
call
ret
mov
sbb
sbb
dec
inc
push
pop
pop
cld
sbb
sbbb
mul
pop
jno
icebp
insb
aaa
stc
mov
fstpl
add
mov
inc
pop
jg
popf
and
mov
hlt
jl
cmp
dec
lret
sub
push
mov
iret
and
dec
in
loop
pop
paddb
push
imul
sub
push
cmp
inc
test
es
les
xchg
cmp
add
mov
repnz
out
inc
cld
mov
jno
insl
cmc
push
fs
sbb
dec
jo
xor
push
lods
aam
loopne
inc
push
push
repz
das
andb
pop
inc
lahf
and
jmp
jl
or
push
sub
mov
xor
mov
popa
dec
inc
loop
stc
cmp
call
clc
fstpt
mov
mov
leave
loopne
dec
jne
inc
inc
jl
sbbl
push
mov
repz
xor
xchg
repz
std
mov
pusha
push
push
pop
ljmp
cmp
ret
pop
rcll
jle
adc
mov
insl
in
sub
fbstp
call
imul
dec
mov
dec
add
xor
test
dec
jbe
pop
negb
sbb
push
pop
jbe
xor
mov
mov
jmp
ss
pop
adc
mov
addr16
sti
jl
lret
in
fidivl
pop
scas
or
pop
inc
test
sub
xchg
pop
add
inc
arpl
fildl
scas
xor
xchg
pop
sarb
in
jbe
dec
cmp
pop
inc
mov
ret
imul
repz
sbb
fdivl
cmpsl
cmp
push
int
jle
inc
cmp
loope
or
mov
jbe
cmpsl
in
sub
popa
and
xchg
adc
mov
pop
mov
cli
pop
dec
fbstp
adc
mov
in
stos
sbb
sti
imul
lods
icebp
jb
out
hlt
xor
mov
mov
fdivp
mov
enter
add
into
repnz
push
fnstcw
xor
pop
cmc
mov
pxor
sbb
cltd
xchg
scas
xor
fs
mov
mov
cmp
push
cmc
bnd
push
adcb
ret
ljmp
cld
sub
jg
fnstsw
add
fcoml
andl
ljmp
ja
and
enter
out
jp
aad
ret
jmp
pop
repz
iret
ret
sbb
rcrl
and
shl
push
loop
sbb
fwait
xor
push
xchg
mov
out
add
mov
dec
sub
cmp
lods
lds
aad
in
xor
fcomi
push
add
out
int3
dec
adc
or
xchg
sbb
cli
xchg
pop
std
lret
lret
inc
shl
clc
out
lods
xchg
xchg
jne
out
jmp
mov
insl
push
mov
xor
shrl
sbb
movsb
mov
xchg
cli
add
dec
leave
sub
pusha
daa
xchg
push
rolb
adc
orb
xchg
cld
xchg
dec
adc
jle
sbb
sub
sub
aas
in
in
sub
mov
dec
js
movsb
xchg
push
push
or
mov
shll
xor
rcll
and
push
repnz
xchg
popa
mov
nop
lcall
js
push
sub
lahf
cmp
dec
iret
sub
lds
lcall
lock
push
lcall
mov
add
js
push
adc
jecxz
add
mov
lock
inc
cmpsb
mov
sar
mov
hlt
icebp
scas
xchg
push
int
in
add
pop
pop
xchg
scas
mov
mov
xchg
jl
adc
xor
xor
faddl
push
mov
push
dec
push
dec
in
adc
or
hlt
pop
out
pop
mov
incl
mov
jmp
pop
ss
mov
sbb
lea
aam
repz
scas
or
cmp
sbb
sub
push
outsl
scas
mulb
adc
dec
pop
aad
pop
mov
push
movsl
and
fwait
sar
rcl
sub
fidivrs
xchg
push
add
data16
rorb
mov
adc
repz
inc
aaa
xchg
shlb
add
push
mov
cwtl
push
cmp
test
mov
jne
inc
xchg
jo
or
icebp
daa
popa
pop
out
iret
mov
loope
or
inc
jno
adc
cld
loopne
dec
jl
adc
es
rcrl
fcoml
jb
ljmp
mov
inc
stos
push
push
xor
or
or
and
and
jl
xchg
pop
xor
dec
inc
les
mov
faddl
sbb
adc
rep
cmp
push
sbb
lret
cwtl
int
mov
mov
in
inc
dec
das
cwtl
not
fldenv
cmpsb
inc
mov
sahf
data16
aas
cld
scas
adc
or
in
leave
in
adc
mov
adcb
xlat
sub
mov
lret
jl
je
adc
jl
pushf
xchg
outsl
lahf
xor
adc
mov
and
dec
mov
movsl
daa
cli
dec
fs
lods
ss
xchg
mov
stc
ficoml
daa
and
inc
add
xchg
adc
xorb
lods
sbb
scas
incb
add
or
jge
nop
ds
cmp
lds
fildll
mov
xor
mov
fstl
aad
in
shrd
arpl
adc
popf
call
stos
add
mov
xchg
into
xor
jbe
xor
int3
sti
push
lock
xchg
inc
aaa
ret
nop
pop
adc
inc
inc
pop
adc
jb
add
and
and
loopne
xor
sbb
dec
sbb
or
jmp
add
adc
out
aam
jbe
dec
sbb
je
or
jnp
stc
push
xchg
pushf
ja
cli
mov
dec
inc
js
leave
sub
pop
pushl
push
cld
pop
push
or
adc
pop
sbb
fwait
pushf
add
out
aas
sbb
fsubrs
cld
dec
or
dec
add
out
sbb
call
mov
test
lods
push
popf
push
in
sbb
fisubrl
in
add
repnz
aam
mov
push
xor
loopne
xor
out
xchg
xor
push
mov
bound
sti
jb
push
and
mov
sub
cmpsl
daa
test
cwtl
outsl
les
mov
sub
in
add
pop
sbb
ds
adc
lret
xchg
aas
imul
ljmp
pushf
xor
arpl
push
ljmp
dec
jle
or
and
pop
fcmovnu
mov
push
movsl
jmp
jno
sbb
mov
lret
dec
cld
ljmp
xchg
js
fwait
mov
scas
inc
into
mov
mov
mov
nop
ds
add
mov
movsl
stos
sub
mov
cld
repz
cmp
jle
jns
bound
push
dec
rorl
push
out
hlt
aaa
sbb
sbb
add
adc
xor
jl
mov
mov
or
scas
loop
xchg
jae
mov
jbe
push
inc
loop
fdivs
filds
aaa
dec
sarb
mov
aaa
lods
pusha
imul
js
out
lcall
fistpll
je
sbb
pop
into
dec
mov
inc
push
inc
fcoms
ljmp
icebp
mov
ljmp
or
sub
lods
push
add
je
or
cmp
or
xchg
or
pop
repnz
cld
push
out
sbb
out
pop
in
jo
sub
push
push
push
push
lods
inc
movsb
jp
call
xchg
dec
repz
dec
ss
repnz
push
jl
add
adc
mov
dec
std
sbb
lods
cmp
or
sbb
push
hlt
fidivrs
stos
imul
and
cmp
xlat
movsb
jno
fcoml
clc
stc
sbb
fucomp
inc
dec
lcall
push
cmpl
xor
mov
push
cmp
fnsave
pop
adcl
cmpsl
xor
mov
inc
or
in
in
clc
xor
jns
and
mov
add
dec
fsts
enter
mov
hlt
inc
xchg
cmpsb
or
push
not
mov
xchg
jmp
xor
adc
insl
dec
cmp
jbe
dec
outsb
nop
pop
adc
cld
clc
rcrl
sub
aas
jl
adc
dec
mov
pushf
or
lods
loop
cmp
lock
cmc
mov
sbb
add
loopne
cwtl
sbb
pop
pushf
xchg
daa
or
stos
xor
lret
push
cmp
cmp
pop
xor
in
dec
mov
notb
sbb
adc
push
test
inc
xchg
mov
mov
int3
test
inc
scas
adc
lods
loopne
push
lcall
sub
mov
jl
je
frstor
sub
fcompl
fists
mov
mov
pusha
pusha
rorl
and
inc
mov
mov
mov
sbb
adc
inc
out
dec
movsl
jmp
cmp
dec
xchg
sub
adc
dec
int
mov
pop
mov
faddl
lahf
sbb
cltd
push
pop
scas
xchg
mov
and
repz
pop
test
xor
dec
pushf
inc
dec
dec
pop
pop
adc
arpl
data16
mov
popa
cld
pop
movsb
cmp
pop
jp
clc
pop
inc
repnz
jp
mov
cld
dec
repz
xchg
sbb
aas
xor
shlb
pop
or
pop
pushf
divl
jne
mov
or
test
push
pop
repnz
int3
mov
scas
dec
icebp
pop
mov
fsubl
sbb
in
mov
inc
sub
andl
or
sbb
cmpl
int3
jl
decl
and
ds
xchg
out
pop
pop
scas
or
sbb
mov
cmp
add
adc
push
lcall
cli
aas
mov
push
pop
fdivr
pop
aaa
mov
adc
adc
movsb
mov
adc
cld
lds
inc
push
sarl
mov
cwtl
outsl
dec
icebp
out
or
pusha
mov
scas
mov
dec
jle
out
pop
sbb
out
mov
sarl
arpl
test
dec
dec
push
mov
jno
out
lahf
lock
or
lea
cltd
push
lea
jge
jae
out
lods
or
jno
push
inc
mov
cld
aad
push
pop
adc
lds
inc
jb
loope
ljmp
mov
sbb
aas
xchg
dec
xchg
ljmp
icebp
bound
inc
nop
fs
mov
jl
rol
mov
sti
jbe
cmp
fistl
fs
ja
loopne
js
mov
clc
mov
sarb
sub
loop
pop
into
cmp
popf
sub
aas
pushf
int
lret
nop
sahf
jne
mov
pop
and
fdivrl
cmp
fxch
ret
mov
fs
or
jmp
cwtl
cld
push
mov
xor
stc
cmp
sub
mov
addb
in
cmp
xchg
xor
scas
or
adc
lret
movsl
test
icebp
pop
adc
push
mov
mov
add
adc
arpl
cld
pop
into
mov
je
cmp
sbb
xchg
lret
cmp
ss
jo
insl
mov
notb
lea
pop
jl
fwait
or
pop
or
shlb
sbb
mov
adc
pop
ret
lahf
cld
sti
push
push
sub
lock
in
cmc
jl
repnz
mov
movsb
scas
xor
xchg
scas
add
clc
pop
fwait
inc
mov
stc
pop
cmpsb
dec
lahf
jmp
adc
and
adc
sub
mov
jge
decl
ret
sbb
adc
xchg
xor
dec
cmpsl
push
insl
movsb
xor
adc
mov
stc
aaa
jae
je
push
xlat
cmp
loop
das
dec
xchg
repz
inc
cltd
fwait
xchg
inc
dec
push
dec
lahf
dec
lods
mov
inc
mov
lods
cmpsl
mov
int
scas
rcl
xchg
lea
inc
les
movsl
push
mov
inc
rolb
loop
lea
mov
mov
fs
rorb
xor
push
add
fidivs
lods
dec
mov
pop
push
mov
xchg
cmp
cwtl
ja,pn
sbb
mov
mov
mov
adc
jl
xchg
pushf
ljmp
iret
jnp
test
dec
xor
insl
inc
mov
sub
mov
pavgb
inc
xor
and
repz
dec
adc
push
bound
xor
ds
adc
mov
adc
inc
sbb
imul
arpl
mov
das
lcall
nop
push
scas
lea
outsb
popf
push
cmpsl
dec
push
mov
cwtl
sbb
imul
adc
jne
xchg
into
xorl
outsl
fwait
push
push
adc
repz
inc
rclb
xor
lcall
pushf
aam
sub
sbb
inc
cmp
mov
in
xchg
push
lret
int3
in
lcall
imul
jp
iret
inc
in
cld
xchg
into
jb
push
inc
push
xor
gs
fnsave
idivl
div
rol
cmpsl
cmp
imul
xchg
push
cld
stos
mov
sbb
or
mov
mov
scas
bound
or
mov
subl
fidivl
push
iret
pop
mov
lret
dec
and
loopne
icebp
data16
enter
sub
pop
dec
mov
jbe
or
sbb
adc
mov
pop
xchg
sbb
cmc
shlb
in
insl
std
in
xchg
mov
push
mov
xchg
lea
and
andb
movsl
inc
mov
dec
inc
loop
fwait
inc
pop
jbe
push
pop
repz
dec
lret
mov
movsb
aaa
or
or
scas
in
xor
pop
aad
xlat
pop
test
inc
jnp
pop
lds
jecxz
adc
sub
mov
out
dec
ret
jbe
mov
cld
xchg
push
dec
les
jl
push
jmp
rclb
fdiv
mov
dec
out
fcomp
xchg
jle
gs
daa
int3
ja
adc
xor
pop
adc
out
add
std
test
aas
cld
cli
addr16
xchg
inc
sub
cmp
repz
icebp
aaa
fcoms
js
or
pop
xchg
cwtl
repnz
cwtl
mov
push
je
popf
mov
das
aam
adc
xchg
cmp
clc
mov
loopne
adc
mov
imul
adc
xchg
nop
or
cmpsl
ret
into
xor
xor
cmp
xorl
jae
fwait
pop
pop
and
out
test
bnd
cmp
xor
dec
jecxz
or
inc
add
or
sub
mov
dec
jle
add
jg
inc
icebp
cmp
xchg
mov
scas
pusha
inc
sbb
xor
scas
int3
and
or
pop
push
xor
fstpt
in
cmp
add
dec
aas
iret
add
sub
jp
or
in
loop
pop
rcr
inc
jmp
push
adc
jg
dec
fidivs
pop
cmp
sbb
sbb
push
and
aaa
and
inc
mov
lods
push
ss
dec
inc
cmpsb
sarl
in
repz
push
popa
mov
ljmp
outsb
mov
ss
mov
sub
stos
into
pusha
das
dec
shl
mov
inc
pop
jg
xor
aas
pop
je
xchg
stos
aas
sbb
push
inc
jl
movsb
call
mov
icebp
xor
shll
rep
inc
sarb
add
aam
push
pop
dec
dec
cld
or
cmpsb
push
pop
cli
pop
loopew
jge
mov
jecxz
mov
mov
sub
adc
int3
loop
pop
pop
aas
movsb
lds
ret
mov
push
push
xchg
test
dec
inc
add
jno
scas
dec
roll
sub
outsl
arpl
sub
xchg
mov
pop
mov
movsb
jo
sbbb
mov
push
insl
scas
cli
cld
xchg
push
ds
xchg
scas
lcall
aam
push
ret
xchg
sbb
repz
dec
pop
imul
pop
mov
sahf
mov
sbb
jmp
cmp
cmp
scas
subl
jb
mull
jge
dec
jmp
ja
push
cld
out
iret
mov
mov
rcrb
out
or
dec
lcall
dec
jp
je
out
sbbb
pop
jg
dec
cwtl
inc
movsl
cmpsl
ss
and
adc
gs
push
xchg
add
sbb
adc
cmpsl
lds
inc
inc
shl
mov
dec
int
ljmp
aam
lcall
jnp
cmp
jno
cmc
icebp
cld
cmpsb
lcall
outsl
dec
movsb
cmp
mov
inc
pushf
lahf
popf
or
jmp
cld
lds
stc
xor
inc
and
ljmp
sub
add
and
popf
cld
mov
ficompl
sbb
in
jl
fs
popa
icebp
jmp
mov
mov
pop
jbe
cmc
insl
shrl
jne
cmpsb
mov
mov
stos
rcrl
xor
inc
insb
fwait
mov
push
or
rcr
fistpl
push
add
lds
sbb
test
adc
outsb
or
sub
mov
cli
inc
lods
cmp
lcall
sbb
lock
dec
imul
int
rcrl
cmpsl
cld
and
cld
push
repz
or
pop
cmp
lods
inc
out
push
int
sub
inc
cmpsb
mov
mov
adc
and
test
je
fs
and
cmp
mov
push
les
adc
cld
sub
stos
stos
sub
int3
xchg
push
inc
cmpsl
lcall
repz
adc
pop
inc
jl
xor
xor
xchg
pusha
mov
in
out
or
push
push
adc
xor
pop
xchg
add
mov
test
mov
pop
sub
inc
sti
hlt
popf
pop
scas
ljmp
or
inc
xor
lcall
scas
push
dec
clc
cmp
and
mov
cld
cmp
nop
mov
cmpsl
and
icebp
repz
fistpl
xchg
test
mov
les
dec
test
add
test
pusha
adc
test
pop
mov
jns
jle
mov
stc
inc
sbb
add
inc
loopne
test
sbb
fs
inc
stos
or
sbb
out
lock
mov
sti
sub
lods
daa
sub
mov
sub
pop
sahf
das
ljmp
ja
xor
xor
out
fstpt
out
push
xor
mov
dec
mov
push
push
jecxz
leave
mov
test
xchg
dec
leave
add
iret
inc
pop
flds
mov
inc
rcr
cmp
in
lds
dec
mov
mov
lea
mov
les
insb
add
loopne
repz
loop
xchg
xor
mov
js
or
std
cld
cmpl
aad
xor
movsl
addl
dec
sbb
mov
sbb
dec
dec
inc
lret
arpl
push
in
clc
sbb
adc
xor
icebp
xchg
lock
add
jp
add
repz
sub
insl
sbb
cmp
nop
mov
push
test
jp
adc
adcl
inc
lds
push
push
mov
jp
pop
iret
fs
cmpsb
mov
cwtl
ljmp
pusha
and
xchg
rep
mov
dec
or
cmp
stos
sub
shll
lods
push
daa
movsb
push
lahf
mov
jl
pop
test
adc
inc
or
or
pop
lds
in
sbb
mov
mov
mov
push
loope
sub
bound
add
test
loope
aad
pop
ss
scas
aaa
cld
iret
mov
mov
rorb
xchg
xchg
mov
insb
push
loope
jecxz
dec
adc
pop
repz
mov
pop
adc
mov
into
data16
sbb
lds
adc
push
mov
mov
mov
call
mov
xchg
lea
inc
add
inc
dec
bound
mov
jmp
sbb
adc
out
xlat
xor
nop
sbb
dec
outsl
mov
cmp
arpl
or
add
add
movsl
add
cmp
sub
pop
sub
jmp
fimull
mov
jne
jmp
cmp
iret
mov
cmpb
daa
cli
or
or
pop
pop
pop
scas
shl
fiaddl
popa
or
mov
in
mov
mov
or
adc
inc
sahf
or
orl
ss
xor
add
xchg
inc
pop
fs
push
dec
cmp
test
jno
pop
mov
or
cmpsl
out
cltd
pop
push
adc
out
xrelease
mov
pop
or
jmp
das
gs
xor
inc
pop
mov
sbb
cmpsb
mov
sub
jne
jne
adc
push
sbb
adc
fdiv
insb
sub
movb
shl
sub
mov
fs
ret
or
xchg
mov
mov
adc
cmp
and
loopne
adc
je
xor
fiadds
fnsave
fsubrp
fistpl
nop
iret
repnz
pop
jl
add
loopne
mov
loopne
mov
cmp
insl
test
adc
push
int
aas
sahf
cltd
add
cmp
adc
add
fs
jl
push
fcomps
cwtl
out
mov
pushf
mov
stos
mov
loopne
jge
loopne
adc
xor
dec
loop
repz
es
dec
dec
insb
in
xchg
std
add
push
bound
mov
lods
leave
rol
sub
test
test
fwait
and
loopne
or
dec
movsl
gs
mov
enter
movsl
cmp
lcall
jbe
xor
clc
jg
ja
or
cld
sub
scas
inc
xchg
and
sbb
les
out
lret
pusha
push
lock
pushf
mov
rcrb
adc
xor
fs
ja
sub
aam
ss
mov
out
push
mov
sbb
clc
pop
lret
ja
mov
out
aam
cmpsl
call
lods
inc
loopne
sti
pop
adc
xchg
das
lcall
outsb
pop
pop
mov
mov
jo
jno
fwait
jnp
pop
mov
into
pop
jl
fisttpll
test
cmp
pop
repz
insl
pop
lcall
lcall
sub
jl
sbbb
mov
and
pop
sti
rclb
xor
dec
ds
cmp
cld
fdivl
mov
call
mov
and
adc
fnsave
int
dec
cmp
popa
outsb
mov
xor
int3
mov
shl
dec
jp
adc
iret
or
cmp
cltd
xchg
fcom
pop
add
adc
outsl
inc
call
loopne
jge
dec
cld
sahf
cmp
sbb
adc
cld
popf
cmp
loop
cli
mov
push
dec
in
mov
sbb
outsb
jne
push
jle
xchg
sbb
push
sahf
pop
cli
cmp
sbb
push
adc
pushf
std
scas
pop
add
lret
inc
and
scas
int3
in
daa
push
movsl
push
test
add
and
xor
mov
fildl
fidivs
lahf
push
add
mov
jno
andl
pop
loop
and
in
xchg
in
jp
or
loop
in
roll
sbb
and
aam
mov
ss
shrl
in
int3
bound
repz
adc
movsb
mov
ja
jnp
cmp
movsb
daa
fidivl
xchg
icebp
outsb
sbb
fidivs
cltd
push
out
sbb
lret
outsb
add
orl
dec
imul
mov
push
call
mov
int3
jge
filds
movsl
dec
loope
pop
adc
sbb
ljmp
xor
repz
popl
out
mov
cli
aad
pop
push
popf
repnz
loope
mov
idivl
clc
push
cmc
and
push
mov
or
insb
inc
sub
dec
add
lea
xor
xchg
push
pop
loop
mov
cld
sub
dec
out
inc
popa
xchg
jnp
ret
jmp
fsubl
lahf
data16
jl
loop
icebp
enter
div
mov
inc
es
xchg
loop
orl
mov
cmp
or
mov
push
ret
sti
mov
test
dec
and
cmp
lret
push
adc
stos
xchg
inc
inc
inc
adcb
cli
xor
stos
inc
cld
ss
add
movsl
xor
mov
jb
push
inc
cli
mov
adc
and
nop
sbb
fcoml
inc
adc
sub
fs
lods
movsb
pop
push
test
sbb
cmp
cld
daa
test
xchg
insl
dec
xor
add
jne
outsl
add
mov
or
mov
sti
mov
push
ret
dec
addb
adc
adc
cmpsl
shll
movd
outsl
mov
mov
sub
int
xchg
dec
pop
mov
jl
ss
sub
pcmpeqb
movsl
cmpsl
clc
test
fsubrs
adc
jbe
mov
pop
adc
sub
fisttps
xchg
sub
push
inc
inc
lock
leave
sbb
xor
mov
adc
loope
dec
movsl
sub
les
sbb
inc
lods
fisttps
lahf
lods
outsl
ljmp
fisubl
and
jmp
imul
call
movsb
adc
mov
adc
adc
push
mov
gs
js
daa
aam
mov
int3
dec
adc
jae
incb
inc
mov
outsl
test
scas
fidivl
xchg
mov
inc
xor
jno
lret
sbb
inc
mov
push
inc
lds
popf
pop
or
es
and
fcompl
mov
lea
lret
inc
outsb
int3
cmp
dec
out
mov
sbb
sbb
sub
aaa
lds
cmp
cmc
mov
mov
xor
adc
jbe
mov
xor
scas
pushf
enter
or
loopne
pop
pop
cld
clc
test
and
inc
mov
repnz
sub
fwait
inc
repnz
cld
cmpsb
shl
aas
push
adc
dec
cmp
xchg
pop
xchg
mov
xor
addl
hlt
inc
inc
mov
jl
sbb
fdivrl
and
scas
mov
sbb
popa
js
int3
and
mov
xlat
push
push
xor
mov
shlb
xchg
repz
cmp
adc
push
xchg
inc
jge
sub
xor
fmuls
fwait
mov
cmp
mov
xchg
cld
movsb
flds
sub
mov
pop
inc
jle
inc
sahf
lock
dec
loope
inc
cmpsb
dec
adc
sub
fwait
xchg
scas
jo
int
add
mov
pusha
or
jl
aam
bound
push
push
xchg
shlb
cld
adc
repnz
jl
sub
adc
and
jne
adc
add
dec
xchg
cmpsb
adc
insl
add
lds
and
repz
inc
mov
push
cld
leave
mov
cmp
or
cli
pusha
popf
cld
inc
push
push
outsb
scas
or
pop
or
xchg
cmpsb
clc
pop
insb
pop
int
pop
and
cli
mov
sub
push
xor
dec
outsl
sarl
aaa
fmuls
loopne
mov
pop
lods
popf
sbb
loopne
and
inc
lret
loop
lea
rol
mov
stos
push
and
lcall
pop
mov
dec
jmp
cmc
int
aam
jb
xchg
inc
add
sahf
fsubrs
pusha
dec
aaa
sahf
lcall
inc
popf
jecxz
xchg
xchg
fstpl
pop
pop
cld
push
fdivrp
pop
mov
sbb
inc
and
jp
repz
cld
adc
xor
add
negl
mov
aaa
xor
jne
int
loopne
adc
add
lcall
dec
lds
add
or
inc
shl
out
jnp
notl
mov
xor
xorb
imul
add
sbb
in
mov
jne
cmp
push
pop
ss
repnz
push
repz
fisubs
pop
fistl
inc
pop
xchg
cmpsl
cmp
pop
dec
xor
cld
icebp
xchg
test
mov
stc
pop
cmc
lds
jle
mov
ret
fadds
stc
and
sub
xchg
dec
shll
loopne
mov
in
hlt
xchg
repz
inc
mov
rcrb
adc
push
outsl
jmp
xchg
jmp
jg
cmp
lods
sti
hlt
fisubl
inc
inc
dec
ret
mov
icebp
xchg
loopne
mov
inc
enter
lret
mov
sbb
cmp
dec
sti
sbb
lcall
mov
pop
xchg
sub
int3
pop
movsb
dec
test
mov
out
fnsave
dec
sbb
jl
fnstenv
inc
mov
out
loopne
js
sti
push
push
pop
aas
mov
lret
push
test
and
cld
push
cld
cmp
gs
loope
lahf
repz
repnz
cltd
jmp
cld
dec
mov
stc
dec
xor
insb
test
xor
repz
add
int
cmpsb
scas
inc
repz
and
addps
mov
jl
jl
or
stc
mov
add
xchg
cwtl
cli
pop
ret
mov
lods
jl
cld
dec
mov
dec
jae
shrb
icebp
enter
jne
mov
je
inc
dec
inc
pop
sbb
cwtl
adc
lods
movsb
inc
adc
in
and
mov
dec
negb
stos
loope
lock
scas
lahf
or
cmpsb
stos
mov
cmpsb
aam
mov
xchg
jnp
aam
cwtl
divb
gs
cmp
out
in
xchg
into
jle
call
adc
and
scas
bound
mov
fstps
push
movb
mov
aam
adc
xor
sub
push
bound
mov
fimull
cmp
cmp
mov
xor
add
outsb
ss
adc
inc
adc
xchg
pop
sub
idivb
sub
adc
and
addr16
in
mov
scas
cmp
mov
lods
or
cmp
in
push
push
pop
cmpsb
or
dec
and
dec
push
lods
inc
mov
inc
adc
fistps
jl
mov
pop
sbb
imul
pop
push
mov
popa
jl
jmp
test
scas
mov
inc
mov
xor
ficoml
push
jg
jmp
lds
loope
pop
push
lods
in
cmp
in
fwait
je
jge
pop
xchg
jmp
jl
pusha
and
xor
shll
mov
or
inc
repnz
mov
sub
movsl
lret
adc
pop
js
fisubrl
or
jae
jne
jns
dec
in
inc
mov
mov
sub
add
push
aas
or
in
pop
loop
sbb
mov
sub
inc
orb
int
cmp
pop
dec
push
inc
mov
cmc
sub
jl
or
inc
inc
cmpsl
imulb
push
push
ja
mov
inc
lea
daa
xor
jp
in
push
sbb
xchg
push
repz
dec
call
movsl
rolb
cld
imul
pop
aam
mov
aaa
inc
gs
xor
xchg
add
xor
adc
sub
orl
insb
lods
inc
aas
pop
fdiv
andl
aam
repz
lcall
inc
mov
jge
cmpsb
repz
cmpsl
loope
and
cmp
stos
and
movsl
rorb
cld
addl
enter
dec
orl
and
xchg
and
cmp
xor
jnp
xchg
sahf
test
or
mov
imul
ss
enter
mov
jl
xchg
jl
test
or
aas
dec
and
rcr
cltd
or
jle
pop
pop
xor
lods
loopne
push
xor
pop
pop
sbb
cld
xchg
push
or
loope
add
aaa
jbe
dec
dec
aaa
xor
lcall
jl
out
push
dec
add
lahf
jo
mov
fs
jl
fwait
cmp
inc
notl
lea
ljmp
aam
sbb
lock
out
add
inc
add
add
or
mov
fwait
jl
pop
xchg
mov
pop
dec
test
push
push
pop
outsb
xchg
mov
adc
mov
cmp
inc
rolb
out
mov
adc
lret
sub
repz
jae
inc
mov
sbb
adc
add
loop
push
dec
movsl
or
cmpsl
sbb
popa
arpl
dec
mov
adc
ja
or
cmp
lcall
dec
in
imul
adc
repnz
sbb
sahf
and
cmpsl
mov
int
fwait
rcrb
cmp
push
pushf
adc
mov
inc
jnp
or
pop
sbb
jnp
das
stos
cmp
jecxz
and
xchg
addr16
mov
mov
inc
addb
xor
inc
ret
cld
add
test
cmc
push
icebp
arpl
jne
dec
shl
sub
or
ljmp
dec
sub
inc
iret
pop
arpl
jl
pop
scas
leave
mov
rorb
fwait
jl
roll
and
mov
or
stos
insl
dec
push
call
xchg
xchg
dec
roll
call
ror
mov
jle
ret
fidivrs
dec
icebp
pushf
inc
cmpsb
adc
cld
std
fidivrl
mov
ret
lea
sbb
shrb
bound
xchg
inc
loope
je
dec
out
xchg
popa
repz
sub
mov
sbb
sub
cmpsb
pop
inc
and
or
repz
test
mov
xor
adc
stc
xchg
pop
pop
adc
loop
inc
cmp
adc
dec
sbbb
outsb
sbb
fucom
mov
sub
pop
xor
shll
mov
ja
dec
ret
call
cwtl
enter
adc
xor
sub
jnp
mov
add
hlt
out
jae
sbb
push
ss
jge
sarb
push
mov
xchg
mov
dec
push
dec
in
jnp
sbb
pop
insl
inc
mov
adc
sbb
inc
js
mov
jmp
push
int3
sbb
fs
or
notb
movsl
movsb
mov
push
aas
xchg
adc
es
mov
pop
ds
ljmp
cs
or
fstps
push
je
sbb
filds
fcomi
test
pop
add
xchg
lret
popf
int
adc
nop
add
test
sbb
sub
test
pop
pop
enter
mov
inc
lahf
ret
in
leave
movsl
add
cmp
cmp
int3
jae
movsb
clc
jl
cli
lahf
pop
cmpsb
jge
cld
xor
jl
in
movsl
aas
fdivr
lahf
and
jmp
gs
imul
push
sti
repnz
dec
dec
and
jbe
mov
frstor
cli
gs
push
rcl
fisttpll
pop
movsl
imul
insb
sti
mov
xor
push
lret
pop
xchg
dec
aam
movsl
shl
stos
leave
adc
mov
jns
sbb
loop
inc
push
mov
aas
inc
pusha
sub
jo
fcompl
adc
bound
mov
push
mov
popl
movsl
and
pop
xor
xor
mov
scas
nop
xchg
sbb
out
mov
filds
jbe
jl
push
sbb
sbb
sbb
adc
lods
lcall
shl
sbb
add
test
xchg
or
sub
ret
jg
ljmp
mov
mov
mov
jg
xchg
inc
fwait
push
in
push
cmp
sub
fcoms
movsl
xchg
pop
ficompl
gs
fs
dec
mov
aaa
xchg
stos
and
add
movsl
test
sub
lock
mov
outsl
les
std
dec
test
repnz
add
mov
imul
xor
das
mov
movsl
and
jl
rcl
frstor
xchg
mov
sub
repz
and
popf
sub
and
dec
stos
and
mov
push
scas
iret
pusha
jl
xchg
push
les
adc
in
sub
xchg
pop
mov
push
scas
rcrb
cld
dec
sub
jle
std
cmp
mov
testb
movsl
or
int3
pop
aad
cs
pop
insb
repnz
test
fcomp
test
cwtl
stc
movsl
out
rorl
shr
xchg
dec
xchg
outsb
push
or
xlat
adc
je
adc
sbb
fcomps
sbb
stos
cmpsl
xorl
subb
or
fisttpl
out
push
out
icebp
ret
sbb
enter
or
cltd
xor
cmp
fcmovbe
adc
stc
xor
fwait
sub
lods
push
jge
dec
ljmp
cwtl
out
xor
or
xchg
addl
push
in
das
pop
repz
add
pop
sbb
gs
pop
clc
repz
lods
mov
fdiv
shll
inc
mov
popa
inc
enter
cld
jno
or
pushf
pusha
out
jmp
mov
xor
inc
fwait
jl
jmp
cmc
cmp
mov
pop
outsl
pop
mov
lea
jns
pop
and
gs
and
push
or
cmp
stos
popf
cld
mov
push
mov
xchg
mov
cld
add
xchg
testb
mov
adc
lods
js
lea
inc
leave
dec
or
xchg
loope
push
inc
and
out
out
outsb
xor
popf
mov
lock
dec
xchg
push
insb
xchg
das
gs
cli
sti
in
iret
divb
jmp
jl
xchg
xchg
imul
dec
jmp
pop
scas
aam
or
out
push
cld
lret
jne
pop
mov
aaa
xor
shl
dec
jl
mov
cltd
lea
outsb
repz
or
xchg
cwtl
inc
sti
and
sbb
out
xor
in
mov
cmp
ds
fnsave
lcall
scas
mov
sub
aas
dec
ret
push
insb
ds
and
out
scas
fistl
mov
lods
iret
sub
xor
jl
mov
andb
insl
cld
or
roll
push
pop
or
popa
inc
dec
dec
xchg
fbld
mov
sbbb
dec
inc
pop
and
outsb
loope
adc
repnz
xchg
lds
sub
lcall
push
dec
test
movsb
lahf
sbb
sbb
push
push
scas
mov
out
repnz
push
cmp
cwtl
fcomps
ds
push
xor
jl
ljmp
scas
nop
daa
in
inc
inc
repnz
out
popl
cld
jo
inc
sub
popf
push
sahf
scas
inc
cs
mov
xor
jmp
cmp
sahf
fnstsw
and
sub
add
adc
repnz
ja
mov
icebp
sub
pop
outsl
ret
das
nop
fwait
pop
push
dec
je
sti
and
cs
cmp
loope
test
pop
dec
repz
pop
dec
or
ss
xor
and
mov
rolb
repz
fs
add
shr
int
lds
jl
hlt
es
xor
data16
or
or
pop
stos
fsub
push
loopne
pop
or
push
jecxz
mov
shl
sbb
adc
fwait
xor
shl
loope
sbb
iret
sbb
xor
jl
les
adc
xchg
test
test
es
inc
fdivr
testb
jne
or
or
add
adc
in
shrb
or
fs
repz
leave
cmpb
mov
fcomip
dec
test
cld
push
stos
repnz
int3
lcall
negb
fwait
sub
out
cmp
lahf
dec
fmull
xlat
notl
stc
inc
adc
cld
inc
xchg
fwait
in
nop
mov
pop
lret
push
popf
out
popf
cld
push
jo
ficoml
xchg
add
repz
sub
leave
mov
xchg
mov
inc
popf
cmpsl
inc
add
mov
or
aam
sbb
addr16
rol
add
mov
inc
repz
jecxz
repnz
jl
jae
push
cmpsl
loopne
pop
pushf
in
pop
std
lock
js
dec
cmpl
mov
mov
leave
push
fistpl
jne
bound
push
popa
fwait
dec
add
inc
adc
jle
cld
push
push
push
pop
loopne
or
xchg
out
leave
fidivs
lods
cmp
or
xor
clc
fs
out
jle
or
mov
lret
push
jmp
inc
mov
stc
lahf
push
jb
sbb
in
xor
and
dec
xor
sbb
sub
stos
rcrl
cmp
leave
xchg
lock
jmp
mov
repz
in
xchg
or
das
popa
jl
push
jnp
push
outsb
fsub
cmpsl
or
pop
xchg
mov
mov
pop
push
aaa
and
ret
push
orb
inc
jae
xchg
inc
shrl
dec
mov
or
aas
pop
shll
mov
gs
xor
mov
mov
and
mov
rorb
pop
je
roll
outsl
ficoml
inc
sbb
mov
stc
mov
fwait
jecxz
or
lods
inc
pop
cltd
lcall
inc
or
rcrb
inc
jns
add
loopne
cltd
cld
fsubl
sbb
add
lcall
into
push
mov
dec
cld
xor
rcrl
fildl
cltd
ss
leave
ds
sarl
arpl
cmp
enter
jmp
mov
jmp
cmp
push
lods
movsl
shll
testl
sbb
lds
fadd
sub
cmp
adc
bnd
popa
sbb
cmpsl
xor
mov
bound
scas
int3
sbb
dec
jl
je
in
sub
leave
cmp
loopne
pop
or
xchg
movsl
mov
fiadds
push
xchg
mov
mov
jp
ret
aas
dec
hlt
sub
mov
mov
loop
push
lcall
push
cld
inc
std
inc
or
sbb
jl
cmpsb
into
or
stc
daa
arpl
push
shrl
jne
test
ja
ficomps
jmp
add
gs
adc
sbb
or
sub
ss
sbb
mov
mov
add
adcl
pop
xor
rclb
lods
mov
shll
out
jle
fsts
push
test
repz
sbb
mov
loop
fs
test
pop
je
jno
and
loopne
test
stos
jb
inc
cmpsl
into
sbb
dec
jnp
or
mov
jg
add
into
not
out
mov
and
imul
loopne
mov
add
clc
and
or
mov
icebp
fdiv
aas
cld
jge
dec
mov
or
andb
fcoms
stos
or
pop
jmp
popa
mov
icebp
add
cmpsl
int3
xor
ss
lcall
mov
adc
xor
test
cwtl
rsm
lcall
das
and
addr16
xchg
movsl
xlat
sbb
es
cmp
mov
insb
call
sbb
dec
cmp
inc
das
jp
lods
cmpsb
push
sub
push
dec
out
insl
in
mov
cmp
pusha
imull
iret
xchg
test
fstps
repz
mov
jle
and
adc
pop
or
leave
jmp
and
sub
loopne
outsb
push
inc
push
xor
push
out
sbb
jl
aad
mov
adc
nop
stos
mov
jp
in
cld
lcall
adc
clc
mov
mov
fwait
push
jg
orb
mov
popa
repnz
xchg
in
cmc
loope
pop
mov
adc
xchg
add
jb
dec
movsl
xchg
mov
fsubrs
jecxz
rorl
xchg
divl
mov
cld
mov
mov
divb
out
xchg
lea
insl
scas
jecxz
sbb
adc
xchg
jecxz
clc
inc
push
xor
out
push
fcoms
inc
inc
shlb
repz
loope
cld
loopne
adc
xor
fstpt
outsb
cmpb
jne
xchg
lods
pop
dec
jnp
mov
mov
mov
inc
sub
xor
shl
push
xchg
sub
in
mov
adc
test
lret
sbb
fldt
movsl
inc
repnz
cld
push
sahf
int
dec
fs
lret
mov
rcrl
cmp
add
hlt
jbe
xor
cmp
lcall
in
and
aaa
jl
mov
pushf
stc
cld
ljmp
gs
aam
jae
xor
fs
subb
cmp
incb
add
inc
inc
out
data16
inc
mov
adc
gs
jecxz
pop
cwtl
adc
aam
push
jo
push
sub
mov
and
jnp
int3
repz
cmp
jae
add
mov
test
push
adc
adc
xchg
adc
andl
cmpsl
add
add
cld
adc
fldcw
mov
fs
loope
xor
call
or
pop
repz
sbbb
cmp
jl
movsb
push
imul
push
cld
cltd
jecxz
lcall
loopne
sbb
cmpsl
inc
add
xlat
sbb
cmp
out
pop
jmp
or
lret
mov
mov
mov
pop
imul
or
bound
mov
lahf
fsubp
pop
inc
xchg
nop
jne
pop
dec
cld
push
sbb
mov
jg
dec
dec
les
scas
mov
rolb
jp
subl
push
jl
mov
mov
push
repz
ret
mov
adc
sbb
jo
pop
push
or
cmp
flds
mulb
jp
fdivl
aas
inc
mov
mov
xchg
xorb
mov
flds
movsb
mov
scas
popa
mov
ds
js
or
out
sub
pop
xchg
stc
cwtl
out
mov
outsb
loop
adc
lods
jp
in
mov
mov
outsl
popf
test
cld
push
ret
mov
jp
ljmp
lods
mov
and
stc
sub
jle,pt
mov
jo
out
sahf
js
or
add
lds
push
insl
and
push
adc
sti
stos
mov
gs
pop
test
adc
pop
push
xchg
xchg
call
and
test
mov
adc
lds
xor
jecxz
aaa
gs
test
xor
adc
mov
leave
mov
add
lcall
xor
dec
jl
paddsw
inc
stos
mov
inc
scas
mov
or
lcall
pushf
inc
jle
xor
push
mov
cli
jae
inc
sbb
psllq
push
addr16
adc
push
xchg
mov
dec
dec
jl
lock
add
dec
shlb
push
cmpsl
pop
pop
bound
jle
adc
jl
and
inc
popf
jns
xor
mov
addb
push
orb
movsl
jns
pop
ljmp
push
pop
mov
pop
aas
sbb
and
mov
jl
cwtl
es
negb
sbb
jns
mov
sbb
pushf
jno
mov
lods
into
in
jge
stos
adc
mov
sub
adc
lods
jo
movl
add
repz
mov
inc
sbb
mov
movsl
fildl
call
loopne
xor
inc
cmpsb
fidivl
pop
test
rcrl
repz
divb
sbb
pop
out
arpl
clc
pop
mov
dec
push
dec
test
test
or
cmp
in
fisubl
imul
lahf
repz
lea
into
push
fnstenv
xchg
test
int
scas
mov
inc
push
sti
lcall
adc
sbb
les
push
nop
inc
fwait
and
push
movsl
cs
dec
test
pop
cld
call
mov
add
incl
fwait
jl
sub
jne
push
aas
std
iret
clc
ss
pop
jg
mov
mov
cmpsl
xchg
sbb
mov
movsl
dec
lahf
mov
ja
movsl
ljmp
pop
icebp
inc
frndint
ret
loopne
jno
cmp
mov
push
jg
cmp
mov
adc
int3
mov
push
test
push
push
push
pushf
xchg
sbb
jl
adc
out
faddl
rcrb
inc
test
or
xchg
xchg
outsl
inc
clc
xor
adc
outsl
std
sub
ror
pop
std
or
sbb
dec
rcrl
adc
jmp
ljmp
jle
repnz
xchg
sub
or
push
sbb
inc
outsb
loop
inc
insl
xchg
xchg
lahf
sub
sub
mov
out
pushf
sub
test
add
mulb
xchg
cwtl
into
loopne
fcompl
jae
addr16
adc
jge
and
mov
pop
es
enter
pop
dec
jnp
xor
pusha
mov
mov
lods
jo
fs
pop
nop
scas
mov
stos
adc
xor
mov
sub
scas
int
push
cmpsb
xchg
mov
pop
xchg
movsb
insb
mov
add
inc
lcall
pop
sbb
cmpsl
out
push
add
jnp
ds
lods
pop
aaa
cltd
ds
lcall
cld
and
jecxz
lret
fistps
popa
mov
jg
test
fiaddl
mov
in
push
mov
fdivl
jnp
in
or
and
lds
mull
adc
decl
or
enter
sbb
cmovl
xor
testl
adc
outsl
fld
fs
outsb
mov
cli
rcll
lcall
in
push
int
xor
pop
sbb
leave
xchg
fwait
mov
pop
mov
cli
mov
inc
mov
jle
insb
and
clc
mov
push
mov
aas
dec
mov
mov
adc
testl
dec
je
xchg
adc
jecxz
sahf
cmpsb
mov
mov
lahf
lcall
dec
lret
and
repz
fisubl
or
std
lcall
adc
adc
xchg
dec
inc
cmp
mov
data16
add
rclb
repz
cmp
push
icebp
lret
and
cmp
mov
or
or
adc
cmpsb
cmp
stc
xor
push
shlb
sub
gs
xchg
xor
xor
pop
adc
cmpsl
jecxz
iret
cmp
mov
fisttpll
lock
mov
or
out
cmc
imul
xchg
xor
adc
lds
cltd
sbb
jnp
xor
outsl
int3
popf
push
sbb
mov
iret
stos
add
movsl
jbe
mov
and
dec
or
arpl
jl
ss
rcll
mov
xchg
add
cltd
loope
mov
ror
adc
cmpsb
lea
cli
dec
mov
inc
mov
mov
mov
pop
inc
sarl
add
pop
fstpl
out
xor
jle
or
out
out
pop
stos
dec
repz
mov
cmp
out
leave
xor
ret
pushf
sarb
aas
rolb
mov
ljmp
jmp
out
fnstenv
adc
sub
ja
cmp
mov
xchg
push
xchg
lock
xchg
pop
sbb
inc
loope
mov
in
push
outsb
loop
push
andb
mov
mov
mov
icebp
xor
cmp
cmpsl
les
popf
inc
lea
sarb
fs
arpl
jecxz
icebp
push
loopne
cwtl
and
mov
pop
dec
add
mov
xchg
or
inc
pusha
in
mov
pop
pop
xchg
xchg
push
xchg
shll
movsb
into
in
outsb
outsb
clc
mov
xchg
sbb
mov
jl
inc
pop
xchg
loopne
add
push
and
mov
daa
adc
jge
xlat
shrl
sbb
pop
and
sub
xlat
lock
mov
pop
xchg
mov
test
push
cmp
mov
add
push
shlb
and
dec
mov
push
hlt
repz
push
dec
out
dec
pop
sub
cmp
aaa
cmpsb
push
lock
sub
xor
xor
lock
inc
xor
loope
out
sti
inc
clc
movsb
adc
push
sub
cltd
push
insb
pop
xchg
xor
push
enter
sbb
maxps
daa
dec
adc
dec
in
rorl
mov
xchg
andb
xor
ja
movsl
dec
jl
fwait
and
xchg
cmpsl
inc
or
mov
sbb
xchg
stos
pusha
int3
sub
scas
or
popf
xor
dec
andb
inc
cld
fildl
xchg
std
cmpsb
in
add
cld
vpinsrw
dec
sbbb
jns
or
push
addr16
inc
les
out
out
cs
shl
mov
adc
andl
movsb
shl
addl
xchg
sbb
cld
mov
mov
je
adc
repz
sbb
mov
jo
xor
cmpl
and
pop
mov
adc
jbe
mov
adc
pushf
imul
pop
movsb
pop
loop
cli
or
inc
iret
mov
orb
jno
push
in
push
int
mov
lea
xchg
pop
enter
push
pop
gs
push
mov
ret
push
ficompl
pop
cmpsb
push
aaa
addb
xor
and
lock
adc
repz
ret
addr16
mov
push
dec
pusha
nop
sbb
out
aam
pop
push
xor
mov
or
adc
sbb
mov
pop
xchg
add
mov
popa
sub
or
clc
mov
into
adc
xchg
mov
jns
push
cmp
inc
pushf
int3
or
xchg
pop
mov
cmpsb
loopne
jno
shlb
push
inc
or
cmpsb
push
testb
xchg
push
nop
xor
cmp
cmp
movsl
xor
cld
stc
ljmp
adc
iret
adc
rcrl
pop
mov
fwait
arpl
and
mov
andb
outsl
push
in
fcomp
hlt
add
adc
out
ds
shlb
adc
jmp
adc
mov
mov
fldl
sbb
iret
pop
dec
push
add
adc
inc
inc
jb
mov
daa
imul
xchg
mov
pop
out
call
add
cmpsl
shll
out
cmc
dec
xor
bound
xchg
icebp
push
xlat
ja
inc
js
out
scas
das
and
fsubl
and
in
pop
cld
jno
movsl
das
add
out
cwtl
cld
mov
fadds
pop
mov
lret
call
bound
scas
das
push
mov
sub
sbb
fwait
inc
sbb
sub
test
add
mov
push
jns
into
movsb
mov
and
xchg
mov
pop
fs
mov
pop
movsl
add
out
js
sarl
scas
pop
shll
inc
popa
out
data16
jae
jb
cld
xchg
iret
jb
test
xchg
out
loopne
stc
pop
sbb
fisttps
outsb
pusha
pop
adc
dec
loope
mov
movsb
push
xchg
cwtl
push
cs
or
pop
mov
lods
pop
inc
iret
lock
in
fildll
mov
dec
jl
fwait
inc
add
or
xor
flds
and
dec
rcr
push
push
bound
idiv
lcall
adc
je
jecxz
add
xor
add
clc
fsubp
or
inc
mov
outsl
popa
cli
shlb
and
daa
daa
mov
mov
xchg
pop
popa
jno
lahf
xor
xor
sbb
jecxz
in
mov
jl
insb
dec
lahf
xchg
lret
out
js
cmpsb
xlat
add
cld
or
cltd
out
push
lcall
dec
std
jae
enter
dec
jl
movl
fidivl
fisttps
fists
adc
ja
inc
or
mov
mov
int
clc
dec
enter
pop
cmp
lods
lret
jl
inc
xchg
out
aas
fdivr
icebp
sub
push
add
sub
inc
push
mov
push
ret
aas
out
loopne
and
divb
aas
jg
pop
lcall
cld
xchg
and
repnz
ljmp
sub
add
out
lret
jl
imul
xor
and
scas
inc
push
xor
mov
aas
add
out
adc
repz
cmp
mov
ret
xor
call
xchg
mov
sub
nop
push
xor
fcomps
and
stos
xchg
push
push
xlat
push
adc
dec
mov
or
movsb
sarb
aaa
cmp
push
call
lret
gs
sarb
es
icebp
loopne
out
inc
push
sar
gs
cmp
cmp
push
imul
and
xor
mov
cwtl
out
and
or
fmuls
rcrl
lock
into
popa
adc
push
dec
fdivrl
inc
xor
pop
fldl
clc
xorb
ds
pop
mov
inc
js
mov
xor
mov
inc
lods
inc
aad
inc
xchg
pop
and
movsl
xor
push
in
jl
and
pop
mov
pop
dec
lcall
jecxz
movsl
aas
out
cmpsb
bound
loopne
iret
cs
sbbb
jmp
clc
mov
rorl
push
jge
push
mov
jmp
cmp
dec
adc
movsb
cmp
adcl
push
aam
and
aad
and
jl
xor
cltd
or
mov
loopne
adc
or
xor
mov
ficomps
add
sarb
sbb
subb
push
adc
and
lcall
icebp
stos
xor
lock
push
inc
loop
jns
add
shl
jo
or
jae
movsb
shr
and
or
pop
xor
cmp
andb
out
push
push
shl
rcrb
sbb
and
leave
xor
pusha
mov
or
jecxz
mov
sti
adc
mov
data16
pop
mov
std
les
jns
ds
mov
enter
inc
push
dec
stc
push
xchg
negl
icebp
mov
mov
in
sub
lret
xchg
xchg
dec
aaa
pop
sete
add
and
xor
js
scas
fisttps
dec
out
sbb
movsb
test
out
iret
bound
dec
add
dec
ja
and
adc
ret
mov
cld
push
sbbb
repz
sub
push
out
add
and
push
inc
in
mov
ds
adc
inc
dec
xchg
mov
adcl
inc
je
pushf
adc
sub
fpatan
pop
and
add
jnp
out
andl
jns
adc
pushf
jmp
dec
xor
inc
aas
sbb
mov
push
cwtl
pop
shr
fdivl
insb
rcrl
inc
repnz
inc
out
push
and
insl
and
adc
mov
push
and
jb
orb
aad
mov
push
or
fdivr
adc
jl
fcmovnbe
gs
push
cmp
jb
insl
movsl
sub
mov
jbe
scas
or
xchg
aas
pop
mov
cli
mov
pop
cld
lea
mov
add
push
xchg
jl
jnp
and
cs
xchg
pop
das
push
adc
movsb
adc
lods
lcall
aad
cmp
js
xor
sub
fcmove
loop
adc
push
cmp
out
leave
lret
mov
pushf
xchg
out
in
fcomps
xchg
jp
int3
add
pop
push
xchg
or
pop
jo
dec
repz
faddl
pop
sbb
stos
jmp
lcall
roll
pop
cmp
sbb
rclb
fs
cmp
js
cmp
xor
adc
into
add
xchg
mov
xchg
fisttpl
inc
cmpsb
imul
xor
loopne
or
adc
push
mov
cmpsb
cltd
mov
add
cwtl
or
movsl
mov
dec
mov
insl
nop
repz
lret
dec
dec
or
dec
jo
jmp
pushl
mov
dec
outsl
cmc
lcall
mov
push
lcall
jl
mov
lock
sbb
loop
add
repz
repnz
aas
pop
sbb
daa
cmp
aam
xor
mov
mov
cmpsl
loopne
lcall
fistpl
icebp
inc
jmp
mov
aas
out
jecxz
sbb
sbb
jne
fisttps
fisubl
sbb
call
push
jecxz
mov
pop
mov
mov
call
mov
negb
test
adc
mov
out
jns
push
inc
inc
push
adc
xchg
gs
fs
fistpll
mov
ljmp
cld
pop
pop
out
out
lds
dec
or
jge
cli
xchg
int3
or
les
inc
inc
fnstcw
out
es
mov
pop
dec
out
cmp
mov
hlt
aas
inc
faddl
and
fcomp
cmpsb
mov
cwtl
adc
mov
adc
inc
negb
ss
loop
dec
push
jmp
outsb
fcomps
inc
in
jle
repz
cmpsb
test
out
jg
lcall
cmp
cmp
xor
out
mov
and
and
jne
xor
call
ret
repz
loopne
xchg
dec
lret
dec
xchg
mov
cmpsl
sbb
imul
jmp
mov
mov
cmpb
popf
push
push
mov
out
jno
xor
jecxz
pop
xchg
sarb
dec
out
mov
repz
inc
cmc
cmp
mov
xchg
clc
fidivl
lahf
test
fnstenv
aaa
js
push
jmp
adc
mov
lods
enter
out
jle
mov
mov
popf
jp
in
das
les
cli
inc
cmp
movsl
in
jno
insl
xor
repz
loopne
imul
inc
arpl
je
repz
push
dec
test
out
dec
cmp
test
adc
test
in
fistps
out
sbb
outsb
movsb
cld
int3
sbb
pop
xor
pop
jl
pop
rorb
pop
leave
inc
or
jno
xchg
xchg
adc
je
xor
ljmp
jle
les
jae
pop
daa
cmp
mov
mov
mov
mov
add
adc
cmpsl
dec
xchg
jne
xor
aam
push
bound
movsl
imul
adc
ljmp
push
mov
repz
push
js
iret
jmp
lret
dec
adc
push
je
repnz
xlat
push
jl
or
sub
mov
fwait
xor
stos
jb
or
pusha
pop
out
cmpsl
pop
sbb
or
mov
push
in
push
enter
xchg
push
shl
sarb
xor
push
jle
jb
stos
push
lods
push
sub
mov
in
adc
or
into
daa
add
repz
sbb
pop
cmc
pop
jle
ret
fistpl
or
lret
xchg
jbe
xchg
mov
stos
cmp
and
faddp
mov
push
or
div
mov
xchg
adc
into
aas
icebp
dec
rcll
hlt
iret
ljmp
mov
cmpsl
loope
sbb
repz
stc
dec
adc
lret
sbb
test
call
lahf
clc
sahf
lcall
inc
jecxz
push
sbb
xchg
cmpsl
sti
dec
mov
int3
jp
xor
sbb
or
cmpsl
test
push
and
out
int3
int3
inc
xor
lahf
or
repz
mov
sub
push
push
add
mov
jmp
es
je
mov
inc
push
mov
and
dec
jl
xlat
out
push
in
out
push
loopne,pn
and
mov
push
cwtl
movsb
inc
cmc
mov
ficoms
jmp
mov
nop
adcb
testb
mov
sbb
iret
or
pop
in
mov
orl
jbe
pmulhw
jg
mov
xchg
inc
aam
addb
lods
lret
pop
mov
lret
into
inc
pop
lcallw
in
mov
or
add
xor
pushf
jecxz
cld
push
call
add
mov
xchg
and
lahf
mov
sbb
nop
and
fwait
rcll
in
push
lds
ljmp
out
or
repz
mov
sbb
loopne
xchg
lcall
notl
inc
enter
jl
mov
sti
in
mov
jge
adcb
cld
mov
push
mov
dec
gs
and
pop
xor
and
faddp
dec
push
mov
js
mov
sub
sbb
and
mov
icebp
inc
or
shlb
mov
sub
adc
stos
imul
stos
lods
repz
insl
mov
ljmp
mov
outsl
or
pop
inc
mov
lcall
or
out
inc
mov
push
mov
or
popa
push
aas
jmp
xchg
aas
xchg
outsb
adc
dec
dec
jle
popf
test
into
test
cli
and
jl
sub
cmp
dec
xor
or
mov
xor
dec
adc
cld
adc
fnstcw
insl
in
aaa
dec
inc
in
or
pop
outsb
jl
cmp
sbb
ffree
inc
sbb
push
icebp
inc
ljmp
out
arpl
sbb
gs
or
adc
data16
and
and
fnstcw
vpshlw
xor
div
mov
movsl
cld
mov
mov
int
test
ds
int
adc
xchg
fsubr
lahf
pop
dec
inc
hlt
sub
mov
mov
dec
lods
fidivs
inc
icebp
adc
nop
inc
inc
out
dec
or
pushf
clc
adcb
dec
sbb
in
inc
pop
and
xchg
xor
data16
mov
dec
push
data16
cld
xor
lods
mov
lret
out
push
add
sbb
dec
fmuls
pop
add
or
sub
mov
pop
leave
xchg
mov
lret
mov
in
lea
mov
cld
xor
push
and
jl
sub
xchg
scas
mov
jo
sbb
inc
xchg
lea
imul
inc
pop
andb
inc
jne
hlt
pop
mov
loope
add
pop
sub
pusha
or
adc
mov
fisttpl
lea
popf
int
push
aaa
ret
dec
xor
and
pop
or
xchg
shll
sub
pop
sub
mov
cwtl
mov
pushf
in
subb
pop
dec
repz
shr
cld
lret
pop
out
popa
or
popa
insl
jbe
aam
add
cmc
mov
cs
push
mov
shlb
sub
mov
pop
sarl
js
sbb
cld
fs
loop
and
or
fs
xchg
mov
lcall
jo
push
dec
ret
in
xchg
and
orl
adc
stc
shr
pop
mov
in
or
test
loop
popf
aad
xor
rorl
or
sbb
push
sub
xchg
adc
cmp
xor
test
pop
inc
push
das
mov
rcr
xor
or
das
xchg
and
cmp
jmp
jns
sbb
cld
mov
xlat
cmp
cmc
mov
adc
adcb
mov
cmp
and
and
sbb
aas
mov
sbb
lret
cmpsb
shrb
dec
lods
cwtl
sub
insb
out
cmp
sahf
sbb
adc
das
sbb
in
push
sahf
push
push
cltd
test
add
pop
mov
cmpb
insb
ss
dec
dec
movsl
repz
fnstenv
scas
into
push
xchg
gs
imul
out
int
popa
repz
nop
adc
push
adc
sub
push
xchg
sbbl
push
add
xchg
xchg
xchg
mov
pop
iret
mov
sub
and
pop
mov
test
les
dec
enter
xchg
pop
cmpsb
imul
mov
cld
and
xor
xor
cmp
cmp
xor
int
mov
out
sub
sti
shrb
cmp
mov
cmp
adc
in
adc
xchg
dec
loopne
pop
cmc
and
mov
cmp
js
xor
mov
dec
inc
xor
out
into
mov
pushf
and
fidivs
dec
or
ret
clc
adc
jl
fdivp
test
aas
data16
fs
dec
lcall
xchg
in
xlat
add
jmp
xchg
adc
out
sahf
movsb
shrd
in
outsl
movsl
mov
in
push
pop
nop
adc
push
fstpt
cmp
in
xor
gs
or
sbbb
cmp
aad
movsb
or
xchg
cmp
lods
pop
add
out
in
bound
fs
int
ljmp
andb
mov
les
daa
sub
or
out
or
fwait
adc
out
sbb
cmp
aaa
scas
addr16
inc
adc
or
sbb
outsl
in
lret
mov
icebp
repz
arpl
loopne
jge
stos
insb
mov
sti
es
pusha
xchg
cmp
mov
adc
add
pushf
adc
jne
test
adc
fs
jl
mov
push
into
mov
mov
mov
cltd
mov
flds
cltd
mov
sahf
or
jnp
and
or
add
stos
dec
or
inc
cmpsb
pop
mov
mov
xor
in
clc
xor
or
repz
es
loope
sub
sbb
loop
mov
shl
jno
rorb
imul
inc
std
test
shlb
sbb
cld
push
mov
cli
jmp
data16
iret
ds
push
pop
mov
addr16
cmp
xor
push
divl
decl
mov
jecxz
mov
cld
and
adc
arpl
pop
pop
add
femms
movsl
pushf
cmp
dec
repz
mov
lcall
cld
adcl
pop
test
fnstenv
push
or
adc
sahf
push
dec
sub
scas
mov
pop
xchg
lods
xchg
adcb
mov
int
sahf
mov
adc
sbb
lret
jo
mov
ljmp
xchg
popa
pop
sbbb
pop
push
mov
call
jbe
pushf
stc
jl
push
mov
cltd
call
shr
xchg
adc
sti
out
sbb
fmul
and
cwtl
mov
xor
inc
and
jl
dec
cmp
adc
outsl
sub
jl
lock
xchg
dec
sahf
repz
dec
mov
xchg
sub
loopne
les
aad
cmp
repz
les
iret
xchg
pop
xor
mov
imul
ret
andb
sub
mov
out
jbe
aas
sbb
ds
pop
xchg
int
jle
pop
xor
mov
movsl
add
lahf
cmpsb
mov
in
into
xor
sbb
cmp
mov
int3
cld
out
inc
xor
pop
mov
jl
or
sub
call
outsl
inc
loopne
push
inc
fildll
xchg
loop
popl
add
dec
jno
xorl
inc
lods
or
rcl
cmp
add
inc
imulb
imul
adc
sub
das
pop
movsl
js
dec
stos
gs
mov
mov
sub
or
jge
out
sbb
cmp
cmpsb
je
push
inc
cmpsb
das
das
mov
or
mov
mov
out
rclb
lods
lock
jmp
aam
sbb
out
cwtl
and
pause
inc
or
push
idivb
cmpsl
lea
movsl
and
lods
out
jp
ja
add
movsb
xchg
ljmp
mov
push
mov
ds
sub
mov
mov
clc
shl
or
fsubl
inc
inc
mov
mov
or
sbb
xchg
pop
push
mov
fistl
nop
gs
lods
dec
add
test
jp
js
cmp
icebp
ljmp
andb
xchg
or
sbb
dec
cmp
inc
enter
sbb
pop
xchg
adc
rol
jnp
or
push
hlt
popa
adcl
jmp
xor
xchg
sbb
test
adc
dec
jno
hlt
pop
jp
cwtl
lret
addr16
push
cld
or
mov
mov
and
into
repz
out
popf
pop
xor
cmp
inc
fistl
pop
dec
mov
sub
xchg
lds
xlat
xor
mov
test
aad
jl
dec
add
jnp
mov
out
call
xor
push
enter
shlb
loopne
cwtl
test
adc
or
mov
sub
push
fistpl
xchg
mov
stc
out
pop
push
inc
popf
mov
adc
mov
fimull
or
loope
lods
xchg
leave
out
aaa
jae
test
xor
pop
fwait
sti
fiaddl
xchg
jp
popa
fiadds
fdivl
pop
test
pop
or
and
cld
cmp
mov
pop
nop
pop
mov
aas
stos
mov
mov
lahf
repz
sbb
rep
pusha
dec
xor
inc
dec
ret
xchg
mov
scas
adc
lret
repnz
test
int
in
and
cmp
xor
repz
jp
aaa
sbb
xor
test
loopne
sub
shlb
sbb
or
cmp
adc
jl
xchg
jae
outsl
mov
fmull
adc
xchg
mov
and
dec
lods
lret
push
mov
mov
iret
addb
jmp
fisttpll
lahf
inc
lods
cmpsb
cwtl
aam
mov
cmc
aaa
mov
shll
push
xchg
popa
lcall
scas
adc
dec
stc
push
mov
dec
outsb
and
inc
jl
pop
xchg
imul
adc
xorl
and
out
mov
dec
mov
jae
cli
stos
in
cmp
or
out
cmpsl
arpl
stos
imul
dec
repnz
and
sub
call
loope
pop
adc
sub
sti
std
and
jb
dec
sahf
mov
int3
and
jl
daa
adc
xor
scas
inc
jae
fisubs
test
scas
adc
int
sbb
and
call
fwait
andb
cs
scas
or
pop
sub
push
mov
push
clc
cmp
adc
mov
or
xchg
ljmp
and
rorl
push
cmp
jle
and
aas
std
jl
jbe
jle
scas
std
mov
cltd
xchg
daa
push
ret
aad
insb
mov
sbb
mov
push
fidivl
or
lcall
jns
dec
push
dec
pop
xchg
cwtl
lahf
cld
xchg
jmp
addb
xor
in
cld
test
hlt
enter
ljmp
jecxz
sub
jmp
fcmovne
jp
xchg
aam
popf
stos
in
fs
push
and
int
xor
add
daa
and
mov
mov
jl
movl
mov
repz
stos
push
adc
add
movsl
xlat
call
andl
aam
pop
aad
adc
cld
xchg
loopne
jbe
aas
mov
rorb
imul
pop
xor
pop
push
cwtl
lcall
adc
aas
cmp
jae
dec
fs
repz
sub
cld
dec
les
jecxz
bound
ljmp
insl
pop
das
outsb
inc
mov
nop
movsl
mov
rcrl
pop
xchg
dec
jmp
repnz
sbb
test
cmpsl
mov
and
push
jl
mov
or
sbb
push
xor
sub
outsb
adc
cld
mov
fsubrp
cmp
pop
sbb
or
lcall
mov
or
out
mov
xchg
inc
sbb
lret
sub
in
cmp
rclb
mov
cltd
repz
es
push
or
lret
mov
push
fdivs
repz
or
sub
xchg
push
dec
pushf
je
dec
dec
into
or
insl
xchg
xor
xchg
inc
or
bound
push
inc
xor
filds
sub
shlb
xchg
push
andl
fwait
mov
arpl
clc
or
mov
mov
jp
fmull
fwait
cld
lcall
mov
cmp
rorb
cmpsb
outsl
mov
jecxz
into
adc
lds
push
pop
mov
pop
and
add
je
adc
push
pushf
pop
add
jl
enter
pop
cmc
sbb
jb
rcll
add
outsb
dec
pop
aad
mov
fs
pop
or
pop
jl
sahf
cmp
inc
jmp
addr16
lea
fnstenv
scas
adc
pop
add
mov
nop
inc
out
ds
cmpsb
jo
push
pusha
sub
into
inc
jl
movsb
stc
mov
nop
or
or
pop
sub
add
mov
dec
cld
pop
jbe
cmp
mov
or
lcall
xchg
fists
dec
iret
arpl
rol
pop
aad
aaa
test
inc
out
add
add
and
ljmp
pushf
xchg
sub
push
push
dec
push
lret
enter
ret
xchg
jmp
pop
fistpl
es
mov
push
or
repz
cwtl
cld
pop
mov
jl
test
je
mov
outsl
ss
sti
orb
or
lcall
test
xchg
inc
fstps
mov
add
pop
and
pop
out
inc
jmp
rol
sbb
in
inc
movsl
fdivl
movsb
jl
push
xchg
mov
int
out
push
loopne
iret
xchg
push
repz
lcall
rclb
sub
sbb
repz
jl
lds
cld
mulb
dec
popa
mov
inc
mov
mov
pop
rcr
movsl
dec
stos
xchg
insl
jl
cld
iret
inc
or
sub
jbe
push
lods
lock
int3
je
repnz
xlat
fidivrl
ds
xlat
lds
pop
cmc
repz
gs
pushf
repz
adc
pushl
cld
xchg
lret
mov
adc
sbb
notb
inc
ss
cmc
test
dec
xchg
cmpsl
mov
dec
lahf
pop
cld
mov
aam
push
xchg
push
inc
inc
dec
shll
sub
cli
gs
adc
dec
in
divb
push
pop
les
rcrb
js
stos
xor
pop
outsl
outsl
clc
test
xchg
pop
mov
cmp
test
xchg
les
cmpsl
outsb
cltd
test
mov
mov
push
adc
cmc
push
notb
mulb
or
mov
mov
aad
push
and
int3
mov
or
shrb
mov
sbbb
inc
inc
lock
cmpsl
sbb
scas
loopne
jne
mov
aas
stos
add
cmpsb
aas
sti
loop
jno
xchg
cmp
pop
inc
pusha
loope
push
or
xchg
dec
xchg
or
xor
xchg
out
xor
fisubl
sahf
or
lods
lret
adc
adcb
pop
imul
sbb
mov
aam
loop
aas
js
loope
addr16
xor
jo
inc
jne
inc
mov
or
stc
dec
add
shl
adc
cvttps2pi
and
xchg
and
test
outsb
or
scas
ficomps
sbb
jmp
mov
gs
mov
test
inc
lods
xor
push
dec
in
pop
imul
std
add
lret
sbb
sbb
add
xchg
lcall
int
inc
ja
loopne
addr16
popa
pop
or
mov
adc
jae
add
adc
or
mov
adc
in
cmp
in
mov
fmull
pop
add
mov
xchg
cltd
sbb
clc
pop
mov
les
in
call
sahf
nop
and
mov
in
or
and
test
ja
dec
jbe
xchg
cmp
pop
mov
jae
je
pop
adc
hlt
cmp
mov
lret
icebp
jge
stos
fstpl
imul
adc
sbb
in
push
outsl
and
andl
jp
sti
mov
xlat
jb
and
adc
push
pop
cld
add
cmp
cmpsb
sbb
movsb
dec
jb
loopne
mov
mov
das
cmp
xchg
adc
sub
test
roll
and
dec
out
cmp
jl
xor
sahf
js
and
dec
in
rcll
lods
inc
fs
fsts
jl
sbb
rclb
test
dec
ret
adc
adc
push
lods
xchg
mov
dec
adc
inc
out
mov
das
xor
int
jl
jb
dec
les
leave
lea
lea
sbb
add
fldt
jle
jae
daa
adc
stos
out
and
push
sbb
cs
rclb
das
xor
orb
lods
inc
adc
dec
add
mov
mov
inc
jne
out
push
lcall
dec
clc
xchg
inc
andb
mov
mov
stc
negl
cli
insl
pusha
dec
xor
outsb
xorl
aaa
cmp
mov
sub
push
outsl
mov
add
sub
push
cld
rcl
sbb
out
cmp
xchg
push
sbb
add
lret
sahf
cmc
out
divb
cmpsl
out
jp
dec
fwait
cli
and
ja
push
ljmp
adc
fs
pushf
dec
pop
std
push
and
repz
mov
add
add
mov
pop
out
lods
xor
mov
shl
aas
sbb
inc
jge
out
test
jl
hlt
pop
xor
int3
and
dec
push
inc
jnp
inc
lods
rcll
repz
mov
pop
pop
sahf
movsl
jge
nop
sarl
add
lret
sbb
scas
mov
cmp
out
test
pop
mov
in
js
adc
xchg
sub
add
push
mov
cmp
xchg
int3
lcall
clc
pop
aaa
cld
sbb
xchg
push
clc
mov
aad
test
or
ret
idivb
cltd
pop
std
cmp
mov
cmp
cmp
cmp
jecxz
adc
lock
sbb
push
adc
insl
mov
mov
lea
nop
pop
les
push
mov
cmp
lods
addb
xor
pop
mov
pop
push
mov
gs
or
jo
aad
setge
repnz
xor
inc
sbb
pusha
push
loopne
adc
adc
mov
into
mov
push
sub
gs
sti
in
in
mov
stos
lds
inc
scas
dec
scas
mov
push
and
inc
lret
movsl
jl
cmp
dec
outsb
out
popf
inc
les
repnz
dec
add
ds
in
dec
sbb
inc
mov
ljmp
or
cmp
bound
add
mov
repnz
ss
mov
insl
mov
outsb
add
loopne
outsb
adc
and
aad
mov
push
xchg
inc
loope
mov
and
add
sti
xor
sub
inc
add
dec
jl
mov
int
addr16
in
pop
jmp
inc
mov
push
iret
lods
out
lods
sbbb
shll
or
out
jae
jge
movsl
and
dec
jno
mov
fiaddl
push
sub
rcll
lock
mov
ftst
jl
fucomip
inc
or
mov
add
addr16
lock
push
mov
add
sub
fmull
fdiv
lahf
jno
push
inc
pushf
sub
cmpsl
cmp
and
repz
jb
mov
lret
mov
cld
test
iret
cmpsb
insl
ljmp
cmpsl
je
mov
pop
mov
inc
mov
aas
cmc
mov
out
mov
inc
push
lahf
icebp
sub
lahf
icebp
movsb
imul
mov
sub
lock
jl
outsb
jge
pushf
inc
imul
xchg
ljmp
sbb
xchg
adc
movsb
and
push
loopne
adc
mov
pop
fsubl
outsb
add
fidivrs
lods
push
xchg
dec
push
sub
and
popa
decl
adc
jb
mov
push
fidivl
stc
add
inc
aas
mov
mov
mov
fdiv
movsb
pop
dec
cld
mov
xor
sarl
adc
test
into
popf
mov
pushf
out
jp
arpl
jae
jle
sbb
adc
or
push
mov
insl
jp
pop
into
in
dec
jns
adc
int3
out
stos
aas
xor
or
negl
lahf
xor
push
sub
add
repz
push
arpl
dec
jecxz
mov
push
fldl2e
push
mov
out
pop
ljmp
mov
out
xor
mov
sahf
repz
inc
push
mov
mov
adc
inc
mov
xchg
xor
out
adc
sbb
int3
cmpsl
testl
daa
insb
sbb
sbb
int3
cmpps
lret
repz
out
and
pop
test
scas
ficomps
and
frstor
pop
inc
dec
inc
lea
lret
jl
cmp
adc
cmp
push
icebp
mov
pop
jne
rolb
sbb
jo
movsb
lods
inc
cs
cmpb
mov
adc
addr16
fsubp
jl
or
cltd
cld
sub
aas
xor
sbb
pushf
xor
clc
dec
push
outsb
pop
imul
push
addb
and
inc
mov
sub
or
mov
xchg
repnz
xchg
mov
cld
xchg
out
fsubl
testl
or
mov
cwtl
xor
iret
mov
pop
sbb
sbb
into
push
xchg
pop
mov
mov
fs
xor
out
dec
xchg
inc
dec
dec
fdivs
aas
repz
stc
dec
int
mov
aas
in
inc
inc
add
js
scas
clc
cmp
icebp
cmp
and
xlat
dec
leave
lds
rcl
xchg
loopne
push
jne
adc
pop
addl
adc
xlat
push
push
xchg
out
add
cmpsl
ljmp
sbb
repz
jno
clc
test
in
or
or
jnp
mov
jg
sbb
cmpb
jnp
popf
pop
cld
push
xor
cld
test
movsl
js
into
sbb
or
jmp
das
inc
or
xchg
jmp
xchg
lret
push
adc
xor
fisubrs
mov
pop
xlat
loope
adc
out
movsl
mov
dec
cmp
es
xor
jg
das
stc
in
xchg
xor
xor
sahf
lret
dec
mov
addr16
in
shrl
repz
push
mov
jns
jns
dec
mov
addb
js
xchg
icebp
xor
ret
out
in
jl
fsts
mov
inc
ds
and
repz
dec
jmp
in
roll
lock
jge
stos
adc
cld
incb
mov
jne
push
es
pop
aaa
cld
jne
and
aas
xchg
and
repz
lahf
sbb
adc
add
inc
fadds
mov
sbb
testl
ljmp
rcrb
test
test
inc
push
xor
fisttpll
xor
push
cmp
push
pop
xor
sub
sub
inc
stos
and
mov
mov
adc
movsb
lods
push
cmp
lods
push
mov
mov
cmp
ljmp
imul
lea
xorl
pop
mov
movsb
inc
sbb
add
mov
ret
mov
je
push
add
jl
fisubs
inc
in
mov
lods
push
aaa
mulb
adc
xchg
fistps
mov
mov
fmulp
fs
lea
das
jp
aaa
sbb
andb
imul
mov
out
lret
daa
sbb
or
nop
hlt
fstps
cld
mov
inc
or
gs
stos
ljmp
bound
xor
test
das
and
cltd
loopne
fwait
pop
or
jmp
or
xor
leave
cmpsb
mov
cwtl
das
insb
and
xchg
nop
add
aas
or
out
jmp
test
rorb
insb
ja
into
aas
inc
mov
dec
dec
cmp
setnp
jg
sbb
pushf
jb
jo
mov
pop
mov
aas
popa
push
dec
mov
inc
js
sbb
test
popf
sbb
test
push
mov
sub
and
es
and
dec
mov
dec
icebp
mov
fistps
and
xlat
adc
and
out
mov
jl
aad
push
fs
jmp
push
outsl
cltd
jg
insb
dec
push
xchg
push
lcall
jp
jl
stos
xchg
insl
or
lcall
mov
ss
sbb
inc
mov
idiv
mov
lret
aam
inc
inc
sbbl
mov
in
mov
popa
or
out
xchg
insl
lret
push
inc
in
sub
xor
push
mov
int3
lods
or
push
icebp
sub
adc
loopne
jnp
mov
fistl
frstor
bound
mov
dec
lds
mov
dec
inc
mov
sub
lods
mov
and
lret
ficoml
fstpt
inc
mov
sar
xor
loopne
jmp
push
stos
jecxz
rcrl
dec
add
out
pop
outsw
add
outsl
cwtl
xchg
les
jo
jbe
daa
cld
iret
mov
xchg
push
and
movsl
enter
lock
or
or
imull
xchg
inc
mov
pop
data16
fwait
sbb
nop
or
jo
das
cmp
cmp
jl
mov
cmp
repz
das
aaa
mov
call
sbb
mov
ss
gs
scas
sbb
adc
mov
outsb
or
test
paddb
sub
mov
push
push
lcall
add
push
mov
out
and
bound
jl
sbb
lea
test
popa
enter
call
and
aam
testl
bound
push
mov
lock
cs
mov
repnz
adc
pushf
popf
cmpsb
dec
testb
jecxz
shrb
inc
adc
outsl
lcall
jbe
jb
inc
ret
push
jae
and
cld
filds
push
add
notl
repz
rcll
mov
ja
jbe
and
inc
std
xchg
cmp
push
sub
mov
cltd
push
repz
outsl
pop
cmp
push
pop
or
mov
fwait
sub
dec
xchg
jmp
cltd
inc
mov
loope
out
aam
enter
cmpsb
dec
fldenv
jl
cs
push
sub
cmp
outsb
cld
xor
out
xchg
adc
lret
jp
movsb
pushf
lds
inc
dec
ficompl
jnp
ret
les
fs
pop
nop
test
idivl
cltd
leave
ljmp
or
xor
add
jmp
sbb
push
cmpsl
fstpl
sbb
jle
movsl
lcall
push
adc
jbe
xchg
inc
mov
xchg
sbb
int3
mov
jg
lcall
movsl
imul
mov
mov
adc
sahf
add
xchg
lock
and
xchg
push
inc
shrl
in
mov
or
int3
cwtl
push
inc
ss
roll
mov
push
jbe
xchg
mov
pushf
push
xchg
xchg
ret
lea
jecxz
sbb
push
call
rcll
sub
in
ficoms
add
or
mov
adc
js
cld
jl
jmp
cwtl
sahf
cmpsl
dec
xor
sahf
dec
mov
orb
mov
push
mov
in
inc
ja
ljmp
sub
dec
mov
pop
xchg
lods
loopne
cmc
sbb
jg
loop
ret
inc
sub
mov
add
sahf
xchg
loopne
ds
fs
and
leave
repz
inc
cmp
cmpl
or
mov
mov
mov
out
adc
in
mov
cmpsb
sub
and
ds
mov
iret
clc
sarb
out
and
arpl
dec
ret
int3
mov
or
sbb
pushf
pop
mov
dec
sarl
mov
loopne
or
push
lcall
leave
add
cmp
push
addl
lea
pushf
inc
adc
add
and
stc
iret
mov
dec
adc
sub
inc
movl
fdivrs
and
arpl
dec
pop
push
je
js
test
ss
lds
push
out
jo
push
and
dec
popa
lock
xchg
test
movsl
jb
xchg
aas
dec
pop
int3
jl
or
sahf
pop
xor
xor
sarl
mov
add
mov
ficoms
lods
int3
pop
lods
sbb
out
dec
leave
aad
jle
inc
adc
pop
iret
push
psrlq
push
stos
cmp
es
mov
lea
lock
or
and
inc
dec
pop
inc
inc
pop
pop
arpl
movsb
adc
pop
clc
pop
push
jne
shll
xchg
leave
add
push
cmp
pcmpeqd
and
dec
xor
jo
xorb
dec
stos
sbbl
inc
out
mov
adc
jle
mov
or
cmp
mov
push
push
call
adc
push
ss
pushf
xchg
pop
cld
pop
sub
mov
adc
mov
test
and
cmc
fdiv
fistpl
loopne
loop
hlt
pop
or
test
ss
ss
jb
or
mov
arpl
ret
cmpsl
adc
push
in
pushf
sahf
xor
imul
push
mov
and
push
shll
testb
fwait
mov
mov
add
sbb
mov
lahf
cmp
lods
popa
fdivrl
int
mov
pop
jb
ret
stos
xchg
mov
xor
sbb
lahf
xor
out
jae
mov
cmp
mov
xchg
add
outsl
xor
es
jnp
or
dec
xchg
pop
or
movsb
mov
adc
aas
jp
xchg
shrb
in
lret
fcoml
push
insb
cld
aas
cmp
xchg
cwtl
div
rcrl
inc
clc
outsl
cmpsl
inc
lahf
mov
or
aaa
pop
repnz
outsl
pop
or
scas
out
dec
inc
push
xchg
mov
cwtl
xchg
cld
jns
sub
rolb
xchg
scas
outsl
pop
pop
mov
inc
pop
push
xchg
push
in
pop
push
cld
scas
lds
mov
sarb
adc
je
pop
jmp
test
fwait
push
das
cmp
add
sub
clc
loope
ret
mov
inc
test
sbb
push
push
push
hlt
xchg
add
pusha
repnz
inc
loopne
and
adc
hlt
lcall
pusha
push
inc
repnz
pop
test
add
xor
push
mov
frstor
out
cmp
adc
pop
cld
inc
mov
or
cmp
repz
and
mov
arpl
inc
out
pop
xorl
aaa
add
mov
mov
or
ja
sub
mov
movsb
push
shll
adc
inc
adc
pop
sbb
push
sbb
cld
jp
in
movsl
call
out
fnstenv
add
cmpsl
lods
outsb
popl
xor
rorl
scas
xchg
mov
lock
add
loopne
icebp
imul
lret
es
push
cld
jne
or
out
pop
inc
pushf
mov
mov
movsb
push
ss
add
ror
jno
sbb
call
sub
sub
or
push
xchg
or
cmp
or
shll
inc
adc
cld
sbb
stos
add
stos
fisubrl
push
lret
pop
rolb
jae
divb
fs
sahf
adc
in
cmp
movsl
mov
push
sbb
mov
mulb
outsl
enter
add
in
xchg
jns
add
test
xorl
aam
stos
shlb
call
fwait
pop
mov
inc
mov
xchg
test
jge
add
in
stos
fisttps
js
lea
jne
into
aad
mov
pop
sub
dec
fs
mov
and
out
ljmp
pop
push
into
mov
pop
or
adc
adc
aaa
dec
out
adc
xor
bound
repnz
cmp
popf
sarl
push
pop
stc
cld
cmp
jl
sbb
mov
sbb
addr16
xchg
cli
lret
xchg
sbb
mov
push
btc
fimull
mov
js
dec
jbe
ficoms
movsl
decl
pop
sub
push
mov
call
sub
repz
daa
repz
repnz
lds
imul
loope
cmp
cmp
lahf
testb
scas
mov
jge
cld
test
adc
push
aam
sbb
in
scas
ja
fildll
in
pop
add
dec
scas
dec
test
push
adc
scas
ss
xchg
sub
mov
push
and
pop
jl
imulb
addl
add
inc
sbb
xchg
stos
rorl
adc
add
xchg
sbb
push
adc
ficoms
stc
or
mov
mov
mov
inc
mov
sbb
cmc
js
jmp
xchg
fmull
pushf
stos
push
lahf
sub
mov
mov
ljmp
pop
xor
pop
dec
jge
loopne
dec
mov
pop
cwtl
cld
loope
pop
jne
jp
adc
outsb
cmp
push
xchg
mov
adc
push
sub
push
in
sbbb
sub
dec
jmp
loope
jecxz
jno
test
xchg
add
arpl
mov
mov
testb
pop
stos
fnstenv
lea
scas
inc
dec
inc
mov
outsb
sub
ljmp
dec
dec
pop
loope
test
xchg
out
lcall
inc
lea
pop
jmp
sbb
pusha
es
repz
adc
cmp
popf
in
add
dec
call
or
loope
hlt
inc
addr16
adc
dec
push
mov
fistl
and
lcall
adc
mov
push
inc
mov
iret
in
or
int
fcompl
adc
aaa
lods
mov
adc
sbb
mov
cld
nop
testl
pop
adc
out
sbb
jmp
dec
data16
fistpl
xor
out
cltd
mov
inc
jno
negl
adc
xchg
aaa
inc
stos
pop
insb
in
xchg
lea
icebp
adc
mov
push
in
jl
mov
ss
movsl
aas
xchg
push
rcl
bound
cltd
mov
adc
inc
out
fwait
xchg
xchg
jo
add
sbb
inc
nop
add
jle
push
cmp
pop
jmp
sub
outsb
inc
loopne
sub
xchg
movsl
jle
xchg
stos
cmp
sbb
xchg
sbb
lret
dec
xchg
fwait
test
mov
adc
xchg
xchg
jmp
adc
das
jns
pop
jne
or
popa
jge
sbb
mov
rclb
aas
xor
pop
lcall
inc
test
insb
dec
sbb
sbb
xchg
adc
pushf
outsl
jmp
pop
cld
scas
loop
push
lods
movl
jl
lret
lret
cld
xor
adc
xor
cmp
dec
cld
das
push
add
sbb
shlb
sbb
sbb
sbb
jnp
and
jl
add
lret
sbb
cltd
mov
call
push
stos
popa
xor
sbb
dec
jl
pop
sbb
xor
fwait
dec
mov
fnstsw
addb
pop
hlt
dec
fwait
cld
div
lahf
in
imul
mov
lret
jo
jecxz
xchg
test
cmpsb
cli
inc
cmp
in
mov
sti
push
cld
into
mov
add
adc
lahf
mov
shlb
fcomip
leave
sub
sub
decb
stos
shlb
jno
iret
mov
xchg
subl
push
out
adc
cld
push
pop
test
mov
xor
lods
es
xor
jmp
push
pop
out
ljmp
aad
or
fcmovne
mov
and
enter
ret
call
push
xchg
mov
push
push
jecxz
or
jle
cmp
out
dec
loope
out
mov
jle
std
movsb
sar
inc
xor
inc
int3
insl
or
dec
lret
fcoms
orb
ljmp
fxch
cld
rorb
inc
dec
cmp
pushf
and
lret
clc
movsb
jl
sub
cmp
xor
nop
xchg
cld
out
scas
dec
jne
jl
lods
or
jmp
movsl
fstl
pop
call
repnz
fdivrl
sarb
cmpsl
out
mov
push
mov
in
xchg
lahf
sub
idivb
stos
dec
addr16
loope
jl
jmp
fbld
repz
lock
mov
pushf
pop
adc
ss
rorl
cmc
clc
mov
inc
sti
test
mov
cmpsb
cld
ds
mov
and
jp
popa
pushf
xchg
dec
mov
aas
mov
push
inc
jl
int3
loopne
fsubrl
sahf
rcrb
cmp
add
dec
adc
test
cmpsl
aam
inc
or
out
mov
and
adc
out
leave
stc
aaa
sub
jne
lcall
in
js
scas
loopne
add
cld
mov
aas
lret
inc
test
vmovhpd
cmp
jle
cmp
pop
adc
repz
or
jmp
leave
push
mov
daa
in
dec
add
pop
push
ljmp
fwait
mov
or
xchg
add
call
shlb
clc
stc
cltd
loop
xchg
xor
cld
cmp
rcr
push
inc
iret
adc
jl
cmp
pop
cmp
fwait
inc
dec
sub
add
rorb
lret
sbb
adc
xchg
fnstenv
stc
fs
mov
adc
cld
aaa
cwtl
stc
pop
sbb
ss
outsl
mov
jnp
repz
xor
rcll
jl
pop
dec
popa
pop
jnp
push
xchg
inc
cmp
fistl
leave
xchg
sbb
inc
js
push
out
pop
jne
cmp
lcall
clc
sub
cmpsb
mov
out
les
sbb
pop
arpl
xchg
ret
push
dec
xor
dec
jle
push
cmp
inc
pop
jne
cmp
fstpt
fxch
inc
dec
loope
sbb
jl
lock
daa
cmp
xchg
mov
push
adc
insl
jo
sahf
mov
lcall
push
sahf
inc
nop
pop
stos
stos
fnstcw
or
and
cld
aaa
xchg
mov
push
cmpsb
xlat
jb
jmp
push
sub
push
repnz
repz
add
lds
out
jnp
dec
inc
mov
cld
lods
xchg
nop
cmp
aaa
mov
xchg
xchg
enter
sbb
push
push
pushf
push
cmpsb
jge
adc
jp
jb
imul
rolb
dec
pop
or
pop
loop
push
xchg
pushf
fucomi
popa
inc
lock
jecxz
mov
add
pop
pop
xlat
or
stos
ds
pop
jl
data16
dec
loopne
sarl
dec
mov
jecxz
fdiv
inc
xor
lcall
clc
xchg
call
enter
sbb
xchg
lcall
xor
aad
fcom
mov
push
push
mov
inc
dec
or
xor
adc
cmp
adc
into
shl
add
shll
adc
scas
or
call
repz
int
lea
ljmp
cmp
jmp
inc
cld
setae
insb
push
repnz
pusha
inc
or
pop
sar
or
jbe
mov
out
repz
in
push
mov
call
pop
movsb
jle
dec
enter
inc
mov
sub
dec
in
arpl
inc
es
aad
sub
pushf
int
cmc
shrl
lods
mov
subl
cld
mov
les
outsl
push
sbb
out
rolb
pushf
mov
dec
ret
shlb
test
cli
mov
cld
movb
lret
fwait
sbb
add
xchg
pop
cmpb
in
outsl
popf
jp
cmpsb
stos
jo
mov
in
mov
mov
mov
adc
addr16
stc
and
jbe
orb
cld
enter
dec
push
adc
popa
ja
jl
loope
lods
pop
pop
clc
filds
xchg
sbb
cmpsl
cld
fs
adc
inc
repz
xor
addr16
icebp
pop
movsb
and
mov
sbb
mov
fs
jp
push
pop
loop
das
into
pop
lods
icebp
pushf
dec
test
stc
mov
or
std
xor
pop
adc
daa
mov
aas
and
add
sub
xor
cmpsb
cld
cmp
and
cwtl
sub
mov
ret
ret
or
pop
dec
push
push
mov
mull
ficoms
mov
stos
push
outsl
lea
ret
jg
in
sbb
fldl
cmp
cld
push
jg
enter
and
out
dec
xchg
repz
or
mov
dec
aam
cltd
sar
pop
mov
inc
test
cmc
mov
xor
fcomps
hlt
in
scas
lea
repz
push
sub
and
je
lret
xchg
mov
jl
std
or
movsb
and
mov
les
add
pop
dec
jnp
sbb
fcompl
sub
je
dec
insl
inc
push
xchg
call
shrl
mov
ss
clc
mov
mov
out
test
stos
inc
sbb
inc
push
or
sbb
sbb
xor
pop
mov
adc
shll
push
mov
inc
repz
inc
mov
push
movsb
out
jl
and
or
movsb
xchg
add
lods
sarl
fcom
and
pop
js
enter
aas
fisubl
jae
shrl
lds
inc
testb
mov
and
cmc
sar
adc
enter
xor
inc
es
insl
mov
and
daa
repz
stc
stos
sti
std
jb
mov
xchg
dec
mov
lea
dec
push
mov
jo
inc
push
mov
xor
test
inc
mov
mov
cmp
push
cmp
call
sbb
aaa
xchg
lds
dec
ret
shrl
mov
sbb
add
adc
mov
lcall
dec
cmp
pop
fmull
pop
mov
lods
add
mov
mov
dec
cmp
mov
adc
jmp
sub
sbb
lods
hlt
xchg
icebp
mull
jp
fwait
iret
loop
jl
in
idivb
and
cld
in
cmpsb
xchg
pop
and
push
ss
repnz
sbb
repz
inc
push
mov
dec
mov
adc
pop
xor
insl
xchg
ja
and
xor
adc
les
sub
popf
int
idivb
mov
aam
lahf
mov
inc
jle
sbb
sub
cld
lret
mov
xor
push
sbb
mov
add
fs
movsl
rcl
repnz
hlt
inc
scas
loop
call
adc
and
into
xchg
dec
mov
nop
rorb
inc
push
cmp
in
test
inc
push
mov
cwtl
repz
dec
and
and
and
inc
adc
cli
notl
ds
ja
ljmp
js
mov
and
sbb
scas
loope
xchg
pop
xchg
cmp
and
hlt
inc
and
in
mov
iret
pushf
inc
sub
lea
mov
dec
in
in
pop
pop
mov
lods
push
les
test
cmp
xchg
cmpsl
js
js
nop
pop
ficoml
cmc
cmp
dec
andb
cld
call
fdivs
mov
or
pushf
jp
cmp
or
jp
jg
inc
or
out
popa
ficoml
mov
fstl
mov
mov
dec
inc
cmpb
cmp
mov
movsl
stc
repz
stos
lcall
pop
dec
mov
xchg
xchg
int
or
dec
xchg
call
divl
fadds
stos
lds
push
mov
rol
lods
je
mov
fcoms
int
jae
fwait
popl
jge
mov
and
xor
ss
pop
cmp
mov
push
in
inc
xchg
cmp
jl
lret
push
repz
mov
loop
mov
xorl
icebp
js
repnz
dec
dec
sbb
mov
rolb
in
std
xor
push
adc
xor
ret
into
pushf
and
repz
ss
inc
jae
cld
jb
aaa
sti
in
xchg
sbb
mov
repnz
fiaddl
pop
repz
cmp
sub
dec
mov
push
xchg
cmpl
loope
pop
push
jo
scas
xor
xchg
aaa
mov
adc
and
out
push
cmp
dec
js
sar
cmp
arpl
cwtl
ret
jl
lock
dec
jp
ret
test
jl
dec
fidivl
xchg
xor
scas
rcll
repz
jmp
out
cli
cmp
inc
dec
xor
idivb
repz
loopne
mov
and
add
mov
test
pusha
aas
invd
mov
sbb
das
ret
out
mov
repz
inc
cmp
cmp
pop
fcom
or
fistl
adc
fstpl
mov
popf
hlt
icebp
sbb
lods
sbb
repz
push
test
fs
push
addr16
lods
dec
mov
mov
xchg
ds
daa
daa
fwait
mov
movsl
shll
xchg
cmpsl
push
pop
pop
test
aaa
dec
add
inc
enter
leave
dec
shlb
mov
xchg
pop
inc
test
cmc
cmp
fwait
pop
pushf
jge
add
daa
nop
add
out
testb
sub
dec
rorl
mov
pop
dec
ja
pop
xchg
adc
jg
in
sbb
jb
data16
dec
xchg
mov
iret
mov
rol
lods
cmp
in
xchg
xchg
and
out
or
pop
mov
repz
js
inc
lea
sub
cli
or
hlt
push
cld
dec
inc
xchg
test
fwait
jl
divb
inc
cli
mov
clc
sub
hlt
xor
sbb
and
outsl
loope
mov
pop
ds
rep
popa
orb
xchg
andb
xorl
dec
sbb
push
mov
jmp
xchg
mov
mov
js
outsb
int3
xchg
cld
cmp
sbb
lcall
pusha
xor
fidivrs
adc
inc
adc
push
or
jno
shrb
inc
in
cmp
xor
pop
jmp
outsl
sbb
mov
or
es
sahf
pop
adc
inc
leave
mov
popf
jo
jecxz
cwtl
mov
xor
xchg
sub
cld
cwtl
popf
scas
dec
lret
mov
sar
push
popa
cmp
mov
inc
mov
xor
out
mov
icebp
and
cmp
cmp
not
mov
push
loop
fcoms
cmp
mov
and
movsb
aaa
and
adc
cwtl
lds
xor
or
inc
pop
mov
fwait
cmp
int3
adc
add
xor
test
mov
imul
cmp
imul
dec
clc
lahf
lods
imul
mov
dec
xchg
adc
aam
frstor
pushf
mov
jb
xor
out
fwait
jl
mov
sub
xchg
push
mov
add
push
pop
fs
adc
xchg
xchg
jl
mov
mov
cld
sub
loopne
imul
nop
rorl
push
je
bound
dec
xor
jb
lods
pop
mov
mov
mov
mov
or
mov
daa
arpl
out
and
test
xchg
pop
test
hlt
or
cmpsb
rcrb
cmp
cld
mov
lock
mov
add
cmp
movsl
mov
lcall
push
loope
mov
ds
ss
es
popa
cmp
xchg
jecxz
mov
fsqrt
push
push
inc
push
cmpl
rcrl
shrl
xor
repnz
cmpsl
pop
xchg
pop
mov
out
or
popf
inc
mov
sbb
inc
dec
mov
out
divl
cmpsb
sbb
repz
out
in
mov
test
or
aaa
inc
jl
or
fists
sbb
add
jmp
stos
lret
mov
xor
outsb
sbb
movsl
inc
mov
pop
repz
es
mov
sbb
sbbl
inc
fnstsw
aad
loope
inc
and
push
movsl
cmp
push
xchg
ljmp
es
or
pop
fwait
imulb
aas
mov
addr16
aas
xor
sarb
movsl
addr16
sarb
mov
movsl
adc
cmc
jmp
add
rcll
int
xchg
stc
sbb
daa
cmp
jl
push
xor
test
repz
jnp
call
out
std
in
adc
out
inc
mov
sub
push
mov
shrb
xchg
dec
dec
mov
jecxz
sub
into
xchg
aas
cmp
xor
mov
imul
testb
xchg
pushf
pop
push
aaa
cltd
addr16
push
dec
das
movsl
xchg
ds
cli
mov
dec
in
out
cltd
cmp
cld
cmp
add
sbb
xor
add
insl
push
dec
dec
adc
cs
call
mov
paddw
sub
or
push
dec
repz
cmpsb
push
out
pusha
lret
orl
adc
jmp
out
stos
inc
ss
cwtl
cld
bound
lods
xchg
not
sbb
sub
jl
inc
mov
push
out
and
mov
jl
movsb
push
mov
inc
push
loop
pop
dec
int
mov
xor
sub
jl
js
mov
jno
mov
cld
js
dec
out
add
mov
popf
xor
hlt
xchg
xchg
inc
sub
jbe
testb
idivb
mov
mov
jle
jecxz
and
adc
fwait
mov
gs
ds
pop
rorb
out
mov
inc
mov
xchg
sbb
lahf
stos
or
or
jo
cmp
popf
fdiv
mov
pop
in
jle
into
out
dec
imul
pop
out
sbb
or
push
add
gs
mov
mov
in
xchg
cmp
adc
cld
and
ret
xchg
xor
pop
aas
fisttpl
xor
into
popa
and
ds
and
xchg
movsl
aas
outsl
jg
and
mov
out
test
sub
push
pop
xchg
cld
ds
sub
or
movsb
je
push
jae
popa
mov
int
inc
cmp
fadds
inc
dec
in
iret
or
jmp
sahf
lcall
clc
cld
imul
push
inc
and
jl
or
mov
sbb
mov
inc
push
push
cmpsl
mov
pop
push
incl
add
ret
call
inc
inc
out
lahf
mov
cmp
pushf
xchg
mov
rcrb
and
or
add
inc
pop
xchg
mov
inc
mov
cli
test
xchg
push
imul
pop
xchg
repz
inc
and
jae
icebp
bound
gs
lret
fs
mov
shr
sub
inc
imul
push
sbbl
cld
add
mov
nop
sbb
pop
or
push
bound
cld
lcall
cmpsb
outsl
mov
je
mov
xor
mov
mov
mov
pop
test
jae
sbb
loop
jecxz
and
jl
jns
push
test
sbb
lock
repz
call
mov
jecxz
sarl
xor
cwtl
stos
aas
adc
aas
lret
dec
or
out
or
js
jne
add
lods
fwait
hlt
imul
dec
mov
pushf
mov
in
push
lret
pop
ja
add
fnstsw
fnstcw
add
inc
push
cld
or
mov
mov
repz
movsb
inc
cld
jg
enter
pop
mov
ret
xlat
loope
cmp
loopne
push
aam
xor
les
aaa
inc
imul
jnp
sbb
popa
aaa
and
ds
xchg
add
scas
cld
jl
pop
sbb
sub
ljmp
dec
mov
mov
ret
ja
in
rorl
pop
fadds
out
lret
xchg
idivb
lcall
sbb
pop
xchg
scas
inc
cmp
loope
js
in
xor
fs
jl
mov
inc
push
mov
mov
inc
cmpsb
push
lock
jb
xchg
adc
sub
dec
hlt
lret
stos
or
mov
cmp
lcall
into
xchg
repz
pop
jl
push
push
out
mov
addr16
xchg
or
or
cmp
outsl
pop
inc
sti
pushf
int3
pop
scas
enter
repz
xor
jb
or
mov
nop
or
sbb
cmpsb
xchg
xchg
stos
jle
sarb
loopne
insl
stc
clc
dec
idivb
push
subl
ss
outsb
and
lahf
pop
pop
out
aam
lods
mov
push
cld
mov
xlat
repz
mov
fidivrl
stos
push
adc
mov
pushf
jo
jnp
sbbl
dec
add
pop
popa
jnp
push
adc
xchg
lret
scas
sahf
push
movsl
sbb
dec
push
stc
out
push
mov
lds
sbb
sbb
fbld
xchg
xchg
adc
mov
and
repz
inc
lret
push
adc
mov
mov
pop
mov
cld
mov
test
mov
fnstcw
or
nop
or
call
mov
stos
sub
adc
jbe
call
addr16
pop
bound
jne
dec
push
dec
cltd
ja
rcll
cmc
xchg
inc
repz
inc
adc
add
sahf
mov
mov
das
xor
push
cmpsl
sub
pop
ja
or
cmp
adc
in
fsubrs
loop
loopne
fs
repz
pop
adcb
mov
xor
adc
add
cmpsl
mov
outsl
jmp
jecxz
mov
jge
clc
or
aas
sub
ss
jge
mov
jg
add
aas
fwait
icebp
stc
sbb
sbb
add
mov
icebp
dec
sub
popf
adc
or
xchg
ret
jmp
mov
mov
in
cmp
stc
xor
pop
and
or
enter
lea
pop
aas
cmp
push
xchg
aam
jmp
and
outsl
fdivs
dec
rcll
mov
push
aad
lcall
ret
aam
nop
addr16
repnz
enter
clc
push
sub
outsb
andb
lcall
dec
lds
inc
pop
aaa
push
mov
mov
out
ret
push
pop
test
lods
sbb
mov
xor
ffreep
inc
cmp
ds
push
in
rolb
mov
jbe
mov
fcomps
fwait
push
out
fstpt
xchg
mov
or
cmovl
out
xchg
add
rcrl
mov
pop
outsl
mov
push
inc
test
adc
sbb
movsb
std
rcrb
aaa
pop
or
jnp
rcrb
xchg
data16
xor
jl
call
xchg
lock
bound
mov
ljmp
stc
int3
sub
xor
pop
pop
inc
xchg
jb
cmpsb
adc
aas
lret
push
and
repz
shl
mov
mov
rolb
xchg
adc
repz
aas
xchg
out
jno
lods
and
pop
pop
add
movsl
rorb
pop
sbb
sti
push
sbb
inc
lods
pop
xlat
ss
push
xor
xchg
or
icebp
je
scas
leave
jbe
jl
daa
sahf
push
pop
mov
nop
xor
ffreep
out
andb
in
mov
sbb
xchg
mov
fisubl
mov
clc
fisubrl
test
push
pop
sbb
dec
lods
inc
or
nop
out
loope
and
xchg
addr16
pop
dec
lods
add
gs
repz
push
cmc
scas
out
and
jle
inc
xor
daa
inc
xorl
cwtl
sbb
pop
out
adc
or
ja
mov
test
aam
test
test
mov
inc
addb
movsl
sub
pop
mov
mov
lea
movsb
cmp
sbb
xchg
scas
or
inc
pop
pop
add
mov
movsl
mov
loope
xchg
mov
cltd
jl
mov
push
imull
inc
adc
cld
xor
test
jnp
push
repz
addr16
jl
mov
cld
sub
ljmp
cmp
shll
dec
int3
les
cli
pop
out
adc
cmp
dec
int
aas
adc
sbb
xchg
nop
pop
push
aad
mov
push
adc
adc
repz
mov
test
jge
sub
xchg
repz
dec
mov
jb
jo
sub
ss
pop
and
push
mov
addr16
mov
push
mov
out
movsb
adcl
and
aam
lcall
cmp
pushf
inc
fistl
pop
and
js
mov
jnp
hlt
loopne
lods
inc
push
adc
les
repz
imul
pop
aaa
xchg
jb
ret
out
aam
pushf
lea
push
rorb
add
ss
ss
xor
xchg
adc
test
movsl
jnp
sbb
jno
dec
mov
cmpsb
pop
mov
and
add
pusha
sbb
push
mov
jl
or
cld
in
icebp
sbb
adc
sbb
lods
out
adc
cmp
jl
js
loop
fdivl
mov
push
xchg
pop
mov
cwtl
test
rorl
and
pop
fidivl
xchg
adc
repz
mov
push
jecxz
push
xchg
xor
dec
xor
pop
cmp
sub
loopne
mov
dec
or
xchg
shll
loop
cltd
or
and
dec
cld
jbe
xor
or
inc
cmp
adc
orl
adc
repz
mov
ds
push
push
xor
repz
int3
fdivs
cmp
adc
dec
pop
bound
dec
pop
xor
das
xchg
pushf
jnp
add
xchg
int3
cmpsl
pop
xchg
inc
cmp
in
adc
xorb
xchg
repz
lahf
cld
pop
mov
cld
or
dec
fstpt
and
shlb
repnz
lret
or
push
pop
add
xchg
lret
xor
ficoml
mov
int
insl
out
pop
lcall
push
andb
mov
push
loopne
adc
mov
xchg
clc
arpl
mov
xor
sbb
inc
xchg
xchg
jo
cmpsl
aaa
pop
jecxz
repz
sbb
push
loope
cmp
and
or
mov
cmp
scas
xchg
pop
mov
andl
sub
xchg
addr16
lock
jae
ds
mov
inc
fildl
fnsave
mov
xor
xor
mov
out
xchg
push
mov
add
dec
loope
cmp
mov
shl
adc
in
push
lods
or
out
cmc
add
or
adc
mov
lods
adc
push
nop
das
xor
out
and
pushf
dec
dec
jmp
jl
ss
scas
cmp
scas
or
jg
push
shl
mov
push
movsl
sbb
push
dec
cmpsb
xchg
push
lds
aaa
mov
out
and
mov
lds
sbb
and
dec
gs
push
mov
push
adc
loopne
mov
pushf
fists
xchg
int
es
xor
lea
mov
stos
xor
cltd
repz
sub
or
xchg
pushf
or
pop
pop
pop
mov
push
repnz
cld
dec
inc
in
addr16
jl
sbb
out
pop
cmc
cmp
xchg
in
loope
push
xlat
adc
out
pushf
movsl
jge
mov
mov
sub
xchg
dec
xchg
cwtl
pop
adc
lret
dec
xchg
mov
inc
sbb
movsl
pop
push
mov
dec
aam
cmp
dec
in
push
cld
les
fisttps
lods
psrld
inc
sub
adc
push
add
lret
test
sarb
mov
out
movsl
inc
pop
nop
rorb
xchg
and
test
inc
jge
iret
jmp
mov
push
cmpsl
adc
rep
dec
adc
cld
loop
into
jl
les
loop
jge
add
jmp
jmp
sbb
leave
bnd
mov
movsb
or
pop
lret
or
loope
adc
ss
or
repz
out
mov
lods
outsl
push
mov
sbb
aas
push
loop
xchg
mov
int
aam
add
mov
scas
sbb
lock
sbb
cltd
lahf
pop
mov
and
movsl
push
lcall
pushf
mov
ljmp
in
repz
push
dec
or
inc
rolb
lods
xchg
xor
insl
push
lods
outsl
pushf
outsb
push
sbb
xorb
ret
inc
mov
push
ret
xor
rorb
int
stos
repz
cli
aad
and
ret
adc
call
movsl
lahf
xchg
clc
cmpl
adc
out
popf
insl
sbb
dec
mov
stos
loope
xor
fmull
js
mov
call
data16
mov
sbb
jno
dec
repz
pop
incb
or
jl
pop
cmpsl
clc
out
xchg
loope
jmp
repz
sub
iret
jmp
es
pop
aad
jle
adc
and
bound
jl
and
push
cld
sub
pusha
jmp
jne
xchg
and
out
jno
dec
push
mov
xor
jmp
sub
out
adcb
pop
mov
sar
les
in
inc
dec
push
repz
jne
std
or
lea
out
mov
outsl
sbb
sahf
xor
mov
outsb
xchg
popa
inc
push
and
mov
sahf
sbb
or
loop
shll
push
stc
out
jecxz
orb
xor
push
xor
out
xor
mov
idivl
stc
dec
adc
test
arpl
cld
pop
push
cwtl
lods
push
cltd
xor
leave
imul
lret
daa
xchg
aam
and
pop
adc
loope
leave
push
in
inc
pop
inc
pop
sbbl
push
xchg
fistps
repnz
push
shll
out
fnsave
shl
out
push
mov
fmuls
mov
inc
xlat
add
push
cld
jae
add
fs
or
movsl
jb
lret
xchg
inc
mov
inc
shrl
pop
mov
in
mov
inc
xlat
mov
and
dec
inc
push
dec
repnz
add
leave
sbb
adc
push
icebp
push
dec
add
lods
xor
aas
pop
sbbl
in
pusha
xchg
mov
orl
dec
in
push
out
lahf
mov
les
xor
pop
inc
push
je
cwtl
nop
notb
mov
or
adc
jmp
mov
inc
cmp
jb
rcl
pop
dec
in
and
fmull
push
pop
dec
cmp
sarb
popf
jne
lahf
cmpsb
stos
jle
mov
aaa
add
fmuls
xor
outsb
push
push
dec
xchg
inc
cmpsb
divl
jp
cld
inc
lods
pop
mov
xchg
inc
arpl
mov
stc
push
pop
test
in
inc
repnz
iret
fistpl
popa
repnz
sbb
cmp
inc
and
xchg
rep
fbld
bound
cwtl
sbb
fdivs
xor
sub
out
mov
into
cld
push
push
dec
xchg
out
xchg
push
xor
push
xchg
inc
pop
dec
jl
add
add
mov
cmpsl
ljmp
rorl
rorb
sub
jmp
cld
popa
movsb
movsl
jl
ret
les
test
sbb
clc
sti
push
insl
xlat
lahf
jno
xchg
jp
sbb
jbe
mov
lods
dec
sbb
jbe
jnp
lcall
int
out
ret
inc
aas
movsb
fmuls
test
push
insl
imul
xchg
adc
ss
repz
scas
outsb
cmp
js
adc
andb
call
not
adc
jns
jmp
fiaddl
iret
in
sub
mov
repz
sti
jnp
lret
lock
push
out
dec
iret
push
dec
sbb
enter
test
imulb
pop
rorb
cld
in
push
in
dec
xchg
push
movsl
lret
cmp
bound
daa
or
out
dec
rorb
les
sbb
jp
cmpsb
scas
fldenv
jmp
mov
aad
xchg
adc
mov
js
jmp
nop
pop
out
std
cli
pop
mov
cmpsb
icebp
movsl
jg
cmp
cld
xor
aas
mov
xor
ljmp
popa
sub
mov
sbb
dec
jmp
sbb
jl
mov
xchg
repz
or
bnd
push
lds
mov
int
loopne
mov
inc
pop
pushw
push
bound
lret
pusha
dec
aaa
adc
insb
shlb
sub
mov
pop
or
pushl
fwait
pop
dec
repz
dec
xlat
aaa
inc
inc
fwait
mov
push
out
insl
jl
loop
and
leave
pop
mov
or
pop
and
clc
xlat
or
push
xchg
mov
jp
out
nop
icebp
in
mov
mov
fisubrs
int
and
mov
fiaddl
sbb
add
cmc
inc
inc
push
ret
and
loope
mov
add
dec
jl
cmpsl
adc
lea
adc
repz
pushf
bound
xchg
sbb
fsts
shll
leave
in
out
test
or
dec
mov
sub
xor
jl
cmpsb
outsb
jp
clc
in
lret
rclb
pop
add
pop
fcomp
dec
loop
jg
or
repz
fnstenv
out
mov
js
jl
dec
sub
fs
out
into
adc
repz
call
bound
jnp
dec
sbb
xor
cwtl
adc
addr16
sbb
or
in
bound
cmp
jne
pop
out
negb
jg
pop
addb
xchg
mov
iret
fimuls
out
mov
icebp
mov
fwait
cmp
mov
jl
mov
or
fdivrl
fadd
lret
inc
cltd
cld
jmp
es
inc
shrb
jmp
repz
das
repz
jb
inc
cmp
shrl
out
ret
inc
or
sub
jp
cmc
pop
dec
mov
cmp
repz
cli
and
dec
mov
adc
mov
cmp
sbb
cmp
mov
pop
shl
fdivrl
adc
clc
push
cmp
cmp
jl
push
push
imul
or
cmpsl
xchg
mov
xor
jle
cli
pop
dec
dec
pop
xchg
cmp
inc
iret
cmpsl
mov
mov
sti
push
and
jl
shlb
jp
ss
shrl
push
repz
int
mov
fwait
shld
mov
push
loop
lret
lahf
dec
push
bound
lock
test
ret
scas
xchg
ficoml
xor
inc
insb
cwtl
fildl
mov
test
cmp
lods
cmp
pop
adc
and
cwtl
mov
push
pushf
ss
divb
mov
repz
push
adc
xchg
mov
prefetchwt1
popf
and
dec
jecxz
mov
data16
adc
nop
pop
je
inc
cmp
push
repz
mov
lret
rcl
inc
push
shr
inc
cld
xchg
fisttpll
xchg
xchg
cmp
xor
loopne
adc
adc
inc
clc
out
adc
mov
xchg
push
es
jl
xchg
mov
test
pop
inc
push
and
movsl
xor
cmp
loope
fs
inc
adc
lret
add
pushf
jne
mov
xor
fxch
out
lcall
jg
jmp
mov
jle
mov
test
pop
pop
xor
mov
cld
cwtl
xor
cmp
xchg
pop
loop
rol
and
aaa
fisubrl
adc
add
je
or
add
push
outsb
pop
xchg
sbb
or
loop
mov
daa
cld
jbe
out
in
jecxz
push
xlat
push
call
xchg
repz
int3
es
sahf
xor
sub
cmp
xchg
cli
pushf
or
lea
int3
lods
cltd
adc
xor
fistpll
pop
jnp
aas
jne
arpl
jl
mov
in
sub
sbb
sub
cpuid
shlb
pop
pop
stos
cmp
jg
ds
jl
sub
dec
ja
jle
mov
jnp
xchg
xlat
pop
sahf
int3
inc
mov
repnz
cmpl
repz
sub
xchg
adc
jb
adc
das
cmp
lcall
xadd
cmp
jmp
rcrb
cmp
pop
mov
lock
adc
dec
popa
outsb
outsb
fs
in
jne
cmpsl
incl
repz
pusha
add
inc
scas
aam
movsl
out
or
sub
cmc
jmp
jno
bnd
and
fistpl
dec
cmpsb
fistpll
xchg
mov
ja
inc
repz
mov
or
dec
jle
push
and
sbb
inc
mov
out
push
mov
mov
jns
lret
test
clc
fnstcw
in
das
loop
divl
jns
gs
push
adcl
push
xchg
inc
jecxz
pop
repz
repz
cmp
push
cli
jbe
sub
aas
imul
fsubrs
lcall
out
sbb
cmpsl
rclb
test
pop
cli
repz
inc
dec
push
pop
adc
sub
inc
ret
dec
push
and
imul
jne
repz
adc
mov
lcall
repz
jmp
push
int
jecxz
fwait
inc
rep
adc
push
pop
loop
sub
sbb
ja
std
jne
in
mov
push
clc
test
popa
in
lods
cwtl
xchg
call
dec
cmpsl
dec
xchg
fs
testb
cld
push
pop
and
movsb
repz
adc
push
inc
sti
mov
in
adc
push
push
or
out
lret
aas
mov
call
repz
ret
test
jl
mov
add
push
or
outsl
inc
push
mov
inc
or
add
xor
pop
cmpsb
mov
or
iret
out
loope
stc
jbe
push
test
mov
addr16
adc
dec
inc
dec
xchg
adc
lock
add
adc
js
jg
gs
test
xchg
insl
push
and
filds
mov
jne
repz
dec
loope
or
and
jmp
movsb
mov
les
fwait
pop
repz
push
lcall
shlb
inc
filds
ror
aas
cmpsl
aas
dec
adc
inc
push
jnp
shll
movsl
mov
sbb
lahf
adc
or
mov
in
lock
lock
cmpsl
jecxz
movsl
shll
shl
push
jbe
push
fnstsw
pop
sbb
push
add
add
fs
inc
add
clc
xor
insb
cmp
idivb
movsb
mov
push
sbb
cmpsl
or
push
in
cmp
sub
cmpsl
xchg
cwtl
pop
jb
mov
dec
jmp
rcr
adc
dec
pop
adc
aam
dec
dec
ja
sbb
push
loop
popf
adc
or
imul
xor
and
bound
bound
jl
and
mov
pop
adc
mov
mov
in
mov
cmc
mov
cmp
ret
sbb
das
dec
sbb
fistpll
sbb
mov
daa
xor
sub
inc
push
stc
mov
scas
cld
push
rorb
bound
nop
cmp
push
jle
shlb
sbb
ja
sbb
jmp
loopne
lea
stos
mov
sub
dec
ds
sub
sbb
push
lahf
jmp
movsl
mov
fidivl
xor
dec
mov
outsl
int3
inc
mull
adc
mov
xchg
das
movsl
fwait
pop
pop
xor
cmp
push
dec
cmc
ret
out
mov
and
cmp
aas
xchg
scas
outsl
movsb
adc
rcll
cmc
add
xor
movsb
ds
mov
mov
xlat
sbb
in
ret
aad
ret
decb
scas
inc
ret
lea
repnz
xchg
in
out
movsb
icebp
clc
ret
movl
dec
shll
lods
and
into
dec
or
xchg
jp
cmp
test
xchg
sub
adc
ja
loope
and
jle
add
ret
movsl
stos
push
sbb
shl
and
jl
inc
mov
jecxz
in
movsl
or
pop
pop
clc
int3
flds
xrelease
xchg
cmpsl
jb
dec
repz
mov
push
cmpsl
loopne
xchg
jnp
mov
or
push
fadds
fpatan
cmc
mov
jle
xchg
fdivr
cmp
or
cmc
mov
inc
inc
orb
pop
mov
popa
cmpsb
cmp
xor
pop
dec
in
or
repnz
out
push
out
fdivp
or
or
mov
cmc
mov
jae
pop
mov
jp
movsb
pop
xchg
mov
dec
xor
add
sbb
repz
aas
xchg
inc
push
fs
lods
push
push
mov
push
scas
in
inc
or
push
js
add
adc
loopne
push
jbe
cmpsl
jecxz
test
or
outsb
sub
push
add
and
and
lods
pop
dec
enter
add
gs
jg
pop
push
icebp
pop
adc
push
jl
aaa
cli
sbb
gs
sbb
cwtl
mov
nop
cmc
sub
addr16
xchg
jnp
adc
int3
xchg
in
pop
mov
mov
add
sbb
jns
stc
xchg
jl
fstpt
mov
repz
push
popf
es
cltd
or
mov
sbb
popf
adc
roll
add
or
xchg
movsl
xchg
jp
inc
dec
sbb
mov
adc
or
mov
push
out
aam
sub
in
mov
dec
pop
jl
lcall
pop
sub
jl
inc
mov
pop
daa
add
xor
dec
xchg
jl
xor
add
repz
scas
test
mov
mov
cld
add
out
fwait
mov
pop
pusha
inc
dec
je
cwtl
addb
repz
aas
sbb
xchg
test
popf
xchg
test
inc
sub
rcl
push
cmp
sbb
pop
or
fwait
es
adcl
mov
xor
lea
sbb
xor
push
mov
call
or
inc
mov
pop
mov
adc
push
sub
or
pusha
movsb
push
cwtl
push
sbb
mov
stos
inc
adc
xchg
sbb
cli
insl
or
fdivs
pushf
call
sti
mov
mov
pop
mov
push
cld
pop
ss
cmpsb
mov
rcl
out
push
leave
lock
stos
dec
dec
pusha
push
cmpsl
xchg
xor
add
pop
mov
mov
mov
jno
ret
loop
es
das
inc
pop
iret
repz
aaa
dec
adc
pop
shlb
cmpsb
cmp
dec
insl
dec
je
pop
aaa
push
ja
inc
add
movsb
cmp
lret
cmpsb
sbb
sbb
jmp
nop
cwtl
out
mov
xchg
jl
out
xchg
out
cmc
scas
fsub
xor
lret
cli
imul
fcmovbe
gs
js
test
pop
or
in
adc
int3
pop
loop
test
out
lahf
aas
test
popa
cwtl
fs
jmp
out
xor
rolb
and
xchg
adc
inc
push
scas
mov
lods
repz
mov
inc
icebp
xchg
loopne
stos
aas
bound
scas
sbb
xchg
hlt
mov
jnp
jb
adc
sbb
popf
mov
mov
mov
cmc
push
sbb
inc
scas
adc
dec
push
jle
mov
cwtl
push
icebp
loopne
xchg
repz
bound
mov
lds
fxch
add
scas
mov
jg
cmp
jle,pt
arpl
xor
outsb
inc
lea
pop
or
cld
nop
inc
inc
cmp
rolb
push
xlat
and
pop
lret
xchg
cld
pusha
fstpt
sub
or
xor
gs
in
jecxz
and
add
aas
aas
rol
xor
repz
inc
mov
enter
icebp
pop
adc
ja
sbb
movsl
clc
push
cld
cmp
hlt
jge
lahf
mov
jp
repz
push
xchg
gs
xor
lods
pop
lcall
mov
dec
sbb
shlb
jl
or
icebp
mov
cmc
je
in
int
mov
mov
inc
cld
sti
enter
fldcw
jbe
loopne
jnp
sahf
popf
sub
dec
pop
xor
cmp
mov
fwait
cmp
popaw
es
imul
add
xchg
and
rorb
nop
scas
xor
cld
dec
ret
fisubs
icebp
shll
mov
or
std
push
adcl
inc
jno
lahf
aaa
int3
outsb
push
lahf
iret
int
mov
xchg
xor
repz
or
lea
fs
sti
aas
and
in
enter
es
jbe
cmp
daa
addb
movsl
push
xlat
and
pop
adc
daa
pushf
xor
lds
dec
jmp
push
xchg
movups
in
lock
scas
test
in
test
rcrb
push
js
movsl
mov
or
and
lret
divl
lds
stos
dec
mov
gs
out
adcl
data16
xor
sti
leave
pop
lea
xchg
fwait
movsl
stos
fisttpl
mov
andb
fcoml
add
xchg
sbb
loop
jb
adc
daa
cld
shll
inc
subb
or
andb
pop
iret
repz
cmp
xchg
outsb
xor
in
into
inc
push
out
jle
cmpsb
jl
enter
hlt
shl
sbb
adc
fwait
inc
lcall
lret
mov
clc
pop
fisttpl
fists
mov
or
xor
test
pop
test
sub
repnz
pushf
dec
fs
out
mov
inc
aas
mov
xlat
add
aas
cmp
adc
adc
jmp
inc
dec
mov
sbb
adc
mov
push
mov
sbb
mov
jne
jne
adc
pop
jne
jl
movsb
addr16
mov
push
ret
jns
push
lods
inc
cli
cmpsl
jno
cld
or
out
push
or
aam
lds
fwait
sub
inc
push
push
lods
cmp
push
pop
sbb
out
mov
cltd
aas
and
faddl
inc
push
in
push
mov
ret
xchg
pop
add
repz
imul
mov
or
mov
decl
pop
or
add
push
sbb
cmp
test
cld
outsl
fwait
mov
push
mov
movsl
adc
fisubl
push
in
fcomps
popa
call
fstpt
push
mov
stos
and
xor
xchg
cld
test
divb
imull
scas
mov
push
dec
cmpsb
roll
xor
push
lock
in
xchg
es
lods
inc
sbb
or
and
in
push
outsb
or
mov
or
sbb
add
out
or
xchg
es
adc
lods
sbb
xorb
dec
dec
mov
int3
mov
sbb
out
iret
xchg
fimuls
mov
mov
xor
jl
add
lahf
mov
mov
in
sbb
push
out
fists
mov
stos
inc
scas
movsb
xchg
sahf
in
jl
cmc
dec
lods
push
pop
jnp
jl
push
xlat
and
dec
mov
jnp
shlb
ss
bound
dec
int3
adc
mov
cmpsl
cmp
pop
lahf
out
cmc
stos
xchg
mov
xchg
xchg
or
adc
inc
mov
insb
cld
sub
and
repz
fadds
inc
inc
mov
repz
lock
out
std
xchg
mov
out
xlat
jp
adc
and
xor
gs
jl
bound
lods
ret
push
jbe
sub
jecxz
mov
inc
inc
xor
ja
xchg
mov
fwait
stos
repz
cmp
mov
xor
mov
fstps
and
in
mov
jmp
cwtl
fsubrl
dec
cmp
int3
out
xchg
test
lret
dec
pop
cmp
ret
fcoml
mov
cmp
push
or
cmp
outsl
enter
adc
stos
jmp
repz
add
std
jg
adc
xchg
cld
sub
out
fmull
mov
add
lcall
cmp
in
pop
and
mov
push
mov
cmp
dec
sbb
dec
out
fstpl
mov
iret
js
mov
sub
adc
xchg
inc
leave
push
inc
dec
outsb
test
push
out
arpl
dec
mov
xor
dec
imul
rorl
popa
repz
andb
and
daa
and
mov
and
aam
repnz
cmp
add
and
adc
lds
scas
fcoms
mov
pop
repz
cmpsb
xchg
pusha
inc
or
std
adc
mov
adc
repnz
cmp
mov
mov
test
iret
popa
add
test
cld
pop
cli
mov
mov
xorb
xchg
cmp
iret
aas
dec
mov
cld
insl
stos
cmc
repnz
lcall
xadd
icebp
pop
jmp
mov
adc
cmpsl
fistl
jle
xor
fdivrs
xor
pop
ficoms
stos
dec
cmp
iret
sbb
inc
lods
mov
ljmp
imul
xor
repz
aaa
jp
inc
ret
cmpsl
scas
enter
movsl
xor
sbbb
shll
aas
pop
cmp
adc
out
pop
jnp
test
jno
cltd
mov
enter
mov
lea
cltd
lret
fidivrl
mov
aaa
andb
sbb
mov
lahf
inc
push
cmp
or
inc
push
insb
and
loopw
addr16
jno
or
ret
xor
sbb
cltd
and
add
ds
test
or
lods
mull
imul
repz
insl
adc
int
fisubrs
orb
push
aam
mov
xchg
jl
xchg
mov
mov
lahf
dec
sti
or
sbbl
cld
xor
pop
and
mov
mov
jmp
fcmovbe
xchg
adc
adc
aas
add
jl
cmc
xlat
mov
gs
fldcw
mov
out
adc
jo
int3
inc
push
inc
and
lret
insl
out
mov
bound
pop
adc
xor
inc
xor
dec
push
inc
mov
xor
cmpsl
mov
sub
sub
sub
sub
imul
repz
out
adc
popl
aam
xchg
repz
mov
xor
mov
arpl
sbb
subl
mov
clc
and
lea
xor
or
or
add
movsl
cmpsb
rcrl
pop
sbb
outsb
int
dec
iret
inc
fcmovnb
pop
out
adc
dec
sbb
out
out
pop
roll
mov
mov
call
mov
lock
cmpsl
mov
push
jp
add
pop
rorl
sbb
cld
and
loopne
aad
scas
orb
pop
fsubrs
push
pushf
sbb
jb
aaa
lods
push
sub
jl
ror
adc
inc
mov
pop
cwtl
sbb
xorl
inc
cmp
add
leave
clc
push
pushf
pop
pop
scas
out
addr16
mov
imul
cmpsb
sti
cmpsl
in
jl
mov
mov
repz
sbb
xor
addb
adc
mov
sarb
fmuls
pop
leave
mov
rorb
mov
xchg
fs
mov
paddd
int3
cmpb
mov
xchg
out
je
lds
jl
jge
or
or
xor
or
clc
cmp
sar
adc
dec
pop
out
arpl
add
dec
adc
es
mov
push
and
jnp
in
stos
rcll
jle
push
fs
cld
xor
arpl
test
and
xchg
mov
or
push
pop
xlat
inc
adc
sarb
mov
loope
mov
sarb
push
in
out
jbe
sbb
add
ljmp
leave
in
pmaxub
cwtl
push
test
adc
cmp
insl
ljmp
jae
xlat
push
or
jo
xchg
or
inc
jle
xchg
enter
xlat
dec
mov
jns
add
mov
pushf
das
xchg
jno
lock
jg
mov
push
test
or
sbb
test
xchg
mov
sahf
rclb
xchg
int
bound
mov
movsl
jbe
je
mov
xchg
cld
ss
fwait
ljmp
cmp
cli
jo
imul
sub
loop
dec
inc
int
fs
xor
mov
repnz
mov
add
lds
pop
test
aas
jb
fdivs
fdivs
jmp
sbb
jo
or
test
sbb
and
jle
mov
pop
repz
pop
fsubr
mov
push
scas
xor
mov
xchg
movl
pop
aas
gs
xchg
sti
sbb
shll
or
notb
cld
push
jge
pop
movsl
sub
push
and
cmp
repz
mov
aad
leave
ljmp
cmp
push
jnp
push
test
loopne
dec
aas
sti
pusha
sbb
scas
push
scas
lods
das
xchg
xor
adcb
push
imul
pop
mov
xchg
mov
imul
adc
adc
loopne
mov
pushf
stos
sbb
jp
icebp
and
jl
or
fstpt
test
test
sbb
pop
xchg
sub
adc
or
mov
push
shl
xor
dec
mov
scas
and
dec
mov
js
mov
jl
mov
sub
xchg
leave
inc
add
and
jmp
and
cli
cmpsb
xlat
or
add
mov
jbe
dec
cmp
cmp
adc
loopne
sub
jp
aaa
mov
movsl
sub
xchg
dec
fsubs
xchg
scas
and
xchg
sbb
mov
outsl
sbbb
adc
mov
push
mov
cld
xor
and
cmc
mov
cwtl
cld
aam
sbb
mov
scas
lock
ret
xchg
loop
lods
stos
inc
pop
sbb
loopne
push
paddsb
outsl
cli
mov
mov
or
bound
sub
fidivrs
mull
jl
xchg
dec
jge
inc
sti
xor
mov
sub
sbb
or
xor
ret
and
add
xchg
xor
xchg
iret
jae
sbb
inc
repz
mov
stos
mov
imul
out
add
add
ja
jle
js
test
fistps
xor
addr16
and
std
adc
mov
jno,pt
fcoms
and
movsl
push
mov
jp
repz
push
inc
lcall
orl
mov
lret
iret
mov
faddl
adc
push
xchg
pop
or
ljmp
decl
xchg
or
sbb
xor
aad
push
arpl
inc
pop
adc
or
and
inc
fsubrs
dec
and
inc
adc
adc
ret
loope
je
scas
sarb
inc
cmpsl
lahf
or
mov
shrl
or
repz
pop
sub
or
fwait
scas
loope
push
jg
dec
lret
push
test
and
lock
dec
insl
sbb
dec
xchg
les
lahf
or
add
pop
dec
loopne
lods
sti
push
pop
pop
mov
adc
ljmp
in
sbb
cld
mov
sbb
inc
and
jns
or
push
xor
gs
inc
xorb
lcall
dec
xor
or
mov
cmp
sub
jnp
out
fildll
gs
xchg
cmp
cmp
and
adc
mov
adc
and
out
cmp
sub
movntq
push
jns
nop
xor
lods
cwtl
mov
mov
xor
scas
inc
jmp
cld
repz
dec
repnz
loope
mov
push
hlt
sbb
jmp
pop
insb
aad
sarb
add
xchg
mov
cmp
insl
fidivrs
push
cld
icebp
pop
push
lods
scas
cmpb
lock
mov
imul
or
sub
jl
push
pop
and
lea
fsubs
int3
mov
xchg
push
or
je
mov
adc
cld
jg
mov
xor
mov
jne
inc
mov
pop
xchg
mov
jne
into
or
call
mov
and
pop
push
aam
aad
mov
cmpsb
mov
and
adc
in
in
cli
mov
pop
mov
fdiv
aas
repz
xchg
enter
mov
sub
xchg
pushf
xor
pop
outsb
xchg
jle
repz
xlat
jbe
iret
dec
xor
jecxz
sbb
adc
icebp
sahf
cld
xchg
cld
mov
loop
cmp
or
push
and
sub
adc
dec
or
sub
mov
push
and
inc
xor
or
push
cmpsb
int3
imul
cltd
and
popf
mov
scas
mov
shll
inc
cmc
add
ja
sarb
pop
shll
fsts
push
or
dec
shr
cwtl
xor
mov
ss
push
xchg
nop
repz
push
add
bound
xor
inc
mov
mov
xchg
scas
jno
rorl
lods
std
leave
and
addr16
test
jb,pt
adc
and
xchg
pop
sub
add
or
out
call
in
ja
test
xchg
inc
lret
cmp
jns
addb
add
das
jb
fstpl
mov
ffreep
adc
fdivs
sub
xchg
sbb
je
les
jp
xor
add
push
lcall
out
loope
test
pop
cmpsl
xchg
jns
inc
test
xchg
dec
out
dec
das
es
mov
enter
fstps
adc
iret
add
sarb
add
mov
jl
add
mov
xchg
xor
or
sub
xor
rorb
in
cmc
mov
mov
pop
repz
add
sbb
dec
or
movsl
movsb
push
cld
outsl
sbb
int3
mov
sub
mov
mov
mulb
cld
xlat
iret
and
bnd
push
mov
cld
and
adc
sarb
mov
cld
push
sbb
xchg
push
dec
mov
ja
fdivr
fldl
pop
nop
push
fs
sbb
cwtl
scas
cld
sbb
repz
sbb
xchg
jl
mov
mov
mov
mov
xchg
stos
inc
pop
push
mov
test
sub
inc
fsubrp
dec
push
xor
int3
out
mov
ljmp
pop
mov
fisttpl
lds
pop
inc
inc
push
icebp
fdivrp
sbb
repz
clc
lea
dec
aas
in
xorl
lock
lds
sub
fs
into
fldl2t
jns
stos
shlb
dec
cld
out
aam
push
dec
stos
bound
orl
daa
cmp
pusha
stos
aas
cmpsl
inc
dec
mov
mov
mov
js
cmp
pop
inc
fwait
sub
les
or
mov
imul
pusha
push
pop
js
push
inc
mov
imul
fs
insb
sti
mov
inc
xlat
rcr
or
jl
imul
fisttpl
hlt
mov
pushf
rcr
sahf
int
fidivl
rorb
dec
popa
call
sbb
sub
push
ja
pop
stos
xchg
pop
xchg
mov
pushf
daa
imul
cld
mov
cmc
add
repz
dec
pop
into
imul
fucomip
pushf
cmp
xor
push
and
ljmp
orl
stos
and
leave
iret
mov
nop
jg
jmp
cld
mull
adc
and
cmp
fmuls
mov
inc
cmp
clc
jg
and
or
scas
sti
fistps
push
out
insl
dec
sbb
xchg
popf
mov
test
mov
sti
je
pop
int3
xchg
sbb
fiadds
sbb
sbb
or
add
in
mov
imul
pop
jbe
inc
enter
fsub
in
mov
cwtl
in
daa
imulb
sbb
ja
adc
mov
in
lcall
sbb
cmp
into
pop
repz
test
loop
fstps
inc
or
mov
dec
ds
pop
rorb
adcl
sub
mov
call
add
push
pop
or
mov
xchg
cld
push
dec
pushf
loope
push
xor
inc
xor
mov
shll
out
or
cmp
or
push
sti
mov
mov
inc
movsb
jecxz
dec
push
lock
adc
es
scas
push
inc
cmp
and
mov
popf
iret
hlt
mov
jae
arpl
xchg
popa
jl
jecxz
stc
or
or
push
arpl
je
lods
loope
xor
push
jp
sahf
data16
inc
sbb
lahf
imul
rcrl
cmp
outsb
xchg
adc
loope
cmc
lcall
adc
sarb
ds
xchg
subb
addb
cld
mov
sbb
in
movsl
or
mov
sub
pop
cmp
aas
cmc
int
dec
stos
loope
movsb
mov
in
int
sbb
cld
ss
sahf
fs
jp
mov
imul
pop
adc
inc
dec
insb
xchg
mov
xlat
add
xchg
inc
pop
test
lahf
scas
cmp
test
cmpsl
sbb
sti
les
mov
xchg
push
or
pop
cmpsb
scas
sub
in
fincstp
adc
push
inc
les
xchg
xor
pop
sub
cmp
cwtl
mov
inc
cmpsb
sbb
repz
pop
mov
cmp
dec
arpl
inc
mov
iret
pop
lret
inc
mov
loopne
mov
into
aad
mov
cmc
adc
lcall
in
push
and
adc
inc
inc
pop
stos
cmp
xor
or
pop
mov
shlb
sub
insb
push
decb
xchg
push
loope
sbb
jne
js
cld
sarl
xor
aam
mov
push
inc
xor
sbb
lea
adc
cli
adc
or
cli
dec
mov
push
inc
lods
and
push
xchg
cli
dec
loop
sbb
pop
lahf
es
inc
loope
ljmp
mov
inc
jg
push
pop
and
add
ret
repz
out
adc
pop
roll
rep
inc
mov
jne
pmuludq
lods
jp
fimull
jo
aaa
cmp
enter
mov
dec
loop
fsubr
dec
pop
adc
mov
push
add
adc
xor
xor
sub
lea
repz
cld
pop
mov
scas
lret
imul
jb
mov
adc
rcl
xchg
or
adc
loop
push
push
xchg
jl
clc
aaa
mov
sub
mov
aas
push
test
cmp
lret
jmp
sarb
mov
sbb
add
or
outsl
mov
ficomps
or
push
in
leave
inc
js
outsb
int3
mov
pop
das
jb
roll
out
cmpsb
js
mov
sti
iret
ret
lret
and
and
mov
pop
ds
aas
fidivs
mov
rclb
mov
lods
ret
push
iret
dec
inc
addr16
jbe
adc
jmp
aaa
scas
jp
xor
lods
push
adc
push
push
pushf
add
in
lret
push
or
movl
push
les
faddl
push
mov
shrb
xor
dec
insb
push
inc
mov
test
or
pop
rcrb
pop
pop
enter
xchg
inc
cmpsl
es
dec
sbbb
das
or
loope
jns
push
pop
mov
test
pop
cld
mov
dec
inc
and
dec
inc
xchg
aad
int
xchg
fwait
out
sub
adc
xor
std
loope,pn
pop
mov
inc
insb
mov
stc
push
adc
add
mov
mull
ret
mov
repnz
cmpsb
cmpsl
cmp
cmpsl
xor
xchg
pop
addr16
scas
stos
sbb
ja
cmp
rcrl
add
ja
inc
add
dec
adc
xchg
lods
adc
repz
mov
test
cmp
sbb
cmp
adc
div
or
pop
mov
inc
enter
cli
push
addr16
cld
cmp
fidivs
adc
jg
pop
arpl
out
sti
inc
je
push
cmp
cld
or
flds
in
mov
fdivrs
fs
mov
dec
ljmp
mov
cmpsb
addr16
inc
test
mov
xor
pop
sbb
fstl
cmp
and
in
mov
cwtl
test
aam
sbb
test
dec
ljmp
fcom
sbb
pop
adc
mov
fucomi
pop
sbb
repnz
cld
mov
lret
mov
mov
adc
jl
imul
out
out
pop
xor
jecxz
sub
xchg
push
mov
or
fsubrs
es
or
inc
lea
je
mov
stos
push
inc
out
xchg
sti
ret
mov
gs
sahf
mov
inc
outsb
jl
xchg
inc
icebp
mov
jmp
ficompl
bound
or
dec
into
cmpsb
les
inc
cmc
dec
sub
cs
mov
inc
in
nop
fwait
jmp
adc
push
int
sbb
ja
pop
shrb
lods
andl
inc
push
popf
repnz
mov
pop
mov
fistps
push
or
jns
sbbb
pop
mov
stos
es
pop
inc
pop
test
sahf
pop
mov
cmpsb
xchg
add
jae
add
or
mov
nop
lret
pop
ret
inc
fistl
xor
mov
imull
cld
jecxz
pop
push
mov
addr16
cld
inc
push
scas
out
sub
fwait
loope
add
mov
gs
in
xchg
scas
fcompl
gs
mov
mov
inc
lahf
and
fdivrs
dec
add
pop
cmp
or
mov
jbe
jl
push
xchg
movb
clc
lahf
data16
fucomp
cmpsl
mov
insl
pop
in
sbbb
adcl
xor
push
fldcw
loope
jg
sub
mov
pop
xor
loopne
ljmp
in
insb
adc
aaa
mov
inc
inc
pop
lret
cld
xchg
inc
inc
dec
and
xchg
out
shlb
inc
mov
cld
inc
jp
xchg
push
out
or
adc
inc
loop
lea
loope
xchg
jp
cmp
mov
or
jno
push
decb
incl
mov
cvtdq2ps
xchg
subb
dec
scas
js
lea
cmp
fisubrs
or
testb
mov
mov
cld
push
popf
add
repz
cmp
mov
add
and
aas
shl
aas
sub
test
repnz
push
dec
adc
sub
nop
jmp
outsl
pop
mov
mov
sub
or
gs
into
iret
xchg
das
dec
cld
cmp
jnp
inc
data16
or
mov
fildll
cmpsb
adc
sbb
pop
xchg
mov
lahf
sub
inc
mov
pop
movsl
ret
mov
in
lret
dec
add
jno
mov
or
pop
mov
out
sub
fwait
dec
loop
or
push
in
pusha
or
jae
adc
mov
or
cs
leave
and
sbbb
or
pop
fstps
movsb
mov
cld
sbb
frndint
cli
fldcw
movsb
dec
negb
addr16
in
sahf
jp
pop
dec
mov
cmpl
sub
icebp
fisubrl
rol
ja
addr16
cmp
addl
cmc
xor
dec
xlat
repnz
int
cmpsb
leave
push
adc
xor
and
adc
pop
adc
jge
mov
adc
js
in
pusha
test
push
mov
clc
nop
pop
repz
xor
push
jae
fdivrl
inc
std
shlb
mov
repz
dec
lds
push
loopne
mov
xorb
add
sbb
ljmp
aas
rol
cmpl
cmp
pushf
stos
pop
movsl
data16
sbb
insb
shll
add
jge
inc
lods
addr16
or
dec
mov
js
cmc
and
xor
icebp
mov
and
cwtl
sbb
inc
daa
dec
loop
sbb
push
or
repz
and
movsl
ss
fcoml
pop
xor
and
adc
sbb
dec
out
pusha
aaa
repz
add
push
pop
lahf
sbb
insl
mov
xchg
jmp
loopne
jecxz
add
dec
add
cmp
imul
xorl
in
das
aas
inc
lock
lahf
ret
fdiv
xchg
mov
insl
mov
cld
inc
inc
ss
or
lret
icebp
shll
mov
push
sub
xchg
into
push
insl
push
dec
mov
xor
mov
sub
mov
leave
cmp
cmp
shll
sbb
push
jg
lock
mov
mov
das
dec
negb
jle
push
xor
mov
xchg
mov
mov
int
hlt
mov
in
mov
push
push
das
lea
sub
inc
jmp
dec
jns
inc
loope
fcomip
xor
je
cmpsb
loopne
lods
jnp
dec
jb
or
xchg
ljmp
dec
jnp
mov
dec
xchg
scas
dec
sbb
adc
stos
test
and
jle
jnp
cmpsl
jae
xchg
es
in
movsl
jne
loop
sub
xlat
gs
xchg
xchg
in
inc
movsb
or
push
jno
arpl
lods
mov
push
push
fs
and
repz
push
adc
push
push
mov
mov
cld
or
in
push
adc
pop
sbb
mov
xchg
stos
mov
add
hlt
icebp
and
rol
xor
xchg
call
js
inc
xchg
sub
addl
fisubrl
inc
inc
scas
shrb
xchg
subb
aas
jmp
mov
xchg
mov
and
jne
fsubrs
jge
in
mulb
stc
xchg
and
cmp
pusha
int
scas
imul
adc
fcoms
sub
pop
insl
fcoms
loopne
adc
jmp
mov
adc
fwait
mov
or
xchg
sbb
in
test
dec
cmc
orb
packssdw
aaa
mov
push
fwait
or
pop
ja
cmp
and
or
xchg
xor
das
out
lods
xchg
movsb
jl
es
movl
push
cmp
in
push
cmpsb
adc
in
nop
add
popf
cmp
movb
ficoml
jg
xchg
adc
push
loop
jbe
cld
xor
mov
jl
das
outsl
ss
xchg
xor
sbb
xchg
inc
sti
inc
inc
mov
cmpsl
sbb
adc
sbbl
or
add
mov
mov
sbb
pop
ss
dec
aas
inc
mov
sub
iret
mov
fmul
aad
movsl
mov
cmovge
add
stc
cmp
ficoml
lds
inc
mov
scas
mov
jl
jl
adc
push
jg
mov
xor
or
shll
dec
dec
inc
sbb
fiadds
loop
mov
test
xchg
cld
imul
fcomps
das
mov
rcl
sbb
push
push
push
push
rolb
lret
int
adc
sub
pushf
mov
lods
pop
cli
xchg
mov
and
sti
xchg
cmp
in
ja
rolb
mov
sub
es
pop
repz
pop
lods
rol
out
mov
jecxz
dec
cmc
push
inc
cmp
fwait
xchg
stc
push
sbb
adc
out
jecxz
cmp
sbb
fstps
cmpl
in
cwtl
insl
movsl
dec
cs
dec
dec
repz
nop
movsb
out
scas
pop
jmp
mov
popf
fisubrl
gs
aaa
mov
xchg
xchg
inc
dec
cld
arpl
fstpt
loope
mov
enter
dec
movsb
mov
pop
add
add
mov
arpl
cld
sahf
pop
cmp
adc
pop
ja
outsl
jecxz
sbb
xchg
outsb
add
subb
xchg
xchg
scas
mov
add
adc
lret
call
pop
jns
and
jb
xchg
xchg
repz
int
into
adc
daa
test
adc
lahf
aaa
and
clc
dec
imulb
arpl
push
imul
jnp
loope
or
scas
outsb
or
mov
lods
push
sarl
mov
jnp
adc
lcall
jecxz
loopne
ja
negb
mov
jecxz
or
jae
push
inc
mov
cld
jmp
cmp
sub
push
push
or
push
test
adc
mov
clc
mov
dec
dec
add
in
mov
loopne
mov
cmp
lcall
sbbl
ljmp
sarb
xor
cmp
mov
adc
mov
andl
dec
lods
cwtl
or
and
pop
jecxz
inc
pop
lods
mov
cwtl
cltd
insb
xor
out
cld
inc
inc
jnp
inc
jge
in
inc
test
sbb
pop
pop
mov
push
cli
in
adc
ds
ljmp
loopne
cmp
cmpsb
add
ljmp
xorl
sbb
sbb
push
xchg
jmp
in
inc
xchg
and
sub
or
xchg
add
xor
push
adc
add
push
xorb
pop
cwtl
or
mov
aad
dec
mov
xor
cs
andl
or
xor
xabort
mov
gs
out
shll
or
movsb
inc
loopne
cmp
fldenv
je
or
or
repz
and
leave
sbb
das
sub
es
inc
pop
cld
pop
and
movsl
in
int3
sub
cli
adc
stc
pop
data16
cmp
repnz
xchg
mov
sbb
and
cmp
in
imul
cld
ret
xchg
sub
dec
mov
add
mov
cwtl
add
iret
movsl
clc
xchg
add
vphaddwq
mov
jo
dec
push
xlat
or
fmuls
sbb
enter
push
xchg
outsb
push
pusha
icebp
ds
xchg
test
arpl
adc
adc
ret
in
js
sbb
mov
faddl
fld
repz
push
out
loope
xchg
cld
sti
xorl
xchg
push
sub
push
inc
mov
cltd
mov
fs
dec
sub
cmp
jmp
and
bound
xchg
scas
mov
xor
movsb
pusha
mov
loope
out
xchg
xchg
push
hlt
sbb
sub
int
std
add
cltd
mov
dec
inc
in
mov
in
inc
aad
push
aam
je
movsl
pusha
inc
jae
mov
lcall
sbb
jl
add
cmp
sbb
dec
adc
outsb
adc
sbb
iret
jle
push
dec
imulb
mov
dec
jp
aas
dec
sub
mov
mov
xchg
lods
loop
inc
pop
mov
sbb
enter
pushf
jnp
sbb
cmp
repnz
cmpsb
sarl
push
jb
xor
loop
lcall
lods
or
mov
mov
stos
mov
sub
aas
cltd
cltd
inc
xor
insl
push
and
icebp
enter
pop
int
hlt
sahf
xchg
sbb
or
sub
sbb
adc
xchg
addr16
jl
push
pop
insb
outsb
pop
cld
rcrl
mov
inc
sbb
jl
cmpsb
rcr
sub
out
pop
sbb
leave
mov
lret
jmp
mov
ljmp
loope
mov
pop
xchg
or
lret
loope
fsubrs
xorb
test
xlat
xchg
lock
adc
rep
int3
pop
cmpsl
push
sbb
ficoml
cmp
push
dec
xchg
or
cld
andb
jecxz
in
or
jge
test
jmp
mov
adc
mov
xchg
stos
pop
and
mov
cld
js
cmp
jl
aad
mov
pusha
mov
push
and
adc
out
push
mov
test
repz
or
sbbb
les
pop
add
mov
aaa
callw
mov
inc
or
mov
push
scas
addr16
push
mov
sarb
mov
jo
dec
mov
dec
in
cmpsl
adc
and
push
push
or
cld
out
pop
orl
aam
outsl
rorl
insb
fwait
stc
mov
mov
push
sbb
jb
pop
inc
inc
inc
cld
movl
inc
scas
push
nop
loope
mov
inc
orb
in
or
adc
jge
call
in
push
or
add
dec
jle
pop
shl
sahf
insb
pop
jmp
fildl
inc
mov
lret
mov
and
fstpt
nop
jl
inc
inc
xchg
movsl
and
loop
and
xchg
repnz
in
xchg
mov
in
mov
es
and
jb
lock
adc
mov
sub
xor
xchg
push
xchg
leave
fdivr
iret
cmp
cmp
popl
cmp
jmp
push
nop
and
bound
cli
lods
dec
push
and
scas
addb
fiadds
loopne
mov
xor
xor
js
cs
sbb
sbb
xor
jecxz
push
dec
repz
mov
inc
mov
aaa
movsb
imul
test
cmp
dec
out
or
xchg
adc
je
out
push
sbb
jmp
adc
popf
sbb
pop
call
mov
xchg
scas
pop
and
hlt
pushf
out
ljmp
push
fsts
push
shrl
dec
mov
dec
xor
sbb
pop
inc
in
into
jno
call
mov
fs
inc
loopne
sub
push
mov
mov
or
pop
lret
pop
cmp
push
mov
mov
mov
dec
pop
push
inc
je
push
repz
add
loop
mov
repnz
icebp
mov
xchg
lea
mov
cld
insl
and
es
push
mov
dec
sub
adc
cld
pusha
call
sbb
xchg
lea
dec
xor
fldcw
daa
repnz
cmp
cld
je
mov
cmpsl
and
or
and
sbb
xchg
stos
or
rclb
pop
in
cmp
loop
cmp
les
in
add
xor
sub
sub
fs
or
nop
inc
shlb
xor
enter
loope
xor
fs
cli
jl
or
xchg
and
inc
mov
cwtl
pop
repz
xchg
fs
fdivrs
adc
adc
mov
push
jl
or
add
xchg
xor
sub
dec
adc
shl
sbb
cltd
notb
out
pop
cld
xor
add
push
push
xchg
cmpsl
xchg
loop
xchg
pop
dec
and
dec
insl
mov
lahf
cld
xchg
mov
scas
in
fisubs
xchg
dec
test
sub
stc
daa
fbstp
add
daa
sbb
dec
push
lret
lahf
mov
decb
in
and
pop
loope
lret
pop
pop
lahf
insb
pop
or
xlat
icebp
sbb
xchg
movsl
mov
lea
imul
call
cld
or
cmp
stos
js
insb
xchg
hlt
decb
xchg
hlt
shlb
lret
pushf
popa
xchg
call
pusha
xor
xchg
scas
fs
lods
andb
icebp
xchg
mov
xchg
mov
dec
push
mov
lret
cmc
cmp
ja
popf
loop
cmp
outsl
shl
or
cmp
sub
mov
gs
shll
inc
adc
cmp
push
sbbb
cs
push
and
testb
sub
mov
mov
iret
sbb
cmp
add
loop
fcmove
cmp
clc
inc
fcoml
add
lods
xlat
push
xchg
out
popfw
xor
mov
clc
or
inc
popf
cltd
push
push
mov
movsl
lock
cmp
inc
jbe
movsb
mov
negl
lea
jns
push
adc
push
lcall
mov
das
in
mov
lcall
mov
rcr
push
movsl
bound
cmp
add
or
dec
les
lcall
loopne
inc
jo
inc
aad
adc
inc
out
out
mov
xor
xor
shlb
adc
xchg
loope
scas
popf
mov
xchg
ror
pop
idivl
push
and
cld
aaa
pop
inc
out
jne
cmc
xchg
jbe
push
sub
mov
fwait
dec
repz
movsb
adc
lock
lahf
in
test
scas
lock
jmp
stos
xchg
inc
xor
lods
inc
in
pop
in
cmp
jb
lods
loopne
or
add
in
pop
jl
loope
les
and
adc
out
cs
xchg
jecxz
xor
dec
adc
popa
outsl
pop
out
iret
pop
and
jl
cmc
push
pop
testl
push
cld
xchg
adc
jecxz
push
sbb
cmc
arpl
pop
dec
andb
inc
jno
push
jp
push
imul
sub
push
push
mov
test
ret
int
inc
dec
movsb
sub
sbb
push
mov
aad
xor
jg
in
mov
inc
jl
push
pop
cmp
imul
mov
negl
cld
int
xchg
rcr
out
and
icebp
xchg
xchg
fsubs
lahf
aas
cmpsb
xchg
ljmp
or
and
stos
fimuls
lahf
sub
mov
or
pop
sbb
test
rorl
loop
mov
push
xchg
repz
mov
and
mov
adc
pusha
adc
clc
mov
jge
dec
pop
fdivrl
sbb
mov
lea
rorb
xor
cmp
loope
movb
add
or
inc
cmpb
xor
int3
mov
repnz
call
xchg
dec
in
test
lods
cltd
cmp
cli
lock
adc
loopne
dec
push
bound
repz
jns
fwait
mov
adc
lcall
cmpsb
shll
mov
mov
cld
pop
adc
add
pop
xor
mov
test
inc
lret
sbbb
addl
daa
sub
pushf
xchg
repz
call
pop
inc
xor
shll
sub
fmulp
mov
mov
dec
xor
sub
mov
xchg
lret
movsl
sbb
dec
rcrb
xchg
adc
mov
popf
jb
cmpsb
movsl
in
sti
cwtl
lea
inc
arpl
inc
cli
outsl
dec
xchg
and
adc
lret
repz
gs
adc
mov
adc
sbb
sub
pop
xor
rorl
xchg
add
imul
and
or
cs
xor
jl
outsl
aaa
loop
mov
je
xchg
cld
jge
push
adc
push
enter
mov
xchg
sbb
int3
add
test
inc
push
mov
repz
or
fmull
jl
jae
jecxz
ljmp
ds
mov
out
arpl
inc
das
mov
or
lods
dec
inc
lahf
or
sub
add
push
xor
jmp
fsubl
adc
imul
mov
sbb
repz
push
lcall
jmp
and
loope
lock
cmp
loopne
in
mov
jl
and
cmp
sti
in
push
hlt
les
inc
scas
sub
jge
and
test
js
repz
mov
jl
ss
sub
cld
and
or
jl
insl
fldl2e
idivl
xor
pushf
out
out
aam
push
repnz
cli
mov
hlt
dec
daa
sahf
lcall
bound
out
fsubr
enter
pop
xorl
in
sub
push
into
lock
cmp
arpl
cmc
jae
insb
jecxz
adc
arpl
aam
repz
test
ret
fimull
out
sbb
shrb
sub
dec
test
or
daa
aam
cld
mull
jle
test
leave
dec
fsubrs
sbb
jl
icebp
push
cmp
andl
ljmp
cmc
cs
loopne
sub
pop
out
sbb
mov
jae
jae
fwait
and
mov
pop
int3
dec
outsb
and
mov
pusha
cmp
bound
mov
or
mov
mov
in
add
pop
aam
pause
in
xchg
inc
dec
repz
ljmp
xchg
jae
xchg
dec
test
cmpsl
xchg
adc
outsb
pop
cmp
js
jns
in
fcomp
xchg
pop
xor
repz
int
aaa
call
sahf
and
inc
cmpsb
ret
pop
in
inc
iret
mov
pop
mov
sbb
cmp
ror
push
xor
or
subb
dec
inc
cmpsb
push
fs
xor
in
es
dec
aam
inc
push
test
xor
push
clc
add
icebp
pop
cmp
decb
inc
or
xorb
dec
xchg
vmovupd
jmp
xchg
xchg
xor
and
mov
ljmp
cmpsb
mov
push
daa
loop
popa
push
int
inc
inc
outsb
mov
or
xchg
loope
mov
adc
mov
and
xchg
lea
loope
push
in
in
cmp
xor
outsb
inc
aaa
dec
xchg
enter
and
push
push
shlb
sub
ja
inc
sti
fbld
test
hlt
sar
jo
nop
repz
into
pop
mov
rorb
movsb
or
cmp
out
sub
imul
jnp
sub
popf
add
xor
mov
repz
pop
cwtl
sbb
leave
pop
cmp
mov
js
adc
add
scas
or
lahf
pop
dec
cmp
add
testb
push
fwait
cwtl
mov
imul
rorb
fstps
scas
mov
test
lods
and
lods
fwait
cmpsl
push
sub
mov
mov
cld
fs
xor
cmpsl
cmp
mov
or
fbstp
ficomps
leave
xchg
xor
or
bound
repz
dec
xchg
lods
mov
lds
pop
push
std
sub
fnstsw
into
out
add
sub
out
lret
int3
repz
and
sub
sbb
mov
clc
lds
test
sub
outsb
xchg
sbb
or
inc
fists
add
mov
add
ret
int
stc
sbb
loop
andl
inc
mov
jmp
jnp
bound
xchg
cli
cld
out
cmpsl
in
test
pop
clc
stos
push
mov
cld
adc
push
int
fcmovbe
jno
add
fistps
mov
rcr
fnstsw
cltd
outsl
aaa
cmpsl
lds
xchg
dec
xchg
mov
fimull
jecxz
push
push
mov
out
adc
fcompl
lret
ljmp
inc
cmp
das
mov
jecxz
push
mov
outsl
jo
scas
inc
jle
sub
xchg
fwait
repz
cmpsb
jmp
sub
dec
cmp
popa
push
mul
jo
ljmp
sub
add
ljmp
cltd
jbe
cmp
loop
rclb
inc
aam
repnz
outsl
mov
sbb
cld
jae
outsl
fidivs
and
cmpsl
push
or
inc
movsb
adc
xor
insl
push
ds
or
pop
icebp
iret
shl
sbb
out
shlb
popa
sbb
mov
dec
repnz
jo
scas
adc
inc
imul
loope
mov
and
cld
push
mov
mov
sahf
test
xor
pop
lods
inc
jb
or
or
inc
mov
insl
inc
mov
cltd
push
std
rcll
jb
xor
jno
into
jg
pop
mov
and
fcmovb
fucomip
cld
cmp
adc
mov
lea
push
testl
ficoms
movsl
cmp
add
in
xor
int
jmp
in
and
stos
sbb
sbb
mov
clc
adc
add
xor
loopne
jae
or
enter
lea
mov
push
sahf
out
test
mov
lret
jbe
adc
callw
cmc
or
pop
mov
xor
xor
lret
je
lcall
loop
pusha
sbb
mov
dec
shlb
mov
cmp
lods
cld
cmp
loope
or
xchg
loope
cmp
sub
data16
and
nop
cmp
adc
in
add
adc
cld
mov
insl
mov
dec
inc
and
fs
jl
fidivs
scas
test
xchg
addr16
popa
add
pop
sbb
xor
js
movsb
xor
fwait
jbe
dec
add
xchg
adc
mov
clc
sbb
cmpsb
cmp
fisubrl
mov
in
xchg
cltd
aaa
xor
mov
xchg
shrl
cmp
bnd
cltd
and
pop
shrb
adc
out
mov
adc
lock
popf
cmp
cmp
test
xor
inc
cmp
loope
adc
or
lcall
loop
test
jb
jno
push
iret
mov
add
fildll
pop
xchg
sub
mov
test
mov
xchg
and
cmp
sbbb
add
inc
into
test
adc
dec
shlb
inc
mov
inc
pop
clc
add
mov
repz
cs
mov
sbb
std
aas
imul
or
aam
mov
dec
rcl
das
ds
lcall
adc
hlt
imul
insl
enter
or
mul
mulps
lds
movsb
and
jb
mov
and
xor
loopne
sub
repnz
and
inc
test
mov
bound
fcoml
jno
ds
pop
lret
dec
mov
mov
xor
pop
xchg
add
inc
adc
and
not
pop
repz
mov
add
aas
fldcw
jmp
mov
aaa
popf
out
dec
adc
cld
aaa
or
pop
add
cmc
sub
mov
fidivl
or
dec
push
jg
mov
adc
jne
pusha
lcall
cmpsb
xchg
adcl
es
mov
aas
dec
inc
fidivs
mov
fwait
pop
jbe
movntq
out
jle
adc
scas
xor
mov
movsb
js
test
iret
cmp
int
ss
xlat
pop
pop
fcoml
push
test
cld
fs
xchg
lods
dec
ret
addb
adc
xchg
addr16
insb
leave
dec
in
in
dec
add
push
ja
cld
repnz
mov
and
cmp
addr16
inc
sub
adc
pusha
mov
cmp
mov
leave
xor
cmp
mov
cli
test
inc
lods
test
in
jae
loop
mov
inc
mov
adc
mov
or
clc
push
sbb
adc
push
add
data16
jns
lods
out
das
movsl
jg
int
repnz
add
repz
idivb
shlb
jno
movb
das
gs
sub
loopne
xchg
in
xchg
aad
or
xchg
repz
loope
fistl
dec
xchg
jo
int3
cmpsb
icebp
loope
outsl
xor
shr
mov
bound
inc
cltd
jbe
movsl
fcoms
cmc
cmp
xor
inc
in
pop
mov
cmc
cld
mov
jecxz
jmp
and
ret
insl
int
mov
inc
push
push
dec
out
pop
inc
sub
mov
outsb
or
xchg
idivb
cltd
pop
enter
lret
push
ret
mov
jge
adc
jae
xor
sbb
cmp
add
pop
cs
jns
fmull
fwait
pusha
ret
shlb
or
sbb
or
sti
dec
sahf
xor
repnz
and
out
inc
xchg
mov
adc
loop
mov
lods
fwait
movsl
test
xchg
pop
imul
cwtl
out
adc
xor
add
cmp
dec
push
mov
mov
dec
incl
test
add
push
cs
gs
dec
pop
cld
rcr
cmpsb
jge
dec
xchg
fs
aaa
inc
sahf
mov
pop
sbb
inc
fdivrl
lock
dec
xor
mov
fsubrl
xor
or
in
lahf
inc
inc
cwtl
xlat
mov
repz
rorl
xor
das
pop
je
mov
sbb
cli
lock
cmp
jmp
leave
sub
sbb
enter
lds
outsl
or
sub
cmpsl
aad
xchg
cmp
dec
xchg
xor
inc
cmp
inc
shrl
in
cmp
jle
push
cmpsb
repnz
lahf
jb
dec
sub
mov
xor
iret
negb
push
mov
cmp
in
notb
lcall
ss
push
cld
fildl
cmpsb
adc
ficoms
enter
push
je
in
xchg
xorl
scas
ds
scas
and
mov
jl
call
mov
ss
imul
and
jl
mov
mov
push
loop
idivl
in
jmp
in
mov
movsb
ss
aam
push
inc
adc
cld
pop
push
mov
addr16
repz
pop
and
in
repz
mov
xlat
daa
out
sbb
jg
insl
stc
dec
inc
add
arpl
or
and
ja
cld
pop
sub
mov
fistl
pop
pop
or
adc
dec
insl
dec
cmpsl
pop
cld
or
xor
xor
fnstcw
aas
sub
lods
xchg
test
aam
in
setbe
mov
aas
imul
inc
shlb
aas
or
push
mov
push
lret
sbb
jmp
xchg
mov
cmp
repz
out
xlat
cmp
sub
movsb
push
jl
mov
mov
cwtl
cmc
stos
rorl
sub
jmp
pop
or
repz
loope
imul
cmc
rorb
sbb
mov
xor
jmp
sub
sbb
xchg
in
inc
into
out
fsubs
dec
push
mov
push
pop
jp
leave
cwtl
repz
lret
xchg
into
popf
jae
in
add
test
outsl
cli
mov
stos
jbe
nop
out
cmp
movsb
cmpsb
xchg
mov
test
adc
adc
in
and
jl
or
xchg
sbb
out
or
insl
xchg
nop
lret
pop
cmp
es
mov
cmc
repz
dec
lock
mov
add
insl
mov
inc
mov
movsb
mov
adc
sbb
pop
fistl
push
lret
in
push
shrl
dec
repz
push
cmp
sub
pop
or
les
xor
sti
push
inc
jb
or
daa
xchg
aad
and
nop
call
or
mov
push
inc
mov
outsb
test
stc
test
xchg
adc
shll
lods
negl
mov
pop
dec
xorb
in
imul
or
cmpsl
mov
xor
out
fwait
sbb
jno
lret
ljmp
lea
fs
inc
pop
aam
aad
movsl
pop
xor
and
test
jp
lds
xchg
dec
in
mov
icebp
or
cmp
sbb
xchg
and
lret
arpl
adc
loop
push
xor
stos
sub
mov
adc
icebp
cmp
pop
mov
mov
pop
xchg
adc
inc
or
aad
jle
test
adc
adc
addl
cmpsl
and
jne
jae
xchg
mov
mov
out
bound
xchg
adc
and
rcrl
jle
push
add
cs
xchg
cld
mov
js
adc
lahf
xor
push
add
jmp
push
popa
leave
xor
jnp
ret
test
cmp
xchg
outsl
lcall
xor
dec
or
cld
xor
mov
push
cwtl
push
rcll
add
adc
sbb
bound
xor
and
xchg
ja
fidivs
sub
xor
inc
pop
inc
inc
cmpsl
xor
in
movsl
and
pop
mov
mov
jle
inc
popa
out
pop
fidivrl
fstl
mov
rol
outsl
andb
cmpsb
iret
shl
pushf
sub
inc
xchg
pushf
rcl
fildl
bsf
shrl
test
xchg
jne
out
jl
ss
addb
into
into
ret
pop
ficompl
adc
mov
in
adc
mov
xor
mov
inc
lods
imul
loope
insl
shr
adc
lods
cli
mov
xor
fcomps
loope
rorl
adc
outsb
jge
push
push
sub
clc
loopne
pop
xchg
mov
add
xor
ret
scas
pop
icebp
int3
sbb
mov
icebp
cmp
out
repnz
pop
repnz
push
out
cld
push
shrb
scas
insb
clc
mov
sbb
mov
aaa
repz
push
adc
mov
adc
cmpb
cmc
mov
cltd
jge
xchg
and
repnz
xor
in
pop
pusha
inc
dec
mov
inc
push
scas
xor
nop
mov
adc
leave
cmc
xchg
adc
xlat
repz
in
stos
push
pop
jl
sub
movsl
xor
push
or
cld
jno
loope
jle
out
and
cli
jle
xor
push
sub
push
scas
out
mov
sbb
jl
cs
dec
mov
xchg
les
loopne
mov
in
or
jmp
rcl
lock
rclb
aas
lcall
fnstenv
sub
lcall
iret
push
dec
xor
roll
cld
test
jb
inc
in
outsb
ret
pop
cld
sti
out
into
lcall
adc
out
mov
adc
and
mov
in
cmpb
jmp
and
sub
out
test
xchg
push
cmp
repz
dec
sahf
cmp
call
push
outsl
cmp
xchg
adc
xor
or
jg
jl
pop
out
dec
dec
cwtl
jnp
xchg
inc
add
push
or
cmc
xor
lcall
mov
inc
loop
repz
pop
cld
dec
cwtl
es
scas
push
test
ficomps
xor
adcl
loop
mov
pop
out
sbb
push
cwtl
fs
aas
lods
xchg
enter
mov
push
push
sub
cmp
in
lods
cmp
mov
into
daa
stos
sbb
sarl
clc
imul
repz
mov
int3
or
enter
push
sbb
xchg
rolb
mov
dec
mov
inc
and
scas
pop
inc
add
adc
loope
dec
arpl
movsl
xchg
cwtl
fwait
lods
push
stos
call
or
repz
pop
inc
jl
add
inc
sbb
js
mov
sub
pushf
dec
inc
loop
cmp
jecxz
inc
mov
pop
or
jo
pop
and
mov
mov
add
mov
push
repz
pop
lds
dec
mov
sub
cmpsb
pushf
push
pop
pop
dec
mov
mov
sub
push
mulb
outsb
cwtl
adc
or
xchg
inc
cli
xchg
mov
lahf
add
mov
xchg
sub
out
jmp
cwtl
cld
xor
mov
xor
adc
addb
push
fsubl
inc
mov
jb
cltd
add
cwtl
das
lods
loope
mov
leave
sub
dec
add
aas
rolb
fbstp
ret
push
push
cmp
mov
movsl
sbb
push
fisttpl
fcompl
push
pop
xor
loop
aam
mov
pop
sbb
add
loope
sub
mov
jnp
fidivrl
pop
test
std
push
sahf
incb
int3
jmp
xchg
mov
adc
or
sbb
je
mov
pop
sub
ficoms
scas
sti
lea
shll
dec
ror
in
inc
pop
push
or
or
pop
repnz
movsl
test
and
ss
mov
inc
cmc
and
push
in
and
lock
xor
xchg
mov
add
sbb
or
in
xchg
cltd
fildl
xchg
cmp
cmc
aaa
and
fiadds
lods
cld
mov
pusha
out
mov
pop
aam
call
aas
mov
pop
and
adc
in
je
into
pop
out
push
add
ret
or
inc
je
popf
lock
adc
mov
out
mov
pushf
push
xor
addb
popa
or
clc
fisttpl
cwtl
dec
add
pop
jp
jmp
inc
in
mov
sbb
repz
icebp
mov
jne
mov
xchg
mov
mulb
jae
movsl
popa
iret
jne
xor
in
or
jbe
stos
dec
ret
inc
push
nop
in
push
pop
xchg
add
xor
push
jecxz
aad
fcompl
jae
mov
into
add
mov
xchg
sbb
jae
inc
rorl
iret
pop
hlt
cmp
and
inc
sub
dec
xor
or
cmp
fs
push
fcmovne
pusha
imul
or
scas
sbb
pop
adc
cmp
sbb
and
cmp
sbb
cwtl
xor
pop
dec
in
rcl
inc
fimull
add
sbb
rclb
fdivl
ret
push
add
das
enter
xor
xor
dec
sbb
add
pop
and
xchg
gs
fdivs
cwtl
or
add
jbe
sbb
mov
mov
mov
pop
stos
in
mov
cmp
xchg
add
hlt
imul
sub
push
insb
dec
push
fstpt
add
lret
xor
pop
inc
test
jnp
ficoms
movsb
pusha
push
pusha
xor
xchg
aam
fstp
mov
push
das
out
xchg
add
out
sbb
lock
pop
es
add
push
divb
test
dec
sub
pop
sub
gs
ds
in
adc
xor
add
and
clc
push
fs
or
mov
pop
jne
loope
adc
aas
rcll
test
adc
xlat
cmp
pop
cwtl
push
call
mov
jbe
xor
adc
ljmp
outsl
add
sbb
sub
push
and
lock
mov
mov
pop
and
fldl
xor
aas
outsl
fs
add
adc
xchg
add
pop
test
clc
adc
xlat
or
adc
lods
dec
call
sub
leave
fimuls
int
inc
cmp
jbe
push
mov
xor
das
or
jecxz
push
lock
fs
push
pushf
test
jle
or
sub
sub
loopne
jae
movsb
push
lcall
mov
dec
sbb
pop
dec
lcall
clc
aas
adcb
add
xchg
inc
and
mov
dec
adc
push
ss
jl
adc
and
rcrl
ficompl
out
mov
mov
test
dec
xchg
jge
cmp
fcmovne
into
or
pop
sbbb
subb
inc
adc
sub
or
aaa
popf
dec
sbb
imul
iret
push
xchg
adc
cmp
rcrb
in
ret
adc
inc
pop
lods
out
lahf
stos
sbb
mov
in
cmp
mov
inc
in
adc
in
cmp
fs
mulb
jns
xor
cmp
arpl
inc
out
pop
sbb
fildl
rcrl
sarb
xlat
cwtl
or
aas
pop
sbb
ss
dec
loopne
js
push
data16
cmp
cmp
aad
inc
insb
add
or
and
jge
and
adc
out
cwtl
sbb
out
fnstenv
lcall
movsb
mov
xor
xlat
in
lods
aas
add
fidivrs
sbb
clc
cmp
int3
pop
mov
and
sbb
xor
mov
cmp
repz
push
push
fs
lock
aad
mov
cmc
fs
pushf
outsb
mov
ret
add
test
mov
fs
add
and
add
inc
fistl
sbb
cmp
and
cwtl
lcall
xor
pop
cwtl
pop
call
fstps
pop
or
adc
cmp
cltd
in
sub
fucomi
mov
xchg
pop
cmpl
rclb
add
dec
in
mov
jg
mov
fs
or
cmp
fwait
inc
mov
or
cwtl
pop
cli
pop
imul
push
cltd
xor
fimuls
cmp
and
adc
jnp
inc
inc
xor
cmp
xchg
and
inc
sbb
out
add
lcall
jle
push
lods
cwtl
pop
addb
in
inc
sub
xor
add
lahf
cmpsl
ds
and
mov
mov
adc
mov
cmp
aas
cmp
or
xor
adc
jmp
cli
sbb
mov
jecxz
mov
adc
pop
inc
sbb
mov
insl
in
es
popa
xor
insb
iret
bound
pop
push
sbb
adc
xor
or
das
sbb
mov
insb
dec
xor
sbb
loop
mov
in
mov
pop
pop
sub
int
dec
imul
iret
push
frstor
adc
pop
pop
jmp
mov
adc
lret
push
adc
adcl
sbb
dec
stos
nop
lods
jns
mov
icebp
movsb
lock
ficoml
fwait
lret
sub
add
push
inc
sbb
hlt
pop
jg
xchg
or
xor
xor
mov
jae
clc
sub
mov
cmp
sbb
jb
sbb
push
in
cwtl
test
dec
cmp
mov
jecxz
cmpsb
add
lds
inc
adcl
fstpl
push
out
pop
adcb
mov
jbe
and
xchg
jbe
mov
jp
sbb
lret
lcall
sbb
push
pop
sbb
mov
aaa
cmp
inc
sbb
sbb
pop
jne
out
xchg
arpl
in
add
inc
add
and
cltd
fwait
adc
aaa
sbb
lods
push
dec
adc
push
lods
adc
outsb
insb
fwait
add
xor
out
mov
les
xor
shlb
fcoms
mov
or
cmp
jp
mov
xor
fstpt
adc
int
mov
pop
leave
pop
sbb
add
push
cmc
cld
mov
pop
dec
fisubrs
fucom
sbb
add
cltd
inc
sbb
sbb
add
sub
xor
cmp
cltd
jnp
sbbb
jo
leave
or
mov
jo
and
pop
and
pop
ljmp
cli
mov
inc
jge
pop
jnp
aaa
in
imul
push
sbb
and
fs
xchg
or
dec
arpl
ds
std
adc
push
mov
arpl
mov
adc
sbb
daa
or
sbb
ds
in
mov
sbbb
fwait
or
aas
cwtl
lea
in
and
sub
mov
sti
and
and
adcb
mov
orl
lds
cld
rcrl
mov
loopne
cmp
pop
add
adc
insb
jecxz
xchg
fcoms
cltd
adc
jmp
or
shrb
es
inc
ret
pop
cmp
dec
ja
rcrl
ret
pop
loope
jnp
insb
repz
ficompl
rorl
adc
mov
xor
fs
cwtl
popa
add
mov
sub
subl
and
pop
xlat
sbb
mov
pop
movsb
adc
add
ja
test
int3
cmp
rclb
push
cwtl
xchg
mov
cmp
out
orb
cwtl
psubsw
repnz
add
rclb
cmp
mov
or
push
mov
push
stos
dec
sbb
sub
pop
lods
pop
nop
mov
movsl
push
ret
push
jge
movsb
mov
leave
sbb
xchg
inc
xor
or
jnp
xlat
cmp
mov
push
inc
test
adc
sbb
mov
int3
rolb
clc
sbb
dec
shrb
rorl
clc
repnz
add
sbb
test
int
sbb
or
jbe
test
pop
sbbb
sbb
and
mov
and
cmp
or
stc
mov
incl
mov
inc
outsl
test
jae
sub
xor
sub
movsb
xchg
fwait
imul
sbb
jl
xor
lods
jno
jb
push
add
pop
fwait
loopne
in
push
fldt
push
mov
shrb
adc
adc
mov
mov
fs
lea
cmp
pop
sbb
or
sahf
fwait
inc
arpl
and
sbb
mov
xchg
inc
xor
inc
add
sbb
lods
inc
push
mov
loope
rclb
xor
sbb
sbb
pop
jl
cmp
sti
js
mov
pop
mov
inc
mov
sbb
push
add
xor
in
sti
sub
push
push
filds
adc
xor
sbb
or
push
sub
inc
pop
adc
dec
pop
incb
xchg
iret
add
sbb
inc
je
xchg
xchg
incl
jp
xor
add
or
adc
and
cmp
mov
inc
push
sbb
add
add
inc
mov
push
add
adc
ret
dec
add
pop
cld
sbb
mov
stos
int3
adc
cmp
sbb
mov
adc
cli
mov
sbb
movsl
call
jecxz
in
xor
rcll
add
data16
cmp
push
add
das
repz
hlt
fst
jnp
mov
into
mov
sub
in
push
inc
jge
push
in
sub
xor
mov
lea
das
fs
in
int
xchg
sbb
pop
jno
sbb
xchg
cmp
xchg
jno
inc
in
mov
popf
movsl
mov
test
movsb
add
das
adc
cmp
sbb
test
insl
add
or
mov
int3
sbb
and
add
cmpsl
sbb
cwtl
sbb
cmp
sbb
rcrb
icebp
sbb
cwtl
or
push
jge
lret
rcrb
movsb
pop
ds
sbb
mov
sbb
imul
adc
imul
enter
dec
int
pushf
repz
mov
adc
add
sbb
int3
xor
inc
cmp
popf
add
sbb
cmc
insb
sbb
add
std
adc
cld
sahf
ss
inc
adc
cmp
pop
cs
lods
arpl
gs
jg
and
or
int3
xor
mov
inc
hlt
pop
stc
in
icebp
xor
gs
add
scas
cmp
in
mov
sbb
xchg
xchg
lock
xchg
add
cmp
cmpsb
add
jmp
in
dec
loope
sub
adc
clc
mov
mov
xchg
sbb
cmc
lahf
mov
mov
mov
fs
pop
pop
xchg
leave
inc
nop
test
inc
adc
mov
or
pushf
fwait
rorl
push
mov
add
das
sbb
dec
mov
add
mov
in
adc
outsb
sub
cmc
add
push
adc
push
fisttpll
mov
adc
sbb
inc
or
call
popf
in
jbe
lret
mov
and
fisubrl
xchg
in
loope
mov
cmp
push
enter
pop
ds
sbb
int3
cmpsl
mov
pop
bound
jb
in
sti
adc
xor
and
dec
repz
aaa
pushf
push
mov
add
mov
insb
lods
mov
inc
mov
movsb
dec
pop
inc
nop
popf
jbe
mov
ss
lds
adc
cld
push
pop
mov
pop
and
clc
pop
lret
mov
repz
cmp
or
or
inc
movl
fcoml
xor
nop
pop
negl
test
je
mov
or
orl
fs
es
and
imul
in
loop
add
fadds
andb
insl
sub
dec
test
out
faddl
cmp
test
pop
in
in
mov
cmp
data16
pop
pop
test
addb
rcrb
mov
stos
ret
cmpsb
int
mov
call
and
inc
add
xchg
push
cltd
sub
add
lock
pop
andb
xor
adc
aam
aas
leave
sbb
cwtl
mov
or
in
js
inc
jl
int3
xchg
adc
push
sbb
sbb
mov
aam
inc
sbb
imul
mov
xchg
loope
xchg
dec
addr16
pop
mov
cld
push
pushf
jb
daa
sbb
cmp
cmp
call
pop
dec
outsb
dec
mov
cwtl
add
ds
sbb
mov
sbb
add
sbb
lcall
in
ja
imul
jmp
mov
in
out
in
sub
mov
add
in
dec
fs
add
inc
in
aas
xchg
rorl
loopne
push
jg
cmc
or
sub
std
add
cld
cmpb
push
cltd
sbb
je
and
pop
int3
or
cld
and
add
pop
dec
sbbl
loope
sbb
pop
arpl
jae
add
dec
jno
cmp
mov
sub
xchg
cltd
jg
push
jle
mov
fisubrl
movsb
or
inc
lret
sbb
and
and
cwtl
in
imul
aad
cmp
lods
cmp
inc
sbb
or
add
xchg
cmpsb
loopne
insb
js
sbb
inc
pop
fdivl
sbb
or
inc
stos
cwtl
sbb
xor
sbb
cmp
and
sbb
sub
cmp
inc
call
mov
fldcw
xor
cmp
push
bound
js
add
jo
add
in
push
dec
sub
xor
xchg
mov
les
xor
xor
push
int3
test
or
hlt
loope
and
inc
or
scas
push
mov
mov
std
inc
call
adc
adc
pop
lret
or
inc
les
add
jp
sbb
mov
sbb
push
fistps
xor
push
or
int3
add
shll
sti
in
fcmovnu
jmp
movsb
cmp
cmp
cwtl
adc
fistl
jg
or
fdivl
push
mov
aaa
in
push
pop
movsl
int3
mov
clc
push
dec
dec
fs
xor
aas
arpl
sbb
inc
xchg
inc
xor
movsb
insb
dec
loopne
xchg
xor
pop
lea
lcall
add
fiadds
shrb
lret
sbb
xchg
data16
sti
add
cwtl
add
rcrl
add
test
popa
xchg
inc
sub
xchg
shrl
xor
xchg
mov
mov
or
movsb
push
add
xor
sbb
mov
inc
sarb
cmpb
and
pop
in
lock
xchg
int3
out
add
movsb
cmp
xor
adc
sarl
ss
mov
in
cs
pop
sbb
xor
adc
mov
xchg
adc
push
jecxz
xlat
sbb
mov
add
int3
mov
or
add
scas
add
mov
mov
or
lods
mov
adc
test
push
rcrb
pushf
push
mov
push
aam
xor
cmp
push
push
adc
fmuls
xor
add
outsl
lahf
sarl
mov
imul
fldl
cmp
pop
hlt
inc
xor
jmp
and
adc
adc
in
imul
imul
int3
xchg
hlt
cwtl
jo
cmp
mov
fs
xchg
adc
or
je
adc
add
mov
mov
sbb
xor
ret
push
stc
sbb
mov
adc
in
mov
jge
andb
repz
scas
and
jl
inc
adc
add
outsb
mov
adc
aaa
popa
sbb
add
hlt
iret
test
push
mov
les
push
rclb
mov
das
sbb
mov
in
je
rcrl
add
mov
jg
iret
fs
mov
pop
les
sti
sbb
enter
add
jno
or
mov
sti
inc
in
cmp
push
sbb
adc
dec
and
daa
cmp
rcll
jl
xor
add
in
and
add
ja
movsb
cmp
outsb
pusha
lahf
jecxz
gs
cmp
repnz
dec
sbb
pop
jge
out
sbb
push
jnp
sti
xlat
mov
test
fistl
imul
xchg
or
jmp
test
dec
jecxz
sub
inc
xor
mov
mov
adc
gs
jo
mull
mov
mov
sbb
out
cmp
add
pop
cltd
arpl
pop
add
int3
cmp
push
adc
pop
jno
sti
inc
xchg
xor
mov
dec
test
lret
xchg
ret
cmp
xchg
shlb
mov
leave
and
sbb
pop
cmc
imul
lods
push
iret
xor
push
xor
cmp
fwait
in
call
xchg
test
in
mov
pop
stc
loopne
fs
adc
in
sbb
mov
mov
and
jmp
movsb
or
cmp
fldenv
cwtl
rolb
test
in
and
mov
pop
test
xor
in
stos
mov
jns
mov
mov
aaa
testb
mov
out
in
mov
in
add
in
and
sbb
or
inc
decb
movsb
popa
in
or
and
cli
jecxz
bound
bnd
mov
or
adc
in
notl
test
push
sbb
pop
sub
loop
lods
lock
in
call
pushl
jle
jnp
sbb
push
imul
jae
outsb
movsb
or
das
and
inc
sub
aad
jg
or
out
dec
popf
loope
dec
push
daa
lock
and
sbb
int
dec
into
sub
or
push
sub
jo
fs
rcr
pop
inc
in
adc
pop
xor
push
in
mov
mov
iret
pushf
mov
add
icebp
add
dec
add
in
or
inc
mov
in
fldl
pusha
cld
call
lock
fmulp
outsl
in
stc
xlat
pop
es
push
and
into
inc
fists
in
lods
pop
loopne
movsb
inc
pop
in
vmovdqu
push
cli
aaa
ljmp
jnp
cs
adc
jl
call
inc
xchg
in
push
push
pushf
out
adc
negl
rclb
shlb
negb
cwtl
repz
xchg
sbb
imul
cld
jle
push
dec
loop
mov
cmpsl
lds
jl
mov
incl
imul
imul
mov
sbb
repz
cmpsb
cld
lret
mov
cmc
mov
inc
fs
repz
push
loopne
nop
dec
jl
mov
les
push
movsl
pop
repz
clc
call
jne
or
mov
in
push
out
inc
testb
sub
cld
xor
cmp
loopne
jne
lcall
mov
jnp
arpl
out
inc
out
push
inc
jae
jne
lods
jle
movsl
or
xchg
dec
and
mov
mov
inc
clc
adc
jns
shl
mov
adc
mov
daa
cld
push
cmc
enter
xor
sbb
hlt
sbb
stos
test
into
xchg
sbb
and
fwait
mov
mov
mov
subb
jno
in
cli
xor
cmp
outsl
push
cmp
rcll
dec
and
xchg
mov
cmp
adc
mov
inc
push
add
lret
inc
ja
cmp
icebp
fdivl
jb
jg
mov
in
pop
xchg
mov
scas
push
push
dec
mov
in
inc
hlt
stos
cmp
ljmp
inc
dec
mull
push
mov
xor
mov
ret
repz
fstpt
cmp
aas
xchg
mov
inc
sub
cmp
dec
out
in
in
cmp
jl
mov
and
ljmp
nop
daa
int3
jne
push
out
cld
jecxz
sbb
mov
cmp
cmc
pop
cltd
xchg
pusha
cld
inc
xchg
cmp
push
loopne
aas
add
sbb
test
notl
roll
cld
aam
jp
add
pushf
inc
inc
adc
cmpsb
xor
fsub
inc
rcrb
sbb
ds
scas
repz
xor
fwait
dec
mov
push
lods
in
and
adc
int3
lret
insl
enter
lret
mov
dec
dec
jecxz
pop
pop
jg
cld
xchg
pop
fdivrs
sbb
test
mov
sub
adc
iret
lahf
adc
sub
or
addl
mov
xchg
jecxz
lret
sbb
ss
adc
pop
inc
mov
mov
pop
repz
adc
into
in
xchg
rorl
jl
mov
shlb
cmc
out
sub
pop
mov
mov
adc
lock
adc
rol
sub
in
add
mov
add
jns
adc
fistps
push
mov
stc
xchg
sahf
or
cmpsb
jbe
or
sbb
sub
in
clc
add
adc
mov
mov
aas
in
ss
mov
clc
xor
push
pusha
repz
mov
and
jnp
pop
or
xor
aas
dec
sahf
or
jl
sti
gs
mov
icebp
pop
adc
cmp
inc
les
fistl
cld
and
loopne
mov
test
mov
inc
xor
mov
js
mov
jg
popf
mov
jg
sbb
lods
mov
ja
inc
cld
push
push
test
mov
dec
adc
out
adc
mov
or
dec
push
mov
push
insb
in
push
cmp
call
in
enter
pop
mov
daa
out
and
adc
lahf
add
xchg
jl
ljmp
lock
lods
repnz
dec
leave
add
cltd
sub
or
inc
push
scas
es
mov
pop
je
adc
jge
in
pushf
aam
xor
popa
xchg
enter
xchg
adc
loopne
mov
out
cltd
scas
ret
ss
cld
fcmovb
mov
or
jae
add
add
aam
fists
pop
pop
inc
mov
pusha
cltd
jae
mov
sub
cmp
xchg
andb
loopne
xor
cmpsb
xor
insb
xor
mov
inc
pop
mov
push
xchg
add
cmp
adc
pushf
enter
cli
js
dec
mov
jl
movsl
data16
out
add
xor
push
je
push
pop
ss
arpl
pushf
xlat
pop
daa
mov
frstor
push
mov
pop
sbb
jl
fldcw
iret
jle
sbb
xchg
mov
mov
mov
push
push
flds
pushf
adc
pop
dec
mov
mov
inc
jmp
pop
inc
sub
jl
cmp
or
push
xchg
pop
dec
out
pop
sub
sti
fucomi
and
jl
xor
jmp
aad
mov
cmpsb
ljmp
mov
shll
pop
or
push
insl
jp
add
stc
into
mov
xchg
push
int
lcall
movsl
pop
add
cld
rcrl
arpl
je
adc
ficomps
rcll
pop
test
sbb
outsl
lcall
loop
nop
iret
adc
repz
insl
ret
and
out
aam
jg
repnz
rcrl
fyl2x
pushf
cmp
xor
ret
xchg
cwtl
xor
icebp
jge
stos
and
bound
sub
sbb
movsl
jecxz
sbb
shrb
mov
lret
lahf
adc
imul
sbb
or
int3
loope
aam
xor
inc
push
out
scas
test
lock
stos
mov
in
movsl
call
xor
cmpsb
repz
push
lret
sti
adc
daa
xor
mov
and
sbb
lret
push
mov
cmp
in
and
sbb
sbb
cmc
adc
movsb
mov
mov
push
mov
lds
shll
pop
or
inc
insb
sar
sbb
pop
and
repz
xchg
cltd
aad
mov
loope
pop
js
xchg
mov
stos
adc
add
iret
cmpsl
push
xor
xchg
mov
iret
roll
mov
xchg
mov
cmp
add
jmp
imul
imul
lahf
mov
mov
das
adc
aas
shll
out
add
xchg
mov
and
adc
inc
sub
xchg
test
or
dec
adc
lcall
pop
adc
push
mov
or
jl
mov
fnstsw
dec
aas
popf
jo
jge
xchg
imul
ret
mov
mov
hlt
inc
xchg
push
scas
cmp
pop
fstpt
lret
ja
sbb
jp
out
xchg
repz
lret
dec
inc
lea
inc
adc
testl
adc
repz
add
scas
jne
into
imul
movsl
inc
inc
inc
dec
jl
inc
aaa
stc
jnp
adc
pop
mov
out
shlb
jecxz
push
cmpsl
push
or
xor
or
xchg
pop
dec
and
mov
mov
loop
adc
and
aas
mov
arpl
add
adc
in
movb
cmp
mov
jo
mov
iret
fdivs
jp
adc
out
mov
sub
add
dec
repz
and
or
mov
xchg
and
xlat
sbb
xchg
dec
sub
and
repz
inc
loope
lock
pop
data16
pop
scas
push
test
sub
xchg
std
lods
adc
adc
cltd
push
push
in
in
aam
insl
add
xchg
mov
data16
sbb
cmp
int3
mov
and
jnp
lret
mov
mov
mov
or
daa
fstpl
fcompl
imul
and
dec
mov
or
xchg
adc
xchg
mov
mov
or
aas
pop
adc
mov
inc
jl
jne
sbb
inc
dec
cld
xchg
mov
xor
dec
stos
mov
lret
adc
push
inc
les
sbb
xchg
cmc
int3
loopne
sub
and
or
push
mov
aaa
sti
dec
and
sahf
mov
and
xor
mov
inc
scas
sub
or
mov
imul
cmpsl
mov
cld
cltd
mov
jl
fiaddl
stc
das
or
jp
cltd
jnp
or
in
inc
cld
push
and
shrd
rorb
lret
inc
fucomp
cmp
jp
dec
xchg
clc
pop
pop
pop
mov
fdivrs
sub
mov
rep
lds
aaa
inc
dec
in
cmc
int
push
js
mov
jbe
jmp
add
dec
or
bound
sbb
imul
jg
xchg
shll
frstor
stos
adcl
sahf
add
lods
flds
inc
mov
and
mov
inc
jle
subl
jne
popf
adc
xchg
mov
cmp
fs
divl
enter
cld
mov
cmpsl
jo
out
data16
mov
popa
push
or
cmp
js
xchg
cli
in
mov
ljmp
loope
fs
lret
xchg
repz
enter
mov
lea
ret
pop
xchg
inc
cli
inc
xchg
push
addr16
fs
popf
icebp
or
imul
mov
aaa
cld
push
movsl
sbb
repz
or
shlb
and
xlat
mov
jl
outsb
arpl
daa
sti
aaa
push
cmp
mov
fstps
data16
push
push
xchg
inc
xchg
push
lock
jmp
push
pushf
push
js
in
pushf
xchg
mov
xor
push
lods
mov
loope
cmp
repz
jle
inc
mov
cld
gs
mov
movsb
ret
in
loopne
sbb
cmp
enter
dec
adc
mov
sar
xchg
pushf
loopne
sbb
sbb
sub
in
stos
fst
aas
xchg
cmp
lret
inc
icebp
jne
notl
into
cmpsb
dec
mov
cmp
rcrb
pop
cld
iret
sbb
addr16
popa
and
mov
loope
ljmp
daa
fpatan
js
cmp
jg
pop
shll
add
mov
rep
cwtl
pop
dec
mov
jge
sbb
sub
inc
dec
or
dec
fdivs
cltd
in
adc
push
pop
adc
cmp
mov
jl
fdivrl
push
mov
test
push
xlat
push
lret
popf
cmp
mov
sbb
dec
fstpt
scas
aam
push
jl
or
adc
adc
sbb
lahf
add
outsl
inc
mov
push
cmpb
push
lcall
jle
loope
insl
inc
dec
sbb
insl
sbb
out
int
xorl
pop
in
mov
pop
inc
and
mov
cli
or
mov
fcompl
jne
add
jbe
lds
jb
loope
out
mov
lcall
pop
sbb
lret
lcall
sbb
rcrb
mov
sub
scas
mov
push
jo
test
or
dec
xchg
in
mov
push
scas
or
aas
sbb
and
add
std
push
push
cld
inc
lods
push
jne
cmp
and
xor
xchg
and
cltd
push
sarb
jecxz
out
mov
sbb
repz
mov
repnz
or
das
shl
push
jnp
test
add
mov
cmpsb
pop
jno
mov
jl
sbb
outsl
lods
adc
sbb
inc
push
push
pop
push
repz
cld
out
inc
dec
xchg
push
push
movsl
lea
fwait
mov
aam
push
out
lret
mov
xor
mov
es
or
fiaddl
dec
push
xor
sub
push
addb
xchg
jmp
das
data16
shlb
stc
cmp
in
out
daa
mov
daa
sbb
pop
dec
jle
ds
jbe
cmp
pop
push
fcoml
fs
xorb
inc
push
cli
lahf
xor
out
fsubr
push
mov
mov
sbb
daa
jo
ret
inc
push
mov
xchg
xor
mov
add
leave
mov
mov
mov
popa
push
ja
or
and
mov
xor
xchg
movsl
movsb
adc
int
adc
jp
dec
js
movsl
inc
mov
cld
aaa
dec
inc
mov
xor
cmp
nop
sbb
or
jnp
imul
pop
jb
xchg
gs
cmp
push
es
insb
jbe
stos
pop
dec
ss
dec
push
cmpsb
test
mov
neg
mul
inc
outsb
test
mov
out
adc
adc
or
sbb
aam
push
jbe
fidivl
xchg
dec
jle
xor
and
icebp
sbb
aas
mov
xchg
inc
xchg
sub
fiadds
lds
mov
pop
clc
repz
enter
mov
fnstsw
or
adc
inc
repz
inc
jl
adc
lcall
ja
push
jg
push
mov
push
and
inc
mov
cmp
or
push
pop
inc
repz
lcall
dec
mov
adc
mov
cld
pushf
mov
jl
roll
mov
aas
adc
fdivr
lcall
hlt
sbb
push
or
lock
push
mov
xchg
imull
test
sbbl
or
cmc
and
fmuls
dec
fcompl
inc
sub
cmc
mov
cmp
add
or
stos
jl
fisttpll
add
fistpll
div
ret
into
dec
push
loop
in
in
dec
mov
cmp
inc
cmpsb
sub
sbb
mov
lret
outsb
xchg
cmp
in
ljmp
fcoml
out
xlat
sbbb
movsl
cmp
pop
cmc
xchg
jne
daa
adc
xor
aas
xor
push
test
test
sub
inc
cmp
cmp
or
mov
push
in
mulb
push
inc
and
fs
mov
and
and
push
cmp
fmull
xchg
add
cltd
pop
clc
adc
push
push
aam
dec
jg
cmpb
cmp
jno
movsb
popf
inc
inc
mov
add
loop
out
pop
pop
xor
adc
pop
enter
inc
dec
idivb
push
fwait
jb
fnstenv
mov
and
or
aad
fmul
arpl
xor
jecxz
and
cmpsb
adc
mov
inc
sub
sub
mov
xchg
dec
jnp
sub
icebp
push
cld
gs
cmp
ds
dec
pop
jmp
mov
stos
dec
leave
add
or
jmp
cltd
pop
xor
cltd
cld
push
xchg
and
out
xor
out
stos
sahf
frndint
fwait
gs
pop
xchg
mov
sub
jl
das
mov
icebp
ret
mov
xchg
in
lret
pop
int3
in
mul
push
jl
lock
roll
or
loop
pop
movsb
filds
sbb
pop
adc
push
repz
lret
sbb
or
mov
mov
ficoml
mov
ds
cmp
push
jecxz
xchg
mov
xchg
xor
fadd
stos
cmp
or
jnp
mov
loop
mov
je
mov
sbb
inc
loop
sti
push
jle
mulb
mov
xchg
stos
sahf
jl
xor
dec
push
xor
jge
push
mov
test
cmp
mov
sti
insl
push
stc
std
push
xor
loopne
mov
out
orl
imul
outsl
arpl
scas
outsl
lret
lcall
into
or
les
push
repz
dec
cmpsl
js
cli
mov
cmp
cmp
int3
dec
push
xchg
test
add
push
cwtl
push
arpl
sti
repz
pop
in
pop
les
lea
outsb
mov
aas
adc
mov
mov
js
or
mov
add
jle
push
ficoms
pop
filds
aas
mov
mov
sbb
adc
jo
pop
enter
aas
insb
clc
sbb
cmp
inc
inc
mov
xor
mov
cmpsb
jmp
xorl
adc
or
stc
ret
push
cwtl
pop
inc
lea
repz
sbb
push
cmp
dec
mov
mov
pop
cwtl
pop
dec
call
mov
orl
testl
fwait
xchg
push
repz
jno
push
jl
or
arpl
lahf
add
test
sub
cld
mov
sub
ss
lret
xchg
repz
jno
mov
pop
inc
cmp
lret
xor
xor
mov
sahf
sbb
sbb
mov
xchg
pushf
mov
loope
jmp
mov
aam
mov
aas
repz
aas
inc
inc
gs
jno
movsl
or
sub
and
cmc
xor
xchg
out
cmp
sbb
mov
inc
mov
data16
push
and
mov
icebp
mov
push
sbb
adc
cwtl
cld
adcl
mov
cmpsl
call
sbb
pushf
shlb
inc
mov
cmc
lea
fs
repz
pop
cmpsb
xor
hlt
leave
xor
outsb
cld
nop
test
enter
dec
push
mov
dec
stos
popf
adc
pop
paddb
gs
jb
mov
jae
scas
test
adc
clc
push
cld
fbstp
in
movsl
stc
dec
inc
lods
or
roll
in
jle
out
lret
add
sub
and
andb
add
rcrb
sbb
push
xchg
ss
inc
dec
cld
mov
mov
sbb
jl
ja,pt
cmpsb
mov
cmp
dec
jle
cmp
out
cld
fbld
fcmovne
jne
push
stos
inc
jno
and
enter
dec
sbb
mov
inc
adc
inc
jl
or
aas
adc
mov
push
stc
dec
lds
xchg
orl
add
jl
leave
mov
push
out
push
or
add
fsubr
fisttps
movsl
mov
push
add
lret
xor
bound
lahf
ficoms
mov
fwait
sub
xor
clc
xchg
sub
es
adc
xor
rcrl
pushf
adc
sub
xchg
add
cld
sbb
dec
jo
cmp
addb
aad
mov
lea
jb
cld
push
mov
cmpsb
cmp
lods
sub
test
das
cmpsb
push
adc
push
loope
push
data16
icebp
ret
mov
lods
movsb
cmp
repz
std
out
inc
mov
xlat
and
mov
and
sti
push
inc
mov
inc
repz
inc
or
pop
gs
and
add
out
dec
jne
inc
inc
or
imul
pop
mov
dec
inc
push
push
xor
mov
mov
or
shr
ljmp
stos
sub
scas
jno
jl
jge
stc
mov
push
mov
sub
loope
inc
pop
adc
adc
nop
mov
cld
test
out
push
pop
clc
jb
stc
test
lret
addb
jl
sbb
jecxz
cld
jns
adc
push
fldcw
mov
cmc
lret
out
pop
test
movsl
dec
loope
jl
xchg
cld
dec
push
in
dec
cmp
repnz
ret
dec
mov
mov
dec
int
orb
insl
loope
ret
outsb
out
shll
lods
out
dec
dec
rorb
aas
lock
and
or
insb
push
push
push
cmp
jnp
sub
cmpsb
xlat
or
and
mov
xchg
scas
int
jns
nop
cmp
movsl
or
ds
arpl
lret
nop
mov
cmp
push
add
aam
lods
cli
inc
pop
stos
lock
out
imul
jg
pop
ss
or
ljmp
adc
test
xor
cmpsb
cmc
mov
add
xchg
push
shl
rcr
rcl
dec
push
bt
push
or
movsbw
not
shld
push
shl
mov
shl
push
pusha
btr
mov
shl
shr
dec
mov
call
call
sub
scas
sub
cmp
pop
dec
clc
test
pop
lods
lock
scas
xchg
in
cmp
lods
addr16
addr16
outsb
rcll
aas
stc
mov
jb
cmp
into
sub
mulps
enter
adc
inc
cmc
pop
pushf
test
sub
xchg
clc
mov
ss
in
cs
repz
and
push
aad
mov
pop
movsl
mov
mov
or
cmp
jp
cmpsb
ds
jb
mov
clc
out
lds
push
sbb
mov
cmp
les
out
mov
adc
loop
xor
test
xchg
ret
push
and
daa
push
daa
popf
pop
imul
pop
shl
das
out
stc
mov
dec
out
shll
lods
adc
pop
mov
or
repz
adc
nop
fstpl
outsb
ss
add
mov
leave
decl
leave
sbb
mov
inc
cltd
shl
or
data16
mov
mov
stos
out
stos
xor
pop
cmpl
sbb
xlat
ret
ljmp
fadd
cmp
movsl
jb
and
mov
js
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
push
nop
out
inc
xchg
xchg
push
loope
sbb
sahf
mov
stc
outsl
push
notl
sub
stos
jle
popf
or
imul
sub
xchg
cmpsb
adc
push
and
outsl
daa
rorb
js
pop
idivl
jecxz
sub
movsb
jle
jne
push
lods
imul
ss
dec
aad
ljmp
dec
jbe
inc
pop
sub
pusha
push
xorl
shlb
lcall
stos
jb
out
in
mov
fwait
push
test
in
outsb
ds
fs
push
pop
stos
cli
mov
ss
fwait
insl
mov
out
jns
inc
adc
sub
xchg
insl
sti
stos
stc
pop
xchg
out
div
pop
aam
outsb
hlt
addr16
mov
fwait
xorb
and
stc
cltd
les
mov
aam
push
sub
leave
xlat
mov
jl
rorb
ret
ret
push
add
add
sarb
out
movsb
ja
mov
pop
jne
sbb
addl
fstps
jecxz
int
push
sub
daa
sub
in
mov
push
pop
mov
sub
and
mov
leave
mov
inc
or
out
je
xchg
in
lods
xor
jbe
mov
xor
xchg
lret
mov
js
xchg
or
lahf
add
and
ja
pushf
lea
jmp
pop
sbb
sub
xchg
add
inc
mulb
xor
loopne
dec
push
add
or
cmp
mov
mov
mov
insl
cmp
outsb
fbld
pop
std
mov
or
ret
xor
jae
loope
mov
xchg
jmp
adc
xchg
stos
jae
dec
jb
sbb
jmp
ror
adc
mov
jle
jo
iret
stc
test
pushf
fstl
sub
mov
jno
push
shlb
add
iret
xchg
loope
mov
clc
cmp
xchg
out
movsb
and
adc
jbe
adc
fisubl
mov
or
mov
or
xchg
jmp
cmp
arpl
pop
dec
inc
jg
inc
in
mov
inc
sub
mov
mov
pop
outsl
sub
pop
or
test
mov
mov
mov
sahf
add
pop
arpl
push
cmp
iret
cmc
enter
enter
bt
ror
jmp
add
add
lea
pop
mov
call
jmp
jmp
sub
push
xchg
test
inc
push
add
lock
pop
cmpsb
pusha
je
mov
scas
lock
roll
inc
jae
push
insb
mov
fisubl
movsl
cwtl
fwait
ds
dec
mov
jnp
shrb
xor
in
call
mov
stc
and
aaa
sbb
pop
push
add
movsb
jle
ss
mov
adc
sub
psubusw
imul
lret
inc
xchg
inc
testb
mov
cmp
or
xchg
dec
or
sub
fwait
sarb
das
ja
ss
scas
stos
ret
add
shrb
popf
lods
clc
lds
test
insb
mov
push
comiss
jb
nop
mov
das
xor
int3
cmc
mov
shl
jo
xorb
shr
rorl
mov
dec
push
and
and
or
stos
mov
nop
push
ljmp
inc
dec
repnz
popa
lods
sub
leave
pop
or
out
pop
out
daa
pop
inc
bound
dec
dec
js
push
das
push
cmp
lods
pushf
sub
sbb
add
movsb
ds
jge
sub
fistpll
pusha
or
adc
and
sbb
test
iret
shrl
push
imul
addr16
in
push
mov
pusha
cmp
add
test
leave
clc
adc
push
and
bound
subb
inc
das
xor
subb
jle
jb
jo
or
cmp
filds
cmp
loop
pop
out
xchg
in
cli
pop
mov
inc
sahf
inc
push
inc
jns
sbbl
mov
xor
cltd
imul
jns
fisttpll
dec
pop
loopne
xor
addr16
mov
outsb
adc
or
cmp
or
xchg
push
das
push
inc
out
gs
and
popa
lods
pop
jmp
sbb
jge
jno
pop
xchg
gs
sbb
dec
sub
repz
rorb
mov
outsb
xor
mov
xor
pop
shrl
sub
mov
push
xor
xor
fs
insb
add
iret
cmp
lcall
jecxz
xor
mov
mov
add
sbb
inc
iret
imul
in
push
or
dec
jb
bound
sub
aad
icebp
push
cwtl
insl
scas
pop
dec
sahf
pop
xor
pop
xchg
int
fidivrs
xor
jle
call
jne
sarl
cli
mov
js
pop
pop
adc
mov
icebp
sub
lcall
cmpsl
sbb
jae
xchg
mov
out
rol
mov
inc
adc
je
pop
add
xchg
and
cmp
inc
aas
daa
lods
inc
fmull
repz
inc
push
cmpsl
lcall
scas
sub
loope
fistpl
xorl
pop
and
lods
inc
push
add
pop
out
ror
ja
jle,pn
dec
add
sub
outsb
sub
cltd
jae
sub
xchg
nop
stos
xchg
xlat
and
sbbl
test
dec
fildl
and
add
data16
loope
mov
shrb
mov
fs
cs
cli
mov
sbb
mov
lret
pop
aam
mov
imul
push
lret
xchg
gs
and
mov
test
dec
sbb
mov
jns
rcl
pop
and
test
scas
dec
sbb
and
xchg
and
mov
mov
mov
and
xchg
xchg
mov
inc
mov
jp
mov
add
mov
mov
dec
out
ret
add
lods
mul
push
faddl
adc
cmp
xlat
jle
jnp
push
or
aam
pop
imul
bound
inc
into
push
lds
jmp
jne
push
xor
cmp
push
pop
out
testl
call
rcl
xchg
mov
das
out
sbb
xchg
or
xchg
mov
push
data16
mov
dec
jmp
mov
cmp
mov
or
dec
mov
iret
rol
hlt
xor
xchg
cmpsb
jg
jmp
mov
jb
shlb
jne
jmp
cwtl
mov
stos
sbb
sbb
jl
sub
push
push
xchg
enter
dec
fucomi
jp
cmpsl
sar
in
lock
pop
stos
push
push
das
imul
cmp
ret
aam
stc
lahf
cmp
imul
fldt
arpl
jmp
cmp
aad
nop
xchg
dec
out
push
xchg
xchg
and
mov
jo
repnz
negb
ret
jb
jge
mov
fs
sbb
cmp
cli
insb
mov
daa
test
and
xor
bound
and
push
cmpsb
push
inc
hlt
inc
sbb
std
leave
xlat
xchg
inc
aas
dec
aas
insl
push
or
inc
stos
ljmp
sub
push
or
xchg
pop
pop
mov
addr16
adc
xchg
pop
out
mov
das
push
adc
inc
mov
adc
cs
push
shrb
cmpsb
pop
in
jge
dec
dec
pop
das
jecxz
pusha
cltd
rcrb
pop
inc
pop
addr16
hlt
dec
inc
shr
das
cmp
push
push
ret
xchg
pusha
push
and
mov
push
movsb
mov
rcll
mov
pop
aaa
aas
add
cli
stos
sub
dec
xlat
xchg
pushf
xorl
in
mov
incl
or
icebp
add
push
sub
ja
loopne
jne
fstps
cmpsl
and
sar
std
dec
pushf
fstps
sub
into
pop
loopne
jl
incb
hlt
dec
push
imul
push
jl
pop
cmp
test
xor
cmp
iret
sbb
push
sub
push
imul
inc
jge
adc
jmp
dec
std
dec
fxch
jle
insb
and
xchg
roll
iret
stc
enter
adc
jae
and
pushf
pop
outsb
cmp
stc
mov
add
cmp
fnop
adc
leave
mov
cmp
loop
jmp
mov
push
mov
fldl
lods
pop
fldt
cmpb
pop
mov
fimuls
das
jne
pop
repz
xor
xchg
jno
lret
lea
in
jnp
lods
fimull
sbb
aam
jae
jo
aaa
popa
sbb
sub
jl
add
xchg
mov
add
loopne
cmpsb
cld
sbbl
in
cmc
sbb
and
adcl
mov
repnz
adc
mov
xlat
adc
sub
and
roll
pop
orps
icebp
popf
or
lcall
je
inc
repnz
int3
push
dec
mov
adc
mov
jb
test
xchg
sbb
add
inc
and
decl
je
or
jecxz
cld
ljmp
es
das
pusha
pushl
movb
lea
jne
jmp
pusha
adc
push
lea
jmp
jns
sub
test
test
cmc
or
pusha
movb
pusha
jmp
ftst
sub
xor
sub
das
cli
insl
pushf
dec
flds
inc
jle
sub
add
loopne
sub
push
pop
dec
jnp
fmuls
pushf
cmp
js
jg
mov
iret
dec
add
xchg
xchg
push
psubusw
fsubp
ret
mov
testl
cmp
push
in
add
popa
xor
push
xchg
push
pop
sbbl
and
mov
dec
adc
and
hlt
adc
jno
mov
icebp
and
push
add
movsl
ret
dec
mov
mov
pop
push
push
or
mov
mov
xchg
mov
lock
testb
push
push
ficoms
or
or
jns
test
outsl
sbbl
add
enter
jmp
notb
enter
testl
push
adc
lock
lock
repnz
je
je
xor
imull
ja
xor
dec
sbb
repnz
push
mov
movb
lea
ja
push
pushl
push
lea
jb
stc
stc
cmp
cmpb
jmp
lret
adc
ljmp
int
stos
xlat
js
pop
movsl
loop
stos
xchg
daa
mov
mov
lock
popa
nop
popa
jg
cmpsb
pop
je
insl
push
xchg
mov
movsl
dec
lds
mov
pop
in
sub
rol
sbb
jo
mov
cmp
ljmp
push
and
and
fiadds
sub
dec
jb
das
inc
push
sbb
popf
pop
xchg
das
mov
push
outsl
adc
enter
jg
hlt
lods
cli
cmpsl
cmp
rcrl
xor
mull
push
adcl
dec
stc
xchg
lahf
ljmp
jns
ss
push
sub
dec
insl
fisttpl
aas
xor
fstpl
xchg
daa
sahf
sub
clc
in
mov
sahf
scas
stos
cmp
push
push
scas
xlat
sub
or
or
xor
ret
out
xchg
dec
pop
sub
fistpl
fisubrl
cmp
pop
outsl
mov
or
mov
sub
jp
and
pop
std
les
lahf
dec
push
outsb
mov
movsb
ret
sub
stos
inc
cmp
pusha
pop
push
sub
movsb
repnz
jb
lcall
imul
push
movsl
cwtl
iret
jne
test
sbb
sbb
fwait
cmpsb
hlt
lods
loope
test
leave
shl
in
pop
lea
mov
cmp
mov
jle
lcall
test
xor
call
cmp
xor
jle
fiaddl
loope
les
push
mov
inc
dec
push
and
cmp
push
mov
je
pop
test
popa
cmp
push
movsl
push
sub
xlat
add
ds
arpl
dec
mov
or
xor
mov
mov
pop
js
mov
lret
adc
or
mov
or
pop
out
js
cmp
out
sbb
pop
sub
fadds
pop
pop
stos
mov
pop
push
push
or
incl
sbb
sub
adc
sub
add
inc
adc
roll
aas
push
mov
jbe
repz
int3
jecxz
in
cmpsb
fsubl
mov
mov
xchg
aam
mov
pushf
sti
and
mov
mov
rorb
into
cwtl
add
addr16
or
rolb
gs
or
gs
in
xor
fldt
inc
push
dec
adc
mov
push
jmp
outsl
push
jle
adc
lcall
das
outsl
jnp
add
push
inc
movb
ror
call
jb
sbbb
push
push
add
inc
mov
rolb
scas
jne
xchg
xchg
dec
cld
mov
popf
cmp
dec
fisttpll
mov
fsubr
bnd
adc
ret
hlt
inc
push
push
xorl
movsl
rcll
mov
dec
xor
pop
data16
loope
test
sbb
ror
inc
test
pop
xchg
push
xor
je
shl
nop
inc
push
pop
inc
adc
aas
mov
dec
mov
jbe
adc
inc
xor
mov
rorl
rorl
test
ret
xchg
into
lret
lds
sub
lea
inc
inc
sti
push
cmp
cmpsl
xchg
scas
ror
movsl
loope
ret
mov
leave
adc
adc
mov
aad
ss
icebp
push
mov
cmpsl
cmp
rcll
sti
cmpsb
mov
fs
je
test
sub
bt
clc
bt
cmp
call
mov
push
jmp
int
cmp
fisttps
fildll
sti
push
aas
scas
cwtl
xchg
push
lods
addr16
jo
and
jo
or
dec
xor
xabort
jb
mov
dec
fmulp
mov
fstpt
in
cs
icebp
push
cwtl
jmp
aas
lods
mov
sbb
fld
stc
cmp
mov
adc
gs
inc
mov
mov
fwait
cmpsb
dec
je
cmp
xor
xor
repnz
push
add
ret
push
dec
push
lahf
ljmp
cmp
sbb
mov
dec
fnstcw
cmp
dec
xor
inc
movsb
cs
push
jmp
lea
jbe
mov
punpckldq
incb
or
hlt
stos
or
outsl
enter
mov
addr16
mov
pop
or
inc
icebp
dec
xor
sbb
out
and
push
push
inc
addb
aas
ret
jp
daa
js
jo
icebp
inc
sub
xchg
inc
lcall
out
ret
xchg
ss
fimull
xchg
lea
dec
cmp
xor
into
aam
mov
popf
add
test
add
inc
mov
xor
mov
cmpsb
mov
mov
pop
stos
sbb
dec
sbb
test
jne
lods
mov
movsl
xchg
mov
clc
sub
xor
int3
test
cmpsb
mov
fisubs
sbb
push
pop
push
adc
roll
insb
sbb
mov
dec
fsubrl
lret
lret
repz
xor
xchg
js
push
add
push
sub
sti
sti
and
vxorps
cld
jl
incl
je
mov
loopne
jne
jb
sbb
fcmove
jp
insb
stc
dec
mov
xchg
xor
jge
hlt
rolb
lds
sbb
es
dec
cmpsl
mov
sarb
outsb
xchg
xor
inc
add
jo
rcrl
dec
and
add
aas
xor
int
mov
sub
fwait
push
aas
outsl
jns
cltd
mov
pop
dec
aaa
sub
cltd
fs
cmpl
stos
push
jb
lahf
ret
push
insb
push
cmpsl
pusha
call
pushf
add
pushf
call
aas
add
sbb
out
jnp
lahf
lods
js
sbb
or
mov
push
xor
int
dec
adc
testb
ret
xor
adc
pop
insl
xchg
rcl
es
fwait
insl
cwtl
fnsave
mov
aad
xor
popf
fcomps
dec
lods
lods
mov
rclb
stc
inc
push
xor
dec
adc
and
stos
sbb
mov
xor
addb
lret
xchg
imul
hlt
int
aas
cmp
lret
xchg
and
push
idiv
call
lea
jae
pusha
mov
call
adc
loop
xor
mov
pop
cld
mov
inc
dec
xor
dec
xor
ret
pushf
jecxz
lret
ds
mov
jmp
lret
shrl
mov
sub
cmpsb
push
dec
xchg
into
pop
jno
cmp
xchg
std
mov
jge
fldl
mov
ja
jmp
bound
mov
call
fmuls
or
test
adc
decb
inc
cld
icebp
and
aad
pushf
pop
sub
push
and
xchg
sar
aam
faddl
out
mov
hlt
aad
test
leave
mov
nop
xchg
mull
mov
push
pop
inc
imul
pop
mov
popa
jg
js
in
sub
or
rcll
sbb
pop
cmp
fucomi
xchg
xchg
frstor
movsl
mov
sbb
or
or
fldcw
dec
fimuls
xchg
adc
or
xchg
insb
ss
ss
mov
or
stos
out
nop
pop
mov
mov
dec
clc
roll
stos
mov
lods
or
pop
int3
enter
dec
xor
pop
adc
push
sahf
dec
jno
addb
pop
arpl
fidivs
adc
stc
jecxz
add
test
cmp
cld
jecxz
or
fwait
movsbw
mov
pusha
lea
jmp
rdmsr
incl
cmp
sub
inc
sbb
mov
out
mov
mov
cmp
push
mov
push
test
adc
cmc
mov
scas
data16
fisubs
cmp
fisttpl
adc
mov
and
xlat
cmp
mov
and
ret
in
push
pop
popa
jl
cwtl
lds
mov
push
jle
pop
cs
es
xor
dec
clc
lea
sub
mov
out
notb
sbb
mov
iret
stos
outsl
cltd
imul
shl
dec
add
cmc
cs
push
push
lret
push
push
xor
push
and
loopne
fs
jp
lcall
mov
inc
xchg
out
ss
stc
test
clc
stc
cmp
push
mov
mov
lea
jae
push
call
inc
js
add
out
and
xorb
stos
mov
lahf
fisubrs
sub
add
iret
cwtl
sbb
sbb
or
mov
xchg
inc
sbb
inc
xchg
dec
clc
or
mov
xchg
into
pop
popf
dec
in
std
xchg
int
mov
xor
jae,pn
xor
and
out
dec
faddp
cli
ljmp
mov
xor
jecxz
add
stos
imulb
xlat
scas
mov
or
dec
or
adc
outsl
mov
les
cmpsb
loop
jmp
or
frstor
fwait
pop
addr16
sbb
je
xchg
imul
fcomps
adc
mov
xor
ret
jno
dec
adc
pushf
pusha
shlb
aad
xlat
ret
cmp
sbb
mov
ds
js
outsl
jbe
xlat
out
and
xor
add
ja
hlt
xor
popa
cmp
ficomps
mov
lcall
push
mov
mov
push
mov
mov
int
push
adc
cmpsl
js
mov
jp
sbb
bound
stc
push
stc
dec
shll
xchg
push
aaa
out
testl
test
mov
mov
jbe
push
xor
lret
mov
aam
dec
test
jg
inc
cmc
ret
or
jle
lcall
dec
lcall
test
cmp
jl
jmp
pop
mov
jmp
and
orb
and
popl
mov
and
jmp
lahf
jne
and
mov
mov
jp
mov
mov
mov
mov
mov
and
cltd
inc
jge
ror
sti
cmpsl
mov
jnp,pt
pop
xor
je
xchg
inc
rcll
sti
push
mov
mov
lret
xor
js
pop
or
push
int3
pop
dec
adc
sbbl
mov
shlb
test
movsl
cmp
pop
add
adc
push
fs
jmp
sti
aaa
roll
or
mov
xorl
mov
adc
xor
aaa
leave
mov
and
sub
bound
rorl
dec
icebp
adc
fsubrl
popf
pop
xor
pop
push
sbbl
mov
nop
xor
repz
pushf
jecxz
das
cmp
stos
ss
push
testb
pop
ja
mov
repz
loop
sub
fwait
outsb
fisubrl
mov
mov
shrl
pop
out
mov
or
sbb
faddl
ja
imulb
call
pop
and
lea
dec
sbb
stc
int3
test
mov
les
iret
dec
pop
and
push
xor
arpl
mov
adc
xor
stc
int3
test
std
or
push
or
aad
frstor
repz
js
test
lds
xor
aaa
lods
ja
rorb
jg
sahf
test
in
dec
add
cs
ret
jg
cmc
stos
rcr
push
vpmulhuw
cmp
decb
iret
xorb
mov
dec
xor
mov
mov
add
mov
leave
decl
jo
push
or
mov
sti
mov
ss
hlt
sub
sub
jge
icebp
add
aaa
loope
cmpsb
nop
movsl
adc
push
add
ss
fstps
loop
test
dec
test
lds
int
push
imul
jl
pop
inc
sbb
es
dec
adc
out
xchg
and
out
pop
lret
jno
inc
cmc
add
arpl
loopne
movsb
cmp
popa
xor
adc
push
pusha
lea
call
cmc
sub
pusha
movb
pushl
lea
jne
push
push
mov
jmp
jmp
movb
pushl
popl
mov
pushf
pushl
movw
pushl
ret
stc
or
pusha
lea
jne
inc
and
mov
clc
or
je
pusha
pushl
lea
je
jmp
lea
je
jmp
lahf
ficoml
add
adc
inc
push
add
adcb
jne
xor
scas
push
fs
jge
ret
xchg
mov
or
loopne
insb
aas
jmp
lods
push
cs
outsl
jns
loopne
xlat
subb
sub
std
rcll
xlat
insb
mov
mov
ljmp
in
and
sub
push
cmp
xchg
leave
pop
sbb
sti
inc
pushf
cmpl
jbe
mov
es
cmp
xor
cmp
push
call
stc
sub
inc
fiadds
dec
push
jg
xor
les
adc
xor
add
push
rolb
inc
sbb
mov
jecxz
test
dec
repnz
test
mov
xor
jecxz
push
jne
xor
hlt
xor
and
sahf
arpl
fmuls
pop
popf
dec
out
push
das
push
mov
das
pop
loopne
xchg
mov
fisubs
jno
notb
in
mov
mov
daa
add
push
ja
repz
push
push
shlb
cmp
push
xor
or
das
nop
cltd
in
in
adc
sub
mov
cmp
cmc
insb
pop
push
mov
inc
repz
lock
call
mov
ret
lret
into
mov
sub
shr
ss
fistps
jmp
incl
nop
xlat
ds
leave
stos
incb
mov
mov
xchg
enter
int3
adc
dec
jbe
mov
and
jae
clc
call
push
pop
add
aam
xor
jo
push
loop
ret
pop
inc
pop
mov
pop
pop
mov
rolb
xor
mov
stos
jne
scas
testl
aam
shl
in
mov
jns
fsubrs
movsb
jge
fbld
mov
sub
int3
adc
decl
or
int3
imulb
das
xchg
insb
ss
xor
push
sarb
cwtl
aad
aam
or
push
leave
mov
cs
push
cmp
jg
jg
roll
xchg
lcall
pop
roll
fs
and
jnp
repz
loop
pop
jge
cmc
jmp
out
adc
ficomps
pop
icebp
mov
sub
push
dec
loopne
inc
pop
popa
and
lret
subb
pop
dec
call
std
cmpl
inc
cli
pop
arpl
aad
das
adcb
sub
fisttpl
std
jmp
push
sbb
cmp
test
shrl
scas
je
out
pop
bound
fwait
push
jg
loop
adc
jne
sbb
sbb
movsl
das
leave
enter
add
sbb
jbe
loopne
dec
mov
dec
sbb
push
push
fucom
test
push
and
cmp
adc
jae
push
mov
call
mov
lret
adc
xchg
les
push
jns
out
in
pushf
mov
pushl
inc
lea
call
cmpsb
into
add
repz
bound
shll
add
fwait
dec
or
adc
mov
popa
ja
jbe
jb
pop
pushf
out
mov
lahf
dec
xor
inc
xor
shll
mov
nop
into
mov
mov
hlt
pusha
fcomip
mov
scas
insl
jg
add
or
or
xchg
adc
jae
xchg
rcrb
cs
into
xchg
loope
lret
xor
mov
pop
lret
aam
cmp
in
rorb
movb
adc
pushf
mov
lea
jmp
push
insb
mov
inc
push
ret
adc
push
mov
adc
lcall
and
adc
or
mov
adc
test
outsl
pop
sub
fidivs
mov
sahf
or
xchg
in
fildl
fiadds
ds
iret
jl
xchg
roll
icebp
mov
mov
dec
push
jge
cmp
fidivrs
xor
les
stc
and
inc
ds
loopne
mov
insl
outsb
or
pop
add
push
xor
sub
push
fisttpll
pop
inc
out
push
xchg
es
ljmp
mov
xor
jg
movsb
sbb
adc
ja
xchg
stos
and
cmpb
pusha
jp
fwait
cmpsb
into
out
lods
ror
stc
out
imul
pop
sub
insl
lock
mov
je
nop
test
movsb
imul
lahf
cmc
stc
ror
jmp
fsub
sub
xor
dec
cmp
dec
jl
sbb
movsl
xor
add
fimuls
ret
xor
pop
in
movsb
mov
push
loopne
jne
inc
aam
orb
xor
mov
movsl
ss
mov
and
lods
bound
push
sahf
iret
fwait
mov
ror
jl
mov
mov
scas
lods
or
test
dec
push
pop
jnp
sti
cmpsb
fwait
inc
ja
jnp
out
cmc
mov
inc
cmp
loope
bound
add
xchg
inc
js
lret
fwait
insl
mov
mov
jo
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
div
incl
fsubs
rorb
jmp
loop
ljmp
push
cltd
dec
jp
pop
sub
or
jp
push
fbstp
xlat
adc
loop
lret
repnz
dec
inc
cmp
jle
sbb
push
and
roll
push
cld
loope
pop
push
hlt
cmpsb
inc
std
clc
add
into
or
jmp
pop
mov
mov
call
xadd
pusha
sbb
testl
dec
ja
xchg
sub
sbb
bound
sub
push
cltd
out
jge
pop
dec
cmp
das
sbb
jns
xor
dec
movsb
xor
and
lret
cli
stos
out
in
xchg
lods
data16
test
cmc
jge
sub
outsl
sub
xchg
sbb
jnp
fdivs
test
mov
mov
push
xchg
stc
jge
cld
orb
fwait
and
jle
dec
popf
aad
and
jb
jp
clc
fimull
ljmp
std
add
jecxz
inc
pop
add
fisttpl
dec
lock
jmp
popf
fcoms
xor
inc
xor
repz
rcrl
mov
mov
testb
jae
cltd
ret
mov
jno
pop
sahf
push
xchg
int3
fidivs
push
xor
xchg
loop,pn
test
sbb
filds
movsb
dec
stos
xor
jle
xor
and
nop
pop
imul
ss
iret
decb
fs
push
lcall
mov
jno
dec
or
pop
incl
out
pop
jecxz
lock
pushf
ljmp
sub
mov
add
inc
sbb
sbb
add
jp
push
pop
cwtl
add
popa
mov
fisubrs
hlt
mov
dec
push
xchg
shrl
out
dec
push
or
jo
pushf
iret
iret
iret
mov
cmpsb
xlat
popa
fnclex
dec
sub
pop
loope
adc
insl
lock
shll
adc
hlt
mov
out
sarl
xor
aas
mov
xor
jmp
and
mov
jnp
je
pop
test
push
cmc
arpl
and
test
call
pop
cmpsb
daa
cld
jmp
and
inc
mov
xchg
xchg
jecxz
ret
iret
mov
inc
sahf
mov
sti
inc
jge
lods
push
push
out
mov
jb
shrb
sbb
xor
jmp
mov
call
inc
add
or
jae
aaa
movsb
cmp
stos
jmp
nop
and
data16
and
sub
jge
sbb
mov
dec
clc
cmc
push
daa
and
cpuid
xchg
add
lods
and
push
ds
testl
and
push
cmp
shlb
fisubl
addb
popf
cmp
loopne
int
mov
cmp
mov
add
mov
pop
loopne
pop
sbb
add
cmp
rorb
sbb
stos
out
xadd
mov
adc
bswap
test
sar
add
jmp
cwtl
pushl
popl
pop
movb
mov
not
movl
cwtl
lea
jmp
lea
ret
call
add
pusha
mov
pushf
pusha
lea
jmp
call
mov
jmp
pusha
setbe
mov
pop
lahf
mov
jmp
pushf
call
bts
xor
shl
not
movzbw
lea
bswap
push
shld
xor
movzbw
movzbl
pushl
mov
push
pushf
not
call
mov
inc
pusha
dec
xor
stc
sub
rcl
mov
stc
add
movw
mov
movb
pushf
pushf
lea
jmp
pusha
mov
movb
jmp
push
call
cmp
add
js
push
pusha
pushf
popl
call
dec
adc
pop
and
xor
bt
pushf
call
not
lea
jl
push
push
mov
pushf
pusha
mov
pushl
ret
mov
mov
jmp
jmp
pusha
mov
jmp
call
jmp
jmp
sub
clc
test
xor
bt
test
push
sub
pushf
pusha
jmp
jmp
call
call
cbtw
bt
clc
pushf
pushf
cwtl
clc
bt
test
sub
mov
call
call
jmp
mov
call
mov
adc
xor
sub
mov
push
pushf
pushf
sub
mov
shr
call
and
pushf
mov
jmp
pushf
mov
mov
movzbl
movzbw
pushf
popl
pop
push
mov
movzbw
not
mov
pushl
mov
push
movl
movsbw
mov
push
pusha
push
lea
jmp
pusha
push
jmp
cmpsl
into
fwait
decl
fwait
decl
aam
pushl
out
fwait
cmp
fwait
pushl
fwait
call
jecxz
call
fwait
cld
out
lcall
fwait
ljmp
negb
incl
ficompl
cmp
fwait
pushl
aam
call
jmp
incl
add
cmp
incl
call
fwait
decl
fistpl
push
rcrl
call
icebp
fwait
jmp
aam
pushl
fwait
inc
stc
fwait
lcall
into
fwait
fldln2
fwait
call
aam
inc
stc
fwait
call
fwait
incl
out
cmp
fwait
cmp
fwait
push
hlt
fwait
incl
loop
call
jecxz
call
out
fwait
incl
stc
fwait
jmp
jecxz
dec
into
fwait
lcall
repnz
jmp
fstps
decl
into
fwait
inc
stc
fwait
dec
into
fwait
ljmp
fwait
push
hlt
fwait
call
aam
inc
stc
fwait
lcall
fwait
ljmp
negb
dec
into
fwait
push
hlt
fwait
lcall
into
fwait
cmp
fwait
cmp
fwait
fldln2
fwait
decl
fwait
inc
jecxz
ljmp
fwait
decl
fwait
incl
fwait
incl
stc
fwait
incl
loop
jmp
dec
out
fwait
pushl
hlt
fwait
ljmp
negb
inc
jecxz
cmp
pushf
push
rcrl
call
add
shl
inc
jecxz
lcall
icebp
fwait
call
out
fwait
call
ficompl
call
ficomps
push
hlt
fwait
decl
negb
fwait
jmp
incl
stc
fwait
lcall
repnz
cld
out
call
in
jmp
cld
out
dec
into
fwait
decl
fistpl
jmp
jecxz
push
rcrl
decl
fwait
decl
fwait
jmp
fstps
cld
out
decl
in
fwait
cmp
fwait
cmp
fwait
lcall
icebp
fwait
incl
rcrb
jmp
out
lcall
repnz
incl
stc
fwait
call
negb
push
hlt
fwait
decl
hlt
fwait
push
hlt
fwait
incl
rcrb
decl
xlat
fwait
push
hlt
fwait
incl
loop
incl
out
fwait
ljmp
rcrb
ljmp
fwait
jmp
rcrl
cmp
fwait
cmp
fwait
pushl
out
fwait
fwait
call
aam
ljmp
fwait
call
stc
fwait
incl
loop
incl
fwait
call
out
fwait
lcall
repnz
jmp
call
into
fwait
call
fwait
decl
call
fwait
incl
loop
ljmp
fwait
fwait
dec
out
fwait
dec
into
fwait
incl
aam
push
hlt
fwait
call
into
fwait
decl
ficomps
call
fwait
call
jmp
pushl
out
fwait
incl
in
fwait
jmp
stc
fwait
incl
in
fwait
incl
rcrb
decl
fwait
decl
fwait
call
ficompl
incl
loop
decl
fwait
dec
into
fwait
jmp
decl
negl
cmp
fwait
call
xlat
fwait
call
ficompl
cld
out
call
xlat
fwait
cmp
fwait
cmp
fwait
pushl
rcrl
call
out
fwait
call
stc
fwait
incl
negb
ljmp
into
fwait
call
rclb
inc
add
mov
add
movl
sub
cmc
bt
pushf
shl
jmp
sub
mov
call
pushl
pushl
popl
push
pushl
push
pushf
lea
jmp
pushf
jmp
movsbw
bswap
xchg
pusha
jmp
lea
jne
call
call
call
pusha
mov
pushf
jmp
mov
jmp
not
clc
clc
clc
neg
test
cmc
pusha
pushf
add
clc
bt
clc
jmp
call
movb
call
push
push
push
sub
jmp
pushf
jmp
jo
pusha
push
xchg
lea
mov
movw
call
jmp
pushf
mov
pushf
mov
mov
pushl
lea
jmp
pushl
popl
bswap
bswap
mov
push
movl
jmp
movzbl
pushl
popl
not
push
movl
movsbw
call
push
mov
jmp
xadd
das
btr
mov
bt
cmc
call
pop
mov
push
mov
pushf
pushf
lea
jmp
jmp
jmp
push
push
pushf
movb
mov
call
clc
clc
sub
pushf
movb
movw
test
and
push
pushf
popl
push
call
divl
call
call
lea
jae
pushf
pusha
pusha
pushl
popl
push
mov
push
movb
lea
jmp
push
mov
pushf
lea
jmp
mov
push
pushf
mov
pushf
lea
je
push
jmp
mov
pushf
lea
jmp
push
mov
push
push
jmp
pushf
mov
movsbw
pushl
jmp
mov
mov
pushf
mov
jmp
xchg
movsbw
bswap
pushf
popl
lea
movsbw
mov
mov
pusha
pop
pushl
popl
call
dec
pushf
add
mov
call
std
pusha
mov
mov
std
not
mov
movl
std
pushf
cld
jmp
pushf
pushf
pushl
popl
pushl
lea
jmp
test
cmp
mov
jmp
pushf
pushf
lea
jne
bt
pusha
xor
pusha
call
mov
push
pushf
mov
mov
lea
jmp
pop
call
pushl
popl
pushf
lea
jmp
lea
pushf
pushf
movb
call
movzbw
pushf
bt
mov
bsr
cmp
xor
movzbw
sub
neg
inc
inc
and
dec
adc
movb
not
jmp
bswap
shld
mov
rcl
daa
pop
neg
shl
pop
or
aaa
bsf
sbb
pop
xadd
lea
rol
sbb
popf
mov
pusha
pusha
lea
mov
call
pushl
mov
movb
pusha
pushf
movb
lea
jmp
jmp
jmp
pusha
call
mov
push
call
shl
xor
clc
movzbl
pushf
bt
stc
xor
movb
inc
stc
movw
call
add
add
pusha
pushl
popl
mov
movw
pushf
lea
jmp
mov
pushf
xchg
mov
movsbw
not
pushf
popl
jmp
setno
pop
mov
call
mov
mov
pusha
mov
pusha
jmp
das
mov
sub
push
setne
mov
movb
mov
test
cmp
mov
test
add
mov
shrd
pusha
pushl
movb
pushf
mov
call
mov
pusha
push
xchg
bswap
lea
movsbl
bswap
pushf
popl
pushf
movsbl
pushf
lea
mov
bswap
pushf
lea
pushl
popl
movzbw
push
bswap
movsbw
movl
push
call
call
push
movb
pushf
pusha
mov
push
push
call
or
mov
call
pushl
popl
pushf
push
pushf
movb
lea
jmp
pushf
call
push
pusha
pushf
popl
call
pusha
mov
mov
jmp
mov
jmp
pushl
jmp
movzbw
mov
mov
pushf
lea
call
pushl
popl
pushf
movw
lea
jmp
pushl
rol
bt
cmc
cmc
not
bt
pusha
cmc
add
cmp
bt
mov
add
jmp
cld
pushl
popf
pusha
pushf
lea
jmp
or
pusha
inc
sar
mov
push
pushl
pushf
mov
add
push
push
lea
jmp
shr
rol
mov
btc
mov
jmp
movsbw
pushf
popl
bswap
jmp
pushf
call
mov
pushf
not
bswap
mov
pushl
popl
movzbw
call
pusha
movb
mov
pushf
pushl
push
mov
mov
call
call
mov
mov
mov
mov
pusha
mov
pushf
pusha
push
call
push
mov
pusha
push
xchg
call
add
jg
pushf
clc
sub
pusha
call
call
mov
push
bt
sub
push
pushl
movw
push
lea
jmp
push
pushf
call
pop
movsbw
mov
mov
lea
jmp
cmp
add
pushf
pushf
popl
pushl
pushf
pushf
pusha
pushl
popl
mov
pushl
movb
pushl
lea
jmp
call
pushf
pusha
pushf
mov
lea
je
pusha
mov
movb
push
jmp
mov
jmp
jmp
mov
movb
pushf
popl
jmp
xchg
movsbw
lea
call
call
mov
mov
pusha
pushf
mov
mov
pushf
mov
call
pushl
popl
mov
mov
lea
jmp
push
pushf
pushl
mov
pushf
pushl
pushf
call
pop
inc
mov
dec
or
shrd
clc
xor
jmp
bswap
lahf
mov
jmp
call
test
push
call
add
push
pushl
call
pusha
pushf
popl
pushf
call
pushl
popl
mov
pushl
lea
jmp
pushf
popl
pushf
pushf
pushl
popl
mov
push
pusha
lea
jmp
mov
call
mov
xor
rcl
mov
cmp
dec
pusha
movb
mov
test
movb
sub
clc
add
js
stc
shr
pusha
mov
mov
movb
pushl
pushf
pushf
pushf
popl
call
call
call
not
pushf
popl
pop
not
mov
bswap
jmp
push
call
mov
pusha
jmp
pushf
pusha
mov
call
sbb
bts
aad
mov
clc
sub
pusha
call
xor
bt
mov
mov
xor
test
xor
push
neg
mov
jmp
stc
add
clc
xor
sub
shld
btr
jl
mov
stc
stc
push
shl
push
pushl
test
pushf
shr
stc
cmc
or
push
clc
test
xor
pusha
jmp
mov
call
lea
jne
push
push
call
bt
test
shr
call
test
call
pushf
pushf
mov
pushf
call
movw
mov
movb
call
pushl
popl
push
movb
pushf
movw
lea
jmp
mov
pusha
push
push
mov
xchg
not
pushf
popl
call
call
pushf
mov
call
jmp
lea
pusha
call
test
stc
cmc
push
pushl
popl
bt
jmp
mov
mov
inc
pusha
lea
jmp
test
add
pusha
movsbw
lea
stc
cmp
pusha
pushf
push
lea
ja
aas
jmp
mov
call
call
jmp
jmp
pop
pushf
pushf
popl
movzbl
mov
jmp
push
mov
push
push
mov
push
mov
call
aad
xor
mov
jnp
test
cmc
add
pushf
mov
push
jmp
jmp
mov
pushf
pusha
pushf
pushf
lea
jmp
mov
mov
mov
mov
pushf
mov
pushl
mov
pushf
push
mov
not
pushf
popl
lea
pushf
mov
lea
pushl
popl
bswap
jmp
cbtw
mov
cmc
add
cmc
clc
rol
cmp
pusha
push
push
not
pushf
stc
pushl
call
pushf
pushf
mov
mov
lea
jmp
bsf
rol
mov
pusha
cmc
sub
cmc
add
pusha
pushf
popl
lea
jae
pushf
mov
pushf
pushl
popl
movb
lea
jmp
push
das
pop
mov
bsf
btc
btr
mov
test
bt
stc
call
inc
pushl
push
pushl
decl
mov
jmp
inc
rcl
rcr
shr
movzbl
jmp
pusha
mov
pusha
jmp
pushf
pusha
jmp
call
daa
bts
rcr
movzww
jmp
lahf
aas
push
mov
movzbw
shr
mov
stc
cmc
cmp
add
jmp
lea
js
pushf
push
mov
push
movw
pushf
mov
pushl
call
push
movsbw
pusha
lea
mov
not
movzbw
mov
pusha
jmp
pusha
jmp
pushf
movw
mov
mov
call
pushf
mov
pusha
mov
pushf
push
pushl
ret
movw
mov
call
jmp
xchg
pushl
movb
pushf
movl
pusha
pushl
pushf
mov
mov
pushl
pushf
pushl
ret
bswap
jmp
pushl
popl
inc
not
not
movl
inc
lea
movw
mov
call
movb
pushf
call
call
jmp
add
shl
mov
sar
clc
mov
push
jmp
jmp
call
pushl
popl
pop
lea
call
mov
cmp
pusha
test
pusha
sub
call
movb
pushl
popl
mov
movw
lea
jmp
jmp
push
jmp
mov
call
xchg
movsbw
bswap
push
movsbw
pushf
popl
movsbw
mov
movsbw
lea
bswap
pushl
popl
pushl
movl
lea
pushf
mov
pushf
pushf
lea
jmp
jmp
cmp
mov
test
pushf
pusha
add
mov
jmp
add
mov
btc
cmp
add
sub
btc
shl
bsf
cmc
mov
rcr
xor
ror
bts
shrd
add
neg
movzbl
inc
cmp
btc
not
sbb
push
dec
btr
lea
shld
xor
seta
movzbl
pushf
mov
pusha
pushf
jmp
jmp
mov
mov
movsbw
pushl
popl
pushl
pop
bswap
bswap
movl
call
pushl
popl
pushf
call
movl
not
pushf
lea
mov
mov
pushf
lea
jmp
js
push
call
mov
movl
call
pusha
jmp
pushf
popl
call
movzbl
pushf
movsbw
jmp
call
call
jmp
pusha
add
jmp
movb
pushf
popl
mov
jmp
call
pushf
popl
push
push
pushl
call
call
jmp
call
sub
push
call
call
pushf
movl
mov
pushl
call
jmp
mov
mov
pushf
pushf
mov
call
call
push
pushf
call
xchg
not
mov
lea
lea
pushf
popl
pop
movsbl
movsbw
mov
pushf
pusha
movw
pop
pushl
popl
jmp
pusha
pushf
mov
pushl
pushf
popl
call
cmc
push
test
not
mov
sub
cmp
jmp
not
mov
pushf
pushl
pusha
call
call
movzbl
pushf
lea
mov
pushf
push
lea
jmp
not
call
push
jmp
pushl
popl
pushf
pushf
pushf
lea
jmp
add
push
add
jmp
mov
shld
mov
clc
bt
add
call
mov
pushf
pusha
lea
jne
pusha
bsr
mov
clc
jmp
mov
pushl
popl
jmp
jmp
shl
mov
bt
stc
push
shl
jmp
jmp
push
xchg
movb
movl
push
movw
pushf
mov
pushl
pushl
ret
jmp
pop
dec
sbb
xor
xchg
jmp
dec
stc
movb
test
xor
push
jmp
push
jmp
mov
movb
push
pushf
lea
jmp
setno
mov
push
cmc
pushf
add
push
push
pushf
popl
pushf
jmp
jmp
add
jmp
mov
pushf
pushf
push
movb
lea
jmp
mov
push
pushl
popl
jmp
push
mov
jmp
jmp
mov
push
mov
pushf
pushf
lea
jmp
cmp
sub
pushf
push
pushf
lea
jmp
sub
movb
lea
jmp
pushl
popl
pushf
movzbw
movl
jmp
push
mov
jmp
pushl
popl
not
jmp
movzbw
call
shl
lea
shl
rdtsc
bt
cmp
clc
jmp
add
sub
jns
stc
mov
cmc
test
sub
pusha
call
pushf
xchg
pop
pushf
popl
bswap
movzbw
mov
jmp
push
cmp
cmp
and
pushf
stc
cmp
movw
pushf
jmp
neg
cmp
bt
stc
sub
clc
cmc
xor
cmp
clc
jmp
call
call
pop
bt
ror
pop
xor
not
call
pushf
mov
jmp
push
jmp
pushl
mov
jmp
lea
mov
pushf
lea
jmp
jmp
mov
mov
mov
lea
jmp
or
dec
shl
mov
jmp
mov
mov
jmp
pop
mov
pushl
pusha
pushf
mov
lea
jmp
inc
movb
movl
mov
movb
lea
jmp
jmp
not
pushf
popl
pop
not
pushl
lea
mov
lea
jmp
mov
pushl
pushf
mov
push
mov
mov
jmp
jmp
sub
pushf
mov
call
pusha
call
pusha
jmp
jmp
jmp
pushf
mov
jmp
mov
push
mov
movzbw
pushf
popl
not
movw
mov
jmp
sub
call
movb
pushf
popl
jmp
jmp
call
push
push
pushf
call
pusha
mov
call
cmc
sub
cmp
movb
mov
stc
mov
movb
jmp
jmp
jmp
mov
call
mov
pushf
popl
bswap
movzbl
movzbl
mov
movzbw
pushl
popl
movsbw
lea
movl
movzbw
movzbl
mov
mov
lea
jmp
pushl
popl
pushf
pushl
lea
jmp
call
rep
sub
cmc
bt
mov
not
movzbw
add
mov
cld
pushf
clc
bt
pushl
popf
movb
movb
mov
mov
lea
jmp
mov
call
push
not
movzbl
sbb
adc
movzbw
xor
clc
xor
sar
cmp
neg
bswap
bswap
bswap
not
dec
call
bswap
movsbl
mov
jmp
inc
pusha
pushl
cmc
stc
neg
test
movw
test
sub
mov
pushf
lea
ja
pusha
xor
pusha
pushf
cmp
call
pop
lea
movl
jmp
mov
pushf
pushf
lea
jmp
push
movb
mov
not
not
movzbw
pop
pushf
popl
pushf
pop
jmp
jmp
cmc
push
xor
movw
jmp
call
sub
mov
sete
rol
mov
test
cmc
sub
jmp
stc
sar
aas
or
mov
xor
call
push
mov
movb
pushl
lea
jmp
mov
mov
mov
pusha
push
lea
jmp
pushl
inc
pusha
pushf
mov
lea
jmp
pushf
not
pushf
mov
push
pushf
mov
lea
jmp
push
jmp
push
pushl
popl
pushf
pusha
movb
mov
lea
jmp
mov
call
mov
movl
push
push
call
lea
ja
push
mov
jmp
pop
movl
lea
bswap
jmp
pushl
bswap
pushl
popl
not
pushf
movl
push
movsbl
call
bswap
movzbl
not
mov
pusha
mov
call
mov
pushf
lea
jmp
jmp
push
jo
pusha
pusha
push
mov
call
push
cmp
pushf
mov
cmp
pushf
call
pop
pushl
popl
movzbw
movl
movl
movsbw
pushl
bswap
mov
movw
push
movw
lea
jmp
bt
sar
jmp
mov
push
movl
pushl
mov
lea
jmp
jmp
not
movl
pushf
bswap
pop
not
mov
push
lea
jmp
pushf
xchg
pushf
mov
push
pop
pusha
mov
lea
xchg
movsbl
mov
mov
not
mov
pushl
call
bt
call
push
lea
jns
push
push
pushf
popl
call
movw
pushf
mov
call
call
pusha
pushf
popl
pushl
mov
movb
pusha
pushl
popl
pushf
pushf
movb
lea
jmp
test
xor
cmc
cmc
jmp
call
mov
push
mov
push
movb
push
mov
mov
call
jmp
push
pushf
pushf
popl
pusha
pushl
push
pushl
popl
movw
push
movb
lea
jmp
cld
cld
lea
call
mov
jmp
mov
call
mov
bswap
bswap
sets
mov
movsbw
movsbw
not
mov
mov
not
setl
call
test
stc
neg
cmc
call
pushf
mov
movb
pushf
pushf
inc
push
push
push
lea
jmp
pushf
mov
pushf
push
push
push
lea
jmp
call
movb
mov
push
pushf
lea
jmp
lea
sar
ror
adc
bsr
xor
jmp
pushf
mov
mov
mov
pushf
mov
push
call
mov
jmp
mov
call
lea
jnp
pushf
push
mov
jmp
push
call
mov
push
lea
jmp
mov
movl
movzbw
movw
mov
mov
pushf
movb
lea
jmp
pushf
popl
call
pushf
mov
push
mov
pushf
mov
call
pusha
mov
jmp
pusha
pushf
pushl
popl
movb
pushf
pushf
lea
jmp
pusha
jmp
push
mov
push
movw
call
cmc
add
jmp
mov
pushl
mov
call
call
lea
movl
pushf
mov
push
mov
mov
movb
lea
jmp
movb
mov
pushl
movw
pushf
pushl
ret
mov
call
mov
movb
lea
jmp
push
mov
pushl
lea
jp
pushf
push
xchg
mov
bswap
movsbl
pushf
popl
jmp
mov
push
pushf
push
push
mov
jmp
mov
mov
lea
jmp
mov
call
adc
sub
seto
clc
not
ror
test
clc
shl
pusha
xor
shr
and
shr
rol
setge
test
mov
pusha
add
pushf
mov
push
mov
lea
jmp
push
jmp
push
movsbw
movsbw
mov
push
push
push
lea
jmp
mov
pushf
mov
push
call
push
mov
pusha
call
lea
jno
pusha
pushf
inc
pusha
push
pushf
pushl
lea
jmp
bt
add
push
mov
movb
mov
movl
pusha
pushl
movb
lea
jmp
not
mov
push
movl
pushf
lea
jmp
bt
sub
mov
call
sbb
mov
rol
bswap
movzbw
cmc
mov
pusha
stc
cmc
add
jmp
mov
jmp
mov
rol
pusha
dec
rcl
lea
cmp
pushf
sub
rcl
sbb
sbb
xadd
mov
call
mov
aam
cmp
lea
push
sub
cwtl
dec
cmc
pop
lea
adc
and
adc
sub
bswap
not
pushf
mov
mov
pushf
pushf
popl
movzbw
mov
mov
pusha
mov
lea
xchg
movzbw
pop
mov
jmp
adc
mov
shl
cmc
xor
movzbw
mov
inc
pushf
bswap
not
inc
inc
shld
btc
neg
rcr
sar
shrd
shrd
sub
pop
sub
jmp
cmp
call
setge
add
and
sub
mov
push
test
stc
sub
pushl
mov
push
pushf
pushl
lea
jmp
mov
pushf
pushl
mov
lea
jmp
mov
pushf
movb
push
call
mov
pushf
mov
pusha
pushf
mov
mov
mov
jmp
xchg
bswap
pushf
popl
mov
setns
setne
mov
lea
movsbw
pushf
bswap
pushl
popl
mov
movl
bswap
mov
mov
jmp
push
mov
pushf
push
mov
mov
push
mov
bswap
pushf
popl
movzbl
pushl
push
mov
lea
mov
pushl
popl
bswap
pushf
not
movl
jmp
pushf
call
xchg
mov
setle
call
mov
call
push
mov
mov
lea
mov
pushf
pushf
pushf
popl
bswap
mov
jmp
mov
pushl
pushf
popl
not
jmp
mov
mov
bt
or
mov
clc
stc
not
jmp
movl
jmp
mov
pushf
pushf
pusha
pushl
mov
mov
push
mov
pushf
call
jb
cmp
shl
js
mov
pusha
pushf
popl
call
clc
clc
shl
pusha
call
mov
pushf
mov
movb
call
mov
jmp
mov
call
mov
pusha
jmp
mov
pushf
pusha
call
jmp
rol
or
dec
setl
lea
rol
xor
bsr
shl
sub
sar
mov
sbb
inc
pusha
mov
push
setne
xor
add
call
movzbw
mov
jmp
mov
pop
sete
jmp
push
mov
pusha
pushl
pushl
lea
jmp
mov
stc
call
movw
mov
call
cmp
adc
movzbl
stc
call
mov
movl
call
pushf
mov
mov
push
pushf
mov
call
lea
jp
cmc
sub
clc
jmp
pushf
popl
call
pop
mov
pushf
pushf
movb
push
lea
jmp
pushf
popl
movsbw
jmp
pushf
mov
jmp
mov
push
movb
pushf
movb
lea
jmp
mov
clc
add
pushf
mov
mov
push
pusha
movb
pushf
lea
jmp
pusha
mov
pusha
pushl
pushf
mov
jmp
shr
pushf
clc
cmp
or
clc
xor
pushf
push
pushf
inc
push
pusha
decl
jmp
movzbw
mov
mov
movb
movb
pushl
ret
call
lea
jne
btr
xorb
bswap
bswap
pusha
mov
mov
pushf
pushf
lea
jmp
call
jmp
mov
jmp
jmp
pushf
mov
movb
pushf
push
mov
push
mov
push
mov
movw
call
mov
pusha
mov
push
pushf
mov
mov
movb
lea
jne
sar
mov
call
jmp
pushf
movb
inc
pusha
movl
pushf
mov
lea
jmp
pushf
clc
cmpl
movl
pushl
movl
jmp
call
bswap
mov
jmp
rcr
movzbl
neg
sbb
clc
adc
add
bt
or
add
shld
not
btr
neg
setns
inc
pusha
rol
test
add
sub
btc
add
btr
mov
clc
add
call
pushf
mov
mov
pushf
movb
lea
jmp
mov
jmp
mov
push
call
mov
pusha
mov
pushl
jmp
mov
call
lea
jb
push
jmp
sub
cmc
push
shl
pushf
mov
push
pusha
jmp
mov
pusha
call
movl
lea
mov
pushf
push
pushf
lea
jmp
push
pushf
pushl
mov
pusha
jmp
pusha
mov
lea
jbe
push
call
mov
mov
pusha
mov
pusha
jmp
mov
not
jmp
mov
mov
pushf
popl
movzbw
call
call
push
sub
bt
push
call
mov
pusha
mov
jmp
not
mov
pop
bswap
movsbw
bswap
pushl
popl
call
inc
jbe
movzbl
call
pushf
pushf
mov
pushf
movw
lea
jmp
mov
xchg
bswap
movsbw
lea
mov
mov
mov
movsbw
setl
pushf
popl
not
lea
movzbw
movsbw
mov
pushf
dec
pushl
popl
movsbw
pop
movl
mov
push
setns
mov
lea
call
push
jmp
pushf
movb
mov
jmp
pushf
popl
jmp
stc
mov
clc
sub
push
pushf
mov
pushf
lea
jmp
push
pushf
not
cmp
pusha
cmp
neg
cmp
push
pushf
bt
add
bt
call
push
push
mov
pushf
call
movl
not
pushf
movsbl
mov
pushf
pushf
movl
pushf
lea
jmp
rol
xchg
neg
lea
bt
shrd
sub
adc
shl
clc
mov
not
adc
mov
pusha
sar
add
btr
mov
shld
test
clc
xor
xor
neg
not
inc
jmp
mov
movsbw
stc
mov
bt
test
sub
pushf
mov
pusha
pusha
push
lea
jmp
pushf
jmp
xor
rcr
movzbl
pushf
cmc
mov
push
or
pushf
pusha
pushf
lea
je
test
stc
stc
xor
push
bt
xchg
cmp
clc
stc
mov
cmc
test
sub
pushf
lea
jl
jne
bt
xor
call
mov
cmp
clc
bt
mov
clc
push
add
push
movb
lea
jmp
pushf
mov
movsbw
pop
call
lea
mov
mov
movzbl
pushf
lea
pushl
popl
lea
movsbw
movzbl
movzbw
movl
not
movl
mov
movw
push
pushf
pushf
lea
jmp
stc
pusha
pushl
sub
jmp
movb
jmp
xchg
lea
pushf
bswap
call
pushf
call
movzbw
pushl
popl
movsbw
movl
lea
pushf
mov
movb
movb
push
lea
jmp
sub
rcr
neg
aam
mov
bt
shrd
shr
mov
shl
pushf
mov
push
push
add
test
stc
movw
shld
pushf
pushf
mov
push
pushf
push
pusha
pushf
popl
push
pushl
pushl
popl
movb
push
lea
jmp
push
movw
lea
cpuid
pusha
stc
test
clc
sub
jmp
bswap
pushl
movl
not
jmp
add
pushl
call
cmc
push
bt
not
test
pushf
test
bt
not
jmp
movw
inc
movb
lea
jmp
setp
notl
push
xor
mov
jmp
pushf
push
mov
pushf
push
mov
pushf
push
jmp
movw
mov
pushf
jmp
mov
push
lea
jmp
mov
mov
call
pushf
mov
jmp
sbb
stc
xchg
mov
push
adc
mov
jmp
mov
jmp
push
mov
movsbw
jmp
lea
pushf
popl
jmp
pushf
mov
mov
jmp
mov
xchg
mov
pusha
pushf
mov
bswap
mov
not
movsbw
setbe
not
mov
xchg
movsbw
mov
setge
pushf
popl
pop
mov
pushf
xchg
call
call
bswap
pushf
mov
movzbw
push
not
pushl
popl
not
pushf
movsbw
movl
call
push
mov
mov
call
cbtw
bt
clc
clc
cmp
cwtl
stc
bt
cmc
clc
sub
push
mov
pushl
pushl
jmp
mov
mov
mov
call
lea
jne
cmc
xor
xorb
pusha
call
movl
bswap
mov
push
lea
jmp
mov
mov
push
pushl
pushl
pushl
ret
push
movb
mov
pushf
mov
jmp
stc
pushl
shr
call
cmc
mov
push
push
pushf
add
pushl
pushf
mov
pusha
movb
push
pushf
lea
jmp
movb
mov
mov
pushf
push
pusha
pushf
mov
jmp
mov
jmp
shl
mov
jmp
call
mov
jmp
lea
jmp
call
bts
shl
aas
lahf
mov
rcl
dec
mov
call
pusha
mov
lea
jo
pushf
xchg
pusha
lea
jmp
xchg
pusha
jmp
add
jmp
mov
call
mov
setle
shl
add
pushf
mov
jmp
movzbl
pop
pushf
popl
movsbl
mov
movsbw
not
pushl
popl
pop
lea
call
add
pushf
mov
bt
mov
cmp
sub
jmp
pusha
movl
mov
movb
jmp
mov
pusha
pushf
mov
call
pushf
mov
pushf
mov
pusha
mov
pushf
mov
lea
jmp
je
push
mov
movb
pushf
popl
pusha
pushl
popl
pushf
movl
pushf
lea
jmp
movb
pushl
popl
mov
lea
jmp
and
call
sar
rol
movsbw
mov
test
push
clc
stc
xor
pushf
stc
stc
clc
add
call
shrd
sar
bsr
mov
not
shr
shl
add
push
pusha
setg
mov
lea
jnp
push
pusha
pusha
mov
mov
pushf
mov
lea
jmp
mov
push
pushl
jmp
pushl
popl
mov
pushf
pushl
lea
jmp
bt
cwtl
stc
test
cmp
sub
cmc
test
push
jmp
push
mov
stc
pushf
call
pusha
lea
jb
mov
pushf
pushf
mov
movb
mov
pushf
lea
jmp
