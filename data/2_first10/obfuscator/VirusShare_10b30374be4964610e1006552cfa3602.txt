add
fadds
jmp
add
xlat
sub
push
xchg
pop
adc
adc
sahf
movl
psadbw
sbb
decl
sbb
add
pmaddwd
jmp
insl
int
es
je
add
inc
add
jmp
jae
mov
cltd
sbb
sbb
movl
push
inc
pop
sub
jge
adc
ror
xor
psllw
sbb
adc
or
packuswb
sbb
aaa
movb
push
inc
pop
sbb
jmp
mov
call
adc
cld
pop
inc
movw
xor
jne
push
dec
pop
and
pcmpeqw
xor
jl
jmp
loope
sub
lahf
in
xor
sbb
rcr
add
push
aaa
pop
movl
or
push
xchg
pop
sub
push
clc
pop
jnp
sub
jmp
add
std
repnz
add
and
and
maxps
sub
jmp
push
xchg
xor
jge
push
cld
pop
jnp
movb
push
dec
pop
ror
xor
jge
or
jmp
enter
jl
xchg
decb
loope
jmp
adc
stc
add
add
movb
push
inc
pop
sbb
sbb
jo
xor
imul
jo
jmp
dec
fsubs
movw
subps
ja
jmp
sub
daa
pusha
cvtpi2ps
push
clc
pop
xor
jmp
xor
je
ja
sbb
jb
and
jmp
fistl
add
sub
movl
adc
jno
push
xchg
pop
paddsw
adc
sbb
push
dec
pop
and
shl
xor
sqrtps
add
cmpl
jne
and
push
ret
add
add
ficomps
lcall
cmpsb
aaa
enter
sti
and
cltd
shll
repnz
dec
xor
and
mov
fnstcw
cltd
in
aad
or
fldcw
sbb
xchg
lds
popf
iret
push
push
cld
ror
or
mov
adc
or
leave
mov
mov
fimuls
cmp
push
mov
pop
xor
lret
jb
adc
rcll
or
fisubrs
stc
repnz
xchg
rorl
mov
push
push
push
jno
ret
xchg
leave
mov
or
cmp
icebp
or
fldenv
mov
fnop
leave
or
lods
sar
adc
lods
push
mov
in
ror
or
flds
leave
addr16
mov
mov
gs
rcrl
add
pop
push
jmp
mov
adc
or
fldenv
out
test
ja
int3
xchg
leave
xor
in
add
push
push
cmp
jge
inc
jno
fnsave
out
xor
adc
icebp
rcl
sbb
cs
and
pop
cmp
xchg
push
or
fsts
sbb
push
fxch
ret
or
push
add
mov
xchg
push
or
push
shll
or
or
imul
mov
js
leave
or
push
xchg
lds
push
cltd
rcll
push
or
mov
roll
aad
mov
push
adc
pop
push
ret
lods
lods
jmp
xchg
lds
stc
inc
pop
popf
dec
inc
pop
popf
dec
inc
pop
popf
dec
inc
pop
popf
dec
inc
pop
popf
dec
pop
or
or
fadds
push
sub
xchg
mov
inc
fists
cmc
leave
push
popl
sahf
push
mov
sarb
xor
popf
in
or
push
mov
fst
mov
xor
in
xor
in
add
movsl
cmc
fnsave
push
movsl
in
sbb
in
leave
push
sbb
dec
or
pop
sub
add
leave
or
sbb
je
sarl
push
add
lcall
mov
leave
rcrb
push
call
leave
jns
sbbb
push
shll
dec
jns
hlt
ss
cltd
out
rorb
sbb
cltd
out
pop
into
mov
aad
or
shl
ss
cltd
out
rorb
sbb
cltd
pop
es
xchg
push
pop
adc
iret
fnstsw
js
pop
adc
mov
mov
pop
adc
xchg
rorb
mov
stc
inc
or
lds
or
ficoml
inc
fstp
adc
or
and
mov
es
mov
lods
lods
rcl
or
fsts
sub
fstpl
add
std
or
std
sub
cmp
or
roll
mov
fimuls
xchg
clc
leave
test
push
wbinvd
mov
fimuls
xchg
call
fists
or
xchg
fcomp
ror
test
push
wbinvd
mov
sahf
in
ror
or
fldl
leave
in
ror
or
into
xchg
leave
pop
xor
or
pop
aad
into
mov
mov
aas
divl
mov
popa
lahf
mov
mov
popa
cwtl
mov
test
mov
fs
nop
leave
dec
mov
mov
imul
mov
movsl
or
mov
mov
inc
mov
mov
mov
dec
mov
movsl
mov
or
mov
mov
jg
mov
fs
cltd
jg
mov
jle
ror
or
leave
or
leave
shll
fldln2
cwtl
shll
sub
xor
or
cmc
movsb
dec
add
add
mov
push
add
bound
add
add
add
bound
add
push
add
add
mov
xchg
xchg
or
pop
scas
loope
adc
push
test
int3
xlat
and
fcompl
cmp
sub
lahf
mov
mov
adc
cwtl
mov
cmp
data16
test
add
add
add
icebp
mov
mov
inc
cli
push
mov
mov
std
add
pop
fcomp
push
jbe
pop
bound
into
or
lcall
add
outsl
insb
sub
xor
lret
pop
push
fisttps
lock
test
xchg
add
add
add
add
add
cmp
add
add
add
add
add
jae
cltd
enter
ss
ja
add
add
add
sldt
inc
add
add
sbb
add
add
pop
add
pop
add
add
add
add
push
lods
add
sub
add
and
add
add
add
add
add
loop
add
add
add
add
dec
add
add
add
add
cs
add
add
cmp
add
add
add
add
add
stc
add
shrl
cmp
std
add
inc
add
add
mov
add
add
ljmp
in
add
pop
jne
jecxz
roll
add
jbe
add
mov
add
add
add
add
pop
shll
jmp
nop
add
add
dec
dec
add
add
mov
push
int
add
mov
jns
fldenv
push
mov
xchg
mov
xchg
mov
pop
hlt
adc
push
add
repnz
fbld
push
cld
cmp
add
repz
jnp
mov
xchg
shlb
sbb
xchg
scas
sub
add
push
insb
scas
das
into
aad
add
jmp
xchg
xchg
mov
xor
sbb
inc
movb
push
lret
cmp
pop
mov
bound
test
adc
movsb
xor
cmp
pop
movsb
pop
cwtl
jg
adc
pop
enter
mov
mov
incb
notl
jae
out
jae
mov
jmp
cs
dec
inc
push
pop
push
sbb
pop
mov
and
adc
lcall
mov
stc
test
cli
inc
mov
adc
mov
pushf
and
scas
or
out
icebp
jmp
fmull
and
inc
cmp
cli
and
bound
jl
xor
dec
stc
jo
jne
es
jmp
dec
ret
ficoms
imul
dec
lods
cltd
fsubs
int
repz
pushf
push
shrb
movsl
push
cld
jmp
or
mov
jnp
dec
arpl
test
sbb
cs
nop
jae
out
jae
shrb
lods
pop
mov
push
mov
or
add
mov
mov
inc
into
fmuls
dec
mov
add
int
mov
mov
xor
jne
sub
in
imul
rcl
inc
dec
dec
enter
or
gs
les
inc
imul
cmp
inc
pop
add
popf
or
pop
fcompl
into
jb
dec
stc
xchg
ljmp
mov
mov
push
and
mov
dec
addr16
inc
adc
cmp
mov
loopne
xchg
cs
mov
xchg
jnp
push
popf
cs
sub
push
rcrb
mov
call
scas
fisubs
lret
mov
rclb
cmpsb
xchg
cmp
loop
mov
sahf
fcompl
mov
mov
mov
add
jle
movsb
pop
cmc
inc
addr16
imul
jle
lock
and
lods
add
aad
xor
cmpb
repnz
pop
sbb
fldenv
lock
adc
das
lret
xchg
or
shlb
mov
int3
fmul
adc
decb
or
mulb
push
xchg
dec
stos
sbb
or
push
dec
mov
lahf
fstp
and
inc
lods
int3
movsl
js
add
repnz
mov
outsl
ret
push
pop
into
subl
lcall
outsb
iret
pcmpgtd
js
pushf
sub
xchg
iret
adc
out
or
out
incl
and
dec
ds
mov
jge
dec
in
and
ret
iret
xor
rcrb
ss
xor
out
mov
mov
adc
xor
cmpb
out
scas
paddusw
inc
add
flds
daa
das
mov
inc
jnp
test
cli
add
insl
pusha
add
scas
enter
pop
cwtl
pop
or
leave
push
adc
leave
adc
xchg
fwait
std
lds
rorb
push
icebp
icebp
cmp
arpl
out
ja
inc
push
je
pop
ljmp
pop
mov
clc
adc
xor
cli
push
add
pop
xchg
pop
movsl
cmp
arpl
call
es
jnp
mov
cld
std
ret
pop
push
xchg
and
cmpsl
aaa
or
fildl
test
das
pop
cmpsb
jo
push
inc
and
sarb
daa
mov
lods
sahf
xor
and
add
xor
imul
inc
push
or
ficompl
out
dec
add
mov
inc
xchg
lods
popa
mov
stos
xchg
inc
leave
test
mov
inc
add
pusha
and
jmp
inc
mov
lods
icebp
repnz
imul
inc
scas
xchg
xor
fcompl
inc
mov
mov
cwtl
pop
or
pop
jp
and
mov
add
inc
mov
fwait
xchg
mov
mov
push
ret
and
sub
out
insl
mov
adcb
sti
or
xchg
inc
int
add
pop
xor
fistl
sbb
shlb
fdivr
sti
mulb
insb
mov
sub
inc
int
mov
popa
hlt
inc
test
jl
add
add
cmp
hlt
mov
sbb
pop
int3
mov
mov
daa
jge,pt
jo
sub
push
mov
lret
mov
sar
fnstenv
not
dec
notl
pop
dec
inc
xor
and
push
jecxz
sub
lret
jae
push
pushf
fsts
mov
jbe
lods
into
mov
lods
add
xor
jle
cmc
jnp
std
add
jbe
out
sbb
js
or
ds
xchg
adc
cmp
cmpsl
xor
add
sub
jbe
lret
lds
pushf
cltd
std
pop
pop
cli
icebp
frstor
jb
adc
push
scas
jp
cmp
sbbb
les
lahf
imul
es
aaa
mov
or
or
shlb
dec
add
pop
cmp
iret
mov
in
fimuls
fsubs
push
call
inc
imul
sbb
push
aam
push
adc
stos
sbb
add
pushf
call
mov
addl
push
push
aas
lret
mov
movsb
push
cmpsl
repz
jmp
mov
cmp
stos
mov
ds
imul
xchg
dec
inc
outsb
and
leave
add
cmp
dec
xchg
lods
xchg
out
ja
lods
or
je
mov
dec
shll
cmp
xchg
and
or
int
pop
xor
xchg
clc
mov
lahf
xlat
add
out
cmc
dec
sbb
popa
popf
negb
pop
cmpsl
mov
pop
add
dec
pop
sbb
dec
mov
dec
fisttps
and
cmp
mov
bswap
push
inc
aam
mov
insb
scas
jmp
adc
sub
xchg
notb
adc
out
mov
or
mov
faddp
ret
pop
sti
adc
out
lock
sarl
lea
outsl
testb
jb
loope
out
rolb
ret
pusha
sub
stc
xchg
mov
sub
aas
cmp
add
lock
cli
cmp
jecxz
pop
movsl
mov
sbb
cld
popa
cmpsl
xor
enter
jle
test
fisubl
lods
lock
popl
pop
pop
pop
loop
sahf
adc
mov
popf
push
es
sbb
and
xor
call
mov
mov
iret
movsb
jl
loop
iret
push
hlt
icebp
inc
xchg
popa
rclb
popa
xor
xchg
clc
add
lds
into
jl
sub
or
stos
inc
mov
loope
xchg
sub
icebp
mov
mov
jge
push
test
jo
adc
mov
jo
add
push
xchg
pop
and
sbb
outsl
cli
nop
mov
and
iret
adc
rorb
adcl
xchg
cmpxchg
sarb
jecxz
leave
and
cli
out
xor
das
adc
mov
or
adc
outsl
pop
icebp
cmp
rcrl
add
push
aas
daa
ret
outsl
jo
test
pop
mov
je
std
xor
and
pop
sbb
loop
into
jmp
movsb
xor
mov
push
cmc
lret
jle
sbb
loopne
or
repnz
loop
daa
lods
nop
xchg
in
xchg
sbb
pop
cmp
add
push
jns
dec
add
mov
les
mov
mov
inc
insb
cmp
les
int
loope
or
test
call
cmc
mov
and
pop
stos
inc
xchg
pop
faddp
shl
sbb
lea
inc
mov
jbe
mov
loope
jb
leave
push
sub
lds
out
imull
sbb
ds
sti
mov
xchg
pop
mov
sbb
pop
inc
xlat
mov
out
mov
lcall
mov
adc
push
imul
inc
stc
adc
fwait
cwtd
or
xchg
idivl
imul
mov
xor
xor
mov
iret
jb
cmp
mov
gs
aaa
in
jg
lds
sbb
int
sti
jp
sbb
into
push
cli
in
lcall
mov
jp
or
addl
sub
fmull
scas
ja
fstps
push
out
dec
xchg
gs
ja
in
shlb
push
dec
test
cmp
add
decl
pop
cwtl
and
lea
clc
loopne
and
sbb
or
sahf
jecxz
fnstenv
andl
shll
mov
and
daa
jb
jecxz
inc
and
jb
sub
lods
mov
cmc
adc
stos
mov
lcall
daa
and
insb
xor
mov
popf
bnd
mov
ds
lahf
pop
and
daa
xchg
js
popl
inc
loope
xor
lret
and
les
divb
push
mov
repnz
popf
jl
dec
inc
add
imul
je
mov
aaa
xor
pushf
nop
roll
or
mov
outsb
adc
sbb
cmp
adc
pop
add
sar
jle
out
adc
insl
jae
pop
adc
sub
or
and
shrl
int3
ja
arpl
sub
xor
sub
sbb
inc
movb
jo
repnz
mov
sub
sbb
adc
sub
daa
jb
jecxz
inc
and
jb
sub
lret
mov
cmc
adc
stos
mov
adc
jp
cmp
cld
mov
int3
inc
pop
jl
jge
ret
jnp
js
bnd
test
mov
pop
xor
lcall
sub
pop
int
or
ss
jl
jno
loop
out
lds
mov
mov
ds
xchg
jecxz
shlb
aas
cmc
mov
sub
sbb
dec
stos
out
fnsave
cs
in
sub
pop
jl
dec
or
and
sti
xor
stc
mov
mov
jae
in
mov
inc
fisubl
insb
adcl
mov
popa
xor
mov
scas
es
fs
push
fbstp
pushl
lahf
dec
mov
insb
in
je
pop
loop
aaa
aam
jbe
icebp
xchg
and
outsl
inc
addb
mov
jle
adc
insb
mov
mov
lahf
xchg
inc
mov
mov
mov
pop
pop
ljmp
ret
sarl
popa
mov
jecxz
add
pop
fwait
xchg
dec
icebp
and
popf
push
inc
clc
inc
sti
xor
imul
sub
cmp
push
movsb
cli
test
adc
cmpsl
push
or
xchg
stos
push
shrl
mov
out
sub
cmp
enter
dec
xchg
sbb
popa
rep
ffreep
dec
ds
adc
cltd
testl
xor
inc
stos
jg
sub
lds
imul
cld
jo
frstor
cmp
neg
add
cwtl
add
mov
and
fcmovnu
push
sub
stos
in
pusha
sub
sbb
or
dec
xlat
adc
addl
pop
push
dec
adc
stos
adc
cmc
cmpl
xchg
cmp
repz
adc
scas
mov
addl
pushf
push
and
or
ljmp
cmp
fmull
cmp
jge
push
adc
xchg
cmp
aas
jbe
pop
outsl
and
es
icebp
outsb
clc
mov
ret
jle
shll
scas
mov
enter
sub
push
adc
sbb
test
mov
lods
call
pop
push
sbb
scas
mov
mov
inc
sbb
xchg
aam
stc
pop
mov
dec
xor
adc
add
test
push
in
sub
scas
push
sub
push
arpl
scas
sbb
out
js
dec
push
jno
insb
repz
xchg
pop
and
inc
inc
jg
mov
shll
cmpsl
bound
push
xchg
push
dec
add
pushf
ljmp
data16
jb
repnz
mov
lahf
push
loop
mov
mov
in
xchg
movsl
and
xor
daa
dec
xor
mov
or
adc
or
inc
pop
pop
mov
lret
push
cmpb
ret
mov
aad
es
add
idivl
incl
sub
leave
mov
adc
dec
test
in
test
sbb
push
sub
add
push
fnstsw
ficomps
ja
loope
cmp
cwtl
enter
jmp
cmc
mov
or
in
xchg
fdivrl
mov
dec
adc
je
sbb
mov
cmpsl
int3
xchg
es
add
sbb
sbb
mov
add
xchg
sbb
sub
ret
mov
data16
or
sbb
jecxz
je
push
test
xchg
flds
jae
and
into
sbb
jae
jl
dec
and
arpl
mov
xor
out
vphaddubw
inc
pop
test
mov
sahf
mov
aam
jecxz
fdiv
int
xor
in
xchg
pop
and
daa
sti
mov
ss
mov
cmp
mov
cmpps
sahf
test
jg
jne
in
stos
push
mov
stc
nop
ret
out
insb
mov
repnz
dec
inc
ljmp
pop
mov
notl
out
sbb
mov
adc
jb
xchg
add
call
inc
xchg
jnp
in
out
jle
mov
mov
push
lret
out
add
jo
mov
bound
add
add
pop
or
divb
pop
mov
inc
rcrb
mov
or
dec
cmpsl
mov
std
or
and
dec
test
je
add
inc
jmp
incl
stos
and
and
and
das
mov
mov
leave
loop
in
mov
rcl
lahf
or
pop
fldenv
push
mov
push
add
push
call
sbb
jbe
jne
popa
push
jne
inc
mov
out
hlt
and
mov
sub
test
adc
test
dec
push
data16
aad
nop
aas
lahf
fdivr
jne
or
sbb
jl
movsb
and
mov
into
or
lahf
shr
jmp
inc
xor
or
stos
addl
adc
add
adc
and
dec
pop
sbb
xchg
in
jmp
lods
pop
mov
push
and
xchg
adc
pop
jne
test
lock
adcl
cmp
scas
scas
add
sbb
dec
stc
pusha
jmp
adc
xchg
in
cmpsl
and
jp
in
imul
sub
test
dec
rcll
cmp
imulb
mov
aas
mov
call
or
sub
jae
and
or
sbb
sbb
xchg
xorb
imul
in
and
sub
fcomps
jg
icebp
lret
jp
insb
jno
mov
int3
sarl
sbbl
xchg
dec
push
fs
add
mov
push
aam
movsl
sbbb
mov
cmp
out
push
dec
mov
and
aas
maxps
pop
mov
ss
testl
dec
ds
jbe
cmp
xchg
inc
aad
sbb
in
sbb
mov
sbb
out
outsl
and
or
cmp
lcall
jge
fucom
adc
dec
jge
ret
jl
xchg
xor
inc
xchg
push
mov
mov
cld
cli
cmpsb
xrelease
stos
sub
add
imul
sbb
xor
inc
push
dec
filds
test
sub
adc
loop
add
movsb
in
aad
pop
cmp
pusha
hlt
sbbl
pushf
nop
mov
push
int3
loop
push
shlb
cld
decl
test
fdivrl
dec
loop
inc
out
stos
test
mov
add
sub
js
stos
fmulp
adc
push
mov
orb
or
xchg
lahf
lods
insb
inc
sub
gs
icebp
out
cmp
scas
cmpsb
jo
test
icebp
mov
testl
es
ret
mov
rorb
dec
imul
fwait
pop
pop
imul
pop
inc
adc
jb
out
sbb
mov
fwait
stos
test
push
out
std
cmp
xchg
inc
adc
mov
sbb
pop
fldcw
mov
mov
out
shrb
test
push
in
inc
in
or
sub
adc
sbb
xchg
sub
dec
mov
jecxz,pn
test
arpl
jg
aam
stos
adc
ss
push
add
test
sbb
cmp
ja
push
int
ja
sub
test
mov
mov
mov
dec
sarl
std
jle
leave
mov
xor
or
cmp
int
fcompl
adc
xor
mov
and
and
fdivrl
jne
enter
xchg
mov
push
and
adc
push
push
pop
pop
xchg
mov
icebp
cmpsl
loop
les
inc
insb
aas
in
mov
jne
mov
nop
rcll
mov
xchg
pop
jno
ds
cs
jle
or
lods
rcll
mov
mov
nop
xor
xor
push
imul
mov
add
mov
cwtl
mov
sbb
xchg
das
mov
jecxz
lock
std
mov
adc
mov
mov
sbb
ss
mov
dec
mov
cmp
aaa
jmp
sub
mov
inc
push
jns
das
fimuls
sbb
cltd
inc
mov
paddw
sbb
add
ljmp
push
loope
inc
ds
xchg
jle
pop
push
xchg
xchg
loope
and
push
mov
arpl
or
mov
enter
adc
in
leave
cmpsb
cmp
pop
aaa
in
subl
loope
push
sbb
pop
fwait
sub
lods
cmp
sbb
push
imul
jo
cltd
shrl
push
shl
fsubrp
xor
pop
repz
fcomps
icebp
push
push
adc
sub
mov
lods
dec
in
in
outsl
outsl
jmp
jecxz
mov
stos
lods
push
flds
cmpsb
dec
cmp
out
daa
inc
jno
mov
mov
sbb
fs
shl
aad
aaa
in
and
inc
or
popf
sahf
pmuludq
cmp
in
pop
sbb
lods
push
xchg
or
push
xor
inc
mov
or
repz
adc
push
gs
xchg
adc
movsl
cmp
push
repz
mov
out
shlb
pop
mov
sub
cmpsb
insl
fldenv
repz
or
js
fidivl
loop
adc
mov
xor
adc
and
push
or
inc
mov
fimuls
loope
pop
pop
ficompl
jo
mov
jo
push
pop
xlat
subl
test
push
sbb
leave
outsl
test
ljmp
adc
jmp
sub
lea
add
xor
nop
test
add
pusha
lret
shl
out
jne
add
mov
pcmpgtd
xchg
or
sub
cmc
adc
popa
in
jns,pt
mov
sbbl
xchg
pop
daa
push
test
cmp
inc
add
adc
mov
imul
pop
pop
out
mov
sub
cmp
dec
insl
iret
addr16
lret
es
mov
stos
cmp
cmp
rorb
orl
dec
stos
in
stos
add
loop
dec
or
popl
cli
cmc
jnp
loope
je
adc
test
ss
scas
and
aad
popf
pop
out
ss
and
jae
jnp
int
adc
push
loopne
jbe
mov
push
in
push
mov
addr16
aaa
push
pop
fidivrl
xor
mov
mov
out
sbbb
and
mov
rorl
adc
ja
jnp
inc
mov
jle
or
nop
push
arpl
rcrl
dec
adcl
inc
mov
mull
mov
rcr
push
xchg
push
jp
sarl
rol
subb
mov
out
das
sbb
cmp
xor
addr16
fnsave
addl
push
fldenv
cli
aaa
mov
sub
xlat
dec
lock
dec
arpl
cwtl
push
cltd
cmpsb
xchg
xchg
xor
xor
dec
adc
ds
mov
movsl
xchg
outsl
pop
andl
clc
xor
dec
outsb
mov
imul
push
test
add
pop
dec
aam
mov
or
jecxz
arpl
popf
pop
test
insb
mov
and
test
xchg
popf
lods
mov
or
stos
adc
into
stos
sub
or
call
sub
mov
imul
push
jnp
add
lods
cs
or
jns
sub
enter
or
shlb
mov
jo
mov
adc
cwtl
cmpb
mov
ret
sub
adc
sub
clc
adc
mov
in
pop
pop
fwait
xchg
stos
pop
mov
mov
stos
pop
outsl
xor
push
cmp
leave
mov
dec
mov
xor
sahf
sbb
stos
mov
sbbb
add
inc
in
repz
add
lcall
js
push
sub
sub
mov
js
inc
pushf
jmp
xor
nop
jge,pt
repnz
inc
or
aad
imul
icebp
in
scas
loope
sub
testb
inc
or
or
shrl
jg
lret
sub
fs
adc
xor
mov
andl
in
lods
adc
mov
lret
adc
outsb
insl
scas
enter
mov
or
dec
ret
lret
cmc
shll
lcall
je
cmp
jns
cmpl
outsb
dec
mov
jb
lahf
dec
mov
nop
adcb
sub
or
cwtl
jno
push
pop
popf
dec
mov
push
pop
fs
sahf
cmp
xor
xor
imul
cmp
loopne
in
add
int
push
jmp
nop
or
and
xchg
jb
inc
inc
xor
stos
repnz
nop
jge
inc
cmp
mov
jnp
sub
out
xor
xlat
or
jne
lds
scas
or
insb
lods
dec
daa
or
mov
ret
add
jae
inc
and
nop
sbb
loop
sub
sub
ljmp
call
mov
add
mov
pop
andl
and
imul
jg
inc
xor
xchg
pop
cmp
jno
sbb
inc
mov
sbb
or
jne
jo
or
imul
mov
lret
and
mov
or
mov
mov
jecxz
add
jecxz
aas
imul
sbb
out
popa
add
lods
jge
add
lsl
stos
cld
call
jmp
adc
gs
sub
adc
mov
int
or
stos
sbb
mov
xchg
jnp
inc
add
cmpsl
jle
dec
dec
inc
or
mov
aas
shll
adc
inc
sbb
shlb
lahf
hlt
and
mov
sub
into
and
inc
lods
fisubrl
pusha
cmc
sbb
xor
mov
popf
jp
gs
xchg
add
cwtl
jo
inc
out
xor
and
shrb
int3
leave
push
push
cmp
push
mov
dec
in
xchg
sbb
test
jne
inc
pop
enter
imul
leave
fs
dec
fbld
jecxz
bound
mov
add
add
or
mov
shlb
xlat
insl
sbb
sarb
rcrb
push
stos
cld
call
jnp
sub
fwait
sbb
inc
jg
push
push
add
xchg
das
stos
add
mov
cs
pop
mov
cmp
mov
ficomps
cmp
mov
xchg
xchg
filds
outsl
int3
lcall
ror
mov
or
test
sbb
sub
popf
sahf
pop
fwait
sarl
mov
push
iret
add
or
lods
mov
testb
sub
pushl
xor
loopne
push
les
leave
jbe
cmp
dec
ds
pop
call
or
insb
push
test
xchg
fisttpl
or
ja
outsl
mov
ret
jp
jmp
gs
mov
inc
pop
es
cmpsl
fwait
xchg
arpl
filds
fbstp
mov
imul
stc
inc
lret
push
out
jbe
call
and
fwait
std
jge
mov
maskmovq
testl
add
dec
add
test
dec
ds
adc
sahf
out
pushf
xchg
xor
sbb
xchg
adc
test
mov
mov
pop
xchg
add
push
jle
dec
inc
test
in
pop
sbb
clc
pusha
divl
out
nop
sub
sbb
mov
outsb
and
add
stos
cmp
and
imul
or
mov
and
int3
cmp
fisttpl
mov
dec
imul
sbb
or
lcall
int
jmp
mov
jg
mov
fs
out
xor
ss
fistpll
in
sub
mov
ja
shrl
fs
adc
mov
xchg
xlat
imul
and
xor
pop
icebp
pop
das
sar
inc
push
cmp
jmp
adc
pop
or
mov
stos
mov
not
mov
mov
mov
fmul
lcall
psubq
pop
inc
test
fwait
std
repz
test
pop
lods
pop
lahf
shl
fnstenv
fisubrl
dec
or
fcoml
jge
cmpsb
jl
bound
inc
and
sub
pop
imul
cmpsl
sbb
add
je
fimull
add
jle
sub
xor
aad
pop
imul
jno
and
dec
mov
xor
imul
negb
mov
jns
jae
push
fistpll
pop
xor
mov
bound
cmp
pop
mov
aas
mov
mov
xchg
inc
inc
sub
fisubrl
subl
in
scas
pop
dec
pop
pop
or
nop
pop
cmp
lret
mov
mov
repnz
cwtl
mov
sarb
imul
loop
mov
lahf
mov
sbb
xchg
insl
mov
shlb
push
sbb
mov
pop
iret
dec
inc
cmp
xor
lret
loopne
pop
cmp
xchg
xchg
xchg
pop
or
stc
xor
jnp
mov
jno
jl
adc
cmp
or
pusha
stos
in
xchg
dec
mov
xor
outsb
mov
js
or
stc
lods
cmp
xlat
jmp
or
mov
movsl
and
sub
jne
out
push
jl
and
fs
dec
loopne
data16
push
testl
jecxz
sbb
mulps
sbb
adc
xchg
imul
in
push
sub
inc
sub
jecxz
adc
sarl
test
cld
push
jno
test
xor
into
mov
daa
cmp
mov
leave
inc
xor
and
inc
dec
lea
mov
mov
setl
fidivs
movsl
pop
add
rcll
dec
or
fwait
jnp
cmpsl
and
sub
push
cmc
stos
pop
mov
mov
add
push
xchg
cltd
pop
xor
lret
ret
adc
mov
add
and
lods
adc
xchg
dec
mov
xchg
pushf
pop
pop
push
fwait
addl
push
and
lds
das
xor
int3
fwait
mov
orl
jne
pop
aas
push
inc
jle
repnz
inc
mov
std
fdivl
repz
add
mov
aam
shl
shrl
sbb
or
and
or
outsb
mov
in
cli
pop
popf
mov
loope
fs
out
adc
std
aas
aas
mov
jno
sub
push
jno
push
cli
mov
cmp
and
pop
sub
mov
pop
fcomps
mov
lods
xchg
push
cli
lods
movsb
push
mov
into
cmp
lret
jbe
fldenv
xchg
push
out
add
xchg
outsb
bound
lods
lock
into
ret
sti
xor
or
iret
das
sub
stos
pop
mov
aas
filds
nop
xchg
push
test
aad
cmp
dec
mov
pop
aad
pop
pop
cmp
cld
and
lret
loop
loop
xchg
dec
mov
or
jnp,pn
dec
daa
in
adc
add
or
pop
adc
cmpsl
jg
jnp
popa
stos
mov
cmp
mov
cmp
dec
out
out
int
mov
xlat
scas
jle
or
pop
xor
int
test
push
jg
lcall
shrb
fsub
sahf
mov
cmc
push
ret
fisubrs
sbb
lock
fsubs
and
fdiv
pop
push
jne
pop
sarl
jmp
mov
push
lcall
sbb
pop
sub
pop
les
push
movsb
cwtl
pop
and
dec
pusha
cmp
int3
sbb
cli
pop
adc
cmpsb
mov
push
push
pop
sub
rcll
jne
out
or
sahf
adc
mov
pop
xor
in
or
ret
jmp
jecxz
push
or
add
cld
fbld
lods
ficompl
movb
adc
push
pop
cmp
push
icebp
and
mov
pusha
sti
iret
fstp
loopne
pop
push
and
add
xchg
mov
mov
or
mulb
fnstenv
mov
inc
cmp
fnstenv
ret
adc
mov
ds
adc
bound
fs
repnz
push
popa
inc
jbe
mul
cmp
int3
pop
jecxz
and
xchg
inc
rcl
add
fistl
into
inc
sub
testb
mov
test
lret
test
xorb
shll
push
and
sarb
shlb
cmp
loope
xor
add
decb
jl
leave
inc
sub
es
xchg
or
cwtl
popf
ljmp
es
sarb
mov
mov
adc
jb
dec
mov
in
in
in
add
aaa
clc
jae
pop
and
scas
fmul
pop
mov
xchg
in
ss
mov
cmp
loopne
push
jecxz
jne
pushf
fstp
loopne
push
sub
cld
lret
gs
insb
sub
mov
in
fsubl
dec
xchg
sub
repz
clc
and
stc
sbb
and
push
lock
pop
hlt
push
push
aas
mov
stos
push
xlat
decl
es
dec
push
mov
pop
cld
dec
mov
add
rcrb
scas
sub
cmpsb
mov
cmp
sub
in
add
testb
xor
cld
fidivrs
rcl
cmc
ss
imul
inc
mov
cltd
mov
pop
es
dec
pop
in
or
test
cmp
bound
xchg
jbe
shrl
jbe
mov
jge
or
shll
xor
xchg
test
in
divb
and
lds
mov
int3
into
add
jg
sahf
ret
or
cmp
inc
pshufw
aaa
pop
dec
push
and
add
push
dec
popf
fisubs
add
leave
xor
popa
test
sub
sbb
std
outsb
push
out
mov
fwait
adc
xchg
xor
cmp
and
sub
sar
pop
jbe
mov
dec
mov
dec
jb
mov
fwait
pushl
lds
pop
push
lret
repz
xor
cmpsb
mov
or
mov
dec
imul
shrl
jnp
fsubrl
cmp
mov
addb
mov
mov
pop
cmp
or
pop
mov
push
outsl
mov
sbb
push
rclb
sub
sahf
sbb
mov
mov
enter
add
int
fsubl
in
sub
shrl
adc
cld
jle
xchg
dec
inc
dec
into
dec
or
xor
sbb
xor
cmp
pop
leave
add
cld
sub
leave
mov
insb
jae
fs
mov
dec
and
adc
lea
imul
in
cmpsl
mov
adc
andb
jo
mov
and
dec
in
dec
mov
loope
addr16
mov
and
mov
xor
xchg
jmp
push
mov
add
dec
in
lahf
popa
xchg
or
dec
mov
enter
mov
test
imul
js
mov
or
in
pop
adc
cmp
mov
out
adc
call
sbb
mov
xchg
int
ror
sub
int3
inc
cmpsb
adc
enter
pop
lret
mov
and
rcrl
mov
call
cltd
cmp
add
sub
sti
enter
fbstp
inc
pop
repnz
cs
testl
cmpsb
jns
sbb
xor
leave
sbb
add
fldenv
mov
push
insb
mov
movsb
sbb
mov
jne
je
testb
andb
cld
add
cmp
xor
rolb
arpl
hlt
ret
jae
insb
sarl
add
mov
int
add
and
and
dec
data16
inc
lahf
jno
movsl
or
test
inc
movsb
hlt
xchg
enter
sub
sbb
nop
neg
ret
mov
xor
sbb
call
fistl
ret
cltd
faddp
jmp
pop
mov
and
cs
pop
test
sbb
xor
xlat
fimuls
mov
or
inc
mov
or
ffreep
cs
in
pop
orl
repz
sub
dec
scas
inc
mov
jb
cltd
pop
cs
or
jns
jns
pop
inc
adc
cmc
sti
inc
std
ss
mov
xchg
xchg
flds
aas
push
andl
outsl
sub
les
jnp
push
out
idivl
sub
divb
xor
jg
push
cli
dec
fs
insb
adc
sub
inc
adc
mov
inc
inc
mov
push
cmp
test
pop
xchg
add
jecxz
jbe
cmc
in
jp
cwtl
movsl
mov
xchg
push
adc
stos
push
mov
int3
jg
sbb
cwtl
or
shll
dec
imul
adc
insl
adc
xlat
mov
scas
ret
xchg
inc
sbb
jle
mov
jb
and
rorb
call
sub
pop
add
loop
xor
sti
hlt
cs
pop
int
cmpsl
adc
mov
cwtl
cmp
idivb
gs
icebp
mov
mov
dec
sbb
mov
cwtl
adc
xchg
cmp
cmp
test
movsb
lock
aaa
sub
cmc
rol
std
dec
fsubr
into
xchg
enter
jle
fstp
clc
cs
in
inc
cmp
xor
jno
loop
in
stos
ret
mov
adc
pushf
sti
mov
in
rorl
push
mov
pop
xchg
pop
mov
push
mov
inc
jg
sbb
and
negl
inc
adc
lods
push
sub
adc
outsl
or
shlb
ljmp
stc
push
gs
mov
mov
es
loop
imul
inc
icebp
jne
pop
out
xchg
sbb
sub
and
mov
aaa
xchg
sbb
mov
loopne
add
rcr
pop
iret
add
ljmp
ret
mov
xchg
cmp
clc
gs
push
addr16
mov
leave
push
fwait
jp,pt
lods
mov
or
sub
cmp
or
psllw
dec
stos
stos
xchg
jns
stos
pop
push
mov
negl
jno
fnstenv
mov
aaa
push
dec
push
loope
dec
rorb
dec
pop
popa
xlat
or
add
push
mov
push
cs
adcl
fsub
lea
cmp
pop
push
hlt
ja
pop
jns
neg
movsl
or
testb
enter
xchg
dec
lret
mov
sub
inc
sbb
and
push
into
jle
stc
out
push
subb
mov
jp
fcomps
jns
fsubl
test
imulb
ret
mov
add
fcmovnb
ret
or
std
cmc
inc
adc
cwtl
cmp
fdivl
aas
xchg
push
fs
pusha
xchg
inc
es
aad
jge
jp
cltd
xor
push
mov
test
shlb
jne
sub
testl
push
rorb
adc
repnz
outsl
pop
xorl
aas
dec
sti
push
dec
rolb
mov
js
push
push
jb
sub
cltd
loopne
dec
sbb
jns
mov
mov
pop
out
and
jmp
and
pop
cmp
ja
push
into
cltd
aaa
sub
cs
inc
jbe
adc
or
adc
add
pop
jb
dec
xor
addr16
repnz
mov
sbbb
cmpsl
push
cli
sbb
push
xchg
jle
mov
push
mov
adc
and
jg
mov
mov
dec
push
pop
popf
test
push
or
out
cmpsl
dec
dec
shrb
lock
sub
dec
outsb
inc
roll
ret
and
push
lods
or
or
push
inc
fisubrl
mov
out
mov
ja
mov
fmul
bound
push
jge
adc
mov
and
sub
cmp
into
cltd
push
dec
lret
jmp
inc
pushf
and
popf
sbb
xor
rclb
in
cmp
clc
mov
push
fmulp
arpl
aas
xorb
js
mov
push
aam
out
addl
jo
pop
push
dec
ficomps
cwtl
shlb
in
or
push
out
sbb
addr16
aad
inc
pushf
addr16
cmp
add
lock
in
hlt
push
push
out
pop
outsl
and
aaa
cmc
stos
test
push
nop
test
ja
and
test
push
pop
and
or
pop
jae
xor
movsl
dec
adc
ret
cmp
push
outsb
pusha
lock
mov
fs
mov
xchg
or
dec
jle
or
xchg
jne
into
and
adc
aam
adc
test
inc
sti
sub
xor
neg
xorb
jl
loope
sub
dec
outsb
popf
cld
addr16
rcrb
fsubs
or
in
loopne
mov
inc
sub
push
addb
push
gs
in
mov
and
fisttps
cmp
inc
cmpb
mov
adc
ffree
add
testb
mov
push
xor
out
leave
repz
shll
and
sbb
xchg
cmp
and
adc
int3
or
add
test
sub
sarl
cmp
mov
mov
xlat
push
aad
das
stos
lret
call
mov
inc
mov
xchg
outsl
and
mov
lcall
cld
cltd
and
mov
test
sub
mov
iret
pop
aaa
into
pop
shll
fwait
inc
in
test
push
addb
roll
pop
adc
push
scas
mov
aaa
jb
jb
jecxz
mov
je
imul
ret
add
sub
je
rcr
adcl
cmc
sahf
imul
mov
lahf
in
mov
testl
push
out
or
push
jecxz
int3
and
add
sahf
frstor
aas
sbb
ss
sbb
jmp
lods
add
shll
out
xchg
xlat
push
aam
test
mov
cld
mov
fs
das
inc
jbe
movsb
mov
dec
in
hlt
daa
scas
cmp
cmp
movsl
cmp
fnstcw
pushf
lahf
stos
das
insb
and
cmpsb
jbe
or
add
push
push
add
pop
std
cmpsb
rol
push
jl
jns
imul
pop
mov
xchg
push
or
adc
es
cli
jo
out
adc
popa
cld
jns
xor
stos
out
push
push
mov
dec
mov
dec
mov
push
movsl
cmp
push
or
jb
pop
lods
and
inc
fdivl
cmp
movsl
repnz
je
mov
inc
or
adc
mov
xchg
loope
add
lea
imul
bound
mov
sub
push
xchg
pop
or
xchg
push
sub
sub
mov
adc
push
sti
xchg
fiadds
push
and
jne
cmp
xor
or
test
ret
jl
mov
arpl
shrl
or
xlat
test
in
inc
daa
das
sbb
enter
jge
pop
out
xchg
iret
push
mov
xchg
sub
push
insl
inc
mov
js
test
loope
add
es
movsb
inc
pop
mov
push
mov
mov
add
xchg
cmp
lahf
add
out
mov
inc
jg
lock
sub
mov
sarb
fstps
fmulp
jb
repz
xor
ret
leave
adc
cmp
sarb
outsl
test
fstl
repnz
sarb
dec
leave
add
push
int3
incb
test
repnz
mov
icebp
fisttps
ret
cmpsl
aad
cmp
xor
dec
jle
in
mov
push
adcl
call
sarl
cli
fst
add
test
aas
jo
out
hlt
xor
divl
outsl
mul
jecxz
insb
pop
orl
leave
leave
scas
cli
stos
ss
xchg
mov
sbb
jnp
pop
lds
js
or
adc
data16
cmp
xchg
cltd
test
gs
scas
mov
scas
xor
lock
push
fsts
mov
push
push
jg
repz
sti
packuswb
adc
inc
mov
mov
stos
popa
lods
cmp
jo
mov
out
idiv
mov
leave
sbb
lcall
push
cwtl
dec
out
pop
adc
cmc
fstpt
dec
int3
clc
les
das
inc
in
cwtl
mov
sub
jae
and
orb
mov
cld
dec
mov
lahf
rol
dec
in
add
cmp
ret
pop
mov
push
xchg
cmpsl
mov
incl
add
pop
push
aad
push
sahf
cmp
aad
in
inc
pop
push
cmpsl
push
sub
fbstp
cs
nop
shl
ja
pcmpgtb
push
cmpsl
mov
lods
movsb
out
jno
jne
pop
sti
mov
loopne
loopne
sub
jp
jns
mov
add
inc
pop
ret
pop
and
repz
xor
lea
sub
es
dec
outsl
mov
inc
test
outsb
and
jle
mov
lods
sub
test
jae
test
enter
imul
jno
push
pop
pop
xchg
sub
sub
outsl
ret
jne
mov
jbe
shll
arpl
int3
push
add
dec
mov
lock
xorl
jg
pop
mov
shll
repz
mov
int3
jb
clc
fcompp
and
pop
movsl
loope
enter
push
in
aaa
jg
outsl
stos
clc
pop
paddb
cmc
mov
inc
adc
push
mul
mov
xchg
shll
stos
xor
xchg
fiaddl
sub
cmpsl
cli
lea
lds
sbb
adc
jmp
push
addr16
js
in
cli
mov
dec
mov
dec
jbe
in
mov
mov
imul
scas
test
clc
cwtl
mov
cmpsl
outsl
es
and
ja
pop
mov
mov
push
jge
pop
and
pop
flds
mov
fsts
fs
sub
mov
xor
inc
sbb
mov
dec
arpl
or
jg
xor
jbe
inc
lret
fcom
imul
inc
jp
and
mov
mov
mov
xchg
rcr
jmp
lock
adc
lcall
insl
push
add
mov
mov
lods
dec
xchg
cmpb
push
adc
imul
loope
mov
shlb
or
xchg
test
adc
dec
test
lret
lcall
pop
pop
push
cmc
cli
stc
fwait
xlat
push
push
jno
inc
lods
push
adc
ja
add
popa
jo
xor
push
lods
out
lea
mov
mov
lds
pop
push
nop
jle
xor
mov
mov
or
lahf
mov
cmpsl
outsl
es
cli
out
cmpsl
mov
lcall
pop
mov
dec
jmp
push
push
outsb
pop
flds
enter
inc
addr16
pop
sbb
and
mov
je
and
outsb
or
test
orb
or
jp
and
push
call
sbb
pop
cmpsl
xchg
rcr
jp
mov
lock
pop
scas
inc
push
insb
inc
dec
and
ss
sar
pop
lods
pop
mov
push
push
add
test
in
mov
shlb
loope
mov
shl
stos
and
lcall
jge
jo
aad
leave
ret
dec
dec
sbb
pop
mov
pop
pop
xlat
out
out
cmpsb
cli
outsl
mov
ret
mov
cld
mov
nop
out
loope
inc
xorb
cmpl
pop
sar
insb
cwtl
mov
insb
clc
xchg
mov
dec
sbb
push
icebp
cltd
mov
cmp
fs
pushf
ret
imul
pop
out
mov
and
repnz
ret
cld
push
push
int
popf
outsl
sbb
pop
sbb
arpl
add
jg
imul
push
sub
or
push
enter
or
outsb
test
mov
jae
test
inc
sub
cli
mov
fdivp
or
pop
push
push
insl
ljmp
ret
cltd
push
or
jge
push
mov
cmp
pop
jb
fldt
dec
inc
sbb
js
cmp
and
mov
shll
pop
pop
xchg
xchg
fdivrs
pop
adc
test
lahf
xlat
jne
leave
pop
dec
sbb
pop
mov
pop
pop
xlat
iret
jmp
hlt
push
ret
stos
pusha
jmp
divb
sbb
inc
push
jp
or
sbb
cmp
xor
add
dec
stos
dec
test
xor
cmp
testb
fs
push
jbe
insl
lea
incl
mov
mov
jnp
aad
cmpsl
pop
ret
sbbl
incl
mov
daa
add
mov
test
int3
es
pop
enter
jns
popa
loop
movsb
xchg
ss
add
push
inc
mov
jecxz
jno
xor
repz
xchg
xchg
sub
push
cmp
fdivr
nop
jp
sbb
cmp
sub
imul
sub
add
insb
push
je,pt
jle
fdivrs
lahf
push
mov
sbb
test
jecxz
mov
inc
dec
lcall
fsubs
cmpsl
and
in
data16
push
fdiv
mov
push
xor
test
inc
pusha
mov
adc
mov
inc
jbe
sbb
mov
xchg
sbb
pop
xchg
test
lahf
or
pop
decl
stc
insb
inc
stos
mov
jg
or
stos
fs
sti
push
fst
fwait
aaa
sbb
sti
lds
adc
xor
dec
push
inc
sub
inc
pushf
push
iret
imul
aad
popa
cmp
shl
stos
mov
movsb
fdivr
aad
lock
mov
xchg
insb
repz
mov
ss
aad
arpl
push
mov
or
andl
scas
lds
push
scas
popf
push
les
shl
or
xor
imul
sub
mov
sbb
inc
out
jg
popa
ljmp
dec
sub
xchg
rorl
in
lods
push
in
sub
in
xorb
in
pop
xlat
hlt
setge
push
pop
into
mov
push
ja
stc
orb
std
cmp
insb
nop
or
ret
pusha
add
and
imul
jecxz
js
xor
insl
jmp
fnstsw
fwait
jmp
mov
jmp
mov
pop
and
nop
mov
ds
ret
inc
pop
xchg
xlat
sbb
adc
in
cmp
pop
jle
mov
mov
fs
repz
adcl
xchg
push
push
mov
jecxz
nop
je
mov
pop
int
ja
jne
add
das
cmp
cmp
mov
mov
fnstsw
mov
mov
xchg
das
mov
aad
ss
pop
test
and
pop
mov
ret
inc
pushf
jmp
mov
arpl
or
rcll
cmc
fldt
push
pushf
std
jb
mov
int3
adc
cli
movsb
cmc
cmp
das
dec
dec
fcom
and
add
sahf
lahf
push
loop
cli
stc
pop
pop
ljmp
or
dec
iret
fsubrs
fsubr
movsb
mov
jge
adc
add
ds
jo
jmp
dec
xor
loope
mov
pop
adcl
and
lahf
out
cmp
or
sbbb
adc
lret
insl
mov
js
jno
mov
mov
dec
lds
in
xchg
push
mov
subl
xchg
outsl
mov
jl
cmp
pop
dec
repz
push
in
sbb
out
sub
xor
mov
dec
inc
inc
pop
inc
mov
rclb
fldt
ja
lods
inc
enter
sbb
cltd
add
icebp
jne
loopne
pop
jl
cs
ret
cwtl
sub
jns
cmpsb
aas
mov
mov
icebp
add
lret
sub
movsb
ss
pop
in
loopne
dec
lock
adc
push
outsb
mov
test
leave
std
sub
add
sbb
mov
rcrb
cmc
ja
add
and
xchg
imul
cmc
xchg
cmc
xchg
pop
daa
sub
jns
mov
sbb
in
jp
sbb
ds
lds
inc
sub
gs
xlat
dec
fists
or
test
adc
imul
pop
js
or
jp
aas
inc
in
inc
ss
jl
sub
dec
aam
idivb
cltd
outsl
add
cmp
es
cmpsl
mov
mov
ds
sbb
rcll
loope
out
jmp
icebp
and
xchg
mov
xor
xchg
pop
fildll
imul
sbb
or
imul
sbb
test
mov
cwtl
pop
aaa
xor
leave
leave
mov
mov
into
lret
je
push
add
cmc
outsb
pop
or
aaa
int
push
pop
iret
adc
std
xchg
mov
sub
sub
mov
inc
fdivs
in
xchg
sub
xchg
dec
push
pop
stc
pop
push
subl
andb
pop
movsl
lds
dec
pusha
lcall
sbb
movsb
sbb
ficoms
mov
adc
scas
ds
mov
repz
dec
mov
jp
repnz
addr16
inc
prefetchnta
lock
sbb
idiv
fisubrs
xchg
outsl
mov
add
cmp
nop
mov
cld
sbb
xchg
and
push
in
fldln2
fwait
pop
push
imul
cmp
push
je,pt
inc
mov
vmovaps
dec
push
cmp
dec
jbe
lcall
push
mov
out
lret
clc
add
jnp,pn
enter
add
repnz
push
push
push
stos
insl
int3
rcll
xor
addr16
pop
sarb
repnz
into
jmp
aas
sahf
mov
xchg
mov
ds
cli
callw
sbb
sub
sub
cmpsl
sbb
mov
pop
sahf
lahf
stos
push
cmp
daa
pop
ret
popa
push
cmp
loopne
test
mov
xchg
jno
subl
fs
cmp
and
inc
adc
test
test
xor
loope
pop
jae
mov
mov
push
xlat
movsl
xor
inc
lock
or
fisttps
add
jo
mov
cmpsb
out
adc
adc
and
push
add
movsb
in
jo
fldpi
call
cmp
inc
fsts
mov
lret
ja
into
cmpsl
fstl
jae
cwtl
cli
sub
mov
xor
lock
idivb
jmp
cmpsb
mov
repnz
inc
xchg
insl
fcoml
ja
adc
push
lods
and
insb
enter
pop
scas
inc
mov
jl
das
push
mov
insl
popf
sbb
test
aaa
sub
or
je
cli
mov
sbb
scas
in
lea
shlb
push
enter
inc
fstl
push
jp
lods
cmpsl
push
lret
fwait
push
xchg
lods
mov
jmp
cmp
jecxz
sarb
nop
push
xchg
dec
into
jne
push
jge
insb
mov
mov
dec
pushf
sub
pop
icebp
cmpsb
cmp
mov
les
dec
loopne
movsl
mov
mov
cmp
inc
sti
and
push
iret
fstp
sbb
pop
xchg
lcall
jp
dec
roll
insb
mov
into
fs
fildl
or
aad
lahf
mov
ss
add
dec
pop
mov
cmp
mov
cmpsb
cmp
add
lret
rclb
lods
and
popa
call
lds
ljmp
lahf
xchg
ds
jecxz
cmp
mov
dec
fstps
sub
int3
xlat
pop
out
call
xor
clc
imul
cmpl
fs
pop
pop
mov
ds
arpl
cmpb
dec
mov
aam
iret
pusha
js
push
lds
xchg
adcl
roll
xchg
cmp
xor
shrb
rcrl
fldl
sti
and
pop
jge
test
rol
in
and
xor
push
scas
jecxz
mov
cld
or
scas
das
jne
in
sub
push
pop
fbstp
ror
inc
mov
xor
pop
push
push
pop
sti
inc
cmp
push
xor
or
or
shr
mov
mov
mov
lahf
xlat
jnp
shrl
and
arpl
addr16
push
clc
jbe
flds
lods
fldenv
data16
and
inc
aam
xchg
pop
lret
fwait
push
dec
push
outsl
sub
int
pop
mov
mov
fwait
cli
mov
stos
daa
or
push
push
pop
xlat
pop
push
lahf
adc
mov
stos
in
stos
xchg
outsb
mov
xor
pusha
daa
imul
fxtract
add
js
push
enter
xchg
inc
nop
adc
scas
mov
lods
mov
push
stos
sahf
int
pop
mov
mov
pop
fidivrl
lds
je
sub
push
jp
aam
loopne
lret
xlat
dec
jle
aas
jb
mulb
fnstsw
loop
pop
mov
cmpsb
push
and
push
ljmp
mov
mov
cld
xor
push
cltd
mov
leave
push
adc
push
lcall
lods
jns
cs
dec
loope
inc
iret
shlb
cmp
cwtl
pusha
les
addr16
xchg
arpl
push
lret
xchg
sbb
xchg
fildll
inc
inc
bound
push
enter
pop
sub
imul
shll
sub
ds
lahf
les
sub
sub
mov
inc
sub
xchg
pop
sbb
xchg
inc
decb
inc
scas
mov
sub
xchg
fcomps
popa
es
scas
cmc
stos
addr16
movsl
dec
pushf
add
sbb
dec
push
sub
mov
stos
insb
pop
dec
mov
add
fsubs
inc
and
aad
popf
dec
fstpt
sbb
mov
dec
add
sbbb
or
dec
sbb
jnp
popf
adc
add
int
push
insl
or
xlat
jbe
mov
sarl
into
push
push
xchg
inc
ss
sub
push
sarl
mov
and
jp
jge
lret
add
repnz
sbb
xchg
cvtps2pd
data16
jge
inc
daa
lret
mov
push
lahf
dec
inc
fidivrl
sub
pop
xor
sub
outsl
ficompl
daa
scas
adc
push
dec
inc
loope
push
cmp
test
xor
scas
inc
add
fstpt
sub
xlat
jmp
int
lods
adc
int3
mov
dec
xchg
xchg
xchg
xchg
jnp
mov
scas
cs
lea
out
ficomps
inc
and
mov
xor
mov
daa
push
arpl
out
push
cmp
imul
call
in
iret
add
repz
add
add
pop
dec
jns
fildll
rcrb
mov
push
sahf
mov
dec
mov
add
lods
push
dec
out
fcmove
enter
mov
and
lret
inc
repz
sub
mov
dec
pop
xor
xor
shl
xor
sbbl
cmpsb
dec
lods
daa
push
sbb
cs
imul
pop
add
push
inc
push
out
adc
sbbb
addr16
add
mov
push
es
push
dec
lahf
daa
cmp
lcall
fsubs
cmp
add
out
movsl
dec
push
sti
out
rclb
push
lcall
je
xor
in
pop
rcr
or
add
xor
dec
pop
lret
in
add
pop
sarl
xchg
push
pop
cmp
jns
hlt
rol
test
or
subb
popa
pushf
pop
aam
xor
ja,pn
push
cli
or
cmp
stc
xor
add
pop
mov
int3
sahf
dec
dec
jae
add
jnp
leave
popf
cmp
pop
dec
in
push
adc
int3
mov
dec
ljmp
mov
dec
sub
dec
cmpsb
mov
mov
and
add
adc
xor
cli
addr16
mov
gs
dec
jle
adc
scas
and
fsubl
pop
int
mov
cwtl
jo
gs
lock
or
push
sahf
push
test
xchg
sbb
dec
inc
jg
cmc
icebp
xchg
mov
and
inc
in
leave
int3
pop
push
adc
adc
xchg
sarb
pminub
xchg
sti
add
shlb
in
or
rorl
cmc
xor
out
es
aas
cmc
push
pop
xor
and
cltd
bound
inc
dec
jg
not
imul
ds
jae
cmp
icebp
cltd
jle
data16
adc
leave
pop
push
inc
pop
dec
add
pop
push
fisttpl
daa
into
les
aad
not
lret
test
lahf
jmp
and
xchg
cmp
or
add
jbe
add
push
mov
and
imul
push
push
aad
xor
push
fiadds
aad
in
stos
pop
adc
pushf
rol
ret
inc
inc
roll
pusha
pusha
adc
jecxz
pop
rclb
jg
xchg
inc
sbb
aam
lock
in
mov
outsb
mov
sbb
lods
cltd
shll
mov
push
add
adcl
adc
add
lds
adc
and
dec
add
in
xchg
mov
cmp
out
mov
jmp
add
cltd
imull
pop
outsl
dec
inc
jb
lret
mov
daa
xor
sub
push
hlt
lcall
test
aas
int3
push
gs
cwtl
repnz
std
mov
jl
stc
inc
push
fildl
repnz
jecxz
hlt
hlt
inc
jns
jne
and
aad
jne
xchg
fbstp
rcrl
xor
sahf
cld
fcomps
enter
test
mov
dec
sbb
fdivr
cs
je
bound
jno
sbb
xchg
dec
push
pop
lds
inc
push
cwtl
cwtl
je
ds
pusha
fwait
push
and
jbe
adc
sti
in
shr
cmp
push
aam
dec
ja
lock
movsl
fwait
arpl
cwtl
adc
sbb
sbb
sbb
lret
mov
adc
fsubl
loop
mov
enter
ljmp
mov
in
stos
add
aaa
repz
inc
out
movsl
adc
imul
fcom
mov
call
jecxz
pop
fucompp
inc
incl
sbb
ljmp
pusha
lock
push
popf
mov
sub
inc
dec
jb
jle
push
jg
orl
imul
testb
mov
jg
mov
fnsaves
cmpsl
repz
xlat
pop
xchg
pop
inc
cltd
ret
push
cmp
cmp
pop
cmp
leave
push
les
xlat
sbb
xor
jae
dec
pop
ffreep
dec
mov
sbb
pop
add
in
and
movsb
push
pop
or
sub
ror
dec
jbe
pop
in
sbb
xchg
cmp
xchg
or
into
adc
pop
adc
dec
adc
mov
in
xchg
inc
pop
out
mov
pop
loope
popa
leave
mov
test
sub
stos
push
movsb
ja
mov
ja
cmc
sbb
gs
push
pop
je
inc
iret
xchg
sub
mov
or
rcrl
mov
sub
lahf
sub
in
arpl
mov
push
sbb
mov
sbb
inc
shrb
inc
mov
inc
xchg
sbb
je
inc
clc
mov
sub
and
mov
add
pop
inc
fsubrp
xchg
andb
pop
push
xlat
pusha
or
xorl
push
popf
sub
xchg
je
sub
pop
mov
fsubp
add
orb
pop
mov
mov
dec
mov
loopne
jne
roll
adc
loope
pop
test
addl
or
sbb
gs
and
and
push
sub
add
xchg
xchg
gs
mov
and
or
jne
xor
lcall
dec
stos
mov
inc
std
inc
lods
inc
mov
jo
fldl
mov
add
push
insb
mov
aas
pop
lock
mov
into
cs
lcall
nop
mov
inc
rcll
dec
mov
push
cmp
pop
enter
in
movsb
and
mov
and
jge
add
mov
ficomps
dec
aam
lods
loopne
mov
xor
cmp
push
cmpl
js
out
jbe
mov
cli
dec
ret
cmpsb
insl
daa
pusha
mov
cld
mov
sbb
fcomps
or
pop
sahf
dec
sub
push
stos
jne
push
pop
stos
cs
pop
inc
dec
dec
pusha
lahf
jle
sahf
pusha
ss
xor
jbe
sbb
sbb
mov
mov
push
mov
and
mov
addr16
scas
xor
lods
adc
dec
add
fdivl
push
ljmp
inc
sbb
outsl
sbb
stos
sbb
fdiv
inc
std
add
fistps
cmp
jg
ja
leave
cld
mov
push
iret
fldl
add
cli
add
fisttps
std
test
insl
sbb
imul
adc
aad
mov
pop
loope
dec
movsl
inc
orl
add
push
inc
fs
jb
xchg
xchg
mov
fildl
mov
lock
js
in
jne
pop
stos
ja
jne
cli
rclb
sub
lret
leave
or
aas
gs
sbb
fadds
jnp
popf
dec
adc
and
jmp
stos
fmuls
cld
das
pop
rol
aam
fstpl
gs
cmp
test
push
lret
jae
pop
orl
test
repz
mov
xor
loop
xchg
mov
mov
xchg
mov
sbb
xchg
cmp
or
test
inc
movsb
lods
fcompl
int
ja
xor
mov
xor
push
fstpl
jecxz
hlt
add
test
fnstenv
mov
mov
sbb
sbb
inc
ja
iret
shr
pusha
in
shlb
add
lcall
cmc
inc
jge
jo
sbb
xor
sub
and
xor
xchg
or
sbb
fstpl
lods
in
test
dec
pop
pop
rcrb
jb
inc
push
cmp
or
data16
push
clc
xchg
jecxz
or
dec
int
push
xchg
inc
int
movsb
jle
mov
lcall
es
mov
push
dec
xchg
cmp
mov
jnp
stc
mov
sbb
test
pusha
pop
sbbl
mov
inc
sbb
dec
lcall
into
fcoms
lahf
or
mov
out
cmp
mov
pop
pop
cmpsb
mov
sbb
push
fs
inc
pop
and
sbb
lcall
out
cld
add
push
pop
sub
jne
repz
adc
pop
iret
mov
fstl
ret
js
outsb
sahf
fs
scas
test
push
sub
ficoml
in
push
or
icebp
pushl
sbb
cwtl
cmp
in
mov
dec
dec
clc
pop
push
psubw
clc
adc
filds
lahf
inc
adc
push
push
pop
inc
fst
movsb
jle
sarl
nop
adc
fidivrl
inc
sahf
dec
mov
push
jae
mov
das
push
push
or
js
stos
lahf
pop
jb
test
cmp
lock
fbld
cmpsb
pop
leave
enter
test
mov
mov
int3
mov
imul
xor
in
lds
dec
movsb
lods
imul
hlt
adc
adc
push
in
fsubrs
lods
mov
fiaddl
push
sub
repz
cmpsl
aad
imul
jle
inc
stc
rcrb
vcvttpd2dqy
jae
jae
adc
fcmovu
xor
das
int
mov
cmc
out
pop
mov
stos
sahf
lret
pop
adc
cmp
jle
xchg
inc
jnp
dec
popf
aas
shll
mov
mov
mov
add
push
ret
push
push
inc
lea
inc
cmpsb
jle
xchg
test
outsb
ret
lret
cmp
xor
or
clc
sub
rcl
int
fstpl
pop
and
xor
push
or
push
pop
orl
adc
fsin
leave
mov
lcall
jne
add
sar
jns
xor
and
mov
lds
jb
dec
movsl
scas
fs
leave
inc
mov
mov
addr16
fsubrs
or
xchg
and
sub
fstpt
mov
pushf
jns
std
mov
mov
xor
push
fimuls
test
xorb
fnstsw
jb
dec
lcall
dec
mov
dec
lea
push
lcall
call
lds
data16
cmp
jns
stos
je
push
je
lret
and
into
push
rolb
adc
insw
pop
cmp
xchg
mov
out
ret
sub
ret
into
and
xor
adc
les
movsl
or
mov
repz
movsb
addb
cmc
add
fimull
pop
xchg
xchg
jno
jns
dec
cmc
fwait
orl
xor
jns
arpl
mov
sub
adc
adc
cwtl
xchg
mov
xlat
pop
cld
dec
fwait
dec
mov
daa
inc
xchg
insl
insl
fldt
cld
lcall
lds
std
insl
mov
xchg
xchg
loope
xor
sub
rolb
mov
adc
decb
push
mov
lcall
inc
mov
and
fwait
dec
scas
cli
pusha
pop
neg
pop
sbb
pop
loope
add
push
iret
cmp
push
rcrl
call
push
pop
shrl
sarl
jle
mov
xchg
jle
cmc
das
inc
cmp
dec
mov
mov
mov
sub
push
lea
decl
xor
mov
aam
pop
push
fisubs
xchg
fwait
cmpsb
addl
pop
xchg
in
mov
sar
add
push
cmp
mov
mov
test
fbld
mov
arpl
dec
mov
bound
nop
std
adc
cs
stc
rcrl
fstpl
mov
mov
ja
push
sub
fisubl
out
add
je
add
add
xchg
cmp
push
sub
call
dec
jg
fildll
xor
adc
jp
mov
ja
insl
sti
jg
and
int3
and
addb
add
jecxz
adc
pop
aam
mov
or
mull
xor
add
pop
cmp
stos
xor
mov
add
ds
push
sub
ret
or
mov
xor
push
mov
popa
jnp
mov
or
push
mov
dec
leave
cmc
test
adc
pushf
cltd
cmpsl
test
jae
inc
add
int3
sti
xchg
mov
dec
shr
lcall
jge
sub
sbb
dec
cmp
aad
xor
lret
jae
xchg
dec
int
rcll
cvtpi2ps
int
nop
std
movsl
fldcw
out
jne
iret
ret
pop
sub
sub
loope
pushf
mov
mov
dec
mov
xorb
gs
adc
adc
mov
insl
std
dec
daa
xchg
je
xlat
and
jge
in
mov
and
clc
mulb
mov
addl
jns
scas
in
and
cmpsl
rep
push
pop
orb
ljmp
push
out
mov
inc
movb
jp
popl
sbb
test
in
and
jp
mov
adc
fcmovb
or
push
lahf
adc
ja
fstpl
pop
xchg
push
mov
xchg
mov
test
clc
sub
fadd
jge
hlt
xchg
jg
jae
gs
repz
and
aaa
mov
test
pop
mov
rclb
fdivl
or
les
jmp
fucom
or
push
jle
add
mov
jl
stos
mov
add
pop
add
stc
jmp
leave
push
stos
sub
pop
stos
cmpb
jbe
loop
mov
fs
pop
or
call
ret
add
push
rcll
cmpb
arpl
cld
out
pushf
subl
mulb
cli
cmp
inc
mov
lcall
mov
mov
fldt
pop
data16
sti
rcrb
cs
fwait
push
mov
test
push
adc
sbb
pushf
aas
add
adc
lea
loope
lods
xchg
xchg
add
cwtl
movsb
mov
cmpsl
fldenv
cmp
stos
mov
sbb
dec
aas
ds
fsubl
mov
push
xor
sahf
std
mov
push
jl
push
jo
sub
add
xchg
or
out
enter
lret
mov
jl
xchg
int3
cmc
add
fs
cld
call
insb
push
jp
inc
jle
jge
xchg
sbb
lock
mov
je
sub
inc
mov
imul
xchg
shl
arpl
pop
lods
testb
mov
push
imul
rorb
cmpsb
out
dec
lods
in
data16
xor
movsl
lea
roll
mov
outsb
cmp
stos
jae
or
mov
pusha
ja
iret
pop
mov
inc
imul
es
xchg
int
mov
pop
cmc
push
mov
or
lods
mov
popf
ret
push
mov
jmp
sub
cmp
dec
mov
push
lods
fisubrl
divb
test
fcompl
cmp
pop
ret
addr16
idivb
imul
push
sbb
xchg
or
add
sub
les
inc
jp
mov
aaa
divb
jp
inc
sub
fdivrs
jnp
sbb
mov
mov
jg
sbb
dec
dec
xor
cli
xchg
mov
daa
cmc
adc
shll
lret
xor
add
sbbb
stc
push
sbb
mov
add
jae
leave
faddl
mov
mov
mov
dec
dec
fwait
and
jl
mov
add
push
push
inc
xor
lahf
push
sbb
std
in
inc
stc
pusha
mov
jb
xchg
jnp
stc
xor
xor
fildl
rolb
or
pop
adc
adc
inc
inc
dec
out
fstpl
jbe
cmp
jae
mov
sub
inc
jae
andl
cmp
xor
clc
xchg
inc
xor
nop
adc
call
mov
dec
xorl
test
fsts
ror
imul
pop
cmp
mov
sahf
scas
in
shrb
aam
xor
cmp
xor
add
ljmp
ret
dec
xchg
stos
jp
pusha
sahf
shlb
gs
xor
mov
rclb
loop
adc
je
or
fsts
fisttps
pushl
sub
add
push
faddl
jb
stc
ljmp
aaa
jne
scas
aad
sarb
mov
or
scas
mov
adc
dec
cs
mov
jle
hlt
mov
sub
push
negb
lcall
ret
inc
dec
loopne
cwtl
or
pop
and
cmp
lods
cwtl
aaa
push
inc
outsb
inc
test
movsl
int
xchg
cltd
cmp
popa
es
add
dec
pusha
daa
ret
lea
pop
xchg
xor
jp
pushf
push
sub
jb
fadds
es
push
std
xchg
xchg
add
inc
or
mov
dec
shll
pop
sbb
xor
js
cld
cmp
daa
ficoms
in
sub
out
rorl
and
fldt
sub
dec
out
movsb
cmp
sbb
lcall
or
or
sub
mov
sub
mov
push
inc
pop
ret
push
fnstenv
dec
scas
push
out
and
lea
push
xor
mov
adc
inc
mov
daa
mov
js
stc
lds
mov
adc
ds
add
mov
sbb
lcall
std
aaa
aad
imull
push
xchg
stos
push
or
add
jnp
or
fiadds
mov
and
sbb
lret
mov
mov
mov
adc
sub
push
ficoml
pop
xchg
add
cltd
add
jmp
jae
jl
or
lahf
dec
lret
mov
dec
jns
mov
fstpt
jecxz
xor
push
jg
mov
cmp
mov
nop
add
sub
in
or
jmp
inc
lcall
sub
push
mov
cmp
sbb
add
popf
xchg
int3
xchg
stos
fsubl
jbe
mov
fisubl
test
mov
cmp
or
lret
mov
pop
mov
add
test
ds
dec
or
rcrb
sub
sbb
push
add
push
pop
push
or
jmp
sub
xor
mov
test
push
sbb
mov
movsl
ljmp
setae
mov
popf
dec
jo
nop
mov
mov
cmp
cld
inc
or
xor
lret
dec
outsl
dec
inc
daa
and
aas
jmp
push
jns
cmovle
js
loop
ret
fistl
enter
jns
or
pop
jno
aaa
sahf
lods
dec
jmp
loopne
mov
fsubrs
ret
testb
insb
mov
inc
push
fldenv
cmp
mov
data16
dec
mov
loope
xlat
clc
cmp
in
or
aaa
or
subl
add
jb
cmpsb
stos
insb
shll
mov
test
add
xchg
mov
lea
mov
je
xchg
or
std
add
sbb
jmp
push
ljmp
xchg
cmp
rcrl
pop
xchg
inc
aas
cmp
push
sahf
daa
fldcw
mov
dec
pop
lret
inc
arpl
pop
jnp
dec
gs
fldt
fstpt
pop
lahf
mov
jns
in
xchg
xorb
stc
cmpps
lret
ljmp
nop
adc
ret
cmp
les
loopne
jns
insb
imul
loop
stc
dec
out
pushf
add
dec
stc
add
inc
mov
das
add
and
adc
shll
jecxz
sarb
mov
or
mov
cmpl
arpl
and
dec
jb
xchg
and
mov
mov
add
les
fndisi(8087
push
loop
mov
scas
fadds
mov
add
fadd
xchg
mov
mov
insb
ror
cltd
mov
sub
inc
mov
data16
jmp
sub
mov
pop
inc
sub
dec
test
lahf
mov
or
mov
iret
jg
mov
push
sub
xor
loopne
fldcw
xchg
and
ret
xchg
pop
pop
or
push
cmp
sahf
outsl
lret
adc
in
sub
mov
pusha
gs
jne
cmpb
test
mov
lret
int
xchg
mov
inc
repz
adc
and
or
es
ja
push
mov
mov
popf
and
dec
mov
mov
cmp
stc
or
repnz
and
mov
ja
add
jl
mov
jmp
enter
and
dec
pop
test
aas
insb
addr16
sbb
cmp
fdivrl
outsl
sub
incb
mov
aaa
divl
mov
sbb
push
and
hlt
mov
xchg
push
push
subl
stc
add
xchg
rorl
xchg
jbe
sbb
sub
movl
or
jmp
inc
mov
add
jl
mov
dec
push
cmp
sarb
inc
int
into
jle
pop
stos
mov
xchg
fs
outsb
in
push
test
mov
insb
mov
lods
sub
sbb
xor
or
stos
jle
pop
out
jns
dec
jbe
in
or
xchg
lret
loope
shl
imulb
push
mov
dec
stos
xor
pusha
cmpb
push
inc
jnp
mov
sub
sbb
cmp
fs
enter
sbb
test
repz
or
jae
jl
outsl
bound
dec
add
cmp
insb
adc
mov
push
stos
lock
lods
nop
mov
push
xor
fwait
popf
jecxz
adc
mov
pop
pop
push
jg
aas
xchg
ja
pop
insb
lcall
push
xor
shl
mov
cmp
das
in
xchg
sbb
dec
int
ret
mov
aam
mov
jp
faddl
cltd
mov
fcomps
add
mov
inc
outsb
out
ror
xchg
push
add
or
adc
stos
or
jne
lods
sbb
sub
lods
cwtl
push
test
ss
xor
jae
shl
sbb
ljmp
adc
aad
cmp
cld
ds
orb
cmp
and
cmp
out
out
inc
push
push
addr16
into
lds
insl
sbb
cmp
cmpsl
addl
jmp
test
xchg
pop
std
imul
fimuls
push
daa
mov
lret
sbb
int
mov
adc
push
int
mov
icebp
xchg
mov
cmp
jbe
mov
test
xchg
jne
in
pop
jns
dec
popa
shlb
ss
and
and
add
push
or
pop
jns
and
lds
cmp
dec
ds
clc
mov
sbb
xor
movsl
dec
aas
dec
push
or
pushw
jmp
ds
sbb
and
adc
pop
bnd
dec
out
fisubs
ret
into
push
ficomps
inc
ja
cmp
ja
int3
lret
xchg
sub
aaa
icebp
outsl
jo
mov
xchg
cltd
push
or
push
lret
cmp
inc
sbb
fisubrl
loopne
in
xchg
mov
push
sbb
lret
cmpb
pop
in
sbb
sub
mov
pop
pop
adc
icebp
daa
incl
push
jne
sbb
pusha
push
mov
test
sbb
call
clc
mov
jmp
and
or
cmpl
cmpsl
cltd
loopne
or
sbb
icebp
mov
inc
mov
mov
loop
not
stos
xor
repz
mov
pop
rorb
cmp
mov
sbb
jmp
loope
add
fwait
cmc
arpl
stc
cmp
mov
adc
pop
mov
sysret
ds
xor
xchg
arpl
xchg
xor
call
mov
sbb
sbb
mov
ja
dec
inc
icebp
adc
lahf
add
insb
outsb
sbb
sub
aam
sbb
pop
mov
stos
in
jne
popf
lcall
mov
rcrl
jge
xchg
or
jo
inc
push
mov
and
xchg
push
aas
push
es
lods
xor
jecxz
add
jb
fnstsw
cmpsb
ret
pop
adc
push
subb
rolb
push
imul
jecxz
ljmp
lods
inc
addr16
sahf
add
xchg
cltd
jo
or
clc
sbbl
aas
xchg
xlat
scas
int3
pop
movsb
pusha
jo
test
sbb
dec
dec
mov
mov
mov
fnsave
pop
aad
push
dec
dec
cmpl
dec
jnp
and
xchg
pop
fdiv
lret
push
or
or
and
sbb
loope
std
bound
mov
xchg
int3
ds
outsl
int
inc
cmpsb
popa
mov
inc
das
jno
inc
in
jo
jnp
xchg
out
in
or
stc
pop
imul
push
sub
and
fstl
popf
lahf
insb
int3
bound
sbb
or
ss
cs
cmp
daa
xor
adc
sub
mov
pushf
in
ret
xlat
in
mov
aas
mov
lock
dec
xor
arpl
mov
incb
mov
out
lahf
add
cwtl
jno
ret
mov
pminub
dec
mov
xchg
dec
inc
and
aad
ljmp
add
xor
jl
mov
fst
pop
mov
inc
js
add
cmc
test
popf
xor
dec
jns
add
rcr
or
cli
addr16
adc
jnp
sahf
adc
add
sbb
dec
hlt
mov
mov
jb
mov
sbb
in
ss
in
rol
xlat
aam
lods
xor
and
jmp
imul
mov
loopne
sar
mov
add
or
lock
shlb
and
xor
lds
adcl
fidivs
dec
leave
das
and
ja
ret
push
add
jg
leave
lods
inc
or
mov
jl
sub
inc
sti
and
sub
loope
pop
xor
add
cmp
xor
test
sbb
rcr
adc
dec
inc
sti
or
mov
insl
stos
dec
adc
xchg
cmpsb
sub
adc
test
jo
inc
mov
shrb
cmp
lods
mov
in
mov
and
outsb
das
pop
push
adc
push
lds
sub
push
icebp
pop
cs
pushf
mov
and
lcall
xchg
in
sti
add
clc
sub
mov
push
sbb
sbb
out
and
jg
fs
or
stos
enter
cs
insb
dec
es
push
mov
shrb
out
push
and
sbb
adc
scas
fwait
je
mov
jge
xor
mov
out
inc
jbe
lret
mov
int
sahf
mov
aaa
mov
cmp
data16
outsb
and
fcomp
push
sub
test
mov
inc
and
or
inc
rol
push
sbb
inc
jmp
es
sbb
fwait
jb
or
pop
scas
mov
xchg
and
adc
push
mov
cmp
dec
add
inc
dec
or
cwtl
mov
in
jns
or
lock
sti
push
pop
repz
js
sahf
shrl
ret
daa
bound
sbb
test
fcoms
in
or
pop
mov
or
push
jl
mov
arpl
outsl
mov
jl
fidivrl
in
lock
pop
enter
mov
lcall
mov
sbb
pop
pop
or
jle
adc
mov
add
mov
shll
clc
stos
lds
push
loop
dec
ljmp
inc
stc
push
mov
stos
mov
adc
add
jbe
xor
xlat
out
sahf
test
pop
pushf
adc
or
xchg
test
lea
push
or
push
fistl
add
std
lcall
jl
xchg
dec
push
test
sub
dec
add
jnp
adc
push
lock
mov
in
jecxz
add
cli
push
fmull
enter
imul
and
cs
mov
jno
and
or
test
and
lods
testb
aam
repz
mov
push
adc
loopne
enter
lods
add
xchg
push
mov
pusha
ffree
mov
pop
lods
xchg
xchg
fiaddl
xchg
sbb
sub
cmp
aad
lods
adc
jl
scas
add
jl
js
fisttpl
les
xchg
in
mov
inc
or
mov
xchg
xchg
cltd
sub
jmp
imul
push
jb
dec
lahf
mov
cwtl
fildll
add
xor
inc
pusha
test
add
and
mov
sahf
sbb
into
xor
jmp
lds
in
test
cmp
clc
push
loop
sub
icebp
call
xchg
xor
in
sbb
mov
mov
jge
lock
xchg
adc
push
pop
mov
dec
add
subl
adc
push
add
repz
mov
fildl
das
lret
jge
jg
std
shrl
jne
pop
mov
or
out
adc
xor
mov
xchg
fcmovnbe
fsubrs
and
add
pushf
insl
xchg
rorl
ljmp
iret
mov
jge
pop
pushf
sub
mov
xchg
divl
out
push
push
pop
xchg
sub
mov
xchg
xor
cmp
ljmp
push
inc
popa
xchg
pop
mov
repz
repnz
xlat
rolb
repz
push
cli
arpl
popf
dec
gs
stos
lds
sbb
lmsw
pop
push
inc
push
mov
call
mov
orl
gs
cmp
push
incb
rcrl
ret
sub
push
xchg
cltd
mov
mov
pop
sub
test
sub
mov
mov
pop
in
in
mov
pusha
jge
pop
ret
enter
jmp
adc
inc
das
push
enter
xchg
or
xchg
andb
lret
cmpsl
mov
sbb
popf
movsb
bts
rcr
fsubl
push
push
adc
adc
mov
inc
sarl
sub
in
leave
clc
sbb
lcall
mov
or
mov
mov
gs
pop
popf
jge
jmp
fcmovnu
addl
push
mov
inc
aad
dec
xchg
mov
mov
push
or
out
filds
lea
cmp
lret
sbb
scas
mov
fists
flds
inc
jb
cli
imul
scas
in
in
stos
pop
pushf
jg
push
jl
es
js
cmpsl
sub
lret
inc
das
iret
test
inc
jae
adc
cmp
int3
push
out
pop
js
sub
aas
subb
enter
lods
adc
faddl
ds
aaa
gs
add
sub
jmp
sub
and
imul
js
xchg
out
popf
lret
fisubrl
icebp
push
sbb
jg
test
sbb
sbb
push
je
adc
jns
mov
insl
jg
adc
and
mov
push
mov
cmp
xchg
std
das
xor
add
mov
ljmp
xor
inc
ret
aas
fcoms
scas
and
stos
mov
cmp
jnp
adc
hlt
shll
jge
out
leave
cmc
push
mulb
das
and
fidivs
mov
out
or
in
sti
cmp
insl
jbe
or
movb
lret
popa
lock
xchg
jle
cmc
or
jle
dec
mov
mov
insl
mov
ret
push
subb
sub
daa
repz
mov
sbbl
pop
lods
mov
aas
xchg
inc
aas
pop
mov
decb
out
inc
adcl
addb
stc
iret
mov
wrmsr
inc
fisubrs
adc
lea
pop
inc
daa
into
cmp
adcl
imul
sub
lret
sarl
dec
divl
pop
cmpsb
cmp
js
xchg
gs
ret
fst
loope
xor
mov
push
into
xor
dec
in
incb
and
inc
inc
jp
cmp
ficoms
dec
sbb
sub
mov
fistl
outsb
or
icebp
mov
dec
cmp
test
adc
xchg
and
mov
repz
cld
in
scas
push
push
pop
js
test
xor
in
mov
adc
jo
arpl
testb
xchg
insb
pinsrw
lret
sub
shlb
pop
adc
mov
divl
sbb
xchg
sub
mov
pop
mov
sti
test
xchg
sub
dec
jmp
mov
lods
in
mov
jl
xor
sub
mov
bound
xchg
shrl
fdivrs
pop
mov
push
dec
sbb
cltd
add
add
loopne
stc
test
sub
test
fsubs
mov
sub
mov
mov
jmp
jns
out
lret
inc
nop
imul
xchg
push
pusha
cmpxchg
mov
mov
mov
add
repnz
lahf
mov
mov
pop
sbb
std
in
adc
push
dec
mov
hlt
ss
clc
repz
cwtl
inc
loopne
aas
inc
inc
mov
dec
int3
pop
xor
gs
test
jae
inc
cmpsl
int3
movsb
mov
mov
lcall
xor
dec
outsb
les
int
aaa
xchg
loop
cmp
mov
movb
in
fcmovnb
pop
imull
mov
xchg
std
add
aam
cmpsl
push
popa
adc
fstpt
int
dec
adc
jns
shl
mov
inc
shrl
adc
test
jecxz
dec
out
nop
adc
int
push
rcr
aam
les
test
cmp
dec
enter
push
xchg
jecxz
mov
cwtl
jne
sahf
adc
ds
or
repz
jle
or
mov
stc
jo
into
test
rclb
cmc
push
sahf
mov
outsl
int3
add
call
out
js,pt
sbb
mov
mov
pop
mov
sbb
jno
sar
push
pop
icebp
sbb
xor
jl
out
fwait
adc
push
mov
je
sbb
mov
sub
add
dec
gs
adc
test
jg
popa
xor
ret
pushf
cmpsl
inc
mov
loope
adc
lds
sbb
nop
repz
mov
fnstenv
or
repnz
push
xchg
jl
or
idiv
cmp
out
dec
push
push
cs
test
pop
repnz
ret
fsubrl
mov
addb
ret
xor
and
pop
and
test
leave
cmp
aas
in
and
mov
lret
xor
inc
nop
cmp
fbstp
dec
jno
dec
shll
out
es
pop
mov
call
lea
fs
push
idivl
xor
ljmp
pusha
pop
aam
fildll
jno
rcl
imul
dec
pop
sub
xorl
repnz
add
in
and
and
cmp
adc
sbb
xor
mov
add
loope
scas
aaa
jb
mov
shll
xorb
mov
dec
rorl
fwait
ljmp
cmpsl
lods
cs
pop
lahf
into
leave
dec
dec
pusha
cmp
mov
lock
cwtl
xchg
mov
jl
shlb
mov
mov
or
jge
push
mov
sub
sub
mov
and
mov
fadds
lea
out
pushf
mov
mov
xor
inc
xlat
or
and
repz
dec
or
dec
int
xchg
mov
inc
mov
jl
push
subl
cld
pushf
cmp
pop
lcall
mov
dec
inc
cmp
inc
jno
cmp
pop
ljmp
sbb
cmp
ds
push
out
jecxz
mov
push
mov
in
das
imul
cld
xchg
lods
clc
cmp
lret
jne
insl
add
in
sarl
pop
pop
mov
jl
dec
rorl
sbb
mov
imul
dec
das
and
pop
stos
out
sub
inc
inc
pop
retw
inc
ljmp
xor
jnp
aas
fildll
orb
outsb
das
mov
int
and
adc
inc
and
sub
sub
sbbb
push
adc
inc
lret
out
mov
jmp
push
mov
push
sbb
out
ficoms
pop
xorl
cmpsb
add
xchg
or
and
pop
cmpsl
pop
mov
cltd
mov
dec
push
adc
or
xor
inc
int3
jns
in
jnp
lret
movsb
fldl
push
imul
mov
jl
mov
add
fnstcw
dec
jmp
icebp
scas
aas
mov
add
testb
inc
aam
and
push
jnp
adc
jle
adc
loop
shlb
outsb
imul
push
sbb
in
out
xchg
dec
rolb
adc
mov
sub
ljmp
push
cmp
call
notb
push
maskmovq
imull
jns
dec
sub
mov
sti
pop
iret
cmp
stc
mov
shl
sbbl
push
pop
dec
jno
mov
mov
gs
cltd
pop
scas
sbb
or
leave
lods
icebp
cli
in
lea
pop
test
adc
mov
dec
int3
pop
cmc
into
fcoml
mov
lcall
insb
divb
xchg
push
test
nop
xlat
cwtl
aas
mov
movb
jmp
aam
push
add
lock
fisttps
nop
imul
inc
in
and
adc
int
addr16
movsl
leave
sbb
xchg
pop
nop
stos
outsb
outsb
cltd
mov
add
nop
sbb
mov
popa
mov
imul
jbe
fdivs
addr16
or
pop
cs
imul
imul
jp
push
and
inc
and
jno
or
in
mov
inc
shl
pop
sub
rorl
add
push
adc
and
xchg
xchg
movsb
push
sub
dec
pop
into
andb
in
cmp
mov
and
loope
sbb
add
mov
gs
and
cmc
dec
das
mov
push
dec
inc
js
jnp
dec
push
jno
jb
jecxz
sbb
sbb
xchg
sbb
inc
xchg
inc
fptan
cmpsb
out
jge
stc
ds
sbb
data16
inc
fnstenv
gs
mov
jno
mov
js
je
mov
inc
pusha
negl
mov
xchg
pusha
dec
cmp
inc
rcll
sbb
sub
adc
cmp
adc
jae
popw
test
sbb
enter
jae
xchg
jmp
scas
int3
jecxz
mov
fistps
fisubrl
in
jmp
incl
sbb
dec
fs
sarl
stos
in
lods
cmp
pop
cmp
orb
nop
sub
mov
jae
stc
add
xor
rolb
mov
add
lret
xchg
mov
aaa
repnz
pop
shrl
aad
mov
das
gs
enter
mov
pop
sbb
jns
add
sahf
inc
mov
mov
fidivrl
or
int
mov
sti
mov
mov
push
aaa
push
ja
inc
mov
mov
add
gs
mov
mov
ret
cld
test
lods
adc
cmp
push
adc
fwait
push
enter
int
adc
in
mov
hlt
lcall
mov
pushl
shrb
cld
mov
jae
out
sbb
icebp
jb
pop
sahf
stc
add
mov
mov
adc
inc
mov
xor
xlat
pop
jecxz
mov
sub
subb
das
dec
daa
xor
inc
xchg
dec
inc
scas
in
mov
mov
aad
orl
leave
rclb
inc
xor
test
mov
mov
add
popa
test
movsb
lret
sub
mov
push
lods
jno
jg
fs
or
xchg
inc
mov
xchg
nop
out
mov
filds
pop
in
push
testl
std
in
and
jge
pop
pop
popa
mov
sub
or
js
out
ret
pop
icebp
mov
add
inc
repz
mov
adc
xorb
shl
lret
mov
lock
add
pop
add
hlt
inc
xor
and
mov
bound
aad
mov
inc
sub
mov
cmc
cmp
jae
and
pushf
movd
mov
fimuls
xchg
sbb
loopne
out
mov
sbb
and
int
lret
lock
mov
push
add
inc
xlat
ds
mov
mov
push
or
pop
testl
mov
jmp
xchg
jp
stos
nop
xlat
and
sub
nop
idivl
mov
stos
pushl
pop
rcll
shll
jecxz
adcl
adc
cld
cli
adc
loope
xor
repz
repnz
out
push
jns
xorb
enter
pop
loope
pop
and
bound
leave
popa
sbb
and
mov
jbe
jmp
sbb
pop
out
movsw
cmpsl
pop
ja
test
dec
jns
hlt
loop
pop
fldenv
mov
fisubs
mov
sub
shrl
mov
into
icebp
ucomiss
mov
rcll
pop
aaa
aad
adcl
loopne
clc
xchg
pushl
add
and
hlt
xchg
int
pop
lock
dec
decl
cmp
loop
and
cmp
sbb
enter
mov
sarl
lahf
inc
xchg
std
cli
push
lret
scas
jno
mov
add
ja
inc
xlat
mov
insl
aam
push
es
pop
pop
pusha
xchg
or
xchg
dec
addl
int3
enter
es
out
or
test
and
lcall
mov
pop
mull
push
es
aam
push
add
mov
sub
call
push
pop
push
mov
jmp
lret
mov
sti
clc
int
dec
push
push
or
dec
sbb
mov
mov
mov
mov
mov
mov
stos
rcll
inc
pop
inc
mov
or
cmp
leave
notb
xor
testb
sarl
sbb
xor
cmp
inc
icebp
fmull
dec
repz
or
test
sub
pop
mov
mov
call
jbe
mov
mov
into
or
pop
pushf
dec
cwtl
clc
hlt
sbb
cmpb
hlt
daa
mov
lods
pop
mov
add
mov
lret
fldcw
lds
add
xchg
outsl
call
mov
mov
mov
call
cltd
test
push
je
and
pop
clc
jge
das
jne
stos
pop
or
daa
xchg
push
pop
dec
cmpsb
mov
cmpsl
push
int
mov
or
pop
add
xlat
mov
dec
stc
jp
imul
sbb
or
xchg
or
lea
scas
lods
nop
and
xor
out
inc
ret
inc
hlt
rcl
movsl
xor
loope
in
xor
cmpsb
mov
pop
mov
aaa
mov
dec
popa
mov
sbb
push
in
sub
rorb
cltd
jae
add
cmp
pusha
fwait
sub
ret
into
mov
jnp
sti
inc
push
pop
xor
iret
push
mov
or
cmp
mov
inc
clc
or
sti
ljmp
js
and
xor
dec
aad
lods
push
int3
sarb
out
fs
mov
or
js
and
pop
into
loop
jmp
mov
aad
test
mov
aaa
mov
pop
pushf
stc
lods
cwtl
aas
or
pusha
mov
mov
imul
pop
add
adc
mov
mov
int
mov
and
fiaddl
push
fbstp
cltd
cmp
out
xchg
cld
cmpl
lods
nop
mov
xrelease
ljmp
insl
and
xor
arpl
cmpsb
mov
test
sub
and
cmc
xor
clc
cmp
lds
add
ss
and
mov
rol
idivb
add
in
cmp
push
ljmp
push
inc
rcrb
mov
jg
pop
dec
mov
fdivrl
call
enter
jne
push
push
push
pop
or
in
lock
fs
fidivl
cmp
sbb
out
or
xchg
in
idivl
ror
pop
lods
ficoml
jo
movl
dec
gs
push
adc
xchg
cmp
stos
jns
les
or
sbb
in
stc
push
int
popf
xchg
inc
sahf
cmc
cmp
daa
mov
rcrl
pop
xor
push
jbe
push
adc
jae
push
fcoms
sti
out
scas
fiadds
inc
mov
outsb
sub
es
cmp
or
dec
jl
leave
lock
es
add
insl
addr16
adc
ret
aam
push
push
xchg
pop
cmpsb
push
aaa
mov
scas
aaa
inc
sbb
jae
loop
push
shl
ja
sbb
push
ja
movl
cmp
sbb
lds
jae
push
mov
stos
hlt
popa
or
mov
out
cmc
cmpsl
shr
addl
xchg
icebp
test
cmp
cmp
aaa
sbb
push
mov
inc
js
out
imull
mov
add
jbe
push
cs
insb
cmp
scas
dec
adc
cltd
adc
or
xchg
bound
sub
mov
dec
jg
mov
aad
push
jmp
ss
movsb
pop
xor
out
mov
add
mov
sub
fildl
leave
cmp
ret
cwtl
fucom
push
sarb
aaa
jo
andb
mov
mov
cmovs
fimuls
inc
out
inc
out
xor
enter
ljmp
mov
insl
mov
ror
xorb
out
lret
jbe
push
test
push
jo
cmp
flds
fbld
lcall
incb
dec
xchg
sbb
adc
rcrb
fnstsw
pushl
loopne
insb
lds
cmp
ljmp
int
les
pop
mov
adc
xchg
sarb
xchg
xlat
cmp
aad
dec
shrb
jne
addr16
daa
push
mov
cmp
push
push
and
icebp
push
dec
sub
xchg
push
das
fidivs
push
jo
fyl2x
xlat
and
scas
out
pop
repnz
mov
xor
jne
cmpsl
pushf
mov
xchg
ljmp
shll
inc
call
push
mov
lahf
mov
lock
aas
sub
fcmovnb
and
sub
cmovno
mov
push
movsl
push
pop
fists
xchg
or
movsl
xchg
into
sub
icebp
dec
mov
iret
push
popa
js
in
xor
test
sbb
xchg
dec
mov
ret
stos
cmc
mov
jne
arpl
lret
xor
xor
push
cmp
gs
stos
loope
imul
call
in
add
ror
push
mov
lret
rcrb
inc
sbb
pop
and
int3
mov
aas
mov
push
mov
jns
xor
xchg
mov
js
lret
dec
mov
iret
add
push
movsb
not
shll
mov
dec
scas
out
pusha
dec
out
or
cmp
mov
push
adc
sbb
or
mov
fimuls
sbb
mov
pop
pop
jmp
jmp
int
mov
mov
adc
push
cmovae
or
call
lds
sub
iret
jnp
repz
sti
jb
xor
mov
rcl
add
and
sbb
mov
insb
and
test
xchg
pop
lds
jmp
ret
ret
xor
cmpsl
bound
shlb
xchg
pop
add
or
out
sub
ljmp
mov
jbe
mov
das
repnz
cmp
bound
arpl
and
bnd
push
fldlg2
pop
fmul
mov
add
rclb
mov
dec
sub
add
adc
rcrb
scas
push
mov
dec
and
pop
mov
mov
lcall
inc
shrl
sbb
adc
fadds
lea
movsl
repz
mov
push
dec
nop
mov
pop
lea
loopne
cmp
fcmovbe
xlat
jo
mov
repnz
cmp
mov
jns
insl
mov
jo
jo
cbtw
cltd
jns
dec
movb
mov
in
aas
lea
xor
shl
test
test
syscall
into
cmp
dec
jecxz
sub
dec
inc
and
pop
pop
xchg
xchg
insb
lds
push
push
mov
mov
shr
shlb
mov
lret
rclb
bound
cmpl
iret
mov
out
inc
mov
fsubrs
addb
pop
movsb
push
data16
aad
xor
add
mov
leave
nop
daa
mov
sbb
addl
mov
imul
xchg
cmp
lods
mov
dec
call
jb
adc
xchg
inc
sub
je
nop
pop
addr16
cmp
out
dec
ret
scas
sub
bound
dec
cmpsl
sub
mov
push
cmp
pop
rorl
xchg
pxor
in
xor
sbb
push
or
repz
outsl
jg
stc
sub
cmpsb
pop
out
lds
cli
sub
adc
dec
aaa
clc
inc
sbb
orb
push
sbb
gs
sub
xchg
pop
xor
pop
push
jg
add
scas
je
out
in
jb
pop
add
movsl
jmp
aad
movsl
into
jmp
filds
iret
xchg
rorl
push
inc
roll
aaa
push
lods
inc
adc
cmc
lret
jnp
mov
mov
fmuls
xchg
cmpsl
xchg
pop
or
loope
fistpll
xor
clc
pop
ljmp
jp
lds
mov
les
ss
scas
push
repnz
push
sbb
vmovddup
or
or
dec
cmpsb
push
mul
sbb
mov
adc
adc
jmp
push
sub
pop
xchg
jecxz
shl
add
pop
stc
sarl
push
mov
pop
aam
inc
pusha
cmp
popa
out
add
mov
push
mov
mov
xchg
enter
aaa
inc
push
fwait
adcl
fs
mov
and
sub
and
mov
mov
and
push
mov
xchg
pop
hlt
mov
fnsetpm(287
mov
pause
leave
cmpsl
out
sbbb
sbb
sbb
je
sbb
ret
inc
jo
and
jae
pop
mov
or
push
xor
push
out
sarl
mov
or
push
int3
push
jl
or
fs
push
xchg
es
jnp
sub
mov
mov
fbld
lret
xchg
jge
lods
dec
ficompl
sub
dec
cmp
xchg
and
in
xchg
imul
mov
add
stos
sub
mov
pop
dec
or
push
dec
pop
xor
xchg
pop
outsb
imul
jmp
jo
and
rorl
sti
mov
lcall
adc
aad
add
mov
fbld
fidivs
gs
je
jl
lea
jns
jl
push
les
in
mov
dec
xchg
cmp
into
pop
push
jmp
xor
xor
xchg
jb
aaa
shrl
aam
and
repz
ds
inc
xchg
outsl
imul
fldenv
inc
pop
inc
dec
mov
rcrb
and
or
jle
scas
aad
inc
or
xor
imul
mov
mov
inc
daa
flds
cmp
lret
test
adc
rcrl
pop
xor
push
setl
andl
cmp
xor
dec
cli
movsb
pop
xchg
clc
push
and
pop
es
push
pop
fcmovnu
mov
dec
xlat
orb
add
ljmp
push
jge
js
xchg
lods
inc
into
fnstsw
or
push
lods
pop
inc
push
mov
sbb
or
jmp
leave
xchg
mov
outsb
and
cmp
and
adc
das
jge
jnp
and
outsb
pop
cli
cmp
push
sub
pop
adc
comiss
and
lret
fildl
pop
cmp
cli
ds
gs
das
mov
inc
push
xor
mov
adc
cmp
insl
les
adcb
shrl
sti
mov
xor
dec
cld
mov
out
pop
or
cmpsl
lret
vphadduwd
testb
pop
xor
aas
jmp
push
js
mov
les
pop
pop
cmpsb
xor
push
mov
insl
loop
jae
cmc
xor
sar
test
ret
bound
aaa
outsb
addr16
jnp
stc
popa
aad
cmc
movl
or
mov
mov
xchg
inc
lods
addr16
aad
mov
add
cmp
xchg
xchg
push
xchg
mov
and
ljmp
cmpb
call
not
ret
cmc
push
mov
or
int3
push
dec
xchg
insl
iret
inc
shl
xor
push
pusha
push
xchg
or
xchg
mov
inc
push
mov
in
mov
xchg
fisttpll
addr16
call
jecxz
mov
xor
jl
mov
pop
fldt
mov
lret
ret
int3
or
pop
pop
stos
mov
and
sub
iret
inc
and
xor
aaa
outsl
in
leave
sub
inc
rorl
es
cmp
fmulp
adc
clc
movsl
mov
pop
repz
cmp
rclb
xor
and
cmp
dec
or
xor
ljmp
aam
out
lods
jg
nop
pusha
sub
test
pushf
or
ffree
frstor
or
mov
mov
stc
inc
mov
daa
and
mov
outsl
idivb
mov
out
mov
lea
inc
les
dec
pop
hlt
movsb
fcmovnb
pop
negb
or
addb
fistpll
cmp
jl
jo
xchg
negb
dec
or
and
out
inc
push
jecxz
subb
xor
dec
lds
xor
cs
adc
mov
data16
xchg
pop
jo
pop
sub
sub
pop
out
pop
and
faddl
iret
xor
cltd
hlt
sub
adc
mov
fistps
add
nop
sbb
inc
sti
jge
mov
testb
mov
adc
fwait
dec
jge
movsl
cmpsl
bnd
popa
fwait
xor
popf
sub
dec
add
mov
inc
jg
cmp
js
mov
lcall
push
mov
jmp
mov
jl
mov
push
out
out
in
sub
inc
pop
lods
int3
dec
push
out
insl
cmp
and
push
xchg
jb
fsubrl
scas
aam
jo
add
adc
roll
xor
adc
mov
cmp
or
xchg
and
in
daa
mov
lret
mov
sahf
cmp
mov
or
pop
jo
or
ljmp
int
enter
aam
movsl
stc
lock
dec
jo
sahf
loop
mov
adc
das
adc
xchg
adc
push
xchg
jle
ret
xor
cltd
xor
dec
out
stos
cltd
rcr
cmp
data16
rcl
cli
and
repnz
lds
js
pop
inc
mov
rcll
mov
icebp
mov
aad
es
aad
jg
dec
sti
mov
popf
mov
add
mov
xlat
jge
xor
fst
js
sub
iret
mov
aas
into
fwait
out
xchg
sub
pop
stos
pop
hlt
jge
das
stos
and
inc
shll
fildl
subl
les
push
dec
ret
dec
mov
add
pushf
jmp
dec
and
push
push
scas
imull
out
sbb
int3
hlt
shrb
repnz
mov
jmp
mov
jns
xor
int
sar
push
fsubrl
cs
and
or
jno
mov
imul
pop
scas
inc
rorl
or
inc
pop
mov
pop
cmp
scas
iret
test
mov
lds
mov
fcoml
cmp
push
or
xlat
add
jns
loope
pop
xor
fists
cmp
push
imul
cld
push
or
cltd
xchg
mov
outsb
jne
mov
out
and
add
int
fldl
ss
adc
outsl
jns
clc
es
test
inc
pop
fs
call
cmp
stos
shrl
lea
pop
dec
jl
xchg
push
mov
imul
mov
mov
pop
or
cmp
jmp
adc
enter
arpl
mov
fmull
es
test
xchg
jb
cmp
jb
aam
pop
hlt
xchg
mov
sbb
out
divb
adc
daa
loopne
push
repz
push
out
sarb
jge
push
pop
jbe
xchg
xlat
jnp
xchg
nop
fdivs
loope
mov
movsb
mov
jle
inc
add
lret
into
es
enterw
or
fmuls
cltd
jmp
out
into
call
lcall
cmp
hlt
and
das
insb
add
or
adc
mov
orb
mov
imul
pop
add
js
test
xor
and
test
sti
jecxz
out
inc
sbb
pop
mov
hlt
dec
sbb
shlb
divl
mov
test
pusha
je
sbb
push
and
mov
inc
adc
xchg
clc
enter
fimull
pop
clc
xor
cwtl
ret
loope
testl
lock
and
orl
rcl
and
out
ret
inc
cli
test
adc
lods
dec
imulb
aad
push
ret
mov
inc
lods
cs
mov
cwtl
xchg
fidivs
out
xchg
ds
pop
push
add
rcrb
aam
in
std
fwait
or
dec
scas
add
push
lret
pop
push
std
sbb
xchg
hlt
mov
fucomp
sub
mov
pop
mov
test
cmpxchg
ret
aam
insb
mov
cmpl
mov
shlb
xor
inc
out
sbb
xor
leave
xchg
push
and
inc
sbb
add
js
imul
es
sbb
push
xor
notb
arpl
sbb
popa
mov
pop
mov
push
xlat
mov
mov
mov
xor
je
cmp
repz
jge
ja
and
rol
aad
pop
jmp
inc
sti
arpl
inc
adc
mov
jecxz
pop
cmp
ljmp
xchg
mov
shrl
pusha
popa
daa
sahf
and
mov
lock
andb
fs
xchg
xlat
inc
vorps
nop
cmpsl
add
fcoml
cmp
clc
jge
inc
xchg
inc
push
inc
cmc
jo
ret
inc
cwtl
ljmp
call
inc
dec
pop
sub
inc
mov
popf
adc
and
sub
imull
cs
lret
cmc
pushf
or
loop
ss
adc
push
fiadds
icebp
out
pop
iret
xlat
stos
jne
or
xor
loopne
jg
push
xlat
jno
mov
int3
pop
jno
iret
lods
addr16
adc
mov
or
rep
adc
xor
clc
inc
push
mov
ret
lods
or
dec
pop
mov
jle
and
and
dec
mov
out
cmovne
fisubl
dec
mov
sahf
negl
add
pop
test
sahf
cltd
sbb
pusha
test
cmp
xchg
les
add
pop
iret
fldt
inc
cs
mov
fwait
out
fsubrp
mov
out
nop
fmull
inc
adc
shl
jb
in
lret
xchg
out
imul
push
mov
dec
nop
arpl
nop
add
fucom
decb
pop
decl
sub
das
in
or
sbb
fstp
mov
mov
jl
xchg
fmull
jp
js
getsec
jne
mov
push
pushf
pop
mov
fldl
cmc
push
jecxz
in
and
xor
dec
ljmp
inc
leave
jg
xlat
out
lock
and
out
push
inc
out
js
sbb
mov
sbb
test
dec
shrb
pop
and
fcomps
jmp
fldl
loop
lods
cmp
pop
fs
xchg
jg
mov
mov
xchg
mov
inc
push
ja
ret
cmpsb
and
mov
mov
dec
xchg
fmuls
push
test
push
int
pop
sub
jecxz
xlat
adc
pop
push
push
insl
add
outsl
push
iret
int3
out
and
xor
pushf
insb
and
dec
stos
rorb
loop
inc
mov
xchg
and
jecxz
add
xchg
fs
cmp
cmp
jae
ds
cmpl
mov
mov
sub
leave
enter
add
stc
fdivl
and
nop
push
lret
out
dec
jg
xchg
dec
insl
mov
add
inc
lods
outsb
or
jl
ret
mov
lea
nop
cmp
mov
adc
pop
jae
sub
mov
add
and
sub
cs
stc
pop
sub
enter
lret
or
out
aaa
jnp
loop
vunpcklps
jp
mov
inc
mov
add
je
xchg
mov
mov
in
pusha
xor
enter
sub
jo
in
dec
jno
sub
xchg
cs
stos
mov
push
jno
pop
and
into
jno
pop
test
or
negl
push
nop
daa
call
lods
mov
push
mov
push
std
jo
sbb
rcl
in
rorl
sub
xor
xchg
sub
sahf
mov
cmp
out
pushf
fsubl
push
xchg
cli
shlb
jne
adc
lret
sub
dec
pushf
cmp
out
jne
add
sbb
xchg
xor
jne
ficompl
lcall
ret
jbe
aad
xchg
xor
fidivs
mov
pop
lock
ja
mov
insb
fstps
pop
or
xchg
xchg
fcmovne
rorl
sub
rcll
outsb
push
insb
sbb
mov
lret
fisttpl
or
dec
movsb
and
or
pop
add
cld
scas
insb
mov
andb
dec
push
push
leave
cwtl
daa
jns
imul
imul
shrb
cltd
or
inc
rol
jmp
jmp
out
adc
sbb
in
mov
inc
lcall
stc
sarb
roll
mov
test
int
addr16
push
fldl
ljmp
lea
xlat
dec
pop
cs
sub
incl
xor
or
and
dec
sub
fistpl
imull
dec
lret
aam
sub
popf
inc
mov
mov
fcoms
insl
sub
mov
addr16
sahf
jmp
xor
pop
repz
shll
ds
push
repz
sbb
mov
gs
lds
dec
dec
mov
imul
scas
push
test
mov
loop
jnp
movsl
notl
das
jns
orb
lods
push
aam
mov
pop
lds
xlat
mov
out
ret
shlb
outsb
in
inc
fs
dec
out
outsl
mov
mov
std
int3
mov
pop
jnp
push
sbb
mov
xor
mov
adc
nop
mov
pop
aad
dec
add
ret
cs
xor
and
aad
clc
jae
filds
subb
out
pop
fbld
fidivrs
xchg
push
sbb
into
mov
dec
fstpl
mov
pop
add
daa
mov
into
cmp
mov
imul
mov
lret
inc
sbb
xchg
and
ja
bound
cli
rcr
cmp
stos
les
cmpsl
mov
mov
movsl
stos
pop
das
jmp
push
ds
in
mov
rolb
pop
fstps
je
mov
cmpsb
out
dec
cmp
data16
push
movsl
notl
adc
test
cmp
mov
rcrb
lods
sub
push
in
adc
pop
ret
rclb
rol
pop
in
pop
xor
jb
out
pop
add
popa
xor
int
cli
mov
or
mov
push
stos
imul
or
rcrb
cmp
in
or
sub
push
adc
enter
scas
fimuls
cmc
int
lret
push
shrb
jmp
out
lods
add
shrb
pop
mov
lds
jg
push
jle
xchg
adc
pop
push
inc
shr
mov
outsb
fildl
xlat
into
jns
sbb
xchg
nop
je
movsb
jecxz
lds
lods
fistpl
jno
dec
sbb
cmp
mov
cmp
cmp
scas
push
push
fwait
pop
mov
sub
jmp
shlb
and
xor
bound
addr16
jecxz
inc
jne
aad
dec
inc
mov
push
pop
jne
cmp
imul
sbb
xor
mov
mov
cmpl
loopne
cmpxchg
fidivs
pop
in
pop
pushf
mov
aas
mov
xor
ss
mov
ja
insl
add
inc
inc
sub
push
lret
mov
test
xchg
out
and
bound
leave
pop
fwait
push
popf
inc
sahf
lods
movb
imul
insl
jp
fcmovnu
jg
adc
ficoml
shl
dec
enter
out
sub
jp
inc
orb
sbb
pop
shll
adc
jnp
lock
loop
cmpsb
mov
sbb
data16
jae
sbb
jp
ds
fldcw
push
cli
mov
loope
add
in
jecxz
je
xor
push
sub
mov
pop
outsb
add
push
nop
jnp
dec
mov
xchg
mov
dec
aad
out
mov
push
add
out
jno
outsl
aam
das
fwait
or
out
rcrb
dec
aaa
dec
pushf
inc
push
push
mov
mov
mov
out
out
and
ds
fstpt
pop
fistpl
sti
pop
and
add
or
lock
into
ror
pop
dec
stos
dec
repnz
outsb
nop
nop
push
shll
adc
pop
lds
adc
mov
jo
lcall
bound
lahf
mov
sub
push
xchg
adc
xorl
cmp
mov
xchg
pop
cli
arpl
icebp
pop
jecxz
jno
xchg
mov
fsub
lock
test
add
aas
adc
sahf
stos
outsb
push
pushf
int3
sti
arpl
pop
dec
mov
sti
call
jne
mov
xor
shll
dec
or
jl
xchg
inc
sbb
into
cltd
adc
inc
lds
data16
lock
pop
fsubr
lret
and
pop
xchg
into
dec
xchg
dec
lahf
sbb
in
xchg
loopne
out
fsubrp
ja
adc
jmp
cwtl
pop
cs
adc
push
rorb
jp
fisubl
pop
mov
jbe
int3
and
imul
fs
out
leave
es
mov
xor
mov
inc
lock
cmpb
jo
dec
xchg
daa
add
xorb
imul
jp
sbb
mov
xchg
pop
adc
out
mov
xor
out
mov
mov
inc
sub
dec
ss
fs
adc
rcrl
or
xlat
xor
cmp
int
jge
cmp
dec
xlat
cld
jno
loopne
xor
jecxz
roll
cmp
or
push
cmp
insb
sub
jge
loopne
movsb
es
pop
mov
pop
mov
cwtl
dec
outsb
out
lods
and
cli
push
jecxz
inc
push
sahf
mov
push
dec
inc
pop
cmp
jecxz
addr16
push
or
mov
out
xlat
sbb
xchg
inc
pushf
jbe
fwait
mov
inc
jo
loop
pop
test
mov
mov
in
cmc
cmp
cs
lahf
sahf
inc
jne
bound
push
or
mov
xor
xchg
data16
xor
push
sub
inc
lock
aam
xchg
imul
pop
dec
sahf
inc
sub
or
push
mov
cvtdq2ps
cmc
and
xor
or
sahf
jne
xlat
adc
push
std
in
push
jno
or
lahf
sub
sub
ja
xlat
or
sub
push
fs
add
cmp
stc
sbb
xor
loope
fisttpll
dec
daa
mov
inc
rorl
jae
std
rcrb
lret
pop
pop
pop
mov
dec
add
add
std
out
cli
jns
inc
in
jecxz
inc
adc
fs
xlat
pop
lds
push
rol
push
pop
jo
or
loop
ss
outsl
or
adc
rclb
sbb
enter
sbb
jbe
xchg
dec
repz
data16
lahf
and
mov
mov
cmc
lret
xchg
pop
xchg
cmp
sbb
push
push
out
jle
and
xor
mov
test
jo
aas
daa
inc
push
add
xor
fildl
movsl
inc
mov
cmc
adc
and
clc
push
lret
decl
lcall
jne
enter
ficomps
mov
xchg
rep
in
mov
les
push
fidivl
nop
xor
test
cmpsl
dec
push
push
mov
push
jb
or
lock
xchg
outsb
clc
repnz
xchg
add
pop
int3
add
add
lcall
sbb
mov
jo
dec
jae
mov
out
shll
popf
xor
pop
rorb
rcrb
lret
jnp
out
xor
js
dec
out
andb
fldenv
adc
and
repnz
sub
in
adc
idivb
or
nop
mov
ffree
inc
lds
lea
pop
fisubrs
xor
jns
inc
dec
pop
add
cmc
pusha
es
cmp
daa
sti
push
scas
sbb
sbb
xor
es
es
scas
adc
ficomps
iret
addr16
dec
mov
in
xor
sbbl
loopne
test
stos
fiaddl
dec
in
test
leave
popf
fs
in
lcall
mov
mov
ret
jno
mov
ret
bound
jmp
imul
ficoml
pop
cmp
adc
out
cmp
cs
sub
sarl
adc
xlat
aad
dec
fnstsw
aam
gs
jno
pop
adc
movsl
sbb
notb
lret
fiaddl
enter
lock
push
or
fbld
push
sub
cltd
fidivrl
rolb
in
mov
mov
or
mov
bound
add
or
push
repnz
push
fsubs
lahf
inc
scas
jb
or
ss
popf
mov
mul
out
sub
jns
mov
mov
adc
int3
sub
pop
aad
inc
repz
mov
push
mov
cli
scas
sbb
sbbl
loope
mov
xchg
clc
fsubrs
enter
bnd
xor
mov
int
lret
aaa
lds
ja
jns
les
xchg
enter
ret
or
clc
xchg
imull
push
pop
mov
les
ja
test
sahf
jp
adc
pop
shrb
pusha
and
inc
mov
push
fstpt
and
insl
sub
jecxz
loopne
movsb
lcall
enter
push
daa
leave
leave
pop
adcb
notl
lahf
lods
gs
mov
sbbb
ljmp
test
mov
int
mov
jns
mov
iret
mov
dec
scas
push
inc
fisubrs
mov
add
xor
lods
sbb
or
inc
dec
in
mov
and
and
xlat
xor
hlt
into
shrb
pushf
cld
imul
adc
sub
pop
in
lahf
and
pop
cmp
sbb
push
pop
mov
lret
and
cwtl
faddl
push
cmp
pop
jmp
jmp
flds
mov
adc
test
and
lret
mov
xchg
jns
jne
fimuls
mov
outsb
icebp
jmp
je
shl
repnz
adc
xchg
into
mov
aad
jg
or
imul
int
and
inc
dec
enter
cltd
lock
push
mov
xchg
imul
lds
or
pop
shll
xchg
add
test
pusha
lods
jno
push
cmp
bswap
mov
cmpsb
pop
cmpsb
mov
dec
mov
pusha
pop
pop
xor
and
push
jns
mov
cmp
scas
mov
ret
jg
mov
sbb
dec
xchg
mov
xor
rorl
pop
mov
mov
test
pop
fistps
jnp
js
mov
into
sub
mov
addb
lods
mov
jle
in
testb
or
shlb
fsubl
dec
cmp
jmp
mov
push
sbb
je
add
or
sub
stos
and
add
push
xor
cld
es
jae
popa
stos
adc
mov
repnz
push
shll
aad
popf
cmc
pop
inc
insb
mov
inc
fstpl
mov
xor
sbb
and
cli
idivb
cbtw
sub
out
inc
repnz
jnp
pop
push
mov
sub
mov
fdivl
add
leave
leave
out
js
mov
bound
fsubl
mov
pop
or
daa
shrl
dec
dec
xor
pop
jne
fwait
xor
lock
pop
sub
cs
xchg
pushf
out
pushf
mov
iret
lahf
out
std
jae
scas
dec
mov
call
cmc
cli
inc
inc
fchs
arpl
mov
inc
xlat
scas
mov
jb
bound
xchg
repnz
or
or
cmp
cmp
and
ret
lock
fsubl
int
pop
or
dec
or
hlt
adc
push
cli
in
sti
repz
push
fcomps
lock
and
aad
les
pop
fwait
jae
sbb
sbb
nop
dec
push
decb
repnz
xlat
divb
sub
out
divb
cmp
jnp
jge
insl
inc
nop
add
adc
imul
jo
push
cmp
dec
ret
ss
xchg
mov
xor
mov
xor
scas
mov
lock
sub
lods
and
out
loop
sub
jmp
inc
sbb
inc
subl
sbb
in
scas
subb
xchg
xchg
xlat
fists
push
mov
dec
dec
cmp
popf
xor
dec
push
repz
jp
cmpsb
std
jp
jg
pop
mov
or
pop
out
shl
loope
and
mov
movsl
or
pop
mov
jb
add
xchg
mov
imul
sahf
lds
lock
int
ja
data16
jb
sub
sub
pop
push
add
dec
aad
cld
dec
dec
ja
jg
testl
dec
ds
clc
int
push
add
fiaddl
pop
loopne
iret
pop
data16
sbb
and
add
sbb
or
xchg
or
rclb
cmp
and
jp
shr
add
movsl
xchg
jmp
and
loope
outsb
mov
mov
sti
push
jle
dec
fwait
inc
bnd
leave
popf
call
ss
aas
fs
ja
sbb
pop
sub
loopne
mov
imul
rolb
mov
roll
add
ficoml
xor
add
jbe
addr16
into
shl
pop
lds
or
jecxz
pop
mov
pusha
daa
adc
mov
or
rcrb
xor
jno
inc
adc
cmp
adc
sti
mov
mov
sub
jp
xorb
or
cs
int
and
rorb
sub
scas
mov
lahf
adc
filds
xlat
mov
out
add
push
mov
xchg
mov
push
nop
and
push
jo
mov
pavgb
dec
pop
sbb
mov
daa
insb
dec
cmp
ret
and
cltd
std
cmp
jecxz
jnp
xor
clc
dec
test
jns
lea
popf
push
jge
scas
scas
fwait
jbe
push
or
cmpsl
pop
fisttpl
mov
negl
pop
push
rcll
int
loopne
adc
dec
les
cmp
test
jne
call
cli
pop
sarl
fmuls
jns
insl
cmpsb
and
xchg
loop
add
sbb
cld
inc
and
adc
mov
mulb
mov
loop
add
and
sub
sub
subb
jbe
jle
or
xchg
mov
sbb
je
orb
pop
bound
loop
pop
arpl
loope
mov
nop
and
add
aam
cmpsl
and
dec
sub
cmpsb
jo
repnz
adc
push
pusha
jae
imul
add
clc
or
mov
cmp
ret
loope
int3
test
mov
call
or
stos
pop
lea
mov
cmpsb
pop
sub
cltd
int
mov
mov
pushf
sahf
lahf
cmp
lea
loopne
mov
add
flds
add
repz
scas
repz
sbb
shrb
imul
xchg
mov
push
movsl
and
or
iret
fisubs
jge
daa
lret
fcompl
mov
stos
adcl
je
xor
mov
mov
and
outsb
and
jge
into
xor
push
mov
add
lahf
dec
leave
mov
addl
repnz
push
jmp
in
addr16
insl
mov
idiv
lds
xchg
and
imul
sbb
push
ficompl
subb
sub
jae
mov
mov
int
sahf
je
pop
and
fidivl
or
push
in
ret
add
test
js
fsubrs
cmc
push
rcrb
xchg
out
push
icebp
in
push
in
outsb
xor
ds
decb
fsts
xchg
cltd
jmp
xchg
lock
add
fldcw
stc
jle
fiadds
add
repz
and
ss
cwtl
push
imul
jg
testl
mov
aam
push
les
lret
adc
fiadds
es
lcall
jle
jae
repz
iret
pop
or
push
and
mov
xchg
or
aaa
test
inc
int
test
mov
aad
daa
sbbb
sti
cmpsl
pusha
clc
rorb
sub
out
fisubs
mov
div
jno
mov
pop
pop
sub
adc
mov
scas
cs
gs
push
sbb
bound
and
data16
jge
push
imul
sbb
mov
in
inc
invd
sbb
sub
inc
xchg
cmp
lahf
mov
xorl
test
and
std
es
fldz
or
or
ja
push
cmp
aaa
insl
hlt
xchg
stc
jle
data16
ss
lahf
pop
out
adc
das
cmp
xchg
imul
test
js
mov
in
mov
mov
dec
push
xchg
fcoms
jle
inc
addr16
aaa
clc
cld
pop
add
cmpsb
mov
cs
lret
pop
mov
sub
jmp
cmp
cmpsb
xorb
jmp
mov
push
enter
jne
lods
mov
out
and
pushf
test
jne
cmp
xor
pop
pop
or
lods
aaa
lcall
test
in
mov
cmp
test
aad
add
lcall
fidivs
mov
testb
mov
add
gs
cmp
outsb
sarb
fs
test
cmp
dec
jno
lea
inc
pop
lahf
sub
xlat
enter
insb
inc
lahf
adc
cwtl
mov
ljmp
mov
add
scas
popl
push
push
xchg
adc
xchg
and
or
inc
dec
xlat
sub
sbb
sbb
insb
sub
jb
xchg
or
test
iret
jb
push
popa
mov
repnz
mov
mov
jno
cli
ja
lea
out
test
cmpl
loopne
aam
lahf
pop
sti
imul
scas
inc
adc
add
mov
xchg
fldenv
lret
or
shll
cmp
inc
jp
sbb
je
cwtl
ds
jo
push
pop
pop
push
and
sbb
popf
stos
in
in
jmp
pop
imul
add
std
push
and
fs
call
push
cmpsb
xor
test
and
fs
stos
rorl
ds
pop
lods
addl
or
and
and
inc
fwait
mov
adc
jecxz
andl
filds
mov
and
add
inc
in
mov
or
in
sar
out
and
mov
jbe
pushf
mov
mov
cmpb
je
sbb
xor
mov
lahf
dec
mov
xchg
jmp
ss
or
bound
push
aam
push
pop
rclb
les
cs
cmpl
mov
das
adc
mov
mov
lods
xchg
lret
ljmp
enter
mov
push
mov
cmc
jne
test
push
into
xor
jmp
out
push
inc
movl
and
sub
xlat
jmp
cs
xchg
cmp
adc
pop
popf
jle
dec
ds
lcall
arpl
push
adcb
sub
or
pop
inc
sbb
out
test
movsl
in
dec
stc
loope
sbb
add
add
imul
and
psubb
ret
out
in
jb
stc
in
aad
jmp
and
jne
xchg
call
fsub
xor
sub
test
mov
lds
xchg
out
dec
es
test
insl
out
ja
adc
in
cld
in
adc
jbe
iret
int
pop
xchg
das
daa
xor
cmpsb
mov
mov
mov
pop
sub
jno
pop
loopne
inc
xlat
sub
mov
jno
rorl
xor
add
test
pusha
adc
out
add
loopne
sub
mov
and
and
sub
loop
or
or
test
xchg
add
xor
out
fnstsw
dec
lods
pushf
sub
loope
push
push
pop
jne
inc
lock
sub
mov
iret
cli
xchg
sbb
dec
xor
fnsave
or
stc
sub
jecxz
jmp
cld
fistl
addl
sub
test
roll
mov
or
das
and
inc
insb
leave
pop
dec
jns
jmp
jne
dec
push
and
push
int
les
xchg
stc
inc
jle
ret
mov
add
sub
mov
mov
or
pop
or
or
adc
rcl
mov
push
fucomi
push
inc
lods
nop
out
and
jno
push
fimull
in
arpl
mov
arpl
fwait
mov
sub
mov
xor
test
jle
inc
dec
or
pop
and
aaa
bound
test
adc
sub
mov
lret
mov
push
lea
loope
int3
hlt
or
mov
jns
add
cmp
leave
jle
dec
cmp
subb
mov
pusha
in
mov
fadds
or
mov
adc
sarb
lret
in
add
aam
cs
fbstp
aam
movsb
jb
xor
mov
shlb
test
in
icebp
imul
add
or
sti
push
inc
dec
cmp
clc
or
push
push
mov
aas
add
gs
sti
lahf
xor
hlt
xlat
roll
pop
bound
rolb
cltd
mov
add
push
hlt
and
das
clc
in
mov
cmp
fldl2t
test
das
movsl
push
dec
mov
jno
shll
xchg
sub
cmc
dec
fs
pop
pop
fwait
xchg
or
into
addb
imul
mov
xchg
mov
ret
popf
sbb
jae
std
and
iret
icebp
xor
sbb
test
lahf
stc
into
ret
push
loopne
sub
push
rcrl
push
mov
loop
ds
inc
hlt
sub
psubsb
jp
xchg
mov
inc
icebp
jno
inc
imul
xor
pop
pop
into
mov
stc
cmp
or
push
int3
arpl
addr16
cwtl
push
out
sbb
push
pop
mov
js
pushf
mov
xchg
xchg
pop
stos
pop
cmpsb
and
cmp
sbb
mov
and
mov
fcompl
aam
xor
cli
loopne
xlat
inc
dec
add
add
push
mov
mov
fldl
jne
scas
sub
mov
adc
stc
xchg
inc
lods
pop
mov
add
pushf
jae
sub
or
inc
sbb
loope
jns
jge
xchg
pop
sbb
dec
xchg
sub
mov
add
into
xor
ss
or
mov
add
mov
aaa
pop
cmp
add
cmovae
mov
data16
addl
push
lahf
inc
push
and
sbb
pop
mov
pop
sti
push
cmpsl
loopne
scas
popf
adc
mov
or
popf
cmp
cs
xchg
sbb
lods
pop
ja
dec
adc
aas
push
push
movsl
adc
jl
push
jge
lds
mov
stos
mov
jbe
popf
push
mov
loope
in
pusha
jbe
std
mov
lock
aam
loope
stos
sub
mov
cld
ret
loop
stos
inc
jle
loope
notl
xchg
lret
test
daa
mov
push
lds
push
imul
dec
or
add
xchg
gs
push
xor
jnp
rclb
mov
push
and
outsl
pop
decb
add
shlb
shll
add
hlt
mov
les
lea
mov
in
sahf
mov
sbb
mov
xchg
mov
or
mov
dec
sub
mov
lock
xor
mov
push
in
out
loop
sub
dec
jecxz
out
or
popf
movsb
mov
and
adc
xchg
sbb
dec
jecxz
mov
roll
pushf
sar
repz
xchg
xchg
cs
and
cmp
or
rclb
mov
fsubl
stos
pop
mov
jbe
out
popf
mov
push
addps
sub
mov
loope
and
add
test
dec
scas
clc
cld
inc
aas
insb
sbb
nop
test
bound
xchg
fsubrs
or
ret
jp
cli
pushf
rorl
mov
mov
pushf
les
mov
nop
ret
cmp
jle
mov
cmc
or
mov
dec
push
ljmp
dec
add
rcrb
insl
jge
outsl
xchg
mov
cmp
rcrl
jg
mov
test
mov
aam
ljmp
sub
aaa
imul
int
imul
jnp
adc
repnz
in
adc
fldcw
jno
mov
inc
or
xor
jo
xchg
add
ss
mov
jl
dec
outsl
icebp
mov
push
lcall
cmpsl
pop
mov
addr16
mov
pop
cs
test
xor
icebp
mov
adc
nop
and
sbb
lock
cmp
xchg
lods
dec
lea
mov
pop
cwtl
aad
mov
inc
mov
sub
dec
sbb
push
lret
addr16
enter
pop
cmc
pop
aam
fbstp
jle
lds
xchg
loop
pop
pushf
cmp
ja
mov
lock
and
mov
mov
sbb
mov
sbb
out
test
sub
jecxz
test
sub
xchg
popf
mov
hlt
pop
push
jae
cmp
push
enter
jge
in
ljmp
dec
repz
popa
daa
imul
insl
xchg
mov
sbb
pop
xchg
fsubrl
mov
jg
jns
jmp
push
adc
cmp
xor
xor
pop
inc
sub
xchg
cmp
or
stos
test
adc
mov
inc
in
clc
test
xchg
stos
mov
xor
out
mov
mov
addb
sbb
sbb
test
fmulp
pop
sbb
inc
adc
scas
fisubl
adc
outsb
mov
and
mov
cmp
sbbb
out
enter
xchg
test
cs
mov
dec
sub
pop
cli
cmp
pop
push
mov
pop
addr16
insb
cwtl
xchg
add
mov
pop
push
mov
inc
out
sub
jle
fisttps
xor
mov
xchg
mov
jb
mov
popa
out
fwait
movsb
imul
loopne
push
push
sbbl
popf
hlt
orl
or
loope
shll
or
sub
cmp
sbb
xor
dec
mov
push
insl
push
mov
cmp
jno
adc
mov
rol
cmc
or
or
in
je
arpl
jno
iret
outsb
adc
jo
sarb
lds
pop
insl
add
sbbb
andl
fimuls
insb
ja
adc
cli
push
dec
loop
push
subl
shr
loop
or
or
testl
pop
addr16
sbb
xchg
test
jns
sbb
cs
fs
sbb
mov
sub
loope
xchg
cmp
dec
mov
mov
leave
rolb
push
mov
pop
cmp
sbb
mov
push
in
push
xchg
out
popa
lahf
sbb
xchg
xor
inc
adc
or
mov
scas
sub
or
add
or
mov
and
movsb
aad
adc
push
movsl
or
ret
fcomip
or
sub
repnz
in
xor
and
fists
inc
or
xchg
push
ret
adc
xchg
xchg
outsb
push
cmp
xchg
jmp
push
rclb
push
push
test
shr
shlb
lods
movsb
push
data16
fistpll
ficoml
adc
repnz
aaa
mov
je
imul
push
mov
jae
dec
jae
mov
shlb
pusha
and
subl
xchg
xor
inc
mov
imul
cmp
loopne
in
jb
dec
cmpsl
mov
mov
rol
inc
leave
mov
push
mov
hlt
mov
jne
out
push
and
xor
nop
inc
lcall
movsl
divl
sbb
fsub
inc
out
mov
fisubl
sahf
lea
data16
mov
insb
mov
test
testl
fidivs
aad
data16
ret
dec
cmp
insl
push
pusha
inc
xor
stos
inc
lcall
xchg
ret
dec
pop
xchg
push
jge
push
imul
add
adc
push
imul
hlt
pop
repz
test
mov
xor
dec
orb
pop
cmp
shll
stc
cmp
xchg
jp
lea
pop
push
lahf
inc
leave
sbb
inc
and
out
jmp
sbb
das
lret
orl
cmp
fs
ss
cmp
in
mov
push
shll
cli
fisubl
hlt
loop
testl
stos
pop
xchg
xchg
push
cmpsb
mov
leave
pushf
dec
or
adc
adc
jo
int3
fidivl
cli
je
movzwl
fsubr
popa
mov
ret
fcmove
faddl
mov
sub
inc
aaa
and
gs
mov
adc
sbbb
roll
cli
xchg
aad
int
xchg
pop
jne
cwtl
push
mov
pusha
lea
movb
lea
pop
lcall
enter
mov
mov
dec
iret
xorl
inc
add
xor
dec
cmpb
repz
sbb
dec
mov
fsubrs
xor
inc
lret
aas
bound
xor
mov
push
fcomps
pop
idiv
jb
int3
dec
mov
imul
cmp
loop
push
pop
scas
popa
jbe
inc
dec
add
daa
xchg
pop
sub
push
or
pop
imull
inc
adc
or
out
loop
add
sbb
andl
aas
pop
fldenv
mov
shlb
mov
jecxz
test
xor
cld
fcompl
lods
out
lea
or
je
or
push
pusha
add
std
jge
in
int
sbb
sbb
push
jl
dec
sarl
jmp
repz
mov
ja
jle
xchg
jnp
push
mov
adc
imul
or
xchg
mov
dec
sti
inc
insl
and
jne
jg
cmp
mov
sbb
test
negl
xchg
inc
fs
test
fimuls
push
add
or
rorl
movsb
fwait
cmp
push
or
mov
or
push
mov
cltd
or
cmp
push
mov
mov
inc
movsb
adc
adc
cltd
data16
mov
mov
fisubl
xlat
lock
nop
out
sbb
add
test
xor
jo
aam
das
cld
daa
mov
xchg
sub
jnp
or
and
std
mov
movsb
mov
sbb
xlat
mov
and
mov
mov
push
adc
adc
push
jge
inc
mov
hlt
mov
std
arpl
add
test
inc
fwait
sbb
mov
push
pop
inc
push
jb
mov
bnd
gs
dec
mov
bound
in
mov
hlt
popf
mov
ret
aad
orb
push
push
sub
incl
push
loopne
clc
dec
std
int
loope
jecxz
inc
or
mov
das
sti
mov
out
test
shlb
sbb
jnp
mov
lea
pushf
sbb
inc
shrb
inc
dec
mov
addb
sbb
pop
lods
out
scas
and
fs
ljmp
das
pop
test
lock
jle
or
push
cmpsb
movsl
das
jnp
nop
pop
dec
mov
insl
fucomp
add
mov
add
daa
xlat
mov
or
in
add
xor
or
sub
mov
adcb
stos
add
adc
cwtl
sbb
mov
xchg
pop
push
sub
fld
jg
mov
or
in
mov
scas
imul
lods
cmpsb
add
frstor
inc
cld
and
xchg
or
cltd
mov
jb
movsb
shlb
outsl
and
lea
or
cmpsb
inc
or
mov
in
xor
add
adc
xchg
cmc
movsl
shrl
adc
inc
out
hlt
out
jmp
sbb
negl
xchg
fimull
scas
fistpl
fcoms
adc
lahf
push
pop
push
outsl
mov
mov
lret
ret
addl
sub
push
mov
outsb
rcll
test
xlat
jecxz
dec
pop
stc
mov
filds
inc
ss
das
adc
add
and
out
add
or
lcall
gs
mov
mov
jo
in
sti
ret
cmp
daa
lret
pop
adc
dec
das
out
les
mov
ds
aad
imul
push
cmp
mov
jb
lcall
in
out
or
lds
nop
mov
xchg
or
movsb
mov
cmpsb
loope
inc
cmp
xor
es
cmpb
fisttpll
in
add
cmp
stc
jmp
cwtl
jb
jecxz
fsub
xor
cmpsl
icebp
sti
jle
mov
ret
mov
in
bnd
adc
xchg
sbb
mov
cmp
add
mov
adc
sub
adcl
add
in
push
mov
popf
inc
xor
test
cltd
mov
cs
push
xchg
xchg
scas
hlt
and
or
xchg
inc
into
aaa
jb
hlt
scas
pop
daa
cltd
popa
imul
mov
pop
adc
mov
loopne
test
mov
sub
fsubs
lock
xor
bound
xlat
mov
pop
outsl
add
sbb
and
test
popf
jecxz
push
mov
cmp
pop
stos
fisubrs
push
ret
inc
or
and
daa
dec
mov
cmp
or
add
rcll
inc
inc
in
aaa
mov
fmuls
xlat
jbe
lcall
mov
stos
das
ss
dec
lea
aaa
mov
lods
inc
sbb
je
lds
push
add
sbb
mov
movsl
and
xor
js
xchg
shlb
insl
lahf
inc
mov
adcl
cwtd
outsl
push
jno
iret
std
not
push
cmp
push
ficoms
cmp
jg
movsl
out
clc
iret
daa
or
das
jmp
addr16
inc
movsl
mov
lret
jbe
cli
lods
dec
push
arpl
mov
mov
push
push
jge
or
test
loop
pop
ja
sub
cmc
inc
jp
outsl
icebp
sbb
pushf
insb
sahf
or
pop
std
mov
push
add
mov
lret
daa
xchg
xchg
imul
sbb
loopne
mov
sbb
xor
popa
jb
dec
repnz
adc
sbb
scas
xadd
into
and
mov
push
and
xchg
and
call
shrb
or
sub
cmp
mov
ljmp
cs
inc
mov
adc
and
aas
jge
fnstcw
ss
je
pop
cmp
jne
cmp
movsl
ret
loope
xor
pop
sub
subl
pop
xchg
repnz
mov
js
mov
fs
mov
push
and
aaa
lcall
and
frstor
outsb
sbb
out
inc
mov
xchg
rcrl
sahf
and
jl
insl
and
ljmp
lahf
sbb
add
cmp
pop
sbb
out
shrl
inc
xor
scas
into
push
cwtl
jns
pop
xchg
fwait
mov
cmp
sarb
loop
sbb
cli
and
mov
incb
clc
stc
xor
cmp
in
repz
mov
lahf
add
sub
jle
fsubl
pop
movw
fimull
imul
mov
cs
leave
sbb
dec
mov
fisubl
gs
dec
push
test
jmp
push
lahf
in
faddl
stc
mov
bound
bound
cmp
and
push
or
push
mov
rcr
imul
lret
cmp
lcall
into
cmp
mov
push
loope
inc
imul
cmp
push
test
jle
in
ret
dec
add
sub
pop
aas
push
cmp
lret
lcall
stc
movsl
dec
lret
xor
or
ds
cmp
inc
mov
mov
mov
dec
pop
popf
dec
mov
js
add
in
outsb
imul
pop
inc
xchg
add
dec
lds
es
sbb
and
jne
push
push
scas
pop
enter
test
cmp
push
mov
out
insl
mov
ret
or
fwait
das
insl
or
xor
sbb
jo
pop
fistps
jb
or
inc
mov
pop
outsb
jge
stos
cwtl
gs
or
aas
out
pop
das
ss
add
mov
fbstp
js
jne
in
loopne
clc
out
popf
add
jnp
dec
sub
sub
fildll
mov
mov
imull
repz
or
cmp
popa
mov
xlat
xor
mov
sub
cwtl
je
pop
pop
cmp
mov
mov
dec
dec
fdivrl
dec
push
fdivl
mov
add
push
repz
or
push
sbb
push
sbb
jecxz
sub
insl
and
push
xor
inc
mov
cmpsb
xlat
push
push
sarl
aaa
or
rcrb
movsl
and
mov
imul
and
xchg
outsl
or
xor
jb
push
xchg
lret
outsb
aam
outsl
cmc
and
les
and
adc
push
adc
aam
jno
outsb
lds
fsubp
inc
mov
jmp
cld
lods
push
test
jnp
pop
and
dec
test
xor
cwtl
sub
push
cmp
stos
jno
ret
sbb
push
mov
aaa
jne
popf
add
jp
inc
sub
lods
aam
fldpi
repnz
in
push
imul
jle
aaa
add
push
and
pushl
xchg
adc
fs
cwtl
dec
xor
out
idivb
ret
inc
xchg
mov
mull
cwtl
jnp
jle
cs
sub
adc
mov
cmpsl
sbb
sbb
inc
mov
popa
in
int
fiadds
scas
mov
loopne,pn
sbb
outsb
inc
xchg
pushf
xor
popf
call
js
jno
add
jl
stos
pop
ret
or
lock
add
mov
xlat
add
lahf
imul
inc
mov
add
shl
jl
int3
mov
enter
fimull
xchg
js
cmp
adc
adc
jno
and
call
gs
rcrl
out
daa
mov
nop
jmp
pop
fs
adc
push
jae
xchg
jbe
popf
pop
and
cmp
xchg
or
mov
and
push
add
popf
lahf
jne
push
outsl
loop
mov
xchg
cmp
scas
fidivrl
test
mov
in
push
lcall
dec
cmp
lahf
lahf
cmpsb
lods
pop
aas
xchg
ret
outsl
loop
data16
mov
ds
add
leave
daa
xor
cmp
enter
mov
fistl
xchg
adc
out
mov
test
fisttpll
xchg
xchg
bound
data16
cmp
rcrb
stos
or
xor
jae
mov
dec
cmp
repnz
inc
loopne
enter
pop
xor
or
imul
in
push
xchg
dec
js
shll
add
aad
add
leave
xchg
pop
les
inc
xchg
sahf
fdivr
sub
mov
mov
xchg
pop
jb
movsl
or
orl
dec
mov
sbb
push
int3
sub
push
mov
mov
cmp
rcrb
sbb
add
repz
pop
xor
sbb
dec
inc
add
cmpl
sub
mov
lret
xchg
xor
cltd
cmp
jmp
out
adc
pop
push
cld
cmp
xchg
lods
cmp
xchg
or
and
sub
push
cld
pop
lock
add
stos
cmc
mov
or
dec
mov
fidivrl
jae
mov
add
popa
jnp
daa
cli
popa
sub
fdivr
insl
pop
cwtl
out
std
cmc
fcompl
aas
test
push
or
call
sub
mov
xchg
fisttps
inc
lahf
inc
adc
out
adc
lds
mov
mov
hlt
add
repnz
faddl
cmc
sbbb
loope
sbb
push
sbb
mov
xor
int
jp
dec
dec
fistpl
and
in
jns
xor
jno
hlt
pop
movsb
ror
mov
lahf
sub
sti
inc
ljmpw
ss
xchg
movsl
dec
sbb
dec
inc
jno
rcll
pop
aaa
cltd
xchg
cmp
pop
lea
int3
xchg
leave
and
rcll
mov
pop
cmpl
or
mov
inc
pop
lret
out
nop
clc
mov
enter
mov
push
xor
push
sti
mov
dec
ss
xlat
test
jne
add
addr16
sbb
sarl
aas
or
dec
and
push
js
insl
ds
inc
lahf
ret
sbb
sbb
mov
fisubrl
popa
mov
jae
mov
test
mov
imul
test
push
lds
fisubs
and
ja
scas
push
or
out
lea
jl
rcll
inc
fisubl
adc
ljmp
cltd
notb
mov
gs
stc
sti
iret
lret
sbb
imul
inc
push
push
xor
stc
adc
or
scas
mov
xchg
repz
ret
mov
shrl
and
mov
out
jg
aam
icebp
inc
stos
push
sub
xchg
and
int
push
scas
stos
loopne
mov
add
xchg
jnp
sbb
je
mov
jge
out
fdivs
jmp
adc
push
cmp
call
daa
into
xor
sbb
pop
call
sbb
push
cs
mov
jge
dec
and
fcmovbe
inc
psubd
jo
test
add
mov
xor
jmp
cmp
or
ss
sub
mov
cmp
pop
movsb
sbb
jecxz
cmp
arpl
sub
lret
sahf
or
lahf
dec
repnz
outsb
xor
loope
and
rolb
inc
pop
pop
push
aaa
lods
testl
xor
repz
bswap
xor
aas
xor
rcl
or
sbb
jg
sub
pop
mov
sub
enter
and
dec
mov
bound
enter
fcomp
loop
loopne
mov
push
inc
orb
loopne
in
outsl
and
jl
sahf
inc
icebp
repnz
push
mov
fisubl
inc
cmp
jne
sbb
inc
daa
insl
mov
push
insb
cwtl
xor
and
repnz
cltd
fisubrs
xchg
and
shrl
pushf
les
jo
sbb
jbe
jbe
cmpsb
sub
cmpsl
cmp
pop
mov
or
enter
sbb
int3
lods
fscale
mov
or
out
adc
out
es
imul
js,pt
and
sub
and
and
mov
mov
outsl
popf
divl
sub
bound
mov
push
xorb
out
cmp
into
pop
lods
fimull
inc
les
lds
cmpsb
pop
mov
aaa
pop
adc
push
mulb
xor
jecxz
jnp,pt
fldl
lret
mov
inc
data16
lds
sbb
incl
push
call
and
rolb
sub
movsb
xor
std
jno
inc
adc
inc
cld
add
mov
lahf
fildl
loope
lcall
cwtl
dec
sub
xchg
adc
movsl
cwtl
fidivl
mov
and
mov
sbb
fwait
xor
xor
xchg
movl
cmp
outsl
and
adc
push
sbb
push
stos
jb
mov
loop
int3
outsl
lods
lods
ljmp
fld
test
push
fwait
pop
lahf
fs
test
scas
int3
les
mov
pop
std
decl
into
or
push
mov
outsb
insl
clc
inc
or
cmpsb
xor
js
nop
into
mov
push
divb
shrl
mov
mov
cmpsb
test
fdivl
mov
dec
fwait
ret
aad
pusha
dec
daa
ficomps
mov
int3
in
js
outsl
push
rcrl
push
shr
and
repnz
movl
popa
cmp
fistpl
addr16
push
xchg
cmp
shlb
mov
add
adc
test
pop
and
ss
pushf
mov
or
lea
push
push
sbb
fcoml
test
insb
sbb
aaa
mov
adc
mull
inc
aad
les
push
divb
dec
outsb
pop
mov
add
push
pop
mov
xchg
or
lret
mov
popf
inc
lahf
pop
xchg
je
cwtl
cmp
xor
sbb
rclb
push
xchg
mov
mov
fcomi
inc
mov
dec
repz
loopne
pop
aas
int
dec
aam
jge
inc
enter
lds
dec
mov
xchg
shl
add
clc
sub
jl
loope
xor
in
in
pop
xchg
sub
iret
or
addr16
jae
sbb
cli
sbb
pusha
popa
cwtl
lock
int
and
dec
imul
sbb
cli
xor
lret
loop
dec
and
fwait
js
mov
xchg
nop
movsl
push
test
leave
pop
stos
test
push
in
add
add
xchg
pop
xchg
cli
outsb
pushf
xor
int
dec
jle
jns
enter
cmp
cmp
ror
mov
xor
ljmp
inc
xchg
divb
or
cmp
inc
adc
lret
push
mov
xlat
ret
sbb
fmull
lret
insl
mov
outsb
adc
ret
xchg
in
inc
cmc
mov
sti
out
inc
iret
mov
ljmp
push
stc
sub
rolb
sbb
dec
sub
imull
push
out
jnp
push
pop
sub
out
jae
gs
inc
mov
dec
out
push
pop
dec
xchg
xor
out
insb
jb
cmpsl
arpl
push
fldcw
lret
pop
pop
icebp
out
cmp
dec
mov
dec
mov
imul
xchg
xchg
das
repnz
lea
xchg
or
push
dec
lods
mov
xchg
jecxz
fcmovnb
stos
andb
in
jae
dec
imul
hlt
in
ret
mov
shrl
stc
add
push
ret
stc
push
sbb
into
cmp
mov
aam
out
movsl
in
sbb
and
mov
lret
int3
xchg
es
popf
pop
adc
xor
xchg
andl
lcall
cld
mov
mov
leave
in
jl
add
and
movsb
divl
push
jno
dec
add
jg
fstpl
mov
adcl
enter
sub
andl
imul
pop
insl
scas
popa
es
sbb
cmp
sub
imul
xlat
imul
rorb
push
lahf
loope
adc
sub
pop
out
ficompl
loop
xchg
add
xchg
dec
jb
mov
into
popf
fld
or
fbstp
mov
mov
xchg
push
outsb
mov
std
out
xlat
mov
stos
dec
push
xor
jo
imul
shlb
pop
mov
mov
loop
and
imul
lea
mov
jae
xor
pop
in
dec
sbb
inc
xor
iret
sbb
jp
clc
mov
shlb
adc
inc
repz
lock
movl
out
and
bound
mov
ret
loop
mov
jle
push
repnz
push
sbb
pusha
pop
push
and
imul
outsb
mov
ljmp
push
imul
test
into
push
dec
out
mov
pop
dec
mov
xchg
or
fadd
xchg
ja
jl
or
or
scas
daa
lea
ss
in
jnp
adc
call
into
jl
xchg
adcl
mov
bound
arpl
testb
mov
mov
mov
inc
dec
hlt
and
xor
and
negl
jno
sbb
sbbl
lret
adc
inc
pop
aad
movsb
push
mov
add
mov
inc
leave
mov
lea
cltd
lods
arpl
jb
lahf
cmp
stc
xchg
lods
dec
jnp
fstpl
push
pop
pushf
xlat
sub
popf
lods
or
inc
jmp
ss
dec
dec
and
cmc
push
inc
pop
add
xchg
mov
cmp
mov
xchg
add
xor
push
data16
cli
add
jne
inc
das
pop
or
or
push
jle
mov
push
fdivl
testb
mov
cmpsl
jmp
rorb
loopne
in
sub
ret
pop
int
ret
mov
sub
movsl
or
dec
arpl
out
mov
dec
daa
sbb
mov
or
fmul
mov
push
inc
sub
xor
lcall
sub
fbld
mov
xor
xchg
nop
rol
and
lcall
mov
cltd
movsl
scas
add
ret
movsb
or
inc
dec
lds
dec
jnp
inc
sub
dec
daa
dec
in
xor
inc
pushf
cld
into
jmp
icebp
xchg
js
mov
xchg
popf
mov
cmp
and
ret
pop
test
stos
xchg
aas
fsubrl
jle
stos
jns
js
adc
repnz
xchg
dec
xlat
scas
adc
bswap
and
and
mulb
je
cmp
push
mov
cli
sub
xchg
mov
xchg
add
in
outsb
jae
leave
sub
xchg
cmp
jbe
mov
nop
add
in
push
add
out
jno
inc
insl
xchg
xchg
shlb
inc
mov
push
xchg
xlat
jbe
imul
jl
nop
stos
testb
sahf
jg
das
lock
cwtl
xor
jl
sbb
mov
out
jp
sbb
mov
push
enter
jne
mov
jg
mov
call
fs
mov
cli
ja
inc
sub
gs
shrl
stos
xchg
xchg
dec
sub
or
repz
divl
push
jne
sub
loop
cmpsb
and
addr16
mov
loope
repnz
mov
rcrb
cmpl
and
sub
leave
or
pop
inc
mov
inc
pop
push
adc
cmc
cltd
mov
lods
dec
add
hlt
rcl
popa
pop
adc
xchg
jecxz
fwait
aad
shll
scas
push
and
sub
push
xor
jnp
jbe
dec
out
mov
in
or
iret
push
sub
push
xor
push
sbb
aam
add
out
jae
sub
jo
and
inc
sbb
repz
mov
push
jmp
shl
mov
bound
loop
adc
fs
enter
data16
dec
fsts
or
sbb
add
and
add
and
cmp
idivb
movsl
out
imul
leave
not
in
jne
ds
mov
ret
mov
cmp
icebp
daa
mov
in
push
bswap
aas
jns
xor
dec
and
jne
addr16
jle
stos
push
xor
imul
in
in
add
xchg
and
mov
call
gs
mov
dec
cmp
jo
lret
jg
sbb
loopne
out
loop
repnz
and
push
hlt
imul
ror
add
fstpt
pop
sub
das
cmpsb
stos
movsb
jnp
jo
and
sub
mov
mov
inc
lods
sub
pop
pop
add
push
ror
sub
or
xor
pop
jo
cmp
lods
jecxz
add
sub
bound
je
incl
xor
pop
push
cmp
cs
mov
jecxz
test
bound
bnd
or
dec
cmpb
pusha
cmp
fld
sbb
sbb
xchg
fistpll
dec
dec
out
addl
mov
scas
xchg
mov
jae
sub
out
into
out
and
cli
std
inc
gs
add
push
jecxz
dec
cmp
stc
xchg
mov
bound
fldenv
ficompl
push
mov
push
std
in
int3
ja
bound
cmc
jns
rcr
xchg
fisttpll
mov
dec
imul
sbb
mov
loope
aad
sbb
scas
inc
fnstsw
mov
pop
scas
enter
pop
nop
out
mov
shlb
cld
cmp
jnp
int3
lahf
lock
cld
jnp
mov
cltd
xor
outsl
or
test
ficomps
sti
es
inc
iret
iret
lods
cmp
xor
adc
in
or
cld
pop
mov
sbb
jno
mov
in
scas
xchg
and
cld
sarb
or
lds
fisttpll
sub
mov
stos
repz
movl
aam
arpl
addr16
pop
jmp
mov
idivl
mov
aaa
in
jo
push
pusha
xchg
ljmp
xchg
jl
dec
xor
pushf
sbb
dec
iret
and
jo
push
xor
dec
xchg
mov
mov
test
mov
out
dec
ret
pop
or
daa
sbb
fidivl
inc
xchg
je
mov
mov
adc
mov
pushf
inc
jp
mov
lcall
cmpsb
add
iret
popa
xor
cmp
es
leave
insl
sub
push
hlt
cmc
pop
xchg
cmpb
fwait
rep
xchg
and
mov
adc
cs
rcrl
lds
mov
mov
xlat
add
call
cmp
cmp
push
push
loopne
push
sub
jmp
jmp
into
popf
loopne
jb
fimuls
rcrb
arpl
lahf
dec
jmp
add
adc
int
pushf
adc
pop
leave
mov
icebp
arpl
mov
mov
mov
and
jbe
push
pop
xchg
push
insb
dec
fcmovbe
repnz
pop
push
into
and
lods
mov
and
iret
arpl
jmp
cli
inc
enter
push
out
xchg
xor
inc
aad
into
les
xchg
loopne
fdivl
mov
mov
fcmovnbe
xor
or
aam
scas
pusha
aam
pop
pusha
jnp
dec
outsb
pusha
push
lods
sub
or
fmull
ss
insl
dec
test
test
stos
imul
leave
loope
std
js
lods
sub
aas
js
mov
imul
pop
movsb
movsb
pop
ret
dec
sub
cmp
pop
or
jae
out
imul
add
clc
jp
shlb
dec
mull
adc
dec
xor
mov
push
pushf
add
cmp
adc
mov
xlat
jecxz
ja
or
mov
mov
jns
xchg
mov
push
inc
leave
imul
add
stos
push
xchg
adc
dec
pop
cwtl
mov
clc
popa
insb
mov
sub
sti
lret
pushf
pop
arpl
test
inc
lahf
arpl
jae
iret
mov
cli
dec
lret
adc
nop
out
rol
cmpsb
xor
inc
and
stos
pusha
jecxz
dec
into
bound
test
enter
lds
jns
fldl
call
cli
xchg
mov
mov
in
in
out
lea
lea
stos
mov
xchg
shll
add
mov
mov
ss
out
out
sub
and
pop
mov
ljmp
daa
mov
mov
mov
add
in
cmp
xchg
push
jg
mov
mov
inc
push
ss
call
imul
scas
loopne
sub
dec
pop
sub
out
xchg
fldl
mov
inc
outsl
and
add
mov
inc
ljmp
xlat
push
sti
jp
in
and
pushf
cli
ss
cmp
scas
inc
and
popa
stos
fnstcw
dec
adc
mov
or
xor
dec
std
cmpb
jns
mov
dec
xor
or
fs
orl
add
fdivs
sub
rcr
out
test
jecxz
andb
and
mov
jl
ja
pop
sarl
and
stos
sub
push
fimuls
int
leave
aas
mov
cmp
sti
mov
arpl
jle
or
mov
movsb
or
adc
push
scas
aas
movsb
push
stos
mov
push
in
aaa
fs
mov
data16
dec
mov
lods
adc
test
dec
addr16
out
push
fsubs
ljmp
jae
sub
icebp
and
adc
xchg
idivb
leave
sti
dec
repz
sub
dec
iret
ja
out
dec
stc
js
in
cwtl
mov
add
mov
cwtl
data16
add
add
aas
xchg
mov
jns
cmpl
or
stc
mov
or
mov
xchg
xchg
jno
xchg
icebp
andl
lods
mov
add
imull
xor
inc
fsubs
add
push
cmpsb
ljmp
hlt
inc
mov
mov
out
ss
pushf
mov
out
rep
mov
dec
daa
lret
pop
ja
fs
push
lds
dec
std
lret
and
jbe
lea
mov
mov
lret
ds
pop
pop
push
adc
xchg
mov
sub
jp
sbb
push
push
push
push
mov
stos
in
add
pop
mov
test
dec
push
push
inc
mov
int3
mov
mov
out
dec
mov
mov
lret
loope
pop
jp
rcrb
popl
into
xor
sub
mov
inc
or
xchg
rorb
fdivs
scas
adc
test
dec
jge
nop
fimull
ds
addr16
scas
test
ljmp
inc
add
inc
sbb
cwtl
aad
jno
and
mov
push
pop
xor
xchg
fstps
aaa
pop
fstpl
out
pushf
pop
dec
int
add
adc
mov
pop
inc
clc
and
frstor
xchg
rcrb
stos
pusha
xchg
jne
jo
mov
mov
jecxz
xor
cmpsl
cmp
lock
push
insb
stc
dec
lahf
or
pop
and
sbb
aaa
inc
cmp
ret
mov
test
dec
pop
pop
stc
stc
mov
adc
daa
aam
gs
pop
int
push
inc
jmp
sti
mov
repz
out
inc
aad
add
jl
stos
shll
inc
dec
rcrl
push
add
lea
out
ljmp
xor
rcrb
inc
pop
pop
fwait
loop
jno
jl
cmpsb
loopne
idivb
jno
mov
arpl
adc
out
cmp
sub
repnz
sbb
xchg
shr
dec
push
fs
jecxz
xchg
cmp
mov
shl
jno
iret
fbstp
sub
xor
push
add
into
iret
dec
sbb
cld
leave
cltd
push
push
addr16
in
xchg
outsl
aad
enter
shrl
dec
pushf
mov
stc
popf
in
mov
aas
int
cltd
push
popa
out
xlat
gs
push
outsl
stc
jae
or
xchg
loop
ja
cld
clc
mov
cmp
test
add
in
adc
or
ret
sahf
mov
lock
mov
push
mov
sbb
fidivs
fs
jle
popa
stos
push
xor
cwtl
adc
test
repz
lea
jl
xchg
fdivp
push
jmp
cli
push
shll
loop
sub
cmp
pop
aad
fdivs
mov
pop
push
push
loope
in
lahf
call
repz
push
and
icebp
insl
push
aas
dec
shlb
adc
mov
insl
xor
je
and
add
inc
fwait
push
into
adc
jg
ret
jns
loop
stos
insb
jg
jg
incl
pop
push
ror
push
roll
jbe
jl
dec
popf
cli
or
jno
jbe
stc
jp
sub
clc
stos
inc
sub
sub
clc
iret
in
repnz
pop
or
cmpb
push
mov
je
push
loopne
adc
add
shrl
fs
mov
hlt
aam
cmp
pop
fsts
inc
clc
mov
imul
popf
adc
stos
arpl
xor
push
lcall
push
clc
jbe
xor
into
dec
cmpsl
cmp
or
mov
cmp
scas
mov
cmc
mov
cmp
std
xchg
aaa
sbb
lret
pop
pop
das
xchg
or
adc
mov
xor
out
test
push
xor
dec
add
cmp
aas
lods
push
mov
mov
sbb
in
sub
dec
or
push
inc
shrb
stos
mov
stos
loope
addr16
mov
leave
mov
test
rclb
loopne
pusha
push
test
pop
subl
out
cmp
xor
dec
aam
enter
push
xchg
adc
xor
bnd
or
mov
mov
xor
push
arpl
add
cmp
push
mov
pop
pop
mov
out
fs
inc
pop
out
sbb
dec
ret
test
dec
fsubs
dec
sbb
sbb
cmp
jge
outsb
push
jae
movsl
mov
int
sti
push
hlt
out
mov
out
jp
mov
out
sub
sbb
fimull
cmp
stc
mov
les
push
mov
out
ret
divl
xchg
dec
cs
add
std
rolb
shrl
insl
scas
push
push
cmp
jo
adc
mov
iret
dec
js
inc
jle
adc
out
push
fistpll
lahf
popa
jns
clc
roll
out
pop
movsb
call
sbb
loopne
push
mov
imul
repz
add
mov
sbb
testb
xor
aaa
xchg
jns
xor
cmc
jbe
xorb
clc
test
test
pop
add
lcall
dec
insl
pop
mov
inc
ds
inc
lea
aad
cmpsl
xor
cmp
mov
dec
xor
xchg
pushf
xor
dec
pop
icebp
outsb
mov
stos
xchg
xor
aaa
nop
test
jg
mov
lods
mov
and
dec
out
jo
or
xor
sbb
lds
mov
sbb
nop
or
mov
shrl
sub
jle
pop
xchg
jne
pop
test
gs
dec
lcall
in
mov
push
out
scas
hlt
and
sub
inc
pop
call
repnz
aad
dec
lods
outsl
xchg
xrelease
ja
mov
aaa
int
xchg
push
mov
sbb
cmpsb
adc
ss
jae
sbb
sub
push
cmp
xor
test
test
add
xorl
dec
mov
scas
ss
jg
push
cmp
shll
cli
ficoml
lods
fimuls
mov
cmp
adc
rclb
mov
jl
mov
xchg
xchg
loopne
pop
popa
lods
movsb
xor
adc
push
movsb
icebp
mov
out
fldenv
jbe
inc
xchg
ficomps
push
stos
cltd
pop
xor
mov
aaa
aas
inc
popf
mov
sub
call
or
jne
popa
mov
cmp
outsl
sub
popf
insb
add
push
xchg
cmc
dec
pop
fiaddl
sub
aam
mov
out
fistps
xor
push
repnz
cs
fbld
jo
aam
jo
inc
xchg
lret
mov
xchg
dec
push
insb
jmp
cmp
add
aas
jb
xchg
jnp
dec
lret
scas
mov
xchg
bound
mov
aam
or
inc
push
pop
push
push
out
rorl
fsts
and
cmp
test
fdiv
pop
outsb
or
cs
adc
xlat
in
dec
mov
in
in
cltd
lods
or
roll
aas
adc
dec
std
mov
cmp
out
pop
fsubrs
lahf
sbb
sub
addl
stos
cmpsb
lret
push
inc
inc
loop
jl
ret
pminsw
loope
mov
fnsave
sbb
arpl
push
scas
fstpt
fdiv
and
push
mov
icebp
fstl
pop
lods
shrb
js
imul
push
sub
gs
mov
inc
adc
lods
jge
xchg
pop
mov
icebp
lea
fildll
cmp
imul
sbb
lock
mov
adc
sahf
cmpsb
mov
sbb
mov
inc
push
pop
ljmp
push
push
arpl
sti
jnp
lods
icebp
inc
xchg
pop
test
dec
xchg
push
pop
test
popa
test
cmpsb
int
int3
xchg
push
xchg
lods
mov
push
mov
es
push
xor
das
jl
add
std
cmp
call
lds
sub
dec
test
pop
push
outsl
sbb
das
jmp
mov
outsl
loope
insl
lds
cvtps2pi
dec
pop
mov
fucomip
daa
adc
mov
jae
mov
or
aad
lock
cmp
orb
popf
push
jmp
in
or
cs
int
or
call
xlat
cli
adc
xor
je
call
cltd
push
scas
xor
push
mov
fs
ljmp
stos
in
mov
insb
mov
addr16
mov
into
cmpsb
lcall
xor
push
pop
jns
mov
call
jp
jge
clc
mov
clc
mov
cmp
pop
dec
cwtl
pop
cmpl
test
rcrb
lahf
or
mov
mov
mov
shll
mov
imul
push
outsw
pushl
jl
movsl
imul
imul
hlt
mov
getsec
mov
cmpsb
je
jle
mov
lcall
lcall
pop
call
push
inc
std
in
leave
xchg
cwtl
bound
push
push
cmp
mov
cmp
icebp
cmpl
sbb
xor
add
mov
int
mov
cwtl
pushf
scas
out
outsl
mov
shrl
jge
addb
push
mov
stc
push
repnz
fs
loopne
dec
inc
xlat
fisubrl
mov
cli
imul
addr16
rclb
ja
stc
outsl
mov
adc
enter
pop
js
mov
popf
fcoml
jb
lods
mov
cmpb
jecxz
lret
popa
xchg
test
mov
sbb
loop
lods
inc
push
int3
insb
pop
push
add
lea
test
inc
movsl
cmpsb
jmp
and
cmpsb
into
stos
ret
xchg
pushf
pop
jns
xor
fsubrl
jecxz
xrelease
jns
cmpsl
aaa
sbb
cmpsb
mov
jmp
dec
cmp
pop
cmp
pop
std
push
cmpsl
push
mov
jmp
sbb
dec
inc
jbe
into
lahf
arpl
dec
sub
push
sbbb
and
add
push
or
out
shlb
dec
bound
test
lcall
xor
push
fs
push
shlb
pushf
sbb
adc
in
ss
out
fnstenv
aad
or
add
sbb
sub
nop
xchg
and
in
cltd
lahf
std
inc
insb
pop
xchg
jns
mov
and
je
mov
mov
cmp
nop
inc
pop
add
loopne
mov
inc
xor
call
push
scas
fstpl
push
mov
test
jnp
test
js
add
inc
setb
pop
sbb
daa
lea
jae
push
pop
mov
xor
mov
ds
mov
pop
js
lods
cmp
dec
rcll
aaa
imulb
paddsb
clc
push
sbb
ret
adc
psubb
jg
pop
xchg
mov
int
rorb
clc
fsub
cmp
cwtl
aaa
icebp
mov
pop
repnz
loopne
mov
and
pop
add
mov
xor
movsl
adc
out
in
fstpt
adc
sub
fwait
pop
insb
in
dec
inc
int
rcrb
sti
pop
idivb
sbb
xchg
aas
jmp
fistps
xchg
dec
in
jae
adcb
cmp
imull
pusha
aas
fsubs
sub
jae
push
dec
fists
dec
fimuls
lods
jnp
incb
push
lods
sub
xchg
jns
nop
das
sarl
into
fwait
mov
cli
repz
mov
jmp
ss
addl
or
mov
inc
adc
inc
fucom
mov
add
mov
dec
inc
out
ffree
push
xlat
in
add
mov
jmp
inc
adc
into
sarb
jl
int3
xchg
dec
cmpsb
das
jbe
fwait
repz
pop
xor
mov
in
pop
or
into
add
xor
pop
sbb
mov
ja
shlb
pop
int3
push
push
inc
inc
rorl
ds
rclb
add
jmp
imul
xchg
adc
mov
aad
int3
xor
sub
int
test
add
sarb
imul
lcall
mov
dec
adc
loop
mov
hlt
mov
mov
xchg
add
cmc
push
dec
jg
and
fimull
les
xchg
cmpsl
hlt
and
pop
mov
mov
adc
pusha
fs
sub
ja
adc
test
add
test
push
rcr
mov
xchg
xor
mov
add
lods
aam
push
inc
mov
mov
orb
mov
inc
lods
mov
mov
and
fiaddl
sbb
in
xor
lods
mov
ds
out
test
insb
push
push
push
and
dec
je
jl
inc
gs
out
add
push
rcll
and
cwtl
push
dec
inc
mov
movsl
pop
and
adc
fists
test
sarb
leave
push
dec
push
mov
add
adc
pop
enter
and
pop
cmp
test
cmp
subb
mov
mov
jmp
dec
ret
xor
sahf
lea
iret
xor
adc
aas
push
mov
test
shl
je
rcrb
adc
dec
adc
repnz
dec
and
cltd
cs
lret
mov
push
std
aas
aad
inc
aas
jae
jmp
cmc
mov
imul
cmpsl
inc
push
lret
dec
jge
decb
cwtl
jb
rorb
push
out
lea
sbb
dec
mov
sub
adc
mov
mov
push
or
popa
pop
fstpl
push
push
pushf
jbe
in
push
rcrb
add
or
inc
popf
test
inc
scas
mov
or
es
cmpsb
stc
aam
loope
arpl
addr16
cs
push
sub
outsb
jns
popf
push
loope
xchg
filds
jle
sub
add
or
add
mov
mov
dec
scas
push
bound
sub
das
aas
mov
hlt
push
cmpsl
cmp
mov
outsb
xor
jge
das
mov
test
jae
pop
arpl
cmpsl
es
push
int
ds
xor
jp
call
mov
jecxz
pop
cmp
pop
mov
cmp
rorl
xchg
rclb
add
pop
mov
cmc
sti
mov
std
ret
inc
std
nop
jmp
jae
fistpll
subb
into
jge
jmp
loopne
push
gs
adc
popf
flds
lret
rorl
gs
mov
and
or
add
jge
jns
adcb
mulb
sti
scas
inc
mov
lret
js
lea
stc
mov
pop
jnp
test
pop
cmpsl
bswap
out
out
cmp
hlt
cld
pop
sub
and
and
rol
das
sbb
push
mov
cmc
xor
addr16
insl
data16
insb
pop
pop
add
aaa
xor
adc
sbb
inc
out
loop
ja
cmp
popa
iret
and
or
mov
je
leave
cmp
pop
stos
aaa
jp
movsl
mov
jae
sbb
mov
in
ret
xor
cmpsl
lock
xchg
cmp
add
xor
fcomps
push
jo
sub
out
pop
cmpsl
mov
pop
mov
adcb
js
stos
mov
arpl
ret
jns
stos
or
jmp
push
push
int
int
cmpsl
jle
jae
cmp
mov
popf
lret
push
push
sub
mov
das
lock
xorb
lret
sub
xor
lret
push
out
das
test
sbb
movsb
jo
xchg
scas
sbb
pop
jecxz
std
lock
mov
or
sub
add
test
popf
dec
call
mov
inc
pop
inc
lea
sti
insb
or
fsts
jb
aam
fwait
lcall
mov
or
movsb
dec
fdivs
pop
gs
ja
jns
lds
dec
jge
mov
test
inc
mov
movsl
xchg
sub
xor
dec
mov
push
lahf
stc
add
loopne
add
sbb
sub
lock
mov
mov
mov
outsl
popa
icebp
ja
test
push
out
out
inc
iret
push
imul
mov
cmc
adc
inc
sbb
loop
dec
in
push
jge
mov
pop
test
adc
fcomps
out
pop
mov
or
adcl
or
fnsave
mov
dec
pop
sub
mov
mov
out
icebp
movsl
cmp
dec
cmpsl
xchg
mov
stc
in
jb
inc
cmp
pop
push
jge
mov
cmc
inc
scas
out
movsb
mov
push
inc
stc
test
mov
push
inc
into
jle
loopne
adc
fwait
insl
cmp
les
clc
mov
js
adc
addr16
mov
push
pop
adc
add
rcll
mov
xor
fnstcw
addb
fs
push
dec
das
push
sbbl
adc
iret
mov
pop
mov
push
xor
push
add
je
dec
sbb
int3
and
xor
sbb
dec
cmpb
int3
sub
out
loop
jl
xor
lods
add
jecxz
pop
cmpsb
repz
dec
jb
mov
pop
mov
and
pop
imul
insb
mov
mov
sbb
movlhps
mov
cld
push
and
scas
mov
mov
subl
or
dec
cs
vrsqrtss
xchg
xor
nop
mov
sub
sbb
fistpll
stos
test
add
mov
insl
and
ds
ret
lds
dec
mov
pop
cmp
sub
js
sbb
iret
push
bound
adc
push
fisubrl
push
mov
repz
or
aam
je
and
ja
cltd
inc
cmpsl
cmp
xor
dec
pop
rorb
push
jnp
push
push
loope
adc
inc
lret
push
faddl
rorb
fnstcw
lret
push
cwtl
adc
sahf
clc
inc
sbb
push
scas
dec
std
mov
shrl
or
dec
testl
cmc
lahf
mov
in
adc
sbb
dec
cwtl
stos
push
scas
jl
xlat
nop
cli
loope
push
xchg
xor
cltd
or
mov
cmp
popa
dec
cmpsb
and
movsb
ss
cmpb
test
dec
das
pop
stos
add
movl
or
jmp
subl
push
cmp
ficomps
mov
mov
aas
rcrl
popa
jne
sbb
push
out
add
ljmp
and
add
in
cld
xchg
pop
ss
shrb
jmp
fildl
out
add
cmpsl
hlt
cli
sahf
dec
dec
pop
inc
sbb
jg
and
jbe
jns
xor
mov
dec
roll
mov
fsub
clc
mov
sub
pop
xor
push
into
and
stos
hlt
jne
adc
ret
test
push
or
cld
inc
push
adc
popf
sahf
mov
daa
mov
lea
test
pop
xor
or
cmp
fs
xor
test
test
mov
dec
pop
ret
sbb
popa
mov
in
pop
or
dec
into
cltd
outsl
sbb
int
mull
lock
push
pushf
jg,pn
mov
cmp
sarb
stos
nop
lea
lds
sbb
clc
lock
jne
push
out
popa
xchg
push
stos
loop
dec
mov
xchg
icebp
adc
mov
push
sarl
fidivl
add
test
xor
cmp
jmp
pavgw
pop
fmuls
or
sub
push
jns
mov
pop
sbb
jno
cld
xor
xor
dec
rcrl
xchg
mov
mov
lahf
or
jle
lcall
aaa
or
push
ljmp
fists
repnz
mov
into
dec
cvtpi2ps
xchg
and
push
adc
jge
movl
sbb
addl
sub
jmp
and
jl
test
add
fwait
ds
cmp
outsb
push
fnstsw
mov
adc
cmp
xor
ss
out
jae
cmpsb
rcl
in
lret
mov
push
imul
mov
lods
mov
fimuls
cmp
arpl
subb
cwtl
sti
std
add
sub
pop
cmpsb
out
imul
mov
jmp
inc
push
cmpsl
add
jge
lahf
mov
sub
loope
leave
pop
sbb
ret
js
int
imul
mov
dec
or
mov
dec
stos
jbe
and
fs
pop
xchg
add
and
repz
iret
adc
test
testb
jecxz
ror
scas
in
lret
pop
mov
dec
into
adc
xchg
sbb
add
inc
clc
fbld
or
push
or
hlt
daa
stos
mov
leave
jmp
xchg
and
std
lock
or
rclb
sbb
jae
in
push
xor
pop
out
enter
inc
mov
cmp
jmp
out
mov
or
pextrw
cltd
add
push
hlt
adcb
mov
push
mov
repnz
lock
push
iret
movsb
call
adc
out
lahf
xchg
test
mov
ja
leave
shll
adc
testl
ret
jo
dec
jg
mov
cmp
sbb
rorb
push
sbb
mov
mov
xor
rsm
shll
cmpsb
and
and
cmp
rclb
xchg
clc
cmp
test
and
ss
mov
andl
pop
push
fcompl
add
shlb
cmp
mull
aam
lds
mov
xchg
stos
pop
sub
ds
sbb
add
addb
cmp
mov
add
rclb
and
adc
add
inc
lret
inc
lret
adc
adc
xchg
fstps
lods
jae
es
ja
pusha
in
insb
icebp
adc
xchg
mov
out
dec
call
jns
hlt
test
pop
jle
or
jecxz
lret
sbb
pminsw
dec
jb
cmp
shrb
cmpsb
gs
mov
mov
subl
loopne
insl
pop
cmc
repnz
or
lods
movsb
es
push
adc
adc
imul
add
xchg
fisttpl
cmp
jb
push
ds
test
rolb
outsl
sbb
xchg
ror
inc
jle
cmp
add
enter
xor
sahf
xlat
xorb
jbe
fwait
inc
pop
cmp
sti
into
sub
xor
outsb
jb
inc
sbb
jecxz
xor
test
mov
repz
xchg
ja
mov
push
fcoms
dec
lds
xor
arpl
iret
lock
dec
aaa
dec
push
jecxz
xor
je,pt
das
or
push
sub
sarl
dec
les
xchg
lahf
and
insl
jns
fdiv
pop
out
jns
addr16
cli
cmpsl
shr
pop
aam
loop
xchg
dec
mov
flds
cld
aas
outsl
or
adc
popf
or
sbb
flds
add
shll
jnp
dec
std
jno
out
jp
jne
call
add
inc
inc
mov
data16
les
or
cmp
xchg
push
add
cmp
cmp
in
cltd
shl
mov
call
dec
aad
xor
push
inc
scas
scas
into
jp
xchg
xchg
jmp
push
shrl
leave
fnstsw
jbe
cmp
xchg
cmp
jo
scas
and
adc
aad
pop
mov
arpl
jmp
pop
loope
cmc
bound
mov
stos
bound
lret
jmp
aaa
xchg
jecxz
std
sbb
fs
shl
mov
mov
jg
jae
push
lock
pop
icebp
sub
shl
aas
xchg
push
xor
xor
jecxz
in
cmp
fdivr
lea
push
sbb
jmp
jne
cmc
adc
dec
sub
inc
icebp
repz
adc
ret
dec
mov
out
cmp
and
das
mov
nop
cmp
stos
insb
mov
mov
pop
int3
xchg
mov
and
pusha
push
add
jecxz
out
std
pop
jnp
fs
adc
mov
dec
and
add
lret
cmpsb
cmp
mov
das
push
sub
mov
pop
sub
mov
mov
jb
shll
adc
jg
leave
ds
mov
daa
adc
push
jg
or
sbb
jo
jg
aaa
mov
pop
fisubs
mov
mov
mov
inc
rclb
or
ds
cmp
in
or
andb
in
sub
sahf
pop
fnstcw
lods
jmp
push
adc
dec
in
xlat
push
xor
inc
fadd
js
xchg
fnstsw
and
ficoml
dec
sub
js
push
mov
stc
scas
out
xchg
xchg
outsb
loopne
aaa
sbb
or
ja
push
inc
add
adc
movsb
cmp
push
dec
test
adc
dec
mov
push
movsb
orb
pushf
test
mov
ret
stos
in
pop
out
inc
jns
mov
scas
hlt
and
bound
xchg
mov
sub
sub
mov
inc
rolb
out
lret
ja
and
lahf
clc
and
fistps
or
cmpsb
and
ret
aaa
xchg
sbb
insl
out
arpl
dec
jns
jg
mov
xchg
jnp
roll
aas
sbb
test
in
push
pushf
cmpsl
mov
adc
dec
loopne
imul
add
push
sarb
cmp
rcr
xchg
ret
pop
adc
cmp
decb
cmp
mov
in
shll
test
loope,pt
aaa
push
jb
sbb
data16
fdivr
scas
or
jns
sub
insl
lea
xchg
test
push
js
mov
popa
jmp
jmp
inc
shlb
hlt
jbe
loope
into
sub
aad
in
lcall
scas
adc
test
and
mov
jp
insl
ret
jl
cmpsb
pushf
out
xor
inc
push
lds
pushf
push
jno
sbb
pop
pop
xor
test
xchg
mov
es
push
lcall
jg,pt
gs
mov
movl
pop
inc
adc
jae
xchg
movsl
lea
pushf
in
jg
mov
incl
test
test
scas
add
call
sbb
pop
pop
inc
xchg
rcll
std
out
xchg
push
push
xchg
stos
test
stos
fmuls
inc
jecxz
jnp
fs
js
adc
std
stos
fwait
sub
inc
sbb
pop
smsw
add
insl
cli
les
lods
adc
xor
or
push
sbb
pop
jecxz
jno
pop
mov
pop
pop
sub
fisttpl
lods
add
mov
fildll
je
cs
mov
insb
jnp
sub
scas
addr16
sub
xchg
xchg
jb
xor
popf
xchg
push
or
dec
and
dec
jp
mov
adc
lcall
push
cmp
scas
test
jmp
jecxz
push
mov
adc
loope
inc
stc
mov
dec
frstor
dec
stos
int3
inc
mov
subl
or
jge
ficoms
sti
loopne
cltd
xchg
cwtl
mov
leave
adc
nop
clc
adc
mov
je
mov
pop
clc
mov
imul
mov
cmp
fsubr
dec
dec
shlb
push
loop,pt
jnp
jmp
push
out
mov
xor
pop
dec
cmp
gs
add
xor
xor
push
pop
movsb
sbb
in
mov
scas
int
push
pop
pop
cmp
mov
cltd
adc
dec
into
stc
push
aam
fs
cmc
sub
cmpb
mov
pop
push
cwtl
pop
cmpl
mov
stos
jl
adc
test
pop
mov
scas
enter
ja
jge
aaa
mov
pusha
imul
jp
xchg
sbb
imul
push
fs
jne
je
js
lar
xor
ljmp
push
and
lods
mov
xchg
mov
mov
bound
lock
cli
dec
idivl
outsb
mov
rclb
outsb
inc
sub
loope
pusha
mov
sub
and
int3
test
jmp
add
cmp
mov
push
fidivrs
dec
lcall
xchg
popf
test
arpl
andb
mov
jnp
sub
jno
pop
in
js
xor
pop
enter
in
es
sarl
push
inc
jle
push
jmp
clc
mov
mov
mov
mov
adc
js
mov
xchg
xchg
mov
inc
lahf
cmp
mov
stc
mov
jne
dec
inc
outsl
mov
add
mov
test
inc
imul
gs
sbbl
pushf
cmp
sbb
jnp
push
push
rclb
je
in
lahf
loope
test
or
jne
sub
scas
ret
insb
enter
loopne
push
dec
xor
rcrb
movsb
cmpsl
aas
and
and
sbbl
sub
jbe
pushf
in
call
mov
sub
int3
mov
mov
xor
popf
and
out
loope
mov
jmp
das
test
push
ss
rcrb
and
mov
repz
loop
and
shll
imul
jge
rolb
pop
dec
lahf
add
jg
lcall
or
addr16
nop
mov
iret
or
jecxz
in
or
mov
lret
adc
adc
aaa
ficomps
vmovaps
ret
jmp
adc
enter
jae
sbb
or
dec
fisubl
mov
andl
mov
mov
outsb
cmp
sbb
inc
gs
sbb
fildl
xchg
pusha
lea
popf
ja
fsubrp
negl
push
in
jge
sbbb
pop
adc
xor
gs
sub
cmpsl
cmp
shlb
dec
mov
ds
icebp
dec
data16
sbb
inc
mov
lods
insl
xchg
sub
xor
into
push
cld
addb
xchg
xchg
fdivl
adc
push
loopne
and
inc
jne
sbb
out
jae
mov
pop
es
movsb
loop
loopne
xchg
mov
and
adc
sub
scas
sbb
popf
add
pop
mov
ret
sub
cmpsl
rcll
push
rol
xchg
xchg
sub
cs
cld
pop
mov
aas
std
decb
in
inc
and
cld
xchg
arpl
xchg
daa
mov
mov
cmc
cmpsl
jno
jmp
pop
nop
sahf
popa
mov
aaa
daa
loop
shlb
repnz
test
mov
popa
cmp
lret
push
or
and
add
xor
inc
push
rcll
out
sub
and
mov
lcall
mov
push
or
adc
rcrb
adc
leave
repnz
push
jnp
push
xchg
mov
in
inc
ja
sub
movsl
xor
xlat
jbe
roll
loopne
inc
mov
xchg
fdivrp
push
adc
or
inc
push
xchg
scas
stc
sub
imul
sub
sbb
adc
mov
pop
sbb
jno
xchg
mov
sbbl
add
in
ds
or
dec
insl
inc
inc
or
push
mov
jecxz
adc
jo
filds
xchg
lret
jmp
push
nop
popf
popa
xchg
mov
ljmp
popa
cwtl
lock
sahf
cmc
stos
ret
lock
shrl
mov
sbb
xor
and
jne
icebp
inc
or
push
xchg
std
push
data16
xchg
or
movsb
mov
das
lds
or
jge
lds
mov
mov
mov
jecxz
push
cmp
mov
dec
outsl
ror
xchg
dec
or
and
movsl
mov
lock
repz
lds
jnp
sbb
aaa
push
mov
jecxz
xlat
push
cltd
xor
inc
pop
mov
mov
xor
cmp
add
mov
add
ss
popf
mov
negl
adc
clc
scas
xchg
jae
add
testl
rol
dec
jnp
in
jecxz
out
sbb
sub
mov
pop
es
jmp
popf
popa
sbb
les
aas
add
movsb
out
mov
xchg
and
mov
test
fs
movl
xor
ds
icebp
lock
sbb
cmp
loope
clc
icebp
ss
cmp
push
push
mov
sbb
sbb
mov
mov
mov
sub
or
mov
jb
out
or
out
add
shl
jmp
add
mov
jns
outsb
xchg
hlt
in
dec
push
inc
jl
adc
push
pop
push
lods
inc
mov
push
inc
xchg
xchg
addb
adc
or
and
js
stos
add
push
jmp
adc
inc
dec
in
lods
mov
sub
sbb
mov
icebp
jo
inc
xchg
dec
lcall
pop
sub
lcall
add
leave
lret
arpl
stos
add
insl
sbb
xchg
adc
lea
dec
mov
frndint
aas
call
and
int
jno
or
popa
int3
subb
int3
test
je
cmp
pop
subl
and
ret
sbb
xchg
or
sub
and
mov
xor
cmp
xchg
mov
mov
sub
outsl
adc
jp
sbb
nop
push
out
pop
cmp
push
fisubrl
adc
dec
scas
jmp
mov
mov
fidivl
rol
leave
test
xchg
test
leave
xor
xchg
push
cs
mov
and
push
inc
out
rcrb
mov
push
out
dec
pop
ljmp
mov
test
mov
pop
mov
leave
mov
jge
mov
les
sahf
in
stos
fwait
pop
jge
sahf
push
stos
and
ret
cmp
pop
loopne
das
out
dec
adc
mov
fidivrl
ja
arpl
mov
adc
mov
sti
inc
push
adc
cmp
iret
in
push
or
outsl
shr
scas
mov
or
cli
lret
mov
push
sbb
xchg
mov
jmp
add
mov
popf
sub
gs
mov
sub
insl
scas
sbb
xchg
mov
aam
and
or
jo
dec
xchg
sub
testl
subl
pop
mov
add
pop
xor
pop
out
ja
arpl
nop
fwait
or
js
std
and
outsl
in
sub
mov
mov
adc
jmp
lods
les
push
cmpsl
sub
mov
mov
jb
scas
push
lahf
dec
clc
add
std
dec
cmp
xchg
out
or
push
ret
mov
adcl
cmp
mov
mov
cmp
jnp
inc
popl
jp
cmp
arpl
cmp
movsb
inc
pop
push
or
xchg
cmp
add
into
divl
and
mov
andb
pop
dec
fcompl
fwait
sub
add
sbb
iret
add
dec
cmp
and
fiadds
mov
sbb
xchg
fsubs
xchg
inc
pop
pusha
or
cmp
mov
loop
mov
and
ja
testl
pop
xchg
insb
jle
hlt
sbb
pop
and
xlat
addr16
insb
ljmp
mov
jo
mov
cmp
mov
xchg
xor
mov
xor
adc
test
aaa
pop
aaa
loop
mov
aad
ja
xchg
push
sbb
les
mov
mov
lahf
adc
ja
cmpxchg
cmc
and
and
push
loop
iret
in
pop
mov
rorb
fsubrp
push
ljmp
jmp
adc
adc
inc
nop
lea
cld
js
hlt
lods
movsl
dec
sub
xorb
xor
imul
xchg
cltd
add
inc
mov
ljmp
sbb
mov
lods
add
cmp
lods
xor
js
aaa
loop
xchg
pop
cmp
in
sub
mov
jno
dec
movb
aam
pop
bound
cwtl
adc
mov
sbb
in
lock
imul
insl
repnz
cld
nop
fstpl
sub
fstp
jne
push
xor
fsts
cmp
inc
out
aaa
push
add
pop
je
es
pop
sub
lret
scas
fiaddl
adc
enter
jg
pop
outsb
lds
mov
push
xchg
inc
or
ss
aaa
out
into
int3
mov
xor
pop
push
loop
loop
xchg
iret
ret
jno
popa
mov
xchg
jne
and
mov
mov
adc
std
iret
clc
ds
adc
and
out
sub
push
mov
dec
das
inc
cs
shlb
mov
daa
xchg
imul
fildll
push
pop
and
xor
fs
int3
jecxz
jne
std
xchg
shll
pop
xchg
into
lock
movsl
pop
fstl
nop
outsb
sbb
sbb
cmpsb
cwtl
repz
cltd
add
aas
fucomip
cmp
repnz
dec
mov
out
in
pop
jecxz
jnp
pop
popf
decb
daa
adc
stos
cmp
mov
fnstsw
lret
inc
int
add
jo
lods
xor
into
push
std
lret
icebp
add
mov
imul
xor
adc
mov
adc
dec
jg
mull
push
into
xor
repz
push
mov
lds
inc
mov
push
lock
cmc
adc
les
mov
jae
jbe
ds
lret
sub
mov
popa
int3
cs
imul
lret
dec
mov
call
push
stc
shll
stos
out
out
jecxz
push
push
mov
icebp
scas
insl
andb
or
insb
enter
cwtl
pop
ljmp
cmpsb
fisttps
push
push
mov
jns
cld
je
cmp
insl
ljmp
in
rcrl
ljmp
xchg
sti
xor
or
pop
test
mov
loope
jmp
shll
jecxz
sub
popf
idivb
jge
rorl
in
add
push
adc
dec
sbb
sbb
test
enter
cmp
jns
adc
jns
enter
sahf
leave
sahf
stos
mov
or
xchg
push
repnz
test
adc
adc
daa
cmc
test
inc
add
sub
cmpsb
adc
call
sub
das
xchg
jae
sbb
dec
and
sub
mov
cmp
push
test
outsl
pop
cmp
js
orb
fnstsw
movsl
ret
scas
mov
mov
xchg
int3
or
mov
or
mov
xchg
mov
xchg
lock
lret
inc
loop
mov
cltd
mov
rcr
pop
xchg
es
mov
sahf
cmp
cmp
push
lds
in
cwtl
mov
push
jae
xor
push
das
fldcw
push
aam
push
mov
lods
adc
mov
jg
mov
stos
ret
cmpsb
mov
adc
and
iret
sbb
les
fidivl
inc
xchg
push
mov
push
pop
addl
cmpb
int
inc
jne
loopne
mov
mov
icebp
leave
lods
lahf
xchg
movsl
cmp
mov
xchg
dec
push
test
or
sahf
xchg
push
inc
roll
mov
dec
mov
hlt
test
mov
sbb
or
cmpsb
fs
jle
jge
sti
hlt
int3
pop
test
dec
insb
fdivrl
jne
sbb
jmp
pop
mov
push
lea
cmc
repz
inc
test
insl
or
jmp
sbb
lcall
aam
or
bswap
adc
insb
lret
mov
mov
jns
sbb
mov
fwait
push
hlt
fdivr
or
jmp
push
xchg
in
jb
mov
xor
jge
shrb
mov
repz
cs
stos
psubq
mov
out
sbb
mov
pop
dec
insl
and
xchg
sub
test
xor
imul
xchg
xchg
inc
ds
pusha
xor
cltd
test
stc
push
or
shlb
xor
and
dec
mov
std
xchg
das
notb
and
nop
orl
mov
dec
pop
dec
jg
or
cmp
lahf
sub
push
mov
fwait
mov
dec
sbb
and
jecxz
cmc
out
mov
inc
lods
data16
loopne
shlb
inc
out
or
jno
rcll
in
jmp
xor
ja
pop
push
je
xor
and
xchg
sbb
inc
aam
outsl
fisttpl
adc
or
sub
insl
jl
cmc
inc
divps
ljmp
loopne
mov
sbb
and
jle
mov
add
adc
mov
adc
sbb
clc
hlt
jecxz
fldt
mov
mov
push
int3
sbbb
adc
jge
push
test
sahf
inc
shr
sbb
sub
sbb
shll
push
or
dec
mov
fstpl
and
scas
insl
mov
cmp
cmp
ljmp
xor
outsl
pop
movsb
dec
int
mov
mov
pushf
inc
mov
add
je
inc
push
orl
cmpsb
and
or
and
cmpsb
in
mov
ljmp
cmp
lcall
cmp
mov
sub
sub
cld
enter
cmp
stos
jmp
sbb
jns
aam
xor
adc
adc
test
fnstenv
push
dec
call
lcall
lcall
jmp
stos
aaa
adc
mov
popa
mov
cmpsl
adc
mov
mov
xor
rcll
jmp
inc
mov
and
or
nop
sbb
dec
repnz
sub
sub
push
fbstp
xor
icebp
in
fistps
test
ficoml
jmp
jbe
out
push
sub
daa
int
movsl
add
add
xchg
popa
ret
ret
inc
mov
fsubrl
fidivl
sbb
or
or
decb
or
mov
adc
sar
or
loope
xor
fs
cmp
xor
scas
ljmp
pop
mov
lahf
or
sub
mov
jne
inc
cld
movsl
push
mov
xor
jmp
dec
inc
adc
sbb
imul
cmp
jbe
loop
cmp
mov
jp
xchg
loope
mov
cmp
dec
test
jno
pop
dec
aas
mov
stos
outsl
leave
dec
inc
pop
mov
xchg
scas
jae
add
test
shll
dec
enter
xor
cmp
jo
scas
ss
int3
stc
fadds
mov
inc
jge
jb
scas
sbb
jl
xchg
xchg
in
test
dec
jb
ljmp
mov
testl
dec
mov
inc
sbb
fnstenv
sbb
or
pop
outsb
xchg
aad
sahf
inc
lea
ds
dec
adc
pop
mov
xchg
repz
pop
jo
push
inc
les
shrl
xor
lcall
lret
mov
cmp
test
adc
or
lret
shl
fldl
pop
out
xchg
sub
aam
mov
enter
out
loop
fnstsw
cmp
pop
in
neg
jns,pt
and
or
and
mov
mov
pop
xlat
lahf
jg
loop
scas
push
fcomp
and
popa
mov
or
leave
pavgb
lds
pop
xor
lcall
jo
movlps
and
hlt
std
jp
cld
sbbb
mov
mov
inc
out
ds
dec
xor
add
pop
cltd
or
icebp
mull
inc
mov
clc
movsb
sub
xchg
jmp
xchg
jl
or
push
xorl
mov
je
mov
fs
sbb
inc
inc
jnp
ret
cmp
and
sbb
push
into
cmp
add
jne
clc
cmp
pusha
cmp
loop
insl
sbb
dec
in
stc
ret
dec
mov
mov
push
cmc
das
scas
adc
fmuls
push
std
es
xor
fsubs
pop
outsb
out
ljmp
cwtl
mov
jno
out
sub
loop
jge
add
or
and
repnz
mov
mov
cmp
dec
fisubrs
bound
xchg
push
bound
out
addr16
push
shlb
jge
cmc
cmp
inc
ss
jno
xchg
aad
jo
xchg
iret
pop
jnp
push
cmp
loop
shll
loopne
xlat
popa
sub
mov
call
add
pusha
mov
push
rcrb
imul
and
adc
add
mov
fimuls
das
xchg
inc
and
xchg
rcrb
mov
or
pushf
popa
into
mov
add
adc
dec
mov
lcall
pushl
out
movsb
sub
or
mov
mov
dec
filds
sbb
and
dec
and
adc
sbb
jo
mov
jno
jne
pop
jno
mov
fwait
mov
inc
sub
add
cmp
mov
jecxz
or
or
shll
pop
fildll
mov
add
or
push
adc
inc
xchg
dec
xchg
daa
stos
dec
shll
lea
cmp
sarb
fwait
sbb
xor
repz
mov
jg
lock
scas
sarb
mov
shll
mov
pop
dec
inc
inc
dec
and
xchg
shl
push
ret
mov
sbb
outsb
inc
xchg
rcll
fists
pop
fwait
dec
clc
or
ja
ret
push
loop
adc
cld
adc
pop
sbb
mov
daa
loopne
int3
out
movsb
ja,pn
aad
jge
stos
jecxz
loop
aad
aas
push
push
xchg
xchg
xchg
repnz
sub
jbe
ret
stc
les
mov
mov
inc
divl
jns
mov
repnz
mov
lods
or
in
mov
das
ljmp
fnstenv
shlb
enter
fmuls
jmp
mov
adc
adc
push
rcrb
or
iret
mov
jge
adc
cli
cli
xor
mov
and
mov
pusha
cmp
ds
test
int
xchg
lret
xor
idivl
push
pop
mov
stos
ret
and
inc
sbb
xchg
in
xchg
je
sti
cmc
lret
pop
ficomps
test
adc
sbb
add
jmp
filds
lock
pop
loopne
lret
xchg
stos
inc
mov
insb
adc
mov
jp
imul
inc
add
lock
inc
and
ss
jbe
out
cs
outsb
pushf
sub
pop
incl
lods
jge
inc
mov
cmpsb
push
inc
lods
pusha
out
rorl
adc
sbb
movsl
stos
inc
out
xchg
jbe
ljmp
sbb
jge
sbb
faddl
scas
xchg
das
in
mov
test
push
test
push
es
xor
out
or
sti
mov
mov
lea
stos
push
fwait
enter
mov
xor
cmp
jb
iret
sub
cltd
push
in
in
and
push
mov
out
std
mov
je
movsl
add
int3
dec
lret
lret
shrl
fcomps
popa
cmp
imul
and
mov
dec
sbb
jmp
inc
xchg
push
push
and
cwtl
sbb
repnz
and
daa
das
fadds
mov
scas
mov
popa
mov
stos
arpl
test
dec
ret
dec
mov
mov
scas
sbb
in
adc
pop
push
call
sbb
add
and
ds
cmp
mov
cmc
mov
sahf
fcomi
dec
ljmp
sbb
popl
jae
int
lret
ds
arpl
mov
mov
in
adc
push
or
fisubrl
xchg
jmp
xchg
mov
bound
dec
es
out
xor
xor
out
out
sbb
pop
mov
cltd
xor
in
fwait
xor
fidivs
outsl
lods
test
les
std
shl
xor
push
aaa
push
mov
in
xchg
dec
fstl
pop
mov
sbb
in
jno
inc
sub
mov
inc
fildll
fldcw
dec
xchg
sub
cld
mov
mov
cmpsb
sub
pop
fbld
xchg
in
leave
push
mov
out
sbb
push
aas
jg
sar
rol
sub
inc
jp
jle
dec
xchg
cwtl
xchg
nop
dec
or
push
and
add
sub
or
inc
ds
pop
cwtl
dec
mov
xor
dec
dec
in
popa
shll
and
xor
jb
in
inc
fcompl
xchg
sarb
filds
xor
pushf
in
sub
cwtl
daa
mov
arpl
rorl
ficoml
mov
in
xchg
cwtl
add
add
cmp
pop
fwait
sub
add
dec
inc
rclb
enter
out
inc
push
xchg
fadd
xchg
mov
out
mov
std
outsb
sub
jnp
jno
push
scas
repnz
jb
xchg
stos
mov
dec
pop
adc
jno
dec
pop
test
divb
out
sub
xchg
sbb
dec
sbb
push
push
loop
das
push
shr
lods
mov
and
adc
shlb
popa
mov
sbb
push
sti
mov
jg
mov
sub
pop
cwtl
loop
jbe
sahf
testb
sub
or
div
shll
xor
lds
and
push
outsb
cmp
stos
xor
jmp
push
pop
shrb
mov
repnz
andl
ret
test
fcoml
cmp
dec
aad
pusha
sub
xchg
in
scas
pushf
movsl
xor
xchg
mov
nop
add
cmpsb
les
jecxz
mov
lret
push
jb
lds
icebp
cmp
hlt
mov
cmp
in
dec
mov
sti
sbb
pop
fs
ja
xchg
addb
jle
add
imul
sbbl
cli
pop
push
neg
les
sbb
pop
lret
cmp
jb
pop
sbb
sbb
stos
lahf
jae
dec
es
ret
pop
incl
xchg
pop
int3
dec
adc
push
ret
std
aaa
jb
das
xchg
jge
sbb
adc
outsl
or
stos
sbb
sbb
scas
push
sub
sub
push
fs
xor
jmp
cmp
ja
sub
xchg
push
cmp
idivl
into
into
and
xor
cltd
stos
test
jg
sbb
lret
and
mov
push
xor
xor
cmp
dec
aam
in
pop
add
inc
test
cmp
out
mov
push
jge
movsl
ljmp
scas
jbe
dec
xor
push
movsb
push
cmc
pop
aaa
or
pop
mov
cmp
incb
jmp
xor
add
dec
jge
rcrl
pop
add
je
fcoms
int3
mov
mov
data16
mov
shlb
add
repz
rol
sub
lahf
jbe
add
lret
pop
xchg
pusha
fs
dec
add
mov
loope
pop
mov
cs
adc
push
adc
xor
sub
sbb
lods
lahf
lea
jns
adcl
mov
lahf
cmc
daa
fnstenv
loop
rcl
sub
ret
and
dec
cli
lds
add
rcrl
and
xchg
mov
push
dec
das
sub
mov
pop
xchg
ret
imul
push
pop
ficompl
inc
and
or
mov
pcmpeqd
xor
jae
and
movsl
test
scas
jne
repz
clc
adc
jl
inc
sub
jns
fwait
stc
je
cmp
es
nop
insl
sub
fisubrl
xchg
mov
pushw
cmpsb
inc
cmp
add
bound
dec
fbld
mov
push
loopne
mov
or
sbb
pop
movsl
lds
jg
dec
add
shlb
xor
mov
aam
mov
std
outsl
clc
cltd
and
xor
clc
cmp
and
mov
mov
movsl
stos
push
cmpsl
sub
lret
dec
jp
lahf
jo
aam
xor
cmpsl
pop
in
mov
sbb
and
jne
cwtl
mov
and
out
push
outsb
mov
cwtl
mov
into
lock
test
in
mov
adc
fwait
push
dec
imul
pop
and
add
divl
jge
js
jg
jle
ret
es
shl
dec
cs
je
inc
push
jmp
add
xlat
jae
out
fsin
gs
lock
mov
xchg
and
fisubrl
jns
fidivl
je
and
jecxz
decb
cmc
adc
pop
add
push
jle
mov
gs
sbb
daa
sbb
test
mov
pop
daa
std
clc
xor
pop
xchg
push
or
sub
cld
jmp
cmp
idivb
test
fisubs
mov
rcl
inc
pop
bound
cmp
and
mov
fnsetpm(287
in
jae
mov
aam
clc
dec
sub
xchg
pop
shll
and
cmp
addr16
jo
mov
cmp
pop
pop
pusha
bound
cmp
in
mov
ficomps
add
inc
imul
movsl
cmp
jmp
loopne
push
in
out
jge
inc
shll
clc
jg
cmp
cmpsb
sarl
mov
mov
pop
out
lock
mov
cli
mov
imul
daa
fwait
in
into
fmull
mov
jne
and
lret
mov
sarb
xchg
rcll
push
pop
add
add
sahf
pop
out
sbb
imul
mov
dec
and
xor
xchg
lea
in
pop
xchg
pop
adc
pushf
xor
jo
rcll
lea
xchg
aam
or
aad
mov
push
bound
adc
sub
sub
sub
ds
jnp
adc
dec
mov
inc
jno
mov
inc
daa
mov
pop
lcall
pusha
jecxz
jg
mov
popa
pop
pop
push
dec
mov
and
negb
pushf
adc
imul
jnp
outsl
out
cmpsb
lock
scas
jg
movsl
jecxz
shlb
jne
popf
and
xchg
fidivl
jb
enter
out
nop
mov
adc
cmpsl
cmp
sbb
cmp
inc
mov
in
pop
xchg
xor
mov
cmp
push
pop
add
or
mov
lret
ja
mov
arpl
adc
sbb
leave
cmp
xchg
push
jge
fidivrl
cmpsb
bound
roll
push
out
pop
inc
adc
mov
mov
xor
loopne
xchg
dec
xlat
stos
jecxz
pop
push
mov
das
jecxz
arpl
pop
sub
test
fsubs
dec
out
dec
sbbb
in
mov
fidivl
lock
push
cmp
lcall
aad
pop
push
fwait
mov
movsl
bound
cli
cmpsl
xlat
mov
shll
testl
cmpl
arpl
pop
ljmp
int3
insl
cs
pop
arpl
sti
dec
lds
jns
dec
or
lea
mov
pop
int3
hlt
pop
in
imul
lods
sbb
mov
push
cmp
es
leave
dec
lods
mov
jo
jg
cmp
fwait
out
sti
or
gs
push
bnd
adc
je
push
add
in
inc
icebp
lret
loopne
fnstenv
cmp
xchg
jp
lds
sbb
jecxz
or
jbe
pop
iret
inc
inc
dec
daa
mov
jno
cmp
loopne
aam
fidivs
ja
mov
fwait
mov
sbb
push
cld
fsubrl
mov
pop
das
stos
adc
sub
movsl
aad
jl
mov
faddl
mov
dec
sbb
aam
mov
pop
jmp
sbb
mov
jae
out
rorl
dec
sti
sub
fcoms
notb
std
dec
dec
mov
add
mov
add
mov
in
std
mov
scas
pop
and
jl
ret
fdiv
addr16
pop
test
or
mov
pop
push
cmp
adc
sub
mov
add
ret
xchg
xchg
cmp
mov
daa
add
leave
jmp
in
sub
and
mov
int3
and
push
into
sub
not
dec
sbb
push
into
pop
xchg
jb
xchg
jle
dec
push
cmpsb
xor
mov
or
mov
out
rcll
adc
push
fisttpl
pusha
sahf
push
mov
popa
sbb
cmp
or
mov
inc
cmp
lea
fld
pop
sub
mov
aad
imul
sub
push
or
lods
outsl
adc
ficoml
or
push
inc
mov
xor
lock
adc
pop
lahf
aad
pop
fldenv
mov
into
int
pop
and
scas
mov
cli
add
and
push
mov
cmpb
adc
insl
bnd
jno
sti
cld
in
nop
pusha
mov
int3
adc
inc
popf
mov
cltd
movsl
imul
mov
js
mov
pop
mov
fildl
in
loope
pop
jae,pt
leave
or
shrb
mov
cltd
dec
in
ja
add
mov
cmpsl
inc
or
insb
leave
adc
insl
or
cmpl
push
jg
loope
dec
in
jo
push
cmp
mov
rolb
adc
ljmp
jl
mov
fisubs
jg
incl
sbb
push
push
es
scas
mov
ljmp
mov
cmp
mov
orl
pop
push
aam
xor
dec
sub
mov
mov
xor
adc
stos
rcrb
or
fistl
outsl
hlt
xchg
adc
int
aad
cs
xor
rcrl
mov
dec
ljmp
jp
pop
xchg
and
icebp
and
and
fnstcw
mov
dec
stos
pop
and
or
cmp
es
and
aas
fbld
sub
in
stos
adc
xchg
daa
ss
add
mov
out
adc
pop
call
enter
xor
xchg
adc
lds
je
jg
pop
js
jecxz
out
pusha
lods
sub
mov
pop
xor
ja
mov
dec
loop
jp
dec
fnstsw
subl
mov
adc
xlat
pop
pop
sub
loope
dec
jo
fwait
xchg
push
and
loope
sarl
mov
inc
xlat
jg
pushf
lahf
je
sub
jge
popf
and
icebp
imul
push
push
out
pop
mov
sti
and
add
ja
cmc
xchg
in
cmc
dec
or
add
rsm
cmp
rol
cmp
cmc
pusha
in
test
icebp
sub
iret
test
jg
push
mov
movzwl
out
sbb
shrb
add
outsl
ljmp
ret
loopne
adc
repz
or
fiaddl
lret
imul
in
adc
pop
sbb
pop
jge
adcl
adc
mov
inc
xchg
mov
inc
or
xchg
sub
push
hlt
mov
or
push
adc
call
sbb
dec
push
sahf
mov
dec
jge
dec
pop
jno
dec
fwait
adc
into
and
dec
shrl
ret
add
rcrl
daa
test
pop
lret
mov
mov
jge
fwait
xchg
iret
stc
inc
jmp
xchg
cmp
imul
mov
fwait
hlt
test
push
and
movsb
sub
arpl
test
lret
test
sahf
lea
outsb
testl
sub
gs
sarb
adc
cmp
mov
aam
out
lahf
test
fldenv
push
sub
mov
cmpsl
cli
xor
repz
jae
push
dec
sub
mov
flds
cmp
or
fldenv
xchg
pop
push
ret
xor
fldl
fs
mov
inc
rorl
out
push
pextrw
push
shrl
sbb
xchg
dec
mov
out
jl
fisttps
jle,pt
mov
lcall
addr16
sbb
pushl
fstps
dec
adc
adc
mov
fcmovne
push
loopne
jg
aam
jg
lahf
xchg
xchg
add
out
mov
sub
pop
fbstp
push
ss
dec
mov
sbb
scas
push
push
sub
or
mov
std
pusha
sub
push
andb
push
loop
pop
hlt
out
in
roll
or
jbe
cmp
test
xchg
and
pushf
sarb
outsl
sub
adc
fnstsw
imul
and
sti
jne
cmp
jg
gs
cmpsb
insl
mov
jecxz
cs
in
pop
sbb
lahf
mov
mov
imul
rclb
lods
push
cmp
cmovnp
lret
data16
sbb
test
dec
stc
nop
dec
push
lea
rcll
jg
xor
dec
push
and
movsb
and
push
outsl
and
in
inc
je
popf
fmuls
mov
sub
out
jbe
jp
xchg
inc
aam
repnz
ret
adc
push
shrb
lcall
movsl
shll
hlt
fldenv
js
les
loop
sub
pop
jmp
inc
ds
lcall
push
in
cmpsb
daa
out
in
roll
or
jbe
cmp
bound
or
add
xchg
add
js
and
lds
pusha
and
add
cli
mov
outsl
lcall
cmp
xor
fs
jecxz
push
pop
sbb
add
sbb
aad
rcrl
imul
xlat
daa
or
iret
add
int
or
loop
jg
mov
adc
mov
mov
mov
or
lods
test
int3
push
mov
nop
daa
rorb
lret
pop
not
jbe
pop
loop
das
mulb
rcl
sbb
or
in
adc
psrad
in
inc
xor
rorl
cmp
inc
lahf
xchg
je
cwtl
xchg
fiadds
call
sti
fs
mov
dec
rorl
scas
fcoml
fisubrs
sub
call
jae
jae
fcmovnbe
lds
mov
or
imul
arpl
cwtl
cltd
fbld
js
mov
cwtl
jecxz
addr16
pop
idivl
aam
xor
scas
sbb
inc
lock
mov
lcall
push
mov
mov
jl
inc
call
mov
push
xor
push
das
cmp
inc
push
xchg
push
retw
jle
pop
inc
mov
and
cwtl
and
shr
xor
pop
add
leave
sbb
rol
mov
data16
lcall
xchg
mov
mov
iret
lcall
jae
xchg
xlat
push
xor
lods
jne
xlat
push
test
mov
frstor
rcrl
dec
inc
ja
or
mulb
fisttpl
cmpl
hlt
xchg
test
xor
push
mov
enter
pop
jnp
cmp
nop
jne
hlt
cli
pop
inc
adc
cmp
loop
fbstp
xlat
push
int3
add
inc
stos
xor
or
je
enter
push
repz
xchg
lock
push
jnp
lretw
add
mov
inc
adc
xchg
outsb
inc
insl
lea
aas
add
sub
repz
cmc
pop
and
rorb
inc
push
pop
rclb
or
inc
sbb
rol
jp
add
imul
icebp
repnz
and
lods
clc
sbb
jo
shl
div
popf
cmp
dec
sub
inc
jl
jl
in
xorb
out
int3
sub
jg
fcom
lock
sbb
ljmp
bound
pusha
push
or
mov
and
ss
aad
jg
push
or
xor
add
adc
ret
test
out
movsb
push
ds
sbb
fnsave
test
pop
cmp
and
fstpt
call
push
ds
dec
jno
xchg
lods
mov
fsubl
imul
and
cmpl
or
pushl
fwait
xchg
and
out
dec
jbe
lock
cmp
jb
mov
cmp
subl
xor
sti
mov
sahf
mov
mov
inc
dec
jnp
sbb
imul
fimuls
xchg
pop
mov
push
add
xchg
aaa
call
ja
push
aaa
ljmp
jmp
aas
scas
test
js
popl
subl
rep
xchg
mov
imul
lret
iret
cmp
daa
mov
lret
pop
es
outsb
into
inc
and
fcom
outsb
sub
inc
adc
mov
shrl
jo
addr16
nop
xor
test
out
cmp
test
push
cli
jp
add
jae
jmp
ret
mov
push
out
insl
push
in
test
cmc
adc
out
or
jne
cltd
jae
aaa
mov
and
lods
add
push
jl
iret
shrl
loopne
mov
cmpl
or
sti
sub
push
ljmp
inc
pop
pop
ret
add
mov
add
enter
push
add
add
or
add
pop
shrl
push
add
or
mov
dec
insb
xchg
cltd
adc
add
xchg
int
add
dec
mov
add
roll
movsl
and
add
add
clc
and
cmpsl
sbb
add
add
outsl
add
fdivr
addb
add
add
xchg
push
in
mov
sub
add
ds
cmp
jo
fists
popa
testb
jmp
add
dec
sub
iret
xor
jmp
pop
sub
add
leave
add
adc
add
sbb
fs
push
add
leave
mov
sbb
adc
sbb
mov
movl
in
add
insb
mov
push
icebp
mov
add
lods
xor
cmp
add
lods
add
inc
mov
test
add
std
sub
or
nop
mov
mov
adc
add
add
xchg
xchg
fcoms
loopne
add
and
add
add
sbb
sahf
pop
clc
adc
clc
fcom
jns
add
in
and
fildll
aaa
adc
add
xor
cmp
sbb
push
lahf
push
inc
sbb
ret
jl
out
aam
data16
add
test
xchg
jbe
lds
add
or
cmc
jl
lea
in
ret
jp
xchg
std
arpl
imul
popa
lret
test
mov
push
cmp
xor
movsb
xor
ljmp
ja
xor
fists
mov
add
add
or
stc
or
dec
scas
add
jle
repnz
mov
out
sub
xor
add
fcoml
add
inc
cmp
add
add
insb
mov
jl
dec
pop
je
mov
cwtl
add
sbb
arpl
cwtl
sbb
mov
add
xchg
add
push
imul
and
sarb
les
add
and
mov
add
inc
idivb
mov
push
dec
pusha
pop
daa
sbb
loopne
pop
push
inc
bound
cli
fdiv
inc
add
and
add
loopne
push
pusha
fs
add
cltd
ss
xchg
or
xchg
xor
int
inc
sub
sbb
data16
xor
popf
or
das
ss
add
hlt
daa
xchg
aaa
wbinvd
enter
leave
lods
bound
sbb
cmp
mov
xor
sahf
sub
shrl
out
and
add
adc
jno
push
add
cli
mov
daa
adc
mov
add
mov
cmp
js
pop
sahf
adc
inc
pop
mov
and
arpl
stc
xchg
jecxz
add
rcrb
push
mov
add
adc
add
aas
lret
ret
push
cwtl
add
mov
jmp
add
jae
movsb
cs
inc
loope
fldl
cmp
aad
inc
or
nop
icebp
movl
test
inc
jns
stos
mov
outsb
mov
add
add
mov
sub
xchg
mov
add
daa
call
add
add
test
sub
xchg
dec
and
add
es
mov
and
jmp
mov
lods
add
mov
add
sahf
dec
mov
in
or
fwait
mov
daa
cmp
inc
popf
add
sbb
lock
or
cmc
mov
pop
fwait
or
add
std
xchg
ja
ror
lods
movsb
add
sub
outsl
mov
imulb
add
mov
sbb
imul
gs
sti
roll
inc
sub
ja
int3
in
sbb
mov
xlat
add
adc
add
mov
jmp
cmp
push
fstpl
or
add
jns
roll
aaa
repz
stos
addr16
movsb
pop
popa
add
mov
or
or
mov
call
fcoms
icebp
pop
dec
add
clc
or
gs
add
outsb
pop
push
sarl
inc
and
loope
sbb
enter
js
push
lea
imul
rolb
dec
add
dec
dec
movsl
addr16
xorb
ret
xor
xor
rorl
jle
push
inc
inc
pop
or
add
sub
add
out
ds
jae
add
insb
push
bswap
inc
add
mov
add
add
xchg
jg
push
mov
stc
and
add
mov
add
jle
sub
mov
push
outsb
adc
adc
aam
mov
sahf
xchg
out
cmp
orl
add
sarb
jl
push
mov
add
enter
cli
add
cli
mov
es
dec
xor
add
add
sub
push
mov
mov
mov
add
fnstsw
push
inc
out
add
inc
leave
jno
add
out
add
or
pop
add
mov
add
lret
inc
mov
and
add
push
xchg
fstpl
bound
loope
xchg
test
jp
add
movsb
cmpsb
xor
jp
dec
and
movl
add
push
add
sti
inc
bound
out
data16
cmp
mov
add
sub
cmpsl
pop
fs
mov
jo
add
and
lds
testl
add
je
jecxz
adc
in
stc
push
pop
int
setle
rclb
mov
add
popa
push
mov
jb
sbb
pop
add
jns
test
add
push
cmpb
xchg
add
movb
mov
movsb
in
sbb
mov
stc
sub
adc
pmaxub
out
ficoms
fucomp
ja
ret
je
add
cmpsb
add
or
add
arpl
add
jmp
lea
mov
outsb
dec
add
adc
scas
cmp
push
add
testb
lret
movsl
sbb
cmp
add
cmpsb
out
push
add
test
in
sarb
les
inc
loopne
add
adc
lahf
gs
fsubrs
sbb
ret
pop
flds
mov
add
add
add
jb
jge
enter
add
or
pop
push
and
out
jbe
sub
xchg
fs
add
filds
ss
sbb
sbb
add
popa
mov
push
outsl
dec
in
shll
cmp
cmpsb
shl
les
lds
sbb
jmp
in
in
dec
lock
dec
lods
out
in
pop
out
scas
lret
mov
inc
mov
add
add
loop
pop
popf
cmpsl
clc
in
push
lahf
inc
push
stos
add
add
push
add
add
scas
popa
fdivrl
jns
in
sti
insl
dec
sub
pop
out
lahf
push
mov
out
scas
add
add
adc
sahf
adc
dec
cmp
cwtl
stos
add
lock
aam
ret
cmp
pop
addb
mov
mov
add
add
insl
mov
push
aas
inc
add
add
adc
add
daa
andl
add
and
dec
ret
imul
add
sub
jg
mov
cmp
add
xor
sbb
aad
mov
add
mov
insb
push
cld
add
add
add
xchg
and
add
ror
daa
jo
add
adc
lcall
inc
sub
and
inc
or
xchg
jae
movsl
mov
mov
shrl
add
out
fmull
jno
std
add
into
mov
test
dec
pusha
or
jo
sbb
dec
jne
lea
jnp
inc
mov
enter
add
pop
cmp
jnp
pop
shll
or
and
xchg
repz
xor
and
pop
bound
add
repnz
and
add
mov
ret
lock
loop
lea
call
add
add
jge
out
cmpsl
aaa
testl
iret
es
jb
rep
jmp
push
shll
mov
fidivl
test
add
xor
shl
out
push
cmp
fadds
add
add
mov
outsl
popl
xchg
movsb
pusha
push
add
mov
hlt
jno
xor
adc
ljmp
mov
scas
std
dec
or
dec
outsl
incb
add
lret
movsb
xor
xchg
add
add
push
nop
add
decb
add
push
loop
rolb
add
push
add
sbb
add
sahf
sbb
daa
aaa
jns
nop
add
icebp
add
or
add
mov
addl
cmp
stos
aaa
pop
mov
mov
in
imul
out
jecxz
xor
xchg
mov
or
in
stos
sub
arpl
push
xchg
fcomps
xchg
lahf
or
aam
outsb
push
mov
sarb
sub
lahf
xor
pop
cmp
add
js
int3
imul
sbb
add
or
mov
outsb
out
sbb
push
inc
cli
dec
and
je
aad
push
daa
xchg
dec
stos
inc
mov
bound
push
imul
inc
cwtl
add
add
push
shlb
mov
inc
popf
fs
push
push
int3
inc
clc
add
movsl
add
add
jne
add
jle
mov
hlt
dec
sti
push
dec
and
lcall
pop
outsb
jns
cmpsb
add
xchg
mov
inc
inc
add
scas
push
dec
and
adc
mov
dec
std
pop
mov
xchg
imul
xchg
les
mov
mov
jb
jnp
in
pop
xor
jo
xchg
jae
dec
and
aam
cwtl
and
mov
add
push
push
stos
and
mov
push
add
inc
mov
in
adc
jmp
and
fsubrs
call
jle
lods
jg
in
inc
or
sbb
daa
in
pop
call
pop
xchg
enter
push
loop
mov
mov
fsubr
mov
ret
adc
pop
orl
add
lcall
fs
add
sahf
and
or
add
js
add
lcall
sbb
add
cmc
xchg
cmp
in
add
xchg
mov
jl
rorl
lock
lods
pop
push
fstps
add
push
or
push
xchg
push
pavgb
adc
pop
pop
push
mov
mov
add
rclb
outsl
ficomps
inc
add
cmp
and
xchg
lds
add
in
testb
loope
push
mov
push
lods
ljmp
xlat
adc
xor
das
aam
addl
stos
add
push
scas
dec
mov
ljmp
cmpsl
fs
add
ret
enter
jno
add
inc
pop
sbb
int3
daa
jae
sbb
in
fists
dec
rcrb
add
add
test
xor
add
add
push
lea
add
ficoms
push
mov
dec
adc
add
add
add
push
mov
insl
add
xchg
add
dec
incb
mov
mov
in
imul
and
push
add
dec
outsl
xlat
xchg
lods
mov
loop
rorb
add
inc
sbb
lock
sti
test
push
push
push
fdivl
inc
mov
add
aaa
test
lcall
les
mov
add
jnp
icebp
pop
fimull
rcr
dec
movsl
jbe
add
mov
adcl
jmp
and
lahf
jmp
or
add
mov
and
add
or
push
pusha
mov
add
ret
add
clc
repz
fbstp
mov
std
ljmp
add
xchg
pop
mov
dec
aad
add
fwait
rolb
std
xchg
jo
pop
sub
add
sti
push
imulb
ljmp
mov
cmp
mov
add
clc
add
add
xchg
or
add
test
aad
sbb
imul
xor
aam
rolb
add
pop
xor
add
add
add
sarb
pop
mov
add
cltd
dec
inc
shrd
add
push
and
mov
sahf
sub
add
sbb
test
push
jnp
cld
add
add
dec
cmpb
push
insl
add
jne
xchg
xor
lret
add
push
icebp
add
add
gs
or
lods
add
mov
cmp
add
xor
test
xchg
lods
aad
mov
add
rolb
test
fs
clc
stc
je
push
or
sahf
pop
out
out
add
dec
and
shlb
mov
jl
pop
xorl
enter
notl
loop
adc
mov
add
add
loopne
inc
iret
push
loopne
push
xchg
inc
movsb
dec
stc
push
inc
bound
push
add
adc
add
xchg
shl
mov
sub
push
faddl
add
movsb
subl
pusha
xchg
mov
call
jns
xchg
stos
add
cmc
or
dec
mov
cwtl
xlat
cmp
test
sub
cs
test
outsl
add
imul
pop
nop
add
cmpsl
push
push
add
test
in
add
decb
add
add
fisttpl
das
loop
shlb
jg
sub
jecxz
or
add
xor
add
mov
pop
jns
or
jne
imul
jae
fildll
dec
push
mov
adc
out
add
add
xchg
xor
movsb
lds
and
sbb
outsl
imul
add
xchg
loope
mov
sbb
popa
push
popa
test
xor
adc
ljmp
sbb
sti
xchg
jns
incl
adc
sub
fidivl
push
sub
sub
mov
adc
xchg
add
add
jo
movd
dec
repz
fdivrl
mov
push
cwtl
add
mov
and
je
jle
sub
das
xor
and
lods
sub
adc
shlb
scas
sti
add
or
fwait
stos
mov
popa
push
fldcw
jp
xor
call
lret
add
test
mov
xchg
mov
add
stos
dec
push
inc
pop
push
inc
inc
cmp
pop
lret
mov
push
mov
call
inc
clc
cmp
mov
add
inc
fisttpl
mov
rol
add
mov
mov
lea
jae
mov
cmp
fsubs
jb
mov
add
inc
xor
add
add
lock
push
adc
andb
adcb
cld
adc
adc
repz
xchg
xor
in
add
add
xor
push
xchg
add
cmp
jo
pop
mov
mov
dec
into
add
std
mov
or
or
add
add
lds
in
lret
xchg
das
add
dec
mov
add
pop
adc
add
fiaddl
pop
movsb
sub
mov
add
inc
bound
insb
shl
add
test
imul
sbb
jb
leave
inc
dec
movsl
mov
lds
mov
inc
and
lret
lods
add
push
movsb
ret
add
lret
inc
or
jmp
lret
push
mov
add
mov
and
cltd
xor
add
divb
and
mov
jbe
xchg
sbb
stc
cmp
cmpsb
add
in
adc
add
add
mov
int
add
lcall
xchg
rcrb
jmp
repnz
sbb
add
pop
jl
iret
pop
push
add
and
popf
std
jl
imul
add
ret
lock
mov
repz
adc
add
add
mov
add
lods
xor
add
scas
sahf
xchg
dec
mov
in
push
orb
les
int
add
mov
or
push
add
mov
fsubr
pop
insl
popa
insl
jge
mov
push
add
out
sub
add
imul
inc
movsl
aaa
add
cmp
mov
sbb
inc
jmp
loop
add
add
mov
dec
and
adc
jno
lods
and
add
mov
in
in
add
popf
push
cmp
xchg
xchg
aad
test
mov
xor
push
outsb
das
add
movaps
int
cmp
scas
fmulp
out
jae
adc
out
dec
add
sbb
jae
mov
lea
ror
stos
movsb
mov
xchg
add
add
pop
and
aaa
xchg
flds
add
stos
outsb
andl
push
fsub
out
or
cs
sub
aas
jnp
shl
cwtl
mov
or
add
stos
scas
mov
or
add
lods
stos
inc
mov
add
mov
lcall
fmuls
mov
mov
push
popf
lds
sub
add
sbb
mov
add
add
jmp
inc
jne
add
bound
pop
out
add
add
jno
mov
jl
push
add
jecxz
jo
ds
add
jmp
popa
sbb
xchg
mov
and
add
inc
fistpl
scas
add
add
mov
mov
add
pop
shlb
add
or
inc
mov
add
leave
push
fldenv
lea
add
mov
push
sarb
add
sub
jb
das
adc
sbb
arpl
add
xor
mov
roll
xchg
add
push
ds
add
loop
mov
sub
push
add
lret
xorb
add
mov
lds
or
add
cmp
outsb
fmuls
rorb
testl
push
adc
faddl
dec
add
cmc
outsb
sbb
sbb
pusha
add
sub
cli
dec
adc
daa
pop
add
iret
push
mov
insl
mov
add
mov
pop
mov
xchg
jp
push
pop
daa
add
add
mov
or
sbb
rcll
cmp
mov
icebp
and
add
inc
add
das
add
cld
stos
jecxz
or
push
popl
in
ret
add
jbe
lret
add
push
dec
iret
add
mov
add
push
sbb
inc
xor
mov
cmp
add
test
in
add
pop
add
insl
add
xor
es
arpl
movsb
xor
lods
add
add
leave
das
mov
shll
jmp
jns
adc
stc
mov
adc
add
sbb
in
pusha
mov
push
push
out
cmpsl
pop
test
jns
orb
and
lret
add
add
cltd
fsubs
jmp
pop
adc
adc
jg
jns
add
adc
lock
sti
out
leave
adc
add
add
loop
xor
lcall
nop
addr16
xor
fisubrl
fidivl
dec
aaa
pop
push
sbb
pop
mov
jle
call
roll
add
add
jnp
add
add
ffreep
lret
mull
sbb
sub
mov
outsl
insb
clc
sti
push
jge
push
push
or
adc
icebp
add
shl
push
lret
dec
add
cmc
pop
xor
add
out
cli
scas
dec
push
into
or
mov
adc
cmpsb
lods
les
add
xor
inc
mov
clc
sbb
shrb
dec
mov
dec
add
xchg
js
sbb
jo
xor
xchg
sbb
and
or
add
arpl
push
and
pushf
add
out
sar
stos
or
add
mov
ja
and
dec
stos
sub
xor
mov
add
push
repnz
fwait
sti
sbb
iret
add
stos
daa
add
repnz
push
sbb
adc
adc
mov
push
movsb
xchg
dec
cmpsl
xchg
dec
add
add
les
dec
add
hlt
rorb
dec
cmp
sbb
jge
xor
jge
mov
add
lea
cmc
out
push
sbb
add
insl
xor
add
movsb
sub
sub
add
push
add
repz
scas
call
outsl
xchg
or
mov
test
add
aaa
pop
mov
out
xchg
push
mov
add
leave
je
mov
insb
mov
add
inc
jae
jnp
addl
outsb
lcall
sub
mov
add
pushf
push
fimuls
or
in
sbb
pop
add
out
add
push
ret
add
add
and
cmp
in
push
xchg
neg
filds
loop
imull
or
pop
data16
add
xchg
aad
xor
pusha
bound
inc
sub
add
pop
icebp
inc
shrl
add
adcb
xor
sub
jns
lods
leave
xor
mov
outsb
mov
inc
sahf
loopne
mov
bnd
jle
mov
and
movsl
add
sahf
add
xlat
in
add
pusha
dec
lretw
xchg
add
and
imul
add
scas
push
inc
repnz
sbb
insb
jge
mov
push
test
jle
add
mov
push
dec
push
fsubr
push
sub
xchg
xchg
dec
push
jecxz
adc
std
add
cmp
push
dec
add
leave
dec
cmp
jmp
imul
add
das
js
repnz
nop
add
mov
fcmovb
lret
inc
stos
mov
inc
or
inc
lods
test
les
mov
or
dec
lcall
stos
inc
push
adc
repnz
pop
mov
int3
jmp
mov
add
xor
cmp
dec
add
mov
fcoms
cltd
lods
scas
scas
mov
daa
push
imul
xor
repnz
add
std
mov
in
aaa
add
sbb
mov
arpl
movzwl
mov
jg
add
or
jg
inc
add
outsl
leave
xchg
xchg
or
and
imul
fisubrs
cmp
inc
movsb
add
jmp
rol
xchg
xor
add
add
in
pop
cld
rorb
inc
mov
lahf
out
xchg
and
add
out
ds
add
aad
mov
or
add
xor
ljmp
lea
lahf
mov
add
xchg
stos
popa
outsl
das
mov
add
add
pop
or
lds
out
mov
leave
inc
xchg
call
dec
sub
jmp
jecxz
add
dec
outsb
adc
popa
xlat
inc
cmpsl
cld
or
sub
adc
enter
ss
das
mov
mov
add
sbbl
int
testl
sbb
leave
cmovs
daa
or
ret
inc
sarb
add
xor
add
push
and
add
pusha
jbe
jle
sub
cmpsb
les
fs
mov
fimull
push
roll
movsb
jp
shl
decl
movsb
inc
add
sti
or
add
movsl
inc
fistpl
cmp
mov
inc
cmp
mov
push
pushf
xor
sub
pop
in
cmp
fcompl
xchg
mov
push
fidivs
in
add
adcb
cmp
adc
push
mov
or
mov
xchg
mov
inc
fists
or
add
add
push
jb
push
xchg
pop
enter
dec
add
and
mov
adc
xor
icebp
mov
and
jbe
add
push
sbb
push
ss
add
test
add
add
and
cmp
inc
sbb
sbb
push
subb
xor
mov
mov
mov
es
mov
cs
je
call
fiaddl
loopne
jg
add
or
addr16
pusha
aad
stc
mov
jbe
cmpsl
pop
fwait
add
jge
inc
fistpl
mov
dec
xchg
or
imul
inc
push
inc
subb
scas
sbb
pop
add
call
xorl
or
movsl
mov
dec
jae
jnp
adc
pop
add
add
lret
or
addr16
bound
add
mov
repz
ds
add
jnp
push
out
inc
and
add
out
bound
push
add
push
dec
sub
aaa
dec
mov
jae
imull
add
nop
aam
mov
es
or
and
les
hlt
mov
push
mov
xchg
xchg
mov
cmp
mov
mov
add
mov
jle
mov
pop
inc
int3
sbb
add
inc
je
jmp
cmp
cs
mov
or
popa
add
cltd
movb
fstps
outsl
ds
add
out
lds
or
fistpl
push
push
movsl
sbb
dec
add
lds
shr
and
loope
mov
out
inc
add
add
cs
xchg
dec
insb
fbld
adc
push
jae
mov
dec
aas
pop
sbb
movsl
cmp
leave
mov
out
add
dec
inc
push
stc
mov
mov
sub
adc
add
out
inc
je
push
imul
rcll
add
push
xor
or
inc
lods
fldenv
xor
add
jmp
cmp
add
push
push
rcrl
add
popa
xor
push
in
sbb
repnz
mov
inc
mov
nop
inc
dec
add
fisubrl
cmpsl
pop
inc
xor
push
and
pop
lods
xor
and
loop
pop
shl
add
test
jae
imul
sbb
mov
mov
push
mov
lret
add
lcall
add
add
lahf
fucom
lcall
scas
aam
push
fdivs
cmp
lock
add
add
test
add
add
xchg
sub
xchg
cmovo
xor
arpl
add
add
inc
add
les
mov
mov
lret
sub
sub
gs
sub
inc
push
and
adc
outsl
dec
mov
add
add
cld
mov
sub
xor
in
inc
in
add
cmpsl
and
fadds
outsb
mov
scas
pop
pop
mov
fisubs
sti
jns
add
add
insb
xchg
mov
mov
insl
pushf
fisubl
sbb
pushf
push
add
fstpt
add
aaa
xor
leave
sahf
xchg
jb
xchg
nop
jne
jno
out
xchg
mov
sbb
or
xchg
data16
ljmp
jns
mov
add
mov
add
cmp
push
movsl
add
xchg
jmp
xor
repz
cmpsl
pop
push
iret
cld
cs
sbb
jmp
shr
movsl
xchg
fstpl
lock
mov
push
les
mov
or
push
or
add
push
jg
incl
sub
cmp
out
jne
divl
popf
mov
add
cmp
pushf
mov
je
push
jb
lods
cmp
outsl
jl
add
add
add
fimull
pop
fucomi
leave
cmp
push
in
in
jmp
dec
add
adc
add
icebp
aad
movsb
add
adc
adc
add
jne
xor
xchg
xlat
sub
sbb
xchg
pop
push
icebp
fucomi
push
add
inc
lods
movsl
aas
add
add
das
adc
leave
sub
sti
lret
mov
sbb
push
adc
subb
xor
mov
addr16
dec
dec
or
adc
or
je
inc
daa
mov
das
xchg
or
push
or
add
add
popw
jp
scas
and
in
add
cmc
and
jl
in
add
dec
enter
out
pushf
adc
ficoml
add
and
cmc
scas
cmp
inc
and
xchg
out
dec
out
test
and
ret
sbbb
enter
cs
cmp
inc
pop
adc
cmpsl
in
add
push
insl
add
cmp
push
sbbl
aam
addr16
inc
xchg
dec
jmp
or
arpl
cmpsl
repz
push
rcll
pusha
and
ret
jae
hlt
mov
dec
les
mov
jp
incl
adc
add
dec
mov
loop
call
sbb
lcall
sub
sbb
lods
add
add
pop
inc
pop
iret
cmp
in
add
xchg
push
cli
xor
jbe
mov
add
mov
rcrb
and
push
push
add
iret
cmpsb
das
cwtl
pop
jns
hlt
cmp
cmp
sub
cli
out
or
pop
popl
push
in
push
fistl
gs
fwait
cmp
outsl
jnp
xor
call
adc
jno
add
inc
daa
mov
pop
stc
mov
pop
dec
flds
mov
xchg
fidivrl
mov
dec
insl
add
add
mov
stos
dec
add
add
pushf
hlt
mov
xlat
and
in
add
pop
push
xor
push
add
test
sub
mov
pop
lds
mov
dec
add
pop
cltd
popf
add
loopne
push
pop
stos
cltd
add
adc
add
cmp
and
or
pop
xchg
leave
or
xchg
or
addb
sbb
mov
add
cmp
repz
add
nop
jae
xchg
add
add
pop
or
mov
pop
adc
add
jbe
mov
roll
repz
fstps
inc
rorl
cmc
js
sar
sbb
mov
pop
xor
or
fbld
mov
inc
test
arpl
cmpsl
cmp
add
in
es
add
cmpsb
leave
in
adc
push
dec
dec
jae
lret
test
bound
int
push
inc
sub
sbb
icebp
les
shrl
cmovno
cmp
pop
aad
pushf
aam
mov
or
pop
enter
mov
adc
lahf
adc
push
hlt
je
lret
add
loopne
sarl
pusha
jp
sbb
cs
movsb
xorl
imul
pop
nop
push
sti
out
push
add
pusha
inc
adc
add
shrb
cwtl
push
pop
popl
lret
mov
push
dec
adc
insb
std
lahf
mov
outsl
ffreep
cmp
aaa
loope
call
test
int3
inc
popa
inc
lret
jns
mov
or
jl
loope
jns
aas
les
dec
xchg
mov
jnp
in
push
jmp
cltd
fbld
inc
int
or
push
inc
cli
ret
in
loop
cmpl
push
inc
sub
sub
fidivs
dec
sahf
outsl
std
mov
shlb
sub
loope
adc
call
pop
imul
out
adcb
push
outsl
inc
loop
jecxz
stos
dec
insb
pop
movsl
outsb
sbb
inc
lahf
int
out
xlat
pushf
cmpsb
loopne
nop
outsl
or
jl
sub
inc
cmpsl
mov
jg
or
int3
daa
mov
mov
insb
pop
in
popa
xor
push
in
insb
mov
stc
add
add
jbe
cmp
mov
mov
add
add
sti
push
roll
add
add
sbb
add
add
cmp
mov
lret
jnp
mov
fcomps
add
test
test
push
add
mov
or
js
add
rcrb
push
insb
es
cli
repz
outsb
in
and
pop
insl
xchg
in
aad
dec
shrl
jae
jno
mull
and
push
stos
sbb
sbbb
sti
push
nop
jbe
leave
pushf
mov
cmp
aad
sbb
jp
int3
xor
popf
mov
add
jae
repnz
ss
sub
shrl
cltd
and
adcb
and
push
sbb
mov
push
or
xchg
ja
lret
push
or
adc
jp
dec
decb
mov
rorb
test
add
xchg
das
mov
pop
jno
mov
add
fabs
faddl
test
add
ljmp
mov
push
dec
pop
je
cltd
xchg
mov
mov
jmp
insb
cmp
rorb
adc
dec
fldt
loope
xor
and
mov
sahf
mov
nop
add
in
int3
sub
loop
and
add
cmp
fs
fdivs
add
stos
mov
lods
push
je
mov
int3
hlt
or
shl
loop
xor
aam
fildll
push
and
adc
aaa
aam
cmp
xchg
sbb
stos
mov
push
mov
lea
outsl
sbb
mul
testb
xchg
or
push
add
stos
push
pop
add
add
pop
arpl
inc
jnp
test
out
jge
xchg
bound
dec
nop
sbb
xlat
or
sbb
enter
and
add
out
ret
enter
ret
rorl
orb
jmp
dec
sub
cmp
mov
cli
jno
add
push
outsl
jb
add
dec
bound
push
sti
add
sbb
and
mov
mov
add
xchg
sbb
add
add
cmp
sub
or
xor
out
jp
mov
lcall
sar
pusha
imul
je
movsb
pop
add
cmp
mov
jge
add
add
cmp
mov
mov
xor
mov
push
lret
add
je
add
repz
movsl
mov
xlat
jnp
xorb
or
add
add
add
sbb
ljmp
test
mov
or
insb
jge
call
es
and
out
out
mov
and
sbb
sub
inc
xor
sbb
jne
push
bound
add
xchg
xor
push
mov
dec
jmp
mov
arpl
icebp
and
jnp
nop
add
daa
arpl
add
push
in
enter
mov
mov
sub
inc
es
adc
or
push
add
or
pop
mov
pop
pop
adc
xlat
jp
imul
add
add
mov
mov
add
mov
xlat
push
mov
mov
pop
sbb
jbe
mulb
mov
sbb
dec
mov
ljmp
jbe
ljmp
lock
add
adc
add
add
xor
repz
add
outsb
fldt
inc
mov
push
pushf
insb
test
addb
sub
jp
es
push
push
sbb
sahf
or
jecxz
cmp
jecxz
imul
lret
push
jmp
loop
add
jecxz
add
js
mov
add
dec
xchg
cld
jl
fisubrl
add
adc
mov
sbb
add
outsb
xor
xor
mov
out
call
divb
es
repnz
out
scas
add
sbb
nop
fistpll
add
mov
imul
repnz
add
jecxz
inc
cmp
add
cmpsl
jns
mov
mov
mov
lods
sarb
iret
add
dec
push
iret
xchg
addl
add
add
xor
nop
mov
xchg
sahf
out
pop
jmp
je
xor
mov
sbb
pop
mov
movsb
cltd
or
add
pop
call
mov
cmp
filds
test
lahf
xchg
inc
fidivrs
jns
roll
xchg
aaa
mov
xchg
xlat
les
jmp
add
in
mov
pop
push
pushf
jne
mov
lock
aaa
inc
dec
add
add
dec
data16
adc
icebp
adc
into
push
fstps
mov
push
mov
add
or
jg
xchg
cld
cmp
xor
ds
cmp
pop
orl
lret
mov
sub
lret
add
push
pop
mov
push
add
add
scas
add
mov
in
add
mov
add
mov
add
popa
fstl
cmp
xlat
imul
loop
add
lahf
lret
xchg
scas
mov
push
pusha
movsb
popl
add
int3
mov
add
jbe
mov
add
sbb
adc
aam
aaa
mov
les
add
call
inc
cmp
add
push
mov
gs
ja
test
push
pushw
out
lahf
pop
int
add
add
mov
pop
js
mov
sbb
pop
dec
pop
sub
icebp
sub
lret
add
xchg
push
jmp
ficoms
test
pop
shlb
add
jne
mov
fidivl
dec
scas
adc
int3
stos
ficomps
and
aas
add
test
mov
add
push
and
mov
dec
add
add
mov
cmp
mov
add
lea
aaa
xchg
jl
cltd
icebp
or
xor
mov
mov
mov
movsl
shll
cmpsb
mov
or
add
aam
stos
movsb
fcmovu
mov
mov
push
and
jmp
ret
push
xlat
push
addl
mov
cmp
stos
scas
add
mov
verr
push
mov
cmp
mov
jne
add
ja
inc
nop
xor
in
pop
add
pusha
jnp
outsb
das
mov
cmp
adc
jmp
sub
mov
sbb
adc
push
adc
rolb
fldl
add
add
movsl
and
or
add
push
add
add
ds
data16
ss
jp
ror
fisttpl
xor
leave
aas
add
add
lds
dec
sub
fdivrs
stos
mov
sbb
mov
xchg
stos
repz
add
xchg
loopne
xchg
dec
jno
in
add
stos
xorb
add
add
popf
jmp
xchg
add
add
pop
imul
add
jo
adc
or
mov
cmp
add
sub
or
xor
je
loop
in
sbb
imul
test
add
mulb
add
incl
adc
test
pop
and
lea
add
enter
sub
mov
insb
add
mov
jmp
ficompl
add
pop
repnz
add
add
add
push
add
and
sbb
add
add
jb
add
fcomi
sarb
cli
pop
cmp
adc
jns
mov
xor
add
add
dec
dec
mov
mov
add
loope
movsb
pop
xchg
add
jbe
jmp
nop
adc
popf
lods
addb
dec
cmc
ret
sti
incb
mov
inc
in
add
add
add
daa
aaa
push
lcall
stos
and
cmp
mov
xor
or
jne
mov
mov
jmp
lret
dec
add
rcr
les
aam
dec
add
add
push
mov
mov
js
imul
add
add
pushf
add
out
sbb
jnp
loopne
add
out
mov
push
out
xchg
push
cmp
xchg
scas
push
xor
das
bnd
pop
xor
rclb
std
push
cmc
inc
add
lock
inc
xorl
or
add
incb
test
sub
jno
inc
cmc
rolb
push
xchg
inc
add
test
push
add
movsl
xchg
mov
push
testl
mov
and
cld
mov
mov
mov
loope
push
adc
adc
jle
iret
outsl
sbb
xchg
add
adc
jmp
push
add
lods
jne
dec
mov
daa
dec
inc
icebp
sbb
rcll
sub
lock
push
leave
cmp
aaa
xlat
jo
adc
fiaddl
add
cmpsl
sub
push
or
mov
lret
decb
add
fwait
ret
rolb
sub
pop
add
cmp
bnd
add
jns
add
xor
adc
ficoml
jp
xchg
daa
sub
jne
jp
and
or
dec
inc
xchg
int3
sub
mov
add
push
ja
mov
add
pushf
stos
add
pop
mov
cmc
aas
lock
pop
in
and
mov
inc
inc
add
add
push
and
out
mov
jge
cwtl
mov
ret
daa
xchg
adc
pusha
loop
stos
push
add
cmc
mov
sbb
shl
sub
rcrb
sbb
add
dec
add
add
aad
loopne
in
sub
loope
xchg
push
pusha
dec
dec
inc
stos
out
int3
lret
ja
lret
dec
cmpsb
xor
or
les
push
and
lcall
xor
pop
jns
leave
xor
adc
lcall
push
cmp
bnd
mov
push
pop
pop
gs
dec
sarb
dec
cmp
in
add
push
add
xchg
adc
movl
out
out
mov
add
jp
add
add
add
mov
jno
stc
cld
insl
inc
push
add
stos
dec
shl
aas
mov
rorl
pop
mov
repnz
in
je
lahf
mul
loopne
or
sub
add
xchg
int3
out
cmp
cmp
sbb
add
into
lods
add
sbb
loopne
out
push
fistps
or
sub
xor
mov
packssdw
in
sbb
adc
rcr
test
test
out
imul
jo
call
imul
pop
dec
mov
add
jg
shlb
shlb
std
notl
js
mov
xchg
sub
shl
mov
addl
test
add
add
mov
std
pop
and
pop
repz
mov
cmp
test
add
push
push
lret
add
add
jmp
js
or
mov
into
lock
pop
push
ss
and
es
imul
fisttpll
cli
jmp
daa
pushf
and
imul
cmpsl
fistpl
xchg
or
int
fsts
rcll
add
push
mov
leave
sub
sub
fnsave
xchg
loop,pt
test
pop
push
cs
movsl
fadds
arpl
outsb
mov
xchg
adc
adc
add
xor
add
mov
add
adc
ret
inc
stos
add
cld
scas
ret
pop
xchg
cmpsl
mov
mov
inc
sub
rcr
mov
cld
js
ja
or
fcmovbe
inc
pop
movl
int
add
add
stos
les
or
add
jmp
adc
pop
add
xchg
dec
or
sub
gs
sahf
mov
mov
daa
mov
add
adc
sarl
sub
fstpt
fwait
inc
or
out
cmp
rcl
sub
aaa
mov
std
testb
ja
xchg
cmp
scas
rclb
ss
add
xlat
dec
mov
stos
add
es
add
add
jbe
clc
lds
mov
int
add
sub
sbb
leave
add
add
xor
add
add
add
push
ljmp
push
push
mov
cmp
popa
es
add
add
or
jle
adc
add
pop
push
cld
mov
mov
incb
add
dec
dec
push
out
mov
cwtl
in
add
xor
gs
mov
in
test
add
add
xchg
add
add
mov
aad
add
add
out
mov
jl
fmuls
add
repz
sarb
ss
add
add
fs
out
sar
roll
add
rcrb
jecxz
push
add
add
add
jo
repz
cmp
adc
mov
add
out
and
dec
push
cmp
push
sbb
pop
pop
mov
push
das
push
loopne
rcrl
push
or
xchg
stos
mov
addr16
mov
mov
or
fnsave
ss
clc
fwait
cmp
outsl
jnp
jecxz
test
mov
push
mov
jge
add
add
mov
data16
add
add
dec
imul
xchg
dec
jb
add
add
cltd
lahf
push
add
insl
ss
repnz
mov
add
add
xchg
add
call
pop
mov
sahf
mov
push
dec
sub
dec
loope
mov
ficoms
test
pop
filds
add
dec
jns
push
cmp
pop
sbb
mov
ja
mov
add
add
loopne
add
ss
inc
mov
add
bound
push
std
add
add
inc
data16
jno
and
jne
add
add
cmp
cmp
jle
add
stos
pop
mov
scas
mov
mov
mov
lret
pusha
sbb
test
outsl
aas
int
daa
cmpb
iret
fadds
add
stos
gs
push
out
push
fs
sub
stos
add
or
add
add
add
add
pop
xor
idiv
jg
test
cmpsl
dec
or
in
scas
xchg
arpl
jb
push
mov
or
push
iret
xor
sbb
lods
sti
push
inc
push
add
aaa
insl
lods
iret
std
xor
adc
mov
pop
sub
jge
and
hlt
je
add
and
out
mov
shr
filds
adc
or
add
pop
or
mov
ret
es
mov
add
fcomi
shlb
out
mov
push
cwtl
in
xchg
push
addl
hlt
cmp
in
inc
rorb
dec
lea
inc
adc
lods
insl
ss
sub
lea
sbb
je
sbb
incl
push
mov
bsr
sub
stos
jge
mov
add
add
pop
jno
les
das
aaa
scas
and
mov
cs
dec
mov
lods
sub
incb
xor
cmp
mov
add
imul
add
xorb
in
outsl
jbe
test
sub
mov
clc
cmpsb
add
mov
dec
es
icebp
and
insl
shr
rcrl
imul
sbb
jecxz
adc
push
aaa
add
scas
jle
mov
jp
aam
data16
lahf
sbb
in
call
push
sub
push
xor
pop
mov
adc
imul
mov
js
pop
sahf
in
jge
mov
push
or
std
cmpsb
les
inc
jne
std
sub
push
dec
jle
inc
mov
xchg
adc
cld
dec
in
xor
mov
dec
sti
pop
movsb
push
pop
or
inc
mov
outsb
mov
cltd
std
xchg
mov
aaa
jle
or
mov
jbe
mov
ret
pop
push
push
aaa
or
movsb
aad
pop
cmpsb
sbb
add
add
add
xor
sahf
xchg
jo
push
sbb
adc
push
xor
mov
imul
in
or
add
cmp
cmp
out
cmpsl
sti
mov
cmc
adc
and
add
cli
lahf
xor
ret
mov
or
shlb
add
or
mov
add
mov
mov
pop
mov
rclb
or
jl
add
inc
pop
and
stos
xchg
xchg
lods
inc
mov
out
testl
mov
add
mov
stos
push
jbe
add
insl
outsb
imul
cmp
aad
jg
addb
add
add
movsl
testl
sub
shlb
add
add
dec
jno
cmp
sub
xorb
idivb
sbb
add
fsubr
sub
lcall
cmp
add
cmp
adc
jmp
insb
clc
push
cmp
test
add
sub
jns
and
add
cmpsb
mov
add
add
push
cmp
ds
cmc
jmp
in
pusha
xor
jl
stc
add
push
out
add
add
loopne
sti
add
sbb
push
hlt
add
mov
lahf
and
or
push
add
push
adc
dec
mov
fcmovb
mov
add
xchg
jge
add
shll
xchg
sub
add
add
jne
push
add
movsl
sarl
sti
stos
insb
dec
inc
cwtl
shlb
movsl
nop
push
add
loope
stos
fs
out
jp
pop
add
or
test
cmp
mov
and
adc
xchg
mov
fadds
ljmp
lock
bound
sar
add
adc
sbb
fcompl
cs
sub
dec
xchg
pop
cwtl
mov
xchg
movsl
cmpl
into
add
cmpsl
xchg
out
dec
popf
aaa
add
jle
das
cmp
add
imul
add
pop
mov
add
imul
nop
adc
push
add
lahf
bound
add
fldl
jl
add
add
inc
add
jle
cmp
rolb
and
mov
pop
pop
stos
sbb
lret
dec
frstor
add
les
sbb
or
push
jecxz
out
shll
and
adc
mov
cmp
pop
leave
dec
dec
mov
punpcklbw
gs
rorl
fstl
or
int3
stos
repz
ljmp
sub
add
mov
jecxz
js
add
add
sub
adc
jno
rolb
mov
push
imull
jge
push
adc
add
add
sub
xor
pop
aam
inc
in
pop
mov
lds
repz
rol
das
add
sbb
add
int
cmpsl
sub
out
popa
sbb
pop
cmp
add
addb
mov
or
add
pop
or
sbb
scas
adc
hlt
add
js
mov
stc
inc
jbe
push
push
call
adc
add
jge
sub
lret
add
add
mov
dec
gs
sub
lock
xchg
pop
insl
arpl
sbb
push
or
push
call
aam
mov
cmp
fwait
add
and
sub
cmpsb
cli
xor
jno
cmp
pop
jmp
mov
add
into
shll
pop
loopne
inc
bswap
je
jmp
xchg
dec
adc
xchg
mov
mov
add
push
inc
push
add
ja
adc
clc
imul
xchg
sbbl
or
imul
xchg
fnstcw
bound
sub
pop
arpl
mov
add
mov
sub
mov
sbb
test
jl
jecxz
fcomp
shll
es
mov
pop
cli
and
add
leave
arpl
movsb
cwtl
ret
jno
cmpsb
jns
mov
out
sarl
pxor
xchg
fst
sbb
bswap
add
add
cmpsl
mov
test
pop
imul
add
rol
adc
fisubl
sub
outsl
enter
cli
push
das
test
hlt
shrb
and
mov
xlat
mov
insl
js
popa
movsl
push
jnp
in
mov
mov
shll
sbb
pop
outsl
leave
std
out
je
scas
sti
xor
lods
pop
add
faddp
and
add
insl
mov
mov
dec
daa
lcall
add
insb
dec
mov
add
add
cld
dec
hlt
lea
jmp
mov
arpl
fsub
mov
je
sbb
mov
sub
aaa
bound
add
add
inc
inc
ret
add
push
lds
pop
fs
jge
mov
test
inc
and
add
jecxz
xchg
mov
movsl
clc
shrb
das
push
adc
dec
add
add
daa
dec
dec
pop
lock
cmp
cmp
pop
aam
idivb
icebp
into
sub
add
jg
mov
xchg
or
stos
sbb
xor
jns
mov
mov
stos
insb
pop
arpl
mov
imul
mov
stc
cmc
jmp
andl
and
rol
mov
xchg
xchg
add
xor
or
mov
push
jb
sbb
int
sar
jmp
iret
int3
add
adc
bound
jge
imull
or
xor
fs
mov
jns
sbb
call
sbb
ds
leave
pop
dec
add
jmp
add
xchg
cmp
xchg
imul
dec
rorb
mov
js
add
mov
add
mov
in
cmpsl
xchg
mov
add
stc
aaa
shll
add
adcl
dec
dec
jge
push
cmp
sbb
cwtl
dec
pop
clc
mov
push
cmpl
sbb
iret
aas
bound
mov
loop
jl
jge
lret
cltd
aaa
lret
inc
lods
push
subb
mov
das
cmpsl
mov
fadd
movsb
push
jno
cld
xor
rcrl
test
and
inc
frstor
jns
xchg
cmpsl
pop
loope
icebp
xor
pop
jge
pop
mov
pop
push
call
mov
push
push
flds
sbb
and
orb
xorb
out
and
add
jg
dec
cmp
inc
fldcw
inc
xchg
pop
inc
add
add
and
jns
adc
xchg
nop
pop
and
sbb
rcrb
mov
add
mov
xchg
inc
or
adcb
and
cltd
in
mov
stc
aaa
imul
fstp
rclb
add
insb
aam
push
mov
or
test
cli
add
add
mov
in
clc
mov
mov
mov
stc
add
add
xor
lea
in
je
xor
cwtl
out
add
add
out
in
shlb
loope
adc
xor
add
add
adc
out
popf
or
outsl
ficomps
in
pop
fdivr
mov
loopne
test
push
cmpsb
cmp
sbb
fcomip
out
xchg
gs
jmp
add
cmp
repnz
dec
xor
add
push
lret
mov
pop
jno
add
jp
add
add
dec
sub
enter
xchg
mov
inc
sbb
imul
add
jle
cmp
lods
std
fdivr
or
add
add
ss
int
insl
sbb
inc
push
scas
inc
addr16
push
jg
bound
es
xchg
add
lcall
data16
stos
xorl
add
mov
addr16
sub
inc
jecxz
pop
push
es
leave
inc
push
dec
in
test
xor
pop
pop
incb
dec
and
cmpsl
mov
dec
adcl
jbe
add
dec
add
add
xor
bound
and
add
fs
cmpsl
mov
scas
mov
and
fsubrs
popf
dec
add
add
push
je
sarb
xor
jmp
add
jecxz
mov
add
add
aaa
jge
inc
xor
cmpsb
push
sub
xor
inc
iret
cmpsb
sar
dec
rcll
test
pusha
cmc
cmpsb
push
dec
es
icebp
and
xor
out
daa
xchg
mov
and
jge
sbb
into
ljmp
cmp
add
pop
add
pushfw
mov
add
jge
and
in
filds
in
nop
and
dec
arpl
add
insb
movsb
mov
mov
jp
out
test
push
xor
dec
dec
je
fcmovbe
mov
push
push
add
add
clc
inc
inc
add
das
imul
jbe
add
add
out
std
mov
test
pop
inc
pusha
mov
push
jne
inc
ret
sbb
or
mov
and
stos
in
jge
xchg
and
add
add
cmp
mov
jns
add
cmc
incl
add
test
xchg
cmpsb
in
add
push
fistl
add
add
sarl
add
scas
push
jbe
test
jecxz
add
add
xchg
sub
cli
popa
dec
jae
push
roll
adc
and
pop
xchg
xchg
inc
add
icebp
jl
lock
data16
jo
out
and
sub
or
mov
ret
cmp
pop
scas
push
lret
sub
dec
in
fsubrl
fimuls
mov
xor
mov
jb
add
ret
repz
in
mov
add
push
mov
mov
or
repz
add
repnz
mov
mov
fnsave
out
sub
cmp
mov
in
mov
outsl
ret
lret
pop
add
pop
sbb
fs
and
add
xchg
notb
jle
xchg
add
adc
xchg
lahf
and
jb
lods
push
cmpsl
mov
enter
insl
pop
sub
cmpsb
add
popa
into
add
add
dec
inc
lods
add
or
cltd
ss
imul
mov
pop
scas
jle
and
xchg
jge
or
push
roll
in
sub
xchg
or
hlt
sbb
xor
sbb
test
inc
dec
movsl
sbb
mov
cmc
lods
mov
dec
push
xor
add
mov
adc
mov
push
bound
add
fs
add
or
or
adc
mov
repz
outsl
mov
test
add
jle
loop
sbb
outsl
jl
add
mov
test
and
cmp
mov
repnz
cmc
hlt
pushf
push
mov
inc
push
add
push
and
outsl
movb
adc
dec
cltd
sbb
sbb
fsubl
insl
je
fs
test
add
add
xchg
rcrl
mov
add
add
dec
xor
mov
xchg
testb
jl
pop
pop
jne
dec
mov
data16
fcom
repz
inc
mov
xchg
jb
fnstsw
dec
push
enter
cmpsl
imul
xchg
fadds
out
es
push
mov
cld
icebp
add
ss
hlt
cmp
shl
mov
mov
pop
mov
add
add
aam
push
jnp
inc
xor
out
xchg
adc
es
add
cmp
icebp
dec
adc
jge
mov
das
cmp
mov
inc
pop
stos
jl
cli
into
or
aaa
inc
or
or
sub
je
leave
cli
add
add
stos
push
xchg
das
xor
dec
add
sub
fdivs
fdivs
or
and
push
jp
test
or
or
mov
clc
mov
ja
sub
pop
mov
movb
lret
sub
adc
and
xor
movsl
fldl
xlat
stc
ror
sarb
sahf
ret
jae
mov
cmpsb
pop
mov
push
pop
gs
adc
xchg
add
xor
daa
and
movsl
stc
test
xor
push
notb
sbb
cmp
ljmp
cmp
add
movsb
xlat
adc
xor
cmpsl
repz
mov
mov
adc
je
leave
nop
aas
shll
test
xchg
in
add
push
ljmp
loope
push
mov
loop
add
fadd
push
pop
incl
inc
insl
outsb
jl
shl
add
push
mov
loope
sbb
sub
fs
stc
add
add
outsl
cmpsb
enter
xor
add
xchg
cmpsb
leave
ljmp
and
lock
xor
lcall
rcl
cmpsl
mov
xchg
cmp
xchg
or
add
jns
shl
add
leave
shrb
lahf
add
pop
dec
mov
adc
lret
add
call
mov
mov
mov
jae
mov
popa
add
add
xchg
xlat
dec
add
outsl
imul
inc
mov
push
pop
out
daa
lods
dec
imul
add
add
push
xchg
sub
add
cmp
add
clc
push
fadd
xchg
or
rol
movsl
inc
roll
add
add
inc
jge
mov
cmp
sbb
fiaddl
imul
hlt
stos
add
pop
fnstcw
xor
pop
add
cmpsl
pop
in
inc
push
push
and
add
lcall
cmp
add
mov
movsb
push
sbb
xor
add
aad
call
add
int
and
stos
cmp
dec
aad
push
jg
or
pop
cmp
adc
and
xchg
xchg
popa
push
xor
fcmovbe
xor
movsb
jnp
sbb
lods
fmuls
mov
call
sarl
lods
imul
jnp
lods
jae
xor
xchg
adc
ja
jecxz
and
std
in
mov
pushf
jge
jmp
add
or
sub
mov
cs
rolb
add
jb
pop
dec
add
add
insl
aaa
mov
sub
aas
ds
and
movb
ja
xchg
mov
ja
cmpsl
lds
mov
cmp
pop
jne
mov
add
add
in
loopne
cmp
outsb
dec
xlat
test
rolb
add
fs
push
add
dec
or
xchg
sub
inc
add
scas
inc
push
cmp
frstor
add
jge
cs
push
rolb
pushf
add
lods
add
push
outsb
cmc
fwait
pop
sbbb
pop
fs
out
adc
push
sbb
int
and
iret
push
adc
pop
aam
pop
jle
enter
movsl
dec
xchg
repnz
push
cs
lods
and
jp
and
lds
movsl
jae
stos
arpl
nop
dec
and
ficomps
lods
sub
mov
and
mov
mov
add
adc
lods
out
add
xchg
sub
mov
or
sub
cwtl
dec
mov
iret
das
mov
fs
clc
aaa
cwtl
lods
daa
mov
jno
push
in
push
xchg
test
xchg
push
in
xchg
or
rol
lea
mov
leave
push
dec
sbb
rcll
rclb
lcall
inc
cmovl
mov
jl
enter
cmpsl
mov
dec
adc
jo
mov
pop
js
push
ffreep
cmp
les
mov
dec
jg
sbbb
negl
adc
popf
outsl
cmpsl
int
mov
add
hlt
jbe
cltd
adc
and
mov
push
scas
xor
mov
mov
dec
sahf
add
add
int3
mov
sub
push
mov
add
dec
mov
sub
mov
sarb
pop
testb
jle
lcall
jb
xor
mov
incb
add
mov
ret
jae
jp
sub
pop
add
adc
push
mov
add
dec
test
add
mov
outsb
sub
add
and
flds
add
andl
shl
add
add
ljmp
lea
mov
fdivrs
imul
enter
xchg
and
cld
sbb
jnp
aam
mov
sub
xchg
pusha
pop
sbb
add
cld
shrl
adc
jb
cli
or
mov
into
mov
insl
leave
jecxz
sbb
sbb
div
cmp
add
push
or
stos
nop
lock
cwtl
fs
out
rcrl
add
inc
popf
adc
add
stc
test
test
stc
es
ss
cmp
notl
pop
push
mov
inc
cmp
insb
or
add
lods
and
mov
jns
mov
pusha
movsb
addl
dec
mov
mov
movsb
fwait
lods
hlt
data16
arpl
adc
mov
dec
cmpsb
add
pusha
js
cmp
call
add
movsb
arpl
add
repz
cmpsl
les
dec
jns
mov
add
cmpsb
adcl
jo
rorl
andb
rorl
sub
jmp
lds
cmpsb
mov
xor
push
out
and
add
sbb
add
addb
pop
das
pushf
mov
movsb
dec
mov
mov
dec
and
add
add
aam
sub
pop
add
add
stos
mov
xor
roll
push
hlt
pushf
div
add
add
mov
add
mov
test
sti
xchg
jns
bound
stos
scas
mov
std
or
pop
push
jo
daa
cmpl
test
or
jmp
inc
add
repz
and
add
imulb
mov
sbb
fcoml
sub
jnp
movsb
bound
gs
int3
jp
into
mov
out
inc
add
dec
outsl
xchg
xchg
xchg
fldl
outsl
push
negb
outsb
sbb
or
test
test
jo
pop
daa
std
sbb
adc
mov
sarl
shll
add
cli
jge
sbb
cld
fisubl
test
icebp
pop
sub
aaa
xchg
cmpsb
sub
add
add
jmp
push
cwtl
out
stos
push
xor
add
or
or
dec
movsb
pop
in
pop
push
je
inc
ja
xchg
sub
pop
test
lret
das
clc
push
add
outsl
push
cmpsl
into
test
das
sbb
lock
data16
jl
hlt
or
xor
jp
into
ret
fcmovnu
rcll
cmp
maskmovq
testl
dec
lds
scas
cli
jp
ljmp
icebp
push
aaa
mov
sbb
or
jns
add
sub
mov
push
sbb
test
mov
negb
jle
sub
push
mov
int3
dec
ret
sbb
pop
add
imul
add
add
add
xchg
filds
mov
daa
sub
jb
das
add
pop
ja
mov
daa
jg
jg
dec
push
jp
ret
add
int3
push
add
ret
xlat
inc
xlat
cwtl
xchg
inc
sub
xchg
aad
mov
add
jle
popa
fcompl
pcmpgtw
sub
add
sbb
cmp
das
add
lock
pop
in
xor
pop
loope
repz
add
lret
flds
ficomps
ret
imul
adc
imul
add
rclb
sbb
sbb
shlb
push
in
pop
and
cmovo
lahf
dec
xor
fcmovbe
sub
insb
jmp
sbb
popf
xchg
cmc
push
pop
lds
out
or
sub
in
jg
jnp
add
mov
adc
loop
aaa
stc
ljmp
dec
pop
add
aam
pop
fcomi
aad
add
out
push
fiaddl
sbb
cmp
xchg
shll
push
xchg
add
inc
mov
pop
add
jno
or
cmpsl
dec
xor
xor
iret
adcb
add
push
add
mov
xor
fs
shr
test
xchg
mov
or
lods
leave
stos
add
lea
cmpsb
icebp
push
pop
adc
xor
adc
lret
xchg
adc
pop
fmul
mov
pop
not
mov
adc
subb
mov
fcomi
mov
shrl
rclb
lds
adc
ljmp
dec
mov
loope
cmp
add
mov
ret
sti
add
add
dec
pop
ss
add
movsb
sub
addb
out
fstps
insl
sarb
lahf
leave
ds
push
xchg
cmpl
push
inc
bound
adc
sti
add
add
out
clc
push
outsb
adc
lods
add
mov
and
jnp
les
add
or
pusha
popl
fisubrs
xor
or
xchg
ljmp
das
sbb
sti
mov
daa
insb
sub
mov
mov
add
pushf
mov
mov
pop
int
pop
dec
loop
mov
mov
iret
mov
or
and
fadds
inc
pushw
imull
testl
icebp
out
add
out
fists
cmp
cwtl
out
jle
xchg
outsb
test
add
add
mov
in
pop
clc
jae
xchg
xchg
arpl
ss
mov
insb
repnz
jp
jmp
push
ret
pop
sti
push
lcall
cmpsl
cmp
lret
in
push
call
shrb
rcll
xchg
add
or
ja
add
mov
out
xchg
jmp
mov
ret
into
pop
or
inc
pushf
xchg
dec
cmc
cs
dec
pop
fbld
jns
adc
inc
cmp
fisubl
movsb
sbb
fiadds
sbb
popf
jp
mov
adc
cmp
mov
std
push
rcll
cmp
aam
fsubs
mov
scas
mov
out
xchg
out
add
aam
jae
mov
sbb
subb
and
and
ret
push
and
out
xchg
cli
mov
shlb
pop
test
mov
lea
sub
inc
roll
imul
popf
inc
hlt
add
mov
push
push
xchg
testb
add
pop
jge
pushf
mov
out
arpl
cli
out
mov
push
xor
xor
mov
jl
inc
push
xchg
push
add
dec
lds
aam
cmp
movsl
jae
xor
xchg
movsb
psllq
add
call
sub
dec
pop
push
sbb
adc
mov
pop
add
add
sub
adc
dec
sub
jp
add
lahf
loopne
out
mov
add
pop
imul
dec
out
insl
sub
xor
inc
sbb
jns
push
add
out
cmpsl
in
mov
sbb
mov
jmp
add
adc
fsts
inc
pusha
mov
xlat
adc
rcll
loopne
jae
xor
sbb
xchg
add
das
mov
sub
adc
sarl
call
stos
mov
or
cmp
mov
aas
inc
stos
outsl
jl
popa
repnz
push
out
jl
xor
pop
repnz
hlt
pushf
popa
jg
dec
cs
xor
sbb
xor
mov
scas
cmp
lods
adc
psubusw
lods
push
add
add
xor
pop
push
push
scas
sbb
cs
cmpsb
add
push
dec
in
pop
xchg
cs
or
sbb
dec
xor
xor
and
dec
adc
push
xchg
push
out
pop
push
jl
mov
jnp
imul
adc
rcrb
push
mov
push
push
enter
inc
sbb
lods
push
bound
inc
fistpl
enter
push
inc
leave
mov
adc
mov
add
add
push
int
xchg
out
lret
add
or
mov
add
add
aas
or
fcmovnbe
add
add
mov
xor
add
add
test
or
add
add
mov
add
push
mov
add
add
mov
add
add
sbb
daa
add
add
lahf
xor
loope
mov
push
pop
add
cmp
mov
xchg
jns
orb
mov
xor
enter
xor
jmp
or
push
ja
fstpl
add
std
push
adc
ljmp
rcrb
mov
gs
lods
and
cltd
and
out
inc
jecxz
dec
cmp
jne
mov
add
rcll
fdivl
cmp
arpl
xchg
push
inc
sarb
sahf
movsl
push
std
dec
add
inc
imul
mov
xchg
das
add
push
and
dec
push
loope
sahf
push
out
pusha
arpl
jg
push
cli
jg
dec
jmp
mov
or
add
add
insb
push
inc
pop
and
pop
add
dec
js
xor
cli
mov
sub
sub
push
sarb
mov
enter
xorps
adc
add
insb
dec
add
jbe
out
aam
les
loop
dec
push
sbb
adc
mov
stos
fstps
add
adc
adc
adc
sub
add
call
jno
sti
pop
mov
cmpsb
mov
add
add
or
lods
mov
aad
loope
int3
sub
mov
sti
add
cli
scas
adc
cld
sub
sub
aaa
icebp
insb
pop
lods
arpl
dec
sbb
test
xchg
subb
add
das
mov
xchg
dec
and
add
repnz
out
lods
add
jle
int3
fistl
jb
into
cltd
es
mov
shrb
pop
inc
jns
jl
cld
aas
testl
push
stc
stos
in
inc
jecxz
xchg
testl
mov
dec
popa
cmovbe
pop
jecxz
mov
loopne
jge
jae
adcb
adc
cmp
inc
sub
xor
roll
mov
mov
sti
outsl
dec
pop
outsb
xor
leave
bound
fisubrs
insb
push
pop
lock
test
add
adc
add
cli
movl
enter
and
push
mov
ficoml
jge
popa
mov
add
add
fcoml
stos
lea
mov
jecxz
mov
jg
dec
adc
add
ficoml
into
mov
pop
outsl
mov
jbe
jecxz
test
adc
lock
mov
ljmp
movsl
add
lret
sti
das
add
mov
xchg
es
test
stos
mov
dec
mov
jmp
pusha
or
stc
add
add
repz
cltd
pop
mov
mov
xor
jmp
pop
pop
cli
lea
insl
repnz
cmp
cs
std
orl
cwtl
rolb
mov
lds
ds
rolb
fsub
lods
add
cmp
and
filds
dec
stos
and
xor
add
push
les
imul
pop
stos
in
cld
scas
xor
xchg
cmpsl
mov
mov
cmpsl
sub
shll
arpl
mov
ja
std
sqrtps
add
add
jae
xchg
xor
jmp
test
add
fucomp
add
cmpsb
add
cli
dec
push
xor
push
enter
nop
sti
daa
cltd
cltd
test
jno
mov
aaa
sahf
mov
mov
daa
mov
add
push
or
pop
pop
mov
movsb
sub
jns
mov
lret
pusha
std
sub
dec
jnp
push
push
xchg
mov
add
jge
jno
sbb
int3
inc
fildl
add
sbb
dec
jmp
add
mov
mov
push
dec
sbb
mov
mov
ret
ret
dec
add
addl
add
adc
scas
lock
add
sbb
imul
outsb
xchg
cmpsl
jbe
mov
das
inc
lods
xchg
loop
sahf
adc
mov
outsl
punpckhwd
outsl
xlat
adcb
or
mov
lods
add
sbb
popa
sub
add
mov
xor
mov
push
sbb
push
push
and
test
fs
or
mov
push
ficomps
pop
iret
push
out
jge
jp
add
push
movb
incl
inc
mov
xor
xchg
xchg
cmp
repnz
and
and
push
add
push
jb
pop
aad
or
das
test
pop
xor
or
je
notl
fnsave
mov
pushf
std
mov
jmp
out
test
add
mov
pop
sbb
stos
and
call
xchg
insl
add
sti
add
aad
add
repnz
pop
stos
adc
dec
dec
xor
leave
test
mov
cmp
xor
cs
rol
pop
aaa
mov
push
pop
ja
mov
xchg
pusha
imul
sub
or
ret
std
mov
mov
mov
outsl
dec
addb
push
and
cs
loopne
sub
xor
xor
adc
es
ret
add
sbb
dec
mov
aaa
rcr
cmp
add
test
addl
ss
add
das
push
add
jne
add
add
dec
or
push
xor
add
mov
lds
lock
jp
mov
add
addb
adc
ss
add
inc
cmpsl
pcmpgtd
sti
push
add
xchg
add
add
add
cmpb
add
pop
inc
outsl
adc
add
jnp
mov
push
iret
mov
inc
clc
in
xor
jno
cmpsl
add
cmp
cmp
in
add
xor
add
add
cmp
xchg
xchg
aad
dec
les
xor
sub
and
sbb
pusha
mov
aaa
xor
gs
addb
jmp
cmp
or
fisubl
rorl
cmpsl
loope
add
sub
and
add
adc
jl
push
cwtl
shrl
and
adc
pop
add
add
in
incb
sub
in
xchg
add
add
adc
ret
addl
add
adc
add
and
imul
push
jmp
mov
iret
incb
add
push
push
adc
scas
jo
test
mov
cmp
int
mov
fsts
ljmp
add
fld
sub
xor
add
add
fabs
sbb
sbbb
add
add
repz
xchg
and
add
add
call
icebp
add
dec
outsl
movb
bound
out
xchg
mov
add
outsb
jmp
push
add
dec
repz
or
add
xor
mov
xor
push
push
mov
jo
pop
adc
in
les
mov
mov
fstp
mov
outsb
out
dec
ljmp
imul
das
gs
pop
pop
mov
mov
cwtl
movsb
movsl
out
imul
dec
xor
lods
xor
add
add
iret
push
in
xchg
ret
sti
mov
mov
lret
es
outsl
mov
mov
out
or
ror
or
std
xchg
es
xor
pop
mov
int
daa
les
or
or
pop
fldl
pop
jb
and
push
arpl
jecxz
adcl
adc
sub
xor
nop
fwait
pusha
or
xor
mov
jo
imul
xchg
dec
sub
inc
mov
stos
sarl
sbb
std
lea
add
ret
pop
frstor
add
lret
enter
jecxz
fsubr
movsb
jmp
test
add
add
adc
arpl
sbbb
popa
lock
fcomps
sarl
add
jecxz
jle
dec
lcall
dec
xor
stos
aaa
mov
bound
jp
sbb
movsb
xlat
sbb
xchg
lea
xor
fldcw
stos
mov
movsb
leave
or
push
aam
repnz
push
inc
xor
add
in
bound
xchg
push
inc
cmpb
adc
lock
dec
mov
psubsw
std
push
inc
sbbb
jecxz
daa
jp
add
pop
arpl
jg
and
aaa
shll
add
test
cmpsl
dec
push
adc
movsl
add
ss
push
jl
test
fdiv
jp
dec
add
add
stos
mov
mov
test
mov
mov
repz
dec
mov
lods
out
loopne
scas
addr16
jne
cmp
filds
mov
fidivs
xchg
movsb
in
out
insl
inc
xchg
outsb
or
adc
mov
sahf
scas
xchg
popa
or
inc
test
pop
dec
xchg
xchg
mov
cmp
add
andb
push
add
or
stc
imul
jp,pn
and
dec
jl
clc
icebp
daa
mov
das
mov
mov
xchg
sahf
mov
add
and
pop
pop
cs
lea
mov
xchg
roll
mov
mov
add
fidivl
mov
jl
pop
xorl
lret
dec
push
add
jg
imul
movsb
testl
inc
addb
inc
or
add
jb
xlat
test
cld
arpl
push
and
dec
push
add
ss
xchg
jmp
js
mov
pop
dec
cmc
mov
or
pop
sub
jmp
mov
addb
sub
xchg
jne
aam
shl
push
das
fwait
pushf
cmc
pop
out
scas
lds
pop
xorb
jns
and
in
mov
and
rclb
push
and
mov
imull
mov
xor
insb
push
lret
ret
xchg
mov
dec
jns
pop
pushf
dec
andb
mov
mov
push
inc
bound
add
lds
xchg
dec
pop
lods
fdiv
mov
test
pop
rorl
mov
xchg
sub
repnz
sub
ja
adc
cltd
sahf
adc
pop
push
cmp
mov
mov
inc
fidivrs
gs
mov
mov
or
shlb
adc
test
add
add
outsl
jbe
movb
add
pop
pop
jbe
or
xor
fcmovnbe
shlb
cmp
pusha
push
add
pop
add
sub
mov
jo
aam
and
inc
adc
mov
test
imul
enter
test
jmp
imul
push
jge
data16
pop
and
add
add
inc
add
push
cwtl
xchg
jns
or
sbb
sbb
pop
pop
popa
outsl
adc
divl
repz
movsb
jns
pop
xor
pop
add
add
push
sbb
xor
or
mov
cli
xchg
movsl
sbb
add
sbb
mov
daa
push
and
aaa
loope
std
or
dec
aas
daa
add
sbb
add
xor
clc
scas
add
or
mov
add
mov
mov
roll
add
push
lea
pop
ljmp
repnz
push
mov
push
cmp
subl
jae
loope
push
pop
int
push
insl
ljmp
into
cmpsl
dec
ja
icebp
and
mov
fisubs
dec
jmp
add
stc
sub
sub
jnp
cmpsl
add
add
xchg
les
shl
stos
mov
fs
inc
pop
aam
add
add
sahf
scas
jg
add
add
scas
jl
movsl
pop
cltd
into
sbb
sub
ljmp
mov
fstps
iret
and
mov
add
add
jle
pop
or
aam
nop
pop
gs
push
loope
push
push
pop
xor
sub
nop
out
sti
add
add
sub
mov
lods
icebp
push
lcall
mov
fwait
fldt
stos
mov
xchg
les
jge
pop
adc
mov
stos
mov
sub
dec
mov
cmp
mov
mov
mov
jb
test
gs
in
mov
pop
pop
ret
mov
sub
push
add
cmp
cwtl
and
inc
jnp
cmpsb
scas
add
add
in
popf
sub
iret
je
jnp
or
adc
mov
jg
faddl
add
lods
je
scas
push
and
mov
push
and
lret
dec
inc
cmc
mov
movsl
mov
sbb
out
xchg
cwtl
fbstp
into
sub
mov
xchg
pop
sarl
outsb
stos
add
add
mov
popf
lahf
insb
in
jo
xchg
adc
xor
or
push
inc
xlat
cmp
add
pop
jg
mov
fistl
and
push
cmp
sti
scas
push
lds
add
bound
inc
xchg
mov
pop
sbb
loop
jne
push
add
popa
jl
data16
mov
adc
mov
mov
pop
adc
cmp
dec
adc
mov
cs
je
jle
fistps
lods
loop
fs
mov
adc
ds
dec
push
pop
gs
xorl
push
fcomps
mov
bound
cmpsl
mov
adc
cwtl
xor
cs
mov
ds
inc
int
jp
and
mov
in
sub
or
mov
sti
mov
js
test
adc
xchg
js
ja
and
in
adc
inc
pushl
outsl
xchg
or
jnp
imul
dec
push
mov
int3
rcrl
adc
pushf
sub
in
add
loopne
or
iret
or
add
sub
add
mov
ficoml
add
dec
push
dec
jbe
or
xor
icebp
stos
mov
jge
leave
sbb
lahf
stos
mov
popf
mov
add
cmp
stos
jae
jge
jb
mov
insb
add
add
push
aaa
movsl
add
xchg
pop
pop
mov
sub
xchg
fldt
stos
add
add
ja
sti
inc
rclb
imul
add
mov
jns
mov
sbb
imul
cmovg
inc
lcall
pop
inc
xchg
flds
test
cmp
test
mov
ret
pop
ljmp
add
inc
push
jmp
pop
pushf
jae
mov
gs
xchg
inc
mov
daa
jb
popa
mov
sahf
cltd
add
test
push
aam
arpl
iret
ret
dec
stos
cltd
jo
pop
test
lret
jecxz
adc
or
add
add
add
and
add
push
add
push
add
push
verr
out
add
cmpsl
add
push
imul
mov
add
jl
add
mov
movl
cmp
add
sbb
add
cmc
fldl
xchg
jp
push
add
lods
add
cmp
repnz
push
add
repz
cs
push
dec
add
imul
fsubs
add
incl
xchg
fstpt
add
jns
jecxz
and
add
repz
pop
daa
mov
sbb
test
ret
jge
sbb
add
mov
sbb
xor
dec
add
inc
mov
xchg
adc
add
add
call
insb
add
test
int
daa
repnz
add
jecxz
loopne
push
pcmpeqw
and
add
repz
add
add
add
in
inc
add
add
add
and
xchg
loop
push
add
out
add
dec
push
mov
and
add
add
push
rcll
adc
and
or
jmp
push
je
add
add
add
mov
mov
mov
jno
mov
mov
insl
xor
xchg
xor
xor
inc
inc
adcl
mov
ret
cmp
inc
out
and
adc
mov
int
fbstp
xchg
mov
cld
lock
ljmp
push
lock
lds
clc
add
cmc
ficompl
sahf
and
repz
sbb
sbb
repnz
rcrl
ret
std
push
stos
or
push
lret
nop
cs
fistl
pop
adc
arpl
mov
ja
pop
ja
pusha
and
add
add
jmp
xchg
or
pop
push
lret
icebp
das
mov
push
pushaw
fldl
addb
daa
fdivs
inc
scas
jne
clc
mov
pop
in
ret
sub
loop
jle
jg
inc
addr16
fldl
mov
stos
popf
push
dec
xchg
imul
repnz
fs
shrl
addl
pop
pop
push
clc
arpl
xor
cmp
les
test
popf
sbb
jl
mov
shlb
btr
lcall
stc
shlb
xchg
mov
mov
les
stos
push
shlb
loope
cmp
leave
andb
repz
xor
jmp
xchg
cs
mov
push
iret
repnz
into
mov
stc
or
iret
inc
shll
ret
xchg
mov
mov
adc
or
sbbb
or
push
pop
stc
jecxz
loopne
xchg
or
mov
sar
or
jne
or
dec
incb
sub
pop
xchg
add
add
add
ret
shlb
pop
jle
psraw
cmp
stc
in
jno
cmpl
jb
cwtl
push
mov
jecxz
xor
push
jmp
into
int3
sub
ret
out
mull
push
push
sbb
jecxz
repz
jmp
mov
cs
mov
pusha
je
mov
les
xchg
popf
add
add
cwtl
divl
mov
test
pop
pop
fwait
pushf
adc
mov
cmp
xchg
add
mov
js
imul
int3
mov
mov
out
std
enter
sub
mov
push
addr16
add
add
and
sar
sbb
xchg
lea
rolb
sub
sarl
icebp
loope
in
fadd
inc
add
lret
into
insb
enter
rcrb
jno
and
add
jmp
xchg
dec
cmp
add
adc
lods
pop
hlt
cmp
inc
jecxz
jmp
push
ss
and
icebp
mov
sbb
add
add
mov
jge
jl
dec
mov
loopne
push
lret
push
jl
repnz
add
xchg
insl
add
setae
add
add
xchg
xchg
jge
loopne
mov
cmpsl
dec
push
push
sbb
mov
in
mov
and
stos
xor
movsl
push
xchg
mov
ret
fwait
and
popa
je
ror
push
dec
xchg
aam
xchg
jae
lahf
lret
add
add
adc
mov
ljmp
sbb
lcall
mov
push
sub
les
mov
add
add
xchg
fidivs
fisubrs
icebp
rorl
sahf
cmp
or
xchg
loope
add
add
xlat
sub
aad
cs
fstpl
adc
dec
xlat
leave
lcall
sbb
int
and
add
jmp
xchg
dec
cmp
add
adc
lods
pop
hlt
cmp
inc
jecxz
in
test
cmp
popa
dec
mov
add
push
cmp
xchg
sub
mov
push
lret
push
mov
dec
fcoms
je
pop
pushw
mov
sub
mov
adc
push
es
mov
fildll
xor
sub
cmp
orb
gs
mov
ja
dec
cmpsb
mov
xchg
sbb
lcall
stos
lds
mov
push
cmp
cmp
push
in
rolb
pushf
jl
xchg
add
add
lahf
push
mov
inc
jb
icebp
inc
add
je
int3
mov
lret
lea
mov
aam
int3
sub
fidivs
cmp
loop
xor
or
or
ret
int3
xchg
shll
push
cmp
ds
mov
fistpll
and
sub
add
in
mov
inc
xor
dec
std
dec
stc
cltd
or
pusha
sahf
xor
cmp
mov
push
xchg
jno
push
cmc
bswap
cwtl
nop
and
ljmp
jno
cwtl
jne
dec
outsb
lcall
mov
push
mov
inc
gs
mull
out
es
lahf
test
jae
add
add
sub
push
add
test
in
xor
adc
mov
xor
cmpsb
sbb
mov
jle
add
test
mov
cmpb
ror
test
inc
std
out
add
add
add
dec
add
jle,pt
add
add
add
testb
sub
add
add
add
loopne
add
add
add
jmp
add
add
add
add
add
add
xor
add
add
add
push
add
popf
aam
add
add
add
or
add
add
add
add
add
add
dec
pop
add
add
add
add
add
scas
movsl
add
add
add
add
add
add
lret
ret
andl
cmp
out
add
loop
jnp
call
add
mov
jecxz
add
sub
add
add
add
add
adc
int3
xchg
add
add
inc
add
xor
jecxz
nop
shr
mov
sbb
pop
loopne
jo
add
int
add
add
outsl
mov
lret
mov
adc
cs
inc
ljmp
dec
jecxz
cli
xchg
cmp
imull
dec
lods
daa
repz
movsb
or
add
in
in
xchg
xchg
jb
xchg
push
insl
add
lods
jg
gs
push
mov
inc
popl
dec
push
imul
sub
add
sbb
mov
imul
add
add
add
xor
add
push
sahf
jns
cltd
lds
sub
mov
dec
pop
or
fdivrl
aad
shll
imul
fwait
ss
das
pop
div
jg
inc
fstp
inc
dec
iret
into
pop
and
add
mov
sbb
and
push
or
div
mov
test
fcmovb
lret
fistpl
dec
push
add
sbb
mov
ret
lret
pop
into
xchg
aad
pop
icebp
add
les
test
js
nop
add
add
add
add
add
pop
add
add
xchg
add
add
add
add
add
add
add
add
add
add
pushf
add
in
testl
sti
add
icebp
add
add
add
add
test
xchg
add
add
or
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
lret
add
inc
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
cmp
cmpsb
add
add
add
mov
add
add
add
add
add
add
add
push
add
adc
clc
add
add
add
jae
mov
jmp
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
dec
add
add
lret
add
add
dec
jg
push
cld
ja
hlt
addr16
fcomps
in
dec
mov
outsl
lods
sbb
andl
repz
xchg
cld
dec
jns
add
add
add
jp
inc
add
mov
cmp
pop
jae
loop
mov
mov
mov
in
mov
mov
xor
jmp
mov
mov
adc
insb
sbb
add
add
add
lods
add
aad
movl
lret
add
push
add
add
push
add
add
add
add
jg
daa
add
add
add
add
add
add
add
add
add
add
add
cmc
add
jle
push
add
add
add
add
add
add
sbb
mov
call
push
xchg
or
or
mov
mov
jne
xor
add
add
add
add
add
add
add
xchg
enter
cmp
test
pop
inc
adc
movsb
lods
sub
in
push
lret
ret
inc
pushl
jmp
je
mull
fdivs
fisttpll
push
subb
cmp
push
rolb
add
add
adc
mov
or
cli
jo
cmp
and
jmp
subb
lret
add
sbb
lock
cmp
sbb
add
sbb
pop
fwait
push
adc
add
jb
out
sub
jae
lock
inc
dec
xchg
adc
xor
mov
negb
push
xchg
stc
aam
jb
jge
test
cs
adc
mov
or
mov
imul
xchg
test
pop
jecxz
adc
xor
xchg
std
jb
out
sbb
add
sub
xchg
lret
and
or
push
add
xor
stos
lock
fsts
cmp
movl
pusha
sub
test
cwtl
adc
adc
fisubrl
xchg
mov
lods
in
xchg
dec
cmp
and
and
fcmovnu
outsb
lea
ja
add
sbb
ret
notl
inc
mov
xor
and
inc
in
sbb
jns
das
fmulp
adc
hlt
dec
daa
aas
pop
jle
sbb
ffree
push
xchg
or
cmp
jo
frstor
and
adc
sbb
cmpsl
pop
push
nop
adc
xor
gs
lock
xorl
sti
int
ret
mov
sub
outsl
bound
xchg
adc
mov
or
clc
mov
enter
bound
add
sahf
pusha
xchg
xchg
test
dec
pop
push
jl
mov
sbb
icebp
add
ljmp
mov
fcmovbe
subl
loope
in
jo
idivl
pop
pop
into
xchg
outsl
cmp
movq
in
sub
movsl
and
mov
push
adc
or
outsb
shll
sbb
cltd
xchg
adc
mov
pop
scas
adc
mov
insl
push
iret
mov
push
jecxz
jg
pop
add
inc
or
and
push
mov
repz
push
jg
mov
mov
movsl
loopne
push
cltd
rorl
xchg
push
mov
jne
cmpsb
mov
pop
push
inc
rclb
mov
push
imull
pop
in
popa
cmpsl
rclb
adc
xor
loop
jae
cmp
or
insb
xlat
arpl
movsb
sub
xchg
add
ret
test
mov
or
mov
jmp
or
stos
xchg
sub
jle
mov
cltd
testl
add
gs
dec
or
enter
aaa
jecxz
enter
in
icebp
jge
daa
imul
xchg
xchg
or
sub
and
lea
sbb
lcall
sbb
lods
sbb
fwait
xchg
sbb
pop
lods
adc
lods
outsl
adc
mov
push
in
lds
call
push
addl
loop
lock
divl
jecxz
movhps
sub
mov
mov
and
add
mov
inc
jmp
xlat
add
add
push
ffreep
aas
mov
jmp
add
add
adc
pop
or
cwtl
add
pusha
les
add
sbb
cmp
mov
add
add
pushf
dec
push
jmp
lds
mov
mov
add
and
cltd
or
jmp
cmp
add
add
call
lahf
sbb
sbb
add
inc
mov
sbb
in
addl
add
adc
lret
pop
int3
add
sub
add
sbb
add
xchg
add
jge
add
imul
mov
scas
adc
add
dec
out
inc
jns
cli
push
add
sub
mov
add
jae
adc
push
mov
clc
adc
jmp
add
sahf
add
sti
outsl
es
mov
add
push
addb
add
xchg
add
add
add
into
add
outsb
shlb
test
mov
mov
andb
mov
and
cmp
fiaddl
rcrb
push
cmp
ror
movsb
xor
push
xchg
add
jmp
lret
xchg
cmp
mov
add
add
add
add
add
xchg
rcll
add
add
add
cwtl
flds
pop
loop
push
and
add
lock
inc
fildl
add
add
dec
dec
ret
add
xchg
mov
dec
push
iret
xchg
and
insl
add
mov
add
push
add
add
dec
xchg
out
add
add
adc
add
add
cmc
clc
add
add
add
ret
xchg
jae
add
add
mov
add
sbb
incl
push
sbb
add
add
add
add
add
outsb
fildl
add
add
popf
mov
and
cmp
add
add
test
xchg
add
add
add
add
or
stc
mov
add
add
sub
mov
add
add
push
add
add
shlb
add
add
and
push
add
push
pop
add
add
add
hlt
pushf
add
add
dec
imulb
pop
mov
adc
add
add
pushf
dec
add
add
add
fmuls
add
add
add
popl
add
add
mov
add
add
scas
mov
movb
add
aas
push
icebp
lods
add
add
push
add
add
jmp
add
fistps
or
xor
cmpsb
add
xor
mov
add
icebp
pop
add
add
add
cmp
add
add
pushf
add
add
orb
int
add
add
add
add
mov
add
ret
mov
add
add
jle
add
add
push
push
sbb
add
add
lds
pop
add
add
and
add
add
push
call
add
inc
add
lods
js
rolb
add
add
add
add
mov
add
add
add
inc
add
add
add
add
push
and
add
jbe
sti
add
add
add
pop
cmpsl
dec
add
add
pusha
movsl
sbb
add
add
xor
add
add
pop
sub
add
add
adcb
add
cli
push
add
add
add
jmp
add
add
mov
adc
add
or
ret
add
add
xchg
jae
mov
insb
test
add
add
add
add
add
das
mov
add
add
inc
push
add
adc
add
add
add
add
in
add
xchg
inc
add
roll
add
add
add
je
add
inc
dec
add
in
add
addb
mov
add
mov
mov
add
dec
data16
pop
add
gs
bound
mov
add
in
and
aad
add
xchg
flds
ret
and
push
add
push
add
test
add
cli
lods
add
hlt
inc
add
xrelease
add
cmc
add
pop
adc
daa
push
lret
add
fiaddl
pop
pop
sbb
or
movb
in
add
fdivp
add
iret
mov
add
jo
add
loope
add
sub
daa
mov
add
inc
inc
add
jp
add
sti
xchg
jge
test
int3
adc
add
xchg
roll
add
fidivrl
add
dec
lods
add
ret
mov
add
pop
aad
sbb
aam
pop
add
stos
add
cli
mov
fs
sbb
and
lret
mov
ljmp
cs
xor
inc
in
ljmp
or
cmpsl
and
cmc
cwtl
add
add
push
movsb
movsb
mov
xchg
add
add
ja
stos
jle
push
insl
clc
lret
add
and
adc
insl
or
inc
add
aad
or
mov
daa
or
xor
adc
mov
mov
frstor
jmp
xor
in
add
arpl
mov
aaa
mov
shlb
jl
mov
nop
adc
mov
adc
mov
sub
mov
jmp
call
push
pop
jge
rol
sub
push
popf
cmp
cli
and
loopne
js
adc
add
movb
mov
int
fnstenv
add
cmp
jecxz
mov
icebp
imul
pop
repz
int3
insb
fistl
sbb
cmp
sub
out
add
ds
cmp
lock
test
jne
lret
pop
sub
cmp
pop
call
sbb
and
cmpsb
push
in
stc
movsb
or
dec
aam
mov
jns
sbb
in
jns
lahf
jg
sub
pop
out
pusha
mov
lods
mov
add
lods
outsb
sbb
inc
pop
add
jl
add
mov
out
cmp
out
cmp
sbb
testb
int
add
inc
std
popa
pop
cmpsb
aad
insb
push
xchg
fwait
sbb
add
push
lahf
mov
shlb
jnp
mov
lahf
adc
je
fwait
adc
stos
fadds
in
sbb
add
sbb
pop
jecxz
jecxz
and
inc
add
movsl
push
shl
out
dec
fistl
add
shlb
add
std
mov
fstl
push
push
enter
rcl
sbb
ret
xor
into
roll
shlb
add
outsl
pop
cmp
stc
lods
fdivrl
and
add
std
das
movsb
sub
inc
fstps
adc
jno
pushf
push
xorb
repz
aam
xchg
mov
or
lret
add
pop
add
sahf
jg
addr16
int3
dec
mov
dec
mov
je
add
fs
ret
cmp
lods
push
add
add
js
mov
add
cld
mov
sbb
add
xor
je
mov
lahf
xchg
jb
xchg
mov
shrb
add
mov
mov
adc
aam
mov
sub
repz
loop
repz
pusha
sbb
add
xor
dec
fwait
sub
fsub
rorb
sub
aam
dec
sbb
cmp
jecxz
idiv
jo
mov
add
or
ljmp
pop
mov
loopne
add
arpl
loopne
push
add
jb
cmc
gs
je
sub
out
mov
add
xchg
movsl
xchg
xchg
sub
xchg
add
mov
movsb
cmp
dec
testl
xchg
xor
cld
mov
push
es
inc
cmc
cltd
xchg
outsl
and
movb
add
repnz
arpl
hlt
dec
mov
inc
sahf
insl
sub
add
test
cs
jns
daa
ror
and
mov
sbb
cmp
sbb
testl
pop
int3
mov
xor
xor
adc
mov
sub
call
pop
add
sub
add
mov
fimull
lods
xchg
sbb
out
addl
add
add
add
in
test
add
stos
rorl
fiaddl
add
aas
adc
mov
add
sbb
call
add
push
add
mov
add
add
call
add
rolb
mov
add
in
sub
add
add
add
sub
add
mov
add
add
insl
cs
and
add
add
iret
add
and
add
add
add
stos
add
aas
sti
add
add
add
imul
outsb
add
add
lcall
fildl
add
sub
add
mov
xchg
add
add
add
sbb
add
andb
add
add
add
xchg
add
add
add
mov
rolb
add
das
mov
lret
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
pop
add
add
add
jbe
add
addb
add
add
add
add
add
add
add
add
add
add
in
add
add
add
data16
add
add
scas
add
add
add
add
add
pop
add
add
add
loop
add
push
add
add
add
add
add
add
add
add
add
xor
add
rolb
add
test
add
roll
add
sti
add
add
add
sldt
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
add
iret
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
roll
add
fwait
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
sbb
add
in
add
add
add
add
add
scas
add
add
add
add
add
add
repz
data16
add
add
add
add
add
xchg
mov
dec
sub
add
inc
xchg
dec
and
test
lock
mov
js
incb
push
fadds
add
sbb
add
int3
mov
sub
fwait
inc
xchg
jle
or
xchg
mov
push
pop
ret
aaa
loop
xchg
mov
add
pop
cmpsl
icebp
cmovle
push
add
lea
fdivrp
push
cwtl
ret
cli
add
inc
call
ret
fidivl
mov
loopne
mov
or
add
add
add
clc
push
cmc
sub
add
mov
insl
cmp
rclb
xchg
mov
add
jnp
scas
pushf
cmp
or
std
jb
pop
scas
push
roll
add
add
add
mov
inc
shll
push
mov
es
lds
bound
aaa
lret
jg
imul
inc
mov
inc
xchg
insb
add
testl
xor
add
mov
pusha
cmp
int3
sbb
and
rcrl
repnz
add
add
loope
add
pop
inc
sbb
das
push
mov
add
add
push
mov
add
add
add
add
add
add
fsubs
cmp
add
add
mov
add
out
fs
fiadds
add
hlt
adc
add
test
add
add
testb
xor
gs
add
add
add
add
add
add
add
add
add
sub
fs
inc
mov
add
fcmovb
add
add
add
ret
adc
add
add
or
add
add
dec
ret
in
add
pop
xor
add
pop
adc
popl
add
add
rolb
add
add
out
add
add
add
add
add
mov
cltd
add
mov
add
add
add
add
add
add
add
add
mov
add
push
loopne
add
hlt
add
cmc
cmp
add
add
add
add
pop
add
test
push
cmp
push
xchg
aas
add
add
insb
cmpsb
add
add
add
incl
cwtl
pop
add
add
xchg
add
rcrb
add
addb
aas
roll
cmp
mov
add
loope
aas
inc
inc
add
inc
or
shl
loop
push
xor
add
mov
stc
add
dec
add
mov
and
push
test
add
dec
movsb
add
stos
mov
push
shll
add
rcll
add
push
js
mov
or
add
add
out
lea
sub
loop
sbb
push
push
add
pop
add
mov
add
add
jge
add
add
and
stos
add
aaa
add
daa
add
add
cwtl
add
fcompl
add
push
adc
and
xchg
std
fcmovu
xchg
cmp
pop
adc
movl
mov
add
add
mov
add
clc
testl
add
lahf
xchg
stos
add
add
and
mov
ret
jmp
add
clc
inc
cltd
add
add
jne
add
add
add
add
add
add
add
add
dec
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
sarb
inc
or
add
mov
add
aaa
add
add
add
xor
add
cli
add
add
add
add
add
add
xlat
add
jno
add
loopne
add
add
mov
jp
add
lcall
lea
test
add
add
lock
in
mov
dec
jne
xchg
insb
cs
lods
mov
insl
dec
mov
lret
cltd
mov
push
pop
mov
fucomi
jae
rclb
xor
imul
push
push
mov
mov
mov
out
sub
pop
xor
adc
mov
inc
jl
sbb
mov
dec
popa
or
mov
mov
jbe
xor
cli
sti
les
push
push
add
inc
ret
icebp
xchg
mov
mov
movsb
jl
iret
add
sbb
call
loop
xchg
dec
push
pop
test
add
mov
cmp
and
xchg
pop
add
insb
lahf
adcl
mov
data16
cmp
xchg
test
xlat
dec
push
inc
cli
add
push
out
shlb
xchg
push
aad
lock
icebp
jo
mov
repnz
dec
jae
nop
outsb
push
repnz
movsb
in
cmp
adc
cmpsl
or
pop
in
fmul
push
pop
cmpsb
push
push
imul
jb
rcll
aaa
inc
fsubrs
add
push
les
movsl
test
sbb
jne
and
or
call
inc
sub
jnp
popf
rorb
and
or
pop
push
fiaddl
sub
and
dec
dec
fcmovnbe
pop
pop
int3
adc
sbb
push
imul
cmp
cmp
push
movsl
out
cmp
lret
push
loope
lcall
xor
mov
ds
jno
and
xchg
pop
jecxz
dec
cmp
bound
mov
inc
stos
push
fs
cmp
leave
nop
xchg
rorl
add
adc
loopne
shrb
xchg
push
xlat
in
ja
divl
mov
hlt
insl
aas
adc
mov
jno
mov
lock
stos
cmpsb
out
fdivrs
outsb
dec
mov
inc
push
mov
scas
fcmove
push
pop
movsb
push
dec
jne
fsubr
je
ret
fwait
mov
jne
pop
xor
arpl
jmp
adc
sahf
cltd
es
lahf
js
add
fbstp
stc
and
into
dec
lods
mov
jne
fnsave
mov
inc
fs
mov
jmp
sbb
xlat
pop
pop
lret
xor
idivl
insb
out
push
push
cmc
mov
inc
cmpsl
js
incb
lock
xor
outsl
mov
cmp
mov
push
rcrl
gs
mov
arpl
pop
and
lods
mov
mov
movsl
les
std
xor
mov
sbb
dec
cmp
push
lret
xchg
std
and
stos
push
aam
insb
fstpl
mov
mov
je
xchg
pusha
jp
mov
fld
xorl
and
jbe
lods
mov
or
rolb
jo
dec
fs
push
scas
in
cltd
adc
jp
pusha
std
dec
ja
loope
shlb
and
dec
push
lods
cli
stc
idivl
add
movb
jp
xchg
into
or
jmp
mov
pusha
add
mov
les
jmp
outsb
cmp
mov
icebp
inc
mov
sub
mov
xor
xor
out
xchg
push
mov
pop
js
xor
mov
js
inc
aam
adc
lahf
cltd
mov
push
mov
and
loop
fisubs
mov
mov
mov
call
movsl
mov
cmp
ficompl
test
add
mov
pop
mov
aam
popa
rcll
xorb
pop
jo
pusha
shll
jle
pop
int
test
jae
stos
sbb
sub
ljmp
js
lret
loope
mov
xchg
addr16
mov
pushf
push
aam
enter
sub
call
ret
loope
lret
int
frstor
or
cmp
test
mov
jp
xor
pop
push
std
cmp
das
sub
mov
cmp
je
or
push
mov
pop
mov
push
inc
xchg
pop
inc
inc
or
imul
xor
inc
jecxz
xor
mov
or
push
add
lock
xorb
test
pop
and
fs
divb
sub
and
fstps
add
and
cmpsb
jno
out
pop
lahf
xor
loop
push
jecxz
push
pop
xorb
pop
jae
pop
insl
push
scas
adc
adc
lretw
push
cmp
das
pop
mov
sub
sbb
stc
jmp
jno
jns
lret
push
stos
loop
lahf
adc
push
insb
icebp
mov
loope
movl
cld
sti
repz
push
out
add
rcrb
xor
out
stc
insb
or
add
inc
mov
lock
xchg
push
jl
cmp
sub
lods
jb
jbe
or
sahf
push
mov
jo
test
pop
jg
or
mov
rorl
mov
cltd
pushf
lods
sbbl
push
popl
fimull
and
jp
mov
mov
testl
icebp
cmp
ficomps
subb
lods
clc
mov
push
inc
mov
rclb
xlat
push
inc
or
or
outsb
shll
push
jl
add
lahf
cmp
jno
mov
fs
mov
mov
push
dec
aad
jns
aam
loop
adc
gs
mov
loopne
or
es
out
scas
test
mov
out
cmpsl
dec
xchg
xchg
int
ljmp
cwtl
inc
or
imul
flds
out
dec
push
js
loopne
or
mov
mov
scas
aad
aas
mov
repnz
push
rorb
add
jecxz
inc
or
jmp
in
push
stc
inc
push
dec
or
mov
fstps
cmp
push
addps
mov
add
mov
stos
push
inc
and
arpl
sub
pusha
divl
sub
or
cmpsl
fistps
mov
ret
movsl
out
or
push
jl
mov
fmuls
gs
push
dec
sahf
int
inc
js
push
pop
jge
fldt
and
push
out
adc
or
call
test
xchg
mov
sti
call
ja
jnp
int
test
mov
jle
pushl
out
aam
sub
inc
pushaw
in
test
and
in
mov
or
iret
seta
in
bound
or
sub
xchg
gs
dec
jnp
stc
pusha
xor
movsb
jle
inc
add
and
push
jle
das
or
xchg
adc
mov
or
call
push
js
into
dec
dec
mov
cltd
xchg
in
mov
sub
std
fdivl
in
fucomi
xorl
bound
lods
aam
mov
jg
cmc
xor
fcompl
mov
ret
mov
or
mov
icebp
paddusb
pop
push
dec
xchg
outsb
sbb
push
push
in
adc
inc
leave
movl
mov
bound
cs
sub
mov
lcall
inc
out
cltd
xchg
sbb
xchg
fwait
in
dec
sbb
inc
pusha
mov
lcall
dec
cltd
sbb
sbb
icebp
in
popa
stos
inc
int
vxorpd
jmp
imulb
fstpl
inc
sbb
mov
inc
jo
cmpsb
adc
fstpt
lea
mov
ret
mov
jns
enter
arpl
add
xchg
or
inc
inc
cmp
ljmp
and
in
dec
or
mov
xchg
subl
sti
jne,pt
ljmp
stos
xor
lods
repz
push
scas
lods
je
gs
or
xchg
dec
pop
add
inc
cmc
lods
push
sbb
mov
pop
mov
pop
jmp
sbb
add
imul
fildll
cld
push
or
jmp
imul
xor
xchg
mov
add
into
mov
jmp
gs
jbe
push
jge
loope
movsb
loopne
xchg
sbb
jl
sahf
jecxz
mov
pop
sbb
das
lds
je
cltd
pop
mov
loope
dec
dec
cwtl
push
enter
xor
rolb
inc
test
movsb
stc
or
in
movsl
ljmp
inc
repz
test
addr16
cmpb
cmpsl
jnp
add
test
das
inc
mov
cmp
fs
sub
test
inc
xor
mov
lds
add
jmp
int
mov
jmp
or
xchg
xchg
test
xchg
test
mov
mov
mov
js
xor
incl
mov
dec
pop
iret
push
xchg
lea
cmp
inc
or
ljmp
js
mov
das
sbb
dec
xor
les
pop
xchg
add
push
mov
sbb
mov
push
ss
dec
lahf
subl
xchg
repnz
bound
les
inc
xchg
in
jl
sbb
call
and
dec
mov
scas
jmp
and
or
xor
insb
jmp
nop
jge
xchg
incl
push
cld
in
cmpsl
sub
sbb
push
pop
rcrl
testl
jbe
or
cmp
dec
jns
and
jnp
xchg
imul
jl
test
inc
cmpsb
ja
arpl
inc
inc
mov
outsl
cwtl
xchg
jne
loop
movsl
jns
cmc
aam
inc
sub
xlat
and
mov
stc
cltd
xchg
xchg
in
xchg
dec
and
push
add
xchg
test
xchg
es
dec
sub
out
in
cmp
push
jae
jg
mov
sub
lods
push
xor
xchg
leave
adc
or
cmp
jne
mov
or
lds
fidivs
mov
loop
xlat
mov
jns
jno
mov
cmp
cmpsb
jg
push
or
push
xchg
xor
jge
xchg
imul
and
int3
cmp
lea
push
jl
xchg
push
dec
in
call
sbb
mov
pop
ss
adc
fnstenv
jnp
icebp
or
cmp
mov
sub
sub
imul
mov
inc
in
rolb
mov
and
mov
xchg
fwait
imul
jmp
cld
bound
andb
sbb
rolb
sub
shlb
nop
and
inc
cmp
sarl
cmpsl
xchg
and
pop
mov
lods
and
repnz
out
or
popa
sbb
mov
jle
add
ret
lea
bound
xor
xor
in
out
jle
or
pop
pop
cmp
jbe
out
or
fwait
imul
push
and
aam
nop
sbb
cli
or
stc
ljmp
outsl
push
out
call
adc
notb
scas
dec
les
fs
js
dec
call
adc
cmp
mov
push
add
add
sbb
mov
sbb
ds
or
pusha
jns
lret
mov
js
sub
sbb
pusha
mov
ljmp
cmp
dec
cld
mov
mov
dec
hlt
xor
leave
lcall
add
fsubr
xchg
push
mov
pop
clc
int3
dec
xor
in
les
pop
cltd
push
insb
jbe
jmp
ret
add
sbb
ss
mov
jno
lahf
xchg
outsb
lcall
cli
pop
insb
jns
imul
test
test
xchg
adc
lock
jne
imul
rcll
mov
loop
cltd
inc
sbb
clc
test
jl
pop
cwtl
sahf
and
dec
adc
adc
sub
pop
pop
mov
andl
cmpsb
mov
add
xchg
sub
ficoml
mov
rep
sbb
or
ja
push
aas
push
or
mov
bound
mov
jbe
loop
sarb
fwait
inc
jle
cmp
mov
lea
or
popf
sahf
and
inc
and
sti
xchg
or
cs
mov
mov
jl
sbb
int
ret
insl
mov
jbe
add
notb
push
sbb
cld
sub
subb
das
int3
jle
sbb
mov
and
int
jo
enter
movsl
mov
lods
shrb
lds
push
xor
mov
cld
cmp
call
idiv
jno
dec
add
icebp
cmpsl
out
or
cwtl
and
sahf
xlat
and
push
inc
addr16
adc
mov
push
lcall
out
les
mov
cld
mov
loop
loopne
movsl
ja
divl
jno
or
imul
jmp
cmpsb
pop
scas
repnz
xchg
mull
ja
xor
jg
shlb
sbb
lahf
mov
das
cwtl
and
xchg
jo
lods
fcomps
mov
sub
mov
and
call
adc
mov
and
stc
mov
test
loop
cmpl
sub
insb
jmp
popa
test
xor
mov
test
xchg
xchg
scas
mov
adc
outsl
dec
loopne
cltd
insl
mov
jp
cmp
cmp
repnz
mov
loopne
jbe
xchg
xchg
and
ficomps
aas
test
lret
xchg
pop
pop
enter
adc
mov
sbb
mov
sti
test
jns
jno
cli
pop
scas
enter
add
or
mov
jge
out
insb
pusha
insl
pop
add
shlb
mov
mov
jnp
cmp
mov
and
xchg
xchg
pop
dec
ficomps
sahf
mov
lret
xchg
mov
inc
sub
iret
jecxz
out
add
mov
or
mov
ds
les
adc
jb
mov
and
lcall
aaa
add
inc
fstps
and
out
bound
xor
out
outsb
mov
loopne
mov
fisubs
inc
aaa
add
out
rcr
cmp
pushf
and
ds
jl
push
imul
dec
out
lock
push
fldcw
or
mov
pop
jle
jge
int
inc
repz
stos
xor
sub
movsb
daa
daa
xorl
hlt
outsb
inc
insl
mov
mov
mov
in
cli
repnz
jmp
push
cmp
dec
xchg
push
jg
inc
js
xchg
mov
xlat
imul
fs
lods
in
cmpsl
xchg
inc
les
cwtl
sbb
pop
je
call
popf
push
sub
mov
push
mov
add
test
xchg
icebp
push
fwait
sbb
jl
push
stc
mov
lret
xor
cld
mov
mov
sbb
inc
aad
mov
xor
xchg
adc
lea
sbb
mov
cmpsb
imul
lret
add
cmp
cmp
xchg
adc
shl
dec
sar
clc
jnp
push
inc
loope
adc
data16
cwtl
jb
outsl
jmp
dec
fmuls
sub
inc
shrb
xor
cmp
cmp
add
xorl
add
dec
jp
mov
addr16
es
pop
stos
jnp
mov
fs
decl
fcmovnbe
mov
jecxz
mov
insl
dec
mov
lcall
lcall
xchg
pop
ja
pop
sub
mov
test
pop
fcmove
or
mov
rorb
adcb
push
addr16
sti
mov
cmp
push
mov
or
sub
lds
cmp
cmc
and
nop
sahf
data16
jbe
cs
pop
push
pop
data16
test
mov
icebp
aas
cwtl
repz
sbb
inc
ja
xor
je
fcom
fildl
xor
stc
cmp
mov
mov
push
cwtl
jg
insb
fcompp
sbb
cwtl
inc
or
xchg
push
pop
mov
sbb
push
data16
test
outsb
or
mov
inc
hlt
mov
add
icebp
cmp
imul
aaa
inc
add
jns
shrb
inc
or
stos
loope
xor
loop
jnp
dec
xchg
xchg
jbe
in
mov
fsts
insl
out
loopne
push
into
xlat
mov
cmp
fadds
and
int
andl
aas
out
fisubs
or
pop
push
push
out
lds
mov
es
adc
pop
pop
popw
mov
push
stc
xchg
lret
pushf
fwait
imul
fcomps
pop
mov
cmp
loopne
jno
in
adc
les
inc
inc
add
fldl
into
lcall
aaa
mov
adcb
call
jns
ljmp
xchg
sub
pop
js
lea
cmp
mov
outsb
pusha
jecxz
popa
mov
cli
inc
clc
mov
adc
xchg
jge
jns
ds
icebp
pop
mov
mov
inc
add
cwtl
and
das
pop
mov
mov
lock
movsl
mov
jo
sbb
jnp
xchg
inc
loope
icebp
lock
sbb
fldt
mov
inc
repnz
pop
pushf
or
cmp
fcmove
sti
cmpsl
cmpsb
mov
or
icebp
sbb
in
mov
mov
arpl
and
std
mov
add
push
cmovb
add
adc
sub
addr16
cltd
rorb
add
imul
mov
lods
into
aas
test
add
cwtl
rol
sbbb
pop
adc
mov
mov
xchg
lret
and
cmp
pop
xchg
pop
push
insl
leave
je
sbb
lods
adc
xchg
add
mov
sbb
mov
jbe
push
addr16
mull
jmp
or
sbbb
dec
push
fldt
mov
mov
imul
sub
sete
xchg
int3
mov
sub
sbb
pop
sbbl
out
aaa
inc
in
sub
mov
fbstp
xchg
sbb
sub
dec
sti
ds
inc
bound
inc
testb
dec
mov
enter
paddw
fidivrl
rcr
or
xchg
cltd
push
lcall
push
dec
jno
in
sahf
hlt
mov
xchg
or
add
gs
add
int
insl
scas
sub
and
lods
jno
and
int
adc
mov
xchg
or
mov
test
cmp
cwtl
add
adc
adc
xchg
pop
cmp
ss
loop
sbb
mov
mov
mov
stos
les
clc
and
or
stos
adc
icebp
dec
jbe
fdivrl
outsl
jge
dec
mov
xorb
ret
mov
jg
cmp
movsb
mov
or
test
cld
cs
pop
es
arpl
mov
or
shll
xchg
or
in
scas
rclb
mov
scas
divb
sbb
testb
ja
or
scas
adc
and
sahf
in
add
jnp
xchg
sarl
cmp
jne
aam
adc
mov
add
out
push
dec
pop
adc
mov
jmp
jo
jne
pop
push
pushf
dec
inc
in
test
or
mov
mov
adc
in
sti
sbb
xor
xchg
xor
out
add
je
pop
js
pop
loopne
add
add
jmp
icebp
pop
mov
test
mov
add
outsl
dec
xchg
fistl
xchg
fdiv
insl
aam
test
mov
lock
popf
imul
cmpsl
cmp
sub
dec
scas
data16
mov
dec
push
mov
xorl
lret
or
push
and
jbe
add
and
dec
jmp
loope
jo
xor
push
sub
xchg
loop
add
pop
sarl
sbb
call
cmp
lahf
xchg
xchg
fisubs
or
lahf
cmpsl
mov
and
std
aas
push
push
pop
pop
jno
push
mov
pop
out
ret
jmp
jnp
xchg
or
fs
out
aam
push
dec
jnp
stc
sub
xor
xchg
or
enter
and
js
fmull
pop
movsb
sbb
lods
sub
jmp
loop
int
pop
push
adc
clc
shlb
andb
imul
xchg
fnsave
test
lods
in
repnz
lods
push
std
testb
mov
sahf
cmc
adc
add
dec
lds
jmp
adcb
push
popf
push
jbe
ret
xchg
je
test
mov
aas
and
jno
sub
loopne
lock
adc
shll
push
sbb
pop
aam
lcall
sub
mov
jle
xchg
mov
push
add
lcall
mov
mov
jp
dec
or
xchg
sahf
je
xor
mov
mov
mov
sbb
add
pop
mov
inc
lock
add
add
pushf
inc
cmp
cmc
sbb
fldcw
add
rolb
cs
jno
iret
mov
push
loopne
les
aaa
sbb
flds
hlt
push
test
xorb
fidivl
or
roll
dec
hlt
mov
ds
and
mov
outsl
aad
jmp
pop
push
cmp
adcl
daa
pop
ljmp
subl
es
mov
lahf
lret
or
jbe
add
xchg
add
in
ret
add
jecxz
mov
repnz
lea
in
jbe
xor
sbbb
sbb
mov
inc
outsb
xchg
testl
jo
imul
mov
xchg
push
mov
jg
mov
leave
mov
pop
dec
rcl
lret
dec
out
sbb
xor
mov
fisubl
lea
and
mov
