push
call
ret
ret
add
or
add
add
push
add
addb
add
mov
add
rolb
add
adc
addb
add
push
add
orb
add
loopne
add
mov
add
adc
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
dec
test
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fadds
add
jl
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
mov
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
in
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
add
add
scas
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
js
add
dec
scas
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
mov
add
add
pusha
cmpsl
cmp
add
add
or
add
push
or
sbbb
add
inc
add
subb
push
or
adcb
add
mov
add
xorb
add
add
int3
or
sbbb
sbb
add
call
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
mov
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pop
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
addb
add
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
test
add
cmp
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
or
add
pusha
cmpsl
cmp
add
add
add
add
add
add
clc
add
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
test
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
add
add
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
jo
add
dec
rorb
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
add
add
ret
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
ret
or
call
add
add
add
add
add
addb
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
add
add
les
add
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
add
dec
add
add
jo
add
cwtl
add
add
rolb
add
add
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
pop
add
js
add
mov
sldt
enter
sti
sldt
lock
add
sbb
add
inc
or
cmp
add
push
sldt
nop
or
addb
add
mov
add
add
cmp
add
add
add
add
add
add
cmp
or
in
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pusha
add
or
in
add
add
cmp
add
add
add
add
add
add
mov
or
js
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
insb
int
add
add
add
cmp
add
add
add
add
add
add
fadds
or
movsb
add
add
cmp
add
add
add
add
add
add
add
add
enter
insb
add
add
cmp
add
add
add
add
add
add
sub
add
xor
or
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
push
add
cmp
or
enter
pusha
cmpsl
cmp
add
add
add
add
add
add
js
add
add
or
call
add
add
cmp
add
add
add
add
add
add
mov
fisttpl
add
add
add
cmp
add
add
add
add
add
add
enter
enter
aam
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
pushf
loope
add
add
add
cmp
add
add
add
add
add
add
sbb
add
js
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
pop
add
test
or
push
add
add
cmp
add
add
add
add
add
add
push
out
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
nop
pop
add
sbb
or
test
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
in
or
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
push
icebp
or
sbb
add
cmp
add
add
add
add
add
add
or
add
push
add
add
cmp
add
add
add
add
add
add
xor
add
mov
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
test
add
insb
std
or
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
clc
add
les
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
sbb
add
cmp
cmpb
add
pusha
or
subb
orb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
mov
add
add
cmp
add
add
add
add
add
add
push
or
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
js
add
lods
or
and
add
add
add
mov
push
or
jo
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
or
cmp
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
add
add
cmp
add
add
add
add
add
add
adc
add
inc
adc
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
push
adc
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pusha
or
add
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
jl
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
nop
adc
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
movsb
adc
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
js
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
or
inc
add
add
add
push
add
add
add
add
dec
add
add
push
add
dec
add
add
or
inc
add
push
add
add
dec
add
add
push
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
inc
add
inc
add
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
xor
add
add
add
add
add
lret
decl
add
add
add
add
addr16
add
add
add
push
add
add
nop
or
mov
adc
add
add
add
add
add
add
mov
or
std
or
aad
or
out
or
cmc
std
or
add
or
add
add
adc
or
add
add
and
or
add
add
xor
or
add
add
inc
decb
add
add
push
decb
add
add
jo
or
add
add
mov
or
add
add
lcall
add
add
add
add
add
decb
add
add
or
add
add
out
or
add
add
stc
decb
add
add
or
or
add
add
sbb
or
add
add
das
decl
add
add
cmp
or
add
add
push
decl
add
add
pop
decl
add
add
outsl
decl
add
add
cmp
add
stc
or
lods
cld
or
adc
or
mov
or
sbb
or
ret
add
cli
or
iret
cld
or
sub
or
fdivr
or
xor
or
jmp
cli
or
idiv
or
inc
cli
or
add
or
dec
cli
or
or
or
push
cli
or
sbb
or
pop
cli
or
and
or
pusha
cli
or
das
std
or
push
add
add
or
dec
std
or
js
or
push
std
or
cmp
add
or
mov
or
insb
std
or
nop
cli
or
ja
or
cwtl
cli
or
test
or
mov
add
add
cli
or
pushf
std
or
mov
or
test
or
mov
add
add
jb
gs
xor
cs
insb
add
jb
fs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
fs
insb
add
insl
arpl
xor
fs
insb
add
imul
insb
add
outsl
arpl
xor
fs
insb
add
popa
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
outsb
imul
insb
add
jb
gs
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
xor
xor
fs
insb
add
jb
gs
xor
cs
insb
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
jo
jb
inc
jbe
outsb
je
add
add
popa
jb
push
gs
imul
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
outsb
jb
popa
insb
imul
arpl
add
inc
inc
insb
gs
outsb
jne
add
add
insl
inc
outsl
jb
popa
je
push
inc
add
add
gs
je
push
imul
inc
add
add
je
jb
gs
gs
fs
imul
gs
add
push
gs
arpl
imul
add
ja
jbe
dec
jne
push
jb
je
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
inc
dec
outsl
arpl
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jb
jo
push
add
add
je
gs
outsl
popa
jb
push
jns
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jae
jb
gs
je
imul
and
add
add
or
add
add
and
add
or
add
add
or
and
add
inc
sub
add
push
or
and
add
mov
add
add
lret
js
or
test
jp
push
add
jp
add
mov
sub
mov
jmp
pushl
add
popf
jmp
mov
add
mov
mov
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
mov
add
mov
jmp
mov
lea
sub
mov
jmp
movzbl
mov
sub
sub
mov
jmp
pushf
push
push
push
push
push
push
push
push
push
mov
mov
sub
mov
add
mov
sub
movzbl
jmp
mov
cbtw
cwtl
inc
sub
mov
jmp
mov
sub
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
mov
mov
add
mov
jmp
and
mov
sub
mov
jmp
mov
mov
mov
add
shld
mov
pushf
popl
jmp
mov
add
pushf
popl
jmp
lea
cmp
ja
mov
lea
sub
lea
sub
mov
pushf
push
mov
lea
push
mov
cld
rep
pop
pop
popf
jmp
mov
lea
mov
add
mov
jmp
movzbl
mov
add
add
mov
jmp
mov
mov
not
not
sub
and
mov
pushf
popl
jmp
and
mov
add
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
sub
add
pushf
popl
jmp
mov
mov
add
mov
jmp
mov
mov
mov
jmp
mov
sub
add
pushf
popl
jmp
movzww
lea
cwtl
sub
mov
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
notl
mov
sub
and
pushf
popl
jmp
mov
mov
add
mov
jmp
mov
mov
not
not
and
mov
pushf
popl
jmp
popa
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
mov
popa
or
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
dec
add
dec
add
xor
pop
add
and
js
add
add
or
add
stos
mov
ljmp
add
imul
push
sbb
rolb
jb
aad
in
sbb
fidivrs
leave
mov
js
mov
xchg
mov
push
xor
or
mov
mov
and
push
mov
mov
mov
adc
test
push
mov
mov
sti
jge
clc
js
cmp
cmpsb
shl
cs
and
int
push
mov
or
test
push
and
outsl
sbb
mov
loop
adc
pushf
testb
jbe
xchg
int3
movsb
negl
xor
inc
mov
xacquire
sbb
inc
shlb
ljmp
in
lods
or
jnp
shr
xchg
test
daa
mov
sbb
jne
psubd
lods
add
hlt
daa
test
jb
xchg
dec
push
out
aad
cli
xchg
inc
pop
push
cli
dec
xchg
sbbb
lods
test
add
dec
je
mov
aam
xor
or
cmpsl
and
fdiv
sub
sub
xor
fiaddl
inc
je
or
add
jg
sbbl
in
int3
or
cmp
push
jg
add
sub
mov
or
test
popa
adc
xchg
push
add
cmc
mov
sub
movsb
fcoms
aaa
mov
adc
mov
mov
imul
lods
mov
push
cli
fsubrs
mov
mov
ds
xchg
js
cmp
mov
sub
pop
int
aaa
mov
bound
aam
or
xchg
inc
cltd
dec
mov
in
cmpsb
jbe
adc
xchg
stos
mov
or
mov
ret
mov
inc
mov
loope
movsl
sbb
pop
divb
out
jl
cmc
inc
mov
dec
movsl
push
mov
outsl
and
xor
popf
mov
push
daa
xchg
jg
jg
inc
push
shrl
sbb
xorb
jg
dec
scas
adc
cmp
push
lods
lea
jl
mov
out
imul
fcmovnu
inc
xchg
push
sub
lds
sbb
mov
test
mov
aam
mov
sbb
dec
inc
or
lods
arpl
int
dec
mov
sahf
cmp
fisubrs
xor
rcrb
repz
mov
dec
mov
lahf
push
fldt
push
adc
cmp
sub
mov
add
scas
and
fiaddl
dec
andl
insl
cmpsb
sbb
push
es
js
push
notb
fwait
pop
mov
mov
mov
shll
xchg
adc
int
repz
outsb
mov
xchg
jne
add
int
testb
fwait
adc
xchg
gs
dec
dec
mov
push
int
scas
dec
mov
xchg
nop
or
xchg
cltd
adc
cwtl
das
fimull
insl
aad
iret
scas
xor
dec
fs
nop
push
adc
add
cwtl
sub
lock
push
sub
adc
stc
inc
ljmp
popf
sahf
idivb
cmpsb
dec
shlb
mov
mov
mov
loopne
add
subb
test
arpl
cmp
shll
or
cli
shrb
mov
popa
add
push
sbb
pushf
xor
filds
jp
in
pop
fidivl
mov
cmc
aas
icebp
in
enter
jno
xor
inc
insb
sub
pop
push
into
pop
adc
jns
jmp
enter
sbb
stos
dec
xchg
sbb
push
sbbl
fldcw
cmpsb
and
mov
movsl
jno
fdivrl
add
jl
imulb
iret
mov
jo
repz
out
js
jg
and
sbbb
test
or
and
sbb
jg
or
test
ret
sub
mov
xchg
adc
mov
push
cmpsb
dec
or
lahf
shr
arpl
lods
sahf
nop
test
and
outsl
jp
push
cltd
mov
mov
push
cmp
add
cmp
out
cmp
inc
pop
mov
push
inc
gs
in
flds
fiaddl
int3
js
movsb
fisubrl
sub
insb
iret
dec
arpl
xchg
sbb
cmp
jnp
ss
popa
jae
pop
jns
xchg
xor
iret
adc
insl
or
rcr
in
insl
inc
jg
sub
or
cmp
ret
xor
sbb
add
gs
enter
cmp
out
push
jns
mov
xor
arpl
test
add
dec
mov
jne
decb
pop
inc
dec
xchg
lds
push
jbe
xchg
insb
cmp
or
insb
pop
shrl
sub
pop
inc
fsqrt
imul
dec
rol
js
add
xchg
je
xchg
xor
and
out
fbstp
insb
aam
dec
cmp
negl
xor
mov
jl
pop
pop
mov
mov
cmp
mov
pop
mov
and
mov
mov
mov
sbb
xchg
sub
lea
stos
xchg
dec
dec
ficoml
jb
push
lds
mulb
xchg
jno
sub
mov
mov
or
dec
mov
sub
test
pusha
lock
daa
cmc
xchg
mov
mov
subl
jno
shl
jecxz
int
xor
sbb
dec
xor
sbb
repnz
xchg
jno
adc
int
dec
lods
je
pop
call
inc
imul
and
add
mov
jmp
sbb
sub
add
mov
xor
lret
sub
jno
mov
outsb
cmpsl
clc
mov
lock
imul
mov
cmp
lcall
out
xchg
cmpsl
fdivrp
clc
adc
and
dec
lcall
mov
adc
jmp
pop
fisttps
lahf
dec
sbb
shl
and
ss
iret
adc
icebp
adc
adc
sti
jge
sub
add
test
out
loop
ret
xor
mov
inc
pop
ss
adc
das
js
sub
xor
test
lret
push
imul
sarl
sti
or
xlat
repz
mov
add
in
adc
jecxz
js
pop
jbe
sbb
and
popa
mov
inc
sub
adc
nop
ja,pn
push
dec
jnp
insb
sbb
out
push
add
inc
sbb
mov
enter
inc
pop
lret
jg
je
lcall
jb
repz
cmp
ror
lret
cmpb
ret
dec
xchg
mov
sub
test
push
sbb
out
or
lcall
xor
std
test
rcrl
ss
fmuls
std
insl
leave
mov
lret
jle
pop
fildll
jns
inc
fwait
fwait
dec
mov
pop
pop
mov
push
inc
mov
xor
es
ljmp
dec
nop
jo
movsl
inc
hlt
jecxz
inc
jno
pop
cmp
stos
pop
movsb
jnp
and
test
nop
push
xlat
xchg
cli
jle
mov
cmc
push
mov
push
and
and
int3
je,pt
or
cwtl
xchg
fistpl
mov
orl
es
out
outsl
mov
dec
call
jnp
leave
imul
ja
or
lea
lret
add
fs
add
lds
notl
sub
mov
dec
sub
sti
mov
aas
cmp
in
pop
sbb
mov
fs
in
inc
out
sub
repnz
andl
notb
add
clc
leave
ss
stos
or
mov
fbld
cmovb
mov
je
jne
out
dec
dec
test
push
pop
add
sahf
push
inc
mov
adcl
sbb
mov
and
mov
inc
sti
mov
ret
arpl
decb
addl
dec
aam
iret
sub
out
scas
push
xchg
movsl
xor
mov
sbb
mov
jnp
into
incb
repz
and
adcb
or
outsl
and
mov
shlb
lds
cmp
xchg
je
mull
dec
in
sahf
repnz
in
push
mov
js
leave
jb
pop
sub
and
punpckldq
ret
repnz
push
mov
cs
or
lods
or
fs
cli
inc
rcll
sub
pop
outsl
mov
test
sbb
cmpsb
xchg
outsb
out
imul
adc
rcr
fidivrl
mov
jle
xor
jo
jnp
jge
hlt
aaa
or
rorl
mov
insl
xchg
lea
add
movsl
jle
in
mov
mov
jle
sti
lods
fucomp
cmc
push
lret
cmc
sbb
bound
mov
pop
cs
pop
adc
mov
or
dec
jo
pop
and
pop
ret
sahf
stos
pop
xchg
lea
call
loopne
mov
xchg
pop
ret
or
sub
mov
cmp
imul
repz
lret
sbb
clc
outsb
negl
in
sub
mov
cs
icebp
daa
stos
jl
jmp
adc
pop
pop
aaa
sbb
push
scas
cmpsl
fiaddl
dec
adc
ljmp
call
insb
je
fcmovu
mov
movsb
inc
dec
dec
test
lods
pop
lock
or
mov
aas
leave
mov
xor
mov
gs
rol
mov
xor
mov
sarb
push
test
lcall
xchg
jns
or
loopne
jb
xor
fwait
dec
inc
dec
shll
sar
cld
mov
cltd
dec
jecxz
dec
or
popa
lea
ds
dec
insb
shlb
scas
sbb
scas
test
dec
inc
xchg
jmp
scas
hlt
stos
in
int
sahf
sub
push
push
xchg
cmp
icebp
shl
dec
addl
mov
lea
hlt
aas
mov
lods
repz
adc
cmpsb
scas
inc
lods
pop
fadd
fstl
imul
sub
inc
push
rolb
ja
hlt
ds
cmpsb
addr16
pop
or
or
jl
inc
inc
cmp
popf
cmp
mov
pop
mov
push
sbb
lods
jbe
add
fnsave
arpl
push
jecxz
xchg
shl
and
sbb
push
stos
ljmp
push
stc
xlat
pusha
pop
repnz
xorl
cld
mov
jle
fwait
in
mov
push
movsb
mov
xchg
jecxz
clc
cmp
xchg
xchg
xor
fsubp
bound
bound
push
push
nop
scas
push
leave
add
or
mov
push
pop
out
les
add
cmc
clc
push
dec
mov
sbb
or
leave
sahf
popa
mov
and
imul
xor
dec
sub
lcall
repz
inc
fiadds
orl
inc
cs
inc
inc
scas
dec
dec
out
insl
hlt
cmp
push
loope
mov
out
or
pop
test
out
push
and
mov
movb
sbb
cli
js
scas
inc
cmp
jae
js
repz
mov
mov
int3
test
xchg
ret
adc
inc
imul
pop
push
idivb
lret
mov
xor
fisubl
imul
pop
mov
loopne
cmp
cmpsb
js
mov
xor
pop
sub
aam
mov
xor
inc
mov
ljmp
cli
out
test
cli
mov
addr16
add
fldt
or
inc
jge
repz
sarl
adc
arpl
loope
ja
push
dec
pop
xchg
xchg
cmp
test
out
mov
test
mov
popf
loopne
lods
xchg
jae,pn
outsl
fbstp
mov
and
shrl
jle,pt
adc
xlat
je
adc
mov
std
lret
hlt
movsl
add
pop
or
popf
lcall
xor
popa
mov
mov
xchg
xor
out
addr16
test
xor
scas
xor
flds
aad
or
shll
hlt
je
fs
lcall
add
push
in
ret
js
sub
bound
mov
pusha
jne
cmp
int3
lds
sub
xchg
shl
add
cmc
pop
hlt
dec
or
mov
fs
and
mov
aaa
sbb
mov
les
pop
inc
icebp
cmpsb
cs
ja
mov
dec
in
fimull
or
call
jge
roll
outsb
mov
pushf
or
dec
and
adc
push
and
adc
xchg
xor
icebp
cmp
jle
pop
jle
insb
scas
int3
sbb
in
ficompl
xchg
jmp
test
outsb
ds
lret
out
div
jecxz
mov
cmp
out
repz
enter
test
lret
push
push
movsl
lahf
or
je,pt
push
daa
sub
inc
push
pop
jecxz
cld
inc
out
cld
adc
scas
fcmovnu
mov
aad
dec
repnz
fs
lds
sub
insl
mov
mov
mov
lods
mov
cmpsl
jbe
sar
pop
fists
mov
pop
outsb
push
insl
in
test
fwait
adc
int3
stc
add
out
jbe
out
jg
fisubrl
adc
bound
pop
test
mov
push
pop
mov
add
add
pop
add
lahf
mov
or
ret
add
lea
xor
pop
aaa
push
and
loope
loopne
dec
xchg
pop
popf
mov
movsl
pop
lds
ficomps
mulb
jl
inc
pop
sub
dec
inc
jecxz
mov
fs
xor
das
inc
pop
sbb
adc
into
ret
jg
jmp
idivl
int
ds
mov
inc
into
jbe
pop
les
incl
pop
popa
test
push
fldcw
dec
jb
outsl
push
fmuls
pop
test
xchg
push
ljmp
xchg
xchg
cmp
cmpsl
sub
in
pop
aad
mov
pop
dec
ds
pop
mov
add
int3
aas
cmpsl
dec
cmp
push
inc
addr16
popa
and
loopne
fnsave
leave
enter
mov
daa
cmp
lcall
sarb
mov
jb
jg
dec
cld
fsubrs
add
jbe
mov
xchg
sub
pusha
xlat
adc
sub
pusha
cmp
lock
sub
mov
lods
cltd
stc
insb
insb
repz
pop
jne
inc
add
xchg
xchg
jne
pop
xlat
fxch
and
or
add
jne
fstl
cmpsb
mov
not
xchg
mov
sti
sar
test
hlt
pop
mov
and
or
pushf
stos
fldenv
push
inc
flds
rcr
pop
arpl
ror
scas
lds
test
add
enter
xchg
pop
jae
jp
sub
inc
or
cmp
mov
stos
and
sub
test
dec
and
pop
sbbl
mov
inc
mov
push
rol
lcall
lock
in
lret
cmp
lahf
and
jp
adc
mov
inc
xchg
adc
shll
mov
or
cmp
xor
adc
cmp
iret
aaa
test
or
xchg
movsl
and
pop
dec
jbe
fistpl
dec
add
cltd
mov
adc
mov
and
jb
jno
ds
fsin
mov
mov
sarb
fsubrl
rorb
pop
xchg
or
cmp
ja
shll
out
sbb
sub
mov
dec
test
sti
cmp
mov
out
arpl
sbb
ror
movsb
mov
outsb
rcl
iret
int
lahf
enter
scas
pop
pop
dec
out
push
test
rolb
cmpsl
bound
mov
mov
imul
out
cmovl
jg
test
pop
jle
push
out
sub
or
inc
pop
jg
aad
sub
arpl
fwait
imul
test
out
cmpsl
mov
test
scas
clc
pop
iret
stos
sti
sub
fsubrs
push
js
jns
sub
out
cmp
div
adc
pop
jle
call
mov
sbb
jmp
je
imul
inc
jge
hlt
insl
shll
gs
jo
lret
cli
outsl
int
js
lock
aad
mov
dec
sbb
popf
or
inc
dec
enter
sub
shrl
xor
or
cli
cmpsb
stos
popa
mov
fsubs
jb,pt
shr
imul
stos
mov
push
pop
and
or
adc
fwait
dec
or
mov
test
pushf
dec
repz
push
mov
pop
pop
dec
mov
bnd
xchg
or
xor
push
push
push
and
mov
pop
or
cmc
aaa
cmp
and
add
test
adc
hlt
lret
int
adc
xor
in
repz
xor
push
jno
jo
adc
movsl
enter
imull
test
dec
add
dec
mov
mov
dec
pop
push
cli
rcrb
xchg
je
add
jns
push
lret
dec
push
cmp
ret
pop
mov
dec
xchg
xor
mov
arpl
sub
insl
adc
imul
xor
bound
push
ret
inc
and
popf
cmp
in
ljmp
sub
pop
adcl
aad
dec
push
das
cmpsl
scas
in
jmp
xchg
test
addb
ds
mov
inc
out
clc
add
fnstenv
mov
out
pop
and
adc
je
and
mov
addr16
adc
leave
les
adc
jne
inc
cmp
repnz
xchg
lods
imul
sub
nop
hlt
aas
into
inc
arpl
fnsave
pop
add
loope
or
call
pop
icebp
pop
enter
jns
mov
leave
lahf
pop
inc
mov
ret
add
or
js
movsb
out
mov
sub
jmp
dec
sub
or
daa
cwtl
lods
das
addb
sub
rorb
out
lret
mov
mov
inc
mov
sub
int3
adc
xchg
push
hlt
mov
cmp
inc
negb
cmp
test
push
or
jl
out
lcall
aam
and
pop
jae
adc
pop
out
or
push
add
mov
xchg
adcl
scas
es
add
mov
aad
das
mov
sub
imul
scas
dec
xor
call
jmp
inc
inc
and
cmpsl
jne
into
daa
inc
aam
orl
imul
pop
arpl
xor
adc
sub
je
movsl
arpl
or
mov
leave
ds
jae
das
push
and
ljmp
jmp
mov
jne
xchg
dec
sub
test
mov
mov
and
jo
or
mov
ret
pop
pop
test
aam
ds
cmpsl
jae
and
ret
mov
lcall
push
sub
cmc
dec
jmp
jno
xchg
jl
push
mov
mov
sub
jns
mov
movsl
mov
inc
repz
and
shlb
lea
gs
adc
pushf
lret
int3
mov
mov
mov
and
sbb
les
in
das
js
inc
stc
fsubl
fmull
mov
or
adcb
ror
sbb
fbld
daa
lret
xor
mov
pop
inc
or
cmpsb
cltd
iret
jb
ja
lea
shll
jb
push
mov
fs
shrb
push
xchg
shll
cwtl
rcrb
xchg
push
lods
ss
or
cmp
or
mov
std
mov
jns
pop
cld
cs
cmp
loop
idiv
inc
movsl
xor
shrb
adc
loope
jmp
xor
fcom
push
add
and
pop
inc
add
mov
cmp
stos
mov
or
leave
call
jmp
repnz
loop
ret
idiv
mov
adc
and
sub
mov
pop
mov
imull
imul
test
cmp
stc
xchg
pop
out
xchg
add
mov
pop
push
lods
pop
sbb
xchg
idiv
test
gs
sub
add
and
mov
lds
repz
rcrb
dec
xor
push
int
adc
ljmp
fstpt
xchg
mov
aam
sbb
mov
cltd
jnp
sarb
test
sub
repz
sub
hlt
push
xchg
jp
sub
jo
sbb
aaa
nop
xor
sahf
or
xor
and
jo
movsb
cmp
pop
inc
mov
lock
fmuls
leave
data16
fsubr
and
insl
loop
xchg
push
xchg
fnstsw
mov
sbb
or
scas
lret
inc
je
rcrl
ret
lds
mov
mov
dec
fdivrs
dec
cmp
or
lds
mov
inc
dec
loop
out
into
daa
jns
and
sbb
dec
mov
pop
fcomp
cmp
leave
cs
insb
filds
or
in
dec
mov
xchg
ss
dec
and
movb
inc
aas
js
icebp
inc
fisttps
cmpsl
ret
nop
add
dec
jns
xchg
inc
jne
mov
pop
push
mov
jg
or
and
lea
repnz
lret
sbb
test
add
or
insb
clc
lds
sub
or
inc
add
insl
add
sti
inc
lret
jns
or
call
mov
inc
in
ja
sbbb
movsb
sub
js
mov
sub
mov
mov
push
stos
pushf
mov
outsb
out
sub
sbb
in
roll
or
out
sbb
pop
mov
pop
fisubs
out
mov
xor
sbb
call
mov
mov
test
sub
insl
jmp
mov
cmp
popf
jecxz
inc
into
fs
orb
sbb
xchg
mov
cmp
sub
out
iret
mov
int
jno
sbb
rcr
fldenv
mov
lret
pop
or
dec
fldt
in
inc
dec
lcall
fstps
cld
add
fcoms
jno
aas
roll
xchg
loopne
pop
push
stc
mov
leave
mov
lods
les
in
cmp
add
shr
mov
sbbl
inc
popl
mov
mov
ret
mov
cmp
scas
loopne
add
and
or
jmp
and
orb
daa
fdivrl
mov
cs
pop
xchg
dec
call
push
leave
stos
mov
jmp
mov
daa
push
xor
dec
cmpsl
nop
in
sbb
inc
push
sub
imul
pop
add
pop
push
in
imul
sub
push
and
aad
dec
sbb
scas
mov
xchg
mov
test
outsb
mov
push
add
push
jne
inc
mov
cltd
mov
loope
jns
imul
inc
sbb
popa
daa
or
test
andl
out
and
jb
lods
cmpsb
sarb
inc
cs
push
sbb
ds
inc
pop
sub
pop
jmp
cmpsl
pop
mov
mov
mov
sbb
enter
hlt
ret
int
int
fdivrs
add
adcb
sub
dec
mov
dec
fdivs
popf
jle
imul
cli
lret
lea
pop
bound
push
in
sbb
inc
repz
sub
addb
mov
movsl
dec
les
pop
out
sbb
repz
aam
addr16
sub
xor
out
mov
sarb
inc
and
mov
adc
jge
ss
sbb
mov
ljmp
ja
aam
dec
enter
adcb
jecxz
nop
test
loop
or
pop
inc
add
fldt
add
cmp
push
loop
popl
imulb
ja
loopne
sbb
icebp
leave
xor
sarl
add
xchg
imul
pop
cltd
sub
mov
pusha
enter
xchg
cmp
mov
jge
jmp
add
push
mov
in
xchg
add
nop
dec
or
mov
in
sbb
xor
stos
mov
mov
or
out
dec
push
enter
jbe
adc
sbb
mov
roll
sub
mov
sbb
or
shlb
and
imul
aam
mov
je
movsb
rcl
xchg
mov
pushf
mov
mov
adc
loopne
iret
xchg
pop
ficomps
add
mov
pop
in
test
mov
mov
filds
and
mov
mov
cwtl
das
push
inc
dec
ds
xchg
rorl
mov
out
test
popf
pop
insb
xor
sub
sub
fadd
sub
xor
pop
out
enter
imul
mov
mov
repnz
cmp
xor
inc
xor
mov
or
jmp
pusha
lahf
xchg
cmpsl
in
pop
cld
and
sub
loope
add
mov
push
and
mov
mov
pop
pop
xor
add
add
test
ds
jle
mov
jg
push
pop
ja
adc
sahf
les
inc
ljmp
jnp
dec
or
mov
in
push
jo
sub
mov
pop
mov
cmp
mov
leave
inc
add
or
pop
xchg
mov
lds
push
xor
dec
push
pop
aam
or
int3
sbb
test
scas
in
test
jno
xchg
subl
ljmp
sbb
cmp
adc
push
sbb
movsb
in
in
loopne
push
sbb
xchg
mov
push
aas
xlat
aam
ret
push
hlt
xlat
xchg
repz
cltd
mov
es
mov
popf
add
mov
ds
lahf
dec
xor
jns
addr16
ficompl
jno
test
lret
repz
enter
push
fwait
lret
mov
mov
add
jmp
jmp
and
dec
jne
cmp
mov
jns
sub
sub
int
mov
fwait
clc
sbb
sti
pop
and
mov
mov
fadds
sub
repnz
pop
push
mov
loope
rorl
add
xchg
cmp
sub
inc
or
out
sub
das
call
in
int3
xchg
push
xchg
or
hlt
dec
mov
shr
out
fnsave
xchg
push
aas
inc
add
inc
gs
xor
nop
xchg
fdivl
js
xchg
cwtl
leave
ror
push
gs
mov
jbe
mov
cmpsb
call
xchg
xlat
jb
xchg
mov
mov
mov
repnz
push
adc
cmp
repnz
cmp
outsl
fidivrs
scas
push
and
loope
xchg
popa
int
in
int
in
pop
pop
fisttpll
pushf
push
mov
out
push
xor
out
push
jp
mov
push
in
pop
xchg
sbb
lock
sahf
dec
mov
loop
leave
outsb
and
inc
add
std
push
es
idivb
fwait
jae
insl
cmc
mov
jno
mov
xchg
jg
in
pop
in
lcall
gs
cmpsl
inc
pop
ljmp
dec
lods
mov
nop
arpl
adc
cmc
fs
fdivl
lds
push
mov
aaa
movsb
pop
jo
addr16
push
in
jo
cmpl
ss
cmpsb
ds
gs
mov
rorb
imull
imul
sbb
clc
jge
sbb
xor
or
add
add
iret
daa
cld
repnz
jmp
or
xchg
lahf
cmp
xchg
dec
xor
out
nop
add
lods
cmp
mov
sub
or
cmp
adc
push
pop
std
sub
test
cwtl
xor
loop
mov
ret
shl
push
les
and
xchg
inc
nop
fadds
aam
out
jg
push
adc
cli
cltd
mov
sub
les
xchg
xchg
pop
add
jmp
rcrb
mov
mov
mov
and
and
cltd
mov
add
or
ds
stos
out
jg
sti
inc
or
jno
xor
test
cmp
add
lock
pusha
stos
sbb
lods
loope
jg
xchg
int3
dec
mov
mov
xor
cmp
pop
enter
fisttpl
aam
xlat
add
fisttpll
inc
and
or
repnz
ret
rcrl
mov
test
xchg
aas
add
pop
in
shrb
rolb
cmp
xor
fs
cmp
data16
mov
sub
test
mov
rol
xchg
mov
outsl
dec
sbb
int3
pop
std
push
aad
iret
push
lock
adc
aas
xor
sub
aas
leave
hlt
sti
rcl
xchg
add
and
pop
mov
jo
aas
mov
loope
adc
mov
hlt
xor
jnp
dec
outsb
ror
sub
pop
scas
cmp
and
pop
push
and
insl
ret
lret
or
and
fildl
ljmp
es
xor
cmc
stos
fildl
cmc
xor
push
cmp
mov
lret
jecxz
jmp
add
mov
insb
testl
push
xchg
push
les
dec
mov
add
shll
adc
sub
stos
sbb
xchg
jns
push
and
push
es
mov
in
daa
popa
nop
aad
stc
pop
fisubrl
ljmp
fisttpll
cwtl
xchg
gs
shl
popf
and
cmp
pop
or
mov
sbb
mov
xor
inc
fs
mov
inc
cwtl
mov
rorl
pushf
int3
inc
out
jb
adc
mov
push
popf
cwtl
mov
or
sub
sub
push
xor
jbe
pop
es
mov
sub
mov
push
mov
pop
stos
push
cs
leave
movsl
scas
stc
ficoml
mov
subb
test
jge
dec
mov
lahf
mov
push
scas
lea
int
push
roll
in
scas
shl
out
xchg
aad
adc
ds
mov
shll
xchg
sub
inc
sub
fisubs
dec
insb
xor
sub
popa
push
pop
loope
sub
push
mov
mov
sbb
add
frstor
inc
mov
sahf
movl
mov
outsb
cmp
xchg
mov
je
xor
outsl
pushf
add
outsl
in
inc
inc
jle
mov
inc
pop
mov
cmp
iret
rolb
pusha
dec
test
leave
loopne
movsl
pop
or
push
icebp
mov
push
mov
push
lock
adc
fs
push
mov
pop
xchg
jl
andb
pop
mov
add
enter
sub
jae
pop
add
xchg
dec
inc
jnp
jecxz
xor
test
shrb
cmpsb
into
mov
out
fistpl
jmp
jae
insl
pop
adc
loope
sub
mov
cltd
aas
dec
adc
cmpsb
pusha
outsb
cmp
cli
fnstenv
push
push
jp
das
mov
mov
clc
pop
mov
inc
cmpsb
test
mov
jmp
fld1
mov
lcall
into
inc
aas
popf
ret
jo
xor
fyl2xp1
ret
adc
push
jne
cmpsl
cmp
xchg
dec
or
sahf
testl
shrl
mov
test
test
push
shrb
fcom
xor
mov
sbb
shrb
xchg
xor
aam
xor
pushf
call
cmpsl
and
or
add
call
std
outsl
xadd
lahf
adc
aam
out
in
mov
jp
iret
jmp
jbe
pusha
sar
test
mov
jecxz
scas
mov
shl
jge
ja
sti
add
ljmp
xchg
jne
imul
push
shll
lcall
test
cltd
cwtl
cmpsl
popa
lds
mov
pop
out
adc
sti
fdiv
sub
lahf
fsubrl
mov
xchg
arpl
xor
add
movsb
dec
fisttpl
shlb
mov
jl
rdmsr
stc
shrl
sub
cs
out
mov
mov
adcb
lea
wrmsr
adc
popa
hlt
shll
mov
test
enter
pop
jae
fldl
pusha
cmp
lds
push
out
mov
divb
jns
mov
loope
mov
pusha
aaa
mov
mov
xor
adc
jne
or
xlat
mov
fwait
jl
in
jo
xor
popa
jbe
fnstcw
shrl
inc
stos
ret
xchg
adc
es
call
pop
loop
dec
mov
xchg
hlt
push
dec
enter
pop
adc
clc
lahf
loop
cwtl
fcos
in
xchg
arpl
lret
jo
call
add
out
jmp
outsb
call
pop
jne
adc
xchg
inc
cmp
push
mov
rol
lahf
pop
adcb
int
sbb
and
push
xchg
push
enter
andl
push
clc
pop
arpl
pop
sub
add
pop
inc
insb
push
push
stos
mov
adc
cwtl
push
add
and
or
out
addr16
in
cli
mov
outsl
std
inc
xor
lods
call
test
adc
and
cmc
push
out
inc
adc
test
fucomip
xchg
xchg
mov
loope
icebp
andl
pop
int3
mov
dec
call
add
icebp
aaa
and
jmp
gs
imul
popf
cmp
cmp
adc
xchg
xlat
subl
mov
addr16
push
imulb
jno
sbb
sarl
xchg
add
lsl
imull
lret
pop
lods
jo
sbb
loopne
pop
in
stos
dec
jbe
mov
insl
pop
mov
fnstenv
mov
xchg
xor
inc
fucomi
dec
in
jno
mov
inc
dec
pop
icebp
inc
sub
sbb
and
roll
xor
std
rclb
mov
sbb
sub
lret
pop
aam
scas
imul
rclb
mov
xchg
or
jecxz
lods
cltd
scas
cmpsl
or
jg
mov
xor
inc
inc
sbb
lcall
mov
cwtl
repz
mov
scas
loopne
dec
inc
inc
jno
stc
push
and
sbb
out
push
xchg
loope
fcoml
pop
jne
test
bnd
xchg
lahf
ret
loopne
jl
dec
mov
pop
js
push
and
inc
lock
xor
xor
lcall
pop
jo
cmp
mov
imul
lods
xchg
or
outsb
add
je
adc
pop
adc
or
pop
in
mov
fstps
jo
sbb
jmp
orb
out
rorb
mov
xchg
std
dec
testl
pop
add
ja
idivl
sahf
jl
inc
pop
inc
jmp
loop
lods
fisttps
ds
cwtl
add
or
sub
repz
dec
push
sbb
dec
call
cltd
add
or
addr16
fsub
xor
mov
mov
mov
iret
aas
iret
add
orl
and
pop
mov
stc
popf
rcrb
lcall
cs
cmp
mov
mov
and
adc
fstps
cmp
inc
and
dec
pop
stos
mov
in
mov
xchg
add
cmp
ret
mov
clc
sti
lret
mov
inc
lea
inc
in
xor
and
cmp
mov
pop
leave
inc
mov
push
dec
shll
sbb
popf
add
pop
sub
repz
aam
je
shlb
sti
sahf
push
mov
mov
rorl
sub
cli
arpl
push
inc
in
psubsb
test
xor
cmpsl
dec
pop
mov
mov
daa
jnp
lcall
mov
sbb
int3
mov
sub
mov
mov
jle
inc
add
rorb
aam
and
push
adc
dec
scas
inc
push
or
popa
lds
shl
fs
in
ret
cmp
jno
test
subb
mov
sti
mov
inc
mov
fwait
data16
add
paddd
popf
and
sub
mov
and
gs
lret
or
pop
iret
test
in
lock
inc
les
fs
xor
or
sub
insl
xlat
imul
sub
daa
cmp
push
adc
ljmp
jne
xor
jae
or
mov
fstl
aas
rcll
call
cmp
inc
jne
lock
jno
inc
xchg
pusha
in
pop
add
xchg
mov
pop
push
sbb
subl
sbb
hlt
mov
xchg
mov
ret
jle
fucomip
fiadds
ja
pop
or
and
add
push
mov
loopne
jbe
push
fisubrs
call
or
popa
xchg
lahf
std
cmc
inc
loopne
xchg
iret
daa
fldcw
call
out
jb
push
add
mov
lahf
lcall
ljmp
mov
subb
fwait
lods
mov
dec
mov
fisubs
push
loopne
roll
cwtl
into
push
push
inc
stc
mov
bound
out
cltd
cmp
es
or
mov
pop
dec
lods
jns
cmp
mov
das
or
adc
rorb
dec
aas
fdivrs
scas
aaa
loopne
jb
xor
and
xchg
in
lretw
jl
aas
cmp
xchg
shlb
or
xor
add
scas
mov
pusha
mov
jmp
add
xor
xor
rcll
or
rcrl
cld
xor
jb
sarb
adc
dec
dec
aad
and
inc
pop
xchg
dec
adcb
sub
adc
mov
mov
jae
add
and
lock
lret
mov
jge
xor
loope
jnp
rcrb
adc
cmp
xchg
mov
fcoml
mov
sub
out
push
fdivl
cli
or
call
aas
mov
push
sahf
sbb
sbb
aaa
repz
push
sbb
test
mov
repnz
ds
and
lcall
add
flds
xor
push
push
adc
arpl
xor
fwait
clc
push
sbb
cmp
jae
lea
imul
push
or
add
pushf
dec
rorb
lcall
fwait
mov
push
mov
div
in
imulb
mov
notl
icebp
rorl
jb
and
add
sbb
pop
shll
xor
cmp
outsb
rcrb
in
mov
pop
call
push
cli
mov
pusha
jmp
cmp
pop
mov
dec
lea
icebp
lret
adc
adc
sub
xorb
test
daa
out
sub
mov
push
stos
sub
or
movsb
loop
xchg
decb
mulb
and
imul
mov
push
add
pop
sbb
clc
and
cmp
pop
jno
addb
adc
loop
push
push
jb
cli
cmp
cli
jmp
push
call
lea
jmp
jl
and
into
xchg
lock
adc
jns
scas
push
push
push
nop
ret
or
scas
pop
adc
popf
add
nop
cmp
cmpsl
imul
lcall
imul
pop
jg
std
add
push
int3
pop
add
ds
hlt
stc
pop
inc
pop
call
test
xor
lcall
in
popf
sub
clc
xchg
and
jg
fimull
shlb
xor
push
mov
cmc
test
fildl
sub
insb
adc
loope
xchg
insl
lea
inc
pextrw
xchg
push
inc
aas
shll
mov
pop
sahf
lods
idiv
xchg
test
add
ds
mov
inc
add
cmpl
and
cmpsb
clc
xchg
cmp
cmp
fs
roll
mov
mov
repnz
js
jmp
mov
inc
sub
sub
push
leave
in
ss
addb
push
sbb
cltd
test
out
notb
inc
lock
stos
hlt
loop
in
push
lods
pop
jg
js
push
test
pop
mov
mov
sub
dec
mov
std
cmpsl
add
dec
jbe
adc
sbb
dec
fimull
fcmovu
imul
in
mov
fdivrl
mov
push
std
or
adc
xlat
arpl
ds
and
daa
jge
in
pop
push
bound
mov
adcl
jns
xchg
xchg
mov
hlt
outsl
and
jg
mov
mov
push
fnsave
fisubs
out
xor
mov
nop
imul
inc
cmp
fbld
mov
mov
mov
mov
jp
insl
out
clc
jle
jge
ret
and
inc
add
xlat
xchg
mov
sbb
sbb
into
push
pop
mov
and
add
and
sar
mov
popf
cwtl
jo
in
sub
cld
sbb
pop
in
cmp
push
pop
push
mov
and
data16
gs
rep
mov
add
mov
xchg
jae
aad
jg
mov
lcall
mov
adc
dec
xchg
scas
pop
mov
sbb
jae
cmpsb
xor
and
out
jmp
sub
stos
test
mov
sti
pop
mov
sub
mov
fdivp
sub
inc
dec
add
inc
add
into
sbb
in
xchg
xchg
adc
in
popa
jmp
std
mov
gs
fwait
cmp
aaa
jp
icebp
mov
mov
push
xor
in
push
out
xchg
sub
cmp
xor
stc
iret
insb
dec
xor
insb
pop
adc
je
push
and
lds
out
repnz
pop
mov
push
mov
xor
mov
lret
jnp
cmp
add
mov
js
and
sbb
out
in
cmp
jmp
ds
adc
dec
cmp
inc
cmp
mov
pop
icebp
fistpl
fucomip
mov
pusha
or
or
rcrl
int
dec
les
jnp
adc
mov
je
jb
loop
daa
lea
mov
fwait
push
test
inc
adc
aas
pop
mov
cmp
fs
adc
insl
jge
sahf
sbb
cmc
and
mov
call
testl
cwtl
mov
scas
pop
test
adc
gs
outsl
ljmp
mov
pop
out
push
aam
lretw
dec
inc
ds
lea
lahf
cmp
mov
movsl
jb
push
stos
mov
lea
cs
cmp
pushf
xor
jmp
sub
or
data16
fs
popa
ret
adc
out
xor
mov
sbb
out
pop
outsl
pop
das
inc
cwtl
xchg
cmpsb
ret
inc
mov
pop
or
js
sub
and
repz
or
daa
jecxz
xchg
stos
adc
inc
iret
push
pop
out
pusha
push
xchg
and
clc
sarl
push
cmp
xchg
icebp
fisubs
in
lds
lea
clc
add
xor
test
out
pop
dec
adc
cs
push
imul
es
aas
jg
stos
cltd
hlt
mov
cmp
or
sub
sbb
mov
cmpsl
inc
repz
rolb
aam
sub
mov
shlb
shlb
xor
jl
das
cmp
shrb
xlat
mov
mov
fnsave
fistpl
mov
push
xchg
ret
push
cld
bnd
inc
adcb
sbb
das
sbb
in
pop
and
sub
je
pop
loopne
mov
push
push
push
xorl
movsl
pushf
push
inc
push
push
add
jg
popf
test
dec
and
leave
inc
mov
and
fdivrp
loopne
mov
repnz
rcll
xor
add
cmc
divb
cwtl
lcall
and
mov
jl
jbe
fadds
push
inc
sub
stc
dec
jle
test
cmp
mov
loop
mov
pop
lock
xor
out
mov
lock
ljmp
or
mov
imul
mov
pop
cs
dec
inc
pusha
inc
push
dec
dec
nop
sub
add
pop
iret
sbb
mov
cwtl
push
mov
and
dec
int3
jp
icebp
outsb
push
jno
or
jl
push
aaa
mov
and
sub
daa
dec
movsb
sbb
cltd
xor
xor
call
inc
mov
sti
sub
out
in
pop
xor
jg
jbe
sbb
mov
xor
adc
adc
inc
and
or
jbe
daa
mov
sbbl
fdivs
mov
adc
push
mov
out
pusha
xor
xchg
stos
or
daa
mov
lods
pop
xor
popf
add
leave
push
pop
ds
into
xor
icebp
in
pop
dec
cmpsb
adcb
xchg
cltd
or
add
xchg
xor
xchg
scas
jne
aaa
xorb
ret
test
into
rcll
pop
adcl
xchg
insb
pop
jns
adc
cmp
mov
dec
sbb
out
js
rolb
xchg
mov
pop
pop
adc
sahf
mov
sub
stos
insb
mov
dec
insl
dec
xor
jmp
fisubl
hlt
add
stos
mov
xorb
or
out
mov
xlat
fcoml
je
xorl
pop
sahf
stos
jbe
pop
xchg
in
repz
pusha
movsl
sbbb
mov
xor
mov
inc
lds
movl
lret
test
popf
dec
pop
in
nop
xor
sub
pop
shlb
loopne
mov
loop
cwtl
cmpsl
and
pop
js
pop
into
xchg
fists
cmp
sbb
mov
aad
out
sbb
xchg
shlb
clc
lea
xchg
adc
scas
push
mov
push
bound
fwait
jne
cwtl
mov
xor
test
pushf
mov
mov
fsubl
enter
cs
mov
cmp
loop
sub
pop
cmp
incb
push
jmp
push
test
mov
in
mov
dec
jp
inc
pop
out
in
dec
xchg
push
movsb
test
sbb
ljmp
pop
pop
popf
sbb
mov
mov
imul
movsl
mov
sbb
data16
out
repz
std
cmp
popf
push
repz
xor
ljmp
cwtl
mov
ljmp
mov
and
mov
add
push
jmp
sbb
cmp
dec
mov
subl
adc
sti
stc
mov
add
jns
fwait
push
sbb
arpl
sub
mov
nop
mov
testl
pushf
ljmp
push
insl
or
pop
fsubs
jo
ds
dec
nop
jge
mov
push
sbb
frstor
mov
sub
xchg
pop
xchg
add
test
inc
mov
adc
mov
ror
cmc
xor
xchg
jb
sub
lea
mov
pop
xor
inc
mov
subl
adc
push
mov
mov
gs
add
ljmp
jg
cmpsl
out
adc
inc
out
pop
jg
lret
dec
popf
nop
mov
data16
and
in
jecxz
cmp
mov
xchg
mov
mov
dec
xor
add
pusha
lret
into
iret
repnz
sahf
adc
ss
in
dec
sbb
adc
pop
lock
sbb
and
jnp
jae
in
into
testl
lods
pop
dec
pop
data16
fiadds
out
in
and
mov
shlb
inc
jns
cs
xor
pop
dec
ret
js
pop
bound
fnstsw
sub
inc
cmpl
ret
sbbb
jno
xor
adc
xchg
pop
mov
cmpsl
data16
cmp
iret
mov
xor
mov
mov
into
push
clc
cvtps2pd
pop
push
test
push
mov
sti
add
ds
movsb
hlt
mov
push
testb
das
clc
shrb
fbld
dec
adc
add
dec
cmp
mov
or
mov
mov
adc
aas
stos
xor
nop
fwait
popw
jp
ljmp
in
cmp
jmp
aaa
scas
xor
mov
test
push
jns
pop
jp
jle
movsl
fcomip
loop
or
cmpsb
sub
xchg
shl
or
xor
adc
mov
leave
cmp
mov
pop
stc
xchg
cmc
push
iret
sbb
mov
loope
mov
sub
or
and
in
out
insb
sbb
dec
icebp
icebp
cvtpi2ps
jnp
fcmovne
xor
cltd
cmp
push
sbb
je
aaa
int3
int3
pop
dec
outsl
pop
popf
or
push
adc
mov
lds
iret
cwtl
adc
loopne
xor
inc
shl
mov
xor
test
pop
je
jle
jbe
mov
js
or
inc
pushf
rclb
fadd
stos
or
sti
or
js
in
mov
fwait
es
mov
pop
dec
xor
ret
cmp
inc
add
ljmp
dec
scas
roll
fwait
gs
in
popf
cmp
adc
xor
lahf
fs
sbb
xchg
push
imul
push
push
lock
sub
pushf
add
daa
loop
ljmp
inc
std
sbb
popa
pop
jns
sub
repnz
adc
imul
daa
rclb
cmp
je
ljmp
add
stos
repnz
call
mov
sub
push
adc
in
jl
movsl
push
shlb
mov
test
adc
adc
popa
push
xchg
fstpl
cwtl
adc
pusha
sbb
mov
dec
and
or
cld
mov
adc
icebp
jmp
data16
in
out
mov
jb
jae
xor
or
insb
sti
jne
imul
sub
lret
cmp
lods
ljmp
outsb
lret
data16
pusha
pushf
inc
mov
push
push
nop
lret
in
xor
hlt
daa
insl
xor
aam
jmp
repnz
inc
mov
icebp
xor
cmc
push
cltd
adc
test
xor
mov
out
leave
addr16
fnsave
sub
sbb
and
jb
push
inc
mov
push
lcall
or
cs
push
and
popa
imul
or
and
jle
adc
loopne
mov
mov
ljmp
bound
out
out
jno
mov
pop
jbe
dec
inc
outsb
and
imul
fs
loope
test
xchg
je
mov
push
mov
aam
jp
push
fs
icebp
xchg
dec
sti
cmp
pusha
mov
fstpt
popa
lret
cmp
push
push
test
gs
in
push
les
test
jb
insl
xor
sbb
mov
push
mov
cli
pusha
outsl
popa
push
enter
sti
popa
add
ret
gs
add
movb
pop
cmpsb
push
aad
sbb
mov
add
cmc
rorl
scas
cmp
sub
mov
out
cmpl
repz
xchg
jnp
xchg
push
or
add
in
aad
xchg
test
fmuls
es
push
and
clc
sti
or
xchg
scas
xchg
mov
shl
jle
xchg
push
jle
addr16
mov
mov
or
mov
out
ss
cmp
movsb
movsl
jnp
jp
aas
add
aas
xor
out
js
inc
lret
jg
fs
addr16
fcompl
loopne
jl
scas
xchg
push
dec
push
xchg
dec
adc
arpl
xor
stc
imul
or
scas
das
push
mov
fs
and
shrl
negl
stos
ficoml
bound
in
dec
adc
sbb
xchg
bound
cmp
jl
mov
xor
aaa
loop
lock
les
repnz
nop
sub
jl
and
jb
sbb
inc
popa
mov
push
mov
inc
add
fcoms
jp
mov
pop
cmp
adc
jo
adc
fisubl
andl
out
mov
cmp
aad
les
cmpl
es
outsb
add
sub
jg
into
and
cwtl
fnstsw
mov
fimuls
out
add
sahf
test
push
push
add
push
aad
arpl
ret
mov
xchg
jno
ret
bound
mov
jnp
mov
sbb
jb
add
outsb
xor
repz
scas
out
lods
and
jo
ljmp
lcall
stos
cmp
push
test
or
xor
mov
pop
xchg
sbb
mov
test
xchg
mov
nop
insl
dec
cmp
mov
xor
xchg
cltd
mov
fwait
sar
inc
call
clc
hlt
ret
adc
stos
fucomi
movsb
dec
mov
mov
loope
mov
dec
in
fsub
data16
out
sbb
jae
push
fldcw
cmpsl
fsubrs
in
cmpsb
sti
test
lcall
inc
cmp
fs
mov
mov
stos
out
in
jae
dec
sub
xor
stos
xchg
pop
mov
mov
mov
mull
fisubrs
push
fisttpl
rorl
mov
xchg
push
loopne
hlt
mov
mov
leave
popa
dec
xorb
pop
push
test
shll
in
and
and
les
sti
or
xchg
mov
and
adc
hlt
push
cmpb
push
xor
les
repz
ret
imul
outsb
repnz
push
lahf
enter
pop
or
dec
arpl
sbb
mov
in
xchg
fildl
add
or
fiaddl
pop
add
mov
fadds
sbb
imul
add
dec
test
lds
scas
icebp
push
shrl
sbb
lret
xchg
mov
jae
jae
xchg
in
add
xchg
inc
outsl
addr16
loopne
lods
nop
mov
mov
mov
xor
or
loope
lods
movsl
cmpsl
push
xchg
mov
lret
iret
ljmp
outsl
mov
mov
aad
data16
lcall
pop
add
cli
mov
xchg
push
adc
or
adc
shll
pop
or
cmc
xor
stos
loopne
mov
mov
push
xor
push
stos
pop
loop
lea
xchg
clc
xchg
mul
pop
jb
adc
popf
jbe
sub
sti
push
out
stos
shrl
data16
xor
cmp
mov
push
lea
sub
and
fstpt
sbb
lcall
pop
dec
inc
insl
jl
adc
dec
insl
ficompl
or
mov
adc
sahf
sbb
fucom
sti
pop
fisubrs
xchg
rorb
mov
ljmp
repnz
xchg
fimuls
in
lahf
jl
rclb
xchg
add
or
mov
pop
push
adc
xor
fisttps
xchg
loope
cs
popa
mov
ljmp
es
xor
pop
push
push
sti
jae
aaa
repnz
jno
sbb
divb
shl
stc
inc
mov
imulb
loop
or
les
sbb
sub
push
es
cmpsl
shll
fnstenv
cltd
repnz
xor
mov
add
loop
in
or
xchg
dec
xor
loope
insb
sub
flds
cmc
ljmp
jb
ljmp
cmp
shr
lret
js
or
mov
mov
scas
xchg
pop
ds
insl
ret
shlb
adc
mov
inc
in
icebp
into
imulb
ljmp
push
adc
mov
adc
xchg
pop
ficomps
xchg
out
jne
add
or
add
mov
pop
roll
fs
mov
cmp
stos
adc
andl
cs
mov
push
inc
mov
in
jp
psrlw
mov
or
fnsave
cmp
cltd
icebp
int
in
mov
cmpsb
stc
mov
popf
xchg
jmp
sbb
xchg
sub
add
push
pop
jl
add
pop
cmp
jle
pop
adc
mov
es
nop
jl
xchg
push
hlt
or
test
and
mov
and
jl
gs
jle
xchg
icebp
pop
in
out
push
in
std
mov
outsl
imul
lods
mov
lods
shrl
cmp
push
xchg
imul
cmc
js
cmp
mov
adcb
dec
push
out
in
test
xchg
mov
push
and
push
push
test
dec
jae
dec
push
repz
dec
dec
fistps
cmp
sbb
mov
scas
add
mov
mov
inc
cmpsl
jns
test
add
pop
std
cmpsb
imul
adc
sbb
aad
xorb
jge
sarl
mov
jo
jg
fwait
push
mov
sub
cmp
cmpb
fbld
loope
adc
out
mov
cmp
mov
jnp
in
jne
sub
pusha
and
and
pop
push
sub
fidivl
push
dec
jbe
mov
in
dec
xor
xchg
cmpsl
mov
dec
fldenv
or
iret
repnz
int3
rolb
cmp
sub
gs
and
fstpt
cltd
insl
xlat
sub
mov
push
jmp
pop
shrb
je
cmp
jmp
cmc
pop
imul
rorb
cmp
inc
aaa
inc
mov
aaa
mov
subl
mov
iret
stos
cmp
mov
xchg
inc
dec
inc
testb
cmp
jns
pop
cmp
push
xchg
inc
ljmp
mov
clc
cmpb
push
xchg
into
aad
scas
leave
jp
jg
outsb
sub
or
cmp
stc
ss
adc
sub
dec
adc
movsl
add
clc
fcompl
inc
push
mov
movsl
push
sub
jno
or
ljmp
jle
cmp
xor
xor
cmpsb
mov
lahf
mov
adcb
mov
add
int
int
dec
inc
sub
ret
or
xor
das
stc
lea
lods
jmp
lea
je
jne
mov
fdivr
xor
push
stos
outsb
adc
dec
sbb
ja
xchg
inc
fdivl
sbb
jnp
lods
xor
jmp
pop
inc
jmp
xchg
and
mov
or
pop
insl
pop
inc
aaa
repnz
pop
ret
jp
inc
pop
pushf
jmp
adc
fwait
jmp
scas
push
add
imul
pop
out
fdivrl
fwait
rolb
mov
or
xor
and
mov
jb
pop
imul
and
mov
rolb
mov
cmp
add
mov
sub
mov
test
xchg
xor
jg
jbe
fwait
lods
pop
dec
and
dec
push
stos
in
dec
or
sbb
sbb
out
mov
jl
lods
mov
sbb
loop
int3
mov
add
out
in
lods
mov
mov
sbb
sub
and
pop
loop
mov
ret
flds
pop
mov
push
push
xchg
pop
mov
xchg
sti
xchg
cmpsb
ror
lcall
adc
std
mov
or
mul
jle
fsts
cli
mov
xlat
neg
cmpl
cmpl
inc
xor
fsts
cmpsl
addb
dec
mov
jae
je
xchg
fidivrs
call
xchg
cwtl
or
mov
mov
push
cmp
lds
mov
jne
aaa
adc
xchg
mov
out
jl,pt
pop
rcll
inc
xor
fcomp
sub
xor
sub
cmpsl
ja
push
jge
mov
subl
jno
sub
or
je
imul
lahf
jnp
inc
mov
xchg
mov
popa
jl
outsb
mov
stos
xor
push
mov
push
or
mov
aam
repz
mov
pop
mov
push
inc
andl
gs
insb
cli
xchg
adcb
add
mov
mov
add
das
sbb
mov
jle
mov
and
cmpsl
push
mov
adcl
sub
xlat
mov
sub
mov
xchg
inc
pop
sbb
or
jg
pushf
out
adc
int3
push
into
scas
orl
and
in
mov
sub
push
cmp
inc
jge
out
sub
jae
dec
xor
or
imul
js
mov
mov
push
fmulp
sub
xchg
test
sbb
inc
cli
xor
and
jb
insb
mov
aas
xchg
test
mov
std
movsl
repnz
ds
inc
decl
cltd
movsb
lahf
dec
call
dec
mov
int
push
insb
sub
and
mov
jl
sub
pop
adc
daa
mov
je
mov
into
add
clc
xchg
jp
aaa
jle
pop
popw
aas
aad
fwait
and
popa
dec
inc
shl
sbb
dec
add
pop
xchg
pushf
mov
mov
add
enter
inc
hlt
xchg
repz
ljmp
pop
lcall
push
pop
cmpsl
loop
pop
cmp
dec
push
sbb
sahf
fcoml
dec
popl
sub
sbb
fistpll
sub
mov
out
inc
movsb
int
mov
dec
xor
pop
outsl
xor
dec
subl
cltd
inc
jnp
pusha
outsl
cmc
jo
pop
adc
out
lock
push
sub
jne
xchg
in
scas
js
popa
and
mov
mov
or
mov
std
mov
call
mov
sarl
lock
dec
add
inc
push
xor
outsl
push
mov
fmul
sbb
insl
pop
push
cmp
dec
test
pop
pop
xor
or
dec
js
or
fs
mov
movsb
jnp
sub
mov
scas
mov
sub
jg
add
mov
notl
xchg
and
in
jg
out
out
mov
ja
imul
outsl
fs
filds
mov
mov
jb
fst
xlat
outsb
pop
xor
adc
ficoml
addb
in
sub
inc
and
or
or
pop
lods
enter
es
pop
add
push
hlt
loop
cmpsl
mov
dec
ret
test
repz
je
xor
sbb
shlb
fisubl
add
ss
inc
sub
daa
rcrl
pop
test
or
ficoml
jbe
dec
sarl
insl
xchg
xor
inc
imul
rcrb
cmpsb
movsb
fnsave
inc
jnp
out
xchg
cmpsl
jp
gs
loopne
ja
fstl
add
mov
add
and
and
out
into
sbb
mov
fsubr
adc
mov
aas
js
xor
sub
sub
int3
stos
leave
pop
into
cmp
test
add
and
mov
push
pop
adc
mov
inc
mov
pop
test
sbb
shlb
cmp
mov
mov
mov
xchg
repnz
dec
dec
arpl
push
cmp
test
maxps
fcompl
in
xchg
lods
lock
inc
mov
xor
dec
dec
mov
xchg
sarl
push
insl
push
sbb
sti
lret
mull
xchg
lock
cltd
and
xchg
pop
icebp
dec
arpl
hlt
ds
fisubl
xor
jg
lret
rcll
ret
xor
or
inc
pusha
push
mov
divl
jns
orb
xchg
in
mov
lret
fadds
jno
pop
scas
pop
fdivr
add
sbb
mov
sbb
mov
xchg
sub
mov
mov
cmpsl
ficoms
sbb
mov
cmp
pop
mov
mov
pop
jecxz
mov
popa
jmp
imul
test
xchg
or
ret
sbbb
aaa
test
stos
and
adc
xchg
cld
jbe
inc
cmpb
jo
jl
jmp
mov
loopne
xchg
test
shl
sbb
cmpsb
cmp
cmc
lret
cmp
jg
adc
sbb
mov
inc
pop
daa
push
jnp
pop
mov
ret
das
cmpsb
mov
addr16
pusha
insb
push
pop
mov
pop
xchg
mov
mov
xor
jo
push
std
repz
popf
jb
cltd
mov
adc
bound
stos
mov
pop
cmp
scas
and
inc
inc
mulb
adc
jbe
cmp
xchg
add
sahf
jge
and
leave
xor
sub
push
pusha
mov
int
pusha
jno
repnz
pop
pusha
xlat
rclb
adc
loopne
movsl
rclb
out
or
cmp
or
out
inc
leave
push
lock
sub
cmpsb
aam
xchg
in
mov
cmpsl
push
into
mov
shrb
xchg
out
insl
xchg
fidivrs
cmp
inc
daa
add
pop
pop
xor
ffreep
mov
jmp
in
dec
insb
sahf
test
lea
jae
push
sbb
mov
fdivp
pushf
inc
fsubp
nop
adc
push
inc
lret
arpl
sub
push
mov
sub
mov
xor
sub
push
pusha
imul
cli
push
mov
mov
sub
adc
push
pusha
cmp
adc
xchg
fsubl
xchg
outsb
sub
shlb
sub
jmp
in
aam
mov
inc
adc
xor
lahf
sbb
clc
push
idiv
cmp
js
bound
sbb
call
test
loope
ja
mov
and
aaa
jmp
xchg
adc
ret
and
push
lods
mov
dec
push
ret
xchg
pop
mov
fbld
inc
movsl
int
mov
cld
mov
scas
jmp
scas
push
cld
mov
fcmovnbe
dec
cwtl
lock
scas
mov
shll
mov
cmp
and
pop
mov
test
cwtl
mov
test
and
insl
dec
inc
pop
popa
mov
lods
notb
pop
mov
out
cli
subb
lods
xchg
popa
data16
in
ret
pop
xchg
mov
mov
les
push
int3
nop
sub
add
decl
iret
and
mov
pop
and
xlat
loope
cmpsb
rcrb
imul
add
push
cmpb
shlb
mov
lods
mov
clc
xchg
leave
out
fmul
insb
lods
mov
sub
mov
lahf
pusha
sti
ss
std
jle
xorl
mov
repz
push
or
ds
sub
jae
enter
ret
sbb
fcmovnb
push
xchg
and
push
int
sbb
pusha
shll
jo
pop
inc
ds
pop
mov
repz
mov
mov
not
cmp
rcrb
scas
into
xchg
andb
arpl
leave
adcl
inc
sbb
inc
push
add
sbb
xor
test
xor
mov
fs
xchg
cmp
insb
adc
outsl
jg
jle
imul
divb
xor
mov
out
dec
xchg
iret
jns
scas
mov
jnp
add
mov
cmpsb
ja
xor
idivb
adc
inc
push
xchg
push
xchg
pushf
mov
and
cmp
push
or
loopne
mov
add
and
lods
mov
cld
sbb
fs
sti
pushf
addl
mov
inc
rcrl
ss
or
mov
in
xchg
sub
fnstenv
ljmp
test
int
mov
lret
lods
les
es
jne
out
push
scas
xchg
ret
pushf
sub
dec
jo
xor
outsl
adc
scas
cmp
lock
cld
add
movsl
inc
repz
jo
jle
add
add
inc
jmp
insb
out
mov
add
push
xlat
mov
pop
inc
icebp
mov
mov
or
dec
jns
mov
aad
or
loopne
xchg
lret
sbb
mov
in
pusha
xlat
loope
cmp
lods
fists
imul
pusha
test
cmc
movsl
std
das
xchg
pop
push
fcoml
push
popa
mov
push
je
dec
inc
scas
out
cmp
loop
cld
lret
cli
lahf
push
into
add
sahf
dec
pusha
sub
cmp
pop
jmp
mov
imul
movsl
outsl
add
dec
sub
out
xor
xchg
push
ret
icebp
sbb
sub
cmpxchg
xor
rcll
cmp
inc
jle
xlat
mov
pop
adc
sbb
hlt
jno
sub
imul
inc
mov
push
dec
aam
mov
shlb
cli
movsb
adc
mov
and
dec
adc
mov
dec
and
in
mov
sub
or
cmp
rclb
jnp
push
popa
int
push
jo
mov
out
ljmp
shrl
jb
and
mov
jmp
out
add
xchg
jbe
sub
or
mov
cld
push
lds
mov
jns
sub
push
adc
into
push
lcall
pushf
push
lret
aam
mov
sbbb
pop
push
daa
loope
xchg
xor
pusha
out
call
mov
fdivrs
and
jl
adcb
pop
rcrl
jne
xchg
ret
cltd
nop
shl
jecxz
and
mov
mov
jmp
inc
stc
shl
loopne
mov
add
pop
cmp
pop
xchg
add
pop
xor
int
sysexit
pushf
adc
jl
cld
cli
aam
fldt
mov
cmp
adc
sub
inc
aam
sbb
lret
mov
je
out
pop
stos
cwtl
incl
cmp
inc
or
add
dec
and
movsl
inc
arpl
dec
inc
outsl
jnp
test
fildl
adc
and
std
ret
add
in
jae
jae
or
or
pop
add
mov
and
adc
jb
mov
xchg
sub
pop
add
mov
pop
mov
mov
movsl
jnp
jae
xchg
and
xchg
shll
jno
sub
mov
cmp
mov
mov
adcb
sbb
sarb
fisttps
orl
gs
lahf
push
jl
daa
xchg
scas
xchg
or
adc
pop
cmpl
lock
enter
dec
notb
imulb
jne
mov
mov
imul
cmc
out
cmp
es
mov
rorb
push
repz
inc
cmp
scas
mov
mov
dec
iret
mov
ret
flds
jge
xor
orl
shl
movsl
and
push
enter
xchg
out
xchg
jae
dec
push
loope
addb
xorb
lret
adc
das
add
or
push
aam
insb
outsl
and
push
cli
bound
cli
adc
cmp
and
sub
cmp
divl
add
arpl
sbb
repnz
or
lock
ret
xorl
xchg
and
pop
pop
sbb
les
push
adc
scas
data16
or
lock
in
inc
inc
rorb
scas
or
or
and
and
out
inc
cmpsl
cmp
xchg
xchg
xor
mov
add
imul
add
into
or
lahf
in
sbb
xchg
cltd
push
push
jle
add
imull
ss
sahf
inc
lret
rcrb
pop
dec
add
or
xor
in
in
pop
mov
andl
cmpsl
adc
cmp
xchg
sahf
dec
sub
loopne
pop
jg
or
add
xor
cmpl
arpl
cmp
fs
sbb
pop
rcr
add
mov
cmp
push
push
std
xchg
scas
loope
hlt
loop
test
imul
mov
adc
mov
gs
icebp
iret
adc
mov
movsl
in
pop
sarl
push
icebp
jnp
in
inc
xchg
std
sahf
pop
push
nop
or
rorb
push
adc
aad
hlt
jmp
jae
inc
mov
xlat
ja
aaa
movsb
pop
test
pop
pop
jl
in
and
and
push
insl
fwait
call
fwait
cs
loope
pushf
mov
insl
cltd
rorb
and
sti
mov
rcll
hlt
jp
xchg
pushf
repz
les
mov
mov
mov
push
or
lcall
sbb
daa
sbb
ljmp
inc
cs
orl
jno
cmp
or
jg
fsubs
enter
and
cmpb
bound
lea
mov
cwtl
pop
inc
cmp
test
xchg
inc
nop
dec
cmp
adc
outsb
inc
leave
out
inc
add
mov
fnstsw
mov
pop
aad
adc
sub
lcall
dec
fwait
push
mov
add
rcl
inc
or
lret
ret
or
cld
movsb
sbbl
pop
xor
mov
mov
cmp
jl
les
les
and
gs
cld
mov
push
outsl
sbb
clc
addr16
xchg
fdivl
in
push
xchg
aad
sahf
jbe
mov
in
adcl
pop
mov
stc
ja
cli
repnz
pop
add
xchg
add
cmp
stos
mov
fsubl
dec
dec
mov
cwtl
mov
call
mov
mov
into
lods
pop
mov
cmpsb
add
rorl
inc
lret
mov
push
add
sar
and
sarl
cwtl
jns
stos
cwtl
cmp
js
imul
dec
shrb
mov
stos
cmp
push
sub
fidivs
inc
pusha
mov
repz
and
sub
inc
cmp
jecxz
arpl
cmp
lds
out
sbb
xchg
scas
mov
sub
aam
inc
mov
jno
or
inc
in
cmp
dec
movsb
stos
adc
sub
cli
outsb
inc
and
inc
xor
and
inc
pop
cltd
icebp
ret
xor
dec
ds
xor
fimull
xlat
xlat
in
jo
xchg
or
les
pop
and
xchg
ljmp
sbb
pop
movb
xchg
int3
jle
adc
test
loop
xor
mov
dec
push
jb
or
lcallw
cmp
cmpsb
push
aad
out
imul
sub
shll
push
cwtl
mov
sub
jno
sub
stos
mov
out
xor
mov
neg
ja
cmp
pop
xchg
nopl
dec
sarl
scas
iret
mov
jo
fcoms
stc
cmpl
insl
rol
push
xchg
jle
leave
jl
test
je
and
inc
in
aaa
sbb
or
fwait
test
push
jecxz
mov
out
and
addr16
xor
daa
sbb
sub
mov
sub
push
mov
or
fs
mov
arpl
dec
jno
aam
xchg
pop
bound
cmp
or
cmp
test
or
push
pop
enter
inc
fidivs
fs
and
ffree
movsl
push
sub
mov
fwait
ljmp
push
adc
insl
cmpb
inc
test
fcompl
dec
scas
stc
jns
mov
fadds
popa
cltd
clc
rclb
or
out
mov
lods
repnz
sbb
ficomps
add
sbb
mov
into
jp
lret
hlt
jecxz
inc
pop
pop
sbb
ror
adc
inc
cltd
fildl
sub
adc
cli
rcr
test
stc
add
sbb
adc
pop
cmpsb
mov
adc
fdivl
test
imul
mov
stos
push
shl
sbb
pusha
dec
divl
cmpsb
shrd
adc
in
stos
sub
movsb
stos
dec
inc
or
add
push
out
xor
out
mov
adc
outsb
xor
mov
inc
cmc
mov
jle
nop
pop
fsubs
jae
sbbl
daa
dec
jg
mov
push
xchg
adc
clc
xlat
pusha
cmp
mov
jmp
pop
loop
pop
pop
sysenter
lea
push
jae
cmp
ret
leave
pop
add
scas
out
sub
lds
sbb
push
out
xchg
xchg
xchg
or
andb
xchg
popf
jp
push
out
push
sub
hlt
mov
jae
mov
in
jl
dec
je
mov
dec
mov
addr16
push
out
or
les
pop
jns
push
xor
iret
pop
into
sbb
mov
loope
pop
fsts
or
insl
hlt
ss
sub
test
push
jl
fisubl
pusha
out
add
cli
clc
push
jne
jmp
pop
dec
or
idivb
sbb
out
getsec
pushf
sub
mov
push
adc
sub
push
jo
jnp
and
loopne
sti
scas
sbb
and
xlat
cmpb
ret
jl
jne
or
mov
int
mov
test
js
dec
lock
clc
std
das
xchg
xchg
or
aad
lcall
push
dec
xor
cmp
dec
and
stc
push
add
pop
out
inc
inc
pop
in
jge
add
and
ja
mov
test
xor
sub
inc
inc
inc
adc
xlat
mov
adc
outsb
or
inc
adc
nop
adc
and
xor
andl
mov
dec
add
sub
pop
insb
into
pop
popf
mov
loopne
loopne
push
pushf
das
or
sub
and
orl
jne
es
dec
cltd
out
outsb
xor
sub
pop
cwtl
push
leave
fnstenv
xchg
add
add
adc
and
jno
push
pop
fucomip
pop
cltd
push
fisttpll
or
loope
mov
aad
dec
les
inc
iret
adc
jp
loope
jge
adc
fadds
aaa
cld
inc
push
int3
sub
enter
adc
jno
shrl
xchg
dec
pop
ret
jb
dec
dec
or
in
sbb
mov
pop
jg
rcl
dec
jl
stos
pop
cmp
cmp
shll
bnd
xor
outsl
sub
dec
lods
jmp
adc
out
adc
push
adc
xlat
popa
jne
mov
sbb
je
and
loopne
push
mov
idiv
pop
inc
loop
loopne
les
jge
pop
xchg
xchg
and
pop
fisttpl
xor
push
les
dec
jmp
lods
pop
rcll
shr
lock
pop
add
sub
outsb
in
adc
les
fcompl
and
ljmp
in
out
inc
push
fwait
test
daa
mov
icebp
cmpsb
xor
rcr
pop
cwtl
inc
fdivs
dec
stos
sbb
add
rorb
test
leave
mov
push
test
nop
pop
and
cli
jbe
lret
xor
and
gs
push
mov
adc
pop
clc
inc
addr16
push
stos
cltd
nop
pop
jbe
and
sbb
cwtl
fstl
pop
mov
pop
mov
lret
rolb
test
loop
test
and
xchg
fnsave
fs
pusha
pop
add
mov
mov
xor
mov
push
filds
add
arpl
push
jo
mov
cltd
cmpsb
leave
and
mov
cmp
hlt
popa
popa
jo
mov
add
pop
movsl
lret
cmpsb
cmp
ljmp
mov
jae
stos
dec
lcall
dec
int
lods
cli
je
mov
mov
xchg
les
js
xor
inc
xor
outsl
les
push
jb
dec
lds
mov
clc
lods
cmp
cmp
fwait
jnp
fidivl
int
mov
mov
imul
jmp
es
dec
jns
in
and
dec
push
sub
inc
aad
mov
scas
pushf
xor
rorb
popa
mov
pop
xchg
mov
lcall
pop
or
jg
pop
ret
jne
insl
mov
cmp
sbb
xchg
xchg
sahf
xor
fwait
cltd
jle
adc
mov
cmp
push
push
inc
xchg
hlt
and
std
fcmovnbe
mov
pushf
jns
cmp
dec
movsb
mov
sub
ljmp
les
cltd
pop
and
ds
je
ss
cli
inc
mov
loope
adc
mov
push
clc
add
out
adc
in
dec
xchg
sbb
jl
inc
ss
bound
fdivrs
out
push
sbb
and
or
mov
jmp
arpl
ss
mov
dec
mov
xchg
test
xchg
jns
movsb
fistl
adc
mov
in
push
jo
test
ja
dec
mov
and
sarl
outsl
cltd
mov
and
cmpsl
sub
data16
scas
faddp
pusha
insl
orl
pop
std
mov
dec
mov
lods
rorb
ss
outsl
sbb
add
dec
repnz
aam
push
mov
fidivs
push
shrl
mov
push
repnz
add
lea
repz
cwtl
inc
add
sbb
movsb
ss
ja
jae
repz
subl
mov
nop
je
mov
out
mov
test
popa
cwtl
xorb
jge
es
bound
not
call
push
sub
cli
idivb
pop
orl
xchg
jmp
xchg
mov
das
movl
sbb
mov
aas
in
leave
mov
call
mov
xor
cmc
adc
test
lea
ljmp
inc
jb
jl
iret
inc
and
fdiv
jae
lret
repz
push
cmp
or
test
adc
daa
in
addr16
push
sarl
mov
js
into
push
push
sbb
aam
add
push
jg
add
mov
mov
cmp
or
push
lret
mov
add
xchg
inc
insb
mov
movsb
faddl
lea
lcall
mov
inc
mov
sub
enter
xchg
jae
sbb
push
imul
das
mov
fldcw
mov
insl
addr16
mov
mov
jmp
ja
loope
mov
sbb
push
cs
testl
xchg
dec
or
push
outsl
repnz
mov
sub
out
xchg
jge
ret
mov
out
lret
mov
pop
fistpll
cmp
pushl
jbe
scas
mov
fidivrs
imul
add
daa
add
lret
std
mov
popf
mov
xchg
pop
adc
xchg
lahf
jl
test
leave
fsubrs
adc
xchg
sbb
sahf
fcomi
push
mov
mov
adc
pop
push
lds
pushf
std
lcall
or
mov
cmp
mov
les
xor
cmp
out
mov
push
sbb
aaa
xchg
jae
in
sti
and
xchg
xchg
sbb
fidivrl
lret
and
sub
mov
cmp
popf
mov
mov
outsb
pop
or
push
add
mov
rcl
in
pop
daa
pop
ret
cmp
or
jmp
sbb
sub
inc
mov
movsl
pushf
lret
add
xchg
cli
jg
xchg
das
addr16
xchg
mov
dec
add
add
or
imul
arpl
pop
outsl
repz
add
stos
lea
add
sub
xor
scas
movsl
js
adc
push
in
fisttps
adc
pop
pop
shlb
sub
pop
pop
gs
and
pop
mov
repnz
inc
adc
aam
inc
and
push
loopne
test
mov
in
cltd
out
fucomp
push
sub
fistpll
cltd
sbb
movsl
push
jae
pushl
scas
rol
push
or
cmp
mov
sbb
inc
jge
idiv
lock
cmpsb
xchg
fidivrl
pop
and
fwait
lret
aaa
mov
lea
outsb
sbb
pop
shlb
gs
sub
or
cmpsb
popa
cmp
sub
jge
sub
and
add
jge
push
cmpsb
xor
inc
push
inc
push
paddusb
jbe
repnz
andb
dec
sbb
jl
fdivr
call
fimull
pop
stc
xchg
jbe
dec
sti
pop
test
pop
mov
leave
addb
dec
bound
cld
fs
mov
xchg
les
std
out
inc
push
sbb
or
arpl
push
aas
xchg
pop
jo
inc
or
loop
popa
inc
rclb
cmp
fwait
hlt
les
int3
rcl
inc
push
inc
dec
pop
pop
stos
xor
jg
in
push
cmp
hlt
or
jmp
test
lcall
icebp
mov
push
sub
sbb
adc
pop
mov
arpl
lahf
add
and
or
inc
aaa
push
shrb
popf
ss
nop
shlb
or
cmp
dec
bound
or
xor
xchg
jns
sbb
loope
popa
int3
in
dec
les
aam
pop
mov
xchg
fcompl
xor
icebp
pop
cld
das
imul
mov
push
fsubl
pop
and
sub
dec
mov
adc
out
test
xchg
into
lahf
ret
push
jg
and
adc
pop
push
xor
test
cmc
shrb
inc
pop
lahf
les
outsl
int3
push
sbb
icebp
pop
pop
dec
jnp
pop
pop
rorl
push
push
sub
sbb
sub
push
in
and
jo
push
cmp
jno
gs
mov
xchg
jnp
js
pop
or
add
mov
sti
js
test
int3
xlat
fcmovbe
or
cmpsl
sub
dec
lcall
sub
std
adc
mov
sahf
xchg
mov
loopne
imul
mov
leave
mov
sbb
out
mov
mov
mov
sbb
mov
push
sti
std
stc
push
test
pop
cmp
push
add
iret
aam
push
leave
add
in
adc
movsl
stc
daa
mov
xchg
pxor
pop
cmpsb
mov
xchg
xor
push
push
mov
jecxz
add
aam
jns
mov
ljmp
pop
loop
dec
adc
add
sti
lret
cmp
dec
pop
push
cmc
push
orl
lahf
inc
cmp
data16
je
add
dec
or
sti
inc
aas
test
es
mov
lret
in
jp
add
inc
mov
insb
jno
clc
jb
mov
and
mov
subl
in
and
adc
and
insb
xchg
pop
lods
dec
cltd
int
pop
lret
loop
xor
jmp
push
add
js
push
cmp
test
out
mov
loop
ret
jp
aas
xchg
jecxz
sub
pop
scas
icebp
push
adc
mov
into
xchg
or
andb
cmp
cs
cmp
inc
add
push
loopne
nop
push
jne
cmp
jnp
xlat
iret
rol
xor
clc
cmp
sbb
lds
in
add
adc
je
cmp
add
jp
in
and
scas
xor
dec
shld
cmp
sub
ret
mov
xchg
repnz
jb
inc
aas
add
and
push
repnz
xchg
stos
je
outsl
dec
mov
mov
xor
inc
xchg
bnd
adc
int
int
mov
push
aam
rclb
push
lds
xchg
or
pop
xor
cmp
cld
bound
xor
xor
cmp
out
sbb
dec
and
nop
inc
push
and
out
push
nop
scas
xchg
sarb
test
xchg
out
cmpsb
out
test
xchg
rclb
jp
mov
cmpb
lcall
push
dec
ljmp
add
gs
cmpsb
jo
clc
outsl
xlat
jmp
adcb
mov
pop
popf
test
jge
repnz
outsl
mov
aad
xchg
js
add
in
incb
jg
fwait
call
std
in
test
nop
xor
and
xor
push
mov
xlat
xchg
test
jbe
pop
pop
add
ja
inc
stos
scas
testb
int
dec
push
mov
out
dec
popf
mov
add
xchg
mov
mov
jns
mov
repnz
mov
or
add
fwait
mov
mov
dec
je
incl
cltd
repnz
orb
sbb
lds
cmp
sbb
sbb
sbb
adc
jns
jp
add
iret
popf
rorb
jbe
roll
out
fsubrs
subb
enter
movsb
or
push
xchg
dec
xchg
into
movsl
mov
xor
loope
scas
jns
mov
hlt
or
sub
fcmovnb
cmp
sub
jmp
cli
xor
loope
xor
std
xchg
ret
loop
mov
mov
adc
push
mov
dec
rcll
int3
lahf
push
cld
mov
jl
hlt
scas
xor
fs
lock
add
xchg
fsub
test
xchg
xor
insl
sbb
push
jo
inc
in
shl
movsl
fisubl
push
mov
pop
cmpsl
lods
xor
lret
int3
test
das
lahf
mov
pop
mov
loopne
mov
imul
xor
and
sbb
data16
cli
jae
push
hlt
xor
lahf
lds
inc
mov
sbb
pop
jne
cltd
jl
addr16
movsl
sub
and
sbb
mov
cmp
scas
negb
out
cmc
cmpb
sub
clc
inc
enter
addl
mov
xchg
and
outsb
xor
roll
enter
das
push
je
push
sar
popa
mov
adc
dec
push
nop
cmp
cmp
mov
mov
out
jbe
push
jns
mov
dec
das
xchg
andl
inc
outsl
pop
push
aad
dec
push
pop
xchg
cli
dec
lds
fs
jmp
les
cmp
or
and
es
adcl
inc
pop
dec
sub
dec
addl
mov
in
cmp
and
push
bound
test
aad
enter
gs
push
xor
popf
inc
adc
cmc
clc
push
orb
insl
mov
icebp
push
fildl
mov
nop
leave
push
mov
and
pop
ret
pop
out
in
cmpsl
leave
xor
and
enter
std
xor
jbe
mov
or
jno
sbb
cmp
movsb
lods
push
ljmp
leave
adc
repnz
pop
repz
repz
scas
pusha
or
add
add
mov
call
nop
jne
pop
mov
addr16
sub
loopne
leave
out
mov
mov
jb
stos
push
or
ja
mov
pop
or
dec
out
jecxz
cmp
dec
int
cmpsb
sti
mov
xlat
lea
xor
sti
inc
xchg
call
sbb
aaa
int
or
mov
dec
jb
sbbl
mov
test
pop
and
mov
outsl
dec
jle
movsb
add
push
jo
pop
in
dec
dec
xor
push
push
movsl
fidivrl
les
or
fs
and
push
aad
push
push
stos
mov
pop
daa
cs
mov
mov
in
jnp
cld
enter
adc
movsl
and
xchg
or
shrl
push
testl
jp
cmp
aaa
push
lcall
ret
and
gs
push
imull
loop
dec
mov
aad
insb
lods
fsubs
lods
out
and
iret
jg
xchg
mov
je
clc
mov
mov
dec
outsl
and
scas
inc
add
inc
int3
push
xchg
mov
pop
mov
jno
add
test
mov
fildl
push
arpl
test
mov
sub
inc
inc
pop
mov
or
adc
mov
clc
mov
jmp
je
push
push
jp
adc
lods
fsubrs
push
pusha
hlt
mov
dec
adc
test
mov
cmp
js
push
mov
inc
fidivrs
popa
or
sub
inc
or
dec
sbb
lret
into
cmpsb
sub
add
xor
adc
pop
dec
adc
adc
ret
mov
orl
mov
js
pop
rcrl
dec
pop
push
pusha
movsl
test
xchg
jg
jge
adc
out
jp
arpl
add
pop
xor
xchg
mov
push
test
outsb
jns
cltd
cwtl
adc
mov
mov
xchg
icebp
ffree
sub
out
adc
push
jns
pop
notb
popa
jg
faddl
inc
push
mov
pop
add
or
pop
sti
clc
and
mov
jge
xchg
jno
and
leave
dec
pop
pop
adc
add
popf
ror
addr16
fsubrl
ja
xchg
mov
scas
xlat
insl
jle
mov
adc
jnp
lahf
out
push
scas
data16
fs
pop
lcall
add
cltd
fdivs
iret
test
movsl
push
int
pop
add
xor
and
mov
pusha
ss
stc
dec
fcomps
fs
mov
into
jle
mov
inc
insl
mov
xor
sbb
push
sbb
and
shl
lods
ret
xchg
movsb
jp
inc
mov
xor
mov
ror
aas
call
pop
sbb
fdivl
movb
pop
loope
add
jnp
rol
xchg
and
scas
sub
rolb
lea
add
loopne
out
mov
orl
add
xor
out
add
xchg
jmp
je
stos
shll
fucomip
cwtl
in
lahf
aam
test
lret
in
pop
sbb
int
ljmp
mov
rcll
mov
out
pusha
int
fcmovne
and
cmp
bound
mov
mov
movsl
jb
and
jns
pusha
dec
aam
inc
add
mov
adcl
sub
outsl
mov
xchg
fcoml
orb
mov
fnstsw
sbb
arpl
mov
pop
jno
mov
sbb
aaa
inc
icebp
loope
dec
pop
repnz
pop
xor
mov
out
pop
sbb
imul
add
lahf
outsl
xchg
das
sbb
mov
dec
xlat
dec
test
push
fwait
call
inc
addr16
rclb
mov
int3
dec
adc
mov
sbb
cs
lock
dec
xor
and
fs
stc
loop
ss
or
jns
mov
xor
xor
mov
lods
movsb
xchg
cmc
add
and
inc
or
adc
cmpb
add
adc
adc
jp
xor
xchg
push
movsb
shl
pop
negb
mov
xorb
xor
scas
clc
outsl
jg
dec
push
sbb
lock
call
ret
pop
mov
aad
ret
cltd
push
mov
mov
or
mov
push
inc
rcrl
es
cmp
xor
inc
mov
or
imul
mov
clc
xor
cs
sbb
repz
add
mov
pop
dec
imul
cmpsb
icebp
and
add
fmuls
mov
in
jmp
rolb
hlt
mov
mov
sbb
adc
test
cmpsl
adc
test
jmp
imul
ja
mov
pop
fcoml
and
cmp
pop
mov
pop
ret
fdivr
ror
xor
jecxz
movsb
pop
adc
popa
push
mov
mov
jecxz
xlat
popf
mov
xor
xorb
movsb
adc
pusha
leave
stc
out
lcall
faddl
aad
and
mov
popf
sbb
add
lock
shl
data16
test
mov
test
pusha
imul
push
gs
mov
lds
adc
ja
sbb
sbb
adc
dec
fadds
addr16
pop
jecxz
shll
jb
lret
push
jle
repnz
push
sub
fcmovnbe
jbe
stc
mov
and
pop
stc
dec
cmc
lock
call
dec
out
jg
dec
xchg
cmp
inc
sbb
add
add
sbb
cld
adc
dec
or
idiv
ret
cmpsl
popa
push
and
sahf
push
jne
cmc
add
sub
dec
scas
data16
jb
jno
sbb
xchg
push
lock
dec
nop
inc
hlt
or
mov
sub
ljmp
dec
je
sti
ret
push
ds
xor
and
in
aam
mov
test
mov
xchg
add
in
ret
test
ss
cli
add
pop
mov
call
push
in
sbb
fwait
jnp
push
ss
das
adc
test
xchg
sbb
cmp
shrl
jle
inc
and
shll
ficoms
or
mov
xlat
inc
loope
loopne
nop
repnz
add
imul
fmuls
popa
sbb
bound
cwtl
jg
repz
add
aad
pusha
mov
dec
out
jo
cmp
ss
push
pushl
fidivrs
stos
xchg
int
pop
push
pop
adc
push
ja
sbb
jmp
hlt
repz
jl
mov
insl
negb
lods
inc
fistps
fdiv
and
mov
sub
dec
xor
dec
sub
xchg
mov
xorl
aad
mov
jbe
aaa
push
test
cmc
sub
lret
lods
xchg
mov
pop
jg
stos
jns
xchg
push
mov
aad
cmp
pop
adc
sub
mov
sbb
data16
sub
lret
neg
movsb
xchg
pusha
icebp
mov
loope
mov
pop
adc
or
sub
test
jmp
shrb
adc
mov
outsb
dec
mov
mov
mov
adc
cwtl
mov
in
jle
out
add
in
push
notb
aam
cmpsb
jae
push
adc
mov
add
push
jnp
mov
inc
outsb
mov
mov
cld
mov
aas
movsb
mov
mov
jnp
stos
xchg
bound
ljmp
out
adc
and
jb
xor
in
jns
ja
addr16
or
mov
gs
cltd
xchg
and
xchg
in
and
sub
xchg
cli
or
aas
push
imul
and
in
movsl
or
mov
pop
xor
cld
js
punpcklbw
mov
sub
cmpl
repnz
xor
loopne
lahf
xchg
in
ss
sbb
add
testb
int3
xchg
dec
mov
sub
mov
imul
fdivs
sbb
add
inc
cltd
fbld
shll
adc
pop
jmp
hlt
push
fs
mov
push
or
cmc
ljmp
or
pop
push
je
shr
cmpsb
loope
pop
js
cwtl
push
in
pop
js
scas
lret
lahf
xchg
mov
movsb
popa
ds
pop
ja
inc
xor
add
nop
daa
scas
mov
mov
icebp
out
cli
mov
add
repz
iret
jnp
push
inc
add
cmp
add
add
jae
inc
adc
inc
imul
and
ja
into
jne
decl
adc
or
bound
cmp
ret
subb
cs
iret
js
mov
mov
sbb
addr16
and
xchg
pop
out
push
test
xchg
fsubl
popa
cmpsl
jnp
push
movsb
rol
inc
in
lcall
lcall
mov
pop
xor
outsb
add
loope
push
mov
in
xchg
pop
hlt
and
xchg
pushf
mov
pop
adc
mov
inc
xchg
inc
sub
data16
popf
dec
mul
loopne
mov
add
dec
mov
cmp
clc
and
pop
stc
push
out
pop
add
rcrl
mov
test
bound
cmp
jp
mov
pop
movhlps
fstpl
mov
rol
and
mov
sbb
mov
dec
roll
xchg
popa
stos
cmp
push
push
add
pop
add
mov
insl
push
and
aas
xchg
adc
aam
daa
stos
icebp
or
cld
fldl
scas
lahf
add
testb
inc
call
lea
out
sbb
test
jnp
loope
arpl
mov
dec
mov
jo
cli
inc
inc
dec
sahf
mov
call
cmp
cmp
jg
sub
popf
cmpsb
pop
and
icebp
cltd
or
test
jb
ret
mov
hlt
fwait
pop
push
cmpsl
pop
adc
mov
mov
and
xchg
subb
inc
shll
sbb
loop
mov
dec
push
mov
pop
lock
cmp
jno
and
dec
add
add
mov
dec
xchg
loopne
bound
rcl
sub
mov
icebp
loop
sub
xchg
fwait
imul
adc
dec
or
inc
cmp
lahf
popa
mov
jno
ror
data16
int3
push
cwtl
imul
stos
fimull
ljmp
push
adc
out
fbld
push
out
fisubrl
nop
cmp
mov
mov
push
cmpsb
aam
enter
push
adc
mov
fwait
jo
pop
out
and
mov
daa
sar
mov
in
cwtl
sbb
popa
xor
lret
into
pop
fisubs
jge
cmp
pop
mov
pop
sbb
push
fdiv
pushf
sahf
sub
in
mov
push
fdivrs
repnz
pop
insb
das
add
ljmp
int3
sub
adc
push
les
sti
or
dec
ret
mov
fcoms
add
mov
aaa
adc
xchg
jg
jb
xchg
out
lret
and
jecxz,pt
jno
add
add
jge
lds
out
in
lahf
adc
add
mov
std
aaa
lahf
mov
mov
xlat
push
mov
mov
cmp
notb
lds
outsb
pop
sub
push
mov
jge
ret
adc
lret
inc
subb
cmc
stos
call
f2xm1
stc
dec
push
cmp
lds
pop
aad
sbb
or
sbb
enter
ljmp
or
mov
mov
sbb
test
cli
and
mov
adc
mov
imul
je
adcl
movsb
in
imul
ror
mov
push
and
out
cmp
xchg
push
inc
and
or
add
push
loopne
mov
xor
arpl
divb
fxch
mov
leave
loopne
movsb
clc
insb
jg
outsb
mov
pop
lods
or
pop
push
mov
scas
jne
fbld
mov
jecxz
icebp
mov
adc
loop
pop
call
cmp
mov
jnp
sub
push
adc
repnz
sub
pushf
sub
in
pusha
cmc
pop
and
aas
mov
mov
mov
nop
cmpsl
sub
aaa
pop
jo
imul
loopne
mov
in
mov
mov
inc
and
push
fistps
addr16
and
push
bound
ja
test
xor
adc
shll
lds
or
dec
cmp
hlt
pop
js
test
daa
sbb
icebp
call
into
pop
es
add
sbb
sub
inc
scas
xchg
out
repnz
pusha
xchg
xor
shll
add
dec
call
test
mov
nop
lods
repnz
loope
adc
cmp
nop
imul
dec
aaa
stc
add
jg
int3
pushf
scas
push
mov
sahf
lods
pop
jne
push
xchg
and
daa
pop
stos
les
out
leave
test
push
iret
push
fwait
mov
enter
andb
cmp
fdivrs
fwait
lods
push
out
into
xchg
outsl
ror
js
mov
push
jns
mov
pop
imul
and
mov
neg
test
mov
inc
andl
mov
icebp
push
dec
clc
ret
cmc
push
jnp
sbb
xchg
scas
adc
imul
rcr
scas
out
cli
inc
les
icebp
pop
jmp
aad
xor
xchg
dec
inc
das
aam
dec
sub
pop
cmovne
aas
mov
fnstsw
loope
inc
pop
push
mov
jg
leave
mov
cmp
mov
mull
xchg
ds
fbstp
jmp
mov
das
xchg
jns
push
pop
xor
es
daa
sti
mov
or
xchg
loopne
sub
cmpsb
push
cltd
div
xchg
adc
stos
dec
icebp
inc
test
nop
jecxz
xchg
es
or
sub
outsl
cmpsl
jl
fisubrl
cmp
dec
mov
pop
xchg
shll
dec
sub
mov
das
adc
mov
lea
sarb
sahf
xchg
insb
imul
add
fsubl
aam
and
jb
mov
mov
daa
mov
call
mov
xabort
insl
testb
data16
popa
stos
ror
out
sbb
mov
fs
pop
pop
jno
and
das
outsb
imul
inc
hlt
sbb
mov
andl
fmul
fistps
and
xchg
pop
movups
out
inc
mov
stos
or
xchg
jns
lret
movsb
jo
stc
fcmovb
cmp
stos
les
fsubrs
pushf
cs
cs
addb
fsts
and
out
outsb
lcall
dec
add
cli
add
pop
adc
mov
jecxz
test
je
movsl
dec
lock
loop
lds
lea
sbb
jl
jg
pop
in
push
pop
add
jmp
std
pop
outsl
sbb
jmp
pusha
and
sbb
push
mov
dec
pop
bound
or
xor
jno
clc
sub
pop
sahf
pop
xor
pop
mov
cmp
repz
dec
adc
mov
and
out
mov
or
xchg
call
mov
pop
xor
mov
pop
or
fisttpl
sub
and
cmpsb
cwtl
jmp
shll
aaa
pop
add
push
imul
xchg
dec
out
xor
mov
xor
mov
stos
push
mov
xchg
lcall
pop
in
pop
cltd
jbe
jg
push
xor
push
dec
pop
and
fcomi
mov
add
movsl
jmp
dec
xchg
cmp
xchg
mov
pop
jecxz
pop
inc
insl
je
negb
pop
sbb
fsubrl
mov
into
xchg
shrl
mov
cmp
leave
sub
xchg
xchg
add
fdivrs
cmp
mov
into
enter
jns
jbe
test
push
or
or
mov
fisubl
and
push
cmpsl
mov
aaa
push
repnz
repz
bound
arpl
imul
push
jecxz
cli
lahf
or
clc
inc
cld
pusha
adc
inc
sbb
loop
xchg
call
mov
xchg
pop
mov
cmpsb
xchg
sarl
adc
cmp
adc
jge
mov
out
faddp
push
lret
repnz
scas
xchg
or
movsl
xor
push
jb
mov
shl
outsb
sbb
movsb
inc
inc
xchg
push
jnp
sbb
mov
in
dec
out
or
push
lea
fstl
mov
out
movsl
movsb
mov
cld
repz
clc
dec
xchg
sub
pop
mov
ds
mov
cmp
icebp
dec
js
jge
data16
add
jbe
js
mov
lds
fdiv
rol
adc
lock
xchg
cmpsb
stos
jae
iret
test
mov
shll
pop
subl
pop
mov
arpl
dec
imul
sbb
test
or
mov
repz
cwtl
sub
mov
dec
fwait
sbb
mov
pop
or
xchg
cli
inc
daa
xchg
sbb
and
xchg
rol
pop
outsb
lock
std
outsl
jge
daa
jmp
adc
cmp
jne
pop
sahf
loop
mov
xchg
xor
cmpsl
mov
lods
sbb
sbb
fcmovnb
icebp
jb
push
fwait
stos
jp
scas
mov
inc
push
add
pusha
loope
mov
fbstp
add
int
lcall
xchg
cwtl
cmp
inc
lods
lock
sti
add
aaa
jb
and
fwait
sub
mov
add
loop
icebp
add
mov
push
jo
mov
jbe
jnp
repnz
into
int3
inc
or
enter
mov
loopne
jle
not
xor
ja
mov
add
or
sti
push
sub
test
ret
stc
mov
xchg
inc
insb
loop
and
outsb
jae
cmp
push
movsl
lcall
and
adc
cmp
push
hlt
mov
fs
stos
adc
xchg
jecxz
push
sbb
fistps
dec
cmpsb
sbb
sbb
movsl
sub
and
or
add
dec
cmp
adc
fbstp
gs
cwtl
adc
push
xchg
icebp
adc
in
fnstsw
mov
dec
test
jle
lahf
test
xchg
outsb
jge
mov
cld
adcb
int3
sahf
cs
outsl
test
jl
add
jg
and
fsubrl
xchg
sbb
cmp
jge
cmp
jp
fst
inc
xor
adc
je
pop
nop
jmp
push
add
adc
fmulp
fcomi
lods
mov
and
orl
aas
imul
mov
out
adc
mov
call
loope
sarl
stos
xor
xchg
cmp
loope
mov
dec
sub
mov
lods
stc
push
push
dec
orb
popa
and
out
mov
jnp
lds
cmp
pop
mov
into
movsb
std
cwtl
int
fwait
xlat
xor
popf
push
xor
and
sub
jae
std
shlb
ret
jmp
ret
or
xor
in
shlb
xor
inc
repz
es
pusha
lods
pop
pop
xor
cltd
jg
nop
les
jae
es
mov
sarl
jp,pn
add
icebp
mov
lds
pop
pusha
xor
mov
jmp
sbb
popf
arpl
xor
stc
xor
add
jnp
mov
in
cwtl
mov
add
lods
scas
gs
push
addb
xchg
xor
add
cmp
ljmp
push
mov
test
cltd
mov
bound
inc
pop
out
push
out
xchg
std
push
loop
add
shrl
nop
cmp
lret
shlb
dec
sbb
test
add
xor
test
and
in
mov
cmpsl
lret
addr16
and
sti
cmpsl
daa
xchg
jo
sbb
lock
jg
lcall
loope
pop
adc
mov
jb
cmp
adc
fwait
mov
inc
pop
fs
mov
mov
jnp
sbb
arpl
adc
xor
setp
adc
cmp
call
cmpsb
mov
cmp
xchg
mov
fnsave
decl
adc
dec
sub
dec
mov
shlb
xor
ficompl
hlt
data16
sbbb
sbb
push
ror
popa
cmp
push
lock
adc
cmpb
jmp
xchg
dec
xor
cwtl
adc
iret
xlat
add
test
ret
loope
dec
in
inc
cs
sub
cmp
lods
in
adc
mov
mov
gs
xchg
and
sahf
sbb
jmp
das
push
inc
sbbl
xlat
lods
adc
dec
mov
mov
inc
add
enter
xchg
loopne
inc
push
outsb
popf
pop
scas
xor
xor
jbe
iret
sahf
test
add
add
insb
sbb
sbb
call
aam
mov
push
das
xchg
movsl
and
test
xchg
addr16
push
mov
shrb
adc
lea
scas
fiaddl
ficoml
fwait
cmp
imul
orl
xchg
into
xchg
jns
sti
or
bound
rep
shrb
into
sub
jecxz
jge
cltd
es
enter
fsub
or
dec
out
ljmp
subps
es
add
adc
xchg
gs
xorl
push
sti
inc
int3
cvtps2pi
pop
xor
mov
adc
fistl
fs
cmpsb
lods
cmc
rcrl
mov
xorb
push
cmp
aam
jecxz
push
repz
fisttps
test
mov
and
in
xor
push
sbb
adc
dec
rolb
and
clc
clc
mov
mov
jne
pop
dec
jl
cmpsb
adc
and
xchg
psllq
dec
shlb
test
bsr
insb
out
dec
xlat
leave
pusha
clc
aaa
iret
aaa
add
stos
ss
xchg
loopne
pop
out
cld
mov
and
push
add
leave
push
das
repnz
clc
sub
mov
jle
lods
or
xchg
adc
ss
paddb
mov
push
dec
mov
sbb
adc
adc
popa
dec
fsubrl
lds
ja
out
adc
faddp
ds
mov
pushf
sbb
xor
push
movsb
sub
xor
enter
xchg
xorb
sbb
mov
out
jnp
sti
cld
incl
mov
dec
jle
addb
cli
xor
not
add
je
stos
sub
sarl
push
cmp
outsb
mov
inc
mov
push
sahf
scas
stos
or
jge
push
aam
mov
movsl
cmpsb
movsb
enter
jp
pop
pop
pop
filds
or
cmp
xor
stc
fwait
xchg
inc
dec
pop
cmp
int
scas
lods
or
insb
fwait
bound
or
push
lret
cmp
repnz
mov
push
dec
xchg
add
ljmp
sar
adc
and
sub
or
dec
imul
mov
dec
sub
mov
stos
push
dec
adc
pop
xchg
cmp
xor
dec
addl
sub
pop
xor
fistpll
fsin
push
js
mov
in
std
subb
test
js
inc
sbb
scas
sbb
jnp
adc
add
mov
fcoml
xchg
pusha
out
jne
or
sbb
sbb
or
popa
inc
daa
aas
xchg
jmp
mov
addl
popa
das
clc
jo
mov
or
ljmp
lret
dec
not
jmp
sub
jge
jne
mov
scas
das
repnz
cmpsb
popf
mov
or
inc
lods
ja
leave
and
sahf
daa
and
adc
mov
sbb
mov
cmp
aas
iret
mov
divb
jbe
in
or
sbb
std
aam
ljmp
testb
rclb
mov
adc
dec
popf
lea
xchg
jmp
icebp
dec
push
test
push
fidivrl
cli
and
push
xchg
push
cld
lahf
adc
pushf
test
sbb
lods
inc
mov
pop
loope
dec
fiaddl
mov
ret
sub
aam
xchg
notl
rcll
inc
pop
jo
inc
sub
or
clc
fdivs
sub
sbb
lret
xchg
popf
jns
aad
fisttpll
push
sti
cmp
mov
adc
jbe
mov
outsb
jle
sarb
fwait
testb
clc
push
xor
js
mov
stc
jbe
jmp
loope
subb
dec
inc
iret
js
int3
push
adc
adcb
push
and
aad
insl
mov
int
imul
ret
xchg
lret
dec
sub
sbb
xor
xchg
out
test
xchg
lahf
hlt
outsb
xor
jle
jbe
fnstenv
add
rorb
mov
pop
cs
push
pop
mov
pop
ds
out
push
mov
fcomip
ss
imul
dec
in
aam
dec
lods
in
dec
clc
mov
mov
jnp
pop
out
inc
and
test
jno
sbb
je
stos
inc
into
pop
sbb
pop
jbe
dec
imul
jmp
fisttps
sbb
mov
jmp
movsb
popaw
push
pop
cs
ret
mov
mov
dec
dec
xchg
lods
sar
stos
pop
push
ficompl
dec
dec
and
lcall
push
int3
mov
or
dec
stc
daa
pop
add
cltd
and
ds
mov
inc
pop
pusha
loopne
or
xor
mov
ljmp
popf
cwtl
mov
pusha
out
sub
popf
mov
into
inc
rcll
aad
imul
dec
pop
mov
mov
orb
mov
pop
xor
stc
movsb
es
out
out
icebp
frstor
push
push
jns
movsl
and
dec
xorl
cmova
cmp
dec
or
int3
inc
sub
scas
lret
cltd
mov
mov
inc
ret
repnz
xlat
addr16
mov
scas
xor
and
sbb
sti
push
or
cmc
mov
xlat
imul
mov
push
out
xchg
mov
mov
addr16
sub
aad
fwait
pop
insl
out
enter
loope
mov
cmpsb
and
fadds
mov
sub
int3
prefetch
mov
pop
mov
push
scas
pusha
dec
scas
xor
adc
mov
jge
test
popf
mov
or
xchg
or
rcr
xor
sbb
jl
push
add
aam
sbb
setg
xor
push
fcompl
fcmovb
sub
dec
add
rcll
pop
rcrl
dec
pop
or
push
mov
mov
jno
test
jo
adc
adc
push
aam
sahf
aas
jb
xor
sbb
cld
xchg
sbb
push
outsb
add
jne
repz
fcoms
dec
nop
daa
mov
lret
arpl
ljmp
sbb
mov
and
cmp
icebp
sarb
divb
xchg
jne
inc
or
inc
xor
adc
in
mov
dec
fadds
jmp
mov
dec
or
dec
mov
mov
scas
sti
and
add
jb
or
data16
ds
xlat
cld
iret
pushf
add
repnz
mov
pop
push
fisubs
ret
pushf
cmp
cltd
xchg
fs
push
fldlg2
lea
stos
xchg
push
push
in
test
and
sbb
push
mov
push
lods
xor
ret
mov
mov
and
xor
test
mov
push
int
mov
test
xchg
mov
dec
leave
add
jne
nop
sub
pop
icebp
xchg
in
neg
repnz
lret
xor
or
hlt
push
inc
inc
mov
out
jo
pop
sbb
lret
cmc
jge
sub
push
lods
out
sub
xchg
inc
add
inc
adc
inc
movsl
or
push
loopne
jo
dec
sub
sbb
mov
xchg
jne
cvttps2pi
cmpsb
push
push
insb
mov
mov
mov
xor
stos
xchg
imul
push
adc
xchg
cmp
faddp
xlat
ds
lahf
cmpsl
ss
pop
dec
in
and
adc
mov
add
movsl
psubusb
push
cmpsl
mov
push
shlb
jmp
loope
jne
lret
sub
mov
cmp
outsl
pop
rol
mov
inc
mov
enter
data16
divb
dec
imul
rcl
mov
imul
push
or
pop
push
xlat
xchg
jae
push
or
xchg
inc
rorb
mov
push
aaa
fists
dec
inc
and
jb
int
mov
test
imul
fnsave
pop
mov
dec
sbb
pop
loope
jbe
mov
cmpsl
in
mov
leave
inc
movsl
add
lahf
cld
ss
repz
ret
in
enter
cld
xchg
rorl
push
lea
push
and
xor
xor
or
lret
cmpsl
idiv
daa
lods
xor
test
push
adc
notl
cmpsb
cmp
pushf
rorb
js
cs
pushf
cmp
and
mov
xor
gs
jne
mov
or
pop
pop
mov
inc
in
push
jecxz
inc
mov
js
mov
xor
lea
push
movsb
jge
inc
cmp
dec
xchg
mov
push
pop
xor
xor
outsb
pop
mov
add
sub
dec
pop
lods
xchg
ret
sbb
mov
orl
movsb
sbb
popa
pop
dec
lahf
mov
jge
inc
enter
jecxz
adc
in
and
pop
rcl
xlat
je
and
add
mov
fwait
stc
push
sub
push
sbb
lcall
inc
mov
lods
or
gs
notl
in
cmpl
pop
jp
push
int3
inc
jmp
aas
clc
pop
mov
sub
call
mov
fwait
gs
jns
push
cld
inc
xor
test
xchg
imul
pusha
mov
cbtw
in
ljmp
fbstp
xor
rcrb
ss
pusha
mov
in
mov
and
movsb
cld
or
pop
mov
iret
sub
mov
sub
and
xchg
add
ret
xor
arpl
ss
lret
insb
imul
sub
cmp
mov
fistps
push
cwtl
xchg
aad
shrl
js
jae
mov
push
leave
dec
out
xchg
dec
push
xchg
aad
dec
cmp
into
repnz
call
mov
rorl
into
pop
hlt
add
jo
test
xchg
stc
bound
push
jmp
mov
outsl
out
lahf
cs
lds
das
pop
shll
loop
pop
rcl
push
cmp
lret
int
sbb
mov
dec
or
push
fisttps
call
fwait
fwait
mov
int
aam
add
sbb
shlb
cmp
aas
jnp
shll
jo,pn
mov
repnz
pushl
sub
or
lret
adc
addr16
aaa
out
mov
mov
ret
hlt
sti
jl
fwait
repz
cmp
push
push
mov
movsb
push
or
sbb
int
pushf
add
sub
popf
into
negb
push
les
xchg
dec
pop
leave
cmc
insl
and
jne
mov
xor
jns
dec
jae
sub
add
mov
jo
lods
mov
jl
mov
adc
filds
jbe
aad
jmp
xchg
add
adc
inc
sbb
int
or
clc
xchg
jecxz
aaa
bound
lcall
or
mov
add
fs
or
js
cltd
xchg
xchg
sub
push
cmp
dec
add
insl
add
mov
jmp
or
mov
xchg
popf
push
nop
dec
and
pop
lds
sub
xchg
enter
hlt
lret
xchg
xchg
or
lahf
std
inc
repnz
push
pop
in
ss
sub
or
daa
frstor
test
push
adcl
in
inc
sbb
jo
or
fbstp
cmpl
cmpsl
push
xcrypt-ctr
cmpsl
cltd
mov
cmp
fnstenv
imul
lret
out
pop
lret
mov
addb
outsb
call
insl
sbb
add
and
jb
lea
test
xor
cltd
xchg
push
aad
cmp
std
sbb
jecxz
fidivrs
mov
fldcw
fiaddl
aam
scas
movsb
lret
mov
sub
xor
sbb
xchg
aad
and
ror
test
rol
push
mov
mov
mov
inc
lret
mov
push
fs
mov
cld
sarb
enter
cmp
or
cmp
mov
pusha
dec
lds
stos
xor
push
cli
inc
mov
imul
jo
add
push
xchg
lret
ss
or
inc
push
rcrl
xchg
dec
sub
sbb
int3
jmp
adc
lcall
call
jnp
test
mov
das
xor
repz
into
xor
inc
adc
inc
mov
flds
les
dec
sub
pusha
jmp
outsb
or
add
sub
or
dec
cltd
push
arpl
call
adc
ss
add
cmp
aad
je
fists
jg
fiaddl
push
sti
fists
stos
ds
repnz
fdivrs
add
cmp
push
psllq
rol
stos
sub
jl
xchg
or
fcompp
subb
aaa
fwait
std
or
jle
pop
jnp
aaa
add
mov
cmc
jno
push
cmpsl
mov
mov
xchg
das
dec
xchg
fmuls
arpl
xchg
push
sub
mov
and
call
fmull
std
out
xchg
arpl
push
mov
xor
dec
mov
outsb
jmp
les
test
fs
xorb
xchg
push
cmp
andl
dec
scas
cmp
or
pop
repnz
sahf
lahf
and
call
incl
out
and
lcall
lds
out
inc
sub
out
repz
stos
adc
mov
mov
mov
insl
xchg
push
js
in
mov
xchg
aas
sub
fs
test
fmulp
imul
dec
xorl
sbb
shll
nop
lret
push
mov
dec
enter
mov
sbb
sub
loope
imul
or
arpl
mov
fistpll
xchg
pop
inc
adcb
shll
lods
dec
pop
mov
pop
sub
ja
popa
sahf
jge
pop
lahf
jle
lods
ja
push
aam
jle
scas
or
inc
xor
and
roll
cmp
in
jns
psubusw
repnz
adcl
loopne
lods
lea
scas
ja
enter
dec
sub
cmp
push
mov
xchg
scas
outsl
jb
mov
sub
inc
out
imull
ret
xchg
fdivs
xchg
cmp
int3
xchg
pusha
loope
imul
or
insb
xor
dec
test
adc
add
stos
jns
test
pop
mov
dec
dec
stos
pop
lcall
pop
cs
push
inc
fisttps
sub
sbb
xor
sub
test
iret
push
xchg
fwait
mov
sti
inc
pushl
adc
in
shr
fwait
out
xor
mov
push
pop
xchg
cmp
pop
dec
add
inc
cs
pusha
sbb
inc
data16
les
dec
rcrb
push
pop
cmpsl
and
and
mov
insl
cmp
aam
lcall
sub
push
mov
into
add
push
mov
inc
stos
int3
sub
dec
mov
jnp
fmuls
dec
xor
mov
xor
inc
sub
adc
call
cld
xchg
jg
es
lea
jge
xor
pop
jl
mov
rolb
movsb
push
insl
repnz
push
pop
je
pop
jl
jae
and
cvtps2pd
js
jecxz
lret
cmp
mov
mov
sub
mov
push
mov
xor
add
lea
dec
mov
leave
add
out
je
jb
incl
in
dec
mov
dec
arpl
stos
sbb
dec
push
push
xor
push
mov
and
and
int
addr16
mov
ljmp
loop
or
cmp
cmp
pop
mov
push
cmp
lahf
jl
push
or
push
mov
mov
rorb
ja
stos
mov
adcb
push
mov
push
mov
adc
test
insb
jae
les
cltd
scas
stc
fsubrl
xor
mov
pusha
or
mov
sub
mov
cmp
in
xchg
imulb
jb
or
sub
loopne
faddl
mov
imul
sti
stos
or
xchg
in
mov
das
aad
pop
dec
mov
lret
rorb
ljmp
ljmp
mov
test
inc
mov
sbb
jg
clc
aaa
and
pop
jne
inc
jno
movsb
fbld
pop
push
push
mov
sub
sti
pop
or
push
and
lods
fadds
push
dec
or
adc
call
mov
jne
xchg
add
lods
add
and
mov
icebp
ljmp
sbb
inc
pop
mov
push
movsl
cmp
mov
add
mov
ja
jecxz
movsl
push
dec
sbb
lret
jnp
sub
and
lahf
shrb
xchg
jno
roll
xchg
repnz
mov
inc
arpl
jno
das
xchg
adc
mov
xor
adc
andb
jbe
mov
repz
pop
lea
mov
jns
int
popf
add
mov
pop
cmp
leave
repnz
scas
int3
and
ja
ljmp
fwait
scas
ja
lock
lds
fnsave
lret
scas
fcoml
sbb
mov
pop
sbb
orb
jge
add
popf
adc
bound
scas
loope
shlb
adc
xor
out
or
mov
adc
loop
lret
jno
cld
pop
xchg
bound
push
popa
cwtl
out
or
rcrl
pop
clc
jge
pop
das
xchg
push
jecxz
sbbb
mov
int
inc
push
and
jbe
loopne
test
fstl
fldpi
lcall
push
xchg
ror
dec
es
push
xchg
xlat
cli
mov
xchg
icebp
or
push
lods
dec
std
jb
push
sbb
and
mov
xchg
cmp
rcrl
xchg
aas
and
aas
xchg
imul
insl
jo
xchg
outsl
dec
lds
stos
adc
shlb
lcall
pop
mov
jecxz
test
sub
fdivs
test
xorl
inc
je
mov
jle
jle
out
jb
xchg
gs
test
fwait
ret
insl
lahf
push
ljmp
push
lods
in
loopne
jbe
mov
clc
sbb
pop
inc
clc
inc
inc
sub
bound
jno
aam
push
pop
iretw
add
test
dec
push
adc
out
cmp
jecxz
xchg
popa
fdivr
cmovle
ja
jo
mov
mov
cmp
loope
mov
dec
sbb
cs
inc
pop
add
xchg
es
adc
mov
test
dec
mov
repz
pusha
loopne
inc
pop
pop
mov
adc
or
pop
adc
mov
or
jno
scas
insb
push
push
push
dec
inc
in
sbb
push
jne
cmpsl
xor
dec
cmp
je
lock
xchg
inc
pop
push
jnp
aas
push
xor
leave
pop
out
jge
stos
stos
das
sub
jp
insl
popf
lret
add
jecxz
gs
sbb
mov
xchg
cmp
lret
push
aas
sub
mov
fucomi
sbb
call
push
push
pop
testb
cmc
push
lods
push
out
test
dec
add
je
pop
sbb
dec
shr
arpl
or
jmp
xor
dec
pusha
jl
xchg
out
sub
xor
hlt
sarb
nop
jg
push
adc
int3
pusha
dec
xchg
push
sub
push
int3
xor
shlb
fs
xor
lcall
or
sbb
xchg
stc
cwtl
mov
js
clc
push
and
daa
cltd
cmp
shrb
out
mov
mov
out
xor
loope
cwtl
stc
dec
hlt
bound
rclb
and
cmp
dec
jle
adc
adc
pop
cmp
xor
divl
test
push
pop
mov
cmc
lds
fwait
pop
loop
push
iret
adc
test
and
mov
sbb
jl
and
xchg
cmp
or
mov
inc
mov
nop
cmpsl
out
pusha
cs
push
sub
sbb
xchg
or
ret
dec
sarb
jl
cmpsb
or
int3
movsb
and
imul
arpl
mov
pop
sub
data16
push
add
inc
mov
fnsave
addr16
push
push
sbb
dec
pop
push
outsl
mov
out
cmpsl
xor
das
imul
inc
lods
xchg
mov
jbe
mov
adc
roll
inc
and
movsl
xchg
and
cld
mov
jmp
aam
in
in
arpl
ficoml
iret
cltd
fidivl
push
loopne
mov
or
in
cmp
push
leave
pop
add
and
sbb
pop
hlt
lret
and
push
push
cmpsl
insl
mov
cmp
jmp
leave
sub
jo
lods
add
inc
jo
mov
xor
outsb
sti
inc
fdivl
mov
shlb
or
xchg
pushf
fwait
sub
sbb
jo
pop
rclb
cmp
bound
and
ds
push
push
xchg
dec
inc
xor
inc
addr16
imul
jmp
and
push
adc
dec
in
je
iret
pop
pushf
dec
lds
push
je
rorl
mov
roll
mov
push
arpl
xor
and
es
mov
js
pusha
je
cmp
add
imul
sarb
pop
mov
sub
and
cwtl
imul
repz
jp
std
aam
rcr
repz
xchg
cmp
int3
push
xadd
fmull
pop
repnz
add
mov
scas
and
push
sbb
loopne
in
push
mov
stos
rcpps
sbb
ja
inc
xor
fnsave
in
addr16
jle
sub
fs
sahf
std
sar
jnp
movsb
sti
testb
test
ljmp
cmp
add
fwait
cld
sbb
loop
test
in
jns
fst
test
push
xorl
lahf
push
mov
rorl
mov
or
mov
xchg
stos
daa
stos
cmc
imul
jbe
mov
cmp
xchg
imul
lods
outsb
push
push
insb
pop
pop
mov
int
test
ret
mov
xor
and
cltd
icebp
mov
fidivrs
dec
inc
cltd
out
jmp
jmp
ss
arpl
xchg
sbb
jg
xor
scas
sub
daa
in
repnz
stos
pop
jp
arpl
fwait
imul
das
stc
sbb
jae
stos
iret
xchg
into
mov
rol
push
movsb
pop
sti
fistpl
ret
loop
shlb
decl
clc
xchg
scas
mov
jb
mov
adc
xchg
dec
xchg
or
adc
dec
sbb
in
inc
mov
dec
mov
jmp
aad
loopne
mov
xor
sbb
lahf
test
inc
je
pop
mov
cli
mov
scas
push
lcall
xchg
push
dec
jnp
mov
dec
popf
mov
push
jne
pushl
frstor
mov
inc
fsts
je
bound
leave
fwait
shrb
push
movsl
sbb
rorb
lods
dec
sbb
add
mov
ja
cmp
mov
add
inc
push
stc
lcall
repnz
lret
je
out
push
push
mov
jecxz
mov
popa
jge
rorb
jecxz
mov
icebp
jle
ret
cmp
dec
sub
sbb
adc
xchg
xor
pusha
xchg
cmc
mov
mov
fists
ret
and
mov
stc
test
add
push
lods
das
in
adcl
sarl
scas
add
mov
adc
popf
xchg
adc
mov
adc
adc
out
cli
arpl
dec
mov
shr
das
divb
push
dec
cld
aad
add
mov
inc
fimull
push
cmpsb
mov
mov
or
dec
fcoms
inc
rolb
mov
pop
out
clc
imul
add
gs
pop
lock
jnp
fwait
adc
inc
push
and
out
jae
rolb
mov
fbstp
popa
xor
call
in
sarl
sub
fldcw
dec
test
push
cs
cmpsl
bound
push
pop
xor
mov
pop
test
dec
sub
cmp
mov
cwtl
mov
rorl
inc
orb
inc
mov
lret
push
cli
jl
test
aam
add
lea
mov
iret
and
jns
xchg
stos
mov
ret
pop
adc
je
sbb
lret
enter
push
in
cld
lret
mov
mov
sub
scas
fs
fistl
mov
or
call
into
add
xorl
and
stc
fcmovu
cli
dec
cs
pusha
cmpsb
mov
mov
adc
pop
cli
mov
inc
xor
out
mov
or
inc
jnp
cwtl
jle
pop
mull
sti
push
int
loop
jg
fdivs
insb
sbb
inc
push
lock
and
xchg
mov
dec
sahf
mov
pop
movl
lea
adc
xor
ret
frstor
push
add
pop
xchg
call
inc
inc
rorl
jb
dec
adc
stos
mov
push
push
add
lea
and
fdivl
or
xchg
cmc
leave
sahf
test
pop
loop
and
repz
dec
adcl
mov
sbb
jno
loopne
pop
mov
mov
stos
inc
add
and
sbb
into
aas
test
adc
les
xchg
rcl
mov
dec
push
mov
sbb
or
cmp
cmpsb
es
leave
xor
daa
mov
mov
add
lods
cmc
rcl
mov
push
dec
rolb
daa
jmp
mov
jl
repnz
add
ret
mov
scas
cmp
lret
test
jns
mov
mov
scas
mov
fs
std
ss
push
add
rolb
jnp
add
or
inc
sbb
in
add
jbe
insb
xor
cmp
and
gs
mov
dec
stos
pop
cwtl
cwtl
fistpl
add
rcrl
out
cmpsb
sbb
sbb
xor
dec
or
bnd
sbb
xor
pop
jmp
les
dec
rorb
adc
mov
push
pop
mov
cmp
dec
stos
popf
ja
mov
test
inc
mov
hlt
xchg
cmp
cmp
fldt
test
sbb
js
in
mov
insl
fdivrs
jnp
imul
mov
in
mov
test
cmpsl
test
and
sub
mov
cli
insl
cwtl
xor
jecxz
dec
cmp
xchg
popf
iret
fcomps
ja
lret
sarb
dec
xchg
and
ficoms
sbb
subb
add
stc
lods
lock
nop
push
mov
inc
pop
xchg
andl
ss
or
push
out
sar
testl
loop
test
mov
fildl
add
jae
push
xchg
lret
jns
adc
cld
lcall
jle
push
pushf
xchg
fisubl
aad
xor
pop
mov
jge
push
inc
inc
adc
addr16
pushf
xchg
and
lcall
xor
sub
sbb
jne
mov
add
mov
movsb
popa
or
enter
jg
pop
aam
scas
jbe
daa
xor
jo
lahf
out
scas
sub
xchg
add
stc
rcrb
es
fdivs
int
inc
mov
std
sbb
and
lret
call
aad
lret
sahf
xchg
sub
cmpsl
push
in
xor
pop
mov
cmpsb
lea
addr16
repz
or
hlt
sub
inc
adc
lea
pop
sbb
push
call
lcall
mov
inc
jae
negl
or
cltd
loope
out
inc
push
dec
sahf
insb
shlb
shll
sbb
inc
inc
xchg
mov
mov
sbb
and
jp
in
repz
outsl
rorl
shll
popf
mov
test
mov
xor
sub
adc
mull
outsb
jl
insl
ds
pop
mov
mov
aam
cmp
jecxz
test
xchg
bound
jae
test
ss
dec
es
xorb
sti
pop
mul
jbe
pop
sub
sub
jecxz
int3
jne
enter
mov
jo
loopne
lods
cmp
aaa
mov
inc
adc
mov
mov
mov
icebp
shl
sti
js
add
pop
lds
fdiv
cld
fimuls
push
loopne
xor
leave
ds
pop
dec
jo
cmp
pop
xor
xchg
sub
das
ds
inc
in
and
ljmp
out
pushf
adc
mov
jmp
jae
cmp
add
enter
fdivrs
dec
sbb
in
mov
xchg
lea
xlat
adc
cmp
jbe
dec
and
or
mov
or
fidivs
adcb
leave
mov
popa
aad
or
push
cs
xchg
dec
sub
outsl
xchg
and
in
fbstp
add
pushf
lea
sbb
fcmovne
xchg
mov
jae
orb
ljmp
mov
lock
aaa
dec
dec
lods
xor
mov
mov
out
ss
cmp
inc
mov
clc
jl
rol
daa
inc
push
dec
add
sub
scas
jnp
loope
loopne
ss
test
fadds
xor
dec
dec
and
aas
cmp
aaa
lods
dec
leave
mov
sub
pop
out
hlt
shl
lds
xchg
movsb
enter
test
fcmovnbe
mov
lock
mov
xor
inc
xor
push
orb
fmuls
or
fs
jno
xchg
cmpb
bnd
adc
cmp
mov
mov
jo
mov
or
and
jbe
mov
and
sbb
cwtl
mov
dec
jle
hlt
addr16
nop
jge
pushf
mov
xor
enter
jnp
pop
pop
aas
outsl
stos
ret
inc
cmc
imul
add
add
stos
dec
je
jmp
push
test
xor
xor
test
inc
roll
hlt
cltd
push
outsb
js
push
cmp
mov
mov
dec
in
dec
inc
hlt
sbb
aas
in
dec
push
xchg
xchg
es
stos
pop
fstps
add
lock
iret
in
lea
or
push
cltd
jo
lret
jg
adc
cmp
mov
ds
jne
xchg
jmp
lea
sub
adc
xchg
mov
or
jl
dec
sbb
mov
jp
addr16
push
dec
test
mov
lock
dec
movsl
dec
inc
xor
add
in
push
fwait
push
std
int
jp
insb
adc
and
nop
dec
lahf
std
test
push
jae
sub
sub
sub
or
hlt
sbbl
les
or
cmp
inc
push
insb
je
pshufw
inc
or
sbb
aas
stos
fs
in
mov
lcall
add
outsl
mov
aaa
mov
lret
data16
pop
push
jne
decb
std
jmp
mov
sub
int3
clc
orl
pop
push
shl
pop
addr16
shl
int3
in
jns
push
leave
mov
inc
push
add
enter
insl
sub
popf
push
scas
es
inc
cmp
xchg
xchg
jp
dec
lds
je
sub
mov
sbb
adc
mov
mov
pop
ror
hlt
mov
pusha
js
adc
shl
sbb
or
out
xchg
inc
sbb
mov
mov
test
leave
fcomps
xor
cltd
iret
inc
sbb
repnz
jg
mov
clc
movsl
inc
xchg
mov
cmp
jo
rorl
or
pop
pop
test
mov
addr16
jnp
push
cmpsb
mov
inc
es
ja
cli
rcrl
mov
js
clc
data16
insl
xor
cmc
fistps
out
push
mov
push
jp
mov
int
add
push
into
fsub
ja
push
imul
cltd
jbe
popa
lods
mov
push
mov
sbb
iret
lds
xchg
je
popf
mov
enter
push
pop
adc
adc
jge
xchg
xor
add
rolb
fwait
mov
pusha
mov
adc
inc
add
rclb
imul
pop
dec
test
rorb
lcall
enter
outsb
adc
jbe
mov
push
jno
mov
aaa
xor
push
sbb
add
or
aam
les
jae
loope
mov
adc
rcll
sub
lods
sbb
rcrb
cli
or
mov
pop
or
mov
pop
repz
fidivrl
jns
xchg
pop
dec
jne
out
loopne
repz
mov
ret
js
xor
test
xchg
adc
sub
mov
inc
jne
cmp
das
pop
mov
ljmp
repnz
scas
mov
mov
lods
shl
adc
dec
leave
cmp
aam
and
and
xchg
pop
jl
xor
mov
push
add
cli
and
push
mov
sbb
repnz
jbe
nop
mov
std
out
cmp
sbb
cmp
test
insl
mov
cmpsl
xchg
dec
dec
mov
scas
push
or
pop
add
rcrl
sub
dec
inc
imul
xchg
lret
mov
pop
mov
inc
in
test
cmp
and
jg
mov
movsb
lods
and
mov
xchg
test
fcoml
iret
rclb
dec
stos
dec
lock
mov
lcall
and
inc
jge
jp
std
lds
cmp
sbb
pop
cmpsl
dec
in
nop
add
sub
shl
mov
in
mov
jb
or
out
xchg
xchg
mov
or
sahf
push
inc
mov
fstl
in
mov
and
shll
dec
jge
lock
rclb
jge
jecxz
cs
pushf
or
fsubl
add
int3
sub
ret
jge
cltd
iret
imul
or
fidivrs
pop
hlt
out
jbe
iret
es
mov
adc
je
and
jns
xchg
cmp
sub
divl
lcall
or
fsubrs
pop
sub
sub
jge
mov
mulb
xor
lock
mul
push
mov
mov
mov
fsubrl
js
inc
inc
dec
ret
push
clc
je
dec
add
js
sub
pop
inc
jl
xchg
lods
xchg
xor
arpl
mov
jl
insl
and
ret
jmp
ret
fcoms
adc
movsb
pop
idiv
jp
mov
pop
test
cmp
rcll
scas
mov
adc
or
pop
jbe
jns
add
loop
adc
xor
stc
xor
les
mov
mov
xor
and
or
inc
lock
jg
mov
daa
lcall
mov
int3
inc
lock
loopne
or
cmp
mov
jbe
mov
adc
xor
je
push
xor
cli
js
inc
mov
xchg
shlb
xor
dec
sbb
je
stc
rcll
mov
cli
insb
sub
mov
bnd
scas
scas
outsl
push
imul
add
pop
test
sbb
add
adc
and
dec
xor
mov
repz
stos
sub
sbb
jg
pop
xchg
pop
repnz
leave
clc
cwtl
sub
dec
add
pop
fbld
aad
pop
mov
push
ret
pop
xchg
jp
in
mov
dec
add
sub
ljmp
xlat
adc
lea
xchg
mov
pop
bound
jno
cmpsl
cli
lea
xor
cwtl
sbb
cli
imul
into
pushf
push
fisttps
or
in
fistpll
xchg
mov
inc
and
pop
cmp
ffree
sar
cmp
in
xchg
jp
pop
sarb
xor
packuswb
cli
xlat
cmp
aad
add
jno
cmp
faddl
mov
jno
pop
xor
fidivs
ret
in
cmc
test
and
xor
cli
jnp
stc
inc
scas
push
aas
pop
mov
pop
pusha
leave
repz
dec
negb
push
repz
push
lds
and
push
scas
jno
mov
jo
cmp
outsb
pop
cmp
add
into
jmp
shlb
mov
fmull
jp
dec
push
test
or
cmp
adc
clc
adc
lock
mov
mov
lcall
jnp
xlat
pop
inc
mov
pushf
jge
jg
sar
dec
adcl
push
jecxz
icebp
or
ror
stos
cld
out
pop
add
cmc
out
add
popf
jmp
fs
add
pop
addr16
pop
sbb
aaa
mov
addr16
and
adc
inc
or
jmp
inc
stos
mov
leave
repnz
lcall
adcb
clc
mov
fisubs
dec
out
outsb
inc
cmc
push
cmpsb
cmp
lcall
jmp
adc
ret
rcl
rorl
pop
xor
cld
mov
lcall
inc
cmp
pop
jnp
inc
inc
lock
sbb
fwait
pop
mov
dec
sahf
mov
loope
mov
pop
sbb
dec
sbb
xlat
inc
cmc
popf
jno
mov
lea
xor
jbe
ja
adc
jns
pop
std
or
xor
outsl
pop
mov
in
pop
inc
outsl
sbb
mov
pop
pushf
bound
dec
push
in
test
pop
rclb
aam
and
xchg
push
and
fbld
scas
repz
or
cmp
pop
xchg
lods
mov
push
pop
out
jne
mov
nop
lock
std
pusha
imul
pop
subl
jecxz
insl
xor
stc
add
add
jne
mov
fwait
inc
and
add
mov
adc
inc
mov
jg
pop
dec
out
add
jecxz
mov
imul
fimull
mov
and
rclb
pop
mov
into
jne
dec
fldt
push
pop
xlat
mov
in
stc
fwait
xorb
and
shrb
mov
sti
shl
jecxz
xor
pop
adc
mov
stc
pop
sti
mov
add
mov
push
mov
ss
mov
cmp
outsb
dec
jae
in
mov
pop
xchg
mov
lret
cs
not
dec
nop
test
push
push
aad
and
sub
fsub
shrl
add
paddb
inc
xchg
pop
push
fistps
lds
and
xchg
pop
sbb
stos
sahf
push
in
cmp
dec
fnstcw
push
das
inc
sar
inc
lods
cmc
xchg
sbb
repnz
jge
inc
fsubr
mov
test
adc
sbb
into
lret
mov
ja
es
jge
mov
je
mov
and
xor
inc
mov
out
filds
fidivs
push
sub
xchg
scas
out
mov
lret
pushl
xor
sbb
aaa
jns
mov
repz
test
aad
dec
addr16
push
xor
sti
xchg
xchg
adc
enter
mov
push
pop
icebp
jle
ret
adc
loopne
dec
outsl
ss
je
or
adc
xor
int3
mov
and
leave
push
in
xchg
mov
lods
cmpsl
dec
jmp
pop
shrb
fstpl
jl
inc
add
out
pop
adc
js
add
dec
sbb
jmp
insl
in
iret
out
in
inc
rolb
pushf
je
pop
aad
stos
mov
flds
in
and
mov
fidivrs
fwait
xor
fisubrs
mov
out
lcall
mov
mov
inc
ja
movsb
xor
inc
push
inc
or
rorb
xor
xchg
push
jns
fdivs
or
pop
push
jecxz
lea
push
ja
jno
add
ret
pop
sbb
jecxz
mov
push
inc
pop
lret
sarb
push
mov
jns
and
cli
mov
inc
add
xor
frstor
arpl
in
ret
cmp
stos
xor
sbb
xor
enter
mov
mov
cmp
aad
pop
call
into
push
stos
insl
gs
ljmp
mov
jp
idivb
adc
pop
pop
push
fs
pop
sub
and
dec
daa
shll
popl
adc
ss
inc
loop
gs
push
fnstsw
movsb
pop
cwtl
mov
pop
xor
inc
mov
mov
or
pop
leave
jle
mov
imul
xorl
clc
mov
push
adc
mov
dec
sub
shrb
push
and
enter
les
jecxz
in
inc
js
loope
lahf
sbb
xchg
push
gs
cmp
jae
fisubl
int3
pop
fadds
lea
jle
mov
icebp
jecxz
and
in
call
flds
fcoml
lret
lcall
mov
scas
repz
sub
test
cmp
jns
fisubrs
cmp
pop
push
ja
aad
pop
shr
add
in
hlt
xchg
lods
jl
push
adc
jmp
mov
ds
mov
out
popf
cmpb
inc
stos
sahf
add
fstps
in
sahf
sub
lahf
and
push
sbb
fwait
fs
pop
gs
out
dec
imul
add
movsb
into
cmpsl
jmp
inc
jp
dec
cmp
pop
cmp
sti
add
add
pusha
mov
int3
cmp
cmp
xor
pop
pop
pop
sbb
sub
xchg
outsl
pop
mull
add
cmpsb
push
in
xor
cmp
or
sub
ds
aad
les
push
aad
repnz
dec
shlb
jge
lahf
cltd
cmc
sub
push
push
mov
cmp
pop
rcll
mov
js
scas
and
dec
lret
push
mov
mov
fistps
popf
mov
sub
lret
adc
xor
fisubs
push
sub
xchg
sbb
call
cs
test
xchg
outsl
icebp
push
cwtl
push
insb
cmpsb
out
lock
mov
jnp
lret
adc
pop
aad
push
ficompl
dec
mov
fimull
movsb
sub
in
sbb
dec
mov
rorl
loope
push
sub
orb
jge
mov
bound
jge
imul
pop
in
and
shl
cmp
cmp
stc
or
mov
xchg
push
ret
jo
inc
fists
cmp
or
fisttps
pusha
mov
outsb
fmuls
push
std
push
test
add
push
in
repz
add
mov
push
or
loopne
jo
xchg
inc
add
imul
out
adc
sbb
pop
dec
data16
xchg
jne
mov
dec
daa
add
jl,pt
cmpsb
mov
mov
sub
outsl
icebp
mov
mov
imul
mov
sub
aad
jle
test
mov
push
xchg
pop
push
insl
sbb
arpl
mov
dec
lcall
dec
scas
loop
aam
fsts
into
int
sub
push
push
push
daa
js
movsl
in
mov
iret
divl
insb
and
dec
data16
cmpsb
cmp
imul
adc
sbb
lret
fmuls
adc
push
lods
pop
repz
xchg
adc
sar
outsl
and
dec
mov
sbb
or
sbb
inc
push
dec
jecxz
std
shrb
mov
xor
mov
inc
mov
mov
push
jb
daa
cmp
pop
jnp
rorl
fs
lahf
push
jno
lea
je
mov
and
lret
data16
sub
sbb
adc
leave
or
aad
inc
js
frstor
xchg
xor
cmp
fs
in
lea
inc
adc
fiaddl
sahf
add
scas
pushf
test
or
arpl
mov
mov
roll
lods
imul
xlat
addr16
aas
loope
push
imul
insb
jo
dec
xchg
test
push
aad
push
popa
sub
mov
cltd
mov
xor
std
jne
xor
mov
js
cli
mov
jg
or
inc
and
add
aam
mov
ret
xchg
test
shlb
sbb
gs
and
movsb
test
hlt
mulb
sbb
jno
xchg
mov
mov
xor
sub
stos
push
inc
sub
fsubl
adc
fwait
pop
push
addl
gs
pushf
cld
pop
add
fcmovne
jmp
lock
jp
shlb
and
jmp
mov
sbb
testl
pop
test
pop
pop
xchg
sarl
stc
imul
mov
in
rcrb
testb
mov
lods
sahf
icebp
sub
mov
movb
add
sti
les
sub
mov
daa
cmp
sub
dec
cmp
fdivrl
sub
test
xchg
xchg
mov
frstor
adc
lret
or
les
jl
jmp
inc
fcmovu
or
xchg
cs
scas
idivb
mov
orb
mov
shlb
divl
cmp
in
adc
xchg
add
mulb
sbb
xchg
adc
mov
cmp
pop
and
add
pop
pushf
out
push
and
sarl
add
sub
mov
out
enter
add
std
mov
repnz
movb
aam
les
sub
sbb
inc
sbb
jecxz
and
insb
push
and
ret
neg
mov
add
mov
jecxz
pop
data16
lahf
inc
imul
fisttps
mov
movsl
pop
imul
ljmp
lods
rep
gs
shlb
stc
adc
aam
test
push
out
mov
sub
fsubs
jge
aas
add
cmp
inc
lret
rol
sbb
and
inc
cmc
push
dec
cmp
pop
mov
mov
pop
shrl
addl
mov
mov
lea
cmc
jno
jo
into
mov
aaa
iret
and
mov
loopne
sbb
cmp
inc
cmp
bound
mov
sub
dec
cmpsb
cltd
iret
daa
stc
sbb
and
sub
mov
scas
jp
jnp
jns
push
pop
mov
loope
jg
sub
movsl
fisubl
mov
push
push
icebp
imul
sbb
xchg
or
stc
ljmp
lds
add
dec
dec
daa
imul
add
repnz
jnp
jl
pop
push
test
push
jmp
or
inc
pop
sbb
les
xchg
add
aam
fsts
sbb
mov
push
pop
adc
mov
imull
dec
loope
xor
mov
xor
cmp
std
dec
movsb
sbb
or
icebp
xlat
fimull
mov
shlb
movsl
xchg
push
pop
stos
push
rclb
inc
cmc
cld
enter
daa
orl
mov
cli
mov
xlat
ret
ret
negl
pop
sahf
ss
stos
call
inc
mov
test
enter
lds
fwait
xchg
stos
mov
out
mov
enter
xor
lods
aas
in
subb
sub
int
jae
loopne
in
pop
fs
xor
ss
push
arpl
loop
dec
test
inc
imul
jbe
mov
outsl
xchg
orb
push
repz
iret
adc
aam
test
sub
clc
shlb
mov
fwait
mov
adc
pop
nop
vpsraw
sub
enter
int3
push
sbb
cmpsl
daa
push
stos
ficomps
loope
mov
mov
mov
cmc
inc
das
out
xor
cmp
jmp
jle
cmp
push
xchg
sbb
scas
pop
test
les
jl
repz
enter
clc
jg,pt
js
popf
rcll
cwtd
fmul
dec
push
xor
sub
fwait
lea
xor
and
outsb
xlat
mov
rcrl
stos
cmp
dec
insl
mov
js
outsb
cmp
rcrb
fnstcw
cmp
pop
xor
adc
aas
testb
pusha
jmp
enter
scas
rcrl
inc
add
cli
prefetch
push
rolb
sti
push
cmpsl
or
and
je
ret
mov
jb
loopne
jmp
dec
push
mov
fwait
sub
mov
sub
mov
push
popf
ret
mov
xchg
push
daa
scas
shrb
stos
jbe
xchg
push
xor
loopne
int3
dec
sahf
xchg
sbb
xor
iret
inc
and
and
jl
mov
jno
scas
mov
jg
test
lods
ds
jnp
xchg
lds
jge
sbb
lcall
std
xchg
incl
pop
push
clc
icebp
sbb
and
movsb
mov
dec
daa
mov
fxch
sub
fs
sbb
fdivrs
imul
xlat
roll
lahf
jle
xor
int3
hlt
stos
sbb
cmpsl
pop
out
jl
lea
rclb
outsl
xchg
jae
cmp
jbe
idiv
xchg
jae
add
out
mov
hlt
and
sub
cmp
push
mov
mov
ja
mov
add
fdivrl
icebp
inc
cli
loop
mov
sbb
clc
out
ffreep
inc
xor
xchg
or
nop
lock
repz
mov
test
xor
pop
imull
xor
xchg
mov
gs
and
scas
icebp
dec
xchg
sahf
pop
push
xor
outsl
jle
stos
sub
sbb
or
in
cmpsl
aad
sbb
sbb
mov
bound
adc
mov
out
push
loop
inc
sub
shl
xor
jmp
inc
shrl
pop
xor
push
sbb
jmp
inc
dec
xchg
out
in
popa
ficoml
iret
das
pop
lods
push
inc
lods
jle
and
add
push
push
lods
xor
cltd
test
les
sbb
outsl
dec
mov
push
mov
es
xchg
xchg
cmpsb
mov
scas
es
cmpsl
fwait
jnp
fchs
and
movsb
test
dec
pop
mov
or
and
int
ror
rclb
leave
mov
es
and
add
arpl
popf
jle
inc
imul
sbb
loop
shrb
divb
xor
jne
jne
and
fstps
and
aaa
arpl
in
insb
movsb
stos
xor
pop
lock
aam
fbstp
pop
inc
test
dec
js
out
or
test
je
and
and
adc
out
idiv
dec
lea
fs
xchg
stos
cmp
in
and
clc
or
push
lahf
jne
sbb
and
fwait
test
mov
and
mov
jbe
dec
and
xor
call
rcrl
add
cltd
cmp
mov
fmull
adc
pop
mov
pop
ret
mov
jge
out
adc
and
sbb
fdivl
xchg
jl
and
mov
and
pusha
or
lds
out
and
lret
std
daa
xor
mov
jp
fidivl
xchg
mov
bound
popf
lret
inc
gs
pop
add
or
add
jmp
xor
cwtl
stos
jae
mov
ret
enter
adc
jo
inc
jg
je
cmpsb
pop
mov
jp
push
push
push
mov
nop
push
dec
push
adc
ja
sub
mov
cmp
cmp
and
or
inc
inc
xchg
fldcw
pop
mov
test
mov
jle
adc
gs
mov
pop
jne
pop
mov
xchg
sub
jnp
outsb
push
mov
daa
jmp
adc
xor
ret
shl
sub
push
xor
push
daa
cmpb
mov
jne
sub
lock
sbb
popf
fs
or
mov
pusha
fcomps
mov
and
adc
pop
mov
adc
mov
gs
push
mov
dec
pop
and
push
into
inc
nop
neg
mov
inc
enter
dec
insl
inc
add
out
pop
outsb
pop
stos
sub
push
jbe
lahf
lds
and
pop
inc
fcmovbe
sti
or
mov
sbb
jb
ret
dec
or
cwtl
xchg
cmp
jl
mov
shl
stos
sub
aaa
xor
mov
test
xchg
cmp
repz
popa
out
mov
cmc
xchg
andl
xor
cmp
rclb
and
cmp
sbb
dec
xor
outsb
push
push
mov
dec
jle
pop
sub
mov
rclb
cs
ss
mov
jnp
movsb
addr16
adc
pop
and
sbb
dec
sub
paddsw
jecxz
add
std
roll
test
or
outsl
fdivrl
cmpsl
mov
xchg
ljmp
adc
mov
cmc
mov
es
bound
mov
or
push
dec
bound
mov
aad
xor
in
adc
dec
adc
out
xor
cmp
mov
mov
fucom
jle
xchg
cmpsl
mov
jbe
jmp
repnz
push
mov
mov
pop
xlat
mov
and
shll
bound
mov
jae
cmp
push
pop
nop
loopne
sub
push
popf
mov
xchg
jo
adc
in
imul
inc
cmp
outsb
push
pop
mov
cmp
jmp
sub
daa
and
sbb
lds
mull
std
dec
push
push
push
push
cltd
mov
fisttps
fcompl
and
fidivrl
lahf
xchg
repnz
cmc
mov
or
mov
dec
sbb
fisubs
inc
jae
popa
filds
mov
adc
in
mov
and
or
ja
jne
loope
ljmp
mov
ret
pop
loopne
push
jns
mov
mov
clc
mov
add
xchg
and
pop
ljmp
lea
lret
inc
or
and
mov
cli
adc
fcoml
jbe
xchg
jl
dec
add
dec
mov
mov
dec
ja
dec
xor
jge
insl
mov
add
mov
pop
xchg
push
ss
cmp
fsubl
pushf
stos
xorb
ljmp
dec
jmp
std
int3
sub
fstps
and
mov
jbe
loop
roll
push
push
jo
add
cmc
push
jns
pop
pushf
aad
mov
xor
dec
cmc
jo
das
add
js
mov
mov
in
call
outsb
ds
stc
stos
jp
loopne
and
sbb
fisubs
in
inc
out
shll
lret
dec
scas
inc
push
push
cmp
out
daa
fcompl
or
icebp
jb
pusha
aas
inc
icebp
imul
test
xor
and
in
fdivrl
jp
das
cmp
outsl
shl
or
scas
xlat
xchg
jg
push
lock
dec
jmp
push
das
sar
out
popf
iret
ffreep
or
sub
jb
test
or
cmp
cmp
xchg
mov
mov
repnz
xor
push
arpl
out
and
add
aas
test
add
xor
pop
mov
inc
arpl
inc
int
cs
push
inc
roll
stc
xchg
outsb
test
sub
cmp
loop
int
fimuls
xchg
imul
iret
lcall
pop
pop
cmpsb
jns
push
mov
mov
mov
movsb
xor
nop
sbb
into
gs
sbb
mov
cmp
jns
jmp
insl
hlt
fs
cltd
daa
jmp
aaa
int
mov
push
jb
dec
push
pop
sbb
sub
adc
ljmp
int3
push
leave
mov
call
xchg
xchg
mov
or
fstpt
add
daa
jecxz
and
in
into
cmp
mov
or
es
mov
jb
cmp
mov
jecxz
push
hlt
cmp
xor
jnp
inc
fsubrl
push
lret
sbb
bound
clc
sti
cmp
mov
stos
and
cmpsl
sahf
test
call
dec
fidivl
cmp
inc
mov
shll
pop
jl
lods
rcrl
rorl
xchg
pop
cmpsb
mov
not
leave
out
int3
pop
nop
jns
mov
jb
pop
data16
rcl
mov
rorb
pop
jae
xor
and
popf
dec
adc
and
push
cmpsb
xor
inc
ss
cli
rolb
xchg
and
or
sub
cmc
rep
push
xor
jnp
icebp
sarb
je
push
je
cmp
outsl
dec
es
int
mov
push
cmp
mov
xor
imul
and
out
lret
pop
pop
mov
imul
sub
jbe
mov
js
lcall
mov
jle
add
adc
outsb
mov
sbb
mov
adcb
dec
pop
xchg
pop
cltd
jmp
std
pop
or
mov
test
xchg
fstl
xchg
sbb
cld
cmp
push
push
insb
sbb
inc
movsl
pop
xor
jmp
mov
repz
cltd
jmp
mov
imul
mov
xlat
push
sbb
outsl
xor
in
cmp
movb
xchg
cmp
jecxz
icebp
adc
add
dec
pop
sbb
es
aas
sbb
adc
cmp
mov
sahf
xor
jge
adc
inc
packssdw
mov
push
cld
idivl
and
lock
daa
jmp
int
sub
negb
mov
addb
sub
pushf
aaa
mov
push
sub
adc
add
stos
push
xchg
out
sti
cli
cmp
mov
popf
push
jns
cld
shl
ret
inc
icebp
dec
push
sarl
into
jg
push
fsubr
add
sbb
cltd
les
cmpsb
in
ss
xchg
pminub
inc
jno
jl
sbb
cltd
lret
out
pop
xor
aam
pop
pop
cli
jge
adc
mov
js
sub
xchg
fiaddl
shll
mov
stc
xor
fsubrl
and
xor
push
inc
mov
dec
pop
and
imull
lods
sbb
mov
cs
jg
lret
push
imulb
out
sub
dec
mov
test
cld
add
push
xchg
ret
xlat
inc
lods
push
ss
pop
dec
mov
inc
in
sbb
pop
in
inc
rorb
andps
push
test
mov
aad
jecxz
sub
xor
mov
mov
scas
mov
stos
popf
jecxz
and
cmc
mov
pop
xchg
mov
adc
cmp
into
mov
mov
nop
in
jl
lods
test
movsb
je
ljmp
add
sub
mov
enter
stos
sub
push
xor
pushf
cmc
lret
out
rorb
gs
inc
pop
in
xchg
mov
adc
jg
int3
in
push
mov
cltd
mov
inc
je
adc
scas
clc
mov
mov
and
mov
mov
xchg
cmp
dec
mov
cmp
dec
pop
mov
xchg
sbb
cli
ds
shll
movsb
out
leave
push
in
mov
subl
rcpps
cli
test
jge
dec
push
lahf
gs
dec
gs
in
jo
and
add
int
dec
jecxz
xchg
lcall
mov
nop
pop
sbbl
into
mov
iret
mov
mov
sbb
mov
bound
leave
loope
push
fldt
push
pop
bound
inc
xor
mov
enter
cmp
stc
adc
sbb
popa
or
inc
adc
aas
cmpsl
adc
fiadds
es
mov
sbb
cld
enter
mov
sti
lea
iret
fists
cltd
add
mov
inc
mov
arpl
ss
in
xor
fs
cmp
das
cmc
mov
shr
push
popa
xor
push
mov
clc
and
inc
decl
pop
sub
xor
jmp
dec
adc
pushf
cli
pusha
fadds
sarb
popa
cmpsl
pusha
and
mov
nop
push
mov
sbb
movzwl
pushf
gs
adc
enter
in
jo
into
jl,pt
lcall
cwtl
pop
dec
fs
push
xchg
mov
std
xor
cmp
fsubrp
sub
add
rorb
push
pop
sbb
js
fwait
adc
pop
loop
insl
shr
repz
outsl
into
js
out
sub
cmpsb
adcl
and
leave
inc
sbb
jl
or
mov
mov
lahf
sub
sbb
pop
jge
pop
mul
and
mov
daa
and
lods
jg
mov
add
push
xor
stc
fidivrs
pushf
ret
pop
cmp
loop
test
cmp
mov
xchg
repz
inc
pop
adc
pop
adc
loopne
add
xchg
mulb
cmp
jb
xlat
in
and
jle
fwait
mov
inc
mov
movsb
and
cwtl
mov
mov
mov
shlb
mov
call
xor
sbb
mov
std
xor
je
push
rcll
cmp
rclb
scas
xchg
adc
add
fcmovbe
test
add
pcmpeqb
nop
adc
lea
jb
push
orl
sbb
push
xor
jecxz
mov
repz
xchg
fs
cmp
sahf
sub
pop
inc
push
lods
pop
adc
dec
mov
js
shrl
cmp
jno
push
pop
push
imul
push
imul
int3
out
in
cmp
xor
add
sti
testl
aaa
push
xchg
hlt
mov
adc
mov
inc
sbb
sbb
adc
loope
insl
mov
mov
sbb
xchg
arpl
ret
xor
xlat
fstl
dec
push
pop
xchg
inc
push
adc
cli
mov
ret
out
jnp
xor
xlat
or
shl
cmpsl
dec
pop
mov
and
push
outsl
inc
push
sbb
jne
cld
lock
jp
pop
mov
imul
cltd
sbb
aad
lods
and
push
mov
pop
in
xor
je
lcall
test
pop
movsl
sbb
mov
mov
jmp
imul
mov
add
cmpsl
cwtl
out
mov
icebp
pop
push
gs
psubw
sbb
xor
std
sbb
mov
test
je
pop
mov
mov
fwait
xor
adc
pop
xor
inc
jno
fimull
in
mov
mov
iret
je
test
fdivrs
xchg
je
addr16
push
mov
adc
mov
mov
dec
mov
adc
gs
jbe
rcrl
leave
adc
jp
and
sbb
test
pop
out
icebp
add
stc
addr16
aad
mov
scas
sub
loope
int
jne
mov
insl
sub
pop
leave
mov
lahf
sbb
jl
push
adc
push
mov
adc
xchg
sub
cmpsb
mov
lods
inc
mov
lcall
lea
cmp
push
and
lea
adcl
shl
inc
mov
in
xchg
cltd
lcall
mov
adc
imul
cmp
ja
push
das
or
cli
jbe
dec
dec
inc
sub
stos
sbb
xchg
xor
inc
xchg
lret
mov
push
notl
dec
ret
sbb
push
pop
pushf
std
iret
xor
mov
inc
out
jne
mov
aam
inc
arpl
into
jae
mov
adc
repz
sub
aaa
dec
xor
icebp
roll
lods
push
jno
cld
pop
popf
mov
lret
out
sub
or
or
jb
mov
push
push
add
rolb
dec
jae
outsl
sub
xor
inc
jnp
lret
pusha
cld
test
lahf
addb
push
in
divps
jns
jns
sbb
xchg
cmc
cmp
ja
dec
test
mov
jmp
inc
stos
inc
push
or
insb
mov
ret
adc
xor
fnsave
daa
xor
pop
inc
rcll
cmp
xchg
or
ja
cltd
pop
fwait
xchg
scas
int
insl
ljmp
cmp
ja
jl
jg
push
sub
call
mov
or
arpl
xchg
lret
add
and
lea
icebp
into
mov
and
adc
jg
aam
and
scas
xor
xchg
mov
mov
mov
sti
pushf
pop
shrb
ret
and
pusha
imul
gs
sti
push
cli
mov
mov
in
das
xchg
mov
mov
sub
in
sub
cmpsl
inc
mov
mov
lret
iret
xlat
int
dec
inc
jns
lock
xlat
sar
test
fistps
push
aam
std
dec
jo
xchg
mov
test
mov
cld
insl
and
test
add
xchg
jns
int
cli
jnp
inc
lods
test
jb
in
aaa
aad
inc
sub
pmulhuw
push
sub
mov
xor
pop
jne
xor
adc
mov
int3
mov
jae
dec
iret
lahf
xchg
ljmp
ret
rclb
pop
mov
data16
decb
mov
push
push
ljmp
cmpsb
or
mov
scas
roll
pop
pop
sub
sub
arpl
and
orl
xchg
arpl
and
sar
sarl
mov
sbb
mov
fistpl
or
inc
outsl
dec
int3
mov
hlt
jecxz
outsb
push
pop
ret
icebp
das
les
addr16
sub
cmpsb
lods
xchg
lcall
dec
mov
cmp
movsl
insl
mov
aam
add
imul
jns
movsl
fs
enter
arpl
or
mov
mov
std
inc
inc
cs
xchg
pop
lods
loope
sub
or
cmp
sub
push
dec
pusha
fistl
push
fsubrl
fnstcw
or
data16
xchg
fucomip
push
rorl
inc
lods
cmpsb
hlt
jne
jle
xor
xchg
add
lea
notl
movsl
ja
push
and
or
mov
cmc
lods
adc
or
mov
adc
or
repnz
cwtl
je
js
jo
addb
out
add
sbb
jnp
and
fstl
add
xor
mov
aam
xchg
push
icebp
bts
inc
enter
shll
jb
movsb
push
jmp
jno
mov
sub
mov
fistpll
pusha
lea
inc
push
adc
cmpsl
add
nop
aaa
mov
xchg
mov
jne
pusha
and
sub
fdivrs
or
cmp
fmuls
push
add
and
pop
add
test
lock
aad
insb
jbe
mov
push
loope
jmp
sahf
mul
hlt
cld
cmpsl
and
clc
mov
aas
jno
mov
in
inc
aad
cmp
outsb
xor
mull
mov
mov
xchg
xor
arpl
mul
fidivrl
sbb
lret
jl
jmp
call
push
iret
jge
and
push
cmp
sub
push
repnz
and
fidivl
add
into
xor
cli
lock
pop
pop
stc
inc
aad
stc
pop
dec
xlat
loopne
pop
mov
rorb
fchs
adc
or
pop
pop
xor
xchg
in
pop
ds
loope
xor
adc
pop
lods
mov
bound
fistpl
psubb
xor
ds
sbb
xchg
addl
inc
sbb
and
jl
pushf
sarb
inc
cmp
pop
inc
mov
rorl
xchg
scas
cld
test
pop
ds
xchg
cmpsl
xor
xchg
mov
movsl
xchg
inc
push
fidivl
xchg
jmp
jne
cltd
add
stos
and
pop
lds
sti
and
rcll
mov
pop
imul
out
add
or
dec
jnp
mov
clc
add
and
xchg
cltd
in
or
mov
movsb
out
xchg
xlat
dec
in
add
or
scas
or
stos
jl
aam
push
mov
dec
mov
pop
jns
int
sbb
int
mov
out
fldt
mov
aaa
push
fcomi
jno
push
outsl
push
or
pop
mov
ret
sbb
adc
sub
in
pop
cmp
mov
int
jae
test
push
adc
call
fsubrp
jb
pop
movsb
ljmp
gs
push
jp
clc
iret
loop
insl
loop
jne
cmc
test
mov
sbb
sub
pop
hlt
dec
lock
sbb
fcomps
outsb
cmp
mov
or
jge
sti
and
js
sub
pop
xlat
cmp
adc
xchg
loopne
mov
bt
pop
dec
inc
stos
mov
ja
cld
mov
mov
ret
xorl
sub
out
jmp
xchg
aas
pop
push
aad
popf
sub
test
or
pop
bswap
adc
xchg
push
lret
dec
fcoms
mov
dec
stos
jl
pushf
cmc
cmp
inc
lret
lods
rcrl
cltd
idivl
or
cld
negl
cmp
call
aad
dec
stc
in
fcoms
adc
outsl
popf
jne
mulps
mov
repz
mov
inc
mov
mov
xchg
pusha
sbb
pop
xor
out
jnp
adc
jne
mov
sub
push
pushf
jl
divb
pop
fbld
negb
cmp
mov
sbb
in
sbb
testb
std
sbb
scas
in
xchg
xor
pop
lock
pusha
or
in
in
leave
and
dec
jle
dec
cmc
mov
in
and
cltd
leave
aad
mov
mov
pop
mov
and
addr16
leave
iret
ror
sbb
ds
cwtl
dec
sbb
inc
fidivrs
nop
push
movsl
adc
jg
aas
and
gs
lcall
push
ret
xor
xchg
mov
jmp
hlt
lahf
dec
fwait
loopne
inc
dec
push
insl
loopne
mov
xor
cmp
fisttps
mov
mov
shrl
out
sub
js
cmpsl
test
mov
adc
addr16
repnz
cmc
hlt
pop
out
rcrl
lcall
call
in
nop
cs
cmp
pop
dec
into
mov
sub
lahf
or
push
mov
cwtl
jmp
mov
mov
xchg
faddl
movsl
or
jo
and
cwtl
adc
push
sub
imul
and
jmp
xor
andb
loopne
dec
fsubp
out
add
test
xchg
rorl
ljmp
jns
add
rclb
pop
scas
pop
adcb
popf
ret
loopne
ljmp
icebp
loop
cltd
jne
or
out
push
sub
out
jnp
xchg
mov
jnp
mov
out
ficomps
inc
xchg
pop
mov
rcrb
popf
add
les
insb
or
inc
mov
cltd
inc
or
add
cmp
mov
pop
jmp
insb
dec
xchg
inc
cmp
das
fstpt
in
fstps
push
int
dec
sub
pop
adc
jle
push
daa
pop
leave
jl
dec
sub
xchg
fdivrp
bound
xlat
adc
inc
stc
inc
outsb
jg
mov
adcb
cmc
cmpsb
jmp
iretw
adc
popa
add
data16
out
in
ljmp
mov
cmpsl
cwtl
ljmp
ret
mov
lock
or
je
xor
jb
call
xchg
push
and
xorb
js
mov
into
sarl
sub
jecxz
in
mov
xorb
xchg
adc
pshufw
push
jmp
sub
cmp
rolb
dec
add
xchg
and
bound
add
jmp
mov
inc
cmpsb
cli
popf
inc
sub
jns
sub
pusha
pop
movsl
xchg
mov
sbbb
cmp
fstl
rcll
cmpsl
addr16
lgs
sbb
mov
mov
outsl
call
jo
out
es
imul
inc
scas
lock
xchg
cmp
test
push
adc
sub
push
dec
cmpsb
addr16
adc
fcompl
push
and
xor
fidivl
push
scas
dec
add
insb
out
push
mov
les
xchg
les
and
cmpsl
insb
add
mov
dec
pop
stos
xchg
cmp
sarb
cmp
sahf
mov
dec
cmp
stos
mov
add
addr16
dec
sahf
lds
push
in
fimuls
jge
je
icebp
or
add
xchg
dec
mov
cmc
out
movsl
pop
cmpb
lret
rorl
mov
pop
int
dec
shll
cmp
out
or
test
out
xchg
push
or
out
pop
daa
push
inc
sub
jp
sub
pop
pop
icebp
push
cli
xor
jle
insb
lret
loope
ja
mov
xor
cmpsl
xor
stos
mov
lock
xor
in
into
aas
xchg
xchg
shrl
lret
xchg
xor
jno
push
mov
aaa
add
push
call
xchg
push
xor
and
aad
in
cwtl
mov
shlb
cwtl
pop
jno
jo
sub
lods
mov
sub
mov
mov
xchg
je
enter
add
xchg
cmp
push
lds
cmc
xchg
mov
fldcw
push
xor
dec
pushf
roll
sbb
jmp
test
xor
daa
call
call
fwait
add
mull
outsl
stc
push
repnz
cli
push
xchg
jb
es
jae
push
adc
inc
push
or
test
push
cmpsb
inc
mov
iret
cmp
mov
adc
orb
and
mov
xor
jo
inc
lahf
cmp
ljmp
xchg
pop
fcom
lret
test
sti
pop
ss
and
push
addr16
inc
or
xor
ret
pop
lahf
push
dec
int3
mov
mov
rclb
xchg
xor
xlat
add
jae
mov
xor
adc
loopne
out
xorb
mov
push
jae
sarb
or
push
dec
call
daa
leave
ret
sbb
push
lahf
dec
insl
inc
xor
dec
or
aad
xchg
jecxz
mov
das
lcall
popa
and
push
sbb
sub
jmp
jmp
cmp
lret
cmpsl
repz
stos
pusha
movsl
cmc
mov
mov
pop
xor
xchg
data16
mov
sbb
xchg
cwtl
aas
in
movsb
and
push
or
cmpsl
and
adcl
mov
vmovaps
and
lcall
popa
sti
mov
mov
pop
js
ret
push
mov
int
aaa
or
fwait
and
pop
jl
test
shll
faddp
fcompl
dec
cmp
push
repnz
icebp
adc
pop
clc
xchg
mov
rcll
pop
loop
xchg
aam
pop
leave
inc
sti
jne
push
add
push
fsubp
ds
dec
movsb
pop
dec
sub
sbb
mov
leave
push
test
jl
cmp
aam
pop
fwait
in
inc
sub
push
add
fidivl
pushf
jle
bound
cltd
sbb
adcl
popa
and
rcl
lock
dec
mov
jg
les
gs
sti
push
sbb
push
cld
hlt
fs
lret
in
inc
ljmp
add
add
pop
ret
out
shr
jecxz
in
ss
hlt
shr
push
jl
mov
xchg
push
idiv
test
js
mov
cwtl
push
inc
xchg
fildll
ss
fwait
ret
mov
pop
stos
out
push
inc
jle
xchg
sbbl
push
jecxz
dec
jl
and
push
pop
aaa
cltd
add
iret
test
stos
or
lcallw
js
mov
rolb
pop
mov
jg
xchg
xorb
outsb
gs
fisttpl
adc
jnp
fmul
sbb
jnp
icebp
or
pop
andl
leave
jge
inc
imul
sbb
cmp
sti
or
dec
xchg
cwtl
jne
stc
rol
cs
shll
sub
jecxz
xchg
xor
push
push
setg
incb
cld
adc
add
dec
lcall
adc
xor
lds
shl
xchg
cltd
pop
push
push
insl
pop
lahf
adc
sub
sahf
or
cmp
jno
jbe
roll
das
lock
sbb
data16
daa
pop
pop
fildll
sub
mov
or
cmp
pop
ds
pop
data16
xchg
je
sub
fcmovu
leave
stos
insl
mov
icebp
sbb
jle
pop
adc
pop
inc
fisubl
sbb
dec
cmpsb
dec
incl
call
sarl
dec
out
int3
sub
orb
bound
pop
scas
cwtl
arpl
ss
lcall
xlat
sub
push
test
inc
dec
adc
repz
subl
out
pop
inc
dec
sbb
xor
add
mov
mov
mov
sbb
iret
repnz
xor
jecxz
mov
jp
xchg
xor
mov
xchg
sbb
push
fcoml
mov
loope
rcl
iret
jns
push
ds
lock
or
test
scas
mov
jle
movsl
or
inc
or
dec
ds
xor
lock
lcall
add
call
in
add
inc
mov
adcb
mov
rcl
adc
pop
sbb
mov
into
cmpsb
insl
sahf
dec
stc
ljmp
int3
adc
cmp
rcll
mov
std
cmp
imull
popf
lret
or
out
push
mov
sbb
or
sub
ja
repnz
ljmp
inc
mov
sbb
cmpl
xchg
roll
mov
out
xor
test
pop
cmp
loopne
mov
loop
adc
popf
iret
fdivs
aam
clc
idivl
outsl
push
hlt
into
arpl
pop
loop
in
xchg
push
subb
out
daa
sub
and
cmp
lahf
and
test
popa
bound
push
into
inc
inc
jmp
push
clc
std
jmp
push
inc
mov
mov
dec
and
ljmp
das
cmp
add
add
loopne
fisttpl
out
xor
jp
mov
in
xchg
xchg
add
stc
lods
or
fsubr
mov
sub
pop
ljmp
ret
adc
sbb
mov
fwait
in
adc
dec
in
sub
mov
mov
sbb
cmp
and
sbb
mov
mov
cmp
and
loop
fcoms
lahf
sub
call
xchg
jl
and
inc
lahf
fnsave
in
cmp
lds
popl
cmpsb
loope
les
mov
pushf
lea
mov
dec
aad
adc
mov
fiaddl
push
jne
and
out
pusha
sbb
push
es
sub
arpl
xlat
and
add
xchg
imul
push
and
int3
xchg
mov
rcrb
mov
nop
push
popfw
fadds
jge
xchg
dec
jnp
xlat
cld
mov
xchg
jns
pop
and
mov
and
or
xchg
dec
imul
mov
inc
ja
mov
sub
inc
mov
adc
inc
sbb
sbb
jecxz
int3
test
shrb
aad
rolb
push
jecxz
insl
stos
orl
mov
repnz
inc
int
stos
fs
xchg
arpl
or
call
or
inc
popf
daa
sar
sub
ljmp
inc
stc
pop
test
inc
mov
imul
pop
lcall
test
mov
movb
inc
inc
pop
adc
lret
add
shr
push
mov
jb
pusha
cmp
fdivr
hlt
and
sub
push
std
shrb
dec
fsubrs
dec
add
fcmovb
lcall
jnp
loopne
jecxz
jmp
adc
and
cwtl
add
mov
fwait
js
dec
push
mov
mov
add
push
into
pusha
cmpsb
push
sti
lahf
jns
pop
mov
in
test
jl
or
sub
in
sbb
jne
mov
out
jnp
mov
andb
and
iret
imul
xchg
xor
mov
lock
das
sbb
fisubrs
js
popf
ret
test
aas
cmc
adc
mov
icebp
cmc
push
mov
stos
and
jbe
insb
ss
xchg
cld
or
jo
aam
imul
bound
cwtl
enter
inc
fwait
cltd
sub
loopne
fwait
repz
outsb
xor
add
jg
sub
inc
push
cmpsb
sbbl
mov
cmc
fcoms
or
icebp
adc
fidivrl
mov
jle
push
mov
mov
inc
les
mov
ja
adc
jle
jo
push
repz
sahf
pavgw
bound
jo
push
insl
push
gs
scas
xlat
repz
fiadds
adc
scas
cmp
pusha
call
dec
push
and
push
sbb
scas
push
and
push
shrl
pusha
popf
or
or
fwait
inc
add
insl
cmpsl
add
xlat
aam
sbb
in
xor
mov
mov
ja
jne
out
pop
sbbl
add
lock
fwait
stc
sub
adc
fisttpll
imul
xor
test
cld
or
je
lods
mov
push
adc
xor
xchg
cltd
mov
and
fnstcw
sbb
sub
in
movsb
ficoms
mov
pop
xor
cmp
dec
decl
jno
rcrb
mov
shufps
std
nop
cs
pop
jecxz
mov
fs
and
loope
fs
movsl
adc
jae
roll
cmp
divl
push
imul
test
sbb
mov
xchg
js
incl
out
add
lret
mov
push
mov
imull
mov
pop
or
cmp
ss
mov
out
mov
xor
jecxz
js
mov
inc
mov
or
lods
stos
jbe
aas
in
inc
es
mov
mov
inc
sbb
ret
ss
push
adc
test
mov
adc
mov
push
sarb
hlt
clc
lds
or
dec
adc
cmp
sub
sbb
in
int3
pop
inc
jne
rcrl
mov
pusha
mov
imul
popa
cmp
sub
mov
adc
mov
jmp
cmc
xchg
and
std
jno
push
push
sub
dec
lock
mov
test
or
inc
ss
mov
imul
mov
iret
pushw
and
int
xor
xchg
das
xchg
fildll
pop
push
test
rcrl
mov
out
xor
test
gs
fadds
push
in
sub
in
push
or
out
iret
xchg
add
pusha
fs
jbe
in
and
cld
sub
mov
stos
pop
push
loopne
lods
mov
ds
loop
mov
xlat
jg
mov
mov
adc
or
je
popf
shll
jle
shrl
scas
inc
cmp
cmp
ret
add
out
cli
mov
add
in
cmp
shlb
push
sbb
sub
daa
lods
lcall
xor
aam
xchg
aad
je
das
push
xor
push
flds
add
adc
xchg
jb
lods
cmpsb
test
cmp
movb
mov
ljmp
jecxz
lods
cmp
jg
sbb
add
ja
xor
loopne
aam
xlat
fidivs
mov
push
shlb
cwtl
mov
xchg
loopne
or
mov
cmp
ja
cwtl
les
das
fs
dec
lret
jle
adc
adc
test
cmc
adc
subb
pop
aas
cs
jnp
adc
add
es
cli
icebp
pushf
fs
test
push
stc
loope
mov
add
cs
insb
shl
insb
jle
loopne
cmpsl
dec
int3
bound
out
js
cmpsb
xchg
mov
xchg
mov
mov
pushf
andb
hlt
cmc
xchg
and
insl
mov
cltd
movsl
sbb
clc
in
xchg
inc
mov
adc
pop
pop
es
push
adc
cmpsb
sbb
arpl
leave
mov
adc
mov
and
pop
data16
sbb
sar
push
push
dec
sbb
cmp
jle
or
or
fisubrl
pop
dec
sbb
lds
add
lret
push
jecxz
xchg
cmpsb
pushf
arpl
and
mov
stc
mov
push
icebp
mov
sti
fsubr
push
xor
fdivrs
xchg
fildll
les
fsubp
sbb
cmp
es
mov
xchg
clc
xor
addr16
int3
pop
sbb
cmc
xchg
push
mov
dec
jge
push
cmp
inc
mov
mov
push
popf
mov
xor
push
add
ror
sbb
cmpsb
nop
mov
mov
sbb
lret
xor
aaa
imul
push
sbb
mov
jp
stos
or
test
add
cmp
fmuls
adc
loope
xlat
cmp
inc
out
out
sbb
stc
fistps
fwait
bound
je
repz
push
inc
dec
movups
daa
or
lcall
adc
inc
sbbl
mov
fistpll
push
das
out
cmp
mov
icebp
mov
repz
or
cwtl
pop
iret
cmpsl
adc
test
jmp
xor
fnstsw
push
enter
add
dec
push
xchg
dec
aam
in
jl
dec
in
push
cmp
jnp
xor
jp
xor
dec
dec
call
pop
push
push
mov
push
dec
lcall
sub
movsl
adc
les
shl
mov
xor
pop
pop
sbb
mov
push
push
inc
xor
hlt
mov
js
dec
or
xchg
mov
jl
clc
xchg
cmpsl
push
test
popa
and
jae
ja
mov
dec
enter
call
and
push
repz
jmp
pushf
psubusw
lds
sbb
xor
popa
or
add
sbb
or
cli
push
inc
xchg
sbb
popf
jne
orl
push
jnp
and
jge
or
jecxz
test
ret
nop
jne
movsl
aas
mov
sub
sbb
fsubl
and
stos
xchg
test
dec
movsl
sub
jne
imul
cmp
jmp
fwait
jne
not
xchg
aad
loope
ret
rorl
test
nop
or
add
mov
loop
lods
aad
sbb
lret
scas
addr16
test
ss
stos
ss
shll
inc
mov
jl
lret
xchg
cmp
push
stos
sub
mov
enter
out
sbb
add
or
outsl
add
jp
movsb
daa
pushf
xor
mov
xchg
leave
xchg
mov
and
jo
cli
pusha
push
and
aas
xor
iret
je
inc
lock
in
and
jbe
jae
jne
in
cltd
xchg
sti
stos
pop
es
xor
aam
stos
les
jp
dec
sbb
iret
shlb
popf
mov
dec
ss
xor
fscale
mov
inc
dec
insl
sbb
and
in
or
jp
int3
inc
loope
lahf
fwait
roll
bndstx
aad
mov
pop
outsl
shll
jb
out
popf
fdivp
faddl
fbstp
cmp
clc
mov
out
out
add
mov
mov
mov
icebp
sahf
clc
pop
leave
mov
pop
mov
pop
or
cmp
cwtl
adc
test
mov
inc
mov
adc
out
push
test
dec
dec
fisubs
mulb
outsl
test
mov
cli
fiaddl
int
mov
or
or
mov
sti
or
mov
xchg
lcall
outsl
addr16
jp
mov
std
cmp
int3
nop
cwtl
inc
xchg
clc
pusha
mov
mov
dec
fyl2xp1
add
test
fcomps
push
test
gs
add
dec
cmp
mov
jle
mov
mov
sub
adc
jge
daa
dec
out
insb
xor
mov
sub
push
lea
cmc
addl
ljmp
ss
iret
dec
and
push
icebp
in
int
outsl
pop
dec
mov
scas
outsl
dec
mov
pop
cld
mov
call
mov
gs
or
jbe
sbb
in
dec
xor
pop
das
movsb
ljmp
into
jns
inc
gs
movsl
inc
fs
cmp
sub
xor
jp
push
dec
jl
stc
pop
or
sub
or
cltd
or
push
fidivrl
push
in
adc
sarb
sbb
sti
xor
and
sbbl
xchg
xchg
pop
inc
sbb
jnp
jno
adc
sbb
jg
push
cld
fiadds
mov
sbb
jo
gs
pop
gs
repz
push
sub
jbe,pt
cmp
shrb
lds
cmp
mov
int
aas
aaa
sbb
addr16
imul
imul
sbbb
jb
insb
xor
aam
fistps
sub
int3
outsb
in
inc
in
jge
fsubrp
dec
imul
sbb
push
and
scas
mov
xor
pop
pusha
test
pop
add
and
das
imul
dec
insb
pop
pop
lods
loopne
xor
sbb
xchg
out
jecxz
mov
insl
jle
xorb
js
loopne
ficomps
test
or
sbb
push
ret
pop
mov
inc
das
or
mov
mov
and
stos
sbb
pop
adc
idivb
mov
adc
adc
fdivrs
xchg
insb
lret
adc
add
repz
pusha
lahf
fiadds
sub
xor
cmpsl
push
jae
adc
inc
out
gs
fs
cld
out
pusha
or
cmc
or
loop
fs
pop
or
cmpsl
cmp
fmull
lods
inc
pop
inc
pop
test
arpl
dec
pop
rorb
add
cmpsb
mov
repz
nop
push
and
push
mov
fdivr
out
jnp
lods
lahf
jo
mov
scas
inc
sahf
adc
cmpsb
lcall
add
dec
mov
add
xor
daa
xchg
adc
leave
mov
mov
adc
xor
mov
adc
jl
in
lock
push
pop
enter
mov
or
popf
add
lock
fsubl
inc
bnd
aam
inc
call
ffree
mov
test
test
arpl
dec
jge
and
or
xorb
and
sbb
repnz
xlat
mov
pop
dec
xchg
ret
dec
mov
mov
and
aam
flds
jmp
push
in
adc
mov
rcll
push
add
sbb
subl
ret
xorl
push
mov
std
insl
sysenter
sbb
gs
mov
cmp
enter
pop
xor
sub
mov
jp
movsb
pop
imul
loope
lret
xchg
jo
pop
enter
sub
mov
outsb
mov
inc
xchg
rcr
fimuls
push
jge
jb
rorl
jecxz
movsb
adc
imul
pop
mov
test
das
adc
mov
sub
cld
hlt
or
scas
std
iret
js
add
scas
or
insb
or
mov
cmp
dec
mov
lahf
mov
sub
dec
push
xor
push
in
stc
cmpsb
jmp
mov
xchg
or
fisubs
popa
fsts
xor
pop
jae
bound
in
and
push
pop
add
jge
das
or
cmp
filds
mov
pop
add
fistps
js
rcr
push
mov
insb
movsb
add
dec
push
lret
dec
sbb
pop
mov
push
fdivl
pusha
imul
jns
fstl
inc
fisubs
mov
and
stc
imul
xlat
mov
data16
ret
outsl
seta
jecxz
adc
ret
inc
dec
stos
jno
cmc
jge
ret
mov
mov
hlt
mov
sbb
bound
sar
pop
in
or
js
lret
push
push
rcrb
and
test
cmc
or
nop
clc
jae
cmp
sub
xor
push
incb
ficoms
loope
mov
lcall
or
mov
mov
in
andb
ret
in
mov
mov
sub
popf
jbe
dec
ficoms
pushl
mov
cmp
popa
pusha
inc
js
sbb
dec
fldenv
cltd
jns
insb
pop
fstpl
addr16
or
loop
fwait
mov
das
daa
sbb
adc
mov
and
mov
pop
push
pop
push
mov
in
cs
push
fwait
sbb
xor
lahf
xchg
jne
mov
push
movsl
aad
loope
pop
out
and
xchg
je
mov
insl
jg
das
setp
roll
xchg
mov
stos
sbb
outsl
xchg
mov
js
mov
lock
cltd
orl
scas
xchg
xlat
sub
xor
fwait
rcll
mov
icebp
scas
and
push
mov
pop
outsb
jge
or
mov
pop
out
jmp
out
sarb
inc
mov
jp
or
arpl
sub
or
icebp
outsl
pusha
subb
gs
dec
repnz
fcos
sarl
inc
jnp
dec
loopne
mov
arpl
insb
mov
cmpsl
pop
repnz
inc
xchg
aas
imul
enter
imul
push
push
sub
xor
jnp
repz
xchg
adc
cmp
movsb
add
xchg
or
frstor
leave
outsb
jae
mov
push
jp
dec
nop
and
data16
mov
cltd
dec
lods
jb
xor
sahf
mov
incb
cmpl
mov
out
sub
aad
sub
aam
out
movsb
cmc
repz
movsl
cmpsb
test
and
mov
mov
fcoml
jl
jo
aam
jg
inc
pop
xchg
sahf
lahf
cmp
pusha
mov
loope
test
in
and
push
mov
jb
les
xchg
cltd
mov
adcb
lods
sti
mov
mov
jb
sbb
dec
pop
pop
mov
fnstenv
out
xlat
mov
out
pushw
jl
dec
lds
add
cltd
dec
mov
into
fsubrs
mov
aaa
outsl
mov
aad
arpl
fdivrl
lahf
jae
imul
icebp
orl
inc
mov
pusha
fistl
sbb
arpl
add
out
mov
test
push
cmpsb
and
cmp
lock
and
mov
mov
sub
lahf
dec
hlt
adc
xor
push
in
push
jne
adc
mov
negb
js
test
jl
daa
loop
push
and
pop
scas
jbe
loopne
mov
jle
loop
mov
add
xchg
mov
xchg
sub
xchg
gs
push
dec
js
push
insb
push
pop
push
inc
inc
xor
in
push
roll
mov
adc
movsb
push
xchg
pop
aaa
jecxz
sub
test
inc
or
push
and
fsubrl
mov
mov
rcrb
cli
clc
inc
bound
int3
out
mov
fsub
mov
pop
adc
les
subb
popf
repnz
outsl
mov
push
mov
add
lea
scas
add
outsb
loope
cmpsl
pushf
xchg
cmp
lods
in
cmp
xor
int
lret
sahf
push
aam
or
loope
dec
adc
pop
and
jnp
jg
and
out
lods
sbb
outsb
aam
ds
jg
adcl
sub
pop
push
inc
btcl
ljmp
pop
aad
fcomps
sbb
rcrw
mov
out
jmp
dec
adc
outsl
mov
mov
jns
xor
jne
fwait
cmp
fistps
xor
mov
movsl
call
inc
sti
inc
mov
aad
lcall
hlt
filds
test
sbb
iret
add
xchg
or
or
xor
xchg
mov
cmp
sub
mov
push
loope
stc
cmp
pop
stos
cmp
stos
data16
xor
int3
scas
icebp
add
movsl
cmp
push
add
ror
nop
jns
test
pusha
loopne
aad
jg
xchg
pop
or
aam
sub
dec
or
inc
jge
add
add
cmc
inc
cmc
xlat
jns
outsb
adc
in
add
arpl
call
test
dec
push
in
jo
data16
inc
lds
xchg
imul
in
fldcw
cmpsl
adc
push
scas
pop
daa
popf
enter
push
js
mov
in
lods
outsb
scas
mov
cs
jmp
arpl
insl
lret
jne
outsb
xor
insb
jne
aaa
lea
mov
pop
sbbb
mov
dec
lcall
jne
pop
lcall
adc
push
fistps
push
sbb
sub
call
subb
icebp
fcoms
xchg
mov
pop
in
cmp
bound
test
test
mov
sub
rcrl
in
sbb
sbbb
idivl
cmpsl
push
pop
push
in
pop
es
add
or
or
mov
or
jmp
in
shrd
add
xchg
lods
xor
fldt
jmp
inc
jnp
or
addl
in
inc
inc
inc
jp
jbe
sbb
cs
out
test
pop
test
lods
jp
ficoms
imul
push
pushf
mov
test
shrb
shrb
pop
push
enter
imul
addl
das
lods
data16
movsl
cli
push
stos
jns
cmc
mov
inc
mov
adc
mov
enter
jp
pop
repnz
movsl
mov
ja
xor
pop
jnp
sbb
cmp
pusha
lds
in
loop
jbe
insl
fdivs
das
imul
loopne
divb
mov
cmp
js
das
sub
inc
jl
jle
aas
flds
push
add
aas
std
sub
mov
shlb
int
cmp
push
push
leave
int3
push
xchg
mov
jne
sbb
loopne
loope
stos
or
mov
out
ret
ss
xchg
aad
dec
jp
in
rol
cmpsb
lods
cmp
arpl
orl
ss
mov
mov
hlt
loop
js
cmpsl
push
jge
push
push
push
shll
ljmp
out
push
pop
mov
xor
cltd
daa
pop
int3
cmpsl
pop
into
sbb
dec
push
inc
in
in
imul
les
in
leave
and
dec
xchg
aam
mov
xor
sub
shr
call
lret
xchg
fidivrs
jb
popa
mov
pop
jo
inc
lock
jbe
jb
or
pop
push
jae
push
add
pop
xor
mov
push
add
call
in
xchg
push
sbb
imul
push
or
dec
fcomip
jle
jmp
jecxz
cmp
fcmovnu
int
gs
lret
dec
xchg
dec
dec
nop
push
stc
lds
push
push
rcrb
adc
dec
mov
out
out
ret
mov
fnstsw
negl
and
sbb
loope
mov
fisubrl
fimuls
sub
jecxz
in
dec
stos
push
int
jge
rol
je
or
inc
jmp
repz
sti
int
aam
js
movsl
adc
mov
dec
jmp
sub
arpl
clc
mov
leave
mov
mov
mov
hlt
fwait
inc
rcl
mov
mov
aam
inc
ret
std
iret
add
pop
sbb
dec
xor
push
pop
hlt
mov
cmp
push
jnp
or
mov
fnstsw
inc
pop
pop
repz
aad
add
movsb
loope
jecxz
xchg
xor
mov
arpl
lret
xor
push
push
push
dec
adc
sub
gs
pop
sti
dec
js
cmp
les
mov
add
xchg
enter
xchg
fcmovb
imulb
inc
mov
out
mov
push
outsl
and
lods
inc
mov
adc
dec
clc
and
aad
mov
dec
popa
jecxz
lret
or
xchg
test
test
fwait
imul
stos
pop
scas
jae
shll
lods
inc
stos
cwtl
sub
addr16
inc
pop
push
fldt
inc
aas
hlt
mov
call
ds
sbb
stos
fcoms
stos
lds
icebp
jns
fs
into
inc
adc
push
jno
cli
and
out
std
sbb
xchg
imul
mov
mov
add
jmp
mov
inc
jbe
xchg
adc
mov
hlt
mov
repnz
inc
scas
jge
cmp
push
aam
fmull
test
sbb
dec
stos
insl
jae
cmp
mov
cmp
pop
sbb
xchg
pop
iret
outsb
push
movhps
clc
test
mov
inc
jae
in
insl
and
ljmp
sub
repz
dec
fwait
mov
cmp
xchg
or
bound
dec
xchg
jb
incl
xchg
or
cwtl
sub
add
js
ljmp
jp
testb
out
sub
loopne
idivl
fstl
mov
pop
test
icebp
divl
jno
sarl
fidivrl
mov
stos
cmp
cmp
mov
xor
push
mov
ret
jmp
decb
cmp
aam
arpl
pop
xor
adc
stos
stos
cmp
push
jecxz
add
lcall
and
in
dec
jg
cmp
pop
xchg
leave
jl
loopne
pop
lret
pop
into
dec
xor
addr16
nop
inc
xor
and
mov
shll
int
nop
daa
andl
adc
adc
dec
and
aas
xchg
out
lods
jne
sahf
lahf
lret
in
jmp
xor
imul
clc
imul
dec
stos
imul
push
xor
push
ficomps
popf
and
dec
sub
in
in
das
movsl
xchg
jmp
test
inc
mov
orl
lret
addr16
aam
inc
bnd
insb
mov
in
jbe
subl
aad
xor
dec
shrb
push
enter
ljmp
mov
movsl
movsl
movsb
mov
pop
nop
adc
loope
jp
adc
push
loope
jg
fs
mov
inc
push
lea
stc
dec
push
sbb
dec
in
call
pop
xor
cmp
add
add
cli
mov
jnp
pop
xor
add
mov
jge
push
pop
inc
andl
out
mov
daa
sub
jmp
xor
mov
call
push
inc
not
dec
or
icebp
pop
mov
aam
or
sub
mov
pop
sbb
cmp
pop
in
les
insl
fs
add
mov
ljmp
jl
mov
rcll
sub
imul
push
push
fldpi
adc
add
jg,pt
xchg
xor
add
aad
pop
insb
cs
fdivrs
insb
jns
adc
scas
xlat
adc
nop
ret
faddl
lahf
sbb
insb
sub
stos
jp
and
jb
scas
data16
xchg
fistpl
and
cli
fsubs
sub
mov
push
sub
push
pop
jl
fcomps
js
adc
xchg
push
retw
cmp
cld
cmp
pop
iret
push
rorl
imul
ret
xor
add
and
jno
out
cwtl
lods
sti
push
push
cmp
inc
and
mov
jmp
or
add
dec
cmc
xchg
xor
pop
sbb
cmp
dec
add
repnz
test
push
mov
mov
les
je
fisubrl
faddp
ljmp
outsl
mov
icebp
pop
mov
mov
mov
inc
jbe
fildl
inc
cwtl
idivb
inc
mov
ficomps
out
jp
jmp
adc
or
jecxz
fistps
out
mov
in
lds
stc
jae
cmpsb
mov
addr16
mov
test
xlat
shlb
sub
mov
imul
gs
lret
pop
xor
loop
cmp
jnp
push
mov
dec
insl
cli
jbe
dec
push
sbb
mov
ljmp
aam
inc
push
inc
add
in
daa
sbbl
sti
add
mov
xchg
insl
dec
push
fsubs
aam
add
adc
pop
ficoml
stos
dec
jnp
leave
in
ljmp
pop
push
rolb
in
fisubrs
pop
sarb
push
hlt
xorb
std
lcall
adc
arpl
adc
in
xchg
inc
pop
jo
loope
push
and
aad
loopne
xor
mov
scas
jae
aad
cld
dec
mov
push
add
inc
outsl
scas
out
xchg
dec
jb
sahf
push
mov
dec
cmp
addr16
cmp
negl
out
jecxz
inc
fistpll
or
imul
aaa
out
lods
data16
push
push
movsb
or
push
push
cld
pop
cmpsb
adc
inc
js
push
mov
push
insl
push
pavgw
push
test
hlt
sahf
dec
cmp
in
cld
mov
cmp
out
xchg
sbb
in
and
lods
fsts
leave
rorb
push
js
sti
mov
or
shrl
inc
shl
aam
mov
sub
aad
dec
cmp
sbb
mov
adc
repz
sub
lock
loope
orb
sbb
lock
mov
mov
mov
xchg
sub
push
cwtl
mov
int3
inc
sub
dec
jl
sti
cmp
or
push
pop
lods
pop
sub
outsl
mov
subl
arpl
jle
xchg
enter
cmp
xchg
sub
jbe
in
xchg
push
hlt
adc
pop
xor
btl
sub
pop
stc
shll
insl
nop
jno
dec
add
inc
lock
sub
mov
sbb
es
sub
cmp
inc
inc
pushf
sub
lea
cld
mov
cmp
aam
mov
mov
and
mov
jecxz
fcmovne
or
ret
cmp
rorl
mov
xor
sbb
mov
pop
lea
scas
fidivrl
lcall
mov
inc
and
add
popa
aam
pop
addr16
lcall
cmc
call
fsubrp
mov
sahf
cs
mov
cmp
orl
ljmp
loope
sbb
xchg
stc
xor
jl
enter
andl
das
pop
inc
aas
dec
ret
xchg
dec
adc
les
cmp
daa
push
sbb
xchg
jmp
and
in
fnstcw
rcrl
testb
xlat
jecxz
push
jo
shrl
orb
push
pushf
icebp
inc
jl
mov
add
and
shll
cltd
lret
and
repnz
in
outsl
lret
fstpt
fsubrs
les
aas
and
enter
daa
push
aaa
add
xchg
out
mov
sbb
aad
daa
in
call
out
cmpb
ror
lahf
adc
pusha
shll
in
leave
push
inc
xor
aam
std
lock
adc
mov
mov
sub
mov
dec
or
adc
pusha
fmul
cltd
cli
xchg
in
repz
frstor
mov
stc
dec
mulb
fwait
inc
jmp
lods
shl
movsl
aas
and
push
and
clc
popf
test
push
enter
pop
push
inc
dec
fcoms
and
add
and
add
xlat
jne
clc
mov
adc
stos
in
sub
mov
cli
or
lea
pusha
adc
insb
fwait
lods
scas
dec
les
in
movsl
cmp
stos
cmpsl
ret
jle
adc
pusha
or
lock
xchg
lcall
dec
rcll
stos
xor
sub
or
sub
add
and
mov
ret
sub
fcmovbe
jmp
cld
cwtl
mov
inc
fstpl
subb
xchg
sub
cltd
jbe
stos
dec
lock
scas
clc
dec
push
dec
ret
data16
jb
and
push
xchg
push
add
leave
inc
sbb
js
mov
sti
mov
pop
push
jg
loope
xor
loop
push
in
push
xchg
movsl
mov
push
hlt
ljmp
xor
xor
jecxz
inc
mov
mov
cmpsl
xor
sbb
faddl
jne
ret
xor
ss
xchg
stos
test
sbb
scas
mov
stos
add
xchg
daa
loop
inc
sub
leave
lods
sub
out
jne
inc
pop
jl
in
fstpt
push
movsb
adc
mov
or
cltd
subb
mov
lds
jne
bound
sbb
jmp
js
popa
and
pushf
ja
xlat
xor
aam
add
or
push
rorl
cltd
jle
adc
sub
push
in
sbb
push
cmpsl
clc
fxam
dec
popf
mov
mov
addr16
scas
mov
cmp
js
pop
pop
jbe
pop
in
push
push
leave
idivl
and
bound
pop
mov
outsl
loope
mov
pop
and
and
shrl
or
add
adc
sahf
adc
fldenv
xor
add
arpl
adc
decl
aas
mov
divb
and
sub
sbb
ja
cmp
jle
orl
mov
xchg
mov
cmc
sahf
dec
sbb
cmp
sti
dec
fsubrs
xchg
lods
cmp
call
cmp
cmp
ret
xchg
adc
int
fmull
mov
add
cs
lods
sti
movsl
popa
mov
dec
test
test
xor
cmp
add
lret
cmp
es
nop
add
repz
mov
jmp
mov
pop
sub
sub
aam
stos
inc
jo
cmp
jp
cmp
pop
lds
pop
mov
push
xchg
sub
add
int3
test
jb
cmp
hlt
cmp
sbb
adc
mov
adc
and
test
bnd
sub
movsl
xchg
xor
fchs
out
pushf
inc
pop
adc
iret
bound
dec
call
xor
inc
sbb
fidivl
out
mov
or
mov
mov
pop
jl
add
jl
and
mov
jb
lock
xchg
jle
leave
into
cmp
pusha
jl
fwait
mov
les
mov
in
repnz
aas
sub
xchg
xor
sbb
sahf
and
aas
pop
xchg
cmp
fistl
arpl
adc
iret
cmp
fcomps
sbb
loop
jmp
out
stc
jb
in
push
in
fistl
mov
fadd
out
pop
pushf
iret
xchg
mov
aad
mov
mov
ss
add
lea
stos
jnp
decl
mov
out
jg
dec
outsb
pop
cltd
fisubrl
cmc
and
and
sti
es
sarl
cwtl
xchg
out
ljmp
push
cmp
in
push
sub
xchg
sbb
inc
iret
js
adc
sbb
xor
in
mov
inc
push
pop
sbb
mov
mov
and
pop
mov
lcall
and
jae
fs
mov
fdivr
pop
jno
orl
add
cmp
fisubl
inc
push
into
dec
lock
movsb
mov
sub
xor
xor
and
push
jb
push
cmp
insb
clc
lods
lds
scas
adcb
jnp
cmp
jp
movsb
sub
mov
mov
dec
cwtl
insl
js
mov
sti
pop
int
gs
pop
test
pop
jmp
dec
inc
stos
mov
jge
mov
gs
loopne
imull
les
js
pop
lods
jg
jno
add
mov
jo
notb
data16
push
and
aad
dec
and
mov
adc
xor
ja
clc
dec
outsl
stos
adc
cld
push
std
pushf
arpl
push
inc
jmp
loop
lods
push
and
enterw
jg
mov
inc
xchg
push
adc
int3
and
adcl
mov
imul
sbb
sbb
int
mov
push
fnsave
scas
cltd
xor
cs
addr16
xorb
test
cmp
xor
int3
loope
idivb
mov
lcall
popf
js
push
call
dec
xchg
sub
notb
es
loope
inc
inc
data16
mov
xchg
or
mov
or
shrb
mov
shrb
div
nop
aas
mov
jle
xchg
dec
pusha
cmp
inc
aaa
push
push
xchg
push
fwait
gs
daa
movsl
pusha
cmp
jge
push
lds
bound
and
lahf
xor
enter
adc
faddl
out
ds
in
aaa
inc
jecxz
cld
stos
lcall
gs
inc
loopne
mov
pop
cmp
pop
sahf
test
mov
adc
sbbb
scas
pinsrw
in
icebp
mov
fnstenv
mov
jae
repnz
outsb
mov
cmp
jno
cmp
cmp
dec
pop
or
cmpsb
pop
pusha
scas
mov
fldenv
fidivrl
xchg
push
jns
jg
outsl
mov
cli
mov
sahf
bound
jae
pushf
jno
cwtl
mov
out
xor
sti
lcall
push
cmp
data16
faddl
or
nop
xchg
pop
inc
dec
mov
movl
inc
pop
nop
test
inc
jo
push
adc
adc
fisubrs
repz
mov
sub
das
xchg
push
jb
xor
aas
test
push
sub
sbb
clc
sbb
fs
nop
xchg
adc
in
pop
sub
inc
test
mov
pushf
cs
and
jle
dec
rorb
sub
pop
mov
ja
stc
mov
pop
clc
pop
xlat
add
add
fmul
mov
and
insl
xchg
fs
ss
movb
mov
xchg
push
std
fs
popa
das
in
imul
mov
push
stos
jne
mov
pop
fdivrl
mov
xchg
jbe
push
jle
insl
jno
xchg
adc
negl
into
insl
push
call
lret
or
test
and
mov
data16
dec
ret
ljmp
and
jno
and
inc
adc
cmp
pop
cmp
jne
insl
lcall
inc
mov
clc
push
mov
sbb
ficoms
stos
add
and
adc
and
jle
mov
shrb
fsubrs
mov
in
inc
mov
sahf
repnz
mov
fnstcw
insb
insl
dec
jge
pusha
cmp
insb
sub
pop
xchg
loope
and
xor
or
push
mov
inc
xor
xchg
in
sbb
test
sbb
pop
int3
adcb
dec
movsb
mov
in
arpl
lret
daa
cmp
xchg
fs
jge
aad
push
fiadds
bound
mov
js
lret
or
lret
dec
lahf
mov
push
jle
aaa
jecxz
insb
call
out
push
jle
repnz
ficomps
pop
fadd
or
call
movsl
and
jl
icebp
outsb
shl
cmp
aam
clc
aaa
mov
inc
scas
divb
iret
mov
iret
js
ljmp
push
adc
cmp
cmp
xor
mov
sbb
push
xchg
xor
out
cwtl
jle
cmpb
jmp
cmp
dec
jg
push
xchg
jg
jmp
sbb
lea
sbb
xchg
cwtl
cltd
jg
test
call
mov
mov
js
adc
fnstenv
and
repnz
int3
in
or
jp
mov
lods
nop
test
leave
jge
fildl
cmpsl
xchg
test
pop
rcrb
xchg
inc
sub
cs
clc
rolb
pop
stos
push
or
es
pop
clc
scas
js
adcl
roll
add
mov
sub
loop
cmp
sbb
mov
xor
fs
sbb
jle
clc
sbb
lods
add
repz
repnz
pop
imul
clc
adc
outsl
jecxz
mov
cmp
push
add
imulb
mov
or
xchg
das
adc
lds
test
lret
cmp
adc
mov
or
popf
orw
or
pop
sbbl
cmp
push
dec
shll
mov
insb
mov
stos
repnz
nop
les
test
jp
hlt
sub
mov
jl
push
stos
push
icebp
je
ljmp
test
xchg
dec
fnstenv
sbb
xchg
cmp
loope
cmp
repz
and
inc
test
lea
lcall
cmp
lret
jne
sbb
outsl
inc
xchg
iret
movsl
mov
cld
movsl
test
shll
ljmp
push
and
and
dec
mov
cmp
add
lahf
shll
push
mov
rcr
je
cmp
pop
ret
adc
xor
and
outsb
mov
jns
arpl
out
cmpl
inc
jp
idivl
inc
mov
shrl
cli
aaa
cmpsb
push
pusha
and
je
addr16
xor
arpl
xchg
rcl
mov
jmp
daa
int3
gs
and
and
test
lret
jne
out
xchg
dec
aas
test
loopne
fbld
add
add
mov
shlb
and
out
stos
sarb
cmpsb
in
scas
jo
mov
mov
out
insl
imul
test
movsl
ret
mov
xor
sbb
fnstcw
add
lcall
ret
lret
icebp
ficoms
mov
sub
and
jb
les
ja
push
push
mov
xchg
in
popa
xchg
cltd
mov
test
adc
les
mov
out
inc
push
mov
movsl
js
mov
mov
outsb
ffree
gs
or
sbb
xor
add
popa
in
xchg
sarb
jecxz
xor
lret
or
mov
das
mov
mov
out
int3
mov
int
sti
mov
or
les
mov
xchg
mov
mov
sub
sysret
call
push
into
and
roll
push
aas
imul
aaa
add
sti
test
push
and
mov
mov
in
fcmovnu
rorb
pop
jecxz
std
mulb
icebp
dec
push
mov
sarb
inc
movsl
int3
sarl
aaa
mov
or
jnp
xor
xchg
mov
mov
ret
scas
faddl
out
fists
imul
ret
or
jp
scas
mov
lea
loop
xchg
icebp
cli
cwtl
push
into
test
adc
data16
add
sbbb
hlt
lods
or
pop
mov
mov
pop
test
test
dec
stos
cwtl
pop
mov
call
inc
mov
dec
lods
stos
mov
rcll
adc
dec
in
cmp
ss
pop
aam
dec
jno
aad
shlb
or
adc
cmp
out
enter
fcoms
aaa
rcrl
push
add
mov
add
icebp
outsb
or
mov
or
sub
adc
xor
cmp
ds
out
mov
ret
arpl
into
dec
push
outsl
out
cltd
xchg
xchg
lods
aad
cltd
insb
aam
sub
mov
movsl
cmc
pusha
out
loope
xchg
and
jb
dec
jne
mov
aam
into
cmp
inc
adc
xchg
in
xor
cltd
ljmp
mov
push
lods
bnd
xchg
insl
inc
jg
sbb
cltd
xchg
pop
movsb
js
jmp
push
icebp
adcl
pusha
ljmp
fnstenv
test
xor
inc
leave
sub
in
sub
dec
and
mov
xchg
jl
push
mov
inc
enter
enter
fistpll
xor
sbbl
sub
imulb
call
shr
mov
cmpl
or
sub
dec
out
daa
mov
out
ret
incl
and
pop
ja
mov
lea
repz
push
jo
loopne
mov
js
ds
add
adc
shlb
in
cmp
mov
cmp
mov
outsl
out
cld
jp
xchg
je
and
std
je
ffreep
mov
repz
loope
aas
adc
sbb
mov
mov
add
mov
jl
pop
xchg
sbb
ret
sub
mov
push
scas
in
ja
stc
sbb
dec
pop
mov
or
mov
xor
test
sti
jns
out
xchg
add
hlt
mov
push
cmp
dec
test
scas
xchg
cmp
popa
movsb
lahf
and
int
lods
push
and
mov
cmpsb
jne
repz
inc
xchg
lods
pop
lcall
sti
fwait
mov
jl
and
sbb
shlb
mov
ret
nop
negb
lods
loope
mov
mov
or
int3
fwait
aas
pop
hlt
test
push
adc
les
push
xchg
jne
sti
int3
push
pop
test
sub
sbb
loop
ret
or
stos
pop
or
lahf
fs
bound
inc
lods
xchg
jbe
inc
ss
leave
aaa
push
daa
lods
stc
sbb
and
xor
std
das
sub
aas
cwtl
daa
sbb
loop
pop
in
pop
lods
jp
jo
fmull
sub
jno
inc
mov
sub
xor
inc
shlb
arpl
test
pushf
xchg
sahf
gs
sar
out
loopne
mov
jmp
fmulp
sahf
xlat
adc
aad
iret
roll
rcr
rcll
jnp
rcr
cmpsb
mov
arpl
mov
test
mov
jo
xor
add
cmpsb
xor
clc
in
xchg
xor
adc
cmp
and
mov
popf
aaa
push
or
xorb
es
sub
or
mov
cltd
pop
mov
or
fdivs
mov
nop
sahf
ret
mov
gs
sub
stos
mov
dec
out
lcall
pop
xchg
sysret
fucomp
dec
cmp
jb
adc
in
dec
ror
or
add
popa
stos
push
lea
cltd
cmp
ret
in
loope
lock
jecxz
leave
mov
in
es
or
or
xchg
push
mov
sti
or
sti
and
add
clc
push
in
pusha
mov
push
cmpsb
mov
gs
ret
lahf
test
imul
inc
push
inc
xchg
pop
sti
daa
mov
int
addr16
xchg
mov
mov
push
sarb
inc
leave
cltd
aaa
mov
ret
push
push
cltd
inc
aaa
dec
loopne
mov
lea
test
rol
or
xchg
ficoml
das
jg
adc
adc
fidivrl
mov
pop
xor
mov
xchg
xchg
xor
outsl
jmp
das
jns
sbb
jne
fsubrl
mov
sbb
fcomps
and
test
movsb
js
pop
andb
lahf
es
mov
aaa
mov
scas
pop
xor
inc
int
jno
outsl
xchg
push
push
icebp
push
cmp
dec
jg
out
xorl
xor
into
cwtl
mov
adc
mov
cmp
xor
xchg
addr16
mov
addb
xor
mov
insl
sti
dec
in
mov
sarb
call
cmp
add
sbb
stc
movsl
sbb
mov
leave
dec
imul
inc
adc
cld
fsub
test
pop
loope
nop
shlb
jbe
jg
push
lock
xchg
test
push
or
xor
cmp
jb
sbb
stc
and
jnp,pt
mov
mov
stos
xchg
mov
push
divl
xor
and
push
cmpsl
outsl
out
add
jne
lods
cmc
pushf
lahf
jp
mov
dec
and
add
cmpsb
lods
jo
or
sub
inc
xchg
repz
jae
testl
mov
lods
out
outsb
orl
pop
dec
dec
xchg
jecxz
dec
sbb
mov
cmp
push
rolb
mov
stc
mov
xchg
in
or
pop
mov
mov
mov
outsb
push
mov
das
mov
xchg
enter
add
mov
sti
dec
cmp
scas
cwtl
fwait
ljmp
cwtl
and
loop
cltd
imul
cmp
jae
mov
adc
pop
mov
adc
adc
inc
jl
out
dec
pusha
insl
les
push
sub
xor
xchg
xor
lods
nop
int3
mov
mov
xor
lret
push
fsub
scas
sub
mov
mov
xchg
and
pop
xchg
mov
mov
in
jecxz
jae
pop
mov
push
fldt
pushf
nop
movsl
outsl
add
out
jae
mov
mov
idivb
mov
stc
mov
mov
cmpl
popa
cmpsb
cmp
fmull
sub
int3
and
popa
mov
add
xchg
movsb
jno
scas
xor
jge
out
jbe
or
xor
popa
mov
jo
mov
xor
out
aaa
add
cmp
mov
ret
int3
sahf
push
iret
movsb
sahf
int3
shrl
push
and
scas
push
mov
gs
jp
cmp
or
pop
mov
and
pop
or
aad
mov
sub
jmp
js
test
sbb
mov
push
pop
xchg
addr16
mov
icebp
mov
dec
es
popf
dec
jb
andl
mov
jecxz
xor
flds
sti
fucomi
test
pop
mov
adc
fcmovnb
loop
push
cmp
and
mov
or
les
ret
test
push
fwait
dec
mov
push
shlb
sbb
in
enter
loope
addr16
test
jns
stc
loop
scas
lds
jb
sarb
scas
xchg
push
imul
xchg
lea
adc
in
gs
cmpsl
sbb
push
push
rclb
mov
loop
jne
in
out
cwtl
bound
int3
inc
orb
dec
sbb
jmp
mov
inc
sub
fwait
int
testl
mov
scas
add
cli
and
add
filds
xchg
adc
in
mov
ret
scas
cmp
mov
ret
push
imul
hlt
push
sub
pop
popa
cs
incb
enter
mov
mov
ljmp
xor
cli
xlat
out
imul
jmp
cmc
fld
test
adc
imul
bound
push
fistl
repnz
xchg
int
xchg
cmp
dec
ss
xor
xchg
mov
in
jmp
cmc
aas
cmovo
xchg
mov
scas
mov
negl
jp
fstpl
push
hlt
stc
dec
fcompl
or
xchg
mov
jno
cwtl
hlt
stc
fstl
hlt
cmc
mov
inc
add
fwait
push
adc
inc
mov
fwait
popa
call
into
dec
jge
sub
out
mov
xor
push
push
or
data16
clc
mov
mov
bound
push
stos
and
mull
xchg
fmuls
and
xchg
aas
popa
nop
stos
outsb
idiv
icebp
xchg
shll
arpl
sub
test
or
xor
push
fldl
push
in
es
mov
hlt
mov
and
xlat
inc
push
add
call
arpl
aaa
xor
adc
push
cmp
push
jo
xchg
fwait
mov
cmp
imul
outsb
push
rcr
clc
xchg
ret
add
add
or
add
push
add
cmpsl
mov
push
sbb
lret
repnz
test
add
leave
or
pop
cmp
test
iret
jnp
xchg
test
test
mov
cmp
push
std
adc
xchg
push
push
pop
je
xchg
push
sub
and
dec
pop
cmp
pop
fwait
scas
jle
nop
jns
aam
sbb
cmpsl
sub
inc
in
lock
jae
xchg
int
cmp
mov
sbb
push
jns
xor
xchg
fisubrl
push
loop
fistps
jmp
adc
push
jns
jmp
cmpsl
scas
scas
std
inc
in
in
push
sub
iret
inc
loope
pop
int
push
and
and
fmulp
mov
xchg
mov
pop
mov
stos
call
lahf
imul
imul
inc
in
cmp
dec
jnp
pop
xchg
mov
jae
pop
push
notl
lds
scas
jae
jl
aad
call
push
fildl
popf
test
xchg
dec
add
js
mov
aas
lret
xchg
stc
adc
sbb
int
mov
pop
dec
in
jmp
mov
pop
cmpsl
sub
pushf
xor
inc
test
arpl
popf
inc
cmp
pushf
repz
dec
mov
xchg
xlat
mov
movsb
cmc
and
mov
std
cs
push
jl
xchg
js
test
jge
movsb
push
cmp
out
adc
adc
mov
inc
adc
xor
gs
data16
xchg
shr
ds
gs
mov
sub
adc
sti
fwait
sarb
push
xchg
push
push
mov
imulb
mov
loopne
or
sbb
or
in
ljmp
inc
lea
jns
lret
es
mov
mov
xchg
popf
xchg
pop
xchg
out
das
sbb
inc
pushf
dec
mov
mov
sub
arpl
and
scas
pop
inc
mov
sub
gs
push
jle
and
out
popa
pop
ret
shlb
lahf
arpl
shlb
lock
push
xor
add
orb
aad
dec
ret
fidivs
out
repz
cltd
fisubs
push
sub
push
cltd
arpl
movsb
mov
fcoms
ja
xchg
les
sub
mov
push
neg
adc
mov
in
js
repz
cmp
or
and
loope
xchg
dec
scas
test
sbb
and
in
sbb
fidivrs
mov
movsl
jg
fwait
ds
sbb
notb
jb
out
push
pop
xor
cli
xor
pop
jb
cltd
insb
stos
adc
in
add
les
sahf
mov
ja
aas
insl
xchg
orl
mov
lahf
iret
jae
mov
cmc
adc
cmp
roll
aaa
inc
jnp
aad
bound
movsl
xchg
ja
jl
setb
jge
dec
mov
mov
inc
cli
xchg
add
cmp
add
jo
test
fidivrs
xor
push
scas
push
mov
cmpsl
xchg
ret
jle
dec
jmp
ret
mov
sbb
cmp
stos
inc
adc
sub
add
sbb
das
cmp
dec
cmp
push
loopne
mov
adcl
fisubrl
push
mov
add
adc
repnz
xchg
js
mulb
xorl
clc
inc
aad
adcl
test
xor
mov
popa
loop
sbb
rcll
popa
xchg
fstpl
aas
addb
sbb
nop
mov
call
stos
repz
cmp
in
dec
or
push
out
lods
pop
out
addr16
ja
xor
adc
or
repz
pop
cmp
js
xchg
dec
dec
ja
les
push
add
ret
ret
inc
sub
aaa
mov
repz
mov
in
scas
in
test
inc
mov
test
cmpsl
xor
arpl
xchg
dec
push
popf
add
and
sahf
xchg
push
bound
leave
fbstp
xor
aaa
sub
mov
mov
popa
shl
mov
jae
xchg
mov
aas
add
aas
cmp
fimuls
loope
scas
sahf
jo
cs
das
ret
out
and
jns
addb
pop
enter
insb
test
inc
dec
add
dec
test
jmp
in
test
and
xchg
out
mov
mov
loopne
ljmp
fstps
and
incl
lea
hlt
jae
stos
push
mov
xchg
loope
mov
jecxz
mov
push
ja
pop
jne
shll
lea
inc
mov
jge
outsl
ret
push
cmp
inc
adc
sub
push
dec
push
hlt
out
bound
lds
int
js
rcll
pop
jg
mov
cld
outsb
pop
sub
mov
lret
ljmp
scas
sbb
mov
mov
out
rolb
lock
mov
lods
add
lcall
pop
push
mov
add
cmc
cltd
mov
jg
sarb
adc
nop
in
mov
pop
cmp
insl
enter
sbb
outsb
pop
and
jbe
lods
ret
mov
sbb
sub
shll
mov
sbb
bound
jecxz
sarl
sbb
lea
lret
jge
std
add
lea
out
inc
cmp
sub
push
mov
data16
adc
xchg
cltd
rcrb
xor
dec
cmp
fwait
xchg
movsl
inc
scas
jbe
test
jmp
cmp
movsl
xor
ja
push
cmp
push
or
and
pop
loop
push
inc
mov
and
insl
push
mov
ss
das
bound
mov
jle
cmc
jmp
ss
xchg
jp
cmp
imul
mov
inc
out
fcompl
stc
add
pop
sub
xor
adc
sarl
adc
cmp
ret
popf
hlt
sbb
add
bound
cmpsl
loopne
movsb
aad
rcr
sbb
insb
lods
adc
xlat
mov
xlat
xor
sub
lock
cmp
jbe
rcll
test
adc
push
nop
mov
mov
cli
push
inc
in
jmp
inc
mov
or
movsl
shlb
out
mov
xor
fs
insb
fs
mov
cmp
jge
adc
out
lret
cmp
jbe
push
jecxz
push
or
out
inc
pop
daa
ds
inc
cmp
and
inc
mov
iret
es
repnz
add
xchg
data16
lret
call
xor
aas
dec
mov
mov
mov
sbb
cmp
mov
sub
mov
xor
xchg
arpl
ljmp
push
add
jbe
push
adc
inc
outsb
pop
adcb
cwtl
leave
outsl
push
std
in
adc
fwait
fwait
mov
cmp
ljmp
gs
enter
in
data16
mov
aad
insb
jmp
andl
sbb
outsl
jbe
add
sbb
jae
aam
xchg
fiaddl
jmp
cld
jge
xor
ds
das
sub
mov
xor
fcmovnb
cmpsl
xchg
mov
aaa
xor
or
mov
mov
ljmp
out
add
mov
int3
mov
cli
cmp
xchg
fwait
int3
mov
xor
sahf
and
push
cmp
inc
mov
out
cwtl
mov
cmp
popa
or
fldenv
xchg
mov
adc
sbb
inc
outsb
in
adcb
dec
push
cs
or
sub
aad
es
sti
stos
int3
jl
sahf
adc
push
test
or
add
sub
jae
loopne
pop
pop
xor
test
ss
repnz
add
jl
add
cmp
imul
mov
in
lock
mov
daa
test
xchg
lds
cltd
jo
mov
roll
mov
aaa
xchg
xor
pop
add
pop
adc
aam
jbe
gs
cmpsl
inc
ljmpw
xor
in
loopne
mov
jbe
in
ret
dec
rcl
or
xor
imul
adc
mov
push
jge
fstp
addb
dec
cld
mov
pusha
inc
cmp
xchg
cld
push
xlat
ds
sbb
or
shll
iret
sbb
shlb
adc
or
insb
mov
pop
fidivl
mov
mov
sub
out
ret
cltd
mov
jg
fnsave
call
in
jno
mov
inc
nop
cwtl
mov
push
aas
dec
fcmovb
mov
in
in
lret
xchg
sub
aad
pop
and
sbb
popf
xchg
xchg
and
xchg
repz
ficoms
add
dec
jmp
jl
mov
push
push
sahf
inc
xchg
sahf
out
xlat
xchg
ljmp
shlb
inc
ret
int
out
xchg
mov
jno
dec
subb
mov
and
imul
sub
xor
movsb
push
xor
jmp
push
adc
aad
mov
fisubrl
mov
addr16
xchg
std
inc
mov
xchg
cmp
cwtl
dec
mov
nop
sub
ret
repnz
mov
lods
jb
sahf
dec
adc
andl
xor
inc
cltd
jae
adc
inc
mov
bound
and
punpckhdq
sti
clc
add
subb
mov
orl
lahf
inc
cli
dec
sub
subb
mov
pop
mov
or
daa
or
enter
fdiv
adcl
les
jge
insl
sub
lods
and
or
arpl
xor
ret
mov
cwtl
pop
jns
subb
inc
xchg
out
dec
imul
inc
jg
in
add
sub
ficoml
daa
dec
push
inc
push
into
or
movsb
stos
aad
jnp
rcrb
push
pop
hlt
imul
mov
inc
jg
mov
mov
decb
ljmp
inc
jmp
cli
mov
dec
ds
mov
mov
and
je
push
hlt
jbe
xchg
cmp
mov
in
jo
gs
jmp
add
jg
lock
fstps
fsts
testb
fwait
in
test
fwait
add
pop
lock
add
mov
call
xor
movsb
push
xor
mov
outsb
dec
daa
xor
inc
jmp
lods
jbe
lods
jbe
je
inc
gs
or
xor
push
sahf
adc
data16
sbb
adc
faddl
jne
lahf
sbb
adc
mov
xchg
call
dec
into
mov
loop
cs
push
icebp
popf
pusha
shll
adc
adc
enter
lret
and
xor
les
and
mov
test
outsb
je
fidivs
sbb
repnz
iret
xchg
enter
pop
test
jp
mov
fdivs
fwait
repnz
cmpsl
lret
test
mov
xor
stos
cmpb
mov
inc
push
ljmp
push
scas
add
arpl
cmp
fisubl
rclb
mov
pop
jmp
mov
loop
sbb
mov
shlb
das
pop
lods
int
pop
icebp
sub
clc
std
sub
xchg
mov
fisttpl
and
popf
add
mov
mov
cmpsl
jns
cmpsb
scas
mov
out
popf
shrl
arpl
adc
cmp
mov
push
ss
push
mov
pushf
ss
cmp
inc
cmp
push
adc
mov
cmp
ljmp
inc
cmp
push
shll
push
mov
shlb
bound
sub
push
pop
clc
mov
lock
imul
into
pop
mov
jmp
sub
hlt
xchg
out
inc
cmpsl
jg
mov
pop
pop
sti
stos
or
lret
daa
sub
push
mov
imul
mov
bound
push
repnz
enter
and
pop
mov
xor
sbb
daa
rcrl
je
mov
ret
add
xor
cmp
loop
mov
mov
and
aaa
sahf
mov
mov
jp
xor
movsb
ss
loopne
lods
dec
push
or
lods
cs
daa
mov
push
adc
cmp
mov
je
hlt
adc
inc
and
movsb
xor
outsb
lret
xchg
ret
lea
dec
pcmpgtd
aad
mov
mov
test
push
pushf
jl
out
mov
mov
gs
jp
fidivs
inc
dec
sbb
mov
push
push
imul
in
outsb
mov
sub
and
cmp
adc
or
mov
dec
popf
int3
bound
cmp
jns
push
dec
jne
lcall
hlt
cli
pop
or
pusha
pop
imul
and
cmpsl
cli
repz
jle
cmp
jnp
inc
sbb
mov
std
cld
out
dec
lds
popf
stos
subl
xor
push
lock
or
cmp
inc
and
adc
pop
sbb
or
mov
scas
lahf
xchg
jg
sahf
or
adc
lock
xchg
mov
and
dec
cld
mov
mov
dec
fcoms
hlt
xchg
adc
aam
cltd
lret
and
or
cmp
test
cmp
imul
adc
cmp
mov
adc
and
add
mov
jp
decb
aaa
loope
and
jp
push
ret
mov
jg
xchg
adc
mov
or
ret
inc
sbb
vphaddwd
data16
xchg
out
insl
stc
inc
inc
inc
push
pushf
daa
mov
fisubrl
int
sbb
add
sub
mov
fcmovnb
mov
cld
jge
ss
dec
mov
cmp
adc
cwtl
adc
cmp
scas
popa
mov
xchg
jecxz
stos
add
xor
out
sub
out
cld
xchg
xchg
sub
shlb
loopne
push
repnz
pop
jne
or
sbb
xlat
lock
mov
daa
xchg
jns
pop
clc
jae
lods
adc
xchg
mov
scas
pop
cmp
inc
jae
sub
sbb
and
pop
mov
or
cs
ss
push
mov
subb
inc
arpl
jae
mov
mov
mov
out
imul
add
or
jno
and
or
xchg
pop
and
push
sahf
and
es
sbb
mov
fsubrl
stc
sti
in
in
ss
aam
cmp
sahf
push
pop
leave
test
or
push
push
adc
lret
fs
mov
loop
fdivl
ret
fcmovne
out
jmp
and
shl
and
mov
aad
dec
and
inc
jg
je
ljmp
xlat
dec
clc
xor
cmc
xchg
mov
popf
les
jmp
jecxz
aam
adc
dec
bound
in
jge
xchg
sbb
mov
xchg
jge
inc
xor
mov
ljmp
es
popf
mov
subb
movsb
inc
gs
cmpsl
jns
mov
jns
xchg
imul
in
xor
loop
jbe
sub
mov
fs
xchg
xor
push
mov
adc
sbbl
mov
cmp
sub
andl
inc
mov
mov
fisubl
out
cmpsl
lahf
lahf
sti
lods
sarb
inc
movsb
lea
xor
ret
and
or
or
scas
sahf
scas
js
push
push
push
cmp
data16
into
ljmp
loop
or
mov
adc
and
sbb
xchg
imul
int3
enter
jno
icebp
test
lret
cmovge
popf
lea
scas
pop
nop
mov
clc
stc
add
incl
mov
sub
leave
push
cmp
pusha
js
out
out
or
mov
fwait
orl
xor
mov
push
sbb
mov
pop
xor
mov
loopne
sub
cltd
or
pop
stc
adc
jbe
dec
mov
jle
jns
mov
out
pop
jae
and
cmp
test
add
ss
adc
fdivs
jns
push
and
cmp
adc
loop
pop
test
dec
in
or
rclb
push
mov
insl
loop
ja
aam
scas
pop
rcl
loop
popf
push
sub
js
cmp
int3
jnp
insl
jge
scas
dec
jmp
hlt
adc
sub
jl
push
jb
xlat
xchg
and
cmpsl
in
popf
clc
iret
mov
out
insb
and
push
std
push
jb
add
js
adc
mov
std
push
add
pushf
xadd
das
push
sub
jae
pushf
sub
movsb
xchg
pop
xor
pushf
push
pop
rol
or
mov
mov
sbb
scas
inc
and
ljmp
mov
loopne
enter
lahf
jnp
jbe
adc
aas
sub
aas
pusha
mov
adc
in
scas
pop
shlb
push
repz
daa
lods
pop
inc
push
adc
mov
xor
fidivrs
test
out
bound
loopne
xchg
imul
sbb
mov
sbb
dec
inc
pop
roll
jo
ja
cltd
jmp
jl
xchg
daa
scas
jns
ja
lcall
dec
jge
pop
addr16
xchg
popa
sub
lea
or
cmc
pop
adc
and
inc
cmc
sub
cmp
mov
jg
test
imul
push
jae
jo
andb
xor
addr16
cld
aam
mov
lock
mov
mov
xchg
imul
and
mov
mov
sti
out
sbb
icebp
rcr
sub
xchg
lock
in
fsubs
xor
outsl
daa
ds
std
sbb
or
inc
addr16
repz
mov
cmc
incl
lods
aas
outsb
xchg
and
lret
add
push
push
scas
fdivs
jmp
mov
std
mov
ror
insl
out
and
mov
add
out
fsubr
push
cld
push
mov
cmp
lcall
dec
ffree
dec
inc
add
inc
mov
xlat
or
lahf
and
cmp
adc
xlat
cmpsl
push
test
mov
add
mov
adc
jp
mov
pop
mov
adc
std
mov
and
bound
mov
fimuls
mov
or
fbld
mov
pop
add
mov
lds
or
and
fdivrs
mov
iret
cmc
mov
pop
or
aas
hlt
pusha
ja
imul
imul
pop
nop
mov
add
pop
sub
push
mov
dec
dec
imul
lock
push
cmpsl
and
xchg
push
push
lods
push
fistps
pop
mov
fnsave
jns
stos
shrl
fcmovne
inc
out
les
pop
pop
push
rcll
hlt
icebp
adc
lods
in
adc
or
movsl
jnp
mov
pop
subl
jne
pop
jl
jmp
jp
sub
mov
or
cmp
aam
inc
lahf
rcrl
std
into
sub
xchg
ljmp
pop
cli
sbb
div
push
mov
sti
push
xchg
push
mov
lahf
mov
int
jg
jno
jae
xorl
push
xchg
dec
shll
iret
daa
xchg
or
inc
test
stc
xor
scas
pusha
loop
xchg
sub
xchg
lahf
jbe
xchg
add
in
xor
stos
test
fndisi(8087
bsr
aaa
push
add
mov
inc
mov
adc
cmp
testb
lret
std
std
jae
pushf
nop
ret
ret
jecxz
sub
scas
repnz
stos
xor
cmpl
js
mov
push
add
addr16
shrb
sub
mov
shll
mov
push
push
mov
nop
sub
xchg
cltd
int
jg
xlat
sbb
or
test
jno
das
add
and
mov
lahf
ljmpw
pop
pop
push
cmp
stos
jbe
cmp
mov
loopne
daa
stc
adc
daa
add
mov
cmp
cmc
icebp
mov
ds
icebp
jb
and
mov
jne
ljmp
mov
lods
mov
loopne
ljmp
sub
sbb
mov
aas
push
negl
mov
or
cs
popa
cmpsb
fisttps
outsb
daa
loop
imul
xor
bound
inc
mov
js
inc
mov
stos
popa
ja
mov
jg
inc
mov
lods
data16
pushf
push
mov
sub
in
push
ja
outsb
push
fisttpl
and
mov
cmp
and
and
xor
loop
push
push
sbb
inc
mov
mov
mov
mov
sar
mov
push
mov
shlb
fsubp
ss
pop
jl
lret
pop
sbb
iret
clc
push
in
loopne
mov
shll
lahf
sub
sub
xchg
adc
loope
rorl
ficoml
fisubl
mov
mov
add
jb
xchg
dec
cmp
adc
xchg
insb
xchg
loop
cld
lea
sub
es
pcmpeqd
push
je
shll
lret
les
add
mov
xchg
pop
add
add
lods
or
push
add
sbb
in
roll
loop,pn
jle
jp
dec
xchg
int3
sti
lea
pop
rorb
or
jge
out
and
ss
mov
push
out
cmc
mov
jo
pop
xchg
adc
sbb
arpl
stos
cltd
xadd
pop
push
ljmp
testb
and
push
fs
xchg
imul
push
mov
mov
and
icebp
and
cmp
jmp
jl
dec
xor
jge
mov
mov
xor
mov
push
in
je
inc
rol
repnz
xor
popf
ret
mov
ljmp
push
pop
fwait
push
mov
jae
pop
push
mov
fsubl
iret
push
adc
pop
faddp
jge
out
sub
fildll
mov
pop
and
jno
loop
push
xchg
scas
icebp
sahf
sub
xchg
mov
mov
adc
xor
and
push
cmp
mov
pop
popf
fwait
inc
fldl
cld
imul
fidivs
push
lcall
xor
dec
xchg
out
pop
mov
cmc
push
loop
dec
ds
and
sti
std
je
imul
out
aas
xor
js
push
cmc
shlb
vinsertf64x4
lock
ret
cs
jo
dec
inc
js
mov
cmc
or
mov
dec
inc
sbb
and
pop
in
push
xchg
inc
andl
dec
sub
inc
lea
mov
in
insb
cmp
pushf
ficompl
jae
test
lret
push
fsubl
mov
jns
xor
ds
sbb
test
add
mov
or
ret
pop
xchg
ljmp
es
cld
std
cld
add
sub
rcrb
test
insb
ret
sbb
sbb
ljmp
pop
jmp
ficoml
roll
aaa
or
leave
xor
bound
cli
clc
sarl
stos
fists
mov
stos
or
out
xchg
pop
scas
in
fs
xlat
into
inc
cmp
push
orb
adc
stos
pop
lock
frstor
inc
ja
jno
jle
lods
mov
xchg
mov
sbb
lods
aaa
dec
aam
mov
or
mov
das
xchg
out
out
and
out
scas
bound
mov
xlat
ds
mov
in
sub
push
push
popa
pushf
xlat
xor
xor
scas
push
insl
pop
inc
iret
fdivl
ja
dec
pop
fcoml
scas
jns
xchg
fisubs
and
push
push
or
nop
cli
mov
mov
call
pop
push
lods
xchg
cmc
inc
scas
std
push
cmp
lea
out
pop
jle
pop
sub
cmpsl
fwait
sub
xchg
cmp
nop
and
sbb
cs
sbb
jl
add
movsb
push
and
push
fbstp
pop
mov
sbb
lds
out
rcrl
leave
inc
addb
push
add
dec
dec
cli
test
or
ljmp
push
inc
mov
and
cmp
jle
mov
add
sub
mov
xchg
xor
pop
sbb
js
nop
push
stc
sub
std
scas
je
in
ss
aam
push
jcxz
fcoml
shlb
addl
loop
jne
mov
scas
ds
aam
xor
ja
mov
jne
orb
or
fs
xchg
xchg
xor
shlb
jge
jbe
pusha
mov
sub
inc
cmp
test
xor
sub
pop
mov
mov
or
fldenv
clc
lcall
in
movsl
cld
pusha
xchg
pusha
aaa
sarb
out
imulb
adc
outsl
mov
cltd
aad
inc
xor
mov
dec
shlb
cmpsb
data16
cmc
sub
sbb
bt
std
sbb
sub
fcmovu
loope
and
mov
nop
mov
jbe
sahf
movsl
mov
cmp
out
and
ja
push
xchg
xor
xlat
jmp
shrl
out
mov
cmp
sub
daa
out
mov
add
fildl
cmp
mov
dec
rorl
lds
add
add
cmp
je
cmp
scas
add
repnz
jb
or
push
cli
nop
stos
or
in
xchg
adc
incl
lea
cli
inc
jmp
mov
pusha
inc
add
xchg
movsl
lods
jmp
mov
enter
inc
fsubrs
xor
push
xlat
scas
pop
xchg
nop
int
xchg
xor
fmuls
dec
push
cli
stos
sti
push
and
sub
mov
in
jbe
cmp
jge
pop
cld
pop
nop
lret
dec
sub
or
or
inc
jno
mov
or
cltd
sub
sahf
xor
xchg
mov
bound
daa
jp
cmp
lret
mov
sub
ror
or
jns
scas
imul
and
mov
addr16
and
add
cs
aaa
add
push
sub
and
inc
fstl
pop
bound
sub
hlt
sbb
mov
mov
out
or
movsb
cmpsl
sahf
and
pop
rclb
sarb
mov
pop
pop
adc
in
and
cmp
mov
pop
scas
bound
test
pop
cwtl
sbb
out
filds
sub
ss
scas
adc
or
pop
push
adcl
xor
adc
jae
or
cmpsl
or
add
mov
push
xchg
xor
insl
jns
in
dec
xor
imul
jmp
lock
sbb
push
xchg
dec
lret
jb
push
xor
xor
or
pop
cld
jl
into
and
mov
adc
loope
xchg
frstor
jle
push
lock
repnz
push
sahf
adc
push
sbb
mov
xor
push
fimull
and
pop
sar
jecxz
push
sbb
push
movsl
flds
mov
inc
int
mov
sub
incb
push
in
nop
lock
cs
and
clc
xchg
mov
hlt
adc
lock
pop
iret
stos
push
xor
jno
mov
insl
adcb
sbb
je
inc
xor
inc
or
repnz
add
ljmp
shl
dec
daa
orps
mov
xor
mov
mov
xor
ffree
cmp
aaa
dec
loope
xlat
inc
pop
clc
scas
sarb
not
bound
mov
cmp
dec
stos
shl
push
sbb
xchg
lretw
or
fsub
and
pushf
adc
mov
roll
cwtl
cmp
arpl
arpl
pushf
push
sbbb
dec
lahf
fndisi(8087
sbb
pop
adc
stos
dec
sti
xchg
cmp
or
mov
les
ljmp
stos
out
test
pop
lret
cli
sbb
fwait
icebp
cmp
popf
ljmp
clc
loopne
pop
and
ja
mov
out
sub
movsb
xchg
add
sub
jns
sahf
push
push
hlt
pop
rcll
popa
or
and
or
int3
pop
pop
xchg
imul
push
mov
push
adc
add
lea
test
into
xor
jbe
daa
cs
repz
push
leave
sti
push
filds
ja
pop
cmp
xchg
into
mov
dec
sub
adc
pop
mov
frstor
cwtl
clc
push
pop
sti
stos
dec
sub
mov
push
ds
movsb
sub
leave
cmp
fcoms
mov
pop
pop
inc
cmpl
mov
xchg
push
sti
push
hlt
je
adc
lea
mov
push
xor
sbb
xor
sbb
out
xor
cmpsb
ret
ja
cmp
das
das
or
cmpl
and
sbbb
sub
loopne
sub
mov
repz
mov
sbb
imul
add
mov
clc
ret
scas
lret
inc
decl
hlt
sbb
pop
pop
adc
jp
pop
jp
fstpt
mov
insl
jne
mov
out
stos
pop
test
jno
icebp
fldenv
mov
mov
mov
mulb
insl
adc
sbb
mov
mov
and
subb
add
sub
ljmp
sub
stos
jne
mov
inc
inc
push
mov
mov
ljmp
inc
data16
add
jb
mov
scas
addl
or
repz
push
inc
sti
adc
inc
test
jnp
cld
out
fstps
adc
into
fcomps
mov
icebp
xchg
cmpsl
je
xchg
xor
and
cmp
andb
leave
hlt
or
popf
test
lods
add
ja
xorl
push
mov
jl
lods
pop
pop
js
sbb
mov
in
xor
add
clc
fsubp
or
mov
fists
jge
ret
mov
xorl
xchg
jecxz
fs
dec
scas
add
and
lock
loope
je
mov
mov
mov
dec
out
and
fdivrs
jg
push
dec
pop
adc
pop
arpl
popf
out
pop
test
out
flds
test
hlt
insb
loope
rclb
xlat
insb
rcl
sub
es
or
push
faddl
pop
cmpsb
movsb
adc
icebp
sbb
jmp
pop
inc
mov
mov
jnp
push
jb
mov
in
add
mov
ret
mov
es
jno
cwtl
outsl
aad
push
aam
jo
scas
test
mov
cmp
xor
cmp
pop
iret
fisttpll
mov
imul
ret
data16
push
fcmovnb
shlb
cmp
mov
rorb
jecxz
jo
pop
cli
shlb
xchg
cld
push
cmc
add
cmp
rorl
ja
add
cwtl
lahf
data16
adc
xorl
lret
xchg
xor
daa
ret
dec
stc
mov
dec
dec
xchg
scas
jae
ljmp
in
arpl
push
jecxz
jnp
cltd
dec
aaa
std
jnp
add
mov
cmc
cmpsl
mov
jnp
mov
push
cmp
and
xchg
mov
mov
add
inc
test
add
loop
fsubr
xor
xchg
mov
xor
pop
popf
add
test
mov
in
sub
lock
orl
mov
or
sub
mov
and
xchg
adc
shll
xchg
or
sahf
ds
inc
mov
dec
test
int3
bnd
xor
dec
sub
sub
or
pop
mov
mov
adc
js
add
xor
or
call
xchg
ja
in
ljmp
push
sub
xor
and
jb
cmc
cwtl
mov
xchg
fs
loope
or
mov
ja
xlat
push
xchg
mov
jns
xlat
pop
xchg
push
and
fsub
dec
and
sahf
ret
add
inc
outsb
test
les
mov
sub
inc
pop
lods
jle
jo
xlat
sbb
mov
hlt
pop
adc
scas
mov
into
test
decl
aas
mov
fwait
xor
loopne
pushl
out
insb
add
enter
mov
in
push
mov
lock
orb
lock
dec
sub
push
sub
cmp
adc
lock
jno
pop
mov
sub
xchg
cld
push
xchg
pop
aad
cmp
test
popf
pushf
nop
mov
in
jno
inc
leave
xchg
adc
orl
ja
push
push
popf
inc
xchg
divb
mov
in
push
lret
lock
dec
pushf
and
sub
mov
fstpl
test
out
test
pop
scas
push
jno
or
int
jnp
fldpi
add
ret
mov
and
adcl
mov
xchg
jb
jecxz
iret
sub
or
inc
dec
outsl
push
fsubr
cmc
stc
outsl
or
mov
dec
pop
out
fnstcw
push
jl
out
mov
push
call
mov
aam
and
jmp
sbb
add
pop
fs
js
movsb
dec
bound
in
test
dec
call
adc
mov
pop
sbb
xor
lcall
insb
lea
repnz
push
xchg
mov
icebp
mov
cltd
adc
leave
pop
popf
js
pusha
in
sbb
mov
jl
mov
aad
daa
mov
enter
lods
xor
jnp
imul
aas
ljmp
test
xor
mov
cmp
scas
cltd
adc
pushf
je
lret
mov
pop
push
and
mov
push
icebp
sahf
mov
cli
push
into
dec
or
cmp
frstor
sbb
lods
clc
cmc
mov
js
pop
sarb
fwait
in
rcl
out
dec
repnz
or
xor
pop
pop
push
dec
dec
stc
out
rorl
roll
subb
cmc
pop
pop
mov
cwtl
int
sub
add
sbb
int3
fidivrl
inc
rolb
das
sbb
dec
sub
xor
mov
fwait
mov
stos
rcll
mov
inc
inc
lds
addr16
insl
push
pop
pushf
ret
jg
pop
xchg
mov
out
cmp
repz
loope
jne
pop
rcrl
iret
adc
sbb
push
ficoms
je
notb
jb
cmc
repnz
sub
sbbl
xchg
icebp
jp
cwtl
ljmp
mov
add
fiaddl
incb
divb
test
fsubl
ror
mov
xchg
std
mov
pusha
aad
sbb
mov
testb
xlat
lea
jnp
push
ss
std
dec
imul
mov
xor
and
mov
popa
sti
or
pop
or
das
call
adc
xlat
add
popa
ret
cmp
popa
mov
xor
out
std
dec
pop
repnz
ja
inc
cmpsb
dec
adc
fmull
xor
in
outsb
and
sub
gs
daa
popf
out
pop
jae
xor
movsl
and
jo
push
inc
mulb
jl
xchg
rcrl
enter
les
jp
xor
cmpsb
ror
sti
mov
cs
jmp
pop
js
popa
add
gs
repz
or
sbb
xor
pop
dec
xlat
hlt
or
and
fwait
idivl
mov
mov
ds
pop
or
sbb
in
data16
inc
mov
xchg
xlat
incl
int3
aam
push
and
mov
popf
or
lcall
sbb
in
outsb
inc
mul
aad
in
ss
add
mov
and
mov
mov
movsb
adc
or
inc
rcr
mov
jb
fcmovu
mov
sub
lret
jecxz
mov
fnstsw
push
mov
fwait
mov
xchg
and
ljmp
mov
je
stc
or
pop
or
lods
mov
imul
movsl
xor
jb
xlat
jecxz
mov
push
sub
jae
add
mov
add
rorb
lds
je
arpl
mov
insl
scas
xorb
or
push
cmp
imul
loop
mov
out
inc
mov
outsb
lds
jecxz
sub
mov
lahf
cmp
enter
inc
in
or
ficoms
sub
cltd
push
lret
fwait
movsl
jns
rcl
stos
je
testb
and
test
pop
xor
scas
sbb
leave
lret
call
aas
cmpsb
mov
push
dec
pushf
lock
cmp
lret
push
and
push
mov
nop
pop
xchg
pop
sub
push
pushf
push
cmpl
out
subb
dec
mov
inc
enter
adc
jmp
push
lcall
sarl
mov
ret
pop
cmp
mov
faddl
loop
adc
jle
out
rep
or
lea
scas
jecxz
dec
notl
test
iret
mov
rol
addl
addr16
scas
xlat
mov
fistpl
test
adc
pusha
lahf
inc
mov
addl
dec
ljmp
cmp
loopne
inc
xor
mov
fstpl
push
rcll
rclb
gs
sbb
jecxz
xchg
aad
dec
lret
mov
mov
aad
stos
addl
mov
or
out
inc
dec
sub
dec
inc
sub
mov
rcrb
outsl
adc
xor
mov
sub
test
sub
repnz
mov
cmp
fsubrl
out
rorb
push
xchg
jle
in
ja
mov
mov
mov
inc
or
call
or
jg
jmp
dec
mov
cmp
pop
and
push
mov
adc
sub
adc
fisttpll
out
cmp
fbld
pop
sbb
test
cmpl
in
dec
xchg
xor
xchg
adc
cli
inc
ret
jne
imul
mov
push
stc
data16
mov
push
out
mov
push
mov
out
mov
les
in
and
pop
fbstp
inc
pop
push
mov
cmp
inc
fisttpl
call
xor
bound
add
insb
push
cwtl
jns
mov
sbb
repnz
inc
pushf
or
mov
jmp
xchg
mov
inc
outsb
lock
andl
jb
stos
lahf
inc
add
movsl
jl
out
cmpsl
jle
pop
es
push
mov
filds
movl
gs
cwtl
cld
pop
sub
push
popa
mov
shlb
pushf
inc
fstl
add
add
mov
icebp
mov
pop
movsl
adc
movsb
pusha
push
sub
cmp
sbb
xor
or
jge
adc
push
test
stos
xor
mov
push
or
xor
push
mov
test
adc
outsb
jp
inc
dec
sahf
aam
and
rcll
test
arpl
outsl
sbb
dec
add
test
mov
and
xchg
and
pop
jo
dec
popa
out
shr
bound
jne
push
mov
mov
inc
imul
cmp
and
fisubrs
sbb
xchg
ljmp
stc
inc
mov
out
cwtl
je
mov
pop
push
or
stc
popf
xor
mov
dec
mov
mov
mov
insl
pop
call
sub
jg
movsl
jg
mov
xchg
cmp
sub
divb
inc
daa
imul
outsb
jp
add
mov
jge
mov
pop
xor
lret
insl
dec
inc
push
out
jae
xchg
xor
xor
fdiv
push
xchg
repnz
jge
lret
mov
dec
mov
xor
lret
mov
rcll
mov
ljmp
or
mov
mov
insb
sbb
jmp
xchg
ss
inc
insl
int3
shlb
paddd
insl
mov
inc
or
pop
pop
popf
fsts
roll
movsb
test
xchg
mov
dec
xchg
xor
xchg
inc
pop
stc
ds
repnz
pop
and
addb
lods
je
add
fdivs
data16
sbb
loope
jns
ret
and
mov
pop
mov
mov
inc
js
xlat
pushf
scas
jno
mov
sbb
or
dec
mov
mov
scas
fisubl
jns
adc
bound
xor
inc
xlat
outsb
sbb
arpl
js
mov
inc
mov
push
dec
sub
jbe
popa
mov
ret
dec
sub
icebp
outsb
adc
mov
lret
sub
lock
jbe
hlt
mov
popa
ss
lret
pop
mov
clc
cmp
pop
sarb
lea
bound
mov
icebp
stos
add
hlt
sbb
add
mov
dec
jae
out
popa
imul
rorl
xchg
xchg
sub
sub
xchg
and
mov
inc
pop
push
insb
mov
inc
lcall
or
pop
aam
jp
push
push
jb
cltd
hlt
mov
inc
and
jno
push
cmpsb
add
fnstenv
cmpsl
test
insl
push
add
imul
sub
sub
mov
popa
data16
insb
sbb
in
jle
fcmovnb
imul
or
lret
adcl
adc
push
pop
pavgw
and
pop
fisttpl
push
in
jae
dec
out
xchg
adc
mov
divl
pop
aas
leave
cmp
mov
stos
jb
mov
mov
add
lcall
ret
sub
enter
dec
cmp
mov
pop
xchg
nop
or
xchg
mov
std
cmpsl
or
sub
pop
add
jp
into
and
out
xchg
or
mov
stc
add
pop
jnp
mov
fst
jmp
sbb
popf
xor
and
aaa
mov
aam
xor
adc
test
or
lret
xor
cwtl
mov
call
gs
jle
addr16
xor
sbb
dec
imul
xchg
adc
mov
xchg
inc
repnz
cmp
cmc
es
mov
xchg
cmp
sahf
test
shlb
mov
lods
lret
outsl
fstpl
out
pop
push
movsl
mov
rcl
pushl
cmp
mov
sub
popf
pop
inc
mov
inc
dec
push
push
push
sbb
cmp
hlt
sbb
jle
leave
sub
or
lock
mov
ljmp
aaa
mov
or
adc
jge
push
scas
out
addr16
hlt
cs
add
dec
cld
ss
mov
pop
sub
loop
xor
lods
aam
jb
sub
push
cwtl
inc
testl
rorl
pop
jb
mov
and
enter
pop
or
mov
cmp
mov
out
test
and
aad
push
adc
adc
mov
loope
out
out
and
dec
or
dec
mov
xor
sbb
ret
outsb
mov
push
pushf
in
sub
pop
mov
cmc
adc
out
daa
adc
fiadds
mov
push
and
xchg
rorl
adc
and
into
in
jno
cmp
xchg
loope
fwait
pop
lcall
push
lret
push
das
mov
pop
icebp
sahf
xor
jo
xchg
xchg
roll
mov
dec
pop
sub
or
mov
sbb
popa
or
ror
fwait
adc
in
pop
and
and
or
push
imul
rcr
iret
insb
mov
jnp
iret
js
sub
sbb
adc
push
mov
sbb
lea
clc
inc
clc
xor
pop
fisubl
xchg
sub
adc
xchg
les
jns
pop
int
pop
mov
pop
icebp
cmp
lea
or
and
dec
lds
jl
nop
mov
int3
mov
in
fisttps
clc
cmp
inc
dec
sbb
sbb
jg
jge
loopne,pn
in
in
aas
adc
ja
dec
ljmp
jns
jbe
mov
inc
inc
mov
inc
pop
sbb
out
mov
xor
cli
mov
jmp
out
hlt
push
out
test
stos
enter
push
mov
cli
pop
fldcw
mov
mov
out
test
inc
int3
mov
jbe
push
xchg
stos
mov
cmp
int3
imul
enter
push
int
hlt
cmp
push
movsb
adc
faddp
push
sbbl
pop
dec
insb
xor
push
fabs
inc
sbb
or
cmc
fimull
nop
and
inc
and
xchg
dec
sbbl
mov
push
inc
repz
pop
xchg
dec
int3
xor
adc
mov
mov
je
mov
jge
std
std
mov
imul
arpl
loopne
jge
jo
scas
and
arpl
xor
ss
imul
xorb
imul
hlt
inc
xchg
sbbl
ja
pop
jb
add
mov
outsb
lds
addr16
in
push
mov
jae
test
sbb
movsl
pop
mov
mulb
jo
jns
shrb
gs
repnz
mov
cmp
mov
add
or
xor
test
pop
in
or
std
inc
add
fisubl
pop
jl
stc
xchg
iret
inc
notb
jae
loopne
out
insb
pushf
mov
cmp
ja
jecxz
xor
mov
jae
jl
push
cmp
pop
mov
and
test
imul
mov
add
int3
add
daa
mov
inc
xchg
imul
outsl
sub
push
stos
stc
pop
loope
and
cld
cmp
inc
dec
inc
xchg
cmpb
rolb
jmp
jg
icebp
out
movsl
scas
aaa
mov
cmp
pop
inc
aad
jmp
xchg
dec
aad
repnz
mov
sub
or
fstl
inc
cwtl
sti
and
pop
arpl
shl
dec
jnp
or
stos
rcrl
jns
sbbb
fs
or
dec
and
in
js
jg
rolb
sbb
push
orl
fwait
sbb
lea
cld
adc
les
add
rcrl
mov
popaw
fsubrs
dec
mov
stos
xor
lods
out
fnstenv
bound
or
shrl
cltd
cmpb
inc
and
cmp
xor
jmp
inc
mov
test
stc
jnp
out
sub
lods
push
adcb
cmpsb
call
cltd
pop
fs
arpl
jno
dec
outsl
out
sub
jb
pop
test
test
cmpsl
rcr
cmpb
and
mov
push
aaa
incl
rolb
mov
jg
leave
test
xor
outsb
pop
dec
dec
lahf
dec
xor
int3
push
mov
scas
out
roll
jae
push
adc
xorb
leave
push
in
shlb
ja
lahf
pop
maxps
sti
jne
lret
aad
addr16
stc
adc
inc
fdivl
jne
loopne
mov
dec
les
mov
aas
out
add
insl
gs
ret
jno
fdivl
mov
adc
gs
add
mov
data16
push
jecxz
fdivrs
int
add
cld
cmp
mov
adc
inc
rolb
cmp
xor
mov
sbb
or
addr16
je
push
push
dec
cmc
cmp
push
hlt
lahf
cmp
xchg
jne
jae
ljmp
push
aam
into
out
mov
pop
mov
test
ret
lea
cmp
outsl
aaa
imul
ficoml
leave
dec
push
push
mov
add
icebp
arpl
lahf
inc
cmp
ja
adc
aad
xchg
aaa
mov
push
leave
in
jbe
out
call
xchg
jbe
mov
add
mov
fistpl
call
fdivr
jl
pop
stos
cmp
negb
mov
popa
jge
fistpll
pop
xor
pop
incb
jmp
mov
scas
ficompl
or
or
push
push
ret
test
cmp
push
jo
or
add
mov
nop
push
dec
sti
cmp
aaa
lea
dec
stos
scas
je
out
cs
out
call
leave
lahf
dec
lcall
fidivrs
add
jmp
nop
mov
nop
and
jmp
ja
sub
mov
or
xor
insl
xchg
mov
xor
test
mov
push
aad
rcll
filds
fldenv
sub
sbb
mov
mov
push
jo
bound
pop
dec
inc
gs
mov
pop
xchg
pop
sub
dec
sub
ljmp
ret
in
lahf
and
rclb
push
sub
ret
adc
filds
xchg
movb
mov
int3
cmp
pop
dec
adc
aam
movsl
bound
cmc
mov
lock
call
mov
fldenv
sbb
pop
sahf
in
push
pop
mov
or
pop
out
fidivrl
stc
shll
dec
fsqrt
ds
out
mov
mov
flds
xor
pop
sub
mov
sbb
xchg
dec
adc
xlat
aam
sub
scas
fadds
xor
xchg
in
mov
dec
push
ret
lock
lods
push
dec
and
popf
jno
and
in
push
dec
dec
scas
dec
cmpb
call
cmc
scas
aad
cmp
mov
lahf
sarb
mov
sbbl
popl
ds
and
xor
cmp
adc
loopne
das
mov
addr16
imul
imulb
jno
push
pop
stos
push
popf
test
mov
mov
rcll
rorb
or
mov
sarl
mov
jbe
stos
clc
popl
outsl
pop
sarl
out
out
repnz
cmp
jo
sahf
push
sbb
mov
add
loop
lods
jp
aaa
jb
ret
scas
mov
xchg
fldenv
mov
push
and
jae
jb
popa
in
push
fldcw
and
pop
pop
xor
das
leave
xchg
lcall
int3
iret
push
push
sub
movsl
sbb
adc
push
pop
stc
and
jecxz
dec
mov
pop
sub
pop
mov
fists
shl
iret
mov
not
inc
aad
inc
jmp
and
lcall
call
pop
cmp
sahf
rcrb
mov
or
call
and
repz
push
pop
inc
mov
lret
jp
stos
sub
inc
sbb
test
ret
divb
fs
xchg
pop
mov
pop
jns
cmp
sbb
dec
gs
movsb
inc
mov
mov
and
sub
out
not
aas
push
lds
leave
outsb
dec
dec
ja
es
ret
or
push
pop
push
xor
repz
stos
add
mov
xor
shl
cmp
mov
or
std
sub
out
lcall
imul
clc
add
scas
andl
add
push
dec
xor
ljmp
cmp
xchg
clc
push
xor
adc
xor
aam
ret
mov
mov
enter
pushf
mov
aas
sbb
out
repnz
out
adc
pop
xchg
decb
xchg
outsb
jmp
cmpsl
and
test
leave
dec
mov
push
mov
fildl
sbb
mov
dec
testb
jmp
lcall
scas
out
mov
jmp
outsl
inc
lahf
jnp
mov
nop
jecxz
push
or
mov
inc
push
dec
inc
sarl
dec
sbb
inc
inc
fdivs
cmc
out
es
stos
inc
sub
push
cs
je
jns
gs
mov
in
cmp
mov
adc
call
jb
fdivrs
or
and
test
lds
sub
mov
push
outsb
lret
push
jge
xorl
sub
lods
addl
xchg
xchg
std
lods
sar
xchg
incl
add
js
pop
insl
jl
jae
aaa
cltd
jno
lds
popf
imul
lods
jae
inc
call
shrl
mov
mov
test
enter
mov
lock
xor
pop
mov
or
sbb
sub
add
mov
push
push
loopne
es
loopw
clc
cmp
aas
cmpsb
fisubs
js
cs
inc
xchg
ljmp
fwait
shlb
mov
jae
sarb
mov
dec
lahf
les
into
jne
stc
pop
lods
aaa
es
inc
loope
lahf
test
xchg
mov
jb
inc
aaa
mov
movl
inc
mov
fcomps
dec
pop
jno
mov
negb
pop
shrl
hlt
stos
push
orl
je
rorl
push
jno
and
mov
leave
mov
popf
mov
pushf
pop
mov
xchg
inc
loope
mov
int
sbb
pop
inc
sbb
mov
add
ss
adcl
jle
mov
dec
pop
jmp
jbe
inc
inc
inc
movsb
repz
jmp
inc
mov
sarl
shll
xor
push
sub
adc
out
ss
jns
xorl
lret
mov
dec
xor
xor
jecxz
inc
or
pop
dec
sarl
or
pop
mov
jmp
mov
or
mov
imul
mov
pop
mov
sbb
mov
cs
test
lock
out
leave
out
jmp
inc
xchg
xchg
cmp
or
jp
out
outsb
jecxz
xorl
ds
ret
cmp
add
jecxz
loopne
sub
cs
sti
sub
push
push
bound
sarb
sub
inc
les
xchg
aaa
inc
sti
ret
cmpl
cmp
out
insb
xor
hlt
test
fisubs
std
rcll
adc
fs
sbb
push
mov
xor
jne
cltd
dec
cbtw
clc
inc
push
mov
push
and
cmpsb
outsb
fsubl
pop
mov
mov
xchg
scas
jno
lret
inc
push
out
mov
xchg
push
mov
lea
aad
lcall
pop
je
mov
loop
jmp
enter
popf
push
sar
repnz
inc
lods
fimuls
inc
outsb
clc
jno
insl
cmpsl
das
mov
imul
cli
or
lock
xchg
adcl
mov
sub
push
mov
jne
into
lods
and
cmp
nop
mov
and
shlb
movsb
adc
xchg
jae
or
adc
lea
test
fisttpll
cmp
inc
adc
or
xchg
push
dec
xchg
lahf
fsubl
mov
in
cmp
sti
pusha
jbe
sbb
shll
pop
or
inc
in
xchg
bound
push
movsl
fdivrp
push
jne
in
scas
inc
je
sub
mov
push
xchg
cmc
add
or
arpl
test
sbb
lahf
enter
rcl
inc
pop
sub
mov
mov
dec
addr16
dec
inc
jmp
insl
test
ret
aaa
xchg
xor
decl
movl
push
arpl
xchg
scas
pop
push
add
mov
pushf
out
mov
and
mov
push
shlb
subl
mov
addb
hlt
pop
out
adcl
mov
xor
mov
stos
push
sub
or
je
pop
cmp
inc
jbe
adc
mov
pop
sbb
fs
sub
cltd
clc
addr16
mov
in
jle
mov
and
and
icebp
inc
pop
mov
shl
ret
add
out
push
push
out
fiadds
inc
icebp
loopne
mov
out
or
repnz
divb
scas
jmp
mov
lds
mov
loop
and
test
push
gs
psubq
pop
mov
cs
bound
ret
lods
repz
out
pop
shlb
ret
mov
add
insb
jo
hlt
adc
mov
jmp
gs
mov
xlat
repnz
outsb
mov
xchg
mov
hlt
mov
lcall
sub
jbe
fidivl
pusha
xchg
dec
add
in
stos
pop
mov
inc
pushw
cmpl
add
jbe
jg
xchg
inc
pop
xchg
mov
mov
in
popf
lock
dec
pop
add
std
xchg
adc
jbe
mov
lods
cmp
pop
subb
push
and
es
mov
inc
jle
ds
push
test
mov
sbb
lahf
outsb
mov
roll
or
xchg
adc
fs
xchg
mov
enter
aad
sub
mov
shr
add
lea
pop
dec
push
dec
mov
and
enter
lahf
lods
fidivrl
add
sar
push
xor
ret
xor
cmpsl
out
add
addr16
add
lret
push
sbb
stc
scas
jl
sti
pop
sbb
sub
sbb
push
mov
jo
mov
xchg
or
dec
push
push
and
aas
jns
dec
inc
cli
mov
notb
pcmpgtw
fwait
jge
cwtl
adc
aas
adc
gs
mov
pop
das
daa
pop
mov
into
inc
xor
jle
xor
xchg
mov
repnz
lods
in
sar
or
adc
cmp
sub
mov
pop
rorb
push
std
or
add
and
clc
ja
cmp
hlt
pminsw
pop
pushf
jb
mov
adc
mov
or
push
mov
pop
or
inc
xchg
pop
pusha
cmp
bound
imul
imul
nop
dec
add
dec
mov
lahf
cmpb
lret
sti
sbb
sahf
hlt
inc
lret
pop
xor
shrl
inc
cmpsb
dec
sub
test
mov
mov
inc
pop
adc
test
or
icebp
cmp
rcl
cmp
pop
mov
jnp
in
shr
mov
mov
scas
imull
enter
cmpsb
add
insl
imul
adc
add
add
mov
ss
dec
mov
push
out
cmc
pop
in
or
lret
nop
sub
and
pop
aaa
ljmp
fsubrs
and
dec
nop
jle
xchg
stos
stc
pop
enter
xchg
fstps
adc
inc
cmp
add
repz
inc
jns
imul
sub
push
and
jb
inc
packsswb
lock
pop
out
sbb
shll
ss
cmp
add
add
pop
push
xchg
xchg
mov
sahf
repz
cmp
aam
xor
jae
jne
and
pop
mov
inc
mov
stos
adcl
and
sub
sti
dec
cmp
sti
repnz
jnp
cmpsb
loope
sbb
cwtl
push
sbb
nop
or
and
stos
xlat
das
popa
popa
pop
inc
push
or
jo
jno
fstpl
mov
sub
add
shr
push
mov
lret
inc
arpl
mov
inc
sbb
and
fcomps
xor
mov
aaa
fnstcw
and
addl
sub
sbb
shll
mov
lahf
dec
jle
cld
repz
dec
int3
adc
inc
or
push
sbb
mov
hlt
jg
rcrl
loope
rcrb
push
push
push
inc
cmp
pop
scas
out
inc
cmp
pop
scas
enter
jg
jge
add
mov
sti
lret
lods
inc
xchg
mov
inc
fimull
cmp
movsb
dec
subb
fbld
movsb
ds
cmp
push
std
imulb
cwtl
jne
mov
add
dec
pop
push
cli
push
push
or
add
xchg
push
fldenv
outsl
cmp
ret
inc
mov
daa
fsubl
push
mov
aaa
ret
inc
jmp
fstl
mov
std
or
das
sar
insb
jle
fs
jb
push
xor
rol
in
ficoml
pop
or
jmp
mov
adc
cmpsb
mov
out
sbb
popf
dec
cli
push
mov
sti
movsl
cwtl
popf
movsl
std
ret
fadds
mov
or
test
fdivrl
mov
clc
mov
mov
and
mov
mov
pop
loopne
mov
pushf
fnsave
and
pop
xchg
nop
inc
add
sub
jno
xchg
add
or
mov
and
mov
sub
sub
mov
popf
jae
or
cs
xor
mov
into
insb
push
xchg
cmp
mov
stos
fcmovnu
push
xor
cmpb
sbb
cli
arpl
or
repz
dec
push
or
xor
ljmp
outsl
adc
inc
test
add
pushf
dec
ja
pop
imul
sub
mov
xchg
pop
mov
and
dec
repnz
cmpsb
imul
jmp
rorb
jl
pusha
fimull
push
cmp
inc
ret
fistps
mov
fildl
lcall
sub
sbb
mov
loop
cmc
dec
xlat
orb
push
scas
shrb
je
pop
xchg
daa
cmp
in
add
or
adc
cmp
lret
push
rcrl
xor
loopne
jno
mov
cmp
push
pop
adc
inc
lods
stc
into
fldcw
sti
mov
repz
jecxz
cmc
out
imul
and
arpl
add
jbe
xchg
loop
add
divb
loopne
adc
mov
xchg
jns
xchg
mov
shlb
imul
add
aam
push
scas
nop
nop
xlat
pop
xorl
pusha
iret
scas
stc
mov
in
jo
icebp
stos
stos
add
outsl
test
and
cmpsb
push
mov
jne
loop
cld
rolb
out
aad
pop
ret
cmp
pop
aas
inc
sbb
test
inc
fsub
cmpsb
mov
mov
cmp
out
icebp
lods
cmp
cmpsl
pop
rcrl
jbe
repz
sub
mov
push
xchg
loopne
rcll
lahf
xchg
inc
jb
push
pop
aas
sahf
lods
stos
dec
mov
aas
leave
sub
push
jmp
ja
push
mov
add
push
loopne
jb
lea
xor
fdivs
and
push
push
les
dec
cmpsl
clc
imul
xor
sub
xchg
sub
sbb
int3
scas
out
pop
mov
push
add
mov
xchg
jmp
loope
jae
jmp
add
out
daa
adc
icebp
jp
jno
push
aam
mov
or
xor
je
mov
mov
negl
jle
or
insb
fisttpl
fdivs
xchg
sub
mov
out
dec
inc
stos
movsl
push
mov
popl
adc
mov
jns
or
or
push
push
mov
pop
data16
mov
push
out
mov
inc
movsb
or
cmp
pop
imul
inc
in
or
ficomps
lds
inc
inc
add
push
mov
fmuls
iret
jns
lcall
sti
add
in
call
mov
test
scas
pop
cmp
mov
lods
faddl
add
loop
xchg
hlt
dec
xchg
pop
jle
and
iret
bound
mov
ss
add
aad
stos
sbb
mov
xchg
push
push
mov
or
dec
xor
movsl
push
popl
dec
mov
aad
data16
jecxz
in
and
cmc
and
push
ret
xor
iret
insl
mov
mov
cmp
scas
add
xlat
icebp
add
xchg
mov
mov
sbb
test
hlt
push
pop
sarl
mov
loope
cli
mov
sarb
mov
sbb
dec
mov
jge
daa
frndint
mov
js
cwtl
out
mov
in
shlb
pop
jnp
add
sub
lret
lret
clc
test
aam
cmp
std
xchg
std
xchg
mov
pushf
mov
add
xchg
mov
addr16
push
mov
imul
test
aas
xchg
cwtl
clc
sbb
pop
popf
scas
nop
xchg
sub
push
lds
nop
addr16
subl
sbb
loop
mov
jns
fsub
jge
sti
cmp
out
sbb
popf
lret
push
loop
repz
aad
lods
popf
sub
or
loop
xchg
jo
fisubrs
roll
pop
mov
daa
cmp
negb
fwait
bound
xor
cmp
les
mov
mov
sti
or
push
adc
sub
dec
cmp
mov
pop
insb
push
cmp
repz
mov
sbb
pop
out
push
out
pop
mov
mul
loope
scas
push
out
in
add
cltd
or
sbb
pop
bound
and
sbb
hlt
and
out
roll
insb
or
addb
pushf
or
xchg
mov
mov
neg
pop
cli
xchg
ja
out
xchg
sar
mov
push
cmp
xchg
fs
test
jmp
insb
dec
in
rcrb
imul
movsl
push
pop
lods
repnz
mov
nop
and
scas
mov
cmp
outsb
xor
or
dec
jmp
push
xor
call
or
jle
cmp
movsb
pop
fstps
or
cltd
fdivrl
jge
fldcw
mov
push
insl
dec
lock
add
scas
outsl
inc
xchg
icebp
mov
dec
or
movsl
addb
mov
inc
xchg
push
xchg
dec
cli
into
mov
mov
sar
movsb
gs
jne
xchg
daa
in
jae
xchg
inc
repz
das
xor
push
or
mov
and
repz
mov
ret
insb
pop
jns
lds
cmpsb
xor
pop
cmp
ja
repnz
push
orl
enter
pop
inc
xchg
xchg
out
scas
inc
rcr
int
add
sub
and
fmul
jp
lods
lock
mov
bound
add
xchg
dec
dec
and
inc
add
mov
push
mov
mov
je
dec
or
cld
cmp
fwait
cmp
xor
sbb
cltd
mov
movsl
mov
inc
addr16
pop
sub
pop
jecxz
add
rorb
xchg
lds
sti
add
or
movsb
test
in
pop
out
fdiv
fcmovnbe
scas
and
xchg
cwtl
mov
fdivrl
inc
pop
cltd
lret
lods
inc
insb
ret
jno
dec
out
fsubs
mov
sub
cld
andb
and
cmp
fnsave
stos
xchg
mov
xlat
nop
mov
cli
xchg
mov
icebp
lcall
push
dec
int
jge
je
or
pop
jg
pop
add
cwtl
loop
add
enter
test
jbe
cmp
mov
addr16
imul
rorl
loopne
sti
cltd
jae
lret
adc
mov
dec
stos
notl
pop
xor
cmp
loop
jbe
pop
xchg
cld
and
push
push
test
jb
test
or
sbb
pop
fildll
pop
push
stc
je
fnsave
popf
push
mov
add
pop
dec
adc
pop
push
cmp
cmp
fdivrl
lcall
add
mov
rolb
icebp
into
lret
mov
iret
sub
cmp
std
arpl
jg
mov
mov
imul
mov
fldenv
sbb
enter
clc
pop
and
bnd
mov
movsl
xchg
pop
enter
orb
filds
fimull
clc
jmp
mov
adc
xchg
add
call
sub
cmpsl
inc
imul
in
pop
popf
daa
daa
mov
mov
std
mov
shll
fld
mov
icebp
pop
notb
lods
mov
xchg
test
dec
out
mov
lcall
cld
test
sbb
in
sbbl
sbb
pop
sub
test
lea
inc
daa
or
nop
xor
mov
adc
xor
and
pusha
and
data16
mov
nop
lret
mov
jns
lods
sub
sub
outsl
mov
and
in
test
movsb
jb
dec
nop
lods
cwtl
pop
cmp
cmp
inc
aas
inc
gs
lock
or
cld
mov
xor
in
inc
outsb
add
and
adcl
or
pusha
push
xor
add
inc
pushf
aam
arpl
xor
stos
lret
lret
add
sub
push
rcr
in
adcl
pop
mov
push
mov
fcmovbe
add
jmp
cmpsl
inc
aad
jge
adc
fwait
xchg
or
subb
add
in
enter
leave
sub
pop
xchg
xchg
jbe
jp
push
loopne
xor
rorl
imul
mov
adc
ss
jl
jl
push
ret
adc
mov
pop
adc
test
lods
lret
popa
cs
cmp
repz
cmp
ja
mov
scas
movsl
rcrb
fs
int
inc
push
cmp
jl
loopne
ss
sbb
lcall
dec
xor
loopne
inc
lods
xchg
cltd
add
loop
roll
push
lods
add
cmpsb
push
xor
repnz
js
faddl
pop
pop
shll
movsl
pop
aaa
xlat
and
outsb
adc
ss
test
nop
push
xchg
xchg
adc
cmc
out
pop
outsb
mov
push
aas
and
pop
mov
mov
lea
movsl
xor
sub
jno
repz
adc
inc
sub
and
xor
sbb
mov
enter
outsl
mov
push
fbstp
mov
dec
mov
xchg
leave
xor
stos
out
jne
test
cmp
inc
lods
loop
sbb
sbb
hlt
mov
adc
rorb
xchg
add
pop
mov
ficompl
jo
ret
into
xor
pop
dec
js
iret
mov
or
and
ficomps
lret
mov
mov
or
push
es
push
cmp
mov
insb
inc
mov
std
das
pop
sbb
xchg
adc
xor
cmp
lret
addr16
push
and
ds
push
movsl
sub
mov
adc
sub
lret
cs
pop
mov
cmp
sub
pop
loop
jecxz
mov
insb
inc
inc
pop
xchg
testl
test
faddl
popa
rcrl
repnz
sarb
adc
mov
lods
or
pop
inc
aas
lret
sti
insl
les
pop
std
roll
cs
loope
iret
mov
sbb
stc
sbb
dec
and
push
add
sub
inc
cmp
sbb
lock
mov
jmp
sub
jecxz
push
mov
shrl
or
dec
fiaddl
sbb
and
lds
mov
aad
and
nop
pop
jnp
mov
jl
in
mov
jnp
cmpsl
jle
push
sub
and
scas
push
js
cmp
sbb
hlt
cli
sub
pop
dec
mov
xchg
in
xchg
lds
jle
jae
inc
mov
imulb
lret
lods
jne
orl
imul
mov
xchg
and
mov
pop
mov
add
add
gs
fstpl
sbb
test
cmp
ds
popa
rcrb
insl
ds
aas
pop
push
cld
mov
mov
adc
mov
lods
call
stos
or
push
imul
mov
cmp
cmpsb
aas
jnp
push
xor
cltd
adc
add
push
into
jle
mov
gs
sub
mov
adc
into
imul
std
ds
and
ret
stc
inc
xchg
stos
scas
mov
push
call
fisubrs
pop
xchg
or
jno
add
xor
es
ja
imul
scas
imul
mov
add
inc
lahf
xchg
and
dec
add
jle
mul
xchg
cmp
sbb
scas
mov
mov
imul
push
or
shlb
xchg
inc
xchg
daa
or
inc
pop
mov
stc
push
cmp
roll
pusha
mov
lods
jns
adc
sub
jmp
sub
xor
out
mov
pop
iret
sti
jnp
mov
idivb
xchg
mov
sbbb
aad
sarb
out
in
dec
jmp
mov
imul
push
mov
ljmp
mov
arpl
lret
pop
inc
lahf
dec
sti
mov
push
xchg
insl
imul
inc
movsb
and
mov
push
xchg
ljmp
fiaddl
push
sub
ret
push
aam
jl
sbb
scas
mov
jmp
mov
push
inc
test
mov
inc
mov
sub
cwtl
testl
mov
jge
sub
jne
lcall
sub
shrb
or
imul
pmulhw
jae
mov
cltd
icebp
inc
cmp
test
repz
mov
mov
mov
ds
push
sub
jle
adc
popa
inc
cmp
fimull
inc
sub
std
insb
aad
aam
adc
push
in
nop
dec
gs
enter
in
cmp
dec
enter
inc
int3
shlb
repz
and
push
cli
std
mov
out
test
xchg
test
mov
in
out
or
and
push
cmp
mov
mov
add
adc
mov
in
pop
sar
cmpsb
pusha
adc
pop
jp
xor
push
push
adc
lea
add
test
jns
das
sti
mov
cmp
loop
rolb
sbb
xchg
in
mov
lods
in
fs
jns
and
sub
aad
adc
jecxz
dec
in
inc
je
sub
mov
hlt
div
mov
jecxz
lea
jnp
jbe
mov
mov
dec
movsb
cli
mov
or
sarl
and
dec
dec
mulb
out
sub
push
adc
sbb
mov
sbb
mov
test
pop
lahf
ret
fwait
sub
mov
loope
adc
shrb
or
les
cmpsl
data16
sbb
fbld
mov
imul
and
push
mov
inc
enter
xchg
xchg
mov
push
outsl
xor
in
jge
in
push
xor
mov
js
pop
push
jae
dec
inc
ljmp
test
cmpsb
subb
push
imul
fabs
int3
fnstsw
inc
xor
mov
dec
mov
pop
and
sub
or
lahf
aad
or
mov
mov
repnz
pusha
cmpsl
aas
aad
gs
add
cmpsl
fwait
in
push
nop
lods
out
inc
cmpsb
jg
je
or
jmp
push
inc
sbb
arpl
jae
xchg
fisubl
push
pop
mov
xchg
and
nop
adc
mov
pusha
mov
shlb
push
xor
mov
fs
and
int3
mov
mov
ret
js
mov
shrb
ret
adc
cmc
pop
inc
push
jle
pop
inc
je
ljmp
xlat
xor
pop
cs
mov
fs
adc
call
push
mov
in
mov
jnp
add
inc
or
test
push
insl
mov
xchg
mov
int
test
jg
push
dec
faddl
jecxz
mov
cmp
push
cli
cltd
cmp
dec
mov
sarl
or
sub
mov
or
lea
push
jle
shll
hlt
xorb
push
mov
lahf
mov
repz
mov
popf
je
adc
loope
ljmp
push
ja
cmpsl
xor
cmp
sahf
sub
xchg
pop
gs
mov
mov
xor
cmp
mov
ret
cmpsb
pop
sub
or
popf
xor
dec
push
adc
nop
mov
ret
add
adc
popl
shl
sbb
leave
scas
or
lds
mov
cli
sub
xchg
inc
inc
popf
or
scas
adc
bound
xor
lret
in
push
in
push
jb
stos
xchg
mov
sub
mov
add
mov
mov
and
aaa
mov
push
jle
dec
ljmp
mov
jo
mov
xchg
push
unpcklps
test
ljmp
mov
rcrl
jae
bound
loopne
mov
mov
mov
iret
ret
lods
movsl
ja
out
sub
fnstsw
fcoms
mov
test
jg
or
lea
xchg
dec
dec
pop
in
dec
scas
push
jno
pop
out
sub
insl
jae
mov
mov
push
mov
xor
lret
jno
push
cli
and
jmp
popa
out
sahf
mov
mov
scas
mov
or
add
pusha
lds
jmp
leave
test
push
stos
sbb
sbb
int3
sbb
and
xchg
xchg
mov
cmp
fstps
add
sti
mov
rol
mov
and
leave
test
imul
sub
sub
jle
enter
mov
movsb
ret
gs
jae
pop
mov
inc
lds
push
push
jo
or
jp
dec
dec
push
or
push
xor
leave
sbb
aas
lret
dec
popf
fisttpll
jge
jns
lea
jle
bound
mov
hlt
subb
arpl
add
fisttpl
lds
enter
mov
popa
mov
js
or
imul
call
jae
sub
stos
fidivrs
mov
lcall
inc
popf
repnz
sbb
mov
and
ficomps
test
jns
push
add
lret
nop
xorb
sub
cmp
out
dec
popa
ror
pop
lods
lock
pop
dec
stos
dec
sbb
dec
gs
not
xchg
repnz
movsl
dec
je
movsl
testl
lods
sbb
jb
add
sub
out
lea
test
lods
xchg
inc
scas
stc
aad
negb
xchg
xchg
jge
mov
inc
js
imul
imul
lcall
cld
or
sub
inc
pusha
push
repz
cmp
push
sti
mov
movsl
jne
pop
sub
adc
sub
sbb
lock
daa
insb
adc
cmpsl
add
and
add
xlat
in
push
subl
mov
fcom
adc
out
sbb
adc
pop
push
push
or
pusha
xchg
xlat
daa
add
sbb
sbb
sub
cmpsb
jle
pop
filds
jmp
inc
jl
adc
lods
imul
std
jmp
cmp
xor
xchg
jle
pop
dec
mov
xor
mov
cwtl
sbb
cmpsl
rorl
inc
cmp
add
lret
xor
mov
cmpsb
imul
sti
lahf
sub
cmp
sub
lods
fildll
stos
das
mov
cmp
in
push
xchg
add
cld
dec
add
inc
mov
jecxz
push
mov
sub
pop
mov
andl
pop
or
mov
cli
jne
dec
out
cld
int
hlt
add
fmulp
int
dec
hlt
and
jne
clc
jp
lock
out
insl
out
jns
imul
ret
mov
sti
dec
cmc
cmp
bound
push
test
adc
lds
ljmp
and
fbstp
test
mov
mov
jp
dec
xor
repnz
jmp
cld
hlt
out
jo
sbb
xor
push
add
arpl
andl
int3
jg
and
or
xor
repnz
fnstcw
xor
jl
lcall
lcall
lret
aad
cmp
jo
inc
pop
insb
dec
adc
test
dec
xchg
sub
mov
out
or
ret
out
xchg
std
jmp
out
push
bound
ss
shll
adc
or
sbb
push
fidivrl
ljmp
push
jb
sub
test
mov
cmp
pop
mov
jne
lret
sbb
repz
data16
addr16
ljmp
jge
into
pop
dec
fwait
cmpsl
and
data16
int3
mov
out
cmc
mov
dec
movsb
or
mov
aas
inc
and
mov
mov
fstpt
sbb
aas
and
call
inc
dec
mov
frstor
cmp
cmp
push
pop
test
gs
cs
push
xor
and
xchg
push
fistpl
pushf
shrl
mov
inc
fcoms
imul
or
scas
mov
insb
sbb
mov
stos
add
int3
lea
add
addb
mov
fldcw
cmp
jmp
inc
push
mov
outsb
inc
inc
push
cmp
jne
sti
rorl
and
or
sub
add
dec
or
push
movsb
xchg
cltd
push
sbb
inc
sti
inc
aam
loope
test
inc
pop
mov
lahf
push
dec
outsl
test
das
inc
lcall
sbb
jg
and
mov
lods
addr16
repnz
aam
pop
and
adc
mov
push
leave
enter
sbb
adc
mov
mov
inc
outsb
sbb
es
xor
addr16
jmp
rcrl
inc
fwait
inc
aam
jl
mov
push
sub
pusha
xchg
mov
add
test
std
aas
cmpsl
ret
in
dec
repz
neg
inc
ds
aas
jg
add
and
or
jns
fmul
pop
or
in
aad
mov
push
mov
xor
add
fists
mov
shll
test
sbb
adc
movsl
sbb
mov
mov
mov
sub
mov
ja
nop
mov
dec
sub
cmpsb
fcomp
mov
pcmpeqw
sub
ljmp
xchg
adc
test
addr16
mov
jno
push
or
dec
push
or
pop
loope
xchg
popa
scas
sub
xchg
sbb
sti
aad
movsl
or
orl
jg
enter
rcrb
sub
cmc
clc
cmp
push
push
fadds
jge
add
push
push
fnsave
push
neg
sarl
ljmp
std
adc
cmp
or
movsb
xor
sarb
rcrl
or
dec
jmp
enter
icebp
in
push
add
jne
lea
add
add
mov
repnz
addr16
mov
mov
mov
push
sub
push
cmpsl
cli
fwait
jnp
cs
ds
cltd
cs
pop
scas
cs
cwtl
fwait
mov
ja
push
gs
mov
pushf
ss
cs
test
notb
sbb
rorb
push
lret
test
jmp
loope
mov
xchg
outsl
cmpsl
jp
ss
push
popl
out
mov
std
inc
sti
stc
cld
call
cmp
aam
adc
adc
mov
ja
mov
sub
mov
add
in
lahf
clc
lds
insb
loope
pop
into
cmp
add
rcll
jmp
adc
or
add
leave
push
mov
fistl
ret
decl
jmp
daa
sbb
outsb
dec
xchg
jmp
pop
or
mov
jmp
dec
mov
mov
adc
dec
aaa
mov
and
pop
jl
jae
pushw
sarb
cmp
lea
pop
cwtl
adc
fidivs
xchg
fldl
sahf
pop
or
sub
adc
add
hlt
mov
bound
jmp
or
in
and
inc
mov
cmp
pusha
scas
mov
loope
sbb
push
and
lahf
jne
jb
lret
mov
ficompl
xor
clc
fdivr
fstpt
iret
push
lret
sub
sub
fwait
test
adcl
inc
jo
push
jg
in
jno
push
add
push
inc
adc
sbb
sub
push
push
imul
cli
insb
mov
inc
xlat
push
popa
cmp
stos
pop
lahf
mov
xchg
mov
scas
jae
lret
in
push
stos
imul
icebp
or
pop
mov
inc
cltd
jmp
pop
fcomps
and
aas
adc
imul
and
mov
repnz
sub
xorl
ret
sub
xor
call
pop
pop
and
pop
and
out
out
mov
into
iret
icebp
and
mov
fwait
pop
inc
jb
push
test
and
rol
loopne
movsb
sti
les
xor
cld
ds
loope
dec
mov
into
mov
pop
stos
pop
std
xchg
in
jbe
jnp
adc
inc
rcll
andps
xchg
aaa
push
cmp
cmp
das
js
add
jae
sbb
addr16
in
call
test
pop
mov
jo
fisttpll
outsl
lods
or
push
push
add
push
sti
xchg
xor
nop
leave
mov
lcall
sbb
cmp
test
pushf
std
mov
mov
loope
xor
shll
inc
iret
cli
xchg
mov
leave
cmpsl
aad
xchg
stos
pushf
addr16
sub
clc
popf
lret
test
fs
mov
insl
xchg
or
xorb
out
ficoms
popf
sbb
xchg
push
notl
dec
lret
jnp
xor
pop
mov
sbb
mov
or
adc
push
mov
pop
adc
repz
jmp
xor
fcoml
mul
movsl
stos
rcrb
das
adc
sbb
mov
ljmp
int
and
insb
dec
fcomps
cmpsl
cs
outsl
push
mov
or
push
xlat
movsb
adc
jmp
inc
lret
loopne
mov
or
cs
adc
test
xor
and
xchg
addr16
enter
mov
jge
stos
loopne
sbb
adc
xchg
xchg
adc
fcoml
or
inc
and
jp
jecxz
stos
notb
mov
push
xchg
mov
daa
inc
inc
les
insb
dec
lds
or
adc
sub
cmp
inc
les
cmp
ret
imul
scas
aam
test
inc
add
popf
lret
pop
mov
data16
aaa
fnsave
ds
dec
jnp
add
lock
arpl
and
cmpsl
inc
push
iret
push
jecxz
push
mov
test
in
mov
dec
mov
xchg
sahf
leave
enter
or
xchg
sbb
xlat
outsb
cmc
lock
pop
mov
std
out
inc
mov
or
mov
shll
aam
mov
lahf
lcall
in
movsb
push
fwait
xor
jae
sub
dec
hlt
and
pop
fnsave
cmpsb
fimuls
lahf
push
mov
cmp
sbb
mov
adc
out
push
shr
jg
dec
add
cmp
test
pop
in
adc
ljmp
loope
xor
repnz
dec
jbe
hlt
jmp
hlt
out
add
ja
inc
mov
test
push
dec
es
lret
sbb
jb
jb
mov
sbb
das
std
data16
les
js
push
xchg
loope
data16
jle
aaa
xchg
enter
add
cli
call
push
stos
adc
push
push
orl
orb
in
les
insb
xchg
mov
stos
dec
and
sarl
cmp
push
sar
cmpsb
xchg
nop
push
cmpsl
jo
movsl
dec
lds
push
mov
aaa
mov
xchg
push
push
sub
call
xchg
pop
loope
pop
andl
in
add
aaa
xor
xor
lcall
push
shl
rcll
ret
jns
sbb
cwtl
adc
loope
jg
xor
inc
test
mov
mov
mov
pop
bound
dec
add
mov
int3
js
fistpll
mov
cltd
scas
call
jmp
std
enter
fucomp
cltd
mov
xlat
test
mov
adc
in
ds
shr
fsubp
out
jmp
scas
call
mov
loopne
movsl
call
fcomps
or
out
fistl
jb
lds
cld
xchg
jmp
mov
scas
icebp
jo
mov
push
pop
mov
or
je
lods
mov
jno
add
mov
pop
lock
mov
cmp
test
roll
push
lahf
movsl
jns
test
in
lret
nop
cmpsb
jb
mov
lods
pop
xor
ret
sbb
jbe
out
ret
daa
add
jecxz
jo
aaa
xchg
popf
out
mov
mov
adcb
and
call
sub
cmc
fisubl
cwtl
jecxz
scas
jne
mov
fwait
mulb
mov
cwtl
loope
cwtl
mov
lea
pop
movb
aad
test
mov
xor
aaa
mov
cmpsl
scas
cmc
push
jg
iret
inc
mov
jp
ficomps
mov
or
or
test
sbb
sarb
rcrl
cwtl
out
jae
popf
sbb
add
xchg
je
iret
lahf
fwait
mov
ret
ror
fwait
out
rcrb
jno
lret
push
mov
invd
mov
es
inc
fiadds
xor
cmp
stos
xchg
andb
data16
mov
or
add
lods
aaa
inc
imul
addl
xchg
adc
fcomip
mov
daa
roll
pop
scas
dec
test
pop
xor
inc
xchg
jo
add
add
sub
fcmovnbe
mov
jno
mov
sub
jl
insl
loope
mov
mov
je
or
std
aaa
mov
pop
mov
sbb
xchg
xchg
fs
xor
popf
lock
cmp
or
adc
add
adc
push
or
mov
shrl
ret
adc
enter
ja
xchg
mov
push
insb
xor
sub
jl
push
je
jbe
mov
add
fildll
insl
ljmp
movsl
inc
add
adc
mov
xchg
je
inc
and
xchg
je
sub
sub
fsubs
lahf
jg
push
imul
out
inc
sub
clc
out
xchg
arpl
push
sbb
mov
ret
int3
lea
enter
xchg
xlat
test
add
xor
lods
sub
les
mov
enter
jnp,pt
out
or
movsb
sub
and
jle
inc
in
jecxz
dec
ja
and
xlat
and
fcoms
dec
xor
shll
rclb
dec
nop
subl
push
sbb
xor
dec
jle
mov
fsubrl
push
rcrl
loopne
inc
and
mov
xor
adc
xor
loop
dec
shrb
jp
outsb
ffreep
in
mov
xor
enter
pop
mov
mov
jmp
das
das
push
fisubrs
dec
dec
sti
out
push
aam
cltd
and
sahf
xchg
stos
pop
lret
sbb
bound
pop
mov
sub
jp
sbb
and
idiv
mov
aad
adc
aaa
std
rorl
jnp
imul
jge
roll
loopne
bound
add
cmp
or
adc
in
jge
xchg
cltd
shrl
ret
push
mov
jne
shll
out
xchg
xchg
insb
lcall
lcall
cmp
jmp
repnz
gs
pop
cs
inc
aad
int
inc
aad
jg
sub
data16
call
sbb
xchg
mov
sti
xor
test
ds
in
stos
outsl
shll
push
inc
movsl
dec
fldt
in
jne
cmpsl
jl
push
add
adcl
aad
pop
fisttps
mov
xchg
add
cmp
aam
lcall
adc
or
jmp
je
mov
call
jb
mov
cmp
push
popf
out
add
mov
mov
insb
and
mov
sub
mov
mov
int3
subb
sub
lret
fimull
add
inc
imul
sub
xchg
push
jge
xchg
mov
movsb
xchg
jge
mov
mov
loopne
pop
shrb
push
aam
sub
repnz
lret
xchg
push
in
ljmp
jno
xchg
mov
out
pop
pop
inc
les
fldcw
cli
sbb
rolb
add
pop
mov
inc
mov
mov
inc
jl
inc
push
mov
pop
cld
repz
jle
aam
pushf
jl
fs
arpl
dec
std
jno
sbb
stc
mov
jmp
push
shll
xchg
xor
xor
ret
inc
add
or
dec
loopne
sbb
inc
adc
and
mov
inc
or
loope
sub
aad
mov
mov
test
shl
popa
xor
inc
stos
jl
mov
stc
test
mov
incb
ret
and
ja
aaa
mov
inc
jae
jp
jns
mov
or
in
dec
add
jmp
out
pusha
add
das
inc
inc
cmp
pop
mov
leave
lret
or
shll
nop
mov
mov
in
hlt
mov
sbb
inc
aad
outsb
xor
mov
mov
dec
stos
enter
add
mov
sub
cmp
sub
orb
insl
fwait
std
sahf
or
cmpsl
aam
xchg
test
mov
dec
xchg
dec
lret
or
pusha
adc
jmp
and
pop
ss
lahf
cmp
xchg
movsl
pop
out
lea
add
mov
nop
jge
sbb
mov
repnz
test
jp
inc
add
mov
xchg
gs
dec
jnp
inc
xlat
push
mov
cmp
inc
adc
jae
sub
movsb
and
scas
push
rorb
add
mov
arpl
xor
jae
std
pop
push
cmovns
push
inc
ds
movups
imul
inc
xor
sub
das
pusha
dec
fidivs
icebp
int3
fwait
sarl
iret
shrl
mov
ja
imul
icebp
test
scas
hlt
out
cmp
push
inc
dec
sub
movsb
xlat
sbb
negl
fists
xlat
mov
iret
fwait
mov
testb
std
pop
pop
push
outsb
inc
cmp
mov
shll
stos
push
mov
push
pop
sbb
xchg
add
ret
jbe
pop
shrb
adc
addr16
and
lods
add
das
out
shlb
call
cmc
push
adc
jae
xchg
es
jmp
jbe
add
xor
dec
xchg
sub
mov
nop
add
orb
cmp
mov
sahf
iret
scas
or
lret
insb
sub
fcomps
mov
inc
mov
xor
fistpll
out
aas
in
stos
sbb
mov
inc
jno
jno
jns
dec
ficoml
in
test
fdivs
ret
loope
gs
roll
andl
fsubl
sarb
jmp
dec
faddl
xor
add
xchg
adc
add
xlat
mov
cmpsl
lahf
xor
in
clc
adc
pop
scas
iret
in
stos
insb
inc
ja
push
cmpsl
imul
dec
dec
pop
jl
mov
mov
enter
and
sub
sbb
sbb
push
pop
mov
rcl
push
js
lea
out
or
dec
aam
cltd
pop
pop
std
shll
xor
rorb
out
inc
stos
ja
repz
adc
lahf
into
and
mov
push
push
or
scas
cmc
shll
add
jnp
pop
add
leave
hlt
add
out
cs
lods
nop
test
test
daa
int3
cli
and
dec
dec
aaa
loopne
ficoms
je
mov
mov
iret
aam
andb
testb
mov
xchg
xor
sbb
push
sub
int
aad
sbb
lahf
in
mov
call
xchg
nop
cmp
outsb
xchg
mov
xor
inc
nop
aas
enter
lret
jecxz
xorl
jmp
fildl
shl
dec
push
dec
shlb
pop
inc
loop
int
mov
add
addl
les
jb
jnp
outsl
sbb
das
jns
test
cmp
or
ret
sar
mov
into
sub
jo
sub
push
add
mov
inc
std
or
ficoms
loopne
ss
sbb
adc
jl
push
aam
add
mov
test
in
dec
adc
jae
pop
addr16
inc
mov
into
sbb
enter
out
xchg
pop
xor
sbb
andb
inc
push
fcmovnu
dec
es
push
pop
pop
shr
mov
testb
pusha
lods
test
sbb
addr16
scas
mul
out
cli
xchg
stos
xchg
xor
out
dec
xor
jnp
jecxz
mov
add
dec
jge
bound
xchg
clc
and
aam
sti
jge
jnp
out
pushl
xchg
lods
in
pop
and
call
testl
xchg
jp
or
push
add
xchg
lret
jns
bound
bnd
pop
cld
and
gs
pop
into
or
dec
lods
jbe
sbb
push
xlat
sahf
sbb
mov
in
test
icebp
test
jo
cmc
sub
lock
xchg
mov
mov
mov
push
cld
dec
movsl
ss
sub
mov
mov
adc
jg
pushf
sbb
jne
push
pop
insl
addr16
insl
std
inc
testb
sbb
imul
jmp
dec
cmpsl
mov
sbb
add
pop
into
stc
sub
push
fwait
dec
dec
jmp
pop
lret
cmpsb
dec
push
mov
add
inc
sbb
ljmp
icebp
pop
sti
es
in
outsb
mov
add
dec
add
xor
das
movsl
xchg
mov
adcl
xchg
out
mov
jnp
outsl
test
fdivrs
fisubrs
dec
sti
sbb
cwtl
std
sbb
mov
adc
jg
dec
in
ds
add
in
xchg
pop
scas
xchg
andl
test
dec
dec
sbb
ljmp
clc
pop
aam
insl
cltd
imul
jmp
mov
mov
cmp
and
inc
in
shll
pop
sbb
pop
and
icebp
sbb
adc
jo
dec
jp
loop
gs
fwait
pop
clc
shll
inc
mulb
sub
insl
xor
xchg
cmp
sbb
out
push
sti
sbb
jne,pt
mov
out
sub
test
sti
xchg
repz
mov
fcomip
cmp
bound
or
test
push
and
lods
lret
fsts
fldenv
cld
imul
nop
mov
cmpsl
sbb
out
es
mov
lods
in
cwtl
test
sbb
rclb
jb
jnp
or
fs
mov
xchg
pop
sub
jmp
mov
sarl
cmp
xor
or
sar
push
inc
jmp
fwait
mov
jle
adc
inc
ja
or
out
rcll
loop
data16
insb
sub
aaa
pop
adc
mov
test
mov
adcl
add
sbb
in
sbb
and
mov
ret
xchg
jo
pop
cmp
out
in
dec
gs
or
ljmp
add
outsl
stos
jno
lret
pop
push
pop
rorl
fnstsw
jbe
out
cltd
pop
and
shll
gs
outsb
push
popf
push
arpl
adc
ljmp
lods
cmc
mov
testl
mov
jne
push
sub
gs
movsl
je
pop
push
mov
cmp
cmp
hlt
stos
lret
out
es
pushaw
sub
push
out
sub
ss
int3
cmpsl
push
jno
out
adc
jns
sbb
les
aad
in
xchg
cmp
mov
pusha
xor
divl
mov
mov
scas
popf
pop
fnsave
shr
jns
pushf
sub
out
xchg
pop
test
int
sarl
imul
or
mov
imul
mov
pop
lock
jl,pn
push
mov
lock
mov
mov
daa
in
in
mov
cmp
popf
ljmp
adc
dec
addr16
or
cmp
cmp
stos
fisttps
lret
enter
shlb
mov
icebp
pop
in
andb
loopne
push
pop
sbb
mov
adc
les
jmp
test
pop
ljmp
mov
and
jbe
push
push
dec
fdiv
subl
xchg
stos
sbb
xlat
pop
mov
shld
mov
movsb
lea
jns
fdivl
mov
add
or
mov
aaa
add
repz
sbb
or
adc
add
jo
fcomip
dec
insl
lea
in
add
push
xlat
ret
jae
xor
sub
cltd
into
mov
dec
push
addr16
jae
les
dec
outsb
rol
imul
arpl
dec
xor
xchg
jb
and
fmull
adc
scas
xchg
test
mov
jl
bound
push
outsb
or
xchg
mov
repz
das
or
lods
xchg
mov
mov
xor
in
hlt
pusha
inc
stc
out
and
mov
xor
cmpsb
roll
fldenv
pop
or
repz
push
test
mov
aaa
jns
mov
jnp
sub
sti
push
ret
out
push
bound
sub
scas
rcrl
push
ja
cmp
dec
xorb
out
pop
xchg
out
xchg
clc
inc
lods
push
push
subb
mov
sbb
jmp
loopne
xor
test
rorl
adc
fadd
setne
sbb
into
sub
cld
jmp
sbb
add
push
adc
movsl
shll
xchg
icebp
and
out
xchg
xchg
addr16
pop
cmp
dec
add
cmp
xor
mov
and
jle
add
xor
repnz
xchg
push
out
ds
int3
mov
stos
dec
and
jle
dec
inc
and
scas
lret
sub
gs
mov
dec
jle
ljmp
insl
or
mov
pop
aam
xchg
sar
jecxz
mov
imul
sar
scas
out
pop
insb
cs
fldl2t
repz
out
sahf
or
cs
mov
sbb
ds
ret
inc
or
loope
push
imul
or
iret
mov
push
in
mov
inc
cmp
jp
aam
jno
fiadds
cmpsb
addr16
es
mov
cmp
std
add
mov
in
add
stc
jbe
lret
pop
data16
or
push
mov
mov
pop
xchg
insl
jns
sub
pushf
mov
jg
arpl
fnstcw
push
pop
inc
es
popa
bound
lock
aam
fcmove
or
bound
movsl
jnp
lret
jno
sahf
xor
insl
and
sarb
fistpl
arpl
movsl
clc
or
adc
adc
jle
adc
leave
push
adc
sub
push
xchg
loope
dec
dec
loope
inc
mov
dec
scas
ret
jl
cli
out
push
lahf
push
into
add
push
shll
fldcw
nop
in
lret
add
inc
mov
xchg
ja
dec
adc
out
stos
lcall
mov
lea
pushf
shl
lea
fwait
sbb
loop
fisttps
andb
mov
subl
shll
daa
sbb
cmc
inc
xchg
leave
and
push
jmp
insl
cli
fwait
inc
jle
hlt
push
jl
jl
xor
imul
cmp
pusha
cwtl
lds
imul
subb
loopne
xor
sub
cli
movsb
jmp
stc
out
aad
lahf
dec
inc
mov
dec
pop
les
jl
aas
cli
adc
stos
lea
mov
jbe
or
add
nop
sbb
into
int
mov
lcall
inc
insb
mov
ret
mov
and
jno
clc
fucomp
sub
push
ss
pop
mov
mov
jb
push
jmp
add
and
and
fldln2
in
and
jne
aad
lds
mov
cld
jecxz
jg
mov
ljmp
fldl
jl
repnz
in
mov
add
leave
test
mov
or
jge
and
mov
sbb
loopne
and
test
test
cltd
insl
add
jp
test
dec
jb
nop
jle
and
mov
jnp
mov
loope
jg
shll
cltd
in
movsb
scas
aas
xchg
insl
sbb
dec
jmp
or
xchg
sub
enter
adc
add
test
out
out
stos
lret
aas
jp
push
jmp
fidivl
mov
xchg
inc
daa
mov
in
lcall
mov
jne
es
mov
add
lea
push
mov
cmpsb
jl
popa
sbb
js
das
popf
rep
out
jl
sub
add
cmp
sub
aam
sbb
sub
lahf
rolb
pop
adc
mov
inc
aas
adcb
out
ret
jnp
sub
jg
lcall
mov
jnp
cmp
out
or
push
aaa
js
cmp
cmc
mov
sbb
movsb
incb
sub
imul
xor
mov
adc
push
xchg
rorb
mov
and
outsl
subl
or
jno
out
cmpsl
push
mov
imul
xlat
inc
out
push
mov
das
cmp
add
jmp
jns
mov
jmp
cvtps2pd
pop
jmp
das
in
xchg
clc
imul
loopne
xchg
push
xor
pop
lock
cli
fdiv
cld
das
aam
loopne
or
and
mov
cltd
scas
or
or
loope
sbb
xchg
adc
in
sub
leave
popa
mov
sbb
data16
jns
lea
mov
iret
rcrb
popf
test
ds
jmp
jae
roll
bound
pop
int
mov
jae
mov
or
emms
int
lock
insl
out
xlat
ss
mov
xchg
daa
push
dec
movsb
pop
jae
jb
imul
mov
loopne
test
stc
loop
mov
mov
leave
test
movsl
les
xlat
sarl
decl
push
jecxz
jnp
push
ret
pop
je
loop
into
sar
enter
jmp
lret
repnz
mov
lods
xchg
nop
cmpl
aad
push
in
and
into
and
mov
inc
or
mov
insb
mov
adc
xchg
addl
push
sbb
shl
lds
nop
mov
sub
rolb
rcrl
daa
pop
add
lcall
add
dec
mov
out
push
sub
cmpl
pop
mov
mov
or
dec
pop
and
pop
lret
jle
adc
push
pop
out
or
push
push
lcall
xor
hlt
mov
lods
xchg
fiaddl
and
enter
je
into
lret
pop
mov
test
movsl
icebp
mov
mov
test
out
sbb
pusha
pop
and
adc
xor
push
lock
dec
sub
pop
inc
cmp
xor
lock
lret
loope
jmp
testb
sti
push
sarb
mulb
rcll
cmpsb
ret
adc
test
shll
jbe
fildl
lds
int3
imul
fadd
sub
inc
in
ljmp
mov
push
fmull
push
in
xchg
in
push
mov
data16
into
sub
int3
fisubrl
daa
test
out
push
lock
loopne
ja
repnz
cwtl
push
fwait
xchg
inc
mov
je
pop
test
or
cltd
mov
divb
pop
adc
aas
sub
cwtl
or
and
mov
fsubrl
insl
push
fwait
lahf
mov
xchg
test
jmp
mov
cmp
dec
sahf
xchg
es
leave
or
mov
orb
or
push
into
mov
subb
add
mov
pop
adc
push
sbb
xchg
push
xchg
pop
lds
inc
xchg
inc
and
mov
out
cmp
rclb
cs
stc
adcl
pop
push
out
int3
lahf
dec
xchg
xchg
xchg
out
push
clc
sbb
enter
sbb
pushf
mov
inc
repnz
hlt
insl
jbe
lcall
pop
mov
cmp
lea
dec
dec
fisttps
jbe
inc
fwait
xchg
int
pushf
cmp
movsl
sbb
jg
cmc
icebp
idivl
shlb
ja
fstpl
mov
popf
test
sbb
loope
mov
or
in
movsb
inc
mov
roll
je
pushf
pop
hlt
mov
in
ret
xor
movaps
xchg
sti
ret
test
imul
rcrl
mov
sub
adc
es
mov
sarl
fwait
jl
dec
call
pop
daa
or
imul
mov
insb
mov
out
cmc
jnp
and
push
lea
push
hlt
dec
hlt
pop
xor
mov
sarl
aad
in
bound
push
push
mov
xor
add
dec
and
xchg
inc
dec
pop
icebp
add
iret
out
bound
in
fidivrs
mov
orb
loopne
iret
fwait
mov
lock
lcall
add
dec
loop
sbb
scas
inc
pop
cmpsb
and
gs
sbb
xorl
add
mov
sub
and
popf
dec
enter
lds
std
popa
add
mov
je
adc
adc
out
aam
sti
mov
jne
and
inc
jo
sbb
xchg
cli
ljmp
fsts
dec
movsl
dec
or
mov
or
insl
mov
movsl
push
or
call
sbb
mov
les
dec
ret
jae
cmp
push
pop
loopne
jecxz
rep
adc
pop
ljmp
daa
sbb
and
jne
add
mov
and
jecxz
mov
cmp
jno
je
cli
pop
xor
or
jo
stos
lds
dec
dec
faddl
adc
sbb
test
push
notb
dec
sahf
mov
adc
xor
xor
das
jne
lret
adcl
mov
pop
ficomps
xchg
int3
mov
sbb
paddb
cwtl
add
lcall
negl
push
mov
add
inc
fcmovb
push
test
in
loop
jp
aaa
jge
jle
cs
lahf
cmc
push
dec
mov
rorl
jmp
aam
cltd
cmp
pop
gs
push
mov
pop
mov
not
dec
fistpll
mov
dec
popa
addb
or
test
loop
mov
or
lea
jge
mov
jb
push
int
cltd
pop
fadds
les
pop
mov
mov
loop
mov
js
outsl
sub
shll
pusha
xchg
and
push
jae
xor
xchg
mov
stc
xchg
leave
jge
dec
pop
loope
cmc
jbe
shl
mov
cmpsl
cmpsl
cld
adc
outsl
and
das
mov
fs
jmp
mov
js
repz
cmp
iret
mov
out
sbb
loopne
pop
cmpsb
mov
fildll
sbb
xor
test
mov
add
pop
icebp
icebp
jbe
dec
push
jnp
loope
xor
loope
daa
jp
jecxz
dec
andb
outsb
cwtl
in
mov
dec
pop
imulb
pop
cld
jmp
insb
jbe
inc
xchg
inc
jl
jo
aam
mov
xor
pusha
ljmp
call
sub
sahf
repz
andb
popf
lcall
jae
or
lret
or
adc
sub
jne
jmp
adc
and
dec
aad
inc
out
xor
insb
ficomps
or
test
fnsave
pop
std
mov
loop
and
mov
lods
pop
fnsave
adc
jae
lcall
dec
clc
add
fcmovnbe
mov
movsb
mov
inc
push
in
cwtl
xchg
xchg
push
cltd
hlt
imul
fcmovbe
fmul
in
ljmp
lret
mov
sub
mov
aad
in
mov
and
xor
arpl
jae
add
mov
fidivl
arpl
std
push
pop
mov
or
lock
mov
sbb
jns
movsb
adc
jmp
popa
mov
cld
outsl
std
fbstp
dec
mov
int3
and
sbb
fisttpll
out
adc
sub
mov
test
and
jl
mov
in
pop
pop
mov
xor
test
mov
dec
mov
xor
imul
test
aas
out
dec
in
stos
cmpsl
sub
adc
xchg
pop
in
cmpsb
mov
cltd
or
scas
add
loop
pop
mov
cmp
arpl
xchg
imul
fistps
iret
mov
xchg
sti
mov
jns
push
into
cmp
mov
shll
add
lds
mov
cmp
loope
fistl
bnd
outsl
jo
push
xchg
mov
sub
mov
jp
mov
pushf
int
sahf
fistpl
push
mov
push
sub
mov
cld
push
add
pop
adc
shl
fucomip
pop
std
xchg
in
ja
shld
das
cs
sahf
in
hlt
sbb
mov
bound
lahf
push
roll
jl
mov
dec
loop
fnsetpm(287
mov
push
sbb
cmp
push
inc
push
xor
mov
mov
test
das
jnp
mov
inc
cmpb
fimuls
add
shrl
fdiv
xchg
lret
sbb
shll
jl
xchg
movnti
test
leave
arpl
add
enter
mov
mov
xchg
fwait
sbb
mov
sbb
pusha
in
pop
mov
cmpsl
jecxz
mov
sarl
sbb
insb
xchg
aam
repnz
mov
inc
or
or
cld
cmc
nop
xor
je
lods
lret
es
jmp
sbb
clc
xor
jmp
icebp
sbb
jnp
test
out
frstor
cmp
xor
aad
out
mov
pop
cmp
out
arpl
dec
bound
stc
jns
outsl
or
jb
xchg
mov
ss
cmp
bound
mov
cmp
xor
jg
incl
ljmp
faddl
cld
insl
push
dec
mov
jp
aad
stos
xchg
cmp
mov
jecxz
fldcw
xor
pop
fistl
cmp
add
jno
data16
mov
sbb
mov
cmp
jne
les
mov
adc
call
int
imul
jnp
adc
inc
cmp
add
dec
loope
shl
fxch
inc
ja
adc
pop
mov
jne
outsb
jne
fs
arpl
push
fsubrs
rcll
pop
push
push
mov
mov
stos
rclb
test
pop
fldcw
aas
mov
fldt
es
pusha
loope
mov
aad
xor
jb
adc
stc
fcoml
mov
xor
movsl
rcl
sbb
mov
push
add
xchg
jo
int3
sbb
out
out
cmp
mov
cli
pop
fidivs
aam
mov
js
adc
arpl
popa
mov
xor
icebp
xor
mov
pop
rorl
arpl
fisubs
add
mov
xchg
fcomi
lods
dec
push
cmp
mov
pop
idivb
mov
cmpb
adc
adc
xor
fs
mov
and
or
cli
les
mov
xchg
mov
fsubrp
arpl
mov
xor
fsubs
sbb
pop
shl
enter
pop
and
in
rcll
cmpsb
inc
inc
sub
incb
in
mov
subl
fstpl
xchg
mov
add
mov
rolb
mov
outsl
adc
es
cmpsb
add
fs
mov
out
jmp
inc
mov
cmp
mov
hlt
sti
mov
scas
lock
xor
les
in
roll
les
sub
xchg
xchg
pop
sub
and
rcll
add
sbb
jg
in
xchg
pop
aad
jb
or
leave
mov
cmp
sub
dec
mov
idivb
in
or
pop
xor
lret
and
xchg
popa
rcll
mov
cvtdq2ps
lcall
push
add
push
push
out
loopne
icebp
test
ret
shrb
lods
xor
adc
repz
push
cmpsl
shlb
add
pop
mov
rclb
gs
jmp
mov
mov
sbb
mov
mov
adc
out
mov
pop
jb
mov
aaa
or
mov
ret
mov
xor
jg
xchg
lret
cltd
mov
mov
dec
andb
in
mov
and
push
jnp
cmpsb
jle
jo
outsl
cmp
pop
rcrb
int3
pop
cwtl
push
outsl
sub
pop
xor
popa
out
das
aaa
or
dec
dec
lods
cs
ljmp
stos
pop
inc
push
mov
movsb
sti
inc
push
shr
and
mov
in
or
in
das
inc
popa
sub
cli
stos
add
add
jo
outsl
mov
popa
or
add
je
xor
dec
mov
outsb
mov
fisubs
mov
cwtl
sar
or
sub
mov
sub
add
pop
or
push
clc
push
cltd
cltd
adc
test
sbb
and
enter
cmp
mov
pushf
push
mov
xchg
lds
cmp
dec
shr
push
mov
sub
je
aaa
aam
mov
mov
test
popf
mov
fisubrl
cli
inc
pusha
or
loope
jle
inc
adc
cmp
pop
dec
clc
sub
push
aaa
xor
ror
jg
test
xchg
clc
imul
lods
or
push
mov
xchg
xor
inc
clc
pusha
idiv
mov
or
sahf
sbb
pop
pop
mov
adc
aas
mov
mov
jle
fbld
bound
jnp
inc
outsl
adc
aam
or
insb
sbb
les
dec
xchg
fidivrl
ret
inc
imul
jle
lods
sub
daa
mov
mov
notl
hlt
jecxz
jmp
push
aad
or
jecxz
cmp
out
fstpt
push
les
decl
jecxz
or
push
mov
or
movsb
xchg
push
jl
into
scas
ret
fptan
pusha
and
dec
or
cmp
icebp
adc
mov
loop
inc
mov
sub
sbb
inc
orl
scas
push
loop
or
dec
mov
xor
cmc
pop
fwait
insl
movsb
sbb
xor
sbb
xchg
and
dec
nop
mov
push
pop
inc
and
xchg
mov
push
mov
sub
clc
adc
push
mov
scas
hlt
xor
idivl
push
push
inc
inc
hlt
lret
cli
js
or
rol
ljmp
pusha
pop
dec
xlat
cmc
cmp
pop
pop
movsl
mov
xor
pop
out
cli
push
push
sub
ret
jnp
mov
push
sub
pop
add
push
sbbb
and
sub
xor
daa
cmp
int
sub
dec
or
push
add
scas
cmpsl
outsb
push
jg
stc
xchg
icebp
add
sbbl
pop
xor
cmp
movsb
sbb
sub
ret
mov
mov
inc
call
divb
push
not
sbb
pop
xor
dec
stos
cmc
popf
mov
data16
nop
inc
adc
mov
idivl
aas
dec
int3
movsl
out
mov
jecxz
lcall
ds
xchg
in
pop
bndldx
fistl
cmp
sbb
mov
andb
xchg
repnz
mov
es
fxch
xor
adc
push
arpl
xchg
mov
xor
push
fdivr
push
les
dec
mov
test
sub
cli
jo
push
inc
arpl
rorl
mov
gs
cmp
scas
or
cmc
cmc
adc
jo
or
imul
cld
mov
and
sbb
dec
mov
mov
mov
dec
pop
fwait
pop
pop
jb
mov
int
mov
in
jmp
jns
add
mov
sbb
jns
mov
push
lock
push
out
mov
mov
repz
clc
pop
add
xor
roll
adcl
push
sub
mov
mov
je
add
push
or
adc
ja
mov
add
inc
or
loope
popa
cs
mov
xor
jns
stos
mov
sub
and
lret
aad
adc
push
add
cmp
xor
or
ret
sbb
dec
sub
addr16
mov
ret
xchg
les
cmp
loopne
cmpsl
enter
dec
pushf
filds
loopne
push
pop
mov
sbb
lret
or
out
cltd
int3
das
mov
sub
jo
sub
xor
xchg
lret
cmp
sbb
int
jl
dec
insl
xchg
cmpsl
shlb
or
mov
test
mov
adc
sbb
inc
ficomps
out
xor
mov
cmp
fisttpll
sbb
pushf
std
incb
inc
xor
loop
out
jno
fbstp
jae
xchg
out
mov
bound
cs
clc
cmc
daa
push
loop
push
fidivrl
and
jne
inc
fs
clc
push
lret
popa
sqrtps
fistpll
jmp
sbb
dec
mov
mov
mov
mov
rorl
cmc
inc
mov
push
and
push
add
sbb
icebp
add
mov
out
and
push
add
adc
add
xchg
aas
push
lock
mov
and
insl
add
pop
sub
dec
mov
jbe
xchg
cli
icebp
into
mov
repz
sbb
mov
mov
js
and
pop
dec
pop
mulb
xor
int3
les
test
xor
insl
data16
shlb
stos
xchg
dec
bound
test
aad
or
lret
mov
mov
imul
lret
jno
mov
pop
insl
nop
fsubrs
or
call
dec
add
mov
xchg
sahf
pop
and
int
sub
je
out
sbb
fdivrp
adc
stos
test
mov
scas
mov
mov
or
mov
mov
xchg
mov
bound
mov
mul
cs
mov
xchg
lahf
jbe
cmp
adc
cmp
ret
hlt
daa
les
xor
adc
pop
cmp
push
mov
adc
fwait
nop
jecxz
in
jmp
xchg
xchg
jo
pop
push
sub
mov
popa
out
sub
xor
cmp
adc
mov
lods
jp
or
cltd
mov
cwtl
push
inc
mov
cwtl
iret
mov
adc
mov
movsl
call
mov
in
shlb
int3
jb
bound
mov
fcmovne
decb
aas
vcmpsd
mov
push
adc
mov
push
js
push
mov
pop
or
test
popa
repnz
in
icebp
mov
or
mov
lock
cltd
xlat
xchg
out
push
add
sarl
mov
and
mov
aad
scas
xor
cmp
jp
jb
enter
neg
lcall
mov
subb
ss
decb
xchg
dec
jnp
push
xchg
xchg
out
inc
aas
push
out
push
mov
in
mov
neg
sub
repnz
and
je
jle
outsl
and
cld
dec
cmp
and
push
jns
int3
hlt
xchg
or
int3
std
or
inc
mov
mov
push
in
jne
cmp
test
lret
and
mov
adc
inc
divb
divl
jo
lahf
xchg
push
cmc
fwait
movsb
je
jg
or
add
inc
jns
xchg
and
or
cltd
in
push
add
pop
cmp
test
movsl
cmpl
xor
xchg
adc
cmpsb
push
push
and
inc
lret
dec
test
sti
mov
out
pop
fdivrs
pusha
popa
push
push
in
mov
or
nop
imull
cmp
cs
fisttps
outsl
jne
mov
sub
cmp
movsb
lahf
ret
dec
mov
sbb
leave
data16
dec
ljmp
inc
into
xor
push
inc
sbb
roll
cs
xchg
call
cmp
dec
rcr
mov
shlb
iret
inc
xchg
and
mov
ret
cmp
outsl
pusha
fmulp
xchg
iret
pushf
outsl
cmp
aas
push
inc
dec
loopne
nop
push
ds
pop
xor
shl
loop
mov
mov
add
lret
out
call
push
xchg
and
fdivp
aaa
lahf
enter
pop
and
cmp
dec
jmp
das
adc
sbb
call
cmp
ljmp
jmp
jnp
xor
sbb
mov
stos
pop
lods
lret
test
push
mov
stc
fsubs
stc
jge
mov
frstor
sbb
aas
jb
jle
adc
cltd
insb
push
xchg
adc
inc
xor
popa
ret
mov
mov
pusha
lds
xchg
js
packssdw
dec
xor
pop
sub
cmp
aam
mov
xor
call
out
lods
fmuls
dec
cltd
xor
xchg
aaa
jle
adc
push
add
int3
lds
adc
enter
cmp
cmp
xor
sbb
clc
imul
bound
mov
push
aas
rol
out
sahf
std
xor
and
in
add
sub
xchg
push
pop
bound
daa
jno,pt
mov
icebp
push
xchg
xor
fcoml
shl
inc
in
sbb
mov
pop
sub
mov
pop
stos
or
push
std
mov
movsl
push
insb
jp
lret
sbb
push
mov
lods
jnp
fsub
xor
stos
jp
test
xchg
pop
lods
movsb
cmp
pop
ret
rcrl
xchg
add
lcall
jne
add
add
testl
imul
bound
int3
dec
push
sahf
xchg
xor
pusha
xchg
cwtl
sbb
pusha
mov
adc
mov
xor
cli
xor
cmp
add
and
sbb
and
mov
adc
sub
push
push
cmp
mov
loop
out
aaa
xor
ficoms
das
adc
cmp
test
dec
mov
cli
je
cmpsb
in
pop
xor
imul
mov
sub
je
andl
bnd
scas
mov
sub
dec
iret
mov
gs
mov
jb
fdivl
lahf
pop
mov
imul
flds
add
daa
pop
pop
lret
aad
dec
stc
enter
add
cs
push
xchg
jo
sub
out
mov
and
shlb
fsubp
pop
ret
shld
push
cli
cmp
pop
leave
rclb
test
bound
push
popa
insl
pushf
inc
cmp
sub
jge
pop
mov
or
xchg
jg
femms
fadds
sub
pop
pusha
int
push
fcoml
inc
movsb
mov
loop
mov
std
xchg
mov
icebp
stos
lret
fadd
jnp
mov
jno
sub
jae
jg
test
push
xor
xorb
pop
mov
popa
push
lods
mov
daa
xchg
loope
aaa
rorb
lods
xor
xchg
push
xchg
sbb
pop
cmpsb
jnp
clc
xchg
lcall
loope
ss
and
stos
fsubrs
data16
and
dec
pop
ror
add
xor
fwait
aaa
sub
jns
xor
stos
cli
mov
stos
push
out
cltd
xchg
mov
mov
addr16
jle
aaa
es
xchg
fdivrs
inc
cwtl
std
in
mov
add
mov
sbb
xor
pop
mov
pop
imul
xchg
xchg
sti
and
fidivl
outsl
xchg
addr16
xchg
sti
sbb
pop
xor
cwtl
shl
or
jle
inc
mov
loop
lret
pushf
xchg
mov
mov
xor
xchg
xchg
jp
sbb
push
loop
mov
cmpsl
push
mov
insl
cmp
sub
shrl
shll
mov
es
idivl
orb
xchg
dec
jne
xor
jmp
jp
in
mov
mov
jmp
pop
dec
scas
xor
mov
jno
scas
test
sbb
test
pop
arpl
pop
xor
ds
pop
push
cmp
stos
mov
add
imul
loopne
dec
les
xchg
iret
inc
xor
adc
add
add
jge
add
fiaddl
enter
aad
push
push
push
add
push
stc
dec
test
and
fsubrs
mov
pop
cmp
pop
scas
sbb
test
adc
test
xchg
jae
add
adc
mov
in
pop
jne
jb
int3
jnp
sbbl
push
mov
dec
push
into
add
in
pop
lcall
je
mov
cmc
xchg
in
aaa
dec
mov
fsubl
sar
lret
imul
xor
jle
push
adc
jg
xchg
sub
add
mov
faddl
mov
iret
inc
sub
cld
inc
add
and
push
fisttpl
xchg
add
push
cld
in
jo
jns
jno
lods
push
fnstenv
std
sub
jg
outsb
mov
pop
or
in
in
jb
ret
hlt
or
add
faddp
push
or
int3
and
pop
mov
frstor
xor
sahf
adc
jecxz
adc
lret
nop
sub
insb
das
fwait
jbe
ret
push
test
fdivs
gs
xlat
xchg
out
sbb
rolb
fdiv
mov
fdivl
pop
test
pop
xchg
bnd
mov
sar
rolb
or
fdivs
movsb
fwait
add
insl
pop
daa
sbb
icebp
pop
cli
dec
jmp
in
clc
cs
test
fcmovu
mov
jecxz
and
sbb
imul
and
mov
popf
out
mov
sbb
push
neg
rcll
push
sahf
mov
or
cli
xchg
les
mov
cmpsl
iret
ret
and
lcall
out
scas
mov
add
mov
push
cltd
gs
xchg
jns
mov
push
sbb
lock
sbb
jl
pop
mov
sarl
jl
inc
fsubr
sub
pop
mull
call
sbb
cmp
xor
inc
dec
or
in
push
or
lea
add
push
test
inc
mov
xor
sub
in
cmpl
loopne
scas
sbb
data16
add
loopne
faddl
outsl
sub
fists
xchg
jbe
les
adc
test
addb
jne
insl
jae
xchg
sahf
fwait
sub
mov
sbb
outsb
push
push
fsubp
ret
or
inc
lods
push
ds
jo
pop
and
sbb
jae
cs
lcall
sub
call
or
cmp
xorb
lds
adc
stos
stc
jle
sbbl
out
sub
lea
inc
xor
dec
sbb
iret
xchg
imul
jnp
outsl
or
mov
leave
sbb
fwait
popf
outsl
cmp
shrb
sbb
push
in
daa
mov
pop
lods
or
in
arpl
stos
shll
scas
jg
test
push
inc
js
aam
mov
dec
movsl
dec
xchg
push
ja
sbbb
push
or
mov
pushf
push
xor
xchg
cmp
add
adc
enter
outsl
addr16
outsl
push
lret
jecxz
inc
aas
jmp
or
int
repz
mov
sbb
pop
iret
push
mov
outsb
mov
cli
pop
dec
gs
pop
pop
mov
jge
xor
sub
jb
xor
mov
adc
or
into
lock
pop
pop
sti
ret
dec
sub
insb
out
or
pushf
mov
cmp
xchg
addr16
fnstenv
inc
jmp
inc
pop
push
mull
xchg
cmp
insb
ljmp
fsubr
repz
ljmp
ljmp
mov
jo
mov
pushf
mov
ret
add
pop
frstor
jg
sub
xchg
pop
or
fiaddl
in
repz
inc
and
loopne
cmp
mov
jns
in
ljmp
xchg
aam
adc
push
stc
movsb
insb
dec
and
ficoms
jne
inc
popf
push
and
mov
fdivl
fwait
add
cmc
js
cwtl
roll
xchg
dec
inc
inc
or
ja
jo
in
pushf
call
aad
jnp
sub
aad
shll
fxtract
mov
mov
dec
into
mov
xor
jno
add
pop
paddusw
loop
push
cmc
js
adc
bound
push
push
mov
icebp
rcr
ljmp
push
lock
test
push
cmpsb
mov
mov
pop
icebp
repnz
cmp
cmp
aam
fisttpll
cs
cmp
jns
imul
pop
insb
push
and
or
dec
movsb
rorl
repnz
pop
rcrb
filds
sbb
addb
jno
sbb
sbb
sahf
lcall
pusha
sub
push
xchg
sbb
lret
xchg
decl
and
test
or
push
push
dec
outsl
xlat
cmp
jecxz
mov
decb
std
cld
fdivl
sbb
push
movsb
fnsave
sbb
pop
cmp
xchg
sub
push
cltd
repz
cwtl
sbb
cwtl
inc
mov
xor
push
test
outsb
adc
xchg
pusha
push
arpl
adc
loope
xor
pop
insb
push
js
sbb
leave
add
dec
negl
pop
jp
test
jno
out
jmp
pop
push
push
mov
cmc
xchg
cmp
jge
mov
mov
sbb
shlb
add
cwtl
lret
inc
dec
dec
add
clc
jmp
mov
movsb
mov
addr16
push
push
lods
jae
add
lahf
out
fnclex
mov
jo
mov
test
out
mov
jl
inc
je
repnz
mov
mov
sub
mov
arpl
test
jmp
in
lea
je
push
enter
loop
lret
xchg
mov
orl
adc
sbb
push
adc
js
mov
mov
xchg
pop
lahf
lahf
jae
inc
dec
aas
xor
data16
mov
mov
fnsave
pop
xor
imul
xchg
push
mov
cld
imull
ds
adc
loope
fadds
xlat
lahf
xchg
adc
dec
in
insl
aad
inc
fsubrl
adc
xchg
fbstp
out
xor
inc
nop
ret
add
movsb
dec
cmp
cmc
arpl
push
xchg
jne
jne
sbb
lock
pop
rcrb
jecxz
sub
lods
int3
pusha
int
fcomps
cmp
xchg
push
addr16
push
rcrb
sbb
shlb
cld
sub
ffree
scas
popa
and
xorb
push
shrb
fsubrs
mov
push
fadd
push
subl
push
jb
pusha
mov
sahf
shlb
add
mov
in
mov
ljmp
lcall
pop
int
fs
push
inc
push
jo
out
mov
pop
push
stos
mov
push
inc
and
xchg
dec
cmp
pop
xchg
mov
in
push
iret
mov
push
add
repz
adc
push
scas
cmp
shl
fcos
pop
shll
cmp
arpl
jns
add
cmpsb
sub
xor
into
incl
xchg
xchg
adc
and
push
decl
or
ljmp
xor
addr16
sbb
int3
pushf
mov
and
call
adc
test
std
xchg
jo
les
ret
push
repnz
pop
push
rorb
mov
divl
and
pop
lock
sub
fucomi
cld
inc
jecxz
fwait
in
gs
test
inc
sbbb
and
xor
stc
mov
in
std
ret
jl
jl
ljmp
sub
mov
jo
mov
and
fisubrs
jbe
and
add
pushf
dec
rcl
adc
outsb
adc
in
xchg
repz
pop
mov
cld
mov
decl
inc
and
pop
divb
mov
mov
pop
dec
dec
in
out
xchg
mov
push
cmc
out
ja
lock
pop
leave
push
inc
pop
xor
mov
pop
and
or
jnp
aas
push
divl
popa
adc
sbbl
arpl
out
lods
sbb
mov
sub
fmul
popa
outsl
fidivl
daa
sub
shrb
mov
arpl
call
outsl
xchg
mov
cmc
sub
movsb
aam
push
imul
leave
mov
cltd
mov
test
jl
push
pop
loope
sbbb
mov
xchg
and
add
xchg
sbb
cmp
ficompl
jg
sahf
hlt
lret
negb
push
in
ret
cld
scas
les
stos
pop
mov
and
jl
add
sahf
xor
add
xchg
fistpll
je
sub
mov
stos
pop
insl
cmp
js
fs
ja
andnps
lcallw
fmul
loopne
dec
sbb
sbb
je
and
ja
scas
pop
cld
pushf
ret
push
js
jecxz
and
or
push
mov
sahf
mov
xor
imul
jge
outsb
mov
mov
cs
adc
orb
push
mov
movsb
popf
out
test
fsub
ret
pop
xor
pop
scas
and
ja
lret
jmp
jbe
or
movsb
xchg
jmp
or
xchg
test
popa
cmp
add
jae
adc
cmp
fs
clc
inc
out
xor
jle
stc
and
pop
mov
sub
hlt
sub
mov
or
mov
pushf
sbb
xor
adc
mov
sub
inc
movsl
mov
sbb
imul
mov
xlat
xchg
xor
ljmp
or
aam
add
sbb
add
and
cmp
xor
les
pop
jmp
mov
daa
push
insl
inc
je
incl
aaa
mov
cltd
movsl
fiaddl
sub
ret
mov
or
lcall
dec
mov
pop
cli
push
cs
and
cmp
hlt
popf
inc
fmull
incb
pop
lea
in
xchg
das
lret
and
pop
bound
out
pop
stc
jo
xchg
mov
aad
out
mulb
mov
enter
xchg
add
jb
cmp
pushf
jb
imul
and
mov
xchg
mov
and
push
push
jnp
dec
cmp
out
aaa
push
mov
out
xchg
jbe
add
push
push
sub
add
xor
adcb
nop
loopne
mov
dec
mov
sub
pop
inc
lahf
aas
and
std
jp
inc
push
xlat
sbb
dec
aad
jae
ret
add
leave
repnz
jae
popf
jp
dec
stos
fs
sbb
push
xchg
stos
ds
xchg
inc
pop
lds
jmp
ljmp
sbb
inc
push
or
mov
jbe
add
mov
push
cld
fs
jb
mov
jae
inc
xor
sub
icebp
xor
movsl
outsl
stos
pop
test
aas
mov
adc
dec
cmp
insb
jmp
sbb
adc
dec
and
push
inc
lcall
fs
mov
or
insb
fistps
jo
aaa
mov
imul
adc
xchg
pop
or
jl
jno
iret
push
mov
into
call
jl
inc
jae
icebp
dec
pop
xchg
adc
or
adc
outsl
sbb
cli
xor
inc
push
lcall
sbb
mov
data16
push
xor
movsl
rorl
push
loop
stos
or
push
sub
stos
sbb
mov
add
lods
cld
hlt
pop
xchg
add
outsl
rcrb
pop
sbb
test
xchg
mov
mov
cmp
orl
js
int
lock
sub
cmp
call
pop
lea
mov
xor
cwtl
inc
mov
lret
add
loope
movsl
lods
nop
lds
push
add
xchg
test
or
insl
push
jge
jp
adc
sbb
add
gs
pop
daa
clc
and
jg
jmp
mov
inc
fs
mov
xor
cmpsb
pop
movsl
pop
les
js
cmpsl
test
xor
xor
divl
cmc
hlt
ss
xchg
dec
daa
ljmp
push
out
int3
aad
xchg
stos
insl
ret
mov
repnz
addb
push
jne
hlt
sbb
sbb
sbb
lds
mov
sub
add
add
stos
add
sarl
insl
insb
out
lea
mov
stos
add
leave
ljmp
push
pop
popa
xchg
je
aad
into
mov
sbb
pusha
and
leave
test
and
cltd
inc
jmp
mov
xchg
push
push
loopne
shlb
in
push
inc
lods
les
ss
sbb
inc
into
lret
mov
shl
mov
push
flds
cmp
pop
out
inc
es
adc
pop
cmpsl
add
lret
mov
lods
mov
je
inc
mul
iret
rorl
loope
jns
pop
or
mov
mov
dec
adc
jge
subb
scas
test
add
mov
repnz
push
dec
xor
outsb
call
ja
push
and
dec
test
mov
pop
nop
pop
in
bnd
xorl
imul
js
out
push
scas
ret
daa
dec
in
nop
jno
mov
and
inc
icebp
out
fbstp
inc
mov
xor
sarl
mov
and
notb
dec
push
mov
mov
cmp
jmp
inc
loop
inc
push
vdivsd
ds
ss
xchg
cltd
test
sub
jle
in
fnstcw
adc
sahf
sarl
test
xor
push
jae
testl
inc
inc
xor
pop
sbb
adc
mov
les
pusha
inc
cmp
sub
stos
jg
out
push
mov
add
inc
jge
mov
push
push
mov
fldl
xchg
mov
push
pusha
mov
mov
test
dec
mov
sub
mov
pop
mov
notl
outsl
ds
gs
das
jne
sub
cmpsb
das
sti
ret
inc
push
ret
cmp
fdivrs
mov
ror
xchg
loop
jmp
mov
inc
xor
jg
fwait
and
outsl
setg
jecxz
jb
mov
lahf
mov
xchg
pop
loope
jle
shl
ljmp
stos
jo
sahf
or
fsubr
sbb
xlat
jns
repnz
or
fisubs
inc
inc
jl
sbbb
sahf
or
or
inc
cmp
iret
int3
test
add
cld
inc
lret
ss
subb
fsubrp
or
imul
lods
sub
cld
ds
scas
ja
stos
shlb
nop
lahf
dec
xlat
das
lods
stc
dec
pop
int
lea
and
mov
enter
mov
int
xchg
enter
in
sbb
pop
jbe
rcl
imul
inc
xchg
lahf
inc
xor
jnp
pop
js
pop
insl
adcl
fisubrl
push
hlt
lods
jmp
popf
xor
xchg
push
add
stos
adc
mov
or
stc
insb
movsb
inc
insl
jb
push
mov
pop
jns
or
cmp
xchg
mov
mov
pop
dec
sbb
arpl
bnd
fdivrs
jne
mov
pop
mov
gs
loop
jb
nop
mov
sbb
or
xchg
push
add
cmpsb
aas
fstl
sbb
decb
bound
inc
mov
jp
addr16
in
or
add
and
jns
lds
pop
cmc
push
pop
out
in
add
aad
inc
cltd
sub
sub
in
sarb
and
add
pushf
sub
jle
into
xchg
fmuls
bound
idivb
inc
andl
insb
aaa
sbb
sbb
jno
cmp
inc
ss
test
xchg
mov
test
arpl
push
out
leave
jl
lret
shrb
adc
push
js
inc
jne
hlt
mov
hlt
cmc
mov
ja
sbb
imul
enter
cwtl
repz
bound
cmp
sub
push
mulb
mov
xorl
sub
and
push
das
cltd
loop
mov
inc
lret
ja
js
je
insl
add
jmp
and
or
or
pop
cwtl
insl
rcl
call
sbb
jp
scas
mov
adc
ljmp
popa
or
shll
jae
adc
mov
jle
lods
xchg
jl
cmp
dec
sub
shl
sub
xor
cltd
aam
int3
stos
sub
movsl
xchg
xor
test
sub
jns
sbb
xchg
lret
ljmp
movsb
xchg
call
sub
or
shl
out
cmp
jg
sub
xor
add
and
lret
aaa
push
sbb
data16
cmp
jg
sarl
inc
jno
mov
or
cmp
call
out
xor
insb
cld
flds
sbb
ret
stos
sbb
add
sub
push
lahf
xor
mov
fildll
arpl
dec
sbb
jecxz
mov
push
jnp
and
push
adc
cli
mov
icebp
std
bound
int3
dec
das
dec
int3
fiadds
int
mov
mov
stos
push
pop
pop
shll
cld
cwtl
jmp
jbe
add
dec
jns
int3
jno
mov
loopne
pusha
imul
dec
out
pop
xchg
cli
mov
dec
lret
aas
pop
adcb
inc
jl
pop
cmp
pcmpeqd
jo
enter
out
sub
fnstcw
mov
aaa
adc
pop
xor
repnz
mov
mov
aas
imul
inc
gs
push
sbbb
cwtl
and
repnz
add
cs
dec
pop
xchg
jmp
mov
sbb
std
jp
arpl
sub
rcrb
orl
cwtl
test
xor
mov
std
mov
xchg
pop
cmp
jp
jo
pop
mov
add
push
jl
xchg
and
out
pop
divb
mov
arpl
mov
dec
stos
fsts
data16
arpl
mov
scas
cmpsl
movl
push
int3
mov
inc
push
shr
jnp
dec
int
xchg
xchg
lea
sub
decb
sub
test
push
aam
lret
dec
sbb
lahf
popa
arpl
pushf
push
adc
sbb
mov
pop
lcall
pushf
pop
mov
push
out
jge
xchg
icebp
shr
movups
mov
mov
out
jl
mov
aas
stos
jae
mov
mov
in
mov
iret
dec
lcall
xchg
mov
fstl
pop
fisttpl
sbb
movsl
adc
jne
push
dec
ret
jnp
push
inc
push
aam
jg
jnp
data16
dec
mov
push
mov
loopne
cltd
sub
out
jne
pop
call
push
adc
fcmovb
pushf
std
adc
or
paddw
loope
xchg
jno
aaa
mov
outsl
data16
mov
ret
loope
pop
mov
dec
cmp
mov
mov
dec
xchg
cltd
or
inc
xchg
xor
mov
stc
movsb
mov
cwtl
addr16
and
add
test
mov
je
sub
push
and
lods
loop
push
aad
or
push
lods
sahf
pop
das
insb
push
cwtl
pop
sub
adc
mov
cmp
icebp
push
xchg
stc
mov
mov
out
and
inc
lods
rcll
out
jae
push
add
pop
dec
fdivl
push
js
sbb
ds
mov
push
movsl
out
movsl
add
je
or
outsb
adc
enter
adcb
leave
in
loopnew
cmp
pop
pusha
push
sbb
dec
pushf
ds
jl
aas
or
fisubrl
pop
es
or
dec
shl
xchg
stos
out
mov
testb
inc
outsb
out
aas
push
das
xchg
fsubs
inc
test
mov
pop
cmp
push
les
inc
mov
fimull
inc
fisubs
cli
and
hlt
ds
cmpsl
push
fisttps
cmp
divb
ja
jnp
jge
ds
in
aam
xchg
fdivs
jno
cli
and
das
dec
cmpb
mov
mov
arpl
movsl
mov
ficompl
xor
cmpsb
fcoms
sub
movsb
jo
inc
add
outsb
inc
shrl
out
adc
int3
loope
adc
adcb
fcomps
movsl
test
mov
int3
rolb
xor
xchg
sbb
jb
addr16
adc
cld
pop
push
addr16
mov
dec
jnp
lea
xor
inc
out
and
cmpsl
or
cmc
add
lahf
scas
sbb
inc
push
push
test
mov
test
xchg
lds
inc
pusha
in
or
inc
mov
sbb
fstpt
jns
mov
int
cmpsb
lock
and
or
repnz
cmpsl
pop
repz
ja
cld
jne
dec
imul
pop
fwait
mov
adc
inc
je
lea
loopne
cmpsb
ret
pop
mov
sahf
xchg
xchg
popf
lret
sub
mov
inc
push
push
icebp
mov
mov
test
adc
nop
xchg
ret
xchg
adc
incl
push
insb
push
lock
push
iret
and
cmp
add
mov
test
loope
or
ret
dec
jns
ret
sbb
leave
lret
cmp
sbb
sbb
jnp
lcall
cmp
mov
iret
test
adc
xchg
or
mov
shl
jle
pusha
cld
rcl
add
pusha
or
das
cltd
in
pop
push
loop
jmp
mov
xchg
inc
pop
dec
push
jno
jecxz
pop
jmp
pop
cmp
cmp
xchg
outsl
and
in
adc
pusha
aaa
xor
mov
hlt
adc
xor
sbb
jmp
dec
sub
lret
movsl
mov
jge
and
pop
das
fcoml
sub
aad
out
xchg
adc
add
scas
dec
test
mov
or
mov
fisttpll
mov
rdpmc
push
add
sahf
jns
bound
notl
xlat
rcrl
sub
clc
xchg
aam
mov
jecxz
push
sti
ljmp
cmpsl
in
pop
or
cld
out
notb
stos
xchg
cmp
insl
into
mov
loope
add
push
fwait
negb
adc
inc
add
sbb
cmovo
dec
jmp
dec
insb
loop
sbb
lock
push
inc
test
or
stos
adc
mov
push
and
aam
je
cmp
mov
mov
mov
loop
imul
dec
adc
xlat
push
mov
add
xchg
sub
dec
mov
test
push
lea
dec
push
pop
inc
int3
rcll
push
nop
push
cwtl
cwtl
push
mov
hlt
aad
out
xchg
nop
adc
adc
xchg
ljmp
mov
or
xchg
pop
lret
iret
movsb
arpl
sbb
hlt
xchg
cmp
jbe
decl
pop
add
mov
add
push
das
push
sti
scas
mov
adc
repnz
pop
sub
inc
cmp
push
xchg
push
cmpsl
and
pop
and
jmp
mov
ficoml
imul
xor
xor
push
dec
addr16
std
shlb
pop
fcomp
repnz
pushf
jge
push
fstp
push
pop
lahf
cmc
push
popf
popf
cld
sbb
addr16
add
repz
xor
js
dec
test
push
sahf
cmc
dec
into
ds
js
iret
mov
in
sti
out
orl
push
push
mov
inc
in
insb
inc
jecxz
movsb
dec
adc
add
leave
adc
or
jo
pop
fisubrs
dec
insb
and
imulb
pusha
rcrl
mov
xor
adc
pop
cmp
mov
mul
divb
aam
dec
cmp
jl
pusha
inc
nop
jne
xor
jp
pop
stos
jno
push
pop
out
and
mov
pop
shrb
mov
mov
outsb
add
aam
xor
jmp
fucom
into
push
push
jne
pop
cmp
push
mov
test
jle
pop
xchg
cmp
mov
xor
rcrb
add
mov
sbb
dec
push
jbe
mov
iret
mov
sbb
dec
subl
inc
xor
aad
push
das
repnz
aad
xchg
lock
xchg
push
mov
mov
hlt
xchg
les
out
shrl
test
push
inc
and
xlat
mov
in
sub
push
inc
mov
pop
mov
or
arpl
dec
push
lea
jp
test
loop
jle
cli
or
cmp
add
nop
mov
mov
lret
dec
push
jne
jbe
shlb
imul
aad
inc
mov
in
inc
push
jg
addr16
popa
mov
pop
rolb
sbb
sub
mov
movsl
push
mul
lcall
push
repz
and
xor
bound
and
cmp
add
mov
inc
lods
inc
jl
cmp
mov
adc
mov
mov
inc
jg
mov
inc
sbb
mov
cltd
adc
add
js
inc
jg
movb
xchg
inc
mov
jo
or
xchg
je
inc
es
loope
jg
adc
je
mov
testl
pop
push
and
scas
incl
pop
lret
mov
les
jnp
call
xchg
mov
pop
dec
lret
mov
lds
xchg
je
testb
jae
iret
jbe
fcomip
ret
pop
jbe
push
or
cld
je
xor
sbb
mov
mov
es
lcall
ss
cmpsl
xor
push
leave
mov
mov
add
push
add
mov
aas
push
addb
mov
sub
or
fistpll
insl
aas
lods
jns
ss
dec
lret
int
lock
ljmp
adc
popf
enter
sbb
cld
hlt
mov
push
mov
mov
cwtl
jmp
jno
dec
add
xchg
in
xchg
mov
inc
inc
push
mov
inc
adc
cld
popa
cmp
out
or
mov
inc
inc
xor
xchg
dec
push
or
jb
jne
inc
dec
push
les
test
data16
sub
mov
ret
imulb
std
or
add
cmp
notb
mov
cs
ljmp
push
xor
mov
bound
mov
enter
adc
sub
mov
xchg
adc
dec
imul
fmul
ljmp
pop
pop
push
pop
mov
xor
sbb
xor
jae
push
or
adc
push
inc
dec
jp
pop
insb
and
xor
cmc
addr16
jbe
inc
cwtl
je
jnp
jl
jno
adc
or
ret
insl
and
std
pop
and
mov
mov
movl
ret
pop
mull
lock
mov
and
pop
sub
push
aad
jge
fst
or
mov
and
subl
imul
jne
xchg
enter
out
cmp
xorl
mov
js
dec
adc
loopne
xchg
push
out
movsl
in
lcall
dec
jmp
mov
jge
hlt
ret
dec
mov
mov
add
les
and
test
shrl
push
sbb
inc
fmulp
mov
movsb
xor
jmp
dec
jnp
das
icebp
mov
stos
lods
mov
jbe
lahf
bound
test
stos
out
mov
test
mov
mov
push
test
mov
loop
and
leave
cmpsb
ror
pop
stos
fwait
and
inc
ds
idivb
sbb
test
mov
ret
roll
cmpsl
mov
into
lock
pop
and
inc
pop
popf
xchg
or
dec
imul
jnp
push
lahf
cmpsb
lods
repz
cs
lahf
scas
aam
adc
ljmp
mov
mov
inc
sbb
pushf
inc
push
sub
or
push
test
mov
movsb
frstor
xor
ret
push
stos
jne
pop
ret
cmpb
dec
lret
out
pop
sub
push
xor
sub
sbb
sbb
mov
fildl
ficompl
rcrb
jp
mov
cmp
sub
inc
lds
gs
lcall
lock
jmp
mov
jns
gs
push
in
cmpsl
dec
js
jge
push
out
xor
shrl
addr16
dec
xchg
scas
mov
mov
pop
iret
jp
mov
adc
jno
push
insb
jns
aaa
cld
sbb
aam
or
das
nop
mulb
push
mov
cmc
cmp
lock
inc
push
ljmp
jg
cwtl
aam
mov
pop
pop
scas
mov
mov
mov
stos
sub
add
mov
popf
pushl
sub
out
out
and
or
lea
xchg
mov
and
fsubr
addr16
or
fcompl
xchg
popa
fistl
in
mov
dec
cs
pop
popa
push
dec
out
imul
push
mov
cmpsb
push
lcall
fs
shlb
out
cld
inc
add
xlat
push
push
xchg
arpl
cmp
mov
jne
mov
and
xchg
test
cli
lret
lret
xchg
jl
and
js
jge
cli
in
negb
dec
out
jg
cmpsb
xchg
and
leave
add
xchg
repz
aam
nop
dec
mov
clc
insl
lahf
cmp
pop
adcl
inc
cmp
push
push
jl
xchg
dec
stc
stos
iret
fs
fsubrs
add
or
xor
insb
mov
push
pop
jl
adc
mov
ffreep
jge
push
xchg
mov
cmp
xor
out
jno
dec
dec
cld
mov
cli
test
fcoml
xlat
and
and
scas
push
push
dec
and
mov
popa
xor
mov
inc
dec
sbb
sti
xchg
clc
scas
xor
cmc
daa
adc
lahf
xor
in
push
mov
push
roll
mov
xchg
jmp
xchg
aaa
jnp
bound
xor
js
sub
sub
push
mov
push
daa
adc
cmp
push
in
pop
jge
sbb
lock
mov
pop
js
lock
in
sbb
or
pop
push
stos
data16
and
mov
or
jle
inc
negl
fnstcw
mov
xchg
loope
and
inc
or
stos
mov
dec
add
dec
jp
outsl
and
sbb
xlat
subl
lret
mov
fcoml
pop
jno
xchg
shlb
mov
ret
in
js
and
jne
nop
cwtl
jbe
fildl
inc
call
xchg
fs
dec
cmp
mov
mov
insb
mov
pop
call
adc
pop
loopne
aas
pop
arpl
lret
mov
aas
adcl
aam
sbb
add
and
pusha
xchg
push
lret
dec
or
adc
outsl
adc
jl
lret
int
inc
lods
fcomp
je
andb
push
or
or
adc
enter
dec
push
fbstp
cmpsb
adc
sti
dec
lea
mov
dec
mov
xor
xchg
invd
stc
rolb
idivb
or
add
inc
push
or
xchg
ficoms
jge
adc
not
imul
out
mov
add
or
jb
mov
jne
leave
pop
gs
add
dec
popf
push
fcom
das
test
fwait
mov
xchg
cltd
fistpl
out
lock
pop
inc
xor
out
not
sbb
pop
dec
loope
lret
pop
mov
push
or
sub
loopne
inc
dec
sahf
imul
add
or
jge
sti
enter
test
in
inc
sub
push
cmp
dec
or
imull
adc
jbe
lcall
sti
push
jmp
imul
out
or
mov
outsl
cld
xor
sti
xchg
xchg
arpl
inc
push
ja
lock
int3
das
mov
and
mov
sbb
pusha
lahf
setge
aaa
lock
push
sahf
loop
subb
pop
insl
pop
jns
mov
push
imul
fsubrp
pop
cmc
scas
pop
push
leave
add
data16
jo
inc
jnp
lods
movsb
ret
gs
adc
mov
cmpsl
iret
cmpsb
jnp
iret
std
popf
xor
ja
cmp
xchg
and
subl
push
ficoml
ror
mov
mov
xchg
cltd
shrb
xorl
into
sbb
mov
jne
mov
jae,pn
sahf
outsl
xor
stos
cmp
jecxz
enter
mov
fisttpl
test
mov
iret
pop
push
clc
sub
ret
insb
je
inc
lret
test
jno
cmp
fstl
dec
aaa
vpaddsw
sbb
mov
roll
mov
mov
and
mov
daa
cmp
jb
mov
cmp
rclb
fcmovnu
adc
xchg
std
mov
outsl
ret
adc
xchg
and
jne
shlb
xchg
mov
push
bnd
imul
les
and
fs
and
mov
pop
push
shrl
lock
adc
idivl
mov
mov
mov
sub
add
mov
inc
ss
jbe
and
inc
imul
adc
repnz
out
jnp
clc
jmp
pusha
mov
insl
in
mov
call
and
mov
inc
pop
dec
popa
push
lcall
or
int3
scas
adc
popf
popa
mov
and
push
and
jno
add
test
sub
cld
jns
outsl
in
xor
inc
es
and
push
stos
stos
cmc
imul
test
inc
sub
and
mov
xchg
je
cmp
lock
xorb
inc
pop
or
movsl
cmc
cmpsl
push
add
sub
push
stc
xchg
nop
movsl
bound
adc
xchg
sbbb
cmp
daa
daa
or
movsb
push
vhsubps
add
sti
xor
mov
push
fnstenv
fdivrl
cmp
leave
or
ret
adc
repz
pop
sub
dec
icebp
stos
sub
sbb
or
lret
sarl
dec
adc
addr16
xchg
lahf
test
cmp
pop
sahf
jno
add
xchg
jnp
push
cmp
sub
xchg
pusha
into
xchg
pop
das
stos
fidivl
jb
sub
sbb
inc
shlb
sbb
xchg
sub
jmp
mov
jmp
xchg
inc
push
daa
inc
sub
filds
adc
test
mov
and
inc
xor
roll
mov
jns
lods
in
stos
sahf
mov
rclb
pop
subb
push
dec
ja
fsts
int3
push
mov
in
cmp
rol
jbe
push
add
out
push
dec
mov
and
dec
mov
mov
insb
add
shrb
mov
adc
jmp
mov
loop
xchg
imul
and
mov
xor
jmp
dec
iret
std
add
add
paddusb
mov
dec
sysret
mov
sarl
mov
cmpsl
push
add
enter
xchg
xchg
xchg
pop
aad
xchg
add
mov
and
out
add
pop
sub
in
stos
pop
pop
fmulp
jmp
mov
cltd
push
aas
test
adc
fistpll
in
cltd
iret
aaa
mov
aad
mov
or
repnz
cmpl
cld
jae
add
lcall
shlb
mov
imul
sbb
iret
xchg
jl
and
adc
xchg
enter
cmpsl
adcl
lcall
cltd
or
ss
cmp
xchg
sub
sub
out
xor
jge
enter
mov
and
mov
aas
mov
jecxz
imul
cmc
loope
jb
pop
out
test
out
ja
inc
out
and
and
test
mov
inc
lret
aas
lret
outsb
push
js
out
or
or
movsb
push
inc
fnstenv
call
mov
push
add
sub
movsb
pusha
out
movsl
mov
loopne
dec
pop
adc
pop
adc
pop
and
in
mov
mov
sbb
les
xor
jecxz
mov
and
pushf
dec
stos
xchg
jbe
or
cmpsl
mov
cmp
inc
adcb
fwait
xchg
mov
or
sbb
dec
daa
push
sub
mov
xor
or
jge
mov
inc
xor
loopne
adc
dec
icebp
and
xchg
outsl
xchg
pusha
cmp
lret
sbb
jecxz
gs
jle
cld
out
pop
or
in
add
loop
pop
push
pushf
jl
out
aam
xchg
cmpsl
dec
inc
jae
cmpsb
shll
int
pop
jo
jne
cltd
mov
push
add
stos
jl
pop
out
xchg
adc
int3
test
mov
cmc
jno
sub
pop
adc
daa
hlt
mov
inc
jecxz
das
lret
inc
out
shl
sbb
and
pop
add
mov
or
push
mov
orl
push
mov
xchg
push
adc
xchg
xlat
rorl
push
shlb
adc
cmpsl
popf
mov
aad
cmp
dec
lahf
adc
test
dec
pop
pop
into
cli
cmp
dec
or
mov
daa
aad
lea
mov
xchg
arpl
or
icebp
outsl
leave
and
test
mov
repz
push
mov
cmp
lahf
cmp
pop
pop
js
loop
pop
clc
test
push
pop
es
adc
inc
lea
rcrb
insl
mov
inc
in
mov
add
pop
sbb
bound
aaa
dec
xor
sbb
push
dec
gs
dec
movsb
rcll
ret
movsl
or
mov
aas
mov
xchg
sub
and
je
inc
in
xor
aad
std
scas
movsl
ljmp
dec
jmp
mov
adc
mov
jno
jmp
pop
mov
ret
pop
dec
sbb
add
xor
or
add
imul
rorb
popa
loope
or
sub
addr16
iret
cmpb
jl
mov
fs
mov
lods
sbb
dec
int
les
inc
loop
or
mov
xor
cmp
sub
inc
sahf
dec
cld
mov
adc
inc
pop
jb
or
or
xchg
gs
lret
sbb
pop
mov
jle
push
push
jno
in
xor
mov
push
imul
jg
jae
mov
or
outsl
stc
andb
jmp
fbld
jl
loop
ljmp
lcall
mov
test
mov
mov
jecxz
cltd
sub
add
arpl
in
dec
pop
ss
push
and
stos
jno
push
in
xstore-rng
cmpsl
inc
sub
mov
xor
mov
arpl
jp
mov
jo
sahf
dec
mov
cmp
pop
xchg
jg
rorb
or
dec
int
add
fildl
es
sub
ret
mov
mov
movsb
pushf
jo
loop
inc
outsl
ds
sbb
xchg
cmp
andb
adc
or
mov
ss
popa
xorb
stc
ret
mov
ds
add
adcl
fwait
adc
sbb
mov
push
repz
jae
les
sbb
arpl
mov
push
lea
inc
sbb
cmpb
mov
mov
xor
adc
out
test
mov
out
adc
add
cmpsb
std
pop
enter
out
sti
loope
pop
mov
adc
subl
mov
flds
inc
adc
dec
cli
in
jo
faddp
and
adc
jne
div
jl
sbb
fwait
mov
lahf
ret
testb
xor
cmp
sbb
mov
and
ss
dec
sub
dec
push
mov
pop
push
or
mov
inc
ja
aas
sarb
sub
jo
sbb
in
movsb
lods
xchg
sbb
nop
dec
sub
arpl
pop
fisttps
sti
cmp
sub
add
and
xor
fldl
xor
cmp
dec
movsl
pop
in
jl
and
imul
icebp
mov
popa
imul
stc
pop
les
mov
popf
jg
daa
mov
adc
fisubs
mov
imul
std
repnz
pop
movsl
mov
pop
jecxz
jnp
por
xor
ret
stc
inc
mov
push
stos
cmp
loop
jmp
pusha
nop
xchg
xchg
scas
jp
sti
jae
pop
push
in
mov
ljmp
sbb
add
mov
outsl
stc
fcoml
cmp
lahf
or
mov
mov
mov
adc
aam
lods
fsubl
push
push
cmp
push
mov
ret
jne
inc
sub
clc
aad
repz
mov
cmp
lock
cmp
add
jb
inc
sbb
adc
lahf
repnz
aaa
mov
cwtl
push
shlb
jmp
inc
or
dec
pop
fdecstp
cmc
adc
push
cs
dec
jge
mov
fisttps
leave
mov
push
cltd
mov
test
xorl
imul
shr
in
add
in
jge
jmp
in
mov
mov
ss
outsl
rcr
cs
push
fdivl
cmp
push
jle
push
add
testb
mov
ja
movsb
mov
sub
xchg
faddp
fisttps
nop
repnz
outsl
push
mov
fs
iret
rclb
sub
pushf
mov
adc
mov
xchg
mov
sub
mov
and
jbe
js
xchg
popl
mov
movsl
xor
pop
insl
push
aaa
jmp
sti
das
and
and
pop
add
addr16
adc
jo
arpl
sbb
in
js
xchg
cmp
xchg
add
xchg
jnp
pop
adc
dec
push
lret
sbb
dec
test
and
mov
call
or
aad
sti
mov
jo
lahf
mov
into
mov
xchg
and
shll
stos
xchg
dec
add
rolb
daa
loopne
sbbl
adc
pop
or
lods
imul
fimuls
addr16
jae
outsl
scas
xchg
or
or
lcall
jno
rolb
mov
notb
das
add
repnz
popa
insb
xchg
sbb
shrl
loopne
popf
pusha
sbb
mov
or
jae
dec
rcrl
cmp
stc
in
cld
outsb
fnsave
cmpsb
fadd
stc
enter
dec
jge
push
cmp
xchg
dec
int3
arpl
rorb
mov
cld
in
adc
push
fisubl
fwait
cmp
jo
inc
pop
or
mov
sub
pop
inc
cld
pop
cmp
stc
or
mov
cmp
test
pop
dec
rcl
inc
mov
mov
or
jae
loop
mov
jne
ja
pusha
jp
dec
lcall
inc
orl
int
mov
push
ljmp
insb
mov
and
add
out
push
xchg
sbb
cwtl
pop
push
pusha
cmp
jb
xchg
jmp
mov
cmp
rorb
and
lods
or
insl
push
daa
scas
cwtl
pop
mov
push
mov
je
xor
and
xchg
dec
rcrl
push
dec
das
cmc
repz
roll
mov
inc
out
mov
xchg
pop
xchg
add
jmp
mov
mov
aam
notb
jmp
ss
and
mov
push
mov
shr
cli
sbb
pop
clc
dec
mov
out
lret
in
aam
dec
push
xor
ja
pop
jp
std
fnstsw
mov
sub
jae
xorl
inc
jp
jmp
popf
dec
mov
xadd
sub
leave
dec
xor
or
push
addr16
repz
in
cwtl
xor
mov
adc
mov
xor
lock
out
ja
aaa
leave
mov
fsubp
mov
sar
mov
mov
xor
or
out
add
aad
mov
and
sub
add
dec
xor
repnz
rcll
clc
sub
push
and
sahf
cmp
shrb
mov
jge
mov
inc
sub
cs
pop
xchg
mov
xchg
xchg
dec
pop
out
or
xchg
or
das
adc
or
loop
and
loop
cld
test
nop
lahf
cwtl
adc
sub
sub
hlt
scas
ret
movsb
jmp
out
xorl
sti
jns
cmp
das
push
mov
imulb
sahf
es
arpl
ficompl
xchg
mov
gs
cwtl
mov
outsb
pop
stos
sbb
inc
push
mov
sub
add
gs
cmc
add
sub
jge
adc
test
mov
daa
jo
ljmp
pop
test
hlt
or
xchg
es
mov
add
cli
jge
mov
adc
pop
adcb
cmpsl
movsb
repz
cmp
sbb
push
inc
jnp
xlat
add
or
xchg
es
or
mov
pop
pushf
ret
push
sub
push
jmp
mov
movsl
mov
push
neg
sbb
mov
rol
test
xor
loopne
js
cmpsb
mov
and
stos
cmp
jno
fmuls
ss
imul
aam
cli
adc
inc
mov
sub
notb
add
cltd
sbb
subl
out
adc
pop
ror
xor
jb
mov
pusha
or
movsl
addl
add
in
xor
pop
je
pop
lahf
ret
xor
xchg
mov
pushf
out
sbb
mov
sbb
mov
scas
cmp
aad
pop
into
enter
xor
mov
and
cmpsb
and
aas
test
stc
loope
and
mov
adc
dec
les
push
ds
mov
lods
in
hlt
jecxz
xorl
add
xor
jge
imul
insl
jmp
xor
or
outsb
movsl
mov
xchg
mov
je
ret
dec
lea
sbb
in
cmp
insl
in
jmp
test
sarl
fidivrs
and
jo
jl
lods
sub
mov
jg
mov
push
xor
dec
outsl
jb
test
xchg
daa
fisubl
xor
push
mov
push
mov
xchg
push
fadd
movl
sahf
inc
test
mov
jmp
sbb
push
cwtl
sarl
xor
jecxz
movsb
cwtl
sub
xchg
dec
in
mov
pushf
mov
mov
mov
cmp
aad
pop
dec
les
xchg
jbe
cmc
pop
inc
fnstcw
add
add
xchg
push
in
dec
fimuls
or
mov
daa
test
adc
aaa
outsb
jecxz
sahf
out
fidivl
pop
mov
sbb
les
fdivl
dec
std
cwtl
insb
pop
mov
std
add
in
inc
add
mov
out
rcll
mov
mov
push
lret
mov
xchg
in
cmp
ficomps
mov
fsubr
fcomi
test
loop
xor
add
cwtl
repnz
inc
add
popa
lea
push
int3
sub
fwait
cmc
cmpsl
adc
gs
std
add
into
leave
enter
and
inc
xchg
out
and
lock
xchg
fs
jmp
lock
outsb
arpl
jns
jl
jp
xchg
sbb
loopne
imul
stos
adc
aad
xchg
dec
push
rorb
jno
push
fstps
lods
pop
lds
lds
mov
fcmovu
pop
jnp
mov
insl
push
sub
dec
cmc
mov
adc
and
out
push
fldln2
add
sbb
dec
or
aad
rorl
adc
xor
dec
push
sbb
cltd
adc
push
lret
xchg
call
in
adc
or
add
pop
test
mov
mov
inc
push
lea
into
inc
pop
pop
mov
shl
negl
cmp
sbb
fucom
ret
dec
xchg
mov
sub
outsb
pusha
imul
bound
cmp
sbb
xor
rol
pop
push
or
fidivrl
adc
js
ljmp
lahf
pop
inc
push
mov
dec
ljmp
jp
cltd
mov
cmp
mov
ja
dec
ret
jns
pop
roll
es
test
data16
push
inc
push
nop
mov
cmp
movsb
jle
and
out
adc
sub
stos
pushf
mov
cli
mov
xor
and
rol
jp
lods
jp
popf
iret
nop
ss
cld
lahf
jmp
xor
pop
jmp
orl
cmp
mov
stos
into
inc
or
fnstenv
mov
adc
shrl
dec
mov
insl
into
push
push
stc
clc
and
jo
push
ja
addl
insb
pop
es
aaa
mov
mov
repz
movsb
out
mov
adcl
sbb
mov
jne
roll
or
mov
test
int3
jp
jmp
mov
inc
movsb
testl
cwtl
dec
jne
lcall
mov
loop
dec
movsb
sbb
inc
pop
add
out
cmp
xchg
lret
xor
insb
and
or
sbb
test
fidivl
mov
ljmp
mov
sarl
popf
dec
xchg
pop
lret
push
mov
sahf
pop
xchg
lock
jl
push
lea
sar
into
mov
inc
sub
popf
sub
fnstenv
mov
mov
call
dec
gs
sub
pop
fstpl
add
pusha
mov
das
cmp
aad
adcl
push
xchg
pushf
repz
es
in
cltd
insb
ret
adcl
imul
js
jb
dec
sar
out
jno
int3
sub
mov
sub
arpl
mov
sti
test
mov
jl
pusha
cwtl
mov
and
push
mov
or
dec
ljmp
shr
fsubl
test
cmp
fildll
in
subl
ss
jbe
adc
in
dec
pusha
add
stos
aad
pop
popa
fdivl
iret
adc
mov
jl
out
daa
mov
ljmp
mov
addl
push
in
mov
loopne
scas
pop
int
movsb
adc
repnz
mov
lock
mov
jbe
rcrb
adc
nop
cltd
movb
ffree
fwait
call
xchg
sub
stos
jg
in
in
cmp
fnstsw
movsl
fdivp
sub
dec
dec
add
outsl
and
sbbb
push
push
xchg
mov
xor
lods
das
leave
sub
ljmp
jl
mov
cmc
jmp
mov
pop
stc
flds
rclb
and
pop
sahf
jg
mov
lds
jne
mov
lock
cmp
fdivl
and
cmp
pop
cmp
mov
sahf
or
das
jecxz
outsb
mov
pop
sub
negl
xchg
mov
stos
push
xor
shll
repz
xchg
imul
imull
imul
in
inc
sahf
push
ret
cmpsb
leave
xor
aad
sbb
adc
add
fstps
pop
sub
movsb
pop
cmpsb
jmp
pusha
jecxz
jne
ret
aas
sub
mov
movsl
xchg
pop
push
insl
imul
lock
cmpsl
push
lods
or
ret
in
dec
in
lods
std
or
sti
inc
popf
push
divl
je
adc
data16
dec
in
jmp
push
cmp
test
cwtl
cmpsb
cmpsb
into
lahf
call
jne
xchg
mov
xchg
ficoml
jno
and
mov
xchg
mov
pop
sti
mov
jne
push
cmpsl
fnstsw
ds
dec
push
pop
jbe
mov
mov
push
mov
mov
ret
jns
stos
sub
push
mov
arpl
fistps
ds
lcall
test
lahf
push
pop
sbb
cmp
sbb
xchg
push
lret
or
jo
dec
popf
xor
out
sub
or
ret
sub
lds
aam
pop
hlt
mov
sub
xchg
jg
iret
mov
icebp
mov
loope
adc
call
repz
cmc
cmpsl
push
dec
dec
test
movsb
jecxz
jns
mov
xchg
aam
and
into
fisubs
xor
mull
mov
pop
cmpsb
pop
push
fcmovb
adc
scas
loop
das
imul
fwait
ja
or
push
popa
dec
hlt
pop
xchg
push
jb
insb
mov
fisttps
int3
add
into
mov
jecxz
cmp
sub
sbbb
jae
dec
arpl
xor
addr16
insb
inc
mov
bound
mov
sbb
ror
call
fs
inc
out
dec
test
ficoml
inc
lods
inc
lods
lret
movsl
mov
push
pushf
jmp
movsb
test
enter
fisubrl
out
xor
fildl
cmpsb
stos
xchg
insb
in
lcall
sbb
sub
mov
shr
sub
add
fstpl
lds
ret
mov
and
imul
pushw
sarl
xchg
xchg
nop
jnp
or
out
shl
cmpsb
decb
jmp
test
dec
loopne
call
add
cli
in
pushf
pop
shrl
lock
inc
sub
sbb
out
mulb
aaa
shll
adc
cld
sbb
sbb
fwait
cwtl
adc
lahf
loopne
push
jl
iret
lock
xor
ds
ja
adc
inc
cvtpi2ps
fmul
insl
dec
dec
test
jl
dec
int3
in
xorb
xor
jecxz
sarb
fiadds
cmp
adc
mov
add
test
notl
or
fsubrl
adc
and
xchg
ret
xor
ret
jge
inc
add
test
or
mov
sub
roll
jmp
sti
cmp
pusha
cmp
xchg
mov
js
pop
popa
sub
jg
pop
xchg
xchg
adc
hlt
faddl
mov
and
in
enter
mov
inc
inc
lret
out
pop
mov
ds
gs
cli
les
ret
jne
stos
jo
shl
mov
ds
test
enter
cld
jl
aas
ret
dec
leave
out
test
pop
sbb
sbb
push
or
push
and
sti
jp
push
xor
scas
out
dec
mov
ret
mov
lock
sbb
and
insl
scas
iret
stos
xor
lcall
shl
popa
addr16
cmp
mov
add
imul
or
mov
push
inc
out
les
jg
movsl
xor
cmpsl
mov
or
out
lds
jg
cmp
or
push
movsb
enter
jbe
rcr
lods
cmpsl
pop
test
outsl
xchg
sub
movsb
adc
cltd
mov
imul
mov
insl
dec
mov
sub
cmp
shlb
out
ss
in
in
fidivs
cmpsb
mov
out
imul
repz
mov
scas
ficoms
js
test
aad
in
jl
xor
cmpsl
push
adc
pop
dec
fdivl
cmp
xchg
mov
mov
mov
xor
cmpl
aad
inc
xchg
clc
pusha
xor
fdivrl
and
push
outsl
adc
inc
repnz
inc
xchg
ret
lcall
lcall
mov
pop
xchg
jnp
mov
and
pop
push
insl
jbe
jecxz
inc
int3
call
pop
lds
fwait
scas
mov
fdivs
jnp
mov
inc
js
mov
and
dec
pop
adc
and
sbb
mov
mov
movsl
cmpsl
mov
adc
add
mov
adc
mov
sbb
lahf
daa
int3
jo
xchg
test
and
std
ja
jmp
test
rorl
cmpsl
nop
nop
sbb
sti
rcrl
addr16
cmp
mov
jne
bound
insl
mov
add
add
fisttps
lock
gs
push
add
mov
out
mov
pop
or
cmp
or
rorb
adcb
sbb
cmpsb
clc
sbb
je
jne
ret
test
cmpsb
call
jecxz
push
jne
testl
scas
aas
int3
sbb
fisubs
xchg
lret
clc
mov
repnz
xlat
imul
cmp
inc
inc
xor
and
pop
cmp
sbb
insb
or
mov
cs
rol
popa
push
cmp
mov
test
mov
orb
inc
and
xor
js
adc
loop
insl
sub
enter
fnstsw
loope
idivl
cmp
or
shlb
xor
lcall
nopl
jl
mov
cmp
nop
dec
lods
cmpsb
inc
and
idivl
fdivl
pop
mov
add
xorl
jg
int3
lock
mov
jl
cld
pop
sarb
push
cmp
inc
pop
cmp
cmc
mov
mov
or
add
jmp
mov
and
int
mov
fwait
jnp
add
ret
pop
cmpl
out
push
mov
dec
in
int
mov
mov
ret
adc
out
pop
inc
dec
pop
adc
in
jno
addl
dec
mov
mul
sbb
clc
xchg
loope
arpl
pop
adc
inc
out
pop
jmp
cwtl
dec
cmp
test
pop
add
jo
test
or
mov
cltd
call
test
stc
add
adc
and
mov
dec
mul
stos
sti
mov
shl
daa
mov
loope
xchg
pop
sbb
iret
stc
add
test
es
imul
je
xchg
xchg
pushl
mov
int
ljmp
arpl
je
setg
mov
or
cmp
add
mov
cmpsb
push
cmpsb
in
sub
sub
xchg
lods
xchg
es
ss
call
lret
mov
fcmove
out
in
subb
mov
mov
sub
and
mov
jle
jne
cwtl
test
mov
mov
aam
xchg
in
push
cmpsl
or
push
push
adc
mov
inc
dec
adc
sub
pop
pop
dec
push
mov
cmp
xchg
sub
negb
jecxz
and
subb
shr
mov
lea
xorl
mov
inc
daa
repnz
and
jge
sti
push
repz
mov
je
dec
add
jmp
add
aam
imul
shrb
push
les
or
xchg
out
push
daa
xchg
cmc
pop
cmc
jb
cmp
push
cltd
fcompl
and
mov
adc
sbb
clc
push
xor
stos
mov
test
addl
jne
jae
push
imul
dec
mov
push
dec
or
jns
das
dec
mov
sub
xchg
push
fs
mov
lods
mov
hlt
in
adc
add
andl
jg
push
stos
xchg
fistl
pop
mov
xchg
pop
cli
xchg
int
sub
mov
mov
imul
repz
clc
test
scas
sbb
adc
dec
cmpsl
repnz
push
pop
aad
insb
sbb
adc
lock
jg
js
xor
pushf
mov
test
sbb
xor
out
insl
push
pop
jno
bound
ss
scas
stc
xchg
out
dec
pop
in
sahf
dec
push
pushf
pop
pop
sub
popf
call
xor
push
mov
sub
pop
lods
pop
fbstp
out
or
sahf
gs
mov
daa
add
test
sub
imul
or
cmc
iret
mov
mov
insb
imul
lret
fmuls
mov
ss
jne
shll
iret
mov
mov
sub
cli
jp
test
fstpl
std
inc
nop
int3
das
or
xor
mov
or
les
ds
xor
xchg
mov
out
xchg
jg
xchg
push
shll
mov
mov
pop
cltd
cmp
pusha
aad
mov
imul
pop
xor
add
pop
cmc
loopne
adc
cmc
int
lods
dec
jl
pop
fdivr
test
dec
subb
outsb
mov
xchg
jg
cmp
arpl
cli
pop
adc
cwtl
or
pop
fisttpll
push
sbb
out
jo
pop
imul
or
out
insl
ds
sub
es
mov
mov
mov
or
push
aam
les
jno
dec
out
add
loope
cwtl
idivb
pop
xlat
cmp
loope
aas
scas
pop
and
mov
leave
sbb
xchg
or
inc
outsb
add
sbb
cmp
sbb
cwtl
leave
movl
xchg
fadd
xchg
stc
lea
or
ss
ret
push
fsub
loopne
mov
out
mov
mov
pusha
xor
sbb
jb
mov
cmpsb
jge
or
scas
clc
mov
jp
jbe
rcrb
mov
jnp
push
cli
int3
pop
push
sub
insb
mov
jnp
rcll
jno
leave
sbb
jns
std
mov
lods
fistps
cs
xor
sub
imul
popf
imul
popf
xchg
ret
mov
clc
xor
dec
sub
outsb
sbb
ja
popa
xchg
cmp
int3
dec
add
leave
fsubs
mov
hlt
xchg
testb
daa
inc
pop
test
call
jmp
dec
adc
fldl
adc
mov
xchg
xchg
lock
xor
jne
sub
sbb
and
sarl
mov
adcb
fists
fistpl
fidivs
inc
adc
cmpsl
lods
sub
xchg
cmp
dec
sahf
dec
adc
cmp
or
mov
stos
dec
stos
push
mov
xor
mov
popf
stc
push
test
stos
mov
xchg
repz
sbb
scas
rcrb
lods
adc
aad
xchg
pop
aam
stos
or
stc
sahf
cld
sub
jbe
mov
cmp
or
addr16
scas
sub
mov
hlt
adc
adc
imul
dec
pusha
jnp
xlat
mov
and
inc
adc
arpl
cmpsb
in
xchg
inc
xor
pop
adc
or
sbb
fcmovbe
dec
icebp
dec
jp
jb
mov
je
push
faddl
iret
add
mov
daa
mov
cmp
sub
mov
call
xchg
add
clc
incb
stc
stos
pop
cwtl
adc
xor
stos
jmp
xor
mov
xor
repnz
shl
test
int
cmc
sub
inc
xchg
test
fcmovu
lods
repnz
repz
out
mov
xchg
out
sub
outsl
fadd
sti
in
mov
push
shlb
leave
jb
popa
cmp
mov
loop
hlt
icebp
out
cmpb
and
lods
rorb
and
sub
pop
loop
mov
rclb
jg
lds
xchg
popa
iret
gs
in
in
hlt
aaa
repnz
and
mov
call
jnp
mov
mov
cld
cmc
mov
mov
clc
mov
negb
bound
jg
jnp
and
lret
and
jge
pop
sub
cmp
js
push
pop
mov
shlb
push
sbb
mov
insl
hlt
ljmp
or
xchg
orb
gs
lahf
mov
pop
test
mov
addr16
xchg
mov
addr16
movsb
push
leave
lock
mov
xchg
insb
dec
or
push
pop
or
stos
clc
sub
push
cmp
pusha
shlb
fcmovu
jmp
lea
or
test
sar
mov
les
cmp
lcall
add
xor
push
sti
les
clc
mov
mov
popa
cmp
jns
jae
repz
pop
push
push
hlt
dec
pop
nop
loop
ds
and
jl
xlat
or
pop
push
fmuls
mov
sahf
inc
jl
xchg
out
in
or
insb
add
inc
gs
popa
inc
pop
xchg
pop
dec
test
push
lods
in
std
jo
xor
fimuls
cltd
mov
aas
mov
push
xor
cmp
test
outsl
or
iret
into
push
add
out
cmp
data16
xlat
jmp
sub
mov
inc
imul
xor
pop
mov
add
push
lock
gs
les
ret
fwait
test
pop
shlb
cmpsl
cmp
clc
fnsave
arpl
dec
add
daa
and
adc
adc
cmp
repnz
jb,pt
out
lcall
and
lahf
hlt
push
jbe
shr
xor
sbb
stos
push
sub
clc
fwait
loop
mov
adc
cmpsb
add
in
in
pop
repz
sbb
inc
lret
lock
mov
ljmp
rorl
repnz
add
push
xlat
addr16
and
or
mov
sbb
aam
mov
insb
add
or
mov
fmul
pop
inc
xor
xchg
xchg
mov
mov
aad
add
mov
xor
xchg
cmp
lcall
mov
and
ret
movb
shl
lahf
inc
inc
clc
sti
into
push
sbb
hlt
lcall
pop
jns
add
xor
imul
sbb
adc
inc
xor
shrl
xor
pop
ds
sbb
inc
mov
scas
inc
inc
pop
movsb
loop
mov
fxch
stc
insl
test
daa
loop
stos
daa
pop
dec
int3
xchg
fcoms
fisubl
add
lods
mov
imul
xor
not
inc
loope
xor
out
lea
mov
inc
adc
cmp
push
jge
mov
xlat
mov
dec
cmc
mov
test
jp
loopne
repnz
jae
adc
sub
mov
into
sbb
inc
lods
bound
mov
aam
rcll
sbb
lcall
push
int
pusha
addl
add
inc
cmpsl
or
idivl
pop
call
jmp
jnp
popa
icebp
mov
sar
test
mov
popa
nop
xchg
repz
sti
adc
xchg
and
addb
jp
and
xor
into
ret
add
xchg
movsb
mov
cmc
sbb
xor
ljmp
pop
imul
add
inc
fmull
jne
xchg
add
mov
lret
mov
nop
daa
ss
jae
ds
sub
dec
dec
test
jb
jnp
mov
dec
xchg
xor
stc
mov
mov
stos
mov
xor
mov
imul
das
and
stos
lahf
sub
cli
or
sahf
loopne
mov
loope
fwait
jne
sbb
jge
pop
std
in
sub
fsub
ret
xchg
les
popa
mov
cld
jg
call
test
cmp
insb
imul
icebp
iret
lock
test
popf
cmpsl
mov
sub
mov
mov
inc
sbb
lods
das
aad
jo
sbb
mov
leave
aaa
pushf
sbbb
stc
arpl
iret
push
nop
jg
mov
inc
push
adc
sub
cmpsb
int
ja
sub
add
mov
sti
inc
cwtl
or
jnp
loope
sahf
iret
lock
movsl
xlat
shrb
insl
bound
push
cmp
sbb
push
adc
mov
push
int
popa
ja
or
inc
adcb
push
mov
imul
pop
and
in
sarb
sub
test
lock
popa
shll
xor
xchg
hlt
sub
pop
inc
pop
test
cld
pop
pop
popa
mov
js
xchg
pop
ljmp
sbb
xchg
mov
fldt
mov
stos
mov
sub
scas
sub
fisttpll
daa
stos
adc
cmp
dec
fnsave
fldenv
mov
mov
clc
sbb
cmc
mov
popa
stc
and
dec
ja
pop
and
arpl
sahf
jae
add
sub
fisubrl
mov
fisttpll
cmpsb
outsb
paddsw
lock
test
xchg
popf
jl
insl
pop
ret
xchg
mov
ret
xchg
cmc
lret
sub
mov
mov
mov
faddp
adc
inc
bound
fcmovu
and
enter
addr16
pop
out
cmp
mov
pop
xor
push
bound
test
lods
arpl
inc
jnp
jle
push
loope
push
dec
adc
push
daa
fldl
popf
orl
gs
mov
fs
clc
pop
rolb
int3
lret
push
movsl
cmp
insl
sub
or
cmpsb
sub
pushf
ljmp
aad
orl
cwtl
in
push
xchg
adc
jmp
int3
xor
or
xchg
inc
cltd
xor
xor
stos
ret
imul
sarb
cmp
add
pop
push
cmpsb
push
cmp
mov
mov
dec
cmpsb
enter
add
mov
shll
push
leave
mov
rcll
pop
stos
push
sub
out
xlat
and
fwait
scas
and
roll
imul
mov
sbbl
pop
fiaddl
xchg
cli
popa
scas
clc
jg
pop
jnp
mov
pop
jge
mov
xor
sub
pop
sti
dec
outsl
bound
xor
sbb
sarb
into
cs
and
xlat
ds
rcr
das
int
imul
into
imul
rcrb
insb
idivb
in
imull
jge
mov
xchg
call
fdivs
pop
test
xchg
arpl
mov
mov
gs
sbb
xor
in
adc
aaa
adc
out
fstpt
cmpsl
addl
cmc
cltd
push
mov
push
dec
cmp
jbe
scas
mov
or
xchg
pop
xor
and
imul
add
insl
adc
stc
fwait
jp
xor
inc
push
sub
mov
arpl
bound
outsb
cmc
xor
cmp
push
ret
jne
popa
loope
mov
push
call
mov
lcall
xchg
inc
add
mov
pushl
pushf
xor
mov
mov
mov
add
dec
xchg
les
adc
aam
mov
icebp
sub
stos
dec
pop
jp
sbb
mov
jle
js
int3
hlt
or
call
data16
scas
pop
das
and
push
and
pop
testb
add
cmp
add
xor
ret
cmp
lods
lods
adc
rcr
cmp
adc
jns
and
in
adc
enter
push
mov
stos
push
out
xchg
mov
test
in
inc
cli
mov
es
push
xor
xorb
push
lods
lods
out
xchg
sub
fsubs
popa
andb
js
xchg
cmc
sub
pop
addr16
push
call
pop
pop
popf
int
xchg
cmpsl
pop
jmp
adc
in
fnstsw
adc
enter
outsl
push
xchg
sbb
pushf
enter
outsb
cld
mov
mov
and
mov
inc
testb
js
jge
mov
out
les
stos
dec
jo
xorb
xchg
sub
fsts
xor
jp
stos
cmp
cli
xor
sub
fidivrs
xlat
mov
scas
mov
push
cmp
test
xchg
aas
mov
test
pusha
sub
or
fdivr
dec
xchg
stos
scas
inc
jne
jle
sub
lcall
dec
and
mov
test
add
jg
dec
js
in
lods
flds
sbb
mov
insl
lods
mov
lods
inc
addb
xchg
cmp
sti
jp
cli
inc
mov
fcomps
inc
jp
pop
xchg
jle
repz
push
lea
jno
test
in
fs
mov
lahf
push
mov
add
push
jp
ret
aad
mov
in
enter
and
mov
cwtl
les
ret
in
les
mov
repz
cwtd
pop
cmpsl
stc
mov
das
jo
cmp
sbb
fs
stos
fadds
jo
dec
lock
push
shlb
sub
lahf
lock
test
xchg
imul
xor
and
movb
sub
lret
sbb
or
movsl
add
sub
jb
jns
shl
movsl
imul
xchg
aas
aad
push
pop
pop
mov
sub
sub
inc
hlt
shl
add
dec
adc
cwtl
dec
mov
and
pusha
lret
iret
hlt
sub
lock
out
xor
xchg
lahf
lahf
fs
add
cwtl
jae
mov
xorb
pop
jmp
xchg
xor
push
outsb
xchg
cmp
addb
mov
mov
jae
loope
imull
push
pop
into
paddb
jnp
mov
inc
pop
inc
pop
int3
pushf
xor
loop
dec
inc
cwtl
sub
les
pop
xchg
push
add
or
or
sub
fwait
outsb
ja
fs
std
mov
cmpsl
imul
int3
adc
imul
movsb
cwtl
fwait
lahf
and
movsb
add
movsb
jnp
in
cmc
sbb
or
int
lret
mov
jl
mov
lahf
out
mov
addr16
out
ror
ror
sbb
mov
imul
stos
pop
pop
or
inc
lahf
sub
mov
xsha256
cmpsb
xlat
in
adc
out
out
lea
mov
and
fcmovbe
andb
or
out
in
aad
dec
call
fsubs
push
fcoms
sbbb
cwtl
into
push
jo
cwtd
mov
lock
cld
cmp
jbe
orl
lds
push
ds
sub
sbb
sbb
hlt
mov
and
psubd
pop
es
or
sbb
sub
notb
int
nop
ret
push
mov
mov
iret
cmp
inc
and
sub
nop
xchg
insb
rclb
pop
ds
cmp
cmp
xchg
jmp
or
cwtl
int3
js
pop
call
and
outsb
mov
test
data16
cmpsl
cmp
aad
call
cli
push
lds
jo
ret
mov
jmp
addr16
outsl
int3
daa
mov
inc
hlt
and
bnd
mov
in
decb
mov
int3
jg
mov
or
jmp
mov
push
sub
in
xor
mov
ja
adc
test
addb
xor
aas
out
jmp
mov
insb
paddb
push
or
ss
sbb
das
clc
xlat
push
push
or
and
std
das
stc
mov
inc
push
aad
push
lahf
push
or
pop
dec
or
int3
sbb
aaa
stos
popf
jne
movsb
dec
xor
leave
push
es
nop
popa
aam
repz
xchg
fstpl
iret
pop
adc
aad
ja
mov
push
adc
mov
sub
jle
push
out
or
push
or
cmpsb
jne
and
xor
call
sti
or
jnp
mov
ss
jbe
cmp
sub
shlb
sub
and
xor
mov
popa
test
xchg
mov
xor
dec
pop
ljmp
and
lock
out
ds
daa
mov
fwait
leave
sub
insb
mov
mov
jne
push
sub
mov
dec
arpl
ljmp
dec
rclb
jp
inc
xchg
mov
inc
xchg
mov
pop
syscall
dec
inc
mov
and
lods
shll
sbb
mov
movsb
and
fucomip
and
mov
jae,pt
fwait
inc
clc
xchg
inc
cwtl
in
cltd
adc
fisubrs
inc
push
lahf
mov
pop
in
push
mov
and
shll
mov
stc
pop
in
or
hlt
loopne
pop
add
cltd
addr16
mov
sar
dec
rorb
xor
clc
lods
mov
xlat
orb
mov
pop
frstpm(287
sbb
push
lods
out
inc
jae
jecxz
inc
mov
rolb
outsb
aad
arpl
inc
imul
mov
imul
lea
pop
mov
repz
subb
lcall
inc
cmp
fwait
lock
mov
lcall
stc
jge
sbb
inc
adc
cmp
or
and
mov
dec
push
fisubrs
or
sub
push
sbb
das
filds
lcall
inc
sub
jnp
pop
jb
out
pop
push
scas
ds
in
ss
sbb
arpl
lret
push
add
xor
test
sbb
jns
pop
sbb
mov
jg
aam
movsb
xor
roll
imul
mov
jmp
lret
add
insl
fldt
movsb
sub
sbb
out
rorl
cmp
mov
xor
or
cmpsl
xchg
mov
outsl
lret
es
or
add
das
ret
or
cli
mulb
and
aas
mov
jne
mov
mov
adc
xor
int3
rcll
sub
lock
addr16
stc
or
insl
push
add
xchg
adc
pop
pop
cwtl
test
pop
shr
jge
mov
enter
test
adc
jae
inc
mov
mov
fists
sbbl
fistps
mov
and
les
inc
sub
ror
dec
pop
fsts
mov
xchg
push
pop
scas
pop
mov
inc
stc
xchg
jl
lods
mov
es
lea
movsb
dec
mov
ljmp
jmp
arpl
aad
dec
cmp
in
dec
mov
punpckhwd
ja
fnstenv
cltd
and
sbb
and
mov
dec
mov
cld
xchg
aad
fs
repnz
movsb
lock
xchg
mov
jae
cmp
and
daa
dec
imulb
pop
fcmovnb
dec
mov
ss
mov
mov
sbb
cltd
cli
sahf
mov
stos
out
aas
fidivrl
sub
out
scas
ret
out
fbstp
mov
mov
dec
adc
push
stos
push
iret
mov
xor
js
cmovge
outsl
adc
dec
cmp
cmp
icebp
jmp
sub
push
xchg
int3
gs
insl
xorl
inc
jp
not
bound
sbb
lahf
pop
andb
and
aas
aaa
cmpsl
push
sbb
inc
sahf
into
in
jne
out
sub
out
mov
cmp
jmp
push
xor
dec
loope
and
ret
push
xlat
outsb
lods
rorl
jo
cld
inc
aaa
inc
sar
stos
cld
add
or
push
push
mov
mov
mov
filds
arpl
sub
xchg
fwait
lds
stc
test
sub
stos
std
add
xchg
into
pop
push
mov
jge
inc
cmp
out
cmp
aad
dec
leave
loop
outsb
imul
cmp
ficompl
ret
push
out
insl
nop
jecxz
or
jmp
jno
stos
leave
test
daa
mov
fcoml
test
mov
pop
dec
mov
ret
fstps
push
imul
pop
cmc
push
or
mov
mov
mov
mov
lcall
lods
imul
lcall
cmpsb
in
jb
add
fldenv
lock
pop
jnp
lret
es
stos
in
test
mov
cltd
or
ds
fnstenv
push
dec
sbb
mov
jecxz
outsb
xor
jle
jecxz
and
sub
stos
cmp
aas
inc
xor
cmp
sbb
mov
lods
or
push
adc
mov
sahf
pop
sbb
int3
adc
xor
mov
outsb
jmp
je
mov
sub
js
call
in
mov
mov
mov
xor
pop
stc
adc
or
inc
into
je
jb
sbb
xchg
or
xor
and
repz
loopne
mov
jae
je
ss
sarl
pop
mov
and
jp
sub
mov
sub
pop
popf
pop
loopne
cltd
pusha
ljmp
sarl
mov
cmp
insl
jecxz
sbb
je
cs
fs
pop
pop
cs
bound
outsb
xor
push
fimuls
pop
popa
and
inc
xor
addl
mov
push
xchg
mov
push
sub
mov
iret
jnp
adc
lock
int3
inc
sub
test
fbstp
movsb
cmpsl
fdiv
orb
jp
push
jns
jmp
or
sub
cmp
and
adc
fisttpl
pop
xlat
push
xchg
cmpsb
push
ss
sub
mov
fisubrl
sub
jmp
jl
mov
std
cmp
fcoms
push
lahf
jns
orb
mov
xor
imul
dec
push
cmp
pop
out
aam
jne
cmp
mov
sub
add
cwtl
lock
iret
fisubrs
scas
and
lock
push
pusha
movsl
scas
addb
mov
fnstcw
jl
push
test
in
add
leave
lahf
and
jge
ljmp
sub
out
test
shl
imul
push
xlat
dec
int3
adc
cs
adc
and
shrl
dec
push
cmc
in
add
dec
jle
pop
inc
iret
in
or
pop
inc
sbb
ret
sarb
jno
dec
xor
pusha
scas
jp
or
test
es
rcll
push
push
xchg
push
bound
mov
mov
jno
xor
call
imul
jns
dec
clc
or
fadds
enter
push
in
add
or
pop
sahf
and
push
mov
adc
lods
popa
insl
insl
pop
pop
pop
pop
xchg
push
movsb
jns
fisubs
bound
adc
adc
or
adc
inc
sarl
mov
and
pop
pusha
ffreep
test
ja
ljmp
xchg
adc
jp
cmp
out
ja
test
mov
mov
pop
sub
add
jb
js
aam
loopne
jg
pop
push
push
fidivl
and
mov
mov
jp
mov
lahf
push
cli
sub
inc
mov
jnp
fildll
inc
dec
xchg
les
fldt
lds
pop
xor
jo
mov
sub
shlb
sti
loopne
mov
adc
inc
adc
inc
insl
xor
jnp
mov
fwait
and
cltd
hlt
jns
jae
jb
or
adc
cmp
popf
enter
xchg
movsb
inc
loopne
sbb
pushf
jle
js
ret
fildl
test
mov
imul
xor
aam
call
pusha
pop
cmpsl
xor
imul
xchg
mov
pop
jnp
sar
mov
sti
push
testl
or
das
adc
mov
test
int
arpl
xor
sub
jns
movsl
xor
stos
cmpsb
rcrb
pop
insb
push
and
fstl
push
setnp
fisubl
sbb
jmp
test
inc
mov
sbb
inc
xchg
jmp
cmpsl
mov
sahf
mov
lret
shll
lcall
pavgw
pushf
ret
pop
jae
sbb
push
push
js
ret
mov
imul
aam
andl
into
std
js
repz
divl
cmpsl
or
sub
sub
mov
xchg
cld
inc
sub
adcl
sbb
aas
lret
jle
mov
mov
pop
enter
fistl
xor
sbb
scas
popa
enter
jns
xchg
mov
imulb
stc
sub
clc
mov
mov
mov
jo
dec
push
dec
pop
test
cmpsl
out
add
and
call
xor
adc
test
mov
jae
dec
in
jg
insb
outsl
cmovp
jl
mov
mov
into
mov
out
inc
fmuls
stos
push
pop
xchg
sbb
xor
mov
dec
xchg
cli
lods
push
sub
adc
push
push
xlat
scas
xchg
ficoml
std
nop
adc
pop
incl
inc
lds
je
cltd
xor
shll
cld
pop
jno
outsl
addr16
push
lcall
add
aaa
mov
sub
idivl
cmp
rcll
xlat
jnp
add
and
sbb
outsb
cli
inc
movsl
cmpsb
aad
adc
jns
arpl
inc
into
jmp
popa
push
adc
imul
jo
or
push
adc
xchg
cmp
iret
sbb
pop
fcomps
in
mov
test
mov
cmp
lret
jmp
cmc
ss
xchg
int
lock
mov
ljmp
hlt
dec
rcr
lods
dec
hlt
cmpsl
sub
fisubrs
or
cmpsb
in
lahf
pusha
daa
sbb
mov
dec
sbb
mov
xorb
jo
addr16
fwait
mov
repz
adc
sbb
leave
add
add
cltd
ror
xchg
jbe
pop
mov
outsb
mov
add
mov
fadds
in
inc
inc
enter
and
jbe
push
or
in
and
dec
sub
sbb
add
and
dec
sub
push
loope
xorl
mov
jl
test
xor
add
push
push
sub
jno
repnz
push
jno
iret
or
mov
jg
jmp
sbb
mov
leave
xchg
cmp
loopne
in
rclb
xor
add
iret
cli
sar
and
jmp
test
movsl
in
and
jb
pop
loop
je
mov
movsb
cld
xor
fisttps
push
sub
lret
iret
jecxz
and
enter
mov
lods
jmp
insl
mov
sub
prefetch
stc
xlat
adc
dec
gs
push
test
push
loop
jbe
or
pop
inc
and
jmp
frstor
out
imul
ja
jo
repz
push
dec
mov
mov
stos
sahf
mov
dec
jge
or
aad
sub
adc
das
sub
test
and
rcrb
xchg
jb
mov
sub
ss
fwait
push
dec
sub
in
jmp
pop
dec
mov
int
mov
call
decl
orl
out
insl
sub
ja
mov
mov
adc
int3
repz
stos
js
shll
mov
rcl
and
dec
xchg
mov
je
add
jmp
push
pop
lcall
and
fcmovne
push
addr16
loope
jbe
sbb
cmp
shrb
adc
call
jnp
insl
loopne
xchg
std
dec
cmpsb
divl
mov
xchg
lds
xor
xchg
add
es
lea
test
int
inc
sub
xor
or
loop
jecxz
or
lock
pop
sbb
inc
test
xchg
mov
inc
scas
ja
inc
in
pop
mov
mov
cli
inc
in
cld
pop
mov
xor
sub
sbb
ficompl
sub
pop
pushf
lret
mov
fisttpll
cwtl
insb
lea
addr16
call
in
inc
or
push
gs
push
jp
jno
mov
xor
mov
ja
or
add
jbe
shll
std
jg
dec
lods
push
cmp
out
jmp
mov
stos
cmpsb
mov
std
push
nop
aad
enter
dec
lahf
adc
aas
ljmp
mov
mov
ljmp
xor
or
rcrl
out
lret
push
lods
into
jg
xchg
cmp
push
mov
adc
jecxz
push
push
call
sarl
clc
push
rclb
cmpl
sub
add
mov
mov
pop
xchg
mov
push
shlb
sub
aaa
sub
dec
ret
mov
cmp
outsb
scas
ror
rorb
lds
push
sarl
roll
test
movsl
mov
xchg
mov
test
pop
inc
pushf
adc
lret
rcr
cmp
adc
mov
jmp
push
add
pop
push
pop
repz
rorl
or
or
pop
inc
and
pusha
stc
inc
inc
popf
nop
pop
outsl
fisttps
mov
inc
movsb
xchg
add
repnz
es
jp
or
pop
in
aaa
xchg
cs
test
fsubl
shlb
js
iret
dec
fcompl
outsb
imul
into
jp
xor
mov
clc
ficompl
ljmp
and
lds
or
leave
pushf
adc
pop
lahf
pop
mov
push
or
jp
stos
cmp
in
push
lcall
pop
adc
xchg
gs
subb
add
jae
inc
icebp
lods
int
in
jmp
mov
icebp
es
inc
outsb
pop
xor
jae
outsl
cmp
in
test
mov
push
cltd
movsl
xorb
sub
adc
stos
fucom
mov
add
fstl
leave
jb
test
add
stos
mov
iret
xor
setb
int3
push
dec
jb
sub
pop
je
test
mov
sub
cltd
bound
xchg
ret
inc
outsb
mov
pusha
sub
cwtl
pop
adc
adc
xlat
dec
pusha
adc
cs
mov
mov
and
out
pop
gs
sbb
mov
pop
sub
xchg
mull
pop
dec
cli
or
dec
in
xchg
cmp
out
jge
mov
mov
stc
repz
push
aas
mov
mov
stc
dec
cli
mov
cmc
lds
dec
lahf
fsubrs
inc
push
push
int3
cmp
jge
xchg
pop
imul
cmp
add
or
jbe
rolb
xchg
mov
mov
push
shrb
sub
nop
push
test
add
test
or
sub
sub
and
push
je
adcb
and
pop
sub
fsub
adc
dec
subb
data16
adc
ret
mov
aam
mov
loopne
arpl
adc
inc
xchg
stc
xchg
dec
into
repz
leave
jge
pop
mov
xor
jae
rol
jbe
adc
fsubrs
push
cmp
cmp
sub
add
loop
mov
mov
pusha
xor
repnz
sbb
pop
out
or
testl
and
inc
addb
inc
cmp
out
sub
push
or
add
outsb
insb
stc
ja
loope
push
aaa
jb
jge
jbe
pop
shrl
mov
stc
hlt
push
in
insl
out
xchg
sub
xor
test
jmp
mov
pop
in
daa
xchg
or
mov
repnz
lcall
lds
test
movsb
inc
cmp
fisubl
dec
push
and
sbb
je
orb
subl
lret
rcrb
iret
jnp
sub
lcall
stc
shrb
mov
stc
aam
push
lods
or
test
loopne
leave
test
pusha
xchg
xchg
push
pusha
xor
xchg
test
ret
or
bound
jo
xor
iret
jae
push
popf
jl
enter
inc
mov
mov
lods
mov
leave
shll
xlat
arpl
iret
inc
push
shll
rcrb
mov
dec
out
mov
and
test
pop
and
std
mov
inc
xchg
or
addb
jne
aad
jg
test
adc
loopne
mov
icebp
fcomi
repnz
in
int
test
in
sub
pushf
inc
pop
scas
repnz
push
mov
je
test
icebp
jno
popa
xchg
mov
push
push
das
and
cld
cltd
mov
xchg
push
or
mov
insl
lock
sbb
mov
dec
push
inc
int3
and
xchg
sbb
push
xor
rcll
xor
ljmp
movsl
adc
fcomps
pusha
sti
mov
sub
fcompl
or
dec
lcall
dec
pop
jmp
cli
insb
jl
daa
mov
cwtl
ret
sub
ja
test
iret
iret
xchg
jns
mov
sub
inc
or
inc
pop
jno
movsl
pusha
inc
sbb
dec
loopne
aad
push
testl
add
push
loope
or
xlat
pop
xchg
es
add
clc
mov
jne
jg
cmp
addr16
xor
movsl
add
mov
cmp
ret
and
leave
mov
inc
mov
movsl
adc
out
call
insl
roll
xchg
pop
mov
xchg
lret
out
jl
fistps
sub
mov
and
ret
ljmp
jg
movsb
pop
sub
test
call
xchg
lret
cmove
addb
mov
bound
and
data16
dec
mov
inc
lret
stos
jle
jae
icebp
or
stc
mov
pop
xchg
add
fildll
sbb
repnz
inc
mov
push
sbb
loopne
inc
inc
dec
andl
jp
jl
xor
xlat
popa
mov
rcr
or
inc
movsb
sbbl
sbb
outsl
data16
adc
movsl
das
stos
jb
sbb
aas
mov
cwtl
push
xlat
lock
and
les
out
mov
lock
enter
pop
movsb
xchg
cmp
cmpl
jae
ljmp
sub
rorl
aas
mov
lds
mov
jge
adc
inc
rclb
cmp
xchg
imulb
jnp
xchg
mov
mov
aam
cltd
orb
lea
loopne
pop
jp
mov
pop
sub
or
xchg
or
push
enter
jo
xchg
les
rolb
push
mov
or
adc
shrb
fimull
loope
xchg
fdivr
in
iret
or
cltd
mov
fiaddl
push
dec
inc
dec
mov
adcb
add
xchg
mov
and
in
dec
movsb
test
adc
add
sti
cmp
aad
sub
insl
dec
insb
repnz
repnz
mov
pop
outsb
in
cltd
add
int
sub
push
in
jl
roll
outsb
cli
cmp
push
orb
mov
cmp
sbb
pop
arpl
push
xor
sbb
push
xchg
push
xor
mov
aaa
je
es
mov
cmp
or
lea
mov
cmp
jg
mov
mov
mov
mov
mov
xor
add
iret
stos
jns
lcall
xor
inc
pop
js
inc
adc
xor
sbb
notb
imul
je
or
jp
jnp
repnz
ficompl
xor
inc
sub
int3
out
popw
pop
push
fwait
or
dec
push
adc
cmpsl
jge
mov
lahf
adc
popl
mov
stc
push
add
loopne
ret
insl
adc
sub
pop
mov
cld
fcoms
push
ret
out
sahf
pop
jo
imul
jecxz
cmp
sahf
icebp
sub
testl
xor
sub
inc
sarb
jb
jnp
je
fwait
xchg
std
mov
int3
adc
shll
jo
lahf
andl
lods
cmc
pop
outsl
out
pop
add
out
sub
mov
xchg
xchg
adc
lds
adc
bound
adc
jl
lds
sub
sbb
mov
add
out
pop
scas
ret
imul
aas
and
pop
dec
jno
xor
and
ret
fldcw
test
ret
jmp
cmc
mov
incb
inc
or
dec
dec
stos
rorl
ficomps
int3
lds
fwait
aaa
mov
test
out
mov
jl
xchg
add
add
dec
out
loopne
leave
xor
jns
pmaxub
cmp
xor
fldcw
xchg
aam
pop
out
cmc
pop
subb
pop
xor
es
xchg
orl
enter
sarl
in
adc
bnd
stos
in
jno
cmp
test
mov
jb
xchg
int3
fists
inc
mov
inc
push
mov
xor
jle
cli
test
mov
mov
in
movl
in
or
icebp
outsb
mov
dec
test
add
cmc
hlt
push
sub
pushf
mov
mov
adc
or
popf
mov
test
imul
dec
aaa
je
lret
leave
sbb
xchg
push
dec
xor
std
pop
pusha
sub
cmp
addr16
lds
out
mov
scas
sbbb
cmpsl
xchg
fdivrs
xchg
cmp
repz
dec
xor
ss
push
das
ljmp
notb
push
outsb
pop
inc
repnz
sbb
sbb
fdivrs
jb
mov
iret
or
add
or
shr
sub
mov
push
fcoms
mull
test
ret
pop
shrl
lds
add
cmp
and
adc
sti
xor
cmc
lods
inc
cwtl
imul
adc
repz
mov
insl
lea
mov
daa
or
push
pusha
mov
mov
pusha
mov
sub
daa
cmpsl
sbb
jp
sbb
aam
jecxz
pop
jp
xor
cmpsl
sbb
mov
lahf
dec
xchg
int3
insl
mov
lahf
lods
divb
fadds
fnstenv
icebp
ret
pop
jns
pop
leave
clc
mov
ret
mov
inc
jg
bound
jb
mov
lahf
adc
add
jbe
inc
lret
mov
pop
mov
ja
cmp
push
sub
xchg
or
sarb
das
fs
cmp
enter
mov
sti
add
fcmovne
jl
shll
imul
mov
and
shlb
xchg
push
mov
sub
jbe
clc
xor
xor
subb
cltd
or
sbb
aaa
adc
push
sbb
push
or
pop
adc
mov
ja
adc
outsb
mov
test
cmp
push
add
mov
js
pushf
jle
sbb
xchg
jp
xchg
pop
fwait
pop
sbb
sub
daa
add
xor
and
clc
bound
fs
movsb
nop
dec
sub
idivb
les
mov
pop
loop
inc
adc
jbe
loop
inc
xor
lret
xor
sahf
loope
or
inc
test
icebp
sti
stc
lock
rcrl
pop
aam
lcall
mov
cmp
jae
mov
ret
sbb
std
addr16
iret
fsubrl
inc
adcb
icebp
and
adc
cmp
sub
sbb
adc
popa
cmp
js
dec
mov
dec
or
shrb
js
fs
leave
dec
movsl
lea
cmpsb
mov
repz
sub
shrb
pop
adc
or
rcrl
dec
fs
pop
mov
cmp
out
leave
push
dec
mov
fldcw
aas
sbb
mov
add
sub
inc
pop
jle
push
lahf
ja
pop
dec
fadds
xchg
fcoml
jge
xchg
out
add
jns
subb
shr
cmp
daa
insl
pop
inc
idiv
ficomps
les
mov
fbstp
aad
cmpsb
push
xor
and
push
dec
fists
xchg
mov
inc
filds
or
rcrb
cmp
mov
xor
add
popf
mov
int3
mov
inc
pop
imul
mov
mov
push
insl
sub
outsl
and
jnp
adc
sbb
stos
pop
int3
in
sbb
pop
push
xor
push
add
push
add
mov
lock
stos
adcb
mov
std
pop
test
push
inc
and
cltd
test
lods
rorl
int
and
push
mov
mov
out
fnstsw
mov
jo
jne
stos
adc
in
add
xchg
jl
mov
mov
outsb
sub
mov
mov
lret
mov
pop
push
cmp
insb
push
pushf
in
in
loop
mov
xchg
pop
add
sub
sbb
and
ret
mov
fisttpll
jae
rcll
or
mov
outsb
lods
je
mov
lea
inc
iret
mov
xchg
fcomps
pusha
frstor
mov
loop
data16
mov
fwait
in
mov
psubd
popf
or
out
adc
test
add
jge
or
ljmp
xchg
mov
jle
cmp
std
daa
rcrl
fmulp
shlb
popf
xchg
scas
jge
ja
cmpsb
cltd
and
xor
sub
sbb
jge
or
or
ficoms
fwait
std
jmp
or
ljmpw
mov
ds
cmpsb
fisttpll
fcoms
cmp
sbb
adc
arpl
jl
cld
pop
push
bound
mov
mov
mov
push
sub
cmp
jmp
data16
rcrl
adc
mov
cmp
lcall
add
jb
mov
in
add
loop
stc
enter
mov
adc
xlat
outsb
imul
ret
gs
jmp
daa
mov
or
push
cmpsl
inc
xchg
dec
jmp
or
push
fcompl
aad
repz
cwtl
bnd
mov
out
ret
jge
hlt
arpl
mov
imull
pop
mov
sbb
scas
inc
xor
hlt
cmp
mov
js
repz
lret
popa
inc
or
inc
add
leave
imul
loope
outsl
call
nop
jl
push
mov
xchg
js
cmp
pop
repnz
adc
fistps
mov
jge
das
out
je
out
cmp
call
cmpsb
lahf
xchg
xchg
xor
roll
test
lds
and
sub
push
xorl
xchg
shlb
sbb
in
mov
aaa
aaa
or
or
dec
adc
in
pop
xor
adc
mov
int
xchg
push
cmp
dec
fmul
mov
jno
jnp
faddl
sub
mov
arpl
mov
pop
aas
pop
dec
jb
mov
pusha
push
mov
xor
inc
xchg
xor
stos
addr16
aas
adc
inc
or
imull
push
movsl
mov
mov
out
daa
mov
loope
frstor
out
in
sarl
xor
mov
pop
mov
add
dec
cmp
jg
xor
mov
arpl
nop
icebp
jae
lock
hlt
scas
mov
mov
fmuls
push
sub
mov
jb
out
or
mov
pushf
ja
es
xorb
divb
mov
addr16
cmp
repz
sbb
out
xchg
into
jp
jb
fidivs
sub
xchg
adc
rcr
xchg
enter
pop
cmp
or
mov
adc
xchg
nop
or
mov
fisubl
rcr
xor
ror
imulb
lahf
mov
push
adc
imull
inc
out
aaa
in
ja
test
push
push
xor
sbb
flds
jecxz
xchg
pop
dec
addl
add
data16
add
loop
ret
jae
into
fldcw
and
cmp
sbb
add
loop
jno
dec
test
mov
in
insl
pusha
stos
push
mov
cltd
stos
pop
mov
xchg
jb
mov
aam
mov
into
stos
jle
sti
movsb
insb
adc
ret
leave
xor
ret
push
gs
cmpsl
call
inc
lret
mov
sub
jg
pop
xor
xchg
fbstp
loopne
jno
pop
and
inc
jns
test
rcrl
push
std
mov
or
add
add
mov
ss
dec
mov
test
sub
mov
lods
out
inc
cwtl
mov
dec
push
iret
lret
xchg
add
mov
xchg
test
int
sbb
jbe
imul
into
ja
and
roll
into
xor
sub
outsl
jmp
loopne
sbb
mov
sub
cmp
dec
stos
cmp
mov
add
enter
imul
lret
xchg
movb
jnp
popf
jb
jbe
inc
xchg
in
fwait
xor
mov
lret
int
out
cli
jno
mov
jne
insl
mov
and
jo
aas
icebp
repz
fldt
xor
gs
aaa
pusha
cld
dec
dec
jmp
jne
aad
arpl
adc
leave
imul
test
fisttpll
xlat
test
adc
in
sub
clc
and
icebp
push
ret
test
pop
sub
dec
sub
jg
aad
pushf
mov
xchg
shlb
fldenv
jns
sahf
inc
mov
js
pop
xor
movsl
mov
orb
mov
jne
ljmp
push
xchg
and
sbb
pop
cmp
movsb
xchg
aam
rorl
scas
ss
xchg
cmc
jb
sub
xchg
push
data16
inc
sarl
andb
add
rorl
jg
cwtl
popf
dec
fisubrs
mov
xor
push
fsubl
mov
imul
punpckldq
mov
push
sbb
or
insb
mov
xchg
mov
sahf
sbb
dec
out
inc
adc
jae
pushf
fs
mov
je
cmp
je
shlb
ja
sbb
xchg
stc
in
lods
mov
xor
push
pop
inc
dec
push
dec
ljmp
cmp
dec
aad
add
or
int3
ffree
mov
inc
xchg
ds
lahf
jle
shl
or
fsubrs
fsubrs
push
pop
sub
fcom
lds
xorl
and
mov
mov
cs
inc
mov
fisubl
test
or
adc
xor
cmpsb
adc
inc
dec
arpl
imul
xchg
cmp
mull
in
mov
add
mov
jno
pop
mov
xor
addb
push
repnz
fidivl
scas
push
fidivrs
or
add
clc
int
pop
xor
lods
lds
fiaddl
dec
fisubrs
fdiv
les
xchg
push
fwait
cmp
inc
and
sub
into
push
sub
push
pushl
inc
add
mov
or
add
inc
adc
mov
out
add
cmp
loop
loop
dec
jo
movsb
adc
int
lret
mov
jmp
test
jns
orl
sti
sbb
sbb
imul
inc
pushf
dec
ds
and
int3
push
and
mov
out
mov
loop
dec
mov
mov
mov
call
bound
jo
out
out
adc
sbb
or
inc
adc
sub
push
lcall
xchg
or
sbbl
or
je
pop
aad
mov
cs
add
sbb
popf
xlat
dec
sub
mov
ss
cmc
adc
push
les
mov
ret
pop
push
lahf
enter
ficoml
xlat
cmp
jl
test
daa
stos
mov
sbb
sbb
int
jae
dec
test
add
scas
mov
mov
int3
push
or
jae
or
sbb
jmp
add
and
adc
pop
jo,pt
pop
loopne
jnp
mov
cwtl
aad
stos
mov
cltd
jecxz
sbb
leave
sbb
pop
xchg
mov
sbb
mov
mov
mov
sbb
and
scas
shll
pushf
xor
cmp
mov
push
inc
add
fmul
flds
dec
add
dec
cmp
in
pop
push
insl
outsb
fisubrl
xor
das
dec
fsubp
in
adc
cld
icebp
negl
mov
cmpsb
aad
cld
dec
jmp
pop
arpl
test
movsb
enter
inc
in
icebp
lods
mov
add
cmp
aaa
test
cmpsb
lods
fst
lcall
minps
ficompl
mov
add
pop
div
flds
mov
in
sub
xor
lret
mov
mov
cmp
ficoml
fucomip
lds
pop
push
fiaddl
shrb
popa
jg
and
sbb
pushf
imul
mov
shlb
loope
push
pop
jnp
xchg
in
xchg
aad
inc
and
dec
xchg
addr16
jmp
loope
mov
repz
mov
dec
jecxz
push
out
das
xor
aam
rcrb
setns
sub
repz
in
subb
icebp
out
nop
fldl
xchg
fildll
xchg
outsl
or
or
aam
in
jnp
in
cmc
mov
pushf
xchg
dec
push
push
int3
insb
sarb
shl
dec
push
push
cmp
dec
adc
insb
inc
inc
lahf
pusha
hlt
subl
rclb
mov
mov
sar
cmp
xor
in
mov
sbb
je
sub
sti
or
fbld
jmp
in
adc
mov
jo
hlt
adc
jns
cmp
sub
test
lret
or
cli
cmp
outsl
and
mov
pop
or
or
jno
inc
lds
dec
lea
lods
pop
mov
xor
push
sub
dec
sub
pusha
out
inc
mov
out
push
push
mov
jae
in
in
in
pop
mov
test
imul
pusha
fistpll
push
aaa
lcall
sbb
jmp
cmp
add
stos
dec
pop
je
add
imul
push
mov
test
inc
lods
and
push
sub
insl
ret
aas
mov
xchg
icebp
scas
jne
xor
push
and
lea
shrl
jl
je
xchg
cli
sbb
xchg
sahf
mov
les
mov
mov
pop
add
hlt
into
mov
cmpsl
mov
adc
mov
imul
sub
leave
scas
in
scas
push
roll
xor
xor
in
sbb
mov
inc
xor
arpl
jp
cmp
mov
scas
cmpsb
push
adc
scas
cmp
push
inc
lods
into
lea
pop
cmp
loopne
mov
adc
xor
icebp
lcall
jno
dec
add
shrb
adcb
xchg
push
push
stos
and
cmp
outsb
out
dec
lcall
sbb
aad
arpl
imul
and
xorl
fstpl
dec
and
push
cltd
in
inc
mov
inc
and
cmp
dec
mov
push
inc
cmp
gs
push
push
dec
mov
cmpsl
in
xchg
inc
movsl
push
shll
sti
bound
mov
loope
sbb
jmp
call
shr
aad
and
push
mov
inc
mov
sub
adcb
jle
aaa
lcall
jp
js
adc
pusha
icebp
rorb
shl
inc
call
les
xchg
push
lret
push
mov
cmp
jno
inc
jns
gs
fs
in
arpl
jns
mov
imul
rcl
rcrl
xchg
jp
mov
jo
push
cmp
lret
scas
cmpsl
xchg
popf
inc
shl
pusha
mov
ret
ret
cmp
mov
push
mov
sbb
sahf
addb
outsb
add
divl
fstpl
mov
loop
add
roll
ss
push
xchg
and
jne
imul
hlt
mov
push
aas
loop
cmc
test
lock
or
repz
xchg
xor
dec
cmp
cmp
sarb
push
iret
sub
sbb
jp
cmc
dec
sbb
mov
mov
icebp
mov
and
add
xchg
lods
aam
nop
jae
mov
xchg
das
mov
arpl
push
push
dec
popf
or
sub
pop
mov
jle
mov
dec
pusha
fidivs
fs
inc
shr
les
mov
fwait
or
mov
rcll
je
shlb
mov
mov
fildll
jg
cmp
pushfw
push
dec
jle
nop
gs
outsb
sub
pushf
test
xor
repnz
pop
stc
outsl
cmp
fsts
daa
mov
dec
mov
xchg
jne
test
ficomps
sti
out
ljmp
inc
cli
out
push
shlb
loope
jns
dec
pop
scas
jnp
repz
leave
out
sbb
in
or
mov
push
xchg
aaa
mov
dec
add
cmp
shrb
and
cli
mull
arpl
hlt
in
nop
shll
pop
add
lods
daa
sub
imul
mov
mov
jg
fdivl
daa
hlt
cmpsl
int
jle
test
stos
lods
jmp
dec
fsubp
push
enter
ljmp
and
jg
jge
fwait
pop
lea
jbe
inc
dec
mov
dec
and
paddusb
push
cwtl
cmp
sub
cmovs
loope
lock
pusha
les
iretw
or
mov
ror
std
test
mov
mov
dec
fwait
sub
push
int3
add
aaa
or
or
xchg
mov
mov
lret
test
es
add
fs
icebp
jb
xchg
jo
out
add
inc
jno
xor
push
xor
stc
xor
scas
out
push
mov
inc
cmovne
jno
cmp
loope
lock
daa
orl
xor
mov
add
jne
inc
add
adc
mov
xor
pop
add
fldl
jns
arpl
out
int
and
insb
add
mov
out
adc
cmpsb
les
addr16
repz
pop
xor
add
sbb
pop
pop
in
out
in
xchg
movntq
lods
je
xchg
xorps
cmpsl
push
lods
scas
cmpsl
shl
adc
mov
push
aam
sub
int3
aam
test
xchg
cli
lock
cmpsl
xchg
fdivrl
mov
out
and
cmp
loope
pusha
push
dec
mov
cmp
dec
inc
mov
dec
fimuls
call
push
or
int3
insl
add
mov
outsl
add
syscall
andb
mov
lret
jns
cmp
cmp
mov
adc
mov
jae
ret
xor
in
sub
sbb
adc
mov
jl
js
outsb
or
dec
pop
push
mov
in
leave
xchg
shll
dec
xchg
testl
sub
icebp
loope
sbb
lea
cmpsb
ds
cwtl
lret
pop
clc
xchg
inc
iret
mov
test
aas
fildl
ror
cmp
nop
test
jbe
push
movl
mov
mov
and
xor
and
aas
mov
mov
mov
loope
dec
push
adc
jp
icebp
adc
cltd
inc
add
out
or
std
and
adc
sub
xchg
mov
sub
mov
mov
cltd
loopne
and
xor
mov
pop
inc
xchg
in
push
pusha
faddl
adc
sti
dec
leave
cmp
out
lods
push
dec
daa
and
roll
popa
lock
inc
xchg
sarl
adc
cs
lea
and
lods
cs
push
sub
sub
jnp
pop
pop
std
add
shrb
int
lds
pop
mov
inc
cmpsb
bound
gs
adc
jne
or
sbb
adc
andl
cmp
push
and
mov
jae
lcall
cmp
adc
fnstenv
rorb
dec
cmp
xchg
adc
mov
xchg
mov
cmpb
and
mov
leave
mov
cli
out
jmp
mov
lcall
divb
xchg
testb
cld
orb
inc
movsb
xchg
xchg
xchg
dec
mov
push
or
repnz
sbb
repnz
jne
mov
sbb
cmpsb
push
insl
nop
push
add
idivl
addb
test
dec
std
popl
cwtl
leave
pop
nop
faddl
dec
jb
sub
rcll
jg
lds
ja
bound
neg
dec
sub
xor
mov
mov
ss
sbb
cmpsb
inc
xlat
xor
fildl
cmp
mov
dec
movsb
xor
loope
frstor
add
jmp
imul
jbe
enter
mov
hlt
aas
je
aam
sbb
inc
xor
jbe
btc
outsl
scas
aad
and
outsl
mov
sbb
decl
mov
mov
mov
es
enter
mov
outsb
xor
iret
rcl
adc
mov
xchg
xchg
scas
out
push
clc
bound
int
popf
inc
into
stos
cmpsb
es
inc
or
stos
push
sub
dec
icebp
fbld
dec
int
xor
loopne
push
frstor
xor
pusha
mov
test
xorb
lcall
push
mov
add
mov
out
in
mov
jnp
mov
cs
js
dec
adc
pop
pop
xor
in
xchg
loope
shll
stos
sub
jecxz
mov
pop
jbe
mov
xchg
popf
nop
out
mov
daa
inc
nop
popa
lret
lds
jmp
xor
ficoms
adc
xchg
xchg
sti
mov
leave
andb
cmp
js
pop
mov
add
pop
jno
je
fbld
andb
aaa
pop
mov
push
outsb
fnclex
pop
ret
xchg
rcll
inc
negb
sub
insl
mov
repz
call
dec
mov
into
and
and
mov
dec
mov
sbb
dec
ret
cmc
stos
pushf
jnp
sub
test
sub
cmp
movsl
outsb
dec
stc
mov
dec
fnclex
fsubrs
dec
sbb
jg
orb
push
mov
enter
dec
les
fnstsw
in
push
sub
cli
xchg
test
pop
into
mov
jns
outsl
or
ret
scas
lret
shrl
or
push
popf
push
out
lcall
rorb
pop
fsubrs
test
gs
mov
fisubl
outsl
fstps
movsl
adc
int3
mov
sub
mov
pop
popa
sbb
jge
and
cli
movsb
sbbb
mov
and
insb
lds
dec
test
lods
cmp
cmp
aaa
adcb
iret
cwtl
testl
or
mov
sbb
stos
mov
jmp
or
mov
sbb
stc
mov
xchg
popa
and
cld
xchg
mov
pop
out
insb
loop
dec
xor
and
sahf
ret
or
mov
sub
jl
xchg
mov
mov
mov
ljmp
lahf
xor
ss
pop
int3
push
sti
mov
pop
imul
fs
add
sahf
dec
jbe
stc
lcall
ficompl
out
subl
insl
xor
testb
and
fs
push
lss
pop
or
arpl
xchg
ret
ret
call
stos
leave
push
out
sbb
mov
push
pushf
sub
ljmp
xor
test
popa
push
popf
mov
jno
pop
add
xlat
out
pop
dec
test
and
imul
jge
lcall
xor
cmp
ja
pop
push
xor
and
mov
pop
xchg
adc
xor
mov
add
cmpsb
xor
push
dec
pushw
lcall
movsl
mov
sbb
push
mov
mov
insl
mov
shld
loop
push
lahf
push
add
pop
pop
leave
bound
or
inc
xchg
arpl
push
jp
cld
mov
pop
out
mov
sar
or
ret
mov
mov
out
push
mov
insb
jae
mov
fdivs
loop
mov
and
leave
xchg
pop
sub
loopne
sub
pop
xor
lahf
cltd
mov
in
sahf
dec
xlat
popa
xchg
leave
sbb
rclb
sbb
sub
push
lods
repnz
mov
outsb
daa
and
xor
inc
push
add
jae
hlt
cltd
sub
push
pop
scas
dec
dec
jg
sub
shl
xchg
mov
xor
jecxz
mov
mov
jecxz
nop
das
inc
dec
mov
out
jmp
jmp
call
insb
leave
outsl
pop
scas
out
lret
int
jno
and
out
bound
cmp
xchg
push
into
pop
or
imul
xor
jmp
sarl
or
in
inc
in
hlt
xchg
jp
sbb
decb
lcall
mov
inc
std
inc
imul
xchg
xor
cmp
cltd
leave
mov
iret
sub
bound
sbb
mov
xchg
jb
mov
push
enter
addr16
pushf
test
insl
dec
inc
jg
inc
clc
enter
test
pop
data16
jmp
clc
adc
push
ss
in
stos
dec
gs
pushf
ja
sarb
mov
and
push
jno
inc
adc
cmpsl
pusha
dec
jno
pop
dec
sti
mov
jo
lahf
jb
add
in
dec
insb
or
dec
mov
inc
fdivs
mov
mov
pusha
cmpsb
jbe
add
push
sub
sarb
ljmp
aad
jle
jo
es
shl
out
icebp
dec
gs
lea
xchg
add
and
push
push
int
xor
mov
push
sub
imul
sarl
push
cmpsl
int
xchg
dec
shr
jno
aas
push
add
imul
adc
xor
xor
es
cmp
pop
fcmove
jp
cmp
mov
mov
pop
xor
push
or
shlb
jecxz
push
bound
sub
loopne
or
jns
fiaddl
mov
bound
call
call
in
test
dec
enter
sbb
sbb
stos
fcoms
ret
xor
enter
jno,pt
add
cld
dec
popa
push
pop
jmp
int
gs
xor
movsl
sub
out
jmp
jecxz
mov
cli
xor
jnp
sub
inc
das
pop
ret
les
push
enter
and
mov
cli
test
jl
stos
mov
inc
out
in
arpl
jmp
arpl
inc
std
lea
stos
and
sub
je
leave
jmp
jmp
gs
mov
jbe
xchg
jo
push
xlat
jo
ficompl
arpl
dec
mov
gs
and
pop
into
subb
lcall
pop
push
sbb
mov
sub
rcl
pop
sub
in
jmp
sbb
xrelease
enter
and
cmc
ljmp
into
push
dec
leave
lahf
adc
cli
adc
push
popf
adc
inc
xchg
mov
shlb
outsb
xchg
mov
xchg
inc
pop
mov
sbb
sti
je
sahf
call
lock
lahf
pop
adc
mov
xor
mov
mov
data16
pusha
dec
hlt
aas
sub
mov
sahf
adc
ret
or
jb
push
inc
sbb
fwait
clc
jg
imul
mov
push
aad
mov
nop
lahf
adc
xor
push
fsts
loope
shrb
orb
cltd
popf
mov
or
aaa
xor
outsb
aaa
mov
roll
cltd
sub
pop
lea
add
push
mov
cmp
add
jo
idivb
and
into
dec
sub
mov
sub
jmp
dec
and
loope
mov
mov
pushf
in
movzbl
mov
and
push
out
push
addr16
add
jns
cmpsl
adc
in
scas
icebp
insl
add
sub
loope
adc
add
ljmp
loop
and
jmp
adc
repz
rolb
jp
xchg
lahf
pop
dec
sub
push
js
loopne
dec
popa
pushf
cmpsl
aad
sub
jo
lret
inc
jecxz
xchg
aam
adc
xor
adc
cli
mov
or
pop
cmp
faddl
cwtl
lods
aaa
int3
cmp
mov
nop
push
fwait
push
jno
xchg
mov
sbbl
xchg
cs
fwait
lock
pop
cmp
mov
jl
scas
mov
jmp
pop
icebp
sbb
dec
mov
jge
test
xor
adcl
inc
je
ljmp
test
and
aas
fildl
push
push
push
inc
sub
mov
jmp
and
cmp
xchg
clc
add
fwait
xorb
sbb
outsl
push
aaa
cmp
scas
mov
loope
jbe
mov
jl
mov
out
in
clc
lcall
icebp
jbe
cmpsb
icebp
scas
xor
xchg
iret
xor
xchg
pushf
mov
inc
push
xchg
xchg
or
mov
push
stc
add
push
mov
jno
add
ret
stos
mov
inc
mov
xor
and
outsb
fcoms
push
loopne
popf
push
movsb
in
fdivl
pop
testb
cmp
imul
ja
jbe
jge
xchg
shrb
push
sub
mov
ds
mov
bound
imul
fistl
and
cli
xchg
lods
jo
mov
pop
push
jg
jns
inc
ss
andl
test
sub
sub
and
push
fcompl
sbbl
pusha
movsb
sbb
repz
jne
mov
les
and
jnp
gs
icebp
fwait
out
or
loope
es
push
or
jns
popa
inc
sbb
rolb
roll
jle
sub
lcall
push
xchg
add
mov
ret
xlat
clc
in
jbe
rorb
inc
in
fsub
add
add
arpl
adc
add
sbb
cmpsb
imul
push
fildl
push
push
roll
jno
mov
add
insl
and
and
leave
sub
xchg
repz
scas
sti
out
pop
mov
stc
and
enter
hlt
sub
xor
mov
and
mov
add
arpl
jmp
cmp
sub
and
xchg
jbe
dec
lock
scas
jo
lea
lods
xlat
ret
jno
push
mov
iret
roll
push
push
leave
int3
outsb
and
cmp
outsb
adc
mov
mov
mov
push
dec
mov
sub
sub
and
std
sub
addr16
daa
dec
pop
int3
xor
mov
je
push
lahf
aas
inc
inc
andl
out
cmp
subl
das
stc
in
xchg
clc
sub
fstpl
or
jge
daa
adc
pop
and
xchg
mov
out
in
shl
loop
pushf
mov
insl
xlat
and
dec
mov
outsb
xor
cmp
in
xchg
ret
aas
int
rcrb
xor
nop
outsb
fcoms
fcmovnbe
push
dec
movsl
movsb
fisttpl
fs
stc
imul
cmpsl
test
inc
cltd
das
and
fsts
out
xor
ret
pop
jnp
imul
outsb
sbb
in
add
cmpsb
inc
fcomp
sub
dec
fdivrs
push
and
nop
pop
movsb
xor
fwait
add
cmp
adc
push
jbe,pn
sub
mov
mov
push
inc
adc
ja
dec
cmc
insb
inc
mov
cmp
fwait
bound
in
mov
out
push
sbb
mov
imulb
xchg
jb
lea
inc
test
inc
pop
in
xchg
ret
lock
xchg
lahf
add
mov
jle
fs
fldenv
push
and
repnz
cmp
sub
push
dec
das
ret
out
iret
pop
adc
lea
sub
test
mov
xchg
lods
jp
cmp
cli
dec
out
pushl
mov
pop
mov
pop
mov
sbb
test
leave
or
mov
mov
xchg
or
sub
movsl
arpl
mov
mov
jl
push
cmp
jmp
test
inc
ss
enter
arpl
mov
in
push
push
sbb
stos
and
out
loope
fldenv
sti
fwait
push
sti
fsubrs
dec
es
sti
dec
push
and
ret
inc
les
xchg
int
nop
inc
pop
fisubrl
inc
mov
rcrb
mov
mov
pop
addr16
cmp
lock
nop
sub
sahf
push
mov
jge
jl
xor
icebp
inc
enter
cmpsb
into
cmp
ja
lds
jge
xchg
movsb
cmpsb
mov
xchg
mov
clc
and
mov
int3
outsl
call
lret
jp
addr16
lock
inc
dec
in
dec
shrl
popa
pushf
push
insb
nop
and
add
xor
jmp
lock
sub
ret
mov
mov
movsl
fwait
mov
ret
rclb
mov
mov
jle
je
inc
sbb
incb
xchg
mov
adc
outsb
push
jg
arpl
mov
sbb
imul
imul
mov
dec
pop
rorb
add
mov
sub
pop
fisubrl
iret
add
fwait
movsb
js
or
or
sbb
orl
mov
iret
xchg
int
inc
aas
aaa
hlt
sbb
imul
cmpsl
mov
mov
dec
dec
cmp
pop
roll
pop
repz
in
adc
lahf
add
ss
mov
cmpsl
jno
sbb
xchg
inc
push
and
int3
js
push
push
inc
pop
mov
mov
mov
mov
cs
push
pop
ss
insb
push
cmp
repnz
std
les
cmpsl
clc
mov
mov
or
xor
add
cli
or
es
insl
andw
push
cltd
xchg
or
or
gs
dec
dec
mov
xor
fidivrs
push
or
sbb
or
inc
lods
mov
das
push
mov
loopnew
inc
lahf
int
gs
inc
cmpsb
leave
bound
pop
push
jo
ss
and
test
loopne
imul
pop
dec
push
pop
xor
xor
pop
xlat
push
xor
ss
lret
int
mov
jbe
sub
push
and
jae
out
mov
xor
pop
loop
int3
sbb
pop
or
xchg
shrl
mov
dec
jns
popf
popa
imul
and
or
movsb
mov
mov
cmp
out
popf
dec
pop
mov
aam
jmp
and
xchg
insl
sub
int3
leave
sub
adc
pop
in
dec
lea
fists
add
xor
loope
cld
ss
mov
lret
push
loopne
lret
adc
pop
cmpsl
sub
adcb
jo
or
js
xor
jecxz
xor
rcrb
mov
adc
lret
mov
clc
mov
mov
scas
inc
mov
lret
fwait
das
jne
loop
adc
dec
dec
dec
out
mov
jecxz
sbb
cmp
jg
clc
les
mov
add
lret
add
sub
dec
out
leave
push
xorl
pop
clc
lods
subb
and
and
lcall
orb
sbb
repnz
mov
sub
test
cmp
aaa
mov
push
sub
mov
sbb
adc
in
and
outsb
sahf
sub
sbb
test
adc
ret
adc
cmp
insb
cmp
cmpb
xchg
inc
adc
dec
push
popf
inc
or
stos
ja
push
push
cmpsb
out
aas
xchg
cmpb
sub
out
aas
cmp
or
mov
cmp
test
mov
sbb
cmp
mov
enter
xchg
fwait
cmpsb
scas
arpl
aas
mov
push
cmpl
sarb
or
or
rcrl
sar
fnsetpm(287
fldenv
mov
fdivl
jae
dec
jo
add
mov
dec
push
mov
std
gs
std
sahf
mov
xchg
bound
cmp
sub
rcll
dec
ja
sbb
push
mov
js
dec
into
imul
jo
xlat
push
mov
sbb
popf
mov
je
movsl
dec
add
jb
mov
jmp
lret
subl
dec
push
sbb
jmp
sbb
and
or
test
repz
lods
sbb
div
int3
lahf
sub
xor
push
pop
repnz
dec
push
ret
jle
enter
in
dec
jb
pop
add
movsl
push
rol
mov
sub
xchg
out
jne
icebp
js
imulb
cmp
sub
shll
rclb
subb
cmpsl
imulb
popf
dec
dec
push
dec
out
pop
cmpsb
inc
pop
mov
mov
les
sti
sbb
mov
cmp
cmpsl
xchg
ret
imul
mov
dec
cmp
daa
inc
mov
sti
aad
scas
bound
fdivl
xchg
inc
cmp
and
mov
and
dec
int3
inc
popa
sbb
add
or
xchg
icebp
bswap
dec
icebp
insl
scas
add
mov
clc
cmp
mov
mov
ret
js
mov
jno
add
int3
dec
mov
inc
jnp,pt
loopne
add
dec
and
pop
sub
in
insl
xchg
stos
add
adc
mov
ljmp
push
xchg
data16
xchg
or
fldt
out
push
xor
xchg
in
bound
push
and
cld
push
out
popf
jmp
mov
push
and
xor
or
outsb
jl
pushf
xorl
cs
add
and
pop
movsl
mov
push
cwtl
test
es
dec
push
xor
add
hlt
int
xchg
pop
jo
add
mov
mov
fwait
cmp
fimull
adc
mov
adc
push
pop
mov
xor
mov
ficoml
add
lret
cli
hlt
adc
add
dec
and
out
cmp
sub
cmc
push
jle
xchg
xchg
push
lods
sub
es
out
enter
test
cli
mov
xchg
out
adc
repz
fxch
inc
jle
mov
pop
cmp
jmp
mov
dec
sbb
add
sub
mov
dec
add
pop
in
movsb
mov
mov
lods
xchg
aas
add
pop
bound
popf
sbb
out
addb
or
adc
imul
test
rorl
sbb
ljmp
inc
cmp
jo
cmp
scas
call
push
inc
test
add
dec
mov
mov
cwtl
lods
in
daa
sbb
xor
jb
mov
aad
mov
rcrb
or
lods
push
pop
js
int3
inc
aas
jnp
add
mov
icebp
xchg
xchg
dec
pop
cwtl
push
mov
xor
sahf
ljmp
fwait
push
mov
add
or
jecxz
dec
popf
fisttps
or
dec
mov
inc
add
loope
fistpll
mov
push
cmc
outsl
push
shll
dec
lcall
xor
fimull
mov
jle
xchg
pusha
add
sub
jno
add
aas
ss
jl
add
push
in
idiv
cmpsb
rcrl
jl
adc
inc
mov
mov
or
push
adc
xor
jecxz
rcr
rclb
imul
sbb
cmp
xlat
dec
cwtl
sbb
pop
ljmp
pop
jns
mov
dec
negl
aad
int
cmp
out
jl
lret
orb
lret
push
adc
rolb
jnp
add
sub
mov
add
sbb
fdivrs
sub
fists
mov
jecxz
lret
subl
fidivl
sbb
mov
bnd
aad
push
rcrb
outsl
sahf
insb
push
adc
fmul
push
sub
sbb
shrb
push
arpl
ds
pop
adc
push
fs
loop
push
and
sub
hlt
mov
fyl2xp1
push
dec
push
mov
sub
inc
popf
cmp
and
cltd
xchg
lods
loope
xor
outsl
jae
popa
xor
mov
mov
jb
shll
loop
adcl
ds
sub
popf
jno
sbb
push
sbb
cld
and
lcall
xchg
mov
mov
aam
push
stos
push
rorb
xchg
jb
and
arpl
lahf
mov
xor
clc
push
ret
or
imul
or
pop
lret
lock
xor
fcomi
inc
addb
jo
mov
cwtl
ror
inc
jle
shlb
lds
mov
in
lods
dec
mov
mov
ret
in
add
out
xchg
inc
cmp
das
push
or
cmpsb
mov
xor
push
icebp
hlt
mov
xchg
push
popf
and
jmp
cmp
andb
push
fsincos
push
sbb
jmp
test
repnz
mov
aad
test
icebp
mov
testl
sub
inc
fcmove
into
push
cli
xchg
bound
iret
lret
out
and
dec
xor
fsubs
sahf
inc
sbb
mov
dec
inc
mov
mov
das
popf
pushf
mov
xchg
push
mov
fisttps
cmp
xor
faddp
add
rolb
mov
int
sahf
mov
add
jne
fiadds
rcll
mov
test
stos
inc
fistl
psrlq
lret
scas
in
xor
jnp
add
sbb
inc
testl
cmp
inc
mov
jae
icebp
lahf
and
mov
sti
and
push
popa
adc
sub
sbb
fistl
cld
xlat
inc
data16
push
sahf
add
sbb
push
jmp
cmp
xlat
lea
xchg
xlat
data16
xor
fwait
inc
and
sbb
negb
jle
dec
sbb
lcall
out
fildl
adc
inc
mov
enter
add
fstpt
mov
mov
add
sti
xor
or
sahf
add
xor
inc
clc
cld
call
into
mov
in
js
mov
sbb
jge
int
cmp
xlat
pop
add
into
jl
sbb
pop
inc
mov
loope
stc
pop
push
bound
adc
xchg
nop
fnstenv
sti
pop
in
mov
pop
push
dec
add
lods
mov
and
cmp
sbb
add
jns
dec
enter
mov
jecxz
bound
push
mov
insb
in
mov
das
out
mov
in
sbb
jb
xorl
push
shrl
jmp
pop
mov
mov
add
addr16
mov
leave
pusha
aam
nop
test
lahf
mov
and
mov
push
sub
inc
adc
cmp
into
mov
inc
pop
clc
pop
cmp
cmpsb
cmp
inc
into
adc
and
and
add
mov
mov
pop
in
inc
fdivrs
sbb
ss
in
in
decl
mov
sub
idivb
add
pop
mov
ret
mov
inc
lock
movsl
inc
hlt
insl
mov
sbb
movsb
lods
mov
inc
lret
mov
cmp
dec
movsl
mov
inc
cmp
mov
dec
xor
cli
fisttps
mov
imul
push
lret
das
push
jo
daa
xor
cltd
or
and
mov
cs
pop
lds
cld
cli
xor
aad
xor
xlat
jno
sahf
xchg
cmp
test
lds
scas
sub
pop
sbb
xor
addr16
cmpb
lahf
loope
aas
fidivrl
xor
and
push
jbe
push
mov
cmp
pop
push
cmp
jnp
push
push
mov
sub
adc
mov
xlat
and
shrb
int3
imul
scas
cltd
rolb
pushf
insl
mov
stos
and
xlat
insl
std
sub
mov
or
add
rcrl
jbe
sbb
mov
jle
daa
mov
imul
cmp
sub
pop
sarb
sbb
out
nop
sub
and
insl
jle
pop
xchg
and
jl
int
cmp
fisttpl
shrb
dec
cmp
push
insl
push
jbe
cld
or
xchg
sub
cs
insl
stc
mov
dec
xchg
cmp
fnsave
sub
or
dec
icebp
pusha
push
dec
push
les
jl
es
xor
pop
je
subl
mov
jecxz
push
push
mov
shlb
xor
xchg
out
add
shrl
into
pop
add
dec
push
mov
adc
xchg
into
inc
sbb
fwait
test
add
imul
movsl
aas
aad
shrl
idivb
xorb
pcmpgtd
add
mov
in
mov
andb
dec
mov
aam
xchg
cltd
add
jne
mov
xor
pop
pushf
stc
mov
js
leave
dec
pusha
dec
ds
fimull
xchg
scas
fisubrs
stos
and
cld
adc
bound
sub
jns
ja
mov
ret
cld
stc
sar
dec
popa
xchg
leave
pop
inc
leave
not
ss
sub
jb
jae
add
mov
or
das
testl
icebp
subl
mov
push
inc
dec
in
cmp
popf
add
or
push
xchg
mov
adc
xchg
stc
mov
shlb
inc
inc
ret
scas
jnp
push
sub
movsb
adc
ja
jbe
push
mov
adc
xchg
ljmp
insl
push
adc
popa
push
leave
push
jg
dec
call
movsl
jae
jo
fucomip
movntq
into
sub
pusha
add
movsl
in
push
sbb
adc
sti
adc
loop
mov
fwait
sbb
inc
imul
and
push
out
mov
push
ror
lock
jae
inc
xor
aam
decl
push
ljmp
cwtl
jno
cmp
cmp
jl
iret
mov
das
outsl
repnz
xchg
in
cmp
loopne
ds
pop
xchg
jmp
movsb
rcr
test
daa
popl
addr16
pop
loop
les
push
push
jns
add
insb
ja
fs
and
inc
mov
jle
mov
push
cmc
es
mov
mov
enter
nop
fs
movb
xor
mov
inc
sub
lret
cmpsb
jno
pop
frstor
mov
pusha
sbb
shrl
adc
dec
cmp
xor
mov
pop
sbb
mov
aam
xchg
mov
icebp
cmp
cs
into
push
jp
je
sbb
push
je
mov
jb
sub
jg
lret
sub
push
mov
rorb
sbb
fistps
adc
insl
jns
push
jl
data16
scas
sub
pop
inc
clc
adc
inc
imul
dec
adc
and
insl
pop
inc
arpl
adc
imul
aad
aaa
outsb
fmull
mov
cmp
lds
pushf
jge
adc
ja
mov
mov
popa
pop
mov
xchg
inc
insl
xchg
inc
lret
sbb
mov
cmpl
pushf
rol
or
sub
aad
out
rcll
jno
jb
add
push
arpl
sbb
and
jmp
movsb
pop
sbb
imul
xor
aas
imul
fistpl
cmp
imull
sarl
lahf
xor
fmull
jb
mov
mov
inc
stc
pop
fsubl
lret
ret
jp
add
notl
movsl
and
subl
popcnt
adc
pop
mov
sahf
outsb
into
sbb
push
das
mov
aam
pushf
inc
lret
push
xor
jle
jne
out
neg
dec
outsb
cmp
addr16
jmp
loope
xor
sub
or
test
add
jns
pushf
and
testb
lods
lret
xchg
fmuls
push
in
pop
in
jmp
cld
add
inc
pushf
mov
cs
and
adc
ljmp
ret
or
sub
mov
stc
inc
jmp
xor
adc
lcall
pop
out
mov
int3
xchg
lods
int3
dec
sub
dec
jbe
nop
xchg
sbb
mov
scas
test
pop
in
jp
cmp
int3
mov
or
in
shlb
add
loope
aaa
cltd
xchg
sti
mov
fisttpl
sub
sub
push
add
test
int3
mov
inc
roll
push
stos
mov
pop
aad
push
cmp
loop
adc
mov
push
stc
lret
daa
stc
lret
clc
pop
aam
cmp
fisttpll
xchg
push
pop
push
leave
lret
inc
pop
ljmp
cmc
call
pop
lock
loope
xchg
and
jmp
fisubrs
adcl
mov
fdiv
ret
cmc
lods
mov
clc
push
imul
stos
in
lock
cmp
fldcw
ret
pop
out
sbb
jl
adc
loop
xchg
iret
ret
cmpsb
pop
jecxz
rcl
iret
mov
jns
mov
mov
pop
jnp
fwait
push
scas
and
cwtl
mov
or
sbb
movsb
mov
mov
add
loop
pop
gs
shlb
adcl
iret
pushf
je
js
filds
push
mov
cwtl
pop
inc
inc
repnz
xor
cmp
cmp
aaa
xchg
call
xchg
nop
cmp
pop
dec
lcall
rcl
sub
mov
push
pop
cmpsb
mov
sahf
xor
xchg
jle
and
test
sarb
lcall
sahf
aas
cs
icebp
call
sarb
divl
pop
jne
imul
pushf
popa
sub
xchg
or
jo
sub
pop
mov
mov
or
xchg
push
les
jmp
ret
pushf
xor
mov
cwtl
adc
xchg
rorb
xor
xchg
scas
rorl
fimull
mov
xor
dec
xchg
adc
lahf
inc
cwtl
cmp
mov
shrl
jo
mov
cwtl
das
fnstcw
stos
dec
and
mov
popa
mov
nop
cmpsb
xor
aad
xorl
lock
adc
adc
test
sub
imul
cli
jnp
inc
pop
sbbl
test
scas
push
xchg
jo
loope
mov
inc
xor
jl
setb
jmp
or
lock
cmpsb
jno
insb
add
stc
lods
xchg
rclw
lcall
xor
hlt
jp
push
push
adc
call
jnp
in
loope
sbb
mov
inc
mov
pop
dec
shr
pop
js
rclb
ds
jmp
data16
and
adc
movsb
xor
and
mov
sbb
and
fcompl
dec
lods
rclb
jns
sub
or
cmpsl
ss
mov
or
ja
or
scas
xchg
insb
shll
push
pop
inc
int3
dec
cmp
mov
nop
jecxz
or
sbb
xchg
adc
mov
arpl
outsb
sub
and
lret
and
mov
and
outsl
dec
pop
ret
cmp
loopne
test
in
subl
shrl
xchg
and
and
or
jmp
mov
faddl
test
inc
mov
enter
inc
lahf
aam
add
popa
push
cwtl
repnz
inc
inc
hlt
fstpl
icebp
pop
and
jns
xor
adc
mov
aas
mov
fsubrs
cmpsl
cmc
ss
fs
push
dec
leave
ss
andnps
lods
dec
pop
adc
and
stos
lods
fists
jle
inc
ss
sub
pushf
mov
jo
mov
fisttps
dec
movsb
in
in
and
add
scas
cmpsb
fstps
in
fisttps
mov
movsl
pop
mov
push
or
add
mov
sub
pusha
sbb
into
leave
fnstsw
jnp
mov
dec
dec
inc
dec
movsb
xor
scas
pop
dec
aam
xor
push
loopne
hlt
decl
gs
lahf
jle
movsl
fiaddl
pop
xchg
scas
sub
xor
repnz
or
sbb
fwait
cmovae
cwtl
pop
and
ret
insl
je
sub
xor
test
pop
pop
popw
cmpsl
sti
add
data16
pop
es
scas
and
add
aas
mov
mov
add
gs
fsubrs
and
adc
je
js
adc
pushf
std
out
outsb
sbb
fdivl
sbb
das
jae
inc
mov
leave
int3
add
lcall
xlat
pop
push
loop
xlat
cmp
clc
bound
inc
fmuls
pop
ret
orb
and
sbb
dec
ror
popa
lods
stos
pop
jge
lea
or
mov
ljmp
imul
sub
ss
cli
push
cmc
push
mov
shr
fcmovu
add
inc
pop
test
adc
cmpl
or
add
jecxz
subl
jne
jnp
push
out
lcall
imull
fstpt
fsubrp
fbld
xchg
imul
rorl
jnp
sbb
popa
popf
inc
mov
sbb
xchg
adc
sbb
aas
sbb
xor
pop
mov
push
dec
lods
loop
adc
mov
xor
pop
sbb
repnz
jne
lret
mov
push
imul
add
or
pop
dec
push
scas
call
test
test
mov
pusha
mov
xor
lret
inc
not
mov
xchg
jno
scas
call
divl
mov
mov
or
mov
int
sub
clc
mov
cmpsl
add
ret
jo
jecxz
pop
repz
mov
out
in
and
push
sub
lods
loop
addr16
dec
imul
dec
shld
sar
mov
in
fisubs
xor
cmove
repnz
lods
out
scas
popa
pop
sarb
xchg
jmp
mov
jo
adc
aad
repz
cmp
loope
dec
sti
mov
pop
imul
pop
add
ret
popf
push
xchg
das
je
mov
test
stc
xlat
jae
sub
aad
dec
xor
inc
jp
repz
shlb
dec
jbe
dec
inc
push
lahf
sub
iret
gs
aad
sbb
insl
lcall
fisubrs
jbe
int3
jo
lcall
mov
xchg
inc
push
jb
add
mov
lahf
dec
mov
in
outsl
mov
cmp
mov
std
iret
lock
idivl
out
int3
test
aad
fildl
push
out
mov
ret
and
jnp
testb
hlt
mov
pusha
and
lock
xor
fwait
mov
call
inc
sbb
dec
clc
cmp
sub
xchg
lret
lods
sub
inc
push
aad
and
mov
std
sti
sub
int
fadds
out
sahf
lds
retw
pop
addr16
xor
push
sti
push
or
dec
psubsb
ret
sub
mov
xchg
aas
adc
in
popf
and
lret
mov
scas
sub
pop
notb
mov
std
insb
mov
shrb
mov
popa
insl
popf
setge
mov
mov
bound
sbb
adc
mov
lahf
push
xchg
adc
std
test
push
xchg
mov
out
push
jno
into
add
pushf
sbb
insb
movsl
xor
lds
mov
mov
out
jle
pop
das
add
cmp
cmp
add
cld
pop
ds
mov
adc
shll
or
test
lret
jmp
mov
lret
rep
fwait
jae
aas
xchg
jo
and
mov
jecxz,pt
adc
add
xchg
js
add
xchg
pop
rcr
jmp
gs
std
mov
xchg
aam
test
inc
outsl
inc
mov
ret
inc
dec
mov
mov
outsl
mov
xlat
add
in
or
jbe
sub
jmp
push
bound
adc
gs
jl
out
aam
mov
in
and
out
fimuls
ds
or
movsl
orl
xchg
dec
into
xor
loop
mov
dec
testb
xor
cmpsb
xor
mov
pop
mov
out
out
jae
xchg
xchg
and
movb
pop
dec
mov
mov
xor
ljmp
imul
rorl
cmovbe
dec
xchg
xor
adc
cmp
cwtl
dec
das
cmpsb
shll
inc
or
stos
dec
call
sub
dec
jno
add
out
mov
mov
leave
inc
sbb
jbe
mov
aas
pop
subb
xchg
inc
sbb
and
push
arpl
push
or
inc
inc
cmp
or
or
push
add
jmp
loope
or
lock
sbb
pop
adc
push
or
xchg
jp
mov
xor
pusha
cmp
xchg
jo
rclb
cmp
arpl
sub
xor
hlt
pop
outsb
std
loop
cmpsl
shlb
mov
xchg
jl
sub
or
jnp
mov
dec
cmp
fcoms
imul
or
or
arpl
jl
cmpl
jbe
stos
or
out
enter
inc
cltd
push
or
adc
lahf
pop
fisttpll
arpl
push
and
popa
roll
loope
loop
data16
test
idivl
cmp
repnz
pop
cwtl
std
adc
test
pop
push
mov
jnp
idivl
int3
mov
je
add
imul
jo
pop
shrb
cmp
add
inc
xor
push
je
movsb
dec
push
sbb
dec
jnp
jno
imul
mov
fistps
mov
in
mov
inc
mov
xor
popf
fsubrs
sbb
ret
shrb
pop
add
sub
sbb
lahf
sbb
xor
mov
loope
cmp
push
or
fisttpll
and
sub
push
mov
jg
pop
daa
sub
jg
mov
gs
xor
fstp
xor
mov
loop
pop
insb
aad
sarl
sub
dec
add
push
outsb
loop
add
ret
and
icebp
dec
mov
emms
outsb
adc
pop
mov
xchg
lretw
jg
out
jae
push
push
cwtl
jo
call
sahf
sub
aaa
jbe
xchg
jle
cmp
adc
popf
rorb
movsl
imul
or
inc
inc
push
mov
sub
jbe
adc
add
aaa
call
lock
cld
xlat
sub
mov
dec
sbb
xchg
adc
into
jmp
xchg
imul
adc
inc
or
aaa
lcall
mov
iret
or
sbb
iret
int3
lcall
pop
mov
lea
and
sbbb
mov
xor
data16
jp
inc
arpl
mov
dec
xchg
repnz
push
sarb
mov
xchg
pop
pop
mov
inc
mov
ret
xchg
add
xchg
js
in
mov
movsl
fstpt
fstpt
imul
or
outsl
pop
mov
or
movsl
xor
cmp
addb
add
mov
popf
notl
or
sub
sub
neg
pop
test
in
inc
mov
jg
ds
mov
shlb
jmp
or
push
sysenter
sbb
jbe
mov
into
out
stc
test
or
cs
jle
and
sbb
sub
mov
aam
int
test
mov
test
jle
jmp
jg
sbb
pop
push
sub
cltd
xchg
dec
les
xor
ds
push
cmp
lcall
or
popa
call
pushf
lea
pop
in
pop
push
jl
out
sub
jns
cmp
dec
in
shll
je
daa
ret
pop
push
add
pinsrw
scas
bnd
test
mov
in
sbb
or
push
ljmp
scas
and
push
mov
pop
mov
or
push
and
sbbb
cmpsl
cmpsb
push
adc
xorb
rcll
jge
add
lds
ret
aas
movsl
mov
pop
testb
add
push
pop
or
dec
cmp
idivb
cltd
call
ret
lock
das
or
nop
js
idivl
cmp
lret
xchg
imul
dec
push
or
mov
jne
inc
cli
cmp
mov
outsb
ss
aas
rcr
out
shrb
loopne
pop
icebp
or
clc
xor
pop
sub
test
mov
nop
xor
xor
stos
in
ja
addb
or
daa
rolb
or
ds
pop
movsb
imul
sahf
arpl
mov
loope
and
or
stos
or
or
fwait
jb
enter
je
jae
xor
dec
in
outsb
out
rclb
loope
int
inc
sbb
pop
or
ret
lods
mov
in
xor
inc
cmp
in
push
testl
cs
pop
mov
xchg
xor
stos
dec
mov
sbb
and
mov
movsb
test
add
and
sub
dec
lds
push
inc
shl
out
push
or
add
addb
std
in
adc
iret
clc
aaa
jae
test
cld
loope
das
or
pop
xor
adc
or
dec
mov
cmpsb
inc
push
movsl
fstpt
les
mov
xchg
cmp
sahf
xchg
add
mov
adc
enter
jno
dec
xchg
call
in
aad
scas
aad
push
mov
test
mov
ret
pop
loope
into
jb
fwait
shl
sub
xchg
out
test
jl
mov
shlb
out
add
aad
stc
mov
in
inc
repnz
pusha
mov
jp
imul
or
sbb
sub
int
sbb
inc
pop
sarb
in
push
nop
inc
fiaddl
add
sub
sub
push
pusha
inc
sub
repnz
mov
push
pop
xorl
inc
mov
mov
xor
pop
push
enter
sub
ds
lcall
mov
mov
pop
jmp
pop
mov
pushf
stc
push
dec
and
inc
mov
imul
stos
jp
call
addr16
popf
cmp
mov
je
pusha
ret
sub
pop
js
out
mov
mov
add
pushf
cli
or
push
aad
jo
or
mov
ljmp
js
jno
inc
aaa
xchg
addr16
jp
fs
cli
or
les
add
mulb
dec
pop
loop
pushf
out
stc
push
cmp
js
arpl
and
jp
subb
cwtl
in
push
test
inc
std
sar
orb
ljmp
jne
loope
push
sub
mov
cmp
push
mov
and
lds
xchg
xchg
test
out
shlb
push
inc
or
mov
push
push
mov
mov
out
ljmp
mov
jb
icebp
imul
adc
out
shl
add
fnstsw
mov
inc
aas
xor
ret
mov
adc
test
roll
orl
sub
cli
mov
icebp
insl
loope
jbe
movsl
imull
lret
or
mov
add
mov
mov
mov
cli
jg
or
hlt
call
mov
daa
cli
repnz
push
pop
mov
aaa
repnz
jnp
jecxz
hlt
aam
xchg
xor
arpl
mov
inc
pop
mov
loopne
pop
cmpsl
arpl
int3
int3
cmp
lods
mov
mov
loope
jbe
in
xchg
xor
push
and
mov
jl
lahf
out
mov
int
daa
out
pop
ret
popl
imul
sbb
dec
mov
xchg
and
pop
stos
arpl
inc
aam
mov
pop
dec
xchg
inc
push
mov
jbe
sub
gs
and
adc
test
fsts
dec
add
lods
test
mov
adc
and
sbb
or
in
push
pop
int3
je
push
mov
int3
xlat
bound
xor
dec
out
inc
ret
fildll
ret
mov
cli
cli
push
mulb
push
outsl
jle
add
shrl
xchg
lret
notl
sbb
repnz
jno
mov
add
mov
xlat
sub
xchg
adc
push
loopne
in
xchg
lods
adc
sti
mov
das
lcall
mov
pop
sub
jae
insb
jno
inc
icebp
enter
mov
xorl
in
adc
outsl
lcall
int3
push
movsb
call
arpl
inc
push
or
loope
cmp
mov
push
rcrl
jne
cmp
xchg
sbb
cltd
mov
mov
pop
daa
pop
xchg
xchg
dec
shrb
faddl
adc
xchg
icebp
insb
lods
sbb
cmpsb
pusha
or
mov
push
mov
out
sbbb
jmp
push
lods
adc
xor
lods
std
int3
aam
movsb
repz
add
sbb
inc
add
loopne
ja
insl
or
inc
adc
out
leave
sbb
dec
lds
shll
sub
negl
mov
mov
fadd
ret
les
js
fdiv
push
rorb
push
andl
insb
push
repz
cmp
insl
mov
push
cmpsl
pop
sbb
mov
lds
imul
lahf
aad
mov
cmp
lahf
pusha
jg
dec
adc
mov
bound
ljmp
loope
push
sub
or
push
jle
scas
daa
pop
daa
cwtl
jns
ja
lahf
pop
repz
push
fistpl
cs
jp
inc
sbb
lret
pop
shll
cmp
sub
adc
mov
add
test
pop
hlt
xlat
pop
int
xchg
fcoms
inc
mov
js
enter
in
sbb
enter
lds
dec
jnp
jbe
pop
enter
sbb
mov
lods
push
movsb
dec
scas
loop
das
fld
iret
das
xor
cmpl
insl
cli
xlat
es
push
cld
call
inc
cmpsl
scas
cmp
in
cmp
xchg
loopne
leave
lahf
lods
notl
sahf
ror
push
cwtl
sahf
jne
call
adc
or
mov
scas
or
fs
cltd
mov
cmp
or
adc
imulb
fcompl
inc
sbb
xor
jp
xor
popf
adc
pop
test
dec
in
cmp
stos
adc
and
iret
outsb
sub
inc
mov
xchg
or
andl
jae
push
cmp
adc
add
push
enter
pop
xchg
xor
cwtl
cld
xlat
jp
cld
jns
sti
mov
mov
xlat
lcall
fisubl
dec
clc
aam
push
scas
stc
jb
dec
cs
jns
add
cmp
in
aas
mov
sti
ffree
inc
rcrl
loop
dec
sub
pop
rorb
sti
jno
dec
imul
push
cmpsl
cmp
mov
subl
cmp
cmc
xchg
jp
and
pop
jp
orl
lahf
xchg
int3
mov
push
pusha
or
sahf
xor
jnp
lods
add
jmp
mov
mov
or
mov
dec
mov
or
add
stc
mov
cld
jno
pop
inc
stc
std
add
ss
out
int
mov
xor
mov
dec
mov
add
scas
std
xorb
aam
testl
fadd
push
scas
jle
fisttpll
xchg
mov
popf
mov
cmpsb
sbb
mov
outsl
mov
mov
scas
inc
lods
in
and
jns
leave
std
popf
pop
lds
pop
movsl
cmp
inc
sub
iret
mov
in
xchg
pop
jmp
test
aam
repz
out
add
mov
cmp
inc
int
enter
pop
dec
push
adc
in
jmp
insb
repnz
daa
or
popf
cmp
adc
push
bound
jle
in
mov
mov
inc
pop
sub
mov
shl
testb
push
or
push
pop
add
push
inc
ss
ljmp
in
and
xchg
xor
jb
lea
movsl
jo
js
xor
jmp
push
dec
inc
imul
roll
jno
xchg
int3
push
clc
adc
inc
xchg
pusha
mov
or
mov
mov
std
fst
ret
aas
in
divl
xor
out
das
mov
rcll
fiadds
adc
cmpsl
pop
mov
jle
ljmp
jmp
in
insb
sub
mov
sub
sahf
sub
jo
adcl
xor
and
jae
jmpw
fcoml
in
fdivrl
mov
sbb
cmp
mov
sbb
repz
cmp
pop
xchg
hlt
popf
mov
jbe
push
sbb
pusha
bound
in
mov
push
mov
fists
cmpsb
leave
cmp
ficompl
repnz
push
cli
xchg
cmc
stos
add
es
xchg
testb
mov
push
mov
and
ss
insl
mov
inc
cld
push
pop
xor
xchg
sbb
fwait
xor
rolb
stos
sbb
xlat
leave
pop
pop
adc
cwtl
lods
xchg
lahf
add
pop
rorl
mov
inc
pushf
fs
sub
mov
mov
test
in
push
dec
dec
and
inc
sbb
test
adc
push
dec
mov
nop
xchg
fldt
stc
mov
in
mov
insb
call
imul
je
ret
rcr
lret
lcall
cmp
add
in
mov
cmpsl
out
cli
mov
mov
xor
jp
leave
movsl
je
stos
mov
cmpsb
fmull
xor
sub
call
int
fsubrs
pop
cmp
out
xorb
idivl
sub
cmpsl
inc
add
imul
add
mov
js
push
xor
loopne
lahf
jae
int3
aad
int
pop
mov
xor
dec
pop
mov
cli
xchg
jne
jmp
xchg
xor
int
mov
sbb
arpl
arpl
and
scas
xlat
loopne
cmpsb
in
cs
fucom
scas
cmpsb
std
fwait
pop
mov
popf
pop
ss
pop
outsl
xor
pop
mov
loope
mov
sub
fimull
mov
push
stc
daa
lret
insl
push
call
mov
jecxz
in
cmp
or
mov
inc
fiadds
cmp
loop
jecxz
cltd
sub
and
stc
push
push
mov
or
lcall
in
icebp
test
clc
rcrb
out
sub
iret
lahf
cmp
cli
into
leave
repz
loopne
jecxz
cmp
dec
xlat
jns
lods
fldt
sbb
popa
in
test
cmp
shrl
mov
xlat
push
mov
xor
sbb
jle
int
xor
je
pop
fwait
jns
pop
mov
cwtl
cs
out
cmp
push
or
xlat
and
iret
aaa
scas
cmp
lods
adc
in
pop
bound
out
push
lea
pop
push
rol
ret
enter
jmp
imul
jecxz
jp
or
jbe
xchg
fucomip
lds
and
sub
push
add
lret
sbb
dec
fsts
ds
sarb
sti
dec
fisubs
push
aas
cmpsl
jecxz
dec
test
cli
test
dec
rcrb
push
btr
popa
cltd
scas
imul
xchg
jmp
fcmovnu
rol
inc
in
mov
and
aas
push
mov
sahf
or
call
mov
fnstenv
xbegin
pusha
scas
aas
shrb
pop
push
and
outsb
dec
dec
xor
das
cmp
push
das
adc
inc
sub
jle
sti
adc
push
inc
mov
ds
test
pop
pusha
mov
outsl
movsl
mov
aaa
lcall
mov
pop
cwtl
leave
pop
test
add
dec
icebp
mov
mov
fstl
push
fnstsw
gs
cltd
sbb
in
scas
cmpsl
outsb
mov
jg
sti
and
daa
les
push
outsl
imul
sub
lret
sub
insl
push
xor
les
das
into
insb
lods
dec
xchg
outsl
out
aas
shl
mov
mov
xchg
jle
std
push
cs
ss
and
lahf
das
adc
call
pusha
xchg
xchg
cmp
in
and
rcrl
rcrb
std
rorb
jg
sub
mov
adc
or
rorb
imulb
dec
xor
xor
mov
arpl
mull
push
push
sarl
fistpl
push
sbbb
jo
and
inc
fnstcw
shll
xor
sub
negb
pop
pushw
lret
mov
scas
cmp
clc
dec
loop
in
mov
jmp
js
add
popf
lcall
pop
push
or
std
push
sub
sub
or
shlb
sarl
push
add
loope
push
sbb
test
or
or
adc
xlat
icebp
mov
hlt
ljmp
fnstcw
pop
add
addr16
iret
in
add
out
movnti
mov
loopne
and
or
inc
iret
out
inc
mov
jno
dec
fwait
lcall
cli
push
xchg
sub
pusha
fistl
jb
jg
test
in
push
cwtl
inc
pop
adc
inc
stos
ds
and
shrb
sub
xchg
xlat
arpl
cmp
add
add
aas
cmpsl
jae
push
pop
push
sbb
filds
arpl
fcompl
dec
stc
inc
add
lods
cli
inc
cmpsl
out
loope
aas
mov
pusha
cmp
push
fsubrl
aaa
jmp
push
add
std
iret
enter
mov
and
sub
xchg
imul
sbb
stc
in
scas
dec
and
xchg
mov
sbb
test
lret
xlat
fists
fcoml
jmp
pop
pop
jge
xor
mov
adc
aaa
dec
jge
lahf
or
xchg
ja
add
test
rcll
push
cmp
notl
adc
jle
xchg
lods
out
out
jle
fcom
aad
xlat
stos
movsl
bswap
sub
mov
daa
cld
mov
pop
out
xchg
daa
ret
pop
jmp
loop
sbbb
aam
es
jmp
lods
fisubrl
aaa
fstl
mov
add
push
adc
pop
pop
fisubrs
or
xlat
sarb
outsb
repnz
or
sbb
dec
pop
dec
mov
mov
dec
sbb
cmp
ja
lods
shll
dec
mov
movsl
mov
and
ret
xchg
daa
xor
lock
es
mov
or
stc
rorl
or
xor
pop
ret
ds
enter
divl
mov
mov
adcb
xchg
pop
adcb
shlb
and
inc
testb
dec
js
mov
mul
xor
push
lcall
shr
add
cmp
scas
stos
in
mov
pop
fsubl
sbb
jno
pop
lods
std
dec
addl
fnsave
js
enter
inc
std
xchg
dec
repnz
xor
popf
cmpsl
cmpsb
cmp
dec
out
jae
mov
es
lea
mov
dec
xchg
cmp
push
cld
dec
repz
add
push
lods
pop
fwait
adc
rol
movsb
xchg
das
add
cld
int3
inc
dec
out
xor
popa
shll
mov
mov
or
imul
fnstcw
inc
jmp
mov
sahf
movaps
imul
aaa
scas
stos
cltd
sub
cmpsl
loop
sub
sbb
mov
jne
push
push
pop
pop
add
cmp
mov
test
jge
jg
dec
add
mov
mov
mov
adc
movsb
or
sbbl
nop
loope
adc
mov
and
inc
ja
push
add
sbb
aad
rol
sub
mov
mov
or
dec
imul
cmp
mov
lret
or
out
inc
dec
push
js
xchg
fwait
cmc
je
mov
xchg
je
mov
mov
arpl
lods
inc
push
insl
and
mov
or
pop
adc
nop
jne
adc
mov
nop
push
jmp
mov
jb
mov
and
cltd
sub
repz
mov
add
and
push
enter
imul
inc
pop
dec
rol
in
and
cltd
jecxz
push
fimuls
hlt
cmc
popf
dec
sahf
xchg
andl
mov
xchg
xchg
unpcklps
mov
nop
lcall
mov
or
sbb
sbb
fcmovne
jae
add
aad
icebp
xchg
push
fldl
sbb
lret
mov
xor
add
push
repnz
mov
leave
ljmp
mov
shrb
pop
insl
pop
fstp
mov
lock
imul
push
in
jno
push
hlt
push
pop
mov
sbb
cmc
aaa
gs
int
aad
jle
jbe
aas
push
or
jge
insb
mov
push
shr
mov
repz
rcrb
push
addps
pop
sub
movnti
lods
pop
aas
insl
rcll
mov
lcall
dec
and
iret
xlat
jge
jl
dec
popf
orl
insl
pop
add
pop
loopne
jbe
cld
or
jecxz
in
loopne
xor
popf
sub
jo
mov
push
fsubp
call
out
repz
inc
mov
das
mov
je
into
in
loope
js
stos
xor
mov
in
lcall
push
lret
lret
imul
xor
adc
lods
push
or
sbbb
push
xor
test
mov
je
ret
rcr
or
stos
fcoml
repnz
inc
repz
ret
push
shrb
inc
pop
jne
cltd
mov
cmpsl
in
or
icebp
cltd
cmp
adc
call
sbb
imul
pop
es
bound
negl
lea
mov
cmp
or
lcall
testl
es
pop
repnz
int3
xorb
shll
lahf
cli
inc
cs
es
push
mov
icebp
dec
shrl
push
mov
jg
aam
jb
jg
jge
mov
pop
mov
in
jl
enter
dec
pop
sub
and
sbb
lret
ja
push
call
xor
and
outsb
mov
add
or
mov
icebp
loope
cmp
jecxz
add
sub
dec
dec
inc
ljmp
enter
mov
xchg
jge
scas
cld
jmp
pop
jae
mov
mov
int
ficoml
adc
repnz
fdiv
push
jns
mov
inc
jg
lahf
add
mov
ror
in
shlb
add
xor
pop
and
outsb
sarl
add
pop
sub
arpl
lods
cmp
inc
cmp
xor
shll
ret
inc
mov
xor
loop
dec
inc
mov
test
mov
jbe
pop
or
inc
pop
xchg
ret
int
imul
fs
std
xor
mov
push
and
gs
push
sbb
test
pop
scas
dec
sbb
loopne
rcl
loop
xor
inc
jge
movsl
pop
rorl
xor
adc
hlt
mov
cmp
add
test
sbb
xor
or
gs
imul
test
test
aam
cs
ja
test
adc
or
or
lods
jae
andl
sub
jp
lcall
popa
int
sbbl
dec
imul
inc
stos
aaa
xchg
jmp
ljmp
stc
cmp
or
jmp
inc
in
and
dec
ret
or
push
shrl
mov
fdiv
xchg
es
xchg
or
push
lret
push
fadd
repz
je
lods
mov
sti
xchg
jp
movsl
push
scas
add
adc
adc
dec
clc
pop
mov
sub
add
leave
pop
daa
adc
popa
mov
cmp
das
inc
idivl
leave
xor
and
inc
fbstp
xor
jae
add
data16
dec
cltd
dec
cs
cmp
or
cli
sar
pop
mov
sahf
loopne
cs
inc
test
inc
sub
ljmp
push
mov
out
jp
or
decb
cmc
jmp
adc
shll
jns
cmp
cld
out
enter
loopne
or
sub
pop
pusha
out
je
mov
insb
outsl
jmp
pop
lods
push
or
fs
inc
add
out
pop
jbe
mov
out
mov
fsubl
in
lcall
jnp
xchg
shll
arpl
mov
cmp
shrl
pop
pusha
pop
pop
dec
in
ror
repnz
test
xchg
pop
and
repz
js
push
jle
mov
push
pop
or
mov
push
dec
pop
jp
sub
in
pop
sbb
mov
clc
lock
popf
data16
inc
mov
aad
sub
aas
out
cltd
test
fcoml
shlb
pop
jge
jmp
jnp
jg
ds
loopne
cli
movsl
enter
js
imul
xlat
cli
cmpsl
mov
jmp
into
pop
push
idivl
stos
inc
out
ror
xchg
or
test
daa
stos
add
lcall
popa
pop
mov
push
loop
jb
sahf
pop
cmpsl
inc
xchg
rcl
push
js
dec
or
test
les
pop
sbb
cmpsb
mov
mov
add
and
cmpsb
push
mov
bnd
int3
cmp
sbb
or
scas
pop
fildll
mov
imul
je
add
enter
cmp
clc
cmp
aad
shrl
fwait
jno
jg
leave
call
adc
push
jecxz
sub
daa
inc
das
imul
add
cmp
sub
sbb
cmp
mov
or
daa
stos
push
push
mov
fstpl
loope
cwtl
or
mov
rcll
and
mov
cli
cmp
xchg
xor
xchg
into
iret
pop
push
pop
dec
mov
aaa
icebp
jb
sahf
sti
sub
sub
movsb
imul
mov
outsl
mov
cwtl
jnp
enter
loop
mov
dec
xchg
push
out
mov
mov
mov
aam
test
dec
in
cmp
stc
xor
jae
mov
stc
pop
loop
sub
ss
inc
call
jo
mov
dec
insb
mov
insl
or
outsl
aaa
xchg
mov
cli
xor
daa
adc
inc
add
leave
pop
fmuls
aaa
push
sub
int3
xchg
xchg
stos
aad
ds
pop
add
fisubl
sub
cli
out
shrb
icebp
out
rcrl
out
pusha
mov
sbb
add
jnp
mov
hlt
adc
push
lcall
stc
xor
iret
idiv
adc
jns
fiaddl
fisubrs
sbb
adcl
sub
insl
mov
pushf
jecxz
jmp
mov
bound
xchg
addb
gs
leave
xor
test
xor
jbe
cmc
popl
inc
mov
mov
je
jne
jb
popa
rclb
test
adc
fwait
jle
pop
stc
inc
movsb
xchg
jae
mov
and
lret
jmp
jl
dec
fwait
nop
xlat
ss
or
jecxz
inc
fadds
loope
add
out
pandn
pop
lret
inc
xchg
mov
das
out
inc
loopne
insb
cmp
iret
insl
push
or
cmp
rolb
adc
pop
imul
pop
out
inc
mov
fildl
inc
lea
pop
rcll
add
sti
icebp
cmc
popa
push
xchg
inc
ja
lahf
jo
test
scas
fsts
jmp
je
lret
or
ja
ret
pop
xchg
sub
sub
out
sti
jl
sub
push
call
stos
or
push
dec
cld
aas
sbb
sub
xor
inc
ja
add
stos
adc
mov
pop
fcmovnbe
das
out
lods
decb
imul
pop
clc
pushf
les
jmp
movsl
jne
pop
out
mov
mov
pop
mov
dec
jne
mov
or
imull
cmp
cmc
sahf
xor
xchg
and
xor
je
fadd
sub
mov
sahf
roll
jns
adc
or
repz
sahf
out
pushf
inc
mov
and
leave
mov
shlb
pop
cld
les
or
out
pop
inc
movsl
mov
push
sbb
repz
ljmp
mov
iret
outsb
dec
pop
outsl
nop
mov
xor
adc
std
loope
std
jecxz
dec
sti
mov
mov
stos
sub
fucomi
sti
mov
jb
xor
sbb
jge
xor
icebp
fwait
mov
push
rcr
mov
lahf
push
fcomip
xchg
rcl
mov
add
hlt
ss
dec
mov
mov
pop
pop
inc
mov
popa
sbb
imul
cmp
arpl
popa
inc
andl
pop
inc
dec
fwait
pop
or
loop
mov
stc
repnz
fwait
sub
les
adc
xchg
pop
lods
dec
add
cmc
and
in
pop
aas
mov
and
pop
adc
ds
cmpsb
cmp
shrl
add
xor
mov
xor
in
mov
sub
insl
xchg
dec
mov
mov
into
xchg
mov
xor
mov
mov
pop
shll
leave
pop
inc
movsl
mov
cmc
mov
das
lret
pop
shll
push
inc
lcall
sti
addr16
lods
iret
adc
adcb
or
mov
push
mov
push
dec
sbb
mov
dec
mov
mulb
imul
hlt
cwtl
dec
sub
jmp
add
outsl
and
sahf
xchg
jo
sub
outsl
repz
movl
cmp
imul
stos
es
mov
lock
lods
jbe
rcll
in
xor
movsb
sahf
aaa
and
xchg
jmp
imul
cmpsl
jae
pop
shrb
fsubrs
subl
mov
dec
es
mov
mov
sub
fdiv
jbe
sbbl
or
mov
pushl
lods
xor
mov
es
inc
jmp
pop
pop
idivl
in
pop
data16
ret
test
dec
hlt
sbb
test
adc
lods
add
mov
cmpsl
push
mov
lods
sub
inc
mov
push
ficompl
add
sbb
or
mov
xor
xor
ss
ret
mov
jae
in
mov
cmp
hlt
sub
lcall
jae
pand
test
pop
inc
cmp
call
jno
jecxz
and
jmp
sbb
sub
divb
sub
sub
and
dec
push
mov
push
movl
push
xor
stos
mov
iret
lret
jnp
out
adc
jg
mov
bound
ja
lahf
jb
mov
mov
out
cmp
fisubrl
aaa
sbb
sarl
add
cwtl
pop
or
nop
cmp
cmp
and
mov
jge
dec
push
push
jge
push
mov
fisttpll
outsb
imulb
add
add
jnp
adc
xor
adc
js
xchg
loope
add
mov
subl
aaa
imul
push
fsubl
fsub
aas
xchg
roll
pop
scas
ret
push
cwtl
xor
mov
mov
imul
add
add
jo
scas
mov
cmp
or
popf
mov
inc
mov
stc
into
test
sub
inc
test
cli
push
and
jmp
icebp
jmp
std
lret
ret
and
cmp
je
ds
into
mov
mov
shll
enter
and
out
sti
jle
mov
ror
mov
test
sbb
inc
mov
mov
sub
loop
mov
imul
sbb
xor
jne
add
xor
and
pop
filds
jge
orl
adc
dec
out
fs
add
test
sbb
push
call
jp
js
push
jecxz
int
fiaddl
shlb
dec
jo
fdivl
cmpsb
lock
cmp
adc
cmpsl
daa
in
loopne
test
dec
cli
sbb
mov
mov
mov
sbb
mov
mov
xchg
insb
dec
dec
xchg
pop
rol
mov
popa
push
jmp
xor
stos
mov
out
mov
mov
into
xchg
inc
fistl
test
push
inc
test
inc
ret
lea
push
icebp
hlt
inc
jge
fwait
inc
movsl
xor
xchg
stos
cmovb
xchg
lods
xchg
jbe
ljmp
adc
inc
mov
arpl
lods
mov
clc
pop
jns
cwtl
mov
arpl
push
xlat
mov
or
mov
jl
clc
cs
fcom
cmc
into
std
leave
clc
pop
test
lock
nop
xor
jmp
inc
mov
out
xchg
cmp
xor
icebp
dec
mov
lret
mov
loopne
pop
leave
fmul
popa
mov
scas
imul
xor
clc
mov
xor
and
adc
mov
leave
push
xchg
mov
inc
sar
nop
mov
sub
sub
or
sub
xor
repnz
int
outsb
sbb
fwait
cmc
repz
jns
push
jl
inc
mov
sbb
in
adc
sub
mov
and
mov
int3
xor
dec
jecxz
lock
sbb
mov
jbe
ds
or
adc
cmpl
rorb
inc
xchg
mov
cs
in
stos
pop
pop
sub
xchg
jge
mov
popf
mov
aas
mov
ror
jnp
mov
enter
jns
cmp
test
cmp
jecxz
sbb
and
cltd
xchg
pop
sub
cmp
fnsave
jns
xor
test
mov
inc
push
xchg
dec
cli
std
dec
pop
mov
test
push
ja
jecxz
mov
and
cmpb
adc
sbb
bound
xorl
daa
cmp
shrb
in
in
in
imul
xchg
dec
in
stos
xchg
inc
sub
jo
and
js
pop
and
inc
mov
dec
sub
or
and
jmp
fwait
xchg
jmp
mov
std
mov
imul
lds
adc
test
cmpb
jnp
xchg
sbb
inc
adcl
adc
jnp
leave
popf
push
movsl
fwait
jns
jecxz
xchg
xchg
jne
mov
mov
dec
push
sub
sbb
cmp
pop
xchg
pusha
sti
sbb
arpl
jg
fstpl
xor
mov
pop
push
xor
inc
sbb
cmpsl
cmpsl
seto
xchg
ret
dec
mov
xor
push
jne
sbb
std
xor
jl
xorl
out
adc
push
lods
mov
dec
popf
das
scas
stc
sub
aad
xchg
ljmp
stc
and
or
mov
sbb
push
shll
inc
jns
fisubs
dec
mov
int
cmc
leave
das
icebp
roll
mov
sbb
push
mov
test
mov
outsb
and
sbb
jmp
xor
andl
fsubrs
or
bound
adc
mov
jle
pop
jnp
pushf
inc
cmpsl
cmp
sbb
mov
sub
leave
sub
lahf
fucomi
push
mov
mov
and
push
push
sub
dec
in
mov
cmpsl
and
addb
adc
adc
mov
pushl
es
push
mov
std
ljmp
pop
lock
ss
cmp
shl
loope
xlat
or
and
sbb
nop
pop
fcoml
cs
lock
inc
inc
fnstenv
xchg
or
add
ljmp
mov
aam
jg
adc
jne
dec
push
ret
sbb
sub
push
pop
repnz
arpl
pop
cmp
dec
cmp
sbbl
in
jecxz
or
inc
jmp
push
pop
fs
fists
mov
jmp
not
imul
xchg
dec
jmp
and
pop
pop
xor
xchg
or
stos
inc
push
mov
fsubrl
repnz
out
cltd
in
xor
push
fcoml
and
fwait
jne
mov
and
lret
into
gs
mov
mov
xor
cmp
jnp
or
cmp
repz
xchg
or
stos
push
shl
mov
flds
ja
and
out
out
aaa
xchg
sub
dec
mov
insl
daa
jmp
sbb
repz
mov
repz
scas
push
inc
ret
shlb
stos
popf
pop
xlat
pusha
add
shrl
add
inc
cmp
iret
pushf
dec
pop
lahf
adc
sub
jae
push
mov
insl
xchg
inc
sti
pop
jp
mov
stos
js
jge
enter
aas
cmp
cli
sbb
andl
cmp
lods
xor
lret
inc
bsf
mov
mov
or
es
adc
xor
call
test
and
imul
stos
movsb
std
dec
cmp
mov
jns
pop
gs
sub
outsl
loop
arpl
mov
sahf
jns
loopne
add
mov
and
cmp
and
ja
adc
jo
sbb
xchg
insb
cmpsb
daa
popa
xchg
sub
push
out
je
dec
leave
scas
pushfw
cmp
jle
xor
adc
and
outsb
inc
cmp
std
pop
test
enter
fistps
gs
rorb
fcmovnu
cli
add
adc
jne
mov
add
data16
bound
push
loopne
cmpsl
pushf
repz
rcrb
mov
bound
mov
and
push
cs
mov
sbb
or
fs
in
pop
cltd
cmp
test
and
push
clc
adc
movsl
sbb
jbe
push
stc
xor
pushf
and
pusha
mov
inc
inc
adc
mov
or
jg
movsb
cmp
pop
aas
in
mov
clc
icebp
sbb
mov
and
dec
adcl
xchg
inc
and
icebp
popf
sbb
dec
push
push
mov
ret
mov
adc
and
addr16
mov
lock
jbe
pop
sub
loopne
pop
mov
cmp
xor
shl
flds
rolb
mov
xchg
bound
icebp
pop
daa
dec
ffree
test
dec
fldt
cmpsb
leave
stos
fld
mov
das
jno
dec
loop
pop
mov
dec
sbb
adcb
movsb
pop
xchg
icebp
cmp
pusha
out
pop
ret
adc
sbb
mov
cld
rolb
inc
aad
leave
outsb
sbb
popf
push
add
in
inc
movsl
mov
fwait
or
fidivrl
xor
adc
pop
arpl
cwtl
add
lods
dec
xor
pop
adc
imull
inc
out
or
sbb
imul
gs
inc
and
pop
test
addl
adc
inc
decl
sub
push
insl
dec
loope
pop
mov
mov
adc
inc
pop
fmul
js
subb
sub
dec
nop
sbb
and
dec
movsl
incb
jb
into
stos
ret
xor
push
inc
xor
arpl
jno
xor
imul
in
cmpl
push
mov
cwtl
xchg
fimuls
dec
inc
clc
mov
sbb
pop
lods
bound
or
in
into
sbb
pop
mov
inc
loop
test
dec
sub
shll
cmp
xchg
insb
sti
jge
cmc
out
insl
popa
mov
lahf
outsb
cltd
popa
lds
sbb
repz
fsubrs
pop
ficoms
shl
and
movsl
pop
lcall
dec
jnp
cli
push
pusha
in
jmp
adc
data16
xor
incl
int
popf
mov
dec
dec
jmp
sbb
mov
add
inc
sub
push
jns
ja
and
repz
jg
mov
xchg
aaa
cmpsl
cmp
movsl
ret
repnz
mov
adc
ror
inc
jnp
stos
adc
sbb
pushf
cmp
sub
pop
add
rorl
je
xlat
fwait
out
icebp
aas
xchg
insl
or
xchg
lea
jae
pop
add
jbe
mov
push
insl
ljmp
in
sbb
mov
mov
and
test
fbstp
add
fstpl
mov
xchg
xchg
daa
adc
ud1
cmp
imul
fdivl
xchg
cld
lret
cmpsb
pop
dec
pop
sbb
lea
dec
int
popa
in
sub
cwtl
dec
add
jno
inc
fildl
clc
popa
repnz
jo
and
mov
inc
movsl
dec
dec
dec
sub
and
and
push
xlat
icebp
test
sarl
mov
in
fwait
subb
push
and
pop
and
xor
out
stc
js
ja
lods
dec
cmp
jl
xchg
adc
in
pop
inc
loope
sbb
mov
pop
cli
sbb
dec
dec
adc
mov
xor
dec
sub
nop
or
pop
loop
xchg
add
stos
scas
enter
andl
jl,pt
adc
xchg
jecxz
movsl
jno
pop
insb
adc
xor
and
enter
repnz
popf
and
mov
outsb
and
push
enter
mov
push
invd
lcall
adc
mov
into
push
nop
inc
mov
mov
or
ljmp
jae
or
sti
inc
mov
fistps
xchg
lds
cmp
lds
push
mov
mov
int
mov
movsb
mov
lcall
movsb
outsl
mov
scas
xor
xchg
push
mov
ficompl
arpl
bound
std
adc
xor
add
stos
test
dec
mov
jge
mov
add
hlt
jmp
push
mov
out
notb
pop
cmp
pop
loopne
prefetch
or
call
inc
mov
or
cwtl
xchg
mov
sbb
in
cmp
js
cltd
mov
cmpsb
xor
mov
fistps
sbb
mov
mov
fwait
pop
inc
xorb
xchg
testb
mov
push
push
pop
enter
adc
add
outsb
mov
push
fldt
xchg
adc
jnp
sub
sbb
jmp
xor
cwtl
fidivrs
mov
and
arpl
out
mov
scas
pslld
push
fdivs
or
sarl
adcl
daa
lcall
dec
je
and
sahf
nop
adc
clc
in
push
inc
enter
je
mov
add
lock
adc
jmp
pop
xorl
and
push
push
daa
and
sahf
stos
repnz
or
mov
repz
out
push
es
jne
add
lret
add
xchg
sarb
js
addr16
mov
xchg
icebp
cmpb
leave
and
icebp
mov
sub
mov
aam
mov
out
jp
leave
ret
in
scas
jle
xlat
adc
sub
jecxz
hlt
addb
inc
aad
cmp
xchg
test
cs
adc
pop
mov
inc
ds
pop
pop
popf
push
xchg
dec
sbb
jl
push
dec
dec
jge
aas
adc
xchg
cmpsl
mov
pop
in
repz
popf
mov
lret
sbb
es
test
dec
sar
inc
mov
mov
or
pop
inc
addr16
ret
fistps
push
test
xchg
adc
or
fstps
xchg
pop
jne
jl
pop
in
xchg
pop
mov
mov
aam
jle
jge
jp
add
push
mov
icebp
dec
fucom
xor
mov
sub
cmp
stos
test
add
jl
bound
cwtl
dec
xlat
inc
into
sbb
push
pop
mov
fcomp
out
shll
sub
sarl
movsb
out
vpshaq
add
push
popa
dec
pop
out
shrl
lods
adcl
mov
test
pusha
mov
jns
scas
lcall
push
ficompl
add
js
sbb
xlat
shl
adc
cmpsb
mov
mov
mov
int3
add
repnz
rolb
fnstcw
adc
push
or
into
inc
mov
jmp
fwait
add
js
movsl
push
add
mov
out
inc
outsb
lret
out
xlat
mov
add
sub
adcl
ror
bound
hlt
jb
push
hlt
into
jle
fcmovbe
lcall
in
mov
adc
add
and
inc
pop
cltd
mov
push
sahf
add
add
das
pop
testl
in
loopne
or
pushf
push
test
jne
fcoml
insb
inc
inc
xchg
add
and
jno
addr16
stos
mov
add
popf
dec
into
call
dec
fdivl
or
ds
cld
add
cmp
movsb
push
das
fwait
pop
add
loop
test
inc
call
jge
cwtl
sahf
cmp
orl
cs
and
xchg
cltd
sub
xor
sahf
out
fwait
daa
push
push
data16
aam
xchg
test
out
sbb
dec
mov
cltd
cmp
shl
xor
enter
ss
int
test
arpl
cmp
cmpsb
in
cltd
movsb
push
test
jle
push
pop
sub
xor
ret
cltd
sbb
ljmp
mov
jno
and
inc
push
ja
xchg
js
xchg
repnz
xchg
adc
into
lahf
xlat
fiaddl
int
mov
mov
lcall
notl
xor
jo
jge
vpmacssdqh
lahf
sub
xchg
mov
push
outsb
iret
inc
or
jg
stos
and
inc
push
mov
cwtl
mov
add
into
out
scas
shll
push
inc
push
enter
cs
push
popa
roll
and
jae
mov
pop
ds
pop
adc
jne
dec
pop
pop
rclb
rorb
fstp
iret
sub
js
push
repnz
cmp
jle
cmpsb
ret
add
rcrl
rcl
cmc
or
mov
out
xchg
mov
movsl
clc
sub
mov
and
xor
ret
incl
repz
xor
dec
in
jo
sbb
mov
pop
jle
jb
push
add
clc
push
sub
fistpl
and
fs
int
gs
call
xchg
jb
ret
mov
dec
xchg
mov
popf
fcomi
dec
sahf
and
push
out
aad
push
sub
add
loopne
pusha
aas
jns
dec
je
jo
popa
or
dec
or
addr16
mov
sti
pop
ret
jne
mov
daa
or
incl
inc
mov
push
fwait
and
xchg
mov
mov
lock
mov
lret
hlt
sbb
xchg
cwtl
cmp
data16
mov
je
add
je
cltd
mov
je
dec
lods
pop
stos
inc
out
mov
rcrl
add
jle
mov
stc
in
xchg
push
xor
sub
sub
inc
lods
cmc
sbb
mov
cmp
push
jmp
ljmp
mov
rclb
pushf
sub
jp
sub
mov
xor
push
xor
mov
dec
push
dec
call
imul
inc
mov
lret
push
scas
push
pushf
aaa
and
adc
lret
in
inc
inc
outsl
push
ljmp
in
mov
mov
push
outsl
sbbb
pop
xchg
pop
lcall
lock
xchg
adc
std
sub
sbb
lods
outsb
pusha
shll
gs
out
xchg
fstps
aam
dec
std
push
cmpsb
test
xchg
test
push
cmpsb
inc
rorb
xchg
jnp
shl
sbb
xchg
mov
roll
idivb
fsubs
repnz
fiaddl
popl
aam
mov
pop
lea
or
lahf
cmp
int
mov
xor
sub
mov
fldcw
and
pop
or
add
push
adc
dec
mov
gs
adc
popa
inc
push
sub
sub
enter
dec
inc
mov
iret
push
sbb
pop
mov
rcrl
out
jmp
adc
ja
daa
and
push
xchg
mov
push
cli
cmpsb
dec
sbb
mov
mov
dec
insl
lea
mov
push
movsl
and
mov
pop
loope
sysret
and
sbb
inc
leave
rorb
pop
rclb
sar
pusha
dec
fs
jne
xchg
push
outsl
jne
or
dec
or
push
aaa
insl
out
xchg
adc
imul
adc
fidivrs
or
adc
jl
ja
dec
movsb
dec
dec
dec
sbb
das
insl
and
addr16
movsb
mov
std
daa
test
pop
sub
inc
inc
jb
jo
stc
inc
loope
cwtl
popa
inc
cld
sub
movsb
lods
mov
or
dec
and
adc
dec
mov
or
cmpsb
mov
cmpsl
cld
push
in
in
mov
push
ret
int3
arpl
arpl
rol
mov
clc
enter
mov
fs
cmpsl
into
gs
mov
sub
jmp
ja
inc
jecxz
mov
lods
roll
bound
addr16
or
sub
movsl
push
dec
lret
push
outsl
gs
mov
mov
cli
movsl
loop
adcb
stc
lret
mov
mov
aas
inc
add
mov
push
cmc
push
cwtl
or
int3
pop
and
rorl
cmpsb
jecxz
repnz
arpl
pushf
shrl
imul
push
loope
adc
inc
mov
jmp
mov
mov
cltd
cmpsb
pop
lahf
mov
mov
popf
push
push
mov
mov
mov
adc
std
xor
ds
pop
sbb
push
lahf
xchg
cmpsb
inc
add
outsb
xchg
aas
inc
push
xor
push
xor
jb
inc
sub
add
inc
xchg
mov
or
lahf
repz
leave
pop
cli
fdiv
mov
std
fmull
bound
jbe
mov
dec
insl
mov
mov
sub
push
lock
pop
inc
mov
fcoms
xchg
in
sub
test
jo
ret
cmp
fstps
lods
ds
or
dec
lods
mov
cmp
add
int
mov
negb
push
lods
mov
insb
push
out
cwtl
xchg
jnp
fidivs
subb
shl
aas
mov
inc
push
pop
xlat
dec
iret
bound
sub
fisttpl
mov
cmp
sub
into
lret
dec
jecxz
cmpb
adc
sti
or
and
push
and
xchg
sbb
jbe
mov
icebp
test
cmp
out
sbb
arpl
push
xchg
sahf
sbb
mov
cmovge
std
add
bound
lcall
push
repz
push
sar
lods
in
dec
dec
mov
or
add
out
out
add
adc
jmp
iret
ja
mov
lods
dec
mov
data16
arpl
ret
repz
xchg
std
sub
sbb
and
mulb
sbb
sub
add
push
cs
pop
pushf
fldt
push
cmc
mov
popa
xchg
mov
pop
stos
out
xor
jnp
fldt
shll
dec
mov
nop
cmp
or
dec
and
inc
imul
cltd
push
mov
mov
loope
mov
test
push
adc
aas
cmp
out
mulb
les
and
testl
pop
xor
xor
pop
pop
arpl
pop
xor
cmp
sbb
add
adc
stos
iret
jmp
imul
inc
fisubs
push
cmp
or
add
outsl
jbe
cmp
sub
loop
push
push
not
loope
xchg
cmpl
push
loopne
es
negl
sbb
inc
repz
dec
mov
fldt
dec
scas
ffree
and
dec
es
ja
stc
push
enter
out
int3
jp
dec
arpl
insb
dec
shll
shll
loopne
sub
js
sbb
cmp
test
mov
enter
sbb
leave
or
cmpsl
and
mov
mov
xchg
fcomp
sti
xrelease
fprem1
or
movsb
adc
sbb
ret
jne
push
scas
sub
sar
mov
out
xor
sub
cmp
in
mov
test
cmpsb
sub
push
pop
outsl
fdivs
lret
mov
adc
in
inc
adc
js
lahf
sub
push
adc
adc
loope
fcom
cmc
jl
or
jnp
cmp
mov
xchg
mov
jge
ret
pop
ljmp
in
enter
push
mov
leave
aad
pop
add
fucomi
pop
sti
loopne
fwait
mov
pop
dec
dec
pop
stc
iret
mov
loop
mov
ljmp
ja
jecxz
xchg
fsub
aaa
hlt
int
pop
pusha
ja
test
add
xchg
out
stc
div
jl
loope
popa
pop
mov
aam
mov
mulb
inc
xor
xor
jb
daa
aam
cltd
lods
ret
or
cwtl
inc
inc
dec
sub
dec
or
cmp
daa
ficoml
ja
pushf
lret
shll
sub
xorb
daa
mov
js
mov
hlt
test
push
rol
fnstcw
stos
mov
pop
sub
pop
filds
inc
jge
addr16
fmull
jb
sbb
sub
cmp
xchg
jns
inc
sbb
call
lods
out
jp
repnz
lret
inc
lahf
rorb
push
xor
xchg
jge
inc
push
pop
push
bound
inc
sub
pushf
jmp
enter
add
push
insb
inc
outsb
ja
std
icebp
mov
pushf
cmp
or
push
filds
enter
mov
pop
lods
lahf
mov
mov
imul
mov
mov
stos
jns
repnz
rolb
es
and
arpl
add
loope
mov
jmp
cmp
rclb
sti
sar
mov
and
js
or
and
lods
cltd
jg
fistl
in
sbb
fwait
loope
cmp
and
xor
mov
popa
add
mov
xor
xchg
jecxz
pop
mov
sub
insb
adc
mov
or
ret
sub
mov
xor
popf
in
ret
repnz
sbb
mov
add
dec
insl
pusha
sbb
into
mov
call
pop
jmp
sbb
les
aaa
imul
outsl
inc
inc
and
push
jo
cmpsb
mov
mov
sub
xor
call
loope
iret
pop
mov
cltd
adc
nop
lcall
inc
or
cld
sbb
pop
in
rolb
adc
test
xchg
add
fldl
mov
in
bound
aam
pop
jns
push
es
popf
arpl
pop
jb
aas
ror
sub
test
mov
jae
xchg
jl
mov
mov
mov
lea
add
push
cmpsl
std
mov
ret
push
sahf
fdivl
lcall
insl
in
imul
cmpsb
shl
idivl
outsb
setne
cmp
fisttps
dec
add
inc
xor
jbe
inc
outsl
sub
loope
es
push
lahf
inc
inc
xor
cmp
test
push
push
xor
divb
xor
ret
and
dec
int3
fmulp
cmp
mov
pop
push
lock
sahf
shrl
out
in
adc
inc
lret
insl
mov
xchg
aaa
or
popa
or
add
jmp
mov
fsubrl
loope
xorb
mov
out
add
and
cmp
enter
repnz
shrb
pop
push
lods
mov
push
dec
jl
or
jo
xchg
xchg
outsl
fildll
outsl
pop
pop
sbb
add
xor
es
sub
bound
sub
scas
pushf
into
jns
out
cmp
int
sbb
les
cld
roll
add
dec
mull
jo
pop
dec
sub
fistps
jne
out
adc
cs
adc
jmp
neg
jge
pop
ret
in
cmc
dec
jp
out
loopne
sub
es
pushf
sub
cld
xor
add
mov
sbb
mov
pop
fstpl
cmc
lret
fldcw
mov
shll
out
mov
jnp
loopne
packsswb
mov
sub
push
adc
xlat
iret
jmp
jecxz
out
or
pop
and
push
data16
xchg
data16
jl
mov
push
mov
stos
stos
ret
xchg
xor
push
xor
or
fcompl
adc
in
sub
push
or
es
mov
addr16
add
dec
lock
fnstenv
rorl
dec
lds
dec
inc
mov
push
aam
push
dec
loopne
add
push
jge
or
icebp
lcall
jecxz
mov
scas
add
cmc
mov
popa
and
addb
adc
pop
loope
dec
cltd
push
mov
lock
lock
arpl
cmp
cmpsl
push
push
nop
std
es
pop
or
ds
pop
xchg
push
mov
xchg
sbb
stos
sub
cmpb
je
popl
pop
pop
add
ret
sub
add
dec
mov
add
dec
das
shlb
mov
outsb
imul
arpl
dec
mov
push
xlat
lods
out
pusha
and
and
jne
mov
jns
mov
cmp
rol
insb
dec
or
inc
imul
iret
fcoms
dec
fs
sub
sub
or
cli
es
cmp
ds
jecxz
out
lock
inc
push
mov
or
lods
int
gs
xchg
fs
mov
sub
xchg
and
das
dec
lods
mov
sub
sbb
lds
adc
inc
int
les
loopne
or
push
jno
jecxz
hlt
pop
test
lcall
in
xor
mov
xchg
mov
cmp
das
pop
stos
rcrb
jb
fsubs
aad
lods
mov
fwait
lea
sbb
sub
mov
jmp
adc
insb
stc
outsb
mov
pop
xchg
out
mov
in
inc
insb
cmc
clc
pop
je
int
push
push
imul
test
sbb
ss
aas
add
es
add
xchg
mov
mov
bound
cs
lret
cmp
sbb
add
loope
mov
movsl
sub
add
imul
cwtl
repz
sub
nop
push
sbb
cmp
fmull
rorl
outsl
pop
lea
test
cld
jae
and
jno
inc
fcompl
xchg
inc
or
and
adcb
xchg
in
ds
imul
stos
xchg
imul
cmpsb
or
push
push
ss
fstpt
inc
popa
daa
and
out
js
test
dec
adc
push
cmpsl
push
mov
in
push
jnp
shlb
cmp
adc
ret
shlb
ret
stos
adc
adc
insl
scas
pop
mov
sub
push
add
mov
add
jmp
mov
js
test
adcl
sub
push
daa
xchg
sbb
ss
loop
in
jg
sub
pop
shll
inc
pop
loopne
or
adc
adc
push
cli
test
bound
rolb
add
push
adc
shrl
sbb
cld
inc
push
mov
xchg
or
les
sub
xor
jns
push
scas
pop
jecxz
push
fcomip
out
mov
outsb
pop
das
lods
jl
jae
lds
aas
dec
or
fcmovne
xchg
pop
pop
mov
je
outsl
or
cwtl
repz
add
jmp
dec
in
push
ret
pop
out
inc
dec
mov
and
mov
clc
sbb
lahf
cmpsl
or
adc
jg
sbb
dec
das
adc
sub
imul
jns
pinsrw
icebp
mov
pop
in
xor
iret
loopne
scas
mov
lret
test
fisubs
out
int3
stos
jle
adc
ficompl
mov
call
nop
push
decl
iret
mov
jno
hlt
sub
jbe
outsl
das
dec
push
adc
push
mov
push
mov
cmpsl
les
push
fmuls
bound
cs
bound
rcrb
sub
mov
jmp
popa
movsb
xorl
out
mov
arpl
imul
sub
dec
dec
int3
mov
dec
aam
mov
xor
dec
sub
pop
aad
jge
pop
test
jmp
in
sbb
push
cltd
xlat
pushf
cmp
lods
fstpl
mov
mov
icebp
imul
push
push
or
aas
cmp
cmp
cli
xchg
lahf
out
mov
ret
xchg
push
jge
xchg
mov
fdivl
add
inc
movsb
pop
loope
push
mov
xchg
xchg
cmp
out
jns
cvttps2pi
or
inc
rol
pusha
out
xor
sbb
ljmp
mov
bound
fmuls
mov
int3
xchg
lret
push
or
in
or
push
and
inc
addb
test
mov
rcrb
dec
fdivrl
xor
sbb
xor
cmp
xor
pop
and
push
and
xchg
les
jg
add
sbb
jb
movsl
fwait
inc
lret
lods
add
push
add
jge
cmp
fiadds
ja
lods
adc
or
rcrb
xchg
or
inc
loopne
jnp
in
aad
mov
fcomi
cmp
and
adc
in
and
cmp
vpsraw
addr16
mov
pop
mov
test
pop
cmp
cmp
xlat
sbb
inc
adc
std
mov
mov
xor
dec
fdivrl
loopne
cmc
popa
dec
push
mov
adc
mov
xor
sub
push
jnp
ds
xchg
adc
mov
std
pop
push
inc
fcom
mov
mov
cmpb
mov
mov
leave
sbb
test
cmpl
inc
inc
clc
das
fwait
jns
xor
mov
lret
xor
mov
jg
out
xor
out
mov
inc
xchg
dec
inc
mov
sbb
xchg
pop
lcall
icebp
sub
int3
cmc
push
jb
sbb
inc
sarb
mov
mov
mov
fucomi
fiaddl
cs
mov
add
dec
ja
mov
into
xchg
leave
bound
dec
ds
gs
shlb
mov
xchg
rorl
outsb
cmpsb
call
pop
movsl
mov
or
push
pop
fldl
jo
xor
push
stos
icebp
xchg
adc
lods
xor
dec
aad
push
shrl
popf
xchg
cs
jns
mov
push
test
push
jge
mov
fs
cmp
xchg
leave
outsw
ljmp
in
xorb
je
scas
push
fsubrl
test
sbb
sbb
cmp
loop
pop
mov
adc
cmp
loop
fimull
loope
mov
and
or
imul
jae
sub
mov
into
mov
or
jle
insb
int
movsl
jnp
scas
std
xchg
or
xchg
xchg
pop
imul
fst
pushl
insb
jl
mov
push
sbb
fcompl
push
xor
mov
push
inc
pop
lock
lds
rclb
sub
lods
pushf
add
push
or
sbb
sub
addl
and
xor
push
in
xor
insl
jns
push
lds
incb
fcmovne
sbb
cmp
mov
fistl
data16
enter
mov
jle
jb
xchg
shll
jae
movsl
or
std
popa
or
aas
ret
and
inc
test
divl
or
insb
push
add
enter
cwtl
in
pusha
icebp
das
mov
jle
dec
inc
into
cltd
dec
sti
push
loopne
jno
ja
sahf
fnstcw
movsb
mov
jp
aaa
jbe
test
pop
inc
lahf
push
mov
sbb
jl
push
clc
cmp
das
sbb
push
sbb
and
adc
mov
dec
mov
insl
sub
mov
insl
sbb
mov
mov
lcall
xlat
mov
push
in
and
mov
sbb
mov
and
xorl
cmp
pop
pop
jp
pop
scas
mov
fildl
movsl
lock
shl
scas
fmuls
dec
dec
out
call
adc
out
cmp
js
sub
xchg
cmp
das
mov
ret
cwtl
xchg
ds
cmpsb
pop
shlb
pop
shlb
sub
js
dec
mov
das
fnstcw
movsl
add
mov
imul
dec
repz
xlat
inc
or
pop
jg
out
mov
mov
pop
and
jbe
jbe
aas
dec
je
hlt
scas
sub
dec
and
mov
push
push
fwait
popf
icebp
cs
jbe
jmp
jl
lods
sarb
rclb
pop
inc
ficoms
push
cld
cld
rorb
push
addb
addl
jb
mov
pop
js
rcll
inc
sbb
rcrb
jle
add
pop
popf
add
mov
dec
cmpsl
sbb
outsl
test
jge
enter
jo
cmpb
xchg
mov
fadd
aaa
daa
lcall
xchg
ja
xchg
sbb
add
std
pop
lret
add
into
inc
cltd
mov
push
sub
sub
popf
add
daa
cmp
mov
outsl
xchg
cli
ss
in
pop
inc
xor
xor
cltd
or
push
mov
daa
data16
inc
jnp
pusha
ljmp
inc
inc
dec
push
inc
call
xchg
push
inc
inc
jo
push
popa
xchg
scas
mov
cmc
dec
std
call
dec
out
inc
sub
mul
lods
testl
jne
lahf
push
mov
mov
jle
pushf
divl
sbbb
ret
test
leave
fisttpll
cmc
push
xchg
cld
push
pop
xchg
cwtl
jle
xor
pop
jb
cwtl
insl
sbb
xchg
addl
sbb
je
add
cmp
cwtl
sbb
and
mov
mov
cmp
push
xchg
mov
push
add
add
pushf
mov
scas
sbb
xor
adc
fstps
test
popa
inc
and
push
mov
and
xor
fdivr
fisttps
cwtl
or
mov
loopne
and
hlt
adcb
and
addl
adc
push
push
arpl
out
push
or
in
push
addr16
fists
insb
pop
testl
add
iret
adc
sub
daa
scas
push
call
add
add
mov
jns
sbb
jae
dec
movsl
jne
sahf
and
lods
mov
pop
xchg
cli
cmp
xchg
dec
mov
pop
nop
out
sbb
cmpsl
dec
clc
sbb
jnp
sub
inc
sbb
xchg
popa
sbb
push
negl
dec
mov
and
in
mov
mov
hlt
into
enter
sub
push
jae
xchg
mov
add
orl
xor
pop
cli
sub
fsubrs
mov
sti
and
mov
mov
add
lods
js
fstpt
lret
mov
xchg
and
shrb
push
mov
and
into
sub
call
push
mov
rcll
rol
add
sar
inc
dec
mov
xlat
xchg
xchg
inc
and
and
mov
mov
in
pop
cmpsl
std
int3
sbb
pop
iret
mov
dec
xor
jge
sub
xchg
mov
iret
ret
xorb
or
pop
mov
sti
dec
xor
out
mov
jmp
jge
cmpsl
aam
jno
and
adc
jo
fstl
pop
les
or
and
or
loopne
cmc
and
and
jmp
fdivl
inc
add
popa
xchg
aas
pop
cwtl
in
ret
test
ljmp
test
pop
xchg
sub
dec
adc
push
or
pop
fucom
iret
mov
mov
mov
mov
jo
out
popf
lods
mov
sub
cmpsb
cmp
rcrb
pop
aas
clc
jns
pop
push
push
js
fmull
popf
jb
jo
cmp
out
mov
test
lahf
push
stos
mov
rol
cltd
movsb
add
stos
sub
xchg
pop
in
or
push
inc
mov
rcl
jle
push
jl
scas
jbe
jno
cmc
fisubl
mov
das
adc
sbb
inc
lahf
stos
or
jnp
fwait
mov
mov
cmpsb
fcomps
and
pop
lods
test
std
test
rcrb
dec
test
inc
insb
popa
ds
leave
cmp
sbb
js
test
mov
fistpl
leave
jbe
stc
jb
stc
and
scas
call
ret
cmpsb
stos
sub
lret
dec
and
fsubl
adc
or
inc
add
pop
dec
xor
pop
lea
adc
fildl
jmp
push
jp
push
out
dec
jg
pop
and
push
loopne
mov
test
mov
or
insb
aas
xor
sub
sbb
mov
loop
aam
bound
and
nop
out
push
fcom
mov
lret
cwtl
sub
gs
lret
fcompl
loopne
adc
adc
movsl
and
negb
int3
sbb
pop
xchg
sahf
cmpsb
iret
mov
mov
xchg
sbb
sahf
pop
imul
add
call
clc
stos
mov
std
imull
sub
into
mov
inc
pop
push
or
or
ss
sub
shll
cltd
add
push
inc
in
adc
rclb
adc
dec
lds
insl
into
stc
mov
inc
adc
xor
cmp
push
add
add
add
pop
push
dec
and
out
dec
push
fcomip
mov
mov
adc
lods
loop
gs
inc
mov
out
or
sti
sbb
jg
pop
addr16
push
mov
mov
add
inc
roll
pop
xor
fcoml
notl
push
les
cmp
mov
rcll
push
scas
fldcw
ds
mov
mov
lret
lahf
loope
lods
mov
xlat
xchg
pop
lea
lods
sbb
orl
add
jo
cmp
mov
ljmp
hlt
mov
addb
mov
test
dec
daa
repz
mov
fisttpll
iret
add
or
scas
cmp
jmp
das
adc
cli
xchg
xor
sub
cmp
sbb
adc
shll
push
jb
ds
cwtl
adc
fistps
sbb
and
ss
adc
rorb
and
repnz
mov
aas
dec
mov
cmpb
outsb
das
cmpsl
lea
jo
imul
lcall
outsb
pop
mov
mov
jp
lds
shll
adc
cs
cs
push
xchg
mov
fnstsw
test
nop
cmp
mov
mov
xchg
push
cwtl
sbb
les
clc
lret
jmp
mov
pcmpeqd
data16
mov
sub
fdivrp
sarl
lods
dec
subb
stc
repz
cwtl
push
imul
movsl
pop
bnd
mov
js
xor
xlat
shlb
adc
pop
pushf
inc
adc
push
fcomip
add
xchg
pop
push
out
push
jo
jge
and
rolb
mov
out
aad
xchg
dec
mov
push
sbb
lahf
mov
push
scas
mov
or
rcl
lods
and
ja
inc
cmpsl
add
insl
cli
bound
hlt
adc
arpl
outsl
dec
sbb
xor
mov
xchg
outsb
sbbb
popf
mov
outsb
jle
aaa
adc
in
lcall
inc
mov
ljmp
cmc
sbb
arpl
push
repnz
xor
in
xlat
dec
pop
xlat
mov
inc
out
jne
sub
mov
mov
inc
sub
xor
test
cmp
icebp
aaa
and
jp
push
inc
dec
push
clc
jge
and
cs
and
mov
fwait
push
stc
mov
inc
scas
push
push
mov
es
out
jbe
sub
pop
push
sub
jg
mov
mov
loope
xchg
xor
fwait
pop
stos
inc
ror
push
stc
lods
or
ret
adc
loop
inc
int
sub
sbb
dec
jl
mov
call
aam
cmpl
xlat
stc
inc
popf
in
icebp
and
push
push
out
cmp
or
mov
cmpsb
adc
and
xchg
fs
imul
mov
bound
imul
jb
and
fwait
test
dec
in
xchg
xor
or
adc
fstpl
stos
out
mov
mov
jnp
xchg
mov
aad
sub
add
push
adc
movl
loop
aam
pop
pop
scas
cmp
cmpl
shlb
outsb
pop
clc
xor
test
and
mov
jno
add
cwtl
adc
sub
icebp
push
lods
std
repnz
scas
xchg
stc
jl
dec
in
lret
mov
and
cmp
int
shrl
shrb
and
jmp
fidivs
add
lods
fcoms
dec
or
jge
push
inc
xchg
sahf
loopew
pop
lahf
fisubs
xchg
cmp
fbstp
test
xor
addr16
xorl
dec
push
notb
mov
mov
sbb
aas
icebp
ljmp
movsb
fcompl
sbb
mov
mov
or
mov
movsb
repz
in
fucomi
inc
pop
insl
and
loop
stc
inc
xlat
adc
daa
sub
dec
lcall
test
sbb
inc
add
mov
jo
mov
out
add
push
inc
cmp
adc
push
lds
mov
mov
push
in
jno
ret
dec
sub
loopne
ret
mov
lods
dec
cmp
in
loop
sub
rolb
imul
push
inc
stos
ror
push
ss
cmp
outsb
pop
push
gs
fwait
push
into
mov
loope
lret
ret
mov
scas
push
jmp
ds
pop
arpl
test
mov
or
and
mov
jo
rcl
mov
clc
sbb
jno
test
or
pop
sub
pop
notl
sub
shl
pop
pextrw
cmp
stc
adc
outsl
pop
les
xor
int3
stc
sahf
call
fsubl
or
pop
mov
cmpsb
lahf
rcll
shr
adc
call
loopne
cwtl
xor
dec
out
sbb
aad
out
sbb
dec
gs
test
mov
cwtl
jp
adc
add
dec
out
jno
ja
sub
out
outsb
pop
mov
mov
loop
aad
mov
ja
sti
or
mov
jp
or
jl
or
arpl
jecxz
loopne
pop
out
and
es
aaa
jns
dec
mov
mov
pop
inc
shll
addb
push
sti
pushf
push
mov
cmp
adc
cltd
stos
iret
xchg
sbb
clc
or
lcall
mov
and
addr16
cmp
sub
pop
in
cld
mov
sub
in
subl
into
arpl
jl
and
int
aaa
sub
pop
aam
jl
push
int3
jmp
cmp
jl
outsl
xchg
repnz
das
or
mov
push
xchg
add
mov
sbb
test
hlt
in
call
fidivrs
mov
shr
inc
repnz
in
lds
fxch
sarl
push
imulb
ss
mov
loope
clc
pop
mov
jb
pop
fisubl
mov
add
inc
decb
cmp
divps
repz
and
enter
leave
pop
popa
lock
and
mov
jmp
pop
ljmp
sbb
jae
popf
and
xchg
enter
repz
int
sarl
adc
push
sbb
sbb
scas
cmp
and
pop
fsubl
and
mov
dec
shlb
mov
xchg
push
jo
adc
jnp
out
lock
xchg
xchg
lock
add
mov
dec
ret
cmp
je
filds
mov
div
andb
xor
fsubrs
int
mov
sti
jp
jne
sti
push
pop
inc
insl
xchg
adc
pop
xchg
push
stos
fcoms
clc
out
roll
in
push
rcrb
ficomps
and
push
fdivrs
add
js
or
cli
mov
dec
rcrl
mov
mov
dec
sbbl
adc
push
pop
ja
loope
sbb
insb
cmpsb
pop
aas
cwtl
scas
cmp
roll
dec
ret
adc
lock
test
outsb
push
lock
adcl
pusha
ss
xchg
pop
pusha
cmp
jbe
and
dec
push
jb
jg
mov
push
mov
daa
jns
pop
stos
sub
aam
aaa
mov
lcall
jnp
repnz
cli
aaa
or
daa
stos
aas
das
mov
xor
pop
loope
testl
sub
push
push
mov
out
aas
or
int
bound
dec
jae
pop
push
inc
cmp
lea
cld
cmpsb
mov
or
es
lds
gs
out
pushw
pop
int
cmpsb
repnz
repz
cmp
xchg
addl
test
xor
in
mov
xlat
rorb
in
ret
hlt
sbb
jb
xchg
cs
fcoms
xchg
mov
dec
inc
push
jns
push
shr
fistps
pusha
inc
jg
mov
pop
mov
xchg
testl
push
movsl
add
fstl
rol
pop
test
cltd
sub
mov
and
popl
loope
std
in
repnz
lds
clc
ss
aaa
or
mov
mov
xchg
out
mov
inc
rcr
ret
inc
cs
mov
inc
push
adc
inc
dec
or
xchg
fucomip
cmp
dec
sbb
int
fs
jnp
pop
sub
dec
xchg
cmpsl
filds
mov
jmp
out
fmul
mov
xchg
outsl
mov
ljmp
and
mov
xchg
or
fsub
in
sub
data16
lods
sbb
xchg
ja
fwait
push
pushl
mov
jbe
imull
insb
mov
pop
in
sub
jb
sahf
fsts
mov
adc
in
iret
popf
mov
scas
pop
push
mov
inc
dec
jnp
movsb
lods
loop
mov
std
and
cmp
cmpps
das
push
xchg
mov
repnz
test
mov
test
outsl
movsl
sub
pop
shlb
das
outsb
in
fstps
enter
int3
test
push
inc
add
lock
call
push
push
jbe
adc
or
icebp
jle
fbstp
andl
jnp
movsb
and
sar
add
out
jecxz
cs
aad
and
ret
and
xor
shl
nop
jns
adc
sub
call
xchg
mov
push
lea
sbb
repnz
mov
cmp
cmp
divl
sahf
adc
js
lret
cwtl
mov
ficoms
imul
jmp
mov
stos
testb
sub
pusha
loop
xor
push
push
inc
or
or
loop
mov
mov
jne
mov
insb
xchg
mov
jp
dec
stc
icebp
dec
lds
jns
fmuls
in
repnz
repz
repz
in
aam
stc
mov
mov
xchg
push
adc
adc
pop
std
jo
call
and
into
and
jnp
and
pop
shlb
jle
inc
adc
sti
mov
imul
mov
sub
xor
in
mov
aas
sub
notl
shrb
test
test
cli
mov
cmp
mov
jecxz
ja
inc
push
push
cmpsl
xor
mov
cmp
jmp
mov
xor
ljmp
dec
cmp
adc
mov
push
ja
in
into
popf
lcall
mov
sbb
ret
adc
push
jno
pop
mov
mov
movsb
or
lret
negb
iret
mov
lds
pusha
mov
xchg
lret
push
out
dec
loopne
sti
rcrl
mov
icebp
inc
popf
aad
dec
push
pop
or
scas
add
dec
sbb
jmp
clc
push
loopne
test
outsl
adc
and
push
lods
sbb
cmpsl
xor
enter
loopne
add
xchg
lahf
cmc
inc
fs
jecxz
push
popa
sbb
adc
xchg
dec
imul
movsl
out
or
test
xchg
mov
ret
adc
add
add
mov
je
jo
enter
inc
insb
aas
test
and
stc
mov
sub
out
int
in
cwtl
and
adcl
cmp
pusha
dec
test
arpl
inc
std
ljmp
daa
dec
adc
test
mov
mov
dec
mov
pop
mov
adc
cmp
mov
adc
inc
out
gs
xor
in
adcl
cs
sub
in
jge
lods
cltd
add
sbbl
jmp
mov
mov
push
pop
das
fucomip
out
xor
das
adc
mov
in
popf
sbb
mov
and
push
hlt
push
sbb
or
negb
mov
push
jecxz
cld
in
adc
lcall
vsubpd
add
xchg
push
push
pushf
push
sbb
mov
lret
cmp
sub
mov
xor
movsb
jl
js
fs
sub
and
push
pop
adc
and
testb
cli
and
in
and
sti
adc
xorl
loope
dec
hlt
mov
and
push
ljmp
addr16
ljmp
ljmp
shlb
jns
sub
psrlq
mov
cs
push
addl
cmp
inc
gs
push
ret
pop
hlt
xchg
adc
test
daa
into
sbb
jno
xchg
stc
sbb
pop
dec
stos
jne
icebp
mov
xchg
dec
add
inc
push
loop
jne
cmpsl
jns
jns
and
popf
dec
ds
movsl
scas
or
cli
mov
or
inc
ss
cmp
jno
xchg
inc
movsb
das
outsl
lret
cltd
add
mov
mov
inc
test
es
pop
icebp
sub
aaa
pop
pop
fidivrs
sahf
mov
enter
clc
sub
test
sti
jnp
mov
andb
inc
cmp
cli
mov
popa
push
xchg
push
xor
jbe
subl
lret
loope
testl
fwait
loopne
mov
andl
cli
aam
mov
and
mov
sahf
les
bound
jl
addl
aad
mov
lret
lcall
adc
scas
notb
mov
cltd
jns
cmp
add
pop
mov
xchg
pop
add
xchg
js
es
sub
int
dec
clc
push
or
fwait
shll
stos
js,pn
lret
pop
cltd
mov
mov
jg
jbe
sub
in
mov
push
cmpsl
lock
dec
aaa
loop
push
imul
inc
push
es
add
icebp
sbb
std
inc
lret
dec
adc
jmp
push
test
stos
scas
xor
dec
jle
scas
mov
adc
push
ds
ljmp
imul
sub
in
stos
dec
sbb
adc
and
ljmp
sub
mov
test
negl
add
dec
and
dec
sbb
data16
in
jns
inc
inc
inc
aad
mov
pop
in
add
and
fsts
xchg
pop
or
inc
inc
das
mov
stos
cmp
shll
cld
pop
bound
adc
inc
or
insl
mov
jns
stos
inc
mov
das
int
lret
mov
cs
pushf
jne
xor
popa
out
mov
test
inc
sub
mov
pop
jecxz
or
mov
bound
add
and
imul
movsl
js
lods
aaa
xorb
xorb
dec
xlat
scas
and
je
lds
loopne
daa
andl
add
cwtl
pop
pop
xor
sbb
int
pop
xor
or
stc
mov
arpl
or
xchg
dec
into
xchg
rcrb
xchg
mov
pop
dec
or
std
in
dec
lods
out
mov
push
push
loope
mov
leave
add
mov
jnp
daa
mov
add
dec
inc
ret
lret
roll
test
imul
inc
jecxz
clc
lret
mov
mov
pop
roll
and
popf
pop
sub
jp
pusha
inc
lea
add
sti
mov
in
cwtl
pop
xchg
mov
pusha
cmp
xor
pushw
adc
mov
inc
jo
imul
adc
inc
fiaddl
test
jg
lret
fcomps
lahf
jno
and
or
iret
dec
ja
movb
mov
pop
and
bound
push
inc
shrb
cmp
sub
dec
push
and
ficomps
lahf
and
xlat
and
push
iret
mov
push
scas
jno
sahf
fisubs
push
sbb
inc
cltd
or
pop
cs
std
inc
inc
jae
mov
out
push
repnz
and
adc
jp
push
mov
lret
and
cmp
jb
lret
mov
out
mov
mov
xchg
cwtl
lret
mov
xor
pop
adc
data16
or
lods
xor
jbe
jl
movsl
push
mov
fisubs
jp
in
push
xchg
lret
cmp
aad
sub
xor
sub
gs
dec
sbbl
bound
xchg
xor
jmp
ds
xchg
fwait
cmp
mov
sti
pop
mov
dec
dec
shl
xlat
cmc
pop
ret
sbb
insb
sub
jb
stos
rcll
add
pop
out
mov
sub
add
and
jae
mov
or
cwtl
inc
pusha
ja
jno
stos
pop
cmp
dec
jbe
fsub
mov
dec
add
pop
mov
pop
out
mov
pop
or
cmpsl
arpl
stos
insl
add
add
mov
fsubrs
fisubl
mov
lcall
push
sbb
cwtl
lret
mov
imul
loope
mov
push
push
movsl
sub
popf
in
cwtl
mov
or
xor
cmp
mov
cmp
sub
out
pop
imul
push
imull
mov
xchg
cmp
fists
push
xchg
cwtl
fnstcw
mov
loopne
adc
adc
rcll
bound
dec
ja,pt
in
sbb
shll
mov
adc
jmp
int3
js
test
arpl
shr
xchg
sub
push
ja
mov
jns,pt
cli
inc
dec
orl
jecxz
mov
sbb
cld
lds
lret
icebp
or
sarb
fidivrl
xchg
sub
out
fwait
mov
cmpb
fimuls
push
cwtl
decl
test
loop
cmc
add
into
cmpsb
jbe
out
loopne
pop
inc
jae
ljmp
jo
mov
adc
scas
add
mov
or
xchg
add
repnz
out
inc
ds
fisubrs
cld
js
jns
iret
or
call
outsb
repnz
xorl
iret
pusha
mov
inc
push
or
aad
test
xchg
jnp
mov
std
add
stos
adc
xchg
sbb
adc
xor
popf
mov
cmp
ficoml
push
or
stos
push
dec
mov
xchg
lcall
mov
sub
cltd
add
repnz
pushf
push
cmpsb
call
test
repnz
cmp
ret
mov
lds
fldt
cmpsb
inc
inc
and
adc
push
movb
sbb
nop
cmp
mov
in
sti
roll
lods
jbe
insb
shll
das
cmp
inc
inc
jns
pop
ja
ftst
push
sbb
xchg
sbb
das
pop
and
push
cmp
xlat
out
aaa
rcll
jmp
pop
and
push
xchg
xchg
xchg
pop
adc
stc
sbb
mov
inc
stos
cmp
or
inc
xchg
out
imul
adc
ret
fldt
out
mov
adc
or
jns
jg
mov
jmp
pop
mov
mov
in
jns
jmp
movsb
int3
adc
aaa
and
in
jne
mov
mov
nop
sahf
idiv
lahf
ds
cmp
add
out
hlt
popa
add
imul
mov
imul
inc
xchg
sahf
adc
xor
dec
mov
js
and
dec
lock
mov
sahf
mov
imul
inc
imul
lret
lock
cld
test
or
and
xor
clc
lret
push
mov
pop
xor
mov
mov
mov
inc
push
enter
xchg
jecxz
dec
xor
sub
aas
sub
inc
pushf
inc
or
mov
movsl
or
cmc
fstpl
iret
xor
call
popa
mov
or
mov
xor
loopne
xchg
test
es
int
mov
sub
lds
inc
dec
add
xchg
mov
push
adc
test
pop
push
lret
dec
cmp
push
arpl
gs
mov
sbb
push
add
add
xchg
test
and
jne
stos
mov
mov
out
sahf
loopne
cld
imul
jle
out
push
xchg
jecxz
cli
mov
inc
sti
jp
aad
int
dec
pop
ja
xchg
or
xor
mov
cmp
xchg
gs
jge
adc
push
jb
outsl
sub
push
inc
imul
sub
and
lahf
lret
jno
fcompl
push
sbb
xchg
dec
in
cwtl
adc
jae
scas
lret
and
ja
xor
xor
adcl
bndldx
cwtl
btc
jbe
ret
pushf
rol
repz
call
xchg
aas
fbstp
stos
imul
mov
loop
xor
sbb
js
lds
les
xchg
push
adc
int
imul
jb
aad
mov
incl
push
data16
pop
jp
xchg
ret
and
and
lds
add
lret
or
addb
jne
shr
shl
cmp
addr16
rol
int3
int
mov
insb
outsl
pop
mov
pop
rcll
fidivs
xchg
ljmp
mov
outsb
mov
sbb
sbb
inc
fstpt
xchg
int
lcall
lea
sahf
daa
mov
movsl
mov
cmp
ljmp
mov
push
jl
mov
xchg
roll
mov
leave
test
lea
mov
je
push
cltd
mov
insb
add
jae
and
rolb
in
pop
gs
dec
pop
jmp
shll
outsb
fidivrs
cmp
ss
andps
aad
cmp
lods
aas
mov
jl
mov
mov
jnp
icebp
push
jne
insb
inc
sub
movsb
push
aaa
stos
jo
popa
mov
jle
fs
cmp
sub
stos
ret
xor
mov
jg
mov
addl
push
rcr
sti
test
lds
dec
cmpsb
sub
dec
repz
gs
mov
sbb
lds
push
and
jae
push
int
and
ret
in
lods
fucom
dec
pop
adc
mov
cmp
pop
or
stos
daa
inc
inc
outsl
iret
fdivl
and
imul
lods
dec
push
xorl
and
xchg
add
dec
mov
cmovo
add
mov
lods
fdivs
pop
les
mov
clc
jo
outsb
xor
adc
mov
ds
mov
sar
mov
enter
inc
in
jo
fwait
les
les
cmp
pop
dec
xchg
frstor
xchg
in
hlt
mov
sub
or
loop
shlb
in
je
sahf
or
fs
and
and
jmp
adc
call
andb
push
sbb
insl
cmpsb
push
jg
or
inc
mov
fiaddl
aas
pushf
addr16
lret
les
sub
push
shlb
loope
jmp
or
in
fnsave
aad
pop
loop
out
mov
dec
jmp
cli
sbb
xchg
shrl
nop
or
or
into
pop
enter
inc
add
and
int
push
lahf
in
imulb
je
loope
or
inc
mov
push
mov
jo
mov
test
or
cmc
arpl
test
mov
sub
adc
mov
and
test
and
mov
popa
fidivs
loope
inc
imul
in
test
mov
mov
addr16
mov
inc
jge
fldcw
sub
dec
jle
pop
add
jle
adc
ret
test
mov
jg
daa
test
test
cmp
je
loopne
jae
orl
sub
jno
and
add
cmp
push
cmp
dec
mov
dec
mov
and
arpl
sti
xor
cmp
inc
xor
jmp
jmp
addr16
push
adc
loopne
int
and
dec
stos
stos
mov
cmp
mul
in
xchg
inc
jl
add
mov
shrb
shl
stc
addb
mov
jb
pop
insb
sbb
inc
pushf
mov
mov
mov
mov
xor
sub
push
lret
mov
xchg
ja
inc
add
pop
jae
gs
mov
sbb
sbb
and
jnp
insb
sub
xor
pop
push
imul
in
pop
mov
xor
insl
mov
sbb
andb
imul
imul
sbb
and
pop
test
addr16
ja
fstps
movsb
fimull
sti
xor
ret
mov
xor
xchg
mov
push
mov
movsl
xchg
into
add
out
jp
lods
fiaddl
dec
out
ss
movsl
cmc
xor
jo
sbb
shll
test
aaa
pop
iret
imul
mov
xchg
hlt
pop
push
jmp
fdivr
adc
cld
jp
mov
mov
and
idivb
orb
jle
insb
sbb
out
inc
push
les
mov
js
dec
mov
ret
or
mov
fs
idivb
jo
push
cmp
lahf
push
cmp
out
inc
inc
jns
xchg
sub
jne
cmp
or
cli
mov
or
enter
loopne
sub
cld
dec
xor
inc
insl
pop
loope
pushf
insb
mov
mov
xchg
mov
pop
push
xchg
repz
cmpsb
mov
jge
pushf
jge
adc
shl
test
push
lods
imul
mov
cwtl
inc
cltd
or
int
jae
in
lds
mov
test
addr16
popa
mov
lcall
mov
cwtl
lret
mov
dec
mov
js
pop
pop
mov
js
xchg
lea
shrl
cmpsl
jbe
ret
imul
mov
mov
mov
push
jecxz
sti
hlt
fdivs
out
jno
or
sbb
gs
sarl
push
mov
aaa
mov
mov
ret
mov
xchg
ror
inc
adc
inc
stc
fistl
xor
jmp
xchg
and
xlat
inc
mov
stos
mov
dec
mov
sbb
or
xor
scas
pop
xchg
add
sub
in
xor
add
call
cli
mov
fwait
data16
xor
aam
mov
outsb
jle
jmp
ja
call
jb
out
mov
xchg
jle
in
push
lret
ljmp
sub
cmp
lahf
xor
fsubrs
push
fs
setnp
mov
push
mov
cmp
jnp
pushf
lcall
ret
xchg
shll
adc
mov
shrb
xchg
fisubs
add
cwtl
lahf
or
ficoms
xchg
cmp
je
jle
mul
xchg
jmp
push
pop
cltd
mov
mov
shl
lods
mov
jmp
popf
pop
dec
or
rolb
mov
dec
lcall
sbb
dec
fwait
push
add
iret
lret
out
inc
movl
mov
rorb
jl
addl
scas
xlat
cmp
mov
pop
cmp
or
sub
mov
scas
and
or
inc
jecxz
leave
mov
cmp
push
cwtl
or
outsb
pop
in
mov
and
mov
add
xor
fists
xchg
xchg
aaa
sub
aad
jle
mov
mov
dec
pop
jbe
cmovbe
jnp
pop
mov
inc
loopne
ds
pop
cld
repnz
pushf
dec
out
sub
add
xchg
dec
leave
jne
mov
andb
cltd
mov
mov
out
cmp
imul
test
jo
sub
mov
dec
scas
jle
pop
or
mov
sub
push
icebp
pop
loopne,pn
sbb
es
sub
xor
pop
adcb
pop
push
xchg
stc
or
pop
out
add
stos
dec
and
or
xchg
mov
stos
fld
jmp
ffree
or
xchg
cmpsl
dec
jmp
popa
roll
aam
daa
call
mov
test
cmpsb
ja
sarb
jnp
out
or
dec
fidivs
cmpsl
out
out
mov
sbb
jecxz
dec
inc
jnp
outsb
inc
inc
jno
dec
adc
inc
lock
mov
test
out
ljmp
in
dec
jae
push
cmp
lahf
clc
mov
cmp
and
fidivrs
xchg
or
ja
jo
scas
sti
scas
lods
enter
test
out
xor
and
mov
xor
test
in
mov
adc
cmp
loopne
or
xchg
int3
xlat
cmp
loop
adc
jmp
pop
pushf
mov
into
div
fdivs
lea
mov
xor
stos
xchg
hlt
add
stos
cmp
jae
int3
mov
popa
cmp
outsb
inc
aad
sub
std
jno
cmp
outsl
pop
fistpll
jge
icebp
pop
mov
add
sub
push
out
or
es
fpatan
das
fiaddl
aas
loop
pop
pop
add
mov
out
inc
push
mov
add
mov
cmc
mov
data16
fcmove
and
jp
jp
cmp
adc
adc
inc
fidivrs
loopne
pop
and
lods
cmp
adc
jae
sub
xor
xor
movsl
mov
jg
cmp
icebp
out
cmp
fnstenv
xchg
mov
jmp
sub
in
mov
out
push
mov
cld
mov
in
nop
sbb
jo
dec
scas
jecxz
stos
sub
and
jnp
es
cmc
outsl
add
loope
fmull
lods
cmp
fidivl
andl
incb
and
dec
xor
jae
ds
shl
pop
jo
and
sar
and
ret
jne
lock
decb
cwtl
xchg
xor
test
push
hlt
mov
mov
jnp
call
int3
push
shll
inc
jae
test
xor
xchg
ret
outsb
shrb
rorb
ljmp
jno
or
jae
mov
push
insb
jg
das
rorb
lret
lahf
jecxz
inc
push
cmp
push
ljmp
mov
jge
xchg
icebp
dec
jo
adc
addr16
test
jl
jmp
or
cmp
test
jo
imul
mov
popa
test
jge
xchg
outsl
int3
shrb
mov
lahf
inc
push
mov
js
xor
lods
sbb
enter
adc
rorb
scas
frstor
mov
push
jg
dec
lds
insb
pop
xchg
fs
dec
fbld
cmp
mov
add
popf
jp
loop
xchg
mov
sbb
jecxz
test
dec
lcall
outsb
mov
das
pop
mov
cmc
cmc
cmpsl
jno
lock
subl
lods
jns
lcall
jb
in
dec
stos
jle
pusha
mov
mov
jmp
jmp
movsb
jo
xchg
scas
jmp
pop
idiv
or
pop
xchg
outsb
mov
push
in
repnz
and
cld
insl
cli
aaa
hlt
mov
jae
jne
mov
cmp
arpl
bnd
fists
sub
adc
jbe
in
mov
in
jp
daa
dec
iret
pop
sbb
adc
add
iret
jg
jmp
mov
and
and
pop
xchg
int3
push
xchg
addb
addr16
clc
dec
push
jb
jo
insb
or
repnz
neg
cmp
add
mov
lock
in
and
jno
cmc
mov
mov
and
loopne
setns
mov
pop
pop
loop
lock
mov
cmpsl
pop
out
icebp
call
mov
out
or
mov
clc
push
mov
loopne
aad
mov
in
ret
or
repnz
sub
or
or
xchg
xor
cli
sub
sub
jno
loopne
xor
adc
pop
or
ffree
scas
sbb
jg
push
mov
push
mov
adc
mov
jge
pop
inc
mul
andb
jno
push
dec
push
and
jp
sub
jp
movb
enter
hlt
mov
std
enter
sbb
scas
clc
jp
sbb
in
ss
jle
fwait
pop
sub
inc
push
cmp
adc
test
test
imul
dec
stos
jg
sub
hlt
xor
cmc
jae
test
mov
or
call
adcl
cmp
pop
cmp
inc
sub
or
jae
xchg
leave
sub
sub
sbb
xchg
mov
jge
mov
or
ds
dec
mov
inc
pop
lcall
inc
and
ss
mov
imul
mov
outsb
sub
mov
fiadds
ljmp
lods
inc
dec
or
and
dec
xchg
imul
flds
loope
xchg
loope
and
push
xchg
in
cmp
push
push
addb
mov
mov
cmpsb
inc
sbb
fs
popa
pop
jp
out
popf
aam
pusha
sub
iret
pop
dec
je
inc
subl
and
outsl
or
adc
imul
call
imul
mov
fld
xor
rcrb
jle
xchg
cmpsb
mov
repz
mov
and
xor
cmpsl
dec
test
fidivrl
mov
jbe
push
add
insb
inc
movsb
jecxz
les
cmp
cmpsb
ret
inc
jl
mov
icebp
rcl
adc
mov
hlt
outsb
roll
jns
push
loope
pusha
int
xchg
dec
and
dec
cmp
cmp
pop
ret
negb
pop
sahf
and
bound
cmp
push
lret
dec
jp
lahf
bound
push
faddl
data16
hlt
push
fildl
add
add
pusha
cwtl
xchg
mov
idivl
insb
xor
pop
clc
pushf
adc
pop
lea
pop
add
inc
call
mov
or
sbb
shlb
clc
insl
in
aam
adc
and
mov
add
es
loopne
xor
in
rcrb
dec
lret
stos
imul
rclb
lahf
adcl
cmc
jbe
pop
sub
out
inc
into
in
sbb
or
jle
dec
cmp
inc
inc
push
mov
and
mov
iret
push
call
push
mov
in
sub
das
arpl
in
add
or
cltd
fwait
lcall
fistl
or
ljmp
mov
dec
les
jmp
dec
or
pop
add
lcall
pop
lcall
pop
iret
or
idivb
cmpsb
outsl
xor
xor
xchg
fwait
mov
jecxz
mov
scas
lcall
scas
jg
cmp
inc
out
push
outsl
xchg
mov
scas
dec
int
popf
push
in
mov
dec
sub
sbb
pop
jo
sbb
out
into
pop
mov
ss
push
mov
imul
mul
cmp
jl
in
in
fwait
inc
hlt
add
stc
mov
adcb
fcmovu
add
addr16
pushf
mov
stos
mov
shr
in
lcall
mov
push
ljmp
cli
and
dec
cmpsl
test
xchg
add
mov
jge
mov
repz
dec
lods
xlat
ss
popf
into
lret
div
stos
xchg
xlat
xor
jne
pop
test
cmp
xchg
addr16
mov
mov
lods
pop
js
pop
add
in
bound
cmp
push
fnstenv
addb
enter
notl
push
sub
sbb
jp
cmpsb
push
addb
icebp
jno
subb
pop
and
lcall
popf
pop
test
test
clc
push
das
lea
jb
add
jmp
lcall
push
sti
push
fistps
test
iret
ret
xchg
sbb
jge
xor
test
orb
int
ljmp
sbb
and
add
pop
in
dec
adc
aam
fbstp
jae
cmp
inc
scas
enter
stos
ret
cltd
mov
or
es
inc
jmp
inc
shlb
sbb
mov
pop
push
cs
inc
rcll
ret
dec
jmp
lock
mov
jg
addr16
inc
and
jle
popf
ret
jecxz
push
jb
and
das
lahf
push
sub
stos
dec
pop
adc
pop
dec
add
dec
into
inc
adc
aas
out
lods
xchg
dec
mov
push
mov
adc
cmpsb
push
inc
sbb
call
or
loopne
xor
sbb
sahf
adc
mov
xchg
inc
add
dec
mov
movsb
or
ja
sahf
mov
jo
in
mov
movsb
test
stc
lods
dec
sub
lock
lds
stos
xchg
xor
data16
jbe
arpl
xor
pop
xorl
lods
jge
popf
mov
mov
fimull
cmp
adc
sub
add
xchg
add
test
test
adc
ficompl
repnz
inc
hlt
dec
xor
dec
mov
out
sti
in
cwtl
call
movsl
jns
mov
sbb
xor
mov
addb
cs
imul
push
cs
mov
mov
pusha
subb
mov
popf
adc
ret
inc
jl
and
notb
fstpl
jbe
loopne
mov
shll
cmp
push
jecxz
imul
lock
testb
movsb
mov
ret
das
loop
adc
mov
xchg
gs
jl
push
push
mov
xlat
and
ret
test
xchg
push
repnz
fisubl
push
movsb
leave
mov
in
pop
idiv
jmp
pop
xchg
sub
pop
xlat
aaa
adc
fwait
ljmp
out
repnz
lahf
mov
stc
ja
scas
jns
and
push
adc
mov
imulb
je
stos
int3
mov
movsl
xchg
add
push
sbb
jmp
sub
iret
jns
adc
mov
mov
sbb
xchg
shll
mov
shll
rorb
shll
jnp
and
std
sub
pushf
and
push
call
xor
sbb
insl
and
pop
test
int3
test
xor
mov
sbb
pop
push
mov
adc
cmp
mov
loop
pop
and
nop
ds
mov
xchg
jmp
into
jmp
fistpl
pop
xor
outsl
decb
shrb
out
fsts
test
ljmp
sub
fbstp
inc
movsl
add
mov
adc
mov
push
fwait
stos
adc
and
xlat
sub
pop
sub
mov
sbb
mov
inc
int
xchg
mov
mov
ljmp
sub
jp
sbb
stc
pop
mov
pop
adc
xchg
mov
pop
add
mov
jl
shrl
cs
and
xchg
adc
jmp
fists
cltd
sbb
push
pop
adc
adc
jl
dec
sahf
xchg
subb
out
pushf
push
dec
push
into
xor
push
cli
nop
daa
jmp
mov
sar
xchg
mov
lds
and
mov
je
cmpsl
add
jg
jb
dec
mov
lcall
jmp
in
push
arpl
sub
xchg
stos
nop
in
xchg
jg
aaa
mov
aaa
lret
jo
stc
mov
xchg
lcall
lahf
test
mull
mov
jecxz
mov
jmp
rorl
lcall
inc
xchg
inc
fnstcw
adc
adc
clc
jnp
imul
pop
rolb
jbe
insb
test
push
nopl
lods
adc
dec
xchg
loopne
mov
bound
iret
int3
cmp
fcomp
xchg
lods
pop
in
sbb
insb
inc
sub
xchg
fidivs
add
jg
test
adc
push
sbb
jns
mov
hlt
and
dec
lock
daa
mov
fs
jmp
pop
das
adc
adc
mov
push
daa
stc
pop
out
sti
test
mov
clc
outsl
pop
mov
fcoms
movsl
mov
sub
std
fidivs
movsb
jp
mov
call
repnz
push
xchg
add
mov
fsub
adc
out
enter
or
icebp
inc
jno
push
popf
push
push
test
xor
jne
test
cld
jmp
pop
pop
add
or
js
fdivl
mov
mov
inc
mov
jne
adc
mov
dec
inc
xor
jmp
mov
or
sarl
mov
les
ffreep
repnz
add
cmp
pop
arpl
sbb
shlb
sub
xor
or
andb
and
adc
sti
sub
pop
loop
or
pop
push
shlb
or
aaa
sbb
mov
in
data16
mov
and
adc
lcall
push
jo
pop
pop
lock
mov
mov
mov
fwait
dec
insl
push
push
int3
popf
dec
xor
mov
aam
pop
mov
clc
cli
add
fsubr
mov
mov
jmp
aas
aas
or
mov
je
negl
add
stos
jns
push
cmp
loop
pop
mov
mov
adc
pushf
mov
jo
inc
add
shrl
cli
push
cltd
addb
adc
sarl
dec
icebp
jl
push
xor
test
cmp
popf
fcmovnb
jo
lock
scas
or
or
fs
stos
lcall
sti
inc
inc
fsubl
sub
add
stos
popa
add
iret
stos
icebp
adc
inc
sarl
or
xchg
clc
mov
jg
mov
and
sub
rorl
pusha
in
dec
and
adc
lret
out
mov
addr16
mov
mov
out
jnp
into
dec
sbb
mov
movsb
push
sbb
inc
jmp
cmp
mov
jp
shl
out
and
xchg
mov
iret
mov
lcall
pop
leave
loopne
shlb
adc
mov
insl
and
ret
sub
push
cltd
xor
cmp
push
pop
outsb
sub
push
lds
pop
dec
sub
pop
push
rorb
jecxz
xor
and
cmp
cwtl
leave
dec
add
push
mov
cli
xlat
imul
push
sbb
popa
xchg
dec
pusha
pop
clc
mov
jb
mov
xor
mov
insl
sub
jnp
rorb
jle
repnz
xchg
cwtl
imul
roll
and
pop
test
das
pop
push
mov
mov
cmp
in
out
dec
lahf
add
mov
and
xor
sti
imul
in
and
ret
dec
test
push
jge
sbb
sbb
imul
addl
lret
ret
xor
inc
out
in
jb
mov
push
jb
ja
in
jo
dec
loope
inc
add
sub
jns
movsl
in
negl
inc
sbbb
adc
mov
fisttpll
mov
pop
or
xchg
pop
mov
xchg
call
inc
xchg
das
pop
jmp
dec
cs
cmp
iret
into
push
lahf
push
es
add
ficoms
lds
jle
div
inc
dec
jbe
dec
dec
outsl
or
out
iret
imul
inc
pop
xlat
das
jno
mov
and
aad
push
adc
popa
popf
out
cs
mov
insl
xor
fs
js
rol
xor
rclb
jb
in
es
mov
jl
popa
push
ror
pop
mov
sbb
pop
cltd
inc
mov
mov
dec
push
pop
icebp
cmp
jno
inc
gs
cmpsl
aaa
mov
fucom
dec
xchg
inc
sub
push
jge
iret
inc
ret
lahf
adc
mov
gs
aam
inc
mov
jno
test
imull
add
cs
mov
sub
xchg
jns
add
xlat
scas
addr16
jg
scas
filds
xor
adc
cmc
test
int3
jl
cmc
in
adc
ret
bndldx
xchg
dec
or
mov
ja
scas
or
sbb
cmp
arpl
std
mov
lods
repnz
xchg
in
pop
iret
int
fcmovbe
push
jge
fst
std
push
ret
dec
repz
inc
adc
mov
imul
adc
mov
or
es
jl
imul
jae
lea
sub
mov
mov
cmpsl
or
fdivrl
jb
cltd
mov
mov
mov
push
xchg
negb
mov
pop
inc
cmpsb
jbe
xchg
shll
call
subb
lahf
into
cmp
jne
cmc
mulb
pop
ljmp
fadds
dec
sbb
fsubl
loope
pop
loope
pop
sbb
mov
test
add
sbb
push
or
mov
pop
jl
lahf
stos
adc
mov
imul
inc
stos
outsb
xchg
shlb
clc
pop
lock
outsb
sbbl
in
jecxz
jae
jo
mov
push
ror
xchg
ds
and
mov
adc
ljmp
or
xchg
cs
ret
popa
cmp
loope
mov
ret
lret
into
pop
push
inc
rcll
cltd
test
out
movsb
nop
mov
mov
outsb
in
fdivrs
xchg
cmpsb
roll
mov
push
sbb
push
cmp
dec
add
jl
arpl
fsubrl
popa
aas
icebp
or
inc
and
popf
aaa
mov
inc
xchg
or
dec
mov
xchg
push
mov
aad
sahf
aad
sub
dec
or
xor
jge
into
cmp
andl
cmp
frstor
std
ss
or
dec
cmpsb
or
inc
sbb
push
adc
outsb
sbb
int
mov
fcompl
cmp
add
xchg
xchg
push
lea
mov
sarl
pop
cmpsl
cmp
xor
sbb
gs
out
ss
std
lret
xor
test
sbb
out
imulb
rcrl
arpl
pop
mov
push
arpl
sub
mov
adc
mov
xchg
lcall
cmp
mov
loope
mov
push
or
mov
sahf
out
xchg
cs
and
pop
cmp
clc
ret
cli
and
mov
add
push
add
pop
popa
cmc
shr
inc
xor
inc
jl
dec
xchg
xor
jl
jns,pt
mov
test
jmp
loop
test
and
jmp
dec
mov
xchg
shrb
in
inc
das
mov
flds
add
aad
and
adc
roll
inc
and
jmp
dec
xor
cmp
scas
data16
data16
dec
mov
movsl
outsb
inc
lret
mov
idivl
popf
fsts
mov
jg
jb
xor
jecxz
into
mov
cmpsb
sbb
pop
add
faddl
cs
icebp
iret
psadbw
cmp
pop
xor
les
mov
and
adc
int
mov
jp
xor
movsl
or
lcall
or
dec
mov
ss
mov
je
mov
xchg
mov
notl
sub
mov
dec
testl
lcall
add
pushf
and
lret
rcll
cmp
adc
pop
test
nop
into
inc
cmpsb
outsl
test
ret
rol
pop
ss
repnz
cltd
je
xor
test
fnstcw
lock
inc
sbb
movsl
inc
push
mov
sti
xchg
xchg
and
inc
sub
dec
adc
mov
imul
jge
push
push
pcmpeqb
xchg
call
test
fs
push
adc
mov
call
push
sub
cmpsl
dec
dec
add
inc
and
jg
sar
push
in
fidivs
lret
pusha
and
mov
scas
dec
inc
and
pop
bound
cmp
mov
sub
adc
dec
popa
loope
jle
paddw
sti
int3
in
cmc
cld
add
adc
adc
into
lcall
lret
xchg
mov
mov
orl
add
xchg
daa
mov
xchg
nop
out
cld
jne
lret
xor
or
mov
sbb
mov
lret
ja
sarb
xchg
push
mov
lods
push
aaa
pop
jae
inc
jmp
aas
rol
jnp
ja
and
mov
mov
mov
adc
in
mov
aas
add
or
dec
iret
aas
test
inc
mov
mov
fdivrs
mov
cmpb
dec
adc
pop
push
xchg
push
fcmovbe
mov
cmpsb
adc
sbb
imul
hlt
jne
push
filds
xchg
clc
mov
outsb
push
call
jns
pop
jecxz
mov
or
or
leave
test
sarb
mov
push
rcrl
movups
insb
gs
dec
xor
lds
jo
xchg
or
out
and
ds
lahf
pop
es
dec
cwtl
xchg
clc
adcb
push
icebp
in
inc
xchg
mov
or
loope
repz
push
stc
cmc
int
repnz
ret
fstpl
fidivrl
or
lods
jnp
cmp
jg
push
mov
mov
mov
push
adc
or
addr16
jle
insl
jne
xor
popf
loope
fwait
or
xor
jge
dec
idivb
push
icebp
xchg
xchg
mov
bnd
xchg
punpckldq
xchg
es
rcll
test
push
jno
xor
out
andl
dec
addr16
sub
mov
std
push
jns
frstor
pcmpgtd
and
adc
je
fistpll
lret
mov
div
addr16
andl
stos
ds
clc
push
ds
pop
mov
ljmp
lcall
sbb
dec
xlat
ret
into
cmc
sub
lcall
mov
pop
pop
out
cwtl
pop
mov
jns
ss
push
out
ret
call
push
loope
inc
add
inc
rorb
sbb
xor
sbb
lods
push
xor
leave
push
arpl
xor
test
dec
mov
call
sub
pushf
ret
test
jne
cmc
data16
add
dec
clc
das
xor
xchg
and
mov
fsubrl
mov
ja
cld
xchg
mov
cld
int3
adc
negl
popa
jo
mov
stc
cmc
jbe
inc
nop
xlat
push
inc
out
aad
sub
xor
lds
push
dec
jge
push
arpl
lcall
jnp
dec
push
and
sub
mov
out
fisubs
xchg
invd
sub
sbb
cmpsb
fst
cmp
cld
dec
popf
lea
sti
test
mov
insb
mov
out
mov
inc
jne
dec
inc
jle
in
sarl
mov
mov
ljmp
mov
stos
jb
lea
xor
or
enter
jge
xchg
jae
lret
insb
and
arpl
ffreep
pop
js
pop
and
lcall
jb
je
call
addr16
jns
cmp
ret
xor
xchg
xchg
mov
pop
mov
push
adc
js
xor
test
icebp
mov
mov
mov
ret
not
cmc
mov
sbb
mov
lar
popa
shlb
in
sahf
inc
or
sub
xor
mov
adc
or
mov
mov
sub
loop
arpl
jmp
cli
inc
out
cmp
sahf
pop
xor
push
or
push
lahf
mov
loopne
mov
and
out
or
pusha
adc
dec
or
cmpsl
pop
lret
pop
or
inc
dec
lcall
in
icebp
cmp
test
cmp
cmp
add
dec
mov
add
and
and
mov
scas
xor
addr16
arpl
jno
or
shr
push
sti
xchg
popf
mov
dec
jae
mov
lahf
mov
roll
dec
xlat
or
cmp
mov
leave
pop
mov
mov
cmp
cmp
fisttpll
jb
insb
std
pop
cmc
int3
loop
es
lds
mov
int3
cltd
push
cmp
sbb
jge
mov
lea
pop
fcomps
and
iret
sbb
jbe
inc
or
push
mov
imul
iret
shrd
sahf
test
mov
xchg
out
aam
popl
sahf
js
fs
and
cltd
jo
mov
leave
call
jb
iret
xchg
sbb
arpl
or
and
push
cmp
inc
iret
stc
push
fcomp
negb
fisubrs
js
xchg
mov
xor
xlat
pop
cmp
sbb
jmp
imul
loop
outsl
int3
enter
cwtd
mov
popa
orl
aad
ja
pop
pop
jae
dec
mov
push
das
xor
test
icebp
movsl
out
cmp
lahf
xchg
add
mov
xor
jbe
xchg
jge
icebp
sarb
pop
mov
mov
cwtl
xchg
jmp
xor
je
sahf
xchg
push
cmp
daa
lret
or
mov
aad
ret
add
js
test
push
mov
dec
out
popf
sub
movsb
xchg
js
mov
cltd
fcompl
loope
ss
sti
push
dec
mov
dec
cwtl
push
mov
mov
daa
test
jne
ds
cltd
cmp
ret
movsb
or
add
fidivs
pop
into
xchg
cmp
aaa
fiadds
sti
sbb
pop
pop
adc
mov
fstl
inc
push
enter
in
dec
push
movl
lea
lret
sahf
mov
jle
in
pop
and
pop
rorl
add
lods
ds
push
push
int3
adc
cmp
sub
sbb
lds
repnz
insl
xchg
sbb
cs
or
mov
testl
loopne
mov
mov
aam
jge
xchg
mov
aaa
push
jg
stos
outsb
jle
and
je
cmp
in
inc
leave
mov
cmpsl
xlat
pop
outsb
daa
cmp
mov
sub
lret
popa
outsl
lahf
sbb
gs
and
xlat
mov
adc
imul
out
pop
scas
outsb
addb
in
inc
scas
jae
jmp
mov
or
jecxz
xchg
sub
mov
iret
dec
ret
inc
scas
xor
dec
mov
cmc
dec
and
mov
jne
mov
dec
mov
sbb
pop
cmpsl
ja
xchg
jecxz
cmovs
xor
cltd
sub
mov
flds
xchg
jp
xor
pop
out
jnp
lret
cmp
inc
int
inc
xor
push
data16
sub
ret
sbb
je
mov
cmp
mov
push
lret
stc
lret
outsb
lods
jg
ret
lock
scas
push
mov
aaa
in
inc
int3
sub
push
mov
inc
lret
dec
js
fisttps
and
push
jo
xchg
subl
add
fsubr
jmp
push
out
gs
inc
mov
shlb
mov
test
push
rolb
cmc
faddp
stos
stos
fs
daa
leave
rcrl
lods
dec
adc
or
ljmp
sub
test
pusha
jns
aam
add
xorl
sahf
lods
cmp
jbe
imul
jbe
sti
cltd
mov
cmp
fcmovbe
cmp
movsb
jmp
lahf
jno
in
jp
inc
in
jge
cmp
inc
imul
jb
leave
sbb
push
aam
repnz
pusha
flds
pusha
in
or
shlb
hlt
fwait
jae
int
jbe
in
cs
pop
jl
ljmp
mov
test
iret
add
mov
and
cwtl
sub
mov
js
pushf
das
mov
fwait
scas
div
shl
inc
mov
dec
sub
leave
and
fwait
xchg
iret
cmc
loop
jbe
sbb
in
sub
mov
and
mov
xchg
inc
push
lea
add
push
push
dec
sahf
repnz
shll
mov
inc
add
dec
mov
inc
dec
mov
jns
mov
xchg
xchg
push
or
cwtl
cmp
popa
fidivl
aam
jnp
fadds
cmc
mov
and
fs
repz
push
pop
nop
les
out
mov
in
mov
mov
es
push
andl
mov
insb
adc
aad
pop
pop
ret
sbb
cmc
cmp
adc
sahf
pop
dec
adc
vmread
push
lds
in
push
mov
imul
push
inc
outsb
gs
xchg
or
in
mov
mov
mov
int3
lcall
pusha
xor
pop
test
jp
outsb
es
sbb
sti
sbb
mov
ud2
ds
cmp
bound
jbe
mov
fidivs
mov
dec
mov
arpl
into
sbb
xor
pop
pop
gs
xorb
js
pusha
out
mov
sti
pop
scas
push
sbb
mov
lods
xchg
lcall
insl
movsl
fildll
aad
dec
stc
lahf
iret
out
in
mov
pop
fs
sub
mov
sub
mov
jp
dec
scas
add
sbb
mov
push
xor
dec
mov
dec
jecxz
scas
enter
push
mov
or
cmpl
jns
and
ret
xchg
dec
xchg
subb
dec
ljmp
loopne
into
add
sbb
arpl
xchg
inc
stos
mov
imul
jnp
out
shll
inc
xor
ss
sbb
push
xor
add
pop
jae
je
icebp
mov
das
shr
repnz
inc
ja
pop
and
add
les
push
xor
test
scas
push
decl
xchg
iret
sbb
xchg
lret
mov
ss
es
out
mov
fmull
mov
hlt
cmp
popa
mov
mov
sub
sbb
adc
orl
inc
xor
sarb
aas
inc
lock
dec
xchg
jb
add
adc
sbb
cs
sahf
je
loopne
mov
bound
pop
dec
out
mov
bound
movsb
push
pop
daa
bound
push
inc
pop
sub
mov
and
sub
sub
push
fistps
xchg
and
inc
inc
cmc
cmp
cmp
stos
frstor
push
in
pop
mov
adc
pop
test
push
cltd
push
sbb
xor
ja
inc
inc
test
dec
lea
lds
fwait
sbbb
sti
pop
subl
inc
bnd
xor
ror
jae
push
or
fidivrl
mov
ss
jp
imul
mov
ret
sti
pop
fwait
movsl
lcall
jno
pop
push
dec
sar
and
iret
inc
loop
mov
and
adc
jecxz
out
inc
dec
enter
enter
outsb
xchg
or
jg
outsl
mov
inc
repnz
int
ja
aad
cwtl
sbb
push
push
sub
cmp
fucom
je
push
sub
inc
adc
sbb
pop
mov
jae
mov
cmp
clc
jne
mov
inc
nop
dec
pop
or
xor
mov
in
sarb
pop
jns
popf
outsb
mov
push
or
inc
and
jmp
add
sahf
mov
cmpsb
sbb
push
int3
push
mov
clc
fstps
dec
test
ja
movsb
loop
data16
xchg
outsb
jge
into
cmp
inc
lcall
lret
pop
pusha
or
jbe
jge
ljmp
or
int
ret
cmp
pop
movsb
jl
adc
push
push
cmc
mov
mov
insb
mov
jno
icebp
adc
imul
cmp
xchg
fbld
add
mov
inc
mov
jg
push
or
push
mov
shrb
adc
imul
add
mov
push
jmp
je
and
mov
mov
pop
scas
mov
lock
mov
pshufw
int
hlt
repz
mov
movsb
imul
andb
sbb
stos
roll
cltd
ja
cmpsl
test
or
and
call
mov
or
mov
rorl
push
cmp
xchg
jno
or
jbe
mull
jmp
adc
mov
pop
mov
imul
or
cli
pop
push
mov
aaa
cmp
xchg
sub
xor
ret
inc
ret
pop
femms
sbb
test
mov
cwtl
ds
push
popf
xor
out
int
sbb
out
arpl
call
xchg
xor
adc
sahf
mov
cltd
dec
ret
std
aas
dec
mov
mov
mov
in
mov
or
mov
jle
lcall
mov
jnp
into
xor
icebp
sub
fisttps
xchg
cs
inc
cltd
loopne
inc
gs
mov
lea
or
mov
jecxz
dec
in
or
ret
xor
ljmp
xchg
push
jg
push
pop
mov
or
inc
xor
pop
adc
shlb
pop
inc
je
rclb
dec
andl
pusha
pop
dec
pop
lret
adc
inc
jp
adc
jbe
fmuls
mov
aam
popa
xor
or
pop
jne
sub
aas
pop
inc
roll
pop
mov
or
mov
mov
outsb
sbb
cmc
and
or
subl
nop
sub
mov
mov
in
cmp
push
bound
mov
mov
int
je
xor
out
ret
push
icebp
cmp
jns
hlt
mov
cld
adc
jl
mov
hlt
dec
inc
adc
add
popf
sbb
inc
fisttpll
pop
xor
out
jo
es
mov
pop
add
adc
jg
jbe
add
inc
movb
imul
movsb
mov
cwtl
dec
sub
pop
and
adc
cmc
jmp
data16
js
test
cmp
lahf
loope
clc
loope
insl
dec
test
push
mov
inc
bound
sbb
mov
mov
popf
bound
cwtl
clc
push
test
inc
cmp
cmp
mov
cmp
sti
and
popa
ja
leave
sbb
insb
fsubl
stos
fildl
push
shlb
sar
icebp
sbb
mov
das
out
cld
das
xchg
jecxz
aam
add
mov
pushf
testl
loopne
nop
aam
mov
mov
lock
dec
mov
out
add
pop
dec
and
jp
xchg
std
cmc
sub
inc
pop
mov
hlt
mov
sbb
jge
loop
ljmp
xor
in
dec
cld
data16
pusha
cld
das
push
cs
in
inc
sti
addr16
out
movsb
int3
lods
jl
or
dec
pop
adc
cld
or
aad
jne
rolb
jbe
mov
ds
sub
wrmsr
lcall
sbb
sbbb
mov
cmp
icebp
popl
jne
test
pop
hlt
ja
lock
lock
popf
int
pop
roll
fucomi
lds
mov
mov
sbb
sub
mov
out
and
dec
push
rcll
push
dec
adcb
ret
jmp
xorb
imul
xor
push
int
sub
or
mov
adc
dec
push
pop
aam
mov
mov
popf
add
dec
add
mov
jmp
inc
xchg
mov
sbb
aad
lahf
add
loope
cmpsb
xor
clc
pusha
sub
in
and
pusha
aaa
xchg
and
or
lods
in
mov
mov
mov
movb
les
dec
push
xchg
or
andps
addr16
mov
dec
das
dec
cmpsl
cli
push
popf
dec
push
xchg
scas
rcrb
or
icebp
and
adc
mov
call
cmp
data16
jp
stos
push
jns
addr16
adc
dec
sub
dec
push
cmp
mov
dec
popa
or
add
sbb
test
inc
cmpsb
jg
xchg
mov
hlt
insl
push
xlat
test
inc
addb
test
mov
insb
pop
lret
lea
in
or
inc
xchg
cwtl
mov
imul
sbb
xor
inc
mov
and
and
dec
mov
jae
jle
mov
out
testb
adc
cmp
dec
les
lahf
fsubp
adc
aam
dec
shll
fsubr
pusha
mov
pop
int
xchg
push
es
jle
push
adc
and
add
mov
bound
dec
add
adcl
outsb
cltd
inc
addb
test
mov
mov
cmpsb
mov
xchg
push
mov
mov
sub
add
test
sub
pop
xor
pop
call
movsb
notb
jns
int
add
aad
inc
lea
cld
stos
and
and
insb
pop
mov
sbb
jmp
rcll
lret
inc
outsl
fdivr
xchg
cmpsl
jge
pop
xchg
cmp
divb
mov
jae
clc
mov
mov
and
and
mov
mov
pop
pop
test
inc
loopne
out
clc
xchg
mov
adc
push
cs
aam
xor
mov
xor
dec
xor
test
jne
lret
sub
addl
inc
xchg
cmpsb
jg
sub
add
cmp
insb
rcrl
loope
andl
daa
jb
les
call
nop
icebp
rcrb
les
pop
dec
dec
sarl
jno
inc
lcall
cli
in
es
ljmp
cmc
into
jnp
std
xor
sti
rclb
mov
xchg
das
cltd
mov
sbbl
mov
dec
es
mov
dec
push
pop
add
out
ret
cmp
jns
push
push
das
jp
and
mov
iret
or
stos
xchg
sub
js
sub
mov
cmp
jns
xor
xor
inc
fldl
lods
inc
popf
dec
sti
sbb
sbb
int3
ffreep
ret
pop
enter
lahf
enter
jne
out
incl
jbe
leave
pop
mov
lods
fwait
pop
or
jp
movsb
dec
pushf
pushf
xor
mov
jno
xor
mov
xor
clc
ljmp
lea
adc
fcmovne
dec
sbb
lret
adc
sbb
dec
sub
movsl
push
aam
mov
cmpsb
xor
movsb
adc
adc
jns
ss
jo
mov
mov
cli
cmp
mov
sub
sahf
mov
push
pop
popa
sbb
mov
dec
inc
lods
cmp
enter
icebp
mov
lret
jne
pusha
mov
xchg
shl
fnstsw
pop
popa
xor
mov
adc
xor
outsl
loop
in
je
lret
cmpsb
pop
stos
xlat
sub
cli
lret
cmp
or
fiaddl
jge
lock
sub
mov
rclb
int
pop
stos
dec
cmp
jb
jg
in
movsb
mov
xchg
push
push
fs
mov
lock
jg
fcoml
inc
jbe
jbe
adc
lods
in
shlb
insb
adc
test
pushf
repz
xchg
lcall
dec
mov
lods
pop
into
dec
out
mov
push
xchg
icebp
rclb
dec
xchg
and
sbb
lret
fnsave
stos
xchg
sbb
push
shlb
xchg
push
sbb
sti
inc
xchg
push
sub
and
in
inc
lahf
sbb
mov
test
xor
loop
scas
in
fmul
dec
aaa
in
pusha
sub
ljmp
imul
pusha
shll
jbe
mov
fisubl
adc
sbb
clc
in
lods
mov
push
es
xchg
int3
dec
test
xchg
cwtl
ja
cmp
mov
mov
test
pop
out
or
xor
in
scas
rcrb
pushf
hlt
mov
out
imul
push
inc
outsl
inc
insl
rcrb
sub
lock
and
push
mov
clc
dec
hlt
aam
xchg
sbb
jne
mov
xor
sbb
call
bnd
sbb
cmp
jecxz
mov
jne
mov
cltd
int
sbbl
sub
cli
or
xor
int
daa
xor
mov
sahf
pop
gs
mov
add
mov
dec
rcr
inc
pushf
and
add
out
add
inc
cli
jno
xor
mov
setbe
leave
push
shlb
loop
xorl
andb
mov
cld
sbb
clc
xchg
mov
jns
in
mov
cmpsb
sub
pop
rclb
ds
adc
in
cmp
stos
dec
push
stos
inc
aas
shrl
sti
push
mov
lret
fidivs
push
cmpl
sbb
xor
cmp
psubusw
push
push
clc
sbb
dec
in
jle
push
loopne
dec
pop
or
or
mov
lret
cmc
gs
pop
xchg
jg
mov
push
push
lods
xchg
or
mov
mov
jg
mov
push
adc
sbb
subb
inc
adc
pop
cli
aam
loope
ret
push
add
pandn
ljmp
sarl
lcall
xlat
das
add
mov
xchg
push
fildl
test
scas
or
dec
in
xchg
clc
fbld
stc
pop
mov
shlb
popw
rcll
fsubp
sub
aam
js
mov
xlat
cmp
and
shll
adc
lahf
xor
pop
cmp
in
insl
or
pushf
hlt
jmp
das
clc
arpl
mov
mov
inc
dec
xchg
pop
pop
arpl
jns
lds
imul
jnp
cmpsl
jl
push
leave
arpl
mov
sti
lock
cmp
and
adc
xor
ret
data16
lods
lahf
mov
fwait
in
mov
adc
xchg
jecxz
adc
stc
dec
sarb
add
xor
add
lcall
xor
jmp
sti
pop
xchg
test
mov
sbb
loop
push
incl
cmp
jb
cwtl
fidivrs
jns
mov
dec
popa
sbb
adc
mov
xor
mov
jb
dec
icebp
sti
inc
dec
or
ret
movsb
jmp
inc
sbb
or
shll
xor
cmp
push
push
ja
mov
ret
mov
add
mov
leave
xor
xor
jg
in
push
out
mov
cmc
push
sub
sub
in
pop
call
jns
mov
cmc
int
es
inc
dec
push
daa
hlt
orl
push
sbb
mov
in
aad
faddl
js
or
dec
shlb
jnp
cmp
std
in
mov
jl
gs
sti
xchg
fwait
push
mov
push
je
stos
mov
lcall
fnstcw
push
mov
jno
dec
rcl
pusha
lea
je
test
xlat
xor
lcall
or
orl
jo
adc
push
adc
cwtl
lret
call
cli
add
hlt
cmpsl
rcrb
jg
or
or
jo
cmp
add
dec
adc
add
out
les
xor
popa
imul
and
xchg
and
mulb
fimull
outsl
loop
jno
call
loop
dec
lret
dec
cmovno
add
stc
movsb
mov
dec
mov
mov
lock
mov
ds
push
push
xchg
addr16
int3
cmp
lock
loopne
in
lock
mov
or
xchg
test
sbb
shr
xlat
xchg
cld
mov
cmp
inc
mov
out
or
sbb
or
add
hlt
aam
mov
mov
or
push
mov
and
test
sub
adc
jnp
incl
pop
scas
pop
mov
outsl
cmp
fisubrl
orb
xchg
pop
je
mov
aad
lret
push
jg
imul
add
loop
imul
iret
ret
repz
xchg
jb
loopnew
jle
into
push
mov
decb
fldl
sbbl
daa
mov
fcmovnb
mov
or
pop
stos
dec
mov
cmp
mov
push
xor
stc
ffree
push
ret
inc
mov
pop
and
cld
jb
add
push
mov
xchg
xor
dec
fs
mov
das
mov
aas
sahf
addr16
cli
or
mov
push
fisubrl
call
push
pop
addb
add
push
jbe
fistl
and
pop
jmp
lock
ja
jecxz
ljmp
cmp
popa
enter
xchg
dec
or
inc
push
andb
fadds
push
push
inc
inc
pop
iret
or
add
leave
lock
lods
lds
popf
fisubrs
int
jo
dec
xchg
adc
jmp
cmp
sbb
dec
xchg
mov
cmpsl
jb
outsl
sti
fistpll
jne
jbe
dec
ret
loope
push
mov
mov
in
stc
adc
sbbl
into
inc
inc
inc
movsb
add
mov
inc
or
out
gs
or
mov
xchg
mov
and
fld
xchg
pop
js
xor
or
adc
bound
dec
push
push
aas
inc
test
or
xchg
pop
mov
fcoms
ret
pop
xor
montmul
cmpsb
inc
mov
sub
pop
sub
in
xchg
or
push
xor
xor
dec
ds
outsb
push
lea
xor
and
jb
aam
mov
push
data16
mov
dec
dec
out
movsb
xlat
pop
aam
jnp
scas
fcomps
scas
test
clc
movsl
sub
negb
gs
sahf
dec
cmp
dec
gs
add
and
stos
pushl
jo
paddusb
pop
mov
push
imul
pop
je
ljmp
push
xchg
js
std
xchg
xchg
test
push
dec
pop
adc
clc
ja
and
jae
loop
xchg
xchg
mov
test
cmp
lods
cltd
adc
sbb
lcall
test
in
or
inc
xchg
mov
jecxz
mov
cmc
test
lods
fisttpll
std
mov
out
in
sub
add
pushf
lds
outsl
fisttps
std
jae
add
inc
jge
and
insl
rorb
sti
or
decb
or
sbb
test
je
ret
int
arpl
cwtl
jbe
mov
imul
addb
inc
or
fisttpll
inc
ror
push
and
push
ljmp
xor
mov
cmp
add
lock
les
decb
add
jecxz
xchg
sbb
mov
out
pop
mov
inc
rorb
mov
jge
dec
mov
sub
ror
pop
dec
call
pusha
test
mov
popf
lahf
nop
pop
inc
popa
fidivrs
testl
scas
call
jns
movsl
pop
int3
mov
pop
mov
notb
insl
inc
mov
add
jno
lock
mov
pusha
or
xchg
dec
pop
stos
insb
cmp
push
xchg
gs
pop
lock
orl
cmp
push
out
lret
pop
xlat
mov
lret
fldpi
and
xor
inc
shll
xchg
mov
insb
in
test
and
pop
cltd
gs
xchg
repnz
imul
cmpsl
and
lock
mov
test
mov
jecxz
jb
pop
or
sbb
lods
outsb
push
lea
loopne
or
cmpsb
cwtl
dec
fwait
call
mov
push
scas
sahf
loop
lret
lods
pop
subl
mov
mov
fisttpll
das
sbbb
or
and
adc
enter
jl
mov
cs
psubsw
mov
loope
sahf
mov
in
pusha
xchg
test
shrl
push
sbb
adc
out
or
in
sub
mov
aad
jae
clc
push
mov
cmp
pop
cmp
pop
decb
jecxz
inc
test
fdivrl
fxch
das
jmp
stc
inc
addb
mov
ja
and
stos
sbb
mov
shll
jns
xor
call
ljmp
xchg
out
adc
sbb
cmp
insb
cwtl
sbb
fisttpl
pop
mov
inc
or
and
fcomip
jmp
add
sub
dec
pop
fs
push
add
pusha
push
out
push
mov
xchg
lods
rcrl
xor
cli
or
bound
push
mov
fsubr
jg
scas
mov
frstor
lahf
lcall
mov
lds
jge
inc
insl
add
ret
mov
into
dec
jl
adc
sbb
les
cmp
lods
add
leave
enter
pop
jmp
add
xchg
pop
cmp
mov
lods
stos
jmp
pushl
and
popa
lock
jmp
mov
jbe
push
icebp
ljmp
push
lret
fists
jo
inc
insb
loop
xchg
mov
mov
adc
mov
add
jg
in
push
lock
dec
mov
push
ljmp
cld
mov
outsl
push
sti
ret
push
ret
aam
xor
sbb
movsl
cmpsl
inc
xor
ja
aad
dec
ret
sbb
fcomps
lahf
dec
mov
in
mov
flds
sub
or
mov
repz
pop
adc
add
stc
mov
out
mov
or
push
cmpsl
sub
in
ficoms
faddl
loope
adc
out
adc
shll
aam
mov
das
push
adc
dec
aam
jns
imul
jns
jmp
mov
or
rcl
cwtl
pop
mov
test
push
fnstenv
fwait
push
les
xor
je
pop
int
fidivrs
lret
or
movsl
jb
xor
push
mov
cltd
cs
iret
sub
mov
add
jmp
push
xor
or
sub
in
repz
nop
stos
adc
inc
das
outsl
sarl
jg
jl
pushf
push
mov
add
cltd
test
stos
scas
jnp
add
outsl
xchg
push
ror
push
nop
lock
jle
jb
mov
mov
mov
mov
xor
cmp
cmp
xchg
ja
icebp
add
adc
sbb
ss
fstpt
hlt
rcrl
xlat
and
stos
xlat
and
cli
push
xor
cmp
pusha
fsts
js
mov
out
inc
adcl
cwtl
movsl
shl
idivb
in
jae
insl
lds
xor
push
clc
mov
sub
cli
mov
stos
pop
jle
ljmp
imul
push
cmp
addb
imul
xor
shll
stos
call
mov
movsl
push
xlat
call
into
pushf
inc
jo
jno
rcrb
mov
imul
mov
cmpsb
pop
adc
or
outsl
fistpll
inc
add
jno
push
mov
pop
pop
rcrl
or
rcrb
inc
dec
adc
xchg
out
gs
jmp
bound
pushf
cwtl
xchg
divb
bound
stos
dec
or
int
lret
fldt
dec
lods
xor
mov
fbld
push
dec
outsl
out
and
aaa
daa
inc
out
pop
aam
mov
jae
dec
imul
and
inc
or
or
jp
jno
push
add
outsb
mov
mov
dec
pop
sbb
aas
out
fcompl
inc
inc
aam
xor
ds
or
sahf
fs
int3
cmp
adc
cmp
rorl
sub
fwait
pop
aaa
xchg
sbb
neg
aaa
fidivs
ret
mulb
lods
imul
mov
cmp
fwait
and
inc
lods
dec
ljmp
xchg
lcall
jbe
push
daa
dec
bound
cmp
mov
xor
mov
movsb
outsb
and
pop
push
pop
fisubrs
adc
jae
xor
sti
loope
lods
loop
outsb
xor
xor
aas
jmp
xor
js
or
sub
xchg
bound
lods
and
mov
pop
lods
pushaw
xor
or
int3
aas
ficoms
ja
inc
adcb
lods
push
push
push
and
dec
mov
test
dec
pop
ds
loop
mov
mov
rcl
or
mov
les
js
es
ret
mov
aad
jp
push
into
push
dec
adc
mov
xchg
mov
rol
xor
push
mov
inc
leave
add
cwtl
das
repz
adc
pusha
popa
sbb
arpl
jns
out
jne
inc
xchg
cmpsb
js
sbb
fistl
add
cmp
gs
push
adc
jge
cmp
js
stc
push
in
clc
daa
adc
adc
mov
pop
mov
lahf
jnp
mov
lods
bound
add
push
push
das
pop
cltd
cmpb
pushf
xor
adc
stos
sti
negl
sbbb
mov
adc
repnz
outsb
ret
cli
xchg
hlt
mov
out
and
lods
icebp
sub
insb
push
sarl
dec
jnp
aam
les
xchg
mov
dec
mov
mov
adc
ficompl
nop
xor
icebp
aam
xor
repz
mov
push
mov
mov
lds
in
mov
mov
jmp
stc
jge
jb
mov
mov
mov
xchg
roll
pop
lds
mov
repnz
loopne
cmp
loopne
ds
cmp
out
push
ds
add
xchg
adcb
repnz
ret
and
popf
mov
stc
popa
rcl
std
lds
fwait
cmpb
sub
push
or
jge
repnz
sbb
add
add
push
add
das
js
out
cmp
cmp
cltd
data16
adc
sbb
push
ja
in
cli
fidivl
cmp
mov
repnz
and
repz
les
push
cmp
imul
sub
fildl
mov
sub
fdivs
cmp
mov
repnz
ja
bound
mov
mov
push
fimuls
icebp
sbb
sub
mov
scas
jns
xchg
fs
fnclex
pushf
mov
es
or
pop
add
sti
mov
subb
pop
lods
or
test
mov
mov
pop
inc
sbb
inc
shlb
fs
jno
dec
adc
stc
lods
roll
aaa
lret
lret
xor
mov
push
cmovl
push
ret
jbe
jp
dec
call
std
mov
sub
stc
sub
add
inc
leave
js
ja
push
movsl
es
mov
bound
and
jne
push
sub
outsb
movsl
outsl
cld
or
or
decl
outsl
sbbb
lcall
lret
and
js
jo
in
adc
inc
xchg
push
xor
jno
adc
out
sub
add
pop
lcall
dec
sub
outsl
je
ret
push
aas
cmp
or
xor
xlat
add
xor
pop
sar
adc
lahf
loop
je
fadds
inc
xor
xor
mov
pop
out
andnps
and
xchg
jno
cmpsl
adc
cltd
mov
test
xchg
xor
insl
incl
rcll
scas
inc
jle
cmc
mov
pop
sub
adc
dec
mov
pop
ljmp
mov
and
xchg
sub
sub
xlat
dec
mov
out
and
daa
mov
addb
push
aam
mov
add
pusha
or
dec
or
nop
lods
aas
sti
ds
jno
outsl
movsb
lret
test
mov
in
push
pop
add
mov
enter
jl
aam
add
adc
xlat
and
pop
cwtl
xchg
mov
inc
movl
clc
inc
inc
mov
call
jo
xlat
in
sbb
outsb
sub
xchg
and
enter
add
or
int
std
or
mov
insl
icebp
int3
imul
rcrb
jne
es
and
fistpl
dec
and
sub
adc
dec
loop
jae
mov
add
dec
lret
jmp
stos
pop
add
or
jmp
xor
sbb
pop
or
mov
ja
sub
cmp
push
fnstcw
add
mov
sub
inc
loop
dec
xor
mov
adc
cmpsb
mov
fwait
sub
lods
cmpsb
pop
cmp
pop
int3
neg
xor
jnp
test
movsb
and
mov
cmc
add
cmp
xchg
push
mov
cld
repnz
aas
test
adc
xchg
cmp
mov
pop
jp
lock
stos
xor
sub
jb
add
push
int
inc
sbb
jmp
mov
pop
push
ret
add
shlb
push
inc
dec
sub
lods
dec
dec
jp
in
shlb
mov
outsb
loope,pt
jbe
mov
lods
aas
fcompl
in
xor
in
loope
add
mov
hlt
mov
or
add
pop
dec
cld
cwtl
sbb
aad
dec
mov
jmp
shrl
inc
in
or
sbb
jl
cmp
adc
pusha
inc
mov
add
js
jo
adcb
inc
icebp
cmp
xchg
sub
mov
aam
and
add
fwait
mov
out
ja
fidivs
push
adc
dec
out
andl
adc
jnp
fdivs
mov
iret
daa
lahf
push
fdivl
repnz
dec
mov
dec
cmp
hlt
dec
cs
out
xlat
jl
cmpsl
and
dec
les
add
xor
push
repnz
pop
mov
int3
call
notl
dec
and
sub
in
pop
lret
push
mov
repz
cmpsb
push
pop
lret
jns
xor
and
scas
inc
sub
pop
repz
jle,pn
hlt
in
pop
int
hlt
lock
fildl
lds
jae
addr16
movsl
insl
lods
movsl
cmc
sub
push
outsl
jns
ljmp
mov
cmp
sub
xor
leave
lods
mov
es
or
shlb
xchg
or
push
out
fs
in
lds
scas
sub
fdivl
std
iret
pop
sub
fdivs
sub
sbb
popf
aad
fs
testb
decl
adc
mov
dec
fisttpll
cmp
mov
push
stc
mov
inc
cmc
aam
dec
out
push
add
dec
nop
ss
cmp
adcb
stc
jb
xor
add
test
orl
test
mov
mov
sub
mov
imul
insl
push
jl
add
mov
push
dec
push
push
inc
enter
and
out
bnd
xchg
push
mov
pop
push
add
popf
shl
or
subb
in
pusha
loopne
and
push
cli
cmp
xor
mov
stc
xor
outsb
pop
add
mov
imull
inc
fldlg2
xchg
sbb
dec
push
ss
mov
mov
mov
popa
fbstp
or
call
pop
mov
mov
bound
adc
and
cltd
add
sub
or
je
push
popf
cmpsl
fisubs
inc
pop
lock
cmc
popf
inc
fisubrl
inc
ljmp
sbb
les
arpl
imul
lea
and
in
es
mov
or
test
xchg
js
push
push
mov
mov
fwait
push
sbb
mov
mov
lcall
bound
out
ljmp
jb
pushf
inc
daa
outsb
and
inc
push
pushf
mov
mov
inc
stc
jmp
mov
insl
cmc
mov
cmpsb
pop
jo
cltd
xor
xor
adc
add
popf
stos
test
add
gs
inc
das
dec
cmc
sbb
or
mov
sbb
push
dec
xor
clc
jae
pop
sti
cmp
popf
mov
adc
adc
es
mov
xor
push
cltd
js
mov
cmp
mov
in
dec
rolb
imul
and
adc
cmp
int3
xchg
or
je
sbb
dec
or
cwtl
clc
test
mov
pushf
xchg
imul
lcall
jecxz
sub
repnz
out
sub
outsl
sbb
lea
shll
nop
out
add
std
jo
repnz
jp
cmp
or
sbb
movsl
cmpb
dec
shl
push
pop
pop
rolb
sub
mov
add
insb
lock
or
xor
jge
iret
idivb
sbbl
cmp
fs
add
popa
push
lods
mov
aas
cmpb
aad
push
out
mov
jb
int
jno
mov
out
ret
imul
jns
adc
fldt
ljmp
fimuls
push
pop
outsl
xchg
sbb
mov
add
mov
adc
push
xchg
loopne
sub
cltd
push
bound
rorb
test
xor
cmpsb
xchg
clc
pop
or
aam
sti
lock
cmp
in
mov
dec
les
push
xor
adc
add
xor
out
push
mov
out
clc
xchg
addl
hlt
mov
cmc
sub
push
lds
iret
jo
mov
push
pop
jno
les
dec
lret
fnsave
jp
cltd
or
xlat
roll
int
enter
or
xchg
and
mov
loope
cmc
jecxz
pop
and
in
pop
mov
push
push
pop
jecxz
std
out
cmp
dec
rcrl
or
pop
mov
dec
or
xchg
out
push
ret
pop
push
and
test
out
dec
frstor
hlt
mov
je
sti
ja
inc
or
push
or
add
adc
mov
mov
add
inc
pusha
fs
and
sarl
mov
shl
std
gs
jo
pop
int
pop
cmpsl
xchg
pushf
inc
pop
pop
fldenv
inc
mov
lahf
adc
leave
sub
adc
out
xchg
insl
aam
push
sbb
shlb
in
pop
cmp
cmpsb
mov
xchg
iret
push
mov
mov
jns
dec
in
sub
lcall
repnz
jmp
mov
mov
mov
daa
pushf
icebp
loopne
inc
jbe
mov
pop
push
insl
mov
lret
dec
sbb
out
divl
mov
js
int
scas
add
test
inc
jmp
out
push
loop
decb
mov
test
mov
or
mov
cmpsb
inc
pop
inc
js
pop
in
movsb
sbb
add
cmp
adc
fiaddl
lea
shrl
inc
mov
stos
push
std
inc
in
jbe
std
mov
xor
aaa
loop
aaa
dec
cmp
into
int
adc
xlat
dec
rclb
data16
pop
mov
popf
dec
jle
pop
in
push
cmc
shrl
mov
pop
push
xor
gs
mov
testl
cmp
mov
notl
loop
imul
cmp
ljmp
push
adc
sbb
sub
dec
jbe
pop
or
xor
push
dec
jle
loop
push
out
fs
sahf
jno
sbb
push
scas
xor
jmp
mov
popf
es
les
jecxz
int
repnz
repz
xchg
add
sub
fmuls
andb
push
xlat
aaa
pusha
cmpsl
inc
movsl
clc
rolb
insb
cmpsb
xchg
in
mov
jbe
repz
mov
adc
push
mov
pop
and
movsb
repnz
outsl
movsl
mov
mov
fmul
jmp
es
imulb
mov
and
lods
lods
lods
pop
push
mov
out
or
out
frstor
scas
jnp
js
inc
fcoms
push
test
push
xlat
inc
or
cmp
sbbl
cmp
jg
push
add
mov
cli
pop
stc
mov
sahf
jp
dec
clc
inc
sub
outsl
cwtl
cmp
xchg
ljmp
jbe
xchg
in
outsl
mov
inc
gs
notb
ficoms
fcmovbe
daa
cmp
cmp
pop
xor
iret
fisubrl
xor
xchg
jae
hlt
shlb
jge
scas
popa
mov
and
shlb
mov
loope
out
lcall
mov
je
mov
in
mov
paddusw
jnp
push
insl
jp
jne
adc
push
fs
jns
ret
stos
mov
push
mov
inc
sub
push
out
push
stos
ds
dec
imul
outsb
inc
int
mov
ljmp
repz
xor
data16
scas
ja
push
fdivrs
lahf
out
icebp
inc
dec
add
add
inc
jo
ds
cltd
xchg
mov
lahf
mov
aad
outsl
xchg
aad
add
outsl
pop
daa
pop
in
fmulp
lods
or
inc
mov
sub
cmp
pop
add
mov
decl
xchg
jbe
into
inc
pop
popf
mov
mov
lds
outsl
push
sub
pop
add
in
jnp
jmp
mov
pop
popf
bound
or
enter
jle
pop
dec
mov
outsb
jecxz
in
dec
loope
add
pop
push
ljmp
daa
fstl
mov
nop
or
jge
xor
stc
scas
out
xchg
mov
mov
pop
jns
fistpll
push
mov
push
pop
inc
test
xor
jge
ss
je
scas
cmp
gs
call
and
adc
cmp
jbe
sbb
mov
das
mov
xchg
sar
stc
push
pop
in
mov
adc
mov
outsl
es
dec
jne
lret
and
mov
xchg
mov
cmc
fldl
xor
cmp
push
das
xchg
cmc
repz
mov
dec
rcrb
rcpps
xchg
ja,pt
leave
sahf
adc
pop
xchg
fcompl
inc
cmpsb
jb
ljmp
xor
inc
pop
dec
jae
cmp
sub
sahf
adc
imul
out
mov
sub
int
inc
push
push
rcl
or
jmp
fisttpll
test
mov
cwtl
faddl
leave
clc
mul
decb
shl
add
sbbb
xchg
adc
data16
je
push
add
shlb
mov
fwait
wrmsr
scas
pmuludq
sub
aas
dec
clc
jae
and
xor
mov
les
mov
lret
push
jae
out
insl
mov
frstor
test
pop
out
fsubrl
jg
pop
fildll
jno
push
xlat
out
pop
mov
or
cmc
mov
mov
xlat
xchg
push
jg
push
bound
cs
cs
inc
mov
xchg
out
xchg
ljmp
mov
ret
pop
sbb
ss
cltd
lds
jbe
cmp
xchg
ficoms
test
outsl
outsb
enter
gs
and
ss
out
addr16
push
dec
pop
insl
inc
pop
dec
push
lock
les
cmpsb
outsb
stos
faddp
in
pop
inc
add
add
cmpsb
sbb
lcall
mov
xor
mov
jne
aaa
pusha
inc
lahf
mov
sbb
je
icebp
out
mov
sti
sub
mov
mov
mov
cmp
fcomps
sbb
add
aaa
xchg
sbb
mov
and
loop
jge
add
mov
push
cli
jge
xchg
jnp
dec
sbb
enter
fcmovb
jb,pt
xor
data16
sub
sarl
shll
pop
and
or
push
test
push
ja
mov
outsl
call
mov
pop
in
movsl
add
fcomps
jo
nop
xchg
sub
outsb
popf
adc
enter
sub
cli
inc
ret
inc
xchg
dec
inc
jmp
or
push
sub
int
nop
pop
cmp
lahf
fcmovb
clc
clc
sbb
jecxz
cmp
lcall
inc
push
sahf
out
or
and
jmp
mov
push
mov
sahf
les
inc
sbb
mov
in
push
xchg
stos
loop
xchg
aaa
and
jle
rcrl
pop
mov
dec
test
lret
and
test
inc
test
clc
mov
xchg
iret
pop
adc
add
xor
push
xchg
lret
fiaddl
push
adc
adc
ret
leave
adc
fwait
pop
shll
out
enter
mov
push
sbb
dec
inc
aam
stos
cs
mov
les
inc
pop
movhps
cmp
mov
dec
test
mov
shrl
loope
mov
cmp
lods
rcrb
ss
imul
flds
mov
dec
leave
jbe
rcrl
adc
rcrb
repnz
mov
sahf
mov
sub
rcr
loope
enter
shr
test
push
shl
fimull
pop
out
mov
pop
test
outsl
sub
push
or
mov
lock
daa
inc
mov
daa
das
cmp
push
repnz
pop
sub
lret
xchg
fsubl
rcrb
push
and
std
pushl
andb
mov
mov
jmp
mov
jbe
out
call
sbb
out
inc
and
mov
inc
mov
cmpsl
push
xchg
push
push
dec
inc
push
loop
mov
or
pop
dec
jne
mov
loope
jno
cmp
and
lods
shlb
jecxz
in
std
push
inc
pop
mov
ret
lods
pop
adcl
adc
push
clc
loop
jecxz
add
pop
leave
icebp
int3
clc
adc
adc
dec
push
sbb
sbb
insb
mov
inc
mov
daa
outsb
and
out
jns
push
and
add
adc
insl
sub
sub
xlat
push
cmp
adc
lea
xor
xorb
mov
xchg
imul
out
fldl2e
mov
inc
sub
orb
test
sub
lods
lods
test
inc
cltd
mov
mov
cmp
sbb
stc
mov
int
iret
push
mov
sbb
inc
fstpl
cmp
call
jmp
popf
aam
lods
rcll
lret
push
aas
inc
push
lsl
rcrb
xor
jg
arpl
cmp
fadd
pop
pushf
push
pop
pop
lds
rorb
mov
cmc
xchg
aas
mov
xchg
int
mov
mov
sub
push
test
sub
xor
addr16
pop
lcall
shrl
sub
jmp
add
mov
outsl
cltd
and
loop
sbb
cmp
pusha
cwtl
pop
js
dec
movsb
scas
stos
ds
popf
dec
out
pop
xchg
push
add
or
push
push
in
jp
cmp
jo
repnz
leave
push
xor
in
xchg
popf
or
inc
dec
repz
cli
insl
cld
xchg
xchg
inc
cld
dec
in
scas
cmpl
lret
mov
sub
jg
in
add
xchg
das
les
in
cmpsb
mov
push
clc
lahf
jg
pop
ror
jge
movsl
out
in
dec
cmpsb
mov
sbb
leave
sub
mov
jge
imul
xor
pop
aam
fists
mov
in
adc
int
sbb
or
sti
pop
pop
mov
pop
inc
icebp
xchg
jg
jbe
mov
in
sub
jecxz
add
push
xor
sub
aad
data16
outsb
roll
loopne
jecxz
sbb
sbb
push
mov
add
cmp
into
and
aas
imul
fcoms
add
cmp
xchg
lahf
loopne
inc
daa
mov
push
testl
in
movb
jge
dec
bound
adc
or
repnz
stos
jo
test
fsubl
into
outsl
jns
hlt
inc
out
sub
pop
push
sub
clc
fwait
pop
xor
dec
or
loope
mov
imul
sbb
bnd
cltd
cwtl
scas
ja
nop
push
xchg
mov
mov
xchg
and
adc
mov
jnp
mov
xor
sbb
jl
sub
xor
dec
jbe
dec
dec
mov
jbe
test
clc
ljmp
fsubrl
jne
push
jo
and
loopne
daa
sbb
fiaddl
stc
mov
adc
mov
jp
pop
cwtl
ret
cmc
jle
leave
idiv
mov
adc
push
jo
rcrl
sbb
dec
xchg
xchg
cwtl
mov
adc
popf
sar
jnp
push
dec
idivl
in
jp
or
pusha
test
mov
imul
xchg
and
imul
dec
dec
adc
jno
test
leave
mov
add
sub
xlat
or
push
push
xchg
dec
imul
dec
insl
mul
xlat
int3
scas
ret
sub
adc
dec
or
cmc
push
sahf
scas
xor
pop
call
xchg
pop
scas
xlat
aad
ds
outsb
sbb
dec
notb
in
fmuls
sahf
outsb
jg
dec
daa
jge
add
repnz
cmpsb
inc
xor
mov
test
and
xchg
jge
lret
adc
xchg
and
xor
dec
add
outsl
push
hlt
pop
adc
imul
out
call
lahf
fcomps
xchg
mov
fmuls
add
les
pop
add
mov
mov
mov
push
psubq
aad
sub
popa
inc
mov
dec
push
push
test
jmp
mov
adc
or
dec
test
test
ljmp
shrl
adc
and
ss
or
sahf
fcoms
ret
fs
shrl
jb
stos
jp
cmp
mov
dec
cmp
xchg
shlb
mov
push
incl
xor
lds
lods
dec
lcall
mov
iret
sarb
and
mov
pop
mov
mov
pop
scas
aam
jl
add
xor
popf
or
xor
rcrl
ds
sti
fimuls
fstpt
hlt
pop
mov
iret
in
dec
mov
pop
xchg
push
push
adc
xor
out
loope
mov
cltd
jle
shrl
rcrl
lret
pop
test
cmp
push
and
movsl
or
cmp
loope
scas
mov
loop
call
int3
insb
jnp
rcrl
cld
lahf
aam
pop
dec
int
les
hlt
sbb
es
cmp
adc
inc
mov
testl
daa
dec
sub
mov
test
insl
into
outsb
in
sub
iret
iret
or
idiv
insl
mov
add
adc
sbb
rorb
fisubrl
subl
hlt
xchg
xor
sub
jmp
dec
out
outsb
add
xor
test
scas
or
loopne
mov
shr
sarl
dec
scas
repz
aaa
mov
xor
js
pusha
jg
test
mov
jb
pop
repnz
sbb
loope
rorl
std
or
jecxz
cmc
push
push
rcrb
sbb
mov
jmp
inc
test
cmpsl
fs
in
adcl
adc
repnz
sbb
fs
outsl
das
pop
push
xchg
inc
repnz
hlt
push
cmp
outsb
add
sahf
stos
push
adcl
jecxz
les
sti
xchg
push
mov
cltd
or
je
and
cmp
mov
push
add
jmp
pushf
repz
call
mov
cmc
sbb
movsl
push
out
xor
pop
in
push
outsl
call
sbb
cli
or
movsl
add
out
mov
cmp
rcl
fildl
push
push
xor
daa
mov
dec
loopne
fs
cmpsb
pop
and
jle
lahf
jle
sub
or
push
push
or
ljmp
out
inc
mov
pop
xor
lods
dec
je
dec
add
sub
outsb
gs
movsb
into
sub
aas
push
leave
loopne
nop
rcll
mov
dec
arpl
mov
mov
and
sbb
cmp
nop
rorl
sub
push
or
loop
adc
cmpsb
mov
mov
flds
xor
xlat
ss
in
xlat
cmpsb
int3
pop
adc
jg
adc
ret
in
sbb
lea
inc
nop
sbb
dec
inc
push
das
iret
cli
stos
pusha
ss
clc
push
add
adc
bound
sub
out
push
stos
into
les
sti
lahf
insb
stc
jne
pop
jle
bound
jo
xchg
aam
mov
sub
jge
bound
dec
fwait
xchg
jne
insb
fimuls
aaa
jae
cld
fs
idivl
or
into
add
addr16
sahf
insb
adcl
cmpsb
cmpb
fwait
mov
adc
pusha
push
clc
ss
scas
pop
pop
and
cmp
lods
jmp
sub
pop
pop
push
xor
and
xor
push
mov
nop
daa
cmp
adcl
sti
test
mov
adc
pop
push
das
shr
dec
mov
scas
jns
andb
xor
out
testl
xchg
fmull
scas
mov
sbb
inc
and
fildll
jg
test
pop
inc
shlb
cmpb
push
mov
into
aad
mov
jno
and
adc
ljmp
jno
popa
push
lock
inc
lahf
jecxz
mov
mov
int
orl
bound
inc
aas
ret
filds
loope
ret
les
cmp
jbe
fistl
lock
sub
jb
jbe
inc
orl
mov
mov
cmp
ret
xor
rep
aam
and
xchg
daa
adcb
imul
xor
les
or
xor
fwait
insl
xor
mov
addl
popf
shll
sub
or
repz
dec
push
std
stos
dec
xchg
jge
scas
loopne
lods
sbb
push
les
clc
bound
inc
pop
cmpsl
inc
jae
inc
out
out
loop
dec
jns
cmp
xchg
or
pop
shlb
sub
pushf
sbb
sti
xor
adc
mov
sahf
sbb
ljmp
out
mov
clc
icebp
adc
btr
jbe
mov
add
inc
jg
add
fsubs
test
pusha
pusha
xor
add
xchg
loopne
jle
push
jl
dec
enter
iret
push
js
inc
lock
aad
pop
ljmp
xchg
lock
hlt
mov
adc
lods
je
andb
inc
in
into
dec
mov
adc
jmp
decb
adc
sbb
push
or
inc
or
push
dec
addr16
pop
sub
and
nop
add
sub
lcall
add
cwtl
adc
jge
jno
sti
aaa
dec
frstor
call
addb
bound
scas
in
xor
and
adc
pop
pop
jae,pn
and
sub
ljmp
push
mov
push
cmp
ret
nop
scas
shrb
stc
subb
or
insb
pop
mov
add
xlat
dec
push
lret
testl
mov
mov
push
int3
fisttps
adc
cmp
test
lods
adc
sub
fsubl
push
ja
cmp
adc
cmp
lods
loop
mov
or
test
push
daa
mov
add
call
push
mov
aam
lahf
repz
jbe
insb
in
dec
pop
inc
imul
enter
int
or
mov
leave
test
lret
add
in
mov
aas
sub
or
add
inc
repz
or
aas
rcrl
mov
push
pop
xor
ret
outsl
cs
imul
adc
jae
mov
push
imul
ret
out
mov
out
aam
inc
pop
adc
jbe
shlb
push
or
xor
cmp
repz
dec
sub
lcall
xchg
and
popa
pop
lock
or
das
mov
in
jg
sub
pop
xor
gs
jae
out
mov
mov
outsb
insb
sbb
out
mov
jle
nop
rcl
mov
insl
data16
and
sbb
cwtl
aas
xor
sub
sub
jno
aam
arpl
push
out
mov
jl
mov
lahf
pop
mov
mov
and
dec
pusha
pusha
rcrl
cmp
call
mull
cmp
cmp
pushf
mov
sub
lock
dec
mov
mov
outsb
push
into
fwait
push
movsb
jne
sub
sub
xor
cltd
mov
or
xor
jno
add
pushf
mov
shlb
addr16
jbe
sub
push
push
sub
bound
leave
rcll
fwait
ret
insl
mov
xchg
ficoml
loop
xchg
inc
ficomps
dec
fisubrl
cld
icebp
mov
ret
or
xor
mov
jo
into
test
xchg
iret
lds
xchg
add
or
pop
push
dec
loop
jmp
daa
movsb
mov
sub
cmp
adc
mov
bound
pop
fistl
or
sub
add
sbb
imul
mov
movsl
xchg
mov
pop
push
mov
stos
inc
mov
cmp
xor
into
push
adc
ucomiss
xor
push
andl
jmp
adc
mov
testl
and
into
cmpsl
rcrl
enter
dec
shll
mov
push
clc
lea
jnp
pusha
out
or
cmp
enter
js
jb
aad
pop
in
jnp
stos
je
lcall
mov
mov
sbb
in
cltd
dec
pop
jmp
movsb
xor
jno
jecxz
xchg
les
js
shr
add
enter
push
scas
jl
adc
scas
addl
xor
mov
out
popf
call
pop
mov
and
data16
lcall
in
dec
push
add
fwait
dec
orl
divl
adc
sbb
dec
sahf
dec
call
mov
gs
push
scas
hlt
insb
in
xchg
dec
jp
clc
shr
idivb
adc
ret
mov
inc
xchg
cmovs
ja
hlt
add
fcmovnbe
sbb
dec
mov
std
fwait
inc
movsb
mov
in
int3
and
jmp
dec
call
add
jns
movb
push
inc
pop
adc
cmp
in
pop
pop
int3
push
add
cmpsb
xchg
mov
out
push
pop
inc
ja
dec
es
ret
lds
fwait
dec
lds
sub
jge
gs
mov
cmp
ret
pop
daa
mov
mov
adc
outsl
mov
jg
inc
aam
mov
xchg
push
popf
imul
sti
pusha
inc
ret
mov
pop
fs
mov
call
shl
pop
fdivp
xchg
jnp
mov
repz
and
stc
mov
mov
sbb
nop
ss
cmp
cmp
rcll
push
xchg
xchg
stc
fmul
mov
ljmp
testb
addr16
in
inc
icebp
outsl
aam
test
add
aaa
mov
mov
xchg
jg
or
enter
sahf
pop
sub
push
cmc
test
adc
ror
mov
popf
insb
jge
shll
or
mov
or
pop
stos
xchg
stc
scas
imul
adc
sub
lds
lock
sub
test
aas
push
ret
rorl
jmp
pop
rolb
repz
fisttps
loop
test
mov
cmpsl
out
jbe
sahf
out
jae,pt
movsl
push
push
add
popa
lret
mov
ljmp
cmpsb
out
and
xchg
cs
es
pop
add
enter
es
in
pop
and
imul
into
lret
jmp
lcall
mov
dec
xchg
lahf
and
push
bound
jns
in
popf
mov
cmpsb
ret
and
xor
xchg
pop
jb
xchg
hlt
scas
adc
addr16
outsb
jecxz
cmp
push
aas
cs
sbb
loope
stos
nop
mov
push
js
mov
dec
adc
mov
lcall
cmp
sub
xchg
pop
pop
adc
addb
xchg
popf
cmp
and
inc
push
dec
dec
loop
xor
cli
ret
xchg
push
es
cmpsb
fisubl
rorl
insb
lods
push
scas
push
mov
inc
sbb
sub
loop
rcr
jo
mov
push
shl
or
jno
xchg
mov
mov
jns
mov
lcall
fsts
jg
sub
incl
mov
xlat
sub
xchg
mov
pop
and
jbe
ret
mov
jnp
jne
jb
push
shll
fwait
pushf
push
jg
pop
jo
xchg
ret
xchg
test
loopne
out
clc
mulps
repnz
int
mov
mov
sub
std
je
aam
imul
out
gs
lods
cmp
repnz
test
inc
mov
push
stos
aad
in
xchg
cmp
push
lahf
add
scas
add
leave
in
mov
pop
pushf
xor
adc
sub
jmp
sbbb
adc
aam
repz
mov
sub
out
cld
outsb
mov
adc
dec
mov
enter
into
bound
or
stc
daa
pop
add
or
push
push
mov
jne
outsb
pop
add
jno
mov
repnz
cmp
lds
and
pop
lret
inc
lret
sbb
mov
sub
lret
fisttps
and
xchg
jnp
stc
cmp
movsl
cs
xor
and
adc
jo
sub
mov
or
dec
jbe
cs
dec
dec
jne
pushf
dec
addr16
sbb
jl
popl
xlat
decl
xor
lods
out
xor
jne
imul
mov
in
idivl
mov
sbb
cwtl
aaa
mov
ljmp
adc
in
aaa
xor
mov
idivl
test
call
loop
cmpsb
outsl
or
mov
int
neg
cwtl
faddp
loop
push
hlt
adc
sar
cmp
mov
stos
in
popa
sbb
cmc
inc
aas
sbb
ljmp
cld
stc
cmc
loopne
aas
mov
into
cwtl
test
lock
sub
addr16
jge
leave
jb
or
movsl
hlt
mov
test
es
dec
add
mov
and
xor
fmuls
icebp
cltd
inc
fincstp
popf
cld
or
scas
clc
sub
lcall
mov
out
sbb
jns
lahf
loope
sub
shlb
es
pop
push
aaa
push
mov
lret
pop
inc
fisttpll
push
bound
or
addr16
push
sahf
jl
add
cli
dec
xor
add
sub
push
je
hlt
push
pop
mov
sbb
push
fs
mov
inc
in
mov
dec
adc
sahf
sub
leave
dec
cmpsb
sub
notl
xchg
mov
cmp
dec
sbb
sub
mov
ja
inc
jge
xor
jae
push
insb
inc
rcrb
and
sti
mov
loop
dec
jmp
xor
sbb
cmpsb
pushf
mov
andl
push
adc
aaa
push
sbb
mov
jo
xor
xor
stc
mov
data16
adc
mov
inc
mov
es
iret
cs
sbb
enter
push
add
sub
ror
scas
js
ficoml
and
fdivrl
sar
mov
aad
xchg
mov
jnp
push
in
repz
cltd
out
arpl
or
adc
ja
mov
bswap
or
pushf
mov
mov
cwtl
xchg
xorl
lret
push
int3
push
es
dec
int3
ja
fcomps
lods
leave
xlat
in
movsl
das
ret
bound
ds
mov
sub
adc
mov
mov
in
xchg
sbb
push
mov
pop
imul
jmp
sub
iret
or
mov
jb
int
add
fldenv
popf
sbb
add
stc
add
sbb
outsb
mov
adc
inc
mov
and
clc
in
jl
push
mov
cltd
ljmp
push
mov
xchg
jg
jae
ljmp
pop
cmp
outsb
add
jmp
mov
pushl
sub
imul
f2xm1
sub
stos
int
insb
icebp
sarl
and
jl
popf
sbb
lds
pusha
shlb
xchg
jns
test
insl
insb
daa
cmp
mov
imul
flds
jne
out
mov
movsb
clc
or
leave
cmp
outsl
push
mov
xchg
loop
stc
sbb
xor
ds
mov
or
cmp
mov
xor
jge
movsl
jne
shr
dec
mov
or
ja
sub
out
mov
popf
insl
fldl
out
sbb
push
mov
push
push
mov
push
lods
enter
daa
pop
arpl
add
sbb
lcall
inc
or
cmp
xchg
pop
icebp
xor
jo
push
pusha
adc
lahf
negb
bound
pop
add
std
mov
mov
cli
pop
jne
or
jge
jbe
sub
dec
mov
push
adc
fstpl
push
in
add
bnd
jle,pt
cmp
cmpsb
test
rol
xchg
xchg
fsubr
mov
mov
mov
inc
testb
test
sti
and
jecxz
mov
repnz
test
out
cmp
jmp
xchg
call
stos
sahf
shrl
cmp
bound
shr
repnz
nop
sar
jl
bound
adc
ds
popf
jno
lcall
cmc
subb
enter
movsb
imul
stc
add
negb
popa
inc
add
gs
jle
inc
jecxz
cld
and
mov
sub
xlat
mov
nop
pusha
gs
outsb
enter
movsb
push
out
dec
arpl
jnp
in
in
andl
jl
inc
adc
gs
roll
xor
orb
and
std
and
mov
inc
adc
nop
xchg
or
stos
push
pop
inc
mov
shrl
lcall
jb
dec
pop
cli
adc
mov
mov
arpl
xchg
and
fstpt
pop
mov
add
out
lds
rcrb
inc
call
call
adc
mov
fmuls
lock
repz
dec
popa
mov
sub
fisttpl
xlat
repz
stos
test
scas
enter
push
js
dec
push
push
mov
add
aad
cmp
fistpl
dec
out
mov
jecxz
insl
les
js
in
repz
ja
xlat
rcrl
pop
imul
xor
test
sbb
xchg
mov
test
sarl
pop
adc
mov
and
pop
sub
adc
cmc
mov
fidivl
push
inc
sbb
test
sbb
aaa
sub
add
add
in
outsb
sub
lods
or
pop
inc
push
js
jge
sub
out
stos
jg
je
dec
push
cld
ret
pop
pop
sub
push
inc
fs
pop
add
scas
in
aam
mov
daa
mov
dec
mov
xor
ficomps
jmp
and
fiadds
mov
out
test
fwait
or
fdivrs
jle
popa
fcmovu
test
clc
fucom
jbe
jmp
fsub
lcall
dec
pop
mov
adc
mov
xor
hlt
enter
ret
test
jnp
sbb
mov
push
es
sahf
xlat
adc
mov
push
push
ss
push
pop
mov
shlb
push
xor
jmp
movsl
fs
sub
cmp
jns
rcl
lock
inc
and
push
sahf
add
insb
stc
or
dec
cmc
xchg
xchg
cli
mov
es
mov
loop
add
scas
push
popf
sbb
xchg
sbbl
pushl
pushf
enter
jmp
or
sahf
mov
push
push
nop
insb
mov
inc
shl
hlt
xor
mov
cmpsl
sub
add
adc
mov
in
jne
fs
mov
scas
sbb
dec
pop
sbb
and
and
fldt
fwait
sub
inc
inc
test
std
push
fcos
ret
dec
ret
inc
sub
scas
sub
adc
mov
jb
jae
push
dec
mov
xor
fnop
push
fisubrl
sbb
dec
icebp
fsubrp
sub
outsb
aam
cmp
rolb
pop
es
cmpb
xchg
sub
fwait
cmp
out
mov
and
call
jg
iret
jmp
mov
repnz
push
or
sbb
xchg
push
jo
sarb
js
inc
sbb
dec
cwtl
stos
sbb
jecxz
jne
sub
lahf
mov
add
and
xchg
lea
push
imul
add
jmp
das
pop
mov
pop
dec
inc
pop
pop
ret
mov
stos
mov
jle
mov
sbb
fcmovbe
mov
push
in
fdivrs
leave
fcomi
addr16
ljmp
inc
cli
mov
mov
add
hlt
jno
lds
push
loopne
xchg
pop
jge
test
mov
sub
sbb
das
or
xchg
mov
dec
sbb
xchg
out
faddl
fnsave
test
es
push
loopne
test
and
xor
adc
cmp
pop
push
notb
daa
lods
xchg
xchg
scas
jns
sar
mov
xchg
and
xor
mov
pop
pushf
repnz
add
insb
cwtl
add
hlt
lea
addr16
out
and
push
nop
or
push
les
inc
mov
lahf
adc
dec
pop
sbbl
pop
xchg
mov
stos
sub
cmc
xchg
xor
aaa
jle
pop
aaa
test
pop
push
adc
jecxz
aas
add
mov
loop
fcoms
or
push
lret
sub
ljmp
xlat
push
xlat
ret
shll
cmc
and
sub
inc
out
jnp
dec
xor
cwtl
test
or
dec
jge
shll
pop
call
add
ss
faddp
idivl
jp
mov
and
imul
mov
cmc
cwtl
push
and
xchg
fidivl
hlt
push
cmp
in
inc
mov
es
sti
outsl
adc
adc
jge
lea
aas
je
dec
shlb
fistpll
mov
mov
ljmp
punpckhwd
mov
jns
in
and
loope
adc
cli
push
mov
iret
testl
clc
ljmp
pop
cld
sahf
mov
stos
in
lea
jecxz
inc
adc
sbbl
sub
dec
into
xlat
cmp
pop
roll
mov
ljmp
jbe
aas
push
push
mov
cmc
test
ss
xchg
lcall
cmpsl
cwtl
pop
adc
mov
push
lods
xchg
adc
insb
cmp
inc
jne
mov
cmc
fistpl
mov
xor
inc
sub
in
xchg
push
adc
adc
xor
push
push
mov
mov
rcll
stos
pop
nop
pop
popf
cmp
lods
xchg
mov
ss
orb
bnd
mov
sbb
adc
and
or
push
dec
and
pop
repz
xchg
movsl
repz
jge
test
pop
jo
or
jmp
push
push
jl
and
cmp
in
inc
xchg
loopne
ds
sub
lods
loop
sti
mov
rolb
jns
rcrb
pop
cmpb
xor
roll
inc
mov
sahf
adc
push
scas
rcrb
cld
aam
mov
flds
cmp
outsl
mov
fcmovnb
xchg
jl
shlb
addr16
add
cmpsl
lcall
call
mov
xchg
adc
jnp
add
push
push
scas
stos
pop
popa
xchg
jnp
adcl
adc
loopne
xor
sbb
mov
movsl
lahf
jg
lds
xchg
shll
push
sub
es
inc
mov
xor
hlt
jge
mov
pop
mov
bound
imul
fstpl
ja
cld
test
pop
sub
fisubl
dec
mov
cld
leave
jle
cmp
sub
jecxz
jne
xchg
aam
push
adc
out
or
repz
andb
inc
push
insl
movsb
scas
outsl
sahf
mov
xor
std
rcl
cmp
test
stos
jo
scas
pop
mov
sahf
inc
jmp
cld
es
or
ja
mov
sbb
mov
mov
push
pop
bound
in
in
mov
jl
and
cld
xor
mov
int3
dec
mov
repnz
lcall
addr16
jle
mov
insb
and
in
xor
push
sub
stos
mov
jmp
popf
mov
or
sbbb
mov
scas
call
addr16
sub
les
test
mov
lret
adc
mov
xor
sbb
mov
and
popa
jns
loope
das
adc
fsts
lea
dec
movsl
movsb
push
mov
dec
les
in
cmp
int
mov
pop
leave
daa
push
iret
fisttpl
or
je
sbb
xchg
push
xor
xor
mov
rclb
std
mov
pop
add
ret
idivb
in
sbb
addr16
mov
adc
push
out
enter
inc
cmp
call
xor
sub
xchg
inc
add
mov
mov
outsl
fadd
mov
fstps
aaa
jb
pop
jp
mov
movb
jo
cmp
mov
inc
mov
je
popf
mov
mov
mov
mov
pop
das
ret
cmp
pop
inc
adc
sub
fbstp
pop
fsts
int3
pop
stc
dec
cmpsb
and
mov
or
stc
mov
das
lock
bound
mov
xchg
add
jo
lods
orb
sbb
dec
movsb
ss
bswap
push
insl
cmpsb
xchg
cmp
jmpw
loop
sahf
shll
xchg
jle
cmpsl
les
test
pop
sbbl
lods
movsl
lods
mov
adc
add
subb
jae
dec
cmc
sbb
lds
sbb
shrl
repz
xor
and
jecxz
popa
xchg
arpl
pop
cld
pop
fwait
mov
sub
push
aam
in
mov
mov
mov
loopne
sub
fs
ficompl
add
cmp
mov
out
dec
jecxz
aas
sbb
nop
mov
repz
mov
push
subb
add
xchg
lds
mov
push
adc
push
out
test
add
dec
add
add
cmp
idivl
lods
stc
jbe
xchg
inc
sub
lea
adc
xchg
mov
lods
imul
cmp
lock
fsubl
fdivr
repnz
jmp
jmp
xorl
sub
scas
adc
pop
js,pt
lods
add
loop
pop
adc
mov
jno
leave
js
push
cmp
pop
les
push
pushf
fldenv
cltd
mov
mov
ja
adc
pop
scas
and
inc
dec
mov
mov
push
jns
pop
imull
sub
cmc
push
lods
mov
add
out
in
adcb
imul
xchg
dec
rclb
fidivrl
sbb
hlt
xor
scas
sbb
dec
mov
adc
xor
mov
mov
lds
or
xchg
and
mov
js
les
cmpsb
xor
nop
lcall
pusha
ret
addr16
jae
xor
xor
aam
cmp
xor
jo
mov
aaa
into
movsl
decb
cmpsl
cmpsl
inc
rcll
cmp
sub
dec
jo
pop
adc
call
adc
sti
icebp
cmpsl
xor
mov
test
clc
xor
or
stos
mov
dec
mov
lds
lcall
pop
call
lods
pop
shlb
filds
dec
add
push
inc
sbb
xor
imul
fwait
aam
cmpsl
hlt
aas
or
test
fwait
lahf
test
mov
mov
inc
gs
sbb
mov
mov
leave
cld
fbstp
sub
push
outsl
fisubl
ret
xor
adc
lahf
arpl
push
or
pusha
ret
add
mov
mov
xchg
inc
sub
test
inc
mov
xchg
int
adcl
in
push
je
inc
jp
push
rclb
lahf
loope
test
js
and
fisubrl
sbb
xor
jmp
adc
repz
inc
push
add
dec
sbb
lret
mov
or
xor
js
lods
es
sbb
out
pop
cmp
lret
cmp
test
xchg
dec
push
imul
cmp
xchg
pop
test
mov
xchg
es
xchg
jae
out
jle
sti
icebp
cmp
shll
in
push
inc
add
cmp
sub
scas
popa
add
inc
dec
pop
xchg
shrb
sar
jmp
jp
lcall
and
pop
xor
ficompl
mov
adc
pop
bound
or
jnp
data16
jbe
cli
mov
js
ss
mov
call
pop
mov
push
stc
cmp
scas
jno
fsubr
rolb
test
repz
aad
loope
push
adc
lds
ret
push
pop
mov
scas
pop
mov
or
clc
mov
loop
xor
xchg
std
jno
cltd
psrld
stc
or
es
aad
inc
rol
andl
xlat
sarl
push
push
addr16
dec
sbb
pop
int
lret
decl
adc
ljmp
adc
mov
mov
mov
std
lods
cs
push
out
push
jo
dec
mov
test
mov
shll
or
fcompl
mov
les
cmp
notb
loope
test
fwait
push
notl
jno
mov
cld
stos
mov
mov
dec
outsb
ret
nop
or
loope
sti
or
insb
mov
lods
js
xchg
sub
lods
cltd
stc
sbbb
test
sbb
insb
and
dec
pop
mov
sub
imul
sub
lods
inc
arpl
pop
repnz
sub
int
imul
test
mov
roll
cmpsl
fisubs
jbe
or
fbstp
pop
mov
or
out
add
mov
adc
push
jb
push
mov
or
int3
adc
movsl
cmpsb
fmul
scas
xor
mov
ljmp
pop
ds
dec
cmp
sub
mov
insb
inc
adc
ficoml
into
dec
ret
sahf
cmpsl
ja
inc
xor
and
jecxz
test
mov
pop
dec
inc
jmp
scas
iret
xchg
aad
sub
adc
or
mov
lock
jbe
leave
or
ja
rcrl
mov
mov
dec
ret
test
lahf
pop
adc
push
fisttpll
or
mov
jmp
and
clc
std
dec
gs
daa
adc
dec
adc
mov
mov
ss
dec
push
arpl
cmp
cmpsb
sub
inc
xchg
push
jb
lret
out
test
std
pop
outsl
ror
jbe
loop
js
inc
repnz
aas
or
scas
les
jmp
jb
bound
jns
shrl
dec
movsl
pop
or
stos
mov
adc
enter
lds
dec
dec
adc
sub
xchg
push
out
mov
inc
es
push
movb
jmp
out
pop
adc
jo
into
xchg
nop
call
xor
outsb
mov
inc
sbb
xlat
pop
pop
cmp
or
inc
lret
sbb
lods
test
jae
daa
adc
mov
into
push
mov
int
jno
mov
ja
jno
ljmp
loopne
pop
repz
incb
cmp
ss
and
outsb
dec
imulb
and
push
lret
xchg
ss
jno
fimuls
adc
js
or
sbb
adc
imul
adc
mov
jo
pop
xchg
push
lds
scas
call
push
jg
sbb
popf
mov
negb
jnp
sbb
sub
inc
push
or
pop
cld
dec
mov
inc
inc
sbb
xlat
push
in
fdivrs
mov
xor
dec
inc
mov
dec
into
test
push
push
lods
lods
loop
fsts
pop
shr
jae
cltd
and
in
outsl
push
loopne
mov
adc
mov
fcomps
or
aas
fcmovbe
inc
mov
loop
push
pop
mov
sbb
outsl
ja
insb
imul
insb
jle
ffree
and
mov
sarl
fisubl
shlb
xor
cmpsb
push
mov
mov
add
jge
loop
dec
jl
xor
dec
jnp
movsl
dec
pop
outsl
pop
xor
fs
call
mov
call
fists
in
mov
cltd
sub
or
shll
stos
call
mov
inc
xor
int3
rcr
dec
xchg
test
in
fistpl
outsl
adc
dec
icebp
ss
pop
shrb
js
int3
insb
sahf
shlb
call
mov
ds
adc
mov
fiadds
mov
inc
inc
test
jbe
mov
not
sub
cmp
pusha
int3
std
mov
mov
push
orb
enter
das
fs
test
daa
add
mov
imul
ret
shlb
add
ret
jge
push
ss
addr16
in
sbb
pop
in
sbb
pop
cltd
jl
and
push
gs
outsb
cmpsl
int3
push
rcrb
sahf
xor
mov
jle
fdivr
adc
or
into
stc
out
push
xor
mov
ljmp
jle
sbb
mov
pusha
cmp
movl
mov
pop
sbb
jp
jb
sbb
add
xor
mov
rcr
dec
leave
mov
loope
mov
jnp
or
jge
lahf
cmc
shrl
sbb
outsb
test
xchg
popf
adc
cmp
arpl
scas
roll
xor
inc
pop
outsl
mov
xorl
in
xchg
mov
and
push
frstor
inc
hlt
je
mov
cld
or
cmp
jle
nop
fucomip
inc
sub
inc
inc
mov
gs
sbb
int
pop
xor
daa
xchg
aaa
out
in
mov
mov
mov
or
imul
cmp
xor
jae
fdivr
jo
loope
or
fs
pop
outsb
jb
enter
mov
or
inc
push
ret
and
jg
fsubrp
rcrl
cmc
xchg
fwait
loopne
xchg
sahf
and
mov
inc
pop
xchg
pop
sub
fildll
mov
mov
mov
inc
or
jb
and
aam
outsb
pop
clc
push
ss
sbb
lret
dec
mov
les
ret
mov
push
rorl
ja
movsb
mov
sti
sub
iret
push
insb
mov
dec
mov
push
xchg
mov
es
mov
popa
sbb
add
orl
faddp
add
jmp
lcall
inc
imul
pusha
das
add
xchg
mov
sub
and
in
mov
nop
dec
imul
adc
adc
repz
mov
nop
pop
xchg
rclb
sub
test
js
stos
dec
shlb
mov
inc
outsl
pop
sbb
adc
or
add
xlat
ss
cmp
cmovbe
add
loopne
sbb
andl
mov
stos
sbb
add
loope
dec
shll
out
jno
in
enter
in
mov
mov
loop
xor
sub
mov
lcall
out
jno
mov
jnp
add
jae
fsts
ljmp
pop
mov
jge
dec
pop
clc
xor
mov
call
or
in
push
xchg
cmc
jbe
ss
xlat
loopne
imul
jb
xlat
or
repz
xor
push
pop
cmc
push
lods
add
movsl
shrl
sbb
xor
pop
int
insl
mov
rorl
push
ret
aam
inc
inc
loop
ss
aam
rorb
dec
rcll
idivl
and
rcrb
dec
inc
jno
push
fsub
jnp
inc
jg
mov
pop
sbb
cmp
dec
adc
pop
add
dec
sub
dec
rcll
add
xchg
pop
out
or
push
cmp
dec
loope
dec
mov
in
addl
call
xor
icebp
popa
test
cli
xchg
dec
in
or
sti
gs
or
jl,pt
pushf
push
add
jle
fwait
aad
push
stos
loopne,pt
mov
inc
jb
pop
and
mov
sbb
std
mov
xchg
call
xchg
jae
dec
ss
stos
dec
mov
rcll
fists
js
ret
xchg
push
fidivl
jp
xchg
out
xchg
xor
nop
std
rorb
aam
leave
leave
jnp
sahf
icebp
pushf
ret
xchg
mov
movsb
mov
xchg
std
jb
adc
int3
xchg
jge
repnz
adc
inc
mov
push
fstl
fcom
xor
dec
addr16
mov
push
cmpsb
xor
sti
push
arpl
or
add
leave
lock
ja
ret
ret
mov
test
lret
arpl
adc
stos
outsl
dec
rol
fstp
jmp
fwait
sbb
daa
xor
test
pop
pop
dec
popa
jl
lret
mull
cmp
adc
sbb
subb
mov
inc
jbe
aas
mov
faddl
and
mov
mov
mov
roll
and
mov
iret
clc
adc
and
aam
lock
ljmp
cmp
into
fstpl
xchg
sub
lock
sub
sub
notb
xchg
xchg
cmpsl
jl
test
stc
and
lea
push
mov
inc
jns
sub
push
fldt
cli
imul
mov
scas
mov
in
jge
dec
xchg
mov
xor
fwait
mov
push
pusha
aam
sbb
jne
cmp
cmp
mov
and
sub
movsl
inc
fwait
or
out
ja
pop
mov
movsb
ds
xchg
mov
jae
lods
aam
mov
lret
xor
mov
sub
xlat
or
jo,pn
jbe
cltd
cmp
xor
and
data16
or
xchg
jbe
ret
and
jne
xor
lret
pop
mov
lahf
fwait
divb
cwtl
xchg
jecxz
adc
arpl
adc
push
mov
mov
imul
pop
cmp
in
add
xor
xor
adc
cwtl
sub
sub
jecxz
push
xchg
jo
pop
inc
cmp
mov
je
mov
pop
insb
in
test
shl
fdivrl
test
xor
rorb
mov
xchg
int3
dec
inc
pop
pop
lds
xchg
cmp
jle
xor
mov
decb
cli
or
div
dec
outsl
sub
cld
mov
xor
xlat
jo
enter
cmp
mov
pop
ss
add
stc
movb
cltd
or
enter
push
mov
xor
aas
fwait
sub
ret
clc
sbb
lcall
jbe
adc
mov
stos
mov
cltd
xchg
xor
dec
movsl
jo
push
xchg
mov
and
mov
call
cltd
add
jo
push
jae
aaa
icebp
and
aad
pop
jge
pusha
lahf
mov
popf
cmc
movsl
xchg
xor
mov
lods
std
out
aad
or
dec
xchg
pop
adc
mov
push
and
shl
fs
notb
add
mov
and
dec
push
out
jg
dec
mov
mov
fstpt
stc
mov
ljmp
jecxz
adc
xchg
call
cmp
outsl
sti
popf
sti
xchg
mov
adc
inc
mov
add
push
or
sub
js
mov
or
aas
mov
push
jge
bound
xorl
bound
lret
in
cmp
pop
pop
rorl
mov
mov
and
jp
jmp
fcoml
sub
cmc
dec
jnp
fisttpll
repz
ret
add
cmp
inc
pop
std
popa
mov
repz
mov
test
pop
repz
out
mov
aam
std
lret
push
adc
mov
sbb
mov
imul
fisubs
inc
adc
xor
push
mov
popf
push
adc
sub
push
pop
cmp
jno
out
shrl
sbb
ret
jg
and
popf
push
jle
mov
pop
cmp
call
fdiv
and
adc
push
scas
pop
adc
lret
filds
mov
shll
xchg
dec
adc
mov
add
inc
sahf
out
outsb
inc
fwait
sti
jl
ss
mov
sbb
daa
push
sti
jno
mov
out
and
inc
pusha
xchg
adc
ss
jge
fcmovbe
stos
enter
dec
sbb
ficoml
fidivrl
sub
xchg
gs
movsl
mov
pushf
cmp
cld
test
push
xor
xchg
shll
dec
fadds
loopne
gs
and
test
inc
and
es
mov
pop
repz
push
mov
sub
stos
dec
dec
rorl
fstl
dec
add
scas
sbb
test
cmp
gs
or
ja
xor
inc
push
imul
pop
fdivs
dec
sbb
cmp
scas
dec
pop
stos
adc
lea
sub
cmpb
pop
mov
push
mov
fwait
xchg
push
cmp
jne
push
incl
adc
orl
pop
cs
add
push
sbb
stos
repnz
xchg
lret
aaa
icebp
rcrl
or
push
test
xorb
pop
mov
cmp
jg
test
in
sbb
dec
das
inc
in
addr16
cs
daa
push
lds
push
push
jbe
adc
pop
int
lcall
ror
je
ds
in
stc
lods
xlat
mov
mov
xchg
sub
xchg
dec
mov
rol
mov
xor
fimuls
sub
inc
push
push
aaa
div
cld
jp
mov
shr
adc
jecxz
movsb
rol
dec
rcrl
movsb
cwtl
mov
test
mov
aad
cmpps
and
cld
dec
lea
in
jns
loopne
ja
sbb
or
dec
aas
mov
sub
dec
fadd
cmp
cmp
in
movsl
int
add
add
addl
mov
fsubl
ficomps
jle
pop
inc
inc
push
sub
adc
outsl
or
mov
pop
fld
and
aad
idivl
outsb
addr16
lods
jno
arpl
mov
cwtl
in
jne
and
add
in
mov
int3
dec
dec
arpl
inc
fstps
mov
aaa
mov
sbbl
sbbl
xor
inc
add
ret
fcompl
pop
scas
sbb
ret
jp
push
lret
dec
ror
dec
sbb
lcall
mov
xchg
xchg
push
jge
or
rorb
jnp
inc
mov
jbe
aas
pushf
pop
pop
pop
xchg
mov
repnz
push
dec
mov
cld
pop
push
dec
mov
pop
mov
push
movsb
push
and
cmc
mov
sub
sbb
aad
les
stos
sarb
std
mov
popf
mul
sub
pop
gs
ficoms
xor
movsb
pop
mov
test
outsl
and
in
scas
adc
mull
shll
enter
iret
cld
mov
fstl
jne
int3
dec
daa
cmpsb
fdivl
inc
push
movsb
xchg
jne
cmpsb
add
in
sahf
or
sbb
aas
clc
fstpl
out
inc
cmpsl
iret
lods
popa
sbb
mov
xor
push
rorl
loop
sahf
and
ret
push
into
scas
push
es
inc
inc
ficoms
jnp
ljmp
cmpsl
outsl
sbb
iret
outsb
add
cmpsl
hlt
loope
cltd
push
push
dec
sub
cmp
sahf
in
lret
inc
mov
fwait
pop
stos
xor
test
cld
jl
jg
mov
insl
lock
insb
push
fists
mov
or
incb
aaa
outsl
add
push
dec
js
inc
test
dec
pop
add
dec
mov
mov
jge
js
sbb
fs
mov
in
mov
mov
ficoms
push
sbb
xlat
add
mov
lea
in
popf
mov
lahf
ljmp
test
push
fsubl
mov
inc
in
stc
fldcw
adc
test
ss
or
ret
movsl
stos
sub
lods
or
mov
mov
dec
sbb
dec
int3
fcoms
adc
out
pusha
sub
fstps
es
mov
push
je
neg
lock
mov
test
incb
roll
xchg
and
jbe
xor
mov
add
mov
mov
fbstp
fcompl
add
pop
jmp
js
or
stos
adc
jnp
sub
fcomp
add
push
sub
push
sbb
pop
hlt
into
enter
jg
dec
xor
xchg
jns
popf
in
sti
in
sbb
pop
jmp
clc
add
add
movsb
fisttpl
hlt
or
cmp
xchg
gs
mov
adc
adc
or
push
js
cs
mov
xchg
ret
or
ljmp
mov
fldl
or
dec
sahf
sub
xchg
lret
cmpsl
mov
rcrl
rcll
cli
into
xchg
jnp
or
or
or
inc
push
mov
sbb
and
rcl
sbb
iret
jp
sbbb
lock
daa
arpl
hlt
stos
mov
mov
mov
add
sti
sbb
nop
jns
sub
mov
xor
lea
inc
les
and
jne
sub
scas
addr16
imul
jb
icebp
inc
lods
std
sub
adc
ds
in
sbb
sub
push
adc
inc
mov
dec
mov
inc
inc
lret
test
adcb
arpl
cmp
imul
dec
sub
lock
pop
iret
push
hlt
xchg
cmp
imul
mov
dec
sbb
mov
xor
sbb
insl
aaa
mov
testl
mov
adc
inc
stos
ret
mov
xor
rcrb
or
xor
mov
jmp
cmp
ja
aaa
cmpsb
pusha
inc
aad
pop
repz
sub
jl
fdivl
jg
pop
push
hlt
mov
subl
int3
and
jle
pop
mov
das
mov
and
dec
jmp
pop
jmp
pop
add
in
xor
pop
jge
out
cld
scas
mov
push
mov
test
loopne
ja
fisttpl
arpl
jecxz
mov
adcb
ss
cmp
lea
push
sar
cmp
dec
sub
push
adc
jl
or
and
fldl
jle
jecxz
lock
xchg
push
jne
in
shrb
jns
jno
je
xchg
push
movsb
aaa
andl
xchg
xchg
addr16
adc
push
aad
int
sbb
ret
add
sahf
imulb
xor
arpl
and
add
adc
rcll
movsl
aad
fsubl
push
sarb
mov
fs
ljmp
lea
ret
out
dec
jne
or
fisubs
fs
shll
mov
je
fisttps
fcmovb
mov
and
cmp
adc
adc
pop
jl
les
int
aas
push
call
inc
xor
sbb
outsb
add
xor
shlb
xchg
push
pop
in
sbbb
push
xchg
lds
xchg
mov
aas
or
fbstp
or
hlt
neg
test
add
sub
lods
orl
in
ret
lds
inc
pushf
les
pop
fs
pavgw
loope
retw
subb
pusha
push
fnstsw
add
loopne
jb
iret
and
stos
out
cmp
mov
les
jmp
in
jo
out
lds
rcll
in
inc
xchg
xor
and
dec
call
or
cmp
mov
sub
mov
loope
pop
jno
stos
push
rcll
jns
fdivl
mov
lods
fsub
dec
xor
loope
gs
push
or
andb
mov
and
xchg
dec
push
cmp
sbb
call
sub
sbb
sub
iret
ret
fdivrl
and
or
fisttps
aad
repnz
dec
loopne
call
jb
xor
jle
pusha
stc
add
sar
aaa
or
loopne
inc
add
push
xchg
fcos
cmp
das
push
xor
jp
mov
fcoml
sub
jg
dec
pushf
call
sbb
mov
cwtl
add
sub
data16
stos
test
idivb
or
pop
inc
nop
das
std
add
push
push
sbbl
addl
outsb
push
mov
mov
negl
adc
sbb
loop
fnstsw
in
cmp
lea
lahf
push
push
dec
push
les
xor
jae,pn
adc
fwait
xchg
adc
popa
sbb
xchg
repz
enter
push
sbb
sbb
pop
mov
mov
adc
xlat
nop
cld
clc
pop
into
add
add
xor
fdiv
push
cmp
jae
xchg
es
fcmovne
inc
je
push
pop
fcmovb
pushf
dec
out
aas
stos
jmp
dec
dec
dec
movsl
jp
dec
fmuls
stc
jnp
lcall
scas
mov
sti
and
adc
mov
pop
mov
mov
fwait
cmp
add
mov
gs
into
push
cltd
xor
fldcw
mov
jp
mov
fs
pop
mov
mov
inc
lds
lock
stos
fwait
jge
sbb
rclb
jg
lock
cmp
jge
in
xlat
jp
and
out
les
cwtl
sbb
push
mov
loope
lret
and
fidivrs
adc
xchg
punpckhwd
mov
adc
push
es
push
jge
scas
iret
xchg
test
out
and
and
push
sbb
sti
and
test
push
cmp
lcall
loopne
fistpll
roll
sbb
ds
mov
dec
mov
out
sub
test
and
cmp
lds
lea
repnz
mov
mov
jbe
mov
lahf
mov
in
inc
inc
iret
push
loopne
test
cmc
sub
fidivrs
and
xor
cld
xor
repz
xchg
daa
sbb
dec
in
mov
pop
mov
mov
int3
psubsw
lret
loopne
mov
and
or
jnp
into
loope
sub
fstpl
lcall
dec
popf
call
test
dec
inc
mov
out
mov
fnsave
jno
out
xor
cwtl
fwait
dec
adcl
outsl
leave
daa
mov
sub
pop
mov
sbb
mov
negb
cmp
lahf
mov
ss
cmp
mov
push
cld
xchg
xlat
fwait
mov
fidivrl
mov
dec
imul
jmp
cmc
pop
loope
push
inc
mov
std
sti
dec
push
test
cld
inc
call
cwtl
aas
mov
shlb
lcall
dec
andl
mov
and
wbinvd
les
fsub
sub
shr
movsb
outsb
or
or
leave
xchg
lds
xchg
popa
jne
into
in
cmpsl
jne
cld
cmp
or
test
adc
shr
xchg
mov
popf
mov
sti
in
and
mov
in
rcl
push
xlat
jae
lock
or
xor
ficomps
repnz
push
aad
outsb
mov
sub
cmovbe
xchg
cltd
xchg
mov
mov
sub
add
mov
pop
pop
dec
or
incl
bound
shlb
fucomip
loop
cmp
ffree
movsb
push
imul
shlb
and
call
mov
adc
movsl
xchg
add
data16
mov
xchg
dec
jnp
int
cmp
cmp
pop
pop
lret
inc
sti
enter
pop
ret
mov
and
jns
fsubrs
jae
add
mov
clc
jns
sbbb
aad
sbb
xchg
add
and
insb
stc
push
sub
add
ss
fcompl
and
jnp
push
aaa
in
jno
punpcklbw
xchg
push
push
jecxz
in
pop
int3
add
dec
xchg
inc
lea
dec
jbe
roll
sbb
inc
sub
test
inc
adc
out
xor
jbe
lods
xor
insb
or
dec
test
in
jbe
test
jmp
or
insl
jne
and
xchg
adc
mov
ja
bswap
add
mov
es
and
add
cmp
sahf
aam
pop
fsubrs
iret
xchg
or
scas
dec
jbe
jg
push
rcr
mov
sub
pop
lods
icebp
adcb
dec
dec
pushf
xor
insb
je
frstor
outsb
pop
xor
movsl
pusha
jno
xor
push
jne
aad
rorl
cmp
mov
test
leave
mov
xor
fpatan
pop
push
int
inc
out
mov
into
insl
xchg
cs
sub
push
pop
cmp
lods
push
pop
xchg
aaa
pushl
cmpsl
and
divl
lock
add
push
jo
dec
mov
daa
and
cs
dec
addr16
mov
jecxz
lds
into
add
mov
or
sub
add
lock
jae
adc
jno
jbe
add
or
pop
fsubp
jecxz
and
out
sbb
test
cltd
cmp
out
daa
aad
addr16
inc
std
cmp
iret
adc
sbb
mov
nop
mov
sbb
sub
xchg
cld
adc
lea
xor
ja
lret
sahf
xor
jecxz
rcrl
mov
dec
and
loopne
lds
inc
cmp
push
jo
sub
pop
int
rolb
push
cmc
xchg
rorl
mov
sub
dec
pushf
push
push
sbbb
stos
dec
das
mov
and
mov
xchg
imul
push
outsb
out
outsl
jg
fildll
or
and
push
cmpsb
lret
dec
in
adc
scas
push
add
push
adc
push
lret
mov
not
popf
xor
int3
out
movsl
hlt
into
pop
subb
and
push
test
pop
push
pop
dec
fwait
inc
lret
test
call
mov
or
stc
loop
fxch
adc
jns
lds
popf
mov
arpl
sub
scas
mov
xor
xor
push
aaa
out
push
out
ds
dec
popa
xchg
xlat
call
jmp
daa
int3
call
movsb
jmp
mov
or
aas
cmpsl
pop
cli
add
jle
mov
xchg
cmc
scas
mov
test
popf
or
adc
mov
push
movsl
mov
lahf
lret
dec
cmp
das
sbb
jl
cmp
push
jae
mov
in
mov
test
insb
arpl
cld
jmp
int3
xor
sub
inc
push
fstpt
mov
pushf
imul
push
sbb
sub
roll
mov
mov
and
sub
call
jb
scas
aaa
test
cmpsb
mov
std
xchg
lods
sbb
mov
lods
mov
subl
scas
add
insb
or
sbb
xchg
xor
rorb
insb
xchg
call
dec
in
add
cmpsl
mov
jg
inc
sbb
inc
ret
mov
push
mov
xchg
dec
push
mov
pop
arpl
mov
jns
xchg
outsb
rclb
movsb
jnp
xchg
pop
lea
int
sahf
pop
add
nop
hlt
or
aaa
xchg
jb
sub
lds
in
inc
sbb
in
lcall
sub
aas
mov
loopne
incl
mov
out
stos
pusha
push
in
repz
sbb
shll
jmp
cmp
clc
ds
jmp
in
int
push
jl
ret
xor
fmuls
fimuls
add
cmp
xor
mov
fisubrs
loope
pop
mov
xchg
pop
int3
jl
cmc
mov
xchg
test
mov
mov
sub
fcoms
jns
imul
pop
mov
pop
repnz
loop
jecxz
in
sub
outsl
sbb
movsl
insl
push
lods
movsl
and
jp
mov
adc
dec
sub
dec
push
jne
fdivl
jl
out
sub
fdivp
push
je
es
inc
mov
dec
lret
stos
or
scas
jl
mov
add
arpl
jne
in
push
pop
mov
cmp
push
stos
push
fstpt
jge
push
cmc
sbb
loope
aas
and
in
adc
mov
and
add
and
and
xor
aam
mov
shll
sub
inc
loopne
clc
and
pop
inc
dec
or
testl
mov
imul
seto
xor
jne
out
xchg
subb
pop
sub
std
movsl
loope
aad
lea
out
shlb
xor
lcall
cmp
insb
dec
pop
mov
add
test
aad
jl
icebp
leave
add
push
outsb
jp
popf
fldcw
inc
mov
sbb
mov
mov
flds
sub
and
or
sbb
mov
call
ds
jmp
jmp
cs
inc
loope
ja
test
push
gs
fisubrl
mov
enter
pusha
dec
jg
mov
xor
fcmovnb
push
stc
jo
inc
fadd
daa
sub
dec
shlb
adc
mov
adc
jge
or
push
fs
cwtl
pop
lahf
push
sbb
hlt
pushf
pusha
dec
xchg
xchg
xchg
out
aaa
mov
test
add
or
jg
or
inc
and
dec
imul
out
xchg
mov
lea
xchg
enter
loope
lds
cmp
test
stc
cmp
pop
xchg
fists
inc
inc
xor
pushf
mov
or
imul
xor
push
cwtl
jb
imul
gs
mov
negb
sti
push
into
jnp
inc
add
cmp
mov
xlat
popf
sarb
sub
dec
clc
ficoml
lea
lea
iret
bound
adc
mov
sar
lea
mov
push
fucomip
sub
cmp
punpckhwd
mov
lea
push
mov
aaa
inc
fcompl
fdivrs
sbbl
dec
loop
fucomi
ss
lahf
push
jae
stos
pusha
jmp
xchg
cmc
int
cmp
push
sbb
es
fbld
pop
add
sbb
test
mov
cmp
jae
enter
into
xchg
aad
adc
arpl
lods
ja
loopew
out
pushf
adc
push
dec
repnz
loope
ja
pop
jp
out
sbb
or
mulb
pop
ds
mov
adc
insb
es
or
mov
ret
add
xchg
jp
aad
mov
inc
sub
xchg
sub
das
les
stos
insb
fdivrs
sbb
sbb
sahf
out
mov
lahf
jmp
dec
out
xchg
push
mov
inc
cmpsl
inc
cmp
int
sub
ss
fwait
jl
pop
cmp
loop
xor
or
xorb
push
sub
add
enter
mov
sbb
icebp
sub
loope
aas
sub
push
mov
adc
add
int
inc
cmp
xchg
add
cmp
pop
sbb
jmp
sub
push
and
ja
sub
data16
jle
les
ret
data16
ud1
xchg
ljmp
mov
and
fildl
pop
inc
ds
icebp
xor
push
shll
lds
fildll
push
ficompl
rorb
xor
lcall
pop
pop
arpl
outsl
sarl
cmpsb
mov
mov
cld
std
in
sahf
sub
enter
adc
rorb
jne
aam
jns
les
jecxz
adc
mov
sbb
jle
dec
fldenv
pop
sbb
gs
mov
add
iret
loopne
jbe
jbe
out
mov
adc
and
dec
in
repz
mov
mov
call
or
adc
inc
pop
ret
movb
mov
jle
mov
sbb
cmp
jmp
xchg
repnz
aam
mov
dec
inc
adc
fcoml
cmpsl
movsl
cmovs
dec
fcoml
pop
adc
dec
je
ret
inc
rolb
addb
mov
ljmp
bound
stos
push
cmc
push
in
xchg
fs
xlat
out
mov
cmpsb
pop
sbb
adc
out
out
shll
cs
popa
pop
pop
pop
adc
mov
mov
clc
loop
aam
loop
jmp
mov
and
cmp
pop
inc
ja
sti
mov
std
nop
fbstp
adc
add
ss
push
outsb
int
imul
sbb
dec
daa
and
je
loope
mov
or
stos
sbbl
cmp
lods
fsubs
dec
mov
inc
pop
push
int
add
push
decl
inc
and
xor
cmpsl
scas
fists
inc
cmpsb
add
aam
pop
or
pop
sub
xor
aaa
in
xchg
out
mov
daa
pushf
xchg
clc
sahf
jmp
and
inc
inc
pop
test
mov
adc
xchg
out
jnp
add
pop
inc
inc
mov
and
rcr
lock
dec
icebp
stos
and
xor
xchg
and
cmp
test
lock
cmpsl
clc
int
int
jno
std
movsl
pop
inc
aaa
inc
scas
test
fcompl
je
pop
pop
loop
push
idiv
xchg
test
inc
inc
jl
in
xor
test
dec
sub
xor
mov
or
pop
ja
mov
inc
cmpsb
inc
xor
das
hlt
add
push
loop
dec
mov
mov
cmc
cmp
push
sbb
clc
xorb
xor
add
xchg
lret
dec
mov
mov
cmp
and
dec
mov
sahf
dec
push
add
aaa
shrl
fstpl
cmp
sahf
in
or
stos
dec
mov
mov
test
fldcw
push
cmp
dec
dec
lret
pop
mov
add
xorb
test
cmpsl
mov
fld
rorb
mov
jae
cmpsb
repz
fsubrp
jbe
mov
fs
rolb
add
dec
lods
pop
mov
add
adc
dec
movsb
arpl
mov
mov
add
popw
call
mov
mov
xor
cmp
cmpsl
mov
xor
inc
fiadds
adc
loope
mov
std
and
pop
push
das
cmp
cmpsl
adc
cmc
rclb
sub
mov
dec
mov
dec
aam
jne
sub
push
lods
add
stos
jge
push
sub
or
fdivs
sahf
lahf
add
hlt
and
sub
fwait
mov
xchg
iret
sub
or
dec
sub
scas
movsl
movsb
inc
movsb
in
ret
icebp
ret
stos
inc
inc
inc
mov
fdivrl
cwtl
mov
sub
cmp
lcall
popf
xor
lret
inc
test
popa
and
pop
out
shll
sbb
adc
mov
push
push
add
sub
outsl
addb
adc
dec
pop
incb
roll
pushf
lea
inc
jmp
cmp
mov
xor
xchg
jmp
xlat
outsb
mov
cmp
ss
xlat
lods
or
lcall
mov
lahf
cld
xchg
mov
pop
xorb
pop
gs
pop
sahf
pop
push
movsl
in
mov
inc
push
xchg
cmp
sub
add
mov
not
lahf
icebp
mov
sub
fwait
insb
mov
add
js
fisubrs
jb
sub
out
xor
cwtl
push
movsl
mov
add
std
or
out
daa
or
scas
iret
mov
mov
popa
mov
sub
and
icebp
daa
jb
cmp
push
nop
pop
inc
dec
mov
adc
subb
icebp
mov
cmpsb
out
in
int3
hlt
stos
cmpsl
push
mov
mov
and
push
int3
loopne
ds
xchg
in
out
test
or
ja
jecxz
add
pop
sbb
outsl
adc
in
fistpl
dec
inc
insl
mov
sub
or
fists
fisubs
insb
aaa
sbb
xor
out
jns
sbb
mov
mov
pop
sbb
and
pop
lock
cmp
hlt
aad
movsl
mov
mov
cli
testb
jo
jge
sbb
pop
xor
and
xor
dec
jg
inc
jp
popf
test
notb
fs
adc
adc
jne
jns
hlt
and
out
lds
dec
mov
xlat
insb
faddl
mov
add
out
int
les
das
dec
pop
or
mov
stos
arpl
xchg
js
dec
sbb
mov
jg
negl
rcrl
fiaddl
pop
mov
mov
mov
mov
aas
sub
push
outsl
sub
clc
jp
xor
mov
jle
imul
push
inc
inc
fimull
popa
xlat
enter
mov
sub
ds
and
xor
loope
add
xor
xchg
mov
int3
inc
fidivrs
lods
sub
pop
sbb
fs
push
push
adc
mov
xchg
xor
sub
mov
in
ss
jo
xchg
mov
pop
fisttpl
fidivl
jg
fsubl
jnp
add
cli
rclb
popa
aad
jl
dec
pop
mov
in
movsl
xchg
dec
add
adc
movsl
daa
mov
lret
test
dec
dec
jae
adc
es
nop
push
adc
push
push
add
pop
lcall
dec
sub
in
cmp
jbe
lods
outsb
shl
loop
ljmp
imul
call
xchg
adc
mov
rcl
pop
cmp
sub
and
pop
lret
and
push
cmp
ss
push
data16
sub
dec
lret
mov
aas
jp
jae
rclb
mov
dec
scas
mov
pop
loopne
push
cmp
pop
ficoml
shrl
les
mov
imul
shrb
sbb
xchg
or
push
xchg
dec
call
cmp
jp
cmc
and
mov
inc
cli
and
xor
cmp
push
jle
dec
mov
xor
pusha
mov
sbb
pop
mov
les
jge
cmp
jge
int3
in
cwtl
cmpsl
outsl
xor
push
fs
pop
inc
jg
push
push
or
mov
push
xor
das
sbb
aam
xchg
pop
iret
mulb
dec
cmc
mov
xor
sti
mov
outsl
comiss
jp
call
dec
lahf
dec
mov
rcll
sti
popf
imul
ds
inc
fnstcw
popa
sti
pop
pusha
ss
pop
pop
adc
cs
sub
mov
add
dec
int3
jno
imul
xor
dec
add
pop
jl
pop
xchg
cmp
enter
test
jbe
xchg
mov
fidivl
pop
jge
jb
cmp
loopne
xchg
lcall
cmp
xchg
add
imul
in
icebp
mov
pusha
mov
cmp
xchg
jecxz
ljmp
pop
idiv
push
mov
fidivrl
jae
pop
xchg
jae
mov
sbb
and
and
dec
pop
lods
xor
es
mov
fiadds
dec
or
mov
cmpb
sbb
mov
adc
jge
jmp
shr
and
sbb
gs
dec
jbe
ret
ret
lea
out
fists
jae
push
aad
je
inc
and
gs
jo
mov
mov
or
movsb
divb
mov
mov
push
js
dec
xor
or
int
xchg
push
pop
push
jno
std
ret
mov
in
xchg
pop
xchg
int
jg
push
lods
inc
js
push
mov
jmp
lea
add
test
hlt
dec
push
sub
cli
rclb
fsts
fistl
shll
cmpsb
inc
mov
lods
push
dec
shl
push
xchg
add
mov
sarb
adc
push
sub
cwtl
ret
mov
fwait
aad
out
test
addb
jl
and
push
addl
dec
mov
mov
sub
mov
fsubrs
pop
push
insb
mov
imul
stc
dec
cmp
inc
inc
mov
gs
sbb
out
sub
mov
std
test
addl
xor
out
pop
add
icebp
push
xor
xor
push
pop
int
lds
jbe
cmp
mov
push
iret
dec
fstps
inc
push
sbb
sub
mov
add
mov
inc
sub
testl
imul
fimuls
nop
loopne
sahf
pushf
adcb
movsl
pop
push
inc
loopne
mov
ss
and
lds
pop
les
subl
in
jl
fxsave
test
imul
or
cld
repnz
cli
inc
sahf
jo
sbb
shlb
push
and
xor
int3
adc
jle
movsb
std
sti
sbb
fisttpll
out
movsb
adc
int3
mov
sbb
mov
mov
test
mov
int3
sbb
lcall
or
xchg
xchg
push
push
and
jbe
jmp
pop
ljmp
mov
sbb
stos
push
jl
lock
rcrl
ss
sbb
cmp
mov
insl
into
jecxz
fwait
xor
jl
ljmp
push
repz
sti
out
sbb
cmpsw
lret
inc
inc
test
push
aad
mov
and
outsb
pop
pop
sub
jae
and
xchg
inc
mov
inc
leave
pop
add
mov
ja
inc
pop
jne
or
push
xor
out
push
dec
lea
js
dec
bnd
xchg
push
adc
insb
and
xchg
lock
std
dec
inc
addb
mov
sbb
jge
test
add
lahf
out
test
cmpsl
sbb
ja
pop
sbb
jb
pop
cmp
jge
adc
jnp
int
and
push
lock
mov
add
das
mov
mov
sub
test
ret
cmpsl
xchg
sbb
cmp
scas
ljmp
pop
js
pop
loop
mov
jns
jge
lret
push
movsl
cmp
xor
cmp
fwait
loopne
arpl
and
push
pop
jnp
lods
das
and
sbb
cmp
daa
insl
push
outsl
aad
sub
pop
jl
arpl
dec
jns
sti
sbb
adc
mov
dec
mov
mov
fs
add
cmpsl
imul
xor
inc
xchg
inc
aam
xchg
cmp
xchg
fcoml
daa
adc
aas
sbb
mov
movsl
xor
mov
add
sbb
add
popa
sbb
sub
jmp
mov
repnz
mov
mov
psubw
mov
cmp
cmp
cltd
test
lock
scas
sub
sbb
stos
push
pop
push
ljmp
stc
in
xchg
scas
sbb
push
mov
add
add
add
rclb
mov
gs
inc
mov
fbld
pop
cmpsb
xor
or
jne
cmpsl
cmpsl
repz
cmpsb
cmp
cmp
stos
push
scas
call
aad
and
jmp
adc
imul
xlat
add
fldz
pushf
clc
jecxz
pop
enter
jg
inc
dec
inc
xor
jl
sub
fstpt
popf
add
outsl
xchg
addr16
cmpsl
ljmp
cmpsb
pop
sti
jo
shr
xchg
cmp
jg
dec
cmp
cltd
loope
jb
mov
jge
or
bnd
or
out
add
xchg
in
mov
dec
les
jg
stc
sbb
ficoml
test
jl
add
lea
imul
pushf
jp
sbb
pop
js
sbb
out
xor
arpl
and
clc
cmpl
stos
andb
je
add
nop
pop
pop
mov
stc
negb
aad
aad
jmp
adc
push
jae
jae
insl
shr
fwait
rclb
and
inc
jno
xor
jo
scas
outsb
add
mov
xchg
lret
into
mov
arpl
cmc
push
clc
push
push
pop
xor
subb
xlat
fstl
pop
shll
jg
sub
test
imul
mov
movsb
sbb
inc
pop
imul
test
pop
lea
ss
pop
fmuls
xchg
mov
jo
sbb
test
in
xchg
jl
daa
mov
xchg
mov
out
andb
inc
lcall
dec
dec
movsl
js
xor
pusha
mov
xchg
push
cmp
or
sbb
jge
xchg
xlat
repz
lods
pusha
shrl
xchg
ret
insl
lods
mov
lods
cld
outsl
lock
out
inc
jnp
lret
sbb
mov
fimuls
mov
adc
mov
cltd
movsl
xchg
xlat
dec
jge
xchg
in
clc
loope
mov
enter
xor
leave
test
mov
cmp
fisubl
add
or
inc
ss
inc
in
sbb
dec
mull
cmp
dec
add
loope
ljmp
jns
xorb
cmp
orl
inc
mov
xchg
sbb
test
ret
push
pop
push
or
mov
es
push
nop
roll
mov
add
pushaw
sbb
aas
jl
and
pop
rcrl
mov
fcoml
in
stc
jbe
cmp
xchg
jo
js
in
add
push
lods
and
push
in
jl
test
mov
dec
lods
movsb
pop
mov
xor
and
das
mulb
rcrl
cmc
in
imul
cwtl
repz
sub
lds
movsb
orb
dec
lret
loop
adc
cmpsl
aas
ds
in
mov
inc
sahf
js
push
inc
mov
pop
xchg
and
pop
movsl
or
adc
mov
lds
sahf
jecxz
or
pop
iret
cmpb
xchg
mov
jnp
pop
ret
popa
or
dec
or
sub
mov
sbb
cmp
xchg
in
cmpsl
push
pop
iret
mov
insl
imul
cmp
lock
jl
jge
sub
gs
add
mov
sub
in
push
mov
or
adc
push
ja
push
push
lret
mov
mov
push
mov
adc
xorl
repz
pusha
in
imul
mov
lahf
sbb
push
sbb
pop
push
fstpt
iret
add
cld
sahf
xor
mov
in
inc
out
ja
shr
cltd
xlat
orb
cs
int
or
mov
fdivrl
in
dec
xor
popa
ja
ret
inc
stc
arpl
lods
push
mov
inc
inc
sub
fiaddl
aaa
adc
inc
addr16
cmp
lods
test
push
push
mov
xchg
leave
mov
lret
fldenv
cmp
jbe
pop
mov
and
pushf
mov
cmp
mulb
hlt
ljmp
fcmove
mov
inc
ss
inc
cmc
push
imul
cmp
inc
mov
cmc
sbb
and
lcall
hlt
je
cli
ret
mov
jle
outsl
out
cmp
insb
out
push
cmp
mov
push
sbb
ss
inc
cmp
jb
sub
or
add
and
sbb
sub
sbb
das
stc
push
pop
mov
clc
push
sbb
fcoml
clc
je
mov
sbb
pop
cmpsb
es
negl
cmpsb
lret
jg
out
shr
out
mov
int3
shll
sbb
sub
mov
dec
int
inc
stc
cmp
jns
rcr
push
mov
test
push
cmp
pop
shll
je
cld
or
movsl
cmp
int3
mov
mov
lahf
ret
dec
mov
subl
cs
dec
nop
movsb
inc
filds
leave
mov
adc
jle
mov
mov
adc
shlb
je
and
loopne
and
aaa
cs
test
add
pop
ja
pop
cmp
mov
inc
cmc
sbb
mov
pop
popf
nop
pop
xchg
dec
fwait
push
iret
pop
test
mov
xchg
mov
and
out
outsb
cmpsl
mov
dec
jge
xor
sbb
lods
and
mov
adc
dec
mov
cwtl
int3
nop
inc
or
sub
out
sbb
dec
mov
xchg
mov
pop
dec
out
aas
add
inc
pop
ss
mov
sbb
popf
adc
je
jle
jp
mov
nop
pop
imul
or
pusha
xor
data16
adc
pop
es
mov
mov
sahf
push
and
divb
xchg
ficoms
dec
test
ljmp
jg
dec
add
hlt
ficompl
sub
push
mov
mov
pusha
sbb
mov
pusha
movsl
rol
scas
and
push
test
xor
fdivl
mov
int
sub
mov
jp
sahf
pop
jno
dec
mov
insb
mov
mov
pop
movsb
push
lahf
cmp
ror
and
hlt
arpl
aam
rorb
icebp
cmp
sub
cwtl
in
inc
lods
xor
add
add
je
jle
pop
aas
roll
dec
pop
je
imul
pop
pop
push
aas
pop
ljmp
int
xlat
or
loope
or
xchg
data16
and
mov
scas
repnz
adc
inc
mov
lods
add
mov
aad
clc
es
mov
xor
pop
xchg
cmp
push
push
mov
call
leave
outsl
and
loop
mov
xor
pop
cmp
inc
mov
fsub
divb
stos
insl
sti
ja
xchg
add
mov
test
jl
fisttpll
ja
je
popf
insl
fs
add
sbb
in
leave
gs
cmp
cld
cltd
sub
imul
jno
pop
sbb
cmpsl
add
enter
pop
mov
or
int
mov
rcl
mov
sub
xor
mov
lret
cmc
icebp
cmp
cmp
jle
jae
stos
sbb
xchg
jne
sbb
jl
orl
cmp
or
aam
add
jecxz
xor
hlt
imul
addr16
lcall
cs
sbb
mov
pusha
jl
xor
or
mov
push
jle
test
cmpsl
or
sbb
jne
add
mov
inc
je
adc
bound
cmc
in
pusha
sbb
push
cltd
pop
mov
cmpsl
jne
aas
mov
mov
popl
mov
imul
insb
lret
fwait
test
orb
stos
rcr
mov
push
mov
dec
sub
outsb
sahf
inc
pop
imul
pop
cmpsb
in
and
push
rcll
test
push
mov
ds
bound
ret
pop
aad
ljmp
js
outsl
and
popf
jns
push
xor
jae
xor
adc
nop
push
mov
cmpb
sub
aaa
sub
aas
inc
in
imul
xlat
out
sbb
subl
mov
xchg
xor
jmp
inc
out
push
out
jp
xor
rolb
inc
sub
push
mov
cmp
cli
cmpb
nop
scas
inc
jae
mov
cld
jmp
cmp
ds
fisubrs
notb
sub
rcr
addr16
movsb
sti
rcr
ret
mov
or
insb
sub
pop
repz
adc
mov
cmp
mov
mov
nop
and
xchg
lods
ret
out
stos
test
cmpsb
adc
fisubl
in
repz
mov
pop
es
jmp
dec
sahf
xchg
cmp
out
push
pop
mov
mov
dec
xor
mov
mov
stos
xor
push
call
subl
push
pop
push
pop
xchg
loop
fimull
outsl
sbb
cmp
fs
mov
sub
push
cltd
sahf
or
and
jnp
mov
setnp
popa
outsl
stos
xchg
scas
test
inc
inc
pop
popa
insl
sbb
xor
inc
push
int3
outsl
push
enter
pop
sub
fistpll
icebp
cmpl
enter
or
adcb
outsl
insl
cwtl
jo
cmp
ret
adc
inc
xor
sbb
or
dec
or
mov
out
mov
loopne
xchg
mov
push
add
jbe
dec
cmp
cmp
or
or
adc
xchg
xlat
xchg
ret
sbb
pop
and
in
lahf
add
scas
jecxz
push
adc
lret
sub
sbb
mov
sbb
scas
call
or
stos
xchg
dec
jb
je
sbb
pop
imul
insb
push
mov
arpl
icebp
outsb
mov
dec
cmpsw
lahf
cs
fcoml
pop
or
cld
loopne
jge
sub
aam
or
add
sub
cmp
lcall
out
das
adc
lds
xchg
dec
jae
lret
lcall
jne
add
lods
cld
mov
clc
test
pop
add
cli
xor
add
sub
hlt
dec
xchg
ja
sbb
mov
inc
bound
loopne
mov
addb
adc
outsl
jb
scas
and
std
pop
ret
jl
int3
daa
popa
rolb
ds
inc
or
sbb
lock
mov
adc
and
pop
fdivs
mov
inc
out
fnstenv
imull
rolb
je
sub
jecxz
arpl
nop
lods
xor
movsb
imulw
cmp
test
scas
test
inc
cmp
cmp
loop
js
mov
mov
cwtl
xchg
aam
mov
xchg
sti
inc
pop
movsb
or
inc
mov
nop
js,pn
pusha
leave
sub
inc
jnp
pop
js
pop
cmp
rolb
movsl
popa
lock
cld
int
int
sbbl
call
lcall
mov
popa
xchg
jmp
mov
inc
inc
arpl
pop
jecxz
rorb
cltd
and
not
add
inc
mov
or
arpl
je
enter
cmp
push
mov
cltd
xchg
and
pop
push
push
cmp
out
insl
mov
cmp
outsb
pusha
rolb
pop
sub
xor
cmpsl
mov
xchg
lods
push
push
add
lret
ficomps
sub
mov
add
jbe
dec
es
neg
into
xor
cmpsl
ds
aaa
mov
pushf
pop
loopne
shlb
fdiv
repz
pop
inc
add
pop
hlt
es
jl
stos
inc
xchg
cmp
in
and
test
jmp
shlb
inc
ret
call
mov
inc
push
fbstp
sub
out
rcl
xlat
push
out
cmpsb
sahf
dec
gs
enter
xchg
dec
or
ljmp
ret
cmp
add
mov
scas
mov
fidivs
std
sbb
jge
mov
lret
sahf
popa
or
sbb
xchg
ret
jge
push
dec
cli
clc
int
or
hlt
add
adc
sbb
mov
xchg
jecxz
mov
push
pop
out
inc
test
fisubrs
nop
cmp
sbb
test
xchg
pop
cmp
out
adc
mov
push
push
pop
or
es
popf
movsl
lods
pusha
xor
mov
xlat
in
sti
adc
das
flds
cmp
test
add
ret
inc
adcb
inc
pop
jnp
into
sahf
cmp
addl
pushf
mov
stos
xor
mov
jbe
mov
lods
pusha
ja
scas
lret
adc
xor
cmc
mov
pop
or
ljmp
fnstenv
cmp
lcall
pop
sahf
xchg
jb
sub
sbb
ror
adc
outsl
insl
sub
std
popa
jbe
inc
xchg
mov
insl
lods
movsb
inc
stos
xor
roll
pop
cli
mov
and
sub
dec
jns
nop
xchg
xchg
adc
shll
adc
push
ret
fisubl
lret
sbb
and
leave
call
mov
dec
movsb
daa
pop
popa
addr16
pop
fisubl
xor
push
arpl
sub
dec
sahf
xchg
loop
cmpsb
jmp
into
adc
daa
ljmp
ret
mov
pusha
jno
xchg
rorb
loopne
add
cmc
sub
mov
push
ss
dec
into
adc
ds
mov
sti
xlat
mov
xor
pop
xor
mov
popa
jno
or
push
arpl
negl
rorb
test
call
inc
cs
icebp
cmp
mov
jbe
leave
test
shld
sti
in
mov
rcrb
and
ss
sbb
lret
mov
and
mov
gs
xor
orb
test
rorb
lret
inc
mov
sub
inc
pop
fdivr
fstpl
xor
iret
mov
sbb
and
add
std
pop
xchg
inc
push
inc
fistps
add
sahf
push
lahf
sti
int
lea
mov
mov
aas
leave
pop
mov
sbb
popf
push
into
popf
pop
dec
push
or
arpl
lret
cmp
and
cmp
pop
inc
sbb
mov
jno
add
scas
lock
or
sub
cmp
or
je
sti
les
or
into
cli
sbb
pop
cltd
ljmp
clc
sub
out
mov
stc
ds
jne
and
jmp
pusha
shll
lret
mov
mov
leave
nop
lahf
loop
cld
jb
push
les
dec
add
cmp
pop
cmp
and
sub
testl
outsl
inc
adc
cmp
sarb
and
sub
in
or
mov
cwtl
sbb
stos
mov
push
inc
sbb
mov
into
cmp
clc
inc
jp
test
pop
push
pop
mov
test
or
mov
xlat
ss
lret
xchg
idiv
lods
iret
addr16
push
mov
xchg
pop
loope
fwait
and
fdivs
push
lcall
mov
push
mov
shr
roll
pop
fs
stc
dec
mov
js
bound
inc
adc
cmp
cld
mov
add
repnz
adc
inc
pushf
mov
or
mov
push
popa
ja
out
pop
mov
stos
mov
pop
icebp
pop
ficoml
adc
int
popf
mov
dec
je
jns
dec
shll
idivl
outsb
icebp
or
adc
jecxz
inc
sarb
or
jl
jae
shlb
jb
mov
xchg
test
jg
movsl
dec
fisubl
or
and
sub
push
or
clc
cmp
mov
cmp
mov
jecxz
ret
imul
mov
bound
jns
in
add
lcall
aam
bound
lods
lcall
ljmp
push
test
add
outsb
mov
or
in
xor
adc
push
pop
into
mov
push
fists
inc
je
mov
mov
ficoml
cmp
push
xor
mov
enter
cmc
mov
sbb
mov
xor
and
mov
sbb
shll
cmp
cld
lret
or
adc
jmp
cmp
mov
dec
shrb
or
in
jge
mov
jge
or
dec
test
fs
aad
pop
mov
mov
pop
test
xchg
fdiv
dec
hlt
sub
xor
cmp
pop
mov
xchg
sub
sti
notb
into
lods
les
cmp
xor
clc
ror
inc
cld
mov
or
int3
hlt
xchg
push
rcrb
mul
stos
adc
mov
repz
or
and
in
pop
ficompl
or
popf
fildll
and
call
cmp
pop
clc
xchg
mov
adc
mov
shlb
lock
or
insl
jl
test
sub
cmp
std
jo
xchg
fs
sbb
loope
adc
inc
int3
dec
stc
insl
jno
jmp
in
xor
inc
push
adc
lods
test
sub
shrl
sub
mov
jbe
cmp
pop
push
mov
xor
add
negl
inc
mov
stc
dec
in
shll
std
cs
int3
mov
inc
insl
or
xor
pop
leave
shl
scas
adc
mov
sub
pop
inc
inc
sub
sahf
xchg
into
ficoms
mov
dec
add
mov
pusha
loope
adc
lock
mov
sti
into
pop
jns
mov
inc
bound
je
sub
adc
clc
sti
inc
pop
inc
in
and
movsl
fstpt
pop
stos
xchg
mov
adcl
cmpsb
jl
pop
inc
sbb
imul
mov
adcl
imul
test
imul
fldenv
lcall
cmp
mov
add
jno
adc
xor
imul
fidivrs
jp
cld
mov
and
sbb
dec
mov
sbb
or
mov
mov
inc
and
loope
sbb
pop
dec
lcall
movsl
sub
cmp
mov
add
push
dec
cmpsb
inc
mov
dec
gs
mov
pop
jge
add
enter
adc
adc
mov
cltd
pop
inc
outsl
jmp
or
or
mov
inc
pop
cmp
push
aas
cmp
pop
jmp
add
mov
in
mov
inc
leave
repnz
jne
fucomp
fwait
or
and
aaa
test
mov
int3
orl
dec
pop
add
les
mov
lea
xchg
ret
orb
mov
xorb
sbb
ja
fidivrl
outsb
loopne
push
cmp
dec
jb
jne
into
xlat
rcrl
cmp
mov
fwait
stc
push
jle
sub
stos
stos
stos
les
sub
or
cmp
lea
pusha
out
sbb
lret
push
mov
cli
cmpsl
es
lret
repz
and
daa
not
xor
push
popa
in
aad
cmp
rcr
imul
sbb
mov
jle
notl
adc
ror
xchg
xchg
pop
inc
pop
test
mov
aaa
frstor
pop
adc
sub
mov
jne
bound
push
push
sub
loop
push
cmp
inc
fbld
pop
push
inc
inc
movsb
sti
or
bound
push
arpl
push
in
mov
sub
shrb
leave
iret
call
popf
mov
xlat
aas
addr16
jecxz
xlat
sbb
push
jge
xor
js
shrb
sub
popa
jle
cwtl
mov
sub
mov
mov
arpl
leave
mov
jmp
rcrl
mov
popf
ret
xor
fadd
mov
cmp
lret
pop
outsl
movsl
sub
xchg
lea
mov
mov
inc
push
movsl
or
inc
sub
dec
pushf
push
jle
cli
insl
cmp
or
das
cmp
mov
fdivs
adc
jo
popf
sub
int3
popf
jne
xcrypt-ecb
cmpsl
lret
push
mov
out
mov
push
jle
jl
mov
fcomps
cmp
mov
out
or
and
arpl
cli
mov
pop
adc
xor
test
mov
mov
jo
mov
jl
out
push
pusha
push
shlb
or
xlat
mov
test
and
and
or
fistpll
mov
jle
iret
inc
and
xor
adc
jbe
cmpsl
push
xchg
or
shll
lret
stos
fs
call
pop
mov
xchg
scas
mov
cmp
dec
jge
push
pop
scas
add
pop
repnz
inc
bound
imul
fadd
mov
fcmove
push
pop
pop
cmp
sbb
mov
out
xor
aad
fadd
sti
outsl
and
mov
adc
aas
jecxz
mov
inc
mov
xorb
lret
int
adc
dec
push
ffree
inc
xchg
dec
sub
je
sub
sub
mov
loop
sbb
mov
sahf
movsl
and
mov
in
test
xor
cmpl
xchg
and
aam
sbb
je
dec
je
pop
sbb
cmpsl
in
adc
cwtl
push
aad
cmp
enter
test
pusha
js
bswap
stc
int3
fwait
bound
sbb
xor
and
repnz
pop
sbb
fsubrs
mov
iret
dec
bound
jg
mov
jg
repz
cmp
xor
add
xchg
xchg
data16
mov
je
mov
mov
in
cwtl
test
cmc
push
test
pop
jnp
inc
scas
and
jno
fsubrl
icebp
jl
mov
cltd
fucomi
lcall
jae
sub
js
mov
pcmpeqb
sarl
in
popf
jp
xchg
pop
sbb
cmpsb
pop
in
out
and
sti
push
fcomps
loopne
mov
or
pop
mov
xor
das
fwait
stc
jp
push
aas
sbb
mov
std
inc
dec
jne
sbb
mov
inc
xor
sub
aad
cmpsl
add
test
xor
inc
fnstsw
aad
test
cld
jl
bound
push
pcmpeqw
dec
cmp
subl
fiaddl
jl
mov
stos
inc
dec
mov
xor
xchg
mov
pop
mov
movl
push
push
xchg
out
lods
inc
mov
arpl
cld
movsb
sbb
insl
cmp
out
stc
mov
mov
push
clc
sbb
mov
or
jg
loopne
add
pop
loope
pop
int3
in
scas
adc
and
and
jnp
scas
sub
xchg
or
pop
scas
mov
popa
aam
js
jae
loop
add
adc
cmpsl
jnp
cmpsl
outsl
dec
xchg
out
jbe
js
rolb
push
and
mov
mov
hlt
mov
in
cwtl
lret
dec
mov
add
loop
sub
xchg
popf
popf
out
pop
lods
cmpsl
add
shll
mov
xchg
and
andps
xor
jg
dec
fcoml
std
or
xchg
add
mov
repz
aad
jle
sbb
xor
xchg
xor
mov
pop
pop
add
xlat
daa
subb
sub
sbb
inc
and
repz
out
das
pop
es
jg
adc
cmp
mov
sbb
popa
cmp
sti
cmc
pop
pop
xchg
mov
mov
iret
mov
cmpsb
mov
cwtl
std
xchg
pop
sti
data16
adc
das
xor
push
cli
fdivrl
dec
dec
aad
dec
xchg
fwait
sbb
cmp
inc
mov
stc
mov
push
test
in
lock
sub
hlt
lods
ljmp
incb
push
or
stos
test
mov
dec
mov
aas
shll
adcb
mov
inc
and
testl
mov
or
xchg
add
in
mov
adc
in
adc
dec
dec
lret
xlat
jmp
das
adc
lret
mov
call
and
ja
xor
std
sahf
ficomps
fimull
call
scas
aad
lods
inc
inc
bound
loope
pop
das
pushf
mov
pop
sub
mov
mov
or
push
jmp
mov
rcpps
mov
jae
gs
add
cld
add
pop
mov
adc
sub
js
xor
inc
rolb
sbb
adc
mov
mov
scas
xchg
iret
xchg
xor
mov
inc
je
mov
inc
cmp
test
dec
shlb
mov
inc
push
outsl
sbb
hlt
pop
scas
arpl
fbld
insl
dec
loop
lea
shlb
mov
jbe
jbe
in
aam
dec
inc
push
lea
jl
push
shl
add
xchg
or
jl,pt
pop
mov
in
adc
jns
xor
mov
xchg
ljmp
sub
mov
lret
repnz
mov
daa
cltd
xor
jns
adc
ss
xchg
lcall
negb
imul
dec
cmp
or
les
jp
incl
xchg
enter
sub
addr16
or
out
inc
adc
lahf
pop
movsl
andl
and
inc
fnsave
inc
cmp
test
loop
insb
fsts
inc
mov
lahf
mov
lahf
neg
cmc
and
add
jo
push
sbbl
push
bound
sub
sub
jns
pop
fisttps
roll
cmp
mov
xor
jne
aaa
sub
inc
xor
clc
sub
jge
sbb
sub
aad
or
dec
fwait
clc
push
movsl
mov
cmp
lret
fisubrs
popf
inc
jae
add
pop
xchg
inc
or
fwait
sub
sbb
sbb
pop
rol
jo
add
inc
fdivrs
mov
hlt
xchg
bswap
and
ds
dec
adc
enter
mov
in
mov
and
popf
inc
sub
sub
push
and
dec
rcrl
stos
fildl
imul
js
and
push
loope
inc
pop
mov
and
lret
mov
stos
cli
xchg
fistpl
cmpsl
or
hlt
dec
cmovne
dec
dec
fcomip
orb
shlb
subl
jb
aam
lods
sbb
ss
mov
adc
cmpsb
mov
loope
int
addl
xor
outsb
add
divb
test
loope
jo
inc
push
scas
mov
test
hlt
sti
xbegin
es
mov
pop
inc
pop
cmpsb
fxch
lea
push
cmp
fwait
aad
loopne
mov
mov
gs
push
arpl
outsb
pop
ja
stos
add
dec
cli
insb
xchg
xor
in
lretw
sbb
pop
popf
sub
cmp
mov
push
lcall
add
sub
mov
inc
cld
popl
pop
lahf
cli
enter
push
mov
sbb
pop
rcrb
fcoms
lcall
xor
iret
mov
fmul
jno
cmp
adc
xor
idivb
cmp
loopne
sbb
jmp
cs
mov
dec
out
test
arpl
and
stos
or
sub
in
mov
lods
dec
dec
inc
sbb
imul
lret
lock
mov
fwait
pop
lcall
mov
shlb
dec
fs
add
enter
adc
and
lds
or
test
outsb
cmpsb
repnz
jno
cmp
push
and
lea
mov
stos
add
popl
push
jge
cld
push
sbb
push
rorb
lock
mov
mov
dec
aas
jo
mov
or
lret
dec
ja
mov
int
enter
popa
je
add
pop
push
clc
idivb
cld
xor
std
dec
xchg
sbb
push
inc
cmp
bound
adc
inc
push
mov
adc
or
add
or
xor
sub
inc
cs
jns
in
fcompl
or
call
iret
adc
and
jbe
arpl
xor
popf
inc
pop
push
dec
jge
add
daa
flds
mov
clc
int
out
mov
arpl
or
std
jne
gs
mov
jle
scas
aad
loope
jb
mov
je
mov
loop
sbb
jmp
adc
out
fimuls
movsl
and
fstpt
ss
adcl
mov
es
lods
adc
hlt
adc
data16
xchg
xchg
repnz
jle
mov
out
outsb
cs
cmc
sahf
pusha
adc
push
lods
xor
das
dec
mov
into
sub
int
or
daa
loop
mov
inc
pop
pop
mov
add
mov
mov
mov
orb
xchg
fcomip
adc
scas
andl
sub
in
addb
and
adc
xchg
in
ret
pop
cmc
mov
ja
pop
aad
clc
xor
jle
push
dec
cli
test
pop
fld
pop
fwait
or
div
inc
insb
les
clc
aad
adc
dec
push
sarb
mov
jecxz
imul
dec
es
push
ficoms
mov
cli
cld
add
inc
push
or
push
mov
ret
pop
test
aad
sahf
pusha
add
cltd
xchg
idivb
rcl
xchg
nop
stos
je
outsl
cld
or
mov
pusha
mov
fucomp
loope
addr16
push
movsb
repnz
hlt
and
pusha
sti
push
sbbl
pop
imul
test
stos
jnp
mov
stos
and
sarl
daa
pop
data16
lcall
jnp
out
mov
or
mov
pop
xchg
test
dec
pop
cmp
mov
shrl
mov
js
sbb
rcll
cmp
adc
mov
addr16
int
aad
and
rcrb
mov
andl
fidivl
orl
jp
push
outsl
test
pop
popa
dec
xchg
adc
dec
push
lods
das
xchg
lcall
insl
fldt
push
adc
mov
mov
or
idivb
jne
mov
test
mov
mov
cmc
sbb
add
push
repz
jbe
cmp
push
enter
addr16
cwtl
fs
je
das
clc
sub
fimull
or
dec
and
xchg
ds
sbb
dec
jle
xor
scas
mov
push
xor
lret
xor
mov
aaa
mov
ds
sbb
inc
repnz
mov
data16
call
and
xchg
xor
das
cmp
jge
mov
jae
cmp
push
in
mov
mov
scas
or
sub
mov
xor
jb
outsl
mov
jg
mov
pushf
cmp
mov
dec
ror
in
out
cmp
es
lods
pusha
xor
jbe
fmuls
sbb
xchg
mov
cmp
loopne
aaa
sub
cli
sbb
rcrb
std
fbld
roll
mov
mov
xor
pop
mov
pop
test
fistpll
adc
sub
arpl
dec
rcrb
ja
inc
int3
mov
fidivrs
movsb
jnp
sub
xor
out
daa
inc
pop
fidivrs
mov
pop
mov
jne
lea
xor
jg
and
in
jge
imul
call
int3
rcrb
add
js
dec
pop
mov
add
cmp
xchg
and
inc
outsl
xchg
push
and
xor
popf
pop
sub
roll
adc
subb
fadds
ret
fdiv
shlb
sbb
fs
jge
jno
fs
repz
addb
icebp
sahf
mov
inc
fldenv
mov
add
push
and
sub
leave
adc
jne
cmc
mov
mov
xlat
jbe
es
inc
les
mov
shll
jne
ret
daa
sahf
lods
loopne
nop
enter
mov
ds
xchg
cmovl
inc
jg
xor
or
imul
cmp
push
mov
and
push
mov
call
in
aaa
adc
or
in
lcall
push
cwtl
dec
xchg
inc
jg
je
movsb
push
mulb
xchg
bound
mov
adc
pushf
in
ds
pop
cmp
clc
inc
xchg
filds
inc
cmp
cwtl
and
sbb
movntps
mov
inc
cmc
je
jmp
std
stc
int3
xchg
mov
rcrb
mov
in
fs
flds
xlat
movsb
sbb
aaa
mov
add
cmpsl
lea
xchg
fs
rcll
shrl
mov
gs
mov
jp
push
push
xchg
adc
pmaddwd
push
inc
loope
dec
sub
scas
lahf
dec
mov
sbb
pop
notl
push
mov
mov
mov
sub
rcrl
ljmp
xor
xor
fsubrs
shr
es
jbe
popa
int3
sub
nop
test
hlt
repnz
sub
popa
adc
cli
daa
daa
js
ja
ja
int
jle
pop
sub
xor
cld
scas
cmp
testb
ljmp
push
mov
dec
push
aad
and
stc
pop
pop
sub
int3
andb
inc
cli
sbbb
into
in
xchg
sub
movsl
les
lret
sbb
in
pop
int
add
lahf
inc
mov
xor
insl
insl
inc
out
ret
lock
popa
repnz
lret
bound
jae
xor
inc
push
idivb
mov
xlat
push
lret
cmp
sub
push
mov
adc
cld
cmpb
test
aas
jg
incl
cmp
repnz
adc
push
cwtl
xor
and
mov
inc
sub
loop
test
xor
pushf
lret
add
dec
test
or
iret
leave
push
cmpsb
mov
pop
mov
into
fstl
fs
enter
dec
out
mov
sub
stos
shrb
sub
adc
add
mov
add
cmp
push
popf
je
sbb
aaa
movsb
mov
cmp
popf
adc
addr16
aam
out
sub
inc
sub
and
rcrl
rol
lcall
dec
repz
iret
popa
mov
dec
jo
push
subl
mov
pop
mov
sub
xlat
dec
stc
fnstenv
in
xor
imul
cmpsb
mov
add
ja
mov
mov
shrb
cmpsb
and
lcall
into
mov
xchg
fsubrs
mov
cs
push
cmc
jbe
lods
dec
movsl
daa
xor
lea
les
dec
aam
cld
xchg
mov
xor
jle
pusha
mov
adc
cmc
mov
inc
enter
inc
push
add
push
jnp
mov
mov
inc
std
lret
mov
addr16
dec
ficomps
mov
shl
lcall
outsb
fdivr
out
mov
fwait
mov
insl
jle
inc
ret
pop
call
push
sarb
dec
lods
and
test
lods
mov
stos
push
subl
fisubrs
mov
inc
fwait
pop
and
lret
pop
das
nop
mov
adc
or
pop
sub
fidivs
add
repz
inc
jmp
adc
jg
xchg
mov
sbbl
push
sub
adc
sub
cmp
cmp
dec
or
or
xchg
jb
test
test
lea
add
dec
in
dec
mov
std
and
shlb
aas
ljmp
sub
jae
mov
movhps
cmp
gs
cmp
dec
xchg
xor
adc
test
mov
mov
and
or
jb
test
stos
push
mov
movsl
mov
pushf
fstpl
test
inc
out
dec
cmp
aaa
movsl
sub
das
xchg
inc
push
rcrb
into
in
sbbl
and
pop
mov
fmulp
adc
xor
test
jo
jo
popa
sub
xchg
orl
sarb
scas
push
andb
push
xchg
add
aam
repnz
add
gs
sub
jbe
bound
scas
dec
xor
or
push
in
subb
clc
iret
adc
jge
jl
inc
imul
loope
cmpsb
jmp
dec
mov
cmp
int3
pop
cmp
movsb
loope
and
popa
test
sbb
fwait
int3
faddl
pop
cmpsl
sbb
mov
xor
sarb
insb
fxch
in
aam
add
lret
jae
jle
jl
ret
stc
mov
cmpsl
movsl
loopne
lods
xor
and
dec
xor
jo
push
inc
jmp
adc
mov
push
xor
cmp
sbb
pop
cwtl
je
xchg
icebp
dec
sbb
pop
es
cwtl
sarb
push
lods
push
cs
push
lret
mov
jae
mov
dec
mov
xchg
aaa
lods
pop
daa
leave
inc
sahf
cwtl
sub
pop
xchg
and
aam
mov
test
sti
lcall
out
loop
into
ja
sbb
cmp
adc
pop
sub
pop
and
ret
scas
movsb
aad
sub
std
ret
push
inc
xchg
out
pop
or
mov
fists
push
aam
in
outsb
sub
mov
in
inc
cmp
mov
test
cmpsb
in
push
loopne
push
fcmovb
push
xor
repnz
lea
mov
sub
mov
mov
jmp
mov
shlb
pop
in
movsl
xorb
pusha
add
adc
push
sub
mov
sarl
into
jnp
mov
nop
sti
push
icebp
push
cmp
lret
xchg
subb
lcall
mov
sbb
and
mov
mov
jnp
incb
std
add
push
aaa
out
test
aam
dec
mov
in
inc
ja
aaa
jmp
repz
insl
sub
pop
sbb
mov
jo
icebp
test
jp
xor
push
pop
add
mov
push
push
sub
mov
jl
mov
mov
jmp
test
je
dec
xchg
adc
repnz
jl
sbb
jo
xchg
test
xor
xchg
inc
test
test
clc
dec
push
push
mov
sub
aas
lock
mov
call
orb
mov
jne
dec
adc
stos
lahf
or
dec
adc
aaa
or
mov
cli
xchg
movsb
sbb
ret
mov
xchg
mov
or
test
lods
mov
loop
jo
ds
scas
sbb
arpl
xor
xor
xchg
add
mov
mov
icebp
mov
mov
pop
es
cwtl
sbb
sbb
movb
jo
sti
iret
lods
mov
jns
into
mov
sbb
incl
xor
add
in
ljmp
mov
jae
ss
popf
and
xchg
sbb
pop
mov
rclb
mov
into
mov
cmc
sbb
divb
stc
push
mov
sub
mov
or
jmp
xchg
mov
cmc
hlt
leave
aad
xchg
jle
mov
fs
repnz
ljmp
push
pop
and
adc
scas
mov
iret
xchg
fnstcw
outsb
sub
add
stos
imul
push
mov
cmp
or
sar
stc
pop
iret
push
loopne
push
je
push
test
stc
aas
popa
xchg
or
inc
imul
dec
mov
aad
pop
inc
leave
rolb
or
hlt
push
fstpl
je
xor
outsl
sub
and
cmp
arpl
cmp
mov
inc
add
sub
mov
loopne
mov
mov
or
fs
hlt
adcb
repnz
push
jae
mov
jg
enter
mov
aad
pushf
test
jno
gs
mov
adc
inc
out
xchg
add
or
ja
fwait
mov
stos
mov
es
inc
add
push
shrl
call
mov
xchg
aas
sub
add
mov
fistps
or
mov
mov
repz
frstor
aas
ja
aam
jnp
mov
mov
int
cwtl
mov
outsl
in
cwtl
inc
cld
in
xor
mov
sbb
ret
sbb
shl
ror
pop
insb
mov
mul
out
repnz
test
bound
scas
jns
jno
popa
jb
in
and
adc
mov
push
lods
and
int
and
mov
jns
or
mov
dec
pushf
mov
aam
rorl
jecxz
push
jbe
shr
scas
jnp
lods
loop
jmp
inc
sar
xchg
out
dec
and
movsl
cmp
cmpl
xchg
add
adc
add
stos
in
dec
loopne
ret
out
dec
sub
jge
and
icebp
xchg
shlb
imul
and
pop
test
test
mov
out
pop
mov
cmp
and
cmp
push
imul
lods
pop
in
adc
cmp
mov
or
or
or
mov
ficomps
dec
or
aam
in
sub
inc
mov
enter
jmp
scas
sub
xor
sub
or
xlat
xor
xchg
xchg
jns
xor
add
mov
out
mov
repz
jmp
or
cli
stc
fstpt
add
mov
and
pushf
push
aam
pop
cld
or
test
xchg
xchg
sub
lret
xchg
ljmp
out
lret
rol
ja
push
jmp
mov
jns
mov
xchg
add
cmpsl
pop
lcall
repz
jno
cmpsb
aam
cmp
shlb
or
out
jo
lahf
jl
dec
pop
push
adc
jg
pop
xor
aad
movb
rcrl
push
cmp
loope
aaa
mov
cmp
call
rorb
addl
std
loop
mov
mov
add
adc
ret
jge
pop
out
xor
jecxz
cltd
imul
leave
pop
test
xor
xor
iret
lods
fisttpl
lea
push
xchg
lds
mov
pop
mov
mov
int
lret
xlat
inc
lret
or
push
lock
imulb
push
or
pushl
rolb
xor
movsb
sub
mov
scas
sbb
jbe
cmp
leave
test
sub
ficoml
pop
pop
add
and
sub
mov
fisubl
pop
outsb
xor
in
pop
cmpl
mov
push
loopne
cmpl
inc
lcall
mov
sub
test
call
inc
jge
mov
push
xlat
cmp
lahf
xchg
inc
jle
xor
stos
aaa
xchg
popf
fisttpll
hlt
mov
adc
mov
aad
hlt
sbb
push
fadds
adc
test
shlb
in
insl
pop
xor
ret
roll
cs
pop
out
test
dec
push
jmp
add
lret
adc
mov
repz
adc
dec
sbb
inc
sub
fbld
pop
inc
push
inc
pushf
scas
or
out
jns
stos
addb
sbb
push
dec
push
stos
in
aam
add
pop
sub
bound
clc
or
rsm
fldl
frstor
jg
jae
jns
jl
mov
outsl
ret
xor
fs
fwait
adc
cmp
xor
pop
mov
scas
test
fcomps
je
jo
arpl
clc
int
js
mov
fwait
jae
adc
in
insb
incb
push
dec
cmp
xor
cmc
sbb
imul
in
test
inc
setnp
cwtl
fwait
add
movsl
lret
hlt
jb
lods
mov
inc
sbb
cmp
xchg
movsl
mov
xor
push
add
push
cld
enter
dec
lds
or
ljmp
push
popa
icebp
sbb
nop
add
movsl
or
mov
or
loop
aad
xchg
sbb
repz
repz
dec
or
jo
popa
or
es
movsb
rclb
sbb
mov
arpl
js
and
add
imul
dec
es
or
add
filds
stos
into
mov
xchg
mulb
sbb
sub
or
push
xchg
dec
xor
xchg
ja
sbb
lret
push
popf
adc
insl
mov
aas
mov
shr
popa
ja
mov
pop
jle
dec
jae
sbb
or
xor
mulb
adc
mov
loopne
js
sbb
fwait
mov
das
mov
cmp
or
xchg
shrb
xchg
mov
mov
cmc
mov
jns
iret
adc
jno
pop
cmp
mov
sub
xlat
ss
adc
jmp
xor
and
pop
scas
in
cmp
neg
fbstp
and
or
add
dec
rcrb
mov
sub
dec
popa
xor
pop
adc
sti
xchg
jno
sub
inc
xchg
lahf
jmp
lds
cld
inc
test
and
sbb
shrl
mov
out
rcrb
jo
ljmp
and
jns
inc
dec
adc
pop
jb
mov
mov
fs
pop
outsb
loop
pop
fnstcw
inc
sbb
cmp
adc
add
pop
xchg
xor
arpl
mov
cld
mov
xor
cmp
das
imul
sub
roll
dec
insb
in
mov
dec
int
ja
mov
testl
xchg
dec
dec
xchg
fs
popa
cmpsl
shrb
leave
addr16
lods
inc
repz
add
fsubrl
fadd
add
test
cmpsl
ret
push
notl
test
pop
pop
test
repnz
mov
xchg
out
rorl
push
pop
mov
cs
mov
mov
jecxz
xchg
scas
mov
add
mov
cmpsl
xchg
dec
shrl
push
int3
insb
push
inc
pop
in
cmp
arpl
into
pop
jno
testb
aad
rcll
cmp
add
dec
and
aam
push
mov
fs
pop
repz
mov
mov
vpmadcsswd
ret
mov
jb
or
rcrb
movsb
mov
loopne
push
test
stos
pop
bound
outsl
loop
ds
mov
ret
ds
pusha
push
push
push
or
push
cli
nop
mov
js
mov
adc
mov
pop
cmp
pop
sub
and
scas
shll
adc
cltd
fcmovnbe
add
leave
pop
adc
and
pop
cld
int
and
pusha
popa
or
rorl
xchg
int
jp
fs
pop
mov
dec
jmp
int3
xlat
dec
scas
movsl
aas
into
push
or
inc
mov
mov
rolb
test
idivl
dec
xor
mov
jns
shlb
fwait
mov
idivb
in
jg
mov
fisttps
xchg
mov
and
aaa
pop
xlat
xor
jb
and
cmp
add
or
es
mov
mov
and
mov
gs
mov
inc
ja
inc
inc
imul
adc
js
push
je
xchg
xchg
lretw
outsl
scas
je
sbb
dec
fsubr
mov
scas
push
push
mov
ret
das
test
jae
add
or
hlt
or
sub
mov
dec
sbb
xorb
sbb
test
jne
mov
daa
push
xchg
mov
test
bound
sub
repz
hlt
sub
repnz
pushf
gs
outsl
idivl
mov
push
mov
push
push
push
dec
xchg
lock
lds
cmp
or
xchg
mov
addb
add
inc
mov
jp
fxch
fildl
mov
sub
dec
sbb
pop
mov
sub
test
es
jecxz
push
sahf
imul
mov
jbe
gs
das
dec
lds
or
hlt
icebp
test
das
xor
jg
inc
jo
imull
adc
sub
sbb
xor
call
or
in
inc
add
mov
adc
nop
out
out
dec
out
add
xor
mov
mov
jno
adc
out
inc
inc
nop
insl
pop
int3
pop
xor
add
pop
xchg
out
fldenv
push
stc
lret
lods
orb
ss
add
push
out
cmp
push
call
mov
orb
mov
mov
jmp
jl
fists
rclb
cld
mov
sub
fdivs
jbe
fnstsw
sub
aas
repnz
fstps
or
xchg
push
inc
xchg
ret
push
xchg
lock
popl
pop
out
divl
sbb
add
xor
ds
lcall
test
cmp
jecxz
push
push
call
mov
ds
pop
xchg
mov
xchg
pop
push
xchg
imul
xchg
ljmp
jecxz
push
aaa
push
pop
scas
clc
jle
clc
push
inc
int
lds
push
xlat
les
lea
lret
sub
pop
arpl
or
aam
sbb
and
icebp
outsl
jns
pushf
addr16
in
or
lds
dec
lea
sbb
mov
add
stos
jge
test
push
xor
adc
fnstcw
sbb
popa
jge
orb
or
inc
sti
add
and
cmpsb
mov
out
ret
out
mov
sahf
rclb
mov
mov
das
mov
mov
add
xchg
test
sub
mov
call
retw
in
push
fimuls
or
sub
and
addr16
rcr
inc
pushf
outsb
sub
push
jne
shlb
test
dec
xor
sahf
xor
in
pop
mov
out
leave
and
xor
dec
dec
mov
ss
mov
movsl
sbb
loope
cmpsb
leave
add
or
pop
cmp
addr16
cmp
mov
inc
leave
jmp
sub
je
xor
dec
loopne
lods
mov
imul
mov
push
lcall
fiadds
sbb
or
out
and
out
mov
dec
jns
pop
mov
push
sbb
es
sub
mov
pushf
cwtl
sub
in
xchg
push
into
insb
stos
push
sbb
movsb
loope
mov
jb
or
and
nop
xor
xor
dec
xlat
pop
mov
inc
cmc
leave
lds
sbb
shr
sarb
imulb
or
xor
lcall
cmpsl
add
dec
pop
insl
sub
pop
cmp
lods
imul
sub
push
stos
push
sbb
sub
fisttps
push
pop
xchg
aaa
cmp
sbb
arpl
inc
or
scas
jno
or
xchg
mov
adc
mov
push
mov
mov
lds
and
mov
cmp
repnz
jo
cmc
dec
mov
jnp
push
lea
jg
or
or
lock
xor
in
xchg
and
xchg
add
dec
pop
and
gs
bound
mov
adc
mov
push
rcrb
mov
rcll
adc
shll
jo
lret
and
jp
and
push
stc
ret
mov
sub
in
push
mov
outsb
lcall
push
pop
and
bound
add
imul
mov
dec
sub
xor
call
mov
jl
sbb
loopne
fwait
imul
sahf
push
cmpsb
pop
std
sub
cmpsb
test
pusha
inc
pusha
push
ret
xor
pop
mov
xchg
pusha
mov
mov
arpl
fists
ds
fwait
pop
scas
jnp
lods
pop
call
push
test
xchg
lret
jbe
mov
and
dec
cmp
sbb
push
push
nop
inc
fmull
push
stos
lcall
test
sub
cmp
testl
imul
cli
cwtl
lods
je
fisttps
ficompl
cmp
mov
std
cld
mov
mov
jne
ficomps
xchg
loope
mov
pop
and
out
push
mov
dec
imul
jne
in
xchg
loope
dec
sbb
out
mov
jno
jns
pop
lds
lds
sbb
stos
std
dec
xchg
js
rorl
shl
jle
push
adc
lds
pusha
lock
xchg
push
cltd
outsb
jne
cmpsb
pusha
ret
add
and
adc
and
push
push
xlat
test
icebp
into
mov
stos
lods
cmp
xchg
jg
pop
cmpsb
dec
into
and
pop
xchg
mov
and
adc
out
iret
push
jns
dec
in
jp
and
pop
mov
loop
or
es
in
pop
sbb
lcall
or
fidivrs
jnp
mov
test
xor
mov
stos
loope
sub
pop
in
in
sbb
fidivs
xorl
aad
fimull
push
je
jg
lcall
xor
test
xchg
and
cmp
hlt
rcrl
repz
bound
into
inc
cltd
sub
pop
add
inc
lret
shrl
pop
adc
mov
inc
adc
sub
push
shrb
aas
lcall
cmp
fnstsw
adc
mov
xlat
jmp
sub
je
or
jae
push
mov
fmul
sbb
cmpsb
lret
pushfw
xchg
insl
ret
pop
jno
mov
cmp
fsubr
add
dec
add
lods
stos
insl
push
mov
cld
sub
cs
or
pushf
or
mov
pop
mov
maxps
stos
int3
insl
push
mov
xchg
jno
cmp
pop
dec
mov
imul
stos
mov
pusha
and
lret
xchg
or
adc
or
sbb
rep
scas
shrl
xchg
adc
mov
push
push
add
or
repnz
sbb
es
insl
adc
cmp
pop
push
std
roll
call
fcmovnu
ds
stos
pop
sub
test
mov
mov
inc
mov
lret
clc
mov
fs
jno
iret
pusha
out
jns
inc
lea
and
fbstp
pop
lock
std
pushf
sbb
sbb
int
cmpsl
outsl
push
xchg
cmp
xchg
inc
push
fisttpll
xchg
scas
jle
mov
data16
rol
js
test
push
mov
push
test
sbb
push
cmp
iret
xchg
fs
or
mov
xor
int
sub
inc
dec
ljmp
roll
sbb
aas
fidivs
scas
decb
mov
out
push
lods
aas
ja
aaa
xchg
insl
das
add
jmp
mov
xlat
sub
xchg
leave
sbb
ljmp
nop
pop
sub
out
xor
imul
lahf
mov
push
cs
xor
mov
dec
jge
jb
adc
lods
sti
in
inc
ds
and
lret
inc
inc
push
push
xchg
insl
out
lods
sbb
out
cmp
addr16
push
inc
jg
les
inc
inc
dec
sub
leave
jae
ret
inc
aaa
add
dec
or
jmp
out
vmaxpd
pop
fwait
nop
pop
loope
aam
sbb
dec
xchg
mov
mov
outsl
cmp
cmp
xchg
idivl
insl
mov
cwtl
fstps
mov
adc
inc
in
lahf
lock
cmpsb
cmp
in
adc
mov
lcall
sbb
jl
pushf
addr16
cmc
loopne
sub
enter
popa
ficoml
sbb
jb
fisubrs
aas
dec
dec
fdivrs
lret
fcmovnb
les
pop
imul
mov
dec
filds
add
fcmovnu
outsl
xchg
cmp
push
or
dec
push
loope
aas
jl
xchg
pop
xlat
fwait
aaa
jle
pop
sar
lds
outsl
inc
jmp
xchg
xchg
jb
lods
sub
mov
sub
dec
jne
fsubs
or
icebp
fbstp
cmp
jnp
push
int3
sub
and
fimuls
add
scas
int3
or
in
arpl
jecxz
mulb
call
fwait
add
dec
push
pop
push
jbe
push
ss
mov
loopne
sbb
jne
xor
mov
iret
loope
inc
out
mov
cmp
mov
xchg
xchg
cltd
mov
push
sbb
and
push
mov
sub
lahf
clc
mov
cld
mov
ds
loopne
sbb
fsubs
fsub
movsl
inc
mov
adc
and
scas
hlt
pushf
outsl
hlt
mov
sub
arpl
jmp
test
popf
enter
loope
in
mov
push
mov
call
push
sar
jge
adcb
pusha
and
cltd
dec
pusha
lcall
test
in
cmp
pop
xor
push
and
xlat
xchg
jge
mov
cmc
and
mov
and
je
push
enter
iret
dec
bound
mov
js
mov
pop
xorb
cmp
dec
xchg
mov
sbb
adc
mov
push
fdecstp
addr16
stc
xchg
mov
mov
or
daa
adc
xor
adc
pop
mov
les
sahf
bound
mov
sub
adc
jo
cmp
cmp
mov
stos
xor
cmp
mov
pusha
and
aam
mov
add
push
aaa
mov
sbb
pusha
sbb
and
adc
test
mov
cmp
js
sti
loopne
cwtl
pop
loope
dec
nop
dec
nop
mov
addr16
clc
push
insb
lret
mov
out
xor
addl
xchg
test
stc
cltd
fnsave
in
xor
scas
jno,pt
mov
ljmp
loope
leave
addr16
pop
jmp
sub
movsb
movsl
adc
pop
cmp
and
repz
mov
adc
popa
lcall
stc
iret
cld
or
ds
dec
sti
popf
lahf
push
cld
mov
jecxz
orl
stc
movsb
mov
xchg
ja
dec
sbb
dec
fsts
notl
shll
jl
xlat
and
out
negb
testb
mov
std
pop
js
les
insb
jne
adc
pop
int
jg
inc
je
cli
mov
inc
aas
and
dec
xor
notb
mov
or
and
lret
lret
testb
push
daa
cmc
adc
test
nop
jg
and
cmp
sbb
mov
mov
sub
and
aad
insl
xor
imul
pop
lahf
sbb
pop
mov
jne
in
xchg
or
and
fnstcw
out
jmp
leave
sub
fisubl
test
enter
mov
mov
push
mov
jp
cwtl
or
push
fnstenv
inc
ret
jnp
out
js
outsl
rolb
cltd
lret
lret
pop
sub
sbb
dec
sub
jb
arpl
sbb
mov
in
out
add
and
mov
rorb
cmp
inc
test
pop
sbb
repnz
adc
push
push
pop
push
xor
push
mov
pop
adc
es
mov
sahf
add
ljmp
mov
dec
jmp
insb
inc
mov
push
mov
add
pop
mov
inc
xorl
lcall
sbb
js
fwait
mov
add
inc
add
ret
hlt
adc
and
rclb
std
push
orb
sub
leave
pop
xchg
ss
push
idivb
sub
inc
insl
push
les
sbb
fs
adc
push
xchg
jo
push
mov
push
fildl
mov
addb
pop
xor
mov
aam
and
out
or
pusha
lods
sbbl
sub
dec
ret
fcmovne
pop
enter
xor
sub
out
sbb
jno
and
cs
cmpsb
repz
imul
imul
je
out
outsb
add
mov
fbld
xchg
dec
pushf
sbb
mov
push
repnz
std
sbb
subl
adc
outsl
data16
add
and
int3
or
dec
movsl
dec
bound
mov
test
sti
mov
pop
fldl
push
cmp
pop
shlb
cld
cs
popa
add
cmp
fistps
mov
mov
test
into
dec
repz
mov
sub
jno
out
mov
pop
jg
jae
pop
lret
repnz
add
mov
mov
js
mov
jecxz
aas
mov
xchg
rcll
pushaw
pop
lret
adc
imull
mov
std
ljmp
mov
sub
loop
push
test
lahf
mov
push
sahf
mov
jle
inc
mov
bound
xchg
repnz
pop
push
roll
lret
sbb
test
test
in
lret
pop
push
jo
addr16
adc
push
cmp
mov
jo
mov
das
arpl
jecxz
ljmp
push
push
and
ss
fstp
cs
jle
push
inc
xlat
pop
les
das
cmp
or
pop
imul
xlat
mov
mov
cli
aam
inc
and
mov
mov
dec
inc
push
jno
out
movsb
fiaddl
pop
or
pop
dec
cld
es
jbe
push
xchg
mov
ja
or
xchg
cld
xchg
aad
daa
xchg
inc
inc
pop
sub
xor
jo
mov
lea
dec
add
stos
rorl
fmull
setg
xchg
mov
jp
cld
scas
xor
jns
mov
or
fnstenv
inc
push
orb
push
mov
and
sarl
aas
xchg
arpl
ucomiss
xchg
xchg
dec
xor
int
sbb
push
xor
mov
rcl
cli
mov
and
mov
adc
jg
sbb
push
inc
mov
cmp
mov
or
lret
jecxz
pop
add
xchg
jmp
lret
mov
ja
add
or
aad
test
idiv
pop
out
push
aam
test
enter
in
and
mov
stc
xor
sbb
xor
xchg
into
dec
imul
leave
adc
or
loope
and
pushf
xorl
stc
lahf
xchg
jns
dec
cmpsl
lahf
xor
punpcklwd
mov
fld
out
mov
cwtl
incl
rolb
push
int
jge
inc
ds
push
and
pop
cltd
icebp
loop
sub
loope
dec
xchg
and
inc
push
lahf
call
jge
in
or
cs
ret
stc
sbb
pop
or
or
cld
lret
xchg
xchg
adc
push
test
sbb
ss
pop
dec
cmp
sbbl
mov
outsl
add
fcomps
popf
out
xor
or
jo
outsl
push
xchg
lods
fimuls
repz
fs
adc
int
mov
sbb
cli
lcall
sub
insl
outsb
xor
arpl
enter
cmp
int3
inc
aam
push
sub
or
xor
pusha
sbb
loop
je
adc
clc
push
rcrb
in
sti
das
mov
push
or
subl
xor
mov
lret
xor
cltd
mov
push
pop
test
xor
xchg
hlt
mov
mov
es
int
adc
fs
cli
mov
add
mov
sbb
in
push
xor
stos
in
mov
fidivs
mov
pop
lds
push
sbbb
ljmp
lahf
ja
jns
mov
add
push
ret
jb
in
in
dec
test
dec
outsl
xlat
xchg
std
pop
lods
mov
popa
rclb
negl
jo
mov
xor
add
sar
aaa
rorl
je
fdivrs
mov
mov
xchg
data16
xchg
sbb
mov
xchg
or
xor
mov
fidivl
pop
push
test
push
push
ja
into
inc
cmp
adc
in
in
push
add
push
xor
mov
cmp
addl
or
aaa
popa
les
aad
rcll
into
iret
in
add
dec
xor
scas
push
xchg
stos
push
int3
outsl
mov
arpl
cmp
loopne
push
ret
out
xchg
adc
rclb
push
cs
xchg
icebp
repz
in
mov
test
or
or
xor
push
pop
sahf
pusha
inc
es
mov
xchg
lea
inc
cmpb
loop
in
scas
jns
movsl
jp
add
pop
pop
xchg
inc
notb
cltd
xchg
les
mov
stos
mov
icebp
jne
icebp
imul
test
addr16
pop
and
out
sub
xor
xchg
lock
jne
cs
cmp
roll
jmp
and
inc
mov
cmp
mov
push
test
jno
push
mov
enter
fildll
adc
sbb
xor
adc
mov
jle
xor
fisubrs
cwtl
lock
movsb
cld
jmp
pop
pop
push
add
mov
xor
loop
and
mov
sbb
mov
and
data16
adc
pop
jae
in
into
push
jb
pop
mov
fnstsw
outsb
push
mov
inc
add
jns
sub
xchg
mov
or
fldt
out
and
cwtl
xor
in
int
lods
mov
lahf
mov
leave
jae
add
popa
fidivrs
scas
adc
adc
sarb
dec
push
cmp
add
ret
lretw
xchg
fisubrl
cmp
mov
adc
aaa
or
sub
adcl
mov
sahf
loope
lea
xchg
jmp
movsb
in
aaa
addb
inc
push
and
fidivrs
xor
xor
repz
push
aaa
into
mov
outsl
aaa
scas
mov
std
sbb
xchg
sbb
les
lea
clc
mov
fisubrl
lret
int
fbstp
cmp
xchg
jl
pusha
pusha
clc
outsb
mov
jae
loop
or
cmpsl
je
pop
xor
adc
pop
and
cmp
aad
daa
stos
sub
mov
lahf
je
leave
in
gs
mov
fwait
jno
xchg
adc
lods
xchg
insl
jae
xorb
ret
shll
adc
sbb
enter
rorb
loopne
adc
shrb
xchg
cs
call
es
int3
iret
shr
scas
inc
lods
push
mov
pop
xchg
testb
lret
das
mov
fidivrl
push
dec
and
rolb
lret
or
mov
inc
daa
in
mov
dec
movsb
sub
aad
sti
ficompl
xor
dec
popa
push
cmpsl
sahf
movsb
mov
xchg
adc
jo
mov
repnz
dec
stc
mov
andl
cmpsb
jne
push
arpl
lds
lds
sub
dec
pop
mov
mov
addl
loopne
cmc
inc
addr16
cs
fwait
mov
xchg
jle
mov
rolb
in
inc
ret
jg
sti
repnz
mov
dec
pop
and
movsb
mov
fisubrl
mov
dec
rcrl
add
pop
loop
js
xor
popf
pop
or
jno
jns
test
xor
je
movsb
leave
cmp
lods
xor
adc
adc
outsb
xor
pop
fbstp
decl
xchg
outsb
inc
push
xchg
idivl
sti
cmpl
pop
fisttps
cmp
sbb
or
mov
push
daa
adc
sahf
jge
scas
call
pop
jg
ret
pop
add
xor
cwtl
mov
imul
fidivrs
xor
push
jno
icebp
nop
jo
jns
es
repnz
inc
xchg
mov
cmpsl
ljmp
std
call
sub
mov
sub
mov
mov
cmpsb
enter
in
push
xchg
lret
aas
loop
and
cltd
dec
mov
xchg
stos
test
es
cmc
push
mov
pop
decl
inc
push
or
jns
cltd
sbb
pop
scas
add
scas
pop
fs
leave
adc
icebp
and
ror
out
mov
into
xor
xchg
dec
sub
ljmp
fldenv
loopne
pop
sbb
pop
aam
test
flds
xchg
sbb
testb
adc
fstl
fistps
xchg
xchg
inc
or
stos
dec
test
ss
sbb
aad
andb
xor
jg
xor
and
push
icebp
jbe
out
arpl
in
xchg
fwait
jo
adc
test
sbb
insl
inc
les
lret
shll
lcall
js
or
xchg
push
cmpsb
insb
cmp
enter
test
clc
mov
lret
push
or
out
iret
enter
mul
add
adc
mov
and
sbb
into
xchg
rorl
mov
mov
outsb
fstpt
clc
or
or
gs
scas
sub
and
pop
lds
fadds
pop
outsl
out
aaa
xchg
lret
fnsave
fisttpl
mov
data16
and
sbb
rorb
in
push
add
adc
lods
das
or
not
fistpl
sbb
fstps
cli
xor
mov
lods
mov
loope
pop
xchg
test
mov
xchg
les
xor
mov
ja
or
add
mov
aas
xlat
iret
sbb
loopne
insl
mov
lret
push
push
test
in
out
push
adc
fimull
sbb
push
arpl
outsb
out
jbe
lcall
sti
outsb
je
cs
cmp
cmp
sbb
xor
movsl
and
test
mov
dec
sub
je
and
sub
xchg
cmp
xchg
and
in
std
repz
dec
scas
loope
repz
gs
xlat
mov
pop
mov
outsb
bound
or
test
mov
shll
add
pop
push
xchg
or
mov
loope
fisubl
out
das
lcall
cwtl
aaa
xchg
lret
sub
setbe
cs
sub
xchg
mov
lds
pop
lock
or
xlat
bound
cs
lea
jmp
cld
sbb
adc
sarb
push
and
adc
jns
pop
sbb
sbb
jl
in
jle
pop
sbb
fistpl
das
outsb
pop
mov
sbb
loop
cli
push
mov
mov
add
pop
or
pop
push
lret
daa
mov
test
xchg
sub
mov
mov
mov
jne
jbe
addr16
icebp
cmp
nop
dec
loopne
xchg
xor
ss
mov
popf
adc
xchg
jmp
cmp
jns
jecxz
adc
in
std
mov
jl
mov
cmp
imul
daa
adc
or
pop
jg,pt
shll
jp
and
sbb
pop
repnz
and
cmpsl
mov
sub
mov
mov
roll
js
mov
lods
inc
popa
mov
out
push
adc
dec
push
fs
add
fcmovb
in
mov
repz
or
jo
nop
mov
mov
pop
ljmp
idivl
lcall
pop
lods
dec
pop
push
mov
inc
xchg
mov
nop
retw
loope
imul
lret
push
stos
popf
lcall
addb
lahf
daa
or
add
fildll
sub
in
mov
out
mov
dec
cmp
int
imul
mov
out
popf
sahf
cmp
inc
inc
les
testl
addr16
mov
add
mov
aas
lret
ljmp
dec
push
aam
push
xor
movsl
cwtl
or
pop
call
pop
mov
ss
cmpsl
and
inc
jge
adc
mov
and
mov
sub
or
push
gs
jb
in
lds
dec
cld
test
xchg
dec
outsb
hlt
adc
pop
xor
mov
sti
repnz
movsb
lods
mov
mov
add
leave
cli
cmp
cwtl
cltd
fidivl
pushf
fmulp
outsl
je
cmp
pusha
pop
jb
lds
push
mov
jns
fists
adc
jo
adc
jbe
mov
movsb
pushf
and
jae
sub
scas
xchg
subl
push
inc
dec
outsb
cltd
add
pusha
xchg
mov
cmp
mov
paddw
popf
and
fsubp
cmp
imul
inc
xchg
fstp
push
mov
and
mov
test
mov
xchg
jb
in
jecxz
shl
adc
push
in
cmc
xchg
pusha
lret
push
pusha
test
or
add
mov
ja
mov
testb
dec
mov
jmp
sahf
pop
jno
imul
lret
push
dec
push
adc
lret
jnp
mov
imul
xor
stos
sbb
and
fldenv
lods
pusha
lock
stc
adc
icebp
jbe
cmp
outsl
cltd
jnp
mov
jns
and
xor
inc
push
pop
pop
xor
pop
push
or
adc
addr16
adc
in
sahf
pop
mov
pusha
pop
dec
xchg
add
push
xor
cld
add
mov
rorl
jae
and
mov
xor
jne
icebp
fcomi
sub
lea
add
dec
cwtl
mov
mov
ljmp
out
mov
xchg
test
fst
and
jp
fs
leave
int
int
cmp
sbb
mov
or
in
push
out
or
sub
or
data16
mov
push
fcomip
xchg
and
rcr
push
loope
lods
xor
insl
adc
lock
mov
push
lret
sbb
jae
mov
lret
fistpl
push
daa
xlat
arpl
mov
jg
or
movsb
mov
je
xchg
iret
mov
adc
or
cmp
add
mov
add
mov
jns
xchg
inc
out
rcrb
sti
jns
ret
shll
push
das
jg
jmp
in
aaa
loope
out
aaa
xchg
inc
sub
fcomi
push
mov
adc
xchg
insl
pop
inc
pop
jmp
iret
mov
pop
jbe
push
add
nop
popa
pushf
pop
clc
shll
inc
adc
pop
mov
push
aam
stos
shll
scas
int
cmp
ficomps
push
jp
popa
jo
push
dec
xchg
mov
pop
inc
cli
lcall
xchg
xchg
cmp
pushf
mov
pop
jg
sti
add
roll
sbb
adc
out
pop
rclb
add
push
inc
or
je
mov
push
and
pop
xor
xacquire
repnz
ret
jl
out
mov
dec
fsubs
inc
sahf
loop
popf
mov
cltd
mov
stos
pushf
lret
jne
jg
dec
loop
and
mov
test
xlat
lret
ljmp
fiadds
cwtl
mov
push
sub
imul
dec
push
inc
mov
out
jmp
add
inc
mov
jg
or
movsl
xor
mov
sub
and
sbb
or
jae
fisubrl
xchg
mov
nop
imul
hlt
adc
mov
stc
mov
lods
stc
dec
xchg
cltd
in
adc
cmp
mov
cmpsb
sbb
cld
mov
jbe
jo
push
shrl
mov
inc
clc
or
push
xor
pushf
jns
cmp
out
sbb
mov
push
fnstcw
inc
inc
gs
into
aam
mov
push
dec
scas
in
outsb
or
xor
insb
push
sub
jb
ficompl
push
popa
stc
inc
mov
jno
frstor
xchg
nop
sbb
cmp
mov
or
mov
mov
scas
mov
outsl
sbb
sahf
or
mov
dec
scas
inc
lods
adc
sub
and
ja
fldt
push
les
cli
adc
pop
popa
push
fiadds
or
cmp
ja
in
push
mov
mov
in
mov
push
orl
push
jae
xor
fs
gs
or
dec
or
pushf
lea
mov
pushf
sub
cmp
adc
call
aaa
push
les
movsb
push
push
or
aad
fisttpl
stos
repnz
decl
lods
push
add
outsl
mov
aaa
or
cwtl
bound
adc
or
lea
andb
inc
jbe
movsl
mov
mov
fstl
fildl
test
out
bound
push
incb
aaa
mov
pop
insb
sbb
insb
lock
jp
jmp
outsl
xor
repnz
das
push
ds
inc
sbb
push
adc
testb
loop
ds
cwtl
xchg
xlat
aaa
fisttpl
in
cmp
mov
and
push
xchg
mov
cmpsl
cld
pop
ds
push
xor
mov
mov
sub
adc
scas
sbb
sbb
bound
loopne
dec
in
mov
jle
je
scas
jmp
fwait
out
test
mov
mov
xchg
dec
xor
pusha
xor
aam
jmp
in
arpl
in
ficomps
cld
add
xor
loopne
mov
pop
pusha
loope
add
cmp
push
imul
lahf
int3
pop
and
int
cmp
push
pusha
dec
push
and
aad
push
dec
icebp
and
and
jo
pop
push
repz
lock
out
adc
ret
cmp
mov
sub
mov
adc
js
repnz
cmpsl
cmp
fwait
testb
dec
orb
rorb
push
adc
dec
push
mov
dec
push
pop
or
sub
cmp
lret
lea
or
rorl
addr16
aam
and
jp
test
in
clc
mov
pusha
outsl
sahf
imul
adc
xor
and
mov
movsb
jnp
stos
rcrb
int3
mov
loop
jp
push
faddl
xchg
dec
pop
jge
cmc
push
pop
or
pop
stos
mov
cmp
mov
sti
sub
jno
xor
cmp
mov
testb
push
and
das
adc
cmpsb
fnsave
mov
loopne
aam
xor
lea
mov
std
iret
loope
cmpl
frstor
or
sahf
ja
aaa
sub
xchg
mov
sbb
push
jo
ficompl
pop
pushf
xchg
rolb
rcll
sbb
ret
xor
sbb
mov
insb
pop
cmp
hlt
jb
xor
into
xor
push
outsl
rcl
inc
int3
mov
test
cmc
fwait
test
mov
scas
icebp
pop
stc
scas
lds
jp
outsb
test
cmpl
push
mov
mov
xchg
jl
hlt
mov
push
push
call
or
mov
movsb
pop
dec
adc
or
scas
lock
jnp
push
pop
pop
jl
rolb
xchg
scas
in
dec
cmpsl
mov
neg
push
rorb
xchg
pop
lea
test
jle
jle
loope
movsl
sub
fcoml
mov
in
sub
loope
jno
je
xchg
xor
pusha
sahf
stos
cli
shlb
and
sub
mov
fisubrl
hlt
movb
and
cs
dec
pop
es
jecxz
xorl
jae
hlt
loop
inc
fdivrl
jle
push
negb
xchg
sub
or
xlat
lret
xchg
or
out
mov
jno
in
stc
es
in
scas
cmp
stc
dec
shlb
shr
imul
xlat
inc
pop
cmp
out
push
in
addr16
sbb
ljmp
xor
aas
jbe
mov
lea
std
lcall
js
jg
setnp
outsb
and
cltd
sub
mov
mov
fbld
jo
and
shr
test
insb
cmp
pop
push
cmc
aad
push
push
hlt
xchg
scas
ja
dec
dec
jmp
cs
jg
shlb
data16
sbb
push
sbb
aad
inc
insl
insl
lods
xchg
xor
cmp
dec
pushf
cmp
push
in
xchg
hlt
pop
push
mov
sbb
xchg
les
sub
inc
push
pop
clc
dec
mov
cmpl
call
sahf
ret
mov
adc
or
xchg
fs
stos
and
call
into
cmc
aas
dec
inc
cld
loop
dec
jae
cmpsb
sbb
icebp
xchg
inc
mov
push
popf
pop
cmpsb
insb
mov
je
mov
in
xor
les
mov
test
sub
mov
xchg
mov
insb
std
adc
sub
cld
cmp
lods
cmp
sti
in
pop
inc
xor
ds
iret
inc
nop
pop
xlat
sbb
ljmp
aas
insl
popa
add
repnz
frstor
mov
sahf
mov
stc
mov
xchg
mov
inc
jno
ds
dec
loop
lret
rcr
ret
mov
mov
adc
cmp
enter
dec
add
dec
xlat
cmp
insl
fxch
nop
xchg
inc
pushf
and
stc
lcall
dec
daa
daa
xor
sbb
sub
dec
lret
mov
push
push
fildll
xchg
mov
jne
or
mov
or
mov
cmp
fiadds
add
fcmovnbe
xchg
fwait
mov
sub
addr16
mov
pop
jb
and
sbb
xor
mov
dec
mov
jo
loopne
stc
data16
cmp
sbb
fs
repz
repnz
jmp
cmp
std
pop
lret
vpmacssww
push
sbb
cld
ficoml
btc
mov
inc
push
lret
scas
clc
or
cmp
movb
jmp
ljmp
push
jo
add
sarl
sti
mov
jns
scas
sub
hlt
push
jnp
xlat
add
insl
inc
pushf
cmc
sarl
lods
out
gs
push
xchg
test
data16
in
push
pop
out
lods
fidivrl
popf
insb
dec
out
jge
jp
das
dec
shrl
pop
aas
bound
cld
sarl
add
sub
mov
movsl
das
mov
xchg
loope
faddl
nop
repz
inc
xor
movsl
dec
outsl
or
inc
dec
sti
xlat
pushf
in
insb
pushf
subb
adc
cld
mov
aas
pushf
orb
inc
ja
mov
scas
sbb
in
sub
test
shrb
dec
data16
adc
insl
or
mov
xchg
and
and
mov
xor
lcall
dec
inc
add
mov
aaa
shrb
mov
push
push
push
and
xor
add
je
insl
gs
push
mov
cmpsl
rclb
rorl
mov
repnz
pop
jmp
add
sbb
dec
xor
xchg
test
stos
jae
pop
repz
je
mov
cmpsb
shlb
ret
adc
pop
mov
jnp
sahf
pusha
dec
xor
hlt
hlt
or
jecxz
jns
movsb
cmpsb
push
mov
adc
stc
push
enter
lods
xor
pushf
push
or
xchg
sbb
adc
mov
jle
dec
popa
dec
xor
arpl
jp
mov
sti
xchg
out
jns
mov
adcb
mov
add
mov
test
inc
sub
fisttpl
in
outsl
mov
cmp
scas
pop
pop
xchg
sub
jno
xor
divl
mov
sbb
push
inc
inc
jp
cmp
arpl
and
cs
mov
xor
or
pushl
adc
movsb
pop
cmpsb
mov
dec
ds
das
inc
shlb
sbb
cs
mov
jp
scas
fildl
lret
pop
jecxz
add
add
sbb
loope
ds
fcmovu
push
jp
jecxz
ljmp
or
out
notl
stos
ljmp
and
ja
lret
ja
cmp
xor
jle
and
xor
je
inc
inc
xchg
and
call
rolb
xchg
mull
dec
int
mov
enter
jmp
jp
jno
cmpsb
xchg
mov
in
cltd
pop
push
testb
scas
dec
subl
jmpw
ret
stc
popa
sub
adc
jp
cmpsb
sub
push
movsl
xchg
mov
add
pop
push
mov
inc
add
mov
mov
inc
out
ss
push
mov
hlt
mov
out
repnz
mov
fisttpll
xchg
es
sbb
xchg
cmc
mov
sbb
and
dec
mov
inc
sub
inc
iret
add
test
clc
stos
dec
pop
in
push
jl
test
dec
jge
push
out
lret
mov
mov
xchg
enter
call
iret
sbb
aaa
mov
and
inc
inc
xchg
cmpsb
pop
data16
ja
rorb
inc
push
or
add
jg
mov
mov
notl
jge
sar
inc
xchg
xor
aas
insl
fwait
lock
aaa
push
stc
in
push
mov
mov
mov
jmp
movl
rclb
out
push
push
mov
fwait
inc
leave
mov
pop
lods
and
or
sub
and
out
stc
jmp
movsb
xor
mov
fidivrs
mov
or
gs
mov
adc
or
mov
push
mov
jge
ds
sti
push
xchg
fdivrs
fucomp
js
jp
mov
loop
push
xor
fst
and
mov
scas
push
cltd
mov
lock
roll
jl
mov
arpl
pop
cmp
popa
test
dec
xor
xchg
insb
imull
fsts
sahf
dec
adc
pop
jp
xchg
mov
jmp
gs
inc
je
roll
pop
and
das
mov
fdivs
mov
fwait
mov
mov
mov
or
xchg
pop
cmc
jb
push
gs
std
ret
loopne
setns
push
fwait
scas
xor
and
mov
jge
subb
pop
push
cmp
ret
xlat
adc
adc
pushf
dec
add
into
shrl
xchg
sbb
in
mov
clc
das
mov
inc
test
cmp
iret
pusha
add
dec
out
inc
insl
and
imul
jnp
stos
in
repz
pop
test
insb
pop
bound
jnp
xchg
in
mov
jo
dec
push
test
enter
adc
jne
sahf
dec
sub
jp
out
roll
icebp
cvttps2pi
xor
pop
iret
inc
dec
jl
push
xor
mov
jle
fidivs
inc
movsb
dec
push
mov
xor
orb
mov
and
mov
xchg
or
xchg
xor
aad
cmp
lcall
inc
pop
pop
addb
jge
inc
push
ja
xor
or
data16
arpl
sub
in
mov
lret
mov
sub
icebp
imulb
jmp
fwait
hlt
imul
push
scas
mov
popa
push
les
mov
xchg
rcrb
jge
mov
jecxz
pushf
pushf
sbb
jbe
mov
sbb
cmp
mov
imul
mov
movsl
pop
mov
add
push
jge
add
inc
xlat
in
xor
mov
shll
xor
insb
mov
or
or
fcomps
incb
stos
inc
enter
pushf
adc
jno
mov
dec
push
in
push
cmp
movsl
js
lret
inc
pop
stos
xor
mov
and
sbb
rsqrtps
scas
popf
jle
lret
pop
mov
inc
test
pop
sub
negl
fildl
inc
push
iret
inc
mov
mov
inc
inc
sti
push
out
xor
lea
loope
sub
les
dec
push
mov
jle
cmpsl
adc
ja
push
pop
jmp
push
jp
sbb
loopne
stc
sub
or
inc
notl
dec
testl
xor
dec
mov
add
idivb
test
imul
jno
flds
mov
sbb
lods
jno
mov
cli
cli
or
aaa
fidivrs
sarb
enter
lea
or
cmpsb
movsb
in
in
sarl
or
push
ds
mov
mov
jo
in
sub
jns
rcrb
nop
pop
stos
mov
jne
aam
xchg
mov
mov
leave
push
sbb
dec
je
in
mov
mov
cmp
xchg
call
and
cmp
movsl
gs
ljmp
inc
test
out
and
int3
push
pop
out
cmp
scas
sub
fldcw
into
and
or
cmp
inc
jmp
cld
fldl
insl
mov
shrl
lret
mov
or
inc
cmpsl
mov
cmpsb
cmp
aaa
push
int3
into
fs
lea
xor
pop
xor
hlt
sbb
outsl
mov
pusha
xchg
mov
or
lods
shlb
ljmp
scas
cmp
or
pop
dec
ja
xchg
icebp
sarl
int3
or
mov
scas
push
negl
lret
xorb
aas
ret
mov
mov
popa
mov
lods
repz
out
jae
pushf
test
lret
in
or
bound
sti
dec
xlat
sub
imul
aam
add
out
loope
add
ss
fisubrs
fldenv
repnz
sub
sub
cmpsl
pop
dec
sbb
rcrb
jl
sub
outsl
addr16
sbb
sub
pop
pop
and
jmp
sbb
loop
repnz
adc
sti
out
aad
or
ljmp
inc
pop
xor
jmp
fnsave
xor
jns
push
shr
sub
pop
dec
sbb
cmpsb
jo
cmp
daa
dec
imul
lock
ljmp
ret
iret
lret
xchg
mov
push
inc
negb
lods
in
push
faddl
inc
popf
std
insb
fld
gs
int
pop
data16
aam
add
pushf
gs
push
and
mov
repz
and
gs
ss
pop
rcl
pushf
out
sahf
je
pop
dec
sahf
cmc
fprem
pop
lret
pop
cltd
mov
fwait
hlt
dec
adcb
lahf
inc
lods
sbb
inc
inc
repnz
insb
pop
sub
pusha
jo
scas
dec
fdivr
pop
pop
jge
call
adc
call
mov
aad
ficompl
mov
cmp
jg
sbb
pop
sbb
xchg
add
bound
xchg
mov
es
xchg
mov
lret
xchg
addb
arpl
mov
and
push
cld
dec
xadd
mov
out
mov
insl
jmp
inc
push
popa
adc
je
in
popa
popf
sbb
cmpsb
std
xor
xor
fistps
adc
mov
xchg
add
adc
cmpl
jae
les
idiv
out
cmp
sbb
arpl
cltd
jns
sti
test
adc
jmp
jne
mov
mov
sti
jbe
insb
xor
xchg
adc
jecxz
push
pop
xlat
pop
pop
inc
aas
ja
jnp
push
adc
aad
pushf
lods
adcb
and
es
cli
stc
int3
mov
inc
shlb
int3
adc
or
xor
and
inc
mov
inc
es
push
or
cltd
lret
bnd
dec
xchg
mov
dec
add
data16
fwait
cmp
inc
hlt
into
push
mov
faddl
out
sub
ret
push
insb
pushf
test
cmovp
xor
sti
call
dec
addr16
repz
pusha
lods
pop
push
xchg
in
sar
scas
imul
xor
add
fbld
fsubr
test
out
insl
dec
ss
dec
pop
inc
hlt
xchg
cmp
mov
push
ficoms
and
mov
call
adc
mov
adc
mov
addb
jae
pop
daa
jp
dec
add
mov
xchg
iret
ss
push
ljmp
cmp
int
xchg
mov
mov
pop
shl
fs
fcoml
lock
neg
pop
gs
push
icebp
hlt
push
mov
orb
test
ret
pusha
adc
iret
scas
pop
hlt
out
mov
inc
nop
jns
movsb
cmpl
sahf
lahf
lock
or
xor
fdivs
cmp
imul
xchg
push
inc
push
mov
adc
add
imul
or
lods
mov
imul
jae
das
sti
jns
jmp
sbb
andl
insl
into
mov
shl
inc
mov
mov
push
dec
mov
and
and
out
add
cmp
push
add
clc
sub
xchg
lock
mov
lods
test
mov
and
sub
and
sbb
push
adc
into
xchg
scas
cltd
sahf
in
cmpsb
fsub
test
sbb
call
sbb
or
fwait
mov
sbb
fistps
pop
scas
push
dec
cmpsl
push
scas
dec
push
gs
xlat
movsl
inc
pop
push
imul
push
in
adc
movsb
and
fimuls
ficoms
jecxz
popf
pushf
and
sub
nop
adc
mov
cmp
sbb
pop
stos
xchg
xchg
pop
cmp
cmpsl
inc
sub
jbe
in
popf
xchg
mov
nop
mov
jnp
pop
push
int3
rol
stos
dec
push
in
cli
and
pop
pop
loop
and
cld
cltd
sti
lea
gs
mov
jns
mov
movsl
adc
int
dec
xchg
adc
pop
divl
mov
cld
je
jl
pushf
shl
data16
dec
mov
leave
push
lret
push
xor
jb
js
sub
sub
add
stos
outsl
loop
sbb
jle
cmp
mov
jb
pop
mov
cmp
in
movsb
mov
add
xchg
sub
icebp
mov
pop
push
dec
mov
push
in
popf
or
pop
nop
inc
mov
or
outsb
gs
rolb
jmp
xchg
mov
add
push
stos
cltd
scas
pushf
addl
rolb
loop
lcall
ljmp
icebp
xor
mov
stc
ja
stos
movsb
repz
arpl
das
jecxz
int3
xchg
add
icebp
frstor
push
outsl
add
push
jnp
mov
xlat
mov
inc
or
mov
sbb
push
imul
mov
test
in
mov
sahf
push
dec
jnp
ljmp
in
pop
jb
loop
sub
into
and
pop
fisubl
xchg
imul
mov
or
in
bnd
jecxz
loope
sub
sub
in
inc
mull
pop
mov
rolb
push
sbb
mov
jne
adc
mov
mov
inc
out
lds
iret
adc
jbe
and
lea
imul
pop
mov
imul
xchg
jb
stc
inc
movsl
dec
js
std
rolb
arpl
add
mov
xchg
movsl
dec
pop
jae
roll
inc
insb
sbb
jnp
push
xchg
jnp
sub
imul
ds
fsubrp
inc
add
lahf
lret
and
jg
ret
adc
mov
jbe
pushf
pop
dec
xchg
jmp
mov
sbb
jecxz
mov
arpl
cmp
imul
insl
mov
loop
jge
ret
pop
cli
dec
jo
jp
notb
ret
popl
inc
sub
cmpsb
cmp
lds
pushaw
lret
outsb
adcl
das
cmp
fbstp
cmp
mov
shrl
jns
sub
sahf
xchg
cld
mov
pop
mov
sbb
loopne
je
iret
bound
fidivs
test
or
lods
inc
mov
enter
es
mov
addb
lods
shlb
cmp
in
xor
mov
xor
jmp
repnz
or
fisubs
ror
filds
jl
mov
jle
scas
bound
sbb
roll
cmpsb
or
jnp
fnstsw
fcmovbe
ljmp
scas
xchg
mov
xorb
mov
jne
cmc
xor
xor
dec
jno
cmp
pop
sahf
fdivrs
xchg
stos
push
cli
lds
sbb
mov
and
or
add
sbb
ja
pop
sti
aad
sub
xor
cmpl
push
push
cltd
call
orl
das
add
mov
mov
cmp
nop
mov
mov
mov
mulb
inc
sub
in
les
imul
or
fs
mov
mov
lods
out
xor
pusha
jae
mov
sub
mov
divb
adc
sahf
ljmp
push
mov
cld
xchg
xchg
es
das
cltd
pop
mov
pop
xchg
dec
cli
inc
fldl
daa
add
mov
pusha
adc
mov
fcmovbe
jg
gs
jg
inc
jne
inc
push
xchg
push
add
cmpsb
outsb
sbb
neg
insb
subb
mov
cmp
call
push
imul
cmc
les
xor
cmpsb
add
cltd
rclb
xchg
xchg
sbb
push
std
xchg
mov
je
xor
fstl
xlat
xchg
cmp
sub
fwait
fs
and
leave
lock
test
hlt
bound
add
cli
jb
jae
pop
mov
cmpsb
fisubl
jecxz
sbb
test
sbb
enter
cs
repz
pop
movntps
and
mov
out
adc
or
insb
cmpsb
pop
movsl
and
jnp
shrl
stc
xor
xor
inc
or
cmp
out
and
mov
or
inc
into
outsb
ficoms
sub
andb
scas
movsl
mov
arpl
aaa
rcl
mov
or
stos
aad
sub
sbb
pop
and
push
inc
adc
jmp
xchg
ja
mov
xor
pushf
sub
cltd
or
push
mov
sbb
outsl
cmpsb
pop
cli
jno
mov
divl
add
add
ss
into
out
addr16
rcrl
jmp
lret
aaa
push
scas
fwait
popa
xor
andb
mov
dec
push
pop
adc
popf
mov
jne,pt
and
push
ds
repz
test
test
movsl
push
pop
pop
xorl
mov
add
lods
nop
mov
sbb
push
aaa
pushf
clc
cmp
cmp
and
push
xor
es
sub
shll
and
int3
jnp
push
test
jmp
xlat
int
cmp
imul
dec
xchg
push
adc
inc
leave
xor
jns
xor
mov
cmpb
test
rol
pop
mov
test
xor
pop
pop
insb
insl
js
xchg
scas
mov
sub
xorl
arpl
fld
mov
lcall
dec
imul
fwait
lods
xchg
xor
je
cmp
leave
xor
or
ljmp
mov
lods
jg
ss
mov
sahf
pusha
mov
add
push
mov
and
cmpsl
xchg
sbb
or
pop
pop
outsb
and
lock
push
push
pop
jae
push
in
adc
cltd
add
pop
lret
cmp
and
xchg
xchg
repnz
out
or
mov
mov
xchg
mov
nop
sbb
sbb
jl
notb
ds
xor
jnp
outsl
or
mov
lret
test
adc
leave
mov
jae
adc
adc
dec
mov
aas
add
sub
into
aaa
cmp
sbb
aas
sub
loop
mov
rolb
xchg
xor
daa
mov
pop
lock
adc
inc
mov
inc
ss
add
mov
andl
or
out
adc
jle
inc
orl
imull
push
cmp
mov
call
and
cmp
lock
mov
cwtl
int
and
xchg
mov
pushf
adc
adc
or
mov
add
jmp
sbb
ss
xor
adc
push
ret
bound
outsl
cmp
fmulp
sbb
jg
leave
mov
popf
lods
ret
cmpsl
aaa
popa
lea
push
mov
enter
sbb
pushf
and
cwtl
and
sub
mov
mov
xchg
dec
or
lcall
inc
push
sbb
or
xlat
stos
adc
xchg
aam
stc
jmp
xchg
sarl
dec
fbstp
arpl
scas
mov
cmp
mov
stos
mov
mov
lcall
cld
adc
sub
inc
pop
lock
mov
and
push
fimuls
icebp
ja
lods
mov
push
in
sbb
jb
mov
xor
push
shl
mov
sbbb
dec
lcall
das
insb
adc
pop
cmc
mov
dec
adc
vmread
xor
insl
mov
jp
mov
push
negb
test
mov
dec
jns
push
aas
sbb
fcoml
fcmove
mov
pop
add
jp
popf
push
in
int3
jae
das
dec
jnp
push
mov
imul
cmp
mov
push
xchg
pop
pop
dec
int3
ds
push
in
dec
lds
cld
xchg
mov
aaa
sti
aad
sti
popa
xchg
mov
arpl
loop
cmpsb
inc
out
xor
cmpsl
loope
daa
movsl
jg
pop
push
cmp
push
scas
mov
pop
xor
mov
cli
push
adc
loopne
aas
sbb
cmp
sarl
sbb
scas
sbb
sub
pop
push
or
mov
fidivrl
jl
pop
sub
and
fwait
int
inc
mov
stos
sub
jnp
fcomps
and
push
idiv
js
in
mov
arpl
stos
js
daa
insl
mov
xchg
and
cmp
mov
adc
insl
in
stc
mov
cmp
arpl
ds
add
cmp
jo
flds
pop
cltd
inc
pop
xor
push
enter
aad
mov
adc
arpl
loopw
sti
dec
or
rcrl
ljmp
nop
xchg
push
cli
lret
pop
mov
mov
jmp
in
pop
xor
pop
pop
push
jne
jne
xchg
adc
push
idivl
aad
mov
add
lahf
jmp
test
xor
jbe
lods
and
pop
out
js
pop
imul
and
dec
out
mov
adc
dec
fmull
imul
xchg
mov
pop
enter
adc
sbb
inc
mov
xor
pushf
jns
fprem
mov
ret
ljmp
es
cwtl
mov
and
mov
inc
aad
mov
dec
shrl
mov
fdivs
cld
ret
adcb
or
test
or
stos
xor
xchg
push
fs
ret
shlb
js
imul
xor
add
push
add
mov
inc
add
loop
and
loop
push
mov
fs
mov
test
xchg
xchg
ljmp
ljmp
xor
fs
aad
pop
pop
js
push
adc
call
ljmp
pop
aas
xchg
cmp
cs
add
scas
push
call
ss
stos
icebp
sub
xor
ljmp
mov
add
addr16
adc
ret
into
dec
push
dec
popa
stc
enter
dec
or
adc
mov
pop
or
dec
adcl
or
dec
xchg
insl
fdivl
cs
lret
jnp
sti
adc
push
in
pushf
adcb
mov
cmp
mov
fsubl
dec
xchg
cmp
push
clc
into
fwait
insb
es
push
dec
sub
in
push
push
mov
fisttpll
xor
adc
mov
cmc
iret
pop
mov
push
sub
pusha
xchg
shl
ret
insb
test
mov
aam
or
fwait
sarb
xchg
aaa
data16
jbe
xlat
mov
mov
int
ficoml
repz
and
jg
mov
aad
inc
mov
or
xor
mov
xorps
lahf
ficomps
push
aam
jnp
fdivl
cwtl
xor
inc
aad
sbb
movsb
sub
pop
arpl
push
pop
mov
jmp
pop
mov
aad
mov
xor
sub
or
push
cltd
loopne
int
jo
mov
leave
mov
repz
mov
mov
out
in
scas
mov
or
hlt
pop
ds
cmpsl
stc
cs
push
jecxz
and
mov
mov
mov
cmpb
sbb
and
pop
rol
xor
xor
xor
addb
jnp
outsb
and
xchg
sub
cli
fcomps
pusha
mov
dec
and
sarb
fisttpll
shr
imul
rcl
ss
dec
push
data16
rcrb
sti
adc
stc
jae
lods
xchg
mov
stc
lcall
ljmp
pop
mov
inc
cmp
cmp
cmpsl
dec
repz
fiadds
shlb
pushf
xor
xor
les
xchg
xor
repnz
push
out
adc
sarb
repz
cmpsl
aad
fwait
pop
sbb
out
lcall
add
jle
mov
notl
push
xor
xchg
adc
jg
jns
fwait
mov
leave
mov
xchg
pop
mov
in
or
sbb
adc
xor
sbb
xorb
and
fdivrl
sub
shrl
sbb
mov
stos
dec
out
cmp
sub
add
insb
push
shlb
mov
push
inc
enter
push
je
cmpsb
scas
inc
pop
push
adc
test
jp
sub
inc
mov
fimull
mov
punpcklbw
mov
xchg
cmpsb
add
out
aas
jmp
sbb
cmp
sbb
mov
addr16
mov
pop
push
lret
pop
jmp
call
repz
pop
cmp
pop
bound
jmp
dec
or
std
sub
in
push
hlt
jl
outsl
push
loopne
add
mov
int3
movsb
push
and
fldcw
insb
cmp
jb
and
das
sub
sub
lods
add
cltd
mov
loopne
mov
push
lcall
pop
dec
movsb
in
xchg
mov
mov
sub
outsb
aad
jno
push
xor
fidivrl
ja
ds
repz
insb
in
sbb
test
mov
pop
lret
inc
dec
and
inc
mov
fs
cmp
out
notw
repnz
mov
outsb
jecxz
clc
push
cmpsb
mov
mov
or
xor
mov
gs
in
adc
sbb
mov
jns
fxch
sub
shlb
xchg
ds
mov
test
out
cmpsb
mov
pop
xor
jns
aas
sub
mov
pop
cmpsl
arpl
xchg
enter
cld
push
or
popa
push
popf
hlt
addr16
mov
cltd
gs
mov
mov
iret
addr16
out
dec
cld
lods
clc
jmp
out
pop
push
ret
clc
aad
mov
popa
pushf
stos
cs
dec
je
and
inc
push
xlat
loope
mov
pop
and
pop
push
cs
shll
pop
dec
jmp
inc
aad
cwtl
repnz
push
in
mov
xor
or
outsl
jnp
mov
sub
adc
sbb
cs
cs
adc
rcll
fucomp
adc
jge
xchg
xchg
adc
pop
pop
xor
and
ljmp
push
loop
jmp
mov
dec
jecxz
pop
cs
mov
out
inc
xor
les
popa
aaa
cmp
pop
cmpsb
push
push
pusha
inc
loope
test
xchg
pop
cmp
push
mov
movsb
jp
push
sub
pop
insl
les
and
jnp
push
and
xchg
mov
sbb
jo
pop
cltd
lds
sub
sub
add
insl
movsb
orb
daa
pop
fsubrp
add
mov
and
sbb
scas
mov
mov
call
outsb
push
movsb
insb
scas
aaa
inc
repnz
fdivs
into
imul
or
iret
xor
xchg
popa
icebp
mov
out
xor
cmpsb
cli
aas
ss
out
or
shl
fdivs
and
gs
cmc
xchg
pop
pop
jl
mov
fildll
xchg
dec
mov
push
pushf
cmp
pushl
jmp
and
insb
cmp
mov
movsl
out
sbb
dec
pop
push
mov
lret
je
in
mov
xchg
xlat
imul
inc
arpl
pop
adc
inc
test
and
dec
mov
fimuls
push
xor
aas
pop
inc
pop
mov
pop
mov
in
les
dec
orl
das
das
and
cwtl
jb
rol
sbb
lods
cmp
xor
in
xor
int3
mov
popa
test
xchg
imul
lock
lret
ljmp
insl
jge
insb
adc
and
in
mov
call
inc
lods
lea
push
cmpsl
cmpxchg8b
int
out
stos
jecxz
pop
in
dec
into
dec
dec
out
test
leave
lahf
cmpsb
inc
sti
popa
xchg
mov
pushf
mov
jmp
ret
sub
dec
scas
mov
jmp
or
mov
pop
or
xor
cmp
add
cmp
jp
cwtl
ds
jno
mov
lret
fstps
jns
mov
loopne
pop
or
xor
pop
mov
insb
sub
add
lock
push
pop
push
xor
pushf
sbb
add
pusha
in
add
insl
cld
cs
aaa
pop
in
and
mov
aaa
loop
pop
out
push
ret
pop
jbe
imul
movsb
mov
cmpsl
inc
out
jno
lahf
aad
test
mov
clc
or
lahf
xchg
cmpsb
ss
sahf
jno
mov
jecxz
lahf
cmp
gs
das
dec
dec
orb
insl
insb
lods
pop
add
inc
and
inc
stos
xchg
push
sub
clc
addr16
xchg
nop
mov
dec
push
pushf
pop
jbe
out
je
jmp
lret
cmp
and
in
hlt
and
mov
movsb
insl
pop
fsubrl
mov
dec
pushf
sub
lar
xchg
call
jmp
mov
mov
out
enter
test
dec
mov
jle
lea
stos
cmp
int
cmp
mov
gs
push
sarl
outsb
mov
xor
cmp
popf
iret
xlat
popa
jl
data16
fwait
inc
dec
jbe
xorl
mov
int3
dec
xchg
imul
in
cwtl
insb
out
call
xchg
mov
mov
xor
lret
sbb
rclb
xchg
xchg
mov
mov
sub
dec
in
adc
stos
add
sub
shrb
movl
inc
cmp
xchg
xor
insl
mov
add
push
cmp
jno
sbb
and
sarl
and
fstps
xor
inc
lcall
adcl
inc
and
cmc
xchg
leave
int
movsb
push
js
sti
sbb
ljmp
jp
stos
sbb
inc
sub
jle
lret
xchg
ds
jge
and
dec
push
idiv
ret
dec
add
add
fisttpll
sti
xor
xchg
adc
adc
adc
xor
les
mov
inc
mov
mov
fidivs
dec
mov
icebp
sub
or
and
push
stc
jno
push
out
dec
fimull
cmp
adc
sarl
add
pushf
stos
jmp
addl
test
mov
repnz
mov
fimull
cltd
or
in
lahf
pop
xchg
pop
fdivl
or
xlat
jl
lahf
and
lds
test
mov
scas
sti
xor
sbb
add
popl
jae
cld
nop
cmc
test
or
sbb
xchg
and
ret
pop
push
outsl
mov
inc
outsb
loop
mov
rol
movsb
pop
test
into
sub
loopne
bound
mov
icebp
imul
mov
mov
and
inc
mov
jle
mov
in
loope
dec
cmp
push
mov
mov
out
mov
lcall
mov
aam
push
out
inc
push
pushf
add
out
inc
sahf
inc
outsb
mov
das
jo
push
xchg
inc
jg
push
leave
cmpsb
sbb
push
ret
add
dec
pusha
and
out
movsb
pop
call
sbb
outsb
jns
iret
and
xor
ss
sti
adcl
mov
cwtl
cmp
xchg
cmpsb
leave
fcomps
mov
sahf
pop
add
jge
or
or
mov
or
xchg
mov
in
insl
dec
rcrl
push
sbb
and
push
or
mov
mulb
jne
jp
sbbb
xchg
pop
pop
sbb
addr16
pop
aas
cmc
jo
sbb
or
cmpsb
xchg
cmpl
aas
jo
inc
mov
ret
lods
fs
test
adc
aam
sbbb
cwtl
jnp
lods
dec
sub
outsb
scas
or
push
and
in
cmp
jl
xrelease
xchg
aas
sbb
jbe
gs
push
mov
jle
popf
push
inc
stc
stc
or
push
add
xor
xchg
or
jnp
or
mov
test
mov
das
mov
flds
push
push
jl
stos
pop
cmp
push
pop
mov
pop
fsub
mov
outsb
lods
sbb
and
or
data16
shrb
outsl
shlb
ret
dec
loop
arpl
repz
add
or
mov
cmp
mov
mov
es
cltd
add
mov
xor
xchg
cmp
xchg
scas
shll
je
sbb
add
xchg
int3
iret
bound
xlat
cmpsb
sbb
push
cmpsb
xchg
in
sbb
mov
dec
jp
pop
mov
xlat
dec
add
loope
fwait
mov
mov
sbb
lea
adc
push
loopne
rolb
into
jecxz
mov
imul
in
inc
dec
mov
bound
inc
sub
push
ffreep
push
dec
push
lods
lahf
out
mov
add
sbb
and
mov
sbb
pop
sbb
pusha
ds
jecxz
or
lea
lods
adc
xchg
pushf
xchg
inc
test
push
sub
pop
fs
pop
mov
xchg
es
mov
les
mov
inc
loope
pop
fisubrs
scas
dec
xor
int
pusha
les
test
mov
push
sub
notb
sub
inc
dec
pushf
fwait
into
stos
inc
movsl
and
arpl
lea
mov
out
test
mov
icebp
inc
lcall
xchg
adc
push
mov
mov
ret
dec
arpl
fistpl
mov
pop
sub
dec
xchg
inc
ret
js
imul
js
test
mov
mov
and
popf
into
shlb
jne
add
inc
fildll
sub
lcall
mov
stos
lret
bound
inc
adc
mov
mov
movsb
lret
dec
mov
cmp
mov
repz
insl
sbb
sarb
adc
lea
shrl
push
xor
out
imul
xchg
cmpsl
dec
pop
leave
mov
jbe
xor
cmp
out
icebp
cmp
bound
xor
lds
push
xlat
cmp
mov
push
test
pushf
shr
jp
mov
add
lahf
mov
popa
je
cmp
pushf
imul
xor
mov
or
mov
es
aas
leave
and
sub
adc
sbb
mov
inc
mov
es
dec
out
pusha
out
jnp
cmp
xchg
xor
icebp
test
int
data16
push
xchg
in
xor
dec
or
stc
js
or
shl
jmp
ret
push
sub
add
jle
loope
add
test
xchg
push
lret
adc
out
pop
jle
jnp
mov
jnp
rorb
sub
scas
mov
push
sub
mov
sti
mov
push
adc
and
sbb
dec
rclb
xlat
addl
adc
jecxz
sbb
sbb
mov
aam
sub
or
imul
adc
pop
adc
addr16
rolb
ret
cmp
js
movsl
jecxz
sub
loop
push
mov
and
dec
jl
ret
outsb
in
leave
stos
mov
mov
cmp
popa
adcb
mov
push
int3
mov
mov
fldl
popa
mov
lret
lret
aad
mov
lret
movsb
sbb
bound
jl
outsb
xor
sub
addr16
lcall
pop
xor
push
dec
adc
add
mov
arpl
in
cmp
cmp
imul
sbb
repz
inc
arpl
pop
decb
sbb
and
add
nop
andb
aas
clc
or
mov
push
mov
jb
inc
popf
sbb
dec
ror
xchg
jp
test
test
fldcw
pop
jo
add
arpl
nop
add
adc
mulb
jns
mov
dec
popa
ret
lock
shlb
lods
pop
fidivs
pop
xchg
jns
rolb
inc
repz
popa
mov
clc
leave
pop
jl
jmp
imul
push
call
sbb
int3
ja
cmpsl
sarb
inc
dec
rcr
incl
xchg
cld
mov
jnp
mull
ljmp
addb
aas
fs
push
push
inc
xchg
jns
jecxz
jp
dec
dec
mov
adc
scas
out
sub
iret
jecxz
std
xor
insb
mov
or
lcall
inc
test
inc
sahf
pop
dec
or
push
test
cmp
or
cmp
aam
cmp
sub
jae
rclb
lahf
ds
fdivrs
push
lock
inc
jp
std
clc
sbb
lret
outsb
pop
test
enter
jo
adc
pop
mov
jge
add
loopne
xor
pop
les
cmp
sbb
sbb
pop
fadds
inc
lock
lock
sbb
cmc
xchg
xor
jge
inc
lahf
push
mulb
fldenv
cltd
add
sbb
adc
dec
add
addb
sbb
jle
loopne
jg
adc
inc
orb
and
int
or
das
subb
adc
xchg
sub
outsl
iret
test
pop
push
fwait
xor
pop
cmp
andl
xchg
int3
inc
mov
lret
test
push
mov
sub
jbe
mov
cwtl
jnp
or
lcall
in
mov
pop
sbb
xchg
loop
gs
imul
inc
push
int
push
js
das
imul
cmc
outsb
out
push
ja
adc
pop
cmp
and
ficompl
pop
roll
test
fidivs
fcmovb
mov
xchg
push
lods
lret
gs
gs
inc
add
and
les
sti
pushf
inc
into
dec
adcb
insb
sbb
push
cli
xor
imul
cmp
or
jle
mov
push
adc
xchg
sbb
dec
cmpsl
cmp
data16
jo
cmp
xchg
out
cld
sbb
fsubrs
insb
push
sub
popa
push
mov
adc
jae
adc
cwtl
jae
mov
mov
sbb
inc
push
mov
rep
lds
mov
aad
add
repz
dec
jecxz
add
xor
cli
rolb
es
lcall
pop
xor
es
add
fsts
mov
imul
or
and
adc
pushf
out
pop
stos
arpl
daa
jmp
jo
xchg
pop
xor
sti
decl
push
inc
mov
out
sub
xchg
mov
rcrb
out
cmc
sbb
or
fwait
andb
out
jns
dec
mov
std
aas
stc
icebp
cmpsl
fisubl
pop
dec
int
leave
pop
mov
subl
jo
or
pop
sbb
push
pop
pop
inc
mov
repz
fisubl
in
pusha
addb
inc
add
jne
jecxz
aam
add
jnp
add
add
jmp
or
adc
loope
cmp
pop
push
xlat
sti
insb
idivl
addr16
sbb
fiaddl
loope
dec
dec
stc
inc
sub
shll
fs
clc
mov
mov
jmp
repnz
and
outsb
push
inc
dec
lods
xor
push
mov
inc
enter
shlb
sbb
test
add
push
jl
ja
ret
add
fsubs
fmuls
int3
xchg
cmp
lahf
jle
xor
mov
rcrl
insb
aam
mov
mov
cmp
push
adc
int3
out
mov
insb
shrb
repz
mov
push
jmp
insb
out
sbb
adc
stos
dec
sarl
je
ds
jo
push
jnp
mov
xchg
or
lret
lahf
stos
sub
dec
pop
pop
xchg
fistps
jns
jno
or
sbb
push
inc
lds
xor
lds
sub
sbb
mov
fyl2x
mov
or
cmpl
mov
cwtl
or
mov
dec
jb
ret
adc
mov
cmp
sbb
pop
cltd
cwtl
in
sete
inc
dec
ret
rol
add
and
loopne
fisubs
cld
mov
adc
mov
mov
in
rcll
pop
imul
daa
inc
dec
mov
mov
xchg
into
ds
fs
mov
mov
xchg
adc
jns
xchg
inc
scas
xchg
outsb
lret
xchg
jns
outsl
xchg
imul
mov
push
fwait
into
xchg
movsl
add
data16
leave
cwtl
loopne
lock
add
pop
int
xlat
cld
mov
xchg
sbb
daa
add
imul
repnz
push
cmp
dec
sbb
enter
xchg
shl
xchg
out
sub
or
push
mov
or
int
pop
push
leave
and
arpl
adc
aas
je
pop
addl
sti
add
aam
add
push
repz
les
pop
inc
es
xchg
insl
pop
jne
push
jne
add
push
jg
inc
cltd
cwtl
aad
push
jmp
cmp
aaa
mov
insb
push
cmpxchg
jmp
inc
and
nop
jle
mov
les
push
add
ret
jbe
ds
pusha
and
test
jecxz
sub
popf
cmc
shlb
and
aam
mov
daa
fs
je
pop
int3
mov
sarl
sbb
pop
pop
xchg
rorl
sub
outsb
lock
jns
shll
insl
enter
test
and
sbb
ftst
pop
mov
mov
int3
mov
fidivrs
pop
insb
outsl
out
pop
cmp
sbb
mov
push
add
push
and
orl
rcrl
sub
enter
adc
scas
sbb
aaa
cmp
sahf
mov
pop
jb
or
scas
sbb
inc
mov
xor
inc
add
xchg
pop
sbb
gs
inc
repz
leave
rorl
jmp
fucomi
adc
rcl
inc
or
push
movsl
lahf
jp
in
or
insl
adc
xor
insb
jle
pop
repnz
cwtl
das
testb
jl
inc
and
ret
sub
xlat
into
out
mov
xchg
xlat
jg
imul
inc
jle
ret
add
dec
out
scas
cs
xor
sbb
adc
jo
pop
mov
aad
dec
dec
mov
dec
adc
and
push
mov
mov
sbb
xchg
sbb
or
xchg
out
mov
test
dec
fs
movsl
adc
dec
orb
outsb
lds
xchg
imul
pop
mov
mov
hlt
in
shr
jbe
jmp
dec
loopne
pop
fstpl
and
xlat
push
mov
adc
xor
shr
jb
add
xor
mov
inc
mov
icebp
fimuls
add
fldcw
popl
nop
xor
cmpsb
into
mov
aam
xor
lahf
aam
cmp
fs
pop
pop
mov
sub
fistpll
push
dec
lods
fs
jno
sti
cmpsb
fisttps
pop
pop
or
jns
pop
scas
ss
mov
or
pop
sbb
lea
cmp
dec
lahf
shlb
repnz
and
mov
add
and
in
dec
jns
data16
pop
fsubr
pop
pop
shlb
cwtl
pop
iret
or
std
je
bound
test
xchg
mov
mov
ror
jbe
test
dec
sti
or
mov
xor
cmp
push
jg
stos
push
ds
cli
add
xor
cmp
or
sub
adc
lods
push
sub
or
mov
jp
xchg
cltd
scas
lea
cmc
xchg
add
lret
push
ss
iret
adc
pop
xchg
sbb
jmp
imul
jo
stos
push
xchg
or
pop
pop
andl
vcvtss2sd
arpl
cmc
out
daa
outsl
rorl
pop
dec
in
ss
xor
js
jge
movsb
shrl
xchg
push
push
push
jecxz
popf
mov
popa
sbb
fcmovne
std
fsub
cmc
dec
push
push
cmp
inc
outsb
popa
mov
push
in
sbb
jno
nop
and
daa
out
push
lea
and
daa
mov
mov
fidivrs
cmpb
fdivrs
add
gs
or
in
pop
aad
jo
and
xor
pop
je
pushl
dec
adc
adc
inc
pop
or
dec
dec
and
rcl
pop
enter
lret
or
pop
push
push
and
cld
mov
in
xor
cs
or
jecxz
shrb
aam
mov
add
inc
lea
sahf
dec
push
imull
adc
in
xchg
loope
mov
mov
pop
xor
pop
dec
dec
push
sbb
movsb
or
inc
daa
js
push
push
sub
leave
jp
pop
mov
or
and
mov
sub
in
inc
stos
mov
mov
rorb
add
push
add
jge
lahf
dec
and
pop
fsubr
push
push
out
mov
lods
jnp
adc
es
push
adc
mov
icebp
es
add
push
jbe
jg
jns
jg
aad
adcb
out
jno
push
sbb
test
sahf
movl
push
or
pop
test
push
pop
mov
sti
dec
lods
lahf
mov
jg
or
mov
pop
jo
cmp
jge
mov
nopl
imul
xor
out
stos
xchg
xchg
adc
ja
repnz
jmp
cmp
scas
xor
xchg
xor
jo
pushf
inc
inc
push
push
lods
mov
cld
push
mov
sbb
stc
scas
mov
movsl
mov
addl
divl
addr16
pop
gs
ret
inc
mov
pop
popa
fistpll
aaa
jbe
arpl
sub
pusha
xchg
xchg
dec
push
je
inc
bound
xchg
jbe
ja
cmpsb
outsl
dec
test
test
push
xlat
lcall
xor
aas
adcb
dec
lods
cmc
and
loope
inc
mov
test
neg
sub
mov
xchg
dec
pop
cmpsl
cltd
movl
push
xchg
add
test
test
dec
dec
addr16
dec
lret
cmpb
xchg
subb
push
dec
cs
push
scas
rolb
mov
mov
inc
out
push
sub
jbe
push
jle
clc
or
push
sbb
rclb
add
xor
add
movsb
test
ficoml
or
pop
jp
sub
scas
stos
sub
xchg
hlt
insl
loop
and
fistpll
lahf
in
mov
ss
sbb
into
shrl
dec
gs
bound
xorl
nop
sub
xchg
push
js
cmp
sub
cmp
mov
adc
jbe
mov
push
jl
xchg
lret
xor
or
jp
sahf
test
inc
lods
cmc
outsb
subb
dec
in
jp
stc
mov
stos
jne
inc
dec
iret
cmp
cli
jle
xor
pop
pusha
inc
movzwl
mov
push
jg
mov
ljmp
dec
sti
pop
mov
lods
lods
leave
sub
mov
cmpsb
xchg
lock
fmull
mov
jb
mov
dec
push
aad
jno
add
stos
test
sbb
pop
fld
aaa
xchg
mov
in
adc
jp
cmpsb
outsl
imul
mov
hlt
loope
add
divl
pop
push
mov
fiaddl
adc
movsb
filds
cmp
pop
pop
cwtl
adc
lock
sub
lahf
out
dec
jl
xlat
addr16
std
cmp
pop
xchg
dec
add
addr16
enter
sub
adc
rorl
fwait
enter
add
movsl
out
xlat
mov
lds
push
lret
mov
popf
and
rclb
fisubl
mov
pop
dec
mov
sub
push
cwtl
je
test
ljmp
sub
or
sub
xchg
cmp
or
cmp
sbb
xor
xlat
das
jge
push
push
or
jle
movsb
pusha
out
ror
scas
push
add
leave
xor
test
jg
icebp
int
jmp
sbb
int3
mov
ja
sub
mov
cmc
jne
inc
sti
mov
or
fsubrs
notl
lret
sub
sub
mov
cmp
scas
inc
inc
and
xchg
or
xchg
fimuls
hlt
and
or
xor
fstps
cltd
jl
sbb
xor
int
jne
inc
fmuls
scas
jle
xchg
sbb
in
xchg
aaa
pop
in
rol
and
xchg
mov
ret
das
sbb
pop
cmpb
xor
xchg
sbb
fidivrs
dec
push
xor
std
sub
scas
aad
repnz
je
pushf
aas
adc
dec
jns
fisubl
addr16
or
gs
cmc
cmp
and
mov
push
rcll
cld
and
insl
jno
jae
es
adc
push
sbb
into
in
cld
fildll
pop
sbbl
dec
adc
mov
loop
test
es
fs
or
xchg
shlb
mov
cmp
sbb
xchg
and
loope
xchg
out
pop
dec
xchg
cmp
sbb
popa
loop
dec
outsb
jae
or
testl
pop
out
fwait
pusha
jnp
std
pop
test
or
xchg
xor
push
and
jbe
shrl
adc
ret
or
xchg
xchg
imul
sub
lret
add
fdivs
add
jecxz
add
movsl
mov
push
inc
testb
stos
push
cmp
icebp
lcall
rcrl
cmpsb
jnp
push
xor
sub
sub
outsb
call
mov
lods
and
lods
rcrl
and
pop
outsb
sbb
mov
clc
mov
jg
fwait
cmp
sbb
cmpsb
jg
lret
mov
bnd
dec
push
xchg
push
test
out
repz
adc
add
xor
pop
std
in
jbe
xchg
inc
mov
or
and
je
stc
lds
add
inc
jo
bound
mov
push
movsb
into
call
ret
lds
je
lret
or
or
hlt
pop
lcall
pop
push
jns
and
popf
mov
jmp
fst
lcall
aaa
jmp
stos
fistpl
mov
fwait
out
pop
repz
lds
add
xor
adc
and
lods
lret
push
hlt
insb
nop
pop
mov
fs
jnp
outsl
xor
jp
fucomi
lock
ret
lret
xchg
or
data16
into
xchg
sub
test
xchg
pop
icebp
cmpsl
mov
jg
in
add
add
bound
xor
pop
aaa
inc
and
add
xor
sbb
mov
xchg
fldcw
xchg
pop
mov
pop
add
pusha
lahf
pop
mov
in
cs
cli
xrelease
xchg
int
jge
out
xor
fisubrl
mov
and
popa
pop
mov
rep
pop
jae
sub
mov
sub
and
inc
lods
leave
jle
mov
xchg
clc
into
inc
cmp
or
pop
mov
cli
fs
lods
hlt
cmpsb
sbb
jnp
jecxz
mov
push
das
push
out
fildll
lds
jmp
add
aad
xor
mov
inc
cld
and
fisubrl
xlat
or
mov
rclb
loop
in
mov
fldt
add
aaa
or
nop
scas
sti
adc
mov
cli
inc
pop
dec
mov
in
or
fdivl
lea
mov
mov
je
pop
jno
int
push
iret
xchg
dec
jbe
inc
adcb
mov
lahf
adc
in
mov
or
mov
inc
test
subb
mov
mov
cmc
stos
scas
out
cmp
pushf
mov
xor
mull
sbb
fisubrs
push
jl
aaa
cmp
xor
pop
out
stos
mov
cmc
jno
push
in
xor
ret
addb
adc
inc
or
int3
pop
or
and
cmpb
pop
sbb
add
adc
subl
fbld
js
xor
pop
lcall
hlt
out
sbb
sbb
loope
or
or
or
clc
inc
pusha
inc
int
xchg
call
rorb
bound
movsl
mov
sub
mov
mov
cmp
sahf
mov
mov
and
dec
outsl
and
jle
mov
lret
lret
dec
fwait
inc
mov
or
insl
scas
dec
loop
lahf
ss
add
push
mov
stos
test
or
aaa
or
adc
xchg
xchg
jbe
clc
sub
nop
into
cmp
sbb
add
mov
add
cwtl
inc
sbb
push
ret
add
out
sbb
xlat
adc
jmp
dec
inc
pop
sbbl
test
in
lea
ja
loope
lds
xchg
xchg
inc
and
adc
mov
mov
mov
ret
adc
imul
dec
scas
in
imul
pop
jle
sbb
or
fwait
mov
sub
mov
fimull
aaa
mov
add
jecxz
jne
leave
mov
push
insb
xchg
fisubl
mov
or
and
add
and
mov
cmp
dec
adc
add
mov
test
clc
shlb
movsb
sub
adc
mov
push
xor
iret
stc
mov
insl
loopne
addr16
dec
pushf
xchg
cmpsb
jbe
dec
inc
mov
and
mov
decl
jg
add
sarl
flds
fcmovnb
int3
cmp
out
aas
push
out
xor
fstp
pusha
rcr
fldl
loope
xchg
add
jecxz
sbbl
fldenv
stc
sub
inc
jnp
jmp
jae
ficompl
mov
xchg
cmp
dec
sbb
xchg
mov
loope
jae
mov
dec
arpl
push
add
push
imul
in
mov
mov
ljmp
repnz
arpl
adc
xchg
xchg
nop
insb
mov
mov
in
into
adc
cmp
inc
das
inc
inc
sub
pop
inc
xchg
push
jle
mov
xchg
push
fcmove
adc
incl
push
ljmp
push
sub
imul
jg
jle
pusha
cli
adc
and
or
cmp
push
xchg
cmc
dec
aad
shrb
pushf
xor
push
sbb
push
inc
xor
jle
dec
cmp
test
mov
in
mov
cld
pushf
cmpsl
arpl
and
dec
stos
push
xchg
in
add
xor
xchg
sbb
lret
int
and
push
mov
imul
jecxz
addr16
sub
mov
mov
jo
movaps
and
enter
stos
or
jno
movsb
sbb
adc
xchg
and
mov
cli
sbb
mov
scas
sub
pop
inc
gs
sahf
xchg
xchg
movsb
lret
sbb
xor
or
repnz
push
sbb
lcall
mov
dec
xor
or
je
pop
repnz
pop
push
dec
xchg
xor
scas
add
push
mov
jle
pop
jno
stc
add
inc
push
test
ja
stos
ljmp
lods
ret
daa
xchg
sub
jae
in
out
test
repz
imulb
data16
mov
or
ret
loope
adc
daa
mov
cmpsb
les
in
enter
insl
mov
jnp
stos
pop
inc
int
mov
add
xchg
mov
sub
adc
sbb
sub
inc
flds
pop
sbb
xor
shrb
addr16
stc
aam
lcall
out
scas
pop
in
push
xlat
dec
outsb
lods
sub
cli
pop
jnp
pop
cmpsb
xchg
call
pop
mov
test
and
adcb
adc
pushf
xchg
pop
dec
fisttpl
aas
in
sub
imul
pop
pop
or
movsl
jno
pop
sti
std
add
dec
adc
call
sub
add
out
stos
loopne
int3
xchg
mov
mov
adc
pop
mov
adc
mov
adc
xchg
mov
sub
jmp
movsb
push
aam
jg
pop
ljmp
andl
ljmp
dec
std
mov
leave
jge
lock
in
dec
movsb
data16
repz
testl
loope
outsl
cmpsb
addr16
sub
pop
stos
enter
xchg
adc
adc
clc
or
xchg
jmp
jl
adc
les
das
or
int3
dec
xor
bound
loop
add
jmp
rorb
mov
xor
leave
jbe
lods
push
jne
out
insl
leave
xor
cmp
out
or
fs
sarb
or
xchg
inc
add
jb
mov
sub
gs
adc
ljmp
push
repnz
and
push
ds
cltd
cs
sbb
aam
mov
dec
sahf
aam
jnp
sbb
mov
es
orb
adc
psrlw
frstor
lcall
jg
mov
ja
int
pop
add
ljmp
xchg
jl
lds
pop
sahf
dec
pop
and
pop
adcl
xlat
test
mov
cmp
dec
ret
xchg
sarb
in
ret
xor
ss
xchg
sub
inc
mov
mov
leave
fs
add
dec
popf
adc
push
xchg
cli
jb
clc
fsubp
xchg
pop
xor
mov
lds
mov
pop
push
js
mov
and
into
jo
jg
push
stos
sub
jno
cmp
shlb
sbb
cli
std
arpl
cmp
cmp
pushf
or
mov
sub
hlt
pop
push
mov
ja
ss
lods
jmp
into
push
adc
cs
icebp
popa
or
in
jmp
pop
arpl
std
and
mov
sub
orb
stos
enter
pushf
lods
std
loopne
cli
ds
push
ja
stos
mov
inc
repnz
out
sbb
jno
jbe
or
jae
lods
cld
mov
stc
or
jb
insb
test
or
xchg
cmpb
in
movl
mov
das
xchg
jo
push
sub
out
xchg
sub
sub
add
or
outsb
pop
cwtl
cmc
stos
push
sub
mov
out
and
and
sub
pop
add
shrb
pop
push
xor
sbb
and
and
cmp
jne
mov
hlt
fidivrs
test
pop
xor
aas
dec
sbb
shr
mov
inc
fbld
jb
sbb
out
and
enter
mov
add
repz
adc
or
lock
sub
les
test
jge
sti
cmp
mov
ffree
hlt
sub
xor
mov
int3
lods
push
xor
push
xor
outsl
sub
add
push
popf
xchg
call
jne
mov
mov
es
push
mov
mov
sti
loope
xor
sbb
adc
xlat
inc
loop
jae
aaa
sub
mov
out
arpl
inc
in
push
cwtl
mov
pop
fdivr
ds
iret
test
dec
enter
addr16
lret
xor
adc
sbb
aam
mov
mov
pop
rcrb
inc
in
int
and
cmp
ret
dec
movsl
xchg
sub
dec
sub
iret
nop
scas
pop
jl
cmp
xor
inc
cmpsl
sub
inc
rcll
flds
test
mov
xchg
in
mov
fdivr
pop
out
sbb
mov
aas
js
and
xchg
std
xchg
mov
aad
push
cmp
lcall
sub
or
outsb
test
adc
mov
sub
fsts
daa
fwait
pop
mov
daa
stos
outsl
lahf
jp
mov
fmulp
std
cmpsb
mov
into
xor
jbe
scas
cs
test
int
mov
xchg
nop
xchg
dec
sbb
data16
pop
dec
sbb
mov
and
push
insb
fdivrs
sarl
movsl
mov
or
mov
shrl
sub
out
cmp
xchg
xorb
push
pop
sti
ljmp
mov
jg
aam
xor
jno
adc
xorl
in
add
mov
test
hlt
inc
adc
sub
xchg
dec
sbb
popa
das
clc
int
jecxz
mov
xchg
stc
jmp
shl
cmp
sbb
ret
jo
and
dec
out
cs
xchg
ja
pop
dec
xorb
inc
and
jecxz
out
jo
pop
add
jo
pop
incb
or
cmp
iret
and
or
jl
and
xchg
fidivrs
sbb
jge
stc
mov
nop
inc
andb
arpl
rclb
ret
and
jmp
mov
mov
jle
movsl
int
sub
dec
mov
ret
mov
cmp
dec
gs
pop
repnz
lcall
jbe
fists
aaa
clc
xchg
mov
stos
dec
cmp
movsb
sbb
cmp
inc
imul
add
in
out
xor
fstp
fsincos
and
notb
jmp
popa
mov
pop
push
sar
or
mov
adc
add
dec
push
bound
test
jne
rcl
ret
pop
mov
or
cwtl
push
jnp
lret
mov
mulb
je
sbb
sbb
jmp
pop
xchg
sqrtps
add
adc
imull
in
bound
pop
inc
mov
mov
test
aad
add
popf
xlat
adc
or
sbb
in
xorl
test
cld
mov
aad
decl
mov
in
lds
int
cmpl
mov
push
dec
jmp
sub
loopne
and
add
push
sarl
jno
rclb
adc
divb
dec
jg
jns
cmc
mov
sbb
aaa
xor
jg
and
sub
mov
jns
xor
jb
std
gs
sub
loope
imul
xchg
pop
stos
mov
lock
scas
andb
jp
xor
jmp
lods
mov
aas
imul
imul
xlat
mov
jecxz
pop
andl
insl
pop
adc
jge
jmp
aaa
pop
fimull
flds
jge
mov
jno
aad
cmp
xchg
fistps
or
inc
jge
mov
lock
jp
mov
add
les
stc
cli
inc
cmp
xchg
push
loop
dec
ret
add
es
shlb
aaa
push
int3
add
icebp
mov
cs
icebp
adc
sahf
xor
mov
inc
mov
sti
or
sbb
cwtl
nop
ret
and
stc
lds
ds
shlb
in
sti
adc
mov
cmpsl
pop
rcl
repnz
insb
pop
insb
adc
or
fcoms
mov
das
mov
sub
add
mov
fdivl
or
sbb
jnp
sub
mov
fnsave
test
int3
xor
push
jb
mov
aad
in
add
add
jns
or
mov
or
int3
mov
pop
pop
lret
lcall
neg
mov
fstpt
bound
lahf
sbb
inc
jmp
sbb
add
vhaddpd
aam
mov
mov
xchg
sahf
pop
idiv
aaa
sub
mov
outsl
and
insb
lahf
or
sub
out
iret
inc
dec
push
sub
bound
and
bound
push
jae
push
aam
pusha
rolb
xchg
loop
jno
jge
push
jp
cs
testb
sti
movsb
or
movsb
test
test
inc
add
das
movsl
imul
jle
adc
dec
pop
mov
adc
xchg
lds
dec
pop
std
ds
mov
int3
pop
add
or
adc
add
mov
jl
pop
sub
movsb
stos
inc
pop
test
jge
and
xor
and
inc
loopne
cld
cmp
jbe
jb
push
cltd
dec
jle
adc
test
push
add
ljmp
insl
stc
mov
jb
sbb
inc
das
dec
mov
push
sub
ljmp
mov
xchg
mov
lea
mov
mov
sub
div
pop
jmp
filds
fimull
sbb
outsl
ud1
jns
mov
orl
pop
push
inc
shll
sbb
or
mov
lock
ljmp
shr
fdivrs
and
push
jne
dec
push
lret
call
ss
inc
mov
pop
fisttps
andb
push
out
jecxz
xchg
push
add
inc
sub
rcrl
pop
test
sbb
orb
ljmp
jae
inc
fwait
mov
sbb
cli
pand
cmp
mov
jge
addr16
scas
inc
in
scas
dec
pop
inc
dec
sub
and
lret
push
add
lret
arpl
ss
int3
fdivrl
fdivrs
adc
ja
fs
lds
jle
pop
jnp
push
xchg
ret
xchg
mov
out
pop
sarb
lcall
dec
iret
push
and
fcompl
xchg
cmc
inc
xchg
pop
jl
scas
mov
mov
mov
inc
popf
dec
jl
jb
sbb
mov
and
les
mov
pop
push
add
ja
cmp
adc
pop
cmp
add
mov
jb
jecxz
mov
xchg
xchg
lods
xchg
jo
jg
stos
add
jecxz
pop
into
pop
pushf
js
push
test
in
jae
jne
xor
xchg
xor
mov
mov
iret
xchg
sti
push
sbb
repz
mov
pop
mov
ret
mov
push
pop
add
xchg
mov
stos
jecxz
inc
jne
stc
aam
test
xchg
mov
fs
mov
jmp
jns
xor
mov
call
test
js
flds
push
addr16
mov
xchg
mov
or
xor
and
call
lock
shll
sbb
or
cs
cmc
push
xor
pop
dec
test
or
cmp
clc
dec
mov
cs
jo
jne
add
jbe
loope
push
adc
dec
pushf
popf
outsb
add
or
lock
xchg
fstl
pop
cltd
rorb
xor
out
mov
fmuls
sbb
or
dec
outsb
insb
jge
dec
dec
sub
mov
icebp
xchg
add
pop
or
cltd
je
movsl
dec
ljmp
lds
loop
jbe
out
cmpsl
dec
sbb
jmp
add
andl
shll
ror
out
loop
fs
fmuls
cmp
mov
sbb
sbb
lds
fildl
push
inc
mov
adc
pushf
loopne
loope
cmp
jle
out
daa
mov
imul
or
outsb
jecxz
lds
icebp
dec
test
sbb
clc
sbb
imul
sbb
and
cld
jmp
jb
int
fnstsw
cmp
inc
cmp
js
xor
ror
out
sti
push
aam
push
ret
rcrl
cmp
aam
mov
aad
jmp
enter
or
sub
or
sbb
and
shl
fs
xchg
mov
push
cltd
mov
rolb
and
xchg
cmc
and
push
push
cmp
inc
imul
mov
mov
jae,pt
adc
sbb
popa
nop
ljmp
lahf
mov
dec
imul
adc
jb
leave
or
push
jo
gs
mov
mov
in
dec
xor
ja
movsb
mov
jns
push
movsb
in
push
in
inc
push
stos
int
popf
jb
cmpsl
ret
int3
es
push
jno
cli
stos
xor
inc
loopne
mov
pushl
rclb
mov
push
test
rcl
sub
xchg
loopne
test
fldl2e
jge
jg,pn
aam
xor
or
push
xor
test
dec
add
aaa
loopne
jns
push
out
test
outsb
mov
cld
rcll
jle
sub
loope
fcmovu
or
push
in
mov
and
mov
test
fadd
or
loop
lea
cli
or
sbb
adc
add
out
pop
pusha
mov
pushf
arpl
lea
dec
push
lock
aas
in
push
pop
lea
lret
outsb
es
aam
add
pop
mov
pop
sub
inc
and
rcr
pop
push
adc
sub
leave
inc
adc
lret
popf
push
or
cmpl
and
daa
cmpsb
push
jns
shlb
lret
movzbl
lret
dec
push
mov
loopne
jo
dec
lahf
dec
cwtl
mov
shll
lahf
in
daa
push
push
outsb
aad
gs
repz
aas
frstor
test
xor
xchg
es
mov
mov
and
pop
adc
imul
mov
mov
dec
and
in
mov
imul
lret
je
push
sbb
adc
mov
push
fistpl
dec
lods
rcrb
int3
pop
mov
xor
jge
sbbl
push
and
mov
iret
clc
and
dec
loopne
sarb
subl
mov
clc
js
jmp
push
xchg
gs
push
ds
mov
mov
dec
adc
sbb
pop
mov
daa
das
inc
test
outsl
in
push
and
xchg
mov
lods
ljmp
adc
enter
sub
sbb
jno
lret
insb
xor
dec
leave
testb
pusha
addr16
and
test
aas
mov
scas
jno
int3
push
mov
or
xorl
outsl
mov
cld
jb
dec
icebp
xchg
push
ljmp
jbe
or
xchg
xchg
roll
test
inc
outsl
sub
test
fucomip
sahf
std
loop
sbb
add
jno
xchg
and
ljmp
popa
dec
out
daa
jo
addr16
sahf
xlat
xchg
daa
xchg
adc
dec
ljmp
push
mov
or
adc
in
ds
lods
call
sahf
lret
fdivrs
scas
inc
aas
shll
cmp
fs
rorl
mov
insl
out
sbb
sub
gs
repnz
test
push
push
stc
dec
sub
movsl
push
ret
add
jmp
pop
sub
ror
pop
pop
sub
sahf
mov
scas
mov
adc
rol
sub
in
push
jo
add
pop
dec
mov
test
inc
outsb
mov
and
testb
std
sbb
test
xor
jb
icebp
imul
loopne
je
js
sti
xchg
push
jle
enter
inc
pop
push
loop
mov
ret
xor
sbb
test
adc
out
dec
push
jecxz
mov
or
lret
dec
pop
repz
adc
jmp
fldcw
lret
mov
leave
xor
mov
sub
pop
leave
int3
popf
out
push
inc
xor
stc
mov
imul
jle
xlat
xchg
jo
jnp
pusha
icebp
mov
xchg
jno
cs
or
dec
dec
add
xor
cld
jns
pop
push
push
dec
jno
in
push
into
adc
jg
cwtl
insb
jmp
inc
sub
xchg
imul
dec
insb
add
cmp
xor
lea
xchg
call
cmpsb
and
add
pop
comiss
es
or
xor
jg
lock
mov
xchg
fwait
daa
in
lds
jne
js
gs
push
aam
inc
dec
int3
icebp
add
out
decl
xchg
cmp
mov
pop
xchg
nop
push
inc
ret
adc
xchg
popf
xorl
repz
mov
out
xchg
jno
dec
xchg
pop
push
test
fstpt
jmp
fs
cmp
fstpt
lret
repz
bound
insb
jl
xor
rcrl
cmp
mov
int3
movsb
test
sahf
jo
jg
pushf
xchg
or
and
popa
pop
sub
push
sub
js
xchg
add
mov
add
lock
sub
imul
ljmp
fs
pop
xor
cmp
daa
in
pop
mov
cs
into
aad
pop
sbb
in
add
repnz
jb
xchg
fcoml
mov
addb
pop
add
lds
cmp
in
aaa
cmp
fwait
xchg
or
shll
pop
in
or
inc
mov
add
andl
outsl
dec
divb
test
je
mov
push
jbe
xor
inc
lret
test
out
lcall
adcl
push
stos
aam
clc
mov
les
dec
lret
sub
sahf
mov
adc
cs
sbb
lea
insl
in
mov
jl
xchg
fiadds
aaa
jne
pop
jb
xor
clc
jo
mov
daa
out
push
adc
inc
push
add
mov
outsb
jmp
xchg
movsb
lcall
mov
ljmp
sub
dec
mov
ljmp
imul
sub
mov
sbb
and
sub
cli
gs
xlat
mov
xor
fs
and
dec
lock
outsl
mov
or
imul
xor
pop
fisttps
je
inc
cmc
sbb
cwtl
stos
sbb
inc
rcrl
mov
inc
imul
mov
sahf
mov
add
xor
iret
inc
mov
mov
popf
xor
cmp
fistpl
push
cmp
inc
jnp
dec
and
lods
push
gs
notb
push
xchg
xchg
lods
jae
into
xchg
pop
stos
mov
and
dec
xor
jg
mov
fistpll
inc
mov
or
add
add
push
and
out
int3
or
push
mov
cwtl
pop
mov
cwtl
push
lds
gs
insb
inc
gs
push
repz
mov
push
movsl
es
scas
inc
mov
pop
roll
mov
scas
loope
push
lahf
test
loope
xchg
xchg
inc
lret
and
fistl
into
xchg
incl
iret
dec
mov
sahf
inc
mov
mov
mov
xlat
bound
in
dec
stos
cmp
cmc
cmc
sbb
scas
xchg
mull
sub
faddl
push
mov
cmp
mov
loopne
adc
sbb
lea
int3
mov
dec
cmpsw
dec
sbb
jb
stos
iret
movsb
adc
cwtl
loop
iret
sahf
inc
into
add
xor
or
out
xor
aas
mov
mov
mov
mov
lcall
mov
testl
sbb
bound
popf
mov
stc
add
into
xor
jge
shll
inc
xchg
pop
dec
and
jne
and
shll
add
std
lret
rorb
lahf
imul
fdivl
js
pop
inc
jnp
and
sub
scas
xchg
jo
xchg
sbb
mov
pop
xor
jb
les
clc
lcall
inc
adc
pop
push
xchg
rolb
xor
in
pop
add
xorb
sub
jno
jno
jecxz
sbb
cmp
and
dec
jg
inc
ss
rcll
cmp
std
add
jp
mov
sub
sbb
jb
cmpsl
sub
or
lahf
mov
lea
into
pop
sarl
or
loope
push
mov
sti
xor
fcomi
js
dec
and
mov
iret
inc
rclb
or
out
loopne
in
clc
inc
cmc
js
xchg
jno
scas
sbbl
cwtl
in
sti
fucomi
pop
fdivl
int3
cli
sub
iret
dec
mov
dec
ss
int
sahf
and
popf
shlb
cmc
mov
insb
mov
jo
jne
jbe
movsl
outsb
into
pop
movsl
jp
pop
adc
dec
pop
push
dec
adc
enter
int
cltd
add
arpl
mov
aaa
mov
fldl
sub
cmpb
aad
sub
mov
lcall
sbb
jle
cltd
jae
xor
movsl
test
xor
les
xor
fwait
dec
add
pop
test
outsl
nop
out
pushf
adc
andl
movlhps
sbb
mov
sub
push
incl
jl
jno
cmpsb
icebp
js
lea
xchg
xor
out
xlat
xor
mov
push
and
sbb
sbb
fdiv
shl
fs
cmp
sub
mov
clc
scas
push
test
pop
inc
sub
dec
inc
dec
in
mov
stos
insl
fsubp
pop
sbb
out
fildll
cmpsl
or
fisttpll
insl
jnp
cmp
xchg
and
fwait
xchg
dec
push
addl
repnz
dec
dec
pop
xchg
int3
xor
sbb
dec
test
scas
std
filds
fmuls
or
out
mov
adc
mulb
xchg
scas
inc
adc
adc
push
push
inc
push
bound
sub
sbb
pop
inc
mov
inc
dec
inc
adc
pop
aas
dec
aaa
imul
adc
rcrb
mov
jl
arpl
push
sub
test
dec
inc
and
push
cltd
cmp
hlt
mov
addr16
cmpsb
ret
cmp
aaa
int
mov
xchg
xchg
sub
daa
fbld
xlat
in
jle
jbe
jp
pop
jo
ret
push
adc
sub
jne
fmul
out
jmp
repnz
sbb
clc
jle
into
testb
ja
movsl
add
push
lret
cwtl
jl
ljmp
rorl
fistps
xchg
push
repz
sub
push
push
lret
mov
mov
cld
lods
inc
cmp
jecxz
and
jp
mov
cmp
sub
xchg
sub
push
push
jo
cmp
movsb
xchg
add
fcoml
out
mov
in
test
adc
in
jle
xor
push
cmp
lahf
xchg
repnz
cmpsb
dec
mov
adc
in
push
sub
xchg
repz
lea
or
jp
push
jne
loop
in
jae
inc
xlat
fcom
hlt
fsubrs
sbb
in
pop
cmp
es
push
hlt
push
je
pop
int3
sub
sub
std
or
imul
xor
jne
aam
xchg
insb
stos
mov
cmc
in
mov
data16
add
push
adc
xchg
sub
pop
and
arpl
push
pop
pop
dec
pop
insb
lret
test
and
or
lods
dec
addb
dec
int3
xchg
pop
orl
and
cmc
cmp
lds
paddusw
xor
xchg
sub
shrl
pop
fisubrl
jp
sbb
insl
pop
cmpsl
mov
scas
fcmovnb
shrl
scas
movhps
jp
mov
incl
call
fidivrs
dec
or
out
sbb
lahf
pusha
movsb
sbbl
std
pop
dec
out
push
in
ss
clc
xchg
jle
xor
add
dec
movsl
andb
mov
sub
push
ja
lret
fs
pop
daa
push
pop
or
jne
inc
inc
jg
icebp
int
sahf
mov
push
and
sbb
scas
ficoms
dec
inc
xor
inc
mov
clc
mov
insb
dec
rcr
or
fs
idivl
test
push
cs
hlt
xor
or
mov
fsubs
test
push
jno
jns
std
sub
sti
negl
mov
cmp
cwtl
test
pop
xchg
mov
mov
mov
cmp
push
mov
mov
rcl
jge
mov
push
rcrb
out
lods
push
push
fisubl
xchg
cld
xchg
push
ja,pn
ja
je
push
lods
bound
out
jb
inc
pop
addr16
gs
push
sbb
fistl
push
dec
jb
adc
or
ljmp
cmp
and
xchg
dec
or
jns
aaa
jmp
repnz
out
xchg
lock
nop
lods
fucomip
int3
lret
sti
jb
adc
aas
in
and
dec
test
sub
sub
jecxz
dec
test
lds
in
jecxz
sub
xchg
xor
xor
fnstsw
mov
jmp
popf
xlat
iretw
mov
xchg
fnstenv
int
add
insl
sbb
inc
imul
dec
adc
aam
aas
leave
das
sbb
inc
sbb
add
mov
iret
mov
aaa
int3
icebp
sub
jbe
xor
sbb
lds
push
inc
mov
xor
dec
fwait
pop
maskmovq
testl
div
push
and
insb
xor
stos
mov
notl
xor
push
sti
leave
fs
sub
pop
inc
mov
mov
or
mov
cwtl
mov
in
and
push
data16
mov
or
cmp
dec
daa
xchg
adc
xlat
inc
mov
sbb
and
dec
or
and
lea
daa
jmp
and
sbb
fcomps
sbb
test
movl
aad
xchg
jecxz
in
dec
mov
lret
or
inc
adc
pop
mov
into
and
in
daa
sbb
movl
loop
xlat
lahf
dec
adc
mov
mov
mov
or
dec
jb
pop
xchg
push
or
out
add
ja
shl
nop
push
test
ja
arpl
mov
punpckhwd
fimull
xchg
xchg
stos
xchg
sahf
jo
cltd
fucomp
sbb
inc
xor
xchg
flds
rclb
mov
das
outsb
mov
cli
mov
jp
push
mov
push
add
dec
repz
add
test
fdiv
push
out
addb
mov
lods
and
ret
pop
enter
sbb
mov
mov
mov
push
repnz
inc
lcall
push
rcl
nop
dec
and
xor
ljmpw
fnstenv
jnp
mov
ss
pshufw
loope
fisttps
les
mov
cmpsb
addb
out
adc
xor
jb
lret
jno
rcrl
repnz
push
inc
adc
mov
jae
mov
dec
jo
xchg
push
jl
mov
xor
xchg
pop
mov
dec
stos
adc
inc
mov
arpl
std
jnp
mov
sbbl
xchg
mov
or
gs
cmc
flds
sbb
sub
imull
int
mov
repnz
push
jnp
pop
push
push
daa
das
push
dec
mov
pop
cltd
add
pop
mov
cld
je
mov
sub
imul
aas
mov
xchg
sbb
loopne
fisubrl
mov
pop
or
xchg
aas
pop
xchg
jmp
rcrl
pusha
cmp
cmpsl
jmp
jl
pop
push
dec
lret
cmpsb
in
mov
mov
mov
fdivrl
jo
leave
nop
popa
jb
inc
das
outsb
dec
xor
or
xor
cmp
add
inc
xchg
aam
aaa
mov
and
jb
loope
add
in
push
mov
inc
xor
push
lcall
daa
fistl
and
push
int
test
nop
mov
les
rol
sub
cmpb
imul
xchg
mov
insb
jle
mov
mov
lea
repnz
adc
or
scas
jb
add
ret
adc
xchg
mov
adcb
stc
inc
add
add
stos
fnstenv
ljmp
xor
xor
scas
cmpsl
dec
fnstsw
jbe
jbe
call
les
mov
adc
lahf
cmp
mov
dec
pushf
fists
enter
test
ret
rolb
mov
lret
int3
and
mov
lcall
jp
push
cs
inc
cmp
sbb
inc
fcoms
add
stos
or
push
aad
mov
hlt
mov
popl
sbb
std
push
mov
out
push
push
fcmovb
adc
sub
sti
mov
ds
call
adcb
data16
jns
xorl
sbb
cmp
fwait
cs
pop
ret
int3
sub
inc
ja
out
cli
sub
mov
push
fsubl
lret
pop
mov
out
movsb
cmp
dec
xor
cmp
sub
push
mov
cltd
loop
mov
lahf
cmpsb
xor
cmp
mov
mov
cmc
jo
fwait
xor
cwtl
adc
push
push
mov
cwtl
mov
cmp
push
add
inc
add
adc
popf
and
xor
test
mov
pushf
in
xchg
nop
pop
dec
sbb
je
pop
sahf
mov
or
mov
pop
and
mov
jecxz
jb
shll
cmpsl
aad
or
ljmp
pop
call
pusha
or
lcall
iret
and
add
push
or
gs
int3
mov
adc
inc
out
adc
mov
push
cmpsb
push
push
push
test
rcrl
ja
push
shl
movb
imul
mov
cltd
into
arpl
jns
adc
jg
mov
out
scas
adc
inc
cli
fdivr
test
push
mov
loop
aad
rclb
loope
pop
daa
inc
mov
xchg
mov
dec
push
sti
and
xchg
shr
lahf
loope
xorl
pop
jne
and
pop
xchg
cwtl
cld
cmp
test
jmp
push
jg
add
xchg
test
or
popa
jle
cltd
xchg
bound
push
les
mov
push
sub
xchg
jno
mov
in
mov
aam
sbb
insb
sarb
int3
aas
test
data16
mov
sarb
mov
adc
js
pop
ret
pop
test
testl
mov
cmp
push
sbb
inc
ret
mov
lahf
xor
xchg
inc
jb
into
pop
iret
jmp
adc
or
jg
cmp
xlat
insb
mov
push
movsl
mov
mov
pop
lea
mov
dec
test
cwtl
lods
mov
jl
push
les
xchg
andb
in
lahf
sbb
fisttpl
add
enter
lret
into
add
test
xor
lcall
outsb
lock
pop
fcmovu
xor
cltd
stos
mov
xor
push
ret
cld
pop
inc
add
sahf
fsubrs
movl
cmpsb
xchg
sbb
sub
mov
push
scas
leave
xor
sub
lret
daa
jae
inc
imul
repz
std
adc
test
test
pop
in
mov
mov
and
sahf
adc
cmp
fisubrs
xorl
cld
mov
aas
loope
and
aam
shll
dec
movsl
or
vmaxps
dec
lret
inc
and
aam
dec
or
cmp
hlt
add
push
mov
pop
jp
jg
mov
pop
and
add
pop
cmova
stos
int3
mov
enter
mov
inc
push
fwait
leave
nop
adc
jl
mov
test
out
repnz
jno
loop
push
cmp
daa
xchg
ss
js
pop
cmpsl
bound
mov
sbb
mov
xor
mov
add
rcr
daa
adc
dec
xchg
scas
stc
popa
fstl
push
sbb
mov
inc
in
inc
or
adc
adc
addr16
push
inc
jb
insb
or
mov
test
inc
mov
movsb
ss
sub
add
push
cmpsl
mov
pextrw
sub
jle
movsl
enter
jne
ss
pop
lcall
or
into
in
nop
out
dec
lret
jecxz
add
xchg
scas
xchg
aad
jne
dec
aaa
movq
aad
and
xchg
xchg
loop
pop
cmp
std
lret
adc
rorl
insl
dec
sub
enter
inc
push
addr16
cmp
push
or
andl
jnp
sbb
call
cmpps
out
call
pop
insl
push
jb
into
adc
mov
std
arpl
hlt
xchg
inc
andb
adc
jl
sub
movsb
leave
push
pop
pop
mov
adc
xlat
or
mov
cmpsb
stc
orl
pop
dec
lret
jo
outsb
ret
ss
leave
cmpsb
cmp
dec
mov
xor
out
aad
fdivrl
lcall
push
cli
dec
jae
sub
mov
pop
ss
sub
les
mov
ret
dec
push
sbb
dec
sub
sub
sti
jp
lods
cwtl
mov
adc
leave
call
adc
mov
repz
xor
repz
jmp
xchg
bnd
loope
inc
xor
cmp
pop
pop
lods
dec
std
dec
loopne
pop
add
icebp
ja
hlt
sbb
jge
cmp
xor
xchg
and
lea
or
jp
scas
lock
imul
add
add
or
inc
in
mov
insl
mov
inc
inc
test
mov
mov
mov
cmp
sti
jle
stos
mov
xor
jne
cs
push
cmp
pop
loope
xchg
dec
cmp
or
push
jl
or
insb
insl
adc
fwait
dec
sub
cmpsl
movsb
sbb
sbb
jmp
pop
andb
mov
adc
xchg
mov
les
ficoms
sbb
push
xchg
cmp
in
cli
out
pushf
roll
cmc
out
mov
dec
pop
test
cltd
mulb
jae
mov
or
aam
lret
rorl
dec
adc
movb
test
sahf
int3
shl
lock
pusha
out
xchg
stos
sub
movsb
clc
and
jbe
sbb
xor
jbe
or
cmp
test
dec
inc
inc
pop
jp
cmpsb
mov
adc
dec
and
in
dec
and
ficoml
lods
lods
mov
sbb
imul
mov
jb
mov
loope
sbb
or
das
fstpl
loopne
subb
in
into
pushf
mov
inc
cs
repz
sti
add
movsl
out
xchg
xabort
sub
loop
stos
popf
pop
clc
scas
pushf
jae
sub
pop
mov
fst
pop
stos
jmp
sub
mov
daa
xor
stc
data16
lcall
pop
movsl
aam
and
sbb
jecxz
cmpsb
sbbl
and
mov
pop
into
out
out
into
enter
aas
xchg
xor
aaa
xlat
repnz
mov
movsb
mov
cmp
pop
fisttps
mov
push
cli
mov
and
jb
loope
and
lds
imul
in
loop
adc
popl
mov
cltd
jne
shl
mov
pushf
sub
mov
dec
push
cwtl
mov
inc
inc
pop
xor
pop
inc
les
pop
xor
push
ret
ds
imul
lods
cmp
hlt
out
outsb
mov
or
mov
rcrb
mov
std
sub
movsl
out
int3
cmp
dec
in
jge
negl
addr16
sbb
es
fcmovb
js
insl
jecxz
cwtl
icebp
pop
fdivs
dec
jno
test
cmp
push
fbstp
or
push
outsb
clc
push
pop
mov
subb
out
xchg
push
jnp
iret
push
cwtl
ja
jb
or
sub
adc
mov
mov
inc
jg
test
mov
jmp
sbb
lcall
sbb
test
movsl
dec
mov
lahf
lahf
out
pop
std
add
ja
dec
xlat
xor
pop
loope
arpl
sbb
xchg
adc
pop
fiaddl
repnz
in
aas
pushl
pop
mov
xor
mov
lods
mov
pop
mov
jg
pop
push
mov
or
sbb
shrb
pop
aad
or
and
fwait
mov
dec
sub
loop
sbb
cmp
syscall
shll
jb
fstpt
repnz
inc
mov
or
arpl
call
outsb
push
insb
inc
dec
xchg
daa
jnp
push
rclb
jb
mov
pop
xor
sub
faddl
and
xchg
sub
xchg
das
sbb
jge
mov
pop
or
push
gs
mov
into
inc
jg
jecxz
ficoml
pop
movsb
and
out
jnp
popa
loope
or
pop
sbb
pop
xchg
xor
fidivrl
mov
popf
fnstenv
sbb
or
stos
jnp
and
rcrb
fdivl
or
pop
cltd
ret
out
mov
xchg
push
jb
js
sub
cmc
cld
pop
in
sbb
lea
lds
push
dec
punpckhwd
push
or
sub
inc
movl
negb
loopne
cmc
js
dec
in
jle
jae
or
aam
test
xor
jmp
in
cltd
lods
adc
ret
lahf
popf
mov
sbb
movsl
in
or
or
faddp
out
mov
popf
pusha
add
imul
cmp
add
aam
mov
xor
mov
jb
lahf
fisubs
jle
xchg
shll
lods
sub
ret
add
insb
inc
movsb
pop
xor
aam
inc
sbb
xchg
sahf
fidivrs
in
xchg
in
xor
sub
loopne
shrb
pop
jbe
ret
sti
jnp
pop
mov
push
cld
ja
push
pop
sbb
inc
add
push
mov
test
shll
je
and
add
pusha
mov
imul
das
rcr
in
cs
lea
or
add
pop
cli
jne
dec
test
ja
pop
lcall
bound
bound
mov
mov
ret
dec
clc
dec
pop
enter
mov
xchg
cmc
inc
and
sahf
sti
into
dec
shr
popf
and
lea
jmp
daa
outsb
movb
cmpsl
inc
movsb
sub
out
xor
mov
outsb
cmpl
loopne
aaa
mov
ljmp
xor
fdivl
mov
jo
shlb
std
sbb
stc
pop
jg
dec
insb
mov
push
jle
or
jmp
xchg
sahf
stos
mov
xor
sbb
fwait
movsb
stos
icebp
inc
dec
pop
outsl
inc
fistpll
in
push
jg
das
sbb
push
add
enter
ss
push
mov
or
mov
xchg
xlat
pop
sbb
clc
cmp
andl
mov
xlat
pop
push
repz
jbe
sahf
in
icebp
ficomps
mov
shlb
mov
mov
sarl
cs
inc
sti
mov
out
push
test
jae
mov
push
push
scas
xchg
push
nop
repz
pop
out
out
mov
hlt
icebp
sub
mov
xorl
icebp
cld
lods
add
adc
and
rorb
pop
mov
aad
mov
out
fstpl
mov
sahf
adc
out
test
inc
mov
popa
leave
in
pushf
shlb
pop
dec
sti
ss
push
ds
add
sbb
test
mov
stos
stos
in
pop
mov
inc
in
adc
jb
ljmp
push
pop
cli
fs
push
in
xchg
xchg
movsb
or
lcall
xor
stos
cld
xor
cmp
fimull
fsubs
add
mov
repz
ds
adcl
das
push
lds
rep
arpl
leave
push
jno
jge
pop
addl
ret
ret
mov
cmp
cmp
dec
cmp
pop
sbb
or
std
cmp
inc
sbb
shlb
xchg
imul
xchg
dec
sahf
lea
mov
aam
jae
ss
shr
rorb
xor
shll
lea
je
mov
xor
dec
inc
xchg
dec
out
adc
jno
ljmp
dec
jle
mov
jp
mov
out
ja
scas
push
scas
ds
ljmp
testb
das
fldenv
sbb
dec
cs
adc
xchg
and
mov
xchg
imul
fmul
jne
inc
sbb
xor
fistpll
dec
hlt
xor
stos
lret
pop
or
sbb
rep
popa
bound
jmp
repz
ljmp
sub
pop
rol
in
pop
dec
mov
xorb
dec
fdivrl
es
sbb
inc
imul
les
and
mov
ficoms
jo
js
ret
xchg
pop
lahf
inc
out
and
mov
daa
pop
adc
push
xchg
jecxz
testb
movsl
pop
inc
data16
jae
xchg
cltd
inc
pop
shlb
add
cli
xchg
je,pn
mov
push
icebp
cltd
xor
cmpsl
mov
dec
push
xchg
add
es
test
notb
xchg
push
test
mov
es
fists
mov
jl
xchg
fisttps
in
int
or
rcll
mov
dec
mov
cmc
and
jmp
lods
mov
daa
xchg
out
leave
sbb
sti
mov
icebp
adc
icebp
sbb
insl
mov
xlat
or
cmp
push
sub
jno
jmp
mov
jle
xchg
adc
jp
xchg
cmp
or
mov
add
adc
inc
jp
push
pop
adc
into
and
clc
push
imul
adc
jg
pop
negw
fisttps
sbb
lret
dec
push
mov
mov
cli
or
ljmp
nop
inc
dec
out
mov
jbe
adcl
push
shl
aaa
inc
iret
lea
sbb
add
jecxz
add
iret
in
mov
fstps
cld
imul
stos
aaa
adc
cmpsb
xchg
mov
fadd
and
add
inc
sub
test
in
jcxz
xor
pop
loope
jle
cwtl
outsb
fwait
mov
and
and
pop
leave
adc
sbb
pop
ss
xchg
daa
int
sbb
and
add
mov
loope
orl
addl
js
popf
test
repnz
shlb
mov
push
roll
ljmp
mov
push
in
push
fwait
mov
int
cmp
insb
mov
push
icebp
xchg
mov
outsb
addr16
int3
fdivrs
jns
pop
outsb
fs
hlt
ret
stos
mov
pop
or
dec
es
pop
lcall
call
.byte
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
scas
dec
fsub
mov
inc
je
adc
mov
pop
call
pop
clc
shll
aaa
movsb
or
push
das
cmp
pop
add
push
pop
call
lret
mov
pop
add
and
mov
add
mov
add
sub
xor
jmp
div
fs
xchg
mov
xor
adc
sub
push
add
pop
dec
dec
dec
call
jae
test
push
mov
pop
pop
cmp
jne
jp
jl
adc
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
mov
jmp
xor
xchg
test
xor
imul
pop
and
jecxz
adc
jnp
enter
jae
sub
pop
stos
sbb
mov
jae
adc
in
push
sahf
fmuls
inc
test
loopne
insb
xchg
mov
ljmp
pminub
nop
imul
inc
in
fs
dec
bound
push
out
pop
xchg
fs
cmp
or
aad
stos
lret
stos
add
add
fmull
push
mov
adc
mov
adc
aaa
jmp
mov
bound
jns
mov
jecxz
adc
jo
cs
inc
repnz
mov
dec
ret
ja
nop
xor
adc
dec
imul
add
fsubrs
sahf
cmp
movsb
js
mov
mov
inc
rclb
xlat
jmp
pop
pop
push
cwtl
fcom
push
das
mov
pop
hlt
and
sub
cld
xor
and
imulb
outsb
or
daa
pop
pop
movsb
cli
addl
cli
pop
outsb
jns
pop
xchg
lahf
push
negl
jg
push
shl
js
pop
out
pop
loop
add
sub
adc
xlat
cmc
xor
popf
cmp
jno
xchg
lea
adc
out
shlb
aas
aad
clc
insl
adc
push
imul
nop
lcall
insb
cmp
cltd
lea
andb
cmpl
out
int
shrl
pushf
inc
je
xchg
mov
or
int
add
sbb
je
es
mov
or
cmp
aaa
mov
pop
pushl
dec
in
enter
and
test
dec
mov
lds
and
xchg
or
pop
add
imul
dec
cmpsl
int
fiadds
mov
roll
pop
dec
movsl
mov
sub
add
push
pop
test
jle
or
popf
arpl
movsb
repz
mov
scas
cmp
pop
xchg
jg
inc
add
mov
cmc
popa
mov
mov
addr16
in
jl
sub
sub
test
repz
mov
xchg
add
sub
mov
mov
add
std
mov
fdivr
mov
decb
pop
mov
repnz
es
jne
daa
mov
imul
repnz
mov
dec
int3
pushl
es
mov
repz
ds
aad
mov
jge
repnz
cld
fwait
daa
pop
mov
mull
pop
daa
hlt
daa
lea
sbb
mov
mulb
pop
mov
repnz
int3
movsb
mull
scas
mov
call
insb
pop
mov
repnz
jmp
es
inc
js
or
repz
inc
pusha
push
pop
mov
js
or
js
sti
mov
adc
mov
dec
into
leave
and
add
jle
mulb
pop
inc
xor
and
or
decl
cmp
ret
add
add
es
inc
cmpsl
cld
or
and
in
push
inc
js
or
ret
and
fistpll
mulb
pop
inc
test
movsb
mulb
pop
inc
ss
test
push
pop
mov
xchg
int3
mov
inc
mov
adc
mov
orb
es
insb
pop
daa
cmc
jg
add
and
push
pushf
daa
xchg
shrb
repnz
mov
repz
mov
inc
int3
and
fisubrs
xchg
lret
adc
notb
into
lds
mov
or
in
jl
adc
jge
mov
lcall
incb
xchg
sbb
test
xchg
fidivrl
push
pop
into
mov
pop
cmp
int3
or
jge
adc
jge
mov
cmp
jg
mov
dec
test
cli
and
jmp
pop
mov
stc
int3
or
jge
adc
jge
mov
ds
scas
in
and
pop
cmp
int3
or
test
adc
jge
mov
sbb
mov
mov
mov
cmp
sbb
jge
mov
mov
test
xchg
fidivrl
push
pop
into
mov
int3
or
cmpsb
xor
mov
bnd
push
push
pop
mov
in
es
mov
jbe
xchg
mull
add
and
pop
add
lret
std
or
dec
movsl
hlt
bound
lds
movsb
dec
int3
add
and
pop
add
dec
in
add
mov
xchg
dec
dec
pop
mov
push
xor
mov
repnz
or
dec
bound
sbb
repnz
and
xor
mov
mov
mov
jmp
test
jl
mov
repnz
repz
data16
cmp
xchg
in
inc
rcrb
mov
testb
div
and
hlt
es
bound
adc
movsl
sbb
fdivrl
or
fstpt
mov
std
mov
fimuls
xchg
loopne
in
jbe
xor
pusha
fisttps
or
and
cli
movsl
cmp
scas
dec
mov
sbb
mov
jns
imul
dec
and
and
add
es
mov
repnz
mov
repnz
mov
repnz
mov
data16
sbb
repnz
mov
repnz
std
repz
mov
repnz
repz
shl
es
mov
repnz
mov
repnz
fldt
test
enter
fstl
repnz
dec
cmovns
les
in
js
fldcw
mov
and
mov
fisubrs
push
dec
add
adc
es
imul
clc
inc
leave
adc
shl
jecxz
mov
adc
aad
add
cmpsl
and
jg
lea
pop
imul
icebp
jle
push
xlat
scas
lods
loope
mov
push
test
mov
ss
inc
mov
ficoml
cltd
aaa
push
daa
out
cwtl
loope
in
sbb
and
push
mov
popf
xor
in
cmp
cli
push
daa
xchg
sbb
push
movsl
jl
add
lock
divl
mov
and
add
subl
xlat
xchg
out
jb
cmp
testb
and
fisubs
pop
dec
xchg
repnz
jl
xor
push
inc
fwait
xlat
jnp
sub
sub
clc
jmp
fwait
icebp
pop
test
or
outsl
dec
or
jmp
xor
sub
popa
lods
inc
and
nop
scas
aaa
xchg
aas
lret
aas
xchg
into
mov
int
inc
loop
stc
cmp
add
mov
pusha
in
add
and
cltd
sahf
sub
push
xchg
dec
xchg
pop
idivl
jae
call
aas
daa
in
in
daa
popf
mov
or
jae
jmp
in
das
stc
mov
inc
js
aaa
xchg
in
sbb
addr16
inc
es
pop
and
lea
xchg
push
jns
mov
pop
adc
inc
sbb
mov
es
sub
ljmp
inc
sbb
rorb
xor
fbstp
les
js
ljmp
lret
repz
repnz
rcrb
sub
or
insl
mov
in
rorb
mov
pop
push
popa
arpl
pop
mov
mov
dec
hlt
push
repz
pop
out
ja
xor
mov
jne
mov
rcrb
xchg
popl
loope
xlat
decb
popa
scas
out
mov
scas
cmp
out
sbb
xchg
fistpl
and
fdivr
add
sbb
mov
jmp
push
push
adc
xor
xchg
or
imul
xchg
or
sub
aas
add
fs
xchg
sbb
or
int3
dec
xor
dec
aad
push
cmp
push
inc
push
adc
adc
push
mov
push
cli
aam
test
dec
sahf
cmpsl
add
push
insb
mov
add
and
add
add
add
rorb
rorb
xor
adc
mov
add
mov
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
mov
add
adc
jg
add
sbb
adc
pop
adc
sub
adc
mov
add
adc
inc
mov
add
adc
push
mov
add
adc
pop
mov
add
adc
mov
add
adc
jae
adc
dec
adc
jg
adc
push
adc
mov
adc
xchg
mov
add
adc
mov
adc
lods
mov
add
adc
mov
adc
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
adc
scas
adc
insl
jo
cs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
fs
insb
add
insl
arpl
xor
fs
insb
add
imul
insb
add
outsl
arpl
xor
fs
insb
add
popa
arpl
xor
fs
insb
add
gs
xor
fs
insb
add
outsb
imul
insb
add
jbe
jo
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
xor
xor
fs
insb
add
gs
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
adc
add
add
adc
add
add
out
adc
add
add
cld
adc
add
add
push
nop
adc
add
add
cs
adc
add
add
inc
nop
adc
add
add
dec
nop
adc
add
add
pusha
nop
adc
add
add
jb
adc
add
add
test
add
xchg
nop
adc
add
add
cmpsb
nop
adc
add
add
mov
add
add
nop
adc
add
add
fcoms
add
ljmp
add
nop
adc
add
add
or
add
and
add
add
push
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
jo
jb
inc
jbe
outsb
je
add
add
popa
jb
push
gs
imul
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
outsb
jb
popa
insb
imul
arpl
add
inc
inc
insb
gs
outsb
jne
add
add
insl
inc
outsl
jb
popa
je
push
inc
add
add
gs
je
push
imul
inc
add
add
je
jb
gs
gs
fs
imul
je
arpl
imul
add
ja
jbe
dec
jne
push
jb
je
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
inc
dec
outsl
arpl
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jae
jb
gs
je
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
push
sbb
aas
pop
add
add
add
loop
and
xchg
nop
mov
xor
repz
cmp
mulb
mov
xchg
xchg
ds
nop
jge
mov
xlat
xchg
mov
rorl
jo
jle
jnp
call
mov
inc
xchg
inc
cmp
pop
dec
xchg
fwait
or
pop
test
mov
sbb
cltd
sub
sarb
xchg
loop
mov
enter
sub
xor
mov
pop
xor
decl
dec
shlb
xchg
cmpsb
insb
xor
je
inc
sub
cmp
nop
jp
push
fnstenv
jo
push
jl
and
push
imul
pop
mov
sbbb
mov
push
jge
jp
xchg
sbb
jns
and
movsl
stc
outsb
cmp
adc
push
pop
fdivl
xor
les
cmp
and
adc
loop
cld
xlat
push
test
ret
add
js
sbb
mov
in
jg
inc
add
pushf
cmpsb
aaa
repnz
xchg
adcb
testb
and
and
or
xchg
ss
or
lds
cmp
adcb
and
divb
inc
mov
jbe
cld
xor
rcrb
xlat
push
mov
fwait
mov
daa
and
mov
mov
pop
and
mov
cmp
add
push
js
inc
dec
int
sbb
mov
aam
push
pop
cld
push
push
inc
into
sbb
int
repz
mov
mov
push
rorl
cld
test
mov
xor
gs
cmp
lcall
mov
leave
and
and
mov
jb
dec
loopne
dec
inc
pop
pop
pop
mov
or
mov
lahf
movsb
loopne
add
imul
subb
adc
adc
cld
sub
pop
xchg
sbb
test
cmp
scas
or
pop
push
add
out
popf
notl
or
sbb
sbbl
mov
or
in
imul
sub
and
push
sub
hlt
pop
pop
loop
scas
data16
fnsave
imul
cmp
xchg
gs
and
scas
inc
je
sbb
xor
cld
fadds
mov
sub
ret
sbbb
push
aad
cmpsb
cld
push
cmpsb
and
leave
mov
nop
jo
add
ljmp
aad
inc
mov
int3
or
popw
jmp
or
cwtl
repnz
inc
stos
frstor
sti
sbb
inc
mov
sub
cmp
xchg
icebp
xlat
inc
push
js
cmp
xlat
mov
push
aas
popf
mov
and
popf
loope
imulb
imul
mov
mov
push
push
out
push
lea
add
icebp
mov
push
adc
aam
push
xchg
fbstp
sub
xchg
cmpsl
cmp
mov
in
dec
pop
pop
inc
daa
xor
cmpsl
das
sbb
sub
pop
ds
loopne
int3
adc
pop
mov
add
inc
xchg
lcall
lret
jb
dec
fisttpl
mov
fstps
or
jmp
daa
adc
sbb
in
pop
xchg
jg
add
stc
dec
jne
and
inc
aad
je
movsl
fsubrs
fsts
fs
ret
mov
xchg
pop
lea
pushf
loope
ret
movsb
leave
push
gs
cltd
mov
adc
pop
pop
fmul
adc
dec
cmp
xchg
push
cmp
inc
cltd
xchg
adc
inc
cmp
fsub
lcall
push
and
test
cli
sub
fadd
das
jecxz
repnz
xchg
pop
adc
mov
or
sub
xchg
adc
mov
mov
pextrw
or
jne
addr16
arpl
xchg
mov
push
fsubl
mov
out
subl
mov
dec
xchg
sub
hlt
sbb
lods
in
and
xchg
mov
pop
inc
push
and
popa
jmp
sahf
dec
xchg
js
mov
sbb
add
popf
jmp
out
jp
sub
in
cwtl
xor
notb
vunpckhps
sbb
iret
jl
push
mov
loop
jge
cmp
push
cmpsb
jae
scas
fistpll
push
lahf
insb
stos
aas
sbb
pop
lea
lcall
add
je
push
insb
or
repz
mov
dec
popa
outsb
fisttpll
addr16
jmp
mov
insl
pushl
pop
xor
pop
cmp
clc
pop
cmp
or
rcl
pop
rol
xchg
rorl
flds
lock
sbb
sub
push
jo
stc
push
cmp
iret
push
ja
dec
popf
inc
sub
aas
and
enter
xor
push
mov
lock
in
cltd
add
sahf
lock
cwtl
pop
gs
push
adc
mov
rolb
pop
movsl
jnp
in
push
ret
push
pusha
leave
mov
ret
mov
icebp
cmpb
scas
push
cmp
rcrl
fisttpl
dec
fwait
or
add
add
inc
and
data16
jle
shr
sar
add
repz
popa
inc
sbbb
xor
xchg
and
shl
movsb
xchg
mov
cwtl
loop
andl
jns
fistl
push
adc
fistpll
or
jne
popa
in
xchg
fwait
add
or
outsl
stc
sub
insl
mov
lret
pushf
aad
adc
insl
sub
out
lods
push
cmp
jg
inc
mov
add
aad
push
or
sub
push
inc
aaa
ret
cli
adc
nop
insb
fisubl
test
dec
mov
mov
lock
xchg
adc
mov
iret
loopne
je
nop
pop
adc
cmc
fisubrl
shlb
xchg
xor
jb
jb
sub
cmp
pushf
dec
mov
push
rcrl
sbb
pop
aad
aam
scas
leave
xchg
pop
mov
hlt
out
adc
jo
andb
test
mov
mov
cld
ss
xor
in
test
pop
out
daa
dec
lods
sub
and
dec
outsb
xchg
pop
lret
insb
jg
movsb
push
aaa
mov
or
pop
fsts
arpl
jmp
sub
shlb
sub
dec
add
and
dec
stc
cmc
fists
stos
fcmovb
add
sbb
dec
arpl
sub
out
mov
das
enter
ss
mov
mov
ret
push
adc
add
fistpll
mov
daa
out
fsub
add
test
jno
data16
loop
js
lret
xor
fidivrl
cmp
or
in
xor
nop
std
in
sbb
adc
jns
and
xchg
cmpsl
jns
inc
or
adc
mov
sarb
push
add
jb
pop
div
in
outsb
push
adc
bound
lock
mov
in
lcall
sbb
sub
xor
dec
and
out
out
ds
leave
fldt
dec
into
shr
mov
push
mov
loop
repz
fstps
cltd
cld
bswap
jmp
sub
lds
xchg
dec
push
mov
jge
xor
test
push
icebp
gs
xchg
lcall
dec
xlat
push
loop
pop
std
sti
inc
mov
je
lds
dec
cwtl
mov
sub
sbb
dec
xchg
or
inc
cs
jp
adc
fwait
cli
jecxz
jo
lock
jno
jno
rcl
sbb
xor
jnp
add
xlat
lahf
loop
xor
ror
fs
xor
mov
inc
mov
inc
cmc
pop
shll
bound
add
int3
mov
scas
ret
add
xor
movsl
cmc
mov
aaa
or
icebp
lcall
pop
movsl
or
inc
and
out
ds
jne
insl
test
lods
lods
xchg
mov
adc
lock
aam
fildll
test
mov
jb
jle
andnps
jo
ret
xor
pop
pop
xchg
jbe
bound
or
cli
jae
wbinvd
jnp
dec
ljmp
and
mov
pop
repnz
data16
and
push
cmp
sbb
jmp
in
mov
ret
leave
lds
loope
insl
mov
roll
testl
mov
fxch
adc
jle
add
lcall
clc
push
jecxz
xchg
lea
jo
fbstp
shl
and
les
inc
pop
push
idiv
out
push
aam
stos
and
jo
aad
cmp
jno
lret
and
cli
fistps
fadd
cmp
clc
clc
sub
xchg
in
cltd
outsl
push
sahf
mov
mov
lea
mul
jmp
ljmp
cmp
lret
sub
sbb
push
cs
arpl
fisttpl
xchg
add
mov
jp
fwait
bound
mov
inc
jmp
mov
popa
mov
or
je
test
push
faddp
mov
aas
adc
scas
mov
sbb
sti
test
push
test
dec
push
sbb
loop
fisubrs
jle
shrb
mov
push
xchg
fdivp
test
jno
inc
lret
push
out
mov
jno
push
popf
mov
xor
xchg
push
sub
orb
mov
loopne
les
dec
test
mov
fnsave
mov
negb
jb
lcall
push
jecxz
push
jo
in
orb
aaa
fildl
out
test
adc
sub
pop
sbb
sbb
xor
pop
cmp
add
outsl
repz
gs
lea
lock
and
ss
out
lds
sbb
push
jno
repnz
scas
xchg
xchg
adc
cmp
push
inc
scas
ss
dec
push
sub
sub
inc
push
xchg
or
push
gs
dec
pop
imul
test
xor
xchg
gs
loop
jno
push
push
int3
out
jp
jo
push
pusha
outsb
cmp
and
in
mov
scas
ds
out
sbb
int
jne
popa
mov
lock
testl
mov
xor
jns
aad
mov
dec
cmpsl
sub
testb
loope
and
lods
stos
or
mov
or
outsb
imul
sub
fidivrl
mov
negb
test
pop
outsl
andb
or
jno
in
adc
add
jge
dec
adcb
out
push
push
mov
mov
inc
jae
push
imul
inc
lds
xor
fiaddl
jge
push
outsb
push
shll
in
fists
arpl
cmpsb
jae
clc
lea
push
or
cmp
popa
mov
xchg
pop
mov
dec
pop
dec
and
inc
ljmp
testb
dec
dec
test
shlb
dec
shll
rcrl
jno
jl
test
pop
in
lock
mov
jno
adc
cld
xchg
hlt
inc
fsubr
pop
lea
pop
repnz
pop
inc
lea
out
arpl
es
mov
jecxz
xor
cmpsl
mov
mov
push
adc
fildll
cmp
add
cmpsb
or
lds
mov
outsb
sti
out
aam
inc
iret
sbb
xor
std
stc
add
imul
inc
testl
adc
sub
insl
dec
push
jle
jg
pop
fisttps
aas
xor
sub
enter
xchg
arpl
jl
dec
or
jmp
daa
ljmp
out
mov
and
hlt
lods
aam
mov
cmpb
outsl
add
divb
js
lock
in
ds
les
jb
and
xor
shlb
in
ljmp
imulb
in
shll
aas
xor
sub
dec
fiadds
fs
lret
subl
pop
aam
stc
and
mov
inc
jo
data16
push
in
push
in
test
and
push
cmp
pop
nop
test
stos
pop
es
xchg
es
dec
push
inc
xchg
lret
repnz
xchg
or
or
xchg
cld
add
lods
in
stc
or
arpl
and
adc
mov
mov
decl
gs
inc
in
cli
adc
add
adc
push
cs
aaa
sbbl
cmp
jne
inc
in
adc
mulb
cltd
inc
insb
mov
jno
push
adc
idivb
xorl
fisubrs
outsl
sub
stc
sbb
dec
clc
xor
fistl
xchg
mov
stos
cwtl
incb
out
pop
or
ret
xor
imul
mov
jbe
out
jg
inc
fildll
test
std
mov
fs
test
mov
inc
push
pop
movb
or
decb
scas
xor
leave
inc
repz
aaa
adc
jmp
jns
dec
shlb
cltd
btr
pop
and
rolb
dec
enter
and
push
and
std
popa
push
pop
scas
jns
cs
or
imul
jno
loope
sub
mov
sahf
adc
es
dec
in
cmpsl
aas
repz
repnz
mov
pop
jmp
test
rcl
mov
lar
xor
js
xchg
dec
or
cmp
mov
push
add
bound
add
imul
cmp
cli
in
std
xchg
xchg
mull
loop
jae
xchg
jb
pushf
pop
inc
cmpsb
mov
jp
inc
cwtl
sbb
dec
gs
nop
sub
std
popa
repz
out
fstpl
sbb
add
fstp
xchg
cmpl
cli
pop
xchg
outsb
add
mov
jmp
cmpsl
dec
xor
rcll
mov
dec
mov
pop
xorl
repnz
push
pop
pushf
sub
inc
imul
mov
into
clc
fwait
out
test
mov
push
mov
mov
add
cmpsb
es
js
xchg
dec
mov
xor
ds
nop
imul
push
shl
xor
dec
cmp
cmp
out
sbb
jecxz
mov
cmp
jbe
add
das
add
add
mov
sbb
push
adc
sub
dec
aam
movsl
jmp
jle
and
js
insl
jle
or
orb
lds
mov
iret
xlat
loope
jge
adc
push
mov
popf
or
pop
xor
mov
ret
aas
sub
test
dec
cltd
add
cmp
stos
add
out
push
shrl
dec
arpl
cmc
ret
mov
sti
lods
push
mov
mov
test
and
mov
ret
cmp
les
xchg
xchg
dec
xchg
nop
xchg
inc
sub
mov
cmp
xor
mov
lea
das
sbb
push
out
pop
add
ret
jmp
jo
out
aas
ss
sub
push
add
movsl
loope
lock
fdivs
xor
or
sub
add
pop
lcall
xchg
pop
cmp
or
inc
cmpsb
nop
and
mov
leave
rorb
inc
fcmovbe
push
cmp
sbb
test
adc
mov
push
lret
test
stos
rclb
in
and
leave
out
or
mov
mov
mov
lds
je
test
cmpsb
inc
pop
push
pop
fisubrs
cmp
sti
lcall
sub
push
mov
das
ja
in
scas
imul
cmpsl
push
adc
icebp
and
xor
and
insl
xor
adc
ret
jmp
out
jg
fs
or
call
aas
xchg
clc
lods
loopne
stos
add
rclb
push
stos
jne
dec
push
xor
shll
mov
into
mov
jmp
and
xchg
xchg
out
int3
fidivrs
cltd
mov
test
stos
jp
jl
mov
dec
cmc
inc
lods
sub
addr16
iret
xchg
aas
adc
adc
add
cmp
jmp
push
inc
xchg
cltd
repnz
sub
mov
fsubrp
leave
sbb
scas
mov
mov
xchg
push
or
lods
sbbl
jbe
movsl
fmuls
dec
aas
jle
sbb
jbe
scas
cmpsb
rcrb
std
stos
sbb
pop
enter
and
jb
ror
ja
mov
fnstcw
repnz
add
loope
int
push
mov
dec
daa
stos
and
loope
out
xchg
dec
sub
js
rorw
xchg
or
aam
scas
xor
inc
sbb
sub
lret
jge
cltd
imul
push
pop
sbb
adc
jae
lods
mov
dec
xchg
cwtl
xchg
adc
std
inc
in
mov
mov
xor
mov
cmp
pop
add
push
push
push
mov
aam
adc
pushf
ja
push
les
or
xchg
in
push
push
inc
jl
jns
add
xor
xorb
jnp
leave
mov
in
push
or
push
jnp
out
lret
leave
arpl
inc
mov
sub
leave
mov
jp
jecxz
clc
and
lds
nop
leave
inc
int
arpl
add
mov
incb
mulb
bound
negb
sbb
pop
jae
stos
clc
fcomps
in
push
xlat
sbb
stc
loopne
loop
dec
stos
outsb
inc
sbb
or
popf
hlt
push
out
cmp
sub
js
mov
mov
int
clc
adc
aad
loop
stos
mov
loope
stos
in
ds
scas
repnz
fldl
pop
sbb
aad
or
fdivl
and
test
loope
mov
adcl
mov
clc
mov
fstps
add
and
mov
in
and
mov
in
adc
jmp
daa
call
jnp
xchg
jecxz
sbb
dec
ret
sub
fcompp
rolb
mov
push
pop
inc
stos
movsb
push
cli
popa
les
xchg
dec
xlat
mov
stos
xor
ret
cwtl
insl
pop
mov
inc
adc
jns
clc
pushf
jae
sbb
jno
mov
push
rclb
mov
out
jno
les
scas
push
aam
jbe
pop
rcrl
repz
xchg
mov
cld
pop
lahf
jl
fwait
imul
shr
inc
sbb
insb
mov
aaa
jmp
jbe
sbb
or
mov
push
cld
and
jbe
jbe
arpl
mov
xchg
icebp
inc
aaa
sub
dec
ret
idivl
pop
gs
data16
mov
aas
and
xchg
jg
inc
mov
scas
dec
cmpsl
jmp
cmovne
pop
push
cmpsl
xchg
lds
clc
xlat
cmpsl
jmp
out
inc
fwait
mov
or
out
xchg
mov
sub
push
jp
dec
mov
sub
leave
das
out
mov
inc
fmull
enter
push
arpl
das
shl
xor
xchg
in
sbb
mov
jge
sbb
cmp
and
cmp
add
pop
jae
xchg
jae
and
lea
shr
dec
je
ret
xlat
stc
mov
dec
pop
inc
pushf
in
xchg
not
dec
aas
out
int3
inc
fisubrs
pop
pop
push
inc
pushf
dec
add
out
movsb
jge
sbb
mov
sub
loopne
subl
pop
test
pop
jns
insl
into
mov
icebp
mov
dec
aaa
call
rcrl
push
sbb
fcomi
and
mov
lcall
lahf
xor
dec
into
sbb
je
int
cmpsb
mov
outsb
out
add
push
pop
sbb
sub
lds
jecxz
lds
negl
mov
div
or
lret
movsl
ret
push
push
sbb
and
loope
pushf
out
into
jp
test
jp
pop
mov
sti
dec
cmp
repnz
inc
push
and
sub
clc
mov
call
in
sub
cmp
adcb
add
mov
mov
jne
jmp
pop
cltd
add
sub
jg
dec
jge
daa
call
mov
jmp
lahf
es
mov
sbb
addr16
fildl
mov
xchg
xchg
push
in
int3
imul
dec
movb
ret
dec
push
jne
enter
inc
pop
cmpsb
mov
hlt
sub
jg
sbbb
push
outsb
dec
mov
push
fsubrs
mov
jg
inc
push
outsl
test
leave
xchg
sub
jne
mov
jp
jns
sahf
inc
mov
push
scas
ljmp
mov
and
mov
aaa
mov
insl
scas
ret
mov
xchg
test
cmp
fimull
sbb
inc
lods
xchg
mov
sub
outsb
and
call
mov
cmp
mov
jmp
popf
sbb
inc
push
sbb
jp
rcr
leave
mov
aas
pop
jne
imul
scas
ljmp
cltd
adc
lds
dec
ljmp
or
mov
mov
cmp
xchg
cmp
dec
imull
sbb
and
les
add
das
mov
inc
add
and
mov
imul
dec
aaa
jae
sbb
add
lock
xor
cmp
pop
sub
xlat
mov
push
aad
pusha
popf
sub
jl
inc
mov
gs
xor
xor
mov
movsl
mov
and
xchg
dec
or
loope
seto
pop
faddl
cld
mov
inc
dec
insb
xor
mov
bnd
jnp
gs
mov
ret
pop
add
imul
jnp
andb
dec
in
bound
int3
arpl
incb
adc
dec
enter
mov
pop
scas
sub
jmp
jmp
cli
push
mov
pop
pushf
mov
pop
das
lea
je
cltd
pushf
xor
aas
sub
cmp
push
mov
stos
add
mov
movsl
fnsave
lret
cmp
mov
popf
xchg
mov
add
xchg
mov
icebp
test
testb
rcr
call
fnstenv
mov
mov
insl
add
inc
int
es
repz
xchg
adc
iret
or
push
xor
das
loopne
jge
and
outsb
jae
dec
rorl
pop
jae
aas
push
and
add
sbb
xchg
cwtl
and
cmp
in
pop
loop,pt
xor
je
dec
adc
imul
ja
mov
pcmpgtw
mov
mov
push
lret
xchg
mov
popa
sub
orb
imul
xor
push
mov
lds
pushw
int3
lds
or
mov
popa
mov
int
pop
bound
addb
xchg
out
loopne
ss
icebp
inc
cmp
pushf
out
xchg
movsl
cmp
cmc
sbb
out
sub
mov
shrb
int
jmp
insb
fstl
mov
push
xor
ljmp
and
fdiv
test
outsl
mov
cmpb
jle
sbb
jg
fisubl
push
popa
or
lea
aam
sbb
ret
cmp
xor
daa
pop
fidivrl
sbb
xor
pop
testl
cmpxchg8b
mov
clc
mov
jp
jnp
pop
adc
sub
divb
inc
shll
out
in
insl
movaps
mov
data16
addr16
sub
cmp
lret
mov
incl
test
inc
and
adc
and
and
out
pop
jle
sub
rcr
arpl
pop
daa
push
fsts
xchg
dec
push
mov
fcomps
mov
sub
sub
ss
cmp
repnz
inc
or
scas
or
push
mov
cmpb
std
and
repz
outsb
xor
jo
xchg
js
dec
mov
out
jb
loopne
adc
in
sub
outsb
pop
jge
faddl
scas
mov
and
cmp
pop
popaw
fstpl
push
xor
cmp
sbb
sub
sub
inc
js
inc
mov
dec
xlat
cmp
lds
in
iret
cltd
mov
pusha
mov
add
xchg
aas
lahf
xchg
add
mov
mov
imul
int
out
lds
mov
mov
les
call
sbb
imul
into
push
out
push
xor
add
xchg
mov
arpl
dec
cmp
les
clc
flds
int
rolb
int3
or
pop
pop
das
fdivrl
stos
movsl
cld
cwtl
xchg
adc
das
add
cmpsb
mov
pop
add
imul
cmp
mov
inc
sbb
or
lret
incl
add
arpl
xchg
andb
push
insl
mov
das
xlat
xchg
shlb
mov
movswl
dec
scas
pop
mov
cmpb
test
cmp
cmp
cltd
cmp
cmp
sbb
cmp
fidivs
mov
jg
sbb
aas
sub
cmp
sub
enter
mov
testb
push
popf
sahf
or
loope
xchg
inc
inc
mov
add
fidivrs
pop
push
cmpsb
jno
iret
or
or
adc
inc
push
dec
lea
xchg
cwtl
call
icebp
test
test
mov
adc
ret
lds
inc
andl
leave
jmp
movsl
mov
adc
out
inc
xchg
sti
clc
pop
jl
bound
sbb
add
repz
and
outsl
pop
fcmovu
pop
das
jns
data16
sahf
mov
add
sbb
iret
loopne
sub
sbb
push
aas
inc
js
jnp
xchg
push
inc
adc
pop
test
push
or
lret
rcrb
imul
dec
daa
add
mov
std
repz
jbe
stos
xlat
sub
xor
addr16
rcrl
in
nop
pop
ss
out
adc
xchg
xlat
std
and
mov
push
fdivs
sbb
mov
jnp
mov
sbbb
dec
push
clc
enter
sbb
push
sub
xor
xor
jb
decb
ret
rol
jp
add
mov
push
fxch
mov
sarl
fst
mov
sub
int
cmp
xor
adcb
sahf
xchg
aam
jmp
sahf
xor
lret
xlat
aad
cld
add
leave
lcall
fisttpl
mov
outsb
dec
inc
or
mov
jmp
inc
jae
clc
js
jb
jmp
ja
stos
add
lret
shrl
xchg
push
push
jmp
loope
pop
xchg
add
cmp
ss
loope
inc
call
fnstsw
int3
mov
mov
cmp
pop
pop
cs
jge
sbb
loopne
icebp
mov
dec
ss
push
mov
mov
inc
mov
cmp
jne
mov
mov
jmp
mov
inc
dec
dec
xchg
insl
cmp
and
repnz
in
dec
shll
aaa
sbb
loop
addl
rcrl
xchg
jo
rclb
daa
out
or
inc
add
jmp
inc
insl
xchg
pop
pop
call
pop
ret
stos
xor
xchg
std
mov
push
mov
sbb
pop
ret
mov
stos
mov
push
movsl
xor
js
pop
aad
mov
mov
sbb
stc
loopne
jo
call
icebp
pop
test
jle
cmp
gs
ljmp
dec
sbb
in
mov
adc
scas
cwtl
add
setg
add
mov
dec
push
shll
jmp
xlat
movl
mov
out
xlat
sub
add
or
mov
in
lret
jb
lahf
fmul
pop
jb
pop
ret
push
cmp
frstor
mov
sub
jecxz
adcl
loopne
adc
bound
push
lret
dec
cltd
fisttpll
mov
icebp
outsl
xor
inc
jbe
and
pop
movsb
jb
mov
cmpsb
and
lock
jnp
enter
jmp
andb
push
dec
int3
push
sar
loopne
cmc
sar
pop
pop
cmp
add
inc
dec
adc
and
mov
daa
test
pop
call
jo
push
jns
test
mov
mov
mov
add
orps
dec
out
sub
ror
pop
cmpsl
iret
hlt
iret
mov
lock
xor
pusha
pop
push
sub
add
stos
sbb
add
or
fldl
andb
fwait
arpl
inc
mov
enter
les
orb
xor
adcb
shl
popa
out
sub
jnp
cwtl
cs
sbb
shlb
test
jb
out
cltd
lret
xchg
mov
dec
lock
in
stos
gs
jne
test
stos
mov
cmpsl
inc
push
cmp
dec
xlat
cmp
fsubl
push
cmpsl
cmpsb
scas
xor
mov
std
std
call
cmpsl
sarb
fwait
int3
loope
or
xor
mov
aas
loope
pop
and
test
iret
xor
inc
loop
push
push
shrb
push
jns
jne
mov
or
outsb
push
stos
fcoml
cmp
scas
outsl
lods
cltd
xchg
push
and
loopne
test
sub
push
dec
pop
jg
dec
lret
sub
ret
push
into
ljmp
inc
dec
movsb
cmp
or
xor
sub
mov
dec
mov
cmc
sbbl
loope
cltd
mov
mov
xchg
push
mov
push
inc
jmp
jp
add
inc
push
add
sub
mov
cmp
mov
leave
add
jmp
addr16
fldl
xchg
jl
shrl
xchg
push
fnsave
icebp
and
cmp
vmwrite
sbb
cli
mov
fcomi
push
pop
push
sbb
js
sbb
les
outsl
sub
and
rolb
xorl
mov
ret
mov
gs
add
sub
or
enter
and
mov
and
into
bound
mov
jnp
cli
cmp
inc
outsb
ja
jns
icebp
addb
pop
fsubrl
leave
ss
jecxz
xor
mov
xchg
push
sbb
mov
pop
sbb
into
test
mov
inc
mov
xchg
iret
cmp
into
dec
cmpsl
aam
andl
xor
stos
icebp
stos
arpl
xlat
es
xor
mov
cmpl
inc
jl
jmp
sbb
shl
jp
fcoms
movsb
xlat
add
fcmovb
dec
xor
and
sub
outsl
cmp
lods
clc
jge
cld
popa
testl
pop
into
cld
cmpb
lret
cmpb
and
xor
cmp
push
cmp
add
mov
add
lds
scas
pop
xor
jno
xchg
push
xor
and
test
stos
and
inc
aas
jmp
xorl
xor
jnp
fstpt
dec
cmp
sub
pop
sbb
or
adc
xor
push
into
mov
in
mov
jecxz
xchg
lret
mov
mov
mov
int
jg
jo
ljmp
add
int
addr16
jae,pn
pop
xor
inc
repnz
lret
push
test
sarl
loope
pop
ret
jmp
cld
mov
hlt
push
mov
add
stos
mov
fcoms
dec
mov
std
or
push
inc
shl
or
je
xchg
cmp
mov
or
sti
and
sub
cmp
scas
enter
sbb
loopne
inc
sti
les
and
cmpsb
xor
lcall
sbb
mov
xcrypt-ctr
cmpsl
lcall
dec
test
mov
push
in
jbe
dec
rclb
mov
rorl
mov
inc
jno
pop
and
shlb
lcall
or
add
sbb
pop
pop
ja
add
push
popfw
test
call
out
cmpsl
sarl
push
inc
pop
cld
inc
mov
jnp
mov
lea
or
aad
push
ret
lods
int
sub
jae
int
push
sub
outsb
pop
sub
push
jno
sahf
fsubrl
leave
add
in
int3
mov
sub
jl
sub
dec
mov
insb
jo
mov
rcr
pop
mov
jo
jae
pop
inc
cmp
out
fidivs
arpl
pop
push
and
mov
das
inc
mov
xor
popl
mov
icebp
flds
pop
add
xor
push
jo
cs
mov
popf
lret
mov
shll
add
popf
fildll
add
lods
ret
mov
lods
pop
jp
mov
xlat
pop
jne
sbb
mov
dec
arpl
mov
gs
xlat
pop
fadds
in
push
lahf
dec
or
sub
xchg
push
ret
pop
and
jnp
insl
pop
daa
or
jae
mov
jl
cmpsb
add
adc
push
stc
pop
jecxz
dec
icebp
lret
idivl
aaa
movsl
mov
mov
int
mov
test
adcl
mov
fwait
push
cmp
mov
mov
mov
fsubl
inc
imul
aad
mov
mov
sbb
mov
add
ja
fistpll
outsb
aad
aam
xchg
sub
inc
mov
repz
dec
jge
js
mov
test
inc
cmp
cmp
push
lea
jno
addr16
cs
in
cs
test
scas
lds
insb
aad
imul
int
fsubrp
nop
cmp
pop
mov
dec
int3
fdivr
test
xchg
mov
jo
xchg
mov
jmp
neg
pop
mov
push
es
dec
lret
add
cmp
mov
sub
mov
jns
inc
lock
jnp
in
sbb
test
shll
and
jae
incl
jnp
add
mov
jno
xlat
jecxz
cmp
push
std
mov
loopne
adc
js
adc
mov
mov
mov
push
xor
int3
movsb
inc
sub
cwtl
push
pop
push
lods
out
les
je
pusha
mov
xchg
movsb
lcall
stc
fnstcw
fisttpll
les
lret
in
sbb
xor
out
mov
test
stos
mov
pop
mov
inc
inc
jne
outsb
outsl
rep
pop
sub
aam
ret
into
add
lahf
scas
ds
std
ret
jg
pop
sbb
dec
int3
ficompl
cmpsb
cmpsl
sarl
jo
sub
push
push
adc
and
ss
push
mov
add
in
fists
js
mov
adc
and
sbb
loop
imul
shll
jnp
push
xchg
stos
jmp
cmpb
jnp
int3
push
repnz
mov
mov
add
sbb
xchg
loope
cmpsb
cltd
or
bound
dec
sbb
inc
adc
roll
mov
iret
mov
in
jge
out
jne
pop
ret
add
or
outsl
or
aam
jnp
shll
inc
imul
mov
insb
push
std
cltd
dec
es
mov
js
lock
jl
mov
fsubs
insb
and
sbb
movsb
test
jg
addl
push
les
cltd
orb
xchg
dec
popa
test
mov
into
test
sub
push
pushf
popa
mov
sbb
jge
les
cmpsb
insl
cmp
lods
xchg
adc
adc
mov
aad
xchg
rolb
cmpsb
push
repnz
pop
sbb
pop
filds
or
ret
jnp
xchg
adc
out
pop
lds
scas
dec
gs
xchg
jl
jbe
call
mov
inc
lret
mov
cmp
push
jecxz
sub
cmpsl
cld
js
fildll
pop
push
mov
pop
arpl
push
iret
call
dec
rclb
sbbb
jmp
pop
mov
jmp
lock
je
ret
popa
mov
js
stos
inc
jg
clc
xor
mov
mov
hlt
es
push
sti
jmp
inc
fnstcw
test
pop
cwtl
inc
inc
loopne
adc
inc
fsubs
inc
mov
xor
in
fs
jg
dec
mov
inc
mov
aad
sub
rcrb
xchg
lcall
xor
pop
cmp
lret
lcall
and
pop
into
adc
in
xlat
adc
in
mov
cwtl
aad
mov
or
enter
lea
xchg
push
sahf
test
sti
std
xor
push
dec
or
xor
daa
addr16
rolb
cmpl
iret
clc
add
enter
jb
xor
icebp
outsl
xlat
lods
lcall
mov
sub
xchg
out
pop
xchg
jb
test
fsubrl
cmp
leave
andl
in
jb
imul
dec
fstps
and
imul
adc
shll
imull
jp
movsl
imul
scas
jnp
inc
sarl
lods
loopne
lret
push
jbe
call
adc
test
in
divl
loopne
rcrb
shll
pusha
mov
cs
mov
aaa
mov
ljmp
mov
and
adc
aas
jo
dec
xchg
enter
and
ret
push
pop
pop
mov
sbb
cmpsb
jno
adc
sub
add
lcall
mov
mov
repz
mov
outsl
or
push
sti
cli
mov
pop
mov
leave
bswap
lcall
fistl
push
add
xor
roll
jne
in
mov
dec
xchg
xchg
xor
iret
inc
xchg
pop
pop
stos
xchg
sbb
test
iret
cltd
popa
loopne
sbb
stc
fucomip
lret
xchg
push
xor
inc
mov
xchg
inc
hlt
and
jl
or
or
clc
ja
sbbb
push
iret
xor
xorb
in
xchg
cld
pop
call
pop
xchg
pushf
mov
mov
scas
inc
jg
test
fsin
cltd
push
jle
mov
adc
add
pop
and
jnp
fidivs
or
fstps
cli
loopne
hlt
jns
in
shr
jge
mov
dec
add
mov
mov
xor
sbb
jo
xor
mov
adc
data16
push
mov
shl
cmp
sub
add
roll
je
mov
call
mov
popf
mov
jecxz
sub
adc
mov
push
pop
das
xchg
sbb
lods
leave
cli
pop
adc
jmp
cmp
in
daa
or
push
clc
add
jl
movsb
dec
iret
movsl
aas
mov
push
xlat
lret
sbb
cld
xor
int
sub
jns
sahf
add
jne
cmc
loop
sti
sub
outsb
push
adc
pop
push
jmp
mov
adc
jecxz
or
pop
fstl
cmp
mov
mov
mov
pop
mov
mov
xchg
cmp
fistpl
out
mov
add
xchg
addr16
jno
mov
sbb
stos
addr16
mov
fidivrs
jbe
push
push
lods
mov
movsb
cwtl
dec
sahf
push
push
dec
ja
mov
mov
push
pop
pop
pop
or
jmp
or
fcoms
jg
sub
mov
mov
cmpsl
adcl
push
mov
cmp
or
push
sti
xor
jo
cmpsb
adc
int
rorb
mov
adc
cmp
test
or
mov
xchg
int3
jb
rcll
adc
imul
mov
mov
or
fbstp
sub
cmp
adc
sub
jmp
dec
enter
mov
inc
sbb
arpl
clc
cmpsl
aad
lods
divb
mov
xor
ds
mov
mov
adc
imul
pop
sar
ljmp
and
imul
inc
fisubs
push
and
mov
outsl
push
add
rcrb
sbb
lret
fmull
adc
cwtl
lahf
aaa
adc
and
aas
cmp
inc
sub
test
push
mov
inc
and
push
cld
pop
loop
pop
popl
enter
cli
out
xor
repnz
mov
cld
and
aad
xor
xor
in
lret
and
xchg
dec
push
and
or
dec
in
lods
lcall
sbb
push
cmc
jb
xor
scas
sub
aas
in
sub
les
in
test
scas
test
and
jo
nop
adc
xchg
or
mov
faddl
fldenv
push
dec
pusha
dec
pop
loopne
inc
xchg
orl
and
into
push
out
mov
jo
cmp
je
push
mov
push
cwtl
imul
sub
jle
in
lods
outsb
lret
ljmp
repnz
mov
mov
dec
rcll
or
insb
xchg
or
ret
or
jo
xchg
in
test
je
sub
ds
out
or
cmpsl
push
fs
insb
jbe
xor
sub
int3
dec
adc
punpckhdq
sub
push
ret
bound
adc
mov
stos
sub
sbb
and
pusha
into
icebp
add
and
outsl
add
popf
mov
sbb
cmp
jae
xchg
dec
jcxz
adc
repz
pop
push
arpl
insl
pushf
xor
out
jae
add
dec
pop
mov
stc
aas
dec
clc
cs
cmpsl
cltd
dec
loop
mov
dec
add
pop
xor
cmp
aaa
xor
jge
cld
fisubl
mov
pop
pop
cs
mov
and
mov
int
pusha
dec
xor
in
lahf
mov
or
mov
iret
inc
fs
xchg
mov
jnp
test
into
push
aam
inc
rorl
push
dec
cmpb
icebp
cmp
lds
mov
mov
and
jnp
or
lock
into
repz
cmp
in
icebp
inc
or
cmc
dec
adc
in
fldt
loope
sbb
sbb
xor
pop
adc
rcr
cmp
mov
inc
outsb
mov
inc
in
rolb
xchg
inc
xor
outsb
out
das
icebp
or
xchg
dec
push
ja
jmp
lahf
popf
xor
mov
pusha
mov
icebp
mov
pop
add
js
xchg
sbb
jmp
mov
xchg
pop
add
dec
sahf
rcr
sahf
sbb
pop
test
pop
inc
cmp
mov
mov
lds
lahf
push
hlt
loopne
leave
sbbl
ret
add
loop
insb
dec
pop
mov
lahf
jnp
push
lcall
shll
aas
pop
jno
mov
ror
xor
push
xchg
shrl
ljmp
bound
ja
insl
xchg
dec
adc
cmp
cltd
lahf
mov
push
cmpsl
mov
pusha
aaa
mov
fmul
mov
pop
and
jl
lret
jp
in
push
sarb
pop
push
jp
loop
mov
shll
pop
test
xchg
leave
mov
xor
cmp
es
dec
popa
mov
add
push
cld
cltd
loopne
mov
and
inc
cmp
ret
xchg
adc
in
push
ficompl
push
cmp
or
frstpm(287
pop
or
int
in
test
push
addl
and
imull
test
lods
or
seta
pop
call
push
decl
jns
push
adc
in
ficompl
in
lds
out
add
rep
clc
sub
mov
or
mov
int3
mov
sub
cmp
xchg
mov
sbb
dec
jp
insb
xchg
stc
pop
lahf
push
cmp
adc
push
xchg
jp,pn
mov
in
dec
mov
jmp
push
syscall
mov
cmp
aad
insl
fldl
ficomps
es
jno
roll
mov
imul
scas
das
movsl
jmp
pop
xor
pop
dec
in
shrl
xchg
sti
outsb
test
xor
jne,pt
cmpsb
mov
jae
loopne
cmc
jae
movsb
xor
pop
push
out
sub
and
pop
cmp
cld
xchg
xchg
addr16
test
add
pop
adc
push
xchg
mov
aaa
jo
lods
fcomi
mov
bound
push
gs
xchg
adc
ljmp
scas
imul
nop
sub
shrb
dec
rcrl
sub
cmp
inc
out
adc
push
add
pop
or
cmpsl
lcall
xchg
bnd
es
mov
std
jne
stos
and
dec
push
sbb
or
inc
mov
setb
shlb
movl
test
repz
xchg
pop
stos
clc
repz
pop
xor
mov
sahf
ja
dec
mov
mov
fmuls
mov
xchg
outsb
sub
fwait
cs
ret
adc
sub
lret
es
in
imul
xor
ss
mov
mov
call
or
mov
insl
mov
fildll
loopne
and
cmpsb
emms
cld
pop
test
mov
cmp
and
es
test
iret
sbb
jle
sbb
and
scas
sbb
adc
push
mov
enter
aad
inc
xchg
inc
addr16
in
cmp
cmpsl
movsb
mov
aas
out
dec
outsl
pop
and
pop
repz
in
xchg
pop
fimuls
pop
enter
inc
dec
cs
movsb
adc
mov
popa
push
pop
fcoms
pop
sub
and
bound
inc
clc
push
inc
iret
adc
ret
mov
lret
xchg
pusha
sbb
cmp
mov
push
loope
xchg
push
fisttpl
sbb
dec
scas
dec
pushf
and
fsubrs
dec
cmpxchg
test
out
and
gs
jle
leave
and
push
pusha
ljmp
push
and
pop
lock
sbb
mov
insl
pop
cli
cmpsb
outsb
xchg
or
mov
in
add
es
cmp
and
lcall
or
pop
in
add
fs
aas
aam
cmpsb
sahf
ljmp
stc
ss
xlat
dec
xchg
push
pop
movsb
pop
adc
lods
xchg
cmp
loope
sahf
mov
cmp
add
jmp
enter
dec
xchg
lds
and
fisubrl
cmp
xorb
jb
jae
into
mov
xor
fisubl
adc
fnstcw
scas
or
or
add
xchg
sub
dec
inc
daa
gs
dec
cli
mov
scas
pop
mov
test
pop
and
push
aam
imul
hlt
xor
mov
vpsrlq
mov
cmp
xchg
shrb
imul
adc
aas
cmp
jmp
cmp
mov
fsts
inc
cmp
push
ret
fcompl
enter
sbb
sbb
inc
ja
and
imul
fstpt
and
jle
loope
rorl
sub
push
xchg
lret
push
xlat
lods
mov
mov
pop
xchg
cmp
xor
aas
inc
enter
cmp
dec
jl
sub
cmp
mov
fisubs
dec
psrad
jge
in
sub
sub
sub
pop
lods
jge
and
dec
cs
rolb
jo
pop
div
pop
and
sbb
push
ficoms
nop
scas
push
imul
fmull
push
arpl
inc
jl
pop
xor
jp
in
jno
out
sub
mov
popf
mov
and
aaa
xor
mov
jl
mov
movsb
insb
adc
lods
and
dec
fiadds
insb
push
mov
and
loope
in
pop
jmp
fcoms
lods
pushf
ret
xor
call
pop
xchg
adc
xorb
mov
and
cmp
or
aam
push
xchg
punpckhdq
sub
js
mov
push
movsb
pop
popa
dec
jmp
mov
cmp
adc
pop
cli
lret
leave
adc
popf
and
insl
pushf
fwait
xor
imul
adc
incb
pop
push
bsf
cmp
in
sbb
arpl
mov
mov
in
fyl2x
mov
jge
insl
adc
aaa
push
pop
push
or
mov
imul
loope
pop
sbb
or
arpl
cmp
mov
inc
push
data16
out
push
mov
mov
out
js
es
cmp
repz
or
push
sbb
fucomip
hlt
pop
dec
push
call
add
add
xchg
out
mov
jmp
loopne
rorl
inc
stc
sarl
test
clc
push
dec
pop
pop
cwtl
or
push
xchg
sub
pop
xlat
mov
rorb
add
out
sbb
xchg
xchg
add
js
test
addr16
mov
inc
xchg
sub
push
orl
ret
mov
push
sti
out
aas
leave
ss
mov
mov
outsl
inc
pop
sub
xor
add
jmp
rcll
mov
std
shr
cmp
mov
lods
popa
xchg
pop
jne
jno
insl
or
jb
mov
ss
cltd
sbb
popl
mov
dec
aaa
push
push
xor
jge
cli
sbb
cli
mov
leave
inc
fcompl
push
repnz
jo
pop
sti
cmp
popa
xor
lcall
mov
arpl
cmpsl
jns
pop
pop
scas
dec
cmp
jnp
dec
ljmp
inc
jg
push
and
pusha
fistps
into
add
mov
sbb
sbb
xor
rorb
cmp
ret
hlt
cmp
or
sub
xchg
dec
xor
cmp
enter
mov
push
clc
icebp
add
cltd
pop
ffree
push
in
adc
push
lods
in
inc
sub
pusha
out
dec
cmp
or
mov
aad
lock
incb
dec
lret
xchg
pop
sbb
sbbl
repnz
sbbb
mov
or
pusha
cmc
cmp
mov
mov
out
adc
int3
sub
popf
add
leave
dec
xchg
cmpsb
in
call
stos
lret
xchg
stos
int3
sarl
aad
dec
hlt
sub
notl
xor
xor
dec
scas
fidivrs
sbb
cs
dec
out
or
imul
outsb
test
ret
stos
cld
ret
pusha
add
in
or
push
push
imul
inc
out
or
dec
insb
mov
mov
push
ret
mov
sbb
dec
ljmp
test
clc
xchg
sub
push
mov
push
adc
aam
mov
xchg
push
out
out
insb
dec
lods
mov
repz
es
insb
cli
inc
in
or
push
adc
sbb
shlb
or
mov
or
jle
lcall
jecxz
stc
sbb
xchg
imul
lods
lcall
and
xchg
push
and
aad
adc
jbe
inc
cmc
add
cld
imul
sub
pushf
fwait
test
add
dec
xor
or
leave
or
sti
pop
mov
popa
lret
pop
cmp
xchg
scas
ljmp
add
xor
mov
loopne
test
scas
idiv
jle
mov
cs
inc
repz
arpl
mov
and
js
imul
movsl
mov
nop
cli
cmp
jne
push
test
data16
imul
jo
das
adc
pop
mov
pop
mov
push
imul
mov
lods
push
jecxz
xchg
mov
pop
push
fucomi
call
inc
sbb
mov
sbb
sar
mov
inc
mov
xlat
nop
dec
adc
pop
int3
int
scas
fdecstp
jge
dec
adc
inc
mov
xor
lcall
outsb
ljmp
dec
pusha
movsb
bound
out
imul
mov
pushf
rolb
mov
insb
adcb
es
out
xchg
ss
sub
sub
mov
mov
cmp
mov
dec
imul
sub
mov
adc
sti
mov
pop
test
clc
xor
in
jmp
daa
repnz
adc
ret
int
sti
jecxz
push
clc
jg
sarl
sbb
sbb
jno
scas
fimull
mov
scas
pop
sahf
push
jae
into
js
clc
pushf
test
xlat
imul
inc
inc
mov
and
jbe
jns
rcl
negl
jg
loopne
push
pop
sbb
repz
pop
pop
stos
cmp
mov
imul
enter
push
xchg
cmp
fldt
push
testl
adc
ss
call
jne
idivl
iret
dec
or
mov
roll
dec
test
outsl
pushf
xchg
inc
mov
inc
mov
add
add
lods
dec
mov
je
pop
add
shll
test
pop
lret
pop
and
sti
leave
inc
sub
ds
testl
bound
xor
jbe
add
ret
adc
loopne
loopne
imul
sub
popa
sbb
fwait
xor
cltd
mov
adc
and
bound
add
out
int
jg
jecxz
mov
daa
mov
pop
andnps
xor
cs
mov
inc
pop
add
rcrb
cltd
pop
sub
je
pusha
push
adc
scas
dec
jb
and
inc
cmp
inc
sub
pushf
push
pop
pop
lretw
movsb
and
push
mov
mov
sbb
fdivl
dec
cmpsb
and
clc
sub
push
dec
test
incb
mov
inc
xlat
push
jne
add
in
push
sub
rclb
or
ret
sbb
or
cmp
jl
jg
sub
test
jns
jbe
shlw
pop
cwtl
clc
push
inc
test
loopne
pop
cmp
nop
cmp
push
dec
sbb
add
mov
xchg
inc
lock
pop
jmp
out
cli
jmp
jp
sti
sub
cltd
push
jo
movsb
xor
fidivrl
pop
negb
shlb
adc
fwait
andb
pop
xor
inc
add
leave
push
or
aaa
sbb
adc
xchg
xchg
stos
nop
mov
cmp
cs
or
mov
stos
xchg
and
scas
push
scas
or
nop
enter
pop
pop
mov
jbe
mov
push
hlt
lret
mov
inc
pop
neg
lods
mov
jb
arpl
inc
fsubl
rcrl
lcallw
mov
dec
sbb
inc
es
pop
int
repnz
movsb
repnz
into
dec
imul
into
ljmp
add
mov
add
xchg
cltd
cmp
pop
pop
jo
call
movsl
jns
lret
jge
insb
xor
add
rcrb
xor
mov
mov
test
sbb
stos
inc
cwtl
sbb
leave
mov
pop
push
fmuls
sar
sti
je
adc
push
or
nop
and
filds
xchg
fsubrs
out
push
push
jb
dec
scas
xor
mov
aad
inc
cmp
pop
stc
inc
add
ret
outsb
out
mov
adc
sahf
mov
in
fcmovne
mov
cmpsl
out
sarb
xor
ja
cli
or
out
mov
ret
outsb
lods
mov
repnz
add
sbb
icebp
lcall
mov
mov
lcall
add
leave
cmp
cltd
daa
push
mov
sbb
aad
jle
mov
pop
inc
adc
sub
inc
std
loopne
int
and
push
js
and
mov
aam
repnz
add
and
cmpl
add
push
or
out
aad
push
mov
dec
gs
sbb
sar
xchg
lahf
adc
cmpsl
into
outsl
cld
mov
bswap
pop
int3
jle
lret
daa
pop
push
jnp
jae
jnp
xor
scas
cs
in
cmp
or
adc
mov
mov
mov
lea
lret
divl
add
fcmovbe
js
sbb
ds
aas
les
dec
repz
and
or
mov
ret
ficoms
aad
rcr
cld
and
jae
jg
les
xchg
iret
mov
push
ret
mov
inc
inc
int
add
cmpsl
pop
jp
dec
stos
mov
and
sti
mov
cmpsl
xlat
je
add
pop
ret
push
mov
orl
stos
sbb
repnz
movsb
and
push
cli
xor
jno
dec
out
xchg
shrl
xlat
dec
mov
sub
or
dec
adc
inc
enter
xchg
out
stos
ret
or
jo
lahf
xor
pop
push
repnz
cmp
jnp
sbb
pop
sub
jge
cld
jge
jbe
push
adc
scas
pop
inc
outsl
lock
inc
and
out
in
cltd
and
xchg
sub
scas
je
dec
fs
std
sbb
pop
imul
movsb
push
push
imul
cmp
stos
aas
imul
shrl
add
pop
jp
xchg
xor
mov
xor
sub
mov
aas
add
cmp
and
hlt
and
and
mov
dec
jb
mov
pop
inc
inc
push
adc
xor
cmc
xor
data16
inc
bndldx
adc
cmpsl
dec
pushf
ljmp
xor
xlat
sub
ds
cmp
push
and
jb
mov
add
std
and
sbb
ljmp
leave
popf
bound
jne
ret
xor
push
dec
fcmovnb
xchg
shll
cld
xchg
ds
lret
bound
scas
xchg
push
jb
shrl
lahf
sbb
fildll
lock
sarl
mov
sbb
cmp
in
std
test
inc
adc
ficompl
mov
sub
mov
loopne
jge
adc
pop
ja
popf
inc
xchg
adc
dec
out
push
jl
mov
inc
xchg
and
test
add
stos
mov
push
roll
sbb
addr16
repnz
cltd
lret
cs
xor
int
push
out
xchg
dec
fwait
dec
or
pop
cmp
int3
xor
imul
cli
inc
bsr
or
inc
mov
cld
sub
xlat
push
outsb
ljmp
mov
and
out
test
jmp
mov
out
fwait
sub
test
pop
ja
out
insl
loope
orb
aam
mov
mov
ja
test
or
in
pop
dec
lahf
aam
repnz
aas
bound
adc
rcll
sbb
pop
repnz
add
cmp
mov
ret
mov
dec
mov
jecxz
push
pop
aam
shr
mov
mov
stc
jecxz
in
mov
xorb
push
insb
mov
ficomps
adc
jmp
or
adc
inc
xor
popf
mov
stc
js
mov
loop
lds
aam
out
and
rcrl
push
mov
mov
ret
aam
jp
xor
test
inc
scas
cmpsb
js
jg
popa
lea
test
push
ret
iret
fisubrl
adc
and
jl
push
add
out
lods
push
dec
dec
adc
aam
std
jle
xchg
cmp
cltd
push
iret
nop
jmp
popa
outsl
or
sub
mov
cwtl
mov
add
sub
negl
fistl
jne
out
inc
sub
decl
int
loope
sub
movsl
in
or
ljmp
lahf
dec
cmc
sub
xor
or
jmp
nop
dec
cs
in
push
ret
leave
jge
pop
call
ds
popf
and
scas
pop
data16
add
loop
inc
adc
push
add
mov
arpl
ljmp
jbe
mov
loopne
loop
out
mov
dec
shlb
and
hlt
cmp
sbb
lahf
and
lods
stc
out
jnp
xor
xchg
sbb
and
mov
jo
jo
testb
lahf
daa
xchg
xchg
inc
std
insl
loope
pushf
push
inc
aad
sbbb
aad
sbb
dec
es
xchg
out
and
into
mov
mov
out
mov
pushf
in
outsb
les
mov
out
add
cmp
in
mov
push
aaa
mov
push
add
ret
test
fdivrl
mov
xchg
mov
test
lds
orb
sub
mov
cli
inc
and
out
sub
mov
shll
push
mov
sub
push
scas
sbb
inc
jbe
das
leave
inc
xor
fwait
leave
imul
add
inc
push
mov
cmp
or
push
out
inc
push
insb
adc
inc
stc
push
in
scas
sqrtps
dec
and
in
mov
mov
mov
icebp
fwait
decb
push
and
or
mov
out
and
cs
dec
pop
sbb
ss
pop
and
testb
call
sub
add
iretw
dec
jmp
int3
mov
cmpsl
mov
mov
sarl
sbb
pop
aam
and
dec
lods
adc
bound
mov
ret
and
inc
es
cmpsb
mov
fucomp
jge
add
push
mov
out
jb
dec
scas
pop
divb
mov
insb
xchg
xchg
int3
add
cltd
dec
repz
sbb
adc
adc
adc
push
adc
mov
push
push
int
cmp
xor
sub
arpl
mov
pop
xchg
push
loope
jb
dec
jo
mov
lods
out
fwait
xchg
push
xor
mov
stc
ss
sbb
mov
push
mov
dec
rclb
xchg
out
sub
push
cmp
push
and
or
sahf
xor
arpl
mov
jp
sti
adc
movb
enter
xor
sub
or
inc
scas
imull
sub
into
enter
in
sub
lcall
movl
cmp
push
push
xchg
and
jae
shrb
mov
cli
mov
push
push
mov
add
mov
pmaddwd
movsl
cmc
fwait
cli
cmpsl
mov
add
scas
xchg
ds
in
cmp
fcompl
stc
arpl
xorb
mov
mov
aam
out
cmp
jbe
enter
in
cltd
or
xor
sti
fildll
aas
movsb
sub
or
dec
int3
ss
and
xor
ffree
and
xchg
iret
pop
aaa
loopne
bound
dec
adc
fsubrs
popf
inc
xchg
pushf
or
jmp
mov
xor
push
int
push
aam
es
cmp
xorb
push
pop
xchg
sbb
lret
jae
cmp
add
sbb
pop
mov
jns
inc
mov
sub
sbb
inc
push
and
pop
cmp
mov
sbb
in
jle
fs
xchg
loop
daa
cld
stc
pop
dec
mov
mov
cmp
call
mov
or
xor
sbb
sbb
sub
shll
mov
out
imull
std
mov
jnp
es
mov
cwtl
das
fldl
xchg
cwtl
add
xchg
aaa
fldcw
add
in
pop
mov
cmpsl
jle
or
lcall
xor
jmp
lret
dec
push
insl
out
sahf
rcr
test
add
xor
repnz
in
dec
das
fucomi
insb
add
pop
push
mov
cmp
aam
rol
jne
pop
cmpl
xchg
add
mov
xchg
sub
mov
mov
repnz
sti
jns
out
out
add
lcall
in
or
cmp
shll
orl
jge
fcoms
lock
push
jp
enter
mov
imull
sub
adc
subl
push
adc
aad
ss
xor
pop
icebp
bound
lds
aam
pusha
iret
cwtl
jno,pn
sahf
std
in
sbb
xchg
ret
insb
arpl
inc
jo
loope
test
lcall
add
popf
inc
sbb
sub
dec
arpl
cmp
pop
jno
mov
out
fsubl
fadds
je
mov
mov
inc
fistl
pop
fucomp
roll
sub
and
fsubl
divb
leave
sub
and
jno
pop
adc
xchg
jnp
mov
push
mov
hlt
test
add
dec
frstor
or
pop
jbe
xchg
je
int3
inc
lret
mov
add
in
aad
or
lea
nop
int3
mov
add
mov
stos
and
add
bound
insl
mov
xor
dec
inc
push
clc
dec
xchg
shrl
sbb
sub
push
mov
out
addr16
push
xchg
loope
jns
mov
and
adc
xchg
pop
add
xchg
fs
sbb
mov
dec
push
sub
cmp
jb
subl
jb
mov
pusha
push
pop
mov
xor
ds
outsb
data16
insl
cltd
inc
sub
push
xor
mov
or
lods
leave
sbb
aam
adc
addr16
call
dec
das
xchg
jmp
negb
mov
jp
ret
mov
xchg
mov
filds
cmc
cmc
hlt
imul
pushl
cmc
mov
jns
sbb
push
cmp
sar
mov
pop
jg
cs
and
pop
out
cld
lock
mov
mov
or
int
add
add
and
sbb
or
cmp
mov
xchg
out
and
jp
xchg
int
mov
outsl
jg
xor
push
xchg
or
mov
add
cmp
movsl
add
movsb
xchg
ret
mov
pop
mov
aad
aaa
sub
mov
mov
push
notb
mov
lock
pushf
lods
pop
ja
mov
sub
iret
out
sbb
xchg
adc
pop
mull
adc
add
mov
cmp
xor
loop
xlat
push
jmp
xchg
cli
push
negl
push
mov
mov
fcoml
jmp
or
das
sub
rcrb
inc
jg
data16
in
pop
es
xchg
cwtl
inc
cmpl
xchg
pusha
jb
sbb
xor
push
fidivrl
mov
imul
jbe
loopne
xor
and
lea
std
mov
pop
inc
cmpsb
mov
aam
out
cmp
inc
jbe
gs
inc
test
xor
mov
push
sub
arpl
cmp
imul
add
pusha
dec
rcl
cmc
mov
icebp
jl
push
adc
ret
aas
sub
pop
mov
mov
adc
dec
inc
inc
xor
lods
rorl
scas
or
jno
fdivs
push
or
add
pop
rcl
sahf
or
ds
rcr
repnz
mov
das
or
lea
rcl
ja
mov
fists
jp
sahf
inc
nop
xor
aam
add
scas
push
mov
cmp
shrb
or
xorl
sahf
jb
ret
inc
lret
sysenter
mov
mov
ret
mov
push
loop
cmpsb
xchg
mov
pushf
hlt
dec
dec
and
frstor
adc
push
xor
pop
out
and
dec
jno
movsl
fdivrs
stc
sbb
xchg
das
pop
adc
inc
sub
data16
add
dec
add
jbe
mov
adc
jge
fmulp
into
sti
push
xchg
into
cs
xor
ret
stos
shrl
push
fwait
es
mov
fimuls
add
lahf
push
mov
push
enter
mov
mov
mov
sbbb
ss
sarb
hlt
sbb
mov
pop
sbb
lret
mov
push
sarb
or
out
flds
adc
aas
fldt
mov
in
push
jecxz
mov
jecxz
xor
fs
je
in
cli
xor
cmp
mov
testb
sub
scas
cmpsl
mov
jl
icebp
xor
ds
add
daa
mov
hlt
js
insl
cmp
cmp
dec
ficoml
mov
sub
cld
das
pop
das
into
hlt
push
adc
popa
push
pop
xor
inc
mov
popa
fdiv
test
cli
add
in
jl
pop
push
inc
popa
push
xchg
pop
xor
bound
pop
rorb
bound
xchg
adc
push
inc
xor
inc
outsb
movl
pop
flds
loop
cltd
movsb
push
imul
dec
mov
cmp
fs
jb
add
pusha
faddl
mov
and
mov
int3
cmc
and
and
addb
xor
fs
mov
add
sahf
outsb
test
inc
icebp
jbe
adc
mov
push
neg
shrb
stc
mov
jne
push
inc
sbb
cmp
jae
jl
andnps
mov
cmc
in
inc
shll
push
enter
push
mov
lock
adc
jb
sti
mov
lea
adc
stc
mov
les
clc
pop
bound
fucom
lock
add
xchg
outsl
inc
add
retw
or
mov
mov
xor
sub
add
add
enter
fs
mov
fnstenv
xchg
cmpsb
mov
std
jecxz
je
adc
xor
addr16
xchg
push
insb
dec
jne
add
fsubl
decb
or
hlt
or
inc
pop
mov
or
mov
repnz
es
leave
cmpsb
push
xor
inc
ljmp
hlt
fcomps
cmpsl
scas
mov
mov
iret
adcl
xchg
out
imul
inc
fimuls
inc
adc
and
jne
push
or
xchg
mov
je
mov
sti
popf
lcall
fwait
and
das
mov
inc
hlt
jae
fcompl
jb
jnp
xor
in
sbb
pushl
daa
mov
jge
je
js
inc
add
push
xor
pop
push
inc
adc
xor
lcall
clc
call
lahf
and
sarl
ljmp
sbb
jg
mov
movsb
mov
inc
cmpsl
inc
cwtl
add
loopne
adc
lods
inc
adc
rorl
inc
icebp
aas
mov
xchg
insl
inc
xchg
dec
mov
daa
mov
mov
sbb
jne
decl
test
fistps
stos
or
and
dec
push
cmp
add
xor
add
pop
mov
push
out
sbb
mov
clc
xchg
fdivrl
push
js
pop
mov
sbb
jb
outsb
addr16
sub
cmpsb
lds
lods
adc
or
lret
mov
jl
testb
leave
dec
in
push
les
iret
aaa
jmp
icebp
mov
cmp
jbe
pop
pusha
inc
fistps
stc
clc
xor
push
in
es
out
dec
clc
jecxz,pn
mov
ror
push
jnp
sub
inc
xchg
out
dec
mov
mov
lret
xor
test
cmp
add
mov
push
pusha
xchg
lret
lea
xchg
xchg
adc
mov
and
add
cltd
adc
push
and
popf
mov
or
rol
cli
cmp
in
xchg
mov
mov
mov
popa
lods
fwait
xchg
movsl
adc
imul
sbb
scas
mov
xchg
mov
adc
pop
jnp
jno
fisubrl
sbb
push
push
lret
pushf
pop
mov
add
ljmp
mov
lods
pop
imul
lock
lods
scas
inc
sub
lahf
ret
iret
jbe
out
or
and
enter
jb
lods
xor
mov
mov
xchg
sahf
xchg
test
mov
xor
push
test
scas
cld
xchg
jle
stc
dec
je
push
cli
pop
or
xchg
push
cmpsb
inc
push
bound
jne
popf
movsb
mov
lea
scas
adc
aaa
xor
cmp
sub
fcompl
rcr
jmp
mov
sahf
test
fisttpl
jge
filds
inc
mov
pop
fdivrs
xor
pop
or
in
out
xchg
mov
cmpsl
cmp
das
push
out
inc
fistps
popa
push
sbbb
popa
das
leave
cwtl
dec
jb
pop
or
ds
adc
aad
imul
and
and
mov
jmp
test
mov
shlb
aaa
bound
daa
fldl
jecxz
adc
mov
cmp
adc
hlt
push
aam
lea
aad
xchg
daa
cs
arpl
xchg
push
iret
repz
cmpsb
push
pop
enter
add
scas
cmp
dec
jmp
shl
mov
sbb
jae
mov
mov
fldcw
jns
out
pop
pusha
mov
pop
hlt
inc
fimull
mov
icebp
inc
dec
mov
into
imul
push
sub
fsubl
add
adc
mov
movsb
and
sahf
shrl
sarl
cmpsb
and
and
nop
inc
xor
sbb
js
sbb
repnz
pop
aam
add
test
inc
mov
out
and
mov
jne
shlb
lcall
push
sbb
cmpsb
sbb
dec
xchg
scas
or
test
add
lea
and
dec
sub
inc
or
loopne
jne
xchg
outsl
hlt
xchg
mov
jmp
lods
pop
pop
rol
mov
pushf
aam
fwait
ss
mov
push
mov
dec
dec
or
ss
movsb
mov
jmp
cld
cmp
in
je
fsubr
repz
imul
sahf
cli
sar
cmp
sub
into
pop
lret
aad
add
scas
mov
fs
xor
or
mov
imul
jno
leave
mov
aad
pop
leave
into
xchg
out
pushf
inc
push
cmp
jmp
mov
movsl
sbb
pop
mov
into
hlt
or
stc
xchg
jg
dec
add
repz
sub
jns
adc
addb
jb
xchg
dec
stc
rorb
rcll
and
aam
loopne
mov
js
jge
cmpxchg
fnstcw
outsl
and
loop
cmp
sub
je
loope
jnp
add
in
out
movsl
lds
out
pop
mov
adcb
insl
jp
xchg
nop
pusha
xlat
pop
in
lahf
aaa
pop
pop
leave
jp
xorl
sti
mov
jne
scas
int3
or
xlat
and
sub
addr16
and
pop
ljmp
outsl
outsb
and
add
call
int3
push
jnp
push
aam
cmp
out
call
pusha
imulb
cld
repnz
push
int
test
mov
outsb
cmp
cmp
xor
or
push
outsl
cmp
leave
sub
xlat
sbb
daa
in
gs
out
movsl
insb
fldl
push
aad
ret
in
add
sahf
stc
pop
pop
movb
outsl
or
jne
shll
arpl
shrl
fisubs
push
loopne
out
loope
rcll
pop
jbe
jge
leave
mov
stos
fsubrl
scas
mov
loop
pop
loope
inc
mov
dec
sbb
pop
mov
mov
pop
lods
cwtl
mov
cwtl
xor
mov
cltd
add
inc
popa
or
rol
cmp
rclb
xchg
jp
and
enter
dec
rcll
iret
je
xor
jmp
aad
adc
out
xchg
arpl
cmp
imul
add
stos
adc
mov
pop
jp
and
add
mov
lret
pop
cmp
loop
and
das
cmpb
rclb
and
test
xchg
mov
mov
cmp
into
ficomps
sbbb
sbb
jo
pop
out
outsb
or
pop
or
push
movsl
mov
cltd
std
daa
jae
lret
xor
mov
divb
mov
lret
stos
sub
push
inc
inc
mov
mov
mov
jl
inc
imul
fsubrl
jge
inc
shrb
pop
mov
mov
int3
int
clc
in
rcrb
push
xchg
ficomps
lahf
dec
pop
movsl
jmp
pop
mov
or
mov
daa
icebp
subl
daa
out
jae
dec
dec
movsl
insb
packuswb
cmpb
adc
je
js
cmp
call
data16
mov
inc
cmp
mov
shll
insb
cmp
out
pop
pop
lret
es
mov
mov
cmpsb
lret
out
dec
out
mov
dec
and
mov
and
lahf
ss
repz
insb
pop
jmp
jbe
in
sbb
mov
or
adc
pop
inc
cmp
lods
mov
mov
cwtl
loop
and
testb
es
scas
pop
mov
pop
fsubrp
mov
gs
mov
out
cmp
aam
xor
mov
les
pavgb
cmp
cmp
loope
sbb
mov
pop
cli
ret
scas
push
or
call
or
dec
mov
push
push
fcomps
mov
enter
mov
fbstp
adc
pop
xor
xchg
repz
movsl
dec
jle
xor
mov
dec
cmp
jb
lods
test
and
int
insb
sub
jo
inc
add
cli
je
pop
sbb
call
add
dec
ja
subb
sahf
push
pop
js
sbb
insl
repnz
or
sub
adc
imul
std
pop
sbb
daa
test
outsl
inc
jae
jb
mov
add
dec
sbb
sub
test
cmp
ss
orb
inc
notb
subb
dec
dec
cmp
mov
bound
xchg
add
ret
mov
lret
out
inc
push
movsb
dec
stos
lret
fsts
out
mov
jo
std
lret
fbstp
shlb
es
pop
fdivs
push
repz
rorl
mov
leave
pusha
inc
pop
cmp
dec
push
sti
mov
jle
addb
or
mov
loopne
or
loopne
call
sbb
mov
imul
pop
mov
adc
xchg
cltd
fwait
cmpsb
and
mov
xor
xlat
in
sbb
mov
cld
fmull
push
jl
cli
mov
inc
in
out
cs
cmp
lcall
push
cwtl
mov
rol
add
lret
fwait
js
popa
imul
add
gs
call
pop
jl
ffreep
push
out
sub
rorb
mov
pop
loope
mov
icebp
and
and
mov
or
stos
divl
or
pop
fs
aad
aaa
insl
cltd
repz
es
adc
lea
addl
fistpl
into
loop
and
andl
sahf
outsb
test
push
jge
dec
mov
xor
rclb
cs
dec
movsl
mov
jmp
adc
testl
addb
scas
das
dec
push
lds
pop
sahf
repnz
xchg
insl
popf
mov
adc
fbld
lcall
ret
loopne
cmp
inc
cli
test
mov
ret
add
subl
fidivs
rcll
mov
pop
push
lcall
push
adcl
cs
jecxz
cld
adc
push
or
dec
scas
inc
adc
jae
lods
mov
cmp
jecxz
loope
out
aad
nop
pop
push
cmpsl
aad
shr
imul
sub
subl
popa
mov
or
loopne
mov
mov
xor
jnp
mov
lret
lock
xor
mov
stos
insb
fwait
pusha
lahf
divl
into
loop
and
and
jmp
pop
xchg
js
scas
mov
repz
push
xchg
xor
insb
in
inc
rorb
scas
andb
insb
outsb
sub
aad
push
or
clc
cmp
in
out
stc
das
xchg
xchg
pop
jl
ds
mov
xchg
inc
adc
adc
mov
cmpsb
mov
call
adc
iret
push
add
jo
ds
fsts
lret
sarb
xlat
int3
loope
jns
enter
nop
es
inc
jno
sub
int
add
jp
jp
xchg
jg
in
mov
dec
ss
repz
jmp
cmpsb
movsb
push
fiaddl
je
daa
cmp
mov
nop
outsb
sub
pop
inc
dec
jl
cmp
cmc
into
sti
add
jge
pusha
cmpsb
ret
insl
and
xchg
dec
jne
xchg
je
jns
xor
fmulp
int3
push
ja
lret
test
in
jns
cld
pushf
in
xchg
outsl
subb
loopne
xor
dec
outsl
xor
mov
outsb
dec
test
adc
inc
mov
add
add
scas
enter
cld
dec
and
lret
insl
cmp
mov
or
xor
pop
sbb
adc
movsb
cmp
pusha
sbb
cwtl
sarb
jno
aam
add
mov
in
xchg
and
adc
ret
test
lret
mov
mov
mov
or
mov
outsl
nop
lcall
cmp
fwait
out
sbb
mov
jns
mov
stos
leave
xor
fwait
xor
pushf
insb
ret
pop
mulb
dec
mov
daa
in
insl
lods
or
test
loope
mov
jmp
or
fs
jmp
jge
test
repz
lret
jge
mov
mov
inc
sub
ljmp
push
dec
repz
pop
lods
dec
fdiv
arpl
inc
ret
xchg
cmpsb
push
ret
mov
sub
inc
dec
mov
pop
mov
pop
adc
mov
out
lock
cld
movsl
les
shlb
or
sub
sub
pop
je
push
pop
cmpsb
cwtl
in
shrb
jle
lea
lds
stos
bound
xor
jo
je
imul
cmpsb
cmc
sbb
mov
dec
into
dec
iret
les
pop
imul
sbb
inc
subl
xor
test
movsl
push
inc
sarl
sahf
aad
mov
std
sub
mov
icebp
nop
or
sbb
adc
les
cld
jg
pop
in
dec
fadds
fcompl
mov
fisttps
jo
ffreep
leave
adc
and
push
lahf
push
push
mov
xlat
movsb
mov
adc
addr16
push
into
fisubrs
xchg
cmpsb
push
and
pushf
sbb
stos
sub
pop
xchg
mov
mov
or
inc
sbb
xchg
shrl
adcb
sub
mov
jno
mov
sub
shlb
mov
out
dec
int
xchg
in
scas
pop
pushf
push
arpl
test
push
inc
sub
fwait
aam
or
mov
mov
and
xchg
scas
shlb
enter
dec
dec
dec
cli
adc
and
bound
sbb
dec
scas
push
sbb
pushf
enter
mov
sbb
adc
pop
out
adc
pushf
test
push
cmp
ss
in
arpl
dec
lds
leave
pusha
or
sti
xor
mov
pop
xchg
pop
popa
hlt
adc
mov
mov
cmp
add
clc
stc
push
sub
dec
mov
jmp
mov
cmp
mov
ss
xchg
push
loopne
cmpsl
setg
inc
stos
jne
pop
lcall
rorl
shlb
mov
sahf
and
push
xor
test
out
rorl
cltd
enter
cmp
arpl
mov
nop
out
or
inc
mov
inc
fiaddl
das
movb
sbb
jb
jecxz
adc
jmp
or
fbstp
xor
repz
jnp
and
int
sub
and
aam
fnstenv
xor
loop
mov
sahf
mov
subl
xor
jg
out
popa
jnp
test
add
add
std
adc
mov
mov
clc
push
pop
addr16
sbbb
loop
adc
push
stc
inc
xchg
cmc
jge
adc
rol
sarl
xor
ret
jle
push
and
inc
lcall
jbe
sbb
cmp
dec
insl
xlat
xchg
xorl
repz
mov
scas
cmpsl
into
xchg
mov
or
or
sub
pop
inc
shll
insb
lock
xchg
xlat
shr
sub
xorl
popf
pop
fdivp
popa
imul
je
mov
loopne
call
fisttps
xchg
int
jge
add
sti
jp
pop
pop
ret
jae
cmpb
jl
xor
or
jl
rcrl
sbb
inc
xor
jecxz
mov
loope
jmp
je
cmp
mov
rorb
int
negb
mov
pop
dec
inc
sub
jl
out
scas
scas
scas
cmp
pop
repz
xchg
mov
sbb
or
adc
pusha
dec
cs
mov
cmp
cmpsb
mov
in
jmp
pop
pop
cmp
fistpll
dec
or
dec
jg
outsl
jmp
cmp
cltd
fwait
popf
jo
shll
push
sbb
mov
pop
sub
lcall
call
shl
mov
cwtl
add
dec
stos
clc
sarl
fucom
divl
push
addr16
xchg
pop
aaa
or
xchg
inc
sbb
fwait
shl
fs
fcoms
jnp
repnz
dec
push
negb
in
pop
inc
stos
or
lock
ss
out
dec
bound
fistpll
push
jae
bound
cmp
xor
add
pop
nop
push
mov
inc
xor
ljmp
inc
stc
idivb
dec
cmp
xchg
cmpl
push
sarb
xchg
sub
or
clc
test
insl
mov
out
dec
imul
mov
jbe
xor
sahf
ss
repnz
jns
sarb
sub
push
push
mov
sub
jo
jl
sbb
push
xchg
push
jno
sbb
lods
cltd
push
popa
mov
xchg
mov
jle
ds
push
mov
cmp
cmpsb
lahf
out
and
ja
rcr
fiaddl
adc
xchg
or
jnp
data16
arpl
rcl
out
jecxz
shlb
nop
dec
jns
lea
xor
jb
in
fwait
pop
push
sbb
jns
mov
pop
inc
dec
add
cmp
ja
inc
sbb
mov
fstp
clc
mov
sub
inc
pop
and
cmp
dec
ja
lods
sub
adc
pop
jns,pt
mov
les
cmp
dec
add
and
loop
cmp
subb
dec
stc
jnp
dec
pop
test
test
mov
jne
pop
scas
push
jo
repnz
daa
mov
cmp
loopne
inc
xor
inc
test
adc
dec
mov
shll
add
jmp
aas
mov
je
insb
jno
mov
pushf
inc
dec
inc
and
hlt
or
inc
adc
or
pop
xor
cmp
call
jne
pop
push
sub
popa
cmp
aam
pop
idivb
push
nop
out
pop
mov
inc
pushl
mov
or
jecxz
inc
push
mov
sbb
std
in
pushl
pop
out
cmpsb
das
add
sahf
in
imul
loop
mov
pop
or
sub
data16
sbb
lock
xor
repnz
mov
clc
int
stc
jns
sti
jb
cmc
xor
sti
lods
add
in
pusha
jmp
mov
jecxz
aam
shl
ljmp
in
and
mov
xchg
mov
cmp
or
sub
js
sbb
mov
testb
es
push
jge
jo
dec
pop
or
xor
popf
inc
cmc
aam
mov
adc
out
jg
push
mov
sahf
inc
jmp
movsb
add
aam
stos
mov
or
out
lret
xor
out
mov
adc
sahf
clc
push
fisttpl
xor
push
jbe
xor
jns
and
loopne
cmp
dec
aas
pop
call
mov
mov
and
mov
sarb
out
add
jnp
sub
add
fwait
xlat
pop
inc
push
xchg
rolb
inc
bound
cmp
nop
lods
cltd
ljmp
mov
icebp
jecxz
xchg
mov
mov
sub
jnp
stc
or
xor
push
adc
and
jo
sti
cmp
sbb
pop
push
ss
mov
pop
movsb
clc
push
adc
lret
mov
lret
mov
and
repz
add
xchg
xchg
mov
lds
pop
pop
dec
or
pop
cmp
jae
or
or
outsl
xor
cmpsb
out
push
addr16
inc
sbb
cmpsl
repnz
hlt
aas
jmp
negb
and
imul
sub
xchg
add
and
mov
js
mov
jnp
mov
add
gs
mov
aam
stos
std
jns
adcl
xchg
roll
xchg
ficompl
pop
pop
lea
mov
ljmp
jns
dec
int
jbe
and
mov
mov
shll
push
addb
fildl
ja
xor
clc
cmp
pslld
lahf
pop
inc
push
xchg
cmp
mov
sub
in
int
mov
in
shlb
push
aam
sbb
xchg
popf
out
pop
mov
cmpsb
leave
ret
negl
outsl
xchg
daa
mulb
addr16
mov
jp
xchg
dec
test
mov
and
scas
or
inc
jp
cmpsl
sub
data16
sub
fmull
stos
movsl
clc
dec
mov
mov
jnp
iret
mov
cli
jbe
inc
aad
arpl
out
int3
jnp
into
insl
pop
popa
ss
stos
movsb
push
js
sub
adc
xlat
nop
test
imul
fwait
and
cmpsb
sbb
jae
xor
cmp
add
and
adc
sbb
mov
loop
adc
mov
dec
xchg
inc
imulb
es
adc
dec
mov
shlb
rcl
push
jne
push
pop
mov
add
jno
jo
cmp
pop
sbb
xchg
das
lock
jge
pop
cmc
cltd
pushl
pop
fcmovnb
rcr
adcl
jb
sub
inc
out
fiadds
ds
cmp
fnstsw
pop
pop
pop
push
push
das
mov
and
push
pop
push
shr
test
inc
rorb
inc
loop
movsb
shlb
nop
xor
fiadds
jmp
sbb
scas
jmp
faddl
mov
out
fdivs
test
rol
scas
dec
mov
inc
rep
lea
push
fwait
push
les
arpl
in
or
xchg
sub
cmp
int3
test
fisttpll
dec
fdivs
cwtl
mov
dec
and
fwait
rcll
movsl
dec
xlat
js
push
insb
mov
outsl
icebp
xor
mov
push
jg
jecxz,pn
mov
loop
mov
leave
xchg
aad
push
leave
or
mov
mull
fs
je
jo
cmp
cmp
jne
sub
dec
xor
jmp
jb
sbb
push
push
popa
adc
jno
test
lods
pushf
or
loop
or
dec
jbe
and
mov
mov
test
add
dec
test
push
mov
adc
out
fistl
mov
cld
mov
daa
pop
mov
cmp
mov
mov
inc
in
or
imul
add
xchg
fucomp
push
test
dec
lahf
or
fisubrs
data16
test
push
mov
and
roll
jecxz
out
loope
shll
pop
and
pop
dec
stc
mov
push
aaa
jle
arpl
test
xchg
bound
imul
bound
jge
out
xchg
jae
dec
xchg
xchg
mov
subb
not
inc
ret
push
dec
cwtl
push
rorl
push
sti
shlb
pushf
sbb
sub
mov
popa
sbb
xor
lcall
cwtl
outsb
cmpsl
in
ret
int
dec
lret
cmpsl
addl
jg
inc
ret
lea
sub
hlt
or
push
sub
push
cmp
xchg
mov
cmp
lock
or
lret
leave
mov
pop
mov
fcmovnu
filds
pop
mull
aad
mov
lds
cmp
call
sub
add
lret
fldenv
imul
packuswb
push
test
ss
sub
repnz
mov
shlb
adc
jae
inc
cmc
cs
cmpb
add
repz
cwtl
xor
mov
inc
jnp
ljmp
mov
or
adc
fiadds
ds
clc
dec
ss
call
add
pop
mov
xor
std
adc
out
rorb
cmc
mov
jno
or
xlat
xor
cmp
fcoml
xchg
fbld
popa
hlt
or
jmp
sti
push
test
sbb
xor
push
dec
mov
sbb
sub
mov
aas
ficoms
jns
jns
stc
mov
xorb
push
push
xor
xor
outsl
dec
loope
loope
xchg
or
decl
cmpl
mov
out
test
fdivrl
pop
mov
fadds
xchg
xchg
mov
mov
stos
push
int3
pushf
test
lret
and
mov
aam
add
out
xor
shll
in
rorb
add
ljmp
insl
xor
xchg
lahf
add
add
pop
lret
fs
mov
shll
pop
xchg
jae
add
cld
inc
in
dec
and
movsb
jmp
lea
rcl
and
dec
call
adc
pop
pop
mov
pusha
push
lahf
int
out
add
jb
test
fnstsw
mov
pop
mov
aaa
pop
xor
cmp
fbld
sub
add
es
into
loopne
cmc
cmp
test
cmpsb
lods
fsubs
lock
cmp
sub
mov
in
mov
add
fidivl
and
shll
clc
lret
lea
sub
fldcw
test
and
pop
jo
enter
sub
sub
cli
xchg
cwtl
mov
je
and
mov
pop
jge
push
shr
ja
jo
into
loopne
movhps
xchg
hlt
add
jae
push
xchg
cmp
sbb
push
mov
test
movsb
inc
mov
xor
pop
inc
ja
test
icebp
mov
iret
outsl
jge
cld
add
out
cmp
mov
xchg
adc
inc
jle
jbe
lock
sub
mov
lcall
insb
xchg
daa
stos
mov
mov
xchg
mov
das
mov
negl
test
jg
jp
adc
xchg
cmp
jecxz
jl
xchg
std
insl
xchg
dec
xchg
repz
into
push
xchg
xchg
mov
inc
repnz
add
sub
nop
stos
arpl
addl
inc
push
ret
xchg
int3
insl
push
mov
or
fcomps
lods
rcl
push
sub
in
loopne
imul
mov
jle
xor
ljmp
add
jecxz
repnz
pop
rorl
mov
fnstcw
add
inc
inc
mov
cmp
jo
push
out
push
mov
cli
sub
insl
cmp
push
adc
mov
leave
pop
fcoml
mov
lock
inc
sbb
push
clc
or
imul
lock
sub
es
mov
add
das
xor
jae
xchg
ds
cmpsb
push
xor
pop
mov
loop
dec
leave
mov
inc
mull
push
pop
mov
into
jmp
jae
aaa
lds
jnp
pop
cli
dec
repnz
or
jl
inc
mov
xor
cmp
or
fisttpl
mov
les
lret
scas
sbb
xor
sub
mov
and
adc
push
movsl
or
xchg
bnd
into
jae
or
jg
jno
sbb
mov
gs
test
test
out
iret
out
xchg
out
push
mov
lds
cmp
add
mov
ror
xchg
cli
mov
cmpsb
add
push
push
pop
pushf
das
dec
sarb
adc
push
adc
sub
outsl
lods
dec
jge
sti
mov
pusha
fadds
jbe
mov
out
subb
rcrl
inc
aad
xsaveopt
mov
jle
mov
jl
pop
sbb
dec
dec
mov
sahf
cmp
cmp
imul
mov
push
dec
jg
and
jl
pop
pusha
pop
aas
test
aas
icebp
mov
pop
test
nop
bound
inc
add
ljmp
sub
shlb
or
inc
scas
mov
adc
lret
lcall
dec
xchg
call
pop
mov
mov
cltd
dec
or
jp
nop
adc
inc
lock
punpckldq
pop
pop
lea
stos
adc
jp
repnz
iret
stos
cmp
jle
mov
push
or
cmc
les
lret
mov
push
jne
pop
popf
pop
pop
push
clc
jne
adc
outsl
xor
mov
or
insl
adc
mov
out
fldcw
mov
mov
inc
in
test
je
pop
mov
dec
sbb
xchg
sub
mov
imul
xor
add
xchg
xchg
adc
jne
call
into
nop/reserved
jne
out
icebp
clts
xchg
jl
jbe
sbb
sbb
mulb
std
fnsave
sub
js
or
repnz
sbb
movups
lret
cmp
pop
sub
dec
add
push
pushf
pop
push
push
xchg
cmp
and
sbb
jno
jno
xor
or
orl
sbb
sub
rol
inc
js
repnz
cltd
in
dec
arpl
mov
pop
xchg
les
fld
subl
or
adc
xchg
ljmp
push
pop
ja
mov
or
lahf
fcomi
push
dec
jns
stos
or
mov
mov
outsb
dec
ficomps
std
dec
test
je
dec
cld
repz
out
sbb
or
mov
mov
sbb
iret
ljmp
sub
outsb
shl
inc
mov
xchg
jne
mov
fistpll
outsb
mov
dec
imul
leave
jae
rol
add
adc
outsl
imul
mov
outsb
mov
lods
add
jno
and
cld
rcrb
dec
push
leave
idivl
lock
xor
bound
aaa
mov
icebp
mov
fcompl
in
js
sub
push
sbb
sub
idivb
dec
cmpsl
fimuls
xchg
mov
ja
cmp
out
add
clc
cmp
xor
pushf
ror
movsb
add
outsb
mov
add
cmpsl
xchg
dec
mov
in
test
mov
jecxz
push
add
fs
sub
stos
pop
xchg
sub
ljmp
add
inc
adc
cwtl
shll
jl
scas
icebp
nop
shl
loope
xor
push
adc
lock
stos
fildll
cmp
cmpl
xchg
lods
orl
and
cmp
lods
mov
outsb
pop
outsl
scas
sbb
into
mov
je,pt
lock
lods
int
dec
sbb
lock
cmp
lods
in
data16
cmp
push
sbb
cmp
push
lods
or
es
mov
sbb
dec
lds
and
ljmp
out
jmp
data16
mov
mov
lds
push
pop
jo
and
fimull
rorb
sahf
popf
jmp
lcall
daa
popa
mull
dec
popf
sub
adc
test
adc
push
push
jge
push
test
and
es
icebp
pop
movl
int
push
sub
fs
scas
scas
pusha
mov
jmp
xchg
cmp
mov
sbb
fcoms
out
mov
pop
imul
mov
outsl
mov
lds
pop
test
insb
mov
and
pop
pushf
bound
repz
cmp
dec
xchg
mov
lods
test
dec
pop
stos
test
xor
jnp
cmp
shll
rcl
jo
xor
sbb
jge
into
push
jp
mov
dec
add
inc
adc
sti
movb
test
divb
dec
dec
mov
movsb
xrelease
jp
push
jb
lea
cmp
mov
sub
dec
ljmp
ljmp
mov
adc
aam
lahf
mov
xchg
mov
jge
xchg
lret
sbb
push
add
dec
sbb
insl
pop
mov
sub
clc
popa
xor
daa
insl
pusha
push
xor
mov
inc
xor
pop
addb
insb
lret
call
mov
mov
les
js
movsl
popa
cwtl
shlb
adc
jb
arpl
aam
test
jb
arpl
push
pop
and
pop
mov
popa
mov
in
cltd
xor
cli
lret
rorb
sub
adc
imul
stos
std
push
addr16
inc
sub
fcompl
pop
negb
dec
inc
xor
or
stos
sub
pusha
leave
in
fs
xchg
repnz
lea
pop
mov
sbb
sahf
xlat
sbb
je
xchg
pop
push
xor
cmp
and
gs
pop
push
sbb
push
push
adc
sbb
mov
stos
sahf
sub
and
pop
jno
inc
lcall
aam
jno
pop
add
popa
cld
jp
adc
jmp
push
inc
xchg
pusha
add
addl
lret
and
cmc
daa
jbe
add
jne
xchg
shrl
push
mov
lret
or
dec
sbbl
push
cli
test
sahf
inc
addps
lods
push
out
push
test
xchg
add
out
mov
pusha
bound
dec
inc
add
jmp
lahf
xchg
jle
cmpsb
inc
imul
in
test
dec
lods
data16
int3
dec
rcr
dec
gs
and
xchg
adc
sti
fisubl
xchg
xlat
out
jg
xchg
sbb
jecxz
xor
cmp
and
dec
pop
out
inc
std
ret
pop
in
inc
pop
xor
aam
xchg
orl
das
enter
inc
imull
jne
fincstp
lahf
mov
shrl
xchg
fcoml
xor
and
jb
push
sub
cmp
cld
xchg
mov
add
sbb
mov
clc
stc
mov
mov
xchg
out
fwait
cs
push
jmp
stos
insl
pusha
rorl
mov
mov
jecxz
divl
pop
mov
mov
enter
ss
popf
inc
dec
push
cmp
mov
xlat
cmp
inc
jge
ret
pusha
stos
andl
dec
cmc
add
int
inc
add
xchg
cld
lahf
sbb
pop
xchg
mov
xchg
inc
das
xor
rcrl
lret
fidivs
jno
int3
in
or
push
xchg
sbb
lds
outsb
clc
push
subl
stos
mov
adc
fmull
bound
dec
mov
addr16
dec
jle
mov
mov
sahf
insl
mov
pushf
loope
fisttpll
int
xchg
enter
inc
pop
inc
imul
mov
jnp
jns
mov
mov
or
mov
and
shl
jge
jg
pop
lods
orl
cli
sahf
push
mov
loopne
andl
dec
pop
cmc
mov
jge
add
enter
xor
cltd
sbb
xor
imul
dec
fisttps
insb
fsts
outsb
daa
in
cvtdq2ps
insb
jae
out
mov
add
inc
imul
add
fwait
movsl
pop
imul
shl
xchg
das
negl
jmp
div
mov
call
sub
push
call
in
loopne
cmpsl
jg
sub
iret
ficompl
test
in
mov
int3
test
lret
daa
mov
cmpsb
xor
xor
pop
pushf
push
pop
loop
push
add
lods
jo
lods
icebp
pop
or
clc
mov
fldcw
sbb
in
dec
clc
sub
jbe
push
inc
rclb
enter
fsubs
jl
mov
cli
pop
add
rolb
sub
pop
in
dec
bswap
movsb
movsb
lahf
pop
insl
sar
fsubr
and
xchg
mov
xor
add
push
mov
jp
push
add
iret
mov
jns
and
jbe
xorb
and
test
jp
adc
adc
push
rcll
insb
pop
pop
dec
pop
imul
lea
stos
xchg
pop
fnstsw
dec
adc
outsb
xchg
lret
test
lret
xchg
fnstsw
and
mov
jmp
or
push
adc
sbb
andl
fmull
das
in
and
inc
fsubrs
out
push
jg
pop
movsl
inc
jle
jl
adcl
xchg
outsl
cmp
xchg
and
sub
pop
lret
iret
mov
mov
add
mov
loope
and
mov
mov
cmpl
call
adc
fwait
test
mov
movsb
ss
not
sub
and
or
jae
adc
xor
cmp
xor
jno
push
mov
xchg
cs
ucomiss
jo
inc
push
test
hlt
dec
scas
loop
pop
aad
call
and
cs
jo
jns
cmp
adc
pop
mov
xchg
jl
pop
pop
xchg
loope
aaa
push
pop
push
pinsrw
sbbb
jge
add
jne
sti
hlt
mov
in
insb
addr16
mov
push
pushf
mov
and
movsl
inc
frstor
pop
push
movsl
addr16
out
pop
mov
xchg
mov
xor
dec
ret
ja
popa
hlt
sub
repnz
xchg
shl
sub
push
xor
insb
nop
pop
loop
jae
cmp
or
jns
sbb
push
cmp
mov
das
inc
dec
dec
and
popa
mov
add
subl
xchg
mov
cmpsb
mov
fwait
pushf
pushf
lahf
ljmp
dec
cmp
popa
mov
jnp
push
sbb
or
mov
pop
sti
mov
mov
ljmp
test
ja
cmc
add
aam
lahf
filds
pop
lret
popf
cmpsl
lock
cmpsl
xor
pop
mov
add
add
jae
mov
bound
mov
cld
test
aas
jno
adc
sub
pop
loope
or
mov
fs
repnz
nop
insb
lea
js
mov
fcompl
imul
xor
adc
js
jns
pop
call
out
lret
clc
inc
sahf
cmp
pop
mov
dec
pop
call
xchg
or
fcoml
stc
ljmp
nop
rolb
daa
das
mov
pop
xor
mov
orl
push
mov
pushl
popf
pop
mov
cli
cmpsl
pop
outsb
int
loop
cld
leave
cwtl
sbb
das
aaa
sub
jo
pop
lea
insl
ljmp
xchg
sub
jge
lahf
pop
xor
ljmp
ret
cmpsl
enter
repnz
pop
push
hlt
xchg
daa
adc
xor
ja
push
loop
cmc
adc
leave
ljmp
jecxz
addr16
dec
inc
mov
fdivs
out
jae
lds
and
lock
fcmovbe
jb
xchg
xorl
nop
call
push
fs
jne
sub
push
aas
push
jecxz
mov
loopne
cs
push
xchg
xchg
addr16
imul
stos
mov
repz
test
mov
adc
cmp
sub
out
dec
push
jnp
cmp
inc
frstor
jle
jmp
sub
add
or
ss
xlat
subl
mov
rcr
jmp
mov
int
and
rorl
pop
push
ljmp
fstp
cmp
inc
mov
aas
and
out
cmp
mov
scas
xchg
pop
fdivrp
dec
add
sub
mov
add
repz
mov
mov
xchg
sbb
les
and
test
mov
add
jl
fldenv
in
lods
lock
fldenv
jno
jae
lcall
ljmp
loop
adc
mov
jp
int3
and
or
push
mov
out
dec
dec
lcall
sub
pushf
je
sahf
loope
pop
cmp
imul
add
jno
adc
cwtl
cli
jo
sub
jg
inc
pop
sub
cmp
adc
bound
pop
pop
movsb
adc
pop
pop
in
and
mov
inc
rorl
sahf
cs
xchg
in
mov
add
cmpsb
add
enter
insl
popa
mov
jl
dec
fsub
insl
pop
mov
mov
mov
cmpsl
inc
xchg
sarl
adc
adc
std
dec
mov
xchg
mov
test
pop
dec
lret
insl
mov
fcoml
lods
jne
sub
cmc
popa
jae
lret
out
mov
mov
aas
stos
mov
inc
sub
jo
inc
int3
jle
jb
sbbl
jbe
cmp
xor
jns
cwtl
mov
lahf
sub
sbb
ret
adc
dec
sarl
xchg
stc
add
pushf
jmp
popa
popf
or
adc
adc
cmp
push
pop
fldl
or
lret
pop
lds
xchg
adc
push
xor
bound
jae
mov
fs
jno
push
inc
lds
jmp
loop
jp
inc
fists
iret
adc
cmpsb
out
pop
adc
and
pop
ljmp
jbe
xchg
out
push
fnstsw
gs
pop
and
xchg
std
fidivl
xor
rolb
es
add
pop
orb
cmp
dec
mov
pusha
clc
lahf
les
shl
sub
jmp
sub
fdivs
fdivs
inc
adc
addr16
cld
jg
mov
mov
cmp
lahf
xor
mov
addr16
lahf
and
pop
pop
and
sbb
ret
mov
sbb
xchg
hlt
shrl
sahf
pushf
cli
fcmove
repnz
or
inc
mov
bound
pop
daa
stos
jnp
jmp
pop
in
push
aaa
sbb
sbb
or
add
or
pop
lods
stos
sbb
dec
sbb
adc
and
nop
cmpl
lods
inc
cs
xchg
repnz
mov
pop
cwtl
pop
out
xchg
or
mov
enter
lds
pushf
jns
dec
into
imul
je
cli
push
in
inc
pop
cmp
leave
into
cltd
subl
sar
xor
mov
rcrb
push
push
lret
fs
sub
sub
adc
push
pop
dec
std
mov
jns
test
lcall
jp
add
xchg
cmp
pop
lds
aam
sarl
mov
scas
xchg
pop
add
out
insl
in
push
repnz
mov
rclb
cli
lds
test
mov
adc
xor
jno
xchg
jl
push
repnz
fnstsw
mov
mov
lcall
scas
xor
inc
lods
push
mov
mov
add
stos
negl
adc
mov
pop
repz
dec
outsb
push
mov
mov
movsb
inc
les
and
test
int3
xchg
add
cmpsl
out
or
push
lret
loope
push
adc
cwtl
mov
cwtl
addr16
hlt
lock
sub
shrl
xchg
mov
jne
or
mov
pop
clc
emms
pusha
cltd
inc
aas
inc
mov
push
shlb
loopne
dec
sub
push
push
out
roll
es
push
cmp
add
arpl
adc
mov
sarl
aad
out
stc
push
mov
dec
adc
push
std
or
push
pop
bound
mov
outsl
push
data16
sub
ljmp
cmp
lds
and
movsb
mov
rcrb
mov
roll
jge
jno
xchg
jmp
addr16
xor
adc
push
xlat
push
push
push
hlt
lcall
adc
cltd
sarl
push
leave
mov
adcl
imul
orl
mov
repnz
loope
aas
movsl
push
pop
loopne
inc
lods
scas
add
push
test
pop
ljmp
insb
fdivs
and
and
pop
fadds
dec
pop
sub
ret
popa
lds
sbb
subb
scas
cmp
arpl
and
sub
data16
mov
movl
stc
lods
mov
inc
mov
popf
jg
cmp
push
stos
test
xor
dec
sub
xchg
fisttps
pop
cmc
int3
sbb
fimull
mov
xchg
in
push
ljmp
adc
mov
inc
repz
cwtl
icebp
loop
gs
fidivrl
pop
mov
shrl
leave
xchg
or
xchg
or
rcl
arpl
add
jl
pop
push
leave
push
sbb
push
int
inc
adc
mov
scas
push
mov
rorb
test
pop
loop
in
pop
xor
popa
push
jge
lret
jg
movsl
fwait
inc
loopne
pop
dec
xchg
and
mov
push
sub
arpl
call
ret
test
pusha
xlat
push
xor
adc
mov
push
cmc
push
jnp
aam
cmp
push
pop
mov
imul
add
pop
dec
mov
inc
icebp
pop
dec
enter
out
or
adc
sti
push
lods
rorb
xor
or
bound
test
ljmp
adc
or
fstps
pop
lahf
xlat
jl
cmp
push
push
add
cmp
add
push
dec
outsb
dec
str
jns
cs
popf
inc
or
jns
mov
shr
mov
es
mov
mov
mov
mov
loopne
inc
lea
push
dec
and
insb
fstpl
lods
dec
push
fistl
inc
push
and
loopne
data16
sbb
dec
sub
and
outsl
mov
addr16
mov
sbb
mov
or
xor
push
not
mov
dec
subl
fldt
jmp
xchg
or
cmp
int3
addr16
hlt
jg
cwtl
cwtl
xchg
sbb
jno
and
and
ja
xorl
test
fwait
popf
mov
push
out
and
cmpsl
andb
cld
jle
cmp
lods
scas
out
jns
cltd
mov
aad
xchg
addr16
mov
mov
xchg
fidivrl
popf
lcall
xchg
rolb
jmp
adc
decl
outsl
sar
xor
inc
pop
nop
into
mov
xor
xchg
jg
movsb
push
mov
jnp
cltd
test
cld
outsl
repz
nop
das
mov
test
fcoms
test
fadd
dec
sub
jbe
std
mov
sbb
arpl
pop
insl
push
mov
pop
sub
and
lret
hlt
fcomps
stc
pusha
jb
dec
aam
mov
aas
int3
dec
lods
mov
mov
fbstp
sbb
stos
stc
dec
or
sbb
push
xor
mov
mov
inc
push
loope
mov
push
aad
dec
or
cmp
lret
cmp
dec
inc
push
js
movsb
mov
vmovaps
jmp
subl
inc
sbb
cwtl
or
sbb
add
insl
xchg
mov
repnz
adc
cltd
cmpsl
pop
enter
mov
mov
mov
outsb
ret
mov
push
in
push
ret
cmp
out
mov
push
inc
pop
pop
int3
push
push
daa
mov
sbb
xor
push
and
shrl
lea
mov
in
cmc
mov
clc
je
gs
movsb
je
outsb
mov
adc
pop
push
cmp
lcall
fdivs
test
dec
test
mov
fisubl
add
dec
nop
xchg
xchg
xchg
fisubs
pushf
cld
xchg
jae
inc
cs
pop
jmp
push
sub
out
cmp
inc
ja
and
dec
mov
lahf
call
cmp
rorl
cmc
ljmp
jb
cld
es
ljmp
rcr
xchg
jge
and
js
loopne
push
in
cmp
enter
cltd
imull
bound
sub
jge
cs
xor
addl
in
cmp
xor
cmpsl
add
jecxz
jno
ret
je
popa
jmp
outsl
mov
cli
or
fisubl
or
orb
lcall
mov
pop
dec
cmp
dec
fistps
jmp
fs
repz
rclb
test
gs
mov
push
negl
push
inc
xor
xor
dec
jmp
add
push
movsl
insl
loope
and
sbb
jo
mov
xchg
sub
mov
lods
lds
mov
mov
cmc
vmwrite
call
dec
and
push
inc
shlb
lock
xchg
xchg
loope
shll
mov
jmp
mov
push
mov
push
jbe
pop
hlt
fbld
jae
lret
in
lea
dec
push
add
sbbl
xor
cmpsl
arpl
data16
call
lret
push
into
iret
jo
jecxz
leave
mov
jecxz
xchg
add
in
repz
add
clc
testb
pop
jne
sbb
cmc
gs
jne
jmp
iretw
cwtl
xchg
out
shll
mov
mov
int3
mov
mov
adc
out
ret
shll
or
add
out
xor
pop
out
xchg
shlb
loop
mov
sub
inc
enter
jo
push
mov
mov
and
sub
jns
cli
mov
sub
mov
test
data16
cld
cmp
cmp
push
mov
in
dec
and
and
cmpsl
aas
stos
mov
in
pop
clc
xor
int
pop
xchg
adc
mov
dec
pop
fimull
push
je
gs
cs
mov
enter
fcoms
out
push
mov
mov
push
push
ja
sti
test
mov
adc
popl
mov
insl
cli
mov
leave
repz
push
pop
sbb
push
repz
mov
loope
rcrb
stos
and
loopne
pop
dec
mov
arpl
sbb
test
xchg
out
test
scas
notl
and
dec
sub
mov
dec
daa
lahf
mov
lock
sub
cmp
test
insl
cmp
int
icebp
negl
adc
mov
sarl
enter
int3
mov
pop
stos
xchg
fwait
mov
xor
adc
add
pop
data16
xchg
lret
adc
mov
mov
mov
outsb
nop
imul
lea
or
mov
mov
cmp
or
push
lret
cmpsl
fmul
mov
jne
or
pop
sbb
and
iret
in
and
outsb
jo
and
jecxz
pusha
and
xchg
adc
add
outsl
loope
mov
iret
mov
rcrb
sahf
in
mov
cmpsl
jne
mov
cmp
xor
leave
out
inc
mov
enter
pop
xchg
push
sbb
adc
out
inc
pop
lret
test
dec
pop
aam
adc
dec
int
int
xor
inc
fisubl
pop
imul
adc
or
inc
cmp
mov
ds
jmp
test
mov
mov
mov
and
adc
inc
aaa
xor
sub
xor
push
dec
aas
mov
int3
pop
rcr
and
jo
loopne
enter
xchg
xchg
inc
adc
jno
pop
jns
out
lahf
lfs
fsubrl
ror
xchg
or
test
mov
aam
xchg
mov
xchg
or
fdivrs
cmpsl
aad
lahf
lahf
push
adc
clc
cmp
js
fmulp
into
sbb
mov
push
cmp
fbld
mov
shr
pop
dec
lods
jg
jmp
iret
mov
pop
jb
hlt
or
sub
dec
test
pop
enter
pop
push
mov
pop
jg
xor
inc
mov
out
sbb
jnp
stc
push
jnp
xchg
mov
mov
pop
fisubl
fcom
icebp
addr16
mov
push
fwait
and
into
or
jnp
push
ljmp
stc
mov
lock
jnp
xchg
les
xchg
addl
lock
ljmp
cmp
jle
fisubrl
out
push
shlb
sbb
scas
in
and
aas
cmpsl
lcall
xchg
mov
imul
cmpsl
test
pushf
cli
sbb
lds
cmp
xchg
add
sub
je
inc
stos
pop
lcall
mov
mov
pop
push
fs
lret
inc
sub
jg
mov
cmpl
cltd
xor
jne
push
pusha
sbb
sbb
in
jmp
add
lods
imul
mov
leave
cld
cmp
push
mov
jbe
hlt
fwait
rorl
and
sub
dec
int3
in
in
in
mov
lods
push
jno
into
push
into
roll
mov
xor
lods
repz
ja
call
sarb
shll
mov
push
inc
dec
xchg
pop
dec
jmp
bound
push
aaa
push
push
test
add
shr
xor
cmc
add
stos
mov
das
mov
jae
bnd
leave
mov
and
mov
dec
fwait
out
cmp
or
mov
mov
inc
dec
push
inc
enter
lahf
adc
call
mov
aaa
push
repz
bnd
imul
mov
add
adc
cmp
pushl
xchg
cmp
sub
cmp
push
daa
add
fcompl
xor
push
pop
dec
adc
clc
pop
push
sbb
fsts
dec
pop
icebp
insb
and
pop
gs
mov
push
mov
popa
in
inc
jmp
dec
inc
lret
mov
push
and
sbb
scas
addr16
inc
mov
xorb
lods
jle
cmpsl
and
xor
fldenv
ss
movsl
add
push
lds
lcall
movsl
adc
pop
fmulp
pop
pop
pop
xchg
adc
xchg
mov
jnp
jb
xchg
and
idivb
inc
inc
mov
xchg
into
sub
in
fists
stos
and
mov
out
xchg
sbbl
cmpsb
cmp
xchg
jne
fwait
add
mov
bound
xchg
imul
sub
xchg
jg
push
adc
outsb
in
ret
out
sti
adc
jge
sbb
add
and
aad
jae
stos
mov
or
cmpsb
shrl
int
inc
stc
leave
xchg
imul
push
mov
cmp
pop
sub
ficomps
xchg
mov
xor
mov
stos
mov
cmp
enter
sbb
push
test
mov
pop
lcall
loope
enter
fidivrs
adc
or
mov
in
pop
push
inc
mov
inc
in
movsl
dec
lret
js
push
xchg
inc
cld
xor
std
adc
jbe
adc
mov
pop
cmpl
vpmuludq
div
les
into
ljmp
fwait
hlt
data16
or
je
rorl
mov
jecxz
adc
punpcklbw
ss
addr16
add
jmp
sbb
les
add
cmp
and
or
mov
ret
mov
or
das
and
or
gs
jno
and
fmul
lods
cmpsb
push
data16
es
push
push
xchg
pop
mov
mov
mov
jge
xchg
jae
out
and
jns
sahf
test
lahf
jno
leave
popf
add
shl
out
cli
stos
add
inc
inc
ja
cwtl
mov
lods
and
mov
jno
mov
outsl
sti
and
or
inc
or
rol
sbb
sub
push
decl
lock
loope
and
adc
cli
mulb
xor
jg
rcl
mov
aas
mov
insl
pop
js
insl
xchg
out
inc
dec
add
xchg
jmp
xchg
cmp
xchg
repz
int3
mov
xchg
loop
mov
push
add
xchg
xorb
push
add
cmpsb
jb
in
hlt
xchg
sub
cltd
aam
mov
sbb
dec
mov
out
sbbl
sti
pop
ds
rclb
dec
das
push
mov
sbb
aad
addr16
lret
inc
mov
or
mov
mov
mov
cpuid
pop
scas
adc
sbb
xchg
push
lret
xor
test
pop
inc
push
addb
dec
add
mov
das
in
mov
adc
sbbb
lret
aaa
mov
addr16
pop
cltd
cmp
mov
cmp
in
out
or
cwtl
sbb
pop
cmp
sbb
mov
sub
xchg
ss
insl
leave
jge
mov
push
cmpsb
repz
push
imul
sub
mov
je
sbb
stos
adc
xor
rcrb
inc
and
sar
pmulhuw
push
cmp
and
xlat
cmc
add
push
les
push
or
sahf
adc
mov
xorb
push
push
arpl
addr16
push
lock
ret
sti
adc
add
xchg
sub
repnz
xchg
sub
push
push
xchg
pusha
vfrczsd
dec
ljmp
cmp
mov
lds
cwtl
hlt
popa
lea
mov
pop
lds
imul
and
push
arpl
lret
in
or
adc
inc
loop
xadd
and
rcrl
gs
dec
shr
jb
cmc
ficoml
out
out
push
test
mov
aas
pop
mov
ds
rorl
popf
fstl
mov
out
sbb
xchg
push
push
sub
cmp
inc
aad
fbld
add
mov
xor
mov
aaa
dec
fwait
xorb
mov
lds
inc
lds
leave
adc
ret
mov
sub
sbb
push
mov
push
sub
fstpl
sub
push
fcomps
push
mov
lea
mov
jno
inc
pop
popa
popf
cmp
mov
xor
jbe
cld
mov
inc
test
out
lcall
cld
fs
inc
filds
shll
add
int3
pop
addl
mov
push
push
sbb
mov
jmp
push
rclb
cli
jae
cmp
mov
divb
mov
inc
ret
mov
rcrb
addb
sub
jecxz
mov
lods
add
xor
mov
jl
and
cmc
cs
das
popa
sbb
inc
inc
pop
inc
hlt
lret
repnz
aaa
or
sbb
push
mov
inc
add
sub
fmulp
subb
jbe
inc
jmp
jne
cs
mov
jmp
sub
or
or
jbe
jp
scas
pop
add
add
ret
ja
mov
dec
lods
xchg
stos
imul
push
pop
mov
xor
mov
pusha
fmul
mov
mov
adc
inc
and
sub
or
push
xchg
pop
in
inc
push
loope
and
daa
and
iret
inc
jg
add
fs
mov
dec
cmp
sbb
or
push
dec
clc
dec
mov
inc
pop
mov
and
loopne
mov
int
lods
inc
rorb
and
or
mov
push
fisttps
into
jbe
fs
iret
test
and
sbb
sbb
mov
adcb
std
sbb
outsb
aaa
or
insl
lock
pop
cld
dec
inc
js
aas
mov
dec
mov
out
push
mov
push
push
xchg
push
in
inc
mov
imul
or
mov
pop
shrl
orl
cli
into
insl
mov
lahf
fucom
inc
xor
imul
outsl
xchg
jb
adc
ljmp
fisttpll
mov
or
sti
mov
es
imul
test
out
jp
pop
xor
clc
insl
fnstcw
pop
adc
inc
sbb
push
mov
inc
sub
aam
push
jns
imul
cli
inc
push
mov
imul
pushf
jnp
cwtl
in
sub
js
mov
inc
out
mov
or
jecxz
aas
push
mov
fs
int3
jg
jae
fsub
inc
push
fwait
iret
xor
out
popa
inc
enter
xlat
pop
push
sub
test
push
adc
sahf
add
leave
out
arpl
rcr
sub
pop
sub
icebp
mov
stos
push
ljmp
dec
out
sub
cld
jae
pop
mov
sarl
mov
add
clc
inc
pop
mov
jno
adc
lock
sbb
fidivl
xor
push
mov
out
mov
lock
mov
in
fisttpl
pop
mov
mov
dec
pop
push
in
jns
adc
out
add
fiaddl
andb
xor
jne
shlb
inc
daa
negl
and
sbb
fs
and
cmp
cmp
push
addr16
out
cmc
jbe
pop
mov
mov
add
test
adc
adc
iret
xchg
clc
push
adc
pushf
push
nop
std
mov
int3
imul
cmp
mov
inc
rclb
daa
jbe
xchg
dec
adc
xor
cmpsb
sbb
fists
cmp
outsl
cmp
dec
xor
sub
sub
aaa
insl
fiaddl
mov
mov
bound
inc
insb
pushf
icebp
movsl
mov
mov
jecxz
adc
out
pop
push
ja
mov
cmp
sub
lcall
xchg
in
cmp
lahf
sarb
mov
icebp
arpl
inc
lods
pusha
sub
stos
push
inc
jmp
push
icebp
lret
xor
adc
jns
lret
aas
sub
xchg
repnz
jl
inc
nop
loop
cmpsb
aaa
int
mov
enter
wbinvd
out
mov
mov
pop
test
xchg
jge
loope
push
push
mov
sub
sub
loope
mov
subl
jbe
cmp
pop
pusha
orb
fsub
jecxz
lods
jo
and
test
fcompl
jnp
incb
gs
insb
sbb
push
mov
in
push
dec
inc
adc
xor
mov
ss
cld
xor
pop
sahf
cmp
jmp
shlb
data16
inc
and
inc
test
pop
sahf
xor
les
jae
popa
sub
cld
lea
jae
cmc
dec
mov
in
imul
scas
jecxz
cld
jno
pushf
xchg
add
aam
cltd
push
mov
mov
xchg
movsl
add
push
xor
cmp
cltd
cmovl
jl
adc
loopne
mov
mov
cmp
cmp
repnz
test
fstl
cmp
cltd
push
ss
int3
pusha
fadds
shl
pop
xlat
or
add
push
inc
push
push
xchg
lahf
insb
dec
mov
enter
inc
xchg
dec
mov
stos
adc
stc
pop
mov
aaa
pop
add
dec
dec
sub
cmp
imul
into
or
cmp
sub
sub
jle
pop
in
movl
jbe
sbb
movsb
out
push
fwait
sbb
stos
jnp
ja
jno
sbb
clc
out
pop
scas
xor
lahf
rol
or
addr16
les
cmp
inc
clc
mov
lods
lcall
mov
ss
imul
je
stc
into
lret
aam
leave
and
cmpsl
jno
pop
jg
out
das
jns
xchg
lcall
std
cmpsl
popf
inc
mov
pop
data16
jmp
movsb
aam
lods
imul
jmp
addr16
mov
das
mov
mov
stos
aad
loope
test
popf
push
jae
jo
inc
cmp
dec
cld
pop
scas
repnz
gs
mov
sub
ret
mov
fildll
push
in
xchg
fists
cwtl
sub
jnp
pop
mov
push
mov
or
xorb
repz
add
into
adc
xchg
sbb
out
mov
xor
xchg
stc
hlt
dec
test
cmpsb
or
call
popf
hlt
xchg
subb
xchg
sarb
gs
adc
std
sbb
les
int3
imul
imul
into
movsl
mov
filds
mov
orl
sarl
mov
or
loop
add
or
push
pop
orl
ret
js
enter
rol
dec
cs
iret
mov
pop
notl
xchg
add
and
je
rcl
mov
sub
push
frstor
xor
out
enter
in
xchg
outsb
mov
in
dec
cmp
subb
xchg
or
cmp
push
mov
adcl
mov
lds
arpl
inc
and
mov
jbe
push
popf
xchg
jne
pop
cs
sub
repnz
dec
cmp
lcall
inc
xchg
enter
sbbl
lahf
jle
mov
popa
sbb
lods
aas
push
mov
cmp
in
or
vminpd
cs
idivl
or
adc
or
mov
cld
inc
imul
enter
mov
test
or
aam
cmp
add
dec
bound
enter
shrl
and
and
mov
mov
das
mov
js
pop
jne
push
pop
fs
mov
xor
loope
imul
mov
bound
test
pop
cmp
movsl
clc
push
cmp
out
imull
push
outsl
mov
lods
scas
mov
mov
mov
pop
mov
ss
jmp
push
leave
mov
inc
or
mov
push
xor
mov
and
adc
sbb
icebp
sbb
sbb
mov
or
ljmp
mov
inc
sub
movsl
cmpsl
push
push
sti
nop
cmp
dec
mov
sahf
mov
pop
inc
and
inc
adc
ja
push
xchg
jbe
sbb
fwait
push
sub
sub
or
andb
outsl
dec
mov
pop
jmp
pushf
test
push
or
mov
and
lea
call
xchg
jae
sub
fldl
push
adc
int3
sub
xor
cmp
fcom
xor
out
xchg
inc
push
repz
test
movsb
mov
lock
jmp
rcrb
out
jo
inc
iret
jmp
aas
jb
jg
mov
ret
fstpl
jmp
jns
mov
pusha
sbb
lret
xor
push
and
mov
icebp
pop
and
cltd
and
push
xor
xchg
data16
loopne
shlb
or
pusha
and
fdivl
movsl
cmp
lret
dec
xor
call
aas
sbb
hlt
lock
pop
and
adc
cmpb
adc
subb
lea
mov
push
xchg
mov
sarb
or
jecxz
cmpsb
mov
push
xlat
jle
fldenv
popl
stos
out
out
lods
mov
outsb
pop
mov
hlt
mov
pop
mov
jb
test
mov
adc
mov
sbb
sahf
dec
inc
mov
jmp
call
xor
scas
into
mov
inc
cwtl
xor
daa
jo
sub
test
jae
das
sbb
push
dec
ja
je
adc
xchg
icebp
dec
pusha
jns
pop
loope
cmc
or
mov
mov
aas
sbb
lea
enter
mov
loop
sub
movsl
lock
push
test
outsb
lock
arpl
or
pop
cld
pop
jmp
cli
jecxz
lcall
into
inc
sti
inc
fcomps
pop
stos
cmp
lds
inc
out
or
pop
pop
fwait
push
cltd
sahf
xor
sarb
out
add
out
nop
cmp
adcl
pop
repz
sub
cmpsl
insb
cmp
pop
or
call
cli
mov
popa
ret
clc
cltd
push
incl
push
mov
jecxz
js
adc
xor
push
fisubrs
or
sti
sub
xor
outsl
repz
mov
mov
or
push
or
loop
fcomp
enter
push
bound
jl
add
int3
cli
jne
push
daa
push
mov
es
lods
iret
jae
out
and
ret
aas
pop
outsb
faddl
jns
addr16
push
pushf
mov
xchg
in
dec
and
cmc
dec
aad
jmp
jl
xlat
fsubrs
and
add
lahf
mov
sarl
push
jb
fcomi
push
insl
mov
std
mov
mov
sbb
and
or
fwait
hlt
lret
sub
mov
rcll
movsl
cld
jg
aam
push
xchg
int
out
nop
or
sti
inc
sbb
push
add
ja
cmc
push
aad
loop
mov
add
out
addl
ret
js
outsl
mov
adc
cld
fwait
std
out
nop
inc
jno
cmc
stos
mov
and
lods
mov
rorb
int3
cmp
push
add
repz
outsb
dec
movsb
sbb
orl
add
inc
mov
mov
ss
jp
mov
bound
and
push
outsb
push
xchg
xchg
icebp
gs
jns
stos
nop
insb
jle
ret
not
jo
ret
clc
cltd
push
rcr
dec
jae
push
mov
icebp
sahf
jmp
mov
cld
pop
or
ja
sti
daa
mov
and
mov
outsb
xchg
xrelease
push
in
xabort
clc
and
dec
bound
dec
adc
hlt
pop
data16
sbb
dec
pop
lods
iret
daa
pop
roll
fsts
pop
push
lret
fisttpll
stos
cmp
add
inc
lds
and
mov
enter
rclb
and
push
mov
add
outsb
mov
sahf
cmpl
sbb
pop
jb
pop
or
jl
stos
jge
fwait
and
adc
or
or
jg
int3
dec
xor
fnstsw
fistps
out
mov
out
in
call
xchg
les
nop
sbb
lods
adc
or
pop
push
lahf
cmpsb
cmp
outsb
push
sub
push
mov
push
jno
or
pop
add
pop
ret
scas
xchg
les
sub
jns
test
sbb
mov
shll
dec
inc
push
and
negl
iret
je
xchg
or
rcrb
popa
push
mov
push
scas
push
jo
dec
fs
test
and
icebp
push
ss
lahf
das
push
cli
fcmovne
pop
add
icebp
ret
mov
not
mov
les
fldcw
push
xchg
outsl
mov
outsb
jns
daa
test
je
loope
popa
ret
dec
lods
ljmp
out
inc
add
jae
std
sbb
lcall
pop
std
cmp
push
insb
setns
in
cmp
and
lcall
scas
pop
jg
das
jmp
leave
push
pop
pop
mov
sub
mov
mov
add
adc
xchg
pop
iret
sbb
sub
mov
inc
and
or
pop
lds
push
leave
stos
cmp
loop
jle
fmull
and
subb
shll
jns
sbb
ljmp
xchg
out
ret
and
leave
adc
xlat
sarb
into
or
xchg
cmp
sahf
je
out
outsb
dec
dec
in
int3
dec
inc
add
addr16
idivb
aam
cmpsl
loope
popf
push
shrl
mov
cmp
movsb
repnz
cli
pop
mulb
sbb
or
stos
imul
push
int
mov
das
or
subl
cmc
shll
sbb
sti
sbb
addr16
dec
ss
pop
sbbl
push
scas
pop
hlt
or
fs
pop
sub
mov
pop
add
or
out
sbb
loopne
or
fucom
pop
adc
push
dec
loopne
testl
roll
xchg
movsl
jl
in
scas
sbb
fs
mov
sub
dec
sub
in
hlt
adc
lock
mov
push
popa
subb
ss
push
icebp
or
inc
inc
lcall
mov
jle
adc
or
mov
out
das
orb
inc
test
orb
ret
fistpl
xchg
sahf
push
mov
or
pop
mov
data16
cmp
mov
adc
shll
xor
fnstcw
mov
aas
arpl
mov
dec
popf
mov
js
mov
aad
cld
pop
bound
sub
jl
ret
mov
inc
and
sbb
outsb
cmp
sbb
dec
mov
stos
ljmp
loopne
pop
push
cmp
pop
das
leave
cmc
repz
sbbb
int
jmp
dec
jle
mov
and
push
xor
push
mov
xor
pop
xchg
stc
data16
icebp
push
xlat
imul
add
out
mov
movsl
mulb
or
push
sub
pop
mov
jnp
pop
dec
sbb
and
fnstcw
popf
leave
enter
in
gs
testb
sahf
sub
pushf
adc
shrl
ja
negl
aad
pop
leave
dec
ja
arpl
rcl
leave
pop
lcall
adc
or
into
inc
int3
xor
xor
or
sarl
cmpsb
sbb
mov
or
jp
and
lahf
je
inc
inc
pop
enter
xchg
cmp
fadd
aaa
test
xor
outsl
int3
pop
push
push
pop
sub
lods
cmp
and
into
test
mov
mov
xchg
mov
dec
adc
lahf
adcb
and
mov
js
ja
loope
fwait
push
add
loopne
cmp
push
in
arpl
jp
and
xchg
jb
mov
add
push
xchg
shr
mov
inc
xchg
pop
hlt
jp
bound
iret
xchg
mov
out
not
jb
push
int
fistps
push
xor
out
es
inc
testb
js
mov
push
ja
into
das
sbb
popa
fwait
inc
nop
adc
cltd
mov
jp
js
arpl
out
insl
dec
shr
inc
inc
add
adc
and
pop
js
jns
or
cltd
es
ret
jp
rcr
call
pop
fwait
dec
push
imul
dec
cmp
inc
xor
dec
push
roll
jp
out
inc
mov
push
inc
mov
pop
jns
clc
xchg
test
popa
mov
jns
pushf
jnp
xchg
jo
imul
shlb
inc
cwtl
mov
xchg
imul
pop
and
push
jl
shlb
sub
mov
sub
cmpsb
or
lods
mov
js
jmp
rcl
add
in
sarb
cs
lcall
sarb
push
pop
movsb
cmp
scas
xchg
in
add
scas
dec
mov
imul
xlat
rcl
ss
xor
jnp
outsl
test
iret
mov
imul
cli
inc
dec
or
inc
pushf
fiaddl
sahf
push
or
iret
or
or
out
ss
pop
inc
jne
pop
es
or
aam
loope
add
push
fidivrs
mov
fbstp
ss
adc
xchg
bound
and
les
clc
push
xor
and
mov
sbb
jno
imul
and
aaa
rorb
stos
sub
das
lret
sub
cmpsb
jecxz
lds
sbb
mov
add
lds
push
mov
icebp
push
pop
mov
pop
loop
in
roll
lret
push
outsl
inc
enter
lret
sbb
mov
enter
gs
cmpsl
sbb
sbb
mov
dec
xchg
inc
and
push
or
icebp
rolb
add
jecxz
lret
jle
or
inc
out
lods
lahf
sbb
std
cli
push
jno
mov
pushf
orl
ja
enter
push
inc
into
sbb
push
shl
pop
xchg
adc
adc
iret
pop
jo
popf
mov
test
adc
pop
rolb
lock
popa
ja
sub
test
daa
hlt
shll
sbb
cld
pop
push
aad
xchg
mov
sbb
dec
xor
add
mov
xor
iret
inc
out
mov
outsl
adc
and
ret
std
out
cmp
push
iret
push
dec
sbb
sbb
cmp
push
into
pop
add
lcall
fs
fstl
aam
int
and
push
mov
xchg
pop
cli
cmp
push
test
mov
jns
repnz
out
sbb
cmpsb
nop
xor
div
das
jne
xchg
mov
xchg
cwtl
fisttpl
hlt
mov
cmc
out
shrl
aam
mov
mov
iret
dec
xlat
cmp
pop
rcr
nop
adc
xlat
jle
xchg
mov
add
lock
push
pop
add
adc
insl
inc
mov
sub
shl
hlt
js
push
xchg
sbb
mov
inc
add
adc
push
ret
sbb
sarb
fisubl
add
sub
jp
xchg
divl
jo
out
mov
aas
xchg
cwtl
jmp
xor
mov
adc
or
rcll
int3
ss
cmp
mov
loop
xchg
jle
jne
cmp
repz
jno
arpl
pop
pushf
lock
and
in
mov
negl
jmp
outsb
stos
decb
scas
push
push
icebp
aad
push
nop
popf
jns
xor
dec
mov
punpckhbw
sub
test
clc
xor
idivl
lea
test
nop
loope
movsb
and
sub
ds
js
scas
fs
jg
fdivrs
push
xchg
ficoml
neg
lods
mov
pop
push
push
sbb
and
or
fiadds
pop
fcomi
cmp
daa
rclb
dec
xchg
stos
xor
mov
mov
pop
xor
push
cmpsb
inc
out
aaa
loop
imul
xchg
mov
lret
fdivs
mov
push
push
or
nop
mov
jbe
push
mov
enter
test
jmp
sar
lret
cmp
fsubr
sub
sbb
xchg
pop
stos
arpl
xor
xlat
int
mov
inc
and
push
aad
fidivs
lock
sub
jb
jecxz
call
cmpsb
dec
add
sbb
xchg
data16
data16
add
int
jb
mov
sbb
test
jg
ljmp
gs
addb
rorb
mov
fwait
sbb
adc
addr16
aam
add
pop
and
or
icebp
in
pop
adc
mov
mov
scas
or
fbld
arpl
cmp
out
loopne
mov
cmp
fwait
je
sbb
mov
inc
sbb
data16
cmc
in
lahf
rorb
mov
in
inc
and
int3
xchg
imul
jle
ljmp
out
lahf
xchg
and
lcall
lcall
or
mov
push
dec
stos
cltd
ja
rcrb
repnz
int
ja
loope
push
cltd
dec
scas
clc
pop
or
mov
lcall
mulb
xlat
add
xchg
subl
add
jg
icebp
xor
jno
lahf
cltd
jo
jmp
jl
inc
je
jno
movsb
xchg
stos
aaa
mov
test
add
push
fsts
push
lock
xor
jb
cmpsl
fidivrl
pop
jbe
mov
or
aaa
rep
cwtl
rol
insb
fisttps
not
fwait
repnz
ret
idivb
ss
pop
dec
test
cmp
fists
hlt
int3
dec
push
ficoms
sub
sub
out
loope
repz
jb
push
inc
cmpsl
mov
and
mov
mov
sub
jg
sti
cltd
stos
pop
mov
aam
mov
xchg
cs
fstps
dec
sbb
addl
sbb
xchg
stos
add
cmp
and
jo
adc
insb
fildl
sbb
loop
arpl
popa
pop
push
pop
dec
sbb
dec
lret
inc
cmp
movsl
insb
in
mov
lds
jb
adc
shrl
xor
jb
xchg
and
pushw
lret
ss
sub
test
mov
push
adc
xor
lahf
push
adc
rcr
aam
dec
je
inc
or
jo
mov
pop
xchg
pop
push
add
push
pusha
add
mov
and
cmp
nop
into
dec
mov
xlat
mov
out
jb
test
divl
sbb
and
sub
push
mov
or
shll
sub
and
mov
jge
cmp
push
pop
lock
and
dec
mov
fsubrl
inc
fsubs
mov
mov
stos
jne
into
test
push
cwtl
pop
mov
jne
push
fnsave
xchg
or
addr16
test
xchg
enter
add
push
pushf
pop
jp
sbb
test
mov
mov
fucomi
mov
or
pusha
jne
xchg
or
jge
and
xor
xchg
pop
arpl
mov
mov
mov
insb
test
push
sub
imul
xchg
por
aaa
cmp
xchg
sti
pop
rcl
cmpsl
dec
arpl
push
cmp
adc
jne
aam
dec
xchg
cs
fisttpl
sub
pop
dec
outsb
shl
or
xor
dec
mov
aaa
dec
cltd
iret
add
xor
div
icebp
lcall
orb
mov
movsl
xor
xchg
cwtl
mov
out
cmc
and
adc
inc
gs
lcall
jns
sahf
rcrl
mov
mov
xor
mov
cli
ljmp
mov
fldcw
adc
xchg
mov
mov
sti
and
sbb
jge
lahf
jecxz
hlt
test
or
dec
inc
test
jp
call
idiv
icebp
mov
push
dec
inc
out
std
bound
push
mov
inc
movsl
repnz
mov
or
pop
ffree
dec
xchg
aam
lea
cmpsb
lods
fistl
or
push
daa
adc
imul
jl
js
pop
adc
enter
ja
adc
xchg
dec
xor
push
sbb
loopne
insw
sub
dec
ficoml
loopne
out
or
jp
cmp
rcrl
rcll
jne
jl
mov
lret
test
stos
or
pushf
pusha
stos
jno
inc
aam
fstps
scas
ja
sahf
jb
sti
repnz
mov
les
ljmp
pcmpeqb
xchg
xchg
or
lods
push
pop
call
iret
cld
pusha
out
cmpb
lcall
insb
add
outsl
cmpsl
xchg
inc
scas
sbb
bound
stos
jp
int
lret
pop
sub
out
out
test
inc
mov
dec
jnp
mov
jo
mov
test
sti
xchg
repz
or
jo
jle
jnp
repnz
jecxz
cmp
cs
jo
inc
aad
dec
or
in
add
int
lea
inc
pop
icebp
cmpsb
jg
xchg
pusha
cmp
cltd
mov
ja
pop
or
pop
mov
jl
xchg
push
arpl
gs
cltd
outsl
jmp
cmp
push
adc
shlb
xor
and
sub
adc
rclb
xchg
adc
push
stos
xchg
inc
sub
mov
jns
outsl
or
xchg
jnp
in
insl
jp
adc
push
scas
adc
insb
and
push
loopne
lcall
xchg
push
cmp
lret
mov
in
xchg
cmp
push
or
sarb
push
jno
add
out
or
in
pop
push
ja
leave
mov
lahf
and
in
test
jo,pn
or
push
daa
daa
inc
xor
fptan
test
xlat
lock
iret
pop
lahf
into
adc
add
cmp
mov
jb
pushl
lret
nop
mov
mov
xor
inc
leave
add
mov
or
xor
fwait
push
xor
out
pop
jbe
shrl
xlat
mov
mov
nop
cli
cmc
dec
jno
outsb
mov
test
xor
pop
and
mov
inc
out
jo
mov
repz
add
push
adc
xchg
lret
fdivrp
xor
mov
inc
fcoml
mov
sbb
stc
or
jl
test
mov
mov
mov
loopne
jbe
push
cs
testb
repz
stc
sub
dec
mov
popf
or
mov
push
popf
sarb
adc
xor
push
mov
mov
mov
test
inc
pop
cmp
js
or
lret
leave
call
test
sub
js
mov
rolb
pop
add
imul
cld
xchg
pop
aas
dec
cltd
and
jae
and
cmp
mov
les
push
ja
and
inc
push
mov
jnp
xor
inc
hlt
mov
sub
mov
pop
sbb
and
dec
mov
sbb
inc
ret
sub
arpl
pop
das
std
lds
push
mov
shll
fsubr
pop
ljmp
cld
add
fwait
rol
lds
scas
jp
out
push
mov
aas
loop
mov
adc
les
or
inc
mov
fs
push
mov
sub
nop
test
mov
mov
fmul
inc
xchg
pop
adc
xchg
out
gs
mov
aas
lods
lock
rcl
mov
pop
call
cmp
test
mov
aas
sbb
cmc
and
test
fs
push
xchg
pop
cmp
das
add
aam
mov
or
inc
fistl
adc
adc
adc
inc
movsb
or
rol
or
dec
int
adc
xchg
pop
sub
dec
or
mov
adc
mov
mov
cmpsl
sub
icebp
adc
pusha
adc
pushf
add
out
popa
jno
outsb
or
int3
and
cmpl
loopne
cs
cmpsb
lcall
fcmovne
cmpl
fwait
sub
sbb
stc
cld
fdivl
mov
bound
xlat
pusha
lods
cs
adc
inc
cmpsb
and
nop
loope
mov
sbb
sbb
insl
push
test
jbe
and
jns
push
dec
push
es
pop
mov
fsubrs
jns
fidivrs
sbb
js
imul
sbb
pop
cmp
stc
xor
xchg
mov
jecxz
jnp
stc
pop
lret
rcll
sbb
mov
jnp
das
repz
and
ja
std
xor
lea
sub
daa
or
sbb
pop
in
and
imul
xor
push
mov
xor
cmp
xor
cld
dec
addb
cltd
push
pop
jmp
lock
mov
enter
or
fadds
inc
mov
loopne
push
ds
js
xchg
jns
popa
in
pop
xchg
aam
push
mov
dec
loope
sub
addb
xchg
push
mov
cmpsb
test
mov
cli
xorps
cltd
out
pop
push
pop
pop
pop
push
pop
cltd
jg
or
jb
mov
test
push
sbb
nop
in
bound
mov
mov
xor
mov
mov
jb
cmpsl
aaa
inc
sti
jle
outsb
mov
xchg
mov
aam
inc
or
cmc
pop
fwait
jecxz
mov
cmp
mov
nop
add
sub
push
add
mov
inc
ja
sub
sbb
mov
dec
push
jmp
pop
nop
movsb
std
mov
repnz
fdivl
push
popa
fdiv
addr16
dec
addb
pop
add
or
jns
pop
mov
mov
rcl
loope
std
sbb
jae
not
add
and
fmull
and
imul
xlat
out
xchg
push
das
int3
lods
mov
mov
lret
fbstp
mov
dec
xchg
or
xchg
fwait
add
jnp
sbb
dec
sub
xchg
sub
int
cs
nop
and
stos
les
adc
push
movsl
xchg
mov
aad
stos
test
test
jno
dec
jecxz
sbb
int
jo
and
mov
sub
mov
in
xchg
int
pop
mov
sbb
stos
rorb
into
fs
daa
xor
xchg
xchg
push
mov
fisubrl
jb
lds
ljmp
ljmp
inc
clc
pop
inc
inc
jns
in
dec
sub
adc
xchg
roll
rorl
jo
push
xor
out
sar
sub
cmpsb
rcrl
mov
lea
sub
leave
mov
xchg
int3
mov
rolb
in
scas
cld
loopne
test
neg
loop
jmp
movsl
inc
pop
loopne
ret
push
mov
xor
iret
inc
cs
push
inc
sbb
xchg
out
cmp
push
mov
inc
gs
mov
lcall
repnz
mov
test
pop
flds
inc
mov
add
rclb
popf
insl
and
lds
fstps
xchg
lods
in
inc
and
inc
xchg
pushf
jl
in
push
ret
pusha
pop
rcrb
out
leave
push
in
in
les
pop
int3
push
mov
jp
push
sbb
rcr
pop
mov
jge
inc
add
and
outsl
scas
leave
push
xor
mov
cmp
pop
loop
ss
sbb
push
add
push
testl
test
mov
cmpsb
in
mov
jl
aas
or
dec
sbb
repz
test
lret
xor
int3
jmp
mov
mov
xchg
aaa
push
and
xor
push
stos
out
pop
lock
lcall
xor
fs
cmc
mov
push
sub
jge
mov
sub
shlb
iret
rclb
data16
mov
lock
enter
fmuls
adc
xchg
jecxz
out
adcl
jmp
sub
push
sub
movsl
addr16
inc
xlat
aad
mov
mov
insb
sbb
push
mov
push
push
aaa
jnp
andl
inc
outsl
outsb
call
addr16
xchg
sub
mov
or
pop
mov
adc
and
repz
inc
and
fs
int
pushf
push
les
push
mov
mov
test
cld
rcll
in
das
lea
inc
sbb
jl
dec
push
jmp
sbb
js
mov
inc
inc
inc
jg
lcall
sti
inc
push
jle
sub
push
inc
pop
cmpsb
cmc
sub
cmp
adc
das
cmp
sbb
pop
test
add
jecxz
mov
hlt
jne
push
ljmp
in
in
repnz
or
dec
ret
jo
mov
out
pop
aas
scas
adc
push
jns
push
pop
jne
lds
mov
and
jl
jg
add
push
dec
sbb
ret
push
lret
cmp
in
sub
lret
jae
push
push
stos
add
mov
inc
or
push
sub
ss
imul
inc
repnz
xor
sub
popf
and
shll
out
fisubl
stc
add
push
push
cmp
jo
jmp
dec
test
ret
jne
scas
inc
shrb
mov
jl
hlt
imul
fucompp
test
cmpsl
adc
lock
sti
mov
xorl
loope
dec
jmp
inc
loop
push
cmc
test
mov
inc
pop
aam
out
fbstp
ret
push
mov
cmc
test
add
adc
add
add
dec
mov
push
decl
inc
dec
jle
imul
mov
jno
mov
jp
outsl
or
mov
mov
jl
inc
adc
je
xor
cmp
out
push
sub
ret
ds
in
inc
pop
add
in
jle
and
in
loope
lods
jp
dec
loope
inc
insb
push
mov
pusha
jo
xchg
jp
lret
sub
sbb
dec
jle
push
insb
inc
mov
mov
or
inc
test
imul
sti
sub
test
jae
xor
mov
dec
sub
pop
push
adc
aas
mov
popf
push
sub
fisttps
jo
jae
inc
and
sbb
mulb
ljmp
cmp
pop
clc
addr16
lock
hlt
mov
push
cmp
adc
dec
arpl
pop
cli
les
fldl
imul
inc
je
xchg
stc
mov
lcall
jg
arpl
pop
stos
inc
mov
lods
nop
lock
sbb
sbb
xor
mov
jge
cmpl
cltd
and
fstl
pop
mov
sbbb
je
bound
dec
add
in
and
and
inc
push
cmp
sahf
fucomip
sub
xor
add
out
and
movsl
fstpl
jmp
xlat
and
pop
arpl
jb
sbb
xchg
mov
in
aas
aam
xchg
and
movhps
pop
sti
add
imul
scas
popa
std
lret
dec
cld
sbb
xlat
and
jge
mov
xchg
add
into
push
push
shll
and
pop
pop
mov
out
cmpsl
lcall
cltd
stc
std
cmp
mov
daa
test
push
fwait
lret
outsb
inc
add
stc
push
aam
xor
ffree
loopne
dec
cmp
cmc
push
jne
movsl
repnz
xor
add
mov
rcrl
aam
add
cld
mov
js
fdivl
push
fs
outsl
jb
pop
cmp
push
aam
sub
push
dec
pop
cltd
and
cmp
popa
push
cmp
sbb
inc
mov
xchg
xchg
cltd
jg
inc
adc
lea
cmp
and
popf
or
lods
in
xchg
sbb
mov
imul
mov
ds
jae
xlat
aad
dec
fwait
push
out
sbb
imul
lods
xchg
enter
mov
std
xchg
inc
mov
pop
hlt
push
dec
pop
in
pop
andl
push
push
add
push
or
pop
mov
shrb
dec
jne
mov
nop
call
mov
push
loop
mov
repz
adc
sbb
adc
and
mov
ret
cmp
adc
iret
inc
sub
pop
lds
push
idivb
or
lret
stos
dec
scas
stc
int3
shr
add
push
mov
mov
gs
jl
mov
cwtl
sub
dec
aaa
insl
mov
adc
mov
movsb
je
in
aam
sub
shll
xchg
pause
sub
icebp
rol
add
jp
xchg
adcb
mov
or
lret
into
dec
roll
iret
mov
adc
orb
pop
daa
pushw
jp
adc
cmp
cmp
or
sub
jbe
imul
mov
rclb
or
adc
xchg
push
dec
das
cmc
cmp
ret
xchg
pop
adc
insb
inc
fwait
loope
and
andb
cmp
mov
std
lret
dec
jmp
dec
mov
xor
mov
mov
imul
mov
dec
fcmovu
mov
loop
push
pop
insl
cmp
js
scas
and
mov
mov
insl
sub
and
gs
mov
insb
mov
mov
dec
inc
mov
test
or
or
cmp
shlb
lcall
lea
shrb
cmpsl
jl
inc
jnp
lds
cmp
test
orb
pushw
pop
repnz
ret
adc
jmp
jb
jne
fidivrl
mov
into
dec
ja
lods
pop
fnstcw
ljmp
mov
mov
xchg
dec
cmp
jmp
and
andb
and
sub
dec
loopne
into
fisubrl
aas
out
lds
mov
es
rolb
aad
mov
xor
cltd
or
js
shrl
aad
jnp
pop
pop
dec
mov
cmp
push
in
cmc
lret
enter
scas
mov
xchg
pop
xor
lcall
mov
mov
xchg
and
mov
cmp
stc
test
mov
cmc
stc
push
cli
mov
aam
popf
lcall
sbb
xchg
inc
mov
imul
jecxz
fadds
fstl
ljmp
and
mov
arpl
stos
stc
mov
or
pop
test
bound
cld
mov
mulb
imul
jns
jo
cmpsb
sub
inc
les
sub
jle
and
stos
xlat
call
ja
lods
cmp
aaa
pop
cmp
sub
jge
push
fistpl
and
outsl
xor
arpl
or
mov
call
fwait
xor
push
push
dec
sbb
push
or
mov
and
mov
out
cwtl
arpl
das
pop
pushf
inc
or
xchg
push
and
popa
xchg
jle
pop
jo
cmpsl
hlt
jnp
cwtl
add
fcmove
jecxz
mov
popa
xchg
je
fdivs
sub
int
or
push
push
push
sub
add
jno
repnz
fadds
mov
out
mov
faddp
cwtl
in
fadds
cmp
push
pop
jle
idiv
arpl
inc
loope
aaa
repz
xchg
xchg
icebp
and
fstpl
jle
lret
pusha
adc
stos
mov
add
xor
mov
test
scas
dec
in
xchg
pop
and
iret
push
push
mov
lret
ss
sub
mov
add
jmp
push
fimuls
add
insl
fisttpll
int3
sub
jnp
adc
cmp
add
ja
insb
fisttpll
mov
out
sub
add
jo
movsb
incb
inc
push
test
pusha
jne
fwait
adc
movl
hlt
and
mov
xchg
sbb
into
mov
scas
mov
mov
pop
jmp
or
fsubrs
cmp
xchg
sub
les
loope
test
xchg
popf
adc
adc
shl
pop
dec
dec
lret
shll
mov
cld
pop
cmpsl
mov
inc
and
mov
xor
cwtl
es
movsb
pop
out
int
push
popa
dec
loopne
jg
test
neg
jecxz
and
mov
shl
jnp
mov
bound
leave
sub
and
inc
adc
sbbb
js
pusha
jnp
pop
arpl
jne
in
mov
add
jo
mov
ret
jp
push
iret
inc
cs
mov
push
cmc
dec
sub
adc
add
filds
imul
in
scas
mov
pusha
mov
ljmp
push
insl
adc
ljmp
out
iret
jae
mov
testb
jle
jno
arpl
xor
dec
shll
shll
sub
sub
pop
xchg
movhlps
out
dec
sub
fidivrs
lcall
sbb
test
inc
in
leave
andl
adc
test
and
sub
cmpb
inc
xchg
pop
xor
jb
insl
push
xorl
or
in
mov
ja
cs
jns
lock
dec
out
idivb
pop
clc
outsl
mov
inc
les
subb
push
inc
cmp
cltd
pop
jge
fidivrl
pop
dec
js
cmp
sbb
fsubr
rol
dec
cmp
hlt
inc
sub
adc
mov
adc
mov
cmp
cltd
dec
push
xorb
add
inc
dec
inc
push
jb
pop
shlb
scas
shll
aad
fmuls
sbb
sbb
shll
in
xchg
add
push
cmp
repz
pop
dec
jg
adc
fsts
cmp
test
aaa
inc
rorb
lods
and
out
cmp
ljmp
xor
and
enter
cwtl
add
push
jne
aaa
dec
loop
call
mov
sti
xor
cmc
fisttpl
jmp
pop
shl
leave
ror
sub
cmp
leave
les
xlat
push
add
xchg
lods
aam
fisttpl
aam
and
mov
imul
imul
pop
mov
jns
roll
jg
cmp
lock
lahf
sbb
fmull
inc
mov
in
xchg
dec
push
rcll
pop
push
jecxz
inc
lds
xchg
inc
jb
dec
imul
popf
push
and
dec
loop
dec
adc
lret
push
jge
and
iret
popf
idiv
out
je
or
popf
or
js
test
insl
lock
sbb
mov
repnz
cmpb
sbb
pop
xchg
cmpsl
xor
shll
dec
dec
arpl
inc
cmpsb
notb
push
xor
enter
in
xchg
outsl
add
das
iret
push
or
aas
pop
sbb
shrb
or
in
and
loope
and
popa
stos
out
pop
fmuls
leave
cmp
or
cwtl
test
add
aam
and
xchg
clc
add
pop
loopne
ror
frstor
mov
mov
sub
scas
cmp
in
subb
dec
xor
inc
push
jecxz
arpl
mov
cmpb
push
cwtl
jle
xorl
mov
filds
scas
and
fcomi
jp,pn
mov
mov
iret
or
popa
repz
mov
push
outsl
stc
dec
pop
push
lcall
addb
je
aaa
add
rcl
fwait
ds
mov
jnp
mov
add
adc
push
jno
out
pushl
movsl
and
pop
xor
data16
mov
movsl
sub
sub
jge
xor
push
push
pop
adc
in
repnz
mov
mov
addr16
je
std
into
nop
cmp
xchg
xchg
or
sub
movsb
loopnew
mov
add
jno
adc
imul
addb
sub
lcall
adc
sbb
push
fistpll
scas
adc
les
pop
pop
jecxz
push
push
xor
loopne
mov
imul
and
nop
push
pop
push
lods
scas
xor
fiaddl
xor
xchg
les
addr16
or
add
pop
jns
pop
ss
nop
rclb
push
dec
adc
pop
bound
mov
mov
fucomi
js
test
mov
sbb
and
add
push
outsl
push
inc
divb
ficomps
popl
lret
out
repnz
nop
cmp
aad
pop
test
inc
dec
inc
int
stc
add
jae
sub
aas
aam
push
lahf
into
bound
sub
mov
testl
pop
pop
xchg
xchg
out
xchg
into
mov
insl
mov
adc
or
idiv
inc
sti
sub
sti
mov
popf
mov
stos
xchg
push
ret
or
pop
dec
adc
loop
sbbl
out
cwtl
out
push
cs
ret
jecxz
or
mov
gs
cld
pop
mov
stos
xor
adc
fcomi
dec
inc
inc
push
jno
add
add
cmpsb
aam
adc
xor
sub
test
sahf
pop
mov
adc
imul
into
insb
dec
jb
jecxz
insl
sarl
movsb
cmc
aad
int3
sbb
popa
fdivr
call
sbb
lret
bound
and
xchg
xor
ret
call
in
add
lods
xor
lcall
lock
dec
mov
jns
and
push
outsl
mov
mov
imul
add
jp
sub
pop
enter
or
dec
fwait
nop
stos
jbe
or
idiv
daa
shrb
dec
xchg
pop
in
shll
mov
inc
cmp
loope
push
sarb
mov
rol
sbb
sub
and
rolb
ja
repz
pop
lods
jb
repz
xor
lcall
loop
lods
aaa
lods
xorl
and
aas
sbb
sbb
mov
aam
mov
jno
es
sub
xor
addb
mov
push
or
nop
aad
jle
leave
mov
cmpsl
pop
fwait
outsl
pop
adc
or
sbb
daa
andl
dec
popa
xchg
add
int
movsl
data16
xor
xor
lea
xchg
sbbb
add
sub
cltd
pop
das
out
adcb
arpl
add
ds
cltd
jge
cmovo
jmp
add
cmp
fs
dec
dec
mov
jns
mov
sub
pusha
and
imul
pop
jae
lds
xchg
sbb
fnstsw
out
fisubs
sub
jb
or
test
and
adc
popa
push
cmpsb
aam
xlat
push
or
arpl
das
xchg
icebp
ret
add
cmp
stos
test
cmpsl
sub
int
adc
xchg
stos
pop
addr16
xor
lcall
adc
out
or
shrl
dec
sub
imul
inc
aad
adc
mov
push
repnz
movsl
pushf
sarl
lret
pop
sbb
cmp
push
jno
testl
rclb
xchg
jmp
sbb
daa
push
ljmp
mov
or
fdivl
xchg
pop
insb
aaa
fsubrl
pop
dec
ret
aaa
call
shll
cmpsl
jo
and
pop
or
push
cmc
add
lds
xlat
push
fsubp
pop
add
mov
test
pop
xor
sbb
pop
clc
jno
adc
aad
into
adc
adcb
xor
xor
loopne
orl
sub
adc
xor
in
iret
sub
cwtl
in
jnp
orl
push
cmpsb
mov
sub
push
int
out
scas
sub
or
dec
mov
hlt
ss
test
movsl
push
test
scas
xlat
add
mov
xchg
pushf
dec
mov
push
popa
inc
les
std
xor
pushf
mov
push
sub
jle
pop
imul
loopne
adc
lret
lea
adc
ljmp
sbb
xchg
or
stos
mov
repnz
hlt
movsl
push
sarb
addb
fstpl
xor
movsb
mov
push
lret
cmp
sti
outsl
push
sbb
push
xor
mov
xchg
data16
jle
sub
cld
loope
lcall
loope
inc
push
sub
and
fldl
sub
stos
fistpl
or
dec
testl
rcr
lds
xchg
jmp
in
push
sub
in
mov
clc
sub
std
call
aam
ljmp
subb
and
pushf
cli
sbb
popa
out
bound
divl
lea
test
outsb
and
push
shlb
insb
pop
cltd
fnstsw
push
push
or
cmp
pusha
dec
ljmp
xorb
out
dec
stc
ds
loop
push
fisubrl
insl
or
mov
push
cli
mov
sbb
test
jns
mov
add
push
pusha
and
and
push
jb
dec
push
mov
shlb
mov
and
cli
insl
arpl
and
int
es
pop
fs
ljmp
pop
pop
inc
popa
jae
into
mov
pushf
pop
xchg
mov
out
pop
aaa
gs
mov
sbb
js
aas
test
and
clc
dec
dec
mov
or
mov
cmpsl
adc
aam
sbb
mov
int
popa
inc
int
add
repz
push
loope
pop
pop
cmp
mov
aas
insb
adc
cmp
pop
enter
jge
cmp
ret
mov
cmc
mov
test
jbe
mov
mov
dec
ss
popa
pop
in
imul
lret
or
ss
repz
cs
mov
out
mov
mov
mov
jne
rcl
pop
mov
repz
fildl
jmp
pop
out
rcl
xchg
aaa
pop
rorl
sahf
lods
mov
aad
mov
dec
xor
fdivl
sbb
xor
iret
inc
xchg
mov
repnz
stos
xchg
std
loope
inc
sahf
scas
fildl
sub
push
pushf
mov
nop
cmpsb
mov
cmp
jno
sbb
in
lcall
mov
jb
lcall
mov
fwait
dec
pop
out
push
bound
pop
push
ljmp
lahf
jle
jecxz
dec
lahf
sbb
imul
sub
or
xchg
fcompl
pusha
ss
dec
cld
adc
sbb
inc
cmc
sbb
adc
cmp
mov
inc
dec
mov
pop
les
addr16
inc
rcrl
fs
frstor
lds
ds
cmpsl
dec
shrb
ss
lods
mov
jo
fistpl
scas
fimuls
dec
jl
mov
in
sub
stc
in
imul
mov
jg
ja
in
add
pop
mov
jo
jo
jmp
ja
add
stos
scas
mov
inc
js
pop
rcll
ljmp
jg
fwait
adc
pushl
cmp
mov
jl
cli
dec
mov
je
xlat
stos
push
inc
and
add
cli
test
imul
xchg
mov
rcl
adc
push
inc
stc
pop
bound
ficompl
and
xchg
mov
aad
aaa
xchg
and
cltd
jecxz
cmpsb
bound
mov
ds
inc
rcll
pop
js
jnp
mov
jle
or
repz
pop
adc
mov
xchg
gs
outsb
rolb
mov
jmp
sub
int3
mov
insb
dec
lock
fildl
int3
pusha
dec
sub
sarl
lret
push
sarl
jle
pop
mov
sub
es
mov
sbb
sbb
or
cmp
and
aaa
fucomp
aam
jl
and
mov
ucomiss
popf
mov
shlb
dec
arpl
push
inc
notb
mov
repnz
adc
pop
jl
mov
gs
cmp
fdivl
mov
std
push
ja
rcl
add
mov
jns
or
stos
ja
dec
repnz
decl
out
movsb
imul
push
dec
jmp
out
jae
bswap
add
sbb
fcomps
xor
arpl
lea
dec
leave
nop
cmp
jl
or
jg
cmpsb
jo
cltd
sbb
repnz
fwait
ja
enter
test
pop
sahf
xor
shrb
xor
ljmp
cmpsb
movsl
clc
dec
xor
daa
adc
sbb
jg
ss
push
cmp
mov
das
push
je
push
test
cld
mov
iret
mov
roll
pop
add
mov
lcall
sub
mov
push
mov
fistl
int3
sub
cmp
mov
xor
pop
xchg
and
into
popf
cmc
pop
fwait
add
xor
rcl
sbb
shrb
scas
or
xor
pop
xchg
lret
fsubs
inc
rcrl
lods
mov
cmpl
rcrb
mov
jmp
or
mov
or
mov
out
dec
fidivs
or
stos
push
popf
adc
lret
jle
jne
lds
rcrl
fsubr
repnz
dec
or
xor
sahf
ret
insb
int3
sbb
xchg
mov
stos
shlb
xor
pop
in
sbb
adc
mov
fisubrs
and
sbb
ret
out
sbb
cmpsl
add
movsb
addr16
mov
es
stos
iret
stc
mov
shrb
inc
add
push
pop
cmpsl
jle
and
lcall
dec
mov
cmp
pop
out
jne
sbb
cmp
push
jle
addr16
scas
pop
sbb
jae
rcll
daa
mov
and
jg
xchg
ljmp
fldt
mov
sub
add
cmp
jnp
lcall
popf
pop
mov
loopne
pop
int3
sbb
rorb
iret
out
adc
imul
push
testl
xchg
fsubs
ss
cmp
rorb
push
out
in
jge
xchg
pop
xor
les
movsl
cltd
cld
dec
cmp
cmp
test
cmc
dec
ja
and
cld
out
popf
notb
test
and
add
cli
je
decl
in
sbb
mov
and
cmp
mov
dec
outsl
leave
inc
xchg
adc
lcall
leave
lods
jmp
push
xchg
push
out
inc
jae
loop
mov
lds
inc
stos
cli
sbb
and
xchg
xor
mov
push
adc
stc
or
and
jae
in
mov
jle
sub
pop
and
out
iret
lods
pop
cmp
mov
xor
push
rol
xchg
push
clc
cmc
es
add
sbb
pop
cmp
add
pop
lods
inc
test
mov
xor
fxch
jl
jnp
inc
dec
xchg
call
loopne
and
dec
lock
dec
or
cwtl
adc
stc
push
pop
and
push
add
test
jg
mov
or
rcrb
push
divl
mov
in
ds
pop
sbb
jmp
lods
jge
mov
add
pop
inc
push
push
or
lret
xchg
pop
sub
mov
je
incl
sbb
aam
scas
sub
jbe
les
fiaddl
sbb
insb
outsl
xor
inc
call
jl
jmp
cmp
push
mov
inc
sub
add
sub
sub
pop
sub
out
in
fstps
aad
imul
ret
stc
inc
xchg
push
cmp
ffreep
daa
add
pop
mov
push
test
mov
into
loope
jns
ss
sub
mov
enter
lret
cmp
jnp
adc
popa
outsb
and
ds
xlat
insb
and
lret
adc
imul
jl
pop
cmpsb
subl
ss
sub
sub
stos
je
jg
nop
js
sahf
rcl
pop
fidivrl
es
mov
in
or
fstpt
ja
subb
es
sbb
inc
setnp
sub
movsl
fs
outsl
pop
adc
xor
inc
push
xorb
lret
xchg
imul
fistl
cmp
push
mov
addr16
popa
rclb
mov
cmpb
xchg
in
scas
jp
dec
or
loop
xor
mov
sbb
inc
inc
cltd
js
pop
push
movsb
xchg
pop
cli
sbb
push
cmpsl
jl
loop
jno
push
call
or
lret
push
ljmp
jbe
mov
or
xor
rcrb
inc
xor
mov
fnstenv
fimull
cld
jno
imul
jbe
bound
mov
fs
mov
ret
dec
lret
and
push
lds
andl
cmp
int3
incb
cmp
mov
or
insl
das
iret
xchg
pop
adc
in
push
cmp
jne
fwait
nop
push
inc
sbb
ret
mov
add
jle
mulb
inc
jnp
adc
jo
push
cld
popa
in
jp
fwait
scas
and
sub
adc
imull
sub
adc
xorl
mov
or
xor
rcr
bound
pusha
fists
dec
jbe
loop
xchg
sahf
je
push
jg
imulb
fsubrl
adc
pop
sub
repz
cmp
mov
jbe
js
fisubrs
xchg
add
jmp
or
xchg
ja
xchg
cmc
lods
lods
bound
shll
sub
jg
outsl
jns
psrld
ljmp
test
jae
push
movsb
jb
xchg
lock
out
stos
out
je
inc
dec
imul
ficoml
repnz
test
cmp
mov
popa
sbb
sub
xchg
sub
aad
add
int
cmp
mov
loopne
mov
daa
pop
sahf
pop
jl
jo
fimuls
stc
cmc
sbb
int3
jecxz
adc
scas
adc
adc
jne
insb
fdivl
addr16
sbb
xchg
or
mov
clc
xor
fldcw
rolb
fs
jg
repnz
add
js
push
je
push
push
push
inc
adc
lea
pushf
insb
call
adc
orb
cmpsb
filds
or
add
sub
or
or
lock
mov
inc
jl
mov
and
shll
sti
in
push
push
inc
dec
scas
push
jne
cmp
xchg
mov
out
ljmp
or
loopne
dec
sbb
mov
add
notl
arpl
out
or
leave
cmp
pop
push
mov
lret
add
xor
sar
lods
rcrb
inc
push
scas
and
sbb
cmp
sub
push
and
xchg
push
sub
inc
or
jmp
add
shlb
out
js
rcrb
call
movl
add
jp
bound
inc
add
jmp
rorl
push
and
and
sub
adc
int3
push
lods
mov
fstpt
sub
sub
pop
add
cld
cmp
aaa
pop
ret
ds
cmp
nop
data16
jnp
sub
and
jnp
cmp
dec
push
adc
insl
ffreep
xor
pop
or
lock
and
or
icebp
mov
sti
mov
movsl
sbb
repz
cli
and
cmp
jne
xor
cmp
fstps
and
aad
xchg
lahf
out
jb
adc
mov
pop
in
jg
pop
pop
adc
aad
push
cmp
aad
pop
incl
or
fwait
daa
andb
cmp
mov
mov
pop
lcall
jecxz
sbb
mov
mov
test
ljmp
iret
std
sub
sub
xchg
mov
and
aad
ret
sub
sbb
in
adc
inc
jl
faddp
push
into
mov
shlb
cmp
shlb
jno
out
pop
push
add
sbb
out
fcomip
test
adc
out
int
xchg
jmp
inc
stc
or
mov
dec
xchg
icebp
dec
addl
sbb
pusha
rcrl
addr16
xor
sbb
orb
out
mov
sub
jg
pop
loop
push
les
jge
push
xchg
or
or
pop
aaa
xchg
data16
clc
add
scas
fistpl
scas
mov
push
out
stos
shl
aam
test
les
jns
jo
stc
sarl
nop
mov
adcl
ss
fidivrl
sarl
add
xor
mov
jge
jge
imul
xor
dec
inc
pop
xorb
mov
or
pop
pushf
mov
lret
rcrb
xchg
sub
cmp
loope
pop
xchg
test
xchg
lret
xchg
sub
popa
dec
dec
jb
popa
or
sbb
xchg
lock
cli
inc
push
ja
icebp
mov
ljmp
jns
je
add
sarl
mov
push
lock
sub
lods
sub
scas
notl
pop
call
pusha
in
lahf
inc
hlt
push
icebp
fists
rcll
dec
mov
ret
int3
or
cmp
xchg
xlat
inc
sbb
jbe
jmp
imul
es
js
push
cmp
cmpsb
mov
sahf
repz
dec
inc
push
mov
in
rcr
cmp
dec
and
in
das
in
sub
xchg
cmp
data16
mov
dec
add
cmp
iret
pop
mov
lods
test
sbb
sub
mov
addr16
pop
lret
inc
add
and
cs
xor
sbb
push
cmpb
add
xchg
in
loope
mov
repnz
push
in
pop
shll
add
or
fadds
rorb
pop
hlt
mov
mov
cmp
pusha
adc
and
push
or
cmp
xchg
lcall
sbb
aas
leave
mov
inc
add
and
popa
or
lock
stos
mov
push
out
mov
or
loope
cmp
push
jge
cltd
sbb
xchg
and
rclb
xor
cmpsb
ss
sub
sbb
cmpsb
out
mov
xlat
popa
or
xchg
stos
add
jb
jo
push
dec
addr16
insb
test
loope
and
pop
jg
inc
outsl
inc
cmp
rclb
dec
fisttpll
filds
pop
loope
in
push
add
fcompl
mov
mov
test
pop
test
push
and
and
icebp
mov
pop
fldcw
xchg
add
scas
scas
insl
dec
fwait
mov
sbbl
push
dec
push
jecxz
adcl
add
out
inc
cli
insl
outsb
mov
sub
clc
shll
push
push
mov
lcall
xchg
jecxz
dec
dec
mov
or
fs
dec
push
je
ret
inc
rol
or
cmp
inc
sbb
loopne
test
bound
dec
sbb
pop
cmpsl
filds
cwtl
sbb
jbe
nop
ss
adc
jl
xchg
mov
xor
and
push
sbb
aaa
js
outsb
and
out
enter
xchg
shll
out
outsb
les
loopne
hlt
push
gs
push
jne
and
lahf
jge
cmpsb
cmp
mov
xor
shld
fistpll
add
fs
mov
int
jecxz
cmp
xlat
cmp
cmpsb
inc
cmp
mov
imul
gs
fs
pop
inc
lods
inc
mov
or
jg
fld
cmp
sub
lret
fnsave
adcl
lahf
push
and
inc
or
sub
pop
inc
jne
dec
mov
xlat
fwait
inc
pop
loopne
loopne
fbstp
sub
mov
call
arpl
je
scas
inc
popa
lods
js
or
pushf
es
push
outsb
inc
sahf
testb
xor
inc
mov
sub
nop
mov
nop
lahf
dec
ss
dec
lock
ret
mov
popa
mov
lahf
mov
jle
dec
dec
inc
sbb
or
mov
mov
and
sbb
gs
add
push
out
jb
fwait
test
je
mov
pop
outsl
arpl
addl
sub
loopne
push
lret
lcall
mov
push
cmpsl
das
dec
psubusw
lods
pop
andb
cmp
push
das
js
mov
cli
inc
jns
and
addb
pop
push
sub
lcall
pop
repz
and
loopne
jb
sub
xor
icebp
add
mov
mov
nop
test
cld
or
mov
jge
mov
inc
js
inc
mov
int3
push
addl
imul
pop
pop
dec
xorl
scas
add
jne
pop
scas
stc
aas
hlt
xchg
jb
outsb
or
xlat
repnz
es
add
stos
lods
jno
andl
test
cmp
nop
mov
inc
xor
popa
in
jmp
ss
push
xchg
jecxz
sub
inc
mov
xor
lds
lock
loopne
lcall
ret
insb
push
add
pop
outsb
dec
clc
mov
out
jb
test
add
inc
push
jmp
pop
sti
aas
dec
in
lea
int
and
adc
pusha
fimull
ds
xchg
add
pop
dec
cmc
sbb
int
xchg
test
adc
mov
dec
mov
mov
dec
and
out
sarb
or
cmp
mov
ret
arpl
and
loope
jmp
scas
js
cmp
iret
jl
xchg
cmp
cmp
sub
insb
or
adc
lret
loope
adc
sar
jp
inc
sub
sbbl
jp
or
sbb
fxtract
xchg
mov
ficompl
icebp
sbb
mov
fcmovb
cli
pop
fisttps
out
add
push
sbb
pop
pop
mov
adcl
add
inc
es
cwtl
aam
adc
mov
mov
and
call
sbb
xchg
sub
test
add
add
adc
scas
push
imul
cmp
adc
dec
dec
rcrb
xchg
or
or
imul
dec
xorps
mov
cmp
aaa
xlat
jno
inc
test
xchg
lea
dec
enter
les
testl
inc
in
test
inc
pop
das
shlb
js
jmp
call
dec
sbb
mov
pop
sub
mov
fwait
out
jno
jmp
sub
sub
divb
ret
ljmp
mov
mov
ja
aas
std
mov
mov
stos
mov
mov
pop
adc
popf
mov
mov
push
xor
jge
jmp
or
mov
test
movsl
mov
or
sub
dec
movsl
add
call
ljmp
imul
out
shlb
mov
jle
mov
and
std
mov
iret
lock
popf
addr16
jns
cli
xor
out
mov
out
lock
mov
test
dec
adc
ds
push
inc
rorb
jge
push
mov
push
stc
fsubp
xchg
jae
fimull
sub
sbb
cmp
xchg
fistl
dec
test
mov
js
lahf
mov
mov
cmpsb
dec
out
cmp
sbb
shr
cmpsb
decl
sub
jl
test
mov
sbb
dec
test
sbb
push
or
ret
scas
loop
add
add
in
and
and
or
rorb
stos
mov
pop
pop
jl
sub
jne
andl
fdivrs
jae
mov
jge
dec
pop
fs
inc
imul
jp
cmp
or
lret
sbb
dec
jns
mov
in
and
adc
mov
jmp
iret
push
pop
push
daa
jo
repnz
jmp
aam
in
outsl
aad
sti
lea
aad
cmp
adc
icebp
dec
push
in
push
cmpsl
cmpsb
mov
fcoml
push
idivb
lret
sub
subl
inc
adc
sub
insb
pushf
and
roll
loopne
sti
jns
jl,pt
mov
push
int
test
loope
lock
dec
dec
rolb
push
push
fmuls
mov
stos
pop
loop
scas
lds
int
inc
lock
or
out
inc
and
mov
je
dec
xchg
les
xlat
sti
sub
inc
pop
adc
aad
pop
ss
dec
mov
push
mov
add
adc
jnp
les
or
jnp
sub
ja
pop
shll
xchg
shlb
stos
inc
or
mov
out
fsubrl
add
push
xchg
add
cld
mov
cmpsb
xor
jecxz
inc
jge
lock
xlat
decl
fdivs
loop
ja
push
or
in
fsubrl
test
push
or
lods
mov
cmp
fsubrs
cmp
xchg
and
cs
jne
jl
adc
ret
or
movsl
or
dec
dec
movsl
sbb
outsl
sbb
cmpsl
add
and
sbb
and
add
test
push
and
sbb
mov
pop
sbb
icebp
jl
int
push
loop
iret
push
jle
test
popf
je
in
jno
jo
cmp
mov
jne
sub
mov
out
adc
js
divl
inc
popf
add
add
insb
pop
cmp
lods
into
cld
icebp
mov
test
orl
stos
lret
dec
mov
sub
xor
cmc
mov
lock
xchg
add
scas
dec
addr16
push
iret
push
add
pop
xor
push
xor
in
xchg
dec
rcrb
dec
sub
outsl
mov
and
sub
mov
mov
jb
add
lret
cmp
adc
mov
ss
rolb
mov
cmp
cld
sub
ljmp
dec
in
and
icebp
and
negl
fcmove
and
sub
jp
lea
and
call
nop
movsl
faddl
sarb
in
test
adc
and
clc
dec
push
and
cwtl
mov
inc
xchg
xchg
aad
mov
xorl
cwtl
pop
mov
mov
dec
xor
add
out
sbb
fwait
aaa
cmc
sbb
outsl
aas
adc
ror
xchg
pop
es
movsl
mov
ficompl
and
mov
xchg
sbb
cltd
je
and
out
insl
punpcklbw
rol
test
cltd
or
mov
int
pop
je
movsl
fwait
push
in
outsl
ret
cs
inc
add
add
xor
sub
fwait
jno
fwait
popf
add
adc
inc
pop
inc
addb
jno
jnp
mov
cmp
cmp
movsb
repz
lahf
outsb
popa
mov
leave
sbbl
outsb
icebp
cld
in
pusha
fnstsw
push
lods
inc
mov
lahf
cmp
or
int
sbb
lods
adc
lock
push
jmp
stos
or
cld
mov
adc
insb
shr
push
fwait
imul
inc
in
pop
mov
out
shlb
shl
enter
fwait
std
pusha
and
loopne
pusha
loope
jmp
mov
cmc
jecxz
shll
in
out
xchg
call
in
mov
lret
or
mov
dec
dec
and
ds
cmp
adc
adc
jecxz
jb
and
cli
fs
je
jno
push
cmp
cmp
loopne
push
jp
dec
outsl
jb
pop
dec
loop
stos
push
mov
ficompl
inc
adc
xor
jne
jle
inc
in
pop
cmp
dec
pop
push
cwtl
in
mov
xor
cli
daa
dec
stos
rolb
pushf
or
add
test
push
out
adc
xor
repnz
xlat
cltd
je
ljmp
jno
movsl
rcl
sar
lea
mov
add
mov
movsl
ret
xor
inc
pop
js
inc
incl
push
fldcw
daa
pusha
push
sbb
jb
aad
ss
enter
pop
out
imul
imul
sub
adc
in
scas
cmp
iret
fimuls
stos
rorl
and
addr16
je
fwait
jae
cmp
xchg
shrb
dec
mov
fsts
aad
and
pushf
test
loopne
mov
jno
mov
mov
std
mov
xchg
mov
mov
mov
or
jg
int3
add
stos
repnz
outsb
mov
pop
fstpl
adc
mov
push
and
imul
shll
cmp
sbb
out
stos
sbb
mov
fs
lock
or
adc
pushf
mov
inc
mov
sub
clc
inc
xchg
dec
inc
and
insl
aas
fadd
mov
xchg
lret
fs
int3
adc
xchg
test
aam
inc
push
sbb
mov
std
jle
sub
cs
pushf
js
out
leave
add
sbb
dec
repz
xor
inc
in
aam
clc
rol
aad
cld
je
addr16
popl
icebp
sub
test
sub
ret
repnz
xor
sub
mov
in
pop
add
ret
or
and
leave
lcall
jl
sub
jns
push
popa
xor
mov
outsl
fnstenv
rcrl
inc
icebp
in
js
add
je
les
icebp
jbe
sub
repz
popa
addb
pop
imul
hlt
fistps
and
cmpsl
insl
push
mov
mov
enter
std
daa
insb
mov
inc
jge
aam
ja
ret
lcall
mov
xchg
and
repnz
iret
cmpsb
dec
loop
mov
sti
dec
push
inc
push
or
adc
mov
inc
psrlq
adc
sub
jl
in
hlt
aas
cmpsb
lods
mul
js
xchg
pop
dec
data16
das
mov
cmpsl
cmp
xor
push
test
subb
mov
jg
movsl
push
sti
ss
sub
aas
lods
test
ret
hlt
xor
push
cs
jecxz
jg
cmp
je
xor
popf
xchg
std
vpaddw
xor
push
push
gs
shrl
int
add
push
jmp
adc
cmpsl
fldl
cs
orl
mov
lret
lods
mov
mov
adc
bound
mov
clc
inc
out
pop
sbb
xchg
mov
mov
and
mov
mov
lcall
scas
int
jo
fcmovnb
and
test
push
bnd
dec
dec
inc
mov
scas
adc
fstl
arpl
popf
ffree
pop
hlt
xor
cli
xor
lcall
cwtl
jle
and
inc
ja
sub
aad
flds
hlt
iret
adc
sbb
fldcw
inc
adc
ret
jbe
mov
dec
jmp
jp
mov
mov
sbb
xchg
xchg
xchg
inc
lds
mov
and
imul
inc
xchg
inc
pushf
push
ror
pop
xor
push
fsubrl
add
inc
clc
shrl
scas
out
jo
shr
mov
test
xchg
cmp
mov
xchg
jno
or
in
jg
add
fcompl
daa
gs
cmpsb
and
jbe
jge
or
inc
mov
daa
xchg
push
mov
cltd
pushl
int
insl
push
adc
add
push
loope
sbb
jae
pop
adcb
insl
push
and
lds
mov
cmpsb
scas
xor
fisubl
pop
fisttpl
sub
stc
adc
and
aas
addr16
and
adc
xchg
jae
stos
mov
mov
mov
stc
mov
sbb
mov
mov
loop
and
pop
xlat
push
jno
fwait
sbb
dec
add
adc
in
sub
dec
ret
sub
sar
int3
lret
or
mov
xor
or
jae
imul
mov
lret
pop
lods
js
js
inc
imul
or
stos
hlt
mov
pop
scas
in
test
je
add
mov
xchg
aas
xor
mov
rcll
sbb
lgs
and
fildll
ja
inc
xchg
mov
out
bound
cltd
xchg
xchg
sti
fcmovnb
arpl
insb
rol
push
mov
add
subl
cmc
mov
andl
adc
jle
pop
and
jg
dec
dec
test
daa
xchg
or
imul
adc
les
push
rorb
mov
dec
jb
lds
jle
or
xorl
cmp
and
sbb
sub
xor
pop
cli
mov
push
xorl
cmp
sbb
mov
xor
jne
test
syscall
jns
je
arpl
mov
lock
pop
nop
mov
lahf
rorl
xor
sub
mov
jbe
aad
es
ss
insl
inc
or
fidivrs
lds
sub
hlt
jle
mov
mov
fwait
pop
sbb
pop
mov
jl
xchg
jns
ds
jae
fcoml
and
jns
and
xor
mov
lods
test
movsb
pusha
test
xlat
push
push
repnz
mov
or
data16
push
insl
or
and
mov
mov
sarb
push
pop
fbstp
add
adc
pop
mov
jg
pop
pop
xor
fidivl
cmp
cmp
roll
mov
stos
cli
pop
in
gs
gs
dec
xor
xor
mov
ljmp
jmp
in
fld
fwait
jne
jne
pop
dec
jne
xchg
mov
rol
mov
cs
cltd
dec
xchg
mov
nop
ficomps
decb
fs
sub
rcl
popf
xchg
push
clc
and
loop
ret
les
fld
insb
and
mov
lret
sub
sti
cmp
mov
popa
cld
xor
sbb
cs
sbb
inc
or
sub
mov
pushf
jns
cwtl
and
jl
cmp
and
loope
cvtdq2ps
sub
push
inc
pop
sarb
xor
clc
stos
add
push
arpl
or
jle
ss
fmuls
cmp
pop
xchg
jbe
movsl
sub
sbb
repnz
pop
xor
dec
jp
push
cli
push
ss
mov
test
je
sub
cmpsl
outsb
pop
lret
jb
fwait
nop
sti
loope
xor
cwtl
test
adc
jge
jns
adc
adc
sub
mov
clc
xchg
mov
std
cmp
orb
lds
sbb
inc
cmp
push
pop
cwtl
adc
sub
mov
jns
int3
inc
clc
push
in
mov
andb
jecxz
push
pop
hlt
into
xchg
xchg
ljmp
xchg
cmp
ljmp
sub
adc
jns
jecxz
paddusw
sti
xor
pop
cltd
xor
mov
aam
rcr
out
popa
push
mov
mov
inc
inc
jns
adc
int3
push
stos
and
inc
cmp
xchg
in
xor
aaa
es
insb
ja
ret
inc
jecxz,pn
jg
xchg
test
sub
mov
xchg
fdivrs
mov
push
test
mov
roll
mov
nop
fnstenv
scas
cmp
add
aad
push
test
and
pop
mov
arpl
jae
jle
rcrb
stos
rcll
push
movsl
into
jnp
pop
dec
and
test
cwtl
out
inc
stc
outsl
xchg
fnstsw
mov
lea
inc
and
decb
jmp
sub
lret
in
dec
or
and
push
jmp
xor
dec
cmpb
add
and
sub
jne
mov
int
in
pushf
jle
bnd
nop
cmp
stos
in
hlt
lret
mov
xor
push
fdivrl
sbb
pop
jbe
pusha
das
jnp
out
rclb
not
nop
mov
dec
pop
or
sbb
lret
fidivl
xchg
out
mov
dec
icebp
xchg
fstpl
inc
inc
adc
xchg
inc
aam
movsl
cwtl
add
inc
xchg
sbb
inc
lret
je
jecxz
cli
ficoml
shrb
or
jmp
mov
inc
dec
lea
mov
stos
out
mov
xchg
cmc
scas
dec
pshufw
push
adc
adc
inc
xor
roll
pop
repnz
pop
repnz
andl
sub
outsl
lds
cld
popa
in
stos
in
in
xchg
fstpl
ljmp
outsl
xor
ds
cmp
mov
cmpsb
and
add
lods
xor
cld
lret
and
cmp
outsl
cmpsl
mov
xorl
gs
ds
adc
pop
pop
xchg
hlt
aam
in
inc
leave
push
leave
mov
cmc
sbb
cmpsl
aam
lret
sub
cld
and
insl
ja
jle
outsl
in
mov
mov
push
jno
leave
lods
push
mov
cli
jae
out
shl
data16
testb
jl
scas
pop
xor
test
mov
xchg
mov
xor
or
pop
dec
je
and
mov
std
lret
push
test
mov
loope
out
jmp
cmpsl
mov
sbb
sti
fwait
xchg
lods
sti
dec
dec
movsl
pop
shr
scas
xor
lcall
icebp
ja
jl
push
loopne
xor
test
adc
and
daa
ljmp
nop
mov
jb
sub
or
scas
and
cld
jne
mov
add
cmc
dec
pushf
loope
jecxz
add
pop
jnp
dec
lahf
aaa
inc
jmp
mov
mov
in
mov
in
mov
cmp
or
fimull
popa
daa
mov
addr16
jp
cmp
mov
cltd
insb
loope
fsincos
cmp
das
xchg
sbb
shll
sbb
jp
cmc
insl
xor
xchg
mov
in
clc
and
mov
jecxz
outsb
mov
xchg
icebp
jb
push
pop
or
decb
xchg
or
imull
jno
sub
leave
and
enter
popf
jno
sub
adc
inc
hlt
mov
inc
pushl
jl
rorl
int
jl
into
test
sbb
aas
hlt
mov
xor
out
imul
repz
push
xor
enter
pop
in
pop
xor
leave
push
call
aas
aad
add
loop
dec
in
lret
pop
div
adc
imul
fs
mov
cmp
mov
fdivrl
jp
dec
push
xor
in
pop
mov
push
leave
pop
leave
ds
cs
ss
inc
push
out
das
das
push
ljmp
shl
mov
hlt
cld
mov
ja
cli
cs
inc
push
hlt
or
icebp
fwait
fwait
lods
psrlq
mov
bound
or
leave
add
adc
lcall
inc
xchg
rcrb
dec
and
jae
test
fistl
roll
movsl
fbstp
sbb
and
ret
inc
add
aas
mov
and
or
pop
test
cwtl
pop
adc
jg
in
xchg
popf
mov
push
in
cmp
inc
int
jae
inc
mov
subb
loopne
push
lcall
jne
imul
imul
sub
dec
mov
add
stos
shlb
mov
xchg
test
mov
fsts
aam
out
mov
add
push
les
add
inc
aam
imul
inc
jmp
lods
in
pop
pop
fdivp
test
int3
js
mov
sub
aam
dec
lea
shr
cltd
fsts
dec
rorl
test
and
sbb
daa
push
addr16
lret
push
xchg
out
pop
dec
dec
daa
push
dec
sahf
out
jecxz
jmp
les
mov
xlat
cmc
sub
dec
enter
icebp
cwtl
and
push
test
and
aas
pop
jbe
insb
scas
fwait
xchg
pop
nop
imul
pop
sub
pop
out
lds
jp
add
mov
mov
nop
mov
mov
mov
cmp
fidivrs
cmp
lret
pop
xchg
mov
insb
daa
loopne
out
and
lods
pusha
repz
jl
mov
and
mov
in
mov
xorb
cs
xchg
int
cmp
adc
mov
add
mov
lcall
enter
push
xchg
fisttps
stc
cmp
test
mov
cmpsl
loop
cmc
sti
dec
roll
jl
jno
xlat
stos
mov
pop
roll
outsl
fcoml
adc
pushf
pop
pop
pop
je
ds
pop
mov
cmp
push
push
ret
mov
pop
lahf
push
mov
test
dec
or
mov
cmc
push
insl
out
inc
jno
and
xorl
xchg
cli
in
dec
xor
mov
mov
rcrl
push
mov
leave
mov
test
xlat
dec
lock
lret
in
mov
inc
imul
testb
inc
sub
sbb
movsb
jl
mov
push
inc
pop
gs
sub
jnp
jb
mov
stos
jg
mov
add
mov
mov
jecxz
dec
jno
ja
jge
pop
sbb
cli
adc
test
das
imul
pop
mov
int
sti
std
rcll
das
pop
pushf
push
jg
adc
out
repnz
lods
fstps
sub
pop
push
icebp
mov
nop
insl
xchg
xchg
add
add
cmp
outsb
sbb
std
mov
push
repnz
pop
aaa
cli
cwtl
and
pop
pop
jae
cmp
xchg
inc
push
mov
rclb
sbb
clc
pop
jle
imul
mov
or
sbb
sub
adcb
push
lock
and
fsubrl
repz
repnz
inc
xchg
inc
stos
mov
jae
test
loope
out
js
loope
xor
aas
shll
sub
in
mov
add
pop
pop
sbb
add
xchg
mov
and
jecxz
in
cmc
outsl
mov
int
fisubl
push
or
mov
xchg
xchg
icebp
ficomps
add
jle
daa
icebp
sbb
sub
out
and
push
fcmovb
adc
and
mov
pop
js
es
mov
dec
call
ja
cld
add
in
fucom
push
sahf
gs
dec
adc
push
es
jle
popa
shlb
or
sbb
mov
jb
sbb
cmp
sub
mov
scas
jno
in
rcrl
clc
je
pop
xchg
xlat
pop
test
das
sbb
push
mov
or
or
or
ss
push
fisubl
or
mov
jecxz
xor
xor
add
add
test
int3
pop
push
jg
sub
cmp
and
nop
out
jnp
cmp
in
mov
sbb
aaa
cmc
div
ds
inc
popf
adc
adc
xor
or
dec
clc
pop
inc
mov
sub
sub
out
jmp
test
cmp
pop
dec
out
lods
test
pushf
xor
iret
adc
cmp
loop
inc
cltd
out
addr16
call
mov
dec
xchg
fnstcw
push
sbb
jg
aaa
mov
lahf
bound
in
add
jecxz
in
push
mov
leave
dec
cmpsl
inc
inc
dec
pop
fldenv
out
or
inc
mov
pushf
inc
test
jnp
sbb
ret
or
repz
mov
loopne
mov
roll
dec
dec
pop
cld
cmp
setbe
jp
or
aad
push
sti
sbb
fucomp
fists
and
mov
enter
dec
in
pop
sub
lock
data16
aas
mov
push
gs
shlb
lea
pop
adc
in
les
sub
jg
out
xlat
push
jmp
dec
mov
lahf
pusha
fwait
xchg
clc
leave
cmp
es
adc
jl
sbb
ss
jl
imul
mov
pop
lock
push
mov
movsb
fs
daa
dec
xchg
stos
mov
clc
test
mov
out
mov
cmp
pop
insb
daa
adc
sahf
or
lods
inc
cld
xchg
mov
cmp
ret
lods
adc
jo
pop
fsubl
lahf
ja
adc
ja
cmp
imul
sbb
stos
mov
jno
cmpsl
bound
mov
cltd
mov
inc
scas
add
cmp
in
mov
adc
cs
icebp
in
out
inc
js
sub
test
push
jae
out
in
fsubs
pop
adc
out
push
sub
sbb
subb
fucom
test
ss
scas
insl
sbb
jnp
cltd
mov
flds
sub
les
pop
push
add
ret
out
add
mov
jo
fistpl
and
sbb
add
mov
cmp
dec
aad
movsl
popf
in
sub
stc
push
mov
cmp
cmp
ja
std
mov
sub
mov
fistpl
enter
subl
cwtl
sbb
mov
insb
mov
cmp
outsl
dec
add
and
mov
or
pop
ret
or
jb
push
sbb
jge
add
lahf
sub
push
adc
inc
outsb
shlb
je
andb
mov
bound
ja
and
sub
cs
pop
loopne
fcompl
lcall
fisubrs
jge
clc
icebp
ret
fs
in
ja
mov
xchg
or
pusha
lret
dec
inc
mov
xor
sbb
mov
lcall
push
pushf
xchg
xlat
jg
push
sub
rcrl
lahf
cmp
fisubrs
mov
insl
pop
cld
std
es
lods
jg
clc
lds
popf
inc
add
cs
movsl
mov
adc
sub
jecxz
mov
lods
shll
dec
jmp
loopne
cmc
cmp
mov
push
out
inc
push
xchg
jo
cmc
movsb
push
mov
sbb
mov
ds
xchg
cs
mov
cmp
cld
in
sarb
aaa
outsl
dec
icebp
fsubs
lods
pushf
mov
bound
std
out
out
inc
and
stos
scas
dec
pop
aad
or
mov
inc
sub
jecxz
addr16
cmp
xlat
fwait
in
enterw
jno
inc
gs
jmp
pop
ret
mov
pop
mov
ss
inc
movsl
ret
or
push
pop
push
das
and
scas
ljmp
imul
repz
xchg
push
fidivrl
xchg
jne
clc
popa
sub
loope
push
adc
enter
in
adc
stc
push
fidivrl
dec
fidivrl
cltd
int
imul
out
and
mov
xchg
cs
out
call
mov
fdivl
add
inc
cltd
jmp
rcrl
or
test
sbb
jnp
sbb
mov
mov
bound
adc
push
lret
decb
imul
lock
xchg
daa
das
in
dec
fisubrs
dec
sbb
ret
lcall
addr16
mov
in
and
mov
aas
test
push
test
call
sbb
adc
jg
inc
or
sub
mov
sbb
pop
ret
jle
and
dec
dec
jae
mov
ret
pop
ss
dec
negl
or
mov
jge
call
cmp
add
rcrl
stos
mov
mov
pop
repz
sub
outsl
mov
adc
xor
inc
pop
pusha
pop
inc
jo
pop
ss
mov
xor
add
mov
jo
xchg
inc
fwait
scas
test
jmp
dec
fistl
mov
push
and
adc
int3
shr
inc
and
das
xor
fnstsw
xlat
pop
nop
cltd
pop
pop
push
push
pop
inc
pushf
jmp
cltd
push
outsb
scas
inc
dec
mov
les
mov
xchg
addr16
jae
mov
adc
lds
ret
push
mov
mov
adc
add
ljmp
and
add
ret
jne
orl
cs
mov
loop
nop
xchg
lahf
mov
cmp
testb
stos
jmp
xor
fwait
pop
mov
iret
addr16
stos
sub
inc
shlb
dec
iret
imull
jecxz
das
push
test
xchg
pushf
push
outsl
sbb
jb
cltd
add
pop
and
inc
std
cmp
imul
ljmp
bound
adc
sub
mov
sub
lds
push
cmp
xlat
outsl
lcall
rorb
jle
cmc
pop
jae
sbb
sbb
and
mov
mov
inc
fcomps
add
je
jg
and
outsl
mov
leave
sub
jle
andb
cmc
test
mov
cmp
dec
xchg
add
and
repz
cmp
dec
and
imul
fisubrl
sbb
xor
bound
inc
stc
cmp
push
subl
mov
inc
ret
mov
repz
or
shll
cmp
sti
orl
dec
pop
fdivr
jns
mov
or
xor
pop
gs
mov
push
sbb
xchg
out
mov
fwait
shrl
movsb
adc
lods
ret
jle
jns
xchg
hlt
rcr
or
cld
rcll
test
sbb
imul
rcll
xchg
addr16
subl
in
pop
fisubrl
mov
out
in
or
add
add
out
push
dec
int
addb
out
cmp
mov
xlat
sarb
ljmp
dec
sub
inc
and
sbb
lds
inc
and
outsb
cmp
mov
cmp
dec
sbb
xchg
sub
dec
fisttpl
jg
test
mov
imul
sahf
repnz
ds
insb
mov
imul
mov
sub
clc
sub
sbb
sub
cltd
stc
push
cld
mov
repz
and
and
and
jne
into
pop
leave
xor
add
movsb
jle
xlat
lods
cmc
scas
sahf
pop
push
sub
aaa
mov
repz
xor
mov
dec
insb
movsl
cltd
xlat
in
rolb
in
pop
jmp
pop
iret
sti
sub
dec
enter
add
or
sub
pop
or
inc
mov
mov
popa
or
ja
push
inc
movl
mov
mov
js
push
out
or
cld
mov
clc
repz
pop
or
inc
test
cwtl
dec
pop
lds
inc
pusha
and
push
addr16
mov
xchg
outsb
int
aas
insb
out
cmc
jl
push
fs
loop
push
outsb
in
ljmp
xor
jge
dec
es
dec
test
mov
enter
insb
fidivrs
ret
adc
xchg
leave
cwtl
mov
aas
loopne
cmpsl
and
jl
iret
fidivs
push
fbld
test
int
pcmpeqb
xchg
iret
jmp
xchg
fiadds
cs
xor
movsb
push
jecxz
add
dec
xchg
dec
mov
int3
out
mov
inc
pop
imul
lcall
dec
test
inc
push
aad
imul
int
or
or
push
ja
mov
cld
pop
pop
call
insb
adc
fstpt
dec
push
lds
loopne
xchg
cmpsl
push
sub
loop
stc
repnz
hlt
inc
cs
popa
adc
add
addr16
int
lret
mov
add
int3
ja
je
insl
sti
icebp
inc
dec
into
sbb
shll
sub
mov
stc
sub
ret
scas
lock
pop
cld
in
sub
movsl
aas
int3
add
jl
xor
adc
lcall
and
popf
mov
push
push
shll
push
imul
jmp
jmp
in
xchg
movsl
lods
cmp
jmp
jns
je
push
repz
lds
and
xchg
fsubrl
xor
mov
andl
movsb
inc
mov
ljmp
inc
mov
jns
mov
pop
pushf
mov
rorb
xchg
imul
xor
mov
adc
pop
leave
dec
leave
add
pop
aas
jno
shrb
iret
test
popf
push
lcall
pop
xor
push
xor
imul
mov
sti
add
pop
jae
add
lahf
mov
cmp
dec
scas
ret
sarl
repnz
jmp
cld
pop
push
aam
cwtl
mov
call
aaa
std
adc
add
faddl
filds
and
ret
mov
sbbb
subb
sbb
lcall
jnp
sarl
jg
sbb
add
popa
dec
and
cmp
test
fbld
xchg
sub
pop
lret
dec
lea
push
subb
or
out
nop
ds
ljmp
rcrl
mov
mov
cmp
fdivs
repz
icebp
xor
pushf
movsl
lret
pop
lcall
sahf
out
int
das
mov
or
fildl
sub
jo
fldl
mov
loop
lods
mov
insb
movsl
cmp
pop
or
shll
push
stos
loopne
jbe
sbb
sub
jp,pt
mov
sar
daa
mov
add
stos
add
jecxz
xor
xor
and
cltd
cmp
sub
ljmp
dec
enter
mov
fldcw
jns
adcl
xchg
cmp
xchg
mov
scas
insb
pop
cld
cmpsb
dec
jg
xbegin
inc
into
mov
addr16
mov
enter
jno
sbb
les
ja
xor
imul
pop
aaa
pop
sub
pop
iret
out
lods
loope
sarl
outsb
add
sub
adc
jge
cld
xchg
inc
gs
in
loop
mov
movsb
pop
clc
xchg
xor
mov
mov
mov
daa
jbe
mov
js
xchg
mov
mov
in
scas
repz
pushf
push
add
xchg
arpl
faddp
fnstcw
or
es
std
stos
inc
js
jge
inc
imul
std
stos
aam
movsb
cmp
xor
or
cmp
jno
lds
sub
pushf
fs
stos
test
outsl
mov
rolb
out
stos
add
scas
xor
push
shll
out
addr16
mov
pop
mov
sub
inc
pop
daa
mov
add
cmp
sub
fucomi
lret
push
jno
in
mov
test
and
clc
loop
push
or
sar
jo
idivl
cltd
push
mov
mov
xlat
pop
pop
push
mov
faddl
leave
push
lds
lods
int
xor
mov
pop
cwtl
jne
jp
jno
pop
push
add
mov
mov
repz
std
fidivrs
repz
cs
nop
gs
pop
sbb
jle
int
add
pushf
push
sahf
arpl
call
pop
loop
dec
cltd
shrb
inc
inc
jmp
not
push
xchg
or
jae
lds
sbb
cli
into
xlat
in
adc
mov
add
sub
js
push
xor
xchg
adc
mov
jne
push
inc
xchg
jbe
loopne
and
mov
inc
mov
popa
insl
aas
lcall
and
lods
mov
add
mov
loop
loop
repz
jge
es
lods
xlat
and
push
and
out
enter
or
sti
push
js
adc
inc
push
rcl
jae
addr16
lock
add
cwtl
inc
adc
mov
xchg
lds
pop
mov
out
test
je
jnp
adc
and
scas
sub
out
lret
xlat
pop
ficompl
jp
mov
dec
xchg
jp
inc
cmp
out
faddp
decl
mov
call
push
xor
movsl
dec
scas
lret
mov
mov
lock
sub
outsb
andb
mov
fistps
adc
mov
push
pop
mov
js
lret
ss
fcomi
cwtl
call
inc
fs
mov
ja
sbb
fwait
sbb
xlat
stos
xchg
je
pop
mulb
ss
xchg
add
mov
pop
push
lcall
imul
je
sbb
pop
enter
popf
icebp
out
sti
add
test
insb
inc
lods
push
jecxz
lcall
mov
mov
push
and
cmp
push
test
out
popf
sub
jp
cmpsl
jo
orb
ds
push
xchg
inc
sbb
or
cwtl
ja
arpl
mov
push
mov
mov
inc
and
xchg
imul
xor
push
mov
pop
push
pop
sub
inc
fidivrs
inc
xchg
or
les
sub
aas
mov
sub
xchg
inc
es
out
cmp
ljmp
dec
sub
fidivs
cmp
lret
and
sub
pop
stos
daa
mov
adc
push
stos
dec
push
mov
nop
dec
dec
flds
test
pop
or
fists
push
lea
and
lret
nop
inc
imul
repz
imul
and
movsl
dec
in
sbb
mov
pop
xor
mov
sub
lcall
dec
clc
mov
cld
inc
mov
loope
jp
jmp
stc
push
pushf
mov
adc
mov
jne
fsubrs
pop
xchg
gs
mov
push
ss
mov
and
test
es
pusha
adc
push
add
xchg
adc
xchg
lret
sahf
xchg
jg
push
stc
lock
mov
out
add
lret
and
imul
dec
sub
jp
fs
and
rorb
inc
dec
dec
mov
push
fiaddl
ds
jl
loopne
sti
out
xchg
repnz
or
xchg
add
iret
sbb
cwtl
fmull
mov
movsl
add
cs
cmp
je
mov
je
and
push
int
aas
cmc
jne
bound
pop
sbb
and
nop
push
cmp
mov
fnstsw
fsts
popf
test
dec
popa
fsubrl
clc
dec
push
inc
push
push
jae
and
xchg
ds
mov
push
cmp
jmp
icebp
mov
loop
test
jne
in
jp
ds
sbb
je
mov
mov
xor
xchg
fcomip
addl
sbb
mov
fwait
xchg
imul
or
cmp
xor
lods
dec
sar
jl
and
mov
or
aas
mov
pusha
jle
cmp
xchg
inc
inc
rcrb
push
clc
insl
xchg
and
or
push
sub
inc
fst
rclb
jecxz
inc
add
adc
in
sbb
lret
and
xchg
ret
imul
fdivl
inc
enter
call
and
or
cvttps2pi
adc
xor
aam
into
lret
push
jbe
outsl
pop
xor
push
sub
cmp
pop
fidivl
jge
insb
mov
in
nop
dec
mov
sub
jno
pop
dec
insl
cmpsl
and
jne
stos
jmp
mov
inc
jne
mov
add
jae
jae
cmp
pop
jmp
jne
loope
xorb
imull
add
cmpsb
dec
or
loopne
mov
xor
sbb
loope
int
test
clc
add
ret
pop
or
pop
jo
test
xor
daa
xchg
pop
into
stos
push
jns
dec
fs
sbb
push
jne
je
mov
fidivl
lods
call
pushf
jl
fnstsw
dec
lods
dec
jne
loopne
push
pop
sub
popf
sub
dec
ds
stos
xor
idivl
pop
iret
aad
stos
addb
lret
mov
fmul
lea
lock
and
mov
fdiv
pop
sbb
add
imul
push
jmp
cwtl
inc
imulb
cmc
test
test
hlt
adc
adc
out
and
in
dec
mov
or
sub
aaa
call
jg
jecxz
sub
fcoms
inc
fsubs
pop
adc
and
jp
push
dec
in
adc
pop
add
cmp
out
xor
lds
idivb
daa
rorl
or
mov
mov
imul
pop
or
mov
push
test
dec
loope
aam
pushf
dec
lods
ja
mov
xor
add
xchg
outsl
clc
jp
sub
or
sub
enter
cli
es
mov
pop
ret
lods
scas
pushf
jle
shll
mov
je
out
dec
and
sbb
xor
jmp
test
pop
idivb
outsl
pop
mov
rolb
movsb
push
fistl
in
mov
cltd
or
sbbb
movsb
cmp
scas
mov
scas
sub
rcrb
cmpsl
or
push
loopne
lret
dec
xchg
mov
fwait
sbb
loop
jo
and
inc
jmp
test
enter
sbb
enter
xchg
fldt
or
mull
in
mov
aad
mov
jns
xlat
sti
mov
push
add
dec
push
sub
test
inc
adc
test
out
lcall
xchg
fwait
push
addr16
xchg
sbb
aas
shlb
out
setno
xchg
in
xchg
push
cld
push
popa
pop
or
lcall
jns
mov
test
ljmp
adc
hlt
cmp
icebp
stc
dec
jmp
sub
push
mov
iret
pop
outsb
scas
mov
mov
inc
jo
and
sub
mov
fdivrs
imul
stos
pop
fs
inc
dec
pop
lods
cmp
cmp
push
aam
outsb
and
std
inc
sarb
dec
push
mov
xchg
repnz
push
jl
add
mov
js
cmp
sub
ror
dec
imul
sub
jbe
rcrb
add
jmp
jl
sbb
mov
or
lret
rorb
xor
pop
adc
imul
sbb
popa
into
mov
sub
jns
jno
mov
mov
mov
xchg
inc
loope
andb
stc
add
cmc
ret
aad
adc
lret
mov
int3
clc
dec
dec
out
mov
cmp
cmp
mov
test
push
mov
adc
sbb
mov
and
mov
test
out
or
aas
pusha
sbb
sbb
cmc
in
mov
or
stc
aam
mov
push
jmp
movsb
mov
pop
aad
xchg
xor
sub
stos
pop
movsb
push
xchg
pop
into
dec
ljmp
pusha
sub
push
push
popf
sarl
ret
sysenter
xor
inc
icebp
mov
push
or
sbb
shrb
insb
pop
dec
jle
xchg
out
push
xor
insb
aad
mov
lods
sbb
mov
xor
xchg
imul
insb
cmp
mov
xor
scas
clc
xchg
xchg
mov
fidivrs
push
rcrl
insb
add
icebp
add
test
and
popf
dec
les
push
subb
pop
add
mov
jo
inc
dec
xlat
xor
imul
sub
and
andl
test
adc
sbb
xor
or
mov
adc
in
xlat
bnd
mov
pop
subl
sbb
mov
lcall
je
push
movsb
xor
cmp
test
sbb
movsb
in
inc
pushf
adc
sub
jle
push
in
js
add
sarl
inc
push
lahf
or
add
arpl
pop
and
or
xchg
je
lcall
jnp
mov
jbe
adc
sub
outsl
rorl
dec
mov
hlt
or
cld
pop
pop
mov
sti
mov
sub
gs
and
mov
aaa
push
aam
dec
out
fstpt
mov
pop
enter
sbb
or
jo
pop
sahf
lds
jb
sbb
fisttpl
gs
mov
sbb
sbb
mov
cmpsb
cmc
scas
pop
jge
or
pushf
xchg
add
xor
stos
xor
movsb
pop
neg
cmp
pop
sub
jo
sub
sbb
imul
mov
adc
and
mov
push
add
push
mov
aaa
cmp
push
pop
cmpsb
or
pop
ja
cmpsb
fisttpll
inc
repz
into
ret
mov
push
jne
out
das
mov
sub
cmp
lods
cmpsl
rcll
cmc
cs
and
add
push
js
inc
test
sbb
mov
mov
fnstsw
scas
inc
sti
sbb
xor
jns
jb
sub
ret
sub
jle
push
neg
lret
roll
jno
inc
sub
rcrb
test
add
int
sbb
inc
call
jb
daa
push
fmuls
push
dec
mov
popf
fcomps
das
push
xlat
pop
jb
mov
mov
sbb
jp
in
rorl
fstpt
in
jbe
jbe
push
lods
xor
pop
push
leave
mov
stos
stos
shlb
fs
test
add
adc
gs
pop
out
test
outsb
mov
cmc
xor
ljmp
outsb
mov
aas
mov
xchg
shlb
mov
aam
repnz
xor
or
xorl
lock
push
mov
inc
mov
push
cmpsl
cmc
ljmp
inc
daa
rorb
cld
mov
dec
mov
cs
push
inc
mov
inc
shll
xchg
test
lcall
dec
nop
rcrl
scas
mov
mov
addb
rcrl
out
testl
fstps
jle
fidivs
andnps
mov
divl
fiadds
cld
and
mov
jl
xor
outsb
dec
into
filds
ret
and
pop
pop
aad
imul
push
inc
shr
clc
mov
cwtl
frstor
hlt
mov
push
bound
icebp
scas
out
mov
fidivs
add
adc
push
fcoml
jbe
sbbl
clc
xchg
pop
sbb
fstl
fnstcw
fsubl
push
out
imul
out
cmpsl
xlat
rolb
jo
push
fnstenv
jo
loopne
jae
testl
jecxz
and
dec
lahf
stos
out
push
stos
in
cwtl
cs
xor
shrb
push
inc
xlat
rolb
xlat
jle
test
lods
sub
adc
sub
fwait
addr16
or
cli
enter
adc
insb
push
stos
mov
adc
jns
mov
pop
sbb
cmp
adc
sub
icebp
jecxz
cmp
pop
fnstsw
inc
adc
mov
scas
test
clc
cmpsb
mov
std
adc
push
push
loop
rcrl
sub
mov
faddl
pop
pop
cmpsb
mov
sub
mov
jne
fwait
sahf
xchg
cltd
jp
sub
mov
and
in
mov
scas
enter
outsb
mov
scas
xor
sub
jne
adc
pop
cld
sub
pop
pop
cmp
ret
inc
popf
inc
aam
iret
lds
xor
and
dec
and
lods
sbb
and
cmp
mov
inc
lods
in
xor
add
aam
insb
int
divb
sbb
xchg
pop
push
in
lods
mov
shrl
dec
xchg
xor
shlb
cwtl
add
lcall
push
nop
and
std
rorb
int
les
mov
and
inc
inc
les
push
mov
fs
mov
mov
jg
and
jae
sbb
movsb
inc
aas
xchg
mov
mov
sub
xchg
xchg
cmp
rorb
pushf
cmp
fmull
dec
jbe
mov
dec
inc
arpl
jno
loop
inc
rcl
cmp
push
ret
divb
jo
pop
lea
push
xor
push
fildl
in
sti
jp
jo
or
xchg
jl
mov
pop
xor
adc
mov
pop
cmp
ret
inc
mov
int3
cwtl
stos
hlt
gs
push
dec
xor
sti
test
push
sbb
jnp
popa
aaa
mov
adc
add
lods
and
cmpsl
pop
repz
mov
stos
sbb
jns
mov
or
pop
adc
adc
das
mov
lret
sbb
add
jo
aaa
test
mov
iret
loopne
mov
xor
mov
mov
ret
dec
push
inc
movsl
or
fsts
cwtl
incb
jb
push
inc
std
jo
add
inc
ja
sbb
fwait
cmpsl
sub
sub
popa
xchg
mov
rorl
les
cmp
jp
out
push
fs
xchg
lea
cltd
sbb
fsubs
pop
gs
insl
subl
mov
sti
es
stc
testb
repnz
rclb
sbb
jns
nop
jl
lds
push
adc
in
adc
repnz
int3
mov
mov
pop
add
sub
sti
jmp
push
or
outsl
inc
dec
push
mov
xchg
shll
or
je
add
dec
cwtl
shrb
or
mov
push
ret
mov
sbb
and
mov
xlat
cmp
cmpsb
mov
and
test
scas
cs
fdivrl
sahf
ror
cmpsb
adc
hlt
das
arpl
cwtl
xchg
mov
fmulp
lods
ret
xor
aam
lock
pmaxsw
repnz
lret
out
sbb
xchg
push
and
insb
pusha
mov
adc
mov
inc
mov
in
xchg
arpl
out
out
inc
xor
addr16
xchg
xchg
xor
mov
sub
mull
jmp
and
pop
or
sbb
mov
out
sbb
sub
leave
fs
jg
xchg
leave
movsb
stc
push
sbb
add
jbe
jo
sarl
or
popl
sub
into
pop
mov
add
fadds
pop
in
aaa
lods
movsb
inc
inc
mov
inc
sarb
jb
cmpsb
adc
sti
psubsw
sbb
mov
push
movl
pop
inc
fisubl
leave
and
xor
dec
clc
out
mov
imul
imul
push
shll
jbe
and
icebp
xchg
in
sbb
outsb
lds
andb
fildl
mov
imul
cmp
sbb
mov
js
jno
pop
stc
pushf
mov
mov
inc
sti
xchg
push
dec
leave
sbb
repnz
inc
cld
or
scas
inc
and
xor
in
orb
or
int3
inc
xchg
inc
test
push
in
cli
mov
aaa
stc
jge
push
mov
js
int
push
xlat
jmp
jb
sbb
pop
jno
jo
sti
jo
scas
dec
les
inc
fcoms
repnz
xor
jno
in
pop
int3
sub
sbb
mov
pop
ss
iret
imul
out
movb
pop
pop
mov
sahf
ret
mov
ljmp
mov
and
nop
sub
mov
mov
adc
cli
xchg
daa
push
or
cmp
sbbl
jmp
aas
jne
inc
es
jb
xchg
pop
test
mov
in
enter
mov
jmp
int
mov
inc
mulb
pusha
jle
iret
sti
std
push
ret
fistpl
ja
dec
mov
fs
ret
lods
lods
cwtl
jecxz
and
into
sbb
out
mov
rcl
jns
imul
iret
cli
and
push
jbe
aas
dec
mov
pop
out
ret
or
or
rcrb
sub
mov
stos
mov
and
sbb
inc
adc
jns
adc
dec
sub
loope
gs
adc
pop
movsl
leave
and
mov
adc
mov
filds
adc
aaa
pop
inc
cmp
dec
mov
sbb
or
mov
in
mov
loop
movsb
in
jne
sbbb
inc
repz
shrb
dec
jb
sbb
in
rcr
add
sub
dec
cli
frstor
dec
aas
inc
mov
repnz
push
jnp
mov
movsl
loop
loopne
addr16
xlat
fcomps
mov
daa
ret
dec
xor
enter
adc
test
add
lret
sub
sub
mov
loop
test
and
or
push
aaa
inc
and
push
inc
pop
dec
fs
stos
pop
and
lods
push
shrl
jle
lea
dec
adc
sub
jg
mov
inc
cmp
sbb
xlat
mov
test
xor
cmp
out
cmc
ljmp
mov
inc
adc
push
and
xchg
and
ss
jge
sub
arpl
mov
ja
mov
les
add
xor
clc
push
pop
jns
lahf
rcrl
loop
daa
sbb
stc
and
je
mov
xchg
dec
add
jo
adc
push
jae
stos
push
push
mov
push
insl
test
jecxz
in
pop
and
dec
xchg
clc
test
fdivp
imulb
je
out
fidivrl
das
fildll
popf
popf
outsl
notl
sbb
mov
and
popf
push
push
cli
bound
pop
fists
test
das
mov
mov
aad
pop
pop
pop
xchg
in
sbb
xchg
imul
add
lods
sbb
inc
rol
xchg
fistps
out
add
and
insl
mov
mov
pop
rcll
addl
mov
lret
mov
and
fmuls
lds
xchg
cmp
push
push
sub
xchg
push
sbb
and
jns
ja
clc
lods
lea
lea
icebp
xor
mov
mov
xchg
fsubl
xchg
outsb
repnz
test
jp
test
inc
mov
inc
or
sti
or
jo
imul
int3
popf
fistl
movsb
imul
jnp
sub
add
out
xchg
aam
mov
aaa
shr
or
or
jl
pop
mov
loopne
mov
les
or
jge
pop
jp
cltd
lods
test
push
sub
jnp
sub
stos
jle
sbb
out
in
sbb
inc
xor
fucomp
jle
mov
cs
mov
xlat
lea
sub
mov
je
cmp
in
push
hlt
ja
push
fsts
shl
fidivrs
mov
lret
scas
movb
fldenv
cmp
push
sti
mov
lods
orb
push
popf
xor
mov
or
mov
lock
jb
pop
cmp
cmpsl
fs
push
or
out
in
loop
rcrb
dec
sub
adc
out
repnz
inc
or
pop
push
pop
xchg
arpl
test
mov
movzwl
loop
jmp
dec
sub
leave
jbe
lea
mov
stc
push
lea
xor
mov
push
lcall
sbb
add
mov
push
adc
or
push
push
cmp
and
push
mov
pop
arpl
mov
mov
aad
or
dec
jg
rcll
cmp
es
js
mov
sbb
dec
cwtl
jg
jg
les
mov
loopne,pt
je
dec
aad
xchg
mov
mov
push
mov
scas
adc
cltd
in
pop
mov
mov
inc
xchg
in
lock
jecxz
lahf
fdivrl
push
dec
setp
jle
aam
sub
movsl
lret
and
out
aam
mov
call
stos
movsb
sub
mov
cmp
inc
call
call
inc
pop
xor
and
cmp
decl
es
insb
dec
add
fmuls
dec
je
adc
pop
mov
inc
mov
mov
ljmp
fadds
xor
jmp
movsl
ret
fistps
cli
negl
xchg
xchg
fmul
cmpsb
push
repz
pop
or
jp
lds
mov
cmp
dec
or
rolb
mov
enter
cmp
push
dec
cmp
aam
popf
shlb
cmp
loop
fisubrs
inc
test
dec
dec
push
push
lock
cli
leave
es
mov
jno
sbb
or
add
xchg
pop
sub
or
fisttpl
out
cwtl
ja
sti
scas
and
aam
or
cmc
loop
xchg
xor
daa
sub
into
cmp
and
stc
inc
outsl
fcomps
bound
xchg
or
adc
push
js
pop
mov
pop
adc
imul
cmpsb
cmp
or
jmp
xor
cld
push
into
xor
std
out
cmpsb
sub
pop
push
sbb
flds
mov
dec
loop
mov
add
or
sbb
popa
sub
sub
jg
ljmp
test
ss
add
push
rclb
cli
pusha
jg
in
insb
jge
cmc
cmpsl
mov
jg
or
pop
xchg
fs
cmc
adc
test
or
scas
cmp
imul
or
in
mov
dec
adc
out
mov
pushf
aam
inc
pop
lock
call
les
daa
jge
push
jle
mov
lahf
shll
hlt
in
mov
pop
pop
push
mov
sub
bound
mov
add
xchg
xchg
mov
shll
xor
adcl
mov
cwtl
dec
and
roll
adcl
mov
in
adc
and
xchg
pop
dec
stc
ja
or
xor
sub
pop
or
aad
repz
lahf
addb
inc
scas
xor
pop
nop
lods
push
pop
loope
inc
push
dec
fdivs
sti
adc
cmp
add
inc
dec
jnp
rcll
fstpt
jle
repz
int3
cmp
cmc
mov
cmp
mov
popf
cmpl
sub
sbbb
nop
push
jo
imull
mov
mov
jno
js
cld
andl
dec
cmp
jge
dec
adcl
jmp
and
and
lods
adc
and
cli
daa
stc
scas
jae
push
xchg
cwtl
ja
dec
jge
xchg
jmp
das
or
adc
fwait
jmp
test
jge
mov
ljmp
outsb
shrl
call
pop
adc
jne
mov
cmp
repz
jg
mov
fwait
sbb
outsl
pop
loop
sbb
loopne
push
enter
xchg
ja
jno
icebp
add
xchg
add
and
outsl
mov
add
jle
cmpsb
insl
push
add
loopne
jb
jmp
pop
push
adc
xchg
add
sbb
push
cmc
xor
mov
lods
cltd
cmc
xchg
inc
iret
mov
dec
mov
aad
inc
lahf
sbb
push
cli
cwtl
and
lea
jne
jne
repz
add
push
outsl
pop
pop
inc
sub
sti
adc
nop
add
ret
mov
js
pop
add
and
fsincos
ret
lcall
cmpsb
nop
adc
inc
adc
dec
pop
stc
ja
mov
aas
sbb
jo
adc
aam
jo
lret
call
mov
xchg
cmc
jge
pop
and
adc
out
pop
and
sub
push
lock
lret
psraw
mov
rcrb
mov
mov
outsl
mov
out
mov
daa
mov
inc
mov
dec
cmc
dec
xor
pushf
cpuid
ret
pusha
jg
imul
or
pop
add
pusha
cmp
fucomip
jg
adc
add
xchg
inc
bound
push
stos
push
mov
shlb
pop
pop
pop
pop
mov
inc
mov
jmp
mov
pop
adc
in
int
push
in
test
push
lret
loopne
mov
pop
dec
lret
xchg
pusha
mov
repnz
cmp
push
or
ficomps
inc
rol
sub
cmp
jg
inc
dec
jns
mov
xchg
scas
lret
fxch
fcmovnu
lret
and
dec
mov
sahf
les
xchg
push
fst
jo
sbbb
sub
cwtl
pop
divl
std
sub
add
add
cld
test
scas
rcl
stc
push
push
inc
imul
push
aam
xchg
inc
cli
lock
outsl
and
scas
out
loope
push
jmp
ljmp
div
jae
movsb
mov
jno
or
xor
loopne
cmpsb
xor
pop
loopne
pop
outsl
mov
fucomip
inc
sub
jle
mov
push
xchg
pop
test
adc
aaa
jne
out
dec
andl
pop
movsl
cs
jo
and
xor
jge
push
ljmp
jnp
jns
sub
push
int3
mov
xchg
sub
mov
push
loop
xchg
xor
stos
mov
cmp
lods
xor
jbe
mov
push
test
pop
xchg
xor
jp
ds
popf
into
cmp
leave
mov
sbb
push
xchg
mov
cs
les
repz
in
or
pop
shl
sbb
pop
jae
sar
add
iret
sbb
dec
in
jo
mov
xchg
jo
cmp
jns
inc
xchg
xor
mov
sbbl
and
mov
adc
mov
andl
or
sub
aam
or
or
adc
xor
mov
roll
push
mov
or
test
cmpsl
xor
or
imul
pop
cmp
xchg
sub
xchg
lods
popf
ljmp
xchg
push
fisubs
cmp
inc
mov
dec
jl
dec
pop
cld
xchg
jae
aam
push
js
mov
daa
inc
sbb
jle
loopne
iret
cmpl
popa
fwait
add
gs
bound
pop
les
repnz
pop
fs
mov
fsub
ret
sub
push
jb
adc
add
dec
in
lods
push
push
rcrb
push
sbb
xor
xor
pushf
and
aad
lret
fists
orb
add
ret
push
inc
and
bound
mov
jnp
bts
mov
aad
pushf
sbb
push
cmp
pop
fnsave
imulb
inc
xchg
adc
aad
mov
andl
jno
pushf
sub
aaa
adc
loop
into
inc
push
ljmp
stos
jbe
pop
nop
mov
mov
dec
mov
test
aam
adc
imull
jb
cmp
push
daa
shrb
mov
cmp
gs
cmpb
xchg
out
dec
div
or
jge
dec
jo
mov
pop
push
imul
rcl
div
daa
ret
xor
cwtl
mov
stos
cwtl
decl
inc
adc
pop
adc
fwait
mov
sbb
or
out
mov
or
add
dec
sbb
lret
cltd
sub
fadds
dec
push
stos
gs
cld
jo
xchg
ljmp
mov
dec
fdiv
orb
xchg
adc
inc
fbld
sbb
push
cltd
outsb
int3
or
fwait
scas
lds
sbb
mov
cmpsl
fdivrl
lret
push
sbb
adc
orb
repnz
movsb
xchg
cmp
xchg
mov
in
adc
rdpmc
dec
fwait
lods
sbb
pop
inc
inc
lods
imul
push
lret
gs
mov
mov
add
mov
xchg
mov
jmp
fidivl
stos
int
add
mov
les
mov
pop
jns
aas
fisttpll
pop
nop
sbb
enter
mov
jnp
adc
in
mov
mov
rolb
or
shl
popl
jnp
jge
and
inc
jo
out
xchg
jmp
add
add
in
aas
lods
push
test
inc
pushf
in
sbb
push
shl
in
add
cmp
lods
add
adc
or
ja
lcall
mov
cmp
fsts
ja
call
pop
xor
outsl
rcl
mov
sbb
aad
pop
fs
in
inc
mov
jp
pop
mov
push
fs
loope
popf
and
or
inc
ja
or
xor
cld
add
dec
pop
sub
push
add
enter
xor
or
inc
dec
out
dec
lret
stc
xchg
push
inc
insb
inc
sahf
add
mov
shrb
imul
sti
push
add
mov
pop
inc
cld
and
jecxz
or
add
jmp
mov
fimuls
ror
test
inc
or
xchg
aas
push
and
lcall
cmp
cmp
jbe
dec
jmp
dec
push
cmp
aad
repnz
add
arpl
gs
cmp
scas
shl
mov
sahf
mov
pop
sti
sbb
mov
out
jbe
dec
ljmp
and
jle
frstor
lock
out
dec
sub
add
daa
das
add
jns
out
hlt
jecxz
dec
lods
mov
das
adc
xor
lcall
idiv
and
inc
sbb
call
mov
pop
inc
aad
adc
test
icebp
dec
test
jb
mov
mov
push
in
pmaddwd
push
xchg
dec
dec
cmp
sub
sub
xchg
ds
shr
je
mov
pushw
enter
sbb
adc
pop
sahf
lods
adc
in
stos
shrb
add
xchg
add
mulb
push
sbbl
hlt
aad
add
fistps
test
aaa
in
fwait
and
add
call
and
adc
jo
jae
cltd
ficomps
sub
pop
pop
xor
jmp
das
adc
repnz
sbb
sahf
sbbb
inc
mov
rcr
cmp
scas
fidivrs
xchg
in
adc
ret
stc
mov
movsl
sbb
cmp
sub
push
popa
xchg
adc
js
xchg
stos
dec
movzbl
sbb
mov
push
or
xchg
scas
pop
mov
mov
adc
push
je
add
jecxz
jg
inc
and
jo
jle
or
fmuls
mov
daa
in
ljmp
dec
inc
add
xchg
pop
adc
and
pop
mov
enter
int3
imul
xorl
pop
adc
mov
call
xlat
add
cwtl
popl
mov
rorl
inc
test
fldcw
cmc
jb
sbb
mov
ss
aam
jbe
lea
ss
rcll
fidivs
inc
stos
dec
mov
cwtl
jmp
and
lds
xchg
decl
mov
mov
push
inc
xor
mov
ret
mov
std
mov
outsb
sti
test
arpl
mov
cmp
lret
add
jns
inc
mov
test
jb
pop
cmp
add
adc
aas
mov
mov
jmp
rclb
add
inc
inc
lods
dec
mov
repz
dec
dec
and
jo
xchg
xchg
lods
pop
mov
loope
cmp
push
pop
clc
pop
or
xchg
cmp
pop
in
add
jne
sbb
outsl
pushf
jnp
push
loop
icebp
cmc
cltd
dec
sbb
jl
inc
xor
idivl
sahf
dec
push
or
and
inc
mov
inc
sub
xchg
ja
mov
and
sub
enter
fistpll
fcompl
xchg
cli
aaa
mov
clc
enter
cli
xor
xlat
sbb
ss
cli
popw
std
cmc
cmp
ret
add
sub
dec
pop
pop
ret
xchg
popf
or
xchg
inc
pushf
repz
les
jns
inc
or
dec
inc
ljmp
loop
jnp
or
adc
push
sub
push
mov
jge
shl
andb
pop
sbb
add
pop
popa
out
dec
aam
sbb
gs
jo
xchg
xchg
test
push
mov
ljmp
sub
dec
out
push
loope
add
adc
imul
ds
dec
pop
cmp
ja
dec
sub
ret
dec
out
mov
jle
enter
add
les
and
aam
out
in
sbb
xchg
dec
cmp
repnz
in
mov
cld
mov
add
call
fs
mov
jmp
mov
fldcw
cmp
push
dec
mov
dec
cmpsl
adc
sti
neg
pop
inc
ds
mov
jp
sub
jecxz
bound
mov
mov
and
out
lret
dec
adc
add
arpl
and
int3
test
mov
or
cmp
cmp
or
subl
jns
push
xor
fwait
sbb
in
int
push
pop
xchg
outsb
adc
shlb
adc
and
mov
mov
or
movsl
aam
sub
sub
pop
fldcw
repz
js
jns
out
inc
and
or
aam
jae
test
cmp
or
lret
js
test
pop
add
aam
jbe
mov
and
je
push
fidivrl
add
sub
xor
dec
push
mov
push
push
js
cmc
inc
and
cmpsl
jmp
mov
mov
out
sub
xor
mov
mov
sub
int
mov
sbb
dec
or
fistps
imul
xor
lds
in
dec
pusha
or
mov
sbb
or
and
push
jle
nop
in
adc
data16
inc
lock
movsl
insl
mov
cs
out
jmp
xor
xor
adc
cmp
cmp
push
pop
mov
int
mov
mov
sar
enter
and
fmul
ja
adc
add
mov
clc
ficomps
dec
aad
std
movsl
lock
popa
xchg
mov
xor
sub
and
test
inc
xchg
sahf
cmc
arpl
enter
lea
fwait
cmpsl
js
lcall
xor
sbb
add
mov
loop
push
mov
sbb
inc
jb
mov
ret
mov
daa
test
outsl
test
gs
rorb
in
add
lcall
mov
rolb
jge
flds
iret
popa
jne
fwait
sahf
mov
or
in
ds
fistpl
and
add
ficompl
mov
repz
fmulp
scas
xor
jae
push
stos
in
dec
in
fimull
jge
out
push
fldpi
rolb
test
scas
icebp
lcall
std
mov
cmc
pop
or
mov
cld
inc
popa
sti
popf
clc
fldcw
sti
lret
mov
shr
push
aam
dec
jecxz
xchg
xor
sbb
jb
mov
sti
repnz
das
stos
in
shrb
pop
cmp
mov
cld
notb
rol
loope
fwait
sub
in
sahf
mov
add
sbb
imul
pop
mov
ss
clc
sub
jbe
fwait
pusha
xor
iret
pop
lods
loope
mov
divl
adcl
nop
jo
loop
in
int
popa
xchg
dec
cmp
xor
daa
sub
cmp
clc
sub
outsl
jno
xchg
imul
cmp
add
mov
pop
aaa
test
add
ja
push
lods
push
cmp
int
xor
fcmovbe
jecxz
mov
imul
out
daa
je
mov
dec
dec
aaa
loope
roll
lods
push
in
mov
jnp
pop
inc
sub
sbb
xor
pop
sarl
mov
gs
loope
jl
sub
jecxz
mov
and
outsb
jmp
cmp
and
out
jp
inc
out
loop
int
mov
xchg
xor
and
shll
jo
mov
les
daa
jle
addl
xchg
fnstcw
lds
cmp
sub
xchg
push
iret
fwait
call
mov
cltd
mov
mov
out
dec
lods
adc
dec
inc
out
sub
dec
in
mov
and
push
mov
pop
lahf
xor
hlt
mov
cmpsl
jo
mov
add
sbb
dec
inc
jne
sub
repnz
push
outsl
roll
mov
dec
shr
mov
push
gs
pusha
sbb
add
mov
out
jle
mov
pop
inc
ljmp
popf
ds
jns
sub
add
out
pop
xor
cld
pop
push
mov
in
lahf
aaa
jae
sub
aam
movsb
push
test
push
icebp
push
shrb
ficoml
scas
cwtl
imul
inc
push
jl
dec
lcall
jae
adc
push
push
rorb
aad
inc
cmpsb
pop
test
fldl
jmp
jecxz
xor
xchg
insb
push
daa
sub
sbb
daa
pop
rolb
jno
int3
stos
flds
lcall
adc
and
sub
arpl
sbb
bound
xchg
clc
xchg
mov
and
and
xor
push
clc
jns
lret
aaa
sahf
pop
data16
sbb
or
es
dec
pop
ljmp
ret
sbb
insb
or
or
pushf
xor
jo
inc
sub
xor
enter
fadds
stos
lods
jecxz
in
mov
add
sahf
inc
pop
stos
push
mov
lods
jge
cmp
out
clc
out
mov
cltd
popf
js
jp
lods
or
daa
mov
mov
je
xor
xchg
adc
jge
push
ljmp
inc
sti
sbb
adc
mull
bound
cli
inc
fadds
inc
scas
pop
mov
lahf
test
inc
mov
and
repnz
out
lcall
test
push
dec
fisttps
subl
movsb
jns
sub
daa
mov
or
bound
daa
pop
or
jmp
cli
jg
xlat
insb
lret
mov
dec
or
xor
mov
popf
fisubrs
mov
je
int
jno
sarl
pop
xor
int
jne
dec
jl
push
not
shll
outsb
repz
add
jge
add
add
lea
aas
cmp
aaa
shl
push
fldt
mov
fmuls
fs
xchg
xor
fyl2x
iret
push
sub
push
insl
adc
and
in
mov
xor
sbb
mov
int3
repz
xchg
shr
xchg
out
xchg
push
xchg
sub
in
mull
ja
enter
and
mov
pop
test
push
imul
daa
push
cwtl
popl
dec
repz
insb
xchg
test
out
in
mov
adc
jno
or
jmp
nop
lock
imul
jmp
ja
jno
loopne
adc
stos
scas
mov
icebp
mov
shl
sub
mov
lds
rcrb
push
roll
dec
stc
jg
nop
pop
inc
scas
ret
pop
jnp
push
in
cli
ret
test
or
stc
fcmovnu
call
cmpb
add
and
mov
cmp
sub
sbb
into
lret
ret
push
sub
cmc
mov
push
push
pop
movsb
fcoml
leave
or
jb
lods
data16
inc
jp
fwait
cltd
adc
push
lret
xor
sti
or
xor
jecxz
lock
sub
pop
jbe
xorl
mov
pop
imul
fsubrs
rol
inc
fwait
sub
jle
stc
andl
dec
arpl
fcoms
ficoml
arpl
push
fadd
lahf
cld
call
xor
into
cmc
repz
shrl
jns
stc
inc
jb
mov
push
add
xlat
jbe
jmp
sbb
push
mov
lret
divl
fwait
pop
sbb
fdivr
push
mov
loopne
cmp
popf
inc
gs
in
frstor
stc
loopne
jnp
inc
stc
cmc
sahf
shl
loope
adc
xchg
jecxz
push
xchg
jbe
in
xor
push
scas
scas
icebp
mov
fnstcw
bound
cwtl
jl
xchg
ret
das
ljmp
xor
or
inc
sub
je
mov
iret
nop
cltd
int
dec
sbb
sti
jo
leave
mov
or
dec
gs
scas
adc
sub
pop
incb
ret
add
jnp
loop
mov
mov
shll
stos
lock
dec
xor
aaa
and
cmp
inc
and
mov
outsl
shlb
fucomp
lret
subb
pop
mov
leave
cltd
mov
ss
loope
dec
push
js
ja
sbb
dec
cmp
inc
mov
jg
cmpsl
bound
clc
pop
xchg
push
mov
xor
adc
and
mov
jne
cmp
fldcw
fcomps
cltd
in
rcll
ss
adc
lea
in
jae
loop
repz
stc
lods
mov
mov
outsl
call
mov
test
cmp
mov
int
sbb
vpsubsw
dec
mov
jns
ljmp
sub
cmp
pop
mov
fcmovb
in
in
and
push
mov
and
xchg
adc
pop
loop
jle
out
mov
es
test
push
adc
in
popa
mov
movsb
pushf
mov
test
jo
fwait
nop
xor
xchg
jle
sbb
das
cmc
iret
call
mov
xchg
sbbl
out
cmp
add
xor
ja
movsb
inc
movsb
inc
jo
inc
sub
pop
lock
loope
jnp
jns
inc
xor
xlat
mov
je
push
in
pop
bound
shlb
aad
pop
movsb
mov
test
movl
aas
ret
cmp
push
out
sub
jle
or
adc
pop
icebp
rolb
faddl
vhsubpd
cmp
sarl
adc
cmpsl
pop
js
outsb
inc
js
push
orb
rol
mov
sbb
dec
into
int
dec
scas
dec
out
jg
stos
fbstp
mov
ret
mov
loope
xor
xor
das
mov
sub
mov
jo
inc
jecxz
or
lret
imul
rorb
call
loope
ss
arpl
adc
ljmp
test
stc
mov
sahf
cmp
out
pop
lock
scas
inc
or
cwtl
jae
jg
mov
lock
dec
jp
insl
jl
mov
sbb
sub
es
sti
dec
and
mov
mov
cmpsb
mov
cwtl
outsb
pushf
mov
jl
add
mov
cmpl
scas
jno
icebp
mov
and
rclb
lret
adc
jae
sbb
cs
sub
or
sti
inc
sbb
test
aas
and
push
xor
mov
shll
sub
imul
jno
pop
cmpsb
jno
ret
xchg
clc
sub
mov
or
add
pop
mov
mov
cld
gs
mov
mov
sub
push
addr16
rorl
jo
push
insb
fwait
int
push
or
jbe
fsubrl
adc
cli
cmpsl
xor
in
adc
popf
pop
fdivl
cmp
ret
jmp
stc
daa
mov
in
push
pop
pop
inc
loop
and
mov
scas
mov
scas
mov
testb
jg
out
push
sub
jp
mov
aas
push
or
jne
sbb
adc
mov
ret
insl
and
xorl
fadds
stc
int3
sbb
push
cmp
xchg
ljmp
lods
outsl
pop
ss
scas
repz
les
pop
cmp
in
call
jns
pusha
and
push
negl
shll
gs
jmp
nop
pop
dec
repnz
scas
in
sub
mov
push
jmp
daa
add
mov
push
add
xor
adc
call
or
leave
cmp
lods
pop
test
xor
fcmovnb
lea
lods
mov
jmp
and
imul
or
cwtl
or
push
dec
scas
nop
inc
xchg
dec
mov
sbbb
mull
enter
push
cwtl
arpl
mov
jp
fs
push
movsb
mov
data16
rcll
inc
xlat
push
sub
pop
xor
push
loope
aad
jno
hlt
jp
jb
dec
jg
jl
jmp
aam
orb
push
jge
cmpl
aam
jno
sub
call
jae
rorl
jns
xchg
int
ss
mov
push
stos
and
cmpsb
sbb
mov
fsubrl
nop
mov
inc
cli
mov
in
cmp
into
fs
lcall
or
mov
nop
in
push
pop
out
mov
decb
or
or
and
pop
push
repz
je
and
add
mov
int
mov
je
ljmp
into
jg
mov
mov
scas
in
fcmovnbe
mov
cmp
test
mov
arpl
dec
jmp
das
movsb
dec
lret
out
mov
jmp
idivb
jp
jle
adc
nop
pop
xrelease
xlat
xor
mov
lret
xchg
jp
jl
adc
push
inc
repz
lret
int3
cmpsb
aad
test
mov
int3
inc
out
mov
fidivl
jp
jg
dec
adc
gs
cwtl
movsb
dec
outsb
xor
test
sbb
fdivrp
mov
dec
leave
jp
add
xchg
enter
insb
stos
push
push
fs
das
push
std
mov
ljmp
mov
aaa
ja
jle
jnp
lret
outsl
ja
inc
mov
hlt
xchg
pop
jb
movups
and
js
pop
insb
mov
and
adc
inc
xor
lock
insb
test
mov
outsb
negl
mov
imul
ss
sbb
dec
aad
mov
stos
jp
icebp
xchg
inc
sub
daa
and
xchg
and
or
stos
xchg
sahf
addr16
lock
roll
insb
jns
popf
xchg
leave
jne
mov
jge
scas
jg
aam
stc
cmpsb
jno
jl
pop
jo
push
pop
stos
test
outsb
stos
jmp
xor
test
bound
jg
aas
mov
and
sbb
cmp
jno
push
push
jno
mov
leave
loop
sub
and
aas
dec
fists
cwtl
add
divl
dec
stc
add
call
hlt
pop
ljmp
mov
call
imul
inc
xlat
dec
cmp
push
push
adc
ss
nop
je
jp
das
insb
add
mov
cmp
sbb
and
movb
insb
mov
loope
jns
test
sub
cld
inc
sahf
xor
popf
fdivr
out
loopne
lret
push
dec
or
adc
pop
es
mov
lahf
cli
xchg
add
or
clc
jge
imul
adc
fs
jecxz
xchg
mov
inc
mov
in
cmp
jns
mov
jnp
mov
test
sub
xchg
popf
pop
scas
jge
shlb
lahf
push
in
adc
pop
pop
dec
out
or
roll
fisubrs
mov
fldl
hlt
movsb
adc
out
pop
or
jns
dec
mov
clc
in
in
fdivrl
xor
or
lods
enter
push
pop
les
sarl
out
outsb
mov
out
repz
nop
dec
nop
stos
dec
inc
cmp
rclb
into
rcl
loope
into
test
je
in
cwtl
mov
mov
scas
xchg
sbb
cs
add
jmp
adc
lds
fistpl
jbe
fsubrs
xchg
mov
lods
mov
popl
hlt
cmpb
jne
mov
ret
mov
frstor
inc
pop
pusha
cmp
sar
jge
dec
rorl
xchg
mov
inc
inc
testl
outsb
dec
or
mov
std
mov
cld
mov
sbb
cli
sbbl
mov
cmp
adcb
or
pop
inc
push
movsl
jns
pop
push
and
xor
fisubs
aaa
mov
xorl
std
xchg
pushf
mov
outsb
mov
mov
xor
gs
gs
cltd
add
sub
mov
ret
roll
scas
sbb
mov
std
je
dec
call
xchg
xor
cltd
xor
or
xor
jae
inc
mov
adc
sbb
lahf
jl
jge
inc
les
aaa
lret
lret
push
sub
dec
je
gs
sbb
lock
aam
cmp
dec
enter
dec
das
ljmp
in
or
inc
dec
repnz
or
xchg
ljmp
sbb
add
sbb
xchg
push
xor
fwait
nop
int
xchg
movsb
fcomps
mov
xlat
push
andl
lods
aas
push
stc
ljmp
jno
push
lea
adc
setle
xlat
sbb
add
lods
push
fidivrs
out
outsl
aas
cli
jbe
xchg
xor
cmp
push
jge
scas
addr16
cwtl
mov
std
lret
ss
loopne
or
cs
movsb
stos
fldt
push
lock
ret
sub
sarl
mov
in
sub
and
mov
icebp
loope
sbb
dec
mov
sarl
dec
pop
and
sub
push
stos
fldenv
cmp
into
mov
cs
mov
inc
lcall
add
arpl
and
and
addl
inc
rcrl
push
or
insb
and
push
cmp
xchg
push
movsb
es
test
es
or
int
repz
imul
inc
mov
daa
adc
rcll
gs
add
mov
sub
push
punpcklbw
xchg
xchg
mov
scas
cmpsl
lahf
jecxz
ss
and
cld
cli
push
sbb
cmp
sbb
and
lea
inc
mov
lret
ret
stos
adc
push
mov
flds
mov
pop
imul
fwait
fs
jg
sbb
pop
cwtl
aad
xchg
cmp
cmp
lret
ljmp
adc
xchg
jmp
js
sub
mov
repz
cmc
and
cmp
mov
jno
push
adc
iret
xlat
mov
out
aas
popa
sub
daa
xor
xlat
mov
inc
loope
icebp
fs
inc
jmp
jge
mov
cmp
arpl
lret
outsb
jl
adc
ljmp
sbb
add
cmp
xor
xor
pop
jl
addl
pop
lcall
jns
aaa
mov
lods
cltd
popl
add
mov
lds
jmp
push
in
dec
inc
mov
xor
outsb
insl
or
mov
leave
je
das
in
cmpb
inc
fldt
jge
mov
sub
push
cmpsb
cs
jge
sti
pop
ja
lock
or
cmpb
mov
fisubl
test
add
call
insl
inc
loop
int3
pop
sahf
add
xor
xor
loope
cld
stos
jg
ficomps
push
ret
sar
dec
dec
adc
pop
adc
add
scas
in
jg
mov
dec
inc
out
inc
cltd
adc
arpl
sub
loop
dec
cmp
mov
daa
mov
mov
movsl
ss
in
filds
popa
out
ret
inc
jno
in
or
inc
mov
dec
ret
pop
cmpsb
lret
pusha
mov
cltd
call
stos
inc
fisubs
mov
jecxz
xchg
repnz
cmp
sti
xchg
inc
inc
mov
push
lea
gs
sbb
aaa
ficoml
movsb
and
addr16
das
mov
lret
dec
stos
pop
add
test
das
push
xor
push
popa
sub
out
icebp
popf
sbb
cmp
in
dec
movsb
jns
cwtl
test
mov
outsb
sbb
dec
mov
mov
cli
orl
push
popa
arpl
mov
jns
cmp
loope
aas
inc
mov
cmp
movsb
scas
in
out
popl
inc
fst
shll
inc
nop
adc
int3
and
or
ja
mov
or
les
mov
pop
xchg
pop
xor
adc
movsb
es
cwtl
cmc
loopne
sbb
dec
fucomi
jecxz
int
in
inc
xchg
sbb
out
ljmp
xlat
or
sahf
push
shlb
lock
mov
stos
jbe
jg
sbb
les
jb
in
jb
jnp
pusha
jp
pop
cli
push
das
jae
mov
adc
inc
add
cmpsl
ja
xor
out
nop
xor
int3
jns
mov
popa
mov
hlt
add
addr16
inc
ret
aas
movsb
cmpl
mov
dec
out
cli
jmp
pop
push
pop
or
je
inc
pop
insl
jl
pop
dec
inc
jge
decb
js
mov
cmp
dec
repz
sbb
xor
ret
fs
or
psrlq
in
mov
or
addb
sbb
xchg
daa
mov
ror
xchg
xchg
in
pop
lods
fcmovnu
into
fcmovnb
icebp
test
jle
xor
scas
sbb
ds
jg
lcall
jle
jmp
or
rorb
mov
pop
push
rorl
xor
push
cmp
daa
push
or
insb
mov
jnp
ficomps
add
ror
pop
repz
or
movb
sbb
dec
sub
rolb
mov
enter
push
lahf
nop
aas
jmp
adc
fcomip
add
pusha
jp
mov
insb
jno
push
add
cmp
cmp
std
sahf
faddp
setle
inc
sbb
push
jmp
push
inc
push
jns
jmp
adc
xor
sbb
xor
dec
test
pop
insl
jne
lods
and
lret
nop
mov
arpl
cmp
out
xchg
lods
int3
jg
xchg
mov
adc
mov
cwtl
xorb
add
leave
ljmp
adc
leave
ljmp
pop
loope
cmp
mov
imul
inc
mov
dec
push
into
clc
scas
addl
sbb
inc
jns
sbb
inc
ret
clc
inc
fisttpll
clc
stc
adc
je
adcl
mov
cwtl
cmc
in
repnz
mov
xor
pop
test
movsl
in
call
fstpl
cli
sbb
cmpsl
das
pop
lds
ds
push
xor
push
mov
jmp
mov
mov
je
xchg
mov
jo
xchg
mov
bound
lock
cld
adc
push
cs
test
mov
pusha
ret
xchg
sahf
mov
int
enter
push
aad
mov
cld
stos
or
sbb
mov
nop
enter
mov
mov
jmp
mov
or
aam
je
push
pop
es
add
xchg
xor
add
test
pop
test
sub
sbb
addr16
sbb
cmpl
dec
adc
sbb
push
addr16
dec
push
mov
mov
cmp
stos
fwait
mov
dec
jmp
mov
lahf
call
movsl
add
mov
mov
iret
push
sbb
cmp
lds
mov
je
pop
in
inc
dec
dec
jmp
ljmp
fsts
dec
lock
sbb
jmp
mov
jl
pushf
mov
aas
xlat
cmpsb
pop
in
lret
mov
jge
das
iret
frstor
jmp
add
xlat
cmp
ficoml
mov
cmp
adc
hlt
cmp
std
jb
jnp
jmp
pop
loope
mov
ljmp
mov
jbe
xchg
in
lret
pop
add
popf
xor
fidivrs
dec
or
add
lret
or
cltd
push
or
leave
gs
cmp
xlat
out
or
repnz
mov
gs
add
mov
aas
ret
xchg
adc
lcall
stc
outsl
iret
adc
sbb
stc
add
fsubrs
adc
les
into
lahf
push
add
cmpsl
xchg
out
sub
test
add
mov
xchg
out
sub
dec
movsl
and
daa
lds
jbe
jge
add
dec
dec
mov
inc
movsb
inc
call
mov
seta
mov
mov
sarb
inc
fisubrl
lock
xchg
les
inc
cmp
icebp
inc
and
mov
add
push
push
jb
int3
decl
dec
outsl
sbb
popf
jbe
mov
mov
sub
les
inc
dec
and
es
lock
mov
movsl
dec
fistps
mov
dec
xchg
and
xor
sbb
add
sub
pushf
xor
shll
cmp
outsl
clc
sub
lahf
lea
sahf
loop
inc
cmp
in
ljmp
sub
cmpsl
mov
adc
mov
cmp
inc
push
sbb
xchg
cmpsl
jb
xor
xor
js
cmp
xchg
inc
ret
cmpsl
adc
cmp
test
leave
fcoms
rcrb
aas
aas
xchg
pop
das
mov
enter
dec
je
dec
pop
dec
mov
lods
add
push
das
mov
dec
dec
fbstp
or
cld
out
mov
xchg
inc
add
mov
scas
ds
mov
pop
mov
je
test
push
test
pop
idiv
pop
shl
pop
jl
imul
add
or
jmp
shrb
lret
sar
xor
add
xor
test
ret
in
xchg
push
mov
aam
sarl
and
mov
aas
in
lock
js
movsb
cmp
test
pushf
movzbl
inc
pop
mov
aas
lock
mov
xor
adc
fldl
out
mov
iret
pop
cmp
shll
or
fstps
xor
cmp
xchg
test
jne
xor
jg
std
adc
mov
loop
push
rcrl
mov
call
inc
push
repz
push
xchg
inc
mov
add
pusha
test
mov
jle
sti
mov
cmc
pop
mov
jp
sub
lahf
and
adc
jecxz
pop
andb
dec
jl
js
in
repnz
jno
dec
sbb
mov
push
in
adc
addps
dec
test
mov
fnstcw
jge
add
push
inc
imul
inc
aam
inc
std
daa
jmp
push
lcall
cld
jno
push
das
stos
int3
or
cmp
adc
xor
test
cltd
mov
mov
mov
and
inc
mov
test
xchg
sahf
push
cmp
and
fimull
stos
xor
mov
mov
sbb
and
lods
sbb
adc
in
rcll
mov
mov
outsl
inc
rcrl
fdivrs
pop
call
fdiv
cld
out
add
pop
xchg
insb
stos
pop
outsl
pop
xor
stos
push
jno
xlat
cmp
inc
daa
xchg
mov
cmp
or
mov
fbld
jmp
popf
jge
flds
or
ss
mov
sub
xor
ja
or
inc
push
add
mull
in
adc
push
mov
lds
aad
dec
in
scas
jmp
inc
adc
mov
sub
gs
mov
dec
dec
andb
xor
mov
fists
ja
xchg
push
pop
push
shll
jno
out
xlat
or
arpl
jo
add
mov
in
xchg
mov
and
mov
mov
adc
mov
dec
loopne
jnp
fwait
lret
ljmp
adc
sub
xchg
mov
gs
fwait
sbb
ret
and
xor
mov
and
xchg
cmp
adcb
testl
subl
xchg
fistl
sub
stos
sahf
sbb
jge
ficoms
loope
ljmp
iret
push
int
rcr
pop
add
sub
test
filds
xchg
mov
aad
push
mov
sbb
mov
dec
pop
xchg
cmpsl
dec
jge
mov
sub
pop
mov
popf
mov
sahf
push
mov
es
cmpsb
jecxz
pop
testl
mov
negl
or
pop
push
push
mov
xchg
icebp
push
mov
loop
addb
test
mov
mov
sub
int
cld
jbe
fiaddl
nop
mov
mov
stos
xchg
aaa
inc
ja
xchg
jecxz
das
shll
aam
sub
cmc
imul
fsts
add
pop
aaa
push
ds
ss
dec
sahf
and
mov
jno
and
sbb
call
fwait
jl
xchg
vpaddusw
push
mov
pushf
mov
adc
test
and
xchg
das
and
rcll
stc
mov
mov
inc
into
push
cmp
cmpsl
or
mov
or
push
or
xor
push
xchg
scas
xchg
cmc
or
cwtl
jmp
jb
ja
insl
sar
mov
adc
xor
shlb
push
call
loopne
jp
add
call
and
push
sahf
or
test
mov
xlat
inc
cmp
dec
dec
test
xor
pop
mov
jmp
mov
jecxz
ret
lahf
andb
andl
lock
rcrb
iret
test
mov
mov
add
jb
inc
mov
sub
addb
das
inc
xchg
test
mov
dec
outsl
fsubs
sub
or
lidtl
xor
mov
xchg
cli
add
mov
sub
xor
inc
jns
sbb
aam
aas
adc
push
bound
pop
cmp
andb
or
mov
xchg
popf
imul
sub
mov
ss
cmpsb
jnp
cmp
cmp
mov
loope
push
and
mov
lods
push
xchg
sub
fdivrs
cmp
test
xlat
lret
stc
inc
inc
cmpsb
jae
movl
dec
loope
hlt
mov
rcrb
mov
push
imul
lods
mov
mov
or
sub
lock
aaa
sahf
jae
sbb
mov
loopne
or
hlt
mov
jns
dec
mov
hlt
xlat
mov
adc
cmp
pop
leave
aad
mov
mov
pop
inc
mov
adc
test
inc
mov
mov
mulb
dec
inc
xchg
and
rcrb
xchg
shl
xchg
cmp
and
pop
mov
sar
jo
fs
and
xchg
or
imul
mov
lret
push
pop
sar
mov
ficoms
push
ja
xchg
outsl
cmpsb
subl
or
enter
and
adc
addr16
dec
sbb
xchg
ljmp
out
repnz
inc
mov
or
out
lods
in
in
in
dec
je
mov
int
inc
jnp
pusha
aam
pop
inc
mov
loop
cmp
adc
mov
mov
xchg
rep
lret
add
and
addr16
xor
push
jp
and
inc
jns
cld
pop
fcomps
and
xor
xor
int
out
ds
cmp
cmp
mov
xchg
adc
xchg
mov
out
js
lret
jmp
jno
mov
outsb
movsl
repz
adc
or
int
popf
addr16
mov
lret
fcoms
and
ror
add
mov
rol
daa
lock
popf
mov
push
and
psrlq
mov
mov
stos
and
enter
data16
in
pop
xchg
dec
aaa
or
pop
out
push
rcrl
mov
jle
xchg
xchg
fcmovbe
mov
aaa
ret
ds
dec
pop
inc
xor
in
jne
sbb
sbb
mov
add
jle
out
adc
push
int
or
push
jg
mov
dec
cmp
mov
rcll
lods
push
jp
or
jle
push
xchg
enter
add
out
ret
xchg
mov
pop
jge,pn
pop
jno
jp
jle
xchg
sbb
lcall
aaa
imul
shlb
scas
sbb
and
ret
jb
sti
mov
cwtl
mov
mov
pop
lcall
dec
jno
push
or
add
aad
jbe
test
ret
mov
jmp
pop
clc
sahf
sub
and
sbbl
cmp
cwtl
fwait
jg
xor
mov
xor
aam
fnstenv
jae
fldt
fsub
inc
stc
xchg
dec
ds
mov
dec
xchg
popa
dec
dec
lret
lds
xor
and
movsl
call
or
in
cmpsl
xor
shrb
pop
add
jno
jb
xchg
add
test
mov
pop
xchg
jbe
pop
fisttps
js
mov
or
inc
lods
mov
sbb
sbb
add
ret
fisttpl
test
jns
bound
fsts
mov
mov
stos
shl
add
sbb
xchg
mov
lahf
hlt
data16
cmp
pop
jg
and
xor
cmp
dec
les
imul
push
jecxz
jecxz
push
int
fists
push
fiaddl
jge
mov
test
sti
ss
pop
mov
push
dec
mov
ljmp
jmp
adc
aaa
dec
jne
js
push
mov
pusha
nop
in
inc
xor
xlat
in
mov
imul
push
adc
add
dec
mov
movsb
lods
push
pop
clc
xchg
cmpsl
or
or
xor
jae
mov
sbb
inc
into
jp
icebp
xor
pop
cwtl
dec
dec
mov
in
mov
dec
imul
mov
push
pop
sbb
mov
cwtd
aam
sub
cs
rcll
call
ret
pop
push
out
cmp
mov
loopne
out
nop
sub
mov
jge
push
inc
test
push
sbbl
ds
inc
repz
scas
add
and
xor
hlt
decl
addr16
add
xchg
mov
imul
adc
lahf
or
pop
mov
dec
pop
add
xchg
dec
mov
adc
mov
or
bound
xor
ds
xor
test
push
mov
mov
push
xor
xchg
andl
mov
sbb
ja
test
lahf
fs
dec
cli
mov
clc
xor
insb
adc
test
jns
int3
mov
shl
cltd
xor
cmpsb
cld
aas
test
dec
sub
fs
scas
jg
test
rdtsc
sbb
mov
insl
mov
fistps
sti
je
sbb
gs
adc
into
std
or
xchg
xor
in
sbb
sbb
gs
popf
cltd
test
enter
inc
mov
mov
mov
cmp
pop
dec
mov
jle
xchg
push
inc
or
lods
dec
push
jno
inc
push
or
fdiv
call
sbb
fldenv
dec
pop
mov
dec
pushf
mov
pop
inc
inc
out
rcrl
in
cli
xorb
inc
push
in
jne
out
test
dec
in
bound
mov
jmp
es
je
inc
pop
lret
xor
inc
inc
or
cwtl
gs
hlt
and
xchg
push
sub
call
inc
lret
mov
mov
push
push
bound
pop
adc
sahf
lods
mov
sub
or
js
or
test
loopne
push
mov
rorl
cmp
pop
add
jl
jmp
jmp
inc
insb
inc
lods
mov
addr16
pop
insb
lret
nop
mov
xchg
pop
mov
iret
ja
mov
jecxz
ret
cmp
mov
mov
cmp
das
xor
fdivrs
and
psubq
sub
pop
sbb
jmp
cld
jl
sub
lahf
cld
jns
iret
mov
gs
mov
cwtl
mov
negl
xchg
mov
adc
leave
cmc
xorl
push
mov
sbb
dec
in
shll
in
popf
adc
pop
sub
fistl
mov
mov
pop
in
mov
scas
inc
ret
mov
aaa
inc
decl
mov
shll
sahf
cwtl
enter
xchg
in
push
and
mov
mov
cmp
loope
orb
stc
pushf
jae
loopne
mov
leave
fisubl
test
sub
out
jno
movsb
lcall
pop
ja
and
fcmovbe
pop
enter
xor
push
xor
lods
dec
out
pop
test
daa
push
inc
js
out
out
rcr
mov
movsb
sbbl
add
push
test
xor
and
imul
mov
mov
sub
push
leave
ds
jo
dec
imul
and
outsl
rcr
addr16
sub
lock
push
mov
lahf
mov
mov
mov
mov
jge
sub
iret
jmp
cwtl
mov
mov
repnz
or
cmpl
add
sbb
stc
mov
roll
ret
xor
inc
jb
stos
pop
rorb
loop
shlb
imul
push
or
sahf
mov
mov
add
mov
insl
dec
push
imul
pop
and
mov
mov
xchg
leave
call
cli
mov
icebp
mov
jmp
test
sub
out
hlt
test
fmul
fnstcw
and
lret
xor
jbe
mov
cld
cmc
aad
sub
sbb
jae
loop
add
push
sahf
xchg
fisttps
inc
imul
jmp
jae
push
ret
lods
push
jmp
lret
std
inc
rcll
push
inc
loope
xor
stc
dec
mov
jne
inc
gs
pop
push
rclb
mulb
mov
sub
push
mov
stos
jp
add
dec
ja
shlb
inc
scas
sub
add
jb
in
aam
inc
call
cmp
or
lds
inc
xchg
xchg
dec
ficomps
xchg
into
daa
fldl
cmp
mov
or
jo
adc
dec
rolb
add
nop
int3
fstpt
mov
push
lods
in
mov
cltd
lret
mov
add
cmp
adcl
sahf
cmpl
push
pushf
mov
pop
stos
pusha
mov
and
mov
je
je
shl
sub
or
jae
ss
jns
in
lcall
in
sbb
cld
inc
subb
sub
sbb
xchg
sbb
stos
pushf
iret
sbb
xchg
notl
subl
bound
inc
cmp
out
add
mov
iret
std
out
test
inc
adc
push
inc
cwtl
mov
cmp
in
cmp
add
xchg
aas
or
sbb
cmp
xchg
add
xchg
fwait
push
das
or
ficoml
jge
enter
jg
jge
es
and
out
repnz
repz
pop
jmp
adc
ja
mov
shl
add
sub
loop
je
fsubr
std
mov
cmpsl
lea
js
cmp
inc
inc
xchg
mov
fwait
jmp
mov
mov
cmp
in
rep
cmp
or
enter
test
cmp
fcoms
repz
insb
sub
mov
push
subl
shrl
nop
fs
testl
inc
push
add
gs
jl
test
out
mov
cltd
mov
lds
sahf
push
push
ffreep
jl
cmpsb
test
jmp
test
sti
fildll
xchg
jb
sbb
or
movsl
loopne
aam
push
push
adc
repz
cmp
ljmp
sarb
les
mov
add
jle
data16
jp
mov
cs
sub
adc
jg
pop
xlat
iret
add
jmp
pop
cmp
movsb
rcll
lea
shr
mov
dec
adc
and
leave
jns
cld
daa
sbb
cmpsl
jae
clc
xchg
dec
out
cmp
cld
cmp
dec
aas
pop
jo
movsl
and
fistpll
pop
inc
dec
push
cmp
pop
xlat
out
mov
mov
shll
cmp
insw
mov
jnp
or
dec
sarl
add
cwtl
add
add
pushf
add
into
fs
sahf
xchg
xchg
xor
dec
and
test
mov
inc
xchg
jnp
cltd
or
loopne
cmp
dec
xchg
adc
adc
mov
loopne
mov
and
ror
data16
mov
push
imul
stos
cmp
xchg
push
jmp
in
cmp
pop
adc
mov
jne
inc
lret
out
into
jmp
sbbb
mov
inc
fcomps
imulb
pop
mov
bound
or
popa
mov
movsl
mov
cld
xor
xchg
cmp
xorw
sbb
jb
bound
call
jb
push
fiaddl
dec
cs
std
push
test
mov
cmp
pop
xor
repz
xchg
in
ja
int
or
mov
mov
ret
mov
mov
stc
pop
movsb
bound
cld
insb
cltd
push
loop
adc
out
xorb
mov
mov
push
inc
dec
cs
ror
push
jl
sub
mov
lahf
push
mov
in
fxch
cwtl
into
mov
or
xor
scas
outsl
arpl
pop
jge
mov
inc
cmp
adcl
cmp
mov
imul
inc
stc
mov
lea
add
add
jne
fimuls
push
sbb
mov
pop
push
icebp
adc
loope
ret
aaa
imul
js
mov
mov
push
in
leave
jle
test
cmp
dec
fdivp
dec
pop
inc
in
dec
sub
imul
sbbb
jge
lret
and
ret
cmpsb
and
cmp
pushf
mov
push
adc
xchg
scas
aas
cld
inc
mov
mov
adc
cmpsb
pop
xchg
pop
frstor
into
popf
cmpsb
aad
mov
sbb
idiv
call
pop
es
fisubrl
inc
pop
mov
stos
sti
adcb
mov
inc
leave
mov
sbb
fmull
jnp
and
fs
jbe
ret
mov
imul
and
mov
fs
rcrl
stc
add
or
pushf
ja
mov
add
or
push
adc
sbb
test
fstpl
xor
cmp
mov
xor
roll
xor
mov
into
popa
and
push
movsl
mov
popa
test
aas
dec
dec
test
call
scas
and
pop
loopne
adc
ds
dec
xlat
shll
xchg
pop
xor
cli
out
pop
and
pop
std
jmp
push
fs
lods
jle
mov
push
sub
and
rorl
xchg
test
imul
or
inc
addr16
cltd
jle
test
mov
cmpsb
lahf
mov
mov
inc
push
inc
sahf
jge
pop
mov
mov
or
popa
cs
xorl
loop
lcall
sahf
fbld
add
xchg
sbb
dec
inc
int
push
cmpsl
jle
cli
mov
popf
ja
imulb
xor
rorl
xor
adc
push
and
cltd
add
aaa
mov
cmp
adc
sub
jmp
jo
lock
scas
idiv
cmc
mov
jbe
sbb
fsubs
sti
adc
push
push
aam
ret
stos
cmpsb
ret
popf
daa
or
xor
sub
dec
push
in
insb
cmp
push
sub
into
sub
orl
test
mov
fnstcw
rcl
out
enter
sub
cld
loopne
xor
sbb
jae
add
adc
stc
push
pop
mov
sbb
adc
dec
fcmove
xor
cltd
je
xchg
xor
mov
mov
cmpsb
out
loop
push
xchg
sbb
ja
xchg
fldlg2
lds
insl
mov
cli
cmp
inc
aad
sub
push
dec
mov
aaa
fnsave
or
mov
mov
sahf
adc
fwait
enter
push
scas
or
movsb
sub
cmpsl
mov
cld
push
int3
and
or
out
cwtl
int
adc
pop
or
fbld
test
int
outsb
mov
jle
fiadds
ljmp
das
push
icebp
push
push
pop
test
dec
xor
mov
ficoms
iret
jo
push
das
xchg
adc
sub
jl
mov
inc
fidivrs
cmc
inc
roll
sti
test
dec
daa
outsl
es
push
in
rolb
cld
push
xchg
cs
ljmp
sbb
sub
pop
and
mov
shlb
lods
jge
cmpsb
inc
imul
add
fs
add
jne
mov
repnz
test
mov
clc
aas
cmc
inc
dec
test
sbb
or
roll
pushf
in
outsl
inc
push
out
sbb
fdivl
call
add
push
dec
lock
cmpsb
mov
aaa
push
adc
lahf
shrl
cltd
dec
scas
add
jecxz
xor
sbbl
movsl
lret
pop
mov
pop
dec
arpl
cmp
scas
dec
daa
repz
out
jp
movsl
cmp
and
aas
xchg
out
movsb
std
aas
mov
andl
xchg
dec
add
jo
and
mov
push
push
loope
pop
xchg
addl
sbb
cmc
into
aaa
pop
lcall
adc
add
pop
xor
je
push
lcall
sbb
inc
call
inc
repz
in
movq
inc
push
shl
or
push
mov
push
fwait
adc
jp
mov
inc
loop
pop
rcr
imul
pop
mov
adc
push
mov
sub
xor
frstor
insl
xchg
mov
jbe
loope
popa
jne
imul
push
pop
movsb
es
jnp
or
xor
xchg
das
sub
adc
insb
fcmovne
or
rorl
lret
rolb
das
fldenv
add
sbbb
or
lahf
pop
mov
outsl
in
push
movsb
dec
stos
fidivrl
mov
mov
push
stc
jne
jbe
mov
mov
jp
fcmovbe
push
clc
and
fiaddl
fiaddl
pushf
xchg
ret
dec
outsl
test
icebp
rcll
insl
mov
and
push
pop
repnz
pop
jns
push
push
int3
dec
cmp
adc
sub
cmp
cwtl
jo
aad
jge
shll
add
subb
jne
ja
mov
inc
inc
cwtl
mov
sahf
cmp
repnz
mov
scas
repnz
xor
or
xor
movsb
xor
or
movsb
data16
mov
lret
imul
inc
cmp
iret
cli
out
jg
adc
push
mov
xor
cmp
mov
insb
ljmp
mov
xchg
pop
stos
sbb
inc
jb
jge
sbb
dec
sbb
frstor
pushf
pop
stos
push
loop
jno
add
and
cmc
and
or
xchg
fs
stc
mov
adc
and
mov
dec
stc
in
addl
decl
enter
iret
sbb
jo
push
push
or
in
fdivrs
mov
xor
dec
mov
push
mov
pop
xchg
sahf
in
fwait
popf
repnz
pushw
cwtl
inc
mov
jge
scas
cmp
dec
mov
ds
jae
inc
or
pop
cs
xor
frstor
shlb
pop
out
addr16
ds
lea
add
orl
adc
popf
and
mov
cwtl
ljmp
jnp
mov
sti
pop
aas
lahf
rcrl
pop
outsb
popf
mov
std
jb
addr16
push
dec
sbb
xor
outsb
gs
or
ret
stc
push
cmpsb
mov
outsb
sub
shll
rcrb
je
push
mov
jns
cmc
adc
adc
aaa
lret
daa
pop
and
imul
leave
scas
lret
jl
xchg
fcmovu
jbe
ss
and
sbb
mov
lds
push
cmp
sbb
jg
xchg
iret
sbb
cmp
jle
pop
int3
jnp
push
mov
or
cmp
cmpsb
sub
movsb
mov
cmp
xchg
jecxz
into
std
sar
xchg
xor
stc
nop
cmp
dec
xlat
shl
xchg
mov
fisubl
in
mov
lea
jmp
movsb
pop
arpl
inc
sub
pop
cmc
iret
inc
jl
jl
cmc
in
mov
jge
xlat
adc
add
sti
lods
jno
xchg
xchg
inc
mov
mov
jmp
xor
fldcw
inc
insb
movsb
mov
inc
xchg
stc
adc
sbb
xor
ret
ja
or
out
pop
jge
inc
and
push
pop
popf
stos
call
inc
test
inc
sti
sbb
or
divb
sub
scas
sub
mov
lret
inc
cmc
fwait
pop
xchg
popa
fldcw
es
dec
insb
cmc
les
test
push
movsl
sbb
cmp
jg
lock
inc
lcall
lods
pop
or
aad
xor
outsl
lds
iret
test
push
out
mov
fwait
divl
jg
pushf
inc
dec
lret
insb
loop
push
or
mov
sub
fidivrl
pop
mov
xchg
xchg
cs
hlt
and
xchg
jnp
clc
xchg
jns
adc
addr16
inc
mov
pushl
inc
pop
jge
mov
mov
testl
add
xchg
jae
stos
mov
sbb
cwtl
aam
mov
and
push
cs
pop
jg
or
sub
in
dec
mov
adc
sbb
add
outsb
mov
push
xchg
inc
lods
pop
push
loope
sar
jl,pn
xchg
mov
adc
pop
into
imul
dec
sub
jnp
test
xor
test
aaa
xchg
data16
mov
jbe
sub
add
test
jmp
jle
sti
pop
xor
xchg
test
and
add
inc
cmp
ds
mov
cwtl
fistpll
fsubrl
sub
xchg
mov
and
pop
jno
or
in
mov
psrlq
gs
outsl
insb
test
mov
pop
rcr
popa
mov
push
push
lcall
xchg
scas
test
stos
sbb
xor
add
xor
in
int3
jnp
mov
aam
pop
pushf
pop
scas
push
ret
lahf
jg
out
in
addl
cmp
mov
cs
pushf
mov
das
in
aam
nop
mov
out
orl
ljmp
cld
add
mov
sub
iret
pop
decl
cmp
and
cmp
inc
fsubr
enter
scas
test
out
pop
jge
scas
and
movsl
pop
cmp
lock
fstpl
add
je
aaa
fs
and
dec
loope
pop
loopne
dec
push
and
retw
cmp
xchg
adcl
jbe
cmp
ret
add
cld
rolb
bound
shr
add
mov
repnz
xchg
ret
and
push
in
cld
cmp
out
adc
xor
imul
inc
mov
or
mov
mov
push
push
int
xchg
loope
addr16
dec
orb
cmpl
push
push
rclb
push
lea
jecxz
shrl
out
loop
mov
adc
sub
or
loop
sahf
mov
pop
pop
scas
or
rcll
add
inc
test
imul
ljmp
out
dec
mov
push
xchg
mov
sub
sbb
mov
loopne
rorb
pushf
jo
rorb
mov
imul
add
popl
jmp
push
arpl
cli
stc
shlb
dec
das
out
stc
adc
fucomp
stos
filds
adc
xor
inc
xor
or
sbb
and
mul
pop
cmp
push
ja
aaa
mov
sub
xor
cmpl
adc
adc
xchg
cmpsl
int3
scas
aad
pop
cmp
cmp
aad
test
cmp
cs
and
xor
aaa
sbb
mov
inc
test
lret
clc
imul
clc
xor
jnp
push
jns
sbb
ds
fildll
cmc
and
jmp
pop
xchg
fbstp
sub
push
iret
pop
mov
mov
popa
imul
xor
loopne
xchg
xchg
add
lds
inc
xchg
push
and
and
test
andb
sbb
cmp
pop
pop
sub
push
and
enter
mov
leave
add
cmc
push
xor
dec
dec
adc
lret
sub
mov
sbb
test
ja
sbb
mov
notl
mov
inc
out
and
sub
call
sub
in
mov
dec
aad
push
test
xchg
scas
cmp
rcl
pop
push
or
aaa
cmp
in
test
jnp
ret
xor
mov
sti
aad
jmp
and
jp
mov
aaa
add
out
pop
enter
fcomp
scas
push
mov
dec
out
test
adc
popf
mov
and
sub
pop
xor
sbb
ja
xchg
ficoml
jno
xchg
push
scas
out
pusha
pop
cmp
enter
cs
push
lods
mov
aam
and
push
cmp
mov
cmc
in
inc
mov
pop
mov
push
shlb
fiadds
sbb
test
sti
xchg
in
test
aas
addr16
add
dec
or
lahf
cmp
pop
xchg
es
orb
inc
mov
in
push
push
add
sub
push
add
sub
stos
ss
mov
and
xchg
mov
cmp
jno
fs
rcl
mov
xor
insb
xchg
pop
cmp
ficoml
cmp
leave
rclb
enter
in
repnz
dec
mov
call
decl
fwait
mov
mov
push
adc
js
sti
ss
inc
sub
mov
inc
or
stos
adc
lods
xor
pop
adc
mov
iret
pop
and
sbb
rcr
and
sub
fiaddl
mov
lret
add
nop
jnp
dec
mov
push
mov
scas
mov
outsl
pop
mov
pop
jbe
cmpsb
lahf
lds
shll
push
cmp
dec
js
or
bnd
pop
rcll
aad
jnp
adc
loop
sub
ret
push
jl
movsb
dec
out
push
add
iret
test
jecxz
xor
pop
in
mov
jbe
dec
pop
mov
bound
int
icebp
pop
push
sahf
adc
scas
icebp
mov
aas
push
out
sub
dec
push
fisubrs
leave
sbb
or
fs
repnz
popa
jg
xchg
mov
inc
pop
or
jae
testb
add
fdivrl
add
push
adc
jnp
add
jmp
insb
sbb
adc
fidivrs
mov
mov
jg
in
aas
jo
push
inc
adc
gs
push
adc
sahf
clc
dec
mov
in
jmp
mov
or
xor
mov
inc
in
xor
jmp
cwtl
mov
xchg
add
push
or
push
bound
xor
sub
mov
inc
xchg
or
mov
repz
addr16
push
out
adc
and
lret
adc
fldcw
cs
adc
push
xor
leave
inc
pop
out
scas
cmp
add
ret
mov
lcall
sbb
xchg
cmp
cmp
outsl
push
inc
addr16
rolb
fiadds
xchg
lds
xor
push
loope
mov
out
nop
ret
rcr
mov
sub
mov
pusha
ja
cwtl
iret
push
dec
adc
dec
js
mov
add
out
push
dec
sub
mov
pop
and
xor
stc
pushl
subb
std
xchg
inc
in
mov
cmp
insl
mov
push
add
push
pop
mov
dec
lock
xchg
sbb
jnp
jp
inc
adc
pop
repz
int
shrl
andb
pop
pop
sarb
add
cmp
imul
xor
mov
mov
push
xor
iret
inc
or
nop
aas
inc
sbb
insl
into
sub
hlt
sbb
xchg
inc
jbe
adc
hlt
lods
icebp
push
dec
faddl
push
pop
ds
sbb
enter
dec
push
xorl
sub
push
sar
movsl
push
jp
mov
pop
dec
mov
push
imul
jb
jle
nop
scas
aam
xor
xor
dec
in
jmp
dec
pop
jae
loopne
std
xorb
sub
enter
mov
mov
nop
fwait
insl
sahf
stos
mov
dec
in
aam
mov
jp
out
icebp
jns
push
sub
sbb
mov
mov
iret
cmpsl
dec
jmp
icebp
xchg
int3
scas
and
xchg
mov
cmp
int
scas
mov
jmp
push
subl
xchg
shll
test
out
cmp
fwait
orb
lds
mov
in
xor
push
loope
imul
icebp
ds
out
cmc
cmc
out
insl
inc
dec
dec
add
mov
loopne
push
jge
mov
hlt
mov
jbe
mov
jle
push
adc
push
mov
jp,pn
leave
mov
shrl
mov
xchg
jb
jmp
insb
sub
movsl
jb
push
test
lock
int
jb
jne
ret
push
mov
xor
scas
gs
pop
add
ljmp
xor
push
into
loope
sti
push
xchg
fcompl
xlat
enter
add
ss
fistpll
add
cmp
mov
cmp
cltd
jmp
dec
xchg
loope
push
scas
inc
jbe
cmp
call
push
inc
push
shll
fld
add
lea
jmp
cmc
aam
jb
add
or
cmp
sub
dec
rcrl
inc
cmp
dec
es
mov
or
fmuls
cmp
pop
or
lock
sbb
xlat
xchg
mov
adc
pop
inc
movaps
aad
ds
mov
outsl
jo
cmp
pop
jle
jbe
sbb
dec
mov
cmpsb
outsl
lock
pop
fwait
leave
outsl
sti
xchg
add
mov
jo
sbb
and
adc
dec
dec
popf
ss
loope
add
call
call
out
negl
int
pop
icebp
int3
sahf
fistl
add
bound
lock
sub
xchg
sbb
mov
push
pop
pop
lock
xor
add
sti
lock
gs
cmpsb
movsb
clc
push
ss
push
nop
cmc
mov
fdivrs
std
mov
dec
cmp
xor
rorl
jp
out
lahf
rolb
sub
sub
cmp
aaa
cmpsb
inc
mov
cld
sub
and
and
lds
out
xor
dec
mov
fs
sub
and
ret
arpl
test
cmpps
add
ficomps
push
movsb
cmp
xchg
int3
inc
mov
xor
invd
mov
sbb
and
pusha
pop
fldt
repz
int3
push
dec
inc
inc
mov
scas
subb
mov
mov
js
into
aas
sub
mov
outsb
les
or
mov
popf
ret
jb
std
sbbb
sbb
cmp
popa
aas
into
mov
add
test
sub
loop
sub
fdecstp
push
ror
dec
add
jo
lods
imul
adc
aas
inc
incb
aad
sub
jno
push
mov
mov
pop
push
bound
xor
mov
pop
xchg
xorw
mov
in
cmp
clc
fsubrl
adc
scas
ret
les
jns
loop
sbb
push
jmp
stos
dec
out
push
mov
enter
fidivs
inc
inc
aaa
gs
mov
xchg
pop
hlt
push
pop
je
aam
sub
mov
push
nop
call
roll
in
lods
dec
inc
mov
cld
push
pop
dec
mov
insb
adc
or
xchg
cmp
sbb
int3
and
and
mov
rcl
mov
stos
sti
test
popf
jo
pop
mov
in
mov
add
out
xchg
xor
and
mov
push
orl
testb
test
in
fs
push
lret
and
stos
xor
out
gs
mov
repnz
mov
subb
or
pop
repnz
push
push
dec
add
aam
mov
xchg
arpl
cmp
push
mov
mov
jg
jmp
push
out
push
push
dec
pop
jl
mov
sbb
push
push
into
sbb
ret
leave
cs
inc
les
inc
cmp
sub
aas
and
mov
cmp
xor
enter
mov
aad
add
test
je
test
mov
outsl
stc
mov
cmpb
arpl
sub
xadd
inc
adc
xor
loop
ss
xchg
inc
cld
imull
xchg
popa
aaa
mov
test
fcoml
xchg
fwait
dec
test
mov
push
or
add
les
lea
movsb
push
jno
sarb
sub
and
pop
shll
sarl
sub
cmp
or
push
mov
out
xor
ret
xchg
sub
mov
sbb
dec
aad
movsl
popf
movsl
movsl
nop
xchg
cld
mov
daa
jae
or
or
pop
xlat
pop
adc
icebp
dec
cmpl
xchg
cltd
aam
cld
adc
out
pop
sar
xchg
sbb
les
adc
pop
out
lods
mov
xchg
or
xchg
pop
shrl
dec
int3
popa
faddl
push
aas
mov
pop
movsb
mov
out
hlt
ds
cmp
add
nop
xor
mov
jbe
jmp
pop
push
insb
or
pop
jp
aam
jp
call
adc
jle
pop
fs
shl
inc
cmpsl
push
mov
sub
dec
addb
outsl
and
fdivl
ret
ret
push
mov
or
sbbb
push
stos
dec
repz
inc
int3
leave
fldl2e
push
xchg
pop
mov
xchg
cmp
pop
gs
test
mov
jae
std
mov
sub
je
jp
gs
aam
orb
sbb
and
jp
or
test
push
pop
imul
dec
inc
adc
test
aad
es
sbb
sub
jmp
pushf
mov
xchg
rcll
push
loop
mov
movsl
push
pop
or
aam
and
sub
mov
jne
mov
cs
test
fwait
sub
andb
lock
aad
xlat
aas
addl
sti
cmc
icebp
xchg
jp
xor
mov
lret
iret
sbb
ror
push
xor
mov
adc
std
sbb
mov
out
addl
jo
pop
insb
out
mov
cmp
scas
add
stos
les
inc
jno
pop
or
fcomi
dec
ss
xor
xor
add
jmp
mov
cmpb
push
cli
outsl
xor
andl
es
cltd
sbbl
mov
mov
pusha
xlat
lock
xchg
fsubp
lods
xchg
push
ljmp
lods
les
faddl
popf
jnp
icebp
or
ja
jno
in
fcomps
dec
stos
jo
pop
aas
sub
sbb
es
and
lret
mov
fincstp
fucomp
xchg
jbe
or
addr16
in
mov
mov
jae
lods
xor
lock
sti
sub
or
arpl
rep
pop
jle
inc
gs
fsubl
and
add
add
enter
cmp
into
inc
or
js
fiadds
xorl
pop
push
adc
pop
jae
cmp
out
fiadds
fwait
xchg
movhps
decl
cld
insb
adc
int3
gs
sbb
push
out
iret
iret
inc
or
jns
mov
inc
inc
push
push
push
fstpl
pop
clc
dec
mov
xchg
push
out
dec
adc
gs
loop
mov
aad
repnz
or
push
adc
sbb
stc
xor
pop
cmpb
cmc
xchg
loopne
fdiv
dec
push
movsl
call
inc
sbb
dec
cmpsl
add
sbb
push
int3
push
lods
iret
and
data16
ja
push
pusha
insl
xchg
nop
insb
or
inc
pop
es
in
sti
pushf
int3
jle
push
enter
stc
sarb
mov
mov
jbe
cltd
add
and
lahf
ds
into
test
or
outsb
adc
fidivl
adc
in
js
pop
and
push
sub
xchg
sbbb
popa
daa
pop
insl
dec
hlt
aas
adcl
jno
ljmp
jb
test
aas
sub
mov
inc
mov
gs
sti
test
xorl
xchg
lock
test
imull
cmp
icebp
inc
mov
mov
mov
imul
aaa
xchg
outsl
addl
sbb
rorb
and
jl
sub
pusha
pop
outsb
daa
cmp
inc
xor
mov
pop
mov
ret
js
cmp
mov
jle
inc
mov
data16
into
popa
adc
adc
cmpsb
rclb
and
test
or
cld
fwait
and
cmc
hlt
adc
mov
mov
and
js
fcmovb
repz
sbb
adc
je
es
sbb
rclb
lock
sar
jnp
inc
cmp
rorb
xor
addb
inc
push
jb
mov
sbbl
lret
or
imul
xchg
aam
pop
jg
mov
sub
pop
leave
mul
fs
pop
mov
jb
mov
loop
aaa
inc
mov
mov
sub
fldcw
es
js
cltd
fwait
push
cmc
adc
outsb
in
orl
dec
and
pop
out
jl
mov
jle
daa
cs
aad
rcr
cs
push
push
pop
test
shlb
int3
test
popa
fistpll
movsl
push
shll
ss
fnstcw
and
cmp
or
jne
arpl
push
loopne
imul
jmp
testl
add
sub
xorl
xor
sub
adc
scas
mov
das
cltd
add
stc
test
je
push
jecxz
call
xorb
int
lods
mov
push
in
test
sti
push
xchg
sbb
andl
sub
xor
push
mov
mov
imul
jp
push
js
aad
pop
lret
dec
pop
adc
adc
xor
mov
das
pop
push
and
xor
movsl
sub
or
jge
jl
or
addr16
pop
cmpsb
loopne
inc
sbb
out
fwait
sub
fsubl
cltd
sbb
mov
mov
sbb
and
mov
xor
dec
out
clc
xlat
mov
das
ja
sbb
scas
repz
ja
popa
lcall
fisttpl
in
cwtl
outsb
movsl
into
push
fildll
arpl
jle
mov
and
fsubr
push
adc
jp
js
mov
aas
jo
mov
in
mov
and
rcll
xor
cli
push
aas
pop
adc
fstpl
in
fwait
callw
stos
mov
dec
scas
or
rolb
xor
push
sbb
int
sbb
sbb
adc
xor
mov
repz
mov
lds
sub
in
addl
mov
out
aad
inc
mov
mov
sub
pop
insl
jae
jne
test
sub
dec
and
out
push
xorb
mov
testb
shlb
inc
xchg
inc
dec
movsb
aaa
xchg
cmc
sarb
add
nop
and
or
jno
fs
int3
test
icebp
bnd
inc
stc
jbe
cmp
loope
inc
push
or
pop
scas
icebp
test
fxch
scas
mov
inc
test
lret
jae
add
push
movsl
push
arpl
into
in
jae
cmp
push
push
fbld
cmp
fs
mov
push
in
sub
pop
in
inc
rol
dec
lock
outsl
aam
test
xchg
fsub
jl
jae
into
adc
pop
mov
and
sub
cwtl
jmp
mov
pushf
and
addr16
insl
popl
and
fs
je
cmpsb
movsb
and
xchg
inc
loope
into
pusha
xorl
nop
stc
jns
aaa
cmp
loope
aam
out
push
cmp
adc
pop
inc
jne
pusha
fistpl
and
aad
fs
sub
ljmp
inc
repz
test
mov
jnp
lret
loope
xchg
call
data16
cmc
adc
sti
cmpsl
inc
push
xor
popl
adc
js
cmpsb
scas
mov
cwtl
clc
jg
int
dec
sub
sbb
inc
jle
int3
xor
stos
in
popl
jae
mov
fnstcw
insl
xlat
adc
mov
add
insl
pop
fstps
nop
mov
xchg
xor
outsb
lret
sbb
cmc
pop
int3
push
ret
nop
and
loope
jmp
es
repz
aad
xchg
xor
fldl
xor
fldt
push
mov
stos
into
imul
lods
dec
push
or
sarl
adc
mov
push
push
add
pop
pop
mov
jmp
jns
fdivs
add
js
and
xchg
inc
dec
jge
and
push
push
rcl
mov
jmp
adc
fstpt
mov
mov
imull
push
insb
add
std
std
cmp
std
mov
adc
mov
pop
cmp
pushf
bound
xchg
push
and
aad
addr16
paddsb
data16
sbb
sub
push
sbbl
cmpsl
add
fnstenv
test
sub
sbb
sbb
pop
dec
push
push
cmp
push
xor
push
mov
icebp
out
stc
push
fcmove
mov
aam
cmpsl
loopne
pop
ja
jl
mov
xchg
fdivs
adc
or
clc
cmp
or
inc
int3
inc
scas
cmp
cmpsl
pop
push
xchg
call
mov
push
fbld
test
sbb
andb
outsb
mov
pop
adc
sbb
add
mov
or
lcall
fwait
xchg
dec
shll
sub
nop
subl
jl
ds
adc
or
push
movsl
xchg
stc
mov
sbb
fidivrl
cmpsb
hlt
and
cs
mov
cmpsb
xchg
push
pop
xchg
rorb
inc
imul
add
gs
pop
jg
sbb
mov
lods
mov
dec
lock
stos
into
int
fistpll
ret
and
cwtl
lods
sbb
int
fmull
idivb
cmp
push
jmp
adc
js
mov
sub
popa
dec
ja
or
pop
popf
cmp
and
sbb
jecxz
ret
inc
add
lahf
jp
xor
addr16
push
xor
mov
xchg
mov
inc
xor
je
rcr
cmp
imul
fildl
lcall
cmp
push
jae
stc
and
mov
jae
and
and
test
jns
lcall
outsb
pop
aaa
jnp
call
std
in
test
ret
nop
bound
iret
mov
in
cmp
mov
mov
les
insb
rcll
cmpsb
and
mov
cmpsb
mov
mov
mov
add
in
imul
mov
inc
xchg
cmc
cli
enter
ljmp
jle
mov
push
and
push
popf
cmp
mov
xor
lods
dec
imul
jg
adc
fsubl
mov
mov
mov
jle
hlt
dec
fidivrs
test
stos
jge
rorl
jecxz
mov
xchg
lret
stc
les
cmp
nopl
jp
and
or
jecxz
add
fsts
imul
pop
fstpl
sbb
inc
jns
cmp
pop
rcll
sahf
mov
dec
fldenv
fstps
and
jns
mov
xchg
icebp
mov
scas
aaa
popf
dec
sub
int3
push
or
out
lods
xor
mov
inc
inc
daa
jle
stc
pop
in
imul
xor
pop
xchg
outsl
pusha
mov
adcb
adc
adc
mov
xor
inc
test
jnp
inc
and
out
mov
call
pusha
jo
pop
push
sbb
xor
scas
pop
xchg
xor
jmp
mov
mov
scas
clc
sbb
push
mov
sub
out
mov
imul
and
loop
cmp
push
add
inc
ds
sub
mov
dec
dec
ficomps
adc
push
bound
cmpsl
outsl
into
push
mov
stos
out
mov
out
jae
movsb
xchg
jae
mov
push
sahf
sbb
int3
pushf
sbb
sbb
and
test
xchg
lret
dec
je
pop
lea
and
mov
xchg
nop
scas
and
cmp
int
mov
sub
lahf
dec
leave
sahf
push
sbb
pop
adc
push
cmp
repnz
ja
leave
cmp
mov
scas
loopne
sti
xchg
adc
fistpll
ret
ficoml
daa
jno
jmp
les
cmp
divb
pop
mov
mov
xchg
test
sbb
pop
pop
fnsave
adc
movsl
inc
xchg
fmulp
shr
mov
pop
popf
mov
cmp
stos
mov
inc
in
subl
lret
sti
out
sbbl
lods
xchg
sub
les
cmp
inc
jne
dec
cli
data16
lcall
xchg
mov
xchg
and
or
stos
jb
pop
mov
dec
andb
xchg
inc
or
pop
call
fnsave
push
stos
inc
repnz
mov
stc
test
fs
mul
or
ret
cmc
mov
lret
insb
sbb
xchg
mov
fiaddl
pop
jbe
rorb
xor
loope
popf
pop
idivl
es
mov
xchg
jl
lcall
jmp
hlt
pop
in
hlt
cli
lods
and
xchg
in
jbe
loopne
pop
inc
aam
or
out
addr16
ret
faddl
outsb
add
out
and
cwtl
add
insl
adc
cmp
addr16
in
and
out
and
cmp
xlat
or
jge
repnz
test
cmp
data16
adc
add
xchg
inc
jbe
sbb
out
cmpsb
jbe
js
div
and
daa
mov
pushf
cli
jle
scas
js
xor
jo
xor
add
jp
dec
cs
sti
cmp
das
push
adc
add
andl
inc
cmp
pushf
aaa
mov
mov
in
cltd
in
sub
ret
push
and
test
or
insb
cmp
mov
fwait
out
adc
sbb
mov
negl
orb
mov
mov
out
push
add
cmp
adc
or
sbb
cmp
adc
xorl
hlt
sub
add
es
sub
jg
or
xor
ss
iret
ss
pop
rcrl
ljmp
jns
xchg
cmp
pop
cmp
mov
or
hlt
sbb
out
mov
dec
xor
cli
hlt
fnstcw
popa
and
sub
lcall
xor
xchg
dec
ret
rcrb
repnz
or
push
xlat
sub
cmp
push
inc
or
jge
mov
jb
dec
inc
shl
lret
aaa
repz
stc
scas
inc
and
push
in
sbb
les
pop
fbld
andl
mov
shrl
out
jne
sarb
and
xchg
sbb
mov
jl
and
dec
sbb
test
inc
in
cltd
xchg
mov
test
mov
in
pushf
cmpsb
out
sub
in
inc
cmp
out
stos
push
pop
cmc
in
pop
or
fmull
sbb
sti
lods
mov
mov
add
stc
cwtl
adc
dec
push
dec
jl
dec
sub
and
mov
leave
mov
adc
scas
add
sbb
repnz
inc
sti
sbb
icebp
out
push
push
inc
and
shl
cmp
mov
call
jle
mov
loop
adc
jmp
sbb
fimull
leave
mov
dec
ret
lcall
xchg
sbb
xor
cmp
popl
add
popf
arpl
xor
or
xor
aam
fisubs
loopne
xchg
ret
xchg
push
or
xchg
insb
popa
push
sarl
dec
aaa
test
pop
or
ljmp
xor
xor
loopne
daa
out
shlb
jae
sarb
ucomiss
loopne
notl
and
insl
dec
dec
or
ss
jbe
xor
rorl
xchg
mull
sub
out
inc
testl
jo
mov
shlb
movsl
ss
push
leave
jle
into
jns
mov
sub
adc
jg
cwtl
pop
mov
test
pop
dec
fmul
fstl
pop
js
sub
fs
icebp
mov
mov
in
lea
cmp
xor
pop
in
xchg
addr16
add
stos
or
imul
ja
add
lcall
movsl
mov
mov
adc
or
inc
push
test
push
ljmp
inc
ret
sarl
sbb
mov
jns
jmp
sbb
jl
fdivrp
sub
les
cwtl
mov
in
and
xor
test
jle
lea
call
dec
cmpsb
cmpsl
cmp
and
stos
inc
jns
cli
daa
scas
sub
and
pop
lret
fsubr
js
into
xchg
xchg
mov
xor
iret
push
repz
pusha
jb
jae
into
scas
in
outsb
into
cmp
xchg
sbb
xchg
in
sub
lahf
jns
loop
pop
loop
stos
aas
leave
imul
mov
jp
dec
cmp
fs
int
rcrb
xchg
bound
lods
mov
xlat
sub
pop
push
notb
sub
lods
insb
fwait
pushf
cmp
cltd
sub
sub
cmp
lods
pop
sarb
mov
push
aam
mov
jne
out
cmp
sub
mov
jno
push
bound
lret
adc
jp
movsl
mov
lcall
push
fcomp
out
push
jmp
push
stos
xor
pop
ss
inc
push
sti
in
cmp
or
pushf
dec
mov
mov
nop
int
jbe
incl
push
xorb
std
jge
rcll
adc
in
mov
xchg
pop
and
mov
xchg
adc
push
out
xor
les
dec
pop
fcoms
out
ficompl
ret
xchg
gs
and
jmp
rorl
push
ja
fs
fwait
jp
sbb
pop
test
sbb
sbb
sbb
cmp
cmp
jnp
fadds
sahf
setns
mov
or
test
cmpsl
xchg
xor
mov
lcall
sub
inc
sbb
lret
lods
xor
push
cmpsb
aas
add
rorb
xor
sub
sbb
loop
xchg
les
cltd
loope
data16
jmp
call
jp
and
xor
inc
fmul
push
pop
mov
ljmp
je
pop
out
mov
subl
jle
inc
iret
mov
add
test
fadd
jge
daa
jns
rcr
rorl
fmuls
jl
subl
out
ficoml
or
loop
pop
xchg
test
loope
js
movsl
jae
popa
int
das
jbe
leave
mov
call
adc
lret
or
pop
int
mov
fiaddl
sub
popa
daa
gs
das
fcoms
addl
out
cli
rclb
in
fcmovbe
jne
fxch
enter
idivb
dec
sbb
xchg
aaa
cmp
pusha
test
les
dec
mov
xor
mov
cmp
bound
mov
sub
ss
mov
and
sbb
and
xchg
cmpsb
lock
jbe
mov
xor
cmp
pop
jmp
js
pop
std
ror
pop
pop
and
push
cmp
jmp
push
cmp
js
out
aaa
push
in
pusha
fstl
jno
cmp
mov
dec
push
ret
adc
int3
cmpsb
jg
das
repnz
mov
lret
sti
jb
testl
cmc
mov
fistps
push
xor
xchg
cs
mov
shl
lret
push
xlat
mov
rorb
out
xor
stos
adc
scas
sub
out
imul
test
test
mov
cmp
and
mov
xor
pop
mov
or
mov
sarb
mov
aaa
loop
rcrb
add
enter
scas
outsb
add
xchg
dec
icebp
cmp
orl
aam
push
scas
in
inc
repnz
jecxz
sub
out
repnz
cs
lea
outsl
or
xchg
popa
test
sub
inc
mov
hlt
notl
push
mov
outsb
cmc
inc
add
pushf
loope
fisubl
add
in
notb
iret
ret
lret
jle
in
fildl
ja
jp
jns
add
add
sbb
fcmovnu
jne
pop
or
adc
xor
push
lods
mov
xchg
aad
sahf
add
hlt
adc
cmc
sub
push
xchg
iret
push
cmpb
xor
sub
adc
je
lret
xchg
mov
and
aam
cmp
push
xchg
gs
jp
jo
lret
pop
mov
mov
xchg
add
and
inc
inc
negb
imul
inc
mov
xchg
repnz
sbb
int
mov
rcl
jne
sub
dec
xor
mov
xorl
roll
fsubrl
outsb
cmp
jge
fidivrl
bound
shl
push
test
cmp
stc
adc
and
and
xchg
mov
adc
mov
push
cs
adcb
sbb
push
xor
push
sbb
pusha
push
mov
ds
xchg
sbb
popa
xchg
or
xor
negb
in
xor
push
xor
loop
adc
add
sbb
inc
push
mov
fidivs
mov
cmpsb
stos
jns
xchg
mov
sbb
jecxz
adc
xchg
filds
xchg
adc
loop
aaa
pop
andl
mov
sub
mov
or
out
cltd
push
ror
push
xchg
pop
push
push
pop
or
xor
fcoml
dec
ljmp
int
mov
mov
loope
in
mov
xlat
call
addr16
outsl
aam
or
insl
add
jmp
mov
stos
lods
aaa
sub
xor
mov
cmp
stos
addb
pop
xchg
into
jbe
aam
sub
out
push
insl
push
xor
cmp
lea
pop
fistl
scas
lret
fwait
or
aam
pop
adc
mov
lds
stc
cwtl
repz
dec
and
jle
sbb
lcall
xor
outsb
pusha
mov
rcr
aas
mov
xchg
mov
or
pop
outsb
lret
mov
mov
lcall
pop
daa
mov
sub
add
leave
es
xor
dec
inc
insb
pop
lret
mov
fldenv
add
pop
dec
movsl
out
rorb
inc
inc
fnstenv
adc
mov
and
leave
xor
repz
xchg
aaa
or
in
or
iret
mov
addr16
popa
push
out
xor
aad
mov
imulb
inc
lock
outsl
jb
push
push
fwait
outsb
faddl
inc
sbb
pop
jb
adc
push
mov
and
sub
pop
out
int
pushf
adc
cwtl
pop
out
mov
push
movsl
in
repz
add
sbb
pop
inc
adc
mov
inc
and
addr16
sub
mov
shrb
pop
sbb
pop
je
pop
outsl
or
mov
pop
jmp
sub
push
sub
mov
sbb
test
add
outsl
addr16
jno
jecxz
lea
into
in
adc
pop
nop
mov
mov
out
scas
lret
movsl
cmpsl
and
repz
insl
add
or
stos
in
or
lea
lcall
lods
imul
xchg
mov
xchg
adc
popl
lock
add
in
cli
popf
pop
out
mov
mov
jl
rorb
fwait
inc
inc
test
mov
insl
jmp
sbb
add
jecxz
jp
int3
sbbl
lds
out
add
push
or
pop
mov
dec
sbb
ret
bound
mov
out
add
pop
ss
movsl
mov
adc
mov
fadd
add
sbb
adc
or
mov
adc
imul
rcrb
std
rcrb
stc
push
movaps
loopne
js
xor
jo
popa
fildl
rcll
dec
sahf
mov
mov
mov
inc
enter
loop
cmpsl
inc
ret
scas
lret
adc
push
and
xchg
xlat
mov
loopne
int
push
pop
in
mov
mov
and
dec
test
divb
test
cltd
cld
mov
cld
pop
test
jbe
or
jbe
icebp
es
insl
mov
hlt
sub
rorb
xchg
xchg
pop
xor
aaa
addl
hlt
sbb
ret
sbb
std
into
cmp
stos
rclb
push
and
daa
sbb
jecxz
ds
aas
test
test
fimull
push
and
sbb
cmp
xor
sub
stc
insb
mov
and
mov
lock
mov
sub
rcll
xchg
popf
xchg
mov
jb
add
sub
push
or
and
insl
cmpsl
mov
push
sbb
pop
dec
lret
and
fildll
mov
arpl
or
push
out
jne
sub
and
dec
fsubrl
pop
mov
popa
leave
daa
and
add
dec
jb,pt
not
sbb
fdiv
dec
orl
cmp
or
jle
pushf
lds
mov
scas
fistl
popf
sbb
insl
sbb
shll
out
sbbb
jo
icebp
hlt
jns
mov
inc
dec
pop
mov
mov
xlat
xor
pushf
xor
adcb
inc
or
jmp
scas
adc
mov
scas
adc
push
popf
xchg
jmp
mov
idivb
mov
cmp
pop
inc
mov
sub
out
cli
enter
mov
sbb
sbbl
std
and
fbld
mov
ret
mov
fwait
or
xor
add
push
inc
dec
sar
inc
lds
sub
shll
pop
mov
fisubrl
bound
sbb
push
mov
or
gs
inc
pop
loopne
lahf
mov
rorb
ficoms
ud0
std
loope
xlat
push
mov
push
push
aad
inc
nop
cli
adc
sub
lods
repnz
jge
jae
scas
add
loop
loop,pn
xor
xor
and
lods
dec
xor
jnp
pushf
cmp
xchg
aad
je
outsb
cmpsl
mov
in
jnp
ja
xor
and
ds
adc
pusha
and
sub
sbb
test
mov
xchg
lret
dec
imul
push
mov
adc
sub
cmpsl
mov
jno
pop
push
repz
loopne
sub
push
lea
mov
out
sahf
or
mov
mov
push
ds
sub
scas
stos
jmp
loop
inc
cmpsl
cli
jno
les
insl
sahf
jmp
test
sub
in
mov
clc
clc
bound
xchg
jno
mov
fwait
adc
lcall
bt
lea
imul
ret
insb
lock
lods
push
add
mov
jle
imul
mov
inc
pop
lods
adc
mov
repz
cmp
fsubrp
test
popa
mov
push
push
xor
fwait
sarl
mov
pop
cmc
cs
jbe
inc
stc
ljmp
inc
pop
cmc
iret
adc
outsb
cmp
dec
mov
les
or
cmp
cwtl
inc
lock
sub
pushf
xchg
mov
aaa
cmp
scas
or
dec
cmc
xor
mov
dec
les
stc
das
inc
xor
adc
jne
jle
js
out
mov
fsubl
jnp
scas
push
sahf
dec
jmp
dec
in
or
mov
test
fnop
mov
or
outsb
pop
cmp
andb
jg
data16
mov
adc
xor
inc
cmp
incb
mov
or
stos
dec
stos
fidivl
jo
addl
mov
xchg
fcompl
mov
ljmp
xor
sub
adc
sub
imul
and
fucomi
enter
out
pop
mov
push
arpl
mov
imul
and
fcoml
mov
mov
mov
in
test
lcall
iret
push
test
mov
mov
nop
xchg
mov
adc
jno
cmp
push
and
xchg
out
imul
test
or
add
mov
neg
add
js
jp
inc
push
and
jo
pop
inc
sbb
lods
mov
jb
ss
lock
loop
mov
cld
stos
dec
adc
lods
push
dec
sub
leave
adc
shlb
lods
popf
in
jo
arpl
pusha
xchg
and
pop
add
push
in
shll
xor
push
in
cmpsl
pop
xor
dec
cmp
movsb
mov
xor
push
out
clc
loopne
arpl
sbb
mov
pop
adc
adcl
loop
sahf
nop
cmp
out
fisttpl
sbbb
lds
inc
mov
jns
into
mov
out
mov
jo
or
out
pop
test
idivb
dec
xchg
repnz
jmp
jnp
sbb
andl
sbb
pop
pop
mov
pop
in
add
mov
lods
fldcw
pushw
loopne
pusha
iret
mov
mov
xchg
cwtl
imul
movsl
dec
hlt
or
pusha
inc
loopne
mov
in
int
rorb
xchg
shll
adc
outsb
bound
imul
loopne
test
mov
mov
fdivs
sbb
dec
mov
stos
test
add
gs
cmp
sub
into
jns
hlt
dec
mov
and
ss
popf
inc
leave
inc
lds
push
inc
jg
imul
subl
xchg
or
dec
dec
xchg
pusha
int
movsl
lret
mov
xor
add
sub
ret
sub
cmpsb
les
fs
mov
sti
dec
fstpl
ja
imul
std
xchg
inc
jnp
inc
movsl
aaa
mov
stos
add
cld
test
push
push
mov
xor
dec
stc
cmp
dec
inc
sarl
push
lahf
xchg
std
inc
push
xchg
adc
jns
orb
or
or
push
and
sub
lock
aaa
jecxz
std
call
gs
stc
ss
xchg
jge
stos
xchg
popa
pop
iret
mov
and
mov
shl
leave
lret
push
das
push
cmpsl
add
lock
mov
mov
xchg
jo
pop
into
jg
ja
dec
push
das
or
sub
and
out
es
sti
lcall
dec
outsb
adc
shr
int
lahf
add
test
test
hlt
call
xor
xor
popa
ljmp
or
and
lret
jg
scas
test
aad
stos
loopne
jl
pop
push
imul
or
out
cmpl
outsl
ljmp
outsl
mov
addr16
clc
inc
mov
shrl
pop
popa
pushf
es
cld
jp
out
insl
aas
scas
adc
cwtl
fcmove
imull
mov
ja
jo
ja
xor
movsl
rcll
lea
adc
movsb
ljmp
xor
ljmp
aas
or
ljmp
cmp
mov
lret
jmp
xor
shr
in
add
or
mov
lcall
pop
imul
rclb
fwait
in
je
lock
pushl
out
or
dec
out
nop
sub
rorb
adc
xor
xchg
iret
xchg
mov
test
rcll
xchg
xchg
sub
int
sarb
push
jmp
add
sti
dec
call
cs
adc
fucomi
xor
outsl
loop
adcb
mov
inc
imul
inc
outsb
ljmp
add
lods
mov
leave
int3
int
shrl
and
or
test
pop
mov
jns
inc
or
sub
xchg
icebp
mov
sub
xor
and
dec
mov
test
lret
fnstsw
test
lock
ja
jmp
je
mov
push
std
mov
inc
aaa
or
dec
cmpsb
xor
into
leave
gs
pushf
js
inc
cwtl
out
add
mov
fwait
jp
dec
fbstp
popa
jae
std
std
loop
aaa
aam
les
push
and
imul
mov
rcr
gs
call
negl
cmp
lret
pop
xchg
sbb
push
mov
ds
mov
pop
loop
inc
push
cmpsl
mov
jns
or
loopne
gs
dec
jge
jns
push
into
push
cmpsl
ja
mov
rorb
sahf
sahf
cmpl
jle
xchg
mov
xor
jno
push
int3
jnp
mov
cmc
fwait
push
idivl
cs
je
int3
fildll
ljmp
jle
popl
std
sub
aad
dec
xor
pop
ret
push
out
popa
mov
sub
das
mov
lahf
test
mov
jae
out
fucomi
dec
sbb
fstl
and
jae
stos
into
adc
push
das
mov
mov
int3
mov
cld
and
fldcw
jge,pt
dec
in
pop
push
xchg
xchg
popf
int
mov
or
stc
add
push
in
movsb
dec
mov
dec
mov
mov
push
cltd
mov
lea
jnp
push
mov
cmpsl
popa
xchg
mov
jbe
add
movaps
jecxz
in
cmp
push
loopne
cmp
out
push
test
pop
loop
subb
imul
insl
in
in
rclb
push
in
or
test
cmp
xor
fwait
jns
ror
je
fdivp
cmp
jo
add
sub
mov
loopne
outsl
loopne
xchg
fcmovnb
loop
pusha
lods
xor
outsb
lea
sbb
cmp
push
addr16
adc
and
bound
dec
mov
xchg
movsb
mov
or
and
scas
fsubrs
out
in
jb
adc
or
arpl
inc
mov
jmp
in
sbb
popf
sub
mov
add
add
ljmp
scas
mov
or
cmp
push
sti
imul
stos
jp
mov
shrb
lock
inc
pop
test
in
call
in
push
xor
xchg
sti
and
imul
inc
sbb
jecxz
and
aad
add
sbbl
in
fdivl
or
rolb
push
popf
mov
sahf
add
add
mov
cmp
scas
repnz
test
push
and
enter
out
js
sti
add
cmp
pusha
xorl
sti
int3
ror
cltd
mov
aad
stos
cmp
cmpsl
cmp
sub
mov
stc
popa
repnz
jb
outsb
dec
or
push
inc
mov
xchg
jl
xor
iret
loop
out
ret
pushf
test
cmp
and
mov
mov
xor
sbb
cmp
pop
fidivs
pop
pushw
cmpsl
adc
pop
iret
xor
sti
mov
mov
daa
jp
mov
popf
sub
xor
add
and
hlt
xchg
outsl
xor
loop
cmp
adc
hlt
popf
and
jp
fprem
xchg
add
xchg
and
je
inc
sbb
mov
out
sub
inc
fcompl
popa
mov
sub
negb
or
jle
jl
push
ja
add
scas
or
mov
sub
and
cli
adc
setno
push
cld
add
pushf
mov
cmc
fwait
pushf
xchg
rcr
mov
popa
hlt
or
sbb
rcrb
mov
sarl
mov
lcall
sti
mov
jb
dec
test
enter
mov
jl
in
jl
push
push
sbb
xchg
xchg
or
in
lcall
cmc
jmp
pop
dec
xor
aad
je
and
sbb
xchg
ds
jge
jge
add
cmc
mov
sub
push
scas
aas
mov
push
adc
fucomp
movsb
jne
adc
jmp
push
jns
xchg
add
add
cmpb
sbb
sub
cmp
add
cmc
test
fsubs
insl
outsl
xor
jg
xchg
loop
add
xorl
push
mov
push
ficoml
mov
add
adc
ja
and
dec
sub
sub
mov
lods
xchg
ficomps
dec
mov
push
fnstsw
inc
mov
loop
add
push
pop
mov
fmul
push
out
mov
cld
pushf
test
pop
mov
adc
xor
inc
sti
sub
lahf
xchg
inc
popf
ret
or
add
add
sbb
pop
bound
fnstsw
call
movsb
push
iret
add
or
popf
cmp
pop
insb
push
adc
cltd
sub
sub
orl
les
xchg
mov
je
push
xchg
rol
filds
hlt
or
pop
outsb
push
imul
adc
jmp
scas
dec
hlt
mov
fs
sub
loopne
push
bound
cmpsb
shrb
mov
and
xor
inc
sub
jecxz
sub
and
jnp
or
movsl
or
iret
mov
filds
push
lahf
add
push
push
aas
loop
jo
xchg
add
xchg
jp
add
cmp
shl
jae
mov
xchg
js
push
mov
stc
add
adc
mov
stos
hlt
dec
adc
mov
sbb
add
push
sbb
fisttpl
mov
hlt
stos
aad
mov
mov
sub
rorl
lock
ljmp
add
or
movsl
add
mov
int
call
cwtl
movsl
rcrb
mov
or
push
jo
mov
sub
pushf
mov
jecxz
pop
dec
mov
dec
fmuls
adc
ds
add
mov
dec
rclb
jecxz
not
lret
out
cmp
cwtl
lcall
lods
lret
and
movsl
repnz
add
mov
push
cmc
in
repnz
xchg
pop
xchg
mov
ret
push
push
push
xchg
in
nop
sub
and
mov
faddl
test
jbe
push
dec
in
sub
xchg
fs
aad
or
clc
repnz
inc
pushf
cmp
jl
pushl
dec
lods
dec
rorb
jecxz
jle,pn
sbb
fs
xchg
sub
je
jmp
pop
mov
enter
ficoml
xor
cmp
repnz
xor
dec
xchg
ljmp
mov
inc
xor
lret
pop
jecxz
sub
push
out
dec
adc
cmp
and
jge
adc
dec
insl
addb
mov
xchg
xchg
loopne
incb
leave
dec
imul
cmp
stos
pop
mov
pusha
mov
dec
je
pop
mov
fmull
jo
cli
mov
sub
out
es
pop
paddsw
xchg
mov
lcall
rorb
dec
clc
ret
sarb
pop
xor
pop
mov
add
je
insb
xchg
sbb
iret
in
xchg
lock
ljmp
mov
xchg
xchg
and
cmp
and
cmpsb
adc
jle
or
int3
xchg
xchg
out
out
add
fdivrs
jl
add
or
mov
popa
mov
mov
movsb
xor
les
outsb
repz
test
cltd
arpl
stos
mov
jecxz
push
mov
cmp
into
rcrb
out
dec
mov
mov
dec
push
sub
cltd
inc
into
pop
outsb
leave
subl
bound
dec
in
mov
jb
out
es
sbb
dec
jbe
addr16
sub
scas
lret
cld
sbb
add
adc
adc
scas
loopne
or
inc
lock
mov
push
inc
push
mov
leave
mov
push
and
jmp
rcrl
xchg
inc
cwtl
or
cmpsl
push
xchg
adc
mov
xlat
test
out
adc
inc
and
addr16
inc
cli
pop
je
dec
testb
out
xchg
mov
dec
ret
or
mov
inc
and
adc
mov
fs
or
ret
xor
stos
push
xchg
adc
pop
xchg
lods
cltd
inc
sbb
call
cmp
ljmp
xchg
cmp
mov
insl
cmp
aam
fmulp
inc
sbb
in
lcall
rorb
jmp
mov
scas
gs
fs
test
pop
nop
inc
inc
jo
notb
clc
call
cmpsb
mov
sub
dec
pop
sahf
cs
and
notl
pop
jne
add
add
je
sbb
cmpsl
add
in
int3
mov
push
or
mov
lock
scas
push
pusha
jl
xchg
mov
mov
jae
je
and
xor
hlt
inc
pop
xor
cmp
mov
mov
xlat
mov
insl
sahf
inc
lock
xchg
push
fwait
test
fcoml
mov
dec
cltd
xchg
sub
shrl
pop
sbb
arpl
mov
mov
shll
pop
std
adc
rcrb
ret
insl
jne
inc
xor
aam
lahf
xchg
dec
idiv
push
js
enter
xor
movsb
pop
xor
jl
loope
lret
cmp
test
or
pushf
or
push
test
cmp
fnstsw
push
lret
xchg
ds
cmp
ds
add
cmp
fidivrs
daa
mov
pop
mov
or
rorl
popf
test
aad
mov
call
ret
push
loopne
mov
aas
jecxz
pushf
sbb
mov
jecxz
push
xchg
jno
dec
jle
notb
aas
xchg
ja
les
fwait
stos
insb
pop
cmp
or
mov
dec
mov
pop
fildl
test
xor
or
insl
cmp
mov
lahf
pop
out
dec
iret
stos
cmp
mov
mov
stos
sub
push
test
or
imul
subb
cmp
xchg
scas
mov
loopne
aam
jbe
fwait
cli
push
repnz
mov
ljmp
or
cli
loop
sbb
jns
mov
adcl
jb
add
jmp
dec
sub
jno
xor
inc
cmp
xchg
movsl
popf
lock
test
test
dec
pop
dec
push
xchg
popa
data16
ret
mov
sahf
mov
or
ja
repnz
mov
call
xor
xorl
mov
pop
pop
mov
rcrb
add
or
jg
call
mov
mov
inc
add
sub
lods
into
mov
cltd
xchg
ljmp
add
cmpl
sbb
addr16
nop
ss
add
and
xchg
stos
cs
xor
cmpl
inc
xchg
lret
cmp
iret
sbb
icebp
cs
sbb
call
add
pop
mov
in
inc
dec
cwtl
mov
stos
int
xchg
in
xor
sahf
sbb
mov
out
xor
xlat
call
push
test
addr16
lds
and
aam
out
jae
and
movsl
movl
inc
push
int
loopne
jns
arpl
outsb
mov
sbb
cli
adc
adc
popa
xchg
xchg
inc
lret
cmp
outsb
fists
out
lret
sub
int
and
filds
dec
mov
movsb
stos
cmp
jl
rclb
jge
inc
mov
jb
cs
mov
xorb
mov
adc
pop
mov
and
fiaddl
popa
into
xchg
subb
addr16
xchg
xchg
leave
repz
les
add
in
test
fidivl
xchg
sbb
mov
popf
adc
in
fiaddl
dec
and
cmp
dec
test
or
adc
jmp
mov
call
sub
jl
jnp
clc
repz
cli
jo
cmpsl
cmovno
mov
mov
repnz
or
mov
lret
xor
jne
adc
xchg
jnp
cmp
add
xor
rorb
lahf
insl
testb
or
mov
push
lds
mov
xor
mov
pop
movsl
cmovg
push
test
cli
sahf
adc
pop
pop
call
mov
inc
in
dec
push
int
fbstp
sbb
cmp
nop
cmp
jp
and
sbb
sti
mov
or
mov
pop
fwait
and
in
adc
xor
add
int
jge
jns
xor
jmp
jl
icebp
int
cmp
cmp
pop
xor
stos
jl
fisubl
xchg
popa
cmp
jae
mov
fucomi
fucom
loope
xchg
cs
js
inc
lods
or
fisubrl
icebp
aas
test
adc
sub
mov
enter
in
sbb
sahf
dec
test
or
adc
cmp
mov
into
call
fsubrs
push
test
mov
popf
and
cwtl
mov
jns
test
pop
test
repz
pop
test
mov
arpl
lds
xchg
lea
mov
pop
sbb
out
call
mov
rolb
push
ret
ret
and
hlt
xchg
fcomip
pusha
or
cmpsl
imul
or
insl
ljmp
pop
push
inc
sbb
test
test
aas
adcb
pop
xchg
mov
push
movsl
aaa
or
ja
jecxz
adc
mov
hlt
sub
je
xchg
mov
inc
and
jecxz
sbb
insb
push
jecxz
js
ja
push
mov
dec
and
dec
jae
les
rolb
pop
hlt
repz
mov
xchg
mov
sub
mov
mov
dec
sti
ret
cwtl
adc
inc
and
or
cmp
xchg
or
lret
cmp
lock
add
jecxz
fidivrl
jmp
cmc
xor
sbb
icebp
loop
call
movsl
add
in
xchg
adc
pop
pop
inc
adc
jl
sahf
scas
cmp
pop
inc
xchg
shll
ja
mov
in
mov
xor
cmp
and
insl
inc
mov
xchg
dec
sub
mov
sahf
jnp
in
jns
shll
les
pushf
push
xchg
lahf
add
mov
jl
divb
mov
fisttpll
test
push
cld
outsb
jge
repnz
mov
nop
icebp
movsl
mov
jne
add
sub
sbb
mov
movsb
test
mov
xorb
orb
dec
fidivs
shlb
cmp
shll
xchg
cmp
inc
xor
pop
scas
add
icebp
xchg
lods
xlat
addr16
outsb
fwait
adc
inc
test
imul
lods
fstpt
mov
in
or
and
loopne
js
sub
dec
sub
cmp
ja
dec
ljmp
pop
add
ljmp
ficoml
inc
in
adc
and
add
sub
fildl
imul
iret
cmpsb
push
test
popf
dec
ds
xlat
push
int3
push
arpl
cmp
addl
ja
js
push
jb
scas
popa
scas
lea
inc
cltd
pop
test
adc
negb
aaa
push
lret
mov
imul
insb
out
push
out
inc
push
jns
mov
adcb
fidivrl
push
or
jle
insl
and
sub
pop
mov
inc
dec
jg
sbb
fsub
ret
jg
in
imul
sub
scas
roll
mov
mov
xor
out
mov
lods
clc
mov
or
adc
mov
or
jno
ss
cmpl
add
or
std
adc
fnstcw
clc
mov
push
into
in
test
mov
add
or
mov
cmp
pop
push
dec
es
mov
test
enter
jo
cmp
lds
enter
int
pop
sub
orl
cmp
jae
add
lcall
sbb
xchg
movsb
xchg
xorb
mov
stos
mov
es
mov
pop
fdivrs
fisttps
aas
test
pushf
pop
aas
icebp
stc
daa
or
andb
mov
mov
aad
add
xor
fldt
sar
clc
xor
icebp
xchg
nop
pop
adc
push
imul
popf
push
cs
iret
movsl
sub
pop
add
inc
repz
ja
inc
jnp
gs
lea
clc
sbb
mov
iret
add
leave
pop
sbb
bound
adc
sub
ds
shll
gs
and
fidivrl
jae
xor
push
inc
add
fs
clc
vcvtpd2dqy
test
sbb
mov
mov
dec
dec
mov
call
push
stos
sub
mov
and
mov
mov
fstpl
jne
push
movsb
mov
arpl
add
test
xchg
push
scas
rorl
mov
cmp
cmc
pop
or
push
out
ds
dec
mov
pop
pop
je
sbb
mov
aas
fcom
lock
into
daa
rorb
test
jns
xor
push
ljmp
shll
sbb
dec
push
lcall
mov
stos
add
add
int
es
sbb
pop
sub
adc
fiadds
and
test
popf
inc
outsb
mov
mov
mov
mov
mov
inc
mov
test
mov
lret
sbb
movsb
data16
lds
fnstsw
xchg
stc
xlat
out
jb
dec
jmp
mov
in
dec
stos
scas
pop
xchg
or
xor
in
xor
cltd
or
and
dec
scas
xchg
mov
sub
cmp
jg
pop
out
push
jnp
dec
and
clc
push
arpl
loop
pop
and
xchg
loope
mov
sbb
sahf
mov
pusha
pop
andl
and
gs
xchg
xor
mov
aam
cmc
ror
in
push
es
and
xchg
fstl
pop
add
cmp
mov
insb
lds
pop
xchg
mov
popf
pushf
pop
inc
addr16
sub
lcall
rorl
inc
sbb
and
ljmp
xor
pop
aaa
and
fstpl
aas
imul
cltd
push
sub
xchg
jne
or
int3
lret
lods
pop
mov
mov
jecxz
fisubs
add
lods
cwtl
cmp
lea
or
in
aas
cli
adc
mov
inc
pushf
mov
orl
es
daa
adc
jbe
loopne
xchg
aas
imul
fdivrs
bswap
pop
jns
out
and
mov
std
sar
push
xor
inc
cltd
cltd
inc
mov
sub
sbb
add
cmp
push
and
fbstp
sbb
jecxz
adc
rorl
pusha
inc
inc
cld
shl
jo
call
cmp
fisttpl
push
or
es
stos
push
mov
mov
lock
dec
push
scas
inc
adcb
and
mov
out
xor
push
or
incb
fwait
xchg
or
add
das
sub
push
jns
out
push
loop
rcll
adc
iret
jnp
inc
subl
test
add
dec
lea
repnz
inc
ss
dec
pop
mov
les
dec
cmp
inc
push
mov
dec
pushl
add
lock
loope
push
xchg
pop
jle
test
adc
ret
shrl
lds
cmp
dec
pop
out
sbb
aas
in
clc
cmpsb
cwtl
mov
cmp
ljmp
ja
push
out
pop
sbb
adc
aaa
test
dec
pop
and
lahf
push
dec
mov
adc
mov
pop
js
push
repnz
jmp
in
adc
cs
sub
and
jle
xchg
sti
aas
dec
into
cli
add
fidivrs
bound
je
and
mov
mov
ljmp
sahf
sub
cmpsl
inc
loope
inc
test
xchg
xchg
cmp
or
jnp
jge
cmpsl
stos
sarl
push
popf
movsl
je
push
iret
adc
sub
inc
cmp
and
xorb
mov
lret
rep
inc
xchg
inc
subb
shl
mov
sub
andl
jg
push
movsb
cmp
and
xchg
iret
mov
outsl
in
scas
sub
dec
fstpt
push
shrl
inc
into
push
sahf
ret
imul
in
xchg
scas
aad
pop
stc
out
and
fsubs
push
inc
rclb
cltd
popl
ret
mov
xor
or
jp
adc
int3
fimuls
hlt
inc
xor
push
xchg
mov
int3
scas
inc
xchg
fildll
shrb
and
inc
lahf
xchg
or
fcompl
mov
mov
imul
arpl
aaa
xlat
cltd
nop
mov
adc
jno
cli
stc
xor
cmp
movsb
push
rclb
add
fldl
inc
and
push
xlat
and
sbb
mov
inc
insb
dec
cmp
lock
or
push
loope
cmc
dec
loope
mov
into
fdivrs
cld
jne
mov
jnp
jle
es
mov
fisubs
jecxz
mov
insb
ret
movsl
xor
cmp
cld
jae
lea
sub
subl
jle
pop
cmp
pop
testb
mov
xchg
mov
iret
cwtl
cmp
lcall
dec
adc
int
lds
cmp
and
insb
in
icebp
cltd
pusha
leave
pop
scas
push
repz
les
cmp
adc
and
clc
cmp
jl
test
or
jmp
xchg
fldt
mov
sbb
orb
or
pop
or
mov
sbb
dec
mov
outsl
mov
cmpsb
adc
stos
mov
pop
test
add
cmpsl
bound
repz
lods
repnz
rolb
sbb
ret
sbb
mov
lods
ds
xor
xor
lock
loopne
adc
mov
jb
mov
hlt
xor
insb
pop
push
std
pushf
sub
mov
inc
push
stos
aas
addr16
cmp
ds
imulb
sbb
push
mov
test
ss
repz
and
sti
les
scas
push
mov
adc
jle
mov
daa
sbb
mov
inc
mov
dec
adc
inc
and
sbb
cmp
sub
mov
pop
or
add
xchg
sahf
pop
popf
adc
lds
lea
mov
loop
ljmp
rcrl
pop
mov
pop
pop
les
sub
sbbb
arpl
mov
pushf
bound
push
movsl
mov
xchg
stos
dec
loopne
inc
int
add
sbb
push
xor
aas
scas
push
jnp
jo
jl
adc
add
test
push
testb
cmp
pop
cmp
dec
sub
daa
add
jns
add
repnz
sub
jg
cmp
or
push
add
mov
mov
sbb
out
mov
mov
jp
mov
test
popf
push
sbb
jecxz
push
stos
orl
and
dec
ljmp
les
cmp
mov
cli
fsubs
jnp
loopne
pop
aad
add
sbb
jmp
jne
sti
repnz
fsin
adc
push
jbe
dec
and
xchg
scas
in
int3
aas
pusha
sub
add
aam
out
outsb
jp
leave
testl
call
sub
in
jbe
loope
pop
cmpl
xchg
out
adc
inc
clc
stos
sub
mov
xorb
xorb
pusha
fcomp
dec
xor
lods
lret
pop
popf
mov
xor
nop
jne
les
push
fildll
cmc
ss
nop
mov
pop
jecxz
push
lret
adc
dec
jg
call
cmpsb
mov
lock
inc
mov
sub
xor
imul
inc
scas
jp
bound
pushf
imul
mov
inc
sbb
dec
inc
mov
adc
xor
xor
sub
call
or
pop
scas
test
cmp
push
int
adc
or
cmp
add
pop
xorl
ret
ds
out
add
adc
divb
pop
adc
add
sti
xor
add
sub
mov
test
fstpt
pop
loopne
leave
sbb
test
xchg
mov
das
leave
or
or
stc
push
fnstenv
add
shlb
adc
ftst
inc
out
cmp
cmp
clc
jns
fldcw
pop
sbb
orl
mov
push
inc
adc
xchg
repz
cmpsb
push
and
sahf
push
ss
sahf
jne
sub
or
add
xchg
fyl2x
xor
pusha
mov
daa
fcomps
sbb
sbb
pop
iret
enter
push
or
into
cld
xor
jno
imul
jns
scas
inc
push
mov
sub
test
dec
int
dec
xor
cmp
add
ss
lcall
push
push
cmc
fnsave
insl
in
leave
addps
mov
jnp
push
pushf
xlat
insl
sti
cmpsb
xor
inc
xor
mov
daa
push
cmp
sub
pop
shlb
arpl
rorb
or
push
pop
adc
sub
or
xchg
insb
dec
xlat
scas
fdivr
jnp
xlat
pop
sub
push
scas
and
sub
mov
or
cmp
scas
jbe
jmp
mov
shlb
mov
mov
cmp
mov
or
pop
jnp
xor
popa
xchg
hlt
sub
cmp
lds
xchg
lock
les
mov
jle
testl
addr16
sub
and
ss
cli
nop
clc
xor
sbb
xor
scas
into
fnstsw
pop
fsubl
stc
xor
outsl
jbe
xlat
aam
mov
jmp
push
mov
js
add
mov
daa
xchg
es
mov
jecxz
inc
mov
sub
sub
adc
fdivs
test
mov
mov
fwait
jmp
push
push
movsl
out
sbb
mov
add
mov
repz
inc
sbb
and
sub
dec
xor
gs
inc
push
push
popf
pop
mov
mov
ds
stos
aad
xor
jl
jmp
mov
or
mov
or
repz
pop
daa
bound
mov
and
data16
pusha
cmp
fcompl
dec
inc
insl
decb
into
sti
inc
inc
lret
jne
add
mov
mov
push
mov
xor
sub
arpl
or
and
pop
shlb
sbb
or
mov
fldcw
fwait
lea
add
pop
sti
gs
ret
cmpsb
mov
fsubr
push
aas
xchg
mov
scas
fs
mov
mov
sbb
cmp
jge
repnz
push
cwtl
call
jp
int
cmp
dec
inc
or
les
stos
mov
roll
js
lds
icebp
test
shr
fstps
test
int3
push
mov
pop
mov
fldcw
ret
or
dec
xchg
into
inc
mov
in
xor
xor
and
adc
or
lret
push
cmp
mov
std
sbb
mov
mov
jo
jbe
sub
popl
dec
push
push
addl
mov
out
dec
mov
cmp
mov
push
shr
mov
out
subb
stos
mov
or
adc
sub
ret
lret
je
imul
lods
adc
cltd
pop
shll
push
pop
and
dec
inc
mov
cwtl
sbb
inc
std
repnz
mov
bound
sbb
pop
inc
xchg
out
aad
sub
cwtl
dec
mov
cli
adc
push
jns
xchg
and
xchg
and
or
add
mov
pop
aaa
roll
add
outsl
lret
mov
pop
xor
sahf
repz
jg
sub
testl
imul
mov
bound
mov
test
inc
fimuls
inc
adc
test
pop
test
xor
out
jo
fstpt
loope
inc
orl
sbb
or
je
xchg
inc
and
dec
xor
fistps
jbe
push
out
sub
push
data16
je
out
aad
inc
jl
icebp
stos
and
lods
imul
lods
cmp
cmp
sbb
shll
leave
sti
xchg
fstpt
lret
jmp
xorb
push
ficomps
incb
or
or
xchg
bound
xchg
mov
stos
xchg
pop
mov
leave
iret
rcrb
addr16
mov
popf
cmp
adc
xor
lret
mov
test
adc
mov
sbb
mov
fistps
adc
lahf
loopne
adc
lods
clc
rcll
inc
sub
inc
inc
je
xorl
jne
jb
adc
jae
xchg
icebp
stos
inc
out
insl
jo
enter
lret
lock
test
das
nop
pusha
jae
sub
xchg
daa
mov
pop
add
cld
or
nop
scas
inc
dec
insb
jg
lea
xor
call
mov
jle
mov
jo
jae
cmc
inc
sbb
cmpl
popa
in
scas
loope
cmp
xchg
inc
push
clc
add
mov
jbe
jp
mov
js
sbb
push
rcrl
mov
pop
mov
push
push
in
inc
push
ljmp
stos
push
pop
sbb
mov
push
scas
inc
insb
adc
cmpsb
xor
push
dec
sbb
mov
mov
xor
test
stc
ds
push
inc
jae
mov
adc
js
adc
or
xor
scas
mov
or
mov
dec
shll
jbe
mov
stos
pop
xchg
sbb
fs
cmp
xor
sti
sarb
sarl
ds
cmpsl
push
ja
lods
adc
and
push
cmp
cmp
and
ss
es
or
xchg
into
or
iret
cmp
sbb
je
pop
push
js
jg
and
add
mov
push
ss
sbb
mov
jbe
test
into
push
xsaveopt
jg
dec
fisubl
popa
lret
pusha
ret
xor
rclb
mov
sar
xchg
cmp
test
adc
fisubl
xchg
cmp
mov
das
popf
cmpsb
or
xchg
pop
into
jge
add
xchg
mov
cmp
pop
dec
push
cmp
hlt
adc
add
and
int
xchg
scas
lods
cmpsl
sbbb
pusha
es
int
loopne
dec
mov
insl
in
mov
mov
cs
int3
pop
sub
or
pop
ljmp
add
mov
xchg
lds
dec
inc
sub
lcall
sub
adc
mov
data16
hlt
mov
in
cmp
sti
lret
jno
cmpsl
xchg
std
push
push
insl
mov
data16
xor
aas
mov
mov
scas
shrl
or
sbb
out
sub
sbb
pop
das
jg
in
fidivrs
jne
pop
pop
push
addb
push
mov
nop
xchg
outsb
xchg
xchg
call
jmp
pop
ja
pop
cmpb
ljmp
cld
mov
push
inc
jnp
jmp
out
ss
add
mov
imul
jg
lret
pop
add
inc
sti
sti
mov
mov
loopne
dec
mov
test
mov
mov
gs
cli
and
and
int
xor
leave
enter
push
jb
xor
cltd
sarb
and
std
xchg
sbb
jnp
ret
adc
lods
loope
decl
push
xchg
add
je
sbb
shlb
or
jns
cltd
pop
aas
jp
pop
cmpsl
mov
sbb
icebp
or
cld
cld
or
mov
out
jg
push
add
int
or
lcall
enter
jb
lock
or
xor
adc
insl
adc
dec
xor
mov
sub
out
jg
rcl
mov
cli
pop
shl
add
arpl
or
adc
stos
xchg
dec
mov
iret
pop
jns
out
jp
pop
out
sbb
fiadds
xor
mov
data16
popa
jge
fs
jno
int3
aas
fsubs
jb
mul
and
cmp
mov
mov
dec
xchg
cmp
mov
jmp
add
fcmovb
sbb
push
jns
ljmp
sbb
dec
cld
call
cmp
ljmp
xchg
mov
lcall
and
scas
divl
pusha
add
nop
dec
mov
outsl
inc
sub
pop
mov
push
inc
jne
mov
jge
clc
xor
mov
lcall
sub
pop
adc
cmp
aad
les
or
push
xchg
aam
ljmp
mov
addb
add
and
push
push
out
filds
mov
and
cmp
mov
cmp
addr16
adc
rol
clc
mov
fwait
hlt
mov
lock
and
mov
push
push
adc
or
in
shr
in
es
stos
sbb
stos
or
or
xchg
and
mov
popf
cmp
ss
arpl
cld
arpl
push
enter
shl
pop
xchg
sub
icebp
hlt
jg
cli
out
setbe
pop
sbb
int3
cmp
daa
test
repnz
dec
addr16
testb
rclb
fldcw
icebp
mov
nop
icebp
push
push
repz
movsl
lret
repz
pop
std
pop
shrb
les
or
lret
pop
jb
sub
xchg
lahf
ret
jae
rorl
jle
mov
lods
and
adc
mov
mov
add
mov
cmpsl
mov
add
mov
fadds
pop
xchg
pop
push
xor
add
cld
sub
adc
or
sub
shll
cltd
sbbl
adc
mov
fists
es
adc
shr
adc
sarb
aam
and
xchg
xchg
jae
icebp
leave
mov
cmc
adc
daa
pop
cmp
jmp
bound
add
rcl
push
das
dec
ljmp
inc
rolb
adc
ja
xchg
daa
stos
sub
movb
dec
test
mov
stos
testb
std
jo
sub
aaa
nop
dec
lods
dec
sbb
ret
dec
mov
je
shrl
pop
movsl
jg
add
xchg
enter
test
inc
mull
in
xchg
push
das
cmp
xchg
mov
stc
insl
call
cmp
add
test
loope
pop
lcall
jmp
rcl
mov
mov
push
lret
add
sub
lock
in
pop
mov
mov
insb
pop
in
xchg
jl
cld
fs
lcall
dec
or
add
xchg
push
push
fnsave
and
mov
push
stos
or
imul
pop
into
insb
mov
add
cwtl
mov
adc
push
mov
mov
or
bound
shrb
out
push
mov
sbb
insb
std
mov
mov
sub
test
push
shrb
jp
in
outsb
sbb
jo
mulb
imul
sbb
addr16
in
test
lahf
arpl
sub
inc
dec
cltd
je
adc
push
mov
mov
jns
js
test
lahf
mov
adc
mov
leave
pop
incl
test
scas
xor
pushf
mov
loope
dec
inc
fcomp
push
adc
inc
xchg
lds
xchg
sbb
mov
jle
adc
loop
or
xor
dec
sub
and
test
cmp
ljmp
and
xchg
mov
pop
push
repnz
jne
mov
and
mov
aaa
inc
stos
and
cmp
add
lcall
inc
fwait
addb
stos
push
mov
into
je
test
xor
icebp
push
movsb
scas
les
fbld
add
fisttps
adc
std
ret
repnz
and
xor
xor
aas
fdivrp
ficomps
js
repz
stos
xchg
sbb
cwtl
ret
push
push
orl
pop
into
jns
mov
sbb
scas
add
mov
and
xchg
adc
aam
iret
xchg
sbb
add
test
mov
bt
add
aas
pusha
int3
fisubs
jmp
test
xlat
push
dec
mov
popf
outsl
xor
pop
mov
popl
repz
scas
jns
and
fs
aam
out
hlt
mov
and
pop
push
je
std
idiv
comiss
mov
iret
in
xchg
shlb
test
call
dec
mov
rcrl
dec
mov
mov
jmp
out
lret
lcall
or
daa
sbb
icebp
push
add
loop
inc
testb
ja
fists
icebp
pop
imull
pop
ds
and
xorl
test
rcr
or
jge
mov
and
pop
enter
das
or
fsubrs
push
clc
aam
push
mov
xchg
mov
jb
lock
jae
cli
das
push
shll
mov
or
or
loope
inc
adc
imul
lock
lods
dec
jne
jne
mov
sahf
pop
lret
dec
mov
aas
into
dec
mov
outsl
jg
ret
jmp
pop
fimull
mov
out
push
addr16
push
mov
je
and
xchg
cmp
inc
fisubrl
adc
fwait
dec
mov
in
mov
insl
orb
pop
xchg
in
lret
xlat
mov
xlat
mov
movsl
nop
pop
sbb
push
lret
cmp
mov
in
in
mov
lea
clc
jbe
or
jne
les
mov
std
rcll
out
and
ds
lock
xchg
push
clc
jmp
cld
cmp
mov
div
test
mov
out
loop
or
xchg
cld
out
or
adc
or
test
lret
xor
mov
cltd
mov
addl
outsl
jge
sets
xor
lret
inc
and
jnp
enter
push
cmp
xorl
sbb
fcomi
nop
insl
adc
popf
orb
xorb
stos
movsb
inc
test
mov
mov
scas
lahf
repnz
movsl
test
cmp
mov
rorb
lahf
or
bndldx
xor
lret
jbe
dec
xor
cmp
or
popf
adc
sbb
push
jecxz
mov
inc
add
scas
mov
test
leave
insl
xor
dec
gs
aaa
jecxz
dec
notb
loopne
sbb
pop
lods
inc
push
data16
sbbb
push
scas
movsl
push
dec
sub
adc
mov
pusha
and
cli
je
mov
ds
xor
mov
fsubs
pop
adc
sub
test
frstor
xor
test
pusha
and
sbb
xchg
stos
into
mov
incl
jg
mov
xchg
int
inc
hlt
lods
aad
add
inc
mov
jnp
lods
mov
dec
fcmovbe
sbb
repnz
jne
loopne
lods
xor
xchg
scas
test
cmc
or
cs
nop
hlt
jle
ljmp
mov
shl
sub
xchg
jecxz
and
loop
inc
pop
cmp
lret
xchg
or
mov
adc
sti
mov
jmp
inc
xchg
jle
xor
jle
sbb
pop
and
sub
lcall
and
cmp
leave
mov
arpl
jp
jmp
xlat
sbb
cmp
or
shll
mov
sbb
xchg
push
shlb
mov
mov
mov
mov
and
sbb
incb
push
or
push
push
push
pop
xor
or
pop
xchg
push
cmpl
sub
mov
orb
mov
pop
cmp
cmp
sbb
bound
mov
insl
scas
addl
lods
popf
xchg
in
mov
int3
xchg
pop
pop
adc
stos
jno
and
xor
sub
mov
push
out
fcompl
cmpl
in
pop
cmp
xor
lea
push
sub
mov
inc
sub
jmp
data16
sbb
pushf
mov
add
sub
sub
insl
sub
or
enter
jno
xchg
sub
push
xchg
mov
inc
inc
test
inc
outsl
leave
xlat
push
ror
xchg
push
mov
cmp
mov
outsl
xor
dec
pop
xchg
cmpsl
or
scas
sbb
jl
aam
pop
int
pop
std
xchg
data16
mov
mov
mov
add
call
dec
out
or
pushf
xchg
xchg
sbb
xchg
negl
les
xchg
xchg
inc
and
subl
mov
inc
movsl
idivl
out
popa
jecxz
sbbl
imul
inc
jp
nop
fcompl
add
les
hlt
shrl
pushf
enter
and
fcom
sbb
lock
jp
gs
jl
in
adc
mov
add
xor
cmc
pop
ljmp
out
pop
test
lods
xchg
cltd
mov
fcmovnb
int
push
inc
adc
insl
movsl
rcrb
cmp
stc
daa
xor
push
dec
jno
xchg
cli
cwtl
xchg
push
loopne
cltd
xchg
stc
stos
jge
cmc
mov
scas
sbb
pop
hlt
cs
sub
mov
cmc
pop
cmp
mull
data16
sti
in
aam
in
cmp
sbb
imul
push
addb
andb
mov
pusha
inc
lock
mov
pop
jae
mov
inc
arpl
imul
imul
jl
lret
fsubrl
ret
lods
fsub
subl
mov
stc
repz
xchg
mov
and
adc
pusha
push
mov
pushf
mov
sub
cld
pushf
push
dec
out
adcb
insl
ss
call
clc
jne
ret
in
aas
or
xor
leave
hlt
and
lock
data16
xor
inc
inc
shll
inc
lods
stos
jnp
movsb
jg
out
pusha
stc
mov
inc
out
call
mov
push
out
or
in
fs
clc
pop
fs
pop
inc
outsb
sub
mov
push
jp
lahf
gs
xor
lods
in
iret
mov
ficompl
sbb
pop
inc
push
or
negl
jns
pop
mov
nop
loope
sbb
xor
sbb
test
bound
push
xchg
iret
rorl
pushf
fwait
enter
add
jmp
push
jmp
push
xchg
pusha
jno
cmpsb
cmpb
push
jo
outsb
or
inc
mov
jp
sbb
push
popa
pop
mov
cmp
cmpsb
sbb
data16
leave
addr16
cld
pop
jns
mov
scas
cld
inc
pop
sub
dec
adc
popf
movsl
mov
adc
sarb
fdiv
inc
je
movsb
mov
push
sbb
bound
push
xchg
and
xlat
sub
inc
dec
mov
sarb
insb
mov
adc
xchg
loope
sub
stc
in
inc
lds
jbe
push
cmp
jno
fisubs
aaa
roll
push
outsl
icebp
shr
jecxz
mov
addr16
loop
stc
out
imul
addr16
lret
mov
mov
cmpsl
pop
scas
rolb
dec
stos
mov
mov
jmp
cmp
inc
es
imul
je
dec
daa
cmp
fists
int3
or
add
sbb
pop
xor
neg
popa
pop
fisttpl
push
insl
iret
in
out
les
or
cltd
xlat
test
xor
shl
es
ret
jb
and
sub
add
push
mov
lahf
jp
sbb
pop
and
sbb
push
sbb
xchg
add
jg
shll
or
cmp
xor
js
arpl
testb
adc
stos
rcl
mov
mov
or
iret
int
add
adc
faddp
daa
orb
cmpsb
fldenv
loopne
loope
cmp
xchg
mov
in
lods
add
pop
les
push
and
call
daa
xchg
sub
cs
stc
adc
popf
add
loop
lret
pushf
stos
pop
cltd
notb
test
mov
xor
xchg
add
sti
aam
lret
push
mov
cmp
add
sbb
bound
inc
je
dec
pusha
rclb
stos
dec
xchg
add
lea
lods
push
repnz
jno
hlt
shrb
pop
inc
inc
fwait
cmp
movsb
insb
ret
xor
mov
sahf
andl
xor
pop
in
push
and
and
add
fisubs
push
sub
xchg
ror
jno
lret
popf
inc
in
add
and
lahf
mov
jmp
ss
or
dec
scas
mov
sub
icebp
adc
mov
xchg
or
or
pop
icebp
pop
mov
pop
icebp
jp
jle
adc
pushf
cmp
test
adc
pop
es
pop
add
outsb
push
hlt
jbe
leave
mov
and
fsubr
xor
dec
test
mov
mov
xchg
mov
xor
push
sbb
test
sbb
mov
es
mov
adc
cmpsl
mov
mov
out
pop
lds
jp
add
iret
sar
inc
lahf
sbb
jne
mov
xchg
loope
inc
lret
dec
inc
in
mov
jge
push
stos
mov
xor
lea
fmuls
inc
dec
pop
aad
daa
repnz
lock
pop
sbb
xchg
jl
pop
je
test
cmp
rcr
sub
arpl
in
es
movsb
xchg
cmpsb
inc
into
push
or
mov
test
mov
jle
add
inc
es
mov
in
addr16
jecxz
mov
adc
cmpb
test
sub
add
xchg
or
addr16
mov
ret
or
leave
icebp
test
xor
rcl
into
cmc
inc
adc
lret
cmp
cld
push
inc
das
gs
subb
mov
ret
pop
add
arpl
inc
jp
pushf
jge
mov
push
pushf
mov
xlat
mov
jne
cli
push
lahf
enter
push
data16
cmp
sub
mov
into
push
lret
jle
pop
adc
pusha
push
dec
mov
xor
xchg
fisttpll
inc
or
fiadds
xchg
or
cmp
cmp
outsl
ret
out
and
cmp
int
jle
cmc
dec
push
in
mov
push
dec
sbb
mov
shll
shl
sbb
iret
sub
and
ljmp
mov
and
test
loopne
in
or
pusha
test
imul
ss
jp
adc
popf
lods
jecxz
ret
mov
pop
dec
xchg
cmp
mov
cwtl
sti
insl
and
mov
mov
inc
cmpsb
adc
adc
cmc
sbb
lahf
aas
mov
ret
lods
and
and
mov
xor
inc
rcll
std
jns
sbb
in
adc
cmp
int
scas
outsl
xor
inc
fsub
and
lods
cld
dec
insb
cwtl
dec
mov
sub
insl
cmp
mov
dec
sbb
inc
and
std
cmpsb
push
fidivrl
in
or
js
push
push
jge
xor
inc
jno
stc
popf
or
cmp
scas
push
out
in
jp
icebp
cwtl
mov
mov
jo
add
adc
test
sbb
cmp
test
pusha
sbb
sub
push
inc
fs
mov
and
xor
mov
or
mov
imul
arpl
cmp
hlt
jmp
lret
test
rcr
sub
inc
mov
dec
pop
aaa
imul
sub
aam
jecxz
lcall
rcrl
lret
jge
stc
mov
popa
aam
outsb
hlt
mov
ret
rorl
es
pop
mov
adc
aas
scas
sahf
xor
iret
outsl
mov
dec
es
icebp
arpl
mov
stc
imul
in
scas
ljmp
gs
mov
sub
into
dec
push
pop
mov
jge
arpl
add
aaa
hlt
add
xor
push
or
cmpsl
das
or
lock
sbb
xchg
mov
pop
mov
cmp
clc
stos
push
jmp
mov
mov
lock
sub
mov
xchg
xlat
xchg
xchg
sbb
loopne
sbb
push
or
jmp
cmp
call
daa
gs
mov
ds
js
mov
sub
and
insb
icebp
lods
sbb
xchg
lahf
inc
test
mov
mov
sbb
daa
movsl
jle
lcall
in
in
pop
mov
fadd
inc
cmp
mov
inc
clc
xor
push
jnp
jg
roll
mov
dec
int3
into
clc
js
aaa
pushf
push
xchg
jmp
lret
add
jns
popf
outsl
xchg
add
mov
jnp
or
inc
dec
xchg
cmpsb
aam
mov
pop
xlat
and
rorl
jle
mov
in
cmpsl
and
cmpsb
shr
call
jle
subb
ret
popf
push
pop
insb
jg
insb
mov
push
cmpsb
cmp
sbb
pop
lret
cmp
fcompl
jge
xchg
scas
cmp
push
mov
sub
js
jl
sbb
sbb
sti
dec
rorb
cmpsl
mov
xchg
rcll
jmp
clc
aam
movsb
enter
sti
inc
fcomps
rorb
add
pop
mov
jo
ret
add
andb
fisubrs
pop
cmc
push
shrl
jno
inc
int3
arpl
push
ljmp
outsb
pop
mov
lcall
mov
stos
xchg
imull
push
mov
push
xchg
imul
movsb
scas
int3
out
xor
int
and
fmull
pop
adc
icebp
or
mov
mov
push
sarb
and
imul
sub
in
push
aad
in
test
adc
mov
in
cld
pop
mov
or
push
cwtl
std
mov
mov
dec
andb
into
inc
push
cmovns
mov
lock
xor
insl
push
inc
movsb
and
enter
xchg
lock
lret
gs
fsubrl
js
mov
push
xchg
add
out
sub
mov
ret
cs
shll
push
fdivl
sbb
rcrl
push
xchg
mov
adc
inc
idiv
mov
push
pop
into
fld
push
aad
or
xchg
scas
xchg
or
mov
xchg
jo
dec
sub
jmp
fs
in
mov
fstl
xor
xor
nop
ret
ljmp
bound
push
and
mov
sbb
notl
mov
nop
push
ja
cmp
push
out
dec
cmp
mov
push
and
ret
mov
jg
fnstenv
mov
sub
xchg
notl
test
pop
aas
ret
lret
jbe
loop
and
ret
push
stos
movsl
or
pushf
push
decb
push
in
test
pop
sub
insl
xchg
notb
jge
mov
jae
push
insb
pop
dec
insl
adc
xchg
or
mov
adc
cwtl
bound
mov
ss
in
roll
mov
push
push
sahf
xor
negb
daa
add
sub
or
loopne
sahf
or
lock
out
cmc
sbb
add
rol
pop
jae
outsb
ret
xchg
pusha
mov
lock
xor
xor
jl
scas
subb
ss
jae
mov
xchg
push
pop
std
mov
and
dec
mov
xor
pop
mov
mov
mov
in
pop
sub
push
ds
inc
test
push
and
leave
shl
incl
pop
iret
adc
cld
mov
mov
enter
sbb
add
mov
xchg
loope
xor
stos
jmp
cld
xchg
or
sahf
pop
inc
xchg
inc
or
js
test
aad
push
mov
push
mov
xor
loop
leave
dec
lret
test
lcall
nop
xorb
movsb
pop
rorb
cs
dec
mov
push
mov
jne
lcall
lock
mov
pop
repz
xchg
mov
cli
sahf
pop
in
dec
jb
cmpsl
xchg
add
adc
mov
es
loope
adc
loop
mov
out
add
pop
jo
or
cmpsb
and
lods
sbb
int
repz
out
xchg
jmp
mov
sahf
mov
stc
or
ret
ret
mov
xor
sub
jl
sbbl
out
aam
push
and
ss
mov
test
scas
push
rcr
ret
xlat
or
inc
cli
lds
rcll
in
aaa
mov
push
out
mov
pop
inc
add
xchg
or
cs
inc
sbb
test
lods
xchg
dec
inc
jbe
int3
adc
ret
cmp
inc
xchg
test
sbb
pushf
cmpb
notl
and
sbb
pop
mov
stos
lock
add
imull
cmp
push
adc
cmp
xor
out
insb
pop
jge
roll
imul
imul
sub
pop
insb
pop
mov
inc
xchg
scas
cltd
aam
dec
in
std
mov
stc
add
loope
pop
cli
pop
stos
cmp
scas
xor
sarl
das
add
insb
cs
call
jns
cld
and
in
jmp
rclb
add
scas
inc
mov
stos
mov
js
sub
aas
cmp
xchg
xchg
in
imul
sub
xchg
jo
push
loop
cmc
int
stos
rolb
pop
or
insl
cmp
pop
fistpll
mov
dec
cmp
rcr
out
repnz
and
push
in
pop
fwait
or
xchg
and
and
and
xor
push
mov
pop
or
push
push
loopne
rolb
fisubrs
sub
lock
aas
add
xchg
mov
in
adc
push
popf
outsb
aaa
jmp
enter
or
mov
lds
dec
dec
jnp
mov
ja
stc
push
sub
or
and
daa
mov
in
enter
mov
push
test
in
jge
bound
push
cs
sti
movsb
xor
outsl
inc
push
push
or
mov
and
dec
int
loop
in
rcrb
dec
mov
dec
push
cmp
jge
les
repz
andl
push
in
mov
das
sbb
xchg
adc
adc
xchg
jnp
data16
enter
sbb
inc
jb
cwtl
cmp
jbe
arpl
in
mov
cmp
mov
insl
cli
popa
roll
or
insb
cltd
dec
mov
out
lahf
arpl
xchg
lea
data16
pop
aad
inc
int3
fdivrl
cmp
dec
pop
fistpll
sahf
in
lock
fidivs
fidivrs
xchg
xor
push
jb
cs
popa
jo
mov
rorl
dec
sti
ret
jmp
sbb
daa
mov
je
and
divl
jmp
aaa
out
scas
sbb
push
dec
repnz
sub
inc
xchg
inc
cs
push
scas
incb
bsr
in
fsubl
xchg
xor
push
inc
adc
dec
out
insb
and
fisttpll
push
std
jecxz
pop
adc
pop
xchg
mov
mov
sti
add
or
movsb
cmp
scas
add
xchg
jl
push
mov
cmp
push
jp
cmc
pop
push
mov
mov
mov
sub
inc
jb
xchg
iret
les
sbb
outsb
data16
ret
stc
out
mov
aam
jns
sub
sbb
stc
mov
dec
cmc
add
xchg
mov
jecxz
daa
test
mov
push
cs
mov
fldenv
adc
jbe
sbb
imull
adc
or
movsl
in
cmp
and
int3
repz
sub
loope
fcomps
loopne
lahf
ljmp
scas
sbb
std
inc
mov
fnstenv
gs
lods
sbb
mov
loop
lea
mov
scas
in
add
jg
pop
addr16
adc
dec
xchg
pop
xor
xchg
dec
test
js
pop
xchg
dec
scas
scas
jae
adc
fistpll
mov
movsb
in
adc
lds
sahf
insl
pop
nop
cmp
dec
aas
dec
pop
pop
clc
fnstenv
and
adc
les
xorl
pop
imul
loopne
mov
push
xor
int
pop
lcall
lahf
daa
sub
mov
inc
add
adc
add
sub
loopne
xchg
mov
enter
add
out
pop
cmpsb
int
sub
fisubl
xchg
icebp
add
xor
scas
dec
js
xor
hlt
test
movsb
or
hlt
repnz
out
int3
pop
cld
adc
dec
sub
xchg
pop
mov
push
push
and
lcall
outsl
xchg
inc
pop
sub
mov
scas
mov
and
dec
in
pop
xorl
or
inc
xor
rcr
xchg
iret
or
pusha
mov
inc
add
ss
outsl
fisubrl
mov
fcompl
or
in
cli
or
pop
rorl
inc
cmpsb
dec
xchg
ja
sub
xchg
or
sbb
mov
out
sub
xchg
xchg
fadds
ja
ret
pop
push
out
addr16
adc
cmp
icebp
cltd
dec
loopne
jp
movsb
jae
lret
enter
sti
daa
sbb
cmc
pop
dec
mov
xlat
inc
and
fists
mov
call
or
push
push
fwait
call
push
cmc
sbb
stc
out
mov
dec
xor
jp
in
ret
dec
call
dec
sbb
cltd
add
fwait
out
inc
add
adc
jb
mov
push
or
dec
push
jnp
mov
push
fisubrs
test
iret
inc
inc
std
xchg
aas
lret
lret
and
sub
add
aam
adc
pushaw
push
mov
push
adc
jo
lock
mov
addr16
jecxz
daa
decl
lea
sbb
ljmp
or
aam
fs
aaa
into
mov
xchg
or
mov
dec
mov
cmp
divb
xor
addr16
enter
repnz
in
test
xchg
addr16
cmpsb
lods
outsb
and
lea
out
cmpsb
mov
pushf
adc
mov
xchg
clc
and
out
push
mov
insl
mov
xchg
loopne
xchg
jg
jge
push
in
ljmp
dec
dec
sub
cmpsl
lds
xor
mov
fs
icebp
and
and
xchg
imul
pop
out
xor
or
jnp
sbb
in
jns
xchg
and
jmp
filds
pop
in
add
dec
test
pop
push
adc
cmp
lds
cmp
ret
aas
ljmp
pop
imulb
stc
aaa
sbb
sbb
bound
cli
mov
mov
xor
movsb
sub
loope
shlb
inc
sbb
into
cltd
add
pop
adcl
imull
hlt
dec
lods
mov
movzwl
mov
scas
jmp
js
aas
sbb
leave
jo
xchg
push
pop
jg
pop
in
pushf
push
shr
icebp
mov
lds
fcmovb
jmp
jbe
es
push
and
mov
push
mov
push
insl
movsb
gs
rolb
inc
mov
mov
mov
push
dec
mov
mov
jnp
fwait
add
xchg
popa
add
xlat
jge
fmulp
dec
push
shufps
roll
bound
in
lods
xchg
cld
imul
mov
dec
xor
mov
daa
sub
cltd
dec
mov
xchg
xor
repz
xchg
pusha
in
nop
aad
ljmp
add
push
xchg
inc
ljmp
push
fisubrs
mov
iret
mov
xchg
push
sbb
cmp
pop
mov
insb
or
pop
cmp
jmp
les
adc
data16
xor
and
xchg
les
pop
cmp
fcmovnbe
or
sub
mov
dec
ss
orb
notl
arpl
push
push
ror
pop
insb
fldl
aas
cld
lret
mov
stos
cld
cltd
cmpb
xor
repz
cld
push
mov
aaa
lret
jp
movsb
inc
andb
fnsave
cmp
xor
lock
mov
in
loop
sbb
adc
mov
sub
push
pop
xorl
inc
add
std
rcr
adcb
dec
push
call
lahf
jecxz
xchg
push
lock
jb
scas
dec
comiss
out
fiadds
cmp
test
push
mov
popa
jp
and
mov
and
xor
pop
pusha
mov
test
xorb
bound
leave
dec
sub
sbb
sbb
xor
mov
or
insb
repnz
adc
aam
cltd
ret
in
inc
xor
ds
imul
ss
xchg
jge
cmp
clc
int3
ss
in
scas
call
loopne
xchg
arpl
push
adc
ja
sbb
pop
jge
cwtl
cmc
mov
out
mov
pop
bound
ds
sbb
jp
xor
test
shll
lods
bound
jecxz
sub
stc
xlat
std
mov
or
mov
xchg
cmc
rol
inc
or
mov
push
cmpsl
call
notb
imul
jle
xlat
dec
jno
jnp
pop
mov
push
and
aaa
ret
pop
push
outsb
scas
imul
repz
ljmp
jp
inc
dec
lods
inc
je
sub
ja
xor
push
frstor
cmp
jp
jl
push
or
cld
loopne
adc
insl
test
lds
leave
imul
test
idivb
scas
adc
aad
sti
jne
mov
mov
mov
adc
scas
cmp
jbe
iret
addb
mov
dec
and
cmp
fcompl
xchg
imul
inc
scas
adc
dec
pop
pop
mov
jbe
rolb
mov
shlb
cs
ja
xor
imulb
push
call
or
sub
ljmp
outsl
push
cmpsl
mov
pusha
xlat
mov
add
fmuls
push
sbb
clc
inc
sti
add
sbb
push
mov
out
bound
push
push
roll
loop
lcall
xor
push
cmp
and
xor
and
add
adc
testb
push
or
mov
insb
lret
fs
scas
mov
lods
mov
loope
mov
loopne
js
mov
sbb
popa
push
xchg
imul
mov
adc
lea
cmp
inc
mov
sti
xchg
ds
sbb
jecxz
ja
test
mov
ja
jl
cwtl
jbe
pop
mov
mov
cwtl
fiadds
jae
movsb
fstl
and
push
cltd
sbb
negl
xor
les
ja
mov
ljmp
dec
loope
mov
es
inc
adc
jl
and
stc
lds
stc
arpl
mov
fwait
mov
clc
xor
sub
fldt
cmp
cmp
push
cltd
fnsave
arpl
cld
xor
lods
int
je
add
sbb
add
mov
imul
or
jge
int3
xlat
dec
mov
push
call
mov
inc
or
mov
aad
out
ret
mov
addr16
pop
ss
test
nop
and
sbb
cmp
add
push
inc
dec
stos
jl
fsubrl
pop
push
addr16
inc
nop
or
jp
mov
push
push
iret
ficoms
pop
rcl
movsb
pushf
out
dec
stos
sub
adc
test
in
xor
daa
js
sbb
into
xchg
mov
cwtl
mov
or
cmp
pop
push
test
pusha
mov
movsb
adc
jne
sub
mov
mov
mov
in
stos
pushf
les
push
sub
jmp
aad
mov
inc
inc
jmp
sbb
ficoml
and
lcall
rorl
fsubrs
mov
inc
dec
test
push
hlt
push
insb
dec
outsb
xlat
popa
dec
mov
cmpsl
adc
adc
sbb
mov
imul
fadds
mov
sub
fsubrp
adc
aad
mov
mov
fisubs
js
mov
dec
sub
jno
arpl
jle
sbb
aam
mov
or
jae
mov
cmp
mov
cmp
cltd
inc
lea
fwait
icebp
push
push
pop
lods
jo
pop
adcl
pop
sub
std
and
les
xor
inc
xor
jnp
movsb
call
loope
nop
rcr
push
mov
mov
icebp
ja
aaa
add
gs
pop
and
dec
clc
xor
lahf
or
push
and
and
fisubl
rorl
mov
cltd
sbb
das
and
jecxz
xor
or
sub
lcall
push
push
shrb
jp
push
femms
ret
jno
es
mov
das
mov
adcl
push
adc
test
mov
mov
pop
mov
and
cs
lcall
sbb
clc
das
and
rorl
adc
ret
cwtl
int
ljmp
test
mov
mov
out
int3
adc
mov
mov
lret
outsb
mov
push
xchg
adc
dec
jge
imul
jbe
and
jmp
repz
adc
dec
dec
ljmp
push
mov
jno
gs
loope
jl
out
mov
insl
mov
add
jb
test
imul
iret
dec
pusha
test
cltd
and
sub
lods
and
orb
mov
faddl
mov
rol
shlw
in
pop
push
data16
adc
fistps
repnz
outsl
lods
mov
push
dec
andl
movsl
dec
cmp
repnz
or
jmp
bound
test
and
pop
in
outsl
xor
pop
xchg
andb
bound
test
jae
jns
iret
fldcw
lods
adc
scas
pop
iret
xchg
das
lahf
sbb
icebp
sarl
mov
fcomps
call
add
jl
dec
scas
push
push
push
test
or
xchg
loop
sub
popa
je
mov
mov
push
out
xor
dec
mov
stos
jle
repnz
push
inc
pusha
iret
push
test
cmp
shl
rcrl
pop
scas
ljmp
mov
ror
lods
xor
inc
addr16
outsb
les
add
pop
push
cmpsb
inc
aad
inc
cwtl
daa
lock
or
hlt
outsl
sbb
mov
jge
hlt
push
jmp
daa
lcall
out
fdivrl
enter
cmp
fistl
cmp
and
test
mov
jns
adcb
and
and
pop
dec
adc
push
mov
jae
sbb
cld
call
lret
sub
adc
sub
sbb
mov
into
rolb
xor
push
ljmp
mov
mov
shll
rolb
push
outsb
insl
inc
pop
inc
cmc
xchg
pop
imul
push
fwait
mov
jo
jb
movsb
push
mov
cmpsl
adc
pop
push
inc
sbb
lea
out
sub
add
sub
mov
jo
push
jae
pop
push
insb
sahf
ds
xchg
and
sahf
int
adc
fwait
sub
fstl
and
les
mov
int3
lahf
sbb
nop
mov
jge
add
pop
ficoml
out
cmc
hlt
repz
fwait
rolb
ret
inc
mov
sbb
mov
push
jnp
adc
lcall
cmp
loope
pop
rol
stos
push
inc
movsl
mov
loopne
movsl
sbb
shrl
mov
bound
in
add
inc
aam
mov
xchg
xor
scas
repnz
dec
loop
loope
push
nop
pop
mov
repz
pop
add
inc
stos
jge
cli
pop
ss
out
xchg
inc
and
sub
mov
ss
xlat
xchg
nop
fldt
pop
lret
adc
cmp
pop
shlb
in
js
and
push
cs
or
xchg
nop
mov
xchg
and
jle
daa
jns
dec
testb
int
inc
inc
mov
rolb
insl
movsb
lock
call
andb
jnp
xchg
xor
pop
sbb
in
or
in
rolb
jb
xor
sbb
push
cmpsl
cltd
lret
pop
push
xor
sbb
in
mov
scas
push
fidivrs
sub
push
lods
dec
imul
lods
mov
sub
mov
push
dec
test
fwait
pop
mov
aad
add
data16
adc
pusha
idivl
call
adc
pop
lret
test
dec
dec
orl
pop
mov
fcmove
movl
je
mov
hlt
jnp
sub
xlat
les
and
gs
mov
xor
cmc
ja
pop
rcl
dec
dec
js
or
fimull
insb
adc
repnz
cmp
fisttps
and
fsts
fdivr
sahf
movsl
aas
popa
call
jne
dec
mov
addb
stos
push
pop
movsb
mov
stos
aad
add
xor
movsl
ds
hlt
dec
int3
out
lea
std
cmc
aam
rolb
mov
inc
inc
fs
jns
fndisi(8087
adc
push
pop
mov
rorl
in
sahf
aad
xchg
lret
jmp
push
sub
adcl
insb
jno
pop
pop
rep
and
sub
lds
xor
jae
out
mov
rcrb
jp
scas
stc
sbb
mov
repnz
testl
jbe
rcrl
dec
and
xchg
mov
cmpsl
in
lret
aam
xchg
xor
aam
mov
fadds
repz
ja
les
iret
test
push
push
repz
jb
mov
shrl
cmp
ficoms
adcl
sbb
sub
jmp
inc
sbb
add
pop
sub
rol
adc
sub
ds
stos
pop
ret
test
sbb
pop
mov
mov
inc
roll
cwtl
dec
cld
test
sti
cmp
sbb
addr16
lret
fstp
mov
cmp
pop
out
xor
clc
or
aaa
add
mov
ljmp
test
out
movsl
out
adc
jae
cmp
mov
cmp
ljmp
ss
jp
loopne
adc
fwait
into
dec
mov
lahf
xchg
jns
fstpt
in
or
jbe
aam
insb
cld
adc
stc
dec
daa
xor
pop
sbb
ds
mov
cmpsl
xlat
gs
ja
scas
gs
pop
stos
jmp
push
daa
dec
imul
outsw
xchg
in
add
scas
adc
aas
aaa
mov
sbb
ljmp
fs
or
jno
inc
insl
fnstsw
leave
in
int
outsl
xchg
repnz
imul
adc
sub
add
cltd
and
test
arpl
jo
fwait
mov
mov
aad
xchg
mov
movsl
adc
add
call
or
mov
scas
mov
lret
push
mov
dec
fwait
lret
dec
mov
mov
mov
jno
xor
jns
adc
cmpsl
sub
and
cli
jle
jne
cmpb
and
bound
adc
bound
imul
push
arpl
sarb
sarb
cmpsl
call
je
iret
pop
dec
or
cmp
add
mov
and
daa
lret
nop
xchg
mov
xchg
test
jae
jmp
fsubl
idivl
inc
and
jns
rclb
mov
mov
sub
fs
fucom
cmp
sub
sub
dec
cmp
mov
aaa
int3
out
and
push
push
sahf
cmpsl
sbb
or
cld
jo
push
cmp
or
mov
test
lret
sbb
inc
in
scas
mov
fwait
mov
bound
leave
lea
into
in
jns
mov
jne
sbbb
sbb
pop
mov
pop
cmp
jo
popf
cmp
sbb
psrld
ja
dec
fs
mov
mov
out
jmp
dec
shlb
neg
push
aas
mov
leave
adc
aas
jo
sub
push
push
sti
ja
iret
inc
adc
iret
adc
imul
cmpsb
mov
pop
repnz
sbb
shll
mov
adc
sub
pop
sarb
or
push
or
xchg
and
cmpsl
xor
scas
lret
mov
xchg
pop
or
shll
dec
ljmp
inc
jle
cmc
mov
das
sbb
fdivp
test
mov
adc
sbb
es
int3
arpl
dec
adc
mov
mov
inc
push
mov
mov
pop
cmpsb
scas
adc
inc
in
pop
push
icebp
loop
fldcw
pop
cld
fistl
cmp
sbb
push
aaa
mov
mov
push
mov
push
rclb
xlat
jp
mov
xorb
inc
push
mov
xchg
xorl
sub
negl
dec
inc
inc
pop
adc
mov
rcll
adc
cltd
mov
enter
mov
loopne
xorl
call
adc
ss
sub
movsl
pushf
pushf
mov
sbb
sbb
outsb
stos
and
arpl
jle
mov
jmp
sbb
addb
cltd
add
lea
fnsave
cwtl
fsubs
jge
xchg
mov
lds
fcomp
aaa
pop
outsb
rolb
shrb
add
ss
adc
xor
shll
rorl
inc
sbb
or
lods
leave
xchg
and
sbb
int3
enter
adc
lds
jnp
jns
push
pusha
push
test
ret
inc
iret
add
push
ds
dec
inc
xor
idivl
test
shll
push
cs
in
sahf
mov
popa
mov
jns
mov
or
or
fsubr
xchg
mov
jo
icebp
xlat
jb
test
jne
subl
and
cld
inc
dec
cmpsl
dec
dec
xchg
xchg
xorl
addb
push
push
push
xor
enter
mov
sub
mov
leave
add
lea
pop
in
jl
data16
xchg
leave
jns
push
jmp
and
or
xchg
ja
inc
xlat
outsl
inc
push
out
pop
lds
arpl
sbb
or
roll
mov
lret
in
clc
jmp
mov
xchg
mov
mov
jle
add
sbb
shll
movsb
jecxz
pop
cmp
outsl
popa
das
loopne
insl
sub
adc
mov
out
mov
and
and
aad
or
mov
into
push
jns
xor
inc
cmp
popa
iret
xchg
inc
leave
sub
inc
popf
movsb
adc
int
fnstenv
push
mov
dec
xchg
dec
movsb
adc
mov
icebp
xor
cs
inc
les
aad
scas
xor
jg
daa
push
test
push
in
inc
mov
jo
mov
fwait
mov
cmp
bound
orb
inc
pcmpgtw
dec
shll
pop
inc
inc
call
sub
jno
mov
orl
movsl
mov
adc
cmp
scas
in
ljmp
sub
stos
sub
jns
mov
add
jg
daa
push
lret
dec
xor
sti
cmpsb
sbb
or
iret
mov
dec
xor
jbe
or
orb
pop
xor
mov
in
dec
mov
xchg
ret
jp
xor
shrb
pop
int3
cmp
ret
fstpl
aas
xor
sti
inc
mov
or
lahf
push
ret
rolb
lea
data16
xchg
out
stc
leave
out
test
mov
nop
dec
aas
sbb
aas
out
adc
es
mov
es
punpcklbw
mov
pusha
inc
push
push
and
dec
jns
out
fistpll
jmp
lret
push
xlat
sub
test
mov
stos
iret
ds
push
inc
in
sarb
pop
ds
xor
popa
sarl
xchg
pusha
add
fs
in
inc
arpl
bound
movlps
shrb
fidivrl
xor
xchg
aad
sti
xchg
or
xlat
data16
sbb
mov
loope
lds
roll
mov
cmc
pop
xchg
movsl
test
cmpb
das
adc
pusha
jecxz
or
aad
and
mov
cwtl
loopne
cwtl
cmc
decb
mov
test
jge
sub
sub
repz
test
mov
rclb
mov
fwait
mov
dec
leave
mov
scas
in
fsubr
daa
pop
and
inc
mov
popf
arpl
push
mov
lods
xor
pusha
fdivr
dec
mov
xchg
in
add
fbstp
in
lcall
push
mov
dec
fcompl
fstl
clc
insl
clc
add
push
sbb
arpl
das
insl
sbb
lret
addr16
and
add
data16
xchg
loop
sub
mov
in
jo
loop
pop
xchg
hlt
jnp
sahf
dec
cmp
inc
dec
mov
repz
bound
ja
cmp
inc
out
xor
jno
movsb
mov
mov
mov
mov
pop
pop
or
lahf
gs
or
enter
loopne
pop
mov
xchg
and
test
pop
lcall
and
sbb
addr16
jb
add
pop
push
push
fcomps
xor
and
or
sub
sbb
xor
int3
jne
xchg
jge
mov
mov
stos
inc
sub
adc
dec
adc
cmp
sbb
das
popf
rclb
xor
adc
popf
loop
ja
movsb
stos
jnp
ljmp
mov
rcll
jnp,pt
push
push
push
iret
jns
sar
xor
adc
dec
sub
iret
mov
cli
nop
inc
mov
inc
xchg
and
notb
add
mov
adc
outsb
jne
cmp
repz
ret
outsb
test
bound
inc
test
sti
mov
pop
in
ret
mulps
pop
sbb
mull
or
and
arpl
pop
mov
sub
in
aas
shl
lds
xor
push
sbb
cmp
xchg
lahf
in
idivl
and
xor
data16
gs
fsubs
and
dec
dec
ljmp
imul
or
pop
inc
popa
cs
pop
ljmp
and
push
popa
mov
movd
int
scas
shrl
lds
dec
inc
pop
add
mov
gs
cmp
bound
dec
pop
xchg
cmp
in
or
adc
call
scas
loope
jns
ljmp
scas
aaa
mov
mov
into
inc
dec
in
xchg
pop
jbe
cli
inc
lock
cmpsb
icebp
scas
dec
cmp
cld
cli
lds
pop
lea
outsb
test
xor
or
in
call
js
lds
std
xor
sbb
mov
jl
dec
sub
lret
nop
mov
xor
mov
push
mov
cmpsb
push
je
gs
fs
inc
xorl
stos
ja
xchg
outsb
stos
dec
push
lcall
fiaddl
sub
jmp
xor
in
cmp
mov
das
push
inc
enter
addr16
mov
pop
push
and
loop
push
xor
sarl
bound
xchg
out
roll
lahf
andl
pop
cmp
sbbl
sbb
pop
mov
sahf
int3
sub
mov
hlt
xor
add
out
call
mov
int
xchg
dec
push
or
push
loop
mov
arpl
push
xor
sbb
xlat
int3
das
imul
lds
cli
sub
dec
adc
sbb
in
loope
dec
push
lock
sbb
icebp
movsl
ja
pop
cmp
ss
cmpsb
push
lods
sarb
aaa
jle
sub
inc
inc
push
adc
mov
gs
mov
mov
mov
xor
pop
rcrl
hlt
jne
sbb
xor
fadd
sbb
adc
sti
inc
mov
push
mov
dec
dec
fmull
test
js
daa
xchg
lods
cltd
jnp
gs
jge
pop
and
sbb
outsl
mov
xor
mov
cmp
inc
cmc
adc
xor
pop
mov
das
jmp
nop
inc
sahf
cmpsl
pop
pop
aaa
xorl
cmp
sub
js
test
popa
ljmp
fs
cltd
repz
and
ds
mov
pop
jmp
fsubr
mov
add
out
js
lods
in
mov
out
sbb
add
je
scas
and
xchg
xchg
pop
test
xchg
cwtl
and
push
push
pop
popa
mov
lds
aas
insl
mov
adc
inc
int
cmc
add
aam
outsb
mov
imul
inc
xchg
sub
push
sub
xchg
or
repz
gs
adc
sub
sbb
fs
add
push
jnp
add
mov
lock
xchg
sbb
push
aas
pusha
shrl
sahf
popa
lret
cmp
fidivrl
fs
mov
into
xchg
mov
push
pop
push
gs
sub
ret
enter
ds
sbbl
dec
or
sbb
and
cmp
addr16
outsb
jne
xor
daa
xor
xor
ror
adc
ds
frstor
jle
mov
jno
cs
mov
in
mov
or
popa
cmpsb
pop
das
pop
mov
in
add
lahf
data16
lea
repz
fadds
push
stc
jl
inc
mov
push
rorw
mov
pushf
fcomip
outsb
mov
and
divl
test
jle
into
notb
nop
leave
push
lret
pop
xchg
cmp
pand
xlat
pop
push
inc
repnz
xor
jbe
pop
clc
enter
stc
fsubs
cmp
dec
vpcmpgtb
fildl
cmpsl
xchg
pop
call
push
pop
pop
push
push
add
pop
lods
push
sahf
jg
stos
arpl
pop
aaa
adc
iret
cmp
sbb
xchg
arpl
sbb
lahf
xchg
test
sub
push
ja
test
dec
insb
lret
in
inc
inc
push
int
notl
sbb
stc
shrd
mov
pop
mov
lahf
xlat
mov
scas
insl
mov
adc
nop
jo
ds
ficomps
gs
popa
rcrl
adc
scas
pop
mov
mov
mov
jl
imul
fabs
jecxz
cltd
mov
int3
lahf
xchg
out
test
inc
scas
add
and
xlat
outsl
cs
push
and
pop
fsubl
loopne
mov
xchg
and
adc
pusha
imul
jbe
sub
ret
dec
lret
call
cmp
sbb
cltd
mov
xlat
jo
icebp
push
xchg
fwait
insl
mov
daa
mov
cli
hlt
mov
mov
in
sbb
das
push
rorl
loopne
xchg
ret
xchg
push
fwait
stos
cwtl
mov
test
js
mov
and
nop
in
mov
mov
loopne
je
add
fmull
jnp
shrl
push
lds
mov
outsl
sbb
and
fwait
jns
xchg
pop
cwtl
jg
pop
ss
or
and
into
cs
lds
out
and
inc
and
cmpsb
xchg
les
cmp
mov
push
xor
int3
fcoml
inc
pop
mov
mov
lods
sbbb
mov
rol
lcall
dec
pop
cmp
test
cmp
mov
das
jae
jl
push
in
ljmp
jno
sub
sbb
xlat
and
jb
nop
jecxz
push
mov
stc
aam
out
add
test
xchg
lods
dec
repz
cmc
cmp
rorb
rcll
lds
ljmp
in
mov
mov
inc
decl
in
mov
sarl
in
cmp
jno
fwait
loopne
enter
cltd
insb
test
mov
dec
imul
xchg
js
mov
out
out
out
rolb
out
dec
mov
or
adc
sbb
push
inc
arpl
and
mov
jecxz
inc
jmp
rcrl
sbb
test
test
aad
sub
or
sub
mov
mov
cs
pushw
mov
into
pop
inc
les
mov
sbb
mov
mov
xchg
jg
ret
les
dec
aas
or
popf
push
nop
aaa
imul
add
xchg
insl
add
mov
bsf
in
dec
add
mov
dec
xor
pop
insb
das
mov
das
sarl
mov
sub
push
fadd
sub
cmpsb
test
push
imul
fdiv
mov
push
out
jmp
out
shlb
adcl
jl
push
int3
ds
rorl
in
ljmp
sub
ss
dec
out
mov
mov
in
mov
mov
dec
add
jecxz
xchg
pop
ret
and
enter
mov
fsub
into
insl
jp
cltd
pop
popf
mov
outsl
mov
lock
add
adc
subb
scas
xchg
xchg
jle
lahf
dec
push
leave
fldt
outsl
jle
mov
mov
aaa
aam
mov
pop
jl
cwtl
sahf
inc
or
js
or
xchg
pop
lock
sub
jnp
mov
mov
in
call
das
sbb
sub
jne
mov
push
xchg
mov
or
dec
jne
pop
adc
jo
push
movsl
dec
mov
sbb
and
xor
dec
das
push
push
loopne
ds
mov
lcall
cmp
daa
fbstp
xchg
imul
jnp
into
imul
jge
mov
leave
mov
ss
cmpsb
mov
push
pop
lds
pushf
pop
inc
pop
jno
mov
cwtl
mov
xchg
nop
outsb
and
and
repz
cmp
aaa
adc
repnz
dec
lret
push
sub
aam
js
outsl
push
and
repz
xorb
push
ja,pn
int3
aam
loop
pusha
xor
insb
xchg
pop
add
inc
push
adc
mov
loop
or
sti
fimull
sbb
inc
and
and
std
pushl
int
lahf
xor
or
into
mov
lock
cltd
popa
gs
xchg
inc
loope
lock
push
inc
cmpb
jmp
and
std
aam
adc
and
idiv
imul
dec
mov
ss
sahf
arpl
es
int3
je
mov
mov
mov
add
pushf
pop
mov
xlat
gs
jp
cltd
inc
mov
dec
push
ret
pop
dec
pop
pop
mov
imul
and
rcl
loope
dec
lcall
add
rcrb
cltd
ret
jne
lcall
sub
cwtl
fstpt
and
sarb
faddl
or
lds
push
shrb
or
cltd
jp
insl
daa
das
cmc
pop
sbb
ljmp
int
cwtl
jo
mov
inc
ljmp
cmc
sahf
inc
fmull
out
add
ljmp
cs
xor
bound
add
addb
ror
pop
push
vcvtdq2pd
pushf
test
cmc
push
jle
addr16
pop
cmpb
fdivs
add
jne
pop
cmpsl
pop
mov
stos
mov
jnp
pop
adc
idivb
inc
subl
ror
mov
dec
push
adc
and
add
push
dec
jmp
int
cltd
popf
test
rcrb
xor
and
pop
std
and
pop
or
add
jp
add
jle
out
stc
xchg
cld
mov
movsb
out
mov
test
cmc
mov
add
cs
cmp
xchg
jle
push
push
dec
push
push
add
cld
push
xchg
mov
ds
or
daa
dec
mov
and
lret
xchg
sbb
ret
ja
movsb
js
mov
or
cltd
lock
pop
push
sub
mov
sahf
mov
mov
add
cwtl
ds
fsub
xchg
std
cmpsl
lea
test
adc
std
xlat
shll
mov
mov
pop
fstpt
cmp
int
shr
or
jecxz
mov
mov
jo
sub
rcl
fcoml
lret
outsb
repz
jge
adc
xor
pop
or
cmc
daa
fwait
cli
pop
mov
std
outsb
jp
scas
adc
add
inc
sbb
push
loope
xorl
loopne
inc
fsubs
sub
push
push
and
outsl
orb
mov
and
add
mov
jne
ret
pop
dec
sbbl
pop
insl
lea
xor
inc
jecxz
xchg
incb
je
mov
int3
push
fcmovbe
sub
inc
xchg
mov
mov
jno
outsb
mov
cmpsb
dec
sub
add
es
mov
mov
call
sub
scas
jp
add
adc
inc
xchg
cld
movsb
out
inc
push
xchg
or
movsl
pop
call
mov
xchg
lahf
out
jl
cmp
or
xlat
scas
xchg
jecxz
pop
inc
mov
aam
jmp
xchg
in
mov
loopne
mov
xor
popf
mov
pop
fidivs
inc
jne
fstl
jo
scas
out
aad
adc
out
mov
pop
aam
sarb
lds
cmp
jbe
xchg
xchg
stc
and
shrb
fdivrl
mov
in
or
pop
xchg
imul
dec
cmpsl
jnp
push
push
stos
pop
clc
aam
test
data16
test
jmp
push
and
xlat
xor
sub
jmp
xor
in
shrb
enter
loopne
mov
push
cmp
dec
mov
adc
mov
imul
sbb
xchg
repz
sbb
xchg
fistpll
mov
in
lret
pushf
mov
xchg
add
sbb
cmp
insl
push
sub
xchg
pop
mov
add
mov
push
cs
outsb
add
loop
in
xchg
xchg
inc
lods
cmp
adcl
daa
pop
pop
dec
insb
jmp
sbb
mov
sbbb
int
scas
repz
xchg
inc
test
xor
dec
sti
push
cmp
jle
dec
lock
jae
push
dec
xchg
lods
in
push
clc
out
in
adc
dec
xchg
cmp
or
clc
cmp
dec
mov
out
and
icebp
add
cltd
cmp
fstpt
mov
insl
mov
inc
out
clc
mov
mov
stos
aam
lahf
imul
mulb
sarl
xchg
jo
in
inc
sub
or
cmp
int3
pop
std
mov
or
fsubs
mov
pop
jno
push
lods
stc
jmp
xchg
xor
or
stc
out
fs
loope
xchg
jp
testl
lods
mov
in
adc
int
mov
inc
pop
ret
pop
pop
push
sbb
xchg
inc
sbb
pop
jge
xor
xchg
pop
lods
xor
jnp
or
push
xchg
push
mov
arpl
inc
mov
mov
adc
xchg
mov
int3
loopne
sub
or
mov
adc
or
fcompl
in
lods
cmp
nop
dec
cltd
in
out
icebp
in
adc
mov
es
pop
mov
push
xor
sahf
mov
jp
pop
xor
or
jb
dec
dec
dec
and
insb
adcb
imull
dec
flds
daa
add
mov
push
out
mov
mov
sub
xor
sub
pop
sbbb
push
std
cmp
cmp
xor
mov
xchg
jg
push
mov
divb
stc
fwait
fs
xchg
js
and
dec
insb
in
mov
push
das
xchg
rorl
sti
jnp
jge
push
mov
jl
dec
in
mov
sub
xlat
mov
cli
push
jbe
mov
mov
fimuls
cmp
test
adc
fxch
mov
push
popa
imulb
inc
test
mov
inc
adc
call
mov
loopne
in
cmp
mov
rorb
or
mov
cmp
inc
cmpb
popf
mov
pop
incb
fs
fs
fadd
shl
mov
add
mov
xchg
xor
sarb
mov
fsubl
lahf
add
add
mov
add
aad
and
mov
movsb
dec
inc
lahf
das
mov
mov
cmp
cli
push
ret
lods
cs
mov
ss
insl
fistl
ja
sbb
rorb
testb
in
sbb
outsl
xor
sbb
jl
push
and
sub
adc
mov
test
jl
sbb
pop
les
ret
mov
push
fistps
fisubrl
inc
sahf
inc
insl
add
gs
std
fistpll
sbb
std
jle
xor
pop
nop
lret
and
xchg
or
xchg
icebp
mov
mov
xor
fbld
aad
outsl
dec
shl
sub
jmp
cwtl
xlat
loop
dec
ret
adc
in
fimuls
loope
call
adc
ja
mov
mov
daa
mov
or
sbb
push
jmp
jae
insb
inc
mov
mov
sub
pusha
in
repz
out
mov
lds
rcl
adc
out
push
arpl
jmp
dec
add
bound
push
icebp
push
dec
lahf
mov
adc
rclb
jge
into
movsl
pop
lahf
inc
or
sahf
cmp
hlt
lods
test
dec
xchg
push
lret
jmp
outsl
popf
mov
jae
adc
cmp
addr16
ss
rorb
sub
stos
xor
sub
push
test
ljmp
mov
xchg
lahf
sti
pop
mov
dec
jmp
adc
jbe
popf
sarb
aas
mov
sbb
push
in
cmpsb
pop
fnsave
aaa
daa
sar
jp
fistps
repz
rorl
in
jns
cli
outsb
mov
fdivs
repnz
fsubrl
jnp
mov
pop
and
and
mov
pop
xchg
rclb
int3
call
xlat
stos
mov
adc
pop
popf
mull
outsb
mov
hlt
xchg
repnz
stc
addr16
arpl
sbb
dec
or
dec
pop
inc
aas
out
ss
rorl
scas
lods
xor
and
push
andl
sbb
adc
xlat
or
fldcw
lods
add
popa
or
js
push
dec
mov
adc
sbb
dec
and
push
add
adc
mov
in
daa
cmc
scas
lcall
loope
add
dec
movsl
xlat
ljmp
or
add
outsb
in
fnstsw
outsb
mov
out
mov
jae
das
jmp
mov
or
or
dec
loope
out
adc
cltd
test
popa
movb
shll
lcall
lret
rorb
cmc
int
jo
mov
xor
sub
sub
pop
xchg
jb
icebp
sbb
adc
pop
xchg
jne
mov
lds
jo
jae
jbe
cli
aaa
out
push
cmpsl
push
cli
dec
addl
xchg
sbb
mov
mov
pop
es
leave
dec
mov
stos
popf
call
or
dec
push
pop
gs
cmp
fsubrl
mov
jge
lret
sub
xlat
call
jecxz
mov
xchg
faddp
sub
dec
push
daa
sahf
push
mov
push
outsl
loopne
xchg
stos
addr16
sbb
daa
adc
and
lds
ss
or
or
pop
das
adc
pusha
cmp
filds
dec
cmpl
test
fnstenv
push
lret
sbb
out
fcomps
cmpsb
or
shl
push
out
pop
and
xchg
inc
push
or
xchg
dec
cmp
push
fwait
xor
int
lahf
and
and
cmp
sub
ret
sub
test
mov
leave
add
in
mov
int
add
add
push
adc
lcall
sti
xor
cmc
cmp
mov
pop
add
xchg
pop
hlt
les
add
adc
sbb
fcmovbe
mov
cmp
bound
pop
fsub
and
in
sbb
dec
sti
mov
cmc
lods
rcrb
or
xor
add
push
push
fbstp
or
mov
mov
mov
pop
xchg
mov
stos
jnp
sub
inc
out
jg
mov
jl
cmpsl
jo
add
aad
xchg
fidivrs
jmp
dec
inc
pop
pop
inc
fwait
add
lods
pusha
ficoml
xlat
jb
push
cmpsb
push
mov
jp
daa
pop
push
into
pop
mov
ret
test
and
or
xor
imul
loop
jmp
push
rorl
enter
xchg
shrb
std
sub
rcr
sub
sub
cld
pop
xlat
xor
inc
dec
aam
pop
out
and
popf
mov
sbb
mov
dec
ds
jp
mov
push
les
pop
test
lret
and
es
push
adc
test
xchg
clc
les
and
inc
cmp
nop
xchg
and
in
mov
and
lds
mov
sahf
and
out
cmp
mov
testb
dec
call
sbb
pushf
pop
add
jns
jb
mov
mov
popa
push
in
lret
xor
dec
push
xchg
fisubs
jbe
pop
sub
idivb
push
lcall
cmpsl
and
aaa
out
fidivl
lods
mov
mov
xchg
frstor
adc
fcmovnu
adcl
jno
test
rsqrtps
adcl
mov
fs
cmp
loope
daa
imul
or
cli
mov
mov
outsb
mov
outsl
mov
std
mov
push
dec
or
adc
shll
cld
loope
dec
leave
inc
out
mov
jmp
mull
jo
mov
push
or
pushf
sbb
sahf
xor
and
rclb
sub
inc
mov
js
test
out
cmpsb
xor
pop
cmpb
imul
inc
jb
mov
inc
jbe
testl
pop
xor
mov
divb
sbbb
lcall
inc
jne
sbb
outsb
gs
shll
jmp
call
mov
push
mov
fsubs
or
fwait
pop
aas
inc
scas
sub
pop
scas
push
pop
xchg
dec
xor
test
arpl
inc
cmpsl
mov
jmp
fildll
shr
cwtl
push
fisttps
xor
mov
cs
lcall
mov
mov
or
cltd
sbb
adc
fldcw
std
or
and
mov
mov
repz
popf
inc
or
pusha
fsubrs
lock
cmp
arpl
and
mov
cmp
xchg
mov
xorl
pop
jb
pop
imul
shll
dec
xchg
loope
pop
or
xlat
cs
in
jns
sbb
adc
sub
in
scas
ret
add
push
mov
fcmovb
cwtl
cmp
repnz
xchg
xor
inc
aaa
out
imul
outsl
cmpsl
into
fcoms
and
or
mov
stc
mov
mov
mov
enter
cli
add
cli
push
imul
arpl
clc
sbb
pop
xchg
cmp
xchg
outsb
mov
pop
jp
outsb
jb
loop
or
jno
dec
mov
out
fstpl
sbb
jbe
out
jns
in
mov
jo
add
adc
and
adc
outsb
fisubrs
mov
jge
cmp
push
xchg
scas
data16
or
ret
sub
fcomip
mov
push
lods
clc
out
jl
push
and
jnp
mov
sbb
pop
xor
xchg
or
pushf
repz
cmp
sarb
in
and
test
dec
cmc
adc
pop
mov
mov
xchg
adc
add
pushf
pop
pop
enter
ds
xor
and
inc
lret
lods
jg
adc
sub
sub
dec
gs
pop
sbb
pop
fldcw
jge
lret
popf
mov
es
je
mov
mov
aas
mov
sbb
xchg
dec
mov
in
add
pop
jge
jno
into
mov
rclb
adc
inc
loopne
out
pusha
cld
and
and
mov
in
xor
xchg
cmpsl
adc
popl
push
mov
pop
es
xor
dec
adc
aad
in
outsl
or
pop
insb
push
push
out
in
adc
dec
ss
push
sub
shlb
jne
insl
inc
cwtl
aas
jg
lret
flds
xchg
mov
push
jnp
arpl
mov
fdivs
ffreep
jecxz
lahf
push
add
aam
scas
loope
xchg
sub
cs
mov
inc
jle
xchg
lret
or
mov
insl
out
and
test
sub
clc
sub
inc
cli
and
mov
pop
mov
test
mov
das
ljmp
fstpl
mov
sub
push
hlt
mov
jmp
cmpsb
or
fld
fidivl
fcoml
sub
test
dec
fidivrl
sahf
adc
sub
fildll
fcomp
push
pop
daa
in
jge
adc
and
or
shlb
in
jno
shl
push
leave
jb
mov
sarl
xor
lahf
bound
mov
adc
jo
arpl
data16
mul
lds
dec
ret
lods
adc
lods
push
mov
push
pop
jmp
add
push
jl
arpl
push
das
test
leave
mov
push
pop
push
fidivrs
inc
shll
bound
call
push
cmp
test
pop
sbb
mov
mov
icebp
mov
jnp
pop
pop
dec
adc
jno
pop
mov
das
icebp
adc
inc
push
popa
movsl
push
pop
scas
scas
cmp
cmp
sub
inc
jge
pop
jmp
in
fsubrl
int3
mov
test
inc
add
cltd
or
pop
stc
mov
mov
add
fisubrl
stc
xchg
lahf
cmc
xor
in
lds
cltd
push
adc
or
fmull
push
fsubp
xor
lahf
mov
dec
into
jg
enter
and
xchg
mov
jno
sub
pop
sub
sub
rcrb
push
add
testb
add
mov
arpl
jns
imul
cltd
push
fstpl
out
outsb
popa
and
add
and
adc
fdivp
or
fcoml
shrl
sbb
inc
pop
ret
int
test
xor
inc
daa
xchg
imul
in
sub
push
xchg
negb
stc
in
cmp
in
pushw
iret
or
mov
push
inc
lods
aaa
int3
imul
test
popf
push
and
jp
and
pop
stc
lock
jl
xchg
mov
sahf
and
lret
or
inc
jge
xchg
pop
test
enter
ret
std
ljmp
sub
cmp
push
iret
rcrl
sbb
mov
das
push
mov
xchg
sbb
cmp
cs
xchg
test
into
loop
jle
dec
in
fsubl
orl
sbb
xlat
xor
mov
lds
or
pop
icebp
inc
push
xchg
ret
out
fdivp
mov
std
sti
xor
mov
adc
ss
add
lods
cmpsb
pop
dec
xchg
fsub
cmp
cmp
jb
ss
cmp
adcl
xchg
inc
mov
or
test
jne
scas
stos
fdivs
mov
jb
cltd
test
dec
test
out
adc
xor
popa
mov
fwait
es
pop
mov
xchg
rorl
rorb
or
push
pusha
mov
sbb
sbb
out
shll
mov
mov
cmpsl
pop
rcl
inc
or
jge
jns
mov
mov
aaa
inc
and
lret
push
mov
pop
aam
cwtl
ficoml
femms
repz
addl
jo
jp
sbb
sahf
les
jmp
mov
inc
jmp
ljmp
mov
lds
rolb
shrb
lret
neg
xchg
xor
xchg
lea
imul
fstl
aad
adc
sbb
and
outsl
jae
movsl
xchg
or
bsr
dec
sar
mov
sub
fwait
push
leave
iret
cltd
mov
in
dec
dec
pop
stos
sub
pop
lahf
int
xchg
adc
pop
ret
dec
outsl
or
lods
out
pusha
movsb
xchg
mov
cmpb
rcr
jge
xchg
push
shlb
cmpsl
repz
call
mov
fld
fucompp
adc
fadds
stos
jecxz
pop
lahf
sbb
or
dec
cmpsb
mov
pop
fisubs
dec
iret
ret
pop
mov
stc
scas
and
scas
out
in
jbe
aas
frstor
insb
movsl
fbstp
jns
loope
pop
imul
inc
outsb
mov
in
lds
adc
das
mov
scas
jno
and
mov
cmpsb
push
xor
in
mov
cmpsl
stc
pop
mov
rep
iret
inc
loopne
sbb
jle
test
mov
dec
push
aas
daa
or
negl
test
rcll
das
and
popa
fwait
lret
fildl
fldl
loope
js
addr16
cmp
dec
pushf
mov
xchg
fnstenv
cmp
add
sub
test
push
in
pop
cli
inc
inc
in
jl
cs
mov
adc
out
pop
push
jle
push
popa
out
jle
outsl
loope
add
mov
test
xchg
adc
iret
mov
push
cmp
add
pop
xor
pop
mov
xor
fnsave
aaa
jl
push
jle
jno
imul
xchg
test
iret
adc
popa
test
sbb
out
sub
sti
or
popf
iret
cmp
shll
xor
enter
fimull
dec
into
jg
and
or
jae
xchg
xchg
adc
xor
movsl
and
sbb
daa
push
insb
pop
pop
sbb
xchg
pop
js
mov
incb
pop
xor
inc
jns
mov
inc
cli
repz
test
inc
loopne
pop
popa
mov
cmpsl
inc
inc
int3
outsl
mov
sub
mov
stc
in
xchg
pop
das
nop
roll
ficomps
cmc
xlat
push
stc
setl
loope
popa
fidivrl
mov
enter
adc
or
jb
sub
and
mov
pop
pusha
es
int
xor
clc
and
inc
inc
xor
addr16
adc
xchg
ds
xor
jle
out
add
mov
fwait
pop
push
mov
jb
pusha
daa
aas
inc
push
loop
xchg
add
sub
sbb
and
stos
lods
rcrb
repz
jno
pop
push
test
mov
in
add
inc
cmp
and
lcall
or
pop
jb
imul
stos
pusha
icebp
out
and
aam
pop
int
enter
sbb
sbb
pop
inc
js
add
ljmp
jmp
add
jno
sub
ret
jg
fisubrl
rcrl
xlat
xchg
push
add
sbb
bound
xchg
inc
inc
pop
cwtl
data16
jmp
or
arpl
cmpsl
xchg
cmp
mov
test
xor
fs
addl
push
leave
push
cld
jb
fdivl
lds
push
pop
add
xchg
adc
inc
push
xrelease
int
xor
xor
scas
sbb
pop
idivb
lret
daa
out
mov
cmp
ss
stc
mov
stc
loope
push
ret
int3
int3
orl
movsb
aas
scas
aam
push
movsl
inc
push
dec
adc
mov
mov
cmp
sub
sub
xchg
lods
pusha
push
mov
jo
out
cmpl
pop
aam
adc
dec
loopne
mov
mov
lds
dec
clc
push
mov
mov
dec
ja
and
add
pop
dec
and
dec
mov
jno
fcoms
repnz
sbb
shlb
add
cmp
je
cmpb
fbld
inc
loopne
or
sbb
ret
movsb
mov
xor
sbb
xor
inc
mov
or
xchg
mov
push
adc
fdivrp
scas
nop
mov
scas
cmp
jmp
enter
loop
pusha
sti
mov
mov
loop
nop
sub
sbb
je
repnz
xor
mov
or
call
dec
adc
test
fstpl
jb
les
xor
fimull
mov
push
sbb
dec
xor
aam
push
repnz
mov
pop
out
or
sbb
sti
push
fwait
fadds
mov
mov
movsb
leave
dec
and
shrl
adc
jg
or
mov
jae
dec
ljmp
sbb
pop
and
ja
and
adc
sbb
ja
mov
mov
push
stc
push
ja
int
mov
sbb
sbb
jno
aam
mov
pop
pop
int
mov
movsl
std
dec
push
ljmp
xchg
inc
add
xor
mov
mov
mov
jb
mov
imul
shlb
rcr
repnz
inc
adc
pop
adc
test
jmp
scas
mov
notl
push
add
xchg
fwait
cmc
fidivrs
xchg
iret
xor
lds
in
sbb
sahf
mov
or
xor
push
mov
and
or
aad
pop
push
dec
add
nop
outsl
fwait
dec
test
shlb
mov
test
mov
cmpsl
imul
mov
lret
pop
sahf
cwtl
popa
sub
rcl
pop
repnz
mov
sbb
mov
jecxz
xchg
sbb
mov
xadd
sbb
push
lahf
add
outsb
mov
inc
inc
xchg
fs
lcall
mov
popf
jl
shlb
mov
rcrl
ret
dec
adc
out
or
jne
or
xor
jmp
fldt
das
shrb
icebp
test
mov
stos
imul
out
test
and
xor
sar
cs
cld
loope
jg
or
mov
lock
and
push
mov
jg
inc
fidivrl
mov
bound
add
pop
mov
dec
jo
xchg
andl
mov
pop
cmp
outsb
stc
fiadds
repnz
adc
fisubrl
das
mov
sbb
mov
mov
or
ja
sbb
sbb
inc
pusha
aas
jns
lahf
js
mov
mov
or
inc
xor
adc
iret
add
inc
mov
aam
jp
leave
lods
std
mov
adc
cmpsl
push
rcrb
scas
sbb
pop
push
lcall
fisttpll
xor
mov
mov
ss
aaa
cld
aaa
xor
lods
pop
bound
int
mov
dec
mov
inc
and
in
nop
mov
cmc
jmp
dec
mov
outsl
scas
shlb
shlb
mov
inc
push
lret
jnp
sbb
sahf
jb
scas
jle
jp
jge
mov
lods
adc
das
iret
inc
clc
xor
mov
adc
mov
pusha
ret
lcall
mov
jmp
ja
xor
adc
fstp
mov
pop
inc
cli
xor
adc
xchg
mov
std
fsubl
mov
aad
lret
in
and
inc
lret
xor
test
out
dec
mov
je
pop
pop
or
cmp
sti
pop
into
hlt
les
dec
or
dec
xchg
inc
mov
xchg
cld
int3
mov
xchg
sub
jg
sbb
cmpb
pop
sarl
or
popf
scas
nop
test
xchg
xchg
scas
inc
rcll
out
and
mov
aad
or
stc
test
pop
adc
leave
jmp
insb
push
push
jle
setle
mov
hlt
test
imul
addr16
subb
lahf
jnp
cld
rcrl
pop
hlt
mov
jae
inc
ss
xchg
in
push
and
add
pop
je
inc
imul
pushf
lods
popa
jge
rolb
hlt
bound
mov
insl
loopne
ret
inc
push
dec
stos
mov
jnp
insl
push
bound
pop
add
fs
pop
mov
push
pop
orb
or
jns
stos
mov
lds
xlat
aam
mov
inc
cmc
pop
dec
sahf
xchg
push
inc
push
add
aad
push
mov
xchg
push
and
xor
jge
aaa
or
stos
in
xchg
aad
mov
bound
sbb
pop
sbb
fimuls
adc
insb
mov
cmp
push
xor
dec
jbe
stc
pop
rclb
arpl
movsl
xor
lods
pop
inc
add
test
test
pop
xchg
lds
lods
hlt
outsl
lock
xchg
fstl
xlat
imul
dec
adc
ret
test
js
fdivl
jno
pop
addr16
push
inc
fidivrs
rorl
sbb
dec
xchg
fcmove
jns
jmp
jne
add
int3
iret
loopne
outsb
jmp
adc
adcb
icebp
xor
mov
mov
mov
adc
sbb
rcrl
movl
and
and
dec
sbb
loop
in
or
out
pop
repnz
aam
out
stos
outsl
cli
add
mov
adc
mov
or
aaa
mov
call
dec
cli
pop
xor
sub
xor
and
xor
repnz
mov
jbe
dec
cmp
sbb
jae
movsl
cs
push
xor
sbb
ficomps
push
popf
xor
and
movsl
lods
arpl
repnz
movsl
fdivl
das
xchg
mov
insl
aaa
jb
mov
popa
mov
inc
or
or
jl
das
js
into
in
lods
push
jb
out
xchg
scas
popaw
stc
jecxz
test
mov
nop
in
ljmp
add
push
or
test
out
aam
cmpb
int
out
jae
sbb
ret
sub
mov
bound
cld
lcall
std
xchg
sbb
push
adc
rcrb
xchg
out
shlb
aas
popa
movsb
push
xchg
push
add
push
pusha
adcl
jnp
das
lret
adc
fidivl
inc
mov
adc
stc
xchg
mov
sahf
or
mov
and
adc
jecxz
aad
cmp
push
xor
sub
lds
mov
mov
int3
mov
dec
mov
popa
sti
sbbb
cmp
jl
lret
shr
les
adc
pop
xchg
cwtl
cltd
sub
repz
ds
jae
pop
inc
xor
pop
xor
les
pop
cmp
lods
add
mov
inc
push
mov
xor
outsl
cmp
sbb
xchg
das
cmc
int
or
fsts
rcrb
pop
cwtl
push
out
shl
mov
pop
dec
movsl
mov
xchg
retw
jbe
mov
addr16
lea
jmp
lock
test
in
push
sbbl
jle
lods
push
mov
push
cs
inc
or
sti
movsl
test
pusha
pusha
jb
push
data16
xchg
mov
in
pop
loop
rorb
jno
inc
pop
hlt
gs
fs
popa
mov
movsb
inc
aaa
shlb
test
push
mov
dec
xchg
dec
fmull
dec
mov
jno
lret
pop
rcrb
sub
mov
popa
lcall
sahf
pop
sbb
jbe
cmp
cmpsb
mov
arpl
pop
rcl
lahf
and
movsl
stc
icebp
rcrb
icebp
aam
stc
pop
xchg
pushf
in
pop
mov
repz
testl
push
call
les
xchg
dec
ds
orl
mov
or
xchg
or
lea
mov
add
adc
movsb
xchg
cli
lea
and
add
stos
in
out
outsl
inc
test
xor
lahf
jmp
loop
fildll
ret
es
lods
fdivrp
mov
shll
rclb
imul
int3
test
ret
aam
ja
gs
push
in
sbb
fldcw
sbb
push
mov
dec
xchg
sti
push
pop
lret
and
movsb
bound
aas
xchg
mov
mov
mov
cld
iret
cmp
les
or
adc
xchg
adc
sbb
nop
push
push
mov
and
js
mov
sub
jp
imul
xchg
ja
nop
cli
rolb
leave
mov
lds
fcomp
dec
mov
roll
mov
mov
sbb
clc
pop
push
pushf
or
outsl
test
loop
jae
in
xchg
xchg
ds
xchg
aad
xor
lock
cs
lcall
pop
mov
inc
and
mov
rorl
ds
jo
lahf
inc
in
int3
sub
adc
jg
cld
pusha
movsb
cld
movl
inc
and
sarl
bound
ficoml
ljmp
js
pop
mov
sbb
jo
adcl
sub
and
lock
rol
cld
iret
cmc
mov
popf
cld
or
xchg
testb
imul
shrb
jle
jne
lods
andl
enter
lahf
sbb
incb
or
lods
arpl
insl
push
mov
pop
mov
pop
ss
mov
adc
das
add
mov
sbb
or
mov
add
cltd
mov
loope
mov
jl
idivb
push
pop
push
adc
adc
bound
cmp
jb
test
xchg
sub
jno
das
jb,pn
jmp
les
mov
sti
inc
rorb
inc
sarl
adc
inc
stos
cltd
pushf
mov
adc
outsl
pusha
inc
fisubl
fistpll
and
arpl
dec
mov
dec
imul
jecxz
sub
outsb
imull
sub
sbb
cmp
divb
sub
hlt
inc
mov
lods
in
mov
or
jns
jno
stos
out
inc
cmp
dec
jo
jp
bound
adc
out
cmp
adc
sti
fwait
mov
pop
push
sbb
xchg
push
test
pop
fmull
adc
push
sti
subb
add
aad
data16
mov
cltd
mov
imul
test
pop
scas
test
pop
mov
push
push
cmp
insl
or
int
mov
xor
notb
subl
dec
js
sar
cwtl
or
sbb
jp
cwtl
xchg
jns
push
lahf
or
lock
in
into
add
hlt
in
js
pop
fdivl
int3
mov
aaa
jno
mov
xchg
mov
jb
pushf
sub
mov
ss
inc
lret
mov
gs
lret
mov
icebp
mov
jp
imul
es
test
jbe
xor
jg
dec
in
push
daa
dec
out
and
and
rcl
enter
pop
fstpt
inc
jge
fsubs
inc
frstor
cmp
dec
inc
mov
push
test
push
rclb
push
dec
insl
or
sbb
rcll
cmp
aad
xor
scas
xchg
sbb
dec
sarb
ret
lcall
mov
add
sub
inc
or
cmp
lea
fdivr
cmpsb
stc
cs
nop
cmp
outsb
pop
cmpsb
xchg
into
test
insb
rolb
inc
mov
push
cmp
fildl
sahf
shlb
std
sub
xchg
lds
push
ss
and
push
mov
mov
das
jle
jle
inc
xor
jg
scas
in
pushf
in
mov
pushf
or
or
jl
lahf
pop
imul
push
sbb
mov
xchg
sub
int3
mov
xorl
jecxz
xor
lret
cs
out
and
xchg
arpl
mov
inc
or
xlat
xchg
xor
insl
enter
int3
and
clc
ljmp
jne
pop
mov
hlt
jo
js
dec
std
mov
iret
fs
faddl
addl
sub
inc
push
push
rorl
shrb
clc
push
cmp
stc
mov
sub
rcll
adcb
shl
test
outsl
xor
repz
dec
aaa
imul
popf
cmc
push
push
int3
iret
mov
nop
push
sbb
jg
insb
call
pop
or
pop
rorb
mov
xchg
mov
push
mov
stc
sub
shll
lahf
cmp
add
lock
inc
cmp
gs
mov
inc
sbb
sti
push
out
into
dec
cmpsl
lcall
mov
cmp
add
jns
sahf
adc
roll
addl
popa
daa
rcll
inc
gs
pop
dec
push
jle
jmp
jecxz
inc
or
shlb
jbe
pop
or
rorl
xor
pop
daa
inc
ror
mov
mov
xor
out
pushf
inc
lret
mov
icebp
and
pushf
in
push
mov
lock
in
add
sub
push
adc
inc
lret
jg
adc
inc
xchg
adc
inc
popa
inc
es
mov
in
pop
sbb
popa
mov
mov
ss
mov
enter
push
imul
and
xor
xchg
jp
push
dec
push
das
outsl
pop
sbb
sti
push
je
lret
sti
cmp
shrl
mov
lods
xor
pop
or
push
out
mov
insl
xor
movb
xor
push
dec
rorb
out
sbb
roll
xchg
mov
sbb
sbb
sbb
mov
inc
inc
popa
stc
pusha
loopne
or
sub
out
test
lret
enter
ss
ret
insl
mov
xchg
test
mov
mov
fists
push
es
mov
lods
lret
sti
push
shl
xchg
popf
adc
gs
pop
or
leave
add
ficompl
sub
mov
xlat
cltd
repnz
leave
aad
mov
xlat
leave
pop
in
mov
sub
sbb
mov
xchg
pop
mov
xor
adc
std
sub
sub
cmp
pop
insl
adc
pop
dec
imul
repz
xor
daa
or
std
pop
inc
pop
test
adc
inc
fld
in
mov
in
andb
cmpsl
jp
cmp
cmc
cmp
hlt
add
loop
and
inc
xor
and
stos
adc
adc
push
adc
cmc
icebp
outsb
mov
shll
sahf
outsl
test
aas
out
jb
push
gs
push
sub
imul
mov
dec
mov
or
adc
add
insl
insb
add
test
mov
fnstenv
add
cmpl
xor
scas
aaa
fistpll
dec
and
push
xchg
dec
mov
sub
dec
dec
sub
nop
rep
jmp
fnstenvs
cmp
rolb
subb
add
fldt
pop
mov
stos
into
and
add
enter
movsb
xor
idivl
and
arpl
cmp
aaa
pop
in
and
lret
scas
jno
mov
sub
orl
sbb
mov
stc
or
leave
or
pop
or
bound
mov
call
pop
in
std
xchg
pop
outsl
ja
out
std
mov
das
negl
xor
and
mov
or
xchg
out
xor
cmp
inc
add
movsl
movsl
xor
xchg
data16
xor
mov
and
cli
mov
mov
or
fstps
lcall
push
cmp
jne
jno
pop
insl
cmpsl
sub
insl
int3
mov
dec
jle
mov
inc
fmulp
int
sbb
int3
mov
lcall
cli
sub
xchg
sbbl
repnz
pop
mov
aaa
and
inc
xor
jns
dec
xchg
cmp
cmp
sti
and
add
stos
in
mov
add
jno
mov
jb
cld
loope
pop
or
cmp
lods
ror
adc
sti
jp
jne
add
sti
lds
repnz
ficoms
mov
mov
push
ret
cwtl
push
aam
push
int
sbb
inc
lods
pushf
adc
adc
pop
xchg
daa
jge
adc
and
jecxz
movsb
mov
adc
aam
add
lret
and
lods
xor
sbb
and
movsl
cmpsl
inc
mov
lcall
punpcklwd
data16
mov
sub
add
mov
xchg
scas
or
jl
push
jbe
pop
mov
lret
xor
push
rolb
and
jae
les
mov
pop
lret
xor
cld
push
ret
mov
sub
xchg
adc
ss
adc
sub
cltd
stos
xor
push
into
xchg
xor
enter
scas
pop
cmp
xor
aaa
push
mov
not
mov
cltd
push
popa
fiaddl
cmpsb
push
jmp
int3
inc
sbb
imul
lret
call
cld
xlat
fs
xor
xchg
push
xor
mov
pop
jmp
xchg
mov
push
loope
pusha
mov
sub
ljmp
lret
in
jnp
sbb
aam
outsb
inc
pop
dec
cltd
mov
cmp
push
jp
or
popa
int3
sbb
adc
dec
dec
rcrb
aaa
pop
cld
imull
inc
mov
aas
ret
or
jl
ret
test
jg
mov
push
jne
cmp
inc
push
cmpsb
mov
hlt
or
xchg
adc
pop
mov
cmp
orl
aam
push
iret
sbb
mov
mov
cltd
in
or
in
and
scas
sbb
adc
xor
push
mov
pop
stc
xchg
and
cwtl
jecxz
in
adc
js
stos
sub
push
xchg
repz
mov
mov
js
mov
sub
test
sbb
pusha
cmp
loop
and
push
bswap
inc
dec
ja
xor
adc
inc
shl
cs
ret
mov
repz
loope
and
adc
push
in
cwtl
push
shl
dec
jg
int3
enter
add
es
pop
push
jo
shll
loop
es
xor
or
push
stc
cs
mov
pop
xor
sub
pop
xchg
xchg
test
out
push
dec
stos
pop
dec
ss
mov
pop
movsb
mov
std
inc
jle
push
cld
leave
sbb
pop
cmc
test
dec
pusha
mov
jg
dec
cmp
jecxz
shlb
ljmp
test
out
and
xchg
jp
mov
mov
pusha
jmp
cld
inc
loope
hlt
jg
orb
jo
pop
add
mulb
jb
test
jae
popa
xor
sbb
mov
out
push
in
stos
inc
in
popf
xchg
imul
out
xchg
cmp
fs
loopne
testb
xor
fisttpl
aam
adc
out
enter
mov
call
insb
loope
jmp
cltd
rorl
mov
stc
pop
pop
jns
loop
sub
stc
pop
or
ret
outsl
sub
fs
or
stc
push
in
jbe
int3
jns
xchg
dec
mov
or
cwtl
mov
sub
sbb
sub
mov
xor
mull
mov
xor
sub
push
cmpsb
jae
fisttpll
rclb
movsb
pop
cld
push
call
nop
mov
adc
ds
mov
or
inc
inc
cmp
aaa
icebp
std
jmp
add
adc
pop
ja
rorb
test
fisubrs
mov
fistl
in
pop
pop
mov
mov
gs
xlat
sbb
pop
jl
loope
into
lahf
decb
pushf
sub
movsl
add
xorl
sub
repnz
ret
arpl
mov
arpl
mov
mov
mov
out
jnp
mov
dec
jne
mov
xchg
and
push
nop
gs
jbe
push
push
loopne
pop
inc
add
movsl
and
lock
aaa
lds
insl
pop
and
add
in
sbb
dec
loope
mov
pop
and
test
in
or
sbb
mov
std
mov
dec
cwtl
out
adc
xchg
aad
into
and
push
mov
fdivrs
fwait
pop
sub
adc
rcll
add
ret
jp
jnp
insl
pop
pop
sub
pop
iret
cli
dec
mov
xchg
and
popf
fcomps
lcall
sbb
int3
xchg
push
mov
xchg
aam
pop
inc
loopne
inc
pop
leave
mov
pop
mov
loopne
in
ret
sarl
cmp
push
jmp
push
movsb
cmp
pusha
sbb
mov
loop
fwait
dec
add
testb
sub
dec
mov
pop
add
pop
repz
or
push
xlat
movsbl
dec
loope
sub
cmpsl
fistpll
sbb
pop
or
movsb
sub
inc
push
add
leave
pop
out
aaa
pop
rdmsr
js
push
test
push
fistpll
ljmp
push
xchg
dec
les
hlt
popa
aas
gs
shlb
sbb
fisubs
dec
cli
jb
mov
sbb
xor
pop
nop
push
mov
ja
outsl
inc
xor
scas
out
jns
jo
mov
cmpsb
xor
enter
jb
daa
sub
fnstsw
data16
sbb
sbb
lret
push
cs
cmpsl
fists
inc
fisttpl
leave
sbb
mov
xchg
repz
cmp
nop
pusha
clc
rorb
gs
add
shrb
cmp
cmc
testb
cmp
ret
fs
aad
adc
lret
in
add
loope
push
cmp
aad
push
inc
ror
inc
clc
jge
int
mov
test
and
inc
pop
push
sahf
cmpsb
push
xchg
cmpsl
test
lds
lcall
lcall
adc
subb
lret
pop
pusha
cmpsl
mov
fadd
sbb
mov
fisttps
nop
popf
fprem
daa
or
ret
fstpl
mov
dec
inc
inc
pop
xchg
test
cmpsb
pop
dec
jns
aaa
cwtl
and
xchg
shl
xlat
jb
fnstcw
and
popf
dec
lret
out
enter
inc
dec
shl
inc
sbb
js
mov
xchg
jne
push
out
add
ja
loope
mov
loopne
fs
jno
in
into
sbb
bound
jno
adc
or
mov
xchg
push
std
cmp
bnd
insl
xor
int3
js
aaa
les
std
xor
xor
mov
out
out
cmp
outsb
subb
inc
lahf
xor
sub
push
fcmovbe
adc
cmpsb
cmp
dec
or
icebp
pop
jbe
jle
cmpsb
pop
xor
xor
sub
xor
push
cmpsb
lock
out
sub
push
div
test
popa
push
test
cld
fwait
push
inc
push
mov
mov
aam
stc
sub
inc
pop
out
lods
loope
lds
into
pop
mov
mov
jns
mov
lret
outsb
and
sti
leave
lods
pushf
loop
push
stos
cli
imull
arpl
adc
pushf
mov
sahf
scas
xor
scas
call
mov
adc
jle
pop
mov
or
inc
mov
mov
or
xchg
loope
jge
or
xor
std
ja
and
enter
std
cmc
inc
repnz
dec
cmpsl
ret
mov
setl
leave
xor
out
xchg
cmp
jge
mov
addr16
jnp
xor
cmpb
mov
cmp
dec
jg
outsb
pop
sbb
es
and
loopne
pop
add
cmp
fnstenv
pop
jo
push
cmpsb
push
mov
lea
iret
or
lea
dec
aad
xchg
fwait
out
or
in
test
pop
inc
scas
insl
cs
cwtl
daa
xchg
push
outsl
inc
xor
jnp
arpl
mov
jae
push
aas
lods
test
pusha
inc
pop
xor
imul
xchg
inc
jecxz
les
pushf
js
repz
inc
in
mov
imul
call
leave
mov
pop
mov
ret
cmc
push
pusha
push
icebp
jnp
int
xor
out
push
mov
sbb
xchg
mov
xor
int3
ret
aam
lock
call
jb
fxch
mov
in
cmpsl
push
inc
adc
je
cli
cmp
jne
and
jp
pop
push
or
push
cli
lret
rcrb
orl
push
je
rclb
xchg
cmp
pop
scas
inc
repz
arpl
jne
jbe
icebp
sbbl
je
or
jns
out
into
incb
inc
test
pop
sahf
in
xchg
fnsave
shrb
scas
in
sahf
jecxz
ret
push
push
dec
push
and
int
imul
mov
jns
rcrb
shrl
test
push
xor
mov
mov
inc
out
sbb
aaa
ljmp
dec
sbb
pop
loopne
decb
cmp
insl
or
pop
scas
pop
xchg
rol
ficompl
lahf
push
mov
xchg
xchg
shlb
into
je
mov
jmp
out
rol
jmp
cld
ja,pn
fldl
xor
aam
adc
add
movsb
and
int3
pop
inc
data16
incl
je
sar
and
jge
mov
int
push
scas
clc
or
fwait
pop
and
rorl
xchg
aas
data16
push
lea
push
adc
aaa
mov
out
mov
mov
adc
or
inc
mov
jle
mov
push
mov
mov
inc
sbb
imull
mov
dec
arpl
dec
inc
test
jns
mov
push
and
bnd
inc
xchg
pusha
ss
sbb
and
ja
or
mov
xor
and
jne
in
mov
mov
push
aam
or
popf
lods
adc
dec
inc
sub
iret
dec
xchg
enter
xor
inc
andl
lahf
push
imul
push
lods
loopne
pop
icebp
sbb
movsl
bound
mov
add
mov
scas
jae
addr16
out
adc
jnp
adc
push
rcrl
lods
divl
cmc
movsl
inc
pop
lcall
dec
jae
lods
cwtl
pop
mov
sbb
dec
lcall
push
frstor
aad
cwtl
loopew
push
sbb
inc
sub
rcrb
cmc
mov
ja
sbb
adcb
and
pop
dec
pop
xchg
xchg
scas
xor
test
push
mov
jp
in
mov
leave
push
std
pop
lahf
sbb
push
mov
sbb
xchg
repnz
test
push
mov
xchg
xchg
aas
ljmp
jnp
jge
add
or
jb
mov
aas
cmp
les
jmp
jbe
pop
mov
or
lods
fimuls
inc
mov
in
pop
pop
repnz
mov
adc
cwtl
in
incb
lret
repnz
dec
sbb
push
sub
xor
push
mov
push
jne
or
pusha
sbb
mov
enter
cwtl
pusha
mov
sbbb
loopne
xchg
sub
subb
inc
jp
mulb
add
ret
mov
iret
insb
pop
fldl
xor
repz
adc
int3
xchg
dec
xor
fsubrl
dec
add
sbb
ja
adc
and
mov
pop
sub
clc
xchg
idivl
mov
dec
psubw
fildl
mov
adc
dec
stos
inc
xchg
and
add
pop
jb
push
ds
or
and
jmp
adc
ficoms
inc
jge
jns
xchg
dec
cltd
stc
aam
jge
inc
xchg
sahf
aas
add
stos
outsl
rcrb
movsb
repnz
push
cmp
xchg
or
arpl
mov
fwait
mov
xor
je
loop
ljmp
pop
inc
pop
or
dec
std
jbe
xor
sbb
les
enter
ja
aam
push
add
lahf
xchg
popf
cwtl
jle
pusha
adc
add
movb
lcall
fsub
fisubl
mov
xchg
mov
rclb
mov
or
hlt
call
add
xchg
push
push
cmp
jbe
adc
movsl
mov
mov
into
sbb
fidivrs
aad
push
xlat
gs
aam
mov
lret
dec
rclb
xor
push
sbb
ret
and
cmpsb
popf
in
loope
inc
test
jo
adc
sbb
jne
pop
mov
pop
pop
pop
lods
mov
cli
add
jo
lcall
movsb
lods
out
out
popa
xchg
movsl
addl
adc
or
add
push
ret
dec
pop
fidivrs
jo
cmpl
lahf
lods
aas
xchg
add
out
jle
pcmpeqd
clc
push
sub
mov
cwtl
idivl
xor
dec
sub
jp
cmp
das
mov
jecxz
push
sbb
cmp
mov
jge
dec
js
sahf
movsb
xchg
push
cmp
jp
cs
pop
adc
rolb
push
lea
sbb
repnz
into
mov
or
cmpsb
daa
sahf
in
lds
dec
adc
push
xchg
cmp
lea
cwtl
jg
shrl
insl
mov
es
fwait
dec
and
pop
stc
inc
or
cltd
jno
call
jmp
xor
imul
jg
data16
nop
add
lahf
add
jb
xor
xchg
incl
adc
push
arpl
lock
in
pop
icebp
out
lret
dec
pop
subl
leave
scas
jle
mov
movsb
and
into
outsb
jp
scas
sub
lret
or
fdivrl
push
fists
in
lock
movsl
daa
pop
mov
adc
pop
and
rclb
aas
sbb
and
pop
adc
fsubl
ja
int
insl
jecxz
adc
dec
test
jp
xchg
xor
lahf
ret
dec
mov
pop
xchg
dec
mov
inc
ja
sub
lcall
imul
fbld
popa
fmul
dec
mov
loop
add
pop
dec
loope
scas
test
add
add
movsb
dec
jl
data16
pop
ds
dec
mov
lea
lahf
scas
movsl
mov
cld
enter
push
mov
popf
mov
and
ljmp
xor
or
dec
pop
test
cmp
jb
pop
les
lods
pop
roll
out
imul
fadd
mov
or
cmp
hlt
test
addr16
repnz
std
lret
js
ja
cmp
add
dec
lret
cwtl
xchg
push
aas
loop
sub
jle
and
addl
lret
lahf
in
and
sar
and
idiv
push
nop
mov
inc
sub
lods
mov
mov
arpl
xor
nop
aaa
xchg
or
xchg
sbb
dec
xor
add
dec
fstpt
pop
jmp
hlt
addl
out
or
test
adc
mov
decl
insb
sbb
iret
pop
orb
je
repnz
or
rolb
fwait
mov
adc
aas
je
js
mov
mov
xchg
and
nop
mov
fiadds
mov
mov
ja
and
and
sti
sbb
inc
sarb
sbb
mov
ret
push
leave
fcmovb
mov
cs
or
mov
xchg
lds
xchg
mov
mov
mov
mov
pop
mov
cwtl
xor
sbb
mov
mov
rolb
rorb
repnz
leave
mov
push
mov
jno
pop
out
pop
xchg
sbb
adc
pusha
scas
js
push
fwait
in
jp
hlt
arpl
hlt
outsb
incl
out
add
rcrl
adcb
idivl
scas
cmp
inc
in
test
cmp
xchg
adc
xchg
xchg
mov
mov
sbb
jo
ret
sbb
mov
pop
pop
xor
cmp
fstp
popa
lea
arpl
mov
jo
ror
dec
stos
in
inc
xor
in
test
hlt
mov
add
or
outsb
lods
xchg
and
fidivrs
mov
jno
jne
xchg
sub
mov
daa
jo
sub
push
pop
icebp
sbb
inc
xchg
nop
and
cs
add
mov
mov
push
or
xor
vpminub
push
push
jbe
scas
xor
es
call
in
jmp
leave
add
mov
in
dec
loop
nop
out
pop
jmp
inc
mov
dec
mov
int3
fwait
pop
lret
and
call
xchg
in
scas
adc
fmuls
movsb
mov
cmp
xor
repnz
or
sbb
mov
bound
call
jp
mov
xor
inc
push
pusha
cli
mov
into
mov
push
aas
or
adc
jge
and
cmp
xor
mov
mov
pushf
jbe
xchg
pop
scas
leave
pop
leave
pop
fld
subb
int
jns
out
sbb
inc
in
shl
cmp
push
mov
sub
push
rolb
lret
inc
aad
pop
shlb
std
mov
test
inc
pop
test
add
pop
fdivrl
aas
mov
dec
cmp
add
mov
inc
cmpsb
sbb
or
push
push
mov
cmc
nop
cltd
mov
push
sbb
mov
add
sar
push
mov
mov
push
lret
mov
cli
movsl
pop
lret
nop
mov
push
pop
mov
repz
jmp
sarl
inc
cmp
lahf
mov
mov
out
mov
pop
outsb
iret
loopne
shrb
imul
adc
mov
sbb
mov
inc
stos
mov
push
adc
cmp
mov
mov
repz
add
cmovl
mov
cmc
or
aas
rcrb
cmp
pop
inc
sbb
pusha
mov
jne
xor
shr
lds
pusha
rolb
ja
jbe
or
int3
jmp
jns
xlat
loope
stos
in
loopne
ja
sbb
sub
addr16
xor
adc
addr16
pop
add
cmc
xchg
sub
push
mov
mov
xor
notb
jg
lea
mov
add
inc
lods
scas
scas
lods
cli
test
ljmp
xor
push
or
dec
sub
out
imul
loop
and
in
xchg
xchg
cld
leave
bound
aad
daa
dec
jge
insb
jecxz
sub
je
inc
sbb
lds
icebp
xchg
cmp
lcall
pop
and
idivl
in
xchg
and
push
shlb
inc
lock
mov
pop
std
icebp
or
stos
jnp
movsl
push
inc
mov
sar
lds
cmp
es
mov
push
int
and
and
out
jp
call
sub
ret
dec
popa
pushl
push
xchg
adc
outsl
leave
mov
cmpsl
dec
push
vorps
out
mov
insb
inc
sbb
push
out
outsl
adc
daa
cli
cwtl
imul
fwait
push
in
pop
pop
inc
or
pop
sbb
sub
mov
add
pop
loope
sub
in
mov
dec
inc
lcall
xchg
add
add
mov
mov
xchg
repz
stos
cmc
jo
cmpsl
mov
std
mov
pop
out
adc
and
fisttpll
sub
sahf
lret
loopne
add
xchg
lcall
add
mov
inc
sub
push
into
and
mov
cmp
inc
gs
pop
jne
and
pop
xchg
jecxz
cli
and
cmp
dec
inc
mov
mov
jp
iret
into
je
push
xchg
inc
dec
in
pop
popf
cmp
and
mov
nop
dec
xlat
jmp
stc
shrl
mov
aas
pop
or
insl
aaa
std
in
cmp
mov
dec
mov
lret
icebp
xchg
out
pushf
data16
xchg
imulb
inc
add
add
aad
xor
testl
xchg
test
add
lods
out
mov
scas
frstor
ret
add
out
cmp
ljmp
and
aam
mov
fisubs
jns
fstpt
push
mov
scas
leave
fldcw
adc
push
movsl
mov
jno
or
imul
lcall
pop
inc
pop
cmp
inc
ret
lret
dec
sub
and
rorb
mov
imul
jae
cli
xchg
push
pop
fucomp
mov
shr
loope
rcl
mov
mov
mov
arpl
into
or
fs
lahf
push
pop
aad
dec
xchg
pusha
jge
pop
and
fdivp
std
lcall
mov
hlt
lcall
movsb
add
testl
mov
es
xchg
insl
aaa
ror
add
pop
xor
or
iret
adc
inc
mov
cmp
pop
fucom
jno
sub
test
rorl
mov
mov
dec
in
loop
ljmp
mov
sbb
dec
mov
bnd
mov
cmc
insb
test
call
andl
stos
jp
mov
mov
cmp
js
jbe
cmpsb
adc
mov
jnp
push
pop
cmpsb
clc
cmp
cltd
ret
dec
stc
xor
int3
xor
push
cmp
out
lock
cmp
jecxz
cmc
imul
cmpb
pop
mov
or
mov
aaa
push
lahf
push
hlt
or
shrb
inc
and
or
sub
and
sahf
mov
pop
cwtl
push
mov
sbb
imul
out
add
sahf
xchg
add
mov
push
cmp
and
push
addr16
mov
adc
lods
pop
pop
xor
popa
inc
sbb
cmp
lods
xchg
into
jmp
push
xor
setle
fs
adc
fs
imul
lret
mov
add
loope
repnz
xchg
xchg
cmp
call
add
push
add
xorb
pusha
andb
lcall
scas
sbb
xor
mov
stos
in
not
fsub
inc
ffreep
mov
stos
add
mov
mov
inc
mov
sbb
addb
in
mov
movsb
movsb
jo
cmpsb
insb
cmp
filds
movsb
pushf
jne
fistpl
shl
add
cltd
cmc
jp
mov
lea
pop
icebp
mov
adc
in
jle
mov
xchg
push
inc
mov
or
test
cmp
ja
or
inc
idivb
movsl
roll
or
fs
lea
movsb
push
mov
or
je
add
xchg
xor
adc
pop
ja
scas
bound
adc
sub
mov
addr16
push
jge
sbb
orb
xchg
mov
adc
pop
pop
inc
int
movsl
sub
pop
adc
jae
mov
mov
out
sbb
mov
jnp
fstpt
sbb
rcrl
cs
push
add
sub
pop
fdivl
xchg
int3
mov
nop
icebp
jns
test
imul
push
xchg
sbb
pop
hlt
js
lea
in
xchg
mov
aaa
stos
push
lcall
push
jecxz
and
ror
push
xchg
mov
xor
ficoml
dec
dec
xchg
xor
add
pop
scas
in
mov
scas
add
int3
add
cmp
push
das
bound
mov
jecxz
call
push
adc
xorl
push
pop
and
icebp
sub
ss
stos
push
xchg
cmpsb
or
xchg
std
mov
pop
sbb
push
aad
mov
mov
jl
sub
mov
adc
jae
xor
pop
mov
lret
es
and
scas
mov
lahf
daa
mov
or
movsl
mov
and
jns
cmc
mov
enter
lret
ljmp
mov
jbe
pop
jl
jno
in
mov
sub
leave
sub
inc
sbb
cmp
inc
push
mov
ljmp
mov
mov
xchg
fcomp
or
iret
jbe
push
ja
lods
cmp
es
dec
nop
int
or
mov
and
outsb
push
les
xor
jg
xor
and
pop
push
xchg
or
and
cvtpi2ps
rol
pop
dec
aam
shrl
cmp
mov
mov
sbb
jo
lods
mov
test
pop
jge
rcr
movsl
mov
ja
fldcw
adc
int3
adc
nop
ds
out
sbb
rcrb
cwtl
bound
out
nop
mov
call
mov
jne
scas
cli
fistpll
int
inc
pop
sbb
div
repnz
jne
mov
xchg
push
in
sbb
fsubs
std
jecxz
adc
shrb
xor
sbb
mov
jae
les
loop
xchg
mov
xchg
mov
jne
imul
dec
fs
ss
jle
pop
out
fists
mov
xor
sbb
jmp
xlat
add
js
in
testl
rcrl
jno
aas
movsl
lahf
push
hlt
mov
in
fucom
cmp
je
sahf
popf
repnz
je
jae
punpckldq
jno
lret
inc
loope
loope
out
mov
in
cmp
adcb
addr16
cwtl
rclb
cs
in
movsl
std
dec
or
std
pop
aam
inc
les
addb
outsb
stc
xor
movb
shrb
xor
cmpsb
cmp
jecxz
cwtl
sub
mov
clc
add
lahf
dec
push
mov
test
cwtd
and
loop
lcall
mov
mov
push
dec
fadd
jp
cmp
inc
test
ja
mov
outsl
scas
int3
xlat
adc
pushf
add
lret
loopne
xor
xor
mov
xchg
mov
sub
shrb
loopne
in
or
lods
clc
and
scas
rcr
lds
jb
and
jge
inc
and
lcall
int
push
test
cmpsl
idivb
and
enter
in
out
or
sub
pop
in
sub
aas
fisubs
aam
adc
das
sub
adc
test
pusha
jl
xchg
andl
addb
jnp
sbb
lahf
outsb
mov
pushf
cwtl
lods
imul
movsb
xor
in
pminsw
xchg
sbbl
into
in
loopne
dec
mov
cmp
push
cmpsl
mov
nop
das
ss
lret
mov
gs
and
mov
xchg
imul
mov
outsl
leave
inc
dec
and
inc
lret
cmp
lcall
pop
rcrb
xchg
mov
mov
ljmp
lcall
sar
add
sti
loopne
cli
xlat
cmp
push
xchg
mov
mov
divl
decb
sbb
aad
xrelease
mov
jnp
mov
add
mov
out
add
stc
push
das
je
jl
jmp
mov
movsl
jmp
fidivs
into
pop
pop
shlb
lea
mov
fwait
add
xor
lret
xchg
les
cwtl
data16
je
test
mov
jecxz
movb
mov
xchg
arpl
adc
jne
mov
sub
loop
cmpsb
push
jbe
call
mov
mov
inc
aam
rcrb
loope
pusha
push
adc
xchg
xchg
in
jae
out
orb
js
out
mov
jns
jae,pt
mov
nop
test
cwtl
scas
popf
jp
sbb
dec
xor
ss
mov
bound
mov
pop
push
xor
mov
add
xchg
ds
dec
mov
mov
cmp
sub
mov
xchg
mov
lock
pushf
movnti
cmpsb
push
sbb
sbb
es
xor
mov
xlat
xor
leave
mov
orl
ja
push
push
fs
sbb
data16
imul
leave
ret
mov
mov
mov
dec
stos
sbb
lock
and
fs
inc
pop
aam
pop
in
sahf
sbb
dec
cmp
xchg
std
xchg
shll
mov
inc
mov
push
mov
jecxz
ret
lods
and
dec
sub
jnp
notl
movsb
repnz
dec
mov
adc
test
sbb
ret
and
pop
daa
or
icebp
insb
pop
mov
outsb
push
dec
icebp
fmuls
or
pusha
mov
xor
rorb
iret
xchg
cmp
add
or
pushl
and
nop
addr16
push
fcmovne
stc
out
in
sbb
sbb
jg
stc
lahf
adc
dec
push
push
sub
repnz
mov
push
fnstcw
push
movsl
dec
jge
imul
xor
fiaddl
mov
cmp
xor
cmp
mov
cmp
sub
ret
inc
es
gs
andb
add
iret
adc
adc
sub
data16
and
push
and
mov
xlat
push
and
movsb
in
pushf
pop
int3
mov
lods
ret
pushf
nop
imul
lock
test
mov
adc
ret
int
cmpsb
jp
leave
xchg
ror
shr
push
cmpsb
aam
aas
in
lock
fidivl
mov
push
aam
adcb
inc
sbb
scas
loopne
fs
push
adc
mov
pop
pminsw
add
ja
cs
ret
sbb
mov
dec
andps
add
cmp
add
aaa
subl
and
sub
xor
decb
mull
js
pop
imul
cmp
jg
jle
lret
sbb
insl
lock
jmp
mov
lea
hlt
sub
mov
out
nop
lcall
jbe
add
cmpsb
repz
pop
push
popa
sbb
mov
push
rcr
mov
movsb
xchg
dec
cmp
sbb
daa
sub
loop
fsubr
lahf
rcll
andb
scas
rol
lahf
shll
adc
fstl
ds
stc
movsl
push
cmp
and
js
push
arpl
inc
push
unpckhps
mov
jo
jmp
jae
mov
cmp
fildl
pop
sub
adc
in
push
push
inc
adc
jne
mov
inc
jp
lock
cmp
arpl
ja
stc
cmp
into
adcl
rol
sub
fwait
insb
test
ljmp
int
mov
fwait
jo
jg
lahf
dec
xor
pop
lret
mov
je
cltd
shll
xchg
dec
cmpsb
mov
test
dec
loopne
lret
push
ss
aam
mov
leave
pop
sub
mov
push
pop
push
loope
xchg
xchg
enter
aam
icebp
mov
sub
jmp
jecxz
mov
jg
cltd
mov
jo
hlt
xor
ret
cmpb
je
jbe
and
inc
ficoms
pop
mov
ja
jnp
hlt
cmc
test
mov
sub
mov
lock
mov
jg
mov
xchg
xor
mov
mov
scas
sbb
xorb
sbb
lock
and
pop
adc
mov
lods
jp
pop
fdivs
scas
out
sbb
pop
aad
in
mov
add
and
adc
jecxz
adc
pop
mov
out
cmp
inc
and
lahf
sub
cmp
test
ja
fiaddl
adc
adc
adc
shl
pop
test
cmp
mov
lcall
adc
stos
mov
out
push
movsb
cmp
cltd
push
scas
ljmp
cmp
push
xchg
sahf
xor
lret
ret
mov
jmp
add
add
and
xchg
jne
jae
jno
outsl
dec
test
arpl
push
xchg
and
jmp
or
in
xchg
xor
loop
js
sbb
lahf
fsubs
leave
adc
mov
jbe
out
cwtl
scas
mov
lods
dec
pop
rcll
push
mov
fs
mov
jnp
ret
push
cltd
sbb
in
xchg
js
lds
push
nop
imul
jge
ret
cmp
aad
sbb
cmpsb
mov
ficoml
fcomps
mov
int3
pushf
sbb
dec
adc
jb
addr16
mov
inc
mov
bound
incl
scas
xchg
jp
xor
loopne
arpl
sbb
jp
mov
in
push
xchg
addb
nop
loopne
popa
xor
push
movsl
jmp
adc
bound
out
add
daa
xor
mov
or
leave
fadd
pop
jg
daa
ficoml
data16
push
mov
aad
lcall
push
push
fadds
std
fisttpl
cmp
sub
push
loop
cmp
nop
jns
dec
cli
daa
mov
push
popa
xchg
and
testb
shll
test
add
sar
std
mov
enter
lcall
jecxz
xor
in
out
in
dec
xor
fbstp
dec
testl
push
xchg
das
icebp
cwtl
mov
add
jecxz
mov
and
mov
push
sbbl
scas
and
dec
arpl
popf
jo
mov
testl
ljmp
imul
xchg
and
pop
loope
push
push
jmp
scas
icebp
test
pop
cmp
add
pop
repnz
iret
mov
aaa
out
cmpsb
out
fcoml
push
pushf
add
push
bnd
aad
clc
imull
jmp
jecxz
in
int3
aam
das
add
sbb
adc
pop
pop
xchg
cmpsb
or
into
bound
or
insl
jg,pn
sti
add
pop
xchg
sti
pop
shl
adc
stc
mov
jecxz
push
imul
pop
enter
mov
add
out
aam
add
lods
movsl
lret
bound
scas
ljmp
cmp
ret
inc
int3
dec
hlt
pop
sub
fstps
pop
fstps
inc
mov
iret
and
push
repnz
and
ljmp
lock
lds
add
mov
inc
adc
jo
test
jmp
rorl
movsl
push
in
mov
xor
gs
cld
push
push
mov
xchg
or
jno
lods
cli
fpatan
adc
data16
sub
loope
xor
lods
push
test
nop
inc
or
xchg
es
mov
aam
inc
jno
inc
ret
adcl
lahf
jne
or
cwtl
adc
int
je
iret
xchg
mov
out
mov
jno
int
callw
outsl
arpl
and
jecxz
sub
mov
jecxz
pop
out
push
int3
filds
frstor
xchg
js
cmp
in
scas
std
jbe
pop
push
inc
xchg
fwait
psrad
add
jnp
lret
std
mov
mov
fnstsw
fs
push
push
dec
adc
mov
aas
lahf
cmp
adc
cmp
dec
or
lahf
scas
adc
std
call
mov
jp
mov
xchg
lcall
dec
add
mov
inc
push
dec
push
push
loop
or
pushf
cs
xchg
lds
sbb
insl
jnp
pop
aad
add
fmuls
cmp
aas
push
pushl
jp
push
xor
je
and
in
jno
stc
or
mov
xchg
pop
lock
scas
imul
add
mov
aaa
xchg
and
test
jle
inc
or
dec
cmp
repnz
xchg
inc
movsl
sub
sahf
sbb
mov
mov
and
sub
shrl
push
test
or
pop
lock
sub
pop
fdivrs
aas
into
push
lcall
inc
comiss
fidivrl
mov
lahf
xchg
add
loop
mov
int3
addr16
sub
cmp
int3
mov
aad
inc
mov
rcrb
sub
mov
in
test
add
orl
sahf
fstl
fstp
nop
rorl
pop
inc
xchg
dec
mov
push
jle
repz
dec
lret
mov
xchg
push
inc
adc
xchg
cmp
pop
add
or
inc
xor
cmpsl
loop
in
les
jnp
js
hlt
sbb
loop
in
je
inc
sub
pushf
mov
adc
in
mov
arpl
ja
inc
dec
pushf
dec
jg
adc
sbb
aam
cltd
mov
test
mov
dec
push
pop
jno
enter
arpl
shlb
cmpsb
mov
mov
pop
aad
fwait
imul
adc
sub
cmpsb
jg
arpl
adc
std
xchg
adc
sbb
mov
mov
push
std
mov
lea
adc
push
fdivs
sub
movb
jle
jno
clc
test
push
std
out
stos
int
cmp
add
mov
test
call
ds
xor
cwtl
shlb
inc
in
cmp
into
or
std
addr16
lods
pop
mov
mov
or
into
out
arpl
fcompl
mov
jnp
mov
out
aad
push
cmpsb
mov
or
icebp
or
aad
xchg
in
scas
ret
insl
jo
mov
mov
push
mov
adc
jo
in
mov
aam
mov
jno
cli
imul
fistpll
addr16
fdivrl
clc
and
mov
add
lcall
pop
pop
inc
cmc
inc
outsb
inc
test
mov
xor
lea
mov
lcall
sub
fdivr
rol
or
pop
inc
dec
leave
addb
shll
cmp
mul
rorl
xchg
in
cmp
xchg
insb
insl
aam
mov
sub
inc
push
dec
decl
lahf
sbb
test
and
adc
push
loope
push
dec
fpatan
in
and
pop
sub
mov
sub
sbb
ret
stos
iret
jecxz
cmp
mov
xor
stc
mov
sahf
sahf
pop
sub
inc
mov
adc
xchg
icebp
jl
mov
sti
mov
arpl
popf
pop
push
out
mov
jg
imul
xor
push
xchg
push
jg
aam
scas
inc
push
js
inc
push
lods
or
and
lods
and
mov
jnp
push
sbb
in
jl
andb
int
cltd
push
jo
adc
sahf
push
loop
das
adc
mov
sub
pop
data16
dec
movsb
add
ljmp
mov
add
fs
cwtl
insb
or
icebp
adc
dec
sbb
mov
ret
and
sbb
push
fistps
shll
push
push
enter
ljmp
mov
stc
fsubp
dec
mov
loope
xchg
jl
dec
sub
pand
test
mov
and
test
push
mov
xchg
clc
mov
mov
push
stc
pop
out
scas
pop
sub
xor
pop
push
dec
les
mov
test
cmpsb
cwtl
popf
pusha
enter
mov
imul
sbbl
xchg
sti
imul
pusha
jo
mov
call
out
orl
jle
bswap
xchg
sti
lcall
push
loope
je
fsubl
test
iret
mov
inc
jbe
mov
adc
pop
mov
sbb
xchg
es
jae
stos
pushf
xchg
push
mov
xor
lcall
sti
or
adc
adc
cmp
testb
inc
gs
jo
or
in
rorl
jp
cmc
sbb
xor
je
add
xor
jae
jecxz
pop
mov
sahf
pop
fstpt
into
call
insb
vpmullw
orl
pop
repnz
daa
ljmp
or
cmc
fcmovbe
jg
loopne
xchg
pop
inc
add
movsb
push
mov
lods
in
dec
ss
lock
pop
fnstenv
lcall
data16
and
in
test
sbb
xor
add
shll
mov
dec
sbb
inc
addl
das
gs
in
push
or
mov
mov
mov
aas
test
and
scas
push
mov
xchg
jns
add
mov
sub
call
fcoms
or
add
xchg
or
mov
push
mov
pop
add
and
adc
mov
outsb
and
mov
aas
fdivl
in
push
arpl
adc
xor
add
ljmp
pop
inc
scas
fidivs
lock
std
jbe
into
or
mov
adc
cwtl
sti
out
icebp
cmp
cmc
xchg
pop
jno
jne
dec
call
sbb
dec
cmpsb
loope
mov
dec
daa
mov
hlt
push
out
inc
lcall
mov
cld
jge
jo
sbb
out
jge
dec
dec
inc
js
and
jge
xchg
push
mov
std
push
ljmp
inc
push
popf
fmul
loopne
cwtl
jo
mov
lahf
ljmp
dec
loope
or
add
mov
cmp
mov
repz
cmp
xchg
ficoms
mov
mov
int3
in
dec
xor
dec
cmp
hlt
push
fwait
shlb
ret
fldcw
dec
mov
adc
stos
jo
pop
mov
pusha
clc
insb
int3
sbb
push
and
jo
mov
inc
fistpll
andl
cmp
xor
and
push
stc
enter
xchg
jo
or
sub
add
cmp
add
sti
int
lret
das
es
jge
push
pop
movb
or
int3
cmp
inc
outsb
scas
add
cmp
mov
jno
popa
je
fldt
and
lretw
xchg
sub
in
loope
jo
pusha
repz
loope
shrb
sub
pop
or
push
subl
sub
xor
xor
sahf
call
arpl
inc
testl
dec
ds
adc
xor
bnd
jbe
and
aaa
push
ficoml
lods
xchg
cli
jo
jne
mov
loope
movsl
inc
incl
loope
add
scas
dec
sbb
sbb
xchg
orl
iret
aam
sbb
mov
and
add
test
lods
and
aad
cs
pop
cmp
fdivrs
iret
fidivl
xchg
jle
fistpll
jo
inc
jg
mov
mov
loope
jmp
pop
jnp
ss
pop
stc
cmp
push
shl
sub
inc
or
cmp
mov
add
mov
fwait
call
in
mov
push
subb
ss
push
imul
dec
testb
in
push
gs
pop
lahf
lcall
inc
ror
dec
jnp
and
stc
jecxz
lea
inc
shlb
adc
xchg
sub
push
sbb
rcrb
scas
jecxz
nop
sub
cmp
loope
lds
mov
insl
jbe
std
dec
add
imul
add
xchg
mov
xchg
sbb
push
cs
mov
shlb
xchg
jl
jecxz
adc
or
jns
cmp
jecxz
push
mov
aam
sub
fdivrs
hlt
and
cmp
jb
sbb
daa
sbb
out
dec
mov
in
fwait
xchg
int
test
into
inc
dec
dec
sub
aad
jmp
cli
pop
inc
into
mov
mov
sub
and
int3
aad
out
and
push
xor
das
dec
iret
and
inc
or
fistps
cmpsb
jns
sbb
or
int3
in
roll
push
popf
mov
in
leave
lret
dec
sbb
in
or
pop
jmp
cmp
cmp
das
push
cwtl
xchg
add
mov
adc
xchg
add
shll
xchg
and
out
jl
fiadds
cmc
add
mov
in
mov
push
push
cs
insb
dec
mov
fld1
js
lcall
adc
xchg
xlat
lahf
adc
jg
sub
cmp
in
insb
call
and
push
outsl
pop
shlb
push
fwait
cmp
adc
lds
fyl2xp1
ss
dec
xor
fstpl
pop
cmc
sub
dec
push
outsb
aam
mov
nop
add
and
iret
mov
xor
and
scas
sbb
xchg
push
lock
cmp
sbbl
lcall
add
push
and
sbbb
xchg
xchg
fs
mov
cs
inc
and
jbe
loop
xor
jmp
scas
sbb
sbb
jne
jp
pop
push
daa
js
cmp
and
movsb
rclb
sbbl
les
xchg
push
movsb
sbb
out
mov
addr16
push
cmp
jne
pop
push
xor
jle
insb
sub
jns
lds
jo
icebp
mov
lods
add
adc
dec
cmc
out
mov
sbb
sar
aaa
cwtl
push
cmp
xchg
nop
out
mov
in
js
add
cmp
fcoml
enter
inc
in
mov
aaa
sbb
shll
jge
leave
rol
test
cmp
add
pop
insl
stos
inc
incl
fwait
pop
stos
add
push
pop
in
xor
jno
xor
outsl
jb
adc
push
sub
in
pop
jecxz
push
aad
fsubp
mov
push
add
sti
cmp
out
dec
add
jl
sbb
in
push
shl
test
mov
and
es
outsb
stc
prefetch
je
or
pop
mov
inc
out
dec
loope
in
and
lret
add
std
adc
xchg
jmp
xchg
adc
xlat
xchg
mov
loope
pop
sbbb
rorb
dec
addb
iret
lret
mov
loopne
jnp
cltd
mov
xchg
or
add
stos
sti
fimuls
jge
movlps
repnz
mov
inc
movsl
and
sti
dec
fsubr
daa
pop
loope
jb
loop
sarb
imul
or
inc
icebp
add
adc
fcoml
mov
mulb
lock
iret
inc
pop
pusha
or
pop
fcompl
or
xchg
sub
std
mov
arpl
push
flds
es
pop
sub
mull
fs
cmp
jp
fbstp
cli
push
leave
mov
push
push
cmp
and
cmpsl
fidivrs
jo
mov
inc
scas
insl
sbb
and
mov
leave
adc
cmpsl
xlat
mov
aas
cmp
and
insb
loopne
sbb
dec
push
cmp
js
jmp
nop
imul
pop
xchg
clc
xchg
int
and
sub
pop
lods
or
int
mov
sub
fistl
js
push
mov
out
mov
pop
dec
cli
bound
xorl
sbb
repz
les
mov
cltd
aas
testl
mov
mov
pop
push
lods
dec
or
rcr
adc
fadds
test
ja
mov
pop
repnz
jne
in
pop
sbb
mov
ret
push
mov
sub
imul
cmpb
fiaddl
push
test
mov
lcall
adc
and
and
sub
aas
cltd
mov
ffreep
adc
sbb
add
and
push
or
lods
dec
lret
xor
xchg
push
imul
ljmp
push
mov
fcompl
lods
aaa
push
or
aam
inc
and
pop
rcrb
adc
jmp
cmp
inc
mov
and
push
nop
inc
pop
add
leave
test
addr16
int3
push
xor
inc
xchg
int
loopne
mov
out
jecxz
push
outsl
pop
jle
pop
and
sub
or
lds
int3
fdivrl
jecxz
orl
xchg
and
mov
ret
sbb
shr
test
mov
sbb
ret
mov
daa
mov
test
popf
inc
or
and
sbb
shl
dec
orl
cmp
mov
lret
gs
out
popa
dec
xchg
jb
bound
xor
xchg
adcl
inc
jno
stos
xor
sahf
dec
adc
out
ret
dec
lods
push
cmp
dec
insb
sti
clc
lahf
test
cmc
scas
int3
fwait
mov
mov
dec
mov
lds
push
xlat
mov
in
sbb
inc
mov
cld
cmpl
inc
addr16
inc
xor
gs
fwait
inc
mov
sarl
xor
and
imul
shll
ret
aam
stos
xor
push
bt
insl
xchg
xor
cmp
push
push
clc
aas
gs
push
jno
jmp
mov
pop
movsb
test
xor
xchg
mov
add
sub
push
pop
hlt
mov
xor
lahf
sbb
mov
push
sbb
xchg
and
loopne
sbb
dec
push
mov
fdiv
mov
sahf
pop
dec
push
adc
inc
les
mov
add
dec
push
xchg
ss
jns
jmp
mov
cltd
push
stos
enter
ljmp
sub
out
test
lock
gs
xchg
pop
mov
jp
into
daa
push
inc
sbb
sbb
call
xor
shlb
cmp
xchg
cli
insb
fucomi
fs
je
dec
sbb
mov
adc
gs
mov
shlb
cmp
adc
dec
ret
call
xchg
ja
in
and
loopne
xchg
mov
sub
pusha
xchg
scas
jnp
in
iret
sbb
je
fsubr
pop
pop
jno
push
lret
sub
add
and
lock
ret
loop
and
je
out
mov
push
out
aas
jne
mov
jg
jmp
scas
fcomps
ret
inc
or
mov
outsb
orl
sub
and
or
cmpsb
xchg
int3
dec
scas
scas
gs
inc
add
inc
sub
jns
add
lock
mov
mov
pop
mov
stc
ja
idivb
in
loop
out
mov
dec
popf
jno
clc
inc
int3
xchg
mov
mov
outsl
sahf
lret
test
out
push
adcl
les
push
push
out
insl
xchg
push
mov
loop
ss
shrb
fistps
sbb
add
mov
cmc
inc
mov
or
icebp
xchg
sbb
and
jb
stc
loope
test
fiaddl
out
in
data16
mov
adc
sub
mov
and
popa
and
or
int3
out
repnz
jmp
mov
pushf
pop
test
outsb
fstp
shlb
push
push
mov
adc
and
daa
push
or
add
fldenv
xchg
push
mov
lods
and
ds
pop
xor
or
subl
repnz
sbbl
xchg
dec
or
je
daa
sbb
cmc
mov
sti
sbbl
rcrl
push
lds
jae
xor
adc
jne
enter
scas
popf
lahf
scas
add
cmp
movl
mov
push
nop
dec
push
inc
cltd
pop
dec
and
int3
aas
xchg
negb
mov
cld
add
loop
lock
push
fdivp
in
pushf
xchg
xor
and
mov
jecxz
data16
dec
mov
shrl
adc
jno
adc
std
mov
rsm
or
inc
xor
pop
into
sahf
leave
mov
inc
adc
mulb
icebp
dec
gs
and
sub
fisttps
loope
cmp
inc
gs
pop
push
mov
push
jno
dec
inc
xorl
pop
cmpsb
popa
cmp
jecxz
add
push
scas
cmc
mov
fadds
xor
jecxz
inc
scas
mov
pushf
lock
imul
push
mov
cld
adc
aad
sub
cli
or
xlat
add
test
repz
fists
minps
test
sbb
sub
daa
adc
sbb
sbb
pop
mov
adc
jns
pushf
repnz
mov
popf
cmp
std
dec
add
loop
xlat
xor
cmp
pop
push
xchg
inc
shrb
movsb
xchg
mov
mov
or
es
cmp
repnz
mov
jne
or
scas
xchg
mov
jo
loope
outsl
jg
mov
xor
push
xor
mov
fisttpl
mov
test
leave
jl
roll
mov
into
jmp
pop
insb
dec
sarl
pop
shll
outsl
mov
mov
adc
insl
push
or
dec
inc
icebp
loope
fnsave
dec
jecxz
enter
or
mov
aaa
inc
loopne
xchg
cmp
das
cmc
imul
sub
hlt
daa
sbb
and
mov
xor
mov
jb
loope
or
lahf
dec
push
mov
xlat
push
dec
test
jbe
mov
ds
cmp
popf
mov
aad
inc
dec
mov
push
and
sbb
inc
inc
jb
xchg
sub
jns
push
inc
in
test
dec
xor
lds
pushl
or
fnsave
xor
adc
and
cmp
push
insb
add
bound
xor
push
mov
mov
je
and
mov
cmpsl
push
push
push
fisttps
jo
and
jne
xor
out
sub
and
push
mov
loop
sbb
addb
int
ret
cld
outsb
mov
pop
test
mov
xchg
dec
mov
jnp
loop
dec
jmp
bound
dec
scas
jnp
sarb
cmpl
inc
sbb
or
out
stos
or
dec
out
fucomi
xchg
jne
mov
leave
enter
adc
pop
cmpsl
lods
dec
pop
sbb
ds
int3
dec
lea
cs
jnp
daa
outsl
pop
jno
lahf
or
cmpsl
jg
shlb
pop
mov
push
xchg
mov
mov
mov
and
pop
rclb
sbb
push
xchg
xchg
cmpsl
adcl
popf
and
adc
xchg
jg
dec
ret
xor
mov
stos
adc
ret
jge
pop
adc
fdivrl
cmp
rclb
movsl
push
loop
inc
sbb
test
rcr
aad
and
jl
and
hlt
sub
andl
cmp
int
js
xchg
xchg
sti
pop
adc
xor
clc
dec
add
test
cld
add
push
pop
xor
out
xor
xchg
mov
rcr
outsb
mov
adc
jmp
mov
decb
movsb
jl
xchg
arpl
mov
jbe
cmp
sarb
insl
cmp
add
mov
cmp
cmp
dec
imul
xchg
sub
pop
mov
std
push
enter
push
mov
std
jecxz
movsb
andl
xchg
mov
inc
sahf
sahf
sbb
jecxz
js
jge
jae
jo
out
lods
test
xchg
rolb
orl
cs
aas
and
xchg
dec
cmpsb
dec
mov
inc
imul
push
pusha
ds
push
out
mov
aas
aad
loope
lods
sbb
into
push
fcoms
add
sbb
mov
push
mov
xor
test
inc
sbb
inc
cs
pop
mov
dec
and
mov
std
popf
cmp
cwtl
je
xchg
xchg
stc
pop
flds
pop
imul
das
repnz
nop
xor
add
sbb
push
cli
nop
xor
dec
xchg
xor
loop
std
jge
fstpt
clc
call
xor
or
xchg
adc
sti
xchg
inc
xor
sub
jge
sub
jmp
pop
or
leave
loope
loopne
and
sbb
pop
mov
pop
xchg
add
mov
out
cmp
adc
dec
dec
pop
iret
leave
jg
andl
mov
iret
lret
js
cmpsl
divb
add
inc
add
es
mov
leave
icebp
cmc
ror
in
or
xorl
imul
pop
mov
xlat
fstps
fsubrl
call
xchg
inc
pop
outsb
cmpsb
arpl
xorb
js
cs
xor
movsl
mov
fisubl
jno
pop
mov
outsl
sub
gs
mov
in
xchg
popl
into
mov
popf
lcall
and
addr16
call
movsl
test
adc
push
mov
mov
xchg
mov
inc
hlt
adc
dec
loope
jo
and
leave
and
scas
subl
test
pop
lahf
cmpsb
mov
shrb
xor
insl
out
sbb
insl
push
fs
jnp
sbb
cmp
les
pop
mov
mov
add
xor
jno
jmp
dec
push
cmp
pop
insb
cltd
push
pop
mov
fstps
or
xchg
cmpsb
fldcw
shll
jmp
xchg
orb
dec
aam
call
push
negb
ds
cmp
jmp
outsb
lcall
out
add
loopne
push
aaa
hlt
xchg
sahf
popf
stc
cltd
popa
push
sti
sti
push
movsl
stc
push
clc
mov
das
aas
xchg
das
xchg
push
imul
ret
jge
out
stos
jae
out
out
movsb
ja
cmp
xchg
leave
fsubrl
cli
insl
nop
sbb
mov
jp
or
or
and
inc
xor
popa
push
fnstenv
nop
popf
insl
hlt
xor
arpl
pusha
lcall
fdivl
lahf
sbb
icebp
sbb
in
cmp
outsb
bound
push
movsl
popf
or
lcall
mov
push
sbb
inc
inc
fs
mov
push
nop
push
cltd
xor
jo
inc
std
cmp
jb
jno
push
jae
inc
jo
test
push
pop
push
push
jnp
imul
cmc
sar
sti
dec
xor
xchg
and
push
add
stos
xor
inc
in
andb
jmp
or
insl
fidivrs
imull
mov
sbb
fucomip
dec
dec
pop
jecxz
jno
push
shld
and
lret
xchg
mov
sbb
pop
mov
pushf
xchg
cltd
out
daa
push
jmp
scas
imulb
mov
mov
sbb
jo
xchg
pop
xchg
cmpsl
jne
sbb
adc
std
add
shr
call
dec
ja
int
hlt
out
push
out
lcall
lock
stos
popl
jne
test
jl
into
out
incb
rol
mov
cld
out
pushf
ds
sbbl
xor
mov
xchg
inc
xor
into
xor
ret
les
mov
mov
fs
push
mov
xor
pop
xchg
scas
fwait
int3
lods
popa
outsb
mov
sbb
enter
pop
xorl
insl
mov
or
xor
lods
cltd
mov
dec
cli
jno
pop
scas
jb
in
scas
mov
shlb
mov
mov
cmp
imul
pop
pop
lea
xchg
lret
popf
cmpsb
xchg
test
iret
push
fisttps
ficompl
arpl
push
outsb
testl
hlt
fisttps
cmc
lcall
jecxz
mov
add
pop
out
jmp
into
sbb
inc
dec
inc
xchg
push
dec
mov
popf
call
mov
push
lahf
sbb
fnstsw
ds
jg
xorb
bound
and
mov
addr16
fisubs
xchg
xchg
pop
rcr
mov
ffreep
addr16
sub
jno
idivl
nop
mov
jl
mov
imul
popa
stc
iret
adc
outsl
dec
push
pop
or
bnd
addr16
xchg
lcall
cmp
jmp
clc
call
scas
mov
and
pmulhuw
insb
push
bound
push
lret
pop
shll
xor
sti
dec
xchg
jne
inc
and
dec
mov
lret
aad
sub
decb
xchg
stos
int
push
mov
jle
addl
ss
adc
aam
mov
nop
rclb
xchg
mov
mov
mov
popa
fstl
stc
test
std
mov
insb
mov
popa
xchg
call
mov
out
jl
xor
arpl
dec
js
sahf
mov
pop
loop
and
xor
movsl
es
loope
mov
jmp
fcmove
mov
push
cmc
addr16
jns
xor
jae
addr16
pop
cs
cmc
sub
in
movsl
pusha
xchg
pop
fmull
bswap
movsl
stos
and
xor
push
aad
lods
sub
add
xor
out
pop
push
orb
cmp
xor
xchg
xor
inc
into
xor
xorb
sti
pop
les
cltd
loopne
ss
jae
pop
mov
in
out
jle
clc
test
lods
push
mov
in
fs
roll
or
pop
cmp
mov
jecxz
xchg
lcall
mov
int3
int3
scas
in
inc
outsb
mov
mov
movsl
popf
mov
add
add
icebp
inc
inc
dec
in
sub
test
dec
mov
mov
dec
add
lea
xlat
inc
mov
or
mov
xor
js
shr
das
int3
push
sub
sahf
jmp
mov
iret
pushf
pop
les
xchg
cmp
jecxz
sub
mov
in
pop
jnp
es
les
jne
cmp
ds
add
push
sub
push
xor
add
push
leave
jl
out
idivb
jge
fisttpl
mov
and
xchg
in
hlt
add
pop
and
cld
in
imul
sbb
and
push
or
mov
imul
and
lret
or
mov
clc
das
adc
in
xchg
jecxz
add
mov
test
pop
fwait
cli
fmul
aas
adc
subl
cmpsl
xchg
xor
sbb
sub
adc
cmp
lret
xchg
mov
test
push
gs
idiv
mov
hlt
imul
and
sbb
sbb
push
jnp
das
xchg
dec
subl
outsb
stos
test
stos
lods
loopne
jmp
xchg
mov
jl
mov
stc
xchg
in
leave
in
cmpsl
xor
stos
inc
in
daa
or
and
mov
jae
stos
jmp
mov
sarl
sbb
std
mov
sub
cmp
clc
cmp
or
or
rorb
sbbw
adc
pop
popa
movsl
xlat
push
mov
jle
lods
mov
mov
inc
push
push
add
sub
ds
rolb
mov
insl
cmp
jo
lock
cmp
cmpsl
mov
into
pop
test
xchg
mov
pushf
test
xor
mov
cld
push
dec
insb
in
aam
je
lods
aad
mov
mov
mov
push
sahf
cmpsb
jbe
fs
iret
jae
ss
and
out
cmpsb
inc
sub
dec
hlt
dec
out
fcom
fnstsw
ret
or
test
pop
pop
mov
fsubr
hlt
jp
or
in
jg
out
sub
es
push
xchg
insl
add
in
adc
aam
inc
lcall
xchg
xor
push
addr16
test
inc
scas
andl
imul
in
cwtl
inc
mov
lods
or
lahf
add
cs
shr
mov
sub
xlat
xorb
xor
test
pop
push
mov
mov
pop
jns
pop
inc
aam
stos
and
and
jl
cmpsb
jg
les
test
adcb
hlt
mov
fimuls
mov
push
popa
shl
mov
mov
ds
jp,pt
push
fisttpl
fs
arpl
adc
in
or
jp
mov
xor
rcl
loop
lea
mov
jl
jmp
fcmovb
clc
fs
xchg
jmp
pop
insb
jb
std
jecxz
pop
push
daa
scas
lret
sub
cmp
or
nop
dec
pusha
js
inc
aaa
hlt
insl
lock
adc
scas
push
jns
jno
and
stc
lods
int3
sub
fdivr
test
push
std
ja
adc
pop
lds
inc
iret
jns
test
stos
fadds
sub
hlt
insl
jne
mov
inc
outsb
in
jg
call
imul
repnz
mov
xor
and
test
mov
and
es
pop
add
or
repz
mov
sahf
add
cmp
icebp
or
mov
dec
cmp
orl
imul
gs
pop
daa
sbb
dec
add
sti
jbe
push
sub
bound
jg
test
test
jecxz
xor
mov
call
stc
loopne
cs
imul
out
or
mov
cltd
lods
add
ds
add
jns
inc
sbbb
and
roll
dec
loopne
test
mov
mov
ss
push
push
stos
dec
imul
inc
fmuls
cs
push
shr
out
cmp
in
inc
stos
xchg
xor
aas
paddusw
jge
and
inc
test
fcompp
stos
mov
jne
mov
and
scas
test
in
cmpsl
push
loopne
in
lods
pop
dec
rorl
jle
cmp
ficompl
mov
jmp
mov
inc
jl
das
push
dec
shrb
jbe
out
mov
xchg
push
jp
or
lcall
inc
jle
pop
std
in
push
sub
add
cmpsl
pop
xchg
js
adc
mov
scas
or
mov
mov
cmc
sti
xor
jo
push
test
sub
and
stos
loope
test
ret
movsb
pop
xor
jmp
sbb
or
pop
std
icebp
mov
cmp
aad
sar
jnp
push
cmp
sub
xchg
sub
iret
xchg
inc
nop
movl
xlat
lods
and
icebp
xor
dec
stos
imul
jp
mov
movsb
addb
test
cmp
iret
repnz
imul
sbb
push
int3
push
es
sub
sbb
sub
jmp
or
sar
xor
cmp
sub
aas
popf
inc
cltd
cmp
add
mov
loop
ds
cmpsl
rcll
dec
mov
cmpsl
and
pop
xchg
sahf
test
adc
rorl
jmp
popf
add
or
cmp
sub
dec
mov
hlt
shrl
addl
iret
sti
aam
sbb
repnz
je
dec
pop
jge
lret
mov
jmp
or
jp
sti
out
xor
or
jl
les
add
cvtpi2ps
pop
dec
jae
sub
out
jmp
cli
daa
mov
rcl
jge
or
test
push
je
cli
dec
ja
cli
jne
and
loope
xor
imulb
pop
mov
lret
inc
inc
mov
sub
js
sahf
shl
aad
outsb
add
jb
sarb
ret
mov
mov
mov
inc
stos
push
popa
ljmp
jns
push
test
inc
mov
cmp
fistps
and
mov
sub
jbe
and
mov
pop
add
cltd
push
iret
mov
sahf
bound
mov
sbb
jl
cmp
jg
xlat
pop
add
sbb
and
and
jb
push
xor
out
aam
and
insb
ja
mov
mov
mov
popl
sub
inc
mov
mov
and
leave
stc
inc
ret
pop
add
pushf
sbbb
jo
outsb
jns
test
clc
in
mov
cmp
dec
sub
cwtl
jns
imul
and
inc
insl
lret
js
pop
jo
inc
sbb
inc
ror
cwtl
cmpl
xchg
ret
rcrb
sbb
and
test
jp
cmp
enter
sub
xor
out
popa
pop
sbb
jmp
je
xlat
int
adc
cld
shr
and
fistl
dec
sbbb
movsl
notl
gs
repz
xor
sarb
cmpb
out
clc
and
push
mov
std
in
mov
pop
jg
mov
xor
jge
jne
mov
cmpl
testb
inc
mov
jge
inc
scas
sub
or
xchg
clc
iret
mov
add
sahf
pop
out
loope
mov
dec
out
xchg
int
jno
lret
shl
stos
imul
loopne
xor
rorb
push
mov
idivb
dec
shlb
aas
cmp
lret
lcall
pop
jmp
sbbl
push
push
xor
jo
in
pop
cmp
mov
cmp
lods
push
fldt
mov
loope
lahf
or
loopne
repnz
addr16
bnd
add
ret
sub
bound
push
inc
sarb
gs
mov
mov
mov
fnstsw
and
xchg
das
fs
lock
call
test
pop
mov
sub
inc
xchg
add
lcall
rcll
mov
out
testl
mov
movsb
dec
cmc
sub
rcr
jmp
or
cmpsb
xchg
das
sub
ljmp
cmp
sub
adc
int3
mov
dec
xor
jmp
ret
xor
mov
adc
inc
pop
sti
dec
sbb
cmp
sahf
je
cmp
push
pop
jb
mov
dec
adc
imul
mov
out
adc
add
lods
mov
lods
aam
clc
add
popa
stos
dec
aaa
es
push
enter
push
mov
jnp
xor
xlat
xor
js
xchg
add
sti
inc
sub
sarb
incl
inc
or
fdivr
lret
fwait
jb
shlb
clc
pop
xchg
ss
sub
push
dec
mov
loope
insb
in
divb
add
fwait
jge
xor
lods
xor
fstps
add
pop
insb
sub
xor
stos
mov
jne
xlat
add
sub
push
and
lret
ficompl
dec
mov
sbb
mov
into
push
lcall
mov
fsub
in
outsb
or
dec
sub
adc
dec
aad
xchg
lods
stc
pop
mov
jo
icebp
lock
lcall
push
xor
jns
sub
aaa
daa
out
xor
ds
jmp
push
add
shrb
inc
inc
in
xchg
push
add
mov
shr
imul
fbstp
jg
xor
cmpsl
imul
inc
jl
mov
sub
fnstenv
or
in
lods
loop
and
iret
jo
lea
pop
int
les
imul
popw
repnz
xorl
mov
mov
xchg
in
push
ja
out
add
mov
adc
fisubrs
ja
lods
outsl
movb
in
adc
loop
pop
push
cmp
daa
cld
jnp
incb
loopne
ss
jge
and
insl
mov
lcall
cld
cmpsb
sbb
add
outsb
xor
imul
xor
outsl
xor
mov
push
stos
ret
sbb
and
mov
inc
and
inc
mov
fistpll
pop
cld
movsb
and
nop
xchg
inc
pop
cwtl
xorl
mov
adc
addr16
lds
sahf
adc
cld
in
fldcw
and
jns
jg
js
ffree
pop
jl
jo
aam
out
mov
or
pop
and
push
inc
test
loopne
fmull
xor
imul
es
aaa
xchg
push
jne
sub
jnp
pusha
and
mov
test
pop
cli
sub
jnp
imul
jno
add
sahf
hlt
add
adc
lods
mov
subl
fdivp
pop
xor
lea
pop
xchg
push
pop
xor
fwait
mov
lods
sub
fidivrs
cwtl
sbb
js
sub
stos
aam
sbb
mov
ret
mov
add
stos
sbb
dec
das
sbb
and
add
inc
mov
scas
incl
cmp
stc
cmp
jnp
jne
push
bound
dec
add
jg
pop
or
or
cmpsb
jl
mov
aas
xor
lea
movsl
stos
push
aam
mov
cmpsb
sub
mov
xchg
mov
push
shll
das
mov
mov
mov
test
imul
dec
or
jle
xor
add
div
lret
jnp
aad
fstps
xor
jg
push
pop
add
ror
repnz
jl
rcll
jecxz
dec
pop
rcll
fldcw
cmp
negb
push
sbb
sbb
jmp
movsb
xor
in
ss
cld
lds
add
mov
jle
add
mov
mov
imul
rolb
dec
data16
lret
cwtl
call
pusha
pop
lods
std
test
shl
cmpsl
adc
sbb
push
sbb
sbbl
leave
add
dec
popa
lahf
test
add
test
dec
xchg
cltd
adc
cmc
scas
ss
fs
repnz
fwait
lods
sub
icebp
pusha
lret
push
int3
fucomip
int3
inc
cmp
or
fnsave
and
fs
nop
sub
pop
lret
addl
into
popf
fst
scas
mov
mov
orb
mov
xchg
je
cmpb
nop
addb
lret
outsl
movsl
or
aaa
xchg
insb
push
fcmovu
scas
xchg
dec
fadds
xor
xor
lcall
aaa
shr
push
mov
aas
mov
sub
push
xchg
xchg
aam
pop
lret
aad
add
mov
cmp
sti
adc
pop
lahf
jns
scas
push
mov
cli
pop
ret
xor
xor
fists
pop
test
fstl
punpckhwd
add
lret
mov
icebp
xor
loope
data16
cmp
adcl
push
cld
mov
push
ficoml
mov
cmp
insl
inc
dec
jo
in
sbb
mov
dec
clc
fwait
sti
jns
mov
and
dec
adc
xchg
adc
aaa
cmc
push
imul
inc
dec
or
clc
push
xchg
fwait
lods
mov
lahf
test
test
mov
sbb
sub
in
xchg
dec
ljmp
or
ret
arpl
fs
in
inc
xor
cmp
mov
push
int3
orb
movsl
mov
jne
out
leave
mov
cmp
dec
dec
aad
add
jb
testb
cld
mov
mov
mov
mov
cmpsl
xchg
jmp
xchg
or
in
mov
add
shl
scas
test
ret
sub
xchg
mov
add
xchg
add
imul
cwtl
lahf
add
dec
and
pop
push
mov
fdivrs
cs
cmc
hlt
push
sarl
lret
push
push
stos
adc
in
push
dec
in
stos
xor
xchg
les
sahf
ret
popl
mov
movsb
adc
inc
rcrb
cmpsl
xchg
iret
jns
jo
xor
aaa
add
bound
cmpsl
push
je
add
inc
xor
loope
sbb
mov
into
movsl
lea
ja
cltd
nop
push
sub
out
xchg
ss
jnp
sub
mov
imul
lahf
mov
loop
push
unpcklps
push
inc
xchg
enter
jne
mov
outsl
data16
jns
jbe
cmp
adc
jecxz,pt
mov
stc
jno
jmp
insl
mov
cmp
lret
movsb
lahf
push
sbb
popf
dec
pop
imul
rcrl
push
add
sbb
scas
std
shlb
dec
stc
cmc
mov
sbb
test
pop
fisubl
jp
mov
leave
stos
sub
jbe
mov
aaa
dec
mov
imul
and
xor
aas
enter
xchg
inc
dec
inc
pop
insl
inc
fcomi
or
rcrl
adc
mov
fcomps
ds
pop
cli
inc
scas
ret
sbb
ljmp
js
popa
fs
out
and
xor
xor
lahf
jg,pt
and
scas
sbb
jg
pop
icebp
add
out
sbb
aam
lock
or
push
and
mov
dec
cmp
dec
dec
or
fs
push
jl
lret
in
adc
repnz
mov
dec
cwtl
iret
pop
push
stos
bound
mov
mov
lds
fisubrs
dec
ja
xchg
adc
xor
push
repz
jo
mov
push
sarb
inc
adc
sbb
mov
cmp
push
push
dec
jg
jp
pop
hlt
scas
pop
ret
inc
mov
cli
xor
scas
adc
inc
or
push
aaa
hlt
gs
sahf
out
in
push
xchg
add
mov
xchg
fwait
or
loopne
fs
xor
popa
bound
sub
jns
loopne
repz
aaa
jge
mov
mov
sub
pop
jmp
lahf
ljmp
mov
ljmp
fsubrp
and
das
push
cmc
adc
outsb
fst
or
insl
lcall
xchg
jl
loop
pop
pop
xor
popf
or
cwtl
je
adc
jno
subb
and
pop
xlat
fwait
pop
aas
xchg
jno
iret
dec
je
in
mov
popl
sar
ljmp
out
push
ss
jns
test
in
mov
add
jb
fisttpll
dec
push
add
add
and
mov
mov
sbb
inc
push
sbb
fnstcw
sub
int
dec
jnp
cmp
jmp
imul
adc
bound
test
and
mov
jg
nop
xchg
xor
fidivs
cmp
lods
inc
mov
out
lock
sbb
lret
out
mov
pop
add
pop
nop
insb
gs
data16
fdivrl
xor
enter
adc
fmuls
sbb
lcall
or
xor
pop
sbb
pop
cltd
stos
and
cmc
inc
dec
mov
and
jge
push
xchg
jb
xlat
stos
nop
add
out
and
or
sub
mov
or
cmc
mov
mov
xchg
fidivs
xchg
mov
push
sar
fdivs
cli
sub
cmp
sahf
jmp
icebp
dec
and
sbb
mov
test
jno
lods
pop
jl
stc
adc
push
cmp
insb
mov
jne
popl
shrb
mov
jecxz
mov
mov
lds
je
push
push
repnz
call
sti
je
push
mov
xchg
jecxz
gs
lret
movsl
inc
add
mov
adc
aaa
sbb
push
jmp
inc
jg
pop
aas
stos
xor
sbb
icebp
mov
lret
in
repz
cmpsl
xor
into
mov
xchg
jmp
je
sbb
xchg
mov
xor
mov
cmp
ret
xor
fucomi
push
test
ret
call
push
cmpsb
fldz
lahf
aam
mov
inc
sbb
jmp
inc
pushw
sbb
xchg
xor
sbb
mov
fsubs
out
es
cmp
in
enter
fwait
jb
xor
or
loopne
lahf
test
std
mov
in
mov
push
or
lock
jp
mov
push
call
xchg
jg
jmp
fists
jp
lods
test
mov
imull
loope
stc
ret
pop
sub
icebp
fimull
cmpsl
add
push
ret
inc
inc
test
push
insb
hlt
cmp
popa
pop
dec
int
fdivrs
fwait
lods
frstor
int
insb
stos
dec
rclb
cmp
ds
or
xor
ret
mov
or
dec
jle
dec
xchg
aam
inc
mov
cmp
xchg
inc
xor
pop
jb
or
inc
mov
loopne
jb
enter
popf
add
cltd
mov
imul
xchg
or
push
aam
jo
xchg
cmpsl
fwait
lea
arpl
adc
sbb
test
movsb
bound
outsb
sbb
out
pop
mov
test
or
mov
je
jp
mov
insb
jno
shr
dec
lcall
cmp
stos
in
inc
push
add
neg
pop
push
xchg
nop
cld
shll
mov
out
or
jb
xchg
add
les
lahf
outsl
mov
insl
out
xor
cmp
sbb
adc
jnp
mov
mov
dec
mov
out
push
orb
pop
jae
clc
mov
repnz
std
dec
test
cmpsb
dec
rcrb
ss
sbb
push
dec
dec
popl
je
and
mov
pop
cli
sti
lea
sub
dec
rclb
push
popf
mov
and
inc
dec
add
insb
inc
lret
cmp
inc
inc
jmp
jle
out
cs
inc
hlt
jle
rol
ljmp
jno
loop
sahf
ror
jno
and
ja
dec
sbb
bound
lcall
js
fidivrl
test
and
jg
insb
bound
leave
pop
mov
ret
xchg
fmull
mov
push
hlt
adc
jne
jno
xchg
stos
cmpsl
mov
lods
add
mov
xlat
lret
pop
push
dec
and
inc
popa
sub
sub
jo
jnp
ds
cld
imul
cmpsb
sahf
inc
mov
and
outsb
cmp
mov
fs
add
inc
in
and
xor
push
sub
das
addr16
sahf
cmp
mov
inc
movl
pop
outsl
out
iret
xlat
je
enter
sti
fs
das
xor
aas
mov
mov
mov
mov
int
xchg
ja
cmp
inc
mov
push
adc
icebp
and
pusha
xor
and
pop
inc
inc
mov
lret
rorl
mov
fildl
xchg
mov
adc
and
fmul
inc
arpl
pop
pop
vpsadbw
fimull
and
repz
pushf
push
ljmp
repnz
roll
dec
out
mov
addr16
shlb
jnp
lods
sub
cmp
sub
rclb
pop
aas
cmpsl
into
adc
jmp
out
and
pop
lods
jp
mov
sub
scas
int
inc
or
call
adc
int3
stos
push
push
shl
push
les
inc
pop
lock
xlat
cmc
shlb
and
push
xor
mov
xor
dec
push
jmp
sub
mov
sbb
push
push
orb
int3
int
in
out
arpl
in
lds
ficompl
add
sub
bound
shll
inc
mov
xchg
aam
jb
xor
lret
mov
imul
pop
scas
out
and
cmpl
aam
inc
out
or
and
sahf
jo
push
cli
out
cwtl
xor
and
pusha
dec
int
ficoms
lcall
jae
inc
outsb
sbb
lds
imull
sbb
js
les
mov
and
sub
mov
mov
or
insl
mov
pop
insb
int
add
ret
xor
aas
jp
fildl
outsb
and
xor
jecxz
lahf
in
add
mov
test
xchg
or
dec
sub
outsb
negl
mov
rorl
into
stos
cli
push
clc
daa
daa
mov
andb
adc
and
lahf
jp
scas
or
maskmovq
notl
xchg
mov
les
fdivl
inc
jo
lods
push
int
inc
cltd
in
jb
push
sub
lock
cmp
js
mov
mov
fistpl
jmp
mov
fidivrl
pushf
sub
sbb
shr
add
lret
out
jmp
shl
sbb
dec
ljmp
dec
dec
fs
xor
xor
jmp
xor
loope
mov
xchg
arpl
pop
jl
in
mov
popa
fisubrl
mov
stos
pop
pop
xchg
pop
adc
aaa
sbb
sahf
fimuls
jb
bswap
mov
js
roll
adcl
mov
xchg
sahf
lret
cmp
jl
lret
fimull
pop
imul
lahf
stos
xchg
fcoms
xor
pop
fbld
jmp
cmp
aaa
pushf
add
aam
lods
sbb
push
jle
outsl
sub
mov
push
rol
adc
dec
cmp
mov
dec
movsb
jg
jo
lea
cmp
xlat
push
jl
cmp
gs
roll
into
pextrw
es
lret
stos
aas
fdiv
les
icebp
pop
dec
bswap
push
inc
mov
inc
xchg
cmp
sbb
das
enter
pushl
pop
mov
mov
push
push
in
jg
stos
mov
jno
sub
cmpsl
loop
imull
dec
lret
jmp
fmul
fwait
enter
jae
jne
mov
mov
repnz
xor
popa
pushf
push
int3
stos
gs
insb
mov
pop
push
push
pusha
xorl
jge
cmp
aam
and
and
cmp
mov
or
and
cmp
out
into
jecxz
add
sub
push
sahf
sahf
jg
sbb
fldcw
mov
pusha
idiv
jge
xchg
xchg
pop
rorb
sbb
cltd
mov
sbb
ljmp
or
enter
loope
test
adc
rcrb
push
filds
rorl
sub
inc
push
xchg
stos
dec
insl
mov
pop
repz
push
aas
jb
pop
sbb
ss
mov
mov
cli
mov
lret
cli
jne
and
xchg
testl
lock
rcrl
dec
daa
mov
inc
inc
sbb
lret
mov
mov
mov
dec
int
repz
repz
daa
push
mov
bound
js
pop
xor
mov
insb
pop
das
xchg
cmpsl
mov
ret
cld
outsl
jnp
xchg
mov
sbb
cmpsb
stc
xchg
ss
adc
jp
es
xor
push
or
xchg
xchg
repnz
push
push
or
aad
lods
imul
sub
pop
mov
sbb
sahf
mov
inc
mov
outsb
or
add
iret
imul
loopne
mov
jecxz
sahf
ljmp
jmp
imul
std
sti
xchg
sbb
jae
dec
ficoml
fisubl
call
xchg
dec
insb
fcomp
push
cmp
sub
imul
lret
sbb
sub
pusha
enter
xlat
test
xchg
lock
lret
pusha
jmp
mov
shll
insl
roll
pop
leave
int
cmp
xor
mov
aas
push
inc
fwait
inc
js
out
test
xor
jg
arpl
sarl
data16
jo
mov
ja
jae
aad
int
rorb
inc
mov
or
das
bound
ja
fimull
dec
pop
adc
lock
and
mov
fwait
sub
add
cmp
mov
pop
xchg
fs
push
sbb
fwait
jmp
or
xor
lock
in
aas
sub
adc
icebp
adc
jo
movsl
jmp
loope
mov
mov
stos
cmp
and
loope
xor
cmpsl
std
pop
lea
push
flds
aam
inc
lahf
ljmp
stos
mov
fldl
insl
sbb
inc
xlat
fisttpll
push
add
in
out
inc
outsb
mov
pop
out
in
adc
addl
adc
ds
mov
mov
adc
dec
nop
mov
mov
aas
adc
and
andl
mov
push
adc
mov
or
xor
jns
lahf
cld
hlt
imul
dec
stc
scas
mov
into
pop
push
adc
push
push
xchg
xchg
xor
or
outsb
addb
pop
les
mov
imul
push
mov
mov
bnd
inc
orb
inc
mov
inc
pop
lock
int3
mov
outsb
sub
xor
out
aad
cmp
pop
xor
mov
pop
imul
cs
mov
xchg
cld
or
sub
fucompp
xchg
popf
mov
mov
mov
sub
rol
loopne
rcl
inc
push
jge
add
leave
popa
icebp
fdivs
lahf
pop
call
pop
out
dec
bnd
mov
in
dec
cli
fmul
ja
outsl
arpl
in
test
in
or
jnp
mov
adc
ret
adc
je
pushf
aad
cld
ret
popf
mov
mov
movsl
xchg
jmp
push
dec
mov
and
mov
out
daa
pop
cmp
lods
xchg
in
int3
fsts
divb
adc
pusha
cwtl
scas
jmp
sbb
jno
mov
dec
lods
popf
push
xor
cltd
push
out
jge
lds
xchg
xchg
std
dec
fdivl
shrb
int3
inc
add
push
mov
xor
out
sbb
fwait
and
sbb
xchg
xchg
shrb
or
loopne
cmp
lock
ret
rclb
push
xchg
cmpsl
outsl
int3
stos
xor
ficoml
pop
std
arpl
mov
push
scas
movsl
add
sub
or
jno
sti
aam
xchg
inc
jp
xchg
cmp
in
jae
mov
xchg
faddl
mov
lock
mov
add
push
lcall
int3
push
inc
icebp
push
lods
and
in
mov
leave
sbb
or
lcall
call
xor
inc
cmpsl
xchg
xchg
aaa
scas
xchg
dec
push
add
pop
rorl
andl
sbb
inc
pop
lods
or
cmp
scas
mov
jle
xor
jle
es
out
pop
mov
sub
nop
lds
inc
mov
ds
pop
insb
jg
and
dec
fstpl
mov
adc
rolb
sarb
ss
adc
pop
pop
ljmp
call
stos
scas
mov
lods
cli
push
lds
lods
push
outsl
data16
ret
cmpsb
fs
enter
xchg
dec
sbb
or
jg
sbbb
mov
orb
or
and
add
mov
cmp
mov
nop
les
mov
shl
pusha
xor
jb
imul
loop
js
xor
lods
loopne
cld
rcrb
mov
pop
and
jle
xchg
mov
and
fwait
mov
jns
out
bound
mov
xor
inc
sbbb
les
cmpsl
add
fs
sbb
inc
sbb
mov
arpl
rcl
inc
or
sti
sarb
adc
sub
sahf
pop
sahf
idiv
mov
fdivrs
pushl
mov
add
pusha
xor
jecxz
inc
adc
add
lods
and
cmovb
mov
adc
lock
stc
iret
sbb
popa
xor
mov
popa
xor
ds
xor
stc
mov
add
push
into
xchg
addl
push
and
mov
sub
shr
into
pop
popf
stos
dec
push
lahf
or
test
rol
iret
les
xchg
imul
ds
push
rol
in
xchg
addb
rorl
cmpsl
popf
jp
shrb
outsb
cwtl
scas
fstp
dec
xchg
scas
pushf
sbb
sbb
pop
insb
pusha
lock
mov
test
push
out
push
xor
fsubs
mov
add
loopne
sub
mov
jecxz
lret
sbb
sbb
push
enter
pop
cmp
arpl
or
add
push
mov
inc
xlat
push
ret
pusha
fdivrl
pushf
rclb
jg
outsl
push
cmp
dec
fiadds
or
fadds
and
dec
sbb
movb
sub
pop
repz
lret
and
pop
scas
stos
xchg
insl
inc
xor
ret
mov
or
in
push
negl
shll
adc
ret
pop
jle
jp
mov
mov
jns
xor
push
pop
jmp
outsl
mov
jns
mov
push
sti
dec
das
sub
sub
idiv
mov
inc
dec
arpl
ret
inc
je
inc
sub
push
jg
jo
jne
fidivrs
mov
xchg
fwait
pop
scas
in
dec
es
push
adc
jbe
std
pop
sub
xchg
adc
push
push
xor
and
sti
add
cmp
sub
cld
xchg
xor
das
aam
into
push
or
jbe
aad
xor
cmp
push
scas
sbb
mov
adc
xor
pushl
mov
outsb
cmp
mov
and
sarl
enter
and
push
idivl
test
test
insl
cmp
add
adc
jo
pop
loope
in
inc
shrb
gs
fistl
dec
cmp
mov
fs
leave
ljmp
aam
xchg
and
insl
jecxz
sub
add
out
int3
das
push
add
sub
aad
mov
sbb
dec
ror
cmp
push
jae
gs
or
sub
sub
xor
xor
fs
inc
je
mov
xlat
sbb
cmp
lcall
ljmp
pop
push
les
outsb
std
lods
loopne
mov
loop
imul
stc
sbb
bound
sub
aad
bound
jo
push
mov
and
addr16
and
pop
mov
mov
inc
cmpsb
pop
push
dec
aas
mov
xlat
shrl
dec
push
jmp
xchg
loop
and
in
add
in
pop
mov
xor
mov
cmc
in
push
fnsave
add
adc
jae
mov
inc
mov
insb
or
repnz
mov
arpl
fnstcw
pop
jg
test
sbb
mov
mov
sbbb
or
mov
test
jbe
mov
cmp
rcl
adc
std
loope
add
sub
iret
jbe
push
rorb
jecxz
mov
scas
sub
mov
outsb
fsts
dec
cmp
xlat
fwait
jmp
js
ljmp
or
fs
cwtl
add
leave
outsl
adc
and
mov
cmp
mov
loopne
mov
ljmp
ljmp
insl
jle
xor
outsl
push
mov
bnd
aaa
cmp
lcall
nop
mov
les
loope
call
hlt
stos
mov
xchg
adc
jg
jne
adc
jecxz
out
mov
int3
pop
push
and
mov
and
inc
xchg
int3
cs
loop
mov
cmp
mov
inc
cmpsl
into
in
inc
mov
add
scas
and
push
and
xor
jb
sub
lret
pop
push
je
pop
test
jle
test
mov
jo
sub
mov
adc
or
dec
aaa
mov
mov
iret
pop
js
push
faddl
mov
sbb
fildll
sbb
pop
mov
mov
std
fisubs
addb
paddd
aam
push
call
sub
fwait
aad
xor
add
cmp
sbb
test
and
icebp
or
subl
popf
prefetch
dec
enter
pop
pop
ljmp
xor
addr16
xchg
shlb
sbb
jae
insl
lods
stc
and
push
jle
mov
mov
mov
add
rorb
dec
xchg
in
icebp
aad
or
pop
mov
add
mov
pusha
jmp
push
xchg
cs
push
in
rcrl
fistl
sbb
cmp
pop
push
push
push
sub
subb
call
stc
test
enter
arpl
pop
jbe
or
pop
andb
movsb
aam
xchg
push
clc
jp
or
data16
rcl
fstl
fs
push
dec
inc
cmpsb
mov
pop
push
jno
ljmp
jge
bound
xchg
stc
xchg
xchg
outsb
xor
cmp
or
mov
mov
das
scas
in
cmpsl
jnp
cmc
jnp
mov
add
and
pop
test
mov
pop
cmp
push
outsb
loopne
loopne
push
les
mov
mov
insb
lret
xor
movsl
fnstsw
insb
enter
out
adc
dec
test
add
dec
or
pop
les
je
sbb
cmp
mov
fstpt
shll
cwtl
sub
stos
adc
cli
mov
int
cltd
insl
sbb
int3
jle
aas
outsb
fcmovnb
or
push
adc
faddp
lods
push
rolb
dec
inc
roll
jns
push
icebp
out
and
into
jo
and
pusha
push
nop
outsl
and
adc
pusha
fs
mov
movsl
imul
or
mov
push
stos
xchg
add
cvtps2pi
lret
push
cmp
mov
jns
repz
dec
mov
push
and
cli
add
test
fistpl
or
cmp
inc
xchg
cmp
cs
or
xor
rcrb
pop
repz
out
cmpsl
les
in
movsl
stos
cld
loop
rcrb
sub
add
in
mov
cvtpi2ps
sub
adc
xor
hlt
aas
mov
xchg
js
scas
addr16
in
cld
cs
scas
mov
push
leave
or
dec
jo
sub
inc
or
dec
mov
out
add
negl
cli
mov
lds
mov
cmp
test
shrb
push
cmc
or
jg
and
inc
je
pop
ss
data16
xor
and
push
aas
pop
mov
xor
pop
insb
sbbb
aad
ret
sub
adc
je
orb
pop
jge
or
mov
mov
adc
out
into
jno
test
in
lcall
push
inc
shll
mov
adc
scas
int3
xchg
pop
sahf
sbb
scas
fwait
les
mov
lcall
and
ds
push
adc
xchg
xchg
nop
scas
mov
adc
popf
nop
push
in
dec
inc
enter
sar
xor
add
adc
popa
dec
loope
inc
jnp
or
adc
mov
xor
mov
inc
fwait
or
xchg
lock
fwait
xchg
xor
xchg
sbb
es
cmp
pop
fwait
jp
icebp
adc
pusha
push
sub
popl
dec
mov
xor
fcmovnb
mov
jns
pusha
adc
dec
jae
mov
mov
jmp
mov
imul
inc
and
dec
dec
inc
jle
shrl
push
addr16
jne
in
cmpsb
inc
fsubrl
test
rolb
sub
scas
xor
dec
mov
rolb
sub
xchg
cvtps2pd
cmp
pop
push
.byte
scas
