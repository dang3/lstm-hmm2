mov
jmp
test
aas
ficomps
pop
add
call
lcall
test
rcll
mov
add
add
mov
mov
dec
iret
and
add
xor
ret
ret
xor
mov
in
pusha
pop
loopne
std
pop
fstl
std
pop
inc
push
sbb
fstpl
inc
std
shl
and
dec
mov
sub
add
add
repnz
jecxz
arpl
sti
dec
inc
shll
dec
cmp
shl
leave
inc
push
push
rcr
pop
fstpl
fstl
lea
mov
insb
xor
dec
adcl
loopne
xor
jae
jnp
sti
imul
pop
and
jecxz
fs
and
pushl
inc
xor
hlt
hlt
orl
sbb
pusha
xor
xor
hlt
test
aad
sub
jbe
jnp
inc
cmp
sbb
loopne
dec
jae
dec
hlt
int
xor
inc
add
xor
or
add
in
jnp
shl
sbb
push
hlt
add
in
push
gs
sti
push
insl
push
aaa
push
cmp
insl
in
xor
hlt
inc
inc
xor
xor
mov
fnstsw
sub
ja
les
sub
lock
imul
inc
addl
and
insl
stc
mov
and
punpckhwd
xchg
out
mov
push
xor
and
jo
xor
loopne
sahf
push
inc
sub
push
outsb
scas
xchg
imul
mov
add
leave
xor
and
jmp
div
jl
movups
xor
jecxz
add
pop
js
sub
popa
loop
mov
or
or
mov
inc
or
inc
clc
mov
mov
cli
hlt
dec
inc
inc
sub
hlt
sub
push
mov
pop
pop
cmp
fwait
test
or
out
into
mov
push
and
imul
xchg
xor
xor
std
ret
popf
movsb
xchg
push
sub
pushf
xor
or
mov
adc
rol
or
dec
xchg
hlt
and
dec
daa
xor
rcrb
sti
xchg
insb
loopne
arpl
and
loopne
es
popa
popf
clc
and
xor
mov
mov
std
pusha
adc
rorb
insl
loopne
push
imul
js
and
dec
leave
lret
fimuls
and
jbe
jp
ret
sbb
pusha
hlt
dec
adc
mov
xchg
mov
sbb
cld
fisubrs
mov
and
adc
xor
dec
inc
in
outsb
loope
xor
sub
pushf
and
sbb
out
imulb
xchg
add
jl
xlat
push
add
pop
test
or
roll
push
jne
sarb
insl
jg
imul
mov
out
xor
dec
jns
sub
fcomps
into
xchg
or
fcomi
pop
insb
pop
mov
fnsave
repz
fsts
or
data16
loope
mov
cmp
jbe
mov
jnp
xor
into
inc
xor
mov
aaa
mov
cmp
and
mov
loopne
decl
cmp
in
mov
shlb
jmp
xchg
inc
jae
lea
mov
inc
push
xor
popf
inc
and
dec
jb
mov
sub
jmp
ret
sub
xor
and
inc
or
cmp
push
js
inc
add
mov
jb
sbb
mov
ret
fstpt
fwait
lcall
stos
dec
and
sarb
int
mov
test
cmp
jle
cld
aaa
shlb
stos
mov
out
pop
mov
fdivl
inc
inc
sub
loopne
pop
hlt
cwtl
xor
xorl
pop
mov
sbb
xchg
add
mov
push
imul
xchg
mov
je
test
pop
stos
mov
loopne
jg
andl
jmp
xor
adc
xor
loopne
jp
stos
add
dec
lahf
loopne
inc
inc
out
nop
add
dec
arpl
adc
pop
inc
data16
pop
loope
pusha
jns
dec
sbb
mov
cmp
imul
push
enter
dec
js
dec
or
push
sbb
xor
jg
popa
movl
std
mov
adc
and
int3
jne
iret
sahf
sub
rorb
mov
xor
ds
cmpsl
mov
fcoml
cmp
lds
out
lods
cmc
inc
icebp
cmp
nop
mov
out
jp
lea
mov
sbb
mov
rclb
loop
shll
fcmovne
xor
mov
adc
out
or
lds
jae
push
lret
pop
ficoml
add
inc
mov
or
pop
cmpl
pop
inc
jnp
ffree
mov
pushf
arpl
lahf
or
out
out
mov
shlb
xchg
pop
cmp
je
adc
xlat
sub
enter
or
push
pop
imul
xchg
addr16
notl
sbb
fstpl
sbb
or
add
ficoml
fisubrl
mov
scas
mov
dec
cmpsb
xor
ds
mov
push
imul
jl
mov
mov
fistpll
jl
sub
in
or
xlat
lahf
mov
lods
stos
ret
adc
or
sti
and
cli
add
neg
mov
int3
aam
inc
inc
push
fsts
adc
xor
xor
add
inc
lods
or
addr16
pushf
ret
inc
mov
in
pop
ret
sti
or
repz
data16
pop
imul
cmp
xor
xor
inc
je
jecxz
and
mov
xor
int
mov
adc
inc
outsl
or
repz
add
mov
pop
jo
mov
and
pop
stos
stos
fwait
imul
or
xlat
out
cmp
ret
cmp
inc
pop
push
dec
test
sbb
sub
sbbl
int3
rcrl
and
xor
fwait
pop
inc
lock
or
and
inc
push
push
arpl
push
insl
push
jae
fsubl
in
sbb
jecxz
pusha
jnp
aad
inc
cmpsb
or
pushf
and
les
int3
popa
sbb
lahf
pop
and
xchg
push
arpl
and
std
fiadds
and
ret
data16
pop
and
and
adc
add
add
into
xor
add
adc
scas
mov
pushf
add
and
jp
mov
jne
mov
je
mov
cmpsb
fbld
aam
sub
inc
push
fldl
add
jae
sahf
ffree
outsb
in
in
mov
adc
xor
out
pop
mov
adc
fidivl
testb
push
cld
arpl
pop
adc
rcr
pop
sbb
jecxz
cmp
xchg
jecxz
ret
adc
xchg
out
mov
push
push
and
fwait
leave
shlb
mov
sbb
in
lods
fs
rol
or
dec
rcl
icebp
hlt
cs
es
add
sub
and
test
inc
dec
fs
sti
test
push
and
cmpsb
test
xlat
insb
pusha
sub
mov
or
lcall
sub
adc
les
scas
mov
xor
mov
cmp
push
push
and
orl
mov
loopne
mov
dec
lds
xor
or
xor
sub
lods
and
pop
pop
push
loopne
sbb
aas
je,pn
xchg
in
inc
adc
inc
imul
fs
push
orb
lds
loop
sbb
pop
je
loopne
fimull
xchg
shrl
xor
loopne
mov
sbb
mov
xchg
imul
das
and
hlt
mov
fiaddl
bound
stos
shlb
xchg
and
les
cmc
loope
cltd
sarb
xorl
clc
fimull
dec
jge
cmpsl
xchg
adc
lea
mov
xor
cmpsl
inc
das
adc
fucom
lods
jnp
mov
cltd
movsb
add
inc
and
outsb
mov
and
add
push
mov
or
inc
jp
ret
mov
popa
daa
pop
iret
sbb
sahf
lock
cltd
adc
lods
icebp
call
add
scas
loope
cltd
dec
mov
sahf
adc
pop
mov
imul
cmp
lods
sbb
dec
or
push
outsb
jmp
ja
xor
cmp
mov
mov
or
add
dec
xchg
out
inc
cld
rol
out
sub
jo
sbb
cmp
bswap
mov
in
inc
adc
dec
mov
mov
aad
xor
scas
or
imul
sub
hlt
dec
xrelease
xchg
add
mov
in
mov
hlt
insb
mov
dec
add
xorb
xchg
enter
xchg
rorl
sub
ret
and
stos
or
pop
pop
fs
or
push
xor
fnstcw
mov
ret
pop
mov
movl
sub
sub
in
lea
ret
fists
rcrb
inc
test
les
push
add
cwtl
sahf
out
mov
cmp
xor
lcall
addr16
in
jns
mov
outsl
push
add
mov
andl
lock
les
les
mov
add
xchg
lcall
mov
xchg
ficoml
cmp
mov
bound
adc
xchg
jo
dec
push
pusha
repz
jno
pop
fildl
arpl
and
jmp
pusha
jae
lcall
xchg
pusha
std
sti
and
xor
pop
mov
call
pop
jl
outsb
outsb
ret
les
rorl
sbb
nop
test
mull
movsl
jle
scas
mov
popa
in
iret
insl
xchg
lea
xor
lock
sub
andb
test
jno
and
ss
dec
popf
lods
fwait
dec
xor
sahf
out
aam
or
jno
call
arpl
movsl
xchg
xor
pop
mov
sbb
lcall
push
fucom
dec
loopne
lcall
es
test
adc
mov
push
pop
cmc
cli
add
cmp
push
mov
and
dec
sub
mov
or
das
and
popa
and
jecxz
mov
ss
ret
addr16
hlt
pop
stc
inc
xlat
fprem
pop
or
or
jl
insb
sbbb
push
xor
push
fwait
add
les
lods
ja
negl
fbstp
loopne
leave
xchg
loope
xor
rcll
cmp
and
mov
loope
inc
mov
inc
popa
fdivrp
inc
mov
mov
in
add
inc
out
and
xchg
pop
xchg
andl
loopne
cmp
dec
or
imul
cmpb
jmp
outsb
pop
inc
xorl
aaa
sbb
insl
push
push
pop
addb
cmp
loopne
gs
push
fiaddl
push
inc
cmpsl
in
inc
shlb
test
pop
loopne
push
cmp
gs
fimull
jae
pop
add
ds
lret
and
in
dec
dec
dec
add
dec
or
loopne
xor
cld
dec
add
mov
ficoms
daa
shr
xor
hlt
jecxz
sub
xor
sbb
imul
out
xor
fnstsw
push
into
jl
rorb
xchg
imul
stc
pop
cmp
pop
or
sub
or
ret
jg
outsl
stos
fs
es
inc
mov
je
outsb
iret
jge
cmp
inc
inc
or
sub
and
adc
jbe
call
cmp
sarb
into
imul
jo
sbb
das
mov
mov
dec
pop
hlt
cmp
pushl
mov
stos
and
or
ja
sti
xor
and
push
fsubr
fisttps
dec
xor
pop
je
loop
sbb
jp
popa
jo
sub
add
sub
inc
les
and
inc
inc
mov
shrl
jecxz
arpl
and
and
inc
push
loope
ret
mov
xchg
cmp
imul
sbbl
movsb
pop
stos
mov
pop
divl
mov
es
inc
in
aaa
ret
call
or
cmp
jnp
mov
or
sub
rcrl
or
xchg
mov
push
dec
inc
rcrl
push
clc
lcall
cmpsl
int
jmp
sub
mov
inc
into
xchg
jo
fcmovbe
rcrl
in
cmp
xor
ficoms
inc
add
cmp
pop
cli
cltd
pop
xor
mov
scas
mov
ret
sarl
mov
out
pop
mov
movsb
popa
and
repz
lahf
xor
mov
cmpl
push
enter
push
ljmp
mov
adc
mov
and
arpl
adc
cmp
and
sub
add
rorb
or
icebp
add
and
inc
in
xor
test
push
or
clc
pop
jnp
imul
js
cmc
sub
daa
xchg
lea
movsb
push
add
fistl
mov
lods
xor
test
add
out
int3
jl
outsb
cmp
fistpll
aaa
daa
jno
in
mov
aad
mov
add
mov
push
dec
movl
adc
push
adc
and
xlat
sarl
test
test
lret
cwtl
nop
das
rolb
fs
ret
jo
in
inc
push
inc
dec
pop
rorl
pop
inc
adc
rcl
push
in
pop
or
int
mov
aam
rorb
iret
hlt
jnp
ret
repz
movsl
jae
and
mov
mov
je
orl
push
repz
add
movsl
rol
ja
sbb
hlt
pop
push
pusha
je
data16
idiv
or
push
fdivs
fldt
jmp
xor
push
sbbl
lret
inc
mov
fwait
out
int
fnstsw
cmp
sahf
jnp
sti
mov
je
sub
les
iret
pop
stos
icebp
push
xor
adc
es
add
insl
mov
jns
mov
icebp
pop
add
mov
lds
add
and
shlw
mov
lock
or
out
fldenv
or
sub
inc
jle
sar
sub
mov
leave
jecxz
xor
ret
addr16
in
xlat
inc
loope
cwtl
mov
adc
mov
sbb
pop
jne
ss
mov
loopne
add
jae
dec
and
fisttpl
or
inc
mov
cmpsb
xchg
call
xor
add
push
mov
jno
fadds
ret
sbb
jmp
mov
and
ds
int
jns
or
lcall
stos
call
mov
or
adc
cwtl
or
es
xor
nop
fildll
test
add
imul
inc
aas
pop
push
in
hlt
popf
sti
cltd
rcrl
mov
imul
lods
push
fisttpll
inc
or
mov
sbb
mov
inc
cmp
jg
or
mov
mov
les
add
rorl
or
jo
sub
imul
movsl
sti
jg
add
ret
inc
sti
add
sti
inc
lds
adc
jl
aas
jo
cs
cmp
hlt
std
sbb
loope
movsb
scas
outsl
stos
imul
add
push
lcall
xchg
sahf
lea
lret
and
and
xchg
pop
push
xchg
test
inc
adc
sub
mov
movsl
mov
and
inc
adc
add
test
pop
sar
push
dec
inc
or
aam
cmp
in
mov
data16
sub
cmp
lea
pushf
inc
add
int3
vpavgb
data16
icebp
push
rclb
pop
xor
mov
cmp
aaa
test
mov
and
in
notb
or
xchg
dec
inc
inc
jnp
sbb
aad
mov
sub
inc
movsb
push
sbb
sub
push
add
es
xor
pop
dec
push
adc
fstl
xchg
pop
push
aam
out
jb
pop
fsubrs
leave
fst
and
repz
ret
fstpt
repnz
loopne
inc
mov
mov
lret
sbb
jmp
fnstsw
ss
jne
jnp
daa
fdivl
adc
dec
into
aaa
jecxz
clc
xor
and
das
push
imulb
aaa
lcall
out
imul
adc
mov
adc
int
push
imul
mov
mov
inc
adc
mov
dec
fidivl
cmp
bsf
sub
add
dec
scas
inc
lret
into
dec
insl
cmp
sub
sub
push
inc
inc
add
adc
stos
sbb
loop
stos
out
jns
fninit
fisubrs
push
pop
clc
lods
rcrl
dec
inc
in
mov
fimuls
dec
in
cs
jnp
inc
push
mov
movsl
sub
xchg
cwtl
insl
outsl
inc
out
or
dec
dec
je
call
arpl
push
cld
sahf
inc
push
clc
lods
push
push
jge
dec
out
loope
hlt
add
jmp
in
xchg
fsubrl
adc
xchg
fwait
lcall
cli
lret
fdivrs
cs
popa
xor
inc
and
in
sub
fsubrs
loop
stos
jecxz
add
insl
std
int
addr16
test
push
loopne
dec
or
je
add
int3
inc
sub
and
enter
jp
and
lret
mov
lret
xor
lret
je
xchg
rcr
cmc
pop
loopne
in
aas
jge
or
add
xchg
lods
inc
lahf
jae
iret
icebp
add
je
fs
add
xor
fsub
test
flds
sbb
jecxz
enter
loopne
dec
push
jg
repz
jg
arpl
lcall
scas
or
in
imul
push
pop
aam
and
in
mov
cltd
mov
pop
ljmp
addr16
cmp
mov
imul
pop
movsl
mov
inc
rorl
movsl
jbe
fidivl
xor
rol
xchg
xorl
sub
rol
mov
imul
pop
int
fisubrl
mov
lcall
xor
aad
enter
add
divl
fistl
insl
fidivl
mov
aaa
adc
jg
ljmp
cmp
or
or
nop
dec
dec
dec
outsl
push
leave
shl
dec
or
loope
clc
mov
insl
insb
out
push
out
push
imul
push
cmp
movsb
adc
les
jnp
pop
xchg
lds
mov
pushf
sahf
mov
pop
xor
push
dec
ss
cmpsb
int
push
cmpsl
sbb
or
into
mov
ret
and
inc
push
movsb
int
fstpt
dec
ret
xchg
out
jmp
shl
add
add
push
and
add
movsl
xchg
fucomi
jmp
or
mov
xchg
xor
mov
in
pop
out
call
mov
pop
push
cmp
int3
inc
sbb
into
mov
xchg
cmpsb
inc
jb
insb
popa
adc
lahf
and
lods
sbb
mov
nop
pop
negl
into
push
mov
mov
orb
add
or
jne
notl
mov
popf
sbb
sub
or
call
push
mov
fmul
sarl
or
pop
add
jb
jp
inc
ds
mov
rorl
jecxz
xchg
lods
push
lea
loope
pop
fneni(8087
adc
xor
sub
add
dec
xor
sub
insb
fisttpl
xor
faddl
outsb
addl
rol
insl
xlat
lret
jle
xor
fwait
scas
inc
mov
je
xchg
fcmove
arpl
aas
add
pop
jnp
testl
in
aad
jmp
add
add
shlb
fcmovnbe
add
mov
jbe
or
or
lret
and
add
ljmp
shll
mov
xor
pop
add
daa
cld
mov
insl
or
inc
jp
dec
fs
loopne
adc
loopne
add
ret
divb
add
dec
mov
mov
push
xor
inc
dec
push
jge
inc
xchg
outsb
loopne
jp
pop
cmp
sbb
int
mov
inc
fwait
outsl
ljmp
bound
dec
jge
repz
or
scas
push
ljmp
in
arpl
dec
mov
orl
inc
or
dec
bound
mov
and
fcomi
inc
add
push
mov
dec
rcr
inc
or
inc
fnstsw
cld
cmp
jl
pop
sarl
pop
jg
push
cli
inc
test
popf
dec
rcll
rcrl
inc
add
insl
xor
sbb
je
popa
mov
dec
or
outsb
sbb
aaa
hlt
add
js
outsb
pop
fdivrs
dec
jmp
cmp
les
dec
push
mov
sbb
or
gs
rcrb
scas
jbe
divb
aam
in
sub
out
xchg
rolb
mov
lcall
mov
jo
push
xchg
mov
pusha
push
outsb
in
je
rol
aaa
inc
jmp
arpl
lcall
roll
imul
jns
push
or
mov
repz
aaa
pop
mov
jecxz
inc
mov
les
cs
test
inc
inc
ss
adc
mov
outsb
fwait
mov
cltd
fstl
stos
cltd
xor
pop
add
jmp
push
je
mov
sahf
xor
lahf
std
pop
test
sbb
pop
std
test
cmp
sbb
mov
out
mov
cmp
daa
jns
int
mov
mov
lds
or
aaa
enter
inc
push
dec
hlt
gs
aaa
inc
fcmovnb
gs
mov
loopne
ss
push
pushf
xchg
into
shl
xchg
ret
mov
rolb
sarb
mov
idivb
fnstcw
inc
adcl
cmp
and
icebp
inc
imull
fucom
stos
jno
nop
adc
je
fistl
sub
jle
insl
mov
test
out
mov
scas
fisubrs
add
xor
bnd
mov
push
cmp
cld
adc
pop
mov
cs
les
sbb
ja
and
xchg
shrb
push
movl
mov
aas
lods
fcoml
rcl
mov
and
push
fs
rol
int3
xor
or
or
test
cmp
sbb
in
mov
xchg
shll
add
mov
cmp
scas
fucomp
shlb
je
xor
mov
movsl
adc
notl
popa
out
aaa
adc
mov
arpl
popf
adcb
cmpsl
adc
sbb
pop
insl
arpl
sub
icebp
push
pop
sub
test
lds
outsb
jmp
adc
mov
cwtl
scas
add
and
test
cmp
insb
and
jmp
fildl
jnp
mov
cltd
cmp
add
test
imul
mov
sbb
outsb
mov
repnz
mov
inc
imul
or
fcmovu
pusha
out
push
push
scas
cmp
mov
dec
test
sub
push
mov
imul
pusha
stos
xor
sub
and
push
outsb
fld
jle
or
pop
push
push
in
fistpl
adc
ss
inc
dec
fnstenv
data16
ret
add
cmp
insb
or
fwait
add
mov
mov
add
es
pop
cmp
push
inc
daa
je
clc
stos
in
mov
cli
hlt
mov
mov
lahf
inc
arpl
loopne
and
or
sahf
jecxz
mov
loope
mov
or
lods
xor
add
and
push
das
aam
add
out
std
add
test
adc
or
xchg
ja
or
fcom
lods
mov
std
into
jb
aaa
mov
sbb
and
or
mov
les
test
lea
sbb
jno
fcmovnb
ljmp
and
mov
jo
movsl
loopne
push
stc
lret
or
inc
out
inc
lret
dec
and
dec
test
in
xchg
lock
jbe
push
mov
mov
pop
and
fidivs
mov
inc
sbb
sub
inc
lods
into
subps
jle
daa
fwait
jo
sbb
ss
in
dec
push
push
or
dec
push
inc
rclb
ret
les
or
pop
or
test
loop
mov
or
pusha
push
cmpsb
jae
sub
lcall
mov
das
mov
and
pop
dec
pushf
fcmovbe
lock
sbb
add
jecxz
dec
inc
jnp
aas
and
add
mov
jae
xchg
or
jg
into
test
rol
inc
jno
mov
mov
fldl
mov
fcmovbe
imul
add
xor
pop
xchg
sti
and
jl
fdivl
test
into
or
inc
xor
sub
pushf
les
sarb
or
inc
inc
push
jmp
fiaddl
sub
jmp
sbb
push
lds
repz
mov
jecxz
inc
daa
pusha
inc
inc
push
xor
pop
mov
push
dec
push
sbb
arpl
int
or
lcall
test
jp
sbb
out
dec
add
xchg
int
adc
into
or
int3
lret
lock
jle
ss
and
mov
icebp
outsb
push
sbb
mov
pusha
push
test
or
loop
push
call
mov
dec
jecxz
je
pop
insl
icebp
adc
hlt
sbb
xchg
lcall
cmp
lea
fnstsw
pop
mov
mov
xchg
mov
xchg
pop
call
and
cli
jecxz
je
sbb
lahf
mov
or
cmp
stc
xchg
pop
dec
bound
mov
pop
jl
and
not
test
fidivs
xor
fidivl
clc
cmp
jecxz
xor
hlt
jnp
cmpsb
add
mov
fiadds
dec
jle
pop
mov
pop
scas
ss
es
mov
outsb
sub
cmp
sbb
cmp
xor
outsb
adc
pop
adc
fidivl
scas
sahf
dec
mov
jae
push
xor
imul
shl
pusha
data16
das
xchg
leave
pop
pushf
sub
ret
cmp
outsb
mov
scas
loop
dec
rclb
iret
rclb
and
aad
cld
loopne
sub
aaa
mov
imul
test
hlt
push
add
push
loopne
add
shl
add
cmp
arpl
push
add
push
loop
test
xorb
ret
loopne
repz
bound
add
push
cmp
nop
xor
imul
sbb
pop
movsl
push
mov
pop
test
adcb
sub
test
xor
jge
arpl
in
ret
inc
inc
mov
sbb
cmpsl
testl
insl
pop
sbb
adc
mov
and
lcall
mov
arpl
sub
lods
clc
aas
in
mov
jns
rolb
mov
loopne
std
bound
adc
movsb
inc
xchg
sahf
jmp
or
rorl
sbbb
shll
mov
out
cmp
stc
loopne
cmp
mov
repnz
ret
inc
je
imul
cmp
dec
data16
push
out
filds
xor
jecxz
xor
adcb
imul
int
insl
sbb
pop
cltd
mov
in
fldenv
add
sbb
inc
mov
les
jge
iret
pop
cmp
into
fldl
dec
cmpsb
cwtl
sub
repz
push
stos
jp
xchg
mov
stos
inc
mov
fdivrs
ja
sahf
addr16
rcrl
loopne
fwait
cmp
sbb
mov
imul
jg
int3
iret
and
lret
inc
lock
mov
aaa
rorb
sbb
pop
dec
imul
ret
push
iret
mov
push
mov
inc
pop
jae
jmp
out
and
inc
adc
inc
inc
int
sub
jp
int
and
dec
cmp
adc
imul
fsubs
jbe
nop
inc
dec
jle
popf
mov
adc
cmp
push
out
mov
jp
aaa
xor
out
xor
mov
aad
out
lods
xor
and
pop
push
inc
icebp
and
mov
jb
dec
aas
push
xchg
iret
leave
or
mov
and
push
cwtl
aaa
jns
and
xor
test
and
dec
addr16
rolb
fs
inc
push
dec
iret
dec
nop
inc
push
sbb
dec
int
push
sbb
xlat
stos
lock
jnp
inc
jecxz
loopne
inc
shll
jle
shlb
and
enter
push
aad
enter
aam
shll
orl
lret
or
enter
fisttpll
enter
pop
xor
and
and
mov
sbb
lock
lds
mov
repz
sbbl
pusha
pop
jb
push
mov
and
xor
rdmsr
and
xor
shlb
and
pop
loopne
rorb
in
pop
out
push
dec
jbe
dec
sbb
push
or
sub
mov
push
repnz
mov
push
jmp
adc
pavgb
and
jns
outsl
adc
jecxz
daa
and
lock
insb
pop
adc
in
movsl
sbb
popa
mov
or
jle
pop
insl
cld
pop
pop
fisttpl
push
cmp
jns
mov
imul
jecxz
imul
je
dec
pop
icebp
cmp
loopne
pop
loopne
loopne
push
lock
insb
cmp
js
setg
mov
out
cmp
int3
mov
push
sbb
and
add
fcomp
clc
cli
sbbb
repnz
xlat
repz
pop
sbb
dec
dec
add
adc
dec
das
pop
inc
popa
and
in
add
adc
xor
pop
push
lcall
mov
jae
int
lea
loopne
jns
repz
cmp
loop
mov
nop
lcall
out
leave
rorb
orb
mov
ret
hlt
xlat
icebp
jne
jo
and
dec
lods
rorb
ss
pop
sarb
add
or
sub
and
inc
enter
dec
adc
pop
and
sub
nop
sub
mov
pop
pop
addr16
mov
add
sbb
mov
sbb
adc
lret
pop
push
scas
jns
ja
int3
fidivrl
jne
orb
fs
adc
or
andps
js
cltd
repnz
addr16
in
xchg
mov
jns
mov
in
enter
xchg
out
cmp
push
daa
xchg
sarb
inc
or
inc
dec
mov
pop
jmp
adc
pop
scas
cmp
inc
pop
outsl
xchg
int3
jae
iret
dec
pushf
and
jg
mov
lcall
fbld
pushf
sub
cwtl
rolb
loope
out
das
out
test
lret
mov
rcrl
rcll
mov
or
ja
cwtl
sub
out
loope
lret
sub
or
sub
sub
cs
mov
mov
les
sti
or
loop
sbb
stos
mov
test
sub
ja
dec
popl
nop
into
out
rorl
cli
ljmp
hlt
jo
stos
loope
add
mov
sarl
or
sahf
jno
icebp
sub
xor
xchg
into
sub
cmpb
cmova
sub
pop
decl
enter
jge
mov
pop
repnz
int
dec
dec
cmp
inc
mov
or
test
jmp
or
sub
or
inc
addr16
movl
insl
aam
sub
push
sub
lods
xchg
flds
mov
push
and
jbe
rcrl
bndstx
or
lods
mov
rcl
dec
fldt
into
xor
inc
mov
mov
push
ljmp
imul
outsl
jae
inc
ds
adc
jb
fisttpll
fldcw
dec
mov
pusha
pop
insb
adc
shll
dec
cmp
into
faddl
dec
jg
ret
testl
clc
jp
xchg
add
test
rolb
inc
push
pop
andb
add
dec
das
ja
sub
in
out
les
sub
insb
or
outsl
jae
hlt
outsl
insb
outsl
pop
jo
ljmp
mov
outsl
inc
scas
mov
cvtpi2ps
sahf
mov
mov
and
jp
pop
movb
in
lods
mov
mov
push
fucom
xchg
xchg
inc
popf
sub
loopne
inc
inc
int
enterw
mov
xor
shrb
dec
test
sarl
sub
add
lods
ds
mov
loop
rcrl
xor
insb
sbb
inc
jbe
or
fstps
jge
fnsave
inc
mov
bound
dec
lcall
sbb
jg
push
mov
js
sarb
aas
andb
lret
xor
mov
add
mov
xor
das
add
shlb
xor
dec
add
jl
shll
mov
add
or
push
icebp
sub
dec
inc
cmovg
or
out
sahf
lods
xor
dec
adc
or
inc
mov
jnp
pop
iret
jo
sub
popf
add
cmp
test
rorb
test
sub
inc
dec
lock
fisubrs
adc
lock
mov
adc
pop
mov
pop
jns
adc
push
in
outsl
adc
in
mov
add
test
rorb
mov
pop
jae
mov
inc
out
lock
adc
push
dec
dec
fistpl
jbe
xor
pop
mov
aaa
data16
fidivl
ja
sbb
out
sbb
int
mov
xor
adc
ja
inc
out
repnz
in
imul
lahf
add
or
pop
lea
push
into
and
das
imul
pop
lea
dec
les
mov
insb
ret
mov
push
enter
cmp
fwait
pop
fsts
scas
adc
sbb
fwait
jmp
cld
jle
out
xor
enter
xchg
xchg
xchg
xchg
insb
inc
gs
xchg
xbegin
push
jle
cmp
xchg
ficompl
lea
fdivl
lahf
inc
int3
into
lcall
out
mov
sbb
inc
enter
dec
jnp
mov
inc
push
jge
enter
arpl
add
clc
popf
mov
push
sbb
out
pop
scas
stc
les
je
inc
pusha
sar
sarl
dec
inc
mov
xor
leave
ret
in
ret
shlb
fwait
and
mov
into
out
pop
fxch
repz
cmc
cmp
cmp
fidivrl
ficoml
jns
addr16
ds
std
pop
pusha
push
cmp
pop
sub
std
dec
fxch
leave
fsubs
flds
es
ds
std
fwait
pusha
mov
pusha
xor
xor
jns
dec
stos
loopne
daa
and
fisubs
out
repnz
pop
ret
push
fidivrl
daa
mov
daa
and
dec
std
movsb
mov
pop
push
sbb
jl
out
fistps
aas
fstp
out
sbb
repnz
fsubs
push
fstpl
es
ds
and
jne
frstor
xor
fstpl
xor
pop
inc
test
jns
jb
lods
fcompl
cmp
iret
rcrb
and
xor
fistpl
out
insb
ds
jns
xchg
xchg
neg
int3
mov
sbb
or
bnd
out
cmp
imul
fwait
jae
ss
push
inc
es
cmp
push
fwait
outsb
sarl
es
sahf
xchg
rcrl
fwait
sbbl
es
jae
jp
cmp
movsl
mov
mov
fadd
fdivrs
aas
fdivrs
out
cmp
push
push
pop
jae
insb
loopne
je
xor
add
inc
pusha
iret
pushaw
sar
jne
push
inc
inc
int
jle
mov
add
pop
loopne
mov
or
ffreep
adc
hlt
or
xor
add
pop
xlat
add
and
jo
outsl
jo
mov
ljmp
pop
leave
repz
add
addl
cmc
imul
add
lock
insl
mov
in
lahf
push
pop
jno
mov
imul
into
insl
insl
and
inc
lods
add
loopne
and
xor
mov
lods
sub
mov
dec
add
lods
mov
lahf
and
paddusw
aam
imul
nop
lock
fbstp
stos
ja
out
add
jg
loopne
rcr
push
ljmp
fldt
pop
bound
mov
outsl
push
and
ret
das
inc
outsl
pop
mov
bound
adc
inc
dec
ret
clc
inc
add
cmp
sub
adc
push
dec
mov
dec
jl
pop
imul
lahf
dec
mov
lret
outsl
lret
lret
mov
or
outsl
jg
jo
xor
out
mov
add
and
lret
sub
loop
imul
mov
cmp
lret
fistl
jg
mov
fisubrl
lock
cmp
mull
into
jo
aaa
xchg
pop
ljmp
filds
lds
mov
mov
push
cmp
hlt
push
int
int
std
mov
outsl
outsl
lret
mov
sub
loop
push
and
add
hlt
jo
mov
outsl
nop
dec
dec
sub
ljmp
dec
mov
mov
ljmp
inc
addr16
leave
jbe
jne
sbb
cmp
mov
mov
outsl
dec
sub
das
dec
mov
subl
xor
cmp
sti
dec
pushl
dec
mov
mov
push
xlat
out
sub
shrb
mov
mov
fwait
push
fisttpl
movl
loope
sub
and
push
mov
addr16
sbb
rorl
shlb
sub
mov
lret
pop
mov
or
sti
nop
add
lret
das
cld
lret
pop
add
das
leave
push
stos
into
dec
inc
js
test
pop
jecxz
xlat
jnp
fucomi
or
mov
inc
push
push
out
imul
adc
mov
dec
or
or
ret
jmp
addr16
arpl
inc
jo
outsl
fisttpll
sbb
sub
test
dec
inc
jecxz
lds
sub
ljmp
push
dec
in
fwait
call
dec
lret
nop
jae
dec
das
lret
push
add
das
xlat
les
fnsave
fimuls
fwait
out
outsl
sub
xor
xor
mov
jo
xor
iret
jbe
enter
push
lret
dec
shrb
adc
jbe
imulb
mov
les
and
pop
mov
rolb
mov
popa
das
nop
push
or
dec
addr16
inc
or
enter
dec
lea
cs
jecxz
ret
leave
ja
test
ljmp
or
mov
mov
or
dec
cs
sbb
cld
leave
hlt
lods
les
lds
push
cmpsb
xchg
mov
xor
dec
out
mov
ja
mov
adc
out
xchg
outsl
push
shrb
or
aaa
fwait
add
dec
outsl
xlat
xchg
jo
outsl
fimuls
test
rcl
fdivr
push
xlat
out
push
inc
push
bound
test
or
leave
sub
xlat
nop
jo
mov
das
movsl
sub
mov
pop
mov
xchg
lret
fcmovnb
ja
imul
fistps
das
in
push
arpl
aaa
or
repnz
aaa
dec
outsl
inc
pushf
mov
nop
mov
fists
mov
mov
ds
test
rolb
test
outsl
insb
xor
xor
push
dec
int
ljmp
test
inc
and
lea
sub
or
sbb
sbbl
add
or
ror
dec
test
lret
stos
das
xor
pop
jecxz
ficoms
movsl
arpl
stos
cmp
and
cwtl
and
insl
stos
shlb
outsl
movsl
mov
jae
cs
and
and
fisubrl
shrl
lea
dec
push
push
nop
dec
arpl
sti
push
js
sub
sub
cs
or
ja
js
add
pop
movb
das
iret
leave
mov
ret
cmp
sar
sub
cmovs
lock
das
lock
arpl
ja
stos
and
jo
outsl
adcb
test
mov
outsb
xor
andb
mov
xchg
arpl
icebp
jg
shrb
mov
add
and
outsl
nop
outsb
shlb
pop
mov
push
stc
flds
xchg
inc
sahf
cmp
jns
pusha
shl
shll
mov
sbb
mov
insb
or
inc
imul
jmp
stos
jbe
shrd
jg
movups
scas
mov
push
sbbl
adc
jmp
outsb
inc
sbb
push
adc
jb
mov
cmp
test
adc
and
xchg
add
movsl
ja
ja
jmp
mov
adc
jl
dec
fcmovbe
ret
in
push
jg
loopne
iret
sahf
inc
cmp
repz
ror
leave
add
pop
loopne
inc
inc
ss
in
popa
pop
jbe
fwait
pop
iret
test
pop
scas
or
xchg
out
cmp
xor
or
xlat
leave
xchg
clc
es
jg
sub
mov
bound
insb
test
decl
bound
ja
cs
fstps
inc
fbstp
fisubs
pop
mov
addl
loope
test
inc
insb
push
pcmpeqd
scas
mov
add
xchg
xor
aas
xchg
out
xchg
aas
or
daa
add
and
ja
jmp
push
sub
repnz
inc
inc
setno
rorl
jns
xchg
out
rcrb
pop
loopne
push
sar
mov
lcall
inc
push
enter
out
pop
mov
push
std
pop
jnp
push
add
ret
lahf
sub
in
les
movnti
divl
pusha
pop
lcall
cmp
adc
jo
fdivl
inc
push
int
xlat
xchg
cmp
mov
xchg
pushf
nop
mov
xchg
insb
pop
repnz
jge
jge
fstl
jecxz
jns
pop
shll
pop
daa
fwait
dec
dec
dec
int
aam
fistps
ss
fwait
mov
lahf
sub
mov
adc
pop
outsl
pop
mov
xlat
dec
lret
cmp
rol
jg
fchs
clc
repnz
pusha
rorb
andl
iret
add
cwtl
or
pop
xchg
dec
pusha
adc
lahf
iret
adc
pop
dec
popf
ja
mov
jecxz
lods
lods
xchg
push
xor
lods
jle
mov
jmp
or
lret
push
test
jmp
dec
insb
nop
pushf
or
push
jne
push
outsl
pop
sti
in
les
pop
shrl
sub
das
xor
sub
mov
sub
xor
cmp
call
ja
mov
arpl
sub
or
or
pushl
cmp
add
fcmovnbe
adc
fcmovbe
sub
out
test
rorb
aam
seta
inc
inc
lock
mov
cmp
stos
das
mov
leave
leave
lret
dec
xlat
dec
std
outsl
xchg
out
inc
xchg
mov
out
inc
int
push
js
push
sbb
adc
add
xor
sbb
lret
mov
pop
dec
xchg
xchg
sub
and
jne
int
lods
clc
add
ds
mov
jge
cmc
mov
rcrb
ss
pop
mov
std
sar
imul
int
test
popf
imul
jae
pop
rolb
jnp
test
setle
leave
mov
out
cmp
xor
int
mov
adc
loopne
pop
inc
dec
inc
rcrb
cmp
aam
pop
frstor
dec
ss
out
or
int
xchg
jmp
daa
push
jg
roll
daa
repnz
out
out
push
inc
cld
hlt
je
add
mov
xor
sub
arpl
sub
adc
vmwrite
sub
into
adc
mov
add
inc
xor
jne
jne
in
mov
add
push
dec
sbb
ficompl
repnz
es
cmp
dec
insb
cmp
aam
xchg
rorb
cmp
cmp
ja
inc
adc
and
repz
sti
stos
nop
dec
mov
dec
cmp
out
sahf
addr16
leave
dec
push
frstor
sbbl
stos
inc
mov
repz
into
rclb
out
insb
movsl
sub
imul
in
sbb
dec
sbb
outsl
xor
xchg
xor
xor
dec
xchg
stos
stc
jno
popf
scas
popf
sar
ds
jecxz
add
xor
xchg
imul
out
scas
lret
nop
pop
repnz
push
or
insb
outsl
loope
es
dec
popf
cli
add
mov
xchg
push
xor
pushf
int3
xchg
fiadds
loope
inc
sbb
int3
imul
loop
xchg
inc
add
shll
in
in
dec
arpl
in
adc
fs
push
shl
repz
gs
and
xchg
xchg
jo
int
jp
daa
cltd
pop
jo
movsl
aaa
inc
out
and
push
cmpsb
mov
pop
stos
aam
shrl
adc
xor
cmp
sbb
dec
jmp
movsb
cmp
sbb
cmp
cld
pushf
idivb
popf
je
aam
xchg
loope
loopne
jg
pop
leave
pop
cmc
add
shlb
jae
int
enter
cmp
sbb
and
ds
mov
xchg
mov
je
add
test
in
lret
loopne
pop
jb
adc
cmpsb
cltd
notl
xor
lock
test
mov
add
movsb
fldcw
sbb
xchg
xor
and
mov
test
ljmp
fucomip
pop
inc
arpl
push
cwtl
dec
pop
jbe
mov
mov
decl
outsl
mov
leave
int
das
add
push
add
and
add
shl
push
test
mov
add
imul
dec
scas
out
nop
xor
adc
dec
cmpb
mov
pop
dec
outsl
add
sti
fnsave
dec
sub
imul
and
cmp
in
iret
loopne
sbb
dec
jmp
jae
in
jmp
clc
in
mov
or
test
dec
out
fistpl
mov
test
adc
pop
dec
adc
std
and
xchg
adc
pop
rcr
xor
add
pusha
mov
jae
test
push
out
leave
add
jl
repnz
cld
sbb
jge
sub
and
fmull
cld
loop
jns
jns
mov
jecxz
mov
in
popa
adc
pop
repnz
xor
dec
push
cmovb
push
mov
jmp
jb
imul
fildll
xor
mov
pop
in
into
fcomps
mov
aaa
mov
jg
movsl
adc
mov
inc
mov
mov
xchg
lcall
sbb
lea
gs
scas
add
inc
dec
push
add
in
xor
xchg
rcrb
fstpl
in
loopne
sbb
sbb
shlb
iret
popf
sbbb
pop
xchg
xchg
adc
aad
dec
mov
pusha
fcmovnb
sub
lea
stos
lret
lea
lock
push
ljmp
cmp
xor
xor
rorl
sub
cmp
imul
cs
pop
enter
jg
test
fcmovb
xor
gs
hlt
out
push
stos
push
or
lock
fistps
stc
mov
aas
stos
dec
xor
hlt
xchg
add
outsl
sub
dec
sbb
push
pop
push
je
fcmovnu
mov
stos
dec
stos
xchg
sbb
jg
jl
ror
lret
push
loopne
jnp
cmp
hlt
scas
inc
rclb
daa
loopne
adc
adc
ret
gs
outsb
jmp
inc
xchg
sbb
lods
ret
or
ret
jns
clc
sbb
adc
inc
cmpsb
add
mov
dec
cmp
mov
cmpsb
in
xchg
push
enter
pusha
dec
sbb
fwait
xchg
and
adc
xor
fyl2xp1
cmp
mov
aas
cs
add
stos
xor
in
xor
aam
fldcw
or
xor
mov
lock
inc
nop
jae
xlat
ljmp
mov
leave
xor
push
out
mov
push
std
icebp
pop
jg
fwait
lahf
insb
outsl
nop
cmp
xchg
daa
xchg
bound
and
or
or
mov
fmull
dec
sub
testl
dec
push
jl
mov
push
sub
cmp
enter
sbb
rorb
mov
push
xchg
mov
mov
rcll
loopne
cld
pop
sbb
enter
sub
ret
sahf
sbb
fdivrl
les
leave
lret
mov
pop
dec
popl
sahf
mov
pop
rclb
sbbb
xchg
cmp
rclb
fbstp
pop
cltd
in
out
push
dec
insb
pop
loopne
lods
fstpt
or
xchg
pop
adc
inc
jo
inc
add
rolb
push
adc
cwtl
xchg
movsl
dec
or
les
and
dec
xchg
popf
rcl
mov
mov
jo
dec
jecxz
hlt
mov
pop
push
inc
jecxz
jns
or
loopne
shrb
mov
jae
inc
jnp
nop
dec
lock
jmp
inc
lret
jo
int
xor
popa
mov
stos
inc
sub
stos
mov
add
dec
mov
add
popa
add
int
mov
sub
outsl
decl
int
jg
or
out
lds
sbb
das
mov
fisubrl
or
imul
mov
lds
or
nop
pop
mov
push
imul
or
sub
out
xchg
dec
test
scas
sbb
dec
fisttpll
push
test
lock
insb
into
dec
jg
add
mov
ljmp
dec
lods
nop
sub
loopne
rclb
enter
test
sbb
pop
xor
das
shll
mov
ficoms
xlat
mov
test
push
or
iret
jb
loopne
sub
mov
in
adc
fimuls
push
fnstsw
loopne
push
cmp
std
add
xchg
out
cld
jnp
jl
cmp
and
loopne
add
leave
and
adc
stos
shrb
mov
cs
ds
cmp
loopne
in
xor
in
cmp
or
mov
popf
divb
clc
or
jecxz
leave
sbbb
jp
outsb
cltd
pop
mov
and
mov
movsb
pusha
loopne
jmp
shlb
inc
xchg
mulb
rcrl
sti
mov
adc
sub
daa
je
jb
push
pop
sub
jg
sub
loopne
pop
sub
jno
pop
arpl
and
lds
lret
pop
lods
sbbl
pop
test
mov
jl
cmp
mov
push
lret
iret
ljmp
cs
cmp
push
into
scas
cs
loopne
lea
cmp
pop
mov
jg
and
xor
sbb
cld
jg
push
xchg
fxch
jg
mov
mov
out
outsl
hlt
lock
nop
nop
ljmp
inc
xchg
test
test
aam
outsl
test
psubw
shl
xor
mov
xchg
dec
dec
scas
mov
push
jnp
cmc
or
mov
lea
inc
movsl
shll
jae
and
xor
dec
mov
outsl
fucomp
pop
icebp
xchg
push
inc
push
sub
outsb
lods
rcrb
rorl
pop
sbb
aad
into
pop
inc
or
in
outsl
add
lds
mov
and
push
jecxz
xor
test
lea
arpl
lds
out
mov
aad
stos
or
testl
mov
push
aaa
push
data16
mov
sti
or
ret
fldl
adc
and
xor
and
out
add
or
rolb
add
xor
push
imul
sub
movsl
push
jbe
lods
inc
lea
fistpl
adc
jecxz
test
adc
push
pop
mov
push
inc
sbb
dec
sbb
loopne
lret
fldenv
pop
int
into
loopne
sbb
sahf
das
and
adcb
mov
mov
mov
shlb
xor
repnz
cmp
dec
lods
jecxz
in
pmovmskb
or
fs
bound
mov
out
pop
jae
dec
adc
mov
aam
add
pop
add
dec
cli
or
sub
fldcw
popl
loop
mov
bound
pop
inc
adc
in
inc
pop
enter
inc
lret
jae
ret
lahf
push
inc
xchg
mov
out
in
cld
sub
jb
adcl
mov
mov
sub
dec
jb
add
sbb
push
sub
push
shll
mov
int
xor
js
pop
fisttpl
push
push
jg
xor
lret
fsubl
push
inc
aam
aam
mov
push
adc
sub
or
adc
gs
pushf
adc
xchg
pop
xchg
inc
hlt
ss
cmpsb
jo
push
sbb
lea
push
scas
mov
ds
jp
adc
mov
sarb
add
gs
add
inc
movd
push
hlt
shl
leave
bound
push
aas
xor
cmp
ret
inc
pop
scas
movsb
loopne
mov
xor
sbb
das
out
scas
mov
in
addr16
add
les
fchs
sti
lea
or
jb
adc
pusha
iret
fbstp
es
rcl
rcr
add
cmp
xor
repz
cmp
ror
xchg
inc
mov
es
addr16
adc
fdiv
mov
daa
dec
push
idivl
sbb
fsubs
xlat
fwait
repz
cmp
mov
lock
xchg
add
mov
imul
imul
lret
dec
dec
int
pop
call
imul
xor
dec
or
or
test
or
mov
pop
call
mov
jg
cli
dec
fistpl
push
mov
pushl
inc
out
sbb
or
add
jmp
sub
test
jo
out
lds
mov
ret
push
dec
nop
add
filds
es
mov
pop
inc
jecxz
ret
pop
cmc
movsl
pusha
dec
xor
in
adc
jecxz
adc
cmpsb
add
loopne
rolb
and
sub
mov
xor
aaa
xor
popf
je
jecxz
inc
sub
adc
inc
mov
movsl
push
cmp
push
mov
xchg
adc
xchg
les
ss
fcoms
in
or
aas
xor
test
add
pop
or
inc
inc
adc
mov
pop
js
or
repnz
aas
adc
jmp
or
pop
and
ret
ja
aam
arpl
and
cmc
ret
cmp
daa
and
nop
xchg
cmp
out
sbb
jne
cs
add
into
add
push
jnp
loopne
fucomip
dec
shlb
loopne
push
mov
fsub
lods
mov
lds
xchg
jmp
jg
and
xor
add
adc
and
in
xor
push
xor
xchg
xor
imul
dec
dec
scas
push
xor
sahf
lret
sbb
cmp
inc
sub
and
dec
jne
hlt
dec
cld
pop
idiv
test
or
dec
hlt
add
das
daa
mov
test
mov
pop
rcr
loopne
fimuls
fisttpll
les
and
stos
cmp
dec
adcl
inc
lods
cmp
ja
push
sub
dec
and
cmp
push
or
dec
add
inc
test
ljmp
es
mov
mov
leave
pushf
sbbl
pop
ljmp
mov
sub
test
pop
and
outsb
pop
fmuls
mov
jg
sbb
jae
loopne
into
fnsave
or
cmp
in
jnp
or
cs
lret
sbb
pop
femms
loopne
pop
mov
inc
ljmp
fdivrp
mov
arpl
stos
lods
push
mov
call
xchg
mov
push
inc
mov
adc
dec
xchg
xchg
mov
daa
mov
lds
jecxz
xor
push
stc
cmp
lahf
or
loopne
popf
lods
push
aad
sbb
push
ficompl
mov
leave
jl
sub
push
pop
sbb
inc
mov
ljmp
into
mov
iret
pop
rcll
iret
mov
and
and
dec
enter
dec
sub
out
fs
testl
sbb
mov
call
fdivs
sbb
jne
push
mov
in
test
arpl
xchg
fiadds
inc
cld
inc
pavgb
popa
jbe
adc
dec
xor
or
in
mov
lock
orb
mov
dec
lahf
xor
dec
sub
mov
scas
rolb
push
mov
or
adc
dec
loopne
adc
std
xor
push
cmp
push
adc
and
testl
mov
outsl
jne
sub
xor
sub
jge
jg
loopne
fildll
out
cmpsl
bound
mov
enter
mov
jae
add
add
jge
arpl
mov
es
in
int
sbb
xchg
out
pop
icebp
pusha
icebp
rorl
test
cmp
imul
iret
rorb
clc
sbb
jbe
popa
fists
gs
int3
fwait
loopne
popf
jno
add
cmp
xchg
icebp
adc
push
mov
pop
jae
fwait
and
mov
jno
adc
les
shll
loopne
testb
gs
dec
gs
rcrl
loopne
cwtl
call
ds
sbb
enter
push
cs
mov
inc
es
jb
sahf
out
cmpsl
add
dec
inc
out
cmpsl
or
aas
ja
rorl
sub
add
pop
loop
cwtl
jae
fcoms
mov
add
mov
les
pop
and
add
mov
cwtl
sbb
xlat
add
dec
sbb
mov
mov
enter
ret
ja
add
ret
mov
je
out
test
dec
cmp
arpl
fwait
ss
mov
adc
and
repnz
sbb
cmp
fadds
push
xor
bound
jl
rcl
xchg
push
pusha
int
test
lods
rclb
cmp
inc
or
jb
nop
dec
lret
inc
ss
iret
jae
lret
pop
movsl
int
rol
gs
adcl
push
mov
repnz
das
testl
xor
cmp
cwtl
cmc
cmp
and
adc
not
flds
int3
lea
test
mov
lods
xor
fidivs
cmc
push
xchg
mov
lock
inc
mov
aaa
or
or
add
push
insl
or
jge
inc
mov
fbld
repnz
cmp
jae
push
ds
cmc
cmc
imulb
inc
insl
call
mov
ja
in
int3
ljmp
dec
xor
icebp
sbb
push
jns
push
scas
jge
pop
fucom
pop
inc
out
sub
cwtl
call
call
addr16
mov
jmp
xor
fdivrl
or
mov
cmp
mov
lock
dec
sub
and
cmpsl
popl
mov
dec
inc
negl
dec
xchg
leave
lcall
sbb
inc
es
push
push
iret
push
rcrl
enter
in
repz
lods
fs
pop
jp
mov
push
jnp
xchg
pop
pop
or
sbb
icebp
pop
cwtl
dec
mov
add
ret
pop
rcl
orb
cwtl
movsl
fsubs
lret
shll
push
fisttpll
idivl
mov
icebp
imul
sbb
pop
fwait
stc
insb
sahf
insb
mov
fstpl
clc
jl
das
fcompl
mov
in
mov
dec
lods
dec
fistpl
xchg
addr16
addr16
pop
movsb
fs
nop
pop
push
inc
push
pop
jno
fs
dec
test
ret
scas
in
pop
jnp
add
iret
push
shrl
jns,pt
je
lods
fdiv
mov
scas
jo
iret
out
ljmp
out
mov
dec
mov
dec
push
je
jmp
divb
push
inc
test
sub
aas
std
jg
add
mov
int
mov
or
mov
sbb
lret
or
adcb
test
mov
adc
push
pop
mov
shll
test
imul
mov
sbb
insb
inc
call
adc
xchg
dec
rorl
mov
mov
pushl
push
rol
loope
mov
roll
shll
fndisi(8087
mov
sti
xor
out
shrb
test
or
insl
sbb
dec
ret
or
out
jg
cmovno
loop
arpl
gs
and
and
cmp
divb
rorl
loop
cltd
in
inc
imul
jecxz
inc
sbb
jnp
cmp
nop
ljmp
sbb
mov
xchg
jno
xor
fsubl
xlat
mov
inc
add
xlat
push
stos
push
daa
fistl
push
out
iret
cmp
inc
mov
push
mov
add
push
aad
pop
mov
fdivrp
mov
jp
jb
test
mov
mov
addr16
fwait
pop
jno
testl
mov
out
ja
fmul
data16
jl
push
adc
sti
sahf
arpl
inc
push
jl
jg
out
pop
cmp
or
fsubs
arpl
fbstp
cmp
sbb
nop
fists
fistps
or
jle
pop
fcoms
les
jbe
jecxz
ficomps
ficomps
push
push
jns
pop
inc
pop
test
scas
xchg
loope
jae
mov
add
dec
inc
sub
add
mov
inc
stc
idivl
rclb
cwtl
jb
loopne
mov
imul
dec
stc
movsb
sub
js
pop
sub
jecxz
and
mov
out
sbb
shl
push
gs
mov
aad
iret
out
pop
pop
cmp
pop
jbe
mov
sahf
fnstenv
and
shlb
enter
aaa
sahf
fsub
push
or
dec
es
jmp
dec
push
vdivss
fs
sti
cmp
pop
loopne
aas
sub
mov
add
ss
mov
rcr
test
leave
aaa
ja
aaa
in
lahf
xchg
or
movsl
adc
inc
add
ret
ds
mov
es
and
mov
sbb
cmp
pop
cwtl
cmp
add
cmp
popf
cmp
jl
rorb
shl
cwtl
adc
cmp
fcompl
push
rcl
fcoml
push
data16
inc
aaa
add
or
jp
jae
rcl
push
jnp
sbb
shl
cwtl
roll
pop
ljmp
stos
fmuls
pop
loopne
pop
mov
push
js
outsl
mov
inc
mov
cltd
adc
pop
push
add
outsb
pop
inc
lock
cmpsb
fwait
inc
add
fcoms
test
fldcw
les
fwait
aaa
push
outsl
or
inc
mov
xor
sbb
lock
loopne
pop
in
jo
outsl
ja
movsl
subb
xchg
mov
cmpsl
inc
int
hlt
lret
fimull
clc
and
decl
das
sub
pop
inc
les
xor
imul
jecxz
loope
mov
dec
and
dec
lds
adcb
jle
jo
outsl
and
or
repz
push
mov
xor
or
push
outsl
mov
xchg
inc
mov
mov
stos
ret
dec
xor
dec
jmp
mov
fistl
popl
shll
jbe
leave
jge
daa
test
test
mov
mov
or
inc
dec
mov
nop
jo
fwait
inc
mov
adc
dec
adc
mov
or
push
lea
call
out
mov
popf
lahf
mov
std
int
sub
and
nop
outsl
adc
loope
scas
jae
out
lock
ror
lret
cmpb
ljmp
xor
lds
ljmp
out
dec
xlat
scas
jg
jbe
pop
sub
sub
mov
xchg
mov
rcll
outsl
mov
xlat
insb
dec
add
repnz
mov
dec
push
mov
mov
sbb
cmp
cmp
add
fucomp
out
dec
dec
xchg
mov
mov
push
das
sbb
dec
xchg
xlat
into
gs
pop
aaa
fisttpl
fs
jmp
mov
xchg
cmp
pop
xchg
sub
fsubr
push
out
push
mov
mov
sub
lcall
xor
sahf
js
push
adc
cltd
movsl
ss
mov
and
xchg
jle
inc
adc
out
adc
sbb
mov
jne
cmp
repz
repz
jns
iret
stos
push
pushf
jo
das
sahf
out
sahf
push
out
shrl
adc
cwtl
popf
push
fstpt
fsubr
add
ss
data16
push
mov
fst
je
mov
sub
dec
push
pop
push
pusha
hlt
addr16
dec
push
inc
dec
pop
add
ja
pop
cmp
arpl
ror
cwtl
and
xor
pusha
fsub
and
add
sub
cmp
pusha
rcrb
out
sbb
or
lahf
xchg
filds
push
leave
mov
push
fs
pop
clc
sahf
cmp
in
jbe
adc
cmp
lea
xchg
stos
add
ret
sbb
repnz
loopne
hlt
adc
hlt
jno
jb
xchg
sbb
hlt
push
leave
xchg
lock
xchg
lods
ss
or
ret
cmc
popf
push
jge
fwait
out
cmp
loopne
stos
faddp
push
mov
and
dec
cli
push
cwtl
sbb
lahf
fldl
jno
not
pop
shl
sbb
push
iret
pop
loopne
push
stos
push
or
adc
bound
setno
imul
pop
sbb
mov
ss
dec
insl
cmp
ss
inc
sahf
push
sbb
rcr
sahf
pop
loopne
sbb
pop
sbb
mov
jns
loopne
fists
add
enter
and
mov
cmpsl
aad
jle
jle
enter
inc
mov
pop
pop
add
lcall
insb
outsb
fcoml
add
mov
adc
inc
nop
add
xchg
ret
lret
outsb
rol
lret
or
shlb
lock
cld
sub
fimuls
xlat
jnp
dec
mov
jae
push
cmpb
add
or
inc
lret
lds
hlt
or
or
jecxz
sbb
xor
pop
in
lods
mov
add
jo,pn
nop
dec
dec
inc
loope
lret
xchg
add
sbbb
push
push
push
out
sbb
out
mov
add
out
inc
add
xor
nop
jmp
or
addr16
inc
sub
mov
popa
outsl
and
pop
mov
push
xchg
inc
stos
adc
in
or
xor
inc
dec
loope
cmp
inc
add
out
sub
sbb
jecxz
les
das
arpl
loop
cld
shlb
das
outsl
dec
arpl
jae
dec
lods
jnp
and
push
inc
inc
ss
add
std
rdmsr
aam
xchg
hlt
aam
dec
xchg
xor
cmp
cmp
pop
leave
adc
in
jmp
aaa
addr16
xor
xor
sub
aam
mov
jbe
incl
jle
incb
pmulhuw
mov
in
pop
fcompl
ficomps
pop
fcomps
sub
je
ja
jbe
mov
addb
add
test
lds
aaa
movsb
sbb
cmp
xchg
aas
add
fldenv
jle
dec
add
pop
dec
gs
loop
pusha
loope
xor
shll
jge
sub
xor
shrl
cmpsl
add
and
and
mov
test
addr16
cmpsb
imul
andb
addb
xchg
fs
or
jmp
fwait
cmpsb
imul
or
add
popa
shrl
add
add
dec
shll
imul
int3
push
and
imul
pop
and
sbb
push
or
inc
addr16
xchg
dec
xlat
sub
test
call
loope
je
sbb
and
jge
dec
pop
mov
lret
mov
xor
dec
je
pop
or
xor
push
sbb
outsb
sbb
testb
int
adc
jge
adc
sti
sahf
pop
je
or
cmp
push
mov
pop
mov
or
mov
fldt
or
cmpb
pop
mov
add
adc
out
mov
adc
xor
cmp
adc
or
mov
pop
xor
je
adc
xor
adc
pop
pop
in
testb
sbb
cmpsb
fcomi
mov
or
lods
or
out
out
mov
or
outsl
sbb
lods
insl
or
lods
std
lret
push
dec
and
mov
jbe
outsb
sub
jge
inc
ds
jnp
lea
dec
je
divb
test
xchg
jg
cmp
dec
and
dec
pop
ss
cmp
pop
adc
into
je
fs
loopne
xchg
je
outsl
in
mov
or
pop
je
jge
cltd
popf
xor
test
das
insl
dec
lods
lahf
push
out
out
mov
cmove
bound
jp
mov
pop
int3
lock
dec
or
sub
rol
and
in
rorb
sub
prefetchw
movups
fldenv
insl
jbe
or
arpl
push
xor
adc
push
ss
insb
loope
test
push
jge
sbb
jmp
aam
push
fiadds
mov
lcall
xor
std
push
test
mov
xor
cmp
rcrl
pushf
test
jle
jg
fnstcw
dec
sahf
cmp
mov
adc
sub
sbb
xor
les
fwait
out
dec
pop
add
xorl
sub
pop
ss
sbb
xchg
jge
jge
cs
adc
decl
arpl
xchg
adc
ficoml
es
jecxz,pn
or
or
and
loopne
add
add
in
popa
and
or
pop
adc
mov
mov
call
or
add
cld
repnz
repnz
repnz
fdiv
push
repnz
repnz
repnz
xor
sub
and
sbb
call
jl
je
insb
repnz
repnz
test
mov
repz
add
clc
repz
push
repz
inc
repz
shl
leave
repz
nop
in
mov
out
outsb
out
stos
out
jmp
aaa
out
sub
decl
jmp
int3
jmp
test
ljmp
push
ljmp
inc
ljmp
xchg
ljmp
ljmp
lods
ljmp
lcall
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
mov
imul
xchg
out
out
out
out
out
out
out
out
out
out
out
lcall
push
out
out
out
out
out
out
call
inc
call
arpl
mov
jmp
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
mov
mov
repnz
add
push
repnz
repnz
and
push
repnz
jne
test
or
bsf
movsb
pop
out
repz
repz
call
repz
repz
repz
out
fcomip
aad
inc
hlt
ds
outsl
hlt
data16
push
hlt
shlb
mov
test
push
mov
in
mov
movsl
in
popf
out
inc
out
cmp
pushl
out
leave
out
mov
fwait
out
or
icebp
out
out
inc
out
and
sub
shr
sub
jmp
mov
in
sub
in
pmulhw
pop
in
call
les
repnz
repz
aas
repnz
jg
ret
repnz
repz
cli
repz
fdiv
and
mov
jl
pop
repz
inc
cmc
repz
hlt
ljmp
hlt
push
int3
hlt
stc
in
push
in
mov
popa
out
pusha
out
enter
out
jge
out
sub
out
shr
out
clc
push
hlt
lock
lock
push
lock
lock
sub
jle
jno
push
lock
movsl
lock
jmp
pop
jmp
inc
jmp
sbb
sbb
jmp
clc
ljmp
loope
cmp
popf
call
xchg
call
fs
clc
call
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
icebp
fildll
mov
repnz
repnz
repnz
repnz
insl
sub
rcrb
cmpsb
jg
jecxz
ljmp
repz
repz
sbb
xor
add
repz
xchg
mov
lods
adc
mov
xor
hlt
add
hlt
in
call
dec
hlt
and
sbb
xchg
hlt
mov
test
jl
je
lcall
sbb
insb
hlt
fs
pop
hlt
aam
les
movsb
in
pushf
in
adc
rolb
add
cld
in
hlt
in
dec
in
inc
in
ss
sub
adc
or
in
shr
in
mov
out
add
fsubr
dec
decl
out
lods
out
mov
lock
lock
lock
sub
and
xchg
lock
imul
sub
jmp
cltd
jl
mov
in
inc
in
cmp
in
ss
in
dec
out
out
out
out
out
out
out
out
out
out
out
call
loope
cltd
pop
jecxz
cs
in
dec
repz
rep
repz
adc
div
dec
hlt
cs
xchg
pop
lods
jg
fstp
fucomp
jecxz
cmp
xchg
xchg
in
sahf
out
xchg
out
sub
ljmp
pop
out
mov
out
sbb
jae
lret
out
add
xlat
xchg
mov
in
call
in
out
out
out
out
out
out
out
call
add
or
inc
push
and
sbb
repnz
repnz
ret
aas
stc
hlt
or
or
cmp
xor
push
and
mov
mov
ljmp
sar
dec
out
pop
out
mov
pop
lock
lock
cld
hlt
aaa
std
pop
clc
jmp
cs
enter
jmp
fistpll
je
imul
mov
test
add
cs
in
in
in
in
dec
ja
std
out
out
out
scas
addr16
call
xlat
daa
dec
mov
stos
repnz
jge
repz
cmp
clc
mov
mov
in
add
in
in
inc
in
sub
lcall
out
cmp
mov
lock
out
dec
lock
mov
dec
jmp
addr16
push
ljmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
or
cmc
in
data16
out
out
out
out
out
out
out
out
out
out
mov
cld
call
mov
repnz
repz
repz
jle
jnp
outsb
not
repz
cld
push
mov
test
hlt
push
hlt
dec
hlt
xor
sbb
jbe
gs
pop
push
movsl
hlt
mov
in
xchg
dec
jmp
cs
and
sbb
sbb
out
mov
jbe
imul
push
out
shr
int3
out
ret
out
mov
out
jno
cmp
lock
jl
shl
shl
push
jg
jmp
jmp
sbb
xchg
jmp
lret
jmp
decl
ljmp
jg
jb
outsl
in
push
in
lret
in
or
xor
and
in
in
inc
or
stos
out
push
adc
add
loope
cmp
push
incl
call
mov
shufps
loope
loope
loope
loope
loope
loope
loope
push
outsb
cli
and
loope
xchg
loope
jg
jnp
shrl
mov
inc
repnz
repnz
xchg
repnz
jno
popa
add
imul
repz
jl
hlt
push
xlat
cltd
sti
sbb
hlt
pop
jmp
scas
mov
mov
push
in
jno
jg
in
dec
in
cmp
cmp
xchg
in
sub
in
imul
stos
in
test
sbbl
call
out
jmp
out
dec
out
dec
out
sbb
out
jl
call
mov
imul
mov
pop
out
mov
out
or
push
lock
sarl
js
fcomip
sbb
lock
jmp
jg
pusha
jmp
cld
jmp
mov
adc
clc
out
out
out
out
out
jg
fbstp
out
out
out
out
repnz
out
out
out
out
out
call
xchg
call
xor
and
mov
shr
call
mov
loope
loope
loope
loope
loope
das
jbe
push
mov
push
mov
push
out
shr
ret
out
jo
pop
cli
scas
out
test
lcall
lock
or
dec
lock
lock
lock
and
push
es
and
push
lock
lock
lock
lock
lret
mov
cmpsl
lock
jmp
xchg
jmp
shr
ljmp
xlat
ljmp
test
sub
ljmp
pop
sbb
iret
adc
div
add
inc
cmp
repnz
popa
and
push
int
add
add
dec
add
add
or
mov
dec
add
inc
add
es
aaa
mov
pop
fwait
cld
out
sahf
in
addl
or
add
jb
je
jb
ja
push
jg
add
adc
arpl
gs
sbb
je
insl
in
mov
dec
outsb
imul
jae
addr16
std
imulb
dec
push
imul
push
push
jns
adc
outsl
insl
insl
adc
je
insb
es
add
mov
xchg
pusha
xchg
mov
out
call
sub
popa
adc
push
jmp
test
cld
jg
out
lret
adc
cmp
add
pop
push
call
or
lds
jl
es
insb
cmp
jnp
and
and
in
mov
push
pusha
popa
or
dec
cmp
add
jmp
mov
ljmp
xorb
push
push
inc
jnp
jg
dec
rorb
jg
mov
xchg
add
insl
and
sbb
add
sbb
sti
push
push
or
fwait
add
adc
mov
in
ja
inc
loop
lret
add
les
or
sbb
xor
jg
int
mov
mov
mov
xorl
pop
sbb
or
ljmp
rcrb
imul
sahf
mov
pop
adc
or
dec
sub
testb
lods
lods
lea
dec
lea
xchg
test
mov
dec
jnp
aas
test
sbb
enter
aas
inc
adc
lret
jle
leave
incb
jg
int
in
insb
jb
or
sub
jnp
scas
outsl
aas
push
jnp
sti
aas
pop
jle
sbb
scas
jle
mov
add
or
push
xchg
mov
pop
add
incb
push
dec
jnp
lods
das
mov
lcall
mov
pop
jnp
jle
jle
push
nop
pop
out
jle
adc
cmp
cwtl
or
mov
xchg
push
neg
mov
mov
test
invd
and
pop
gs
test
mov
mov
jp
je
mov
or
push
mov
test
rcr
orb
das
add
ret
out
incb
out
das
lret
lret
jb
jle
mov
lret
mov
adc
or
push
mov
jl
add
lahf
adc
imul
dec
push
lcall
scas
rorb
fwait
fcomi
mov
sub
scas
mov
repz
add
mov
fistps
mov
xchg
xchg
mov
ret
fistps
push
or
test
and
mov
int3
insb
cmc
inc
in
dec
fmulp
add
mov
movsb
pop
aas
movsl
lahf
outsl
sbb
fidivrs
mov
and
jge
out
mov
push
pop
sbb
iret
stc
idivl
push
jg
inc
iret
icebp
clc
pop
mov
aas
add
xor
xlat
jle
scas
cs
xchg
dec
push
jecxz
out
ds
add
testb
or
mov
inc
push
add
mov
fstpt
cltd
out
push
lods
cli
add
mov
jmp
add
mov
jnp
incl
jle
divb
jle
shrb
dec
push
jle
add
jmp
clc
cmpsl
ret
pusha
or
rorl
xchg
lret
add
sub
jg,pt
inc
cmp
add
cs
in
cltd
adc
lahf
test
and
gs
mov
xchg
or
jge
pop
pop
fwait
xchg
insl
cld
int
push
imul
fldl
stos
lock
add
ds
mov
cmp
inc
mov
out
lret
fisttps
xor
bound
xchg
lods
fistl
ds
jnp
loope
cmp
jge
leave
push
fisubrs
jle
push
xchg
push
ret
fcomp
addr16
mov
lahf
fwait
jle
pop
add
fdivr
negb
sbb
lret
aaa
push
insb
dec
fs
stos
mov
arpl
pop
add
imul
das
and
outsb
test
ja
popf
mov
fdivl
or
lcall
jge
add
cmpsl
mov
jge
mov
jge
mov
imull
pop
or
scas
dec
lock
adc
lret
or
pop
js
sub
push
xor
mov
mov
dec
push
rcl
les
popa
in
mov
inc
insb
xchg
adc
ficomps
pop
mov
pop
pusha
mov
mov
or
jnp
mov
daa
aas
push
incb
pop
xor
mov
mov
insb
push
in
aas
jg
jmp
mov
jg
mov
add
adc
add
xor
cmp
fidivl
xchg
xchg
pop
popf
lahf
mov
push
mov
pop
add
sbb
sbb
fwait
inc
aam
add
mov
adc
pop
adc
xor
maxps
fistps
adc
add
inc
gs
outsl
outsb
jae
das
dec
push
imul
or
call
cli
add
pop
inc
sub
add
sbb
sahf
testb
mov
inc
or
sub
jbe
push
add
or
push
cmp
add
inc
pop
adc
add
and
sub
pop
test
sbb
outsl
je
insl
jb
int3
pushf
nop
outsl
or
and
or
and
outsb
jb
enter
jae
mov
sbb
imul
in
sbb
movsb
daa
lcall
outsl
jae
data16
rorb
enter
jno
jae
outsb
jp
push
add
mov
daa
js
push
sbb
jbe
jae
bound
imul
sbbb
dec
ret
outsb
ja
insl
inc
xchg
mov
xor
out
push
add
and
push
mov
sbb
add
add
add
or
incl
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
js
inc
add
mov
