sub
xchg
ds
inc
enter
loopne
adc
cltd
add
push
out
mov
test
fsubrl
jnp
xchg
xchg
add
imulb
adc
xor
mov
inc
scas
call
je
mov
dec
push
enter
lcall
loopne
xchg
shlb
scas
push
mov
mov
fiaddl
pop
sbb
fidivs
sahf
ds
iret
test
mov
repz
outsl
int
mov
lretw
sbb
jmp
inc
repz
cmpsl
push
jmp
sbb
cli
aad
into
dec
sub
mov
aam
mov
push
lret
inc
inc
cmp
lods
lea
sarb
jne
dec
xlat
cmpb
es
loopne
imul
je
movsl
or
fcmovbe
pop
enter
in
sub
mov
sub
xchg
jmp
js
push
and
mov
out
push
mov
js
pop
sub
and
fcomp
mov
js
loopne
mov
test
iret
jmp
test
incl
sub
jno
lahf
push
inc
test
out
cwtl
insb
jo
push
aas
jg
jno
fcomps
lock
xchg
enter
dec
mov
pop
lds
loopne
rcrl
into
pop
sti
mov
jns
sub
mov
daa
outsl
pop
mov
outsb
notb
inc
or
cltd
dec
arpl
push
jo
mov
sbb
mov
jge
cmp
stos
sbb
leave
jo
sbb
movsb
and
mov
cmp
fsubs
rcll
and
sti
push
ss
and
insl
push
ret
aaa
rclb
xchg
cmpb
fidivl
lahf
jl
or
stos
adc
dec
adc
push
hlt
push
aad
scas
mov
daa
outsb
and
lcall
pop
inc
in
ret
mov
loope
adc
jge
jnp
rolb
pop
jnp
mov
nop
xchg
mov
xchg
ljmp
arpl
int
and
xor
out
pop
aas
mov
cli
rcr
xchg
arpl
pop
daa
sti
out
rclb
int3
mov
mov
aaa
movsl
imul
adc
push
shrb
dec
xchg
mov
aaa
lahf
or
or
and
adc
jmp
popf
inc
shlb
popf
sub
xchg
push
inc
lea
mov
fstpt
jle
std
rcl
push
push
xchg
and
or
arpl
cmp
scas
jp
leave
mov
pop
pop
or
push
ja
xlat
adc
lret
xor
rcrl
or
inc
jae
inc
dec
xor
and
inc
test
mov
fimuls
and
mov
mov
mov
out
inc
pop
inc
cmp
xchg
roll
sub
fs
pushf
nop
into
jb
stos
pop
cmp
dec
add
and
mov
insl
add
push
roll
and
sub
push
inc
and
jl
lock
sbb
push
push
ds
sbb
into
jmp
test
ds
and
out
out
mov
stos
mov
sub
lcall
adc
mov
lea
int3
pusha
adc
int
push
push
pop
pop
inc
add
xchg
leave
xor
pop
xchg
cltd
xchg
push
push
popa
sarb
loopne,pt
push
sub
fchs
dec
insl
and
pop
mov
js
loope
pop
jo
stc
fnstsw
in
les
cli
pop
and
cmp
movsl
orb
mov
aas
iret
dec
shl
insl
adc
mov
sub
pop
mov
adc
les
xchg
inc
pop
js
mov
push
dec
aam
loopne
inc
cwtl
add
mov
aas
rolb
mov
pop
mull
aaa
sbbl
lret
sbb
mov
clc
jp
xchg
mov
out
fwait
cmp
test
inc
fisubrs
jns
or
xchg
jge
push
mov
lods
xchg
scas
gs
decb
xor
lods
push
mov
stos
push
daa
jne
or
jle
lock
mov
push
int
test
lcall
mov
push
dec
pop
out
rclb
dec
push
cli
loop
lret
shrl
sbb
fnsave
fsubrs
movsb
mov
fs
mov
fmuls
pop
cmpsl
insl
mov
pop
pushf
jmp
mov
sub
js
xchg
xchg
shlb
aaa
adcb
stos
aas
and
test
imul
mov
cmp
xchg
pop
cmp
sub
dec
ds
and
mov
jp
adc
mov
adc
mov
cmp
sahf
fsubs
cmp
icebp
cmp
fildll
or
pop
or
jmp
mov
bound
sbb
sbb
mov
cld
jp
pop
out
arpl
add
xchg
mov
xchg
push
outsb
cmc
repnz
or
lods
test
fwait
lea
out
aaa
adc
cli
inc
cmp
dec
jmp
push
leave
sahf
call
and
std
leave
inc
xchg
and
xchg
pop
mov
and
pop
dec
jns
shr
push
das
push
cmc
fcomp
lret
in
push
iret
sahf
outsl
and
pop
sbb
lds
rol
pop
push
stos
push
in
in
adc
pop
xchg
or
adc
xchg
jle
adc
in
push
out
pop
pop
repz
push
push
xchg
sub
pop
xchg
and
das
xlat
pusha
insl
mov
scas
shl
xchg
adc
mov
mov
pop
xchg
call
and
repnz
sarl
cli
push
mov
add
fs
push
hlt
push
push
jnp
adc
cmc
dec
dec
scas
dec
cmp
fs
fwait
sarb
das
xchg
mov
push
fwait
mov
xor
mov
pop
mov
push
add
push
rclb
mov
mov
out
in
in
and
stos
mov
lret
cmp
cli
add
push
popf
push
shrl
add
jns
or
sub
mov
cmovg
ljmp
and
and
leave
mov
lock
stc
jmp
sarb
and
cmp
pop
or
nopl
xchg
jecxz
or
cltd
jae
cmp
sub
shrl
lock
pop
push
fs
sbb
in
test
das
sbb
mov
sbb
shr
in
sbb
scas
add
jno
divl
mov
pop
cmp
gs
inc
popf
lods
xor
lea
mov
jg
sbb
mov
jnp
arpl
addr16
lock
lahf
sar
in
jecxz
aam
imul
xchg
jg
cwtl
and
push
xchg
jno
clc
aad
adc
add
push
div
xor
push
mov
sbb
mov
cli
mov
mov
or
arpl
mov
les
mov
mov
das
cmpsb
dec
in
pop
xchg
or
inc
cmp
rorb
jmp
aad
sbb
and
int3
mov
iret
je
testb
inc
mov
jecxz
lods
xchg
jns
ja
fsub
add
pop
inc
inc
mov
aad
movsb
mov
daa
lock
sub
decb
add
add
inc
pop
gs
push
aad
pop
xor
data16
in
popa
aam
push
xor
cmpsl
mov
cltd
and
push
test
daa
push
sbb
xchg
push
repz
mov
pop
outsb
out
nop
adc
inc
push
ror
lds
pop
outsb
mov
mov
testb
inc
pop
repnz
out
std
sbb
clc
or
xor
sbb
out
push
xchg
out
stc
repz
lret
mov
push
lock
cltd
sub
popa
sbb
cltd
or
js
xor
mov
std
rcr
test
andb
add
push
int
cli
int
dec
mov
mov
jb
sub
push
fsubs
stos
loop
xchg
cmp
sub
lock
rol
xchg
xchg
ret
push
neg
dec
pop
and
dec
push
sbb
outsl
mov
fwait
ljmp
cmp
cmc
and
dec
fwait
shrb
xchg
les
lret
divb
dec
and
sub
dec
push
sahf
jbe
cmp
in
mov
jge
dec
lret
cld
data16
test
movsl
jns
scas
pop
push
pop
or
in
in
out
push
rcrl
xchg
and
mov
or
ljmp
cltd
pop
push
sub
hlt
xchg
in
sub
ljmp
mov
push
sahf
ror
js
adc
shll
cmp
mov
rcl
movb
outsb
insb
jb
gs
int
push
pusha
add
popa
lcall
and
call
xor
and
test
loope
int
and
data16
jp
cmp
cmp
dec
call
jno
das
jae
scas
mov
add
or
imulb
add
jp
fpatan
mov
adc
mov
mov
push
jns
cmp
addr16
repz
int3
cmp
mov
mov
cs
and
adc
es
inc
mov
leave
add
and
sbb
xor
or
mov
inc
mov
xchg
sbb
dec
aas
cwtl
in
pop
or
xchg
mov
adc
jns
lods
enter
aas
mov
scas
addr16
sti
xchg
negl
inc
cmp
shrb
mov
push
inc
nop
sub
lret
subb
testb
dec
sti
and
lods
ja
cs
ss
push
mov
xor
dec
cmp
sub
push
cmp
nop
sahf
xchg
fiaddl
in
in
into
push
sub
pop
cmpsl
aad
outsb
inc
dec
sbb
sub
adc
xchg
and
sti
inc
or
fs
xchg
mov
pop
xor
sbb
outsb
pop
cmpsb
adc
sub
imull
or
movsl
bnd
movsl
pop
dec
icebp
pushf
inc
sub
mov
ljmp
lock
lds
outsb
jne
and
lock
leave
daa
sbb
test
repz
imul
iret
push
mov
adc
xor
inc
int
test
stos
xor
push
mov
adc
negb
xor
lret
std
cmc
adc
lahf
out
ljmp
dec
fwait
in
pop
idivl
dec
cmc
xchg
ja
out
es
loope
stos
popf
imul
adc
not
mov
mov
mov
shrl
and
fstl
inc
lcall
mov
fsubrs
mov
lcall
inc
dec
fs
ja
sarl
ret
mov
lds
mov
das
js
pop
pusha
mov
cmpsl
jle
mov
rcl
aad
jmp
shlb
scas
ret
pop
adc
sbb
ss
add
mov
xchg
sub
push
cmp
repz
mov
xchg
rol
push
js
adcl
push
aam
push
mov
or
fnclex
loope
and
push
leave
cmp
out
add
ljmp
test
cmp
mov
sub
jb
adc
adc
push
pop
cmp
jge
add
jle
mov
adc
ret
das
add
and
outsb
inc
imul
push
mov
or
lods
aam
mov
fisubs
shr
mov
push
cmpsb
xchg
push
adc
mov
pop
jbe
cmp
dec
pop
popf
xor
mov
xchg
jge
xchg
push
test
loope
mov
xchg
xor
fists
xor
or
jns
mov
inc
lods
jle
sbb
out
mov
adc
push
and
jno
add
popf
jg
push
loopne
mov
xchg
mov
es
mov
scas
int
popa
call
ss
popa
negb
push
pop
int
outsl
lods
shrl
or
pusha
int3
cld
repz
loope
sbb
pop
mov
shl
or
hlt
dec
xlat
pop
or
orb
xchg
pop
movq
and
gs
push
mov
sbb
fldt
aad
add
arpl
sub
jbe
rcrl
add
mov
negb
push
in
ret
jne
dec
mov
shrb
push
lret
push
lret
jae
dec
loop
std
gs
add
scas
loope
loopne
jge
inc
clc
jge
fstps
jnp
ss
shl
shr
outsl
cs
jo
data16
sbb
dec
mov
inc
iret
dec
cld
sub
repz
jno
sbb
cmpsb
clc
sub
pop
or
adc
in
test
in
xchg
icebp
std
mov
xchg
sbb
ja
andnps
or
in
or
inc
jle
lods
std
sub
fadds
test
nop
dec
xchg
xchg
mov
mov
fildl
fadd
xchg
int
dec
dec
fimull
jmp
sbb
fdivl
dec
push
out
out
popf
fsubrl
dec
jo
xor
icebp
mov
sub
jo
jp
leave
xor
mov
or
pop
mov
icebp
lret
aas
cmp
popa
xchg
mov
push
dec
add
lcall
xchg
or
dec
xchg
js
cmp
mov
fsubr
std
popf
hlt
xchg
mov
add
mov
nop
in
iret
inc
xchg
aas
jne
cld
xor
daa
add
movl
inc
pusha
inc
insb
test
loope
fsub
xor
mov
sti
mov
sbb
les
call
fcoml
dec
jp
popf
and
dec
xchg
sub
cmp
push
jecxz
ret
and
in
negl
pop
scas
lods
sahf
mov
movsl
add
mov
dec
je
push
pop
sarl
fs
sub
cmpl
cli
sbbl
sub
pop
sub
arpl
call
mov
outsb
in
fldcw
fbstp
insb
xlat
cmp
dec
lret
dec
mov
pop
cwtl
xchg
ja
push
cmpsl
or
xor
pmulhuw
push
fistps
pop
lock
mov
in
addr16
iret
inc
cmp
add
inc
punpckldq
xchg
push
rcrl
fs
pushf
jae
dec
in
xchg
mov
mov
adc
cltd
mov
xchg
fs
ret
push
mov
repz
aam
inc
clc
outsb
mov
cmpsb
inc
mov
daa
subb
lock
movsl
push
leave
mov
and
out
mov
xchg
sub
loop
xor
xchg
push
xchg
adc
test
mov
sbb
and
pop
add
popa
rcr
adc
mov
jl
xor
fwait
cwtl
test
or
jae
and
jge
insb
inc
out
out
loopne
jbe
dec
push
pop
xchg
lret
cltd
xchg
dec
xor
mov
loope
sbb
mov
loop
divb
jno
jo
lods
dec
mov
jmp
sbb
or
add
dec
mov
arpl
in
cltd
pop
rcrb
leave
mov
pop
mov
cmp
stc
out
mov
cld
lea
mov
adc
loope
pop
bnd
imul
jp
mov
lods
mov
repnz
call
in
loop
sbb
mov
cs
or
xchg
xchg
mov
call
cmp
mov
and
vpunpckhwd
out
fcoms
out
lcall
sub
inc
movb
out
lret
sub
xchg
xlat
in
dec
xchg
adc
outsb
xchg
and
and
fs
xlat
fnstenv
jnp
fucompp
xor
ds
ja
and
fwait
aad
inc
ret
mov
clc
jp
ret
roll
imul
hlt
inc
ret
sbb
mov
xchg
push
stos
jle
jo
aad
sahf
lock
mulb
aad
xchg
xor
add
add
pop
push
insb
jnp
fsubs
dec
pushf
or
loope
mov
leave
cmp
adc
popf
adc
into
arpl
fmul
jg
mov
popa
in
inc
or
pushf
or
nop
inc
in
jl
fidivrs
inc
clc
lcall
mov
inc
mov
push
fs
sbb
inc
test
outsb
ret
shll
push
lcall
loopne
fidivrl
mov
xchg
subb
hlt
outsl
dec
jmp
cli
mov
outsb
loope
aaa
xchg
call
cmp
pop
in
push
lahf
and
and
movsb
jnp
pop
xor
aaa
ret
xchg
add
mov
adc
frstor
or
xor
sub
neg
aaa
pusha
mov
in
insb
imul
loopne
cmpsb
jge
pop
cld
mov
mov
inc
shll
mov
push
pop
xor
cld
jb
sbb
or
cwtl
add
call
add
adc
and
sub
sub
loope
repnz
out
xor
push
repnz
mov
andl
mov
imul
xorl
mov
int3
fucomi
lods
ja
mov
bound
cmp
cmp
sub
xchg
xor
les
jo
xor
mov
push
push
cmp
repnz
sbb
testl
orb
push
in
fwait
cld
xchg
lahf
add
cmc
jno
mov
sbb
fwait
sub
out
add
or
and
fcoml
xchg
inc
push
fdiv
imul
xchg
stc
data16
mov
push
mov
call
repz
sbb
movsb
xchg
sbb
loope
lock
ja
add
js
shr
lock
dec
sbb
aam
or
js
jp
push
aad
faddl
pushf
test
je
inc
lods
pop
add
jbe
test
je
out
and
and
addr16
dec
ret
enter
mov
jbe
ja
loop
decb
ss
int3
push
push
adc
adc
sub
mov
mov
push
fwait
out
popa
pop
inc
pop
aas
add
adc
cmc
cmp
movsl
cmp
fildll
cmpsl
stos
push
stos
xor
pop
fisubrs
loop
jge
rolb
fcomps
pop
cmp
lcall
cltd
sbb
addr16
push
addb
xor
fld
xlat
test
cmpl
repnz
sbb
dec
sub
mov
dec
adc
call
std
popl
xor
lods
popf
js
stos
imul
cmpsb
stos
mov
cmp
jb
fwait
or
xchg
pop
mov
or
insb
in
js
jo
fsubs
jns
shll
into
leave
inc
imulb
or
jmp
nop
outsl
fmuls
mov
dec
mov
cltd
aas
aad
sub
out
jl
ret
push
mov
pop
push
push
sub
adc
popa
clc
jecxz
mov
cmc
fdivs
jne
ret
lret
ss
or
lods
hlt
in
arpl
mov
insl
test
sub
push
aam
enter
inc
inc
xchg
popf
cmp
add
dec
addr16
cmp
dec
xor
pop
and
adc
sub
loopne
sbb
lcall
lret
not
popa
push
xchg
mov
pop
jmp
adc
rorl
dec
jo
sahf
lods
xchg
out
iret
dec
mov
adc
lcall
lea
in
lods
jns
xor
sahf
cli
test
std
jb
sbb
and
xor
mov
pop
pop
add
mov
and
lea
in
mov
cld
push
repnz
pusha
cmpsl
decb
insl
insb
dec
cmpsb
sbb
das
mov
mov
inc
mov
lock
jmp
daa
inc
fdivrl
adc
movsb
pop
mov
sahf
popf
adc
lret
popa
les
pop
xor
push
jbe
xchg
js
jp
mov
mov
sarb
mov
or
ja
cmp
push
lahf
fdivl
push
xchg
mov
movsl
push
push
es
test
mov
mov
adc
mov
ret
add
mov
icebp
mov
jg
aam
dec
int3
shll
js
adcb
or
xchg
xlat
mov
pop
insl
leave
mov
jae
push
insl
rcll
movsb
push
cmp
mov
sbb
xchg
fnstenv
jmp
rcll
loopne
icebp
flds
and
and
mov
mov
pop
inc
int3
cmc
dec
or
stc
cmp
mov
sub
dec
adc
leave
je
cmp
sub
out
ds
mov
int3
sbb
jp
or
orl
pop
sbb
add
sub
push
xor
xchg
xor
out
fbld
jecxz
hlt
movsb
mov
jne
cmp
mov
inc
movsb
pop
sub
insl
cmp
adcl
jmp
test
xchg
out
inc
sub
inc
in
mov
cltd
add
xchg
push
das
and
stc
loopne
inc
ret
cli
jae
gs
sub
in
or
adc
aaa
ds
push
or
inc
lret
xchg
mov
adcb
xor
jb
jb
pop
aad
outsb
lods
shrl
pop
sub
mov
jns
inc
dec
andb
fdivs
cmp
leave
in
dec
out
repz
ja
lcall
in
push
xor
fists
nop
adc
pop
push
scas
test
push
in
push
push
adc
enter
adc
lock
aaa
test
cmp
or
xor
shrb
imul
jb
negl
xchg
mov
push
xchg
jmp
dec
jns
adcb
sub
mov
ja
adc
adc
sbb
fstps
clc
sub
jns
mov
lcall
sub
sub
arpl
jno
std
stos
pop
imul
xor
outsb
mov
rcr
pop
push
xorb
fdivp
shrl
icebp
fnsave
mov
movsl
xchg
bnd
mov
pop
dec
and
movsb
dec
add
push
jnp
out
and
cmp
lret
pop
mov
es
es
adc
mov
daa
test
cmp
adcl
popa
pusha
inc
sub
pop
or
roll
add
stc
cmp
xor
inc
or
hlt
out
ds
jns
sti
mov
enter
add
lcall
xor
sub
in
in
pop
cli
fsubl
sbb
shr
mov
in
jne
mov
jae
jge
mov
add
sbb
lods
ljmp
add
fisubrs
clc
inc
xchg
xor
adc
cli
andl
mov
stos
iret
ljmp
into
rcll
xchg
pushf
inc
xor
xchg
push
xchg
mov
jne
in
fdivr
mov
insb
shll
sub
leave
pop
loopne
lods
bound
stos
sahf
inc
add
les
daa
jno
shll
dec
cltd
fdivr
dec
ss
es
sub
xchg
cmp
es
pushf
mov
pop
mov
and
addr16
sbb
repnz
or
xor
in
std
leave
push
rcr
movsl
aaa
cmpb
mov
lock
decb
dec
xlat
aad
pop
pop
dec
mov
sbb
dec
stos
fdivrs
sbbb
jns
jnp
xchg
push
jge
push
aaa
jbe
mov
aam
cli
aaa
shll
mov
push
sbb
push
mov
out
fisubs
into
mov
xor
xchg
pop
push
loop
push
cmp
sarb
inc
and
jo
shrl
cmpsb
mov
cmp
popa
mov
cmp
dec
dec
in
xchg
add
icebp
test
stc
lcall
mov
rcr
fwait
adcb
into
xchg
add
or
sahf
sbb
rcll
into
mov
push
popa
push
add
jns
lret
mov
cmp
dec
pop
xor
push
out
cli
stos
pusha
loop
cmp
mov
add
sbb
cmp
repz
jno
and
mov
aas
xor
popa
or
sub
mov
aam
out
and
mov
sbb
rorb
loopne
pop
test
call
mov
jbe
cmpsl
sbbb
sbb
pop
not
subb
mov
mov
jmp
xchg
mov
cld
pop
pop
iret
imul
mov
jge
and
dec
xchg
mov
repz
repnz
sbb
mov
xchg
shll
rorb
outsb
cltd
sbb
jo
outsb
mov
test
mov
sbb
add
mov
les
fnstcw
test
jno
pop
arpl
dec
hlt
inc
insl
es
mov
jle
mov
sub
jmp
dec
leave
xchg
hlt
jbe
push
push
repz
sub
cli
ljmp
push
lcall
popa
mov
inc
in
mov
mov
pop
stos
int
clc
mov
mov
add
orl
lahf
sub
in
arpl
xchg
or
add
mov
lods
insb
xchg
ret
outsl
sahf
in
push
push
xor
dec
mov
shrl
jmp
loope
dec
dec
pop
lock
cmp
xlat
test
sahf
call
mov
sbb
mov
pop
iret
test
imulb
nop
dec
sbbb
mov
inc
data16
and
cmp
pop
inc
pop
jmp
dec
mov
pop
xchg
mov
pop
mov
fsubp
fldt
int3
fisubrl
adc
insb
dec
xchg
pop
push
push
outsb
mov
sub
je
dec
dec
jbe
push
int3
sub
out
rcr
lret
insb
pop
mov
daa
pop
xchg
in
mov
adc
fistl
cmp
cltd
es
das
out
cs
mov
fsubl
mov
das
hlt
inc
enter
xchg
loope
pop
push
cwtl
cmp
and
shrl
sub
xchg
mov
jb
testl
mov
mov
mov
rcll
mov
xchg
jp
test
dec
in
cmp
les
jbe
int3
and
sbb
icebp
ljmp
jne
iret
out
imul
mov
mov
cmp
adc
gs
int
xchg
push
out
loope
mov
addb
dec
sbb
ficompl
hlt
popf
jo
xlat
das
mov
dec
mov
jl
xchg
or
scas
addr16
lock
icebp
pushf
xchg
ja
aad
add
movsb
cmp
arpl
adc
je
lods
shr
mull
lods
push
ret
testl
push
mulb
pop
sbb
mov
ds
pop
mov
jo
jmp
rcrl
je
add
lcall
sub
into
jge
or
fs
mov
ljmp
enter
push
sbb
push
ss
daa
push
dec
and
adc
jns
gs
jne
sarl
mov
xor
and
push
mov
jae
add
test
xor
push
inc
cmpsl
stos
or
sub
push
jecxz
mov
cmp
dec
nop
pop
les
or
and
mov
xor
je
insl
xorb
mov
andb
in
imul
shrl
jns
repnz
cmp
test
push
fidivl
fmuls
pop
jnp
adc
outsl
fwait
out
adc
jle
mov
outsb
adc
les
xchg
and
add
jle
inc
xor
xchg
je
pop
jb
lret
pop
inc
push
sub
sbb
mov
push
jbe
pop
or
mov
rol
mov
xchg
mov
subb
xchg
test
lret
mov
adc
mov
int
inc
repnz
cmp
in
rorl
inc
mov
test
push
sub
in
sbb
popa
orb
lret
cmp
test
lcall
out
dec
ljmp
insb
lret
add
add
xlat
adc
fwait
add
sub
sub
stc
xchg
aas
notl
inc
pop
adc
xchg
fwait
fs
sbb
xchg
push
dec
xor
frstor
aaa
xor
hlt
test
loop
sti
or
sbb
or
stc
mov
clc
aaa
or
ds
pop
add
addr16
outsb
mov
subl
push
cmc
clc
in
call
sbb
sub
lret
call
add
es
mov
loop
leave
xchg
sbb
or
sbb
hlt
cmp
jbe
lock
lret
out
out
inc
pop
adc
repnz
imul
pop
faddl
fsubs
adc
mov
popa
ret
cmpsb
mov
xor
rorl
sti
frstor
dec
and
mov
call
pop
pop
decl
enter
and
fwait
in
sahf
cmp
out
mov
dec
rcll
add
lea
icebp
leave
inc
or
jbe
ds
ds
sub
push
imul
pop
sub
cmpsl
fstpt
fidivrs
loopne
in
xlat
scas
xchg
pop
add
cmpsl
mov
dec
in
sbb
jmp
jne
lock
adc
test
push
enter
and
xchg
cmpsl
mov
cmp
int
push
mov
dec
push
jo
push
js
loope
jbe
jecxz,pt
faddl
adc
and
cmpsb
sbb
cmp
negl
lods
movsl
pmaxub
mov
sbbl
and
push
ljmp
mov
cmp
sbb
push
jae
hlt
in
pop
mov
jecxz
je
xor
lcall
xchg
add
in
mov
or
jbe
or
push
and
jmp
shrb
scas
ljmp
into
jo
and
jecxz
insl
sub
std
xchg
das
out
in
inc
cmpb
inc
rolb
hlt
mov
lock
mov
push
cs
bound
xor
das
mov
fidivs
fcoms
inc
pop
stc
ljmp
dec
imul
hlt
int
pop
mov
inc
std
sbbb
lahf
mov
inc
jnp
stos
mov
divl
jmp
mov
outsl
jno
pushf
push
dec
lds
inc
pop
mov
jg
out
lods
movl
test
pop
dec
push
push
push
arpl
rorl
pop
mov
into
and
push
push
pop
push
out
jle
adc
cmc
cmp
adc
inc
outsb
loop
pop
ss
xchg
pop
push
imul
fstl
leave
or
cmp
dec
ss
movsl
test
outsl
mov
out
sub
or
je
and
lods
ds
xchg
sbb
in
sbb
adc
and
inc
loopne
push
sub
std
inc
mov
sub
jne
jo
dec
and
fsub
in
iret
or
sbbl
icebp
cmc
mov
inc
mov
outsb
push
lcallw
jp
mov
sbb
xchg
loopne
xchg
push
ss
hlt
xor
mov
imul
sbb
push
in
push
rcr
pop
fldl
pop
pop
into
jmp
je
cmp
mov
xlat
dec
popa
sbb
sub
sbb
into
setne
and
outsb
fidivs
pop
sub
adc
jb
adc
add
prefetcht2
push
clc
adc
jo
xor
sub
cmpsb
mov
xchg
nop
cmp
test
sbb
jae
ds
mov
dec
ja
push
jge
test
popa
cld
stc
mov
sbb
adc
scas
stos
and
fwait
inc
das
and
call
dec
xor
mov
mov
enter
jge
fdivs
pop
sbb
loop
pop
or
mov
cmp
cmp
jae
and
xlat
xchg
jb
jl
cld
pop
and
fstps
clc
lds
imul
xor
adcl
or
outsl
push
push
mov
mov
xor
cld
and
mov
rcll
js
mov
dec
jecxz
or
pop
mov
je
dec
stos
stos
int3
in
sub
cltd
inc
jecxz
sub
fwait
xchg
mov
in
dec
pop
outsl
xchg
mov
sbb
mov
pop
sahf
jge
repnz
cmp
jo
push
in
jns
adc
push
fwait
push
iret
add
movsb
mov
sbb
inc
sbb
in
push
out
imul
jle
sbb
pop
test
lcall
ja
mov
aam
dec
sbbb
ror
xor
dec
add
push
push
cwtl
inc
punpckldq
into
xor
mov
shlb
sahf
int3
test
fwait
sbb
movnti
sbb
fwait
pop
jne
cmovge
lret
push
data16
scas
stc
pusha
and
inc
fptan
inc
andb
push
insl
mov
push
divb
jge
sbb
stc
out
and
les
or
mov
inc
not
inc
fnstsw
jge
add
lret
push
jp
int
jns
and
cmpsl
adc
and
mov
jnp
push
fnstcw
xchg
adc
rorl
daa
pop
imul
jbe
xchg
or
incb
or
sbb
jg
pop
jmp
mov
and
xchg
xchg
or
fidivrs
adc
cmp
xor
xor
mov
loopne
adc
mov
inc
or
cmpsb
mov
out
xchg
sub
sbb
add
jp
mov
xorb
jno
cld
adc
lahf
inc
call
push
scas
aad
mov
fs
sbb
xchg
ds
scas
imul
out
es
dec
cmpsb
aam
xchg
xchg
sbb
aam
or
rol
push
jo
in
pushf
mov
dec
sbb
cmpsl
mov
fistps
stos
pop
mov
push
mov
cmp
iret
dec
ret
xchg
push
hlt
cli
inc
dec
mov
xor
repnz
sub
push
andl
sahf
inc
mov
popa
jle
adc
jl
push
movsl
jp
addr16
jle
xlat
filds
fcoms
jnp
sub
push
push
xor
mov
lret
mov
fdivl
jmp
nop
dec
mov
cmp
xor
lahf
in
xchg
lods
popf
pop
fadds
dec
movsb
ret
cli
mov
mov
add
jbe
push
jg
jmp
jae
pop
add
pusha
mov
adc
adc
in
cmp
pop
xor
cmp
ds
sub
sbb
outsb
out
and
daa
push
push
inc
sub
in
lahf
mov
into
and
push
scas
dec
mov
add
push
inc
fildl
and
das
cwtl
push
fwait
push
push
adc
cmp
in
fstpt
out
jno
cld
ret
inc
add
into
loopne
dec
mov
into
sbb
ret
int
cld
cwtl
jge
imul
pop
jo
jl
lahf
es
add
xchg
mov
inc
xchg
out
and
mov
sbb
repz
pop
aam
xchg
mov
pusha
push
mov
mov
fiadds
inc
sbbb
in
jbe
mov
add
mov
mov
mov
sub
repz
cmp
rcll
pop
xchg
mov
fstl
lahf
add
fnstenv
stos
cwtl
inc
inc
xor
iret
xor
ret
ja
arpl
xor
pusha
cltd
cld
adc
jns
fs
out
jmp
add
ja
push
and
xchg
inc
rorb
mov
push
and
popf
push
lahf
mov
loop
in
cmpsb
xlat
dec
pop
data16
aaa
andl
adc
jecxz
outsb
loop
push
add
cmp
mov
cld
and
sub
call
cwtl
bound
cli
mov
cld
xor
push
icebp
aam
outsb
sub
outsl
out
mov
inc
test
fiaddl
mov
out
aad
jle
cmp
jg
mov
out
add
cwtl
outsb
ret
xchg
cmp
cs
dec
jp
sbb
mov
sub
or
and
lret
insl
adc
sub
xchg
fadds
lahf
push
pop
jo
inc
imul
add
pmaddwd
and
sub
scas
test
xchg
adc
mov
xchg
cmc
dec
dec
icebp
enter
ja
or
cmpsb
xchg
cmp
int3
out
jg
pop
loopne
ljmp
out
mov
aaa
outsb
std
jns
sub
loope
ljmp
gs
sub
insb
xor
push
psllq
pop
add
cmp
cltd
shrl
add
cmpsb
jne
pop
pop
jl
sub
lock
jae
lea
cmp
hlt
dec
bound
xor
addr16
mov
or
insl
and
clc
fdivp
pop
pop
xchg
enter
cmp
inc
or
or
ja
mov
xchg
push
test
ret
sarl
filds
mov
out
imul
ror
inc
and
xchg
lret
test
aas
cmpsl
gs
jne
scas
movsl
add
ret
fisubs
ja
imul
cmp
dec
lret
movsl
jnp
cld
out
mov
sbb
call
aam
fdivs
sbb
mov
jo
pop
mov
fisubl
or
in
inc
jne
int
cwtl
mov
test
xor
jmp
hlt
push
mov
inc
dec
mov
pop
les
mov
jo
test
mov
test
pop
jge
out
ja
addb
add
push
mov
cs
imul
dec
lret
jo
xchg
int
in
sbb
fistpll
xor
adc
or
adc
xor
pop
hlt
jg
xchg
outsb
sbb
sbb
xchg
inc
pop
dec
add
js
add
mov
outsb
add
mov
xchg
hlt
lds
xchg
dec
xor
lea
push
xchg
add
jns
testl
daa
out
jmp
pop
sub
pop
jmp
fwait
pop
xchg
add
sub
inc
pop
loop
xchg
mov
jb
outsl
outsb
pop
out
pop
and
push
shlb
in
fnstenv
xchg
mov
ljmp
cli
test
xor
xchg
jbe
loop
cmp
stos
cwtl
sbbb
cmp
pop
mov
fsubrl
cwtl
arpl
push
sub
in
in
adc
push
ret
cmp
push
aaa
ret
lahf
mov
test
xlat
xor
in
sbb
dec
pop
imul
pminub
mov
fs
push
adcl
xchg
cmp
ds
jnp
jp
add
mov
neg
adc
and
xchg
add
jae
xchg
push
pop
inc
add
xchg
outsl
sbb
ljmp
adc
loopne
or
shlb
mov
sbb
orb
add
aam
dec
subl
mov
les
neg
scas
and
hlt
jmp
sub
fiaddl
lock
aaa
pop
sub
xchg
mov
mov
ficoms
xor
jo
icebp
call
xchg
loopne
aaa
rcl
xchg
call
sub
push
sub
mov
ds
cmp
add
xchg
gs
fmulp
hlt
jle
cmp
inc
cmp
xchg
lret
add
adc
inc
xchg
clc
cmp
push
cs
insl
test
movsl
dec
loope
adc
pusha
imul
clc
iret
cmp
ljmp
scas
je
ror
add
dec
lea
scas
and
sti
xlat
loope
pusha
jg
aad
loop
adc
fucomi
fcoms
mov
cli
cmp
push
inc
and
sti
fldl
pop
inc
mov
in
lds
mov
out
data16
push
cmpsl
dec
adc
pop
inc
int
aam
cmp
imul
and
and
jl
outsl
comiss
ss
loope
add
pop
xchg
push
mov
xor
inc
xor
int3
inc
mov
into
inc
jnp
or
call
cmpsl
lods
jge
sbb
lcall
stc
mov
lcall
push
lcall
shl
iret
and
clc
insb
mov
push
test
cmp
add
sarl
jp
jae
call
jbe
add
ret
jecxz
sahf
pop
ja
xchg
push
mov
xchg
inc
inc
daa
inc
loop
sub
pop
xchg
push
cmpsb
cmpl
cs
stos
fstpl
int3
into
out
mov
jnp
mov
xchg
test
dec
cltd
data16
mov
xor
stos
lahf
adcl
bswap
jl
xchg
add
jecxz
arpl
jle
call
jg
or
test
adc
je
cld
add
inc
and
andb
mov
push
mull
and
in
aaa
jno
push
stc
mov
lock
das
lahf
pusha
imul
mov
bound
jae
ja
mov
imul
mov
stos
hlt
roll
and
jno
mov
leave
ds
push
sub
lds
gs
add
dec
popf
rorl
add
gs
mov
aam
sahf
add
jmp
cmp
push
jo
decl
xchg
cmp
shl
orb
xchg
cmpl
test
fidivl
adc
mov
addr16
jae
or
cmp
push
jmp
or
test
push
stos
xchg
insl
push
cmp
dec
jmp
repnz
lods
lret
jg
mov
or
sarl
sub
leave
addr16
stos
ret
adc
mov
sub
adc
mov
jmp
push
jg
push
push
dec
and
popa
pushf
sbb
dec
insb
dec
push
adc
xlat
lods
sbb
aaa
imulb
lret
aas
cmc
cld
mulb
dec
lcall
popa
ret
mulb
enter
lahf
shrb
and
in
cmp
push
xchg
sub
jne
lock
icebp
jbe
scas
dec
xchg
add
andl
lret
mov
xchg
jecxz
arpl
push
add
push
add
hlt
push
aaa
sarl
in
inc
movsl
inc
lds
sub
fisttpl
and
push
pop
pop
addb
out
cmpsl
hlt
ljmp
xor
pop
xchg
std
adc
lahf
add
jne
add
adc
loopne
mov
dec
xchg
repz
nop
into
pusha
sbb
ja
ja
repnz
scas
repnz
cmp
outsl
adc
sbb
lret
pop
pop
aas
pop
aad
pusha
pop
dec
dec
test
mov
rcl
pusha
imul
mov
add
clc
int
nop
push
fwait
push
movsb
inc
sbb
adc
int3
push
popf
imul
cmp
cmpsl
push
xlat
cmc
loope
int3
aam
lahf
mov
push
lods
cld
test
repnz
cli
pop
or
ret
out
jle
iret
ljmp
and
dec
fmuls
sub
and
ds
lds
xor
call
cmp
movsb
dec
sub
rcrb
dec
and
dec
push
cmp
dec
cs
mov
mov
mov
shl
jno
jb
in
insl
jno
mov
add
lock
add
sbb
pop
shll
pop
jmp
repz
repnz
dec
je
push
fs
pop
bound
sub
mov
mov
in
lock
cmp
mov
cmp
ja
shll
pop
loope
xchg
sbb
pusha
dec
sub
dec
iret
push
out
hlt
xchg
in
mov
push
sub
data16
mov
in
jge
dec
sahf
xchg
sub
shll
mov
push
jb
sub
add
push
xor
or
es
pop
dec
imul
cmp
in
push
jae
decl
mov
push
add
pop
or
in
cmp
pop
mov
sbb
inc
out
mov
add
ss
mov
push
je
out
mov
stos
jo
pop
jge
popf
movsb
mov
out
aad
rorl
mov
xor
dec
sbb
cmp
icebp
fs
lock
ds
lahf
je
jns
cmp
out
shll
aas
pusha
add
sub
fidivl
mov
adc
push
jae
push
sub
jnp
in
dec
addr16
pop
and
mov
fistpl
mov
sarl
stos
sbb
punpckldq
mov
std
sahf
es
adc
add
adc
xchg
sarl
mov
test
ljmp
mov
idiv
das
clc
dec
orb
dec
add
data16
mov
cmp
jo
fnstenv
push
sti
jmp
push
loop
lahf
lcall
iret
test
repz
and
cmp
mov
pop
out
sarb
jle
xchg
jg
les
hlt
aam
lahf
inc
outsl
pushf
fdiv
mov
push
jbe
xor
loope
add
push
xor
or
jl
adc
mov
jo
mov
into
add
sar
lock
nop
cli
cmpb
or
inc
mov
cwtl
and
mov
push
and
js
xor
add
jb
test
daa
cmp
pop
loop
dec
add
addr16
mov
stc
push
jns
cld
shll
adcl
xchg
lahf
enter
mov
sbb
jp
mov
cmpsb
jno
and
int
mov
pop
mov
ret
or
subl
enter
pop
lret
ds
adc
pop
or
add
pushf
ja
push
call
cwtl
jae
adc
loop
out
test
test
and
xorb
add
jne
dec
push
in
insl
push
lods
sbbl
jo
ss
loope
cmp
out
test
mov
ficoml
mov
adc
lock
cwtl
and
cmpb
outsl
test
dec
js
pusha
jbe
dec
repz
inc
dec
call
pop
fcomp
mov
sti
and
test
aam
cmpsb
xchg
test
inc
jle
jbe
daa
cmc
je
cli
test
movsl
and
jp
add
in
dec
cmc
mov
lret
int
imul
mov
lret
cli
lcall
push
jo
sbb
jmp
adc
std
pop
sub
mov
jp
in
pop
sbb
add
cmp
cld
ja
xchg
into
push
cmp
xor
jge
mov
insb
sub
or
lock
sub
repnz
pop
outsb
shr
adc
popf
ja
mov
out
popa
lret
clc
pop
cmpsb
mov
and
mov
adc
aas
aam
mov
add
cltd
sysexit
stc
jne
in
sti
aam
push
lret
mov
or
mov
pop
sbb
int
icebp
or
or
adc
push
dec
popf
push
arpl
xchg
stos
xor
jo
adc
iret
push
push
lods
movsl
jne
sub
add
push
and
subb
fwait
in
and
mov
xchg
pop
mov
push
les
mov
push
dec
mov
pop
jge
ds
add
std
mov
push
cld
loope
push
sub
loop
inc
imul
xchg
jne
push
int3
fistl
cmp
push
inc
xchg
mov
imul
cltd
pop
push
les
add
and
pop
fiaddl
enter
pop
push
pop
and
stc
sub
xchg
subl
scas
fisubrs
stc
adc
push
cmp
out
dec
sub
dec
sub
sub
dec
mov
iret
stos
mov
push
ja
cld
jmp
out
es
jge
faddp
dec
inc
addl
lds
jl
and
adc
aam
jae
fnstenv
xor
bound
in
aaa
jno
aas
scas
fnstsw
mov
imul
dec
fs
mov
rorb
push
inc
jno
mov
or
stos
negl
inc
mov
in
jae
cmp
and
pop
mov
pop
jmp
add
mov
fistpl
push
jmp
dec
outsl
sbbb
dec
add
stc
adc
in
lcall
pop
add
mov
ftst
idivl
int
sub
jno
mov
testl
mov
push
jae
clc
stc
push
call
cs
lods
mov
mov
je
push
fiadds
pop
add
sub
enter
and
cmp
nop
es
add
fsubl
cmpsb
icebp
xlat
mov
testl
pop
ficompl
loop
insb
nop
clc
lcall
pushf
lcallw
gs
cmpl
pop
mov
xorl
rcr
sar
push
mov
or
outsl
test
jge
cmc
cltd
add
imul
shlb
push
mov
add
andl
test
repz
inc
cli
and
fwait
js
rcrb
push
cmc
push
mov
sub
roll
add
push
pop
imul
cmp
shll
jno
imul
xchg
xchg
cmc
xchg
cld
and
push
cmp
out
stos
outsl
mov
in
roll
cmpsl
push
lds
push
lods
mov
cmp
sub
shrl
push
daa
mov
pop
ret
std
inc
into
insb
xor
sti
or
push
pop
add
jmp
dec
mov
icebp
negl
push
jno
mov
add
ja
fdivp
mov
jmp
mov
into
pushl
and
inc
pop
aaa
cmpsl
inc
jp
popf
jo
call
mov
mov
ja
and
and
add
sbb
dec
pop
sub
xor
insb
xor
jecxz
mov
jnp
jg
jb
mov
pop
mov
test
out
sub
flds
and
mov
jge
pop
jns
mov
es
adc
jns
fldenv
ds
xor
imul
rorl
and
xor
cmp
mov
xor
in
dec
inc
in
cmp
push
nop
out
lods
cmp
inc
test
outsb
pop
jne
movb
mov
or
cmpsl
jmp
popl
adc
sub
or
nop
pop
jg
imul
ror
xchg
cwtl
xor
cmpsb
push
imul
sbb
add
mov
pop
lcall
pop
cmc
xorl
jo
or
mov
int3
xchg
popf
sub
dec
fwait
test
dec
dec
dec
mov
lods
push
mov
pop
mov
cli
lods
add
add
dec
outsl
dec
mov
aam
out
ret
in
dec
jp
in
xchg
subl
push
xchg
pop
xchg
xor
and
push
sarl
adcb
push
pop
sti
lahf
and
sub
cmc
xor
xor
out
pop
add
push
mov
jg
sbb
aad
cli
rcll
mov
push
sarl
push
scas
push
xor
cmpsl
testl
or
xchg
add
mov
out
cli
daa
adcl
jb
cmpsb
icebp
push
lret
cmp
add
and
lock
xchg
notl
fbld
fsubrl
mov
jp
xlat
push
lahf
ret
add
jmp
popf
mov
test
rclb
push
popa
adc
lahf
sbb
mov
adcl
outsb
test
aam
add
inc
cmp
fcomp
add
xchg
jns
insl
loope
ss
cs
inc
jo
sub
and
test
adc
dec
jle
and
mov
sbb
addr16
lds
mov
dec
lds
call
test
bound
ficompl
pop
xchg
xchg
loope
mov
adc
mov
cmp
ja
cltd
sub
shl
xlat
aad
stos
outsl
adcl
mov
ffree
ret
push
push
outsb
pop
pop
and
jle
lcall
mov
into
popf
adc
test
sarb
stos
cmpsl
leave
mov
dec
or
add
cmpsl
stos
loopne
push
fisubs
inc
sbb
orb
cltd
or
in
and
and
and
out
dec
sahf
push
adc
push
aas
adc
andb
popa
test
jecxz
mov
sbb
call
aad
sahf
ss
dec
cwtl
mov
insb
lcall
into
xor
mov
and
mov
stos
lret
mov
sub
push
shlb
jl
add
dec
into
inc
push
sbb
dec
fwait
sub
push
adc
dec
sbb
lcall
fsubrs
cmc
aad
fcompl
dec
sahf
sbbl
int
addr16
insl
xor
shlb
cmc
clc
mov
out
stos
insb
xor
mov
jbe
cmpsb
sbb
jbe
jae
je
mov
nop
or
mov
xor
daa
xor
out
test
cli
out
and
dec
dec
fsubl
sahf
jl
daa
daa
pop
loope
sbb
gs
lods
jmp
lret
pop
cmpsb
pushf
mov
out
out
mov
ljmp
es
in
push
cmp
das
arpl
subl
sahf
mov
nop
imul
loope
adc
sbb
in
mov
lret
test
jns
push
test
lret
xchg
push
test
inc
cs
push
movl
nop
cmp
movsb
popf
popa
jne
daa
pop
outsl
gs
cmp
mov
dec
int
push
dec
ret
lods
inc
mov
outsb
mov
jl
shl
out
jbe
inc
push
mov
leave
sbb
insb
mov
pushf
aaa
das
popa
inc
mov
pop
mov
loop
or
lea
rcrb
fsubrs
enter
pushf
andl
mov
fsubrp
into
sub
push
ret
or
push
js
and
test
sahf
sahf
xor
push
xor
inc
pop
sbb
out
pop
in
jle
sbb
imul
mov
imul
mov
pop
clc
cmc
dec
cs
inc
es
fnstsw
int3
cmpsl
and
add
push
out
movsb
daa
lods
aas
mov
xchg
dec
cmpsb
xor
jbe
mov
adc
push
jg
sub
stc
cmpsb
push
mov
xor
stc
lret
inc
jns
outsb
xlat
lret
fistl
in
inc
popf
adc
ret
pop
jg
ret
outsl
fwait
scas
sub
into
inc
lods
int
adc
cltd
test
icebp
vxorps
je
sbb
enter
xlat
mov
jae
fcmovbe
jns
mov
push
adc
out
or
jbe
cli
mov
test
icebp
mov
out
push
je
in
loop
sti
cmp
std
pop
sub
test
movsb
leave
movsl
inc
scas
sub
sub
cmp
std
add
arpl
lods
scas
testb
add
push
cli
add
adc
push
mov
push
jnp
adc
sarl
clc
js
daa
pop
out
jmp
lds
sarl
pop
adc
aam
sarl
stos
xchg
jmp
sahf
shll
js
cli
sbb
inc
leave
aas
dec
and
out
jo
cmc
nop
sub
loope
xorl
in
rcll
mov
inc
lahf
adc
dec
jno
sub
sbb
daa
daa
lret
gs
rorl
jnp
sub
or
out
sbb
ret
xor
sarl
pop
and
mov
iret
jae
stos
sub
outsb
pop
mov
fmuls
clc
pop
push
es
in
xchg
push
and
pop
mov
and
add
dec
xchg
sub
mov
outsb
or
test
cwtl
dec
sub
jae
je
imul
dec
sbb
xor
fsincos
inc
testl
cmpsl
daa
sub
sub
pop
in
mov
sub
cmp
dec
jb
std
cmc
leave
or
push
rcll
sbb
in
sbb
cmp
je
sbb
pop
loopne
jnp
cmp
inc
push
xor
repz
cmp
aam
inc
sti
fcmovne
insl
mov
and
xor
xchg
push
imul
mov
or
inc
aam
loopne
mov
or
ret
pop
push
rorb
in
cmp
lahf
push
js
xchg
xchg
hlt
aaa
xchg
mov
pop
sbb
push
cmp
pusha
xchg
stos
adc
in
movsl
rcll
adc
icebp
test
add
dec
mov
jne
movsb
mov
cld
leave
and
clc
cld
cmpsl
adc
stc
mov
loopne
or
push
out
jb
push
pop
repnz
push
sub
int
cmc
test
lea
ficompl
insb
sti
stos
jbe
popa
cmpsb
cmp
inc
aad
sub
mov
mov
dec
push
cld
or
mov
negl
jbe
add
je
push
xor
test
jecxz
leave
jmp
fisubrl
push
loop
jge
fs
mov
xchg
jae
fimuls
out
sub
pop
mov
add
pop
push
cmpsb
lret
xchg
mov
cmp
pusha
xchg
cmp
daa
int
into
or
rcrb
stos
xchg
and
out
dec
scas
or
push
lds
stos
scas
xchg
sub
sti
push
jg
jae
cmp
mov
scas
mov
sahf
loopne
xor
mov
into
aad
sub
test
dec
adc
test
jne
jne
adc
sbb
lret
mov
repnz
fwait
mov
cld
sarb
dec
push
sbb
cmp
mov
and
or
or
jo
out
in
dec
push
push
int3
sub
cmpsl
nop
outsl
push
cltd
cmpsl
in
sbb
out
leave
notl
inc
es
iret
mov
dec
mov
push
ds
lods
jle
sub
repnz
push
or
daa
jecxz
jns
mov
sbb
xor
and
clc
fsubr
inc
mov
sti
cld
call
fimuls
addb
xor
frstpm(287
and
cmp
add
fsubs
fsubs
iret
inc
xor
adc
or
xchg
std
adc
cmp
adc
popa
imul
sbb
add
shrl
add
cmc
mov
xor
and
scas
push
inc
xchg
mov
pop
loope
ret
pop
aad
adc
loope
es
mov
aad
pushf
out
es
mov
mov
psraw
hlt
push
stos
data16
in
push
lcall
cmp
cmp
mov
push
xchg
xchg
ret
leave
loope
inc
jp
mov
or
cli
lahf
sbb
out
mov
inc
xchg
je
sbb
adc
das
cmp
push
mov
and
mov
lds
sub
ret
and
mov
mov
jp
and
mov
xchg
outsb
pop
sti
faddp
ja
dec
jnp
repz
and
rcr
test
lods
int
xchg
mov
mov
xor
andl
mov
push
dec
movsb
addr16
movsl
xchg
jp
jne
xor
mov
aaa
js
cli
inc
pushf
mov
cmpsb
mov
fucomi
or
loope
inc
xchg
mov
mov
es
jecxz
jp
and
sub
jnp
test
bound
in
mov
add
inc
dec
adc
and
xchg
adc
mov
and
loop
mov
mov
mov
or
jmp
cltd
xor
push
sti
xor
mov
aam
loope
mov
jne
jnp
mov
mov
add
xlat
outsb
inc
xor
mov
and
out
and
das
sub
insl
cmp
fsts
data16
add
test
and
pushf
les
dec
inc
mov
mov
pop
xor
das
addr16
test
jmp
fadd
popf
push
dec
add
aas
sub
pusha
jb
add
cli
xor
out
insb
cmp
fildll
arpl
mov
aad
movsb
xchg
pusha
daa
dec
xchg
aas
cmp
inc
and
roll
mov
sub
bound
mov
mov
sub
das
xor
inc
pop
inc
push
jo
push
jno
pop
xchg
fcomip
mov
jl
lahf
in
mov
mov
jnp
in
ss
outsb
xchg
aaa
cmc
xchg
mov
xchg
lea
push
lods
cli
inc
cltd
shrb
inc
dec
pop
xor
jle
cmp
test
xchg
mov
sub
dec
movsb
mov
lock
mov
pop
jmp
imul
orb
adc
and
add
loope
adc
xchg
dec
loope
xchg
jmp
insb
xor
aad
sbb
jae
add
std
lahf
lods
jne
gs
decl
bound
imul
jb
pusha
sbb
ret
ret
pop
jmp
js
cmp
mov
aas
aam
pop
sti
xchg
imul
or
popf
mov
pusha
cmp
mov
push
bound
arpl
mov
mov
inc
cmp
es
dec
leave
shll
in
inc
sub
jge
ds
sub
or
pushf
idiv
lock
lock
sub
hlt
mov
push
jmp
xchg
pusha
scas
dec
sbb
clc
add
stos
dec
mov
pop
mov
and
int3
pusha
jg
lods
push
pop
jmp
pop
pushf
subb
or
into
sti
sub
sbb
iret
mov
sub
mov
das
pop
cmp
loope
rorl
fmul
xor
scas
sub
xor
mov
mov
movswl
and
dec
mov
scas
pop
ja
xchg
push
xor
hlt
sbbb
and
cmp
push
add
xchg
out
ret
xor
xchg
jnp
loop
js
stos
sbb
int3
jne
jae
ss
lahf
repnz
div
push
add
pushw
popf
dec
js
sahf
jg
add
xlat
fisubrl
mov
fbld
mov
pusha
in
fstps
dec
push
cmpsl
and
jecxz
pop
add
orb
cmp
jge
push
jmp
bound
lds
hlt
test
push
mov
and
ja
stos
in
call
cmp
mov
dec
push
jae
xchg
cmpsb
mov
ret
push
adc
adc
iret
int3
mov
das
mov
cmp
and
movsl
test
mov
push
call
pop
sbb
es
ja
jmp
dec
testl
imul
fimuls
and
imul
decl
cwtl
std
and
cwtl
push
cltd
aas
insb
pop
and
push
cmp
jp
sbb
lret
cmp
mov
in
test
outsl
fwait
sbb
add
or
or
pop
sbbl
movsl
mov
cltd
decb
jge
pop
cmp
and
repz
mov
in
stc
jne
jle
sbb
pop
scas
lods
cld
and
xor
mov
push
popa
pop
ss
in
xor
push
idiv
ss
and
fwait
popa
add
pop
xor
and
xchg
mov
add
add
mov
dec
cltd
jne
push
sub
call
nop
adc
add
rorb
cmpsb
mov
int3
fs
rcr
push
jp
out
pminub
aaa
xchg
pop
mov
popa
fimuls
xor
sub
fs
aaa
in
repz
mov
mov
cmpsb
adc
adc
add
arpl
or
push
outsl
es
stos
loop
in
mov
sbb
sbb
dec
push
in
shlb
icebp
mov
jmp
add
in
stos
shr
lds
rcll
push
push
push
dec
or
mov
les
xor
popa
cs
fcomi
cwtl
lcall
repz
add
dec
stc
jno
adc
jmp
mov
cltd
jae
inc
lahf
inc
inc
outsl
pop
gs
test
cmp
movsb
xchg
xor
sahf
fidivrs
add
data16
mov
imul
add
dec
js
jnp
clc
dec
xchg
sub
push
sbb
outsl
sarb
cmpsb
ds
stos
and
cmp
das
aam
push
lods
mov
ja
mov
andb
cmpsb
mov
aas
arpl
int
mov
push
fadds
fstpl
and
adc
mov
inc
add
mov
sbbb
pop
arpl
pop
cld
jbe
xchg
fildll
add
cmpsl
fs
dec
push
jbe
stos
pop
lcall
imul
mov
sahf
fs
fs
jmp
adc
cltd
add
inc
pop
cli
add
add
inc
push
and
pusha
xchg
int3
andl
clc
xchg
inc
cld
push
inc
inc
nop
mov
inc
mov
lock
leave
cmc
add
inc
mov
fdivl
and
je
stos
push
ds
es
sub
aad
rorl
iret
test
fldt
lret
push
test
pushf
mov
fistpl
das
jb
adc
xor
inc
mov
stos
add
cwtl
test
sbb
mov
cmpl
movsl
jbe
mov
lret
dec
sbb
fists
push
incb
lcall
xor
adc
outsl
insb
out
test
mov
add
jle
sub
call
push
insl
not
push
lret
ja
push
cmp
aad
popa
and
jge
rep
aam
data16
loopne
mov
pop
call
out
or
inc
dec
pop
xchg
std
push
adc
movsl
add
inc
pusha
pushf
mov
xor
xor
pop
mov
mov
insb
pop
cltd
xchg
inc
or
inc
mov
jp
out
pop
fimuls
fidivl
ss
stos
xlat
insb
mov
inc
movsl
popf
inc
adc
mov
xchg
add
sub
jae
jmp
fwait
popa
repz
mov
dec
mov
pop
nop
and
imul
gs
inc
mov
repnz
aam
push
nop
mov
mov
fimuls
cmp
mov
into
sbb
sbb
adc
mov
mov
and
jbe
out
ja
jg
rorl
xchg
cmc
adc
or
inc
and
jecxz
mov
jns
sbb
aas
lds
loopne
int
add
adc
hlt
notl
bound
fsubl
dec
mov
movsl
or
pop
imul
jo
sbbl
imull
das
arpl
scas
mov
add
or
mov
cwtl
repz
mov
ljmp
dec
stos
xor
shll
sbb
ss
lahf
in
xor
pop
movsl
mov
mov
imul
inc
xchg
pop
into
fldcw
in
xor
mov
jmp
jno
mov
enter
adcb
mov
out
mov
div
jmp
jmp
xchg
int3
or
shll
or
xor
jns
test
add
imul
cmp
xchg
imul
xor
inc
pop
jmp
mov
in
jmp
cmpsb
dec
sbb
dec
shlb
scas
cmpsb
pop
inc
push
mov
xchg
xchg
push
pop
faddl
fstl
loope
mov
jns
movsb
adc
data16
je
adc
jo
jo
repz
out
pop
pop
mov
xchg
ffree
lods
movsb
push
divb
mov
push
cmpl
inc
in
push
push
jp
xor
dec
addb
xlat
lds
bound
mov
push
jb
out
imul
insl
ss
xchg
sbb
divb
mov
sarl
mov
ss
pop
push
jb
jnp
testb
das
loope
test
mov
shl
jmp
lock
jmp
bound
sub
mov
adc
test
fwait
sbb
push
pop
imul
jle
dec
inc
leave
in
daa
outsb
jne
leave
lahf
cmp
push
dec
data16
stc
testl
jl
dec
push
arpl
ja
jns
int
fbld
jno
mov
test
mov
data16
out
inc
and
cltd
cmp
sar
push
xchg
adc
and
sbb
insl
jb
cwtl
sbb
div
jns
fiaddl
xor
rclb
repz
jp
jg
rcr
jo
ret
jmp
daa
fs
cmp
inc
xchg
clc
xlat
shrl
pop
mov
sbb
jae
outsb
and
dec
inc
inc
mov
enter
shlb
jle
fs
insb
xor
popf
inc
dec
push
xchg
hlt
mov
mov
jne
cmp
lock
fnstenv
sbb
push
out
jecxz
or
ret
iret
xor
lock
lods
add
pop
aaa
icebp
lret
bound
mov
and
stos
sub
test
xor
mov
sbb
sbb
lds
inc
in
cmpsl
pop
push
or
fmull
xlat
xor
push
mov
push
inc
jl
mov
xchg
xor
cli
cli
mov
adcl
aas
adc
clc
or
mov
fwait
adc
mov
xchg
jne
push
aam
jae
pop
jns
jns
adc
cwtl
mov
pop
sbb
adc
and
aas
in
cmovno
pop
and
aaa
outsl
bound
xor
jbe
dec
pop
pop
fadd
ret
and
lahf
mov
stos
xor
mov
adc
sub
aad
and
mov
cmp
aam
pusha
add
mov
xchg
pop
push
jle
loopne
dec
xlat
aas
shll
stos
in
xor
mov
repnz
sub
xchg
jbe
lods
test
sub
mov
outsl
inc
pop
add
das
shr
mov
lcall
scas
stos
pushf
or
ds
inc
xchg
aas
lahf
lcall
sub
fistl
jmp
fs
fldcw
aad
rol
pop
add
ljmp
mov
ja
dec
stc
mov
sbb
and
add
xchg
cmp
leave
lcall
aas
je
faddl
sbb
daa
rcll
call
push
loop
push
dec
adc
sub
loope
sub
movsl
push
rorl
test
xor
pop
jno
push
cli
pop
adc
lret
in
add
lods
sti
xor
xchg
iret
cmp
or
adc
jb
dec
or
and
sub
pop
or
xor
jne
movsb
rcrl
sbb
test
sti
xor
lcall
and
cmp
jno,pt
xchg
jb
jno
jmp
test
or
pop
jg
push
push
inc
cmc
icebp
dec
js
or
inc
inc
bound
push
ret
fmull
cmp
lock
mov
js
lds
xchg
lret
daa
rclb
and
cmp
pop
push
mov
cmp
leave
and
test
jns
cmp
lock
inc
pop
fadds
cmpsl
mov
adc
fistl
pop
cmp
dec
sub
jecxz
loope
xor
cmp
enter
dec
pop
jo
dec
lahf
pusha
sub
stos
sbb
xor
je
movsb
int3
and
xor
mov
gs
mov
dec
sahf
pop
scas
mov
or
movsl
xchg
jg
mov
or
cld
iret
cmpsb
xor
fnstcw
in
pop
lods
mov
rcrb
fisubs
mov
sub
aad
mov
push
repz
push
movsb
imul
int3
jb
test
sub
xor
gs
lods
inc
daa
test
xor
loopne
pextrw
fwait
call
xchg
add
or
jb
sahf
ljmp
push
in
jbe
push
je
mov
cmp
or
inc
scas
outsb
test
jge
jmp
mov
jmp
sub
cmpsb
or
jnp
add
sub
mov
into
mov
pop
les
cmpsl
int
insb
adc
sub
stc
movl
push
lods
dec
lahf
icebp
fbstp
and
dec
jnp
xchg
jae
or
jae
scas
jo
push
lods
fists
cmpb
xchg
cmpsl
jg
packsswb
into
sub
adc
xor
xchg
movsl
xchg
sub
sarb
lret
aam
mov
push
push
xor
imul
mul
mov
pop
fstps
adc
jne
pop
out
popa
ror
sbb
adc
fwait
sbb
in
xor
jo
pop
cwtl
mov
push
mov
push
add
mov
mov
pop
jmp
test
andb
push
and
repz
es
xchg
dec
int3
repnz
lods
std
mov
add
addr16
jno
xor
and
or
mov
daa
dec
xchg
pop
test
and
dec
mov
sbb
mov
out
mov
mov
pop
push
mov
shlb
bnd
in
sbb
push
gs
pop
mov
in
sub
dec
xchg
adc
addr16
cmp
fucomi
xor
insl
ret
test
popa
mov
lds
sti
call
push
and
mov
rclb
lcall
mov
xor
xchg
arpl
inc
inc
je
jecxz
pop
insl
dec
mov
aas
bound
sahf
mov
movsb
xor
loopne
jecxz
ss
adc
sub
push
mov
movsb
mov
xchg
movsb
mov
mov
jecxz
dec
xchg
xchg
inc
inc
sub
adc
ljmp
roll
xor
push
lahf
pop
rcrb
jb
shr
jno
inc
cmp
inc
mov
shlb
stos
or
shll
add
adc
dec
int
push
sub
js
stc
cld
inc
mov
sub
cmp
mov
dec
mov
mov
scas
jnp
int
sbb
imul
jle
sub
inc
lea
sub
lods
aam
jecxz
xor
sahf
popa
adc
or
ds
xor
push
sahf
adc
jl
mov
and
lret
mov
pop
sbb
data16
pop
or
lahf
inc
fistpl
movsl
inc
push
testl
jge
xchg
enter
ja
push
jae
outsl
aas
shlb
pop
and
lock
and
in
insl
or
mov
out
insb
pop
ljmp
cmpsl
test
push
fdivl
xchg
add
hlt
daa
pop
inc
mov
test
leave
jp
lea
jns
stos
and
push
push
enter
jge
lret
xor
ret
or
and
adc
scas
mov
jb
pushf
add
stos
mov
mov
das
push
push
addb
or
xchg
test
dec
sbbl
jp
adc
int
adc
xor
cmp
pop
fs
lds
iret
in
int
lods
or
pop
mov
mov
clc
jb
nop
xchg
enter
and
pop
xchg
mov
dec
sbb
jnp
mov
outsb
add
ds
jno
sbb
adc
popa
lahf
outsl
jle
orb
loope
addr16
xchg
rcl
inc
xchg
dec
dec
arpl
outsl
sub
mov
iret
cli
movl
outsb
insb
lret
sub
ds
mov
mov
fsubrl
cmp
and
push
and
mov
push
mov
lret
fdiv
mov
pop
in
movsb
gs
enter
inc
and
pushf
sbb
mov
icebp
jge
lock
jl
ja
fiadds
push
mov
addr16
addr16
divb
pop
nop
mov
lods
stc
push
sbb
sar
push
ds
jmp
xchg
xchg
xchg
add
xchg
cli
adc
out
cmp
xchg
inc
jp
insl
mov
lcall
jns
leave
stc
mov
es
pop
mov
lods
inc
xchg
shrb
adc
xor
jp
insl
dec
xlat
xchg
pop
shll
sarb
lods
sahf
ja
movsl
add
pop
inc
ljmp
loope
cmpsb
lret
icebp
arpl
cmp
repz
or
pop
pop
jg
jmp
mov
lcall
or
mov
dec
sbb
test
mov
nop
rol
fisttps
mov
shl
loope
xchg
test
negl
xor
adc
push
out
dec
out
loope
movsbl
div
pop
pop
ljmp
jnp
jno
xchg
fcmove
sbb
or
in
orb
bound
jns
inc
repz
fs
out
jnp
dec
and
stos
jge
mov
ret
cmp
fs
add
outsb
inc
shr
imul
jg
push
sbb
jmp
insl
sbb
sahf
inc
dec
cld
cli
fimuls
mov
repz
and
test
mov
cmp
pop
mov
aam
pop
and
shll
mov
mov
andl
mov
lcall
testl
mov
outsb
and
aad
out
pop
into
xor
dec
inc
arpl
mov
cmp
jns
in
mov
aaa
xlat
ljmp
adc
mov
cli
sarl
push
ds
xchg
mov
or
sbb
ds
clc
jne
cmp
jle
or
push
ss
daa
les
jbe
stos
inc
jno
je
xchg
cld
outsb
je
stc
push
orl
fadds
popf
push
leave
push
mov
cmp
cmp
dec
sbb
ja
aas
test
mov
gs
clc
push
lods
jb
mov
add
adc
jo
es
cld
cmc
or
dec
and
inc
shr
sub
daa
cs
arpl
dec
fisubs
lret
scas
shrl
mov
inc
cli
or
push
mov
lds
sub
and
loopne
clc
jecxz
arpl
inc
mov
jno
pusha
inc
adc
sarl
sbb
in
adc
jmp
loope
mov
imul
int
mov
inc
enter
lods
xchg
lret
ret
adc
data16
add
pushf
pushf
sti
or
shrb
push
test
xchg
sbb
adc
aas
jge
pop
cli
lahf
mov
aad
cmp
sbb
shlb
popf
mov
in
imul
jnp
cmp
sub
mov
fwait
div
repnz
push
lret
and
fisubs
sub
out
sub
outsb
popf
mov
outsb
fs
movsl
cmc
jp
mov
dec
sbb
movsl
scas
repz
jmp
jae
in
mov
das
pop
arpl
lret
mov
xchg
jle
xchg
mov
into
std
or
mov
test
add
loopne
cmpsl
insl
cmp
add
add
repnz
stos
lock
ret
inc
adc
add
pop
inc
in
mov
mov
lahf
mov
ljmp
or
icebp
imul
rol
mov
xchg
ficomps
jae
jg
movsl
xchg
mov
pop
ss
xchg
aam
jae
rolb
adc
mov
pushf
xor
pop
xor
bswap
imul
and
loopne
mov
jmp
pop
and
dec
cmp
out
out
or
popa
stc
push
popa
call
iret
push
add
cmc
cmp
imul
sahf
lret
pop
fsub
sbb
cmp
and
shlb
notb
jae
imul
pop
cltd
gs
jle
pusha
pop
js
inc
test
enter
push
add
rorb
icebp
adc
and
jmp
lock
loopne
cmp
stc
xchg
ljmp
mov
out
xlat
mov
repz
xchg
mov
inc
lahf
sub
mov
lea
outsl
rcrb
aaa
imul
fwait
fwait
gs
jmp
adc
xchg
gs
adc
and
sub
fldt
push
lods
inc
dec
pusha
mov
fwait
xor
push
test
adc
cwtl
fsubl
lret
add
cmc
mov
pusha
ds
lds
repz
imul
jnp
pop
dec
mov
jg
sarb
lahf
dec
int
xchg
nop
inc
in
jl
ja
cli
xor
insl
pop
insl
inc
xor
sbb
repz
mov
jmp
push
xlat
jecxz
inc
pop
mov
ja
mov
pusha
pop
sbb
and
pusha
sbb
loop
mov
mov
sar
fbld
and
jmp
roll
ret
add
clc
jb
mov
imul
lea
lea
or
cmp
lds
sti
aas
dec
bound
mov
test
outsl
fsubl
sbb
mov
xorb
pop
mov
mov
mov
outsl
cmp
pusha
repz
adc
ja
decl
jno
cmp
ss
or
adc
dec
sbb
cltd
mov
std
scas
cmp
cmp
xchg
into
cmpb
mov
xor
sub
aam
xor
scas
jbe
cltd
xor
sahf
pop
loope
loope
add
cmp
sbb
ljmp
mov
rcl
jge
fimuls
test
imul
mov
stos
test
sub
pop
call
pop
fisubrl
sahf
mov
push
daa
lock
stc
dec
loopne
cmp
shrl
push
pop
scas
inc
xor
dec
das
in
lret
inc
in
hlt
ja
xor
out
adc
mov
dec
iret
adc
mov
mov
sbb
enter
xlat
cmpsl
or
sub
gs
aaa
mov
xchg
sbb
mov
shr
dec
mov
mov
dec
adc
outsl
xchg
cmp
outsl
xchg
push
sti
mul
and
stc
mov
js
dec
les
out
clc
inc
rcrb
iret
scas
or
aas
hlt
adc
xchg
or
lret
cmpsb
js
cmp
sarl
xchg
pop
sbb
subb
inc
xchg
rcrl
cld
hlt
test
xor
out
cmp
mov
xchg
sub
and
push
rol
cmpsb
jmp
mov
adc
sub
sbb
into
shrl
sbb
add
pusha
aaa
add
push
push
lcall
push
or
dec
add
and
sub
ss
jnp
into
mov
or
and
loope
or
ret
adc
xchg
ljmp
mov
pop
mov
xor
mov
cmp
ja
mov
pop
inc
mov
lar
xor
sbb
cmc
xor
xchg
subb
and
fcmovb
cmc
jg
inc
imul
jns
mov
jno
fdivp
cmc
mov
daa
ja
cmp
lds
sub
in
mov
pop
out
scas
xchg
test
mov
jne
enter
jnp
xchg
lock
hlt
cmp
arpl
lret
sbb
int3
dec
ljmp
test
out
dec
ret
lret
jecxz
jp
add
dec
push
jae
and
je
dec
inc
das
jnp
cmp
add
pop
test
adc
xchg
inc
or
and
mov
insb
cmp
dec
pop
in
push
inc
stos
movsl
xchg
mov
or
bound
lcall
inc
sbb
adc
cwtl
lods
xor
lea
xor
mov
mov
fmuls
xchg
xchg
das
push
fs
mov
out
popf
push
dec
or
fstl
std
mov
enter
mov
pop
lret
xor
stos
mov
insb
aas
inc
ljmp
push
hlt
xor
cmc
addr16
mov
ficoml
jmp
scas
xorl
dec
pop
jae
mov
push
xchg
pop
sub
add
sbb
pushf
test
cmp
mov
loope
push
push
shrb
fs
adc
loop
jnp
xor
mov
pop
push
es
mov
mov
insb
sti
xor
xor
xchg
and
int
jg
ror
leave
cwtl
icebp
ret
jo
cmp
repz
jbe
sub
mov
out
inc
clc
aam
negl
fldt
rclb
cmp
jecxz
sub
mov
mov
sub
ja
lret
cmp
ret
roll
fdivl
xor
mov
xor
jp
mov
xchg
and
ja
test
repz
sub
lret
add
inc
cmp
leave
mov
fists
jp
and
addr16
lcall
mov
ja
sub
stc
pop
mov
fidivl
testb
cmp
mov
jne
mov
dec
mov
xchg
and
es
dec
fildll
adc
pop
loope
mov
inc
sar
cmp
xor
xchg
jmp
rolb
movb
jo
sub
xor
ja
mov
mov
in
inc
jge
sbb
pop
enter
jae
enter
mov
aas
xchg
mov
testl
pop
jns
outsb
and
lcall
ret
push
push
mov
sbb
inc
xchg
xchg
fsincos
pusha
test
or
mov
push
stos
andb
push
mov
dec
and
int3
scas
jb
dec
cmp
xor
loop
test
mov
pop
mov
pop
in
filds
sbb
scas
push
adc
dec
ss
bndldx
jp
ja
fimull
adc
mov
jnp
mov
mov
rclb
jae
inc
std
mov
pop
mov
pop
jecxz
jns
lds
aas
add
xor
in
mov
cmp
test
push
mov
mov
outsl
aad
das
rorb
or
cmpsb
shrb
sbb
inc
mov
adc
xor
push
bound
inc
jmp
cmp
dec
mov
out
ret
jg
inc
out
xor
mov
jne
adc
loop
scas
or
add
ret
mov
inc
insb
mov
add
jnp
xchg
inc
pop
xor
push
cvtpi2pd
pop
pop
dec
or
push
mov
out
mov
mov
setno
daa
mov
and
add
out
mov
sti
xchg
mov
xor
adc
dec
fucomi
mov
aaa
mov
scas
mov
and
push
stc
or
enter
mul
out
out
mov
push
das
push
mov
pop
adc
or
mov
insb
or
mov
out
and
ss
xor
cmc
lahf
jb
rorl
xchg
lock
out
js
enter
push
lahf
out
rclb
lods
cld
sbb
ds
hlt
fs
pop
xchg
outsb
hlt
nop
arpl
cmp
sbb
cltd
sub
jbe
in
aad
mov
xor
sub
pop
adc
fwait
inc
aad
sub
lds
imul
dec
nop
mov
adc
fstpl
xor
inc
mov
test
xor
sub
pop
in
ret
mov
inc
adc
inc
inc
inc
sub
pop
or
cmpsl
lahf
sub
xchg
arpl
lcall
pop
insb
call
jno
jp
arpl
xor
iret
add
fldcw
das
cli
sbb
mov
repnz
or
stos
sbb
outsb
add
sahf
dec
inc
xchg
jecxz
cld
adc
pop
or
sbb
andl
mov
clc
loopne
repz
aaa
popf
gs
movsl
test
inc
adc
or
das
jg
pop
out
cmp
aaa
cmpsl
stos
loope
adc
pushf
imul
xchg
out
sti
inc
fnstsw
xchg
dec
add
test
mov
out
ss
push
mov
xchg
out
ja
pop
scas
hlt
ret
mov
mov
xor
cmp
adc
push
mov
mov
sub
je
sub
push
scas
dec
fisubrl
in
or
push
adc
imul
push
push
lock
sbb
fidivl
mov
outsb
pop
inc
inc
inc
repnz
or
popl
inc
imul
dec
call
mulb
idivb
call
jg
in
xchg
and
movsb
inc
jne
mov
and
rcr
mov
add
sbb
sub
rorl
cmp
ret
push
pop
inc
icebp
test
mov
sub
enter
outsl
loopne
dec
or
dec
iret
jge
mov
push
push
cmpsb
mov
stos
adc
iret
fiaddl
jae
jnp
lock
lods
dec
movsl
or
repnz
pop
mov
pop
or
push
hlt
push
mov
hlt
sub
je
xor
cmp
xchg
and
cmp
imul
adc
xor
je
pop
dec
lods
scas
add
sbb
arpl
in
sti
inc
mov
mov
mov
std
addl
inc
cmp
adc
stos
loope
pop
add
sbb
add
cmp
push
mov
andl
ret
inc
mov
dec
and
dec
test
xchg
mov
call
mov
movsb
jg
xlat
cmpsb
imul
ret
icebp
mov
sub
fiaddl
sub
ja
fsts
sbb
orl
and
jmp
stos
mov
inc
not
push
enter
fdivrl
ja
fisubs
jae
push
adc
cmp
add
and
jmp
or
loopne
push
cmpsl
lock
dec
int
sahf
push
movsb
or
mov
pop
scas
mov
and
iret
inc
test
or
ljmp
dec
mov
rcr
out
test
sbb
aaa
sahf
push
mov
cmp
gs
and
pop
sarl
inc
and
fsubs
in
cmp
fcmovnbe
add
mov
scas
sahf
aaa
lret
lods
push
adc
or
cmp
insl
insl
push
aad
movsb
pusha
push
push
pop
mov
jb
sbb
push
loopne
out
dec
sbb
xchg
dec
and
je
insl
les
push
pop
cltd
sbb
lahf
aam
mov
push
mov
pop
mov
cmp
daa
pop
cli
das
idiv
es
mov
shll
aad
mov
dec
cmpsb
xchg
lock
or
xchg
mov
push
out
jmp
fwait
mov
int3
je
push
adc
repz
test
int3
xchg
lods
int
icebp
dec
jp
shll
das
lock
and
inc
inc
sub
leave
mov
das
mov
shrl
sbb
test
stos
cwtl
jns
pop
dec
jl
inc
adc
dec
mov
mov
mov
mov
mov
lock
pop
lea
or
jmp
jo
int
or
stos
mov
movsl
sti
fadds
jg
iret
or
leave
ss
jp
push
mov
xchg
xchg
add
dec
adc
jne
mov
lods
mov
sarl
das
sub
pop
push
fwait
push
fwait
pop
nop
inc
lock
mov
stc
fs
xchg
xchg
cmp
shll
aas
iret
inc
das
aad
sarl
cmp
ljmp
xor
mov
pushf
add
push
aas
jg
insb
or
jb
add
loopne
dec
fistps
fsubrl
lods
sub
cmpsb
pop
or
pop
and
sub
cmpl
xor
shl
into
mov
insl
test
lcall
shll
lods
mov
orb
cmp
mov
out
mov
jbe
mov
sub
js
lahf
jmp
inc
mov
mov
jbe
lods
std
ds
cmp
outsl
fldl
sub
push
insl
ds
mov
out
jge
scas
xchg
pop
test
sbb
pop
add
mov
std
fs
int3
lea
scas
repnz
mov
fldcw
bnd
xor
pusha
xlat
push
xchg
rcrb
jno
fimull
mov
aam
mov
fsubl
fdiv
and
pusha
mov
fsubl
push
aas
push
cmp
jp
xchg
jbe
or
test
in
pop
jae
or
gs
xor
addr16
cmc
in
lahf
mov
cwtl
test
sub
sbb
sub
or
xchg
and
inc
mov
verw
es
cmc
lret
movsb
and
in
outsl
push
adc
ret
ficoms
gs
xor
and
dec
and
shlb
inc
imul
jg
inc
inc
popa
adc
in
jge
pop
outsb
lret
mov
mov
lret
push
fiadds
mov
cmpsl
insb
mov
bound
scas
fucomip
out
sub
ljmp
test
pop
repz
and
adc
enter
cmp
or
mov
ss
mov
inc
test
xchg
push
cmc
or
dec
jecxz
sub
into
lods
ret
mov
sbb
inc
push
mov
cmpsl
ficomps
ja
ret
and
fs
test
push
xlat
and
outsb
sub
ljmp
movsl
sti
mov
mov
call
add
push
arpl
das
je
lods
in
xor
in
cmp
mov
ret
roll
mov
sub
fidivs
call
or
aam
xchg
pop
stos
in
cli
gs
gs
popa
jae
inc
hlt
iret
cld
sub
cmp
addr16
jge
int3
adc
shlb
sbb
add
pop
fwait
in
es
mov
jmp
mov
dec
scas
xchg
mov
gs
push
addr16
jmp
daa
shll
out
adc
mov
jecxz
sub
sub
movsl
shll
mov
cmc
sti
adc
cmp
sbb
sbb
mov
stos
aaa
dec
mov
xor
ja
test
adcb
add
rcrl
inc
ficoml
or
or
jge
aas
dec
shlb
mov
xchg
jae
stc
lock
cmp
fisubs
sbbl
jmp
dec
sarb
fdivs
jb
lds
cmp
or
and
add
and
outsb
adc
jecxz
test
adc
pop
dec
aaa
mov
fwait
cvtdq2ps
test
jg
dec
lods
pop
jo
add
imul
sub
je
mov
scas
shlb
je
rclb
push
mov
idivb
jne
lock
push
test
insb
pop
scas
orl
jne
cmp
int3
hlt
das
push
in
stc
xor
ja
or
cs
or
mov
dec
and
js
pop
inc
jne
mov
mov
pop
out
jecxz
and
imul
test
es
xor
dec
mov
xchg
aam
and
les
dec
fadds
cmp
or
mov
add
lcall
movsb
fisttps
imul
xor
mov
out
pop
je
cmc
pop
mov
fdivs
sub
xchg
aas
xlat
js
movsl
xchg
cmp
lret
xor
add
aad
xor
inc
imul
sub
aad
jae
xorl
xchg
pop
lret
xchg
jmp
xor
flds
fdivs
xchg
cmp
int3
mov
or
lahf
mov
out
add
test
in
lret
push
cmp
sarl
ss
hlt
lcall
inc
jne
in
lret
hlt
mov
lcall
iret
pop
out
inc
stos
out
test
push
arpl
lahf
cld
adc
push
jnp
fs
repnz
xor
mov
pop
push
mov
add
mov
sub
and
or
mov
sbb
lock
lahf
jno
push
ljmp
push
hlt
shrl
mov
jns
sar
sub
pop
lods
andb
inc
pop
cmc
test
add
ficoml
subl
enter
aaa
fadds
push
add
insb
in
adc
sahf
pop
fistps
jo
movsb
mov
fiaddl
clc
int
aam
sbb
and
in
and
cmp
dec
dec
lea
rcll
sbb
scas
pushf
jae
dec
setno
sub
shlb
add
popa
loop
aas
lahf
cwtl
sbb
jp
in
aaa
mov
pop
lods
sbb
add
pop
jecxz
mov
sti
fmul
xchg
clc
out
negl
and
lahf
lds
mov
fmulp
mov
push
inc
mov
xchg
mov
repnz
sbb
pop
test
fcoml
xchg
loop
lret
dec
insb
ss
sub
mov
xchg
jl
daa
inc
les
repnz
inc
arpl
out
shrl
jb
loopne
pop
inc
repz
aad
pusha
push
mov
std
sbb
fstps
mov
mul
setno
pop
aas
aad
sub
test
add
int3
push
icebp
push
and
rclb
gs
sub
icebp
mov
push
test
sub
movsb
jge
inc
test
jnp
or
int3
loopne
stos
bound
xor
sub
push
cs
mov
pop
sub
mov
xchg
xlat
mov
sbb
and
or
mov
cmpsb
scas
sub
or
shrb
xor
adc
sahf
pop
orb
sub
cmp
aad
lods
inc
inc
sub
mov
mov
xlat
sub
cmp
sub
xchg
flds
ret
lcall
cmpsl
fwait
cmpsb
mov
sub
lea
xor
fwait
push
xchg
pushl
fwait
pop
cmp
shrl
mov
mov
mov
xchg
scas
out
mov
inc
sbb
add
imul
insb
and
cs
cwtl
testl
test
mov
or
xchg
xor
outsl
xchg
sub
fimuls
xor
in
mov
adc
xor
jnp
xchg
ja
out
push
xlat
pop
xchg
stc
mov
inc
mov
aam
push
xchg
cmpsb
addr16
movsb
push
and
movsl
in
xchg
scas
mov
or
shll
out
mov
inc
in
cltd
outsl
xchg
outsl
jmp
cli
adc
in
cmp
push
les
addr16
pop
and
mov
push
sbb
enter
and
add
xor
out
fdivrs
and
cli
add
sbb
jo
hlt
loop
mov
mov
lcall
mov
and
mov
mov
push
loope
lds
mull
aaa
pushf
mov
sbb
cmpsl
mov
push
cmp
pusha
test
sbb
xchg
das
call
mov
stos
aas
stos
pop
cmpsb
imul
js
and
cmp
mov
cmc
mov
arpl
in
mov
cmp
adc
add
mov
jae
into
pusha
loope
loopne
sahf
push
loop
fistl
icebp
sbb
cli
popf
outsl
pop
sbb
loopne
aaa
cmp
rcr
mov
dec
cmc
add
jo
fs
imul
popa
and
rcrl
arpl
push
ljmp
mov
add
mov
inc
orb
fs
add
mov
aam
gs
lea
mov
daa
int3
int3
jb
sbb
mov
arpl
call
and
xchg
or
xchg
push
std
jbe
xchg
cmc
push
jmp
gs
shl
or
loopne
xchg
dec
pop
inc
jae
jge
aas
adc
adc
sbb
cmpsl
or
mov
movsb
sbb
push
lea
push
shll
scas
lods
sub
loop
inc
mov
shlb
out
aas
in
leave
push
pop
mov
insb
mov
call
in
push
add
dec
icebp
mov
call
sti
mov
testb
sbb
sub
xor
push
jo
sbb
pop
sti
aad
pop
sbb
imul
cmp
lret
lret
aam
or
bound
mov
inc
cli
shlb
push
cmp
mov
jnp
in
pop
mov
xor
mov
xchg
in
fcomps
ljmp
ja
sbb
dec
sbb
pop
push
loop
dec
jne
aad
scas
into
mov
sub
mov
dec
xchg
cmpb
out
lcall
outsl
loopne
shrb
pop
imul
lods
out
stc
enter
out
mov
fcmovne
outsb
push
mov
cmp
cmpsb
fdivr
fstl
int
cmc
xchg
jl
sti
shl
xor
outsb
mov
and
lahf
mov
sbb
mov
mov
test
fs
push
das
adc
add
jns
xchg
dec
xchg
das
adc
adc
adc
test
push
dec
stos
repz
out
cli
stos
jb
xchg
add
mov
cmpsl
scas
scas
fidivs
push
test
mov
sub
adc
sub
stos
sti
cli
lahf
mov
cmp
rcrl
gs
es
jecxz
fcmovb
mov
cmp
mov
dec
pop
push
inc
cmpsl
push
stc
cld
dec
mov
imul
dec
xchg
or
fdiv
pop
xchg
arpl
pop
je
stc
sarl
orl
push
ljmp
leave
inc
xchg
push
repz
xchg
sub
divb
cwtl
sbb
and
adc
mov
jbe
je
leave
mov
call
in
test
inc
imulb
pop
js
arpl
xor
pop
jg
adc
sti
xor
lods
jae
lret
std
ljmp
mov
repnz
scas
add
in
jge
mov
and
ds
cwtl
or
xchg
inc
xor
pop
mov
mov
scas
vpsubsw
push
call
xor
xor
movsb
loopne
ja
jecxz
sbb
push
aaa
pop
cmpsl
mov
jge
fildl
stc
jbe
mov
sub
loope
inc
inc
dec
sub
neg
push
repz
repnz
loop
dec
sbb
inc
ret
stc
pmaddwd
push
and
shrb
fistpl
mov
pop
push
cmpsb
je
sbb
pop
idivl
cmp
or
sub
and
test
sub
adc
pop
xchg
lock
pop
pop
mov
pop
hlt
dec
push
inc
mov
sub
and
and
xor
subb
mov
les
cli
fsubl
jl
mov
call
xchg
dec
std
xchg
inc
imull
lret
jnp
mov
cmp
and
jl
xor
inc
cmp
jno
mov
inc
sbb
lea
mov
push
cltd
mov
jnp
sub
out
xchg
push
clc
mov
iret
mov
mov
sub
test
mov
out
test
fistpl
std
mov
xor
sub
sbb
jg
aam
loop
cmpsb
aaa
pop
xchg
clc
and
jp
mov
add
lahf
loop
bound
std
xlat
xchg
fcoml
dec
data16
mov
xchg
sbb
arpl
mov
cmpsl
in
pop
mov
inc
into
sbb
push
movl
aad
xchg
into
pop
inc
mov
pop
rep
sbb
xor
addr16
jnp
inc
dec
sub
rol
jle
push
fildll
or
rcll
push
imul
or
shrl
int3
push
pop
movsb
lods
mov
cltd
arpl
scas
daa
cmp
hlt
or
sbb
push
out
inc
aam
test
cmpsl
and
int
scas
xchg
daa
lock
aad
loope
pushf
sub
dec
loop
shll
ret
imul
movsb
das
in
test
imul
ljmp
ljmp
bound
sbbb
cmpb
xchg
or
xchg
pop
fildll
mov
xbegin
xor
lret
mov
mov
ss
addb
insl
sub
stos
mov
xor
inc
push
push
rcrb
cmpb
inc
clc
inc
lea
add
xchg
fistpll
sbb
imul
jecxz
mov
clc
push
or
jb
and
into
sbb
push
in
je
push
pop
jnp
cmpsl
rcll
or
sub
sbb
cmpsb
and
cmp
mov
pop
das
in
push
jge
ja
mov
add
cmp
cmpsl
and
xor
fcmovnu
fsubr
jmp
xchg
fs
sbb
add
adc
or
stc
imul
cs
shrl
hlt
shll
clc
mov
loopne
je
mov
sbb
mov
pop
fbld
pop
sbb
xchg
xchg
stc
push
sub
add
movsl
cmp
gs
jg
add
fisubrl
xchg
xor
mov
fisubl
add
les
dec
pop
add
leave
and
jle
xor
push
xchg
push
dec
clc
test
dec
leave
rclb
jle
scas
daa
lea
push
mov
sarl
aas
mov
mov
pop
pop
ret
fsts
mov
mov
aas
mov
mov
add
adc
ret
mov
xor
data16
adc
lods
test
xor
cmpsb
cmp
iret
mov
push
and
testb
in
shrb
push
hlt
rorb
test
clc
fidivs
rorb
jl
mov
dec
imul
dec
fildl
or
aaa
shrb
pushf
mov
leave
mov
and
inc
pop
add
lods
mov
pop
iret
pushf
adc
dec
inc
add
cmp
in
imull
imul
jp
je
lock
jl
pop
int
jecxz
cmpsb
mov
imul
lea
xor
sub
sarl
sbb
jbe
mov
dec
bound
or
pop
mov
xor
mov
adc
repnz
pop
pop
cmpsb
ret
movsl
mov
arpl
cmpl
pop
push
and
mov
pop
add
xor
add
xor
cmpb
jno
push
push
mov
mov
xchg
shll
outsl
inc
popa
test
xchg
sbb
push
push
jo
push
add
nop
filds
dec
dec
and
push
pop
or
mov
xadd
aaa
sbb
js
pop
sbb
xor
add
in
pop
mov
add
or
shll
pop
inc
negb
mov
mov
insl
pop
cmp
mov
push
inc
addr16
mov
shll
leave
aas
fisttps
int3
pop
loop
testl
scas
pop
adc
fchs
in
xor
mov
fwait
je
clc
push
inc
mov
push
in
fdivrl
pop
cmp
cs
sub
mov
lock
and
and
stc
fninit
sbb
mov
loop
sbb
lds
ss
xor
loope
and
mov
sbb
mov
in
cmp
imul
mov
cmp
cltd
mov
pop
add
jle
pop
lahf
dec
cmpsl
inc
mov
mov
loope
mov
popa
std
jnp
sub
rolb
in
loope
cmc
insb
clc
xchg
mov
out
testl
push
push
arpl
repnz
push
fstpl
in
mov
scas
mov
ja
enter
shll
cmp
aad
movsb
xchg
dec
dec
insl
outsb
mov
cld
fsts
mov
push
jbe
cwtl
lods
and
pop
test
jbe
fs
pop
aas
push
mov
aam
dec
pop
scas
push
aad
xchg
add
in
push
fistl
mov
fcoml
pop
cmp
in
roll
pop
pusha
enter
fidivl
out
mulb
inc
in
nop
push
gs
sub
sti
pop
dec
add
sti
lods
xchg
and
or
loope
pop
test
mov
xchg
xchg
cmp
xor
mov
and
adc
adc
and
gs
or
adc
popw
movsl
cmp
mov
bnd
push
mov
push
inc
addl
inc
mov
mov
inc
loope
mov
cli
movsl
or
sub
jmp
mov
sti
xor
add
stos
xchg
dec
inc
movsb
mov
int3
or
enter
xchg
dec
leave
mov
and
or
int
sub
sub
adc
sbb
or
dec
scas
sbb
dec
fiadds
push
out
dec
fisubrs
add
xchg
test
shlb
mov
xor
pusha
stos
mov
lods
jo
dec
lods
std
arpl
and
sub
inc
cmp
push
ja
dec
lds
adc
push
dec
sbb
cmp
and
decl
dec
cmp
and
in
imul
outsl
movb
movsb
jnp
add
push
aam
dec
push
push
mull
jne
loopne
pop
sbb
mov
out
push
adc
xchg
inc
sti
fstpt
or
cmp
movsl
xchg
cltd
add
or
add
notl
xchg
mov
jge
mov
add
test
stos
jl
mov
add
adc
test
dec
adc
cmp
insb
faddl
enter
stos
repz
mov
jns
enter
and
cmc
outsl
inc
lds
pushf
mov
aas
jp
inc
and
fstps
jo
jecxz
fldl
and
loope
icebp
insb
pop
subl
test
xor
and
shlb
mov
outsb
xor
sbb
imul
mov
inc
jge
enter
call
pop
or
pop
shl
loopne
stos
icebp
addl
dec
mov
les
jp
push
mov
mov
jmp
test
pop
mov
sub
mov
fisubs
das
test
inc
dec
dec
sub
pop
push
or
cmp
xor
add
lods
cltd
jle
stos
pop
xchg
mov
adc
push
std
cmpsl
inc
scas
out
pop
pop
loope
imul
inc
insl
test
rorb
addl
mov
xor
push
adc
pop
cmc
insl
xchg
les
inc
and
aas
jle
shlb
movsb
sbb
orl
lret
sub
adc
push
or
lret
in
popa
and
sub
mov
mov
push
jo
outsb
jg
jno
sbb
adc
das
orl
inc
lcall
add
push
mov
push
repz
je
and
xor
aam
cmp
mov
test
mov
and
push
lret
adc
aaa
xor
mov
les
add
sub
aad
sbb
dec
dec
es
mov
push
xchg
in
sbb
pusha
js
rcrl
je
and
iret
mov
push
stos
jg
repnz
loope
push
call
insl
cmp
push
cmpsb
fimull
out
cmpsl
js
aad
mov
mov
mov
sahf
add
in
xor
mov
mov
out
daa
mov
popa
hlt
orl
push
jge
xchg
movsb
sub
aad
jl
push
push
shrb
pop
xor
mov
jne
push
sub
das
mov
cli
ja
mov
push
js
jo
pushf
mov
and
lahf
dec
sbb
xor
sbb
add
daa
jae
ss
dec
add
stos
inc
std
ficomps
jb
mov
xchg
or
pop
or
insl
adc
mov
movsb
fidivrs
leave
jl
adc
xor
pop
add
xchg
adc
push
pop
ljmp
and
mull
mov
jb
repz
jno
leave
mov
pushf
sahf
pop
lret
sub
mov
mov
xchg
cmp
sbb
insl
daa
mov
arpl
or
jns
jle
or
jne
xchg
aas
and
std
cmp
mov
cmc
xor
jge
sub
lock
cmp
mov
xor
out
jle
data16
inc
push
xor
cmp
ret
sbb
xor
cmp
mov
cld
arpl
xlat
sbb
invd
gs
cmp
add
dec
enter
stos
jge
add
push
mov
cmp
or
or
adcl
adc
jns
loop
jo
divl
nop
xchg
adc
test
mov
push
aaa
out
shll
lods
out
push
mov
inc
and
sub
pop
scas
dec
mov
or
addr16
shlb
push
sub
pop
cmc
mov
adc
xchg
arpl
pop
inc
or
cmp
mov
xchg
adc
mov
push
jge
loop
push
fdivrs
lods
jecxz
xchg
int
xchg
mov
xlat
cmc
or
enter
ret
xchg
negl
pop
insb
mov
add
mov
cltd
fcmovu
pop
fs
pusha
hlt
xor
ficoms
jae
hlt
icebp
in
mov
sahf
mov
mov
jno
out
leave
idivl
push
mov
mov
and
mov
cltd
pusha
and
inc
adc
frstor
cmp
test
push
mov
test
sbb
inc
push
sbb
orb
pop
in
inc
shll
adc
lahf
add
add
js
lock
xor
sbb
ds
add
test
jno
dec
mov
out
adc
in
and
pop
fstl
and
sub
out
fidivrl
into
iret
push
fildl
pop
pop
push
mov
int
call
and
or
xchg
mov
pop
lret
ret
cmc
lahf
xor
std
enter
outsl
cmp
lock
jne
jg
pop
xor
sbb
xor
mov
mov
outsb
scas
xchg
pop
sbb
popa
xchg
push
sub
xor
and
clc
and
stos
in
add
dec
enter
out
enter
xor
xor
pop
lods
fidivs
test
pushf
nop
leave
stc
xchg
add
lock
push
andl
xor
icebp
out
nop
or
cmp
lea
mov
xchg
call
dec
sbb
addr16
fistl
push
sub
sbb
add
lea
or
or
xchg
push
pop
push
test
addr16
mov
fimuls
sub
aam
or
add
sbb
mov
scas
pop
adc
lds
popf
fiaddl
cmpsl
ret
jp
xchg
pop
inc
cmp
sarb
leave
cld
repz
cmc
push
fistps
pop
dec
das
test
data16
push
mov
mov
pop
ret
insl
or
in
imul
lea
push
mov
inc
fwait
dec
cwtl
jns
repnz
add
xor
push
hlt
pop
and
hlt
popl
in
inc
mov
cld
cmpsb
mov
add
cltd
hlt
jp
addr16
pop
stc
and
aad
mov
dec
xor
test
stc
xchg
addr16
roll
sbb
adc
xor
pop
and
jno
rcrl
pushf
das
jge
daa
movsw
aas
es
dec
add
ljmp
roll
sub
cmpsb
cwtl
fwait
and
movsl
test
push
cmp
fiaddl
cld
lahf
imul
inc
push
outsb
js
push
add
push
fstpt
das
sarl
push
dec
adc
stc
out
call
xor
ror
adc
iret
jno
popa
sub
mov
les
outsl
inc
cmp
fs
or
aas
aad
adc
mov
jecxz
sub
push
mov
mov
jno
mov
rorl
int3
push
fistpl
mov
mov
dec
lods
sbb
cmp
xchg
xchg
das
mov
cmp
fisubl
mov
inc
jmp
cmp
dec
xchg
or
sahf
cmc
jp
cld
mov
mov
popf
dec
sti
add
inc
ljmp
mov
jp
dec
outsb
ss
push
scas
pop
mov
mov
jmp
jmp
int3
pushf
xor
mov
push
and
sub
shrd
or
je
xchg
inc
sbb
movsl
ret
inc
icebp
cli
jg
insb
cmc
fsubl
sbb
hlt
call
loopne
fisubl
addr16
insl
clc
adcb
stos
ljmp
jns
scas
sub
adc
iret
cmp
shll
sahf
sahf
mov
in
push
push
jnp
pop
xchg
stc
repnz
push
loope
enter
or
pop
ljmp
inc
jo
add
sub
sub
mov
out
pop
scas
inc
scas
adc
xlat
call
fwait
push
add
sub
popa
inc
and
out
or
dec
add
enter
mov
dec
xor
clc
xchg
push
adc
or
lods
xchg
mov
stos
push
xor
outsb
je
ja
pushf
xchg
inc
popf
lock
fxch
mov
add
lahf
mov
clc
push
or
push
aas
and
imul
cmp
dec
es
push
jle
orl
push
mov
call
in
std
jbe
dec
insb
sahf
and
xchg
fcompl
mov
cltd
cmp
inc
jo
add
pop
mov
dec
sbb
cmpsl
mov
pop
negl
xlat
mov
ror
ret
jle
pop
push
addr16
push
sub
cs
adc
adc
jno
inc
cltd
xchg
and
or
roll
aaa
jl
inc
dec
frstor
iret
jmp
push
dec
iret
out
mov
imul
ja
or
cmc
sbb
sub
jb
sbb
dec
dec
pop
push
imul
xchg
aam
bound
scas
sbb
mov
mov
xor
lods
fwait
add
frstpm(287
jmp
insb
cmp
dec
pushf
mov
call
aam
mov
push
mov
jnp
inc
push
insb
sub
outsb
mov
insb
dec
cmc
in
insl
mov
sbb
inc
in
jnp
pushw
push
repnz
mov
or
jns
iret
dec
out
sub
inc
add
dec
out
sbb
insl
lcall
cltd
dec
jnp
inc
lahf
arpl
add
lahf
cmc
call
mov
push
popa
jge
ss
mov
mov
imulb
xchg
xchg
mov
mov
fs
jp
aad
lahf
ljmp
inc
cmc
je
mov
push
mov
pop
fucomip
cmp
in
fs
pop
ror
out
jbe
inc
xchg
xchg
push
xchg
out
jle
push
jb
jge
ss
mov
repnz
outsl
das
fwait
mov
or
enter
lret
add
ret
pop
sahf
fsub
push
ds
push
dec
jo
mov
ucomiss
imul
push
push
iret
xchg
or
cmpsb
xchg
jmp
inc
loope
stos
adcb
adc
pop
mov
add
xor
repnz
mov
sti
dec
call
cmp
adc
add
mov
repz
pop
sbb
mov
mov
loopne
add
daa
mov
mov
in
jb
sub
sbb
repnz
adc
jl
inc
or
xchg
ljmp
mov
stos
mov
lods
dec
sbb
pop
or
add
rcl
mov
jge
pop
mov
inc
mov
inc
sub
cmpsb
shr
lret
adc
push
sbb
mov
cld
ja
inc
nop
fs
xchg
push
jge
imul
mov
mov
jp
insb
mov
inc
out
pop
sbb
cltd
fisttpll
imul
pop
les
ja
fdivl
into
cmp
loop
mov
mov
inc
inc
jno
aas
das
lods
add
cmpsb
mov
movsl
outsl
pop
or
out
jb
cmp
jae
icebp
es
shlb
mov
shl
imul
and
dec
mov
mov
cs
mov
je
lea
sbb
xor
lahf
jns
arpl
pop
fisttpl
imul
shlb
int
cmpsb
movsl
jnp
loope
mov
loope
xlat
fstl
cwtl
aas
pop
pop
pusha
xchg
movsb
xrelease
mov
xchg
popf
in
in
lds
daa
pusha
xchg
xchg
or
iret
pop
mov
mov
mov
enter
je
into
ja
cmp
mov
mov
std
add
lds
rcrl
push
dec
clc
adc
adc
mov
les
into
insb
mov
hlt
jno
lock
outsb
scas
aad
addr16
leave
aaa
loope
xchg
rorl
in
sub
jge
aad
lds
and
movsl
aam
jmp
or
mov
arpl
in
cmp
or
js
inc
xchg
pop
pop
cmp
lock
jl
mulb
push
and
mov
mov
test
inc
adc
mov
pop
xor
jnp
iret
lods
mov
addr16
out
testb
in
xor
cmpsb
adc
adc
sbb
or
inc
mov
pop
addr16
pushf
cmpsl
jg
out
in
in
test
aad
mov
ja
or
jnp
inc
adc
fists
lds
dec
les
add
popa
orb
fs
out
sti
adc
sbb
mov
xchg
pop
rolb
jne
shl
out
sub
mov
jns
sbb
dec
mov
sti
or
sbb
add
sub
stos
daa
pop
mov
pop
jecxz
inc
sub
pop
mov
lods
popw
sbb
cli
fwait
mov
aam
mov
mov
fildll
and
test
xchg
add
mov
mov
xchg
mov
out
and
pop
sar
test
test
add
cwtl
roll
outsb
mov
dec
dec
cmp
adc
or
sub
fisttps
or
test
arpl
aaa
lahf
cmc
lret
add
sbb
gs
push
lret
movsb
sbb
mov
dec
inc
out
loopne
test
dec
fcompl
in
jg
jo
lods
mov
ljmp
sub
mov
and
sbb
adc
push
rcl
dec
push
es
shr
sbb
nop
pushf
outsl
loopne
mov
test
adc
push
in
push
xor
jnp
or
mov
repz
pop
adc
aam
and
das
xlat
jbe
mov
aad
lret
adc
jp
mov
fstpl
xor
dec
jmp
push
fs
imul
jns
outsl
mov
sbb
out
jl
int3
ret
loop
xchg
xchg
xchg
mov
imul
ds
rorb
mov
lods
push
jp
mov
sbb
mov
adcl
mov
xchg
pop
ret
fwait
xor
xor
dec
repnz
push
push
xchg
pop
xchg
mov
jle
sub
jo
and
adcl
jl
sti
sbb
sbb
lahf
test
lahf
jecxz
movsl
iret
mov
or
jo
lcall
imul
push
stos
aaa
fiaddl
push
repz
mov
cmp
iret
sbb
ss
push
adc
sbb
mov
in
or
es
scas
ja
jmp
inc
adc
pop
jge
mov
loopne
mov
cmpsl
mov
cmpsl
adc
divl
in
test
dec
js
les
js
popf
aam
mov
lahf
stos
loop
dec
jecxz
lea
or
add
or
arpl
rol
jne
fcoml
lods
pop
inc
in
mov
push
jecxz
sbb
loop
lods
and
lret
rcl
lea
loopnew
ds
pop
popf
sbb
repz
jbe
jbe
hlt
sbb
xchg
inc
cmp
cmp
add
xor
cmpsb
mov
loope
xor
inc
ret
out
mov
push
ljmp
cmc
aas
stc
or
adc
xor
jmp
test
cmp
lods
testl
or
push
and
push
ljmp
cs
in
mov
cmp
push
dec
or
xorb
js
outsl
daa
sub
icebp
or
stos
mov
and
fucomip
cmc
sbb
xchg
cmp
out
jae
icebp
mov
pop
mov
lcall
cmp
or
or
xor
xchg
jb
cmp
cli
subl
pop
pop
jge
je
mov
inc
and
dec
scas
xor
fnstcw
jbe
jmp
fdiv
out
push
xchg
fadd
add
imul
mov
add
fidivl
in
movl
push
addr16
inc
cmpb
xchg
loope
jns
imul
xchg
cltd
ret
pop
mov
xchg
in
jne
sub
repnz
jno
mov
loopne
inc
cmp
loopne
shrl
rcrl
aas
dec
jne
or
push
add
sbb
pushf
lds
pop
sti
pop
cmp
mov
pop
dec
jae
enter
add
mov
sub
iret
or
int
mov
xchg
mov
mov
cli
lds
lcall
xchg
xchg
sbb
cmp
pop
inc
cli
xor
and
movsb
pop
inc
mov
pop
outsl
std
cmc
stos
cmp
pop
test
sub
std
cmpsb
jle
sti
negl
loop
sub
and
inc
dec
push
test
sbb
repz
cltd
pop
sub
jo
lock
addb
rorl
out
and
mov
outsl
ja
sbb
cmpsb
stos
lret
push
fcmove
cmp
cmpsb
arpl
in
in
jecxz
sub
hlt
shrl
enter
jae
xor
xchg
movsb
cmpl
xchg
xor
test
jnp
jno
adcb
icebp
mov
in
or
out
cmp
sbb
gs
sub
sbb
and
nop
dec
rorl
pop
shrb
dec
mov
mov
call
and
cmpsb
movsb
sbb
lcall
mov
divb
sti
outsb
bound
mov
fcomi
pop
or
xor
inc
call
repnz
fbstp
push
push
add
fmuls
adc
pop
jg
sti
inc
push
mov
pop
sbb
pop
mov
jle
lcall
imul
cmpsl
and
mov
xchg
lcall
or
mov
or
sti
push
push
rclb
fsts
les
inc
fidivrl
sbbl
aas
fwait
sbb
jle
shll
lock
lea
and
es
xchg
out
and
movsl
cmpsb
sub
push
int3
mov
add
push
or
inc
push
pushf
jno
iret
fldt
mov
insl
orl
mov
mov
jbe
fisubl
inc
sbb
test
jns
xchg
scas
outsb
and
sbb
outsl
push
fdivrl
xchg
int3
mov
sti
push
cwtl
push
mov
push
ljmp
mov
xchg
das
inc
test
xor
cmp
nop
xor
lret
xchg
mov
mov
mov
mov
lea
cmp
jp
inc
and
hlt
add
pop
cli
push
push
lods
mov
ficomps
add
dec
push
dec
ret
sti
push
push
les
popa
xor
int3
adc
mov
jb
scas
adc
push
cld
fmull
out
adc
xchg
sahf
mov
ret
inc
orl
movsl
hlt
add
mov
jge
ljmp
mov
mov
sub
pusha
sbbb
in
and
in
jb
stos
mov
mov
aas
leave
enter
pop
mov
fmull
movsb
cmpsl
lea
jp
push
stos
das
hlt
jp
repz
and
add
loop
mov
outsl
push
lods
movsb
mov
es
loope
xchg
mov
or
and
dec
xchg
aaa
or
push
cmp
or
out
push
dec
xchg
pushf
jecxz
jge
dec
xchg
inc
and
xchg
inc
push
sub
add
imul
das
pushf
fs
mov
stos
xchg
inc
sub
cs
lds
jne
sub
inc
mov
and
sub
subl
sub
outsl
dec
push
sub
rcrl
add
mov
enter
push
dec
cmpsb
pushw
dec
and
sub
iret
aaa
sub
mov
ljmp
adc
hlt
or
push
sbb
arpl
inc
cli
xor
xchg
inc
cld
aad
inc
mov
ds
repnz
int3
shl
bound
adc
fistpl
mov
push
inc
nop
pop
fildl
loope
dec
xor
pop
pop
mov
add
daa
das
insl
rclb
cmp
pop
addl
mov
xchg
jge
ja
or
sub
movsb
push
aas
dec
ds
mov
aas
sbb
cmpsb
pop
ret
or
sbb
add
xor
mov
dec
ss
es
dec
bound
inc
xchg
stos
mov
lods
or
pop
test
adc
ds
je
bound
sbb
icebp
pop
fdivl
add
inc
pop
lret
pop
movsb
lds
xchg
inc
sbb
out
mov
pop
mov
dec
add
fcomps
mov
es
mov
add
sub
mov
sub
jnp
add
inc
out
jo
js
cmpl
mov
mov
inc
sbb
pop
cli
cmc
fisubl
rcrl
call
sub
aas
inc
add
inc
movl
jle
xor
jno
push
test
insb
mov
cld
es
in
cmp
pop
pop
mov
sbb
sahf
fsubl
dec
jp
lea
fcmovnu
lahf
cmp
cwtl
test
aad
test
xor
aaa
sbb
mov
push
pushl
pop
cmp
rcpps
je
xchg
xchg
ret
inc
mov
and
bound
sub
mul
aaa
or
mov
aad
mov
or
rcll
ret
xchg
fidivs
mov
aam
add
mov
sub
mov
cmc
push
jne
loopne
ja
xchg
mov
pop
das
insb
dec
dec
ret
jns
mov
dec
mov
push
bnd
adc
inc
push
clc
dec
sub
ja
and
pusha
xchg
sbb
loop
and
cmp
in
sahf
cmovg
mov
hlt
lods
or
xor
data16
inc
fcos
pop
gs
stc
daa
and
or
imul
enter
out
aam
fs
inc
dec
push
cld
imul
enter
pop
or
or
shrb
mov
mov
fcmovb
sub
adc
push
ds
scas
cmp
loop
orl
addr16
mov
xchg
nop
ret
xor
adc
xchg
loopne
hlt
pop
mov
in
xchg
sbb
cmp
outsb
push
xchg
dec
aad
movsb
mulb
push
lods
dec
lods
xor
lock
mov
cmp
lahf
and
stc
into
or
les
push
sub
mov
mov
push
mov
adcb
mov
mov
jp
push
repz
fcoml
loope
mov
ret
sbb
jae
aaa
xor
jmp
pop
sub
xor
adc
or
sbb
iret
mov
lea
inc
add
cwtl
push
xchg
aad
mov
shrl
cmp
and
fmull
aad
dec
dec
add
add
cld
lods
test
cli
adcl
inc
mov
lea
xchg
into
out
imulb
add
in
fwait
fwait
imul
fstps
inc
xchg
xor
xor
add
sub
push
in
push
mov
inc
cmpsl
sbb
clc
cmpsb
icebp
pop
stos
sub
aad
bound
fstpt
insl
popl
adc
cmpsl
pop
daa
pusha
hlt
sub
inc
jnp
mov
test
aad
lock
sub
push
mov
jle
xchg
mov
loopne
clc
pop
rcl
push
xchg
mov
mov
push
rolb
out
jp
mov
outsl
xchg
outsb
scas
add
int
test
mov
dec
data16
mov
aam
paddw
ret
gs
dec
stos
inc
ja
insb
adc
lret
adc
or
aas
adc
xchg
inc
jnp
sbb
sub
shrl
push
mov
and
in
and
jle
xchg
push
lret
dec
cmp
or
leave
xor
leave
dec
add
mov
cmp
clc
jl
loop
sub
insb
sub
aam
aas
mov
push
in
jp
cmp
jnp
bound
mov
aad
or
adc
addr16
add
or
sbb
sahf
xchg
ljmp
fstpl
shrb
adc
add
push
push
or
adc
sub
mov
sbb
leave
or
dec
inc
sub
shufps
push
repnz
push
js
es
adc
mov
test
sbb
in
test
cmp
movb
scas
sbb
push
cmpsb
lcall
cli
push
adc
jge
adc
stos
imull
movsl
lcall
ss
out
mov
aam
sahf
clc
xchg
jae
notb
mov
xor
xor
data16
sub
add
ja
cmp
or
xor
xchg
push
das
icebp
adc
fwait
cli
mov
xor
pop
das
aas
mov
leave
dec
sub
jnp
mov
aaa
fadd
pop
inc
cmpsl
addl
repnz
mov
push
mov
mov
inc
cmc
shrl
cld
dec
mov
dec
clc
mov
ljmp
les
xor
mov
and
xchg
cmp
push
cwtl
pushf
and
dec
fs
and
aad
sbb
jnp
iret
sub
mov
pop
xor
sub
imul
cld
mov
stos
and
cli
mov
bound
pop
jbe
insl
xchg
dec
mov
ja
test
sub
fildll
outsl
push
sahf
scas
xor
xchg
push
jns
pop
mov
mov
cmp
daa
push
sub
and
and
and
and
pop
jnp
pop
adc
insb
mov
ficoms
xchg
jne
orl
or
aad
fistps
sbb
pop
and
jl
mov
cmp
in
stos
stos
push
sub
lret
rcrb
and
mov
imul
scas
cmpsl
test
test
add
jno
dec
std
mov
sbb
insl
inc
scas
dec
dec
aad
sbb
pusha
or
xchg
arpl
cs
dec
pusha
adc
cmp
xchg
and
adc
push
inc
in
push
sbb
fmull
add
mov
loope,pt
push
xchg
sahf
cmp
sarl
dec
scas
sub
sahf
sub
lcall
add
cmp
mov
xor
push
movsb
xor
out
pushf
push
jge
inc
fsubs
jle
pop
fcoms
mov
mov
push
mov
mov
lahf
mov
cmp
xchg
movl
js
dec
out
cmpsl
notb
mov
jno
mov
fdivs
enter
cmpsb
mov
mov
subl
mov
in
or
test
sarl
and
jecxz
and
adc
jbe
fistpll
push
sub
push
push
mov
mov
sbb
xor
fcompl
lret
int3
in
push
bound
and
and
in
in
pop
xor
inc
ret
stc
adc
es
popa
aam
fwait
pushf
fistl
gs
mov
out
jg
test
add
xchg
sub
lock
adc
mov
ja
sub
bound
orl
sub
dec
leave
or
and
pop
fidivrl
pop
cmp
lods
in
push
les
mov
lea
pop
fldt
rcrl
les
aaa
loopne
pop
push
push
cwtl
imulb
cmpsl
push
ds
push
mov
cmp
xor
add
inc
mov
leave
xorb
sbb
sub
sub
out
pop
mov
mov
cld
aas
jge
popa
and
or
out
and
jb
loop
jns,pn
scas
ja
leave
lock
test
addr16
cmpsl
sahf
lods
movsb
inc
push
sbb
fwait
pop
sbb
cs
loopne
mov
js
fstpt
mov
enter
cmp
lods
and
xchg
adc
loope
js
sub
fwait
jl
xor
gs
xlat
es
aam
shlb
inc
jge
fdivrs
data16
mov
inc
jmp
orb
ds
sti
out
pop
imul
jns
jns
dec
addr16
data16
dec
imul
fiaddl
unpckhps
pop
pushf
adcl
cmp
rclb
xchg
fs
mov
jl
jbe
jo
iret
and
repz
je
icebp
les
clc
mov
mov
mov
adc
cmpsb
dec
push
les
in
pop
add
xor
inc
jg
out
and
dec
jne
push
lret
mov
lods
fs
push
mov
mov
rcr
xor
sbb
xor
lds
cmpsb
bound
aam
push
jge
mov
pop
pop
test
mov
stos
sub
xor
shr
mov
xchg
repz
or
sbb
mov
bound
pop
xchg
pop
lods
pop
pop
ds
lea
sbb
loopne
stc
pop
cs
and
mov
ljmp
out
imul
jo
pinsrw
or
add
cld
adcb
clc
icebp
inc
pusha
push
or
sbb
fcoml
jl
incl
repnz
mov
ficomps
jns
out
std
cli
scas
ret
inc
shll
adcl
jmp
add
pop
cmp
pop
shll
out
test
fwait
dec
clc
pushf
fndisi(8087
loopne
inc
arpl
je
insb
adc
fwait
adc
cmc
lods
xchg
or
and
mov
aam
cwtl
daa
mov
jle
in
std
fwait
sbb
fnstcw
outsb
aad
jnp
dec
test
cmpsl
adc
and
nop
es
pop
dec
mov
inc
dec
add
mov
and
loopne
push
sbb
inc
insl
mov
stos
jbe
dec
roll
daa
mov
jg
jl
xchg
cwtl
mov
or
nop
xchg
adc
cmp
jno
mov
dec
and
ds
aas
daa
dec
jnp
adc
add
pop
cmp
adc
dec
cmpl
inc
pop
sbb
adc
cmp
adc
jnp
mov
insl
flds
les
mov
xchg
sbb
imul
push
mov
dec
sub
cwtl
les
jbe
mov
out
xchg
sub
lods
xor
adc
lahf
stos
mov
xchg
loopne
mov
scas
in
insl
dec
jo
mov
dec
pop
pushf
jle
cltd
add
gs
mov
ret
dec
jl
push
dec
xchg
jmp
mov
cmpsb
jo
xrelease
repnz
add
movsl
pop
aad
pop
mov
test
shll
dec
xor
mov
popa
iret
sub
shl
mov
mov
iret
dec
sub
shrb
scas
lods
xor
cmpsb
notb
add
or
pop
nop
mov
iret
or
and
std
imul
push
push
loope
push
addb
dec
addl
call
jo
lock
ficompl
lret
jge
rcll
test
fldenv
fsubl
jnp
dec
push
aad
loope
dec
out
lcall
loopne
ret
mov
cmp
mov
jae
fidivs
add
and
add
icebp
jmp
push
pop
fsts
fidivl
dec
out
std
popf
inc
jp
scas
add
imulb
push
pop
push
add
mov
jp
cmp
adc
pop
push
lods
add
loopne
mov
cltd
mov
or
popa
das
iret
lods
scas
pop
push
xor
mov
fs
push
cltd
xlat
mov
pop
xchg
add
jbe
pop
lea
icebp
xchg
pop
popf
es
mov
faddl
paddusw
testl
mov
jg
jno
xor
mov
jns
js,pt
pushf
and
fsubs
loop
cmp
cltd
in
fldt
pop
dec
inc
push
fwait
mov
test
jle
out
mov
push
and
das
xor
push
lods
std
push
mov
pop
xor
je
pop
cmp
out
jae
jne
cmpsb
into
loopne
xchg
into
das
xor
xor
and
rcll
sti
cli
mov
call
gs
xchg
pop
inc
push
xchg
lock
mov
orl
aaa
imulb
jp
stos
lahf
loop
sbb
inc
das
sub
xchg
mov
std
aad
mov
xorl
ss
pop
rcll
sahf
ret
pop
ret
pop
cmpb
fists
imul
mov
or
cwtl
sbb
fdiv
mov
or
outsb
push
jnp
sub
add
imul
repnz
and
fs
dec
fstl
lods
stc
mov
pop
in
test
cli
adc
mov
aas
inc
ds
jo
lds
fs
icebp
addr16
sub
dec
or
push
sub
adc
xor
pop
ss
jl
aad
pop
adc
mov
leave
inc
adc
stos
xor
stos
xchg
add
leave
jae
cmp
fstpt
or
sarl
dec
popa
and
nop
adc
sub
jbe
aam
imul
mov
les
rclb
in
push
addr16
fstpt
addl
dec
cmp
test
sarl
rcll
sbb
ljmp
addr16
add
mov
in
fisubrs
mov
sbb
sbb
ret
lds
or
aam
mov
xor
scas
pop
add
rorb
and
ljmp
dec
sub
stc
push
pushf
imul
mov
xchg
jb
lods
fsubrl
xchg
xchg
add
pop
push
sub
adc
xor
sub
mov
xor
pshufw
xor
icebp
dec
xlat
xor
sbb
mov
in
add
mov
rolb
idivl
aad
add
and
push
xor
jmp
test
mov
pop
outsl
mov
sbb
mov
adc
ds
mov
cmp
cmpsb
push
mov
clc
test
jge
and
add
push
js
shrb
test
jb
mov
stos
jmp
adc
insb
jo
call
loopne
jecxz
imul
iret
movsl
cli
insb
xchg
lret
inc
dec
in
js
dec
in
popa
repnz
insl
sbbb
mov
aam
xorl
lahf
sub
imul
hlt
mov
adc
test
movsb
xchg
sub
push
mov
adc
cmp
outsl
std
jp
mov
mov
xchg
cmpsl
mov
negl
jne
sbb
test
xchg
jmp
rclb
jmp
scas
pop
adc
aad
pop
push
sub
push
dec
mov
adc
xchg
fmull
mov
mov
ret
sbb
push
test
in
arpl
jno
sub
clc
movsl
outsl
sbb
aaa
fiaddl
jb
cmpsb
fdiv
cld
add
dec
dec
inc
lds
pushf
jg
pop
testb
vpsrlw
cs
adc
addb
ss
jmp
and
fcmovnu
mov
es
stc
jno
xchg
inc
dec
mov
repz
out
add
xchg
pop
and
test
lock
test
xor
loope
lahf
std
inc
or
test
js
pop
rolb
inc
lods
scas
scas
cmp
and
or
push
or
mov
es
loopne
mov
movl
add
lds
imul
adc
jns
dec
mov
test
mov
rcrl
out
lea
negl
shrl
push
dec
stos
std
adc
stc
mov
jne
ss
mov
mov
stos
stos
mov
ret
pop
outsl
push
xchg
scas
mov
insl
add
imul
movsl
pusha
lahf
pop
pusha
sub
xchg
out
popl
cmp
out
test
or
adc
cmp
add
sbb
push
loope
sbb
adc
lret
pop
mov
dec
push
fwait
out
outsl
cmp
or
imul
inc
xchg
jno
mov
lret
arpl
xchg
inc
out
test
push
mull
dec
repz
mov
hlt
and
jp
add
jno
cs
dec
or
clc
cmp
gs
iret
setg
push
test
popa
mov
das
shr
loop
imul
mov
mov
mov
dec
movsl
call
stos
jle
sbb
dec
fildll
pop
mov
imul
dec
fincstp
cmpsb
pop
sub
and
cmp
pop
std
pop
ret
and
cmpsl
jo
pop
inc
jb
sub
ret
cmpsl
xchg
mov
sbb
clc
push
shll
pop
push
add
hlt
out
mov
ret
cmc
movsb
push
xor
dec
push
mov
mull
mov
mov
movb
push
jno
sbb
dec
dec
gs
cmpsb
outsl
jbe
mov
mov
sbb
adc
inc
xchg
stc
push
mov
cmp
add
mov
xor
stos
dec
mov
lods
insl
xor
loopne
ljmp
movsb
lods
das
dec
pop
push
in
pop
mov
mov
dec
mov
imul
lret
sub
inc
push
fldcw
or
lret
nop
jp
pop
inc
popf
fidivs
mov
dec
mov
jns
js
sub
fs
and
outsl
scas
sbb
xchg
and
scas
imul
sub
or
or
lret
jecxz
sub
aaa
and
insl
pop
push
pop
fabs
sbb
mov
adc
pop
pop
pop
outsl
sti
inc
ficompl
jno
cmp
nop
push
in
je
cltd
jae
and
dec
inc
cmp
sbb
pop
popf
push
in
stc
movsl
push
xchg
mov
cmpb
ljmp
aas
xor
cmp
adcb
pop
sbb
add
xchg
or
in
fnstenv
mov
and
xor
jle
jb
nop
sbb
pop
mov
jp
inc
jg
mov
addr16
jae
xchg
out
xchg
js
xor
ret
popf
testb
sbb
fbstp
in
sbb
mov
ljmp
sub
sub
dec
adc
loopne
xchg
adc
xor
ret
lods
adc
pop
imul
mov
daa
push
sti
stos
pop
sub
jno
inc
sub
add
fdivrl
pop
pop
in
push
sbb
outsb
mov
jg
mov
push
pop
push
adc
int3
dec
lea
icebp
mov
xchg
push
push
add
pop
ljmp
pop
and
stos
dec
cmpsl
sbb
lea
mov
lock
jg
cli
imul
cmpl
xchg
jo
push
adcl
adc
xor
iret
and
push
xchg
pop
xor
ret
and
pop
aaa
std
lock
test
or
das
and
fldenv
fldlg2
and
ficompl
push
pushl
add
or
and
sub
cmc
insb
loopne
in
test
and
push
fstl
ret
aad
shll
js
xchg
sbb
adc
std
test
js
xchg
mov
sbb
inc
pop
fstps
jg
movsb
test
mov
sahf
or
aas
es
push
jecxz
xchg
mov
test
mov
sbb
xor
loopne
xchg
and
in
sbbb
mov
mov
rorb
adc
cwtl
lea
push
outsl
mov
pop
pop
cmp
add
imul
xlat
pop
jnp
das
in
ret
xchg
mov
mov
pop
jle
push
xchg
popf
popf
ficoml
push
fnstenv
fcomi
scas
inc
sti
cmp
dec
push
fldl
mov
jne
mov
cwtl
js
jbe
xlat
fstps
mov
cmpsl
sub
push
fcom
adc
cwtl
loope
cmp
and
ja
es
into
stc
or
sti
in
sub
push
or
sbb
add
cmp
aad
push
int3
push
cmp
cmp
mov
out
cli
sub
cld
mov
and
xchg
scas
in
addr16
mov
jmp
nop
mov
push
enter
cmp
or
sbb
xchg
lcall
push
sarb
sbb
jge
push
inc
inc
xchg
jp
lcall
test
ljmp
sub
call
and
lock
test
jnp
iret
adc
cmc
dec
pop
in
jg
and
rcrb
movsb
add
dec
das
adc
or
lds
dec
cmp
or
in
or
cmp
xchg
arpl
cmpsl
push
jl
hlt
jne
jecxz
adc
lret
and
mov
dec
lret
push
xor
mov
test
xchg
fiaddl
xchg
add
lea
cs
in
aaa
and
out
nop
push
pop
push
sub
imul
xlat
push
mov
test
sarb
sub
mov
push
xlat
mov
add
sub
dec
and
adc
jecxz
popf
jg
in
imul
outsl
inc
mov
scas
jo
cmp
clc
pop
xchg
adc
and
jmp
pop
lock
clc
ds
jo
pop
int
out
aad
repz
fsubrp
shl
jns
lret
or
mov
fbstp
imul
les
xor
jmp
fidivrl
cli
jge
lods
pop
call
nop
shr
movsb
bnd
xchg
loope
sub
cltd
test
push
arpl
je
loope
popf
pop
pop
lret
out
cmp
pusha
adc
xor
dec
shll
movsb
popf
inc
sbb
or
repz
pop
add
and
dec
or
jl
dec
call
jecxz
xor
push
mov
cmp
inc
mov
in
push
movsl
mov
push
inc
jmp
inc
cmp
int3
pop
push
stos
mov
sub
xor
sbb
loopne
cli
mov
jl
and
xchg
aas
cmp
cmc
dec
xchg
test
aad
aad
test
aaa
cmp
jl
add
cmc
inc
outsl
and
xor
cmc
movsb
pop
xor
fs
aad
ret
sub
rep
push
fisttpll
pop
dec
scas
fcoms
inc
stos
push
negl
inc
cli
mov
inc
cmpsb
pushf
adc
lods
mov
and
mov
pop
imul
in
pop
adc
xor
aad
adc
lods
mov
mov
or
lods
sti
clc
sbb
add
sbb
cmpb
and
clc
es
add
shrl
add
fsts
arpl
repnz
mov
and
mov
mov
out
pop
inc
loop
lea
aam
jo
push
pop
pop
sbb
cwtl
sub
or
cmp
jmp
sbb
setle
hlt
fisubl
mov
push
or
push
stc
rclb
cmp
or
stc
cmp
popa
and
mov
mov
in
pop
or
arpl
sahf
mov
mov
mov
xchg
sbb
mov
cld
adc
idiv
lds
mov
sti
in
shlb
inc
es
sub
lea
sti
add
dec
scas
xor
sub
outsl
mov
clc
xor
xorb
flds
iret
sbb
pop
loopne
jo
xchg
mov
xor
insl
ds
int
imul
push
stos
popa
dec
push
negl
aam
aad
sbb
or
das
out
ljmp
mov
jge
mov
jnp
stos
in
repz
push
aas
or
cwtl
mov
cmc
xor
mov
jecxz
movsb
push
push
inc
push
in
insb
movsl
ss
pop
adc
inc
sub
aad
inc
fimull
int3
sub
dec
and
push
or
cmp
mov
mov
dec
scas
sbb
mov
mov
inc
divl
incb
push
pop
dec
fwait
dec
sar
sub
pushf
enter
out
in
pop
xchg
inc
xor
jmp
adc
dec
das
jecxz
iret
mov
out
and
insl
adc
mov
adc
arpl
mov
inc
xlat
cmp
arpl
xchg
push
scas
pop
xor
cmpsb
cmp
out
and
dec
cmp
mov
mov
mov
pusha
fs
sub
dec
cmp
pop
shll
out
sbbl
test
jle
xchg
aam
icebp
adc
repz
lret
imul
shll
pop
cmp
js
mov
mov
inc
push
mov
sub
scas
or
mov
push
inc
stos
xor
arpl
jmp
or
int3
movsb
adc
into
js
popf
xchg
inc
rorl
inc
in
hlt
mov
fs
and
aam
scas
adc
les
push
mov
lea
cmpsl
std
dec
xor
lea
lds
dec
addr16
aas
cmp
imul
and
lret
and
jae
loop
bound
dec
cmp
sub
mov
lret
mov
push
sub
pop
test
and
jae
and
ds
out
mulb
mov
adc
cmp
hlt
xchg
aam
mov
mov
fisttpl
push
out
and
in
push
sbb
out
and
pop
push
add
hlt
mov
and
clc
insl
cmpb
imul
jg
lods
sbb
xchg
inc
push
push
daa
pop
mov
sub
outsl
jno
test
hlt
jns
andb
xchg
push
aas
lahf
inc
aas
inc
fisttpll
inc
arpl
lods
inc
mov
sbb
cmp
xor
lds
xchg
push
add
or
adc
adc
cmpsb
adc
lret
adc
mov
addl
pop
pop
arpl
dec
push
ret
mov
xchg
adc
xchg
xchg
lcall
lret
dec
mov
jne
test
jnp
test
push
imul
pushf
pop
lods
push
fcompl
faddl
xlat
push
push
testb
jle
xchg
ret
adc
jnp
adc
loope
out
push
xor
test
insb
int3
rorl
and
add
fildll
out
shl
popa
fmull
sub
lret
bswap
lea
jmp
adc
jecxz
fistps
pop
jne
sub
data16
rolb
sbb
mov
outsb
cmc
xor
or
xor
enter
fldt
fldenv
nop
dec
jno
xor
addr16
adc
inc
fcomps
repz
xchg
mov
jmp
mov
int3
hlt
cltd
cltd
call
arpl
std
jnp
das
inc
shll
mov
div
iret
int3
mov
jb
cmp
into
gs
sahf
lock
mov
jbe
pop
or
mov
sbb
loop
and
xchg
cmc
fistps
imull
pusha
mov
mov
vmwrite
inc
cmp
loop
bound
xchg
add
sub
js
jp
adc
hlt
sbb
jp
sti
mov
jnp
lcall
adc
ret
adc
mov
data16
aas
add
stos
int
jle
sub
xchg
xor
call
dec
rcll
jg
jmp
push
les
xchg
enter
xchg
adcb
popa
push
xor
cmc
dec
push
dec
mov
cs
dec
jae
aaa
lods
xchg
das
xor
mov
add
lahf
add
jmp
adc
or
cmpsl
negb
mov
sub
frstor
lods
sub
pop
frstor
sub
loope
ret
jo
and
out
sub
scas
fimull
fisttpl
scas
mov
sbb
add
and
add
mov
ret
imul
inc
add
mov
push
daa
icebp
mov
ret
lcall
mov
ljmp
pusha
push
pop
call
lods
cmp
es
jle
inc
inc
nop
add
iret
loopne
push
in
insl
scas
iret
test
sub
ss
xchg
mov
jl
leave
jae
push
and
ja
movsl
stos
add
sbb
not
xor
sbb
scas
clc
pop
or
push
dec
mov
cmp
adc
jns
repz
lahf
or
jo
repz
jmp
lea
lock
sub
jns
xchg
in
loope
adcl
mov
mov
enter
testb
daa
or
out
push
bound
cmp
lcall
ret
mov
mov
out
jmp
mov
fldenvs
pop
loopne
test
xor
enter
cmp
inc
sub
movsl
or
sbb
mov
inc
mov
divl
cli
pop
movsl
mov
xor
push
and
cmp
hlt
lods
orb
cmp
enter
mov
cwtl
mov
stos
inc
sbb
xchg
ss
jnp
sbb
movsb
push
pusha
lret
jmp
sub
bound
adc
ss
adc
mov
adc
ljmp
cltd
sbb
imul
xchg
clc
sbb
shlb
jns
in
inc
mov
pusha
addr16
es
pop
or
xor
sub
adc
sub
add
loopne
int3
sub
daa
mov
pop
pop
adc
repnz
cmp
cmp
mov
dec
movl
xchg
mov
shr
or
xchg
icebp
adc
push
imul
jge
xor
test
xor
adc
adc
mov
push
aam
cmp
jecxz
ljmp
movl
in
mov
mov
mov
fistl
pop
js
daa
pop
ss
stos
mov
inc
decl
and
hlt
enter
sub
nop
jne
or
mov
shrb
sub
xchg
dec
fnstenv
lahf
in
ret
iret
push
cltd
jmp
popf
mov
scas
cmp
inc
lea
xchg
testl
push
lcall
xlat
lods
rclb
out
or
addr16
push
mov
in
cltd
arpl
test
sub
scas
inc
push
fdivl
lcall
movups
push
mov
bound
xchg
nop
dec
sub
out
cltd
insb
add
xchg
stc
out
mov
in
and
mov
mov
stos
pop
out
fwait
scas
jmp
jg
jb
cmpsl
mov
mov
leave
mov
andb
rcrl
mov
loope
adc
pop
dec
cmp
aaa
out
movsl
cmp
lret
dec
add
mov
sahf
pop
mov
jge
xlat
or
test
mulb
sbb
lcall
es
adc
std
fidivl
cmpsb
mov
and
add
mov
cs
loopne
pop
adc
pop
repnz
push
xchg
mov
push
imul
push
jae
inc
push
xor
push
mov
ja
adc
mov
sbb
les
or
mov
push
loopne
popf
push
push
outsb
xor
pop
adc
or
xchg
popa
outsb
and
pop
cmp
xchg
mov
xor
out
pop
xor
loop
or
push
xor
pop
dec
movsl
insl
pop
and
pop
clc
xchg
outsb
sub
aad
insl
mov
add
fldenv
iret
ss
mul
imul
push
mov
cwtl
xchg
fistl
mov
and
hlt
sub
out
popf
pop
clc
fmulp
cmpsl
cmpsl
fsubp
mov
mov
jecxz
mov
mov
shll
in
sbb
shrb
jbe
ja
jl
pop
pop
cld
xor
jl,pt
sbb
pop
push
inc
xchg
or
sbb
mov
leave
aas
shrb
push
imul
cmp
mov
gs
cs
mov
das
sub
mov
out
sub
mov
mov
inc
dec
je
rorb
cs
into
ljmp
pop
in
sub
xor
and
adc
shr
leave
pusha
mov
sbb
test
sub
adcl
out
mov
lret
andb
jo
dec
mov
inc
std
gs
push
sbb
subb
int
cmp
lret
pop
jb
dec
dec
sub
mov
std
cmp
or
ds
lret
jg
fdecstp
lock
popa
xchg
jo
int3
cmp
inc
and
jbe
cmpsb
mov
cmpsl
xor
fadd
mov
aaa
js
mov
add
jns
loop
jbe
and
in
int3
inc
ficompl
fmull
fsts
push
xor
cmp
pusha
pusha
in
xchg
mov
fucomip
xor
insl
cmp
mov
dec
cmc
and
pop
fs
sbb
scas
pop
or
dec
testb
inc
loop,pt
push
mov
cwtl
in
xor
dec
sarl
lods
insb
dec
fwait
push
mov
movsl
call
mov
test
jle
xor
loopne
je
lods
and
iret
hlt
cmpsb
mov
repz
imul
ss
adc
clc
fimuls
mov
decl
cmp
cmp
arpl
sahf
sub
pop
push
pushf
pushf
pop
ds
rcrb
mov
inc
mov
xchg
fmull
mov
out
pop
in
jg
cld
lcall
dec
push
repnz
aam
fsubr
nop
mov
lds
aad
cmp
scas
mov
daa
enter
inc
inc
aad
shlb
push
aas
rcrb
mov
jge
mov
mov
imul
sahf
out
pop
pop
push
sahf
test
or
or
mov
sub
shlb
mov
mov
lods
push
jle
loopne
loopne
jno
xchg
ret
imul
imul
rorw
sbb
pop
jns
push
stos
mov
ja
add
push
out
outsb
iret
push
jno
push
adc
ljmp
push
leave
insl
test
nop
rcrb
xchg
sti
pushf
cltd
pop
mov
scas
ds
sarl
lcall
pop
mov
add
ja
bound
rorl
mov
test
in
fwait
jecxz
in
push
dec
push
mov
or
push
push
mov
test
pop
ror
cmp
sarl
mov
idivl
sub
jle
xor
and
mov
push
xor
gs
cltd
mov
push
push
pop
addl
adc
in
sub
xchg
pop
vpcmpgtb
mov
and
pop
or
cmpsl
or
and
mov
lds
les
mov
fs
jge
mov
adc
add
hlt
scas
lods
imulb
inc
sbb
xchg
push
lods
icebp
or
push
das
mov
sub
mov
imul
loopne
ja
fidivs
cmc
movsb
in
dec
shl
scas
inc
ja
sub
mov
mulb
repnz
aad
neg
data16
xchg
push
xchg
cmp
lret
jno
enter
xchg
cwtl
inc
inc
cmp
adc
mov
movsb
outsb
outsb
fisubl
sbb
ret
add
pop
dec
fcomi
xor
lds
rclb
dec
in
movsl
push
and
or
outsl
rcrl
jae
cmpsb
mov
jge
jb
call
ret
sbb
mov
push
add
push
or
rcr
in
into
aaa
push
in
inc
mov
jno
cld
and
cli
xor
in
mov
ja
outsb
pop
sub
pop
in
cmp
sbb
popa
loope
jecxz
inc
and
pop
frstor
frstor
add
adc
fsts
movsb
adc
mov
les
mov
div
sub
xchg
sub
add
mov
and
xor
adc
cmpsl
mov
mov
loop
test
add
cmp
xor
adc
dec
mov
nop
fsts
inc
outsl
sub
imul
mov
dec
mov
dec
repz
mov
imul
adc
shll
jbe
dec
std
clc
jp
mov
in
stos
int3
jae
fldl2e
jg
rolb
fwait
mulb
xor
mov
adc
push
inc
mov
xor
inc
xchg
dec
xor
pop
out
leave
pop
fidivs
cmc
cld
std
leave
and
add
add
xchg
inc
imul
adc
fadd
or
fcoml
rolb
stos
add
xchg
mov
cwtl
or
fcmovnb
cmp
sub
adc
add
xchg
or
fcomip
mov
dec
jge
mov
jge
ja
or
lcall
ret
xchg
dec
int3
mov
inc
imul
inc
stos
ja
imul
push
mov
popf
nop
fwait
lods
sbb
lahf
mov
cmpsl
outsb
lret
out
cmp
out
xor
inc
xlat
jo
imul
xor
aad
xor
jb
lahf
les
jb
dec
lahf
test
stos
adc
lock
cmp
jmp
cli
push
or
movzbl
sbb
cwtl
lahf
add
push
ja
mov
imul
mov
cmp
xlat
mov
ds
add
cmp
xchg
shrl
or
in
jae
je
cmpsb
scas
call
es
lea
test
inc
aas
dec
cmp
es
call
xlat
jb
push
xchg
add
sbbb
movsl
test
fidivl
mov
les
iret
mulb
inc
rorl
jge
fisubl
hlt
and
outsl
fmull
push
cmp
inc
lret
fsubs
jns
inc
jl
push
outsb
aad
cmpsb
dec
add
aaa
xchg
add
sub
fisttpl
xor
or
mov
insb
loope,pt
or
inc
stos
sub
repnz
mov
mov
cmp
lods
sti
sbb
out
mov
iret
scas
push
mov
or
es
inc
xchg
das
sarb
pusha
xchg
push
in
mov
pop
mov
pop
inc
xchg
mov
add
mov
imul
or
js
ja
mov
cltd
and
add
jg
xor
add
or
xchg
test
outsl
cmp
into
fdivrs
imul
mov
stc
loop
xchg
jmp
push
jno
push
xchg
sbb
stos
push
push
mov
cmpsb
testl
jno
dec
mov
push
mov
cld
pop
mov
pop
xor
repnz
es
fcmovnbe
or
add
and
sbb
or
lods
pop
out
cli
jmp
rclb
out
dec
sbb
add
enter
pop
sub
and
jo
jl
xor
push
or
nop
lahf
std
mov
lods
pop
jl
inc
arpl
xchg
test
mov
arpl
mov
outsb
les
xchg
xchg
push
adc
fwait
jns
lods
mov
inc
imul
gs
lods
or
lcall
dec
arpl
pop
scas
fnsave
push
decl
loopne
and
mov
cli
push
popf
xor
lds
and
aaa
mov
push
push
fld
je
dec
xchg
ret
push
rcr
and
jnp
loop
ret
insl
and
outsb
dec
divb
mov
mov
pop
int3
fldl
inc
xchg
sub
push
mov
inc
adc
mov
nop
push
inc
in
fisubrs
pop
roll
fsubr
or
mov
mov
test
mov
jno
lahf
pop
lret
push
ja
or
add
imul
dec
or
mov
aam
popa
leave
pushf
lahf
inc
loopne
aaa
dec
fsubrs
fstpt
shlb
jle
pmaxub
unpcklps
xor
pop
cli
push
xchg
aas
into
dec
xorl
shll
ds
mov
stos
leave
lret
push
inc
mov
jge
movsl
orb
pop
dec
test
push
ds
jecxz
adc
xlat
jbe
push
aad
popf
call
pop
test
daa
pop
sub
ficoml
icebp
insb
sub
sbb
aas
stc
loop
rorb
jne
adc
mov
and
and
mov
push
in
push
mov
sub
push
clc
pusha
popa
push
add
stc
and
cmc
xor
inc
jae
xchg
mov
jl
hlt
in
loop
mov
daa
ret
gs
icebp
flds
and
ss
mov
pop
or
push
in
ja
cld
dec
dec
lret
jmp
std
and
rcl
lcall
pop
cmp
sbb
shl
push
mov
push
roll
pop
add
test
sbbb
fwait
xor
icebp
popa
sahf
cmp
xor
mov
push
xchg
xchg
and
push
insb
or
mov
push
das
imul
dec
cmc
mov
sahf
xor
lods
ficoms
cmpsb
shl
stc
dec
mov
jae
jns
xlat
movsb
pop
cld
add
add
pop
pop
xor
and
insl
push
mov
push
xor
xor
jmp
cmp
sub
cld
add
xchg
shrb
addb
das
pop
or
mov
scas
jnp
mov
xchg
xor
adc
std
pop
movsl
sahf
dec
repnz
push
mov
pop
sub
cmp
pop
push
mov
adc
push
jmp
insb
or
dec
fimull
fimull
mov
scas
dec
insb
dec
popa
cmp
mov
xor
clc
sbb
fisttpll
cli
push
or
xchg
adc
icebp
sbb
dec
stos
imul
jb
inc
mov
add
push
stos
iret
movsl
mov
add
inc
mov
jae
arpl
jmp
or
cwtl
aaa
push
into
push
cmpl
fcoml
ret
mov
out
rolb
es
fcmovbe
sarb
mov
sbb
lea
add
insl
bound
fisttpl
imul
lods
ja
jp
xlat
and
inc
arpl
push
enterw
stos
test
push
push
cs
and
scas
arpl
mov
out
shrb
repnz
cmpxchg8b
and
in
fsubr
and
fs
rcrb
fptan
icebp
test
andl
xor
pop
jp
or
cmpsl
fwait
test
sahf
push
scas
sub
in
mov
cmp
test
in
mov
lea
mov
faddl
add
movsb
or
notl
adc
icebp
movsl
push
ja
adcb
into
pop
loope
cmp
lods
cmp
push
adc
xchg
mov
std
lret
dec
jnp
daa
inc
xchg
call
pop
mov
dec
adc
fwait
pop
data16
es
aad
cld
push
shlb
subb
shr
adc
adc
xor
fiaddl
mov
add
add
cmp
xor
push
stos
subl
inc
mov
jp
inc
or
push
mov
in
sbb
arpl
xor
cmpsb
cmpsl
adc
std
jmp
imul
pop
ret
pop
fistl
add
push
inc
cmpsb
inc
mov
cmp
push
hlt
and
mov
loopne
call
iret
add
sarb
pop
int3
lods
add
leave
lock
cmpb
dec
and
ret
pop
dec
scas
or
cld
sbb
pop
cmp
cmp
jo
xchg
cs
daa
mov
es
dec
ljmp
xchg
push
stc
movsl
mov
pop
xor
insl
add
cmp
cmp
cmc
xor
cwtl
sbb
scas
pusha
dec
and
cmp
out
xor
push
sub
sub
adc
inc
clc
jmp
out
inc
gs
scas
dec
add
fwait
add
ret
into
idivl
sbb
sbb
stos
dec
lret
fimull
dec
jae
movsl
and
es
push
mov
mov
sub
test
loope
pop
push
test
fistpll
pushf
mov
inc
jnp
push
lods
inc
push
xor
hlt
xchg
test
push
push
add
pop
das
gs
rcll
jp
xchg
sbb
in
cmpsl
notl
push
mov
iret
jle
adc
cmp
mov
jnp
fstps
clc
jg
lock
push
sub
jge
cmp
dec
adc
jns
insl
xchg
movsb
std
mov
cmp
jmp
adc
sbb
filds
subb
sbb
loopne
gs
jl
jmp
and
int
push
xchg
cmp
pushf
push
fiadds
aas
dec
decl
inc
xchg
stos
aaa
lret
push
das
mov
loop
jg
sbbb
mov
cltd
rcr
icebp
addl
lds
fisubrs
push
aaa
rorb
ljmp
out
sub
fs
mov
sbb
addr16
jle
ds
fidivrl
mov
mov
add
pop
add
push
lock
mov
xchg
fisubrs
and
cmp
addr16
sbbb
pop
dec
int
stos
lret
sti
sub
jbe
jbe
cmp
jg
cmc
mov
daa
scas
out
mov
enter
jecxz
in
test
leave
push
mov
dec
test
adc
and
roll
pusha
fsubrp
sbb
mov
lods
cmp
fadds
jge
mov
dec
jmp
adcl
push
xchg
push
pop
popf
mov
lea
pop
insb
dec
out
cmp
jl
cmp
ret
jae
xor
xchg
in
push
mov
jmp
jge
sahf
lods
push
mov
clc
xor
push
and
pushf
in
ret
mov
adc
inc
shll
dec
loop
popf
adc
cmc
scas
jbe
inc
push
or
push
testl
sarl
pushf
sub
stc
sbb
popf
fwait
lahf
fisubl
dec
adc
in
dec
sub
stos
xor
and
scas
dec
dec
stc
xchg
mov
pop
inc
es
push
in
mov
nop
xchg
mov
inc
sbb
in
cmp
adc
rorl
ret
jb
mov
pop
idivl
mov
and
lods
stc
add
scas
push
mov
fdivl
sub
ret
dec
sbb
sbb
clc
sub
adc
incl
fimuls
in
les
and
pushf
adcl
mov
mov
add
repnz
pushf
mov
fisubl
div
jo
les
sbb
jo
xchg
shr
lods
mov
sbb
add
bound
ljmp
int3
xor
cmp
lea
movsl
pushf
mov
xchg
adc
adc
ficompl
jge
leave
dec
ljmp
sub
pop
mov
hlt
stos
daa
leave
mov
inc
insl
push
repz
pandn
sub
cmp
pusha
cld
mov
stos
mov
arpl
jge
pop
mov
cmpsb
mov
setge
outsb
pushf
mov
cmp
and
xchg
test
ljmp
mov
xor
stos
jno
mov
jmp
xchg
push
xchg
sub
push
cmp
mov
mov
and
movsl
insl
jmp
cmpsb
fbstp
or
push
sbb
rol
leave
arpl
mov
xor
pushf
gs
aas
ret
pop
fsubr
jbe
mov
rcll
imul
std
xchg
daa
lea
aaa
lods
jge
ficoml
pop
xor
cs
xchg
pop
mov
mov
jge
imul
sbb
mov
sub
add
mov
dec
cmp
mov
cltd
sti
roll
fdivrp
lcall
adc
shrb
ret
outsl
inc
dec
ljmp
push
out
xchg
push
outsb
popa
pop
mov
push
cmp
xchg
pop
or
fistps
je,pn
mov
addr16
or
sahf
jne
jne
cmp
ja
mov
and
adc
sbb
jg
jg
xchg
xchg
pop
push
hlt
lret
sub
mov
and
out
xchg
jp
push
xor
roll
int
gs
push
aad
mov
in
xchg
xor
pop
ds
std
or
imul
mov
mov
adc
add
fildll
pop
push
jae
and
inc
lods
pop
jmp
jns
in
outsb
sub
enter
testb
std
cmp
dec
dec
test
jae
or
sub
xor
lds
jmp
fstpt
dec
cld
mov
adc
push
das
inc
dec
lret
adc
test
inc
das
mov
cmp
push
scas
jmp
mov
xor
sahf
and
incl
jno
xchg
in
int3
lret
in
addr16
idivb
data16
sti
jmp
in
je
lea
adc
shr
loopne
pop
aaa
subl
mov
je
mov
jno
xchg
mov
rcll
cmp
enter
test
iret
mov
inc
mov
add
jae
mov
push
pop
fs
fimuls
mov
in
mov
fwait
iret
mov
adc
lods
mull
and
mov
pop
loopne
repnz
stos
or
cmpsb
ss
dec
outsb
mov
rep
lret
adcb
in
int3
xchg
xchg
mov
xchg
push
jmp
push
enter
cmp
stos
mov
jle
and
lcall
test
bound
push
idiv
sub
mov
imul
hlt
das
push
pop
sub
sbb
and
jo
jbe
mov
shlb
push
or
je
sub
sub
mov
cltd
shl
push
add
inc
shrl
outsb
pop
inc
pop
xor
pop
nop
pop
xchg
cmp
es
jg
jno
mov
add
sub
or
jbe
and
sub
test
add
popa
dec
xchg
jecxz
insl
mov
mov
outsb
jae
ret
dec
sbb
xchg
pop
sub
loop
sbb
sbb
fcmove
push
and
mov
xchg
cli
jecxz
lock
leave
sub
lea
lods
mov
iret
jl
icebp
fadds
xlat
rcll
add
dec
inc
mov
ret
mov
outsb
push
mov
mov
ss
push
in
mov
sub
pop
call
aaa
add
test
movsl
mov
cmp
mov
repnz
adc
push
call
outsl
push
mov
pop
inc
mov
sbb
mov
jge
out
push
sub
sbb
out
push
notl
call
sbb
cmp
xchg
push
arpl
add
mov
cli
sub
fnstsw
lea
repz
add
sbb
xchg
iret
xlat
add
es
push
imull
lods
sbb
push
cmp
cld
pushf
iret
pop
ret
mov
sbb
xchg
cld
inc
mov
loop
mov
fisttps
subl
jl
inc
and
xchg
loope
adc
lock
pop
pop
repz
pop
xchg
push
xchg
ja
jp
fimuls
outsl
ljmp
jns
inc
mov
xlat
sub
div
cmpsb
popa
les
mov
inc
cld
insb
add
mov
jae
lret
cmpl
repnz
mov
xor
movsb
js
cli
add
fiadds
test
js
and
sbb
push
jg
push
popa
xchg
idivl
xchg
push
mov
or
ljmp
jg
test
aam
pop
and
addr16
addr16
add
dec
inc
repz
mov
jmp
pop
push
mov
pop
and
jecxz
lcall
scas
jb
xor
mov
xchg
jp
in
mov
cmp
test
ret
shlb
int
shll
push
loope
sub
clc
fadds
xchg
cmp
push
mov
xchg
push
roll
mov
int
test
push
js
loope
shlb
pop
adc
or
adc
pop
jp
mov
xor
inc
data16
dec
or
or
mov
add
cltd
js
divb
imul
adc
lahf
push
cli
push
aam
inc
add
scas
mov
pushf
enter
cmp
mov
adc
jg
cld
js
sub
in
mov
jge
sbb
repz
cmp
int3
cmp
jg
lods
adc
xchg
test
lods
stos
sub
enter
mov
mov
mov
xchg
xor
push
mov
pop
and
in
jae
dec
out
sub
mov
js
das
enter
inc
inc
sbb
inc
in
std
repz
xor
jno
bound
xor
add
jecxz
sbb
or
int3
mov
add
movsl
inc
incl
cltd
jns
mov
sub
or
add
imul
les
loop
dec
jp
add
std
jp
xlat
fisubs
sbb
push
jnp
mov
cmp
sbb
fmull
mov
outsl
arpl
std
in
das
aam
imul
in
sbb
sti
jecxz
fstpl
insb
dec
cmpsl
rolb
jp
mov
dec
iret
sbb
hlt
ret
daa
call
add
cld
inc
mov
mov
shll
leave
cmp
jmp
nop
js
mov
addr16
push
lret
sarb
pop
nop
or
inc
inc
ficoml
ljmp
dec
xchg
jae
lret
inc
test
lds
insb
mov
fldlg2
int3
ss
xor
fidivl
adc
ljmp
fidivs
popf
sub
repz
not
pop
pusha
int3
ljmp
into
lea
mov
fnstcw
cld
sub
mov
sbb
notl
jl
mov
ss
mov
sbb
and
fimull
cs
in
inc
mov
insl
mov
stos
insl
lret
ds
add
gs
enter
xor
sarb
mov
scas
imul
sbb
call
jo
pop
fimull
cmp
xor
mov
daa
inc
out
push
test
sub
cli
add
lock
sysexit
push
mov
mov
xchg
fsubs
and
and
push
fimuls
add
xor
push
lret
push
loope
jnp
cmp
test
lock
push
sub
lods
mov
repz
xor
xor
loop
push
xor
fildl
xchg
dec
push
popa
fiadds
mov
roll
clc
enter
mov
enter
push
mov
dec
cmp
mov
dec
jo
push
movsb
hlt
mov
and
sub
pop
mov
mov
cmpsl
xor
cli
lcall
ficomps
nop
mov
pop
das
add
inc
mov
lahf
and
stos
pop
cmp
cli
mov
into
fs
mov
out
push
or
inc
hlt
leave
or
and
stos
es
mov
add
sbb
cmp
hlt
out
pop
aam
dec
xrelease
sub
pop
or
pop
mov
mov
xlat
aas
hlt
cltd
xor
pop
push
and
and
lret
mov
shrb
or
cmp
fsubrl
cmp
cmp
dec
insl
add
arpl
int3
lret
pop
xchg
jge
adc
adc
seto
jae
dec
lds
cmovns
cmp
fwait
lcall
lret
gs
inc
js
or
aad
xchg
add
and
inc
sarb
gs
and
add
sub
mov
sbb
push
xchg
sub
in
add
sbb
or
sbb
repz
push
idivb
push
addb
xchg
aad
xor
fmul
inc
add
mov
xchg
imul
popf
into
mov
scas
es
test
mov
iret
jp
add
cwtl
addr16
fildll
fsubr
add
inc
setge
scas
xor
jle
setp
mov
push
xor
in
outsl
jb
dec
gs
xchg
mov
pop
scas
inc
sbb
xchg
push
or
ret
sti
aas
or
pop
push
jns
pop
das
lret
jmp
ss
stc
nop
pusha
das
fisubs
push
das
pop
mov
push
dec
adc
insw
or
int
inc
ret
cmp
fadd
adc
ja
clc
adc
push
scas
add
sub
hlt
repz
lock
jmp
pop
jp
loopne
fmul
dec
dec
and
leave
and
jns
mov
sti
pop
stos
sti
arpl
into
js
std
adc
insl
outsl
mov
or
cmp
pop
test
mov
mov
and
daa
mov
icebp
arpl
imul
sahf
cmp
int3
repnz
cmp
mov
ffree
xchg
mov
repz
mov
mov
push
inc
cmpb
mov
movsl
arpl
sub
mov
das
push
lods
js
shll
aad
fiadds
xchg
aad
outsb
pop
inc
out
push
loope
lret
mov
notb
pushf
pop
pop
sub
test
pop
dec
stos
cmp
sbb
push
mov
lea
and
les
sbb
pop
mov
xchg
mov
xchg
jle
insl
dec
xchg
mov
popf
cmc
lods
fs
jp
mov
xchg
es
dec
lds
inc
push
popa
sbb
shll
sbb
popa
xchg
fnsave
mov
mov
xor
pop
mov
shl
xor
fwait
jno
outsb
mov
jg
clc
shrb
in
jae
roll
cmp
and
adc
xor
shll
mov
push
xchg
shl
mov
movsb
pop
ja
mov
add
lret
sbb
das
xchg
jnp
std
ljmp
push
mov
jno
loopne
mov
and
push
sub
pop
push
cmp
xchg
pop
cmp
adc
push
mov
mov
lods
or
adc
adc
pop
and
aas
xchg
or
aaa
jbe
inc
outsl
and
push
jecxz
sub
adc
lds
adc
inc
dec
xchg
xlat
ja
scas
add
sub
rolb
push
push
sub
rcrb
adc
hlt
sbbb
stos
ret
sub
nop
lret
cmp
int3
aad
jge
jbe
inc
ficompl
push
call
test
mov
jecxz
pop
jae
int
pop
adc
mov
mov
stc
imul
scas
xchg
and
stos
in
xchg
div
mov
push
sub
movsl
sub
and
bound
xchg
and
sbb
add
enter
xchg
movsl
mov
cmc
mov
jecxz
cmp
sbb
dec
ja
fnstsw
outsl
aas
jl
mov
stc
inc
inc
dec
jmp
sti
mov
leave
fcmovnbe
add
je
fcomp
data16
xchg
or
sar
or
leave
and
pcmpeqb
add
adc
xchg
xorl
sbb
rclb
dec
xchg
iret
push
lahf
test
ljmp
jle
dec
popa
dec
stc
xchg
rcrb
cs
icebp
fiadds
and
loop
mov
lock
jecxz
rcl
jnp
test
jne
add
jae
adc
push
ficoms
adc
xchg
dec
adc
cmc
cmpsb
inc
sti
sbb
xor
int3
sbb
iret
mov
leave
out
test
sub
in
mov
push
fildll
fcmovu
mov
mov
cmp
mov
lods
push
nop
orb
sub
fcomi
inc
ss
mov
mov
in
jp
cmp
dec
xor
lret
lahf
faddl
xor
aad
inc
sub
daa
jp
and
pop
pop
push
call
cmp
ret
xchg
scas
ret
adc
sbb
roll
push
vcvtss2si
or
push
add
jbe
stos
loope
add
jo
xchg
mov
push
shl
ljmp
or
xor
hlt
mov
xchg
adc
push
mov
outsl
push
pop
pop
pop
cmc
hlt
andb
jnp
xlat
sub
bound
jp
cmpsl
jp
cltd
push
movsl
outsb
pop
js
in
pop
cmpsb
shlb
movsl
roll
mov
cli
xchg
xchg
shll
aam
add
filds
rcr
xchg
cmpsb
mov
sub
outsl
sub
and
sbb
and
int
adc
aas
das
es
in
xchg
lods
leave
std
ret
arpl
fwait
cmpsb
outsb
add
inc
repz
fcoms
clc
jae
mov
pop
ret
lods
dec
fsubs
jns
rorl
ret
aam
jb
sub
test
mov
pop
into
mov
xchg
leave
mov
scas
std
cld
xchg
add
fcmovnb
mov
iret
sahf
daa
pop
cmp
jb
in
out
mov
loop
test
ret
mov
pop
stos
cmp
mov
sahf
pop
hlt
enter
jo
jle
xchg
mov
into
aaa
incl
mov
xchg
mov
into
loope
push
in
cmp
xchg
je
mov
and
cmc
lret
cltd
and
sub
mov
loope
xchg
fdivl
push
lds
movsl
orb
push
and
jmp
lcall
cmp
inc
enter
loope
add
out
lret
aam
cli
mov
mov
cmp
sbb
stc
cmp
xchg
dec
xchg
hlt
pop
sbb
adc
sbb
fidivs
gs
push
faddl
ret
mov
mov
enter
cltd
insb
jmp
xlat
pusha
popa
lods
inc
loop
inc
and
leave
dec
mov
stos
repnz
push
cmc
inc
outsb
gs
in
or
inc
sbb
insl
mov
icebp
mov
pop
inc
and
mov
xor
pop
scas
nop
mov
stc
mov
mov
pop
push
in
into
jl
mov
sbb
jecxz
add
cwtl
aad
mov
mov
add
cmpsb
push
test
push
out
inc
jle
inc
xchg
push
out
repz
add
dec
mov
mov
cmp
xor
loopne
daa
inc
dec
mov
arpl
or
in
loopne
inc
sbbl
add
xorb
ret
sub
popa
dec
outsb
std
repnz
jmp
mov
push
inc
xlat
cmp
repnz
sub
xor
add
cltd
std
out
push
mov
push
jb
ss
mov
cmpsl
jne
mov
inc
mov
push
adcl
xchg
test
aam
xchg
addr16
stos
mov
insl
ret
mov
push
pop
jno
adc
add
subl
aaa
mov
ljmp
mov
shll
adc
ja
cmc
cmp
in
push
cwtl
insb
sbb
pop
push
fdivr
mov
mov
lods
pop
mov
stos
inc
xchg
test
je
fmul
outsl
pop
xor
jne
dec
cmc
cmp
dec
pop
inc
popf
push
pushf
and
pop
pop
sbb
mov
std
pushf
aad
xor
cltd
out
pop
pop
xchg
ficoms
cltd
inc
pop
fists
rcll
push
and
cmovle
xchg
push
cltd
fwait
dec
cmp
xor
js
aaa
or
iret
enter
test
jnp
dec
sub
sbb
shl
lods
inc
out
outsb
mov
push
sarb
pop
ja
call
bound
push
sbb
clc
mov
cmp
idiv
pop
mov
dec
scas
int
fidivrl
negb
mov
cli
fstps
pop
and
sbb
js
jnp
insb
iret
sbb
cmp
mov
data16
inc
adc
push
cmp
shll
cmpl
pushf
inc
mov
jo
adc
xchg
leave
adc
cs
add
add
mov
pop
aas
xchg
add
lock
mov
mov
or
xor
adc
fistps
rcrb
mov
push
adc
mov
xchg
push
or
sbb
les
push
push
rolb
dec
mov
mov
in
add
inc
pop
roll
mov
out
push
xor
cmp
dec
push
cmp
insb
jp
scas
xor
insl
or
scas
jno
and
fsubs
movsl
ljmp
out
fisubrl
arpl
mov
adc
shr
xor
jl
add
daa
jmp
scas
int3
ds
jno
cld
add
sbb
lret
cld
mov
out
and
inc
ret
fidivs
inc
in
dec
inc
int3
fdivp
sub
sti
xchg
addb
cltd
add
shl
aam
scas
adc
nop
cli
sbb
insl
mov
mov
inc
and
repnz
out
je
push
mov
lcall
jp
sub
mov
pusha
mov
push
mov
outsb
mov
or
mov
rcrl
pop
fsubr
adc
arpl
inc
cmp
test
mov
pop
dec
dec
mov
add
call
jno
mov
or
push
jmp
add
rcrb
daa
sti
jo
mov
sti
inc
pop
scas
jge
shrl
push
pop
xor
cmp
into
push
xlat
add
dec
mov
ljmp
scas
inc
or
iret
scas
aam
and
cmc
rcll
cltd
ljmp
xor
faddl
or
insl
inc
in
push
pop
popf
cmpsl
jl
stos
out
loope
fcmovnu
adc
idivb
pop
jno
loop
arpl
sbb
fisubrl
push
lret
and
jmp
test
jp
and
in
lods
mov
js
lea
fcmovne
lods
and
std
rorl
rcrb
aad
push
xchg
stc
mov
inc
xchg
outsl
jae
sub
sbb
ds
out
ss
fwait
xor
push
into
enter
sub
xor
cmp
cwtl
daa
inc
fcmovne
pop
lock
adc
push
out
mov
fidivs
std
lcall
lds
jns
xor
mov
or
xor
or
test
scas
imul
test
in
xlat
jle
push
cmpb
faddl
fists
adc
loope
cmp
imul
icebp
decl
pop
sub
scas
leave
jle
jne
or
fisttpll
adc
adc
in
sub
cwtl
push
ret
movsl
ret
push
push
shlb
outsb
sbb
push
into
sbb
pop
inc
sbb
pop
ja
mov
mov
fiaddl
sub
sbb
xchg
int
in
jmp
hlt
insl
cld
or
ret
movsl
adc
cmpsb
xlat
mov
lock
dec
sub
lods
mov
xchg
xchg
push
rep
arpl
rolb
xor
xchg
mov
mov
bound
adc
jne
sbb
lret
push
mov
xchg
mov
pop
sbb
jno
jmp
or
mov
mov
inc
popf
pusha
jne
mov
mov
test
hlt
mov
add
bound
aas
enter
push
jmp
cld
push
xchg
in
out
sub
ja
adc
mov
sub
jnp
sti
sbb
bound
add
push
je
inc
mov
lahf
ds
jge
je
orl
in
dec
sub
mov
sub
jo
into
aad
xlat
cmp
jl
dec
out
dec
movsl
cmpsb
add
lahf
imul
inc
add
cmpsb
push
dec
dec
jecxz
bnd
xor
cli
cmp
push
cmp
hlt
or
jp
mov
push
xor
mov
shrl
pop
dec
mov
pop
push
xchg
rcll
out
add
test
or
in
mov
insl
pop
pop
and
add
stc
pushf
mov
ret
push
cmp
push
pop
mov
in
cmp
pop
mov
xor
sub
outsb
das
xlat
and
es
mov
loopne
mov
mov
pop
dec
add
in
inc
imul
push
hlt
testb
arpl
sbb
pop
ret
sub
pop
icebp
dec
les
sbb
xlat
das
sbb
xor
andb
xchg
loop
cmp
adc
stos
push
mov
inc
ds
decl
int3
mov
inc
dec
fisttpl
mov
and
xlat
test
dec
sarl
mov
shrb
cmp
dec
fisttpl
cltd
shl
mov
lret
pusha
inc
push
inc
mov
mov
sub
xor
push
sarl
cmpsl
sub
in
test
push
cmc
mov
out
or
movsb
cwtl
sbb
cmp
mov
subb
cs
xchg
stos
icebp
enter
cltd
add
or
aas
jo
pop
xor
fistl
lret
insl
cli
lods
into
sub
js
fstl
or
mov
add
repnz
rcll
into
pop
push
sub
push
push
mov
push
fidivrl
ja
aas
je
or
fdivs
scas
aas
jge
into
add
jnp
hlt
xchg
faddl
mov
cld
cli
push
mov
mov
or
jne
jecxz
scas
insb
cmp
rorl
sub
or
notb
add
into
adc
sub
cwtl
ret
lret
sarb
jge
mov
lcall
popa
mov
dec
add
arpl
test
mov
push
test
mov
dec
mov
mov
int3
jb
mov
arpl
cmp
popf
or
push
pushf
or
pop
andl
push
into
jl
pop
mov
cwtl
hlt
test
mov
rcrb
xchg
mov
adc
out
pop
iret
roll
insb
mov
pop
jge
cmp
lahf
fcmovbe
push
xor
pop
inc
lods
jo
shl
dec
enter
cltd
imul
push
inc
js
cwtl
das
ret
les
pop
les
lcall
jae
lock
sub
scas
adc
data16
jbe
sub
stc
stos
shrb
push
cmc
sub
shlb
xor
clc
dec
push
inc
push
fcoml
jo
inc
repz
xchg
xchg
stc
lret
into
mov
test
icebp
fstpl
adc
pop
ljmp
mov
sti
nop
mov
out
cli
cmp
xlat
push
dec
or
imul
sbb
dec
jbe
mov
xor
jbe
das
push
xorl
lret
inc
sub
es
push
sbb
or
sbb
jmp
ja
or
sbb
aam
fidivrl
cli
je
sub
push
js
stos
movsl
punpckldq
sub
jnp
es
and
or
nop
popf
aad
out
adc
xor
rcl
scas
inc
mov
jmp
pusha
popa
push
in
lret
mov
jle
push
cltd
xlat
pop
lea
subb
test
push
fisubs
inc
int3
xor
mov
cmpsl
cld
xor
mov
add
mov
jp
cmp
addr16
popf
pmuludq
lods
mov
push
jae
cwtl
push
jnp
cmp
rcrb
icebp
lods
sub
icebp
jecxz
xchg
mov
xor
inc
push
lods
fsubl
or
lods
movsl
adc
in
es
sbb
jl
mov
push
jo
jmp
push
mov
int
sub
jge
cwtl
inc
sbbl
pop
sbb
popf
mov
xchg
mov
xor
rorl
sbb
insl
push
test
cmpsl
popf
mov
popa
push
aam
push
adc
adc
lcall
jae
test
dec
mov
and
cltd
sub
inc
stos
mov
sbb
inc
mov
or
test
jmp
js
imul
mov
popa
loope
rorb
pop
sbb
jmp
push
rcll
xchg
sub
or
mov
mov
and
das
fbstp
cwtl
push
and
fucomp
add
into
mov
loop
sbb
faddp
or
sub
mov
sbb
ljmp
adcb
mov
dec
in
and
jp
add
repz
add
push
cmpsb
pop
repnz
jb
sbb
popf
aaa
xchg
mov
in
mov
dec
stos
test
sbb
mov
push
cwtl
lock
pop
sbb
add
adc
in
xchg
clc
lcall
add
adc
cmpsb
out
popf
push
lock
jo
jl
cltd
ljmp
daa
mov
mov
mov
xchg
loope
je
lret
std
push
and
sub
imul
stos
push
cmp
add
repnz
cmc
stos
aaa
push
addr16
stc
pusha
decl
imul
adc
mov
stos
sahf
pushf
mov
lcall
iret
in
insl
rcl
ss
inc
shll
xchg
xlat
fidivs
icebp
gs
sbb
adc
push
call
jl
xchg
mov
dec
xorb
cmp
out
mov
loop
and
test
adc
aad
adc
in
xor
cmp
sbb
stos
in
jmp
inc
adc
pop
rcrb
mov
mov
fidivs
push
mov
sbb
fs
stos
clc
sub
mov
enter
mov
sbb
or
push
popf
popa
jmp
dec
pushf
lea
cmp
inc
jge
pushf
cmc
js
pop
data16
sub
ss
inc
aad
mov
cld
mov
cmpsb
mov
lcall
mov
aad
out
imul
in
jae
jae
and
sbb
jae
cltd
test
pop
sbb
test
or
pop
and
jmp
or
cmc
hlt
sub
xchg
lds
xor
test
adc
push
sbb
xchg
fldt
inc
jp
adc
xor
xchg
cmp
ret
or
icebp
fidivl
sub
mov
xorl
hlt
out
test
popa
popf
jl
testl
cmp
inc
mov
lahf
sahf
adc
inc
adc
in
lcall
scas
mov
clc
test
out
mov
jle
xchg
fdiv
xchg
inc
pushf
sbbl
leave
inc
stos
out
jo
pop
clc
inc
mov
sbb
int3
jo
pop
enter
nop
push
mov
shr
fwait
pop
jb
loopne
call
jmp
sub
adc
jmp
push
movsb
lret
mov
lods
adc
dec
insb
pop
fucomi
das
sbb
jbe
js
mov
cld
jnp
ret
sbb
out
cmp
xchg
dec
and
int
loopne
push
cwtl
inc
fists
sbb
dec
jecxz
orl
in
stc
xor
pop
bound
inc
mov
xorl
fwait
mov
std
into
pop
push
iret
ret
inc
mov
in
ja
fidivrl
insb
pop
out
mov
jg
add
jns
imul
test
lret
loope
mov
adc
mov
subb
mov
push
mov
test
divb
loop
repnz
pushf
cmp
movsb
xchg
movsb
hlt
mov
jbe
mov
mov
pop
test
xor
ljmp
sti
addr16
xchg
aad
cmp
stos
nop
mov
jns
sar
shrb
dec
cltd
ja
adc
mov
adc
out
inc
xlat
rorl
inc
mov
incb
cmpsb
and
or
mov
lock
sub
pop
cs
push
pop
orb
jno
jp
dec
adc
jo
out
cmpsl
cli
add
lock
mov
mov
out
jge
cmp
mov
inc
lahf
stos
dec
ret
pusha
cmp
xchg
mov
out
repnz
shl
jb
pop
push
pop
jge
mov
outsl
int
and
jle
jne
das
pop
jns
mov
pop
pop
xor
pusha
icebp
sarl
pop
mov
adc
stos
nop
pop
into
jno
fistps
repnz
mov
test
outsb
adcb
pushl
es
shll
imul
andb
mov
loopne
out
test
cwtl
jecxz
das
in
push
mov
aad
jae
adc
sbb
pop
cmp
push
mov
inc
call
pop
xchg
adcl
sub
xchg
xor
push
xchg
sbb
mov
adcb
dec
mov
mov
fwait
bnd
sarb
pushf
lcall
add
arpl
lret
sbb
sbb
rorb
dec
test
bnd
loopne
xor
dec
loopne
vunpckhpd
lret
and
clc
jecxz
aaa
roll
or
jg
pushf
mov
xchg
mov
mov
fdivs
xchg
or
ss
jnp
cwtl
imul
and
dec
ficomps
lahf
dec
sbb
sbb
sbb
push
jb
or
arpl
pusha
decb
or
xor
loop
push
cmp
xor
popa
out
js
and
insl
and
test
dec
int
pop
outsl
adc
lea
movsb
pop
xchg
cmpl
lds
push
jns
lcall
dec
mov
mov
fsts
addr16
rcrb
insl
lds
mov
mov
and
add
movsb
push
std
js
mov
int3
cmpsb
dec
ror
sbb
lods
into
dec
popf
dec
enter
lea
fwait
shrb
mov
adc
jmp
mov
bound
pop
jmp
mov
repz
pop
inc
mov
les
in
in
setl
mov
lods
sub
lret
xchg
jo
push
jecxz
arpl
cmc
int
jns
xor
mov
xor
dec
out
inc
push
fs
popa
lock
mov
jns
out
icebp
dec
enter
shlb
xor
mov
ds
ds
leave
lahf
mov
adc
inc
xorl
lret
mov
test
jno
and
in
mov
sbb
arpl
pop
scas
or
sub
add
fwait
subl
adc
ja
nop
jle
add
or
sbb
mov
jle
jnp
addr16
negb
lds
in
mov
sub
stos
push
mov
cwtl
xor
pusha
mov
cmpsl
push
stos
mov
mov
and
xor
add
xchg
enter
std
sbb
sub
fmulp
outsb
jl
mov
loope
lcall
jge
or
pop
daa
shl
sar
sbb
int
cwtl
cmp
hlt
iret
imul
add
xor
cmpsb
jl
adc
mov
jmpw
push
in
xor
dec
xchg
cs
and
sti
xor
mov
add
lret
dec
sub
cld
sub
xchg
push
adc
add
push
mov
lcall
out
xlat
fnstenv
pop
insl
int3
popl
repnz
and
lds
jo
test
into
iret
lds
andl
sbb
dec
loopne
pop
mov
insb
dec
xchg
sbb
cmp
inc
aas
ss
or
pusha
add
push
xor
fcompl
popf
test
sbb
lcall
das
bswap
jl
lahf
movsl
jecxz
mov
js
and
push
into
inc
sahf
cmc
dec
lret
movb
mov
xor
push
outsb
ljmp
bound
adc
pushf
loope
data16
sbb
loopne
sub
mov
push
mov
inc
or
add
push
jae
in
lret
xor
fisubrs
or
sub
jmp
add
mov
push
dec
push
orb
cmpsb
rcrb
fwait
clc
mov
in
mov
bound
pop
mov
push
movsb
repz
push
lret
hlt
mov
rcrb
dec
shll
mov
push
shlb
jecxz
jg
push
and
mov
icebp
mov
outsb
push
fdecstp
mov
lods
inc
insl
imul
dec
imull
dec
inc
int3
repz
testb
mov
push
pushl
inc
push
mov
inc
bound
xor
xor
dec
mov
pop
push
aas
fsubr
mov
stos
jb
shll
aas
mov
and
jecxz
sub
pop
jo
push
and
ja
adc
fbstp
loopne
or
arpl
add
adc
cmpsb
cwtl
add
lret
sbb
jae
in
arpl
fs
sahf
mov
shrb
xchg
jecxz
clc
lret
shr
pop
pushfw
jle
ss
scas
push
stos
pop
popa
dec
add
imul
pop
pusha
push
cmp
push
or
mov
imul
loop
inc
mov
repnz
cmp
stc
adcb
xchg
add
outsb
popa
xor
cmpsb
inc
enter
lock
add
pop
cltd
sarl
stos
mov
jle
mov
sbb
mov
frstor
mov
push
jg,pn
cli
push
rol
inc
sub
push
add
ficoms
inc
jg
subl
fidivs
shlb
mov
push
xchg
idivb
int
dec
mov
iret
mov
or
dec
loope
add
xchg
aam
lcall
dec
sti
xlat
insl
clc
and
xor
and
xchg
mov
gs
xor
lret
adc
es
scas
sbb
icebp
mov
movsb
mov
in
inc
and
and
jmp
sub
pop
repz
inc
lds
xor
rcll
loop
cltd
sar
filds
pushf
cli
and
sbb
xchg
sarb
leave
push
sbb
mov
mov
out
dec
sti
cltd
lds
es
popf
inc
cmp
mov
sub
jo
cwtl
cmp
inc
xchg
mov
and
sbb
push
push
xchg
aad
jnp,pt
call
or
es
pop
imul
in
cmc
sbb
in
inc
aaa
into
mov
mov
repz
pop
nop
lock
mov
scas
xor
in
jg
psubsw
cmp
out
rorl
sahf
xchg
loopne
lret
pop
retw
sti
mov
xchg
mov
aad
fists
insl
mov
and
imul
mov
fsubs
les
daa
inc
loop
add
test
add
mov
and
dec
xor
data16
repz
leave
lea
xor
mov
mov
insb
imul
jge
inc
ljmp
insl
pushf
mov
lds
idivl
sub
movb
pop
lea
xor
jl
mov
clc
aas
and
mov
adc
imul
cmc
mov
xor
nop
pop
in
imul
push
lret
dec
xchg
cmp
jmp
loope
mov
ss
incl
into
xor
adc
push
mov
xchg
insl
mov
xor
mov
cmp
and
mov
sbb
gs
jmp
sub
mov
call
sbb
adc
je
inc
jp
push
mov
jne
cmpl
and
cs
call
roll
cmp
loop
sbb
pop
sub
inc
sub
dec
test
dec
cmp
mov
push
pop
cltd
je
xor
mov
int3
dec
lret
int
lods
stc
add
out
jns
pop
or
arpl
sub
into
pop
fistpl
dec
add
jo
pop
aaa
cmp
out
lods
dec
sub
mov
and
inc
and
cld
jo
std
enter
dec
or
mov
out
or
push
jle
sub
and
jne
clc
leave
xchg
jmp
enter
shlb
call
push
adc
fcmovu
je
mov
lahf
mov
add
mov
lret
out
mov
into
pushf
lahf
data16
mov
xchg
pusha
mov
cmp
clc
scas
pop
dec
mov
and
dec
nop
inc
sbb
push
cmp
fisttpl
jns
sbb
xchg
fxch
std
cmc
mov
out
mov
cli
cmp
ja
pushf
ljmp
jno
subb
jl
xor
idivb
sarl
and
jae
ss
cmp
inc
divl
mov
lret
jb
insb
scas
adc
jne
outsl
movsb
cmpb
fimuls
adc
push
dec
loopne
shrl
icebp
popa
fsubrs
and
push
mov
jo
jle
mov
fistps
notb
mov
fisttpll
inc
or
out
dec
test
loop
mov
xchg
lods
inc
cmp
and
push
es
cmp
inc
push
clc
mov
sub
cwtl
cli
xchg
imul
lods
pop
inc
cli
clc
mov
dec
push
xchg
fidivl
test
or
orb
mov
push
add
and
push
inc
mov
es
pop
pop
icebp
shll
sub
mov
sbb
test
dec
cmp
jbe
or
mov
repnz
pop
in
mov
lds
std
out
in
fidivl
imul
dec
mov
push
cmp
xor
adcb
xor
ja
adc
sbbb
and
lds
mov
sub
fsubr
lods
mov
in
sbb
xchg
adc
fcoms
repz
mov
in
cmp
inc
daa
jo
xchg
or
cld
out
dec
dec
mov
shl
mov
push
mov
mov
fsubl
shll
add
das
into
setne
cmpsb
ret
add
cmp
inc
jg
xchg
xorl
fstps
jecxz
aaa
popa
inc
inc
out
dec
das
divb
mov
pushf
test
push
xchg
adcb
add
pop
mov
js
repnz
mov
fstpl
inc
jg
or
and
pop
cmp
sbb
fcom
subb
jge
mov
test
pop
pmaxsw
xchg
mov
pop
fdivr
or
pop
lods
leave
ret
push
das
nop
repnz
adc
dec
mov
leave
js
dec
jbe
mov
in
xor
les
iret
test
addr16
aam
mov
xchg
pushf
lods
frstor
fwait
lea
rcr
mov
mov
hlt
or
or
or
ret
pop
insl
pop
mov
xchg
cmp
mov
add
sbb
sub
sbb
mov
data16
adc
bnd
andl
jecxz
lods
mov
cli
gs
loop
xchg
mov
ret
lock
ret
adc
mov
sbb
or
push
popa
std
js
sti
sbb
jne
mov
lret
cmp
inc
clc
and
dec
mov
pop
iret
add
leave
out
adc
mov
js
mov
outsb
xchg
pushf
cmp
mov
jns
or
gs
xchg
shlb
repnz
mov
pop
xchg
divb
mov
inc
mov
pop
sub
loop
sub
inc
stos
pop
pop
mov
mov
insb
sahf
jnp
mov
lods
xor
bound
jle
sub
das
fcompl
data16
inc
rcrb
movsl
loopne
cmp
push
shrl
test
popf
sbb
aaa
pop
stos
jge
ret
aas
mov
imul
popf
rcl
rcrl
sub
movsb
jne
loopne
dec
sub
fcom
ret
int3
test
jb
fnstcw
movd
xorb
in
lods
adcb
sbb
or
int
sub
push
xchg
test
sbb
pop
dec
adc
add
cmpsb
fdivrs
sbb
call
insb
stos
sub
pushf
sbb
fnstenv
cmpb
cmp
add
lret
push
mov
xchg
pop
push
add
jp
or
pop
call
fs
aaa
dec
inc
sbb
out
insb
cmp
jae
pusha
pop
std
add
mov
insl
inc
add
mov
pop
lcall
pop
sbb
test
cmp
add
repnz
fwait
adc
fwait
cmpsb
and
push
mov
and
pusha
or
cmp
stos
cmp
inc
lock
pop
test
aas
adc
je
mov
push
movl
in
pop
sbbl
icebp
stos
push
cmp
out
stc
push
rolb
mov
inc
push
mov
fsubs
das
repnz
pop
adc
mov
iret
push
push
lcall
daa
shrl
ja
das
sub
sbb
mov
mov
out
stos
jle
jb
aaa
xor
scas
inc
fstpt
sbb
stc
movl
out
jmp
xlat
cmp
enter
jno
dec
test
adc
stos
jmp
out
insl
out
sbb
test
push
lret
xchg
and
push
mov
push
rcl
pop
and
jg
jge
pop
cld
inc
xchg
scas
in
pushf
xchg
xchg
or
das
aaa
xchg
inc
mov
mov
cmp
adc
aad
pop
lret
pop
je
jp
fisubrs
mov
scas
popa
lods
xor
sbb
dec
mov
jle
mov
sub
cltd
and
push
shl
sub
cmpsl
fnstsw
pop
pop
rorl
fildll
dec
add
repnz
fcompl
div
or
gs
into
sub
fiaddl
enter
clc
lods
pop
popa
cld
or
mov
sub
notb
es
arpl
mov
in
js
mov
sub
mov
or
jle
push
lahf
outsb
inc
inc
iret
scas
or
or
subl
xchg
ds
push
cmp
xchg
pop
or
xchg
fstl
inc
add
sbb
inc
fld
inc
cmc
loope
cs
pop
cmovge
inc
or
mov
lahf
je
mov
adc
in
adc
push
jge
pop
fwait
aas
jne
ret
stos
lret
in
clc
or
xlat
int
inc
push
mov
imul
fchs
iret
pop
add
leave
add
and
ret
pop
fiaddl
call
test
cmp
sub
lea
loope
pop
jg
stos
ret
lcall
inc
iret
pop
xor
repz
jg
xor
jae
insb
fucom
out
fdiv
cmc
rorb
inc
mov
call
in
jae
leave
mov
fstl
xor
xchg
mov
and
insl
mov
popa
xor
popf
pop
mov
iret
je
sahf
mov
jne
push
jbe
push
stos
ret
jge
popf
into
mov
jp
cltd
xorl
dec
mov
pop
fimull
hlt
sub
in
and
lods
xchg
jge
sbb
push
es
and
out
or
lock
dec
rcll
cmp
cmp
mov
pushf
fwait
or
mov
dec
enter
xchg
jno
mov
mov
xor
add
fdivl
ret
mov
jne
sbb
addr16
insb
xlat
data16
mov
mov
or
rcll
fdivl
ds
or
mov
pop
inc
iret
pop
inc
cmp
mov
push
mov
cmpb
cmpsl
push
and
loope
fst
pop
rcrb
dec
lret
cmp
mov
sti
and
std
lea
add
int
test
fcompl
xor
xor
popl
pop
jp
dec
mov
lock
and
inc
and
in
cmpl
jp
lcall
insb
mov
dec
fsubl
push
fs
and
adc
push
subb
dec
les
scas
mov
pop
es
rorb
xlat
cld
sahf
std
sbb
lods
inc
sbb
js
pop
and
inc
mov
jecxz
rorb
cmp
jnp
arpl
mov
sub
add
and
xchg
imul
add
shl
dec
popa
xor
inc
fs
push
fdiv
mov
mov
lret
pop
mov
xchg
popa
lods
adc
out
adc
jp
xchg
sbb
xchg
out
loope
jns
sbb
adc
ret
cmp
inc
dec
mov
int3
mov
mov
aad
rclb
xchg
out
jnp
mov
xlat
test
push
cmc
je
inc
lock
adc
and
cmp
pop
mov
cs
scas
arpl
les
mov
inc
sub
arpl
jb
ss
sbb
cmc
jl
shr
clc
jae
adc
outsl
mov
lea
jp
pop
push
cli
call
jb
fs
ret
addr16
pop
mov
pop
xor
jb
popa
xor
xchg
mov
mov
mov
fnstsw
jmp
aam
jbe
and
mov
in
lahf
cmpsl
or
jp
fsubl
sbb
mov
in
out
lods
sbb
test
cmp
dec
fdivs
ret
adc
xor
pop
out
jge
add
stos
repnz
insl
cmp
or
jg
enter
adcb
in
les
or
or
mov
inc
loop
dec
sarl
orl
lret
mov
sub
mov
pop
fldenv
cli
push
inc
arpl
imul
xchg
ret
or
mov
pop
inc
push
cmp
pop
inc
lret
pop
rcrb
dec
stos
mov
adc
in
jl
lods
push
cmp
sbb
pop
outsl
enter
xor
rclb
pop
out
mulb
nop
push
or
ss
arpl
lret
cmc
ret
loop
push
push
adc
shll
popf
aam
into
cs
push
lods
jge
jns
ret
notb
xchg
iret
cmc
repz
add
shll
out
and
call
lds
jg
pusha
aam
inc
call
ds
aam
mov
dec
mov
mov
mov
out
arpl
ss
inc
sbb
jmp
scas
clc
cltd
add
ret
repz
push
jno
push
pusha
push
sub
sar
xchg
scas
shl
cmpsb
fldcw
in
scas
sarl
mov
scas
jecxz
shr
and
ret
pop
sub
shlb
outsl
inc
js
and
imul
iret
or
jg
inc
insb
call
or
jl
sub
sub
sub
loopne
sbb
enter
mov
sahf
mov
pop
sub
dec
push
rcrl
fildll
das
shlb
dec
into
sahf
push
rcr
jno
movsl
scas
mov
arpl
repnz
insb
sahf
jne
fldenv
idiv
adc
sahf
inc
fmul
sbb
add
dec
xchg
rcll
repnz
push
cmp
xor
dec
push
adc
jo
pop
andb
pop
js
lret
int3
inc
and
or
and
icebp
movsb
enter
mov
rcll
pop
jge
rcrb
xor
addr16
cmp
into
push
fs
sarl
ja
jmp
into
std
and
sbb
mov
outsl
loope
cmp
dec
sbb
out
jmp
push
pop
out
push
mov
xchg
popf
pop
jg
cmpsl
and
rolb
push
mov
xchg
notl
push
std
mov
lea
clc
fsub
dec
xchg
jno
or
mov
mov
addb
cld
add
lahf
jmp
pushf
xchg
push
add
idivl
xor
xor
mov
addr16
cmpsb
mov
pop
or
jne
push
into
jg
and
sbb
popa
bound
stos
cmp
or
addl
das
clc
inc
cmp
pop
cmpsl
daa
xor
jge
gs
insl
xor
cs
loop
xor
push
in
jge
cmp
jne
sbbb
mov
bound
pop
push
jp
shlb
sbb
std
dec
adc
lods
jo
mov
mov
or
fsub
lea
and
jecxz
insl
jmp
je
shlb
add
cmp
push
aas
ss
push
scas
data16
jns
lds
pop
or
pop
cwtl
popa
adc
repz
fwait
xchg
iret
mov
mov
loopne
call
test
dec
test
push
insl
leave
xchg
ja
mov
mov
mov
jmp
scas
jmp
cmpsb
push
std
cmp
or
inc
push
in
jno
loopne
loope
cmpsb
popf
adc
in
andb
ja
dec
adc
push
xchg
or
sbb
js
repnz
bound
cwtl
cmp
add
test
and
popf
xchg
cwtl
dec
or
fs
lods
push
xor
cmpsl
pusha
popa
xchg
push
inc
adc
cltd
sbb
mov
fistps
xchg
and
repz
in
adc
sub
fdivrl
and
cld
loop
dec
mov
cmp
push
ret
fwait
sub
sbb
and
sbb
jnp
sbb
push
pop
loopne
and
shl
mov
daa
mov
jge
sub
scas
lods
pop
jnp
push
add
xor
inc
dec
ds
push
rolb
mov
rorb
out
xor
insb
bound
cld
pop
repnz
adc
or
repnz
in
inc
out
jno
sbbl
xchg
and
and
cltd
cmc
test
adc
inc
and
std
std
cltd
mov
jne
mov
icebp
das
enter
xor
sub
cmc
int
addl
fldlg2
daa
push
lock
sbb
or
jae
stc
push
pop
negl
cmp
xor
pushf
xchg
nop
stos
fstps
fisttps
dec
pop
adc
das
xor
add
jne
dec
mov
aaa
jnp
das
clc
sysret
cmpsb
lret
ds
fstl
out
lock
sbb
pop
pop
cmp
int
call
mov
adc
das
cmp
popa
cmp
pop
pushf
cwtl
jg
bound
sbb
pushf
mov
adc
adc
dec
push
in
jecxz
sbb
gs
int
or
mov
push
movsb
shlb
cld
inc
dec
lcall
mov
outsl
inc
ds
mov
fs
jg
pusha
in
jmp
jge
sarb
mov
sbb
pop
lods
inc
lret
enter
lods
js
jecxz
mov
pop
or
mov
cmpsl
cmp
sbb
fimuls
inc
ja
cwtl
rolb
ss
aaa
jl
mov
js
ja
inc
add
push
aam
mov
xchg
push
sbb
enter
mov
fnstsw
cmp
cmp
or
fs
mov
pusha
xor
arpl
pop
clc
adc
clc
cs
out
xchg
cmp
rcr
mov
lret
test
jns
dec
cmp
test
jno
dec
sbb
push
mov
cmp
xchg
or
loop
jns
mov
sbb
fwait
sbb
push
into
sbb
mov
ds
mov
push
outsb
in
test
mov
popf
ret
adc
out
jge
cmp
mov
je
xchg
jmp
jne
loope
bound
outsl
cmc
dec
ret
mov
and
out
sahf
or
aaa
loop
add
test
aad
test
dec
stos
sub
mov
sarb
or
mov
cmp
sbb
lds
fwait
adcl
mov
xchg
stos
xor
out
nop
pusha
stos
pop
dec
xor
mov
movsb
inc
xor
insb
sub
out
js
add
jle
sub
jl
inc
mov
ror
jbe
scas
cmp
js
push
pop
push
bound
xchg
push
mov
jns
out
inc
push
push
cmpsl
mov
push
sub
ljmp
outsl
inc
ret
test
adc
mov
iret
bound
in
xor
mov
out
arpl
leave
push
dec
sub
inc
sub
and
int
dec
and
imul
push
aad
aam
jbe
or
inc
test
sbb
mov
test
jle
imul
repnz
xor
jnp
mov
jnp
or
sbb
jb
lret
inc
and
dec
or
or
pop
scas
dec
sarb
mov
mov
pop
and
mov
xlat
out
cld
int3
push
int
std
outsl
rorb
inc
push
stos
insb
gs
mov
or
cli
dec
cmp
xor
pop
int3
addr16
test
xor
std
es
int3
fwait
ss
js
inc
js
fadds
inc
and
subl
insb
push
fsubl
lret
leave
adc
xor
mov
jl
pop
push
sbb
add
mov
adc
mov
xchg
hlt
shrb
dec
enter
js
dec
clc
mov
cmpps
in
pop
xchg
dec
stos
push
push
fldcw
and
or
dec
jno
jge
aad
addb
jbe
mov
pop
shll
in
dec
fadd
cltd
mov
mov
insb
scas
lret
lret
jb
xor
jg
cmpsl
out
jno
dec
lock
addl
cmpsb
ljmp
lds
xchg
push
lods
fdivrl
pushf
jno
lret
xor
dec
fdivrs
fdivrl
ret
roll
bound
mov
mov
mov
sub
dec
pop
and
xlat
cmpsl
mov
lods
or
insl
jnp
fs
push
add
bound
test
xor
arpl
sbb
gs
das
outsl
push
data16
and
insl
in
inc
lea
movsb
aam
pop
push
fsub
and
xor
mov
scas
mov
pop
pop
enter
aaa
xor
cmc
lock
cmpsl
adc
ret
mov
jl
pop
xchg
cs
mov
or
ss
pop
lret
and
cmp
jp
cld
sbb
outsb
outsl
sbb
pop
or
arpl
cmp
test
fs
jns
lods
fnstsw
adc
mov
leave
mulb
xchg
pop
xchg
popa
dec
daa
cmp
mov
test
xchg
insb
imull
push
std
cmp
pop
jecxz
dec
inc
add
popf
dec
mov
adc
mov
fbstp
dec
mov
sarl
insb
shlb
jnp
pusha
or
mov
add
dec
dec
mov
arpl
imul
fimull
mov
inc
leave
jb
fdivrs
sar
mov
movb
lods
xchg
dec
lcall
gs
push
mov
cmp
or
lahf
out
xor
mov
push
sti
aad
cli
xor
mov
adc
cs
imul
out
aam
cmpsb
ficoml
push
sti
push
hlt
test
sub
sti
repz
push
cmpsl
adc
xor
and
ja
jmp
sar
dec
pushf
pushf
and
pushf
mov
scas
cmp
repz
sub
jnp
sbb
inc
shlb
fnstcw
aaa
add
and
lahf
stc
aaa
test
sub
and
insl
rolb
stos
mov
mov
subl
sbb
fiadds
rorb
jb
ficoms
xchg
push
hlt
jmp
rcl
mov
xchg
ror
jecxz
add
sub
cmpsb
mov
movsl
xor
mov
ret
fistl
popa
movsl
loopne
cmp
mov
fs
mov
cmc
xlat
fneni(8087
jo
daa
ja
je
lahf
jno
jg
fstpt
aas
inc
xchg
sub
loop
inc
push
xor
mov
and
ljmp
xchg
mov
imul
pop
cltd
jmp
dec
jle
mov
dec
jne
rcrl
sbb
insb
sbb
sti
cli
and
scas
mov
scas
iret
mov
xor
dec
adc
mov
push
out
push
jns
jno
mov
stos
xor
adc
pop
push
int
mov
mov
in
sti
lcall
sbb
jae
mov
sbb
fldt
daa
shrb
sbb
out
into
mov
mov
and
mov
dec
xchg
adc
orl
shlb
dec
cs
andl
jnp
push
inc
aaa
jle
int3
imul
jnp
push
or
iret
pop
enter
icebp
lea
xor
test
decb
add
out
ss
mov
nop
imul
stos
test
pop
ja
xchg
jns
jno
push
loop
xchg
movsb
test
cmpsb
outsb
fildll
dec
or
cmpsb
loope
mov
inc
repz
shrb
add
rclb
inc
add
sub
stos
cmp
notl
shll
cwtl
ret
adc
mov
sbb
mov
test
mov
jg
mov
add
mov
push
push
insb
or
adc
mov
push
and
mov
mov
sbb
rcrl
loopne
push
int3
xchg
inc
mov
gs
jle
xor
pop
int
lcall
sub
push
mov
pop
push
pop
lea
mov
add
xchg
shrl
int3
js
mov
adc
insl
inc
dec
xor
xchg
cmp
mov
loopne
stos
push
cmc
scas
scas
or
in
call
fldcw
dec
insb
sbbb
pop
aad
or
xor
pop
dec
xchg
xchg
pop
xchg
call
pop
popf
xchg
pop
pop
cmc
xchg
nop
xchg
mov
push
sub
add
ljmp
mulb
in
xlat
xchg
daa
and
sub
jbe
sub
or
or
inc
test
inc
jp
push
push
and
dec
mov
inc
shll
mov
jl
sbb
push
push
mov
inc
pop
cmpsb
mov
adc
push
dec
add
sub
int
sbb
shrl
xor
sub
ret
dec
dec
pop
or
xor
fdivrs
adc
flds
mov
mov
ret
sbb
jp
or
and
mov
pop
dec
test
or
test
xchg
pop
adc
push
mov
stos
mov
fisubrs
lret
insb
int
jl
lock
push
pop
mov
enter
xorb
jecxz
jmp
cmpsb
mov
jg
or
sub
loope
inc
mov
lret
inc
add
or
rcl
sub
data16
pop
in
mov
mov
std
lahf
aas
xchg
adc
mov
and
lea
cmp
loope
in
imul
cmp
mov
adc
push
mov
neg
dec
or
out
mov
dec
nop
nop
xchg
data16
or
mov
out
imul
push
scas
mov
add
mov
mov
lret
fstl
orb
insb
pop
ja
fdivs
add
or
sbb
aaa
mov
and
sub
adc
mov
cld
loope
jmp
xor
inc
mov
test
pusha
lret
mov
mov
lock
movsb
sub
and
outsl
dec
mov
or
push
out
sub
scas
push
cwtl
jo
enter
jo
inc
xchg
cmc
add
mov
negb
lea
mov
push
add
rep
dec
bound
jmp
inc
jge
nop
and
sbb
repnz
dec
xchg
sbb
dec
mov
push
and
sbb
xchg
rolb
loope
add
xchg
jnp
daa
in
cli
aad
das
add
and
adcb
lret
pop
ja
xor
mov
mov
dec
add
in
lea
mov
pop
and
lea
xchg
ljmp
mov
enter
dec
mov
push
hlt
lds
mov
inc
xchg
stos
bound
cmc
jbe
jmp
hlt
add
dec
mov
push
add
push
xchg
ljmp
fimuls
push
lret
dec
mov
icebp
mov
dec
mov
std
cmp
adc
cmp
mov
sub
push
scas
inc
pop
sbb
stos
gs
cmpsb
mov
xchg
sub
outsb
mov
shlb
pushf
mov
add
daa
inc
xor
xor
leave
jmp
adc
add
xchg
fildll
ret
loope
subb
jl
mov
movsl
orps
dec
sbb
and
ret
lock
arpl
xchg
int3
fucomi
xchg
enter
sbb
jb
jbe
lods
adc
jns
arpl
and
aaa
mov
test
das
outsb
lea
pop
stos
cmp
sub
idivb
nop
hlt
xchg
inc
xorl
aad
mov
adc
adc
addr16
insl
aaa
xchg
sub
xchg
jne
adc
icebp
dec
cmpsb
inc
jmp
xor
sbb
lret
outsb
inc
pop
cmp
scas
loop
les
cltd
lods
lods
mov
insl
mov
cmp
mov
jmp
adc
xor
stos
jo
mov
mov
lods
ljmp
dec
ficoml
cmc
xor
sti
jmp
push
push
in
int
test
mov
cvtps2pd
sub
pushf
push
jnp
iret
pusha
lods
cmp
push
js
lcall
loopne
cmpsl
lcall
jae
push
sarl
dec
inc
dec
xor
sti
outsl
sub
xchg
sub
stos
cmp
loope
inc
movsl
or
lahf
xor
sub
and
pop
sbb
sub
mov
push
fdivs
lds
dec
sahf
sbb
xchg
aam
das
lods
loopne
dec
push
fwait
loopne
popa
cmpsl
cs
in
xchg
outsl
mov
xlat
mov
push
push
imul
fisubrs
jp
in
xchg
inc
push
push
adc
lods
push
out
cmovo
into
adc
push
iret
loop
dec
jl
mov
xchg
faddl
adc
xchg
or
add
push
fstpt
lea
push
fadds
loop
nop
loop
adc
inc
xchg
mov
fwait
jbe
jl
or
jns
stos
xchg
adc
cmp
jp
stc
psubq
jb
in
push
pop
push
inc
jnp
xor
mov
jl
and
jae
test
or
enter
jecxz
push
insl
and
xchg
je
repz
pop
mov
sbb
inc
jo
scas
cmpsb
cs
jg
jl
cmp
and
adc
sub
sub
sbb
dec
sub
int3
mov
sub
xchg
add
rcr
fiaddl
std
sub
dec
mov
rcrl
fsub
nop
jno
leave
jle
daa
cmp
lds
cli
mov
ja
rcrb
jb
xor
cs
sub
aaa
out
sbb
jmp
jae
lcall
out
pusha
xor
lods
adcb
scas
mov
fdivr
or
movsb
hlt
cmp
push
lea
and
xchg
insl
inc
mov
cltd
lcall
test
jl
and
sti
add
adc
mov
inc
pop
fadds
pop
inc
jbe
imul
jbe
mov
pop
int3
cmp
pop
in
pop
xchg
lods
in
cmp
sbb
lods
inc
jbe
cld
or
out
fwait
mov
fdivp
inc
mov
inc
cld
push
into
test
out
cmpsl
popa
call
call
push
jp
push
fwait
mov
and
imul
adc
arpl
mov
xor
cmp
lock
adc
and
mov
pushf
sub
mov
out
cmp
rcll
outsb
mov
sarl
dec
into
sub
xchg
aad
imul
scas
add
add
push
cmp
jns
js
xor
int
xorl
loop,pt
testl
xchg
popa
iret
xor
aad
jle
dec
xchg
inc
pop
xor
mov
or
and
xor
clc
and
dec
jmp
shrb
ret
mov
test
jae
lcall
insl
out
jl
repnz
add
add
jbe
pop
out
sub
add
dec
xor
cltd
nop
push
mov
je
mov
pop
mov
scas
hlt
adc
adc
and
mov
xchg
arpl
push
xchg
xchg
push
ud1
jne
and
mov
cmpl
sub
xchg
arpl
push
push
addb
aam
and
les
mov
sti
inc
mov
cmp
xchg
mov
push
fcompl
movsl
pop
mov
sbb
adcl
jle
jp
gs
xor
movd
add
xchg
add
pop
ret
adc
inc
popf
out
imul
lret
mov
sub
fsub
stc
in
dec
testl
mov
sarb
fnstenv
add
sbbl
imul
and
mov
insl
lret
loopne
pushf
adc
jo
and
jmp
jbe
jmp
fstpt
adc
loope,pt
stos
add
push
lret
sarl
stos
mov
inc
jge
std
jle
ret
xor
xchg
push
ret
pop
add
sub
push
cmp
pushf
iret
cltd
out
cmp
xor
in
sbb
cmp
in
push
sbb
xchg
cmp
or
adc
push
test
add
jne
sub
adc
pop
loope
stc
iret
sahf
ja
sahf
scas
mov
push
or
idivl
data16
loop
push
jbe
adc
ds
jle
js
lcall
out
push
fisubs
push
fisubrs
rclb
mov
xchg
push
jecxz
sbb
xor
mov
mov
sub
cld
daa
icebp
or
ja
in
in
dec
pop
cmp
jae
pop
pop
xor
loope
arpl
mov
leave
aam
push
insl
es
ss
rolb
jb
mov
movsl
or
movsb
data16
mov
stos
cmc
aam
out
mov
jecxz
sbb
test
jns
sbb
ljmp
push
cmp
arpl
dec
imul
inc
leave
pusha
fidivrs
out
jno
push
add
sbb
push
add
add
cmp
hlt
rcrl
dec
daa
jns
or
clc
fsubrs
inc
loopne
mov
add
add
mov
cltd
adc
adc
and
mov
loopne
lea
and
iret
mov
incb
cld
arpl
mov
loope
add
jl
lock
add
std
xlat
mov
aam
push
adc
mov
xchg
faddl
aas
inc
xor
mov
fsubrp
push
sbb
jo
movsl
cmp
fadd
add
push
mov
testb
pop
cmp
dec
push
push
mov
or
adc
pop
xchg
xchg
mulb
dec
inc
aad
sbb
xchg
mov
mov
cli
dec
xor
lret
repz
pusha
push
jl
ja
mov
pop
push
pushf
cmpb
lock
popa
xor
xchg
fwait
insb
repnz
mov
aad
sar
add
mov
or
roll
xor
movsb
sbb
mov
mov
dec
jmp
fs
call
pop
sbb
outsb
cmpl
cmc
mov
stos
movsb
inc
out
fdivrl
loop
mov
dec
iret
jge
lret
aaa
mov
lock
cmc
jo
or
inc
ss
popa
pop
in
sar
movsb
cmp
jbe
stos
jmp
cld
fisubl
jne
mov
fcoms
mov
push
adc
sbb
xchg
ret
dec
data16
bound
popf
sub
test
stc
push
loope
fucomi
popl
sarb
cltd
cltd
inc
lahf
lahf
jecxz
pop
data16
es
js
lock
push
xorb
iret
pusha
cmpsl
jnp
les
sub
js
mov
xchg
pop
shlb
xchg
add
es
jg
into
adc
adc
jl
js
xor
cmp
pop
xchg
cli
pop
test
mov
and
test
inc
pop
sbb
add
jmp
adc
fidivl
dec
mov
adc
fdivs
mov
out
mov
dec
cmp
mov
test
pop
icebp
xchg
add
rol
mov
arpl
inc
aam
and
and
mov
dec
outsl
lea
add
mov
jae
mov
nopl
idivb
out
mov
pcmpeqd
mov
aaa
mov
sub
adc
aam
pusha
jmp
sbb
pushf
decb
test
mov
xor
cs
insl
xor
cmpsl
or
repz
push
jle
adc
or
mov
in
mov
ret
cltd
cs
test
jb
inc
gs
call
fistl
iret
xor
or
xchg
jb
sub
and
subb
fsts
mov
insl
cmc
js
jb
outsb
push
xor
test
stc
popa
fwait
cld
fdivrl
rcll
or
in
dec
sub
les
mov
insl
pop
xchg
push
pop
aam
enter
aad
cmp
mov
out
fnsave
jo
push
stos
scas
loop
or
add
into
sub
lds
hlt
enter
mov
roll
in
pop
add
or
jns
outsl
sub
mov
fldl
icebp
jge
incl
cli
adc
or
in
mov
jle
fld
leave
flds
xchg
popf
pop
cltd
sub
or
fistl
jno
inc
xlat
inc
push
cmp
popaw
pop
jmp
iret
pop
js
fildll
test
call
rclb
mov
fcompl
arpl
xchg
pop
push
lret
push
xchg
es
push
mov
ret
mov
dec
repz
stos
jo
dec
aaa
pop
jl
cld
xor
dec
ds
das
call
sbb
js
mov
arpl
push
push
fistps
arpl
lds
xor
in
add
bound
and
cltd
hlt
lods
lods
iret
out
inc
add
pusha
addl
lods
addb
jg
sbb
push
das
les
in
mov
cmpl
test
cmp
dec
or
ret
jbe
insl
jg
es
mov
jg
test
clc
add
mov
jo
fbstp
jno
jne
icebp
mov
loopne
push
pxor
sbb
leave
stc
loop
jle
std
into
int
cli
fs
es
sbb
pop
lea
lahf
adc
fldenv
ret
jae
xchg
mov
lock
subl
pop
in
orb
push
or
push
xor
xor
testb
repz
aaa
dec
ljmp
adc
cmp
cmp
xchg
jl
ret
rorl
mov
jb
push
add
jns
call
repz
xor
shrb
sub
sbb
push
mov
sbb
or
jo
lock
xor
stos
outsl
inc
mov
jge
cmp
mov
int3
jmp
mov
push
mov
and
xor
mov
insb
pop
test
xchg
test
jle
mov
decl
inc
stos
or
daa
cmpsl
adc
mov
pop
push
lahf
adc
scas
fidivrl
jnp
inc
xor
ret
mov
aad
js
sub
jb
adc
adc
push
mov
scas
cli
sub
lds
add
adc
xlat
and
pop
mov
iret
scas
sub
cmpsb
stos
inc
mov
jnp
adc
ss
cld
or
sti
outsb
xor
dec
pop
xchg
lods
lods
dec
bound
stc
and
fwait
inc
ja
sahf
mov
add
mov
mov
popf
fdivrs
push
sub
and
andl
and
mov
xor
inc
jecxz
loopne
push
in
imul
lea
imul
fidivrs
or
sub
inc
fidivrl
push
cmp
xchg
aaa
sbb
fildll
sti
es
test
mov
xor
jp
insb
and
je
inc
divl
add
aad
jne
sarl
xchg
mov
cmp
sub
out
lock
enter
sbb
outsb
add
dec
ret
fnsave
repnz
xlat
stos
sub
enter
mov
cmc
aaa
pop
imul
and
push
fucomp
push
xlat
repz
jb
mov
adc
icebp
cli
jmp
add
mov
inc
sbb
or
andl
mov
cmp
cs
rorl
and
sub
mov
mov
xor
mov
pop
jmp
insb
sub
add
and
mov
xchg
daa
jo
lds
dec
aam
divl
cs
sbb
mov
cmpsb
aaa
insl
mov
lcall
pop
outsl
loopne
decb
shll
jp
add
imul
ss
pop
les
scas
cmp
lret
inc
mov
mov
pusha
notb
scas
inc
fs
sbb
repz
mov
fidivs
pop
lea
out
xbegin
push
xlat
rolb
add
pop
sti
jae
inc
mov
mov
shl
pop
dec
ljmp
repz
out
imul
add
test
inc
mov
adc
ljmp
xchg
xchg
in
stos
loopne
arpl
ror
out
push
cld
pop
cmp
jo
shrb
jo
fstpl
not
ljmp
repz
jbe
daa
mov
fwait
loop
or
mov
xchg
adc
fnstcw
push
push
xlat
mov
rorl
sub
and
adc
in
and
enter
mov
lahf
pop
add
or
xor
stos
xchg
jb
pop
dec
pop
xchg
mov
stos
add
cltd
repnz
inc
dec
daa
mov
push
fdivrl
stos
sbb
test
fidivrl
fxch
fstpt
test
push
rcll
sbb
arpl
lahf
xchg
repz
sbb
ret
insb
dec
movsb
lods
inc
inc
mov
pop
pop
cmpl
and
inc
fwait
test
push
sub
sbb
adc
mov
push
adc
adc
movsb
lods
lcall
je
push
stos
push
dec
sub
fisubl
or
sub
or
mov
mov
dec
test
xchg
fisttps
mov
inc
repz
xchg
sahf
add
cmp
add
jge
pop
inc
inc
lahf
popa
mov
jns
int
into
cmp
subl
je
fisttpll
and
sub
bound
imul
adc
adc
sbbb
inc
inc
test
lcall
jbe
push
dec
cld
clc
fmul
ljmp
mov
ja
xchg
aas
and
testb
xor
rcrb
ljmp
cli
rclb
add
sub
inc
cmpsb
mov
cli
in
into
jae
sbb
pop
cwtl
xchg
daa
jbe
mov
cmc
cmp
fcmovbe
push
mov
sub
xor
inc
cld
adc
lahf
add
mov
stos
fsubl
cli
lcall
mov
mov
fsubrs
cwtl
arpl
sub
inc
inc
bound
jbe
mov
mov
xchg
fstps
mov
stos
or
jnp
mov
mov
pusha
mov
fnstsw
dec
jnp
push
dec
outsb
jl,pt
pop
mov
cmp
scas
in
test
addr16
cmp
inc
mov
popf
jp
sub
sub
and
inc
outsl
mov
mov
iret
daa
lock
lret
mov
stos
sbb
mov
lcall
inc
push
mov
pop
es
in
adc
inc
loopne
sbb
push
mov
arpl
push
and
sbb
in
rclb
test
push
sbb
outsl
jl
data16
lahf
sub
insb
test
dec
popa
jmp
jle
cltd
pop
mov
les
ds
fldcw
cmp
mov
pop
push
sub
push
dec
push
leave
push
push
mov
out
sbb
inc
scas
xchg
push
lret
lea
cmp
lahf
jbe
repnz
push
add
pop
clc
push
cmp
loop
dec
ficompl
lahf
sbb
shlb
mov
inc
pop
adc
or
dec
pop
jl
xchg
imul
dec
push
mov
pushf
stos
mov
jno
lods
push
std
hlt
or
push
mov
sbb
push
mov
or
scas
call
fadd
lods
shl
das
dec
jecxz
dec
fisubs
mov
add
push
aad
mov
mov
out
daa
les
fsubp
mov
mov
pusha
inc
pop
push
in
mov
jae
das
insl
sarl
mov
mov
int
rorl
mov
sahf
hlt
in
pop
jns
cs
push
jp
das
movsb
or
mov
stos
mov
xchg
scas
push
stc
and
adc
jae
jb
adc
sbb
xor
or
mov
and
pop
cs
cmpsl
mov
or
jbe
dec
fmull
test
lds
addr16
jb
mov
outsl
sbb
bound
and
mov
rcll
sti
or
lret
cltd
xor
sbb
insl
movsb
pop
cmc
movsb
inc
xor
lods
adc
in
xor
sarb
adc
dec
jb
jecxz,pn
imul
add
outsl
push
sub
andb
cwtl
sbbl
cld
sbbl
push
sbb
repz
in
jge
pop
jns
mov
xlat
pop
clc
outsb
fwait
loopne
sbb
cwtl
cltd
mov
nop
shl
xor
xor
movsb
jg
mov
loop,pn
int
scas
cmpsb
jmp
lahf
pop
add
ret
fiaddl
mov
in
into
jecxz
cmp
inc
push
or
repz
popf
mov
and
push
adc
adc
cmpb
push
out
mov
inc
cmpsl
mov
ja
bound
sub
sub
stc
pop
sub
out
sti
inc
jecxz
call
sub
sbb
andl
dec
arpl
shld
xor
orb
in
int3
out
ret
repz
fdecstp
aaa
xlat
mov
sub
outsb
push
icebp
in
lret
pushf
lahf
int3
xchg
or
aas
arpl
mov
xchg
pop
ss
xchg
mov
mov
cmp
jmp
jns
icebp
mov
leave
sbb
cmp
or
xor
add
push
cmp
mov
push
push
mov
mov
push
cld
add
repz
mov
add
aam
inc
adc
mov
pop
arpl
and
jp
enter
add
adc
push
and
testl
in
push
sub
inc
dec
movsb
mov
repz
lods
pop
bound
lods
inc
xor
add
shll
loopne
or
aas
aam
pop
sub
cltd
je
into
ficoms
push
xchg
mov
and
repnz
dec
xchg
rcl
sbb
fldcw
arpl
rcrb
push
xchg
cmp
pop
std
nop
mov
rcll
cli
fiadds
xor
jecxz
mov
loopne
fistpll
and
or
arpl
mov
sbb
aad
push
and
fmul
stc
in
cmc
cmp
mov
leave
pop
cmpb
ja
out
mov
out
mov
sarb
lahf
mov
mov
lea
aam
sub
in
jmp
push
lret
mov
mov
add
jo
ss
rorb
hlt
pop
xor
cs
fisubrl
lds
imul
xchg
pusha
lea
xchg
inc
mov
xchg
xor
inc
and
shll
jbe
cld
push
icebp
xor
mov
enter
fwait
in
aad
cmc
jg
fisttpl
jecxz
test
pop
cli
add
cmp
mov
jge
adc
mov
dec
dec
std
ja
clc
cmpxchg
sub
cmc
scas
push
fiadds
xchg
out
daa
add
jecxz
mov
mov
jns
cs
sbb
jle
pushf
jg
fldl
or
ret
xchg
fsqrt
pop
lcall
pushl
enter
pusha
loop
pop
loop
shlb
sbb
stos
pop
adc
lods
adc
adc
lods
pop
lods
popa
ss
sbb
jl
fadds
cltd
mov
mov
insb
xchg
inc
sbb
inc
pusha
cld
or
jg
jae
jnp
dec
dec
dec
sub
pop
sub
inc
xchg
popa
add
pop
test
pop
mov
maskmovq
testl
out
jl
pushf
xchg
into
push
lcall
outsl
push
sahf
js
add
je
push
jp
xchg
xchg
mov
and
xor
inc
adc
leave
and
cmp
xor
fdivr
pop
xor
js
ret
popa
add
jmp
or
adc
cmp
inc
cmp
push
dec
dec
adc
xchg
lds
insl
sbb
into
jb
push
in
mov
xor
jno
or
push
and
sahf
movsl
sub
adc
sub
push
arpl
add
lret
jge
insl
fadds
mov
jo
jno
push
xor
push
xor
sbb
add
cmp
cli
pop
arpl
dec
loop
mov
cmp
sub
ret
xor
out
fisubl
mov
pop
jmp
stos
ficompl
push
mov
ficompl
mov
sub
sub
mov
leave
mov
andb
sub
gs
xor
bound
adc
lcall
pop
scas
adc
jge
rorl
cmpsl
jg
xor
jge
iret
jb
gs
adc
dec
incl
cmp
add
or
inc
stc
sub
scas
shlb
add
sub
sub
int
popf
insl
imul
mov
xor
es
cmp
mov
mov
mov
cmp
dec
lods
pop
mov
pop
mov
dec
int3
dec
mov
sbb
jg
andb
and
add
sub
shll
mov
or
cmc
and
mov
leave
cmp
xchg
dec
dec
aas
test
xor
in
jmp
test
hlt
movb
push
loop
inc
nop
loop
and
mov
jb
jns
or
sbb
xchg
test
sub
xchg
jp
inc
fwait
dec
mov
pop
in
add
pop
or
or
mov
xchg
sbb
out
insl
push
and
jmp
jge
scas
cli
mov
xor
js
mov
ljmp
rcll
inc
add
xchg
aam
mov
sbb
mov
les
enter
sub
repz
pop
cmp
insb
dec
push
rorl
call
aad
movsb
ljmp
sub
cs
mov
or
loop
inc
data16
mov
sub
xchg
mov
push
and
or
or
fstps
inc
xor
sbb
mov
jge
cli
fdivrs
fsub
int3
lret
testl
mov
mov
push
les
fcoml
jmp
inc
pop
sbb
or
stos
fs
fwait
pop
psrad
add
movl
jl
cmpsl
xchg
addr16
js
fsubrl
mov
adc
adcb
fmul
in
sbb
push
int3
loope
fcomps
push
lock
pop
dec
pop
out
push
mov
pushf
or
mov
dec
mov
je
mov
and
push
mov
xchg
into
mov
pmaxub
jge
cld
jno
dec
lret
stc
push
or
xchg
sub
addr16
stc
mov
xchg
out
xchg
inc
pop
dec
inc
xchg
inc
aam
and
or
pop
subb
sbb
jae
js
movsl
push
push
or
aaa
mov
inc
cmp
dec
aas
stos
fisubrl
dec
fsubp
mov
insb
sub
cwtl
scas
popf
mov
sbb
cmp
sti
lret
pop
mov
int
clc
jge
roll
rcll
push
lds
sbb
movsl
xorb
movb
lods
lods
adc
in
shlb
push
es
jmp
cmp
imul
int
push
data16
push
icebp
xor
inc
test
ret
and
popl
outsb
pop
mov
sub
das
mov
adc
jge
stos
call
lahf
data16
jbe
repnz
cmp
jg
adc
pusha
test
sahf
jecxz
insl
or
pop
dec
mov
sub
dec
xor
sti
add
fldt
jo
push
lea
or
jg
sub
sub
pop
sbb
push
test
ljmp
movsl
push
xchg
fwait
ja
mov
in
lea
sub
je
or
iret
inc
and
cs
scas
push
fisttpl
fsubl
pop
movsl
xchg
xor
cld
jne
arpl
int3
incl
pop
or
lcall
lock
leave
mov
test
nop
sub
ss
adc
lods
xlat
mov
mov
shlb
ret
xchg
mov
cli
mov
in
push
sahf
lock
ljmp
stc
push
popa
push
mov
xchg
das
cmpsl
fdivrs
shr
sbb
xor
or
outsl
repz
mov
and
dec
and
mov
mov
push
aaa
stos
inc
daa
push
les
pop
sub
sbb
pop
cmpsb
adc
xchg
sbb
loope
jae
add
js
fisttps
jno
dec
cs
push
outsb
xchg
mov
xchg
repnz
xchg
insl
lea
dec
scas
test
clc
jns
dec
push
test
and
ret
adc
in
popf
push
mov
movsb
nop
sti
push
jp
dec
rcrl
js
push
lock
mov
fsubs
test
cmp
andl
mov
xchg
call
cwtl
jb
and
adc
push
inc
scas
adc
mov
xor
pop
add
push
jmp
inc
or
ret
rcrb
aas
jo
and
cmp
cwtl
add
lahf
and
or
jae
out
push
int
xlat
popf
icebp
cmp
aas
fnstsw
scas
ret
lret
bound
mov
ret
cli
das
shll
jnp
mov
push
insl
sub
inc
shll
fnstcw
inc
ja
or
adc
in
cltd
or
inc
mov
mov
adc
shlb
cmpl
and
jns
mov
pushl
mov
add
cmp
mov
xchg
lret
shll
xchg
sbb
push
fdivl
cld
shll
pop
rcr
adc
mov
xchg
stos
out
sbb
push
push
add
imul
out
inc
test
jno
and
cmp
xor
mov
aad
js
sbb
mov
or
loopne
xchg
mov
dec
addb
jae
psubsw
test
and
enter
clc
push
push
cmp
fbld
push
ficomps
lcall
mov
push
das
in
mov
popf
push
sbb
xchg
loope
jl
movsl
push
mov
inc
test
insb
lret
repnz
fdivrl
pop
jne
and
sub
imul
xor
jns
dec
sbbl
mov
es
xchg
scas
mov
idiv
dec
sbb
cmp
decb
orb
dec
or
addr16
dec
inc
roll
pop
test
das
clc
mov
jae
pop
push
adc
jbe
jae
jns
shrb
outsb
aam
cmpb
add
mov
popf
out
mov
inc
sub
adc
add
lock
js
icebp
test
fidivrl
das
or
push
leave
xor
dec
push
dec
sbb
mov
xor
loopne
sub
les
popa
xchg
iret
fucomp
scas
or
inc
cltd
nop
test
pop
jns
fwait
cmpsl
stos
testl
fucomip
sub
shl
int
ljmp
aas
and
inc
adc
clc
adcb
or
mov
dec
popf
dec
in
jp
outsl
add
or
ficomps
loopne
bound
fwait
or
aam
dec
sub
cmp
fs
loop
cmpsb
enter
and
es
lods
sbb
hlt
and
sub
sahf
in
je
push
mov
decb
adc
dec
xor
or
inc
cmp
and
sbb
pop
push
popf
push
or
mov
mov
pop
sub
leave
cli
add
inc
dec
lahf
loop
scas
in
lods
dec
cs
jne
mov
and
dec
and
mov
outsb
adc
notl
dec
inc
popa
in
or
or
cmpb
rclb
in
lret
sbb
gs
sbb
push
gs
ret
inc
std
dec
outsl
sbb
jns
inc
or
lcall
cmc
popa
scas
mov
jb
xchg
inc
xor
arpl
mov
repz
enter
test
ljmp
out
and
mov
push
in
movsb
and
sub
xor
lea
adc
xchg
inc
dec
mov
rorb
mov
out
add
test
pushf
ds
cmp
test
cwtl
loopne
xor
push
sub
lds
div
and
in
loopne
in
inc
mov
int
dec
inc
aas
test
sahf
or
add
test
data16
push
inc
arpl
mov
lock
ret
sub
dec
push
faddl
add
push
test
aaa
shll
fwait
add
bound
mov
lahf
mov
ljmp
mov
fnstenv
cli
inc
add
mov
jge
stos
push
push
imul
cmpb
sub
sub
mov
roll
fnstsw
jno
add
rcll
call
ljmp
int
data16
cmpsl
and
mov
je
cwtl
hlt
xor
stos
mov
shlb
ret
sbb
jb
frstor
sub
jp
push
jb
imul
jno
imul
xor
testb
xchg
dec
add
and
cld
scas
cwtl
ret
cmpsl
into
outsb
adc
lahf
mov
sbb
divb
sbb
cwtl
push
jne
mov
cmp
scas
lcall
loop
lods
cmp
loopne
jge
div
inc
dec
lods
imul
call
dec
int
repnz
cmp
cmp
cld
pusha
dec
lret
xor
bound
aaa
jecxz
add
lock
mov
or
dec
and
loope
xlat
cmp
andb
fisttps
cld
mov
sub
movsb
pop
mov
cmp
dec
into
adc
jecxz
addl
sub
sub
mov
mov
jge
pushf
add
imul
clc
cltd
inc
mov
jl
jae,pt
adc
xchg
mov
mov
lret
mov
adcl
adc
pop
fisubs
nop
lods
inc
sbb
fimull
andb
divl
fcoms
mov
jb
std
test
push
lea
ljmp
repnz
sbb
adc
in
push
xchg
test
add
loop
xor
mov
add
or
ds
add
xchg
dec
xlat
jl
mov
cmp
or
dec
in
std
and
dec
mov
popf
mov
shrb
xchg
int3
xchg
cltd
in
mov
dec
jnp
mov
jle
inc
sbb
adc
xchg
pushf
orl
sub
push
push
aaa
shr
and
xchg
pop
and
pop
arpl
stos
cld
inc
sbb
push
or
lret
sub
aaa
arpl
rcll
inc
addr16
and
xchg
push
mov
sahf
or
out
popf
hlt
nop
jae
bound
xchg
mov
aad
xor
dec
aad
lock
sub
fcomps
jno
cltd
testl
mov
imulb
and
xor
ds
mov
mov
and
add
pop
mov
push
xor
or
sub
add
lock
mov
out
lods
out
sarb
push
cltd
sub
lock
ja
sahf
adc
in
outsb
scas
xchg
add
sub
sub
ss
cmpsb
xor
lea
dec
jno
cltd
mov
data16
cmpb
sub
mov
pushf
in
mov
fidivrl
jb
pop
pop
pop
push
mov
imul
lods
into
jl
xchg
pop
fisttpl
add
aad
or
mov
lds
out
push
and
jb
jmp
adc
xchg
out
les
cwtl
xchg
enter
in
sub
or
xchg
sbb
fldenv
repz
xor
fldenv
leave
and
mov
stos
mov
cmp
cmp
lahf
cli
xor
ljmp
mov
lods
shr
cld
push
adc
dec
lret
mov
movsb
sub
cmp
sbb
outsb
push
push
pop
mov
push
sbb
inc
xchg
pop
mov
mov
push
in
jo
bnd
push
in
and
fisubs
stos
pushf
mov
add
outsb
popf
jl
fildl
loop
jle
sbb
and
fistps
lret
xlat
in
ljmp
jbe
ret
in
iret
cmpsb
jmp
sbb
mov
int
clc
xorl
or
sbb
dec
ljmp
pop
shl
add
sub
sub
rclb
rol
popl
xchg
cltd
daa
ljmp
mov
lods
mov
adc
push
movsb
addr16
ss
ret
mov
cmp
hlt
jge
mov
pop
add
out
ja
dec
jle
aas
sbb
mov
adc
cmp
xor
push
lret
xor
sub
and
push
sub
shlb
sahf
push
lahf
jmp
cmp
or
jo
loop
insb
lret
leave
es
cmc
pop
inc
sub
jle
sbb
lods
fstps
ret
inc
adc
loope
ret
xor
mov
mov
inc
ljmp
and
dec
jbe
push
repnz
jg
xchg
push
call
pop
xchg
push
jle
cmp
outsl
mov
mov
in
cmp
cmp
movsl
daa
mov
or
cmp
ss
sub
fidivs
pop
add
xor
popa
inc
test
push
rorl
gs
pop
imul
or
stc
or
pop
in
push
push
stos
and
cmp
bound
test
test
add
insl
push
sbb
shll
stos
iret
shlb
jmp
aam
std
insl
mov
mov
out
inc
popf
mov
leave
and
aaa
mov
sbb
out
mov
mov
rorb
test
mov
idivl
add
xor
sbb
das
in
hlt
inc
push
and
fstpl
imul
sub
lock
data16
pop
add
sub
fwait
jno
push
movsb
xlat
sbb
jbe
fistl
adc
sub
hlt
rorb
out
jg
inc
loopne
and
lods
scas
insb
lcall
mov
gs
sbb
pop
mov
lret
out
cmp
rorb
scas
repnz
add
mov
fldenv
roll
arpl
ret
add
leave
cmp
incb
push
jg
mov
lock
adc
inc
push
or
aad
fstpl
and
xchg
sarb
xchg
mov
jp
and
sahf
inc
pop
mov
sub
and
in
fwait
popf
mov
shrl
jmp
cmpb
adc
testb
adc
jno
out
ret
fsubrs
js
adc
pop
push
scas
lahf
inc
push
popa
leave
sbb
xchg
es
pop
mov
mov
sar
lret
sub
pop
mov
inc
pop
push
loope
aad
mov
pop
and
add
or
mul
je
mov
inc
lods
xchg
jecxz
add
repz
pop
cld
pop
cmp
jne
insl
bound
stos
push
adc
sarl
and
push
sbb
movsb
cmp
sub
inc
sub
and
inc
mov
jge
or
outsb
outsl
adc
mov
fmull
sar
pop
xchg
outsb
lds
out
stc
push
pop
xchg
pusha
xor
das
push
je
add
fidivs
or
insl
jge
sbb
or
sbb
testl
lret
jmp
call
push
lcall
inc
xor
and
jmp
fwait
shll
movsl
add
mov
das
lahf
jp
or
inc
ret
orl
push
insb
dec
lcall
mov
insb
sbb
out
fidivl
in
testl
fnsave
push
lret
xchg
push
or
in
jae
pop
inc
mov
inc
std
inc
jbe
shlb
out
jle
dec
inc
in
es
jle
jns
inc
lods
push
in
pop
mov
sbb
mov
dec
sahf
rcll
jp
xchg
shll
sbb
mov
dec
xchg
push
sub
inc
xchg
mov
add
loopne
or
jae
xchg
inc
aaa
pop
mov
jl
dec
mov
lahf
lret
clc
out
push
sahf
lret
out
notl
mov
pushf
iret
mov
or
xchg
jnp
lods
frstor
loop
push
sbb
cltd
mov
pop
fnsave
pop
inc
cmp
in
pop
je
mov
enter
movsb
fs
pop
and
add
xlat
cwtl
fcmovb
mov
ljmp
inc
lods
mov
push
inc
or
clc
outsl
fistpll
sbb
jmp
jb
aam
rcr
cltd
cmpsl
mov
mov
subb
std
gs
imul
mov
mov
cmp
push
test
xchg
mov
lea
jae
jl
mov
mov
cmpsl
faddl
cmp
loope
lahf
push
inc
lea
rcr
aaa
gs
rorb
dec
jb
jle
cmc
jge
loopne
mov
in
or
xchg
and
ss
xor
fnstsw
inc
cmc
sbbl
jbe
jl
mov
cmp
das
ss
mov
scas
iret
mov
jae
cltd
lret
int
testb
cltd
mov
in
cld
inc
mov
pop
test
push
jno
adc
inc
xor
mov
push
lret
push
adc
inc
fbstp
call
daa
push
imul
xchg
mov
xchg
or
sub
sub
std
mov
add
jg
daa
xor
add
push
push
push
rolb
arpl
loope
sbb
insb
mov
icebp
cmp
fdivrl
andb
sbb
mov
push
sti
or
imul
cmp
jmp
aas
push
inc
pop
xchg
ds
ljmp
sbb
or
rcll
jae
les
shrl
ret
mov
leave
dec
das
jo,pn
mov
xchg
pop
out
sub
flds
lret
xchg
ds
inc
das
aas
mov
out
mov
fsubl
dec
adc
out
popa
or
sbb
loop
outsl
xor
rorl
cmp
pop
lods
gs
sbb
dec
inc
xor
mov
push
addl
jo
mov
daa
cmpsl
dec
xchg
or
mov
mov
iret
cmpsl
std
sti
push
mov
dec
push
inc
loopne
js
push
ret
mov
loop
hlt
je
gs
lcall
sbb
fwait
ror
jae
or
jp
out
cld
repz
dec
sti
sbb
mov
adc
aas
pop
mov
insb
xor
leave
fldenv
jg
orb
fs
mov
movsbl
fwait
pop
xchg
adc
testl
addr16
push
cmp
out
dec
outsl
fsubs
loopne
mov
out
push
dec
ds
add
imul
adc
mov
push
inc
in
dec
rcll
inc
rorb
shrb
xchg
cmp
push
inc
xor
sub
ljmp
test
push
jg
xchg
cmp
in
pop
jle
push
pop
push
rclb
add
std
clc
jmp
push
rorl
adc
into
jle
loop
push
and
jg
mov
in
popa
mov
cmpsb
adc
ss
lahf
addr16
xor
arpl
aad
xor
adc
lods
mov
cmc
seto
iret
popa
repnz
inc
sbb
mov
xchg
sub
add
dec
mov
repnz
lret
sub
icebp
push
mov
orb
pop
je
addb
push
push
cmp
rcl
clc
push
repz
mov
adc
jg
jmp
ret
push
mov
cmpl
psllw
sub
push
xor
mov
dec
xchg
sub
push
imul
addb
mov
sbb
sbb
push
in
sti
cltd
dec
rcrl
mov
ret
scas
imull
xchg
jno
jns
sub
cmp
mov
stc
es
dec
outsb
fptan
out
cmpsb
stos
repnz
mov
jle
mov
mov
sub
push
jnp
stc
sbb
mov
enter
sub
adc
mov
mov
setg
sub
inc
push
lret
leave
xlat
pop
mov
test
mov
arpl
add
dec
add
mov
mov
jae
sbb
js
aas
pop
ljmp
pop
adc
int3
leave
movb
vmread
jmp
ds
push
jecxz
cmpsl
stos
in
dec
push
dec
mov
cmc
mov
xchg
out
lods
xchg
aad
xchg
push
cltd
ljmp
ret
aaa
xchg
call
or
scas
adc
data16
sbb
mov
testl
xchg
xchg
cmp
pop
packssdw
cmc
pop
scas
sbb
and
add
or
add
ss
mov
push
pop
push
jle
pop
or
mov
jg
sti
stos
jns
or
cmpl
xchg
gs
into
into
mov
sbb
fldl
push
lret
shl
out
imul
jne
rcr
mov
mov
mov
and
hlt
and
dec
jecxz
or
dec
adc
pushf
cld
ret
in
loope
notl
cmp
inc
enter
inc
je
or
pop
imul
mov
in
mov
leave
adc
stc
pop
es
gs
pop
xchg
cs
add
fxch
xor
mov
inc
jno
push
fidivs
or
enter
enter
jno
mov
ret
or
and
aad
jle
jmp
int
das
sub
sti
push
xor
push
mov
sub
mov
daa
mov
sub
enter
adc
out
outsl
je
xchg
std
inc
in
push
in
daa
mov
push
inc
mov
adc
push
loopne
daa
mov
leave
stos
or
daa
das
jae
xchg
dec
adc
int3
sub
das
cmp
or
loop
add
inc
mov
in
sbb
loopne
jmp
sub
mov
cwtl
lcall
xchg
lret
lret
lock
push
push
orb
test
out
mov
push
mov
lcall
std
mov
movsl
lods
ret
hlt
push
loope
fcomps
xor
daa
pop
cmpsb
sbb
in
cs
xor
jp
jmp
stc
cwtl
add
mov
pop
int
insb
cmc
fs
add
cmp
out
lods
lods
pop
daa
xchg
inc
imul
xchg
cmovnp
mov
test
lds
add
pop
cmp
and
movsb
mov
pop
pushf
pusha
jnp
hlt
add
mov
push
mov
and
wbinvd
jbe
cli
lods
jne
mov
pop
mov
jnp
lahf
scas
and
add
xor
mov
or
fsubr
repz
int3
test
sub
xorb
lock
sbb
lods
or
inc
jae
xchg
pop
sbb
fldl
dec
mov
push
ja
aad
push
mov
cld
out
jmp
push
jecxz
mov
popa
les
loope
cmp
outsb
arpl
sbb
push
pop
add
aaa
jp
imul
out
ret
into
xor
jno
cmpsl
adc
pop
adcb
out
inc
hlt
xchg
mov
push
mov
cmp
xchg
jno
cmc
stos
xchg
pand
inc
add
js
movsb
sub
cmpsb
sbb
lret
in
out
push
sub
and
sbb
jne
push
in
pop
pop
mov
mov
decb
cmp
test
mov
aam
xchg
sub
add
push
in
addl
add
aad
xchg
jge
push
fs
fldt
cmpsb
int3
test
dec
dec
push
cmp
dec
lret
lcall
add
jmp
xor
adc
sbb
in
jmp
test
sbb
leave
jb
pop
jns
loopne
cs
push
dec
fcmovu
mov
inc
dec
data16
ret
dec
ret
aam
xchg
push
ret
sti
mov
inc
mov
xchg
lret
insb
xchg
jne
leave
hlt
add
lock
sbb
mov
sbb
mov
addr16
mov
mov
fisttps
movsl
cmp
bound
clc
testl
dec
pop
push
or
gs
arpl
xchg
inc
mov
rcrb
pop
xor
ss
lock
cmp
pop
outsb
clc
lods
out
sub
pop
xor
jg
hlt
adc
mov
mov
andl
fcmovnbe
fcoml
movsb
popa
jo
pushf
inc
out
mov
push
stos
and
leave
cmp
lret
push
lahf
push
lcall
mov
lret
scas
sub
neg
jae
mov
add
jle
mov
sub
jns
std
dec
lods
test
lock
gs
fs
pop
fwait
sub
sbb
ret
and
add
mov
add
mov
icebp
cltd
mov
dec
mov
pop
loopne
mov
aas
xchg
jmp
adc
inc
sbb
add
xor
pop
lret
shlb
icebp
sbb
cmp
popa
nop
push
out
in
adc
out
fildll
popf
out
out
aaa
ss
in
out
mov
dec
dec
cmc
cs
jge
cmp
fcmovu
xchg
in
sahf
push
in
xchg
ljmp
repz
clc
in
das
cwtl
mov
sub
fs
mov
loope
xlat
cltd
pop
xor
and
in
or
cltd
loop
add
loop
popf
lret
cmp
jmp
lcall
data16
jle
fstps
xor
dec
cmp
mov
push
fcomps
cmp
ret
cmp
xor
push
pop
jp
clc
adc
fs
mov
dec
or
cmp
mov
inc
lcall
das
mov
pop
xchg
leave
mov
xor
sahf
xor
xchg
push
je
outsl
pop
imul
loope
fstpl
and
enter
scas
gs
shll
sarl
jbe
mov
jo
aad
add
clc
popa
jle
sub
data16
cmp
inc
adc
or
push
jg
je
and
mov
daa
out
call
or
lds
or
outsb
sbbl
pop
lret
loope
fwait
insl
sub
pop
mov
jns
sub
int3
cld
mov
inc
dec
sbb
jae
jmp
inc
xchg
dec
add
mov
shr
mov
out
cmp
inc
call
sbb
push
jmp
mov
pop
sbb
mov
push
repnz
jmp
jno
mov
inc
enter
mov
xlat
adc
mov
movl
in
bnd
lcall
add
cs
push
repnz
xchg
scas
int
subl
xchg
and
sub
pop
sub
mov
insb
sub
ret
xorb
fisubs
and
inc
clc
aad
lds
push
or
loop
jo
faddl
rorl
dec
fldenv
mov
jp
sbb
adc
push
pop
lds
or
adc
sbb
sub
outsb
add
mov
push
jle
cmp
aas
outsb
sub
jl
sub
mov
mov
mov
sub
push
sub
fstps
out
bound
adcb
lock
pop
add
jb
pop
enter
dec
sahf
pop
or
mov
mov
jle
or
movsl
into
insl
mov
lcall
pop
dec
dec
cmp
lds
inc
sub
mov
xchg
das
cmp
mov
push
mov
jbe
cmpsl
out
pop
insl
pop
adc
xor
mov
clc
sbb
in
popl
cmp
inc
and
add
mov
popa
fldenv
inc
subb
adc
js
adc
dec
xchg
arpl
lahf
les
fcmovnb
and
xor
cmc
in
sub
stos
insl
nop
or
setp
mov
adc
sahf
cmc
loope
pusha
xchg
aaa
repnz
cmc
sbb
mov
cmp
mov
aam
mov
shll
daa
test
ds
jmp
gs
push
cmp
mov
xchg
pushf
addr16
sub
inc
xchg
outsb
push
jbe
mov
call
dec
std
add
outsb
std
lds
inc
mov
cwtl
scas
loopne
or
cmovs
inc
aaa
jnp
add
out
sbb
xchg
hlt
inc
and
inc
mov
test
es
cmp
push
scas
testl
cwtl
inc
cmpb
pop
mov
xor
push
and
lahf
lods
sub
shrb
int3
xchg
add
pop
adc
push
xor
pop
push
or
inc
xlat
call
mov
or
mov
jl
in
mov
jns
aaa
xchg
cmp
sti
pop
add
aaa
sti
bound
fildl
push
push
mov
cli
lret
test
xchg
es
call
or
ret
jp
fcmovnb
and
icebp
mov
ret
inc
adcl
shrb
mov
jl
mov
sbb
adc
clc
jle
fsubs
mov
push
test
jecxz
fs
mov
cmpl
mov
test
ja
jne
repnz
test
jl
adc
mov
pushf
cmp
jnp
cmp
mov
insl
adc
mov
and
lret
dec
xor
aaa
shl
add
addr16
xor
aas
sbb
add
add
mov
mov
inc
inc
movsl
xor
add
dec
adc
or
je
jg
hlt
mov
mov
pushf
insl
pop
or
out
inc
repnz
sub
lret
leave
fwait
in
pop
addr16
stos
fimull
scas
gs
xor
add
jo
push
cmp
fstpl
adc
std
jg
pop
add
out
lock
or
mul
push
lahf
and
in
std
es
sbb
aas
sub
es
sar
outsl
xchg
inc
sub
and
adc
xchg
jnp
cmp
xchg
pop
loopne
xchg
mov
dec
mov
mov
pusha
or
push
pushw
pop
sub
test
jo
dec
fisubrs
jno
aaa
sub
lcall
mov
cmp
enter
aad
inc
xor
iret
fs
in
mov
cltd
lods
mov
into
xor
scas
cmp
pop
outsb
cmp
jne
push
popa
out
movsb
xor
repz
call
mov
jnp
mov
or
mov
pop
and
add
pop
jge
out
cmp
adc
lcall
pop
call
aas
out
arpl
inc
mov
sarb
push
pop
cmp
scas
movsb
insb
fs
popa
arpl
or
inc
mov
mov
addr16
movsl
ds
mov
negl
pop
sete
sbb
or
or
popa
mov
pop
jg
sbb
addr16
cltd
mov
inc
fisttpl
imul
fwait
jle
adc
or
mov
sub
sbb
mov
ljmp
js
dec
fisttpl
mov
sti
dec
jae
sub
movsb
xor
cld
fimull
mov
mov
out
jmp
ljmp
incb
insb
pop
das
popa
out
pushf
mov
xchg
out
gs
sbb
gs
lahf
jnp
call
aam
adc
jle
sbb
adc
mov
stc
stc
push
cwtl
xchg
pusha
sbb
dec
lret
adc
ljmp
mov
jge
into
jns
mov
das
mov
mov
cmp
sbb
adc
ret
xlat
loope
gs
mov
xorl
ja
jp
icebp
push
sub
shr
insb
jle
inc
jnp
sbb
mov
jnp
repz
cmp
or
and
inc
fbstp
mov
cmpsl
cmp
call
pop
mov
mov
inc
clc
mov
xchg
js
jno
mov
lock
xchg
sub
adc
cmp
loope
aaa
push
mov
daa
es
adc
add
and
push
sub
inc
enter
neg
inc
pop
jo
xlat
scas
insl
xchg
push
les
sub
add
scas
xchg
pop
mov
xor
jecxz
hlt
pop
pusha
cmp
pop
in
dec
pop
jl
shr
xor
inc
push
xor
add
jmp
mov
inc
aam
mov
cmpsl
xchg
subl
xchg
pop
arpl
fcom
pushf
cmpsl
sub
nop
call
mov
fadds
inc
sbb
jo
test
mov
jmp
add
in
cli
call
sarb
mov
cmp
jmp
jp
xorb
xor
xor
or
mov
in
cmc
adc
daa
push
mov
out
aam
pop
pop
dec
jle
jecxz
lahf
fmulp
jmp
lock
push
les
xchg
cmp
cmp
jne
mov
cmp
push
mov
pop
push
jnp
push
jae
cld
ja
in
pop
xchg
test
sub
fwait
lret
xchg
jecxz
and
sbbl
mov
dec
lret
fdivrl
and
dec
fisttps
cli
js
idiv
mov
notl
lods
jle
cli
push
out
mov
shlb
inc
and
idivb
xor
mov
out
or
jl
pusha
fcoml
push
sbb
fxch
xlat
loopne
pop
ja
daa
out
xor
or
dec
add
out
sub
out
xchg
pcmpeqb
mov
sbb
push
dec
setl
inc
outsb
gs
or
rcr
xchg
sbb
jne
cmpsl
fs
aam
sbb
scas
xor
ds
add
scas
cmpsb
push
xor
dec
sub
aas
mov
push
mov
out
adc
movsb
adc
sub
mov
mov
sbb
dec
jae
push
and
rorb
push
hlt
mov
arpl
xchg
push
sbb
bound
mov
stos
and
loope
clc
sbb
mov
sarl
fadds
push
push
xchg
daa
jp
pop
adc
pop
push
aad
and
or
out
dec
call
mov
pop
dec
inc
ret
rcrb
incb
stc
in
ljmp
cmp
sbb
mov
imul
mov
inc
cmp
movsb
cmc
lret
and
cmpsl
test
mov
xchg
pop
std
aaa
xor
mov
mov
add
imul
jle
ds
std
push
ja
imul
cmovbe
mov
push
and
int
jbe
sbb
pop
lock
pop
into
cmp
js
cmp
std
xchg
pop
mov
add
fcmovnu
retw
adc
mov
xchg
addr16
push
ret
lea
jge
pop
sbb
in
pop
or
dec
cmpb
push
test
aaa
xchg
test
out
dec
lahf
loop
dec
sbb
and
xchg
fistpl
sahf
mov
add
out
pop
push
dec
out
in
fnsave
mov
jecxz
xor
inc
leave
push
inc
outsb
repz
push
mov
dec
imul
outsl
ja
cmp
sub
loope
sbb
sbb
stos
shll
mov
popf
and
xor
and
dec
pop
rcrb
sbb
sbb
jl
movl
in
adc
inc
mov
gs
xchg
xchg
mov
rorb
mov
jno
mov
enter
add
int3
inc
pop
lea
imul
push
gs
push
vpmullw
repnz
mov
jmp
and
jae
test
or
scas
js
xor
jbe
movsl
mov
sub
cs
arpl
ror
or
jecxz
fcmovnu
jge
xor
paddd
dec
sbb
test
mov
lds
loope
pop
je
cmp
pmovmskb
push
mov
mov
add
mov
nop
mov
stos
in
pop
xchg
loopne
lahf
xor
stos
loopne
fisttps
xchg
subl
mov
pop
ror
insl
icebp
jnp
pop
xor
jns
jno,pn
push
jecxz
adc
jnp
adc
iret
mov
mov
xchg
fwait
cmp
inc
inc
mov
pop
mov
lret
add
add
sti
dec
push
out
insl
std
jmp
inc
out
cmp
cmc
scas
push
sub
pop
lret
je
mov
xor
jle,pt
pop
xor
pop
xor
mov
in
mov
pop
mov
jne
sbb
xchg
jb
int3
xlat
arpl
dec
dec
push
sbb
mov
pop
jno
cwtl
pop
xchg
shll
stos
add
sbb
popa
cmp
in
push
fdivl
std
xor
xor
imul
setle
fadds
add
mov
lahf
xor
xchg
add
imul
sbb
ret
xor
cmpsl
insl
test
jp
cmpsl
int3
mov
out
push
out
mov
fiaddl
daa
lods
sbb
dec
jb
shlb
cmp
rcll
xlat
mulb
push
mov
test
shrl
pop
sub
popa
stos
mov
std
xchg
pushf
xor
cwtl
push
sbb
gs
ja
dec
jbe
fwait
in
push
sahf
sub
les
jp
push
jmp
xor
or
jg
cmp
cmp
iret
inc
stos
adc
push
jp
cs
test
mov
pop
ss
cmc
inc
mul
out
jge
cltd
subb
and
pushf
cltd
jmp
push
fsubs
shrb
fldenv
arpl
movsb
jns
insl
jnp
mov
repnz
mov
sub
add
aad
add
jb
clc
xchg
lock
inc
rorb
mov
push
jo
in
out
jp
stos
test
inc
shll
int
xchg
les
mov
pushl
daa
cld
push
push
lret
cld
dec
pop
int3
or
shll
sub
pop
andl
imul
scas
fisttpll
lret
pushw
sbb
mov
addb
or
xor
out
and
jno
xchg
ja
std
pop
and
jae
dec
inc
into
aas
es
es
adc
stc
mov
jno
push
cmp
fwait
jl
push
out
sub
repz
jmp
je
mov
call
xchg
in
sahf
sbb
out
sub
inc
cmc
repz
adc
jmp
loopne
push
out
fbstp
js
ret
lret
mov
stos
iret
into
sub
push
jo
out
movsb
push
inc
lock
in
xchg
and
push
mov
cmp
sbb
icebp
sub
fildl
cmc
push
and
loop
out
cmp
or
adc
ss
dec
lods
adc
cs
sbb
adc
mov
mov
push
insl
sbb
lds
push
inc
adc
insl
shr
pop
push
lahf
and
jp
lcall
arpl
hlt
ss
xor
aas
fcmovnb
lret
fisubl
mov
inc
ja
je
out
scas
das
call
inc
adc
cmpsb
loop
fidivl
xlat
push
inc
or
mov
ss
push
inc
push
call
and
or
mov
lds
nop
nop
scas
sbb
mov
jae
or
and
mov
test
roll
icebp
imulb
inc
daa
enter
icebp
cmc
loope
sub
dec
cmp
sbb
stos
inc
xchg
dec
shlb
mov
ljmp
xlat
mov
sahf
push
push
mov
cmp
lods
pop
mov
adc
mov
js
mov
addr16
mov
pop
dec
out
pop
adc
xor
xor
xchg
pop
movb
aaa
paddq
loop
push
pop
or
nop
repz
push
into
ret
or
cmp
out
sub
fs
outsl
pop
lock
xchg
jmp
xchg
test
sbb
mov
mov
cmp
and
enter
push
xor
add
push
push
xchg
jae
iret
xchg
adc
loop
add
push
fs
mov
mov
bound
xor
or
roll
aas
lods
nop
stos
bound
ret
xor
sbb
push
cltd
cmp
push
pop
sub
push
adc
repnz
daa
cmp
adc
jns
inc
cmp
dec
inc
pop
cmp
and
out
fisubs
sbb
scas
xchg
fwait
cmc
pop
adc
pop
lods
jbe
push
lahf
jl
iret
lods
dec
mov
aad
es
rol
cmp
jno
enter
xchg
sbb
cmp
xchg
shll
fisubrs
fisubrs
insl
mov
fiaddl
add
adc
push
jae
jno
das
iret
cmpsl
sbbb
fsubp
sarb
insb
pop
pop
cmp
scas
pop
test
mov
inc
sub
shl
mov
out
jecxz
loope
and
pop
movsb
bound
xchg
add
repz
pusha
insb
and
add
fwait
pop
int3
orl
cli
dec
das
xor
add
xor
sub
test
cld
or
add
push
fisttpll
cld
outsb
lcall
leave
add
dec
imul
rcr
gs
xchg
dec
inc
leave
cld
dec
mov
dec
subl
call
sub
es
cmpsb
notl
imul
in
addr16
sub
add
ljmp
movsl
pop
sub
and
lock
sbb
mov
lea
loopne
ja
dec
cld
stos
jl
adc
dec
jge
push
fnclex
cmp
xorl
cmpsl
fstpt
inc
in
inc
sahf
stos
cmpsb
lahf
loop
test
adc
rcr
mov
fwait
cli
dec
pop
stos
in
mov
or
movsb
jae
movsl
int
mov
mov
repz
push
pop
or
je
xor
add
cmp
dec
pushf
lret
dec
into
test
pop
movsl
mov
dec
xchg
stos
pop
ficomps
subb
xorw
and
jecxz
jns
cli
aam
lret
mov
pop
inc
jp
and
and
in
sub
pop
jle
lea
imul
jg
jnp
xor
fnsetpm(287
jecxz
hlt
dec
mov
dec
cmp
or
adc
or
xchg
push
out
mov
iret
push
js
ljmp
ds
mov
fisttpl
push
js
mov
jo
cmp
push
cltd
mov
cmp
enter
adc
xchg
add
add
or
lcall
xlat
or
jge
adc
jmp
shlb
orl
xchg
or
out
mov
mov
stos
xchg
sbb
mov
and
out
xlat
pop
lcall
mov
lock
stos
cmp
xor
in
sub
mov
in
repnz
jl
dec
sbbl
push
or
fistpl
arpl
imul
mov
inc
insb
cli
pusha
mov
mov
jle
xor
pop
push
inc
loop,pt
or
rclb
adc
jne
xor
pop
mov
fs
insl
mov
xchg
pop
mov
sahf
mov
jnp
adc
jne
leave
mov
pop
xor
or
jae
xlat
aas
push
xchg
xchg
inc
aaa
dec
inc
add
dec
or
test
adc
sbb
dec
out
cwtl
testb
test
movsl
mov
xchg
incl
jle
movsl
sbb
or
inc
dec
push
cmc
sahf
ret
cmpsl
ss
mulb
in
or
lods
xor
add
andb
push
and
loope
sahf
adc
repz
clc
pop
in
sub
jl
arpl
sahf
nop
aas
lea
imul
jmp
jge
xchg
popa
and
dec
or
push
imul
fcoml
loop
outsb
mov
sbb
mov
cltd
out
pop
jbe
mov
mov
cmp
lcall
movsb
test
negl
fnstcw
stc
imul
or
cld
xchg
xor
test
inc
loopne
cmp
xchg
add
cltd
sbb
lea
inc
xchg
xchg
or
pop
push
sahf
cmc
in
ja
fbld
xor
cmovg
ja
cmp
sub
lods
lock
mov
mov
lahf
jnp
popf
loopne
mov
push
ds
xor
int3
cmp
jne
jnp
sbb
out
fidivl
ss
add
test
nop
out
aas
and
out
pushf
mov
xlat
inc
push
je
out
pop
imul
push
dec
mov
cli
or
ljmp
mov
aaa
js
jl
mov
lods
sub
mov
adc
mov
rcrb
je
notl
shll
adc
movsb
cmp
jns
in
dec
pop
je
inc
aam
pop
fstl
sbb
loope
cwtl
inc
pop
push
mov
jle
in
jb
out
and
cmp
fs
repz
cmp
lods
push
cmp
ss
fisttpll
push
mov
sub
xchg
xor
mov
adc
push
addr16
sbb
xchg
pop
and
inc
je
test
mov
les
sbbl
xchg
mov
pop
push
in
out
div
std
mov
stos
pop
xor
dec
pushf
out
addr16
add
push
jnp
test
jl
roll
xchg
pop
sahf
inc
nop
jb
jnp
jne
mov
inc
ret
fdivrs
arpl
sub
imul
movsb
pop
pop
push
scas
jne
adc
stos
pushf
fdivl
lahf
mov
das
mov
jb
jp
dec
cld
fdivrp
cmpsb
xchg
repnz
jbe
sti
rorl
jo
fistps
fsub
out
jle
adc
lea
add
mov
jge
lods
nop
sbb
pop
out
ss
jg
lahf
mov
sarb
pop
mov
mov
pop
add
cli
aaa
fistpll
in
sbb
and
inc
inc
xchg
vmread
ljmp
out
outsl
arpl
cmpsl
dec
outsl
dec
les
push
loop
arpl
in
shrl
pop
adc
test
imull
aad
repz
aas
hlt
or
bound
hlt
jmp
out
fs
mov
add
or
adc
push
dec
cmp
and
adc
ja
add
mov
push
lea
fdiv
out
mov
xchg
ret
shrb
int
fsubr
in
dec
and
js
mov
cs
mov
sbb
outsl
and
jb
adc
and
mov
mov
mov
fisttpll
jecxz
xor
xor
push
aam
rorb
fdivrl
out
test
lea
lret
xchg
in
out
icebp
mov
popa
repz
dec
sbb
rcr
roll
pop
aaa
into
enter
xchg
jae
repnz
push
adcl
jnp
stc
sbb
push
sbb
lods
pop
mov
push
sarb
into
in
sub
jp
mov
aaa
add
out
mov
incl
stos
test
int
inc
aaa
pop
push
lahf
sub
outsl
jl
lret
mov
pusha
ds
inc
and
jmp
subb
mov
pop
js
jge
sar
and
test
das
stc
sbb
cmc
push
lock
adc
je
xor
jg
rcl
mov
pop
adc
enter
scas
sbbl
cmp
gs
jecxz
xor
sbb
mov
inc
fildll
dec
shlb
mov
jbe
mov
push
pop
add
test
les
gs
fldcw
and
stos
popf
dec
sub
dec
adc
inc
mov
in
test
cmp
mov
fdivrs
sbb
leave
sbb
jb
mov
es
pop
pop
mov
in
mov
mov
popf
jnp
imul
or
out
xor
test
xor
cmp
lret
insl
nop
movb
cs
dec
cld
sti
bound
sub
lret
push
scas
jmp
les
xchg
dec
mov
inc
ja
pop
xchg
cmp
sahf
adc
push
shlb
out
stos
jmp
pop
ficoml
mov
fisttpl
loope
xchg
inc
popf
out
fiaddl
fildll
pop
push
xchg
stos
call
stos
outsl
and
jb
pop
in
bound
xlat
mov
xor
jb
mov
test
sahf
pop
fwait
ja
pop
mov
cmpsl
out
out
jmp
push
xchg
mov
mov
ret
sahf
clc
incb
loopne
xchg
sbb
iret
data16
mov
jns
ja
pusha
fcmovnu
xlat
and
ljmp
sub
mov
jo
std
mov
pop
movsl
es
addr16
dec
xchg
jb
call
stos
pop
iret
lods
or
jmp
repz
inc
xchg
pop
mov
jb
cmc
jle
or
gs
pop
and
push
and
or
andb
inc
xchg
or
mov
and
shlb
xor
xor
jge
mov
push
mov
and
mov
in
movsl
cli
xchg
xchg
hlt
movsb
inc
in
lods
push
test
sahf
aaa
rol
xor
movsb
test
sarl
loop
sub
mov
sub
push
adc
pop
adc
sub
jl
push
mov
lods
rorl
jns
mov
adc
orl
xchg
push
add
cmp
inc
loope
negl
jmp
mov
pcmpgtd
mov
call
xchg
inc
sarb
jb
adc
pushf
adc
stos
out
jo
and
call
inc
and
out
pop
jno
sbb
repz
pusha
out
dec
andl
mov
lods
cmp
inc
hlt
daa
inc
mov
push
repz
sti
aad
sub
sbb
jge
fsub
testl
nop
ret
mov
int
dec
xchg
movsl
xchg
push
mov
in
movsl
cwtl
arpl
jbe
pop
add
es
or
mov
jae
adc
ss
lret
insl
xor
mov
push
jbe
lds
lds
pusha
mov
sub
sysret
add
cmp
jle
out
lret
iret
fdivp
jae
or
test
cmp
pop
xlat
outsl
arpl
jo
cmp
jo
pop
jl
in
sti
inc
push
jmp
xchg
mov
cs
insb
in
les
push
mov
mov
lea
pop
or
dec
not
lock
imulb
cs
daa
jl
loope
lcall
imul
pop
cmp
sti
orb
mov
outsl
dec
add
data16
xor
lock
dec
out
jb
icebp
cmpsb
mov
lret
out
mov
in
out
pop
xchg
sbb
xor
adc
in
clc
jecxz
adc
lret
jge
mov
xchg
test
movsb
dec
push
mov
lods
iret
fstpl
fidivs
test
push
hlt
mov
xchg
sbb
jle
push
mov
test
and
adc
test
scas
sub
adc
push
fwait
dec
in
mov
loope
cltd
sub
testl
dec
js
ror
xchg
insb
and
dec
cld
movsl
push
jp
add
inc
inc
repnz
jne
xlat
and
out
ret
lcall
fwait
in
stos
pop
push
or
cmpsl
inc
pop
daa
and
pop
jo
sbb
ss
sub
xchg
and
lret
into
popa
sub
mov
cmp
sbb
cmpsb
popa
aad
fwait
inc
inc
sarb
pop
adc
mov
inc
mov
push
mov
xor
dec
jmp
daa
xchg
roll
inc
dec
ret
aas
sbb
lret
jae
ds
jle
mov
lcall
inc
cmp
lods
jo
cwtl
insl
mov
dec
pop
mov
or
sub
bound
fistps
xchg
jbe
repnz
cld
daa
loopne
and
sbb
into
inc
and
mov
inc
jp
xchg
push
adc
fsub
fwait
dec
xchg
adc
push
dec
enter
subl
loop
sub
call
lock
jecxz
mov
int
and
sbb
pushf
xlat
dec
aad
scas
or
cmpb
jbe
dec
dec
es
inc
pop
or
push
add
fistpl
icebp
shrl
les
mull
mov
nop
lret
mov
and
or
mov
shlb
leave
insl
sub
fwait
xchg
mov
cmp
sbb
jno
pop
stos
jge
pusha
rcrb
rorl
call
test
iret
vmread
add
fbstp
ret
sub
sbb
xor
jge
repnz
xchg
mov
cmc
rcl
or
mov
mov
fstpt
jnp
xchg
in
xor
sub
adc
xchg
jnp
ds
leave
pop
xor
push
pop
pop
jno
fwait
aaa
push
in
movsb
shl
sub
mov
fwait
mov
int3
stos
jns
cmpsb
inc
xchg
ja
lret
popf
aas
loop,pn
xor
inc
inc
lahf
lret
ret
cmp
test
imul
std
sbb
or
sbb
sahf
mov
out
sbb
pop
js
and
in
mov
mov
icebp
test
jl
add
test
ja
fdivrs
pop
call
sub
dec
inc
jne
mov
xor
cmp
xchg
negl
sbb
adc
adc
xchg
push
jbe
xor
lahf
loopne
inc
jl
dec
push
dec
sbb
popf
iret
loop
fsubs
fsubrl
fnstenv
test
movl
out
push
loop
sub
pusha
orl
or
stc
enter
inc
mov
dec
das
outsb
dec
sbb
leave
cmp
xor
test
popa
xchg
or
hlt
out
pop
inc
cmpl
xor
imul
out
adc
pop
fnstenv
shll
mov
add
push
mov
idivb
mov
mov
sub
or
ret
in
ret
jge
xchg
out
mov
pop
xchg
jp
jmp
outsb
pusha
dec
mov
outsl
sbb
jo
xlat
sub
inc
es
add
pop
arpl
fsubl
cmp
sbb
mov
jno
nop
adc
jbe
mov
xchg
movsb
push
dec
int3
sti
mov
test
mov
mov
and
aad
cmp
data16
cld
mov
popf
es
iret
mov
jmp
mov
inc
cmp
cli
sbb
lret
xor
lahf
test
fcompl
je
sub
fxch
int
mov
ss
scas
sarl
add
dec
js
aas
jge
enter
jmp
push
cwtl
dec
in
mov
and
add
lret
fdivr
dec
xchg
lahf
sbb
inc
mov
mov
push
mov
mov
ja
or
and
jl
nop
push
scas
mov
test
and
mov
adc
int
in
fstps
mov
divb
add
popf
decb
mov
inc
aam
mov
jns
sbb
and
lods
sti
mull
aam
shrb
jle
mov
movsl
mov
pop
shrl
push
hlt
fstpl
xchg
mov
cmp
cmp
jecxz
adc
mov
sub
or
loop
pop
insl
repz
iret
inc
cmp
add
pop
loopne
clc
fadds
pop
or
mov
lock
outsb
mov
ja
cld
insb
lret
and
repz
daa
iret
loop
lret
mov
jbe
ret
cmc
jp
add
dec
sbb
enter
adc
mov
lcall
fdivrl
inc
cmc
test
sbb
rcrb
adc
out
faddl
int3
lret
mov
xor
xlat
pop
add
aaa
ret
shrl
pop
ret
test
ljmp
jnp
mov
imul
outsb
jmp
outsb
dec
inc
dec
mov
xor
out
adc
lahf
sub
arpl
xchg
js
sbb
or
add
clc
jmp
push
mov
lods
inc
jnp
xlat
aaa
hlt
dec
xor
pop
int
sbb
push
lcall
out
pop
sahf
insl
xchg
or
movsb
sub
sub
inc
ficompl
aad
aas
mov
xchg
icebp
loope
loopne
jecxz
es
and
ljmp
repnz
cmpsb
iret
decb
cmc
xchg
push
sub
cmp
and
sub
xor
cmp
loopne
aas
cli
leave
sarb
je
mov
mov
mov
add
int
imul
jns
leave
fidivrl
cmp
and
mov
pop
mov
dec
mov
inc
std
sahf
ret
in
push
jmp
adc
leave
adcb
test
sub
and
fwait
mov
gs
pop
push
mov
dec
xchg
adc
aas
cwtl
jns
dec
lods
sbb
lea
xlat
out
jnp
out
andl
ds
fadds
shll
mov
imul
aas
mov
xor
mov
xchg
inc
push
cmp
dec
jp
xlat
inc
cmc
pushf
jno
xchg
repz
mov
mov
aas
dec
fiadds
cmp
lret
dec
sub
cmc
test
adc
inc
addr16
jp
icebp
sbb
xchg
and
cld
lock
and
daa
cmp
or
scas
pusha
mov
icebp
fadd
xor
pop
sahf
or
es
movsl
ds
mov
nop
nop
out
out
and
outsb
xchg
stc
pop
mov
adcb
or
out
jb
mov
xchg
push
xor
stos
mov
pushf
shl
cld
xor
and
jns
lret
stos
fidivrs
cld
hlt
push
push
jecxz
adc
xchg
hlt
mov
int3
push
adc
outsl
mov
out
aaa
mov
or
loop
push
mov
out
pop
daa
jge
stos
test
mov
int3
gs
insl
scas
jb
mov
testl
negb
ret
mov
mov
popa
adc
notb
sti
add
jne
int
lods
fcos
shrl
shll
fwait
hlt
push
rorb
cmp
push
jecxz
mov
xchg
adc
dec
repnz
repz
xlat
add
lock
dec
push
adc
fwait
or
inc
or
les
shll
ss
popf
outsb
push
aaa
out
daa
das
mov
xchg
mov
sahf
repnz
mov
sub
xlat
mov
pop
pop
aad
popa
outsl
mov
mov
xchg
dec
cmpsb
lret
in
iret
in
lret
int3
stc
cmp
imulb
ret
pop
mov
add
enter
jg
push
mov
imul
adc
add
sub
inc
push
clc
xchg
pop
push
and
sbb
mull
sub
sub
mov
jge
fucomi
insl
xor
adc
and
les
inc
lcall
pop
lds
jle
push
xchg
adc
stos
and
push
loop
inc
lahf
xor
aam
push
adcl
dec
adc
fadds
push
sbb
mov
adc
stos
jge
pushf
fmuls
adc
sbbl
jecxz
dec
cld
clc
rclb
dec
or
mov
cs
jae
sbb
xchg
aam
cwtl
repnz
xchg
xchg
adc
push
testb
in
mov
or
sahf
push
cmp
lock
out
jns
and
dec
jp
out
xchg
jle
orb
andl
sub
jle
inc
out
fcmovnu
jge
jno
testb
test
xor
mov
rcll
shll
int
cmp
int
push
pushf
xor
data16
mov
jecxz
lcall
insl
rcrl
mov
shlb
xor
push
pop
sub
lds
push
iret
or
or
inc
das
scas
lods
call
cwtl
ds
cld
and
push
in
in
aam
push
das
sub
mov
out
xchg
sbb
cld
je
mov
fwait
sub
scas
inc
xorl
icebp
aad
rclb
es
stc
add
dec
cli
scas
andb
sti
cli
jp
leave
cli
dec
je
sub
movsl
push
add
inc
dec
insl
addr16
shll
mov
xor
cmp
cmc
sbb
fmuls
sbb
and
add
ljmp
sub
pop
or
mov
mov
outsl
sbb
push
mov
aas
fmul
lahf
adc
and
jecxz
dec
lret
test
jecxz
cld
lret
or
loop
stos
stc
mov
call
loopne
pop
push
nop
xchg
add
lahf
push
stos
or
fiaddl
fnstenv
lret
lods
dec
add
pop
xor
mov
aad
cmpsl
fidivl
xlat
sarl
xor
dec
adc
mov
xchg
icebp
popa
add
mov
xchg
lcall
jmp
ret
mov
and
call
xchg
mov
test
sub
mov
mov
xchg
loopne
pop
lds
mov
aaa
mov
push
sbbb
mov
inc
imul
adc
sbbb
pop
in
lds
or
jmp
loop
rclb
jae
adc
xchg
xchg
fcmove
lods
cltd
lahf
test
shlb
loopne
aad
mov
dec
cmp
stos
ds
push
aam
lahf
xchg
into
inc
mov
xchg
jo
jle
jg
jmp
imul
add
adc
fsubrl
movsl
push
mov
call
imul
cmp
add
stc
dec
ds
and
insl
lods
adc
push
push
sbb
fldt
cmp
xchg
cli
sub
popa
mov
stc
test
in
lahf
jbe
popa
dec
sahf
inc
cli
shrl
test
dec
shrb
mov
test
shll
cmp
dec
sbb
lea
mov
cltd
test
mov
cmp
call
nop
cld
or
fdivl
shl
sarb
rol
pusha
cmc
pop
mov
sbb
dec
cs
test
fbld
test
lret
cmp
push
and
cmp
je
sbb
jge
add
push
nop
pop
pusha
popf
dec
call
xor
xchg
addb
inc
aam
sub
int
sbb
in
dec
mov
mov
pop
dec
xor
xchg
ja
dec
jp
in
mov
fcomp
stos
and
lock
les
test
push
stos
pop
imul
jnp
shlb
sub
test
inc
xor
adc
stos
pop
rcll
pop
jnp
mov
cwtl
lods
sti
adc
fisttps
mov
cmc
cltd
mov
arpl
insl
lea
jo
xchg
idivl
mov
fdivs
xor
test
cmc
fistl
xchg
repz
dec
jmp
gs
add
xchg
fsubr
repnz
movsb
and
pop
sti
out
or
add
or
add
lcall
into
test
pusha
lahf
pop
adc
sbb
lahf
sbb
daa
mov
or
push
dec
and
pop
movsb
aad
xchg
dec
mov
add
adc
push
fldcw
ret
pop
fs
dec
in
pop
adc
dec
xorb
xchg
das
inc
in
icebp
in
mov
lods
movsl
and
lods
inc
daa
dec
fucomi
insb
xchg
mov
bound
insl
sub
icebp
iret
add
xlat
xor
stos
loop
hlt
ljmp
jecxz
mov
mov
adc
imul
dec
push
jno
ja
movsb
iret
dec
imul
bound
idiv
push
mov
lret
cmp
gs
mov
xchg
sbb
fsts
lods
jnp
fsts
inc
adc
mov
inc
arpl
dec
or
loop
movsl
div
cmc
adc
mov
add
outsb
cmpsl
roll
in
xchg
lds
push
movsl
pop
lret
outsl
pop
lods
xor
outsl
cmp
aas
stos
pop
into
mov
lock
cmp
add
sbb
lret
or
in
xlat
ss
or
pop
out
adc
jp
and
addr16
xor
push
int3
lods
mov
mov
push
out
pop
ljmp
and
in
insl
fnsave
jle,pt
js
loopne
pop
fisttpll
cmpsb
ljmp
fnstsw
mov
mov
pusha
sarb
stos
std
inc
push
jmp
jns
mov
cmp
mov
xchg
add
dec
popf
pushf
xchg
jp
cmpsb
int3
sub
popa
sub
pusha
imul
fisubrs
jmp
inc
mov
mov
cmp
jp
xchg
out
xor
push
mov
fnstcw
add
sbb
jbe
fstpl
fsubrs
jbe
jne
divl
xor
mov
leave
sbbl
xchg
loope
xor
ret
add
sarb
push
rcrl
xor
shll
arpl
add
xor
arpl
inc
test
test
lahf
cmp
mov
into
loopne
fcmovu
xlat
adc
fsubp
pop
pop
repz
aam
jne
repnz
add
jne
sub
es
xor
inc
cld
jbe
cmp
shll
add
std
jns
xor
in
jge
push
mov
cmp
xchg
sbb
fisttpl
mov
mov
mov
insl
ret
sbb
fisubs
enter
jns
fistpl
cmpsl
sbb
pop
xor
pop
jnp
xor
add
and
and
mov
push
jmp
xor
cmp
into
ret
mov
stos
pop
mov
push
mov
xchg
adc
iret
in
stos
test
pop
push
in
add
cmpsb
divb
flds
xchg
cmpsl
ja
arpl
rorb
xor
jne
idivl
aad
jae
test
lea
mov
pop
xchg
call
lods
loope
or
popf
sbb
cli
addl
adcb
ret
setno
loope
jae
xlat
scas
xor
lock
xchg
xorb
pop
pop
imul
and
stos
scas
mov
addr16
adc
and
push
push
add
into
and
int3
sub
mov
jnp
mov
shll
xchg
roll
out
xchg
out
push
stc
lods
push
inc
shll
mov
inc
fiaddl
std
scas
or
pop
sbb
stc
test
cmp
stc
mov
pop
ffreep
cli
xchg
mov
xchg
in
jecxz
dec
in
insb
jb
daa
in
lods
and
fmull
mov
daa
cmp
mov
les
filds
cmp
jle
mov
lcall
call
mov
lret
xlat
nop
dec
mov
jnp
pop
or
mov
jecxz
aas
inc
jns
sub
test
shl
adc
push
aaa
shrd
sub
xchg
imul
jnp
mulb
pop
movsl
mov
pop
dec
xchg
fs
adc
inc
test
enter
cmp
xchg
mov
mov
dec
adc
mov
cmpl
pop
pushf
movsl
jno
cmp
adcb
or
and
xor
mov
inc
lock
xor
scas
jge
inc
or
fdivl
sub
mov
dec
ret
inc
out
mov
inc
mov
sti
aam
das
push
mov
xor
mov
xor
ret
jl
inc
stc
dec
xor
dec
dec
xor
dec
or
mov
pop
cmp
mov
mov
cld
testl
dec
flds
and
int
rorl
dec
sub
ja
jnp
pop
mov
push
repz
enter
aaa
ror
imul
jle
pop
fistps
notb
rcrb
test
pop
adc
and
push
imul
imul
fstl
push
aam
lods
popa
sbb
pop
xor
mov
test
stos
dec
mov
stos
lods
add
inc
cmp
sbb
stc
loopne
addr16
enter
stos
xchg
pop
in
and
fcomps
arpl
jo
inc
sbb
xlat
mov
cmpsl
sbbb
aas
gs
dec
loope
cli
std
jo
shlb
das
add
cmc
scas
ss
adc
pop
ljmp
pop
ljmp
pop
pop
flds
in
pusha
or
outsl
sahf
ljmp
aam
aam
pusha
dec
sub
cmpsl
sub
sbb
out
lea
mov
jnp
ret
test
adc
mov
lods
adc
jae
lods
sub
xor
cmp
mov
cmp
imul
test
jge
pop
lret
sbb
outsl
or
fbld
clc
lea
scas
mov
push
cld
jmp
arpl
popa
in
lock
vmwrite
inc
inc
xchg
cmc
enter
mov
je
xchg
xchg
rcrl
sbb
int
add
icebp
mov
ljmp
push
pop
dec
inc
push
daa
push
pop
movsb
sti
push
sbb
repnz
mov
inc
sbb
jmp
pusha
pusha
out
sbb
inc
icebp
fwait
mov
sub
hlt
adc
pop
out
inc
pop
xchg
or
jmp
mov
aad
fsubr
hlt
xor
jne
sbb
popa
cmp
dec
pop
xor
sub
notl
movsb
pop
aam
jmp
incl
jns
cmp
adc
cmpsl
test
push
ret
dec
mov
rorl
mov
cli
sub
outsb
lds
lods
mov
mov
std
inc
sub
ret
mov
dec
rclb
jg
mov
test
sbb
loopne
cltd
imul
mov
fists
sbbb
data16
test
mov
sub
xor
and
and
xchg
jle
and
sub
xor
lock
inc
aam
ds
xor
mov
pusha
xchg
stc
add
test
popa
mov
roll
mov
in
dec
scas
jae
mov
sub
mov
nop
icebp
cmpsl
or
adc
movb
aas
test
and
call
cwtl
add
js
sbb
cmpsl
in
cltd
les
add
shlb
hlt
jl
lahf
xlat
roll
mov
ljmp
imul
and
test
add
sub
ss
adc
lret
ljmp
and
mov
cwtl
in
enter
faddp
and
iret
jns
sub
pop
rcr
cmp
icebp
call
pop
das
inc
bound
loope
jnp
push
stos
popa
jle
push
sbb
std
xchg
jb
cmp
or
arpl
jle
pop
repnz
mov
pop
ficoml
mov
jno
push
cld
push
xchg
cmp
jns
jne
mov
inc
pushf
fwait
int
dec
lret
xchg
ljmp
adc
cmpsb
mov
push
mov
ljmp
sbb
sub
inc
inc
jmp
aaa
pusha
mov
dec
dec
adc
loop
adc
and
mov
mov
repnz
cs
mov
and
mov
in
or
out
popa
cltd
loope
xor
popf
and
lea
dec
push
rolb
mov
cmp
xchg
push
push
inc
mul
and
cmp
cmp
je
std
outsl
and
out
lret
sbb
orl
push
ja
ljmp
push
enter
pop
xchg
ds
orl
jnp
cmp
fildll
jle
or
mov
push
popf
negb
xchg
cmc
and
push
test
adc
inc
sbbl
orl
push
cmp
bound
sbb
sbb
xchg
inc
popa
out
rcl
add
mov
nop
and
add
push
pusha
out
sbb
iret
add
adc
cltd
cmp
mov
mov
ss
jmp
mov
jnp
insl
adc
divl
fs
adc
sub
cmpl
adc
leave
mov
pusha
mov
lds
dec
adc
inc
das
ds
les
stc
xchg
add
enter
sbb
adc
arpl
jno
and
dec
jle
push
sub
fisttpl
ja
aas
xchg
and
ret
jae
cmp
je
imul
sti
cmp
sub
mov
dec
pop
nop
mov
test
push
loopne
jg
adc
pushf
push
in
mov
call
lods
xchg
icebp
lret
mov
adc
in
das
jp
bound
rolb
xor
js
addl
cmp
or
scas
int3
test
mov
inc
std
mov
and
js
xor
insb
or
jmp
mov
or
popl
pop
imul
leave
jge
lcall
fisttpll
lahf
data16
out
or
xor
sahf
hlt
fidivs
or
and
inc
pop
cmpsb
or
ja
lret
xor
xor
das
ja
outsb
cmp
loope
mov
ss
sbb
bound
lods
jnp
adc
test
jecxz
and
mov
sub
xor
gs
ss
sahf
jle
xchg
jb
mov
or
mov
and
outsb
adc
or
pop
mov
cmp
insb
cmpsl
in
xchg
aad
in
call
test
dec
inc
dec
cld
dec
pop
loop
mov
sbb
out
divl
jbe
lahf
lret
cmpsb
mov
mov
or
in
test
sub
nop
inc
jo
fstpl
inc
jbe
lahf
outsb
sub
cmp
jbe
sbb
out
sub
enter
sahf
mov
push
iret
test
xchg
imul
jbe
clc
dec
bound
shlb
pop
scas
loope
and
cmp
orb
or
pop
inc
jle
fstl
arpl
dec
mov
sbb
add
sbbb
les
adc
imul
pop
lock
inc
ret
push
mov
sbb
sahf
mov
notl
rcl
push
dec
adc
add
testl
das
or
loopne
jecxz
or
in
jp
mov
out
test
sahf
stc
test
aam
mov
in
jo
push
das
jae
adc
aam
inc
mov
outsl
push
xchg
or
pop
xor
dec
xchg
jne
sub
lea
mov
arpl
pop
int3
jns
cmp
mov
in
sbbb
jb
inc
addl
mov
jnp
mov
fcos
shrl
push
repnz
lret
cmpsb
pop
scas
jge
insl
insb
jnp
cs
mov
jne
in
shll
test
mov
out
inc
pushf
adc
scas
and
lods
mov
insl
or
push
push
ss
rcll
outsb
inc
inc
outsl
sti
or
push
popf
popa
xchg
lea
outsb
push
lret
pop
cmp
pusha
adc
dec
jg
or
test
out
adc
jno
popf
data16
cmp
inc
mov
lcall
jge
lahf
test
add
adc
cmp
jo
mulb
jge
dec
in
xor
fnstsw
ss
iret
test
lahf
je
pop
ljmp
inc
pushf
out
inc
adc
into
sbb
adc
jle
imul
xchg
inc
adc
and
xchg
mov
push
push
fists
mov
add
rcrl
dec
ret
nop
nop
xor
shlb
andb
fs
add
ss
adc
jb
or
out
sbb
ficoms
add
inc
pcmpgtw
adc
or
or
mov
cmp
mov
lahf
mov
stos
sbb
xchg
adc
aaa
imul
or
xchg
push
mov
lret
inc
pop
sbb
xchg
sub
push
push
xor
push
inc
fwait
jnp
dec
pextrw
and
data16
in
loope
or
mov
push
mov
mov
adc
mov
mov
inc
pop
ret
stc
jmp
mov
pop
sbbb
cmpl
cmp
sbb
cli
mov
movsb
xor
or
jns
add
cmp
jno
call
sub
repnz
jp
loopne
jge
xchg
mov
sub
mov
repz
lds
adc
pop
test
shlb
shlb
dec
rolb
ljmp
pop
dec
fdivs
repz
jg
push
add
inc
pop
mov
sbb
jbe
adc
cmc
outsl
push
jg
fisttps
aaa
js
sbb
ja
ror
jg
or
cwtl
cmpsl
aaa
sti
scas
addb
mov
daa
dec
pushf
ror
js
repnz
ror
xchg
push
mov
inc
sub
pusha
mov
inc
test
orb
adc
icebp
daa
cmp
adcb
add
imul
and
aam
pop
popa
out
scas
cli
push
xor
in
das
and
in
addr16
sub
jo
aad
jns
int3
das
add
clc
mov
imull
jl
pop
xchg
cmp
pop
add
xor
or
push
outsb
jo
inc
stos
or
ss
rcll
mov
dec
jbe
mov
mov
in
jl
and
loope
mov
jne
xor
int3
insl
fwait
pop
repz
repz
and
popf
adc
scas
cmpsl
rcll
popa
inc
xor
mov
test
or
outsl
leave
mov
inc
and
cmp
cmp
pop
xor
dec
enter
inc
cmc
fidivl
rcrb
jne
xlat
mov
xchg
rclb
cmpsl
jmp
push
lahf
mov
es
es
ds
inc
js
negb
mov
xor
inc
loop
je
mov
gs
dec
push
fildll
orb
std
mov
je
and
enter
and
hlt
xor
sbb
add
add
jns
pop
in
mov
dec
jae
mov
enter
js
orl
mov
mov
and
nop
stos
shl
jl
int
sub
out
sub
add
pop
cmpsl
test
pop
js
popa
test
test
push
pop
pop
cmp
test
add
pop
clc
outsb
pop
das
movsl
push
mov
fs
mov
int3
mov
into
mov
sub
pop
push
aad
arpl
fwait
inc
cmpb
das
add
insl
mov
push
or
cld
js
dec
mov
mov
outsl
and
add
pop
push
jp
outsb
and
sub
sub
cmpsb
pop
ret
pop
push
and
leave
jp
pop
clc
adc
cmc
mov
sub
rcll
rclb
lods
lret
out
andl
fcoms
cmp
subl
push
dec
jae
into
lret
outsl
mov
fisttpll
sub
aam
xchg
mov
push
and
pop
divb
or
fs
cltd
sub
mov
sbb
lea
jp
xor
jne
or
push
stc
cs
sbb
fldcw
data16
cmp
stos
push
mov
and
fistpl
pop
jp
cmp
lds
mov
cltd
jbe
push
mov
mov
adc
dec
mov
push
test
cmpsl
and
cmp
inc
mov
and
or
sub
mov
fidivrl
mov
mov
lods
mov
inc
cmc
sbb
xor
mov
dec
in
sbb
cmp
leave
data16
int3
ret
sub
movsl
pop
inc
mov
mov
dec
inc
rcrb
nop
jae
daa
push
or
jmp
mov
xor
loope
daa
nop
dec
aam
ficomps
movsb
daa
pusha
pop
mov
inc
pop
scas
pop
popa
jo
pusha
loop
mov
inc
in
add
pop
imul
sbb
and
cmpsl
iret
sbb
lods
cwtl
xor
ja
sub
mov
jne
stc
xchg
pop
jg
jmp
xchg
rcrb
adc
dec
cli
mov
jl
push
push
insb
adc
xchg
adc
mov
cld
lods
outsl
sub
push
fimull
inc
jecxz
addr16
sahf
push
ds
in
jecxz
or
loope
ljmp
lea
daa
mov
out
mov
shlb
outsl
add
sbb
outsb
insl
inc
in
push
gs
in
mov
sbb
and
rcl
cwtl
fisttps
repnz
mov
insb
outsl
push
rorb
jp
addb
test
xchg
xchg
sbb
pop
push
lods
out
mov
mov
mov
xchg
sub
xor
out
and
insl
add
fadd
cwtl
lret
sbb
pop
sbb
fisubl
cmp
adc
inc
ds
mov
lret
push
jns
ret
xchg
out
and
xor
cld
loopne
dec
add
or
sub
aaa
pop
fnstenv
mov
mov
lods
mov
pop
ret
mov
cmp
cs
inc
push
xchg
inc
mov
xchg
and
cs
sahf
fisttpl
push
xchg
repnz
jle
and
loopne
movsl
mov
insl
mov
xor
and
cld
dec
lcall
in
sarb
push
and
cmc
js
dec
inc
xor
mov
jns
sarb
nop
loope
dec
das
and
mov
bound
ret
in
icebp
push
xchg
js
les
je
pop
push
scas
mov
sub
adc
cltd
sbb
cmpsb
or
xchg
addr16
mov
cmpl
fs
jae
xor
jns
inc
in
and
cld
aad
add
bound
push
dec
nop
adc
xlat
add
xor
daa
mov
insb
stc
fbstp
fsubs
out
push
loopne
jle
shlb
mov
xor
push
mov
mov
or
push
call
pop
fiadds
pop
xchg
sti
sub
lea
out
jg
pushf
loopne
and
pop
push
or
add
jne
push
inc
xor
jmp
dec
fsts
mov
jge
xchg
push
je
xchg
sub
loop
gs
icebp
mov
pushf
sbbl
adc
add
arpl
dec
cmpl
in
out
xor
gs
mov
movsb
int3
icebp
xchg
or
leave
icebp
pop
jb
popa
cmp
xchg
out
imul
sub
mov
test
scas
repz
inc
jmp
std
je
inc
pop
pop
adcl
scas
rcll
sbb
pushf
jle
inc
jae
xor
inc
or
or
shll
mov
es
ss
and
sbb
int
and
ds
mov
daa
arpl
xchg
jnp
lret
pop
das
mov
rolb
lds
cltd
outsl
fcmovnbe
pop
sbb
pop
jae
sbbb
loope
call
mov
jge
and
lcall
pop
sarl
add
repz
test
jp
dec
push
mov
pop
js
pop
adc
int
movsb
and
sbb
lock
and
cld
mov
sub
dec
and
js
dec
enter
and
push
push
cmpsb
fsubrp
testb
sbb
xorl
rorb
cmp
pop
jge
fwait
push
fcompl
dec
inc
inc
or
rcrl
add
rclb
jl
mov
mov
gs
jne,pt
loope
sbb
cmp
jmp
movsl
sarl
add
cs
jle
sub
cmp
scas
jle
lds
and
aad
ror
or
shl
pop
movsb
call
xor
mov
sub
add
sub
push
push
sahf
push
out
adc
jae
fs
hlt
cmp
loopew
jl
pop
or
and
jmp
frstor
mov
pushf
sbb
loop
xchg
jg
mov
mov
cmpsb
pop
adc
into
mov
cli
mov
ds
addb
xchg
push
mov
xchg
pop
gs
or
loop,pn
clc
ja
pop
push
shrb
and
adc
dec
mov
push
push
es
push
jge
test
xor
rcrb
jb
ret
cli
adc
or
fistpll
movsb
push
dec
push
out
inc
or
push
push
or
data16
mov
inc
or
jbe
pop
mov
and
lahf
into
pop
dec
push
mov
inc
xchg
xchg
xchg
in
fbld
or
sub
push
adc
inc
pop
xchg
or
test
sub
mov
sbb
cmp
adc
xor
jb
or
aam
adc
xor
rcr
pop
test
or
je
test
daa
roll
hlt
sub
and
mov
imul
movsb
xchg
nop
ret
push
imulb
mov
aam
leave
and
sub
cwtl
jae
fisubl
mov
rcrl
or
mov
push
roll
mov
je
mov
test
lcall
scas
popa
cltd
dec
mov
aam
lret
fsubrl
jnp
fsubl
out
test
sub
in
dec
pop
push
inc
aam
push
mov
push
fcmove
dec
loop
or
lock
pop
pop
inc
stos
or
mov
xchg
pop
stos
cmp
xor
gs
cmp
mov
test
inc
in
cmp
add
shll
mov
add
push
mov
xor
ja
push
hlt
stc
std
out
pop
cltd
adc
popl
pop
add
jecxz
dec
push
ds
or
or
push
test
mov
lods
test
or
mov
and
mov
jne
xchg
hlt
lret
xor
dec
push
and
aas
fwait
les
fbld
or
jno
sub
mov
into
rcrb
ret
pop
jno
mov
loopne
mov
push
pop
push
enter
pop
repz
enter
outsl
or
mov
jae
dec
mov
mov
movsb
fildl
push
js
cmpsl
gs
aas
test
xor
shr
lret
dec
inc
ficoms
cmpsb
es
adc
xor
movsl
mov
jmp
xor
into
js
or
xchg
test
out
inc
xchg
repz
stc
push
jns
cmp
stc
dec
out
addb
fisttpl
push
mov
vsubsd
rol
pop
sub
and
ret
jecxz
movnti
fwait
and
add
cmc
pop
or
int3
sub
sub
dec
lods
add
sub
cltd
mov
adc
jnp
cmp
shll
push
aaa
mov
fstl
addr16
or
mov
mov
pushf
mov
shlb
adc
lret
scas
rcl
jo
dec
adc
sarb
mov
repnz
ret
xor
gs
sbb
mov
cmp
test
fidivrs
push
xchg
pop
fdivl
mov
pop
sub
mov
imul
imul
push
dec
in
jecxz
jo
mov
sbb
mov
or
sub
or
fidivl
data16
xchg
ja
pop
xor
lret
fidivrs
add
pop
mov
fcomi
ss
mov
pop
ss
inc
push
and
pop
dec
cli
xchg
sbb
fwait
and
clc
jbe
mov
ja
dec
and
out
push
pop
pop
push
inc
cmc
dec
and
xor
lret
inc
lahf
int3
xorb
adc
addr16
lahf
lret
cmp
dec
test
dec
mov
and
dec
pop
jge
call
sub
push
xchg
shr
jnp
cmp
fisubrs
push
mov
clc
sub
loope
lcall
ret
and
jl
pushf
bound
shll
sub
adc
mov
mov
jmp
dec
lahf
fidivs
imul
ljmp
inc
lds
or
outsl
incl
add
push
test
std
mov
sbb
dec
orl
fwait
dec
shll
testb
jne
xor
xchg
loop
jg
or
jae
pop
scas
arpl
or
fucomp
fwait
dec
cltd
les
xchg
push
lret
insb
idivb
jle
loop
enter
lods
xor
popa
pop
fwait
sub
mov
cs
aaa
dec
insb
sti
adc
lea
mov
mov
and
insl
mov
push
push
jle
sbbb
xor
pop
insb
push
sahf
insb
sahf
add
mov
mov
enter
mov
adc
call
flds
cltd
push
fcomps
daa
push
dec
add
mov
adcb
pop
and
adc
ss
jns
sti
popf
fwait
mov
pusha
pop
xor
ret
inc
and
outsb
pusha
dec
dec
sbb
or
xor
out
add
loopne
repnz
push
lret
dec
or
fcmovbe
mov
popf
dec
fldenv
sbb
jmp
xor
adc
je
lret
adc
jmp
pop
dec
pop
xor
lret
inc
sub
call
lods
in
xchg
inc
mov
sbb
mov
subb
xor
inc
es
mov
aaa
pop
cmp
add
outsb
in
adc
icebp
scas
inc
pusha
das
mov
scas
pusha
and
fmulp
scas
pusha
mov
xchg
mov
imull
nop
or
jno
jbe
dec
jb
ret
std
jns
cwtl
jmp
in
adc
sub
sbb
leave
popa
push
mov
mov
dec
push
sub
pushf
loope
inc
fidivrs
mov
inc
jns
add
enter
repz
push
mov
stos
xchg
data16
out
pop
push
pop
popf
aam
or
ljmp
mov
andb
sub
call
imul
popf
jnp
sbb
fimuls
mov
cmp
mov
dec
mov
push
mov
cwtl
popa
mov
xor
js
xor
repnz
and
sbb
subb
clc
adc
int
stos
dec
push
xor
push
pop
je
loope
xor
dec
test
sbb
xchg
jge
inc
loopne
adcb
cltd
idiv
js
dec
pop
popa
mov
push
sbb
es
inc
inc
mov
inc
xor
nop
loopne
rcr
mov
jmp
std
aad
test
lahf
or
push
pop
das
push
je
test
lcall
jb
dec
lcall
mov
out
mov
enter
shlb
xchg
jmp
cmc
imul
jg
test
push
lods
jl
pop
mov
ret
loope
sub
sub
inc
mov
imul
dec
mov
icebp
mov
cli
and
jp
stos
fdivrp
inc
ret
mov
cmp
das
push
aam
enter
adc
cwtl
nop
js
or
mov
xor
fidivrs
test
std
pop
stos
mov
mov
xchg
das
push
pushf
test
data16
std
mov
pushf
je
jns
and
rcrb
ret
aas
mov
xchg
jl
lahf
mov
movsbl
xor
nop
push
in
aas
das
in
mov
mov
xchg
and
into
cmp
add
sarb
shrl
bound
aam
bound
fadds
or
js
or
cwtl
out
bound
cmp
or
js
inc
add
push
mov
dec
pusha
loopne
sbb
xchg
cmpsl
repnz
adc
rcr
sub
mov
mov
cmpb
adc
out
repnz
rcr
lea
call
imul
out
xchg
xchg
and
bound
mov
mov
ret
dec
push
or
jae
inc
movsl
mov
sub
lea
mov
mov
dec
test
arpl
add
lret
dec
pop
andb
mov
mov
push
xor
add
pop
out
or
fiadds
loop
mov
out
movsl
xchg
iret
data16
adc
cmpsl
mov
xchg
or
mov
fildl
cmp
lock
mov
movlps
pop
shll
call
mov
fstl
scas
dec
mov
pop
push
xor
mov
fbld
js
aas
rorb
cs
sub
loope
cli
repz
xor
call
jge
dec
outsl
out
mov
dec
inc
xor
cmpsb
mov
fimull
push
loopne
xchg
pop
ret
pop
fidivl
ja
fwait
ja
shll
inc
jbe,pn
or
pop
js
jge
xchg
ret
mov
fisubl
fbstp
or
ret
lods
xor
bound
imul
sbb
sahf
loop
mov
adc
test
add
out
sbbb
jnp
es
xor
daa
xchg
xchg
in
xlat
mov
pop
popf
xor
push
movsb
sub
aam
test
or
sub
fsubl
repnz
add
mov
push
test
test
std
lret
mov
xchg
cmp
test
popa
inc
andl
jp
stos
fisttps
pop
leave
stc
mov
sti
jl
nop
push
bound
jmp
xchg
out
mov
xchg
in
out
repnz
daa
cmpsb
jbe
xor
cltd
mov
leave
or
push
mov
cmpsl
ret
lock
xor
push
or
mov
jnp
sbb
adc
xor
cli
lods
loopne
mov
outsl
mov
loopne
jo
cmp
or
lret
add
push
pop
icebp
cltd
and
sbb
aas
shr
add
push
inc
ds
mov
push
mov
mov
xchg
mov
dec
inc
jp
adc
add
xchg
roll
mov
outsl
scas
dec
adc
inc
or
pop
adc
sbb
push
lods
inc
cmp
imul
loope
xor
mov
rorb
cmp
pop
mov
pushw
cmp
pop
add
fcmovb
fsubrs
fadds
sbb
lds
sbb
sbb
xor
in
and
xchg
pushf
pop
or
sbb
add
push
xchg
je
shrl
shlb
fidivs
sub
in
sbb
cmp
inc
mov
imul
notl
arpl
scas
pop
xor
out
notl
cmc
xchg
lds
test
push
test
ficoms
and
fs
xchg
scas
sbb
inc
sbb
int
push
push
fcoms
fidivrl
jp
ljmp
lcall
sub
sub
jg
push
mov
or
xchg
int
repz
and
scas
sbbb
mov
cmp
xchg
dec
add
stc
stos
into
push
loop
mov
and
daa
aad
ficoms
push
jb
jae
aas
imul
adc
add
iret
jl
push
mov
loop
sahf
dec
ja
out
mov
pop
dec
inc
lds
lods
xchg
iret
pop
push
cmc
adc
flds
pop
int
cltd
mov
push
stos
push
rorl
inc
dec
or
repnz
cmp
mov
xor
les
adc
aam
test
dec
mov
and
nop
push
pop
sbb
cs
jno
imul
jge
pop
fmuls
jecxz
scas
out
jno
inc
nop
mov
sarl
fwait
test
mov
push
fistps
movsb
jge
cmp
push
mov
cli
cmp
xlat
push
sar
lret
inc
inc
pop
push
push
dec
sbb
js
mov
movsb
xchg
dec
xor
aaa
loop
pop
movsb
inc
and
mov
lret
sub
ss
dec
push
xor
mov
lret
addr16
xor
stos
push
lea
sbb
js
sbb
stc
push
and
lret
loope
sti
arpl
dec
or
dec
and
mov
cltd
xchg
pop
dec
sub
dec
mov
mov
sbb
arpl
dec
inc
sbb
and
pop
dec
sub
sarl
dec
negb
hlt
push
adc
and
mov
notb
invd
cli
jmp
imul
jmp
repz
or
inc
ljmp
mov
xor
sub
loope
push
push
mov
jge
jae
in
mov
sbb
fcomip
jno
jo
cmp
pop
adc
push
jle
fsubrl
in
decl
mov
push
rcl
sub
pop
scas
adc
push
xorb
mov
xchg
test
add
in
out
dec
jno
inc
stos
jns
dec
sub
shrb
sbbb
or
inc
sub
add
call
add
lret
xor
addr16
mov
sbb
out
dec
fsubrp
push
mov
int
jnp
dec
push
aad
dec
adc
sbb
and
jecxz
or
mov
ficoml
jecxz
cmpsb
inc
aaa
xchg
aaa
jne
stc
fisubrl
dec
sbb
sahf
arpl
outsl
push
lods
in
icebp
push
jae
setp
out
stos
jnp
dec
mov
mov
das
adc
loop
jle
adc
es
shr
mov
stos
arpl
in
cmpsl
push
add
idivl
repz
mov
fsubl
xorb
xchg
xchg
mov
cmpsl
push
jge
jno
outsb
movsb
std
jecxz
mov
mov
ret
jge
stc
pushf
test
mov
ds
lds
and
mov
mov
sbb
mov
jbe
mov
imul
cmp
arpl
pop
lods
mov
dec
hlt
add
inc
jmp
adc
dec
cmc
es
and
push
mov
or
pop
cld
and
addr16
je
lock
loope
repnz
popa
mov
pmulhuw
test
add
fsubl
sbb
sbb
fwait
dec
stc
andb
add
cmp
ret
loopne
mov
or
int
jge
sub
adc
add
gs
ret
pop
popa
dec
aaa
pushaw
cmp
mov
mov
adc
pop
push
shlb
scas
mov
cli
push
xor
jae
xchg
into
mov
fnstcw
not
add
add
pusha
andl
inc
leave
rcr
mov
lock
pop
aaa
jp
and
cli
aad
loopne
jecxz
pop
inc
pop
mov
adc
or
lret
fs
adc
xchg
call
leave
aaa
push
xchg
mov
bound
into
loop
adc
out
pop
mov
or
aaa
lret
inc
inc
xchg
les
jne
pop
out
imul
lods
shl
inc
jmp
out
scas
jne
jae
dec
dec
sub
sbb
xchg
pop
add
push
xor
inc
or
daa
jmp
push
enter
xor
sarl
push
sbbl
ret
jle
add
jp
fsubrs
out
or
in
pop
das
lahf
mov
inc
sbb
add
outsb
arpl
inc
shll
xchg
fnstsw
imul
add
cmp
cmp
shll
or
fwait
imul
xor
and
icebp
ss
cmp
lods
cltd
push
mov
call
pop
fldl
out
sub
and
loop
icebp
pop
add
add
ss
jg
in
repnz
jp
pushf
add
les
dec
andb
xchg
test
mov
div
jbe
sbb
jg
je
or
jns
fdivs
inc
dec
inc
fnsetpm(287
sbb
mov
sbb
xor
cmp
dec
dec
mov
dec
xchg
lods
mov
out
cs
outsb
xchg
addr16
ffreep
loopne
pop
adc
shrb
bnd
mov
imul
jae
addr16
and
add
fld
mull
jno
sub
push
xchg
hlt
inc
mov
mov
sbb
mov
repz
cmp
sub
jns
dec
cli
mov
ss
xchg
sbb
sbb
push
bound
test
push
je
mov
xor
or
mov
add
ljmp
xchg
xorb
push
and
push
xor
push
cwtl
mov
push
mov
lret
jo
stos
adc
push
movsb
sbb
mov
enter
push
cmp
mov
popl
add
fcompl
les
in
xchg
sub
mov
jg
sbb
and
jl
repz
sub
xchg
testb
lea
pop
setp
imul
cmp
imul
outsl
les
push
rolb
dec
cmovs
dec
jbe
mov
enter
icebp
jns
mov
push
xchg
out
cmp
jns
xchg
shlb
pop
push
xchg
into
into
push
scas
inc
clc
test
lahf
mov
arpl
xor
mov
sub
jmp
dec
dec
add
imul
lret
adc
adc
fisttpl
aaa
jp
hlt
rolb
aam
hlt
jbe
adc
xor
bnd
push
mov
das
xor
fisubrl
pop
pop
ficoms
leave
ljmp
inc
push
lods
cmp
jg
es
and
bound
aaa
aas
jmp
in
sti
popf
fiaddl
int
and
cmp
mov
ja
pop
sbb
test
inc
cmp
loope
sub
leave
popf
incl
or
lcall
mov
negb
mov
adc
in
add
push
xchg
lds
sbb
sbb
xorl
xchg
add
scas
adc
and
fwait
jnp
movl
sub
cmpsb
and
cmp
adc
lcall
mov
mov
cs
loope
pushf
sbb
scas
cmpsb
leave
call
and
inc
mov
or
dec
and
pop
pop
les
lods
in
cmp
jl
js
outsb
push
or
sub
mov
push
insb
movb
mov
pop
shll
xor
xchg
and
jo
clc
insb
stc
mov
addl
leave
jb
dec
repz
ljmp
push
xor
xor
cmp
insl
adc
sahf
mov
shlb
in
fwait
xor
jmp
lret
and
push
call
sbb
nop
iret
fistl
ljmp
mov
lock
out
pop
and
sbb
cld
xchg
lea
push
xchg
hlt
mov
push
sbb
pop
and
xor
jb
ret
popa
mov
cld
push
add
dec
dec
add
jge
cmpsb
sbb
aas
jns
xchg
inc
dec
loopne
jne
push
iret
xor
push
cli
sti
and
push
push
xchg
inc
loope
dec
push
push
arpl
aam
cmpsb
and
or
inc
mov
add
and
xor
fnstcw
push
loop
sbb
out
mov
sti
int
xor
add
jmp
sbb
cmpsb
lods
arpl
inc
out
sti
cmp
pop
mov
dec
andl
xor
in
mov
jge
insl
push
xor
loope
loop
cmpsl
mov
jmp
push
fsts
cwtl
imul
scas
imulb
subl
jmp
fsubl
adc
push
leave
inc
nop
push
add
lea
loop
int
fstpl
inc
mov
sbb
enter
push
sarb
dec
push
or
xor
xchg
loopne
cli
cmc
xor
and
in
movsl
in
in
add
push
dec
jecxz
lret
in
and
es
push
jb
jle
or
or
fs
pop
jecxz
cld
imul
and
adc
mov
aam
pop
mov
and
adc
insl
adc
pop
jo
or
mov
cwtl
subl
jo
inc
jnp
div
adc
inc
add
into
pop
shrl
rcll
jle
hlt
cmpsl
pusha
shlb
dec
adc
cltd
lahf
mov
and
adc
hlt
arpl
stos
repnz
push
dec
mov
popf
mov
orb
jl
cs
xor
nop
xor
sbb
jno
ds
ljmp
lods
incl
pop
bound
dec
push
stos
xor
filds
or
mov
loopne
mov
xor
mov
icebp
add
mov
jbe
jge
inc
xorb
adc
add
pop
dec
rclb
in
xchg
add
jg
sub
sbb
mov
mov
cmpsb
stos
xchg
jb
sbb
int
xor
or
enter
push
or
arpl
iret
loopne
mov
in
and
outsl
jcxz
add
inc
insb
and
adc
cmp
imulb
nop
lcall
repnz
aas
icebp
stc
insb
sti
mov
clc
arpl
jnp
fsubrl
mov
mov
pcmpgtb
popa
sbb
rcrb
lock
ljmp
jle
fnstenv
dec
sbb
dec
sub
pop
adc
js
push
inc
dec
sarb
out
aad
dec
lret
mov
mov
push
dec
push
ficompl
es
inc
pop
or
push
jno
xor
inc
std
jns
cmc
xchg
mov
icebp
shll
gs
insb
dec
pop
xchg
arpl
call
push
call
dec
mov
stos
movsb
stc
xor
fistl
push
mov
add
jbe
outsb
pop
add
das
icebp
sbbb
bound
mov
add
imul
test
mov
push
inc
mov
add
addb
sub
fdivrs
lock
inc
cmpsl
sub
sbb
nop
iret
call
shrb
add
insb
mov
jle
addr16
and
fwait
movsl
xor
daa
sbb
cmp
or
jmp
sbb
adc
and
in
push
scas
push
ja
push
dec
sbb
pop
mov
dec
xor
push
inc
idiv
dec
add
cmpsl
pop
aam
pop
gs
inc
sahf
subl
mov
lods
pop
cld
push
lock
das
mov
fisttps
pop
pop
jg
xor
lock
sub
shrb
inc
int3
addr16
pop
pop
fwait
jmp
arpl
lret
mov
ss
aas
loop
test
cmp
or
sbb
push
mov
pop
adc
aad
pusha
push
loope
pop
add
std
adc
jnp
and
cld
xchg
arpl
sbb
repz
fdiv
je
lock
dec
je
push
popf
push
adc
insb
ja
pushf
pop
add
popa
mov
mov
jo
leave
mov
push
push
push
or
ret
and
rclb
inc
xchg
inc
sub
ss
push
test
cmpb
jp
lock
jae
or
stos
mov
adc
adc
mov
fisubl
mov
pop
fnstsw
loop
into
or
es
insl
sub
sarb
adc
cmp
xor
sub
cmpsl
push
mov
jb
imul
cli
xor
aas
insb
in
mov
xor
loop,pn
arpl
mov
xor
fidivrl
ja
pop
pop
or
scas
and
jp
in
insb
cli
xor
lock
pop
imul
jp
xor
cmpsl
and
xchg
push
jmp
push
dec
and
and
imul
lock
sbb
jb
popf
addb
sahf
fucomp
leave
loopne
pop
mov
and
sub
mov
fisttpl
js
mov
shl
hlt
mov
push
xchg
test
out
pop
outsl
xchg
lods
stos
xchg
stc
pop
test
jns
xorl
lahf
aam
sub
lret
mov
and
add
mov
imul
mov
sub
push
mov
inc
ljmp
jmp
jg
jmp
jmp
sub
data16
inc
lods
pop
pop
loop
sbb
and
fbld
sbb
mov
mov
aad
xchg
sarl
repz
pop
rolb
jecxz
ficoms
jnp
lock
outsb
rcl
lods
pop
inc
jmp
pmaxub
fdivrp
jne
pextrw
sbb
mov
fmuls
xchg
mov
jo
ret
jnp
adc
movsb
xor
jmp
cmp
dec
add
add
mov
in
add
mov
mov
data16
push
mov
mov
cwtl
mov
pop
sbb
add
jmp
mov
or
mov
pop
inc
cli
mov
mov
dec
or
or
bound
pop
insb
insl
adc
jne
jge
out
inc
je
cmpsl
jmp
push
jnp
sarl
jns
cmp
mov
xor
jecxz
xlat
add
or
aam
push
push
arpl
xor
mov
pushf
xchg
jo
mov
push
mov
jl,pt
xor
push
repnz
mov
xor
cmpb
pusha
sbb
hlt
pusha
inc
in
jno
mov
and
add
pop
mov
sbb
pushf
rolb
or
cwtl
xchg
jbe
loopne
jns
mull
mov
sbb
lods
sahf
ficompl
stos
test
ficomps
imul
push
in
test
and
sub
dec
and
xchg
push
mov
in
shl
fcmovnu
js
pop
mov
mov
aam
ds
into
movsb
cmp
xor
sarl
test
push
cli
push
call
dec
icebp
xchg
push
sub
cld
pop
xchg
int3
mov
add
ret
das
inc
into
aas
ljmp
adc
mov
xchg
add
cs
out
out
enter
into
or
jmp
fistpl
gs
cmp
or
and
outsb
dec
fbld
jmp
and
ljmp
sub
mov
adc
xchg
loopne
pop
or
iret
adc
or
jnp
cld
pop
adc
mov
sub
mov
mov
jg
movsl
ret
inc
sarb
push
mov
add
mov
scas
insb
scas
add
mov
mov
pop
mov
mov
lock
out
mov
arpl
movsb
push
jl
pusha
fadds
insl
inc
push
lret
pushf
jmp
mov
mov
sub
rclb
fcoms
mov
pop
push
ret
out
test
fwait
adc
cmp
mov
pop
adcb
fistpll
orb
dec
xchg
push
sub
shl
aam
iret
movsb
test
pop
jnp
fisubrs
pop
out
repz
mov
clc
cld
adc
lahf
fisubl
and
pop
mov
and
shll
ret
jmp
gs
mov
adc
ret
cmp
test
cwtl
and
mov
push
leave
jnp
pop
es
sub
daa
jae
ss
or
cmp
sti
loop
pop
add
inc
pop
pushf
and
sub
mov
popf
sarb
xchg
adc
xor
cwtl
fdivp
dec
or
outsb
sub
xchg
mov
int3
jge
mov
xor
xchg
inc
or
lods
mov
mov
and
in
mov
aad
dec
xor
in
mov
mov
dec
sti
insb
arpl
jge
movsb
in
mov
mov
loopne
scas
jo
push
fisttps
cld
adc
jecxz
pop
or
mov
bound
dec
int
push
lock
mov
out
inc
pop
nop
fildl
jns
mov
mov
push
ljmp
and
cwtl
mov
mov
ljmp
and
mov
mov
mov
mov
add
sub
adc
pop
cmpsb
fisubrl
aaa
xchg
xchg
inc
dec
subl
lcall
add
popf
test
jecxz
mov
shlb
jp
pop
mov
movsb
add
dec
sbb
jle
xchg
insb
movsl
scas
push
clc
test
pop
sbb
lea
cmp
mov
sub
ja
mov
cs
imul
aaa
mov
ret
add
push
shlb
sbb
and
adc
movsb
sub
adc
xlat
cmpsl
leave
out
add
xor
outsl
clc
mov
pushf
cmc
rorl
test
imull
mov
cld
cmp
sub
mov
insl
pop
mov
mov
aam
xlat
pop
scas
sub
outsb
sbb
lret
std
xchg
outsl
lods
stos
iret
or
mov
mov
fbld
cmp
xor
enter
popf
dec
mov
mov
imul
mov
pusha
lret
and
pop
in
repnz
lcall
fldt
and
xor
loop
jno
and
inc
jmp
loop
or
andl
fdivs
into
adc
sbb
bound
out
sti
push
sub
insl
cmpsl
mov
loope
mov
dec
repnz
sarl
xor
push
ret
and
dec
js
test
lahf
and
xchg
xorb
daa
arpl
dec
stos
stos
mov
leave
pusha
adc
shl
add
push
or
cmpsb
push
fdivl
and
cltd
adc
cmp
dec
enter
gs
int
movsb
pop
icebp
insb
xor
pop
mov
cmp
out
mov
mov
inc
and
fwait
xchg
mull
scas
cmpsb
add
xchg
cmp
jge
dec
jp
dec
xchg
or
movsb
fidivrl
and
in
test
mov
outsl
mov
imul
push
cmpsb
ss
sbb
cmc
adc
rclb
lret
add
inc
shl
repz
adc
dec
push
mov
mov
fs
insl
sub
aam
lods
lret
mov
imul
hlt
mov
jbe
aas
scas
mov
mov
cmp
sub
out
sbb
ret
stc
jnp
imul
ds
mov
jb
test
mov
push
stos
faddl
push
or
ljmp
xor
inc
gs
sub
aam
cmp
lock
add
push
push
in
int
in
mov
jno
in
lods
aad
adc
ljmp
pop
dec
cmp
jmp
xorl
mov
pop
stc
dec
fs
and
lret
into
sub
mov
xor
int3
mov
xor
in
popa
in
repnz
imul
mov
pop
outsb
mov
out
mov
lods
dec
push
dec
lret
jecxz
push
ret
sub
aas
cli
inc
sbb
xchg
xor
cmpsb
call
ss
mov
not
sti
repnz
xor
cs
or
mov
mov
fistpll
sbb
or
pop
inc
lret
sub
cmp
aaa
std
pop
cmp
lods
jle
push
clc
ret
cmp
mov
std
xchg
arpl
iret
mov
xchg
sub
xor
mov
jl
cmp
pusha
stc
fstl
or
xchg
mov
mov
sub
outsl
bound
dec
fs
popa
mov
bound
ret
mov
std
inc
int3
pop
jns
ret
loopne
jns
fwait
cmp
mov
fisubrs
movsb
mov
sbb
mov
cmpsb
cmp
xor
mov
or
fs
sub
icebp
imul
insl
adc
mov
add
das
and
and
dec
cmp
repnz
mov
es
jle
mov
icebp
out
fidivrs
cmp
pop
flds
and
push
xor
fbstp
dec
jb
pusha
pop
mov
push
inc
pop
jge
mov
push
inc
sti
push
xor
nop
pop
sub
mov
mov
pushf
int3
jne
inc
mov
int3
jg
sbb
inc
and
dec
hlt
jo
xor
nop
lret
cmc
push
in
pop
sarl
add
out
adc
mov
sub
test
adc
fmull
mov
jo
pop
xchg
jns,pn
sti
nop
and
es
test
dec
imul
cmpsl
xchg
lods
sub
stos
xchg
inc
dec
and
lcall
pop
lret
aaa
adc
fwait
cmp
and
inc
dec
sbb
inc
test
fmull
jae
stc
in
push
mov
push
xchg
inc
and
and
std
xchg
cmp
sub
mov
dec
push
mov
sbb
ss
and
call
xchg
pusha
fcomp
cs
std
stos
pop
ret
and
adc
addr16
xchg
adc
cmc
fistpl
or
imul
cmc
mov
inc
mov
pushf
imul
xor
pop
xor
xchg
idiv
or
clc
inc
cmpsl
mov
inc
sub
mull
lods
lods
mov
loope
cmp
cmp
push
jge
iret
loop
push
cmp
add
sub
insl
and
test
jae
and
or
mov
aaa
std
jl
popf
xchg
in
and
in
push
and
scas
mov
sbb
jbe
add
test
cmp
xchg
or
dec
ficoml
repz
pop
hlt
sbb
cld
push
clc
mov
and
xchg
in
sbb
xchg
xor
inc
subl
mov
and
cmp
mov
shll
mov
hlt
adc
hlt
sub
fsts
enter
mov
sub
pushf
push
in
mov
mov
sti
gs
imul
lods
out
gs
push
mov
ja
cmp
push
flds
std
les
push
push
dec
and
and
cmc
stos
cs
imul
dec
cmp
lret
cmp
outsb
jecxz
add
andl
mov
xchg
bound
jge
movsb
inc
jnp
push
or
out
push
xchg
inc
stos
data16
push
aas
jns
and
imul
mov
xchg
repnz
lret
into
shl
pop
imul
jo
sbb
rcl
lret
leave
mov
jnp
gs
and
repz
shrl
pop
dec
mov
iret
cs
dec
mov
aad
iret
inc
or
fcmovnbe
jb
mov
insl
mov
jge
popa
mov
dec
cltd
lahf
xor
lret
push
mov
sbb
mov
subl
and
mov
insb
inc
mov
inc
jg
insb
sbb
int
sub
notb
adc
sub
stos
fucomp
aam
adc
repz
aaa
mov
mov
xchg
scas
in
outsb
jbe
sbbl
cmp
push
xchg
sub
jecxz
mov
mov
add
inc
or
fcomp
jp
ja
sti
lds
fistpl
pop
aad
jae
fistpl
cmp
push
sbb
pop
in
dec
call
ret
stc
sti
shll
movsb
fnstcw
fstpl
aaa
push
add
pushl
rcrb
jp
mov
stos
sbb
ja
gs
cli
adc
dec
repz
jle
mov
add
ret
xchg
ret
imul
flds
fwait
out
addr16
fistpll
cmp
xchg
pushf
cld
andb
cltd
jnp
mov
add
sbbb
or
mov
pushf
cmp
xchg
push
sub
outsl
les
pop
mov
stos
dec
insl
cmpsb
push
add
dec
sbb
outsb
dec
xchg
pushl
outsb
je
push
imul
sub
add
sbb
in
test
sahf
push
scas
mov
cli
or
cld
push
jno
es
dec
xchg
xchg
inc
pop
sub
xor
aaa
or
movb
bound
xor
push
cmp
mov
cltd
subl
sbb
jle
jmp
and
xchg
dec
int
outsb
inc
or
mov
filds
inc
mov
loope
mov
out
daa
inc
add
fwait
std
addr16
orb
inc
sbb
pop
mov
sbb
add
out
sub
ret
adc
xchg
cmp
cwtl
jg
fs
ss
mov
aaa
pop
shl
aas
ds
mov
fwait
pop
das
daa
movsb
sbb
daa
ds
mov
and
cli
fwait
and
inc
pop
mov
stos
xor
mov
jl
movsb
push
aaa
inc
cmpsl
or
jg
repz
cmpsl
shll
add
and
dec
lods
xchg
cmp
jb
sub
aad
push
push
lock
nop
xchg
cmp
ss
bound
mov
outsb
gs
lret
addr16
fwait
inc
dec
test
ret
lock
push
sub
ljmp
fisttpl
in
fwait
and
movsl
pop
and
jg
pop
dec
jle
sub
sbb
cs
lcall
aam
adcb
adc
stos
sbb
mov
into
outsl
ficompl
mov
xchg
cmp
testb
call
scas
and
ret
sbb
in
in
iret
push
rol
sub
nop
mov
cmp
push
mulb
cltd
xor
mov
lods
in
pop
outsl
pop
adc
push
adc
test
push
inc
cmp
cwtl
xchg
test
ret
test
jmp
dec
xor
mov
ja
pushf
cmpsb
sub
sub
pop
icebp
lcall
and
dec
js
jmp
mov
mov
insl
push
jl
pop
pushf
jbe
push
adc
daa
sbb
add
shl
or
mov
mov
sbb
fldenv
rcll
in
lods
std
push
xor
or
adc
test
jmp
jp
scas
xor
mov
adc
push
fcoms
sub
into
fcoms
addl
test
or
out
push
mov
mov
rorb
repz
mov
dec
ret
fmul
push
mov
cmc
mov
dec
mov
out
jo
dec
push
cli
in
mov
sbb
bnd
cwtl
sbb
cmp
shlb
or
in
or
and
xchg
push
imul
sub
add
ljmp
loopne
mov
dec
xchg
cmp
mov
lcall
fnstcw
or
push
mov
insb
sub
xor
out
jle
jp
xor
imul
clc
lds
inc
outsl
jae
dec
cmp
sbb
imul
in
mov
repz
shrl
dec
mov
inc
add
outsb
sbb
js
in
xchg
js
xlat
lahf
sti
xchg
popa
mov
add
mov
jge
gs
fidivl
pop
xchg
dec
xor
mov
repz
sbb
inc
fcoms
cmpsl
pusha
inc
and
push
push
mov
mov
hlt
push
inc
push
sub
sbb
fwait
push
call
jnp
mov
outsb
outsb
loopne
je
or
cli
inc
jp
je
mov
mov
mov
ss
add
out
xchg
js
popa
cmpsl
adc
mov
push
pop
movsl
push
decl
cmp
mov
addr16
add
jmp
sbbl
outsb
mov
pop
mov
adc
cld
ror
sub
iret
lods
cmp
pop
adc
pop
sbb
les
into
add
test
adc
loop
and
mov
test
pop
mov
mov
jmp
jne
lock
ljmp
cmp
add
ja
notb
mov
inc
gs
rcrl
das
jle
addr16
aam
ret
mov
out
std
ret
scas
push
cmp
sub
icebp
jp
scas
bound
hlt
rcll
out
mov
loopne
dec
stc
loopne
lods
mov
dec
pop
xchg
imul
andl
dec
std
das
mov
fdiv
adc
sub
ret
insb
pusha
and
loop
in
sti
xor
mov
cltd
xchg
mov
movsl
jge
addr16
push
pop
push
cmp
add
adc
jns
inc
pop
test
cwtl
adc
mov
dec
cmc
loopne
mov
scas
aas
scas
nop
aaa
xchg
jne
imul
xchg
sbb
and
dec
adc
and
je
jge
int
in
inc
shr
push
sbb
mov
nop
sbb
sub
test
xlat
pusha
into
scas
cmp
ja
sahf
cmp
sbb
jae
pop
mov
int
inc
pop
sbb
in
test
xor
sbb
idivl
jb
pop
es
mov
loopne
rcr
lea
push
xor
daa
and
cmp
jg
mov
lcall
cld
cmp
mov
xchg
stc
jg
inc
cmp
add
xchg
mov
dec
xchg
push
or
jb
lret
jg
inc
xchg
cwtl
aam
pop
xor
repz
pop
into
mov
adc
popf
enter
aad
dec
mov
adc
cmp
shr
test
jbe
fs
in
ret
orb
aaa
jg
repz
cs
mov
push
ss
push
jp
push
jne
or
pop
or
cmp
ja
adc
inc
cli
lcall
mov
cmp
scas
inc
bound
jle
or
loop
dec
lcall
paddsw
xchg
add
jno
dec
xchg
arpl
mov
add
lea
insl
insl
les
lds
mov
xchg
sbb
sub
subb
rcll
or
push
nop
xchg
testl
lcall
daa
sbb
push
lret
js
add
ljmp
mov
out
sbb
dec
or
push
mov
cs
shll
push
xchg
or
iret
and
cmp
sbb
stc
mov
ljmp
mov
adc
sbb
and
push
mov
xchg
fildl
mov
push
pop
add
and
lock
sbb
dec
push
inc
loop
fwait
orl
cmc
xchg
arpl
cmc
popa
jne
jp
test
jae
cmpsl
mov
sub
sbb
loopne
aad
out
dec
in
xchg
insl
arpl
sbb
stc
jl
dec
jmp
lods
inc
xchg
imul
pop
xlat
pop
jecxz
je
mov
aas
or
jnp
xlat
cmp
out
and
pop
stos
xor
cmp
dec
aas
ja
cltd
rcll
pop
hlt
mov
icebp
mov
cs
scas
mov
jp
leave
mov
cmpps
cmpsb
orb
iret
xor
mov
adc
adc
out
fisubrl
cwtl
mov
sub
xlat
cmp
scas
nop
fistps
sub
mov
or
sbb
push
leave
push
aam
cmp
pop
push
sub
push
dec
ds
xchg
mov
ret
xor
fucomip
insl
shl
adc
stos
icebp
lock
loopne
bswap
sbb
int
pushf
hlt
cmp
add
std
jg
jge
adc
jbe
fbstp
mov
daa
iret
jb
ret
fisubrl
mov
mov
push
arpl
pop
inc
in
popa
cmp
mov
inc
sbb
jl
mov
push
pop
xchg
adc
cltd
sub
or
aad
mov
pop
sarl
test
mov
out
roll
push
xor
inc
dec
cwtl
div
push
sub
psllq
lds
cmp
cli
pop
pop
xor
jmp
jl
mov
shll
movsl
mov
inc
sbbl
xor
dec
lret
xchg
out
aaa
scas
lea
inc
insb
rorb
dec
jecxz
sahf
sahf
xchg
jmp
lahf
movsl
shlb
push
push
adc
mov
addr16
aad
inc
fwait
stos
and
mov
cmc
cli
jg
icebp
mov
inc
into
xchg
jns
loope
xor
jecxz
mov
xor
fwait
inc
in
xchg
imul
mov
pop
mov
inc
push
sbbb
xchg
fstps
sti
cmpsl
xlat
test
andb
imul
push
stos
scas
mov
ljmp
and
orl
jo
xor
push
mov
std
xchg
test
mov
xchg
inc
aad
int3
jbe
lret
pop
cmpsb
mov
out
divl
aas
mov
mov
dec
cmpsb
je
sub
push
fdiv
movsl
push
push
fcmovu
shlb
jae
shlb
mov
mov
mov
push
pop
dec
xor
jnp
pop
dec
jbe
dec
pop
push
inc
jmp
pop
mov
in
test
jg
call
mov
adc
xor
mov
jo
ja
sbb
inc
jae
dec
mov
jle
mov
scas
cmpsb
jecxz
push
shr
sub
dec
adc
ljmp
out
data16
jne
insl
push
divb
insb
mov
aaa
insb
mov
loope
insb
push
je
mov
mov
push
rep
lods
out
push
xchg
in
repnz
test
sbb
outsb
mov
les
mov
pushf
dec
inc
rcrb
jo
cmpsl
repz
mov
out
dec
out
pop
test
jo
int3
xlat
pop
mov
mov
mov
outsl
fldl
out
xchg
dec
mov
sbb
shrl
hlt
mov
jb
rorl
test
adc
pop
mov
pusha
in
push
mov
and
stc
scas
inc
sbb
cmpsb
sbb
sbb
adc
cmc
out
je
mov
jl
mov
dec
insb
add
imul
bnd
xchg
fsubrs
daa
sub
push
jmp
pop
pop
or
or
or
inc
or
pop
and
inc
pop
jp
inc
jecxz
insl
inc
xchg
fldl
add
test
leave
int3
es
push
sbb
mov
push
andb
ret
mov
pop
jns
mov
mov
cmpsb
and
mov
pushf
cmp
andb
adc
xor
push
std
push
cmpsl
cmpsb
faddl
daa
mov
sbb
test
lcall
arpl
sbb
mov
jns
std
mov
cmpb
mov
movsb
popa
xor
pushf
push
ljmp
loop
push
pop
cmc
fwait
ljmpw
popf
add
aaa
mov
adcl
out
push
and
shlb
das
xchg
and
and
add
and
insl
jle
adc
xchg
fadds
push
lcall
dec
mul
inc
mov
pusha
push
loope
fistl
mov
mov
xlat
push
ds
add
push
lea
mov
cli
bound
cmpsl
loope
cmc
rcll
leave
lret
imul
or
xor
jo
xor
out
cs
rcr
pop
in
scas
jge
mul
jb
or
outsb
and
adc
xchg
sub
das
add
pop
mov
xchg
jno
xchg
dec
test
xchg
jge
ds
xchg
mov
cmp
jge
jmp
sub
xchg
ljmp
jbe
xchg
in
repz
ja
icebp
ljmp
and
xchg
mov
cwtl
xor
jge
icebp
lds
aad
add
fimuls
xchg
imul
pop
mov
cmp
cli
xlat
cmp
push
mov
inc
sti
imul
jecxz
ret
stos
movsb
lock
movsl
call
or
icebp
addr16
push
icebp
mov
addr16
adc
shlb
int
pop
mov
jge
inc
push
dec
add
scas
nop
push
arpl
mov
or
movb
and
cmp
loope
stos
aad
sub
lret
sub
mov
xchg
cmp
mov
dec
outsl
inc
loopne
outsb
sub
or
fidivs
push
push
or
xchg
xchg
xor
fsubr
adc
enter
insl
ret
jg
lea
or
xchg
mov
or
lret
incb
jle
insb
fmull
icebp
add
xchg
xchg
cwtl
das
and
mov
lahf
stos
add
jp
flds
xchg
fildll
test
inc
mov
jne
jle
jae
mov
pop
sub
std
inc
xchg
jbe
loope
mov
insb
dec
aaa
lock
pop
test
and
push
mov
insl
jle
push
sub
test
popa
pusha
mov
aas
das
pop
push
sahf
xchg
iret
stos
fidivrs
xchg
mov
cmpl
pop
in
scas
mov
ljmp
loop
js
and
pop
pop
pop
test
mov
or
mov
insl
cmpsl
test
xchg
test
aam
fwait
pop
add
mov
aad
popf
or
jns
push
or
sub
aas
inc
int
in
jg
mov
xor
add
hlt
add
andl
pusha
jmp
movsb
mov
testl
fisubl
xor
sahf
ja
daa
cmp
add
pushf
shll
push
add
push
jge
jns
insl
mov
pop
data16
fistps
mov
repz
sub
movsb
mov
jmp
pop
jae
mov
pusha
into
lcall
lahf
inc
mov
hlt
push
addr16
fs
mov
cmp
mov
out
and
scas
stos
add
sbb
aas
or
repnz
in
inc
nop
and
sub
push
pop
sub
std
mov
vandnps
and
test
neg
sbb
add
test
dec
push
push
fidivs
outsl
mov
mov
jecxz
enter
test
out
adc
mov
rorl
daa
leave
aad
adc
sbb
push
mov
mov
push
push
dec
pop
aaa
aas
imul
adc
jg
es
jmp
mov
adc
idiv
jge
pop
mov
aaa
and
test
pop
lds
lea
push
test
lea
rclb
cmp
rorl
adc
mov
nop
pop
std
out
scas
mov
sub
or
mov
push
movsl
lret
sti
jnp
hlt
inc
sbb
mov
xchg
cs
cs
test
cmp
into
fsubl
push
xlat
adc
jae
xchg
movsl
xchg
add
sahf
loope
pop
hlt
shll
push
stos
out
rcrl
inc
mov
sti
jno
push
pop
mov
adc
sub
sbb
xor
jb
sahf
cmp
arpl
push
jg
fsts
mov
mov
scas
aad
lret
std
imul
loope
sti
xor
add
dec
ret
popf
sbb
mov
pop
imul
fldenv
das
lret
cmp
scas
div
pop
and
sbb
dec
pusha
adc
fistl
mov
or
add
insl
mov
push
aam
inc
sbb
add
cld
jbe
out
or
jg
popf
pop
dec
xchg
lods
mov
ja
iret
jae
xchg
jbe
cmp
test
loope
mov
addl
pop
xlat
daa
fcompl
add
lcall
into
sbb
in
adc
jne
adc
cmp
adc
mov
cmp
mul
push
cmpsb
pop
out
adc
int
sub
dec
sub
rclb
mov
dec
and
inc
jg
fistl
pop
jl
lods
xchg
ret
push
pop
shl
and
fwait
xrstor
fcoml
pop
mov
arpl
cmpsb
data16
ss
mov
int3
mov
fstps
pop
dec
ljmp
adc
jbe
mov
loopne
jb
pop
stos
push
mov
mov
cmp
adc
and
and
out
xchg
dec
push
out
sbbb
jo
inc
sbb
fucomi
int3
loopne
mov
jle
pop
icebp
divl
in
repz
repnz
inc
adcb
pop
fs
fsubrl
in
dec
cmpsb
push
daa
xor
push
or
mov
push
push
insb
jbe
inc
push
or
sbb
xchg
ja
mov
mov
jg
mov
mov
mov
add
or
sbb
aad
mov
xor
ss
push
loopne
ffreep
push
push
push
movsb
int3
jns
insb
jg
pop
xchg
xchg
xor
xchg
adcb
mov
sbb
mov
cli
fdivs
cli
push
add
push
ljmp
aad
cltd
fcoms
inc
rorl
adc
mov
sti
mov
sbbb
hlt
pop
fwait
test
xchg
fcmovbe
adc
mov
or
scas
ja
adc
xor
mov
clc
repnz
pusha
inc
out
cmpsb
dec
xchg
mov
mov
pop
jne
pushf
lahf
int3
sbb
xor
mov
jno
mov
jne
lret
pop
pop
idivb
jg
stos
inc
mov
jmp
inc
lcall
fadds
repz
fs
xchg
pop
popf
jns
nop
mov
scas
cmc
scas
fbld
in
aam
movsl
sub
ss
dec
lahf
push
pushf
lret
cwtl
xor
cld
enter
js
pop
loopne
sbb
add
jns
adc
mov
lods
sbb
cmp
cli
push
loopne
pop
popl
mov
inc
push
stos
fiaddl
push
dec
push
imul
cmp
js
ret
inc
and
mov
and
mov
mov
mov
mov
aaa
xchg
jnp
gs
xchg
inc
cmp
cmpsl
pop
inc
and
cmp
popa
cli
xchg
loope
ror
mov
jle
jns
aad
in
fld
mov
push
and
mov
jg
mov
xor
push
xchg
pusha
or
lods
xor
cmc
lret
cs
into
inc
cmp
fnstcw
jecxz
shrb
dec
add
xlat
mov
repz
adc
stc
xchg
std
pop
mov
pop
sub
mov
jl
ficompl
sbb
adc
rclb
les
faddl
xchg
xlat
sub
imull
fists
pop
lret
daa
stos
mov
sub
mov
fdivl
mov
push
or
dec
push
inc
adc
xor
dec
ret
decl
loop
adc
xlat
mov
fnsave
adc
sbbl
cs
sbb
lahf
lock
jmp
pop
jne
push
push
shrb
sub
in
cmp
cmpsl
jne
mov
in
call
jns
movsl
add
pusha
ret
jp
sahf
clc
pushf
test
stos
notl
lods
xor
shlb
or
cld
insb
pop
dec
jns
int3
ljmp
adc
xor
pop
roll
push
cmpsl
iret
rorb
xor
les
mov
out
int3
pop
lahf
cltd
stos
lcall
mov
stc
push
mov
loope
fcomps
sbb
out
nop
mov
push
dec
lahf
cmp
repnz
lret
in
push
cs
sar
jnp
mov
int3
ret
inc
adc
inc
in
scas
in
xchg
push
cwtl
push
addb
dec
dec
fisttpl
andl
fld
mov
popa
inc
js
fnstenv
xchg
test
inc
push
fildl
cmp
js
popf
adc
inc
loop
push
sbb
push
lret
arpl
xchg
adc
fmuls
mov
mov
clc
hlt
xchg
xor
xor
daa
add
jne
sub
ja
sti
cld
in
mov
lret
or
dec
dec
mov
call
in
inc
rclb
sbb
rclb
pushf
fsubs
xchg
ror
mov
jmp
cwtl
mov
std
pop
sub
mov
lock
cmp
add
pushf
or
xchg
xor
sbb
cmpsb
frstor
xchg
call
inc
fsubl
pop
sub
loop
sar
in
mov
stos
xor
out
sub
pop
jo
out
push
push
pop
dec
inc
push
push
sbb
jno
lcall
pause
sbb
pop
cmpsl
xor
test
inc
jnp
xlat
xchg
mov
fisubs
lods
ficompl
mov
test
ret
sbb
insb
pop
ja
idivb
and
call
fldt
scas
cmpb
out
or
addr16
xor
jb
cmpsl
fmull
mov
in
cmp
adc
popa
sub
jnp
add
lods
cmp
mov
mov
loop
add
xor
gs
inc
push
filds
movsb
sub
gs
push
mov
mov
fdivs
pop
dec
mov
push
jnp
xor
mov
cmpsl
mov
push
fldt
pop
xchg
push
pop
sbb
add
iret
jb
dec
adc
fisubl
mov
test
mov
sub
xor
xchg
dec
fwait
cli
insb
fnsave
mov
xchg
sbb
aam
insb
and
and
jns
stc
fistl
in
or
das
cmp
je
mov
outsl
scas
adc
out
stos
sub
data16
pop
mov
loope
das
mov
mov
faddp
inc
aad
xchg
sub
mov
pop
mov
sahf
inc
fucomip
xchg
pop
shrb
cmp
sbb
push
xchg
jp
mov
dec
push
mov
push
jne
shll
fildl
stos
hlt
bound
and
dec
xchg
inc
ja
test
sub
enter
mov
sub
or
mov
push
aaa
es
mov
push
jmp
push
cld
fimuls
dec
add
sti
jecxz
mov
lea
je
adc
in
daa
and
push
fs
jle
push
push
cmpsl
nop
fmul
jae
ljmp
data16
les
lods
lea
imul
sub
mov
jne
mov
jg
pop
divl
outsb
fstps
push
and
leave
into
scas
lret
pop
push
mov
arpl
sbb
mov
mov
sbb
rcrb
xchg
or
rclb
add
cli
mov
push
xor
jge
jg
lret
loope
ret
popf
aaa
loopne
jno
loop
mov
pop
push
ret
dec
scas
sbb
subl
negl
arpl
push
jl
pushf
cmp
movsl
mov
add
ret
gs
je
in
pop
inc
lretw
fucomi
mov
lods
repz
in
push
call
inc
mov
ror
push
scas
sbb
dec
cmp
dec
mov
or
sbb
loopne
hlt
pop
or
mov
imulb
test
lea
repz
in
loop
pop
out
jnp
dec
cmp
lahf
inc
xchg
int3
jle
aas
jmp
pushaw
aas
jae
mov
mov
xor
popl
dec
add
push
or
sbb
rolb
dec
cmp
es
mov
lods
clc
xchg
ss
call
nop
insb
jnp
dec
xchg
mov
stc
inc
imul
roll
jle
sbb
cmp
sbb
jmp
fistpll
sbb
xor
sub
adc
push
sbb
repnz
xchg
ds
sub
adc
adc
push
xchg
fidivs
inc
dec
or
and
enter
ljmp
sub
aaa
mov
cmp
in
test
mov
sbb
jmp
test
adc
imul
dec
jne
and
rolb
enter
adc
xor
fildll
add
push
xchg
lret
xchg
pop
pop
addr16
out
xor
mov
data16
pop
mov
stc
mov
pop
xor
pushf
sbb
cmp
inc
test
ret
stos
xor
cli
mov
jmp
jge
movsl
ud1
adc
push
pop
or
mov
adc
xor
dec
and
inc
jg
and
cwtl
clc
ss
nop
mov
rcll
cmc
mov
mov
sahf
push
lds
pop
cmc
mov
push
cmp
out
arpl
out
mov
inc
or
push
adcl
mov
neg
sbbl
dec
adc
pop
pop
shll
sub
ss
mul
scas
fidivl
into
fsubrl
cmp
jp
and
pop
stc
aad
lahf
fcmovne
add
mov
aas
inc
loope
cmpb
je
cmpsl
add
jne
ds
test
js
mov
push
sbb
loop
jo
xchg
dec
cmc
mov
int
inc
dec
xor
rolb
and
jg
fiadds
lcall
testl
jle
pusha
mov
sub
dec
imul
inc
leave
inc
xchg
cli
and
hlt
call
jns
mov
mov
addr16
test
jmp
scas
add
mov
mov
jbe
ljmp
inc
decb
push
sub
sub
scas
mov
iret
in
in
icebp
mov
pop
mov
jns
dec
pop
sbb
int
mov
out
or
jno
mov
cwtl
xor
mov
xchg
lret
cmpxchg
inc
jno
cmp
adc
repz
push
pop
imul
lcall
pop
mov
inc
cmp
xchg
inc
stos
mov
pop
push
cmp
and
shrl
repnz
mov
lock
pusha
xchg
add
dec
push
enter
daa
xchg
outsl
sub
popa
mul
jmp
ljmp
sbb
inc
enter
xor
jae
rcll
mov
push
sbb
leave
xadd
jmp
aad
xorl
jo
ret
add
inc
mov
sbb
call
bound
push
push
push
sbb
add
add
bound
dec
mov
dec
shll
push
dec
insb
push
outsl
icebp
jno
fxch
dec
sub
pop
rol
fisubrs
push
rclb
inc
imul
or
bound
out
addr16
push
mov
into
call
stc
pop
push
int3
mov
dec
lock
out
pop
aaa
xor
imul
cmpsl
in
arpl
je
pop
mov
outsb
aas
sub
add
out
sbb
shll
and
shrl
mov
add
inc
es
and
out
mov
sbb
out
outsl
sbb
dec
std
mov
jo
movsb
mov
fisubrl
add
lcall
rol
mov
xchg
sbb
divb
cmpsl
inc
enter
push
xchg
xchg
cld
popl
mov
mov
pop
sbb
mov
mov
mov
jg
dec
push
lods
les
push
js
mov
movsl
sti
jb
enter
mov
sub
mov
pop
xchg
jg
shlb
or
cmpsl
xchg
pop
cmp
les
fwait
or
adc
scas
or
cmpsb
pop
xor
jle
jb
pop
ret
out
out
das
add
ja
leave
inc
dec
or
jnp
lret
scas
sub
mov
push
and
push
push
cli
cltd
stos
pop
xchg
fsubs
xchg
jno
out
jo
push
or
shlb
fiadds
sub
cmpsl
aam
lahf
lahf
cmp
xor
or
xor
int
xor
movsl
mov
dec
mov
pushf
cmp
mov
pop
mov
inc
pop
xor
mov
sbb
sti
xchg
movsb
xchg
cmpb
adc
sbb
into
xchg
lds
mov
das
inc
xchg
push
pop
and
je
in
cmp
scas
cmc
and
int
enter
das
stos
jns
sahf
mov
sub
xor
xor
fidivl
nop
stos
aam
lcall
add
fstps
jecxz
push
sub
enter
dec
sbb
lds
push
sahf
and
push
push
mov
xchg
lret
adc
mov
fcoms
sbb
jne
add
pusha
jno
ds
les
jnp
pop
lret
sub
test
aam
fdivrl
jnp
stc
inc
loopne
mov
or
push
lods
subl
inc
pop
lods
sbb
pop
adc
out
pusha
js
xor
incl
push
arpl
mov
je
lock
repz
mov
int
jp
and
xor
add
or
mov
xlat
cltd
pop
xor
sahf
add
mov
xor
xor
lret
sub
mov
inc
jae
mov
int
dec
mov
icebp
lret
cli
sbb
mov
push
mov
iret
or
push
pusha
aas
in
push
test
inc
cmp
shrl
inc
clc
je
mov
das
addr16
movb
cwtl
sbb
sbb
xchg
add
inc
out
stos
cltd
dec
test
push
adc
aad
push
push
cltd
dec
or
and
into
adc
mov
outsb
jo
or
test
lods
in
jbe
xor
sbb
mov
sbb
int3
and
scas
xchg
pop
or
out
pusha
xor
mov
fldt
dec
add
mov
jmp
scas
cs
push
insb
outsl
cmp
sbb
mov
mov
adcb
jg
fsubr
adc
pop
push
mov
pop
or
arpl
jp
mov
jecxz
mov
aam
roll
pop
sub
insl
xchg
pop
lock
mov
jae
in
push
aas
push
and
call
das
cwtl
outsl
add
mov
adc
orl
and
xchg
add
sbb
mov
jbe
inc
outsl
add
xchg
lcall
push
clc
pop
and
or
push
test
leave
popa
sbb
sub
imul
mov
pop
ljmp
js
push
push
lcall
jae
cmp
test
lods
fwait
lods
out
xlat
stos
pop
mov
push
cmpsl
xor
fstps
push
pushf
jae,pn
or
mov
popf
push
fcom
fstpl
add
cmp
sbb
jbe
mov
add
test
data16
std
cmc
cmp
leave
call
lret
inc
in
sub
push
mov
push
test
or
aad
sub
jns
push
sub
cld
int
and
imul
or
adcb
inc
pop
dec
push
jge
push
test
mov
mov
notl
cltd
lock
ds
mov
adc
loope
sbb
xor
call
sbb
sbb
cmp
xor
es
xchg
mov
stos
cltd
or
pushf
js
sbb
mov
lret
jge
cmc
or
lahf
adc
and
shl
mov
jle
cmp
repnz
xchg
aaa
dec
xor
mov
mov
sarb
orl
sbb
sbb
dec
pop
popa
jg
pop
or
repnz
sbbb
push
imul
icebp
sub
or
loopne
mov
xchg
xor
addr16
push
jns
xorl
cmp
mov
mov
addr16
jle
and
das
mov
push
jns
out
mov
rolb
push
lds
and
cltd
push
cmp
cwtl
xchg
cmpsb
jns
sub
loop
ja
mov
out
es
mov
aam
fmul
stc
mov
jns
sub
sbb
je
cld
jecxz
pop
add
mov
std
loope
cmp
sub
xor
xchg
inc
and
push
test
sub
or
fcomps
fsubrl
mov
enter
push
add
cmp
sub
push
push
jge
lods
push
pop
fdivrs
scas
dec
sub
ret
sbb
out
mov
mov
fldt
or
push
cmp
pop
les
xchg
in
out
jae
push
adc
icebp
pop
das
push
and
jecxz
mov
test
xor
mov
lods
push
cmpsl
cmp
adc
xlat
aam
lods
fst
repnz
aad
cli
test
push
pop
cmp
mov
aam
adc
mov
cmpsb
sti
data16
stos
cld
les
mulb
add
cmpsb
sub
dec
jmp
cld
and
push
sahf
pop
adcb
sbb
jmp
and
push
bound
sub
xor
stos
xchg
push
pop
sbb
jge
push
in
sbb
mov
push
jle
and
movsb
int3
notb
addr16
lret
movsl
push
adc
inc
repz
cmpsb
mov
add
adc
dec
xor
vpsubw
imul
mov
enter
lret
gs
jge
cmpb
mov
nop
push
fistpll
ret
add
paddusw
popa
push
fs
stos
daa
push
out
dec
cmp
mov
lret
sub
adcl
hlt
or
lock
cld
mov
negl
lcall
xor
sbb
xchg
hlt
mov
js
std
or
rol
jae
mov
psraw
mov
adc
mov
cwtl
mov
fcomip
shrl
in
fwait
ret
sub
cmpsl
cld
jo
cld
shll
shll
ficomps
sub
aad
inc
cmp
and
dec
fdivp
in
sub
imul
push
adc
pop
movsl
out
jne
fiadds
and
into
adc
stos
xchg
push
stos
jns
mov
push
mov
xchg
pop
or
stc
outsl
bound
sbbb
xchg
jno
lods
jbe
sti
imul
stos
sub
jnp
or
xor
aam
cld
pop
jge
loop
test
mov
fiaddl
pop
pusha
and
inc
push
adc
iret
or
pop
dec
scas
push
xchg
test
ret
mov
jp
ret
mov
insl
inc
mov
mov
add
fldl
mov
es
cmp
mov
roll
pop
inc
xor
bound
jnp
icebp
jb
xor
xor
xchg
dec
addl
jbe
scas
daa
sarl
out
pop
xor
xor
jae
jle
dec
sbb
xor
std
push
enter
add
sub
cltd
unpckhps
repz
fmull
mov
push
xor
xchg
cmpl
mov
clc
cwtl
and
inc
mov
mov
inc
test
inc
xorb
das
lcall
jp
movsb
push
jnp
ret
inc
pop
push
jbe
inc
mov
add
mov
xchg
mov
add
push
xor
nop
jo
aaa
and
or
jmp
and
adc
gs
arpl
aaa
cmp
sahf
lcall
jmp
out
add
inc
enter
fs
xor
sbb
lods
push
mov
push
and
or
sub
lahf
stos
lods
add
pop
and
test
fcoml
test
inc
sahf
inc
mov
ss
aas
mov
pusha
lea
xchg
scas
in
cmp
push
inc
insl
adc
fildll
or
add
mov
clc
daa
sbb
inc
or
inc
mov
sti
lods
add
and
pop
test
mov
xchg
lods
mov
sub
sbbb
pop
enter
xor
mov
fdivrs
out
dec
ret
dec
cmpsl
daa
ja
rolb
add
xchg
ret
stos
lret
push
repnz
into
sarb
sahf
and
dec
rdtsc
movsb
push
mov
in
mov
pop
and
mov
dec
enter
mov
lods
inc
pop
incl
lds
imul
push
and
xor
push
jl
cmc
add
outsl
push
rcll
jmp
cli
fmuls
lods
lods
pop
add
fsubrs
js
shll
cmp
mov
lret
xchg
mov
and
filds
or
comiss
ljmp
mov
push
cmp
jle
fsubrl
sub
pop
addr16
insb
pusha
icebp
mov
pop
sub
cli
or
std
call
xchg
jnp
mov
icebp
icebp
dec
sub
int
jb
cwtl
push
sbb
jae
data16
xor
push
pop
xchg
pop
pop
or
nop
xor
mov
enter
mov
add
repnz
les
mov
pushl
cmp
insb
inc
mov
inc
repnz
add
xor
push
add
push
xor
jne
inc
dec
mov
or
sti
mov
icebp
adc
in
psubusb
ret
and
stos
cld
mulb
sbb
adc
lods
shlb
push
out
or
fwait
test
out
lods
int
inc
les
in
test
fwait
mov
scas
in
out
into
pop
jae
push
or
and
cmp
pop
pop
aam
jb
cmp
and
push
cmpsb
jge
cmp
loopne
pusha
adcl
aam
xorb
stc
fisubrs
xor
int
movups
pusha
sub
push
das
mov
dec
out
inc
scas
mov
or
popa
sub
xlat
push
dec
sub
mov
mov
test
adc
and
int3
and
ret
xchg
loope
sub
push
inc
pushf
inc
jns
and
jl
lret
loopne
mov
es
pop
xorb
sbbl
mov
movsl
pcmpgtw
pop
add
and
pop
loopne
dec
out
add
jg
lcall
mov
adc
test
push
xchg
inc
add
pop
int3
mov
cmc
or
xlat
mov
aas
adc
aad
dec
pop
inc
push
mov
inc
scas
sbb
imul
jns
push
out
pop
jnp
add
cmp
repz
fcmovbe
mov
cmp
cltd
dec
sbb
sbb
lds
js
sub
addl
stc
loope
adc
mov
dec
repz
mov
pop
jle
adc
repz
pop
imul
enter
dec
xchg
shll
stc
cmp
out
sbbl
test
sub
mov
stos
inc
mov
xchg
sahf
loopne
popa
dec
cmp
and
into
mov
fwait
aad
int
mov
lahf
xchg
sbb
push
or
xor
sarb
das
dec
inc
sub
loope
call
jge
or
or
lods
aas
jecxz
sbb
or
push
incl
sti
aad
sbb
fstpl
cmp
jle
mov
mov
in
lds
scas
rol
insb
pushf
lods
inc
or
jp
int3
jb
insb
sbb
jno
mov
aaa
adc
xchg
movsb
mov
sbb
es
sub
pushf
mov
xlat
add
adc
pop
cmc
outsl
jno
fs
mov
jo
add
mov
mov
inc
fidivs
mov
push
gs
in
sbb
je
mov
sub
pop
es
sub
and
add
mov
and
sub
int3
popf
push
fcomp
xchg
cwtl
mov
sub
fnstcw
shlb
pop
jb
insl
les
out
clc
rolb
inc
ret
testb
mov
mov
testl
adc
bound
push
ljmp
inc
mov
pcmpgtw
mov
std
push
mov
push
inc
ds
sub
cmp
sarb
dec
dec
or
mov
sbb
addb
xor
pushf
or
imul
sub
cmp
add
std
repnz
cmp
xchg
gs
gs
fnstsw
test
movsl
mov
jo
outsl
insl
jl
push
fsubrl
cwtl
pop
rolb
pop
push
or
subb
dec
rcll
add
jnp
mov
and
call
pop
jl
cmp
mov
sti
lods
subb
push
fisubl
xchg
iret
jae
arpl
cmp
ret
rcrb
mov
dec
pushf
xchg
add
or
lock
outsl
push
shlb
push
je
test
cmp
mov
test
daa
lods
hlt
pop
gs
add
int3
xchg
pop
xor
pop
insb
jecxz
push
roll
pop
jge
test
scas
fcmovnu
sub
jae
pop
mov
bound
sbb
inc
mov
cld
pop
or
outsb
js
call
lahf
fldz
inc
xchg
mov
aas
seto
push
and
cli
mov
repz
insb
mov
call
lea
adc
sub
jg
mov
fimull
push
dec
cld
mov
leave
mov
jne
stc
lret
dec
inc
push
lock
xor
pop
or
jmp
sub
dec
pop
insl
incl
pusha
cld
mov
repnz
jae
js
pusha
ljmp
add
int
push
sub
out
bound
sahf
mov
add
lods
vmwrite
mov
pop
jge
add
daa
xchg
stos
lcall
ret
mov
repnz
pop
push
je
lods
mov
std
test
dec
pop
fldenv
jnp
jp
mov
mov
repnz
into
pop
or
or
mov
divb
repz
xchg
jae
push
and
xchg
stc
das
xor
xchg
out
xchg
mov
pop
imul
ret
stc
xor
dec
pop
std
jmp
xchg
jbe
in
inc
in
loop
cmp
push
xlat
repz
sbb
xor
jge
cmp
pop
bound
add
mov
stos
push
test
imul
mov
fs
adc
call
std
jno
and
cld
call
mov
aaa
fmulp
fldenv
jge
push
add
hlt
add
rorb
pop
ja
call
xor
cmp
inc
incb
and
cmp
inc
dec
out
ja
inc
xor
push
inc
and
test
insl
icebp
jp
xchg
and
lret
sbb
cmpsb
or
in
adc
in
mov
mov
sbb
stos
cmp
xor
cmp
and
push
sahf
es
insl
in
dec
outsl
push
xchg
cmp
lcall
pushf
lret
add
not
call
pop
mov
lods
push
adc
cmp
lahf
lcall
negl
sbb
inc
pop
addb
shll
push
inc
mov
orb
pop
stos
adc
adcl
test
fcmovne
out
xor
incb
int
idivb
push
mov
test
push
mov
dec
lock
jge
add
pop
sub
cmp
dec
xor
testb
jmp
loop
pop
adc
movsb
andb
xchg
sub
xchg
mov
idivb
ds
and
xchg
ljmp
movsl
cmc
sbbb
mov
xor
pushl
cmp
es
jecxz
jno
xchg
or
pop
aam
inc
and
ljmp
aam
cld
cli
lods
push
dec
fadd
mov
jns
aas
xchg
jae
mov
jbe
pop
add
insl
mov
and
xchg
xchg
aas
fsts
cltd
adc
cmp
fcomip
sbbb
sbb
or
shll
dec
dec
mov
cmp
jnp
mov
jle
inc
enter
ljmp
push
scas
das
lds
icebp
mov
fdivl
out
push
jns
and
call
sbb
ljmp
adc
mov
pop
pushf
test
pop
ret
pop
or
mov
dec
nop
mov
cmp
jle
pop
mov
dec
mov
sbb
addr16
sub
mov
jecxz
test
ja
dec
mov
xorps
ss
dec
popf
icebp
fistps
lcall
jbe
lret
xor
jo
add
and
mov
inc
pop
or
cwtl
ja
lahf
pop
mov
jge
mov
outsb
xchg
sub
push
or
jmp
ja,pn
cmp
aaa
mov
in
xchg
data16
push
orb
sahf
mov
or
cwtl
test
cmp
addr16
pop
pop
inc
inc
sbb
in
loopne
and
mov
cmpb
jae
and
pusha
cmp
movsb
cmpsb
or
sbb
pop
mov
nop
pop
xchg
mov
clc
sub
inc
stos
or
pop
push
cmc
les
or
sarl
push
dec
test
aaa
mov
pop
insb
jb
push
push
fsubs
dec
addr16
xchg
pusha
in
mov
in
fsts
mov
popa
inc
cmp
sbb
pop
push
or
dec
les
mov
mov
cmp
pop
lahf
xor
shlb
in
add
mov
mov
cmp
test
lods
jmp
and
lret
dec
rcll
out
sbb
xor
fs
xchg
adc
fsubrs
fdivs
lods
out
xchg
shlb
cmc
dec
mov
and
pop
jnp
inc
and
push
jbe
loope
lods
lahf
fisttpl
inc
outsb
xor
and
gs
pop
and
mov
daa
in
jbe
test
lret
cli
popf
sub
insb
insb
pop
adc
fcoms
movsb
pushf
ret
popf
ret
mov
push
lea
rcll
repz
mov
test
sahf
gs
fisubl
bound
fwait
in
cld
inc
push
push
aam
jle
ss
xchg
aam
out
pushf
xor
imul
jmp
push
pushf
sahf
adc
mov
pop
mov
cltd
push
mov
mov
repz
jge
sbb
ja
mov
dec
out
stc
enter
cmpsb
mov
cs
pop
adc
sub
cld
adc
test
and
dec
and
subl
lahf
pop
icebp
ss
sbb
or
mov
je
cld
and
vmread
pop
addr16
stos
jmp
in
xor
test
fs
xor
cmc
pop
push
jle
sahf
repz
jl
pop
xor
pusha
pop
mov
jmp
in
adc
jecxz
pop
lcall
dec
jecxz
ljmp
mov
jmp
bound
imul
fdivr
call
adc
inc
add
out
movsb
sub
mov
enter
fimuls
jno
push
or
and
inc
leave
xchg
sub
or
xchg
mov
mov
dec
loop
imul
or
imul
lods
add
fildl
daa
scas
push
mov
repnz
shlb
test
mov
out
insb
rolb
in
inc
xor
adc
push
add
mov
sub
xchg
js
rcrb
xor
adc
fsubrl
adc
xchg
dec
jne
in
mov
fwait
lock
imulb
mov
push
lock
scas
inc
mov
lds
push
fldt
adc
call
pop
dec
mov
ss
sarb
scas
adc
sbb
dec
dec
pop
dec
loope
out
insl
push
daa
xor
fildll
add
sti
subl
push
mov
mov
stos
sbb
cmc
aaa
mov
or
js
jno
test
xchg
mov
add
pop
icebp
cmc
inc
jmp
rol
mov
xchg
test
cmpsb
mov
add
lcall
ja
xor
dec
in
aas
das
dec
inc
and
pop
jp
cmp
sbb
adc
leave
pop
pop
popa
lods
xchg
mov
or
add
ret
jne
lret
aam
or
dec
outsl
jb
loope
sti
xor
outsl
jge
cmp
adc
clc
sbb
or
add
pop
js
cwtl
push
push
lods
jne
mov
repnz
sub
lock
pop
push
inc
in
fdivl
sbb
cwtl
das
mov
sbb
cmp
or
pop
lea
fiadds
jae
jmp
bound
fidivrs
sarb
rcr
sbb
jmp
je
jo
test
mov
gs
scas
dec
pop
popf
hlt
inc
jl
leave
jbe
inc
aas
mov
sub
sub
shll
jno
xchg
cmp
or
or
pmaxsw
add
js
std
addr16
mov
fxch
lahf
pop
mov
adc
jl
add
insb
mov
and
ret
cmp
into
or
dec
lcall
movsb
add
aam
mov
lret
pop
dec
mov
test
test
push
pusha
xchg
xchg
or
les
ljmp
mov
mov
push
inc
push
mov
pushf
ret
ficomps
repnz
dec
outsl
rcll
or
mov
inc
mov
dec
mov
fwait
push
popf
stc
icebp
push
flds
stos
imulb
jge
and
pop
mov
mov
sub
push
push
sbb
jle
insl
mov
fiaddl
cmpsl
int3
sub
xor
test
add
sub
pop
lock
sbb
out
mov
xor
out
mov
mov
leave
frstor
outsl
inc
jg
push
stc
pop
les
cld
outsb
lahf
nop
xchg
and
cld
dec
sub
shlb
fucomp
insb
rclb
pop
sub
pop
cmpsb
sbb
out
outsb
and
fsub
pop
inc
pop
ret
mov
cltd
mov
pusha
in
pop
lock
mov
cmp
fs
push
scas
mov
gs
jmp
or
xchg
adc
stc
sbb
dec
fstps
xor
cmp
arpl
aaa
aad
test
pop
sub
aas
mov
xlat
sahf
loopne
mov
xor
into
jae
push
pop
push
pop
xor
mov
fisttpl
or
outsl
and
imul
xchg
push
cmp
adc
pop
xor
hlt
ret
test
les
dec
dec
mov
lcall
and
popa
in
xor
push
hlt
cmc
and
sar
aam
xchg
dec
test
or
movsb
mov
xor
xor
add
and
pop
fisttpl
rcl
sti
xchg
dec
lods
push
jne
cmp
mov
mov
mov
jbe
js
je
ret
inc
mov
add
push
push
push
nop
sub
dec
pop
fistpll
or
cmpsb
dec
dec
push
push
mov
jne
jmp
push
inc
call
mov
lods
outsl
pop
sti
out
push
fisttps
and
inc
out
int3
xlat
xor
adc
insl
sbb
fsubrs
push
pop
sarb
pop
idivl
add
imul
push
fcmovne
ret
rcl
add
sbb
das
sbb
sbb
stos
cmc
les
jo
xlat
xor
mov
or
inc
aad
ret
arpl
dec
cmpsb
mov
sub
stc
sub
mov
shrl
lahf
cmp
add
sub
sahf
sub
mov
pushf
sbb
sbb
rclb
mov
pop
sbb
int
cs
int3
fstl
mov
sub
mov
rcrl
sbb
or
iret
pop
dec
sub
dec
push
pushf
push
scas
mov
xchg
xor
mov
into
xchg
dec
inc
out
mov
mov
xchg
mov
test
push
dec
cmp
push
lcall
lock
sbb
push
les
pop
sbb
lret
xlat
inc
loop
enter
and
xchg
imul
add
mov
enter
mov
out
push
in
add
xchg
jl
add
cmp
adc
pop
adc
sahf
xor
adc
mov
or
jae
dec
shl
jne
bound
cli
jp
xchg
insl
loope
pop
lods
in
or
mov
mov
cld
addr16
sbb
jne
iret
scas
pop
or
bound
test
nop
rcll
not
add
sbb
jb
shll
mov
dec
mov
leave
dec
pop
xor
test
aaa
adc
push
fbld
int3
dec
and
iret
push
cmp
aas
cwtl
pop
pop
pop
add
aaa
add
adc
mov
cmp
cmp
movsl
push
pusha
mov
fidivrs
xor
outsb
movsb
lods
mov
test
std
clc
xchg
cld
inc
or
fucomp
cwtl
cmpsl
jo
call
iret
jge
cwtl
xchg
pop
shlb
ja
xchg
xchg
xor
push
fnstenv
ss
sbb
xchg
cmp
pop
insb
and
out
jnp
mov
jecxz
cwtl
sub
inc
movsb
cmp
inc
mov
add
mov
loop
loope
inc
mov
jns
out
push
mov
pop
arpl
jae
lret
inc
mov
push
daa
popa
enter
mov
notl
mov
push
icebp
inc
push
lret
aam
inc
or
and
fs
xchg
inc
cmpsb
ret
adc
insl
inc
in
mov
sub
ja
inc
iret
ds
int
mov
inc
pop
mov
jle
jge
mov
and
scas
xor
sti
jl
mov
sbb
xor
iret
jge
cmova
or
stc
scas
lret
aad
ljmp
push
sbb
aad
sub
pop
std
popf
out
adc
mov
arpl
mov
mov
imul
in
sub
push
arpl
mov
mov
xlat
loopne
scas
in
push
int3
jl
xor
mov
add
aas
mov
jno
xor
jmp
inc
icebp
gs
cmp
mov
mov
xor
mov
leave
sbb
not
insb
sbb
dec
outsb
sub
fbstp
xor
pushf
cs
jle
jbe
enter
test
jnp
test
roll
dec
push
rcrb
mov
mov
jae
and
push
mov
addb
xor
iret
jns
cmp
push
and
cltd
popa
mov
inc
or
cmp
test
pop
aas
push
push
lock
inc
lret
in
inc
scas
add
cmp
jecxz
xor
and
ljmp
sbb
mov
mov
add
imul
mov
jb
push
xchg
ret
mov
mov
insl
mov
xor
cmp
or
icebp
pop
negb
test
cmpsb
movsl
and
mov
jmp
mov
bound
test
jb
lret
inc
or
sub
mov
out
cmp
push
mov
jne
rorb
adc
jp
imul
or
imul
sbb
leave
test
out
inc
mov
push
xchg
and
in
cmp
enter
cmp
jae
test
rorl
jp
mov
pusha
psubd
loop
cld
add
popf
imul
add
fstpl
mov
in
inc
push
rcrb
dec
addl
mov
pusha
push
daa
mov
cmp
scas
jmp
lock
loopne
xchg
xchg
imul
xorb
or
and
mov
lock
loop
inc
pop
ret
jp
out
jno
cli
sub
fnstcw
dec
adc
xchg
push
mov
xchg
fadd
or
mov
inc
test
adc
push
stos
mov
lods
xor
and
mov
xor
lock
data16
and
sub
pop
pop
xchg
das
cmpsb
insb
loopne
pop
lds
mov
inc
fsubrs
pop
add
sbb
xchg
inc
jae
push
push
xchg
sub
and
test
push
mov
dec
movsb
dec
or
neg
es
rcll
scas
mov
dec
fistpll
inc
mov
sbb
mov
inc
fbld
movsl
sub
aam
jbe
dec
xor
cmpsb
ljmp
push
sbb
imulb
icebp
mov
mov
popa
sbb
je
es
push
inc
or
neg
inc
lret
dec
pop
lea
or
je
fists
add
push
jge
mov
sbb
mov
jmp
call
dec
cmpsl
fwait
xchg
push
push
rorl
imul
jmp
insl
imul
insl
and
lods
xor
push
push
imul
xchg
sbb
das
cmp
sti
insb
ljmp
add
inc
lahf
mull
mul
xor
negb
pop
outsb
shll
in
hlt
scas
insb
or
cld
mov
mov
cld
adc
xchg
push
lea
in
out
insl
xor
gs
mov
and
sub
push
jle
lahf
aas
clc
fistl
dec
pop
jno
push
stos
out
xchg
adc
lahf
pop
fdivr
xchg
push
cmp
or
lret
in
push
pop
mov
frstor
gs
mov
jecxz
stos
lcall
cmp
xchg
jne
add
jns
scas
cltd
lods
pusha
xchg
stos
xchg
adc
stos
mov
xchg
int3
sbb
cmp
jp
fistpll
pop
test
das
aaa
cmpsl
mov
jge
or
xchg
call
lret
popf
jg
sbb
mov
or
and
adc
fisttpll
cmpsb
sbb
dec
ds
lock
sarl
pop
and
fs
iret
add
jne
xchg
outsl
aaa
inc
lds
inc
mov
testl
js
cli
pop
cmp
out
pop
xchg
mov
pushf
int
ds
imul
sub
mov
ja
mov
mov
xchg
mov
orl
dec
fs
or
loopne
fucomi
leave
sti
adc
cmpsb
std
icebp
fiaddl
mov
and
sbb
push
stc
int3
paddd
xchg
xchg
sbb
adc
lcall
cmp
call
shll
pop
xor
push
fdivrs
lock
inc
push
xchg
mov
lret
adc
pop
shl
push
dec
push
jmp
mov
shlb
xor
cmc
rclb
loopne
aad
sub
call
xor
cmp
sbb
xchg
pop
jge
aas
int3
push
lahf
push
mov
jbe
popa
stos
cltd
je
aas
push
mov
lock
jno
adc
fs
xchg
xchg
scas
aam
jge
decl
ljmp
in
fists
ljmp
sub
fwait
sbb
mov
cmp
daa
outsl
jmp
loop
stc
xor
addr16
les
mov
fisttpl
int
outsl
push
dec
dec
fisttps
adc
subl
daa
pop
into
ret
movl
ficoms
out
add
add
sbb
pop
sbb
pop
in
cltd
adc
jge
nop
pop
notl
leave
and
sub
addl
fwait
js
xchg
xchg
and
xchg
mov
loop
iret
dec
in
arpl
imul
rolb
xchg
loopne
xchg
add
and
jecxz
pusha
jne
push
push
adc
ja
add
imul
inc
mov
mov
mov
jg
sub
fistps
xor
dec
lods
inc
adc
mov
rcll
xor
mov
pop
xchg
add
and
pop
mov
mov
jecxz
addr16
test
and
cmp
icebp
cmpsb
mov
jg
sbb
add
mov
popl
inc
cs
jmp
bound
sub
repz
sti
aas
xchg
hlt
nop
pop
xchg
repz
and
popa
adc
in
mov
jno
jmp
aas
icebp
mov
sub
aam
and
mov
loop
inc
iret
mov
test
or
add
iretw
test
and
adc
push
mov
lahf
jecxz
fidivs
mov
outsb
mov
mov
adc
decb
mov
out
adc
out
repz
or
jge
js
repz
xlat
in
sub
jp
iret
sub
shrb
fidivs
fwait
cmpb
test
pop
stos
xor
adc
mov
cltd
mov
push
xchg
out
cmp
aam
sbb
push
mov
rol
sub
stos
sub
mov
call
std
pushf
push
xor
adc
into
les
cmc
enter
mov
cmpsb
jmp
jmp
test
sbb
pushf
mov
out
test
clc
les
xchg
mov
je
add
adc
aas
jl
and
sbb
orb
dec
decl
inc
in
stos
aad
push
and
cmp
icebp
or
xor
insl
adc
movsl
dec
inc
cmp
jecxz
cltd
js
adc
fwait
loop
hlt
push
dec
hlt
mov
sub
pop
dec
cmc
and
xchg
cli
xor
add
mov
or
mov
xchg
addr16
xchg
dec
fdivs
out
popf
cmp
mov
aaa
enter
fstpl
mov
fs
lahf
rcrb
inc
ljmp
sbb
or
scas
and
hlt
imul
mov
cmp
out
mov
out
mov
sub
cmp
pusha
cmpsl
push
imul
sahf
adc
mov
inc
das
popf
adc
xchg
insl
std
popa
aaa
cmc
mov
imul
ja
lahf
mov
push
imul
sbb
jmp
inc
inc
loop
pop
pop
ds
mov
adc
test
add
pop
stos
push
aas
mov
xor
lods
push
out
sbb
and
dec
push
pop
mov
loop
lods
repnz
sub
push
gs
fldl
pop
pop
sub
xor
pop
cld
int
and
shlb
pop
and
mov
cld
adc
repnz
rcrb
fs
int
jge
mov
cmp
popa
outsb
xor
in
lcall
adc
xlat
jbe
xchg
jmp
loopne
js
stos
mov
push
repnz
inc
cltd
int
push
mov
jl
scas
cmp
rcr
lods
movsl
xor
adc
cli
xchg
jge
movsb
shrb
push
xor
dec
push
cs
lock
pop
sbb
shrb
in
lods
insb
pop
xor
aam
clc
outsb
cwtl
arpl
icebp
fiaddl
xchg
popf
add
movsb
xor
inc
je
movl
cmp
nop
mov
jmp
xchg
nop
insl
fiadds
jp
and
push
and
hlt
mov
sub
scas
iret
sub
push
and
jno
insb
inc
xchg
sub
mov
pushf
int3
fisttpl
lret
addb
jge
ror
cld
add
inc
stc
in
add
jnp
in
iret
sub
ja
mov
push
jg
stos
pop
push
fldenv
adc
xor
mov
in
jmp
ljmp
ficomps
mov
pop
sub
lds
add
xor
sub
jb
rorl
jnp
fwait
ret
ljmp
pop
in
or
scas
adc
push
lods
mov
mov
fistl
lods
lds
stos
mov
pusha
xor
pop
cmpb
cmpsl
enter
repnz
into
cmp
xchg
pop
in
loopne
inc
pop
fsubrs
in
jmp
and
inc
mov
rclb
sti
xchg
hlt
imul
push
fwait
ds
inc
and
aaa
fmuls
fldenv
cwtl
imul
inc
addr16
jl
xor
xchg
dec
rorb
insl
imul
cs
scas
cmp
jo
jne
or
shlb
cltd
lods
dec
ror
test
dec
nop
lock
out
sub
mov
lock
cli
subb
push
cmp
jmp
or
mov
adc
adc
iret
js
pushf
fldcw
inc
xchg
int3
dec
jg
out
xchg
clc
leave
test
xchg
ds
popf
add
roll
leave
rcll
arpl
and
push
es
nop
in
popf
test
andl
frstor
cmp
pop
fsubr
movsl
adc
into
jno
iret
cwtl
ret
nop
mov
imul
xchg
in
sub
out
lsl
leave
push
or
sbb
or
fnstenv
and
nop
call
push
out
pop
mov
mov
call
pop
arpl
fdecstp
rol
enter
lods
cli
pop
xor
lcall
mov
push
test
scas
adc
jno
mov
lret
sbb
jle
cmpsb
inc
shlb
xchg
inc
ljmp
xor
and
call
aad
pop
push
adc
out
or
leave
into
inc
push
popf
fwait
sbb
notb
sub
sbb
pop
add
mov
es
mov
mov
fsts
icebp
sbb
and
clc
or
xlat
repz
out
or
lret
sub
mov
sub
leave
fnstsw
mov
addr16
cmc
movsl
frstpm(287
mov
jl
hlt
js
cmp
and
sub
ret
sbb
sub
sub
insl
or
aaa
xorl
stc
in
lret
sti
pop
xor
xor
pop
scas
int
cltd
fidivrl
repnz
jg
cld
inc
fldt
fninit
cltd
xchg
arpl
and
mov
outsb
clc
rorb
stos
and
ds
jmp
sbb
leave
in
idivl
bnd
sub
shrb
fs
inc
js
in
xchg
popf
mov
cmpsb
mov
scas
mov
in
mov
jl
cwtl
andl
jne
push
sbb
fwait
adc
jmp
mov
push
or
call
fs
cwtl
or
mov
adc
lea
pushf
dec
or
dec
int3
fcoms
aam
jle
add
dec
xor
gs
xchg
sbb
jmp
jge
mov
imul
les
js
jle
push
push
dec
repnz
dec
xor
push
cs
out
jl
cmpsl
gs
stos
mov
pop
imul
mov
lock
or
pop
in
sbb
add
lock
inc
mov
push
add
repz
mov
sar
in
sti
pushf
mov
test
xor
adc
dec
xchg
and
jg
mov
mov
cmp
test
cmp
mov
jbe
shlb
inc
mov
iret
xlat
pushf
ficomps
mov
mov
inc
mov
sub
lods
ja
mov
inc
je
loopne
out
dec
cli
inc
outsb
fisubrl
lods
mov
add
mov
ficoms
scas
pop
imul
lahf
add
popf
mov
jmp
mov
ss
dec
add
cld
fdivl
push
fldcw
sbb
sbb
xchg
hlt
fsubrl
adc
sarl
mov
jle
scas
push
mov
inc
loop
and
mov
and
pcmpgtw
lock
rcrb
scas
cmp
add
or
lods
inc
sbb
add
pop
aad
jne
test
sbb
cmp
mov
push
adc
int3
mov
xorl
aas
adc
int3
je
cltd
pop
push
sbb
or
inc
mov
jle
insl
cmp
sbb
cmp
insb
stos
and
addb
sar
movsl
pop
mov
sarb
idivl
sub
ret
sar
int
outsb
cmpsb
push
in
in
or
rdmsr
lock
fdivr
adc
pop
dec
js
je
loopne
pop
loope
jp
xchg
es
aam
aaa
and
push
xor
inc
ret
push
mov
mov
sbb
or
shl
jle
mov
inc
scas
cmp
arpl
sbb
daa
xor
icebp
rorl
mov
jecxz
sbb
mov
mov
popf
mov
outsl
pop
into
push
fdivs
stos
fldt
fmuls
dec
cmc
cld
sub
mov
imul
iret
mov
into
sbbl
jl
pmulhuw
jmp
or
and
aam
fistpl
test
or
push
cmp
addr16
lahf
in
ja
pop
jmp
adc
xchg
test
mov
cmp
mov
jmp
sbb
scas
or
leave
sbb
xor
rol
rclb
dec
inc
mov
hlt
out
shlb
ljmp
mov
mov
mov
shlb
sub
dec
add
add
jg
pushf
mov
xor
lret
jmp
mov
add
negl
push
test
lret
decb
imul
dec
int
leave
mov
sub
out
mov
mov
cmp
sub
daa
pop
int
adc
daa
mov
dec
pop
shll
loopne
fldt
out
out
adc
call
je
xchg
sbb
push
cmpsb
adc
jmp
aam
movsb
dec
popa
ret
mov
cmp
in
aam
add
mov
push
pop
repz
pop
xchg
and
push
std
jnp
cmpl
mov
xor
or
sbb
dec
int3
cmp
icebp
call
jns
push
xor
push
icebp
jg
jge
sbb
into
ret
out
sbb
insl
fnstenv
and
add
arpl
and
inc
adc
out
cld
cmpsl
sahf
add
in
out
pop
sti
add
add
mov
xchg
incl
sub
or
sub
mov
cmovbe
push
inc
inc
add
mov
scas
loop
in
cmp
rcll
leave
test
mov
flds
xchg
inc
mov
int3
scas
xchg
jecxz
test
fs
nop
mov
nop
or
sub
mov
mov
and
test
fstl
adc
adc
mov
jne
leave
nop
loope
push
imul
push
xchg
jae
xor
cs
out
gs
bound
cmp
push
fadd
dec
and
jno
mull
cld
mov
inc
ds
popa
popf
mov
inc
and
pop
mov
inc
cmp
xchg
pop
mov
pop
popa
xchg
fidivl
out
jge
mov
fwait
push
inc
imul
and
push
lea
les
jnp
push
jl
pop
xor
mov
das
iret
jnp
sti
mov
push
jl
lock
sbb
in
or
rsqrtps
adc
sub
scas
and
loop
xchg
mov
loope
aad
sub
push
cmp
aam
fimuls
adc
cmp
test
insb
or
ror
lods
jl
ss
test
les
and
push
mov
clc
dec
je
mov
in
pop
xorb
add
cmp
jle
cmp
cltd
lret
cld
inc
adc
cmp
jl
cmpsl
xchg
repz
jecxz
mov
repnz
mov
cli
dec
sub
addr16
and
iret
out
xchg
xor
cli
sbb
and
mov
jl
add
cmp
sub
xor
xchg
xchg
imul
movsl
out
mov
pop
xor
fcmovb
sbb
or
inc
jo
xor
in
inc
mov
xchg
or
xor
das
cmc
lds
cltd
sbb
cmpsl
insl
add
cmc
xorl
leave
mov
dec
cmp
dec
outsl
scas
adc
xor
push
push
adc
jp
mov
dec
xchg
mov
dec
out
mov
mov
cmp
rcr
dec
push
andb
push
aad
or
mov
cs
dec
rcll
mov
int3
shrb
adc
push
inc
enter
out
sbb
in
fidivrl
pop
lock
aam
sbbb
test
inc
xchg
pop
inc
sbb
icebp
mov
jbe
aas
pop
rolb
insb
bound
leave
or
cli
out
adc
mov
in
nop
fnclex
sub
sub
or
xchg
push
cmp
enter
clc
sbb
adc
cmp
inc
je
jae
sub
mov
dec
pop
add
data16
int3
xor
pop
out
test
clc
jae
xlat
jge
xchg
data16
adc
clc
lahf
stos
les
jbe
xor
ljmp
loop
stos
jmp
movsl
mov
sub
sub
cmpsl
adc
ficoms
jge
lret
add
lret
cs
mov
sub
inc
pop
dec
lret
loope
test
insl
xchg
loope
lea
mov
dec
std
jl
call
mov
lret
notb
adc
imul
dec
loopne
in
push
js
mov
stc
leave
aas
jbe
lock
scas
stos
loope
mov
int
leave
les
xor
xchg
jmp
movsb
std
fldenv
inc
aad
add
xchg
xor
mov
mov
lcall
inc
loope
ret
cmpl
notl
inc
sbb
fidivrs
or
aas
jecxz
popa
pop
movsb
or
and
in
add
sbb
cwtl
mov
stos
push
inc
movsb
int
cli
test
xor
lock
lods
jge
adc
xchg
push
movsl
push
stos
testb
cltd
or
fistl
sbb
push
cli
jle
mov
sub
inc
orl
arpl
dec
daa
sub
pop
mov
jb
ja
mov
push
inc
dec
pusha
cld
jnp
adc
test
lods
in
jg
into
mov
dec
inc
push
mov
gs
and
hlt
ret
shlb
cwtl
shll
popl
adc
dec
mov
mov
aas
call
lahf
aam
fmull
and
or
cs
fidivs
sub
adc
lret
or
iret
add
cmp
orl
stos
into
sbb
call
mov
sbb
jae
and
dec
shll
fincstp
pop
jns
hlt
cmp
fwait
std
pop
cmc
mov
cmc
lahf
dec
sbbb
adc
pop
stos
add
lahf
sbb
les
stc
push
orb
mov
call
xor
mov
aad
and
lds
push
sub
cmp
nop
mov
shlb
arpl
sbb
fldcw
subb
add
jmp
les
mov
mov
push
popf
and
daa
sub
xlat
inc
shlb
daa
push
ja
and
scas
mov
push
cmpl
fstpl
xchg
popf
pop
add
imul
ret
mov
or
mov
mov
inc
sbb
je
lret
lcall
repz
aad
sarb
rorb
ficompl
bound
or
js
mov
add
stc
das
clc
add
cvtpi2ps
ds
in
loope
inc
sti
out
fcom
notl
in
or
mov
adc
xchg
lahf
nopl
mov
mov
push
leave
mov
push
addl
and
pop
lcall
lods
mov
rcl
mov
add
jge
push
sbb
loope
lret
mov
cmp
rorl
dec
jmp
pusha
jle
in
out
push
data16
push
cmp
nop
mov
in
neg
mov
mov
jl
jmp
fdivrl
mov
push
pop
pop
push
pop
in
lods
mov
mov
popf
test
or
jno
xor
hlt
aad
inc
xchg
adc
dec
cmp
out
jnp
mov
addb
loope
cmp
adc
sbb
ret
cs
adc
aaa
xor
jecxz
jg
push
lcall
xor
pop
mov
adc
cmp
jne
adc
jbe
je
lods
mov
es
daa
lret
ds
sub
lea
lcall
and
scas
repz
dec
jge
mov
xor
das
mov
cmpb
test
sti
inc
and
movsl
mov
data16
and
and
cmpsb
inc
pop
hlt
pmulhw
je
add
stos
ror
hlt
sbb
lret
stos
lock
and
inc
dec
imull
adc
scas
negl
cmc
sti
xchg
xchg
xchg
jecxz
xchg
cmc
and
lock
scas
dec
movsb
arpl
jbe
adc
cmp
sbb
lahf
fs
lea
push
sub
sahf
clc
sbb
in
pop
ja
in
adc
lds
lea
fisttpl
js
pop
pop
out
cmp
pop
sub
dec
mov
xor
fmull
push
push
mov
xchg
insb
cmp
scas
daa
ror
outsb
lret
cmp
ja
add
pop
rorl
scas
and
das
xchg
sub
int
jns
sub
aas
imul
mov
mov
cmp
fs
mov
stos
mov
mov
jo
or
sti
push
push
ret
cld
xor
mov
gs
xchg
pusha
scas
xchg
pop
es
lret
sub
std
mov
fld
mov
je
pusha
ficomps
imul
pop
daa
psrlq
cmp
mov
fcomps
sbb
movzbl
lea
inc
divl
std
lea
imul
adc
test
punpcklwd
adc
aam
jmp
or
loop
xor
movsl
cmpsw
sbb
cs
int
jecxz
js,pn
and
mov
dec
leave
insl
sbb
and
loop
cmp
sbb
icebp
pop
add
push
dec
sbb
xchg
inc
inc
jg
sub
inc
stos
jns
mov
or
add
aas
repz
loop
mov
imul
test
xchg
add
ljmp
jne
cli
inc
xor
jne
iret
mov
pop
sahf
add
in
int
jnp
adc
lods
pop
mov
cmp
fwait
lret
scas
out
sbb
sbb
fidivs
in
imul
jb
mov
cmp
jne
insb
frstor
pushf
xchg
jns
mov
mov
ret
fidivrl
xchg
imul
sbb
out
add
out
and
shlb
stc
dec
hlt
inc
fstpt
mov
cli
lret
insl
out
mov
pop
mov
fidivs
je
movsb
mov
out
add
jp
sub
mov
loop
xchg
lret
mov
sbb
scas
xor
xor
add
xor
xchg
inc
mov
fdivl
xchg
jnp
lcall
out
pop
adc
xchg
mov
mov
push
das
jge
add
repz
and
or
mov
jnp
mov
jmp
xchg
add
sarl
dec
mov
pop
sub
in
or
xor
rcrb
subl
push
data16
sbb
or
clc
pop
mov
shlb
xchg
mov
adc
cld
clc
xchg
jnp
mov
jbe
cmpsl
arpl
lods
lea
and
pop
or
adc
jg
jle
gs
and
pop
mov
pusha
xchg
push
out
fwait
in
shll
or
jge
mov
xchg
sbb
cmpsb
ja
pop
xchg
sub
pop
fisttpll
movsb
in
jne
and
jns
shlb
pop
jnp
xorb
lods
or
mov
or
and
push
inc
jns
push
stos
enter
pop
and
rolb
push
sbb
sub
inc
mov
cmc
add
xchg
addr16
mul
popf
jmp
mov
mov
cmp
iret
sbb
repnz
sti
lods
add
ja
or
mov
out
inc
in
xchg
and
inc
ds
loope
js
mov
mov
pop
call
cmp
inc
mov
repz
cmp
enter
jae
jmp
cli
adc
jle
push
or
sbb
lea
mov
roll
adc
js
and
je
mov
fs
insl
mov
adc
inc
int3
jno
and
or
jmp
mov
jle
fistpll
or
mov
xorl
jo
mov
js
cmp
enter
repnz
add
pop
movsl
arpl
outsb
loopne
push
clc
xor
pop
add
jmp
clc
dec
cmc
xor
add
xchg
jbe
inc
pop
imul
cs
xor
incb
imul
inc
insb
jae
and
pushf
les
push
mov
in
in
or
cmp
push
or
push
fs
idivb
push
lahf
scas
xchg
fistpl
inc
push
push
addr16
push
dec
lcall
jl
dec
sub
or
jne
push
jns
mov
addr16
into
loope
mov
imul
sub
inc
or
fwait
xchg
jg
pop
pop
imul
call
testb
stos
pop
fisttps
mov
pop
push
rorl
push
pushf
stos
in
dec
les
shlb
bound
xlat
popa
xchg
xor
xchg
jecxz
dec
rcr
cmp
xor
int3
jge
inc
xor
sbb
lea
cmp
outsl
add
push
inc
jo
push
out
inc
push
cmp
jbe
xchg
movsb
into
test
sbb
xor
gs
test
mov
and
dec
call
inc
rorb
or
mov
nop
adc
dec
dec
sub
adc
mov
cmpsb
mov
xchg
sub
jbe
fs
lods
push
sub
cmp
jbe
adc
xor
xor
mov
enter
adc
fdivl
dec
pop
add
test
lahf
fnsave
mov
int3
cli
dec
rcl
inc
sub
xchg
js
mov
fidivl
sub
cmc
pop
dec
int3
pop
js
nop
aaa
inc
dec
mov
jl
lcall
sarb
pop
repnz
dec
lcall
cmp
adc
push
add
sub
dec
daa
xor
pop
sbb
fistpl
inc
into
in
fdivr
les
call
in
out
jp
xlat
ret
pop
adc
add
cld
cltd
mov
pop
cmp
push
dec
jl
outsb
push
mov
push
test
mov
lds
mov
loope
and
inc
add
lahf
push
xor
std
xor
mov
push
cmpsb
mov
push
pop
jg
push
jg
scas
lahf
sub
cmp
sub
mov
inc
in
pop
adc
fidivrs
aam
andb
or
test
jae
mov
lahf
mov
push
pop
repnz
pusha
mov
inc
dec
pop
jmp
pop
cld
mov
mov
movsl
dec
xor
xor
iret
pop
ss
loope
jge
popf
xor
sub
xchg
fldcw
stos
aas
shll
out
cmp
scas
push
push
sub
and
sarb
sub
fcmovnbe
cmp
sbb
xor
out
xchg
fcmovnb
hlt
mov
mov
jns
sub
loope
into
sub
or
lods
push
stos
fwait
inc
sahf
sub
ficoms
jb
rclb
pop
sub
sub
sti
mov
movsl
iret
gs
lods
out
cmp
rcll
std
adc
lret
repz
mov
jnp
adc
sbb
fnstenv
mov
mov
ss
push
ljmp
and
jnp
or
jmp
bound
aaa
outsl
popa
rclb
pshufw
jge
int
mov
xchg
rcl
mov
insl
insb
pop
pop
out
adc
or
jns
add
fwait
mov
push
push
pop
outsl
jmp
fdivrl
and
lcall
out
jnp
cmpsl
sub
mov
mov
push
xor
loop
xchg
subl
push
cmp
fdivrl
leave
rcl
mov
out
gs
scas
mov
test
and
rorb
loopne
jle
ljmp
jo
mov
inc
push
test
dec
cltd
scas
gs
aas
push
rorb
jecxz
cmp
xchg
fistpll
stos
addl
std
jmpw
std
mulb
mov
mov
outsl
xchg
repz
cltd
xchg
popf
jb
in
das
or
mov
jge
ss
notl
aam
test
or
lcall
ds
mov
add
mov
mov
js
nop
iret
loopne
pop
fcompl
push
scas
loop
sahf
mov
mov
aad
cmp
ss
sbb
aas
pop
mov
cwtl
mov
cmc
cmp
iret
sub
push
stos
jnp
loopne
sbb
mov
sub
std
or
pop
in
insb
leave
sbb
jmp
xor
mov
and
adc
add
pop
cmp
xorl
in
mov
imul
adc
lods
insb
dec
sbb
xchg
sub
rcl
in
push
xchg
mov
pop
cmp
pop
lods
mov
int3
lods
adc
outsb
insl
pop
mov
je
jb
pusha
fnstenv
mov
ret
jbe
lret
pop
fnstcw
add
dec
push
movsb
xchg
lock
sub
push
jo
cli
addr16
and
adc
inc
adc
rdtsc
rclb
pop
mov
push
jecxz
adc
xchg
mov
ret
repz
mov
pop
je
add
mov
sbb
dec
out
mov
andb
cs
xlat
xchg
lcall
sub
jnp
lcall
sub
push
test
jae
xor
loope
aad
sti
lea
jg
xchg
cmpsl
mov
add
push
xchg
cmc
cmc
lods
dec
xor
addr16
imul
pushf
push
jbe
icebp
dec
loope
dec
sub
adc
or
aam
mov
lret
dec
pop
add
lcall
jne
jnp
or
movsb
or
shl
fs
pop
notl
mov
mov
xchg
sbb
jp
lret
lods
xor
xchg
pop
fs
aad
aad
cs
jno
inc
call
sbb
xor
aas
dec
fadd
push
and
mov
insl
hlt
arpl
xlat
movsb
sub
xor
aas
adc
sbb
fwait
bound
ficompl
add
sbb
inc
xchg
loope
mov
lcall
xor
jle
dec
mov
std
jae
stos
push
push
inc
adc
not
cmp
or
sbb
mov
lea
mov
sbbb
pop
xor
push
lret
fs
aam
stos
mov
call
lea
sub
push
sub
xchg
push
push
pop
lods
test
ja
dec
aad
mov
nop
push
inc
xor
test
mov
test
mov
jmp
jno
mov
and
sbb
daa
das
lcall
and
in
mov
daa
jnp
add
out
arpl
icebp
xchg
idiv
shll
dec
insl
jno
dec
or
or
xor
adc
inc
dec
je
mov
pop
testb
stc
flds
inc
iret
xchg
scas
mov
jns,pn
cltd
rcrl
push
sub
cmp
out
lret
xor
call
aaa
gs
cmpsl
leave
add
dec
push
in
shll
cli
push
aas
fdivr
jns
sub
dec
or
lahf
arpl
je
gs
mov
scas
mov
cmp
mov
popf
mov
pusha
insl
push
cwtl
mov
jo
fsubs
cmp
fsubl
orb
outsl
adc
push
xchg
out
or
cmp
pusha
jg
xchg
out
shlb
dec
push
mov
ret
cld
cmp
ss
cmp
or
cs
lret
mov
daa
rcl
mov
lahf
sbb
adc
push
mov
test
mov
xor
cmpsl
sbb
push
push
sbbl
stos
jbe
push
in
and
or
and
add
inc
ret
dec
dec
int3
leave
mov
shlb
and
in
sbb
mov
jns
mov
dec
jnp
adc
dec
cmp
stos
push
or
push
push
jecxz
mov
movsl
enter
pop
or
lret
push
and
js
xor
pop
cmp
shll
lcall
sub
pop
cmp
jg
outsl
lcall
fiaddl
insl
call
call
shlb
test
sbb
or
mov
repnz
fs
mov
lds
jae
xor
sub
lcall
cmp
pusha
pop
lock
and
jbe
ja
jge
std
in
mov
cmp
aam
dec
popf
inc
pop
jg
stos
mov
int
xchg
pop
divl
push
mov
imul
out
subb
mov
rcrl
fidivrl
out
repnz
roll
inc
stos
mov
jecxz
xor
jbe
push
fidivrl
addb
add
rcr
neg
pop
rclb
xchg
xchg
insl
cmpsl
test
repnz
cli
mov
sub
cmp
jge
cmp
mov
test
adc
and
push
sahf
sahf
mov
sarb
and
int
add
hlt
and
jae
lcall
test
cld
nopl
add
inc
lods
push
xchg
sub
and
mov
jnp
xor
inc
popa
push
das
push
ret
push
push
add
out
or
and
add
adc
pop
push
pop
adc
lcall
cmpb
and
push
ds
xchg
cmc
lahf
in
test
fidivrl
mov
cmp
bound
shll
and
pop
mov
outsb
lds
inc
fnstenv
scas
scas
xor
dec
jg
js
out
ret
pushf
or
mov
cld
movsl
and
inc
mov
aas
jno
or
add
in
push
push
ror
call
xchg
push
jo
push
inc
pop
mov
seta
mov
push
inc
repz
mov
roll
add
inc
leave
add
mov
cwtl
out
jo
dec
xor
adc
adcb
adc
dec
fwait
mov
notl
lds
inc
fisttpll
sub
pop
cmpsb
inc
cmp
jmp
popf
gs
pop
cwtl
out
sub
fucomip
mov
int3
pop
aad
or
sbb
popf
push
cmc
insl
add
cmp
dec
imul
inc
pop
jne
test
stos
mov
in
lcall
add
loop
pop
cs
mov
add
xchg
adc
xchg
or
sarl
push
cs
shlb
mov
loope
stos
jecxz
test
stos
xchg
stc
stos
mov
repz
mov
fwait
jl
gs
add
jb
hlt
and
jno
cmc
int
sbb
mov
push
lds
and
imul
es
push
xor
inc
rcrl
add
cltd
inc
xor
lcall
hlt
sbb
dec
jnp
pop
int3
test
lcall
add
andl
cmp
mov
xchg
movsl
mov
in
mov
add
push
stos
shrb
mov
incl
int
sbb
lcall
clc
and
out
je
test
insl
das
shrl
xchg
mov
mov
mov
or
xor
mov
stc
push
ljmp
daa
and
push
dec
and
push
shrl
bound
in
xor
enter
or
ficomps
in
addr16
lret
js
mov
fbstp
push
fs
jno
sbb
and
movsb
pop
xor
movsl
int3
sub
push
ror
mov
stos
pop
jnp
loope
data16
mov
pop
leave
jns
jmp
pop
test
or
cmp
outsb
mov
arpl
mov
lret
ss
sub
cwtl
and
ja
mov
push
mov
inc
xchg
push
inc
sti
test
loopne
dec
mov
cmp
ret
inc
xor
sbb
lahf
pop
scas
push
cltd
and
jp
xor
out
and
adcb
sub
es
fimull
cmp
pop
inc
and
int
data16
adc
mov
test
dec
rclb
cltd
pop
shrl
test
pop
test
out
xchg
roll
addr16
pop
sahf
insl
outsb
adc
scas
xchg
mov
pop
xchg
pop
jne
mov
pop
mov
mov
sbb
sub
cwtl
pushf
scas
or
cmp
push
arpl
dec
and
and
dec
repnz
dec
sub
leave
dec
in
cs
mov
sbb
cld
in
add
xchg
insl
mov
push
cli
shl
inc
aad
jo
cmp
ficompl
or
in
mov
mov
pop
jno
mov
cs
adc
cmc
mov
xlat
in
adc
in
mov
bound
je
stc
adc
push
inc
xchg
push
jp
pop
cmp
aas
jle
xchg
lock
test
add
sbb
insb
std
sub
mov
nop
inc
dec
jecxz
sbb
sbb
ret
clc
sbb
and
adc
mov
xlat
loop
push
movsl
push
test
loopne
loop
lods
cmp
mov
mov
or
iret
cs
out
lds
sub
dec
repnz
jns
jg
cmpsl
mov
xor
mul
sbb
adc
mov
aad
adc
mov
sti
sar
xor
aas
pop
ds
adc
jns
fwait
xchg
sub
mov
rcrb
pop
adc
mov
mov
mov
idiv
les
dec
mov
shlb
jne
add
mov
pop
imull
repnz
dec
adc
ret
xchg
or
sbb
fs
dec
test
ret
cmp
mov
jp
loopne
dec
and
ds
mov
adc
rcll
lods
dec
cmp
xor
into
out
mov
mov
stos
js
push
sti
and
stc
out
inc
into
pop
dec
jno
dec
xchg
je
sahf
jmp
jbe
mulb
fcoml
stos
dec
fcos
inc
aad
in
cmp
xchg
sbb
dec
pop
sbb
or
popf
mov
inc
nop
push
dec
imul
inc
inc
cmp
enter
dec
dec
mov
idiv
mov
fucomip
ss
ljmp
xchg
sub
roll
or
mov
add
mov
outsb
insl
jbe
jl
andl
mov
movsb
fs
mov
repz
xor
fdivl
das
fsubrs
clc
pop
push
cmc
dec
dec
sub
out
and
cs
ret
adcl
push
mov
or
sahf
mov
push
stos
pop
sub
dec
arpl
mov
stos
lods
scas
push
add
dec
sub
xchg
adc
mov
test
adc
and
or
stc
dec
int
ret
repnz
sbb
sub
cltd
adc
lahf
push
imul
mov
icebp
lcall
hlt
or
movsl
addb
or
mov
mov
jns
adc
je
lcall
imul
mov
loope
cltd
loopne
in
push
inc
in
mov
mov
inc
add
mov
cmp
pop
or
loop
cwtl
push
lcall
add
mov
jp
push
mov
lds
lds
xchg
push
test
pop
popa
adc
movlps
push
orb
mov
cltd
out
sub
xor
and
int3
pop
rcrl
dec
xchg
xor
inc
push
call
and
fildll
lret
enter
jbe
ret
ds
dec
push
idivb
imul
adc
jnp
xor
jg
mov
lods
nop
add
xchg
in
lcall
int3
lret
and
movsb
mov
fcomp
ret
mov
cmovg
jnp
je
sbb
test
or
pop
aaa
cld
fwait
cs
cltd
inc
sbb
add
xor
add
fcoml
xchg
imul
adc
test
jle
shll
test
sub
gs
insb
fimull
test
sbb
pop
dec
adc
adc
sbb
pop
cmp
add
scas
scas
out
cwtl
fldcw
pop
pop
sub
scas
sbb
xadd
mov
movsb
in
shr
adc
jmp
push
xor
ds
dec
lods
ss
xor
aaa
xchg
mov
xchg
icebp
imul
add
cltd
xchg
insb
jl
inc
mov
ret
jl
mov
fsubr
shl
int
shl
xor
mov
out
or
lods
cs
bound
movsl
adc
shlb
adc
cs
lods
push
xchg
imul
dec
shl
mov
or
dec
sbb
nop
dec
cwtl
mov
pop
mov
icebp
jae
pop
in
mov
enter
sub
and
mov
test
pusha
stos
push
and
jo
lret
loop
inc
mov
ret
xchg
mov
in
dec
mov
fsubrs
loopne
xchg
insl
pop
cli
jg
jo
test
or
mov
sbb
or
push
imul
imul
fidivs
jecxz
cld
pushf
mov
sub
sub
mov
pop
pop
loope
dec
insb
push
sbb
push
dec
sbb
mov
movsl
and
inc
test
cmpb
icebp
je
and
popf
leave
mov
ds
std
push
dec
inc
and
pop
fisubl
mov
jb
jecxz
test
mov
xchg
dec
lea
testl
je
ror
cmpl
xchg
sahf
clc
js
and
sbb
pop
movsl
icebp
push
pop
jl
push
cmpl
jbe
mov
nop
test
hlt
xchg
or
sbb
test
sbb
mov
ss
jg
sbb
inc
sbb
jno
lcall
pop
pcmpeqd
sbb
mov
cmpsl
add
cli
adc
mov
or
ret
aad
es
mov
dec
jnp
mov
dec
ljmp
push
pop
mov
stos
pop
es
mov
push
cmp
aaa
push
nop
jae
jl
or
xlat
or
pusha
inc
pop
pop
xchg
aaa
sub
test
sub
out
dec
lcall
es
out
pop
sahf
sub
aaa
call
call
jle
xor
or
pop
lahf
mov
xchg
fisttpll
daa
xchg
push
fidivrs
push
pop
dec
jle
shr
pop
or
aaa
jle
nop
inc
pop
cmc
int
shrb
inc
imul
xchg
pop
daa
mov
or
cmp
arpl
test
push
pop
jne
cs
cmp
jae
adc
push
lret
jne
enter
jne
mov
jge
xchg
nop
out
mov
pop
lret
sub
sbb
adc
lret
add
add
rcl
push
and
cld
jp
out
ret
jmp
pop
repnz
fstpt
mov
mov
dec
fs
shrl
out
push
andl
inc
shrb
jo
ret
dec
sbb
push
jg
rcl
mov
dec
arpl
lcall
in
xchg
mov
pop
and
scas
in
out
jmp
inc
inc
jno
int3
pop
mov
pop
cmp
or
sub
das
xchg
leave
sbb
imul
cmp
mov
lret
lret
and
add
sub
inc
rcll
aaa
daa
push
call
loope
int3
inc
pushf
jl
adc
shlb
xchg
dec
inc
fwait
jo
jg
lret
push
aas
lock
fs
cmp
lcall
test
inc
pop
loop
inc
popa
xlat
ds
into
cmp
dec
dec
xor
inc
mov
xor
cmp
insb
ss
pop
adc
call
xchg
adc
and
mov
test
sub
insb
fcom
sarl
jne
push
out
stos
pop
popa
fisubs
movsb
add
push
div
or
mov
es
in
scas
dec
scas
push
or
push
jae
add
into
icebp
dec
pop
pop
ja
mov
add
int3
xchg
fs
jmp
mov
cmp
in
add
inc
mov
lret
add
mov
mov
test
aas
fwait
lcall
dec
inc
xorb
incl
clc
inc
loop
push
cwtl
jb
fs
xor
xor
cmpsl
or
jbe
cmpps
insl
mov
je
and
pop
mov
notl
pop
and
fmull
lret
or
je
stos
dec
je
sbb
mov
lods
and
mov
leave
jp
pop
in
push
sbb
js
jecxz
stc
testb
cmp
mov
push
adc
lods
xor
mov
xchg
subb
call
pop
je
mov
mov
clc
xchg
jp
mov
popf
sub
dec
cmp
adc
mov
or
dec
xchg
push
stc
test
cmpsb
push
bound
jl
adc
and
movswl
sbb
addr16
clc
daa
mov
stc
dec
pop
fldcw
jne
adc
ret
fmull
inc
insl
xchg
mov
lock
xchg
mov
fwait
mov
dec
pop
xchg
jbe
pop
mov
imul
adc
push
jg
mov
imul
fs
idivb
dec
into
pop
rclb
mov
pop
push
mov
pop
xchg
mov
sbb
jle
jo
mov
idivl
es
fstpt
je
repz
xchg
or
dec
ja
jmp
jb
xchg
pavgw
mov
fwait
out
gs
sbb
loop
fcmovbe
cmp
dec
inc
repz
mov
lods
fwait
adc
scas
mov
sub
imul
test
and
les
in
into
xchg
cltd
gs
divl
fs
push
dec
out
icebp
loope
jae
popf
aaa
icebp
test
repnz
popa
fcom
mov
lds
nop
std
or
or
in
mov
xor
xor
fildll
adc
cmp
fstl
rorb
push
pop
jb
fldenv
lret
cmp
pop
sub
xlat
xchg
mov
jbe
sub
sub
cld
xor
xchg
add
mov
outsl
subps
and
pop
fstpt
jae
jnp
push
ja
dec
push
outsb
push
dec
inc
or
push
call
pop
lods
push
mov
imul
add
push
pop
pop
adc
pop
sbb
mov
inc
xchg
push
pop
in
and
mov
or
and
lea
xchg
scas
jmp
push
pop
movsb
loopne
push
icebp
out
inc
pop
mov
inc
subl
fwait
sbb
movsb
inc
punpckhwd
mov
or
lods
jg
lods
into
jg
stos
in
insl
sub
inc
push
stos
add
daa
cmp
mov
sti
imul
jnp
push
lods
jns
into
sub
call
rcrb
pusha
aad
xchg
mov
scas
adc
mov
mov
cwtl
mov
mov
rcrl
xor
enter
lds
arpl
ret
mov
int
scas
inc
push
cs
sbb
testl
xchg
dec
daa
add
dec
push
bound
sbb
push
xlat
push
dec
sub
fstps
stc
mov
push
cmp
popf
jl
js
push
and
pop
daa
mull
jle
pop
ficoms
and
jns
jmp
and
push
cld
bound
mov
jmp
stc
out
test
lock
xchg
mov
inc
mov
int
lea
inc
scas
jp
mov
inc
sub
jne
rcl
inc
xchg
add
loope
sub
cmp
sahf
jecxz
lret
add
fdivrs
mov
les
loopne
cmpsl
mov
push
pop
adc
les
pop
ljmp
sub
pop
jno
mov
shrb
dec
push
sbb
mov
push
sti
cltd
int3
and
push
inc
mov
inc
ret
stos
add
cld
repnz
cwtl
fdiv
popf
mov
shlb
cs
jns
cwtl
and
fnstcw
adc
inc
frstor
push
mov
enter
int3
sub
js
cmp
cltd
imul
cmp
nop
mov
lods
mov
test
push
popf
cmpsb
xor
adc
dec
push
test
jae
pop
pushf
sbb
add
shr
cmp
add
test
and
bound
add
aam
sub
insl
cmpsb
jl
jnp
dec
mov
pop
pop
daa
mov
mov
movsl
mov
xor
push
roll
sub
lcall
cltd
stos
jns
cmp
scas
mov
out
pop
dec
hlt
inc
jle
cmp
cmpsb
jo
aas
ja
dec
and
fdivrs
out
add
or
repnz
mov
jb
in
dec
rcl
icebp
dec
jge
mov
adc
mov
pop
pushf
or
xchg
into
or
sahf
xchg
sbb
cmp
xchg
out
das
sbb
jmp
int3
aam
dec
mov
loopne
and
mov
jo
insb
inc
cmpsb
stc
jle
mull
addr16
out
sbb
pusha
mov
or
ret
xchg
mov
mov
xchg
arpl
icebp
mov
or
fadds
in
add
or
test
add
sbb
pop
and
ds
jb
and
in
add
jne
ret
mov
push
test
xchg
mov
pop
push
push
xor
dec
inc
sbb
and
incb
jnp
jecxz
sbb
cltd
jmp
xor
or
aam
and
and
jne
cmp
mov
jae
lods
xor
aaa
and
imul
das
lea
sbb
mov
out
mov
sbbb
xor
int3
xchg
mov
sar
lret
jecxz
std
jge
fidivrl
adc
add
loope
in
or
dec
stos
cmp
add
pop
or
stos
icebp
cli
fcompl
dec
sub
std
fdivs
je
dec
lods
out
cmp
insb
xchg
notb
out
test
push
jmp
cwtl
mov
fisubl
es
int3
mov
mov
add
push
outsb
xlat
xlat
cmc
xchg
sub
repnz
cmp
nop
ds
jnp
sub
popa
ss
and
xor
je
ja
rclb
cld
adc
fwait
cmpsb
pop
mov
fnstsw
cltd
js
add
shl
mov
pop
testl
sbb
notb
fistpll
cmc
incl
mov
lcall
gs
xor
add
sub
xchg
movsl
lcall
push
mov
cmc
lods
adcb
stos
jmp
push
ljmp
adc
cmp
push
push
mov
sbb
sbb
movlps
sti
mov
shrl
push
dec
cmpsb
sahf
insb
fistps
fists
notl
ss
inc
jg
cmpl
int3
scas
and
lods
jecxz
sbbb
out
inc
add
fs
in
mov
ss
lea
xlat
das
adc
loop
or
xchg
ss
rorb
mov
mov
call
test
outsl
push
or
scas
mov
lcall
or
push
sti
loope
out
ljmp
aad
scas
jae
jb
icebp
movsb
dec
xor
push
mov
fwait
sbb
sbb
xchg
jnp
enter
cmpsb
lret
imul
and
or
ja
pop
int
ss
sub
jecxz
mov
into
mov
sub
mov
out
fcompl
dec
test
inc
jns
mov
jge
jg
lcall
sbb
jge
sbbl
inc
or
mov
sti
fs
fs
mov
or
sub
cmp
daa
fwait
and
pop
in
lds
inc
and
push
in
pop
mov
loopne
imul
addr16
inc
sbb
aad
cmp
push
mov
test
xorl
xchg
mov
cs
pop
repz
jne
or
xor
sub
test
loop
xor
inc
enter
or
mov
in
mov
roll
mov
mov
fwait
adc
adc
dec
sub
scas
ret
adc
sbb
fistpl
les
pusha
xor
dec
push
cmp
mov
insb
jnp
mov
or
sub
add
aas
bound
pop
pop
sbb
push
nop
pop
scas
adc
xchg
enter
dec
pop
jne
mov
jb
xor
loop
lahf
push
add
add
aas
adc
inc
add
adc
inc
scas
std
mov
sub
push
add
clc
xchg
lret
loopne
hlt
aaa
mov
and
mov
push
in
fcoml
sar
lahf
aad
js
ds
sahf
lcall
sti
xchg
push
out
mov
dec
inc
jae
stos
pop
sarb
mov
mov
cmp
mov
popl
fs
enter
das
mov
lcall
hlt
ds
dec
inc
sbb
xor
or
iret
push
bound
lods
js
push
iret
pop
adc
and
cmp
mov
cltd
sub
sub
or
enter
repz
pop
ret
pop
jp
xor
cmp
cmp
cltd
sbb
shrb
shr
add
push
xor
mov
mov
lods
xchg
mov
jnp
push
pop
pushf
test
cld
es
pop
test
scas
jle
movsl
fs
adc
pop
notb
xor
mov
push
dec
or
es
movsl
mov
sbb
sub
imul
popa
jae
xchg
pop
cmp
clc
xchg
jecxz
sub
imul
push
adc
popf
cltd
rorb
insb
dec
fidivrs
test
aam
loopne
movsb
add
push
push
cmp
aad
sbb
jg
and
rolb
inc
xchg
mov
and
jne
idiv
and
xchg
out
cli
scas
xlat
fcoml
loopne
ss
shrl
xor
push
fnstsw
inc
pushf
jg
ret
movsb
pop
or
fidivrl
pop
sub
test
and
pushf
fsub
mov
out
es
inc
add
push
filds
test
sbb
dec
lds
mov
pop
or
insl
xchg
xchg
cld
mov
add
pop
into
insb
idivl
dec
jg
call
sahf
sahf
adc
aas
inc
std
je
repnz
adc
loop
jae
cwtl
lds
mov
cmp
sbb
xchg
iret
mov
dec
lret
dec
test
andl
add
aaa
jo
sarl
fisttps
mov
adc
lea
add
out
call
jl
icebp
dec
mov
jne
sub
jne
xor
xorl
mov
fucom
shll
inc
mov
std
sbb
out
inc
cli
xor
iret
addr16
push
pop
push
mov
clc
lods
std
lahf
dec
mov
out
imul
mov
jp
jecxz
sbb
push
cmc
push
jo
sub
or
stc
gs
pop
popa
shrl
xchg
pop
adc
dec
enter
cmp
mov
sbb
jae
cmp
and
out
mov
stc
xlat
rorl
bound
pop
jbe
sub
std
jmp
push
inc
jmp
mov
adc
scas
aas
call
fistpl
mov
aas
repz
andb
mov
nop
adc
adc
mov
fmuls
xor
mov
mov
js
sub
rclb
mov
lret
sbb
jns
xchg
in
dec
imul
mov
jecxz
sbb
xlat
scas
sub
or
insl
je
int3
sub
scas
out
arpl
cmpl
iret
cld
dec
sub
pop
pop
test
imul
mov
mov
push
mov
mov
test
clc
js
ljmp
in
dec
sbb
or
mov
sarl
mov
iret
bound
js
out
in
push
lahf
mov
mov
outsl
jno
outsb
mov
bound
mov
mov
pushf
sbb
add
sbb
push
push
repnz
xor
cmp
in
sbb
sbb
dec
loope
sub
pop
imul
lret
fwait
cmp
xor
xor
pushf
mov
pop
mov
pop
scas
xchg
push
jp
jge
sbb
and
xchg
int3
aas
pop
xor
movsb
addr16
mov
dec
dec
adc
dec
pop
hlt
popa
pop
lret
popf
lahf
pop
adc
cmpsl
shlb
lret
cmp
jl
and
mov
dec
lods
mov
subb
les
rorl
xor
push
mov
imul
xor
cltd
mov
adc
fiaddl
not
lahf
adc
xor
nop
add
sbb
inc
stc
das
dec
aam
mov
imul
xchg
and
rcrl
rclb
inc
cmp
nop
lods
xchg
cld
push
mov
loopne
mov
clc
pushf
sbb
inc
or
lock
das
push
lock
aam
leave
dec
jge
rcrb
clc
sub
in
xor
iret
popa
and
inc
into
pop
cs
dec
insl
jl
out
mov
insb
mov
jb
pop
sub
cli
lds
mov
out
sti
dec
mov
dec
out
sub
xlat
fiaddl
xchg
cmp
shl
sahf
sti
stos
aam
stos
xchg
rol
les
int3
mov
lcall
dec
je
outsl
ret
adc
ljmp
push
aam
bound
push
mov
popf
push
jns
cmpb
xchg
lgs
inc
fxch
mov
mov
fwait
movsb
icebp
jno
add
aas
lds
mov
and
popf
test
or
xchg
inc
adc
pop
jmp
mov
sbb
mov
sbb
filds
pop
push
and
fcomi
mov
frstor
jne
ja
lcall
mov
add
push
jp
or
in
fninit
cmpb
dec
rorb
bound
dec
imul
cmp
sub
pop
and
lods
icebp
xlat
xchg
test
mov
or
sahf
sbb
adc
jle
push
xor
dec
inc
aam
xchg
add
inc
lea
mov
inc
aaa
test
cmpsl
fwait
adc
pop
leave
mov
push
and
sub
push
add
dec
int
add
shr
sbbl
sahf
mov
cmp
push
mov
aad
out
pushf
cltd
inc
fildll
xchg
jbe
inc
push
data16
lock
cmpb
mov
mov
xor
nop
repz
ret
xor
insl
int3
test
cs
ja
adc
inc
push
outsl
jl
pop
leave
inc
cmp
subl
mov
mov
pop
insl
dec
int
adc
ss
daa
push
push
xor
push
or
enter
outsl
les
xchg
pop
call
adc
xor
out
dec
pop
inc
into
push
add
and
jge
adc
mov
into
or
lds
sbb
adc
add
lahf
pop
adc
fstpt
pop
out
imul
mov
mov
out
jns
pop
mov
test
ljmp
mov
jecxz
into
fwait
pop
in
and
loope
lods
movsl
pop
pop
popf
adc
sub
push
lock
movsl
sbb
sub
add
pop
imul
js
test
push
inc
sub
les
or
inc
jle
idiv
in
bnd
adc
mov
sahf
mov
add
loopne
sub
sub
ffree
mov
add
cmp
push
and
mov
sahf
js
fsubl
push
shlb
ret
and
hlt
int
inc
in
xchg
loopne
jbe
jns
aam
pop
ljmp
pop
xchg
jo
xorl
ret
pusha
xchg
fwait
and
push
push
lea
std
aaa
scas
mov
adc
aam
push
pop
push
jbe
inc
adc
pop
adc
sahf
sub
mov
leave
push
mov
scas
pop
dec
movl
rolb
mov
lret
fucomi
cltd
xchg
test
test
cmovs
mov
cmp
mov
add
adc
js
pop
test
cmp
mov
in
dec
popf
push
push
xchg
lret
stos
xor
cmpsl
out
push
jmp
scas
cmp
scas
or
ss
adc
outsb
pop
subb
mulb
mov
stos
mov
xor
mov
xor
test
lock
je
loopne
adc
sahf
sub
pop
and
arpl
xlat
ror
movsb
call
push
sbb
pop
fnstcw
stos
outsb
pop
pop
mov
outsb
xchg
jne
mov
iret
out
sub
dec
rorl
shll
in
sub
sub
push
cmp
lods
loopne
mov
fcmovnu
jnp
or
push
nop
mov
xchg
pop
mov
push
sub
insb
mov
xchg
push
pop
mov
test
jo
xor
jecxz
or
push
push
cmp
imulb
test
fldcw
or
shl
fmul
es
movsl
add
and
mov
pop
add
jns
push
icebp
lea
test
xor
jecxz
imul
int3
push
jge
mov
sub
mov
scas
pop
push
jle
sub
lcall
arpl
mov
mov
ds
jmp
jo
dec
add
mov
pop
divl
clc
js
inc
ds
out
sub
add
jl
sub
and
leave
sub
incl
ffreep
inc
hlt
pop
mov
pop
das
sub
mov
addr16
xchg
test
pop
sub
pushl
or
mov
jmp
xchg
in
cs
jmp
cmp
ja
lcall
push
in
rcll
push
xchg
jg
fcmovu
mov
out
scas
shl
xchg
sbb
xchg
int3
inc
pop
mov
or
cmp
out
add
push
jp
sbb
inc
aas
fbld
xlat
push
push
mov
out
cmpsl
jle
out
out
and
fcompl
sbb
test
pop
dec
and
hlt
scas
sub
ss
cltd
mov
outsl
div
jbe
or
lret
and
xor
mulb
push
loopne
mov
mov
outsl
loope
xchg
mov
stos
pop
les
inc
sbb
cld
sub
clc
shll
stc
push
stos
mov
dec
ficoml
push
repz
push
dec
mov
je
adc
or
sbb
ss
push
out
pop
dec
ss
rorl
popa
aad
sbb
adc
push
out
neg
pop
cmp
mov
outsl
xchg
rorl
xor
out
pop
adc
xor
sbb
mov
xor
out
idivl
pop
jp
leave
std
cmp
xchg
negl
pop
jbe
mov
jo
push
dec
jp
clc
sub
jnp
xchg
fdivs
rolb
push
mov
push
dec
jb
aaa
pusha
dec
mov
add
fs
xor
arpl
cwtl
fistpll
mov
leave
test
stos
cli
in
jns
stos
mov
xchg
sti
pop
fucomip
lahf
leave
pop
ret
fistpll
pop
push
repnz
xchg
in
push
adc
jb
lods
aad
ret
aaa
cmp
xor
out
sbb
pop
sub
add
ficoml
outsl
fsubl
insl
pop
std
cwtl
lret
ds
insl
dec
sbb
mov
jg
mov
jecxz
lea
inc
push
fcom
xor
mov
adc
andb
pop
lods
nop
repnz
dec
push
mov
dec
jg
lahf
fbstp
bound
sbb
pop
xchg
dec
test
inc
out
mov
and
mov
leave
fcomi
add
sub
fsubr
out
push
xor
xchg
jle
pop
pop
xchg
pop
mov
in
stc
xchg
pusha
push
movsl
cmp
mov
push
nop
repnz
ss
jb
or
lahf
loop
pop
mov
fstl
icebp
jns
or
jecxz
scas
insb
out
push
sbb
mov
lods
mull
push
sub
lock
test
sbb
sbb
dec
dec
xchg
pop
lock
popa
je
popf
rcrb
mov
jge
lea
aas
lret
inc
mov
push
cmp
xorb
jo
add
push
jmp
sub
mov
inc
mov
repz
into
addr16
and
and
dec
sbb
stos
lock
or
rorl
addr16
push
pop
pop
fs
jns
push
inc
dec
jne
lret
loop
rorb
mov
push
pop
inc
push
imul
popf
mov
cmp
push
shrb
sbbl
xchg
push
rcrb
data16
sub
test
mov
mov
pop
lods
push
adc
sub
jae
pop
cmp
xor
bound
rorl
cmpsl
push
inc
inc
in
mov
jne
mov
xchg
and
in
xchg
or
sarl
scas
das
adc
sbb
and
loopne
pop
cmp
cmp
pop
mov
fldl
lods
and
cmp
aad
outsl
mov
shlb
and
andl
loopne
mov
stos
jp
imul
inc
xor
aas
mov
and
int
fstps
test
jnp
add
cmpsb
xor
sahf
lods
mov
repz
mov
test
xlat
popf
xchg
pop
lahf
jmp
jmp
sbb
sbb
incb
aam
push
testb
nop
jmp
adc
jne
adc
jne
dec
mov
sub
es
pusha
lret
pop
mov
out
test
aaa
iret
push
pop
adcl
mov
or
pushf
jge
jecxz
and
imul
ret
sbb
mov
push
pop
mov
popa
push
mov
or
pop
stc
in
jb
push
js
icebp
leave
lods
loopne
push
adc
mov
add
dec
stc
mov
rclb
xor
or
mulb
xor
push
lock
sub
ja
and
pop
nop
aaa
or
std
push
mov
lods
and
rcl
inc
andl
outsb
sub
arpl
push
pusha
add
xchg
push
jmp
lock
jl
xchg
cmp
fwait
pop
loop
pop
push
enter
les
aas
int
adc
jbe
lods
pop
addr16
pushf
imul
out
add
xchg
bound
push
loopne
enterw
aad
cld
cmp
jge
shr
dec
mov
mov
mov
xchg
adc
pop
mov
icebp
js
add
mov
add
stos
test
arpl
jl
in
fsubl
xchg
push
nop
addr16
add
test
rorb
push
test
lahf
or
dec
jae
outsl
lods
jo
inc
imul
repz
pop
add
lock
scas
sbb
clc
jmp
xchg
pop
lcall
test
xchg
push
cmp
repnz
jmp
dec
daa
dec
outsb
mov
xchg
jb
pop
xchg
lahf
imul
mov
mov
pop
mov
mov
xor
mov
lods
icebp
outsb
je
xchg
sar
das
and
loopne
and
es
sub
add
dec
nop
lock
jae
inc
cld
lahf
mov
andl
test
mov
sub
sbb
dec
add
lret
mov
mov
sarl
dec
pop
pushf
pusha
mov
fwait
and
push
insb
aaa
mov
cltd
mov
jb
xchg
dec
ret
clc
pop
fwait
jnp
mov
out
shl
loope
scas
lea
add
sub
daa
loopne
push
addr16
imul
dec
push
xchg
arpl
setae
shll
fnsave
dec
in
iret
pop
outsl
iret
fisubrl
gs
ds
mov
add
inc
ret
pop
mov
mov
popa
stc
xchg
jo
or
cmpsl
and
sub
aam
adc
pusha
mov
repnz
cli
enter
push
push
sbb
push
movb
or
cwtl
adc
aad
dec
ret
cmp
sbb
add
mov
push
pop
mov
xor
test
scas
cmp
cmp
rol
pop
lahf
fwait
mov
jo
das
inc
aaa
and
jge
sbb
pushf
arpl
stc
xor
sahf
push
mov
xor
xor
iret
pop
jno
xorl
insb
inc
mov
fnstcw
pop
movsl
mov
rep
jo
ret
and
pop
mov
cmpb
sbb
cmpsl
repz
push
and
test
jo
shlb
dec
roll
test
les
bswap
out
sub
sbbb
lock
push
pop
xchg
fbld
sbb
adcl
mov
jnp
and
inc
xor
inc
int
fstl
dec
mov
test
orl
loop
mov
adc
mov
movsb
loopne
popf
int3
sub
stos
test
pop
jns
xchg
rcrl
mov
fistl
loopne
out
mov
lret
addr16
imul
and
les
js
hlt
loopne
jl
lock
shr
xchg
cld
jne
jne
pop
imul
jno
aam
xchg
xchg
cltd
pop
cwtl
jg
cmp
adc
pop
cmp
aam
insl
aam
fistl
roll
imul
pop
add
ss
mov
out
insb
add
loop
mov
and
ja
add
sbb
inc
pop
out
test
scas
jmp
daa
xchg
pop
rclb
inc
pop
push
cmp
and
cmp
mov
ja
mov
pop
ret
fwait
or
pop
jp
xchg
out
scas
jle
fbstp
mov
std
jg
xchg
pop
ret
lods
arpl
jmp
sbb
or
aad
inc
jb
gs
int
adc
call
push
cmp
clc
les
inc
push
mulb
movsl
gs
add
pop
add
sbb
mov
shlb
mov
xlat
ljmpw
mov
mov
aas
ljmp
ret
push
pop
jp
pushf
iret
lret
pushf
mov
fwait
pop
adc
inc
fstl
xchg
xchg
pop
nop
pop
inc
add
or
push
je
scas
fldcw
popa
xchg
sahf
outsb
aaa
xchg
mov
fisttpll
fisubrl
cmp
popa
fs
es
mov
adc
push
shufps
pusha
sbb
in
mov
mov
and
jl
mov
mov
cs
jbe
push
repz
adc
rcrb
push
pushf
sbb
mov
cmp
sub
fs
pop
shll
add
pop
subb
fisttpl
inc
data16
clc
in
xchg
sbb
push
push
pop
add
adc
or
and
push
pop
inc
or
mov
mov
pusha
je
mov
dec
pop
and
out
lahf
pop
mov
pusha
sub
lds
jae
mov
pop
and
pop
ret
xchg
push
pop
mov
xchg
leave
cwtl
and
pop
stc
in
mov
stos
xchg
nop
stos
les
xorb
fstpl
fisubl
mov
test
pop
jg
mov
neg
aas
push
icebp
jne
out
push
scas
das
iret
sbb
mov
or
add
jge
icebp
add
addr16
push
adc
mov
fnstcw
lcall
cmpsl
mov
in
iret
jp
fnstsw
sbb
sub
inc
push
cmp
mov
sbb
adc
cmpsl
icebp
push
ret
adc
mov
inc
cmpsb
push
push
pop
fcomps
adc
add
mov
arpl
mov
ss
fiaddl
mov
or
dec
xlat
std
fistpll
in
orl
xlat
sbb
pop
pop
dec
jp
xchg
stos
pop
push
inc
cmp
lock
mov
nop
es
mov
lcall
sbb
data16
jg
into
in
mov
sbb
mov
jb
add
mov
outsb
cmpsb
or
sbb
leave
jle
pop
fcos
ljmp
cs
or
cmp
jle
push
mov
jns
dec
fstl
icebp
andb
movsl
mov
mov
pop
lea
cmpsl
xor
fdivl
cld
mov
mov
pop
stc
mov
dec
fcoms
cmp
dec
mov
mov
movsb
dec
gs
xchg
inc
test
das
add
inc
jno
daa
mov
mov
cmp
add
mov
jecxz
and
pop
testl
and
push
sti
sbb
pop
pop
or
enter
add
adc
movsl
and
fldl
sbb
inc
and
daa
cmp
mov
push
dec
jge
sbb
dec
dec
sbb
jmp
pop
inc
sub
jp
fdivrp
push
jge
test
jns
mov
ss
xor
imul
sbb
xchg
add
arpl
ret
cmpl
sbb
dec
or
scas
sub
scas
mov
inc
inc
and
pusha
ss
or
movsb
hlt
mov
jnp
xlat
jns
adc
mov
test
fstps
pop
add
mov
push
bound
std
lret
aaa
into
add
in
stc
or
sti
dec
fsubrl
int3
jne
jle
pusha
out
aad
mov
daa
mov
test
arpl
jmp
stos
test
mov
xchg
push
dec
xchg
jbe
xchg
sbb
pop
pop
pusha
push
stos
in
jp
pusha
fldl
pop
lret
sub
push
add
dec
jecxz
sbb
mov
in
ja
mov
xchg
sbb
inc
lret
sub
cltd
or
mov
gs
outsl
inc
xor
movsl
sub
mov
mov
xor
or
and
xor
das
cmp
pop
mov
mov
xchg
shlb
negb
lock
in
rcr
mov
xor
push
mov
add
ret
iret
mov
and
add
jg
xchg
push
movsb
ret
in
push
rcll
jp
xor
out
mov
fisubrl
dec
sub
cltd
lret
push
pop
dec
sbb
out
or
adc
pop
push
sub
data16
js
out
lea
sbbl
inc
adc
insl
mov
in
adc
loopne
adc
cmp
movsl
dec
mov
mov
pop
push
icebp
xlat
jno
mov
jecxz
loopne
popa
lcall
icebp
decl
pop
or
push
call
mov
inc
sub
mov
adc
insb
aas
leave
push
cmpsb
ds
xchg
call
faddl
test
jns
pop
icebp
xchg
inc
mov
and
loope
xchg
jno
hlt
push
xor
in
mov
pop
and
jnp
lret
push
pop
and
jae
push
out
add
sbb
push
aas
mov
ret
inc
lods
clc
jmp
jno
fsubrl
outsb
jg
movsb
dec
shlb
aad
and
out
sbb
mov
add
mov
xlat
data16
jnp
lahf
sub
dec
add
sbb
push
fmuls
ss
loopne
mov
pop
sbbb
sbb
cmc
sbb
fsubrl
add
lret
faddl
hlt
adc
adc
mov
sbb
subb
mov
mov
mov
jb
outsl
pop
notl
jo
sub
fstpl
push
dec
mov
iret
cmp
mov
je
sbb
cmpsb
leave
xchg
xchg
mov
loope
stos
lcall
inc
int3
pop
js
in
imul
or
xchg
fsubs
sub
push
pop
mov
call
pop
mov
addr16
adc
out
mov
cmp
int
mov
sbb
movsl
mov
mov
pop
add
into
clc
icebp
sub
adc
jno
sbb
aam
jne
arpl
subl
mov
cmpsl
push
jne
xor
jle
push
adc
arpl
incl
or
clc
in
jb
data16
aam
mov
mov
and
loope
push
xor
mov
mov
out
xor
mov
mov
xlat
std
sarl
sbb
fnstcw
gs
add
and
inc
cmp
push
adc
jne
sbb
pusha
orl
fnstenv
dec
cs
cmp
xor
movsb
sub
arpl
loope
std
or
mov
adc
test
arpl
jbe
lods
ret
cmpsl
mov
and
mov
dec
ds
cmp
mov
outsl
pusha
leave
lcall
jl
jns
inc
fcmovne
popf
test
cmp
adc
out
enter
xor
mov
xor
lea
jns
lods
ret
je
push
imul
mov
pop
inc
mov
daa
pop
stc
dec
push
mov
rcrl
and
xchg
aas
loop
dec
adc
mov
pop
ret
nop
xchg
push
sarb
mov
adc
mov
add
sbb
sub
sub
outsb
cmp
mov
test
mov
push
jb
xor
pop
pushf
mov
mov
xchg
rol
inc
and
xchg
pop
jmp
add
mov
lret
mov
inc
fnsave
cmpsl
lock
addl
add
sub
xor
aam
mov
pop
pushf
testl
movsb
or
inc
lods
fidivrs
mov
in
fistps
mov
psubusw
mov
jb
dec
insb
in
popa
mov
xchg
lcall
lret
shlb
shl
dec
bound
pop
inc
outsb
push
in
xchg
lcall
test
dec
sbb
in
sub
xchg
in
cmp
shrl
iret
xchg
inc
shlb
mov
jae
or
dec
pusha
sub
xchg
out
sub
or
adc
adc
sbb
inc
jge
jl
mov
push
adc
repnz
pop
and
sbb
ds
out
cwtl
sbb
mov
mov
in
loop
aam
out
add
in
mov
pop
push
xchg
loopne
cwtl
sti
sub
or
fst
pushf
push
call
mov
imul
movsb
sbb
push
mov
stos
clc
jb
mov
mov
sub
fcompl
dec
pop
rcrl
cmp
frstor
incl
dec
dec
xchg
test
xchg
ds
fisttpll
jge
xchg
sbb
lahf
xor
sub
fidivrl
pop
loopne
xor
push
ljmp
movsl
fmull
iret
arpl
jo
ret
jl
ss
fidivrs
out
and
adc
mov
mov
inc
mov
insl
cli
sti
scas
push
aam
cmp
mov
and
stos
dec
call
in
insb
dec
inc
adc
fs
dec
xchg
outsl
sub
jb
mov
es
movsb
shrb
mov
sub
cli
mov
jmp
xchg
mov
push
mov
cmp
add
xchg
jb
jle
xor
dec
clc
daa
out
imull
bound
popf
push
inc
test
push
inc
ja
jo
test
jae
loop
lret
mov
cmp
cmp
xor
mov
cli
ficomps
sbb
inc
stc
and
loopne
ss
mov
lods
sbb
insl
adc
aaa
jnp
or
cmp
rcrl
jmp
mov
mov
test
imul
cli
insl
adc
fldl
pushf
fisubs
push
cmpsl
cltd
nop
xchg
jnp
pop
push
xchg
nop
js
dec
jne
pushf
outsl
sarl
je
jne
insl
ret
ljmp
in
xchg
loop
inc
fidivs
xchg
pop
mov
push
xchg
gs
pop
mov
shll
mov
lods
pop
paddusw
inc
lea
scas
stos
popf
xchg
mov
inc
test
jno
hlt
out
arpl
out
lds
inc
mov
out
and
lret
and
in
sub
xor
cs
mov
sub
repz
jo
pop
rcll
push
jmp
jnp
add
mov
negb
mov
add
test
push
mov
or
fs
inc
fidivl
ss
imul
jp
aaa
jo
jnp
sbb
cmc
add
loopne
enter
mov
in
lock
xchg
jnp
inc
mov
jnp
insl
or
bswap
sub
aaa
and
scas
and
ss
mov
popf
cli
xchg
hlt
xor
addr16
sahf
mov
mov
add
mov
lea
das
push
jmp
pop
jmp
add
out
aas
iret
insl
jge
xor
popf
shll
xor
clc
push
xor
fmul
pop
mov
repz
pop
cmp
cmovge
adc
mov
and
xchg
outsb
ljmp
jnp
mov
popa
ss
xchg
mov
mov
insl
imul
xchg
divb
dec
sbb
jbe
mov
shll
pop
dec
lcall
xchg
arpl
pop
mov
popf
add
or
jno
stc
xlat
jae
mov
sbb
lret
push
bnd
push
enter
push
cmpsb
imul
push
ljmp
ss
and
lahf
mov
jge
cli
in
stos
push
aad
pop
xchg
pop
das
pop
xchg
movsl
and
sub
sub
sbb
leave
pop
jbe
leave
push
and
insl
inc
gs
push
repz
dec
out
mov
push
ds
fists
pusha
or
arpl
and
jne
loopne
add
subb
out
cltd
mov
dec
xchg
xor
dec
andb
in
inc
pop
outsb
int3
xchg
iret
adc
cmpl
test
mov
inc
inc
nop
lret
pop
inc
hlt
mov
lods
cli
cmp
aad
loope
adc
adc
js
nop
mov
sbb
mov
cmp
call
inc
push
test
pop
pop
cmc
shr
cmpsl
sub
inc
sbb
mov
inc
add
adc
shrl
fisubl
mov
fists
ret
cli
les
sub
loopne
arpl
push
pop
adc
xor
xchg
iret
pop
cmpsl
or
call
sbb
andl
sub
pop
fcmovnu
test
push
js
add
inc
arpl
push
pop
and
xchg
add
jns
xor
adc
lds
and
inc
cmpsl
mov
sub
mov
xchg
rclb
xor
push
xor
fisttps
inc
leave
mov
or
lret
push
mov
stos
fcom
aad
in
cmp
je
dec
lret
push
pop
ficoml
xchg
loope
jecxz
js,pn
adc
clc
ljmp
in
jnp
inc
pop
ficomps
pop
sbb
or
imul
and
stos
add
lret
xchg
adc
icebp
and
xor
xor
push
adc
out
movb
xchg
cli
and
mov
aad
es
hlt
jmp
out
add
je
mov
pushf
cmp
pop
pop
loop
icebp
flds
mov
movq
bound
push
ss
adc
movsl
add
dec
imul
faddl
popf
clc
cmc
xchg
mov
stos
out
scas
fisttps
ds
lods
lahf
iret
rol
ja
lahf
dec
fnsave
and
jb
jno,pt
dec
push
inc
arpl
pop
lods
cmpb
xor
aad
ja
arpl
pushf
adc
push
pop
rol
pop
insl
test
mov
adc
enter
roll
icebp
and
ret
rep
mov
std
fstps
in
lea
outsl
mov
jo
or
or
mov
popf
bound
mov
sub
dec
jae
adc
sbb
pop
adc
mov
add
sub
push
mov
pushf
filds
pop
out
test
lret
in
adcl
hlt
jge
std
out
jg
lret
ds
pushl
mov
xlat
outsb
mov
data16
movsl
xchg
jae
fisttps
and
stos
xlat
cmpsb
pop
push
pop
repz
pop
outsb
ffreep
scas
cltd
aad
loop
std
pop
call
inc
pop
dec
push
test
and
or
mov
mov
push
lret
push
dec
fcomps
dec
mov
jle
or
jp
movsl
pop
add
mov
adc
or
mov
cmp
mov
push
inc
add
cwtl
jecxz
out
and
fs
adc
aam
imul
mov
mov
imul
cli
mov
cmp
imul
movsl
sub
and
popa
push
repnz
ror
fcomps
mov
in
adc
adc
or
lret
sti
fs
sub
mov
jge
pop
inc
and
sbb
int3
jl
orb
cmp
icebp
add
cmp
jbe
cmpsb
xchg
cmp
xor
repz
jg
dec
dec
aam
out
lea
cmp
shlb
sti
inc
clc
pop
inc
and
jl
popf
stos
cmp
pushf
sbb
daa
fsubrs
outsb
das
shrb
int
pop
inc
jb
sub
inc
jbe
jg
add
pop
iret
lods
adc
insl
push
and
push
jb
and
addl
mov
int
loope
xchg
sbb
mov
add
aas
mov
jl
into
call
sub
hlt
pop
add
lock
dec
jne
fwait
hlt
divl
das
andl
std
lock
dec
repz
testl
and
cmp
lcall
adc
pop
out
mov
pop
jne
lret
sbb
push
out
hlt
in
and
hlt
push
aad
icebp
repz
dec
aad
fldt
mov
fdivrs
push
outsl
jge
push
cld
xchg
add
fisubrs
inc
push
gs
stc
rolb
adc
aad
xchg
xchg
je
push
cltd
or
jne
or
add
push
mov
stos
clc
pop
sbb
int
push
mov
incl
mov
stc
add
push
dec
je
mov
and
lret
aas
fildl
sub
popa
add
int
leave
mov
push
data16
cmp
jecxz
fwait
lahf
addr16
pop
inc
mov
aad
leave
xlat
push
je
arpl
rclb
insl
mov
mov
xor
dec
mov
xor
stos
cmpsl
push
xchg
inc
mov
aad
mov
inc
pop
mov
cmp
fwait
xchg
insl
sub
jp
loopne
icebp
xchg
aaa
cs
and
and
leave
fsubr
mov
aaa
leavew
jbe
rcl
out
inc
insl
ds
mov
dec
mov
jo
addr16
imulb
add
and
mov
nop
and
int
jg
push
test
cmpsb
mov
sub
rol
stos
mov
repz
jmp
mov
repz
jmp
sbb
hlt
repz
ja
jno
test
mov
lea
in
pop
imul
and
xchg
dec
jl
mov
iret
fsubs
popf
sarb
jb
dec
pop
shr
in
arpl
jp
xchg
in
mov
lahf
mov
sahf
xchg
cwtl
scas
adc
das
lret
xchg
imul
jno
mov
in
out
xchg
clc
push
loop
popa
inc
out
clc
jmp
outsl
xchg
sbb
dec
jl
js
test
out
cmc
jp
pusha
lea
jge
pop
adc
sti
and
cmp
clc
mov
rcrl
aad
inc
pusha
xchg
lods
inc
jge
cli
pop
lret
fcoml
mov
mov
frndint
cs
jecxz
and
mov
cmp
push
mov
sbbb
inc
pop
rolb
inc
or
fisttpl
dec
jb
or
inc
mov
dec
outsl
mov
je
scas
pushf
or
cltd
es
mov
xchg
outsl
mov
roll
ret
aam
add
popf
mov
and
push
jno
jle
test
or
xlat
sbb
xor
inc
jg
mov
pusha
std
xchg
jns
jo
je
jbe
in
xor
push
mov
outsb
mov
repnz
inc
rolb
jecxz
outsb
outsl
xor
inc
loop
xor
mov
fcomps
ss
jl
cwtl
vmulpd
in
fildll
shl
subl
pop
fldenv
add
mov
test
daa
cmpl
xor
mov
mov
and
xchg
les
push
push
sbb
sub
adc
push
nop
jmp
add
cmp
shlb
bound
mov
mov
fsts
dec
sbb
dec
subl
mov
aaa
push
mov
adc
jecxz
imul
shrb
jge
ljmp
cltd
sbb
pusha
cmpsl
pop
push
nop
call
sub
stos
aaa
cmp
out
mov
insl
dec
adc
loopne
sub
lahf
xor
or
ds
jb
adcb
sahf
rorb
cmp
mul
addl
jns
jnp
xchg
icebp
repz
xor
hlt
dec
push
pop
mov
adc
mov
xchg
outsl
stos
cld
mov
out
jne
loopne
loope
ja
js
pop
rcrl
lods
lds
pop
jg
dec
xor
jp
push
out
aam
jg
fcomi
mov
insl
mov
shll
mov
mov
data16
adcl
imul
sti
pop
xor
mov
das
loopne
adc
or
sub
push
push
and
insl
loope
xor
iret
push
gs
rcll
xchg
aam
mov
popf
rorl
addr16
jg
mov
sub
aam
ss
cmpl
test
xorb
test
dec
xchg
jle
popa
or
cmpsl
mov
cmpsb
mov
cli
jns
adc
or
out
mov
leave
insb
pop
sub
sbb
inc
adc
add
dec
jle
stos
mov
cld
mov
scas
cmp
pop
sub
mov
out
jb
fistpl
inc
xchg
test
insl
imul
cmp
sbb
xchg
jp
dec
enter
test
iret
lds
pop
aam
dec
add
cmpsb
dec
cmp
xchg
scas
cmpsb
push
popf
push
sbb
pushf
push
inc
sub
jl
icebp
sub
lock
xor
mov
mov
cs
mov
mov
pusha
in
call
push
jp
bound
push
popl
clc
das
jp
dec
mov
mov
push
pusha
mov
cmpsl
sub
inc
xchg
std
pop
mov
je
pop
test
pop
sahf
cmp
sub
aas
mov
fmuls
sahf
aam
and
sub
mov
pop
popf
dec
fwait
dec
and
pushf
cmpsb
rolb
cmpsl
out
mov
and
xchg
in
andb
xor
adc
rclb
stc
add
mov
adc
aas
fdivrl
sub
repnz
stos
fists
in
lret
mov
cmp
mov
push
in
jb
pop
dec
popf
or
push
stc
lods
mov
cltd
mov
mov
jo
jmp
jge
testb
aaa
mov
outsb
mov
dec
repz
sti
jae
das
jno
inc
iret
aas
icebp
xchg
jae
insl
sbb
clc
cmp
int3
cmpl
aaa
sahf
ss
jae
mov
pop
lods
inc
mov
jbe
mov
mov
aas
mulb
mov
add
arpl
imul
xor
test
add
cmp
jb
in
dec
jne
out
mov
jbe
dec
push
and
je
repnz
mov
push
lret
aas
stos
jg
jle
xorb
jns
mov
and
imul
or
mov
and
lret
push
add
inc
dec
aad
out
dec
xchg
lds
push
cli
mov
cmp
je
push
dec
mov
xchg
cmp
cwtl
inc
sub
or
movsl
xchg
push
sbb
jo
and
cmc
or
js
in
lds
jbe
and
fistps
movsb
inc
ds
sbb
call
jbe
dec
jne
loopne
sub
js
insb
push
sub
adc
movsb
mov
adc
in
insl
xor
inc
lcall
lock
mov
adc
fcmovb
xchg
lret
cli
test
or
scas
dec
push
xor
xor
cmc
test
aam
rcrl
dec
pop
inc
adc
mov
aaa
sub
stos
sbbb
and
and
mov
cs
push
stos
dec
pushf
out
pop
add
push
lds
vhsubps
add
mov
cmp
mov
lods
dec
xchg
push
jb
add
push
jp
dec
mov
sub
clc
xor
lret
inc
sub
lods
addl
ror
filds
inc
stos
mov
sub
jae
xchg
xor
cld
stos
and
xchg
out
in
or
mov
lods
adc
leave
ja
mov
xlat
jne
pop
imul
mov
push
and
and
inc
jg
adcb
xlat
inc
stc
or
fs
add
lock
xor
mov
lods
mov
xchg
lcall
mov
jne
sar
inc
dec
dec
pop
sarl
lret
jp
cwtl
nop
fsubr
aas
or
mov
inc
xchg
jge
testb
popf
sarb
clc
sbb
mov
jo
jecxz
adc
ror
and
xchg
jo
hlt
push
mov
shll
mov
inc
pop
xor
scas
jp
fistl
cmc
lahf
mov
pop
imul
xchg
cltd
fsubs
push
jg
mov
adc
loop
cvtpi2ps
jnp
in
pop
sahf
popf
scas
push
into
jp
jns
clc
pop
add
sti
jg
cmpsb
test
repnz
in
push
push
push
inc
jb
and
clc
pop
sub
inc
xor
pop
int3
xor
mov
daa
adc
cmp
pop
loop
fsts
out
push
das
xor
repnz
jle
adc
push
fcomps
jle
arpl
and
jl
cmpsl
mov
movsb
inc
ljmp
push
fisubrs
xchg
inc
push
mov
dec
jmp
aad
jmp
rcrl
jecxz
mov
sub
pusha
xor
xor
pop
lock
aad
pusha
rcr
out
idivb
mov
mov
test
or
movsl
pop
mov
test
pusha
loopne
or
jge
and
mov
das
push
push
scas
outsb
xchg
jno
jle
movl
mov
in
lret
xchg
sbb
inc
icebp
les
repnz
outsl
int3
sub
xor
cmp
hlt
ja
pushf
push
js
es
pop
dec
and
ljmp
aad
aad
xchg
xor
adc
sub
or
insl
out
insb
negb
pop
nop
cmp
pop
mov
jnp
call
lcall
test
loop
mov
test
inc
rcr
cmpsl
push
inc
into
je
js
arpl
sub
scas
mov
pop
gs
repnz
jge
add
mov
add
nop
mov
sbb
xchg
fidivrs
fstps
mov
int3
pop
leave
test
adc
in
or
and
and
xorl
jmp
xor
lods
loop
cmp
or
adc
cmp
add
add
jnp
popf
pop
ret
add
test
add
pop
fisubrl
cmp
push
js
jae
dec
jp
jae
jecxz
mov
adc
mov
call
in
stos
and
jb
mov
int3
ret
pop
incb
jo
fmuls
xchg
loopne
cmpb
clc
imull
arpl
xchg
gs
fidivl
sub
mov
pop
add
cmp
inc
push
jmp
addl
mov
or
xchg
fwait
insb
lds
push
add
adc
push
sbb
mov
fbstp
int
out
cltd
hlt
je
lods
shll
push
push
js
outsl
ds
pop
and
popa
nop
mov
imul
pop
mov
xchg
cmp
repz
xchg
jb
mov
mov
jmp
sbb
addl
lds
pop
sub
lahf
sub
in
test
fs
imul
xchg
scas
in
lahf
xor
orb
int3
imul
shrl
mov
int
dec
or
stc
jo
rcll
xchg
adcb
cmp
lods
and
sarb
ds
push
dec
int3
mov
jp
test
xchg
movsb
and
mov
add
insl
js
adc
in
shrl
mov
repz
jno
xchg
popf
mov
pop
stc
mov
fldl
adc
mov
cmpsb
jae
and
mov
or
add
jns
sbb
add
or
add
in
mov
cwtl
sub
inc
xlat
jl
xchg
sbb
push
das
shl
in
std
add
mov
mov
mov
neg
xor
clc
dec
jnp
daa
jb
scas
xchg
js
pusha
pop
pusha
pushf
test
mov
mov
inc
cmc
fxam
testb
rorb
test
shl
je
cwtl
xor
add
cmpsl
jmp
pop
push
mov
xchg
je
sbb
loopne
mov
mov
or
test
inc
cmp
sbb
scas
pusha
enter
mov
lahf
les
ds
out
loop
push
jns
and
call
push
in
pop
mov
jp
mov
mov
push
call
jp
test
sbb
xchg
outsl
cs
xchg
dec
pusha
xchg
cmp
mov
sub
std
pop
pushf
shll
adc
call
dec
sub
xchg
imul
mov
push
sbb
adc
mulb
rcrb
aad
and
stos
jo
test
ficoml
jmp
xlat
ficoms
cmp
pop
and
sbb
or
das
or
jecxz
mov
popf
call
mov
dec
mov
cltd
loop
repz
in
pop
pop
xor
fstpl
andl
pop
cmp
into
sub
gs
mov
jp
xor
es
xchg
into
add
sahf
mov
inc
jp
mov
pop
adc
aad
clc
cs
jae
inc
call
int3
or
xor
sub
jo
scas
adc
sbb
imul
jae
clc
pop
into
mov
jge
mov
cmp
pop
out
je
inc
cmpl
and
xchg
add
jne
inc
cld
das
sbb
imul
xor
inc
mov
negl
int
insb
lahf
sbb
cltd
push
sbb
and
fsubl
jg
push
int3
xchg
push
or
imul
and
lea
dec
inc
ja
loopne
cmp
mov
mov
jecxz
loopne
outsb
setne
shl
mov
mov
and
cmp
xchg
and
sub
stos
flds
mov
jge
aaa
nop
xchg
push
pop
outsb
push
adc
jae
adc
lods
ret
outsl
in
cmpsl
sbb
xchg
gs
divb
pop
js
xchg
jnp
pop
mov
stc
jg
cmc
icebp
clc
xor
stos
in
lret
and
stos
mov
out
push
jmp
mov
fcmovnu
pop
push
push
lock
fnstsw
jmp
loope
add
add
repnz
dec
fdivp
pop
insb
leave
xor
test
add
xlat
add
movsl
shlb
or
sub
cmp
or
or
xchg
popf
adc
mov
sub
push
jno
jecxz
in
jmp
movl
loop
xchg
mov
pop
loop
subl
or
scas
jmp
push
lret
cli
adc
sbb
mov
cmp
leave
push
cwtl
xor
or
repnz
in
pop
scas
pop
adc
mov
ljmp
xor
es
nop
dec
sahf
call
cltd
imul
fwait
jns
pop
pop
sub
mov
pop
and
jp
jae
pop
lahf
rol
fists
pop
or
movsl
jge
mov
lret
fs
push
xor
or
mov
dec
ljmp
cmp
cmp
xor
sub
sbb
adc
mov
jns
xchg
or
mov
mov
gs
cmp
enter
inc
sub
push
xchg
sub
in
inc
mov
nop
enter
lahf
lds
movsb
mov
jmp
xchg
decb
xor
and
stc
imul
imull
jp
paddusw
xchg
loop
bound
mov
jne
insb
xchg
adc
push
mov
repz
jmp
es
testb
test
pop
lret
dec
fimuls
into
jl
xlat
and
les
xor
jmp
cs
test
push
sub
stc
add
out
pop
adc
fistpll
stos
sub
jae
jo
clc
test
inc
mull
mov
push
pop
xlat
daa
sahf
cld
pushf
rorb
movsl
push
fisubl
cmp
fs
inc
les
pop
sub
movsl
fidivs
jmp
call
inc
push
in
daa
ficomps
outsb
mov
jl
cmovae
rcll
push
test
std
push
lret
fsubrs
xor
and
mov
inc
mov
ror
push
repnz
mov
jl
and
dec
test
mov
popf
pop
aad
xchg
aas
popf
inc
incl
inc
sub
push
ds
add
sub
inc
inc
incl
es
dec
bound
dec
adc
cmp
loop
fdivr
xchg
xchg
jno
mov
clc
je
or
jl
mov
das
jl
imul
cltd
sub
enter
mov
jne
enter
adc
dec
mov
push
bound
mov
insl
inc
es
cmp
call
rol
and
adcl
pop
mov
xor
add
push
cli
mov
popf
stos
jbe
jl
adc
inc
jae
cmp
push
dec
xor
testb
popa
subl
mov
mov
xchg
jnp
enter
jno
std
push
adc
movsb
jg
xor
fidivl
pop
shll
mov
xchg
lea
pop
xchg
addr16
and
imulb
xor
mov
push
jnp
lret
or
push
cs
jb
add
arpl
inc
xor
fbstp
lods
lret
mov
jp
xchg
enter
xorl
mov
push
sub
push
or
shrl
stos
push
dec
rcll
int3
sub
add
dec
push
leave
mov
insb
push
sub
movsl
jb
arpl
movsl
sbb
lcall
scas
pcmpgtw
sti
cmpsl
jge
mov
pop
dec
mov
jmp
jmp
imul
orb
divb
jle
subb
xchg
aad
iret
pop
inc
and
dec
sbb
aas
dec
inc
jecxz
inc
lods
push
shl
sbb
xor
into
filds
lods
or
ljmp
push
adc
add
nop
and
aas
sub
jmp
dec
fsub
movsl
add
fists
mov
adc
inc
insl
data16
cmp
sub
jae
mov
std
xchg
out
cmp
adc
aas
mov
in
aas
shrb
inc
mov
cmovo
cld
stc
test
fldt
cld
push
pmaddwd
jl
dec
insb
jno
mov
sub
push
lcall
sbb
mov
mov
out
call
das
xchg
sarl
mov
nop
imul
jae
or
inc
addr16
cld
push
cmp
sti
and
xor
mov
pop
add
test
push
jo
hlt
pusha
sbb
adc
mov
loop
pushf
mov
push
pop
imul
pop
xchg
shrb
mov
dec
mov
test
pop
aaa
rorl
fldcw
xchg
lret
mov
push
adc
addb
pop
mov
mov
mov
pop
cmp
pop
lea
xchg
cld
jbe
inc
cmc
and
addr16
cmp
or
stc
pop
cmp
and
pop
sbb
and
inc
mov
adc
es
adc
imulb
popf
int
pop
pop
sarb
daa
call
dec
out
add
fdivl
je
jecxz
aaa
mov
xor
jne
fiaddl
subb
xchg
push
ficoml
or
insb
sbb
sbb
cmp
inc
xor
sub
enter
shlb
aam
lds
lcall
xor
pop
pop
and
sbb
adc
and
ror
lcall
sbb
mov
jg
adc
dec
mov
mov
roll
aas
and
add
cs
or
fwait
movsl
fld
adc
pop
mov
icebp
stos
and
add
enter
repnz
int3
ret
xor
lock
dec
fildl
sbb
sub
test
add
ss
xorb
out
ds
mov
and
pop
repz
inc
sub
imul
inc
or
out
sahf
cmp
popa
mov
aaa
adc
mov
adc
aas
add
or
mov
mov
adc
repz
ljmp
inc
mov
dec
gs
lods
mov
call
mov
jmp
mov
lods
sub
jbe
pop
aam
jbe,pt
adc
cmpl
adc
andb
rolb
push
sub
je
dec
dec
push
nop
test
xor
sbb
icebp
and
insb
xchg
push
pop
je
inc
sub
xchg
std
mov
jle
int
dec
mov
mov
popa
aaa
jp
add
xor
pop
hlt
mov
and
fisubs
ds
movsl
pusha
mov
dec
adc
mov
mov
in
push
jle
push
iret
daa
into
push
adc
int
popa
jne
and
mov
xchg
js
jecxz
jmp
and
add
out
lods
xchg
dec
mov
mov
loopne
and
xchg
pop
xor
in
sbb
dec
jmp
cwtl
out
mov
inc
sbb
int
xchg
jns,pn
outsl
mov
shll
test
stos
mov
jl
fsubrp
out
sbb
push
push
inc
dec
icebp
sbbb
aad
mov
movsb
test
inc
in
test
sbb
inc
dec
inc
mull
lea
pop
add
fidivrs
adc
std
outsb
push
cmp
out
scas
dec
and
mov
cwtl
mov
push
xchg
push
push
loopne
repz
icebp
imul
lods
jmp
mov
aam
sub
pop
push
push
repnz
pop
mov
adc
mov
or
adc
daa
cmpsl
push
or
xchg
sub
pop
jle
xchg
daa
add
inc
fistpl
add
ret
cmp
imul
add
fs
roll
lds
das
scas
cmpsb
add
adc
jp
stos
mov
out
sub
mov
mov
hlt
lds
stos
add
pop
pushf
pop
push
or
jb
adc
pop
cld
mov
cmp
shlb
sbb
test
or
xor
mov
pop
or
mov
sub
enter
negb
mov
mov
sub
push
lea
mov
dec
dec
leave
mov
push
and
mov
dec
test
mov
arpl
dec
dec
cmp
fs
fstps
aam
jae
or
mov
cmp
addr16
add
mov
push
lods
fsubs
sbb
out
mov
or
leave
dec
cmp
lcall
pop
cmpsb
sbb
jle
inc
andl
jge
aaa
adc
xor
scas
xchg
mov
jge
fcmovnbe
shl
mov
xchg
jo
mov
imul
sub
and
push
cmp
jecxz
mov
and
cld
xor
mov
adc
arpl
adc
pop
push
aas
movsl
dec
pop
dec
push
sbb
inc
in
mov
or
fcomps
and
repz
ror
xor
in
mov
aaa
test
int
mov
jmp
xor
add
or
push
jg
mov
jecxz
cld
loope
mov
pop
divl
mov
daa
shrl
dec
fwait
and
add
sub
push
push
fists
test
and
je
xchg
sbb
pop
arpl
push
xchg
xchg
leave
fistpl
push
shll
xor
mov
or
andl
pop
xlat
sub
mov
call
sub
sbb
push
shll
dec
xchg
and
sub
in
test
adc
in
popa
mov
adc
xor
imul
pop
lock
ja
sbb
lcall
jmp
icebp
cwtl
jmp
divl
shr
adc
jmp
cmp
dec
mov
add
ret
mov
and
xor
imull
xor
mov
stos
test
dec
sarb
jg
repz
jl
fbld
mov
rolb
push
rcll
jl
scas
sbb
mov
test
sub
sahf
lret
arpl
and
cmp
add
or
insb
cmc
pushf
jbe
dec
sbb
ficoms
nop
pop
or
iret
pop
jmp
or
aas
mov
dec
repnz
sub
cli
push
inc
mov
out
stos
repz
mov
ret
adc
aaa
das
add
push
xchg
pop
add
icebp
les
or
fadds
out
stc
jmp
xor
adc
cmp
xchg
arpl
xlat
inc
outsl
fadd
mov
mov
mov
push
cwtl
xchg
mov
inc
test
and
and
aas
rol
rcrl
movb
subl
adc
cmp
in
sbb
das
cmpsl
loop
lock
loope
pop
sti
push
popf
lret
mov
rcll
pop
sub
jns
adc
adc
hlt
dec
sub
mulb
test
mov
adc
pop
cmpsl
cmpsl
push
les
nop
int3
jg
or
adcl
es
sbb
push
popa
push
push
add
cmpsb
cmc
mov
mov
jge
in
arpl
mov
dec
mov
mov
mov
mov
hlt
ljmp
jbe
aas
pop
setno
mov
xor
push
add
aaa
repz
dec
dec
in
test
pop
and
xchg
rorb
pop
ficoms
out
jnp
lahf
ss
push
leave
pop
add
pop
fnstenv
cmpsb
push
int3
cmc
fcmovu
dec
jno
movsl
arpl
cld
mov
shll
dec
test
out
xor
mov
xchg
sub
sarl
lods
decb
outsb
cltd
loop
sarb
dec
out
xchg
fistl
leave
rcl
pop
mov
xchg
ficoml
lock
adc
and
lock
je
xchg
adc
ja
test
xor
mov
imul
xchg
adc
or
add
mov
out
dec
in
out
push
sbb
sbb
pop
xor
or
pop
adc
sarb
out
mov
leave
and
lret
sbb
adc
stc
or
negb
jl
xchg
and
mov
nop
lods
rcrl
jbe
sti
insb
jle
lods
sub
sbb
dec
sbb
dec
pop
fs
in
mov
xor
ret
inc
xchg
into
and
faddl
daa
adc
aad
mov
js
mov
sbb
outsb
mov
inc
pop
mov
movsl
pop
adc
inc
aaa
dec
jnp
imul
mov
bound
sbb
cmp
out
and
cld
adc
rol
xchg
les
cmpsb
xor
xchg
test
push
out
push
ret
dec
sub
and
repz
add
mov
ja
daa
cmp
mov
mov
lret
popf
fstpl
sbb
jle
idiv
clc
fists
cmp
test
cmpb
movsb
sub
inc
loop
fcoml
dec
jo
fisttps
sbb
pop
lds
xlat
ss
push
mov
xor
aaa
fimull
aam
imul
mov
shll
push
int3
pop
mov
sbb
xchg
loop
and
dec
xor
int3
xlat
cs
lcall
xchg
outsl
orb
adc
xchg
out
mov
shlb
lods
dec
xor
sbbb
addl
xchg
js
stos
or
dec
pop
adc
mov
in
jmp
mov
int3
sbb
jmp
repz
mov
cmpsb
dec
xor
aam
out
int
pop
xor
xor
out
mov
repz
cwtl
pcmpeqd
jnp
mov
clc
test
adc
scas
popa
movsl
add
popa
jno
outsb
dec
xchg
test
arpl
push
xor
mov
cmp
sbb
or
jo
cmpsl
int
sub
or
mov
pushl
mov
out
cltd
in
jecxz
mov
insl
and
jne
xchg
sbb
and
pop
dec
into
in
xchg
out
xchg
mov
test
fs
inc
fstps
cmp
jl
in
gs
mov
mov
jge
pop
dec
sbb
jl
mov
cmp
sahf
xchg
in
call
sub
dec
sub
arpl
dec
call
pop
adc
ds
mov
jno
orl
lcall
dec
or
pusha
sbb
scas
fdiv
stos
cmc
and
sub
in
and
cmpb
addl
mov
rcrl
fs
div
and
mov
dec
mov
icebp
mov
push
pop
jb
adc
sub
sub
cwtl
pushf
mov
mov
mov
or
and
fmuls
ret
lahf
imulb
pusha
hlt
pop
xor
scas
idivb
cmc
lods
mov
loope
mov
out
das
ds
dec
or
push
out
adc
mov
sahf
cmp
repnz
push
cmc
dec
std
outsb
push
mov
mov
add
mov
push
cmp
dec
mov
fcom
and
add
inc
jge
xchg
push
out
add
sbb
roll
or
stos
xchg
lock
test
je
in
stos
lcall
ss
mov
jecxz
jne
add
ljmp
mov
mov
or
test
push
push
jecxz
add
jb
sti
shlb
pushf
adc
pop
insb
decb
and
dec
dec
and
stc
pop
leave
xchg
adc
stos
dec
daa
and
in
out
push
jno
aas
test
je
mov
outsb
test
mov
test
or
bound
inc
push
fsubrl
jl
cmpl
push
in
ds
cli
mov
scas
ds
push
imul
clc
ds
push
xchg
icebp
icebp
cli
ds
xor
adc
jnp
sarl
cmp
fldz
in
jmp
loope
loopne
hlt
sbb
adc
fbld
mov
mov
fcmove
ds
std
xor
jno
adc
jae
inc
push
icebp
leave
adc
hlt
mov
jecxz
rorb
mov
imul
inc
jb
fcoml
pusha
jle
add
pop
js
pop
je
cmp
mov
sub
mov
stos
cmpsl
outsl
lods
sbb
out
lock
dec
or
das
jg
bound
xchg
push
pusha
fidivrl
out
mov
mov
add
lods
int
jno
xchg
sub
or
addb
xchg
out
xor
scas
push
test
sar
sbb
dec
pop
mov
mov
sbb
xor
cli
mov
jo
jmp
push
shrb
int
pop
mov
push
shll
xchg
jns
push
shlb
inc
dec
ljmp
lcall
fldenv
dec
lods
jmp
lock
fdiv
xor
in
lahf
and
into
loop
loop
pop
mov
data16
adc
icebp
testb
jno
push
jecxz
jbe
rorb
popa
lock
dec
jns
aam
jae
or
shrb
mull
sbb
test
dec
movsb
std
ljmp
push
rol
faddl
xchg
push
mov
xchg
fadd
iret
pusha
loope
popa
scas
dec
movsb
jg
bnd
shrb
in
mov
mov
cltd
into
mov
lret
dec
orps
dec
jb
repz
cmp
sahf
pop
sbb
lods
mov
pop
call
leave
xchg
clc
sti
push
jle
push
xchg
add
xor
push
dec
jge
dec
int3
inc
cmp
xchg
lds
js
pop
or
jns
cwtl
dec
jecxz
push
movsl
push
sub
mov
pushf
in
xor
xor
or
pop
jno
xor
or
popa
lcall
lahf
mov
stos
shrb
push
and
push
subb
mov
pop
or
dec
repz
push
fwait
fwait
pop
loope
inc
pop
cli
ss
cmpsb
lret
mov
stos
std
repnz
sub
and
ss
xchg
in
or
push
xchg
and
daa
aas
add
xchg
enter
jmp
mov
cmp
inc
bound
xchg
test
notl
insl
pop
push
movsb
pusha
cmp
pop
inc
nop
int3
jp
push
movsb
sub
lret
jb
inc
enter
hlt
push
scas
jne
mov
inc
retw
jo
sarb
fld
cmpsb
xor
cmp
fists
sub
scas
dec
lods
shrl
or
stos
js
jle
adc
aaa
and
mov
in
sbb
adc
sbb
mov
andb
aad
test
pop
adc
nop
jle
and
xchg
test
lea
sub
mov
cmpsl
pop
roll
cmp
mov
jae
xor
inc
push
jl
xlat
xor
dec
ds
xchg
mov
shlb
cmp
push
lock
mov
divl
icebp
jb
out
xchg
shrb
dec
out
loope
add
repz
or
out
scas
ss
sbb
mov
lahf
sbb
test
test
xsha256
cmpsb
adc
sub
imul
int
fcom
mov
add
cmp
repz
and
das
repz
data16
call
sub
dec
out
sub
fmull
push
icebp
or
fcomip
xor
pop
dec
xchg
daa
cmp
test
mov
mov
je
xchg
jb
out
mov
pop
dec
fcmovne
mov
push
jecxz
or
inc
cmp
test
mov
sub
shlb
lds
sarb
sbb
popa
loopne
das
or
dec
xor
lods
mov
xchg
sbb
inc
dec
call
outsl
stc
adc
sub
icebp
sbb
adc
pop
iret
insl
sub
lods
mov
negl
inc
rcr
cmp
xor
jge
loop
inc
inc
scas
push
fidivrs
loope
xor
lods
daa
mov
push
or
sbbl
lret
adc
es
cmc
cmp
test
outsl
ds
jno
sbb
dec
in
aaa
jp
adc
imul
push
sbb
cmp
add
push
dec
jl
es
mov
je
sub
stc
sahf
out
jle
inc
dec
out
pop
xor
push
dec
rcrb
xchg
xor
scas
sbb
fdiv
hlt
jne
aaa
mov
jmp
push
adc
test
ret
test
xlat
shl
pop
xchg
mov
daa
dec
test
out
clc
xchg
pusha
and
ss
inc
xchg
xchg
jle
lock
pop
fimull
mov
sub
scas
bound
and
push
mov
or
mov
jae
pop
data16
hlt
pop
xchg
push
insb
stos
pop
pushf
sub
and
in
shr
jno
cmc
push
jnp
and
fidivl
push
mov
aam
mov
pop
flds
repnz
call
cmp
jg
xchg
sbb
imul
shrl
jno
popf
push
ljmp
out
mov
pop
xchg
cli
inc
push
jne
xchg
popa
dec
dec
out
popf
cltd
hlt
adc
xchg
xor
push
add
lea
and
mov
stos
mov
aad
cmpsl
jo
inc
leave
xchg
cs
xchg
lahf
jmp
repnz
ds
jle
subl
movsl
loop
or
sub
sub
fwait
jecxz
test
inc
stc
call
adc
nop
cmp
or
sbb
or
xor
mov
jmp
mov
cltd
add
pop
std
cmp
cmc
jo
jbe
lret
xlat
cmpsl
add
mov
jnp
decl
inc
movsl
xlat
jns
ljmp
lcallw
loop
jl
push
imul
int3
mov
into
es
stc
lds
push
scas
inc
xchg
nop
jecxz
in
xor
in
mov
fwait
cmc
pop
stos
xor
daa
jg
fincstp
js
mov
pusha
cmp
push
xchg
mov
push
mov
out
call
sbb
int
in
es
popa
addr16
inc
mov
jecxz
pusha
mov
mov
xchg
add
jo
sub
insl
lret
adc
fisubrs
scas
test
dec
mov
xor
mov
sbb
or
sbb
rcrb
out
gs
sub
jnp
adc
inc
xor
or
jns
xchg
inc
outsb
call
loopne
pop
pop
call
fnstsw
inc
xchg
ret
sar
or
adc
lods
xchg
gs
arpl
loop
bound
push
and
jge
cmp
and
dec
adc
bound
movsb
ja
rcl
xchg
or
sbb
mov
cmp
clc
popa
aam
lods
negb
into
int3
pop
push
lock
out
fucomip
pop
call
push
insl
or
jno
or
leave
sub
add
inc
xchg
add
jne
dec
out
add
fldl
push
mov
es
rcl
push
inc
iret
jae
push
dec
cmp
mov
or
jne
mov
mov
mov
mov
mov
inc
inc
pop
and
push
fldcw
shl
xlat
or
jmp
pand
ret
std
dec
lds
xorb
ss
loope
mov
sbb
sbb
stc
push
push
pop
scas
roll
outsl
imul
mov
dec
jnp
fwait
mov
or
sub
push
mov
lods
sbb
jae
ljmp
adc
call
jne
cli
ret
xor
fs
cs
dec
inc
pop
mov
outsb
pop
adc
repnz
add
cmp
xchg
push
push
aam
inc
lods
cmpsl
fnstenv
sbb
inc
fnstsw
ret
arpl
fisttpll
adc
cli
xchg
and
sub
pop
inc
mov
in
jno
aaa
mov
arpl
cmp
jns
sbb
inc
cmp
dec
push
mov
jno
inc
xchg
mov
ds
mov
mov
or
pop
fildl
movsl
dec
or
xchg
pushl
add
test
cmpl
push
push
scas
js
into
xchg
xchg
mov
and
mov
comiss
jae
mov
push
std
loopne
sub
mov
sbb
mov
or
stos
aad
xchg
insl
scas
fidivrs
add
in
and
mov
jae
mov
loopne
dec
cmpsl
push
mov
sarb
int
mov
lret
mov
xlat
div
fsubp
js
je
call
mov
fnsave
pop
xorl
test
fwait
push
push
insb
stos
lcall
popf
inc
aaa
not
xchg
rolb
insl
mov
pop
pop
dec
xchg
jecxz
sbb
out
lret
jecxz
jl
mov
cmpsb
mov
xchg
inc
inc
mov
test
lods
mov
lds
ja
pusha
js
jl
mov
mov
xor
mov
push
in
lock
push
adc
int3
movsb
pop
addr16
mov
xchg
and
call
ljmp
ud0
adc
mov
or
bound
fwait
mov
xchg
fwait
pop
mov
push
mov
and
outsb
ret
divl
jmp
sub
or
cmpsl
aam
das
jg
int3
inc
fs
pop
int3
push
frstor
shll
xor
mov
fstl
cmp
call
in
fisubrs
cmp
xbegin
pop
imul
adc
out
fs
paddsw
insb
mov
cmpsb
jnp
pop
cltd
pop
pop
mov
adc
push
mov
dec
lock
add
test
xchg
into
repnz
xor
insb
push
in
test
jno
lcall
and
mov
sarb
sbb
repnz
mov
add
cmpsl
dec
into
inc
push
pop
js
int
out
mov
sbb
insb
and
jmp
push
negl
xor
into
iret
mov
jl
mov
adc
mov
fcmove
fildll
fldt
pushw
xor
push
cld
cmpsl
push
in
roll
leave
push
outsl
fnstsw
inc
cmp
pop
cltd
xlat
out
mul
sbb
push
roll
jp
ret
loop
sti
inc
pop
cltd
movsl
adc
stc
xor
mov
xchg
lret
lock
imul
mov
mov
xor
xor
add
push
cwtl
fs
cmpl
mov
int
inc
pop
aam
imul
mov
xchg
push
cli
pop
lods
sbb
lcall
in
fcomp
xor
lcall
int3
shll
sub
ret
add
xlat
sarb
dec
xor
fidivl
and
stc
adc
inc
enter
gs
insl
jg
inc
icebp
xor
jg
in
jl
sub
xchg
xchg
xlat
dec
mov
push
and
mov
mov
outsb
cmp
inc
roll
push
sbb
pop
dec
hlt
ficomps
mov
scas
sbb
jns
add
loop
sub
jbe
xchg
sub
push
fs
or
loopne
inc
daa
je
and
icebp
push
dec
fldl
lret
cmp
cmc
lahf
inc
cmp
int3
jle
sbb
stos
mov
shll
xchg
cmp
dec
push
cmp
adc
inc
jno
and
push
fcomps
in
pop
sbb
stc
xor
jae
fidivs
outsb
in
mov
jbe
ljmp
repnz
add
jnp
mov
cwtl
lods
mov
jle
jne
cmp
aaa
shr
fisttps
hlt
aad
out
jl
and
mov
pop
fbld
mov
subb
add
sbb
sbb
fisubrl
add
pop
mov
test
push
and
jns
pushf
xor
pop
cmp
popf
mulb
and
sbbb
mov
mov
sbb
cmp
jl
cltd
xchg
xchg
jmp
pop
jns
mov
adc
pop
xor
es
sub
dec
stos
aas
jecxz
mov
xor
loop
xor
aam
jp
es
and
xchg
cmc
repz
rclb
bound
xchg
mov
test
push
in
popf
pop
mov
out
cld
sahf
popf
mov
push
cmp
fstl
rorb
dec
cmp
mov
mov
inc
cltd
adc
cld
je
rorl
or
int3
fidivrl
fcmovne
movsb
in
out
mov
sbb
movsl
jg
push
lahf
cmp
ret
insb
test
fcomi
cmp
inc
int
frstor
add
xor
mov
rcr
aad
pop
push
popa
cmp
sbb
add
rorb
mov
add
sub
push
loop
pop
daa
and
arpl
mov
sbb
aad
in
clc
mov
mov
cmp
mov
and
bound
or
jne
sub
mov
push
shrl
pop
jecxz
sar
mov
mov
cwtl
pop
mov
and
out
xchg
sbb
adc
repnz
out
mov
data16
xchg
dec
mov
sub
int
mov
aas
xchg
mov
ja
adc
sahf
push
iret
shr
or
sti
hlt
addb
sub
inc
mull
hlt
aas
mov
jne
icebp
push
sbb
cltd
jb
pop
flds
jl
test
mov
loope
data16
sbb
mov
dec
in
stos
sbb
ss
lahf
add
out
dec
sub
xor
jb
repnz
mov
push
xchg
sub
js
xorb
jl
mov
push
or
mov
cmpsl
popl
sahf
js
enter
pop
outsb
mov
sub
jbe
adc
or
adc
test
aad
lret
add
jne
sub
cmp
sbb
cld
mov
cld
jg
es
in
xor
inc
pop
add
out
scas
and
xchg
icebp
loope
in
mov
iret
addr16
xchg
dec
inc
jg
dec
push
cmpsb
inc
mov
imull
pop
cltd
aas
fstcw
xor
movsl
pop
push
inc
or
test
inc
add
mov
imul
mov
pop
or
je
fs
jne
cmp
test
aaa
movsb
cltd
cmpsb
clc
mov
in
xchg
xchg
jnp
fsub
push
inc
push
insb
cmp
jp
and
mov
sahf
pop
leave
adcb
faddl
dec
and
js
push
inc
and
jmp
insl
mov
push
mov
outsb
add
xor
and
lock
xor
call
mov
iret
loopne
aad
mov
xchg
or
mov
popa
cld
xchg
gs
adc
or
rcr
rol
dec
sbb
sti
push
cmp
icebp
cmpl
inc
js
push
mov
xorl
or
test
cltd
pop
loope
inc
repnz
in
xchg
scas
mov
lahf
push
jp
add
in
notb
test
movsb
sahf
pop
jg
fs
mov
xor
cli
fwait
xor
xor
add
das
xor
std
mov
sbb
out
push
call
loope
outsl
sarb
or
or
and
mov
idiv
jo
icebp
xor
cmp
inc
and
sub
iret
test
cmp
ret
enter
ret
sbb
cmp
cmp
test
pop
xchg
out
lock
sbb
xchg
fidivrl
mov
jne
xchg
int3
ljmp
mov
insb
into
ja
rclb
lret
xchg
repz
int3
or
jae
mov
dec
pushf
push
sub
psrad
outsb
cmpb
adc
dec
stos
xor
daa
fdivrl
outsl
test
sbb
jmp
daa
or
adc
addr16
pop
adc
fmull
sbb
xor
or
jne
es
mov
pop
lds
and
dec
sub
pushf
mov
imul
inc
push
xor
jecxz
imul
fwait
cmp
xchg
cwtl
stos
bound
stos
imul
inc
pop
ret
pop
rorb
je
stos
sbb
shrl
inc
xor
lds
daa
notb
dec
cmp
cmpsl
iret
adc
inc
inc
mov
js
scas
xlat
sbb
stos
cli
adc
cmp
cmp
mov
lods
cmp
dec
adc
mov
mov
mov
add
pop
mov
sti
pop
or
lods
xchg
repz
dec
iret
adc
pop
sub
outsl
stos
rclb
cli
dec
cmp
flds
imul
adcb
insl
or
xchg
adc
pop
cmc
pop
stos
imul
sub
clc
inc
and
mov
cltd
push
adc
les
push
sub
or
mov
mov
popa
mul
jno
ja
sahf
rol
mov
imul
shlb
fstps
inc
loope
jb
mov
cmp
and
add
iret
mov
jne
mov
aaa
cmpsl
sub
movsl
jnp
in
and
mov
pop
mov
fs
inc
or
lahf
cmpsb
xchg
rolb
lock
adcb
inc
dec
mov
stos
jbe
outsb
inc
jo
jno
mov
test
mov
pop
fstps
add
push
xlat
into
daa
jmp
aaa
aas
jno
dec
lahf
mov
incb
inc
lret
pop
add
xchg
xlat
pop
test
mov
ja
and
sbb
push
cmp
test
popa
xchg
mov
xchg
dec
mov
add
mov
mov
inc
xor
shl
xchg
add
xchg
jmp
imul
shrl
daa
sub
rcll
xlat
movsl
rclb
mov
int3
pop
sub
loopne
loop
lods
jge
push
dec
jmp
mov
add
xchg
fstpl
std
cs
xchg
pop
es
ret
push
dec
movsb
stos
adc
adc
sbb
mov
push
jle
cltd
call
fs
or
data16
jmp
imul
and
jno
icebp
jecxz
fadds
sub
dec
push
scas
pop
mov
sbb
pop
les
sbb
pop
push
sub
out
out
dec
sbb
lret
leave
and
lods
and
mov
mov
add
jecxz
mov
lret
clc
repz
stos
jns
or
inc
aad
xchg
adc
and
das
xlat
shl
or
xor
jp
nop
pop
jg
mov
inc
clc
jecxz
lods
push
imul
and
movsl
xor
xchg
sub
enter
dec
pop
ds
jnp
mov
sahf
adc
push
sbb
dec
ss
fcoml
xchg
or
jae
cwtl
push
push
sarb
sbb
mov
nop
add
scas
std
adc
test
mov
call
push
add
movsb
mov
dec
es
sbb
fcmovb
mov
xor
inc
xlat
jp
cwtl
jae
insb
push
pop
dec
repz
notb
fisubl
push
jno
push
xchg
stos
fst
push
sbb
mov
jns
and
push
dec
sub
mov
sub
lock
ficomps
inc
jle
das
daa
mov
lret
das
adc
xlat
jnp
sub
xchg
mov
pusha
sbb
sub
pop
inc
stos
loope
cmpsb
xor
in
jo
inc
es
jecxz
mov
icebp
push
mov
inc
cli
movsb
xor
mov
rolb
mov
imul
jns
outsb
and
sarl
push
sub
xor
mov
mov
push
and
xchg
or
lea
cmc
repz
inc
data16
dec
lret
call
out
and
lods
cmp
out
jmp
xchg
mov
lds
sbb
push
mov
jno
out
push
mov
or
rorb
push
or
and
repz
in
daa
enter
outsb
push
lahf
pop
sbb
in
inc
in
pop
nop
xor
aad
inc
or
mov
mov
push
shl
hlt
or
mov
jmp
pop
fldt
das
xlat
dec
in
outsb
addl
ret
insb
xor
imul
add
xchg
adcb
lret
mov
xorb
pop
ror
dec
lcall
mov
push
cld
ljmp
pop
jmp
frstor
pop
jl
and
push
lret
ja
sbb
mov
sbb
jecxz
and
inc
dec
pop
fcmovnb
dec
je
mov
mov
addr16
out
dec
mov
cmpsb
xchg
mov
cli
mov
push
addr16
lods
adc
data16
mov
or
and
jns
call
mov
dec
xchg
les
aam
jmp
rol
movsb
shl
and
fldcw
in
sbb
hlt
dec
subb
movsb
sub
inc
sub
pop
out
cmp
cli
shl
lret
or
lret
xor
stos
xor
clc
loopne
iret
and
xchg
mov
arpl
xchg
mov
insb
xchg
js
int
mov
cld
out
inc
enter
aad
mov
adc
ljmp
inc
inc
dec
out
and
mov
arpl
add
call
cmp
scas
mov
pushf
ret
dec
inc
jge
or
dec
ja
dec
test
jae
stos
insl
test
inc
adc
and
insl
mov
xor
cmc
or
jg
add
out
xchg
or
fs
push
xchg
xor
aam
js
movsl
ds
popf
cmp
adc
movsl
pop
rol
jbe
ret
lods
aad
stc
pop
cltd
xchg
dec
push
mov
popa
cmpl
mov
jnp
mov
pop
cmpl
movsb
add
mov
pusha
sbb
cli
les
enter
aas
cmpb
outsb
into
out
mov
or
and
xchg
pusha
or
movsl
dec
sahf
mov
inc
adc
fld
jecxz
and
insb
xor
iret
cmp
enter
rcrl
dec
arpl
and
cmp
pop
mov
subl
rolb
cwtl
push
insl
dec
lods
je
sbb
xchg
out
rclb
xchg
in
inc
call
mov
mov
roll
loop
popf
imul
mov
xor
inc
lea
mov
shll
sarl
scas
jns
ret
imul
loope
outsb
test
cltd
cmc
xlat
clc
mov
push
shlb
jnp
mov
push
lock
in
mov
pop
test
scas
mov
push
das
icebp
sub
test
mov
stc
test
nop
sub
outsl
addr16
fiadds
les
mull
repnz
and
push
aam
add
hlt
les
sbb
mov
xor
inc
sti
and
int
mov
add
jbe
inc
fsts
mov
push
mov
ds
push
mov
sahf
fbld
jecxz
and
xor
into
add
shld
out
mov
movb
or
push
mov
mov
dec
push
repz
int
stos
fcmove
fdivrl
mov
xorb
pop
inc
push
and
cmp
xchg
int
fidivrs
adc
fstp
mov
incl
cmp
add
xchg
mov
scas
cmc
mov
mov
insl
daa
and
fistps
push
data16
fisubl
sti
xchg
je
lods
sbb
xchg
push
xchg
subl
mov
in
xor
int
mov
andl
mov
cmc
dec
movl
jns
addr16
or
sti
mov
and
js
sub
jne
jae
call
bound
js
arpl
idivb
loopne
pop
repz
dec
push
xchg
mov
jns
stos
jecxz
mov
sbb
sub
dec
push
fimuls
mov
int
jmp
mov
dec
sbb
adc
inc
mov
insl
ret
int
call
push
sbb
mov
popf
int3
mov
inc
in
imul
mov
loopne
or
or
xlat
xor
das
mov
xor
push
mov
sbb
hlt
shl
inc
test
ja
xor
push
add
sbb
push
pop
adc
mov
dec
out
in
lods
out
sub
push
ja
enter
and
les
mov
aam
out
push
or
pop
sub
enter
jnp
cmp
lea
pop
adc
ret
push
push
adc
insb
fbstp
adcb
and
arpl
sbb
insl
add
mov
pop
dec
test
in
xor
mov
sbb
enter
clc
mov
call
mov
mov
push
mov
fmul
gs
stos
ror
pushf
push
xchg
mov
push
js
lods
push
xor
dec
add
mov
or
fs
stc
sub
inc
and
xlat
fwait
push
dec
push
xchg
cmp
repz
mov
and
outsl
stos
daa
lea
rolb
insl
and
mov
xchg
leave
push
in
dec
push
jle
inc
aas
cli
mov
enter
xchg
add
xchg
in
lods
ljmp
movsb
sbb
in
movsb
xchg
mov
out
mov
xchg
add
push
adcb
cs
out
jg
stc
push
jbe
jecxz
xchg
lcall
sbb
sub
adc
dec
jne
fimuls
push
adc
stc
xlat
push
inc
cmp
fidivrs
push
sbb
fsubs
sahf
push
jmp
sti
dec
mov
xchg
and
testb
repz
loopne
adc
xor
pop
cmp
enter
aad
push
ja
mov
in
mov
and
fwait
pop
add
inc
fs
mov
adc
fdivrl
pop
dec
sbb
jl,pt
pop
adc
pop
xchg
subl
xchg
add
aaa
ljmp
xor
xchg
add
call
cmpsl
sarb
dec
lods
bound
cli
add
filds
shll
or
inc
push
mov
jl
imul
aaa
add
gs
xchg
pop
movsl
xchg
mov
or
mov
clc
lods
es
addr16
pop
bound
into
cmpsb
pop
dec
xchg
in
lcall
pushf
jo
dec
inc
or
jge
cwtl
pusha
notl
imull
fsubs
outsl
sub
repnz
add
enter
inc
jo
cmpsl
call
out
xor
xchg
lahf
inc
fwait
pop
adc
inc
jns
mov
iret
rcll
dec
js
out
cld
xchg
jecxz
sbb
addr16
sub
xor
cmp
outsl
call
xchg
ja
stc
and
mov
xchg
cwtl
dec
jnp
mov
testb
inc
stos
adc
cmpsb
pop
mov
xchg
or
add
jbe
jge
pusha
aaa
fwait
dec
in
pusha
xor
lea
scas
xor
and
sub
call
xchg
jg
or
pop
inc
xor
or
sbbb
mov
sahf
jg
add
lods
inc
cmp
leave
mov
jo
leave
loopne
cs
jge
ret
xor
lock
sbb
jmp
nop
popa
mov
mov
sbb
dec
cmp
push
cmp
jnp
roll
dec
movb
lret
mov
or
sub
dec
jo
adc
cmc
shl
cmc
dec
jecxz
lock
ljmp
int
popf
ljmp
js
push
lods
movsl
cmp
xlat
imull
xor
outsl
loope
cld
repz
dec
out
jecxz
and
aad
daa
xchg
inc
xchg
or
mov
xlat
and
mov
mov
cmpsb
or
cmpsb
inc
fisubrs
stos
shlb
dec
imul
xchg
ret
fs
jge
out
dec
pop
add
leave
xchg
xchg
cltd
xor
push
mov
add
je
not
rorb
scas
pop
jg
cltd
dec
and
add
shl
sub
inc
int
pop
mov
sbb
push
or
push
add
and
cmpsb
adc
jmp
cmp
jns
fildl
inc
ss
jmp
mov
test
insl
daa
push
xlat
adcl
mov
dec
fmuls
bound
lcall
mov
pushf
leave
pop
rcrl
jp
lahf
push
sbb
or
xchg
and
dec
xor
repz
loopne
das
cmpsb
cmp
push
call
cld
cmc
inc
dec
ds
dec
add
mov
in
mov
adc
mov
inc
fistpll
arpl
dec
loopne
dec
shlb
pop
cmp
push
shl
mov
stos
mov
in
or
fadds
dec
push
sahf
cmp
push
adc
ret
cmc
fs
xor
aaa
and
iret
aas
mov
mov
mov
ja
sarl
movsl
imul
les
mov
and
pop
mov
daa
lds
jge
pop
push
pop
sbb
popf
sbb
bound
mov
push
and
addr16
mov
ficoms
testb
ret
xchg
xchg
outsl
mov
cwtl
push
jns
push
xchg
fdivs
int
jno
and
add
inc
aaa
in
rcrl
xchg
jmp
lret
out
inc
inc
scas
in
xorb
jmp
ds
mov
jb
mov
add
inc
ret
sbb
cmp
xchg
and
call
sub
add
pop
mov
test
cld
mov
mov
int3
pop
lahf
pop
scas
mov
xlat
mov
js
or
mov
addl
mov
out
push
arpl
icebp
xchg
or
bound
or
cmpsb
add
ja
push
insb
pop
stos
lds
adc
jmp
or
push
stos
xorb
jmp
out
ss
dec
es
into
lahf
mov
sbb
mov
adcl
out
or
dec
xchg
jle
bound
sub
mov
cmp
adc
lcall
push
mov
sahf
or
xchg
pusha
mov
shl
scas
mov
sbb
ljmp
sbb
mov
xorl
mov
cmp
pop
test
sbb
loope
arpl
fldcw
sti
and
pop
sbb
imul
mov
pop
ret
call
cmpsl
pop
xchg
xchg
mov
dec
cmp
inc
jge
lds
cwtl
jo
mov
jecxz
pop
pop
movsl
fs
sub
xchg
in
jmp
and
lods
int3
in
inc
sbb
test
xchg
sbb
ds
pop
push
push
fs
aas
and
push
ret
movsl
push
mov
hlt
movsb
pop
loopne
push
xlat
lea
xor
into
insl
sbb
pop
xchg
scas
frstor
mov
add
pushf
lock
loop
in
mov
xchg
popf
push
ret
xor
pusha
inc
out
push
cmp
mov
mov
int
mov
pushf
inc
out
xchg
pop
pmaxub
cmp
leave
popa
lea
shll
aad
jmp
inc
test
jae
mov
scas
jo
mov
push
sbb
and
daa
push
stos
je
xchg
lcall
push
add
inc
bnd
sahf
outsb
sub
fnstcw
cltd
mov
repz
in
sub
or
push
or
pushf
or
pop
inc
push
mov
mov
lahf
adc
jnp
push
movsb
pop
mov
in
jae
sbb
lods
add
orl
jg
ja
sub
insb
add
push
push
jne
and
cmpsl
mov
ds
daa
fidivl
cmc
aas
cmp
sub
popa
scas
repz
adc
mov
cmp
inc
aas
mov
icebp
imul
sub
sbb
pop
out
les
sbb
in
jle
mov
popa
fwait
ja
cmp
cli
in
mov
pop
outsl
push
push
pop
inc
out
push
mov
stos
lods
and
lahf
and
shrb
outsl
hlt
lods
fs
and
cmp
mov
nop
xchg
cmp
pop
jle
pop
xchg
push
fs
dec
ja
sub
mov
pusha
sbb
iret
out
pop
aas
inc
adc
mov
and
loope
push
mov
fnstenv
repz
mov
lret
cld
mov
pop
imul
mov
pop
insb
mov
jge
fsubrs
add
mov
ds
ja
push
lret
lea
pop
cmp
pusha
xchg
test
rcll
and
repnz
adc
xchg
inc
icebp
pop
dec
in
int
fscale
push
push
stos
xor
imul
push
jns
call
cmpsl
pop
lahf
add
sub
xor
sub
mov
fs
lock
pusha
stos
stos
push
sahf
insl
or
bound
test
and
adc
push
mov
inc
ficomps
cmpsb
push
inc
loop
push
jmp
mov
inc
das
lea
test
and
push
dec
xor
aam
xchg
or
mov
mov
and
outsb
jecxz
iret
pop
in
sti
dec
inc
stc
clc
mov
push
outsb
out
loopne
mov
ret
aam
add
test
fsubl
sbb
adc
or
shr
lahf
cmp
push
ret
sbb
test
sub
daa
sbb
xchg
addr16
leave
dec
or
movsl
xorl
insl
loop
or
jnp
icebp
insb
jns
movl
enter
pop
sub
mov
out
dec
ljmp
cmp
lcall
push
mov
repz
jo
addr16
es
pop
inc
fs
in
das
inc
or
adc
aaa
adc
add
pop
push
sub
ja
test
and
lock
sub
insl
aam
lds
mov
in
cmp
pop
xchg
sub
add
cmpsb
push
adc
sbb
xchg
cli
out
mov
or
pop
outsl
aam
mov
and
mov
int3
sti
inc
lods
movsl
pop
push
add
mov
adcl
push
fstpt
push
pusha
mov
mov
xchg
pop
outsl
mov
pop
adc
push
or
and
inc
cmpsl
imul
rcrl
push
out
xchg
push
xlat
popa
cwtl
cmp
adc
cltd
icebp
fisttps
out
arpl
mov
push
jo
jle
movsl
sarb
xchg
es
xchg
and
sub
test
add
lret
nop
adcl
dec
iret
out
cmp
pusha
xor
ljmp
sub
popa
test
inc
sbb
leave
stos
out
loope
jo
sbb
loope
sub
out
popa
enter
sub
icebp
leave
arpl
into
test
mov
and
push
mov
shlb
test
cmp
les
mov
jae
hlt
xchg
jp
clc
sub
mov
dec
movsl
fs
and
mov
jne
lcall
outsb
adc
xor
adc
add
ret
call
xchg
lret
push
shrb
aad
cmp
pop
lcall
popa
shrb
inc
or
sbb
ss
push
add
and
mov
jnp
jp
sbb
loop
or
imul
fbld
push
mov
add
mov
test
mov
popf
and
pop
aaa
pop
mov
testb
gs
not
fcmovbe
xor
mov
in
xchg
in
enter
js
rcrb
xchg
fwait
data16
jecxz
adc
lret
xor
and
sub
fisttps
loopne
push
ss
lds
pop
mov
push
loope
jl
shrl
jmp
adc
push
in
cmpsl
stos
add
fisttpll
cs
jg
mov
aad
mov
adc
push
sbb
xor
inc
test
ret
pop
xchg
jl
sbb
mov
mov
add
mov
xlat
sbb
aam
mov
pop
sub
dec
adc
push
std
cmp
add
sub
mov
movsb
aad
inc
fwait
loope
scas
jge
stos
nop
cmpsb
arpl
add
in
add
sbb
sbb
adc
repnz
push
pop
loopne
leave
xchg
xor
mov
push
rcr
mov
adcl
std
xor
push
mov
push
mov
fdivrl
jo
jne
mov
inc
enter
adc
fisubrl
stc
stos
xor
lret
inc
rorl
jb
mov
lock
out
lods
out
popf
fstl
add
adc
enter
mov
ret
mov
inc
mov
push
lods
lea
jg
lods
aam
mov
inc
xchg
xchg
adc
enter
adc
movsl
xchg
or
lock
repnz
sbb
ret
cli
repnz
loope
test
roll
icebp
xchg
pop
shll
push
push
test
sahf
inc
xchg
mov
ljmp
add
inc
lret
out
sbb
xor
inc
cmp
xchg
lcall
dec
mov
jp
mov
pop
lahf
cli
sub
out
js,pn
push
in
aaa
in
or
inc
iret
cmpl
fwait
or
incl
lods
sbb
mov
cmp
mov
shll
idiv
cli
mov
mov
pop
pop
mov
push
dec
data16
inc
and
push
sbb
inc
fnstsw
rcrl
mov
pusha
sbbb
pop
pop
test
andb
mov
adc
and
mov
subl
dec
jge
negl
loopne
mov
das
mov
dec
fs
ljmp
test
cwtl
lock
push
inc
push
push
scas
inc
mov
in
push
pop
sbb
orb
xchg
dec
xchg
movsb
mov
into
push
insl
jb
fwait
jmp
push
cmp
mov
pushf
cmc
lds
xchg
int
aas
cli
push
sahf
clc
and
xchg
or
dec
rolb
adc
pcmpeqw
mov
out
inc
adc
or
adc
jae
adc
pop
je
out
push
xchg
jl
outsb
test
imul
push
or
shl
pop
and
inc
call
xchg
movsl
lods
repnz
mov
imul
mov
push
out
push
mov
iret
dec
jg
mov
out
push
mov
lds
cmp
mov
lods
sub
and
test
or
iret
test
mov
andl
xor
xchg
push
movsl
or
out
loop
jnp
sbb
decb
inc
test
scas
xchg
pop
mov
mov
loope
cs
and
adcl
push
adc
mov
insl
mov
test
inc
push
sub
adc
pop
adc
in
and
test
xor
lret
or
inc
add
stc
cmp
ds
decl
jmp
push
sbb
push
test
divl
adc
out
xlat
or
pop
cs
push
sub
es
mov
fs
jns
xor
lods
sub
sub
dec
dec
mov
repz
cmpsb
outsl
jb
lahf
daa
pop
test
jmp
adc
js
movsl
mov
adc
jnp
xor
jb
cmp
cmp
sbbb
xor
sbb
pop
fmull
cmc
sti
add
cmp
mov
ljmp
mov
test
or
push
cld
fwait
xor
push
jl
decl
xchg
lret
clc
mov
bswap
mov
dec
mov
sbb
ficompl
push
sbb
test
add
rep
mov
xchg
pop
mov
or
js
mov
icebp
loope
jmp
xchg
std
pop
test
in
je
and
dec
jb
pop
jo
xchg
cmpl
lret
dec
cmp
inc
pop
cmpsl
ja
mov
fildll
mov
popl
aaa
xor
ret
and
daa
pop
mov
mov
xchg
shll
cmp
imul
mov
push
iret
insb
iret
push
dec
push
push
mov
and
add
dec
sbb
outsb
fdivrl
pop
shl
mov
pop
imul
push
imul
pop
in
fwait
fwait
testb
xor
dec
or
shlb
push
xchg
mov
je
outsb
rcrb
xchg
xlat
jmp
repz
or
enter
sub
fcmovnbe
stc
mov
lods
fistpl
andb
add
and
out
mov
mov
imul
loope
lret
mov
or
lret
or
add
mov
call
fsubrp
mov
scas
test
std
rcrb
jl
clc
sub
ds
hlt
std
in
push
xchg
dec
mov
inc
jecxz
test
pop
cmp
popa
subb
push
divl
lret
xchg
and
or
call
clc
or
inc
dec
pusha
sub
out
out
lods
mov
clc
out
int
lret
movsl
mov
push
fs
jo
jae
mov
mov
dec
loopne
cmp
je
push
cmpsl
out
jecxz
inc
les
decb
psrlw
clc
loop
mov
jl
push
dec
push
mov
sub
push
cld
mov
in
mov
inc
ljmp
mov
pop
fisttps
mov
int3
lret
shll
cmp
movsl
add
xchg
loopne
pop
add
jl
lret
mov
rorb
xchg
jge
sub
dec
shll
ss
bswap
or
dec
add
ja
shlb
test
xor
les
ret
push
dec
dec
mov
mov
sbb
mov
mov
or
shr
jecxz
mov
ljmp
and
mov
sbb
push
mov
adc
adcb
into
cld
outsl
pop
loope
push
mov
mov
jg
pop
sar
sbb
pop
mov
adc
mov
dec
sar
nop
movsb
mov
push
sbb
cmp
int3
and
fwait
adc
pushf
fsubl
mov
sarb
aas
arpl
das
ret
icebp
scas
lret
scas
pop
test
mov
cmp
xchg
mov
adc
pop
xchg
sub
mov
xchg
push
mov
lahf
or
add
mov
loopne
mov
mov
mov
js
sbb
bound
push
mov
dec
sub
xchg
icebp
push
xchg
pusha
pop
mov
mov
pop
bound
xor
push
int3
rcll
mov
mov
movsb
jno
add
gs
fdivrs
repz
mov
clc
stos
out
sub
inc
adc
in
aas
pushl
lea
enter
test
sbb
add
push
mov
call
pop
mov
ss
mov
stos
sub
lods
das
xor
push
cwtl
push
jns
and
push
dec
mov
in
or
add
jb
sub
loopne
fnstsw
test
sbb
scas
and
jecxz
and
pop
imul
lock
xchg
lea
repnz
inc
cmc
sbb
or
and
dec
add
adc
push
sub
pop
lea
jns
out
movsl
inc
sbb
or
out
movsb
in
sbb
jbe
dec
pop
test
int3
push
inc
daa
mov
add
shl
lods
push
syscall
lcall
dec
fsubs
fdivrp
test
ljmp
sti
or
xorb
cld
or
sbb
fists
std
and
loope
inc
or
jge
sbb
aad
icebp
dec
aad
push
test
xchg
int
ret
outsl
xor
into
add
movlps
addb
xlat
jo
push
subl
pop
in
in
adc
out
mov
push
dec
mov
movsl
sub
mov
dec
ret
scas
push
add
stos
or
xor
aas
mov
scas
int
sbb
addl
jns
test
fs
popa
jmp
dec
pushf
cld
sbb
int
mov
std
pop
lds
out
int
xchg
jp
aaa
add
mov
in
in
int
inc
aam
mov
adc
xchg
mov
jno
imul
pop
adc
lret
mov
in
mov
inc
js
in
fists
loopne
jecxz
pop
dec
jecxz
mov
or
mov
ret
xor
push
sbb
jns
std
movsb
adc
out
lcall
in
add
jle
fcomip
jecxz
test
pop
or
cltd
mov
fs
aaa
xor
mov
adc
push
jo
sahf
mov
cld
and
aas
stos
sarb
push
popf
ljmp
enter
pop
inc
push
mov
adc
dec
or
dec
ret
and
mov
mov
sti
js
mov
cmpl
subb
or
lret
inc
xor
inc
dec
popa
dec
icebp
adc
ja
xor
and
out
leave
push
xchg
aas
sub
fnsave
iret
sbb
push
or
test
sbb
pop
xchg
mov
movsb
adc
mov
push
sti
xchg
push
sub
dec
fiadds
xor
int3
jl
dec
xor
or
ja
add
push
pushf
dec
test
mov
into
inc
jecxz
adc
mov
cmp
inc
insl
lock
xlat
inc
pop
add
add
pop
lea
xchg
and
cmp
inc
and
cmp
fiadds
lret
pop
jmp
mov
orl
cs
xchg
mov
aaa
loopne
add
xlat
push
sarl
dec
imul
das
or
dec
dec
psrlw
lods
pop
jb
mov
fdiv
shl
dec
jecxz
fidivs
pop
jne
mov
xchg
idiv
sarl
jae
cs
in
xchg
sub
andb
clc
xor
movsl
pop
pop
or
xor
jmp
ret
es
hlt
or
dec
mov
fildl
lds
mov
adc
xor
adcb
in
ds
mov
outsl
sbb
fidivrl
dec
inc
add
pop
cmp
cli
dec
xchg
insb
jmp
mov
outsb
les
and
sub
icebp
sub
stc
dec
add
jge
idiv
sbb
ds
xchg
fisttpl
dec
mov
inc
xchg
adc
jae
push
ljmp
cmp
call
out
lret
rcll
movsb
inc
aaa
mov
cmp
sbb
dec
dec
and
push
xchg
es
dec
jnp
gs
sahf
imul
imul
mov
cmp
std
ret
dec
out
push
jmp
rolb
push
mov
dec
aas
pusha
scas
rclb
jns
pop
mov
xchg
cld
call
outsb
lods
push
ss
pushf
das
hlt
scas
jmp
loop
mov
int
mov
pop
push
insb
je
testl
add
aaa
xor
xchg
outsb
mov
in
fistl
inc
jge
orl
or
outsl
sub
push
push
push
test
and
arpl
leave
hlt
pop
fldt
ja
cmpl
aaa
pop
jp
sub
mov
jle
xorl
and
cmc
inc
xchg
sti
call
dec
cld
cmp
pop
loopne
in
xchg
outsl
mov
inc
lahf
jo
in
cmp
sub
sbb
fldl
sahf
cmc
pusha
xlat
imul
rcrl
mov
cmc
cld
lea
outsl
fiaddl
insl
cs
lea
lcall
cld
in
cld
and
push
pop
popf
xlat
cmp
and
ja
and
movsl
xor
shll
out
cwtl
inc
inc
in
sub
and
ret
and
jl
mov
sbb
dec
add
jge
test
jb
push
sbb
mov
fnstsw
mov
fldcw
pop
jae
jecxz
mov
jbe
sti
lahf
dec
imul
out
add
pop
call
lods
inc
dec
imull
xor
lret
cmp
push
je
mov
aas
jnp
nop
ja
loopne
pushf
vpsubsw
add
imul
and
data16
and
shlb
inc
pop
scas
and
mov
cmpsb
dec
mov
icebp
ds
push
in
pop
in
pushf
ret
adc
scas
imul
mov
sbb
inc
or
xchg
ss
hlt
or
in
mov
jne
popf
mov
stc
xchg
test
xchg
xchg
pop
mov
inc
lds
fsubs
mov
cmp
jmp
add
add
call
shll
mov
cmp
push
inc
int
mov
add
shlb
stos
mov
outsb
inc
pop
cmp
clc
cmp
push
mov
xchg
mov
inc
das
push
push
xor
push
dec
dec
mov
lods
popa
sbb
cmc
in
dec
idivl
push
cmp
loopne
roll
jno
mov
ja
dec
dec
cmp
pop
push
aad
mov
insl
sbb
test
arpl
stc
jp
mov
add
pop
lods
pop
xchg
pop
stc
ja
fdivr
das
lds
enter
scas
pop
xlat
outsb
test
and
mov
pushf
out
dec
ja
sub
mov
insl
and
mov
test
iret
iret
push
fldl
call
cmovne
cmc
inc
ffreep
fisttpl
lahf
sub
sub
outsb
sub
xor
push
lea
xor
cmpsl
pop
pop
cmp
dec
out
cli
pop
cmpsb
inc
js
ja
stos
or
loopne
xor
arpl
js
pop
mov
and
pop
jnp
pop
shrb
cmp
add
sarl
aam
out
jl
call
lahf
ret
cmp
in
sub
xor
add
add
iret
adc
dec
xchg
jns
pop
ret
in
nop
das
mov
and
sub
and
sbb
jg
push
scas
aaa
mov
std
inc
and
cmpsb
mov
or
fwait
scas
test
mov
mov
mov
ret
inc
mov
or
pop
int
sub
cmp
loopne
push
push
and
lahf
push
lret
xchg
fwait
arpl
test
push
xchg
loop
xchg
cli
push
xchg
push
fcoms
std
shrl
push
dec
xchg
dec
inc
dec
movsl
sbb
mov
scas
sahf
insb
aas
mov
xor
cltd
je
push
fldl
jnp
and
pop
cmp
push
cli
nop
scas
xor
clc
add
imul
sbb
addr16
sarb
insl
lret
jecxz
divb
test
rorb
cs
ljmp
cmp
push
hlt
mov
fnstsw
pop
push
add
outsb
sahf
xor
lahf
int
and
ret
ss
lock
xchg
repz
jno
cltd
ljmp
clc
cli
fsubr
into
push
mov
shlb
out
gs
inc
adc
stc
clc
jmp
jl
mulb
xchg
or
das
std
ljmp
les
sub
pop
lea
mov
std
nop
js
mov
xchg
inc
loop
fidivl
nop
push
in
loop
jle
xlat
fwait
push
ds
rorb
or
test
addr16
aam
test
lcall
in
jge
jo
or
ret
mov
nop
sub
push
push
push
sahf
sub
in
int
int
call
mov
pop
stos
jl
pop
fistpll
popf
add
mov
mov
jnp
pop
jmp
xor
xor
adc
jmp
cmp
sti
pop
daa
mov
ljmp
aaa
or
sub
cmp
or
cmp
lcall
and
pop
cld
cmp
pop
and
sbb
adc
mov
fnstcw
aam
xchg
jp
mov
imul
and
sbb
dec
or
out
lock
cmp
rcrb
clc
arpl
mov
addb
std
and
clc
pop
add
and
rolb
jmp
lods
ss
push
xor
xchg
pop
lcall
push
push
ljmp
outsb
jo
mov
mov
mov
dec
js
insb
aaa
fiadds
testb
jnp
sbb
jp
cwtl
jmp
rolb
outsb
push
ss
xor
stc
repnz
or
dec
in
mov
sub
push
adc
cli
jns
stc
jns
adc
pusha
imul
mov
dec
cmp
dec
cmp
aaa
jle
push
pop
xor
jmp
xchg
filds
add
push
push
lahf
mov
sbbb
movsb
imul
add
pop
loop
inc
dec
jbe
dec
push
lea
call
jg
adc
jmp
test
xor
std
mov
mov
add
fwait
pusha
loope
push
dec
jns
std
cmp
flds
jl
dec
cmc
rcrl
cmc
and
cld
mov
insb
sbb
iret
mov
adc
mov
popf
cltd
je
fs
scas
cmc
test
mov
pop
sub
adc
pop
cmp
inc
cmp
push
mov
mov
ret
mov
je
lds
dec
xor
dec
setl
cmp
xor
in
jae
cmpsl
or
xor
mov
ds
out
repnz
je
dec
mov
mov
jns
jo
stc
mov
ret
jecxz
push
dec
jne
sbbb
xor
hlt
or
clc
xchg
mov
pop
and
sub
xchg
into
or
fistpll
adc
lods
and
add
lods
sbb
add
lret
out
in
adc
mov
pop
jg
mov
out
lret
or
add
xchg
ret
sub
sub
cmovs
stos
sub
pop
dec
sub
data16
out
sub
pop
push
arpl
push
xchg
cmp
pop
xchg
fadds
mov
add
mov
ds
inc
fnstenv
imulb
push
xor
sbb
fisttpl
scas
mov
das
sahf
mov
or
inc
ss
jb
insl
test
aaa
mov
loopne
les
mov
xor
lds
in
imul
scas
add
mov
movsl
mov
dec
push
sbb
mov
fs
rsm
lahf
int3
jb
mov
jl
arpl
enter
and
jmp
cmp
inc
cs
jl
neg
cltd
movsl
cmp
popf
jne
jnp
pop
aam
sbb
mov
jecxz
mov
fdivr
xlat
jb
shlb
lret
out
shrl
sbb
ds
mov
xor
jae
pause
sbb
and
inc
ds
xchg
nop
sti
das
jo
enter
fucomip
cs
ja
pop
and
mov
add
ret
cmc
in
sub
fnstcw
and
xor
lods
inc
ja
mov
adc
push
xchg
test
scas
dec
xlat
jae
push
aas
fwait
pop
fiaddl
and
mov
add
pop
lcall
pop
fdivr
les
filds
rorb
movsl
into
stos
push
rorl
iret
adc
xor
ljmp
inc
push
jg
or
adc
clc
mov
jle
push
leave
fmuls
pop
movsb
xor
fnsave
jns
lock
nop
add
test
xchg
and
jmp
mov
pop
fldt
dec
xchg
xchg
out
outsl
inc
aas
jecxz
aam
sbb
lret
cmpsb
push
es
loopne
enter
je
fs
lods
jbe
jnp
mov
push
cmpb
cmpsl
push
xor
in
in
ret
enter
jb
cwtl
jns
adc
mov
clc
es
sti
inc
push
adc
rcll
stos
pop
push
pop
push
pop
shlb
sub
dec
mov
das
xchg
xchg
imul
cmpsw
ds
mov
cmp
mov
and
adc
outsb
mov
in
lods
push
in
sub
push
mov
push
shlb
rorb
cmp
bound
fstpt
mov
and
repz
pop
adc
orb
mov
insl
pushf
pop
sbb
mov
popa
xchg
out
jg
lock
shrl
les
inc
aam
mov
mov
iret
popf
pop
ljmp
push
lret
mov
stos
xor
ficompl
pop
or
adc
jmp
out
popa
fnsave
in
repz
test
lods
xchg
lods
mov
cmpsl
dec
imul
int3
and
js
stos
mov
or
adc
sub
dec
imul
inc
cmpsl
xchg
adc
sub
jb
iret
xchg
in
push
xor
sbb
ret
out
xchg
xor
xchg
icebp
popl
mov
add
js
xor
cmp
cmpsb
cmc
sub
pop
and
add
test
xchg
cmp
add
adc
push
dec
inc
lods
sub
scas
sub
loope
push
jno
jns
mov
into
xchg
or
aam
cmp
mov
fnstcw
xor
jb
jle
add
sub
dec
jmp
bound
aad
repz
cmp
int3
mov
pop
jns
add
jnp
mov
aam
and
xchg
lods
jnp
pusha
loope
inc
popa
push
hlt
fcomip
mov
leave
test
lods
shll
dec
sbb
in
push
dec
cmp
cmpsl
in
imul
imul
xor
push
add
dec
push
stos
data16
sub
lret
out
or
fnstsw
pop
sbb
sub
xor
pushf
cld
out
mov
inc
movsb
pop
xor
or
and
push
adc
stos
in
add
jne
and
negl
sti
stos
add
test
loopne
sub
sbb
push
cmp
scas
daa
andl
rcr
pop
jmp
ja
cmp
mov
insl
adc
jo
pop
decb
outsb
adc
mov
fisttps
incl
xchg
lock
outsl
xor
dec
sbb
movsb
add
push
out
push
ds
inc
dec
push
xchg
jl
mov
inc
shrb
movsl
cmp
dec
xor
outsl
ret
insl
xchg
movsb
jne
push
in
adc
sbb
stos
or
mov
in
and
pop
jbe
fs
stc
movsb
push
mov
push
push
and
arpl
push
cld
pushf
pop
mov
and
mov
cmpsl
mov
inc
sub
mov
cli
nop
popa
pop
fdivs
adc
in
icebp
lds
sarb
in
add
jl
sub
int
lahf
lahf
icebp
aaa
adc
sti
push
fistpl
shll
sub
imul
into
dec
sbb
push
or
jg
shrl
xchg
imulb
cmp
in
mov
mov
cld
call
inc
sub
pop
leave
push
pop
stos
push
ret
int3
outsb
mov
mov
xchg
das
stc
xchg
inc
idivb
das
add
cmpb
cld
outsb
out
cltd
movsb
cmpsl
cwtl
dec
subl
mov
xor
mov
clc
cmp
mov
pop
push
mov
arpl
pop
jmp
xchg
cmp
outsl
hlt
pop
and
and
out
dec
test
jl
stos
xor
sbb
push
clc
or
iret
scas
outsb
adc
mov
mov
shlb
testb
cli
imul
test
xchg
int
xchg
adc
scas
mov
js
lods
fwait
sarl
mov
repnz
sti
adc
popf
dec
mov
ror
add
push
xchg
int
jmp
arpl
jbe
lahf
mov
mov
add
mov
or
sub
test
mov
scas
mov
repz
scas
scas
jl
pop
jae
test
mov
inc
test
dec
fmull
icebp
out
es
mov
gs
pop
int3
in
incl
inc
mov
mov
lea
lahf
fcmovnu
adc
cmpsb
out
push
inc
push
lret
roll
lret
lret
int3
pop
imul
xorb
cmc
test
xchg
and
adc
jb
mov
jp
xchg
imul
adc
call
inc
pop
jne
pop
rclb
push
dec
int
cmpsb
daa
in
mov
jb
insb
dec
jge
adc
sub
shrl
icebp
jnp
mov
mov
sbb
orl
fsubl
rorl
fdivl
xchg
or
push
fwait
inc
repz
call
std
mov
jge
aas
xor
movsb
or
sbb
and
dec
cmc
sub
jg
push
cmp
sub
loop
test
jecxz
mov
sbb
scas
aad
or
mov
ja
rol
mov
test
pop
adc
xchg
adcb
mov
lcall
lods
push
mov
stc
mov
fists
ret
es
dec
out
push
mov
add
lahf
mov
iret
sub
dec
cli
arpl
cmp
and
mov
movsb
push
and
cmp
test
insl
mov
jmp
inc
cmpsl
sar
xor
fs
dec
mov
add
pop
popa
aas
pop
rclb
jnp
inc
cs
xor
or
jns
enter
jl
mov
sbb
or
adc
addr16
mov
push
ficoms
mov
mov
decb
enter
and
out
or
xlat
cmpsb
dec
dec
es
dec
mov
mov
mov
lea
xchg
jnp
decb
dec
loope
sbb
cltd
fadd
aaa
sub
or
pop
xchg
frstor
sbb
inc
test
daa
shll
xchg
add
mov
in
inc
std
mov
jne
jg
ds
sbb
mov
mov
mov
outsb
xchg
int3
mov
push
cmp
fcoml
lea
les
movsl
jns
out
jbe
sbb
into
push
into
testl
jae
cmp
mov
sbb
test
into
pop
pop
rclb
movsl
fldl
das
insl
lds
xchg
mov
and
enter
pop
push
cmp
std
in
mov
in
xor
loopne
leave
push
out
int
ret
aas
pop
jb
xchg
ja
popf
test
daa
mov
fsubr
pop
orl
faddp
mov
adc
mov
rcr
les
sahf
xor
pop
lret
pop
je
ret
lds
mov
mov
adc
out
mov
push
mov
mov
or
or
roll
test
push
mov
cmp
ret
int
mov
sub
decb
cmpl
xorl
ja
js
scas
mov
rcr
mov
lahf
repnz
xor
pop
lret
inc
outsb
scas
adc
xor
shll
pop
adc
jbe
call
fldcw
clc
arpl
jno
jns
sbb
pop
repz
ret
mov
test
or
inc
dec
sti
popa
push
xor
bswap
mov
cmpsl
inc
sbb
inc
movsl
pop
lret
xchg
lds
mov
push
lds
jle
lods
dec
push
ficoml
movsl
ret
sahf
mov
inc
fs
cmpsl
popa
push
lret
xchg
fistpl
jp
ret
inc
popa
inc
fadds
in
inc
cmpb
scas
popa
into
xchg
loopne
lret
mov
data16
xchg
and
xor
or
rcll
out
cld
lods
mov
push
fwait
pusha
outsb
imull
mov
mov
sub
jo
adc
test
xchg
in
lock
push
or
ret
adc
rorb
sub
inc
cmpsl
inc
pop
bound
mov
test
pop
xor
aas
test
inc
cs
notl
testl
out
jle
lock
pop
sbb
lds
js
mov
ret
pop
pop
jecxz
xor
jae
arpl
push
inc
repz
and
je
in
inc
or
pop
adc
ret
mov
sbb
shll
inc
jb
lds
cmp
xlat
pop
sbb
xchg
jecxz
xchg
imul
rcrb
ror
jmp
insl
les
jne
push
jb
imul
mov
ljmp
xor
and
lret
rorl
imulb
sub
cltd
adc
sub
adc
shl
sbb
data16
test
bound
xlat
cwtl
inc
jne
pushf
scas
lret
ret
out
lods
pop
mov
aam
mov
aaa
test
add
jecxz
xchg
repz
cmp
mov
xor
cmc
pop
pop
popa
movsb
in
cltd
in
mov
cmc
fmuls
xchg
jp
fadds
mov
fwait
mov
jl
shr
inc
fisubrl
adc
shll
mov
pop
or
add
les
and
mov
dec
subb
mov
sbb
cmpw
loopne
das
cmpb
and
fwait
cwtl
pop
inc
loope
ja
in
in
sbb
lods
das
fwait
xchg
scas
and
mov
int
roll
insl
or
jecxz
enter
mov
inc
cmp
xorw
outsl
inc
inc
fimull
lahf
add
mov
adc
add
sub
sub
lcall
stos
or
frstor
jge
adc
push
push
pop
push
and
cmpl
xchg
and
mov
notl
addr16
mov
std
sbb
jno
adc
shrl
adc
out
repz
mov
sub
cmpsb
repnz
jnp
inc
out
mov
pop
sub
add
inc
mov
dec
stos
mov
sub
ljmp
aad
sbb
adc
inc
push
adc
mov
lock
adc
xor
bound
cmc
cli
cmove
aas
pop
dec
or
jecxz
fstpl
pop
dec
pusha
xor
movsl
cld
mov
mov
adc
xchg
or
or
bound
cld
mov
jnp
std
adc
popa
or
sti
in
fwait
rol
ss
dec
mov
popf
xor
mov
xchg
xchg
jo
push
xchg
pop
mov
push
pop
cltd
je
add
ja
xor
stc
shl
mov
arpl
inc
dec
cs
loopne
and
sub
je
shr
pop
and
comiss
mov
sbb
inc
mov
and
loop
int
jmp
shll
dec
or
out
outsl
cmp
pusha
sub
sbb
dec
xchg
add
in
adc
inc
cmpb
fmul
add
mov
aaa
push
dec
sub
gs
pop
sti
aas
cmp
into
jp
loopne
outsb
mov
inc
xor
pop
rorb
cmpsl
lds
dec
shll
arpl
mov
pop
jnp
ja
inc
jg
dec
push
cltd
stc
aaa
hlt
cmp
sbb
xor
inc
jg
testb
frstor
outsl
sub
stos
push
mov
cmpsb
xor
xchg
aas
gs
sub
sbb
cmc
fnstenv
jo
lret
outsl
push
push
aas
popf
mov
sub
loope
loopne
leave
ljmp
xor
rorb
sbb
add
std
call
jo
addr16
push
sahf
jge
jo
mov
jp
xchg
fs
inc
dec
xor
mov
test
xchg
dec
sub
pusha
ja
sti
mov
mov
imul
insl
push
ljmp
jle
int3
jp
mov
fstpt
dec
xor
mov
add
fildl
lcall
xchg
mov
inc
sbb
cmpsb
fstl
icebp
lcall
mov
inc
xor
xor
mov
add
pushf
xchg
mov
inc
dec
xchg
imul
scas
in
out
fwait
out
data16
dec
popf
out
ss
shrb
and
xor
lods
xorb
adc
sti
mov
inc
sbb
mov
insb
hlt
pop
cmp
mov
add
inc
dec
mov
mov
sub
mov
scas
mov
mov
outsb
sbb
cmc
notl
or
lea
scas
outsl
movsb
hlt
or
dec
push
lret
add
in
sub
inc
es
lret
jns
sub
test
or
mov
mov
jecxz
stc
fiadds
cwtl
dec
inc
mov
push
xor
movsb
jnp
lods
pop
ss
and
inc
sub
mov
mov
add
ror
stc
sbbb
sub
sbb
scas
outsb
mov
imul
adc
xor
mov
mov
jle
pop
ja
lahf
std
xor
push
inc
in
pusha
pop
sti
sub
jmp
push
scas
push
dec
sahf
adc
cmpsl
xchg
xchg
mov
fs
dec
cs
add
cld
ffreep
inc
mov
in
cltd
add
inc
mov
cmpsb
rcr
inc
ds
dec
pop
ficomps
movsb
xchg
and
cmp
xchg
bound
jo
push
fdivs
sub
sahf
xchg
pop
mov
mov
pop
pusha
dec
imul
jle
push
test
jp
pop
jge
sub
and
mov
imul
jnp
xor
test
roll
clc
ja
pushf
test
fisttps
cmp
xlat
mov
mov
clc
rcrl
add
sub
dec
std
andl
cs
push
stos
int3
js
jle
mov
dec
imul
int3
mov
lret
lods
and
cmpsl
cs
clc
fcoms
rorb
xor
into
cmp
fs
scas
notl
scas
imul
adc
loop
mov
mov
sub
popa
mov
test
aaa
xchg
cmpsl
xchg
leave
insl
xchg
push
cmp
sbb
mov
add
mov
jmp
sub
insb
cwtl
nop
sbb
icebp
fsubl
imul
hlt
js
in
inc
in
in
lods
mov
push
jns
jo
bound
fcompl
sub
in
and
shlb
jl
ja
es
cmp
mov
sub
adc
xchg
shll
stos
popa
in
fwait
or
fldcw
pop
sti
roll
test
aad
ljmp
dec
dec
sub
bswap
fsubs
mov
popf
sti
push
sub
push
xor
add
sub
mov
int
push
insl
inc
lret
pop
das
and
sti
test
mov
test
sti
dec
jmp
insb
scas
pop
lods
push
insb
mov
ljmp
and
mov
nop
sub
or
stc
call
mov
nop
pusha
jmp
and
push
cltd
cwtl
mov
ss
push
mov
pusha
sbb
das
pushf
inc
bound
sbb
popa
lret
out
leave
lcall
xor
add
or
mov
mov
into
cs
jne
adc
mov
mov
mov
jg
mov
jns
arpl
mov
or
jmp
lcall
push
andl
outsl
clc
lcall
mov
lret
dec
jge
dec
mov
jnp
dec
int
jno
icebp
mov
mov
xor
xchg
int
test
pop
rorl
pop
pop
fldt
pop
pop
sahf
sahf
nop
lds
ret
xor
push
bound
inc
add
sub
ret
jge
call
fprem1
pop
pop
stos
cmp
adc
arpl
jmp
fildl
inc
dec
mov
dec
push
ljmp
and
xchg
mov
scas
xbegin
push
xchg
rolb
fwait
mov
cmp
mov
pop
imul
stos
ss
push
jb
xor
insb
mov
aam
out
and
cmp
fidivs
or
mov
mulb
repnz
add
inc
in
subb
sub
outsl
mov
lock
xchg
xchg
jmp
sbb
movsw
jge
dec
aad
cmp
ljmp
xchg
or
mov
out
incl
sarb
adc
shll
fisubs
or
pusha
addb
sub
mov
sub
lds
push
jl
adc
jnp
cmpb
repnz
mov
loope
jae
pop
leave
or
loope
repnz
cmp
in
lods
xchg
mov
push
xor
movb
dec
fs
pop
daa
movsb
idiv
cmc
cwtl
xor
dec
inc
es
xor
inc
imul
xor
loope
dec
jg
stc
pop
dec
xchg
cmp
lods
or
stos
xchg
shll
jnp
mov
adc
sub
inc
and
inc
lods
xchg
push
ljmp
adc
push
mov
movsbl
dec
fisttps
loope
or
cs
mov
jae
add
dec
negb
mov
xchg
jmp
push
in
icebp
pop
ret
pop
xor
mov
xor
mov
pop
mov
popa
cmp
fnstenv
or
stc
or
add
jo
cs
jnp
mov
inc
mov
cwtl
cs
sub
xchg
dec
cs
mov
mov
loope
dec
inc
icebp
in
xchg
sbb
xchg
mov
xchg
pushf
in
add
add
daa
pop
and
rorl
sbb
cmp
bsf
push
mov
cmp
mov
xlat
int3
dec
leave
aaa
loopne
add
das
jbe
test
sub
data16
movsb
cmp
mov
divb
pop
aas
sub
imul
and
or
inc
jns
sub
ljmp
ror
mov
sbbb
push
mov
ds
aaa
cmpsb
mov
push
pop
insl
jle
jae
mov
push
or
pop
mov
dec
addr16
xchg
mov
add
scas
pop
int3
rolb
pop
imul
push
inc
rcr
lcall
sub
iret
sub
in
lods
push
mov
jb
pop
push
shlb
cwtl
daa
out
lock
icebp
scas
or
and
xor
mov
cld
movsl
negb
pop
xorl
repz
mov
pop
cmpl
dec
sub
or
inc
lahf
push
or
out
fisttps
das
jae
call
hlt
inc
sbb
dec
ja
jne
js
cmp
push
lcall
add
shll
sbb
cmp
in
rclb
ss
xchg
pop
mov
lods
xlat
mov
shll
adc
fwait
add
add
pop
cmp
in
test
ret
or
mov
and
mov
testb
sub
dec
out
inc
aaa
pop
mov
iret
push
jno
xlat
enter
lds
shll
mov
dec
insl
xchg
test
cmpl
and
pusha
cmpsb
lods
xchg
loope
les
cltd
out
popa
nop
jae
inc
test
inc
test
mov
int3
shr
and
sbb
cmp
dec
fisttpl
movsb
xchg
dec
lret
push
cld
rolb
push
add
int
lea
jne,pt
jb
jg
sbb
xchg
in
mov
or
mov
lret
arpl
rolb
cmp
test
jge
gs
xor
leave
pusha
mov
int3
sar
out
imul
rcll
flds
test
cmpsl
imulb
add
cli
cmp
call
jb
fucomip
inc
sub
test
icebp
es
ljmp
fcomps
lock
inc
mov
push
inc
sbbl
cmp
shr
mov
and
scas
lahf
fbld
test
fcomi
jns
rorl
sbbb
adc
cmp
test
insl
sub
sbb
repz
outsb
add
into
push
mov
fbld
inc
fs
lret
scas
fsubrs
xor
cmp
xor
ss
fucomp
out
fwait
sbb
sub
inc
xor
in
jge
inc
xor
insl
xchg
lret
and
mov
lcall
cmp
adc
js
cmp
jbe
outsb
mov
cwtl
pop
repnz
fisubrs
fildl
push
pop
mov
mov
mov
out
test
mov
sbb
push
pop
popa
aaa
cs
add
xchg
and
cmp
outsb
shl
gs
adc
jecxz
sbb
out
mov
jmp
inc
orb
pop
dec
mov
cli
xchg
sub
popf
out
mov
mov
jne
cmpsb
push
andl
stc
adc
sbb
sbbb
mov
pop
jecxz
fnstsw
pop
loop
jnp
xor
mov
inc
push
adc
jns
out
sub
pop
pushf
rolb
xor
mov
pop
mov
shll
mov
jp
xor
test
dec
mov
cmpsb
push
add
cmpsl
mov
inc
lds
mov
or
stos
sbb
sub
popa
push
cs
jl
inc
jno
jmp
inc
push
lods
push
in
jmp
cvtps2pi
mov
jae
movsb
cld
add
inc
push
xchg
jmp
mov
inc
das
out
shll
mov
xor
cmp
sub
mov
mov
addr16
loopne
repz
icebp
cld
push
push
and
xor
jne
lods
sbb
ds
dec
fistl
xchg
jo
xchg
xchg
icebp
add
and
push
dec
lods
test
cwtl
pop
test
test
out
pop
imul
pop
dec
push
pop
dec
cmp
xor
xchg
std
add
mov
wbinvd
push
test
push
jmp
cmpsb
imul
xchg
mov
cmpsl
add
mulb
mov
lods
jns
shl
lds
std
pop
test
mov
test
add
sub
adc
shl
push
sub
jmp
testl
sub
shr
repz
add
out
imul
xchg
xchg
in
add
inc
hlt
pop
sub
in
fldt
push
nop
xor
mov
push
shlb
es
stos
lret
mov
cmp
ds
sbb
shrb
xor
sub
xlat
mov
mov
lds
icebp
cmp
cmc
loopne
movsb
sbb
popa
mov
cmp
or
lock
add
loop
outsb
pop
cmp
shlb
ljmp
fisttpll
mov
or
jne
push
stos
aam
jne
push
fwait
iret
repnz
popf
std
lds
lahf
mov
out
fwait
popa
mov
mov
fwait
icebp
xchg
push
fbld
mov
lret
lret
ds
mov
xchg
cmp
mov
fists
jge
test
push
inc
jmp
xor
outsb
pop
xchg
mov
movsl
cli
jl
mov
cmc
ja
push
in
push
cmp
pop
stc
fidivs
iret
daa
push
cmp
movsl
ljmp
sarb
push
enter
cltd
xlat
push
jnp
clc
jo
or
ja
adc
xor
and
test
sbb
push
or
lods
jp
push
mov
sarl
out
cltd
fisttpl
push
mov
ret
add
mov
lods
repz
scas
outsb
xchg
mov
jo
mov
icebp
int3
jl
ret
in
add
or
shlb
jmp
push
xor
loope
mov
fadds
outsb
aas
adc
jp
xorl
cltd
pop
push
dec
fcoms
repnz
or
hlt
ret
inc
into
fcomps
cmpsl
and
mov
ljmp
or
or
loopne
inc
ds
add
ds
out
dec
jecxz
mov
pop
push
push
in
mov
dec
mov
dec
imul
xor
stos
mov
dec
mov
or
xor
sti
in
mov
imul
outsb
loopne
and
inc
or
cs
cmp
inc
cwtl
xor
repz
pop
xchg
cmp
jo
sbb
das
lret
or
scas
push
or
daa
xor
jg
dec
loope
mov
mov
in
out
aad
jo
out
ss
push
test
rorb
xchg
loopne
mov
sub
fnstsw
push
jo
loopne
bound
add
add
push
iret
push
mov
pop
push
call
lds
xor
sarb
sahf
xchg
popa
fsubs
hlt
inc
jno
jae
popl
pop
mov
mov
hlt
shrl
mov
sahf
dec
cmpsb
fwait
xorb
and
lret
sbbb
stos
sar
or
push
sti
cmp
hlt
cmp
sub
call
mov
shll
test
shll
jbe
clc
inc
jge
dec
imul
aad
aad
push
sbbl
xchg
mov
mov
pusha
nop
jne
incl
mov
cwtl
ljmp
pop
xlat
std
pop
cmp
fildl
lods
addr16
jg
push
inc
jl
fnsave
dec
std
mov
xchg
and
jbe
es
gs
cmp
cli
sahf
into
xchg
or
cltd
andb
dec
inc
aas
jns
lods
sub
ljmp
mov
pop
ds
add
es
pop
dec
push
mov
adc
xchg
xor
pop
in
jno
test
jp
adc
xor
loop
mov
out
sbb
lock
push
pop
xor
call
sbb
mov
shll
ljmp
clc
xor
sub
mov
sbb
xchg
mov
adc
das
pop
xor
lea
mov
or
sub
icebp
and
loop
add
nop
dec
insb
xchg
shrb
xor
jp
mov
sahf
sbb
nop
add
in
movsl
lret
lods
dec
mov
shlb
out
sbbb
aad
cmpsb
repz
je
adc
xchg
cmpsb
mov
fisttpll
push
stc
int3
pop
push
mov
hlt
sbb
push
out
lcall
testl
jg
sub
pop
sbb
pop
xor
xor
or
sarl
cmpsb
jns
cld
aas
inc
les
sub
test
test
aad
push
aaa
mov
loope
xorl
jnp
adc
and
lret
mov
lods
movsb
jbe
adc
adc
icebp
out
loope
pop
push
movsl
stos
sub
dec
jmp
push
push
mov
cmp
loope
mov
enter
adc
mov
xchg
jbe
ret
adcl
pop
xor
mov
daa
dec
jo
jne
ss
clc
cmp
adc
lock
pop
adc
lret
insb
pop
mull
dec
ja
fwait
and
cltd
pusha
das
subb
jae
lea
scas
lcall
push
dec
and
adc
aam
mov
add
out
mov
lea
xchg
cwtl
push
insb
inc
roll
mov
inc
xchg
mov
negl
fcomi
cmp
jnp
and
adc
into
xor
hlt
test
push
sbb
sub
repnz
aad
mov
jg
pop
pop
jl
and
out
loop
xor
xchg
adc
out
push
scas
mov
and
dec
jne
cwtl
adc
adc
inc
jg
fstpl
es
pop
sbb
jae
insl
push
jno
test
mov
lahf
mov
mov
repnz
xor
bound
outsb
mov
inc
push
xchg
lret
mov
push
inc
mov
push
and
cmc
pop
cmp
jno
cmp
jbe
ljmp
repz
jo
scas
push
and
and
mov
jbe
fidivs
repz
insl
mov
push
imul
xor
mov
ficoms
jl
jmp
pop
idivb
sti
mov
addl
sbb
int
mov
sub
cmc
sub
mov
or
cli
je
movsl
or
xlat
and
in
dec
cld
ljmp
ds
xchg
icebp
xor
icebp
neg
xchg
mov
cmp
rep
push
cli
sti
negb
mov
insb
sbb
mov
std
or
sahf
pop
mov
adc
cmpsl
repz
mov
jecxz
and
shr
pop
or
sub
mov
outsb
jl
mov
sbb
or
sub
lret
pop
ss
pop
mov
fstenv
mov
xor
je
adc
inc
stos
int
xor
test
scas
inc
add
ret
gs
insl
and
aaa
lret
dec
sbb
insl
pusha
imul
add
les
xchg
mov
enter
pop
add
xchg
gs
mov
add
mov
scas
xor
sbb
lock
fs
lcall
popa
push
popl
or
mov
ljmp
mov
scas
inc
mov
xchg
ja
sbb
test
test
inc
popf
push
les
test
mov
jmp
test
push
cmp
or
and
scas
insl
mov
inc
and
pop
dec
or
or
cmpsb
cmp
inc
repz
pop
ret
cmpsb
fidivrl
shll
out
fwait
mov
call
pop
loop
pushf
arpl
inc
enter
std
ljmp
fisubs
jnp
inc
mov
jp
repnz
dec
pop
js
daa
pop
arpl
lahf
fnstenv
inc
jl
aas
jmp
in
mov
mov
jae
fldt
stos
dec
fisubrs
ja
add
sub
lds
in
call
rolb
inc
xchg
hlt
adc
fldt
mov
cmp
rclb
mov
loop
andl
xlat
in
cmp
into
and
popf
cmc
jo
jbe
popa
and
jl
and
cmp
jo
cmc
jmp
scas
fdivl
les
push
mov
lea
sarl
pop
dec
insl
gs
pushf
inc
loopne
fimull
insl
scas
inc
pusha
ljmp
mov
sub
cmp
cmp
into
jo
pop
push
cwtl
cmp
test
imul
add
daa
push
inc
fisttpll
pop
negb
mov
stc
es
ja
adc
in
in
out
outsb
or
shlb
inc
sti
out
repz
mov
xchg
xchg
cmp
xor
int3
pushf
pop
pop
mov
cmp
sbb
add
fidivrs
aad
cld
jns
sbb
pusha
mov
lea
mov
and
mov
inc
out
dec
adc
test
rcll
fistl
into
cmpsl
xchg
scas
pop
std
lcall
in
push
inc
mov
push
ss
outsl
xchg
repnz
add
aam
and
sbb
in
sub
shlb
lods
ror
add
dec
xchg
lds
out
test
xor
fwait
cmpl
pusha
mov
les
rorl
jbe
pop
add
flds
cmpsb
and
jne
fcoml
pop
pop
xor
notl
push
jle
push
shlb
jl
push
fbstp
fmul
jg
sub
int3
lret
mov
jg
daa
pop
ljmp
xchg
adc
mov
ffreep
xlat
cld
shlb
pop
pop
push
xchg
push
push
pop
sub
popa
idivb
cmp
jns
pop
les
aad
decl
mov
push
push
sti
dec
mov
cmc
mov
nop
leave
aam
or
xor
pop
jo
pusha
adc
aaa
xlat
pushf
out
adc
inc
clc
fwait
sub
lret
clc
mov
jle
cmpsl
divb
dec
out
ja
bound
arpl
lahf
fmull
push
in
dec
push
movsb
repz
test
xchg
inc
pop
push
repz
mov
mov
or
cmp
pushf
jg
jmp
mov
ss
fcomip
jmp
arpl
push
daa
mov
sub
cmp
pusha
loopne
jg
mov
out
rcr
lods
iret
inc
fucomi
mov
jno
add
xor
jecxz
lock
push
cltd
or
in
dec
dec
push
xor
loope
cltd
adc
jnp
cmp
sub
add
push
daa
add
push
push
adc
ret
ja
into
lret
pop
mov
cmpsb
push
mov
movsb
mov
fwait
or
addl
fstps
mov
fstpl
jle
in
inc
mov
sahf
lcall
or
jp
int3
aas
sub
stc
test
jno
ljmp
jp
test
decl
popa
xor
aam
jle
sahf
xor
xchg
rcrb
mov
dec
mov
lods
hlt
pop
cmp
insl
add
mov
inc
stos
vpsubw
mov
mov
push
and
or
sbb
inc
and
push
dec
notb
mov
enter
mov
and
fadds
das
pop
mov
ja
and
fistl
outsl
stos
outsb
sbb
lock
xchg
mov
int
mov
pop
scas
push
sbb
ret
xchg
icebp
mov
mov
addr16
ror
lods
pushf
cwtl
mov
or
nop
test
addr16
pop
mov
daa
and
pop
daa
lret
mov
dec
sub
xor
add
loop
loopne
or
movsl
adc
inc
add
and
mov
mov
jae
popf
mov
lcall
adcl
adc
sarl
adc
or
xchg
ret
cmpsl
jns
mov
pop
imul
push
stos
adc
movb
jbe
mov
or
js
and
out
shl
jp
ss
xor
push
mov
lahf
and
jo
jmp
lahf
lods
arpl
xchg
std
dec
dec
cmpsl
push
loop
test
push
xor
and
add
jp
sbb
xor
pop
daa
pop
sub
hlt
xor
fmuls
lods
sub
adc
and
lods
subb
std
jg
call
sbb
ljmp
push
mov
xchg
or
sub
filds
xchg
sub
cmp
fisttpll
push
hlt
je
jb
clflush
mov
lret
into
xor
iret
lods
stos
and
aad
out
xchg
lcall
aad
dec
aam
xchg
in
mov
lea
in
ror
sbb
pop
cmp
iret
and
push
sti
loopne
sub
sti
inc
fwait
aaa
int
in
mov
aam
jae
mov
mov
cli
insb
ss
cwtl
sub
stc
test
dec
jle
in
mov
fs
xor
dec
jecxz
push
into
aas
dec
stc
mov
enter
aas
loopne
pop
call
shl
pop
outsb
out
repz
dec
je
lret
mov
dec
mov
frndint
cld
div
into
sbb
inc
arpl
jmp
negb
test
inc
inc
cmp
mov
decb
fs
sub
push
fldt
xchg
xor
sub
imul
sbb
std
inc
test
ja
scas
fisttpll
jne
mov
mov
adc
push
sub
sub
iret
ljmp
test
fnstenv
popf
mov
lret
test
fsubrl
add
mov
sub
pop
sub
idivb
xor
js
jl
bound
ss
pop
repnz
insl
into
repz
jle
data16
pusha
shlb
mov
fisubl
mov
mov
xchg
and
popa
push
repz
out
rorl
sbb
xor
subl
lahf
jl
mov
cmp
aad
insb
test
shll
mov
ss
mov
pop
xchg
movsb
jae
sbb
xorb
popf
lods
lock
loopne
lock
bnd
xchg
in
movsl
mov
xor
ja
jg
incb
or
sbb
push
aam
xchg
sub
xchg
je
arpl
mov
in
pop
dec
fs
adc
inc
fisubrl
sbb
or
mov
pop
sar
movsb
sub
mov
inc
or
inc
out
ret
rorb
inc
pop
fstpt
adc
and
sbb
adc
in
mov
or
pop
gs
adc
cmp
adc
adc
cs
mov
or
dec
mov
mov
jle
pop
pusha
push
push
fsubp
jno
outsb
ds
popf
int3
push
das
cmp
bound
push
loop
push
outsl
add
test
adc
test
daa
lock
lret
addl
xor
mov
les
arpl
jp
in
adc
xchg
call
xor
jns
rcpps
mov
decb
mov
mov
fwait
sub
insl
jb
lds
xchg
shl
cli
rcll
imul
loopne
xchg
stos
inc
jmp
dec
fiaddl
lcall
jae
das
push
scas
jecxz
xchg
xor
jno
push
lahf
xchg
pop
adc
add
jnp
mov
dec
inc
and
inc
popf
mov
scas
mov
push
xor
pop
or
out
jp
imul
jb
inc
fwait
mov
sbb
xchg
dec
adc
adc
in
cmp
imulb
or
push
push
xor
rcrb
fldcw
mov
lock
test
bound
or
popa
cmp
mov
mov
int
aad
mov
inc
inc
repz
push
dec
or
cmp
jmp
mov
xchg
xchg
jmp
mov
inc
mov
sbb
cmp
sahf
pop
ljmp
fildll
repnz
mov
adc
cmp
cltd
repnz
hlt
fwait
adc
outsl
mov
xlat
push
loop
rcl
dec
fisubs
ljmp
insb
movsl
and
js
and
push
xchg
mov
add
scas
mov
sbb
cltd
ja
mov
pop
cmp
into
cmp
adc
loope
mov
ja
movsl
ret
jg
hlt
out
or
out
pop
inc
push
into
or
jo
test
pop
inc
and
fstps
xchg
lret
rcrl
push
call
loope
mov
dec
push
fdivp
in
insb
pusha
xchg
xor
aad
xchg
or
mov
or
adc
mov
movsl
repz
jl
ret
push
aaa
fsubr
xor
int3
jge
push
mov
cmc
and
fsubrl
mov
pop
sub
adc
xorb
pop
pop
stos
scas
idivl
cmp
int3
dec
jle
push
dec
jg
add
into
xlat
mov
int
movsb
clc
or
sbb
jne
and
repz
cli
out
call
sbb
clc
xor
sub
ds
jle
call
shlb
push
cltd
jl
and
sbb
movsl
inc
xchg
fisubrs
fnstcw
xchg
aad
mov
aad
cmp
jmp
cmp
lahf
push
jge
fidivrl
notl
jbe
movsb
rolb
cli
insb
xor
add
sbb
out
mov
lret
inc
pusha
shll
inc
js
jno
shlb
jle
mov
sti
orl
and
and
js
or
mov
xor
adc
inc
add
push
in
js
fwait
bound
adc
and
dec
ret
push
mov
sub
and
and
fldt
dec
jmp
dec
mov
lods
loopne
sub
repnz
fcomps
jecxz
repz
inc
aas
push
hlt
sbb
dec
mov
push
arpl
leave
push
out
clc
bswap
xlat
ljmp
and
stos
fwait
scas
out
iret
cltd
popf
fimull
ret
movsl
mov
stos
sbb
mov
push
clc
nop
pop
in
inc
ret
lods
mov
sub
or
xchg
cmpl
test
or
mov
insl
fsubl
cmp
push
mov
fdivs
mov
dec
adc
jmp
pop
inc
mov
lock
push
outsl
lret
mov
stos
and
sbb
dec
or
jmp
cwtl
jle
cmpsb
jmp
movsl
xor
cmpsb
fcoms
cmpsl
sbb
lods
push
ret
insl
lret
sbb
jp
inc
leave
scas
inc
int3
mov
push
adc
push
mov
inc
scas
and
jecxz
and
fldcw
adc
xor
xchg
std
pop
xchg
sti
pop
adc
cmpsb
loope
xor
sbb
pop
sub
dec
sbb
jmp
pop
ret
pop
cmp
xor
fwait
jl
add
or
aaa
jns
push
sbb
les
cmc
and
and
inc
lods
negl
repz
jmp
call
ret
out
fcom
cvtpi2ps
lds
jae
and
dec
aaa
xor
lret
xchg
jno
pusha
push
repz
je
sub
shrl
sub
xchg
xor
mov
sbbl
add
jb
jmp
int3
lds
xchg
jg
jns
paddusw
pop
and
pop
test
sbb
push
push
add
push
push
mov
cltd
mov
aam
je
sbbb
sub
popa
adc
mov
divl
add
cmp
sti
cmp
shll
js
loopne
pop
add
inc
sbb
ja
ret
push
jle
mov
clc
loop
data16
test
push
jle
mov
ret
add
in
stos
xchg
cld
les
imul
dec
sbb
inc
inc
fdivl
jns
pop
out
aad
push
inc
add
mov
pop
das
pop
loop
xor
mov
in
or
push
test
adc
or
out
repz
enter
inc
dec
mov
jl
sub
sub
mov
cmpsl
jg
ljmp
sub
es
out
jle
and
arpl
lret
xchg
or
test
das
cmp
inc
sbb
push
ljmp
loope
ja
push
push
fdivs
movsb
sbb
jg
shll
std
cli
cltd
xchg
push
xchg
popa
mov
push
sub
pushf
sbb
jne
sub
in
sbb
and
lret
sub
fistl
iret
test
incb
adc
dec
int3
aam
xchg
clc
movsb
adc
lods
xor
insb
lods
ds
faddl
and
nop
mov
notl
dec
test
sub
add
das
pushf
mov
iret
pop
adc
sub
xchg
mov
rol
xchg
mov
cmc
jle
daa
fidivs
nop
inc
xchg
je
mov
nop
inc
mov
mov
dec
push
icebp
mov
out
inc
ret
mov
sarb
outsl
xor
xlat
fistl
shll
in
js
mov
out
mov
push
imul
mov
sub
sub
imul
sub
mov
sbb
std
ja
jmp
pop
ljmp
mov
adc
insl
mov
data16
xor
mov
mov
lret
daa
dec
ds
rcrb
pop
push
ljmp
jae
ss
xchg
fldt
sti
sbb
push
mov
or
and
lea
xchg
cmp
xor
in
fsubrs
ja
mov
ja
fcomps
cwtl
xor
aas
scas
mov
push
mov
jne
in
push
in
dec
fistpll
lock
xchg
pop
popf
movsb
das
inc
hlt
enter
sub
sub
in
mov
imul
jg
iret
mov
sbb
stos
sbbl
insb
mov
mov
sub
mov
lret
adc
cld
vmovntps
xor
nop
mov
xchg
add
xor
stos
sarb
push
test
data16
sbb
xchg
aaa
xchg
rol
adcl
jns
add
repz
lret
pop
mov
xlat
cmpl
divb
nop
mov
push
bnd
dec
stos
test
dec
addr16
add
dec
test
clc
clc
jo
mov
data16
ret
inc
mov
out
jge
pop
push
aam
adc
fs
mov
pop
jl
mov
hlt
adc
jl
cmpsb
inc
mull
xchg
cltd
push
xchg
daa
push
call
int3
add
pop
xchg
sub
push
cmp
or
or
mov
and
dec
push
jle
scas
fnsave
iret
cs
cmp
and
inc
adc
cmp
pop
mov
push
add
mov
pop
ja
fmuls
pushf
lea
push
cmp
fldcw
adc
pop
sarb
mov
and
icebp
andl
pop
test
sar
jns
xchg
add
fdiv
and
push
add
or
outsb
pop
in
mov
cmpb
pop
inc
pusha
cmp
cmp
dec
imul
mov
js
in
push
call
and
jae
adc
xor
xchg
mov
mov
cwtl
les
pop
mov
loopne
xchg
das
paddsw
pop
or
mov
cltd
adc
xor
ret
sub
sti
cmc
cmp
push
clc
or
sub
popl
xor
adc
adc
aam
or
cwtl
enter
mov
cld
xchg
dec
shlb
test
ljmp
and
dec
fwait
xor
and
cmp
insl
or
sub
je
pop
daa
push
adc
push
mov
and
addl
and
jnp
shl
int3
repnz
cmp
cmp
fcmovnb
pop
ret
into
pop
sti
jne
jns
ja
cli
xor
int
test
inc
push
mov
mov
addb
add
scas
mov
mov
lea
cmpsl
adc
aad
out
enter
test
cmc
test
cmc
sbb
cli
adc
aad
es
pop
stos
xchg
sbb
fisttpl
jns
test
and
pushf
mov
das
xchg
push
inc
inc
cmp
xor
adc
out
xor
mov
inc
loop
or
sbb
dec
data16
cld
sahf
out
sbb
ficoml
xor
push
lret
cltd
insb
icebp
jo
inc
sarl
ret
ud0
pop
push
mov
mul
dec
shlb
xchg
jbe
cli
and
loopne
pop
sahf
loop
repz
sub
cli
aaa
test
add
test
call
or
ret
adc
in
scas
or
sub
lea
out
jbe
arpl
iret
fdiv
lods
ss
jnp
cmp
pusha
test
lret
push
add
std
jb
xchg
outsb
pop
adc
mov
pushf
in
lds
mov
test
xchg
or
pushf
dec
sbb
std
lahf
sbb
xor
xchg
in
vmwrite
stc
jmp
sub
push
loopne
xchg
ljmp
lret
loopne
adc
pop
ret
sbb
xchg
mov
dec
jle
xor
dec
and
mov
jl
ficoml
jl
lock
push
push
mov
loope
or
add
xchg
hlt
xor
enter
jb
data16
lahf
andb
out
and
adc
cs
loop
jp
daa
jno
scas
push
jmp
add
fwait
mov
adc
mov
loope
in
pop
add
push
test
jp
dec
pop
or
movsl
pusha
rcl
hlt
popa
mov
push
clc
mov
sub
mov
bound
jg
loopne
cltd
pop
sub
clc
jecxz
lea
lret
hlt
cld
stos
das
test
xor
cmp
sub
cmp
imul
sbb
scas
or
popa
mov
mov
daa
inc
sbbl
out
xchg
scas
sbb
subl
hlt
jle
jb
xchg
imul
icebp
fstl
or
enter
mov
out
mov
les
push
fisubrs
enter
jo
std
push
ret
out
mov
xor
rorb
inc
adc
rclb
cs
mov
shll
loopne
cltd
and
loop
push
in
loope
scas
daa
hlt
cs
push
insl
push
fcmovnbe
fidivrl
lcall
fdivr
dec
pop
gs
pusha
mov
mov
pop
in
mov
jg
cmp
data16
push
sbb
cli
and
aas
movb
xorb
xor
push
push
ja
pop
cmp
or
es
xchg
out
adc
ja
pop
scas
clc
bound
shl
aam
lret
dec
enter
out
cmp
push
add
stos
sti
dec
cmpsl
push
or
or
pusha
pushf
or
pop
mov
mov
repnz
arpl
jle
cmp
mov
lcall
aam
stc
fcmovnbe
push
movb
xlat
pop
pop
movsb
jns
arpl
cmp
sub
push
rcll
and
test
xchg
lea
sub
xor
inc
pop
push
add
sub
and
hlt
jp
xlat
mov
test
push
xor
xchg
and
out
sbb
add
jp
cmp
or
push
mov
lcall
imul
sbb
in
push
or
sub
fimull
loop
push
pop
push
mov
xor
ds
dec
lret
xchg
sbb
dec
insb
mov
test
add
mov
push
add
and
pop
or
lret
xchg
jns
shlb
xor
bound
hlt
shll
mov
movsb
and
iret
out
xor
push
xlat
cmp
int
icebp
int
lret
or
test
movsb
jge
and
jb
cmp
sti
mov
xor
cwtl
push
mov
in
inc
inc
adc
mov
stos
ljmp
clc
xchg
movsb
enter
mov
xchg
pop
roll
rol
push
pop
mov
mov
ret
sbb
out
push
mov
negb
call
pop
leave
loopne
fstl
in
hlt
pop
mov
add
pop
mov
lret
out
pop
addl
sbb
jg
rorl
stc
inc
dec
cmp
cmp
push
loopne
test
jg
or
and
or
mull
lods
fisubs
sbb
popf
dec
test
sbb
out
mov
or
inc
test
addb
ja
ljmp
jge
push
out
lea
fidivrl
mov
sbb
add
xchg
fbld
jle
out
push
sub
cs
pop
push
cmp
repz
jg
cmp
in
lahf
xchg
adc
jmp
push
ja
fmulp
cmp
jns
aas
xchg
cltd
mov
lahf
xor
dec
sbb
pop
cmpsb
out
pushf
rcrb
rclb
into
lods
ret
or
dec
sbb
das
mov
adcl
mov
xor
out
int3
hlt
pushf
pusha
leave
sbb
push
jmp
adc
loope
fwait
push
pop
and
sub
roll
in
inc
ficoml
inc
enter
cmpsl
bnd
push
sbb
nop
in
and
imul
fwait
push
ret
lds
mov
lds
inc
pop
or
es
mov
sub
dec
mov
lea
scas
push
xchg
or
or
mov
movsl
inc
fistps
mov
cmp
sub
add
dec
and
mov
push
enter
test
lds
jae
iret
sub
scas
outsl
xchg
sub
movsb
sub
jae
iret
mov
sbb
xchg
imul
inc
je
sub
add
enter
fsubs
jnp
jns
pushf
push
add
bswap
sarl
popa
mov
call
lds
lds
cmp
sbb
inc
aam
cli
push
addr16
add
cmp
movsl
or
dec
inc
pmulhuw
sbb
into
add
dec
sub
and
jle
ljmp
popa
push
xor
inc
das
pop
pusha
dec
cmp
xchg
aad
mov
adc
cmc
xchg
call
or
push
push
push
jp
daa
or
fnstcw
xchg
push
push
subb
enter
and
inc
xor
push
fcmovbe
icebp
aas
push
rcll
sbb
mov
mov
ds
add
pop
xor
js
les
je
pop
call
mov
xchg
loope
jmp
mov
andb
mov
ss
scas
add
fadds
xor
in
sarb
dec
jp
inc
mov
daa
scas
add
and
test
ret
or
in
inc
clc
paddusw
bound
jmp
in
aam
mov
in
arpl
call
push
pop
cmp
in
js
mov
lea
inc
insl
sbb
mov
inc
cli
mov
fnop
dec
mov
xchg
jmp
in
xchg
mov
mov
xchg
mov
push
push
pop
lret
lahf
cmpsb
jl
sub
mov
sub
push
clc
cmp
iret
dec
add
push
test
pop
push
xor
lcall
mov
pop
dec
iret
mov
and
adc
test
stos
in
lret
xchg
cmp
icebp
sbb
inc
sub
add
insb
dec
pop
jge
sarl
xchg
daa
fdivp
fdivl
scas
loope
jno
fdivs
mov
inc
cmp
mov
xchg
xchg
sub
lods
js
or
pusha
stos
jns
jno
add
ss
pop
pushf
addr16
pop
fnstenv
mov
outsl
and
inc
stos
scas
ret
lea
xor
aam
into
add
sbb
test
adc
mov
sahf
mov
cmpsl
mov
or
cltd
mov
int
jb
int3
fistpll
adc
jb
ret
decb
mov
mov
in
push
cmpb
or
pusha
mov
push
cmpsb
cmc
mov
fcomps
xlat
mov
std
sub
test
shrb
sbb
push
push
fiaddl
fistps
cld
cltd
scas
sub
test
or
mov
xor
push
loope
mov
mov
aas
mov
lods
ljmp
rorl
in
cmp
dec
pop
mov
cld
lds
cmp
sub
les
sub
inc
nop
shrb
jbe
popf
dec
fs
repz
js
mov
outsb
cmc
push
test
lret
lods
adc
fists
scas
insl
cmp
lods
add
cs
mov
into
xchg
sarb
jbe
adc
mov
pop
dec
add
rcrl
jb
inc
lods
inc
sahf
sub
subb
jne
inc
cmp
dec
and
mov
and
imul
xor
mov
add
fstpl
mov
jne
jne
jns
pop
nop
mov
mov
hlt
scas
push
mov
je
push
test
shrl
mov
push
inc
xlat
and
loopne
mov
das
imul
ds
pop
pop
iret
test
push
mov
imul
gs
xor
iret
sub
hlt
mov
jne
jmp
jg
push
pop
jae
mov
insl
cmp
jnp
mov
cld
pop
fmull
pop
mov
push
xor
add
or
fisttps
cmp
and
out
push
lea
cltd
pop
adc
xchg
or
mov
pusha
xorb
push
and
fbld
rorb
fcom
mov
xchg
je
inc
push
or
xchg
mov
mov
dec
call
in
aaa
rolb
daa
fcoms
cmpsl
scas
xchg
repz
xchg
mov
jl
insl
sub
xor
lods
popa
stos
in
popf
lea
in
out
jecxz
insl
mov
out
gs
mov
inc
out
xor
rcrb
jmp
out
push
mov
repz
mov
ficoms
jmp
mov
and
lret
rcr
lods
addr16
data16
mov
inc
add
pop
scas
sub
add
xor
ss
jmp
bound
movsl
scas
dec
call
xor
adc
pop
icebp
xchg
scas
pop
lret
bound
or
cld
repz
sbb
inc
mov
mov
cmp
mov
in
int3
lcall
dec
add
fdivs
gs
add
xor
popa
push
inc
dec
push
imulb
sub
das
mov
gs
ss
cmp
inc
pop
iret
mov
adc
test
cwtl
push
ja
jl
mov
pop
add
inc
fidivl
imul
pop
scas
and
jle
adc
push
adc
or
clc
or
xor
jb
add
or
sarl
lret
in
mov
pop
mov
add
push
xor
lcall
test
dec
lods
mov
mov
mov
push
hlt
xlat
scas
pop
lret
add
popf
loopne
mov
cmp
sub
fs
in
ja
mov
xchg
jl
push
mov
mov
ret
rol
pusha
mov
sub
jp
lret
xchg
dec
inc
cmc
add
push
div
pushf
pop
and
ud0
sbb
in
mov
jle
xor
ret
iret
or
movsl
cmp
mov
push
push
cmp
ss
jne
fiadds
mov
loope
test
es
jbe
call
xchg
xchg
daa
jnp
movsb
and
jne
jne
ljmp
xchg
loope
push
mov
cmpsl
ss
push
out
mov
jp
loopne
shrl
xor
or
dec
add
jge
sbb
push
fst
push
iret
int3
mov
push
cmp
popf
pop
mov
outsb
aad
add
rcrb
cmp
mov
inc
notb
popf
cltd
cs
pop
int3
faddl
out
stc
icebp
cmpsb
mov
cld
mov
push
pminsw
push
mov
xor
and
mov
push
jno
mulb
pop
mov
mov
iret
jae
fsubrs
and
sti
jnp
les
call
test
lock
shlb
sarl
mov
cmp
adc
je
cltd
les
popa
jecxz
out
mov
in
jno
inc
aad
ja,pn
insb
scas
imulb
es
xchg
loop
ror
xor
in
add
jecxz
xlat
pushf
fs
orb
mov
and
pop
cmpsl
jecxz
and
inc
js
outsl
jp
sub
fisttps
nop
add
sbb
xor
mov
in
adc
mov
pop
cld
idivl
test
lret
push
lcall
lods
out
sbb
sub
sub
mov
sub
jno
nop
andl
xorb
inc
inc
mov
pop
mov
mov
sbb
mov
lods
pop
ret
andb
dec
inc
jns
andl
jmp
jns
out
test
loop
cmpsb
mov
mov
dec
aad
sub
das
cwtl
stos
shll
xchg
incb
xchg
sti
sbbl
xchg
xchg
loopne
push
pop
fsubs
cmp
or
xor
cld
sbb
jne
and
cmp
fisubrs
dec
jmp
mov
xor
push
sub
ss
xchg
pop
adcb
pop
mov
repz
mov
enter
nop
rclb
push
mov
fsts
outsl
sub
inc
inc
inc
ljmp
cmpsl
push
and
pop
rclb
stos
dec
insl
ficoms
mov
mov
mov
sub
ret
and
in
imull
test
sti
jno
mov
psubusw
call
inc
filds
lcall
decb
and
lret
mov
inc
scas
pop
mov
sbb
push
sbbb
add
std
insl
sti
dec
fucomip
mov
mov
add
fsubrs
hlt
or
lret
lret
push
rorb
out
add
add
lds
dec
sub
cmp
aaa
or
je
int
mov
push
jmp
movsb
xchg
pop
mov
and
fdivr
lds
jb
add
cmpb
repnz
push
add
cmc
andb
andb
test
jecxz
jl
or
rcll
iret
xchg
fstl
stos
xchg
addr16
sbb
fcoms
dec
aad
mov
popf
stc
pop
fsubr
dec
push
inc
pop
jl
and
cmp
addr16
and
out
mov
scas
into
push
jne
popf
cmp
pop
mov
adc
ljmp
in
mov
sahf
jmp
int3
fmuls
repnz
bound
repnz
xor
mov
mov
adc
jb
int3
repz
andb
insl
rorb
fcmovu
ret
repnz
loop
out
out
add
pop
mov
push
dec
into
pop
mov
push
adc
dec
scas
push
repz
mov
push
out
lods
addl
test
inc
scas
sbb
test
xor
adc
mov
int
mov
xchg
mov
mov
push
call
dec
stos
add
fistl
out
xchg
dec
xchg
repnz
adc
enter
add
mov
mov
xchg
ret
addr16
push
movsb
cmpl
jge
iret
push
aam
adc
xchg
mov
mov
test
inc
out
insb
stc
mov
imul
pop
test
out
inc
cmc
pop
fs
xlat
mov
call
ret
xor
lods
pop
xor
xchg
mov
stos
sub
cmc
or
jno
xchg
inc
mov
jnp
xchg
shll
sbb
jns
call
sbb
clc
adc
jl
add
or
mov
jo
lock
jnp
in
pushl
sar
mov
iret
push
stc
push
outsl
sub
sbb
scas
mov
mov
shl
mov
data16
push
push
sub
mov
in
loopne
push
inc
stc
aaa
pop
int
aas
fs
scas
and
jb
cmp
inc
lret
in
jge
push
push
mov
cwtl
sbb
add
pusha
adc
xchg
pushf
cmp
xchg
dec
in
pushf
lea
cmp
mov
insb
repz
xchg
arpl
fsubl
add
cmp
cmpsb
or
ljmp
loopne
jmp
jge
add
xor
or
sub
subl
mov
mov
ret
clc
mov
dec
lret
lret
sub
inc
sub
dec
repnz
sbb
stos
rcrb
mov
test
into
stos
sbb
icebp
push
shl
clc
popl
lahf
dec
imul
xchg
sub
jo
jns
testb
cmp
loope
outsb
pushf
imul
rorb
enter
xlat
xchg
rcrl
add
bswap
sub
insb
pop
xor
fidivrl
inc
push
cli
mov
xchg
mov
pusha
adc
add
sub
mov
and
jbe
jecxz
and
insl
in
lret
mov
clc
int
dec
das
gs
push
stc
cmp
add
js
inc
dec
adc
pop
rorl
fbstp
clc
fidivl
fldenv
pop
mov
pop
push
jnp
inc
cltd
inc
pushf
jg
mov
pop
lret
xchg
add
jo
in
add
pand
outsb
das
js
jle
dec
push
nop
adc
xchg
or
nop
fmul
iret
cmp
iret
popf
test
vpmaxub
hlt
cmp
jae
adc
xchg
add
es
and
imul
sbb
pop
popa
jne
imul
lret
sarl
push
dec
mov
jno
pop
jne
stos
stos
add
inc
mov
add
xchg
mov
cmp
fwait
mov
fsts
sbbb
cli
mov
fsubs
mov
and
ret
pop
out
cld
cld
ljmp
sbb
mov
lds
fwait
into
mov
das
fwait
shrl
cmp
jns
fstpl
push
dec
inc
push
xchg
div
fs
lods
mov
sub
std
mov
mov
cwtl
pop
sarl
ret
or
test
or
xor
mov
add
or
js
inc
pusha
adc
or
imul
xor
push
pop
push
cmp
cmp
fucomp
mov
repnz
or
add
adc
sarl
fs
daa
fdivp
dec
cltd
push
push
xor
and
cmp
fwait
iret
loope
mov
inc
int
fsts
mov
shlb
addb
out
pop
out
jmp
es
mov
mov
test
mov
insb
sub
fwait
xor
jle
push
xchg
mov
adc
cs
imul
int3
inc
std
cld
shll
inc
mull
cmp
stos
xchg
xor
cmp
inc
daa
ljmp
mov
fdivrs
ret
jo
popf
mov
mov
and
aad
cmpsb
sahf
mov
negb
jbe
nop
jns
insb
call
push
mov
or
jge
xchg
and
xor
jp
dec
in
push
mov
push
push
push
or
pop
add
hlt
xlat
cwtl
jge
lahf
sub
dec
mov
xor
jne
nop
sbb
inc
inc
cmpl
aaa
mov
pushf
push
jno
aas
mov
add
xor
xchg
pop
xor
inc
mov
mov
xor
fiadds
add
add
xchg
sti
push
fadds
mov
cmp
or
cli
inc
jmp
nop
int3
aas
jo
into
ss
jbe
subb
adc
fidivrl
pop
cmc
mov
js
xor
aas
into
push
adc
sbb
test
shrb
inc
xchg
sarl
mov
loope
in
in
arpl
scas
out
pop
mov
mov
jo
ljmp
loop
les
cmpsl
andb
je
sbb
fwait
pop
add
jae
jg
sbb
ja
scas
add
aas
pop
loop
jae
xor
cmp
dec
push
jo
sarb
jae
imul
lds
movsl
push
jmp
adc
push
dec
nop
rcrb
push
cltd
shl
ljmp
mov
xchg
lahf
dec
lret
hlt
sub
adc
cmpsb
clc
cmp
cmpsl
es
sbb
out
xchg
mov
das
inc
add
dec
lods
shlb
inc
rcrb
jb
xchg
aaa
push
or
nop
stos
xchg
decl
ds
idivb
inc
pop
rol
mov
rcrb
out
in
vmovdqu
and
xor
int
push
in
out
jb
loopne
push
in
test
jb
ljmp
out
sub
cmp
xor
jge
add
je
jp
adc
into
or
mov
sub
dec
add
scas
xor
loop
push
jle
out
push
mov
mulb
dec
fdivl
fwait
mov
xor
std
jae
cmp
and
mov
and
pop
not
fidivs
push
adcl
lret
arpl
xchg
push
inc
cmpsb
int
push
lcall
cmp
loopne
or
mov
dec
das
fs
sbb
mov
xchg
into
sub
xchg
sbbl
sbb
sbb
daa
repnz
lds
xchg
movsl
loop
inc
je
outsl
sbb
stc
imul
pop
mov
pop
dec
cmp
test
pushf
out
xchg
movb
pop
iret
inc
ficoml
xor
mov
inc
jb
mov
fnstsw
xor
iret
bound
sub
push
mov
xor
xchg
adc
popf
rol
adc
icebp
lods
repnz
dec
jmp
scas
pusha
push
fs
xchg
push
mov
das
rcrb
cltd
inc
movsb
add
cmp
cwtl
nop
sbb
adc
mov
clc
ret
push
lds
je
xchg
out
ret
outsb
sub
fistpl
adc
subl
cwtl
arpl
cmpsl
push
dec
test
xchg
adc
outsb
popa
aaa
mov
xchg
scas
sbb
or
loopne
test
jg
popf
add
sbb
jl
push
cmpsl
testl
xchg
addb
leave
adc
sub
cwtl
sub
adc
pop
icebp
push
je
lods
adc
cltd
xlat
mov
mov
fsubs
jecxz
out
pop
jl
inc
jmp
push
sti
cmp
push
popa
repz
or
ret
xchg
sub
or
mov
adc
fsubrs
cld
outsb
call
in
in
jo
ret
pop
mov
fsubrs
mov
mov
jle
jle
or
shrl
jbe
xchg
push
roll
insb
sbb
lcall
push
jb
ljmp
or
add
dec
mov
sub
mov
jns
cmp
int3
and
lds
outsb
insl
fdivrs
dec
sbb
mov
pushf
jbe
mov
test
and
mov
mov
dec
mov
xchg
xchg
cs
mov
mov
and
adc
mov
iret
dec
mov
aaa
in
inc
shll
loop
dec
shrl
lods
xor
mov
insb
dec
mov
mov
and
jmp
lret
dec
cmp
sub
xlat
sub
movsl
lods
inc
or
lret
mov
shrb
imul
mov
rorb
or
cmpsl
pusha
pop
setge
mov
fmull
leave
mov
jae
xlat
cmp
stos
dec
xor
cmpsl
shlb
addr16
std
mov
add
xchg
cld
mov
idivl
xchg
andb
aaa
cmp
xchg
ss
sbb
je
fsubrl
orb
ret
fwait
lock
pop
xchg
or
sub
jo
das
out
pop
test
test
aaa
push
addb
xchg
and
mov
cmp
dec
inc
xchg
cmp
mull
je
cmp
test
mov
nop
cmc
xchg
dec
fdivl
outsl
cmp
pushf
cmp
loop
fnsave
enter
jns
mov
jbe
loope
movsl
rcrb
add
out
push
leave
sbb
mov
push
mov
push
imul
int3
cmp
xchg
fsubl
mov
inc
arpl
sbb
mov
and
lods
or
and
pusha
and
jecxz
shlb
xor
xchg
movl
jno
shll
sti
xor
adc
xor
arpl
add
xchg
lahf
pop
mov
sbb
hlt
adc
mov
jge
and
pop
in
push
sahf
dec
inc
scas
pop
in
in
push
fs
cmpsb
lock
adc
or
insb
testl
mov
dec
ja
mov
inc
in
and
and
popf
inc
lret
sub
dec
mov
cmp
push
and
dec
repz
repz
cli
aas
mov
push
clc
test
scas
dec
idiv
jecxz
das
dec
ljmp
pop
add
dec
sbb
dec
adc
cmp
jo
inc
popf
jnp
dec
mov
shlb
lret
dec
push
sarl
pop
pop
scas
int
inc
xchg
cwtl
dec
rolb
mov
inc
scas
push
ljmp
cwtl
stos
js
psubusw
mov
mov
push
or
dec
pop
mov
xchg
imul
pop
loop
ja
mov
pop
stos
push
sub
inc
sbb
lret
mov
bound
cmc
or
mov
movb
lret
js
fs
psrlw
add
jns
clc
aaa
mov
int
outsl
adc
sbb
fcoms
cmc
in
into
roll
ljmp
push
mov
push
lea
or
sub
nop
sub
mov
mov
xchg
outsl
cmp
nop
dec
adc
js
push
jo
jecxz
iret
xchg
add
scas
cltd
fcmovbe
lret
push
cs
adc
xchg
gs
inc
sub
inc
sub
jno
or
popa
xchg
sahf
adc
leave
cmp
movsl
enter
insl
or
jne
jmp
mov
roll
sti
jg
cmc
cmp
movsl
xchg
jns
test
in
jns
in
ljmp
push
jecxz
ja
rcll
movsl
loop
dec
call
jle
out
out
fcomps
mov
pop
pop
adc
test
sub
adc
shl
ret
inc
test
push
adc
push
inc
sarb
aam
xchg
inc
jecxz
jg
in
filds
sub
ret
add
gs
pop
dec
in
addl
call
jl
mov
out
mov
and
clc
out
fdivs
mov
xchg
mov
pop
je
nop
and
int
add
xchg
loope
mov
lds
adc
cmpsl
das
pop
or
inc
mov
mov
xchg
push
adc
ss
insl
cmp
cli
fs
test
add
enter
out
testl
dec
fstl
stos
add
pop
arpl
ds
fadds
dec
adc
imul
jmp
insb
jae
les
push
aas
das
mov
xchg
rcll
jbe
mov
xchg
arpl
pop
pop
lret
or
xchg
call
divl
inc
push
imul
mov
cmp
aam
fildl
in
dec
mov
mov
mov
cmp
lcall
movl
mov
xchg
dec
add
pop
or
mov
ja
out
popf
testb
or
pop
rolb
pop
bound
lret
mov
mov
sbb
add
jecxz
fs
pop
cltd
cmc
subl
loope
aad
ss
xor
mov
xor
dec
out
push
cltd
repnz
and
dec
not
inc
dec
cli
adc
sub
sub
xchg
clc
push
sub
addr16
push
xorb
cmp
clc
fiaddl
cs
mov
sbb
jg
xorl
pop
test
dec
or
push
jae
aam
adcl
dec
xor
xlat
inc
fxtract
fisubrs
inc
inc
je
pop
idivb
pop
fnstcw
ljmp
pop
and
das
xchg
jb
imul
aad
lea
push
mov
mov
shll
pop
cld
imul
push
mov
outsl
loopne
aas
adc
add
sub
les
cmp
ret
adc
push
movsb
dec
ret
or
and
enter
jg
pop
inc
mov
mov
dec
mov
jle
jnp
sbb
mov
cmp
dec
xchg
mov
pop
and
inc
mov
xchg
loope
inc
cltd
test
fsubrl
stc
xchg
and
inc
popa
mov
push
sbb
push
cmp
dec
call
hlt
xor
js
add
mov
cli
into
push
or
jb
mov
je
inc
dec
inc
push
call
mov
loop
jnp
mov
jb
sar
adcb
mov
lods
push
push
nop
push
push
push
mov
push
push
leave
fwait
push
jg
adc
pop
mov
insb
scas
aas
push
dec
cmp
ficomps
xor
mov
sbbb
shlb
adc
clc
andl
add
cmp
icebp
js
mov
xchg
push
ret
pop
inc
fbld
in
bound
cmp
imul
rcl
cmp
dec
push
xchg
stc
scas
cs
aad
pusha
add
lods
sbb
push
sarb
mov
adc
test
sub
insb
mov
pop
xlat
push
pushf
mov
bound
jle
or
cs
imul
and
mov
decl
andb
inc
sub
fidivrs
jb
cmp
dec
scas
cli
mov
pop
jo
and
sub
sub
jbe
add
mov
jp
inc
jb
rcrb
jo
clc
and
mov
inc
cld
scas
addr16
or
xchg
pop
fldenv
lock
data16
push
cmp
lret
xor
cmp
fcmovne
and
pop
pop
outsl
push
aad
mov
fst
jmp
cmp
add
adc
pop
pop
jl
adc
in
xor
lods
outsb
and
xor
jbe
adc
xor
cmpsb
inc
adc
sub
push
mov
xor
ljmp
adc
lods
ds
xchg
pop
xor
ret
or
int
inc
roll
ja
cwtl
pop
test
push
pusha
inc
mov
mov
in
mov
into
jo
jno
adc
out
shll
mov
rclb
in
mov
sbb
orb
push
repnz
jge
xor
mov
and
push
in
leave
outsl
xchg
lds
dec
mov
push
lahf
daa
adcb
mov
adc
add
int
mov
or
cmpsb
leave
leave
adc
xchg
and
push
inc
sbb
jecxz
adc
data16
cli
mov
and
xlat
xchg
enter
add
aad
mov
gs
outsl
mov
js
mov
sbb
push
sbb
daa
lcall
xor
and
or
mov
lret
and
push
and
and
inc
leave
jle
pop
adc
mov
push
xchg
popa
into
jecxz
inc
movsb
fdivrs
sub
or
js
xchg
imul
fwait
cmp
jo
inc
xchg
cmc
adc
cmc
lret
inc
push
in
pushf
and
sbb
fisubrs
out
sbb
int3
inc
cltd
dec
fcomi
inc
jbe
fcomps
add
inc
sti
xchg
mov
roll
scas
xor
mov
ret
lea
insb
insb
sbb
xor
or
pop
stos
sub
sbb
xchg
sbb
clc
jl
mov
or
mov
sub
push
adc
js
mov
fldcw
mov
loop
fbstp
lods
mov
sahf
dec
out
inc
inc
cmpsl
call
jne
ss
adc
outsb
jge
sub
jl
adc
stos
hlt
loop
cmpsb
test
pop
add
lret
out
sbb
or
fsubl
cmc
push
cli
insb
cmp
mov
je
ds
out
icebp
push
or
in
lcall
pop
mov
xor
ljmp
push
sub
pop
mov
push
pusha
mov
test
inc
divb
call
mov
cmp
cmp
and
push
out
stc
stos
out
icebp
adc
sbb
call
sub
push
lods
push
aas
jmp
adc
lock
cmc
test
test
xor
xchg
mov
aad
or
cmpsl
push
xor
addl
iret
xchg
gs
sbb
test
or
aas
mov
xor
sub
xchg
mov
mov
sbb
pop
adc
mov
mov
data16
out
push
add
push
hlt
add
push
jns
dec
pop
inc
sub
outsl
pusha
int
shll
idivl
add
lahf
aaa
test
adc
sub
mov
push
lds
push
stos
mov
dec
dec
xor
xor
out
jmp
and
jle
dec
push
jle
rol
mov
aad
mov
loopne
pop
dec
mov
nop
cltd
jns
xchg
or
dec
sub
xchg
das
jno
or
pop
sbb
inc
dec
xchg
in
pop
mov
push
les
cmp
out
out
rcl
push
dec
pop
or
cmp
mov
mov
push
mov
das
fwait
lds
inc
cmpsl
pop
int3
push
xchg
lret
sbb
shlb
xor
into
out
in
mov
inc
in
movb
cwtl
mov
and
or
push
xor
call
push
and
mov
inc
inc
jecxz
andb
xchg
fs
lahf
lock
add
iret
inc
mov
pop
sub
mov
mov
cs
sar
xchg
mov
stos
out
sbb
push
stos
das
jg
jl
mov
mov
mov
repnz
in
insb
nop
xor
sbb
xor
sbb
pop
adcl
cmp
sbb
pop
push
mov
pop
xchg
sub
rorl
adc
lods
ljmp
shll
aas
add
enter
xchg
sbb
mov
add
pop
and
clc
aaa
mov
mov
sub
popf
lcall
lahf
fcmovu
fadds
jp
ret
push
lock
push
push
cmp
and
loope
and
orb
sub
daa
clc
sbb
sub
or
cmc
daa
mov
add
lea
lods
repz
dec
test
sub
lret
mov
into
out
cli
inc
push
jne
mov
insl
add
fldt
sti
dec
ss
push
mov
add
mov
add
ret
xor
push
iret
fisubrs
push
repz
cmp
orb
fcoml
ja
cmp
or
mov
mov
xorl
outsl
inc
bound
fwait
test
outsb
and
aad
addr16
test
push
jb
jle
sub
push
imul
shlb
jno
push
push
popf
and
lret
xor
ret
xor
jg
adc
or
jns
es
out
aaa
xchg
xchg
inc
mul
cmpsb
incl
sub
or
lods
test
fcmovne
inc
scas
inc
jnp
or
fmull
sbb
sub
data16
push
xchg
inc
lock
fwait
into
inc
mov
or
push
sbb
je
mov
jl
jle
push
out
aaa
xor
loopne
mov
fsubs
lret
cld
in
sub
negl
ret
out
xchg
mov
adcl
in
fdivrp
cltd
xor
test
ljmp
in
lcall
repnz
mov
in
or
cmp
sbb
negb
stc
cmp
movsl
mulb
iret
rorb
pop
push
push
cmp
add
loope
push
mov
test
dec
ljmp
and
and
andb
mov
mov
mov
int
rorl
pop
jp
mov
arpl
add
in
cli
and
ret
push
and
jo
ss
pop
xchg
je
imul
ret
or
hlt
pop
and
mov
in
inc
dec
addr16
jb
int
js
sbb
mov
imul
popa
out
mov
adc
out
or
es
sub
xchg
dec
scas
xchg
add
nopl
pusha
lds
mov
add
shlb
and
testl
dec
add
pop
sub
mov
mov
loope
js
imul
cltd
dec
adc
inc
movsb
sub
and
sub
jbe
dec
sub
inc
xor
icebp
push
xor
or
add
int
jp
addb
loop
inc
push
mov
ss
mov
mov
xchg
fdivr
fiadds
or
fwait
and
mov
xchg
add
and
repnz
ja
sbb
mov
jo
es
xchg
and
dec
inc
dec
lods
jbe
insb
jge
or
xchg
dec
pushf
mov
lret
xchg
loope
loope
xchg
cmova
push
push
mov
mov
repz
add
mov
jnp
repnz
leave
stc
push
aas
pop
push
cld
add
into
sbb
lods
gs
popf
xor
push
in
pop
adc
scas
lahf
jb
leave
rorl
nop
call
testb
repz
out
adc
jbe
daa
aam
inc
xchg
inc
xchg
cmp
lods
and
sbbb
dec
imul
mov
pop
pop
out
and
out
in
inc
add
xlat
push
stos
mov
test
add
push
icebp
insl
test
popf
fsubrl
dec
sub
mov
dec
mov
inc
cmpsl
jbe
xor
aam
movsl
stc
push
jno
cmp
cwtl
pop
mov
lret
cwtl
inc
ds
addl
or
xor
in
mov
imul
xchg
or
sbbb
mov
lcall
push
add
or
pop
xor
xchg
cmp
add
mov
push
sub
xor
sub
mov
pop
push
add
shrl
pusha
inc
sub
dec
and
in
xchg
fdivl
cmp
lods
inc
sbb
jmp
mov
data16
push
xlat
push
xchg
jl
sbb
sub
out
mov
aaa
push
mov
inc
scas
sub
push
fwait
mov
in
out
mov
ja
push
rolb
ror
cmp
cmp
cmp
pop
jge
in
pushl
pop
push
fidivrl
out
stos
push
cmpsl
in
cmp
aad
repz
out
xchg
xchg
dec
push
mov
aas
scas
sub
ss
fdivl
sbb
sub
push
shll
sarl
xor
mov
pop
mov
and
ja
icebp
test
and
xchg
jp
cmp
xor
cmc
push
sub
adc
dec
ss
and
dec
push
xor
pop
ret
test
pop
rolb
push
sub
mov
lds
out
aad
js
cmp
movsl
andb
loopne
and
xchg
clc
jbe
loopne
pop
insl
sub
inc
cmp
test
xlat
fcom
adc
ds
inc
sbb
lret
xchg
jge
cmp
mov
dec
ja
inc
jno
lret
dec
pop
inc
fimuls
mov
dec
stos
xchg
mov
repz
sub
xor
aas
out
mov
mov
or
outsl
shll
inc
adc
jp
cmova
ds
sbb
push
jnp
xchg
in
ljmp
sbb
les
rclb
cmp
or
xchg
cmpsl
mov
lret
fsubrs
repz
sbb
adc
bound
gs
xchg
out
pop
aad
and
xchg
das
xchg
xchg
mov
jns
add
sbb
mov
lock
sbb
adc
cs
daa
pop
mov
mov
lcall
out
xchg
push
out
adc
xchg
adc
aam
fildl
ror
ret
mov
mov
xor
scas
lods
jg,pn
fcompl
int3
leave
jbe
pop
in
js
into
xor
loop
test
push
sub
mov
push
mov
cmp
ret
loopne
lea
pop
mov
shrb
adc
inc
stos
repnz
push
pop
repz
add
mov
xor
or
rcll
dec
fisubl
js
jl
subb
fsubrs
push
xor
aad
fidivrs
jae
pushf
insl
shr
mov
insl
push
dec
add
jb
ret
insl
mov
mov
es
push
arpl
insl
ficoms
fsqrt
fprem
sbb
jle
jns
lahf
loop
sbbl
mov
dec
mov
outsl
loope
cwtl
movsl
lods
fstps
nop
int
adc
mov
push
inc
fld
and
lret
sti
pop
sbb
mov
jg
pop
lret
icebp
hlt
test
pop
std
adc
cwtl
jp
lret
pop
adc
dec
mov
cmp
pop
push
adcb
rolb
test
sbb
leave
lea
mov
hlt
and
push
mov
lret
in
loop
outsl
ja
mov
loopne
cmp
jge
fidivrs
xchg
cwtl
fcomp
push
aad
shlb
jge
mov
pop
sub
pop
xor
loop
xchg
shrb
nop
mov
pop
jb
or
imul
loop
iret
or
mov
imul
pop
xchg
repnz
inc
sbb
cmp
mov
sub
xlat
shl
mov
adc
or
aaa
add
sbb
mov
ja
xor
out
movsl
dec
cmc
movb
dec
pop
lods
or
sbb
int
icebp
in
adc
sub
insl
or
pop
pusha
in
mov
cltd
call
mov
dec
push
and
leave
mov
xchg
js
fsubrl
and
cltd
or
fdivl
sub
in
data16
or
push
jle
test
jbe
adc
outsb
cmp
mov
ja
test
cltd
fisubrs
lcall
xchg
pop
rcrb
xchg
lods
mov
clc
icebp
inc
mov
add
es
push
fcmovu
lock
iret
sub
inc
pop
mov
mov
mov
xor
enter
pop
pop
sub
xchg
adc
jmp
int3
in
repz
jp
or
jg
inc
mov
xor
les
sbb
jo
xor
and
fldcw
imul
scas
outsl
int3
out
or
lahf
pop
pop
pop
aas
cmp
icebp
shll
fs
inc
inc
test
out
push
and
pop
imul
sti
xor
lods
and
out
flds
and
pop
pop
sbb
loopne
cmp
add
fisubrl
sbb
mov
push
lret
lahf
arpl
mov
sarl
xchg
dec
into
rorl
aaa
jb
xchg
rclb
outsb
pop
insb
repnz
imul
push
test
mov
scas
sub
xchg
adc
rcl
mov
stos
and
outsb
jmp
test
stos
push
aam
pop
pop
ja
mov
test
jns
and
xchg
insb
aaa
xchg
cmp
call
shrb
hlt
mov
and
sahf
adc
cmp
int3
add
pop
adc
mov
xor
test
jecxz
mov
push
lret
aad
dec
fdivp
inc
sahf
scas
xor
push
icebp
push
sub
gs
repnz
mov
pushf
xor
les
mov
inc
sahf
ss
fmuls
jmp
sbb
sbb
ja
mov
in
mov
jnp
scas
scas
xor
mov
xor
test
add
cli
push
cli
aam
test
inc
sub
mov
pop
bound
lods
pop
dec
dec
test
fadd
fdiv
jp
popf
mov
and
out
movzwl
ss
imul
adc
in
mov
call
mov
pop
lds
or
mov
bswap
mov
push
mov
pop
inc
lahf
movb
sub
push
or
jp
call
jl
pusha
stc
in
jbe
push
mov
movsb
xor
mov
fwait
sbb
mov
push
mov
pop
dec
in
xchg
and
cmpsb
adc
stc
pop
test
jg
nop
xorb
sub
jb
and
mov
ljmp
cmp
push
push
adc
adc
mov
and
out
popf
mov
push
cwtl
rolb
insb
out
aam
xor
cld
mov
sbb
xor
andb
fwait
adc
into
loopne
sub
in
xchg
psubusw
jo
push
inc
mov
mov
in
rcrb
jns
sbb
pop
sub
popa
or
icebp
sbb
add
in
jne
call
xor
shlb
scas
cmpsl
and
loopne
mov
or
shlb
mov
add
cwtl
ja
mov
mov
add
sbb
in
lods
nop
mov
jb
iret
fs
mov
xchg
int3
and
icebp
or
lret
xorb
add
lahf
jo
dec
xchg
dec
push
loope
lret
jge
cmpl
pusha
movl
push
stc
dec
hlt
je
xor
mov
adc
outsb
jb,pn
mov
jnp
mov
repnz
pop
loope
loope
or
adc
outsl
gs
xchg
or
fwait
or
cmp
jge,pn
jb
fsubs
mov
add
adc
cmp
mov
ret
loop
cmc
push
scas
shll
inc
pop
call
cwtl
addl
faddl
lcall
pop
dec
pop
mov
test
mov
pop
daa
pop
mov
pushf
or
nop
sar
adc
add
lcall
or
imul
pop
shlb
sti
fnstcw
fildl
leave
inc
rorb
shlb
xor
jmp
out
cmp
pop
in
mov
xor
test
xor
iret
mov
imul
push
mov
lahf
inc
sgdtl
repnz
pop
loope
scas
mov
jno
mov
push
js
in
loope
aaa
pushf
adc
cmpsl
or
push
in
mov
in
inc
inc
lds
test
fs
jecxz
ficoms
jecxz
rcl
fisubrl
adc
xor
xchg
mov
jno
in
sbb
rcll
outsb
movsb
fldcw
shl
push
addr16
subb
in
pop
mov
sbb
jo
shll
jo
mov
cmpsl
hlt
and
sub
das
fiadds
mov
jno
and
daa
xor
cmp
push
test
mov
enter
mov
xchg
adcb
cwtl
dec
jno
loopew
pop
xchg
sbb
inc
add
sub
add
cmp
mov
hlt
cwtl
add
xor
and
cld
es
test
xchg
jo
add
dec
icebp
call
subb
mov
iret
lret
mov
mov
push
out
cmp
mov
jnp
adc
pushf
hlt
lcall
ljmp
in
add
pop
add
lahf
incb
sub
xor
or
add
inc
lahf
jp
in
fwait
aad
cltd
pop
cmc
cmpl
push
out
rorb
push
adc
mov
lahf
sbb
lret
hlt
adc
jl
call
das
test
jne
lods
jle
push
xchg
and
fidivrs
rorb
scas
lea
xor
dec
add
mov
mov
push
icebp
mov
pop
pop
loopne
and
dec
push
insb
cmp
rolb
pop
adc
lods
js
pop
stc
jb
adc
imul
pop
std
in
test
dec
mov
loopne
inc
insb
cmpsl
or
add
insl
jnp
push
nop
enter
mov
iret
jbe
xchg
sbb
bound
jl
jns
gs
add
jne
jnp
pushf
dec
nop
inc
inc
xlat
inc
loope
jnp
dec
fnsave
add
sub
popa
and
push
outsb
pop
and
inc
je
sub
pop
push
subl
add
pop
cmp
int
lret
sub
sub
or
ret
ss
test
shlb
jecxz
out
lahf
imul
cs
outsb
mov
hlt
jmp
push
rorb
mov
sbb
mov
push
test
mov
xor
add
jb
ljmp
sbbb
and
sbb
mov
scas
jb
jno
sti
popf
and
jmp
sarb
in
jno
ljmp
fs
pop
cwtl
loope
in
add
dec
add
popf
dec
popf
test
mov
xchg
sbb
xor
ret
pop
xor
adc
sub
fistl
shl
dec
stos
sub
push
rcl
push
daa
fimuls
shlb
mulb
and
and
push
das
out
sub
sbb
in
sbb
pop
ljmp
mov
rsm
leave
and
adc
pop
stc
mov
add
jg
push
jle
mov
in
ss
dec
sub
inc
data16
cmp
xchg
adc
adc
sbb
hlt
dec
cmp
or
jl
mov
xchg
cltd
xchg
shrl
imul
jp
enter
xor
cmp
pop
lods
aas
or
cs
xchg
daa
in
push
xor
and
insl
test
pop
enter
iret
jne
rcrl
jae
mov
push
add
push
adc
nop
jae
push
fwait
js
pop
pop
les
fists
out
int3
in
jo
or
cwtl
and
out
ds
xlat
aaa
fs
pusha
pop
jne
add
xor
mov
cmp
daa
shl
cli
mov
rcrl
lods
push
push
aas
arpl
outsl
int3
push
outsl
mov
mov
dec
cltd
push
movsb
mov
aad
lock
imul
pop
fldt
subl
orl
and
xchg
cmc
sbb
sub
repz
mov
or
out
mov
push
jl
jno
ss
and
dec
add
arpl
lcall
xchg
cmp
clc
jae
lods
sbbl
addr16
sub
orl
gs
and
insl
sub
xchg
mov
js
push
lea
cmpsl
cwtl
js
leave
inc
jge
test
sub
jg
daa
testl
mov
or
jbe
cli
imul
jb
dec
test
and
insl
fwait
stc
jmp
lret
xchg
jmp
adcb
test
js
mov
jecxz
or
mov
sbb
push
sti
sbb
dec
mov
inc
loopne
in
enter
pop
jnp
out
mov
movsl
fwait
mov
dec
push
inc
inc
das
ss
push
movsb
hlt
pop
loope
jb
sub
addr16
js
push
movsb
xor
cmp
push
sub
in
aad
sti
pop
adc
mov
and
pusha
inc
imul
mov
ds
je
sub
xor
stos
add
out
push
lahf
mov
xchg
int
add
sbb
sub
ljmp
dec
negb
fsubrp
cmpsl
rcrb
mov
movsl
lods
jp
std
fisttps
sub
push
pop
sub
les
pop
ja
test
je
movsl
jge
jne
push
xchg
mov
gs
mov
les
repz
sub
lahf
inc
cmpsl
js
mov
and
and
negl
push
mov
mov
mov
dec
lea
cltd
inc
sub
mov
push
daa
cmp
fmuls
popl
pop
fldt
es
adc
aam
sarl
push
fimuls
lea
js
cmp
adc
jns
cmp
add
les
push
and
imul
jge
scas
dec
mov
push
and
adc
lret
iret
sarb
dec
add
int3
xchg
mov
test
and
sbb
outsl
push
nop
adc
push
adc
fistpll
into
popf
int
ret
scas
pop
out
push
pop
and
es
cmp
cmp
lret
stos
ljmp
mov
inc
rcll
add
mov
dec
mov
sbb
int3
inc
ffreep
xor
into
insl
mov
fdiv
sarb
arpl
arpl
test
lods
jns
dec
add
pop
sub
mov
push
pop
scas
stc
mov
inc
sub
push
mov
push
xchg
push
pop
mov
cwtl
out
dec
xlat
ret
jnp
popa
sbb
sub
and
fidivrs
jl
shlb
jns
xchg
mov
addr16
clc
pop
fnstenv
cwtl
jo
js
addr16
jmp
push
cmp
iret
mov
daa
mov
mov
fcomps
adc
fwait
inc
push
shll
lods
xlat
add
std
pop
lret
mov
iret
subb
cmp
cmp
jmp
sub
or
cmpsl
mov
and
inc
jle
outsl
mov
add
in
stos
mov
mov
out
cld
mov
lds
aas
adc
mov
mov
mov
dec
or
lahf
orl
sbb
jns
jmp
fmull
push
push
mov
movsl
add
and
test
inc
out
out
outsl
add
mov
adc
int3
sub
or
clc
sub
repz
ja
les
inc
dec
ret
jecxz
lock
jae
pop
data16
adc
ss
roll
jmp
outsb
jb
popf
cmp
jne
testl
fsubr
xor
xlat
rcll
test
dec
popf
push
out
sarb
inc
push
pop
gs
fldt
adc
sbb
dec
dec
out
ret
xchg
leave
repz
sbb
mov
adc
sti
adc
xchg
mov
jmp
jge
sub
lret
pop
push
aaa
mov
in
pushf
xor
out
fwait
mov
xchg
mov
mov
es
xchg
jo
and
cmc
addb
sbb
daa
icebp
movsl
lods
aaa
mov
das
sbbb
js
sti
cltd
test
fldcw
sbb
in
notl
ret
jnp
repz
aaa
jbe
addl
mov
or
and
sbb
and
lahf
mov
mov
push
shrl
aas
out
aam
jle
sub
inc
jecxz
out
inc
or
loop
mulb
ret
ret
test
in
sbb
xchg
outsb
or
rcr
shl
popf
jg
add
cmpsb
jb
popa
in
sub
out
push
mov
out
sbb
push
xchg
and
dec
scas
jnp
xchg
inc
clc
jns
sub
fldt
mov
adc
lods
stc
xor
jne
add
pop
jno
mov
sbb
scas
mov
adc
xlat
pop
sub
inc
aaa
xlat
inc
cwtl
dec
pop
jnp
in
pop
pop
push
or
push
mov
push
mov
pushf
pop
adc
xlat
xor
scas
dec
rorb
inc
pop
out
cmp
movb
mov
sub
adc
sbb
shll
mov
popf
mov
and
inc
push
jmp
sbb
mov
sarl
dec
lock
xor
xchg
insb
pop
or
add
or
cmpsb
and
pushf
ret
push
icebp
xchg
movsb
lock
dec
bnd
inc
mov
mov
mov
jns
mov
fbstp
or
ljmp
push
cmp
adc
mov
pop
out
xor
pop
pop
popa
pop
sub
lahf
std
mov
in
loopne
mov
xor
or
leave
and
push
sub
dec
cwtl
pop
mov
call
add
jp
aam
jle
in
push
cld
das
test
es
fs
roll
jmp
callw
jp
push
adc
pop
mov
pusha
mov
xchg
push
nop
sub
mov
cmpsb
cmp
andb
insb
insb
adc
sarb
jecxz
cs
jb
cmp
popf
into
push
push
dec
stc
nop
and
cmp
shll
stc
shrb
add
sub
rcrb
pusha
inc
bound
out
pushf
into
imul
pop
inc
jp
xor
sub
aaa
jnp
mov
push
in
in
sub
pop
aas
sbb
lods
shll
xchg
xchg
jno
or
and
loopne
fadds
and
or
fisubl
push
push
rcll
insl
cmpsl
mov
pop
mov
xchg
pusha
lods
push
lret
rcll
cmpsl
test
pop
out
cmp
outsb
jg
mull
insb
mov
dec
fwait
xor
in
dec
int
dec
xchg
inc
cmp
push
test
shrb
jb
adc
daa
pop
xor
or
mov
aad
cmp
fcmovnbe
sbb
xchg
pushf
jb
pop
out
addb
lahf
push
xor
es
sbb
sub
sub
lods
adc
insl
sbb
sarl
addr16
adc
and
outsl
cmp
push
push
dec
test
push
mov
int
stos
dec
dec
pop
dec
testl
cmc
xchg
jae
pop
rorl
mov
lret
mov
scas
mov
inc
xor
ret
mov
inc
jg
mov
xlat
adcb
adc
push
repnz
out
pusha
stc
mov
sahf
jecxz
push
cltd
jbe
dec
xor
and
in
lds
nop
iret
mull
lods
outsb
mov
repnz
push
je
lcall
dec
fidivrl
out
fldenv
mov
std
call
mov
inc
pop
mov
pop
push
or
and
mov
fs
push
js
push
fs
fistpl
ja
sbb
pop
aad
loop
insl
jnp
add
lret
nop
pop
movsl
push
jb
cltd
dec
into
mov
fistpll
mov
dec
add
xchg
and
push
outsb
lcall
xor
push
or
scas
xor
cli
add
pushf
cmp
pop
pop
inc
pop
sarl
dec
aad
and
aaa
push
or
shll
roll
add
add
into
cmp
adc
fmuls
mov
adc
push
inc
mov
dec
dec
mov
in
adc
icebp
sahf
mov
mov
or
in
outsl
rorl
stc
and
mov
mov
jecxz
std
push
movsl
push
push
fs
xor
xor
lods
dec
mov
cs
adc
in
or
aaa
jg
jne
ss
out
shrl
cs
adc
test
mov
xchg
add
lcall
popa
mov
push
and
push
jle
aad
lods
jno
in
xor
shll
add
jge
or
lret
cwtl
sub
mov
imul
cmpsl
push
fnsave
push
mov
std
and
jle
mov
jl
sti
pop
add
push
outsl
mov
cmp
in
lds
and
ja
xchg
and
hlt
les
pop
gs
in
out
orl
sarl
fsubrs
pop
cmc
cltd
lods
cltd
fxch
inc
mov
nop
pop
dec
cmc
popa
imul
mov
pop
call
jmp
dec
loop
pop
shlb
rcr
jbe
and
insl
scas
iret
lahf
jle
shrb
mov
mov
lea
adc
cmc
aam
or
dec
mov
sbb
mov
xchg
sub
aaa
movsb
inc
sti
repnz
sub
mov
repz
mov
xor
jmp
sub
ds
adc
testb
or
das
es
test
lds
lret
xor
jecxz
fstpt
push
js
push
jecxz
movsb
push
and
adc
gs
fsubrl
andb
repz
mov
dec
aas
shll
adc
mov
jg
sbb
cmp
ljmp
xor
ds
test
cwtl
mov
int3
int
sub
mov
int3
add
into
pop
mov
mov
push
and
es
xor
inc
pop
sbb
mov
jns
popf
sub
inc
jb
ret
inc
ljmp
int
lods
fbstp
and
jge
cs
push
dec
xor
sub
andl
popl
xchg
pop
repz
mov
mov
xchg
adc
xchg
mov
std
popa
xchg
xchg
pop
pop
sub
popa
sbb
popf
mov
sbb
test
out
sub
dec
add
push
jecxz
lret
ret
shll
inc
pusha
into
shr
mov
lahf
sti
ret
data16
sub
adc
add
pcmpeqd
jo
pop
lret
mov
xchg
or
mov
xchg
repnz
dec
orl
les
test
mov
cmp
xor
cmp
mov
xlat
bound
popa
ret
gs
aad
sub
mov
sub
push
pop
inc
pop
add
xchg
jb
adc
lods
xor
scas
mov
cmp
push
and
inc
push
rol
adc
jp,pn
scas
mov
mov
loop
xlat
mov
jmp
sbb
jne
mov
jg
xor
movsl
outsb
lods
adc
pop
jnp
fidivrs
cmpsb
fiaddl
int
sub
or
inc
push
jo
xlat
dec
mov
pop
aas
scas
push
dec
test
xor
pop
mov
mov
rcrl
aam
in
orb
lock
xchg
mov
aad
int3
xchg
mov
pop
add
test
dec
dec
cs
scas
aad
cmp
mov
int3
sub
add
loop
fs
sub
jle
mov
sbb
and
mov
fisubrl
outsb
jecxz
lods
and
mov
sbb
pop
cmpb
aas
pop
gs
fldl
cmc
sub
and
ss
push
ds
movsb
cmp
test
arpl
sbb
cmp
pop
mov
inc
into
data16
push
ja
xor
cwtl
jno
out
testb
push
dec
mov
xchg
aas
aad
bound
jg
js
xchg
stos
mov
or
add
imul
sub
and
les
cwtl
ja
into
pusha
jno
std
mov
mov
imul
jmp
dec
add
mov
call
inc
idiv
mov
arpl
imul
dec
xlat
inc
stos
lcall
mov
lret
dec
mov
mov
jge
sub
pop
inc
fsts
aas
out
loop
adc
inc
jecxz
xchg
int
movsb
testb
xor
into
mov
jecxz
xor
sbb
inc
jmp
push
out
arpl
gs
pcmpeqb
jmp
movl
cltd
push
add
ljmp
mov
mov
lock
push
lods
mov
adc
pop
pop
sub
push
and
mov
loop
repnz
fptan
mov
push
push
inc
pusha
push
xor
pop
or
mov
push
adc
cmp
push
inc
in
rcr
mov
cmp
push
in
jae
xchg
lahf
add
ja
jmp
mov
fisttpl
or
sub
aad
int
daa
jle
cmp
mov
lock
aas
cmp
mov
xchg
sub
lcall
mov
cld
inc
mov
push
dec
inc
aas
dec
inc
jl
andb
in
testl
stos
sbb
lea
push
sahf
sbb
pop
iret
outsl
sbb
insl
int3
mov
sahf
mov
jecxz
testl
jb
rcrl
out
xchg
rcll
daa
daa
xchg
mov
mov
fisubrl
insb
shll
daa
pop
pop
add
push
xlat
sub
fprem
lret
icebp
stos
or
or
insl
imul
das
daa
dec
cmp
stos
mov
adc
xchg
xchg
pop
xor
push
loope
and
xchg
mov
or
xor
outsl
fcomip
cmp
mov
jecxz
mov
cmpsl
mov
in
sub
or
mov
imul
sub
adc
test
jge
jb
push
mov
mull
ret
gs
repnz
inc
add
data16
xor
insb
push
outsb
lods
jae
adc
pop
scas
xlat
pop
sbbl
adc
inc
push
movsl
orl
popw
add
mov
xchg
inc
and
mov
sbbb
push
mov
mov
in
cli
inc
pop
inc
shlb
fisubrl
mov
jmp
cmp
xchg
xchg
fs
xor
mov
push
jecxz
sub
pushf
push
push
mov
and
dec
or
aaa
leave
jns
inc
jmp
push
xchg
cmp
sbb
xchg
push
std
and
jmp
or
sbb
lock
fdivrl
shlb
inc
ret
fsqrt
add
fstpl
adc
cmp
sti
cld
push
lahf
outsl
or
fstp
mov
mov
xchg
lock
dec
jmp
or
loopne
lcall
mov
mov
rorl
ja
hlt
or
fisubs
mov
xlat
mov
sbb
es
cmp
push
mov
in
mov
sub
pop
test
fidivrs
scas
scas
rcl
xchg
jmp
outsl
push
ljmp
dec
sub
cmp
push
push
ret
mov
xchg
mov
mov
mov
mov
lret
sbb
sbb
out
popa
in
insl
scas
mov
ljmp
loopne
pop
cwtl
mov
mov
nop
mov
stos
aas
ljmp
dec
mov
inc
jle
in
dec
lock
ljmp
cmp
inc
pushf
sbb
lcall
addr16
dec
cmp
lods
in
sbb
mov
es
insl
icebp
out
cmp
mov
icebp
pop
inc
cmpb
stos
sub
loopne
dec
jno
cmp
jp
stc
out
xor
push
mov
or
cmpsb
add
nop
push
movsl
add
aas
inc
dec
cmp
sub
sub
mov
jne
and
mov
out
mov
hlt
jnp
inc
adc
add
push
mov
jnp
pop
and
int3
sarl
popa
imul
mov
lds
jo
popf
mov
inc
pusha
rcrb
adc
in
or
loope
jge
sbb
xchg
dec
movsl
sub
or
or
movlps
fdivrs
add
imul
push
lcall
cmc
mov
add
mov
jo
decl
dec
mov
addr16
xchg
cmp
ds
ljmp
adc
sbb
sbbl
lret
lret
decb
mov
daa
cwtl
cmp
mov
aad
dec
fnstsw
dec
out
inc
lret
cmp
cld
sub
push
jae
jg
sub
mov
in
scas
lods
cmc
xor
jbe
jns
push
sub
cmpb
pop
in
mov
pop
lods
rorl
les
movswl
inc
mov
mov
cmp
popa
mov
sub
mov
movsl
xor
stos
lar
cmpb
sub
mov
xchg
aaa
icebp
sbb
ds
mov
xor
clc
nop
push
in
in
xor
sbb
push
rcl
inc
popl
mov
xchg
and
cwtl
adc
pushf
and
mov
data16
aaa
in
add
in
adc
sti
fcmovnb
stos
xchg
add
and
fsubl
test
lret
sbb
fistpl
jmp
icebp
adc
clc
jae
fldenv
xchg
push
addr16
sbb
clc
or
xchg
in
sbb
xchg
mov
and
xchg
mov
pop
mov
pop
push
int3
fwait
sahf
lods
xchg
es
popa
mov
jle
movsb
add
std
int3
pop
and
sub
loope
sahf
and
js
scas
out
cmpsb
mov
mov
cltd
lahf
mov
es
inc
lds
and
mov
jnp
push
std
cmp
or
sbb
jp
mov
fcomps
jnp
pushf
inc
jae
fpatan
adc
stc
out
lods
fsubrs
mov
mov
cld
imul
int
inc
movsb
roll
mov
rolb
cmpsl
pop
in
test
adc
mov
lea
dec
push
inc
sub
clc
sub
push
in
mov
xchg
inc
jno
sbb
loope
cmpsl
push
inc
sti
fnstcw
es
adc
xchg
push
and
mov
push
dec
sbb
outsb
loope
in
mov
pop
cli
cmp
sbb
test
sbb
outsl
xchg
fwait
cmc
lods
mov
sti
cmp
lock
mov
loopne
inc
push
jmp
lret
subl
jne
pop
ror
fs
enter
mov
fimull
pop
jbe
jnp
lahf
xchg
lcall
jle
and
mov
push
and
dec
orb
fs
jns
je
xchg
lock
ret
es
frstor
mov
cmc
int
cmc
xchg
jbe
mov
add
popf
mov
adc
jo
loopne
jg
push
pop
add
cld
fildl
cltd
lret
xlat
sarb
cmp
lret
orb
gs
inc
fistpl
stos
aad
inc
cmpb
dec
into
pop
mov
cld
adc
push
jl
xorb
jmp
into
les
std
push
pop
add
fcmovbe
push
rorb
popa
jmp
ja
jnp
mov
mov
out
sub
lea
int3
push
int
xchg
lods
cmp
loop
insb
ss
or
mov
pop
cs
dec
and
fsubl
push
call
cmp
gs
out
and
xor
sub
sbb
or
jnp
scas
clc
xchg
jns
cvtps2pd
repnz
inc
inc
cld
jp
push
mov
or
adc
inc
inc
inc
rolb
cmp
or
stc
hlt
inc
ds
neg
push
test
and
and
pop
or
roll
in
insb
sub
and
push
mov
out
xor
stos
arpl
xchg
mov
insb
mov
in
xchg
push
outsb
std
mov
xchg
ds
xor
inc
inc
inc
loop
inc
and
cld
sbb
arpl
pop
fsubl
pop
les
sahf
icebp
lock
mov
inc
xchg
jmp
pop
les
sbb
imul
jb
shlb
cmp
dec
xchg
orl
imul
aas
inc
outsb
leave
clc
out
stos
xor
push
cmpsl
int
mov
dec
js
loope
jmp
scas
push
fs
jb
cmp
xchg
jae
dec
mov
out
mov
xchg
dec
movsl
push
stos
push
push
jmp
mov
pop
in
shll
loope
pop
inc
jae
mov
dec
jge
enter
cmp
adc
push
lods
ret
xlat
pop
mov
sti
loope
sub
xchg
cli
int3
call
rolb
push
xor
mov
adc
adc
and
out
sar
sub
and
mov
dec
cwtl
inc
dec
push
bound
ss
mov
js
pop
cli
mov
cmpsl
ds
fsubr
aas
xor
cmpsb
mov
cmp
xchg
pop
iret
mov
popl
and
repz
mov
lock
push
stos
or
movsl
or
rcrl
push
add
shlb
jl
push
dec
cmp
xchg
mov
mov
jle
out
cwtl
mov
ja
je
orb
out
test
les
imul
xor
lock
pop
imul
in
mov
rorl
xchg
ss
jge
and
es
mov
push
pop
dec
les
and
add
scas
xchg
out
fdivrs
pop
movsb
sbb
inc
mov
loop
mov
lret
decb
and
mov
pop
fwait
stos
aad
xor
sub
mov
es
push
inc
dec
jg
bound
sub
stos
pop
mov
jle
adc
addb
aam
aaa
pop
es
add
movb
lock
ja
push
mov
call
lahf
mov
cmpsl
inc
or
adc
push
sub
jb
iret
imul
mov
cmp
ljmp
or
test
notb
cmp
pop
jmp
shl
mov
dec
xor
ja
sbb
mov
faddp
insl
fldl
mov
jns
inc
xchg
nop
out
inc
fucomp
push
fisubs
pop
pop
outsb
xchg
jmp
push
jbe
sbbl
inc
jb
jne
ljmp
shrl
test
mov
fldenv
xchg
jnp
popf
push
jno
add
movsl
jl
pop
sub
inc
xor
cli
adc
adc
cmp
add
push
or
test
mov
pop
adc
xchg
popf
mov
insl
sub
mov
in
jl
leave
fsubs
push
cmpsl
push
ljmp
xchg
aam
int3
ljmp
push
lods
ljmp
mov
xor
ret
adc
movsl
test
mov
sbb
andl
mov
and
fisubrl
test
movsb
push
add
movsb
pop
jmp
push
rol
insl
dec
cmpsb
mov
lahf
int
insl
jge
movsl
mov
vgf2p8affineqb
nop
nop
ret
shr
data16
int3
arpl
mov
push
sbb
out
stc
cmp
mov
jl
and
adc
je
mov
add
dec
mov
enter
nop
adc
mov
fidivs
and
imul
and
mov
lret
popf
sahf
and
rcl
clc
xorl
scas
sub
fwait
popa
add
dec
jnp
pop
adc
pushf
add
mov
repnz
pop
xchg
gs
stos
mov
inc
jno
or
out
pop
mov
jle
mov
sbbb
mov
xchg
jmp
aad
xor
lds
mov
or
and
shll
mov
mov
jo
pop
dec
mov
and
sbb
xchg
jno
pop
lods
and
fisubrs
xor
pop
out
setbe
fcmovne
int
ja
aaa
popf
mov
xchg
and
ret
mov
sub
fdivrp
xchg
adc
cmpb
std
popf
orb
push
adc
xor
and
sub
pop
mov
shll
adc
call
sbb
xor
out
hlt
mov
xor
stos
aaa
add
pop
dec
adc
movsb
movsb
xor
popf
call
fbstp
pop
cmc
test
ljmp
lret
cmp
push
xchg
data16
repz
pop
inc
sbb
jg
inc
dec
into
mov
jg
mov
in
movsb
jecxz
push
lods
mov
test
and
jle
movsl
fucomi
cli
sbb
ja
sub
fdivr
cs
mov
add
pop
movsl
or
lds
sub
insl
and
icebp
xchg
adc
push
movsb
popa
pushf
fadd
out
testb
xor
jne
lods
movsl
in
jo
pop
push
push
jns
fisttpl
aam
adc
pusha
xchg
xchg
mov
pop
push
insb
lcall
cmp
cs
std
fldl2t
mov
sub
pop
jbe
xchg
sbbl
mov
pop
aad
mov
mov
inc
lret
sbb
jne
or
mov
cmp
loop
adcb
push
mov
cltd
xchg
and
push
pop
mov
mov
dec
stc
lods
mov
xchg
and
aad
mov
test
mov
push
mov
adc
adc
jl
lahf
add
iret
stos
xor
out
add
cmp
cld
fwait
cwtl
ffreep
cld
out
pop
pop
frstor
lods
cmpsb
pop
or
aad
stos
mov
fsubrl
inc
cltd
pop
mov
mov
lret
pop
sub
cwtl
int3
xor
inc
or
jl
fildl
ror
js
xor
jmp
or
sbbb
xor
xchg
adc
or
cmp
imul
out
lahf
pop
pop
test
cld
mov
mov
push
je
jb
cmp
jo
inc
mov
mov
popf
mov
lods
push
scas
inc
dec
and
test
xchg
ljmp
dec
int3
sbb
bound
push
fldl
pop
add
out
mov
ljmp
dec
aad
scas
or
repnz
mov
xchg
jecxz
clc
cmp
add
gs
dec
adc
sti
dec
inc
and
hlt
jge
jns
js
fmuls
fs
jnp
mov
inc
push
insl
dec
xor
inc
mov
loopne
insl
adc
inc
outsl
sub
inc
push
outsl
dec
cld
pushl
push
sahf
dec
pop
mov
jns
dec
mov
sub
add
enter
lods
fcompl
inc
xor
out
movsb
xchg
xchg
jo
lods
inc
pop
mov
and
jno
xlat
std
aam
xchg
add
shr
ficomps
mov
inc
xchg
aad
aam
divb
pop
cmc
loop
fistpll
sarl
das
xchg
jbe
out
mov
mov
xor
popa
call
jmp
sbb
jl
sets
jmp
pop
mov
out
sub
xchg
xchg
int3
movsl
loopne
dec
lods
jae
sbbb
pop
iret
loope
adc
icebp
push
cltd
bound
lock
dec
std
loopne
cmpsl
mov
mov
mov
mov
lahf
cld
push
cmc
rcrl
arpl
fildl
dec
mov
xchg
adc
ficoms
mov
pop
mov
ds
adc
xlat
js
ret
xorl
sbbl
test
mov
push
ret
mov
aas
in
orb
testb
stos
ds
xor
inc
adc
fwait
push
mov
ret
jne
outsb
xchg
xor
sbb
and
nop
das
call
dec
mov
test
jp
inc
es
into
clc
mov
aaa
and
dec
xorl
hlt
xor
clc
faddp
pop
cltd
enter
xchg
cmp
lods
ja
in
arpl
movsl
xchg
repz
xor
pusha
ror
stos
ret
push
jmp
xchg
push
jg
push
les
loop
mov
dec
sbb
aam
addb
repz
mov
addr16
movl
test
push
out
dec
subb
add
adc
arpl
push
inc
in
shlb
xorb
add
imulb
inc
cwtl
xor
mov
push
dec
idivl
idivl
adc
sbb
rol
cltd
je
enter
testl
cmp
shl
dec
mov
mov
xor
sbb
aas
fistpll
mov
sbbb
into
jmp
js
lea
lcall
rolb
ret
cmpsb
mov
pop
pop
sbb
and
jbe
push
xchg
inc
xchg
loope
into
xchg
popf
jl
int3
aad
lret
xlat
sbb
mov
xor
xor
mov
lock
jp
adc
push
jns
cmp
fistpll
nop
lahf
add
xchg
popa
test
icebp
in
pop
jmp
addr16
jp
inc
jo
push
inc
and
into
scas
xchg
cmpsl
pop
mov
sub
pop
fcmove
mov
jle
fstl
mov
loopne
test
int
sub
mov
mov
xor
push
xchg
shrb
andb
repnz
push
pop
and
pop
outsl
push
or
jle
add
jne
or
int3
mov
inc
jno
es
xchg
data16
ret
ret
or
adc
leave
movsl
pop
push
inc
stos
jp
mov
push
fnstcw
jns
outsb
je
imul
das
fimuls
jg
mov
aad
pusha
fs
adcl
or
aas
sti
js
mov
push
jno
push
loopne
cmpsb
and
pop
leave
mov
gs
pushf
mov
dec
fwait
or
or
jecxz
iret
in
adcl
addr16
push
sbb
jg
inc
cltd
lock
insl
aaa
out
add
or
pushf
mov
jb
jecxz
arpl
sti
fdivp
inc
pushf
test
cmp
sbb
rolb
lods
js
sbb
pop
or
repz
and
cld
sub
dec
dec
psrlw
lret
ret
scas
mov
icebp
mov
pop
in
cmp
adc
into
jae
sysexit
out
and
dec
pop
adc
mov
fadds
mov
sbb
in
push
add
lea
sti
xchg
lea
xchg
xchg
add
inc
cmpsb
cmpsb
mov
xchg
xchg
or
cmpsb
ja
xor
dec
mov
mov
insl
dec
ss
test
fsubs
data16
out
enter
testl
icebp
test
add
ljmp
scas
in
in
jnp
mov
jb
xchg
jl
jnp
ss
jle
and
shll
insl
xor
jecxz
shrb
stos
mov
mov
mov
xor
xor
mov
pop
sub
imul
loope
jmp
mov
rcl
dec
xchg
xchg
sbb
pop
sbb
stc
loop
bound
add
jo
pop
pop
mov
mov
in
arpl
stc
repz
add
pop
sti
cmpsb
lock
hlt
mov
or
push
pushf
adc
push
aas
dec
scas
pop
mov
mov
sub
mov
arpl
xor
mov
pop
int3
daa
mov
or
out
inc
int3
pop
mov
xchg
xlat
inc
adc
imul
mov
icebp
xor
and
dec
dec
mov
in
cmp
mov
mov
int3
xor
cmp
orb
xchg
call
cwtl
xor
jne
push
call
jle
in
nop
xchg
jb
in
jmp
cli
mov
xor
cltd
mov
mov
scas
mov
add
js
pop
mov
dec
xchg
fldcw
lret
nop
sub
push
mov
lahf
cld
cmp
mov
add
adc
insl
sbb
push
popf
pop
mov
inc
jbe
push
dec
mov
fs
sub
xor
cmpsl
pop
dec
ljmp
bound
lret
bound
pop
mov
inc
test
ljmp
mov
or
or
xor
in
inc
mov
xchg
pop
push
mov
cmp
fstpl
and
in
ffreep
mov
jle
addr16
cmpsb
roll
add
mov
cmpsb
inc
insl
mov
jp
call
movsl
mov
test
fs
lods
mov
into
inc
out
add
out
push
jp
or
and
sbb
into
sbb
imul
fistpl
nop
cmpsl
mov
jnp
xchg
or
je
xchg
jne
mov
mov
xlat
lret
adc
fstpt
jns
lcall
das
scas
push
shlb
sbb
sbb
jnp
mov
repz
adc
jp
clc
dec
dec
das
cmp
dec
lds
or
leave
dec
outsl
lods
jno
sarl
jmp
leave
sub
or
into
popa
sub
test
adc
dec
mov
mov
cmpl
in
xor
mov
lret
mov
push
sbbl
sub
fwait
push
cltd
dec
or
fistps
jns
sub
sub
int3
xor
ljmp
pusha
aaa
sbb
fildll
adc
fmulp
loopne
or
stc
mov
stc
push
jecxz
sub
lea
cwtl
movsb
mov
outsb
shll
cld
cmp
push
sbb
or
inc
sub
add
jl
int
jg
rep
aaa
dec
psllw
call
adc
das
scas
int3
ror
fsubrs
sbbb
mov
jb
cwtl
int3
sahf
sbb
mov
sub
std
xchg
test
rcrb
arpl
jns
jg
add
aas
das
adc
or
lods
push
test
inc
aad
sub
mov
dec
and
test
jns
jecxz
clc
mov
cmpsb
ljmp
mov
sbb
int
sub
out
fsub
dec
lds
in
aad
fisttpll
mov
adc
repnz
cmpsl
dec
stos
mov
pop
test
sbb
mov
cmp
and
pop
push
mov
push
push
mov
in
outsb
aam
mov
jo
test
mov
clc
xor
sbb
nop
cld
cmp
sbb
daa
mov
lds
sbb
mov
sbb
xor
or
in
mov
fisubs
fsubl
adc
insl
stc
aad
and
sti
outsb
or
addr16
cmpsb
sub
fistpl
jnp
in
add
jp
mov
mov
pop
sar
fimuls
das
in
out
dec
mov
clc
cmpsb
dec
xchg
lcall
clc
dec
add
jmp
mov
aas
sarw
and
in
lods
xlat
xchg
outsl
mov
lock
std
rep
jno
lods
inc
stos
cmp
mov
jmp
ja
in
cmp
popf
das
neg
xchg
paddsw
test
dec
mov
outsb
sub
fcomip
push
out
ss
imul
fs
popw
xchg
insl
xor
mov
xor
cmp
and
jmp
lcall
in
adc
cmp
mov
mov
mov
ja
js
das
add
mov
ds
mov
pop
dec
shrl
dec
mov
inc
adc
mov
nop
daa
fld
pop
stos
mov
shll
cmp
xor
cmp
fisttpl
faddl
loope
inc
adc
mov
lcall
sub
scas
xlat
ret
jnp
sbb
dec
lock
jecxz
inc
popf
push
cmp
sub
call
cmp
or
xlat
mov
cmp
xor
pop
inc
adc
dec
mov
lea
push
push
pop
xor
clc
aad
loop
test
mov
xchg
xchg
sbb
push
shlb
mov
roll
dec
shrb
and
lods
aas
add
or
loopne
pop
jnp
xor
mov
cmpsb
add
xchg
sub
enter
mov
ret
inc
mov
xchg
xchg
mov
bound
fdivs
dec
and
adc
insb
jbe
stos
lock
cmp
in
bound
or
stos
mov
cwtl
cld
jecxz
pop
outsb
inc
in
inc
pop
scas
pop
aad
jb
arpl
es
pushf
cli
cld
int
out
imul
or
cltd
and
subb
ja,pt
orl
xchg
and
add
inc
inc
sub
sub
sub
gs
popf
insb
jp
mov
fstps
cmp
fadd
faddl
cmp
hlt
out
cmpsb
cmp
pop
daa
cmp
pop
mov
and
push
inc
jb
cmp
inc
xchg
or
roll
jne
mov
jge
pop
push
sbb
dec
mov
sahf
inc
or
jnp
or
or
cmp
inc
xchg
test
icebp
add
sub
lods
test
lods
xchg
cs
sbb
inc
xchg
daa
dec
xlat
xchg
pop
pop
frstor
mov
xchg
jp
push
ss
ss
mov
test
lds
mov
sbb
adc
pop
xor
ret
jecxz
ficomps
mov
mov
rorl
scas
in
jp
xor
je
test
fnsave
loop
das
mov
mov
sbb
cmc
mov
sub
pop
mov
movsl
xchg
and
or
push
and
jns
mov
push
add
sbb
adc
cwtl
pop
fstps
add
and
add
rol
scas
not
push
or
repnz
popa
push
add
mov
inc
lods
push
mov
fdivrl
sti
loopne
jne
enter
push
test
in
cmc
in
je
arpl
pop
mov
imul
push
cmc
fiadds
jno
stos
jge
cmpsl
cld
adc
or
mov
subb
dec
add
addr16
es
add
in
mov
mov
inc
push
sti
fildll
add
add
imul
lods
inc
movsb
cmp
ds
jbe
out
xchg
fiaddl
mov
out
fstps
movsb
in
push
imul
in
outsb
jg
xchg
inc
push
and
in
aas
pop
ljmp
push
adc
lcall
std
and
sti
mov
ljmp
add
inc
or
fwait
icebp
jle
dec
fs
mov
stos
inc
and
sbb
popf
or
mov
mov
ds
mov
or
popf
adc
add
sbb
aas
stos
inc
mov
sbb
cmp
sbb
adcl
mov
fs
rcrb
dec
es
push
in
pop
leave
and
sub
insl
adc
inc
and
push
xor
adc
pop
rorb
cmpsb
cmpsl
push
out
jb
add
add
push
mov
pop
fs
in
and
loope
push
loopne
ss
imul
out
adc
addr16
dec
mov
pop
jo
push
bnd
fsubrs
mov
aas
gs
lock
inc
dec
pop
shll
mov
sbb
sub
push
dec
lahf
cmp
mov
js
ret
mov
push
scas
out
push
int
inc
jne
scas
xorl
jns
cmc
push
shll
std
cltd
mov
jno
jmp
xor
push
jle
in
xor
mov
mov
repz
daa
shll
xlat
mov
icebp
adc
jp
stos
xor
xchg
and
push
adc
pop
or
push
punpckhdq
mov
stc
mov
fadd
loop
gs
inc
xor
sbb
push
lods
or
loope
mov
fmulp
jl
ret
mov
adc
addr16
repnz
cwtl
ret
mov
push
stc
mov
orb
mov
out
cli
out
jmp
xor
xchg
cwtl
subb
pop
add
jno
mov
pop
xor
idivb
jp
pop
call
mov
aas
mov
xlat
mov
dec
sbb
insl
cs
xor
mov
jecxz
jnp
inc
out
push
popa
xchg
mov
aam
aas
adc
jns
sbb
xchg
js
sub
jo
sahf
mov
in
cmpl
xchg
mov
xchg
xor
sahf
cld
sbb
xor
pusha
std
and
adcb
add
add
stos
sub
sub
adc
mov
lods
sbb
adc
pop
dec
jnp
std
mov
jb
and
mov
push
mov
or
xchg
loopne
xchg
shr
cmp
jo
add
das
jecxz
cli
icebp
xchg
push
lret
ret
push
adc
lahf
cmp
push
mul
pop
aam
dec
adc
xlat
rolb
sub
adc
outsl
jns
sbb
lcall
insl
cltd
data16
or
lods
add
sbb
mov
in
jmp
xchg
adc
jns
mull
movsb
popa
fisttpl
sbb
cmc
sub
xchg
stos
pusha
or
xchg
fs
mov
inc
int3
jnp
fisttps
push
out
in
jmp
jns
loope
sub
shll
sub
mov
fstp
test
jmp
loop
rclb
mov
cmp
jge
sbb
pop
js
imul
fistl
xor
jb
sub
add
cmp
movl
cltd
out
lods
stc
jle
and
or
xchg
pop
cmp
inc
cmpsb
fisttps
loop
ret
int
jb
mov
sbb
cs
in
sub
das
cmp
les
pop
daa
push
jmp
pop
mov
dec
repz
in
sbb
sbb
mov
pusha
leave
inc
scas
scas
jl
cld
adc
loop
dec
push
stc
mov
clc
adc
mov
in
pop
adc
mov
or
adc
cmp
sbbb
pop
leave
jnp
outsl
jns
insb
push
xor
inc
insb
adc
sahf
xor
mov
xlat
movsl
testb
shll
mov
xchg
fwait
mov
jg
add
add
in
dec
int
mov
cltd
or
out
xor
mov
mov
jne
stc
rcr
popa
push
inc
cmp
sbb
mov
out
cld
push
lcall
jecxz
xchg
jb
mov
adc
jmp
cmpsl
add
mov
enter
sub
jmp
jae
inc
sbb
inc
cli
cmp
bound
inc
sub
in
in
mov
mov
or
jmp
pop
aam
mov
jmp
lds
hlt
mov
aam
adc
push
test
clc
add
push
sarl
or
add
clc
cmp
mov
int3
jecxz
repnz
sti
lods
mov
hlt
out
inc
sbb
xor
sbb
bound
fwait
push
cmp
test
je
scas
xchg
push
add
iret
mov
repz
repnz
cwtl
stos
xchg
jbe
out
or
cltd
pop
and
clc
pop
fistpll
loop
movsl
test
sbb
insb
addb
mov
xlat
movsl
xor
jge
adc
xor
rclb
adc
gs
or
or
inc
sarb
dec
push
pop
insb
jmp
cmpl
loop
and
int3
stos
sbb
stos
cmp
sub
aam
cmp
xor
mov
or
fistpl
xchg
push
loope
push
lea
add
pop
mov
popf
inc
mov
mov
ret
repnz
add
lea
jp
adc
inc
iret
test
ds
add
mov
xor
loopne
and
xchg
mov
les
daa
inc
aam
inc
mov
xchg
xor
arpl
jl
scas
in
jb
xchg
je
pop
mov
popf
popf
int3
adc
popf
aas
fcompl
clc
outsl
xor
nop
stc
or
lahf
rolb
sbb
and
pop
adc
clc
scas
sbb
add
les
das
sbb
mov
adc
xchg
mov
sbb
or
les
pop
mov
shl
sbb
leave
cmpsb
out
jp
sarl
or
mov
jmp
push
addr16
jns
adc
mov
mov
mov
cwtl
mov
xchg
xchg
test
ds
pop
pusha
mov
lods
aaa
arpl
stc
addr16
xchg
mov
dec
test
jecxz
fdiv
ret
push
push
adc
scas
cltd
mov
lcall
lahf
and
jle
sub
push
cwtl
dec
xor
push
push
add
pop
ja
out
jno
xchg
sub
ljmp
imul
ss
into
das
aas
loop
daa
loopne
cmpsl
or
jmp
test
dec
mov
dec
out
jle
pop
add
sbb
and
pushf
iret
pop
test
dec
jb
fidivrs
repz
ljmp
and
stc
add
mov
xlat
xor
cli
push
cmp
xor
test
cli
xchg
and
push
jle
push
jl
adc
add
cmp
inc
test
mov
imul
mov
mov
jge
and
push
cmp
jo
gs
loope
xchg
pop
insb
add
mov
test
sub
movsl
movsl
pop
mov
jne
jle
xchg
cs
mov
xor
xchg
xchg
or
dec
pop
mov
inc
ds
fbld
mov
ja
mov
loop
inc
mov
fmulp
add
jg
das
dec
lock
xchg
int
pop
sbb
sbb
pop
fdivrp
add
sahf
pmuludq
mull
insb
mov
popf
and
cmpsl
std
fwait
mov
int
jl
out
std
sbb
mov
pop
adc
mov
pop
dec
adcb
arpl
jp
xor
int
ret
push
addr16
and
aad
repnz
adc
xor
jmp
daa
push
das
push
rcrl
cmc
push
and
fstl
push
into
arpl
in
movb
inc
cmp
inc
cmp
rorl
iret
in
icebp
push
cs
add
lods
addr16
gs
outsb
shl
mov
mov
subl
mov
mov
test
mov
test
push
and
in
sbb
xchg
and
stc
cmp
inc
or
shl
daa
ficoms
pop
mov
dec
das
aas
loop
movsl
in
in
lahf
sahf
ja
push
xchg
push
fcomp
mov
mov
and
stc
xchg
iret
fidivl
mov
inc
imul
inc
sahf
roll
sub
fsubp
fistpll
sbbb
loop
scas
inc
mov
mov
ret
xor
mov
dec
roll
int3
shl
adc
and
or
add
icebp
inc
cmc
rcl
cltd
sti
push
movsl
outsb
lret
fistpl
jne
jo
xor
jecxz
testb
sbb
and
into
pop
fdivs
std
loopne
mov
and
dec
xor
mov
out
mov
and
push
inc
test
xchg
scas
ficoml
out
shrb
out
push
mov
insb
pop
dec
test
push
mov
addr16
sbb
arpl
jne
ret
sub
mov
imul
xchg
ljmp
and
lods
shlb
mov
data16
sahf
fistpl
xor
xor
xchg
mov
dec
fs
das
movsb
cmp
icebp
loop
mov
js
xlat
fisubrs
fistpl
mov
add
addb
mov
adc
and
add
mov
sbb
into
test
and
data16
outsl
mov
popa
clc
fisttps
mov
fstl
inc
mov
mov
add
hlt
sbb
or
pop
nop
hlt
mov
adcl
addl
pop
inc
xchg
push
inc
js
mov
sub
outsl
hlt
jge
jecxz
inc
xlat
std
pop
sub
test
lret
loop
movsb
stc
nop
mov
sub
fistl
testl
mul
adc
adc
into
push
push
jg
pop
push
ds
push
mov
das
mov
mov
and
mov
lods
out
ja
mov
dec
rorb
and
aam
popa
mov
sbb
adc
and
cmc
shrb
imul
mov
in
jbe
mov
sbb
push
lahf
pop
loopne
dec
lahf
mov
cmp
call
div
add
mov
movsl
xchg
or
int3
aaa
mov
adc
rcl
stos
dec
mov
negl
es
sarl
iret
lods
push
mov
ret
pop
and
inc
inc
mov
jae
push
flds
xor
inc
mov
in
test
mov
call
lcall
roll
outsb
lods
pop
mov
aam
inc
mov
es
insb
mov
mov
bound
je,pn
xor
ja
mov
sub
into
loope
scas
cmp
inc
push
pop
dec
cmp
mov
jne
aam
add
data16
out
std
fldcw
pop
fcom
int
pop
out
dec
jo
outsl
jecxz
adcb
in
xorl
test
xor
sub
cwtl
paddsw
in
outsb
arpl
pop
not
sbb
jne
jmp
sbb
mov
in
mov
movsl
and
pop
sub
or
lods
in
dec
es
mov
pop
aam
jl
ss
out
jbe
add
sub
pop
imul
xor
xchg
ret
les
aad
fldt
and
sbb
loope
cltd
test
stos
mov
xchg
mov
mov
sbb
and
enter
aaa
lcall
fwait
mov
loopne
push
fs
mov
dec
or
sbb
aaa
jl
ficoml
sub
or
pushf
jne
jne
dec
sbb
out
arpl
dec
scas
fcmovnb
mov
add
dec
outsb
lods
mov
inc
nop
sahf
cld
cmp
sahf
sub
sbb
adc
push
push
test
inc
testl
add
bswap
repnz
adc
fistpl
js
orb
in
mov
jno
push
push
ret
inc
jbe
roll
not
fbstp
push
pop
jmp
cmpsb
or
les
xchg
inc
mov
les
in
jp
lock
dec
scas
insl
inc
cs
adc
or
dec
mov
xor
mov
es
cs
fldenv
fwait
enter
adc
mov
push
rcr
lea
rcll
pop
rolb
pop
cmpsb
in
icebp
add
dec
xchg
mov
stc
dec
or
xchg
pop
dec
rcrl
jno
add
add
rcl
and
lods
rorb
mov
mov
les
cli
fxch
fs
xor
mov
adc
mov
fs
mov
mov
es
or
addr16
mov
dec
fcmovnu
pop
push
dec
mov
test
dec
jae
dec
mov
and
inc
imul
lcall
jbe
and
jmp
mov
lea
jge
clc
and
mov
pop
sti
out
pop
dec
popl
pop
popf
push
push
sub
pop
cmp
cld
mov
pop
in
lock
adc
pop
mov
imul
int
xor
and
sti
dec
outsl
mov
rorb
mov
aas
stc
fadd
addr16
xor
lods
lret
xchg
pop
xchg
leave
stos
icebp
or
aas
addr16
loopne
test
std
jg
into
out
mov
jbe
out
jg
cmpsb
pop
cmpsb
sbb
hlt
leave
fistl
pop
sti
jge
pop
aam
xchg
xchg
sub
std
jmp
fsubs
hlt
lcall
in
jecxz
sub
pop
insl
xor
lcall
loope
mov
xchg
das
adc
in
test
dec
pop
bound
dec
xor
stos
insl
xchg
insl
enter
and
mov
imul
in
aad
adc
fmuls
jb
pop
sti
pop
leave
lret
sub
mov
mov
xor
shl
negb
in
scas
xor
lahf
in
cwtl
add
dec
fwait
leave
push
push
ficompl
add
mov
dec
fbstp
arpl
out
lahf
push
sub
nop
pop
iret
mov
rcrl
adc
or
and
xor
inc
xor
in
mov
jae
inc
sbb
in
cmpsb
push
lcall
or
fnclex
add
pop
pop
or
out
push
pop
xchg
pop
das
jne
and
inc
sbb
inc
rolb
mov
pop
xchg
ret
aad
and
jg
sub
outsl
push
jno
shll
mov
cs
outsb
or
outsl
aas
and
ficomps
mov
push
add
lock
sti
inc
outsl
fidivl
xor
stos
int3
sbb
lret
ja
inc
mov
push
mov
mov
aad
mov
and
mov
add
add
test
mov
pop
cmp
enter
pop
sbb
test
push
out
enter
jecxz
popa
divl
xchg
pause
icebp
mov
jg
lods
sub
mov
insl
es
aam
push
push
popf
adc
adc
repz
in
and
cmc
in
mov
mov
rcrb
lret
mov
xchg
shlb
fcmovb
cmc
xchg
adcb
add
das
xchg
data16
pop
xor
pop
rcll
shl
xchg
fcoms
outsl
sub
xor
add
mov
sbb
fisubrl
stos
leave
mulb
add
pop
or
das
gs
or
mov
imul
lea
xor
inc
je
xor
or
test
dec
ss
sbb
push
sub
push
dec
inc
lret
inc
bound
cmp
sub
or
ret
pop
aaa
and
jbe
fbld
sbb
bound
sbb
out
add
in
cltd
sub
test
xchg
cwtl
sub
push
inc
decb
lods
add
and
push
arpl
mov
push
scas
dec
mov
nop
dec
mov
add
xchg
mov
add
jnp
mov
dec
mov
mov
in
pop
repnz
adc
fisttpl
sbb
aas
and
push
movsb
lcall
add
inc
pop
mov
mov
mov
push
jmp
test
scas
pop
dec
cmp
pop
iret
push
lret
push
shl
jl
xchg
imul
adcl
mov
jecxz
lods
lods
mov
fucomip
dec
repz
dec
aam
mov
dec
pusha
pop
sbb
data16
jecxz,pt
dec
mov
ds
pop
push
fmul
or
rorl
add
out
das
dec
mov
xor
jge
xlat
fidivrs
leave
ror
jecxz
cmc
cmc
sbb
push
cmp
and
lds
pop
xor
dec
mov
es
fnsave
and
je
jg
dec
inc
mov
gs
jg
mov
push
cmp
mov
mov
pop
lds
lret
aam
push
test
push
subl
sub
lret
mov
sarb
movsl
xchg
or
movsl
mov
xor
in
xor
cs
out
add
mov
lds
inc
es
sbb
and
pop
mov
pop
add
mov
lcall
aad
dec
xlat
mov
es
push
in
inc
and
paddq
push
hlt
decl
rolb
fcoms
int3
insb
xor
insb
sahf
xchg
jo
fs
push
fcomps
dec
in
push
xchg
mov
or
cltd
nop
pop
inc
add
mov
adc
outsl
xor
pushf
add
mov
addr16
push
xchg
and
cmc
cld
pushf
flds
push
mov
sbb
cmp
mov
outsl
push
dec
in
movsb
repnz
xlat
ljmp
xor
xchg
in
push
fisubs
sub
sbb
dec
mov
jbe
lret
inc
inc
cmp
jmp
xchg
fmuls
int
movsb
ja
in
mov
push
inc
insl
adc
cmp
stos
add
pop
add
push
sbb
adc
js
cmpsb
xchg
fdivs
inc
inc
inc
sbb
sbb
mov
xchg
pushf
ljmp
test
and
inc
jle
rolb
aad
fnstcw
sarl
out
not
cmp
lea
cld
pop
lcall
cmp
xchg
jbe
pop
pusha
popf
or
cmp
push
jo
and
hlt
inc
pop
leave
inc
bound
xor
lcall
out
adc
add
std
xchg
sub
test
ljmp
adc
cmc
mov
sbb
mov
fisubs
adc
mov
pop
xorl
es
dec
xor
jns
flds
and
jb
inc
jno
mov
rolb
lret
inc
pop
ffree
fwait
hlt
iret
arpl
jle
cmpsl
mov
stos
movsl
jp
nop
lock
rcll
xor
lds
ret
icebp
inc
inc
aas
mov
jp
push
sbb
cmp
cld
push
fdivr
mov
cltd
xchg
shll
je
sub
aad
push
ja
push
mov
mov
addl
das
insl
lret
lahf
fldl
mov
insb
push
and
cwtl
pop
mov
inc
mov
sub
stos
mov
arpl
test
arpl
mov
mov
addr16
out
daa
mov
xchg
pop
lods
or
xor
cmp
cmc
jns
pop
jmp
or
in
push
clc
loopne
dec
int
pop
movsb
cmpsl
lahf
dec
push
xchg
inc
insb
leave
jo
xchg
sub
inc
ja
hlt
addl
push
adc
xchg
dec
push
les
loope
inc
scas
lahf
sub
jl
mul
shrb
icebp
and
sbb
add
or
inc
outsl
xlat
pop
pop
push
dec
mov
lcall
cmp
jns
xor
jge
cltd
test
xchg
mov
xchg
in
pop
cwtl
scas
fdivl
lea
jle
fists
dec
cmp
and
iret
loope
test
pop
and
xchg
push
mov
pushf
sbb
pop
add
js
movsl
fsubs
clc
mov
popa
mov
mov
insb
xchg
pop
cmp
aam
push
aaa
push
fwait
xchg
sub
adc
fstl
pop
out
neg
mov
push
imul
sub
test
sub
movsb
xchg
ss
pusha
pop
sbb
sub
in
pushf
fstps
add
sbb
xchg
aam
mov
test
filds
aad
jo
test
inc
dec
mov
jle
add
adc
push
sbb
mov
cmp
mov
test
lock
rclb
and
repnz
mov
cli
adc
jecxz
in
fisttps
sbb
das
pop
xlat
jo
sti
jns
leave
mov
push
test
dec
jns
int
insl
xchg
fsts
mov
js
faddp
std
xchg
aad
loope
out
addl
jmp
sub
mov
lods
adc
lea
xchg
or
mov
pop
repz
jne
jg
jmp
insb
in
jle
dec
adc
sbb
ljmp
xchg
cld
in
mov
push
fadds
xchg
fdivs
mov
pop
fcmovbe
cmp
and
jl
iret
or
aad
shlb
fnstenv
pop
mov
push
dec
push
mov
inc
push
cld
cmp
push
cmp
mov
imul
cmpsb
ds
push
lcall
mov
xchg
jl
subb
push
sub
test
mov
cmp
gs
or
in
lret
add
ljmp
jl
in
push
cwtl
and
or
scas
movsl
aas
gs
std
popa
push
mov
ljmp
and
push
andb
mov
out
stos
lods
inc
roll
fldl
cmp
js
dec
inc
push
xlat
jbe
mov
icebp
sbb
std
and
test
push
push
adc
pop
push
sub
xchg
lretw
scas
sbb
test
nop
test
xor
popa
stos
clc
and
xor
aam
dec
jb
mov
sbb
add
insb
pop
and
xor
sbb
scas
dec
mov
xor
daa
movsl
clc
int3
dec
xor
cld
addl
cltd
fs
int3
push
xor
std
push
jo
xchg
std
hlt
pop
or
cmp
cltd
ja
push
xchg
sbb
fists
flds
outsl
push
dec
dec
ret
enter
mov
pop
fs
cmp
adc
xchg
dec
xchg
dec
sbb
mov
pop
mov
pop
cltd
lea
mov
xchg
inc
scas
int
cmpb
add
call
add
mov
ret
mov
out
mov
adc
addl
inc
les
add
mov
dec
clc
arpl
mul
ljmp
fimuls
in
xchg
mov
stc
loope
aad
pop
imul
pop
aas
sahf
stc
sahf
scas
dec
mov
leave
or
jne
or
mov
in
cmpsb
push
and
fcomps
and
popf
xchg
test
adc
sbb
in
popa
dec
lods
in
imul
or
jbe
inc
cltd
dec
mov
repz
pop
xchg
outsb
sub
xchg
fiaddl
add
lahf
hlt
push
fwait
ds
mov
pop
repnz
mov
sub
mov
push
or
push
sti
mov
stos
rcrl
fcmove
imul
or
pop
int3
add
popa
movsb
inc
testl
lods
pop
lea
adc
pop
mov
fs
ficomps
test
sub
pop
sub
inc
and
xchg
inc
data16
lcall
or
pop
movsb
sub
pop
repz
and
test
and
daa
dec
and
test
pop
jns
and
sub
push
stos
popa
mov
adc
test
jo
pop
lret
repnz
push
test
notl
dec
inc
lds
jp
clc
lret
out
leave
xor
sbb
sub
int
mov
idivb
scas
mov
loope
pop
mov
adc
leave
or
imul
xor
lods
mov
mov
arpl
pop
arpl
outsb
dec
dec
addr16
jmp
mov
test
popa
lcall
insb
add
and
insb
pop
cmp
out
xchg
lods
leave
pop
jp
std
fidivl
outsl
mov
das
and
sub
insl
push
inc
and
fcoml
rorb
loope
insb
fwait
pusha
mov
ret
cld
fmull
loop
les
mov
test
ds
outsl
pop
call
cmpsl
jns
mov
lods
push
inc
imul
aas
push
jns
mov
fadd
fdivrl
pop
dec
adc
cs
add
mov
push
ret
mov
mov
jl
insb
xchg
cli
inc
in
es
push
xchg
stos
push
loope
lret
xor
push
aad
push
mov
incl
xlat
outsl
sahf
pop
mov
xchg
mov
and
add
mov
je
enter
movsl
movsl
stos
xchg
into
xor
push
sbb
xchg
and
and
xchg
jo
pop
sbb
test
pusha
fs
imul
jae
jno
sub
outsl
out
aam
stos
xchg
jnp
and
xor
int3
cmpsl
enter
pop
add
scas
xlat
sbb
popf
push
ret
pop
loope
sbb
ret
not
imul
add
subb
xlat
fstpt
xchg
sub
xor
dec
pop
mov
sbb
jp
add
adc
test
adc
push
mov
aaa
out
movsl
push
push
outsb
ja
lahf
mov
fs
cwtl
aad
les
stc
jbe
fcomi
push
lret
xchg
add
lods
add
xchg
movsl
cmpl
inc
test
sbb
cmp
clc
fs
arpl
cmp
mov
sub
mov
cld
xchg
or
cwtl
leave
leave
dec
popa
enter
test
dec
fwait
pop
push
andl
cwtl
xchg
in
loopne
jmp
leave
cs
adc
test
adc
int3
and
dec
jae
icebp
sbbl
mov
push
cltd
cld
in
mov
sbb
sub
cltd
jno
pop
pushf
ret
xor
or
inc
cs
hlt
shll
inc
mov
dec
dec
pop
pop
es
adc
lods
out
ret
adc
adc
push
dec
add
mov
jae
out
jno
repnz
cmc
sub
lods
lods
pop
pop
enter
scas
sub
jle
push
mov
mov
add
rcl
mov
and
das
inc
sub
sbb
das
push
sbb
in
ret
test
ljmp
pop
mov
add
nop
mov
adc
std
popf
mov
je
mov
inc
mov
sbb
lds
mov
dec
or
outsb
stos
adc
lahf
and
test
fidivl
adc
outsb
lahf
jne
mov
daa
aas
lock
push
mov
call
les
popa
sbb
cmpsl
dec
mov
xchg
jo
sbb
cmp
lret
jns
mov
sub
imul
dec
jmp
ds
mov
into
lods
testl
rol
loop
fcmovb
sar
cmp
mov
mov
mov
arpl
push
sbb
notl
rolb
cmpsl
std
scas
pop
out
notb
sar
sbb
mov
mov
clc
fisubs
and
repnz
cmp
jl
lods
shl
jmp
sbb
dec
or
mov
inc
sub
fld
cmp
and
movsl
xor
sahf
xor
aaa
clc
outsl
pop
loopne
leave
mov
imul
push
mov
int
push
stos
lcall
pop
add
inc
dec
push
shrl
movsl
fsubrl
fcmovnbe
add
rorb
dec
push
jmp
jne
sub
test
add
das
cmp
adc
test
vpmullw
repnz
outsb
and
inc
adc
stos
pop
inc
xor
jbe
ret
lea
addl
ret
cmc
jo
xchg
pushf
add
test
fadd
ret
repz
mov
cli
das
stos
adc
fistpl
int3
sbb
xchg
cmc
test
sbb
xlat
leave
leave
and
gs
sbb
call
or
jp
lret
lods
cs
outsb
ss
and
and
push
push
mov
mov
insl
rcl
jg
cmpsl
lret
pop
sub
xchg
jo
lret
in
repnz
push
in
sahf
imul
dec
pop
mov
cmpsb
inc
sbb
jo
test
push
stc
mov
sub
pop
sbb
xlat
ret
shr
push
fcompl
dec
iret
aad
mov
lea
or
roll
add
mov
cmp
inc
rorb
add
jne
mov
in
icebp
xor
imul
mov
xchg
or
shll
mov
icebp
jno
clc
pusha
xor
mov
push
or
in
sbb
call
cld
pop
rcrl
push
mov
cmp
inc
or
gs
mov
add
aad
inc
sbb
inc
adc
jle
xchg
pushf
dec
cmp
sub
adc
dec
adc
xor
loopne
out
mov
xor
mov
sbb
push
hlt
or
pop
lahf
adc
bound
movsl
add
cmpsb
and
pop
sbb
fldt
aam
in
inc
insb
mov
xor
data16
jge
mov
mov
jnp
aas
xor
mov
pop
scas
daa
je
sarb
rorl
sbb
mov
popa
out
in
pop
sbb
jecxz
inc
mov
cmp
ds
or
push
pop
push
dec
mov
adc
loopne
notl
add
loope
pop
jmp
push
sarl
data16
mov
stos
pop
cmc
cmpsb
jnp
adc
sbb
dec
pop
fbld
cmp
xchg
add
and
or
mov
in
sub
xchg
xlat
rol
in
pop
les
rclb
pop
les
clc
out
popf
xor
inc
mov
js
cmp
xor
xor
js
sbb
inc
xchg
and
and
pushf
xor
movsl
sahf
dec
ja
add
add
and
add
pop
dec
sbb
mov
js
jge
add
dec
clc
call
loop
xor
pushf
cmp
jmp
mov
rorb
arpl
xor
aad
mov
arpl
cmp
or
pop
mov
addl
push
repz
xor
and
popw
xor
mov
or
lds
sub
sbb
div
movb
sbb
test
cmp
pop
out
push
or
loope
cmp
lea
lcall
lret
popa
jne
lahf
lods
and
pop
pop
loopne
imul
and
lea
or
es
mov
out
sahf
pop
xchg
and
xchg
in
inc
dec
push
cwtl
inc
test
cmp
fisubl
inc
pusha
popf
sub
js
and
ret
sub
popa
imul
fnstsw
repz
and
push
inc
dec
popf
push
push
push
fidivrl
fdivs
xchg
adc
nop
xor
ror
pop
and
fdivr
jge
cmp
cmp
sub
sbb
inc
leave
cmpsl
push
rcrb
in
lahf
lods
push
jl
xor
push
sbb
jne
dec
outsb
mov
scas
xor
jae
es
dec
add
jb
xor
cmpsl
sbb
cli
lock
cmpsb
mov
das
je
mov
negl
add
pushf
push
jbe
pop
fxch
bnd
clc
add
mov
mov
arpl
fisttpl
add
adc
imul
sub
icebp
rcll
mov
sbb
es
push
in
movsb
dec
lahf
aad
jmp
jp
ret
jmp
jns
loop
cltd
mov
jl
fcomp
and
mov
and
push
lods
mov
push
daa
out
inc
jae
adc
or
je
icebp
pop
pop
and
mov
outsl
lret
push
leave
xchg
mov
pop
add
fwait
mov
mov
pop
mov
aad
cld
pop
add
push
imul
cmp
jg
or
cmpsl
sub
inc
push
xchg
bound
mov
push
cmp
bound
jnp
popa
stc
mov
cmpsl
push
push
lret
fldl
out
daa
test
stc
dec
dec
lcall
dec
mov
in
es
jmp
add
div
xlat
pop
sar
cmp
mov
xchg
rcl
pop
call
out
cmp
push
sbb
int
sub
and
xchg
movsl
sub
popf
loope
xchg
out
orb
dec
pop
jg
clc
mov
dec
xor
inc
or
push
mov
lods
sub
mov
push
inc
sub
jmp
movsl
test
adc
push
mov
in
mov
cs
icebp
and
addr16
fsubr
cmp
or
insb
dec
movsl
idivl
mov
das
sahf
shrb
daa
movsb
fs
xor
sub
aas
sbb
sbb
add
cmc
mov
int
loopne
add
dec
inc
sbb
fcomps
pop
pop
push
push
jge
int3
mov
sbb
popf
push
xlat
shlb
dec
sub
pushf
loop
sub
mov
jns
sarl
push
enter
inc
lods
mov
add
bnd
lock
cmp
leave
dec
loope
test
mov
push
sub
int3
cltd
add
outsb
scas
int3
mov
jo
out
pop
inc
inc
or
pop
xchg
test
adc
adc
aas
inc
je
jns
inc
loope
call
fists
imul
or
pop
neg
mov
xchg
cltd
fistpll
add
rolb
sbb
pop
sti
pop
cwtl
hlt
loope
mov
cmp
push
push
xchg
stos
rorl
xchg
inc
push
insb
or
iret
jno
or
sbbb
loop
jno
mov
enter
mov
mov
add
jns
adc
pop
jg,pn
mov
mov
fisttpll
lods
and
xor
jno
ss
and
call
out
mov
jle
jg
aaa
dec
in
inc
test
enter
sub
dec
shrl
mov
into
call
sub
pop
loop
push
pop
out
xor
add
dec
push
pop
rolb
pop
cwtl
mov
shlb
mov
fisubrs
and
cmp
jno
lea
pop
addl
lcall
icebp
stos
lods
ss
jmp
dec
fstpt
stc
out
pop
mov
cltd
lds
adc
ror
jmp
dec
ss
cmp
pop
dec
gs
sbb
or
ret
xchg
fwait
dec
jne
notb
sub
push
addr16
sub
lahf
or
inc
imul
negb
xchg
dec
test
sub
sub
loope
incb
movsb
repz
xor
dec
xorl
ret
and
dec
movsl
lea
sub
popf
mov
jae
stc
jo
jp
cltd
je
jmp
aam
outsl
cmp
iret
lret
stos
mov
pop
aas
fwait
cmp
sbb
daa
out
lcall
movb
jae
std
call
scas
clc
les
adc
dec
adc
pushf
stos
int3
xchg
lcall
popf
inc
cmpsb
sar
out
or
outsb
jbe
dec
mov
sub
and
out
fstl
ljmp
lahf
cmp
inc
jns
push
jl
fdivs
test
cmpsl
or
mov
xorb
mov
mov
add
and
add
test
aam
jmp
and
test
shlb
stc
pop
test
sbb
pop
in
mov
mov
mov
shll
int3
sbb
push
add
shlb
stos
mov
loope
into
push
movsl
jle
xchg
fidivl
and
testb
jl
mov
adc
push
test
push
cmp
jno
xor
xlat
push
unpcklps
mov
add
popa
cmpsl
bnd
fs
push
adc
jns
popa
push
mov
stos
cmp
mov
cmp
xor
mov
hlt
xchg
xchg
push
subb
push
loopne
dec
pop
lds
pop
adc
mov
int
pop
push
lret
sbb
jne
and
clc
fwait
sub
les
sarl
jecxz
or
arpl
sbb
cmp
dec
out
mov
mov
lea
adc
xchg
int3
mov
adc
or
cmpsl
aam
enter
adc
lcall
int3
sub
test
pop
jne
jle
es
call
jle
adc
pusha
xor
push
push
stos
xchg
xchg
jl
fisttps
mov
repz
dec
lods
jecxz
mov
imul
movl
sbb
add
jae
or
push
fsts
push
pop
fnstcw
push
xor
pop
data16
pushf
xor
and
pop
mov
dec
movsb
push
cmc
jnp
cmc
testl
inc
inc
mov
cmp
cli
cld
dec
enter
dec
data16
jae
sbb
adc
scas
ret
jmp
sub
imul
gs
cmp
rclb
out
notl
stos
sub
sti
inc
int3
out
jecxz
lret
movsl
inc
repnz
in
xor
arpl
push
add
rclb
aaa
cmp
mov
movsl
pop
add
cld
mov
inc
push
sbb
sub
repnz
pop
out
jno
es
loopne
pusha
loop
pop
push
and
mov
out
test
jmp
in
pop
and
imul
xchg
mov
repnz
pop
or
push
mov
ret
or
jp
adc
mov
push
pop
idiv
or
cmp
out
push
dec
pop
add
mov
push
jmp
repnz
hlt
outsl
pop
inc
and
pop
cmp
push
or
movsl
subl
add
in
in
sahf
mov
mov
pop
jmp
jge
inc
fsubl
pop
bound
hlt
cmp
xchg
cltd
dec
dec
daa
test
jg
inc
stos
lret
scas
mov
leave
jecxz
test
daa
dec
inc
aad
decl
xlat
sti
aaa
pusha
push
shlb
int
cmpsb
lret
popa
push
es
push
xchg
pop
rclb
cltd
out
sbb
xor
daa
into
stc
dec
jo
outsb
out
mov
dec
je
mov
loope
push
push
jecxz
aad
lds
mov
sub
shll
ror
int
jne
out
and
dec
mov
mov
dec
jmp
js
inc
pop
adc
pop
ret
cmp
sahf
jo
inc
push
fwait
xchg
or
rclb
sbb
jecxz
pop
sub
add
dec
scas
mov
ss
aas
xchg
pop
jle
or
mov
xor
pop
es
loopne
xchg
mov
jge
pushf
ja
jb
jmp
lret
push
ss
adc
add
dec
mov
xchg
add
in
in
cmpsb
pop
repz
cmp
adc
cmp
fs
xor
cmp
shlb
xor
lcall
lock
fidivs
push
gs
xchg
or
lret
fyl2x
xor
jnp
or
insb
cltd
int
cs
sarl
mov
sbb
cs
mov
test
pushf
int3
movsl
ja
and
aas
adc
inc
mov
and
aas
sbb
in
bound
sti
mov
inc
cmp
data16
pop
inc
rcll
pop
dec
xchg
mov
sub
dec
or
and
inc
loopne
jo
movsb
pop
lret
xchg
mov
mov
jmp
out
or
sbb
mov
das
rclb
inc
stc
inc
push
ret
jno
lahf
cltd
and
notb
les
xor
sbb
dec
jns
mov
bound
dec
fcompl
loope
int
aas
clc
ljmp
lods
scas
leave
sub
sbb
dec
lcall
mov
mov
cmpsl
aam
xor
dec
jg
mov
scas
in
sarb
test
cmpsb
mov
adc
data16
inc
insb
add
inc
scas
mov
cltd
push
jg
rorb
ljmp
ret
inc
aaa
mov
repz
xchg
sub
scas
mov
mov
cltd
or
lods
fistps
xchg
xchg
lfs
das
adc
pop
inc
int3
or
mov
popa
jns
lcall
sbb
ljmp
cmp
xor
add
add
stc
sbb
test
add
test
pop
jle
sbb
dec
or
adc
push
nop
dec
ds
aaa
ss
mov
hlt
comiss
cltd
cmp
pop
leave
ja
xchg
lock
repnz
sarl
call
inc
popf
sub
das
xchg
or
xor
lret
lods
pop
and
mov
mov
lock
lret
jge
xchg
arpl
cmp
inc
out
movsl
shl
cmpsl
pop
add
jmp
mov
lret
and
std
fadds
std
or
sub
fcoms
ficomps
push
inc
sub
fnstcw
lods
adc
fwait
div
loop
repz
xor
xchg
enter
add
cmc
imul
aam
pop
mov
movsb
mov
ret
cmpsl
js
lods
mov
or
adc
dec
xchg
mov
dec
enter
mov
xorl
add
mov
mov
add
and
roll
cmc
mov
jmp
cs
xor
mov
xor
addr16
fdivrp
loopne
daa
clc
movsl
gs
insb
and
add
out
jg
out
ret
inc
push
loop
cwtl
stos
mov
xor
pop
xchg
loopne
aad
jmp
sarl
jae
incl
xchg
out
aam
dec
shlb
sub
es
popa
ret
sub
mov
and
xor
and
cmp
and
mov
adc
xchg
or
loopne
stos
add
cmc
xlat
fnsave
lds
divl
mov
lods
adc
incl
jae
lods
or
mov
inc
add
in
add
lcall
mov
shll
nop
inc
aaa
adc
add
scas
or
sub
fsubrs
xor
fldt
xchg
addr16
cltd
lods
cmpsl
insl
in
cmp
lock
pop
je
cmp
outsb
sbb
adc
nop
test
adc
lods
mov
rclb
push
sti
loope
jecxz
and
mov
aaa
inc
test
or
mov
and
nop
inc
cltd
or
scas
cmpsb
inc
adc
or
test
loopne
in
inc
or
mov
stos
or
aad
sub
loop
cmc
pop
mov
das
sbb
mov
movsb
pop
fisttpl
push
bound
jl
push
xor
lods
sti
jl
mov
xchg
lret
shl
jecxz
stc
mov
pop
xchg
or
jns
add
stc
xchg
data16
cltd
sbb
xchg
mov
cmp
and
aas
or
xchg
je
shr
jbe
fimull
inc
in
pop
loop
pxor
inc
mov
mov
xor
pushf
movsl
mov
push
aam
cwtl
sub
les
movsl
or
mov
and
pushf
pushf
add
sub
mov
mov
jb
aaa
movsl
into
fidivrs
add
inc
and
daa
in
sub
mov
das
rorl
pop
push
inc
jae
cmp
fidivl
fs
xor
pop
or
pushf
adc
and
sbbl
jecxz
push
sbb
add
and
adc
icebp
adc
int3
xor
cmpsl
adc
mov
popf
push
adc
lds
push
push
loop
adc
mov
dec
dec
mov
push
sbb
mov
out
push
dec
mov
dec
mov
inc
frstor
pop
js
jbe
cld
mov
add
pop
pop
sub
stos
in
push
lods
adc
addb
movsl
xchg
or
xchg
push
gs
mov
std
cmpsl
es
ret
addr16
dec
lds
addr16
out
jp
pop
mov
push
adc
pusha
or
push
add
sub
jp
push
xor
sub
jno
xlat
mov
push
push
arpl
xor
test
xchg
xchg
cmp
scas
daa
mov
ja
push
in
dec
in
lds
pop
fdivs
dec
dec
dec
aas
fcomi
xchg
cli
cli
ja
negl
xchg
outsb
shl
shrb
rol
ds
dec
jno
lods
push
and
inc
sub
fwait
or
sbb
dec
push
imul
out
xchg
inc
cmp
testl
and
test
pop
rcrl
imul
cltd
add
ret
movsl
int
daa
and
mov
rorl
mov
sarb
adc
hlt
ljmp
in
lret
xor
addr16
pop
notl
mov
dec
fprem
add
mov
sbb
bound
pop
es
dec
mov
gs
outsl
scas
in
test
inc
into
push
data16
sub
shll
mov
inc
xor
insl
lds
fcmovbe
jle
cmpl
int3
int3
iret
ss
cmp
mov
mov
fidivl
pop
mov
mov
rorb
sbb
inc
adc
push
mov
xchg
jmp
aaa
mov
cmc
lret
outsb
jo
xor
add
mov
or
movsb
lea
jnp
cmp
movsb
xchg
icebp
cmpsl
inc
push
mov
adc
jnp
push
and
in
sbb
push
mov
fstpt
das
ret
xchg
cmp
cmc
test
mov
stc
or
call
fbstp
iret
and
scas
fstps
bound
daa
xchg
mov
push
cli
mov
arpl
lret
add
daa
jecxz
push
das
xor
imul
leave
hlt
sbb
loop
fld
fwait
pop
mov
xor
andb
sbb
ds
mov
inc
and
icebp
mov
popa
aas
cmp
push
jne
scas
insl
aaa
sti
popf
rolb
mov
lcall
ficompl
inc
dec
out
subb
push
cltd
int3
mov
inc
inc
stc
dec
fabs
js
xchg
addl
and
add
xchg
push
pop
ja
scas
pop
jbe
adc
push
mov
jbe
or
movb
decb
bnd
std
mov
cli
xor
mov
ss
in
out
jecxz
jo
mov
popf
daa
dec
sub
int3
or
sub
fistpl
pop
inc
pop
hlt
lahf
add
cmp
push
pop
incb
neg
jae
lahf
add
movl
fimuls
mov
inc
jb
jbe
adc
adc
cmpsb
fstl
andl
push
daa
pmaxsw
or
addr16
fs
js
add
imul
aas
sbb
adc
gs
les
xchg
mov
arpl
dec
push
mov
repnz
insl
dec
adc
stc
mov
cmpsb
and
push
repnz
xor
lods
stc
jns
xlat
jo
lcall
arpl
insb
xor
pusha
pop
fs
call
xchg
ficoms
pop
sub
les
int
jmp
dec
jp
sub
fcomps
cmp
jmp
into
mov
arpl
sub
jg
inc
scas
shl
imul
sbb
pop
jbe
loopne
and
popa
fs
xchg
mov
pop
sub
jb
dec
mov
adc
push
mov
dec
rcrl
rorl
push
popa
push
scas
fwait
lds
jbe
sbb
or
sub
mov
mov
mov
mov
dec
add
pop
dec
jae
sub
push
shll
std
int
fistpl
mov
jecxz
lods
mov
adc
insb
stc
sub
jecxz
popa
cmpsl
inc
or
push
scas
push
adc
jmp
inc
push
sub
clc
jne
jae
adc
test
int3
fwait
movsl
jmp
in
in
pop
mov
js
adc
sbb
and
subl
pop
adc
mov
xchg
int3
outsl
adc
cmp
js
lock
dec
stc
adc
mov
push
fadds
mov
loope
pop
leave
jmp
cli
pop
dec
std
mov
bound
inc
dec
imul
push
inc
in
aam
adc
fbld
inc
aam
mov
dec
into
test
jae
push
nop
sbb
roll
aaa
shrl
add
dec
add
cltd
cmp
fstpl
mov
and
push
add
or
jb
jae
pop
mov
ret
loop
dec
xchg
mov
adc
leave
mov
inc
and
cli
sbb
sbb
les
and
dec
daa
xchg
fucomi
loop
adcl
insb
inc
xor
xchg
scas
mov
ficoml
aas
leave
data16
push
aaa
add
adcl
inc
xlat
lods
ret
sahf
and
or
mov
jns
aam
das
int3
loopne
and
xchg
push
enter
xor
test
xchg
adc
xchg
xor
xchg
bound
int3
in
scas
cmp
or
push
out
das
mov
jmp
and
gs
mov
ret
movsb
dec
or
movb
xchg
out
test
cld
rorl
pop
arpl
ret
push
adcl
loop
sub
jmp
mov
jmp
mov
pop
cmp
jbe
addr16
or
int
add
sbb
jmp
movsl
pop
jne
jge
add
fs
and
jg
adc
nop
pop
jbe
out
and
ror
mov
jns
mov
or
mov
sti
js
mov
ret
xchg
jle
jb
test
push
cmpsb
es
push
xor
jne
int
sub
dec
popf
lds
in
xor
lcall
lahf
std
into
xchg
inc
dec
cmp
sub
fmuls
ret
cmp
mov
add
cmp
sbb
fstps
and
pop
jno
stos
jge
mov
outsl
loop
cmp
fidivrs
lock
fsubr
imul
jae
movsl
negl
or
lret
shlb
inc
jae
cmp
mov
sub
cltd
pop
aam
mov
mov
arpl
stc
mov
popa
xchg
cwtl
sub
add
movsl
push
vmovaps
mov
mov
xchg
or
pop
into
adc
leave
cmp
push
mov
push
add
fwait
dec
mov
mov
out
fdivl
sub
lcall
aas
sub
lods
ljmp
aad
cmp
shr
popa
cltd
mov
xor
loop
xchg
inc
enter
sahf
shrl
mov
push
iret
and
ja
xchg
pmovmskb
xor
outsb
mov
lret
sbb
xchg
add
stc
dec
outsb
add
mov
mov
hlt
sbb
pop
adc
or
aad
mov
mov
mov
cs
sub
and
aad
shlb
fdivr
loop
push
mov
xchg
mov
leave
int3
xor
inc
nop
lret
pop
inc
cmc
pop
and
inc
gs
dec
push
adc
mov
cmp
das
je
popa
out
mov
or
mov
cmp
inc
imul
outsb
mov
lahf
decb
aam
ret
scas
mov
stc
repnz
cmpl
mov
movaps
repnz
mov
sub
rorl
mov
adcl
dec
mov
lods
and
test
jb
pusha
xchg
jb
pop
lahf
std
sbb
and
rclb
xchg
pop
outsb
dec
or
test
and
bound
and
loopne
add
mov
jecxz
in
dec
test
lock
xor
in
rolb
ret
loop
jmp
inc
add
add
ljmp
xor
insb
cmc
lret
daa
test
leave
pop
jmp
jae
sub
push
inc
insb
js
mov
push
jmp
inc
or
sbb
cmp
outsl
push
fwait
clc
arpl
mov
xchg
nop
xor
rol
in
notb
lea
lret
cmpsl
out
stos
jnp
sub
jge
xchg
push
jno
cmp
and
mov
fstl
test
movsl
fwait
push
push
xor
sbb
sub
sbb
push
push
lds
subl
jne
scas
das
dec
push
add
pop
cmp
sbb
inc
shlb
lret
das
fmull
pop
and
sub
js
cmpsl
sbb
push
mov
dec
aam
out
outsl
cld
push
or
fwait
pushf
dec
lock
jmp
ja
push
and
jmp
js
sub
jo
test
dec
ficompl
mov
jl
test
xchg
ss
push
jns
nop
leave
movsl
out
pop
add
lcall
ja
and
jns
andb
inc
lea
ljmp
es
aam
int3
lods
leave
pop
push
mov
shl
pop
test
mov
cmp
push
push
aas
or
pop
sti
jmp
mov
shll
inc
hlt
push
pop
cli
insb
adc
dec
dec
push
sbb
inc
jo
aam
mov
ja
inc
add
sbb
xchg
adc
sti
in
inc
call
es
xlat
testb
xchg
push
xchg
sub
jo
mov
jge
or
lahf
mov
xor
xchg
mov
clc
in
ja
dec
push
lods
hlt
fbld
lret
pushf
add
jb
push
add
mov
sub
push
test
jno
or
sub
push
in
mov
inc
xor
or
sub
mov
jns
mov
out
jbe
jmp
out
imul
sub
mov
xchg
inc
mov
cmp
inc
xorl
cmp
mov
insb
in
in
adc
pop
les
fistl
dec
mov
cmp
jecxz
popa
xlat
push
lcall
sbb
sbb
pop
imul
sub
mov
out
and
cmp
aam
pop
out
out
pop
fimuls
adc
mov
push
push
cmpsb
adc
or
jae
out
movsl
les
scas
test
or
cmp
dec
mov
adc
js
pop
mov
cmc
test
repnz
out
inc
in
sbb
xchg
outsb
push
pushf
sbb
jae
insl
push
xor
ja
notb
testl
pop
adc
fists
fstpt
imul
repnz
xor
fbstp
out
cwtl
xchg
imul
std
xchg
dec
cmp
inc
pop
jle
jl
js
sub
fwait
mov
cmp
jbe
jp
std
jge
sti
or
inc
dec
ret
sub
fcmovne
mov
fidivl
mov
sub
popf
mov
enter
imul
pop
ja
cltd
sar
in
dec
into
ret
push
scas
push
sub
sbb
jle
repnz
ja
xor
sbb
jae
xor
je
sahf
insb
push
dec
or
rcrb
inc
cmc
sahf
push
adc
test
mov
mov
aam
adc
dec
or
pushl
inc
sbb
lods
ljmp
frstor
lcall
xchg
mov
es
cmp
ret
push
call
sarl
inc
pop
ret
pushf
lcall
mov
cmp
or
and
mov
jmp
fnstsw
out
cmpsb
subb
jne
arpl
push
fistps
fldenv
in
mov
hlt
test
push
xchg
pop
repz
push
sbb
jmp
ss
add
inc
rol
popf
mov
push
pop
xchg
mov
mov
outsl
cmc
or
mov
push
xchg
adc
cmp
fistpll
xchg
lea
pop
dec
cli
mov
push
scas
pop
aaa
fmulp
dec
ret
lret
pop
xchg
ljmp
sbb
shr
out
scas
sahf
leave
dec
pop
dec
mov
sbb
clc
cmc
loope
popa
xchg
inc
adc
in
cltd
bound
and
call
ret
sarl
sub
daa
xor
addr16
cmc
test
enter
mov
pop
pop
stos
inc
and
and
add
dec
cwtl
stos
xchg
addb
push
xchg
lret
mov
mov
add
shrb
out
xchg
inc
inc
and
mov
ficoms
xchg
sbb
scas
pusha
sub
pop
sbb
lea
cmp
cmp
stc
imull
or
shlb
je
push
loop
jbe
inc
stc
mov
std
sahf
or
or
inc
lock
sub
mov
xchg
test
xchg
aaa
jo
popa
fistpll
xchg
push
nop
mov
jb
push
inc
hlt
push
out
mov
inc
dec
or
lods
or
xor
mov
out
imull
jo
es
in
test
inc
sub
out
cmp
cmp
jnp
scas
add
or
xor
aad
xor
pop
out
or
mov
xor
enter
lods
je
fldl
dec
xchg
outsb
mov
xor
jecxz
and
cld
cmpsb
sbb
cwtl
mov
xor
mov
mov
push
decb
out
jns
repnz
aad
loop
or
or
inc
out
xchg
outsb
jae
jb
ljmp
push
cmp
add
add
je
pop
adc
movsb
out
bound
jl
jecxz
sbb
adcl
mov
lea
cs
in
jl
out
push
je
jne
cmpsl
fadds
and
inc
pop
ss
mov
xor
aam
adc
mov
shl
cmp
jo
negl
xchg
dec
push
out
xor
xchg
mov
lret
mov
adc
les
xchg
fstpt
fwait
cmp
outsl
loopne
and
popf
jb
pop
push
movsb
mov
aam
and
inc
push
mull
stos
cmp
sahf
mov
iret
std
bound
repz
lea
lds
nop
mov
mov
incl
mov
scas
sub
enter
xor
sub
insb
push
add
flds
out
inc
mov
push
mov
decb
push
mov
add
popa
out
sub
imul
push
or
and
cld
popf
sbb
mov
pushf
fwait
stos
je
mov
test
xchg
cld
mov
adcl
sbb
lea
sbb
inc
mov
in
shr
sub
xchg
inc
cwtl
lahf
ljmp
out
jmp
lods
out
shrb
jns
movsb
push
subb
and
mov
shrl
mov
xchg
inc
sbb
ds
mov
ret
jno
mov
shlb
sahf
jecxz
xor
cmp
sub
scas
xorl
test
shlb
js
mov
negb
push
pop
pusha
test
les
inc
arpl
sbb
add
arpl
mov
mov
mov
ljmp
pop
shll
iret
sub
xchg
add
fwait
xor
and
mov
adc
xlat
in
cltd
pop
sub
mov
scas
fnsave
pop
and
adc
pop
in
or
cs
mov
ret
jnp
pop
ja
push
popa
jecxz
xor
fdivp
xor
pop
stos
push
mov
popf
jne
ljmp
mov
test
imul
cld
mov
aam
lods
inc
stos
pop
lds
jns
int3
int
js
push
std
rcll
ja
mov
ja
sbb
mov
lock
and
sbb
test
dec
es
mov
pop
mov
jmp
es
fisubrl
out
cmpsb
das
add
lods
orb
cwtl
test
hlt
jae
cmp
ss
insb
pop
int3
and
push
cmp
jns
add
and
cmp
in
leave
imul
mov
cmp
imul
adc
std
push
into
add
dec
mov
sbb
out
arpl
inc
pop
xor
aas
stos
movsb
mov
cwtl
jmp
aas
in
icebp
fdivrp
push
xchg
xchg
dec
push
xor
rorb
aas
lea
xor
sub
mov
arpl
dec
arpl
lea
pop
fistpll
xor
xor
pop
faddl
push
push
push
and
dec
test
outsl
sub
fadds
adc
fcomps
xor
lods
cwtl
push
xor
adc
jl
iret
leave
cmp
push
dec
insl
leave
out
test
add
pop
aaa
mov
and
mov
int3
jmp
cli
sbb
push
cld
jmp
cli
ja
cmpsb
ja
xchg
adc
bound
inc
sbb
outsb
stos
loope
add
inc
orb
lahf
testb
xor
jbe
sbb
or
push
insb
pop
mov
mov
add
mov
gs
sub
lds
inc
cmp
dec
rol
orl
out
movsb
mov
xor
xor
cmc
mov
icebp
jle
sub
sub
sub
sbb
mov
cwtl
and
pusha
push
ret
cltd
sub
into
sahf
into
xchg
lahf
ljmp
lret
in
push
inc
int
rcrb
mov
sub
dec
jno
and
dec
rcll
inc
js
xchg
xor
pop
and
shlb
jecxz
pusha
sub
push
jl
lds
ss
data16
push
sarl
imul
scas
cmp
add
sahf
adc
cmp
movsl
nop
clc
xor
mov
lret
in
dec
dec
hlt
jbe
dec
pushf
fidivrs
mov
gs
or
ficompl
push
dec
cmp
mov
pop
icebp
inc
repz
and
jge
pop
aaa
mov
mov
dec
fisubs
cmove
mov
cltd
ljmp
push
sbb
inc
push
pop
lret
sahf
frstor
out
nop
xor
imulb
sbb
dec
mov
push
lret
repz
shrb
push
sbb
loop
js
addr16
adc
sahf
inc
popa
in
sub
mov
and
stos
ficompl
jo
gs
mov
jecxz
loope
xchg
mov
push
xlat
test
sub
movsl
sub
add
push
stc
sub
movsb
loope
cmp
sbb
xchg
lahf
outsb
cmp
popa
movsl
xchg
sbb
jecxz
out
pop
fcmove
pop
jno
pop
shll
popa
mov
gs
xchg
in
jnp
popf
gs
xchg
dec
movsb
nop
imul
in
xor
rol
mov
mov
pop
int3
es
in
fcompl
sub
inc
rolb
cmc
nop
mov
hlt
dec
cmp
adc
mov
cwtl
ret
and
clc
imul
leave
mov
cmp
add
data16
jl
sbb
cmp
fwait
jne
or
fmuls
jbe
dec
dec
push
testb
cmp
ja
jge
adc
xor
inc
jnp
das
push
pop
or
add
xchg
adc
xchg
jo
sbb
das
mov
loopne
adc
pop
enter
xor
dec
je
dec
repnz
outsl
leave
inc
pop
fistl
insb
adc
or
pusha
lret
in
cltd
cmp
inc
nop
adc
jb
pmulhuw
or
jne
lock
inc
xor
sbb
mov
clc
sbb
sti
loope
add
pop
movsb
mov
dec
js
cwtl
rcrb
ret
insl
and
loopne
jno
inc
cmp
sub
movsb
dec
imul
test
push
repz
cmp
or
adc
pop
jns
sub
mov
adc
mov
aam
lahf
in
lret
adc
mov
js
push
orl
mov
mov
sbb
addr16
inc
jbe
xchg
and
cmp
ljmp
lods
js
inc
cmp
out
xlat
xchg
inc
popa
adc
fildl
lahf
pusha
andl
jg,pt
push
cmp
mov
stos
adc
jns
pop
enter
fisttpll
es
fisttps
int
rcrb
stos
in
mov
sbb
push
repz
jp
push
and
adc
shll
add
movsb
push
push
sbb
adc
cs
push
or
imul
adc
ljmp
pop
xchg
rclb
jns
sbb
or
jo
cs
outsb
imul
ds
sub
jmp
or
ja
ja
jnp
lret
and
xor
or
dec
fwait
jbe
adcl
out
mov
mov
cli
addl
add
jno
xor
adc
test
pop
jbe
xchg
mov
sub
mov
xlat
rcr
sub
cmp
pop
stc
imul
or
push
cmpsl
or
int
dec
bound
fstps
mov
inc
mov
std
mov
ficomps
xchg
daa
fstpt
in
fimuls
xchg
xchg
movsb
sbb
add
shlb
jo
xor
inc
jb
in
ss
mov
pop
int3
adc
and
adc
pushf
movsb
inc
push
xchg
xor
xchg
xor
xorl
jnp
sub
or
into
aas
fimull
inc
movsl
mov
push
xorl
or
lea
jo
adc
out
cmp
jmp
sbb
adc
gs
js
and
jno
and
sub
jno
fsub
xor
daa
dec
cmp
jecxz
aaa
add
mov
adc
xor
jp
cmp
call
bound
and
dec
cmp
dec
inc
add
daa
and
outsb
rcrl
imul
cs
jmp
fstpl
daa
int3
test
ljmp
pop
xlat
jge
adc
inc
mov
in
std
lcall
dec
test
push
mov
sub
mov
jb
inc
xchg
ds
lret
push
mov
mov
cli
jl
clc
sbb
callw
mov
iret
mov
lcallw
imul
sbb
mov
bound
addr16
out
cmpsb
popa
adc
push
cli
imul
or
pop
int3
mov
shrl
in
mov
lcall
or
mov
jno
add
adc
push
fcom
repz
sbb
lahf
je
lret
mov
inc
int3
dec
xlat
mov
and
mov
clc
and
inc
loop
popl
push
sub
jno
testl
sub
decb
mov
rclb
mov
sbb
jecxz
xor
xor
mov
or
sub
inc
xor
sub
lods
dec
addl
iret
sbbl
add
aad
test
xor
test
mov
cli
dec
sub
fadd
cmc
out
xor
in
add
out
or
mov
inc
mov
outsl
leave
or
sub
dec
fisttpll
add
sbb
sub
mov
add
iret
push
xor
dec
cli
jns
and
ljmp
test
out
loop
adc
and
call
or
xchg
ror
cmc
sbb
sbb
jge
das
xchg
add
xor
bswap
repnz
fadds
iret
ljmp
roll
loope
dec
jge
push
pop
out
xchg
insl
sbb
push
xchg
sarb
mov
xchg
sarb
mov
mov
xor
or
insl
dec
insb
sub
inc
adcl
push
outsl
mov
jo
adc
inc
fucom
xchg
add
stc
sbbl
nop
adcb
ja
cmpsl
jl
jg
adc
dec
sbb
mov
cs
xlat
mov
xchg
xchg
aam
into
insb
lahf
loopne
mov
jno
or
mov
fbstp
jno
cmpsb
sbb
add
imulb
and
and
repz
sub
xchg
sub
test
pop
jo
xor
pop
lret
inc
mov
mov
mov
outsl
out
cmp
out
cmp
out
fdivl
jae
pushf
fnstsw
subl
sar
testl
out
xchg
data16
mov
pop
daa
lods
pop
and
pop
push
in
mov
pop
stos
add
imul
cmpsl
mov
add
int
and
xchg
hlt
mov
imul
sti
ljmp
jecxz
fcmovne
cmpsl
pusha
sub
adc
push
or
ficomps
pusha
mov
test
or
xor
cmp
xor
xlat
in
imul
mov
shll
test
sub
lods
xor
out
shll
or
test
rcrl
inc
inc
push
fisttpll
lea
mov
add
mov
sub
fildl
js
fwait
sub
mov
cmpsb
pop
bound
shl
pop
inc
stos
dec
jp
pop
xchg
rorl
cmp
cmp
popa
cltd
mov
cli
stc
add
es
pop
test
movsb
in
stos
adcl
mov
lahf
jg
lock
inc
sub
mov
addl
pop
lods
cmp
inc
imul
cmp
daa
fcomi
stos
xor
jo
xor
and
xor
adc
sbb
std
lods
add
jge
jp
sbb
loop
imul
sbb
jne
stos
jmp
ljmp
sub
pop
dec
scas
out
adc
lods
enter
lahf
test
idivl
cmp
mov
xor
push
aaa
jp
sub
fistpll
cmp
mov
inc
sar
mov
jge
xor
lds
jge
imul
int
sti
push
cmp
lret
pop
xor
fsts
loope
mov
mov
incl
jg
stc
cmp
test
mov
test
dec
das
sahf
test
xlat
xor
xchg
push
mov
or
cs
cmp
enter
divb
popf
sub
cmp
mov
scas
push
xor
lock
mov
jns
mov
mov
sbb
incl
and
mov
push
scas
xchg
ja
ftst
ret
clc
lods
aas
xor
xor
cmp
push
pop
push
mov
push
cmpsl
mov
or
daa
mov
push
fmul
push
inc
outsl
mov
push
sahf
jmp
out
xor
and
loopne
cli
popf
je
shrb
shlb
push
xor
dec
aam
fwait
pop
loopne
lahf
loope
jnp
lret
sahf
les
cmp
mov
fidivl
pushf
insb
out
xchg
test
stos
pop
cwtl
add
aaa
jae
nop
les
mov
push
mov
mov
inc
jmp
out
and
aam
add
add
idivb
es
ja
push
pushf
add
dec
pushf
mov
lahf
enter
dec
dec
mov
inc
or
push
cltd
mov
out
or
cld
pop
ss
push
xchg
out
nop
mov
jg
pop
lret
lahf
dec
aad
xchg
into
stos
inc
fnstenv
shlb
insl
xlat
fildl
xor
push
imul
cmp
sub
cmp
iret
dec
adc
cs
lret
adc
sub
pop
loop
xor
dec
add
into
aam
data16
aad
push
jo
mov
dec
mov
xlat
pop
jmp
mov
cli
pusha
adc
mov
fisttpl
das
in
outsl
adc
push
mov
jg
ret
or
inc
inc
fdivs
insb
or
notl
das
and
add
scas
push
sahf
jg
sbb
add
and
out
out
inc
lahf
fstpt
inc
rep
ljmp
fdivrl
outsb
lea
dec
pop
enter
nop
fisubl
insb
xchg
loope
divl
out
cmpsb
leave
jne
lods
popa
int3
cmp
dec
lahf
clc
cmc
jo
mov
test
js
sub
mov
mov
ficoms
jnp
shlb
sti
add
call
roll
insl
cmp
and
test
xchg
jmp
jp
mov
adc
data16
inc
cmp
popf
aad
jne
addb
or
push
sub
popf
pop
xchg
mov
sub
adc
sti
pcmpeqb
jne
lahf
imul
data16
xchg
adc
sub
pop
subb
add
lods
fsubl
xchg
sbb
add
and
push
pop
mov
mov
jae
aad
jb
testl
or
pop
imul
js
inc
mov
aaa
push
xchg
jno
mov
ds
and
fwait
push
gs
add
xchg
insl
inc
jo
push
idivl
out
je
aaa
adc
lahf
leave
outsb
jbe
call
lret
inc
aad
es
imul
fmull
xchg
mov
mov
jmp
cwtl
pop
daa
pop
ljmp
dec
xchg
subb
and
pop
mov
push
pop
jmp
adc
jo
mov
js
jo
out
sbb
pop
mov
xchg
jle
rorl
add
nop
shlb
lods
sub
push
pushf
pop
enter
adcb
int3
clc
cs
data16
xchg
mov
xchg
loopne
pop
mov
adc
ffreep
push
mov
stos
fwait
inc
fwait
ja
clc
add
mov
iret
out
pop
es
sbb
lock
test
lods
mov
jecxz
xchg
mov
data16
mov
clc
int
ficoms
das
call
enter
fdivrl
int
test
subb
cmpsl
scas
out
popf
cmpsb
lcall
adc
and
hlt
xchg
scas
sahf
jbe
dec
fisttps
movsl
add
ljmp
and
int
adcb
lcall
or
push
std
push
sub
repz
mov
shlb
cmp
mov
enter
scas
out
mov
dec
lea
sbb
repnz
adc
sub
xchg
mov
and
fiadds
or
fwait
and
test
push
mov
pop
inc
imull
mov
xor
addb
inc
movsw
xor
ss
mov
inc
lret
push
and
fmulp
roll
jo
pop
inc
adc
xorb
jg
lock
jmp
hlt
add
fidivrs
sbb
cmp
movsl
cmp
sub
pop
inc
add
xchg
sub
cmp
lcall
into
push
inc
shll
dec
mov
fiadds
fs
lods
ret
xchg
pop
cltd
push
fucomp
loope
adc
addr16
jns
dec
push
xor
fucomi
iret
jp
inc
xchg
cmp
cltd
lock
cwtl
xor
adc
dec
sub
mov
dec
add
or
xchg
cmpsb
pop
xor
je
jo
sub
push
fstpl
daa
push
ds
call
hlt
jae
inc
dec
mov
adc
add
sbbb
xor
or
lret
int3
das
xor
adc
push
xor
outsl
pop
loope
enter
fs
insl
push
mov
push
dec
mov
push
mov
lds
push
push
push
dec
mov
pop
sbb
int
mov
or
scas
push
jne
jl
scas
mov
pop
decb
adc
mov
pop
jl
popa
sub
enter
mov
jbe
pusha
fs
push
scas
repz
scas
mov
pusha
xchg
and
and
mov
adc
js
dec
adc
clc
repz
rclb
pop
pop
ja
inc
mov
cmp
ss
push
movsl
xlat
clc
lret
and
lahf
shl
in
cmp
xchg
pop
jecxz
mov
pop
pop
into
xor
xor
mov
adc
push
jg
jo
and
xchg
gs
sbb
lahf
pop
inc
ja
fiaddl
test
fucom
mov
cmp
imul
lds
mov
sbb
adc
imulb
add
sub
out
imul
gs
out
rclb
sub
ficomps
add
stc
out
pushf
je
mov
dec
jge
fs
fiaddl
jmp
cmp
mov
rcll
xchg
std
jle
or
jns
push
sub
adcb
jno
jbe
js
bound
nop
or
lret
mov
pop
lds
dec
xchg
add
mov
movsl
fdivp
inc
add
jns
inc
divb
jmp
xchg
lea
out
rcl
nop
mov
inc
adcb
pusha
push
loopne
ret
addr16
inc
cmpsl
inc
cltd
js
lock
add
cld
flds
cs
sub
jns
or
push
dec
mov
mov
jmp
xchg
outsb
out
push
out
negl
andl
mov
out
out
iret
xchg
xlat
das
repz
and
sahf
and
sbbl
sbb
mov
mov
test
js
scas
add
out
add
mov
add
inc
leave
sub
push
mov
xchg
fcomps
shl
mov
jbe
cmp
push
and
pop
xchg
push
add
adc
cld
jno
call
stc
mov
cmpsl
out
mov
in
mov
cmc
jge
or
jmp
test
mov
xchg
push
and
fmuls
loopne
call
adc
and
dec
push
and
lahf
jb
inc
dec
xchg
add
fs
or
mov
xor
adc
icebp
test
cmp
out
inc
out
pop
hlt
lea
cwtl
enter
xor
popa
xchg
into
movsl
xchg
int3
out
out
fcomps
jmp
loopne
and
push
mov
adc
int3
add
in
bound
pusha
xchg
aaa
mov
inc
xor
shll
or
xor
push
loope
inc
and
jns
jno
add
hlt
mov
inc
cmpsb
cmc
outsb
scas
lret
and
xor
hlt
xchg
adc
mov
add
nop
sahf
filds
mov
inc
je
xor
or
pusha
xor
cmpsb
scas
data16
pop
inc
pusha
pushf
in
mov
sti
cmp
push
dec
jle
push
lahf
xchg
mov
mov
insl
xor
test
mov
jmp
mov
insb
inc
mov
inc
movsb
and
xor
xchg
mov
filds
test
out
sub
sub
arpl
in
mov
sahf
cwtl
xchg
in
or
pop
jns
clc
stos
adc
mov
inc
mov
dec
in
dec
inc
enter
mov
pop
push
arpl
call
cwtl
test
aam
adc
cmp
fstpt
cwtl
jle
es
pop
mov
mov
inc
pop
arpl
xor
sarb
call
dec
lret
pop
pop
inc
outsb
shrl
jae
out
shrb
xor
xchg
pop
movb
push
sbb
cmpsb
loop
loop
lds
dec
push
insl
test
fcom
test
push
pop
cmp
ds
iret
outsb
out
imul
lods
mov
sub
mov
in
adc
outsl
cltd
sub
sarl
imul
mov
fs
and
xor
adc
xchg
pop
insl
test
add
cld
aas
jmp
das
jmp
mov
mov
adc
adc
adc
in
fdivp
mov
leave
mov
into
xchg
sbb
test
out
jns
push
shl
push
xchg
fld
or
cli
iret
lahf
insl
lahf
fwait
sbb
xchg
add
shll
fidivs
jns
loop
or
pusha
xor
clc
or
mov
sbb
lods
test
jge
cmp
adc
sbb
push
xchg
std
and
mov
lock
test
popf
xor
icebp
movsl
mov
ja
xor
inc
mov
sbb
and
cmp
shll
test
fldt
xor
ja
jne
aad
out
xchg
jle
int3
hlt
adc
sub
int3
add
cmpsb
roll
pop
pop
pop
ljmp
mov
jge
ds
mov
xor
insb
test
imul
push
or
js
pop
mov
out
pop
faddl
push
jp
jl
mov
mov
mulb
jae
outsl
cmp
and
add
lahf
cltd
xchg
dec
lret
je
inc
scas
xor
pop
sahf
xchg
cmp
sarl
push
shll
mov
xchg
push
scas
sbb
ja
sbb
push
mov
sarb
adc
jbe
xor
nop
mov
inc
dec
gs
sbb
cmc
xchg
pushf
inc
dec
fisubs
aaa
mov
in
cmp
pop
in
test
mov
imul
mov
lcall
push
data16
lahf
push
push
dec
rcrb
xor
scas
mov
jl
arpl
in
sub
repnz
imul
jbe
xorl
mov
xchg
pop
push
daa
cmp
scas
push
das
je
pop
xor
inc
rcrb
cmp
pusha
mov
out
mov
stc
and
cli
cmp
je
loop
and
add
mov
flds
pusha
and
adc
int3
sbb
xor
mov
fnsave
and
orl
jb
inc
fsubl
ja
jmp
rcl
pushw
lahf
add
sarl
imul
shrl
loopne
inc
pop
fcomps
pop
sarb
adc
and
mov
sbb
jno
adc
inc
je
or
sub
leave
lcall
cmpb
fwait
sub
lods
dec
scas
adc
mov
sub
je
sti
add
lret
loope
mov
jmp
aam
jbe
cmpsb
enter
mov
jo
popa
ds
sub
push
push
out
rcll
mov
push
sub
out
arpl
sbb
dec
pop
jbe
cld
push
pop
daa
and
out
cs
inc
cmpsb
xchg
call
hlt
scas
jne
aam
mov
rolb
rcrl
daa
outsb
fistpll
cltd
mov
jbe
inc
mov
data16
js
pusha
lahf
mov
loop
sub
jae
outsb
sbb
mov
mov
cmp
xor
xor
outsl
and
jne
push
xchg
jbe
xlat
xchg
mov
out
lret
sub
cmpsb
sbb
mov
jp
cli
es
test
cld
je
inc
push
rcl
xchg
es
fst
fidivl
fists
pop
into
jae
pop
loop
lret
mov
scas
outsb
movsl
push
inc
lea
dec
xchg
sar
jl
fildll
xor
aaa
mov
pop
inc
lcall
nop
aas
ret
fcoms
lahf
mov
mov
adc
popl
ss
jb
test
jbe
mov
xor
lods
fwait
add
ja
sti
push
xor
mov
int
inc
ljmp
mov
popa
push
sbb
mov
aas
outsb
xchg
dec
repnz
and
pop
movsl
aas
shl
sti
mov
push
add
sbb
pop
dec
popa
push
fldl
add
daa
xlat
or
daa
push
sbb
dec
dec
and
mov
ror
inc
cmpsb
cmp
in
je
int
divl
push
aam
loope
jl
je
jmp
jmp
or
mov
jmp
xor
lret
inc
addr16
test
push
inc
lds
cmp
inc
loop
sarb
andb
rcll
lahf
or
fistpll
jbe
adc
movsb
xchg
mov
cmp
bound
pop
jecxz
mov
push
inc
add
mov
fbld
mov
nop
lret
jb
icebp
jle
push
and
lods
dec
rcrb
jns
into
ljmpw
and
mov
mov
mov
aaa
xchg
imul
imul
into
test
mov
fstp
jp
imul
xchg
cwtl
mov
imul
inc
sbb
dec
xor
push
loop
out
sarl
sbb
pop
and
mov
cmovge
pushf
fistpll
clc
pop
or
andl
push
jp
push
mov
jg
cmp
pop
jbe
mov
adc
mov
js
mov
aad
rcrb
mov
xchg
dec
cmp
cmc
jle
cli
aas
push
outsb
bound
jno
add
jnp
jno
mov
dec
mov
bound
adcl
jae
mov
dec
inc
jp
sub
jmp
out
xor
divl
test
sub
lea
cmp
rcl
ja
insb
pusha
ja
and
pop
jle
movsl
testb
les
data16
jle
mov
mov
sarb
das
fildll
out
pop
aas
dec
adcl
sub
or
adc
sub
dec
sbb
dec
inc
add
lahf
popa
xchg
cmovs
or
decb
pop
jecxz
dec
sahf
pushf
xchg
call
cltd
mov
outsb
popa
in
iret
shlb
movsl
data16
push
rcr
fsub
imul
jge
push
xor
loopne
inc
jge
pop
aad
bound
cmpsl
or
jle
bound
adc
inc
mov
stos
add
aaa
and
in
loopne
testb
outsb
or
jecxz
adc
or
push
insb
fdecstp
arpl
js
insl
cs
and
mov
lret
stos
addr16
lret
stos
mov
imul
xchg
xor
out
and
pop
in
jmp
dec
push
pause
push
stos
cltd
fucomip
jne
jo
push
test
cmpsl
imul
pop
inc
dec
mov
out
rclb
push
nop
sahf
mov
psubw
stc
xchg
mov
sbb
popa
comiss
jl
add
icebp
jmp
add
pusha
or
adc
add
or
sbbb
das
je
movl
ficompl
xchg
sbb
negb
sbb
cmpsl
stc
shlb
dec
es
pop
and
ret
mov
pop
addb
mov
orl
imul
out
popf
in
sub
dec
int
fsubl
pusha
adc
add
sub
dec
mov
notb
push
jp
push
rorb
sbb
mov
inc
call
jmp
mov
loopne
sub
sub
cmp
scas
mov
dec
pop
and
mov
dec
lahf
mov
xchg
lods
into
mov
sbb
pop
pop
push
mov
and
sbbb
pop
or
in
lret
loope
inc
cmc
mov
in
jno
out
xchg
mov
jo
mov
arpl
xchg
stos
pop
jnp
and
and
cli
fsubrl
or
jg
push
aad
inc
sub
inc
dec
mull
and
add
movsl
xchg
sub
test
adc
jecxz
outsl
fdivl
fs
add
push
fimull
mov
movsl
xor
sti
popf
cmp
or
mov
adc
jbe
xchg
ds
pushf
jne
daa
daa
orb
je
scas
sbb
pusha
pop
sahf
and
push
inc
sub
lods
ret
sbb
push
dec
loopne
mov
imul
test
inc
cmpsb
int
adc
call
movsb
mov
inc
mov
cmp
orl
pop
ret
adcb
testl
dec
insb
std
imul
cld
jmp
or
mov
add
ds
cmp
push
nop
scas
or
imul
push
fidivs
mov
jne
mov
loope
adc
int
insb
mov
pop
sub
cltd
cmpsl
inc
mov
and
push
sbb
ffreep
lret
fisubs
cmpsl
mov
pop
push
out
push
fwait
loop
mov
pop
and
das
movsb
push
xor
and
add
outsl
nop
sbb
clc
pop
stos
dec
xor
cmp
adc
mov
cld
sub
inc
sar
arpl
or
inc
data16
sti
mov
jl
jmp
pop
shrb
outsl
clc
js
mov
aad
aas
mov
mov
xchg
pop
push
clc
fisttpl
xorb
divl
ret
sub
dec
and
adc
fidivl
dec
test
pushf
fidivrs
and
adc
inc
mov
cld
lret
arpl
pop
and
inc
push
outsl
mov
push
add
clc
and
push
movsb
test
movsl
cmp
cwtl
xor
scas
imul
add
inc
inc
xlat
gs
cltd
lods
mov
sub
sub
push
int
sbbl
js
aad
push
gs
clc
fistpl
jl
enter
cmp
stos
xchg
adc
imul
in
and
or
movsl
jle
or
add
push
repz
sarb
arpl
push
addr16
aam
dec
jge
mov
sbb
sub
outsb
cmp
mov
or
sbbb
pop
xchg
sub
sbb
jne
xor
xchg
popa
insl
js
popf
in
ljmp
jnp
pushf
lahf
test
push
jecxz
xorl
xor
sub
adc
pop
aad
pop
lahf
add
ja
arpl
mov
lret
adc
iret
popa
inc
and
out
das
sbb
cmp
shr
pop
lret
test
lret
jmp
cltd
out
mov
add
adc
andl
fcoml
lods
sar
pop
mov
mov
add
dec
xchg
and
das
repz
aaa
sbb
push
sbb
sbb
sub
popf
push
ja
mov
sbb
lret
dec
and
mov
popa
fwait
shl
and
cmc
push
popf
or
ret
ds
xor
idivb
cmc
popa
loop
lcall
mov
stos
dec
imul
mov
xorb
stos
out
cs
mov
cltd
sub
outsb
subb
push
test
xchg
xlat
into
fldenv
es
sbb
mov
pusha
data16
mov
bound
cmp
arpl
cltd
cmpsb
inc
mov
aas
dec
inc
xor
jmp
or
add
movsb
idivb
std
xchg
repnz
push
call
out
int3
gs
jle
bnd
jmp
test
mov
sbb
cltd
in
adc
pop
adc
jmp
mov
push
mov
mov
sbb
imul
lock
pop
mov
scas
js
jne
mov
test
bound
sarb
dec
xor
out
xchg
mov
pop
in
add
jp
in
rol
and
faddl
nop
mov
int3
or
jo
rcr
insb
andl
adc
add
pop
mov
sub
nop
in
mov
or
daa
sahf
sub
roll
in
mov
hlt
jns
leave
in
and
mov
incl
and
jmp
arpl
icebp
xor
arpl
arpl
pop
fwait
je
faddl
testl
movsb
je
xor
sub
addr16
repnz
jmp
push
fidivs
aad
aad
mov
mov
inc
xor
inc
cmc
sub
mov
xchg
pop
cmpsb
ficomps
es
sbbb
add
add
jns
jl
cmp
or
sub
fwait
cmp
pushf
jle,pt
clc
out
sub
inc
push
js
xor
divb
loope
mov
ds
add
rolb
adcb
jle
les
nop
out
into
add
mov
or
cltd
imulb
add
and
pusha
cli
and
int3
shrl
ja
xchg
xor
pop
inc
mov
pop
divl
aaa
stc
jbe
arpl
fistps
loopne
fidivrs
leave
sbbl
mov
fldt
cmp
jecxz
jmp
cwtl
cmpsb
ds
or
push
cld
pop
inc
lds
pop
xor
imul
loope
cmpl
test
xor
outsb
and
xchg
sbb
jns
ja
pushf
xor
sbb
lcall
push
bound
add
movsb
push
dec
dec
cmp
mov
mov
out
hlt
mov
mov
xor
fidivrs
mov
out
dec
lods
sbb
adc
push
nop
ss
and
pop
push
inc
xchg
mov
push
inc
loope
cmp
adc
mov
nop
and
cmc
lret
jne
aas
adc
jp
mov
xchg
mulb
jmp
faddl
cwtl
xor
andl
and
shr
les
xlat
sbb
add
jg
mov
push
xchg
pop
dec
out
rcll
inc
fsin
add
shl
mov
aam
mov
cmpb
lret
and
outsl
stc
cmpsl
cwtl
cmp
pop
pop
rol
shl
lret
or
pop
mov
xor
push
pop
xchg
and
pop
ss
jmp
sti
call
jecxz
dec
mov
test
push
lds
fistl
outsl
mov
ja
data16
sbb
cmp
xchg
mov
es
mov
or
mov
jecxz
loopne
daa
cmp
dec
aas
lret
dec
mov
into
data16
out
inc
xor
push
std
jns
xor
fisubrl
mov
jne
loopne
pop
jns
je
inc
and
and
rep
fisubl
xchg
flds
ljmp
ret
adc
movsl
ljmp
rcr
cmc
xchg
sub
sub
popa
mov
repz
enter
pminsw
movl
fistps
mov
cmp
fldt
or
loope
pop
pop
dec
push
inc
or
icebp
loopne
lods
pop
out
cmp
int
fbstp
xchg
push
adc
push
lock
es
pop
lods
cmp
mov
xor
mov
cmc
into
inc
push
movsl
xchg
in
xchg
pop
dec
pop
mov
xlat
bound
sub
xchg
repz
jecxz
push
cmp
dec
adc
jb
in
xor
arpl
xor
mov
popa
dec
xchg
push
mov
xchg
xor
repz
push
add
mov
test
xor
clc
add
int3
ljmp
sbb
ja
lods
dec
sub
daa
add
sbb
cld
xor
or
je
mov
ret
daa
mov
push
test
repz
call
mov
add
shll
sahf
mov
inc
mov
int3
push
jae
push
data16
mov
aaa
cmp
push
or
jae
pop
push
hlt
inc
mov
xor
jg
pop
test
cwtl
dec
int3
xchg
aad
mov
in
aam
scas
mov
jns
ret
push
pop
in
dec
push
mov
imul
lret
outsb
push
cld
fadd
sbb
sub
stos
or
jae
scas
xchg
and
mov
push
cmpsl
les
mov
push
ja
add
aaa
cli
mov
in
inc
lds
imul
add
aas
push
pop
adc
aam
sarb
aaa
push
add
gs
andl
jmp
es
out
popf
mov
mov
fucomi
xor
mov
jecxz
rcrl
dec
cmp
lea
sbb
mov
leave
xor
mov
pop
fwait
loopne
adc
mov
daa
mov
addl
mov
loopne
pop
adcl
xor
ja
pop
inc
sbb
adc
aaa
enter
inc
push
dec
fisttps
cwtl
mov
sbb
sub
or
fs
mov
xor
jo
pop
notb
xchg
adc
out
dec
dec
cmc
add
subl
add
pop
adc
or
mov
test
push
mov
dec
dec
adc
inc
and
mov
dec
adc
cmp
jns
sbb
fcom
sub
scas
mov
and
movl
cmp
inc
stc
inc
xchg
mov
mov
call
mov
test
dec
cs
mov
out
jecxz
mov
cli
xchg
ss
push
jg
pushf
cs
shll
dec
add
imul
sbb
out
cmp
fcmove
popa
pop
xor
or
and
push
leave
test
jl
rcll
cs
mov
enter
scas
mov
pop
xchg
jbe
or
in
pop
xor
dec
fs
lahf
dec
pop
fidivrs
cli
xchg
popa
data16
into
cld
mov
mov
cmpsl
xor
add
push
daa
arpl
int3
loopne
jbe
stos
daa
ret
push
mov
pushf
mov
inc
mov
into
inc
daa
aam
dec
add
mov
mov
inc
call
fistpll
pusha
mov
mov
push
lret
sbb
sbb
dec
popf
dec
test
add
lret
fstpt
inc
icebp
dec
sbb
sub
pop
mov
aas
and
repz
rcr
aaa
jg
in
xor
js
pushf
lahf
sub
xorl
jecxz
cmp
dec
lahf
sub
icebp
stc
jnp
sbb
adc
lea
in
pop
push
adc
dec
cmpl
repz
popa
xchg
es
sar
xchg
dec
cmpsb
jae
sub
cwtl
jecxz
inc
pop
xor
or
mov
rcrl
dec
test
xchg
aaa
cmp
and
push
xor
xor
add
les
push
or
movl
ja
cmp
js
rcr
or
leave
xor
sbb
aas
dec
dec
lea
and
clc
in
and
xor
jp
mov
testb
adc
xchg
fwait
mov
mov
pop
pop
cmp
fimuls
loopne
mov
mov
add
and
lret
js
shll
dec
repnz
sbb
sub
ja
push
mov
leave
aaa
lock
dec
bound
mov
sbb
or
icebp
sbb
iret
mov
fs
add
iret
daa
dec
popf
inc
or
dec
les
loop
mov
movsb
xchg
sahf
push
and
dec
jge
add
or
ja
mov
xchg
push
bound
xchg
xchg
aad
inc
ja
inc
sub
cmp
mov
ja
mov
pop
push
inc
push
xor
mov
and
mov
loope
push
and
xor
xchg
jge
jle
popa
pusha
das
jb
jle
leave
mov
push
sub
out
repz
or
aaa
inc
loop
cmc
lods
jb
inc
and
dec
mov
ja
jge
push
dec
xor
sbb
xor
movsl
push
sub
imul
imul
cmp
movsl
pusha
lock
push
lret
mov
call
lds
mov
push
shlb
fidivrl
xor
sbb
xor
pusha
ljmp
push
enter
sub
cld
test
mov
mov
jecxz
pusha
ret
scas
addr16
pop
xorb
stos
mov
repz
push
sub
cmp
adc
cmp
dec
mov
push
sarl
arpl
hlt
in
push
jo
add
out
leave
rcll
sub
lea
mov
shlb
notb
mov
add
inc
lods
cmp
push
ret
iret
sahf
jge
mov
or
push
int
jmp
aas
in
roll
jbe
subb
cwtl
jmp
cld
dec
inc
cmp
inc
fstps
jecxz
xlat
mov
inc
sub
iret
arpl
inc
mov
push
or
ss
mov
dec
cmp
imulb
jno
cmp
sbb
push
mov
test
stos
rcl
fmull
add
mov
push
inc
and
lahf
rcrb
lret
fistpll
add
sub
dec
pop
xchg
lock
int3
sbb
je
push
int3
addl
js
xchg
cltd
inc
jo
cltd
push
mov
xor
arpl
int
aam
xlat
negl
pushl
xchg
jnp
jo
dec
out
insb
xchg
cmp
cmpsl
sub
sub
pop
out
lods
lea
mov
jne
inc
fdivs
xchg
fdivrp
int
mov
fdivrs
pop
ds
mov
clc
jle
adc
insb
ret
arpl
and
leave
nop
xchg
insl
mov
dec
or
rcrb
xchg
pop
lahf
adc
jp
mov
aad
in
ret
push
add
out
pop
xchg
in
xchg
fisttpll
mov
jnp
mov
sub
je
into
pusha
fldt
testl
faddp
add
adc
stos
pop
xchg
inc
pop
mov
loop
xchg
inc
das
negb
iret
sahf
dec
sub
outsl
mov
inc
sbb
je
mov
cmpl
mov
and
dec
sub
inc
imul
xchg
sub
mov
mov
insl
jno
imul
sti
rclb
add
in
or
clc
int
sub
sub
arpl
imul
sahf
mov
sbb
jae
int
mov
mov
sbb
gs
testl
aaa
xchg
loop
in
test
ret
lods
sarb
enter
push
daa
mov
push
mov
call
dec
imul
invd
add
mov
into
cli
out
mov
dec
add
mov
das
xor
ret
and
mov
movl
sahf
xchg
ss
mov
sbb
shrl
rol
int3
loope
mov
subb
jp
and
imul
fistpl
mov
clc
lea
lcall
out
jns
gs
mov
xor
cltd
sti
ljmp
stc
clc
jle
sub
hlt
cmpb
insl
lcall
fldenv
in
adc
lcall
cmp
lock
cli
push
mov
mov
in
pop
add
in
mov
adc
pop
mov
daa
mov
jl
insl
mov
bound
jne
push
cmc
loopne
pop
ss
mov
ret
clc
pop
and
push
fdivs
push
scas
mov
out
faddp
es
and
sub
mov
dec
arpl
sub
std
int3
xor
cmc
or
rcrl
lds
les
cmpsl
je
popf
pop
push
loop
sub
pop
rorl
in
xor
ds
std
cltd
popf
test
pop
mov
movsb
dec
orl
cmc
or
dec
and
outsb
loop
movsl
stos
and
mov
push
popf
lods
aam
mov
stc
push
cmp
icebp
pop
dec
jmp
add
in
sub
dec
das
repz
jo
inc
inc
clc
pop
inc
ds
pop
jns
pop
or
xchg
inc
aad
pop
es
sub
jmp
cli
ja
adc
mov
rcl
jbe
add
cld
shl
jg
fisttps
or
push
js
pop
popa
and
das
sbb
test
rol
pushf
pop
jle
stc
pop
mov
inc
push
cld
cwtl
mov
sub
cmp
scas
cmpsb
out
sub
mov
insb
push
daa
je
sahf
pop
cli
flds
inc
stos
das
sbb
jnp
dec
xchg
push
and
mov
aad
xchg
mov
mov
lret
pop
lds
test
mov
fs
inc
mov
repnz
inc
xchg
adc
mov
into
lret
ds
xchg
arpl
xlat
inc
addr16
popa
mov
dec
cmp
mov
xor
pop
pop
pushf
fs
add
cs
hlt
jecxz
xchg
outsb
and
push
pop
adc
xchg
add
sub
unpcklps
test
fstl
jae
xchg
insb
inc
in
mov
cmc
aad
and
ret
aaa
leave
mov
into
rcll
xor
insb
pop
pop
jecxz
mov
ret
mov
aam
xchg
loop
movsb
lcall
push
lcall
pusha
mov
ljmp
bound
and
inc
ret
jb
mov
xchg
outsl
fadds
adcl
sbb
xor
lea
push
pop
mov
das
data16
push
fld
cmpsb
mov
inc
scas
sbb
or
xchg
mov
cli
xchg
pop
aaa
fldenv
fs
dec
sbb
movsb
jno
es
arpl
cmp
iret
cltd
sbb
test
mov
out
add
dec
loop
pop
lods
cs
fstpl
mov
push
test
lock
jle
mov
data16
shl
test
cs
popa
test
jge
push
flds
fdivrs
dec
jns
xor
xlat
adc
out
fidivrs
rorl
or
clc
sbbl
mov
or
stos
pushf
or
and
or
jmp
xchg
ret
rcrl
fwait
iret
xlat
mov
pop
push
sub
pop
mov
cltd
in
mov
push
js
fmuls
mov
jno
out
in
nop
mul
dec
mov
dec
cltd
push
sbb
or
mov
add
jecxz
cmp
popl
jne
pop
imul
inc
mov
les
aam
pusha
outsb
mov
lret
sbb
stc
stos
inc
fldt
adc
ja
inc
lods
jo
jmp
loopne
dec
xor
call
int
jbe
dec
out
enter
and
or
scas
jp
mov
stos
dec
mov
jno
aam
mov
jg
jecxz
cmp
into
push
pop
pop
rcrb
cmpsl
out
sub
pop
call
adcl
aas
ljmp
aaa
fcoms
cmc
pop
xchg
or
xor
mov
xor
and
mov
fsubrp
mov
out
or
mov
sub
std
shlb
inc
ja
mov
jge
stos
jge
pop
dec
aaa
dec
push
mov
dec
std
xchg
sub
rcrb
and
add
bound
iret
push
es
js
xchg
ja
addr16
mov
jo
fwait
cmp
insl
lret
lods
or
jns
popf
cmpsl
cmp
popf
mov
push
or
sub
sub
xchg
adc
outsb
daa
daa
pusha
sub
pop
testb
push
int3
pop
cmpsl
lock
jle
xchg
lret
mov
test
xchg
ficoms
les
shlb
jge
sub
sahf
es
inc
cmp
pop
pop
out
sub
jg
daa
pop
inc
adc
mov
push
xor
and
loop
lock
outsb
mov
jp
inc
mov
push
sbb
or
jo
sub
jbe
xor
lret
push
pop
dec
insb
arpl
ret
dec
cmp
inc
shr
fwait
iret
push
popf
jge
fs
mov
xchg
xlat
std
xchg
cmpsl
cmp
scas
jbe
scas
insb
pop
pop
push
in
or
ljmp
fdivrl
mov
mov
loop
xor
cmc
jg
int
sbb
xchg
jecxz
sbb
xor
sub
cmp
pop
ss
in
adc
sub
data16
pop
fwait
jns
jecxz
and
cli
std
dec
and
gs
aam
pop
fwait
adc
movsl
inc
shl
jmp
mov
loopne
cmp
in
clc
jmp
movsb
dec
pop
push
cli
lods
aam
mov
enter
gs
mov
sub
nop
int3
ret
dec
jg
mov
inc
ja
sbb
adc
mov
add
lret
aaa
pop
testl
daa
pop
jnp
icebp
mov
and
mov
sub
push
loop
mov
insl
fcomps
je
sub
xchg
mov
cmp
iret
dec
daa
stos
rcrl
inc
jecxz
cmp
push
cmpsb
in
pop
jmp
adc
leave
inc
shrb
and
pop
add
mov
dec
pop
add
sbb
int
hlt
leave
ljmp
mov
or
pop
sti
sbb
jne
sub
mov
xchg
adc
stc
sarl
stos
ds
aas
or
jno
or
mov
xor
adc
loope
xor
dec
sti
mov
loop
pop
or
mov
lock
lret
mov
mov
and
lods
push
and
cmc
lds
cltd
add
jbe
mov
shll
stc
add
je
pop
jo
mov
mov
and
mov
js
or
out
ja
pusha
enter
push
enter
in
mov
ds
jl
xor
lods
int
dec
sbb
aam
and
shl
out
movsb
js
gs
cwtl
mov
jbe
sbb
and
loop
sub
adc
push
ror
iret
add
push
cmp
push
cmpsb
mov
pop
loop
pusha
xlat
adc
cwtl
adc
push
rcrl
dec
jp
push
into
jge
and
out
scas
sub
mov
push
lea
push
push
out
push
nop
inc
sbb
mov
aas
leave
testl
inc
adcb
iret
cmp
lret
call
and
bound
loope
rcr
xchg
les
frstor
mov
clc
xor
insb
xor
repz
iret
clc
mov
flds
xor
out
sbb
loope
sti
push
mov
inc
sbb
mov
sbb
enter
jbe
arpl
lahf
jo
loop
or
mov
mov
push
in
dec
sub
dec
adc
mov
adc
orb
dec
dec
add
adc
insb
push
lock
push
mov
push
mov
incb
push
lock
sbb
xor
icebp
pop
jno
jle
fucomip
mov
daa
xchg
enter
dec
and
xchg
lret
les
xchg
mov
fwait
repnz
sbb
mov
xor
adc
push
adc
andl
in
mov
dec
sbb
test
ljmp
sti
and
mov
mov
cmp
lahf
lcall
rorb
popf
lahf
ss
sub
cmc
pushf
and
popf
xchg
lret
in
aam
and
js
xchg
dec
cmp
mov
sub
repz
jle
scas
add
push
mov
inc
mov
mov
xchg
repz
mov
fwait
mov
xchg
xor
imul
stos
mov
pop
sbb
shll
dec
or
ljmp
mov
mov
cwtl
sub
fisubl
jnp
loopne
jle
inc
push
pop
xchg
cmp
rcrl
sub
cmpl
or
dec
int
popf
ret
je
jnp
mov
add
and
into
mov
pop
add
ja
subl
pop
rcrb
or
or
xor
and
addr16
sahf
mov
insb
jo
pop
push
push
subb
and
add
or
inc
testl
je
sarb
mov
cmp
jns
add
out
jo
fwait
shl
cmpsl
or
xchg
cltd
jb
fs
sub
xchg
aas
mov
sbb
in
mov
or
mov
push
sbb
iret
scas
mov
adc
pop
das
dec
adc
xor
mov
hlt
jae
cwtl
dec
out
jns
sub
jmp
sub
ljmp
pop
decl
addr16
pop
lret
lret
lods
xchg
sub
mov
mov
push
adc
mov
sub
mov
lcall
pop
sub
cmpsb
stc
xchg
unpckhps
pop
lock
je
cld
add
pop
sub
dec
pop
pop
fistl
jle
dec
cs
adc
mov
jo
adc
aam
sbb
scas
adc
push
repz
pop
mov
es
lahf
xor
xor
ljmp
scas
push
sub
cld
icebp
dec
dec
addr16
dec
and
xor
icebp
sub
and
jo
jmp
scas
insl
popf
jg
cmp
aam
in
push
xor
inc
cld
lods
fdivrp
es
loopne
jo
and
mov
hlt
fcmovb
test
and
inc
push
ret
mov
outsb
aam
cmp
lcall
dec
lods
rcl
cmpsl
mov
xor
bound
es
ja
push
mov
pop
aam
ds
jnp
ja
int
pop
mov
fwait
testl
cld
imul
push
adc
divl
sbb
insl
pop
pop
iret
sbb
add
or
leave
push
sahf
test
out
test
test
nop
xor
repnz
cmp
ds
fisubs
das
and
and
fisubrl
mov
bound
sbb
lds
inc
ljmp
notb
add
push
add
popf
int3
push
loopne
xor
add
cwtl
fdivl
sbb
movsb
jae
dec
sub
popf
dec
xchg
pop
mov
test
push
and
mov
add
insl
jo
mov
andb
pop
or
test
mov
aas
pop
sub
push
sbb
hlt
daa
cmp
iret
xchg
aaa
sarl
mov
repz
daa
sub
sub
lcall
jp
sub
std
insl
dec
inc
pop
mov
repz
jecxz
or
insl
mov
xchg
mov
ja
fisubrs
mov
sbb
mov
das
dec
repnz
dec
sbb
sbb
xchg
cwtl
ljmp
movsb
popa
lcall
mov
mov
cs
ss
push
lock
cmpsb
xchg
outsb
fwait
addb
and
push
cmp
lock
ds
fldcw
cmp
inc
cmp
xchg
insb
stc
and
mov
rclb
xor
iret
push
sub
cwtl
add
insb
or
es
in
pop
sti
jbe
jle
pop
cwtl
out
inc
mov
jbe
test
popf
inc
add
add
xor
inc
shlb
mov
xchg
lds
adc
jmp
pop
xchg
or
xchg
cmp
inc
mov
mov
lret
cmp
xchg
add
or
lods
add
test
dec
inc
jne
shl
jo
loop
jo
push
dec
stos
ret
dec
pop
xor
shl
lods
mov
dec
shlb
repz
or
push
inc
and
ror
in
aaa
or
xor
add
mov
fsubl
test
out
and
add
mov
dec
in
adc
ljmp
push
pop
push
jns
cmp
loope
mov
lret
movsl
sub
insl
shlb
test
inc
fsubrl
xor
sarb
cmp
insl
adc
xchg
cmpsl
fwait
movsb
mov
ljmp
rcl
xchg
aam
cltd
dec
in
ret
xchg
or
lods
ret
movsb
mov
adc
je
sahf
movsb
int3
jge
cmpsb
pop
mov
into
xchg
out
or
xchg
idivl
push
add
fsub
sub
std
test
mov
jecxz
cmovs
xchg
push
loopne
mov
js
mov
mov
in
inc
adc
jp
aaa
bound
and
arpl
pop
adc
cmp
clc
sar
fisttpl
lret
shll
repnz
das
cwtl
cmp
repnz
jns
push
xor
repnz
pushf
pop
xor
add
fistl
fadds
mov
xlat
jg
out
fsubs
gs
aaa
std
xchg
xchg
ds
int
mov
out
cmp
jbe
mov
sti
pushf
push
lahf
lock
leave
lret
mov
lcall
pop
in
leave
add
enter
test
push
lds
out
ss
xchg
test
and
icebp
pusha
fcompl
cmpb
inc
cs
inc
add
dec
lods
or
dec
jne
dec
dec
fabs
mov
mov
jns
push
aaa
decb
cmpsl
sbb
lods
inc
sub
or
mov
adc
push
divb
std
sub
push
pop
and
out
in
xchg
enter
fisubrs
mov
es
ficoms
cmpb
xorb
ffreep
push
sub
mov
popa
in
and
ja
or
push
test
push
rol
mov
ljmp
int3
jb
mov
adcb
jp
dec
enter
xchg
jmp
and
pop
std
and
out
push
adc
sub
aad
jae
xchg
adc
jmp
push
call
rcrl
shlb
mov
repz
mov
add
dec
sbb
lret
xor
lea
call
aam
add
mov
sbbl
into
cmp
shr
xor
lods
and
or
shr
fst
mov
in
aam
jmp
cmpsl
or
cmp
dec
mov
aam
iret
aas
push
pop
shlb
jbe
aaa
pop
dec
fisubs
movsb
fwait
mov
in
xchg
inc
mov
pop
cmp
popf
mov
add
js
out
out
mov
adc
cmp
out
mov
daa
shlb
inc
xchg
in
sbb
cmpl
ljmp
popa
ja
mov
add
adc
push
pusha
mov
mov
lret
push
mov
mov
push
in
dec
xor
movsl
bound
imul
lcall
jae
adc
or
mov
stos
int
cwtl
jns
mov
test
cmp
inc
mov
imul
push
das
lds
aaa
test
jnp
cmc
out
in
arpl
push
sub
push
outsl
jae
imul
fpatan
pop
out
jbe
arpl
fsubrl
insl
sub
lret
push
xchg
mov
mov
int
scas
scas
push
mov
push
lret
iret
mov
push
dec
sub
mov
cmpsb
add
in
cmp
iret
sbb
mov
out
xchg
mov
cs
sub
dec
ljmp
int3
mov
jo
xchg
inc
out
or
cmc
lahf
call
sub
push
xor
bound
stos
mov
movups
inc
mov
aas
inc
mov
fwait
or
lock
repz
fiaddl
test
inc
aad
into
sub
push
jg
mov
dec
push
popf
das
mov
pusha
add
mov
int3
jb
sbb
pushf
clc
lock
cmp
pusha
scas
std
lret
sbb
or
loopne
xor
pushf
push
loopne
cmp
pop
aam
aad
xor
enter
mov
push
push
lahf
pop
mov
or
int
std
fs
aaa
imul
xor
les
sub
adc
xchg
pop
jecxz
xor
pushf
lcall
sub
mov
xchg
jge
xor
inc
jb
outsb
push
fs
inc
in
mov
xlat
scas
aas
sti
mov
loop
and
repz
jl
imul
xchg
movb
cmp
std
aad
jle
xchg
mov
aas
inc
jb
or
fbstp
sub
stc
and
shl
pop
loope
loopne
or
xchg
lahf
fwait
je
dec
fildl
push
insb
ret
hlt
mov
stos
pushf
loop
test
mov
pop
jns
insb
cmpsb
dec
aas
ret
out
mov
not
in
out
mov
test
mov
sbb
add
lods
push
or
data16
aam
ss
sbb
add
push
jg
lods
fildl
outsl
jp
cltd
dec
mov
dec
cs
lahf
cmp
lcall
js
jbe
popf
xchg
jmp
popl
test
out
and
mov
dec
add
int
mov
inc
fiaddl
es
xchg
ljmp
aad
repnz
mov
icebp
test
cmp
and
cmpl
mov
pop
jno
js
std
notl
lret
dec
mov
mov
sub
add
push
jmp
ret
addl
psrlq
jb
out
adc
sbb
xchg
xor
imul
ret
testl
sub
popa
in
mov
mov
xchg
lret
pop
xchg
mov
loop
stos
rcr
add
adc
das
dec
mov
lods
cmp
nop
movsb
xchg
jg
or
mov
daa
xchg
jnp
mov
addb
test
lock
scas
xchg
push
dec
fwait
shll
sbb
push
pop
and
fsubl
cltd
add
adc
cmpsb
iret
add
maskmovq
popa
jnp
adc
jnp
xor
inc
xchg
movsb
mov
push
sub
test
in
jbe
add
jecxz
out
mov
dec
out
jb
call
mov
jbe
xor
mov
ficompl
ja
jae
daa
jl
cs
mov
add
and
xchg
xor
lcall
xor
jae
pop
ret
out
dec
pop
fdivrs
jmp
adc
xor
mov
cltd
decl
jb
pop
inc
lock
dec
rorl
shrl
mov
or
popf
into
cmc
das
jecxz
dec
scas
aad
cmpsb
jge
ds
inc
arpl
xor
ds
cmpsl
popa
or
lods
into
ret
or
dec
hlt
jbe
push
icebp
cmpb
pop
aam
imul
outsl
imul
jne
bts
cmpsb
out
fwait
mov
or
out
ret
inc
jo
movsb
and
shll
xor
sarl
dec
addr16
mov
loope
or
add
and
movsb
aam
or
cld
xchg
shrb
lds
clc
pop
loopne
push
outsb
into
pop
cmp
ret
jo
mov
xchg
cmp
in
dec
pop
rcll
sbb
iret
fstl
pop
and
insb
mov
add
xchg
das
rcrl
dec
xchg
pop
mov
lods
outsb
fisubrs
or
loope
sbb
sub
ljmp
repnz
or
lea
faddl
into
insl
sbb
imulb
pop
ja
test
mov
dec
jne
in
lods
mov
repz
mov
inc
lahf
ss
jo
push
divl
add
cmpsl
packssdw
adc
adc
stos
mov
pop
icebp
mov
pop
jae
mov
sub
rolb
xlat
or
clc
xor
cmp
cli
push
stc
xor
xchg
mov
mov
arpl
sbb
pop
int3
sbb
mov
lcall
push
bound
outsb
subb
xchg
push
fdiv
jo
mov
mov
xor
dec
xor
xchg
mov
mov
in
movsb
inc
leave
xor
xchg
fcmovbe
inc
mov
and
test
xchg
mov
dec
push
cmpsl
cmp
cmpsl
jae
mov
cmc
cwtl
ja
dec
add
push
js
pop
cltd
std
in
fimull
jb
mov
mov
in
insl
lcall
or
mov
push
pusha
and
data16
jbe
pop
outsb
in
fcmovu
ljmp
xor
sbb
dec
sub
fs
int3
test
mov
iret
and
cmpb
pop
mov
imul
movsb
fisubrs
fwait
movsb
cmp
filds
sub
sti
push
cmp
sti
cs
pop
cmpsl
xchg
insl
iret
cmpsl
mov
out
pop
sti
pop
ret
jmp
xchg
jne
sub
push
lods
movsl
adc
out
mov
int3
fs
insl
or
loopne
ja
add
jno
add
sarb
les
jecxz
push
cmp
sub
xor
pop
adc
push
xor
ja
das
pop
mov
or
inc
ret
out
mov
movsb
adc
out
sbb
test
cmp
insl
shlb
shlb
mov
call
mov
jno
sbb
int
incl
aad
lret
loopne
aas
mov
mov
xor
cmc
cmc
or
xor
dec
sti
xchg
mov
leave
cmp
mov
mov
sub
iret
xor
pop
mov
dec
push
mov
push
push
sarb
adc
inc
sbb
cwtl
push
adc
test
testl
lock
sbb
sub
cltd
mov
ds
fwait
addb
xlat
mov
fs
xor
int3
les
sbb
sbb
bound
mov
scas
cmp
lar
jne
movsb
rcll
push
pop
fdivrl
in
jne
lods
addr16
pop
movsb
inc
push
daa
jp
mov
ret
sub
inc
jae
mov
xchg
adc
and
sub
out
push
xchg
stos
je
jecxz
lret
or
cwtl
in
dec
add
mov
push
shrb
and
xchg
enter
mov
lret
jae
movsl
inc
push
enter
int3
repz
mov
push
push
mov
and
repz
imul
hlt
int3
fsubr
cmp
nop
push
jne
mov
sub
push
testb
pop
xchg
int
gs
int3
data16
mov
add
mov
enter
lea
xchg
cmp
dec
pushf
xor
popa
lds
stc
outsb
rcll
div
mov
mov
mov
mov
ret
cmpb
xchg
sub
fwait
out
mul
inc
mov
pop
inc
int
rdpmc
loop
stc
xchg
shlb
cltd
sbb
fwait
sbbl
dec
add
push
mov
push
mov
jb
rorb
ret
xchg
xchg
xchg
jl
mov
sbb
cmp
ja
pop
shll
dec
inc
aad
xor
mov
xchg
clc
push
mov
jae
aam
sub
imull
out
mov
jg
mov
push
inc
aas
and
push
fstps
in
jo
xchg
in
notb
in
fwait
push
in
sub
mov
sbb
icebp
jge
std
and
out
aas
xor
test
pop
push
lcall
es
mov
in
cmp
rcrl
push
add
pop
or
push
das
les
pop
mov
hlt
ret
mov
sbb
lock
jp
fwait
xor
das
outsb
mov
sub
popa
pushf
xor
test
adc
add
jmp
adc
add
xchg
adc
dec
adc
aas
cmp
sbb
mov
mul
outsb
insb
lods
aaa
mov
pop
or
pop
xchg
xor
repnz
loope
mov
testl
imul
add
ljmp
daa
or
aas
jmp
leave
push
inc
inc
cmp
pop
or
shl
sub
insb
mov
jo
sub
stc
mov
sbb
pcmpgtw
cmpsl
lcall
test
push
jne
cli
jno
pop
mov
test
jp
jbe
std
pushf
inc
outsb
xor
imul
outsb
add
cmp
push
inc
push
cmpsb
lret
inc
jno
shrb
and
scas
je
mov
aad
xlat
into
cmpsl
push
daa
iret
sub
fcoml
adc
lock
sbb
adc
in
mov
sbb
loope
mov
jl
ljmp
and
inc
push
dec
jnp
xchg
jmp
lods
aad
outsl
jb
pop
iret
clc
andl
pop
mov
in
int
test
jmp
sub
jp
out
lea
imul
xchg
in
add
rcll
outsl
inc
push
mov
loope
stc
mov
jmp
aaa
mov
pop
loope
enter
xor
xchg
jae
mov
ja
fstpt
adc
stos
shll
add
jae
push
ret
sub
imulb
pop
stos
jnp
sbb
out
pop
repz
mov
jg
mov
in
mov
rorb
adc
sbb
mov
jge
lods
mov
out
inc
add
xlat
outsl
mov
hlt
mov
inc
out
movsb
pop
lods
mov
push
in
repnz
pop
add
test
or
add
xor
fcompl
push
inc
leave
lret
ljmp
jno
mov
mov
jo
mov
pop
lods
mov
jnp
xor
pop
inc
mov
in
sub
push
outsl
sbb
cltd
mov
mov
push
lds
divps
jmp
hlt
outsl
mov
push
cli
push
mov
lods
dec
repz
mov
je
iret
sub
mov
jecxz,pt
movsl
and
out
ja
mov
sbb
mov
ds
add
inc
inc
mov
mov
aad
mov
aam
xchg
jns
cltd
xchg
lods
mov
fistpll
mov
mov
daa
popf
out
fldl
or
pop
xor
or
adc
iret
mov
and
in
jbe
and
xor
pop
movsl
mov
out
sti
icebp
test
dec
dec
mov
mov
pop
pop
lcall
stc
xor
popa
fs
loopne
mov
add
sbb
je
jnp
mov
loopne
mov
outsl
fsub
cmp
les
pop
cltd
ja
mov
sbb
xchg
in
addr16
jns
xchg
xchg
adc
mov
std
jae
cmpsl
test
push
add
cltd
inc
cmpsb
jae
incb
pop
add
call
in
dec
rclw
imul
or
into
adc
mov
aaa
ljmp
push
loope
stc
xchg
test
add
jge
or
adc
in
mov
xor
dec
xor
gs
push
adc
sarl
mov
das
mov
testb
adc
ja
popa
scas
test
cmpsb
xor
imul
lock
pushf
push
jo
mov
mov
mov
cmp
mov
pop
loop
cmp
jl
stos
xchg
cmp
test
subb
stos
add
dec
movsb
dec
pop
dec
cmpsl
mov
sbb
dec
jp
insl
cmp
cli
mov
in
or
lods
insl
xchg
push
bound
push
loope
xchg
inc
mov
pusha
test
pop
loope
xor
sbb
test
adc
lahf
je
sbb
xlat
xor
push
inc
push
inc
insl
loop
pushf
repz
sbb
inc
or
mov
in
scas
and
jne
stos
imul
js
shr
inc
jno
rorl
pusha
cmpsb
pusha
add
subl
mov
jl
daa
xchg
je
jbe
mov
mov
stos
fwait
inc
adc
xorl
xor
shrl
mov
mov
mov
jb
movsl
cmpl
lret
out
pop
lock
adc
addl
inc
das
mov
mov
aas
orb
pop
roll
push
andl
leave
pop
push
hlt
popa
inc
rcll
lret
loopne
mov
insl
dec
cwtl
xor
decl
orl
pop
sbb
mov
jne
cwtl
or
je
lret
push
sar
or
push
cld
fsub
cmp
in
stc
adc
push
shlb
adc
sub
mov
xor
xchg
xchg
xchg
aam
int3
lret
dec
pop
out
xor
movsl
add
add
lds
xlat
mov
loope
icebp
xchg
lret
cmp
jbe
jmp
test
fistl
push
daa
jo
je
aaa
push
mov
push
push
sbb
push
rolb
cmp
jnp
adc
ja
movsb
lcall
outsl
in
and
std
outsb
mov
aam
pop
out
push
push
je
mov
push
xor
cmp
gs
push
lret
insb
sub
jnp
push
push
sahf
pushw
mov
adc
imul
mov
je
ja
test
fsubrs
data16
adc
stc
adc
scas
rcr
jbe
pop
aam
insb
popa
xor
jb
fcmovne
inc
mov
repz
cmp
xor
xchg
out
mov
arpl
ret
mov
test
aad
push
xchg
jge
lret
inc
int
decl
stos
add
dec
dec
lahf
lea
int3
stc
inc
jnp
mov
test
push
arpl
jno
fstpt
dec
in
sti
shl
mov
repz
xor
jle
ds
push
push
cmpsb
shrl
ja
cmp
loopne
pop
lret
push
push
jb
xor
cld
adc
dec
add
or
pop
and
mov
subl
adc
stos
ss
mov
movsl
mov
stos
loop
and
push
or
enter
scas
out
inc
lret
push
hlt
fdivl
int3
repz
or
repz
mov
dec
ret
inc
cmp
loopne
jb
inc
mov
rcrl
jmp
and
faddl
icebp
pop
sub
mov
in
adc
inc
lahf
adc
mov
ret
pop
loope
sbb
mov
inc
mov
sub
ss
cmp
mov
fistps
lods
imul
cmp
dec
dec
jnp
loopne
repz
orl
sub
repz
lods
aad
sub
aas
movsb
test
cmc
stos
pop
jg
dec
sub
adc
xlat
cmp
pop
and
sub
add
cmp
or
jecxz
mov
mov
jno
test
int
inc
das
test
jmp
mov
xlat
out
stc
jns
xlat
icebp
dec
sub
or
inc
jp
sub
mov
jl
cmp
mov
mov
dec
pop
xor
mov
incl
push
xor
push
sub
std
call
jne
cmc
sbb
dec
pop
sub
add
mov
popf
cmpsb
mov
xchg
pop
jne
into
mov
outsl
sbb
push
mov
in
push
pop
or
fistpll
sahf
mov
fnstcw
mov
outsb
or
jbe
ja
jbe
xchg
dec
jge
and
pop
cmp
test
out
push
or
inc
repnz
cmc
out
push
xchg
push
mov
mov
movsb
xor
push
cwtl
mov
dec
and
xchg
out
pushf
je
xlat
pop
movsl
das
push
push
rclb
dec
and
in
xchg
xchg
add
and
out
hlt
test
rcll
inc
mov
loope
stos
nop
mov
dec
pushf
sahf
xchg
xsaves
push
pushf
imul
pop
xorl
jae
mov
in
sbb
mov
lods
sbb
insl
mov
insb
mov
mov
sbb
js
cwtl
sub
sub
mov
fsub
inc
out
mov
xchg
repz
ljmp
adcb
imul
dec
xor
jo
jl
cmp
push
inc
dec
ljmp
push
ljmp
cld
stc
sbb
shrb
sbb
lock
clc
or
sbb
inc
pop
movsl
adc
mov
fiaddl
or
mov
mov
adc
das
testb
fsubrl
int
loop
push
dec
pop
das
loope
xor
lea
sub
out
rorb
xchg
sub
loopne
outsl
pop
mov
sub
mov
imul
xchg
ficomps
xor
rclb
jle
mov
outsb
out
sub
and
mov
repz
ficompl
fwait
lcall
movsl
push
test
cmp
or
popa
outsb
xor
or
push
push
mov
adc
push
dec
ret
fdivrl
mov
or
mov
sub
repz
test
insb
pushf
sub
sbb
push
rcrl
xlat
repz
addb
ja
std
sbb
call
pop
cmp
cmp
fs
and
xor
mov
pop
mov
mov
fmuls
or
sub
mov
dec
cmpsl
outsb
dec
insb
in
jne
push
jl
cmp
xor
push
or
test
xor
sbb
push
mov
mov
les
add
lahf
idivl
jbe
pop
add
stos
fidivs
imul
lcall
ret
xor
jle
daa
rcrl
xlat
dec
and
xorl
cs
fdivr
out
adc
sub
mov
ret
fwait
cld
push
cmp
insb
inc
pop
cs
nop
mov
sahf
xor
ret
in
lods
push
std
cltd
test
mov
loope
lcall
push
jle
mov
fcoms
xor
or
addr16
ret
fdivl
fcoml
mov
stos
mov
adc
xchg
mov
inc
inc
mov
add
and
testb
adcl
and
scas
xchg
dec
ret
aas
cs
popf
cmp
jne
pop
fcmovnu
mov
lar
aam
mul
shl
xor
xor
arpl
push
ljmp
add
inc
out
outsb
push
or
ljmp
inc
out
mov
out
addr16
and
mov
push
dec
insb
mov
data16
popf
and
int3
sbb
push
mov
push
clc
fisttpl
imul
mov
lods
lret
subl
lods
fists
aam
pop
xor
addr16
sub
xorb
xchg
sbb
idivb
push
add
int3
xor
dec
fbstp
out
push
fiadds
inc
je
movsl
cmp
stc
or
xor
push
xor
neg
fcoms
xchg
or
out
loope
xor
jb
mov
hlt
xchg
mov
cmpsb
mov
add
xlat
cs
jno
or
mov
lods
mov
inc
sbb
push
leave
sub
in
test
inc
add
dec
adc
jp
xchg
rorl
mov
adc
jae
jbe
mov
mov
iret
sbb
xor
in
arpl
js
repnz
incb
sahf
lret
repnz
sbb
xchg
faddl
movsb
dec
cmpb
stc
pop
movsb
imul
aas
dec
popl
sub
jl
mov
mov
fcomps
lret
jg
es
stos
mov
in
sbb
ljmp
lret
and
gs
fxch
int
mov
jle
sbb
test
pop
dec
mov
or
adc
add
pop
mov
loope
add
adc
mov
sbb
fsubr
push
inc
dec
cs
jecxz
loop
mov
mov
mov
subb
outsb
lret
sbb
mov
loope
add
sub
xchg
addl
scas
flds
cmp
repnz
xchg
mov
inc
cmp
sub
sahf
inc
lret
cmp
sar
outsl
inc
mov
cmpsl
sbb
sbb
and
mov
ds
push
adc
dec
lahf
cli
cmp
push
or
icebp
cltd
adcl
imul
adc
sub
imul
cltd
and
mov
xchg
mov
dec
ja
adc
clc
in
adc
mov
jns
mov
push
pop
addr16
sub
pop
scas
rcpps
sub
mov
ficoms
pop
ljmp
jnp,pt
add
sarl
cmp
cmc
and
pop
fnstenv
cmp
and
jno
test
popf
fwait
add
fdivl
cs
pop
in
insl
das
subl
sbb
jo
pop
fs
push
and
cmp
inc
leave
xchg
lahf
mov
ret
nop
mov
fcoms
sub
sahf
mov
cmpsb
lcall
ljmp
popa
loopne
xchg
pop
mov
jnp
mov
dec
out
repz
repnz
inc
les
xor
sub
enter
or
jp
pop
pop
cmp
in
jns
xor
repz
imul
repnz
adc
sbb
mov
mov
loopne
mov
pop
stc
je
loop
int
jmp
mov
add
movsl
sub
push
fs
and
xchg
jl
or
adc
mov
ljmp
push
shrl
xchg
ror
xchg
adc
sub
or
ljmp
jns
dec
sub
bound
pop
movsl
pop
pop
data16
xor
inc
sbb
stos
push
cli
in
rorb
and
aaa
xor
in
jb
push
aad
imul
jns
sbb
aaa
pusha
sbb
out
or
ds
or
out
mov
inc
stos
fistl
jmp
out
adc
mov
push
outsb
inc
vminps
sbb
adc
mov
cmp
xchg
sarl
daa
subl
jo
push
jmp
incl
stos
dec
pushf
and
mov
in
jnp
popa
cmpsl
adc
icebp
addr16
cli
add
jb
sbb
xor
push
pop
jg
mov
test
jmp
lahf
sub
mov
ret
inc
xchg
and
negb
inc
pop
mov
dec
jecxz
int3
mov
aaa
add
rclb
shll
lock
into
aam
push
arpl
mov
sbbb
fnstcw
sub
ficompl
jmp
movsb
xor
jne
add
pop
mov
orl
jmp
or
clc
xchg
cmp
aad
sti
mov
cmp
cmp
push
mov
dec
in
repz
fistpl
mov
push
aad
cmc
insl
into
ficoms
lcall
nop
cmpsb
adc
cmp
sub
aaa
push
sbb
add
jle
sub
inc
xchg
mov
xchg
outsl
mov
or
int
inc
and
pop
nop
dec
imull
mov
inc
gs
je
es
ja
cmp
mov
ret
stos
int3
cmpsb
clc
adc
inc
sbb
cli
cmp
mov
push
lcall
inc
mov
leave
icebp
add
or
mov
cmp
andl
loope
imul
stos
std
xor
xchg
xor
mov
ja
in
int
pop
mov
and
xorl
or
or
nop
mov
insl
mov
mov
popf
xchg
std
xor
dec
add
jb
dec
dec
mov
xchg
inc
outsl
das
adc
add
cs
sub
cli
push
dec
xchg
out
sbb
sub
nop
or
addr16
dec
mov
push
aas
xor
sub
add
add
cmp
ja
sub
test
in
mov
and
insb
jg
test
fcompp
inc
xchg
scas
xor
xlat
push
push
cmpsb
out
pop
mov
mov
jecxz
sub
cli
sbb
pop
xchg
mov
ja
push
stc
inc
test
sbb
inc
sub
in
int
in
sbb
adc
gs
adc
loopne
fs
sbb
in
inc
dec
lret
push
xchg
push
stos
inc
fldt
in
mov
pushl
add
mov
xor
adc
loope
jnp
enter
mov
stos
test
xchg
pop
mov
push
push
xchg
shlb
pop
sbb
pop
test
cmc
inc
stc
xchg
mov
ds
cwtl
loope
mov
inc
sbb
xlat
out
cwtl
inc
mov
insl
pop
ja
sub
push
xchg
cmpsb
cmp
xchg
mov
dec
fsubp
cs
divl
jo
ja
sbb
in
cmp
mov
xlat
cli
int
mov
fcoml
mov
dec
fiadds
fxch
sub
inc
daa
mov
cmp
mov
mov
jle
push
js
xchg
loope
sub
mov
cmp
pop
bound
notl
cmp
push
fadds
or
iret
fcomp
dec
jl
jae
inc
xor
mov
mov
imul
cmp
fwait
or
mov
shr
push
cmp
cmpsb
or
test
xchg
cmp
sbb
xchg
inc
push
repz
aas
cmp
int
daa
xchg
mov
ljmp
push
xor
iret
jb
pop
xchg
pop
lahf
insl
or
inc
add
push
inc
repnz
xchg
push
stos
je
add
cmp
frstor
push
add
sbb
hlt
jmp
and
jge
inc
sti
or
ja
mov
sub
das
sbb
sub
ficoms
int3
and
leave
mov
pusha
cmpsb
fildll
mov
xor
sub
outsl
push
in
insb
data16
lahf
pop
adc
adc
rol
fscale
andl
mov
push
dec
jb
sbb
mov
nop
test
fadd
ja
cmp
test
xor
iret
mov
cmp
mov
arpl
fstpt
sbb
fwait
push
pop
inc
mov
push
mov
inc
jbe
or
inc
cmpsb
cmp
stc
or
fadds
dec
push
stc
sub
adc
out
ss
mov
xlat
rorb
mov
daa
nop
cld
lods
add
push
data16
test
les
sahf
nop
cmpsl
stos
adc
jne
inc
dec
subl
xor
enter
cmp
cwtl
xchg
ja
mov
fwait
enter
stc
stos
mov
and
idivl
inc
jne
sbb
mov
push
stc
xchg
cmpl
movsb
xor
test
clc
xchg
outsl
inc
negl
push
in
outsb
dec
cmc
and
mulb
sbb
add
or
ja
and
loope
int3
mov
mov
shrb
mov
sub
add
mov
push
arpl
jbe
lods
sub
jle
stos
jg
ficoml
push
mov
movsb
jp
jecxz
add
fstps
ds
mul
scas
leave
xchg
cmp
fiaddl
daa
jmp
xor
mov
lock
inc
pop
rclb
mov
pop
out
mov
mov
popl
and
fsub
dec
cmpsl
adc
add
ljmp
ljmp
dec
xchg
jmp
outsl
hlt
pop
xchg
dec
or
std
xchg
pop
ret
fcoms
mov
sub
jno
cltd
movsb
adc
sub
pop
add
loope
lahf
into
jmp
mov
mov
adc
push
inc
mov
pop
repnz
cld
and
jecxz
xor
xchg
lret
mov
pop
movsb
inc
mov
pop
mov
lcall
and
cmp
ror
mov
ret
leave
add
mov
fs
mov
mov
dec
ret
adcl
stc
out
aas
clc
xor
insl
out
mov
into
and
clc
int
push
jo
or
repnz
mov
push
mov
mov
sub
lss
mov
push
or
mov
jp
pop
stos
leave
shrl
adc
lcall
adcb
js
push
mov
mov
sbbl
adc
divb
inc
arpl
ds
lea
adcb
movsl
setne
or
cmc
popf
iret
int
mov
mov
in
mov
mov
mov
icebp
fwait
push
scas
insl
push
cmc
adc
sbb
push
pop
cmp
aas
jno
xchg
push
out
cwtl
dec
lds
in
jle
adc
test
adc
scas
aad
rcrl
sub
sahf
adc
fldt
addb
add
mov
sub
js
ret
inc
pop
aad
mov
out
inc
cld
cmpb
mov
sbb
js
std
adc
xlat
pop
xorb
notb
ljmp
push
das
cs
pop
aas
popa
sub
loopne
or
inc
ret
call
pop
push
xor
adc
out
shl
cmc
sbb
rep
and
sahf
lods
xchg
inc
negb
repnz
dec
shlb
popa
push
rcrb
das
outsl
xchg
stos
mov
cmp
mov
xor
scas
lea
adc
scas
aas
or
mov
sahf
and
repnz
and
fwait
insl
repnz
lcall
test
cmp
dec
sti
lahf
mov
fbld
in
mov
movsb
ret
and
adc
xor
rcrl
out
in
popf
xor
xchg
push
jbe
movsl
or
rcll
ljmp
pop
or
mov
adc
insb
sti
bound
pop
or
or
in
dec
adc
rcrl
push
and
enter
mov
mov
and
ret
mov
std
icebp
lcall
sub
mov
xor
ret
sbb
adc
bound
mov
popf
xchg
js
sarb
hlt
repnz
sub
mov
lea
sbb
sbb
adc
or
add
mov
mov
test
sub
xchg
enter
shll
mov
mov
jmp
sub
andl
and
cwtl
xchg
mov
aad
pop
mov
and
addr16
test
scas
in
sub
jns
sbb
mov
adc
xor
subb
dec
out
xchg
inc
arpl
movsl
mov
mov
fldl
push
pxor
cwtl
pop
push
fsts
cmp
xor
or
int
imulb
fcmovnbe
pop
stc
jnp
imul
stos
xchg
mov
int3
test
sbb
mov
mov
enter
cmp
iret
or
ljmp
pop
es
cmp
pop
mov
push
loope
pop
add
mov
gs
test
inc
and
mov
ss
pop
or
mov
addr16
outsl
push
popa
pop
xchg
lods
ret
ljmp
loop
sub
pop
push
xchg
mov
lds
dec
bound
hlt
lds
xchg
shll
sbb
dec
mov
test
insb
dec
movsl
sub
cmp
push
mov
push
js
xor
rorb
add
lret
or
lock
jns
adc
lcall
jns
ss
ret
loopne
pop
jno
xlat
push
call
inc
pop
into
cmp
aam
xor
cltd
scas
stos
xchg
mov
sub
in
cmpsl
xchg
insl
cwtl
add
xchg
sarb
scas
dec
repz
xor
pop
shrb
insb
inc
dec
cmp
scas
push
jnp
out
adc
dec
mov
sub
and
adc
data16
imul
dec
outsb
aad
mov
and
jecxz
cwtl
mov
jl
fildll
ljmp
enter
imul
mov
or
mov
repz
mov
mov
cmp
enter
loope
mov
dec
loopne
jle
fadds
ret
outsl
ret
add
cmpsb
fidivl
rorb
cmovns
mov
sbb
inc
lcall
inc
ficoms
sbb
rorb
jns
lret
mov
adc
test
out
aas
xor
jecxz
dec
add
and
in
lods
jmp
cmp
pmaxub
add
lcall
pusha
push
lret
out
push
pop
repnz
ficomps
xor
jb
dec
addr16
sti
sbb
xchg
cmpsl
fsubs
outsl
stos
shlb
sbb
push
mov
mov
xchg
jae
mov
adc
dec
pop
subb
xchg
pop
rorl
push
jecxz
sbb
mov
or
aaa
push
sub
insb
and
pop
jl
dec
and
inc
add
cmp
nop
mov
mov
push
xor
sti
pop
sub
icebp
mov
jo
adc
jp
mov
test
dec
pop
push
mov
and
lods
pushf
mov
popf
dec
mov
test
mov
fdivrs
iret
mov
pop
and
jbe
jp
or
add
out
mov
gs
or
adc
inc
es
movsl
imul
mov
xchg
addb
popf
pop
stos
fs
fisttpll
in
lret
jno
lret
cltd
inc
aam
lret
data16
fdivl
ljmp
sbb
mov
in
push
test
mov
jns
out
mov
mov
pop
and
repz
psraw
stos
jb
out
cs
bound
insl
outsb
xor
jg
test
xor
test
testl
lret
jns
jp
and
mov
stos
xchg
fwait
and
mov
xchg
fmull
and
loopne
ret
movsl
sub
add
scas
add
xor
aad
add
pushf
mov
ljmp
xor
jmp
js
pop
cli
ljmp
adc
cmpsl
mov
in
adcb
cmp
push
inc
je
push
movsb
xlat
mov
stc
adc
push
lds
imul
jne
sub
jg
shrl
and
arpl
push
clc
les
and
adc
pop
aad
or
inc
imul
in
mov
outsb
mov
xchg
clc
mov
add
in
int
mov
insl
or
jae
fldcw
stc
fs
mov
xchg
mov
and
push
fndisi(8087
imul
pop
jns
sbb
mov
cmp
xchg
pushf
das
add
sbb
push
pushf
jnp
jae
jge
inc
push
aad
roll
mov
in
iret
push
sub
push
cld
dec
imulb
inc
mov
or
adcb
aam
add
lock
push
shlb
or
call
mov
jne
pop
and
dec
negb
into
cmp
fwait
lock
mov
mov
inc
lock
push
dec
xchg
mov
int
mov
dec
adc
mov
leave
mov
mov
sti
dec
lahf
ja
movsb
movsb
loop
lock
sbb
sub
outsl
dec
push
inc
lods
mov
push
int3
cmpsb
outsb
push
add
jp
and
mov
clc
cmp
mov
jecxz
adc
push
dec
jle
add
jne
xor
bound
nop
mov
scas
mov
ss
lock
pop
mov
push
sbb
push
sub
rcl
or
mov
or
push
int3
imul
sub
mov
mov
call
inc
pop
sub
cmpsl
imul
lcall
mov
dec
mov
fildl
rclb
sbb
inc
and
cld
insb
adc
xor
lods
xor
sub
or
mov
sub
test
movsb
ds
xor
cmp
shl
push
cmp
lock
mov
adc
and
inc
mov
dec
or
rcr
adc
or
loopne
push
push
pmullw
dec
int
jl
repnz
mov
jmp
lcall
outsb
fcoms
imul
shll
aaa
addr16
rorl
mov
ss
rcr
sub
imul
xchg
enter
push
xlat
inc
fs
bound
pop
mov
jmp
pop
loop
mov
or
jns
out
pop
xchg
nopl
std
xor
and
cmpsl
shlb
dec
pop
aad
scas
sub
sbb
dec
pop
loopne
bound
rolb
cld
push
sub
movsb
lret
enter
call
out
dec
or
movsl
xor
loopne
jae
setg
inc
or
ds
outsl
and
jge
out
cld
sub
into
cmp
mov
cmp
sahf
repnz
loopne
ljmp
push
pusha
loop
out
fsubrl
jae
movsl
jp
lds
sarl
sub
cwtl
in
mov
cmc
sbb
jbe
test
std
ja
lret
inc
lret
imul
test
dec
and
imul
cmp
stc
jo
sbb
imul
pop
push
xchg
clc
cmpsl
fimuls
scas
lret
jne
mov
scas
push
cld
push
push
das
cld
push
push
or
mov
xchg
call
xchg
xchg
nop
cmpsl
inc
inc
lock
jb
out
in
int
divb
enter
cmovb
call
mov
cld
adc
pushf
clc
push
test
jecxz
mov
push
mov
dec
aad
inc
push
push
imul
push
and
aaa
clc
idivb
mov
xchg
pop
mov
push
bound
xchg
shlb
jmp
pop
outsl
dec
jmp
shl
pop
mov
lahf
stos
or
mov
mov
pusha
sbb
cmp
mov
stos
test
push
adc
andb
mov
add
out
push
cmp
loope
adc
mov
mov
cld
int3
enter
push
mov
adc
shl
adc
lret
dec
pop
js
mov
inc
lock
xor
or
sub
push
enter
insl
test
divl
push
add
sti
in
sti
mov
addr16
fnstcw
ss
das
mov
imul
mov
adc
mov
mov
inc
mov
rorl
dec
xchg
xchg
imul
push
aam
cld
lahf
pop
pop
aam
mov
jmp
in
clc
nop
xor
mov
cmp
pop
cmp
and
lods
js
jle
jl
push
xor
mov
jo
cmpsb
test
fst
push
in
push
call
test
mov
aam
pusha
cmc
push
sub
mov
cmp
xchg
push
into
das
adc
cmp
aad
pop
ss
add
mov
mov
stc
mov
test
in
push
fldt
and
push
dec
dec
add
mov
stos
mov
ss
vxorps
or
jge
pop
sbb
stos
jo
dec
dec
mov
loop
mov
jmp
out
and
je
sub
shrl
stos
xor
aas
adc
lods
dec
push
push
mov
pop
fists
adc
cmpsl
imul
test
pop
xor
or
testl
mov
mov
mov
hlt
rcrl
mov
das
jle
add
pop
rcrl
adc
mov
jle
jns
dec
mov
adc
mov
mov
inc
orl
jge
lret
pop
or
mov
aam
lcall
dec
jge
xchg
xor
out
sbb
mov
fs
xor
jo
jnp
push
sub
or
mov
push
lret
stos
nop
lds
repnz
or
stc
ja
jae
stc
or
pop
iret
xor
lret
inc
repnz
fwait
mov
adc
pop
push
mov
cld
dec
mov
lret
push
cmp
cltd
mov
out
mov
dec
ret
andb
ljmp
imul
ret
xor
lret
xor
sbb
mov
pop
jle
and
mov
loope
cli
rcl
xchg
repz
pusha
jno
pop
jae
jo
add
push
inc
adc
leave
xchg
sti
adc
mov
lcall
sbb
sub
js
xchg
xchg
pop
rcrb
xor
nop
jne
imul
lods
sbb
inc
cmpsb
arpl
dec
or
pmuludq
mov
add
lret
mov
push
mov
leave
outsb
lds
jno
std
dec
mov
mov
dec
sub
xchg
adc
lahf
mov
fildl
data16
xor
xor
test
and
call
shll
mov
test
lcall
lret
out
sbb
loop
icebp
cmp
cmp
jns
and
test
ret
lock
xchg
outsl
popa
xchg
xchg
out
incb
xchg
scas
out
cltd
nop
es
iret
adc
movsl
jl
test
mov
xchg
mov
pop
dec
push
xchg
pop
cmpsb
jp
push
cmpsb
imul
adc
pop
sbb
inc
imul
inc
cli
in
js
pop
mov
out
pop
sbb
test
inc
imul
dec
inc
js
mov
lods
std
jnp
out
xor
mov
jne
push
lock
es
fisttpll
pushf
adc
jmp
test
cltd
xor
out
fcom
xor
pushf
out
jne
repz
jae
ret
mov
mov
mov
test
fcomp
dec
fbld
aaa
inc
xchg
mov
adc
shlb
int3
mov
adc
dec
movsb
fprem
add
pop
int
cltd
iret
sub
sahf
insl
xor
cmpsb
dec
mov
outsb
lods
loope
mov
adc
dec
or
push
mov
xchg
add
movsl
bound
scas
cwtl
inc
out
pushf
mov
xchg
push
or
jmp
cmp
xchg
ljmp
aad
je
inc
xor
lods
sub
pushl
cmpsl
shrw
add
aas
data16
negl
lea
loopne
mov
lret
loope
out
cmp
sbb
cmp
in
in
sub
arpl
xor
adc
cmc
push
sbb
in
iret
cmp
into
sahf
ret
mov
lret
frstor
out
sahf
adc
mov
test
sbb
hlt
push
fcmovnbe
xorb
inc
out
jmp
lret
je
mov
ret
cmpsb
dec
ss
lds
pop
xchg
addr16
sub
xchg
scas
lods
add
jnp
leave
mov
jno
sub
ficoms
clc
mov
dec
mul
xor
jbe
insb
clc
pop
ljmp
xchg
xchg
jb
cmp
int3
dec
add
xor
pop
jnp
je
mov
ret
push
xlat
shlb
adc
xor
cli
cmp
dec
mov
addr16
test
push
fldcw
push
add
pop
lock
les
inc
mov
jmp
mov
mov
adc
mov
out
test
mov
arpl
fists
dec
mov
lea
pop
pop
lock
xchg
add
xchg
movsl
dec
ret
popf
mov
dec
jg
mov
mov
add
xlat
push
cmp
jnp
cmp
xor
jne
subb
xchg
or
xchg
mov
jle
imul
xchg
hlt
xor
pop
sub
enter
sbb
dec
repz
fs
icebp
xchg
lea
std
push
inc
cwtl
sbb
cltd
scas
and
xorb
insl
js
insl
add
adc
outsl
mov
mov
pop
inc
push
xchg
int3
addl
fildll
add
jno
out
or
ss
gs
aad
mov
int
cmp
jno
in
jb
decb
pop
sub
aaa
xchg
adc
enter
cmpl
arpl
ds
xchg
xor
jbe
pop
xchg
jmp
cmp
add
adc
and
shll
rol
into
xlat
cld
ja
mov
cld
int
shlb
int3
push
inc
sub
mov
xchg
daa
sahf
stos
pop
out
fwait
loope
fidivrl
sbb
sti
jle
mov
cmp
es
cli
ja
dec
dec
lret
lcall
mov
xor
movsb
jns
and
out
test
aas
push
add
lea
mov
stos
xor
test
jo
add
or
mov
cld
cmp
mov
out
pushf
das
test
lods
dec
xchg
jl
clc
outsb
xor
cmp
mov
out
iret
repz
iret
clc
addr16
pushw
add
jmp
pop
or
stos
repnz
out
aam
add
xchg
mov
cltd
fmull
imul
rolb
mov
xor
sbb
mull
fdivrl
add
jo
mov
dec
dec
ljmp
pop
mov
ret
pop
cli
pop
adc
sub
cmp
push
adc
and
stos
enter
xchg
pop
popf
mov
pop
mov
loope
aaa
jmp
lds
push
sbb
hlt
jb
or
mov
sbb
dec
cmpsb
cmp
lods
and
shrb
cmp
aad
pushf
jp
in
xor
in
pop
pusha
lods
dec
cmc
inc
jp
push
nopl
shll
sub
lods
addl
dec
mov
push
out
jns
jge
and
dec
movsb
shrb
pop
jle
icebp
lods
fidivl
push
inc
lods
leave
test
dec
pop
xor
imul
aam
and
jle
shll
stc
cmp
cld
lret
test
aaa
and
mov
stos
push
fnstenv
cmp
ss
ret
jno
aad
and
sbb
shl
daa
push
bound
mov
cmp
cmpsb
loop
ljmp
rol
jo
mov
rcrb
mov
mov
and
sub
xor
add
in
fwait
inc
jns
or
out
es
rclb
lcall
loope
pop
cmc
adc
dec
cs
mov
push
andb
pop
or
into
fidivrs
add
xorl
dec
insb
mov
sub
out
dec
sbb
dec
fldenv
and
insl
jmp
sbb
cld
clc
jl
loop
push
out
les
jo
dec
aad
jnp
repnz
jp
aad
pop
mov
or
insl
dec
in
sub
clc
mov
mov
pop
or
push
andl
std
pop
dec
push
nop
jle
popa
jecxz
cmp
cmp
xor
sub
cmc
lods
jl
inc
popf
in
cmp
xchg
fcompp
xor
lods
popl
pushf
hlt
inc
mov
stos
fdivr
push
xchg
sarb
arpl
and
jns
sub
cld
idivb
mov
mulb
sub
or
xchg
dec
cmp
aad
idivl
xor
sub
mov
push
xchg
aam
inc
shll
lcall
adc
sbb
jle
xchg
inc
mov
gs
sahf
fcomi
jns
ror
ret
test
out
push
pop
in
hlt
fs
mov
fdivrl
pop
in
cltd
sti
outsb
push
data16
call
inc
inc
daa
into
mov
xor
push
jge
or
add
lods
movsb
add
inc
fldt
stos
xor
arpl
das
sub
in
data16
jge
pop
mov
inc
pushf
mov
scas
pop
pop
cld
dec
out
sub
repz
jmp
mov
jo
jne
in
pop
push
dec
or
xchg
push
cmp
lock
sbb
jo
jecxz
push
in
push
mov
and
adc
test
cmpsl
jb
les
subb
aam
js
ljmp
and
ffree
nop
arpl
lret
push
or
test
and
mov
xchg
xchg
cltd
or
mov
bnd
lods
fdivs
mov
sbbb
or
je
out
add
mov
test
mov
cwtl
in
daa
fisttpll
sbb
mov
xor
xchg
dec
mov
fldcw
mov
xchg
jno
pusha
xor
mov
ror
ret
xlat
and
xchg
outsl
out
push
add
ret
outsl
lds
fnsave
add
xchg
jns
cmp
repz
mov
jg
fmuls
mov
or
xor
rcrb
push
mov
cwtl
ss
push
repz
dec
lret
les
fiaddl
add
sti
xchg
sbb
mov
outsl
sub
add
and
sbb
or
adc
or
cli
cmp
mov
push
and
rcr
xor
test
ss
push
notb
jg
push
or
lret
dec
aam
add
xchg
push
mov
fidivrl
lea
mov
repz
icebp
sub
lds
movl
into
adc
cld
daa
enter
orb
ret
dec
xchg
cmpsl
sbb
and
xchg
repnz
jg
and
xlat
jb
or
lock
xchg
pop
mov
and
xchg
aad
sbbb
and
mov
ss
dec
push
or
mov
popf
pop
hlt
orl
add
jb
lcall
lods
shlb
xor
pop
test
fsubr
movsb
lret
jle
dec
inc
and
int3
or
addr16
adc
or
dec
loopne
push
sub
xchg
cmpsb
jno
aad
mov
xchg
xchg
andb
or
sub
in
mov
lods
add
imul
fstpl
bound
adcb
sbb
xchg
orl
sub
clc
cmp
int
cmp
inc
mov
out
pop
adc
push
adc
pop
mov
in
test
sub
jl
xor
out
jo
lods
cmp
adc
mov
mov
scas
data16
insb
add
movsb
loopne
or
outsb
popf
mov
and
mov
repnz
cmp
call
pop
mov
adc
ljmp
push
stc
adc
and
cmpl
cld
push
cmp
add
cmp
adc
in
call
es
loopne
push
sar
in
and
sub
mov
mov
dec
dec
cmpsb
scas
and
cmpsl
dec
call
out
dec
jne
nop
stc
sahf
mov
mov
mov
outsl
sbbl
fmull
shrb
mov
adc
jno
aam
popa
mov
inc
push
leave
test
adc
aas
xorb
xchg
jb
fs
pusha
dec
sti
loope
adc
mov
and
aas
popa
mov
adc
cmp
mov
mov
inc
mov
ficompl
leave
repz
ds
int
jne
nop
push
js
inc
mov
movsl
ds
outsl
jbe
jo
dec
and
rcrb
mov
mov
out
addr16
subb
add
dec
adc
mov
xchg
inc
xchg
jbe
jae,pn
jne
mov
xor
xchg
pop
pusha
shll
push
pop
dec
ret
pop
push
push
add
imul
test
lahf
dec
aam
add
xorl
enter
into
xchg
adc
adc
outsb
cmp
and
scas
sarl
inc
dec
sub
push
nop
cs
or
mov
cmp
cmc
subb
jnp
cmp
push
sub
arpl
or
push
pop
lds
dec
xchg
repz
xchg
int
mov
sbb
cmpsl
mov
push
in
test
mov
sub
mov
pushf
cmp
mov
popa
add
movsb
js
add
jl
push
pop
dec
xor
sbb
int
xchg
outsl
fisttpll
int
xor
aaa
lcall
lods
and
lcall
push
xor
inc
sub
push
cmp
loopne
lcall
lret
adc
int
mov
ss
mov
cs
mov
mov
push
add
mul
add
pslld
adc
iret
xor
xor
jo
js
dec
add
mov
push
int
out
jge
inc
enter
lret
push
mov
es
push
push
scas
ficoml
jmp
arpl
fcompl
mov
sub
jne
addr16
mov
or
lcall
and
into
mov
xchg
push
jg
daa
pop
ljmp
mov
cmp
loop
insb
inc
lret
dec
bound
dec
bound
dec
xor
push
or
shrl
push
ret
mov
ja
cmp
sbb
inc
push
fadds
inc
adc
addr16
aaa
mov
shr
pop
sbb
jl
sbb
xor
aas
dec
dec
aaa
mov
insl
jle
ljmp
jp
add
or
mov
or
push
dec
or
stos
jnp
xchg
push
pop
rorb
subl
adc
aad
xor
jnp
dec
dec
sub
xchg
jo
mov
mov
cmp
or
push
cli
or
xor
ss
inc
push
cwtl
int
in
xchg
inc
test
mov
ret
pop
adc
cmpb
sub
jno
inc
jl
adc
dec
push
fs
xchg
pusha
iret
idivb
cmp
and
in
sbb
pop
dec
adc
in
mov
push
arpl
mov
gs
in
and
pop
popa
scas
int
mov
fs
lcall
aaa
lcall
push
enter
loopne
dec
mov
or
xchg
push
sub
jp
cmc
ljmp
xchg
mov
pop
xchg
pop
mov
hlt
and
dec
xor
pop
sti
and
jg
nop
push
subb
movsl
sub
lret
mov
xchg
cmp
scas
pop
cltd
in
jnp
push
arpl
dec
mov
sahf
hlt
cmp
xor
data16
or
data16
int3
cmpsb
cmp
cmpsb
pusha
rcrl
pop
cmp
or
lret
jbe
xor
mov
pop
inc
test
rorl
in
xchg
out
cmp
jae
sti
sarb
pop
add
imul
xchg
and
sub
fdivs
imull
idiv
mov
or
out
scas
jno
or
sub
call
aaa
fdivrl
outsl
enter
daa
jg
data16
mov
sub
lods
and
push
mov
mov
rcrl
sahf
data16
cmp
sbb
jge
insb
xchg
in
popa
mov
and
inc
pop
sub
inc
and
sub
or
add
add
sub
jne
sbbl
nop
pop
jo
cs
sbb
aas
bound
or
xchg
incb
add
push
aad
cwtl
inc
pop
xor
jnp
jnp
push
xchg
mov
mov
inc
dec
fists
push
push
shrb
xor
std
xlat
sbb
push
popa
ficoml
jnp
xchg
xchg
mov
jb
adc
xchg
and
sub
sahf
pusha
jmp
mov
aas
inc
jge
pop
xlat
roll
fildll
leave
jne
mov
test
cmp
sarb
shrb
mov
cwtl
or
xor
xchg
pop
dec
rolb
xor
add
pop
lds
mov
std
xchg
shlb
mov
test
add
or
inc
mov
sub
cmp
xor
adc
xor
shll
mov
scas
jmp
in
jmp
xlat
mov
inc
cmpsb
sar
jb
push
mov
data16
sub
adc
or
scas
test
add
sarl
adc
ss
add
xchg
cmpsb
push
scas
and
jp
and
cmp
dec
adc
mov
aaa
push
data16
cmpsl
movsb
aaa
add
rol
mov
xor
bound
cmp
icebp
dec
lcall
lahf
in
outsl
push
dec
stc
dec
andl
jg
pusha
dec
mov
iret
repz
push
xor
aad
jmp
mov
or
test
cltd
cmp
dec
dec
imul
mov
or
cmp
fildll
sub
push
push
or
or
loope
iret
icebp
pop
dec
and
outsb
jne
xchg
test
into
pop
push
sbb
loopne
ret
jae
pop
or
mov
push
lret
mov
pop
mov
xchg
sub
cwtl
iret
dec
xor
out
or
sub
sbb
lret
pushl
xor
adc
arpl
imul
fbld
sbb
test
imul
sahf
arpl
loopne
popf
push
pop
sub
jge
pop
cmc
lods
loop
stos
sbb
xchg
add
mov
xchg
das
inc
sub
xchg
fst
hlt
pushf
hlt
movsb
aad
fnsave
loope
aad
push
pushl
fpatan
or
ret
jle
push
loopne
call
mov
leave
xchg
les
pop
enter
fdivl
loop
xchg
or
inc
xor
addl
mov
in
cli
stos
or
mov
fbld
mov
stos
in
lahf
fstl
and
sbb
insl
add
pusha
or
insb
xor
cmc
and
pusha
mov
rcr
hlt
or
popf
mov
jmp
lock
sbb
cli
in
fsub
gs
xchg
mov
mov
mov
movsl
jns
out
add
mov
loopne
push
mov
es
cltd
xor
adc
adc
movsl
sbb
sub
repz
and
add
pop
out
dec
cmp
adc
adc
and
divl
mov
in
or
xchg
sbb
mov
lods
stos
and
or
and
jb
or
sub
and
outsl
cltd
imul
adc
imul
adc
lds
stc
scas
rclb
pop
and
daa
out
dec
pop
add
mov
xor
pop
or
xchg
adcl
xor
nop
ja
adc
bound
faddl
cmp
fmuls
push
xchg
inc
aaa
inc
adc
stos
lods
dec
loop
inc
testl
push
in
data16
xchg
xor
cmp
popf
and
mov
repnz
insb
fistps
mov
push
in
add
xchg
add
lock
jnp
test
lcall
jno
lods
dec
adc
lea
in
das
xchg
pusha
imul
inc
arpl
jo
lahf
mov
mov
xor
cmc
xchg
imul
push
push
out
inc
cld
cs
or
sub
stc
xor
fidivs
add
xor
adc
jnp
xor
ror
xor
inc
jbe
xchg
or
dec
xor
aaa
sbb
jnp
add
aam
pop
adc
adc
pop
inc
int
imul
xorl
imul
aam
sahf
loope
shrb
mov
fadds
aam
sub
mov
mov
aad
imul
mov
dec
pop
push
fnsave
inc
fs
pop
cmpb
jno
fildll
insl
add
adc
pop
mov
and
push
dec
add
shll
jle
in
aad
inc
mov
pop
into
dec
lahf
jg
cmpb
inc
adc
mov
push
xchg
jecxz
sub
adc
mov
mov
and
cmpb
out
fwait
lock
std
roll
sbb
repnz
cmp
xchg
lods
adc
and
dec
cmp
cmp
mov
rcr
inc
es
call
sub
mov
repnz
loopne
inc
jo
aaa
es
push
or
sbb
xchg
add
cli
jge
dec
repnz
popf
sub
jbe
ja
test
int
lods
pop
xchg
mov
push
xlat
mov
shlb
add
imul
mov
in
xor
gs
or
jge
lret
loop
and
ret
in
add
adcb
aaa
adc
cmpsb
stc
sbb
packuswb
pusha
imul
sub
mov
xlat
lahf
mov
mov
loopne
shrl
add
xchg
pop
pmuludq
push
adc
or
mov
mov
xchg
cmp
mov
idivb
push
mov
pop
sbb
maskmovq
aaa
fstpl
mov
push
enter
sbb
xlat
lods
mov
adc
push
in
in
lods
cmp
xor
sbbb
mov
icebp
jl
out
outsl
mov
push
adc
das
add
adc
pop
mov
jae
pushf
sbb
mov
aas
push
lret
ja
push
jp
pop
and
adc
out
pop
test
call
stos
xchg
ljmp
outsl
insl
mov
test
jae
push
test
mov
addr16
xchg
mov
jb
outsl
sbb
fistps
movb
push
inc
imul
jnp
add
mov
mov
mov
stos
xchg
mov
sbb
mov
xor
xchg
sub
jle
xchg
es
add
adc
ss
movsb
rcr
das
inc
lods
push
pop
pop
out
decb
sti
lods
cmp
mov
xorb
clc
sub
lret
jo
jne
and
ljmp
add
add
loope
rorb
or
ljmp
xchg
add
out
adc
outsl
jg
xchg
sti
add
dec
cmp
es
icebp
mov
xchg
xchg
aaa
or
xor
testl
push
iret
adc
push
push
push
int
mov
popf
in
ret
dec
cmp
addr16
stc
mov
pop
ljmp
cmp
jns
int
out
fldl
mov
gs
inc
mov
pop
mov
inc
pop
mull
inc
int3
inc
xchg
and
adc
rolb
in
cld
push
inc
loopne
xor
push
fadd
cmp
add
jp
pop
out
or
mov
je
lods
ja
cs
nop
sub
dec
or
leave
adc
fstpt
jge
cmc
cs
pop
mov
mov
out
leave
jns
in
and
dec
jns
shr
pop
cmp
push
mov
adc
imul
cli
pop
sub
enter
iret
pop
xchg
mov
sti
fiadds
sbb
sub
and
ds
stos
lahf
or
scas
cmp
and
subb
jne
out
pop
ficoms
or
push
sahf
mov
or
lret
test
mov
mov
hlt
mov
inc
bound
push
mov
adc
push
push
test
stos
nop
sub
mov
test
sbb
push
jmp
ja
iret
insb
js
movsl
mov
jae
lret
mov
aas
jge
pop
insb
rorb
in
aam
pop
movzbl
fistpll
dec
jmp
out
push
jnp
adc
xchg
hlt
adc
mov
push
sub
pop
lahf
mov
cmpsl
lcall
jge
mov
rorl
ds
or
ret
ds
clc
adc
insb
mov
loop
pop
cmpsb
test
and
mov
out
lods
cs
sbbl
popf
stos
push
lds
sub
fdivrs
mov
lcall
pop
fcomip
loop
mov
jne
dec
mov
lods
repnz
add
jb
sbb
mov
ds
in
adc
cmp
mov
imul
ret
ja
pusha
popa
dec
xor
es
movsl
mov
js
loopne
mov
rolb
fsubl
mov
add
mov
cltd
cmp
lea
scas
out
les
in
inc
jg
adc
mov
xor
or
and
fidivrl
pushf
aam
xlat
jmp
cmp
xlat
fnstenv
test
jo
dec
mov
mov
lods
xchg
movsl
sub
push
mov
testb
outsb
int3
fisttpll
fimuls
fucomip
ljmp
xor
mov
pop
mov
aas
stos
push
jle
lret
sub
cli
std
icebp
sub
lock
and
mov
xchg
or
ss
in
negl
loop
sbb
icebp
ret
repnz
inc
push
or
addr16
mov
pushf
push
pop
dec
outsb
pop
mov
adc
jns
adc
out
inc
push
aad
cmp
and
dec
dec
adc
sbb
into
les
fiadds
push
aaa
lahf
lahf
into
loop
loope
and
mov
lods
inc
sbb
push
fimull
adc
xorb
lret
adc
jge
out
rorb
jl
xlat
pop
pop
loopne
sbb
xchg
sbb
xor
dec
mov
aaa
je
aas
push
fdivrl
out
dec
jg
jbe
inc
insb
lret
repnz
pop
mov
add
sahf
daa
dec
cmovp
fwait
scas
push
dec
out
xchg
or
scas
xchg
push
add
lret
bound
loopne
sbb
popf
fisubl
imul
push
addb
mov
pop
adc
popf
enter
mov
push
mov
cld
or
inc
inc
jnp
jge
pusha
xor
xor
mov
jb
sbb
adc
lods
mov
addr16
int3
fildl
inc
shrl
loopne
dec
lds
dec
lcall
sbb
cmovp
cmp
dec
fadd
push
lret
outsb
fcoml
mov
push
hlt
aas
inc
pusha
rorl
jo
sub
aas
icebp
imul
add
adc
movsl
pop
leave
pop
pop
std
cmpsl
fdiv
iret
repnz
lock
lock
xchg
mov
test
sbb
data16
adc
ja
mov
fiadds
xorl
clc
sbb
iret
adcb
add
sahf
scas
sub
ret
jb
filds
inc
pop
mov
enter
fadd
jno
or
push
test
pop
insl
xchg
inc
subb
add
es
popa
insl
or
mov
pop
arpl
sbb
or
mov
pop
jge
das
mov
adcl
and
lahf
movsl
pop
lahf
inc
pop
sub
cltd
cmpsb
stos
out
jbe
pop
stos
mov
fwait
sub
push
and
xor
test
scas
rcll
push
bound
push
xchg
out
ret
sti
sti
and
cmpsb
mov
inc
xchg
mov
jns
inc
pop
rcl
or
int
pop
and
into
lock
dec
xchg
and
in
or
push
incb
out
inc
xor
push
adc
xor
ret
mov
jo
mov
sahf
sub
and
fdivl
lahf
xlat
jecxz
imul
test
or
repnz
ret
popf
or
cmpsb
fsubrs
cltd
fnstcw
jge
mov
push
imul
push
mov
std
add
jae
lods
hlt
push
sbb
movsb
dec
or
add
movb
adcl
cmp
addr16
stos
adc
dec
lods
mov
fwait
cmp
inc
fwait
mov
xor
jle
inc
push
dec
ljmp
stos
mov
jae
enter
loopne
xchg
inc
shl
cmpsl
mov
insb
mov
cmpsb
out
sbb
push
and
div
iret
loope
shrb
fmuls
or
adc
add
xchg
testl
scas
psllw
xchg
mov
lock
test
or
mov
jae
mov
dec
pop
jl
jns
scas
ss
insl
lods
dec
insl
mov
movsb
adcb
ja
push
stos
jno
data16
lods
iret
popf
jp
jnp
dec
lods
add
ds
add
std
adc
pop
icebp
push
out
repz
inc
fisubs
xchg
or
loope
and
lods
aas
mov
jb
sbb
dec
test
lcall
test
je
mov
ret
ds
jecxz
pop
pop
xor
test
and
cmc
sbb
outsl
jmp
int3
lods
jns
mov
inc
mov
aam
call
dec
and
xchg
clc
dec
idivb
stc
das
jl
sub
hlt
xchg
das
push
out
les
je
jae
sbb
mov
mov
dec
push
push
cmp
dec
stos
fwait
pop
and
mov
fadd
call
add
mov
sub
ret
cld
dec
xor
int
clc
ljmp
repnz
dec
lret
jecxz
sub
popa
push
jecxz
sbb
mov
sub
cwtl
jb
mov
adc
cmp
push
les
cmp
cmpsl
pop
loopne
lahf
ret
out
aam
push
push
mov
dec
dec
inc
lret
aam
movl
push
loopne
xchg
lods
movl
out
mov
in
movsb
leave
bound
mov
sbb
cld
and
adc
jbe
cmp
aas
mov
jp
outsb
jb
lock
lahf
fsubrs
js
mov
int
push
popf
into
xor
test
mov
pushf
in
test
sbb
cli
ljmp
gs
or
add
mov
fmulp
mov
dec
jmp
or
mov
inc
into
jmp
loopne
xchg
pushf
cmp
push
divl
or
mov
lea
inc
dec
xchg
outsb
nop
xlat
imul
lds
mov
ss
cld
inc
out
mov
push
daa
adc
rclb
inc
jae
adcb
lahf
xlat
jb
loope
les
outsl
and
shr
shl
data16
xor
test
fisttps
fdivrs
and
pusha
lret
mov
pop
dec
sbb
lret
jecxz
xchg
popf
or
call
and
stos
rclb
add
mov
es
shll
fisubl
sbb
add
sub
xor
mov
loop
mov
fwait
mov
pop
fadd
push
push
mov
and
outsb
fcompl
push
sub
or
pop
cmp
insb
adcl
sbbb
outsb
pushf
pop
sbb
sub
mov
xor
or
data16
inc
pop
or
and
mov
inc
loop
jecxz
push
sbb
mov
je
dec
test
shll
jnp
push
push
shrl
rcrb
test
mov
add
mov
mov
out
sahf
push
inc
mov
aam
rolb
subl
sarl
mov
outsl
add
adc
mov
mov
lds
pop
push
add
stc
das
insb
push
mov
fistl
sub
out
push
sbb
rol
or
add
jl
daa
lret
les
insl
loopne
dec
mov
and
pop
leave
mov
test
das
pop
xchg
std
inc
adc
sbb
dec
sub
jle
adc
hlt
inc
jae
sbb
imul
sbb
subl
cs
sarl
or
insb
es
loope
xchg
std
cltd
xlat
xor
cs
mov
int
xchg
push
cmp
jl
xlat
sbb
imul
sub
lret
stos
xchg
jno
mov
loope
or
in
rcll
test
out
addr16
push
xor
int3
adc
cmp
aad
push
mov
lahf
enter
add
data16
jmp
test
cmp
inc
shlb
loop
loope
jp
lahf
dec
imul
outsb
mov
invd
sbb
inc
sbb
movsl
cs
fstpt
sbb
sub
pop
daa
dec
stos
mov
cli
inc
std
fwait
xchg
pop
dec
lret
dec
pop
in
cwtl
mov
insl
xchg
in
inc
add
popw
jno
test
xchg
mov
and
add
and
repz
sbb
pop
fiaddl
cmp
enter
pop
adc
sbb
push
xor
inc
xchg
xor
pop
sub
es
fwait
ret
and
mov
sbb
jl
repz
pop
pop
inc
xchg
scas
add
fstpt
xor
int
out
mov
inc
mov
movsl
lcall
jb
das
adc
mov
dec
mov
push
cmp
scas
inc
sbbb
jae
lcall
add
push
gs
dec
pop
jmp
sti
mov
sub
adc
out
jbe,pn
sub
or
adc
xor
mov
outsl
ljmp
mov
adc
test
je
loop
ljmp
jmp
data16
stos
mov
dec
sub
and
jecxz
aas
cmp
lcall
push
outsl
cmp
loopne
subl
jmp
mov
out
sti
movsl
dec
mov
and
cmpsb
outsl
add
xchg
push
stos
sub
and
aas
xchg
ss
mov
aaa
mov
adc
mov
aaa
test
jecxz
cld
sbb
xor
test
jmp
add
je
pop
cmovb
mov
adc
mov
inc
imul
adc
push
mov
je
xor
movsb
int
test
and
inc
mov
iret
inc
push
push
cld
dec
xchg
xchg
xchg
repnz
jmp
sub
movsl
push
cmp
push
inc
shrl
sarl
push
mov
in
mov
inc
rorb
inc
xchg
cmpl
loope
or
sbb
into
pop
ljmp
and
out
xlat
out
stos
push
dec
nop
add
stos
stos
mov
hlt
fcoms
and
mov
test
jl
popa
dec
cli
pop
xor
stos
xchg
add
js
sbb
addr16
and
push
daa
repz
pop
mov
adc
and
faddl
xchg
shlb
lods
andnps
pop
adc
push
and
sahf
mov
insb
jae
ror
adc
int3
dec
sarb
pop
roll
pusha
jae
movsb
popa
dec
xchg
push
dec
out
mov
mov
outsl
movsb
xchg
lods
cmc
mov
xor
sti
pop
mov
or
xchg
cmpsl
add
out
sub
inc
mov
test
iret
xchg
cmpsl
loope
mov
mov
push
into
pop
imul
push
or
es
xor
ss
add
into
pop
dec
xor
outsl
std
cmp
xor
inc
std
and
mov
ret
sub
inc
sbb
or
in
in
xchg
xchg
hlt
adc
ss
lds
add
mov
cld
lret
and
mov
idiv
lret
mov
loope
je
std
sti
sub
push
and
add
loope
fbld
sub
nop
xor
add
mov
jnp
pusha
je
xchg
add
sbb
sbb
adc
inc
pusha
mov
cmp
and
stc
xor
dec
cmpsb
pop
out
or
cmp
clc
scas
popf
lods
and
mov
and
sarb
loope
cmc
dec
cmp
les
sub
into
mov
sub
pop
xchg
cmp
popa
int
adc
dec
out
fsubl
gs
mov
push
ljmp
mov
and
stos
xor
lret
inc
add
subl
sub
icebp
push
es
push
pop
xchg
dec
xchg
sbb
daa
xchg
sub
lods
xchg
and
je
stos
movsl
and
lcall
lret
mov
fimull
out
sbb
in
fcomps
sub
inc
inc
jg
jns
int3
and
inc
je
stos
lcall
hlt
mov
mov
sahf
das
mov
pop
stos
in
and
adc
int3
into
and
adc
inc
sti
jno
enter
imul
cmp
push
sarl
mov
cmpsb
sbb
outsl
jle
dec
mov
es
xchg
sub
insb
int3
arpl
cld
daa
add
addb
mov
stc
push
inc
lret
sub
pop
push
sub
fsub
into
xor
jns
ds
cmp
adc
xor
pop
in
or
test
pop
push
jno,pn
in
sbb
add
mov
shlb
mov
xor
mov
stc
loopne
or
jmp
orl
cwtl
jecxz
push
popa
inc
pop
sbb
aad
into
shrl
lret
ljmp
mov
shl
mov
push
sbb
in
mov
cvtdq2ps
nop
lcall
nop
movsl
add
loop
mov
enter
data16
pop
test
hlt
das
sub
out
sti
loop
pop
fldt
mov
xchg
jl
push
xor
jne
rcrb
fidivs
push
mov
pop
sbb
je
inc
mov
pop
sub
xor
in
test
lods
nop
in
inc
clc
add
insb
dec
xchg
sbb
mov
fnsave
out
imul
and
subb
in
and
imul
out
xchg
das
adc
stos
hlt
dec
cmpsl
stc
and
rcrb
mov
stos
cmp
lds
fnstsw
mov
es
inc
push
jnp
das
repnz
pop
arpl
mov
gs
cmp
add
jnp
mov
int3
push
inc
mov
xor
dec
or
xor
lret
mov
cmovp
mov
mull
idivl
xlat
mov
adc
xchg
lock
scas
mov
pop
pop
int
xchg
int
mov
mov
push
and
int
adc
xchg
lahf
mov
mov
mov
stos
jns
movsl
mov
ljmp
insb
cltd
js
mov
jmp
vpshad
lret
js
lock
psubq
imulb
and
adc
cwtl
jle
stc
lcall
jne
and
sti
cltd
nop
addr16
ss
jno
cmp
push
sub
ja
mov
jg
fwait
push
ja
popa
test
jo
jp
xchg
call
orb
in
dec
bound
test
pop
fisttps
dec
insl
pop
or
pop
adc
sti
add
stos
jl
cwtl
mov
mov
clc
pop
shlb
push
and
in
mov
outsb
dec
mov
stos
into
lret
icebp
and
in
gs
sbb
jmp
pushf
xchg
jne
es
inc
call
mov
xchg
push
push
cmp
mov
imul
adc
loopne
lret
xor
inc
test
cs
pop
xchg
xor
test
cs
xor
jnp
aam
or
loop
in
xchg
loopne
popf
lret
call
sahf
imul
addr16
pop
jg
sar
sbb
jne
jecxz
mov
cltd
stos
arpl
pop
pop
sub
xchg
adc
xor
std
push
aam
push
test
xchg
in
adc
sub
std
mov
hlt
subb
roll
xor
test
test
mov
cmpb
sbb
pop
and
in
inc
or
clc
and
jl
cmp
imul
push
add
and
adc
adc
sbb
mov
popa
sub
sti
testb
and
sti
cmc
call
orb
shrl
mov
rorb
sbb
add
ss
mov
cmc
sub
inc
sbb
hlt
pop
repz
jne
pop
sbb
addr16
loopne
fsubr
cmp
pop
cmpsl
push
daa
jne
in
dec
sbb
repnz
inc
inc
arpl
int
inc
bound
mov
std
movsb
call
iret
push
inc
pusha
gs
push
int3
outsl
repnz
mov
stos
adc
add
push
sub
fidivrs
lods
bound
mov
idivb
inc
leave
imul
dec
jge
sub
mov
dec
rcrb
int
xor
aam
mov
or
out
addr16
jae
jne
push
lods
int3
sbb
or
xchg
enter
rcl
dec
std
cmpsb
hlt
iret
inc
pop
fs
mov
les
sub
mov
or
ja
fsubp
enter
shrb
gs
adc
in
stos
xor
out
out
dec
adc
mov
imul
mov
fmuls
test
das
mov
inc
aaa
sub
popa
push
or
xchg
inc
mov
cmp
call
jl
add
jno
rcll
jns
jnp
mov
mov
xchg
arpl
jns
pop
cmpsl
push
loope
mov
mov
out
in
jp
push
jg
push
ss
mov
call
insl
xor
into
push
shrb
or
push
mov
jne
loopne
mov
addb
pop
out
cmpsb
sbb
shl
cmp
pop
shlb
jle
insb
aad
xchg
out
aas
mov
push
and
das
test
test
loope
mov
sub
xchg
cmp
push
cmp
mov
repnz
mull
pop
inc
or
scas
test
mov
xor
cmpb
mov
inc
pushf
enter
pop
and
lods
push
inc
out
sbb
stos
shlb
mov
cmpsb
lret
xchg
rcll
jb
rcrl
inc
push
push
out
sub
dec
popf
pop
lret
sbb
ret
clc
pop
dec
andl
mov
push
lahf
mov
or
inc
push
mul
mov
aaa
push
subl
or
cmp
insb
or
test
mov
xor
movsl
lret
dec
mov
jg
cwtl
add
fbld
mov
daa
je
pop
push
pushf
xchg
sbb
jl
sub
cmp
inc
cltd
stos
cmpsb
imul
mov
repnz
inc
clc
jle
test
in
icebp
dec
ss
pop
scas
mov
imul
leave
mov
repnz
add
into
mov
icebp
xchg
addr16
push
out
mov
test
js
xlat
cmpsb
xor
pop
jle
in
repnz
adc
add
push
cmp
jnp
loope
jns
cmp
push
cli
mov
std
adc
pop
mov
dec
gs
stos
scas
outsb
frstor
je
pop
popf
mulb
icebp
push
sub
pop
inc
mov
lea
inc
hlt
xchg
jp
mov
roll
add
gs
sub
or
stos
inc
mov
sbb
mov
cltd
ljmp
arpl
add
dec
jne
andb
mov
sti
sbb
and
mov
or
mov
mov
iret
in
mov
cmovle
sti
cmp
fisttpll
push
add
push
mov
add
sti
repnz
movsl
les
ds
mov
call
pop
push
sub
dec
into
sub
mov
push
ficomps
add
xchg
dec
call
clc
sarb
xchg
pop
mov
or
sub
int3
rorl
aam
dec
jo
aaa
push
cltd
mov
mov
in
and
aaa
sub
clc
sbb
xchg
push
add
push
cmpl
sub
ja
fsubrl
pusha
lods
jmp
lcall
fisubrs
hlt
xor
xchg
sbb
mov
loope,pt
adc
or
mov
push
cld
sub
in
into
jne
add
mov
aas
test
sub
loopne
jp
jnp
sti
lock
divl
mov
push
cld
adc
jecxz
adc
cmp
or
lock
mov
pmullw
push
pop
outsl
mov
mov
std
out
leave
js
mov
mov
repz
test
push
sbb
jle
test
fs
jbe
jns
xor
sub
mov
scas
sbb
mov
add
pop
imul
xchg
mov
js
les
mov
inc
sbb
cli
cltd
gs
int
push
test
jl
add
jge
inc
jo
lret
add
stos
insb
and
pushf
in
lahf
out
scas
xchg
pushf
or
clc
mov
nop
xchg
lcall
lods
je
or
nop
cmp
out
sbb
pop
xchg
jle
pop
push
xchg
sub
add
pop
out
pusha
lret
adc
and
enter
sbb
aam
dec
and
pop
lods
hlt
rcr
xchg
sub
repnz
insb
je
push
and
push
dec
push
push
xchg
jmp
xchg
sub
je
xchg
mov
mov
mov
add
fstl
daa
jl
and
iret
in
or
inc
xor
or
xor
imul
orb
leave
add
sbb
jns
sbb
popa
sbb
insb
mov
jp
sub
push
mov
leave
cwtl
pop
jnp
mov
add
in
adc
mov
mov
pop
push
xchg
xlat
lcall
and
or
dec
cmp
mov
cmpsb
xchg
mov
inc
repnz
test
jo
repnz
mov
fcomip
pop
addr16
sub
add
ret
into
sbb
pop
push
sbb
pop
push
or
adc
stc
loope
xor
sub
pushf
cmp
add
adc
jno
and
jo
arpl
stos
inc
sbb
ljmp
iret
mov
mov
push
movsl
clc
mov
mov
ss
stos
xlat
xlat
jne
repz
xchg
outsl
jae
jg
sahf
ret
pop
hlt
mov
mov
xchg
mov
jmp
loop
in
jns
cmp
inc
int
call
pop
xorl
int
in
push
in
orl
daa
popa
xor
mov
xor
dec
mov
aad
out
cmpsl
mov
push
roll
cmp
xchg
or
je
or
push
adc
jecxz
dec
mov
out
inc
int
loope
xlat
cmp
push
icebp
sbb
sbb
cld
stos
dec
leave
push
dec
mov
test
mov
adc
dec
rcrb
out
jmp
sbb
mov
push
pop
outsb
in
std
test
dec
jl
push
popa
pop
cmpsl
cltd
push
or
add
bsf
pop
add
adc
fstp
int3
jmp
jae
mov
push
inc
idiv
add
sbb
xor
pusha
lret
push
mov
xchg
inc
loope
scas
scas
loope
test
jae
mov
shlb
fsubr
lods
fimull
pop
and
loopne
xor
in
jne
push
mov
es
lret
sub
pop
mov
sub
movsl
rcll
cmp
gs
mov
mov
cwtl
test
shrb
std
nop
pusha
jns
lahf
shlb
loope
scas
fdivr
das
xor
nop
cmpsb
popf
and
aaa
mov
mov
mov
cmp
repnz
mov
mov
bound
inc
daa
cmp
pusha
cmp
and
ss
loop
mov
insl
jecxz
cmpsl
test
mov
xchg
add
or
adc
sbb
push
jno
cltd
sub
mov
cld
out
addr16
mov
insl
movb
lea
cmpsl
dec
rol
int
pop
lea
out
xchg
sbbb
jbe
daa
addr16
loopne
push
mov
push
pop
jmp
add
xor
int3
inc
jbe
xor
sub
push
pusha
scas
mov
mov
adc
movsl
sub
mov
aas
fdivrs
addl
mov
scas
xchg
xchg
cwtl
out
lods
aas
push
clc
push
dec
pusha
mov
add
subb
ljmp
test
fcomps
mov
push
inc
pop
inc
and
xchg
pop
cmp
pop
inc
cmpsb
movsw
cmpb
jbe
xchg
fists
mov
rcll
mov
xchg
adc
lcall
addr16
mov
cmp
jns
sbb
mov
int
stos
daa
loopne
bound
stc
xchg
clc
jp
and
shrb
icebp
lock
aam
cmpsl
stos
push
lahf
cmc
sbb
fwait
pop
dec
jae
fldenv
ljmp
mov
jge
stos
in
in
mov
fldt
pushf
xor
push
sbb
repnz
fiadds
mov
repz
pop
push
push
xor
lcall
daa
loopne
pop
jg
aas
push
dec
xlat
cld
dec
sbbb
lds
clc
sti
jg
insl
xchg
mov
stc
arpl
inc
fiadds
pop
enter
insb
in
movsb
cwtl
cmpsl
popa
daa
xor
xchg
cld
jp
jg
mov
mov
inc
xor
xor
jmp
mov
push
xchg
xor
je
je,pt
shlb
inc
and
daa
jle
and
push
xor
inc
lcall
in
jae
insb
jge
stc
mov
dec
cli
xchg
out
sbb
jbe
mov
sub
adc
push
cmc
rcll
scas
rorl
in
bound
push
mov
in
test
mov
lea
xor
sti
inc
pop
shrl
mov
dec
pop
mov
cmpsb
jae
lret
or
sub
loopne
cmp
sbb
arpl
sbb
test
mov
ljmp
mov
xchg
in
mov
sti
icebp
js
shlb
negl
inc
dec
repnz
jae
jb
repz
xor
sub
popf
mov
sub
mov
pop
xchg
enter
jg
add
shlb
cmp
fildll
mov
out
negl
or
jl
mov
xor
jp
arpl
std
xor
or
push
scas
pushl
inc
push
jnp
or
xchg
aad
xor
leave
shll
data16
in
jb
lds
pop
test
sbb
addr16
ljmp
xchg
call
sub
mov
mov
xor
push
cltd
xchg
bound
aam
jmp
jb
adc
fs
lds
or
inc
mov
lcall
sub
lcall
mov
int
or
push
scas
movntq
and
mov
cmc
or
jne
test
inc
and
loopne
dec
decl
js
sub
fisttps
mov
mov
lea
sarb
jns
xor
mov
jle
cmp
xchg
adc
stc
enter
nop
mov
sbb
popf
push
mov
mov
xor
idivb
inc
mov
and
pop
cltd
insb
cmp
dec
lret
aas
es
and
cmp
xchg
sub
sub
std
sbb
imul
or
sbb
push
mov
adc
pop
rcrl
and
jb
lods
imul
js
add
out
sub
add
movsb
or
ds
mov
or
push
mov
mov
cmp
mov
subb
clc
icebp
pop
imulb
mov
loope
xchg
pushw
scas
sbb
adc
and
dec
pop
shlb
sbb
ficompl
lcall
sub
xchg
in
sub
test
out
loop
shl
mov
inc
mov
adc
decb
cwtl
std
pop
pop
pop
inc
imul
bound
jae
sbb
pop
add
sub
rol
xchg
out
mov
adc
sub
pop
movsl
shl
lcall
jae
addb
pusha
add
jmp
dec
and
mov
cmp
shrb
rcrb
stc
mov
aas
jg
cld
cmpl
ret
jne
insb
and
push
lea
xor
sub
mov
inc
inc
pop
xchg
loop
js
cs
mov
dec
test
sub
inc
sahf
notl
inc
sub
and
fs
test
pop
mov
and
mov
lods
push
cwtl
lea
mov
in
dec
mov
push
sub
lods
cmp
sti
pop
leave
mov
imul
stos
test
push
mov
fcmovbe
jns
incb
shrb
add
insb
push
mov
push
xor
mov
push
sbb
mov
push
xchg
dec
loope
imul
cmpsl
xchg
dec
push
dec
mov
lock
pop
lods
jae
xchg
push
jmp
mul
gs
daa
cmp
rorb
dec
insl
xor
es
das
movsb
xlat
adc
test
pop
pop
pop
jmp
lods
add
cmp
fbld
pop
push
sub
jbe
in
or
pop
sub
popa
adc
push
xchg
imul
jg
jae
or
rcll
clc
push
mov
cli
out
inc
test
inc
lret
adc
mov
inc
fldcw
cmp
outsb
jo
ljmp
insl
lds
lds
pop
gs
hlt
mov
and
or
pop
test
cmpsl
xchg
jg
ds
jmp
aas
movsl
aam
inc
pop
call
jl
push
ds
push
stos
in
adc
lea
and
cli
push
pop
icebp
int3
fldcw
inc
jns
testb
dec
xchg
push
adc
negb
push
outsb
lock
sbb
push
pop
popf
mov
xor
icebp
rcrb
jno
ja
xorl
das
movsl
fldt
xor
or
mov
mov
js
add
mov
popf
ja
cmp
fdivl
ds
add
cwtl
dec
mov
sub
xor
jecxz
pushf
ret
sub
add
fs
cmp
or
loopne
mov
out
int3
lret
sbb
sbb
and
push
add
std
cmp
movsl
and
enter
test
and
and
in
inc
or
mov
pusha
in
or
mov
out
idiv
dec
or
and
movsb
out
bound
int
int3
ret
mulb
inc
dec
sahf
js
add
sub
int
mov
push
jo
lret
imul
xor
inc
test
cld
sbb
popf
loop
pop
into
or
push
in
lock
dec
xchg
into
aad
inc
or
push
ret
popl
lds
mov
mov
clc
mov
shl
loope
inc
lret
jmp
pop
into
int3
rorb
mov
pushl
cmp
adc
lahf
out
icebp
lea
xchg
adc
xor
in
xlat
addr16
mov
and
mov
adc
fistpll
push
xchg
cmp
sub
enter
sbbb
sbb
test
jp
mov
cmp
js
cmc
sbbb
dec
mov
lock
nop
push
popf
cmp
leave
jno
xor
inc
sbb
jo
lods
cmpsb
xchg
jae
aad
shlb
fmulp
ljmp
clc
mov
cmp
imul
sbb
inc
pop
sti
adc
mov
scas
mov
xchg
push
jbe
adc
adc
push
push
ljmp
sar
cld
out
xchg
shlb
test
pop
mov
mov
sti
scas
lds
add
inc
stos
lea
call
jecxz
inc
jp
push
icebp
jmp
xchg
inc
enter
sub
mov
and
sbb
pop
mov
mov
repz
sti
cs
insb
mov
cld
pop
arpl
in
sahf
ss
repz
dec
inc
pop
fidivrl
jb
pushf
mulb
gs
std
sbb
sbb
mov
push
or
fmul
pop
add
arpl
mov
inc
xor
repz
mov
into
pop
mov
out
into
inc
xchg
or
dec
arpl
ds
xchg
and
fwait
mov
adc
adc
pop
inc
inc
les
popa
mov
pop
push
mov
outsb
push
outsb
adc
in
sbb
aad
mov
push
inc
cltd
push
inc
or
sub
sub
mov
les
cmp
xor
test
sarl
mov
mov
or
cmpsl
xchg
inc
popf
mov
jge
jno
call
pop
fimuls
fsubrp
sub
push
arpl
adc
mov
push
and
repz
cmp
ss
cwtl
pop
adc
test
xchg
leave
xor
sub
fisubs
rcr
test
hlt
inc
and
sub
or
test
sahf
mov
lret
call
ds
xor
pop
add
mov
cmc
jno
sbb
jns
mov
dec
inc
pop
pop
stos
push
sahf
sahf
ds
mov
fisubl
jmp
or
xchg
adc
inc
inc
jle
dec
inc
ret
mov
cmp
loopne
pop
sti
sar
leave
test
xor
icebp
and
mov
inc
xlat
jb
mov
dec
dec
inc
mov
fcompl
imul
cmp
pop
xchg
push
loope
xor
das
sti
bound
and
aaa
out
aam
movsl
dec
jmp
dec
stos
mov
add
push
repnz
push
xchg
scas
sti
and
adc
mov
icebp
dec
mov
movsl
jae
add
es
leave
mov
popa
xorl
mov
mov
xor
stos
pop
add
test
imul
push
add
lods
inc
mov
repnz
jb
mov
add
es
into
imull
jae
push
addr16
xchg
adc
sti
jecxz
imul
xlat
fsubrs
xlat
in
fiadds
imul
jae
scas
loopne
sahf
pop
ss
ja
and
test
int
mov
loope
xor
das
aad
push
mov
movsb
mov
jnp
shlb
jo
in
and
ds
notb
or
sbb
jo
jnp
mov
cmp
ficomps
pop
and
mov
adc
and
bound
jmp
lea
out
mov
repz
popa
insb
shrb
fmul
aam
test
lea
push
inc
jg
jge
ds
push
popa
dec
cmp
rorb
cltd
lret
lcall
rorl
subb
xchg
jmp
adc
cmpsl
adc
sbb
dec
out
xchg
cmc
push
jle
push
sub
xor
aaa
push
jmp
jge
lods
negb
mov
cmp
iret
mov
or
inc
and
jmp
aam
js
inc
jne
inc
adc
rcrl
cwtl
mov
cmp
xchg
mov
loop
push
pop
and
and
dec
add
gs
xchg
shrb
test
dec
pop
icebp
int3
in
ss
je
xchg
xchg
std
cli
cmp
ret
pop
or
ret
dec
lcall
xor
and
adc
fdivrs
popf
fisttpl
clc
pop
cs
and
mov
jmp
fsubs
orb
mov
movsb
xor
add
push
inc
lcall
xchg
icebp
push
adc
mov
stos
adc
je
ss
call
jecxz
inc
cli
stos
divl
push
jns
and
add
or
xor
jb
mov
adc
call
sarl
fistpl
and
adc
popf
push
sbb
sbb
lret
stc
test
andb
divb
dec
xchg
dec
cwtl
popa
in
inc
and
pop
nop
cmpsb
jmp
push
adc
repnz
insb
stc
mov
clc
data16
push
jno
push
push
jb
add
repnz
and
jge
xorl
cmc
aad
xlat
pop
xchg
or
pop
sub
mov
mov
lret
xor
mov
jnp
sbb
mov
pushf
push
ret
les
mov
fstpt
pop
sub
add
xor
rclb
adc
sahf
les
ficompl
push
in
sub
dec
outsl
enter
imull
arpl
test
mov
jo
outsb
sbb
mov
aam
xor
aam
sbb
jns
pusha
arpl
aam
int
push
popf
and
pop
cltd
pop
stc
scas
jnp
scas
mov
out
jge
fwait
mov
lahf
call
or
and
call
xchg
cmp
filds
sub
sbb
aad
into
ret
in
fsubs
shrb
fcomps
sahf
sub
jo
addr16
jge
adc
pop
call
repnz
lcall
adc
outsb
cmp
fs
xchg
aad
mov
dec
jbe
sub
sub
fsubp
mov
lret
jge
cwtl
rorl
or
push
bound
fdivrs
fstl
mov
dec
xchg
cltd
ds
xor
ficomps
insb
adc
rorb
pop
insl
imul
pop
aad
vsqrtsd
hlt
push
icebp
xchg
aad
push
adc
or
pop
call
imul
addl
leave
dec
sub
jmp
sahf
and
cld
sbb
sbb
ds
data16
pop
popa
cltd
jnp
or
or
fists
cmp
adc
gs
xchg
loopne
dec
mov
mov
scas
or
imul
add
mov
lret
bound
cmpsb
movsl
loopne
xchg
xor
aam
enter
movsl
lret
test
loopne
and
add
cs
movsl
jle
pop
jnp
iret
pop
fst
icebp
notb
mov
adc
dec
adc
pop
dec
imul
rcll
ret
das
jmp
das
in
test
mov
stc
push
sbb
mov
fchs
mov
mov
sub
movsl
push
sub
ss
scas
imul
push
repz
push
push
shrl
mov
idiv
cmp
icebp
gs
and
cli
inc
aaa
fnstsw
xchg
aas
mov
lods
mov
pop
mov
sarl
out
dec
out
sahf
insl
mov
clc
fistps
pop
imul
jne
jg
inc
out
inc
push
add
sub
ljmp
gs
xchg
mov
bound
sar
dec
jg
or
sub
filds
jge
fs
insb
icebp
shrb
fmuls
add
stc
push
ret
fadd
xchg
add
das
repnz
lcall
fdivrl
aam
push
adc
sbb
adcb
lods
shlb
xor
push
std
xchg
sub
imul
add
xor
mov
push
movsb
sbb
decb
ljmp
xlat
icebp
daa
jae
jle
adc
mov
adc
push
call
cmp
adc
popf
inc
xchg
pop
pushf
sbb
mov
bound
push
inc
xlat
sar
xchg
iret
test
outsb
xor
dec
cmpsb
mov
adc
pop
ret
roll
pop
lea
lds
popf
data16
sub
out
out
pop
adc
rol
jl
mov
cmp
pop
jmp
lcall
jns
xchg
icebp
mov
inc
jl
lret
ljmp
ljmp
sub
ret
je
in
jae
jne
sub
dec
fldcw
mov
sub
aas
das
cs
xor
jae
into
insl
insl
in
push
popa
xchg
push
adc
iret
arpl
dec
cmp
dec
data16
mov
loope
idivb
sbb
and
push
icebp
xchg
or
dec
cmp
icebp
lret
mov
xor
inc
xchg
adc
mov
dec
mov
lock
cmp
pop
pop
lret
cltd
dec
sbb
mov
scas
or
loopne
ret
lret
jo
dec
jp
insb
push
xchg
adc
mov
or
leave
sub
imul
xchg
push
outsl
or
pop
in
inc
mov
cmp
xchg
adc
testb
inc
adc
cmc
sub
mov
cwtl
sub
mov
int
into
xchg
les
or
sbb
cmpsl
test
pop
jmp
dec
mov
xchg
mov
xor
jnp
xor
dec
mov
movsl
stos
add
or
imul
sbb
lcall
dec
call
aas
jg
push
cmp
xchg
or
leave
lret
sub
loopne
outsb
sbb
lods
xchg
mov
lret
inc
test
pop
and
push
dec
pop
out
cs
roll
mov
mov
mov
movsb
sbb
mov
cmp
jg
fsubl
out
xchg
jp
out
or
cmp
cld
loop
jbe
cli
rcrl
addr16
jns
cmp
pop
xor
popf
es
adc
mov
sbbb
aam
js
std
pop
mov
xchg
loope
imul
mov
lea
inc
jns
xchg
lods
jmp
mov
pop
cmp
pop
cmp
pop
mov
xor
pop
cmp
xchg
movsl
xchg
je
push
or
and
adc
das
push
es
jb
adc
cmpb
iret
pop
mov
jno
xor
xchg
mov
iret
dec
aaa
shll
xchg
fisubrl
mov
ja
pop
repz
adc
flds
out
rorb
sbb
ljmp
shll
outsb
es
hlt
sahf
lea
xchg
xchg
fsubs
mov
xchg
sbb
je
mov
outsl
xchg
pop
das
jnp
decl
ljmp
jno
arpl
inc
fs
xor
push
sbb
mov
mov
jno,pn
div
scas
mull
loop
idivb
in
xor
cmpsb
sbb
push
xchg
pusha
rol
xchg
test
int
and
xchg
sub
loop
js
xchg
les
repnz
sub
cmp
mov
loop
sub
cmpsb
mov
adc
adc
add
popa
in
mov
out
inc
xchg
pop
add
repnz
test
push
pop
pop
jns
mov
jne
sub
hlt
push
repnz
jns
sbb
test
push
sbb
pop
dec
xchg
xchg
movsb
fwait
dec
inc
mov
shll
inc
lahf
pusha
cwtl
pop
jae
push
ja
add
mov
hlt
ret
xorl
aad
mov
std
sbb
fadds
xorl
roll
and
arpl
ficoml
sbb
mull
iret
int
xor
fldl
xor
clc
icebp
mov
shr
sti
or
shll
dec
add
ljmp
loop
sub
pop
mov
cs
mov
imul
jae
mov
icebp
enter
cld
jbe
hlt
xor
daa
dec
xor
jo
js
nop
xchg
mov
dec
xchg
rolb
jnp
jl
pop
adc
jmp
ret
inc
fidivrs
out
and
inc
in
arpl
or
int
jns
jo
inc
adc
sub
cwtl
popa
and
lods
xor
push
push
out
mov
jle
fadd
inc
in
fstl
lds
adc
pop
mov
stos
into
and
jecxz
filds
sub
stc
push
jbe
lcall
cs
daa
sub
sub
inc
fildl
lods
lcall
xchg
pop
inc
sub
pusha
sbb
cmp
dec
mov
imul
pop
xchg
adc
mov
shl
mov
jnp
xchg
scas
ja
cli
mov
dec
mov
adc
sub
gs
fucom
les
cmpsb
gs
std
adc
out
or
fiaddl
xchg
push
insl
xor
xchg
and
movsl
es
sub
mov
incl
xlat
lret
fildl
aad
pop
lods
out
mov
or
fsubr
mov
or
mov
push
testl
jne
roll
adc
jl
dec
add
shlb
orl
enter
push
lods
jbe
mov
scas
mov
and
xor
sbb
gs
adc
bnd
mov
pop
push
into
mov
xchg
movsl
mov
dec
xlat
mov
xchg
jle
mov
push
jg
and
fsubs
scas
mov
aam
pop
and
push
ficomps
mov
iret
jmp
xor
mov
scas
adc
sub
cld
cmp
fcmovbe
pop
ss
add
aam
pusha
addr16
adc
mov
dec
sub
stc
jo
das
sub
xor
out
insb
das
mov
sub
inc
mov
xor
push
fmul
movsl
gs
test
sahf
cltd
loope
in
adc
sar
fildll
xchg
mov
jge
jnp
dec
pop
pop
add
rorl
jecxz
sbb
ds
jae
rcll
add
imul
loope
jbe
jge
jb
dec
mov
pop
and
push
adc
mov
sbb
adc
rcrl
push
dec
aaa
mov
push
jns
fimuls
pop
or
adc
xchg
dec
rcl
shrb
fimuls
cld
in
and
outsb
dec
jnp
and
sub
insb
sbb
sti
daa
lret
mov
ss
mov
mov
sti
xchg
push
rclb
insl
and
cmpsl
cmpsl
mov
jae
add
and
push
in
mov
push
cmp
sub
mov
add
mul
pushl
cltd
and
ficoms
fs
jns
test
stos
insb
push
jb
mov
inc
sbb
aad
ds
push
dec
dec
stc
lahf
mov
cmp
nop
sbb
mov
or
lea
cmp
aad
dec
sub
jecxz
pop
enter
or
imul
rolb
jmp
fsubp
mov
stos
fistps
sahf
or
jns
stc
gs
les
cmp
add
cmpsb
add
cld
dec
mov
add
mov
or
das
aas
nop
sub
pop
mov
push
lret
pop
jmp
data16
push
mov
ficoms
adc
sub
in
pusha
inc
mov
fcompl
inc
hlt
push
dec
xor
insb
out
dec
rcll
repnz
leave
sbb
pop
mov
jns
cmp
push
cmp
popf
or
cwtl
ficoms
sbb
aam
mov
jbe
xor
lds
int3
pop
and
cmc
subl
push
add
pop
mov
shr
mov
xchg
lret
popa
js
stc
cmpsl
testb
ficoms
cmpsb
aas
push
add
or
das
aam
fimull
in
jmp
stc
mov
popa
add
or
cltd
xor
cmp
adc
jp
adc
ss
add
test
outsb
mov
xor
lcall
adc
arpl
ret
push
in
xor
stos
cld
sti
shrl
sub
stc
inc
push
movsl
inc
mov
stc
jp
fwait
cltd
fdivs
jmp
enter
adc
jne
nop
outsl
clc
dec
lods
aas
lds
push
loope
pop
pop
cmpsb
clc
sub
push
xchg
lret
scas
stos
push
fs
es
and
xchg
out
cmc
repnz
mov
lret
jo
dec
and
loopne
fsub
mov
jb
pusha
jecxz
inc
cmp
daa
pop
inc
notl
jle
inc
pop
ja
mov
test
cmp
push
cli
mov
add
cli
dec
jmp
fs
loope
mov
pop
lret
sbb
cli
iret
inc
fdivs
jbe
ss
imul
mov
pop
hlt
adc
shr
dec
fiaddl
cmpsl
sbb
xchg
pushl
sbb
add
fldcw
lds
imul
inc
mov
push
xor
sub
inc
cmp
push
push
lcall
ret
fs
sbb
xor
fsubs
mov
lahf
in
mov
xchg
rorb
lock
xchg
fbstp
push
cwtl
or
xchg
and
or
in
adc
and
outsl
out
lock
sbb
cmp
sub
xchg
dec
sbb
enter
cmp
mov
in
mov
arpl
aaa
inc
jnp
jne
mov
rcr
iret
xor
fwait
xor
sub
orl
fs
mov
fdivs
and
or
loop
enter
adc
inc
push
enter
test
outsb
cmpsb
sub
movsb
sub
lret
shrl
insb
mov
jo
loope
and
and
dec
and
jo
sbb
push
pop
lods
or
cld
cmp
sub
movsb
dec
or
paddq
push
adc
lods
std
push
int
mov
pop
mov
pusha
rcrb
sub
mov
es
dec
mov
xchg
mov
lret
movsb
rep
push
stc
test
push
divb
gs
cmp
jno
std
mov
cld
movl
adc
clc
cmpsl
ret
mov
jle
jae
xchg
xlat
imull
xchg
inc
cmp
orb
andl
pop
jl
xchg
add
inc
and
test
xchg
jb
jae
cmpl
push
pop
push
dec
sub
pop
jno
sbb
scas
ret
inc
dec
or
and
pop
mov
sbb
sbb
mov
cli
sbb
adc
jmp
popa
sub
fcompl
pop
inc
js
in
imul
lret
outsb
cld
add
dec
pop
cmpsl
mov
adc
xor
and
daa
adc
mov
aam
sbb
jb
mov
and
xchg
leave
add
pop
leave
inc
sarb
dec
sbb
inc
pushf
adc
mov
sbb
paddusw
adc
cmp
inc
clc
add
xchg
movsb
stos
stos
iret
imul
fld
push
in
push
sbb
mov
inc
add
lds
pop
push
arpl
push
testb
push
inc
pslld
dec
rcr
dec
test
dec
leave
fstpt
adc
jp
stos
jmp
sub
jbe
clc
push
out
fistpl
dec
cmp
cmp
div
mov
dec
mov
jp
jae
xchg
clc
jae
into
int
sarb
call
out
jmp
rorb
mov
in
push
dec
scas
outsl
push
xor
ret
mov
inc
jl
lcall
cwtl
es
nop
xchg
or
adc
bound
pusha
movsl
mov
jb
rep
xor
movsl
lock
pop
sbb
out
in
xlat
sub
jge
xor
mov
fisubs
cmc
adc
mov
adc
mov
into
aas
xor
ss
aas
mov
add
add
mov
out
inc
pop
mov
jle
pop
cmp
data16
push
ljmp
fidivs
repnz
inc
sbb
and
andb
and
jbe
mov
dec
mul
jbe
xlat
mov
or
ficompl
xlat
cmpsl
lret
lods
lahf
xor
cmpl
dec
push
imul
fdivrl
les
add
xor
xchg
push
inc
test
sbb
in
sub
and
add
push
rorl
push
xor
inc
push
insb
mov
lock
jns
xchg
repnz
xor
leave
arpl
pop
jns
or
rorb
pop
pop
push
mov
into
lret
cwtl
mov
loope
bound
or
arpl
or
les
fbld
mov
subl
xor
imul
jne
add
sbb
mov
cmpsb
dec
int
mov
into
into
and
and
sub
lret
out
add
lahf
mov
aas
adc
dec
jmp
mov
pop
xchg
frstor
mov
fimull
and
movsl
cs
lods
push
add
cmc
jl
push
aaa
xchg
pop
outsb
hlt
push
and
ret
lds
add
sbbb
in
test
aad
adc
out
or
fisttpl
leave
enter
loopne
push
out
iret
imul
mov
jno
mov
lea
imul
lahf
dec
xor
sub
in
aam
mov
mov
cmpsl
push
in
js
pop
push
mov
lea
lcall
ds
filds
xchg
in
fmul
out
xchg
xor
lcall
gs
add
cmp
imul
and
sbb
sub
add
sub
repz
mov
ret
xchg
and
mov
repz
daa
rcrb
aas
mov
dec
push
and
clc
movsl
sti
insb
jbe
test
sti
mov
inc
mov
rcrl
push
add
xlat
bound
aas
dec
push
cltd
std
mov
sbb
sub
jecxz
mov
out
add
jnp
xor
jg
daa
icebp
ret
data16
sarb
out
mov
and
pop
dec
arpl
xor
adcl
and
icebp
xor
incb
inc
mov
ja
leave
cmp
lahf
cs
ret
stos
push
ficomps
mov
iret
mov
loope
mov
das
jnp
je
movsb
out
shrl
adc
subb
mov
xor
jns
jns
hlt
iret
push
les
loop
jnp
push
mov
sbb
mov
jecxz
push
leave
sub
push
inc
rclb
sbb
push
cmp
sbb
sbb
loope
iret
repnz
xor
shll
pusha
inc
lret
dec
rcrb
negl
fidivrs
stos
testb
aaa
fisubl
loope
aad
stos
adc
and
stos
push
or
push
jne
daa
mov
mov
das
out
jae
xor
mov
in
sbb
das
filds
sarb
dec
fidivl
mov
add
cmpsb
mov
push
jp
pop
clc
jno
xor
add
or
dec
push
and
sbb
pushw
push
xchg
je
lock
mov
adc
inc
movsb
mov
lock
mov
jge
loop
es
add
jg
pusha
and
mov
pop
enter
cmp
inc
mov
mov
dec
mov
std
out
aas
ficoml
jo
js
jae
enter
push
sub
js
insl
push
cwtl
lahf
rcll
xchg
andl
or
lret
dec
cpuid
lahf
shll
scas
ss
negl
decb
std
adc
mull
mov
inc
std
cld
jp
mov
mov
mov
jno
push
imul
fs
jo
out
mov
js
add
sbb
xchg
sahf
loopne
jp
cmp
jo
cld
adc
sub
mov
test
mov
in
cmpb
scas
gs
fiaddl
arpl
sub
insl
xchg
or
push
inc
mov
cmp
sub
cmp
int3
mov
sub
xchg
mov
mov
or
hlt
jne
mov
and
inc
arpl
inc
jno
lahf
inc
pop
es
and
mov
das
cld
adc
cmp
push
aas
or
outsb
call
cltd
inc
out
sbb
sbb
push
dec
fnstcw
cmp
inc
dec
xor
cmp
lret
fcmovb
fisubrs
test
add
add
popa
sbb
aaa
dec
pop
test
inc
into
jmp
clc
lret
push
test
jae
mov
jmp
dec
pop
sub
cmp
rorb
aaa
dec
inc
xchg
fcmovnbe
lcall
lds
movsl
pop
add
hlt
xchg
int
mov
movsl
mov
testb
push
loope
sub
insl
pop
hlt
mov
frstor
sub
add
iret
jl
imul
xchg
mov
cli
enter
xor
pop
or
mov
insb
mov
nop
addr16
cmp
test
jge
iret
cltd
dec
clc
inc
push
xchg
adc
jnp
and
into
mov
pusha
movsl
cmp
dec
push
sbb
movsb
push
fdivrl
pusha
test
mov
cmpsb
lret
xchg
xor
lret
cmp
stos
mov
or
test
test
inc
ret
iret
mov
fldl
adc
or
shll
cmc
add
inc
std
call
push
mov
out
loop
dec
movb
pop
imul
ret
insb
ss
xchg
test
mov
jne
fwait
jmp
out
mov
xchg
cmp
js
rdmsr
inc
add
aad
test
ss
or
daa
mov
jo
xchg
push
rcl
jbe
xchg
sub
mov
fldenv
imul
pop
movq
dec
lcall
jb
jnp
cmp
mov
ljmp
xor
call
xchg
lret
pop
roll
inc
pop
or
call
imul
test
shll
arpl
jmp
dec
mov
push
cmp
xchg
and
xchg
call
push
icebp
outsl
movsb
push
hlt
jae
gs
outsb
cmp
xchg
sbb
dec
ss
mov
jae,pn
xor
and
sbb
movnti
cmp
scas
ja
fucom
mov
in
sar
or
lahf
add
lods
pop
in
daa
mov
mov
sbb
sbb
or
sbb
movsb
mov
stos
test
and
out
subb
mov
shlb
cwtl
pop
mov
stc
push
movsl
and
mov
dec
test
mov
repz
fdivrp
xchg
mov
adc
push
fildll
stos
pop
inc
xor
adc
js
xchg
fdivr
push
test
xchg
jnp
sbb
hlt
leave
dec
add
outsl
dec
addb
pop
decl
outsb
outsl
xor
std
or
cli
popa
or
js
scas
je
sti
out
sbbb
push
cli
stos
xchg
sbb
pop
mov
repnz
pop
xor
cmpsb
cli
jmp
iret
scas
mov
xor
daa
ja
lock
push
in
push
mov
dec
mov
jns
or
or
sub
dec
cmp
cwtl
sahf
push
push
sbb
call
xor
jp
rolb
leave
stos
test
inc
stos
mov
sub
add
cld
test
shl
mov
cltd
adc
out
xor
lcall
jb
adc
test
and
jecxz
sahf
jle
gs
js
jne
pop
cmp
icebp
or
pop
sub
xchg
pop
ljmp
push
push
leave
repz
lret
xchg
shrb
fdiv
nop
ret
fcompl
fsubs
push
add
mov
mov
mov
xor
xchg
adc
xlat
lcall
ljmp
or
movsl
push
xor
and
imul
mov
xchg
es
add
pop
sbb
xchg
out
imul
sti
dec
mov
xor
sub
sbb
mov
in
sub
test
lods
outsl
jp
and
mov
push
jae,pn
cmpsl
imul
mov
aad
jp
mov
mov
jb
jmp
aaa
cmpsb
adc
jp
sti
cmp
pop
push
mov
es
xlat
sub
push
jo
sub
xorl
xchg
adc
movsb
inc
dec
mov
mov
shl
testl
mov
divb
inc
mov
insl
add
xor
add
lret
test
loop
sbb
lret
scas
sbb
and
or
mov
loopne
es
or
testb
jp
stc
dec
rcrl
pop
repnz
mov
push
jg
and
lret
jb
mov
rclb
xchg
xor
sbb
and
adc
cltd
fucomip
imul
mov
mov
push
adc
scas
mov
mov
jmp
jge
inc
mov
xor
aad
dec
movsl
ja
movsb
dec
cli
aas
mov
cmpsb
or
mov
or
and
xchg
jl
test
adc
mov
addr16
xchg
cmp
mov
aaa
sbb
pop
inc
adc
jno
out
dec
ljmp
in
ja
out
cmp
rorb
adc
sbb
and
xor
rcrl
xchg
adc
cs
inc
orl
ret
mov
xor
cmp
push
add
mov
ficomps
fbstp
cmpl
adc
fwait
cwtl
insl
and
fcoms
test
pop
mov
mov
in
mov
outsl
adc
pop
dec
rcll
mov
push
int
sub
sbb
std
sbb
out
jae
arpl
xchg
add
xchg
sbb
sbb
sub
imul
sbb
adc
in
mov
fldcw
mov
out
cltd
dec
shr
fwait
inc
cmp
cvttps2pi
into
fs
jmp
aas
sahf
dec
pop
nop
lea
sarl
and
fisttpl
pop
ja
repnz
pop
adc
or
or
sub
lcall
sub
mov
lea
pop
or
mov
lods
in
jbe
pop
mov
dec
lea
push
mov
dec
sbb
inc
cmc
enter
inc
pop
mov
sbb
adc
adc
or
and
push
loope
gs
mov
nop
int3
lds
addb
imulb
fwait
sbb
inc
fdivl
add
inc
adc
subps
sbb
mov
cmp
fwait
cmpsb
in
outsl
test
cmpb
jg
aaa
mov
jno
in
cmpsb
push
les
out
fistps
imul
test
cs
mov
mov
fstl
ret
jb
jecxz
xor
lcall
popf
push
in
lcall
dec
mov
pushf
cld
popf
sub
in
pop
into
jecxz
lret
movl
push
call
insl
dec
cwtl
xchg
mov
ss
shlb
dec
ds
das
adc
adc
cltd
movsb
or
imul
jecxz
or
xor
shrl
js
or
bound
add
pop
out
mov
test
jnp
xlat
lods
fcomi
pop
mov
test
aas
inc
jle
and
in
int3
push
sub
shll
mov
in
cmp
lds
dec
mov
dec
dec
popw
pop
les
adc
inc
pusha
rcrb
mov
and
xor
or
xchg
rcll
insl
out
mov
push
lock
or
movsb
xorl
pop
xchg
pusha
sbb
mov
adc
jbe
mov
push
arpl
ret
or
int3
mov
repz
lea
and
mov
or
mov
in
mov
movsl
and
in
imul
and
stos
xlat
pusha
push
inc
test
bound
movsb
mov
call
cmc
in
or
sbb
ret
push
push
mov
jl
cmp
aad
dec
aas
aad
in
lahf
lods
jns
jle
xchg
or
loopne
repnz
jmp
jmp
lock
stc
xor
stc
aaa
out
add
arpl
fcompl
mov
mov
inc
or
sub
sbb
pop
shl
or
push
mov
addl
mov
xchg
xchg
sahf
nop
and
cmp
adc
dec
inc
cld
lret
xorb
or
loopne
cld
jns
sar
daa
data16
mov
jo
fidivl
dec
jno
stos
je
std
jne
xor
jge
leave
adc
adc
push
mov
out
fidivrl
fidivrs
adc
decl
mov
xor
jo
and
inc
push
addr16
test
adc
add
xchg
fs
dec
push
rcrl
dec
js
nop
jmp
pop
fisubl
cmc
add
jnp
loopne
cltd
mov
sbb
insb
in
and
sbb
adc
and
mov
shr
leave
es
lods
cs
jmp
imull
xor
jns
xor
or
pusha
dec
inc
mov
cwtl
sub
xor
fstpt
repz
cmpsb
mov
xlat
scas
mov
fadds
addr16
sbb
test
and
xor
xor
popf
xchg
inc
jl
out
xor
inc
lret
icebp
pop
sub
and
pushf
rorl
cmp
insl
pop
out
xlat
ret
fnstsw
or
xchg
shr
into
mov
pop
stos
sti
fsub
aam
icebp
aam
cmc
sub
or
dec
into
hlt
mov
mov
aam
jecxz
xchg
rcrl
mov
push
inc
bound
iret
or
enter
mov
lcall
mov
jp
scas
pushf
sahf
lock
add
hlt
je
stc
or
insl
mov
cmp
sub
inc
adc
or
je
cltd
jl
adc
lahf
loop
pop
lods
jae
pop
ljmp
dec
enter
cli
das
mov
xchg
xchg
cltd
scas
ds
or
cmp
push
aas
add
rcrb
sbb
dec
jl
inc
pusha
inc
xor
jns
pop
pop
loope
or
adc
and
adc
call
dec
sub
fiaddl
shl
rcr
inc
mov
inc
push
lds
ret
je
jo
shrl
aas
arpl
jp
outsb
xorb
pop
cmp
xor
pushf
int
and
xchg
cmp
sbb
outsb
cmp
mov
push
inc
and
mov
jns
pop
dec
in
xor
stos
js
push
stos
and
lret
shll
sbb
mov
jge
shrb
dec
in
imul
push
jp
int3
les
andb
mov
cmp
add
push
mov
add
repz
or
daa
jae
ret
mov
push
jno
call
add
or
cmpsb
xchg
hlt
jns
jnp
adc
imul
in
xorb
add
repz
ret
sahf
jne
mov
test
xor
lret
push
jecxz
or
stos
mov
hlt
or
stos
pushf
popf
mov
imul
cmp
fnsave
rcll
repnz
pushf
in
sub
inc
xor
js
out
shll
push
ljmp
sub
shrl
dec
rol
loope
js
jae
push
pop
hlt
imul
inc
or
push
int3
mov
jne,pt
adc
and
js
lods
mov
xlat
or
pop
inc
xchg
pop
push
xchg
outsb
pop
js
leave
adc
or
jp
push
mov
mov
aam
repnz
ja
and
add
lods
ficompl
and
pushf
ds
mov
jns
int
pop
jbe
pop
cmp
add
dec
sub
inc
insb
cmp
dec
loopne
in
mull
sbb
sbb
jo
cmpl
mov
add
cs
and
cmc
cmpsb
or
clc
cli
xor
ja
jbe
mov
jbe
imul
adc
push
push
and
sti
push
jmp
xchg
cmpsl
or
icebp
mov
mov
mov
clc
out
or
jp
lcall
sub
stc
and
fisubs
dec
pushf
push
sahf
mov
xor
addb
sti
sub
inc
loopne
leave
lea
adc
fstpt
test
xchg
xchg
movsl
icebp
pop
cli
cmp
sbb
outsb
add
cmpsl
xor
mov
cli
sub
add
xchg
les
push
js
aad
icebp
leave
cwtl
imul
aas
jno
jbe
sbb
cmp
mov
setp
pusha
add
mov
jmp
push
pop
or
jnp
mov
icebp
xchg
scas
in
stos
repz
outsb
in
loope
add
nop
dec
outsb
movl
and
inc
and
stos
test
or
sbb
or
outsl
out
and
test
and
mov
rorb
js
inc
jns
cmp
cmp
cmp
adc
cli
call
mov
dec
or
cmp
movsl
and
jl
sahf
pop
cmpsb
dec
lods
sbb
scas
cmp
mov
mov
adc
insl
aaa
das
xor
xchg
cli
xor
ret
jnp
enter
in
scas
sarb
cld
push
insl
xchg
mov
mov
jge
fnstenv
stos
xchg
mov
int3
incl
pop
mov
xlat
popa
pop
ss
sub
xlat
cld
movsb
aam
or
sbb
repz
lret
fdivs
mov
iret
jp
push
mov
cmpsl
lcall
sahf
xor
mov
inc
inc
add
xchg
adc
push
sti
fisubrs
loop
inc
mov
mov
mov
das
mov
insb
lcall
sub
jae
or
or
xor
ljmp
popa
adc
outsb
cs
and
iret
aaa
clc
and
fisttps
xchg
nop
fldenv
or
mov
in
sbb
out
cmc
out
cltd
jbe
leave
pop
sbbb
sbb
add
adc
pusha
imul
cltd
int3
cwtl
jl
sbb
cltd
mov
push
mov
cmp
jle
mov
mov
jl
out
adc
push
or
mov
adc
push
mov
adc
pop
test
mov
shll
pop
dec
pop
movsb
mov
je
sti
insb
pop
sbb
jb
out
mov
loop
lret
pop
jg
lds
mov
dec
js
push
cs
lret
mov
pop
mov
inc
sar
mov
ret
and
xchg
repnz
dec
mov
aad
cli
or
xor
mov
sarl
lds
xchg
add
add
pop
sahf
mov
mov
xorl
add
or
mov
adc
adcb
jo
enter
ficoml
idivl
test
push
pop
inc
adc
loop
test
lods
add
push
lea
pop
push
out
mov
lahf
scas
xor
addr16
ret
mov
sub
cmpsl
mov
inc
add
lret
jnp
or
push
adc
mov
lock
add
imulb
mov
imul
stc
push
pop
inc
mov
sub
repnz
mov
dec
sarb
push
pop
xor
dec
fidivrl
aam
add
jo
das
js
jns
shll
sbb
scas
arpl
push
add
popa
scas
mov
inc
or
inc
jns
cli
stos
adc
and
pop
in
jge
xchg
or
or
imul
addl
and
outsl
pop
fildl
fprem1
dec
test
xor
jg,pn
adc
push
movsb
push
push
enter
push
push
pop
xchg
mov
ja
mov
repz
ret
call
mov
push
sti
divb
or
stc
sub
mov
call
xor
jle
stos
and
pop
dec
ljmp
push
ret
aaa
mov
mov
lods
sub
jle
sub
mov
bound
stos
aad
rcrl
sub
mov
les
shrl
mov
loop
fwait
jmp
imul
dec
adcl
loop
push
sbb
jmp
arpl
mov
lock
dec
jnp
rcr
xor
sub
jecxz
fs
loop
mov
mov
adc
rorb
xor
cmp
mov
xchg
out
cli
or
aad
loop
loopne
lods
push
cmp
pop
mov
pop
xchg
or
mov
add
nop
cmp
cmp
xor
movsb
ds
rorl
push
sbb
mov
pop
jb
pop
jne
cli
or
pop
xlat
cld
testl
and
adc
insb
mov
pop
jp
ds
mov
fcoms
pop
stc
psllq
bound
icebp
insl
mov
std
std
dec
repz
pop
cs
push
add
loope
in
inc
je
aad
icebp
or
jno
cmc
add
push
std
pop
pop
or
fs
push
nopl
xchg
mov
mov
pop
adc
in
mov
jmp
dec
repnz
xchg
sahf
or
push
lods
mov
je
cli
push
in
inc
sub
out
jmp
sub
stos
outsl
ljmp
dec
icebp
adc
in
subl
mov
lods
into
mov
pop
icebp
repnz
jne
cmp
fidivrs
clc
jg
movsb
fs
jg
xor
rorl
pop
xlat
mov
cli
loopne
jns
popl
adcl
daa
sub
jnp
sub
cmp
repnz
cmp
push
cmp
in
sbb
mov
arpl
mov
arpl
out
lock
push
adc
cmp
sbb
jnp
dec
add
xchg
js
mov
inc
in
xchg
mov
pop
and
mov
out
hlt
in
xchg
xchg
adc
icebp
insl
sbb
data16
mov
push
testb
jbe
xchg
add
xor
mov
fcoml
lcall
xor
pop
lds
pop
cmpsb
aaa
inc
pusha
xchg
not
stos
dec
mov
js
test
dec
int3
or
mov
adcl
sbb
cmpb
mov
and
sbb
test
cmp
bound
nop
sbb
subb
push
jge
std
xorl
andb
push
in
mov
dec
in
adc
push
jg
lds
popa
fldl
loopne
jle
jl
pop
cmc
rcll
mov
sub
jmp
push
repz
into
push
xor
inc
mov
mov
fdivr
mov
fcoms
xchg
pop
clc
push
mov
lock
scas
pushf
and
adc
xchg
cltd
shld
or
clc
and
xchg
jmp
data16
outsl
dec
je
mov
xlat
and
mov
dec
jae
je
jo
dec
push
out
and
loop
xchg
out
push
fstpt
out
xchg
arpl
xchg
mov
test
icebp
and
pop
jmp
clc
std
aas
out
imulb
push
out
xchg
sbb
add
insb
mov
sub
or
xor
jns
popa
icebp
test
xchg
mov
jp
je
cmp
or
lock
ds
sbb
fucomip
mov
rclb
test
mov
xchg
shrl
xor
cmpl
jmp
and
fisttpll
lcall
jo
es
mov
dec
decb
pushf
nop
insl
push
push
in
cs
sti
lods
mov
aaa
or
sbb
fbstp
lret
mov
fmul
or
or
insl
pop
hlt
pop
dec
popf
cmp
idivl
popf
mov
and
loope
cmp
dec
fsubrp
push
lcall
imul
repz
mov
push
lahf
xchg
in
mov
sub
jbe
xlat
push
out
inc
repnz
movsb
sub
xchg
push
inc
enter
inc
iret
mov
push
lods
push
mov
inc
aaa
mov
imul
pop
das
jnp
jle
mov
mov
iret
and
sti
orl
pop
inc
lcall
hlt
jb
xchg
mov
jmp
xchg
cmp
fsubrs
mov
sti
xchg
ret
jl
inc
and
enter
fdiv
andb
mov
cwtl
dec
add
in
xor
xchg
out
and
gs
push
fwait
jge
push
cli
mov
repnz
cmp
out
dec
pop
lahf
fildll
imul
adcb
clc
sbb
ffreep
ficompl
dec
negb
test
in
pop
xchg
inc
test
cmp
jp
xchg
loopne
lahf
push
lods
and
xchg
jg
cltd
int3
or
sub
cmp
mov
lods
mov
pop
jl
push
push
push
inc
mov
add
sbb
push
push
xor
lahf
or
inc
mov
push
sub
insb
push
push
pop
into
dec
adc
out
add
std
fadds
jmp
out
mov
jmp
mov
in
fbstp
xchg
cmp
cmpsb
out
cmp
add
mov
mov
adc
mov
sub
sahf
sbb
rorb
sub
cli
repnz
xor
sub
inc
xchg
or
fsubs
pop
popl
and
push
out
jno
jnp
repnz
sbb
jge
xchg
insl
and
push
mov
inc
loop
test
lods
icebp
fnstcw
and
gs
push
adc
fildl
lret
mov
sbb
int3
fstpt
mov
mov
bound
dec
mov
xchg
lret
adc
ficoms
jecxz
mov
or
fs
or
test
test
or
push
es
lods
mov
jns
xlat
pusha
inc
mov
mov
inc
pop
dec
scas
xchg
loop
repnz
mov
mov
stc
lds
xchg
insl
mov
std
fadd
cmp
shll
ja
jb
enter
int3
fwait
sbb
sar
sub
mov
push
sub
mov
cmpsb
inc
vsubps
jl
pop
imul
adc
push
xor
push
fcomps
out
leave
enter
sarl
adc
clc
jge
or
sub
fwait
jnp
rcrb
xchg
mov
add
jno
in
insb
in
cs
filds
pop
sahf
out
adc
cmp
cltd
sbb
test
aaa
sub
dec
sub
push
psrad
mov
xor
in
js
pusha
cld
or
cmc
xor
jae
dec
sub
scas
xchg
fimull
fbstp
popf
add
mov
jae
std
jge
pop
cltd
sbb
push
notb
xchg
jl
push
sbb
fldl
pushf
bound
movsb
leave
roll
mov
movsl
call
or
dec
pop
and
push
cmpsl
xor
fnstsw
push
mov
cmp
xchg
push
jl
roll
inc
push
cltd
loopne
mov
pusha
popa
sbb
add
fsts
in
xchg
stc
orb
aad
sbb
sar
mov
pop
outsb
cmp
outsb
outsl
jbe
data16
lret
and
subl
adc
push
out
cwtl
ljmp
sar
cmp
out
add
out
lock
adc
andl
add
fisttpll
xor
mov
divb
xchg
gs
mov
jge
push
sub
repnz
or
jnp
loopne
imul
scas
mov
bound
add
loope
popa
cmpsl
loope
adc
mov
xchg
or
test
decl
adc
sahf
push
jecxz
scas
push
adc
jge
mov
or
dec
dec
lcall
lret
fs
sbb
cmp
xchg
loop
popf
mov
dec
stc
iret
gs
movsl
mov
xlat
les
ds
fsts
mov
inc
sub
mov
cmp
leave
out
jo
int3
xor
push
mov
adc
js
icebp
ss
stc
cwtl
jnp
les
cmp
jns
and
pop
mov
pop
ret
xchg
and
add
daa
fildll
push
mov
push
or
scas
fld
outsb
jmp
dec
imul
jge
mov
jg
mov
xchg
sbb
and
in
xor
push
movsl
lret
and
xor
xchg
jno
add
xchg
add
fimuls
adc
lds
mov
adc
inc
ja
es
push
notb
xchg
scas
push
fistps
mov
adc
scas
add
jo
dec
and
xchg
dec
push
je
shll
inc
pop
sub
ret
lods
pop
das
or
aam
or
pop
add
bound
add
fsubrs
in
call
mov
shll
inc
test
sub
mov
cmp
pop
mov
bound
sarl
ljmp
sub
addr16
daa
cltd
out
out
outsl
mov
cmpl
xlat
lock
cltd
lahf
mov
imul
stos
mov
push
out
enter
inc
sar
xor
inc
jl
add
clc
add
and
nop
cwtl
fcompl
aas
cmp
add
xor
jne
leave
rcll
clc
inc
mov
rol
push
jl
mov
lds
imul
mov
addb
pop
cmpsl
ljmp
mov
adc
out
mov
mov
add
adc
jecxz
icebp
xchg
loop
add
xor
dec
sbb
gs
leave
xchg
ret
dec
mov
mov
int
es
add
flds
cmp
xchg
jnp
clc
xchg
sbb
fisubrs
dec
gs
arpl
cmc
call
inc
repz
xchg
xchg
mov
inc
icebp
mov
test
mov
push
xchg
fdiv
adc
loopne
es
clc
sbb
and
outsl
jo
stos
enter
pop
leave
sahf
and
repnz
jmp
rcrl
js
xchg
loope
mov
mov
ja
fcmovu
pop
test
addr16
ficoml
dec
add
call
hlt
inc
and
jge
aad
leave
hlt
ljmp
jne
push
jno
int
xor
push
inc
sub
add
pop
test
ret
mov
aam
test
jo
mov
sub
adc
xchg
mov
and
jbe
filds
pop
loopne
adc
pop
pop
mov
jae
xchg
or
pop
mov
mov
dec
mov
sti
push
mov
outsl
stos
pop
mov
pop
push
or
test
inc
fcmovbe
jne
push
inc
or
push
test
cld
outsl
sbb
xor
cmp
jg
cmp
lock
repnz
imul
dec
lahf
add
jbe
les
insb
sahf
and
jae
out
pop
cmpsb
aam
sbb
ret
daa
cmp
rcrb
sub
sub
xchg
inc
xchg
fistpll
pop
movsb
mov
or
pop
fcmove
ret
inc
xor
push
jmp
push
jecxz
lds
clc
cld
sti
pop
int3
and
jns
aad
and
fmull
jo
push
or
adc
pushf
clc
or
xor
dec
jmp
clc
aas
mov
int
add
jmp
out
mov
add
rolb
and
mov
addl
hlt
adc
lret
and
cmp
sub
xchg
shl
and
mov
lret
pop
push
and
and
mov
add
insb
popf
pop
adc
jle
push
mov
mov
inc
sub
pop
mov
jp
aad
add
icebp
pop
stos
push
mov
in
add
jb
dec
lods
push
dec
mov
sbb
jbe
mov
lds
sti
mov
inc
mov
js
fbld
mov
and
ss
cmp
test
test
sti
pusha
add
jle
insb
push
sbb
jmp
out
scas
add
rclb
xchg
arpl
pop
lods
and
ljmp
xchg
data16
call
mov
push
insb
aaa
mov
xor
movsl
inc
fisubrl
xchg
lds
mov
loope
fistpl
cmc
sub
or
pop
ret
int3
ds
dec
and
lds
stos
dec
das
dec
push
loopne
inc
xor
dec
adc
lret
mov
jae
mov
repnz
mov
and
mov
pop
movsl
jae
sbb
int
pop
dec
fs
insl
rcr
adc
inc
fucompp
aaa
ja
push
movb
hlt
pusha
pushf
jns
inc
and
roll
mov
cmp
aam
fcompl
rolb
das
mov
cltd
cwtl
dec
inc
out
add
fmul
shrb
add
xchg
cld
jp
out
mov
getsec
sbb
sub
cmp
cmpb
add
out
mov
add
test
mov
ret
or
dec
fsubrl
mov
cld
mov
jmp
lea
sub
mov
jmp
test
aad
test
push
js
addb
sbb
jmp
cmp
or
jne
mov
mov
add
pop
rolb
inc
imul
push
sub
mov
scas
add
or
sbb
or
nop
mov
jge
xor
push
cmp
xor
lods
adc
dec
xor
mov
pop
xor
es
cmpsl
inc
lods
mov
cld
pop
dec
int3
xchg
add
push
mov
sbb
flds
aam
push
xchg
in
and
les
cmpsb
ljmp
push
bound
ljmp
cld
sbb
enter
das
scas
inc
inc
cltd
icebp
call
ljmp
xchg
mov
push
jmp
or
inc
jge
pop
xchg
popf
mov
adc
enter
cld
fwait
lods
xchg
inc
ljmp
mov
aad
dec
mov
push
mov
mov
jge
xchg
mov
fidivs
das
leave
cli
cmp
sbb
movsb
sahf
jno
int3
mov
or
mov
test
xchg
inc
rclb
push
popf
daa
in
cmp
sbb
cmc
dec
ljmp
push
mov
push
leave
and
push
hlt
sub
cmp
add
popf
jmp
adc
dec
aaa
cld
sbb
enter
inc
mov
jbe
lret
arpl
or
adc
cmp
push
je
ja
loopne,pn
mov
adc
push
jle
hlt
xor
repz
jb
test
lods
icebp
pushf
mov
loope
test
es
pop
dec
xor
ljmp
mov
push
cltd
flds
mov
arpl
push
scas
scas
call
xchg
and
mov
loope
sbb
scas
movsb
std
fcomip
in
pop
lcall
add
cltd
mov
subb
call
push
or
jg
xorb
nop
dec
add
and
push
insl
sbb
add
int
adc
ret
jmp
mov
mov
dec
arpl
mov
fcmove
mov
jns
pop
push
orl
pop
mov
push
aad
push
mov
fwait
leave
dec
pop
push
daa
sar
dec
les
jmp
and
sahf
ds
loopne
xchg
out
ja
test
stos
movsl
ficompl
in
loope
test
fstpl
cld
leave
std
jns
sbb
pop
push
sub
test
jl
inc
sbb
in
movsl
mov
sbb
std
cmpsb
push
sti
cld
pop
cwtl
testl
add
ficoml
xchg
jle
inc
push
push
and
pop
jne
xchg
push
in
lds
stos
out
fwait
aam
cmp
jp
mov
sub
sbb
cmp
xchg
mov
mov
repnz
es
insl
fcoms
out
fwait
test
insl
addb
outsb
out
mov
lea
sbb
pop
mov
cwtl
nop
aam
add
mov
mov
jmp
jmp
ljmp
popf
pop
test
insb
jecxz
iret
jge
xchg
cmpsb
cmp
push
or
add
dec
adc
cli
or
adc
pop
jne
lods
inc
cmpsb
and
insl
mov
sbb
in
repnz
cmp
sti
xchg
rcrl
stos
dec
and
inc
sub
cltd
bound
movsl
mov
mov
test
ret
insl
pusha
addr16
pushf
mov
jne
sub
jecxz
or
out
test
pop
dec
mov
mov
push
lret
mov
pop
fisubrl
iret
fistps
mov
pop
lea
loop
scas
xchg
shl
fdivrl
xchg
push
aaa
and
popa
rolb
in
repz
push
div
lods
sbb
aaa
fmul
sub
xchg
and
in
dec
jle
das
pop
lahf
das
sub
fcoml
push
shr
repnz
scas
sti
frstor
loop
jns
pop
and
dec
sar
and
pusha
dec
jno
ja
fcompl
fmul
push
sub
jp
les
ja
xchg
jne
movsb
mov
push
sarb
inc
shrb
mov
or
mov
fsubrl
imul
push
mov
ja
sbb
shl
ja
mov
jecxz
insl
and
ljmp
add
cli
jp
pop
mov
jp
ja
pop
push
xor
and
lret
pop
lods
stos
mov
lret
je
xchg
pop
sarb
test
inc
inc
aam
push
jne
dec
inc
mov
or
add
fcoms
popa
cltd
push
push
jle
jns
jae
cmp
sub
imul
pop
xchg
mov
enter
bound
pop
adc
adc
mov
dec
mov
stos
loop
clc
dec
fsubrl
add
adc
scas
out
jle
add
inc
sbb
or
mov
sub
fwait
jae
mov
out
sub
ss
jo
lcall
ret
push
jmp
in
adc
cmpl
jge
jp
mov
dec
imul
jge
fisttps
push
jbe
jg
xlat
popf
push
pop
in
pop
int3
in
jns
jne
mov
mov
pushf
mov
jge
ret
cmp
ret
mov
outsl
and
mov
cmpsl
mov
cmpsl
lds
push
into
cmp
jne
xchg
and
push
je
dec
jecxz
sarl
js
sub
insb
sbbl
jns
mov
mov
out
es
imul
mov
es
stc
lea
mov
xlat
xor
call
lods
outsb
fbstp
fcmovbe
cld
cmc
adc
xchg
rcrb
aam
xlat
push
test
jno
pop
jne
divb
inc
or
enter
add
test
cmpsl
fists
fmul
repz
icebp
bound
pusha
xchg
mov
repnz
fnstcw
out
in
loopne
push
xor
or
mov
push
push
cli
inc
pop
add
xchg
push
imul
enter
jnp
shrl
test
stos
jnp
fistpll
lock
pop
mov
scas
fwait
lock
sub
mov
nop
xchg
mov
mul
xchg
mov
cmpsb
in
push
adc
mov
mov
mov
fs
cmpb
push
rorb
xchg
xchg
mov
inc
add
lret
cmp
bound
or
push
cmpsb
in
push
jg
mov
mov
and
xchg
ja
testb
mov
sub
iret
jo
or
cmp
ljmp
mov
fcoms
call
insb
pop
out
int3
mov
dec
loop
xlat
cmpsb
pop
dec
addr16
in
pop
or
fnstcw
xor
leave
clc
xchg
pop
add
shr
pop
jae
in
push
aad
imul
ret
stos
sub
jge
lcall
nop
rcl
repnz
jge
lcall
das
rclb
jge
dec
xchg
or
dec
xchg
xor
icebp
mov
lds
es
mov
mov
cs
cmp
outsb
or
movb
dec
inc
repz
jmp
push
sub
adc
call
mov
xor
push
mov
jl
popa
data16
pusha
xchg
pop
and
das
cmc
and
icebp
jnp
mov
push
sar
add
test
mov
or
add
sbb
rcrl
and
nop
push
sub
jnp
fnstsw
jo
or
cmpsb
das
outsl
mov
call
cmc
int3
sti
jle
pop
dec
mov
mov
lahf
fmuls
loop
int3
outsb
xor
cltd
sub
lret
mov
int
mov
outsl
and
jl
sub
imul
push
xor
mov
test
adc
pushf
outsb
mov
stos
mov
sar
mov
push
sbb
xchg
sbb
dec
addr16
mov
mov
mov
lret
jne
sbb
ja
pusha
sub
cltd
lds
add
arpl
add
inc
add
loopne
scas
cwtl
js
cmp
sbb
mov
or
cmp
int
mov
test
xchg
sarl
fcoms
cli
leave
dec
sbb
aas
std
sbb
test
adc
mov
rcrl
push
iret
mov
pop
and
fbld
loope
incb
push
or
ds
in
mov
mov
adc
jns
jle
and
push
jp
and
xor
or
xchg
add
jl
push
and
daa
fisttpll
add
xchg
xchg
shlb
mov
xor
mov
out
xchg
fcomi
or
and
xchg
xor
lods
or
rcrl
mov
cmp
std
and
sbb
insl
arpl
lcall
push
addr16
xor
jmp
mov
in
jns
in
imul
jl
loop
inc
inc
pushf
dec
mov
into
fs
mov
sahf
lock
jo
add
maskmovq
cmp
mov
ss
shl
sbb
popa
push
fisttps
imul
inc
mov
repz
shlb
xchg
mov
pop
mov
ja
mov
js
jge
xor
xchg
cld
fs
adc
mov
xchg
cwtl
pop
outsl
inc
out
mov
sbb
test
mov
mov
inc
sub
pop
pushf
leave
jmp
mov
mov
mov
dec
sub
cmp
out
ljmp
mov
jp
ret
mov
lcall
xor
out
mov
cs
je
std
lea
add
js
movsb
movsl
std
adc
call
mov
jmp
xor
mov
pop
xchg
pop
aas
add
pop
push
sbb
and
and
inc
incl
sbb
dec
sti
push
add
adc
or
sbb
repz
in
push
outsl
js
pop
dec
and
mov
je
mov
mov
push
dec
sub
push
dec
mov
mov
and
cwtl
and
jne
mov
rcrl
aad
sub
js
add
in
sti
dec
test
cmp
pop
clc
shl
sbb
fidivs
xchg
iret
adc
stos
into
adc
dec
mov
movhps
jnp
xchg
adc
fldenv
cltd
jnp
mov
sub
inc
leave
jecxz
push
sub
popf
xchg
mov
push
xchg
test
sti
notl
adc
andl
dec
fadds
cmpsl
mov
or
das
ja
jae
xlat
mov
add
xchg
push
sbb
lods
test
cwtl
dec
fbld
clc
mov
dec
bound
jns
or
rorl
push
shll
insb
inc
mov
mov
scas
dec
lahf
das
sbb
pushf
sub
mov
loop
dec
out
aaa
push
and
out
mov
jno
and
dec
push
sti
popf
popa
push
dec
or
and
rorb
jmp
push
pop
mull
outsb
push
hlt
ja
es
faddl
aas
mov
sub
mov
jb
xor
int3
rcrb
cwtl
subb
dec
jge
ja
sbb
mov
daa
sbb
add
xlat
popf
adc
inc
xchg
inc
adc
xor
jle
hlt
xchg
dec
stos
rclb
mov
enter
mov
imul
stos
cwtl
sub
add
jne
pop
inc
xchg
adcb
and
push
jp
sbb
lret
pop
inc
and
ret
and
loope
repz
add
mov
ss
or
mov
aad
fwait
jbe
das
jno
push
mov
repz
xchg
mov
push
in
pop
inc
std
leave
push
les
and
pop
nop
loopne
frstor
pop
out
mov
das
dec
pop
jp
test
inc
aas
enter
jg
pop
mov
mov
and
and
pop
pop
cmpsb
push
mov
xchg
lea
addr16
mov
or
add
mov
sbb
push
fisubl
mov
pop
call
inc
das
sbb
gs
sbbl
pop
repnz
ss
cmp
in
mov
fdivrl
xchg
jne
jnp
lcall
popa
mov
add
cmpsl
daa
adc
sub
ja
icebp
dec
inc
jnp
mov
and
pop
add
mov
and
out
fcmovb
push
insb
scas
insl
sbb
xchg
test
das
xchg
clc
and
stc
repz
fimull
stos
mov
push
and
ljmp
in
loop
fs
sahf
std
sub
loop
sub
test
add
xchg
paddsw
fimuls
stc
movsl
stc
mov
addr16
jg
cltd
scas
mov
or
popa
sub
test
jnp
sub
mov
and
lock
cmc
sub
lret
push
ror
nop
push
and
mov
cmp
dec
repz
sahf
xor
mov
mov
xchg
mov
ja
shrb
std
jl
out
ret
pop
stc
jp
add
jle
cmp
scas
in
ficompl
inc
push
mov
jmp
xchg
into
xchg
addr16
ljmp
fstl
fwait
add
and
and
adc
dec
cmp
rol
fstpt
inc
push
push
call
sar
jbe
insl
stos
add
xchg
les
std
fimull
mov
add
pop
pop
jp
push
mov
aas
pop
jb
push
ficomps
mov
push
pop
daa
ret
mov
ret
iret
nop
pop
sahf
popa
and
xchg
xlat
mov
dec
int
sub
add
sub
mov
sti
ror
sub
jnp
cld
inc
xor
xor
nop
inc
mov
popf
test
sbb
adc
sbb
dec
or
jge
stos
nop
in
add
mov
push
lock
xor
push
pop
mov
xchg
test
sbb
fwait
xchg
xchg
out
rorb
orl
sahf
mov
sbb
mov
mov
cmp
ret
inc
add
push
inc
sub
test
std
mov
inc
mov
xor
mov
lret
das
push
in
xor
xor
mov
dec
mov
cld
pop
je
ja
lods
mov
dec
cmp
stos
mov
lret
pop
cmpsl
or
adc
adc
push
cltd
mov
jl
das
cmpsl
int3
fiadds
scas
je
fwait
sar
pushf
cmp
rcrb
gs
lret
js
popa
sub
xor
cmp
dec
mov
ret
mov
adc
or
mov
test
movsl
push
push
cmpb
ret
in
xor
inc
mov
mov
fdivs
fsubrs
orl
adcb
and
pop
pop
ficoms
dec
pop
lret
movsb
pop
xor
sti
lods
dec
jg
or
je
cltd
xchg
sub
sti
dec
sbb
lcall
icebp
out
orl
push
addr16
fmull
add
movsl
mov
out
add
jnp
ret
test
ret
gs
mov
ja
and
mov
inc
scas
addr16
sub
push
clc
dec
sub
imul
xor
lret
jae
jnp
dec
repz
addr16
add
mov
and
ss
mov
pusha
adc
into
mov
scas
repnz
rorl
pusha
aas
or
mov
cmp
xchg
and
cld
das
adc
jnp
orb
cmc
and
imul
iret
push
addl
lret
jle
into
mov
frstor
and
sbb
sbb
push
mov
nop
dec
in
repnz
cltd
or
into
mov
cmp
dec
cmp
sbb
jmp
mov
lea
cld
int
mov
mov
loopne
mov
bound
out
out
cmp
pop
repz
sbb
mov
push
push
test
subl
sbb
pop
mov
dec
and
cmp
xchg
into
push
adc
fs
jg
cmc
cmc
cli
add
xchg
pop
pushf
mov
es
push
shll
or
shlb
imulb
out
stc
mov
mov
jecxz
cmp
daa
xchg
sbb
stos
cmp
mov
int
or
cmp
repnz
lds
ljmp
inc
aas
stos
sbb
sbb
adc
mov
push
inc
xchg
stos
cmp
jae
das
or
inc
hlt
loope
aaa
mov
jge
cmp
loopne
dec
aaa
xorl
ss
hlt
xchg
adc
in
ljmp
sub
daa
pop
and
mov
mov
pop
and
in
inc
cs
loope
fcmovnb
mov
rclb
sub
stos
sub
pop
dec
lods
mov
imul
mov
test
mov
aam
es
xor
and
insb
sub
ret
ljmp
or
xchg
arpl
add
das
jl
cmp
jo
out
leave
fwait
loopne
test
mov
js
add
jns
mov
cmpl
pop
jb
xor
stc
or
xchg
inc
inc
and
pop
push
in
stos
xchg
and
adc
jb
mov
adc
and
imul
cmp
test
cs
adc
int3
adc
repnz
push
out
jns
testl
int
ss
dec
mov
dec
repnz
lcall
les
addr16
pop
movsl
test
js
fld
xlat
xchg
repnz
aad
xor
add
jbe
lahf
inc
sar
testb
and
xchg
clc
jge
mov
cmc
sub
mov
sub
dec
les
mov
cltd
jl
mov
or
test
xor
aam
sbbb
outsl
das
push
inc
jo
mov
cs
nop
adc
sub
fiadds
adc
mov
mov
stos
and
jecxz
rol
push
jecxz
cltd
test
push
adc
push
sub
sub
sub
stc
dec
sti
xchg
pop
test
psllq
xchg
push
jae
add
jmp
inc
jl
or
repnz
outsb
cmp
inc
inc
imul
jle
popf
rol
add
adc
add
pop
xchg
push
push
dec
lcall
imul
xor
test
or
cmp
mov
aas
jno
pop
loope
ret
xor
out
cltd
fists
sbb
int3
and
nop
mov
sti
das
scas
pop
add
lods
add
das
or
mov
ret
loop
inc
xchg
popa
movsl
mov
dec
mov
xchg
xchg
dec
mov
cwtl
dec
mov
pop
mov
pushf
js
mov
stos
call
fildll
xor
or
enter
and
lock
add
insb
push
lahf
cltd
sbb
sbb
lock
call
dec
or
fcomi
adc
inc
fisttpll
and
pop
fwait
aaa
lahf
cmp
add
sar
inc
add
sbb
pop
pop
xchg
es
lcall
add
lret
cmc
add
sbb
mov
jecxz
push
fwait
xchg
cmp
fcomps
sahf
mov
out
jnp
ljmp
test
mov
mov
push
cltd
xchg
inc
pop
dec
inc
sti
mov
jle
mov
lret
testl
imul
call
mov
sbb
inc
mov
inc
inc
xor
das
sbb
fs
adc
add
es
add
jg
mov
and
ror
xor
push
push
fwait
add
xor
fstpl
nop
nop
or
jns
and
cmpsb
mov
ffreep
orb
inc
pop
adc
cmp
fwait
inc
test
mov
fs
lds
cs
xchg
ds
add
in
xchg
push
or
out
fisttpll
pop
insl
pop
bswap
icebp
loop
lock
mov
pop
pop
insb
push
sbb
xor
xor
jl
fld
decb
mov
sub
mov
fwait
inc
sti
sbb
adc
jmp
test
add
cltd
in
and
int3
cmp
ljmp
cmp
mov
ret
mov
add
gs
ret
ret
mov
cmp
test
push
mov
sar
out
mov
cld
cwtl
jl
sbb
push
stos
ja
ds
scas
pop
aaa
sub
add
cmp
pop
lock
push
mov
or
xchg
sbb
dec
and
pop
xor
push
push
adc
gs
jo
mov
jbe
add
dec
inc
inc
scas
xorl
dec
and
pushf
and
ficoms
clc
or
pop
xchg
in
pop
sub
adc
es
ds
add
jb
sub
lods
nop
ds
loopne
mov
jmp
stos
sub
add
je
notb
sub
repnz
sarl
sub
insl
jb
mov
dec
mov
nop
jbe
jns
mov
jne
icebp
xchg
inc
or
xchg
pusha
sbb
faddl
push
mov
idivb
movl
mov
je
sbb
sbb
aad
insl
shrb
sub
dec
mov
jnp
popa
rcl
fwait
inc
and
push
or
shlb
mov
dec
addr16
por
and
sbb
js
mov
ljmp
outsl
jge
aam
add
imul
test
xor
mov
mov
xor
idivl
sbb
add
jmp
inc
lods
dec
sbb
fwait
pextrw
retw
xor
lods
mov
xchg
inc
dec
jno
inc
adc
leave
and
xorl
push
outsl
fs
xchg
push
inc
pop
sarl
jp
inc
xlat
test
xlat
jmp
mov
and
imul
popa
or
add
fidivrl
cmc
pop
jnp
push
jmp
ret
lea
add
into
aad
sbb
aam
pop
cld
push
dec
in
pop
sub
bound
add
test
cmp
jb
outsl
in
inc
xchg
lcall
and
fnstsw
adc
push
popf
les
loopne
bswap
loope
push
dec
loopne
sub
arpl
out
sbb
xor
pushf
or
and
lods
testl
jbe
lcall
xlat
push
inc
hlt
push
loopne
xchg
shrb
sub
mov
mov
jb
inc
jae
inc
fdiv
popf
xchg
inc
sbb
flds
add
std
sub
push
hlt
inc
mov
mov
jecxz
leave
jne
pop
mov
icebp
jmp
mov
push
loopne
add
iret
mov
scas
repnz
hlt
sbb
fsubrs
lods
in
sbb
pop
pop
or
ljmp
fsubrp
cmp
fildl
insb
scas
dec
stc
arpl
nop
lcall
out
mov
ss
test
aad
mov
push
repz
jp
out
ror
push
mull
pop
or
rol
fs
inc
int3
hlt
adc
cmp
int3
adc
lods
sbb
sbb
xor
mov
shlb
mov
jne
loop
push
lds
xor
xchg
clc
pand
outsb
lret
xor
andb
ljmp
repnz
gs
lcall
mov
je
ret
cli
push
push
cmpsl
mov
jmp
fcoml
das
in
cmc
rcl
repz
dec
xchg
pop
push
and
cmp
adc
lds
jp
rorb
lds
in
cmp
sbb
and
outsb
and
arpl
in
jo
and
loope
pop
pop
adc
insb
jnp
jge
xchg
arpl
sub
adc
mov
fcoml
or
or
and
mov
aaa
or
pop
push
xchg
insb
stos
mov
xor
adc
movsl
fwait
jnp
mov
lods
int3
push
jmp
mov
ja
xchg
or
inc
inc
clc
mov
shlb
pop
mov
shlb
das
lret
loop
push
ret
pop
push
add
sub
jecxz
inc
sub
dec
or
sarl
sub
rclb
xchg
gs
ror
inc
les
xor
icebp
mov
adc
popf
loope
sbb
test
sbb
jl,pt
loop
orb
push
mov
jmp
scas
and
loop
je
xorl
clc
add
cltd
add
push
lret
lds
sar
mov
je
pop
iret
nop
imul
outsb
pop
sub
push
jl
dec
cmp
xchg
test
pusha
andb
mov
mov
fists
cli
scas
xchg
out
and
aam
movsb
mov
cmp
adc
mov
or
jb
inc
add
in
mov
pop
pusha
or
es
cmp
sbb
pop
sti
scas
call
cmp
pushf
xchg
sbb
adc
sbb
test
xchg
imul
subb
shrl
stos
add
test
addr16
pop
rorl
test
push
cmpsb
hlt
add
dec
or
popf
push
xchg
pop
xlat
push
das
movsb
int
sbbb
sub
xor
xchg
iret
lahf
repnz
mov
clc
xchg
jbe
xor
lcall
or
mov
js
stos
adc
sub
inc
cs
mov
sbb
ret
aas
xor
outsl
sbb
jecxz
lahf
jmp
sub
test
out
jne
jmp
aas
sti
rep
fwait
or
pop
pop
aaa
adcl
test
push
divb
adc
xor
int
out
arpl
test
xor
fiaddl
dec
push
invd
lahf
cmp
call
in
push
adcl
jne
das
in
fs
cwtl
dec
sub
cmp
mov
or
cltd
sbb
mov
xchg
cmpsb
fs
das
jp
cmp
mov
and
cmp
ja
or
fdivrl
pop
rol
cmp
outsb
loop
pop
mov
das
adc
bound
adc
test
arpl
ficomps
test
xchg
adc
push
pop
sbb
mov
jne
ficompl
pop
jp
sahf
mov
inc
pop
insb
mov
stc
push
movsb
inc
xchg
test
sarl
lret
icebp
push
xor
ret
in
push
adc
fwait
inc
cmp
std
rcrl
outsl
lods
cmp
inc
adc
fisubrl
into
mov
sbb
les
push
into
in
adc
xchg
mov
adc
mov
jmp
mov
xchg
call
mov
lahf
icebp
mov
and
inc
pop
imull
lahf
cmpsb
or
loope
test
inc
ljmp
jl
outsb
jbe
out
outsb
push
mov
sbb
cmp
push
testb
inc
ja
loop
jp
jmp
lret
sub
or
fs
xchg
cmp
enter
push
mov
push
idiv
jmp
mov
cmp
dec
lods
std
test
bound
movsl
sbb
push
fwait
jecxz
xor
cmp
inc
inc
out
push
push
xchg
movsb
xchg
mov
loop
aas
sbb
lret
ficomps
data16
testl
mov
pop
jp
imul
and
sbb
imul
into
pop
add
or
fistl
loope
xchg
xlat
jbe
mov
or
mov
shlb
inc
adc
lahf
mov
inc
decl
arpl
aas
pop
pop
and
mov
jecxz
pushf
pop
lods
cwtl
imul
and
stos
rcl
xchg
xor
repz
cmpsb
das
std
lds
daa
or
fcoml
lea
out
add
push
jecxz
xor
mov
xchg
xchg
test
sbb
and
add
push
inc
pusha
in
adc
and
lods
ret
xchg
or
sub
test
cmp
cmp
insl
jae
pop
push
lahf
sub
pop
test
push
cs
fdivrl
in
fbld
xlat
fstpt
mov
lahf
mov
mov
push
add
sub
pushl
mov
lods
jle
or
xor
dec
ss
push
loopne
hlt
mov
add
pop
pop
push
in
sbb
stos
fcompl
sbb
sub
in
repnz
mov
mov
xorl
lcall
in
dec
or
ret
inc
dec
leave
lret
mov
movl
adc
loopne
popf
popa
js
imul
filds
minps
mov
daa
and
add
jcxz
in
push
arpl
outsb
lahf
shlb
mov
sbb
stc
insl
mov
daa
or
mov
call
push
pop
pop
mov
lret
out
loope
in
cli
lahf
cmp
test
scas
sbb
xor
mov
pop
push
pushf
sbb
pop
cmp
push
xor
adc
cmp
insb
cmp
push
ret
mov
xadd
cmpsb
lock
fs
lds
and
mov
fcmovbe
aas
fwait
bound
sbb
dec
xorb
mov
cwtl
xchg
inc
or
das
and
and
es
aaa
dec
cmp
lds
push
dec
lret
xchg
mov
or
or
fs
aas
pop
cmc
cmp
push
popa
les
shl
outsb
inc
pop
mov
aad
mov
repz
inc
sub
dec
and
mov
sub
and
inc
jmp
mov
and
jg
mov
popa
int3
and
sub
push
rcrl
xor
mov
fstpt
xchg
jecxz
in
or
push
fistpll
into
pop
dec
mov
je
jae
inc
add
xchg
lret
int3
cltd
fcomps
sbb
xchg
mov
xchg
out
sbb
mov
hlt
loopne
aam
dec
shll
add
push
loopne
fistpll
jb
repnz
pusha
sub
sbbb
pushf
push
adc
jne
pusha
sbb
pop
cmp
or
push
aas
adc
push
push
test
push
pop
or
subb
jg
sub
push
mov
mov
add
xchg
inc
mov
and
xor
push
xchg
imul
ret
rorl
jno,pn
lea
in
pop
and
push
repnz
out
fldl
dec
sbb
pop
stos
push
test
out
mov
dec
sarl
xchg
out
stos
xchg
cmp
movsb
xor
and
push
fs
xor
repz
mov
mov
in
lods
leave
ret
adc
fisttpll
incb
sti
mov
xor
mov
test
test
mov
add
and
mov
xor
xor
cmpsl
or
xor
and
adcl
insl
or
pop
scas
add
inc
sar
jbe
dec
jbe
ret
fbstp
mov
cmp
sub
loopne
push
jnp
fmul
cmc
in
sub
sbb
rclb
mov
or
mov
fildl
add
mov
cmp
cmp
cmp
sbb
mov
cmc
test
test
cmp
jnp
loopne
add
cli
sub
mov
adc
push
add
inc
out
inc
stc
out
icebp
cmp
leave
sbb
lcall
and
insl
adc
mov
push
pop
lods
cmp
pop
push
add
mov
jl
jmp
mov
loop
ret
push
imul
bound
add
lds
lret
mov
mov
or
xchg
ret
enter
pop
jmp
fdivs
repz
sti
sbb
xchg
cmp
xchg
scas
test
inc
in
add
aad
xor
push
mov
popf
or
loop
add
loop
and
mov
rolb
mov
lahf
mov
es
sbb
push
cwtl
lods
jg
in
and
loop
pop
inc
push
lock
das
mov
int3
inc
mov
and
movsl
and
les
daa
movsl
repnz
ja
push
mov
daa
or
jl
pusha
xor
pop
fsubrs
or
fisubrl
push
jle
cwtl
inc
out
scas
dec
mov
stc
cmc
stc
mov
adc
or
fisttpl
cmp
cli
push
inc
xchg
dec
mov
add
sbb
scas
clc
dec
dec
in
lods
push
mov
mov
loop
pop
xor
sub
jle
push
test
mov
shlb
sbb
lods
ret
dec
xor
jle
xchg
jmp
jg
fs
cmp
mov
inc
outsb
imul
inc
xor
xlat
paddsb
data16
cltd
pop
or
sub
shrb
arpl
ret
xchg
sub
lock
sbb
pop
popa
jns
in
push
sub
enter
mov
cmc
and
cmp
xchg
mov
into
or
insb
sub
push
mov
jno
and
hlt
lahf
jge
hlt
xor
lcall
push
pop
xor
or
lret
out
pop
jmp
jnp
test
dec
xchg
dec
cs
and
xchg
cmp
pop
fiadds
in
mov
push
mov
mov
xor
and
lcall
push
mov
mov
int
inc
pusha
pop
and
inc
or
cmp
lret
shlb
adc
jne
cmc
push
lea
push
push
mov
fnstsw
in
or
addl
mov
mov
mov
filds
loop
stc
or
xchg
shr
add
data16
mov
lods
inc
or
shrl
pop
mov
mov
in
cmp
mov
out
add
fs
or
mov
dec
cltd
in
pop
loope
fidivrs
add
enter
cmp
sbb
ja
pop
dec
or
adc
test
cmp
jecxz
iret
rcrl
mov
lret
push
xchg
inc
mov
pop
daa
lret
adc
xor
bound
test
imul
pop
mov
or
ljmp
lock
sbb
testb
roll
adc
mov
inc
push
call
xor
sahf
lret
cmpsb
pop
or
shlb
outsb
imul
pop
popf
push
cmpsl
xchg
dec
or
arpl
push
mov
add
movsl
mov
dec
push
ljmp
sti
push
cmp
lea
pop
cmp
popf
cmp
inc
mov
adc
ret
fbld
pop
das
aam
in
cmp
xchg
jmp
xchg
ja
lret
or
cmpsl
mov
push
adc
mov
or
repnz
aaa
push
loopne
push
dec
mov
mov
adc
in
mov
jb
sub
push
test
xor
xor
idivl
sbb
in
int3
jbe
xor
push
push
sub
scas
shrl
ljmp
hlt
dec
lock
mov
lahf
ret
and
sbb
arpl
fstp
test
call
decl
out
sub
xlat
dec
es
mov
inc
push
jge
test
lock
sbb
cld
push
in
push
dec
out
cld
aaa
insb
dec
jle
and
dec
xor
jg
adc
or
or
xlat
pop
data16
shll
lock
fnstcw
mov
xor
ss
aad
push
filds
sub
leave
mov
sahf
cmp
insl
dec
sahf
repz
outsb
loope
jl
xchg
mov
xlat
loope
push
imul
ret
hlt
stos
and
pop
cltd
sbb
rcll
stc
mov
jne
mov
xchg
mov
push
xor
or
and
cmc
pop
sub
dec
shr
daa
fwait
pop
pop
or
sahf
in
out
lea
dec
ret
sub
inc
push
mov
dec
addr16
push
push
imul
mov
fsubrs
xor
imul
mov
mov
mov
xchg
adc
lret
mov
xor
mov
ret
jno
arpl
in
lods
jbe
mulb
cs
xchg
mov
jne
jb
and
jl
js
movsb
scas
iret
outsb
sub
xchg
inc
adc
cmp
add
jbe
sub
aas
lret
jecxz
sub
dec
mov
sbb
pop
xchg
shll
and
push
inc
inc
sub
push
xor
mov
out
cmpsb
in
jge
ljmp
jmp
sub
call
pushf
push
xchg
dec
imul
jecxz
mov
mov
fimuls
cmc
jmp
cmc
push
ja
cwtl
adc
xor
pushf
jns
jo
pushf
pop
fnstsw
cmp
push
aaa
movsb
mov
and
ds
jnp
mov
cmp
pop
jl
add
ljmp
das
mov
adc
cltd
sub
enter
incb
ret
outsb
cmp
add
add
stc
in
lea
xchg
fmuls
xchg
xchg
jbe
mov
outsl
jb
sbb
dec
push
push
mul
jp
mov
sbb
jae
or
sbb
sub
out
scas
ljmp
mov
lock
or
call
adc
dec
mov
cmp
pusha
lcall
aas
mov
mov
imul
cmp
dec
pop
shr
mov
inc
xchg
das
lock
dec
add
jb
sbb
pop
outsb
movsb
cmc
cmp
cmpsb
sbb
jnp
sub
and
jae
mov
in
cwtl
aad
call
fs
decb
lods
fstpt
xchg
fs
loopne
xchg
add
ljmp
sub
shlb
or
push
test
daa
mov
dec
in
cmp
mov
outsl
jbe
fdivr
xchg
mov
sbb
addr16
cmp
push
leave
sub
push
add
sbb
xchg
lods
mov
cmc
insl
xchg
adc
dec
fnstcw
sbb
xchg
addb
push
xchg
or
leave
add
cwtl
cmc
adc
xchg
sub
pop
lock
push
pop
sbb
dec
xlat
mov
xor
pushf
mov
js
lods
testl
in
add
push
lock
push
cmp
fs
sub
mov
push
aad
notl
sbb
xor
push
pop
dec
ficomps
sahf
mov
loop
imul
adc
pop
mov
or
push
pop
xchg
xor
dec
xor
imul
cmpb
mov
xor
mov
mov
xchg
sbb
hlt
test
ss
and
dec
sbb
xlat
push
fildll
scas
sahf
and
adc
mov
jge
mov
mov
repnz
les
add
mov
cmp
push
inc
sub
es
jns
push
loope
aas
cld
push
cmpsl
test
jnp
movsb
out
inc
or
les
lds
jbe
push
popl
mov
out
xor
cld
loopne
mov
insl
lds
xchg
pop
cmp
mov
xor
jnp
or
mov
push
pop
and
inc
mov
inc
mov
cltd
xor
mov
ret
jg
sbb
adcl
mov
jnp
and
jle
mov
bound
push
imul
pop
mov
stc
xor
mov
add
xor
xor
xor
shr
xor
xchg
xor
inc
pop
lahf
int3
sbb
push
push
out
inc
adc
insl
mov
shll
in
popa
rcrb
in
xchg
mov
inc
push
outsb
and
pop
xchg
hlt
inc
mov
ja
mov
dec
lcall
push
mov
bnd
sub
rol
pusha
add
insl
add
cmpl
mov
ja
sahf
lahf
ljmp
mov
cmpsb
movsb
aam
repnz
push
aad
mov
push
insb
imul
jb
scas
xchg
jecxz
mov
iret
ret
or
adc
sahf
push
lahf
cmp
mov
push
in
call
add
int3
pop
orb
icebp
sahf
and
sbb
test
fwait
stos
inc
enter
jg
ss
gs
call
sbb
cmp
test
inc
popf
jle
jb
enter
push
adc
push
addr16
push
or
neg
test
lret
shrb
lahf
arpl
sbb
fdivr
add
mov
push
stos
fmulp
cmp
shrb
mov
cwtl
pop
sbb
cmp
stc
mov
aad
loopne
fstpt
js
lock
in
arpl
push
ja
pushf
mov
insb
dec
iret
iret
jg
mov
ret
inc
stos
mov
stos
lods
outsb
fldcw
push
dec
mov
movsb
jmp
sub
and
xor
lods
and
xchg
adc
cmp
inc
mov
xor
mov
lahf
pop
mov
xchg
iret
xor
int3
xor
int
xchg
jecxz,pn
psubd
pop
mov
mov
lahf
xchg
sub
lods
loope
ret
adc
xor
scas
out
xchg
aam
sarb
les
rcr
adc
ret
cmpsl
int
inc
mov
insb
inc
cmp
movsb
and
sub
and
and
bswap
das
sub
push
insb
scas
std
mov
fmuls
mov
adc
mov
into
movsl
jg
int
fstl
aaa
ficompl
or
xchg
xor
iret
inc
push
gs
arpl
fildl
xor
loopne
cmc
out
inc
push
clc
pop
jb
adc
mov
js
and
add
shlb
loopne
pop
sbb
pop
jnp
sub
pop
testl
dec
sbb
dec
lods
or
in
mov
ljmp
mov
fldln2
mov
mov
lahf
mov
inc
stc
mov
out
and
xor
mov
popa
ffreep
xor
mov
adc
adc
pop
or
repz
sub
mov
inc
out
push
mov
mov
inc
fildll
or
sub
mov
mov
mov
jle
lea
jl
imul
es
popa
movsl
mov
sbb
xchg
popa
adc
in
adc
cltd
or
sbb
ds
and
mov
or
notl
popf
loope
rep
jb
aas
inc
pop
mov
inc
jl
idivl
mov
jle
jg
mov
das
push
cli
popa
sahf
fs
lret
add
leave
lods
add
fcmovnu
rolb
aaa
lret
daa
test
bound
pop
insl
rol
imul
mov
sbb
dec
mov
test
pop
gs
mov
outsb
popf
iret
add
push
dec
jmp
dec
mov
or
push
lret
and
fcoms
lea
or
mov
sub
jle
dec
inc
push
leave
sub
cmp
fcompl
movsl
data16
jle
jne
enter
push
pop
int
loope
loopne
jae
shrl
pusha
roll
mov
pop
and
sub
inc
mov
mov
je
pop
pop
adc
sub
pop
out
roll
dec
leave
in
fucomp
inc
arpl
daa
jns
pop
push
cmpsb
sbb
call
mov
and
mov
lock
inc
pop
dec
aad
sub
rorl
jbe
repnz
or
xchg
push
int3
subb
xorb
mov
or
getsec
in
push
add
int
ficompl
mov
cs
dec
sahf
outsl
xor
xor
mov
inc
jle
rcl
inc
ret
fdivp
fcomip
jne
es
loope
hlt
cs
adc
lock
sti
xor
mov
xchg
jnp
mov
hlt
xor
and
outsl
or
xchg
and
jb
sub
jmp
push
ficoml
jbe
test
jo
inc
repnz
jae
or
adc
adcb
in
sbb
sub
adc
mov
fsubrs
sbb
sub
addr16
xor
mov
xchg
and
loope
ja
mov
cmp
mov
test
test
les
and
insb
rorl
dec
dec
sbb
clc
aad
jb
pop
push
movsb
sbb
mov
fisubs
xchg
lock
sub
push
cmpsl
adc
or
sub
add
je
mov
rcrb
cmp
out
test
dec
adc
sbb
das
filds
cmpsb
jae
pop
int3
stos
xor
pop
ficomps
cmp
inc
frstor
imul
stc
cwtl
lcall
mov
iret
jmp
mov
outsb
add
push
enter
mov
iret
cmpsb
sub
psllw
lahf
test
xchg
push
shlb
push
std
cmpsl
stos
add
xchg
sbb
mov
xchg
cltd
popf
icebp
out
push
adc
dec
popa
xlat
adc
fdivrl
jecxz
pop
mov
out
sti
aas
xchg
push
test
push
leave
enter
xlat
test
popa
jle
into
adc
mov
clc
rclb
je
or
inc
gs
pop
cmp
mov
xchg
push
push
and
cmp
loop
or
ds
pushf
filds
dec
pop
mov
pop
or
pop
les
add
cmp
adc
adc
fstpt
sbb
sub
in
pop
dec
sub
cwtl
pusha
iret
add
loope
push
fsts
aam
pop
icebp
sub
pop
pop
xchg
sbb
jo
push
mov
mov
loope
mov
mov
adc
pop
xor
jo
dec
arpl
push
dec
adc
rclb
insl
out
mov
jge
mov
mov
push
inc
ret
and
into
popf
jp
cmp
out
out
mov
arpl
bsf
std
mov
outsl
inc
xchg
in
inc
lret
mov
in
in
jle
mov
lock
fcomi
movsb
mov
xlat
daa
pushf
mov
adc
jno
xchg
fisubs
push
int
mov
movsl
xchg
aad
ja
pop
popa
jp
push
sahf
fidivl
and
faddl
aam
lods
into
cmp
fucomip
sub
sbb
mov
cld
aaa
imul
pushf
adc
insb
scas
imul
leave
sbb
xchg
dec
and
mov
push
shll
lret
and
pop
dec
loope
test
sbb
daa
or
mov
sbb
jmp
push
aam
cmp
sub
sub
cmp
out
cltd
or
mov
mov
inc
shlb
or
arpl
ljmp
nop
hlt
stc
dec
lret
or
push
js
out
xchg
inc
mov
push
mov
xchg
add
rol
add
scas
jge
das
js
inc
mov
cmp
pushf
push
push
rcll
push
push
inc
adc
int
test
mov
fistl
stos
sub
stc
testb
sub
cs
adc
scas
cmpsb
jne
sbb
push
loop
jbe
mov
shll
fildl
aaa
test
or
fmuls
test
popf
pop
fs
popa
dec
xchg
mov
or
or
xchg
push
mov
aaa
sbbl
lods
test
inc
movsb
cmp
mov
bound
rorl
loopne
mov
stos
jmp
js
scas
add
bound
xchg
shll
and
xchg
pop
cwtl
mov
xchg
repz
cli
divl
mov
cs
push
fcomps
ljmp
sub
xor
push
adc
mov
push
es
cmpsb
mov
xchg
hlt
scas
pop
dec
dec
incl
roll
not
imull
daa
sub
test
xchg
stos
mov
neg
test
scas
pop
inc
dec
mov
es
int3
cs
mov
mov
pop
mov
xor
jb
loop
fnstsw
je
fstpl
mov
sub
sbbb
lret
cmc
push
out
test
popf
push
inc
mov
mov
pushf
ja
dec
pushf
addr16
adc
aam
dec
xchg
movsl
idivb
xor
orb
and
inc
fdivrl
inc
loope
lods
pop
test
imul
popf
adcl
mov
cmp
sub
and
pop
cmp
pusha
loop
test
fdivp
and
mov
pop
adc
xor
mov
test
pop
int3
jg
in
insb
inc
clc
aas
jo
mov
aaa
in
and
rolb
clc
mov
lock
sahf
jbe
shrb
movsl
shrb
and
xor
cld
in
in
mov
pusha
pop
hlt
add
xchg
pop
leave
cltd
push
inc
decb
mov
jg
mov
push
push
dec
sbb
mov
inc
jne
add
movsl
popa
fnstenv
cld
mov
and
add
push
adc
movl
pop
push
jns
loopne
mov
pusha
es
icebp
cltd
ret
aas
mov
fiaddl
mov
mov
test
mov
xor
xor
cwtl
pop
xchg
ret
dec
xor
pop
aaa
pop
push
jl
mov
outsb
fdivs
adc
push
sub
dec
fwait
xor
rorb
mov
mov
mov
leave
push
loop
pop
dec
inc
mov
add
rcrl
mov
test
bound
scas
addb
or
ss
inc
fcomps
aam
jnp
push
cltd
mov
mov
sbbl
cld
sbbl
mov
pop
cmp
out
mov
in
jb
daa
jp
or
arpl
das
daa
fdivrl
add
gs
xchg
jle
mov
jmp
push
push
xor
loopne
gs
or
mov
pusha
pop
dec
lret
lret
inc
dec
sarb
sbb
pusha
pop
clc
test
or
fnstsw
mov
dec
push
mov
mov
imul
and
mov
or
rcl
les
xchg
fwait
leave
in
fwait
xor
jne
xor
inc
inc
in
add
clc
stos
mov
out
scas
test
mov
mov
cs
sarl
push
dec
faddl
add
fwait
icebp
or
jge
nop
fildll
out
push
dec
xor
out
bound
out
lcall
sahf
lea
mov
sub
fwait
into
mov
sbb
cmp
cli
fidivs
cmp
cmp
inc
push
mov
aad
dec
mov
fidivrs
xchg
pop
sbb
jno
mov
lds
add
testb
cmp
sahf
cwtl
fs
dec
pop
jae
sub
jle
fsubrp
ret
daa
push
movsbl
mov
ss
aad
dec
add
jo
call
xchg
lret
pop
out
clc
outsl
imul
jp
ds
xadd
fdivl
mov
xor
dec
shll
in
or
mov
dec
cmc
ret
je
stc
jg
push
std
jo
add
out
test
xorb
jo
inc
lret
mov
xchg
xor
pop
popa
cmpsl
lods
shrl
popa
cs
popf
nop
push
push
js
lds
mov
adc
arpl
stc
push
dec
inc
pusha
mov
jne
push
repz
cmp
pusha
xor
in
xorl
push
sbb
stc
mov
xor
adc
cmp
shrb
imul
jmp
adc
outsl
xchg
jo
pop
adc
mov
out
inc
jl
fcoml
cmc
xor
js
les
ret
mov
ss
cmp
inc
in
movsl
push
inc
mov
add
lods
jae
leave
mov
mov
outsb
fwait
repz
push
and
jo
or
scas
sbb
pop
jnp
and
pop
cmp
and
sbb
mov
push
insl
pop
rorl
mov
or
repnz
loope
out
cmp
das
clc
or
push
out
jecxz
mov
fstpl
pop
cld
push
pop
lret
mov
into
rol
aaa
insl
daa
cmp
xor
mov
rcr
ja
mov
fisubrl
out
mov
mulb
mov
jp
cli
mov
pop
out
pop
cmp
inc
clc
sub
and
xor
jae
or
loop
aad
arpl
and
shll
in
push
jb
dec
and
mov
mov
lcall
cmpsl
incl
mov
cmp
xor
xchg
jno
jge
add
mov
cltd
dec
jmp
pushf
adc
cs
xchg
mov
inc
pop
dec
jl
out
lods
inc
inc
push
xchg
jecxz
sbb
add
dec
addr16
test
mov
ret
imul
insb
xlat
jle
leave
in
sbb
xchg
es
xchg
sub
fcmovne
hlt
mov
adc
flds
ja
adc
mov
or
iret
lret
orl
mulb
push
cwtl
lock
or
mov
lret
push
xor
push
mov
rol
sbb
lods
pop
jmp
insb
mov
sahf
aas
xchg
out
mov
or
stos
jg
mov
push
mov
jle
rclb
sbb
filds
adc
adc
inc
into
in
inc
decb
adc
mov
xor
xlat
ficoml
data16
inc
shrl
mov
int
enter
jnp
or
mov
pop
ret
addr16
iret
dec
add
add
inc
shl
jge
rorb
stos
lods
insl
xchg
fwait
push
repz
jns
cmp
test
pop
testl
sub
push
xchg
push
cmp
enter
xchg
mov
jl
lea
sub
pop
popf
test
cmc
dec
mov
jmp
insb
xchg
push
stos
jb
jmp
push
sub
int3
or
pop
aaa
jbe
lods
add
add
jp
push
dec
jo
jns
fidivrl
cmp
nop
loope
mov
push
int3
cld
in
lret
cmp
pop
in
repnz
mov
jb
and
push
or
mov
dec
inc
sbb
dec
sbb
inc
mov
xchg
jae
out
add
sarb
xchg
das
pop
jbe
stc
cwtl
dec
arpl
pop
cmp
jmp
adc
ret
stc
fstp
insl
xor
aam
mov
arpl
adc
sub
sub
mov
daa
lret
test
xchg
push
push
lods
and
movsb
jo
popf
scas
cmp
mov
mov
fsubrs
lret
pop
in
xor
mov
add
ljmp
stos
jp
rcll
in
push
and
jmp
xchg
ss
popa
lcall
scas
jge
sti
add
adc
xor
inc
cmpl
inc
rcrb
mov
and
lock
cmp
inc
insl
push
jo
shl
fsubs
xlat
jb
and
jbe
hlt
data16
inc
add
leave
stc
divl
cmp
or
loope
scas
lret
dec
sub
lock
je
loopne
xchg
out
out
xchg
out
mov
dec
pushf
scas
aam
scas
push
inc
pushf
xchg
mov
mov
sbb
jnp
clc
pop
add
cmp
or
push
mov
push
shl
sbb
fwait
mov
add
push
and
int
stos
mov
call
jae
std
stos
iret
jg
adc
push
aad
sub
push
icebp
fwait
ljmp
test
je
mov
dec
xchg
adcb
icebp
test
mov
and
cwtl
jne
sahf
jo
xorb
mov
push
adc
das
in
jnp
xchg
cmp
es
sti
stos
dec
sbb
out
adc
mov
or
dec
mov
roll
mov
sbb
dec
dec
xor
and
jecxz
mov
jb
mov
lods
mov
inc
add
push
ja
add
mov
add
mov
push
mov
arpl
pushw
cmpsl
addr16
mov
fcomps
out
xchg
test
inc
lret
add
mov
add
xchg
adc
lea
orl
mov
inc
cltd
mov
xchg
fwait
in
repz
subb
stos
mov
and
out
mov
in
jnp
rclb
je
xor
add
sub
in
or
xchg
xor
imulb
adc
sbb
fucomi
mov
jno
nop
aam
sub
or
jns
out
add
jp
cld
fcoms
mov
mov
mov
repnz
out
lock
ret
cmp
mov
xor
cld
nop
or
cmc
add
and
inc
mov
fsubrs
popf
mov
into
sbb
xchg
lea
fcoms
cli
sub
mov
xor
mov
insb
in
jmp
push
pop
jb
inc
xor
daa
pop
lea
rcrb
and
sbb
movl
inc
inc
sbb
adc
push
or
ret
xor
push
mov
or
in
sub
xor
mov
in
cli
fsubl
inc
push
push
jle
test
xchg
and
lcall
mov
mov
bound
inc
ljmp
sbb
dec
les
cmp
sub
ret
jle
lods
icebp
add
repz
into
cmc
inc
leave
adc
xchg
clc
cmp
jb
push
out
bound
test
inc
cmp
push
dec
xchg
dec
aas
mov
mov
jp
push
test
xchg
or
insb
call
cmp
mov
ret
inc
sbbl
cmpsb
dec
dec
loope
jae
cwtl
fs
aaa
push
jne
push
xchg
mov
movsl
fidivs
movsl
shll
jns
aam
mov
lods
xchg
sbb
leave
pop
dec
insl
dec
call
push
sub
std
cli
insl
imul
outsb
ljmp
add
aad
mov
or
dec
paddw
fldcw
lea
iret
aam
add
popa
pop
mov
dec
lods
jb
add
das
cmp
mov
mov
jmp
ret
xchg
mov
jl
rorb
or
fcomps
mov
and
pop
xlat
push
cmp
inc
cmpsl
xchg
sub
mov
push
jmp
loop
loopne
loop
loope
sub
scas
fwait
sbb
cmpsl
call
out
mov
dec
cli
mov
or
fstpt
call
lahf
or
cmp
and
sarl
popf
and
mov
mov
daa
sar
xor
je
sahf
pop
cs
xchg
cmp
out
in
pop
ss
or
sbb
lret
xor
mov
mov
lret
ret
int3
in
xchg
xchg
adc
ficompl
aas
daa
enter
push
nop
dec
sahf
jmp
addr16
loop
push
mov
mov
mov
cmp
lahf
xchg
xor
in
xchg
pop
mov
ljmp
repnz
adc
push
fisubs
lods
es
pop
xchg
lahf
pop
imul
out
ret
lret
cmc
std
outsb
hlt
cmp
or
jecxz
out
cmpsb
jnp
lds
loopne
xchg
out
add
mov
ret
sub
mov
ja
movl
lcall
mov
add
addr16
sbb
test
aas
ret
cmp
clc
sti
mov
sub
scas
in
push
lds
jae
and
mov
mov
jle
popf
pop
sahf
and
imul
xchg
repnz
and
inc
fwait
test
or
pop
ja
inc
xchg
mov
xor
aas
sbb
call
pop
adc
xor
out
lret
push
call
arpl
xchg
mov
and
pop
mov
sbb
out
mov
jb
mov
fidivrl
sub
repz
in
ret
xchg
xor
sub
cmpsl
fxch
stos
popa
cmc
jp
loop
rolb
mov
or
movsl
cmp
add
jnp
idivb
mov
leave
push
jne
xchg
shlb
lret
or
scas
jno
push
add
aaa
test
jecxz
shll
inc
jo
and
jnp
rcrl
cmpsl
cltd
mov
inc
inc
dec
jge
cmp
fsubrl
in
xchg
outsl
clc
inc
cmp
aaa
jnp
ret
outsl
inc
xchg
pop
or
bnd
add
bound
insb
and
xor
push
push
add
ljmp
movsl
test
or
add
mov
sub
mov
and
nop
stc
neg
jns
xchg
test
sti
lahf
add
addl
nop
add
imul
stos
es
mov
or
faddl
imul
sub
ret
out
int
imul
sub
mov
mov
ds
stos
pushf
xchg
in
imul
adc
push
cmp
das
notb
jmp
inc
mov
fists
cmp
shlb
gs
cmp
and
lret
mov
jb
mov
test
xchg
cli
pushf
ja
jo
shrb
add
push
pop
insb
ret
add
push
lods
push
sbbb
and
nopl
arpl
xchg
pop
and
data16
lods
fwait
sub
pop
xchg
ds
imul
lods
mov
xor
js
repnz
pop
sti
mov
daa
fwait
aaa
shl
inc
pop
clc
sub
jns
lock
shll
movsb
and
popf
in
aad
jg
andl
fwait
cmp
aam
mov
pop
fcmovbe
aaa
daa
and
ret
xchg
cmpsb
movb
jg
adc
cld
and
insl
aaa
movsb
adc
lret
mov
iret
jnp
cmpl
arpl
out
mov
push
mov
les
sbb
adcb
addl
pop
andb
push
mov
sbb
fnsave
sub
lret
cltd
mov
and
mov
mov
jg
inc
and
cs
pop
cmc
mov
popa
pop
insl
mov
or
mov
push
call
lahf
xchg
fwait
stc
and
jno
and
fisubrs
pop
inc
pop
mov
pop
pop
xor
cltd
xor
mov
movsl
es
push
cmp
aad
dec
mov
bound
ljmp
push
adc
xor
or
sub
push
mov
fxch
cli
dec
rcll
jbe
mov
dec
jecxz
xor
or
jmp
inc
push
or
stos
pop
push
and
iret
jp
ret
inc
mov
fisubrs
pop
inc
sahf
xor
or
fdivrl
push
arpl
xor
ficompl
icebp
and
test
imul
out
dec
arpl
jge
dec
add
movsb
push
mov
add
adc
stos
int
bound
arpl
pop
nop
jle
arpl
insb
xchg
std
jo
rolb
dec
mov
xor
mov
cmp
fistps
xor
cmp
movsb
testb
sub
pop
insb
jae
mov
mov
ds
cmp
addl
lahf
mov
mov
shr
xlat
and
or
sub
push
imul
rorl
pop
lret
out
stos
cmp
movsb
scas
addr16
add
xor
pushf
dec
mov
test
stc
shr
mov
push
scas
leave
pop
push
fwait
shrb
arpl
jbe
mov
add
andl
mov
movsl
inc
xchg
push
mov
insl
push
jmp
sbb
addr16
repnz
in
adc
xchg
xchg
cmp
mov
mov
jg
mov
icebp
and
out
pop
in
pop
cmp
push
jb
mov
mov
push
pop
mov
popl
aas
dec
mov
les
rorl
adcb
pop
adc
pop
mov
push
inc
mov
decb
mov
mov
inc
lock
and
lea
loope
insl
pop
and
push
hlt
push
mov
pop
sub
shr
cmp
and
lret
sub
std
test
jns
imul
xor
or
lret
jl
or
xchg
mov
mov
lret
mov
cmp
int
add
mov
enter
adcl
mov
mov
adc
mov
jno
inc
push
jns
mov
jb
jle
cmpb
test
push
ret
cmp
lock
scas
cs
mov
cmp
jg
mov
add
dec
jg
cs
mov
les
imul
sbb
xorl
sti
push
mov
cli
in
xor
loopne
mov
mov
xlat
cmp
hlt
pusha
add
outsb
ja
mov
shl
clc
pop
add
xchg
jge
in
mov
ds
or
jo
xchg
sarb
in
ret
subl
or
enter
fnstcw
adc
sti
jo
xor
jno
aaa
fcmovb
clc
jge
push
jle
pop
jbe
xchg
ret
push
inc
xor
fldt
xor
adc
mov
clc
sahf
xchg
je
fdivrl
xchg
jg
rorb
fs
popa
jmp
sbb
cltd
daa
cmp
fwait
mov
fbstp
in
mov
add
jns
mov
out
and
out
mov
arpl
xor
in
pop
dec
push
or
mov
int
repz
mov
shl
je
sbb
in
inc
aas
cld
and
xor
mov
iret
repnz
insl
cmp
cmp
jp
or
xchg
repnz
mov
outsl
sbb
sbb
jbe
inc
mov
sub
and
cmp
sbb
sbb
pop
shlb
outsb
dec
cmp
in
and
gs
push
je
add
cld
shll
cmp
ss
adc
movsb
dec
jae
dec
test
leave
cmp
add
repz
sub
and
cwtl
rclb
mov
pop
mov
sbb
pop
inc
push
or
js
nop
ret
int
xor
inc
in
mov
lret
aam
arpl
ret
fistpll
dec
data16
pop
jno
add
mov
dec
adc
jbe
insl
clc
dec
fs
pop
nop
loope
jp
inc
and
mov
mov
add
fs
ss
out
sahf
xchg
mov
adc
mov
inc
inc
arpl
fcomp
enter
or
push
mov
cmp
xchg
test
add
loop
test
jb
rcrl
pushf
iret
test
je
int3
pop
push
lret
sub
into
adc
xchg
xor
xor
test
in
test
dec
mov
push
ljmp
xor
loop
repz
loope
xor
pop
pusha
push
pop
mov
pop
out
int3
push
xchg
pushf
mov
jns
cmp
outsb
aam
pop
push
jmp
stos
add
xchg
fimull
jae
and
cli
push
push
mov
and
ja
xor
loop
push
loope
psubusb
mov
repz
and
ret
xchg
je
sbb
xchg
mov
mov
pop
pop
add
sbb
or
hlt
mov
pop
test
out
jp
in
jg
push
push
divl
jae
dec
pop
cmp
iret
lcall
js
in
xor
sbb
and
stos
adcb
and
dec
sbb
ds
inc
inc
sub
es
mov
leave
fstpt
nop
jae
insb
fnstenv
imul
adc
adc
out
xchg
mov
xchg
scas
inc
nop
lods
or
fdivs
mov
test
mov
push
cltd
jbe
or
push
add
dec
mov
mov
ss
js
cmp
notl
pop
lret
mov
pop
cmc
int3
jp
in
notb
imul
and
lret
je
cmp
cmpsl
dec
shrb
sub
xorb
notl
test
sub
dec
xor
sbb
loope
adc
mov
sub
repz
push
mov
xor
mov
inc
mov
jg
pop
arpl
cmp
jmp
mov
lods
popf
ret
jns
lret
inc
or
jge
aas
mov
push
pusha
or
dec
imul
out
dec
mov
push
cs
push
into
enter
test
in
inc
cmpsl
rcll
jne
adc
and
sbb
add
xchg
es
add
aas
xor
js
fadds
sbb
mov
das
das
push
jl
lods
xor
and
imul
sbb
je
pop
pop
loope
sbb
jne
nop
and
fcoms
mov
and
ds
jp
mov
inc
or
sbb
cmp
shlb
inc
inc
cltd
stos
fildll
dec
shlb
icebp
and
stos
push
sti
in
sarb
xor
cmpsb
xchg
test
call
and
pop
pop
inc
imul
xlat
sti
adc
mov
jmp
push
push
xchg
jne
into
cli
data16
mov
xor
jno
ret
lods
jno
sbbb
aaa
cld
test
dec
les
jno
mov
movsb
inc
je
cs
fcompl
adc
adc
sbb
sbb
aas
push
movsb
push
jecxz
mov
pcmpgtd
and
inc
dec
and
popf
pop
sbb
mov
lods
lods
sbb
mov
add
xchg
aad
inc
jne
sahf
xor
enter
loop
rdmsr
fdivrs
ss
cmc
popf
inc
push
or
scas
pop
ret
les
ja
push
sbbl
and
cmp
ss
hlt
mov
adc
push
xor
in
arpl
pop
inc
clc
enter
icebp
jl
jge
push
insb
addb
test
data16
repz
adc
jg
inc
scas
lock
mov
imul
add
jbe,pn
ljmp
cmp
sub
lea
xchg
sbb
push
cltd
dec
bound
sbb
sbb
sahf
ljmp
mov
out
mov
dec
pop
or
push
xlat
test
mov
scas
dec
mov
and
and
xchg
dec
lock
sti
mov
xchg
sarb
ja
fs
push
shl
jge
stos
jae
xchg
mov
adc
inc
mov
jb
enter
push
adc
imul
aad
cmpsl
pop
cwtl
testl
pop
fdivrs
mov
addb
fcoms
mov
pushf
lock
sti
lods
and
or
faddp
jle
andb
jb
push
jl
mov
jp
sbb
and
popa
xor
jne
push
and
jno
outsb
orl
mov
jno
push
xor
sbb
nop
mov
imul
add
mov
repz
sub
icebp
hlt
stos
arpl
in
cli
adc
lods
adc
in
neg
ret
loopne
test
adc
adc
push
pop
mov
sarb
fs
fiadds
push
or
pop
xor
js
mov
out
and
push
lods
sbb
mov
arpl
inc
sbb
fildll
mov
inc
bound
jg
inc
jae
pop
into
jno
in
push
into
stos
shl
jmp
jecxz
ret
adc
cmp
jne
pop
push
jp
lcall
mov
jp
aas
cmpb
aam
clc
sbb
mov
stos
mov
jno
ret
ss
jae
notl
in
movsb
into
push
inc
ficoml
arpl
fisubrl
icebp
jle
dec
ficoms
rol
popa
fisubrl
das
mov
bound
outsb
push
jo
icebp
add
testl
push
repz
fnstenv
les
lods
xor
nop
leave
enter
push
jge
nop
push
pop
mov
xor
jnp
push
mov
test
adc
out
mov
movsb
add
fisttpll
rolb
ret
xchg
jnp
jge
les
insl
or
in
push
repnz
neg
mov
das
insb
movsb
insb
rep
shr
rolb
inc
cli
dec
mov
leave
push
and
dec
adc
icebp
sti
xchg
mov
and
mov
jbe
out
movsb
test
sbb
cmp
mov
push
push
mov
daa
lret
js
stc
pop
mov
xchg
pop
hlt
sbb
in
mov
cmp
mov
adc
push
add
xor
pusha
in
pop
sbb
out
lea
aam
push
mov
cld
push
in
cmp
arpl
addr16
aaa
xchg
and
out
loopne
fistl
imulb
pop
arpl
mov
xor
das
dec
mov
jg
cmp
mov
mov
or
lret
jecxz
dec
sahf
cmp
pop
jne
pusha
testb
xlat
lcall
lods
mov
mov
andb
fs
faddp
mov
out
sbb
mov
out
jg
sub
test
xchg
dec
lea
scas
out
xchg
sbb
addr16
les
push
or
inc
ret
pop
fs
sbb
std
mov
shrb
adc
xor
out
and
cs
dec
stc
xlat
sbb
aad
xor
or
pop
out
push
in
mov
cmpsl
cmp
aas
out
pop
adc
and
jp
add
pop
mov
fmuls
xchg
icebp
ljmp
sbb
dec
jg
in
add
lret
mov
popa
insl
xor
mov
aaa
dec
and
mov
test
xchg
or
pop
rep
xor
gs
loope
int3
loopne
xchg
cmp
ret
push
in
cmp
shl
cmp
xorl
insb
xchg
sub
gs
mov
cmpsl
ret
nop
or
bound
std
xor
add
gs
rol
lock
pusha
in
adc
mov
in
ficompl
sub
rorl
cld
aad
push
mov
jnp
repnz
fcomip
scas
xchg
dec
sbb
pop
popa
aaa
cmp
clc
and
arpl
ss
aas
cmp
push
call
mov
faddp
gs
xchg
pushf
cmp
cmp
cli
mov
outsl
jg
aaa
loopne
push
mov
add
dec
pop
and
jl
into
in
repz
fwait
pop
addr16
push
inc
xchg
adc
and
xchg
cmp
aaa
shrl
into
pushf
inc
ficoms
mov
sbb
std
pop
dec
jo
les
imul
xor
lcall
or
flds
and
cltd
dec
dec
cmp
movsb
xchg
mov
test
scas
ficoml
shrl
mov
or
nop
ljmp
mov
mov
shl
or
inc
cmpsl
mov
pop
bound
insl
sub
mov
sbb
jae
ret
dec
dec
cli
cmp
mov
mov
bound
add
js
sbb
addr16
cwtl
mov
sbb
sub
daa
mov
sbb
dec
sbb
sahf
cmp
cltd
push
pop
push
test
lahf
xor
sbb
add
bound
jae
fwait
mov
nop
or
mov
rolb
mov
loope
out
dec
out
jno
test
mov
mov
lods
lahf
leave
sub
iret
adc
fbstp
dec
imul
jnp
adc
and
int
out
xchg
mov
pop
je
push
je
mov
pop
jmp
aaa
push
negl
les
nopl
scas
cmp
push
outsl
adc
iret
jns
ret
xor
or
and
sub
xor
imul
popf
adc
mov
andl
push
push
stos
repz
and
lds
cmc
inc
cld
stos
push
add
pop
sub
or
lcall
ror
jne
dec
add
test
mov
or
or
jp
mov
inc
lds
add
mov
push
pop
jnp
mov
int
popl
arpl
cmpl
cmpsl
in
shrl
mov
cltd
cmp
jmp
sbbb
mov
jb
test
xlat
loopne
int
adc
shrl
iret
fsubl
imul
sbb
icebp
jl
add
or
in
into
repz
aas
mov
ds
or
mov
mov
sahf
inc
outsl
movsb
sbb
movsl
and
icebp
push
aaa
or
movsb
sub
jno
mov
fldln2
xor
das
cltd
inc
das
fildl
jle
inc
add
loope
daa
xchg
rcrb
ja
mov
sub
jp
aad
dec
jns
pop
xchg
mov
or
jge
fwait
add
sub
inc
mov
popf
stos
outsl
es
test
into
pop
fstpt
sub
roll
repnz
outsb
push
es
push
std
push
adc
sbb
lahf
pop
xchg
fnstcw
mov
inc
aam
pop
push
or
xlat
xchg
nop
pusha
loop
cld
sahf
or
cmp
xchg
and
xor
add
cmp
pop
sbb
js
cmc
nop
mov
mov
jecxz
mov
bound
adcb
jno
inc
int
jle
js
data16
inc
testl
hlt
xor
sbb
movsb
arpl
push
rol
test
sub
cld
leave
xchg
dec
cmc
shll
enter
rorb
test
cmp
sbb
push
jae
test
xchg
push
mov
outsl
loope
out
rclb
or
and
shlb
pop
loop
mov
movsl
imul
mov
xchg
jae
sbb
fs
lods
test
dec
je
mov
sarb
and
fnstcw
nop
int
leave
insl
repz
pop
lods
inc
mov
dec
or
mov
and
jbe
and
and
sub
and
jl
pop
dec
fcoml
adc
pop
jp
lods
rclb
in
push
bound
cmp
clc
xchg
sbb
push
xor
jnp
cmpsl
mov
lahf
loope
xchg
ficoms
lret
ds
int
add
xchg
xor
inc
jno
scas
dec
arpl
mov
xchg
push
pop
dec
add
push
ret
and
shll
inc
cmc
sub
inc
insb
xchg
rcll
add
add
loopne
icebp
test
xchg
pop
or
xchg
push
cwtl
pop
jb
fldenv
std
daa
test
bound
js
ret
xor
add
push
insl
pop
adc
in
test
xor
movsl
add
xor
and
ret
xchg
enter
or
test
in
ss
pop
push
mov
mov
xor
roll
int
lea
xchg
data16
adc
push
mov
jmp
sbb
jbe
adc
into
or
ds
fs
xchg
data16
cmp
aas
in
sub
sub
mov
sub
nop
mov
scas
int3
ss
add
stos
aad
iret
out
push
out
rclb
hlt
decb
mov
ficompl
lahf
mov
xchg
pop
daa
adc
push
cli
stos
mov
add
fwait
mov
or
je
into
jbe
xlat
leave
xchg
stos
lcall
or
lcall
loop
and
cmpl
cmp
push
leave
add
test
inc
fsts
cmp
xchg
push
mov
jo
cmp
out
ret
add
cmp
adc
stc
nop
sbbl
test
cmpsb
or
and
xor
or
insb
xchg
pop
pop
gs
rolb
stc
nop
inc
xorl
in
shll
cmpb
das
mov
pop
inc
pop
fdivl
xor
mov
mov
mov
decb
xor
movsb
and
sbb
sub
adc
pop
pop
mov
mov
mov
and
fisubl
xchg
jns
cmp
jecxz
xchg
pop
imul
in
stos
sub
inc
dec
pusha
sbb
jl
push
cmp
adc
inc
in
mov
lret
repz
js
scas
hlt
jg
mov
push
and
lret
xchg
push
adc
adc
add
adc
hlt
test
xor
ds
xor
iret
jo
imul
outsb
mov
je
mov
bound
clc
xor
arpl
lret
adcl
mov
jbe
ficomps
dec
sub
pushf
cmp
mov
and
popa
dec
pop
js
xor
push
sub
inc
call
rcrl
mov
dec
rcr
lods
lret
pop
jmp
jl
std
push
mov
sarl
test
mov
cwtl
cmp
in
adc
aad
push
imul
shrb
adc
mov
out
sub
scas
stos
shlb
dec
and
repz
cmp
flds
out
lods
ret
adc
andl
enter
data16
insb
fld
xchg
or
in
testl
sub
xor
cmp
or
aad
aas
mov
rcr
fsub
daa
shll
or
push
adc
xchg
out
sub
lea
stos
add
ss
es
xchg
xor
dec
lods
shl
jecxz
fimull
fwait
or
xor
mov
in
jo
stos
mov
and
movsb
ret
test
pop
addr16
bound
popfw
imul
xor
pop
mov
pop
fstpt
mov
ds
adc
int
push
pushf
xchg
xchg
mov
daa
out
movsb
mov
cmc
xchg
jp
dec
outsb
add
and
xor
addb
push
lcall
psubd
mov
and
push
insl
fwait
iret
push
mov
push
inc
ljmp
cmp
and
aaa
arpl
fwait
dec
je
fildl
or
cmp
inc
dec
xchg
sbb
push
mov
and
enter
dec
adc
jecxz
mov
add
scas
and
mov
mov
inc
data16
mov
fs
xor
ds
mov
mov
out
imul
data16
rolb
aas
mov
mov
enter
outsl
xchg
xchg
outsl
pop
adc
lods
xchg
notb
push
inc
pop
notb
xchg
out
adcb
mov
fwait
and
adc
aaa
cmpsb
and
and
int3
repnz
outsb
lods
push
cmpsl
fisubrl
subl
loop
xchg
rcrb
adc
out
imul
or
in
adc
pop
pop
add
ja
sbb
ljmp
out
add
adc
xchg
aaa
lods
and
fbstp
or
ret
imul
test
mov
mov
jle
mov
stc
inc
xchg
inc
es
xchg
add
int
push
andb
jg
mov
aas
pop
int
adc
push
sub
ret
cmp
negl
pusha
lar
in
shll
iret
pop
jne
out
lods
outsl
into
clc
or
int3
cs
push
inc
in
sub
jb
clc
in
icebp
xchg
repnz
data16
fsubs
jg
mov
dec
arpl
loop
stos
ljmp
outsl
dec
mov
int
mov
stc
mov
push
xchg
mov
test
pop
xchg
fld
sbb
in
sbb
add
pop
add
out
and
sarl
xor
outsb
and
add
imul
sub
mov
add
xlat
lahf
mov
movsb
call
dec
jmp
mov
adc
push
adc
hlt
into
or
inc
mov
pop
shrl
pushf
fildl
addr16
mov
mov
mov
int3
cltd
adc
nop
push
outsl
stc
push
sub
rorb
adc
pop
movd
shll
rcrb
sub
push
dec
and
add
lret
fcoms
jl
lock
lods
cmpsl
imul
pop
out
stc
dec
cwtl
mov
les
inc
sti
or
add
aas
aaa
in
inc
mov
insb
fmull
adc
mov
mov
adc
xchg
and
sub
push
mov
xchg
adc
dec
jge
push
jne
mov
repnz
cmp
aas
and
and
inc
pop
inc
mov
stos
push
ja
cmp
xor
cmp
jbe
insl
inc
cmpsl
repnz
add
mov
lret
mov
adc
rorb
out
divb
nop
xor
push
jl
sbb
inc
scas
dec
adc
call
fwait
mov
repz
inc
xchg
cmp
dec
jg
mov
jmp
stos
and
aas
rcrb
shl
lock
or
jmp
rcrl
int
pop
js
sbb
dec
hlt
fwait
dec
pop
mov
pop
jns
je
out
fldl
pop
testw
jg
jno
je
fneni(8087
and
xchg
arpl
sub
in
mov
or
xchg
push
cmp
push
or
stc
xor
pop
pop
cmp
jmp
subb
inc
jle
test
pop
xchg
lahf
sarb
add
add
daa
inc
xor
neg
or
movb
cmpsl
testl
jo
mov
and
mov
aam
adcb
aas
cmpsb
adc
push
rol
sti
mov
push
aas
and
mov
aad
cltd
jmp
popa
test
xchg
cmp
lahf
pop
ljmp
in
push
cmc
cmp
add
xchg
ljmp
data16
rorl
int3
and
or
adc
jns
mov
mov
pop
inc
pop
fstps
std
adc
xor
mov
je
sbb
ret
imul
sub
cli
mov
roll
cli
xchg
iret
push
jmp
mov
in
and
ret
shrb
mov
and
sar
je
xor
inc
aas
sbb
subb
sub
fwait
sub
xchg
repz
dec
loop
outsb
rorb
repnz
mov
sub
jns
test
inc
inc
xchg
dec
push
addl
test
les
xchg
xchg
and
mov
lahf
dec
imul
sbb
jno
push
sbb
push
adc
jb
xor
andl
and
stos
loope
jbe
sarl
jmp
inc
push
ficoms
insb
sbb
mov
out
or
sub
cmp
sbb
int3
gs
imul
sub
lods
stos
inc
add
jg
sbb
add
mov
dec
mov
lods
mov
test
stos
pop
mov
addl
aam
aad
or
sbbl
mov
icebp
jb
dec
xor
xchg
shrb
push
xor
pusha
inc
push
push
stos
sbb
push
mov
xor
and
and
ja
pop
dec
push
dec
icebp
xlat
pop
das
enter
pop
mov
mov
dec
aam
and
scas
xchg
and
adc
pop
fimull
pop
inc
les
into
and
push
mov
mov
or
push
popa
mov
mov
inc
outsl
rorl
cmp
add
rcr
pop
std
int
ret
mov
or
sub
jg
lods
cmp
mov
sbb
cmp
cli
in
xor
cmp
inc
mov
add
aam
mov
mov
inc
push
stc
iret
and
jne
mov
adc
and
or
mov
or
imul
in
test
lret
fsts
or
outsl
and
in
adc
inc
out
stos
imul
das
cmp
aam
mov
jnp
cmp
inc
or
rorl
rorl
psubb
les
and
arpl
aam
xchg
aad
aaa
xchg
push
into
cmc
shll
jmp
sub
out
mov
mov
xor
pop
xchg
scas
jne
mov
data16
sub
xor
inc
out
jno
mov
adc
xchg
dec
dec
mov
push
lea
push
ret
dec
lds
rcll
psubd
frstor
sub
ret
lret
fisttps
repz
imul
xor
push
xor
ret
xchg
jno
test
fwait
push
dec
scas
popf
ds
pop
mov
mov
aas
jge
pusha
lods
jo
xchg
mov
mov
push
cli
sbb
out
into
test
xchg
nop
jo
fidivrs
ss
jae
push
mov
out
xchg
insl
adc
xor
xchg
stc
or
mov
ret
cmp
lods
and
pop
pop
imul
popl
push
mov
cwtl
ds
push
in
mov
aad
enter
enter
xchg
and
inc
pop
pop
icebp
adcb
loope
jl
push
mov
lret
lds
mulb
or
pop
cmp
in
jl
and
ret
das
ds
adc
xor
sbb
mov
dec
cmp
data16
or
xor
test
push
imul
not
stc
out
subb
pop
add
rolb
jbe
dec
sub
mov
ret
add
mov
imul
loop
ror
sbb
or
inc
cli
and
and
adc
push
pop
mov
fimuls
dec
inc
sbb
dec
sbb
fsubrs
pop
jecxz
pop
push
pop
inc
or
and
and
aad
pop
xchg
jecxz
push
mov
fsts
sbb
ljmp
pop
mov
hlt
pop
mov
std
inc
rorb
sbb
in
fcmovnbe
lret
scas
pop
popf
repnz
mov
lcall
sahf
xor
mov
cmp
call
sbbb
je
xor
inc
fwait
mov
sbb
mov
add
leave
adcb
or
xchg
outsb
je
movsl
and
sbb
pop
sti
fs
push
in
add
shlb
and
hlt
fidivl
inc
mov
int
xchg
aas
xchg
jno
fs
hlt
xchg
mulb
fcmovb
adc
add
cld
bound
xchg
push
cmp
pusha
adc
scas
xorl
lret
into
mov
mov
pop
addb
sbb
lretw
popa
clc
movsl
inc
ffreep
jns
in
push
outsb
xor
xor
sub
jns
ja
mov
jle
repnz
leave
sub
and
jl
or
xchg
ds
imul
clc
andl
mov
popa
lcall
adc
xlat
add
xchg
push
ja
mov
dec
cmovnp
or
sbb
lcallw
fsubl
iret
pushf
xorb
repnz
test
xchg
and
cmp
mov
lahf
dec
loopne
iret
or
loop
shld
inc
cmpsb
mov
mov
subb
pop
pop
bound
fcoms
and
fucomi
and
ficompl
inc
pusha
test
incl
popa
push
fistpll
fidivrl
jg
int3
pshufw
push
jns
rclb
stos
divb
add
sbb
mov
mov
pop
test
or
pop
repz
fistpl
mov
add
push
cmpsl
daa
bnd
push
adc
cmpsb
mov
sbb
loope
and
jp
dec
pop
mov
xchg
jne
scas
fldt
dec
push
stos
repz
inc
cmp
sbb
stc
cs
add
repz
lahf
hlt
jne
das
movsb
mov
outsb
dec
sbb
pusha
adc
cmp
loop
movb
and
cmp
sub
and
and
rol
dec
test
daa
dec
pop
pop
sub
fadds
pop
cwtl
cmpsl
scas
lea
dec
sti
jle
or
cmp
push
out
adc
ljmp
cmpsb
pop
xor
pushf
int
lods
inc
test
sahf
cltd
mov
pusha
ret
imul
sti
push
outsb
or
ds
rclb
and
xchg
into
cwtl
hlt
mov
incb
xor
mov
daa
sbb
in
sub
pop
push
daa
nop
xor
mov
test
je
jo
rorb
dec
sub
enter
out
sub
or
test
std
sbb
sub
rcr
orl
lods
xchg
cmc
cmp
stos
stos
lods
cmp
insb
rcrb
fwait
pop
pushf
sbb
js
cli
and
imul
insb
lcall
inc
mov
or
cmp
jle
popf
pop
push
cmp
cmpsl
push
mov
ds
pop
pop
sub
out
and
dec
push
imul
iret
data16
jo
jne
mov
mov
outsl
pop
pop
in
xchg
dec
stc
and
movsl
mov
inc
push
mov
inc
sbb
ss
sbb
clc
pushf
out
adc
dec
xor
push
or
adc
mov
lret
test
out
mov
jnp
dec
xchg
fwait
sbb
mov
pop
ss
repz
jbe
ja
push
jmp
in
mov
mov
push
and
data16
add
and
push
dec
and
aaa
jmp
stc
lretw
outsb
inc
jecxz
mov
dec
fmull
jle
cmp
testb
pop
dec
lret
push
sbb
into
bound
sub
lock
xor
pop
out
ret
cmp
cmpl
xchg
pop
les
jno
sti
mov
pop
mov
es
insl
les
push
cmp
lret
ds
pushf
dec
int3
pop
hlt
lret
std
push
pop
inc
jg
fs
fsubr
lock
stos
es
mov
cmc
xchg
pushf
add
cmpsl
jno
rorl
sub
into
mov
int3
xlat
or
and
mov
pusha
mov
pop
mov
sbb
jp
jns
cltd
jl
into
inc
jg
xchg
cmc
mov
xor
mov
push
mov
mov
xor
data16
sbb
shll
ret
mov
and
inc
jnp
into
dec
xlat
push
ret
cs
pop
frstor
sub
call
aam
mov
data16
jle
pop
mov
lock
add
xor
push
pop
ja
xchg
aas
sbb
addl
mov
mov
lock
xchg
fstpt
lret
jl
cmp
aad
lods
xchg
hlt
out
fnstcw
gs
mov
outsl
xor
pop
jge
pop
cmp
data16
or
cli
aaa
xchg
or
ret
flds
ja
adc
test
mov
dec
cmp
int3
out
pop
mov
int
movsb
dec
push
or
and
dec
icebp
mov
cmpsl
adcl
rolb
cs
test
jl
or
xchg
gs
lahf
mov
and
sahf
and
jg
imul
cmp
cwtl
faddl
das
sub
add
xor
loope
in
sbb
sbb
cs
and
push
inc
movsl
mov
loop
xchg
cvtpi2ps
inc
push
push
in
mov
push
pop
push
lret
xor
add
xchg
mov
xlat
pop
push
inc
adc
lock
clc
push
mov
jb
pop
sti
cltd
push
clc
cmp
jne
movsb
push
loopne
fisttps
inc
repnz
jns
imul
push
bound
mov
dec
roll
stos
adc
scas
aaa
shrb
pusha
push
notl
insl
inc
mov
mov
ss
imul
push
adc
pusha
rorl
imul
push
jne
aaa
mov
and
out
ret
jbe
mov
not
cmp
rorl
dec
insb
cltd
rorb
out
xlat
mov
cmp
jno
or
test
jge
lock
movsl
add
fsubrl
arpl
imul
ja
sbb
ds
test
push
mov
mov
pop
pop
test
sub
pop
cmpsb
inc
orl
mov
push
cmp
dec
leave
push
and
adc
in
stos
and
fucom
aas
jne
jb
jg
lahf
jmp
pop
push
lock
mov
lahf
push
push
loop
sub
outsb
jle
mov
aad
push
lods
test
pusha
addb
mulb
jp
xchg
mov
int3
jbe
xchg
push
adc
pusha
stos
pop
mov
cmpsl
jns
or
push
lret
hlt
xor
cs
cltd
ficomps
shr
scas
jmp
pushf
movb
leave
and
lock
mov
push
out
cmp
int
scas
rcrl
call
dec
mov
add
lds
and
gs
pushw
mov
fcoml
ss
or
fdivs
jmp
inc
sub
dec
popl
jne
adc
lcall
inc
and
push
imul
xchg
adc
inc
cltd
int3
xchg
out
push
cmpsl
js
cmpsl
call
mov
ds
loop
cld
addr16
cmp
pop
dec
push
jne
loop
into
ljmp
dec
sbb
int3
and
sbb
dec
sbb
icebp
xchg
xor
xchg
jle
jle
inc
cmpsl
mov
mov
xchg
xor
push
mov
mov
cmp
sahf
push
dec
mov
xchg
push
lcall
sub
push
push
sbb
mov
pop
cmp
cltd
clc
lea
push
push
rorb
icebp
cmpsb
inc
shll
cmp
inc
jecxz
ds
push
sub
pop
je
inc
mov
neg
push
jge
sub
jle
fbld
sub
xor
mov
cmp
popa
inc
and
les
gs
std
jle
xlat
sbb
popf
test
test
bound
lds
adc
push
push
fmull
mov
lcall
mov
mov
pop
out
or
push
int3
out
xchg
xchg
pop
jbe
mov
fildll
lcall
cmp
mov
popa
out
jno
and
std
xchg
push
outsb
iret
push
shrb
mov
repz
pop
out
mov
mov
add
xor
ficoml
fiadds
das
in
data16
fstl
adc
cmp
xor
and
arpl
icebp
test
and
xchg
in
cltd
stos
mov
xchg
ds
outsl
or
dec
inc
lret
sti
cmpsb
sbb
cmpsl
mov
call
sub
lahf
ficomps
jo
into
or
test
int
stos
sbb
lods
fbstp
xlat
out
rclb
sbb
xchg
or
jnp
mov
enter
mov
ljmp
mov
and
sbb
cmpl
iret
scas
or
mov
xchg
cwtl
mov
inc
mov
xchg
ljmp
adc
xor
into
aas
push
add
push
lahf
cmc
and
add
stos
sbb
repz
xor
push
mov
add
jno
pop
decl
lcall
leave
lock
nop
int3
lods
mov
inc
or
mov
rcrl
push
cmpsl
mov
pusha
mov
xchg
jle
js
sbb
jae
roll
in
into
in
push
adc
ja
ffreep
add
cli
sbb
inc
sub
and
push
jecxz
out
loope
into
les
adc
iret
pusha
inc
cmpsl
sub
lahf
std
roll
push
or
xchg
mov
enter
adc
or
pop
mov
xlat
mov
sub
pop
mov
fisubl
pusha
xor
ja
rolb
lods
adc
jnp
loopne
or
adc
pop
xchg
jmp
mull
out
xor
lret
out
jnp
in
loop
fldt
mov
subb
dec
imul
jp
out
mov
jle
bound
pop
cmc
xor
pop
fcmovu
cmp
call
mov
test
push
ss
or
mov
aas
lret
and
les
nop
add
inc
push
mov
push
not
jbe
push
xor
push
sub
popa
push
add
aad
cwtl
dec
fnsave
cltd
shlb
cmpsb
rolb
popl
mov
shlb
test
imul
adc
cli
sbb
mov
sbb
fs
xchg
aaa
dec
sub
insl
dec
push
cmp
repz
mov
hlt
movsb
ret
in
notl
loop
add
sbb
out
pusha
jle
inc
jl
and
outsb
xor
out
icebp
sbb
int3
addl
aad
fistps
daa
loopne
popf
fidivs
pop
dec
xor
sbb
push
mov
xchg
stc
mov
cmp
inc
xchg
movsb
pop
jl
adc
pushf
mov
in
call
xor
xchg
inc
repnz
jg
cli
loope
insb
push
hlt
cmp
mov
rorl
add
inc
std
sub
rcrb
xlat
xchg
mov
ds
or
pusha
add
cmp
xchg
fsubrl
sub
jecxz
adc
repz
repz
sub
dec
adc
dec
scas
mov
sub
jnp
cmc
adc
dec
pop
sub
cmp
push
pop
sahf
sbb
lret
jp
pop
xchg
int
in
cmp
fiadds
gs
pop
outsl
cltd
xor
adc
sahf
fwait
stos
shrb
xor
cmp
stc
jbe
mov
dec
aas
std
arpl
push
dec
insl
sub
mov
fwait
cs
push
xchg
stos
lret
or
cltd
mov
mov
setns
dec
add
and
jno
imull
add
xor
xchg
mov
sub
stos
notl
add
lcall
push
and
sbb
push
push
mov
pop
jae
xchg
adc
and
push
and
icebp
xchg
mov
mov
addl
mov
mov
fwait
push
outsl
or
lods
imul
roll
stc
loop
ret
iret
in
xor
mov
popa
sbb
iret
adc
aad
js
arpl
scas
scas
jecxz
inc
gs
or
inc
repnz
xor
shll
mov
shr
dec
ljmp
push
lds
sbb
shrb
xorl
das
addr16
cmp
cmpsb
or
pop
cmp
mov
andb
fists
hlt
inc
sub
shll
lds
xchg
push
lods
dec
rorb
push
outsb
or
push
xor
test
movsb
xor
sarb
out
aam
cmp
sub
mov
sbb
dec
jmp
dec
jge
in
mov
fwait
movsl
and
test
xchg
xor
jmp
loope
pop
pusha
arpl
rolb
xchg
add
push
jne
loop
push
ret
mov
test
sub
popf
push
faddl
xchg
mov
or
icebp
push
jge
push
cld
js
push
ja
xor
addr16
in
push
and
inc
and
cmp
leave
call
mov
xor
outsb
or
jmp
xor
jg
test
test
pop
iret
push
inc
roll
aad
shlb
jne
jns
pop
or
arpl
or
lds
push
sub
stc
call
daa
dec
mov
int
mov
aaa
icebp
cld
mov
push
subl
or
loopne
sub
push
sub
repz
sub
shlb
lock
js
in
fstps
leave
mov
scas
pop
mov
adc
aaa
jecxz
out
xor
sub
mov
movsl
ret
insl
gs
cwtl
add
adc
cs
push
fisttps
scas
xchg
cli
mov
push
xor
loopne
sub
repz
and
cltd
pop
xchg
lock
and
repnz
out
lsl
pop
xor
cmp
insb
mov
out
jns
and
xor
mov
cmp
add
pop
mov
in
cmpsl
xor
je
xor
push
imul
xor
call
out
lods
xlat
push
rclb
lock
lcall
negl
jnp
flds
fwait
pop
add
or
adc
mov
lods
out
retw
iret
xchg
iret
dec
mov
xlat
ret
push
inc
jmp
sti
imul
xor
fcmovbe
repnz
cld
or
jb
pop
push
sbb
and
cmpsl
lds
xor
fisubs
cmp
pushf
pushf
add
cld
or
sbb
add
cmpsl
adc
adc
scas
xchg
out
xchg
ja
lds
cmp
aam
xchg
dec
int3
dec
dec
pop
add
bnd
dec
sarl
or
sub
fbld
mov
inc
lea
cmp
adc
outsb
jmp
scas
arpl
rorl
jmp
jl
xor
loop
popa
jg
cld
js
xor
xlat
lcall
into
push
jge
xchg
dec
scas
lock
or
pop
and
insb
in
inc
insb
pop
cld
xor
xchg
inc
jl
mov
addr16
cmc
nop
cld
sti
mov
push
jne
insl
mov
xchg
pop
mov
and
and
adc
sub
mov
push
inc
add
mov
cmc
jae
insb
aad
adc
cmp
jecxz
jns
jp
lods
push
push
iret
mov
mov
addl
inc
xchg
aas
mov
dec
fs
ja
xchg
pop
cmp
mov
add
xchg
leave
mov
cmpsl
out
mov
inc
xchg
bound
adc
insl
call
into
mov
adc
repz
outsl
daa
adc
pop
ds
data16
push
xchg
fs
push
hlt
fs
ja
xchg
cli
outsl
push
int
pop
enter
aaa
js
bound
sbb
das
mov
xor
jle
sbb
cmp
insl
push
fcompl
jl
sub
push
cmpsb
ret
jmp
ret
dec
sbb
loope
mov
dec
inc
xor
stc
push
push
arpl
outsl
cmp
test
or
popl
lock
cmpl
sbb
and
adc
stos
iret
bnd
getsec
out
cmp
rcrb
push
popf
xchg
loop
das
mov
dec
mov
pusha
mov
mov
cmp
or
push
inc
mov
fdivr
icebp
lea
mov
mov
xor
push
je
ja
in
out
mov
add
ja
in
out
inc
adc
test
test
inc
inc
jnp
mov
mov
xorb
mov
pop
jns
jae
cli
sub
xor
and
inc
cli
insb
in
and
push
cmp
addb
popf
mov
pop
pop
idivl
add
test
mov
clc
mov
lods
mov
inc
xor
inc
sahf
mov
push
int3
movsb
dec
nop
popf
insb
fcomps
out
lock
pop
enter
and
lcall
sub
cmp
jecxz
sbb
inc
cmp
lods
cmpsl
rcrb
push
insb
jo
jge
frstor
mov
pop
push
lcall
popa
mov
mov
lret
xchg
add
xor
lea
cmp
mov
mov
push
pop
push
and
icebp
cs
je
cmp
xor
inc
pop
mov
push
inc
pop
test
bnd
fldcw
and
pop
mov
rolb
hlt
pop
sbb
into
ljmp
scas
xor
add
in
shl
mov
sub
enter
and
ud0
adc
adc
fldenv
in
sti
jmp
pop
mov
inc
push
push
push
xchg
stos
inc
into
pop
test
xor
dec
pusha
xor
xchg
in
xor
or
add
lock
cmpsl
cmp
scas
mov
and
jl
divl
filds
lret
add
mov
imul
nop
outsb
pusha
and
xor
mov
xor
xor
stc
add
cmp
mov
jle
leave
enter
push
add
fidivrs
lret
push
adc
lahf
mov
arpl
xchg
cmp
repz
fldt
arpl
inc
adc
inc
js
int3
sub
popf
pushf
stc
jb
movsb
divl
adc
cmp
xlat
sti
pop
fstpt
adc
jbe
or
imul
sti
mov
jl
clc
stos
ficoms
mov
arpl
jge
rcrl
sub
push
push
dec
test
outsl
add
jb
clc
sbb
adc
ret
shll
xchg
lock
insl
call
arpl
jge,pn
js
stos
out
incb
xchg
pop
push
pop
mov
outsb
inc
subl
xor
cli
push
int3
cmc
in
jnp
loop
push
add
xor
jne
jno
jle
mov
cli
aad
xor
push
jnp
inc
js
test
imul
data16
out
movsb
stos
das
cmp
jl
push
xor
mov
mov
incl
xchg
xor
dec
jp
inc
fsubrs
or
sbb
lret
in
mov
lahf
arpl
adc
outsb
int
mov
pop
pop
sub
dec
jge
sub
pop
ret
out
addr16
cmp
xorb
xor
sbb
sbb
cmp
stos
lock
cmp
add
mov
cmpl
sbb
ljmp
push
mov
fldcw
and
outsb
dec
lds
xor
out
sub
cltd
lock
sahf
test
arpl
push
or
pusha
xchg
add
dec
xchg
add
cs
cmp
repnz
xor
mulb
mov
push
in
rolb
out
sub
and
push
cmp
hlt
popw
scas
xor
out
or
fcomps
mov
cmp
push
push
loope
add
xor
cwtl
sub
cmp
in
jmp
int
out
adc
fsts
cld
cmp
addl
push
mov
inc
in
in
jae
jae
pushf
dec
and
and
ja
mov
mov
nop
mov
ret
dec
or
outsl
fsub
or
and
jno
outsl
js
cs
lret
popa
or
loopne
or
int3
xchg
mov
sbb
imul
ljmp
fisttpll
inc
jno
enter
call
inc
es
cmp
loope
cmp
cld
sbb
aaa
lods
mov
or
mov
loope
scas
outsb
scas
push
mov
test
add
in
out
sbb
orb
imul
adc
push
xchg
lret
mov
xchg
ja
test
out
mov
xor
mov
frstor
notl
mov
lret
jo
mov
hlt
mov
mov
add
sbb
add
sub
popf
ds
iret
and
xor
test
xchg
icebp
iret
xor
aas
cmpsb
orb
add
outsb
ljmp
push
inc
bsf
mov
lret
fcom
das
ficompl
es
icebp
rolb
sub
hlt
sbb
or
daa
daa
andl
out
sub
dec
arpl
adc
daa
addr16
push
sub
loopne
out
stos
jl
sbb
jo
aas
jb
mov
adcl
pop
jne
mov
add
sti
movsl
test
adc
sti
sarb
add
cli
je
dec
xor
movsb
dec
ljmp
cwtl
insb
push
dec
in
jg
sti
pop
mov
mov
cmp
sarl
std
nop
pop
icebp
les
xchg
arpl
inc
dec
adc
out
inc
mov
enter
int
aad
mov
push
sti
or
inc
dec
jbe
outsb
inc
in
pusha
mov
repnz
adc
pop
pop
loopne
arpl
fcmovbe
repnz
mov
cld
icebp
pop
cli
and
repnz
les
mov
push
add
out
popl
stc
adc
mov
cmpsl
inc
test
out
ja
lock
jne
push
pusha
add
shll
dec
mov
testb
push
movl
es
fyl2xp1
mov
pop
jbe
jbe
je
popf
pop
sub
mov
rorb
adc
sub
xchg
fimuls
scas
sbb
mov
mov
cmp
std
imul
sbb
xchg
stos
test
xlat
xlat
fs
sahf
pop
fwait
mov
inc
sti
aaa
xorl
outsl
test
mov
sbb
push
xchg
insl
mov
cmp
push
cmp
incb
push
mov
cmp
aam
fldenv
movsb
cmp
push
fidivl
leave
xor
stos
mov
std
xchg
mov
inc
lret
inc
pop
adc
hlt
adc
pushf
fildll
pop
dec
pop
push
dec
pop
loopne
insb
add
repz
xchg
or
gs
lock
or
scas
hlt
xor
jbe
testb
cli
roll
enter
add
pop
outsb
jnp
sahf
jne
or
mov
xchg
add
in
mov
xchg
mov
inc
adc
mov
add
sbb
jmp
das
push
shl
cli
call
pop
push
or
daa
add
iret
jmp
mov
ja
clc
movb
xor
and
cld
xchg
mov
sbb
sbb
xchg
add
mulb
sbb
hlt
aas
mov
jg
nop
adc
cmp
lret
push
xchg
adc
cmp
or
fsubs
rcrl
mov
cwtl
inc
je
xor
lret
sub
jp
sub
repnz
and
add
jl
cmp
xor
sub
and
mov
movsl
xchg
outsb
and
xchg
xchg
dec
jns
rcrl
cmp
pop
xor
mov
inc
or
je
andl
mov
shrb
jmp
push
adc
adcb
mov
out
dec
mov
jae
mov
aam
add
push
in
in
addr16
imul
fldcw
cwtl
mov
pop
adc
cmp
shlb
dec
dec
push
mov
push
cmp
flds
jl
xchg
cs
pushf
lods
push
or
scas
jbe
dec
mov
cmp
stos
adc
into
dec
out
ja
or
dec
cmp
js
lahf
mov
test
pop
xchg
lods
xchg
sbb
out
inc
outsb
or
and
std
bound
mov
sbb
add
rcll
pop
fistps
mov
xor
push
and
imul
inc
xorb
jg
fcoms
push
das
jbe
mov
xor
and
shrb
jmp
cmpl
rorb
and
bound
pop
mov
test
or
mov
popa
cmp
ret
adc
push
std
sub
popa
mov
mov
scas
out
jge
cmpl
mov
or
shrb
mov
xchg
outsl
sbb
daa
sahf
mov
outsb
push
xor
sbb
xchg
push
std
xor
out
jl
inc
cmp
repnz
pusha
pop
jb
xchg
cwtl
pop
popf
sub
xchg
sti
stos
cmpsb
mov
ficomps
lahf
imul
xor
jecxz
fnstenv
movl
stos
leave
mov
insl
inc
mov
lcall
xchg
icebp
cld
scas
lds
inc
movsl
and
add
jb
jbe
add
jb
push
adc
cmp
mov
call
inc
xchg
shl
dec
arpl
mov
mov
push
mull
jnp
stos
xchg
cmp
push
pusha
mov
cli
scas
mov
loope
add
js
cmpsb
loop
push
mov
lret
sub
sbb
sub
bnd
or
and
jo
mov
jnp
cmp
dec
inc
aaa
dec
pop
push
dec
pusha
mov
cmpsb
daa
dec
faddp
inc
jmp
dec
je
sub
jge
sub
xchg
fucom
jp
arpl
notl
xchg
test
or
mov
ret
mov
fstpl
cmp
divl
pop
loopne
push
xchg
adc
out
test
sub
cmp
test
mov
ss
mov
mov
mov
scas
mov
ljmp
clc
jp
mov
pushf
jnp
or
negb
test
cmp
pop
sub
fisttps
mov
gs
pop
aas
adc
xorb
push
scas
pop
mov
add
mov
jno
pop
mov
pop
sbb
ret
push
inc
mov
push
outsw
xchg
jno
lahf
hlt
sbb
pop
lcall
mov
mov
or
pushf
and
inc
cmp
inc
sbb
cmc
inc
lcall
mov
int
movsl
or
es
ja
ret
cmp
repnz
lret
add
ret
mov
out
xor
iret
shlb
mov
xchg
or
add
pop
inc
sub
mov
and
inc
scas
movsl
aad
outsl
fisubl
xchg
sbb
xchg
out
add
leave
jmp
data16
or
adc
xchg
nop
sbb
mov
repnz
ja
test
dec
cmp
dec
jmp
insl
mov
sbbb
shlb
fdivl
jecxz
out
lcall
imul
shll
negb
aad
rclb
jl
pop
inc
and
mov
aaa
fnstenv
movb
adc
inc
or
and
dec
xor
mov
movsl
fcoml
test
stc
pop
sub
jo
lret
daa
into
movsl
stos
lods
icebp
je
scas
jp
shlb
mov
outsb
loop
cld
addl
sbb
mov
jnp
jg
roll
cmp
sbb
jmp
aas
addb
nop
xor
mov
pusha
dec
aad
es
outsb
fldl
or
cmp
push
dec
ret
idivb
pusha
les
mov
imul
pop
mov
xor
int3
inc
fimull
pop
sbb
cwtl
lcall
mov
int
aam
cmpsb
or
sbb
or
mov
jge
mov
xor
int3
shrb
dec
xor
push
xchg
push
and
xor
daa
mov
mov
scas
movsl
cmp
sbb
mov
inc
mov
xor
add
in
outsl
or
fnop
sub
push
call
and
cmp
std
ljmp
pop
inc
push
mov
xchg
icebp
fnsave
xchg
bound
push
cwtl
sbb
xlat
insl
mov
sub
or
outsl
xchg
pop
fs
or
pusha
xor
xor
mov
jp
push
xor
ljmp
into
je
addl
push
mov
pop
xor
or
or
mov
xchg
sbb
and
outsl
cmpsb
dec
fwait
jbe
sbb
into
mov
lret
rorb
out
shll
loopne
movsb
or
call
mov
add
repnz
fcomip
jb
pop
mov
xor
push
jno
lret
cmp
sarb
and
test
ds
sar
mov
movsb
psubsb
fs
jmp
sbb
xchg
push
shrb
les
in
mov
dec
lds
sub
sahf
bound
and
jno
mov
ret
ja
cmpsb
cmpsl
jle
cmp
hlt
lods
std
add
insl
mov
ja
dec
xor
subl
lds
or
sbbl
rorb
lods
test
add
pop
clc
and
test
jns
jae
mov
pushf
mov
mov
mov
mov
ds
and
mov
popa
jp
cwtl
add
dec
loopne
xchg
dec
jl
in
inc
xchg
test
push
lahf
push
fstpl
add
push
call
mov
mov
and
insb
int3
inc
call
xchg
sbb
jle
loop
mov
popf
jecxz
sbb
popf
or
js
jecxz
push
jmp
jge
mov
out
adc
inc
xor
jnp
xchg
adc
lock
mov
xchg
ret
cli
jo
xor
pop
ljmp
lahf
push
push
mov
adc
xor
mov
cs
push
jmp
rcrb
cmpsl
mov
and
ret
cmc
insb
jl
cmpsb
stc
popf
lahf
in
push
mov
roll
inc
add
popa
clc
sbb
pop
cld
cld
add
mov
scas
jno
push
in
mov
dec
popa
pop
aad
popa
push
or
cs
mov
sahf
test
sub
test
sbb
lods
sti
stos
dec
mov
fsubl
mov
pop
mov
sbb
jae
cltd
dec
sub
fisttpll
xlat
and
xor
jb
std
cs
call
add
iret
mov
inc
pop
mov
dec
dec
fistpll
mov
lret
sbb
pop
mov
sub
sub
clc
mov
sub
dec
outsl
pop
out
add
add
mov
mov
jmp
leave
or
leave
or
and
jo
mov
mov
jmp
mov
dec
nop
int3
movsl
jge
es
popa
xlat
pop
add
push
mov
out
fld
mov
cld
dec
data16
xor
in
arpl
push
jg
pop
mov
xchg
cmp
sbb
dec
jnp
mov
cmpsl
cmp
jb
pop
push
sbb
cmp
push
rcll
cmp
inc
inc
pop
add
fnstenv
fmuls
lahf
gs
inc
push
add
into
jae
mov
xchg
sbb
and
hlt
popf
dec
pop
int3
sbb
dec
xor
push
push
pop
or
mov
icebp
and
imul
jo
inc
test
in
inc
mov
inc
fdivp
jmp
mov
inc
jae
sti
pop
in
pop
mov
shlb
xor
loope
shl
hlt
outsb
ss
fldenv
or
fstl
nop
or
mov
pop
adc
loop
addr16
clc
sub
push
adc
sbb
clc
js
ficomps
xchg
sbb
enter
in
into
incb
mov
int3
dec
xchg
sbb
and
xor
pop
mov
roll
popa
xorb
sbb
xchg
int3
push
cmpsl
mov
dec
xlat
or
lret
dec
xlat
cwtl
and
inc
mov
fildl
inc
mov
sub
ja
xlat
xchg
inc
xlat
pusha
lock
cmp
leave
out
addr16
fiaddl
fidivrl
inc
jecxz
movsl
dec
in
dec
or
cld
pushf
daa
stos
lods
push
jb
test
mov
ljmp
imul
xchg
fiadds
add
xchg
dec
xchg
loope
aas
aas
xchg
in
jmp
sahf
push
push
jle
or
in
loop
fbstp
xchg
dec
mov
pop
popa
mov
mov
xor
fimull
insb
jp
xchg
leave
xchg
jns
sbb
add
ds
in
xorl
das
lcall
xchg
or
sbb
sub
jb
data16
fsts
hlt
sahf
jp
out
js
outsl
stc
loop
test
in
rolb
loop
and
inc
xor
imul
cmp
pushw
mov
add
popf
xchg
lret
xchg
adc
xchg
js
stc
outsb
jmp
sub
xor
outsb
psrld
dec
jl
cmp
jne
cmp
outsl
cmp
lret
mov
dec
pop
cli
pop
fpatan
pushf
mov
lods
and
cld
ret
xchg
sbb
lock
pop
and
jg
data16
sub
fnstenv
inc
jecxz
sub
div
loop
aas
in
outsb
xchg
mov
addr16
jns
lcall
and
xor
outsb
mov
inc
stos
loopne
dec
lcall
out
or
bound
adc
mov
xchg
cmp
xchg
rcrl
and
sub
cmc
ret
ja
leave
test
ret
out
and
icebp
aam
jbe
pop
xor
insb
push
test
leave
push
push
pushf
aas
pusha
mov
stc
xor
sub
addr16
xchg
cmp
add
or
mov
sbbl
lret
sar
jno
push
pop
mov
or
mov
into
jmp
and
jb
and
nop
pusha
sti
and
cmc
mov
pop
pushf
dec
movsb
daa
out
ss
notb
dec
sub
daa
ljmp
pop
mov
nop
out
inc
mov
pop
and
mov
lcall
jg
adc
xchg
or
push
push
dec
test
dec
and
push
fldl2t
cmpxchg
inc
mov
rcr
push
sub
into
dec
shrb
sbb
pop
xchg
lock
or
adc
mov
das
or
or
test
in
aaa
nop
inc
dec
adc
sahf
std
push
int3
push
sbb
das
pop
pop
xchg
hlt
and
pop
cld
movsl
push
push
cmpsl
andl
mov
jns
adc
subl
pushf
adcl
std
inc
in
gs
int
frstor
lahf
loopne
outsb
jmp
pop
cmp
roll
rcrl
pusha
iret
push
push
or
adc
add
clc
push
aaa
pop
int3
inc
inc
xchg
dec
fnsave
cmp
dec
xor
mov
inc
out
cmp
add
fnsave
fcomp
push
jns
mov
fwait
aam
decl
inc
faddl
jns
arpl
nop
push
ror
xchg
xor
pop
stos
mov
and
xor
repnz
jo
popf
xchg
cmp
int
dec
mov
jo
sub
adc
jno
inc
adc
mov
fs
orb
rol
scas
cmpsl
adc
pop
mov
mov
jp
mov
je
insb
test
push
jns
addl
adc
repnz
push
ss
cmpsb
lea
lret
pop
aaa
mov
dec
add
push
fcomps
dec
int3
jg
add
push
push
cmp
push
cmp
sbb
dec
addr16
loop
clc
pop
testb
pop
pop
pop
mov
stos
iret
subb
sub
stos
lahf
adc
push
pushf
int3
pop
xor
aas
repnz
aam
push
or
pop
jmp
fprem
dec
jo
ficoml
mov
sti
sbb
adc
lret
or
mov
or
or
xor
dec
cmp
jbe
es
call
lret
lahf
sub
lods
jge
mov
outsl
mov
lret
pop
add
ficoms
push
mov
mov
negl
mov
mov
int
lcall
mov
xchg
cmp
scas
data16
loope
dec
repz
jecxz
scas
cmp
gs
mov
dec
int
sbb
push
into
inc
cli
lret
mov
push
ficoml
mov
nop
sub
fisttps
mov
or
insb
fmull
push
popa
sub
cltd
cwtl
sbb
pop
testl
cs
sarb
pusha
push
loopne
cmp
fimuls
add
jmp
push
and
lea
mov
sub
das
rcr
das
rolb
push
in
lea
outsl
sahf
test
stc
out
popa
sub
jge
leave
cmpb
dec
adc
into
lock
mov
jl
xchg
dec
clc
mov
xchg
dec
mov
lods
push
je
lods
pop
mov
push
mov
les
xlat
push
stc
mov
jmp
pop
jns
add
push
ljmp
ret
push
push
sbb
in
arpl
fdivl
push
push
mov
es
lea
std
xchg
sub
repz
mov
cs
pop
xchg
seta
sbb
adc
push
in
iret
les
lods
pop
js
ljmp
xor
mov
in
ret
test
sub
jne
mov
xlat
dec
jp
push
push
pop
add
push
bound
jbe
pop
repz
ret
and
ret
dec
push
cmc
icebp
dec
loop
xor
and
test
mov
cs
test
xor
inc
pop
mov
cmc
dec
lcall
jmp
rorl
sbb
js
xchg
inc
cli
mov
insl
test
das
out
sarl
inc
inc
sub
std
xchg
fcoms
int
scas
je
dec
cmp
insb
pop
ds
fsubrs
push
arpl
dec
and
mov
insl
enter
add
pop
test
xchg
rcrl
aas
out
mov
inc
js
jmp
clc
and
fld
mov
inc
les
cmp
xor
or
dec
fdivs
or
rcll
pop
aaa
loope
mov
insb
sbb
sbbb
cli
popa
shll
in
pop
stos
daa
mov
lret
add
enter
lea
add
int
add
xchg
test
lcall
sbb
xchg
std
lods
jb
push
fildl
xor
imul
sbb
shrb
cmp
js
shl
mov
ljmp
pop
and
pop
mov
mov
bound
push
inc
pop
xchg
int3
adc
dec
hlt
add
cwtl
mov
cs
pop
adc
cld
stos
ss
ror
sub
adc
xchg
adc
jno
stos
mov
xchg
cmp
sub
nop
test
ficoms
mov
mov
sbb
imul
out
xor
cwtl
iret
add
cmp
xchg
sub
rcrl
std
jge
cwtl
push
xchg
cmc
ljmp
lock
sahf
scas
add
stos
subl
pop
lock
ror
inc
mov
mov
mov
cmp
add
jle
das
mov
push
ds
sti
cs
pusha
in
leave
sbb
icebp
js
mov
mov
cmp
push
xchg
sbb
mov
ja
xchg
and
push
pop
daa
pop
btl
or
lret
xchg
outsl
jns
sub
push
ds
and
js
inc
adc
fdivs
jl
cmpsb
mov
mov
mov
sti
xchg
loope
xor
outsb
mov
aam
test
xchg
pop
mov
dec
pop
ds
notl
cmp
sahf
jg
lcall
inc
push
js
fwait
test
sahf
mov
nop
sbb
xor
mov
in
loopne
testb
jecxz
gs
out
adc
push
jl
fsubrl
push
aad
jl
in
mov
movsl
jmp
enter
jl
psubusb
mov
jg
or
dec
lods
daa
jecxz
or
hlt
out
inc
inc
jns
add
xor
lcall
ret
arpl
cmp
xchg
jne
xor
sbb
in
sub
dec
inc
imul
and
push
push
cltd
es
or
das
jo
cmpsl
movsl
dec
push
dec
jne
xor
adc
push
add
rorb
add
dec
push
mov
cmpsl
dec
mov
mov
mov
pop
clc
cli
leave
daa
inc
pop
add
dec
lret
inc
les
mov
jp
aad
negl
movsl
mov
shll
dec
cmp
or
sbb
mov
lret
int3
in
outsl
adc
in
xchg
in
lds
outsl
mov
jl
pushf
dec
jno
je
inc
lahf
cmp
push
lahf
jno
dec
fistpll
lret
push
adc
loop
es
cltd
mov
ret
cmpsl
movsb
dec
jp
test
popa
cmc
cmc
and
push
repnz
cmp
cmpl
shl
test
imul
mov
push
fisubl
cs
mov
mov
es
imul
popf
jecxz
loope
out
mov
push
jns
popf
cmp
pop
xchg
and
or
inc
test
std
divb
jecxz
jp
aaa
cli
daa
insl
aas
test
jmp
lahf
inc
mov
dec
xlat
jmp
push
xchg
pushf
pop
daa
les
bound
jg
fsubr
xchg
or
popa
adc
int3
test
lret
jmp
jb
push
lods
xor
in
dec
dec
or
xor
sbb
dec
or
pop
lods
mov
mov
scas
imul
int3
test
jecxz
arpl
in
or
mov
scas
loopne
insl
lret
jbe
nop
rorb
scas
loop
pop
mov
bnd
sbb
in
movsl
das
ss
negb
shlb
xchg
mov
aas
mov
lret
inc
add
mov
pop
mov
sarl
mov
or
fisttpl
and
jmp
jbe
shll
sub
sbb
inc
xor
push
sub
xchg
mov
ss
fisubs
mov
bound
dec
sti
add
pop
dec
mov
inc
test
cli
outsl
pop
push
loopne
out
mov
out
sti
pusha
cmp
jae
jmp
inc
ret
xchg
scas
mov
icebp
cs
push
adc
idivl
or
cmp
sub
aad
rorl
xor
xchg
add
test
inc
push
jno
loopne
push
jmp
popl
push
clc
test
rcl
pushf
lds
aaa
push
test
sub
mov
sub
xorps
mov
and
xchg
insl
mov
and
out
push
mov
int3
scas
insb
call
popl
negl
movsl
jle
xor
call
stos
push
inc
cwtl
bts
outsl
mov
cltd
sbb
fisttps
mov
xor
xlat
push
cmpsl
test
xchg
sub
std
and
sub
push
adc
out
stc
repnz
decl
fdivs
mov
inc
push
xchg
cmp
scas
or
lock
ret
cs
sub
aam
mov
ds
mov
ror
jl
dec
cmpsb
mov
lahf
popa
ljmp
and
cmpsb
sti
pop
scas
inc
jb
cmpsl
sub
jg
sbb
mov
cmp
sarl
pop
idivb
imul
sbb
pop
gs
ss
pop
xchg
daa
lods
jns
mov
add
mov
ss
xchg
jl
cmc
shl
jo
test
push
jnp
fsubrl
and
or
popa
subb
mov
lret
loopne
or
insb
mov
mov
in
inc
out
out
lcall
imul
jo
mov
and
subb
shlb
and
insl
icebp
add
clc
in
cmp
dec
xchg
pop
xchg
inc
fsqrt
and
lods
pop
sti
aam
ror
cltd
mov
popa
movsl
rorb
icebp
xlat
enter
adc
imulb
jmp
test
and
ja
push
sbb
inc
and
stc
testb
insb
cltd
jecxz
out
jge,pt
lret
pop
loop
dec
stos
push
dec
xchg
test
ss
adc
lahf
std
cmp
sqrtps
mov
mov
into
pop
in
add
add
xchg
sbb
test
mov
mov
push
movsl
xchg
adc
dec
push
pminsw
fisttpll
stos
loope
in
les
leave
es
clc
rol
cmp
pop
dec
call
adc
or
sub
and
ss
sbb
mov
movsb
nop
sbbl
iret
lock
push
mov
sub
stos
fidivs
lods
pop
ret
scas
pop
jp
cmc
push
and
jmp
push
pusha
mov
js
arpl
mov
xor
dec
bound
inc
dec
fdivp
xor
cli
inc
mov
out
out
call
push
test
lcall
testb
dec
ret
out
test
and
mov
mov
or
pop
repz
test
stc
scas
mov
gs
test
insl
jb
xor
mov
lods
das
dec
mov
xor
out
and
and
xchg
jge
mov
sarl
mov
cmp
or
scas
fcomip
push
ljmp
dec
mov
ret
dec
xchg
std
pop
jno
xchg
or
sti
mov
push
pop
push
mov
lret
mov
aaa
imul
xchg
test
clc
push
lahf
repz
add
test
jae
sub
rorb
out
xchg
sbb
cmp
mov
push
hlt
fdivl
mov
imul
inc
daa
insb
movsl
mov
push
and
int
add
cmp
or
sub
pushf
xchg
push
fstpt
pusha
popf
jne
inc
addr16
lcall
mov
das
adc
addr16
rclb
pop
mov
xchg
out
mov
nop
fstl
or
divb
jle
lret
fstl
call
insl
jmp
mov
out
fidivrl
rcl
addr16
mov
jle
data16
pop
mov
addr16
mov
cli
mov
sub
pop
jecxz
inc
lcall
inc
ror
lock
adc
mov
scas
jle
mov
xchg
das
and
sbb
jp
lret
add
sub
addr16
xor
bound
adc
xchg
in
xchg
push
test
sub
int
cmp
pop
aaa
and
inc
and
imul
pop
mov
aad
cltd
mov
icebp
cmp
shl
in
stos
outsl
pop
cmp
scas
sub
lods
dec
ret
mov
icebp
jne
lahf
pop
pop
mov
test
push
dec
jae
daa
lods
cmpsl
rclb
in
cmpsl
push
xor
xchg
lock
jbe
push
jns
in
out
pop
or
fisubrs
xchg
pop
jns
push
dec
dec
or
jne
dec
aaa
mov
add
mov
push
addr16
mov
stc
jns
xchg
push
dec
add
lock
int
pop
pushf
fdivrp
fistl
popa
xor
inc
aam
cmpsl
cld
jmp
lret
mov
icebp
pop
or
sub
rorl
sbb
inc
cmp
ret
cmpsb
cli
pop
lods
sbb
cmp
xchg
stc
sbb
repz
mov
repnz
jno
das
inc
outsb
push
inc
inc
imul
pushf
sbb
mov
lods
mov
xchg
pop
insb
lock
pop
rcrb
je
sub
fnsave
call
lea
push
hlt
cwtl
xchg
and
insb
fidivrl
std
loope
sti
lcall
lds
jns
sbb
repz
cld
mov
or
ret
pop
xchg
or
pop
daa
cmp
and
enter
mov
pop
mov
fstl
jmp
adc
or
sahf
or
mov
adc
loopne
cmp
bound
shrb
addr16
jns
int3
test
mov
xchg
adc
xor
ljmp
int
andl
lahf
jns
xchg
lods
insl
mov
push
testl
xchg
and
sub
test
leave
mov
inc
stos
std
add
mov
stos
jle
jmp
xor
mov
cwtl
or
mov
xchg
sub
xchg
test
lret
ffreep
call
les
mov
in
adc
addb
les
les
imul
sahf
push
adc
cmp
bound
cwtl
jne
jb
pop
negl
std
push
jecxz
xchg
push
mov
sbb
popf
adc
cmc
inc
push
inc
jno
imul
xlat
lahf
add
ja
lahf
data16
rorb
pop
adc
mov
das
repz
jle
fstl
inc
movsb
les
cmp
enter
bound
push
clc
pop
rcrl
insb
cmp
mov
enter
popa
stos
mull
outsl
jns
ds
adc
fcoml
sarl
int3
xchg
outsl
jp
lods
ljmp
out
inc
adc
popf
jns
mov
ja
xchg
mov
mov
or
call
lods
mov
push
rcrb
pop
jno
sbb
in
or
lahf
jae
fs
leave
ret
mov
xor
cmp
cltd
jno
dec
xchg
mov
mov
adc
xchg
or
imul
into
retw
adc
out
ret
outsl
dec
mov
jb
jg
aas
int
lret
mov
lret
lret
inc
push
lods
out
mov
xchg
ja
and
mov
push
insl
in
xlat
mov
call
scas
stos
xchg
adc
xchg
jae
mov
xchg
pop
xchg
repz
imul
sbbb
ss
mov
out
out
stc
xchg
or
aas
fisubrs
or
test
cmp
imul
and
jle
cli
push
inc
xor
ret
ret
sub
cmp
inc
ja
lahf
dec
test
xor
push
pop
push
jbe
fnstsw
jbe
push
lcall
xchg
add
fsubl
and
repz
mov
je
aaa
pop
pushf
lock
cmpsb
std
addr16
pop
and
adc
sbb
adc
aas
xor
out
stos
mov
aad
clc
addr16
rcll
and
ss
jp
push
push
out
add
pop
pop
and
ja
add
ret
dec
xchg
out
ret
and
sub
lods
cli
out
sar
jae
jecxz
ljmp
aam
js
cmpsb
pop
in
cwtl
data16
popf
pop
pop
pop
repz
mov
mov
inc
imul
data16
xchg
popa
xor
or
jbe
adc
fbld
jmp
xchg
fucomip
rcll
sbb
jb
in
aaa
gs
or
pop
and
push
jmp
cmp
adc
out
shll
sahf
and
jno
pop
rorl
xchg
jno
push
ficomps
or
scas
nop
push
out
mov
iret
ret
imul
or
lret
and
and
pop
lods
dec
sbb
movsl
add
movsb
mov
loopne
jns
leave
jle
lcall
pop
sub
lcall
and
scas
test
popa
sbb
dec
sub
and
xchg
mov
cmp
fsubrs
aad
fiadds
out
call
int
jae
add
adcl
mov
fmul
xor
xor
js
mov
je
ljmp
loopne
test
ds
loopne
jecxz
stc
xchg
aaa
dec
xchg
mov
adc
mov
cmc
aaa
daa
out
dec
sbb
xchg
lea
xor
insb
pop
add
clc
addr16
mov
mov
cmp
outsl
mov
pshufw
pop
mov
insb
mov
add
mov
pop
and
push
push
mov
inc
xor
adc
das
sbb
inc
push
push
or
ss
sub
mov
sub
std
lret
pop
mov
mov
mul
pop
jp
sub
xor
inc
test
inc
add
aam
or
or
jmp
lea
sti
sahf
fucomip
sarl
ror
ficoml
or
or
lea
mov
xchg
popa
dec
mov
inc
jp
sbb
or
mov
cld
mov
movsl
sbb
add
inc
pusha
loopne
xchg
aas
sub
cwtl
cmp
loop
test
add
fimuls
lcall
mov
repnz
push
into
jnp
aas
jns
jle
sub
fwait
adc
mov
mov
out
es
call
pop
ret
gs
outsb
pop
testl
scas
ret
add
xchg
mov
mov
xchg
fcoms
cmpl
mov
cmp
mov
lcall
push
add
mov
add
mov
mulb
lds
int
popf
leave
lret
xor
mov
int
mov
pop
insl
push
rcll
dec
je,pn
mov
push
fwait
jle
movsb
std
xchg
shlb
sbb
jmp
icebp
and
xchg
sub
xchg
imul
or
sar
sbb
mov
xchg
jmp
sub
movsb
add
xchg
orl
xchg
lahf
or
hlt
sub
out
dec
dec
push
mov
in
cmp
mov
mov
sub
xchg
pop
adc
adc
jbe
lcall
mov
dec
inc
sub
mov
test
and
pusha
shrb
mov
ljmp
enter
jle
mov
rorb
roll
pusha
das
pop
mov
jns
hlt
adc
add
xchg
jg
push
xchg
ljmp
inc
jp
mov
addr16
fsubrl
mull
ja
pusha
mov
rclb
mov
into
mov
into
movl
pushf
push
pop
cltd
xor
mov
mov
mov
jmp
and
dec
or
mov
jno
ljmp
aad
aas
dec
pop
loope
mov
adc
add
pop
in
lahf
inc
scas
adc
mov
stos
xor
sahf
lods
leave
fs
and
repz
add
or
push
sbb
push
pushf
mov
cmpsl
out
jl
pop
imul
mov
imul
pop
push
call
xor
add
popf
mov
jb
in
roll
in
mov
into
sbb
outsl
push
call
lahf
std
jnp
cld
lahf
hlt
inc
xchg
stos
data16
sbb
outsl
or
pop
andb
cmpsl
movsb
fnstenv
lret
jnp
inc
sbb
sbb
and
mov
jnp
sub
add
inc
mov
sahf
cmpsl
jb
jmp
adc
xchg
and
repnz
aas
xchg
ds
push
in
shrl
pop
lods
or
test
out
and
mov
fwait
sub
lret
xor
inc
mov
xchg
std
popf
push
in
mull
add
dec
xor
adcb
jne
cmp
in
jo
push
or
xor
stos
xchg
xchg
into
stos
xor
xlat
loopw
nop
shrb
aam
mov
jb
nop
sbb
arpl
jno
bound
rol
rcr
aad
or
pop
sub
into
cmp
fidivrl
jg
in
mov
push
fldcw
xor
inc
push
stos
subl
notb
out
inc
xor
cwtl
mov
push
mov
gs
or
je
cmp
pop
iret
shl
xor
mov
mov
lock
jle
nop
add
mov
jmp
pop
xor
mov
push
and
cld
and
push
aaa
dec
pushf
test
out
mov
dec
adc
and
mov
sahf
insl
add
xor
cli
or
dec
cmp
and
sbb
fcmovne
daa
testl
push
sbb
out
pusha
sub
inc
mov
repz
jae
mov
enter
outsb
nop
adc
iret
out
sbb
cmp
es
add
mov
inc
and
cld
sub
or
jmp
cmpsl
jae
movsb
adc
data16
mov
push
xor
or
sbb
inc
test
push
ror
and
mov
mov
dec
mov
sub
mov
or
testb
stc
mov
cmc
or
out
mov
stos
fstl
fisubrs
int3
cmpsb
cmc
mov
mov
add
or
pop
loop
aad
imul
imul
xchg
cli
cmp
insb
or
test
aam
cmp
roll
cld
pop
or
mov
loop
cmp
cmp
mov
xchg
push
mov
arpl
dec
sahf
jb
mov
daa
std
cmp
clc
adc
xchg
fucomp
push
xchg
cmp
dec
shll
mov
adc
lret
mov
jp
jae
icebp
stc
adc
jecxz
cwtl
mov
or
mov
adc
push
cld
repnz
ja
sti
ret
das
and
lret
test
sti
cmp
push
pop
ret
sub
lea
xor
jne
add
insl
negb
rcl
and
cmp
testb
jmp
jae
sahf
insl
pop
jnp
xrelease
lds
cmp
adc
aas
jnp
shr
xchg
fistps
stos
xor
sbb
sub
leave
loopne
xor
sub
inc
rol
pop
pop
xor
jne
mov
or
mov
fdivrl
out
xchg
fldcw
push
and
movsb
jo
sbb
xchg
push
adc
lcall
repz
sub
in
jl
js
jb
xchg
xchg
mov
mov
xchg
mov
pop
dec
aad
insb
hlt
and
cltd
scas
sbb
mov
add
cmp
pusha
xchg
adc
popf
adc
repnz
jb
out
test
imul
inc
sti
in
xchg
stos
lea
je
jle
addr16
mov
mov
dec
jg
in
inc
jo
clc
ret
outsl
push
mov
dec
cld
mov
dec
jo
pushf
hlt
rcpps
pop
and
xor
out
loopne
mov
scas
fsubp
and
sbb
sub
ja
or
mov
sub
sbbb
adc
aas
adc
jge
mov
cmp
and
xor
xor
sub
cmpsb
js
out
inc
mov
push
and
je
jns
xorl
or
push
cmc
fsubs
stos
xor
mov
push
push
mov
jl
clc
rcrb
jge
insb
mov
xchg
jmp
jns
xor
das
dec
inc
mov
bound
into
add
push
cmpb
movsb
inc
adc
xor
jno
mov
int3
mov
pop
cmp
lret
mov
xor
std
pop
je
cmp
jns
lret
ret
mov
test
leave
sbb
in
subl
mov
sarb
outsl
and
push
or
nop
and
dec
dec
mov
and
dec
clc
jmp
xchg
vmovntdq
test
inc
ja
pop
cmc
push
mov
test
mov
push
dec
decb
iret
adc
std
aad
push
xlat
test
mov
out
push
push
les
dec
jecxz
jecxz
adc
test
mov
das
cmpsl
test
jb
sbb
fdivl
jae
je
pusha
aam
pop
jmp
andl
jecxz
mov
shl
fwait
jo
xchg
rorb
inc
jecxz
jecxz
pop
mov
mov
lock
add
loop
out
push
lret
repnz
dec
les
pop
fndisi(8087
or
cmpsb
in
loop
outsb
mov
ret
mov
mov
push
add
pop
cmp
inc
jecxz
jge
lcall
dec
ja
mov
inc
hlt
pushf
mov
sub
lods
rorb
sbb
or
mov
xor
arpl
jne
push
jb
outsl
inc
cltd
xchg
or
stos
into
orl
insl
enter
fists
ret
mov
xchg
mov
mov
loopne
cli
adc
jp
push
push
sbb
outsl
jns
dec
mov
xchg
cmpsl
pop
push
cmp
mov
repnz
rorl
or
test
cmpsl
frstor
dec
fisubl
ljmp
xor
mov
xchg
aam
loopne
dec
sbb
les
or
jnp
mov
cld
pop
adc
shrb
jno
in
inc
insl
or
dec
fildll
call
add
aad
or
inc
lret
cmp
push
add
push
xchg
adc
jmp
inc
leave
int
or
stos
jmp
jmp
sbb
je
iret
mov
cmpsb
test
pop
jns
das
push
out
lea
cmp
mov
dec
aam
pop
mov
outsb
repnz
loop
mov
in
ljmp
mov
sbb
movsb
pop
out
dec
sbb
jne
test
imul
movsl
inc
xor
hlt
mov
xchg
push
lret
adcb
push
aad
stos
jp
pop
outsl
aas
repz
icebp
mov
push
add
lods
mov
adc
test
outsl
xor
push
pop
jp
hlt
mov
mov
mov
arpl
lret
shll
rcr
sub
inc
fisttps
mov
jmp
mov
imul
cmp
lahf
stos
mov
shrl
bound
cmp
xor
shlb
mov
or
pop
sbb
jnp
xchg
adc
or
and
fisubrs
imul
into
movsb
pop
push
daa
call
jecxz
mov
mov
sub
imul
scas
pop
lahf
mov
jne
sbb
lods
outsl
add
rcll
push
or
leave
xor
loope
jle
adc
loope
mov
insl
sub
ret
test
mov
cli
mov
mov
pop
xor
clc
or
orps
scas
adc
das
fld
sbb
ficomps
sbb
rorb
iret
sarb
adc
popl
xchg
out
insb
in
imul
loop
adc
out
push
sbb
jno
jmp
mov
jno
adc
das
fistpll
sbb
loop
out
sub
pop
mov
add
ficompl
sub
add
out
mov
leave
int
cmp
pop
fcmovu
fwait
test
or
rclb
imul
aad
pop
cmp
push
dec
out
mov
or
and
mov
das
dec
aam
jmp
fcoml
dec
jp
or
inc
jl
xchg
daa
flds
jne
push
mov
inc
js
iret
int
sahf
push
insb
and
mov
inc
repz
cmpsb
adc
pop
rolb
cli
mov
sub
jecxz
stc
int3
stos
lods
adc
mov
dec
cmp
jmp
mov
dec
int3
pop
cmp
sbb
lret
xchg
and
dec
repnz
push
es
cli
push
in
jge
rorl
adc
xor
jbe
add
scas
fs
adc
push
cmp
or
dec
hlt
cmpsb
dec
mov
xor
ljmp
in
jl
push
ja
popf
es
filds
or
jns
cmp
or
mov
shrl
inc
inc
fsub
or
add
ficoms
jns
pop
sub
pop
std
call
inc
push
inc
mov
xchg
mov
xchg
or
stos
mov
adc
ret
pop
mov
pop
or
es
push
inc
call
sub
xchg
pop
jb
and
xchg
out
push
or
mov
arpl
int
popa
imul
jo
int
mov
inc
out
ss
inc
xor
pop
sti
adcb
or
inc
pop
nop
push
lock
inc
movsl
push
cltd
mov
pop
pop
mov
and
dec
cld
or
add
cli
ret
js
mov
and
add
or
not
out
pop
dec
stc
cld
gs
stos
xor
bound
out
gs
xor
or
leave
rcll
leave
into
jbe
sbb
cltd
jb
rolb
dec
iret
leave
sti
cmp
pop
sub
sbb
adc
and
sub
aad
dec
push
jns
les
js
dec
pushf
out
push
mov
cwtl
addr16
cmp
in
arpl
lret
rorl
add
cmp
fs
stos
and
mov
test
xchg
add
data16
mov
enter
jo
data16
icebp
ret
int3
xor
sbb
ja
and
out
xor
dec
shlb
adc
cmpsl
mov
mov
fs
lods
pop
xor
into
jge
add
fsubs
or
sbb
adc
inc
xor
xchg
stos
call
rcl
insl
aam
sbb
and
icebp
xchg
test
mov
pop
imul
into
and
repz
insl
adc
icebp
ja
sahf
sub
stos
and
in
aas
jmp
sar
xchg
mov
mov
rol
or
inc
adc
inc
pop
stos
mov
xchg
mov
imul
sti
repz
add
addb
aas
arpl
xchg
js
jmp
shlb
jg
mov
outsl
scas
scas
fidivrl
or
xor
mov
sbb
lods
mov
lods
or
sbb
ret
rorl
mov
jno
repnz
lcall
add
push
mov
mov
push
add
xor
out
out
std
rclb
dec
xlat
or
jmp
dec
lods
fldenv
adc
jae
jb
loop
repz
stos
adc
inc
cltd
adc
daa
pop
jb
inc
out
movsl
mov
aam
add
inc
cmc
ds
mov
push
aaa
mov
pop
xchg
dec
add
in
cmc
data16
jmp
pop
dec
loope
shll
jno
jnp
xor
outsl
mov
xor
lea
adc
jno
xchg
enter
dec
jle
filds
sahf
xor
test
movsl
out
lret
mov
sbb
jae
dec
mov
and
pop
in
pop
shrb
add
adc
aaa
fists
and
mov
cmp
push
pop
xor
adc
mov
mov
cli
xor
pop
sbb
dec
adc
jmp
rorb
xchg
les
or
mov
sbbb
push
pop
es
movl
xor
jge
je
data16
sbb
push
jae
test
or
je
out
repnz
scas
dec
jecxz
into
lea
call
mov
cmpsl
and
sti
adc
mov
jbe
lods
jnp
inc
insb
les
push
and
xchg
mov
sbb
adc
xchg
add
and
pop
jp
adc
icebp
xor
add
fsts
inc
fistpll
aas
gs
inc
sub
adc
ljmp
test
xor
cmp
push
movsl
rcrb
jne
scas
int3
movb
repz
fmulp
mov
mov
js
mov
xchg
add
add
push
out
push
sbb
cmp
les
jno
push
mov
filds
mov
or
cmp
sbb
fs
or
mov
and
mov
jp
fildll
cwtl
shlb
jle
fsub
pop
stos
inc
push
test
add
pop
repz
into
fwait
call
cwtl
sarl
dec
icebp
loopne
sub
mov
orb
imul
jb
fimuls
mov
into
pop
scas
ss
roll
push
mov
popf
add
bound
outsl
xchg
inc
pop
rclb
mov
pusha
jmp
pop
add
fimull
jg
addl
pusha
push
jnp
lods
sub
cli
addr16
push
xlat
popf
lret
add
movsb
xlat
mov
push
inc
xchg
in
rcr
cmpsb
mov
inc
pop
ljmp
or
and
rorb
test
subb
sub
mov
je
xchg
add
mov
cwtl
decb
movsb
inc
pop
das
les
rcll
sub
jnp
adc
in
movsb
add
aam
cmp
mov
inc
cmpsb
pop
add
out
push
jo
or
insb
dec
test
or
xor
or
and
jle
popf
in
and
sarb
imul
cltd
add
loope
sti
sbb
imul
in
dec
mov
int
leave
lret
out
cld
scas
push
xchg
dec
aaa
fstpl
cmp
add
movsb
cmp
shll
int3
mov
outsl
ss
imul
mov
sbb
jbe
cli
dec
fxch
stos
pop
add
rcll
hlt
lea
xor
pop
subl
stc
inc
lea
nop
fsubr
and
sti
push
pop
adc
or
inc
mov
test
adc
aaa
mov
add
into
dec
xchg
orps
enter
and
xchg
rorl
ljmp
or
int3
mov
in
call
aaa
push
inc
out
xchg
xchg
jb
inc
loope
ret
das
cmpsb
push
cmp
add
loop
sbb
push
std
xor
inc
dec
sbb
stc
mov
jnp
pop
imul
popf
cmp
int
mov
sub
pop
cmp
xchg
pop
xor
outsb
lds
dec
aaa
pop
push
cli
xchg
lods
sub
stos
aas
into
push
bound
les
data16
mov
das
cli
lods
mov
test
lret
xchg
subl
icebp
repnz
nop
and
mov
mov
adc
mov
js
xchg
movsb
dec
push
xlat
mov
es
sbb
lock
sbb
shrb
loop
inc
sub
or
cwtl
push
insl
mov
stos
and
inc
xchg
adc
add
dec
and
in
cld
xchg
ljmp
es
push
jae
fisttpl
cmp
xor
push
sub
mov
push
sub
rorb
imul
sub
and
subl
sub
ja
xor
dec
jle
out
inc
sbb
call
push
pop
jg
rcll
scas
dec
shl
xlat
test
sub
fildl
mov
xor
inc
push
pop
fsubrs
test
sbb
xchg
jl
jle
jecxz
mov
pop
mov
rorl
sub
aad
push
lods
mov
push
adc
test
sub
addr16
inc
call
push
cmp
orl
sub
xchg
and
push
xchg
inc
inc
adc
mov
shlb
rorb
mov
stc
mov
cmpl
xchg
out
pop
pop
test
shr
mov
jecxz
xchg
ss
pop
and
sub
add
push
int
aam
inc
mov
jle
cmpsl
sub
and
xchg
mov
jle
xchg
outsl
stc
in
sti
sbb
movups
aam
push
leave
lahf
push
and
mov
roll
cltd
pop
jne
and
push
je
shl
dec
push
mov
call
cld
loop
cmc
sbb
jmp
jns
fisubl
fnsave
in
sti
push
mov
dec
mov
pushl
and
int3
pop
pop
or
inc
xchg
loope
dec
mov
sbb
push
nop
imul
negl
fstps
xor
add
pop
cmp
xor
xor
mov
xchg
fistl
call
loopne
xor
inc
cmp
mov
inc
shll
cmp
rorb
inc
or
jno
mov
and
ret
imull
pop
pop
orl
mov
nop
iret
or
push
lret
push
fcomip
xor
mov
jp
insb
inc
inc
jecxz
cmpsl
push
enter
pop
and
shrb
inc
aaa
mov
xlat
imul
push
mov
ja
scas
sbb
lahf
cmp
or
or
stc
cwtl
cmp
out
fisubs
jl
rcrl
lea
into
xchg
lea
xor
xchg
dec
ja
xor
mov
xor
mov
scas
popf
push
adc
sub
icebp
adc
pop
test
pushf
mov
les
test
xchg
mov
rolb
push
shl
mov
lcall
adc
push
lds
or
jae
pop
enter
je
mov
xchg
cmpsl
pop
and
and
out
nop
lret
imul
rcrb
rcr
jno
mov
ja
flds
mov
and
pop
pushf
outsb
xor
add
mov
dec
inc
pop
out
xor
mov
enter
jbe
sbb
mov
mov
loop
cmc
out
in
xchg
jp
or
stos
xchg
rclb
sbb
inc
mov
stos
add
xor
lret
sbb
push
xchg
sbb
call
mov
lcall
sub
cmp
js
cmp
out
cmpsb
push
pop
jns
push
push
cmp
adcb
cmpsl
lahf
ja
out
fstpt
call
aad
xor
xchg
jmp
mov
lcall
fs
shll
leave
sbb
or
jg
sti
jns
cld
sub
gs
in
out
push
icebp
push
jl
sbb
push
add
lret
push
adc
inc
mov
lahf
adc
popf
cld
xchg
sarb
sbb
ja
dec
or
inc
movsb
xchg
cmp
cmc
xchg
cwtl
ljmp
leave
subl
iret
negl
push
cmp
pusha
pop
repz
in
pop
je
mov
xchg
gs
aas
inc
sub
cmpsl
mov
xlat
xor
outsb
jmp
push
mov
push
insl
fsubs
xchg
mov
dec
dec
subb
mov
mov
sub
mov
psrld
push
js
ja
pushf
test
scas
decb
aas
loope
lret
adc
mov
ja
ljmp
dec
into
sti
lea
cmp
adc
js
cmp
les
in
and
xorb
pop
icebp
int3
leave
addb
add
sub
mov
out
es
icebp
adc
add
das
sub
inc
test
jno
push
and
notl
ljmp
add
scas
in
push
push
or
adc
cs
push
mov
jmp
add
cmp
xchg
mov
jg
aas
mov
sbb
adc
aam
push
stc
dec
xor
dec
sub
pop
mov
mov
xchg
cli
shr
lods
inc
pop
ret
and
lea
xchg
adc
mov
jmp
iret
lcall
fldt
pop
fidivrl
sbb
xchg
cmp
pusha
or
fndisi(8087
xchg
adc
fcmovnb
dec
xchg
out
repz
leave
aaa
inc
aad
or
mov
mov
test
das
mov
adc
sbb
in
out
add
jb
cmc
inc
sbb
xchg
scas
sahf
jl,pn
xchg
dec
sti
mov
movsl
mov
push
push
jmp
fmuls
pop
mov
cmp
in
popf
lea
gs
test
mov
mov
dec
rcrl
imul
dec
ret
ljmp
mov
adc
sub
dec
pop
stc
scas
ss
das
call
ljmp
imul
insb
dec
dec
jg
sub
jl
sbbb
rcrl
jbe
pop
fidivrs
clc
adc
rcrl
xor
mov
lods
adc
imul
pop
andl
scas
inc
push
lcall
cmp
frstor
loop
das
jg
lcall
stc
mov
sub
cmpsl
out
push
fstps
adc
lods
dec
mov
fsubrl
call
in
cmp
cli
sub
xchg
mov
movsb
adc
dec
mov
add
lcall
in
popa
ja
in
lahf
repnz
lret
lcall
add
fistl
in
test
adc
js
mov
into
mov
dec
out
mov
stos
add
cmpsl
inc
sub
addr16
lods
dec
je
dec
repz
inc
nop
rorl
popf
push
inc
out
insb
push
pop
mov
dec
test
ss
and
xchg
adc
rolb
outsb
mov
stos
cmp
not
push
jge
clc
data16
ficomps
lahf
jne
sbb
or
jnp
shll
mov
imul
stos
fadds
or
gs
mov
in
shlb
mov
hlt
int
pop
and
jnp
inc
and
pop
fidivs
arpl
lock
and
stc
jge
xchg
and
sbb
ljmp
addr16
xor
pushf
add
push
inc
jmp
repnz
or
nop
sub
mov
add
inc
insl
sub
inc
test
sbb
lods
rorl
pop
into
movsl
jbe
stos
sbb
inc
and
js
test
cltd
lods
dec
dec
xchg
dec
arpl
mov
mov
dec
lods
jnp
lds
enter
hlt
push
sbb
das
cmpsb
sbb
inc
leave
aas
cmp
jb
bnd
or
test
pop
shll
dec
ljmp
imul
push
ret
les
insb
or
pop
shrb
shrb
int
fsubl
loope
mov
lahf
mov
aad
adc
jp
test
push
cmpl
in
add
jmp
and
test
add
xchg
les
shlb
lock
cwtl
push
mov
shrb
pop
push
imul
call
lods
ror
idivb
pop
ja
adc
mov
cmp
cs
add
jp
add
into
xor
and
xchg
cmpl
mov
xorl
or
stc
pop
xchg
jecxz
into
jae
stc
mov
lods
ljmp
les
int
mov
inc
aad
mov
inc
cmp
mov
inc
pop
adc
mov
test
push
adc
xlat
in
adc
jmp
and
mov
mov
sub
enter
or
lcall
mov
test
sbb
inc
dec
mov
push
sub
movhps
and
outsl
scas
push
xchg
ret
jno
and
mov
pop
xchg
jl
shl
xor
jge
testl
xlat
cmp
movsl
inc
pop
push
mov
int3
aam
cltd
les
into
movsb
sbb
cmpsb
es
jle
test
lds
repnz
out
or
mov
push
fists
ret
mov
iret
sbb
out
bound
pop
sbb
popf
pushf
lret
pop
into
stos
cli
dec
pop
mov
mov
cs
sbb
mov
sbb
shrb
adc
outsb
addl
fwait
jge
sarl
loop
stos
sbbl
lcall
inc
stos
push
gs
cmp
sub
jbe
in
jmp
pop
inc
sbb
sti
cmpsb
pop
aad
xchg
mov
loopne
js
mul
mov
stos
jecxz
push
sbb
lret
ljmp
push
lea
adc
sub
sub
icebp
or
mov
and
dec
add
xchg
movb
jp
and
cmp
cmc
sub
dec
inc
dec
and
dec
mov
fwait
inc
iret
popa
test
add
mov
lds
daa
insb
adc
jb
and
ret
adc
push
aam
fistpl
xchg
repnz
sbb
xor
push
push
sub
aas
cmpsl
stos
cltd
cmp
insb
nop
sub
xchg
mov
pop
pop
and
aaa
shrb
jp
mull
cs
mov
inc
call
je
mov
cmc
sarl
aad
cmpsl
lock
repz
lret
std
push
xor
sub
aam
sbb
or
shr
insl
out
jno
xchg
pop
jl
jg
mov
fwait
or
shrb
cmp
push
decl
cmp
sbb
mov
iret
rcr
mov
dec
popf
mov
jle
cmp
lea
inc
mov
dec
icebp
jne
pop
call
insb
cmc
syscall
push
cwtl
pop
push
jl
jg
test
imul
dec
or
and
sub
dec
pop
hlt
and
nop
popf
cli
pop
inc
in
inc
call
xor
ficompl
js
sbb
aaa
lods
mov
icebp
mov
pop
mov
xchg
icebp
mov
xchg
and
testl
test
repz
out
stc
das
mov
fdivr
dec
and
mov
push
jb
jo
cmpb
mov
and
sbb
insb
fidivrl
icebp
inc
test
inc
sbb
jnp
or
stos
fbstp
inc
dec
xrelease
inc
lock
insb
lods
mov
mov
ret
xor
inc
repz
stos
cltd
in
xor
cmpsb
imul
fwait
mov
out
jbe
pop
push
iret
xchg
or
lret
in
out
movsb
jp
bnd
daa
lret
ja
push
jo
shll
bound
mov
push
push
popa
inc
ja
ljmp
es
jge
cmp
xor
stc
test
and
pop
xor
dec
mov
push
inc
mov
xchg
mov
push
loop
sbbl
push
pop
dec
ljmp
push
mov
push
xchg
mov
nop
xchg
outsb
aaa
aad
jge
jl
push
popl
adc
dec
test
outsb
movsb
call
ret
sub
ds
inc
lea
adc
push
mov
sahf
in
or
or
mov
aas
shrl
sub
mov
cli
mov
ds
push
jo
lds
repnz
lret
dec
js
jg
imul
lcall
pop
push
ljmp
xchg
cmp
insb
pop
repnz
mov
neg
push
xor
mov
arpl
inc
sub
push
push
lods
xchg
negb
push
scas
fcmovnbe
rcrb
cld
mul
repz
dec
add
xchg
mov
mov
lcall
dec
mov
add
jp
fdiv
adc
nop
sub
fcmovnb
xchg
push
pop
cld
xchg
mov
into
xor
sbb
aaa
cmp
jne
les
popa
and
jne
sub
out
daa
mov
mov
or
xor
cmp
mov
xlat
out
lock
insb
popa
inc
inc
vshufpd
loop
rcrl
xor
push
jbe
xchg
sti
popf
jne
movsl
loope
fs
sbb
roll
int3
xor
leave
imul
add
pop
in
lea
aad
es
dec
dec
xchg
cli
ss
addr16
jge
pusha
scas
push
mov
aam
mov
gs
mov
nop
mov
inc
and
inc
je
jp
xchg
mov
aaa
pop
xchg
stos
aas
push
pop
stc
jno
mov
insb
pop
dec
pop
fiadds
fisttpll
lahf
js
mov
xor
mov
cwtl
dec
out
sbb
fildl
cmpsb
and
mov
jle
inc
iret
mov
je
xchg
ljmp
out
push
shrb
adc
std
mov
int
xchg
sub
xor
and
jns
out
fisubl
adc
stc
lods
popf
mov
call
in
pop
or
push
jecxz
fiaddl
addr16
lods
test
sub
jne
lds
mov
in
cmp
or
jmp
insb
jbe
xor
and
mov
loop
push
sbb
loop
xchg
fwait
mov
icebp
ljmp
repz
and
lock
or
inc
and
sbb
loop
push
xchg
dec
test
divb
pop
clc
flds
sbbl
add
mov
sahf
negl
test
scas
adc
leave
bound
cmpsl
push
std
aaa
out
pop
jnp
inc
loope
pusha
mov
jp
dec
daa
les
inc
inc
add
and
lret
sbb
test
mov
jecxz
neg
add
and
je
out
fildl
scas
imul
adc
bound
cli
cs
add
fdivr
bound
mov
repnz
stos
fisttpl
insb
mov
pop
adc
inc
fisubrl
jle
lea
jae
sbb
imul
inc
lret
xchg
fldenv
pop
mov
add
out
or
aam
sahf
fisttpll
loope
add
jo
jecxz
movsl
out
mov
jne
leave
mov
pop
aas
stos
daa
push
jge
cmpsb
push
shl
cmp
dec
cmpsb
mov
cwtl
dec
in
xchg
loopne
dec
addl
inc
movsb
or
das
loope
mov
not
sub
mov
je
pop
nop
ja
js
fisttpl
mov
mov
xchg
sub
xchg
push
cmp
sbb
cmp
sbb
jb
testl
flds
mov
add
call
push
dec
inc
sbb
std
out
jp
jmp
or
das
jmp
add
test
gs
adc
push
mov
lret
insb
out
fists
mov
jecxz
into
dec
push
sub
gs
imul
xchg
jg
ret
fsincos
pop
enter
cmpb
out
lods
mov
in
pusha
stos
or
jg
mov
ffree
arpl
insl
pop
mov
popf
sbb
adc
or
add
movsb
jg
ds
cmpsb
mov
mov
xor
popf
push
sub
clc
jg
fnsave
hlt
push
aad
push
test
jg
ret
lret
sub
adc
xor
push
aaa
sbb
xchg
mov
add
lahf
sub
enter
outsb
cltd
fsts
push
data16
insb
pushf
push
fisubs
mov
or
hlt
divb
jmp
jno
addb
adc
sbb
push
loop
sar
int3
pushf
out
add
sub
inc
lock
js
ja
push
jecxz
cmpsl
into
scas
pop
dec
push
pop
xlat
inc
in
rorl
and
les
inc
push
xchg
das
rorl
mov
and
hlt
mov
lods
push
jmp
test
mov
sbb
xor
pop
cmc
push
call
outsb
faddl
inc
clc
rcll
cmpsl
push
jns
gs
pop
xchg
cmp
orl
out
mov
inc
pushf
negl
pop
adc
call
repz
std
ss
fmull
cmpb
imul
les
jl
into
lahf
test
xchg
jl
aaa
push
mov
pop
sbb
nop
nop
lret
pop
out
ret
push
adc
test
jns
ja
sbb
ds
lret
orl
into
stos
mov
cltd
sub
xchg
sbb
push
lods
pop
jb
lahf
std
add
popa
mov
daa
repnz
stos
ret
sub
mov
dec
ljmp
pop
mov
mov
lret
imul
sbb
mov
mov
nop
jge,pn
or
movl
push
xchg
mov
add
cmpsl
nop
test
in
pop
xor
and
pop
fnsave
pop
sub
sub
sub
adc
dec
lret
mov
inc
gs
mov
ss
lret
cli
lea
mov
repnz
repnz
push
shr
inc
mov
mov
cmp
imul
ret
pop
adc
rorl
cmp
push
out
and
add
dec
cmpb
bound
lock
test
fstpt
adcl
and
cmc
sub
gs
add
lods
outsb
enter
addb
xor
js
lods
inc
mov
and
movsb
add
and
insb
xchg
shl
ret
movsb
insb
jle
mov
or
rclb
insb
pop
bound
dec
repnz
mov
pop
push
lods
pop
jne
sbb
and
iret
lret
sub
xchg
add
imul
sarb
test
jp
or
sbb
sbb
fimull
or
outsb
push
xor
push
rcrl
or
add
jb
ljmp
mov
jns
mov
ret
xchg
adc
es
pop
sbb
insb
or
jg
xchg
push
sub
dec
push
fldenv
pushl
and
cld
rorb
insb
lock
adc
out
insl
std
jne
inc
and
fwait
cmpsb
jge
sub
pop
cmpsl
std
sarb
push
xchg
add
dec
push
fisubs
das
mov
add
or
mov
and
and
inc
int
push
xor
pop
cmpsl
mov
roll
cmp
testb
shrl
out
int
xchg
repnz
sub
xchg
adc
test
out
jmp
enter
int3
mov
jo
xlat
cltd
jge
mov
jns
push
mov
xchg
popf
mov
ljmp
ja
cmc
and
or
outsl
xchg
rolb
pop
repnz
pop
jecxz
jb
fdivs
mov
outsl
clc
push
xor
testl
bound
sti
jno
sbb
push
dec
mov
xchg
dec
std
imul
adc
fdivrl
xor
rcrl
dec
js
inc
inc
cmc
je
out
in
mov
pop
xchg
in
mov
xchg
out
inc
das
out
lods
jae
jno
push
daa
adc
push
jg
pop
adc
lock
outsl
inc
lret
leave
fiadds
inc
out
push
sub
mov
xchg
push
mov
enter
mov
ds
xor
popa
bound
dec
arpl
xchg
fstl
cmpsb
jno
mov
jo
push
les
out
jbe
add
fcoml
mov
xchg
outsl
loope
gs
add
mov
fistpll
mov
lods
inc
push
sbb
xor
flds
cld
sbb
mov
das
jbe
push
subb
sub
jmp
cmpb
test
into
xor
mov
push
pop
sbb
test
jbe
sbb
inc
ret
addl
add
sub
in
ret
outsl
dec
repz
add
in
sub
dec
gs
jb
dec
es
cmpsl
mov
push
rolb
mov
in
lds
lea
sbb
ret
or
jle
lods
stos
sahf
or
lock
jbe
outsl
jb
nop
adc
mov
jnp
in
pop
dec
and
scas
mov
push
dec
stc
mov
nop
xor
xlat
in
je
ja
std
insl
adc
pop
add
fwait
jge
pop
add
addr16
fsubrs
scas
jg
mov
inc
sarb
call
fwait
testl
add
push
xlat
xchg
inc
fstl
icebp
mov
int
cltd
xchg
das
add
mov
or
out
daa
xor
pop
stos
or
adc
add
fiaddl
js
xor
test
mov
inc
sub
mov
aam
lds
ljmp
adc
fdivs
rcrl
xor
pop
adc
dec
repnz
into
in
sub
cmp
insl
adc
in
adc
xchg
adc
mov
inc
mov
ljmp
lcall
cmpsl
xchg
pop
lahf
jmp
fcomi
out
jge
jge
and
add
jmp
pop
imul
fwait
mov
or
jmp
fcomps
div
mov
loope
int
mov
adc
sbb
push
loop
adc
mov
outsb
add
pop
in
add
lcall
and
scas
or
sub
fdivl
inc
push
cmpsl
ret
sbb
call
inc
push
sbb
imul
sahf
in
cld
mov
lock
xchg
jo
cmc
jnp
stos
push
mov
test
ja
shll
into
adc
xorl
movsb
xchg
jno
fwait
mov
cld
add
push
and
in
hlt
cltd
lcall
cmc
mov
adc
subl
loope
mov
push
imul
cmp
in
adc
ja
fisttpl
or
popl
movzwl
or
xor
mov
jb
mov
jb
adc
dec
ret
pop
daa
mov
jecxz
inc
loope
movsl
add
add
test
shrl
mov
mov
pop
fidivrl
pop
sbb
mov
and
les
leave
insl
dec
push
aaa
int3
pop
fsubr
dec
xchg
jnp
or
mov
lret
xor
jbe
sbb
and
mov
nop
es
mov
jl
call
push
loope
ret
inc
xchg
insl
xor
movsl
pop
xchg
lret
xchg
pop
push
lds
cs
outsl
jns
shrl
cwtl
negl
outsb
fildll
push
xor
xchg
shrb
jg
pop
fmulp
cmp
inc
mov
sti
std
loop
jl
sbb
sbb
cmp
or
sahf
scas
or
fs
cmp
into
rorb
out
adc
jge
mov
hlt
sbb
sahf
in
clc
fdivr
gs
in
jo
push
arpl
lcall
in
nop
and
mov
aaa
test
mov
mov
xor
movsb
cmp
rorl
add
js
mov
inc
sub
xor
add
out
sbb
sub
lds
les
cmc
out
mov
xor
fisubrs
sar
daa
sbb
pushf
cltd
loope
shrl
or
aam
push
push
push
out
pop
cmp
test
dec
adc
negb
xlat
sti
pusha
pop
sbb
and
dec
movsl
lock
pop
js
fwait
lret
jne
imul
and
imull
repnz
or
pop
jle
pop
out
pop
rcrb
incb
hlt
mov
mov
adc
mov
xchg
sub
mov
jae
popa
test
fnstenv
mov
jecxz
jno
cmp
leave
pop
pop
dec
sbb
into
ja
jge
sub
std
xor
and
enter
xchg
mov
xor
es
adc
loop
mov
mov
ficoms
inc
cld
icebp
lods
stc
mov
push
pop
cmp
xchg
jg
and
mov
call
outsl
out
sahf
or
test
shrl
xchg
addr16
xchg
lahf
stos
lcall
jnp
jno
add
dec
out
mov
push
jnp
jl
xchg
xor
lods
or
ss
into
adc
mov
int
and
push
mov
add
push
imull
out
jne
cli
lods
dec
in
ljmp
test
mov
push
popf
mov
cmpsb
data16
and
repz
jle
fdivrl
or
sub
mov
mov
xor
xor
aaa
mov
lods
je
mov
or
jp
aas
adc
pop
sti
fsubl
sti
lea
xchg
mov
sbb
jb
popf
jne
jg
ret
cmp
lods
xchg
mov
ffree
lods
xchg
lcall
xorb
gs
add
mov
les
fstpt
shll
dec
and
sti
ljmp
ret
or
int3
inc
cld
push
cld
add
sbb
and
shrl
in
cmp
imul
fcoml
ljmp
imul
cmp
enter
inc
dec
mov
adcb
mov
cwtl
arpl
lret
cmp
pop
ficomps
lods
mov
in
mov
sub
test
ljmp
das
into
shl
mov
xchg
jae
loop
fst
arpl
jnp
fisttpll
push
insl
test
shl
aad
and
inc
dec
mov
dec
aaa
jo
out
push
sub
sbb
stc
mov
daa
out
arpl
cmpsl
sub
jmp
jae
mov
pop
inc
mov
test
jl
stc
pop
xor
and
scas
cld
call
lret
and
pop
jno
inc
std
cmp
cmpsb
push
les
sti
adc
scas
adc
jnp
pop
inc
sbb
sbbb
mov
adc
icebp
pop
xor
sbb
sub
insb
push
inc
addr16
cld
mov
and
mov
add
nop
xchg
push
sbbl
repz
leave
push
mov
jbe
rcrl
fnstsw
popl
addr16
mov
pop
xor
pop
pop
out
ret
jl
bound
xor
rcll
jns
pop
jne
lea
cmp
daa
xchg
dec
add
push
and
and
mov
in
cmp
adcb
sbbb
imul
inc
fcmovb
mov
mov
mov
xor
adc
inc
test
xchg
sub
iret
ja
in
lock
sub
dec
jno
sbb
sub
and
mov
in
jbe
sub
sbb
in
aas
sti
xor
jge
pop
mov
mov
jne
popa
movsb
repz
xlat
sub
xchg
xlat
push
adcb
sbb
frstor
push
sarb
inc
stos
or
mov
cmp
jno
fcoms
mov
fsubs
xchg
mov
enter
ss
xchg
add
repnz
jge
lcall
add
xor
pop
ljmp
call
push
leave
mov
ljmp
sbb
xchg
rcll
mov
popf
setb
xorl
sahf
pop
ja
pop
mov
inc
inc
aas
adc
sub
cmpl
jno
out
dec
mov
lcall
mov
fs
push
xor
lds
and
je
movsb
cmp
pop
fisubrs
movsl
inc
sbb
mov
inc
aam
adcl
or
pop
pop
aam
jp
je
add
fs
sbb
push
stos
dec
pop
pop
sub
sub
outsl
jae
shl
lret
and
cwtl
pop
shrl
fimull
stc
push
push
ss
xchg
fsubrs
leave
lods
xchg
mov
xor
mov
mov
mov
adc
pop
xor
hlt
test
sbb
sahf
inc
ret
lods
and
jno
sub
or
cmp
push
out
clc
shld
ss
push
test
jae
sbb
push
jmp
scas
sbb
test
jg
jb
jmp
dec
add
jae
sub
add
aam
cltd
xchg
out
add
cmp
push
adc
jge
in
push
scas
cmpb
repnz
xor
dec
ds
jmp
mov
cmp
adc
xchg
jns
push
es
mov
test
jmp
or
mov
rolb
loope
ret
ror
stos
inc
mov
lret
and
nop
sub
mov
push
dec
inc
adc
or
mov
test
js
call
ffree
mov
inc
jmp
movsb
pop
psadbw
adc
test
sub
aad
cmp
mov
cmc
mov
bnd
cmp
mov
xor
cmc
sub
push
inc
fucomp
cmp
inc
push
sbb
fstpl
cmp
mov
fidivrl
jnp
jp
mov
fimuls
jns
sbb
rol
jnp
lcall
push
xchg
addr16
pop
mov
subl
pop
xchg
js
ds
lahf
push
push
out
xchg
xchg
sub
hlt
aad
arpl
daa
int3
fcmove
mov
xchg
out
cwtl
push
xchg
and
adc
jbe
shr
sub
dec
test
cmp
jmp
adc
rol
fcompl
js
pop
loop
fidivrs
sub
sbb
adc
and
insl
pop
xchg
int
cmp
mov
test
pop
sub
sbb
mov
push
in
leave
fidivrl
mov
out
lock
sub
insl
aad
sub
gs
rcrb
fldl
xor
imul
in
arpl
ljmp
cmp
hlt
xor
imul
fsub
pop
popf
cwtl
cmp
fmul
out
and
jecxz
std
xchg
fnstsw
sub
call
inc
jmp
mov
dec
pop
mov
dec
lock
xor
push
dec
pop
sbb
push
adc
or
mov
popf
in
popf
push
insl
pop
andl
fs
leave
jl
mov
pop
jno
stos
cmc
aaa
lock
lahf
pop
mov
fsubrs
xlat
adc
cmp
add
push
jmp
insb
push
pop
dec
push
pusha
scas
movsl
push
fistpll
lods
lret
fwait
sbb
push
outsb
aam
and
test
nop
mov
inc
jmp
mov
xor
xchg
sbb
dec
movsb
dec
xor
pop
mov
and
push
mov
les
outsl
sub
pop
cmp
sbb
add
inc
adc
fxch
push
inc
and
shrl
pop
loopne
mov
cmp
fidivrs
adc
lret
jle
iret
pushf
cmp
ret
test
add
rcrl
fsubl
mov
loope
int3
jo
hlt
jns
cmp
push
in
mov
or
cmpl
dec
js
push
push
jno
jbe
movsl
or
sbb
push
sbb
mov
or
aaa
push
je
inc
hlt
js
cmc
ret
fists
lods
pop
mov
mov
ret
jo
xlat
sbb
mov
clc
jns
inc
movsl
push
lods
je
bt
sbb
pop
xor
pop
dec
dec
fs
cmc
jl
sub
mov
ds
xor
mov
adc
lock
mov
jae
xchg
insb
fistpl
adc
cltd
sub
jb
out
hlt
xchg
dec
sbb
or
scas
ljmp
mov
xlat
gs
std
outsl
lret
ljmp
fists
sub
daa
push
fwait
or
jle
in
stos
scas
xor
test
sub
jl
lret
movsb
push
and
xchg
jb
inc
into
sub
mov
js
mov
in
aas
test
cltd
jbe
mov
popf
lret
adc
add
pop
add
ljmp
imul
loope
bound
fldt
push
hlt
loopne
jg
loopne
movsl
dec
mov
dec
mov
loop
je
push
es
adc
jge
lret
cmp
fidivrl
mov
mov
jge
lret
les
mov
int
repz
sbb
jge
enter
sub
pop
fstpt
adc
hlt
xor
and
mov
push
sbb
sarb
lds
ja
xor
push
aaa
je
push
add
push
sub
stc
sub
inc
test
imul
xor
loope
add
mov
inc
outsl
sarb
loop
inc
push
data16
cmp
adc
out
jmp
into
pop
subb
pop
scas
mov
iret
loop
jns
inc
adc
shl
cs
inc
xor
test
and
cmp
sbb
push
loop
ds
aaa
mov
xor
push
mov
push
pop
rorl
jns
rol
ret
insl
jmp
movsl
xchg
sub
sub
add
xor
dec
and
mov
gs
in
insl
sarl
lds
out
push
mov
addr16
xchg
sbb
sbb
js
pop
cmpsl
stc
push
sub
and
lcall
pop
ljmp
inc
pop
sbb
stc
jmp
out
imul
leave
mov
jo
inc
adc
fisttps
xorb
inc
push
cltd
mov
mulb
mov
push
push
mov
mov
mov
pusha
xchg
hlt
xchg
sub
xchg
js
out
int3
jge
pop
in
dec
scas
idiv
test
cmp
icebp
outsb
inc
sarl
mov
or
incl
dec
stos
mov
popa
cld
sbbb
in
add
lret
fmull
scas
mov
out
in
dec
sbb
push
fistpl
cltd
fsts
ds
xor
mov
leave
and
leave
test
inc
lcall
in
pop
cld
adc
mov
cmp
mov
or
ljmp
jmp
mov
mov
pop
in
jl
pop
xorl
lea
pop
pop
inc
adc
sub
pop
sbb
ljmp
fnstenv
leave
sbb
dec
mov
rclb
bnd
pop
out
nop
pop
xlat
lea
in
jg
nop
and
jno
add
clc
jp
xchg
es
idivb
mov
pop
data16
jecxz
xor
dec
mov
int3
test
cmp
mov
cld
lea
pop
dec
mov
jge
inc
fdiv
jecxz
test
in
push
nop
test
repnz
lret
mov
pop
aas
shlb
pop
cmp
cld
cmp
inc
cmpsl
rcl
cmpsl
mov
cmpsl
scas
push
not
loope
movsb
movsw
xchg
ret
std
mov
mov
add
into
cmc
scas
sub
inc
jo,pn
sub
adc
cltd
or
cmpsl
sub
cmc
xor
cmpl
mov
fstpt
push
jecxz
sub
xor
add
inc
enter
js
dec
cld
push
push
jae
xchg
fcmovnb
lret
aas
inc
xchg
mov
js
insl
inc
pop
mov
sub
push
ljmp
hlt
xor
cs
sub
stos
out
mov
jno
fdivrl
and
iret
pop
xchg
test
repz
icebp
test
jbe
xorb
cmp
lcall
into
out
or
jo
mov
pop
popa
mov
in
cld
or
jmp
adc
into
or
jnp
subl
pop
pushf
inc
pop
out
mov
sbb
fbstp
call
je
jmp
cld
repz
mov
mov
dec
jns
jo
pop
test
xlat
enter
ret
cmp
jp
in
lock
xor
jle
mov
mov
sti
daa
dec
ja
add
dec
xor
outsb
inc
test
ljmp
out
jmp
mov
push
imul
es
out
cli
leave
pop
mov
pop
stos
mov
xchg
loope
push
clc
sbb
nop
xadd
lcall
mov
outsl
stos
sub
cmpsb
arpl
fidivs
xlat
push
loope
dec
frstor
jb
mov
jnp
mov
push
in
lods
fmuls
adc
cs
daa
adc
insl
fnsave
xchg
bound
inc
leave
dec
stos
arpl
inc
dec
in
dec
xchg
cld
mov
jno
je
in
jg
and
xchg
daa
shr
cmc
mov
inc
ds
jnp
mov
std
test
ss
out
mov
pusha
loope
mov
clc
add
insl
xor
enter
mov
je
dec
adcl
mov
rcrl
sbb
shrl
inc
xor
test
ljmp
push
sbb
pushf
js
out
sti
cmp
and
or
xchg
sub
in
je
in
popf
negb
sbb
or
fnstenv
xor
ret
adc
xchg
jge
clc
imul
or
into
jle
std
xor
js
or
xor
mov
push
push
nop
inc
shrb
loope
ret
xchg
fmuls
nop
stos
ss
mov
lret
push
leave
loopne
mov
mov
push
ljmp
fdivs
jae
and
xor
jecxz
jno
adc
mov
or
call
cmpsl
xor
aad
out
adc
aaa
ljmp
stos
push
dec
adc
xor
xor
pop
outsl
sub
lcall
jno
test
in
jge
inc
mov
outsb
test
aas
pop
mov
shll
sti
loope
or
in
outsb
movsl
mov
xchg
dec
push
xchg
cmpsl
inc
jmp
xor
cmpsl
or
add
int3
in
sub
mov
std
xchg
mov
push
shrb
xor
push
es
iret
adc
insl
incb
jge
xor
cmp
aaa
xor
out
in
dec
push
push
mov
in
mov
sub
out
test
xchg
leave
cltd
fsubrp
jbe
loopne
roll
iret
sbb
rcll
aaa
jne
addr16
lret
pushf
pusha
ja
scas
sahf
dec
adc
lret
aad
xchg
outsl
fdivs
mov
xor
adc
sub
cltd
aam
daa
fsts
jbe
mov
dec
dec
sbb
lahf
inc
push
jne
shll
enter
imul
and
sbb
cmp
xchg
out
stos
pushf
push
dec
mov
xchg
sbb
les
roll
adc
inc
or
fnstsw
cmovne
inc
or
xor
in
add
xchg
icebp
sbb
test
and
add
or
cmp
shlb
addl
movsb
cmpsl
hlt
mov
push
push
into
imul
cs
das
in
mov
pop
adc
ficomps
lahf
pop
inc
sti
outsb
cmpb
mov
jp
ss
stc
xchg
fcomps
insb
inc
xlat
inc
lock
inc
mov
mov
xchg
notl
inc
push
inc
bound
int
add
testb
inc
jl
test
mov
inc
lahf
nop
shlb
push
lods
sub
fbstp
in
ret
jo,pt
aas
inc
mov
stc
bound
test
inc
mov
mov
dec
mov
sub
cltd
jmp
nop
iret
fistl
mov
sub
mov
and
aas
or
adc
mov
cwtl
js
fwait
sub
pop
xlat
movl
pop
ljmp
sti
and
dec
fcoms
popa
xor
arpl
das
bound
icebp
sub
aad
int3
push
push
test
cmpsl
jl
xor
sbbl
adc
call
xor
in
subb
add
dec
pop
jmp
push
scas
jmp
cwtl
lds
test
inc
xor
ror
jb
shrl
fwait
mov
or
push
cmp
xchg
push
mov
sarb
les
gs
jno
jmp
ret
mov
push
sbb
xchg
jp
mov
ljmp
and
fisubs
xlat
xlat
push
es
popl
cli
stc
mov
mov
xchg
mov
xor
outsl
fldenv
adc
mov
ljmp
and
into
dec
xor
pop
xchg
pushw
insl
insb
xor
das
testl
popf
and
pop
sub
nop
fnsave
jle
cmc
add
cmp
adc
ljmp
push
jbe
mov
int3
xchg
push
xchg
bound
adcb
sahf
adc
ds
insl
daa
icebp
lret
insl
fdivrs
es
shlb
xchg
inc
pushf
je
jp
mov
push
popf
imul
pop
dec
jo
fs
mov
cmp
mov
mov
stos
faddl
insl
or
mov
scas
pop
andl
and
jl
push
mov
push
jno
lock
inc
ljmp
mov
pushf
pop
outsl
gs
sbb
gs
popf
mov
sub
enter
mov
rcrb
mov
popf
dec
out
mov
jae
cmp
sub
dec
rolb
stc
push
popf
mov
in
mov
mov
jb
dec
jo
dec
mov
sbb
leave
inc
add
add
cli
inc
loope
outsl
insb
cli
popf
and
cmp
or
mov
ret
ds
dec
sub
pop
jbe
loop
or
push
jne
insl
inc
sub
decl
pusha
cmp
mov
leave
add
jo
fsub
pusha
popa
pop
outsb
xchg
cs
rcll
jno
sub
fwait
xchg
lcall
lcall
loopne
int
jle
jb
popa
pop
push
nop
push
inc
sbb
xchg
lods
jmp
cvtps2pd
test
pop
mov
mov
add
adc
xlat
in
push
out
mov
xor
sub
xor
int
pusha
ds
out
fiaddl
cs
add
test
and
in
je
jae
arpl
in
hlt
pop
aam
es
jge
jge
test
sub
mov
outsb
loop
sub
jo
and
jo
ficoms
dec
xchg
out
pop
jno
and
dec
nop
fildl
jg
add
inc
pushf
pusha
mov
test
repz
popa
mov
jg
adc
dec
mov
sub
lcall
fdivp
pop
out
mov
mov
sub
dec
je
cmp
and
addr16
xor
and
in
lcall
cmpsb
cmpsl
xchg
add
or
jl
jo
cmp
mov
cmpl
test
dec
push
imul
xchg
lret
add
ret
inc
fldenv
push
xlat
inc
inc
movsl
movsb
mov
jmp
test
jae
jg
sti
ljmp
outsb
push
int
decb
pop
pusha
rcll
pop
bound
pop
ss
add
test
add
pop
daa
test
fcompl
push
lcall
imul
pop
pop
push
xchg
insl
xor
cmp
enter
or
inc
inc
push
push
pop
and
inc
sahf
and
mov
rorl
sbb
lds
loopne
sbb
bound
jle
cmpsb
cmp
into
mov
jmp
leave
testb
mov
mov
mov
insl
inc
test
xchg
and
cs
or
jg
dec
loope
pop
mov
jno
xchg
mov
adc
cwtl
xchg
xor
pop
es
pop
in
imul
repz
dec
or
mov
lock
sbb
sub
sti
xor
mov
mov
pop
xor
sahf
movsl
mov
sbb
inc
cld
xchg
mov
shr
dec
stc
xchg
sbb
pand
jp
clc
cli
mov
cmpsl
movb
mov
push
leave
sarb
fistps
data16
pop
loope
mov
pop
lea
in
imul
fs
jge
aaa
inc
mov
jge
imul
xlat
outsb
pop
lods
xor
jbe
or
outsl
das
cli
stc
std
jo
hlt
fimull
cmp
cmp
aad
or
hlt
insl
repz
jb
and
clc
loope
adc
orl
jno
mov
ficomps
push
test
jge
push
das
insl
nop
mov
fwait
jge
or
hlt
in
push
xor
js
push
sarb
push
test
lods
cmp
daa
sub
mov
pop
cmp
popf
lock
pop
push
andb
pusha
shrl
punpckhwd
repz
xchg
xchg
cmp
cmp
jmp
in
cmpsb
scas
inc
mov
sbb
shrl
sbb
fs
push
mov
pop
arpl
inc
and
mov
mov
clc
inc
sub
sub
mov
mov
shlb
dec
pop
pop
push
push
fildll
cwtl
in
push
mov
test
int
js
popf
inc
mov
loope
mov
fs
call
sbb
cmpsl
jnp
int
ret
push
xchg
xor
je
icebp
fimull
subb
or
or
sbb
and
and
cmpsl
or
cmc
in
das
sub
popa
adc
cmp
push
push
inc
mov
mov
push
cmovs
mov
sbb
aaa
leave
cld
adc
insb
fs
or
dec
mov
fs
sbb
sbb
cmp
repnz
pop
fcom
mov
xlat
ljmp
dec
loop
pop
cmpb
and
jmp
jne
shrb
or
jg
xor
rorl
out
jae
pop
icebp
movsl
adc
outsb
sub
pop
shr
xchg
pop
pop
in
pop
loopne
mov
sbb
sarl
cmpsl
pop
inc
nop
pop
lret
imul
js
outsb
pop
icebp
sbb
popf
push
xchg
sahf
in
or
cmp
mov
mov
sahf
mov
int3
mov
pop
or
cwtl
lcall
out
jns
mov
and
loop
stos
adc
int3
add
pop
rcrb
dec
pushf
mov
adc
mov
cmovp
jmp
and
mov
sti
mov
jo
in
xchg
lods
lods
pop
adc
in
push
scas
lcall
push
mov
popa
js
movsl
pop
mov
loopnew
cmpb
arpl
adc
mov
jne
pop
cmp
sub
mov
jge
outsb
sbb
jle
in
add
cli
cmc
xor
pop
push
push
leave
not
popf
nop
lahf
mov
push
pop
loope
lahf
mov
mov
ljmp
inc
sti
dec
icebp
aaa
xlat
mov
jge
orps
or
sbb
inc
sbb
sbb
test
and
mov
fsubr
dec
sbb
and
mov
xorl
in
mov
add
mov
daa
stc
shr
out
and
mov
push
rcrl
sti
mov
mov
je
or
dec
nop
stos
frstor
pop
imul
repz
or
cmp
loopne
mov
clc
pop
lcall
lods
jbe
imul
cmc
sub
lcall
inc
aam
cmp
lods
fcomi
cld
push
enter
out
mov
out
and
stc
cwtl
sbb
add
cmp
pop
mov
jno
push
pop
mov
mov
insb
sqrtps
cmpsl
clc
inc
repz
cmp
inc
leave
and
daa
scas
mov
nop
dec
push
outsb
xchg
cltd
dec
cmpsb
sub
in
mov
test
cltd
enter
out
sahf
fcoms
dec
ja
xchg
das
out
popf
js
mov
push
dec
push
andl
push
and
adc
ret
push
add
movsb
out
push
std
test
movhps
test
mov
movsl
xchg
pop
ja
out
jle
inc
aaa
bswap
jl
push
pushf
ss
jnp
negl
sub
loopne
push
outsb
add
mov
imulb
lds
mov
adc
mov
push
adc
dec
and
adc
pushf
in
pop
in
fmul
sbb
aam
repnz
mov
jl
or
push
scas
lock
loope
lock
in
mov
xlat
sbb
dec
adc
test
insb
andl
test
mov
test
insb
out
rolb
jns
mov
lret
leave
add
in
jno
adc
xchg
or
aam
jg
mov
inc
dec
jb
in
leave
lods
mov
roll
xorb
dec
mov
icebp
xchg
mov
sbb
sbb
in
cmp
int3
dec
mov
sbb
rorl
cwtl
push
jp
cltd
adc
fldenv
pop
jnp
std
mov
out
shrb
adc
dec
cli
xchg
js
scas
testl
mov
jmp
mov
out
mov
add
adc
push
xchg
shlb
cs
or
mov
ljmp
imul
jle
pop
mov
pop
stos
pop
into
mov
cld
and
sub
cmp
lahf
repnz
sbb
repnz
jp
lcall
fistps
lock
pop
out
lret
movsb
add
mov
sub
shll
mov
push
pop
mov
or
pop
ss
mov
mov
mov
inc
fisubrs
mov
icebp
stc
cmp
jb
popl
in
insl
popa
ret
sub
push
pop
stc
adc
mov
addr16
xor
or
mov
sbb
scas
dec
xchg
cmp
jns
je
in
cmc
inc
xor
jle
nop
dec
cli
insl
leave
jecxz
ret
test
pop
shrb
mull
fcompl
loopne
fs
inc
leave
jmp
sbbl
fxch
out
add
mov
push
loop
ds
add
mov
adcl
dec
mov
jmp
nop
cmp
jnp
mov
shl
push
cmpb
ja
mov
cmp
clc
adc
fldt
lock
jp
testb
mov
adc
repz
xchg
popa
jmp
lods
mov
lcall
mov
push
aas
into
dec
daa
xchg
call
das
ror
insl
inc
in
in
out
mov
mov
xchg
in
inc
jle
icebp
fidivrs
mov
adc
xchg
jno
outsl
fisubrl
sahf
cmp
iret
jnp
mov
dec
push
adc
insl
mull
out
mov
rcl
dec
rcrb
nop
jbe
es
test
jbe
jae
sbb
and
nop
xchg
push
xor
add
xchg
aaa
sub
mov
imulb
mov
push
inc
fwait
rcrb
adc
jnp
jno
enter
clc
call
xchg
out
cmpsl
push
loopne
sub
cmc
xor
or
add
outsb
push
and
dec
aaa
lods
into
xchg
daa
int3
and
outsb
rcr
lahf
xchg
divb
pusha
cmp
mov
or
dec
es
cmp
mov
jnp
loope
cmp
jbe
and
jns
icebp
add
je
call
sub
push
outsl
in
test
cltd
mov
sbb
inc
mov
sti
movsl
std
aam
inc
shll
push
fisttpl
adc
enter
cli
add
inc
xor
int3
fmuls
pop
mov
xchg
pop
xor
dec
jl
push
push
push
sub
dec
jb
xchg
inc
sbb
scas
in
bound
fs
fdivs
cs
sti
inc
jbe
or
ret
cmc
insb
and
xor
dec
pop
bt
stos
jp
or
cmp
out
inc
inc
dec
adc
add
push
xor
insl
in
fs
andb
sti
mov
cmp
orl
xchg
mov
ss
xlat
mov
cltd
pop
jns
stc
push
lret
jb
xchg
mov
imul
faddp
fnstcw
mov
mov
inc
pop
jo
pop
popf
sub
ret
or
pusha
lock
ret
sti
cmp
xchg
js
add
in
inc
sbb
push
sbb
shrb
scas
dec
pop
repnz
hlt
xchg
inc
xor
inc
cmp
sub
insl
push
pusha
push
loop
adc
lock
shll
repnz
ret
mov
in
or
fcomps
push
mov
fisttpl
mov
adc
rcrl
jg
or
stc
add
mov
stc
scas
cmpsl
cwtl
jne
xor
insb
jp
add
rcrb
cmc
dec
mov
push
jl
arpl
pop
jg
mov
loop
jl
ljmp
sub
jp
test
pop
push
movb
adc
mov
incl
in
je
jp
adc
pop
enter
dec
scas
mov
js
sub
add
shlb
aad
bound
mov
pop
sti
lret
mov
inc
leave
call
xchg
stc
movsb
mov
xchg
negl
arpl
loope
adc
push
dec
xchg
test
inc
xor
insb
call
add
daa
jae
jge
pop
cmpsl
push
lret
cltd
xor
xchg
fsubrp
mov
push
mulb
ljmp
and
inc
sub
pop
inc
and
scas
aam
cmpsb
repz
aas
shll
scas
xchg
mov
ja
sub
xchg
pop
jbe
mov
inc
or
ds
push
or
rep
daa
or
fcmovb
inc
lret
fldl2e
jg
lcall
out
or
pop
fwait
addr16
shll
or
insl
jo
xor
sbb
fs
push
jns
pop
pop
insl
loope
mov
insl
out
scas
push
subb
mov
in
add
add
adc
vprotq
xchg
jb
inc
mov
mov
imul
insl
repnz
jg
adcl
push
jmp
in
mov
cmp
and
and
xor
pop
cmc
sarb
sbb
mov
sbb
dec
push
pusha
aaa
in
pop
jmp
jge
fcompl
rcll
ljmp
push
rcrl
ljmp
ds
mov
or
mov
mov
into
mov
ljmp
xorl
lods
jecxz
sub
ror
push
mov
into
cli
push
mov
sahf
sti
jne
sbb
dec
add
push
ss
lods
cmp
mov
ljmp
mov
out
movsl
jnp
inc
lahf
xchg
in
repnz
test
inc
js
cmp
cltd
dec
mov
push
jg
ljmp
xor
aas
jne
mov
mov
idivl
cmpsl
push
scas
dec
addb
test
rcl
adc
adc
test
clc
sbb
insl
repnz
out
test
inc
sub
xchg
add
inc
lock
and
sahf
pop
xlat
push
dec
movsb
push
aas
xchg
out
enter
loop
mov
dec
fcmovnb
inc
int
push
jo
push
sub
mov
lods
sub
or
inc
sub
popa
mov
aaa
in
rcrl
popf
mov
iret
addr16
xchg
cmp
dec
addl
test
cmp
cmp
aaa
pop
mov
push
jmp
push
ds
add
and
cld
xor
inc
loopne
adc
cwtl
std
push
xchg
in
int
xor
iret
dec
out
push
push
divl
ljmp
stc
and
in
clc
and
dec
jne
jg
cmp
mov
cmp
sahf
lods
mov
pop
xor
mov
add
ret
or
sahf
aam
sub
mov
jnp
loopne
fmull
xchg
gs
mov
popf
in
or
insl
rclb
push
fbstp
stos
cmpsl
push
mov
sti
add
inc
lock
loop
loopne
dec
ret
inc
incb
mov
jne
mov
imul
ja
cmpl
sub
and
push
popa
cmp
push
jnp
pusha
and
loope
orb
sub
pop
push
rcrb
push
int3
pop
fxam
pop
xorb
sbb
addr16
les
mov
les
push
repnz
aaa
stos
xor
in
sbb
push
aas
insl
loop
test
inc
dec
rclb
xchg
or
mov
lock
aas
popa
jae
and
in
mov
xchg
dec
call
sbb
push
fiaddl
repz
subb
inc
mov
imulb
push
mov
mov
cwtl
cld
push
or
inc
popf
cltd
ror
and
repnz
add
mov
mov
pushf
jge
jb
fwait
leave
fcmovbe
sub
js
fcmovne
mov
sbb
popa
add
pop
sub
call
loop
ds
int
int3
jae
lret
jge
test
jg
stc
and
out
mov
add
xchg
push
not
and
sbb
lods
iret
mov
or
ficoms
pop
sahf
and
jnp
sub
mov
sub
lea
dec
sbb
ret
add
test
sub
cmp
mov
lea
and
popf
pop
lods
test
jae
enter
ret
cli
mov
sbb
negl
inc
xlat
clc
call
test
mov
pop
mov
aad
lea
int3
add
mov
fst
xchg
test
push
pop
mov
pop
xchg
movsb
pop
repz
mov
cmp
xlat
sub
mov
fistl
in
shlb
xor
cmp
dec
popa
pop
pop
aam
fisubl
stos
mov
int3
jne
repz
xchg
adc
fstpl
lock
aas
inc
inc
gs
push
nop
dec
insb
scas
mov
xlat
test
andl
inc
xchg
aad
out
gs
hlt
push
push
mov
pop
dec
mov
mov
cmc
lock
shr
pop
push
dec
cmpsl
bswap
mov
and
dec
xor
push
in
sbb
jecxz
add
sahf
lahf
push
idiv
adc
fstpt
mov
cmp
movsb
in
push
sub
loop
out
clc
insb
mov
push
ljmp
dec
cmp
pop
inc
ds
push
lock
test
mov
repnz
in
dec
inc
lods
test
pop
cli
sbb
test
adc
sbb
aam
fsubl
lds
push
adc
jge
jne
mov
sahf
jecxz
mov
rcr
mov
push
dec
idivb
test
filds
into
dec
adc
scas
jl
popf
xchg
cld
mov
scas
mov
cmpsl
xor
or
rclb
std
mov
aas
inc
stc
xor
jmp
roll
inc
lret
jp
jo
sbb
pop
sub
pop
mov
rorb
push
dec
fsubl
push
cmp
push
test
inc
adc
cmp
mov
inc
pop
mov
xchg
mov
icebp
ret
push
int
ss
pop
and
dec
adc
cmp
sub
arpl
push
je
jnp
pop
orl
cmp
jb
out
xchg
push
xchg
nop
dec
lods
add
in
imul
sbb
adc
dec
and
ljmp
lock
fisubs
int
imull
loopne
add
in
mov
lock
popf
xchg
sbb
jg
cmpsl
in
sub
int
jae
and
mov
lock
jmp
mov
nop
lret
jbe
inc
jp
jmp
imul
jns
stos
inc
mov
movsb
mov
xor
lahf
imul
pop
call
sub
jne
lds
popa
mov
push
bound
jmp
mov
cmp
loop
mov
pop
jnp
mov
cmp
inc
push
add
cmp
push
pop
call
outsl
es
jp
jbe
imul
cmovge
inc
inc
lods
int
sbb
test
icebp
jp
adc
push
mov
or
mov
push
cmpsb
fstpt
cltd
adc
jno
mov
dec
add
outsb
int
popa
scas
fsubrp
pop
pusha
lock
ss
mov
cltd
pop
fwait
sub
mov
push
sub
cmp
pop
mov
pop
movsb
cltd
ret
loopne
inc
inc
jmp
mov
rcrl
and
clc
sub
cwtl
rcr
push
aam
rorl
mov
fldt
add
inc
mov
hlt
test
xor
mov
adc
push
cmp
cmp
addl
push
fisubl
outsb
mov
pop
inc
sbb
sub
add
mov
pop
cmpsb
pop
and
movsl
mov
cmpsb
pop
pusha
bound
mov
add
push
cli
out
mov
imul
xor
iret
xchg
daa
cld
addr16
mov
outsl
mov
fistps
test
ds
jle
sub
fisubs
lahf
adc
dec
mov
jge
mov
push
loop
xchg
and
leave
sub
cltd
mov
inc
sbb
orb
flds
add
sub
repz
ffree
inc
cwtl
jecxz
inc
sub
cld
inc
lea
jnp
mov
cmp
out
xchg
pop
call
jge
add
adc
nop
dec
cmp
lahf
mov
xchg
xlat
mov
push
cmpsl
jae
int
xchg
rcll
adc
cltd
aas
or
cmpsb
aam
fwait
mov
sbb
cltd
aam
filds
popa
cmp
cmp
loopne
stos
mov
insb
fcmovnu
mov
decb
cmp
push
imull
mov
xor
sbb
in
pushf
imul
outsb
movsl
ss
call
addr16
fs
mov
stos
pop
mov
pop
mov
int
dec
inc
movsb
jo
insl
cmp
inc
imul
jge
adc
faddl
adc
inc
inc
jno
addr16
sub
add
push
cltd
mov
stos
mov
daa
test
sbb
sbb
sbb
out
jns
test
rcll
xchg
add
pop
loope
cmpsl
std
pusha
xor
std
clc
dec
inc
movsb
mov
mov
pop
rcl
aam
jb
pop
loopne
inc
lods
das
cmp
jne
and
and
adc
sahf
adc
stc
das
adc
or
mov
pop
mov
call
and
mov
aaa
and
xchg
dec
aad
dec
aad
test
inc
push
aas
out
pop
sub
cmp
fldl
xor
outsl
test
push
gs
push
popf
jge
dec
mov
pop
aas
std
daa
subl
bound
cli
cmpsb
js
push
dec
int
cmp
add
push
or
dec
test
lret
lea
mov
std
aad
xor
into
mov
mov
jl
fidivs
cmc
lcall
daa
faddl
aaa
pusha
orb
adc
pop
stc
aas
ss
or
sarl
data16
lds
sbb
rorl
sti
push
xor
loope
movsb
xchg
mov
enter
xchg
pop
sub
xlat
insb
mov
add
sahf
pop
bound
jb
add
dec
push
ss
daa
add
lods
mov
gs
dec
cmp
test
mov
push
ss
sub
popa
hlt
sbb
cmp
call
popa
and
add
aad
mov
sahf
pop
mov
test
xor
lret
and
cmp
jbe
cmp
xor
imull
je
pop
call
shl
fldt
xor
and
cmp
jns
adc
or
mov
fisubrs
mov
jae
or
dec
loop
or
rclb
stos
cmpb
xchg
adc
dec
lahf
addl
push
jo
mov
cld
sub
pop
les
mov
inc
jb
fs
insl
inc
dec
pop
sbb
mov
iret
cli
cmpsl
mov
lcall
arpl
or
hlt
lock
jnp
dec
pop
push
out
shll
inc
loope
jp
mov
cld
in
pushf
in
push
stos
mov
aam
mov
xchg
int3
cmpsl
and
enter
scas
sbbl
insl
aas
mov
fsubrp
loopne
mov
aaa
dec
inc
pop
cmp
int
inc
push
pop
mov
add
push
or
icebp
push
inc
iret
movsb
bsf
int3
or
sbb
sbb
mov
rolb
clc
pop
aad
jp
jbe
les
cmp
xchg
xchg
lods
inc
cld
mov
xchg
pop
test
loop
push
lds
jae
in
into
call
adc
sub
xchg
mov
enter
add
jp
cmp
fucomp
mov
out
add
jno
out
test
cltd
lds
in
jl
mov
cmp
loop
mov
xchg
clc
inc
dec
jl
xor
dec
lcall
inc
and
adcb
push
sbb
fucomi
pop
cs
add
cmp
adc
push
ds
ja
lods
mov
ret
outsl
sahf
mov
push
pop
clc
insl
imulb
jge
mov
ret
sub
popa
daa
popl
mov
out
jle
adc
mov
sub
sub
mov
adc
mov
rcrl
pop
xchg
adc
aaa
loop
rorl
ja
test
dec
pop
insb
inc
shlb
lock
fs
stos
fwait
inc
rcr
outsl
push
xor
fldenv
ja
lahf
enter
inc
dec
sub
push
adc
push
adc
jnp
and
push
pop
push
pop
mov
dec
mov
int
sahf
mov
mov
and
mov
int3
popf
pop
push
mov
pop
xchg
out
pop
mov
sbb
mov
mov
inc
jecxz
sahf
add
cmpl
xchg
inc
and
xchg
mov
imul
inc
js
loop
clc
adcl
in
fistpl
sub
cli
push
fimull
jnp
jmp
clc
and
pop
stos
cltd
xchg
fs
dec
test
cwtl
inc
xchg
xchg
rcrb
stc
push
imul
mov
mov
xchg
rcrb
insb
mov
push
adc
popf
mov
lock
fiaddl
push
fnstsw
push
xor
jns
push
mov
movsl
or
or
test
daa
shlb
jl
mov
sti
push
inc
xchg
push
leave
fldl
arpl
pusha
mov
loop
ror
jo
test
pop
fistps
sbb
pop
rcll
dec
in
jnp
imull
fisttpl
xor
js
test
cli
add
and
rcrl
ja
push
ss
mov
push
xlat
idivb
les
mov
pop
xchg
and
xchg
mov
lahf
fistpll
sti
mov
repnz
xchg
out
and
lahf
add
decl
fisubrl
mov
adc
cli
fsubs
mov
es
dec
addr16
mov
lea
inc
idivb
push
pop
cmp
sbb
cmpb
mov
out
jno
loop
fcomip
cmp
jmp
rcrl
inc
or
adc
jmp
out
lods
sbb
pop
xchg
sbb
mov
sbb
mov
cmp
enter
imul
mov
sub
faddp
repnz
mov
mov
loope
adc
andl
pop
inc
insl
pop
out
aad
cwtl
leave
mov
inc
push
lock
jg
push
cmp
outsl
add
lock
xor
pop
insl
xor
inc
pop
scas
pop
mov
add
repz
sub
jecxz
xor
jns
mov
outsl
std
aam
push
mov
inc
xchg
sbbl
popa
lcall
ret
cltd
pushf
xchg
leave
xor
hlt
das
add
dec
call
xchg
iret
mov
xor
mov
and
add
and
jmp
sti
test
xor
push
mov
sarl
jbe
mov
jno
lahf
out
hlt
add
js
pop
jbe
aas
cltd
ret
add
call
xor
jns
insb
test
add
int
adc
push
pop
xchg
iret
xor
out
pushf
hlt
imul
roll
addr16
fidivs
out
mov
outsb
es
mov
lret
in
pop
or
mov
in
dec
fimull
loopne
xchg
cmp
faddl
add
loope
or
sbb
or
mov
sti
jl
mov
pop
dec
addb
roll
out
int
mov
jno
clc
ja
bound
sbb
xchg
or
inc
mov
pop
out
fdivrp
in
arpl
gs
jg
rorb
ret
ret
xchg
lock
mov
sub
mov
adcb
cmp
mov
and
fdivr
cmp
shrb
jmp
pop
popf
lret
repnz
push
pop
sub
hlt
repz
jge
push
pop
rcr
in
adc
and
inc
sub
sbb
push
xorl
or
cmp
sub
sub
test
mov
imul
jle
mov
xchg
dec
mov
jns
shrb
int
mov
lea
lds
sahf
xor
mov
xor
jae
nop
push
xchg
aas
push
hlt
mov
push
sti
mov
flds
adc
lds
jmp
mov
lea
inc
mov
loop
imul
xor
pop
mov
jns
sbb
push
mov
jmp
test
jnp
push
inc
repnz
into
out
icebp
inc
scas
cmp
leave
fdivrl
xchg
jl
leave
jg
adc
or
repnz
sbb
and
ss
aad
xchg
jg
sbb
ljmp
test
out
xchg
shll
push
adc
jo
jo
inc
push
pop
int
fildl
lods
sub
cmp
decb
sar
dec
subl
mov
pusha
sbb
cmc
pusha
cmpsb
mov
loope
cld
testl
insl
filds
orb
xchg
hlt
popf
dec
mov
jle
sbb
adc
and
push
sub
out
in
pop
mov
arpl
imul
add
or
cmc
mov
cmp
and
stc
add
sub
inc
sahf
sbb
jg
incl
xchg
xlat
mov
sub
mov
sub
pusha
xchg
fs
sbb
out
jbe
data16
inc
cmp
inc
sbb
xorb
out
call
fcmovu
mov
das
addr16
push
out
in
es
stc
lea
add
fcomi
dec
adc
inc
xchg
js
fs
rol
or
bound
push
xchg
popl
or
sbb
or
push
cmp
jmp
push
xchg
inc
aas
jno
stos
orb
mov
xchg
pop
push
cmp
or
mov
xchg
xchg
adcl
out
dec
dec
sbb
fsts
mov
xor
cmp
mov
testb
adc
or
push
test
mov
mov
test
repnz
add
or
pop
and
fstps
inc
cmp
pop
jne
jnp
mov
add
je
mov
das
pop
and
icebp
popf
cwtl
mov
call
or
mov
adc
aam
mov
test
inc
xchg
cmp
lods
inc
addr16
insb
sbb
and
test
es
idivb
inc
dec
aaa
insb
mov
out
xor
lea
sbb
push
pop
lods
inc
xlat
clc
cltd
dec
and
mov
mov
xor
push
mov
fldt
das
test
cli
mov
in
push
addl
pop
inc
cmp
ficoms
mov
push
fiaddl
cld
and
dec
out
xchg
jmp
mov
and
in
push
sub
add
xor
mov
lock
fldt
jecxz
mov
repnz
inc
in
pop
test
mov
add
push
scas
cmp
mov
lret
adc
cmp
adc
rcl
clc
inc
lods
or
mov
fs
mov
rcrb
pushf
pop
orl
xchg
cmp
inc
adcb
or
inc
push
scas
lret
je
xor
mov
pop
jno
sar
fnstsw
cmc
mov
mov
adc
int3
out
mov
mov
mov
cltd
lret
sti
xor
xor
xchg
dec
sbb
or
es
cs
inc
push
lret
shlb
sbb
int
adc
inc
das
lock
not
cmp
push
jle
dec
or
addb
add
sbb
xchg
stos
shlb
xchg
jg
loopne
test
enter
lcall
repnz
fwait
stos
sarl
gs
lods
mov
jl
jnp
and
test
adc
pop
outsl
shrb
cmp
inc
push
jns
and
adc
mov
dec
mov
ret
fidivl
xlat
and
push
cmp
in
or
fmull
push
std
jmp
in
jo
jo
cmp
lods
pop
iret
xor
jb
ljmp
out
imul
push
cmpsb
int3
inc
mov
jno
mov
mov
cwtl
dec
pminsw
call
imul
mov
lahf
in
xchg
mov
xchg
cmp
pop
mov
out
pusha
ret
mov
lods
sub
icebp
les
sarb
pushl
iret
mov
or
xchg
fnsave
imul
xor
scas
out
sub
or
imul
mov
icebp
push
xchg
mov
mov
sbb
test
jnp
stos
xrelease
mov
push
out
push
dec
icebp
rcll
test
pop
shlb
cli
cvtps2pd
incb
mov
lret
mov
dec
pop
push
pushw
loop
fisttps
icebp
pop
call
test
ret
pop
jno
shl
lods
xchg
add
xor
movsb
add
pop
sbb
or
mov
jnp
jb
or
adc
sbb
ja
pop
std
pop
sbb
faddl
xor
enter
mov
call
mov
cmp
aam
aaa
push
push
insl
leave
pop
pop
or
outsl
or
mov
ficoml
pushf
push
adcl
adc
clc
shr
pop
push
or
push
sbb
adc
rolb
and
sbb
and
leave
push
aaa
out
movsl
outsb
int3
sbb
jmp
enter
jle
cmpsb
in
outsl
nop
mov
out
or
xchg
add
stc
cmp
or
ja
or
inc
repnz
je
cwtl
sbbl
or
dec
into
sar
mov
test
cmpsb
aaa
leave
cld
push
xor
dec
test
xchg
mov
int
insb
push
mov
in
shrb
jp
out
xchg
push
push
sbb
sub
and
jno
xchg
sub
cmp
out
adc
scas
pop
fsubrl
push
sbb
dec
push
push
pop
adc
sub
scas
jno
dec
in
add
mov
adc
sub
jns
adc
int3
loopne
movsb
add
std
dec
sbb
mov
mov
mov
xlat
es
jae
mov
sub
sti
sbb
inc
je
cmp
pusha
mov
xor
push
ss
shl
iret
cmp
xor
pop
pop
stos
pop
or
pusha
gs
mov
cmp
in
jb
jp
sahf
loop
sbb
stos
or
mov
enter
test
fstpt
mov
popf
xor
fisubl
sub
mov
xchg
sub
xchg
mov
bound
test
insl
cmpsl
pop
out
cmp
rcrl
fwait
adc
icebp
pusha
movsb
rol
mulb
mov
pop
cmc
jge
lret
cmp
pop
cli
cmpsb
xchg
or
ds
pop
adc
mov
jno
xor
sub
roll
add
leave
and
daa
aas
cmpsl
dec
insb
mov
mov
out
testl
loopne
add
es
shl
pop
dec
pop
leave
out
scas
dec
add
cmp
adc
cmp
into
push
sbb
dec
adc
and
fcoms
sub
jp
or
and
outsl
cmpsb
push
pop
adc
pusha
jl
imul
stos
fs
adc
out
test
imul
fwait
sub
dec
fnstcw
fmuls
xchg
lret
ljmp
mov
inc
insb
in
jmp
fdivl
divl
dec
push
xor
icebp
and
xchg
ss
add
shll
sub
xchg
inc
lcall
mov
sub
sti
pop
scas
pop
push
enter
jns
mov
pop
fnsetpm(287
pop
stos
inc
imul
jg
aad
sbb
pop
jmp
test
insl
test
xor
inc
les
xchg
neg
push
mov
lds
push
fildl
andl
add
fcmovu
out
and
xchg
mov
out
dec
ljmp
lods
xor
test
outsb
loopne
test
lgs
repz
aam
jbe
push
push
push
cld
das
movsb
es
insb
ret
xchg
imul
popa
push
ret
cmpsl
sub
out
imul
ss
in
and
xchg
and
pop
pop
addr16
stc
cmc
and
adc
loope
lods
adc
jl
cmp
in
icebp
push
sub
push
and
lods
xlat
xchg
je
fwait
jb
xchg
jnp
dec
mov
enter
adc
inc
jmp
test
mov
pop
xchg
xchg
std
xchg
imulb
sub
sahf
jnp
jl
out
int3
jnp
push
mov
dec
pop
nop
idivl
push
mov
imul
ud1
test
enter
stos
fisubrl
inc
mov
aad
xor
fcoml
cmc
call
inc
dec
mov
je
jmp
pop
minps
xlat
cwtl
sarl
iret
call
inc
add
inc
andb
imul
arpl
lods
sbb
fwait
cwtl
sub
mov
adc
and
nop
pop
sub
xlat
mov
mov
sub
push
mov
and
sub
imul
jmp
fldcw
pop
and
push
fcoms
shll
mov
fdivrs
adc
ss
xor
xchg
test
inc
cwtl
add
call
les
out
sub
lea
sbb
out
shlb
rorl
insb
incb
add
aaa
jecxz
sub
mov
scas
lods
xchg
cmpsb
rcrl
jne
and
and
pop
lock
sub
sahf
pop
movsb
ret
dec
or
imul
cmp
cmpsb
push
lret
push
sbb
test
xor
loopne
adc
lock
mov
or
enter
sub
mov
repz
push
sbb
or
fldt
xchg
aad
mov
push
pop
test
mov
cld
lea
push
and
stos
stc
cmpb
cmp
insl
out
into
mov
mov
inc
in
sahf
cmpsl
icebp
or
movsl
les
imul
pop
cltd
stos
out
xchg
jnp
cmp
jecxz
adc
nop
pop
shll
ds
cwtl
lcall
dec
inc
test
add
out
and
dec
lret
std
mov
mov
aaa
loopne
jo
cltd
xor
imul
popf
dec
jb
inc
sub
jge
jg
out
ss
cwtl
mov
and
das
out
or
xchg
jae
ja
loope
stos
push
mulps
xchg
nop
in
mov
dec
and
add
xlat
add
push
out
sub
xchg
mov
stc
xor
andb
cli
int
repz
rcll
ret
ficompl
push
pop
addl
loopne
dec
and
pop
xchg
in
dec
lret
push
inc
inc
test
mov
dec
mov
dec
adc
or
popa
mov
jmp
stos
sub
arpl
push
ret
jae
lcall
jp
cmpl
adc
and
inc
inc
jno
ss
or
xor
push
lcall
lahf
imul
adc
mov
faddp
jge
and
call
mov
test
scas
insl
fwait
xchg
std
dec
push
pop
mov
push
sbb
movsb
cwtl
dec
pusha
or
pop
dec
inc
andb
out
movsl
xchg
xor
pop
orb
jbe
popf
aas
fistpll
gs
xchg
out
les
out
xchg
xor
sub
inc
dec
arpl
or
je
or
add
adc
add
xchg
iret
fidivl
pop
pop
stc
gs
cmc
jl
imull
xor
out
mov
xlat
xlat
jae
fidivs
xchg
pop
push
outsb
insl
sub
and
lea
sbb
inc
jp
lds
cwtl
mov
mov
mov
es
jle
pushw
call
cmc
mov
add
test
mov
push
cli
es
loope
fildl
or
shl
popa
imul
data16
iret
into
lcall
jl
cs
std
jmp
outsl
mov
mov
aas
sti
mov
aam
add
mov
fwait
test
push
pop
inc
xchg
ror
stos
pop
add
adc
test
jp
aaa
int
popf
adc
loope
sub
imul
inc
in
jo
push
test
adc
psubw
call
pop
mov
lock
cwtl
xor
outsb
mov
lods
cli
fistpll
out
jae
jle
jge
cs
and
jp
lea
mov
or
decl
mov
lret
in
out
gs
pop
push
add
lret
pop
xor
clc
insb
mov
sbb
cmpsb
jbe
xchg
push
cmp
and
test
sub
out
and
iret
fistpl
jo
fistps
sub
rolb
fcoml
dec
out
mov
gs
sti
aam
xor
js
addr16
lods
inc
sub
pshufw
mov
loope
sub
out
jp
int
test
pop
push
add
sbb
cltd
dec
mov
cmp
ds
popf
mov
hlt
fcoms
xor
rorb
xchg
xor
cmp
out
andb
sbb
xor
pop
adc
test
sbb
loop
cltd
and
int3
sti
stos
push
clc
imul
dec
dec
xchg
pop
jmp
xor
cmp
add
mov
push
sbb
je
fs
out
cmpsb
repz
push
and
pop
int3
inc
in
mov
cmp
movsl
leave
and
mov
mov
mov
mov
sub
out
sahf
rorb
sub
jp
in
subl
loopne
fwait
pop
je
pop
xchg
out
add
cmp
jl
jae
xchg
cmp
mov
adc
fwait
scas
mov
cmp
mov
jb
dec
scas
aaa
pop
jb
xchg
dec
gs
mov
or
mov
push
iret
inc
pop
mov
lock
dec
xlat
inc
dec
dec
imul
loopne
inc
int
or
xlat
mov
and
adc
mov
and
andb
fisttpll
xchg
mov
mov
mov
int
sbb
stos
paddsb
mov
xor
orl
sbb
dec
out
inc
rolb
test
xlat
dec
mov
jecxz
dec
xchg
bound
sbb
lea
icebp
lods
fs
inc
fnsave
leave
in
mov
lock
or
aaa
popf
dec
sbb
into
adc
mov
xchg
dec
addb
stos
test
pop
lahf
bound
iret
adc
std
xor
push
sarl
pop
aas
jne
inc
jno
data16
sub
sti
ret
add
mov
pop
push
ljmp
addr16
push
fsubl
pop
pop
mov
add
stos
ss
out
aas
pop
outsl
daa
and
and
pop
ret
xchg
sahf
pop
inc
out
jg
sbb
and
inc
jbe
cwtl
clc
and
lods
cld
pop
aad
in
push
xchg
outsb
sbb
out
pop
aad
aad
push
mov
adc
pop
push
test
mov
pop
add
xchg
into
adc
jnp
mov
rorl
enter
or
icebp
sbb
int
jecxz
cmp
shrl
mov
loop
popa
mov
jp
xor
dec
mov
cmp
test
mov
movsb
js
out
je
filds
pushf
loop
ficoml
jbe
cwtl
lods
test
call
dec
add
mov
inc
test
loopne
test
add
insb
xchg
push
dec
stos
sbb
mov
sbb
repnz
mov
pop
stos
adc
add
movsl
push
stos
mov
pusha
or
mov
stos
aad
dec
sbb
jle
mov
in
stc
lret
fs
clc
jo
xchg
add
push
out
enter
out
jns
sub
sub
pop
div
clc
adc
inc
pop
aam
cmp
sbb
and
mov
jbe
shl
cmpsb
subb
mov
add
lea
pop
cs
ss
mov
sub
insb
jecxz
loop
or
add
nop
or
iret
xlat
jge
mov
or
push
mov
push
mov
adc
push
ja
pop
xchg
mov
call
fld
lock
xchg
repnz
lahf
jge
mov
fucom
push
push
lock
dec
mov
pop
pop
sub
cmc
adc
in
mov
mov
adc
jecxz
sbb
rcrb
in
dec
or
cwtl
int3
mov
jb
fnstenv
and
dec
andl
lahf
sub
pop
dec
xlat
pop
mov
pop
mov
lret
xor
loop
xor
fisttpll
inc
je
addl
jne
in
in
les
fldenv
rcl
pop
jb
in
jno
sbb
mov
repnz
ret
adc
pop
mov
into
dec
or
jb
adc
enter
clc
arpl
loop
mov
jmp
add
sub
pop
jle
loope
cmpsl
or
movsb
jl
das
sub
mov
dec
jl
lods
pushf
mov
loopne
push
adc
icebp
jbe
pop
mov
loopne
iret
mov
xchg
mov
subb
pop
mov
in
cli
push
imul
or
jnp
sbb
push
mov
loopne
roll
fwait
pop
ss
mov
mov
ret
jmp
leave
mov
lret
in
jp
pop
rcll
mov
mov
rorb
mov
inc
std
push
mov
ss
lds
push
push
sbb
call
dec
xor
pop
outsl
mov
test
mov
cld
push
mov
idivl
mov
mov
iret
mov
inc
push
xorl
pop
cmp
aaa
movq
addr16
nop
cmp
and
mov
pusha
inc
hlt
and
xchg
xchg
in
loope
and
or
sub
pop
dec
sbb
push
inc
pop
or
xchg
cld
lds
je
push
xor
lcall
pop
xlat
mov
cmpl
sbb
jmp
inc
xor
pop
sbb
mov
cmp
or
arpl
inc
sub
dec
sahf
dec
adc
push
es
xchg
push
rcr
loop
mov
loopne
mov
and
leave
sbb
fstpl
call
push
scas
ljmp
cmp
int3
inc
inc
dec
std
sbb
adc
xor
pop
inc
add
sbb
xor
fwait
loop
push
mov
ja
mov
jle
ja
scas
je
xor
hlt
or
test
mov
jbe
in
jp
adc
adc
xchg
clc
mov
jmp
cmpsb
inc
push
jo
add
imul
imull
sti
lea
fsqrt
out
ret
sbb
subl
cmp
dec
mov
mov
jno
mov
sub
les
jg
jno
pop
mov
popa
dec
jle
add
cmp
xchg
aaa
fcmove
xlat
push
jo
push
mov
lcall
in
sbb
shll
mov
movsl
stc
sub
in
in
dec
push
and
dec
enter
mov
and
fsubrl
insb
leave
or
shl
icebp
inc
add
sbb
xor
addb
mov
adc
xchg
loop
pop
adc
cwtl
mov
add
fwait
jle
dec
mov
stos
test
add
push
addr16
xor
inc
sbb
adcl
sub
loopne
pop
les
push
dec
lahf
dec
mov
cmp
inc
rorb
push
adc
pop
ret
pop
push
and
lahf
nopl
mov
mov
ja
dec
arpl
js
popa
sbb
inc
fistps
out
jo
int
pop
hlt
popa
jb
int
or
adc
ret
testb
movl
sbb
cs
and
inc
push
ljmp
mov
dec
ja
xor
enter
mov
add
mov
mov
mov
lret
popa
fnstcw
xchg
mov
adc
stos
xchg
xchg
and
xchg
mov
pop
mov
mov
repnz
inc
loop
mov
mov
js
aam
popf
push
adcl
mov
aaa
mov
xor
vfmsub132ss
mov
push
outsl
cmc
add
adc
iret
adc
mov
leave
in
push
adcl
sbb
repz
mov
stos
rolb
aas
push
das
inc
enter
sub
repnz
scas
pushf
clc
sub
and
mov
pop
lds
adc
outsb
popa
aas
in
fbstp
or
test
in
push
movsl
clc
stc
pop
loope
dec
mov
cmc
push
leave
int
cmc
and
cltd
stos
nop
cmp
imul
adc
inc
mov
jge
push
jne
lret
push
pop
rcr
adc
sub
leave
imul
mov
mov
das
outsl
mov
rol
pushl
testb
xchg
mov
xchg
outsl
loope
ja
hlt
mov
pop
pop
xor
fs
pop
xchg
je
out
ret
sbb
xlat
cmpsb
add
pop
sbb
ret
clc
addl
jnp
jl
sub
lock
mov
sub
gs
pop
ss
ret
add
mov
imul
ss
int3
push
pop
stc
ljmp
jmp
daa
shlb
pop
mov
mov
nop
or
push
idivl
inc
xchg
out
mov
xchg
in
and
push
imul
das
aad
cltd
mov
dec
cmp
arpl
dec
or
in
and
fadds
or
lock
iret
pusha
cwtl
xchg
inc
test
jg
xchg
test
ja
data16
jnp
mov
in
lods
mov
mov
pop
push
mov
mov
lret
xchg
jl
push
xor
cmpxchg8b
iret
cmp
cmp
cmp
mov
push
mov
stos
or
sti
mov
add
mov
loop
enter
mov
mov
stos
xor
fcomp
mov
lods
cld
cmp
or
mov
je
xchg
pop
out
int3
xchg
pop
or
test
scas
aad
mov
mov
mov
out
daa
dec
xor
lahf
popa
aad
adc
mov
lcall
mov
in
ss
or
inc
jno
mov
gs
or
dec
dec
shrl
incl
or
test
testl
mov
dec
hlt
lods
mov
inc
cwtl
and
mov
sbb
push
dec
adc
stc
pop
push
lods
icebp
shll
fiadds
js
and
xor
arpl
mov
sub
dec
enter
enter
notb
lea
add
pusha
mov
lahf
jno
scas
push
xchg
inc
mov
sbb
icebp
mov
popa
notb
xor
movsl
adc
pop
jp
sbbl
add
or
mov
cs
leave
shl
sbb
cwtl
and
notl
pop
mov
adcl
ds
mov
sbb
sti
mov
xorl
push
fisubl
mov
sub
pslld
lcall
dec
inc
and
ficompl
scas
add
das
fistps
mov
lcall
sub
mov
sbb
in
and
inc
scas
inc
testl
pop
shlb
cwtl
sbb
fs
push
in
mov
or
shl
out
aad
hlt
pop
into
fnstenv
xor
ljmp
adc
cmp
ret
sub
movsb
jae
out
stos
shlb
aad
lcall
int3
loopne
sbb
sub
jb
sub
push
aas
sub
ret
sbb
adc
aam
int3
inc
neg
mov
andl
or
sub
in
iret
icebp
push
cmp
mov
icebp
js
out
inc
cmp
test
scas
frstor
cmp
or
xor
dec
dec
adc
xchg
jns
addr16
inc
test
dec
inc
andb
mov
cmp
sbb
cmp
in
cmp
in
popf
or
scas
sbb
pop
sbbb
sahf
ss
sti
adc
dec
sti
ds
scas
in
sahf
mov
mov
mov
mov
imul
je
fstp
fistpl
dec
in
xchg
xchg
push
das
pushf
insb
jg
arpl
aas
jne,pt
sub
outsl
mov
popf
push
fiaddl
ret
fsubs
push
stos
dec
leave
repz
call
inc
pushf
dec
stos
inc
out
in
cvtpi2ps
mov
out
clc
mov
leave
fiaddl
fidivrl
cmp
mov
std
sub
mov
adc
cmp
pop
lods
fwait
inc
call
push
paddq
mov
adc
add
jg
gs
loope
shll
jmp
lahf
cmp
sarb
add
xor
call
mov
or
pop
arpl
test
add
mov
repz
test
arpl
cli
lds
in
mov
mov
add
mov
imul
out
xchg
sbb
loopne
test
ds
data16
mov
inc
imul
mov
add
mov
lods
cmp
insb
jnp
sub
adc
fcoml
shll
jmp
std
pusha
ret
das
cmp
pushf
nop
sbb
rclb
dec
fxch
jle
movsl
sub
mov
out
mov
dec
pop
pop
fmulp
push
lcall
lcall
xorb
fsubrl
sub
pop
pop
xchg
jge
insl
adc
mov
mov
call
popf
sub
mov
xchg
mov
lock
jle
sahf
xchg
es
mov
pop
aaa
test
jl
lea
inc
add
mul
jp
ljmp
mov
fs
sbb
aas
in
cmp
pop
jecxz
mov
shl
xchg
mov
sbb
int3
out
ljmp
lahf
loop
xor
push
jge
mov
pusha
jle
pop
mov
addr16
push
sbb
repz
jne
add
stc
lret
pop
push
subb
subb
and
sub
test
sub
pop
mov
idivb
add
cmp
test
jecxz
mov
xchg
je
cmp
and
gs
pop
sarl
or
cltd
pushf
aaa
stc
mov
lock
xchg
mov
push
cmp
shrb
imul
sarb
lods
rcrl
fisubs
pop
mov
or
cmpsb
cmp
push
cmp
stos
mov
aaa
je
movsb
add
lock
loopne
sbb
mov
inc
rcrl
jne
push
or
mov
and
cwtl
scas
and
push
div
dec
pop
aas
pop
add
sub
mov
stos
jbe
xor
int3
mov
mov
lcall
and
sbbb
dec
xlat
sbb
outsb
cmp
gs
push
pushf
leave
mov
gs
cmc
fldl
pusha
cltd
sub
mov
movsl
outsb
xchg
cs
std
and
or
pop
xchg
rol
pop
xchg
sub
aam
flds
ja
clc
sub
out
lods
inc
pop
movsl
rep
jecxz
lods
test
add
int
mov
ret
stc
and
testb
pop
mov
adc
decl
xlat
mov
aam
xchg
cmp
fcoms
jl
mov
repnz
je
jle
in
xor
dec
bound
xchg
xor
add
repz
repnz
jne
add
addb
xchg
lea
mov
rcr
or
movsl
adc
mov
gs
jecxz
dec
mov
sbb
dec
mov
imul
outsl
int3
cmc
mov
popa
movsl
call
idivl
jge
int3
in
jnp
add
mov
mov
test
repnz
mov
and
and
mov
je
and
shl
aas
pop
dec
inc
divl
fiaddl
into
jae
jmp
aas
ret
repnz
jo
sub
sub
add
sbb
call
gs
fldt
ret
subb
dec
xchg
out
push
lock
push
mov
adc
rcrl
mov
sub
push
or
xchg
push
rolb
pop
jmp
mov
push
jle
pop
in
inc
and
inc
mov
cmpl
aas
pop
pushf
and
sub
ss
ljmpw
xor
cmpsl
sbb
addr16
jo
adcb
repnz
out
push
popf
test
decb
sbb
mov
mov
fidivrl
add
xor
pop
fcoms
inc
pop
scas
verw
popf
cli
xlat
lea
sbb
push
inc
lods
push
shrb
lahf
in
lret
leave
loopne
popa
xor
pop
notb
scas
lret
rep
adc
dec
add
mov
lret
inc
call
xlat
xchg
xor
hlt
mov
inc
jecxz
idivl
push
xchg
inc
xchg
lods
jmp
add
xchg
loop
insb
movsl
ja
mov
iret
js
nop
xchg
xchg
and
lds
scas
fucomp
xor
fisttpll
mov
mov
shll
dec
mov
push
lea
scas
addl
stos
fnstcw
xchg
fidivrs
std
repz
lds
scas
sbb
in
rol
push
push
lea
loop
movsl
mov
sub
data16
lret
cltd
or
mov
mov
repnz
stc
jge
rcl
push
cmp
cmp
lea
sub
cmp
repz
adc
outsb
cmp
lret
aas
xchg
cmp
mov
jle
stos
xchg
cmpb
xchg
aaa
xor
adc
cmpsl
dec
and
test
popa
mov
pop
xchg
jmp
lods
shll
xlat
push
dec
fildl
xchg
and
cmc
imul
aam
inc
cmp
inc
movsl
jb
or
inc
test
mov
or
es
or
aaa
xor
ljmp
std
shll
loop
push
fbld
sti
popf
in
leave
dec
push
add
xchg
jno
xchg
and
or
add
xchg
repz
stos
inc
fmull
fstpl
push
arpl
mov
dec
mov
pusha
clc
cmp
clc
outsl
lahf
stos
arpl
add
mov
jp
jecxz
cli
into
int
adc
imul
arpl
nop
cmc
hlt
sti
loop
movsl
add
mov
pushf
mov
pop
in
in
lret
test
inc
add
scas
enter
pop
cmp
inc
les
jg
dec
outsl
pop
jb
push
or
xchg
fs
hlt
sbb
mul
cli
push
sub
sbb
cmp
outsb
or
fucom
jne
fidivl
rorb
and
sub
inc
outsb
inc
mov
cs
std
into
roll
nop
test
cli
jmp
xchg
imul
cmp
mov
adc
and
hlt
mov
and
lcall
add
sbb
pop
pusha
ljmp
lcall
js
jns
or
stos
push
fcomip
push
arpl
dec
andb
adc
mov
pusha
or
bnd
ret
out
jl
and
add
lods
push
pop
xchg
popf
and
andl
out
rorl
adc
and
cli
xchg
ffree
xor
out
ret
add
pop
push
adc
int
pop
cmpsb
cmp
aaa
jbe
cwtl
rol
out
adc
loop
popl
aas
mov
test
loope
xchg
push
aam
mov
ficomps
pusha
mov
mov
sahf
pusha
push
movsl
imul
dec
pop
mov
xchg
xchg
cmc
movsb
xchg
fadd
seto
jl
test
nop
iret
mov
cmp
pop
jne
pop
test
clc
std
es
sbb
rcrl
pushf
sub
mov
ljmp
into
mov
push
sbb
xchg
adc
cmc
jmp
cs
xor
mov
mov
mov
pop
test
cmp
xchg
divb
dec
lea
cmpsb
scas
mov
sahf
frstpm(287
out
popf
pop
inc
xor
in
mov
iret
jo
push
dec
cmp
adc
sar
sarl
xor
pop
pop
pop
adc
push
add
scas
loopne
pop
in
xchg
out
mov
sahf
adc
pusha
dec
sbb
push
cltd
sarl
push
lods
fadds
stc
mov
adc
inc
cltd
mov
daa
repz
pop
push
or
jo
fcmovnu
push
jbe
xlat
dec
pop
loopne
outsl
cmp
pop
fsubrs
pushf
jae
mov
cld
jecxz
lret
jno
dec
push
sti
pop
xchg
dec
popl
daa
and
cmpsb
pop
dec
mov
insl
mov
mov
shll
mov
repz
lret
sbb
cltd
cwtl
xchg
nop
inc
xor
push
rcr
mov
imul
jae
adc
arpl
cli
movsb
mov
jl
enter
push
or
mov
movsl
xchg
and
and
sub
jle
imul
xor
test
push
test
cwtl
popa
xlat
out
insb
or
insb
mov
pop
sub
call
sbb
xlat
lcall
mov
shlb
pop
mov
jns
andl
rcr
arpl
mov
aaa
jge
mov
jne
aam
xor
pop
mov
aaa
xor
ss
dec
sub
mov
mov
je
repz
nop
jno
cmp
sarl
cli
das
jle
xchg
inc
data16
sub
mov
cmp
ret
cmp
nop
in
popf
mov
pop
scas
test
je
jg
sahf
adc
into
in
rorb
out
sub
inc
aas
bound
or
sbb
mov
jmp
cs
jl
mov
jmp
loopne
out
push
pop
loopne
stos
lods
jge
sub
push
jbe
les
xor
push
and
movsb
sub
inc
push
fs
mov
test
xchg
jl
cwtl
push
inc
jns
mov
lret
jae
shr
push
inc
mov
shll
into
repnz
push
ss
cmpsb
dec
mov
psubsb
cmp
cs
fdivrl
shlb
addb
push
and
imul
testl
inc
leave
shll
loopne
in
divb
inc
mov
xor
or
lods
pop
mov
mov
in
call
pusha
lcall
cmpl
or
add
jg
dec
xor
inc
call
imul
aad
gs
adc
cmpsl
ja
cmp
sbb
jecxz
movsl
insb
lahf
in
xor
mov
daa
arpl
add
iret
push
movsb
mov
cli
pop
in
mov
mov
jl
aad
push
jno
divb
mov
dec
mov
cld
shrb
push
gs
inc
or
js
popf
push
inc
mov
mov
pop
out
fdiv
sub
lods
lahf
sahf
loope
shl
std
jne
adc
call
xor
mov
outsb
sub
incl
xor
ficompl
pop
fisttps
out
add
repnz
jbe
scas
lretw
movsb
bound
call
or
outsl
leave
xchg
aam
mov
sti
fbstp
mov
mov
mov
mov
adc
jae
fiadds
in
jp
test
cwtl
inc
shr
int3
pushf
xor
push
lds
and
ret
sub
lock
jmp
cmc
in
cmp
adc
ds
fidivs
mov
out
ja
addr16
and
push
call
out
pop
std
inc
xor
sub
cld
ret
jecxz
xchg
cwtl
ret
iret
and
xchg
pop
mov
movsl
bound
call
pop
inc
aaa
push
sub
mov
xchg
popf
pop
jns
xchg
adc
les
aaa
adc
dec
scas
stc
push
int
mov
mov
dec
pop
stos
shrl
push
rolb
out
mov
jecxz
dec
mov
std
scas
addr16
outsb
icebp
fdivrs
lds
lock
push
inc
lock
out
mov
xchg
pop
xchg
sbb
push
mov
sbb
testl
fiaddl
or
pop
cli
or
clc
dec
stos
mov
fwait
movsl
add
jne
pop
mov
out
std
dec
and
icebp
mov
scas
or
or
pop
inc
shll
mov
xor
xor
sub
in
pop
cmpsl
xor
fsts
pop
fldt
jmp
hlt
lret
pop
cmp
fcmovb
sar
jnp
sbb
sub
fstpt
ret
push
sbb
ret
xchg
imul
cmp
dec
xchg
sbb
jae
inc
xchg
cmpb
roll
test
mov
nop
jae
in
add
fldcw
push
dec
sub
xchg
es
dec
dec
rclb
jo
sbbl
xor
cmp
xor
adc
gs
je
fwait
sbb
sub
sub
cmp
pop
test
add
fucompp
mov
sbb
adc
fidivl
mulb
mov
repz
add
aad
adc
push
push
add
int3
cld
aas
je
jae
dec
stos
sub
jg
and
mov
jne
lret
and
sub
pop
scas
adc
jne
pop
in
xor
push
les
pop
add
push
cmpsl
ret
out
or
jecxz
sbb
in
jmp
xchg
xchg
mov
rcl
and
xorl
roll
jne
push
decl
push
iret
sbb
push
addl
xlat
or
and
jns
aad
mov
dec
orl
xchg
jnp
fcoms
rep
out
cmp
xlat
cltd
dec
js
insl
cmp
push
xchg
cli
negb
lahf
add
rolb
shlb
imul
icebp
mov
or
cmpsb
les
loope
lods
add
hlt
hlt
call
out
pop
mov
addr16
jnp
clc
mov
jno
mov
push
fidivs
scas
dec
or
into
stc
mov
dec
ds
stos
mov
decb
mov
arpl
es
hlt
or
mov
out
cmp
sub
or
push
inc
xor
shll
popf
and
cmpsl
jge
jmp
int3
cld
pop
push
lahf
add
push
jbe
sti
mov
xor
in
push
push
ret
xor
mov
jmp
lods
sub
dec
repnz
dec
sbb
mov
testl
mov
sub
mov
dec
add
jle
fists
adc
add
sub
push
sti
jmp
push
or
neg
dec
pop
adc
xchg
mov
mov
ret
jp
popa
xchg
sahf
in
and
cltd
in
in
addb
push
int
cmp
cmc
jne
or
negl
xchg
xor
mov
cs
push
push
cltd
adc
cwtl
push
xchg
jb
nop
sub
or
push
ret
cmc
je
dec
fmul
test
iret
movsl
ficompl
dec
and
xor
push
sub
or
xor
inc
push
insl
sub
pop
jbe,pt
loop
mov
adc
cli
mov
mov
jmp
xchg
sub
push
dec
cmc
mov
je
push
push
lods
pop
lcall
int3
bound
xchg
nop
sbb
add
mov
loop
icebp
insb
daa
movsl
repz
mov
sub
xor
jne
xchg
pop
sahf
fisubrl
repz
inc
cmp
jae
arpl
out
push
cmc
mov
or
lods
jnp
pop
pusha
xchg
sbb
push
jns
lea
out
test
imul
push
fs
mov
das
or
idiv
cltd
pop
xchg
lret
add
mov
jle
in
hlt
add
inc
and
push
stos
add
outsl
in
dec
add
mov
insl
aad
cwtl
and
cmp
mov
aad
clc
test
pusha
and
sbb
cmp
fdivl
and
loop
fdivs
sub
in
push
in
cmc
jae
jle
loop
rol
mov
mov
clc
push
rclb
pop
mov
and
xchg
popa
cmp
jns
popf
push
sbb
inc
hlt
cmp
insl
and
mov
push
adc
test
fsubrs
push
cmp
hlt
fs
jl
xor
outsl
sbb
sahf
mov
stos
pop
inc
mov
inc
scas
fwait
adc
pop
pop
ljmp
and
ror
xor
popa
icebp
inc
add
js
xor
cmp
setge
shrb
inc
or
jb
cs
jbe
jp
fidivrl
mov
test
enter
pop
cld
ljmp
sti
xor
out
sahf
or
sub
fdivr
xor
stos
ret
insb
xor
fwait
jg
xchg
push
lahf
imul
addr16
mov
xor
cli
loope
ss
arpl
idivl
push
pusha
movsl
in
and
jmp
sbb
movsl
in
adc
add
notb
xchg
mov
dec
mov
xor
je
inc
push
xchg
pop
sbb
icebp
push
xlat
clc
roll
mov
sub
cmp
cwtl
insb
mov
push
jbe
sbb
mov
xor
adc
sbb
pusha
push
mov
call
pushl
cmc
fisttpll
cwtl
xchg
inc
xchg
into
push
jl
and
leave
and
xor
cmp
fiadds
dec
into
aam
ret
push
lret
ds
adc
scas
neg
mov
push
pop
mov
push
in
lret
adc
inc
notb
sti
pusha
mov
add
daa
cltd
inc
scas
data16
sti
jg
pop
adc
and
sbb
mov
or
in
xchg
inc
push
mov
jae
adc
movsl
jbe
clc
das
jecxz
insb
sub
out
pusha
pushf
xchg
mov
cmp
out
in
sbb
cmpsb
stc
out
lods
sub
fistpll
fucomp
mov
mov
gs
lahf
ficoml
pop
push
mov
insl
scas
cmp
test
xor
push
sub
cwtl
pop
test
cmp
not
adc
ret
mov
lock
popa
call
xor
les
jmp
pop
mov
mov
inc
inc
addr16
mov
add
xor
sub
sub
mov
in
mov
ss
cmp
cltd
push
scas
jge
ret
pop
sbb
mov
popw
push
add
cmp
aas
test
je
outsb
push
aas
andl
jmp
ljmp
lock
fstps
sbb
int3
dec
and
add
xchg
jnp
cmp
scas
mov
rorb
push
movsl
ss
mov
mov
cmp
clc
lods
test
pop
bound
adc
dec
rcrl
shr
nop
into
pop
data16
dec
jle
inc
fidivrs
jp
ret
cmpsb
adc
cli
rorb
lods
fisttpl
jg
push
adc
arpl
adc
cmp
ljmp
arpl
sti
enter
pop
pusha
mov
xor
adc
dec
adc
mov
dec
xchg
insl
dec
test
pop
in
orb
pop
or
dec
sbb
negl
loop
fsubrl
sbb
sub
dec
adc
jp
js
push
aam
sub
push
push
jno
ljmp
mov
or
push
data16
xchg
adc
stos
sub
xor
nop
sub
push
or
adc
jnp
in
adc
daa
xlat
cmp
hlt
out
xchg
mov
cmpsl
dec
or
jge
shr
ret
dec
sub
jl
lods
sbb
or
insb
lock
or
xor
pop
pop
rcl
adc
test
dec
mov
or
push
adc
insl
mov
je
cmp
aas
outsl
sub
mov
out
out
scas
xchg
pop
aas
rdmsr
cwtl
je
lret
idivl
enter
test
dec
je
inc
sub
aad
xor
push
pop
or
jp
inc
push
mov
xchg
bound
sub
popf
adc
adc
pop
fldcw
daa
test
sar
jbe
repz
sub
dec
cmp
inc
and
fdiv
std
jg
cltd
adc
stos
adc
fwait
xorl
mov
repz
xor
imul
fldt
stc
or
xchg
pop
xorb
insb
shll
xor
ljmp
adc
mov
xchg
loop
andl
adc
push
ret
mov
insl
xchg
out
int
mov
aaa
hlt
adc
cwtl
xchg
int3
aas
cmp
mov
xor
pop
xor
xchg
pusha
push
xor
and
xchg
xchg
add
mov
lret
mov
aas
jnp
cmp
mov
subl
push
pushf
xor
cmc
aas
lods
clc
push
add
insl
rcll
ficoml
mov
outsb
xchg
sub
or
fisubl
jnp
testl
or
add
push
ss
inc
test
repz
sahf
dec
mov
dec
pop
mov
cltd
pop
xchg
mov
push
xchg
popf
ljmp
mov
xchg
dec
push
lret
iret
pop
cmp
fisttpl
bound
lods
sbb
add
scas
iret
into
dec
mov
and
jae
addb
or
xchg
sbb
and
dec
cld
push
push
sub
leave
inc
push
stc
adc
int3
icebp
mov
xor
enter
pop
jae
push
cwtl
addr16
mov
jae
addr16
ja
sbb
hlt
out
jb
int
adc
cmpl
cmp
ret
das
arpl
and
stos
push
mov
push
adc
sbb
andb
clc
pop
xor
add
dec
fdivl
movsl
inc
stc
jnp
sub
in
dec
insb
xchg
sar
sub
xor
out
mov
mov
inc
adc
xchg
mov
adc
sbb
xor
subl
pop
dec
stos
in
clc
lds
cmc
xchg
cmp
mov
fcompl
inc
mov
fmuls
jns
or
jbe
insl
orb
mov
fildl
jge
rclb
pop
dec
fwait
imul
inc
aad
scas
ja
test
shrl
add
xchg
adc
nop
pop
xor
cmp
loope
aas
popa
cmpsl
pop
or
cmpsb
xchg
ds
mov
aad
les
arpl
aas
push
jno
scas
xchg
push
test
mov
movsb
xor
aam
punpckldq
mov
scas
push
cmp
or
add
pop
test
pop
pop
push
mov
adc
or
lret
dec
adc
loopne
insb
push
mov
aaa
iret
adc
inc
xor
je
imul
mov
movsl
repz
and
ss
cmc
inc
inc
mov
mov
dec
rcll
jb
jb
cmp
enter
daa
jge
pop
add
test
fsubrs
pop
and
add
mov
movsb
ds
adc
and
push
pop
mov
jno
sarl
ret
add
push
punpckhdq
cmp
adc
push
hlt
push
and
jg
jnp
mov
push
movsb
jle
sub
aad
lahf
movsb
dec
call
leave
stc
sti
int
jmp
pop
test
or
pusha
inc
lcall
faddp
cmpsb
push
push
cmp
subb
push
mov
mov
add
mov
in
data16
add
add
aaa
xor
pop
adc
pop
xor
mov
enter
lock
mov
divb
add
jmp
js
icebp
sub
scas
rcll
xchg
mov
dec
jo
or
push
dec
adc
push
les
call
mov
js
dec
je
add
addb
sti
fcmove
fistpl
inc
pusha
pop
xchg
fnstsw
stos
adc
mov
or
push
out
adc
fmulp
pop
pushf
sbb
sbb
in
mov
fdivrl
or
and
jge
iret
add
cmpsb
mov
mov
addb
sub
pop
jmp
lods
movsl
jo
mov
adc
pop
aas
andl
jge
paddsb
mov
or
and
scas
popf
ror
or
inc
jecxz
push
in
dec
ja
push
push
mov
rcrb
and
ret
dec
psubsw
xor
inc
sub
out
movsb
aaa
bound
pop
ret
jne
mov
stos
sbb
mov
mov
sub
enter
or
push
mov
cmp
inc
inc
js
pusha
lock
fs
or
push
mov
inc
push
and
cmp
jl
ss
xlat
in
xchg
xor
jno
je
push
adc
and
sub
popf
dec
adc
jle
orl
inc
addr16
fwait
and
insb
and
rcr
fxch
xchg
pop
test
push
mov
mov
roll
sub
push
sub
cmp
in
dec
dec
popa
lds
push
cmp
dec
mov
imulb
fidivrl
push
mov
fwait
call
mov
mov
in
into
sub
and
push
ds
dec
jns
loopne
or
push
cmp
mov
xchg
gs
loop
aas
lods
std
pop
div
in
or
adc
cli
cmpsb
lods
movsl
rcr
add
inc
and
xor
dec
test
mov
mov
in
test
or
popa
inc
xchg
std
scas
in
push
scas
pcmpgtw
cmp
fistpl
dec
addl
xor
push
xchg
xor
ret
mov
and
aam
adc
xor
mov
pop
daa
outsb
je
aad
mov
xchg
jnp
xchg
cmp
cmp
iret
cltd
adc
cmp
mov
sbb
lock
xchg
push
pop
sarl
and
add
sbb
mov
jno
mov
shlb
incb
pop
push
test
cmpsb
cld
push
push
mov
popf
mov
adc
enter
cmp
pop
inc
xchg
xchg
popf
push
cmp
shlb
push
out
sbb
out
shll
mov
xor
mov
pop
sbb
dec
cmp
test
add
jbe
mov
sub
into
int
ljmp
inc
jge
bound
push
fcomps
pop
sub
sbb
fldenv
cmc
stc
adc
jmp
pop
mov
std
mov
je
or
jmp
stc
sahf
sar
mov
jo
mov
leave
cmp
pop
scas
sub
shrl
inc
icebp
sbb
andb
ss
push
xchg
pop
dec
sbb
inc
sub
push
ret
inc
jge
lret
cmp
or
mov
cmp
inc
in
movsb
sti
push
sahf
popf
icebp
and
mov
insl
mov
addb
sub
fsts
and
cmp
or
mov
sub
ja
sub
insl
aad
dec
insl
ds
dec
mov
lret
jg
lcall
dec
das
ror
out
mov
pop
pushf
and
pop
inc
lret
lock
adc
rcrl
mov
pop
xlat
dec
ds
fadd
sbb
jg
in
das
jmp
divps
jb,pt
xlat
add
ret
movsl
je
jns
xlat
pop
test
scas
lret
xor
lods
sub
xor
and
and
pop
pop
repz
mov
aas
leave
repz
outsb
dec
iret
shlb
lods
fsts
andl
jmp
data16
cmp
cmova
sub
les
add
in
mov
les
test
and
xchg
inc
mov
cmpsl
fimuls
test
es
notl
xchg
iret
lods
cmc
add
cmc
jl
in
sub
cs
sbb
xchg
mov
test
mov
popa
negb
out
or
in
inc
shr
cmpsl
xchg
xor
ljmp
in
mov
adc
add
repz
sbb
add
loopne
pop
pop
dec
clc
cld
fincstp
or
ret
daa
ret
leave
aad
outsb
push
js
fiaddl
clc
cmp
pop
push
pop
loopne
sub
test
jg
mov
test
jecxz
sub
insl
gs
xchg
fnsave
mov
loopne
add
mov
xchg
jle
inc
in
in
inc
dec
cmp
cmp
pop
insb
inc
mov
scas
stos
push
int
mov
out
bound
inc
mov
fisubs
xor
sub
lahf
pop
std
mov
sub
popa
nop
inc
push
das
add
inc
std
mov
dec
adc
insl
mov
push
mov
mov
push
lock
jg
lea
test
int3
jbe
and
xorl
out
and
pop
shlb
pop
dec
popa
add
insb
stos
jb
negl
pop
adc
cmp
pop
xor
jne
ret
rorl
addl
out
out
es
dec
pusha
or
stc
mov
popf
cmp
stos
jo
gs
iret
pop
xchg
jmp
in
cld
mov
movb
lea
subb
adc
jb
lds
lea
pop
sub
sub
hlt
dec
out
pop
mov
in
scas
ss
das
mov
pop
aas
loop
jae
js
or
push
mov
cmp
ret
outsl
cld
test
and
mov
cwtl
xor
pop
or
inc
inc
addr16
xchg
push
in
aaa
dec
sbb
jo
fnstenv
aaa
jae
ds
fcomps
add
push
jle,pt
xchg
push
mov
mov
shll
clc
xlat
mov
js
cmp
and
rol
cmp
cwtl
cmp
and
xor
jge
ret
jb
outsb
pop
cmp
push
mov
jecxz
sti
cmp
lods
jnp
test
pop
mov
fstps
fnsave
js
mov
out
pop
cmp
js
cmp
incl
adc
dec
jle,pn
xchg
test
scas
lods
mov
cmpsl
pop
dec
pop
sbb
or
popa
fdivr
stos
and
sarb
in
mov
dec
adc
xor
dec
push
lods
stos
or
imul
mov
adc
jo
pop
orl
jo
dec
insl
lea
adc
nop
xchg
sti
add
add
pop
inc
dec
adc
out
jmp
dec
xchg
movsb
xor
jmp
xchg
jp
inc
adc
pop
adc
lods
fiaddl
sub
sarb
outsl
stos
inc
push
push
xor
xchg
xor
stc
pop
sbb
pop
sub
decb
lcall
lret
mov
ljmp
cmpsb
add
xor
adc
mov
jmp
and
or
lret
stos
inc
xchg
dec
or
sbb
test
mov
shl
mov
xchg
dec
outsb
jle
repz
cltd
or
or
sbb
mov
sbb
outsl
lret
cmpsb
mov
push
xor
lret
insl
ljmp
adcb
xor
cli
ja
cmp
add
cmpsl
and
xchg
xchg
jne,pt
sbb
dec
out
movsb
jg
jg,pt
out
mov
cwtl
cmp
les
lret
fldlg2
popf
cmp
mov
sub
pushf
addr16
push
flds
jl
mov
xchg
sahf
lret
jmp
les
xor
outsl
mov
lods
adc
addr16
test
fisttpll
lahf
inc
leave
arpl
les
in
rcrl
cltd
aas
xor
movl
std
sub
jb
adc
mov
push
adc
dec
cmpsl
dec
mov
fsts
ret
push
out
and
icebp
lods
push
mov
add
mov
test
xlat
nop
popf
out
pop
mov
jnp
std
cmp
xchg
push
fmull
outsl
lds
mov
into
pop
cwtl
pop
push
cmp
pop
mov
pop
fwait
js
mov
hlt
mov
stc
popf
push
outsb
clc
sbb
xlat
mov
sub
roll
in
je
fsubrs
test
xchg
scas
sub
xchg
jnp
pop
fsqrt
pop
push
jp
or
xchg
int
jns
shlb
sbb
mov
jl
sub
into
sub
inc
dec
jg
and
dec
jmp
push
cmp
out
mov
inc
lds
push
test
dec
loope
xorb
hlt
cmp
xchg
popa
add
fnsave
xor
dec
les
jmp
lock
pop
pop
mov
and
jg
sahf
mov
enter
lds
andps
loopne
jecxz
or
adc
out
int3
icebp
ss
test
jge
shll
call
fcomps
adc
hlt
lret
and
cmp
insl
cmp
daa
jg
int3
jl
push
adc
ret
subl
adc
popf
cmpsl
push
popa
out
push
fstpt
in
mov
mov
push
imul
outsb
ds
test
stos
or
cmp
pop
mov
in
shrl
push
repnz
and
push
sbb
inc
jne
mov
lods
rcl
scas
daa
mov
pop
es
cmpb
or
mov
loopne
cmp
mov
or
out
hlt
adc
test
mov
xchg
mov
rcl
pop
imul
jl
jae
mov
fdivrp
rcll
jb
cmpsl
pop
adc
cmpsl
mov
jns
pushf
and
pop
xchg
inc
sub
out
and
push
inc
inc
mov
lods
addr16
test
jecxz
fistps
pushl
push
addr16
dec
sti
das
in
pop
sbb
sub
shl
pop
pop
mov
cmp
pop
stos
loopne
and
xchg
decb
push
sbb
lret
out
inc
fsubp
push
xor
inc
pop
fyl2xp1
sarl
dec
mov
loope
pop
adc
xor
mov
push
movsb
sti
mov
scas
ds
outsl
sub
outsl
stos
push
hlt
pop
pop
test
mov
and
jb
xor
aad
fneni(8087
stos
in
pop
sbbl
cmp
stos
push
sub
dec
lret
or
jg
mov
stos
and
or
or
and
sub
xchg
lods
loope
push
lea
pop
xchg
adc
pop
inc
push
imul
add
lret
xor
dec
test
xchg
push
in
shrb
aaa
or
in
js
jecxz
xchg
bound
inc
and
rorb
cmpsl
outsb
clc
cmc
dec
stos
mov
push
xchg
pop
or
xchg
xchg
xor
cmpsl
das
movsl
mov
sub
int
gs
cmp
sahf
sahf
in
pop
shr
nop
cmpsl
push
cmpsb
and
popa
mov
fisttpll
adc
mov
test
repnz
cmpsl
aas
test
repz
mov
sub
cs
loop
mov
leave
ja
pop
mov
jno
jecxz
xor
add
cmc
and
xor
orb
pop
sahf
jae
xchg
insb
mov
push
fisttpl
jmp
cmpsb
test
push
jno
jmp
dec
pop
mov
lds
insb
cwtl
or
ljmp
xlat
int
icebp
xor
jb
std
xchg
pop
mov
add
pop
adc
and
lock
push
leave
repnz
inc
or
mov
and
cmp
cld
sbb
push
in
mov
test
fists
dec
rol
sbb
inc
or
int
dec
lcall
lret
jne
mov
cmpsl
mov
pushf
xor
sahf
mov
jmp
mov
ja
ja
and
je
mov
hlt
clc
sub
movsb
jl
xchg
add
sbb
cmp
push
inc
iret
clc
subb
mov
mov
push
and
mov
cwtl
fstp
stos
mov
lods
dec
jp
cli
aaa
cmp
xchg
inc
stos
mov
push
andb
popa
mov
add
push
nop
ss
fwait
jge
mov
shrb
lea
and
dec
mov
adc
fsubp
dec
xchg
scas
icebp
mov
mov
mov
sbb
pop
or
repnz
das
pop
xor
jl
in
mov
jb
inc
in
mov
push
ret
lods
in
pop
out
addr16
in
sbb
mov
push
adc
cli
subl
cmp
pusha
cmp
divb
sub
lods
int
jge
lock
inc
lea
inc
sbb
pushf
rclb
ret
cli
jge
xor
add
add
cmpsl
inc
and
or
sbbl
lea
lahf
add
adc
inc
or
push
outsl
add
xchg
xor
pop
add
outsb
cmp
cmc
pop
push
mov
aam
gs
jge
mov
popf
mov
repnz
mov
add
push
push
mov
mov
lea
in
andb
mov
cmp
or
jp
mov
push
cmp
jg
jmp
lret
std
mov
push
mov
loopne
or
imul
mov
cli
outsb
sbb
popf
mov
mov
and
sahf
pop
fistps
sub
pop
cltd
aad
mov
shr
sbb
push
and
adc
jp
flds
pop
dec
test
cltd
js
fsubr
into
aaa
pop
or
popf
mov
arpl
movsb
enter
lods
addr16
xchg
push
pop
lcall
push
aas
push
nop
outsb
fmull
mov
es
psrad
stos
jns
mov
ljmp
out
out
pushf
jbe
push
fucom
lods
sbb
or
push
flds
jle
js
icebp
repnz
movsb
mov
test
or
cmc
jns
stos
inc
jne
test
or
fs
mov
clc
jmp
out
push
push
pop
mov
adc
and
fsubrl
mov
insl
add
or
or
cmp
dec
or
pop
inc
adc
push
out
lcall
lds
movsl
cli
stc
mov
mov
mov
aas
dec
in
nop
sti
dec
xrstor
js
mov
xor
mov
mov
rorl
mov
dec
adc
xchg
popa
mov
mov
sbb
in
adc
stos
xorb
mov
iret
and
in
jl
mov
mov
std
or
or
das
hlt
sub
bound
push
jg
aam
add
sub
shll
push
loop
dec
inc
pop
icebp
mov
outsb
repnz
sub
outsl
loope
mov
das
cmpsl
or
pop
pop
sub
rclb
popf
orb
sbb
data16
inc
mov
shlb
or
lret
add
les
jmp
clc
jmp
bound
xchg
sub
jecxz
fcomps
sub
ljmp
inc
imull
dec
stos
sbb
in
cmovns
push
in
daa
sub
add
mov
xchg
lea
leave
imul
cmpsl
dec
enter
movsb
insb
jno,pt
stos
inc
push
nop
scas
add
lahf
sbb
es
add
imul
inc
fimull
push
rorb
xor
rorb
dec
iret
inc
push
jbe
ss
sbb
mov
and
dec
outsl
int
mov
clc
dec
inc
ja
mov
add
adc
and
std
sbb
pop
sbb
lea
frstor
push
cmc
sbb
lea
xchg
loopne
inc
dec
stos
fisttps
inc
xchg
or
push
loopne
jg,pn
negl
ret
je
mov
addr16
dec
je
and
imul
cwtl
insb
add
add
testl
je
pop
lea
jl
insb
loopne
es
insl
jmp
movsl
sbb
data16
arpl
cmpl
cmc
out
inc
hlt
ds
jno
sub
mov
shrl
ds
cmpsl
pop
adc
shll
xchg
popf
pushf
jp
hlt
inc
arpl
arpl
out
cli
push
xor
mov
mov
mov
shll
rcrl
dec
cmp
and
mov
fisubrs
xchg
inc
xchg
movsl
xor
loop
add
jns
sbb
sbb
mov
js
iret
std
lret
int3
pushf
imul
pop
cld
shrb
adc
mov
scas
dec
shl
stos
sbb
hlt
adc
mov
std
adc
jmp
pop
jmp
fadd
and
mov
aas
mov
out
in
push
pop
mov
ret
enter
movsl
inc
jge
test
ja
jge
cmp
inc
aam
inc
arpl
pop
pop
push
gs
xchg
jmp
sarl
add
cltd
out
lahf
lds
mov
lods
push
cmc
outsb
test
xchg
xor
addr16
mov
in
jp
jbe
loope
mov
int3
sub
and
xchg
push
ja
sbb
or
sbb
inc
jae
popa
push
addr16
add
dec
cmp
adc
or
xchg
jb
cmpsl
dec
pop
dec
or
adc
dec
jno
jle
and
popa
popa
push
dec
push
idivb
movsl
mov
rcll
int3
fmulp
xchg
mov
out
incl
repz
mov
cmp
iret
pop
xor
cmc
push
add
int
ffree
push
push
mov
out
scas
ja
jp
cmp
sub
aad
lock
in
cs
add
lock
xor
jmp
mov
mov
frstpm(287
test
jbe
and
clc
inc
push
jno
iret
ret
mov
mov
ret
and
gs
xchg
inc
movsl
loopne
xor
lods
push
cmp
cmc
aaa
sbb
sti
sub
pop
je
jecxz
sbb
sbb
sub
mov
cmpl
das
clc
ret
pop
adc
add
mov
ljmp
testl
push
xlat
cmp
outsl
cmpsl
mov
add
sbb
dec
jne
bound
jno
pop
xchg
scas
idivl
mov
es
inc
push
rorl
sbb
xchg
loop
adc
nop
inc
fwait
dec
scas
mov
cwtl
fstl
bound
div
adc
shlb
dec
dec
nop
add
cltd
fisttpl
xchg
imul
xorl
push
mov
notb
repz
rcrl
scas
test
mov
jp
push
movsl
fs
or
lods
mov
push
mov
cld
mov
fildll
je
jo
adc
jle
andb
jecxz
and
call
clc
or
xchg
test
scas
mov
je
ds
sub
int3
cmpsb
ljmp
loopne
sbb
sub
pop
and
dec
cwtl
xor
fildl
inc
aam
aas
pop
push
add
je
addl
adc
test
imul
xor
sub
sarl
adc
sub
pop
les
inc
pop
bound
movsl
inc
shlb
and
aam
mov
mov
rorb
xor
pop
ficoms
or
stos
loope
aaa
mov
data16
les
inc
push
js
and
jle
pop
cmpsl
or
mov
pop
dec
pop
jnp
pusha
clc
fstl
aad
daa
leave
mov
shll
add
xchg
push
mov
xchg
add
outsb
push
sbb
fcoms
and
mov
mov
shlb
sub
repnz
adc
in
hlt
fidivrs
push
movsb
pop
les
adc
mov
aaa
pop
inc
arpl
popf
jg
ja
cltd
dec
add
adc
inc
cmp
out
loope
xchg
mov
push
movsl
and
sbb
aam
jbe
and
mov
xchg
mov
das
pop
cmp
cltd
or
xlat
inc
jge
outsl
out
rclb
push
adc
das
dec
jo
dec
repz
out
push
add
xorl
mov
test
div
push
adc
inc
aaa
gs
xor
sbb
pushf
scas
pop
lock
dec
pusha
fs
call
ja
mov
ss
xchg
push
mov
mov
push
fwait
les
repz
dec
lret
adc
in
add
in
fs
sbb
fnclex
movsb
mov
mov
push
clc
outsl
mov
std
push
mov
jnp
mov
pop
in
out
mov
enter
sbb
data16
imul
bound
into
pop
shrb
or
arpl
pop
xor
fldz
adcl
xchg
aas
into
jge
push
pop
jne
sub
std
xor
icebp
fsts
in
inc
testl
mov
pop
out
aaa
or
and
cmp
xor
sub
jmp
lahf
jo
sti
adc
sub
cmp
jmp
mov
iret
xor
jno
jmp
std
or
lods
pop
not
rcll
and
repnz
pop
jmp
sbb
adc
in
lret
shll
jl
push
movb
arpl
outsl
cmp
sbb
fisttpll
pop
sub
shrl
aam
jne
jnp
lcall
out
push
sarl
adc
iret
ret
mov
enter
sti
arpl
test
leave
or
in
push
inc
push
xor
jbe
dec
or
and
sarb
inc
jmp
and
insl
adc
pushl
mov
push
add
outsl
add
imul
add
add
push
pusha
repnz
dec
sbb
push
pop
mov
insb
or
fadds
inc
addr16
adc
cmp
jmp
push
xchg
iret
push
inc
inc
dec
mov
xchg
pop
mov
and
lahf
mov
jne
xchg
sbb
fisubrl
and
mov
xor
cwtl
mov
add
push
adc
cmpsl
mov
inc
subb
xchg
test
stos
hlt
nop
shl
notb
and
mov
into
dec
sub
dec
fsubl
shl
jbe
cmp
fbld
xor
das
mov
xlat
inc
inc
or
mov
jl
or
and
or
cmc
lods
loopne
xchg
cwtl
rorb
je
pop
gs
jecxz
sbb
daa
inc
cmpl
es
jmp
fcoms
pop
mov
jge,pt
mov
adc
jle
fldt
jl
cmp
cmpsl
mov
push
push
out
jl
lea
pop
pop
cwtl
inc
aam
mov
test
lods
cs
lcall
lret
inc
decl
sbb
inc
sbb
sbb
sub
clc
pop
mov
dec
mov
scas
adc
js
inc
test
add
cmp
call
dec
push
xor
nop
dec
mov
in
push
scas
or
push
fnsave
int
mov
loopne
pop
push
cmc
xchg
mov
push
popf
inc
dec
aaa
mov
lods
aas
movsb
xchg
sub
inc
outsb
in
dec
jb
rorl
sub
dec
or
add
cmp
dec
sub
js
movsb
mov
fdivl
xor
ds
cld
jmp
jns
cmp
xchg
ss
add
jecxz
dec
mov
test
aaa
mov
cwtl
test
or
ss
stc
in
push
rclb
lods
aaa
cmp
incl
inc
push
decl
incl
sub
or
out
push
aas
or
and
dec
dec
or
loopne
test
stos
fcom
adc
imul
hlt
adcl
loop
outsl
jno
rolb
jecxz
ss
icebp
push
mul
jne
mov
cmp
sarb
stos
mov
mov
clts
aad
adc
or
addr16
sbb
in
pop
loop
rol
xor
out
mov
adc
std
call
inc
in
js
xor
ds
mov
push
dec
sbb
sub
add
xor
mov
pop
icebp
sub
mov
test
insl
repnz
inc
mov
push
xchg
pop
rcrb
mov
sub
inc
adc
inc
test
adc
push
je
mov
push
sub
fs
or
fdivr
cmp
xchg
sbb
xorl
pop
ljmp
sub
sub
xor
adc
push
pop
scas
jb
clc
xchg
jne
sub
mov
in
pop
inc
idivb
std
cmc
fdivs
in
sub
xchg
popa
mov
sbb
pop
adc
adc
xchg
jmp
mov
push
adc
pop
inc
scas
das
push
adc
pop
sub
scas
addr16
sub
subl
mov
aaa
fcmovnbe
sbb
push
jbe
mov
jge
in
fdivl
mov
jb
sub
rorb
scas
ljmp
or
sbb
pushf
in
pop
xor
pushf
sti
jecxz
mov
inc
daa
aad
in
mov
out
ss
pop
mov
lret
pop
jne
and
pop
jge
mov
adc
mov
ret
adc
add
das
push
xchg
jae
in
or
dec
push
scas
cmp
or
jl
rclb
xor
push
sub
sahf
dec
cs
or
jp
and
mov
inc
scas
sti
push
push
scas
xchg
push
mov
aam
cmp
stc
adc
push
gs
push
add
dec
mov
sbb
cmpsb
pusha
add
pop
in
dec
rolb
frstor
mov
rcrl
dec
aaa
jle
and
fwait
xor
insl
mov
push
push
das
out
adc
add
movsl
mov
mov
add
dec
fisubrs
pushf
hlt
hlt
adc
loopne
insb
push
add
mov
pop
test
mov
push
xor
je
sbb
xchg
sahf
adc
adc
pop
outsl
jbe
mov
ret
int3
or
dec
mov
enter
pop
push
stos
out
mov
ffreep
xor
es
cmp
arpl
mov
loopne
add
mov
pop
icebp
mov
sub
incl
sub
mov
test
aam
push
and
dec
jg
fxch
jbe
mov
push
stc
mov
lea
pusha
sti
jo
sti
test
bound
mov
test
jmp
xchg
nop
push
orl
icebp
popa
jmp
cmpsl
dec
stc
xchg
not
jg
mov
addb
test
pusha
mov
xchg
fwait
out
out
sbb
addb
out
das
scas
jg
jns
mov
jae
int3
jb
xchg
fidivs
test
xorl
pop
jmp
lods
test
push
push
popa
inc
cmp
dec
xchg
add
in
aas
lods
push
adc
mov
and
pop
mov
dec
adc
inc
or
scas
aas
dec
pop
mov
or
aaa
bound
dec
lods
call
xchg
cmp
loopew
dec
add
hlt
jecxz
mov
push
scas
test
sbb
xor
mov
pop
in
jnp
jmp
pop
out
lods
push
add
dec
sbb
subb
stos
jae
pop
pusha
xchg
dec
mov
jecxz
push
pop
sbb
insl
mov
push
inc
pushf
mov
out
ljmp
mov
jbe
mov
es
xor
pop
mov
mov
mov
mov
arpl
mov
pop
adc
lea
lcall
stc
mov
shll
fisubs
and
or
dec
dec
mov
xchg
xor
xor
add
push
xor
pushf
std
ja
xor
xor
xchg
inc
mov
push
dec
mov
adc
xlat
mov
add
push
xor
inc
ret
lret
rcl
scas
mov
int3
fs
inc
push
xlat
xlat
orl
inc
xchg
push
jb
push
addr16
ss
arpl
mov
sbb
adc
xchg
pop
aam
icebp
inc
in
stos
ret
jge
stos
jmp
out
test
pop
mov
cli
cmp
mov
rcrb
subl
dec
shlb
mov
clc
test
sbb
sti
cli
inc
movsb
sbb
pop
ret
movsb
rcll
stos
ss
pushf
xor
mov
inc
push
mov
in
sbb
xor
or
bound
xchg
shr
sub
insb
jle
mov
jmp
or
je
mov
repnz
xchg
mov
xchg
mov
test
and
push
icebp
lods
mov
outsb
lods
jne
sbb
in
mov
lea
cmp
inc
icebp
pop
rcrb
xlat
cmpl
fwait
cmp
jp
cmc
fistps
test
sahf
pushf
xchg
fdivrs
enter
xchg
lahf
and
fdivrp
pop
xchg
push
pop
add
push
mov
or
or
outsl
aas
adc
outsl
cmp
push
push
cwtl
jle
push
ret
jae
mov
cmp
sbb
in
jp
xor
pop
scas
cmp
jo
subl
mov
aam
xor
fadds
insb
test
aad
mov
loopne
lret
jbe
mov
rolb
sbb
in
fs
add
mov
add
inc
fsub
sub
or
or
gs
push
mov
sbb
cli
int
dec
mov
dec
subb
push
sbbl
gs
jno
mov
adc
movntps
add
push
cmpsl
loope
nop
push
jno
jne
jmp
inc
pop
ljmp
jle
and
mov
push
test
lock
and
jmp
fisubs
push
mov
inc
into
dec
mov
aas
lcall
loop
mov
pop
rcl
mov
cld
push
jo
xor
mov
ja
je
inc
pop
jb
and
mov
dec
pop
dec
xor
mov
mov
hlt
or
adcl
sahf
lcall
dec
aad
dec
lret
iret
jmp
out
enter
cs
add
ret
lret
ss
fisttps
jmp
repnz
mov
call
shlb
jl
dec
mov
aad
nop
bswap
pop
cs
inc
adc
in
ret
js
jmp
mov
mov
and
sbb
cmp
inc
adc
cmp
sub
pusha
shrl
faddl
pusha
push
and
leave
lahf
cmp
and
fdivrs
sbb
push
nop
arpl
sbb
dec
cmp
mov
lret
sub
and
and
xchg
or
sub
push
mov
add
sub
mov
jb
roll
cli
ret
pop
adc
hlt
mov
fnstenv
inc
push
cmp
push
incb
int3
ret
cmp
mov
das
ljmp
adc
sbb
adc
lods
fwait
xlat
inc
or
sbb
lds
dec
dec
mov
in
sbb
mov
xor
arpl
mov
aas
inc
dec
enter
orb
push
stos
aam
scas
lods
inc
xorl
and
rcrl
xchg
mov
cmp
shll
out
lret
lock
in
sbb
inc
jbe
imul
popa
sub
push
xchg
or
sbb
mov
rcrl
test
cmp
push
and
push
ss
aad
sub
out
dec
inc
mov
push
inc
inc
ds
mov
or
int
jno
int3
leave
addb
aaa
xor
es
jp
mov
sbb
jle
or
sbb
pop
in
mov
mov
mov
sbb
mov
mov
dec
subl
mov
aam
ret
sahf
scas
and
xchg
ljmp
out
insl
mov
vpunpcklwd
inc
loopne
xchg
mov
pop
pop
gs
and
mov
lahf
scas
adc
cmp
add
xchg
icebp
xorb
out
mov
mov
cmp
cmp
lret
leave
jmp
clc
inc
test
or
sbb
out
int
sub
pop
ds
mov
call
int
xchg
push
mov
hlt
mov
daa
popf
jno
lcall
outsl
hlt
fcoml
add
ss
or
dec
lret
adc
imul
test
lcall
ret
mov
mov
mov
push
xor
hlt
imul
ret
fs
sbb
adc
cltd
nop
mov
mov
cmpb
xor
jecxz
mov
shlb
scas
adc
fcompl
lcall
stos
dec
stos
gs
fdivrl
aad
and
shl
mov
enter
shrb
push
pop
push
xor
xchg
inc
stos
cmpb
mov
stos
mov
pop
inc
das
cltd
cmpsl
mov
repz
call
adc
sub
jno
gs
cmpsl
mov
inc
psllq
pop
pop
add
push
ja
mov
bound
insl
push
jge
or
ret
mov
lock
lcall
ret
mov
xchg
scas
cmp
push
ljmp
adc
aam
je
xor
loope
xor
pop
sbb
sarl
pop
add
mov
scas
pop
inc
mov
cwtl
aam
inc
push
jne
xor
stc
fldlg2
pop
mov
arpl
lds
subb
add
jmp
out
mov
and
dec
arpl
mov
out
test
sub
in
push
and
mov
cmp
mov
pop
mov
pop
mov
or
jb
dec
cmp
dec
daa
or
ret
test
or
repnz
push
insl
inc
mov
rorb
test
mov
out
or
out
sub
mov
sar
nop
adc
outsl
int3
inc
call
mov
outsb
ret
xchg
push
push
in
sub
or
int
pop
scas
sub
rcr
addr16
pop
mov
nop
sub
and
mov
push
sub
jne
xchg
xor
push
xchg
out
mov
and
lcall
mov
out
insl
jecxz
inc
add
adc
dec
mov
fnstcw
test
popf
mov
jle
shll
inc
sbb
lods
jae
jge
pop
jnp
mov
mov
dec
mov
mov
stos
hlt
into
int
sarl
mov
lods
push
clc
inc
mov
or
and
pop
call
out
jg
mov
sub
sbb
inc
sub
ret
stc
insb
xor
adc
and
ljmp
mov
nop
lahf
fcomps
ja
inc
fsubs
cmp
sbbl
lds
cmp
mov
mov
mov
mov
and
or
mov
and
retw
sbb
not
es
mov
xchg
je
mov
sub
cmp
loop
pop
sub
adc
pop
sarb
jg
fs
xchg
andl
adc
ret
inc
mov
sub
mov
and
pusha
adc
push
arpl
sub
rcrb
sbb
mov
xchg
stos
aas
mov
pusha
cs
pop
cmp
iret
dec
add
mov
lcall
rcrb
mov
and
cs
pop
xchg
cmp
mov
xchg
stos
pop
pop
loopne
aas
sbb
decl
jno
pop
or
fbstp
imul
inc
jo
xchg
sti
fistpll
xor
fs
sub
dec
daa
xor
fadd
mov
and
cwtl
push
jae
adc
sub
lods
fld
dec
and
lret
mov
lods
in
ja
shrb
sub
sti
fimuls
push
lea
mov
sub
repz
rcrl
stos
push
ret
dec
mov
je
mov
add
jb
jl
int
hlt
pop
mov
mov
fcompl
cs
mov
rcpps
inc
mov
mov
sub
mov
mov
xchg
mov
sar
lret
cli
insl
out
jmp
arpl
pop
jnp
cmp
and
arpl
and
jg
into
fimuls
fidivrl
imul
inc
stos
mov
or
xchg
sub
push
movsl
aaa
shrb
fisubs
psrad
xchg
test
nop
push
shrl
xchg
out
in
sbb
and
out
mov
sbb
imul
imul
sub
dec
clc
xchg
fs
xchg
inc
adcb
fwait
nop
les
add
fisttps
ds
add
mov
pop
fisubrl
mov
pop
or
lods
jns
movsb
inc
shlb
in
jg
ret
call
push
enter
jl
imul
shll
lods
in
outsl
jmp
das
pusha
ljmp
cmp
cmp
jnp
lret
mov
movsl
loopw
ret
scas
test
xlat
stc
mov
pushf
inc
sarb
xchg
shl
mov
add
xor
addw
push
mov
movb
int
dec
xor
sbb
and
pop
mov
rcrb
sub
stos
and
pushl
adc
jg
sbb
mov
jns
sub
pusha
das
aad
aas
cs
fwait
adc
int
sub
lea
pop
xchg
arpl
sbbl
mov
jns
push
sarb
movsb
out
into
movsb
jbe
test
aas
andb
mov
cmc
je
sbb
adc
adc
mov
hlt
sysenter
jbe
push
clc
and
repnz
dec
mov
daa
mov
adc
adc
sbb
mov
push
pushl
cwtl
movsl
aad
insb
sti
lcall
mov
movsl
pop
sub
mov
push
arpl
fstpl
rcll
hlt
fsubs
sbb
into
imul
dec
push
lods
sub
int
stos
pop
jbe
mov
leave
cmp
or
xchg
adc
rcl
jno
dec
pop
nop
mov
cmp
mov
fcoml
mov
lea
je,pn
add
iret
inc
in
adc
mov
adc
mov
mov
add
inc
std
mov
pop
daa
nop
mov
sbb
idivb
fldt
fdivs
rorb
xchg
mov
push
sbb
inc
cmp
pop
imul
outsb
mov
and
inc
push
push
sub
jp
xor
xor
leave
adc
into
test
inc
out
inc
in
test
aas
sub
and
xorb
add
jo
push
lcall
cmp
xor
jl
mov
fwait
or
clc
lods
outsl
mov
jle
dec
jge
les
inc
repnz
rcrb
push
test
fisubrs
shlb
ss
sbb
sbb
mov
fincstp
fstl
jle,pt
push
cltd
jg
test
add
out
and
neg
mov
adc
inc
inc
ja
push
daa
loop
jmp
out
push
popf
into
dec
insl
pushf
stc
lds
push
test
xchg
pop
xchg
out
in
idivb
push
or
cmp
push
andb
les
mov
outsb
or
mov
aad
lock
and
mov
out
xchg
push
sti
sub
xchg
sub
pop
xchg
dec
dec
mov
sub
fsts
ds
ret
mov
inc
jle
cmp
xchg
push
cltd
cmp
inc
sti
add
fadds
mov
xchg
push
fnstenv
or
pushf
mov
data16
add
add
xchg
mov
mov
nop
push
imul
or
pop
jmp
lods
cwtl
sbb
lods
in
push
xchg
prefetch
ljmp
push
add
call
fidivrl
mov
ljmp
push
lahf
call
movsb
inc
adc
jns
pushf
inc
cmpsb
sub
hlt
test
cmp
push
jnp
pop
push
xor
sti
jnp
lahf
push
sbb
sbb
xchg
lods
cmp
mov
mov
loopne
je
xchg
scas
jne
mov
sub
aaa
push
pop
adc
mov
and
dec
dec
idivl
and
xor
push
push
push
lahf
pop
fnstsw
cmp
mov
push
fsubr
dec
push
inc
inc
divl
mov
xchg
fcmovbe
lock
jmp
dec
popf
mov
xchg
ljmp
mov
or
push
mov
pushf
test
lods
and
mov
icebp
cmpl
jnp
in
ljmp
arpl
mov
testl
adc
cmp
pop
dec
icebp
movsl
mov
jns
mov
roll
mov
mov
cmp
jp
xchg
dec
and
lock
dec
pop
mov
jge
jg
add
add
xor
in
loope
lcall
and
repz
or
cmp
push
sub
imul
push
popa
cmp
out
jp
mov
mov
jb
push
sbb
sub
xchg
push
sar
dec
inc
enter
je
push
cmp
stc
in
xor
test
xchg
ds
cmpsb
mov
sub
pop
and
pusha
outsb
or
lock
fidivrs
xor
pop
test
fsts
mov
dec
mov
in
scas
lret
push
ret
jge
ror
divl
push
sbb
push
push
mov
or
fsubr
jns
ret
jbe
and
inc
repz
pop
pop
dec
cltd
mov
stos
cltd
test
lret
sub
and
ret
cmp
or
mov
cmp
gs
vaddss
pop
or
xchg
aam
test
pushf
push
std
aam
in
dec
cmc
fcoms
xor
js
scas
popf
fisttpl
fnstsw
rclb
adcl
addr16
subl
test
xor
in
lret
stc
dec
addr16
gs
lock
cmc
pop
and
push
into
inc
mov
jmp
cmpsb
sub
loope
mov
xchg
sbb
push
pop
aas
addr16
sbb
int3
push
jecxz
sub
in
or
inc
int3
dec
icebp
cmc
sbb
dec
iret
std
lret
rclb
or
roll
fcmovne
sarb
out
rcl
pop
jno
mov
jle
mov
push
xchg
and
push
pop
xchg
inc
mov
push
cmp
dec
fildll
test
subl
lret
wrmsr
out
xchg
in
in
fisttps
dec
andl
rorb
rol
lock
dec
push
stos
xchg
jne,pt
push
inc
push
mov
loopne
loopne
and
pop
xchg
xchg
sub
pusha
or
cmp
dec
outsb
jmp
das
sub
dec
enter
test
mov
popaw
xor
xchg
mov
pop
jl
dec
cmp
ret
inc
or
dec
cmp
mov
or
repz
mov
nop
pushf
cmpxchg
add
adc
stos
adcb
ss
je
cmp
subl
push
dec
sar
mov
mov
into
fistpll
scas
pop
ljmp
jae
inc
push
jge
into
stc
push
push
pushf
push
jns
sti
setns
leave
aas
mov
pop
clc
push
jne
xor
dec
loop
xchg
xchg
in
test
inc
mov
je
lds
lods
testl
fidivrl
mov
fstl
push
or
test
lret
xchg
notl
mov
das
xor
or
jno
nop
inc
inc
dec
xor
out
inc
mov
movsb
call
sbb
pushf
pop
add
aas
mov
add
xor
sbb
loopne
sahf
outsl
test
or
pop
xchg
lcall
jl
pop
mov
jno
jmp
idiv
push
mov
icebp
sarl
repnz
sahf
mov
loop
xor
xchg
pop
cmc
enter
stc
std
faddl
mov
cltd
jae
mov
add
loop
filds
add
int
in
jmp
rclb
jmp
jne
popa
aad
or
ljmp
cmpsb
mov
sbb
add
cld
in
push
add
lahf
mov
push
jb
and
pop
xchg
dec
sbb
lods
jmp
inc
lahf
nop
dec
pushf
rcll
xchg
dec
dec
cmpsb
stos
mov
cmc
lods
mov
xabort
in
enter
mov
sbb
xchg
xchg
mov
stos
dec
popf
xchg
nop
mov
or
loope
je
dec
hlt
lret
mov
movsb
dec
sets
add
push
ret
add
rcl
cmp
js
popf
mov
js
repz
stc
adc
cmp
scas
and
lds
fsubl
cmp
and
push
or
fistps
in
push
fbstp
and
into
push
sub
test
cmp
or
ss
fs
fcoms
dec
pop
mov
mov
faddl
loopne
sarl
sbb
lds
aam
pop
lahf
daa
jge
xor
jo
lods
ljmp
sub
scas
inc
sbb
cld
cmp
enter
ret
adc
nop
pop
xlat
cmpsb
sbb
int3
add
ret
pop
xor
cmp
dec
sbbl
mov
and
rcll
adc
adc
mov
dec
push
cmpl
mov
ds
xchg
nop
cvttps2pi
lods
or
ret
cmp
jne
fucomi
and
into
mov
ds
xchg
enter
negl
aas
ds
mov
jl
push
xchg
sti
lods
lcall
sub
jne
adcl
pop
jmp
jge
dec
arpl
jbe
jg
sbb
mov
dec
sbb
lods
negb
sub
mov
dec
mov
pop
jb
jmp
inc
or
lods
mov
popf
xchg
outsl
jnp
hlt
mov
bound
mov
in
jl
bound
jne
cmp
dec
push
loopne
imul
je
ret
sub
jl
xor
xor
mov
out
adc
add
ja
inc
pop
jno
icebp
cli
aam
mov
adc
push
mov
mov
inc
jl
jnp
outsb
dec
push
fs
xchg
mov
mov
sbb
leave
fnstsw
stos
and
inc
sbb
movsb
inc
add
sub
and
pusha
jecxz
sarb
xchg
negl
xchg
pop
fdivrs
lret
mov
xchg
je
ljmp
call
ja
sub
ja
dec
cmp
pusha
pop
mov
lcall
test
stos
in
mov
mov
xor
jno
test
scas
std
popf
adc
mov
push
or
arpl
pop
and
or
xchg
mov
xchg
push
mov
imul
dec
cmpsb
xchg
jns
js
push
inc
rolb
mov
popa
outsl
sarb
neg
stos
jb
mov
test
fdivrs
scas
mov
jle
inc
jmp
sahf
add
push
inc
adc
mov
dec
das
push
jbe
cmp
jecxz
addl
pop
insb
cmp
out
inc
dec
jg
push
int3
push
cmp
loope
cmp
adc
cmp
and
cmc
jle
icebp
inc
mov
dec
fmuls
outsl
jo
sub
xchg
push
mov
jbe
or
inc
out
dec
fldl
xor
test
pop
cltd
test
mov
jmp
mov
ret
pusha
add
adc
scas
dec
jae
mov
and
cmp
mov
jno
add
inc
rcl
mov
fimull
pop
sub
lds
xorl
insb
mov
sbb
in
roll
cwtl
push
mov
rclb
jl
pop
pop
pop
addl
jg
test
cld
mov
push
inc
in
shlb
outsb
and
jle
imul
ucomiss
out
into
mov
cmpsb
or
inc
lods
jmp
stc
jp
jae
cmpsb
movsl
cmp
nop
inc
test
aas
xchg
xlat
and
gs
data16
ja
bound
mov
or
jmp
in
shll
shll
popf
and
mov
xor
int
mov
fcmovnb
mov
adcb
dec
test
jle
movsl
cli
sbb
xchg
xchg
fprem1
xchg
out
cwtl
aas
fsubp
push
mov
mov
push
inc
jno
scas
aas
lret
push
bound
xor
and
out
cmp
adc
adc
dec
popf
in
mov
inc
sub
bound
mov
andb
sbb
ja
fcoml
xchg
mov
mov
mov
cld
repnz
or
dec
dec
xor
xchg
add
cld
ds
out
or
push
xchg
push
and
push
ja
xor
or
xchg
and
rcrb
cmp
popa
xor
push
repz
adcb
push
jecxz
xchg
lds
dec
mov
hlt
cmc
push
mov
lods
and
sub
add
fdecstp
test
inc
jno
and
jae
jp
xor
pop
mov
test
jae
adc
cmp
or
jl
fwait
push
pop
inc
cmp
xor
push
sarb
sti
jecxz,pn
inc
loope
daa
pop
xchg
pop
and
push
xchg
fisubs
fdivrp
adc
pushf
scas
and
aaa
arpl
scas
popa
adc
subl
pop
mov
mov
ja
sbb
or
cmp
jae
or
adc
pop
cmp
xor
pop
inc
xchg
xchg
loopne
pop
and
mov
out
cwtl
movsb
push
lcall
cmp
lea
fmull
xor
mov
mov
mov
repz
aam
gs
rol
js
pop
xor
mov
aam
mov
aas
aad
mov
xchg
xchg
or
out
daa
std
outsl
adc
or
push
mov
fidivl
pop
mov
rcl
mov
adc
mov
adc
dec
and
popa
aaa
adc
int3
mov
jl
dec
lds
mov
imul
nop
mov
pop
loope
push
xor
pop
cli
insl
das
sub
xor
roll
int
test
jecxz
cmp
repz
pop
sub
inc
mov
push
push
xor
push
sbb
lret
pushf
aaa
gs
push
popa
add
aad
dec
adcl
inc
arpl
mov
mov
outsl
jg
mov
mov
adcl
repnz
mov
outsl
bound
add
bound
cld
dec
adc
jecxz
push
scas
mov
push
imul
daa
cwtl
push
or
lods
dec
dec
push
mov
xor
sahf
outsl
mov
out
inc
dec
lret
xchg
xchg
xor
sbb
fucomip
inc
pop
push
test
jno
popf
sbb
in
and
movsb
ret
imul
push
mov
fldt
mov
rolb
mov
or
mov
add
mov
iret
cmp
inc
fcoms
das
imulb
push
mov
jae
testl
mov
enter
testb
inc
push
scas
cmp
cld
loop
sarb
stc
cmp
pop
cli
mov
dec
shlb
addr16
xchg
or
push
in
xchg
push
mov
add
mov
mov
push
jo
mov
aam
mov
sbb
cli
xor
aam
mov
mov
mov
or
cmpsl
cmp
xchg
push
je
push
inc
sbb
loop
cli
stos
push
daa
test
cmp
jo
sbb
fnclex
adc
dec
gs
icebp
sub
insl
inc
sbbb
cli
fadd
pop
insb
adc
sti
sub
test
lds
daa
loopne
in
sub
fiaddl
nop
aas
fbld
mov
mov
adc
mov
add
mov
sbb
aas
dec
push
test
cmp
mov
stos
push
jbe
mov
push
bound
shr
out
insb
arpl
adcl
call
inc
mov
xor
test
imul
test
iret
fisubrs
jne
testl
xor
push
lods
adc
call
rorl
adc
iret
and
hlt
lcall
dec
in
movsl
scas
cmpsb
enter
push
jmp
hlt
add
mov
jne
enter
xlat
jp
shrb
decl
jp
push
sbb
mov
mov
and
cwtl
negb
hlt
dec
mov
sub
mov
pop
sarl
sub
add
call
cwtl
enter
daa
mov
ljmp
stos
and
ss
lods
clc
arpl
sub
in
push
insl
setns
push
sbb
mov
pop
pop
loop
xchg
and
mov
int
sub
cmpsl
popf
cwtl
fwait
mov
out
ss
add
scas
mov
out
lods
int3
pop
ficomps
push
pop
insl
mov
add
xchg
jns
jae
xchg
rcl
aaa
jg
adc
into
rcrl
imul
dec
push
out
add
call
adc
out
outsl
mov
into
sbb
mov
inc
addr16
sub
loopnew
jnp
lea
movsl
lock
aaa
out
test
in
mov
sbbb
xchg
fidivs
jmp
test
popa
adc
lcall
add
sbb
adc
jo
push
rcll
mov
xchg
push
fistps
outsb
jl
into
mov
icebp
push
dec
dec
cmp
ja
dec
and
dec
ljmp
pop
cmp
sti
call
mov
push
decl
addr16
jbe
aaa
add
mov
fldl
cmpsb
iret
xchg
inc
dec
stos
mov
in
inc
rol
test
xor
mov
lea
rcrl
sub
mov
insl
sub
push
movsb
dec
es
movsb
int3
cmp
scas
out
mov
or
imul
xchg
adc
jmp
fwait
movsb
in
jo
push
ss
and
xchg
and
cmpsl
cmc
ds
notl
inc
push
cs
cmpsb
xchg
cld
xor
pop
loopne
mov
pop
inc
adc
mov
adc
fwait
and
mov
int
inc
in
push
sbb
pop
cs
rolb
xchg
pop
add
mov
xor
loope,pt
movsl
jae
sarl
inc
xchg
gs
scas
sbb
leave
mov
pop
lret
sbb
fcomip
sub
xchg
out
dec
lds
xor
mov
sar
cli
lahf
push
notb
rcrl
jb
xor
pop
dec
jmp
mov
subl
mov
jne
enter
push
repnz
test
mov
lahf
mov
adc
jbe
repnz
pop
mov
enter
test
js
sarb
jp
and
sub
out
stc
jo
hlt
mov
arpl
in
mov
inc
inc
pop
stos
in
inc
adc
jbe
sbb
cmpsb
fisttps
cmp
mov
push
add
or
movsb
jbe
cmp
mov
popf
xor
jmp
xlat
jnp
mov
out
aam
mov
jl
push
mov
mov
or
jge
cmp
scas
ret
rolb
cmc
xchg
orl
stc
push
mov
push
cmp
test
push
idiv
es
and
push
out
xchg
aas
hlt
popf
pop
loopne
cmp
adc
sub
xchg
cmp
xor
test
mov
test
repnz
cmp
dec
add
and
test
xchg
inc
adc
jmp
sbb
push
popf
sbb
out
cmpsl
xor
daa
dec
icebp
pop
mov
mov
jmp
inc
es
pop
cwtl
loope
sbbl
and
push
insl
sub
aas
inc
dec
inc
jnp
push
mov
sahf
pusha
rclb
adc
mov
pop
scas
cli
jo
jne,pt
imul
xor
aaa
xor
movsb
rcll
cmp
shlb
je
je
outsb
shrl
xor
rcll
push
insb
xchg
lock
sub
dec
out
jl
mov
in
dec
aas
adc
dec
pop
ret
fdivrl
push
mov
push
sub
jecxz
adcl
test
es
dec
mov
mov
fdivrs
mov
sbb
mov
push
andl
out
push
xlat
ljmp
repnz
rcrl
out
aas
loop
add
and
ficoml
inc
sbb
in
sbb
sbb
fsubs
outsb
mov
lcall
cmpsl
cmp
cmp
cmpb
push
dec
xlat
push
shlb
or
sbb
push
sub
rdpmc
imul
push
inc
add
sbb
dec
fcom
inc
inc
divl
shrb
or
mov
mov
adc
cmp
decb
jmp
dec
xchg
pop
dec
xchg
mov
ret
push
mov
fs
aad
adc
dec
fstpt
xlat
mov
es
or
das
mov
outsl
aad
lds
mov
ret
sahf
je
cmp
scas
iret
mov
stos
xchg
pop
sbb
mov
scas
repz
popa
icebp
stc
or
cmp
idivl
jbe
scas
sub
inc
leave
lret
add
test
ret
andl
rcrl
mov
test
imul
xor
mov
jecxz
mov
xor
mov
test
jle
ljmp
pushl
in
ret
dec
mov
add
insb
sarb
xor
insb
jb
roll
idivl
popa
xor
push
jmp
adc
push
add
xor
into
pop
adc
or
xor
pop
push
outsb
pop
xchg
movsl
adc
in
xlat
insb
pop
loope
pop
jmp
cwtl
dec
push
adc
rorl
mov
mov
ret
stos
adc
in
stos
xor
enter
inc
lds
sub
stos
iret
aam
mov
stos
sbb
and
dec
fwait
jge
pushf
out
ljmp
or
mov
lret
jno
adcl
ja
out
mov
cwtl
frstor
movsl
sub
fmull
mov
push
inc
xchg
pop
adc
inc
jne
das
adc
jnp
testb
sbb
lods
mov
jp
pop
hlt
mov
out
shrb
jle
push
std
insl
and
addr16
fs
sbb
fwait
sbb
les
ds
pop
push
scas
mov
mov
sub
dec
cld
cwtl
daa
neg
pop
jne
gs
stos
data16
sub
rcrb
fistps
mov
les
jmp
jge
adc
inc
imul
pop
hlt
mov
in
andl
mov
outsb
or
pop
sti
jbe
mov
push
scas
cmpsl
cmpsl
icebp
scas
stos
xchg
out
out
call
dec
test
mov
cmp
es
jnp
mov
jmp
push
adcl
sub
push
jb
out
leave
add
dec
sub
imul
addl
addb
or
and
les
fwait
sbb
xchg
cmpsb
mov
adc
add
push
std
andb
and
push
mov
push
cmp
mulb
fs
inc
add
int3
jl
iret
dec
mov
in
iret
jle
out
adc
push
dec
inc
ljmp
mov
insb
jns
mov
pushf
mov
cmp
shrb
dec
add
jne
or
inc
stos
fwait
or
stos
lea
xor
repz
mov
lret
xor
sbb
into
push
cmpsb
in
lcall
fistpl
mov
outsl
mov
push
pop
clc
lret
mov
imul
add
and
push
cmp
pop
jl
mov
call
arpl
adc
dec
sbb
imul
int3
fmul
movsl
sbb
xchg
dec
push
lods
aaa
les
push
rcr
std
push
in
xchg
xchg
mov
pop
rcl
and
sub
decb
mov
fnstenv
jecxz
push
pop
mov
jo,pn
cmc
mov
xor
dec
les
fyl2xp1
les
adc
add
ret
jp
and
pusha
mov
dec
adc
cltd
lods
pop
mov
and
xchg
arpl
jmp
mov
mov
nop
ret
dec
or
cmp
pop
das
mov
fildll
leave
aam
pushf
adc
xchg
mov
addr16
cmp
cmp
push
cmp
pop
fmuls
dec
outsl
jp
push
cmp
adc
xor
std
push
lds
aaa
lahf
pop
push
pop
lods
outsl
adc
or
mov
mov
sub
aas
push
or
pushf
sbb
push
add
mov
mov
sbb
out
push
cltd
lahf
int
lret
xor
jne
mov
gs
and
mov
ret
jns
jae
test
jae
cli
add
push
sbbb
mov
xchg
dec
sub
nop
stos
movsl
mov
jg
je
or
fsubl
xor
sub
sub
js
mov
insl
stos
mov
or
push
push
leave
mov
fwait
scas
movsw
pushf
xchg
arpl
mov
outsl
and
cli
pusha
push
add
shrl
add
pop
jmp
out
test
push
cmp
add
push
mov
int
or
inc
xor
jp
xor
add
fsubrp
jmp
push
rcr
add
fwait
xor
jge
mov
pop
push
xor
mov
fs
cmpsb
stos
xchg
mov
cmc
jnp
jl
mov
mov
jne
loop
jb
jg
jns
rclb
pop
aam
jge
mov
xchg
jmp
cmp
xor
and
jne
xchg
loopne
cli
cmp
mov
pushf
arpl
dec
lods
add
xlat
push
cmp
mov
orl
addr16
dec
loopne
pop
xchg
call
or
ret
scas
lcall
jae
pop
in
jmp
xor
movsl
in
daa
addr16
cmp
dec
cmpsb
fisubrl
sub
mov
hlt
mov
pop
xor
mov
dec
enter
xchg
cmp
imul
mov
dec
jg
rclb
sbb
add
inc
arpl
je
push
movhlps
test
xor
xchg
or
les
cmp
imul
pop
lods
push
shrl
lods
push
jnp
xor
mov
mov
mov
push
or
push
pop
add
xor
dec
mov
pop
cmp
nop
jge
jecxz
mov
push
les
mov
fdivrs
in
adc
or
inc
frstor
lock
je
mov
lcall
mov
add
fisubs
lods
mov
adc
mov
scas
add
push
sub
ljmp
pop
adc
nop
fwait
jo
daa
adc
ret
jb
push
sub
and
pop
scas
xchg
sbbl
adc
push
inc
sbb
mov
psubusb
ljmp
lods
sub
cmpsb
dec
mov
lahf
es
and
cltd
pop
out
or
arpl
fwait
cld
es
arpl
mov
xchg
lea
aam
mov
cltd
in
call
lret
fimuls
loope
jnp
pop
dec
pop
mov
pop
addr16
xlat
jnp
leave
inc
xchg
or
subb
add
and
jbe
adc
xchg
mov
std
push
rcrb
aad
pop
fldl
cltd
add
pusha
data16
je
jae
inc
or
cmp
outsl
ds
hlt
adc
mov
movsb
iret
in
repnz
ds
jle
dec
mov
out
xchg
cmp
and
stos
leave
ret
ds
ss
gs
push
andb
imul
aas
inc
out
xchg
or
fists
cmp
mov
outsb
lods
xor
cltd
out
test
jmp
jp
loopne
popa
dec
std
aas
push
pop
mov
mov
xor
ljmp
data16
dec
scas
inc
sbb
repnz
ja
sub
test
fidivrs
push
inc
es
push
pushf
xchg
punpckhwd
adc
ds
push
mov
fst
ljmp
xacquire
in
cwtl
test
cmp
xchg
fcom
pop
inc
xor
rcll
sbb
or
pushf
ret
test
std
sub
sub
div
call
inc
jae
loope
xor
loopne
dec
clc
stos
jne
addl
das
notb
test
imul
inc
sbb
sub
ret
sub
adc
inc
subl
xchg
add
lods
mov
adc
and
sub
lea
mov
stos
inc
shlb
jne
xchg
mov
stos
les
add
pop
xor
scas
mov
ds
sahf
push
xor
imul
std
data16
out
clc
neg
xor
jg
test
mov
inc
dec
pop
adc
leave
loopne
pop
enter
nop
icebp
jp
je
andb
cli
imul
movsb
movsb
fwait
mov
jns
ljmp
movsb
movsl
xchg
mov
leave
scas
cmpl
jge
ljmp
xchg
pop
inc
stc
sub
das
stos
dec
test
jmp
xchg
push
call
outsb
ljmp
ret
mov
jo
jnp
into
pop
inc
add
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
or
sub
sub
pushf
mov
cld
push
mov
adc
imul
fistps
adc
outsl
mov
int3
mov
scas
ficoms
flds
xchg
lret
mov
sub
push
fnsave
or
cs
enter
ja
insl
ja
sbb
aas
hlt
dec
sbb
push
dec
and
insl
adc
andl
shrb
out
sub
mov
jp
xchg
push
push
insb
aad
inc
daa
fsubr
pop
jecxz
fnsave
out
and
bound
jmp
jno
push
and
insl
leave
hlt
push
movb
adc
movsl
in
pop
sbb
test
cmp
out
mov
push
dec
jae
ret
ljmp
push
xchg
lock
mov
and
ficoml
iret
jno
cmpsb
out
mov
push
adc
mov
fwait
dec
jl
rolb
popf
add
mov
cld
mov
out
testb
ret
sub
pop
addb
sbb
sbb
mov
lea
push
xchg
lods
aaa
jne
dec
add
mov
mov
pop
or
mov
popf
mov
lods
js
les
jecxz
xchg
mov
pop
dec
lcall
orb
cli
adc
and
test
jne
test
sub
jecxz
xlat
mov
mov
push
popa
or
mov
js
jmp
insb
jbe
inc
pop
cld
push
sbb
pushf
pop
or
shll
xor
xchg
gs
sahf
clc
lock
gs
adc
mov
movsb
sub
jmp
push
mov
jae
or
jne
in
and
xor
js
inc
push
cmp
rcl
dec
pmuludq
in
fs
jno
arpl
hlt
push
cmpsl
shr
push
rcrb
mov
ret
cmpl
movsb
pusha
outsl
incl
lret
mov
loop
in
adc
xchg
xor
dec
je
enter
fnstsw
mov
xor
ds
or
or
movsl
in
mov
jecxz
in
add
inc
pop
outsl
mov
lcall
ljmp
sbb
mov
add
nop
ja
cmpsb
or
or
dec
lds
andb
pop
cmp
sbb
rol
push
int3
movsl
and
stos
sti
inc
mov
or
mov
cli
push
push
jne
dec
insl
mov
int3
ss
pop
cmp
sub
addr16
sbb
cli
mov
rcrl
cmp
int
or
mov
stc
push
cs
aad
sahf
andl
push
inc
and
cs
cmpsb
stos
jno
adc
mov
shrb
or
ja
add
aad
mov
and
dec
mov
repnz
out
add
add
out
jle
adc
in
test
popa
cmp
icebp
jnp
in
push
sbb
xor
lcall
xchg
movsl
jle
add
loop
aad
nop
jp
sub
orl
and
insb
mov
in
leave
mov
xor
or
adc
pop
xor
xchg
mov
into
pop
push
jne
cmp
dec
jp
jns
cld
dec
adc
push
pop
stos
icebp
push
cli
ss
add
xor
dec
add
call
ret
push
cmpsl
movntq
add
clc
insb
jp
sbb
adc
cmp
out
cmp
test
push
pusha
test
cmp
cmp
pop
sub
xchg
inc
dec
xchg
fiaddl
mov
xor
sbb
lea
add
jmp
int3
dec
scas
lret
arpl
mov
push
add
repnz
cmp
ret
sbb
push
push
pusha
jno
jge
call
cld
mov
xchg
add
mov
push
mov
and
lods
or
dec
jo
push
sbb
sarb
lock
mov
call
cmpsb
call
out
pusha
push
and
jp
cld
movb
jg
rorl
xchg
push
jg
leave
imulb
test
jl
adc
inc
xchg
and
xor
jbe
bound
jne
outsb
fdivrp
rcpps
ss
and
frstor
stc
movsl
inc
mov
pop
add
push
dec
fistps
ss
cwtl
fidivs
inc
xchg
mov
mov
inc
scas
push
xor
sti
pop
jbe
loop
sbb
or
jns
cmpsb
aad
in
in
xor
das
bound
addb
lea
mov
jno
dec
movsl
shlb
pop
jmp
jg
push
movsb
push
xchg
test
sahf
imull
sub
loopne
imul
mov
xchg
fnstsw
or
mov
push
xchg
fwait
cwtl
cmp
inc
mov
sbb
ret
scas
int
xor
and
inc
xchg
cmp
test
les
insl
xchg
into
fbstp
mov
loope
jo
pusha
xchg
dec
xchg
bswap
repnz
and
or
stc
or
je,pn
xor
ja
fcompl
aas
xchg
int3
pop
xchg
xchg
xlat
in
mov
out
cmp
add
pushf
repz
das
ds
inc
lahf
jle
stc
fsts
fisttpll
push
stos
outsb
push
push
adc
int
dec
sub
insb
mov
call
push
fucom
adc
out
jecxz
and
rcrl
lock
cs
sbbl
inc
add
cmp
mov
xchg
imulb
mov
mov
pushf
push
ret
push
pop
push
iret
out
lea
xchg
mov
popa
jl
test
and
in
or
sub
push
add
adc
jae
mov
insb
lods
mov
push
call
arpl
jb
pushl
cmp
inc
add
mov
aam
jmp
shll
aaa
pushf
cmpsl
mov
inc
xor
movsl
jae
call
leave
mov
push
sbb
add
or
leave
fcoms
in
pop
xchg
cs
push
cltd
aam
call
add
dec
je
xlat
xor
jno
push
push
cmp
out
imul
enter
in
xchg
pop
dec
add
ret
xchg
adc
xor
add
or
orb
pushf
lock
data16
sbb
cltd
shrb
scas
inc
adc
jb
insl
mov
dec
scas
or
sti
repnz
sub
and
cltd
cmp
and
xchg
mov
stc
sbb
js
push
ja
adc
pop
repnz
or
xchg
and
add
in
rcr
aaa
inc
or
adc
aam
sbb
jbe
ja
pop
lods
out
push
push
popa
or
xchg
push
idiv
fadd
test
adc
scas
gs
and
daa
cs
xchg
popa
scas
iret
sub
xchg
sti
mov
mov
and
mov
pop
sar
mov
push
and
inc
inc
or
mov
mov
dec
push
in
push
imulb
cli
loopne
incb
or
and
in
mov
or
sbb
aaa
lods
jp
push
aaa
add
dec
ljmp
lret
ja
sarb
aad
test
leave
pop
adc
push
jo
mov
mov
push
les
shl
divb
test
es
test
pop
xchg
inc
pop
pop
xchg
dec
jl
out
mov
or
mov
enter
jne
cmp
mul
adc
add
and
push
ret
es
adc
mov
and
and
and
lds
dec
dec
push
jge
sti
cli
sbb
test
xor
data16
sub
movsl
or
aas
into
cmpsb
mov
dec
dec
cltd
push
stc
outsl
fwait
sub
pusha
shlb
cmp
jne
dec
fidivl
xor
shll
pusha
sub
fwait
xchg
ss
call
mov
rcll
jnp
mov
sbb
push
sub
inc
add
push
ret
ja
mov
inc
jbe
dec
dec
push
jmp
ljmp
push
add
out
push
cld
addb
out
cltd
jnp
imul
inc
popa
loopne
xor
lret
out
xchg
pop
push
das
lods
pop
xchg
cmp
mov
mov
jb
or
sbb
or
mov
inc
ret
xchg
rorl
or
mov
addr16
ds
add
movsb
fimull
cwtl
sbb
imul
test
in
push
ljmp
mov
push
rcrb
jnp
scas
out
fcomps
iret
jl
sub
xchg
das
movsl
push
les
and
sbb
movsl
aaa
dec
inc
jb
push
xor
das
pop
cmp
loop
aad
les
cmp
je
adc
out
iret
or
cs
fwait
sbb
xchg
mov
andl
pop
mov
sub
jle
arpl
dec
add
cs
jbe
sub
inc
add
jl
dec
sub
lock
ficoms
imul
sub
clc
inc
rcrb
into
pop
stos
or
cmp
clc
mov
popa
lcall
addl
sub
ret
scas
inc
notb
push
dec
add
xchg
jae
inc
inc
lock
out
sbb
mov
jne
sub
and
cmp
push
fdivrl
std
into
imulb
outsl
sbb
lock
jecxz
lret
adc
add
push
test
cltd
add
notb
xchg
sub
sti
mov
inc
xchg
out
push
pushl
and
fimull
js
rcll
sbb
xchg
aaa
movsl
mov
test
fmul
jmp
data16
inc
and
sbbb
mov
sbb
or
push
pop
outsb
mov
out
or
sbb
sub
lret
pop
inc
call
jb
je
dec
adc
push
lock
sahf
or
mov
cmpsl
xchg
jb
mov
mov
push
shlb
rcrb
pusha
ret
cmp
xchg
in
xchg
add
lahf
xor
loopne
das
add
test
adc
ficomps
out
adc
inc
push
jae
enter
aad
jl
pop
fstpl
mov
rcrb
xorb
arpl
lea
cmp
pop
add
jns
into
out
xchg
in
aaa
jl
cmpsl
int
pop
mov
mov
aas
lea
in
adc
dec
mov
push
aas
roll
push
imul
lcall
pop
dec
xor
inc
cmpl
mov
std
sub
inc
sub
cmp
mov
loopne
pushf
cmp
out
mov
sub
scas
jle
clc
cmp
sti
out
scas
xchg
les
and
jge
jp
pop
and
and
xchg
inc
pop
cmp
or
aas
in
stos
test
mov
sub
mov
leave
hlt
paddb
jmp
jmp
dec
popf
icebp
xor
xchg
push
add
mov
rep
jb
xor
into
mov
test
js
mov
inc
and
popa
fs
xlat
dec
inc
mov
inc
mov
add
or
mov
imul
and
test
int3
sub
insb
in
pop
or
or
nop
loopne
mov
sub
aam
and
jae
jnp
stc
lret
cltd
test
mov
cmp
mov
fcmovne
push
int3
adc
std
push
test
jp
pop
sub
ret
inc
lds
cmpb
xchg
cmpb
jns
mov
je
icebp
addr16
sub
lock
loope
scas
andl
inc
in
push
or
notl
inc
test
out
dec
ljmp
mov
sub
out
mov
cmc
or
jns
gs
xchg
stos
jl
ret
rep
jns
pusha
push
cmp
cmc
xchg
adc
or
mov
bound
push
and
enter
jl
cmpb
std
loopne
std
stc
mov
or
mov
cmpsb
stc
gs
jg
jp
cmp
and
aam
stos
and
jecxz
es
push
add
add
lcall
nop
pop
leave
or
out
or
sub
fcomi
jle
in
dec
mov
add
xchg
cmpsb
in
mov
rcll
aam
loop
fcoml
inc
add
dec
cmpsb
add
or
ja
add
sbb
movsl
push
addb
jg
aaa
outsb
ja
loop
xchg
jg
xchg
add
cmp
sbb
aam
daa
and
in
gs
mov
add
sti
push
adc
test
and
dec
sub
lret
pushf
in
pop
mov
fs
repz
pushf
xor
adc
and
dec
xchg
mov
jmp
adc
push
xchg
add
mov
jo
push
ret
aam
adc
repnz
xchg
xchg
sub
push
jge,pn
in
sbb
test
movsb
xor
fimuls
test
lret
pop
xchg
mov
shll
jb
hlt
jbe
lea
add
push
xchg
push
les
addl
jne
movsl
inc
loopne
mov
test
xor
gs
push
imul
pop
fsin
mov
fldcw
cmc
push
in
insl
pop
xor
leave
cmp
out
repnz
cmpsl
cmpb
fwait
jge
fiadds
mov
hlt
pusha
cmp
xchg
fwait
mov
test
in
repnz
jbe
mov
hlt
mov
mov
rcr
push
in
mov
daa
mov
adc
fsubs
xor
jmp
test
sahf
dec
inc
sahf
xorl
push
xor
rclb
mov
mov
add
iret
sbb
mov
sarb
ljmp
jns
inc
leave
aad
scas
sti
test
mov
lock
push
jmp
or
fwait
adc
inc
es
ljmp
testl
push
decb
test
inc
cmc
enter
push
or
ret
inc
imul
pusha
push
aad
mov
pop
add
movsb
lret
out
xchg
inc
popa
push
sbb
hlt
sub
das
adc
jg
jl
imul
iret
push
adc
xor
pop
mov
push
xor
jmp
daa
mov
mov
dec
inc
mov
xchg
jmp
add
lds
adc
je
cmp
inc
cmpsb
and
ds
pop
cmp
ss
dec
call
mov
and
imul
shrb
cmp
lahf
add
aad
cmpsb
jecxz
mov
xor
pop
mov
iret
mov
and
scas
mov
and
outsb
jae
jmp
das
shll
cwtl
sbb
out
ret
add
test
inc
and
add
xchg
jmp
scas
sbb
int
mov
xchg
push
adc
xchg
inc
mov
push
jo
pop
mov
fbld
xchg
repz
xchg
cmp
push
sahf
in
cmp
xorl
mov
xchg
add
xor
and
mov
jecxz
jp
sbb
dec
call
lods
fiaddl
sbb
lods
mov
divl
dec
outsb
inc
in
int3
or
mov
jb
lea
sbb
ror
fcoms
cs
lret
out
in
pop
mov
jp
cmp
mov
test
leave
mov
lcall
ret
daa
insl
and
mov
enter
xor
mov
mov
push
or
bound
dec
lahf
jbe
sub
mov
fisubrs
lcall
imul
or
popf
mov
cmp
add
hlt
popf
jl
adc
pushf
inc
inc
dec
es
hlt
cltd
xchg
movsl
or
xor
push
xchg
inc
sbb
lcall
icebp
jno
xchg
or
std
xor
fs
lcall
test
into
pop
sbb
sub
push
repnz
cmpsb
loopne
mov
pop
cmp
in
stc
inc
and
in
in
ja
mov
mov
sti
jecxz
dec
andl
lcall
cmc
dec
lahf
push
fcmovnu
push
mov
jmp
push
mov
mov
xchg
mov
fldt
inc
adc
in
shr
xor
adc
int3
dec
ss
xor
pop
int
ficoms
sub
insl
xor
inc
rolb
rcl
pop
xor
fbld
mov
adc
stc
lcall
cli
pop
push
mov
cmp
scas
jecxz
gs
mov
inc
mov
inc
xchg
mov
mov
jg
call
movsl
or
cmp
jg
jne
sub
sbb
dec
sub
inc
jne
fidivl
sbb
or
mov
mov
popa
xor
ja
dec
sti
mov
xor
push
fwait
xor
fucomp
mov
fdivrp
std
mov
xlat
jl
inc
sub
fisttpl
jecxz
xchg
pop
andl
cmp
jl
mov
mov
stos
sbb
scas
pop
add
mov
data16
or
lcall
das
aas
and
popl
mov
or
lret
lahf
incb
mov
inc
add
leave
mov
inc
xor
shll
call
or
push
jnp
dec
jp
call
movsb
mov
pusha
jae
mov
sbb
clc
dec
ds
imul
xor
pop
das
lret
js
xlat
enter
int
xchg
mov
xlat
loop
dec
dec
sub
sbb
pop
lds
jmp
mov
insb
push
incb
rclb
inc
cld
lahf
pop
sbbb
cmpsl
xchg
int
cmp
repnz
and
fxtract
mov
jnp
lahf
pop
scas
pop
jl
cli
xchg
sbb
fisttps
lahf
ret
test
aad
cwtl
je
xor
add
out
push
mov
cli
call
jp
ljmp
insb
add
adc
idivl
int
dec
imul
dec
xchg
cltd
fisubs
out
cmc
mov
ds
loop
fidivrl
movsl
rcrl
sbb
cmpsl
clc
and
sbb
int
jns
loopne
je
jb
mulb
sub
push
out
fdivrs
cmpsl
das
add
lea
and
xchg
hlt
aaa
mov
push
xchg
adc
pop
sbbl
insl
and
popf
js
sbbb
mov
and
push
and
fiaddl
cmp
mov
xchg
jo
or
outsb
leave
dec
es
pop
movb
lds
scas
push
cmpb
popa
mov
and
xor
or
add
mov
roll
adc
mov
dec
pop
jl
vmovaps
sub
mov
lods
subb
out
mov
call
stc
dec
imull
push
pop
cmp
xchg
lock
adc
dec
mulb
mov
cmp
cmpsb
mov
fsts
popf
cmpsb
loop
ja
jo
inc
dec
add
pop
xor
jl
inc
xchg
mov
dec
xchg
push
out
arpl
ds
add
sarb
cltd
jl
jno
or
data16
and
mov
addl
sti
cmp
inc
add
sub
imul
ret
outsb
test
mov
push
popa
cmp
pop
mov
lods
das
fcmovnbe
outsb
xchg
add
jne,pn
std
mov
mov
pop
in
je
sbb
cmp
es
in
sbb
sbb
mov
dec
dec
sbb
pop
add
in
mul
shll
mov
bound
in
jp
jo
repnz
or
sbb
hlt
hlt
dec
out
lods
cmp
cld
add
out
aas
sub
mov
fdivs
cmc
sahf
fldcw
sbb
push
sub
pop
xchg
aad
jnp
push
pop
sbbl
ds
addr16
test
dec
enter
lock
push
dec
sub
shlb
pop
in
aam
shl
mov
jnp
cmp
push
clc
ja
mov
ret
jmp
push
sbb
mov
aad
addr16
mov
test
insb
or
xchg
mov
adc
mov
cmpsl
sbb
add
lcall
rolb
pop
rcll
mov
sbb
test
fs
ja
add
fs
lcall
jb
xor
sub
test
jae
cmp
cmpsb
xchg
push
out
daa
ss
inc
es
lret
stos
in
std
shll
xchg
mov
jnp
pusha
add
pusha
mov
pop
movsl
aam
add
pop
push
sbb
adc
fldcw
inc
pop
mov
insl
pop
jae
push
in
popf
cmpsb
or
pushf
inc
stos
hlt
das
sbb
xchg
jle
mov
aaa
fstpt
and
stc
and
insl
xor
lods
mov
in
push
jo
jl
stos
inc
cmp
repz
lahf
mov
sbb
jo
stos
lds
fwait
push
cs
mov
ss
jmp
cmc
je
stc
xchg
movsb
cld
fwait
in
push
xchg
stc
xor
jmp
inc
dec
ret
pop
or
out
xchg
or
sbb
xor
cld
add
les
cmp
dec
or
pop
mov
xchg
addr16
insb
mov
addb
fbld
push
rolb
hlt
in
pusha
loopne
jae
xchg
ds
jge
outsb
add
into
pushf
xchg
jge
jg
iret
test
jp
test
jbe
xchg
dec
jle
das
subb
and
xor
mov
repnz
cmp
jo
xor
ja
add
cltd
cli
aad
cmp
and
daa
mov
arpl
loop
sbb
int3
sub
jno
jnp
cmp
add
sti
into
cmp
mov
lds
ret
arpl
fidivs
push
sbb
adc
sbb
xor
push
sbb
xlat
fnstsw
add
aam
stc
imul
or
ds
jns
mov
lds
inc
rorb
mov
int3
iret
loopne
pop
shlb
imul
mov
jns
pop
push
daa
adc
insl
mov
lock
fldl
dec
mov
sbb
pushw
sarl
mov
push
cmpsb
mov
adc
orl
imul
mov
sbb
sbb
ljmp
inc
es
and
repz
fmull
vmovaps
adc
inc
mov
repz
sub
imul
xchg
int3
or
mov
add
in
and
test
je
pop
out
push
mov
out
ja
push
out
sti
loopne
xchg
push
mov
jl
cmp
cmp
movsl
and
and
adc
pop
sub
jl
xor
cwtl
ret
lahf
test
sub
push
pop
xchg
pop
pop
push
and
xor
fistl
cmp
aaa
jno
inc
push
mov
inc
sbb
addl
xor
xchg
xchg
mov
fldl
push
fdivl
or
lods
cld
push
xchg
jo
xor
outsb
xorl
adc
stos
pop
das
mov
push
or
sub
repnz
xchg
mov
and
and
jns
sbb
movsb
pop
repz
sbb
mov
cwtl
movsb
icebp
data16
mov
mov
or
icebp
mov
loop
cmp
push
pop
imull
sbb
pushl
dec
decb
jp
jns
inc
xchg
imul
sbb
and
dec
fwait
mov
insb
dec
sub
xor
or
push
mov
shl
and
fsubrs
dec
xchg
fcmovne
xor
jnp
hlt
jbe
scas
cmp
or
push
mov
pop
subb
adcl
xchg
andl
out
imul
xorb
jge
movsb
xchg
sub
leave
enter
push
cmp
or
mov
cmpsl
int
orl
aaa
sub
inc
xor
dec
xor
adc
orl
data16
jno
xchg
dec
push
and
loop
or
cmp
dec
gs
sbb
shll
xor
inc
iret
lds
roll
pop
les
inc
jge
xchg
test
sbb
mov
adc
mov
jae
mov
push
notb
incl
pop
mov
repz
mov
mov
test
aaa
and
fld1
sub
mov
lods
pop
std
je
sbb
hlt
sbb
mov
mov
jge
fisttps
aas
data16
lock
mov
sbb
insl
int3
fiaddl
sbb
and
adc
xlat
fprem1
or
adc
sub
outsl
mov
in
test
adc
cld
or
mov
leave
rcr
push
mov
sub
inc
and
sbb
std
jle
dec
out
mov
xor
jb
sbb
jecxz
fsubr
rcr
loop
lretw
shrl
and
dec
sub
jbe
jle
call
movsl
rcr
push
pop
std
pop
xchg
sub
out
fimull
jl
and
adc
and
cmp
inc
ss
shlb
out
fmull
or
jnp
mov
jnp
sbb
sbb
and
int
jne
adc
fistl
add
add
lods
out
rclb
add
sbb
icebp
imul
pop
cs
cld
aam
xchg
inc
add
mov
das
movsl
cmp
add
jmp
je
inc
faddl
loop
mov
cli
in
xchg
pop
pusha
insl
ss
lods
mul
mov
outsb
adc
lds
adc
fldcw
lock
pop
or
add
andb
cmp
mov
icebp
inc
ret
add
mov
jno
xlat
xor
mov
fildl
pop
test
inc
stc
mov
jp
xor
add
xchg
push
movsl
xchg
test
mov
aam
push
pop
sub
fldcw
inc
inc
mov
mov
push
movb
addb
and
jno
add
or
push
aas
mov
pop
add
fdivs
jns
das
mov
test
loopne
test
and
mov
or
add
jle
xchg
ljmp
or
dec
push
inc
push
mov
out
repnz
nop
scas
jnp,pt
push
mov
pop
hlt
or
ljmp
movsb
jb
adc
neg
sub
int3
mov
fcoml
loop
int3
dec
popl
mov
cmp
mov
and
adc
stos
mov
sbbl
and
ljmp
adc
jnp
pop
out
add
gs
in
push
mov
mov
ret
mov
sbb
js
cmpl
jb
xor
rcr
call
inc
xor
xchg
mov
pop
and
jae
loopne
pop
xor
and
jbe
xchg
lock
inc
rorb
fdivp
jb
cmpsl
addl
push
stos
mov
xor
jo
xlat
mov
pop
push
nop
pop
push
fidivs
push
arpl
sbb
mov
cmp
push
loop
popf
pop
fcoml
cwtl
lods
fs
std
jbe
mov
in
mov
mov
push
push
int3
shlb
push
arpl
sbb
pop
shrl
adc
jmp
push
jb
icebp
repnz
add
sbb
mov
xchg
mov
xor
aad
add
push
mov
fiaddl
jmp
jns
shrl
adc
or
xchg
jbe
cld
xor
insl
testl
out
push
mov
lock
inc
inc
sbb
in
jne
stc
push
jg
push
lret
pusha
lahf
push
faddl
sar
jl
jbe
scas
pusha
rep
push
sub
mov
mov
out
lock
jmp
jnp
mov
add
mov
pushf
jne
and
jae
jg
pop
dec
xlat
sub
pusha
xchg
nop
cltd
lods
jne
dec
adc
in
std
movsb
movsb
jns
sub
push
xor
xchg
dec
xchg
aam
popa
jne
and
stc
sbb
xchg
dec
rcrb
xchg
stc
jg
mov
test
test
lret
insl
xchg
ficoml
fld
push
sbb
pop
cs
lock
into
sbb
dec
pop
mov
cwtl
pushf
and
sbb
push
mov
cltd
push
cmc
jb
daa
mov
cld
mov
inc
pop
jo
sub
shl
push
das
mov
jno
push
xchg
xlat
adc
push
popa
sbb
mov
pusha
daa
jnp
rcr
xlat
sahf
loope
dec
cmp
sub
xbegin
pop
jne
les
fisubl
fists
loop
into
xchg
inc
add
repz
jg
in
pop
ja
stos
fcmovnu
jecxz
ds
add
fs
negb
movsb
in
dec
add
mov
arpl
inc
int
jo
push
fwait
xor
pusha
xor
enter
je
out
dec
sarb
or
icebp
push
popf
mov
push
lret
fdivrp
inc
pop
jge
and
jg
popa
mov
lods
lahf
fcmovne
popf
push
sbbb
xchg
int
leave
push
rorl
mov
sub
mov
negl
imul
fs
add
dec
push
hlt
aam
cli
fld
sahf
xchg
mov
out
jne
mov
mov
jb
add
bound
xchg
sahf
aam
js
push
insl
mov
mov
mov
in
xchg
push
sub
and
mov
adc
lret
mov
push
cld
pop
pusha
pop
in
mov
jmp
adc
arpl
outsl
les
pop
aaa
jmp
push
mov
addr16
or
mov
adc
cmc
sti
mov
dec
shlb
sbb
movsl
pop
scas
movsl
cs
cmp
and
bnd
shlb
aad
jecxz
jbe
sbb
shll
sbb
loope
fisttpll
fnstenv
mov
sbbb
ret
pop
pop
adc
stos
mov
test
xor
inc
push
jmp
clc
cmc
outsl
pushf
jle
xor
xchg
movsl
inc
xor
into
mov
fisubrs
hlt
fdivr
addb
sbb
push
mov
cs
sarb
jno
sub
inc
dec
sub
dec
out
sub
push
sub
stos
inc
jp
mov
addr16
or
xchg
jle
lret
or
mov
sbb
cmp
in
jnp
iret
stos
jbe
cli
push
sbb
insb
sbb
jno
and
fnstcw
fisttps
in
in
mov
mov
push
sahf
dec
fdivp
mov
aam
test
jg
imul
cli
in
cltd
mov
fsubrl
sub
jecxz
push
ja
imul
dec
aaa
sbb
xchg
mov
jge
scas
nop
mov
inc
cmp
push
mov
fs
mov
leave
es
xor
push
mov
stos
fdivl
fisubrs
sbb
mov
xor
cmp
pop
or
test
sbb
cli
jae
jbe
dec
add
xchg
lret
mov
iret
xor
mov
scas
xor
cli
fsubrs
in
jne
cmp
sub
ret
ret
das
sbb
ret
loope
inc
mov
xor
adc
jge
jno
dec
adcl
jae
int
and
xor
adc
ljmp
sub
pop
jb
add
xor
cmp
push
loop
aaa
int3
stc
aas
xor
outsb
dec
sbb
movsb
sbb
pushf
test
cmp
sahf
fldenv
fisttpll
fildl
and
cmc
bound
jo
inc
addl
ss
movsl
repz
addl
lds
or
inc
outsb
loope
sub
loopne
jp
and
adc
jb
and
or
jnp
cmp
push
mov
aad
mov
inc
mov
xor
pushfw
and
mov
dec
push
mov
pop
in
push
cmc
mov
icebp
daa
xchg
dec
adc
nop
inc
xor
daa
sbb
cli
cmc
and
rdpmc
arpl
sub
aam
vcvtsd2si
pop
bound
out
movsb
aas
leave
mov
mov
ret
dec
add
shl
sub
jo
mov
aaa
arpl
nop
test
cltd
inc
in
pushf
cmp
jmp
pop
call
mov
mov
sti
xlat
jle
ret
hlt
cmp
stos
js
icebp
xor
mov
add
mov
add
jae
enter
jmp
test
sub
ret
lret
in
inc
cmpsb
fidivrs
add
hlt
add
and
stc
lods
jge
popa
mov
rolb
jge
inc
lea
les
mov
cmpsl
adc
cmp
insl
mov
push
mov
movsl
add
cmpl
xor
lret
jmp
cmpl
test
pop
cmpsl
cmp
mov
xlat
mov
mov
xor
rcl
out
add
not
sub
loopne
stc
imul
sbb
fiaddl
out
dec
loope
ret
jb
shrl
test
push
jno
adc
addr16
cmp
scas
loopne
mov
lret
dec
jns
faddl
cwtl
jno
inc
lds
imulb
leave
mov
pop
out
xor
lock
mov
cmc
adc
jge
mov
pop
aad
lock
std
xchg
out
cmpsl
cmp
repnz
mov
pop
inc
dec
pop
cmp
fcmovu
cmp
shrb
nop
stos
xchg
add
pop
ja
int
iret
mov
cmp
cmp
inc
into
mov
cltd
sbb
aam
cmp
repz
pop
jmp
push
aam
pop
mov
lret
sbb
add
fwait
pop
rcr
xchg
jae
cs
insb
xor
jle
mov
std
mov
sahf
sub
incl
cmpsb
or
adc
ljmp
call
mull
fistpll
ficomps
mov
mov
xor
icebp
push
jns
sti
repnz
ror
lahf
nop
cmp
cwtl
mov
adc
sbb
int
mov
std
mov
and
iret
je
push
dec
xlat
fisttpll
jecxz
leave
mov
das
rcll
lds
inc
add
jo
fbstp
insb
repz
cmp
fmul
mov
addb
loope
push
mov
add
stos
dec
outsb
cmpl
mov
into
popa
push
pop
mov
jmp
in
xor
orb
hlt
lods
je
and
orps
imul
xchg
loopne
imull
outsb
or
add
stos
jns
fistl
sbb
cmpsb
cmpsb
jle
adc
jo
xchg
sti
aad
mov
cmc
jge
testb
aaa
roll
xchg
scas
jmp
fcom
testl
sti
or
jge
stos
repnz
add
xchg
frstor
pusha
sub
and
pop
out
mov
jp
in
xchg
jnp
int3
jl
xchg
mov
imul
pop
push
jo
mov
and
insb
xchg
cwtl
jno
sub
push
mov
out
icebp
xchg
dec
lret
pmulhw
lods
fnstsw
out
pop
das
stos
push
pop
shl
sahf
adc
ss
xor
stos
jbe
inc
mov
jl
xor
scas
lock
dec
and
dec
adc
ficoml
bnd
push
leave
cmp
pop
popl
xchg
mov
dec
aad
movb
out
lods
cmp
fcompl
daa
pushf
in
cs
push
in
ljmp
ficompl
cltd
mov
cmp
in
mov
push
sub
dec
adc
lahf
sbb
pushf
mov
mov
mov
pop
lock
fdivr
ds
and
cmp
popa
cs
sbb
xor
aas
out
cmc
int3
cs
jmp
or
adc
jae
mov
xchg
or
in
test
xor
cmpsl
add
aam
mov
mov
cmp
xchg
stos
push
push
xor
insb
or
cmpsb
dec
shlb
jo
insl
mov
cli
sub
sub
faddl
push
add
mov
jo
jae
dec
push
mov
mov
fdivrs
bound
mov
test
das
inc
push
push
lea
cwtl
lahf
ret
push
inc
shll
sub
push
mov
jbe
sbb
mov
add
xchg
enter
mov
add
cmpsb
cmp
imul
addr16
iret
loop
or
push
clc
imul
fstl
mov
mov
leave
cmp
push
fwait
mov
sbb
push
ret
add
test
ljmp
testl
pop
jl
xor
leave
daa
push
mov
push
dec
int3
clc
add
aam
addl
mov
dec
and
mov
int
dec
pop
mov
sub
arpl
cs
hlt
or
inc
mov
sbb
out
jp
mov
lock
mov
adc
pop
mov
lea
stos
sti
cmp
push
insb
push
fdivl
lods
jae
pop
sub
aaa
adc
imull
jl
sub
cmp
insl
xchg
cmp
or
frstor
inc
cmc
lods
push
insb
pop
lret
ja
or
pop
jno
jmp
cmpsb
mov
imul
addr16
pop
test
dec
out
lcall
ret
inc
lods
inc
ud0
and
push
pop
jge
dec
div
andl
je
shrl
insl
pop
cli
cmp
lahf
dec
mov
nop
and
xor
ret
test
cmp
ja
inc
pop
mov
lods
mov
stos
jb
push
popl
and
out
sub
jl
sub
xchg
mov
mov
fsincos
or
mov
xchg
and
data16
mov
pop
cmp
xor
and
mov
in
dec
pop
call
ds
cmp
push
shl
lods
push
psubq
adcb
out
mov
loope
xor
cmpsl
loop
lret
xor
sub
and
dec
and
adc
into
jg
mov
pop
rol
xchg
loopne
xor
addr16
pop
xor
je
xchg
xchg
int3
inc
iret
dec
cmp
cmpsl
jbe
inc
or
cltd
movsb
pusha
test
imul
xchg
pop
add
xsaveopt
cli
int3
mov
adc
dec
repnz
nop
push
je
mov
cmp
jbe
stos
lahf
dec
mov
rol
or
mov
jecxz
cmp
xchg
pop
adcl
xlat
mov
sub
insb
push
loope
fistpl
pop
fwait
sar
mov
jno
sbbl
pop
inc
push
test
xor
xor
in
mov
cwtl
rcr
mov
and
gs
jns
adc
xchg
cmp
push
sbb
js
scas
pop
mov
xor
movl
aas
push
in
push
ret
and
sbb
out
shrb
jmp
mov
lds
xchg
popf
iret
sub
cmp
and
cmpsl
lret
inc
aas
lock
xchg
jns
icebp
sbb
clc
xor
lret
cmp
mov
jle
add
add
int
or
push
push
iret
or
aam
pop
aas
xor
lods
and
in
xchg
call
xor
or
pop
pushf
fidivl
fwait
in
jmp
outsl
pushf
test
lods
adc
fs
ljmp
lds
repnz
push
xor
aaa
stc
jo,pt
jno
shll
or
in
flds
fstl
shrb
daa
mov
mov
xchg
cmp
out
test
pop
mov
dec
in
lahf
adc
imul
bound
pop
insl
inc
fstpt
stos
int
ret
std
sbb
test
mov
inc
mov
inc
es
cs
sub
push
outsl
push
mov
into
add
in
leave
rolb
into
inc
jp
fisubs
mov
mov
ds
jg
sub
sub
jl
add
aaa
scas
cmc
cmp
push
mov
inc
xor
adc
mov
outsb
mov
xor
pop
adc
dec
sahf
inc
sbb
xor
call
js
or
stc
pcmpgtw
out
push
mov
and
lret
pop
xchg
into
jp
xor
push
mov
sub
adc
out
pop
lret
inc
xchg
sub
xorb
loope
inc
addl
xchg
xor
sub
pop
mov
stc
iret
or
inc
jmp
pop
fists
icebp
pop
mov
cmp
int
push
jo
pop
icebp
and
call
jae
dec
sub
fidivs
fstps
je
cmp
movb
int
dec
ljmp
ror
mov
call
jg
adc
stc
sub
sbb
xchg
inc
ja
mov
sub
push
cmp
cmp
fadds
test
arpl
call
or
add
cmc
push
arpl
idiv
and
mov
enter
push
inc
mov
stos
cmp
jbe
jmp
xchg
mov
sub
pop
add
sbb
push
fisttpll
push
xchg
mov
or
jecxz
into
sub
movsl
and
pop
in
shrb
push
push
inc
push
int3
dec
mov
fsubs
fisubs
fstpt
movsl
loope
jmp
pop
fucomp
adc
fwait
jo
call
out
int
mov
xor
cmp
fucomip
add
std
out
push
pop
sbbl
push
subl
jnp
jno
ja
jge
or
inc
cmp
fucomp
loop
mov
sub
test
lcall
in
in
pusha
sti
test
jge
gs
push
jne
lahf
addr16
cmpsb
dec
pop
das
xorb
and
cwtl
mov
movl
jns
mov
sbb
push
add
out
dec
stos
imul
mov
ljmp
hlt
jns
jns
outsb
shl
xor
imul
fstps
add
aad
popf
movsb
sbb
loop
lds
in
or
adc
jmp
testb
xchg
into
or
dec
dec
mov
int
jl
sbb
sub
mov
sti
pop
or
xchg
xchg
sbb
gs
pop
jb
nop
add
jecxz,pt
mov
add
adc
add
sar
xor
jnp
cmp
pop
sub
fisttpl
mov
jecxz
xor
movsl
cmp
cld
adc
pop
mov
pushf
dec
in
mov
ss
into
or
push
mov
cmp
jg
adc
mov
add
push
lock
pop
insl
repnz
push
mov
mov
or
loope
mov
mov
add
jecxz
ja
movsl
mov
cmp
mov
in
sti
mov
sarl
cli
xor
data16
push
mov
mov
stc
xchg
sub
xchg
sbb
mov
jl
dec
push
xchg
jp
pop
mov
lahf
mov
popa
adc
jne
adc
sbb
test
cmp
in
dec
fsubrs
mov
gs
andl
fists
xor
in
imul
cmpb
sbbb
sbb
repz
mov
jae
xlat
and
shl
test
int
adc
push
push
imulb
pop
mov
mov
shr
subl
sub
mov
push
dec
inc
and
dec
lock
adc
sub
cwtl
xor
les
add
mov
add
pop
cli
subl
call
fsubrs
fcmovu
fs
outsb
xchg
jl
sub
mov
add
cmpsb
and
and
cmp
jo
pop
bound
call
pop
cmp
fbld
imulb
lods
sahf
outsb
mov
cmpsl
or
and
fs
pop
push
mov
xor
cmp
ds
sbb
and
inc
mov
jp
inc
leave
hlt
or
sub
out
aam
xor
cmp
xor
negb
aaa
cmp
jb
ret
xlat
inc
mov
fs
insb
push
inc
mov
dec
aaa
adc
jbe
inc
mov
adcb
lcall
sahf
mov
jp
xor
jp
arpl
or
ret
hlt
adc
ss
mov
loop
popl
fnsave
adc
shrb
lods
popa
je
test
and
push
hlt
xchg
mov
cli
sub
lods
mov
add
icebp
in
push
lea
out
clc
test
or
push
fistps
mov
jae
dec
pop
pop
jo
add
cli
sahf
and
in
fnstenv
data16
das
cmp
sbb
pop
icebp
arpl
add
and
mov
scas
xchg
push
imul
or
in
orb
dec
imul
jnp
sbb
push
add
lods
xor
add
adc
gs
xor
push
dec
mov
push
add
dec
jl
push
ret
mov
jge
pop
je
push
jle
cmp
fdivrl
adc
lret
xchg
xchg
inc
push
xor
ljmp
sbb
out
mov
pop
add
jb
lcall
into
mov
xor
pop
inc
pop
cmp
test
pop
jge
push
in
testb
push
mov
xor
mov
push
into
in
inc
stos
outsl
shll
mov
xchg
call
or
mov
sti
loop
hlt
fbstp
sbbb
cld
inc
lods
enter
and
cmp
shrb
mov
cmpsl
xchg
mov
inc
mov
test
sbb
js
lcall
ss
jne
lret
pop
mov
mov
inc
movb
push
add
jo
test
sub
cmp
rcrl
xchg
in
das
fs
mov
orb
and
data16
daa
in
push
notb
inc
sbb
mov
jno
fadd
test
inc
sub
add
pop
out
outsl
jnp
fs
idivl
xchg
lahf
mov
add
ds
jl
lds
mov
pop
movaps
gs
mov
xchg
jge
ja
xor
cmpsb
jo,pt
pushf
cmp
orl
in
adc
scas
subl
xchg
mov
clc
pop
jae
insl
xchg
mov
or
fdivr
pop
xor
lcall
mov
mov
xlat
xor
adc
pop
jo
mov
jne
mov
sub
xor
mov
xor
xchg
int3
pop
mov
nop
incl
inc
subl
xor
icebp
orl
gs
rcl
pushf
dec
sbbl
sbb
cmp
rcll
es
jl
loopne
xor
jle
repz
adc
outsb
daa
inc
arpl
inc
fisttps
jp
or
mov
iret
jno
in
adc
xchg
ret
sbb
adc
sbb
adc
arpl
stc
rorl
mov
mov
js
mov
lcall
cmp
fildl
add
into
jge
scas
pop
pop
pop
xor
add
and
lret
addr16
movzwl
cmp
add
mov
jmp
lock
insb
movsl
sub
sahf
gs
popf
push
inc
pop
fistpl
sbb
push
mov
sahf
shrb
jne
adc
mov
movsl
outsb
dec
push
fsubrl
mov
jne
inc
mov
push
shll
mov
mov
sbb
mov
in
adc
mov
call
lods
stc
fsts
fcmovne
sbb
imul
pandn
stos
dec
adc
jae
xchg
mov
cltd
jge
pop
cmpsb
adc
lahf
xchg
int
jl
not
outsl
pop
mov
popa
jmp
sub
scas
inc
or
loop
movsb
dec
test
cmpl
in
mov
out
nop
xchg
fisubrl
int
cwtl
loop
lcall
mov
mov
pop
xchg
inc
sbb
adc
cmp
adc
dec
hlt
addr16
mov
in
andb
repnz
mov
gs
cs
aam
sbb
insb
int3
outsb
lods
mov
add
jb
and
dec
loope
outsl
daa
sbb
movsl
in
scas
pop
loop
inc
popf
xchg
push
stos
stos
sub
imul
xlat
and
scas
mov
testb
xchg
xor
sub
dec
inc
repz
jl
and
daa
aas
sub
xchg
divl
xor
lret
test
not
cs
lods
cs
mov
xchg
xchg
out
sub
pop
hlt
mov
popf
stc
jnp
js
adc
mov
pop
sarl
aas
subl
and
and
xchg
mov
pop
jp
push
fldl
stc
jae
std
in
mov
fcmovnb
inc
sbb
mov
mov
mov
dec
push
sbb
cld
inc
call
jno
mov
inc
inc
ret
rcrl
pop
in
fildl
jge
rcr
and
adc
xchg
push
and
iret
mov
mov
push
subl
push
repnz
subl
xor
test
pop
ljmp
insl
loopne
xorb
xchg
dec
into
jecxz
mov
pop
push
sti
adc
cld
mov
mov
test
std
mov
into
pusha
faddl
mov
lea
xchg
movsl
popf
mov
insl
push
push
iret
pop
push
popf
push
cmpsb
xchg
jle
cmp
fisubs
popf
inc
shrl
and
subb
mov
roll
mov
movsl
sti
in
clc
test
mov
push
aaa
inc
inc
mov
std
sub
or
adc
and
das
hlt
sarb
mov
sbb
mov
sbb
cmpsb
push
and
dec
jle
cmp
lods
stos
add
xor
movsb
xlat
scas
mov
int
jo
subb
clc
xchg
movsl
imul
dec
cli
cmpsl
in
mov
and
addr16
jle
cmc
jge
scas
sub
mov
cmpsb
je
bound
push
cmpsl
mov
xorb
mov
cmp
push
xor
inc
cmpsl
jp
scas
call
jmp
sub
std
push
arpl
cli
xorb
fstp
sub
jge
stos
and
ret
or
add
mov
xchg
daa
sub
popa
addr16
in
out
sub
mov
or
mov
test
dec
mov
push
mov
ss
inc
adc
ret
ffree
dec
dec
mov
xor
ret
fiadds
jae
loope
lahf
xor
subl
clc
push
adc
loopne
aam
adc
dec
clc
dec
mov
jle
mov
sub
pop
jmp
adc
andb
pop
imul
jns
insb
fs
cmp
lods
std
mov
pop
push
iret
add
into
sar
outsb
repz
jbe
inc
out
daa
inc
sub
das
mov
pop
out
and
rorb
in
inc
xchg
stos
dec
sbb
adc
mov
in
pop
or
xor
inc
lods
in
push
xchg
xchg
and
cmp
sahf
shrb
ljmp
xor
inc
or
pop
outsb
subb
push
dec
pushf
jl
aam
push
bound
aam
out
add
ds
mov
mov
sbb
mov
and
ja
in
insb
cmp
andl
int
aaa
push
inc
dec
enter
mov
inc
push
and
repz
popa
out
jp
pop
popa
sar
cmp
sub
mov
jl
dec
jne
mov
cmp
mov
in
pop
aad
clc
nop
jecxz
jb
push
movsl
sbb
lods
xlat
xchg
push
cli
in
inc
jb
test
sbb
fs
rcrl
xor
test
xchg
scas
ja
jp
push
fwait
dec
adc
jecxz
mov
cmp
int3
jmp
out
loopne
es
scas
sbb
jb
mov
push
shll
add
repz
ss
enter
add
sti
sbb
into
mov
data16
dec
sub
rcll
insl
pop
nop
fimuls
arpl
jmp
fsubrl
jp
movsb
sub
sub
fadd
mov
sub
fucomip
cld
mov
xor
xchg
stos
cmp
cmp
sar
pop
rorb
and
in
fimull
mov
mov
loopne
sarb
mov
add
out
inc
cmpb
xor
dec
mov
mov
pop
outsl
ret
mov
mov
mov
inc
pop
sbb
adc
jmp
aaa
sub
push
addl
cmp
xchg
xor
push
xchg
pop
xor
pop
add
lret
ja
mov
push
gs
mov
add
leave
push
in
jbe
ret
rcll
xor
lea
cmc
cmp
cmc
scas
mov
gs
fldcw
ljmp
push
fidivl
mov
out
push
cmc
jmp
or
pop
and
pop
adc
dec
into
and
filds
ret
in
mov
sub
dec
sub
icebp
sti
inc
std
and
add
std
pushf
imul
clc
insl
jns
mulb
les
out
ja
jle
add
aaa
push
mov
sub
arpl
sbb
pop
lahf
stos
test
lea
int3
and
in
and
aam
mov
loope
lea
jg
or
xchg
aam
out
mov
filds
je
dec
popf
or
xchg
mov
pop
sbb
xor
movsb
mov
fs
je
mov
movsb
push
shll
das
adc
cli
imul
jmp
ss
stc
adc
mov
xchg
aaa
mov
xor
lret
nop
push
clts
testl
mov
xor
int3
mov
loope
out
fs
jne
inc
into
out
rcrb
fldcw
xchg
push
mov
sbbl
sub
dec
adc
mov
dec
mov
cmp
mov
leave
sbb
out
stos
out
mov
dec
mov
je
xchg
dec
fisttps
outsb
aam
jbe
fildl
jno
fisubs
mov
pushf
and
fld
insl
push
mov
loopne
mov
adcb
sub
fwait
dec
lret
sbb
movsb
or
call
in
mov
aas
in
imul
lods
mov
repz
and
lock
int3
stos
loopne
gs
lds
xchg
xchg
push
ret
hlt
subl
mov
arpl
mov
dec
insb
inc
sub
movsl
sbb
sub
fidivs
push
aad
add
sbb
or
cmp
sbb
xor
sarb
xor
paddb
movsl
pop
cmp
aaa
mov
mov
insb
mov
adc
inc
bound
cwtl
mov
xchg
mov
es
pushf
pusha
out
sti
mov
pop
mov
mov
adc
inc
test
movsb
test
loop
and
adc
dec
fdivl
negb
cmp
aaa
imul
orb
fsubrl
pop
mov
pop
nop
lods
ffreep
mov
inc
into
fwait
or
mul
mov
aad
loopw
movsb
dec
out
dec
pop
lcall
mov
xor
xchg
mov
in
out
or
inc
test
push
jl
jo
out
incl
sbb
mov
mov
jnp
inc
push
adc
cmpsl
arpl
scas
mov
clc
inc
or
mov
mov
dec
lea
mov
scas
lods
dec
sbb
mov
popf
and
mov
pop
inc
pop
jmp
rcrl
push
xchg
sbb
inc
mov
cwtl
lds
in
imul
stos
ss
addl
iret
popl
pusha
in
sub
inc
push
adc
sub
cli
xchg
inc
lods
or
add
push
arpl
movsl
imul
mov
cmpsl
and
pop
ja
fistps
jae
jno
loope
cmp
push
xor
xlat
and
sahf
loope
xor
xor
adc
stc
push
repz
lea
mov
sbb
inc
das
mov
add
xor
sub
mov
adc
or
add
mov
pop
data16
push
mov
adc
call
in
dec
mov
lods
jl
fninit
lahf
das
or
sub
jmp
stos
out
push
inc
inc
subb
jecxz
cwtl
xchg
pop
xor
stos
lea
push
aam
ret
fs
or
shrl
in
fs
imul
sbb
xchg
push
inc
mov
imul
ficomps
pop
mov
inc
cmc
sub
je
add
idivb
subb
cmp
fisubrl
adc
mov
outsb
mov
push
aaa
inc
push
inc
shr
sahf
dec
vmovss
sbbl
cmpsb
jnp
jne
fdivl
repz
int
add
pop
jp
adc
jmp
into
xor
out
loopne
xchg
fs
or
sbb
mov
dec
xchg
aas
js
loope
int
dec
xchg
in
mov
xor
enter
hlt
sub
stos
cmc
je
stos
gs
sub
or
cli
mov
mov
int3
rcll
pop
xor
dec
jo
mov
es
push
or
mov
lock
icebp
loope
scas
xor
mov
call
fistps
jae
cmp
adc
dec
das
sub
add
pop
mov
in
inc
sti
mov
shl
dec
mov
dec
in
xor
outsl
imul
mov
repnz
cwtl
in
sub
cs
xor
or
cmp
sub
dec
insb
xor
imul
inc
sbbb
hlt
imul
outsb
jge
rorl
jmp
inc
xchg
ficomps
in
add
sub
jp
and
orb
xchg
push
xor
sbbb
push
adc
lds
insl
stos
cmp
adc
xchg
adc
js
mov
or
cmp
je
shll
push
adc
loope
and
mov
mov
jo
and
or
mov
stos
mov
or
fldcw
mov
fstl
mov
fisttps
push
leave
cmp
and
mov
xchg
push
rcrb
jne
mov
shll
xchg
mov
cmpsl
shl
mov
mov
enter
jb
dec
vmovntdq
xchg
fcoms
repnz
push
mov
mov
ds
jl
fadds
fs
xchg
pop
in
xor
cmp
mov
stc
daa
and
add
fcoml
dec
pop
cld
jne
mov
test
or
ja
sbb
cwtl
mov
add
inc
clc
addr16
in
jmp
jmp
xchg
fnstenv
adc
cmp
je
push
fildll
out
imul
adc
add
push
out
iret
pop
test
push
lret
fsubs
jnp
mov
xchg
and
gs
fcmovne
xor
into
xchg
xchg
ss
xchg
jecxz
or
xor
ds
es
dec
cmp
enter
xor
dec
push
es
mov
ljmp
push
push
popf
mov
cld
or
movsl
sbb
or
add
mov
stc
bound
repnz
inc
sub
xor
lahf
jl
pop
pop
sbb
jbe
aaa
cmc
rolb
mov
or
jae
xchg
stos
jecxz
je
mov
mov
add
jne
ds
aad
add
mov
inc
and
mov
cmc
out
fs
das
inc
movl
xchg
push
clc
lret
mov
fimuls
dec
scas
addl
fsubl
push
xchg
loop
ret
orl
dec
xchg
out
and
mov
mov
mov
push
ret
xor
cmp
popa
cltd
dec
jl
repz
inc
testl
clc
and
sub
pop
xor
into
lret
test
aad
push
in
mov
mov
adc
mov
leave
xor
call
test
mov
testb
sub
mov
sbb
dec
sub
add
sbb
dec
test
cltd
leave
mov
push
test
mov
mov
jnp
in
ds
pop
mov
in
jb
adc
jge
lret
jg
ja
shlb
inc
adc
sbb
insl
bound
dec
js
mov
ja
xor
into
pop
cmp
cs
ja
aaa
cld
mov
inc
mov
lds
ds
xchg
mov
adc
and
jo
pop
scas
mov
jno
popl
rclb
out
jmp
jns
repnz
push
or
je
fistl
repnz
lods
pop
mov
dec
pop
fnstcw
out
add
clc
push
or
cmp
and
fldcw
or
cmp
stc
sub
imul
ljmp
in
sbb
arpl
outsl
xchg
sub
fwait
das
jae
jle
push
cmp
sahf
inc
or
inc
popa
nop
loope
popa
sti
pop
cmp
test
in
cwtl
out
mov
addb
lock
xor
mov
jmp
call
aam
outsb
aas
test
or
cltd
and
negb
addl
xor
jmp
inc
aaa
faddl
fcoml
shr
pusha
dec
je
jmp
jbe
hlt
lods
cld
outsb
std
je
lahf
aad
into
push
xchg
mov
lds
mov
sbb
cmp
test
ds
or
insl
movsb
mov
inc
or
inc
mov
mov
lock
or
test
inc
add
add
and
and
adc
push
mov
lret
lret
ucomiss
adc
lret
mov
out
push
mov
imul
js
push
pop
sbb
cli
sti
mov
sub
cmp
fcmove
cmp
sahf
movb
lret
into
dec
add
push
sub
jnp
int
adc
cld
dec
push
fldl
insl
mov
mov
push
mull
cmp
jno
shlb
cs
negb
pusha
add
btr
enter
ret
push
in
sbb
sub
or
cmpl
jno
lret
pop
sbb
xchg
mov
push
rcrb
mov
mov
adc
jns
pop
dec
jae
sbb
inc
aad
popf
or
sahf
sbb
lret
push
loopne
adc
std
sub
insb
sub
loopne
shlb
lods
lods
fimull
xchg
hlt
in
sbb
xchg
add
in
ret
pushf
xor
fs
lock
inc
mov
ret
negb
clc
adc
out
imul
ret
ja
mov
xlat
pop
pop
inc
mov
push
jg
push
xchg
roll
test
int
sbb
aaa
sub
xchg
xor
repnz
sbb
sbb
sbb
xor
xor
jg
ret
rep
stc
xchg
test
cmp
cmpsl
test
scas
js
out
addr16
pop
es
frstor
adc
mov
dec
push
or
clc
adc
inc
push
xchg
inc
fistpl
lret
mov
add
sub
movsl
sub
xor
loop
or
aaa
sbb
pop
in
mov
cld
adc
mov
inc
ja
stos
pop
or
mov
call
fs
fs
mov
inc
lods
push
push
or
mov
inc
pop
push
mov
gs
inc
sub
cmp
push
jle
mov
pop
into
popa
xor
gs
xchg
nop
push
pop
addr16
add
shlb
mov
add
jecxz
cmpsb
or
fbstp
cld
call
mov
imul
push
arpl
sub
fcoml
arpl
add
jae
add
push
jle
adc
cmc
mov
lea
popa
imul
pop
sub
ljmp
icebp
out
loopne
xchg
fcoms
sti
out
add
add
pop
ja
pop
sub
fcomps
pop
aas
sbbl
mov
les
je
rolb
adc
jb
fsubp
inc
mov
les
mov
jl
adc
dec
dec
inc
dec
ljmp
adc
enter
push
lds
scas
test
dec
and
mov
push
push
stos
test
dec
add
adc
dec
mov
pop
shrl
std
test
clc
in
cmp
dec
jg
sbb
adc
mov
inc
cmp
cmc
je
pop
arpl
and
scas
lcall
jmp
sub
inc
lods
dec
push
mov
or
nop
and
aad
jns
or
and
mov
jns
sbbb
or
out
push
outsl
xor
cld
xchg
movsb
lods
or
test
into
sub
lds
in
cmc
pop
pop
mov
adc
outsl
arpl
add
push
mov
lret
pop
stc
fdivr
repz
xchg
arpl
popl
cmpsb
mov
movsl
into
mov
lcall
sub
dec
push
xchg
add
sub
les
mov
shlb
sarb
std
popf
mov
lcall
repz
fwait
mov
and
mov
mov
aaa
gs
cli
std
rol
cmc
xchg
push
pop
aaa
xchg
xlat
mov
pop
sbb
test
nop
mov
xlat
cmpsl
mov
sub
gs
jl
push
roll
or
push
insb
cmp
test
sbbb
mov
es
cmp
push
push
or
jg
and
push
lds
les
lods
cmp
mov
sbb
cmp
fdivp
pusha
andl
sbb
lret
mov
mov
scas
test
mov
subl
mov
add
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
push
and
add
add
jno
add
jno
add
sub
add
pop
and
in
push
and
mov
jb
add
adc
nop
inc
adc
mov
xor
add
adc
or
adc
fdivs
adc
sarb
add
dec
adc
nop
movsl
or
push
cli
push
add
sti
push
add
jg
add
or
mov
pusha
add
lock
push
add
mov
add
xchg
add
addl
add
in
or
loopne
pop
add
cltd
or
and
or
push
sbb
add
sbb
add
mov
pop
add
fiaddl
add
mov
add
rorb
inc
popa
or
sbbb
add
mov
or
and
pop
add
addb
rolb
pop
add
push
add
mov
add
push
add
push
add
push
add
testl
add
icebp
or
xor
or
lock
push
add
pop
add
jge
add
rorb
add
or
nop
lret
or
mov
insb
or
adc
push
add
xlat
or
nop
add
out
or
and
or
rcrb
mov
add
rol
add
popf
or
lock
or
adc
or
lock
adc
or
loopne
pop
add
out
add
testb
push
aam
add
or
lock
add
or
jo
or
lock
or
adc
add
loop
add
nop
add
add
pop
add
popf
or
and
add
addl
add
test
pop
add
add
add
outsb
add
add
gs
add
pop
add
lea
add
lahf
or
shrb
nop
cltd
or
pusha
insb
push
add
cmc
or
adc
pop
add
pop
add
add
jo
pop
add
jl
add
jns
add
and
add
pop
add
xchg
add
add
lea
add
arpl
add
loop
add
or
nop
outsl
push
add
push
add
push
add
rolb
add
imul
andb
add
call
pop
add
imul
ror
add
rolb
add
xchg
or
mov
fisttps
add
test
add
mov
add
or
pusha
repz
xor
or
inc
insl
push
add
mov
add
add
mov
add
add
or
xor
add
add
and
add
and
add
es
add
add
add
movl
add
add
add
stos
pop
add
mov
add
mov
add
mov
add
lret
push
add
pop
pop
add
or
add
les
add
xchg
add
add
adc
add
push
or
rclb
add
add
in
add
lret
push
add
adc
add
add
or
xor
pop
add
pop
add
add
or
rclb
add
fmuls
add
or
adc
add
add
cmpsl
push
add
push
add
lock
adc
or
and
add
out
or
rclb
mov
or
rclb
add
icebp
pop
add
add
cltd
or
inc
mov
pop
add
add
pop
add
pop
add
add
pop
pop
add
pop
add
popa
pop
add
fimuls
add
mov
add
cmpsl
or
inc
lret
or
inc
cmp
or
push
repnz
rclb
add
push
add
add
mov
add
ljmp
nop
fldl
add
pop
add
jmp
pop
add
faddl
add
pop
add
in
add
fiadds
add
incb
add
insb
pop
add
add
jo
or
jo
or
pusha
jmp
or
rolb
or
and
or
jo
or
jo
or
jo
or
jo
or
push
mov
add
add
add
roll
add
enter
mov
pop
add
into
pop
add
int3
pop
add
pop
add
pop
add
roll
add
fadds
add
pop
add
fadds
add
mov
add
testb
jo
add
lock
add
add
mov
add
in
add
xchg
or
rcrb
add
or
push
leave
or
add
pop
add
or
mov
repz
inc
cli
or
rol
add
add
clc
or
mov
cmc
or
mov
lds
add
rorb
add
or
shl
or
nop
mov
or
and
or
push
adc
add
and
add
add
lock
add
inc
add
nop
dec
add
mov
pop
add
push
pusha
add
shlb
xor
add
mov
add
lcall
nop
test
add
loopne
add
inc
mov
add
mov
inc
or
lock
add
fiadds
add
in
add
lcall
nop
mov
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
pop
add
add
pop
add
popa
add
arpl
add
data16
push
add
insb
add
outsb
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
addb
add
add
add
add
add
add
add
xchg
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
pop
add
add
pop
add
popa
add
arpl
add
add
push
add
insb
add
outsb
add
jo
xchg
pusha
and
test
and
mov
pusha
and
icebp
pusha
and
or
add
popa
and
inc
popa
and
pop
popa
and
jp
and
cwtl
popa
and
mov
popa
and
sti
popa
and
sbb
bound
add
and
scas
bound
add
bound
add
arpl
add
and
je
and
mov
arpl
add
arpl
add
and
cmp
js
and
mov
and
out
and
add
and
inc
and
pusha
and
mov
add
and
in
and
sub
add
and
outsb
and
and
lods
and
jecxz
and
sbb
add
and
pop
and
jns
and
xchg
and
mov
and
in
and
add
and
and
add
push
and
jge
and
stos
push
and
imul
add
imul
add
imul
add
and
jne
and
xchg
push
add
push
add
push
add
imul
aaa
imul
push
imul
mov
add
imul
imull
add
insb
and
inc
insb
and
insl
insb
and
xchg
stos
insb
and
lret
add
insb
and
cs
and
push
insl
and
js
and
xchg
insl
and
mov
and
aad
and
push
outsb
and
sub
add
and
jno
and
outsb
and
test
and
ret
outsb
and
fsubrl
add
outsb
and
adc
and
sub
outsl
and
mov
outsl
and
out
and
or
and
das
jo
add
and
imul
add
jo
add
jo
add
jno
add
and
outsl
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
add
and
fnstenv
add
jb
add
jae
add
jae
add
jae
add
and
jbe
and
mov
add
jae
add
je
add
and
bound
xorb
je
add
je
add
je
add
jne
add
jne
add
and
mov
add
jne
add
jne
add
jbe
add
and
xorl
shll
std
jbe
add
ja
add
and
xchg
ja
add
ja
add
js
add
js
add
js
add
js
add
js
add
jns
add
jns
add
and
das
jns
add
and
dec
jns
add
and
jnp
and
mov
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jp
add
jp
add
jp
add
jp
add
jp
add
and
push
jp
add
and
jb
and
jnp
and
mov
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
and
sbb
add
jnp
add
and
ss
add
and
dec
jnp
add
and
pop
jnp
add
and
jne
and
xchg
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jl
add
jl
add
and
dec
jl
add
and
push
and
jl
and
mov
xchg
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jge
add
jge
add
jge
add
jge
add
and
pusha
jge
add
and
jnp
and
mov
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jle
add
jle
add
jle
add
jle
add
and
push
jle
add
add
and
cmpb
mov
add
jle
add
and
lret
jle
add
jle
add
jle
add
jg
add
jg
add
and
jg,pn
add
and
push
jg
add
and
jge
and
mov
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
andb
adc
and
sub
and
xor
and
dec
andb
pop
andb
jae
and
mov
and
test
andb
ret
andb
iret
andb
fiaddl
and
repnz
add
andl
add
andl
add
andl
add
and
andl
add
andl
add
and
filds
and
add
and
push
andb
sub
and
dec
andb
pop
andb
imul
and
mov
and
movsb
andb
mov
and
ret
add
andb
loopne
and
in
andb
cld
andb
or
andl
andl
xor
and
dec
andl
pop
andl
andl
outsl
andl
jl
and
mov
and
movsb
andl
mov
andl
rolb
and
jmp
andl
incl
pop
inc
inc
pop
xor
dec
inc
dec
dec
inc
cmp
aas
and
inc
inc
add
aas
pop
inc
inc
pop
xor
dec
inc
dec
inc
xor
and
inc
inc
add
aas
pop
inc
inc
pop
xor
inc
xor
popa
arpl
and
inc
inc
add
aas
pop
inc
inc
pop
xor
dec
dec
inc
dec
inc
aaa
xor
je
aas
and
inc
inc
add
aas
pop
inc
inc
pop
xor
dec
dec
inc
inc
inc
xor
je
aas
and
inc
inc
add
aas
pop
inc
inc
pop
xor
dec
inc
inc
dec
inc
bound
imul
je
and
inc
inc
add
aas
pop
inc
inc
pop
xor
inc
inc
dec
inc
inc
inc
insb
popa
jae
bound
addr16
and
inc
inc
add
aas
pop
inc
inc
pop
xor
inc
inc
dec
dec
inc
dec
inc
inc
jb
outsb
popa
fs
and
inc
inc
add
aas
pop
inc
inc
pop
xor
dec
inc
inc
dec
inc
xor
cmp
outsb
jne
aas
and
inc
inc
add
aas
pop
inc
inc
pop
xor
dec
dec
dec
inc
xor
je
inc
outsl
js
and
inc
inc
add
aas
pop
inc
inc
pop
xor
inc
inc
dec
inc
inc
push
insl
outsl
imul
outsb
popa
fs
and
inc
inc
add
inc
outsb
addr16
popa
jb
outsl
jbe
inc
outsl
outsb
gs
inc
inc
popa
jae
push
outsl
addr16
gs
inc
push
inc
inc
pop
pop
pop
add
inc
outsb
imul
imul
jb
je
inc
inc
push
inc
inc
pop
pop
pop
add
inc
outsb
imul
je
insb
inc
gs
fs
inc
push
jo
imul
pop
pop
pop
add
inc
jb
outsl
jne
jns
outsl
jne
push
insl
outsl
jne
jns
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
je
gs
jo
push
outsl
dec
popa
je
jb
popa
insb
imul
jae
push
insb
popa
jns
jb
je
insl
inc
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
insl
bound
addr16
outsl
jne
push
insl
bound
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
outsl
insl
bound
addr16
jae
inc
inc
inc
outsl
insl
bound
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
inc
outsl
je
outsl
jne
push
inc
outsl
je
inc
inc
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
outsl
jne
arpl
imul
inc
inc
inc
imul
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
outsl
jne
arpl
outsl
jne
push
outsb
popa
fs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
jb
popa
imul
push
gs
imul
gs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
jne
je
outsb
inc
popa
arpl
outsl
insl
gs
inc
inc
popa
jae
inc
jne
je
outsb
inc
inc
push
inc
inc
pop
pop
pop
add
inc
jne
je
outsb
push
gs
jb
inc
inc
inc
popa
jae
inc
jne
je
outsb
inc
inc
push
inc
inc
pop
pop
pop
add
inc
jne
je
outsb
push
jo
jb
inc
inc
inc
popa
jae
inc
jne
je
outsb
inc
inc
push
inc
inc
pop
pop
pop
add
inc
jne
je
outsb
push
outsl
jne
push
jae
inc
jne
je
outsb
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
jne
je
outsb
push
jae
inc
inc
inc
popa
jae
inc
jne
je
outsb
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
inc
jne
push
outsl
jne
push
jns
outsl
outsb
gs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
xor
push
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
inc
xor
outsl
jne
push
outsb
popa
fs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
popa
insb
insb
inc
outsl
inc
outsl
ja
inc
inc
inc
jne
arpl
popa
je
inc
push
inc
inc
pop
pop
pop
add
inc
popa
insb
insb
dec
imul
inc
inc
inc
jne
arpl
popa
je
inc
push
inc
inc
pop
pop
pop
add
inc
popa
insb
insb
dec
imul
jne
arpl
popa
je
inc
push
inc
inc
pop
pop
pop
add
inc
popa
outsb
push
push
inc
dec
je
insl
push
outsl
fs
inc
inc
push
inc
inc
pop
pop
pop
add
inc
popa
outsb
push
outsl
jne
push
gs
push
outsl
fs
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
push
inc
jb
arpl
outsb
inc
inc
inc
jb
arpl
outsb
dec
outsl
imul
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
outsl
jb
jae
inc
popa
insb
insb
push
push
inc
inc
popa
jae
dec
outsl
outsb
jae
gs
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
jne
je
jb
jae
inc
inc
inc
popa
jae
push
jb
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
inc
popa
insl
popa
addr16
push
inc
dec
imul
addr16
inc
push
inc
inc
pop
pop
pop
add
inc
popa
outsb
addr16
outsl
jne
fs
push
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
inc
gs
fs
outsb
fs
inc
inc
jne
arpl
arpl
jb
imul
pop
pop
pop
add
inc
gs
fs
outsb
fs
inc
inc
jne
arpl
push
inc
inc
push
inc
inc
pop
pop
pop
add
inc
gs
jne
je
outsl
jne
push
jae
push
insb
popa
jns
jb
insl
insl
outsl
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
gs
jne
je
outsl
jne
push
jae
push
insb
popa
jns
jb
je
insl
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
gs
popa
jns
push
inc
inc
popa
jae
inc
gs
popa
jns
inc
push
inc
inc
pop
pop
pop
add
inc
gs
jb
jns
je
insl
inc
inc
inc
popa
jae
push
insb
popa
jns
jb
je
insl
inc
inc
push
inc
inc
pop
pop
pop
add
inc
gs
outsb
popa
je
xor
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
inc
gs
outsb
popa
je
xor
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
inc
gs
outsb
popa
je
inc
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
inc
gs
outsb
popa
je
push
jae
inc
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
inc
imul
popa
imul
gs
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
outsl
jb
outsl
inc
outsl
ja
inc
inc
inc
popa
jae
inc
outsl
outsl
jb
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
outsl
jb
outsl
push
jo
inc
inc
popa
jae
inc
outsl
outsl
jb
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
outsl
jb
imul
inc
inc
inc
popa
jae
inc
outsl
outsl
jb
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
outsl
jb
imul
popa
jae
inc
outsl
outsl
jb
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
outsl
jb
outsl
jne
push
jae
inc
outsl
outsl
jb
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
outsb
fs
arpl
outsb
push
outsl
jne
push
imul
fs
arpl
outsb
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
outsb
fs
arpl
outsb
push
jae
inc
inc
push
jb
addr16
outsb
fs
arpl
outsb
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
inc
jae
popa
jo
push
outsl
jne
push
arpl
gs
outsl
outsb
gs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
js
arpl
gs
push
dec
gs
insb
inc
inc
inc
push
dec
gs
insb
inc
inc
push
inc
inc
pop
pop
pop
add
inc
js
popa
outsb
fs
push
inc
push
jo
imul
pop
pop
pop
add
inc
js
insb
outsl
fs
outsl
jne
push
outsb
popa
fs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
inc
popa
insb
insb
push
push
inc
inc
popa
jae
push
insb
popa
jns
jb
je
insl
inc
inc
push
inc
inc
pop
pop
pop
add
inc
imul
inc
inc
inc
jne
arpl
jb
popa
jb
imul
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
inc
imul
outsb
arpl
arpl
push
inc
inc
push
inc
inc
pop
pop
pop
add
inc
imul
outsb
arpl
arpl
jb
imul
pop
pop
pop
add
inc
imul
outsb
arpl
imul
outsl
insb
jae
inc
push
inc
inc
pop
pop
pop
add
inc
imul
outsb
arpl
push
inc
inc
push
inc
inc
pop
pop
pop
add
inc
imul
outsb
arpl
push
inc
outsl
outsb
je
outsl
insb
jae
inc
push
inc
inc
pop
pop
pop
add
inc
imul
imul
jne
bound
addr16
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
insb
insb
outsl
ja
popa
jb
gs
inc
push
jb
addr16
popa
insl
gs
inc
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
inc
outsl
ja
inc
inc
inc
jne
arpl
arpl
push
inc
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
push
jo
inc
inc
jne
arpl
arpl
push
inc
inc
push
inc
inc
pop
pop
pop
add
inc
jb
jbe
je
push
outsl
jne
push
imul
popa
jbe
je
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
dec
outsl
jae
popa
addr16
gs
jne
push
outsl
jne
push
jae
popa
addr16
gs
jne
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
dec
jne
je
outsl
jne
push
jae
push
jb
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
dec
jne
je
outsl
jne
push
outsb
arpl
je
je
outsb
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
dec
fs
gs
push
inc
dec
outsl
jae
popa
addr16
inc
push
inc
inc
pop
pop
pop
add
dec
je
insl
push
outsl
jne
push
gs
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
dec
imul
jo
outsb
inc
outsl
js
inc
push
inc
inc
pop
pop
pop
add
dec
imul
jbe
inc
outsl
outsb
gs
inc
inc
popa
jae
push
outsl
addr16
gs
inc
push
inc
inc
pop
pop
pop
add
dec
outsl
popa
fs
push
inc
push
gs
jb
push
popa
jbe
fs
inc
push
inc
inc
pop
pop
pop
add
dec
popa
outsb
popa
addr16
push
inc
dec
jne
je
dec
popa
outsb
popa
addr16
inc
push
inc
inc
pop
pop
pop
add
dec
popa
outsb
popa
addr16
jae
inc
inc
dec
jne
je
dec
popa
outsb
popa
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
dec
popa
je
jb
popa
insb
imul
jae
push
insb
popa
jns
jb
insl
insl
outsl
inc
inc
push
inc
inc
pop
pop
pop
add
dec
popa
je
jb
popa
insb
imul
jae
push
insb
popa
jns
jb
je
insl
inc
inc
push
inc
inc
pop
pop
pop
add
dec
popa
je
jb
popa
insb
imul
gs
inc
inc
push
inc
inc
pop
pop
pop
add
dec
gs
popa
addr16
push
inc
push
gs
jb
push
popa
jbe
fs
inc
push
inc
inc
pop
pop
pop
add
dec
outsl
jb
popa
jb
js
insb
outsl
fs
inc
dec
outsl
jb
popa
jb
inc
push
inc
inc
pop
pop
pop
add
dec
jne
je
push
outsl
jne
push
jae
push
jb
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
dec
jne
je
push
popa
imul
inc
popa
jae
push
jb
addr16
inc
push
inc
inc
pop
pop
pop
add
dec
gs
jb
jae
push
popa
je
inc
inc
inc
jne
arpl
arpl
jb
imul
pop
pop
pop
add
dec
gs
jb
jae
push
popa
je
inc
inc
inc
jne
arpl
push
inc
inc
push
inc
inc
pop
pop
pop
add
dec
gs
inc
inc
inc
jne
arpl
arpl
jb
imul
pop
pop
pop
add
dec
gs
inc
inc
inc
jne
arpl
imul
pop
pop
pop
add
dec
gs
inc
inc
inc
jne
arpl
push
inc
inc
push
inc
inc
pop
pop
pop
add
dec
gs
inc
inc
inc
jne
push
popa
jb
gs
inc
push
inc
inc
pop
pop
pop
add
dec
data16
inc
dec
outsl
insl
outsb
je
jb
push
outsl
je
jne
je
outsb
inc
inc
push
inc
inc
pop
pop
pop
add
dec
data16
inc
push
arpl
jb
gs
inc
push
inc
inc
pop
pop
pop
add
dec
data16
inc
push
popa
insb
insb
dec
gs
insb
je
inc
inc
push
inc
inc
pop
pop
pop
add
push
outsb
fs
jne
push
jae
inc
inc
push
outsb
fs
jne
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
insb
popa
je
jae
inc
inc
inc
jne
arpl
popa
je
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
insb
popa
jns
jb
gs
je
push
push
inc
inc
popa
jae
push
insb
popa
jns
jb
inc
push
inc
inc
pop
pop
pop
add
push
jb
inc
gs
outsb
popa
je
inc
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
popa
imul
push
inc
push
jb
addr16
jne
je
inc
push
inc
inc
pop
pop
pop
add
push
popa
insl
jo
push
inc
inc
insl
bound
outsb
je
outsb
gs
arpl
push
inc
inc
pop
pop
pop
add
push
arpl
jb
gs
inc
push
arpl
jb
gs
inc
push
inc
inc
pop
pop
pop
add
push
arpl
jb
gs
inc
push
popa
insb
insb
dec
gs
insb
je
inc
inc
push
inc
inc
pop
pop
pop
add
push
imul
dec
jne
je
push
outsl
jne
arpl
inc
push
inc
inc
pop
pop
pop
add
push
gs
outsl
jbe
inc
inc
dec
outsl
jae
popa
addr16
inc
push
inc
inc
pop
pop
pop
add
push
gs
jb
inc
inc
dec
outsl
insl
outsb
je
jb
push
outsl
je
jne
je
outsb
inc
inc
push
inc
inc
pop
pop
pop
add
push
outsl
jo
push
outsl
jne
push
outsb
fs
jne
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
outsl
je
je
inc
inc
inc
jne
arpl
je
je
outsb
addr16
inc
push
inc
inc
pop
pop
pop
add
push
outsl
je
je
outsb
addr16
jae
inc
inc
inc
jne
arpl
je
je
outsb
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
inc
pop
inc
gs
outsb
popa
je
inc
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
inc
pop
push
insl
outsl
imul
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
inc
pop
push
jne
bound
push
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
push
inc
pop
inc
popa
insb
insb
push
jae
push
outsl
addr16
gs
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
push
inc
inc
pop
pop
pop
add
push
push
inc
pop
inc
outsl
dec
outsl
je
imul
jae
inc
outsb
je
je
inc
inc
push
inc
inc
pop
pop
pop
add
push
push
inc
pop
inc
popa
fs
jne
inc
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
push
inc
inc
pop
pop
pop
add
push
push
inc
pop
push
gs
outsl
jbe
inc
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
push
inc
inc
pop
pop
pop
add
push
push
inc
pop
push
je
jb
inc
popa
fs
jne
inc
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
push
inc
inc
pop
pop
pop
add
push
popa
jbe
push
outsl
jne
push
imul
jbe
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
push
push
inc
inc
imul
gs
inc
push
inc
inc
pop
pop
pop
add
push
insb
imul
inc
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
insl
popa
arpl
inc
dec
outsb
imul
inc
pop
pop
pop
add
push
insl
outsl
imul
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
insl
outsl
imul
inc
inc
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
insl
outsl
imul
inc
inc
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
insl
outsl
imul
inc
inc
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
insl
outsl
imul
inc
outsb
jbe
js
insb
outsl
jae
outsl
outsb
inc
inc
push
inc
inc
pop
pop
pop
add
push
insl
outsl
imul
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
jo
jb
push
je
jb
inc
inc
inc
outsb
jbe
jo
jb
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
jo
jb
push
je
jo
inc
inc
outsb
jbe
jo
jb
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
jo
jb
push
push
inc
inc
outsb
jbe
jo
jb
inc
inc
push
inc
inc
pop
pop
pop
add
push
jo
popa
imul
push
inc
push
jo
popa
imul
inc
push
inc
inc
pop
pop
pop
add
push
jo
outsb
inc
outsl
ja
inc
inc
inc
jne
arpl
je
je
outsb
addr16
inc
push
inc
inc
pop
pop
pop
add
push
jo
outsb
push
jo
inc
inc
jne
arpl
je
je
outsb
addr16
inc
push
inc
inc
pop
pop
pop
add
push
je
jb
inc
inc
inc
jne
push
popa
jb
gs
inc
push
inc
inc
pop
pop
pop
add
push
je
je
arpl
popa
insb
inc
inc
inc
arpl
inc
inc
push
inc
inc
pop
pop
pop
add
push
je
arpl
inc
imul
inc
inc
inc
imul
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
je
jo
inc
push
outsb
fs
jne
inc
inc
push
inc
inc
pop
pop
pop
add
push
je
imul
imul
popa
jae
jb
inc
push
inc
inc
pop
pop
pop
add
push
je
imul
imul
imul
addr16
inc
push
inc
inc
pop
pop
pop
add
push
je
imul
inc
dec
imul
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
ja
outsb
addr16
inc
push
outsb
fs
jne
inc
inc
push
inc
inc
pop
pop
pop
add
push
ja
outsb
addr16
addr16
imul
gs
inc
push
inc
inc
pop
pop
pop
add
push
popa
outsb
imul
imul
imul
inc
inc
inc
inc
pop
pop
pop
add
push
popa
outsb
imul
push
jb
popa
outsb
imul
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
gs
gs
jb
push
outsl
jne
push
jae
push
jb
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
gs
push
push
inc
push
gs
inc
data16
push
inc
inc
pop
pop
pop
add
push
outsl
addr16
gs
jae
inc
inc
inc
insl
bound
outsb
je
outsb
gs
arpl
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
outsl
addr16
gs
jae
inc
inc
inc
popa
jae
push
jb
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
outsl
addr16
gs
jae
inc
inc
dec
imul
addr16
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
outsl
addr16
gs
jae
inc
inc
push
jo
popa
imul
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
outsl
jne
push
push
inc
inc
inc
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
outsl
jne
push
addr16
gs
insb
inc
inc
inc
push
dec
gs
insb
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
jb
addr16
outsb
fs
popa
imul
inc
jne
je
outsb
inc
inc
push
inc
inc
pop
pop
pop
add
push
jb
addr16
arpl
inc
inc
inc
arpl
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
jb
addr16
outsl
jne
push
popa
insl
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
jne
bound
push
inc
inc
jb
outsb
popa
fs
inc
push
inc
inc
pop
pop
pop
add
push
jae
inc
push
dec
gs
insb
inc
inc
inc
push
dec
gs
insb
inc
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
xor
push
push
inc
pop
push
pop
push
inc
inc
inc
dec
inc
pop
add
push
dec
push
pop
push
popa
data16
push
outsl
jne
push
push
pop
push
popa
data16
pop
outsl
outsb
gs
inc
push
inc
inc
pop
push
inc
push
inc
inc
popa
jae
inc
outsb
je
je
inc
inc
inc
pop
add
push
popa
imul
push
jb
imul
pop
pop
pop
add
push
popa
imul
popa
jb
gs
inc
push
inc
inc
pop
pop
pop
add
push
popa
imul
outsb
fs
inc
inc
imul
pop
pop
pop
add
jne
je
gs
insl
push
insb
popa
jns
jb
add
jne
je
gs
insl
jae
inc
gs
popa
jns
fs
jae
add
je
outsb
je
je
inc
push
dec
add
je
gs
dec
dec
inc
jne
arpl
outsb
jae
inc
imul
jb
push
outsl
inc
insb
insb
add
jb
gs
inc
gs
insb
outsb
imul
jb
popa
arpl
popa
insl
bound
outsb
je
outsb
gs
arpl
popa
insl
insl
outsl
pop
xor
cmp
outsb
jne
add
insl
outsl
pop
xor
add
insl
outsl
pop
xor
popa
arpl
popa
insl
insl
outsl
pop
xor
popa
insl
insl
outsl
pop
xor
je
add
insl
outsl
pop
xor
je
bound
add
insl
outsl
pop
xor
popa
insl
insl
outsl
pop
aaa
xor
je
add
insl
outsl
pop
cmp
add
insl
outsl
pop
bound
imul
je
popa
jb
outsl
jne
jns
outsb
je
je
add
popa
insl
add
fs
jne
add
je
outsl
outsb
pop
je
jb
gs
arpl
insb
gs
arpl
insb
gs
jo
fs
imul
jb
jae
jb
je
add
arpl
pop
ja
popa
jo
outsb
add
arpl
pop
ja
arpl
add
jbe
bound
insl
add
jbe
bound
gs
add
jbe
bound
add
jbe
bound
bound
outsl
ja
outsb
jbe
bound
bound
add
jbe
fs
jae
outsb
jbe
gs
insb
outsl
jae
outsl
outsb
add
jbe
popaw
fs
jbe
outsw
add
jbe
data16
outsb
gs
add
jbe
insb
outsl
bound
add
jbe
insb
outsl
ja
outsb
jbe
insb
popa
jae
jb
outsb
jbe
insb
imul
add
jbe
insl
gs
popa
add
jbe
jb
imul
jb
outsb
fs
outsb
jbe
jae
popa
imul
outsb
jbe
jae
outsl
outsl
je
jb
outsb
jbe
jae
outsl
ja
outsb
jbe
jae
jne
add
jbe
jae
popa
jb
add
jbe
jae
jb
je
add
jb
popa
outsb
fs
pop
bound
bound
popa
jb
gs
data16
arpl
jb
popa
imul
add
outsb
arpl
jne
je
outsb
add
outsb
arpl
jne
jp
outsb
add
outsb
arpl
outsl
outsb
jbe
jns
jb
data16
arpl
outsl
outsl
jb
data16
arpl
outsl
outsl
jb
jb
je
je
outsb
add
outsb
arpl
jae
popa
jo
jp
outsb
add
outsb
arpl
jb
arpl
outsb
add
outsb
arpl
jb
outsb
arpl
arpl
data16
arpl
jne
je
jb
gs
data16
arpl
gs
insb
je
arpl
jb
gs
data16
arpl
outsl
jae
popa
addr16
jb
jae
jne
add
outsb
arpl
insb
insb
jne
imul
data16
arpl
popa
fs
data16
arpl
outsl
outsb
jae
gs
insb
imul
pop
insl
outsl
jb
popa
jb
imul
data16
arpl
outsb
fs
jne
add
outsb
arpl
insb
popa
je
data16
arpl
insb
popa
je
outsl
je
data16
arpl
jne
push
add
outsb
arpl
popa
imul
pop
jb
arpl
jb
add
outsb
arpl
outsl
je
bound
je
outsb
add
outsb
arpl
outsl
je
je
outsb
add
outsb
arpl
outsb
outsl
ja
data16
arpl
popa
outsb
imul
jne
arpl
popa
outsb
imul
je
outsl
insb
jae
data16
arpl
popa
outsb
imul
jb
data16
arpl
popa
outsb
imul
je
jb
data16
arpl
popa
outsb
imul
imul
data16
arpl
jb
arpl
jne
outsl
arpl
outsb
add
outsb
arpl
jb
arpl
push
add
outsb
arpl
jb
arpl
jb
imul
pop
je
popa
imul
pop
je
popa
imul
outsl
insb
jae
data16
arpl
gs
add
outsb
arpl
gs
arpl
je
outsl
insb
jae
data16
arpl
imul
je
jp
outsb
add
outsb
arpl
popa
insb
insb
add
outsb
arpl
popa
insb
insb
pop
je
addr16
add
outsb
arpl
popa
je
jb
data16
arpl
gs
jo
outsb
arpl
arpl
addr16
data16
push
imul
je
addr16
insl
gs
arpl
outsb
je
jb
addr16
insl
gs
arpl
outsb
je
jb
jae
je
addr16
insl
gs
outsb
add
insl
gs
jo
popa
jns
jb
gs
imul
pop
jo
popa
jns
jb
push
addr16
insl
gs
jo
popa
jns
jb
je
popa
insl
add
insl
gs
jae
outsl
jb
add
insl
gs
je
popa
insl
pop
insl
popa
jae
gs
addr16
insl
gs
je
popa
insl
pop
jae
je
addr16
insl
gs
je
js
add
insl
gs
jp
outsb
gs
jo
popa
jns
jb
imul
gs
addr16
outsb
popa
fs
jae
popa
addr16
outsb
je
je
add
outsw
pop
bound
bound
popa
jb
gs
imul
jae
popa
addr16
jb
jae
jne
add
outsw
pop
imul
jae
imul
outsl
pop
insb
popa
outsb
fs
popa
jb
add
outsw
pop
insl
popa
jo
jo
jb
insl
gs
jb
add
outsw
pop
outsb
jne
insb
add
outsw
pop
jo
popa
jns
jb
fs
je
insl
popa
je
push
outsl
pop
jo
popa
jns
jb
jae
popa
jb
add
outsw
pop
je
jb
gs
imul
insb
gs
jb
pop
fs
imul
add
outsw
pop
jbe
jo
jae
popa
jb
add
outsw
fs
add
gs
pop
popa
imul
imul
imul
gs
pop
popa
jae
popa
jne
je
jne
je
imul
je
jb
add
gs
pop
push
push
imul
insb
popa
jb
imul
addr16
insl
jo
imul
jne
imul
pop
jae
fs
arpl
add
gs
pop
jae
imul
je
imul
add
push
addr16
jbe
jb
outsb
insl
outsb
je
insb
imul
outsl
je
insl
outsl
insl
outsb
je
jb
pop
outsl
outsl
jb
insl
outsl
insl
outsb
je
jb
pop
jb
je
bound
je
outsb
add
outsb
jae
gs
push
imul
insl
outsl
outsb
jae
gs
insl
outsl
jb
popa
jb
insl
outsl
outsb
jae
gs
jae
imul
add
insb
je
pop
insl
popa
outsb
popa
addr16
insl
jne
je
jae
jne
arpl
jo
je
pop
arpl
outsb
gs
jo
je
pop
je
popa
arpl
jo
popa
jns
jb
jo
popa
jns
jb
insb
outsl
popa
fs
jbe
add
popa
jns
jb
ja
popa
jo
outsb
jae
jb
jo
jae
jne
fs
je
jae
popa
jb
pop
jae
outsl
ja
jb
jae
gs
imul
je
jb
gs
arpl
imul
pop
gs
jb
addr16
je
imul
jne
outsl
add
addr16
popa
jne
outsl
jae
jbe
add
addr16
arpl
gs
add
addr16
arpl
imul
addr16
arpl
outsb
gs
gs
insb
add
addr16
arpl
outsb
addr16
jb
gs
je
imul
outsl
jne
je
jb
je
imul
outsb
fs
arpl
outsb
add
addr16
addr16
jbe
je
add
addr16
push
je
imul
outsl
outsb
jae
gs
jne
jo
je
imul
jne
je
jo
add
addr16
outsl
outsb
arpl
je
imul
jne
push
addr16
jb
insb
popa
jns
je
imul
gs
gs
jb
add
addr16
je
popa
outsb
jae
je
outsl
outsb
add
popa
jo
outsb
pop
popa
imul
ja
popa
jo
outsb
pop
popa
jne
add
popa
jo
outsb
pop
popa
ja
add
popa
jo
outsb
pop
arpl
ja
popa
jo
outsb
pop
fs
insb
add
popa
jo
outsb
pop
gs
imul
outsl
outsb
pop
popaw
insl
popa
jae
ja
popa
jo
outsb
pop
imul
jbe
outsb
add
popa
jo
outsb
pop
data16
popa
jae
bound
add
popa
jo
outsb
pop
xor
xor
ja
popa
jo
outsb
pop
addr16
insb
imul
outsb
pop
insb
outsl
arpl
cmp
ja
popa
jo
outsb
pop
push
outsb
popa
fs
popa
jo
outsb
pop
imul
add
popa
jo
outsb
pop
insl
xor
add
popa
jo
outsb
pop
insl
xor
ja
popa
jo
outsb
pop
insl
xor
xor
ja
popa
jo
outsb
pop
insl
popa
arpl
xor
ja
popa
jo
outsb
pop
insl
jo
outsb
popa
jbe
add
popa
jo
outsb
pop
jo
xor
add
popa
jo
outsb
pop
jo
xor
ja
popa
jo
outsb
pop
jae
outsl
jne
add
popa
jo
outsb
pop
jae
xor
gs
jo
outsb
pop
jae
xor
gs
jo
outsb
pop
jae
imul
popa
jo
outsb
pop
jae
outsl
imul
outsb
popa
fs
popa
jo
outsb
pop
je
jo
ja
popa
jo
outsb
pop
jne
jo
xor
jo
outsb
pop
jne
jo
ja
popa
jo
outsb
pop
js
xor
xor
ja
popa
jo
outsb
bound
add
jb
fs
imul
jb
fs
popa
ja
