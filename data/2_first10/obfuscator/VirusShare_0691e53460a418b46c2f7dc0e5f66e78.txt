call
in
add
imul
add
add
imul
add
imul
add
add
sub
imul
outsl
mov
sbb
add
ds
sub
sub
mov
sbb
cmp
cmp
outsl
int
incb
cld
add
cmp
cmp
or
or
fstpt
push
add
icebp
xchg
add
mov
imul
ljmp
cmp
sub
fldt
pop
cmp
cmp
sub
js
add
push
mov
cmp
sub
mov
fucomp
outsl
fildl
fs
mov
mov
sbb
mov
outsb
lods
mov
repnz
add
or
mov
add
add
dec
pop
cmp
push
ss
mov
std
negb
mov
mov
sbb
cmp
sub
add
fnsave
add
sbb
mov
inc
mov
fidivl
pop
adc
pushf
push
dec
mov
or
ljmp
jg
jnp
pop
adc
push
mov
add
ret
adc
sub
inc
push
pop
add
or
xor
xor
mov
or
decl
test
sub
shlb
bound
sarb
sti
rcrb
cmp
cvttps2pi
add
sbb
sbb
jg
cmp
add
sub
add
mov
pop
or
dec
rcll
ret
ret
jbe
orb
or
add
negb
jp
ret
jle
movb
jo
mov
mov
pushf
adc
and
xchg
add
dec
jle
add
push
or
adc
enter
popa
lock
cmp
lock
insb
mov
sub
outsb
mov
into
popa
int
mov
dec
shlb
sub
add
ss
xor
mov
cs
add
pop
sahf
enter
jle
pop
fidivrs
sbb
icebp
loop
xchg
cmp
mov
push
sbb
pop
sub
sbb
out
push
sahf
adc
or
push
cwtl
data16
mov
mov
or
mov
push
inc
testb
lret
ds
mov
cmp
clc
push
addb
fsubr
ror
idivb
cwtl
xor
xchg
scas
and
ror
insb
xchg
inc
push
addl
inc
bnd
mov
bound
mov
lea
jne
rcl
stc
adc
andb
pop
add
insb
add
inc
andl
xor
sub
adc
mov
fsub
outsb
jnp
sbb
or
rolb
icebp
je,pt
andb
push
xor
sahf
push
lods
xor
mov
or
clc
adc
pusha
jo
ljmp
int
add
add
push
or
or
inc
mov
push
scas
pop
and
push
mov
sub
inc
icebp
enter
negb
mov
push
mov
cli
sub
sbbl
push
mov
cmp
in
adc
je
xchg
xor
dec
daa
push
lock
fidivl
xchg
push
mov
add
loope
incb
pop
inc
clc
adc
stc
dec
shr
out
sub
pop
iret
or
jmp
cld
sub
pop
in
lods
cmp
dec
rcrb
add
in
cmc
adc
imul
leave
incl
mov
jecxz
xor
pop
ds
je
mov
stc
mov
add
orb
insb
ret
xor
icebp
stc
add
adc
add
mov
jmp
lods
fisttpll
mov
call
mov
adc
imul
rdpmc
mov
pop
stos
pop
not
push
mov
rorb
inc
lock
pushf
mov
shr
xchg
sbbb
repnz
sbb
pusha
jp
push
je
or
push
clc
or
ret
or
xor
ret
push
mov
sbb
push
push
adc
int3
adc
aam
mov
pusha
add
push
push
int3
jno
xorl
inc
test
xchg
xchg
rolb
xor
rolb
jmp
cmp
cs
rcll
sahf
push
insl
mov
pop
cmp
paddb
add
pushf
or
sbb
cmpsb
lods
sbb
push
mov
cmp
xchg
mov
mov
into
mov
push
add
adc
mov
or
inc
scas
ficompl
xchg
call
or
mov
add
or
adc
dec
addl
jmp
add
pop
imul
insb
or
out
inc
push
rclb
adc
push
jge
inc
call
lock
cli
cmc
xchg
js
decb
mov
popf
pop
mov
xor
bound
cmp
or
add
adc
and
pop
adc
ret
scas
xchg
adc
xor
mov
hlt
sbb
xor
mov
fcomi
sbb
or
sbb
or
mov
mov
xchg
stc
add
adc
cmp
fldenv
out
sbb
push
xchg
fcomps
pop
adcb
or
je
popf
push
fistpll
xchg
adc
mov
add
and
popa
sbb
test
rorb
mov
clc
push
lods
lock
add
xchg
mov
je
xor
dec
add
sbb
push
and
rorl
dec
cmp
xbegin
outsb
mov
pusha
aam
lret
mov
rclb
push
mov
mov
add
mov
sbb
out
roll
adc
and
lfs
fnclex
or
dec
les
adc
and
call
push
sub
sbb
sub
cmp
adc
pop
add
repnz
shrb
sbb
cli
pop
add
sub
xor
test
enter
adc
cs
or
mov
push
fidivs
call
add
add
ficoml
les
jo
sbb
ret
lahf
jmp
sbb
pusha
and
sahf
fidivrs
push
add
int3
and
xor
shlb
idiv
lret
xchg
sub
scas
je
mov
adc
add
sbb
xor
cltd
adc
loopne
popa
add
sahf
push
push
add
push
int
add
or
push
mov
test
cli
or
add
adcl
sbb
xchg
cmp
sbb
cmp
pop
mov
icebp
in
movsb
or
jecxz
pop
test
repnz
roll
add
push
lcall
push
pop
in
or
or
push
nop
sbb
inc
adc
fimull
loop
repnz
add
ret
imulb
or
dec
sti
adc
adc
popa
clc
rclb
mov
add
cmp
xchg
aam
xor
je
ret
inc
or
xor
sbb
popf
mov
imul
or
inc
adc
and
xor
cmp
mov
push
cmp
imul
mov
movsb
mov
inc
rolb
push
ja
cmp
inc
clc
add
cmp
es
loopne
xchg
call
fs
enter
jecxz
and
and
loope
adc
test
xlat
mov
outsl
inc
adc
push
cmp
pop
mov
sbb
das
bound
jge
je
mov
add
sbb
sub
in
aad
lock
inc
hlt
add
xchg
mul
cmp
jo
mov
add
xchg
mov
loopne
push
test
or
mov
and
or
adc
mov
je
or
jge
mov
sbb
test
or
fcmovne
add
push
pop
mov
sub
mov
das
mov
inc
scas
or
inc
and
bound
inc
rolb
inc
adc
sbb
push
sbb
ss
pop
mov
sbb
adc
lods
lcall
or
incb
adc
fistpl
sub
mov
xor
rcl
adc
add
push
mov
addl
les
cwtl
lret
mov
pop
roll
pop
push
and
or
sbb
push
pusha
fs
icebp
sbb
cmp
pushf
popf
nop
rcrb
cmp
and
sbb
ret
mov
inc
in
or
jno
cwtl
add
inc
sbb
xchg
shrb
inc
rolb
bound
adc
fildl
cwtl
pop
loope
add
ds
push
cmp
mov
sbb
fs
mov
subb
add
push
aam
adc
add
adc
dec
mov
add
movsb
or
xor
xchg
dec
adc
xor
mov
push
add
push
inc
adc
cli
and
add
pop
xor
cwtl
mov
pop
hlt
movsb
in
cmpsb
xchg
cmp
jg
mov
rorb
adc
or
jl
mov
jae
push
cwtl
mov
fildl
inc
sbb
or
punpcklbw
test
inc
push
nop
dec
pusha
les
dec
repnz
imul
call
sbb
jl
ret
adc
movsb
sbb
in
ret
lds
retw
test
shll
inc
adc
sti
clc
inc
cmp
pop
dec
mov
inc
add
test
into
aam
push
mov
or
pop
add
in
push
adc
adcb
mov
add
push
popf
add
cltd
xchg
rorb
xchg
xor
enter
aas
loop
ret
add
mov
pop
lahf
sbb
and
sbb
call
push
mov
sar
and
add
add
mov
loop
ret
loop
into
stc
or
lcall
test
shll
sbb
push
in
ja
outsb
pop
sarb
je
test
or
pop
push
cmp
xor
mov
adc
mov
movsl
jge
dec
shrl
js
inc
or
cld
mov
jge
cwtl
mov
sbb
ret
arpl
push
shlb
call
mov
mov
pop
adc
fdiv
shlb
or
dec
and
call
arpl
andb
xor
call
out
push
add
andb
or
push
xor
mov
sbb
and
outsb
sbb
enter
xlat
xchg
sbb
and
push
hlt
leave
mov
aam
cmp
leave
not
loope
loope
loopne
fsubrs
adc
cmc
pop
mov
pop
cli
push
and
sbb
daa
sbb
push
clc
mov
jbe
shlb
push
mov
gs
mov
icebp
adc
xchg
xchg
stc
jp
es
sysenter
and
aas
bound
adcb
pop
cmp
jo
push
lahf
adc
outsl
sbb
mov
cmc
add
outsb
jo
jb
dec
cmp
xor
addl
sbb
arpl
ficoml
call
loopne
test
loop
mov
test
add
sbb
sbb
mov
mov
sbb
push
push
jl
push
inc
cmpsl
add
cli
lods
mov
enter
lock
pop
adc
mov
adc
mov
xchg
sahf
jle
xchg
add
clc
sbb
into
adc
mov
adc
insb
call
arpl
cwtl
jo
pop
mov
lods
adc
lods
das
sbb
dec
test
adc
ficompl
mov
xchg
add
stc
or
mov
push
stc
adc
and
add
pop
sub
push
data16
test
pop
add
dec
push
cs
incl
sbb
shrb
int
rcr
xchg
mov
pop
repnz
mov
push
add
sbb
insl
add
mov
hlt
nopl
cltd
push
insb
add
fidivl
das
sbb
out
dec
fmuls
sbb
mov
rcl
push
rcl
roll
mov
lods
and
aam
sbb
push
adc
rclb
scas
dec
cmp
testb
mov
xorb
cmp
or
lods
mov
mov
jl
sub
or
jecxz
mov
adc
pop
add
shlb
jg
addr16
sub
push
and
sbb
test
lcall
mov
enter
icebp
xchg
sub
lret
out
je
push
inc
iret
mov
aam
or
or
mov
call
test
lock
pop
push
imul
ret
cmp
dec
pop
cmp
call
sbb
cmp
push
jnp
or
pcmpgtw
inc
dec
ljmp
xor
loope
loop
xchg
cmp
inc
sub
push
mov
or
jne
in
pusha
push
mov
pop
push
loope
add
lock
divb
xchg
jo
adc
jne
les
lock
sbb
add
sub
sbb
mov
les
scas
jle
cmp
sbb
adc
imul
sub
pop
xor
les
or
int3
pop
pop
sub
andb
and
lcall
ret
push
pushf
roll
cmp
repnz
and
bound
js
mov
sub
dec
ret
dec
ljmp
rcrl
addb
push
fadds
push
add
inc
inc
roll
sbb
xlat
cmp
into
sub
sbb
and
setg
loope
mov
xchg
adc
fcomi
pop
rorl
pusha
mov
xchg
or
fisubs
mov
adc
in
outsb
mov
or
icebp
lods
mov
dec
inc
mov
cli
sbb
ret
lret
stos
add
inc
push
lds
sbb
or
pop
sub
and
loopne
cmpsb
pop
sbb
jle
mov
cmp
adc
je
xchg
orb
loopne
cld
jmp
enter
adc
lea
rorb
mov
add
repnz
lds
ljmp
imul
mov
mov
ss
scas
fbld
pop
mov
adc
pop
mov
mov
lret
loopne
mov
jp
sar
and
pop
or
sbb
movsl
mov
adc
ss
mov
and
repz
adc
std
sub
add
or
gs
mov
scas
daa
pop
std
and
sub
aad
pop
iret
cmp
lds
or
scas
jmp
xchg
dec
adc
sarl
lret
mov
or
adc
rolb
or
push
pop
pop
xor
test
psubusw
sub
int3
inc
push
shll
insb
rcl
loop
adc
pop
into
mov
xchg
mov
es
shrl
jmp
shlb
sbb
adcl
hlt
dec
xchg
push
and
call
aad
jae
add
aam
or
stc
xchg
or
add
pop
in
lock
ret
into
cltd
mov
push
or
popa
aam
test
sbb
call
dec
bound
rcll
dec
sbb
or
and
aaa
pop
mov
pop
leave
sub
mov
xchg
adc
mov
adc
jbe
pop
push
push
shl
adc
mov
test
xchg
jbe
sbb
sahf
ret
push
mov
mov
inc
jno
xchg
lret
and
in
js
dec
mov
stos
cli
sub
push
clc
push
push
push
adc
fsubrl
adc
mov
jno
jno
xchg
leave
iret
or
push
or
dec
dec
sub
mov
mov
sarb
mov
push
mov
retw
xlat
fcoml
mov
push
call
xor
ret
mov
inc
sbb
enter
mov
add
popf
mov
in
shr
inc
pushf
shlb
mov
mov
mov
push
movsl
xchg
sbb
shrb
push
xor
or
push
mov
push
add
jg
pop
mov
ds
orb
shl
lret
pop
sbb
nop
icebp
push
pop
mov
je
adc
or
or
push
and
negl
xor
repnz
add
test
hlt
mov
lea
cli
or
es
xchg
push
cmp
ret
push
or
cmp
ret
pop
leave
faddp
test
or
mov
mov
add
cmc
into
cmpsb
adc
xchg
push
and
cli
dec
pop
jnp
pop
push
outsb
xor
xchg
adc
stos
pop
imulb
es
xchg
add
enter
sbbb
add
stos
push
inc
loopne
inc
insb
or
hlt
leave
or
add
pop
cmpsl
sub
push
ficoms
repnz
push
popa
mov
and
and
fst
push
js
enter
add
xchg
test
add
jmp
adc
lea
dec
fsub
loopne
notb
call
or
add
add
in
sbb
out
repnz
push
std
loop
xor
push
xorb
hlt
daa
adc
xor
mov
ret
rcrl
imul
sbb
jo
shrb
scas
mov
fwait
rcrb
dec
inc
adc
call
add
mov
mov
mov
push
xor
jecxz
lods
add
cmpsl
sbb
or
ljmp
mov
movsb
push
cmp
outsb
push
add
loope
push
shll
fidivrs
out
sbb
mov
mov
push
dec
icebp
gs
mov
aas
mov
lock
mov
adc
adc
stos
pusha
rcrl
leave
shlb
add
sub
inc
mov
popa
push
add
dec
push
scas
push
ds
jnp
cmc
adc
or
loope
add
add
add
xchg
test
xchg
rcll
add
sbb
shl
and
pop
push
xchg
adc
fnstsw
subl
cmpsl
lret
out
rorl
xchg
mov
cmp
jnp
and
lcall
or
testl
leave
dec
and
adc
loop
rorb
movsl
ficomps
inc
pop
sbb
add
rorb
xor
shrb
in
and
jle
loop
add
bound
sarb
mov
sbb
cmpl
inc
and
lret
mov
dec
rolb
push
cli
js
push
dec
and
stc
aam
sbb
bound
cmp
pop
test
test
mov
pop
mov
sbbb
xor
or
mov
pop
mov
add
or
cmp
add
fs
shrb
jmp
lahf
push
ljmp
cmp
mov
shlb
sbb
adcl
add
dec
idiv
adc
cmp
mov
loop
dec
lods
mov
sub
inc
jb
ds
cli
add
push
mov
push
push
test
xchg
cmp
ljmp
in
push
push
js
fiaddl
lret
inc
daa
sub
mov
shl
roll
xor
shlb
pop
ret
and
pop
jmp
jp
std
push
push
outsb
sbb
xor
add
pop
stos
xchg
lcall
hlt
cmpb
push
cli
push
icebp
mov
push
mov
loopne
sub
or
and
repnz
out
rcl
add
int3
mov
fdivs
clc
sbb
push
daa
xor
mov
cmp
xchg
adc
lods
pop
call
mov
call
das
rorb
add
adc
mov
call
pop
and
jae
inc
or
mov
sbb
lea
and
andl
mov
push
sbb
movsb
test
sbb
popa
xchg
outsb
lcall
or
add
and
add
dec
mov
add
mov
or
push
sahf
clc
pop
in
xor
rorl
andb
push
popw
adc
pop
pop
jo
and
es
or
sbb
mov
inc
pop
push
add
xchg
sbb
les
cs
aam
in
fidivs
jmp
ss
sbb
insl
movsb
movsb
imulb
test
and
rolb
add
push
push
rcrl
in
sbb
cmp
out
enter
dec
sbb
jo
ljmp
sbb
adc
cmpsb
lret
push
mov
clc
or
push
pop
clc
inc
sbb
xchg
adc
aad
rcrb
xchg
dec
mov
push
iret
divb
adc
test
inc
jbe
sub
push
fstl
sbbl
jmp
or
lcall
add
pop
sub
xor
addr16
sub
and
lret
or
sbb
dec
pop
adcl
dec
arpl
xor
jle
and
or
cmp
add
shlb
negb
add
mov
sbb
and
or
ljmp
subb
and
cmp
adc
push
xor
mov
pop
fdiv
push
sbb
mov
adc
cwtl
leave
les
clc
adc
je
mov
pop
cmp
scas
push
add
or
xchg
jo
pusha
ss
mov
pop
mov
shlb
icebp
adc
lret
sahf
pusha
add
pop
loope
ja
mov
in
add
ljmp
pop
ret
xor
adcb
or
movsl
mov
mov
pop
mov
sbb
rcrb
ret
sub
mov
in
push
inc
and
cltd
or
scas
shrb
mov
adc
outsb
dec
or
sbb
bound
loope
loopne
adc
push
push
les
cmp
xchg
push
inc
xor
or
sbb
push
shl
jbe
ret
push
sbb
push
inc
ficomps
test
sub
inc
mov
jo
addr16
sbb
mov
pop
adc
pop
das
test
cmp
popf
sub
inc
sbb
pop
push
ret
adc
mov
stos
out
xor
xchg
insl
mov
ljmp
sti
imul
in
mov
adc
add
cmc
mov
cwtl
add
cli
adc
sub
inc
push
or
cli
sbb
mov
push
in
sbb
lds
or
leave
sbb
sbb
mov
movsl
in
lds
mov
out
dec
lods
sar
popf
es
lea
loop
push
sbb
loopne
sub
movsb
pop
inc
or
push
pushf
out
repz
dec
push
jg
cmpl
push
and
stos
push
push
or
and
call
out
dec
addl
mov
and
dec
push
jmp
nopl
rorb
pop
ret
add
adc
sbbb
pop
sbb
stos
adc
ss
mov
adc
or
mov
inc
mov
xchg
sbb
das
adc
jp
minps
jmp
and
sub
jne
jmp
orl
or
in
sub
push
or
xchg
add
out
je
test
add
rclb
mov
or
mov
stos
add
mov
loopne
sub
adc
mov
aad
push
xor
mov
sbb
je
push
fstpl
add
call
out
fadds
shl
pop
outsb
fmuls
pusha
push
pop
inc
inc
sbb
stos
adc
xchg
adc
lret
lret
sub
cmp
or
add
jo
add
add
xor
fistpl
sahf
lock
test
add
addb
inc
mov
or
shlb
cmp
xor
mov
and
or
mov
shr
xchg
loop
stos
loope
push
js
test
dec
or
xlat
push
xchg
shlb
pop
clc
mov
outsl
and
out
pop
mov
or
push
xchg
orb
sbb
inc
jl
inc
sbb
jp
jmp
dec
inc
dec
jl
andb
lret
pusha
cmp
out
add
push
cmp
push
pop
cli
sbb
jmp
sahf
lock
pop
loopne
mov
dec
add
mov
mov
and
imul
ret
outsl
pushf
jb,pt
and
rcrb
inc
mov
add
push
lret
push
add
orb
clc
inc
daa
xlat
mov
push
ret
xor
jmp
test
push
push
shlb
les
add
and
sub
into
scas
stos
mov
lock
cwtl
pop
clc
push
push
sbb
or
fmull
and
pusha
sub
bound
xchg
xor
adc
enter
daa
cmp
test
rorl
jnp
jmp
adc
push
sbb
push
pop
mov
fdiv
push
push
mov
mov
scas
inc
cmp
aad
pusha
divb
add
pop
test
in
adc
jae
dec
add
dec
leave
cmp
lock
push
rcrb
sbb
push
out
inc
jo
add
mov
sbb
stc
mov
lods
add
cmpsb
ficomps
fadd
lock
adc
dec
jl
decb
ljmp
rcrl
or
mov
rcll
shlb
into
add
push
imul
lods
xchg
js
js
imul
mov
cwtl
enter
sbb
ret
inc
fcmovb
frstor
adc
and
psubd
cld
jp
cs
and
sbb
cli
inc
flds
cmp
test
sbb
push
lret
xchg
sbb
into
cwtl
or
test
loope
dec
xor
mulb
and
cmp
dec
cmc
repnz
adc
orl
test
inc
push
mov
jle
xchg
lock
add
mov
enter
es
roll
lea
js
adc
push
lret
cli
sbb
push
sbb
fmuls
push
mov
push
lods
jb
dec
inc
mov
xor
push
test
shr
push
repnz
in
and
or
icebp
lcall
add
add
sbb
xchg
pop
pop
mov
jne
xchg
pop
call
out
add
data16
jns
adc
sbb
jl
psubb
xchg
push
xor
mov
or
rcr
jecxz
mov
sti
inc
lea
dec
sbb
add
jo
stos
push
mov
and
sbb
lret
or
cmp
dec
cmp
into
jo
add
ret
dec
cltd
aam
lods
imul
icebp
testb
sbb
jno
or
sbb
mov
orb
add
adc
pushf
rorb
pusha
xor
xor
push
aam
mov
addl
loopne
push
jecxz
es
push
pop
lock
pop
cmp
inc
mov
sbb
loop
adc
mov
test
sbb
cmp
push
mov
push
jmp
clc
test
ljmp
hlt
adc
add
push
cmp
dec
in
xchg
inc
mov
adc
ret
pop
sbb
inc
sub
movsb
into
xchg
cmp
sbb
or
cmp
orl
sbb
sbb
add
lea
popf
addb
iret
or
and
add
dec
bswap
xchg
push
and
and
xor
fiaddl
fs
xchg
add
xor
push
loopne
cmpsb
push
xor
add
ret
jne
pop
jne
rolb
lods
sarb
or
sbb
sahf
jp
sarl
push
sbbb
inc
mov
shlb
xchg
divl
ret
mov
or
xor
sbb
pop
rcl
inc
in
sbb
add
iret
test
jo
psubsb
adc
cmp
loope
push
or
pop
into
mov
into
push
xchg
testb
xor
cmp
ficomps
push
adc
ljmp
cmp
or
adc
jle
xchg
pop
adc
dec
ret
cltd
xchg
jg
adc
pop
lock
jno
jae
sbb
and
pop
pop
inc
and
push
test
in
inc
mov
xor
mov
jmp
clc
sbb
sahf
push
push
jecxz
pushl
mov
push
push
sti
xor
test
and
or
jb
or
mov
xchg
push
inc
inc
mov
or
xchg
add
cmp
jo
je
lock
sahf
or
lret
add
gs
shrb
lea
call
sbb
mov
push
movsl
out
add
adc
fisubrl
mov
stc
push
cmp
inc
cs
pop
xor
sbb
js
sub
push
jne
addb
fidivrl
in
and
int
sbb
addb
pop
mov
xchg
enter
or
lds
xchg
dec
loopne
mov
add
and
scas
ret
adc
mov
sbb
or
adc
jmp
add
testb
inc
jmp
stc
adc
sub
hlt
or
pop
es
sbb
jp
sub
scas
jle
shl
out
add
add
mov
push
mov
cmpl
add
add
sbb
sahf
les
lods
adc
mov
fldl
mov
das
sahf
adc
push
jle
adc
bound
loopne
push
sub
rcrb
sbb
jns
loop
scas
adc
pusha
xchg
xchg
out
lock
mov
push
test
adc
lods
inc
orb
or
xor
sahf
or
pop
or
mov
int
lret
mov
jo
fs
mov
mov
dec
loopne
mov
hlt
and
test
adc
cmp
orb
sbb
movsb
sub
imul
ds
les
adc
lods
xchg
mov
lcall
repnz
add
sbbb
int
pusha
aam
adc
mov
mov
xor
sbb
or
xchg
test
and
xchg
add
les
jge
inc
sbb
sub
push
in
jle
add
clc
cmp
sub
enter
das
xchg
imul
mov
lret
mov
cmp
in
sub
dec
mov
xlat
dec
sbb
adc
dec
sbb
fwait
mov
dec
ret
jmp
inc
xlat
inc
xor
dec
add
push
sbb
xchg
loope
or
mov
cmpsl
add
in
add
xor
rol
push
test
and
or
adc
and
inc
mov
adc
add
and
andl
jo
adc
add
and
or
call
push
or
into
lahf
pusha
push
add
and
fs
push
adc
leave
cmp
cmp
les
sub
inc
adc
test
rol
or
je
cld
push
int3
sahf
sub
dec
adcb
ds
add
shl
into
addb
cmp
xchg
xchg
jg
lcall
inc
push
outsl
fadds
or
xor
test
mov
push
push
mov
pushf
das
rorb
cli
jp
test
fiaddl
aaa
mov
faddp
jnp
and
push
call
iret
push
add
pop
test
dec
add
dec
inc
xchg
insb
mov
jp
subl
ret
adc
xor
sbb
pusha
roll
mov
push
add
rorl
sub
mov
push
addr16
add
or
jne
and
enter
dec
mov
out
add
out
and
fisubl
pop
lods
ljmp
cli
shrl
icebp
push
js
insb
scas
push
arpl
mov
loopne
and
pushf
int3
xchg
push
enter
sahf
test
sarl
repnz
or
fidivl
mov
mov
imul
sbb
push
push
loope
js
cmp
stos
or
lock
fdivs
rclb
cmp
mov
in
mov
or
ficomps
test
mov
ret
fisubl
cmp
add
rcll
xor
leave
rol
cmp
pop
loop
cwtl
adc
sbb
push
mov
xor
jb
cmp
sbb
repz
movsl
mov
jle
mov
or
mov
cld
jp
icebp
mov
pop
fs
add
test
add
mov
or
jp
add
pop
pusha
imul
sbb
repnz
repz
pop
dec
lret
mov
push
mov
and
pop
je
lock
or
leave
jb
sub
out
arpl
xor
insl
jo
repnz
sbb
mov
and
fcompl
adc
jno
push
xor
or
adc
xchg
sbb
add
push
dec
add
mov
ds
push
jo
shlb
or
push
and
push
into
xchg
xchg
mov
add
and
push
inc
jno
cmp
add
jl
xor
add
or
pop
inc
xchg
mov
test
mov
mov
add
cmp
or
je
push
and
jb
and
std
adc
cli
add
enter
sbb
pop
adc
add
cwtl
int
out
hlt
loope
add
push
mov
inc
loop
pusha
test
insb
and
push
jl
or
xor
repnz
add
mov
lcall
les
stos
ds
lahf
mov
jb
cmp
fs
scas
leave
inc
mov
lahf
mov
rcrb
popf
push
iret
mov
or
sbb
enter
sub
bound
add
adcl
push
add
mov
repnz
mov
cmp
mov
sbb
inc
inc
push
push
add
mov
cltd
icebp
push
mov
pop
ds
insb
cmp
add
sub
jp
daa
add
xor
add
mov
jle
adc
outsl
xor
shlb
xor
ljmp
cli
fcompl
into
add
aas
add
fisubs
scas
int3
mov
sbb
dec
jecxz
xchg
cs
ret
fiadds
or
mov
add
xorb
inc
nop
jmp
add
adc
sbb
mov
lea
sahf
fwait
mov
pop
popf
xor
or
sbb
call
out
dec
push
xor
push
mov
pop
mov
mov
push
or
jb
movsb
mov
push
add
or
popa
add
movsb
cmp
adc
or
mov
dec
les
in
pop
pop
pop
or
or
bound
ljmp
add
mov
gs
sbb
jo
sbb
test
cmp
leave
movsl
out
mov
mov
mov
rclb
xchg
ljmp
push
mov
or
sub
icebp
inc
ljmp
lahf
aam
sbb
lock
xlat
ret
rcll
push
push
or
dec
je
and
pop
jmp
mov
push
mov
rolb
test
adc
adc
adc
pop
sub
inc
xor
sbb
out
inc
push
sbb
sbb
orb
jmp
movsl
and
repnz
cmp
push
sub
bound
js
stos
lret
stos
adc
sarb
data16
ret
dec
ret
cmp
pop
ss
mov
push
imul
js
pop
lods
mov
mov
and
push
xlat
xlat
cmpsb
scas
push
lods
push
adc
inc
mov
test
leave
jl
add
jne
cmp
jge
push
popf
push
mov
call
and
stos
push
add
jo
into
mov
inc
cld
add
add
pop
testb
cli
add
xor
ss
fistl
inc
lea
stc
lds
cmp
adc
sahf
test
int3
adc
sub
leave
fcoml
and
push
inc
push
jl
inc
mov
sbb
mov
cmpl
sarb
je
loopne
shll
mov
stos
xchg
mov
out
and
push
mov
fadds
daa
rolb
fimuls
add
popa
cmpsb
xor
push
das
xchg
adc
int3
ds
movsl
sub
sbb
rol
pushf
jo
push
fwait
xor
shlb
mov
lcall
sbb
dec
das
shr
lea
lret
mov
inc
cmp
call
int3
adc
in
sbbl
lahf
mov
out
or
pop
push
out
pushf
cmp
into
leave
push
outsl
add
loop
ficoml
push
cld
adc
test
hlt
rol
inc
lods
dec
jno
not
lock
pop
sbb
hlt
pop
lods
dec
in
sbb
xor
loop
push
pop
xchg
add
into
cmpsb
enter
pop
add
cs
in
movsl
adc
pop
sbb
jo
mov
push
mov
push
call
loopne
aam
jnp
push
imul
inc
call
push
add
out
or
lret
push
imul
ret
pop
sub
mov
adc
inc
push
mov
sbb
mov
sbb
dec
mov
inc
mov
inc
sbb
lahf
rolb
xor
sbb
fimull
and
sub
sbb
dec
xor
sub
lock
sub
xchg
sub
pop
xor
or
sub
and
push
fsubl
push
xorb
xor
and
lret
xchg
push
or
clc
mov
sbb
mov
int3
test
sbb
sbbl
xor
or
adc
jbe
aam
xor
std
js
xchg
add
or
js
dec
jnp
sub
leave
jae
es
xchg
sbb
and
movsl
xor
push
cmp
pusha
pop
cwtl
sub
push
mov
cwtl
mov
mov
shlb
mov
mov
jg
mov
jne
aas
ret
mov
xchg
scas
jb
fstl
test
add
cmp
insl
jno
pop
pushf
icebp
pushf
adc
or
hlt
shlb
popa
rolb
push
mov
popa
mov
inc
push
nop
push
mov
nop
pop
cwtl
mov
test
rclb
inc
out
push
xor
lods
test
rorb
fs
cmp
push
xchg
adc
pop
dec
cld
xor
jb
stos
mov
and
into
adc
cmp
and
rolb
mov
xor
daa
scas
cli
sbb
mov
mov
cwtl
mov
jo
lahf
sub
add
add
shlb
cmp
xor
push
add
mov
push
cmp
and
cs
sbb
bound
enter
and
mov
and
or
sbb
lret
loopne
mov
ds
subb
call
add
addb
addb
test
lcall
icebp
in
sbb
push
dec
jb
call
loopne
sub
or
loopne
cmp
scas
jno
cwtl
je
or
cmp
sub
add
inc
push
pop
enter
loopne
pop
pop
imul
test
xor
std
jbe
mov
loopne
addr16
sbb
test
outsl
inc
and
imulb
call
fsubs
pop
mov
loope
adc
jb
sbb
jo
push
cli
jo
and
push
xor
push
data16
push
call
jo
inc
jbe
xlat
call
js
pusha
rolb
adc
call
jge
clc
adc
sbb
orb
jl
shrb
lds
sbb
popa
and
or
rorl
sbb
jl
add
push
loopne
loopne
into
stos
enter
sub
jnp
cmp
xor
sbb
inc
jae
inc
cmp
pop
imul
sub
in
mov
add
shrl
outsl
inc
jmp
mov
adc
add
cs
or
rcrl
adc
push
loope
lahf
add
pop
cmp
and
pop
ja
dec
popf
test
mov
ret
add
rol
adc
dec
repnz
out
jo
mov
xchg
pop
inc
iret
cmp
bound
pushf
rorb
add
int3
cmp
inc
clc
loopne
je
mov
cwtl
or
mov
cmp
idivb
or
icebp
lods
cmp
ja
ds
xchg
mov
mov
and
ret
push
sbb
lcall
pop
hlt
movsb
or
xchg
mov
adc
cmp
adc
fs
cmp
sahf
inc
mov
js
add
scas
sbb
fcmove
lods
dec
ror
jb
sub
jbe
pop
mov
clc
pop
sub
aam
or
es
aad
and
lret
lcall
int3
or
xor
mov
mov
sbb
pop
pop
lcall
ss
jmp
sub
adc
mov
jp
dec
inc
imul
xchg
je
add
iret
sbb
push
fidivs
jmp
fistpl
test
ret
xor
inc
aam
mov
xchg
ljmp
stc
xchg
adc
push
shlb
pop
push
lock
and
pusha
or
sub
lret
sub
je
shlb
mov
shrb
push
add
mov
loopne
lcallw
mov
cmpsb
add
stc
pop
cmp
add
add
aam
dec
cmp
mov
mov
or
aam
ret
jecxz
or
and
outsl
push
fcoms
sbb
adc
inc
outsb
fstps
dec
outsb
outsb
ljmp
add
aam
add
ds
pop
or
fidivl
lods
pushf
inc
call
ret
adc
push
sbb
add
mov
push
sub
pop
pop
adc
adc
outsl
adc
cmp
push
or
sbb
mov
outsb
push
pop
jb
mov
dec
or
subb
jge
add
loop
or
jo
fbstp
mov
into
pop
jb
push
dec
sub
fadd
jecxz
clc
xor
and
les
pusha
and
xchg
jge
and
push
add
loop
cld
fsubl
scas
sub
xchg
ret
inc
push
add
push
sub
inc
push
dec
fmull
fldenv
pop
mov
xor
mov
cwtl
add
jge
call
cmp
ret
icebp
sub
adcl
loope
cmp
std
sbb
shlb
scas
mov
inc
pusha
add
inc
gs
fldenv
xor
pop
jp
cld
scas
inc
jmp
fldl
shll
add
push
xchg
pusha
inc
ret
dec
in
aam
hlt
mov
pop
add
adc
lods
movb
adc
or
sbb
mov
out
icebp
xchg
jmp
jne
test
xchg
data16
loopne
mov
movsb
mov
test
das
lock
push
jp
sub
stos
out
inc
add
icebp
add
mov
popa
cli
and
lods
test
xchg
and
cs
mov
scas
mov
popa
or
mov
sbb
inc
mov
rorl
test
addl
cmpsl
daa
push
fs
shl
mov
stc
les
lock
dec
jo
inc
and
rorb
ret
aad
lret
add
push
jno
fidivrl
push
add
sarb
dec
cmp
xchg
icebp
movb
inc
sub
jmp
push
mov
sbb
les
fdivrl
and
add
clc
adc
add
or
or
aam
mov
mov
push
shrb
mov
ret
sub
mov
add
testl
add
arpl
ficomps
scas
mov
loop
mov
inc
sub
mov
in
jecxz
fdivrl
push
sbb
adc
pusha
cmp
popf
call
ljmp
mov
aaa
mov
loope
shlb
push
inc
pushf
shrl
adc
sahf
adc
push
or
fdivs
fdivrp
sub
sbb
sahf
pushf
mov
lret
dec
mov
fs
insl
sub
test
and
ljmp
fdivs
jb,pn
dec
mov
push
loope
aam
gs
test
or
mov
or
mov
hlt
pop
fcoms
xlat
rcl
lods
adc
inc
mov
and
bound
ds
push
xor
add
test
lahf
xchg
xor
mov
icebp
sub
dec
ret
sbb
mov
dec
stc
and
popa
dec
jns
mov
rolb
mov
push
cld
xlat
inc
xchg
loopne
jl
push
aam
inc
mov
mov
and
push
adc
pop
xor
mov
scas
xchg
xchg
call
mov
adc
adc
or
xchg
xor
cmpsl
push
test
sub
cmpsl
jp
or
mov
or
sbb
and
loopne
into
mov
outsb
pop
sbb
push
jne
lret
mov
enter
push
andl
inc
xor
pop
or
dec
pusha
inc
divl
popa
inc
idivb
mov
out
fwait
jo
dec
shll
push
fcoms
loope
ljmp
call
leave
inc
mov
aas
jl
mov
sbb
or
gs
and
shrb
arpl
and
inc
fidivl
push
sbb
je
sub
xchg
pushf
push
je
push
pusha
pop
outsb
or
sub
mov
sbb
bound
in
inc
pop
js
adc
xchg
jmp
jp
xor
push
mov
arpl
pop
shll
adc
pop
cli
add
xor
and
ds
ljmp
bound
icebp
pusha
pop
ret
and
dec
push
mov
mov
call
jle
sub
ror
clc
push
pop
or
shl
push
add
incb
fcoml
inc
mov
inc
sub
es
mov
sbb
pcmpgtb
repnz
add
jl
shrl
xor
add
add
push
add
ljmp
loope
pop
sar
jo
sbbb
mov
or
xorl
lcall
cltd
sub
xchg
push
push
je
cltd
hlt
mov
push
pop
mov
test
or
or
add
jno
cmp
mov
inc
sub
jb
push
notb
aad
or
sbb
adc
stos
ret
popa
dec
sbb
dec
mov
or
adc
rolb
jo
xor
cmp
loopne
push
out
push
cmpb
adc
cmp
cmpsb
or
and
or
mov
or
shrl
roll
gs
mov
adcb
xor
scas
rorb
or
push
push
mov
pop
and
mov
xor
sbb
mov
pop
insb
and
dec
dec
shr
sbbl
lret
dec
add
ret
in
jp
xchg
jb
push
sub
push
ret
aaa
xor
dec
jge
sbbl
fcmovne
push
push
and
hlt
push
xchg
cmp
rcr
push
xchg
movsb
aam
xchg
xor
in
or
or
mov
js
or
mov
outsb
decb
lock
jne
aam
dec
test
inc
pop
stos
sbb
xchg
adc
jbe
sbb
andl
pop
push
push
xchg
push
jle
push
test
stc
add
adc
dec
pop
mov
ret
lret
push
shll
push
add
push
jb
push
xor
push
mov
pop
dec
loope
cltd
out
js
or
outsb
and
addb
mov
or
lcall
sahf
xchg
or
sahf
push
push
adc
es
lods
lods
ret
add
pop
push
movsl
push
scas
pop
test
mov
or
jne
and
add
sub
inc
repnz
shrl
out
xchg
xchg
add
mov
jbe
and
or
push
xor
mov
xchg
dec
fsubrs
ja
data16
fldt
movsb
push
push
cwtl
mov
test
loopne
ljmp
and
xchg
or
xlat
lods
xchg
movsb
xchg
add
aam
and
cmp
movsl
popa
in
jmp
je
push
xorb
jne
outsb
rorb
xor
jp
adc
or
push
shrb
daa
adc
mov
cmp
cmp
sbb
push
mov
mov
push
jle
lcall
xor
xchg
dec
sbb
inc
bound
dec
and
sbb
aad
mov
cld
aas
pusha
xchg
dec
sbb
adc
pop
mov
jecxz
pop
scas
sub
mov
sub
out
xor
sbb
adc
bound
or
out
push
nop
mov
push
notb
sbb
mov
out
mov
filds
dec
loop
or
xchg
cli
rclb
dec
or
cmc
in
add
clc
cmp
pop
push
outsb
mov
and
movsl
push
jae
add
or
and
add
repnz
test
sub
jecxz
out
push
xchg
clc
cmpsb
loopne
fdiv
icebp
insl
insb
add
add
mov
pop
jge
ret
and
adc
or
sub
lds
push
mov
or
dec
rcrb
iret
bound
shrb
xchg
loop
xor
adc
sbb
movsb
ljmp
mov
js
stc
pop
pop
sbb
adc
jno
mov
adc
sub
xchg
xchg
dec
dec
pop
aas
add
jp
or
lods
inc
jge
ret
cwtl
lods
test
enter
inc
or
mov
int3
mov
pop
andb
mov
or
jmp
clc
mov
push
dec
idivb
push
or
shlb
es
dec
or
sub
pop
mov
in
sub
test
es
loope
or
fmull
inc
cmc
sbbl
cmp
push
test
sub
jle
jp
push
rol
cmp
mov
das
adc
push
and
ja
and
pop
movsl
sahf
mov
pop
push
xor
or
pushf
lret
adc
repnz
movsb
push
in
fs
add
sbb
or
push
cwtl
mov
clc
nop
push
xchg
add
xchg
arpl
sub
scas
push
ds
push
pop
test
into
lahf
test
jo
xor
xchg
inc
mov
mov
or
movsb
adc
sahf
add
inc
stc
shrb
xchg
sbb
push
jp
push
divb
icebp
adc
mov
jae
clc
jb
add
cmp
je
lods
rorl
and
jecxz
mull
and
test
sbb
cltd
mov
mov
lret
xor
cwtl
shl
sbb
loop
ffreep
loope
sbb
xchg
sbb
sub
sbbb
popa
sub
mov
out
mov
mov
push
xchg
or
sbbb
jb
out
adc
and
lock
scas
mov
adc
and
roll
mov
movsl
cmp
push
xor
mov
lock
ss
push
sbb
mov
push
mov
lds
push
ret
sub
mov
inc
cwtl
sbb
js
add
pop
sbb
jno
jmp
jg
rclb
adc
mov
test
setb
lods
setae
sbb
aam
mov
mov
cmpl
cmp
xchg
sahf
adc
and
aaa
enter
pop
mov
popa
mov
inc
sub
aaa
sub
add
out
fs
mov
mov
fstpl
mov
dec
lock
scas
add
mov
pushf
mov
scas
push
adc
dec
nop
sbb
leave
loopne
push
scas
lds
mov
insb
or
sahf
and
outsb
mov
xchg
lcall
lock
add
push
pop
repnz
ror
fs
or
mov
sub
lret
or
xor
data16
cmp
pop
jo
lahf
loop
push
mov
xchg
mov
into
mov
mov
lret
add
test
sbb
sub
push
repnz
push
xor
ljmp
ret
or
or
insb
cmp
movsb
jb
dec
add
repnz
into
adc
sarb
sbb
iret
sahf
push
cmp
pop
js
stc
xor
rcrb
ret
insb
lcall
sarb
pop
jb
add
outsb
mov
roll
dec
stc
dec
jecxz
clc
mov
xor
mov
push
pop
cmpsb
orl
mov
pop
add
pop
sarb
sbb
push
into
ret
or
xchg
or
push
or
nop
lods
movsb
push
and
repnz
ljmp
clc
inc
or
cmc
into
movsb
cmp
add
bound
ret
add
sbb
xor
stos
jno
sbb
xchg
pop
mov
sbb
outsb
lock
xor
mov
scas
xchg
getsec
lods
mov
out
mov
test
sldt
repnz
rcl
ficomps
pop
ret
sar
xchg
push
mov
ja
add
icebp
push
push
shrl
jle
mov
mov
mull
or
sbb
decl
hlt
xor
mov
jb
nop
and
orl
dec
mov
sbb
add
arpl
adc
adc
push
sbb
or
loop
stc
add
jno
loope
xchg
stos
mov
data16
sbb
dec
pop
shlb
push
add
add
sahf
flds
mov
push
rolb
into
aaa
ljmp
xor
xor
push
push
lea
out
test
push
add
es
test
or
adc
lds
push
jge
push
outsl
cmpsb
fdivl
rcrl
add
imul
sbb
dec
bound
pusha
lret
jmp
adc
cmpsb
out
adc
adc
sbb
popf
add
inc
roll
dec
adc
jmp
cmp
rorl
addb
jo
dec
popl
jne
jbe
sarb
stos
imul
cwtl
call
sbb
push
pop
cmp
inc
cmp
jne
cmp
sbb
adc
inc
cmp
jo
xor
ds
pcmpeqd
in
and
clc
pop
xchg
push
xchg
add
fcomps
cmp
and
pushf
enter
push
mov
add
daa
flds
subb
fdivl
loope
jne
es
daa
lock
hlt
dec
mov
lods
xor
add
mov
cli
ret
push
mov
pop
mov
jbe
popa
mov
rcrl
adc
pop
xor
cmp
push
dec
fmull
frstor
xor
or
push
mov
and
adc
mov
xor
hlt
pop
notb
fsqrt
and
movsb
rcrb
adc
mov
add
ror
jo
mov
push
push
xchg
jge
sbb
mov
push
push
pop
shl
sahf
pop
cmp
clc
test
cmp
inc
popf
nop
dec
dec
idivl
pop
adc
sahf
jo
rolb
andb
test
xchg
jno
mov
cmc
and
test
mov
add
add
stos
mov
xchg
stos
push
jg
mov
jbe
lahf
call
fdivrl
cmp
mov
and
shlb
add
mov
mov
jmp
and
pop
iret
xor
mov
xor
bound
or
movsl
or
outsb
enterw
jo
dec
sysenter
lods
sbb
xor
adc
mov
fadds
test
cmpsl
pop
add
lret
lods
push
inc
pushf
outsb
fs
stc
push
adcb
mov
or
adc
sbb
loopne
jb
lock
cmp
and
xor
aam
loop
cmpb
pop
pushf
cmc
jno
test
xchg
aam
xor
push
sbb
pop
or
mov
les
dec
sub
mov
sbb
jp
lds
ud1
add
dec
sbb
sbb
sub
enter
in
add
xor
cli
jo
push
rorb
add
loope
cmp
adc
loopnew
push
lret
ja
stc
rcrb
in
notl
xchg
xor
cmpsl
push
pop
adc
mov
pop
mov
scas
pushf
add
xor
sub
cmp
pusha
pop
or
cmpsb
cli
adc
sub
mov
mov
adc
cmp
mov
sub
adc
push
inc
or
push
pop
lods
leave
lahf
or
push
cmpsl
pop
sahf
add
jle
cmp
lret
jb
int3
push
jp
push
inc
jbe
xchg
inc
or
mov
or
dec
mov
xchg
test
loop
or
push
sbb
inc
pop
shr
adcl
xor
rclb
add
mov
jp
rorl
sbb
js
jae
adc
jmp
lret
js
cmp
pop
sub
pop
clc
scas
inc
ret
and
sti
es
or
jmp
or
xor
add
push
mov
call
sub
aam
shll
dec
pop
icebp
ljmp
xchg
xorl
into
inc
lods
push
ror
cmp
in
les
inc
mov
xchg
leave
lret
xor
les
add
add
dec
cmpsl
adc
xchg
outsb
sbb
mov
pop
dec
cmp
pop
call
inc
lods
int3
pusha
push
pop
test
jno
mov
aam
mov
stos
insl
xor
or
cmc
les
mov
pushf
out
paddd
das
addr16
shrl
adc
jb
add
stc
push
mov
pop
pop
mov
mov
mov
imulb
ret
adc
mov
mov
mov
sub
cli
shrl
and
push
sub
mov
adc
cs
cmp
xchg
adc
les
lret
and
pop
push
pusha
inc
mov
mov
in
pop
ljmp
gs
and
add
js
or
rorl
add
cmpsb
cltd
mov
cs
and
fdecstp
aaa
repnz
push
clc
mov
inc
inc
insl
ret
ret
jecxz
add
hlt
test
pop
clc
add
xchg
lods
xchg
pop
mov
dec
outsb
mov
jne
jge
mov
scas
push
in
and
mov
mov
adc
lea
push
mov
dec
push
add
mov
pusha
pop
xlat
cmp
jae
pusha
insb
decl
test
and
mov
add
ljmp
cmp
stos
xchg
mov
push
in
mov
jo
xor
mov
xchg
dec
ficoms
and
pop
sahf
rcrb
sbb
rorl
or
dec
mov
lods
stos
mov
add
add
shlb
repz
lret
lods
jbe
push
and
sub
mov
into
add
pop
push
jmp
or
adc
inc
lcall
and
push
jp
add
push
adc
roll
andb
jo
inc
enter
dec
and
and
pusha
cli
push
pushf
fs
ss
rorl
imul
add
inc
es
movl
cmp
add
sub
dec
inc
xchg
es
adc
inc
shlb
jl
dec
mov
xchg
jbe
sub
xchg
jl
sub
sahf
or
jmp
sbb
sbb
clc
dec
jns
movsb
xor
cmc
jne
sub
push
fldt
jae
in
xchg
bswap
and
jge
in
out
popa
ret
hlt
or
pop
lea
and
adc
scas
fs
jl
nop
dec
inc
mov
push
dec
decl
clc
or
test
sub
or
xor
ja
sub
mov
jmp
iret
xor
add
sbb
mov
sbb
cmpsb
sub
sbb
xor
jnp
jb
mov
fsubp
test
popa
sub
push
fcmovbe
imul
ror
cld
cmp
sbb
imul
mov
mov
jge
aam
daa
adc
pushf
data16
je
mov
add
enter
and
enter
insb
jbe
loopne
adc
dec
dec
rorl
ret
ss
lods
pop
adc
dec
or
jmp
cwtl
cs
movsl
jecxz
shlb
dec
jecxz
repnz
mov
adc
fs
push
jnp
mov
lcall
ljmp
je
ret
popa
or
sbb
ja
nop
push
sbb
jb
jmp
cmpsl
adc
sub
bnd
sbb
xchg
out
xor
test
rolb
psubw
or
sbb
dec
mov
les
call
fs
sbb
mov
lods
call
das
mov
jo
pushf
scas
or
hlt
bnd
adc
pushf
xchg
loopne
in
outsb
gs
mul
adc
pop
mov
stos
fildl
popa
arpl
test
adc
jno
or
negb
add
and
test
fidivrl
mov
arpl
add
addb
dec
dec
jp
jo
jbe
cli
or
pop
dec
loopne
inc
or
test
pop
push
enter
mov
sar
daa
cltd
xor
cmp
ljmp
pop
inc
sub
mov
js
mov
insb
leave
lods
push
rcll
outsb
pop
sbb
add
pusha
inc
add
mov
inc
cmp
xchg
cwtl
add
rol
icebp
mov
fnstcw
xor
fiadds
mov
add
push
enter
loop
xchg
jns
inc
call
cli
xlat
jp
inc
in
stos
pop
adc
pop
ja
push
cmp
inc
lahf
xchg
fimull
xorb
or
add
mov
imul
sbb
pusha
adc
sbb
push
mov
pushf
sbb
dec
mov
clc
pop
adcb
dec
mov
push
orl
add
hlt
mov
add
mov
cmp
lock
pop
repnz
daa
sbb
pop
fstps
orps
loopne
cmp
mov
movsb
or
mov
notb
dec
push
hlt
lods
pop
push
inc
cmpsb
or
ljmp
adc
lret
pop
xor
in
jb
test
testb
add
sbb
inc
mov
or
pop
dec
dec
cmp
pop
inc
das
pusha
mov
pop
loope
rolb
pop
sbb
ljmp
add
dec
mov
xchg
in
or
movsb
pop
adc
ret
mov
shlw
push
push
insb
in
or
imul
dec
or
stc
or
mov
sbb
add
add
pop
inc
adc
mov
hlt
adc
push
mov
mov
andb
cmp
fisubrs
mov
loope
ret
daa
cs
pop
je
and
sbb
or
mov
cmp
adc
sbb
xchg
mov
or
sbb
inc
add
push
and
xor
cwtl
or
dec
adc
and
push
in
cmp
sbb
push
test
xlat
adc
cmp
sub
jo
inc
lcall
mov
adc
adc
test
js
push
ljmp
add
imul
movb
mov
push
notb
jl
push
sarb
adc
clc
inc
push
or
loop
mov
xchg
es
mov
rolb
je
push
and
jo
push
pop
push
daa
push
sbb
jae
inc
lea
ljmp
js
pop
jnp
out
xor
lea
mov
mov
or
mov
cmc
sbb
and
sbb
addb
sub
fistpll
and
roll
mov
push
mov
or
cmp
cmp
in
loope
rolb
imul
aam
fs
lock
sub
mov
pop
dec
sub
sub
inc
push
loopne
xchg
or
or
rolb
outsb
bound
mov
adc
sub
ret
push
push
clc
xchg
mov
pop
mov
outsl
mov
cmp
mov
into
push
adc
out
mov
cmp
push
fs
popf
jp
mov
out
xor
sub
add
or
psubsb
rclb
pop
mov
and
pop
xor
jl
mov
push
sub
mov
adc
mov
rcl
xchg
sub
stos
daa
inc
pop
shr
xchg
sub
es
enter
adc
cmp
mov
aaa
pop
out
pop
add
pop
adc
icebp
es
jle
sbb
ret
pushf
sub
mov
je
mov
adc
pop
and
xlat
addb
icebp
rorb
jnp
adc
dec
aas
inc
mov
sub
mov
jmp
roll
mov
in
orb
cmova
mov
sarl
or
leave
jns
lahf
sahf
xchg
add
insl
loopne
roll
mov
jbe
or
push
and
pop
lods
cmpsb
sub
adc
arpl
inc
call
sahf
or
xlat
pop
add
into
dec
arpl
and
addl
mov
or
mov
daa
mov
or
jb
pop
jo
ljmp
call
jo
dec
aaa
pop
jbe
pop
rolb
sbb
and
je
mov
mov
and
and
jo
add
sbb
jle
sbb
orl
out
mov
push
sub
adc
inc
shll
cld
and
les
xacquire
pop
mov
rolb
data16
jecxz
sbb
cmpsl
sub
xchg
mov
inc
aam
inc
push
lret
cmpl
or
ret
inc
push
mov
lock
shll
xchg
js
adc
pop
push
or
arpl
shlb
sbb
lret
mov
pop
jbe
pop
push
lret
add
test
shll
cmp
xor
ljmp
loopne
adc
pop
xor
in
int3
add
rcrl
pop
orb
cmpsb
sbb
nop
jnp
push
cmp
testb
push
mov
cmpsl
in
mov
cmc
push
pop
lea
insb
rolb
cmp
pop
clc
pop
xchg
xor
xor
jno
push
cli
pusha
and
push
sbb
add
pusha
xchg
nop
lret
push
js
mov
add
add
and
mov
andl
xor
cmpl
hlt
mov
dec
repnz
scas
jo
lahf
push
sub
inc
iret
scas
dec
lods
hlt
dec
js
mov
loopne
jb
insb
dec
cli
xchg
pop
cmp
push
jp
adc
out
push
rolb
push
mov
xor
cmpb
xor
cmc
fnstenv
mov
add
sbbb
xor
mov
dec
int
dec
push
push
mov
orl
movsb
mov
cmpb
pop
cmp
es
jmp
scas
enter
add
mov
test
filds
orb
push
mov
push
or
rol
dec
push
ret
adcb
pop
pop
pop
mov
loopne
cmp
inc
mov
test
push
lcall
jp
pop
push
cltd
mov
inc
sub
inc
dec
sub
rclb
std
insb
lods
gs
and
adc
ljmp
xchg
jp
add
loopne
scas
jnp
adc
and
xorl
xchg
outsb
push
adc
arpl
jo
sbb
out
sbb
inc
push
sbb
shll
xchg
rcrb
mov
push
push
andb
or
rorl
or
shrl
or
pusha
jno
les
daa
jmp
and
ljmp
adc
enter
pusha
push
push
add
pop
adcb
and
je
lret
pop
inc
jb
loop
nopl
lret
mov
adc
adc
addr16
or
or
divb
cmp
xchg
mov
push
dec
pop
ljmp
xchg
mov
ds
leave
cs
pop
int3
mov
pop
test
ds
sbb
jecxz
push
ret
push
inc
inc
and
mov
push
cmp
add
or
push
bswap
mov
pop
cwtl
test
js
adc
adc
mov
or
cltd
jp
sub
or
adc
push
add
pop
push
cmp
sahf
jbe
push
lret
les
cmp
jmp
rolb
xchg
pop
out
sub
cmp
mov
in
sarb
push
jl
and
mov
dec
push
add
xchg
jne
ljmp
xor
mov
mov
push
daa
jecxz
push
sub
adc
in
or
or
push
push
push
rsqrtps
and
fs
push
scas
pusha
out
jge
pop
cmpsl
sbb
pop
sarl
add
rcr
je
pop
ret
pop
mov
push
cmp
out
pusha
inc
mov
popf
lret
iret
mov
fldl
sub
sbb
cmp
data16
add
lea
jb
ret
sub
and
ret
or
pusha
add
or
je
pop
and
mov
clc
cmp
inc
cmc
cmp
adc
or
inc
ffreep
cmp
sarb
or
js
leave
add
or
pop
pmulhuw
arpl
addr16
mov
add
and
les
lcall
xchg
jb
mov
mov
jae
cmp
mov
push
sbb
idivl
pop
shl
in
dec
adc
pushf
jp
mov
and
push
pop
inc
jne
and
mov
dec
js
inc
jae
mov
sbb
cmp
sub
mov
adc
cmpb
mov
loopne
lock
and
push
dec
cld
and
test
jne
push
int
and
incb
dec
ficomps
rcrl
push
inc
add
adc
imul
add
push
jp
cmp
mov
cli
mov
cmc
push
hlt
jo
pusha
test
mov
sbb
inc
sub
dec
or
push
stc
rcr
mov
fdivrp
add
cmpsl
data16
mov
and
or
adcl
dec
and
cwtl
pop
leave
adc
and
js
push
or
shr
aam
sbb
inc
add
mov
mov
dec
push
pop
out
and
cmc
mov
sbb
aaa
call
out
inc
cli
xor
jae
rcll
shlb
cltd
cwtl
ljmp
mov
iret
popa
sub
je
dec
inc
xlat
sbb
loope
fimuls
inc
adc
mov
dec
push
lsl
dec
movsl
inc
mov
outsb
dec
sbb
scas
and
add
or
fxtract
pop
mov
aam
sbb
sbb
cmpsb
and
add
jl
jno
enter
cmp
and
aas
xchg
pop
inc
dec
or
int3
mov
mov
shlb
pop
dec
data16
data16
add
lods
movsl
sub
rolb
push
push
sbb
jl
and
loopne
shl
bound
bound
pop
icebp
mov
cmc
inc
jmp
movb
cmp
or
dec
rolb
clc
xor
add
aad
xchg
adc
push
pop
xchg
or
mov
andb
in
add
adc
sbb
test
movsb
pop
lea
add
out
rorl
push
cmpsb
sahf
pop
mov
outsl
test
stc
pop
scas
test
bound
insl
pop
adc
cmp
xorl
add
lock
sbb
fwait
mov
outsb
pusha
negl
lock
rol
cwtl
pop
scas
pop
lods
push
cwtl
or
inc
fisttps
jl
jp
cmp
sahf
dec
out
jnp
shlb
sbb
add
mov
hlt
out
or
loope
add
pushf
pusha
or
andb
xchg
sbb
pop
cmovle
xor
rcl
inc
push
sahf
inc
in
mov
or
dec
or
data16
loopne
lcall
add
dec
sbb
jb
test
dec
push
movsb
sub
cmpb
ss
pop
sbb
push
aam
jo
movsb
sbb
clc
pop
loop
inc
or
pop
ljmp
mov
repnz
inc
push
add
sbb
push
cmp
add
outsb
add
push
pop
ret
cs
pop
or
loopne
push
jae
popa
add
bound
rorl
or
inc
into
pop
mov
imul
push
clc
ss
int3
sbb
push
mov
sub
dec
inc
icebp
scas
enter
cli
push
jb
sub
adc
or
jno
ljmp
jns
jne
stos
pop
sbb
mov
jp
and
mov
and
push
fidivl
mov
cmp
pop
rcl
aad
add
adc
addb
pop
mov
shlb
add
and
inc
addb
cwtl
stc
add
sarb
or
xchg
neg
test
test
add
ret
shrb
int
rorb
adcb
icebp
sbb
test
jo
mov
adc
add
pop
pop
adcl
mov
shlb
jmp
push
cmpsl
xchg
in
adc
add
out
jae
xchg
mov
in
out
icebp
cmp
dec
cmp
pusha
repnz
adc
mulb
orb
rcll
je
adc
cmp
mov
push
add
gs
sbb
imul
clc
data16
ljmp
call
cmp
imul
lods
mov
jno
inc
dec
subb
lock
add
call
jo
out
adc
add
push
pushf
mulb
stos
ret
test
imul
add
lods
add
push
push
jmp
in
data16
loope
call
movsb
das
dec
insl
pusha
xor
mov
sbb
arpl
in
and
adc
mov
popf
out
sub
pusha
ljmp
scas
inc
imul
icebp
push
jecxz
xchg
push
add
dec
insb
dec
jmp
lret
add
jae
adc
mov
jmp
std
rcrb
lcall
add
in
lods
sbb
pop
aad
pop
sub
pop
adc
fmuls
xchg
ret
sbb
lods
inc
int
mov
repnz
jns
js
push
imul
lock
iret
ljmp
roll
cmp
cmp
call
test
sbb
xor
pushf
test
xor
adc
repnz
add
outsl
inc
fmull
xchg
adc
and
nop
pop
adc
enter
cli
push
add
mov
inc
push
sbb
andb
mov
sub
sbb
ret
pop
push
lea
pop
sti
dec
adc
daa
xlat
push
xchg
push
and
fistpll
outsl
and
sbb
and
leave
cmp
gs
mov
cli
jae
jmp
mov
cmpsb
aam
or
in
loop
and
or
rolb
or
daa
adc
add
enter
jp
and
add
sbb
add
sub
add
popa
jle
icebp
add
or
cmpl
and
aaa
xor
lret
push
jne
cmp
ljmp
movb
sub
pop
jl
mov
test
add
aad
bswap
inc
subb
ja
dec
inc
movsb
cmp
subl
push
dec
xchg
or
popa
inc
mov
testb
dec
jb
clc
pop
pop
mov
sarb
cmp
mov
fimuls
rorl
shlb
out
test
and
sub
add
adc
scas
or
movsb
shrb
jp
fs
std
roll
mov
shl
data16
pop
sbb
sub
jo
in
add
add
or
sub
pop
cmp
push
fstp
outsl
sbb
fs
push
mov
inc
add
add
pop
test
sub
bound
jo
sbb
and
and
pusha
push
cs
mov
sub
rcrb
loopne
sbb
in
and
imul
jbe
xchg
push
mov
jmp
inc
pop
xor
lds
es
mov
icebp
aam
and
adc
scas
imul
push
push
cmpsl
mov
sub
add
dec
jp
insb
or
push
inc
mov
add
pop
pusha
rolb
add
or
adc
mov
scas
add
sub
pop
push
push
xchg
adc
iret
push
xchg
or
mov
or
adc
add
or
sub
push
lea
sbb
push
ds
or
push
and
subb
daa
mov
or
test
sbb
rorl
or
je
pop
mov
push
pop
orb
pop
ljmp
inc
les
add
mov
imul
lcall
gs
les
test
cmpsb
mov
sub
es
mov
lods
lods
andb
xor
popf
addr16
xor
js
jl
and
dec
nop
pop
cmp
jae
adc
cmpsb
pusha
dec
cmp
adc
and
xor
lods
pop
pop
lret
leave
out
cmp
add
jne
into
test
sbb
icebp
je
mov
add
add
popa
or
mov
pop
cmp
sarb
into
dec
decb
cmp
cwtl
sbb
ss
inc
ds
outsl
sbb
addr16
xchg
pop
inc
sub
mov
add
shrb
loope
jne
ret
je
mov
push
setnp
inc
out
popa
cmc
cmp
cld
xlat
icebp
push
jle
mov
xchg
or
inc
pop
addr16
cmp
jbe
pop
and
sbb
cltd
or
loop
mov
sahf
jbe
aas
test
add
xchg
aaa
push
inc
and
or
fisubl
inc
and
fdivs
adc
sub
mov
cmpsb
jle
cmp
push
cltd
inc
jo
rcrl
inc
push
push
add
imul
stos
inc
push
and
loope
inc
out
adc
imul
sub
popa
hlt
and
and
mov
rorb
movsb
xor
cmp
je
cmp
call
rorb
add
and
mov
pusha
push
mov
inc
pop
or
pop
ret
inc
xchg
and
lods
inc
stc
add
jnp
add
es
cmp
adcb
jo
js
push
cwtl
push
sbb
js
imul
or
test
cmp
xlat
aam
sub
ss
pop
clc
mov
cmp
mov
xor
loopne
sbb
jbe
mov
lods
out
and
in
inc
push
push
xchg
in
sbb
call
sahf
jle
pushf
pop
ja
dec
fstpt
int3
pop
and
or
xor
sbb
inc
push
dec
js
mov
add
aam
mov
ja
adc
stc
shrl
xlat
test
or
xor
fsts
mov
das
mov
sbb
shl
aas
push
push
xchg
jo
and
filds
pop
je
movsb
add
sub
inc
pushf
imul
push
addl
loope
lret
sbb
mov
fisubl
subl
outsb
cld
jmp
and
dec
dec
mov
pop
adc
clc
and
ret
jl
jp
sahf
cmpsl
ds
pop
mov
cmp
sub
insb
int3
lahf
popf
sbb
sub
nop
mov
ret
scas
jne
cmp
ret
push
js
pop
sbb
push
enter
popf
xor
dec
rorl
mov
out
push
sbb
lock
daa
push
adc
add
add
xor
mov
push
push
jle
rcrb
push
dec
js
lock
movsb
adc
call
or
mov
push
mov
and
xchg
adc
jb
add
xor
mov
shrb
add
push
push
xor
sub
addr16
sub
rorb
sub
jge
clc
xor
scas
out
call
mov
add
push
xor
mov
add
and
xchg
inc
xchg
inc
out
jl
ret
roll
adc
dec
mov
push
mov
lret
adc
out
call
lock
add
inc
sbb
and
adc
loopne
rolb
jb
leave
icebp
push
out
push
dec
cmp
or
inc
sub
int3
leave
cmp
or
mov
pop
mov
mov
cmp
rcl
loop
out
sbb
lods
sub
pop
jmp
enter
imulb
mov
adc
mov
inc
pop
cwtl
adc
xor
mov
mov
push
and
test
fdivl
add
mov
dec
xchg
ss
lea
mov
ret
mov
adc
das
adc
jb
sbb
add
add
mov
fsubs
add
cld
mulb
dec
and
mov
pop
shr
addb
or
push
xchg
inc
inc
dec
pusha
fsubrl
stos
adc
or
xor
cmp
lods
jmp
nop
dec
mov
mov
and
sbb
sbb
ret
jp
add
pop
adcb
out
sub
adc
lret
roll
mov
lods
dec
and
pop
add
enter
ljmp
decb
add
movsl
xchg
inc
ja
adc
fsubp
push
test
ds
jns
xor
aad
push
adc
in
add
rcl
adc
dec
xchg
jnp
push
addb
xor
loop
jp
shl
inc
pop
push
ss
jo
cmpl
mov
retw
jmp
pop
sbb
mov
and
push
insl
sub
add
arpl
mov
orl
shlb
sbb
sbb
js
mov
shrl
or
int3
cmp
loop
mov
in
imul
jbe
sbb
cli
clc
sbb
mov
decb
and
and
xor
add
outsb
ljmp
hlt
pminsw
inc
or
inc
inc
xchg
push
mov
jno
mov
or
adc
loope
jmp
push
cmp
push
lock
cmp
test
or
adc
sbb
lods
mov
fsubrs
or
mov
inc
pop
int3
ljmp
ds
or
adc
adc
pop
pop
les
jmp
pop
mov
sub
push
imul
and
jp
jl
sbb
lock
rorb
and
and
stos
add
enter
and
jecxz
push
shlb
or
push
ljmp
or
das
push
subb
imul
sub
test
xchg
lea
push
faddp
cld
push
out
mov
orb
out
pop
xor
xor
sub
mull
test
popa
sub
cmp
addl
or
loop
cmp
jne
xor
sub
xor
ja
jle
or
or
sub
adc
enter
mov
sub
adc
adc
rorb
jle
stos
and
lret
sbb
loope
jmp
shl
movsb
lods
xchg
and
mov
mov
clc
push
ss
hlt
mov
movsl
push
add
push
cmp
repnz
xchg
ljmp
inc
lret
popa
mov
push
and
mov
repnz
popa
fs
jle
addl
and
mov
fsub
mov
outsb
pop
lea
addb
push
cltd
out
or
or
daa
test
shrb
test
loopne
adc
xchg
outsb
inc
mov
test
hlt
int3
sbb
push
sbb
xchg
xsha256
fcmove
jmp
sbb
pushf
aad
imul
loopne
add
sub
add
cli
rorb
repnz
or
leave
test
sarb
and
push
inc
aad
or
sti
and
and
and
xchg
bound
sbb
pusha
cli
sbb
add
or
pop
fmul
sarl
pushf
jnp
xor
sbb
cs
adc
cmp
pop
jge
cmp
and
push
notl
or
ror
pop
pop
or
or
push
enter
jo
mov
enter
jb
repz
sbb
push
cmp
fbld
test
jnp
and
test
sub
out
rcrl
push
cmp
sub
lods
shl
lods
add
xchg
test
popa
push
lcall
and
xor
lret
mov
and
icebp
test
lock
addb
or
stos
mov
jg
jo
push
leave
cmpl
mov
aam
ret
jno
sbb
lret
ljmp
int3
push
cmp
outsl
mov
test
add
inc
loope
fildl
add
push
inc
shll
lcall
add
jecxz
les
and
loopne
es
les
loopne
rcl
inc
inc
jo
sub
js
addb
mov
movsb
fsts
inc
cmp
lds
push
ja
fmull
call
add
mov
sub
mov
ret
js
add
pop
push
push
addb
ret
adc
or
add
sub
mov
push
aas
stc
or
pop
sub
cmc
inc
mov
xchg
je
in
mov
xchg
xchg
cmc
dec
imul
sub
adc
ss
push
sbbl
jne
sahf
and
lock
cmp
repz
adc
push
mov
sub
fsub
sub
inc
sub
sub
stos
das
or
xor
shl
sbb
jg
lods
cmp
mov
adc
push
call
pop
loope
lock
dec
add
pop
jne
lock
adc
add
loopne
jp
nop
arpl
jl
or
nop
lock
jmp
push
push
call
popa
pop
push
mov
imul
pop
xor
xchg
and
out
push
and
aam
push
aam
sti
test
ljmp
jae
lret
sbb
hlt
sbb
mov
pop
bound
cmp
ret
mov
das
pushf
or
or
push
bound
and
sub
mov
sbb
or
insb
jmp
cmp
mov
add
jp
add
push
adc
fimull
jecxz
adc
adc
xor
test
adc
shrb
lret
loopne
in
push
push
fwait
inc
insb
inc
mov
jecxz
pop
insl
es
jno
mov
cmpsl
or
xchg
dec
and
push
stos
xor
adc
push
pop
push
aas
std
push
pop
jns
lea
icebp
and
adcb
xor
pusha
fwait
adc
aam
push
or
push
leave
or
jne
arpl
jp
push
test
jp
add
add
xor
call
push
or
popf
ret
orb
cmc
leave
test
loope
xchg
add
push
push
lea
es
push
add
pusha
mov
add
xchg
pop
adc
sbb
or
pop
mov
or
xchg
cld
mov
cmc
and
test
prefetch
or
rclb
loop
out
dec
inc
mov
pop
mov
clc
cmp
loopne
imull
adc
rol
adc
jge
sbb
pop
and
push
pop
push
outsl
xchg
or
add
loope
pop
mov
cmp
sbb
pop
addr16
push
or
insl
cmp
sbb
data16
add
adc
jae
mov
lock
adc
test
dec
pushf
cmp
xor
aaa
icebp
jb
mov
loop
cmp
shrl
sub
pop
xchg
xor
scas
or
mov
rcll
pop
pop
cmp
enter
popf
test
cmp
fadd
addb
clc
sub
mov
pop
push
ret
push
or
or
dec
popa
aaa
mov
or
inc
inc
cmp
sbbb
cmpsl
sbb
mov
mov
dec
add
xor
sbb
dec
dec
push
inc
or
jo
push
and
popf
pop
dec
in
xchg
push
mov
cmp
roll
or
icebp
adc
xorb
mov
adcb
xchg
xchg
adc
and
dec
sbb
stc
mov
xor
dec
sbb
mov
mov
mov
gs
inc
sub
push
loope
leave
cmpb
test
xor
rcll
adc
es
add
cmp
jo
cwtl
rcrb
mov
cmc
inc
mov
mov
lds
dec
xor
jno,pn
loope
and
mov
sarb
sub
and
adc
cmp
mov
pop
pushf
xor
enter
pop
add
add
dec
sbb
mov
ret
shrb
sbb
sub
pop
inc
adc
add
inc
add
out
pop
push
jmp
sub
sbbb
leave
mov
cli
sub
xchg
imul
das
pop
adc
xchg
popa
hlt
and
pop
fldt
jecxz
mov
push
jp
fadds
and
lret
xchg
mov
jmp
nop
jb
inc
or
push
pop
dec
fisttpl
cmpsl
jo
insl
push
fistps
outsl
test
andb
inc
mov
rol
xchg
ret
push
push
inc
mov
shl
xchg
mov
pop
or
jmp
inc
lea
inc
movsb
and
mov
adc
lret
lcall
push
ja
jb
mov
push
int3
and
sbb
arpl
pusha
or
push
data16
jbe
fiadds
adcl
inc
xchg
xchg
inc
push
sub
pusha
dec
loopne
fimull
or
cmp
jecxz
xor
roll
inc
push
sahf
lock
iret
mov
push
push
ret
and
adc
sbb
mov
pop
jge
sbb
sbb
cmc
adc
and
ret
mov
push
fnsave
mov
xchg
mov
jp
pop
daa
or
pop
pop
or
sbb
mov
adc
sbb
xchg
loopne
xor
dec
int
mov
rol
and
cwtl
xchg
in
ljmp
nop
adc
xor
stc
mov
inc
rol
addr16
sbb
popa
daa
arpl
jno
rcrb
jle
test
rcll
or
or
stos
dec
mov
adc
add
fmuls
pop
and
cmpsl
mov
dec
cmpb
rolb
sbb
scas
pop
sbb
fsubrp
pusha
lea
leave
mov
loopne
popf
jb
popa
adc
mov
pop
test
sub
xor
sub
dec
imul
jb
mov
adc
stos
shrb
pop
loope
lock
insb
ljmp
shrl
loope
roll
xchg
or
cmp
mov
sahf
outsl
sub
sub
loope
add
jo
xchg
mov
int
sar
rcrb
cmp
sub
andl
jecxz
mov
shrl
cmp
ret
imul
sub
xor
sbb
sbb
imul
or
sbb
mov
test
bound
inc
and
clc
jmp
int3
pusha
je
shl
into
in
jl
movsb
sub
xchg
xchg
inc
loope
outsl
pop
pop
xchg
mov
mov
cmp
shlb
adc
push
imul
adc
mov
jo
dec
ret
add
sub
cmpsl
sbbb
js
xor
stc
adc
push
cmpsl
jecxz
sub
lret
adc
push
lret
add
add
jno
xchg
sbb
icebp
movsl
mov
sahf
mov
cmp
jmp
daa
push
dec
xchg
push
inc
adc
out
mov
sbb
mov
lret
adc
and
dec
nop
jo
loop
out
ficompl
mov
fmuls
jmp
push
pop
xchg
pop
mov
or
shrl
jge
sub
mov
lock
movsb
xchg
xor
add
rorl
jl
call
push
push
loopne
and
rorl
pop
pop
cmp
loope
add
xchg
pop
push
sbb
inc
loopne
and
lods
dec
ret
imul
pop
mov
nop
and
xor
cmp
cmp
inc
jbe
push
cmp
das
push
pop
push
jmp
xor
fistpl
jl
inc
pop
scas
mov
xchg
cli
into
stc
add
push
clc
add
clc
les
cmp
adc
dec
push
xor
ss
int3
sahf
adc
add
loope
cmp
enter
rolb
inc
and
outsl
js
icebp
loop
or
cmp
mov
xchg
add
call
lock
dec
addr16
add
dec
push
repnz
mov
pop
xchg
loopne
enter
outsb
sbb
push
mov
jb
pop
pop
or
or
out
rolb
les
sub
add
movsl
test
bnd
mov
mov
xor
hlt
or
pushf
cwtl
adc
push
add
pop
add
xor
cmp
and
jo
ljmp
clc
jo
or
and
adc
mov
movsl
loopne
sub
adc
sbb
mov
add
cmp
or
push
stos
pop
xor
mov
stos
or
sbb
imul
fs
add
lea
shl
inc
int3
add
or
push
mov
mov
adc
and
cmc
lods
sub
jno
leave
mov
xlat
imulb
or
add
add
dec
add
push
setbe
pop
adc
push
push
or
repz
ret
test
daa
imul
shrb
xlat
xorb
jo
push
pop
stos
leave
inc
push
cmp
cli
and
sbb
pop
out
jns
and
inc
jo
cmp
add
into
pop
xchg
dec
ja
and
mov
push
mov
sbb
dec
into
sbbb
jo
mov
daa
adc
sarb
ljmp
inc
cmovl
adc
push
mov
or
nop
add
xor
popa
mov
add
push
lret
out
sbb
mov
and
inc
cmc
cmpsb
rcrb
or
xor
xor
lods
inc
jg
pop
xor
xchg
push
sahf
cmp
and
sbb
les
mov
pop
shrb
add
loop
inc
mov
xchg
and
mov
add
icebp
cmp
and
dec
pusha
mov
jge
out
push
adc
cmp
cmp
mov
mov
in
cmpsb
or
test
pop
inc
ljmp
mov
or
call
add
push
cmp
nop
xchg
adc
jb
dec
cmp
xor
or
inc
sarl
aaa
add
bound
aaa
pop
add
push
cmp
push
subl
mov
xor
testl
ret
sysret
sbb
add
insb
mov
in
mov
sub
movsb
outsb
jecxz
add
ret
outsl
add
xor
nop
cmp
dec
dec
out
loopne
xchg
cwtl
jo
add
push
push
int3
cwtl
adc
dec
sbb
enter
or
mov
jae
daa
dec
and
add
jl
loopne
pop
movsb
lds
or
mov
clc
inc
fisubrs
adc
xor
sbb
adc
and
adcb
jl
push
lods
jae
add
pushf
pop
popa
shlb
shl
popa
call
xor
cwtl
mov
enter
dec
test
push
add
dec
sbb
inc
js
ds
mov
adc
jge
fdivp
adc
loope
daa
add
push
ja
pop
jbe
pop
inc
jecxz
js
into
out
sahf
add
rorb
lock
jecxz
sbb
adc
sbb
add
cmp
xchg
cmp
sbb
lods
jno
or
sbb
add
pop
ficomps
fidivrs
mov
sbb
or
and
inc
mov
out
pushf
adcb
lret
scas
sbb
fcoml
or
xchg
fdivl
popa
insl
jno
sbb
inc
sub
inc
push
push
cmp
cltd
orb
or
inc
push
push
and
pop
pop
dec
shl
push
jmp
rcrb
inc
and
or
adcl
mov
shrb
fiaddl
lahf
mov
add
rolb
out
pop
inc
add
mov
lret
sbb
cld
mov
pop
push
sbb
mov
test
push
mov
sbb
push
mov
adc
call
loop
js
loop
push
jmp
jb
mov
out
pop
stos
xor
arpl
faddl
jle
sbb
sub
les
mov
test
sbb
jl
dec
leave
jo
jmp
inc
rolb
std
movsw
push
xchg
daa
sbb
cs
rolb
shrl
mov
and
jmp
jp
test
aam
xor
repz
adc
ret
jb
addr16
inc
ds
push
addb
adc
jle
push
pop
adc
punpcklwd
and
scas
xchg
mov
cmpsb
xchg
add
or
and
inc
adc
mov
adc
dec
and
mov
orb
dec
icebp
push
add
pop
inc
inc
or
mov
cmp
pusha
sbb
cmp
jp
sub
mov
adc
mov
adc
adc
inc
ret
je
movb
das
or
ret
call
imul
adc
outsl
movsb
pushf
rol
sbb
push
pop
adc
in
or
sarl
ss
jno
ror
mov
and
xorb
fidivrs
cmp
mov
adc
lods
pop
pop
fisubrs
mov
test
jl
xchg
mov
add
aam
dec
pop
sahf
outsl
jns
inc
rcrb
enter
sarb
scas
repnz
dec
xchg
or
adc
fs
subl
lahf
push
bnd
xor
push
dec
pop
adc
pop
lret
push
push
sarb
sbb
outsl
ret
xor
xchg
pop
push
pop
mov
mov
push
push
imul
push
orl
notb
orl
lret
inc
jns
rclb
test
sahf
rcrb
add
pop
sbb
imul
sub
fadd
mov
movsb
adc
xor
aam
mov
push
test
test
pop
mov
sbb
mov
sub
mov
lods
into
xor
xlat
pop
pop
adc
dec
fadds
inc
dec
out
adc
js
int3
rcr
adc
in
in
por
lods
xor
rorl
addb
jge
and
mov
je
lea
push
sets
and
jb
insb
sub
jo
or
or
imul
lea
pushf
sub
cmp
or
cltd
mov
xchg
jmp
mov
loope
adc
and
jo
ret
sbb
add
rorb
enter
inc
test
xor
mov
fstps
jb
and
movb
push
mov
pop
or
aad
ret
adc
xor
mov
inc
hlt
clc
ds
pop
lock
and
insb
mov
pop
in
or
or
daa
pop
xor
jp
xchg
mov
xchg
repnz
or
lcall
dec
loop
cmp
imul
pusha
fdivl
pusha
icebp
fisubs
cli
push
and
sub
and
xorl
mov
shlb
pop
popa
jno
leave
mov
sbb
jo
adc
add
imul
sbb
push
popf
je
call
xor
xor
adc
and
xchg
shll
xchg
push
fisubrl
je
loop
cmp
adc
mov
xchg
call
js
cmp
cmp
lods
or
lock
pushf
outsb
in
enter
shlb
outsl
or
add
adc
push
lret
dec
pop
das
add
ret
cwtl
ret
filds
outsb
adc
insb
push
xchg
loop
out
out
sub
leave
fmuls
lret
mov
mov
cmp
cmp
gs
loopne
cmp
lock
push
add
dec
or
or
mov
jb
mov
jo
loopne
js
xchg
or
ror
push
imul
xchg
jle
dec
shll
cmp
pusha
sub
loop,pt
cmpsb
call
ljmp
pop
mov
mov
xor
adc
dec
jp
test
adc
xor
adc
dec
ja
into
test
sub
js
pop
mov
dec
out
leave
lock
lea
inc
rol
iret
xchg
lds
sbbl
test
inc
or
or
xor
test
icebp
ljmp
and
mov
adc
dec
aaa
cli
pop
movb
out
mov
adc
and
popa
push
adc
pop
xchg
adcl
or
and
xchg
fcmovnbe
pop
adc
mov
add
cli
les
test
sbb
cmp
push
cmc
repz
jmp
mov
jmp
sbb
xchg
xchg
mov
ljmp
pusha
jno
mov
lret
jne
sub
push
ret
test
test
and
inc
mov
jns
sub
scas
inc
push
dec
imul
pop
and
andl
out
jno
mov
push
push
mov
or
cli
cmp
fidivs
adc
loopne
and
stc
push
mov
xor
into
test
add
add
cmp
inc
mov
lea
std
mov
pop
push
add
mov
out
sbb
fadd
inc
cmp
call
lret
cli
push
cs
xor
add
mov
lods
movl
popa
mov
cs
sbb
imul
or
imul
dec
mov
add
int3
ret
adc
mov
add
loop
push
pusha
pop
ljmp
xchg
cmc
push
or
shr
or
ret
ljmp
shl
dec
cmp
clc
faddl
mov
or
incb
add
or
popf
clc
mov
fsubs
dec
sub
xchg
and
lcall
sub
mov
add
push
cltd
lods
fwait
add
pop
inc
sub
adc
jbe
inc
mov
mov
stc
sbb
fmul
inc
nop
push
adc
xor
sbb
mov
xor
push
sarl
inc
or
xor
enter
imul
dec
adc
std
insl
sbb
jmp
dec
clc
adc
sbb
mov
add
lcall
and
and
mov
lret
inc
xchg
pushf
inc
repnz
movsb
adc
icebp
xlat
jle
adc
cmp
add
push
shl
ret
notl
sbb
insb
sbb
clc
imul
dec
enter
jmp
sbb
adc
ret
sbb
cli
sub
add
stc
inc
dec
sbb
pop
jne
ret
sbb
or
and
repz
jb
push
mov
clc
adc
inc
test
inc
ret
cmpsl
mov
mov
pusha
movsb
sbb
ret
rolb
sbb
femms
adc
bound
add
cmp
xor
rorb
stos
mov
sbb
lret
cmc
je
inc
daa
add
leave
inc
or
mov
inc
icebp
cwtl
aaa
pusha
inc
pop
sbb
icebp
cmpsb
into
stos
stc
add
pop
xchg
or
adc
gs
inc
rcrb
mov
loope
sbb
cltd
or
push
cmpl
xor
ret
inc
xor
aas
dec
add
ss
ds
mov
cmp
or
lret
addr16
popl
pop
add
adc
addr16
pop
nop
out
nop
fisttps
adc
mov
mov
xlat
int
or
adcb
fstpt
sarl
xor
xchg
icebp
nop
adc
sbb
mov
adc
scas
xchg
adc
jg
in
lea
sbb
mov
sub
pop
cmc
bound
sub
mov
add
push
mov
dec
shlb
add
inc
push
add
or
inc
popf
fiadds
sub
mov
loopne
xor
push
inc
lcall
aaa
mov
mov
rorb
sahf
mov
fldenv
rcrl
jbe
sub
rolb
jno
jl
mov
ljmp
push
dec
movsl
call
fcmovnu
xchg
loop
loopne
les
icebp
mov
inc
dec
lea
ss
mov
popf
push
test
add
xchg
pusha
add
lret
or
sub
cmp
add
push
movsl
dec
sti
xchg
or
dec
test
stos
icebp
jae
xchg
inc
iret
and
sbb
ja
or
sbb
pop
add
cmp
testb
arpl
sub
pop
test
xchg
and
sbb
pop
out
mov
in
bound
mov
test
addr16
dec
test
add
sub
xchg
push
jb
pop
jp
sbb
rcll
lods
xor
inc
call
add
popa
js
pop
cmp
adc
sbb
dec
adc
sbbl
add
mov
inc
data16
add
jae
sub
xchg
mov
sti
je
pushf
js
xor
stos
aaa
mov
sbb
imul
xor
dec
add
cmp
and
pop
test
or
or
sarb
test
dec
lcall
mov
ret
adc
mov
rol
insb
loopne
mov
ljmp
sub
js
xor
add
mov
repz
cmc
jb
or
or
stc
sbb
loope
call
sbb
add
pushl
lods
xchg
adc
mov
inc
or
aad
ficompl
movb
stc
push
or
jne
sbb
test
xor
jno
js
cmpsb
xchg
ljmp
mov
imul
push
jns
or
loop
xchg
jmp
call
xor
or
lret
lock
fstpt
shl
ss
push
and
popf
and
xchg
xchg
mov
and
and
push
push
rcrb
loopne
or
push
mov
sbb
mov
inc
loopne
loop
imul
mov
sub
sbb
xchg
mov
xchg
adc
jecxz
hlt
add
sbb
adc
aaa
ljmp
popa
push
add
inc
push
or
test
sub
je
hlt
lahf
lods
add
ret
fcmovb
hlt
pop
in
push
dec
insl
dec
call
sahf
or
jecxz
add
inc
sahf
inc
pop
xchg
push
adcb
bound
and
je
packsswb
jnp
add
lret
test
jb
cmp
sub
inc
mov
rclb
repz
jbe
inc
add
add
loope
sbb
xor
xlat
xor
loope
mov
or
dec
jb
adcl
mov
push
mov
jb
testb
and
cs
pop
ret
adc
push
into
icebp
add
xor
mov
xor
push
repz
cmpsb
movsb
les
pop
cmp
es
cmp
into
jmp
dec
pop
xor
push
push
ljmp
pop
jnp
cmp
xor
dec
sbb
mov
jae
add
sub
test
dec
lret
dec
pop
add
push
pop
add
in
dec
bound
sbb
sbb
sti
push
push
and
push
cmp
jmp
mov
cmove
inc
or
aad
into
mov
mov
push
insl
sbb
push
data16
adc
add
add
add
push
pop
cmc
adc
xchg
or
mov
flds
sbb
push
inc
mov
sub
xchg
or
mov
jb
roll
enter
jo
add
inc
dec
sub
enter
sbb
xlat
testb
fs
dec
push
in
inc
sbb
xchg
pusha
in
xor
testb
xorl
cmpsl
pop
mov
adc
test
scas
dec
xor
loopne
xlat
mov
movb
ret
insb
adc
rcrb
lock
in
jecxz
jno
pusha
cmpl
and
push
aad
out
lret
enter
mov
in
sti
xchg
data16
sub
jb
adc
or
push
sub
gs
pushf
jl
and
mov
pop
xor
adc
push
movb
lock
ret
jmp
orb
das
inc
push
stc
and
lea
lret
mov
in
xchg
enter
les
gs
or
add
mov
xor
inc
push
adc
add
inc
subl
and
xor
add
or
adc
push
add
xchg
orb
sub
inc
push
ret
cmp
mov
add
jo
je
push
and
xorl
xor
js
repnz
and
lahf
sbb
test
adc
and
sbb
sahf
ret
inc
add
adc
cwtl
mov
loope
jne
rorb
ljmp
pop
pop
jmp
xchg
xchg
add
xchg
leave
jge
lods
movsb
push
mov
and
je
lret
dec
sub
dec
rolb
inc
ret
cwtl
addb
in
rcll
mov
lods
and
xor
add
inc
pop
or
xchg
push
lret
dec
stos
into
adc
add
fidivrs
rclb
add
or
popa
hlt
sti
pop
push
loope
jle
jo
fdivrs
and
addr16
sub
nop
rcr
add
addr16
push
outsl
mov
daa
push
loope
sahf
mov
sahf
jb
clc
sbb
and
mov
or
jl
lock
jl
and
hlt
add
es
jb
call
and
daa
sarb
sbb
sbb
out
rol
mov
jmp
mov
cmp
pop
adc
add
sbb
ret
jno
mov
inc
pushf
fsubrl
pop
jb
inc
jo
adc
jecxz
adc
or
sbb
push
cmpsb
add
push
sbb
push
mov
inc
mov
rcll
punpckhwd
add
xorl
jnp
lock
pushf
mov
mov
inc
xchg
push
sbb
bound
ret
sbb
ret
push
jl
add
mov
ret
lret
loopne
add
enter
pop
pop
ss
or
sar
add
sub
push
sbb
addl
sub
push
loope
add
mov
adc
inc
pusha
je
lret
add
shrb
int3
pop
call
ds
push
push
sbb
adc
lret
sbb
mov
and
xchg
ret
lret
sub
jo
mov
scas
int3
loopne
push
orl
data16
pusha
pop
push
sbb
or
mov
add
push
sbb
push
test
imul
shl
sbb
mov
mov
insb
int
idiv
insl
sub
shlb
or
adc
push
mov
push
push
push
push
stos
sbb
or
rolb
sub
cld
pushaw
loopne,pt
fs
sbb
add
dec
mov
or
jne
sbbb
inc
dec
xchg
ret
shlb
dec
enter
sub
inc
in
mov
mov
and
adc
mov
mov
sbb
cmpsl
jmp
add
cmpsb
adc
add
sbb
cld
insb
roll
pop
mov
fcomps
daa
push
pop
push
sub
inc
out
je
xchg
mov
and
push
popa
inc
pop
mov
out
inc
movsl
aad
icebp
mov
arpl
xchg
clc
std
ja
rorb
es
jmp
xor
push
roll
sarb
adc
stc
add
in
sbb
cmovnp
or
or
es
or
or
adc
fs
hlt
xlat
cmp
adc
dec
push
jmp
add
push
push
lock
adc
add
or
les
jo
pop
mov
sbb
cmp
inc
sub
outsl
sbb
pop
adc
push
xor
mov
adcb
or
xchg
dec
repnz
movsl
add
dec
push
fs
cs
sbb
jo
inc
rolb
enter
pmaxub
add
xchg
movsl
mov
push
ret
insl
jl
cmp
pop
pushf
cwtl
les
mov
pop
add
push
cmp
pop
fstps
or
ret
sbb
jle
test
ret
push
icebp
and
cmp
rcr
inc
cmp
mov
int3
into
dec
pop
adc
and
movl
mov
ds
cmp
add
pop
test
insb
sbb
ja
cmpsb
push
cli
push
sbb
or
mov
sbb
mov
cmp
push
push
mov
fisubrl
mov
sbb
test
shrb
inc
xchg
xchg
pop
cmp
test
pop
dec
cs
stos
subl
inc
jbe
enter
mov
mov
out
jo
or
mov
inc
repz
inc
dec
xchg
cmpb
add
add
outsb
inc
icebp
je
cmp
icebp
pop
push
outsb
test
or
mov
add
pushf
mov
and
pop
dec
add
sbb
sbb
repnz
xor
loopne
xchg
addb
repnz
push
xor
ret
outsl
cld
xchg
and
sbb
ret
cmp
outsl
adc
negb
add
dec
push
jo
mov
mov
and
or
popf
testb
addl
pop
inc
add
dec
sub
leave
adc
pushf
popa
push
and
pusha
inc
loopne
int
shlb
dec
pusha
pop
pop
icebp
add
or
ret
jecxz
cmp
sub
jno
pop
rcll
pop
jb
and
incl
pop
add
inc
rclb
les
mov
inc
push
ficompl
add
ljmp
clc
xor
lods
test
push
dec
rolb
xchg
add
and
xchg
es
test
loop
out
push
xchg
pop
cmp
lahf
pop
ret
xorl
cmp
jge
popa
xchg
and
add
mov
pop
push
xchg
jo
mov
test
mov
rclb
pop
pop
es
insb
sarb
sbb
pop
shll
mov
dec
shlb
add
rol
lcall
clc
pop
fimull
inc
or
pop
dec
cmp
jecxz
jp
loope
scas
test
pop
sub
sub
adc
xlat
xchg
pusha
or
add
dec
xor
push
outsb
imul
lea
xor
sub
push
jl
pop
test
shrl
sub
enter
push
add
mov
or
jno
pop
jecxz
sbb
mov
push
add
in
xchg
or
sbb
inc
outsl
sbb
or
inc
js
mov
jno
loope
push
mov
push
or
add
inc
scas
add
adc
sbb
dec
pop
sbb
push
pop
pop
sbb
lods
notb
mov
xchg
dec
sbb
cld
push
mov
pop
mov
clc
xor
push
scas
hlt
mov
or
pop
and
sbb
jmp
in
sbb
jnp
scas
lret
lods
push
ds
clc
not
sub
mov
addb
adc
xchg
cmc
jo,pt
lock
in
adc
push
sahf
pop
adc
mov
cmp
pushf
test
add
dec
pop
roll
push
fildl
ret
push
xor
jnp
push
shlb
or
xor
xchg
loop
and
shlb
and
ss
add
jmp
fimull
jo
sarl
jae
in
or
dec
and
adc
nop
in
push
shll
add
xchg
mov
repnz
sbb
add
cmpsb
clc
mov
sbb
jmp
mov
jo
add
test
mov
hlt
or
test
mov
inc
loope
xor
sub
call
clc
sbb
icebp
or
fcmovb
sahf
add
fs
push
popa
sub
dec
push
or
pavgw
int
push
pop
test
lcall
aas
sbb
add
fistpll
sbb
add
insb
rclb
sbbb
lret
cmp
adc
cmpsb
cmp
add
inc
enter
hlt
aam
cmpb
cmp
out
cmp
in
cld
loopne
xchg
sbb
popa
pop
jl
js
pop
lea
dec
mov
out
sub
lret
sbb
add
les
inc
adc
and
or
rcrl
mov
dec
pop
out
lock
adc
faddp
and
add
dec
shlb
jge
push
pop
gs
insb
mov
rol
mov
mov
pop
inc
dec
fsubrs
mov
stos
and
cmp
push
subl
push
scas
repz
icebp
xadd
rcrb
sti
push
js
sub
jbe
out
pop
js
jl
mov
add
and
mov
popa
shlb
push
test
xchg
lret
push
lock
icebp
add
lock
jp
les
jp
movsb
sbbb
jp
mov
dec
ficompl
ds
add
stos
jg
ret
xorb
xor
bound
cmpsl
lods
lods
into
adc
ret
insb
addl
enter
sahf
subb
popa
dec
ret
call
mov
sub
mov
or
in
aad
pop
mov
icebp
pop
add
andb
aam
fdivl
repnz
or
imul
sbb
adc
xchg
lret
inc
sbb
push
std
shrb
adc
int3
push
ss
mov
faddl
addl
rolb
into
ret
xor
sbb
cmpsb
sbb
jmp
mov
sub
jo
and
imul
mov
jp
or
jecxz
enter
divb
fldcw
and
and
inc
jb
add
xchg
jns
enter
pushf
or
add
pusha
sub
movsb
inc
mov
inc
test
ret
js
inc
aam
jmp
pop
or
orb
xor
imul
popa
push
mov
mov
push
xchg
ret
bound
add
add
xor
pop
fisttpll
fsubs
or
test
enter
mov
mov
jb
lock
imul
adc
sti
aam
push
jb
mov
shlb
xchg
cwtl
js
es
iret
sbbb
sub
add
ror
and
push
incb
push
dec
out
clc
into
push
daa
or
add
push
aam
add
out
push
jo
jne
test
mov
sbb
repnz
ret
clc
aas
out
mov
adc
or
adc
or
push
mov
pop
ret
notb
das
movsl
in
inc
out
xchg
mov
mov
ja
pop
and
and
inc
xchg
rolb
outsl
cmp
pop
outsb
push
jo
mov
add
clc
xorb
data16
xchg
inc
shlb
sbb
rcll
and
in
enter
dec
push
mov
cmp
jns
rcrl
or
pop
xor
imul
mov
test
or
add
rolb
push
or
hlt
sub
push
aam
rorb
or
add
popf
cmp
or
or
mov
inc
fsubr
xchg
dec
or
sub
leave
sbb
and
adc
pop
push
mov
mov
jnp
mov
orl
or
scas
push
cmp
mov
or
rclb
ret
pop
out
adc
pusha
push
xchg
pop
push
daa
sbb
ret
add
add
mov
mov
push
cmpsb
dec
xchg
std
push
leave
cmp
lahf
push
rolb
pop
sbb
dec
icebp
lods
push
add
lock
scas
loopne
dec
adc
bnd
xor
dec
incb
push
jp
mov
or
and
sub
push
xor
push
push
aad
mov
or
mov
or
hlt
push
ljmp
mov
fsubs
sub
aam
sbb
cmp
lock
add
inc
pop
movsb
push
nop
lods
jno
stos
ret
adcb
push
mov
arpl
sbb
jp
pop
pop
enter
mov
loopne
add
das
xlat
outsl
mov
arpl
scas
enter
push
scas
dec
push
cmp
test
clc
adc
sbb
xlat
ret
sbb
fs
xor
jge
bound
xor
mov
cmp
push
mov
cltd
addb
cmp
xor
add
dec
ljmp
sahf
sub
or
jnp
jp
xchg
pushf
ljmp
ret
jo
pop
add
arpl
jmp
ror
sbb
sbb
jg
mov
adc
dec
int3
cmp
les
ret
sbb
addr16
sbb
jp
push
sub
js
and
cli
testl
ds
leave
push
aaa
push
in
inc
mov
adc
push
clc
push
dec
cltd
mov
sbb
or
push
test
or
inc
in
jmp
sbb
int3
gs
sbb
enter
mov
lcall
pop
call
sub
mov
cmp
mov
lods
sbb
sbb
dec
mov
test
fwait
lock
bound
inc
sahf
aam
adc
ss
cwtl
adc
add
adc
push
xchg
jp
sbb
mov
xchg
xchg
lods
orl
or
std
sahf
mov
xor
outsl
loop
aas
or
fwait
lahf
mov
mov
mov
cmp
js
jecxz
ljmp
addl
cmp
cmp
inc
sti
adc
push
add
pusha
sub
or
add
mov
pop
pop
sub
add
sbb
adc
shlb
js
inc
mov
jmp
and
fsubl
inc
lods
or
bound
incl
push
dec
sbb
je
or
test
inc
rolb
xchg
in
mov
or
push
cmp
pop
js
sarb
mov
jno
push
dec
repnz
add
fst
loope
sbb
cmp
into
cmp
adc
mov
aam
ret
imulb
sub
adc
lock
push
push
das
lsl
popa
xchg
push
or
leave
sbbb
xor
loope
call
dec
cmp
pop
popa
or
fdivrl
sbb
jbe
cmpl
xor
mov
psubsb
int3
or
ljmp
stc
rsm
push
pushf
nop
sbb
movsl
push
ljmp
dec
xchg
mov
fmull
mov
sbb
inc
mov
dec
xchg
dec
out
xor
adc
fsubl
jge
add
mov
rclb
xchg
lock
add
adc
icebp
sub
lret
or
inc
cmp
mov
xchg
test
jnp
mov
xor
aam
dec
inc
or
push
jne
push
hlt
mov
mov
rorb
pop
outsb
sbb
imul
icebp
xor
mov
pop
mov
and
dec
add
outsl
bound
push
insb
mov
adc
mov
jnp
mov
push
outsl
add
mov
ret
push
dec
fnsave
jo
add
call
add
adc
pushf
or
pop
or
adc
jmp
xchg
xchg
cmp
xchg
inc
add
pusha
jns
xor
popa
pusha
lcall
stos
add
xchg
push
push
pop
pop
lret
fsubrs
aam
add
call
inc
es
es
add
adc
fs
clc
test
push
sub
out
adc
inc
and
inc
jecxz
push
div
xor
testb
mov
or
jno
je,pn
inc
add
ret
inc
jge
adc
roll
xchg
adc
inc
pop
xlat
movsl
push
popa
outsl
int3
lods
int
lea
sbb
add
adc
or
dec
addl
shlb
mov
fidivl
push
pop
adcb
popf
or
sub
outsl
je
pop
jb
push
movsl
dec
push
xchg
mov
imul
push
dec
dec
shl
and
rclb
bound
cmp
pusha
mov
mov
bnd
cmp
jp
pusha
push
or
stc
mov
pop
dec
sub
dec
mov
scas
dec
lea
pop
fimuls
dec
lods
push
cmp
cmc
mov
arpl
enter
adc
xchg
loopne
adc
pushf
repnz
xchg
fs
pop
adc
outsb
pop
popf
jbe
lock
lea
mov
cmpl
ljmp
add
cmp
add
sbb
loopne
test
and
sub
sbb
dec
pop
push
dec
lahf
mov
inc
add
add
jp
movsb
cmpb
pop
in
cmp
mov
mov
or
mov
shrb
adc
sbb
sub
cmp
call
sbb
sbb
mov
or
or
shll
push
js
push
sub
jmp
adc
pop
lods
push
inc
pop
nop
ret
clc
sbb
movsb
jnp
mov
jo
js
push
and
and
push
ret
daa
movsl
adc
into
dec
sar
jnp
es
adc
sarb
in
sbb
mov
inc
pushf
pop
push
fsubrs
sub
ret
sbb
push
jb
lcall
xor
adc
cwtl
or
outsb
imul
ret
mov
lods
enter
shlb
mov
add
adc
rcl
dec
push
jmp
faddp
push
cmp
ror
xor
xor
hlt
and
or
js
lock
xchg
add
or
mov
sets
pop
es
cld
mov
push
add
ljmp
std
adc
sub
and
xchg
enter
sar
add
cmp
dec
sbb
call
sbb
pop
pop
ret
sub
add
xchg
int
leave
and
cmpsb
cmp
aam
or
xor
pop
xor
testb
cwtl
or
inc
mov
push
and
cmp
sbb
testb
sbb
pop
sbb
adc
negl
pushf
xchg
inc
inc
pop
cli
call
dec
cmp
adcb
adc
ljmp
loope
mov
inc
cwtl
and
mov
dec
fadds
adcl
out
imul
lcall
xchg
push
out
mov
xor
loopne
call
jl
dec
or
sbb
mov
cmp
push
jp
adc
movsl
pop
xchg
out
pop
dec
xchg
mov
outsb
leave
mov
pop
fimull
adc
mov
in
inc
dec
adcl
arpl
scas
xchg
xchg
loopne
add
ds
mov
adc
dec
shrb
nop
loopne
fidivrl
fidivrs
push
sbb
sub
dec
sub
push
xchg
sub
adc
add
mov
xchg
or
pop
jae
inc
push
pop
jge
enter
or
sub
xchg
bound
mov
push
movsl
loopne
movsl
sbb
lret
sbb
and
add
in
xor
add
add
out
enter
ret
pop
push
push
and
je
sbb
jle
stc
or
jno
pusha
add
inc
shll
xchg
pop
jl
add
add
mov
in
loope
imul
push
clc
pop
fadds
js
push
dec
cmpsl
pop
xchg
js
lret
push
test
jp
mov
cmp
scas
sbb
out
inc
push
repz
icebp
push
add
cmp
sbb
xchg
xor
jecxz
and
cwtl
sbb
push
sub
sbb
sti
jne
push
mov
popa
pop
mov
es
pop
sbb
dec
push
popa
rolb
push
notb
xchg
xor
into
leave
add
and
mov
ror
or
cmp
js
mov
orb
adcl
push
dec
dec
sbb
xchg
pop
and
rcrb
inc
or
push
xor
das
sbb
out
push
mov
leave
imul
ret
jo
dec
mov
js
and
js
shll
sub
pop
push
jno
rol
rorb
daa
loopne
inc
ret
orl
insb
mov
adc
cmovs
aaa
sub
cmp
test
rcrb
fsubrl
add
push
push
mov
or
or
lock
pushf
or
popa
mov
ret
movb
enter
pusha
ljmp
enter
adc
jo
cmp
loope
mov
out
mov
add
adc
push
fsub
je
rolb
hlt
fld
movsl
sbb
mov
lods
popf
add
or
push
xchg
testb
push
mov
mov
lods
nop
and
add
dec
cmp
jmp
sbb
dec
dec
call
js
xor
sub
mov
icebp
mov
aam
es
dec
insb
fnstenv
or
add
push
dec
js
cmpb
andl
xchg
cmpsb
cltd
mov
cwtl
subl
lods
mov
dec
xchg
xor
popa
or
push
jmp
aam
andl
dec
mov
push
push
sbb
mov
test
xchg
xchg
nop
enter
mov
ret
cmpsb
sbb
test
push
cmpsb
inc
pop
loop
inc
push
cmp
dec
mov
push
sti
je
jo
fisubrs
sub
je
add
jno
out
aam
mov
mov
mov
mov
push
cmp
cmp
xor
push
scas
mov
push
rclb
xor
xor
addb
enter
test
xorl
xchg
test
jb
mov
xchg
into
jle
xchg
js
hlt
bound
and
push
or
imul
jle
cmp
adc
xor
ret
imul
mov
xorl
mov
cmp
shll
xlat
nop
js
jo
aam
cmp
pop
adc
mov
or
jae
adc
sub
cmovb
pushf
pop
ret
adc
jo
and
push
packsswb
dec
repnz
push
sbb
add
icebp
and
push
push
adc
and
nop
mov
cmp
daa
xchg
dec
xor
enter
sbb
and
add
or
jp
orb
push
mov
xchg
mov
ss
lods
jmp
adc
mov
pop
adc
pop
pop
nop
stos
jge
repnz
xchg
les
pop
sarb
xchg
fimull
jl
or
xchg
pop
sbb
jo
arpl
pusha
mov
push
or
xchg
lea
sub
jno
pusha
add
je
test
adc
packsswb
out
pop
ret
adc
xlat
lcall
cmp
push
add
nop
mov
cli
sbb
inc
sbb
mov
test
and
pop
mov
repz
sub
sbb
sub
or
mov
dec
mov
cmp
add
outsb
arpl
fcom
push
sub
pop
mov
cmp
add
shl
stc
imul
mov
adc
or
xor
xchg
movsb
xchg
ljmp
lret
je
jle
add
or
adc
add
adc
pop
cmp
scas
xlat
sbb
repnz
sbb
push
xorb
mov
mov
pop
inc
adcl
or
jp
dec
sbb
cmc
adc
negl
sbb
jge
and
ret
sub
add
pop
jbe
lock
mov
roll
jo
or
es
sub
or
pop
shrl
mov
add
add
adc
add
and
pop
adc
cs
iret
jle
mov
mov
jne
mov
add
cmpl
ss
and
cwtl
mov
mov
xor
lock
dec
lret
or
inc
lods
dec
lods
add
sub
pusha
adc
dec
sbb
ds
imul
mov
mov
or
dec
or
addl
jno
mov
jne
xor
shll
scas
pop
add
fadd
add
cli
ror
test
sbb
xorl
cmp
pusha
and
loopne
sub
pusha
je
mov
loopne
shl
popa
neg
sbb
sbb
xor
int
and
hlt
xor
push
pop
cmp
leave
rol
test
out
movsb
sub
xor
push
xchg
inc
stos
mov
push
lock
inc
push
cmpsb
jmp
adc
ret
sub
mov
mov
dec
into
jl
dec
inc
xor
push
pop
dec
and
mov
shlb
push
add
push
shr
mov
dec
jno
cmpsl
xor
shlb
add
shrl
jge
out
movsl
inc
and
testl
ret
add
loop
mov
sbb
and
jle
adc
mov
lds
or
pop
dec
mov
inc
cwtl
adc
lea
pop
sarb
adc
add
pop
sbb
push
adc
cmp
or
and
popf
clc
ror
rcl
popa
cwtl
rorb
push
sar
dec
xor
mov
push
dec
sbb
fs
and
cli
push
xor
or
add
push
sbb
jo
pop
data16
dec
xor
xchg
test
mov
addl
lods
int
adc
add
incb
movsl
and
dec
pop
or
aaa
mov
mov
fcomps
sbb
sbb
inc
pop
rcrl
xlat
add
ret
or
adc
sub
out
dec
sub
dec
push
addl
orb
les
cmp
xlat
cmp
adc
mov
repnz
xchg
add
lea
dec
adc
sbb
push
sets
das
cmp
jb
cwtl
jno
scas
movsb
xchg
fwait
movb
inc
cmp
pop
and
nop
aaa
jbe
mov
je
aam
xchg
and
adc
xor
inc
xchg
ds
shr
je
hlt
xor
push
je
and
dec
push
adc
pop
data16
arpl
sbb
adc
fisubs
out
mov
iret
into
enter
add
in
inc
mov
nop
or
cmp
xor
fwait
les
sbb
movb
jmp
clc
jle
in
push
inc
sarb
mov
or
aam
aad
jecxz
loope
and
out
or
and
shl
pop
andb
adc
data16
pop
dec
pop
add
leave
fmull
dec
ret
out
or
jp
jmp
inc
lods
add
jae
cmp
and
jne
cmp
sbb
lret
mov
mov
cmpl
lds
cmp
jmp
adc
test
int
fnsave
les
sti
xor
adc
mov
cmp
jb
jmp
mov
adc
pop
sbb
pusha
sub
cltd
jmp
loopne
dec
adc
jo
or
sbb
xor
jo
sbb
sub
cli
add
bound
push
adc
jb
js
mov
scas
pop
add
je
roll
xor
fadds
icebp
push
push
pop
loop
ja
sahf
into
mov
stos
pop
dec
or
cmp
cmp
lock
xor
test
test
add
add
or
sbb
orps
add
ret
test
cmpb
or
lods
adc
adc
mov
test
clc
lods
add
outsl
xchg
pop
xchg
inc
cmp
push
mov
sub
push
push
push
subb
cwtl
enter
inc
clc
dec
test
pop
icebp
fnstcw
lahf
push
dec
call
stc
pop
jo
xchg
lock
fstpl
fstpl
and
adc
dec
and
cmpsl
jne
js
pop
add
or
ljmp
push
mov
sbb
aam
pop
and
xchg
xchg
add
push
ret
test
lret
sub
adcb
movsb
sub
movsl
pop
xor
mov
add
xchg
or
pop
add
add
xor
shrb
insl
into
in
ds
add
arpl
jecxz
mov
xor
mov
xor
test
inc
orb
xor
test
xlat
stos
xor
mov
push
xchg
orl
push
xchg
add
or
xchg
lods
mov
into
mov
movsl
in
loope
inc
cmpsl
or
fnstenv
sbb
dec
sub
rolb
xchg
sbbb
call
pusha
nop
fs
cli
or
mov
cwtl
adc
xchg
xchg
add
add
test
cltd
es
popa
fnstcw
sub
lods
and
push
mov
sbb
pop
fwait
adc
pop
je
in
movsb
mov
dec
inc
and
sbb
lret
sbb
push
or
movsb
clc
add
adc
jns
and
cmp
js
jle
sub
pop
ljmp
pop
sub
sub
movsb
jo
lods
push
push
dec
jl
adc
pop
push
mov
popa
xchg
stos
jno
xchg
lock
jo
and
test
and
xor
dec
popl
push
test
adc
sbb
push
inc
pop
or
add
add
jl
xlat
inc
nop
cmpsl
xor
pushf
movsb
cltd
stos
push
xchg
repnz
outsb
shrl
sub
test
jmp
xor
sbb
cmp
sub
int
lods
push
call
sar
jecxz
fdiv
adc
ljmp
pop
test
add
adc
ret
ret
adc
push
add
add
xchg
test
pushf
sbb
ret
pop
or
ret
jns
inc
clc
or
pop
or
mov
dec
ficoms
lods
jne
mov
and
inc
jge
inc
sbb
xchg
xor
adc
add
xor
sbb
cmp
push
pusha
xor
sbb
xlat
add
or
cmp
into
xor
adc
or
add
stc
sbb
ror
pop
sbbb
push
pop
imul
adc
sub
pop
xlat
add
js
dec
in
or
js
ljmp
lods
inc
call
iret
mov
sub
insl
rcrb
push
pop
lods
and
mov
movsl
add
xchg
push
xor
sbb
or
jmp
cltd
mov
sahf
xchg
push
outsb
mov
sbb
or
inc
add
imul
cmpsb
fistps
das
lds
das
or
mov
inc
add
rcl
cs
dec
or
inc
mov
je
add
add
aam
loopne
add
test
or
dec
rolb
xor
shlb
sub
inc
aam
sarb
lahf
lock
popa
lea
sub
cmc
dec
push
add
inc
pop
mov
or
roll
jp
das
push
xor
mov
mov
adc
rcl
xchg
cmpsl
in
inc
aad
stos
add
pop
loop
leave
sbb
mov
push
jne
sbb
jecxz
mov
add
jo
pop
rorb
cli
pop
inc
ret
jecxz
nop
xor
add
in
dec
in
and
enter
mov
pop
jnp
movsb
push
sbb
push
repz
cmp
mov
adcl
sbb
push
and
adc
push
outsb
imul
push
sbb
lods
loopne
cmp
pop
stos
xchg
leave
push
sbb
xor
enter
lods
scas
sub
loope
xor
orl
or
adc
xchg
sub
mov
jo
icebp
data16
mov
pop
sbb
lret
dec
dec
push
icebp
inc
adc
mov
repnz
mov
xchg
push
jnp
adc
movsl
lahf
adc
orl
fsubs
and
cmpsl
repnz
hlt
shrl
adc
out
mov
add
je
sub
adc
pop
js
add
fadds
fsubrl
add
bound
adc
cmp
clc
or
cli
mov
and
add
xchg
ror
sbbb
xchg
add
adc
sbb
push
divb
lods
cmpb
repnz
fsubl
xor
sub
mov
sub
dec
sbb
xchg
lock
stc
or
push
pop
cltd
cmp
arpl
inc
xchg
dec
jno
xor
inc
sbb
cmp
pop
scas
sub
in
push
cs
dec
mov
push
mov
nop
push
push
sub
pop
lods
std
cmp
scas
int3
lea
inc
mov
inc
dec
cmp
js
stc
adc
sub
mov
mov
fwait
xor
adc
sbb
inc
ret
lock
mov
jl
and
xor
sarb
pop
push
xchg
lods
jne
test
mov
scas
out
add
imul
xchg
mov
mov
jo
mov
mov
sbb
clc
add
insb
add
cmp
mov
imul
add
sub
xor
imul
jp
shll
lock
fidivl
jg
and
sahf
aam
adc
fisttpll
mov
test
jbe
add
xchg
aad
xor
pop
add
xor
arpl
add
push
movsb
mov
sbb
adc
sub
sbb
addr16
or
ficoml
lret
lock
jecxz
adc
add
sub
call
cli
or
mov
xchg
and
or
in
enter
and
or
jl
inc
pop
psubd
or
push
add
je
add
repnz
cli
mov
out
or
xchg
push
push
pop
sbb
cmpsb
sbb
fs
fcompl
jle
lcall
jb
daa
cmp
push
les
movsl
add
sbb
ret
and
cwtl
arpl
mov
sbb
jo
mov
push
cmp
xor
pop
sbb
call
or
push
cmp
sbb
inc
xor
push
jmp
xor
sahf
or
pusha
scas
pop
sbb
stc
out
sbb
incb
push
xchg
andb
or
je
mov
out
stos
bound
and
je
inc
push
jp
mov
xchg
xchg
push
out
jne
inc
mov
enter
push
out
test
cmp
pusha
jb
or
mov
fisttpl
xchg
and
sub
push
xchg
adc
mov
jne
or
inc
mov
call
adc
jbe
jp
adc
lea
sub
dec
dec
inc
adc
sbb
add
cmp
ljmp
mov
xchg
out
jne
cwtl
pop
mov
mov
rcrl
xor
movsb
inc
mov
fcomps
and
rcrb
cmp
fisttpll
xor
sbb
adc
sbb
jle
mov
pop
and
out
lods
xor
adc
sahf
rolb
pop
mov
into
and
fsubp
xor
and
push
sbb
fs
cs
pop
rorl
stos
sbb
popaw
daa
jb
iret
ss
dec
sub
or
or
loope
mov
adc
mov
push
adc
push
jmp
sbb
adc
adc
sub
xor
or
xor
les
and
adc
sahf
fnstenv
lea
inc
dec
add
ljmp
push
les
and
jbe
xor
inc
cmp
cmp
cmpsb
dec
loop
adc
pop
dec
xor
and
and
test
inc
adc
xchg
mov
jp
loopne
rolb
dec
orl
pusha
iret
xchg
dec
push
punpckhwd
sbb
jb
xlat
jp
lods
sub
clc
int
inc
je
jp
add
cmpb
push
test
cmpb
inc
cli
pop
call
mov
xchg
and
mov
rorl
xchg
inc
push
sbb
inc
mov
dec
sub
popa
pushf
and
pusha
mov
lea
lret
pop
and
adc
jo
mov
scas
nop
xor
cmp
mov
pop
push
pop
and
lods
lods
or
sub
das
dec
pop
pushf
add
test
adc
loopne
int3
out
scas
inc
dec
cmp
shlb
push
xor
mov
mov
mov
mov
bound
sbb
mov
rolb
setnp
add
int3
lock
insb
pop
mov
ret
mov
sete
hlt
movsb
jno
into
cmc
test
sbb
test
out
enter
enter
mov
sbb
daa
xchg
js
scas
pop
ja
rorl
sub
filds
sub
or
or
test
xchg
das
jecxz
push
inc
ss
sbb
lea
xchg
dec
movb
push
sub
ret
loopne
add
lret
sbb
jb
sub
pop
and
xchg
push
into
ds
mov
xchg
mov
loope
xchg
scas
pop
lahf
and
repnz
pop
outsl
stc
sub
movl
mov
or
mov
add
dec
movsl
leave
mov
pop
xorb
xor
mov
arpl
test
jo
sbb
pop
add
push
inc
add
sub
or
test
mov
dec
js
sbb
lock
faddl
add
push
js
adc
jo
push
lock
ret
iret
out
stos
pop
push
stos
std
mov
out
adc
cmp
adc
push
clc
shlb
jge
sbb
cmp
sbb
clc
fisubrl
shrl
xchg
adc
cmp
inc
cwtl
testb
or
mov
shlb
bound
dec
and
jge
sarb
push
sbb
xchg
mov
dec
mov
nop
sarb
aam
or
shll
sub
adc
lods
xorb
pop
test
sbb
push
rol
or
enter
orl
mov
or
dec
mov
pop
imul
rcll
xchg
test
adc
cwtl
ficomps
sbb
lods
mov
jns
rorl
and
inc
or
daa
or
xchg
lea
lret
adc
outsl
hlt
lret
test
jo
sbb
adc
mov
jo
or
ret
inc
fs
pop
add
xor
xchg
dec
mov
movb
pop
cmpsl
sub
and
leave
mov
rcr
cmp
mov
fbstp
call
inc
push
ljmp
adc
daa
lods
push
out
jp
adc
stos
mov
mov
sub
or
fs
pop
out
pavgb
and
test
fildll
punpckhdq
cmp
dec
insb
cmc
mov
inc
ffree
dec
dec
cwtl
shlb
and
xchg
cmpsb
sub
das
push
push
xor
gs
jbe
imul
adc
fdivl
clc
pop
sbb
push
sub
loop
sbb
ret
fs
xlat
add
and
inc
or
pushf
cwtl
iret
test
or
testb
bound
in
je
push
or
cmpsl
xchg
sub
hlt
inc
pop
jecxz
push
es
mov
and
push
mov
popa
sub
enter
loopne
inc
add
mov
rcl
xor
xchg
aam
add
mov
jecxz
add
outsb
push
insl
xchg
and
add
add
aas
cmpsl
jmp
or
lret
xor
cli
or
xor
cmp
mov
or
movsb
xor
pop
inc
cmpsl
push
cmp
dec
insl
sub
mov
mov
mov
or
addl
xchg
adc
lret
or
xor
lret
shrb
gs
dec
nop
adcb
sbb
jp
fcomip
jae
mov
rcr
bound
and
inc
popa
xor
mov
add
shrb
mov
je
cmp
sub
je
mov
in
jno
pop
jecxz
stos
jne
and
inc
cmp
daa
and
cmc
js
lods
xlat
inc
pop
xchg
js
insb
dec
push
mov
test
mov
js
push
jae
testb
dec
push
rorb
fs
lods
push
adc
mov
enter
insb
push
pushf
mov
movsb
pop
xor
or
clc
ret
ret
add
xor
add
add
inc
xor
push
sahf
push
sbb
insl
sbb
sub
cli
inc
pop
mov
mov
mov
inc
lea
or
adc
mov
xor
ljmp
adc
ret
mov
cwtl
adcl
mov
mov
pop
test
dec
hlt
es
or
push
add
inc
or
ret
sub
cmp
mov
and
cltd
cld
pusha
push
fsubrl
or
pop
jge
mov
int
jno
mov
pop
pop
cmp
xorb
jo
or
lock
pop
dec
lret
and
push
push
outsl
inc
add
cmp
add
repz
inc
and
lcall
adc
mov
arpl
push
push
add
test
or
movl
aam
adc
mov
cmpb
xchg
add
xor
and
rol
ret
sbb
mov
enter
push
aam
dec
add
dec
inc
lods
or
adc
xchg
pop
and
loopne
iret
mov
loopne
add
outsl
inc
mov
fmull
mov
fdivs
adc
mov
xchg
pop
loopne
insb
test
out
sbb
ss
jno
shlb
insb
loopne
mov
shl
les
or
leave
in
adc
test
les
jmp
xlat
and
mov
mov
mov
shrb
daa
popa
jbe
xchg
push
xchg
or
testl
sbb
adc
ret
jbe
push
ljmp
and
mov
arpl
or
pop
xorl
orl
mov
sbb
pop
ret
cmp
pop
push
and
or
ljmp
jg
push
xchg
cmp
cwtl
stos
jnp
aaa
mov
sahf
sbb
addb
sbb
push
dec
aaa
rorb
mov
orl
or
faddl
leave
mov
push
pusha
in
iret
push
loope
and
imull
lods
sub
push
rclb
cmp
adc
adc
sti
enter
push
inc
pop
add
inc
mov
mov
scas
or
and
ret
lret
dec
pop
sahf
nop
push
es
mov
or
pop
test
adc
push
lret
pop
mov
aam
pop
test
inc
add
mov
gs
stos
pusha
cli
sbb
popa
push
push
add
add
push
nop
ficoms
mov
int
shll
rclb
push
sub
mov
jne
aad
inc
add
sub
les
xor
cmpsb
pop
rolb
lahf
mov
or
lret
pop
enter
mov
std
nop
pop
or
mov
jle
inc
popa
xor
hlt
xor
roll
mov
or
imul
push
cltd
cmp
ret
loope
sbb
xchg
out
sbb
rorb
mov
adc
mov
jp
push
add
push
mov
cmpsb
or
pop
js
pop
dec
push
daa
add
icebp
lods
das
dec
add
xor
adc
enter
sarb
cmp
push
movsl
rcrb
mov
xchg
xchg
push
sub
mov
lret
shlb
js
in
inc
push
jge
sbb
sbb
adc
pop
outsb
fldt
pop
mov
insb
shlb
mov
orl
or
into
sbb
lea
dec
and
jmp
mov
or
sbb
test
add
xor
orl
mov
xor
cs
adc
push
movb
push
push
les
mov
leave
add
xchg
and
pop
add
push
dec
loope
ret
lret
mov
push
or
dec
sub
xor
jne
push
push
pop
inc
movsb
xchg
pop
xchg
sarb
andl
scas
test
inc
adc
add
cmp
cmp
adc
dec
or
nop
loop
jp
in
imul
enter
pushf
out
or
mov
or
push
add
xchg
inc
fs
xchg
loopne
push
pop
inc
sub
sub
mov
loop
cmp
adc
pop
mov
add
loope
mov
and
xor
adc
mov
mov
rclb
xchg
aaa
aad
or
les
int
insb
or
es
add
and
rcrb
or
movaps
jl
xor
mov
cmp
addl
dec
ret
xchg
lret
sbb
xchg
sub
scas
outsb
aas
cmc
xchg
mov
sbb
cltd
rclb
scas
push
or
orl
lahf
rorb
or
and
cmp
pop
hlt
add
adc
mov
jmp
xor
mov
fst
rcr
xor
and
cmp
pop
adc
xchg
mov
jmp
loop
sub
mov
inc
dec
add
out
push
pop
pop
inc
sub
leave
or
or
rcr
pop
cmp
jmp
push
sub
pop
ljmp
push
sbb
or
enter
aam
xor
add
inc
xchg
cli
xor
mov
or
aam
sub
lock
leave
mov
and
repz
orb
pop
xor
movsl
enter
jb
jb
inc
cmp
fs
push
repnz
clc
or
mov
ljmp
xor
or
mov
leave
mov
push
cmp
add
lret
icebp
aam
or
lods
push
stos
packssdw
add
cmp
xchg
flds
mov
cmp
dec
and
jns
stc
pop
adc
sub
daa
adc
push
sti
icebp
inc
xchg
pop
test
dec
sbb
mov
sbb
loop
xor
jp
xor
faddl
pop
xor
mov
dec
add
and
cs
test
nop
jmp
rorb
add
adc
ret
test
pop
int3
pop
sbbl
sbb
xchg
movups
lcall
add
ficoms
js
xchg
das
pop
pop
call
cli
add
or
loope
jo
fs
in
repz
mov
movsl
sbbl
or
sub
orb
mov
inc
sbb
in
and
jp
adc
xor
nop
pop
and
and
fadds
dec
cmp
ss
adc
inc
inc
roll
test
icebp
out
cmp
cwtl
xor
nop
iret
dec
push
xlat
movsl
popa
inc
pop
jl
aaa
es
movsl
or
xor
lock
push
pop
push
sbb
fs
aam
inc
push
aaa
adc
imul
mov
and
mov
xorl
dec
mov
push
loopne
lods
pop
divl
loopne
jnp
and
push
pop
or
aam
mov
lcall
inc
loop
adc
push
fadds
into
add
pop
adc
sbb
ret
adc
jo
or
pop
xor
inc
stos
adc
cwtl
clc
jo
adc
rorb
enter
popa
or
mov
into
sub
dec
or
jo
in
les
inc
ret
mov
sub
sbbl
and
pusha
inc
repnz
or
mov
xchg
fs
xor
inc
ret
test
andb
sbb
loop
push
mov
dec
adc
insb
jo
ror
test
inc
adc
adc
adc
xchg
sbb
sbb
rcll
jne
sbb
or
xchg
aam
or
shrb
hlt
test
or
in
or
and
inc
and
jp
fwait
sbb
test
push
mov
pusha
and
pop
push
xor
sbb
scas
sub
ss
and
sbb
ljmp
xchg
daa
loope
daa
xchg
ret
mov
or
or
mov
shlb
pusha
int3
adc
test
mov
or
jp
popa
push
rclb
xchg
jge
xor
push
push
push
sbb
pop
mov
dec
sbb
xor
fadds
inc
jle
push
das
push
push
outsl
mov
movb
adcl
pop
lods
test
xor
ja
popa
and
mov
adcl
mov
ljmp
cmpsb
orb
xorb
add
or
mov
xchg
arpl
inc
push
sub
lahf
jp
rclb
mov
push
push
cmpb
adc
lcall
out
faddl
push
test
sbb
faddl
push
je
popf
movsl
push
xchg
or
jb
movsl
xchg
mov
mov
lods
and
ret
xchg
and
sbb
pop
adc
dec
and
push
push
xchg
sbb
push
sub
das
sbb
shrb
mov
sub
lret
scas
add
fisubrl
shl
inc
repnz
rorb
cld
sbb
jle
dec
addr16
or
std
sub
xor
or
hlt
mov
sub
jb
test
xchg
scas
rcrl
add
or
add
icebp
addr16
push
push
das
adcl
add
sbb
mov
add
lret
scas
add
push
sub
imul
ja
jo
loop
aad
push
frstor
roll
cmp
mov
jle
pop
cmpb
jno
enter
orb
add
nop
iret
in
mov
shrl
ret
mov
jp
icebp
or
sbb
push
sbb
push
loopne
loop
jg
clc
mov
hlt
fmuls
cmpsl
and
mov
mov
shr
call
loopne
es
stc
mov
fists
scas
popa
or
loop
push
dec
inc
bound
mov
jo
aad
push
dec
sbb
adc
xchg
cmp
cmp
adc
inc
push
out
and
xchg
cmp
cmp
push
xchg
lods
mov
adcb
dec
sbb
hlt
clc
or
xor
icebp
stos
or
adc
pop
sbb
sbb
sbb
sbb
ds
push
push
mov
test
dec
sbb
xor
cmp
je
enter
in
adc
rclb
xchg
cmp
adc
jo
stos
add
and
dec
and
dec
xor
xorl
loope
adc
adc
or
fs
mov
adc
rcrb
or
pusha
sbb
fsubr
jmp
or
ret
aad
lods
fwait
push
ljmp
jg
je
je
int
sub
insb
or
push
jo
or
push
das
sbb
cmpsl
mov
adc
and
and
into
and
ja
adc
adcl
xchg
lods
or
icebp
sub
or
dec
rolb
rorb
cld
xchg
push
mov
cwtl
out
lret
xchg
fisttpll
leave
leave
sahf
in
mov
push
aas
cmpsl
loope
je
cmp
or
lea
int3
leave
mov
sub
mov
jg
dec
push
or
insb
fwait
nop
cmp
cwtl
mov
push
iret
pop
push
xchg
add
daa
roll
jno
aad
cwtl
add
adc
test
dec
sub
xchg
adc
ficompl
push
cltd
lds
jb
jmp
addr16
and
add
pop
jp
jb
jmp
and
roll
push
clc
and
mov
mov
je
lret
mov
cmp
adc
mov
scas
pusha
loop
pusha
js
push
and
in
push
lds
enter
sbb
adc
push
mov
xchg
rcrl
out
test
or
nop
and
je
lret
lock
push
pusha
rolb
xchg
or
pop
add
popa
sbb
sub
cmp
stos
xchg
mov
add
pop
or
ret
out
mov
jmp
sbb
push
outsl
add
lock
xchg
pop
sahf
daa
jno
sbb
pop
push
add
bound
sbb
out
add
leave
mov
cli
enter
clc
mov
sub
xor
jno
add
and
jno
lret
sbb
or
adc
mov
and
or
mov
add
dec
push
lods
inc
aad
call
lret
or
mov
ret
add
or
xor
add
push
sbb
jmp
enter
lret
shr
or
sub
pop
cwtl
add
js
loopne
pusha
out
sub
cmpl
aam
shll
out
push
jo
push
sahf
mov
mov
xor
or
stc
or
rclb
push
cmpsb
out
sbb
jmp
out
mov
shll
mov
or
mov
xchg
sbb
in
ja
or
aam
mov
loop
mov
jp
mov
fwait
jmp
inc
inc
sbb
fsts
mov
je
pusha
ds
jge
xchg
mov
shlb
add
xchg
das
call
pop
loop
push
aam
sub
mov
xchg
insl
jge
cmp
cltd
inc
rcrl
push
into
adc
or
cmp
jmp
in
loop
or
xor
int3
inc
mov
push
dec
mov
test
lods
sbb
adc
xchg
inc
ret
sbb
jno
mov
xchg
int3
sahf
push
or
out
xor
movsb
jns
add
mov
out
pusha
call
sub
idivl
dec
loopne
pop
mov
sbb
xchg
shrl
xchg
cmp
dec
push
fwait
jb
mov
add
gs
loopne
leave
dec
pusha
mov
xchg
mov
push
sbb
shrb
jb
cld
dec
inc
mov
dec
xchg
adc
mov
pop
aam
lcall
or
xchg
pop
nop
pop
pop
dec
loope
xchg
or
js
inc
sbb
adc
pop
push
xchg
aam
les
imul
fldpi
push
cmp
sbb
cltd
sarb
pusha
or
push
or
mov
push
test
or
add
jno
mov
mov
or
sbb
cwtl
fs
data16
call
shrb
rorb
inc
inc
jl
xchg
xor
mov
ret
jno
push
cmpsl
xchg
inc
and
add
out
or
xorb
and
out
push
es
loop
cmpsb
je
lock
ret
in
pop
fsubr
pop
sub
popf
sbb
mov
or
sbbb
sbb
mov
and
inc
sub
pusha
mov
ror
xchg
ljmp
cld
push
add
aad
adc
dec
popa
and
dec
dec
and
icebp
mov
mov
push
icebp
inc
adc
cmp
mov
outsb
popf
inc
push
icebp
pop
pop
mov
call
and
mov
nop
cwtl
cmp
dec
fimull
or
xor
call
jg
fistpll
ror
push
mov
adc
or
sub
andb
sub
push
loop
lret
dec
cltd
movb
push
arpl
lods
sbb
js
inc
js
nop
loopne
pop
rcrl
fisubl
nop
xor
popa
lods
test
cmp
ja
nop
add
loopne
push
jmp
add
imul
add
sbb
outsb
rorb
loopne
dec
sbb
sub
and
lcall
mov
sahf
push
inc
pop
adc
push
pop
repnz
adc
loopne
mov
and
dec
or
jnp
xor
aam
or
push
xor
or
mov
push
outsl
add
inc
pop
sub
loop
mov
push
cmc
sub
call
dec
mov
lods
xchg
into
mov
lock
mov
lea
lock
and
sbbb
xchg
lds
adc
cmp
cmp
insb
cmp
add
dec
imul
mov
lcall
pusha
out
out
rcrb
jp
jecxz
mov
inc
in
dec
ficomps
sbbb
xchg
mov
xchg
test
pop
sbb
cmpsl
hlt
or
mov
repnz
cmp
mov
jle
xor
push
push
dec
js
mov
cmpsb
mov
adc
je
ss
sub
dec
sub
into
jb
xchg
and
ds
jo
and
pop
test
mov
pop
dec
inc
or
push
mov
hlt
shrb
or
xchg
push
add
push
lds
jo
dec
or
loopne
lea
sbb
repz
test
out
xor
pusha
loop
mov
add
adc
xchg
je
leave
enter
mov
repnz
sbb
pop
jbe
in
inc
movsb
push
dec
jmp
js
lds
daa
invd
push
lret
adc
cmp
xlat
es
call
mov
loopne
fxch
jmp
dec
jns
or
cmp
push
mov
sub
ret
pop
mov
ss
icebp
cld
les
and
xor
daa
movb
and
stos
pop
sbb
inc
loopne
push
sub
movsb
pop
rorb
fdiv
mov
jecxz
cmp
dec
movsl
ret
jno
ret
nop
dec
mov
and
mov
push
sahf
cmpsb
dec
xorb
popf
pop
push
xchg
add
sbb
insb
inc
sbb
mov
loope
ret
ret
xchg
jb
out
push
or
jmp
cli
rorb
xchg
xchg
repnz
push
test
adc
pusha
js
dec
pop
mov
sbb
and
push
lret
pop
call
popa
cmp
pop
or
dec
loop
dec
xchg
call
aam
mov
popf
imul
jbe
jno
orb
pslld
xor
test
enter
cmp
xor
orl
loop
outsl
bound
xchg
repnz
ret
xor
sti
adc
mov
pop
inc
add
fs
adc
pop
add
push
push
add
out
inc
push
stc
add
or
and
movsl
or
or
dec
push
aaa
push
jle
or
rclb
arpl
mov
test
sahf
push
push
inc
mov
out
xchg
or
dec
jb
mov
das
ret
jmp
sbb
mov
mov
add
lret
xchg
and
cmp
inc
sbb
je
push
pop
inc
ljmp
rcrb
jecxz
popf
in
inc
mov
test
dec
repnz
add
pop
js
adc
arpl
lahf
sub
push
shr
push
cmp
add
mov
sbb
mov
notl
jb
dec
xor
test
jne
add
and
jno
xchg
push
xchg
cmpb
jp
mov
xchg
and
and
mov
push
andb
into
aam
cmp
repnz
cmp
push
pop
add
mov
into
push
loope
sbb
pop
out
mov
and
sarl
add
jbe
push
test
ds
cmp
add
xor
pop
dec
inc
pop
lods
mov
xchg
mov
mov
pop
rcrb
inc
inc
popa
insb
or
fwait
ret
dec
sti
jo
leave
mov
call
and
dec
cmc
sub
shl
ljmp
add
xchg
adc
push
out
jp
loope
nop
sahf
adc
jecxz
lret
xlat
cmpsb
call
mov
push
test
pop
das
push
push
shrb
inc
adc
movb
xor
lret
pop
into
jae
dec
daa
and
dec
sahf
push
cmp
pop
inc
add
add
sbb
mov
adc
push
daa
ljmp
mov
mov
in
inc
lret
push
mov
and
and
roll
addl
adc
or
ja
bswap
jecxz
sub
or
mov
jmp
sbb
stos
push
push
arpl
test
mov
test
add
or
cmp
out
sbb
mov
push
ret
fnstcw
xor
push
movsl
push
shr
dec
xchg
and
or
cld
cmc
sub
lret
mov
adc
lea
leave
sbb
add
push
ret
or
movb
add
sbb
es
mov
cmc
roll
push
lods
mov
sbb
jmp
xlat
jo
xor
test
mov
sub
sbb
add
loopne
pop
ja
add
js
aam
mov
xchg
mov
push
sub
sbb
ds
mov
dec
jmp
push
pusha
movsb
jmp
cs
or
adc
into
xchg
pop
and
adc
sub
xchg
xor
rorb
sub
mov
push
push
cmp
dec
sbb
daa
xor
cmpsl
pop
sbb
jge
lods
cli
add
adc
xorb
push
push
dec
and
subl
stc
add
add
rorb
sbb
push
sbb
pusha
divb
cld
pop
lods
dec
addl
addr16
push
xchg
adc
sub
fcmovnbe
into
roll
or
js
cmpsl
dec
sub
sti
loopne
cs
xor
mov
xchg
ds
xchg
and
add
lret
fmull
sbb
xchg
icebp
and
dec
mov
push
sbb
push
rcl
call
inc
or
xchg
adc
imul
mov
std
add
inc
lahf
inc
aas
and
and
fcmovbe
push
or
rclb
adc
je
int
enter
test
cli
test
dec
inc
adc
and
mov
cmp
pop
sub
and
sbb
cmp
push
andb
shlb
sub
shr
jno
jmp
imulb
sbb
ret
leave
decb
mov
loope
dec
mov
xor
aad
sbb
push
leave
mov
mov
cmc
xor
test
dec
sub
add
sub
lds
rol
mov
cmp
js
add
movsl
cs
xor
test
pop
movsl
test
and
les
add
or
push
adc
inc
sbb
adc
push
xor
les
and
cmp
daa
mov
popa
and
ror
popa
and
fnstsw
xor
movsb
push
icebp
jo
clc
mov
and
aam
idivl
mov
fsubrs
cli
jl
ss
or
jmp
shlb
andl
out
stc
int3
sarb
pushf
inc
pop
push
pusha
rcrb
jge
sbb
shlb
or
or
cs
idiv
mov
and
lret
lods
fsubrl
adc
or
inc
das
sbb
cmp
ret
dec
mov
sbb
out
sbb
stos
xchg
jo
or
and
je
pop
mov
cmp
xchg
stc
test
push
imul
outsl
add
insb
sti
cmp
lcall
leave
sbb
hlt
pusha
cmp
mov
jb
mov
nop
cmc
mov
mov
mov
fnstcw
or
fucomp
mov
jne
sbb
inc
and
xchg
mov
sahf
xchg
call
cwtl
jp
xchg
or
lret
push
fcomip
push
ja
adc
add
mov
lahf
divl
and
xchg
cmp
mov
or
sbb
pop
and
pushf
lds
push
or
pop
cmpsb
sbb
adc
mov
push
sub
cmp
enter
outsb
xor
rcr
in
lret
stos
or
sbb
push
adc
mov
sahf
push
or
jmp
aam
and
mov
and
push
ss
icebp
push
and
sub
cmp
cltd
ret
or
sub
call
out
mov
sbb
inc
cmpsb
outsl
xchg
lds
push
and
rolb
inc
sub
or
push
insb
stc
add
jle
push
hlt
pusha
xchg
cmp
shlb
mov
fadd
enter
or
test
push
xor
add
hlt
mov
inc
add
sti
add
out
icebp
xor
negb
add
dec
push
add
insb
popa
data16
sbb
dec
imul
sbb
les
pushf
or
add
dec
rolb
cltd
shlb
movsl
adc
xor
add
outsl
mov
test
xchg
daa
movsb
sub
les
lock
sub
add
adc
pop
ja
int3
imul
pop
ljmp
fwait
movsb
in
pusha
add
xor
add
sub
add
sub
addr16
mov
inc
in
lods
stc
push
mov
js
jp
dec
inc
mov
dec
test
das
adc
pop
outsb
mov
pushf
das
or
xchg
jne
pop
xor
lods
and
int3
test
insl
ljmp
dec
call
pop
daa
in
inc
outsb
mov
xchg
add
mov
jo
xor
rolb
in
sbb
or
loop
gs
push
nop
mov
daa
cli
call
aaa
sbb
and
add
lods
out
roll
imulb
or
push
daa
mov
cmpsl
data16
jns
or
mov
sub
and
inc
adc
xchg
mov
adcl
sbb
shlb
aad
orl
inc
mov
hlt
test
orb
pop
add
add
repnz
pop
cmpsb
and
test
adc
pusha
xchg
and
dec
dec
sbb
xor
mov
and
jne
mov
or
aad
ficoms
or
rolb
scas
cwtl
push
push
pop
jo
mov
and
mov
push
pop
lock
mov
jp
and
test
xor
add
flds
inc
outsb
mov
pop
cmp
icebp
jecxz
or
arpl
mov
cltd
xchg
adc
adc
cmp
test
add
jp
xor
pop
xchg
dec
cmp
loop
lret
inc
xchg
xchg
or
aam
test
rorl
loop
test
dec
popa
pop
push
movsl
mov
mov
inc
das
sbb
cmc
or
xchg
data16
pop
adc
cmp
nop
sbb
cmpsb
cld
pop
movb
imul
jae
or
xor
xchg
inc
pavgb
adc
push
loop
loopne
push
ss
aad
jb
and
das
or
sbb
or
jno
mov
loope
push
icebp
mov
and
lock
pop
sbb
jo
je
cmp
loopne
and
ret
outsl
call
add
nop
sbb
js
out
add
cvttps2pi
mov
jp
push
shll
lds
cli
inc
nop
hlt
cli
inc
mov
or
enter
aaa
dec
pop
or
add
mov
inc
movsl
xchg
fwait
insl
adc
and
shrb
inc
enter
js
hlt
or
ffreep
or
sub
sub
xor
lcall
push
sub
adc
xchg
test
pop
test
mulb
insb
or
outsb
movsb
mov
adc
bsf
and
int
push
push
shlb
in
leave
sbb
pop
mov
pop
cmp
xchg
hlt
xor
xor
movsb
pop
idivb
adc
jp
dec
sar
push
jp
sub
xchg
cmpsl
mov
inc
push
jle
and
xor
push
pop
mov
icebp
out
test
mov
mov
enter
adc
mov
sbb
add
or
push
push
and
add
jp
movsb
out
push
das
push
dec
xchg
mov
mov
lret
mov
cmp
sbb
nop
dec
shrb
sbb
lds
leave
lods
lret
mov
and
pop
push
push
daa
push
or
pop
dec
mov
movsb
jp
xchg
cld
push
out
das
push
add
scas
mov
add
stos
dec
fs
xchg
push
sub
add
pop
enter
add
mov
test
jl
in
cmc
push
adc
out
ret
and
push
push
or
or
dec
fcmove
push
iret
fcoms
mov
push
ret
inc
jle
test
adc
xor
mov
loope
push
cmp
into
test
loop
fs
js
inc
mov
addr16
ret
rolb
xor
fidivrs
sub
mov
xchg
adc
and
jo
xor
lret
mov
icebp
lock
cmp
fadd
sbb
cmpsb
mov
sbb
inc
lret
xor
jecxz
adc
jl
mov
xchg
push
sysret
add
add
aam
mov
jo
xor
xor
xchg
lea
or
mov
mov
xchg
test
mov
aam
es
lret
jecxz
fs
fstps
adc
shrb
add
sbb
and
dec
std
out
mov
cwtl
push
shll
cmp
jp
rclb
and
loopne
xchg
pop
dec
mov
hlt
movsb
jne
sbb
jo
jno
dec
jmp
mov
xchg
add
rorl
jno
inc
into
pop
push
xchg
adc
xchg
inc
inc
popa
jno
sbb
sbb
sbbb
jmp
imul
in
ret
test
jmp
cs
and
or
mov
inc
jo
pop
cmp
and
sbb
orb
push
push
push
cmp
das
shll
inc
add
scas
roll
mov
into
inc
dec
je
sub
adc
aad
mov
push
and
pop
js
inc
adc
sub
je
rcrl
movsl
push
adc
cmp
or
ficompl
dec
sbb
sub
xchg
lea
jbe
push
adc
stos
pop
outsl
and
aam
daa
pop
mov
ds
andb
add
movsl
dec
xchg
mov
je
into
es
addr16
add
inc
mov
mov
mov
adc
add
adc
mov
xorl
shl
xchg
rol
push
shlb
bound
out
popa
bound
pop
dec
mov
inc
cmp
dec
jmp
sub
push
jp
test
ret
sub
ss
mov
xchg
test
fcmovu
mov
inc
push
daa
addr16
mov
sbb
jns
xchg
repnz
jno
pushf
and
js
xchg
sbb
mov
mov
add
aam
xorb
sarl
out
and
int
xchg
sbb
dec
xchg
test
jbe
loope
add
lret
add
test
jl
loop
or
addl
outsl
inc
and
lock
sub
xlat
out
mov
sub
pop
shl
lret
or
inc
loopne
lock
je
add
sbb
and
push
cmp
cld
es
pusha
das
dec
clc
sbb
or
inc
sbb
das
mov
and
xchg
test
std
mov
or
loope
xchg
sub
leave
bound
adc
rcrl
clc
adcb
dec
cmp
sbb
pop
and
or
cmp
xor
pop
mov
popa
lods
ja
rorl
add
mov
or
jge
push
inc
mov
push
push
decb
push
sar
or
xchg
or
inc
sbb
cmp
pop
insb
dec
add
sbb
test
adc
xor
adc
insl
ret
sbb
xor
add
rorl
add
orb
aam
and
lods
dec
sub
push
ljmp
clc
inc
pop
in
jne
ljmp
sub
ret
xchg
cwtl
aad
sub
call
mov
xor
clc
xchg
sbb
inc
push
xchg
int3
cs
pop
ret
fs
and
addb
push
add
or
add
or
enter
aam
jmp
mov
ljmp
orb
popf
and
mov
arpl
sub
pop
aas
movsb
sub
mov
das
push
pop
aad
adc
clc
js
push
cltd
and
xor
push
push
pop
mov
repz
fs
pushf
ficoml
add
cltd
push
rol
pop
add
add
cmpsl
sahf
rcrb
out
rorb
xchg
push
xor
nop
je
inc
jge
push
cmc
or
adc
aas
gs
add
pusha
add
cmp
nop
adc
lock
cmp
xor
das
pop
push
sbb
and
lret
add
ret
push
mov
mov
scas
and
loopne
lock
pop
xlat
mov
sbb
or
fs
mov
fsubr
enter
pushf
pushf
pop
push
add
test
and
xor
inc
nop
and
nop
xor
cmp
xor
nop
mov
xchg
and
stc
scas
sbb
orb
add
mov
lcall
fcomps
adc
loop
pusha
pop
or
stos
mov
fsubrl
mov
or
pushf
lcall
inc
add
test
jle
dec
lods
dec
and
and
sbb
enter
pop
sbb
lret
mov
xchg
les
dec
dec
inc
bndldx
push
addr16
push
add
jo
xor
loop
mov
lods
sub
hlt
mov
add
rolb
jb
lcall
mov
imul
xchg
fdivrs
fs
dec
jmp
pop
or
sbb
cmp
push
test
arpl
sbb
clc
cmpsb
add
cltd
testb
test
add
negl
stos
bound
mov
mov
inc
rolb
enter
lret
or
xor
pushf
adc
or
jnp
mov
push
mov
les
dec
dec
shll
arpl
inc
pop
push
mov
xor
mov
cmpsl
in
xor
sub
int3
adc
add
mov
dec
mov
repnz
rolb
jns
in
add
sbb
dec
mov
movsl
orb
push
ret
cmp
pop
pop
sub
dec
das
add
cmpsb
mov
sbb
gs
inc
mov
cmpsl
xchg
outsl
pop
subl
cmp
insb
ret
cmp
mov
adc
jle
insb
mov
xchg
ds
aam
mov
or
or
pop
and
push
push
push
or
jbe
jl
inc
cmp
inc
adc
lock
rcrb
test
dec
outsl
xchg
test
scas
loop
xchg
dec
or
xchg
add
ljmp
loope
mov
js
sbb
inc
into
imul
xor
ret
pop
jo
push
pop
dec
or
sbb
pop
adc
add
mov
xor
andl
push
movsl
rol
gs
lods
inc
adc
adc
xchg
xor
bound
sbb
lret
test
push
dec
dec
xor
sbb
dec
sbb
inc
cmp
sub
ret
jmp
push
sub
or
das
sbb
fmul
ljmp
adc
nop
dec
pop
mov
insb
pusha
in
enter
pop
mov
das
or
jle
add
and
lret
xor
jp
daa
mov
sub
and
or
sbbb
popa
fmul
mov
sub
add
adc
lods
cmpsl
sub
xlat
inc
push
inc
das
cmp
lock
mov
dec
mov
cmp
in
mov
dec
add
xor
xor
inc
sbb
xchg
mov
mov
test
jo
xor
jle
pop
xorl
stos
push
dec
ret
sbb
inc
jp
dec
in
test
add
rclb
loopne
or
sbb
lret
mov
adc
xor
sbb
sub
inc
and
xor
aam
sub
jo
cltd
or
pusha
dec
push
mov
dec
and
insl
loope
in
sarb
and
adc
insb
push
mov
ror
sub
mov
adc
xchg
cmp
cmp
cli
mov
or
or
xor
lret
test
jns
aam
mov
jle
int3
and
push
loopne
push
and
aas
and
test
dec
add
xchg
nop
cld
adc
movb
xchg
addr16
add
jns
clc
push
mov
or
jmp
es
and
mov
xchg
add
push
dec
or
push
hlt
out
add
movsb
sahf
inc
pop
mov
movsb
push
push
adc
das
adc
add
cmpb
mov
mov
test
pop
inc
je
enter
cmpsl
andl
mov
dec
out
sbb
add
pop
mov
inc
shlb
lock
rol
xchg
mov
xchg
fs
cmp
cmp
inc
rorb
cld
mov
and
lds
mov
push
stos
pop
adc
in
rolb
sbbl
pop
mov
cmpb
sar
sbb
adc
xchg
inc
inc
cmp
ds
call
xchg
xor
shrl
loopne
pop
in
clc
rorl
adc
clc
xchg
dec
lret
dec
jmp
lahf
jl
pop
pop
xchg
xchg
mov
mov
cmpsb
mov
jmp
sbb
jp
lods
loopne
fdiv
lret
xor
popa
les
sti
sbbb
jne
push
or
mov
int
stos
mov
add
pop
mov
jge
lds
subb
xchg
mov
loopne
dec
pushf
push
mov
pushf
mov
rcll
sbb
add
jmp
sbb
rolb
add
ret
imul
fcomps
rolb
adc
imul
rcr
mov
arpl
pop
xchg
test
xchg
cmp
loop
nop
jbe
push
pop
dec
ljmp
mov
push
add
idiv
gs
xor
cltd
mov
and
mov
into
rolb
testl
lock
adc
add
inc
jmp
jl
mov
sub
jo
sub
dec
js
and
inc
popa
loope
inc
shlb
cli
nop
adc
mov
ret
jno
js
int3
pop
mov
out
lret
loopne
push
push
das
adc
push
pop
rcrb
rcrl
jge
mov
sub
cld
ss
iret
jmp
scas
fs
sub
xchg
xchg
pop
stc
mov
mov
xchg
dec
sub
sahf
inc
movsb
inc
jmp
xchg
je
lds
cltd
xor
mov
pushf
dec
xor
sbb
jl
add
sub
sub
and
clc
and
daa
jle
filds
sbb
sbb
es
daa
inc
mov
dec
jno
cmp
xorb
mov
xchg
jg
inc
pop
pop
lret
movsl
lock
cmpsb
jge
int
or
xchg
insl
out
rol
lea
cwtl
sbb
fdivrs
ret
adc
cmp
pop
add
xchg
sbb
inc
dec
sub
adc
cld
push
fisubrs
cmpsb
pop
test
gs
fimull
mov
sbb
shlb
int3
ljmp
int
shlb
sbb
push
lds
pop
adc
sbb
and
roll
push
gs
xor
sbb
cmp
adc
xor
push
push
icebp
inc
rol
test
rclb
gs
pusha
sub
rorl
insl
pop
daa
cmovp
push
inc
lcall
add
jecxz
inc
movsl
fcompl
rcrb
jno
loope
mov
add
or
pop
je
jne
mov
ret
push
xacquire
push
pop
or
adc
punpcklwd
ret
insl
sbb
jb
ds
inc
loop
or
dec
sub
xchg
dec
and
test
jae
rorl
pop
enter
inc
add
adc
push
fidivs
lods
pop
dec
or
orb
mov
out
outsl
add
pop
sbb
sbb
ds
jecxz
pop
sbb
mov
dec
push
cmp
add
shrb
or
and
loop
push
or
mov
xorb
aaa
icebp
sar
xor
sbb
jmp
or
adc
mov
push
roll
mov
imul
adc
inc
enter
adc
shrb
push
and
leave
push
dec
add
loope
jnp
in
dec
popf
popa
insb
inc
mov
clc
adc
mov
ljmp
jno
pusha
lock
jge
xchg
xor
sbb
push
add
mov
inc
ret
dec
jo
inc
xchg
xor
pushf
and
dec
mov
test
and
xchg
mov
or
ds
jo
int3
adc
addb
dec
loop
inc
and
nop
dec
pop
lods
in
cmp
insb
jne
imul
lds
call
stc
fsubs
or
lret
xor
and
dec
add
pop
rclb
mov
stos
aam
test
adc
and
mov
into
pop
hlt
and
lret
mov
push
rorl
push
cmpsl
into
fdivs
xchg
mov
xor
add
enter
ret
stos
aad
and
push
pop
ja
dec
sbb
imul
movb
push
cmp
mov
movhps
sbb
inc
xchg
pop
adc
arpl
push
cmp
lods
xchg
es
cmp
mov
test
test
inc
imul
sub
imul
or
add
and
pop
sbb
push
dec
lods
add
xchg
mov
loop
imul
mov
dec
mov
adc
test
pop
dec
mov
cmpb
xor
adc
ret
mov
test
mov
pop
orl
dec
loopne
sbb
mov
lea
rclb
shll
dec
xchg
sarb
rorl
rorl
dec
cmp
jle
and
test
lret
cmp
sbb
lea
push
dec
push
cmp
add
mov
dec
loope
or
les
mov
ret
scas
and
incb
adc
rolb
sbb
push
add
ljmp
ret
imul
mov
add
out
aas
add
adc
rcll
je
clc
adc
ret
mov
and
jns
test
adc
pop
mov
rol
cltd
add
or
adc
sahf
popa
pop
mov
dec
xor
push
js
inc
sbbb
add
add
ror
sbb
rorb
orl
jnp
xchg
ret
mov
mov
sub
pop
movl
mov
adc
and
bound
mov
in
and
and
and
push
add
or
test
adc
jns
cmp
jecxz
mov
adc
cmp
movsb
popa
nop
mov
ret
sarb
mov
sub
dec
inc
mov
mov
lock
ret
xor
gs
scas
bound
push
out
dec
and
addb
stos
inc
push
jl
pop
enter
mov
int
xchg
js
add
aad
pop
push
inc
popf
push
add
xor
rcrl
cmp
add
sub
sbb
push
adc
or
add
mov
gs
mov
sahf
in
iret
add
loopne
mov
addb
adc
icebp
mov
cltd
add
imul
daa
push
add
es
sbb
fs
pop
push
lock
inc
dec
repnz
pop
mov
push
js
nopl
push
or
push
adc
cmp
popa
stos
mov
xor
pusha
call
mov
fucom
shlb
pop
or
adc
fistl
adc
mov
xchg
add
add
fbstp
lods
jns
add
cwtl
or
and
testb
bound
or
es
ss
icebp
push
mov
jl
call
test
push
sub
repz
cmc
inc
and
push
dec
jp
xchg
dec
testb
sbb
add
inc
inc
out
ficoms
push
add
or
or
gs
mov
test
cmpsl
inc
mov
mov
mov
es
push
mov
and
dec
pop
jbe
lret
lret
push
sub
mov
add
mov
movsl
and
xlat
cmpl
ljmp
pusha
dec
addl
and
push
push
dec
rorb
cmp
loopne
scas
mov
filds
add
dec
rcrb
lret
ret
cmpsl
sub
adc
or
push
lock
adc
clc
and
ret
sbb
stos
dec
in
push
sbb
xor
rol
xor
shr
sub
add
ds
cld
push
stos
es
inc
mov
test
push
pop
cmp
xor
pop
sub
loop
inc
and
rcrb
ret
sbb
dec
ffreep
inc
push
dec
push
adc
dec
popf
div
fs
cvtps2pi
mov
cs
arpl
xchg
jne
mov
or
mov
xlat
dec
lock
add
xchg
xchg
addb
mov
loop
cmc
xchg
jne
ret
mov
mov
movsb
push
sub
xchg
adc
leave
int3
and
gs
pop
int3
adc
mov
jl
jbe
adc
dec
movsb
xchg
push
push
add
cmp
daa
insl
sub
ljmp
sub
xchg
adc
mov
rorb
or
test
push
pop
jbe
xchg
sbb
or
dec
cmp
inc
push
dec
rclb
sub
push
nop
sub
ret
mov
inc
and
jg
pop
push
fdivl
ja
or
ror
add
jl
sbb
enter
les
xchg
cmp
mov
sbbl
lcall
enter
fs
dec
sub
loopne
xor
xchg
push
xor
adc
fsubs
add
cmp
mov
cmp
adc
add
adc
xor
push
jecxz
or
sbb
push
outsl
imul
arpl
test
pop
jp
jp
pop
repz
sub
pop
into
and
sub
pop
add
and
sbb
mov
adc
rorb
stos
push
incb
mov
mov
ljmp
pop
pop
mov
inc
sub
or
jae
add
rcrb
das
xchg
and
add
mov
data16
arpl
add
shll
syscall
in
xor
dec
loop
in
mov
cmp
mov
icebp
movsb
sub
loopne
fcmovb
and
xchg
add
xchg
mov
mov
popa
add
addb
jmp
ret
aad
add
jl
adc
push
imul
sti
ss
hlt
add
in
adc
xchg
push
jmp
je
je
adc
mov
fs
ljmp
add
inc
test
dec
xchg
loopne
sar
shlb
add
test
xchg
movsb
fwait
adc
adc
pop
and
sbb
fdivr
dec
fcompl
jp
data16
test
lret
ss
fs
jp
cltd
repnz
xchg
js
scas
rcll
loope
mov
and
inc
mov
mov
mull
add
dec
js
test
sbbl
adc
add
add
and
push
push
inc
lret
add
shll
and
mov
adc
inc
cli
mov
dec
pop
clc
sbb
sub
jno
fisttps
cmp
cs
orl
and
inc
add
je
sub
add
pop
ja
push
xchg
mov
dec
xor
push
cmp
jno
lret
and
lock
lods
aad
xchg
clc
dec
xchg
push
aad
pop
sub
movsb
mov
cmp
pop
push
sbb
aam
je
rcrb
in
mov
icebp
rcrl
test
imul
pop
mov
sub
xorl
xchg
push
inc
shll
mov
add
sub
adc
inc
adc
jmp
test
mov
pop
xchg
cmpsb
scas
xchg
cmp
lods
push
sub
pop
sbb
rclb
dec
scas
ss
ffree
aaa
sub
mov
and
andl
dec
push
fdivrl
adc
or
insb
and
ds
and
shrl
test
enter
mov
mov
jo
xor
je
or
mov
push
add
mov
les
push
cmp
adc
sbb
mov
xchg
cs
push
nop
cld
mov
adc
push
xchg
xchg
cmpsl
add
mov
into
inc
jmp
add
jo
add
lcall
add
and
add
or
int3
push
xchg
repz
or
adc
cmp
loope
inc
lds
daa
dec
dec
rol
and
or
mov
shlb
inc
xchg
loope
data16
roll
inc
test
adc
enter
mov
cmp
push
or
or
shlb
push
jp
push
jmp
fsts
fistpl
or
push
repnz
pushf
inc
arpl
jmp
bound
int3
xchg
inc
dec
inc
pop
pop
or
jae
aaa
xor
inc
push
rclb
dec
imul
rolb
pop
xor
mov
fchs
pop
cmovb
xchg
inc
push
test
nop
gs
mov
cmpl
sub
mov
xor
inc
dec
mov
mov
andb
sbb
leave
lods
sbb
sub
inc
sub
add
out
sbb
enter
test
cs
cwtl
inc
rcr
jno
push
jecxz
gs
shll
push
stos
out
xchg
mov
test
sarb
rcr
sub
push
jp
ret
xor
inc
lea
bound
dec
xor
test
add
push
pop
daa
dec
rcl
ret
out
ret
mov
mov
cmpsb
pop
lret
js
sub
inc
rclb
xchg
jecxz
xchg
lods
dec
push
adc
sbb
dec
push
rcr
or
dec
fadd
push
push
cs
and
adc
adc
ret
je
dec
add
arpl
and
adc
out
sbb
push
sub
push
data16
pop
rcll
loope
xchg
dec
imul
enter
test
mov
loopne
pop
xchg
mov
inc
xor
shr
push
lret
sub
pop
inc
lahf
pop
push
fldcw
jno
js
add
rol
movsl
add
pop
stos
shr
mov
or
sub
cld
dec
imul
sub
faddl
daa
mov
push
mov
push
popa
test
cli
sub
hlt
lds
jmp
daa
xor
lock
mov
fwait
mov
xchg
pop
ss
xor
jmp
mov
ss
or
dec
pop
or
sbb
pop
aad
imul
push
or
adc
sub
adc
nop
push
dec
test
xor
sub
imul
adc
dec
sbb
adc
clc
jnp
sub
inc
mov
imul
sub
out
fimuls
sbb
adcl
pop
dec
loopne
sahf
sbb
adc
xrelease
sbb
sbb
ret
sub
adc
hlt
adc
mov
cld
je
cld
or
sbb
push
insb
in
xor
sbb
jno
mov
gs
sbb
sahf
lock
test
adcb
into
nop
push
dec
sbb
sbb
add
rcll
mov
sbb
push
lcall
loope
xchg
fsubs
test
jo
add
lods
fadds
pop
push
cmp
sbb
das
inc
or
mov
in
sbb
add
clc
add
dec
lahf
and
repnz
fs
jo
push
inc
push
loopne
popa
clc
and
loope
jmp
xorl
jbe
out
js
shlb
imul
repnz
fiadds
xor
lock
jmp
xchg
inc
nop
cmp
subl
mov
cmp
xchg
dec
dec
insl
push
and
andl
cmp
mov
bound
and
frstor
add
xchg
mulb
push
loop
mov
and
je
sahf
or
inc
arpl
jle
cmp
pop
fisubrs
xor
sbb
ds
addl
xchg
sti
in
adc
dec
dec
lret
js
dec
sbb
mov
dec
out
adc
and
push
rclb
and
mov
rolb
xor
xchg
pop
movsb
scas
insb
js
cmp
orl
dec
loop
push
adc
sub
push
jns
popfw
loopne
in
rolb
movsb
mov
mov
ss
fstl
insb
pusha
jge
mov
or
cltd
shrb
fs
pop
cmp
mov
xchg
sbb
mov
mov
dec
shll
cli
push
sub
push
inc
sbb
cmp
mov
call
push
test
test
and
pop
outsl
inc
pop
xlat
mov
sbb
dec
add
inc
lods
insb
or
and
aam
cmp
pusha
add
sbb
jp
jmp
shll
loopne
rcll
add
popa
or
add
les
pop
pop
push
rcr
shlb
mov
mov
nop
push
or
and
into
repz
dec
adc
xchg
sbb
ret
jle
out
fs
rol
adc
or
inc
push
or
loopne
cmc
or
xchg
xchg
cld
test
push
inc
jno
push
dec
push
inc
ret
movaps
sbb
xchg
inc
arpl
bound
rcl
xor
sbb
mov
dec
iret
mov
or
dec
or
push
mov
or
shrb
or
popa
addl
jbe
push
data16
mov
rcrb
mov
xor
and
jge
or
out
je
movsb
out
or
mov
cli
sarl
ds
cmpsb
into
and
or
push
add
cmp
push
jle
les
xchg
sar
rcrb
icebp
mov
add
call
push
jnp
pop
dec
push
fisttpll
popa
imul
bound
cmp
testb
psrad
cmpsb
mov
xchg
push
jmp
push
dec
push
adc
xchg
mov
dec
push
or
test
fld
mov
subb
lock
movl
sbb
test
aam
les
push
outsb
dec
mov
call
fidivl
mov
inc
enter
mov
loop
ljmp
add
fs
sub
xchg
push
sarb
pusha
inc
call
adc
or
xor
lret
inc
inc
xchg
testb
cmp
cmp
ret
fdivl
pop
es
rorb
mov
add
imul
pinsrw
rcrb
push
pop
lds
jae
or
cmp
mov
sbb
lods
test
and
js
in
xchg
imul
outsb
xchg
or
cmpsl
mov
bndstx
mov
and
push
test
iret
mov
loopne
aas
add
mov
lods
dec
rolb
push
sbb
aad
cmp
push
push
inc
cmp
cmp
adc
dec
mov
pop
sbb
dec
sbb
fwait
xchg
call
push
aad
push
xchg
and
mov
test
test
jae
cmp
nop
scas
xor
add
xor
movsl
cmp
pop
add
sbb
xchg
push
mov
sahf
bnd
scas
repnz
or
mov
dec
mov
sub
test
shlb
xor
xchg
arpl
sbb
jecxz
leave
add
lea
psrad
push
fucomip
call
mov
cmpsb
ds
xchg
adc
bound
push
push
pop
adc
daa
ss
mov
test
xchg
loopne
cmp
inc
pop
xor
adc
adc
push
das
sub
ds
stc
sbb
xorl
movsb
xchg
mov
jmp
daa
pushf
xchg
and
adc
or
inc
ljmp
es
push
pop
mov
mov
dec
fmull
hlt
jl
push
mov
xchg
lods
lret
mov
test
mov
les
adc
adc
sbb
arpl
sub
add
jmp
push
cmp
in
push
add
pushf
push
add
and
inc
push
out
sbb
pop
stos
sbb
cmc
mov
jle
and
ret
jle
mov
add
and
push
bound
pop
xor
sub
and
rcrb
out
mov
pushf
push
inc
pusha
mov
pop
and
adc
sub
sub
or
inc
ret
mov
push
lret
push
fdivrs
add
add
pushf
insl
lea
sti
test
add
outsb
add
and
push
and
adc
mov
movsb
or
iret
or
cld
add
pop
jle
adc
in
pusha
jmp
andb
adc
cmp
in
fdivs
jle
dec
mov
inc
or
ret
jmp
sub
or
xor
imul
jae
or
or
mov
xchg
dec
cli
in
mov
pushf
int
xor
mov
inc
add
xor
enter
push
gs
jbe
push
jnp
or
pusha
push
pop
pop
jo
test
inc
ds
jecxz
addl
sbb
sahf
test
fcompl
prefetcht0
pusha
sbb
popa
leave
mov
popa
sub
movsb
xchg
push
ret
adcb
mov
imul
inc
jecxz
loopne
leave
icebp
lods
dec
lods
test
jge
or
inc
enter
dec
gs
xchg
pop
pop
sbb
ds
stos
sub
or
mov
push
push
rorl
mov
or
pusha
ss
push
xchg
sub
mov
lret
or
movsb
inc
stos
lea
dec
sub
cmp
lock
mov
cmpsl
jno
out
pushf
xchg
fidivs
sbb
cmp
mov
add
xchg
cs
jb
lods
inc
or
out
adc
loopne
scas
outsb
lea
xchg
popa
movsb
repz
test
and
add
dec
push
std
out
jbe
xor
jecxz
mov
out
sbb
int3
loop
xchg
pusha
jmp
call
lods
add
nop
inc
push
push
push
xchg
enter
inc
pop
xchg
cmp
push
mov
pop
sbbb
dec
rol
xchg
and
or
imul
jnp
xchg
jno
jmp
or
xchg
repnz
and
sub
test
pop
push
mov
lods
mov
jmp
add
cmpsb
push
or
jnp
idiv
pop
pop
aad
sub
push
mov
les
les
fsub
insb
pusha
pusha
fsubp
not
jecxz
daa
pop
jo
and
mov
mov
daa
pop
rol
mov
or
test
mov
fisubrl
xchg
je
inc
pop
mov
mov
popf
add
pop
jb
sub
out
push
or
or
and
add
mov
add
test
jecxz
xor
cmpsl
leave
cmc
mov
push
das
arpl
dec
test
sub
cvtps2pi
or
cmpsb
and
dec
jo
xchg
movsl
and
add
call
rorb
add
xor
xor
ds
add
pop
add
pusha
stos
je
aad
ljmp
shll
loopne
insb
jbe
sbb
arpl
mov
push
pop
xor
push
and
jmp
repnz
sbb
or
push
rorl
or
sbbl
jnp
cltd
movsl
pop
lock
cmpsl
pop
push
push
pop
rolb
push
sub
pop
cmc
int
xchg
adc
mov
ficoms
aas
sbb
aaa
pop
dec
lods
or
stos
sahf
inc
dec
pop
icebp
ss
lods
lret
inc
push
xor
adc
lret
dec
cmp
int
inc
add
je
popa
sub
jmp
push
cmp
cs
sbb
jge
movq
add
inc
add
xchg
cmpsl
into
repnz
inc
adc
pop
and
pop
xchg
dec
es
test
xor
mov
xchg
fstps
aam
push
or
fsts
dec
cli
xchg
cltd
test
and
xchg
add
sub
push
imulb
jmp
sub
aam
pop
add
scas
push
pop
faddl
push
in
loopne
imul
outsb
inc
push
lock
mov
test
adc
pushf
ficoml
pop
cmpsl
pop
mov
add
add
js
add
dec
cmp
mov
shrl
dec
adc
add
xchg
insl
jbe
or
xchg
sbb
mov
js
xchg
xchg
test
push
pop
push
adc
pop
sub
xor
sbb
outsb
enter
clc
mov
sub
sbb
cwtl
test
jbe
dec
adc
xor
in
mov
xor
mov
aam
add
push
rorb
ret
pop
mov
jl
mov
pop
movsb
mov
add
xchg
push
mov
jge
daa
or
bound
cwtl
stos
dec
pop
mov
push
pop
jp
shll
arpl
mov
dec
rcll
cmp
jmp
pop
cmp
dec
adc
adc
js,pn
cmp
pop
mov
orb
dec
or
shlb
rorl
add
mov
inc
adc
out
or
pop
add
roll
adcb
dec
data16
mov
lods
inc
test
pop
xchg
mov
xor
xor
push
dec
or
movsl
add
paddq
adc
jno
mov
inc
movlps
ss
mov
adc
out
add
movsb
call
es
icebp
push
push
sbb
add
jno
cli
rorl
test
push
shlb
sub
repnz
or
aam
test
cmp
jb
jl
or
xchg
cmp
xor
mov
adc
es
push
cmpsl
xor
push
sbb
push
mov
xor
push
aam
arpl
push
sub
jnp
jnp
cmpsb
cmp
rclb
cmp
movsb
jb
sbb
pop
add
sbb
pop
add
xchg
cmp
shlb
add
pop
push
sbb
inc
mov
vpbroadcastw
in
add
jo
sbb
pop
sbb
ficoml
fnstenv
lret
push
movb
nop
xor
js
and
or
insb
imul
xorb
sbb
lock
push
xchg
adcb
lds
mull
cmp
mov
orl
sbb
daa
jno
ds
push
add
ljmp
rolb
sbb
xchg
in
jg
inc
add
xor
repnz
or
out
sub
xchg
sub
inc
jne
adc
lret
cmp
loopne
and
cmp
jbe
xor
int
pop
dec
pop
xchg
mov
dec
fildll
and
inc
stc
sbb
jl
outsl
dec
and
cmpsl
mov
adc
or
push
ds
in
xor
xor
stc
adc
mov
stos
lea
inc
jne
jl
adc
mov
push
and
add
icebp
inc
add
insb
inc
fbld
add
hlt
or
dec
or
add
js
icebp
xchg
jp
rclb
jle
add
jmp
mov
sbb
mov
push
aam
dec
cmp
lea
aam
cmc
ret
add
pop
and
hlt
xor
adc
xchg
jo
inc
add
push
ret
pop
repz
ret
imul
rcrb
push
into
xor
cmp
lock
push
lea
insl
rclb
sbbl
and
add
addr16
mov
inc
nop
sub
mov
repnz
pop
adc
mov
sahf
pop
xchg
loop
rolb
repnz
inc
les
inc
std
call
clc
add
nop
dec
testb
mov
sub
mov
xchg
orb
jmp
mov
cli
mov
xchg
sbb
push
push
xor
loopne
test
sbb
sub
hlt
xchg
cmp
fsubrl
pop
push
inc
jmp
inc
jp
adc
add
and
push
pop
popl
pop
lds
subl
loope
push
nop
adc
ljmp
inc
imul
push
sbb
and
push
xchg
xor
fdivrl
test
xor
es
add
sar
lods
xchg
sbb
outsl
push
pushw
bound
mov
sbbb
or
xor
add
lock
inc
mov
dec
sub
mov
shll
add
aas
lea
into
adc
xchg
lcall
xor
insl
mov
or
cmp
jg
dec
jl
push
push
xor
sbb
cmp
ss
popa
call
imulb
addr16
ret
jno
dec
xchg
mov
flds
jo
negl
xchg
inc
in
jo
xorl
sbbl
jno
or
hlt
cmp
mov
or
prefetcht1
or
mov
fdivr
mov
push
ljmp
inc
daa
add
jp
nop
inc
dec
adc
mov
sub
sbb
or
pop
clc
lea
jp
es
mov
and
xor
mov
ja
xchg
push
add
pop
push
rcrl
lock
add
jmp
adc
iret
dec
rcrl
stc
cmc
adc
ret
xchg
leave
and
or
mov
xchg
in
dec
xchg
ret
rorl
adc
arpl
jge
sbb
pushf
iret
test
push
pop
sbb
dec
mov
outsl
cmp
adc
adc
sbb
mov
sub
aad
cld
adc
cli
gs
mov
mov
fldl
sub
pop
and
and
pop
test
bound
push
sub
jecxz
xchg
test
pop
push
ret
jno
jo
ror
xchg
add
lret
or
jl
into
leave
mov
test
mov
jo
xor
mov
mov
insb
sahf
inc
pushf
dec
inc
iret
lret
adc
sub
sub
adc
loope
jmp
sub
and
push
int3
cwtl
cli
add
add
push
xchg
mov
js
scas
fnsave
fiadds
sbb
iret
or
or
and
or
pop
dec
mov
sub
ret
sub
test
sbb
adc
mov
mov
xlat
jmp
cmp
pop
sub
out
add
dec
cmp
jo
push
lret
aaa
lods
dec
dec
push
inc
cli
push
mov
insl
add
mov
imul
test
push
daa
push
das
dec
pop
rol
xor
push
push
adc
mov
mov
push
adc
add
nop
push
ficoms
or
push
adc
mov
or
xchg
inc
pop
sbb
mov
sbb
testb
iret
test
mov
rcrl
jecxz
das
call
scas
pop
or
mov
loopne
mov
addr16
aam
sbb
leave
adc
shrb
dec
pop
adc
inc
mov
into
mov
push
and
add
sub
push
cmpsb
dec
into
ds
add
lcall
inc
jge
lea
loopne
dec
dec
sub
pop
pop
ret
xor
mov
add
ficoml
push
les
pop
ret
inc
rcrb
pop
xchg
imulb
aaa
xor
pusha
add
mov
lret
mov
inc
repnz
cmp
pop
icebp
cli
rorb
sbb
jmp
mov
xchg
cwtl
mov
lock
psllw
mov
fs
or
or
mov
decb
and
push
ljmp
mov
mov
push
or
shr
add
or
adc
cs
adcl
call
jno
decl
js
push
iret
lcall
outsb
adc
adcb
cld
jbe
jno
jl
pop
push
add
mov
shlb
mov
inc
xor
std
push
cmp
and
movsb
notb
test
sub
push
jbe
inc
push
push
sbb
inc
mov
dec
aam
or
popf
mov
lods
add
push
jmp
or
inc
push
bound
and
adc
filds
mov
call
repnz
lock
sbbb
add
imul
in
cmp
pusha
xchg
and
inc
sbb
pop
shrb
push
mov
lret
rolb
add
std
or
sub
or
sbb
add
sbb
push
addl
lock
imul
pusha
or
dec
mov
pop
fisttpll
mov
arpl
add
dec
sbb
adc
dec
inc
push
sbb
push
push
sbbl
ja
pop
mov
arpl
out
mov
cwtl
movsb
adc
push
mov
add
aad
or
arpl
pusha
pop
mov
rclb
shl
or
xchg
movsl
xlat
mov
loopne
sbb
add
sbb
scas
mov
andb
sub
mov
je
sub
xor
dec
or
loope
inc
dec
push
push
pop
ret
arpl
add
push
enter
stc
movsl
mov
inc
add
add
xor
pusha
xor
pop
pop
js
dec
jno
jmp
add
lock
lods
ret
mov
adc
dec
pop
dec
sbbb
shrb
into
push
mov
and
icebp
in
jle
test
push
or
fxch
adc
add
push
lods
jp
rcrb
daa
test
dec
push
mov
xchg
dec
push
rolb
nop
lea
xchg
les
dec
popf
lock
add
and
push
bound
ss
xor
or
call
sbb
arpl
cmpsb
shlb
mov
add
or
adc
add
mov
cltd
clc
ss
mov
jmp
push
inc
mov
inc
mov
sub
xchg
xor
and
sar
add
pop
shrl
stos
pop
pop
ret
cmpsl
push
push
dec
mov
sbb
cmp
pop
push
rcrb
enter
jo
cmp
and
out
sbb
push
add
jo
or
add
jae
lock
dec
cmp
lret
pop
mov
aad
das
rorb
into
add
ss
adc
adc
dec
imul
mov
push
ljmp
iret
testb
pop
inc
and
stc
add
pop
orl
jp
and
test
fldl
push
out
adc
sub
js
loope
add
cmc
or
ror
xchg
sub
fdivs
push
les
push
rol
mov
inc
rcrb
sbb
std
mov
or
js
jecxz
ficomps
sub
push
mov
adc
les
cwtl
xorl
in
or
xorl
mov
arpl
sbb
sub
loopne
roll
pop
or
test
or
add
lret
sbb
jl
test
pushf
data16
or
inc
call
mov
sub
lahf
rorb
fcmovb
mov
sbb
pop
test
sub
je
pop
or
rclb
or
sub
or
jne
lock
movsl
outsb
sbb
sbb
adc
adc
inc
pop
into
imul
rolb
jl
pusha
lods
pop
xor
ret
adc
push
cli
sub
jo
xchg
jecxz
and
outsb
pushf
fldcw
or
pop
pop
inc
in
push
push
xchg
push
ljmp
pop
cmp
into
inc
push
pop
or
nop
dec
pop
push
fidivrl
add
test
mov
sbb
or
xor
push
inc
popf
jo
jmp
cmc
fisubl
jo
pop
daa
addr16
cmp
sbb
push
jne
and
add
adc
clc
xchg
ljmp
scas
out
xor
lret
pop
adc
push
push
data16
sub
sub
mov
jns
mov
std
arpl
or
test
or
push
pop
or
inc
xchg
jae
js
inc
sub
dec
loope
js
adc
leavew
inc
nop
inc
sub
popf
sbb
sbb
loopne
add
lods
inc
sub
xchg
sub
pop
lret
push
call
test
mov
adc
pop
pop
sub
rcrb
es
lcall
xchg
and
ljmp
and
pop
cmp
adc
je
loopne
sub
cmc
sbb
add
scas
int3
and
rclb
jmp
cmp
rorb
je
sbb
sbb
mov
enter
add
imul
add
xor
xor
xorb
je
popa
popa
pop
ja
dec
add
out
add
outsb
call
or
xor
adcb
push
add
cmc
lods
pop
xorl
or
push
push
inc
dec
pop
adc
movsl
insb
sbb
xchg
ret
leave
add
shl
xor
in
das
xor
call
pop
iret
sub
cmp
and
cmp
pop
pop
or
mov
jns,pn
jb
in
push
xlat
cmpb
push
lods
adc
adc
hlt
pop
les
mov
sbb
add
movsb
or
xor
loope
rorl
cmc
or
cli
roll
mov
or
add
out
mov
nop
or
adc
gs
cld
adc
lcall
mov
pop
inc
arpl
iret
mov
adc
cmp
cltd
test
je
adc
mov
iret
or
adc
cltd
xorb
and
sbb
cmp
add
mov
push
or
dec
sbb
xchg
and
jp
test
ret
clc
es
add
lea
lds
or
lock
mov
lret
test
scas
pop
pop
sub
pop
movlps
mov
push
jae
or
jno
in
mov
hlt
pop
loopne
je
daa
sbb
movb
add
push
dec
mov
sbb
hlt
adc
test
les
inc
pop
jb
sub
in
sbb
jmp
sub
adc
cmp
cmpsb
gs
jo
cmp
mov
mov
push
and
pop
xchg
mov
mov
adcl
add
test
test
or
idivb
or
and
cs
sub
mov
jno
push
call
ds
or
xlat
ret
pop
mov
nop
icebp
ret
push
ret
mov
hlt
sub
sbb
adc
sub
ror
inc
mov
xor
ja
inc
movsb
add
cwtl
ret
pop
mov
and
out
pop
pop
mov
mov
push
xor
adc
test
xor
xor
sbb
popf
cmc
inc
pop
sbb
pop
movsl
lock
movb
std
cli
lahf
rcrb
fimuls
mov
pop
mov
or
int
or
push
inc
xor
gs
lods
push
jmp
cmp
pop
fidivrs
push
dec
sbb
popf
or
dec
add
and
or
adc
outsb
imul
xchg
xchg
add
rcll
ret
mov
les
addb
mov
xchg
cmp
sub
int3
lret
ljmp
insl
mov
mov
and
int
ficoms
inc
sbb
sub
outsb
cs
add
lods
sbb
adc
bound
and
and
test
dec
xchg
cmpsl
mov
fdivrl
xchg
push
mov
les
pop
nop
adc
xor
add
dec
js
push
add
pop
mov
mov
lret
shrl
loopne
jns
xlat
popa
sub
ss
lea
cwtl
inc
and
add
push
adc
into
xor
or
loop
sbb
add
or
jnp
jo
xlat
adc
nop
mov
adc
mov
xor
jne
das
leave
sbb
les
dec
xor
orb
mov
push
xor
jne
or
ret
mov
sub
enter
or
xor
fbstp
lahf
push
ror
adc
and
xchg
adc
add
xor
push
bnd
cmc
dec
movsb
push
rclb
leave
sbb
call
sbb
inc
and
push
or
dec
fnsave
call
or
repz
mov
jno
adc
imul
ljmp
outsb
inc
push
adc
mov
shll
xor
jne
shlb
in
fists
ds
and
les
cld
mov
mov
test
dec
imul
push
or
sbb
es
cmp
lods
and
cmpsb
or
sub
push
mov
add
sbb
cmp
or
mov
cld
jae
push
xor
or
ret
add
test
cmp
xchg
or
imul
ss
push
dec
fdiv
out
add
pop
xchg
or
repz
push
cmpsl
adc
or
add
jno
mov
popa
stos
in
popa
cmpb
and
js
xorl
lds
dec
and
cmp
xchg
pop
lea
sbb
ds
popa
imul
mov
mov
sbb
mov
hlt
adc
push
sbb
adc
sbb
push
sbb
inc
mulb
inc
dec
sbb
scas
push
cmp
mov
cmp
mov
adc
test
dec
push
fisubl
push
les
inc
aad
inc
mov
push
adc
jg
mov
icebp
adc
enter
and
mov
lret
cmp
dec
adc
pop
mov
jecxz
pop
sbb
jl
das
je
xchg
loopne
push
xor
cmp
xorb
fbld
pop
or
pop
out
pushf
sbb
mov
scas
cmp
or
inc
stos
leave
mov
add
adc
and
pop
sti
push
cltd
and
ret
dec
loopne
test
movsb
lock
or
push
or
in
arpl
mov
gs
xor
les
popa
dec
test
fcmovnb
rorl
aaa
data16
pop
xor
pop
sub
adc
test
xchg
jno
mov
mov
and
and
imul
sarb
sub
pop
pop
adc
mov
or
ror
rclb
sti
movsb
outsl
arpl
xor
lds
dec
popa
call
shrb
jno
lods
or
mov
nop
xor
roll
daa
ss
sbb
lock
mov
es
add
or
mov
shll
xor
add
dec
call
and
jno
or
push
std
push
lea
pop
aaa
sbb
pop
adc
inc
xchg
push
rolb
into
hlt
fiaddl
add
test
or
out
adc
lret
push
add
ret
pop
xchg
push
hlt
test
push
rolb
and
push
dec
shlb
adc
xchg
icebp
lods
inc
xchg
jecxz
adc
mov
mov
xchg
mov
mov
dec
pusha
insb
ret
sub
jl
xor
push
jmp
push
adc
enter
push
push
push
and
fwait
or
inc
stos
xor
add
loope
or
push
add
sbb
shrb
xor
ss
xchg
dec
or
add
adc
mov
sbb
adc
fdivrp
nop
add
add
loopne
rorl
sbb
ret
sbb
iret
jo
leave
shll
mov
js
and
mov
test
xchg
or
or
ret
mov
and
jg
cmp
xlat
xor
add
or
pop
add
inc
loopne
aas
leave
dec
pop
mov
sbb
test
inc
adc
call
jnp
inc
cmp
cmpsl
sub
mov
mov
cmp
cs
cmpsb
push
dec
enter
lds
arpl
pop
movsl
xor
adc
scas
add
test
xor
push
jo
shl
or
movsb
sbb
add
adc
and
mov
push
mov
in
ljmp
call
mov
lods
add
add
ret
adc
mov
pop
rolb
or
xor
outsl
clc
rcll
xchg
xor
push
imul
add
push
mov
pop
adc
add
or
inc
shlb
jp
dec
pop
adc
pop
inc
jmp
or
imull
insl
leave
xchg
movsl
sahf
js
or
pop
pushf
insb
sbb
lret
jp
fimuls
inc
or
dec
lret
adc
inc
add
ljmp
and
xor
sub
or
lret
shll
xchg
into
cmpsb
and
outsl
lret
rorb
sbb
xor
cmp
and
pusha
scas
add
sub
dec
add
pusha
and
leave
sub
iret
mov
adc
sahf
mov
sbb
repnz
or
lds
xor
xacquire
movsb
je
fcmovbe
sbb
mov
cmp
lods
bnd
mov
jge
rolb
mov
dec
add
repnz
xor
cwtl
sub
mov
movsb
mov
xor
shl
sbb
mov
and
addr16
enter
in
cli
or
inc
cli
sub
dec
push
sub
psubd
xor
mov
add
adc
pusha
add
push
sti
ss
shll
out
loope
adc
enter
aad
ljmp
mov
call
adc
nop
xor
xorb
xor
dec
outsl
or
xor
jo
cwtl
rolb
mov
fs
inc
and
mov
dec
mov
sahf
or
lcall
sahf
push
cmp
and
pop
inc
pop
lock
daa
arpl
les
push
lods
test
addr16
loope
subl
call
scas
call
cmp
dec
rclb
out
je
sub
subb
jge
addr16
pushf
lea
push
fmul
cmpsl
stos
mov
xchg
rcrl
add
inc
jmp
mov
mov
add
xor
test
mov
mov
adc
in
pop
sub
rclb
cmp
push
scas
stos
ficoms
xor
jl
sbb
push
sbb
pop
movsb
adc
jg
sub
cmp
ret
xchg
push
sbb
adc
dec
ljmp
insl
test
push
stos
cmpsb
mov
lahf
sbb
jo
fs
cmpsl
push
arpl
push
insb
push
pop
dec
lea
cmp
mov
inc
sbb
andb
add
jecxz
sub
jge
sbbb
push
enter
js
out
adc
incb
sbb
ljmp
shrb
rorl
sarl
adc
mov
or
push
dec
hlt
leave
pop
mov
jb
sbb
xchg
cld
ficompl
loop
enter
aaa
push
and
cmp
adc
dec
xchg
xor
fwait
pop
adc
add
add
cwtl
adc
loope
add
movsl
ret
add
jmp
pop
push
lret
adc
js
pushf
xchg
mov
sub
jmp
inc
or
les
add
adc
push
negb
push
inc
mov
sbb
fistpl
js
push
les
add
popf
jg
or
and
push
xchg
dec
cmpb
and
mov
sbb
cmp
add
mov
ljmp
sub
dec
adc
jecxz
testb
and
mov
xchg
scas
insl
pop
add
add
loop
inc
shll
roll
pop
dec
loop
xchg
push
insb
leave
xor
mov
dec
xchg
pushf
or
lock
xchg
or
rcrl
ret
loope
and
jb
sbb
rolb
sbb
mov
mov
js
cmp
out
xor
rclb
or
and
push
inc
aas
arpl
loope
les
das
or
add
mov
add
mov
sub
mov
mov
test
mov
or
jge
in
lea
test
dec
jb
inc
sahf
adc
push
pop
adc
sbb
add
insl
imul
mov
pop
das
add
roll
outsl
leave
xlat
sti
in
jge
and
sub
push
add
sbb
flds
das
add
pusha
fisubs
dec
test
jb
lock
enter
icebp
inc
cmovo
push
inc
jmp
add
mov
pop
ljmp
dec
or
les
push
vpunpckldq
or
xchg
mov
mov
rcrb
shlb
ret
push
jecxz
push
add
or
xor
movsl
cmp
daa
mov
adc
movsb
push
movsl
shl
data16
daa
adc
mov
or
pop
cmp
mov
push
xor
add
int3
push
mov
push
test
cmp
add
mov
push
imul
add
ljmp
push
adcb
xor
in
test
or
xchg
xchg
push
stc
push
mov
xor
mov
fiadds
ret
lock
testb
ljmp
or
pop
sbb
lods
orl
xor
push
cli
dec
movsb
xchg
add
outsb
inc
outsl
ret
mov
jle
popl
mov
push
pop
into
cmp
push
in
sbb
es
out
inc
rorl
push
cmp
adc
aam
test
shr
sub
adc
stos
ljmp
inc
test
pop
xorb
mov
mov
cmp
sbb
cmova
pop
mov
jp
sbb
stos
fbstp
dec
add
or
adcl
cmp
cmp
dec
adc
sbb
subb
dec
imul
sbb
xchg
aam
ljmp
and
push
inc
ljmp
ja
xor
aad
push
in
xor
call
sub
cli
sub
andb
mov
dec
or
mov
inc
divb
jecxz
adc
sbb
xlat
pop
inc
xchg
xchg
addb
dec
xor
fisubrs
lcall
je
push
xor
lds
inc
cs
aas
cmp
pop
cltd
push
fdivl
mov
mov
sbb
adc
aad
mov
jp
stc
ficompl
shrb
xchg
or
test
jnp
cmp
rclb
idiv
push
sbb
pop
fs
sub
andb
pusha
mov
enter
aad
and
mov
adc
jge
pop
movb
cmc
xchg
push
cli
orb
dec
and
test
and
jmp
sarl
or
popa
pop
mov
rcl
fsubrp
push
sbb
int3
ja
into
jo
aaa
or
xor
inc
mov
cmp
lods
sub
and
enter
add
inc
push
and
pop
dec
mov
fistpl
or
shlb
sub
stos
mov
add
call
pushf
push
pop
clc
or
sub
int
add
add
arpl
xor
xor
aam
out
ret
cld
xor
test
push
push
xchg
add
pushf
mov
xorb
insl
cld
add
enter
sbb
jae
cld
xchg
mov
ffreep
adc
popa
lret
mov
dec
push
pop
loope
mov
jg
adc
or
pop
repz
cs
mov
adcl
and
cmpsl
xchg
jp
aad
inc
fcomps
or
inc
or
push
imul
jmp
jo
add
pop
mov
cwtl
add
adc
adc
dec
jp
js
fistps
sbb
test
mov
adcb
insl
xor
lcall
push
jno
pop
cli
mov
movsl
jo
add
adcb
je
push
int3
adc
scas
clc
xchg
mov
rolb
lret
jl
pop
inc
jp
loop
push
in
sti
enter
adc
shr
mov
inc
lea
fadd
sbb
mov
sbb
jmp
int3
call
add
push
push
sub
push
aad
add
add
stc
dec
xor
pop
or
jmp
rorb
xchg
push
add
mov
cmp
lahf
mov
add
ret
ret
xchg
test
add
jmp
adc
mov
outsl
mov
add
xchg
mov
sbb
pop
push
and
shll
and
in
add
add
mov
pop
pop
cltd
jo
insl
mov
std
sub
sbb
xor
pop
es
imul
mov
sub
mov
cmp
lcall
or
pop
inc
test
fwait
adc
cmp
xchg
pop
sub
push
js
push
sbb
mov
or
bound
daa
arpl
mov
in
insb
pop
arpl
cli
fsubs
cmp
sbb
mov
push
ds
and
mov
adc
shlb
xor
clc
pusha
pop
dec
jo
popf
dec
or
sub
dec
jl
dec
sub
inc
jmp
lock
inc
dec
inc
push
mov
or
rcrb
ret
out
add
fs
mov
repnz
aad
jbe
push
ja
sbb
cmp
add
pop
push
loop
xchg
push
dec
and
ljmp
clc
push
push
cmp
dec
sbb
lret
pop
sbb
imul
add
add
js
pop
or
js
dec
dec
add
nop
fldl
xor
ljmp
push
push
add
sbb
push
je
and
add
mov
push
sub
sub
pusha
xor
out
icebp
js
sahf
add
lcall
xchg
add
pop
xchg
sbbb
inc
arpl
pop
je
push
mov
aam
adc
add
in
dec
inc
das
pop
popf
enter
inc
test
push
xor
test
or
xor
mov
ljmp
mov
or
enter
adc
add
add
or
or
hlt
rolb
and
jle
clc
fcmovne
arpl
pop
mov
movsb
and
pop
sbb
xchg
lret
jecxz
rorl
rclb
adc
or
out
pop
shl
rclb
dec
pushf
popf
sbb
pop
scas
xor
xchg
loope
into
dec
rorb
add
scas
push
ret
dec
les
test
push
bound
imul
or
sub
sub
shll
ret
pop
in
jno
lcall
pusha
cwtl
sub
fcomps
sbb
ret
adc
cmpsl
mov
xor
adc
inc
mov
lods
or
jmp
popa
jo
shl
adc
mov
inc
cwtl
aam
into
nop
and
or
adcb
cmp
in
xlat
jp
push
sbb
push
and
sbb
xchg
es
xorl
mov
push
adc
mov
fst
mov
or
inc
das
mov
adc
mov
add
mov
nop
push
sub
mov
test
inc
jp
testl
or
pop
repnz
mov
out
or
lock
dec
push
push
xchg
mov
inc
and
dec
pushf
mov
sub
icebp
sub
sub
ret
sbb
dec
ljmp
lret
pusha
pop
cmpsb
xchg
adc
sbb
lock
or
shlb
push
popa
cmp
or
and
lods
mov
jb
je
addb
xor
xchg
into
roll
enter
addr16
jecxz
sub
xor
inc
xor
cli
or
add
mov
sbbb
or
or
andb
pusha
cbtw
mov
pop
setl
cld
iret
lret
add
mov
or
adc
adc
adc
popf
sbbb
mov
lret
adcl
sub
jno
lret
xchg
xchg
push
les
lds
loop
and
push
call
push
mov
orb
enter
movb
pop
add
cmp
add
mov
mov
or
cwtl
cwtl
adc
pop
pop
enter
cmp
sub
imul
and
leave
leave
into
cmpb
loope
adc
ret
adc
and
mov
ret
adc
dec
xchg
outsb
fiadds
pop
rorl
lock
sti
lock
mov
xchg
sub
fcomps
add
add
xchg
pop
lcall
inc
sbb
stos
dec
jg
jp
sbb
out
adcb
inc
xchg
mov
movsl
lds
push
adc
or
lods
jnp
or
xor
imul
mov
rol
cmpsl
add
xchg
lcall
scas
inc
push
adc
es
das
jp
xor
mov
fcomip
aam
test
insl
or
mov
xchg
sbb
shlb
test
fdivrs
dec
out
sub
xchg
ret
dec
movsb
xor
or
cli
sub
add
out
pop
bswap
sbb
cmp
jle
cs
adcb
mov
rol
or
addb
sbb
rol
mov
and
in
sbb
inc
adc
mov
ret
test
xchg
sbbl
pop
push
jmp
mov
mov
inc
pop
call
loope
pop
nop
inc
mov
in
sub
sub
add
inc
in
and
mov
test
pop
cmp
sub
nop
cltd
cmc
sbb
pop
lret
roll
adc
add
call
dec
jp
js
push
nop
ds
rol
cmpsb
cs
popf
lods
outsl
jmp
data16
push
sub
ret
call
xchg
dec
xchg
mov
push
sub
data16
pop
inc
insl
and
rorl
mov
orl
mov
stos
jo
adc
pop
dec
mov
add
sbb
sbb
sahf
add
mov
shrl
cmp
dec
pop
lods
lret
test
lods
aad
adc
push
sarb
add
mov
mov
inc
repnz
mov
add
jbe
mov
pushf
xchg
mov
out
or
ror
scas
sbb
dec
ror
test
pushf
and
add
dec
add
mov
enter
setne
sbb
or
xchg
fwait
aam
add
mov
xchg
fiaddl
or
enter
xorb
movsl
inc
repz
leave
aam
mov
fdivrs
ds
jno
add
je
sub
push
push
cmc
sbb
add
lret
nop
movsl
mov
mov
jne
fldcw
lods
mov
rcr
push
mov
loopne
lods
push
popa
cmp
rorb
lods
leave
test
push
fiadds
lahf
mov
mov
xlat
cmp
jp
jle
and
test
loop
loop
arpl
or
mov
and
out
jb
aad
ss
fs
dec
dec
inc
sbb
mov
outsl
jno
cmp
add
add
push
adc
mov
cmp
dec
and
dec
adc
pop
faddl
ficoms
enter
jne
fs
test
mov
arpl
in
lock
jo
sbb
sub
jo
icebp
inc
jne
lds
ljmp
daa
pop
shlb
pop
in
sub
add
cmp
nop
enter
inc
popa
push
xor
unpcklps
mov
shrl
mov
adc
or
or
movsl
loope
lock
mov
dec
cmp
popa
xchg
mov
cmp
inc
mov
mov
sbb
pop
inc
inc
test
test
aaa
add
sbb
add
addb
into
adc
lret
rorl
add
sbbb
lcall
ret
dec
rcrl
mov
addb
mov
mov
add
cmp
dec
leave
push
push
xchg
xchg
sbb
je
imul
push
and
ror
ljmp
fistpl
add
clc
push
mov
push
flds
int3
nop
or
push
adc
shll
aam
adc
inc
shl
sbb
gs
add
out
cmc
gs
jne
xor
and
and
shrb
jmp
icebp
jnp
inc
adc
mov
andl
jno
add
mov
mov
or
call
roll
scas
mov
jle
mov
gs
rcrb
xor
mov
or
inc
daa
out
xor
adc
push
inc
push
shr
sbb
dec
or
cmp
push
adc
adc
cmp
jo
loope
adc
sti
jmp
ret
mov
aam
xchg
dec
mov
cmp
andb
push
inc
sbb
jae
pop
jne
inc
push
sahf
insb
lods
mov
icebp
mov
xchg
cmp
adcb
lock
xorb
mov
or
push
addl
das
or
ret
shlb
popa
rolb
roll
pop
and
mov
into
and
inc
push
push
addr16
into
add
xchg
lods
pusha
sbb
xchg
sbb
mov
rcrl
hlt
mov
xor
push
xor
mov
rcll
pop
ret
sbb
inc
and
enter
add
daa
aam
imul
jb
xchg
mov
ss
add
into
sbb
mov
add
pushf
imul
adc
mov
inc
add
movsl
cmpsb
lds
inc
dec
or
call
fucompp
add
jne
outsb
or
push
add
js
sbb
dec
xor
pop
dec
call
adc
fcoms
cs
nop
mov
lock
xchg
xor
and
sbb
adc
lods
jb,pn
pop
test
imul
jns
and
xchg
sub
sbb
inc
mov
inc
lret
xor
test
sbb
emms
test
add
fsubr
inc
int3
add
shlb
sub
mov
cmp
pushf
sub
push
xor
sub
xchg
pusha
inc
or
fwait
dec
mov
cmpb
jbe
pop
pushf
je
add
cmp
add
aad
sbb
push
mov
cmp
aas
or
sbb
sub
xor
cmpsl
inc
sub
cmc
inc
cmp
push
mov
cs
add
push
ret
movsb
dec
inc
loopne
mov
pop
sbb
push
cmpb
xchg
add
adc
rorl
shlb
push
and
or
lahf
leave
mov
pusha
jge
mov
imull
jl
xorl
dec
and
push
rol
arpl
sti
mov
adcl
and
or
add
pop
sbb
popa
shll
mov
loopne
inc
or
adc
mov
loopne
into
pop
adc
xor
icebp
xchg
cli
xor
push
in
lds
enter
xchg
int3
push
imul
jge
arpl
dec
dec
lds
addb
pop
jo
rorb
lret
sub
pop
xchg
orl
daa
or
mov
dec
xlat
roll
rorl
loope
xor
rorb
orl
jbe
inc
sub
das
sbb
rolb
rcrb
jmp
pushf
test
xchg
repnz
jno
ljmp
clc
xchg
add
adc
push
dec
inc
ss
cmp
xchg
mov
push
adc
outsb
movsl
lods
xchg
movsb
push
adc
clc
rcrb
and
xchg
dec
loopne
cmp
das
cmc
dec
sub
push
jg
nop
or
adc
out
pop
aam
pop
push
daa
pop
fs
ret
lret
bnd
or
push
xchg
push
push
xorb
push
and
pop
jp
lock
push
loopne
das
dec
adc
push
xor
sub
or
addr16
mov
push
or
mov
adc
outsl
arpl
lock
mov
imul
in
pop
inc
lea
push
pop
push
shrl
idivb
pop
adc
pop
xchg
add
imul
arpl
test
inc
and
add
je
arpl
sbb
adc
add
inc
arpl
cmpsb
and
test
xor
pop
pop
fcomps
orl
or
sbb
and
mov
push
cmpsb
push
or
test
sbb
packuswb
add
in
jge
lock
dec
or
push
xchg
stos
adcl
add
cmc
sbb
rcrb
xchg
negl
imul
mov
inc
lock
jne
pusha
mov
inc
inc
loopne
add
adc
ja
cmc
xor
cmp
pop
lods
daa
add
push
cmpsb
lcall
adc
or
pop
or
lret
mov
adc
es
stos
pop
movb
test
xchg
pusha
jae
or
dec
pop
push
xchg
push
pop
push
imul
pop
enter
push
aas
mov
sub
rol
add
add
push
inc
fdivs
hlt
or
xchg
leave
rolb
lods
inc
mov
sarl
xor
dec
imul
or
shl
push
nop
xor
xchg
mov
push
dec
xchg
lods
add
push
imul
push
mov
movsb
imul
xor
cld
call
in
adc
js
and
mov
cli
xchg
mov
cmp
add
mov
mov
or
add
shl
pop
push
movsl
call
ret
cli
sbbb
shl
mov
mov
in
jno
loopne
cmp
adc
fcomps
xor
jle
adc
pop
lcall
sahf
mov
jmp
test
loopne
mov
fs
popa
sbb
and
pushf
push
adc
insl
cs
or
push
pop
adc
cmc
xorb
or
add
pop
dec
add
inc
add
dec
lods
mov
les
js
pop
mov
inc
outsl
or
mov
sub
mov
ret
jne
lret
jmp
add
je
enter
cmp
enter
mov
fcoml
cwtl
and
dec
sar
xchg
inc
pop
inc
mov
jl
adc
inc
push
ds
das
call
enter
mov
faddl
pop
jl
inc
push
cmp
sub
mov
pushl
bound
mov
sub
adc
mov
xadd
push
test
aaa
ret
sub
mov
mov
hlt
js
arpl
aad
or
dec
inc
mov
mov
xchg
cmp
or
into
sbb
arpl
loopne,pt
mov
loope
sbb
mov
add
push
push
jl
mov
cmp
sbb
sbb
ret
mov
outsl
stos
mov
inc
dec
mov
movsb
pop
icebp
adc
mov
int3
jp
dec
jle
rcll
mov
mov
xchg
push
pop
enter
cmp
jl
ss
das
pusha
subb
xor
iret
mov
xor
call
mov
imul
hlt
mov
out
out
js
xor
das
sbbb
add
sbb
pop
leave
std
enter
popa
mov
mov
sub
pop
mov
rcrb
xor
sbbl
shr
push
vminps
sub
xorl
and
xor
popa
hlt
sbb
sbb
pop
lret
add
jp
add
mov
lock
push
xor
ja
shlb
and
push
rorb
test
cwtl
es
fmul
adcl
jp
call
subl
movsb
xor
mov
inc
mov
add
sbb
push
imul
shlb
sbb
sbb
arpl
mov
sbb
popa
bound
mov
icebp
pop
sbb
or
adc
mov
xchg
je
add
sub
jl
ficoms
dec
adc
movsl
sbb
sbb
sub
lret
rclb
popf
and
into
add
adc
adc
mov
or
jo,pt
adc
movsb
add
sub
scas
cs
or
xchg
shlb
out
jg
ficoml
fdivrs
jne
pop
jo
sub
push
and
mov
icebp
cmp
insl
mov
add
dec
jns
add
pusha
dec
and
mov
mov
neg
or
sub
ret
add
sbb
push
mov
call
push
pusha
adc
hlt
mov
mov
jp
dec
mov
or
icebp
insb
ret
dec
xchg
xor
aam
push
loopne
lods
push
pop
push
mov
mov
mov
mov
or
addb
add
xchg
hlt
cmc
out
add
push
push
ja
rclb
push
out
pusha
fdivrs
ljmp
shlb
add
jo
adc
or
pop
pop
cmpb
mov
das
inc
or
outsb
sbb
addl
or
cmp
nop
andl
mov
insb
sbb
ret
test
mov
xchg
mov
adc
or
sbb
sbb
mov
test
cmp
lret
pop
cmp
bound
shlb
cmpl
jecxz
sbb
insb
mov
xchg
pop
mov
movsl
andb
and
adc
xchg
cli
add
movsb
test
adcl
enter
dec
push
cmp
jl
adc
dec
mov
sbb
andb
xor
ljmp
insb
test
aam
inc
stc
push
arpl
repnz
pop
pop
sbb
jl
add
mov
scas
sub
push
push
in
jl
sbb
or
cs
push
inc
call
inc
outsl
sarb
sahf
dec
and
test
lods
xor
add
jbe
popa
xor
dec
xor
mov
gs
push
adc
pusha
xchg
test
push
cli
push
ret
jmp
pop
scas
test
inc
call
xor
loopne
or
jo
dec
inc
ret
fs
jne
mov
ret
lods
jo
sbb
dec
add
mov
inc
and
rclb
or
xor
loopne
add
push
scas
add
ret
mov
push
fnstcw
cmp
inc
push
inc
icebp
or
pop
or
lret
jns
mov
jge
cwtl
jo
ret
add
shlb
pusha
test
inc
sub
push
sbb
sahf
pusha
lret
bound
inc
lret
shll
xor
popa
pusha
or
add
and
sbb
or
in
cwtl
sbb
das
push
mov
dec
and
sbb
mov
adc
adc
adc
loopne
pop
add
add
movsb
imul
pusha
js
popa
push
mov
insl
rorb
adcb
sub
or
mov
lods
and
or
jge
fistpll
sub
add
jo
xchg
mov
mov
scas
test
cmp
and
pop
pop
push
les
loope
xchg
mov
ret
jne
sbb
dec
push
or
pusha
shlb
mov
xor
cmpsl
xor
xor
mov
lock
add
loope
mov
sbb
or
or
xor
movsb
sahf
fisttps
loop
mov
call
test
adc
shrl
push
add
shll
adc
mov
add
adc
and
add
or
jno
dec
jmp
shlb
mov
sahf
push
ret
sbb
stos
lea
rolb
adc
cmp
pop
pop
mov
mov
lock
push
cvtps2pi
es
adc
sbb
and
add
jno
xorl
inc
sbb
fs
rsm
shl
and
cltd
sbb
pop
inc
je
outsb
test
or
shlb
mov
rorl
add
pop
loop
adcl
lods
gs
mov
jbe
add
dec
mov
ds
sub
xor
rol
loope
pusha
adc
or
adc
pusha
into
xchg
add
and
cld
lds
pop
lock
push
lods
test
push
pop
dec
sbb
sub
cmpl
add
push
ret
sbbl
and
es
or
sbb
dec
adc
les
sub
or
rorb
insb
hlt
mov
cwtl
jp
stc
or
xchg
push
cli
or
inc
adc
mov
push
cmp
add
mov
sarb
jge
cmp
push
xor
add
loope
insl
mov
insl
nop
nop
jp
nop
push
test
cmp
mov
ret
leave
mov
iret
movsl
mov
arpl
push
dec
lods
popa
sbb
dec
mov
add
inc
sarb
xchg
icebp
mov
sub
arpl
xor
loope
ja
sub
add
mov
movsb
test
enter
and
ds
pop
movsb
scas
or
mov
arpl
adc
xchg
int
or
push
adc
mov
add
pop
pushf
sub
pop
push
lods
adc
out
ror
or
repz
out
cld
dec
xchg
shl
push
out
lods
xor
and
push
add
lock
lods
sub
shrb
fcoms
push
xchg
fcoml
jo
lock
imulb
and
mov
and
add
scas
jne
dec
sub
jo
cld
push
sbb
add
imul
pop
fsub
pop
fmuls
or
sub
mov
sbb
cli
sbb
add
inc
andb
rol
mov
mov
xchg
call
mov
sti
lcall
sub
movl
add
push
sti
loope
stos
stos
test
jnp
xchg
push
pop
xor
pop
adc
repz
push
inc
cmp
mov
rorb
cmp
sub
popf
dec
loop
fimull
mov
leave
cmpl
mov
mov
xchg
push
jne
ljmp
pop
and
adc
lahf
xchg
aam
pop
xchg
iret
xchg
push
pop
jns
xor
cmp
test
xchg
jns
fisttpll
xchg
adcb
out
in
clc
mov
pop
in
jle
imul
in
ja
inc
in
xchg
inc
pop
lea
fildll
xorps
icebp
ds
adc
lods
pop
push
pop
jns
push
js
mov
inc
movsb
popf
cli
imul
popf
pop
mov
mov
fldcw
in
push
xchg
cltd
jl
cmc
pop
mov
cmp
xchg
push
pop
ret
sti
lahf
je
lock
xchg
push
pop
jns
xchg
fs
fisubrs
pop
xor
out
push
pop
jns
popa
mov
loope
out
sub
js
pop
mov
in
sbb
cmpsl
lock
in
xchg
push
sub
inc
loope
push
or
inc
mov
pop
jns
mov
loop
cwtl
pop
popf
scas
imul
jmp
mov
call
fidivrs
mov
aad
xchg
sbb
push
call
jp
das
xchg
mov
push
cmp
mov
div
lret
js
cmp
lret
jg
imul
pop
xchg
push
fidivrs
cmp
jg
insl
mov
mov
jge
mul
inc
es
sub
dec
mov
das
push
fdivrp
pop
mov
mov
aad
pop
add
fists
inc
pop
ret
mov
cmp
pop
movsb
ret
out
xchg
inc
mov
repnz
mov
jo
scas
mov
lret
mov
js
xor
out
sub
out
jle
repnz
sbb
mov
leave
nop
push
iret
pusha
add
lret
daa
add
jne
mov
mov
sub
dec
mov
popa
ror
sub
ret
or
add
repz
movsl
ss
loop
imul
mov
mov
mov
pop
xlat
out
lcall
cmpsl
jbe
xchg
fdivl
inc
test
out
mov
daa
jb
lods
mov
scas
mov
popa
enter
and
pop
sub
repnz
lret
stc
pop
cmp
cmp
and
aaa
jno
lret
inc
adc
rolb
clc
jle
sub
push
bound
dec
in
or
mov
mov
fs
sub
mov
cmp
mov
cmpsl
clc
jl
jge
cltd
fnstsw
sub
ror
cltd
xchg
aaa
lds
in
lret
mov
das
aad
dec
and
bnd
les
or
sbb
aaa
inc
fsubl
fistpll
xchg
ja
or
sub
add
push
fidivrs
mov
jg
cmp
enter
in
cwtl
xor
daa
lret
dec
sidtl
cmp
mov
aas
mov
xchg
dec
mov
xchg
push
pop
cmp
lahf
insb
mov
out
xchg
mov
aaa
adc
repnz
xor
test
lods
out
cld
adc
xor
lret
mov
inc
mov
dec
imulb
scas
mov
mov
xchg
inc
mov
repnz
and
jg
xlat
scas
roll
mov
jmp
popa
in
dec
lds
repnz
add
scas
sbb
pop
test
sub
iret
fcomip
rcrl
pop
lahf
adc
sahf
xchg
cmpsb
mov
jg
lds
sti
mov
lret
popa
push
lock
jne
mov
repnz
push
sbb
jle
mov
sbb
lret
mov
in
cwtl
sub
out
adc
sbb
scas
mov
lds
movsl
ss
cmp
scas
mov
cmp
test
mov
pop
mov
mov
jmp
xor
sbb
repnz
jmp
shll
push
and
mov
xchg
add
jb
imul
repnz
aam
lds
and
ss
push
pop
jns
sub
mov
mov
sub
xchg
push
mov
test
movsl
mov
pop
js
iret
imul
repnz
scas
orl
and
mov
sti
mull
push
add
adc
insl
or
repnz
bsf
cli
icebp
fnstsw
dec
and
repnz
add
mov
mov
or
scas
mov
or
pop
cmp
scas
mov
mov
es
mov
and
sbb
mov
jbe
out
in
imul
xchg
in
push
mov
and
sub
cld
test
add
les
scas
mov
adc
add
add
in
addl
lret
pop
or
push
mov
push
repnz
repnz
lret
sub
fadds
dec
xor
sub
mov
push
cmpsb
fbstp
xchg
out
xchg
out
xor
jmp
out
test
ljmp
add
out
mov
cwtl
mov
into
sti
outsl
cmp
jge
in
popf
das
sub
adc
stos
sbb
fisubrl
lret
hlt
jno
aas
xchg
push
das
xchg
lea
mov
daa
pusha
mulb
jne
in
fwait
xor
lret
insb
cmpb
data16
xchg
sub
sub
imul
scas
mov
mov
mov
mov
in
sub
xchg
dec
cmpsb
bound
sub
mov
lcall
repnz
xor
sub
jns
xchg
das
mov
add
push
xor
in
push
pop
inc
shlb
dec
adc
push
xchg
fnstcw
stos
sub
adc
xchg
add
sti
repnz
mov
xor
scas
inc
pushf
fptan
lret
sub
jno
jno
sbb
lret
mov
sub
outsb
add
aas
adc
scas
mov
das
dec
sbb
adc
jns
div
lret
pop
xor
mov
out
xchg
push
emms
ja
xchg
mov
aaa
scas
push
dec
adc
inc
xor
fists
insl
mov
lods
jnp
adc
enter
lret
fisttpll
ret
pop
jecxz
push
stc
cmp
scas
arpl
dec
pop
dec
mov
fidivrs
lea
jns
pop
lock
sti
xchg
out
out
pop
jns
xchg
jns
push
push
pop
add
shrl
inc
idivl
xchg
push
ljmp
test
leave
nop
adc
sub
stos
push
jnp
mov
stc
and
gs
pop
ds
adc
mov
lret
pop
or
cmp
cmp
fs
push
mov
imul
scas
inc
inc
adc
inc
inc
std
ss
js
or
test
ret
mov
es
push
pop
arpl
ds
stc
dec
hlt
push
lret
jns
adc
xchg
push
sub
popf
sub
mov
cmp
sbb
and
popf
loop
lret
jge
mov
push
dec
movaps
jns
inc
ret
jns
ljmp
enter
xchg
cmc
mov
mov
mov
push
stos
scas
lods
mov
pop
and
aaa
lret
xchg
push
pop
cwtl
xor
pushf
leave
repnz
mull
dec
pop
jnp
sbb
push
inc
ret
lods
pop
jns
xchg
pop
cmp
and
xchg
loope
inc
in
das
push
in
or
dec
fiadds
push
xchg
push
pop
jns
scas
push
sbb
cwtl
out
cmp
and
in
sahf
mov
shl
pop
lods
jns
xchg
push
xchg
cld
sahf
pop
jg
cli
loopne
cmp
pop
push
loop
xchg
push
dec
call
sub
lret
xor
das
mov
enter
cld
jb
and
or
cs
cld
stc
repz
lods
pop
xor
pop
or
jg
xor
fnstsw
das
xchg
mov
loopne
fldt
jecxz
ljmp
shll
sti
jle
push
xchg
mov
movsl
cmpsb
jno
ret
xor
inc
fbld
mov
jns
xchg
or
out
cmp
jp
jns
xchg
das
ja
std
sbb
scas
hlt
push
sub
xchg
jns
dec
dec
insl
adc
out
mov
mov
adc
push
dec
popl
jp
mov
sub
scas
pop
xor
mov
scas
arpl
mov
sbb
sub
pop
sbb
popa
push
sub
int3
cwtl
jno
scas
test
mov
decb
jne
scas
mov
jp
add
sub
mov
inc
repnz
lret
sub
jnp
pop
aas
xchg
mov
lret
mov
pusha
lret
xlat
fmul
lock
mov
push
mov
hlt
lock
repnz
or
sub
lret
cmp
lods
adc
add
sub
mov
pop
jmp
stos
sub
mov
pop
inc
cwtl
cmpsl
push
subl
fimull
stc
and
addr16
std
mov
mov
int3
sbb
pop
push
aad
xor
scas
xor
test
test
sbb
mov
mov
add
adc
mul
cmp
or
cmpsl
xchg
in
push
pop
add
fnsave
push
pop
jns
fildl
imul
and
lods
pop
jns
xchg
loope
aaa
popa
sub
ret
mov
pop
jns
xchg
push
mov
imul
xchg
push
pop
adc
dec
test
jo
add
sub
pop
jns
sbb
mov
mov
push
fidivrs
out
mov
nop
outsl
xchg
aam
rol
stc
jns
mov
ret
adc
mov
in
push
pop
movsb
cmp
out
jecxz
gs
ss
push
pop
jns
cwtl
icebp
clc
js
pop
xor
in
xor
push
pop
jns
mov
or
ret
xor
jns
xchg
jmp
pop
mov
in
mov
in
mov
cmp
push
shrb
xchg
jg
aad
ret
xchg
push
pop
jns
imul
iret
push
pop
jns
jbe
ss
rcrl
mov
call
sub
add
sub
push
aad
fildll
xchg
push
jle
jle
adc
xor
ja
pop
shl
insl
or
js
sub
dec
push
pop
jns
scas
mov
mov
fdivr
imul
jns
xchg
adc
lock
dec
int
jbe
jae,pt
in
push
fdivs
adc
pop
scas
dec
jo
int
and
push
pop
xchg
idiv
js
out
pop
or
pop
jns
lret
push
sbb
lds
jns
cmp
into
out
lds
or
cs
jns
xchg
xchg
inc
into
mov
xor
pop
pop
out
add
daa
mov
stos
fwait
es
sahf
out
jb
out
jle
push
ljmp
sbb
mov
mov
mov
lret
mov
and
push
cmp
jle
repnz
movl
lcall
sbb
inc
aas
jg
cld
cmp
sub
sbbl
out
in
lahf
adc
or
jl
and
repnz
mov
inc
sbb
add
lret
sub
gs
xchg
xlat
jl
lret
sub
pop
mov
jns
or
repnz
sahf
sbb
pop
xor
cli
mov
mov
lret
out
lahf
arpl
mov
outsl
pop
dec
icebp
lahf
sub
push
push
aam
dec
add
stos
test
mov
cwtl
jl
inc
mov
mov
cmp
outsl
insb
push
mov
cltd
movsl
negl
clc
mov
and
aas
mov
adc
lret
pop
in
adc
ret
mov
scas
mov
and
scas
notl
mov
sbb
ret
inc
mov
pop
fnsave
mov
push
ds
cld
mov
sub
mov
mov
lahf
or
test
bsf
in
lea
ja
ja
pusha
pop
fs
repnz
das
and
and
idivb
les
mov
cmpsl
out
fs
dec
inc
out
idivb
push
lret
ljmp
sub
in
sub
imul
sub
in
xchg
push
pop
jns
dec
outsb
das
aam
aam
ficomps
inc
jmp
std
jb
sbb
lret
popf
cmc
jbe
xchg
pop
or
xchg
push
mov
inc
mov
shr
mov
rclb
cmp
clc
fisttpl
mov
push
push
pop
jns
mov
mov
pop
aaa
sbb
pop
scas
dec
out
dec
pop
jns
xchg
lahf
int
adc
or
jle
mov
lret
xchg
push
mov
mov
jae
enter
outsl
cld
jb
pop
dec
clc
xlat
sbb
imul
and
cld
stc
mov
jg
fists
andb
iret
lahf
aas
fdivrl
add
inc
fbstp
sar
cld
stc
repz
ljmp
cmpl
jno
lahf
aas
jg
add
pop
or
inc
fdivrs
cmc
in
cmp
cmp
imul
in
or
xchg
aas
dec
dec
pop
adc
sub
and
dec
mov
js
mov
ss
xchg
cltd
add
and
push
idivb
fcoml
pop
fs
xchg
sub
push
mov
xchg
xchg
push
pop
jns
inc
fucom
fnstsw
sub
pop
mov
pop
jns
jmp
mov
push
push
adc
movsb
mov
jns
xchg
sbb
hlt
xchg
hlt
push
mov
xchg
push
mov
repz
sub
scas
mulb
repnz
and
jle
into
gs
scas
sub
mov
sub
enter
mov
mov
or
inc
movsl
ja
out
aas
movsb
paddd
mov
xor
repnz
mov
int
mov
mov
jecxz
sub
mov
pushf
imul
imul
dec
mov
lods
cld
xchg
cld
jne
repnz
adc
adc
mov
loopne
mov
xlat
mov
mov
mov
into
add
rcrl
pop
inc
shl
pop
xor
mov
fsub
add
lret
jnp
ret
inc
xor
shlb
repnz
dec
or
cld
stc
add
icebp
pop
bound
jnp
and
iret
lahf
aas
jg
ss
sti
arpl
dec
insl
cmp
arpl
pop
aaa
gs
shlb
fcomps
xor
xchg
repnz
mov
in
iret
dec
fwait
sbb
lods
pop
cmc
cld
sti
jb
and
mov
inc
fnstenv
lret
sbb
movsb
faddl
loopne
subps
sbb
scas
pop
jg
jne
cmp
scas
rcl
jmp
fistps
popf
fdivrl
pop
aas
pop
loopne
je
das
pop
dec
pop
xchg
mov
xlat
pop
mov
setl
aas
jmp
iret
pop
out
mov
ret
pop
out
pop
pushf
pop
jg
pop
mov
pop
cmp
fs
iret
pop
pushf
mov
pop
pop
leave
add
sbb
xlat
pop
scas
pop
inc
subps
cmp
cmpsl
stos
xchg
pop
out
pop
out
pop
loopne
je
jg
das
pop
dec
pop
cmp
pop
mov
sahf
outsl
pop
lcall
dec
push
pop
pop
pop
dec
pop
cmpsl
orl
xchg
and
shr
pop
subps
pop
iret
pop
vpavgb
pop
pop
dec
call
aas
pop
je
jmp
daa
inc
popf
mov
pop
das
pop
jb
leave
or
outsl
arpl
pop
je
jp
pop
mov
pop
loope
iret
pop
scas
inc
popf
mov
iret
pop
das
add
daa
pop
pop
pop
lahf
pushf
pushf
adc
add
pop
das
pop
outsl
fs
rcrl
rol
jmp
das
pop
leave
or
mov
aas
pop
scas
cmp
filds
pop
pop
cmp
jecxz
scas
pop
aas
pop
pushf
lods
jno
mov
cld
cmp
dec
mov
jmp
popl
lahf
pop
out
ret
leave
adc
jmp
mov
pop
scas
pop
jmp
lcall
iret
pop
dec
push
cmp
outsl
pop
iret
pop
daa
das
pushf
lcall
pushf
cs
push
pop
das
pop
jo
cmp
pop
pop
daa
setge
leave
pop
mov
cmpsl
ja
pop
pop
aas
cmp
jb
pop
aas
pop
jg
in
sahf
pop
es
pushf
sahf
dec
dec
lahf
pop
pop
leave
or
jg
jb
pop
iret
pop
lcall
dec
inc
subps
leave
sbb
je
xor
pop
pop
pop
mov
pop
aas
pop
jo
ror
pop
iret
pop
daa
add
pop
popf
mov
mov
pop
cmp
in
xchg
adc
aas
into
cmp
pop
jg
jg
xchg
pop
dec
pop
pop
pop
daa
and
pop
push
cmp
pop
js
jg
add
mul
das
pop
int
pop
jo
leave
mov
mov
cmp
sbb
pop
out
pop
pavgusb
ror
daa
pop
lcall
hlt
adc
pushf
fsubrp
jg
mov
cli
cmp
pop
mov
pop
pop
pop
jmp
pop
pop
pop
in
rcl
pop
fistps
cmp
pop
pop
pop
adc
leave
aas
pop
lcall
iret
hlt
fistps
scas
push
cmp
lahf
xchg
add
pop
pop
out
cs
pop
cmpsl
pop
lahf
pop
decl
sub
ror
pop
lcall
out
in
pop
dec
pop
dec
cmp
pop
lcall
xchg
pop
dec
pop
mov
fistps
repnz
lcall
call
pop
lahf
ds
push
cmp
mov
pop
dec
pop
outsl
or
fcoml
out
in
pop
scas
adc
pop
daa
setl
jg
xchg
adc
pop
pop
popf
aas
cmc
in
pop
pop
jg
sbb
jo
cmp
outsl
rcl
jmp
aas
pop
jmp
pop
pop
cmpsl
mov
rcrl
pop
xchg
pop
dec
push
subps
sbb
popf
ficomps
dec
pop
pushf
fmulp
dec
dec
pop
fistps
daa
or
jg
je
rcrb
or
or
ror
lcall
cmp
in
pop
scas
pop
xchg
xor
out
pop
outsl
pop
jmp
pop
mov
dec
pop
mov
xchg
adc
pop
daa
daa
popf
scas
dec
pop
lcall
leave
sbb
aas
pop
dec
pop
cmpsl
fistps
je
xor
aas
pop
mov
pop
lahf
pop
scas
jge
mov
out
pop
daa
dec
cmp
fcomip
in
xchg
pop
pop
mov
fidivrs
leave
mov
add
jg
lahf
pop
cmpsl
stos
xchg
pop
iret
pop
pushf
cs
pop
outsl
pop
vmread
daa
pop
lcall
pop
ljmp
cmpsl
cmpsl
sarl
pop
outsl
pop
mov
or
pushf
jno
iret
pop
pop
and
daa
pop
jg
iret
loopne
adcl
pop
fistps
xchg
pop
mov
jmp
das
pop
sbb
pop
outsl
push
dec
inc
cmp
mov
pop
pop
pop
push
push
adc
adc
sbb
jmp
test
jmp
dec
test
lahf
pop
fisubrs
push
dec
jl
in
in
fistpll
mov
push
jns
push
jmp
pop
rclb
adc
mov
adc
pop
jns
bound
les
add
fmuls
mov
mov
cmpl
xchg
push
sarl
push
xchg
pusha
imul
push
scas
jge
out
inc
push
pop
jns
lock
push
inc
ja
shl
pop
pop
rclb
pop
jns
xchg
jae
cmp
sbb
shl
fistps
pop
xor
xchg
push
cmc
push
pop
cwtl
iret
mov
mov
pop
cmp
insl
stos
or
jne
popf
ret
sbb
add
faddl
mov
inc
out
lahf
pop
push
fisttpl
sub
jmp
push
repz
pushf
aaa
jmp
xchg
cmp
xchg
aaa
push
test
jg
iret
sub
stos
inc
dec
push
test
cs
inc
xchg
aam
scas
stos
xor
lods
pop
stos
jg
cld
stc
test
cmpb
xchg
stos
pop
sarl
ss
push
out
lahf
aas
inc
movl
stc
repz
cmp
jl
out
test
imul
push
jns
sbb
aas
mov
leave
into
adc
mov
cmp
pop
jns
and
mov
sbb
mulb
in
les
adc
jg
inc
xor
test
and
sahf
sti
or
incb
jns
stc
mov
cmc
push
cmpsl
adc
pop
jle
imul
push
clc
mov
in
dec
cmp
sbb
bound
and
jb
xchg
push
or
rcr
mov
and
or
mov
or
cpuid
push
xor
jg
sub
push
outsl
test
add
jmp
xor
or
cld
stc
repz
mov
xor
xchg
cmp
testl
xchg
mov
lahf
gs
jg
das
sbb
jg
push
fsubp
flds
out
and
in
popa
popa
mov
lahf
and
push
add
lahf
xchg
push
fdivrp
mov
jno
pop
xor
jge
stos
jmp
mov
in
scas
pop
mov
cmp
inc
xchg
sub
pop
jns
xchg
das
outsb
cmp
mov
cmp
jmp
sbb
in
push
repz
pushf
clc
pop
cmpb
push
es
push
fidivrs
and
iret
jp
roll
inc
mov
cmp
dec
out
add
mov
pop
lcall
out
add
test
jecxz
lahf
aas
jg
je
jl
mov
jns
adc
stc
repz
add
dec
movsb
push
adc
push
ficoms
std
fnstenv
mov
add
jne
repnz
rclb
ljmp
push
pop
jns
lret
cmp
mov
in
mov
stc
aas
out
fdivr
insl
iret
adc
mov
mov
popf
icebp
jae
aad
ja
inc
iret
jns
sahf
lret
arpl
add
sbb
and
mov
in
jge
jl
push
out
scas
or
pop
xchg
std
out
jns
push
and
pop
mov
iret
scas
mov
jb
adc
cld
stc
repz
stos
decl
int
mov
jle
outsb
idivb
and
aaa
or
sub
mov
ret
or
sub
fneni(8087
pop
jmp
sahf
add
xlat
scas
mov
cmp
sahf
das
and
movsb
jecxz
nop
sarb
push
roll
push
pop
and
xlat
mov
mov
cmp
cmp
out
mov
iret
mov
pusha
adcb
stc
adc
jne
or
or
in
loop
push
ss
iret
lahf
aas
push
xchg
cmp
pop
dec
mov
movsl
push
js
leave
in
lret
jle
cli
std
xchg
call
and
lret
sub
jp
cwtl
and
mov
fidivl
xor
repnz
dec
pop
cmpsl
inc
xor
jg
push
dec
in
mov
dec
and
or
push
pop
jns
sub
dec
sbb
in
test
push
pop
jns
lret
out
lret
sub
cmp
pop
jns
xchg
xor
shl
aas
insb
mov
jne
shl
push
push
cld
pop
sbb
lahf
lret
cmp
repnz
sbb
mov
push
out
xchg
sub
xlat
test
jg
scas
mov
jle
or
pusha
mov
lret
xchg
pop
js
shlw
and
ljmp
mov
sbb
dec
mov
sub
and
repnz
pop
sbb
dec
push
pop
inc
imul
sub
add
push
aas
sbb
test
shlb
scas
and
xchg
dec
lods
push
addr16
pop
push
jbe
out
jnp
fwait
cmpsb
sub
lret
cmova
daa
dec
mov
and
mov
mov
mov
scas
leave
cmp
push
fcmove
sarl
xchg
jo
xchg
mov
mov
mov
out
out
into
sbb
jle
xacquire
popa
ret
jo
dec
push
pop
cwtl
repnz
xchg
sub
les
cmp
xor
add
push
sbb
cs
out
mov
add
jmp
scas
cld
add
repnz
push
lock
inc
push
cmp
mov
out
push
call
popa
out
lahf
aas
cmp
sub
test
repnz
dec
and
add
lods
sbb
add
aad
cld
add
and
mov
dec
es
out
lahf
aas
shr
imulb
scas
or
in
std
repnz
repz
inc
clc
sbb
sbb
xchg
cld
stc
push
fdivrp
add
cli
lods
scas
iret
inc
lret
inc
cwtl
pop
jns
xchg
mov
xor
mov
dec
pop
cli
jns
xchg
push
je
popl
sbb
pop
pop
push
in
push
pop
loope
cmp
fdivrl
mov
push
pop
jns
xchg
loop,pt
rcrl
push
pop
jns
lea
xor
jge
iret
lahf
pop
sbb
push
add
imul
loop
xchg
mov
ljmp
das
cli
mov
repz
lea
push
add
xor
mov
mov
adc
insl
push
les
xchg
and
sbb
std
std
loop
cmp
punpckhwd
sub
sub
fstp
xchg
ljmp
orb
pop
and
push
pop
jns
cmp
cmp
xlat
shrl
jns
mov
stos
cmp
jmp
aad
mov
xchg
into
pushf
pushl
iret
xor
jns
in
push
pop
cwtl
pop
dec
nop
lods
in
insb
mov
jb
adc
inc
inc
fstl
sbb
pop
jns
xchg
cmp
add
pop
dec
sub
push
mov
inc
mov
in
push
pop
loop
out
xor
sub
adc
sbb
das
push
pop
jns
xchg
and
xchg
adc
ja
mov
mov
jp
out
movsl
pop
jl
out
xchg
pop
dec
jb
lcall
jg
in
or
xor
xlat
mov
sahf
push
cld
cmp
jmp
push
loopne
in
xchg
mov
inc
pop
iret
lahf
aas
jg
push
sub
fstpt
js
stc
repz
cmp
cmc
dec
jmp
into
and
adc
out
inc
xor
push
and
es
stc
repz
mov
test
pop
xrelease
jg,pt
cld
xor
xchg
pusha
mov
cmp
cmp
out
fdivrs
mov
and
push
mov
stc
repz
dec
jbe
into
xchg
jmp
sbb
sbb
lahf
aas
jg
js
shlb
xor
gs
repnz
fstl
shl
loopne
bound
hlt
test
jp
iret
in
idiv
jae
sub
dec
out
push
add
bnd
add
lods
in
push
std
iret
iret
scas
mov
add
push
dec
pushl
ror
and
lret
dec
test
repz
inc
dec
xor
int3
mov
cmpsb
jnp
outsl
outsl
xchg
cmp
mov
dec
ss
mov
enter
lret
mov
jge
pushf
loope
pop
inc
dec
xchg
sub
addr16
mov
jnp
test
push
pop
pop
fdivrp
jmp
aas
cld
stc
xchg
icebp
test
sbb
push
lahf
aas
jg
and
jp
pop
je
add
stc
repz
arpl
push
arpl
arpl
or
or
mov
outsb
xlat
das
sarl
inc
cli
fmull
pop
popa
jg
lret
sbb
aas
fxch
push
add
mov
push
std
stc
mov
sub
enter
call
iret
inc
inc
inc
loop
lret
lods
xor
in
xchg
clc
and
stc
pop
ja
sti
xor
insb
fistpl
ficompl
mov
dec
lods
jle
pop
jns
adc
add
jg
adc
sub
ja
adc
push
iret
inc
adc
out
jmp
push
and
mov
mov
xchg
push
pop
jns
or
mov
mov
jns
pop
xor
xor
xor
pop
in
jg
mov
aam
mov
fistps
in
jge
inc
mov
and
insl
jns
xchg
push
push
adc
frstor
subl
push
pop
mov
aad
cs
out
xchg
pop
test
pop
pop
jns
jbe
cmp
jne
lahf
pushf
outsl
aas
pop
jns
xchg
sbb
fs
push
push
imul
push
inc
inc
push
jae
test
and
push
pop
in
jmp
scas
repz
out
lahf
hlt
cs
scas
loopne
sbb
out
imul
xor
mov
jbe
lds
pop
add
iret
lahf
aas
push
ffree
ret
js
fs
mov
xor
mov
cltd
jl
jle,pt
cld
stc
mov
mov
shll
mov
adc
xchg
ja
add
pusha
dec
sar
insl
into
sub
sbb
lret
cmp
aad
mov
lahf
lods
cmc
pop
scas
in
push
pop
xchg
cmp
iret
cmpsb
sahf
lea
add
jns
and
adc
push
fidivrs
jmp
push
or
pop
jns
xchg
inc
push
sbbb
or
xchg
push
pop
cli
mov
mov
pop
scas
into
lret
xchg
push
pop
fadd
test
movsl
hlt
bound
cld
and
ljmp
popa
mov
or
pop
sbb
mov
jno
dec
vshufps
mov
nop
mov
shlb
imul
out
lret
lahf
adc
scas
mov
les
jb
into
cmp
sahf
lret
loopne
aaa
jg
std
adc
add
cmc
bnd
pop
fs
xchg
pop
repnz
out
push
mov
xchg
loope
mov
push
out
insl
pop
stc
push
les
adc
fists
scas
mov
pop
jmp
orl
das
scas
mov
insb
mov
lock
sbb
cltd
add
pop
pop
lret
sub
or
mov
mov
sti
hlt
cmp
dec
mov
lret
sub
testb
sub
sbb
mov
aas
xchg
pop
test
xor
xchg
push
pop
jg
lds
and
mov
popf
dec
cmpsb
xchg
push
pop
jns
cmp
jns
enter
in
into
bound
scas
mov
adc
adc
shr
lcall
and
pop
pop
lds
or
push
dec
scas
xchg
dec
mov
pushl
jge
sbb
inc
lods
ds
jl
cmpsl
out
lahf
aas
cmc
sbb
xor
jl
idiv
cld
stc
repz
js
push
icebp
dec
sub
dec
cmc
push
iret
lahf
aas
jg
mov
inc
xor
in
in
cmp
lret
out
das
bound
out
adc
pop
scas
mov
mov
xor
xchg
enter
repnz
push
mov
pop
or
enter
sub
jbe
outsb
xchg
jb
xor
adc
sbb
fisttps
adc
iret
das
test
mov
mov
rorl
jbe
bound
pop
insb
and
test
iret
lahf
aas
jg
out
int3
sub
loope
sarb
inc
or
stc
repz
ret
fs
and
lahf
in
stc
push
insl
and
pop
jns
out
js
jg
sbb
inc
aas
test
add
in
ja
mov
aam
lcall
pop
jns
jb
mov
add
pushf
cmpl
mov
iret
iret
testl
add
add
adc
in
sub
push
xchg
scas
ja
nop
inc
addr16
xor
xorb
in
and
lea
cld
les
mov
mov
push
push
cmpsl
sahf
sbbb
push
jne
add
jno,pn
scas
mov
iret
lahf
aas
inc
out
lahf
push
test
pushf
mov
push
pop
jecxz
mov
mov
inc
repz
aas
into
cmc
xlat
stc
les
add
rcl
mov
stc
fs
xchg
jns
xor
inc
js
daa
sub
pop
pop
xchg
cmp
in
push
lret
daa
cmpl
iret
lahf
aas
jg
out
pop
fiaddl
das
jne
cs
imul
repz
mov
mov
in
mov
jo
es
outsl
cld
stc
add
stos
jge
pop
pop
jg,pt
outsl
int3
testl
repz
cld
xchg
popl
leave
dec
and
cld
stc
jle
pop
xor
mov
mov
ja
popf
out
lahf
aas
fidivs
rolb
and
jnp
jbe
mov
test
movsl
mov
sbb
xchg
push
fisubrs
imul
and
out
cs
daa
xchg
mov
ror
sub
dec
aas
jg
cld
and
mov
hlt
pop
ret
mov
dec
jg
mov
mov
jns
sbb
shrb
inc
pop
roll
shlb
mov
leave
inc
jbe
dec
push
mov
inc
inc
out
xchg
sub
nop
push
jle
loopne
ljmp
lods
sub
aaa
fistpl
add
enter
sub
fisubs
insl
lret
scas
jmp
mov
sbb
das
ljmp
scas
mov
sbb
mov
pusha
scas
mov
fcomps
mov
fsubrl
mov
mov
lahf
add
cli
in
ret
or
adc
mov
jg
cld
mov
xor
pop
imul
cmpl
out
lahf
adc
nop
xor
sbb
cmc
jg,pn
mov
repnz
push
sarb
fisttps
cmp
lods
mov
iretw
mov
in
push
bound
insl
xchg
push
scas
ja
pop
jns
push
vfrczpd
mov
inc
cli
aas
cmp
xchg
jnp
mov
mov
xor
inc
stc
repz
std
out
jmp
int3
sahf
inc
loope
xchg
push
and
mov
sti
repnz
scas
pop
dec
movsb
jecxz
call
loopne
push
inc
in
xchg
sub
push
ljmp
add
out
mov
push
mov
sarb
imul
jl
cld
es
and
adc
cmp
mov
std
repnz
jmp
lahf
outsb
cs
push
push
mov
fbstp
stc
pop
rcr
dec
adc
stos
fidivs
in
ja
adc
rorl
jl
stos
mov
pop
jns
lods
xchg
jp
jp
push
jmp
push
pop
jns
cli
icebp
add
mov
sub
sti
ror
stos
xor
sbb
or
in
push
call
inc
sbb
mov
push
lret
sub
mov
mov
pop
xchg
push
fsubp
add
xor
sbb
dec
inc
mov
jns
mov
mov
xchg
mov
cmp
pop
cmp
or
mov
xor
cld
add
push
pop
repz
cs
push
push
pop
jle
stos
inc
xchg
push
fadds
pop
scas
mov
int
lahf
hlt
or
add
das
push
fisubrs
inc
bound
sbb
add
das
dec
in
xchg
and
fistps
add
lds
pop
in
ja
xor
jne
outsl
gs
lock
pop
ja
push
pop
jns
mov
cld
pop
and
or
jbe
std
jb
lcall
iret
stos
addr16
repnz
repz
adc
cmp
xchg
cmp
pop
popl
sbb
dec
pop
push
stc
cld
or
sbb
cs
push
icebp
xchg
out
out
ss
jl
insl
cmp
lret
dec
ljmp
sub
idivb
xor
sub
loope
leave
ss
icebp
pop
add
xchg
ja
jg
dec
mov
call
ja
into
push
pop
jns
aam
decb
inc
jnp
imul
outsl
push
mov
and
push
add
aaa
lret
xchg
push
fidivrs
push
jle
cmp
or
out
cmc
cmp
jb
jg
dec
mov
add
add
pop
pushf
jle
and
repnz
jg
add
adc
mov
and
lret
sbbl
dec
call
cmp
mov
xchg
cltd
daa
cmp
cli
mov
mov
push
ja
cwtl
mov
adc
mov
and
mov
pop
repz
ret
pop
jne
fldt
pop
dec
and
pop
lock
test
push
out
call
stc
adc
cs
lahf
aas
jg
pop
roll
mov
aas
cmp
lret
test
inc
jb
push
inc
into
cli
pop
fiadds
out
mov
inc
std
and
xchg
jnp
mov
lds
pusha
jge
jl
add
pushf
dec
sbb
mov
shrb
cld
stc
or
loope
mulb
or
sub
mul
iret
lahf
aas
es
jl
push
jmp
mov
cld
stc
repz
lret
xor
sub
iret
lahf
aas
jg
dec
stos
jg
dec
test
jbe
xchg
mov
sti
jp
lcall
cld
cld
stc
pushf
and
leave
outsl
iret
aaa
jo
mov
jp
mov
cmp
xchg
cld
stc
repz
push
mov
push
leave
jne
fistl
jle
mov
mov
mov
sbbl
xlat
sti
fidivrs
mov
in
push
pop
inc
cmp
xchg
push
sarl
stc
notl
dec
pop
or
pop
aad
pop
cld
pop
sahf
popf
filds
test
repz
pushf
cld
stc
pop
mov
addr16
aad
adc
iret
lahf
aas
jg
sarb
mov
les
dec
and
in
out
xchg
dec
daa
popf
js
jb
mov
lret
cmovle
mov
fdivr
stos
jecxz
hlt
arpl
inc
call
outsl
cld
sub
dec
mov
jmp
iret
lahf
aas
jg
lods
pop
data16
sbb
sub
mov
cli
in
out
je
popa
push
xlat
out
ja
outsl
push
jg
cld
pop
into
pop
je
daa
test
lcall
jbe
popf
adcl
dec
and
xchg
iret
inc
mov
cmp
imul
lret
mov
cs
iret
inc
dec
iret
iret
jae
fmul
sub
sahf
sub
adc
mov
repnz
sub
loop
clc
repz
push
scas
mov
shlb
mov
inc
mov
out
mov
int3
or
repnz
xor
pop
push
cmpsb
mov
out
mov
jp
pop
jmp
add
mov
sbb
fs
or
wbinvd
mov
sub
add
notl
das
movsl
das
scas
fs
cmp
mov
xchg
pop
sti
outsb
stc
repz
fcoml
vmovlhps
adc
outsl
jecxz
jl
cld
jl
jmp
testb
dec
xor
ja
in
lahf
or
pop
repz
fdivr
ficomps
sti
out
cmp
dec
test
mov
stc
notb
push
int3
mov
lock
aas
repnz
xchg
lds
mov
pop
or
testb
iret
lahf
movsb
sbb
leave
pop
jle
out
cwtl
ljmp
push
fsubrl
das
popa
push
pop
loope
movsb
das
pusha
sbb
test
cld
repnz
repz
das
sub
adc
cli
test
pop
jle
jle
pop
and
pushf
out
adc
out
mov
mov
iret
lahf
aas
mov
pushf
mov
test
mov
loop
cld
stc
repz
sub
push
add
xchg
shll
aas
jg
pop
add
and
bound
sar
rcrb
push
push
mov
into
test
aam
bound
push
fdivrp
sbb
jg
mov
fildll
and
js
repnz
repz
scas
in
add
cld
clc
in
jg
and
xor
scas
jne
mov
and
aas
cmp
cmp
xchg
push
decb
xchg
in
pop
push
inc
push
jne
rorl
stc
jae
subl
rcll
pop
daa
dec
adc
mov
or
pop
and
or
push
jg,pt
cld
stc
scas
cmpsb
pop
int
lahf
ficomps
lock
pushf
out
lahf
aas
aad
adc
add
cli
dec
cltd
jbe
imul
jae
inc
scas
outsl
aaa
inc
scas
or
jle
pop
std
and
lret
sub
pop
repz
lahf
push
repnz
inc
test
rorl
push
repnz
jp
xor
push
add
das
push
fdivrp
push
pusha
ficompl
aaa
push
shlb
inc
jae
sub
dec
sti
mov
rclb
xchg
fisttpll
scas
mov
mov
inc
dec
add
hlt
xchg
jp
repnz
pop
mov
out
dec
or
push
pop
lret
mov
push
scas
lods
sbb
sub
int3
pop
mov
cs
pop
mov
add
xchg
cltd
insb
lea
sbb
lea
cld
stc
xor
dec
push
jbe
xor
shll
aas
jg
inc
dec
call
jae
aam
sub
out
sti
imul
mov
add
lcall
adc
data16
xor
lret
iret
lahf
mull
jns
sbb
add
or
repz
mov
mov
fidivs
xchg
push
push
lahf
aas
mov
xor
pusha
jmp
lods
inc
or
popf
nop
pop
jns
nopl
mov
push
xor
jne
lret
xchg
push
mov
lods
or
add
scas
jns
pop
adc
loop
pop
imul
sub
pop
pop
mov
cld
stc
aaa
push
xchg
aas
ficoms
adc
xor
inc
pop
jle
xchg
std
mov
out
xor
sub
jle
iret
xor
xor
rcr
hlt
mov
insb
subb
sahf
sbbb
aas
aas
nop
out
xor
pusha
mov
out
xchg
iret
in
lret
nop
mov
pop
ja
fisttpll
out
cmc
cmp
lahf
loop
xor
mov
aas
call
pop
jns
scas
mov
mov
jnp
inc
or
cwtl
enter
fbstp
int3
jns
xchg
in
cmp
fsubr
push
test
mov
and
and
and
lret
mov
int
hlt
cmp
scas
mov
ss
outsb
stc
cmovl
cmp
mov
in
cmpl
jg
cld
stc
les
sbb
mov
xchg
jmp
iret
lahf
aas
pop
cmp
insl
inc
adcl
pop
sbbb
xchg
out
lret
iret
pop
into
mov
cmpsl
jbe
lret
cmpsl
js
repnz
ss
cld
pushl
pop
jns
jge
loop
hlt
dec
out
xchg
dec
fildll
mov
pop
lea
add
cld
stc
repz
push
ficoml
mov
into
rclb
jg
mov
lds
mov
pop
das
pop
adcl
adc
xchg
cmp
mov
popa
fstp
das
lahf
es
push
dec
mov
dec
lahf
fwait
push
sub
jmp
std
jb
pop
xchg
shll
loopne
mov
jns
xchg
push
popf
xor
das
aaa
xor
test
loop
dec
pop
pop
nop
jno
cwtl
enter
scas
mov
into
roll
and
loopne
sub
inc
hlt
xchg
pop
insb
sti
es
adc
xchg
mov
xchg
repz
leave
cld
scas
lret
cltd
and
pop
jle
cld
sub
inc
mov
push
sub
xchg
ja
ljmp
sub
stc
mov
in
push
mov
das
push
ficomps
call
aas
test
leave
fcmovbe
push
dec
sbb
das
xchg
push
clc
ja
mov
xchg
ja
dec
fistpll
dec
lock
lahf
lods
mov
and
pop
loope
sbb
lock
xchg
ja
fmuls
mov
repz
pop
mov
push
jg
icebp
ss
xchg
sbb
stc
sti
mov
call
mov
pop
jo
iret
lahf
aas
xor
andl
sti
in
sub
pop
scas
sub
imul
sub
fwait
add
popa
adc
scas
mov
ret
mov
popa
enter
mov
movsl
jp
cmc
orl
out
dec
sub
mov
in
sub
insl
push
add
inc
call
repnz
inc
sti
fsub
add
jnp
mov
inc
clc
mov
mov
sbbb
jne
and
lret
mov
lret
and
in
aaa
clc
mov
push
sub
lret
or
dec
mov
jns
jp
cmp
movsl
lret
test
in
xor
pop
adc
in
gs
lea
insb
mov
cmp
push
xchg
mov
repnz
lahf
pop
push
push
adcl
push
mov
cld
stc
repz
xchg
ss
popf
rcrl
js
out
jle
cs
into
das
es
pop
inc
les
iret
out
lahf
or
and
scas
xlat
stos
dec
push
iret
sub
push
mov
xor
mov
mov
repnz
lret
dec
pop
cmp
or
xchg
jnp
repnz
ljmp
sbb
loopne
lret
sub
fnstcw
xchg
stos
nop
and
ljmp
test
faddl
cmp
push
pop
jns
inc
cmpsb
push
mov
andb
sbb
aam
iret
int
fdivr
repz
dec
cmp
pushf
fwait
jae,pt
or
jg
cld
dec
mov
jbe
roll
cltd
cltd
lcall
push
call
in
data16
cli
bound
cld
stc
pop
mov
adc
push
lcall
cs
pop
dec
in
out
lahf
pop
cs
fdivr
call
mov
xor
pop
jns
lret
pop
pop
lret
and
test
std
mov
lret
xchg
push
xlat
sub
cmpsb
pop
or
jne
xchg
sub
jp
fdivl
clc
in
out
pop
or
mov
push
daa
scas
lock
xchg
ja
jns
subb
movsl
into
add
xor
mov
outsl
push
push
cli
pop
jns
xchg
xchg
mov
mov
xlat
push
notb
lret
xchg
jb
xchg
push
js
inc
rorl
into
ret
fdivrp
mov
mov
sub
in
scas
insl
inc
inc
in
sub
pop
ror
adc
mov
pop
cwtl
outsl
lret
jl
movsb
push
mov
scas
outsl
jge
mov
imul
outsb
jae
xchg
scas
ret
insb
scas
lret
add
popf
jg
into
incl
rorb
daa
ret
mov
mov
and
push
jge
mov
pop
out
out
mov
mov
adc
mov
lahf
pop
jmp
aas
movsl
test
stos
inc
in
iret
std
jb
frstor
btr
das
and
mov
cmp
xchg
push
ficomps
jl
inc
outsl
push
inc
pop
out
xchg
push
pop
jns
xchg
out
or
xlat
outsb
cld
dec
repnz
js
adc
aas
pop
and
out
lahf
aas
stc
mov
jecxz
push
fildl
stc
stc
repz
mov
cmpsl
cli
inc
insb
lea
adc
loopne
outsl
mov
fistps
xchg
aas
mov
fmuls
pop
scas
mov
mov
lock
pop
jle
jp
pusha
cli
adc
lret
popa
repz
and
stos
and
sub
movsb
add
push
xchg
cli
repnz
into
in
push
das
push
or
dec
cmp
cld
into
hlt
sbb
xchg
sahf
mov
pusha
ja
scas
lret
mov
test
add
push
fdivrp
jb
pop
cs
loopne
mov
lcall
pop
pop
jb
xchg
push
adc
inc
es
dec
mov
fdivrp
fistps
sbb
decb
imul
imul
xchg
arpl
mov
popa
sbb
clc
or
sub
xchg
sub
and
sti
repnz
mov
es
xor
add
pop
and
icebp
ds
dec
scas
xchg
and
push
mov
jne
mov
movsb
imul
jb
fstpt
push
fadd
mov
xor
std
push
clc
mov
inc
das
dec
xor
pop
inc
cmc
or
adc
ljmp
xor
pop
fdivrp
xchg
sbb
xor
fwait
ja
push
mov
lahf
pop
out
mov
lea
and
repnz
repz
jl
ret
jae
loopne
mov
sub
in
xchg
nop
adc
jns
xchg
in
iret
lahf
fcoml
insb
cmc
sahf
fmul
rclb
outsb
pop
iret
xchg
inc
int
adc
icebp
mov
nop
scas
pop
push
je
arpl
fimuls
fcmovne
push
int
push
cltd
repnz
jbe
mov
cmpsb
shlb
in
sti
cmp
test
loopne
mov
mov
fldl
and
jne
int
jle
mov
pop
push
mov
out
lahf
aas
pop
aam
shlb
push
js
cld
stc
repz
imul
sti
fwait
inc
xchg
add
lret
adc
lahf
aas
jg
push
fnsave
jns
pop
mov
jge
adc
repnz
add
mov
cmpsl
mov
lret
mov
jg
or
mov
in
cmp
xchg
punpckhwd
pop
repnz
lahf
xchg
mov
push
push
sahf
xchg
test
xchg
ja
cmc
cmp
mov
sub
push
pop
jns
mov
pop
stos
adc
sbb
test
in
xchg
sbb
nop
adc
fwait
stc
repz
mov
fadds
mov
and
mov
jg
cld
stc
or
add
adc
popl
in
lahf
aas
pop
push
insb
xchg
mov
xchg
push
fsubrp
test
xchg
lods
xchg
outsb
push
in
pop
jns
jl
aaa
push
stos
pop
push
in
push
in
inc
push
divps
xchg
fisttpll
test
call
jns
xchg
push
jne
loopne
adc
sub
sbb
xor
loopne
and
lahf
aas
dec
xchg
or
cmpsb
adc
cmovg
jns
popa
mov
cld
pop
rcll
xchg
add
lret
xchg
enter
push
inc
cmp
sub
sub
negb
adc
mov
shl
stos
adc
sbb
js
mov
xor
inc
pop
out
jmp
sub
mov
lret
in
jns
je
adc
xor
and
and
in
das
lahf
pushf
pop
jg
xchg
xchg
jge
xor
mov
jns
mov
adc
cld
fdivrl
mov
jns
fstl
lahf
dec
xor
leave
lds
imul
les
mov
aam
test
cld
mov
sbb
mov
add
or
mov
jns
sbb
mov
out
xor
insl
lret
ucomiss
xchg
pop
mov
out
cmp
pushf
pop
out
lahf
aas
es
pushf
and
or
push
push
mov
js
sbb
or
cmp
mov
lahf
aas
jg
xor
mov
xor
fidivl
jns
repnz
in
aam
jbe
sub
iret
add
mov
sbb
lcall
lahf
aas
jg
xchg
mov
test
test
dec
pop
cmp
icebp
in
iret
sub
je
stos
cmpsb
pop
js
sti
repnz
mov
cwtl
les
stc
lcall
push
fdivrp
push
and
dec
pop
pop
push
jg
dec
xor
aas
movb
mov
lahf
push
bound
repz
test
lods
dec
or
dec
jae
cld
xchg
cli
notl
sarb
fisttps
inc
add
in
aad
dec
fstpt
addr16
push
lock
repnz
arpl
int
or
out
push
cld
stc
xchg
mov
jmp
into
xchg
inc
in
jl
push
test
jg
xchg
repnz
fmull
xor
jmp
in
iret
aas
mov
pop
hlt
test
shr
add
jns
xchg
aas
andb
mov
loope
scas
mov
lret
push
dec
pop
cmp
mulb
xor
lahf
mov
cmpsl
lds
cmp
push
mov
mul
add
faddl
mov
fistpll
pop
ret
pop
dec
inc
mov
scas
insb
mov
arpl
xlat
das
scas
mov
and
das
add
push
icebp
ret
aas
jg
subb
sub
fildll
push
adc
repz
lahf
ret
dec
push
movsb
pop
jmp
std
xchg
aaa
js
sbb
es
es
in
mov
sub
dec
push
mov
mov
mov
jg
cld
stc
les
in
mov
xor
out
lahf
aas
insl
cmc
aam
add
icebp
sub
mov
rol
add
push
movsb
pushf
ss
enter
push
cmp
mov
lret
mov
mov
call
sub
scas
mov
xchg
xor
push
add
lret
lret
add
scas
decb
repnz
mov
addr16
or
pushl
jle
pop
aad
scas
loopne
iret
js,pn
rorl
iret
xchg
aas
sub
add
mov
and
ja
adc
outsb
iret
inc
pminub
fptan
lret
sbb
inc
inc
jg
xor
lods
mov
mov
sbb
mov
jbe
mov
cs
and
sarl
mov
repz
xchg
mov
xchg
sbb
adc
das
jg
cld
icebp
or
mov
cmpsb
movsl
jle
repnz
jg
cltd
jbe
pop
xor
scas
lock
out
jb
icebp
es
mov
lret
mov
add
out
loopw,pn
mov
scas
mov
adc
sti
cld
cmp
repnz
mov
xor
mov
rcrl
shll
xchg
sbb
sub
cmp
out
popf
imul
imul
pusha
test
mov
add
sbb
scas
mov
xor
gs
aaa
and
aad
nop
iret
push
mov
scas
pop
push
mov
scas
jecxz
xchg
jae
icebp
lcall
arpl
cwtl
aas
movsl
clc
adc
lock
in
pop
xchg
int
jp
out
mov
add
ss
and
adc
out
lahf
aas
mov
xor
push
xor
insb
pop
js
repz
xchg
add
inc
scas
cld
mov
in
mov
xor
push
pop
add
out
jl
mov
outsl
std
lcall
mov
lcall
stc
repz
lods
xchg
mov
sarb
daa
fs
mov
pop
jle
shlb
fidivrs
mov
pop
jns
xchg
out
js
jg
adc
adc
in
push
jecxz
sahf
jp
sbb
sti
pop
and
cmp
dec
lock
ds
push
lret
lock
lahf
aas
inc
sarl
sbb
xchg
cmpb
stc
repz
mov
sbb
pop
or
pop
pop
mov
mov
xchg
fpatan
out
lahf
ds
cmpsb
push
in
adc
mov
cld
stc
je
mov
test
in
jnp
jle
fbstp
lahf
aas
jb
jo
and
inc
rclb
cld
stc
repz
xchg
sbb
fiadds
das
aas
jg
mov
mov
adc
xchg
push
pop
jns
or
loop
inc
dec
xchg
hlt
sub
mov
in
adc
std
call
loop
cld
sbb
mov
out
push
int
push
fsubrs
pop
mov
iret
lahf
aas
jg
and
cmp
mov
push
cmp
cld
stc
repz
fiadds
test
in
xor
inc
das
mov
mov
adc
cmp
popa
push
aaa
pop
jns
xchg
insb
gs
push
or
cmp
in
and
push
fdivrp
sti
int3
xor
pop
stc
pop
stc
cli
adc
mov
addb
out
movsb
or
jb
dec
stc
pop
pop
rclb
jge
or
pop
jns
lret
out
hlt
in
mov
movq
push
je
das
push
pop
jns
in
mov
subb
xchg
outsl
icebp
scas
push
fdivs
jmp
cld
stc
test
jl
and
sbb
push
scas
sbb
mov
int3
jne
jmp
sbb
in
push
pop
xchg
lcall
add
push
pop
jns
sarl
and
scas
cmp
lret
lret
jg
mov
mov
mov
xlat
loop
fsubrl
cmovl
push
mov
mov
sahf
adc
pop
inc
rol
sbb
xchg
ret
scas
mov
mov
and
pop
mov
fdivr
out
shlb
or
lock
add
adc
push
or
jae
inc
jl
fdivrp
pop
lock
pop
pop
fwait
insb
aas
out
dec
aaa
fstp
das
push
push
fstpl
rcl
cmp
stc
and
lret
pop
negl
clc
lds
decb
cmp
fistps
ljmp
in
roll
outsl
sbb
push
loopne
lret
cmp
sub
in
or
call
jno
sbb
test
jns
xchg
push
lea
or
sbb
pop
test
sti
ss
pop
pop
sub
jns
aam
mov
xchg
jl
sbbb
inc
xor
aaa
icebp
lret
cmp
and
push
xlat
push
mov
aas
jg
cld
mov
cmp
fs
aas
ljmp
out
lahf
mov
repnz
mov
cld
stc
mov
sbb
mov
insb
or
stc
cmpsl
lahf
loope
cmpsb
mov
mov
xchg
push
fidivrs
lea
dec
outsl
or
movsl
mov
mov
in
pushf
iret
sub
and
iret
popf
pusha
lds
jns
xchg
push
mov
aas
rorl
in
test
in
push
pop
cld
xchg
mov
jle
mov
pop
jns
lcall
or
sbb
push
pop
jns
test
pop
pop
pop
in
scas
sub
xor
repnz
xorb
pushf
addr16
jns
sbb
pusha
outsl
or
xchg
jae
pop
imul
adc
out
mov
inc
cltd
dec
out
cmp
repz
nop
scas
adc
insl
sarb
aas
jg
cld
pop
lret
data16
inc
jno
movsb
loop
pop
test
repz
lahf
or
insl
add
xchg
test
mov
incb
mov
pop
repnz
aas
movsb
jl
jp
mov
sahf
rcrb
jle
jb
lds
cld
in
mov
stc
loop
repnz
cmovs
repnz
stos
inc
jae
ror
ds
jle
sbbb
adc
jl
mov
push
cmp
out
mov
pushf
mov
sub
stc
sub
mov
push
mov
xchg
gs
je
out
lds
lret
sub
cltd
xchg
in
mov
mul
dec
ds
push
dec
or
sbb
sahf
ret
push
das
xor
pop
cld
stc
repz
xor
fdiv
sbb
iret
lahf
aas
jg
or
jl
dec
pop
push
aas
mov
hlt
in
sbbb
mov
data16
stc
cld
popa
andb
adc
mov
pop
cmc
jno
mov
arpl
or
mov
sub
pop
sbb
inc
icebp
sti
adc
in
xlat
push
or
ljmp
shrl
xor
cld
ljmp
mov
mov
mull
mov
jecxz
repnz
stos
je
pushf
leave
scas
lahf
pop
loopne
ret
clc
repnz
sbb
dec
push
out
mov
xchg
je
dec
pop
jns
comiss
lcall
dec
movd
dec
cmc
jg
xor
inc
pop
sbb
adc
stos
mov
xchg
add
stc
cld
stc
repz
fdivrl
xlat
cwtl
rcll
add
xchg
lret
pop
out
jge
lret
push
mov
mov
pavgb
insb
push
inc
push
pop
fimull
movsl
das
scas
jp
int3
enter
fisubrs
xchg
aas
jg
sti
push
push
loopne
pop
pop
test
outsl
dec
ljmp
jns
sbb
das
adc
cld
stc
mov
xor
dec
mov
and
inc
dec
jo
mov
stc
aam
out
popa
adc
ja
mov
dec
xchg
mov
mov
mov
adc
ljmp
add
cld
dec
pop
mov
push
cmp
sbb
push
adc
jb
cli
inc
inc
cmc
sarb
push
cld
stc
repz
push
lds
repnz
test
push
daa
aas
jg
es
and
cmp
dec
inc
mov
cld
adc
fistps
push
push
mov
repnz
iret
aam
out
jmp
iret
movsb
xor
sbb
sti
dec
pop
dec
cmp
daa
cld
repnz
into
mov
cmpsb
or
repnz
mov
mov
dec
and
jg
jle
adc
jnp
push
inc
cmp
in
cmp
imul
cld
add
imulb
and
ror
lahf
aas
outsl
cmp
inc
sub
xor
mul
out
out
jmp
adc
cmp
incb
jb
cmpsb
pop
ds
push
aad
mov
das
adc
mov
test
cmp
pop
pop
pop
cwtl
setg
lods
pop
cmpsb
in
lret
sub
pop
fists
pop
int
sbb
testl
iret
fdivrs
lahf
aas
jg
push
inc
push
push
push
popl
movsl
mov
loopne
in
iret
pop
pushf
adcl
out
xor
repnz
mov
dec
lock
stc
lcall
push
pop
jns
adcb
sbb
in
mov
mov
cwtl
push
in
push
inc
aam
ljmp
lahf
pop
push
mov
gs
repz
leave
push
jb
xor
cmp
sub
mov
fcom
call
hlt
clc
in
mov
or
cmp
iret
sub
repnz
sbb
iret
push
xchg
sub
sbb
adc
lret
mov
xchg
xchg
jno
mov
in
dec
in
xchg
push
shrb
and
push
jo
cmp
and
lea
into
mov
jle
dec
roll
imul
in
sub
pop
pop
test
rcll
sbb
add
pop
clc
popf
leave
push
mov
stc
and
mov
nop
pushf
lds
sub
aas
jno
sti
icebp
jl
test
fdivrl
scas
mov
xor
or
cmpl
nop
fldenv
cltd
jnp
dec
jle
std
push
orl
lret
mov
xor
jle
cld
out
sarl
out
sub
subb
repnz
das
adc
mov
fisubs
sub
aaa
aad
fcomps
scas
mov
sbb
mov
cmp
fs
loop
aaa
mov
or
cld
stc
xor
out
add
int3
cwtl
xchg
nop
rclb
aad
lahf
aas
lret
loopne
mov
pop
lods
inc
scas
mov
insb
inc
push
cmp
and
out
das
sahf
iret
cmp
or
or
int
or
daa
jl
stc
fistpl
arpl
xor
ds
cld
stc
repz
cmpsb
jmp
push
addr16
ss
lahf
sub
out
insl
pop
cmc
xor
repz
sbb
repnz
jnp
adcb
test
or
loope
mov
movsb
outsl
fs
scas
jg
fmull
cld
stc
test
inc
xchg
sub
sti
xor
sti
out
lahf
aas
das
stos
cmpsl
sbb
aad
nop
and
cltd
into
clc
repnz
repz
mov
into
decl
mov
or
sub
sbb
pop
jns
xchg
loop
lcall
xchg
repnz
jns
xchg
push
sub
adc
sahf
and
inc
pop
mov
movsl
fcomps
sbb
jns
leave
scas
repz
lcall
fsts
pop
insl
lds
pop
pusha
ficoms
xchg
dec
sub
mov
insl
add
push
fistpll
insb
fildll
and
xchg
bound
mov
lret
push
and
lret
xchg
push
ret
xor
mov
lahf
ror
xchg
push
pop
cmpsl
pop
popa
cmp
sub
adc
sti
in
sub
iret
fisubs
repnz
leave
inc
cmc
cltd
out
lahf
mov
lret
arpl
imul
shrb
test
sbb
jle
inc
pop
push
xchg
inc
xchg
movsl
test
xchg
ja
lret
dec
stos
jns
and
inc
repz
lahf
mov
jno
push
inc
jle
push
jg
cld
stc
fdivs
xchg
dec
sbb
xchg
xor
push
iret
iret
lahf
aas
sahf
lock
repz
ret
stos
adc
div
in
es
call
out
mov
cmpl
cmp
repz
ret
ds
ss
xchg
leave
and
stc
fmulp
cmp
mov
push
jbe
sub
in
sub
dec
iret
lods
push
jns
mov
clc
xor
and
xchg
scas
jp
in
push
fimuls
or
inc
es
sarl
pop
pop
jns
pop
hlt
sbb
out
inc
in
lahf
pop
ds
pop
aad
xlat
push
jmp
iret
push
cmp
repnz
out
sub
pop
push
push
jge
aad
push
push
mov
idiv
cmpl
jecxz
mov
imul
lahf
bound
loopne
sbb
mov
jmp
outsl
fdivrl
sar
aad
xor
cmp
lds
cmp
pop
ds
sbb
push
jno
xchg
sahf
cmp
test
lahf
cs
lods
in
lods
nop
fildll
arpl
jle
sbb
or
scas
mov
sti
lods
out
aas
icebp
in
addb
sub
xor
test
push
mov
pop
jns
xchg
pop
jns
sub
cmc
pop
mov
int3
mov
xchg
jg
mov
into
xor
iret
lahf
cmpb
dec
test
or
por
pop
test
cld
stc
repz
push
mov
icebp
cmp
mov
or
xchg
aas
jg
js
cmp
cmc
adcb
lret
sbb
iret
sahf
dec
inc
das
lahf
aas
mov
jl
lock
cmp
repz
ret
scas
call
xchg
test
in
lcall
stc
insl
xorl
imul
repz
push
into
lret
in
xchg
mov
imul
lods
orl
xlat
dec
out
lahf
aas
mov
test
xor
jns
enter
sarb
lcall
in
push
pop
jl
inc
movsb
sbb
int
jns
xlat
out
inc
push
pop
fistpll
fisttpl
push
fisubrs
fdivrl
push
mov
das
push
pop
jns
adc
or
mov
mov
rclb
dec
andb
mov
mov
push
dec
push
sahf
xchg
jp
rep
int3
xor
jnp
or
jg
cld
push
push
negl
icebp
dec
leave
pop
repnz
lahf
leave
adc
iret
mov
outsl
lea
lret
cmc
aas
popf
iret
test
loopne
ljmp
repnz
mov
add
lret
fnsave
scas
mov
stc
repnz
inc
add
jle
ja
xchg
sub
cld
neg
xor
jnp
lahf
pop
jns
xchg
aas
lea
xchg
and
in
popa
jns
xchg
push
or
dec
aas
mov
enter
push
pop
lcall
mov
push
fidivrs
fidivrl
gs
xchg
cli
mov
lahf
icebp
in
xchg
sbb
add
push
stos
shr
test
loopne
in
stos
add
in
iret
popa
nop
mov
icebp
ret
dec
lock
andl
mov
iret
lahf
aas
ret
sub
push
xor
repz
dec
xor
push
test
lock
pushf
lahf
aas
jg
add
je
or
outsb
mov
popl
jmp
mov
push
in
sub
repz
lahf
ret
xchg
out
arpl
cmp
xor
push
cmp
lock
mov
out
scas
push
test
dec
cli
mov
add
adc
jmp
add
jecxz
in
repz
fnstcw
sub
jnp
cmp
xchg
in
jle
std
movsb
cli
cld
aaa
mov
and
das
gs
outsl
pop
xchg
lret
mov
xchg
push
pop
jns
inc
ds
andb
test
and
push
pop
push
pop
jns
push
mov
jl
or
lods
mov
aaa
cmc
in
adc
cmp
enter
xor
push
insl
jle
cmp
in
dec
pop
loope
push
adc
lods
xchg
mov
xchg
fs
andb
lret
lock
dec
outsl
xor
es
mov
adc
inc
push
shrb
jns
inc
faddp
cwtl
gs
jbe
sub
inc
bnd
nop
push
divl
rcll
xor
cmp
jns
mov
and
stos
jne
movsl
mov
das
lock
lock
test
lret
or
sub
mov
cltd
jno
jbe
jb
xchg
push
dec
fistpll
adc
mov
cmp
add
sbb
xchg
xchg
push
repnz
movsb
jae
outsl
hlt
pop
fbstp
ljmp
lds
ja
fimull
or
dec
push
inc
or
in
das
mov
imul
and
call
gs
dec
xchg
dec
adc
ret
pop
outsb
les
aas
sbb
std
lahf
out
test
lret
xchg
ja
push
rcr
cmp
icebp
pop
cmovnp
jns
fldl
pop
xchg
mov
dec
mov
xlat
mov
fisttps
adc
xor
mov
fstpl
inc
fidivrl
jg
add
inc
outsl
repz
mov
push
iret
xchg
pop
lods
lahf
aas
jg
dec
imul
fisubl
add
stc
repz
test
mov
jge
push
int3
sub
xor
jg
cld
pushf
ljmp
ja
inc
testl
iret
lahf
scas
stos
lcall
jmp
in
mov
stc
mov
inc
stc
xchg
repz
in
in
push
lea
insl
in
or
bound
push
pop
jns
push
mov
in
mov
dec
mov
jns
gs
jmp
lret
or
in
imul
sbb
pop
jns
xchg
fstl
push
adc
and
mov
imul
dec
inc
int3
cmp
dec
push
push
out
lahf
aas
imul
pop
xor
or
inc
cmpsl
and
in
dec
adc
rcr
pusha
mov
add
lret
inc
ds
mov
stc
repz
push
jg
mov
ret
mov
push
mov
fidivs
data16
iret
mov
repnz
add
nop
mov
xor
lret
pop
mov
push
or
mov
loope
xor
outsl
mov
inc
mov
cld
stc
xchg
mov
sub
add
lret
dec
cmp
movsb
and
jne
out
repz
rcll
mov
stos
mov
test
mov
push
fnstenv
sbb
mov
mov
pushl
lea
scas
mov
pop
mov
jnp
fcomp
test
mov
xor
mov
aas
adcb
lret
dec
in
popf
imul
fwait
xor
sbb
mov
xor
addb
scas
mov
hlt
mov
or
repnz
lret
cmp
in
or
das
mull
clc
scas
insb
lret
cmp
das
adc
jg
mov
jge
or
das
cmp
jno
scas
inc
mov
sub
jmp
ja
ja
push
fidivs
subb
scas
mov
jns
out
pop
clc
dec
add
ds
mov
mov
pop
cmpsl
jg
shll
sbb
mov
loope
fildll
mov
cld
cmpl
repz
fcmovne
lahf
aas
jg
add
fmulp
iret
cmp
jmp
mov
repz
shl
xor
sub
and
mov
push
fidivrs
sbb
in
int
jo
sub
jns
daa
fidivrl
mov
addr16
lea
pop
mov
hlt
in
arpl
les
mov
ja
scas
mov
stos
mov
lcall
cwtl
xchg
mov
repnz
or
or
jl
jg
cld
mov
loop
cmp
andb
outsb
or
scas
jb
repnz
jg
mov
and
aad
test
lret
sub
std
sub
jp
pop
ret
push
scas
dec
outsl
js
add
das
scas
mov
adc
mov
repnz
iret
mov
dec
mov
imull
xor
jg
mov
add
addr16
in
lret
lahf
push
xor
dec
cmp
mov
data16
jns
mov
cmp
jl
in
fistl
jns
fistl
mov
and
fiadds
cmpsb
add
or
addr16
es
xchg
int
or
jne
inc
ffreep
pop
shl
movsbl
xor
and
or
fisubs
mov
jns
xor
push
xchg
mov
dec
jmp
xor
addr16
leave
sahf
jg
cld
stc
or
shlb
mov
mov
dec
inc
cmpsb
xchg
in
lahf
aas
and
cwtl
jae
inc
lods
jo
xchg
add
pop
aam
pop
push
shl
jmp
mov
sub
aas
aas
xor
sub
mov
jle
cld
andb
test
inc
xchg
push
iret
lahf
aas
jg
inc
sub
adc
cld
or
jns
lret
out
cwtl
sahf
fisttpl
ud2
mov
lahf
mov
pop
movsb
test
sbb
daa
adc
jns
loope
add
ret
mov
cmp
xchg
inc
pop
addl
das
aas
jg
mov
inc
pop
mov
xor
pushf
pop
jns
jg
call
push
jmp
out
xchg
inc
or
push
push
adc
icebp
pushf
fiaddl
xchg
aas
jg
or
and
xor
stc
xchg
cmc
adc
pop
std
cmp
mov
jg
cld
test
pop
test
xchg
cmp
in
ja
imul
xchg
mov
cmp
cmp
and
jg
repz
mov
add
loope
push
xor
dec
add
pop
fbstp
dec
mov
cmp
cld
stc
movsb
sub
sub
mov
fistpl
push
sarl
adc
xchg
jecxz
push
jge
in
push
pop
jne
jns
orb
lret
cmc
test
push
pop
jns
mov
push
xchg
cwtl
shr
push
pop
jns
sbb
outsb
stos
mov
sbb
int
jb
in
ds
mov
cmp
loop
cli
mov
xchg
jbe
cld
stc
repz
pop
mov
xlat
das
ret
cld
inc
pop
jns
jae
iret
add
insl
faddp
mov
out
lods
mov
je
cmp
pop
aas
push
rcl
lret
iret
pusha
rolb
xchg
inc
push
sbb
in
lret
aas
jg
cld
fs
mov
jbe
mov
push
jns
cld
repz
lahf
stc
je
aaa
in
xchg
pop
inc
sbb
cld
cld
stc
ljmp
mov
push
and
jle
into
push
data16
xchg
insb
aaa
pop
jns
xchg
aas
pop
sbb
mov
adc
adc
enter
xchg
push
cmpsb
fsubrs
pop
dec
out
iret
andb
inc
mov
mov
inc
fdivrl
rclb
lret
jmp
ficoml
in
out
dec
in
stc
sbb
jne
mov
clc
sub
test
aas
jo
repz
lods
movsb
bound
sbb
lea
aas
jg
cld
cmp
jnp
rorl
mov
in
lret
lahf
jbe
fs
bswap
add
cmp
push
pop
jns
push
lea
dec
dec
and
enter
pop
jns
mov
jmp
push
pop
mov
add
das
jg
imulb
pop
dec
rclb
add
xchg
push
pop
jns
xchg
mov
mov
popa
bound
in
xchg
or
subl
mov
in
push
daa
nop
ds
pop
mov
mov
mov
pushf
or
outsl
scas
adc
imul
movsl
xor
xchg
ja
jg
sbb
das
sub
sub
and
jns
ret
movsb
jecxz
cwtl
and
and
adc
in
shrb
mov
idiv
fwait
pop
ja
in
push
xchg
mov
adc
fcoms
mov
pop
pop
hlt
mov
pop
lods
cmpl
iret
mov
lret
out
lahf
adc
inc
push
xor
mov
jp
xchg
sub
lock
mov
xorl
sub
mov
add
pop
jae
lret
call
cld
pop
xor
loopne
inc
lret
pop
dec
jmp
mov
mov
mov
pop
jns
jle
push
clc
inc
dec
inc
xchg
in
insb
jb
fstp
lcall
scas
push
push
jecxz
cld
ret
arpl
lcall
fiadds
cld
outsb
jo
xchg
mov
call
mov
out
mov
dec
mov
pop
jns
pushf
insb
pushf
lahf
fstpl
pop
sbb
js
inc
cmc
out
in
mov
cli
sbb
xchg
je
cld
stc
aaa
into
or
jp
int3
std
push
add
lods
pop
cmp
das
in
push
jecxz
iret
out
cli
jno
in
pop
xchg
mov
push
cld
stc
repz
mov
clc
push
mov
jg
jl
mov
lock
lret
orb
lret
inc
xchg
push
mov
test
sub
sarb
cmp
clc
repnz
mov
sub
daa
mov
outsb
scas
daa
hlt
lret
out
shlb
sbb
jge
mov
test
fnsave
ja
jle
push
sbb
gs
adc
xchg
insl
pop
sub
mov
int3
or
lahf
rcrb
push
sarb
int3
in
push
fmulp
fbld
mov
xchg
push
pop
jns
insl
sub
mov
add
xor
jns
popf
mov
int
xchg
sub
jae
repz
out
push
sub
scas
cmp
ja
loopne
mov
lds
adc
rcr
pop
repz
lahf
loop
push
add
movsb
idivb
repnz
mov
int
sahf
out
iret
lahf
hlt
lret
sub
aad
das
jp
fs
dec
mov
repnz
xchg
stos
mov
stc
ret
fnstcw
push
stos
pop
pop
pop
fdivs
aas
jg
jle
pop
in
add
in
adc
mov
out
xor
insl
and
mov
xchg
sub
push
mov
repz
pop
scas
mov
add
fs
and
xor
inc
test
pop
xchg
jg
aas
jg
mul
inc
jg
sti
mov
push
mov
lods
and
out
xchg
mov
mov
add
mov
aas
sub
mov
xchg
push
xchg
fcmovnu
or
mov
jg
cld
stc
loope
inc
in
in
xorl
imul
and
cmp
mov
jg
xchg
outsb
pop
xor
imul
iret
push
jle
sub
jp
pop
lret
mov
jmp
xlat
mov
xchg
cld
jb
mov
in
or
outsb
xchg
dec
mov
push
mov
loop
mov
ja
mov
sub
iret
das
loop
dec
pop
mov
je
mov
dec
jg
push
nop
mov
cmc
push
stc
repz
push
sub
fs
fs
mov
mov
sub
pop
sub
daa
ja
mov
xchg
xchg
inc
mov
hlt
sahf
in
lods
pop
scas
push
hlt
sbb
cmpsb
mov
out
mov
push
lock
pop
adc
pushf
sub
insl
iret
lahf
jg
ds
setp
or
xchg
jg
in
out
call
out
imul
cld
or
mov
mov
sbb
jg
sti
loopne
stc
pop
cmc
iret
imul
movsb
inc
mov
and
notl
movsb
fdivr
add
shrl
push
pop
jns
lds
popa
cmp
adc
push
pop
jns
or
sbbl
push
movsb
pop
jns
xchg
add
sbb
push
sbb
call
lret
xchg
push
lock
mov
outsb
or
aas
iret
inc
cmp
inc
test
lret
xchg
outsl
int
push
outsl
pop
xor
ja
lret
pop
inc
aad
sub
outsb
dec
adc
push
out
mov
xorb
mov
lahf
mov
adc
insb
cwtl
mov
nop
xchg
hlt
lods
push
lock
shlb
sub
xor
mov
jp
inc
arpl
shr
and
and
mov
mov
jno
mov
dec
rolb
sbbb
dec
fcompl
jmp
cmpsb
xchg
lahf
aas
jg
cli
dec
adcb
pop
pop
mov
fnsave
pop
mov
les
lret
jge
mov
aam
iret
mov
sub
and
mov
jp
or
or
fisttpll
jg
cld
ret
in
mov
hlt
mov
or
rcrl
out
lahf
or
jl
arpl
mov
aas
icebp
testl
push
adc
inc
or
insl
xchg
std
cmpsb
out
push
or
mov
push
mov
push
add
fsubp
punpckhbw
mov
add
stc
repz
je
movl
xchg
push
iret
mov
pop
or
sub
stc
repz
call
into
mov
shll
lahf
aas
jg
dec
sbb
mov
mov
test
jno
repz
ds
jb
xchg
je
pop
push
test
aaa
mov
stc
mov
adc
mov
test
test
mov
ss
cmpsb
dec
aad
loop
out
lahf
aas
outsb
loopne
mov
fisubrs
aas
cld
stc
repz
xchg
or
push
scas
into
cli
dec
mov
pop
xor
lahf
aas
jg
and
or
mov
repz
es
rcrl
sti
pop
data16
or
pop
xchg
aas
jg
adc
adc
mov
push
pushl
jae
repz
pop
mov
jns
jle
fstpl
pop
jl
stc
repz
cmpsl
push
cltd
xor
pop
enter
mov
repz
inc
and
lahf
bound
aam
jns
xchg
imul
jle
and
fcoms
pop
or
jnp
cltd
and
repnz
sbb
xchg
scas
dec
icebp
add
lret
push
sbb
jl
cld
sahf
jp
shl
inc
dec
mov
sbb
outsl
xchg
mov
dec
inc
mov
nop
sub
daa
jne
pop
xor
push
xor
jg
cld
stc
inc
inc
mov
sub
shl
jle
and
stos
lret
iret
lahf
aas
xchg
stos
mov
insb
lret
lret
repnz
jle
stos
lahf
mov
inc
adc
mov
repnz
and
xchg
adc
das
sub
jmp
call
inc
adc
dec
loope
sarb
mov
arpl
das
int3
sahf
cmp
ljmp
cmpsl
lds
iret
lahf
aas
fs
shll
xchg
adc
cld
stc
repz
sub
add
sahf
pusha
pop
pop
push
pop
jle
pop
mov
or
iret
lahf
jg
mov
outsb
cli
clc
stc
stc
mov
sahf
dec
push
iret
call
gs
addr16
dec
stos
dec
aad
rcrb
pop
popa
mov
loop
pusha
mov
aam
fmul
ja
pop
jns
push
test
mov
outsl
ror
pop
jns
xchg
add
dec
pop
sub
jnp
dec
or
sbbb
lret
jg
repnz
cmc
sbb
das
das
shrl
in
inc
push
and
cmp
push
adc
call
inc
jmp
sub
xchg
in
or
jg
stc
xor
repnz
stos
jg
incb
jle
into
mov
push
ficomps
pop
es
lret
push
sahf
pop
jns
xchg
adc
xor
xchg
push
mov
jle
lods
mov
lret
mov
addl
aas
decl
mov
mov
in
jne
xor
cltd
outsl
out
lahf
aas
sub
cld
stc
repz
jbe
cltd
dec
lahf
adc
sbb
adc
sub
jg
sub
and
inc
scas
fidivrl
mov
jecxz
fistpll
mov
mov
dec
lcall
xchg
iret
lahf
aas
fcoms
mov
jb
and
aas
xchg
push
push
ljmp
repz
jo
mov
sub
imul
sbb
or
xlat
sub
iret
mov
or
mov
dec
scas
mov
adc
mov
sbbb
jge
cmpb
lret
pop
add
mov
adc
mov
dec
pop
cmp
xor
in
xor
nop
pop
pop
out
notb
lahf
aas
pop
pop
dec
stc
leave
mov
es
repz
shlb
loop
gs
idivl
cld
stc
in
mov
mov
roll
jbe
mov
rol
das
lahf
aas
jge
jne
sub
inc
cmpsb
and
in
pop
into
jle
add
fnstcw
mov
lret
jb
or
push
adc
pop
out
xchg
ljmp
mov
sub
inc
pop
jge
lahf
aas
aas
scas
mov
lret
fdivl
cwtl
sub
repz
loope
mov
lret
ret
jg
cld
stc
ljmp
jl
sub
cli
pop
jg
fistpl
add
movsb
lcall
vmread
loop
iret
lahf
inc
int3
fbstp
leave
test
mov
jg
inc
jle
cmp
pop
dec
aad
lret
xchg
out
lahf
sbb
rcrl
cmovge
ja
shr
inc
std
mov
or
in
adc
jo
cwtl
sbb
push
xor
add
xchg
ja
out
andb
sub
xchg
jle
jge
dec
mov
pop
stc
add
xchg
cmp
lahf
aas
jg
ljmp
adc
mov
sbb
hlt
lret
out
sub
and
jno
jnp
pop
mov
scas
inc
out
and
fisubrs
les
stos
lcall
push
or
das
inc
xchg
insb
xchg
in
push
pop
mov
fstpt
arpl
into
popf
inc
xor
popf
or
cmp
rolb
dec
and
or
pop
adc
ljmp
mov
insl
mov
aas
sbb
cmp
jp
xlat
lret
stc
dec
cld
push
cli
in
jnp
fiadds
add
push
lds
ficoml
icebp
add
movsl
pop
jle
mov
sbb
repnz
incl
shrl
xor
jns
popf
loop
repnz
repz
xchg
push
pop
and
out
out
daa
aam
add
das
push
pop
jns
push
sarb
dec
push
lahf
ret
movsl
outsb
pop
ja
out
inc
pop
cmc
icebp
in
cmp
scas
das
or
jmp
lret
mov
lock
jl
mov
repnz
jl
mov
outsb
leave
insl
jle
sub
and
shrb
and
repnz
les
adc
mov
mov
mov
rclb
stc
punpckhbw
pushf
sbb
or
subb
enter
jle
and
mov
xlat
dec
mov
movsb
mov
in
sub
fs
or
fbld
push
clc
cmpsl
lea
into
jno
push
in
xchg
lahf
dec
cwtl
jge
scas
inc
aas
mov
stos
add
pop
inc
pop
add
mov
aam
cmp
pop
pop
jns
loope
mov
push
push
xchg
cmp
out
cmp
clc
add
xor
jg
jle
enter
adc
mov
pop
jle
das
stos
mov
daa
sti
in
mov
lods
xor
xchg
les
inc
pop
iret
lret
sub
push
stos
dec
lret
xor
scas
scas
mov
and
cmp
je
outsb
jg
and
cmp
repnz
sbb
ds
jo
push
pushl
stc
mov
cld
daa
cli
dec
out
xchg
iret
lahf
ror
mov
mov
inc
cmpsb
inc
idivl
loopne
in
jge
in
pop
mov
xor
scas
mov
xchg
stos
push
pop
pop
xchg
jno
sbb
lret
and
pusha
mov
mov
in
add
push
mov
lret
inc
jl
repnz
int3
push
scas
out
aam
cs
ret
jge
mov
inc
iret
sub
out
ret
scas
sarb
into
pop
jg
cld
stc
cmp
pop
mov
pop
xchg
shrl
outsl
mov
pop
jle
clc
scas
movsb
xchg
aas
sub
mov
repz
inc
jo
mov
mov
das
cltd
aaa
ffreep
jg
in
or
mov
repnz
xchg
ds
cwtl
sbb
adc
xchg
pushf
lret
mov
out
pop
in
inc
cmp
das
scas
mov
fstpt
and
loopne
cmc
cli
in
mov
daa
cmc
inc
lods
cmp
jge
lcall
xor
push
pusha
stc
jle
ret
jl
rclb
jg
sub
pop
outsl
test
in
jg
outsl
mov
dec
sbb
mov
stc
pop
je
jl
push
fs
pop
mov
and
adc
rorb
mov
jge
fbld
stc
aas
jg
cld
cmp
aad
shrb
xor
adc
lret
out
lahf
xchg
adc
dec
xorl
sub
mov
sti
int
scas
or
push
cs
sub
pop
scas
add
xchg
lret
mov
cmpsb
mov
imul
dec
xchg
mov
in
in
mov
lahf
push
mov
popa
push
pop
jns
sub
mov
inc
jbe
fwait
push
in
rcr
dec
xor
out
mov
loop
cmovg
push
loope
cmp
adc
les
lods
adc
mov
repz
outsl
pop
jns
mov
mov
inc
pusha
lock
inc
jo
incl
repnz
bnd
cmp
imul
mov
scas
out
sbb
ret
jle
push
ljmp
xor
xlat
divl
stc
repz
lods
dec
shrb
xchg
xor
aas
jg
outsl
lds
pop
scas
dec
inc
in
xor
addl
jge
stc
shll
or
inc
lahf
aas
jg
into
sbb
stc
shlb
jecxz
inc
dec
out
xchg
out
mov
cld
stc
repz
leave
cmp
sub
inc
mov
mov
out
dec
adc
nop
inc
xor
dec
fistpl
icebp
jg
lahf
aas
jg
inc
idivl
xor
push
cli
ds
dec
aas
ret
repz
or
push
xor
mov
xchg
jg,pt
cld
aad
push
sbb
mov
jmp
sbb
mov
and
arpl
pop
inc
xor
iret
cvtps2pi
dec
pop
push
or
sub
mov
clc
enter
xchg
inc
out
push
pop
scas
mov
stos
fbstp
in
movsb
movsl
lahf
push
pop
jns
out
orb
cmp
loopne
fidivl
das
shrb
mov
das
mov
and
pop
test
push
adc
inc
cmp
psrad
scas
inc
inc
inc
pushl
adc
and
lds
sub
stc
fpatan
push
adc
stc
jp
mov
pop
mov
push
dec
fsubp
sahf
loop
sarb
lret
xchg
push
xchg
dec
xchg
dec
andl
mov
dec
sub
fistpll
movsl
getsec
pop
sti
and
pop
out
sahf
rclb
lret
lret
push
aad
push
sub
mov
in
das
scas
mov
cwtl
xor
mov
mov
loopne
repnz
mov
jb
int
xchg
mov
jecxz
sub
int
data16
cld
jo
cli
in
imul
sub
scas
sbb
xchg
jg
cld
sarl
adc
push
shlb
hlt
lea
aas
es
outsl
scas
dec
jp
sub
dec
ja
fdivr
jbe
or
sti
pop
xor
cld
adc
fsub
bsf
pop
loope
xor
sub
jle
mov
jmp
push
xchg
and
mov
xor
or
inc
das
mov
mov
sub
fucompp
enter
inc
loope
mov
dec
xchg
or
insb
iret
push
lahf
pop
or
cmc
in
sahf
sahf
cmpsb
cmpl
rclb
outsb
xchg
inc
std
pop
sub
icebp
repnz
out
pop
xchg
ret
rorb
ljmp
sub
pop
inc
mov
jns
ljmp
aam
fistl
in
and
jns
pop
enter
mov
xor
lea
xchg
push
pop
cmpsb
scas
mov
mov
ja
dec
jg
xchg
test
pop
into
xor
inc
inc
cld
shlb
aam
sbb
jg
ljmp
pop
inc
or
repnz
out
adc
mov
dec
cld
add
jbe
xchg
pushf
in
sahf
jg
cld
stc
imul
scas
push
fmull
and
mov
push
mov
call
cmp
sbb
dec
push
sar
repz
cwtl
popa
mov
outsl
xchg
mov
int3
push
mov
inc
mov
cli
or
jg,pt
cld
stc
sub
mov
and
mov
leave
les
xchg
lahf
aas
flds
adc
sub
sub
das
movsb
pop
ucomiss
xor
add
inc
pop
or
mov
pop
inc
cld
stc
repz
pop
xchg
shlb
sub
lahf
aas
jg
movsl
scas
popf
movb
cmp
jecxz
iret
mov
push
cmc
idivl
outsb
dec
mov
in
lahf
xchg
not
cmp
cmpsl
mov
or
stos
and
scas
insl
cld
repnz
daa
aam
mov
lret
lcall
jle
and
jb
popf
mov
xchg
cmp
in
ja
xor
ja
in
fs
cmp
xchg
push
pop
loopne
lds
push
int
adc
push
pop
jns
loopne
mov
mov
js
push
pop
jns
dec
push
roll
imulb
sbb
xchg
jae
sahf
cli
jb
xchg
pusha
loope
sub
mov
jno
imul
cmp
fstpt
mul
iret
lahf
aas
jg
lds
jge
sbb
repz
loop
adc
ljmp
jmp
loopne
mov
movsb
out
lcall
mov
es
and
repz
std
iret
loop
fcmovu
arpl
orb
cld
cld
frstpm(287
frstor
pop
mov
jg
fildll
subl
roll
xchg
push
test
dec
ret
push
mov
repnz
repz
data16
ja
jns
jnp
lret
cld
sti
int3
js
iret
jmp
pop
cmp
sarb
jg
insl
ds
jecxz
movsb
xor
call
pop
addr16
test
pushf
push
cmp
hlt
jbe
inc
push
mov
sub
dec
xchg
or
xchg
iret
lahf
aas
mov
mov
das
iret
lahf
jg
or
xchg
stos
sub
inc
cwtl
cld
stc
repz
jge
mov
in
imul
dec
mov
push
sub
lea
sbb
mov
adc
hlt
and
hlt
cmp
scas
mov
push
mov
dec
mov
jmp
lret
dec
popf
cs
cld
stc
add
fimuls
adc
movsl
rcll
lock
jo
sub
in
lahf
in
mov
mov
pop
sub
pop
jns
into
scas
shll
adc
std
mov
or
pop
mov
fistpll
mov
dec
jg
mov
sbb
mov
das
mov
push
sub
aas
mov
or
js
hlt
and
ds
cld
stc
repz
nop
inc
fwait
add
out
sub
aas
jg
push
lds
mov
mov
je
pop
test
mov
movsl
inc
into
bound
push
sub
andb
iret
lahf
aas
sbb
outsb
dec
js
loopne
std
repnz
repz
lds
xchg
push
ficomps
popa
aad
pop
adc
in
lahf
mov
adc
xchg
sub
adc
dec
mov
cmp
xchg
pop
lock
xchg
mov
stc
repz
dec
jbe
hlt
incb
aas
jg
inc
out
add
pop
jl
or
inc
in
iret
lahf
and
gs
addb
lret
icebp
jle
push
jg
shlb
lods
scas
jne
aaa
add
mov
mov
dec
out
xchg
mov
aas
mov
loopne
shrl
test
dec
repnz
int3
arpl
jnp
sub
test
lock
andb
scas
mov
inc
into
xor
ret
add
mov
sub
push
imul
outsl
sub
les
imul
out
adc
out
jmp
dec
add
jae
call
dec
pop
or
mov
jns
mov
movntps
jge
das
iret
and
repnz
lret
sub
mov
fadds
mov
inc
cmp
mov
out
pop
incb
inc
mov
stc
xchg
cmc
mov
dec
enter
test
aas
jg
jp
je
jns
inc
push
into
dec
aas
jge
add
or
mov
repz
dec
sub
cmpb
pushf
aas
aas
cmpb
aas
push
dec
xchg
fistpl
lret
out
lahf
out
insl
inc
xchg
adc
jns
pop
jns
jecxz
js
pop
xchg
push
xor
xchg
or
sarb
or
jb
xchg
loopne
sub
xchg
repz
jnp
mov
mov
jg
or
and
jnp
fs
lahf
aas
sbb
mov
je
jl
stc
repz
loop
in
adc
nop
sbb
mov
testb
stc
mov
sbb
push
pop
jns
xchg
push
and
loope
fadd
das
lock
xchg
xchg
inc
cmp
mov
nop
push
mov
out
xchg
push
cwtl
cmp
ficoml
add
pop
cld
rorl
xchg
jae
lcall
je
repnz
sub
adc
enter
jge
lret
jle
or
xchg
aas
sbb
lahf
mov
sub
jge
call
mov
scas
mov
inc
lods
sub
pushf
movsb
outsb
out
repnz
shrb
negb
jg
jle
mov
orb
sub
cmp
in
out
lret
jns
and
daa
fbstp
outsb
cld
cld
jno
cmpsb
cmp
pop
dec
movsb
or
xchg
ja
jl
sbb
xor
cmc
jnp
push
and
inc
sub
data16
dec
xchg
fnsave
mov
test
inc
dec
xchg
push
pop
jns
sahf
shlb
jne
sbb
orb
xchg
ds
lret
pop
subl
add
xchg
push
faddl
hlt
push
or
in
mov
mov
jo,pn
adc
push
mov
lret
mov
pop
jp
inc
mov
sub
dec
das
scas
mov
add
mov
rcrb
cltd
pop
out
mov
or
mov
movsb
shrb
call
xor
lret
xchg
cmp
sub
cmp
ds
divl
ja
int
and
add
test
mov
jle
mov
push
mov
inc
je
sbb
out
push
xchg
dec
lods
test
scas
mov
lahf
ret
sub
inc
add
pop
mov
out
dec
jecxz
mov
out
xchg
lret
iret
dec
mov
stos
inc
out
xchg
insl
adc
scas
mov
cmp
movsb
mov
push
mov
sub
popl
mov
lret
out
pop
mov
iret
sti
fmulp
dec
cld
adc
repnz
stos
ss
fcomps
jg
ficomps
inc
jns
push
test
and
das
mov
push
push
cmpsb
out
ror
jmp
lea
repz
ret
pop
icebp
ljmp
and
cmp
stc
enter
lahf
xor
xor
scas
mov
mov
mov
xchg
fwait
jns
push
mov
lret
cmc
or
je
push
push
mov
dec
pop
push
xchg
insb
enter
push
jle
repnz
push
adc
cltd
inc
and
das
aas
es
xor
sub
iret
lahf
pop
adc
adc
mov
dec
jecxz
inc
sub
cmp
jg
cld
stc
mov
aam
lods
in
neg
jne
mov
pop
jo
jg
push
mov
loopne
jb
in
xor
and
mov
mov
lock
pop
ds
dec
cmp
inc
outsb
enter
out
sub
lea
jg
cld
stc
repnz
mov
aaa
or
mov
aas
test
cmc
repnz
pop
clc
jge
stc
idiv
repnz
pop
cltd
imul
cli
jmp
pop
es
sti
iret
scas
aaa
inc
lret
push
iret
lahf
aas
aas
mov
fsubs
adc
out
enter
jp
dec
jno
push
sub
mov
in
push
aaa
mov
dec
mov
shlb
jecxz
idivl
cld
stc
repz
enter
add
push
lods
mov
lret
cmp
mov
out
mov
inc
fists
jno
pop
cld
cld
stc
repz
repnz
cltd
les
dec
ret
mov
clc
mov
dec
mov
lahf
aas
mov
stos
jecxz
cmpsl
jne
mov
repz
sub
test
xchg
out
fisubs
fs
jg
cld
sub
sbb
mov
cmpsl
movsb
lods
fwait
jno
repz
lahf
gs
xor
cwtl
and
adc
cld
stc
incl
lahf
cmpsl
xor
push
pop
inc
jge
das
aas
adc
ds
pop
ljmp
cmpb
repnz
push
imul
push
cmc
adc
lret
sub
nop
dec
in
addb
scas
scas
mov
mov
xchg
pop
jg
cld
ret
mov
or
std
dec
jecxz
je
nop
repnz
ds
xchg
mov
push
and
and
sti
pop
fisubs
jg
mov
cld
sti
jb
rorl
scas
xchg
je
out
imul
jle
cs
mov
pop
jge
iret
pop
movsl
pop
mov
cmc
mov
jle
add
repz
jne
cmpsl
xchg
sub
sub
sbb
lea
sbb
mov
xor
lds
pop
dec
repz
pop
push
movswl
aaa
lahf
ret
cs
iret
out
fildll
mov
push
pusha
insb
loop
inc
lahf
push
pop
jns
push
mov
pop
ljmp
in
pop
jnp
sub
lods
jnp
roll
cmp
fstl
es
jae
call
scas
pop
push
pop
jns
outsl
add
std
orb
nop
outsb
and
in
sub
dec
scas
sbb
xchg
xor
in
push
jmp
fsubs
push
stc
rorb
ds
cld
stc
mov
sub
mulb
fs
ja
jg
mov
xor
insb
mov
das
std
jb
jo
adc
orl
testl
mov
jae
push
pop
pop
js
das
lahf
aas
jg
repz
jns
fnstsw
mov
mov
addr16
xchg
das
push
pop
daa
xchg
in
jl
repz
nop
fsts
mov
cs
or
jle
push
mov
jg
cld
mov
aam
xor
stos
inc
dec
mov
cmpss
nop
inc
bound
mov
ds
lods
adc
or
and
and
stos
dec
outsl
aaa
std
and
mov
nop
cwtl
and
scas
mov
or
jl
xchg
iret
lahf
jg
rorb
push
clc
popa
cmp
adc
stc
repz
cltd
div
jne
xor
push
sub
push
adc
sbb
cwtl
sub
lret
push
cmpl
iret
lahf
jg
aaa
imul
out
rorb
mov
xchg
cld
mov
inc
mov
bound
movsl
pop
jg,pt
aaa
xchg
insb
adc
in
das
mov
hlt
push
out
loopne
cld
stc
rep
dec
inc
stc
mov
xor
mov
comiss
jp
into
dec
movswl
xor
xchg
sbb
xor
and
jg
cld
stc
inc
cmc
lock
adcb
lcall
iret
lahf
aas
xchg
lret
cs
pusha
pusha
dec
jae
dec
in
imul
and
scas
mov
mov
jg
mov
sub
int3
data16
push
std
insl
mov
sahf
pop
inc
orl
mov
push
push
lret
popa
movsb
idivb
out
lahf
aas
sbb
push
scas
mov
pop
jns
lret
jae
add
mov
les
fists
mov
mov
pop
insl
std
fwait
movups
pop
gs
sub
push
cmpsb
jle
repnz
or
gs
xor
inc
adc
lahf
aas
jg
outsb
jecxz
imul
pop
in
xchg
repz
and
jge
repz
mov
jle
and
jne
ds
cld
sbb
inc
dec
daa
dec
fwait
xor
iret
lahf
aas
jg
xor
das
sub
scas
int3
xor
stc
repz
mov
jle
jnp
mov
jns
test
jmp
inc
or
pop
mov
mov
inc
sarb
pop
jns
lret
out
push
das
test
inc
sbb
xor
jns
xchg
push
int3
push
jb
hlt
hlt
mov
shrb
pop
js
mov
stos
cltd
sub
dec
xchg
repnz
or
stc
xor
xchg
popf
mov
scas
mov
sbb
push
jge
adc
sar
and
mov
and
jle
outsl
cld
aas
jg
jle
andb
mov
mov
packsswb
lock
gs
push
jbe
sub
enter
jle
sub
sub
pop
or
sbb
loopne
push
mov
mov
xor
mov
es
negl
in
out
dec
xor
lea
bnd
or
in
push
movsl
mov
in
loopne
faddl
xchg
push
pop
and
mov
mov
mov
jns
rorl
or
xor
addr16
adc
out
lahf
xor
adc
jne
mov
add
cld
stc
and
repz
scas
test
out
lahf
aas
loop
scas
jge
jno
xor
cld
stc
repz
inc
call
bound
int3
mov
stc
inc
das
jg
ret
mov
sbb
jl
add
mov
mov
xchg
ja
dec
push
push
jg
add
sub
shl
xchg
push
pop
jns
and
pop
cld
ljmp
fs
pop
jns
ss
fsubrl
cs
fwait
mov
loop
in
jg
dec
pop
aas
out
outsl
sub
mov
jl
cld
push
addr16
ret
scas
arpl
stos
sub
fbld
stos
ds
std
adc
rcrb
adc
inc
sub
push
and
repnz
fsts
inc
push
ss
repnz
lahf
mov
lds
scas
loope
mov
scas
mov
pop
in
jmp
or
scas
mov
int
cmp
xchg
sub
or
scas
mov
pop
xor
sbb
xor
sub
lock
cmc
sub
jb
xor
push
pushf
repnz
scas
mov
imul
lret
scas
mov
dec
jg
bound
int3
jmp
test
test
movsl
mov
das
xchg
push
pop
jns
sub
subl
mov
jns
insb
or
shlb
xor
ss
fstl
pop
pop
jp
xor
jmp
jg
dec
cld
lods
loopne
sahf
sbb
xchg
jp
sbb
das
lahf
aas
adc
bound
jge
pop
in
xchg
xlat
into
stc
stos
pop
mov
xor
sti
nop
sti
push
in
or
stc
test
jle
fdivrs
or
aas
jg
cld
outsl
es
cmpsb
inc
xchg
or
repz
lahf
mov
xchg
outsl
mov
fldcw
std
repnz
lods
call
mov
dec
in
in
ja
push
mov
mov
daa
push
lds
lahf
cmpsl
scas
xchg
push
pop
jns
xchg
and
mov
sbb
pop
jns
or
adc
ret
stos
stos
push
sbb
pop
jns
xchg
or
and
sbb
insl
xchg
aad
jns
xchg
push
scas
loopne
and
push
dec
cmovo
ljmp
push
inc
lret
push
mov
rolb
sub
in
jecxz
mov
repz
cmp
rcr
fwait
movsb
cltd
dec
stc
aas
jg
cld
in
jnp
sub
enter
dec
jb
out
lahf
jp
dec
jbe
pop
or
mov
outsl
loop
lods
jge
xor
cmp
sub
inc
push
aas
out
dec
nop
cmp
repz
jecxz
inc
inc
mov
test
mov
hlt
dec
mov
rcr
jl
lahf
aas
jg
adc
mov
or
fidivl
xchg
add
jmp
jae
cld
fisttpl
dec
xor
xor
mov
es
inc
les
pop
ds
icebp
and
adc
adc
cli
adc
outsl
lahf
pop
push
adc
jl
push
dec
movsb
int
mov
in
jno
repz
int
loope
xchg
scas
jp
repz
fildll
ret
jge
fdiv
jae
or
jns
xchg
ja
mov
loop
pop
and
add
jg
insl
jo
scas
es
jo
inc
jns
fstl
das
dec
cmpsl
sti
jmp
ja
fidivrs
nop
leave
jg
lcall
mov
in
xchg
mov
in
seta
lods
adc
pop
popf
in
ja
stc
imul
cmpl
imul
cli
mov
jg
sub
mov
aas
jmp
in
xchg
aas
or
or
or
sbb
nop
scas
mov
add
sbb
jmp
pushf
inc
aaa
int
jb
ljmp
nop
adc
out
lahf
push
ja
es
shl
mov
fidivrs
inc
dec
loopne
jo
push
insb
lahf
mov
in
push
mov
xchg
push
sbb
and
pop
jns
and
outsl
ja
pop
cmpl
sbb
mov
pop
jns
nop
fiadds
andb
out
ja
inc
pop
js
jb
xchg
int3
inc
fdivr
fucom
mov
mov
into
pop
fimuls
push
jmp
stos
mov
fdivr
movsb
xchg
pop
mov
scas
push
dec
sub
in
ja
outsl
push
cs
and
test
sbb
push
cmp
scas
cmpsl
cmc
call
mov
xchg
fsts
sahf
sahf
in
call
rep
call
jb
dec
stos
out
mov
cmpsb
jecxz
lret
andl
int
mov
aam
insb
stc
stc
repz
push
sbb
sbb
xchg
push
ficomps
dec
stc
loop
cmp
jae
push
pop
jns
adc
fld
xlat
mull
jb
xchg
adc
dec
ret
rep
popa
shl
lret
pusha
movsl
imul
xchg
lea
dec
pushl
xchg
ja
lahf
sbbl
pop
testl
xor
sbb
mov
or
cmp
jne
ljmp
cli
in
repnz
cmp
xor
dec
jge
repz
dec
pop
fstl
cmp
mov
add
iret
mov
sti
negl
add
ja
pusha
jnp
gs
mov
mov
movsb
test
sub
adc
xchg
mov
out
loop
fsubrs
lret
adcl
cwtl
fwait
in
mov
inc
sub
scas
in
add
call
mov
fstps
mov
dec
mov
lahf
aas
push
push
mov
adc
repz
jp
mov
dec
iret
fs
jmp
xchg
push
fidivrs
inc
xchg
setle
fucom
jae
clc
push
fldt
out
lock
jmp
pop
push
inc
inc
nop
jp,pn
repnz
xchg
xchg
test
mov
pop
sub
cmp
imul
xchg
inc
pop
pop
jns
cmp
add
repz
lahf
ljmp
inc
or
out
lea
scas
mov
mov
stc
repz
push
jecxz
pop
movsl
lea
add
jg
cld
fidivl
arpl
mov
add
fcoml
jg
das
lahf
mov
mov
mov
out
lahf
aas
dec
mov
or
and
emms
mov
add
xchg
xor
jecxz
sub
xor
js
stc
repz
das
mov
sub
mov
mov
aas
jg
jmp
in
cmp
mov
adc
aam
and
cltd
mov
jge
cld
stc
repz
lret
push
out
cwtl
dec
jmp
or
iret
lahf
aas
jg
ja
mov
sbb
repnz
lret
sbb
into
rcrl
out
lret
sub
fnsave
and
sub
xchg
push
inc
sub
repnz
lcall
dec
fbstp
dec
fdiv
out
xchg
sub
stos
or
pop
scas
popf
fidivs
push
xor
mov
test
cwtl
repz
loope
mov
sub
jg
ja
test
test
and
sbb
mull
repnz
xchg
iret
add
std
sbbl
inc
enter
mov
popf
jg
jg
in
out
pop
movsb
or
add
mov
cli
sti
repnz
jp
les
mov
jg
cld
ficompl
js
lods
or
movsb
mov
aas
cli
pop
adc
je
addb
test
sbb
ret
pop
jae
dec
bnd
xchg
push
push
mov
int
aas
inc
jp
lret
xchg
push
pop
pop
bound
test
adc
lea
jbe
sahf
inc
xchg
ljmp
or
adc
ss
mov
shl
iret
lahf
aas
loopne
jge
rorl
roll
sbb
mov
xchg
pop
push
les
lock
sub
jb
sub
dec
jbe
das
test
jle
repnz
stos
inc
shrl
lahf
aas
jmp
sub
pop
adc
out
movsb
or
arpl
lret
iret
push
pop
and
lret
push
aas
repnz
jl
outsb
mov
call
pop
clc
sar
ds
jle
leave
push
add
scas
stos
cltd
aaa
or
pop
pop
dec
in
idivl
jmp
xchg
iret
or
mov
or
dec
test
xchg
lahf
aas
fisubrs
or
jne
lret
dec
sbb
fmull
add
push
setg
sub
dec
lds
notb
scas
mov
ss
fdivrs
mov
loope
xchg
mov
out
add
stos
les
and
xlat
xor
lret
lods
sbbb
test
in
lret
mov
lret
movsl
push
rcll
mov
or
fstps
xchg
insb
outsb
ljmp
lds
push
pop
cmp
add
aas
outsb
sub
add
in
std
hlt
enter
lret
fcmovnb
faddl
mov
jae
iret
add
sti
jecxz
pop
jle
push
sub
mov
out
jns
sub
in
mov
dec
xchg
or
cwtl
icebp
fneni(8087
jns
xchg
push
daa
int
xor
fstpt
in
push
pop
sub
stos
lret
dec
dec
aas
andl
dec
fnsave
mov
mov
aas
jg
dec
scas
mov
lret
lret
mov
lret
iret
lahf
jg
jb
iret
das
jg
aas
pop
out
in
push
fidivrs
mov
sub
out
xchg
cmp
pop
mov
rol
test
stos
sbb
mov
pop
insb
mov
push
mov
push
mov
lret
mov
test
jg
cld
dec
scas
xchg
adc
push
ja
xor
cwtl
iret
aas
mov
jl
out
lock
repnz
xchg
and
mov
adc
xchg
subl
or
sbb
mov
out
cmpsb
xchg
mov
movsb
lret
insl
pop
and
sub
stos
adc
movups
lret
mov
dec
sbb
or
call
shll
loop
call
mov
stc
stos
mov
pop
jns
xchg
dec
lret
sub
push
mov
xchg
divb
xchg
push
ljmp
mov
jle
pop
pop
jecxz
or
lock
pop
push
jg,pt
adc
pop
and
lret
lahf
pop
or
lods
push
scas
ror
sub
pop
repnz
dec
cmp
xor
xchg
and
ficompl
mov
add
xchg
ja
sub
ret
cmp
sti
ficoml
xchg
push
pop
jns
js
in
outsb
testb
loope
pop
jns
jle
clc
pop
sbb
pop
sbb
xor
pop
pop
rorl
pop
std
cwtl
lahf
xchg
sbb
insl
iret
pop
movsb
bound
adc
jg
das
sti
repz
je
mov
mov
lret
scas
xlat
lods
or
rcrl
push
jle
repnz
rolb
push
adc
dec
repz
repz
fisubrs
outsl
inc
add
fs
ja
mov
fidivs
out
in
add
mov
in
fisttps
or
cmc
loopne
inc
cmpsl
jns
xchg
push
fistps
pop
mov
lds
subb
pop
jno
sbb
xchg
clc
push
outsl
xor
push
add
adc
mov
or
scas
cld
cld
stc
repz
das
pop
lcall
adc
and
cmp
mov
sub
adc
mov
pop
push
pop
cltd
rcl
das
lret
mov
adc
das
mov
sbb
sub
out
sbb
dec
or
sub
sar
lret
or
cmp
jg
cld
mov
xor
ljmp
repnz
sbb
inc
pop
fsubrl
jge
push
xor
mov
sub
fucomi
out
int3
fidivrs
xchg
in
lahf
sahf
ret
test
in
inc
imul
lret
fstl
sbb
mov
inc
aas
mov
fwait
mov
test
sbb
sahf
imul
rcr
add
sti
push
decl
push
xchg
pop
xchg
popf
out
push
and
test
movsb
das
scas
pop
add
popa
sbb
and
jle
repnz
dec
jl
popf
hlt
rsm
mov
lret
jo
xor
jle
dec
sub
jmp
cli
popf
mov
dec
sbb
pop
iret
pop
inc
cld
add
out
push
icebp
ja
shlb
out
enter
push
pop
fcoms
sahf
add
sub
dec
add
mov
mov
cmp
pop
stos
jg
lahf
pop
or
jne
jno
addr16
repz
inc
mov
and
pop
sbb
adc
push
xchg
lahf
pop
push
sub
push
loop
adc
xadd
pop
insb
cmp
cs
jmp
jge
stc
repz
jbe
pop
add
inc
pop
out
mov
inc
outsb
sub
pop
xchg
xor
sbb
repz
add
push
out
xchg
xchg
gs
test
push
add
testl
cmp
xor
sahf
sub
mov
sub
mov
cmpsl
adc
and
sub
mov
shlb
shll
gs
stc
pop
mov
incb
int
adc
fnstenv
add
cld
out
jnp
xor
sbb
iret
es
orb
push
repnz
in
and
int
pop
call
lret
mov
clc
or
loopne
scas
mov
push
jbe
mov
jo
insl
push
jmp
inc
jns
pushf
xchg
addr16
inc
xlat
xchg
cld
mov
das
pop
into
sub
imul
mov
mov
sti
repnz
lret
insl
inc
ret
mov
dec
fildl
sub
sar
outsb
leave
out
pop
arpl
popa
cmp
or
outsl
pop
dec
xor
xlat
lret
movd
test
and
add
adc
nop
xor
push
test
cmc
or
mov
mov
inc
sahf
lcall
sbb
fsubrl
adc
pop
jecxz
cmp
jbe
inc
pop
leave
repnz
cmc
js
jl
pop
xlat
repnz
loop
cld
dec
cli
mov
pop
pop
aam
mov
jmp
inc
mov
pop
inc
pop
outsl
xor
out
adc
sub
stos
sub
sub
cltd
arpl
dec
mov
dec
xchg
sarl
xchg
aas
insl
or
mov
out
aad
outsl
fdivrs
pop
inc
pop
outsl
frstor
lcall
repz
lahf
fwait
jle
nop
insb
fs
or
mov
loop
jg
cld
stc
pop
pop
daa
xchg
adc
push
bound
add
lahf
lret
pop
fmuls
and
lcall
cld
fxch
pop
pop
mov
imul
xchg
pop
mov
pop
ds
fidivl
mov
sbbl
and
and
xor
cmpsl
push
push
lock
rorl
sbb
xchg
xchg
sti
repnz
imul
decl
mov
jle
out
add
adc
or
mov
imul
pop
clc
add
outsl
outsb
add
xlat
jg
cld
stc
pop
lds
stc
mov
adc
jb
mov
mov
fbld
repnz
lret
or
cmpl
jno
push
mov
fldl
lahf
dec
call
and
in
pop
push
lds
and
in
pop
lods
xchg
push
arpl
jmp
sub
iret
pop
lods
dec
mov
mov
aas
inc
inc
xchg
lods
push
push
sahf
and
pop
repz
lahf
and
aad
xchg
push
jbe
xchg
sti
adc
repnz
out
sbb
scas
mov
mov
pop
jbe
sti
xchg
repnz
mov
das
mov
push
scas
lret
mov
in
mov
stc
out
jle
repnz
pop
int
bound
js
mov
add
sub
inc
inc
mov
cld
stc
repz
pop
cmc
aaa
stc
cmp
subb
sub
lahf
aas
jg
testl
loope
xchg
aam
cmpsl
outsb
mov
call
iret
lahf
jg
leave
sbb
sbb
cltd
xor
mov
es
push
idiv
pusha
lret
ja
das
lods
and
out
adc
sub
mov
sub
lock
out
clc
fs
outsb
mov
in
pop
mov
cld
stc
fimull
jae
xor
pop
sbb
dec
add
cmp
jmp
adc
in
push
push
jg
cld
stc
icebp
lds
data16
jle
jns
xchg
aas
cmp
scas
xor
push
pop
add
daa
adc
pop
lcall
fisubs
cmpsl
sbb
sub
iret
scas
movsl
cli
into
pop
notb
or
repnz
mov
int3
pop
sti
xchg
aas
jg
cld
jle
mov
rclb
inc
mov
xchg
stos
outsl
loope
iret
lahf
cwtl
xor
inc
jbe
lret
hlt
push
push
jle
lock
push
xor
fs
inc
stc
repz
negb
jp
subl
adc
push
rorl
loope
jns
popa
mov
dec
cltd
cs
and
out
lret
iret
lahf
popa
or
dec
dec
stos
outsl
push
ds
cmp
repnz
fstpt
ret
data16
leave
mov
mov
out
mov
cltd
jp
pop
sbb
mov
mov
scas
mov
in
add
rcrl
mov
lods
pop
dec
out
push
ss
sub
in
sub
xor
pop
mov
mov
sar
push
dec
pop
jl
xchg
push
pop
jns
xchg
fcompl
sub
arpl
inc
sbb
inc
mov
into
dec
inc
push
sbb
mov
xlat
or
enter
ret
pop
cld
mov
pusha
mov
fwait
sahf
sbb
test
pop
mov
cmp
cmc
ljmp
clc
lret
push
stc
repz
mov
pop
jmp
inc
sti
push
and
inc
mov
or
jl
mul
add
cmp
arpl
mov
xchg
sbb
imul
sahf
push
fsubp
fists
outsl
movsb
fistpll
add
xchg
jp
mov
cld
stc
repz
je
xchg
mov
int3
lcall
jbe
pop
mov
jle
std
cmpb
jns
fsub
shlb
gs
out
ja
dec
cs
mov
push
jnp
fs
movl
inc
cld
subl
repz
into
outsb
repz
or
outsl
ljmp
dec
ss
xor
and
ss
sahf
outsb
subb
lahf
pop
sbb
flds
cwtl
dec
in
loope
shl
out
cwtl
inc
fnstcw
js
fbld
jae
repnz
test
std
cmpsl
outsl
mov
inc
arpl
mov
in
lods
pop
sbb
lods
jo
in
lahf
sub
lock
mov
push
pop
ss
jecxz
push
push
mov
pop
std
lock
cld
sub
leave
or
cmp
ljmp
mov
gs
data16
push
loope
and
push
adc
sbb
rolb
int3
repnz
ja
push
test
shll
sub
mov
cmc
cmc
mov
aas
adc
xor
push
scas
mov
push
pop
inc
mov
add
inc
xchg
jecxz
sti
repnz
loopne
xchg
fwait
stos
shlb
and
lahf
lret
mov
push
dec
aam
cltd
cs
pop
jecxz
lret
xorb
adcb
xchg
ficoms
fsubrp
push
dec
enter
lds
push
pop
jns
cs
out
mov
or
add
push
lock
loop
push
inc
mov
sub
jle
jl
fildll
sbb
pop
scas
mov
lea
push
enter
jnp
or
mov
lret
mov
mov
pushf
mov
sub
in
push
addps
xchg
mov
fstl
and
pop
sub
scas
pusha
and
cltd
sub
cmc
lret
outsl
cli
addr16
into
add
lret
mov
mov
jb
inc
adc
mov
dec
mov
mov
add
jle
cmpl
cs
xchg
lahf
aas
add
push
adc
and
lret
out
out
push
sub
add
pop
jns
jmp
dec
mov
leave
test
cmp
push
adc
into
data16
aam
out
mov
sub
xchg
cli
or
iret
lahf
aas
jg
and
stc
lahf
push
leave
and
sbb
repnz
lret
stos
int3
adc
xor
xchg
sub
cld
les
insb
out
dec
das
ja
lods
test
inc
in
cli
js
jns
or
dec
push
movsb
push
fcmovnu
pop
push
pop
jns
fnstenv
ret
xchg
sub
out
sub
cmp
lret
xchg
ljmp
inc
sbb
out
push
sahf
dec
inc
movsl
pop
pushf
lret
cmp
dec
cld
stc
repz
mov
vdivpd
ljmp
jg
add
das
or
or
cmove
std
jb
xchg
pop
aaa
push
or
fiadds
in
push
fimuls
and
out
mov
loope
call
sbb
jno
pop
mov
push
pop
jns
jmp
lahf
jge
cmpb
lock
frstor
out
jg
cld
stc
jge
lcall
nop
adc
dec
mov
fwait
lods
and
loope
repz
negb
dec
pop
aas
jg
pop
rcl
adcl
bound
xor
repz
lahf
add
fs
sbb
shrl
xchg
jg
cld
stc
push
push
push
dec
xchg
incb
sub
iret
lahf
aas
mov
movb
cmp
sysexit
repnz
js
repz
pop
or
stc
repz
add
outsb
lds
stos
push
repnz
fidivs
cmp
inc
push
in
aaa
cli
add
jg
nop
and
or
rcll
lea
out
stos
xchg
scas
push
call
aas
xchg
add
cmpb
cmp
cmp
cmp
mov
in
sub
cmp
mov
push
out
push
lahf
aas
mov
call
test
sbb
xchg
inc
add
int3
or
outsb
pushf
lahf
aas
jg
sahf
jmp
xor
notl
mov
repnz
orl
jecxz
fmul
cld
stc
repz
push
add
sti
xchg
mov
sub
stc
adc
sbbl
in
cmpsb
cld
fstpl
lret
iret
or
or
sbb
inc
sahf
imul
jns
or
jb
sbb
jg,pt
push
adc
mov
mov
jbe
sahf
das
jns
pushf
stos
in
stc
repz
mov
and
test
push
ljmp
rorb
pop
lahf
and
lret
in
ja
xchg
mov
call
push
pop
jnp
in
add
sub
lret
fcoms
jns
lods
loope
sbb
dec
scas
scas
mov
mov
in
mov
push
lret
add
jbe
push
addr16
xchg
push
stc
icebp
mov
les
cmp
add
scas
lods
jle
adc
mov
or
nop
notl
sbb
repnz
jl
ror
xchg
aas
fwait
mov
jg
jne
daa
aas
inc
clc
in
pop
je
push
and
scas
and
ss
lahf
aam
fimuls
movsb
test
testl
aas
mov
das
mov
fdivr
repz
mov
jp
mov
mov
jg
cld
mov
fs
xchg
pop
or
nop
iret
xlat
loop
nop
in
int
div
out
xor
dec
insb
lea
adc
xchg
push
pop
push
mov
rorl
loope
clc
jb
pop
lods
adc
mov
stc
stc
repz
jle
ret
sbb
pop
fsubrp
sahf
sbb
lret
addr16
mov
cs
xchg
clc
and
xchg
push
pop
jns
mov
cmpsl
arpl
xchg
push
fisubrs
es
sub
mov
movsb
pop
pop
jns
xchg
or
arpl
adc
test
xchg
push
js
inc
movsb
andb
hlt
dec
mov
pop
jns
test
jne
jl
jns
dec
xor
jg
icebp
in
fisttpl
out
mov
and
cs
aas
mov
mov
lock
cld
stc
and
mov
dec
stc
test
lahf
aas
jg
fucompp
or
cmp
cld
stc
repz
sbb
cs
dec
movsb
aam
dec
cmc
xchg
lods
mov
adc
or
push
scas
lret
sub
aas
jg
cld
push
pop
jge
cmp
sbb
dec
dec
mov
outsl
pop
jl
fadds
movhps
mov
inc
shr
test
pop
in
mov
fisubrs
sub
xor
push
pop
fldcw
stc
repz
pop
or
mov
repnz
sub
jl
dec
popa
and
ret
mov
imul
decb
ret
adc
xchg
xchg
aaa
ror
sub
test
into
push
pop
jns
mov
mov
adc
xchg
push
sbb
jns
xchg
xchg
pop
hlt
mov
rcll
cli
xchg
out
jp
gs
pop
dec
fs
jb
out
sti
dec
fsts
subps
or
jg
sub
jle
leave
dec
pop
pop
pusha
loop
shrb
pop
popa
into
lods
jg
add
xchg
push
pop
jns
lcall
ja
inc
mov
push
pop
jns
push
les
and
out
jbe
das
loope
sbbl
sti
in
sub
pop
inc
xchg
ds
mov
mov
addr16
shl
clc
add
das
js
mov
das
sub
or
repz
mov
pop
test
push
nop
jmp
outsl
and
mov
pop
jns
fisttpll
aas
jl
imul
cmpb
xchg
push
fcomps
popf
add
lods
jo
pop
mov
xchg
push
pop
mov
push
in
aad
popa
jp
push
pop
jns
cmc
rorl
shll
ds
pop
jns
add
imul
cmp
lret
pusha
std
lods
sbb
in
les
pop
adc
jnp
insl
or
jns
xchg
push
inc
js
push
fwait
push
dec
sub
xchg
push
pop
shll
test
sbb
repnz
sub
cmc
add
imulb
ror
movsb
icebp
push
insl
out
rolb
mov
mov
jns
test
lahf
pop
nop
in
adc
inc
mov
cld
mov
cmp
pop
cwtl
xchg
cs
aas
std
jg
push
mov
lret
lret
jmp
mov
scas
repz
outsl
pop
add
ret
enter
dec
sub
fistpl
fsincos
and
scas
mov
jns
xor
inc
sub
lret
sub
jbe
aad
mov
lahf
pop
pop
out
sub
jmp
jge
in
or
cmp
jecxz
enter
sbb
xchg
push
ficomps
push
aaa
lahf
addr16
push
ret
push
pop
jns
or
in
and
add
aaa
cmp
mov
out
pop
push
repz
in
mov
in
mov
add
out
xchg
sub
je
jmp
out
das
scas
mov
gs
ficomps
and
dec
jmp
adc
test
call
stc
repz
mov
repnz
xchg
loopne
clc
fisubrl
pop
push
out
mov
lods
jg
adc
adc
xchg
sub
pop
aas
inc
shll
sarl
or
lret
aas
in
cmp
mov
xor
adc
ret
or
bound
jno
clc
repnz
jg
adc
outsb
push
sub
cmp
cld
mov
lods
jne
dec
push
and
cmpsb
lret
lahf
aas
xchg
jle
test
inc
mov
pop
iret
mulb
xchg
cmc
pop
out
dec
pop
ljmp
pushf
adc
pop
fcmove
jg
jns
imul
jecxz
push
call
xor
pushl
or
popf
jl
cs
add
cmpsb
push
adc
in
push
iret
daa
xor
mov
repz
xchg
push
pop
mov
xor
fnstenv
shll
das
iret
ds
aas
sub
outsb
icebp
cld
xchg
xor
ficomps
jne
and
xor
es
pop
jns
sub
inc
in
mov
mov
aas
cmp
fstl
fisttps
mov
push
pop
fdivrp
test
xchg
pop
xchg
imul
aas
jg
cld
scas
inc
xchg
inc
jge
out
mov
push
jg
repz
lahf
in
sub
das
call
sbb
push
jg
cld
stc
mov
fcmovnu
adc
adc
sub
inc
mov
xor
sahf
inc
mov
out
lret
iret
out
mov
sub
xchg
mov
mov
xchg
cmpsl
dec
lods
idivl
inc
pop
scas
mov
mov
or
cli
in
mov
xchg
adc
imul
repnz
jle
xchg
cmp
sbb
aas
mov
add
sahf
pop
cs
repnz
lahf
jb
sbb
or
add
std
push
pop
rclb
cmp
popf
lahf
sub
xor
cmc
jmp
sahf
jp
lock
push
cld
test
addr16
test
xchg
push
pop
jns
mov
popl
notb
adc
push
pop
jns
xchg
subl
call
aam
lret
test
adcb
in
push
ficomps
mov
cwtl
mov
notl
sbb
mov
add
cs
icebp
in
aas
adc
scas
xchg
fwait
jns
sub
stc
or
iret
mov
cld
and
jns
psubusb
and
xlat
imul
sbb
dec
mov
in
xchg
das
push
jo
dec
inc
inc
inc
out
enter
in
push
mov
mov
or
cltd
in
push
pop
int3
push
aas
push
adc
icebp
call
pop
pop
jns
cltd
sub
push
leave
fiadds
repnz
int
push
jecxz
push
mov
dec
cmc
out
lret
xchg
jg
out
adc
stc
sub
push
stc
xor
jbe
addr16
mov
push
fdivrp
ror
push
xor
stos
icebp
out
push
xchg
dec
dec
out
sub
mov
add
fmull
incl
sarl
add
cmp
sbb
pop
fistl
jae
icebp
repnz
filds
mov
out
adc
push
das
imul
add
cld
fidivrl
mov
std
dec
xchg
mov
sub
pop
inc
add
movsl
jge
leave
inc
rolb
les
lahf
add
jbe
pop
fwait
loope
jl
adc
jns
inc
popf
addb
repnz
lret
jle
adc
xchg
jne
mov
insl
sub
daa
jmp
mov
daa
mov
scas
mov
lock
je
popa
adc
sub
dec
sbb
iret
lahf
pop
scas
sub
shlb
and
fists
cld
stc
repz
sahf
popf
add
shrb
jp
cli
push
test
aas
jg
pop
dec
fwait
enter
sub
push
mov
stc
repz
rcrl
jo
sbb
lds
sub
dec
ret
into
jae
push
sti
xor
insl
xor
iret
lahf
aas
push
popa
pop
cmp
pop
ljmp
xor
bnd
sti
cwtl
adc
nop
dec
inc
mov
pushf
movsl
cmpsl
lods
repnz
xor
fucomip
shr
sbb
daa
lret
mov
lea
stc
xchg
fcompl
repnz
aas
imul
scas
mov
movsb
add
imul
push
out
lret
sub
adc
push
rcrl
scas
mov
push
arpl
mov
cld
cltd
cli
repnz
fwait
xchg
fwait
rcrl
mov
mul
or
or
mov
jns
stc
stc
in
push
sbb
pusha
inc
inc
dec
scas
iret
lahf
cmc
in
out
inc
push
mov
arpl
stc
repz
jp
jl
xor
cmpsb
cs
push
aas
jg
lcall
jae
xor
repnz
bound
subb
ret
sbb
cmpsb
scas
lret
mov
sti
cld
jb
xchg
lret
jae
mov
test
lret
das
mov
mov
jle
cld
stc
dec
fadds
jp
mov
adc
out
lahf
aas
std
mov
insb
mov
stc
repz
fadds
imul
jg
inc
mov
inc
das
mov
aaa
inc
call
lret
out
sub
sti
nop
in
dec
pop
out
push
pop
jns
push
dec
mov
push
ret
dec
call
in
js
sbbb
sub
ja
pop
dec
fstpt
popf
inc
cwtl
notrack
in
ja
cld
imul
jns
xchg
push
push
pop
in
in
test
in
push
pop
daa
sar
shrl
mov
out
out
xchg
pop
jo
fsubrs
adc
inc
test
iret
inc
push
mov
jle
stc
cwtl
cmp
dec
sub
adc
pusha
imul
out
mov
or
lahf
and
not
inc
in
pop
test
je
xchg
das
stc
repz
xor
out
jns
xor
adc
fstp
pop
pop
das
cwtl
pop
mov
sbb
in
push
pop
adc
mov
and
jmp
mov
dec
insb
inc
mov
popf
out
movsb
pop
ss
out
aas
test
sarb
cs
cmp
pop
cltd
fstps
xor
mov
cld
stc
sub
mov
int3
inc
cmp
lahf
aas
jg
sbbl
fistpl
stc
or
idiv
stc
repz
push
mov
rcll
lahf
aas
jg
bound
sarb
movl
mov
repnz
or
test
std
in
pop
aaa
call
sub
mov
scas
loop
adc
addr16
adc
mov
pop
pop
repnz
pshufw
xor
lret
cmp
dec
push
push
xor
iret
push
testl
adc
iret
mov
mov
pop
jns
call
scas
mov
push
pop
inc
test
mov
fdiv
mov
push
sub
pop
mov
and
push
cmp
mov
mov
popf
push
into
dec
inc
sar
lret
daa
iret
int3
ds
popa
or
sub
push
out
dec
jmp
and
or
leave
fdivp
leave
ret
lahf
aas
les
push
push
in
lea
lahf
mov
push
add
cld
stc
repz
stc
cli
sbb
cmp
xchg
outsl
shll
xchg
ja
jg
xchg
sub
das
cmc
pop
mov
out
les
dec
ds
lahf
cli
and
pop
hlt
idivl
setbe
dec
enter
and
adc
lea
aas
mov
out
cli
dec
sahf
frstor
mov
ja
mov
outsl
repz
ret
mov
xor
ret
cld
stc
or
and
rorl
adcl
xchg
jo
ja
jne
repnz
out
lahf
cwtl
jl
add
mov
sti
arpl
out
cmpsb
mov
inc
sbb
repnz
pop
mov
sti
mov
lret
sub
add
jle
sti
and
lods
or
mov
cmp
or
mov
cs
sub
das
addb
cs
loope
cmp
pusha
cmpsl
pop
jns
pop
iret
jnp
jnp
repz
arpl
leave
dec
cmp
push
in
call
ret
std
repnz
repz
sub
cmpl
dec
and
test
mov
fisttps
or
iret
cmpsb
sub
lret
pop
test
jbe
out
lret
xchg
shll
clc
in
popa
xor
fwait
adc
out
aam
xchg
les
leave
mov
push
and
jne
cmp
movsb
mov
pop
pop
ss
test
iret
lahf
aas
or
fidivrs
jbe
xor
out
daa
ret
aam
cmp
mov
stos
xchg
loopne
out
add
aas
loopne
fbstp
dec
call
in
scas
fsubl
aas
pop
cmc
jb
and
mov
popa
push
push
push
fdivrp
adc
cli
lahf
imul
cmp
or
ds
int3
adc
in
or
xchg
push
clc
cmp
mov
and
pop
add
out
gs
icebp
and
mov
jns
pop
push
lret
lods
cmp
mov
aam
or
in
scas
jno
push
mov
pop
dec
push
adcl
test
fisttpl
adc
jns
sub
repnz
repz
sbb
hlt
push
movsl
insl
fcmovu
jg
or
adc
in
mov
iret
lahf
aas
clc
sub
sbb
mov
push
pusha
fdivrp
cld
stc
repz
xchg
fstpl
mov
xchg
xchg
cltd
pop
iret
lahf
aas
jg
hlt
repnz
sbb
add
stc
repz
aas
test
loopne
push
and
adc
aas
lret
leave
sbb
decb
lret
or
jle
mov
jmp
pop
notl
push
and
push
xor
pop
inc
xchg
xchg
out
lcall
lret
lret
mov
dec
roll
movsl
sub
adc
mov
pushaw
or
and
jecxz
mov
stos
in
mov
sarl
xchg
add
jle
pop
loope
les
add
lods
dec
mov
iret
lahf
aas
push
pop
idivb
pop
movsb
cli
lods
fbstp
cld
stc
repz
inc
sahf
ljmp
mov
movsl
cmp
or
jg
mov
rcrl
das
fisubs
jo
jo
decl
jae
jmp
jb
xchg
xchg
idivl
popf
mov
repz
ja
pop
jns
fldl
push
add
mov
lret
xchg
lcall
pop
lret
and
pop
cmc
xor
insb
jno
add
xchg
push
pop
jns
ja
fisttpll
or
push
les
jns
out
rcrl
cltd
int
insb
daa
jmp
lock
xchg
mov
xchg
or
addr16
push
scas
mov
lret
push
daa
mov
popl
sub
das
imul
pop
les
arpl
sahf
divb
cld
stc
mov
xorl
mov
aas
sbb
jle
adc
sub
ja
repz
sbb
pop
mov
mov
jl
cld
leave
jo
cmp
mov
flds
filds
adc
enter
inc
in
push
pop
cmpsl
and
mov
mov
dec
ja
pop
jns
seta
inc
inc
fdivr
and
mov
push
lahf
hlt
push
outsl
das
jl
sbb
icebp
mov
push
pop
jns
addr16
cmp
cmp
mov
sub
adc
xchg
mov
jae
xor
scas
repnz
shlb
cwtl
mov
or
fistps
sbb
jae
xor
into
xor
hlt
testl
xchg
adc
iret
in
push
jo
aas
lret
iret
sub
push
push
je
sbb
repz
loop
sti
cmc
push
jo
mov
adc
repnz
fildl
jb
jge
inc
lret
and
out
jg
out
rcl
ljmp
add
call
inc
dec
pop
int3
push
pop
jns
xchg
sub
fbstp
jbe
data16
sbb
fidivrl
sub
push
std
push
xor
addl
fidivl
call
mov
mov
aas
jg
ds
iret
jno
xchg
test
notb
push
cmc
and
and
adc
inc
ret
push
dec
cli
in
jnp
cs
mov
cld
push
rcl
sub
add
jecxz
cli
out
in
out
sub
lret
iret
lahf
jl
stc
pop
hlt
cmc
in
mov
jg
ds
mov
jo
insb
stos
lahf
aas
jg
sahf
push
adc
orl
test
fsubrp
in
dec
pusha
das
push
das
mov
rclb
mov
jnp
repz
iret
testb
xor
das
scas
mov
into
mov
mov
push
cltd
sbb
cmp
bswap
sub
adc
mov
scas
mov
pop
enter
inc
sarl
dec
inc
cli
cli
repnz
sub
and
sarb
xor
mov
push
shlb
mov
in
repnz
jmp
and
cmc
xor
push
push
lret
cmpsb
pop
out
cmpsb
outsl
scas
xchg
das
aam
scas
mov
stos
sub
jnp
ljmp
mov
lcall
xor
aaa
hlt
pop
iret
into
mov
cmp
out
clc
xor
xchg
arpl
push
mov
xchg
sub
add
add
xchg
insl
scas
mov
xor
dec
pop
push
shr
xchg
lods
pop
or
ljmp
nop
jno
das
jl
push
das
enter
adc
xor
pop
pop
jle
sub
push
jl
dec
push
inc
das
mov
xchg
sbb
dec
pop
fimuls
pop
movsb
icebp
outsb
scas
dec
bound
sbb
dec
out
iret
mov
ja
dec
mov
sbb
aas
dec
mov
jb
pop
shl
setno
das
rcrl
lahf
lods
push
movsb
add
mov
shlb
hlt
lods
add
mov
jno
push
test
xchg
jbe
scas
mov
xchg
js
orl
lds
stc
xor
ds
xchg
push
std
fmuls
and
cli
pop
pop
fsubrp
inc
scas
insb
pop
lods
jle
jmp
dec
fiadds
pop
mov
sahf
sti
adc
iret
lahf
aas
pop
outsb
ret
sub
test
repnz
fisubrs
cld
pop
cli
sub
ljmp
ds
pop
iret
lahf
aas
jg
mov
adc
dec
das
jg
stc
repz
dec
sbbb
jne
pop
lods
addl
jg
jge
mov
aaa
inc
push
iret
test
call
out
sbb
dec
dec
lret
dec
arpl
aas
test
outsb
loope
iret
lahf
aas
in
loop
int
cmp
push
mov
sub
in
mov
mov
das
popa
jl
add
icebp
inc
push
rorb
aad
fnstcw
add
sbb
gs
fs
mov
xchg
pop
and
popa
sub
inc
xor
push
pop
mov
pop
loopne
scas
push
fwait
rcl
cmpsl
lret
jle
mov
repnz
inc
sub
mov
xor
lret
mov
pop
imul
lods
pop
out
neg
mov
aaa
stc
dec
clc
leave
jle
jecxz
adc
mov
adc
fwait
addl
mov
push
in
xchg
ja
fwait
mov
pop
aas
mov
xchg
test
fists
adc
cwtl
sub
pop
test
jns
pop
sti
sbb
or
jl
out
pop
jns
xchg
ret
movsb
pop
test
rclb
push
jge
aam
in
push
inc
push
pop
notb
loope
fisubs
inc
loop
iret
pop
into
hlt
pop
ds
lcall
test
mov
repz
mov
push
fidivrs
shr
iret
das
or
mov
pop
push
pop
jns
sahf
or
inc
lods
imul
cmpsb
pop
jns
xchg
add
mov
out
push
add
stos
xchg
push
loop
xchg
sbb
adc
and
jb
ss
xchg
jns
and
in
inc
shll
lods
mov
pop
mov
outsl
mov
cld
and
mov
mov
cltd
mov
mov
ds
and
cmp
add
das
inc
push
pop
jns
leave
shrb
cs
cmp
inc
cmp
sbb
xchg
inc
scas
out
aam
in
push
scas
adc
clc
mov
arpl
mov
xchg
push
fidivrs
sarb
xchg
lret
insb
xlat
inc
push
push
pop
jns
cli
xor
das
jecxz
jge
jge
add
sbb
outsl
jl
mov
or
mov
clc
and
shl
out
lahf
cmp
pop
outsl
or
pop
cmc
or
jo,pn
fists
pop
jns
mov
or
jb
jg
das
adc
sub
push
xchg
lret
sub
loope
adc
dec
out
mov
repnz
and
loopne
lods
ror
mov
stc
push
shrb
leave
sahf
mov
int
fs
pusha
in
push
lea
lret
or
xchg
test
jg
ret
pop
mov
js
cmp
stos
arpl
inc
mov
push
js
adc
pop
decl
push
or
dec
cld
stc
xor
jb
mov
int
xchg
lods
mov
pop
jle
push
sbb
into
fucomip
imul
dec
mov
insb
jb
jno
fs
push
mov
fwait
subb
push
fidivrs
dec
scas
outsl
lock
mov
clc
pop
push
pop
jns
fnstsw
insl
lea
jb
sahf
mov
jns
xchg
push
repz
pushf
mov
hlt
insb
xchg
mov
das
push
pop
popf
mov
insb
rclb
mov
pop
pop
movsb
and
aas
xchg
rcrl
xor
mov
mov
sub
ds
inc
push
pop
inc
and
dec
rcl
mov
test
es
cmpsl
rolb
xchg
lret
mov
lods
bswap
lret
lock
out
cli
xor
pop
test
out
cld
adc
bound
jle
xchg
jecxz
pusha
and
pop
pop
pop
jg,pt
ljmp
das
push
pop
fdivrp
mov
sbb
in
notl
mov
scas
mov
mov
push
push
mov
sbb
and
jae
mov
mov
sahf
mov
lods
dec
movsb
mov
pop
scas
xor
pop
pushf
pop
or
cld
stc
daa
orl
fstl
stc
in
pop
mov
movsb
pop
pop
adc
adc
push
pop
jns
aad
add
add
cmpl
fsubl
xchg
jb
gs
mov
xchg
jo
xchg
sbb
rol
repnz
scas
clc
and
pop
jns
pop
or
jmp
jg
push
cmc
mov
mov
into
push
cltd
or
out
stc
repz
mov
int3
cwtl
push
push
push
xchg
jns
aas
jg
cld
add
fwait
xor
std
inc
mov
sub
xchg
lahf
jle
out
or
jmp
pop
jns
shrl
insb
outsl
jne
push
out
mov
seta
in
xor
push
cltd
push
dec
fsts
repz
and
dec
clc
pop
dec
mov
mov
pop
faddl
js
mov
enter
cli
icebp
push
iret
leave
lock
aad
xchg
rcl
test
cmp
sbb
jg
cld
aad
maxps
jmp
int
xchg
jns
xchg
ja
jo
mov
push
xlat
inc
stos
mov
push
pop
sbb
rclb
hlt
sub
aam
xchg
push
pop
jns
les
push
inc
fwait
ss
enter
jb
jbe
mov
pop
or
in
call
sti
repnz
mov
push
outsb
cmp
mov
mov
pop
fdivl
sub
das
fiadds
enter
movsb
pop
mov
stc
cld
stc
addb
cmpsl
pop
jno
mov
repnz
pushl
add
xchg
add
das
scas
mov
stos
sbb
pop
fwait
out
in
xchg
mov
in
cmp
idivl
decl
das
scas
mov
cmpsl
lahf
test
inc
add
inc
push
aad
aam
mov
push
movsb
mov
out
out
or
xchg
into
sub
jae
mov
daa
push
cmpsb
stos
or
mov
cmp
out
jle
mov
jl
jae
in
sub
sbb
xchg
mov
lret
mov
xchg
es
xchg
adc
jle
cli
bnd
push
out
adc
mov
or
pop
sahf
fstps
pop
lret
adc
mov
pop
mov
xchg
pop
mov
mov
jl
cld
or
jl
or
stos
in
xchg
ja
ror
jp
or
out
insb
or
sarb
jl
sbb
and
out
and
daa
push
cmc
enter
pushf
pop
push
pop
mov
cld
stc
adc
popl
imul
mov
lcall
stc
loop
shll
pop
stos
stc
xor
fiadds
pusha
xor
aas
jg
cld
mov
arpl
pop
xlat
jecxz
repz
lahf
push
add
mov
add
cld
stc
adc
mov
adc
push
mov
cmp
pop
adc
pop
sbb
fildll
push
mov
pop
dec
or
inc
add
out
or
test
jns
mov
xchg
pop
imul
fimull
out
shl
out
lahf
lods
into
stc
adc
les
repnz
std
mov
incb
lret
xchg
ja
sbb
aaa
iret
xchg
test
sub
fdivrl
test
repnz
fwait
add
cmpsb
inc
pop
sub
pushf
leave
arpl
push
subb
cli
in
sti
subl
xor
imul
fbld
sbb
inc
scas
pop
pop
aad
iret
mov
push
xor
clc
repnz
outsb
outsb
popf
scas
push
and
pop
cld
lea
repz
out
pop
iret
test
lahf
aas
mov
xchg
ds
movsb
sahf
sub
aas
call
lret
in
mov
jp
and
mov
xor
mov
clc
aas
aas
mov
aas
cltd
jb
outsl
les
stc
xchg
mov
ja
ja
push
fidivrs
inc
xchg
ret
pop
pusha
pop
andps
xchg
sub
maskmovq
testl
push
out
xchg
rclb
pop
and
out
out
clc
in
xchg
cmpsl
daa
inc
mov
scas
push
ret
stc
cld
stc
rep
imul
outsb
or
es
repnz
jl
outsb
inc
jns
fidivrs
in
mov
dec
dec
or
call
mov
and
outsl
adc
push
out
mov
outsb
repnz
div
cmpb
xor
sub
lea
xchg
push
and
push
adc
mov
dec
lret
xchg
push
pop
mov
jge
mov
stc
pop
cmc
inc
inc
fucomip
outsb
xor
fstpt
fidivrs
in
inc
incl
sbb
bound
xor
lret
ja
movsl
jecxz
cmpsb
pop
cmp
cmp
mov
jmp
xor
cld
stc
scas
loop
dec
repnz
xor
and
repnz
mov
mov
add
lods
dec
mov
add
add
add
repnz
xor
dec
xchg
fistps
loop
fisubl
scas
mov
xchg
dec
mov
mov
lret
inc
jno
pop
inc
cmp
shll
adc
cli
popf
lods
pop
jg
in
sbb
outsl
das
push
pop
jns
adc
out
push
sub
push
in
aas
jg
pop
and
push
mov
ss
test
pop
mov
jnp
in
sar
out
pop
dec
js
or
cmp
and
decb
cld
ret
les
test
mov
xchg
sub
pop
sub
outsl
pop
inc
popa
sub
dec
and
jg
aas
ljmp
push
popf
mov
repz
lahf
mov
and
pop
push
mov
jle
cld
stc
dec
dec
aam
test
xor
push
dec
das
mov
pop
push
push
hlt
lret
iret
lahf
pop
dec
out
clc
and
loope
dec
dec
and
repz
loope
mov
pop
or
jnp
dec
xor
testb
sub
repnz
pop
mov
add
das
lea
mov
dec
iret
push
les
movsl
das
out
mov
pop
cmp
stc
add
cld
push
pushl
hlt
adc
fstl
in
into
mov
test
out
test
sub
pushf
pop
into
adc
call
daa
lds
cld
movsl
popf
mov
das
pusha
lock
cmp
fstps
jae
add
mov
test
mov
rol
inc
mov
test
pop
rcrb
sbb
repnz
pop
add
add
pusha
xlat
das
dec
and
scas
mov
cmp
mov
out
int3
lret
mov
dec
fdivrp
lret
sahf
xor
xchg
lods
push
lahf
jecxz
lcall
scas
mov
xchg
jg
fs
std
and
fwait
mov
lcall
xor
jle
mov
cld
lcall
push
cmpsb
aas
mov
jns
and
repnz
lahf
xchg
jge
and
gs
divb
sub
stos
jp
or
std
dec
xchg
push
xor
xchg
loopw
pop
mov
cld
stc
repz
dec
stos
add
xlat
leave
sbb
or
cmp
int3
push
cmpsl
ljmp
lret
pop
les
fimuls
mov
sbb
scas
mov
push
mov
mov
mov
clc
in
xor
out
ds
arpl
aas
jg
jae
rorb
or
push
mov
in
out
xchg
repnz
stos
xchg
repnz
sti
out
inc
out
and
mov
int
sbb
jg
mov
pop
leave
adcl
mov
jcxz
cmpsl
pop
jmp
outsl
imul
fadd
dec
je
mov
sahf
push
jb
lahf
aas
jg
or
xor
cmp
repnz
stc
repz
adc
adc
sbb
jg
dec
jge
mov
clc
mov
rcr
mov
das
pusha
fstpt
imul
enter
xchg
and
sub
stc
xchg
outsb
xor
and
jmp
popf
mov
lret
xchg
push
fidivrs
ss
sahf
cmp
cmc
jmp
sti
and
aaa
subb
ret
repz
jle
mulb
xor
insl
push
and
pop
add
jg
and
push
lods
jb
sub
not
dec
xchg
jecxz
iret
lahf
fimull
pop
lret
xorb
mov
in
add
pop
jecxz
mov
lcall
imulb
jnp
daa
jl
cmpsl
push
pop
jns
cmp
and
mov
push
mov
in
cmp
aad
mov
push
mov
jecxz
loop
pop
cmp
jle
js
jle
das
lahf
scas
mov
ss
out
xchg
sub
jg
or
cltd
pop
xchg
xchg
aas
scas
mov
int
scas
sbb
mov
adc
sbb
add
lret
sub
xchg
mov
mov
loopne
adc
xchg
das
ja
mov
pop
inc
rorb
aad
data16
mov
xor
fnstcw
fisubrl
dec
and
testl
pop
jbe
jb
mov
andl
repnz
test
adc
lock
dec
scas
push
add
mov
mov
and
and
das
jg
stos
mov
aaa
mov
out
jle
lods
sahf
mov
mov
mov
pusha
and
sbb
shll
stc
mov
dec
subb
repz
int
xchg
pop
popa
xchg
mov
shl
ret
das
dec
jl
decl
inc
dec
jmp
mov
iret
stc
xor
stc
pop
insl
imul
add
push
mov
pop
and
sar
cld
push
aas
imul
xor
mov
lahf
aas
jg
xor
out
mov
stc
repz
ret
out
push
adc
mov
and
test
mov
call
add
negl
lcall
inc
xchg
push
pushf
loop
mov
dec
sbb
paddb
repz
jg
dec
pop
jbe
ds
inc
in
sub
mov
push
popf
xchg
inc
or
enter
out
inc
xor
xor
sbb
adc
mov
mov
add
iret
push
pop
jns
xor
and
jne
neg
scas
push
pop
jns
xchg
add
mov
out
loopne
repnz
cmp
in
push
and
shrl
lret
and
testb
or
scas
mov
adc
xchg
push
sarb
mov
xlat
dec
fs
or
jecxz
xchg
push
pop
jae
scas
jno
out
test
inc
push
pop
jns
xchg
js
daa
pop
jecxz
adc
and
jnp
dec
aad
sbb
pop
jle
negb
xchg
sbb
xchg
push
enter
mov
or
push
lret
xchg
push
pop
adc
mov
push
pop
jns
leave
into
push
movq
mov
gs
dec
dec
es
jns
xchg
xor
add
mov
ja
int
inc
pop
scas
push
xchg
dec
jnp
clc
mov
idiv
std
ljmp
and
sub
repz
fnstsw
lret
xchg
xor
insb
nop
mov
jl
xchg
push
pop
xor
mov
adc
lahf
push
pop
jns
shrl
xor
jmp
sbb
dec
mov
jecxz
jns
xchg
shl
push
and
shrb
pop
cli
xchg
dec
out
sbb
stc
repz
ja
jns
mull
out
push
adc
mov
ds
cli
out
repnz
sbb
lret
int3
mov
jp
jg
cld
dec
in
xchg
mov
push
pusha
rolb
std
add
lahf
cmp
sbb
aaa
cs
cld
stc
repz
push
test
out
or
aaa
jge,pt
push
sbb
lahf
aas
jg
jge
mov
aam
lock
push
stc
repz
popa
jbe
out
jecxz
mov
in
inc
pop
jle
cld
sub
pusha
incl
sbb
out
lret
xchg
ja
adc
sub
mov
fists
jns
pushf
and
pop
dec
sahf
and
dec
aas
lds
jns
xchg
jb
sub
ljmp
pop
push
pop
jle
into
out
dec
test
iret
movb
bswap
stc
lahf
inc
push
aaa
xchg
repnz
xchg
jl
shlb
cmp
sub
scas
mov
mov
sbbl
mov
jo
stc
inc
mov
jns
push
outsl
jl
test
or
bound
in
lret
out
lea
mov
fsubr
and
cld
inc
inc
je
fildll
adc
cli
mul
outsl
dec
lret
aas
daa
push
fsubs
jg
cld
scas
ret
test
pushf
or
mov
in
lahf
push
jmp
adc
add
push
clc
repnz
aas
scas
fdivl
push
movsb
popf
iret
xor
lahf
pop
mov
inc
lock
sbb
stc
mov
mov
mov
sub
jle
xor
push
cmp
pop
call
sti
xor
negb
andl
in
or
bound
lret
lahf
pop
jle
insb
int
pop
rcr
in
testb
repz
aam
ds
scas
mov
jae
cmc
mov
stc
imul
daa
mov
adc
xchg
out
aas
fs
sbb
add
repnz
mov
aam
aam
pop
sarl
lret
iret
scas
outsb
stc
adc
sti
add
movsb
pop
cld
stc
repz
mov
pop
lcall
loopne
push
jle
subb
mov
jmp
negb
stc
repz
pop
sub
push
outsb
orps
rclb
jg
cld
cmp
sbb
xchg
imull
ds
lods
repz
lahf
cmp
les
push
loopne
mov
cld
stc
dec
outsb
push
std
movsb
push
pop
cmpb
mov
push
addr16
mov
stc
push
popa
test
cmp
cmp
adc
mov
mov
fdivrp
std
cmp
sbb
bound
cmpsb
dec
repz
jo
in
xchg
out
movsl
jg
cld
stc
into
pop
adc
dec
inc
and
divl
mov
and
arpl
push
repz
ret
outsb
mov
aaa
pop
jl
cld
stc
inc
cmpsl
mov
pop
sarb
mov
lahf
pop
adc
pop
mov
mov
in
cmp
xchg
cld
stc
repz
mov
fstl
test
dec
xchg
imul
aas
jg
adc
jge
inc
fcmove
and
in
mov
loopne
lock
ljmp
hlt
jb
je
divl
mov
cld
mov
sbb
ja
ja
mov
lret
push
mov
mov
inc
iret
cmc
fcomps
test
sub
and
add
sub
divl
xchg
fs
insb
push
cmc
inc
mov
scas
mov
cmpb
pop
cmp
cli
add
repnz
popf
icebp
xchg
sub
push
adc
and
mov
in
mov
xchg
push
iret
movsl
outsl
pop
std
repnz
pop
dec
lock
mov
mov
movl
add
dec
out
lahf
aas
sbb
push
outsl
stc
and
stc
cmpsl
xor
lret
ja
mov
aas
jg
cld
mov
pop
and
mov
adc
lret
pop
pop
pop
jecxz
repz
lahf
imul
dec
mov
push
mov
lea
stc
insb
js
lock
fwait
ss
jle
xor
data16
mov
cld
stc
repz
fcmove
jns
push
je
out
sahf
jl
mov
dec
xor
mov
and
push
rcrb
in
push
pop
scas
pop
pop
and
pushf
aas
push
mov
iret
hlt
cli
push
push
ds
push
loopne
pop
pushf
sub
inc
subps
jg
stos
cmpsb
bound
sbb
scas
mov
pmaddwd
push
scas
lock
fists
lret
lock
xor
xor
shl
lret
adc
setg
mov
out
cli
hlt
insl
or
inc
clc
incb
jg
cld
stc
and
dec
pop
mov
pop
xor
aad
iret
lahf
aas
pop
sbb
mov
jbe
pop
mov
push
daa
push
xchg
stos
mov
sub
lcall
ja
xchg
push
pop
adc
testl
cld
mov
jb
xchg
xchg
add
fildll
repz
jbe
gs
jns
ja
imul
sub
push
stc
int
cmp
repz
out
lret
mov
test
repz
push
fidivrs
dec
call
popf
cli
out
or
and
lret
xchg
sub
rol
xor
mov
lahf
aas
jg
test
adc
push
repz
pusha
ja
pop
cmpsl
insb
sti
pop
je
adc
punpcklbw
fadds
stc
jle
arpl
cld
scas
mov
lret
xchg
incl
xor
add
das
aam
xchg
xor
pop
fsubl
in
das
faddl
repnz
cli
in
pmulhrw
movsb
in
cld
pop
clc
mov
fwait
sub
jb
inc
iret
iret
lahf
aas
jg
iret
pop
or
ror
cmp
sub
outsl
jecxz
rol
enter
ds
in
das
lock
cmpsb
sahf
out
mov
gs
xchg
dec
fnstsw
sub
push
out
repnz
jns
or
mov
pop
lea
inc
cmp
xlat
jl
jl
push
pop
jns
xchg
xor
mov
and
mov
in
mov
lods
jp
les
pop
sarb
ss
push
jae
cld
pop
les
dec
mov
test
lcall
jg
jb
mov
add
jg
cld
add
cmp
jo
cmp
ret
sub
mov
jmp
shl
subb
out
in
out
or
cli
pop
cmp
sub
cld
pop
clc
jno
dec
ds
mov
xchg
pop
push
adc
or
push
in
dec
push
out
lahf
xor
hlt
fisubs
mov
orb
cld
stc
adc
loope
mov
push
es
call
imul
lahf
aas
xor
fsub
mov
repz
scas
popa
fistps
mov
pusha
jp
das
cmp
jle
cld
imul
xor
call
arpl
jg
sub
or
sub
stc
repz
out
and
lahf
aas
jg
add
jmp
add
inc
xor
repz
push
inc
xchg
int
xchg
xchg
xor
into
daa
das
jg
cld
xor
or
stos
mov
lahf
pop
push
outsb
xchg
mov
stos
out
lock
stos
scas
mov
hlt
or
dec
adc
daa
dec
push
cld
stc
repz
aaa
arpl
mov
dec
ss
iret
lahf
aas
jg
dec
xchg
xchg
adc
push
sub
in
sub
imul
fs
sub
notl
shrl
push
mov
pop
out
sahf
out
sahf
out
stos
xlat
mov
xchg
in
out
out
push
sbb
cmpsb
cld
cld
stc
movsl
outsb
lock
dec
mov
test
sub
sub
push
mov
mov
enter
mov
jno
pushf
iret
lea
pop
xor
repnz
ljmp
add
scas
les
iret
xor
pop
sub
or
mov
das
scas
mov
jp
inc
sub
xchg
or
stc
mov
dec
mov
xor
js
lahf
aas
jg
fstpt
push
cmpsb
mov
dec
scas
mov
test
add
repnz
stos
cmp
or
pushf
adc
or
pushf
lea
mov
adc
jl
xchg
jecxz
es
push
in
dec
fsubr
jle
mov
test
in
mov
sti
mov
inc
xor
scas
cld
jb
sarb
repnz
stos
lds
cld
jno
aas
addr16
popa
pop
jns
xchg
push
loope
pop
bswap
movsb
mov
pop
jns
in
push
scas
adc
pop
mov
and
push
or
dec
push
push
fnstsw
cmp
push
pop
test
mov
cli
cmp
pop
jns
pop
adc
rcr
das
lahf
sbb
lret
sarb
jns
xchg
xchg
test
jecxz
adc
adc
sbb
mov
je
in
in
adc
in
lahf
push
dec
mov
adc
test
cmp
incb
insl
std
mov
jmp
repnz
das
cmp
push
das
cmp
pop
sahf
loopne
sub
sub
lock
ds
in
pushf
jns
ss
daa
test
popa
sti
cli
pop
jo
push
fisubs
jle
xchg
adc
lret
outsl
hlt
in
mov
mov
movl
and
mov
cld
stc
repz
test
sub
aad
push
sub
pop
jle
sbb
inc
jecxz
movsb
push
pop
jns
add
out
mov
loop
insl
inc
cmp
in
sub
int3
lret
movsb
clc
test
stos
push
ja
aas
jg
dec
mov
test
lcall
xchg
add
lret
scas
sti
repnz
imul
lahf
scas
sbbl
aas
lret
mov
xor
add
push
xor
scas
mov
cmp
push
mov
sub
lret
fisttpl
arpl
xor
lret
bound
xor
xchg
repnz
lods
aam
and
inc
sbb
ret
mov
cmp
in
popl
add
test
fistpll
mov
test
popl
add
repnz
iret
lds
scas
clc
adc
mov
or
or
sbbl
mov
jl
fs
js
int3
pop
cmc
add
pop
fidivl
pushf
jl
push
shll
scas
imul
aas
outsb
push
adc
pop
fwait
sub
in
push
dec
or
xor
and
das
push
pop
sarl
inc
and
fistpll
fucomi
push
pop
jle
jbe
lahf
movsb
iret
xchg
fdivrl
sub
cmpl
mov
xchg
pusha
or
mov
gs
test
pop
cmpsl
mov
comiss
aas
in
scas
mov
ds
xor
and
xor
mov
test
and
stos
clc
sahf
fwait
xchg
aaa
call
sahf
orl
iret
lahf
aas
lods
pusha
inc
addl
adc
stc
repz
add
movsl
mov
xchg
ja
jg
sub
xchg
aas
pop
divl
loope
daa
loope
lret
jg
jno
fimull
and
lock
pushf
mov
cld
fstpt
test
xor
ret
add
mov
out
mov
imul
ret
mov
in
test
jge
incl
pop
and
lods
pop
out
jmp
out
push
cmc
aam
inc
mov
lret
out
inc
ljmp
jg
sti
cmc
jb
sbb
gs
outsl
daa
pop
inc
call
lods
test
jg
cld
stc
int3
jo
mov
outsl
jb
js
mov
das
aas
pop
push
nop
inc
lret
jnp
shll
fucom
xchg
push
pop
shrb
cld
xchg
ja
xchg
push
pop
jns
mov
dec
lcall
loope
push
pop
jns
cmp
insb
stos
loopnew
fmuls
xchg
inc
cmp
adc
in
cmp
xchg
xchg
fld1
cli
stc
dec
jns
xchg
push
ja
xchg
push
inc
jne
sub
lcall
push
pop
mov
and
mov
out
mov
outsl
arpl
stos
roll
cld
stc
mov
nop
or
test
fstpl
lahf
aas
jg
loopne
pop
push
scas
dec
sub
mov
scas
jns
lret
out
mov
cmp
xchg
hlt
mov
jo
pop
cld
push
pop
push
inc
lcall
pop
fbld
dec
xor
and
sbb
fiaddl
je
stc
test
pop
jns
iret
ret
outsb
jno
es
pop
rol
aas
xor
in
lods
push
add
in
negb
stos
popl
push
jg
push
pop
pop
xchg
push
pop
jns
jnp
dec
mov
mov
fidivs
and
into
insb
sbb
aas
jg
cld
push
icebp
sub
push
push
loope
leave
arpl
dec
pop
shl
out
lahf
or
push
add
xchg
sbb
fcoms
std
jbe
hlt
jecxz
jge
sarb
xorb
cs
or
enter
jmp
iret
loopne
sub
fbstp
cld
stc
repz
repz
popa
dec
shlb
or
iret
lahf
aas
jg
lahf
pop
jo
shr
dec
insb
jecxz
jge
cld
stc
repz
and
rorb
cmpsb
push
xchg
or
xchg
xchg
sub
mov
std
xchg
mov
xor
mov
add
jo
inc
xor
push
mov
repnz
xor
add
fstpl
aas
lret
scas
cmp
mov
cmp
cmc
idivl
dec
lock
lahf
incb
push
mov
inc
or
pop
pop
or
adc
pop
in
push
sub
and
jg
cld
ds
xchg
inc
dec
sub
iret
lahf
pop
adc
test
inc
aaa
rcll
loope
stc
repz
out
or
rol
leave
adc
lods
mov
jl
jne
scas
mov
ljmp
stos
lahf
das
lock
pop
out
add
xchg
mov
stc
repz
push
mov
jae
aam
aam
rolb
xor
jg
cld
xchg
arpl
dec
js
pop
cmp
push
in
iret
lahf
add
mov
jp,pn
push
scas
stc
stc
pop
lock
lock
mov
xchg
sbb
mov
mov
repz
aam
mov
sbb
xchg
and
mov
or
repnz
push
aas
mov
repnz
dec
fcomps
dec
push
out
cmc
xchg
repz
mov
or
inc
loop
call
sub
push
sahf
sbb
add
scas
mov
lea
mov
lret
fs
fiadds
repnz
gs
cld
adc
iret
mov
add
push
dec
sbb
jecxz
push
das
jg
inc
scas
dec
pop
es
fiadds
setg
inc
mov
ja
cld
cld
into
daa
js
cmp
test
inc
lods
jecxz
jg
fimull
lock
rcrb
addb
sahf
mov
sti
repnz
arpl
sub
adc
mov
dec
stc
stc
repz
dec
rcrb
outsb
aam
dec
inc
lcall
lods
test
mov
mov
in
jne
sbbb
lahf
outsb
jo
adc
into
cmp
mov
stc
cld
stc
rcr
mov
mov
jb
cmp
aad
in
lahf
aas
pushl
jo
jle
aas
add
pushf
movsb
jnp,pn
mov
cld
add
push
mov
sahf
push
xchg
or
pop
xchg
mov
lea
jmp
lret
fsubp
mov
ret
clts
divl
iret
lahf
pop
scas
push
push
push
pop
push
repnz
jl
fbstp
mov
js
sti
in
sub
push
mov
ror
movsb
lahf
das
lret
mov
jp
push
cli
cwtl
pop
test
out
mov
in
adc
jmp
or
test
mov
cmpsb
adc
mov
imul
pushf
or
pop
ljmp
xor
xlat
xchg
jle
bnd
cmc
cltd
pusha
xchg
adc
mov
xchg
int
cmp
add
out
mov
push
push
aad
movb
jle
ljmp
and
mov
cld
stc
repz
lods
add
rcrl
push
inc
test
jnp
lret
fdivr
pop
fsubrs
in
testl
mov
mov
pop
push
jmp
lds
les
adc
xor
icebp
lds
cmp
fisubl
sub
test
mov
loopne
cs
add
xor
jg
sar
in
enter
dec
lods
pop
int3
mov
or
ds
fstps
adc
mov
push
js
sti
mov
andl
in
outsl
std
mov
in
popl
push
fldenv
aad
add
out
jmp
jecxz
lret
jg
out
mov
ss
icebp
insl
jle
pop
scas
mov
outsl
fists
push
stc
loopne
iret
aas
inc
es
stc
add
xchg
out
fdivl
pushf
xchg
scas
pop
movsl
inc
cmp
in
ja
dec
lods
test
outsb
rcl
cs
inc
orb
cli
inc
in
push
mov
in
pop
sahf
lods
sti
dec
push
and
mov
cld
stc
pop
out
popa
and
cmp
dec
lock
or
jg
enter
cmp
ffree
pop
out
jle
repnz
pop
mov
pop
mov
repnz
lret
sub
fmull
outsl
mov
sbb
cmp
dec
outsb
pop
xor
jp
fdivrp
inc
dec
mov
xchg
lods
stos
cmpsb
dec
or
pop
das
add
cmp
adc
repnz
aaa
popa
lret
scas
imul
jg
xor
movsl
fnstenv
push
lea
mov
mov
cli
jp
xlat
jnp
push
mov
jle
dec
push
das
out
into
lcall
xchg
pop
add
ljmp
iret
mov
test
lret
ret
adc
popa
jg
cld
stc
dec
aad
add
rcll
push
cmp
iret
lahf
aas
push
test
popf
loop
js
repz
ss
hlt
jno
loopne
jne
cs
dec
mov
sub
jae
pop
lret
inc
out
into
lahf
aas
jg
cltd
insb
jecxz
inc
sub
cmpsl
daa
pop
cmc
dec
mov
in
iret
xchg
jge
aaa
or
and
iret
pop
pop
out
jns
lods
lahf
out
push
add
cld
cld
stc
sbb
jecxz
loope
jbe
icebp
sub
out
cmpsb
outsb
cmc
mov
imul
es
je
scas
shr
jo
pop
pop
jns
xchg
lahf
fisttps
sahf
xor
loopne
ffreep
das
ja
mov
mov
scas
mov
out
and
adc
out
cmpb
dec
jg
pop
push
pop
jns
daa
cltd
ja
lahf
push
sub
mov
xlat
test
xchg
loope
lret
mov
lcall
bound
test
addb
leave
cli
sub
cmovp
mov
jmp
sub
in
mov
out
shrl
movsb
clc
in
out
fisubrl
test
jae
add
out
outsb
push
loop
dec
stos
mov
add
cld
and
or
inc
mov
mov
rcrb
dec
jb
add
gs
mov
xchg
cmpsl
sbb
jnp
add
xchg
and
lahf
add
in
aas
push
clc
aas
das
mov
xchg
lahf
pop
outsb
jae
xor
scas
pop
pop
stc
repz
aas
mov
jb
js
aam
aas
jg
cld
mov
xchg
in
inc
por
xchg
or
jl
call
int3
cwtl
dec
pop
into
fildll
sbb
cld
stc
repz
jge
std
test
subb
mov
aas
dec
push
inc
and
cmp
repnz
mov
mov
lock
sarl
mov
sub
std
xor
xlat
or
test
stos
cmp
andb
out
js
and
sub
pop
or
scas
mov
mov
decl
repz
cmp
pop
loopne
mov
das
pop
lar
mov
cmp
mov
xor
xchg
lahf
push
mov
test
adc
push
pop
adc
pop
scas
mov
and
xchg
aad
jg
jle
daa
mov
push
int3
repz
aas
jmp
mov
jns
fsubrs
mov
sahf
mov
cld
stc
repz
pop
jae
fstp
aaa
xor
outsb
hlt
mov
and
adc
dec
xchg
inc
jp
loope
xchg
add
inc
call
js
fisubrl
lret
pop
pop
mov
fsubs
leave
sbb
pop
lret
mov
adc
adc
sub
in
fstp
cwtl
lret
push
cli
repnz
xchg
aad
popf
add
mov
stc
repz
outsb
sub
pminsw
adc
dec
xchg
xor
loope
cld
repnz
pushf
insl
dec
xchg
and
sub
dec
daa
dec
inc
sub
jg
cld
stc
repnz
xor
add
stos
jo
mov
jne
push
push
pop
jns
pop
and
xor
mov
jns
xchg
mov
push
and
movntq
out
scas
lcall
push
mov
dec
xlat
dec
in
cltd
xchg
push
fdivrp
pop
frstor
das
xlat
shrl
fsubrl
pop
fs
pop
cmc
lret
cmp
add
call
out
and
cs
xchg
pop
cmc
dec
ficomps
rcrb
push
xchg
scas
hlt
jecxz
jbe
stc
repz
repz
stos
call
push
push
ror
lahf
aas
jg
mov
sbb
shlb
cld
stc
repz
mov
push
gs
ret
lahf
aas
jg
dec
fcoms
es
aad
movsl
stc
repz
inc
cmp
mov
push
int3
inc
dec
sbb
cld
orl
xor
out
mov
test
fisubrl
jo
cld
stc
add
dec
and
test
jb
and
fsubrl
ja
jle
pop
ds
arpl
sahf
xchg
icebp
in
out
rclb
fidivrl
add
das
test
sub
scas
shl
cmp
stc
movsl
sahf
inc
out
add
mov
cld
ret
dec
loope
cltd
test
pop
mov
dec
push
pop
jns
mov
lret
or
in
push
addr16
push
add
out
inc
test
stc
and
xor
xor
push
mov
imul
add
rcrb
not
adc
aas
sub
fstpt
jle
lock
daa
mov
repnz
cmp
pop
cmp
push
sahf
cmc
dec
fsub
lret
sub
jb
cmp
pop
inc
xchg
push
pop
jns
push
add
mov
fidivrs
in
adc
ss
jg
icebp
divl
in
in
xchg
das
push
into
cmp
test
repnz
lret
pop
rcl
sub
sbbb
hlt
push
cmp
leave
clc
mov
jbe
lds
aas
add
roll
push
fcoms
out
lret
iret
cmp
test
pop
pop
lods
movsb
out
pop
xchg
sub
inc
dec
out
std
imul
test
loopne
out
ds
push
outsl
les
repz
fs
repnz
repz
int3
mov
ret
mov
jg
add
sub
mov
out
lahf
aas
clc
jo
pop
push
stos
loop
popa
data16
clc
in
add
nop
xlat
mov
outsb
je
push
xor
cld
mov
dec
ror
ds
iret
lahf
aas
ljmp
repz
mov
inc
ret
daa
cli
repnz
in
stc
adc
loope
lcall
jg
cld
cltd
xor
add
and
stc
sbb
das
lahf
aas
in
add
mov
adc
lahf
aas
aas
mov
inc
sbb
add
dec
popf
dec
inc
cmp
out
shlb
daa
push
inc
pushf
mov
out
jg
cld
stc
pop
cld
push
adc
daa
call
ja
cs
cmp
and
mov
push
pop
jns
addl
push
pop
iret
sti
jecxz
xchg
jge
in
or
cmpsl
leave
mov
jmp
dec
scas
dec
je
mov
and
fisubs
xchg
xchg
xchg
ret
add
jnp
aas
pop
ffreep
cmp
pop
cli
repnz
cmovg
orl
pushf
jb
xchg
testl
fiadds
outsl
imul
add
sbb
cld
stc
push
cli
shrb
das
jge
adc
xor
repnz
iret
in
das
xchg
jp
inc
xchg
sbbl
push
mov
enter
mov
lret
mov
add
jmp
mov
sti
mov
and
pushl
repz
inc
loopne
cs
es
xchg
pop
outsl
inc
or
pop
lds
ret
jne
cmp
dec
sarl
lds
repz
pop
and
jmp
jno
dec
iret
test
je
mov
sbb
or
nop
dec
les
xchg
inc
repnz
mov
inc
jmp
pusha
sub
pop
lret
mov
mov
mov
loop
scas
mov
cmp
mov
push
lret
mov
add
scas
pop
aas
add
pop
out
jle
repnz
dec
arpl
rol
scas
out
iret
push
sbb
das
mov
or
and
mov
repz
ss
imul
jb
xchg
ja
repnz
in
insl
cmp
push
mov
cld
cmp
push
fisubl
cld
stc
and
scas
aad
movsb
inc
adc
and
jg
pop
sbb
mov
lahf
outsb
lock
lea
notl
into
gs
loopne
sbb
daa
loope
push
inc
push
addr16
cld
cwtl
leave
cmpl
rorl
je
out
lahf
adc
in
test
js
jle
jg
cld
stc
sub
sub
and
pop
jl
sti
loopne
std
mov
adc
shrb
mov
fbstp
inc
std
add
cwtl
cld
stc
repz
hlt
push
xchg
inc
cmp
mov
pop
jle
lods
pop
jo
pop
mov
pusha
fs
mov
movsl
test
dec
sub
or
cmp
in
inc
mov
jg,pt
lret
lret
or
jg
xchg
adc
clc
sahf
dec
fbstp
cld
push
and
add
xchg
mov
push
lea
stc
repz
in
mov
xchg
repz
push
jb
icebp
dec
cld
repnz
fs
sbb
jl
inc
clc
repnz
push
cmp
ljmp
repnz
iret
adc
out
das
outsb
mov
xchg
sub
bound
cld
stc
push
imul
cmp
mov
or
lahf
aas
lods
imul
cmp
or
iret
dec
pop
loopne
mov
mov
pop
fnstcw
adc
jae
mov
sbb
ret
inc
in
das
lahf
and
cld
divl
and
imul
push
pop
jns
xchg
loop
add
pop
cmp
adc
mov
fnstsw
mov
cltd
dec
cs
inc
inc
std
jnp
ja
sbb
lret
push
jle
aas
jg
loope,pn
mov
pop
inc
popf
jp
insb
mov
jmp
fadds
aam
test
fwait
mov
lahf
mov
push
adc
stc
out
lahf
aas
jne
mov
jl,pn
stc
repz
dec
dec
in
adc
sub
jg,pt
and
test
dec
and
mov
icebp
popa
imul
shlb
repz
mov
ja
das
or
fidivrs
pop
xchg
rcr
push
int
adc
in
push
jae
into
or
pushf
popf
nop
adc
dec
pusha
lret
xchg
push
pop
in
cmp
fs
mov
incl
out
cmp
jg
jle
mov
mov
iret
lahf
aas
fisubs
scas
pop
adcb
aas
add
arpl
xchg
xchg
lahf
imul
mov
out
cmp
dec
pop
cmp
scas
push
or
jg
sub
clc
stos
dec
scas
xchg
out
call
jg
or
shlb
addl
jmp
ror
scas
cmpsl
mov
mov
rcrb
push
in
dec
jmp
mov
pop
inc
cli
psubsw
or
aas
jg
cld
out
and
add
add
pushf
out
sbb
xchg
repz
lahf
inc
adc
das
lcall
mov
add
mov
xor
xchg
iret
lahf
aas
mov
mov
fdivl
push
sbb
add
lahf
std
jb
mov
iret
jp
sub
adc
mov
jg
sub
scas
adc
push
inc
test
int3
pop
inc
jg
fbld
daa
fucomp
mov
out
lahf
or
cmp
xor
shll
cs
cmpsl
mov
jg
cld
stc
xor
ds
das
shll
das
aas
jg
aas
rcl
insb
sub
out
icebp
pushf
sub
mov
cs
outsl
test
sub
jle
imul
or
in
dec
sub
cmp
push
jecxz
les
ljmp
lret
mov
das
out
movsbl
ljmp
aaa
shl
movsl
or
sahf
aas
ret
inc
lcall
idiv
dec
jmp
sbb
mov
jb
inc
adc
dec
mov
cld
stc
repz
ret
cmp
push
movsb
prefetch
or
mov
inc
aaa
push
iret
lahf
pop
mov
lds
enter
repz
jmp
aas
xchg
in
push
or
iret
lods
cmpsb
jne
daa
and
jno
repz
push
sbb
inc
dec
adc
push
and
mov
xlat
fidivrs
std
jg
decl
add
jns
xchg
push
pop
and
cltd
arpl
mov
push
pop
out
add
push
iret
in
in
xor
jns
bound
xchg
mov
xchg
test
fstps
push
mov
push
pop
jns
jns
cmp
aam
fnsave
pop
pop
jns
out
add
jns
cmp
ja
dec
out
cmp
push
xor
fucomp
cmc
pop
cmc
jb
das
mov
in
mov
std
rcl
clc
rcr
rol
and
xchg
push
pop
jns
mov
daa
dec
cltd
mov
add
sub
pop
jns
loope
rclb
test
dec
ret
pop
jns
xchg
repz
jns
shrl
pusha
mov
pop
test
xchg
push
xlat
jns
sahf
loopne
es
mov
xchg
mov
cwtl
ror
sub
mov
inc
sbb
mov
mov
loopne
incb
ja
cmc
inc
xchg
jp
jmp
mov
pop
call
sub
adc
lret
sub
jle
xchg
jl
mov
push
pop
sub
mov
mov
dec
xchg
call
sti
or
out
xchg
sub
repz
aas
scas
mov
or
in
inc
push
mov
xchg
aas
fiadds
lret
sub
pop
inc
out
fwait
mov
test
push
push
xchg
nop
les
movsl
frndint
stc
repz
test
jge
rorb
je
inc
das
jg
mov
lds
das
lahf
pop
out
or
sbb
push
ret
ret
out
mov
pop
arpl
xchg
push
pop
jns
push
pop
dec
mov
push
je
sub
lret
hlt
xchg
sbb
scas
jns
pusha
bound
adc
cmpsl
mov
cmp
outsl
enter
add
enter
sub
inc
data16
xchg
lret
mov
scas
mov
mov
in
xlat
in
rcll
mov
add
cld
stc
adc
dec
xor
push
add
sbb
jbe
sbb
mov
xor
pop
add
ss
paddsw
dec
pop
jns
xchg
pop
push
mov
dec
out
cmp
imul
mov
cld
stc
repz
and
xor
test
test
mov
fcompl
repnz
lock
or
xchg
scas
mov
inc
cmp
dec
out
fs
xchg
lahf
jg
insb
cmp
mov
jle
insl
out
iret
sub
jecxz
iret
lahf
std
and
add
add
mov
jg
pusha
push
decb
adc
push
inc
xor
movsb
stos
xchg
lahf
xchg
iret
lahf
aas
jg
icebp
mov
aaa
mov
or
int3
inc
cli
in
out
fcmovne
push
lods
inc
xor
adc
out
out
pop
cld
mov
mov
xor
arpl
repz
xor
adc
je
sub
mov
stc
mov
popf
shll
fwait
das
ucomiss
mov
or
lock
xor
adc
cmp
add
repnz
inc
out
pop
fistpl
subl
scas
sbb
aad
scas
test
mov
lcall
sbb
iret
cld
lahf
mov
adc
xchg
mov
xchg
ja
mov
cmp
jg
and
push
mov
hlt
sahf
or
sti
push
loopne
fwait
hlt
pop
jle
cld
aad
push
push
cmp
jb
xchg
ja
test
jne
pop
cmp
std
leave
clc
sti
nop
incb
scas
pop
jg
or
in
push
fmulp
mov
add
gs
jns
pop
into
mov
add
rcr
inc
shrl
dec
call
xchg
sbb
or
cwtl
push
inc
and
mov
jle
push
sub
sbb
lahf
aas
je
jg
repz
mov
push
aaa
jnp
or
out
lea
in
push
pop
add
stos
pop
addr16
in
inc
push
pop
jns
into
push
push
dec
xchg
push
in
bound
mov
mov
mov
popl
std
idivl
out
out
dec
test
jg
sub
leave
pop
and
ljmp
das
out
nop
mov
and
inc
jmp
push
xchg
mov
stc
out
xchg
stc
inc
idivl
push
or
stc
out
lahf
aas
lods
int3
cmp
xor
add
pminsw
cld
stc
repz
sub
dec
cmp
jbe
ja
mov
out
pop
push
out
je
sahf
xchg
sbb
cli
xacquire
rolb
int3
jb
inc
das
jg
mov
jae
fs
fucom
iret
lahf
pop
mov
mov
mov
xchg
icebp
dec
loop
xor
dec
shl
aas
mov
fwait
cld
stc
adc
insb
and
cld
sub
nop
int
mov
jg
xor
jp
cwtl
add
sarl
inc
pop
imul
inc
mov
mov
sti
arpl
mov
mov
push
sub
out
cmp
mov
inc
lret
fsubp
mov
jg
nop
aam
inc
jae
aas
outsb
push
cld
out
mov
dec
xchg
lock
xchg
lcall
repnz
lret
nop
and
sub
int3
repnz
mov
mov
or
ret
jne
lret
mov
xor
pushf
xor
mov
aaa
push
mov
loope
fdivs
out
cli
pop
jns
fst
mov
cld
cli
or
out
test
jns
xchg
push
mov
insl
test
pop
das
push
pop
popa
cmp
rcrb
in
out
inc
jb
aas
aas
xor
loopne
lret
mov
repnz
mov
movsb
adc
and
je
repnz
inc
lea
xor
popf
aas
out
les
jg
mov
mov
xchg
rorl
mov
das
aas
daa
bound
inc
ret
mov
sub
or
dec
jmp
xor
mov
mov
inc
inc
pop
xor
mov
popf
jbe
lret
inc
lcall
andb
enter
mov
dec
push
pop
jns
lcall
cs
or
cltd
jno
scas
pop
jns
xchg
jmp
cmc
adc
jl
push
ret
mov
xor
lahf
pop
add
lea
lcall
out
pop
aad
push
pop
adc
call
or
mov
push
xor
aas
jnp
out
cmp
rorb
jg
adc
and
pop
jns
pop
pop
lcall
fdivl
repnz
lds
xor
pop
ss
fsubrp
xchg
popf
shrb
js
rorl
out
jns
xchg
add
es
push
xlat
mov
dec
and
xchg
push
sub
shlb
or
xchg
mov
aaa
leave
insl
fwait
outsb
cld
stc
repz
out
cmpsb
pop
pop
mov
js
pop
test
cs
aas
jg
shl
push
mov
sbb
lret
jl
out
push
add
pop
adc
scas
outsl
ret
repz
jge
sbb
jg
cld
enter
mov
mov
out
lahf
aas
add
cmpsl
add
stc
repz
mov
xchg
popf
mov
int3
jae
push
jl
lahf
movsl
ret
pop
adc
cwtl
inc
fisttpl
cld
stc
loopne
push
popf
std
out
fistl
sub
lret
sub
xchg
lods
xor
fcomps
scas
mov
sbb
jae
in
icebp
jae
std
jb
lds
gs
mov
push
inc
xchg
pop
jle
outsb
es
nop
jae
in
cmp
iret
ds
mov
mov
les
incl
push
cmpsl
jno
mov
jo
lahf
pop
dec
dec
rorw
push
push
out
movb
out
xchg
in
lret
pop
je
pop
ja
outsl
jg
cld
mov
fstpl
push
cmp
aas
cltd
xor
xchg
iret
lahf
xchg
mov
divl
mov
jg
sub
aad
mov
mov
out
lahf
aas
jge
aam
and
filds
daa
mov
iret
stos
push
pop
jns
pusha
iret
jecxz
ret
lods
std
out
jmp
outsb
cmp
pop
jns
xchg
sbbb
jnp
cwtl
cmp
push
in
push
leave
psubsw
mov
cltd
mov
push
fdivrp
fucomp
push
xchg
filds
fcoml
mov
jns
xor
fstpt
add
std
jb
xchg
aaa
pop
xchg
mov
add
test
iret
pcmpgtw
jmp
sbb
call
sbb
mov
cld
insb
push
inc
cmp
lahf
aas
jg
jo
xchg
and
adc
movsl
das
jg
fisttps
call
mov
stc
repz
push
fs
pop
stc
adc
inc
pop
xor
inc
incb
stc
cmp
mov
xchg
sub
jg
sbb
jecxz
data16
xor
or
push
push
scas
cmpsl
scas
test
sub
repnz
fidivrs
repnz
scas
mov
inc
mov
sbb
scas
mov
xor
popa
inc
scas
movsb
out
lret
mov
cmp
cltd
adcl
and
mov
jne
or
imul
mulb
mov
xorb
out
inc
shrl
pop
inc
hlt
add
cltd
push
mov
cmpsb
mov
pop
adc
adcb
jg
stos
mov
imul
or
in
out
aas
pushf
or
jnp
fiaddl
mov
sub
dec
out
mov
adc
xchg
xchg
jge
sahf
in
mov
jg
push
inc
adc
fsubs
adc
sbb
jg
pop
pop
push
sbb
in
mov
iret
mov
cli
push
xor
jno
fstl
fnsave
sub
das
add
nop
jnp
mov
push
sub
sub
std
pop
cmp
mov
mov
pushl
scas
mov
lock
inc
pop
and
in
push
dec
pushf
mov
repnz
sub
sub
dec
jmp
je
sbbl
in
pop
inc
mov
mov
div
out
dec
les
pushf
mov
aam
aas
xchg
push
pop
jns
sub
jmp
int
cmpsl
inc
out
pop
std
jb
cmpb
sub
adc
sub
xchg
lret
enter
xchg
dec
xchg
loope
ret
sub
and
push
or
jae
in
xchg
or
jl
dec
xchg
push
fsubrp
jbe
scas
test
imul
dec
cltd
imul
xchg
pop
dec
pop
inc
int
out
sahf
fdiv
repnz
dec
js
out
xchg
lods
mov
mov
or
data16
mov
ror
lods
dec
lret
mov
dec
inc
aad
out
mov
add
sbb
scas
insl
cmp
jge
xchg
push
jns
test
pop
popa
push
dec
mov
in
push
pop
inc
xor
ret
pop
imul
xchg
push
pop
jns
jecxz
bnd
push
lods
dec
pop
pop
pop
jns
xchg
inc
and
out
test
fisttpl
cld
push
push
out
out
cmpl
inc
cmp
call
aas
stos
xor
cmc
jl
dec
add
jne
inc
adc
jg
test
aad
pop
jns
xchg
push
fs
sahf
push
aam
jns
xchg
push
mov
mov
test
or
out
adc
push
jo
scas
pop
jmp
cli
sbb
jecxz
cld
stc
repz
int3
fnsave
xor
pop
sbb
das
aas
jg
jno
lods
mov
mov
pop
out
xor
mov
int3
sub
scas
sarl
pushf
mov
repnz
rorl
or
and
in
adc
jnp
push
fcmovnbe
xchg
lahf
pop
sahf
or
nop
jge
mov
mov
clc
xor
add
icebp
movsl
mov
ficomps
dec
stos
sbb
movsl
lea
mov
jecxz
cli
mov
ljmp
repnz
shlb
cmpsl
xchg
hlt
mov
add
sub
das
ljmp
xlat
jne
mov
cld
sar
in
jb
mov
xor
enter
fidivrs
and
jecxz
xchg
fisttpll
stos
outsl
inc
mov
mov
adc
jno,pt
jns
xchg
push
mov
and
mov
test
mov
in
push
pop
sub
aam
in
rcrb
pop
jns
out
icebp
sbb
movsl
in
ja
mov
fists
pop
fsts
iret
pop
loope
xchg
roll
mov
push
mov
xor
bswap
xchg
pop
jns
xchg
dec
out
mov
lahf
sarb
cmc
inc
sub
dec
jns
xchg
push
inc
fcoml
in
loopne
adcl
push
pop
fsubrs
clc
enter
inc
rclb
cmp
std
jb
inc
daa
inc
cwtl
pop
jnp
cmp
pop
mov
xchg
adc
adc
mov
cmp
adc
dec
mov
cmp
pusha
insl
xor
ds
adc
pop
add
outsb
mov
repnz
pop
mov
mov
add
lret
sub
ljmp
jns
in
insl
lock
nop
sub
lret
pop
pop
dec
mov
and
repnz
out
xor
xor
das
ja
out
dec
or
inc
fistpll
bound
mov
xor
adc
aas
hlt
out
cmc
stos
out
inc
ljmp
xchg
jge
in
dec
repz
and
dec
xchg
adc
fidivrl
jg
or
int3
and
roll
fwait
scas
dec
xchg
lahf
mov
ds
push
test
bound
jno
insb
cmp
jns
xchg
sub
inc
fidivrs
aam
xor
push
mov
cmc
rorl
jnp
loope
xchg
push
pop
and
mov
xchg
iret
sbb
icebp
cli
xchg
sub
pop
lret
push
daa
ret
loop
mov
loopne
scas
mov
fmuls
xchg
ljmp
sub
pop
sub
pop
outsl
ret
mov
jp
stc
out
aaa
negb
outsl
dec
pop
cmc
jmp
movsl
popf
pop
dec
jle
pushfw
dec
push
jo
cmc
push
lea
lahf
je
test
lds
lahf
out
mov
pop
movsl
in
mov
out
ds
lahf
mov
frstor
jp,pt
dec
js
cld
stc
repz
outsl
pop
fcoml
aam
je
pop
fbld
jg
sub
fidivrl
sbb
lods
in
das
out
and
add
mov
mov
sbb
xchg
mov
test
and
test
push
loope
bndstx
pop
scas
iret
mov
enter
in
out
add
pop
pop
mov
dec
add
mov
sub
pop
adc
scas
jo
in
push
mov
mov
jg
add
negb
mov
jle
orl
ss
lret
test
mov
out
cli
in
mov
scas
stos
push
loope
add
in
shll
mov
out
jns
in
sahf
les
int
test
or
lea
movsb
dec
cs
adc
jns
in
jbe
jo
jb
xchg
sub
in
push
dec
fstpl
lcall
fcmovnbe
das
push
pop
sbb
lods
sahf
jne
pop
inc
ror
and
push
cmp
aam
outsl
test
cmp
stc
pop
jle
and
sahf
cmp
out
xor
aas
mov
push
and
xchg
out
mov
cmpsb
dec
int3
cmp
int
push
sarb
cld
stc
mov
inc
cs
inc
out
rolb
or
lahf
aas
in
jae
out
inc
dec
test
mov
stos
pop
call
sub
pop
out
clc
cmp
scas
std
js
iret
lahf
aas
int3
fsub
movsl
sbb
imul
repz
iret
dec
or
js
mov
aaa
aas
jg
mov
sub
ja
out
lahf
into
or
sbb
push
insb
cmp
sub
cld
repnz
cwtl
lods
scas
mov
xchg
out
inc
jl
sahf
jb
fwait
cmpsl
dec
jl
pop
ljmp
scas
mov
inc
cmp
jbe
dec
mov
lds
mov
xchg
dec
insl
mov
loopne
xor
out
out
mov
int3
jae
adc
test
mov
push
pop
pop
sarb
xor
lret
idivl
xor
lahf
inc
jg
pop
stc
testl
lcall
jle
adc
fbstp
mov
stc
stc
and
xchg
mov
mov
ja
lds
ja
jecxz
xchg
ret
mov
adcb
loopnew
out
movsl
in
or
jmp
stc
mov
or
mov
dec
clc
stc
mov
cld
imul
int3
test
cld
aam
adc
jg
movsb
pop
ds
out
push
std
jno
or
aad
in
aas
jg
into
in
dec
cwtl
add
mov
mov
cmp
in
insb
mov
or
stc
pop
sub
das
loop
iret
jle
fwait
xchg
lock
outsb
mov
xor
cltd
xchg
cmp
mov
adc
stc
repz
into
pop
jmp
add
sarl
add
and
dec
movsl
jg
mov
mov
repz
int
outsl
js
xchg
sbb
daa
pop
push
fidivrs
mov
xchg
dec
inc
xchg
sahf
in
pop
jns
xchg
cli
and
in
insb
and
in
push
mov
rcrb
inc
adc
cld
stc
cmpsl
jle
jmp
mov
push
lret
lret
mov
or
cld
inc
jb
lcall
bound
sti
into
ret
and
mov
pop
lahf
aas
jg
into
imul
pushf
jle
clc
imul
jecxz
cs
out
ror
out
or
inc
out
push
cld
stc
repz
lea
or
fsts
ret
add
outsl
or
out
lahf
xor
mov
or
mov
or
shll
sub
inc
std
dec
jmp
jnp
sbb
sbb
cld
stc
repz
enter
ss
mov
sbb
sbb
pop
pop
iret
lahf
aas
jg
cmpb
pushf
and
repz
loope
fsubr
je
xor
pop
jne
in
jg
cld
stc
mov
aaa
pop
out
movsl
cwtl
inc
adcl
adc
jmp
mov
call
scas
lods
mov
pop
or
inc
iret
lahf
pop
add
adc
in
ret
daa
mov
out
les
push
mov
xchg
push
pop
add
dec
sub
pop
jns
outsl
mov
int
mov
pop
jns
xchg
jmp
sbb
loopne
ret
push
inc
jo
lret
xchg
push
jne
iret
xchg
sbb
jns
fstpl
pop
shll
in
decb
call
insl
out
dec
xchg
lahf
aas
jg
fwait
sub
enter
inc
push
mov
push
scas
jge
sub
divb
and
arpl
xchg
iret
aaa
ss
das
loopne
repz
cld
stc
repz
mov
fildll
adc
scas
or
mov
jo
cmp
pop
and
repnz
fadd
in
fisubrs
cmp
fwait
pop
jns
lock
lcall
pop
ds
das
push
shl
lahf
cmpsl
dec
sbb
clc
repnz
movsl
lods
sub
push
push
jg
cld
ret
lock
testb
xor
xchg
lahf
aas
dec
adc
sub
stc
repz
dec
xlat
es
add
and
sbb
je
push
fidivrs
subl
push
jno
das
adc
jg
xor
inc
out
cmc
lret
xchg
shll
add
aaa
stos
fbstp
mov
sub
outsb
mul
sbb
dec
lock
lea
dec
test
jns
dec
scas
mov
stos
iret
dec
jo
sub
enter
lret
bound
mov
aas
push
jle
in
jg
fidivs
loopne
mov
and
out
pop
test
scas
insb
or
jnp
repz
dec
or
enter
lret
mov
es
inc
xor
mov
lret
dec
jo
scas
outsl
dec
inc
adc
mov
mov
imul
lret
push
stos
push
nop
mov
ljmp
mov
ds
pop
fstps
lret
negb
jno
es
xor
lret
inc
adc
stos
andl
mov
jg
sub
push
mov
aad
imul
movsb
jbe
out
jae
mov
mov
stc
and
jbe,pt
fbstp
mov
cmp
jno
jmp
mov
mov
adc
hlt
lahf
stos
or
sub
cmp
sbbl
cld
mov
mov
sbb
dec
mull
jecxz
push
jl
lahf
aas
call
cs
mov
jmp
pop
jecxz
iret
mov
iret
pusha
scas
into
xchg
lock
repnz
and
mov
pushf
adc
scas
mov
mov
cmp
jecxz
out
sub
jecxz
iret
pop
sahf
enter
push
adc
sbb
in
push
fmulp
mov
mov
xchg
sbb
imul
ja
repnz
push
mov
fnstenv
out
rcrb
pop
mov
push
mov
xchg
push
fsubp
sub
xchg
cli
inc
dec
add
mov
inc
iret
jo
movsl
adc
rcrb
leave
pop
out
jns
lret
out
jmp
repnz
push
jl
out
lahf
fwait
xor
je
xchg
push
pop
pop
leave
scas
out
jmp
les
subb
mov
jmp
dec
mov
mov
jnp
ja
inc
cmp
adc
xchg
ja
xchg
hlt
xchg
jbe
mov
or
popa
cld
and
mov
cld
stc
repz
mov
inc
xor
inc
lahf
mov
hlt
mov
fbstp
jb
repnz
cmp
gs
mov
leave
add
pop
xchg
das
scas
int3
jnp
dec
xchg
mov
push
add
stc
repz
xor
in
imul
cmp
jge
push
test
mov
out
lahf
aas
stos
mov
dec
or
xchg
jg
cmpsl
fistpll
scas
push
adc
in
das
push
mov
sub
cmpsb
adc
repnz
lods
jno
or
roll
cld
dec
fadd
rcrl
cmp
aas
les
movsb
lret
rclb
mov
out
call
sarl
enter
xchg
jnp
scas
mov
inc
gs
int
jge
pop
jo
test
xchg
sub
xor
mov
jle
aas
pop
loopne
jmp
iret
or
mov
xchg
pushw
repnz
sahf
dec
and
and
push
cmpsl
ljmp
ja
es
cmp
scas
out
mov
mov
adc
push
push
xor
repnz
xchg
cli
mov
pusha
outsl
lcall
add
nop
test
mov
pop
lret
clc
repnz
aaa
jmp
cmpsl
sbb
xchg
out
lahf
repnz
push
sahf
cmp
in
sbbb
jb
push
pop
loopne
decl
cmp
fdivrp
aas
inc
adc
lea
leave
in
cmpsl
ja
pop
jns
fldl
jl
pop
fs
sbb
mov
data16
pop
in
fsubs
fstp
fildll
decl
push
aam
mov
mov
stc
xchg
das
movsb
das
pop
inc
inc
ficoms
jno
rcll
das
cs
mov
repz
out
fsubrl
arpl
test
test
push
inc
pop
or
mov
mov
ljmp
mov
je
xchg
jg
mov
inc
cmp
push
stc
add
push
push
jecxz
add
inc
clc
jnp
jae
sbb
adc
stc
add
bound
lods
mov
inc
push
out
mov
push
mov
jb
lret
loopne
jle
or
leave
repz
adc
in
push
jnp
mov
mov
das
mov
mov
mov
and
jmp
stc
repz
clc
pop
or
push
mov
cmp
mov
repnz
pop
and
jno
repnz
scas
mov
mov
repz
out
cmpb
jp
sbb
xor
sbb
movsl
or
jge
sbb
mov
roll
in
lret
mov
pop
into
mov
rol
sub
or
and
sub
outsb
sbb
scas
mov
sub
and
scas
jmp
and
xor
imul
and
fmull
outsl
ds
ss
cli
fimull
inc
hlt
scas
push
jmp
cld
stc
hlt
outsl
jp
cli
pop
mov
icebp
adc
das
xchg
lahf
aas
mov
sarb
jge
pop
push
das
lcall
mov
mov
out
lahf
sbb
xchg
cmpsl
dec
add
cld
stc
test
sbb
push
pop
dec
aad
mov
aas
dec
jne
in
stos
xor
repz
arpl
fisubrs
mov
xchg
adc
cld
cltd
cli
mov
jno
ds
jge
inc
pop
dec
pop
jle
loope
fdivrl
scas
or
pop
sbb
mov
fwait
and
repnz
lret
inc
cmpl
bound
lret
scas
sbb
mov
rcrl
outsl
mov
scas
mov
mov
test
pusha
js
xchg
xchg
sar
in
dec
mov
push
shll
add
out
icebp
test
vaddsubps
inc
iret
mov
mov
mov
popf
pop
mov
fstps
push
pop
lahf
aas
jg
fmulp
cmp
fisubrs
adcb
add
scas
int
pop
cld
push
sbb
mov
das
xchg
adc
out
iret
adcb
iret
dec
xor
xor
mov
mov
sti
das
ret
jg
jnp
add
add
mov
out
jg
add
mov
dec
in
in
dec
in
fstps
fidivrs
in
add
imul
out
out
mov
or
or
shl
lahf
lea
cs
xor
insb
add
xor
cld
stc
repz
test
cmpsl
dec
mov
rcl
sbb
lahf
aas
jg
popa
xorb
pop
xorb
pop
pop
ret
mov
sub
or
addb
outsl
bound
loop
xchg
jmp
mov
test
xchg
jg
jmp
jbe
jb
xchg
push
and
and
inc
sti
cs
pop
and
xor
mov
push
mov
repnz
jmp
mov
lods
xchg
les
cltd
and
das
sub
mov
fisttpll
pushf
shr
mov
dec
mov
dec
pop
fdivrp
add
inc
jl
xlat
daa
fs
pop
jns
out
sub
jecxz
pop
scas
mov
jb
inc
and
hlt
in
popa
in
sub
das
aas
lea
into
jl
sahf
inc
aas
movsb
lret
fildll
mov
lret
repnz
clc
loopne
mov
push
pop
pop
fstpl
scas
mov
testl
adc
mov
lret
scas
cmp
nop
in
add
clc
iret
es
mov
adc
pushf
std
dec
dec
mov
mov
aas
push
jmp
mov
test
repnz
cs
mov
push
out
adc
pop
push
outsb
cs
stc
cld
stc
repz
jge
scas
mov
mov
mov
sahf
jl
sbb
mov
movsb
repz
lret
push
dec
sbb
push
push
in
hlt
jg
cld
stc
mov
jg
dec
or
sbb
xchg
lea
sbb
test
lret
lahf
aas
inc
inc
xlat
aad
lahf
repnz
mov
mov
data16
bound
and
into
add
std
in
out
mov
dec
jb,pt
jmp
inc
adc
stc
push
cmp
in
rcr
jp
fidivrs
lea
mov
adc
in
inc
rol
push
jge
stos
xchg
jg
in
push
aam
jns
push
push
sbb
mov
mov
js
add
inc
or
sub
jecxz
jl
scas
dec
adc
iret
lahf
jg
ljmp
xchg
and
cld
stc
repz
xchg
gs
xor
and
out
lahf
aas
jg
jle
xor
in
mov
fst
jb
cmpsb
scas
rcrb
mov
jmp
cs
cmp
inc
adc
je
lea
fisttpl
and
cmp
mov
iret
jl
cld
stc
adc
test
movsl
pop
es
mov
mov
ja
or
adcb
into
mov
in
aad
push
pop
outsl
adc
in
daa
pop
inc
imul
mov
jl
adc
out
pop
in
cmp
mov
jp
xor
lods
jo
repz
scas
jle
sti
xor
sbb
jbe
iret
popf
aas
jg
cld
sahf
sub
mov
push
inc
mov
lahf
push
sbb
cld
mov
clc
xchg
clc
sti
in
bnd
inc
ud0
subb
cld
ret
clc
jle
and
out
into
sub
decb
xchg
inc
inc
fisttps
loopne
mov
sub
mov
jp
cmpsl
out
fdivrp
mov
cmp
testl
lret
sub
push
push
sbb
inc
jg
dec
mov
mov
jg
cld
stc
mov
lods
push
stos
mov
cmp
adc
pop
inc
incb
pop
cltd
out
outsb
pop
jne
xlat
xchg
ja
jle
sbb
aaa
sbbl
xor
mul
or
outsl
add
jnp
xchg
ja
ficomps
mov
mov
lea
push
pop
jns
addr16
mov
mov
sbb
dec
and
lret
xchg
push
mov
test
push
pop
jns
cld
aam
dec
cmp
dec
xchg
enter
xchg
jne
lcall
repnz
loop
add
bound
cmp
cmp
ret
int
data16
inc
call
inc
jns
lret
xchg
and
inc
out
and
sub
jno
fisttpll
inc
out
out
lahf
aas
jle
ret
jge
popa
int3
cmpsl
pop
push
cld
stc
repz
lds
pop
mov
call
test
aas
jg
push
cli
lods
lcall
iret
push
or
cmpsb
rcll
mov
stc
repz
ds
jle
xchg
repnz
xor
mov
cmp
les
clc
jns
aaa
test
add
std
lret
xchg
push
pop
mov
lods
pop
or
jne
call
cmc
inc
pop
mov
lock
sub
lahf
mov
sub
jb
mov
cld
stc
jo
mov
xor
mov
push
pushf
cwtl
xchg
iret
lahf
aas
loop
shll
pop
push
dec
or
iret
lahf
aas
jmp
mov
mov
and
lret
jnp
adc
dec
dec
ret
out
inc
movsb
aaa
shlb
and
pop
xor
jg
cld
lea
add
sbb
push
and
iret
mov
mov
pop
cltd
add
pop
jg
outsl
and
and
sub
test
jmp
les
rcll
xchg
cmp
clc
in
xchg
cmp
repnz
jns
mov
fbstp
scas
push
fsubrp
push
push
sbb
cli
and
aaa
cmpsl
dec
lods
sahf
jl
mov
cwtl
aad
dec
adc
stc
out
dec
aas
xor
mov
cmp
iret
lahf
aas
push
outsb
mov
pop
dec
popf
repz
jmp
or
mov
jle
cld
stc
push
and
adc
lcall
out
xchg
ja
pop
outsb
xlat
inc
iret
dec
out
outsl
mov
pop
sub
jecxz
rcr
das
lahf
adcb
loop
fsubp
test
jge
in
sub
jp
mov
cltd
fdivr
xchg
mov
bound
arpl
das
lahf
aas
pop
inc
shll
or
lret
out
cs
sbb
cmpsl
or
mov
xchg
sbbb
cld
pop
push
mov
pop
test
jg
lcall
cld
push
pop
push
aad
inc
lahf
jge
jno
push
pop
jns
pop
out
or
add
dec
test
xchg
push
xor
xchg
js
aam
jmp
sbb
lahf
jmp
in
das
jle
jns
repnz
xchg
mov
sbb
outsl
stos
push
xchg
jmp
xchg
push
pop
cmp
int
rep
daa
das
push
pop
jns
mov
pop
push
cmp
dec
mov
aam
shl
rcr
ljmp
dec
paddd
stc
xrelease
mov
imul
lahf
aas
jg
mov
inc
mov
in
loope
aad
xor
inc
call
out
adc
std
repnz
pop
insl
dec
pushf
cmpb
mov
iret
pop
push
mov
jb
cmp
push
int
sub
cld
stc
inc
ljmp
sub
and
lahf
cmp
aas
in
nop
xchg
jns
jns
shlb
repz
adc
or
jg
cmpsb
push
stc
cld
adc
jl
sub
repnz
mov
hlt
sub
leave
jg
lret
sub
sub
dec
add
jne
mov
out
dec
pop
mov
aam
shrl
cs
addb
aad
stc
stc
repz
test
test
jno
fs
stc
repz
mov
testl
lahf
aas
jg
ds
sub
pop
cmp
sbb
adc
div
out
sub
dec
pop
out
es
pop
fdivrp
jb
push
mov
or
dec
xchg
fwait
aad
jne
lahf
pop
sbb
and
cltd
add
loope
xchg
xchg
mov
repnz
repz
sub
dec
xor
mov
lock
in
push
ficomps
lea
mov
in
out
xchg
push
pop
jns
ss
sbb
jns
test
les
std
scas
push
mov
jmp
cld
stc
repz
xor
lods
out
dec
jnp
fs
sbb
das
aas
push
pop
mov
enter
jmp
mov
pop
cmpsl
cmp
aas
scas
fxch
mov
in
mov
and
insl
jg
lods
cld
sub
jle
jle
ret
outsl
xchg
sar
iret
lahf
orb
add
and
repz
in
jp
mov
fdivs
bound
or
pop
jle
test
lahf
adc
cmpb
jae
push
fdivrl
scas
enter
repnz
adc
or
mov
insl
jg
lret
sub
and
mov
pop
repnz
das
jmp
out
pop
and
mov
fsubrl
lret
xchg
fisttps
pop
jns
in
push
std
std
test
pop
sbb
pop
mov
add
out
add
sbb
scas
jae
mov
mov
pop
inc
fistps
mov
mov
lret
iret
lahf
xchg
clc
xchg
iret
int3
add
jg
scas
mov
sbb
add
test
mov
imul
aas
pop
cmp
lret
jae
jb
or
or
add
repz
into
lods
subl
mov
hlt
loope
inc
sbb
aas
jg
cld
ds
mov
in
xchg
andl
out
lret
iret
lahf
mov
test
out
aas
scas
mov
hlt
sbb
fistpl
sbb
jp
cmp
lret
xchg
ljmp
js
cld
lret
repnz
popa
lret
add
dec
fcomip
pop
mov
cld
jle
pushf
mov
pop
mov
mov
xor
or
les
inc
cmpsb
inc
inc
sti
repnz
push
lock
leave
inc
in
pop
mov
mov
or
loope
push
pop
jns
mov
push
push
dec
ret
out
or
pop
iret
or
pop
dec
mov
or
repnz
jbe
push
clc
cmc
adc
out
lahf
pop
out
dec
push
arpl
mov
pop
cmpsb
in
in
jae
jno
ficomps
insb
inc
jmp
pusha
xor
stc
repz
cld
mov
aad
push
sub
stos
or
jo
lcall
fdivrl
dec
mov
sbb
aam
into
pop
mov
cmp
out
jecxz
sub
mov
push
daa
mov
jle
outsb
and
xchg
rol
mov
popf
dec
lret
lahf
movsl
push
pop
fcoms
jns
jne
outsb
mov
mov
cld
sub
incl
loope
mov
lahf
aas
aas
jbe
ja
dec
insb
mov
notl
cld
stc
repz
xor
and
jge
or
mov
aas
jg
add
lret
cmp
rcll
clc
bnd
mov
jns
aam
xchg
std
les
push
dec
fistpll
fisubs
xchg
jle
imul
pop
dec
imull
in
inc
in
in
and
sbb
stc
repz
xchg
bswap
push
sti
and
call
mov
iret
das
push
adc
inc
hlt
xchg
push
pop
jns
lret
jl
dec
stos
or
in
push
pop
jns
fldl
pop
mov
clc
inc
jnp
lods
mov
jns
xchg
push
pushf
mov
lret
and
int
ja
pop
sbb
in
fistps
jb
adc
jns
xorb
dec
mov
inc
test
pop
jns
xchg
outsb
fldcw
inc
pushl
push
pusha
xchg
ja
pop
push
mov
mov
mov
fidivrs
in
jae
std
leave
dec
or
jp
pop
sub
mov
dec
inc
cs
cwtl
scas
pop
mov
ss
xchg
mov
push
lret
xchg
sub
andl
mov
outsl
adc
mov
lea
or
sahf
lfs
and
test
loopne
inc
std
std
repnz
inc
mov
rorb
xor
pop
jl
jg
loope
imul
adc
jmp
call
ficomps
xchg
jae
mov
jno
leave
pop
data16
jns
xchg
pushl
add
mov
pop
das
sub
movsl
pusha
imul
cmpb
mov
cld
adc
das
add
mov
shll
cmp
inc
jecxz
adc
cmp
jns
repnz
outsl
push
xchg
or
xchg
mov
fs
addr16
and
inc
inc
aas
or
sub
lcall
dec
push
scas
mov
inc
popa
in
push
in
dec
xor
add
repnz
mov
add
push
out
xchg
sub
xchg
mov
adc
loope
das
add
mov
mov
fsubrp
or
sbb
xor
pop
jns
xchg
jp
dec
cmpsl
fidivrl
mov
mov
mov
push
repnz
sub
push
int
faddl
fisubrs
out
mov
cmovae
pop
loopne
jl
and
lahf
aas
jecxz
cmp
mov
in
add
xor
das
stc
repz
xor
mov
pop
sub
cld
lcall
jmp
mov
iret
lahf
pop
add
ljmp
lret
out
out
xor
adc
pop
jns
leave
iret
dec
imul
movsb
push
mov
pop
jns
xchg
sbb
popa
cltd
adc
shl
xchg
push
mov
mov
fs
xor
xchg
lretw
lds
dec
lods
test
mov
mov
out
xor
cs
pop
rcl
lret
repnz
out
mov
ds
pop
cmp
js
add
mov
inc
lret
in
sub
pop
and
fidivrs
sbbl
scas
out
cmp
lret
clc
aas
movsl
das
aas
outsl
jo
inc
mov
mov
lcall
mov
push
fs
sub
cld
mov
mov
mov
pop
popf
jne
out
pop
xchg
jb
les
pop
lret
mov
cmp
push
neg
cmpsb
mov
inc
repnz
mov
aas
loop
out
call
stc
icebp
out
xchg
popa
out
lahf
test
sahf
add
cbtw
test
and
lret
sbb
sub
repnz
in
and
inc
pop
mov
xchg
sub
call
xor
jbe
scas
mov
inc
rcll
insb
cltd
popf
xchg
jge
inc
sar
lret
iret
ficoml
lea
stc
js
repnz
cld
fisubrl
out
fisubs
pop
mov
ljmp
fistpll
mov
dec
jl
inc
out
jl
pop
fidivrs
insl
stc
testl
cmp
clc
enter
push
lds
cld
cs
es
cld
xchg
xor
mov
aaa
fisttps
scas
mov
sbb
into
inc
inc
ljmp
sbb
mov
fs
ss
ficomps
sub
lret
iret
lahf
aas
fdivrs
outsl
scas
loope
in
loopw
bound
sub
testl
sub
movsl
push
cmpsl
mov
adc
mov
in
es
xlat
and
sub
jns
or
movswl
stos
adc
scas
les
fistpll
das
scas
mov
popf
pushf
sub
out
scas
outsb
dec
shlb
mov
jns
js
mov
stos
push
add
xlat
mov
aas
jg
add
icebp
adc
cld
iret
pushf
and
repnz
xor
jge
add
xchg
ficoml
fstpl
pop
incl
dec
stos
fstl
aas
scas
mov
lret
bnd
xchg
mov
repz
xchg
sub
jo
inc
add
sbb
mov
cmp
inc
jo
bound
scas
mov
and
iret
cmp
jmp
sub
mov
xor
jmp
pop
stc
xchg
jne,pt
fbstp
and
cld
les
dec
mov
mov
lahf
pop
pop
dec
and
repz
push
fsubrp
lret
ja
pop
mov
and
in
popf
fidivl
xchg
in
cvtpi2ps
cmpsl
cmc
cmpsl
inc
mov
jae
movsb
das
out
pop
jo
jl
cwtl
nop
lea
out
push
into
dec
jp
ret
and
and
es
cld
jne
ljmp
and
repz
jle
inc
fdivr
andl
cld
clc
lahf
loopne
pop
sahf
jl
popa
mov
adc
mov
sahf
pop
arpl
push
or
repnz
repz
add
and
stos
jge
loopne
lea
xchg
push
fdivrp
jl
mov
iret
sub
cmp
mov
and
in
xchg
cmp
xchg
xchg
paddb
das
xor
mov
shlb
clc
repnz
hlt
gs
cmp
dec
in
test
mov
xor
mov
mov
inc
loop
out
in
jbe
insl
ja
ja
sbb
int3
dec
adc
mov
scas
mov
clc
imul
mov
cwtl
mov
jecxz
in
cmpsb
sbb
xor
mov
fs
mov
pop
fists
imul
mov
mov
lcall
and
repnz
or
sbb
adc
dec
iret
mov
mov
lahf
adc
mov
scas
jmp
ret
push
and
scas
mov
dec
push
cwtl
inc
out
mov
repnz
xchg
sarb
sub
add
bound
mov
mov
lods
push
rcr
inc
mov
jnp
cmpsl
cmp
into
mov
jg
pop
jle
mov
scas
imul
lock
sahf
cmpb
decl
and
shlb
ljmp
push
adcb
inc
add
dec
jo
repnz
sub
popa
inc
push
mov
shrb
ret
push
mov
sub
pop
push
pushf
cld
or
stos
scas
jbe
cld
repnz
out
lret
ret
stos
std
jae
outsl
fsubr
mov
and
loopne
mov
cmp
je
jmp
cli
dec
testl
repnz
loope
cli
mov
xchg
and
sahf
std
pop
push
dec
pop
loope
push
jge
jg
in
adc
jnp
sub
movups
iret
lahf
aas
dec
push
dec
and
fidivrl
loop
and
mov
scas
aam
jo
cs
aas
jg
mov
pop
cmc
dec
out
sub
dec
push
loopne
popa
jb
negb
scas
mov
movsl
mov
imul
mov
out
jmp
out
lret
sub
jnp
jg
push
inc
lret
mov
jg
lahf
dec
dec
ss
xor
mov
pop
xchg
clc
sti
aas
cld
stc
daa
in
mov
popl
add
sbbl
add
jle
add
pop
ror
test
call
call
sub
fnstcw
mov
push
gs
add
mull
push
mov
add
mov
repz
les
popa
add
mov
cmpsl
ja
pop
jle
fsubrp
repnz
into
push
push
fistpl
jb
xchg
mov
mov
xchg
cmovo
xor
test
pop
repnz
movsb
stos
sub
xor
mov
cmp
cmpsb
pop
icebp
out
mov
adc
out
scas
lods
mov
cwtl
and
ljmp
pop
add
xchg
or
fidivs
movsl
pop
jle
mov
xor
cld
stc
sahf
fdivp
mov
aam
int
icebp
pop
lahf
aas
incl
scas
push
scas
mov
repz
in
push
mov
jmp
out
mov
icebp
adc
into
push
dec
pop
inc
icebp
jle
cld
pusha
iret
mov
cmpsb
repz
lahf
aas
jg
iret
test
mov
call
mul
out
mov
xchg
scas
or
testb
xchg
push
pop
mov
xchg
cs
pushl
inc
cmp
adc
call
lahf
es
xor
xlat
mov
scas
daa
faddl
std
insl
mov
mov
mov
rol
cmp
push
mov
and
fbstp
ret
xchg
jg
sub
shl
movsb
jmp
xor
loopne
inc
inc
xor
xlat
retw
pop
add
inc
test
stos
imul
push
mov
aas
jg
cld
test
and
cmc
push
fwait
hlt
aad
xor
pop
das
lahf
out
fsubr
jmp
jmp
paddb
repz
repz
pop
jmp
sti
ljmp
negl
or
mov
hlt
lret
out
xor
lahf
into
stos
cmp
jns
jno
cld
stc
and
add
sub
in
iret
lahf
aas
jg
call
or
sub
adc
repnz
in
adc
shrl
xlat
jns
lea
stos
mov
pop
fsub
xchg
push
pop
outsb
rcrl
adc
mov
fcmove
fidivrl
divb
arpl
push
adc
sbb
mov
and
cld
stc
repz
andb
or
outsb
test
aas
jg
mov
cwtl
sub
ret
add
test
mov
xadd
pop
shr
cmp
rolb
dec
lret
out
push
loop
shl
push
fmul
dec
adc
imul
pop
repz
lahf
jb
sub
or
mov
stc
mov
add
mov
leave
xchg
dec
pop
scas
mov
add
xchg
add
cld
stc
daa
mov
ret
xchg
dec
jg
aas
jg
cmpsb
pop
push
js
dec
and
bound
imul
sti
js
mov
cmp
jecxz
das
outsl
rcl
add
in
adc
pop
mov
jg,pt
cld
jle
daa
push
jae
in
div
lret
pushf
pop
repnz
call
lods
jmp
cmpsl
mov
jnp
gs
jg
adc
pop
jle
das
out
outsb
mov
das
movsb
jg
inc
ret
push
int
fiadds
cld
stc
repz
inc
arpl
adc
add
out
aas
jg
scas
cmp
or
cmpsl
mov
bound
inc
stc
repz
add
mov
xchg
int
inc
or
loop
pop
lock
or
repnz
mov
repz
enter
jne
push
lods
mov
xchg
pop
sbb
outsb
or
add
adc
jl
jecxz
push
outsl
das
scas
mov
outsb
in
data16
pop
and
mov
ret
arpl
daa
loop
iret
fbstp
mov
outsb
adc
in
cmp
sbb
int
add
cld
push
ficoml
and
gs
out
les
mov
rcl
push
cmpsb
lods
js
lahf
aas
jg
dec
sbb
rclb
mov
repz
movsl
stc
and
and
fidivrs
insl
add
enter
jge
adc
das
mov
cmp
sti
enter
cmp
movsb
arpl
jecxz
adc
xchg
sub
lock
push
mov
pop
scas
mov
dec
call
outsb
mov
mov
mov
fadd
std
pop
pop
push
dec
xor
scas
mov
or
shrb
sub
cmp
sbb
dec
mov
in
lds
inc
cmp
aas
jg
cld
scas
fimull
aad
jge
imul
cld
test
jne
add
lea
jmp
xor
mov
pop
ljmp
sahf
mov
mov
mov
aas
jg
sbb
mov
pushf
test
loope
mov
stc
repz
sbb
out
sub
stos
cld
mov
cld
pushf
jae
inc
fwait
rolb
adc
iret
inc
sbb
dec
aas
ss
inc
out
mov
fsubs
adc
outsl
or
lret
daa
lcall
push
stos
and
insb
cwtl
sub
jge
push
pop
jns
push
test
decb
jb
pushf
in
dec
in
lahf
lret
jo
or
dec
and
adc
das
and
jp
jmp
push
pop
jns
mov
ss
std
jb
xor
adc
pop
inc
cmp
push
xchg
mov
punpckhbw
sub
mov
out
iret
lahf
pop
sbb
popa
mov
mov
cld
stc
repz
adc
adc
andb
aad
mov
aas
jg
xchg
inc
and
fistpl
in
pop
fwait
xchg
lret
sbb
cld
stc
rep
ds
cwtl
xor
rclb
fmul
lahf
aas
jg
out
inc
out
lods
mov
popa
ret
xor
repz
call
imul
xchg
aaa
js
es
inc
flds
pushl
pop
jns
pop
fidivrs
dec
add
cmp
push
fstps
in
ja
mov
push
mov
roll
mov
lret
arpl
mov
out
and
mov
sub
scas
jae
mov
sub
add
aad
mov
shl
into
rclb
sub
test
enter
gs
in
outsb
xorl
or
xchg
ds
fwait
lahf
mov
or
dec
inc
mov
lds
ds
cld
stc
repz
inc
cmpsl
popf
lea
test
mov
btc
jg
pushf
jecxz
js
and
pop
daa
mov
aam
push
dec
iret
fcoms
int
cmp
scas
int3
inc
pop
push
repnz
sub
fbstp
cmp
repz
jmp
xor
xor
fcomi
iret
sub
repnz
jne
push
stos
fnstcw
sub
pop
rorb
mov
jns
sbb
xchg
cwtl
push
mov
lahf
pop
sbb
and
dec
pop
xlat
jmp
mov
push
call
fstp
loop
xor
das
xlat
out
xchg
mov
decl
mov
repnz
xor
jle
lret
cld
stc
cmp
mov
pop
mov
test
jg
movq
sahf
sub
cmp
repz
loopne
pop
hlt
push
mov
mov
jbe
pop
into
pop
mov
fisubrs
je
aas
mov
pop
dec
add
and
out
lret
iret
push
adc
mov
and
test
js
sti
imull
vmread
cmp
sbb
xchg
fstpt
push
xchg
pusha
pop
push
lahf
jg
das
mov
dec
adc
jp
repz
cmc
ds
xchg
shrb
mov
cmp
jg
cld
and
in
dec
cmc
into
xchg
mov
out
lahf
adc
sahf
mov
push
inc
xchg
stc
and
aas
push
push
jno
iret
jmp
stc
push
loopne
cmp
push
scas
data16
mov
xchg
scas
mov
mov
mov
shlb
cld
xor
and
jae
pop
in
push
ficomps
fists
and
addr16
pop
mov
inc
xchg
push
pop
jns
cmp
pop
or
cmp
mov
mov
jmp
xor
jl
stc
xchg
icebp
popf
jns
mov
mov
jg
sti
mov
shrb
fcompl
jno
xchg
repz
fwait
das
in
inc
mov
cmp
lds
jg
cld
jb
daa
sbb
inc
test
mov
dec
scas
mov
test
scas
mov
push
aas
popl
lahf
push
cmp
xor
lret
inc
push
iret
in
sbb
mov
jns
pop
scas
mov
jge
lahf
dec
and
sbb
push
pop
mov
cmp
stc
fisubl
mov
mov
sarl
jecxz
out
rclb
incb
jns
lret
test
test
fs
pusha
popa
cmpb
sub
movsl
mov
sub
fisttpl
fstps
scas
mov
sub
test
push
dec
ljmp
lret
dec
xchg
push
or
lret
scas
shlb
je
jo
inc
mov
fcmove
sub
dec
popf
inc
leave
femms
sahf
inc
repz
cld
sbb
sub
mov
in
push
jno
cli
in
inc
adcl
loopne
ficompl
cld
ficoms
mov
xor
aas
incl
in
scas
outsb
dec
loopne
push
sbb
add
sbb
pop
mov
xorl
rcll
push
lds
jle
inc
loop
iret
psllq
fsubrl
mov
in
dec
dec
cmp
out
dec
lret
inc
inc
pop
cltd
or
aad
ljmp
iret
rcrb
push
pop
jns
jno
pushf
aaa
cmpsb
mov
push
maxps
mov
add
fsts
outsb
dec
movsb
repnz
cld
stc
repz
imul
aaa
test
dec
jg
das
jg
inc
pop
js
loope
add
xchg
pop
mov
ss
das
fidivs
lock
and
push
popa
push
pop
push
pop
or
stc
adc
insl
pop
fwait
cs
into
jo
fidivrs
xchg
aas
jg
sbb
cwtl
xchg
test
adc
sbb
jb
out
movsl
lahf
or
dec
cld
stc
repz
mov
pop
fdivrs
out
gs
movb
jg
mov
scas
jae
ljmp
das
lahf
pop
dec
out
dec
adc
pushf
xchg
pop
jns
xchg
punpcklbw
pusha
or
or
jne
jl
loope
and
and
jo
inc
in
push
fidivrs
das
gs
push
pop
jns
loopne
test
pop
inc
sub
mov
adc
clc
lahf
pop
inc
mov
into
cmp
test
ret
icebp
sahf
pop
out
sbb
push
pop
jns
ret
ss
cwtl
imul
add
jns
in
cmp
mov
call
cmpsl
pop
sarl
stos
sbb
fstl
pop
std
push
subl
push
pop
jns
dec
mov
xor
stc
lods
jae
pop
jns
sub
data16
push
out
shrb
sub
mov
or
adc
repnz
mov
out
aas
jg
cld
fiadds
jo
shlb
push
inc
cmpsl
aaa
mov
out
lahf
popa
test
das
dec
in
inc
dec
cld
arpl
pop
mov
ss
loope
cli
pop
aad
push
lret
fucomip
sti
push
in
add
arpl
sti
lcall
pop
int3
add
stos
scas
mov
mov
inc
cmpsl
pop
test
js
xor
in
in
or
mov
repnz
xchg
outsb
jge
loop
jle
cld
push
mov
inc
jbe
test
add
pusha
fs
xchg
jnp
in
stc
repz
sarl
popf
mov
push
jne
std
mov
into
xchg
mov
push
and
mov
das
pop
inc
into
sub
push
cwtl
out
sbb
setle
sarb
mov
lahf
aas
pushl
push
aam
test
cmp
in
out
add
into
fs
lret
enter
scas
mov
sub
mov
lock
ja
cmp
aas
test
xor
jl
jl
mov
sub
out
popa
xchg
adc
push
xor
lret
les
xor
test
das
es
sub
cmpsl
push
std
xchg
xchg
jo
in
loope
sub
cs
call
cld
stc
xorb
sub
imul
lret
lds
xchg
aas
and
insb
sbb
ret
ret
xor
xchg
mov
mov
ja
fsubrl
int3
fnstsw
ja
std
jb
mov
mov
scas
xchg
pop
mov
pop
mov
gs
xor
sbb
aas
push
adc
jge
ret
dec
jno
loopne
in
out
mov
and
scas
das
xchg
or
icebp
cmp
jge
push
push
lahf
fs
xorb
lock
jl
pop
das
hlt
xchg
xchg
ds
stc
repz
mov
xor
pop
jno
rorl
pop
iret
lahf
aas
jg
mull
lcall
outsb
push
repz
jmp
fwait
mov
push
cld
stc
js
inc
rcrb
push
lods
mov
repz
lahf
aas
out
js
inc
mov
sbb
mov
push
ljmp
pop
into
or
jle
out
fildl
sub
lret
hlt
xchg
dec
sbb
lcall
outsl
out
popf
rclb
lods
insb
popa
ret
enter
sub
or
push
adc
adc
fdivrp
cld
mov
cld
int
add
cmpsb
in
push
hlt
mov
lret
iret
lahf
pop
add
les
test
out
lahf
aas
out
inc
push
mov
mov
xorl
cld
nop
je
mov
xchg
aad
mov
das
lahf
aas
jg
pop
inc
pop
enter
jmp
mov
scas
mov
cld
push
pop
sti
pop
jl
push
out
lret
test
jp
cmp
iret
in
cli
mov
call
sbb
mov
sbb
out
fisubs
sbb
adc
mov
push
inc
pop
cmp
mull
mov
ljmp
scas
xor
jnp
xchg
xchg
push
fisubrs
fldenv
add
mov
mov
jns
mov
ss
xor
out
enter
pushf
pop
jns
xchg
subb
inc
arpl
mov
in
push
frstor
jb
stc
lcall
pushf
mov
fimuls
dec
aam
sub
cmpsl
fstl
aad
sbb
std
mov
push
pop
insl
test
lods
lods
fcmovu
cmp
pop
scas
es
cli
xlat
fisttps
lcall
xchg
movsl
xor
push
out
mov
sbb
pop
pop
outsb
dec
push
inc
cli
repnz
add
cmp
and
dec
push
xor
adc
iret
lahf
aas
jg
inc
and
mov
rorb
fdivrp
repnz
xchg
jae
or
lahf
scas
dec
push
mov
scas
mov
out
or
fcmovne
stc
repz
mov
pop
scas
stc
and
push
fidivrs
icebp
lock
fcmove
dec
repz
pop
jns
xchg
add
adc
scas
inc
cmpsb
lahf
pop
adc
notl
roll
div
out
mov
cmpb
and
testl
and
insb
jg
inc
std
and
fucomi
insl
cmp
scas
call
andl
adc
imul
lret
std
mov
xchg
mov
int3
fsubs
add
idivb
out
in
xchg
ja,pn
idivl
push
adc
xchg
mov
ja
outsb
or
aam
es
cltd
mov
inc
xchg
lahf
aas
xchg
and
sub
rcrl
pop
cltd
lock
xor
ss
lock
repz
sub
add
jo
insb
push
sbb
fildl
cld
xchg
dec
insl
fs
iret
lahf
pop
or
sub
clc
stos
out
inc
adc
out
push
mov
std
das
lret
clc
jb
popa
flds
dec
cmp
repnz
pop
and
int3
push
dec
mov
scas
mov
jmp
dec
outsl
movsb
lret
repnz
bswap
inc
loopne
dec
pop
inc
ret
lcall
iret
and
sbb
cmc
ret
cld
fnstcw
mov
jle
mov
repnz
das
push
enter
fldt
stos
sbb
sbb
jo
leave
and
adc
inc
sbb
cmp
mov
out
pushf
fisubrs
stc
repz
lret
test
pop
mov
or
xor
mov
lret
popf
mov
fildll
or
pop
dec
in
movsb
jne
sub
lret
mov
cwtl
loopne
xchg
ret
and
fsubrs
scas
mov
mov
scas
and
mov
dec
test
repnz
loope
jns
data16
repnz
jecxz
stc
mov
jae
lret
sub
and
push
sahf
mov
lret
sub
sbb
stc
push
cld
loop
or
push
mov
fwait
clc
in
test
pushf
repz
cld
adc
push
or
test
mov
movsl
and
or
xchg
lahf
aas
jmp
mov
pushl
jg
cld
mov
dec
movsl
fs
nop
insl
pop
rcrb
lahf
aas
fwait
push
xor
insl
popa
lea
cld
push
fwait
mov
outsl
add
cmc
movsb
pop
jg,pt
jno
iret
movsb
sub
dec
cwtl
ficomps
je
dec
cli
stc
xchg
jecxz
stos
mov
aas
sbb
lret
scas
mov
xor
mov
repnz
cmp
rclb
outsb
add
pop
lcall
xlat
xchg
lahf
pop
ljmp
je
int3
pop
jns
fst
adc
shll
sarl
pop
loopne
fucomip
mov
js
xor
mov
add
mull
ljmp
mov
jp
cmp
repz
lahf
cmp
xlat
adc
fcmovu
cmpsb
ret
clc
jg
cld
stc
jb
adcb
sbb
push
ret
iret
lahf
aas
outsl
loope
divps
call
mov
outsb
inc
cmpsb
jmp
sbb
pusha
sub
jg
pop
cmp
inc
mov
lahf
pop
pop
mov
jmp
cmp
xchg
pop
loop
ret
pop
orl
inc
adc
xchg
jae
data16
in
push
cli
jg
pop
jle
mov
bnd
dec
aam
fsubp
fstl
stc
cmc
pop
xor
ret
xchg
sub
push
clc
stos
add
movb
lea
add
jecxz
iret
push
mov
sahf
jo
das
ficoms
sbb
lret
iret
lahf
add
xor
imul
xchg
data16
pop
xor
xchg
out
js
cs
ja
lods
cs
add
lret
jp
cld
cld
stc
aaa
ficomps
dec
and
push
pop
scas
dec
insl
sub
jg
dec
ja
cmp
xchg
sar
ror
push
sbb
decb
mov
sub
adc
stc
mov
jle
adc
or
cld
ret
mov
sahf
xchg
sahf
push
loop
ds
and
add
sub
orl
daa
test
mov
arpl
cwtl
add
and
int
pop
movl
sbb
test
lahf
aas
jg
loope
push
je
inc
xlat
mov
inc
pop
aas
inc
jo
and
loopne
push
xchg
stc
stc
cld
lret
les
mov
mov
push
pop
xchg
pop
into
stos
sub
rcrb
in
ja
dec
push
adc
or
icebp
xchg
ja
pop
mov
sahf
imul
sarb
out
inc
cli
add
xchg
fdivrp
jb
loop
das
mull
pop
mov
mov
dec
clc
cld
mov
sbb
fistps
iret
aas
and
jmp
mov
and
stc
pause
fmuls
sub
orl
iret
imul
pop
and
lret
and
std
out
dec
into
int
xor
repz
sub
lea
push
adc
sbb
jmp
cmp
sbb
xchg
ja
sti
sbb
lock
popa
xor
jle
xchg
push
pop
pop
hlt
mov
push
mov
add
imul
xor
pop
push
sub
aas
sahf
scas
adc
pop
addl
mov
aaa
cltd
sbb
xchg
dec
jle
push
or
or
push
jae
xchg
aas
jg
outsb
daa
xchg
jbe
cmp
jne
mov
lods
dec
jl
inc
cld
sbb
push
mov
push
jne
or
sbbl
mov
ds
and
fstl
sti
jle
out
or
aam
fisttpl
int3
stos
out
inc
cld
cs
loope
and
iret
dec
iret
testl
mov
lahf
std
or
xchg
jo
push
sarb
pop
outsb
lock
daa
jmp
sbb
stc
repz
pop
dec
scas
dec
or
mov
mov
aaa
aad
push
outsb
mov
ror
push
test
mov
mov
leave
call
mov
popf
jg
cld
stc
xchg
push
jb
adc
test
insl
cmp
mov
cmp
dec
dec
out
shr
xlat
and
mov
repnz
in
loope
xchg
sarl
cs
das
mov
ss
or
adc
loopne
out
adc
cs
adc
adc
inc
jle
jbe
mov
daa
das
mov
dec
scas
mov
call
into
scas
push
in
loopne
mov
insl
lock
adc
mov
lcall
leave
xchg
ja
sub
sahf
cli
xchg
je
rorl
sub
dec
sbb
stc
adc
cmp
out
jbe
sub
fidivl
roll
jo
pop
jl
ret
into
or
je
cmp
subb
pop
aad
xor
addl
sbb
jae
add
jl
pushf
into
and
iret
pusha
cmp
cld
into
add
js
fldl
sub
adc
ljmp
lahf
aas
mov
mov
push
mov
xchg
in
and
adc
fcomip
adc
test
mov
mov
pop
rcrl
adc
jnp
repz
cltd
divl
test
add
enter
ds
daa
cmp
sahf
ja
cmc
test
push
ss
insl
aad
repz
lahf
sahf
out
cli
dec
sbb
scas
cmp
loop
cld
stc
jle
xlat
xor
stos
mov
jecxz
filds
into
push
popf
mov
dec
mov
iret
xchg
or
pop
add
rcll
in
faddp
les
mov
leave
lahf
aas
jg
mov
fsubs
mov
scas
lret
jle
xchg
nop
orl
cwtl
mov
test
xchg
sub
mov
inc
or
sbb
or
std
xchg
into
or
iret
daa
ja
jle
mov
aad
mov
lahf
ret
les
leave
les
sbb
dec
incb
xchg
adc
fists
sbb
hlt
adc
pop
das
stc
cmpsl
cmc
lret
dec
or
in
ss
popf
mov
lcall
mov
jo
repz
adc
jp
xor
addr16
jnp
jg
cld
stc
js
imul
dec
out
sti
inc
adc
cmc
cld
xor
xchg
jb
out
ror
leave
iret
cmovge
sarl
jns
fstp
jecxz
pop
fadds
mov
mov
push
pop
xchg
test
in
or
cli
xchg
push
pop
jns
ret
xchg
ret
push
movsl
cmpsb
and
out
icebp
in
orb
xchg
scas
test
mov
xchg
or
pop
xchg
rcr
jbe
jg
adc
jo
stc
cld
stc
sub
out
sub
lahf
mov
mov
dec
sbb
lret
sub
mov
and
lahf
mov
repnz
push
mov
jnp
stos
ljmp
pusha
subb
mov
add
xchg
aad
std
pop
and
pop
xor
enter
xor
cmpb
push
push
cmp
popa
sub
mov
movsb
lret
ljmp
add
lahf
test
adc
fidivrs
cld
stc
mov
and
mov
mov
dec
sbb
pop
rol
jg
scas
dec
add
es
outsl
in
insl
mov
js
xchg
movsb
xor
shlb
lahf
pop
dec
push
push
mov
js
into
lret
iret
scas
subl
xor
ljmp
adc
or
and
mov
lahf
aas
jg
add
and
adcb
rol
xchg
push
add
lahf
adc
scas
mov
repz
mov
lcall
jle
cld
push
sbb
xchg
dec
cmp
cld
or
dec
inc
inc
jnp
les
pop
nop
add
push
pop
dec
lock
daa
loop
mov
in
nopl
cld
jns
mov
mov
repz
test
aas
aas
scas
jmp
mov
clc
push
add
pop
adc
jbe
lahf
jmp
push
add
cmp
out
test
cs
test
push
mov
leave
push
enter
jg
cld
mov
jb
or
sar
and
sbb
add
xchg
clc
fxam
rorb
in
mov
out
divb
aam
push
aas
or
jle
adc
iret
ror
add
pop
das
jle
repz
fwait
pop
ljmp
cmp
in
mov
pop
outsl
idivl
adc
andl
add
ret
jmp
jg
sub
cmovns
fiaddl
fistpl
adcl
adc
test
out
pop
sbb
mov
inc
jg
mov
sub
pcmpgtw
popf
push
add
jp
seta
xchg
push
fdivrp
scas
movsl
mov
jg
push
stc
mov
fwait
and
jg
roll
mov
out
lahf
aas
push
popaw
sub
dec
sar
mov
outsl
inc
fmuls
jle
dec
daa
jg
mov
jle
xchg
jns
xchg
ja
pop
dec
dec
cld
inc
mov
icebp
in
push
pop
imul
out
adcl
stos
dec
je
out
sub
adc
out
lods
dec
rorl
cmovo
cmp
mov
out
mov
in
lods
push
in
icebp
cld
decl
inc
dec
shrb
lret
data16
call
pop
push
and
ja
out
adc
mov
push
jg
cmovp
xchg
iret
das
es
scas
mov
pop
repnz
push
ja
in
and
sub
xchg
aad
mov
call
xchg
xchg
dec
popa
xor
mov
jecxz
data16
inc
add
push
adc
pop
xchg
cld
xchg
clc
in
enter
mov
mov
imul
push
mov
repnz
cmp
xlat
shlb
test
jb
movsl
or
sbb
jle
mov
and
out
push
fimuls
call
dec
iret
ret
jne
push
pop
pop
jns
movsl
daa
lods
push
add
add
xchg
pop
push
push
lock
or
mov
out
stos
pop
in
repz
and
push
and
loopne
dec
jp
lods
adc
mov
enter
push
sti
mov
icebp
mov
repz
dec
xlat
outsl
mov
out
sbb
add
stc
cld
stc
inc
paddsw
dec
or
adc
sbb
and
out
xor
imul
stc
repz
or
lods
aam
repnz
aas
jg
cld
jbe
jbe
aas
mov
shlb
mov
lahf
pop
dec
lods
lret
push
mov
fs
sub
iret
lahf
pop
adc
fsubs
inc
gs
mov
repz
mov
jg,pt
sbb
fcomp
mov
xchg
ja
adc
data16
pusha
movntq
mov
iret
lahf
pop
fimuls
test
jb
inc
push
mov
and
sub
adc
dec
loop
jmp
lahf
sub
arpl
in
cs
push
std
gs
enter
mov
dec
leave
dec
lahf
aas
cwtl
rcrb
mov
popa
adcl
cmp
mov
and
jp
and
jae
dec
xchg
ljmp
imul
clc
sub
in
mov
outsb
das
aam
daa
and
sbb
rclb
ss
cli
sub
iret
fstps
ds
push
cmp
xchg
pop
addr16
cmp
sbb
xchg
lcall
and
mov
js
nop
popf
sub
in
das
scas
pusha
jae
bound
das
mov
sbb
inc
into
add
xlat
shrb
xor
sbb
push
or
mov
stc
repz
jle
and
xchg
stos
int
scas
out
loop
imul
out
or
pop
dec
cmpsl
push
sbb
xchg
iret
inc
mov
decb
outsl
in
sti
data16
dec
and
dec
rcll
adc
call
adc
cld
push
stc
repz
repnz
in
pop
push
sbb
pushf
call
sub
dec
sbb
pop
jle
ficoms
scas
daa
push
daa
jp
sub
das
pusha
pop
out
ljmp
ret
and
xor
or
mov
loop
clc
inc
lret
inc
or
loop
insl
sahf
jl
lahf
scas
mov
xchg
stc
int3
jl
psubsb
lret
sub
lret
sub
cmpsb
or
dec
xchg
test
in
lahf
mov
push
aam
mov
insb
cld
stc
repz
push
push
mov
cltd
mov
xlat
fimull
sarl
jmp
jmp
cs
aas
sub
enter
in
js
mov
or
das
scas
mov
paddsw
pop
or
and
sbb
pop
mov
daa
mov
in
pop
inc
jle
iret
lahf
hlt
aam
push
loope
sub
mov
loopne
aaa
outsl
es
jle
xchg
call
fsubrs
lods
in
ds
mov
test
adc
aas
loopne
inc
jnp
in
ret
lahf
addl
inc
adc
test
xchg
pop
adc
and
inc
fs
leave
je
or
lock
lcall
in
je
adc
lret
sbb
pop
jle
lret
sbb
or
or
or
fistpll
pop
cld
cltd
xchg
dec
sbb
mov
dec
int
std
push
mov
ror
paddd
into
repz
lret
out
sarl
divl
setb
cmp
ret
and
cwtl
shrb
mov
xchg
cld
mov
mov
mov
lods
push
dec
xchg
jp
xor
and
or
inc
iret
lret
cltd
cs
mov
sub
jb
jno
loopne
aam
dec
sbb
test
aas
jg
sub
and
xor
subl
jno
mov
adc
mov
and
mov
jg
lahf
aas
incl
add
mov
or
enter
pop
lahf
jge
rolb
lahf
das
das
add
outsb
movsl
sbb
jle
std
movsb
dec
insl
push
out
roll
cmp
dec
and
ss
xchg
fs
xor
ja,pn
xchg
pusha
clc
sti
mov
nop
lock
cmp
sub
mov
mov
mov
xchg
lcall
add
lahf
jg
adc
sub
test
pop
mov
icebp
jae
imul
sahf
lea
mov
sbb
pop
fmuls
cmp
lds
imul
test
adc
jg
cld
add
pusha
std
lods
xchg
push
or
xchg
sub
inc
inc
lahf
aas
mov
mov
scas
pop
mov
orl
shlb
lret
stc
push
data16
nop
js
rcl
or
pop
jp
popa
sub
insb
hlt
out
adc
lret
jo
push
mov
fisubs
add
sbb
nop
negl
fs
adc
enter
scas
fisubs
pop
aad
bound
into
dec
push
push
pslld
xchg
aas
sub
pop
adc
inc
push
cli
jnp
in
mov
icebp
add
xchg
pop
loope
sbb
adc
int
cmc
pop
fdivl
leave
mov
popf
aad
jle
and
lock
xchg
pop
ret
pop
add
mulb
out
xor
aas
jg
pop
adc
pushf
into
mov
push
xor
lods
push
incl
or
data16
enter
dec
mov
sub
mov
xchg
jmp
xor
outsl
cmp
scas
dec
dec
aad
loopne
ret
sti
arpl
or
mov
xor
fs
ljmp
cmp
mov
push
jle
jg
insb
lahf
pushf
jle
push
popa
mov
data16
xor
incl
dec
mov
xor
add
pop
add
out
pop
imul
lods
xchg
test
outsl
ret
push
pop
fimuls
mov
das
mov
mov
repz
inc
jg
cld
popa
mov
mov
ljmp
sahf
jp
jg
enter
or
out
or
cmp
add
repz
ss
mov
rol
or
xchg
cli
cmp
stc
or
sub
jg
mov
jg
mov
xor
pushl
pop
jle
dec
sub
scas
shlb
clc
mov
hlt
pop
repnz
cmp
rcr
and
mov
out
scas
decb
push
mov
adc
xchg
aas
jg
out
sbb
lods
inc
pusha
ja
cltd
dec
jp
icebp
iret
xlat
scas
and
add
fsubrp
lret
push
int3
adc
pushf
add
xor
push
xchg
push
nop
sbb
and
leave
int3
dec
lret
jae
repnz
dec
shll
push
mov
ss
mov
xchg
mov
insl
aad
push
inc
push
and
iret
scas
and
loopne
jae
xchg
sub
test
sbb
in
adcb
les
push
pop
rclb
insb
mov
ds
sbb
sahf
lods
pop
test
ficomps
jg
hlt
jo
jl
popf
int
mov
dec
in
xchg
sbb
mov
cmp
mov
scas
lock
icebp
scas
xlat
ja
ljmp
mov
push
mov
outsl
cmc
in
and
or
push
iret
aam
test
sub
sub
mov
jecxz
psraw
xchg
dec
or
inc
sarb
repz
cld
mov
pop
or
cld
dec
cli
das
adc
mov
mov
js
mov
hlt
negl
push
hlt
dec
popa
mov
sbb
lods
push
scas
inc
shl
and
aas
jg
add
stos
aaa
data16
xchg
repz
lahf
dec
jne
or
jo
testb
xchg
cmp
and
cmp
test
negb
lret
outsl
call
popf
push
or
jnp
cld
stc
jge
test
mov
adc
bound
iret
lahf
aas
fisttpl
stos
dec
addl
repz
dec
faddl
repnz
adc
jg
add
call
in
mov
stos
fmul
out
lahf
lods
xor
xchg
aaa
cmp
fnstcw
pop
or
jb
aad
inc
sti
lahf
sub
cmp
mov
xchg
unpckhps
mov
ret
aam
sub
sbb
or
das
inc
out
sbb
scas
ret
clc
or
lcall
mov
mov
cld
inc
push
out
mov
mov
mov
dec
lods
mov
dec
out
pop
pop
lret
mov
out
pop
aas
pop
pop
jl
adc
fadd
jge
stc
repz
xchg
shrl
das
mov
dec
scas
xor
ja
fmulp
sbb
fdivrs
scas
rol
and
jns
in
cltd
sub
mov
jbe
lahf
jg
cld
adc
push
dec
das
pop
sbb
movsl
popf
add
lods
inc
ds
addr16
inc
scas
mov
jg
lret
iret
addr16
scas
call
int
jmp
out
lahf
and
inc
cmp
or
fsubl
jg
cld
stc
cmp
test
mov
fmuls
mov
arpl
add
cld
mov
cld
iret
lahf
aas
jg
jne
cmp
lret
sbb
push
inc
pop
aas
mov
xor
scas
pop
std
pop
sbb
cli
in
lret
push
test
mov
pop
mov
femms
pop
or
jns
outsb
mov
loopne
mov
shll
cmp
xor
sbb
mov
daa
les
lret
inc
andb
sub
pop
jmp
mov
fmull
lahf
add
mov
jo
mov
push
fnstcw
fadds
xchg
push
fimuls
lret
add
add
cwtl
mov
filds
pop
pop
mov
aad
mov
loop
inc
cmpsl
cld
stc
repz
dec
pushf
sub
aad
loope
pop
int
xchg
aas
jg
fxrstor
out
jmp
ficoml
mov
pop
sbb
add
fnstsw
sub
pop
and
lret
xchg
loop
mov
icebp
in
jns
pop
rcrb
imul
loop
nop
jecxz
movsl
sbbb
inc
sahf
test
pop
jle
dec
mov
push
push
stos
jo
and
btc
add
xor
aas
mov
aas
mov
repnz
mov
cld
stc
repz
and
inc
xchg
scas
xchg
clc
aas
dec
mov
or
lahf
aas
jg
test
fs
mov
outsb
aas
sub
fisubrs
lret
das
and
movsb
cltd
pop
popf
mov
mov
inc
cwtl
inc
pop
das
pop
add
in
stos
iret
dec
inc
cmpsb
mov
fsubp
and
mov
hlt
outsl
pop
lahf
jnp
jns
xchg
push
or
or
lea
sub
jle
ss
sbb
lahf
popaw
mov
in
push
pop
xor
sub
push
popa
push
jns
fidivl
add
pushf
repnz
cmp
movsb
mov
ds
mov
iret
loope
jg
cld
or
mov
outsl
xchg
fidivl
mov
out
lahf
push
cmp
jb
jns
xchg
push
fidivs
insb
pop
addr16
jnp
aas
adc
lret
sub
das
cmc
in
scas
pop
scas
fildll
neg
repz
mov
or
repnz
xlat
push
pop
xchg
xchg
adc
sub
jne
dec
cmpsl
test
jle
bound
stc
cld
cmpb
xchg
scas
or
aas
mov
cmc
xchg
sub
jle
jo
outsl
xchg
push
cld
loopne
sti
repnz
out
scas
dec
out
iret
hlt
cmc
pcmpgtw
pop
call
mov
pop
shr
mov
lods
inc
scas
mov
jne
adc
adc
lods
cmp
pop
lea
pop
or
mov
inc
sti
repnz
dec
xor
mov
mov
sbb
sti
pop
iret
xchg
sub
arpl
xchg
mov
mov
adc
psubd
stos
aas
aas
scas
adc
jne
test
pop
add
jns
shlb
lods
adc
pop
shrb
in
add
daa
push
mov
in
push
pop
addr16
jecxz
bound
test
jns
push
fwait
lahf
out
decl
push
cmpsb
dec
mov
not
mov
adc
rclb
sahf
sahf
sbb
dec
in
fisttps
mov
jge
and
ret
cmp
cld
stc
stos
inc
enter
mov
repnz
jg
dec
sahf
cmp
int
jmp
iret
lahf
jo
mov
gs
shll
inc
jg
cld
stc
fstl
fs
mov
jo
jge
xchg
aas
push
popa
stos
fistl
pop
push
mov
into
fsubrs
sbbl
iret
lahf
mov
jae
push
fisubl
mov
cld
stc
dec
addr16
and
cmp
sub
bound
out
lahf
aas
mov
imul
popa
loope
mov
out
repnz
decl
jg
cld
stc
mov
repz
mov
cli
sub
ja
in
sbb
sbb
and
aaa
push
pop
jns
sub
stos
outsl
cmp
adc
fstps
pop
jns
xchg
and
sub
hlt
jge
loop
cld
lahf
shrb
push
out
cmp
ret
into
cli
in
out
es
enter
in
dec
xor
movsb
repnz
xchg
xchg
fisubrs
or
jns
dec
sub
adc
popa
mov
mov
sbb
jg,pt
scas
xor
adc
enter
scas
cmp
int
fcomp
jo
pop
test
out
mov
fs
xchg
push
xchg
cld
stc
xchg
into
sbb
test
das
test
iret
xchg
aas
jg
les
rorb
mov
in
out
clc
xchg
push
push
xor
mov
sub
jle
xchg
outsl
insb
ret
jp
scas
mov
push
ja
mov
push
in
sub
jge
stos
and
loop
repnz
imul
dec
addb
enter
cs
lea
cld
aas
mov
mov
pop
inc
rcll
out
or
aam
sub
push
sbb
xbegin
cwtl
pop
push
lods
xchg
mov
cld
stc
repz
xor
jecxz
push
xor
dec
pop
jbe
lahf
aas
jg
mov
lods
lahf
and
cli
push
out
xchg
iret
xor
movl
repz
imul
xchg
stos
daa
mov
mov
push
mov
cmp
cld
leave
clc
in
jp
rcrb
pop
popf
into
sub
lahf
aas
jg
stos
sub
in
jg
jmp
push
stc
xchg
popa
xchg
sbb
jnp
jg
cld
jmp
shrl
cmpsl
mov
jg
cld
or
or
std
sbb
std
lahf
sahf
lret
aas
fs
sub
aam
int
push
fidivrs
movsb
xchg
mov
shrb
in
xor
xor
mov
jle
add
int
mov
mov
aas
jg
jne
pop
push
mov
xchg
dec
out
mov
mov
stc
repz
in
dec
fsubl
loope
pushf
pop
xorl
cld
sbb
leave
inc
outsb
xchg
shld
sub
repz
ror
mov
pop
mov
lea
cld
stc
add
lret
pop
popf
stos
aas
aad
out
lahf
aas
xor
insl
dec
shl
lds
jg
outsb
in
sbb
stc
repz
push
data16
sbb
aas
jg
sub
mov
pop
mov
cmpsl
jle
insl
pop
mov
pop
mov
add
dec
jle
mov
cmp
cld
adc
xchg
xor
lcall
or
mov
lahf
aas
jg
xor
fcoml
push
add
in
iret
outsl
xchg
push
ja
mov
and
mov
pop
jns
mov
sbb
fwait
and
pop
mov
in
or
push
mov
repz
rcll
decb
and
insb
inc
iret
aas
aas
inc
sarl
mov
lret
out
xchg
iret
lahf
mov
push
sbb
addb
insl
push
add
xchg
mov
mov
xchg
cmpl
fstp
das
das
sbb
or
daa
aas
js
or
popf
push
pop
jns
adc
rorb
xor
in
ret
sub
outsb
pop
jnp
movsl
scas
std
repz
xchg
push
fdivrp
mov
dec
mov
popa
mov
insl
loope
or
jb
mov
dec
push
and
jbe
out
lahf
aas
jg
faddp
cs
testl
loop
xor
iret
aas
ja
mov
into
dec
sbb
out
mov
add
int
adc
in
pop
stos
and
jns
xchg
pop
jge
or
iret
jb
movsl
push
sub
movsb
in
push
pop
gs
dec
jle
out
fimull
lods
xor
add
add
cmc
lahf
xchg
pop
imul
inc
push
adc
push
jno
and
repz
incl
jecxz
or
xor
rclb
fstl
or
bound
cld
adc
mov
mov
sbb
jbe
mov
xchg
dec
sbb
stc
repz
shl
xchg
fwait
insl
jbe
les
jp
lahf
aas
jg
mov
ret
cld
movsl
cmpl
fnsave
stc
fs
add
xor
das
push
pop
push
mov
sub
out
ds
jmp
cld
dec
mov
mov
repnz
or
test
inc
cmpb
ljmp
sbb
imul
mov
movl
sub
xor
sarb
lds
or
scas
lahf
icebp
or
cmpb
imull
mov
lahf
aas
or
out
call
push
cltd
pop
iret
mov
std
and
mov
and
outsl
lock
mov
or
mov
ljmp
mov
fcoml
daa
cmpsb
mov
xor
sub
fs
ja
mov
mov
daa
push
cmp
mov
cltd
dec
push
push
mov
lock
cltd
mov
fs
sub
push
mov
and
popf
mov
mov
repnz
lods
xchg
dec
jg
cmpsb
daa
fdivl
loopne
xor
flds
xor
sub
xor
lcall
aas
jg
mov
gs
xlat
pop
jns
repnz
xchg
iret
repnz
sbb
sbb
mov
sub
inc
dec
jmp
stc
repz
notl
dec
outsl
sub
lcall
fidivl
and
jb
repz
xor
std
rclb
test
cmp
push
sbb
mov
jmp
sub
cli
xor
sub
scas
andl
jg
xlat
sub
and
pop
insb
icebp
add
push
mov
cmp
in
mov
pop
xchg
iret
inc
jmp
inc
push
cmp
sbbl
push
xor
or
mov
push
mov
cmpsb
int3
or
mov
xor
mov
jle
repnz
call
into
fiaddl
xchg
push
loope
mov
lahf
or
ljmp
jg
cld
xchg
imull
imul
sbb
sbb
movsl
mov
lahf
pop
mov
jg
cld
stc
inc
add
inc
je
lods
pop
hlt
leave
repnz
mov
pop
jl
mov
sub
in
dec
jo
popf
fisttps
mov
sti
jbe
enter
jo
add
jae
clc
xor
cld
stc
repz
xchg
cmp
cmp
cmp
cmp
jl
adcl
mov
repz
push
lcall
testb
sub
push
in
test
sbb
pop
mov
jmp
clc
dec
jno
jb
pop
add
imul
mov
subb
adc
out
lahf
lock
dec
es
iret
cld
mov
add
hlt
fwait
sub
in
in
sub
mov
das
mov
jo
sti
repnz
pop
mov
addb
sub
repnz
repz
hlt
dec
pop
scas
mov
movsl
adc
jmp
cmp
and
mov
pop
fnstsw
ret
push
outsl
push
pop
out
aas
sub
repnz
lahf
fisubrl
das
in
das
cmp
repnz
cmp
jle
push
sub
push
lahf
aas
push
insl
add
add
or
jp
test
in
outsb
sub
sahf
jg
or
pop
sbb
lock
in
jle
ljmp
jb
xchg
push
cmp
lret
sub
push
into
leave
icebp
or
daa
lock
pop
mov
popa
mov
jg
add
pop
push
cmp
daa
cmc
push
out
insb
mov
adc
pusha
xchg
pusha
and
roll
cmp
in
xchg
push
pop
jns
loop
pop
movsl
in
aaa
pop
or
inc
push
pop
jns
inc
std
push
std
pop
ds
adc
out
and
divl
in
outsl
mov
pop
jecxz
aas
arpl
mov
xchg
cld
stc
add
mov
and
out
pusha
inc
paddb
nop
lods
scas
inc
xor
outsb
sbb
iret
lahf
aas
inc
and
enter
and
test
mov
add
push
push
inc
lret
add
pop
cmp
xor
push
push
into
in
ja
jg
dec
push
aas
adc
cs
arpl
mov
push
inc
out
and
std
stos
repnz
push
sub
cmp
adc
ficomps
sub
or
addb
loop
js
repnz
mov
mov
mov
dec
dec
daa
mov
rcrl
aaa
sbb
mov
xor
mov
push
cs
cld
stc
fdivs
fstps
xor
test
bound
fs
mov
popa
xchg
in
lret
aaa
pushf
adc
xchg
and
mov
add
dec
lods
dec
iret
ljmp
jl
cld
arpl
lcall
jg
ds
or
and
roll
out
push
pop
jns
mov
mov
ret
js
fadds
dec
pusha
in
xor
scas
adc
and
adc
pop
mov
jle
push
mov
pop
push
pop
clc
jge
sahf
and
mov
jp
add
test
pop
xchg
pusha
pop
fcmovne
fwait
jns
scas
or
jae
pop
add
arpl
mov
std
mov
sub
push
mov
gs
sbb
inc
mov
jae
add
mov
sub
jg
xor
into
jmp
add
clts
jo
jo
cli
xchg
mov
pushl
jo
or
addl
addb
outsb
and
pop
dec
xor
outsb
xchg
and
inc
pop
daa
shr
xchg
xor
scas
jo
add
jo
add
xor
inc
pop
aas
aas
or
add
hlt
lahf
jo
mov
scas
jo
jno
sbb
jo
add
call
cmp
sub
dec
scas
pop
sub
xchg
adc
popl
add
pop
push
jne
pop
push
pop
mov
push
jo
mov
mov
jo
jo
push
cmp
xchg
lahf
lds
hlt
je
out
sub
jmp
add
sbb
loopne
in
push
outsl
cmp
rorb
and
sbb
sarb
jo
subl
cmp
add
mov
adc
out
add
mov
scas
jo
inc
xchg
push
out
mov
in
bound
je
pop
iret
dec
xchg
pop
or
mov
je,pt
idivb
xchg
and
mov
das
mov
push
and
fbld
std
cmp
xchg
rsm
add
daa
and
mov
fistps
mov
sbb
leave
fimuls
les
lahf
jg
iret
xchg
jge
xchg
ljmp
mov
sbb
cld
stc
repz
mov
pop
mov
std
scas
test
pop
pop
das
jg
mov
xchg
cmpl
mov
sti
jns
mov
std
scas
scas
jbe
jl
aas
shlb
cmp
loope
repnz
xor
test
std
movsl
inc
scas
out
jecxz
push
mov
mov
popa
lret
idivl
pop
sbb
xchg
into
sub
mov
lret
lahf
sbb
pusha
jg
and
in
outsb
sahf
xlat
inc
push
push
inc
das
jg
cld
faddp
and
es
cmp
sbb
lahf
pop
push
fdivrp
jge
aaa
test
jg
cli
stc
stc
repz
sbb
and
ss
sbb
dec
xchg
jp
jge
aaa
or
cmp
and
into
fiadds
push
mov
adc
xchg
dec
imul
dec
in
jmp
cltd
xchg
mov
rorl
push
inc
out
lahf
aas
pop
icebp
and
xor
movsb
push
fldl
enter
rep
mov
xchg
fsub
clc
dec
ret
movsb
mov
movd
mov
dec
or
sbb
jnp
pop
mov
mov
mov
mov
or
loop
push
xchg
jp
pop
and
jl
decb
mov
out
cltd
sbb
or
into
ds
aas
inc
in
lcall
aas
xchg
push
or
dec
sbb
mov
enter
popa
pop
iret
repnz
in
in
das
and
inc
lods
pop
hlt
mov
and
xchg
push
pop
jmp
and
cmp
loope
pop
shrb
cld
stc
and
mov
fnsave
xchg
push
fidivrs
lret
les
sarb
pop
jns
data16
rclb
rol
ficompl
in
int3
ret
xchg
cmc
lret
lcall
cli
xchg
insl
in
mov
xchg
push
pop
mov
add
inc
mov
mov
movsl
dec
lods
sar
xchg
shrb
ja
mov
mov
int
jp
push
scas
mov
test
sub
aas
jg
in
aas
mov
or
addb
stc
repz
in
mov
rolb
cli
stos
pop
pop
int
jl
cld
jl
iret
hlt
lods
jns
fstpl
fwait
fs
mov
scas
mov
rorb
lret
out
lahf
aas
push
loopne
cmpsl
cltd
pop
fsubrl
icebp
and
cld
stc
repz
mov
inc
xchg
xchg
ja
jle
andl
add
push
pop
jns
adc
jbe
rorl
loope
mov
test
xchg
xchg
jns
push
mov
sarb
inc
sbb
push
test
cmpsl
in
adc
cld
into
mov
jns
xor
sub
fldcw
adc
push
pop
str
clc
int3
pop
jns
rcrb
in
aaa
adc
cmp
mov
dec
dec
movb
call
jg
aas
notb
push
lods
push
fisubl
mov
popa
push
fs
insl
xor
out
lahf
cli
mull
xor
xchg
stc
stc
pop
cmc
push
pop
insl
xchg
pop
push
xchg
mov
xchg
push
fidivrs
fisttpll
add
cmp
cmp
jns
rcr
dec
outsb
sbb
aad
jno
pop
mov
pop
pop
sahf
xchg
inc
jnp
mov
lahf
rolb
ret
ret
xchg
iret
mov
jge
idivl
jecxz
or
push
jbe
mov
inc
cld
pop
and
dec
sahf
adc
mov
mov
cld
mov
shl
cltd
movsl
sub
xchg
out
xchg
iret
lahf
mov
mov
inc
mov
pop
mov
scas
hlt
popf
lahf
ss
iret
sbb
pop
adcb
std
psrlw
pop
mov
lahf
pop
jmp
add
lea
xor
and
repnz
adc
mov
gs
mov
cld
stc
jmp
dec
inc
popa
cmp
es
ja
leave
in
lahf
aas
pop
stc
stos
bnd
add
mov
xor
dec
mov
jns
or
mov
outsl
cmc
mov
push
pop
fbld
insb
and
mov
ja
dec
rcll
add
sbb
pop
jns
pushf
int3
jg
xchg
xchg
in
xlat
lea
push
ficomps
cmpl
aas
inc
mov
bsf
lret
aam
enter
sub
and
das
scas
cmp
xor
outsl
fidivrl
mov
pop
in
xchg
push
and
sub
orb
sahf
push
test
xchg
ja
jo
aas
xor
fists
imul
jge
in
push
mov
xchg
fists
subb
dec
lcall
mov
push
pop
scas
mov
or
push
lcall
jns
mov
aas
testl
lea
dec
pop
lahf
pop
pop
jg
sbb
fisubs
adc
jns
fstl
scas
jmp
cli
fnsave
fisubrs
push
sti
pop
out
push
shl
mov
pop
mov
jb
lret
arpl
aas
mov
pop
pmulhw
xor
xorb
dec
into
xchg
push
pop
jns
sbb
inc
popa
cmp
cmp
push
pop
jns
in
loopne
rorl
lea
dec
add
mov
outsl
hlt
in
or
inc
xchg
and
movsb
inc
aas
lret
mov
aas
mov
outsl
mov
sbb
adc
xchg
in
xchg
lret
test
inc
hlt
lret
xchg
push
fimuls
sub
pop
xchg
mov
ds
ljmp
inc
lahf
aas
jg
arpl
push
mov
sti
call
cmp
iret
sub
cmp
cltd
jnp
and
xor
adc
pop
stos
jge
sahf
jg
cld
stc
jne
out
lahf
sub
pop
xchg
mov
mov
sub
lods
orl
xor
imulb
scas
mov
int
push
das
out
mov
rorb
cwtl
sbbb
lret
subl
shlb
shl
stc
repz
cmp
repz
test
cld
cmp
adc
or
scas
mov
jecxz
lret
loop
arpl
jl
scas
mov
jle
inc
mov
stos
lods
or
cli
mov
stos
lahf
cli
repnz
lock
jle
movsl
xchg
pop
cld
adc
addr16
outsb
sbb
jae
xchg
outsl
out
xchg
push
loop
divb
sub
scas
out
xchg
pop
push
std
sbb
mov
pop
inc
mov
popa
jbe
lods
inc
mov
mov
fwait
or
lods
mov
xor
iret
or
das
aas
mov
fs
inc
pop
xor
iret
lahf
jg
cmpsb
push
stos
dec
int
cs
and
repnz
cwtl
das
icebp
aam
out
insl
mov
lds
out
lahf
pop
into
outsl
pop
xor
pop
test
cld
stc
repz
pop
movsl
ficoms
stos
xor
andl
iret
lahf
aas
jg
insb
movsl
pop
push
lret
in
stos
das
and
sub
jno
cmc
adc
pop
dec
stc
cld
adc
out
cmpsl
push
xor
sub
adc
xlat
and
in
jecxz
mov
xchg
sbb
sbb
dec
inc
jns
inc
or
mov
enter
xchg
push
push
aas
jg
sub
cmp
xchg
enter
iret
lahf
xor
adc
and
jnp
fidivrs
cmp
pxor
and
mov
xchg
xchg
subb
push
inc
sbbb
adc
push
orb
jl
xchg
rolb
adcb
jmp
cmp
cli
out
subb
cmp
sbbb
adc
push
pop
std
popa
jl
clc
flds
das
out
xchg
jle
add
call
xchg
cs
jne
incl
cli
inc
xchg
faddl
jle
sti
dec
std
js
inc
mov
int3
dec
aam
in
and
and
arpl
mov
pop
jns
and
dec
pop
aad
cld
push
sahf
push
push
shrb
xchg
add
lret
lahf
aas
cmp
into
lea
outsl
xor
loopne
lret
cvtps2pi
rol
or
lcall
imul
and
imul
lret
push
mov
jnp
pop
out
decb
cmp
aas
xchg
jmp
adc
in
aas
movsl
jg
inc
and
daa
and
test
leave
out
sub
pushf
rorl
dec
dec
stc
adc
fisubs
push
xor
nop
js
call
mov
jns
xchg
mov
dec
in
repnz
roll
or
int
sti
popa
repnz
add
inc
call
mov
dec
inc
fistpll
jl
in
mov
lahf
push
into
cmp
pop
and
lahf
lret
imul
and
test
cli
loop
into
por
pmaxsw
jns
xchg
aas
jle
jnp
sbb
cs
push
pop
ja
mov
cs
aam
stc
and
cmp
imul
loope
or
js
sbb
daa
mov
xchg
cmpsb
jecxz
scas
repnz
jb
or
sar
pop
scas
mov
andb
xchg
shl
mov
iret
in
inc
sbbl
cmc
adc
xchg
out
das
fdivr
cld
stc
and
xor
cltd
xor
stc
pusha
pop
mov
test
fistpll
int
out
xor
cmp
mov
fs
push
add
inc
sub
aas
jg
or
stos
sbb
xchg
jp
mov
adc
mov
outsb
lods
outsl
clc
push
mov
jne
adc
xchg
aas
inc
or
loope
sti
cmp
mov
sub
xor
inc
lods
nop
das
ja
sbb
push
iret
sub
jbe
ret
out
das
test
jno
adc
sbb
push
into
sub
mov
mov
jo
dec
add
jmp
pop
test
scas
pop
pusha
xchg
stc
inc
mov
push
fldcw
jl
xor
and
out
outsl
addr16
mov
adc
sbb
or
cwtl
aas
das
or
lret
sub
pop
flds
push
out
mov
and
sti
sbb
stc
repz
movsl
push
xchg
lea
das
loopne
aas
fwait
leave
mov
fwait
add
enter
xcrypt-ecb
cmpsl
iret
inc
loope
mov
movsb
cmp
sbb
enter
cs
sbb
pop
mov
push
push
mov
out
aaa
aad
rcrb
and
aas
and
pop
mov
orl
lahf
jg
repnz
aam
push
dec
out
jne
out
add
xlat
rol
mov
scas
addr16
xchg
fisubs
iret
rorb
sbb
dec
cli
jnp
add
sub
cmc
jo
out
out
in
je
lock
add
mov
into
pushf
je
outsl
insb
dec
sub
leave
cli
push
movsl
xor
mov
sti
xchg
or
stos
pusha
bound
incb
bnd
cltd
mov
xchg
ja
jg
pop
cmp
dec
cmpsb
and
pop
ret
sbb
mov
xor
popa
xor
mov
jle
into
divb
adc
pop
out
jns
mov
add
mov
cs
jl
mov
cmp
xchg
insl
pop
scas
lea
mov
dec
adc
push
jg
mov
es
pop
jg
add
and
jb
sbb
xor
sarl
fstpl
fildll
mov
push
daa
add
xchg
sub
pop
aas
daa
or
lret
inc
sahf
pop
jns
in
ss
inc
mov
bound
inc
mov
test
sti
cmpl
jecxz
mov
xor
jmp
lea
mov
jg
movsl
pxor
mov
aam
mov
aas
ja
or
shlb
inc
pop
or
call
test
inc
movsl
cwtl
xor
aam
aas
sbb
sahf
jg
inc
pop
mov
and
das
insb
jp
push
stos
cmpsb
jmp
cld
cld
sar
fildll
pop
outsb
pushl
mov
mov
into
or
cld
rorb
cmp
iret
lock
sahf
cmp
int
xchg
mov
ljmp
add
scas
and
push
mov
add
stos
test
ljmp
scas
cli
stos
outsl
cwtl
imul
into
jmp
test
in
inc
test
inc
frstor
rcrl
sbb
test
outsl
push
outsb
sub
sahf
pop
inc
inc
nop
mov
mov
add
inc
cmpb
aad
mov
jg
cld
or
jne
rorb
lahf
cld
add
aam
cli
push
dec
add
jnp
btc
repz
jne
xchg
mov
sbb
jns
cld
inc
in
int3
test
das
xor
arpl
pop
std
adc
popf
sub
sbb
inc
out
rclb
xor
jle
jge
repnz
adc
enter
jle
push
dec
dec
add
pop
out
jbe
faddl
lgs
dec
pop
cmpsb
fwait
cwtl
imulb
mov
mov
sbb
mov
stos
pushl
gs
popa
dec
je
sahf
out
in
sbb
test
pop
inc
pop
xlat
imul
out
mov
or
push
insl
sbb
hlt
push
adc
faddp
fdivrp
in
sub
xchg
repnz
pop
sbb
jecxz
cmp
lahf
xchg
rcrb
jg
das
ja
fsubrl
movlps
mov
in
sbb
icebp
fimuls
les
std
stos
xchg
jp
push
fdivr
nop
dec
out
stc
cld
cwtl
push
dec
clc
adc
fnstenv
xchg
jo
cmp
ja
jmp
aas
dec
sbbl
xchg
push
pop
scas
daa
xor
cmp
pop
push
add
or
sub
mov
fdivrl
insb
sbb
lock
lret
dec
loopne
inc
jne
ja
into
xor
outsl
repnz
add
inc
mov
mov
cmp
sub
pop
ds
sti
test
mov
mov
adc
iret
das
add
mov
mov
pop
jns
xchg
repnz
addl
jbe
into
push
push
icebp
in
push
imul
sbb
arpl
xor
stc
and
fisubrl
test
adc
clc
iret
sbb
jg
or
and
jecxz
jns
xchg
aaa
scas
mov
aam
pushf
ss
pop
pop
sbb
test
cmc
repnz
cs
in
rolb
mov
ficompl
mov
cltd
repnz
mov
mov
mov
nop
mov
mov
inc
or
pop
jle
jp
mov
shlb
repz
lahf
xchg
cmp
push
mov
cld
stc
fdivrl
push
jmp
fld
or
adc
add
aas
pop
das
adc
mov
out
jle
data16
cld
pop
and
ja
call
imul
jmp
in
loop
jns
push
jge
mov
out
lahf
mov
lock
lods
jg
adc
jge
addr16
pop
sahf
xor
test
decl
lds
loopne
lret
out
sahf
push
dec
xchg
cmpsb
cmp
xchg
fisubrs
jb
xlat
xor
stos
das
out
pop
je
filds
push
cld
sarl
test
iret
jle
sbb
mov
ffreep
dec
das
jg
pop
cmp
fwait
out
sbb
inc
jle
mov
pusha
mov
loope
iret
lahf
adc
imul
out
iret
lahf
add
dec
insl
sbb
stc
rep
jmp
mov
into
sub
and
sbb
cld
cld
dec
js
inc
fisubs
pop
add
scas
hlt
cmp
cld
add
lods
and
mov
adc
jle
outsb
fucom
rcrl
pop
push
mov
dec
lret
lahf
rorl
aam
fistpll
mov
push
add
mov
in
iret
or
xor
add
das
movsl
pop
cmpsl
scas
dec
jne
sbb
mov
add
inc
jp
pop
cli
in
pop
test
lods
jno
repz
ds
das
insb
loopne
int3
ljmp
adcb
leave
pop
incb
xor
mov
les
cltd
and
aas
jg
in
in
mov
dec
in
icebp
les
xor
in
aaa
clc
imul
add
push
rcrl
addr16
mov
pop
mov
push
mov
xlat
mov
mov
pop
add
hlt
setg
mov
sub
subb
jmp
imul
mov
insl
cld
sbb
into
sub
rcll
cs
lahf
aas
jg
bound
mov
sub
pop
fistps
faddl
jmp
or
sub
jle
test
repz
push
loopne
je
sub
dec
fs
loope
ljmp
repnz
pusha
fmuls
lret
ss
fistpl
lcall
mov
lea
mov
jl
pop
aas
out
maxps
xor
testb
lahf
arpl
mov
pop
jns
in
cmp
mov
es
fisubrl
xchg
push
iret
fs
or
jbe
push
rol
mov
pop
mov
sub
in
iret
les
repnz
imul
ja
movsb
cwtl
in
leave
pop
ficomps
jne
push
pop
jns
movsb
daa
pop
scas
call
rol
xor
std
jb
xchg
test
mov
dec
sbb
dec
push
sti
add
aas
jg
inc
fidivs
fidivs
mov
clc
inc
xchg
lahf
fidivs
add
outsb
outsb
adc
pop
cmp
outsl
stc
sub
mov
or
or
out
lds
mov
mov
push
sbb
in
push
out
pop
mov
incl
push
pop
cmp
push
sbbl
pop
jns
xor
aaa
xchg
cmpsb
cmp
pushf
movsb
out
lahf
aas
mov
sbbb
cmp
sub
repz
sub
out
data16
mov
repz
push
fwait
lods
ss
aas
mov
xchg
inc
pop
loopne
das
lods
fistps
mov
xor
repnz
in
fdivp
xor
ljmp
xchg
lret
mov
je
and
jp
repz
je
loope
pop
mov
cmp
stc
rcrl
lret
jecxz
movsl
jmp
cmpsl
pop
imul
ss
lea
fidivs
call
adc
sahf
in
mov
clc
mov
gs
adc
scas
pop
clc
ds
movsb
test
cs
into
je
std
mov
inc
arpl
xchg
mov
out
das
pop
jae
outsl
push
sbb
or
mov
mov
data16
or
loopne
pop
jns
mov
into
xchg
cmp
pop
scas
out
aad
xor
mov
mov
scas
jo
iret
lahf
aas
jg
aad
mov
lret
bound
movsb
icebp
mov
das
loope
xor
movsl
mov
movsl
or
or
inc
lahf
jae
sahf
inc
das
aas
jg
inc
leave
cli
int
mov
inc
cmpsl
xchg
mov
and
out
sbb
mov
dec
ret
pop
mov
pop
cmp
xchg
jns
lahf
lret
jb
jo
in
cs
lret
dec
push
fdivrp
std
addr16
pop
mov
add
icebp
mov
jmp
sbb
mov
and
cmp
leave
ud2
sub
repnz
shrd
push
xchg
sbb
popf
add
mov
das
andb
sub
repnz
xchg
push
test
cmp
inc
mulb
call
cmc
dec
sbb
arpl
jg
sahf
xchg
dec
aas
mov
mov
cli
jno
out
xor
cmp
shr
cli
sti
repnz
push
adc
pop
dec
loopne
mov
mov
divb
andl
repnz
sbb
cld
jne
push
mov
outsl
popa
iret
fidivl
push
pop
jns
cmc
sar
push
data16
push
sbb
jns
xchg
movl
mov
add
into
push
lret
aas
sti
or
scas
pop
dec
jns
pop
scas
mov
cwtl
xor
jne
xchg
mov
shrl
test
jecxz,pn
daa
ficompl
iret
scas
mov
ljmp
iret
mov
sub
into
push
adc
pop
popa
pop
scas
aas
fldl
add
out
fcompl
in
iret
lahf
mov
loop
out
sub
shll
xchg
out
daa
and
in
das
and
xor
fyl2xp1
mov
adc
loopne
add
movsb
and
ret
sub
lahf
aas
mov
cmp
and
fdivrl
movsb
xor
iret
jo
fimuls
or
or
out
cmpsl
imul
sbb
push
nop
jg
sub
clc
pop
popa
mov
jge
and
out
test
pop
repnz
int
jne
shll
lahf
aas
jg
lods
mov
mov
mov
mov
std
loope
insl
add
loopne
iret
das
outsb
push
iret
cmp
sti
mov
int3
lahf
test
fisttps
sub
fwait
jle
loopne
aas
pop
jae
mov
iret
lahf
aas
jg
stos
cs
insb
cmp
mov
cld
stc
repz
mov
jmp
xchg
pop
aaa
cwtl
stc
dec
inc
pop
jns
or
lahf
cwtl
outsl
pop
adc
aas
jg
cld
loop,pn
stos
mov
insl
mov
push
mov
lahf
sbb
in
add
pushf
cmc
pop
mov
pop
ds
push
lcall
es
mov
mov
rcrl
mov
jl
pushf
movsb
add
mov
sbb
icebp
inc
push
pop
test
lret
sub
xor
adc
cmc
jbe
cmc
in
mov
xor
jns
sarl
fwait
or
orb
loopne
repz
ds
mulb
mov
fsts
repnz
jns
pop
in
icebp
and
insb
repz
aas
jno
pop
xchg
mov
adc
scas
mov
loopne
cmpb
daa
dec
lret
repnz
pop
fidivl
adc
inc
cmp
mov
std
lret
mov
pusha
mov
or
cwtl
push
pop
jns
sbb
jo
xor
jecxz
sbb
push
je
or
lret
xchg
sbb
fs
pop
mov
xchg
push
pop
arpl
data16
xchg
push
cmp
pop
jns
std
mov
out
cmp
int3
adc
pop
jns
and
vpmuludq
jp
cmp
cmc
lock
fistpl
xor
sahf
pop
xlat
iret
iret
and
inc
outsb
pop
push
ret
sti
repnz
in
pusha
sub
jmp
add
iret
jg
mov
inc
lcall
dec
out
lahf
aas
mov
std
imul
dec
lods
inc
les
xor
lods
xchg
and
sub
pop
stos
sub
mov
shlb
arpl
div
add
das
push
pop
dec
nop
scas
jno
aam
xadd
pop
or
pop
pop
cmpsb
jmp
repz
lahf
aas
orl
adc
stos
cmp
cld
stc
call
dec
andl
out
push
js
and
iret
lahf
aas
mov
cltd
xchg
jmp
push
inc
in
repnz
fmul
add
inc
push
test
mov
imul
pop
jno
ss
repz
lahf
rorl
repz
adc
mov
cld
stc
mov
rorl
add
xchg
or
rorl
aas
mov
decl
daa
clc
xchg
icebp
test
pop
dec
mov
iret
mov
enter
outsl
std
push
pusha
lret
test
aam
ror
std
in
jmp
lret
mov
daa
mov
das
and
jo
scas
mov
xchg
pop
jl
notl
shll
jne
mov
push
scas
repnz
repz
bound
sar
cmc
lret
clc
pop
add
or
aas
jg
cld
mov
jg
sbb
mov
lahf
cmp
inc
sahf
cmp
cld
and
sub
cmc
lret
ret
aas
mov
out
lahf
sbb
dec
scas
mov
lea
je
out
adc
cmp
shrb
leave
dec
push
cmp
mov
add
out
mov
lahf
aas
aas
and
rcll
test
sub
jns
jbe
addr16
lahf
jb
jp
mov
das
mov
sub
mov
out
aas
dec
outsl
repz
aam
cld
adc
call
fdivl
push
cmp
std
cltd
jle
ja
jle
sti
mov
dec
shlb
or
outsl
pop
nop
repz
mov
hlt
push
pusha
test
stc
repz
ds
test
sbb
addr16
imul
fisttpl
inc
pop
push
jo
in
push
ficomps
push
or
pusha
rol
and
push
fdivrp
jb
nop
mov
ss
xor
mov
fwait
enter
out
das
xchg
mov
jne
lock
jns
bnd
jno
mov
mov
or
xchg
das
push
or
jle
js
repz
roll
aad
js
mov
lcall
jmp
clc
lret
push
adc
call
xchg
and
out
das
enter
sbb
ja
jle
push
xchg
mov
mov
mov
clc
push
jg
mov
pop
jns
xchg
test
sahf
pop
adc
iret
lahf
and
lock
push
gs
pop
dec
and
nop
pop
shrb
cs
cmp
inc
iret
fiadds
movsb
pop
and
adc
xlat
adcb
ljmp
jg
lds
xchg
push
xchg
enter
jo
int3
xor
xchg
ja
mov
sub
rdmsr
pop
mov
inc
add
jle
adc
lahf
pop
cwtl
rorb
xchg
popf
fwait
in
out
adc
es
fwait
jns
shrb
sahf
cltd
aam
mov
int3
cltd
mov
inc
push
xchg
xchg
aaa
rorb
daa
lahf
icebp
pop
push
aam
ljmp
jp
push
pop
andps
orl
test
aas
sbb
lret
fbld
or
lahf
mov
in
jo
mov
jno
dec
ja
jg
das
or
daa
repnz
xchg
iret
shrl
push
or
lret
mov
hlt
jbe
inc
mov
mov
pop
fnstsw
mov
cmpl
in
push
pop
repz
sub
iret
lahf
aas
adc
dec
loopne
insl
cmc
aam
or
jns
repnz
cmpsl
out
pop
ss
mov
adc
push
pop
out
int
pop
mov
mov
jp
sub
ror
lahf
aas
rcrb
adc
lahf
ds
adc
add
lahf
mov
cltd
movsb
inc
mov
push
scas
push
cmpsb
push
sbb
cld
jb
cmpsb
inc
mov
push
adc
rcl
jmp
adc
sub
adc
adc
sub
dec
mov
iret
mov
xlat
xchg
jb
or
test
pop
jns
add
gs
bound
push
adc
jb
and
fisubs
dec
cmc
scas
pop
pop
addr16
xor
push
mov
push
daa
pop
std
into
rorb
sub
popa
sub
lahf
pop
sbb
push
inc
inc
adc
jne
mov
xchg
aam
or
leave
push
dec
inc
push
in
leave
scas
pusha
mov
sub
mov
mov
push
js
and
dec
and
pushf
xchg
jae
sarb
aas
add
lahf
sbb
xchg
fs
or
cli
push
rcrb
sub
pusha
ds
iret
sahf
sbb
cmpsb
sahf
icebp
xchg
mov
fsub
xlat
dec
jecxz
jecxz
imul
pop
mov
jg
out
lods
cmp
insl
lret
outsb
in
mov
dec
icebp
lahf
jle
or
jle
addl
mov
addl
pop
add
jb
mov
dec
or
divl
inc
add
xchg
sbb
cmpsl
inc
lea
iret
lahf
aas
mov
pop
or
insb
mov
cld
stc
repz
je
or
cmc
insl
add
sbb
xor
lea
jg
pop
or
push
into
mov
iret
dec
imul
sub
sbb
ds
loopne
mov
fidivrl
mov
sbb
inc
pop
xchg
jbe
and
cmp
cld
cld
stc
movsl
sahf
xchg
cmp
call
enter
popf
fistps
pop
mov
pusha
sarb
adc
or
aas
bound
stos
mov
xchg
insb
push
lock
mov
jge
adc
and
and
fdivs
or
in
sub
call
sar
repz
jle
push
addl
sub
pop
nopl
mov
repnz
xchg
inc
enter
mov
es
cmp
div
lret
fbld
inc
mov
bound
mov
xchg
adc
js
mov
gs
push
rcrl
mov
jle
adc
das
cmp
mov
scas
mov
sub
hlt
cmp
sub
das
jg
leave
xchg
mov
aas
fnstsw
xchg
lock
or
inc
push
push
jg
pop
ljmp
scas
mov
out
test
xor
mov
es
das
pop
js
pop
jle
dec
cli
lret
cld
stc
mov
xor
dec
test
and
cs
or
insb
icebp
push
js
out
das
fisttpl
roll
xchg
lcall
mov
or
iret
lahf
into
mov
sub
mov
addr16
push
mov
cld
stc
mov
xor
cwtl
pop
cwtl
dec
jl
iret
test
fidivrs
js
int
lahf
sbb
das
ja
sub
out
das
rcrl
push
sub
sbb
cli
in
mov
popf
or
dec
subb
imul
xchg
push
in
popa
bound
out
adc
les
popa
jns
orb
sbb
ficomps
pop
or
xchg
js
gs
mov
add
cmc
sahf
leave
cmp
lret
sub
inc
adc
push
xor
bound
repnz
shlb
loop
mov
inc
mov
fstl
imul
fwait
insb
jnp
mov
fidivrs
repz
insb
push
adc
lock
pusha
lret
mov
cmc
out
adc
inc
dec
rclb
lret
clc
test
sbb
or
shll
or
sbb
aam
insl
xor
test
mov
pop
pusha
loop
mov
in
jle
pop
aaa
jg
mov
push
lods
inc
scas
sub
loopne
test
in
pop
lods
aas
cmc
pop
dec
icebp
lahf
xor
mov
sub
subl
out
inc
lret
out
ret
dec
loope
xchg
add
pop
outsb
inc
int3
lahf
jb
jg
outsl
xchg
push
gs
out
adc
jle
cld
dec
insb
mov
xchg
adc
jg
or
into
insl
add
sbb
shlb
inc
into
or
iret
xchg
aas
jg
push
dec
imul
int3
icebp
sbb
out
pop
lea
mov
add
pushl
lock
xor
test
inc
add
mov
lahf
aas
xor
mov
in
lret
mov
and
dec
aas
pop
xor
icebp
out
int3
jnp
inc
out
push
negl
cld
cld
mov
ja
aas
jl
test
xor
out
mov
push
dec
aas
and
scas
pop
call
add
pop
jne
mov
xchg
out
ljmp
sub
mov
push
inc
jl
lret
lahf
test
or
es
push
add
loope
sahf
cmp
mov
mov
sbb
jg
inc
jle
mov
and
inc
ja
out
lahf
dec
pop
les
out
xchg
pop
cli
sar
in
addr16
push
cmpsl
cmc
or
pop
adc
inc
movsb
jmp
scas
and
lea
out
cld
stc
repz
outsl
mov
cmpsl
and
iret
pop
popa
cmp
jle
or
cld
cwtl
ficoml
dec
sarl
jl
fs
sbb
fsub
in
adc
or
sub
sub
outsl
fnsave
int3
sahf
sbb
addr16
cmpsl
xchg
test
fninit
mov
inc
dec
or
lahf
test
push
inc
jnp
repnz
xchg
jp
aas
test
mov
das
or
lods
cmc
add
test
mov
in
inc
xchg
jbe
pusha
jae
add
xchg
lock
pop
sarl
in
inc
dec
inc
xchg
mov
fimuls
aas
cmp
pop
stos
xchg
call
add
pop
cmpsb
push
sahf
cld
movsl
push
das
mov
lahf
add
lock
push
jecxz
das
inc
mov
sahf
mov
adc
in
out
xchg
push
movsl
inc
cmpl
xchg
push
pop
jns
arpl
pop
repnz
sbb
cld
ret
aam
mov
fildl
push
xor
popf
push
sub
lods
mov
pop
adc
pop
loope
dec
jae
notb
sub
inc
call
sub
mov
test
fcom
pop
mov
adcl
lahf
mov
es
mov
dec
mov
dec
push
jg
test
sub
test
push
pop
jle
push
out
aas
mov
and
mov
pop
scas
sbb
pop
mov
repz
mov
outsb
outsb
push
fnstsw
movsb
mov
paddb
cmpsb
jb
cmpsl
adc
hlt
inc
or
lret
pop
cmp
cltd
sahf
popf
add
mov
fsub
jmp
cmp
or
inc
fnsave
pushf
call
inc
mov
or
push
js
mov
in
add
jo
bnd
inc
loope
jecxz
pushf
clc
enter
fbstp
mov
jg
or
inc
loope
pushf
filds
addl
xchg
mov
aas
cs
repz
mov
mov
push
xchg
loop
ljmp
cmp
repz
inc
push
in
cld
daa
pop
mov
and
call
aas
icebp
repnz
outsb
sbb
jae
xor
mov
stos
test
fnsave
lret
mov
pushf
lock
sbb
dec
adc
cld
sarb
aas
xchg
push
fisubrs
fistl
movsl
cld
js
or
adc
dec
fisttps
push
dec
dec
js
dec
push
dec
fisttps
push
dec
dec
je
dec
dec
test
pop
push
adc
pusha
sub
pmaxub
sub
xchg
nopl
or
aam
iret
outsl
sbb
add
dec
aad
outsl
and
test
dec
scas
repnz
stos
dec
ss
imul
shr
pusha
loop
mov
xchg
rorl
faddl
mov
mov
push
cmp
mov
dec
push
iret
xchg
or
push
adc
sub
dec
adc
test
sbb
push
dec
aad
fcoms
scas
cmp
mov
lret
shr
adc
aas
add
arpl
je
pop
clc
and
sahf
iret
xchg
test
mov
cmpsb
packsswb
pop
dec
nop
mov
repnz
stos
jl
sbb
nop
xchg
cld
repnz
scas
stos
cmp
and
adc
pushf
ja
adc
mov
stmxcsr
push
sbb
pop
sub
data16
int
sbbl
test
aas
fidivrs
repnz
shll
jmp
push
sarl
sbb
lahf
aas
aas
or
xchg
test
sti
arpl
inc
loop
iret
jb
jbe
or
or
cld
stc
repz
ljmp
or
aas
jg
outsb
data16
jle
jg
lahf
pushf
jle
orb
pop
xchg
out
cld
nop
inc
adc
xor
jne
and
mov
cmc
cmpsl
movsb
jne
nop
pand
pop
lahf
aas
call
xchg
test
lahf
cltd
adc
lcall
das
lret
jns
xchg
ja
sub
mov
pusha
mov
fwait
cld
fdivr
movsl
jne
pminsw
imul
jl
jle
cld
stc
repz
pop
testb
cs
add
mov
lahf
aas
jg
rol
or
xchg
or
jns
inc
xchg
fsubrl
fcoml
adc
mov
xor
and
mov
sti
mov
out
cmc
dec
xor
mov
lock
jnp
sbb
xchg
pop
lods
pop
jae
bound
jg
pop
lods
std
push
enter
repnz
jbe
ficompl
sub
imul
mov
popf
lret
lods
movsl
jg
cmp
dec
imul
pop
clc
push
mov
mov
cli
sbb
divl
lret
ds
sbb
scas
ja
xor
mov
fwait
add
push
in
cmc
lret
pushf
lahf
pop
push
outsb
mov
sbb
push
ret
pushf
mov
jg
xlat
in
pop
or
sub
fs
mov
add
cwtl
pop
call
repz
pop
or
test
push
and
int3
mov
cld
add
jns
adc
out
push
movsl
and
icebp
cmp
xchg
inc
jmp
add
data16
cld
adc
dec
cmp
push
lahf
aas
jg
hlt
cmpsb
pop
push
insb
xor
or
inc
or
iret
jg
aad
jbe
xchg
jg
push
sub
jge
mov
lods
xchg
sub
stc
xor
xchg
aas
pop
out
mov
and
lret
iret
mov
subl
lcall
roll
scas
lods
push
in
mov
insb
iret
mov
test
lds
jg
inc
pop
lcall
add
jo
mov
inc
fcmovbe
negb
xchg
movsl
mov
pop
xor
repz
sbb
jns
dec
jo
int
adcb
mov
pop
cmp
inc
push
push
pop
fdivrp
sbb
inc
add
insb
adc
cld
ret
out
loope
push
mov
cmp
mull
das
lahf
aas
fldenv
fwait
jp
pop
mov
add
and
dec
ds
mov
mov
sub
add
scas
stc
cmpsl
rorl
mov
jl,pt
sub
inc
test
cltd
inc
idivl
hlt
pop
mov
icebp
mov
xor
stc
push
or
dec
jb
or
pop
dec
adc
jg
cld
into
out
inc
daa
ljmp
xchg
add
cltd
mov
adcl
test
mov
repz
mov
mov
and
cmp
enter
popa
add
scas
lods
fistps
psubb
fistpl
dec
out
aam
mov
cmc
loopne
and
popa
sahf
in
xor
pop
add
mov
outsb
test
adc
incb
adc
jo
insb
outsl
add
inc
pusha
adc
movsb
fwait
pusha
push
dec
cmp
stc
mov
mov
ds
aad
repnz
and
dec
adc
or
fwait
aam
cs
mov
outsl
push
fisttps
cld
fucomip
cli
sarb
pop
adc
or
dec
std
repnz
dec
xlat
pop
mov
push
clc
shld
sub
xor
and
push
jle
mov
or
rorb
cli
jne
cwtl
scas
cli
aas
outsl
in
jmp
dec
dec
clc
sbbb
lahf
popf
sbb
mov
adcb
lcall
outsl
testl
ja
inc
ficoml
lret
adc
sub
push
and
out
push
cld
movsl
inc
aaa
sub
movsb
xor
aas
push
push
or
or
pop
scas
call
push
adc
repz
sub
stc
pop
clc
repnz
pop
out
or
lods
adc
jg
pop
aaa
addb
mov
loopne
ds
mov
cld
jmp
push
sbb
jg
push
mov
xchg
fmulp
dec
or
lock
dec
sub
adc
or
jg
aas
xchg
or
and
mov
xor
sarb
aas
scas
lods
jle
dec
pop
ds
daa
mov
pop
mov
lea
incb
dec
rcrb
xchg
add
nop
iret
fldcw
inc
repz
cmpsb
jle
iret
xchg
lret
testl
and
repnz
mov
xchg
inc
jmp
mov
outsl
xchg
fcomip
aas
out
lahf
movsb
fisttpl
mov
push
hlt
cmpsb
xor
dec
inc
or
pop
fidivrs
aad
jbe
xchg
jg
mov
adc
sbb
enter
in
sub
sahf
adc
js
adc
mov
xor
xor
sbb
pop
lahf
xor
enter
xor
mov
add
mov
orb
fbstp
icebp
and
xor
nop
das
dec
xor
pop
xor
add
xor
repnz
mov
dec
mov
call
xor
jae
das
cld
in
aas
adc
pop
push
orl
pop
add
ss
jl
add
dec
fwait
sub
jle
je
loopne
sahf
stc
adc
pop
pop
sub
inc
out
sub
jmp
lahf
rorb
cwtl
outsl
aas
dec
mov
cmpsb
lcall
cs
rclb
paddsw
in
test
jge
mov
sub
cmpsb
cmpsb
jmp
iret
scas
add
xchg
test
das
loope
es
xchg
mov
and
cmp
loopne
loopne
mov
mov
and
pavgb
add
adc
loopne
and
xor
es
pop
push
and
add
pop
mov
loop
loopne
sbbb
jg
cwtl
jo
loopne
push
inc
push
add
mov
mov
cmp
cmp
sarl
stc
or
push
pop
jns
prefetcht2
and
iret
ret
repnz
jne
push
movsl
daa
decl
inc
inc
repnz
lret
sub
les
lahf
xchg
mov
pusha
lret
mov
je
sub
pop
dec
clc
in
mov
adc
push
mov
iret
jo
pop
adc
incl
jmp
xchg
out
shlb
mov
push
and
repz
cmp
jns
mov
xchg
ja
fldl
pushf
mov
out
ret
stc
xor
in
repz
js
cmpl
pop
xor
xor
hlt
adc
fisubl
inc
aas
jg
inc
out
mov
inc
pop
push
aas
nop
xchg
lahf
out
inc
movsb
ret
sbb
repnz
inc
adc
sbb
push
xlat
clc
daa
out
and
imul
repz
push
mov
fwait
das
push
xchg
inc
aas
jg
cld
add
push
popf
pop
jo
adc
adcb
outsl
mov
das
pop
jmp
outsl
out
fiadds
pop
incb
faddl
cld
stc
xor
push
cmp
std
xor
lret
in
pop
pop
mov
sub
loopne
adc
mov
scas
jl
cmp
fldl
or
lock
pop
unpcklps
repnz
stc
add
xchg
popa
adcb
xor
sbb
mov
adc
scas
push
lcall
jl
cld
rcr
mov
lcall
mov
pop
jle
rclb
mov
int3
bound
push
sbb
add
mov
inc
ret
iret
insl
out
lahf
aas
dec
mov
mov
pop
pop
pop
stc
repz
adc
push
mov
cmp
inc
jg,pt
cmpsb
xchg
push
dec
sarb
in
jle
pop
inc
jg
cs
add
pop
sub
jle
jo
cmp
add
pusha
scas
sub
sbb
movsb
pop
or
lahf
jg
jge
inc
insb
in
iret
lahf
jmp
mov
push
xor
in
jnp
pop
nop
jmp
cmp
jp,pn
fistps
push
stc
imul
stc
repz
cs
push
dec
mov
popa
int
mov
pop
flds
lahf
xor
dec
out
in
rorb
xchg
pop
clc
daa
jg
cmpsb
cmp
les
cltd
fcomps
icebp
and
nop
dec
cmp
lods
pop
outsb
minps
loop
push
inc
inc
pop
cs
xchg
mov
insl
push
int
cmp
adc
shr
mov
fiadds
adc
and
out
xorb
jg
pop
pop
mov
sub
push
loope
or
iret
out
or
icebp
mov
mov
xor
mov
stos
aas
loope
adc
add
cmc
in
enter
xchg
cmp
js
pop
repnz
stc
xchg
pop
pop
int
enter
push
cmpsb
lret
push
push
jmp
or
dec
xlat
add
jecxz
dec
out
in
add
pop
bswap
sub
out
pop
mov
in
lods
sub
mov
xchg
or
sbb
jle
repnz
leave
lcall
mov
mov
mov
mov
sarb
push
xchg
push
pop
mov
push
incl
lret
inc
inc
push
xchg
push
pop
jns
xchg
lret
sub
mov
loope
in
jp
iret
fwait
jae
or
sbb
lahf
hlt
repnz
and
mov
lds
xor
jle
or
aaa
rorl
in
mov
dec
sbb
inc
add
rorb
mov
loope
mov
in
arpl
js
or
rclb
push
xchg
jo
out
out
or
jbe
jae
adc
and
jg
into
push
mov
adc
push
mov
fmull
pusha
das
fbstp
js
daa
ds
mov
mov
dec
cs
inc
adc
inc
cmpsl
pop
pop
push
add
pop
sar
xlat
and
movsl
sub
sbb
lcall
repnz
stc
push
inc
or
lahf
cld
stc
test
shll
and
push
aaa
shl
dec
sbb
mov
jge
std
xchg
pop
mov
or
add
aas
mov
push
pop
aas
mov
iret
lahf
aas
fwait
push
insb
cmp
cmp
scas
test
and
sub
fisubs
movsb
in
je
sahf
jbe
cli
in
dec
sub
cld
sbb
test
cmp
mov
out
les
cmp
popf
stc
xchg
hlt
in
idiv
push
cli
push
sahf
jmp
jg
cld
iret
popf
lcall
mov
cmpl
jns
daa
movsl
push
outsl
insl
call
bound
outsl
int3
in
mov
fimuls
pusha
and
mov
add
out
rolb
mov
sub
cld
stc
mov
push
add
dec
pop
xor
pop
or
pop
stc
xchg
lock
mov
into
adc
push
int3
fwait
pushf
dec
call
lods
push
cs
test
ja
lahf
pop
out
push
inc
jp
in
aaa
pop
sete
add
jg
fisttps
test
out
imul
imul
xchg
pop
or
sbb
pop
pop
or
inc
lahf
add
out
das
add
or
cld
stc
repz
mov
roll
inc
inc
adc
jle
sub
xchg
cmp
cld
stc
repz
int3
hlt
pop
fisttpll
or
shrb
aas
jg
xor
ja
sbb
inc
and
pushf
outsl
iret
das
test
pushf
inc
mov
in
xchg
and
lea
imul
push
cld
stc
add
mov
leave
fwait
rol
add
jns
jl
fistpll
sub
into
pop
mov
jmp
push
aaa
pushf
das
scas
mov
or
mov
js
or
ret
mov
push
rcl
push
mov
out
pop
sti
jle
das
inc
das
test
outsb
aas
add
dec
mov
or
dec
push
outsb
add
aas
jg
ds
inc
movsb
in
jmp
inc
push
pop
jge
add
enter
pop
repnz
imul
and
lahf
lock
sti
sbb
pop
add
decl
dec
inc
jge
in
add
iret
ds
cmpsl
incb
fmulp
sbb
popa
scas
daa
aas
aas
mov
pop
fimull
push
fsubrp
decb
pop
fnstcw
or
push
pop
daa
or
lahf
ss
pop
cmp
jg
mov
jo
fists
out
lea
repnz
push
xchg
xchg
hlt
jb
inc
add
jle
push
int
es
add
insb
shlb
mov
cld
stc
pop
outsb
inc
inc
sub
adc
jg
outsl
sub
lods
pop
pop
mov
aas
add
pop
pop
push
xchg
push
jl
iret
mov
scas
in
icebp
adc
out
sarl
mov
mov
jle
inc
pop
stos
loop
inc
and
cs
out
push
pop
cmp
lcall
int
xchg
lahf
aas
mov
jns
cmpsb
fildll
shl
out
push
jmp
outsb
xlat
loopne
mov
pop
xor
in
adc
in
xchg
push
fidivrs
pop
scas
jge
out
pop
mov
adc
add
add
mov
and
clc
jno
orl
sub
leave
cmpsl
or
cmpsl
repnz
scas
pop
sbb
jno
aas
insl
out
scas
sub
mov
sub
mov
mov
rolb
ret
sarb
lahf
pop
sbb
cltd
dec
push
push
out
aas
cmp
push
daa
mov
inc
repnz
out
rorb
repz
mov
sti
add
ds
popa
pop
adc
or
xchg
add
femms
jo
xchg
or
enter
loop
pop
cs
mov
decb
xor
sti
in
xchg
clc
mov
push
shl
pop
adc
dec
jnp
ret
xor
test
jno
pop
out
jne
stc
popa
cmp
push
mov
sub
xor
adc
and
push
mov
mov
adc
lds
jb
fiadds
aas
jl
leave
push
bound
push
dec
pop
es
xor
lods
pop
lods
movsb
lcall
add
inc
push
mov
es
movsb
lods
out
lods
jp
leave
adc
lods
lahf
pusha
xchg
add
fs
mov
mov
lcall
add
and
ja
dec
out
cld
stc
pop
into
add
repz
test
jmp
dec
iret
mov
pop
pop
cmp
repz
imulb
jg
or
cmpsb
jmp
bound
gs
push
movsb
lret
js
imul
std
or
xor
mov
fsub
push
fstl
cli
orl
addr16
adc
enter
ficomps
or
hlt
ja
push
mov
mov
adc
jmp
sub
ds
pop
or
sbb
push
mov
add
aas
call
in
pop
mov
sub
out
arpl
arpl
in
add
getsec
add
adc
je
mov
cld
stc
ja
ja
pop
fs
das
and
mul
xchg
das
cmpsl
out
andb
pop
xchg
stos
dec
sub
mov
sbb
jg
mov
aam
loopne
jo
in
sahf
add
out
xchg
pop
stos
inc
int3
add
addb
push
jae
push
cli
push
pop
push
das
jo
and
pop
jl
push
sbb
mov
adc
or
adc
repz
repnz
xlat
jl
cli
dec
sbb
add
adc
xchg
xchg
ret
jl
dec
outsb
lar
aas
lods
xor
pop
into
xchg
je
push
ss
repz
lahf
mov
lcall
call
jns
aaa
push
fbld
dec
rep
fdivp
lret
or
loopne
fcomp
movsl
cmc
ja
sub
mov
mov
xchg
add
cmp
stc
xchg
fiaddl
mov
fs
iret
loopne
pop
cld
or
test
insb
and
and
lock
xor
lods
mov
push
lock
mov
mov
sbb
sbb
sub
add
sub
sarb
aas
jg
std
fcompl
flds
mov
add
shll
or
mov
inc
add
enter
xor
dec
int3
repz
xchg
fs
gs
sbb
stc
xchg
dec
jae
imulb
cmpsl
mov
cmc
enter
rol
adcb
mov
stos
mov
cmpb
stos
shll
jg
pop
add
jns
incb
out
adc
int
dec
dec
test
daa
push
repnz
stc
and
lahf
push
out
adc
push
push
pop
xchg
dec
ret
pop
mov
xchg
rcll
popf
int
cmp
xchg
fsts
inc
popa
jb
xchg
cmp
or
push
imul
push
aaa
and
pop
in
push
mov
pop
mov
or
test
cld
stc
repz
test
std
pop
popf
mov
cld
add
pop
mov
mov
cld
mov
mov
test
es
adcl
adc
cld
stc
mov
lea
sub
pop
hlt
and
dec
push
jns
mov
jbe
and
jbe
inc
add
and
out
inc
pop
fld
mov
ja
push
jb
add
iret
lahf
outsl
not
mov
push
mov
fsts
out
sahf
aad
rcll
comiss
jmp
mov
movaps
cmp
nop
jb
mov
mov
xchg
aaa
dec
enter
rcrb
stc
mov
xchg
scas
out
ja
xor
push
adc
mov
adc
aas
mov
nop
cli
icebp
pop
push
aam
push
inc
adc
orl
shll
jp
push
xor
xor
out
aas
fadds
dec
mov
push
adc
cmp
inc
bound
dec
ja
mov
mov
xor
rcll
or
and
aad
dec
jbe
fldl
andb
ret
ret
dec
pop
fnstsw
mov
jg
and
mov
incl
adc
lock
ja
dec
loopne
insl
cmc
aam
or
aas
lret
mov
cmpsl
out
shr
das
insb
cltd
test
mov
xor
out
adc
ja
inc
add
sub
sarb
das
gs
adc
push
lahf
movb
jle
cs
xchg
fcomps
inc
mov
cld
or
cmpsb
push
sbb
fistps
jl
mov
pop
or
jg
pop
mov
das
dec
clc
adc
adc
repnz
repz
fisubrs
iret
dec
hlt
mov
jp
jmp
and
add
xchg
iret
push
or
bound
in
call
pop
jno
aas
mov
dec
lahf
out
dec
jbe
mov
xor
rorl
jae
push
outsb
rorb
filds
fadd
sarb
outsl
pusha
stc
pop
outsb
sarb
add
mov
push
inc
push
dec
pushf
cmp
in
add
sub
push
js
lahf
aas
jg
std
lds
and
jae
push
cld
mov
jnp
sbb
iret
add
push
sbb
mov
sub
fldt
pop
call
push
out
cmpsb
sahf
icebp
xchg
add
cld
stc
mov
lods
dec
inc
sub
cmp
cmc
adcb
dec
cmp
int
jo
lahf
aas
cmp
jb
incb
jbe
push
ror
out
cmp
loope
push
enter
fists
leave
out
mov
lahf
ja
push
add
daa
mov
cmpb
jp
sbb
aas
sbb
jle
sub
push
cs
fimuls
std
scas
xor
stc
fildl
push
cmp
sub
pop
mov
sbb
inc
dec
aam
add
in
jne
adc
inc
lods
stos
xor
push
pop
mov
scas
or
sti
pop
movsb
gs
and
xor
lahf
aas
push
fisubs
mov
xchg
fs
add
pop
add
in
lret
aas
pop
mov
gs
sub
ret
lods
inc
outsb
icebp
inc
fbld
aas
mov
adc
lahf
sbb
shld
jb
aaa
pop
mov
outsl
or
mov
roll
insb
mov
sbb
les
mov
fdivr
adc
mov
sub
scas
les
push
adc
sahf
xchg
fdivs
mov
mov
mov
fcomps
lea
stc
pop
jae
mov
fsubp
mov
clc
pop
mov
mov
dec
insb
sbb
mov
sbb
adc
adcb
ljmp
pop
jns
frstor
jo
jge
pop
sbb
into
xor
hlt
lret
xchg
push
imul
xchg
test
outsl
jg
cmp
and
xchg
stc
stc
repz
iret
ja
lods
jp,pn
out
mov
cmpsb
movntps
add
inc
push
pop
scas
dec
mov
mov
xor
jnp
push
es
mov
iret
sub
jl
or
or
stos
lds
out
lahf
pop
push
mov
inc
mov
push
loop
pop
and
ds
shl
sub
inc
xchg
ja
and
shr
outsl
cmpsb
mov
mov
in
xor
fistps
jg
.byte
test
fcmovu
.byte
call
in
add
imul
add
add
imul
add
imul
add
add
sub
imul
outsl
mov
sbb
add
ds
sub
sub
mov
sbb
cmp
cmp
outsl
int
incb
cld
add
cmp
cmp
or
or
fstpt
push
add
icebp
xchg
add
mov
imul
ljmp
cmp
sub
fldt
pop
cmp
cmp
sub
js
add
push
mov
cmp
sub
mov
fucomp
outsl
fildl
fs
mov
mov
sbb
mov
outsb
lods
mov
repnz
add
or
mov
add
add
dec
pop
cmp
push
ss
mov
std
negb
mov
mov
sbb
cmp
sub
add
fnsave
add
sbb
mov
inc
mov
fidivl
pop
adc
pushf
push
dec
mov
or
ljmp
jg
jnp
pop
adc
push
mov
add
ret
adc
sub
inc
push
pop
add
or
xor
xor
mov
or
decl
test
sub
shlb
bound
sarb
sti
rcrb
cmp
cvttps2pi
add
sbb
sbb
jg
cmp
add
sub
add
mov
pop
or
dec
rcll
ret
ret
jbe
orb
or
add
negb
jp
ret
jle
movb
jo
mov
mov
pushf
adc
and
xchg
add
dec
jle
add
push
or
adc
enter
popa
lock
cmp
lock
insb
mov
sub
outsb
mov
into
popa
int
mov
dec
shlb
sub
add
ss
xor
mov
cs
add
pop
sahf
enter
jle
pop
fidivrs
sbb
icebp
loop
xchg
cmp
mov
push
sbb
pop
sub
sbb
out
push
sahf
adc
or
push
cwtl
data16
mov
mov
or
mov
push
inc
testb
lret
ds
mov
cmp
clc
push
addb
fsubr
ror
idivb
cwtl
xor
xchg
scas
and
ror
insb
xchg
inc
push
addl
inc
bnd
mov
bound
mov
lea
jne
rcl
stc
adc
andb
pop
add
insb
add
inc
andl
xor
sub
adc
mov
fsub
outsb
jnp
sbb
or
rolb
icebp
je,pt
andb
push
xor
sahf
push
lods
xor
mov
or
clc
adc
pusha
jo
ljmp
int
add
add
push
or
or
inc
mov
push
scas
pop
and
push
mov
sub
inc
icebp
enter
negb
mov
push
mov
cli
sub
sbbl
push
mov
cmp
in
adc
je
xchg
xor
dec
daa
push
lock
fidivl
xchg
push
mov
add
loope
incb
pop
inc
clc
adc
stc
dec
shr
out
sub
pop
iret
or
jmp
cld
sub
pop
in
lods
cmp
dec
rcrb
add
in
cmc
adc
imul
leave
incl
mov
jecxz
xor
pop
ds
je
mov
stc
mov
add
orb
insb
ret
xor
icebp
stc
add
adc
add
mov
jmp
lods
fisttpll
mov
call
mov
adc
imul
rdpmc
mov
pop
stos
pop
not
push
mov
rorb
inc
lock
pushf
mov
shr
xchg
sbbb
repnz
sbb
pusha
jp
push
je
or
push
clc
or
ret
or
xor
ret
push
mov
sbb
push
push
adc
int3
adc
aam
mov
pusha
add
push
push
int3
jno
xorl
inc
test
xchg
xchg
rolb
xor
rolb
jmp
cmp
cs
rcll
sahf
push
insl
mov
pop
cmp
paddb
add
pushf
or
sbb
cmpsb
lods
sbb
push
mov
cmp
xchg
mov
mov
into
mov
push
add
adc
mov
or
inc
scas
ficompl
xchg
call
or
mov
add
or
adc
dec
addl
jmp
add
pop
imul
insb
or
out
inc
push
rclb
adc
push
jge
inc
call
lock
cli
cmc
xchg
js
decb
mov
popf
pop
mov
xor
bound
cmp
or
add
adc
and
pop
adc
ret
scas
xchg
adc
xor
mov
hlt
sbb
xor
mov
fcomi
sbb
or
sbb
or
mov
mov
xchg
stc
add
adc
cmp
fldenv
out
sbb
push
xchg
fcomps
pop
adcb
or
je
popf
push
fistpll
xchg
adc
mov
add
and
popa
sbb
test
rorb
mov
clc
push
lods
lock
add
xchg
mov
je
xor
dec
add
sbb
push
and
rorl
dec
cmp
xbegin
outsb
mov
pusha
aam
lret
mov
rclb
push
mov
mov
add
mov
sbb
out
roll
adc
and
lfs
fnclex
or
dec
les
adc
and
call
push
sub
sbb
sub
cmp
adc
pop
add
repnz
shrb
sbb
cli
pop
add
sub
xor
test
enter
adc
cs
or
mov
push
fidivs
call
add
add
ficoml
les
jo
sbb
ret
lahf
jmp
sbb
pusha
and
sahf
fidivrs
push
add
int3
and
xor
shlb
idiv
lret
xchg
sub
scas
je
mov
adc
add
sbb
xor
cltd
adc
loopne
popa
add
sahf
push
push
add
push
int
add
or
push
mov
test
cli
or
add
adcl
sbb
xchg
cmp
sbb
cmp
pop
mov
icebp
in
movsb
or
jecxz
pop
test
repnz
roll
add
push
lcall
push
pop
in
or
or
push
nop
sbb
inc
adc
fimull
loop
repnz
add
ret
imulb
or
dec
sti
adc
adc
popa
clc
rclb
mov
add
cmp
xchg
aam
xor
je
ret
inc
or
xor
sbb
popf
mov
imul
or
inc
adc
and
xor
cmp
mov
push
cmp
imul
mov
movsb
mov
inc
rolb
push
ja
cmp
inc
clc
add
cmp
es
loopne
xchg
call
fs
enter
jecxz
and
and
loope
adc
test
xlat
mov
outsl
inc
adc
push
cmp
pop
mov
sbb
das
bound
jge
je
mov
add
sbb
sub
in
aad
lock
inc
hlt
add
xchg
mul
cmp
jo
mov
add
xchg
mov
loopne
push
test
or
mov
and
or
adc
mov
je
or
jge
mov
sbb
test
or
fcmovne
add
push
pop
mov
sub
mov
das
mov
inc
scas
or
inc
and
bound
inc
rolb
inc
adc
sbb
push
sbb
ss
pop
mov
sbb
adc
lods
lcall
or
incb
adc
fistpl
sub
mov
xor
rcl
adc
add
push
mov
addl
les
cwtl
lret
mov
pop
roll
pop
push
and
or
sbb
push
pusha
fs
icebp
sbb
cmp
pushf
popf
nop
rcrb
cmp
and
sbb
ret
mov
inc
in
or
jno
cwtl
add
inc
sbb
xchg
shrb
inc
rolb
bound
adc
fildl
cwtl
pop
loope
add
ds
push
cmp
mov
sbb
fs
mov
subb
add
push
aam
adc
add
adc
dec
mov
add
movsb
or
xor
xchg
dec
adc
xor
mov
push
add
push
inc
adc
cli
and
add
pop
xor
cwtl
mov
pop
hlt
movsb
in
cmpsb
xchg
cmp
jg
mov
rorb
adc
or
jl
mov
jae
push
cwtl
mov
fildl
inc
sbb
or
punpcklbw
test
inc
push
nop
dec
pusha
les
dec
repnz
imul
call
sbb
jl
ret
adc
movsb
sbb
in
ret
lds
retw
test
shll
inc
adc
sti
clc
inc
cmp
pop
dec
mov
inc
add
test
into
aam
push
mov
or
pop
add
in
push
adc
adcb
mov
add
push
popf
add
cltd
xchg
rorb
xchg
xor
enter
aas
loop
ret
add
mov
pop
lahf
sbb
and
sbb
call
push
mov
sar
and
add
add
mov
loop
ret
loop
into
stc
or
lcall
test
shll
sbb
push
in
ja
outsb
pop
sarb
je
test
or
pop
push
cmp
xor
mov
adc
mov
movsl
jge
dec
shrl
js
inc
or
cld
mov
jge
cwtl
mov
sbb
ret
arpl
push
shlb
call
mov
mov
pop
adc
fdiv
shlb
or
dec
and
call
arpl
andb
xor
call
out
push
add
andb
or
push
xor
mov
sbb
and
outsb
sbb
enter
xlat
xchg
sbb
and
push
hlt
leave
mov
aam
cmp
leave
not
loope
loope
loopne
fsubrs
adc
cmc
pop
mov
pop
cli
push
and
sbb
daa
sbb
push
clc
mov
jbe
shlb
push
mov
gs
mov
icebp
adc
xchg
xchg
stc
jp
es
sysenter
and
aas
bound
adcb
pop
cmp
jo
push
lahf
adc
outsl
sbb
mov
cmc
add
outsb
jo
jb
dec
cmp
xor
addl
sbb
arpl
ficoml
call
loopne
test
loop
mov
test
add
sbb
sbb
mov
mov
sbb
push
push
jl
push
inc
cmpsl
add
cli
lods
mov
enter
lock
pop
adc
mov
adc
mov
xchg
sahf
jle
xchg
add
clc
sbb
into
adc
mov
adc
insb
call
arpl
cwtl
jo
pop
mov
lods
adc
lods
das
sbb
dec
test
adc
ficompl
mov
xchg
add
stc
or
mov
push
stc
adc
and
add
pop
sub
push
data16
test
pop
add
dec
push
cs
incl
sbb
shrb
int
rcr
xchg
mov
pop
repnz
mov
push
add
sbb
insl
add
mov
hlt
nopl
cltd
push
insb
add
fidivl
das
sbb
out
dec
fmuls
sbb
mov
rcl
push
rcl
roll
mov
lods
and
aam
sbb
push
adc
rclb
scas
dec
cmp
testb
mov
xorb
cmp
or
lods
mov
mov
jl
sub
or
jecxz
mov
adc
pop
add
shlb
jg
addr16
sub
push
and
sbb
test
lcall
mov
enter
icebp
xchg
sub
lret
out
je
push
inc
iret
mov
aam
or
or
mov
call
test
lock
pop
push
imul
ret
cmp
dec
pop
cmp
call
sbb
cmp
push
jnp
or
pcmpgtw
inc
dec
ljmp
xor
loope
loop
xchg
cmp
inc
sub
push
mov
or
jne
in
pusha
push
mov
pop
push
loope
add
lock
divb
xchg
jo
adc
jne
les
lock
sbb
add
sub
sbb
mov
les
scas
jle
cmp
sbb
adc
imul
sub
pop
xor
les
or
int3
pop
pop
sub
andb
and
lcall
ret
push
pushf
roll
cmp
repnz
and
bound
js
mov
sub
dec
ret
dec
ljmp
rcrl
addb
push
fadds
push
add
inc
inc
roll
sbb
xlat
cmp
into
sub
sbb
and
setg
loope
mov
xchg
adc
fcomi
pop
rorl
pusha
mov
xchg
or
fisubs
mov
adc
in
outsb
mov
or
icebp
lods
mov
dec
inc
mov
cli
sbb
ret
lret
stos
add
inc
push
lds
sbb
or
pop
sub
and
loopne
cmpsb
pop
sbb
jle
mov
cmp
adc
je
xchg
orb
loopne
cld
jmp
enter
adc
lea
rorb
mov
add
repnz
lds
ljmp
imul
mov
mov
ss
scas
fbld
pop
mov
adc
pop
mov
mov
lret
loopne
mov
jp
sar
and
pop
or
sbb
movsl
mov
adc
ss
mov
and
repz
adc
std
sub
add
or
gs
mov
scas
daa
pop
std
and
sub
aad
pop
iret
cmp
lds
or
scas
jmp
xchg
dec
adc
sarl
lret
mov
or
adc
rolb
or
push
pop
pop
xor
test
psubusw
sub
int3
inc
push
shll
insb
rcl
loop
adc
pop
into
mov
xchg
mov
es
shrl
jmp
shlb
sbb
adcl
hlt
dec
xchg
push
and
call
aad
jae
add
aam
or
stc
xchg
or
add
pop
in
lock
ret
into
cltd
mov
push
or
popa
aam
test
sbb
call
dec
bound
rcll
dec
sbb
or
and
aaa
pop
mov
pop
leave
sub
mov
xchg
adc
mov
adc
jbe
pop
push
push
shl
adc
mov
test
xchg
jbe
sbb
sahf
ret
push
mov
mov
inc
jno
xchg
lret
and
in
js
dec
mov
stos
cli
sub
push
clc
push
push
push
adc
fsubrl
adc
mov
jno
jno
xchg
leave
iret
or
push
or
dec
dec
sub
mov
mov
sarb
mov
push
mov
retw
xlat
fcoml
mov
push
call
xor
ret
mov
inc
sbb
enter
mov
add
popf
mov
in
shr
inc
pushf
shlb
mov
mov
mov
push
movsl
xchg
sbb
shrb
push
xor
or
push
mov
push
add
jg
pop
mov
ds
orb
shl
lret
pop
sbb
nop
icebp
push
pop
mov
je
adc
or
or
push
and
negl
xor
repnz
add
test
hlt
mov
lea
cli
or
es
xchg
push
cmp
ret
push
or
cmp
ret
pop
leave
faddp
test
or
mov
mov
add
cmc
into
cmpsb
adc
xchg
push
and
cli
dec
pop
jnp
pop
push
outsb
xor
xchg
adc
stos
pop
imulb
es
xchg
add
enter
sbbb
add
stos
push
inc
loopne
inc
insb
or
hlt
leave
or
add
pop
cmpsl
sub
push
ficoms
repnz
push
popa
mov
and
and
fst
push
js
enter
add
xchg
test
add
jmp
adc
lea
dec
fsub
loopne
notb
call
or
add
add
in
sbb
out
repnz
push
std
loop
xor
push
xorb
hlt
daa
adc
xor
mov
ret
rcrl
imul
sbb
jo
shrb
scas
mov
fwait
rcrb
dec
inc
adc
call
add
mov
mov
mov
push
xor
jecxz
lods
add
cmpsl
sbb
or
ljmp
mov
movsb
push
cmp
outsb
push
add
loope
push
shll
fidivrs
out
sbb
mov
mov
push
dec
icebp
gs
mov
aas
mov
lock
mov
adc
adc
stos
pusha
rcrl
leave
shlb
add
sub
inc
mov
popa
push
add
dec
push
scas
push
ds
jnp
cmc
adc
or
loope
add
add
add
xchg
test
xchg
rcll
add
sbb
shl
and
pop
push
xchg
adc
fnstsw
subl
cmpsl
lret
out
rorl
xchg
mov
cmp
jnp
and
lcall
or
testl
leave
dec
and
adc
loop
rorb
movsl
ficomps
inc
pop
sbb
add
rorb
xor
shrb
in
and
jle
loop
add
bound
sarb
mov
sbb
cmpl
inc
and
lret
mov
dec
rolb
push
cli
js
push
dec
and
stc
aam
sbb
bound
cmp
pop
test
test
mov
pop
mov
sbbb
xor
or
mov
pop
mov
add
or
cmp
add
fs
shrb
jmp
lahf
push
ljmp
cmp
mov
shlb
sbb
adcl
add
dec
idiv
adc
cmp
mov
loop
dec
lods
mov
sub
inc
jb
ds
cli
add
push
mov
push
push
test
xchg
cmp
ljmp
in
push
push
js
fiaddl
lret
inc
daa
sub
mov
shl
roll
xor
shlb
pop
ret
and
pop
jmp
jp
std
push
push
outsb
sbb
xor
add
pop
stos
xchg
lcall
hlt
cmpb
push
cli
push
icebp
mov
push
mov
loopne
sub
or
and
repnz
out
rcl
add
int3
mov
fdivs
clc
sbb
push
daa
xor
mov
cmp
xchg
adc
lods
pop
call
mov
call
das
rorb
add
adc
mov
call
pop
and
jae
inc
or
mov
sbb
lea
and
andl
mov
push
sbb
movsb
test
sbb
popa
xchg
outsb
lcall
or
add
and
add
dec
mov
add
mov
or
push
sahf
clc
pop
in
xor
rorl
andb
push
popw
adc
pop
pop
jo
and
es
or
sbb
mov
inc
pop
push
add
xchg
sbb
les
cs
aam
in
fidivs
jmp
ss
sbb
insl
movsb
movsb
imulb
test
and
rolb
add
push
push
rcrl
in
sbb
cmp
out
enter
dec
sbb
jo
ljmp
sbb
adc
cmpsb
lret
push
mov
clc
or
push
pop
clc
inc
sbb
xchg
adc
aad
rcrb
xchg
dec
mov
push
iret
divb
adc
test
inc
jbe
sub
push
fstl
sbbl
jmp
or
lcall
add
pop
sub
xor
addr16
sub
and
lret
or
sbb
dec
pop
adcl
dec
arpl
xor
jle
and
or
cmp
add
shlb
negb
add
mov
sbb
and
or
ljmp
subb
and
cmp
adc
push
xor
mov
pop
fdiv
push
sbb
mov
adc
cwtl
leave
les
clc
adc
je
mov
pop
cmp
scas
push
add
or
xchg
jo
pusha
ss
mov
pop
mov
shlb
icebp
adc
lret
sahf
pusha
add
pop
loope
ja
mov
in
add
ljmp
pop
ret
xor
adcb
or
movsl
mov
mov
pop
mov
sbb
rcrb
ret
sub
mov
in
push
inc
and
cltd
or
scas
shrb
mov
adc
outsb
dec
or
sbb
bound
loope
loopne
adc
push
push
les
cmp
xchg
push
inc
xor
or
sbb
push
shl
jbe
ret
push
sbb
push
inc
ficomps
test
sub
inc
mov
jo
addr16
sbb
mov
pop
adc
pop
das
test
cmp
popf
sub
inc
sbb
pop
push
ret
adc
mov
stos
out
xor
xchg
insl
mov
ljmp
sti
imul
in
mov
adc
add
cmc
mov
cwtl
add
cli
adc
sub
inc
push
or
cli
sbb
mov
push
in
sbb
lds
or
leave
sbb
sbb
mov
movsl
in
lds
mov
out
dec
lods
sar
popf
es
lea
loop
push
sbb
loopne
sub
movsb
pop
inc
or
push
pushf
out
repz
dec
push
jg
cmpl
push
and
stos
push
push
or
and
call
out
dec
addl
mov
and
dec
push
jmp
nopl
rorb
pop
ret
add
adc
sbbb
pop
sbb
stos
adc
ss
mov
adc
or
mov
inc
mov
xchg
sbb
das
adc
jp
minps
jmp
and
sub
jne
jmp
orl
or
in
sub
push
or
xchg
add
out
je
test
add
rclb
mov
or
mov
stos
add
mov
loopne
sub
adc
mov
aad
push
xor
mov
sbb
je
push
fstpl
add
call
out
fadds
shl
pop
outsb
fmuls
pusha
push
pop
inc
inc
sbb
stos
adc
xchg
adc
lret
lret
sub
cmp
or
add
jo
add
add
xor
fistpl
sahf
lock
test
add
addb
inc
mov
or
shlb
cmp
xor
mov
and
or
mov
shr
xchg
loop
stos
loope
push
js
test
dec
or
xlat
push
xchg
shlb
pop
clc
mov
outsl
and
out
pop
mov
or
push
xchg
orb
sbb
inc
jl
inc
sbb
jp
jmp
dec
inc
dec
jl
andb
lret
pusha
cmp
out
add
push
cmp
push
pop
cli
sbb
jmp
sahf
lock
pop
loopne
mov
dec
add
mov
mov
and
imul
ret
outsl
pushf
jb,pt
and
rcrb
inc
mov
add
push
lret
push
add
orb
clc
inc
daa
xlat
mov
push
ret
xor
jmp
test
push
push
shlb
les
add
and
sub
into
scas
stos
mov
lock
cwtl
pop
clc
push
push
sbb
or
fmull
and
pusha
sub
bound
xchg
xor
adc
enter
daa
cmp
test
rorl
jnp
jmp
adc
push
sbb
push
pop
mov
fdiv
push
push
mov
mov
scas
inc
cmp
aad
pusha
divb
add
pop
test
in
adc
jae
dec
add
dec
leave
cmp
lock
push
rcrb
sbb
push
out
inc
jo
add
mov
sbb
stc
mov
lods
add
cmpsb
ficomps
fadd
lock
adc
dec
jl
decb
ljmp
rcrl
or
mov
rcll
shlb
into
add
push
imul
lods
xchg
js
js
imul
mov
cwtl
enter
sbb
ret
inc
fcmovb
frstor
adc
and
psubd
cld
jp
cs
and
sbb
cli
inc
flds
cmp
test
sbb
push
lret
xchg
sbb
into
cwtl
or
test
loope
dec
xor
mulb
and
cmp
dec
cmc
repnz
adc
orl
test
inc
push
mov
jle
xchg
lock
add
mov
enter
es
roll
lea
js
adc
push
lret
cli
sbb
push
sbb
fmuls
push
mov
push
lods
jb
dec
inc
mov
xor
push
test
shr
push
repnz
in
and
or
icebp
lcall
add
add
sbb
xchg
pop
pop
mov
jne
xchg
pop
call
out
add
data16
jns
adc
sbb
jl
psubb
xchg
push
xor
mov
or
rcr
jecxz
mov
sti
inc
lea
dec
sbb
add
jo
stos
push
mov
and
sbb
lret
or
cmp
dec
cmp
into
jo
add
ret
dec
cltd
aam
lods
imul
icebp
testb
sbb
jno
or
sbb
mov
orb
add
adc
pushf
rorb
pusha
xor
xor
push
aam
mov
addl
loopne
push
jecxz
es
push
pop
lock
pop
cmp
inc
mov
sbb
loop
adc
mov
test
sbb
cmp
push
mov
push
jmp
clc
test
ljmp
hlt
adc
add
push
cmp
dec
in
xchg
inc
mov
adc
ret
pop
sbb
inc
sub
movsb
into
xchg
cmp
sbb
or
cmp
orl
sbb
sbb
add
lea
popf
addb
iret
or
and
add
dec
bswap
xchg
push
and
and
xor
fiaddl
fs
xchg
add
xor
push
loopne
cmpsb
push
xor
add
ret
jne
pop
jne
rolb
lods
sarb
or
sbb
sahf
jp
sarl
push
sbbb
inc
mov
shlb
xchg
divl
ret
mov
or
xor
sbb
pop
rcl
inc
in
sbb
add
iret
test
jo
psubsb
adc
cmp
loope
push
or
pop
into
mov
into
push
xchg
testb
xor
cmp
ficomps
push
adc
ljmp
cmp
or
adc
jle
xchg
pop
adc
dec
ret
cltd
xchg
jg
adc
pop
lock
jno
jae
sbb
and
pop
pop
inc
and
push
test
in
inc
mov
xor
mov
jmp
clc
sbb
sahf
push
push
jecxz
pushl
mov
push
push
sti
xor
test
and
or
jb
or
mov
xchg
push
inc
inc
mov
or
xchg
add
cmp
jo
je
lock
sahf
or
lret
add
gs
shrb
lea
call
sbb
mov
push
movsl
out
add
adc
fisubrl
mov
stc
push
cmp
inc
cs
pop
xor
sbb
js
sub
push
jne
addb
fidivrl
in
and
int
sbb
addb
pop
mov
xchg
enter
or
lds
xchg
dec
loopne
mov
add
and
scas
ret
adc
mov
sbb
or
adc
jmp
add
testb
inc
jmp
stc
adc
sub
hlt
or
pop
es
sbb
jp
sub
scas
jle
shl
out
add
add
mov
push
mov
cmpl
add
add
sbb
sahf
les
lods
adc
mov
fldl
mov
das
sahf
adc
push
jle
adc
bound
loopne
push
sub
rcrb
sbb
jns
loop
scas
adc
pusha
xchg
xchg
out
lock
mov
push
test
adc
lods
inc
orb
or
xor
sahf
or
pop
or
mov
int
lret
mov
jo
fs
mov
mov
dec
loopne
mov
hlt
and
test
adc
cmp
orb
sbb
movsb
sub
imul
ds
les
adc
lods
xchg
mov
lcall
repnz
add
sbbb
int
pusha
aam
adc
mov
mov
xor
sbb
or
xchg
test
and
xchg
add
les
jge
inc
sbb
sub
push
in
jle
add
clc
cmp
sub
enter
das
xchg
imul
mov
lret
mov
cmp
in
sub
dec
mov
xlat
dec
sbb
adc
dec
sbb
fwait
mov
dec
ret
jmp
inc
xlat
inc
xor
dec
add
push
sbb
xchg
loope
or
mov
cmpsl
add
in
add
xor
rol
push
test
and
or
adc
and
inc
mov
adc
add
and
andl
jo
adc
add
and
or
call
push
or
into
lahf
pusha
push
add
and
fs
push
adc
leave
cmp
cmp
les
sub
inc
adc
test
rol
or
je
cld
push
int3
sahf
sub
dec
adcb
ds
add
shl
into
addb
cmp
xchg
xchg
jg
lcall
inc
push
outsl
fadds
or
xor
test
mov
push
push
mov
pushf
das
rorb
cli
jp
test
fiaddl
aaa
mov
faddp
jnp
and
push
call
iret
push
add
pop
test
dec
add
dec
inc
xchg
insb
mov
jp
subl
ret
adc
xor
sbb
pusha
roll
mov
push
add
rorl
sub
mov
push
addr16
add
or
jne
and
enter
dec
mov
out
add
out
and
fisubl
pop
lods
ljmp
cli
shrl
icebp
push
js
insb
scas
push
arpl
mov
loopne
and
pushf
int3
xchg
push
enter
sahf
test
sarl
repnz
or
fidivl
mov
mov
imul
sbb
push
push
loope
js
cmp
stos
or
lock
fdivs
rclb
cmp
mov
in
mov
or
ficomps
test
mov
ret
fisubl
cmp
add
rcll
xor
leave
rol
cmp
pop
loop
cwtl
adc
sbb
push
mov
xor
jb
cmp
sbb
repz
movsl
mov
jle
mov
or
mov
cld
jp
icebp
mov
pop
fs
add
test
add
mov
or
jp
add
pop
pusha
imul
sbb
repnz
repz
pop
dec
lret
mov
push
mov
and
pop
je
lock
or
leave
jb
sub
out
arpl
xor
insl
jo
repnz
sbb
mov
and
fcompl
adc
jno
push
xor
or
adc
xchg
sbb
add
push
dec
add
mov
ds
push
jo
shlb
or
push
and
push
into
xchg
xchg
mov
add
and
push
inc
jno
cmp
add
jl
xor
add
or
pop
inc
xchg
mov
test
mov
mov
add
cmp
or
je
push
and
jb
and
std
adc
cli
add
enter
sbb
pop
adc
add
cwtl
int
out
hlt
loope
add
push
mov
inc
loop
pusha
test
insb
and
push
jl
or
xor
repnz
add
mov
lcall
les
stos
ds
lahf
mov
jb
cmp
fs
scas
leave
inc
mov
lahf
mov
rcrb
popf
push
iret
mov
or
sbb
enter
sub
bound
add
adcl
push
add
mov
repnz
mov
cmp
mov
sbb
inc
inc
push
push
add
mov
cltd
icebp
push
mov
pop
ds
insb
cmp
add
sub
jp
daa
add
xor
add
mov
jle
adc
outsl
xor
shlb
xor
ljmp
cli
fcompl
into
add
aas
add
fisubs
scas
int3
mov
sbb
dec
jecxz
xchg
cs
ret
fiadds
or
mov
add
xorb
inc
nop
jmp
add
adc
sbb
mov
lea
sahf
fwait
mov
pop
popf
xor
or
sbb
call
out
dec
push
xor
push
mov
pop
mov
mov
push
or
jb
movsb
mov
push
add
or
popa
add
movsb
cmp
adc
or
mov
dec
les
in
pop
pop
pop
or
or
bound
ljmp
add
mov
gs
sbb
jo
sbb
test
cmp
leave
movsl
out
mov
mov
mov
rclb
xchg
ljmp
push
mov
or
sub
icebp
inc
ljmp
lahf
aam
sbb
lock
xlat
ret
rcll
push
push
or
dec
je
and
pop
jmp
mov
push
mov
rolb
test
adc
adc
adc
pop
sub
inc
xor
sbb
out
inc
push
sbb
sbb
orb
jmp
movsl
and
repnz
cmp
push
sub
bound
js
stos
lret
stos
adc
sarb
data16
ret
dec
ret
cmp
pop
ss
mov
push
imul
js
pop
lods
mov
mov
and
push
xlat
xlat
cmpsb
scas
push
lods
push
adc
inc
mov
test
leave
jl
add
jne
cmp
jge
push
popf
push
mov
call
and
stos
push
add
jo
into
mov
inc
cld
add
add
pop
testb
cli
add
xor
ss
fistl
inc
lea
stc
lds
cmp
adc
sahf
test
int3
adc
sub
leave
fcoml
and
push
inc
push
jl
inc
mov
sbb
mov
cmpl
sarb
je
loopne
shll
mov
stos
xchg
mov
out
and
push
mov
fadds
daa
rolb
fimuls
add
popa
cmpsb
xor
push
das
xchg
adc
int3
ds
movsl
sub
sbb
rol
pushf
jo
push
fwait
xor
shlb
mov
lcall
sbb
dec
das
shr
lea
lret
mov
inc
cmp
call
int3
adc
in
sbbl
lahf
mov
out
or
pop
push
out
pushf
cmp
into
leave
push
outsl
add
loop
ficoml
push
cld
adc
test
hlt
rol
inc
lods
dec
jno
not
lock
pop
sbb
hlt
pop
lods
dec
in
sbb
xor
loop
push
pop
xchg
add
into
cmpsb
enter
pop
add
cs
in
movsl
adc
pop
sbb
jo
mov
push
mov
push
call
loopne
aam
jnp
push
imul
inc
call
push
add
out
or
lret
push
imul
ret
pop
sub
mov
adc
inc
push
mov
sbb
mov
sbb
dec
mov
inc
mov
inc
sbb
lahf
rolb
xor
sbb
fimull
and
sub
sbb
dec
xor
sub
lock
sub
xchg
sub
pop
xor
or
sub
and
push
fsubl
push
xorb
xor
and
lret
xchg
push
or
clc
mov
sbb
mov
int3
test
sbb
sbbl
xor
or
adc
jbe
aam
xor
std
js
xchg
add
or
js
dec
jnp
sub
leave
jae
es
xchg
sbb
and
movsl
xor
push
cmp
pusha
pop
cwtl
sub
push
mov
cwtl
mov
mov
shlb
mov
mov
jg
mov
jne
aas
ret
mov
xchg
scas
jb
fstl
test
add
cmp
insl
jno
pop
pushf
icebp
pushf
adc
or
hlt
shlb
popa
rolb
push
mov
popa
mov
inc
push
nop
push
mov
nop
pop
cwtl
mov
test
rclb
inc
out
push
xor
lods
test
rorb
fs
cmp
push
xchg
adc
pop
dec
cld
xor
jb
stos
mov
and
into
adc
cmp
and
rolb
mov
xor
daa
scas
cli
sbb
mov
mov
cwtl
mov
jo
lahf
sub
add
add
shlb
cmp
xor
push
add
mov
push
cmp
and
cs
sbb
bound
enter
and
mov
and
or
sbb
lret
loopne
mov
ds
subb
call
add
addb
addb
test
lcall
icebp
in
sbb
push
dec
jb
call
loopne
sub
or
loopne
cmp
scas
jno
cwtl
je
or
cmp
sub
add
inc
push
pop
enter
loopne
pop
pop
imul
test
xor
std
jbe
mov
loopne
addr16
sbb
test
outsl
inc
and
imulb
call
fsubs
pop
mov
loope
adc
jb
sbb
jo
push
cli
jo
and
push
xor
push
data16
push
call
jo
inc
jbe
xlat
call
js
pusha
rolb
adc
call
jge
clc
adc
sbb
orb
jl
shrb
lds
sbb
popa
and
or
rorl
sbb
jl
add
push
loopne
loopne
into
stos
enter
sub
jnp
cmp
xor
sbb
inc
jae
inc
cmp
pop
imul
sub
in
mov
add
shrl
outsl
inc
jmp
mov
adc
add
cs
or
rcrl
adc
push
loope
lahf
add
pop
cmp
and
pop
ja
dec
popf
test
mov
ret
add
rol
adc
dec
repnz
out
jo
mov
xchg
pop
inc
iret
cmp
bound
pushf
rorb
add
int3
cmp
inc
clc
loopne
je
mov
cwtl
or
mov
cmp
idivb
or
icebp
lods
cmp
ja
ds
xchg
mov
mov
and
ret
push
sbb
lcall
pop
hlt
movsb
or
xchg
mov
adc
cmp
adc
fs
cmp
sahf
inc
mov
js
add
scas
sbb
fcmove
lods
dec
ror
jb
sub
jbe
pop
mov
clc
pop
sub
aam
or
es
aad
and
lret
lcall
int3
or
xor
mov
mov
sbb
pop
pop
lcall
ss
jmp
sub
adc
mov
jp
dec
inc
imul
xchg
je
add
iret
sbb
push
fidivs
jmp
fistpl
test
ret
xor
inc
aam
mov
xchg
ljmp
stc
xchg
adc
push
shlb
pop
push
lock
and
pusha
or
sub
lret
sub
je
shlb
mov
shrb
push
add
mov
loopne
lcallw
mov
cmpsb
add
stc
pop
cmp
add
add
aam
dec
cmp
mov
mov
or
aam
ret
jecxz
or
and
outsl
push
fcoms
sbb
adc
inc
outsb
fstps
dec
outsb
outsb
ljmp
add
aam
add
ds
pop
or
fidivl
lods
pushf
inc
call
ret
adc
push
sbb
add
mov
push
sub
pop
pop
adc
adc
outsl
adc
cmp
push
or
sbb
mov
outsb
push
pop
jb
mov
dec
or
subb
jge
add
loop
or
jo
fbstp
mov
into
pop
jb
push
dec
sub
fadd
jecxz
clc
xor
and
les
pusha
and
xchg
jge
and
push
add
loop
cld
fsubl
scas
sub
xchg
ret
inc
push
add
push
sub
inc
push
dec
fmull
fldenv
pop
mov
xor
mov
cwtl
add
jge
call
cmp
ret
icebp
sub
adcl
loope
cmp
std
sbb
shlb
scas
mov
inc
pusha
add
inc
gs
fldenv
xor
pop
jp
cld
scas
inc
jmp
fldl
shll
add
push
xchg
pusha
inc
ret
dec
in
aam
hlt
mov
pop
add
adc
lods
movb
adc
or
sbb
mov
out
icebp
xchg
jmp
jne
test
xchg
data16
loopne
mov
movsb
mov
test
das
lock
push
jp
sub
stos
out
inc
add
icebp
add
mov
popa
cli
and
lods
test
xchg
and
cs
mov
scas
mov
popa
or
mov
sbb
inc
mov
rorl
test
addl
cmpsl
daa
push
fs
shl
mov
stc
les
lock
dec
jo
inc
and
rorb
ret
aad
lret
add
push
jno
fidivrl
push
add
sarb
dec
cmp
xchg
icebp
movb
inc
sub
jmp
push
mov
sbb
les
fdivrl
and
add
clc
adc
add
or
or
aam
mov
mov
push
shrb
mov
ret
sub
mov
add
testl
add
arpl
ficomps
scas
mov
loop
mov
inc
sub
mov
in
jecxz
fdivrl
push
sbb
adc
pusha
cmp
popf
call
ljmp
mov
aaa
mov
loope
shlb
push
inc
pushf
shrl
adc
sahf
adc
push
or
fdivs
fdivrp
sub
sbb
sahf
pushf
mov
lret
dec
mov
fs
insl
sub
test
and
ljmp
fdivs
jb,pn
dec
mov
push
loope
aam
gs
test
or
mov
or
mov
hlt
pop
fcoms
xlat
rcl
lods
adc
inc
mov
and
bound
ds
push
xor
add
test
lahf
xchg
xor
mov
icebp
sub
dec
ret
sbb
mov
dec
stc
and
popa
dec
jns
mov
rolb
mov
push
cld
xlat
inc
xchg
loopne
jl
push
aam
inc
mov
mov
and
push
adc
pop
xor
mov
scas
xchg
xchg
call
mov
adc
adc
or
xchg
xor
cmpsl
push
test
sub
cmpsl
jp
or
mov
or
sbb
and
loopne
into
mov
outsb
pop
sbb
push
jne
lret
mov
enter
push
andl
inc
xor
pop
or
dec
pusha
inc
divl
popa
inc
idivb
mov
out
fwait
jo
dec
shll
push
fcoms
loope
ljmp
call
leave
inc
mov
aas
jl
mov
sbb
or
gs
and
shrb
arpl
and
inc
fidivl
push
sbb
je
sub
xchg
pushf
push
je
push
pusha
pop
outsb
or
sub
mov
sbb
bound
in
inc
pop
js
adc
xchg
jmp
jp
xor
push
mov
arpl
pop
shll
adc
pop
cli
add
xor
and
ds
ljmp
bound
icebp
pusha
pop
ret
and
dec
push
mov
mov
call
jle
sub
ror
clc
push
pop
or
shl
push
add
incb
fcoml
inc
mov
inc
sub
es
mov
sbb
pcmpgtb
repnz
add
jl
shrl
xor
add
add
push
add
ljmp
loope
pop
sar
jo
sbbb
mov
or
xorl
lcall
cltd
sub
xchg
push
push
je
cltd
hlt
mov
push
pop
mov
test
or
or
add
jno
cmp
mov
inc
sub
jb
push
notb
aad
or
sbb
adc
stos
ret
popa
dec
sbb
dec
mov
or
adc
rolb
jo
xor
cmp
loopne
push
out
push
cmpb
adc
cmp
cmpsb
or
and
or
mov
or
shrl
roll
gs
mov
adcb
xor
scas
rorb
or
push
push
mov
pop
and
mov
xor
sbb
mov
pop
insb
and
dec
dec
shr
sbbl
lret
dec
add
ret
in
jp
xchg
jb
push
sub
push
ret
aaa
xor
dec
jge
sbbl
fcmovne
push
push
and
hlt
push
xchg
cmp
rcr
push
xchg
movsb
aam
xchg
xor
in
or
or
mov
js
or
mov
outsb
decb
lock
jne
aam
dec
test
inc
pop
stos
sbb
xchg
adc
jbe
sbb
andl
pop
push
push
xchg
push
jle
push
test
stc
add
adc
dec
pop
mov
ret
lret
push
shll
push
add
push
jb
push
xor
push
mov
pop
dec
loope
cltd
out
js
or
outsb
and
addb
mov
or
lcall
sahf
xchg
or
sahf
push
push
adc
es
lods
lods
ret
add
pop
push
movsl
push
scas
pop
test
mov
or
jne
and
add
sub
inc
repnz
shrl
out
xchg
xchg
add
mov
jbe
and
or
push
xor
mov
xchg
dec
fsubrs
ja
data16
fldt
movsb
push
push
cwtl
mov
test
loopne
ljmp
and
xchg
or
xlat
lods
xchg
movsb
xchg
add
aam
and
cmp
movsl
popa
in
jmp
je
push
xorb
jne
outsb
rorb
xor
jp
adc
or
push
shrb
daa
adc
mov
cmp
cmp
sbb
push
mov
mov
push
jle
lcall
xor
xchg
dec
sbb
inc
bound
dec
and
sbb
aad
mov
cld
aas
pusha
xchg
dec
sbb
adc
pop
mov
jecxz
pop
scas
sub
mov
sub
out
xor
sbb
adc
bound
or
out
push
nop
mov
push
notb
sbb
mov
out
mov
filds
dec
loop
or
xchg
cli
rclb
dec
or
cmc
in
add
clc
cmp
pop
push
outsb
mov
and
movsl
push
jae
add
or
and
add
repnz
test
sub
jecxz
out
push
xchg
clc
cmpsb
loopne
fdiv
icebp
insl
insb
add
add
mov
pop
jge
ret
and
adc
or
sub
lds
push
mov
or
dec
rcrb
iret
bound
shrb
xchg
loop
xor
adc
sbb
movsb
ljmp
mov
js
stc
pop
pop
sbb
adc
jno
mov
adc
sub
xchg
xchg
dec
dec
pop
aas
add
jp
or
lods
inc
jge
ret
cwtl
lods
test
enter
inc
or
mov
int3
mov
pop
andb
mov
or
jmp
clc
mov
push
dec
idivb
push
or
shlb
es
dec
or
sub
pop
mov
in
sub
test
es
loope
or
fmull
inc
cmc
sbbl
cmp
push
test
sub
jle
jp
push
rol
cmp
mov
das
adc
push
and
ja
and
pop
movsl
sahf
mov
pop
push
xor
or
pushf
lret
adc
repnz
movsb
push
in
fs
add
sbb
or
push
cwtl
mov
clc
nop
push
xchg
add
xchg
arpl
sub
scas
push
ds
push
pop
test
into
lahf
test
jo
xor
xchg
inc
mov
mov
or
movsb
adc
sahf
add
inc
stc
shrb
xchg
sbb
push
jp
push
divb
icebp
adc
mov
jae
clc
jb
add
cmp
je
lods
rorl
and
jecxz
mull
and
test
sbb
cltd
mov
mov
lret
xor
cwtl
shl
sbb
loop
ffreep
loope
sbb
xchg
sbb
sub
sbbb
popa
sub
mov
out
mov
mov
push
xchg
or
sbbb
jb
out
adc
and
lock
scas
mov
adc
and
roll
mov
movsl
cmp
push
xor
mov
lock
ss
push
sbb
mov
push
mov
lds
push
ret
sub
mov
inc
cwtl
sbb
js
add
pop
sbb
jno
jmp
jg
rclb
adc
mov
test
setb
lods
setae
sbb
aam
mov
mov
cmpl
cmp
xchg
sahf
adc
and
aaa
enter
pop
mov
popa
mov
inc
sub
aaa
sub
add
out
fs
mov
mov
fstpl
mov
dec
lock
scas
add
mov
pushf
mov
scas
push
adc
dec
nop
sbb
leave
loopne
push
scas
lds
mov
insb
or
sahf
and
outsb
mov
xchg
lcall
lock
add
push
pop
repnz
ror
fs
or
mov
sub
lret
or
xor
data16
cmp
pop
jo
lahf
loop
push
mov
xchg
mov
into
mov
mov
lret
add
test
sbb
sub
push
repnz
push
xor
ljmp
ret
or
or
insb
cmp
movsb
jb
dec
add
repnz
into
adc
sarb
sbb
iret
sahf
push
cmp
pop
js
stc
xor
rcrb
ret
insb
lcall
sarb
pop
jb
add
outsb
mov
roll
dec
stc
dec
jecxz
clc
mov
xor
mov
push
pop
cmpsb
orl
mov
pop
add
pop
sarb
sbb
push
into
ret
or
xchg
or
push
or
nop
lods
movsb
push
and
repnz
ljmp
clc
inc
or
cmc
into
movsb
cmp
add
bound
ret
add
sbb
xor
stos
jno
sbb
xchg
pop
mov
sbb
outsb
lock
xor
mov
scas
xchg
getsec
lods
mov
out
mov
test
sldt
repnz
rcl
ficomps
pop
ret
sar
xchg
push
mov
ja
add
icebp
push
push
shrl
jle
mov
mov
mull
or
sbb
decl
hlt
xor
mov
jb
nop
and
orl
dec
mov
sbb
add
arpl
adc
adc
push
sbb
or
loop
stc
add
jno
loope
xchg
stos
mov
data16
sbb
dec
pop
shlb
push
add
add
sahf
flds
mov
push
rolb
into
aaa
ljmp
xor
xor
push
push
lea
out
test
push
add
es
test
or
adc
lds
push
jge
push
outsl
cmpsb
fdivl
rcrl
add
imul
sbb
dec
bound
pusha
lret
jmp
adc
cmpsb
out
adc
adc
sbb
popf
add
inc
roll
dec
adc
jmp
cmp
rorl
addb
jo
dec
popl
jne
jbe
sarb
stos
imul
cwtl
call
sbb
push
pop
cmp
inc
cmp
jne
cmp
sbb
adc
inc
cmp
jo
xor
ds
pcmpeqd
in
and
clc
pop
xchg
push
xchg
add
fcomps
cmp
and
pushf
enter
push
mov
add
daa
flds
subb
fdivl
loope
jne
es
daa
lock
hlt
dec
mov
lods
xor
add
mov
cli
ret
push
mov
pop
mov
jbe
popa
mov
rcrl
adc
pop
xor
cmp
push
dec
fmull
frstor
xor
or
push
mov
and
adc
mov
xor
hlt
pop
notb
fsqrt
and
movsb
rcrb
adc
mov
add
ror
jo
mov
push
push
xchg
jge
sbb
mov
push
push
pop
shl
sahf
pop
cmp
clc
test
cmp
inc
popf
nop
dec
dec
idivl
pop
adc
sahf
jo
rolb
andb
test
xchg
jno
mov
cmc
and
test
mov
add
add
stos
mov
xchg
stos
push
jg
mov
jbe
lahf
call
fdivrl
cmp
mov
and
shlb
add
mov
mov
jmp
and
pop
iret
xor
mov
xor
bound
or
movsl
or
outsb
enterw
jo
dec
sysenter
lods
sbb
xor
adc
mov
fadds
test
cmpsl
pop
add
lret
lods
push
inc
pushf
outsb
fs
stc
push
adcb
mov
or
adc
sbb
loopne
jb
lock
cmp
and
xor
aam
loop
cmpb
pop
pushf
cmc
jno
test
xchg
aam
xor
push
sbb
pop
or
mov
les
dec
sub
mov
sbb
jp
lds
ud1
add
dec
sbb
sbb
sub
enter
in
add
xor
cli
jo
push
rorb
add
loope
cmp
adc
loopnew
push
lret
ja
stc
rcrb
in
notl
xchg
xor
cmpsl
push
pop
adc
mov
pop
mov
scas
pushf
add
xor
sub
cmp
pusha
pop
or
cmpsb
cli
adc
sub
mov
mov
adc
cmp
mov
sub
adc
push
inc
or
push
pop
lods
leave
lahf
or
push
cmpsl
pop
sahf
add
jle
cmp
lret
jb
int3
push
jp
push
inc
jbe
xchg
inc
or
mov
or
dec
mov
xchg
test
loop
or
push
sbb
inc
pop
shr
adcl
xor
rclb
add
mov
jp
rorl
sbb
js
jae
adc
jmp
lret
js
cmp
pop
sub
pop
clc
scas
inc
ret
and
sti
es
or
jmp
or
xor
add
push
mov
call
sub
aam
shll
dec
pop
icebp
ljmp
xchg
xorl
into
inc
lods
push
ror
cmp
in
les
inc
mov
xchg
leave
lret
xor
les
add
add
dec
cmpsl
adc
xchg
outsb
sbb
mov
pop
dec
cmp
pop
call
inc
lods
int3
pusha
push
pop
test
jno
mov
aam
mov
stos
insl
xor
or
cmc
les
mov
pushf
out
paddd
das
addr16
shrl
adc
jb
add
stc
push
mov
pop
pop
mov
mov
mov
imulb
ret
adc
mov
mov
mov
sub
cli
shrl
and
push
sub
mov
adc
cs
cmp
xchg
adc
les
lret
and
pop
push
pusha
inc
mov
mov
in
pop
ljmp
gs
and
add
js
or
rorl
add
cmpsb
cltd
mov
cs
and
fdecstp
aaa
repnz
push
clc
mov
inc
inc
insl
ret
ret
jecxz
add
hlt
test
pop
clc
add
xchg
lods
xchg
pop
mov
dec
outsb
mov
jne
jge
mov
scas
push
in
and
mov
mov
adc
lea
push
mov
dec
push
add
mov
pusha
pop
xlat
cmp
jae
pusha
insb
decl
test
and
mov
add
ljmp
cmp
stos
xchg
mov
push
in
mov
jo
xor
mov
xchg
dec
ficoms
and
pop
sahf
rcrb
sbb
rorl
or
dec
mov
lods
stos
mov
add
add
shlb
repz
lret
lods
jbe
push
and
sub
mov
into
add
pop
push
jmp
or
adc
inc
lcall
and
push
jp
add
push
adc
roll
andb
jo
inc
enter
dec
and
and
pusha
cli
push
pushf
fs
ss
rorl
imul
add
inc
es
movl
cmp
add
sub
dec
inc
xchg
es
adc
inc
shlb
jl
dec
mov
xchg
jbe
sub
xchg
jl
sub
sahf
or
jmp
sbb
sbb
clc
dec
jns
movsb
xor
cmc
jne
sub
push
fldt
jae
in
xchg
bswap
and
jge
in
out
popa
ret
hlt
or
pop
lea
and
adc
scas
fs
jl
nop
dec
inc
mov
push
dec
decl
clc
or
test
sub
or
xor
ja
sub
mov
jmp
iret
xor
add
sbb
mov
sbb
cmpsb
sub
sbb
xor
jnp
jb
mov
fsubp
test
popa
sub
push
fcmovbe
imul
ror
cld
cmp
sbb
imul
mov
mov
jge
aam
daa
adc
pushf
data16
je
mov
add
enter
and
enter
insb
jbe
loopne
adc
dec
dec
rorl
ret
ss
lods
pop
adc
dec
or
jmp
cwtl
cs
movsl
jecxz
shlb
dec
jecxz
repnz
mov
adc
fs
push
jnp
mov
lcall
ljmp
je
ret
popa
or
sbb
ja
nop
push
sbb
jb
jmp
cmpsl
adc
sub
bnd
sbb
xchg
out
xor
test
rolb
psubw
or
sbb
dec
mov
les
call
fs
sbb
mov
lods
call
das
mov
jo
pushf
scas
or
hlt
bnd
adc
pushf
xchg
loopne
in
outsb
gs
mul
adc
pop
mov
stos
fildl
popa
arpl
test
adc
jno
or
negb
add
and
test
fidivrl
mov
arpl
add
addb
dec
dec
jp
jo
jbe
cli
or
pop
dec
loopne
inc
or
test
pop
push
enter
mov
sar
daa
cltd
xor
cmp
ljmp
pop
inc
sub
mov
js
mov
insb
leave
lods
push
rcll
outsb
pop
sbb
add
pusha
inc
add
mov
inc
cmp
xchg
cwtl
add
rol
icebp
mov
fnstcw
xor
fiadds
mov
add
push
enter
loop
xchg
jns
inc
call
cli
xlat
jp
inc
in
stos
pop
adc
pop
ja
push
cmp
inc
lahf
xchg
fimull
xorb
or
add
mov
imul
sbb
pusha
adc
sbb
push
mov
pushf
sbb
dec
mov
clc
pop
adcb
dec
mov
push
orl
add
hlt
mov
add
mov
cmp
lock
pop
repnz
daa
sbb
pop
fstps
orps
loopne
cmp
mov
movsb
or
mov
notb
dec
push
hlt
lods
pop
push
inc
cmpsb
or
ljmp
adc
lret
pop
xor
in
jb
test
testb
add
sbb
inc
mov
or
pop
dec
dec
cmp
pop
inc
das
pusha
mov
pop
loope
rolb
pop
sbb
ljmp
add
dec
mov
xchg
in
or
movsb
pop
adc
ret
mov
shlw
push
push
insb
in
or
imul
dec
or
stc
or
mov
sbb
add
add
pop
inc
adc
mov
hlt
adc
push
mov
mov
andb
cmp
fisubrs
mov
loope
ret
daa
cs
pop
je
and
sbb
or
mov
cmp
adc
sbb
xchg
mov
or
sbb
inc
add
push
and
xor
cwtl
or
dec
adc
and
push
in
cmp
sbb
push
test
xlat
adc
cmp
sub
jo
inc
lcall
mov
adc
adc
test
js
push
ljmp
add
imul
movb
mov
push
notb
jl
push
sarb
adc
clc
inc
push
or
loop
mov
xchg
es
mov
rolb
je
push
and
jo
push
pop
push
daa
push
sbb
jae
inc
lea
ljmp
js
pop
jnp
out
xor
lea
mov
mov
or
mov
cmc
sbb
and
sbb
addb
sub
fistpll
and
roll
mov
push
mov
or
cmp
cmp
in
loope
rolb
imul
aam
fs
lock
sub
mov
pop
dec
sub
sub
inc
push
loopne
xchg
or
or
rolb
outsb
bound
mov
adc
sub
ret
push
push
clc
xchg
mov
pop
mov
outsl
mov
cmp
mov
into
push
adc
out
mov
cmp
push
fs
popf
jp
mov
out
xor
sub
add
or
psubsb
rclb
pop
mov
and
pop
xor
jl
mov
push
sub
mov
adc
mov
rcl
xchg
sub
stos
daa
inc
pop
shr
xchg
sub
es
enter
adc
cmp
mov
aaa
pop
out
pop
add
pop
adc
icebp
es
jle
sbb
ret
pushf
sub
mov
je
mov
adc
pop
and
xlat
addb
icebp
rorb
jnp
adc
dec
aas
inc
mov
sub
mov
jmp
roll
mov
in
orb
cmova
mov
sarl
or
leave
jns
lahf
sahf
xchg
add
insl
loopne
roll
mov
jbe
or
push
and
pop
lods
cmpsb
sub
adc
arpl
inc
call
sahf
or
xlat
pop
add
into
dec
arpl
and
addl
mov
or
mov
daa
mov
or
jb
pop
jo
ljmp
call
jo
dec
aaa
pop
jbe
pop
rolb
sbb
and
je
mov
mov
and
and
jo
add
sbb
jle
sbb
orl
out
mov
push
sub
adc
inc
shll
cld
and
les
xacquire
pop
mov
rolb
data16
jecxz
sbb
cmpsl
sub
xchg
mov
inc
aam
inc
push
lret
cmpl
or
ret
inc
push
mov
lock
shll
xchg
js
adc
pop
push
or
arpl
shlb
sbb
lret
mov
pop
jbe
pop
push
lret
add
test
shll
cmp
xor
ljmp
loopne
adc
pop
xor
in
int3
add
rcrl
pop
orb
cmpsb
sbb
nop
jnp
push
cmp
testb
push
mov
cmpsl
in
mov
cmc
push
pop
lea
insb
rolb
cmp
pop
clc
pop
xchg
xor
xor
jno
push
cli
pusha
and
push
sbb
add
pusha
xchg
nop
lret
push
js
mov
add
add
and
mov
andl
xor
cmpl
hlt
mov
dec
repnz
scas
jo
lahf
push
sub
inc
iret
scas
dec
lods
hlt
dec
js
mov
loopne
jb
insb
dec
cli
xchg
pop
cmp
push
jp
adc
out
push
rolb
push
mov
xor
cmpb
xor
cmc
fnstenv
mov
add
sbbb
xor
mov
dec
int
dec
push
push
mov
orl
movsb
mov
cmpb
pop
cmp
es
jmp
scas
enter
add
mov
test
filds
orb
push
mov
push
or
rol
dec
push
ret
adcb
pop
pop
pop
mov
loopne
cmp
inc
mov
test
push
lcall
jp
pop
push
cltd
mov
inc
sub
inc
dec
sub
rclb
std
insb
lods
gs
and
adc
ljmp
xchg
jp
add
loopne
scas
jnp
adc
and
xorl
xchg
outsb
push
adc
arpl
jo
sbb
out
sbb
inc
push
sbb
shll
xchg
rcrb
mov
push
push
andb
or
rorl
or
shrl
or
pusha
jno
les
daa
jmp
and
ljmp
adc
enter
pusha
push
push
add
pop
adcb
and
je
lret
pop
inc
jb
loop
nopl
lret
mov
adc
adc
addr16
or
or
divb
cmp
xchg
mov
push
dec
pop
ljmp
xchg
mov
ds
leave
cs
pop
int3
mov
pop
test
ds
sbb
jecxz
push
ret
push
inc
inc
and
mov
push
cmp
add
or
push
bswap
mov
pop
cwtl
test
js
adc
adc
mov
or
cltd
jp
sub
or
adc
push
add
pop
push
cmp
sahf
jbe
push
lret
les
cmp
jmp
rolb
xchg
pop
out
sub
cmp
mov
in
sarb
push
jl
and
mov
dec
push
add
xchg
jne
ljmp
xor
mov
mov
push
daa
jecxz
push
sub
adc
in
or
or
push
push
push
rsqrtps
and
fs
push
scas
pusha
out
jge
pop
cmpsl
sbb
pop
sarl
add
rcr
je
pop
ret
pop
mov
push
cmp
out
pusha
inc
mov
popf
lret
iret
mov
fldl
sub
sbb
cmp
data16
add
lea
jb
ret
sub
and
ret
or
pusha
add
or
je
pop
and
mov
clc
cmp
inc
cmc
cmp
adc
or
inc
ffreep
cmp
sarb
or
js
leave
add
or
pop
pmulhuw
arpl
addr16
mov
add
and
les
lcall
xchg
jb
mov
mov
jae
cmp
mov
push
sbb
idivl
pop
shl
in
dec
adc
pushf
jp
mov
and
push
pop
inc
jne
and
mov
dec
js
inc
jae
mov
sbb
cmp
sub
mov
adc
cmpb
mov
loopne
lock
and
push
dec
cld
and
test
jne
push
int
and
incb
dec
ficomps
rcrl
push
inc
add
adc
imul
add
push
jp
cmp
mov
cli
mov
cmc
push
hlt
jo
pusha
test
mov
sbb
inc
sub
dec
or
push
stc
rcr
mov
fdivrp
add
cmpsl
data16
mov
and
or
adcl
dec
and
cwtl
pop
leave
adc
and
js
push
or
shr
aam
sbb
inc
add
mov
mov
dec
push
pop
out
and
cmc
mov
sbb
aaa
call
out
inc
cli
xor
jae
rcll
shlb
cltd
cwtl
ljmp
mov
iret
popa
sub
je
dec
inc
xlat
sbb
loope
fimuls
inc
adc
mov
dec
push
lsl
dec
movsl
inc
mov
outsb
dec
sbb
scas
and
add
or
fxtract
pop
mov
aam
sbb
sbb
cmpsb
and
add
jl
jno
enter
cmp
and
aas
xchg
pop
inc
dec
or
int3
mov
mov
shlb
pop
dec
data16
data16
add
lods
movsl
sub
rolb
push
push
sbb
jl
and
loopne
shl
bound
bound
pop
icebp
mov
cmc
inc
jmp
movb
cmp
or
dec
rolb
clc
xor
add
aad
xchg
adc
push
pop
xchg
or
mov
andb
in
add
adc
sbb
test
movsb
pop
lea
add
out
rorl
push
cmpsb
sahf
pop
mov
outsl
test
stc
pop
scas
test
bound
insl
pop
adc
cmp
xorl
add
lock
sbb
fwait
mov
outsb
pusha
negl
lock
rol
cwtl
pop
scas
pop
lods
push
cwtl
or
inc
fisttps
jl
jp
cmp
sahf
dec
out
jnp
shlb
sbb
add
mov
hlt
out
or
loope
add
pushf
pusha
or
andb
xchg
sbb
pop
cmovle
xor
rcl
inc
push
sahf
inc
in
mov
or
dec
or
data16
loopne
lcall
add
dec
sbb
jb
test
dec
push
movsb
sub
cmpb
ss
pop
sbb
push
aam
jo
movsb
sbb
clc
pop
loop
inc
or
pop
ljmp
mov
repnz
inc
push
add
sbb
push
cmp
add
outsb
add
push
pop
ret
cs
pop
or
loopne
push
jae
popa
add
bound
rorl
or
inc
into
pop
mov
imul
push
clc
ss
int3
sbb
push
mov
sub
dec
inc
icebp
scas
enter
cli
push
jb
sub
adc
or
jno
ljmp
jns
jne
stos
pop
sbb
mov
jp
and
mov
and
push
fidivl
mov
cmp
pop
rcl
aad
add
adc
addb
pop
mov
shlb
add
and
inc
addb
cwtl
stc
add
sarb
or
xchg
neg
test
test
add
ret
shrb
int
rorb
adcb
icebp
sbb
test
jo
mov
adc
add
pop
pop
adcl
mov
shlb
jmp
push
cmpsl
xchg
in
adc
add
out
jae
xchg
mov
in
out
icebp
cmp
dec
cmp
pusha
repnz
adc
mulb
orb
rcll
je
adc
cmp
mov
push
add
gs
sbb
imul
clc
data16
ljmp
call
cmp
imul
lods
mov
jno
inc
dec
subb
lock
add
call
jo
out
adc
add
push
pushf
mulb
stos
ret
test
imul
add
lods
add
push
push
jmp
in
data16
loope
call
movsb
das
dec
insl
pusha
xor
mov
sbb
arpl
in
and
adc
mov
popf
out
sub
pusha
ljmp
scas
inc
imul
icebp
push
jecxz
xchg
push
add
dec
insb
dec
jmp
lret
add
jae
adc
mov
jmp
std
rcrb
lcall
add
in
lods
sbb
pop
aad
pop
sub
pop
adc
fmuls
xchg
ret
sbb
lods
inc
int
mov
repnz
jns
js
push
imul
lock
iret
ljmp
roll
cmp
cmp
call
test
sbb
xor
pushf
test
xor
adc
repnz
add
outsl
inc
fmull
xchg
adc
and
nop
pop
adc
enter
cli
push
add
mov
inc
push
sbb
andb
mov
sub
sbb
ret
pop
push
lea
pop
sti
dec
adc
daa
xlat
push
xchg
push
and
fistpll
outsl
and
sbb
and
leave
cmp
gs
mov
cli
jae
jmp
mov
cmpsb
aam
or
in
loop
and
or
rolb
or
daa
adc
add
enter
jp
and
add
sbb
add
sub
add
popa
jle
icebp
add
or
cmpl
and
aaa
xor
lret
push
jne
cmp
ljmp
movb
sub
pop
jl
mov
test
add
aad
bswap
inc
subb
ja
dec
inc
movsb
cmp
subl
push
dec
xchg
or
popa
inc
mov
testb
dec
jb
clc
pop
pop
mov
sarb
cmp
mov
fimuls
rorl
shlb
out
test
and
sub
add
adc
scas
or
movsb
shrb
jp
fs
std
roll
mov
shl
data16
pop
sbb
sub
jo
in
add
add
or
sub
pop
cmp
push
fstp
outsl
sbb
fs
push
mov
inc
add
add
pop
test
sub
bound
jo
sbb
and
and
pusha
push
cs
mov
sub
rcrb
loopne
sbb
in
and
imul
jbe
xchg
push
mov
jmp
inc
pop
xor
lds
es
mov
icebp
aam
and
adc
scas
imul
push
push
cmpsl
mov
sub
add
dec
jp
insb
or
push
inc
mov
add
pop
pusha
rolb
add
or
adc
mov
scas
add
sub
pop
push
push
xchg
adc
iret
push
xchg
or
mov
or
adc
add
or
sub
push
lea
sbb
push
ds
or
push
and
subb
daa
mov
or
test
sbb
rorl
or
je
pop
mov
push
pop
orb
pop
ljmp
inc
les
add
mov
imul
lcall
gs
les
test
cmpsb
mov
sub
es
mov
lods
lods
andb
xor
popf
addr16
xor
js
jl
and
dec
nop
pop
cmp
jae
adc
cmpsb
pusha
dec
cmp
adc
and
xor
lods
pop
pop
lret
leave
out
cmp
add
jne
into
test
sbb
icebp
je
mov
add
add
popa
or
mov
pop
cmp
sarb
into
dec
decb
cmp
cwtl
sbb
ss
inc
ds
outsl
sbb
addr16
xchg
pop
inc
sub
mov
add
shrb
loope
jne
ret
je
mov
push
setnp
inc
out
popa
cmc
cmp
cld
xlat
icebp
push
jle
mov
xchg
or
inc
pop
addr16
cmp
jbe
pop
and
sbb
cltd
or
loop
mov
sahf
jbe
aas
test
add
xchg
aaa
push
inc
and
or
fisubl
inc
and
fdivs
adc
sub
mov
cmpsb
jle
cmp
push
cltd
inc
jo
rcrl
inc
push
push
add
imul
stos
inc
push
and
loope
inc
out
adc
imul
sub
popa
hlt
and
and
mov
rorb
movsb
xor
cmp
je
cmp
call
rorb
add
and
mov
pusha
push
mov
inc
pop
or
pop
ret
inc
xchg
and
lods
inc
stc
add
jnp
add
es
cmp
adcb
jo
js
push
cwtl
push
sbb
js
imul
or
test
cmp
xlat
aam
sub
ss
pop
clc
mov
cmp
mov
xor
loopne
sbb
jbe
mov
lods
out
and
in
inc
push
push
xchg
in
sbb
call
sahf
jle
pushf
pop
ja
dec
fstpt
int3
pop
and
or
xor
sbb
inc
push
dec
js
mov
add
aam
mov
ja
adc
stc
shrl
xlat
test
or
xor
fsts
mov
das
mov
sbb
shl
aas
push
push
xchg
jo
and
filds
pop
je
movsb
add
sub
inc
pushf
imul
push
addl
loope
lret
sbb
mov
fisubl
subl
outsb
cld
jmp
and
dec
dec
mov
pop
adc
clc
and
ret
jl
jp
sahf
cmpsl
ds
pop
mov
cmp
sub
insb
int3
lahf
popf
sbb
sub
nop
mov
ret
scas
jne
cmp
ret
push
js
pop
sbb
push
enter
popf
xor
dec
rorl
mov
out
push
sbb
lock
daa
push
adc
add
add
xor
mov
push
push
jle
rcrb
push
dec
js
lock
movsb
adc
call
or
mov
push
mov
and
xchg
adc
jb
add
xor
mov
shrb
add
push
push
xor
sub
addr16
sub
rorb
sub
jge
clc
xor
scas
out
call
mov
add
push
xor
mov
add
and
xchg
inc
xchg
inc
out
jl
ret
roll
adc
dec
mov
push
mov
lret
adc
out
call
lock
add
inc
sbb
and
adc
loopne
rolb
jb
leave
icebp
push
out
push
dec
cmp
or
inc
sub
int3
leave
cmp
or
mov
pop
mov
mov
cmp
rcl
loop
out
sbb
lods
sub
pop
jmp
enter
imulb
mov
adc
mov
inc
pop
cwtl
adc
xor
mov
mov
push
and
test
fdivl
add
mov
dec
xchg
ss
lea
mov
ret
mov
adc
das
adc
jb
sbb
add
add
mov
fsubs
add
cld
mulb
dec
and
mov
pop
shr
addb
or
push
xchg
inc
inc
dec
pusha
fsubrl
stos
adc
or
xor
cmp
lods
jmp
nop
dec
mov
mov
and
sbb
sbb
ret
jp
add
pop
adcb
out
sub
adc
lret
roll
mov
lods
dec
and
pop
add
enter
ljmp
decb
add
movsl
xchg
inc
ja
adc
fsubp
push
test
ds
jns
xor
aad
push
adc
in
add
rcl
adc
dec
xchg
jnp
push
addb
xor
loop
jp
shl
inc
pop
push
ss
jo
cmpl
mov
retw
jmp
pop
sbb
mov
and
push
insl
sub
add
arpl
mov
orl
shlb
sbb
sbb
js
mov
shrl
or
int3
cmp
loop
mov
in
imul
jbe
sbb
cli
clc
sbb
mov
decb
and
and
xor
add
outsb
ljmp
hlt
pminsw
inc
or
inc
inc
xchg
push
mov
jno
mov
or
adc
loope
jmp
push
cmp
push
lock
cmp
test
or
adc
sbb
lods
mov
fsubrs
or
mov
inc
pop
int3
ljmp
ds
or
adc
adc
pop
pop
les
jmp
pop
mov
sub
push
imul
and
jp
jl
sbb
lock
rorb
and
and
stos
add
enter
and
jecxz
push
shlb
or
push
ljmp
or
das
push
subb
imul
sub
test
xchg
lea
push
faddp
cld
push
out
mov
orb
out
pop
xor
xor
sub
mull
test
popa
sub
cmp
addl
or
loop
cmp
jne
xor
sub
xor
ja
jle
or
or
sub
adc
enter
mov
sub
adc
adc
rorb
jle
stos
and
lret
sbb
loope
jmp
shl
movsb
lods
xchg
and
mov
mov
clc
push
ss
hlt
mov
movsl
push
add
push
cmp
repnz
xchg
ljmp
inc
lret
popa
mov
push
and
mov
repnz
popa
fs
jle
addl
and
mov
fsub
mov
outsb
pop
lea
addb
push
cltd
out
or
or
daa
test
shrb
test
loopne
adc
xchg
outsb
inc
mov
test
hlt
int3
sbb
push
sbb
xchg
xsha256
fcmove
jmp
sbb
pushf
aad
imul
loopne
add
sub
add
cli
rorb
repnz
or
leave
test
sarb
and
push
inc
aad
or
sti
and
and
and
xchg
bound
sbb
pusha
cli
sbb
add
or
pop
fmul
sarl
pushf
jnp
xor
sbb
cs
adc
cmp
pop
jge
cmp
and
push
notl
or
ror
pop
pop
or
or
push
enter
jo
mov
enter
jb
repz
sbb
push
cmp
fbld
test
jnp
and
test
sub
out
rcrl
push
cmp
sub
lods
shl
lods
add
xchg
test
popa
push
lcall
and
xor
lret
mov
and
icebp
test
lock
addb
or
stos
mov
jg
jo
push
leave
cmpl
mov
aam
ret
jno
sbb
lret
ljmp
int3
push
cmp
outsl
mov
test
add
inc
loope
fildl
add
push
inc
shll
lcall
add
jecxz
les
and
loopne
es
les
loopne
rcl
inc
inc
jo
sub
js
addb
mov
movsb
fsts
inc
cmp
lds
push
ja
fmull
call
add
mov
sub
mov
ret
js
add
pop
push
push
addb
ret
adc
or
add
sub
mov
push
aas
stc
or
pop
sub
cmc
inc
mov
xchg
je
in
mov
xchg
xchg
cmc
dec
imul
sub
adc
ss
push
sbbl
jne
sahf
and
lock
cmp
repz
adc
push
mov
sub
fsub
sub
inc
sub
sub
stos
das
or
xor
shl
sbb
jg
lods
cmp
mov
adc
push
call
pop
loope
lock
dec
add
pop
jne
lock
adc
add
loopne
jp
nop
arpl
jl
or
nop
lock
jmp
push
push
call
popa
pop
push
mov
imul
pop
xor
xchg
and
out
push
and
aam
push
aam
sti
test
ljmp
jae
lret
sbb
hlt
sbb
mov
pop
bound
cmp
ret
mov
das
pushf
or
or
push
bound
and
sub
mov
sbb
or
insb
jmp
cmp
mov
add
jp
add
push
adc
fimull
jecxz
adc
adc
xor
test
adc
shrb
lret
loopne
in
push
push
fwait
inc
insb
inc
mov
jecxz
pop
insl
es
jno
mov
cmpsl
or
xchg
dec
and
push
stos
xor
adc
push
pop
push
aas
std
push
pop
jns
lea
icebp
and
adcb
xor
pusha
fwait
adc
aam
push
or
push
leave
or
jne
arpl
jp
push
test
jp
add
add
xor
call
push
or
popf
ret
orb
cmc
leave
test
loope
xchg
add
push
push
lea
es
push
add
pusha
mov
add
xchg
pop
adc
sbb
or
pop
mov
or
xchg
cld
mov
cmc
and
test
prefetch
or
rclb
loop
out
dec
inc
mov
pop
mov
clc
cmp
loopne
imull
adc
rol
adc
jge
sbb
pop
and
push
pop
push
outsl
xchg
or
add
loope
pop
mov
cmp
sbb
pop
addr16
push
or
insl
cmp
sbb
data16
add
adc
jae
mov
lock
adc
test
dec
pushf
cmp
xor
aaa
icebp
jb
mov
loop
cmp
shrl
sub
pop
xchg
xor
scas
or
mov
rcll
pop
pop
cmp
enter
popf
test
cmp
fadd
addb
clc
sub
mov
pop
push
ret
push
or
or
dec
popa
aaa
mov
or
inc
inc
cmp
sbbb
cmpsl
sbb
mov
mov
dec
add
xor
sbb
dec
dec
push
inc
or
jo
push
and
popf
pop
dec
in
xchg
push
mov
cmp
roll
or
icebp
adc
xorb
mov
adcb
xchg
xchg
adc
and
dec
sbb
stc
mov
xor
dec
sbb
mov
mov
mov
gs
inc
sub
push
loope
leave
cmpb
test
xor
rcll
adc
es
add
cmp
jo
cwtl
rcrb
mov
cmc
inc
mov
mov
lds
dec
xor
jno,pn
loope
and
mov
sarb
sub
and
adc
cmp
mov
pop
pushf
xor
enter
pop
add
add
dec
sbb
mov
ret
shrb
sbb
sub
pop
inc
adc
add
inc
add
out
pop
push
jmp
sub
sbbb
leave
mov
cli
sub
xchg
imul
das
pop
adc
xchg
popa
hlt
and
pop
fldt
jecxz
mov
push
jp
fadds
and
lret
xchg
mov
jmp
nop
jb
inc
or
push
pop
dec
fisttpl
cmpsl
jo
insl
push
fistps
outsl
test
andb
inc
mov
rol
xchg
ret
push
push
inc
mov
shl
xchg
mov
pop
or
jmp
inc
lea
inc
movsb
and
mov
adc
lret
lcall
push
ja
jb
mov
push
int3
and
sbb
arpl
pusha
or
push
data16
jbe
fiadds
adcl
inc
xchg
xchg
inc
push
sub
pusha
dec
loopne
fimull
or
cmp
jecxz
xor
roll
inc
push
sahf
lock
iret
mov
push
push
ret
and
adc
sbb
mov
pop
jge
sbb
sbb
cmc
adc
and
ret
mov
push
fnsave
mov
xchg
mov
jp
pop
daa
or
pop
pop
or
sbb
mov
adc
sbb
xchg
loopne
xor
dec
int
mov
rol
and
cwtl
xchg
in
ljmp
nop
adc
xor
stc
mov
inc
rol
addr16
sbb
popa
daa
arpl
jno
rcrb
jle
test
rcll
or
or
stos
dec
mov
adc
add
fmuls
pop
and
cmpsl
mov
dec
cmpb
rolb
sbb
scas
pop
sbb
fsubrp
pusha
lea
leave
mov
loopne
popf
jb
popa
adc
mov
pop
test
sub
xor
sub
dec
imul
jb
mov
adc
stos
shrb
pop
loope
lock
insb
ljmp
shrl
loope
roll
xchg
or
cmp
mov
sahf
outsl
sub
sub
loope
add
jo
xchg
mov
int
sar
rcrb
cmp
sub
andl
jecxz
mov
shrl
cmp
ret
imul
sub
xor
sbb
sbb
imul
or
sbb
mov
test
bound
inc
and
clc
jmp
int3
pusha
je
shl
into
in
jl
movsb
sub
xchg
xchg
inc
loope
outsl
pop
pop
xchg
mov
mov
cmp
shlb
adc
push
imul
adc
mov
jo
dec
ret
add
sub
cmpsl
sbbb
js
xor
stc
adc
push
cmpsl
jecxz
sub
lret
adc
push
lret
add
add
jno
xchg
sbb
icebp
movsl
mov
sahf
mov
cmp
jmp
daa
push
dec
xchg
push
inc
adc
out
mov
sbb
mov
lret
adc
and
dec
nop
jo
loop
out
ficompl
mov
fmuls
jmp
push
pop
xchg
pop
mov
or
shrl
jge
sub
mov
lock
movsb
xchg
xor
add
rorl
jl
call
push
push
loopne
and
rorl
pop
pop
cmp
loope
add
xchg
pop
push
sbb
inc
loopne
and
lods
dec
ret
imul
pop
mov
nop
and
xor
cmp
cmp
inc
jbe
push
cmp
das
push
pop
push
jmp
xor
fistpl
jl
inc
pop
scas
mov
xchg
cli
into
stc
add
push
clc
add
clc
les
cmp
adc
dec
push
xor
ss
int3
sahf
adc
add
loope
cmp
enter
rolb
inc
and
outsl
js
icebp
loop
or
cmp
mov
xchg
add
call
lock
dec
addr16
add
dec
push
repnz
mov
pop
xchg
loopne
enter
outsb
sbb
push
mov
jb
pop
pop
or
or
out
rolb
les
sub
add
movsl
test
bnd
mov
mov
xor
hlt
or
pushf
cwtl
adc
push
add
pop
add
xor
cmp
and
jo
ljmp
clc
jo
or
and
adc
mov
movsl
loopne
sub
adc
sbb
mov
add
cmp
or
push
stos
pop
xor
mov
stos
or
sbb
imul
fs
add
lea
shl
inc
int3
add
or
push
mov
mov
adc
and
cmc
lods
sub
jno
leave
mov
xlat
imulb
or
add
add
dec
add
push
setbe
pop
adc
push
push
or
repz
ret
test
daa
imul
shrb
xlat
xorb
jo
push
pop
stos
leave
inc
push
cmp
cli
and
sbb
pop
out
jns
and
inc
jo
cmp
add
into
pop
xchg
dec
ja
and
mov
push
mov
sbb
dec
into
sbbb
jo
mov
daa
adc
sarb
ljmp
inc
cmovl
adc
push
mov
or
nop
add
xor
popa
mov
add
push
lret
out
sbb
mov
and
inc
cmc
cmpsb
rcrb
or
xor
xor
lods
inc
jg
pop
xor
xchg
push
sahf
cmp
and
sbb
les
mov
pop
shrb
add
loop
inc
mov
xchg
and
mov
add
icebp
cmp
and
dec
pusha
mov
jge
out
push
adc
cmp
cmp
mov
mov
in
cmpsb
or
test
pop
inc
ljmp
mov
or
call
add
push
cmp
nop
xchg
adc
jb
dec
cmp
xor
or
inc
sarl
aaa
add
bound
aaa
pop
add
push
cmp
push
subl
mov
xor
testl
ret
sysret
sbb
add
insb
mov
in
mov
sub
movsb
outsb
jecxz
add
ret
outsl
add
xor
nop
cmp
dec
dec
out
loopne
xchg
cwtl
jo
add
push
push
int3
cwtl
adc
dec
sbb
enter
or
mov
jae
daa
dec
and
add
jl
loopne
pop
movsb
lds
or
mov
clc
inc
fisubrs
adc
xor
sbb
adc
and
adcb
jl
push
lods
jae
add
pushf
pop
popa
shlb
shl
popa
call
xor
cwtl
mov
enter
dec
test
push
add
dec
sbb
inc
js
ds
mov
adc
jge
fdivp
adc
loope
daa
add
push
ja
pop
jbe
pop
inc
jecxz
js
into
out
sahf
add
rorb
lock
jecxz
sbb
adc
sbb
add
cmp
xchg
cmp
sbb
lods
jno
or
sbb
add
pop
ficomps
fidivrs
mov
sbb
or
and
inc
mov
out
pushf
adcb
lret
scas
sbb
fcoml
or
xchg
fdivl
popa
insl
jno
sbb
inc
sub
inc
push
push
cmp
cltd
orb
or
inc
push
push
and
pop
pop
dec
shl
push
jmp
rcrb
inc
and
or
adcl
mov
shrb
fiaddl
lahf
mov
add
rolb
out
pop
inc
add
mov
lret
sbb
cld
mov
pop
push
sbb
mov
test
push
mov
sbb
push
mov
adc
call
loop
js
loop
push
jmp
jb
mov
out
pop
stos
xor
arpl
faddl
jle
sbb
sub
les
mov
test
sbb
jl
dec
leave
jo
jmp
inc
rolb
std
movsw
push
xchg
daa
sbb
cs
rolb
shrl
mov
and
jmp
jp
test
aam
xor
repz
adc
ret
jb
addr16
inc
ds
push
addb
adc
jle
push
pop
adc
punpcklwd
and
scas
xchg
mov
cmpsb
xchg
add
or
and
inc
adc
mov
adc
dec
and
mov
orb
dec
icebp
push
add
pop
inc
inc
or
mov
cmp
pusha
sbb
cmp
jp
sub
mov
adc
mov
adc
adc
inc
ret
je
movb
das
or
ret
call
imul
adc
outsl
movsb
pushf
rol
sbb
push
pop
adc
in
or
sarl
ss
jno
ror
mov
and
xorb
fidivrs
cmp
mov
adc
lods
pop
pop
fisubrs
mov
test
jl
xchg
mov
add
aam
dec
pop
sahf
outsl
jns
inc
rcrb
enter
sarb
scas
repnz
dec
xchg
or
adc
fs
subl
lahf
push
bnd
xor
push
dec
pop
adc
pop
lret
push
push
sarb
sbb
outsl
ret
xor
xchg
pop
push
pop
mov
mov
push
push
imul
push
orl
notb
orl
lret
inc
jns
rclb
test
sahf
rcrb
add
pop
sbb
imul
sub
fadd
mov
movsb
adc
xor
aam
mov
push
test
test
pop
mov
sbb
mov
sub
mov
lods
into
xor
xlat
pop
pop
adc
dec
fadds
inc
dec
out
adc
js
int3
rcr
adc
in
in
por
lods
xor
rorl
addb
jge
and
mov
je
lea
push
sets
and
jb
insb
sub
jo
or
or
imul
lea
pushf
sub
cmp
or
cltd
mov
xchg
jmp
mov
loope
adc
and
jo
ret
sbb
add
rorb
enter
inc
test
xor
mov
fstps
jb
and
movb
push
mov
pop
or
aad
ret
adc
xor
mov
inc
hlt
clc
ds
pop
lock
and
insb
mov
pop
in
or
or
daa
pop
xor
jp
xchg
mov
xchg
repnz
or
lcall
dec
loop
cmp
imul
pusha
fdivl
pusha
icebp
fisubs
cli
push
and
sub
and
xorl
mov
shlb
pop
popa
jno
leave
mov
sbb
jo
adc
add
imul
sbb
push
popf
je
call
xor
xor
adc
and
xchg
shll
xchg
push
fisubrl
je
loop
cmp
adc
mov
xchg
call
js
cmp
cmp
lods
or
lock
pushf
outsb
in
enter
shlb
outsl
or
add
adc
push
lret
dec
pop
das
add
ret
cwtl
ret
filds
outsb
adc
insb
push
xchg
loop
out
out
sub
leave
fmuls
lret
mov
mov
cmp
cmp
gs
loopne
cmp
lock
push
add
dec
or
or
mov
jb
mov
jo
loopne
js
xchg
or
ror
push
imul
xchg
jle
dec
shll
cmp
pusha
sub
loop,pt
cmpsb
call
ljmp
pop
mov
mov
xor
adc
dec
jp
test
adc
xor
adc
dec
ja
into
test
sub
js
pop
mov
dec
out
leave
lock
lea
inc
rol
iret
xchg
lds
sbbl
test
inc
or
or
xor
test
icebp
ljmp
and
mov
adc
dec
aaa
cli
pop
movb
out
mov
adc
and
popa
push
adc
pop
xchg
adcl
or
and
xchg
fcmovnbe
pop
adc
mov
add
cli
les
test
sbb
cmp
push
cmc
repz
jmp
mov
jmp
sbb
xchg
xchg
mov
ljmp
pusha
jno
mov
lret
jne
sub
push
ret
test
test
and
inc
mov
jns
sub
scas
inc
push
dec
imul
pop
and
andl
out
jno
mov
push
push
mov
or
cli
cmp
fidivs
adc
loopne
and
stc
push
mov
xor
into
test
add
add
cmp
inc
mov
lea
std
mov
pop
push
add
mov
out
sbb
fadd
inc
cmp
call
lret
cli
push
cs
xor
add
mov
lods
movl
popa
mov
cs
sbb
imul
or
imul
dec
mov
add
int3
ret
adc
mov
add
loop
push
pusha
pop
ljmp
xchg
cmc
push
or
shr
or
ret
ljmp
shl
dec
cmp
clc
faddl
mov
or
incb
add
or
popf
clc
mov
fsubs
dec
sub
xchg
and
lcall
sub
mov
add
push
cltd
lods
fwait
add
pop
inc
sub
adc
jbe
inc
mov
mov
stc
sbb
fmul
inc
nop
push
adc
xor
sbb
mov
xor
push
sarl
inc
or
xor
enter
imul
dec
adc
std
insl
sbb
jmp
dec
clc
adc
sbb
mov
add
lcall
and
and
mov
lret
inc
xchg
pushf
inc
repnz
movsb
adc
icebp
xlat
jle
adc
cmp
add
push
shl
ret
notl
sbb
insb
sbb
clc
imul
dec
enter
jmp
sbb
adc
ret
sbb
cli
sub
add
stc
inc
dec
sbb
pop
jne
ret
sbb
or
and
repz
jb
push
mov
clc
adc
inc
test
inc
ret
cmpsl
mov
mov
pusha
movsb
sbb
ret
rolb
sbb
femms
adc
bound
add
cmp
xor
rorb
stos
mov
sbb
lret
cmc
je
inc
daa
add
leave
inc
or
mov
inc
icebp
cwtl
aaa
pusha
inc
pop
sbb
icebp
cmpsb
into
stos
stc
add
pop
xchg
or
adc
gs
inc
rcrb
mov
loope
sbb
cltd
or
push
cmpl
xor
ret
inc
xor
aas
dec
add
ss
ds
mov
cmp
or
lret
addr16
popl
pop
add
adc
addr16
pop
nop
out
nop
fisttps
adc
mov
mov
xlat
int
or
adcb
fstpt
sarl
xor
xchg
icebp
nop
adc
sbb
mov
adc
scas
xchg
adc
jg
in
lea
sbb
mov
sub
pop
cmc
bound
sub
mov
add
push
mov
dec
shlb
add
inc
push
add
or
inc
popf
fiadds
sub
mov
loopne
xor
push
inc
lcall
aaa
mov
mov
rorb
sahf
mov
fldenv
rcrl
jbe
sub
rolb
jno
jl
mov
ljmp
push
dec
movsl
call
fcmovnu
xchg
loop
loopne
les
icebp
mov
inc
dec
lea
ss
mov
popf
push
test
add
xchg
pusha
add
lret
or
sub
cmp
add
push
movsl
dec
sti
xchg
or
dec
test
stos
icebp
jae
xchg
inc
iret
and
sbb
ja
or
sbb
pop
add
cmp
testb
arpl
sub
pop
test
xchg
and
sbb
pop
out
mov
in
bound
mov
test
addr16
dec
test
add
sub
xchg
push
jb
pop
jp
sbb
rcll
lods
xor
inc
call
add
popa
js
pop
cmp
adc
sbb
dec
adc
sbbl
add
mov
inc
data16
add
jae
sub
xchg
mov
sti
je
pushf
js
xor
stos
aaa
mov
sbb
imul
xor
dec
add
cmp
and
pop
test
or
or
sarb
test
dec
lcall
mov
ret
adc
mov
rol
insb
loopne
mov
ljmp
sub
js
xor
add
mov
repz
cmc
jb
or
or
stc
sbb
loope
call
sbb
add
pushl
lods
xchg
adc
mov
inc
or
aad
ficompl
movb
stc
push
or
jne
sbb
test
xor
jno
js
cmpsb
xchg
ljmp
mov
imul
push
jns
or
loop
xchg
jmp
call
xor
or
lret
lock
fstpt
shl
ss
push
and
popf
and
xchg
xchg
mov
and
and
push
push
rcrb
loopne
or
push
mov
sbb
mov
inc
loopne
loop
imul
mov
sub
sbb
xchg
mov
xchg
adc
jecxz
hlt
add
sbb
adc
aaa
ljmp
popa
push
add
inc
push
or
test
sub
je
hlt
lahf
lods
add
ret
fcmovb
hlt
pop
in
push
dec
insl
dec
call
sahf
or
jecxz
add
inc
sahf
inc
pop
xchg
push
adcb
bound
and
je
packsswb
jnp
add
lret
test
jb
cmp
sub
inc
mov
rclb
repz
jbe
inc
add
add
loope
sbb
xor
xlat
xor
loope
mov
or
dec
jb
adcl
mov
push
mov
jb
testb
and
cs
pop
ret
adc
push
into
icebp
add
xor
mov
xor
push
repz
cmpsb
movsb
les
pop
cmp
es
cmp
into
jmp
dec
pop
xor
push
push
ljmp
pop
jnp
cmp
xor
dec
sbb
mov
jae
add
sub
test
dec
lret
dec
pop
add
push
pop
add
in
dec
bound
sbb
sbb
sti
push
push
and
push
cmp
jmp
mov
cmove
inc
or
aad
into
mov
mov
push
insl
sbb
push
data16
adc
add
add
add
push
pop
cmc
adc
xchg
or
mov
flds
sbb
push
inc
mov
sub
xchg
or
mov
jb
roll
enter
jo
add
inc
dec
sub
enter
sbb
xlat
testb
fs
dec
push
in
inc
sbb
xchg
pusha
in
xor
testb
xorl
cmpsl
pop
mov
adc
test
scas
dec
xor
loopne
xlat
mov
movb
ret
insb
adc
rcrb
lock
in
jecxz
jno
pusha
cmpl
and
push
aad
out
lret
enter
mov
in
sti
xchg
data16
sub
jb
adc
or
push
sub
gs
pushf
jl
and
mov
pop
xor
adc
push
movb
lock
ret
jmp
orb
das
inc
push
stc
and
lea
lret
mov
in
xchg
enter
les
gs
or
add
mov
xor
inc
push
adc
add
inc
subl
and
xor
add
or
adc
push
add
xchg
orb
sub
inc
push
ret
cmp
mov
add
jo
je
push
and
xorl
xor
js
repnz
and
lahf
sbb
test
adc
and
sbb
sahf
ret
inc
add
adc
cwtl
mov
loope
jne
rorb
ljmp
pop
pop
jmp
xchg
xchg
add
xchg
leave
jge
lods
movsb
push
mov
and
je
lret
dec
sub
dec
rolb
inc
ret
cwtl
addb
in
rcll
mov
lods
and
xor
add
inc
pop
or
xchg
push
lret
dec
stos
into
adc
add
fidivrs
rclb
add
or
popa
hlt
sti
pop
push
loope
jle
jo
fdivrs
and
addr16
sub
nop
rcr
add
addr16
push
outsl
mov
daa
push
loope
sahf
mov
sahf
jb
clc
sbb
and
mov
or
jl
lock
jl
and
hlt
add
es
jb
call
and
daa
sarb
sbb
sbb
out
rol
mov
jmp
mov
cmp
pop
adc
add
sbb
ret
jno
mov
inc
pushf
fsubrl
pop
jb
inc
jo
adc
jecxz
adc
or
sbb
push
cmpsb
add
push
sbb
push
mov
inc
mov
rcll
punpckhwd
add
xorl
jnp
lock
pushf
mov
mov
inc
xchg
push
sbb
bound
ret
sbb
ret
push
jl
add
mov
ret
lret
loopne
add
enter
pop
pop
ss
or
sar
add
sub
push
sbb
addl
sub
push
loope
add
mov
adc
inc
pusha
je
lret
add
shrb
int3
pop
call
ds
push
push
sbb
adc
lret
sbb
mov
and
xchg
ret
lret
sub
jo
mov
scas
int3
loopne
push
orl
data16
pusha
pop
push
sbb
or
mov
add
push
sbb
push
test
imul
shl
sbb
mov
mov
insb
int
idiv
insl
sub
shlb
or
adc
push
mov
push
push
push
push
stos
sbb
or
rolb
sub
cld
pushaw
loopne,pt
fs
sbb
add
dec
mov
or
jne
sbbb
inc
dec
xchg
ret
shlb
dec
enter
sub
inc
in
mov
mov
and
adc
mov
mov
sbb
cmpsl
jmp
add
cmpsb
adc
add
sbb
cld
insb
roll
pop
mov
fcomps
daa
push
pop
push
sub
inc
out
je
xchg
mov
and
push
popa
inc
pop
mov
out
inc
movsl
aad
icebp
mov
arpl
xchg
clc
std
ja
rorb
es
jmp
xor
push
roll
sarb
adc
stc
add
in
sbb
cmovnp
or
or
es
or
or
adc
fs
hlt
xlat
cmp
adc
dec
push
jmp
add
push
push
lock
adc
add
or
les
jo
pop
mov
sbb
cmp
inc
sub
outsl
sbb
pop
adc
push
xor
mov
adcb
or
xchg
dec
repnz
movsl
add
dec
push
fs
cs
sbb
jo
inc
rolb
enter
pmaxub
add
xchg
movsl
mov
push
ret
insl
jl
cmp
pop
pushf
cwtl
les
mov
pop
add
push
cmp
pop
fstps
or
ret
sbb
jle
test
ret
push
icebp
and
cmp
rcr
inc
cmp
mov
int3
into
dec
pop
adc
and
movl
mov
ds
cmp
add
pop
test
insb
sbb
ja
cmpsb
push
cli
push
sbb
or
mov
sbb
mov
cmp
push
push
mov
fisubrl
mov
sbb
test
shrb
inc
xchg
xchg
pop
cmp
test
pop
dec
cs
stos
subl
inc
jbe
enter
mov
mov
out
jo
or
mov
inc
repz
inc
dec
xchg
cmpb
add
add
outsb
inc
icebp
je
cmp
icebp
pop
push
outsb
test
or
mov
add
pushf
mov
and
pop
dec
add
sbb
sbb
repnz
xor
loopne
xchg
addb
repnz
push
xor
ret
outsl
cld
xchg
and
sbb
ret
cmp
outsl
adc
negb
add
dec
push
jo
mov
mov
and
or
popf
testb
addl
pop
inc
add
dec
sub
leave
adc
pushf
popa
push
and
pusha
inc
loopne
int
shlb
dec
pusha
pop
pop
icebp
add
or
ret
jecxz
cmp
sub
jno
pop
rcll
pop
jb
and
incl
pop
add
inc
rclb
les
mov
inc
push
ficompl
add
ljmp
clc
xor
lods
test
push
dec
rolb
xchg
add
and
xchg
es
test
loop
out
push
xchg
pop
cmp
lahf
pop
ret
xorl
cmp
jge
popa
xchg
and
add
mov
pop
push
xchg
jo
mov
test
mov
rclb
pop
pop
es
insb
sarb
sbb
pop
shll
mov
dec
shlb
add
rol
lcall
clc
pop
fimull
inc
or
pop
dec
cmp
jecxz
jp
loope
scas
test
pop
sub
sub
adc
xlat
xchg
pusha
or
add
dec
xor
push
outsb
imul
lea
xor
sub
push
jl
pop
test
shrl
sub
enter
push
add
mov
or
jno
pop
jecxz
sbb
mov
push
add
in
xchg
or
sbb
inc
outsl
sbb
or
inc
js
mov
jno
loope
push
mov
push
or
add
inc
scas
add
adc
sbb
dec
pop
sbb
push
pop
pop
sbb
lods
notb
mov
xchg
dec
sbb
cld
push
mov
pop
mov
clc
xor
push
scas
hlt
mov
or
pop
and
sbb
jmp
in
sbb
jnp
scas
lret
lods
push
ds
clc
not
sub
mov
addb
adc
xchg
cmc
jo,pt
lock
in
adc
push
sahf
pop
adc
mov
cmp
pushf
test
add
dec
pop
roll
push
fildl
ret
push
xor
jnp
push
shlb
or
xor
xchg
loop
and
shlb
and
ss
add
jmp
fimull
jo
sarl
jae
in
or
dec
and
adc
nop
in
push
shll
add
xchg
mov
repnz
sbb
add
cmpsb
clc
mov
sbb
jmp
mov
jo
add
test
mov
hlt
or
test
mov
inc
loope
xor
sub
call
clc
sbb
icebp
or
fcmovb
sahf
add
fs
push
popa
sub
dec
push
or
pavgw
int
push
pop
test
lcall
aas
sbb
add
fistpll
sbb
add
insb
rclb
sbbb
lret
cmp
adc
cmpsb
cmp
add
inc
enter
hlt
aam
cmpb
cmp
out
cmp
in
cld
loopne
xchg
sbb
popa
pop
jl
js
pop
lea
dec
mov
out
sub
lret
sbb
add
les
inc
adc
and
or
rcrl
mov
dec
pop
out
lock
adc
faddp
and
add
dec
shlb
jge
push
pop
gs
insb
mov
rol
mov
mov
pop
inc
dec
fsubrs
mov
stos
and
cmp
push
subl
push
scas
repz
icebp
xadd
rcrb
sti
push
js
sub
jbe
out
pop
js
jl
mov
add
and
mov
popa
shlb
push
test
xchg
lret
push
lock
icebp
add
lock
jp
les
jp
movsb
sbbb
jp
mov
dec
ficompl
ds
add
stos
jg
ret
xorb
xor
bound
cmpsl
lods
lods
into
adc
ret
insb
addl
enter
sahf
subb
popa
dec
ret
call
mov
sub
mov
or
in
aad
pop
mov
icebp
pop
add
andb
aam
fdivl
repnz
or
imul
sbb
adc
xchg
lret
inc
sbb
push
std
shrb
adc
int3
push
ss
mov
faddl
addl
rolb
into
ret
xor
sbb
cmpsb
sbb
jmp
mov
sub
jo
and
imul
mov
jp
or
jecxz
enter
divb
fldcw
and
and
inc
jb
add
xchg
jns
enter
pushf
or
add
pusha
sub
movsb
inc
mov
inc
test
ret
js
inc
aam
jmp
pop
or
orb
xor
imul
popa
push
mov
mov
push
xchg
ret
bound
add
add
xor
pop
fisttpll
fsubs
or
test
enter
mov
mov
jb
lock
imul
adc
sti
aam
push
jb
mov
shlb
xchg
cwtl
js
es
iret
sbbb
sub
add
ror
and
push
incb
push
dec
out
clc
into
push
daa
or
add
push
aam
add
out
push
jo
jne
test
mov
sbb
repnz
ret
clc
aas
out
mov
adc
or
adc
or
push
mov
pop
ret
notb
das
movsl
in
inc
out
xchg
mov
mov
ja
pop
and
and
inc
xchg
rolb
outsl
cmp
pop
outsb
push
jo
mov
add
clc
xorb
data16
xchg
inc
shlb
sbb
rcll
and
in
enter
dec
push
mov
cmp
jns
rcrl
or
pop
xor
imul
mov
test
or
add
rolb
push
or
hlt
sub
push
aam
rorb
or
add
popf
cmp
or
or
mov
inc
fsubr
xchg
dec
or
sub
leave
sbb
and
adc
pop
push
mov
mov
jnp
mov
orl
or
scas
push
cmp
mov
or
rclb
ret
pop
out
adc
pusha
push
xchg
pop
push
daa
sbb
ret
add
add
mov
mov
push
cmpsb
dec
xchg
std
push
leave
cmp
lahf
push
rolb
pop
sbb
dec
icebp
lods
push
add
lock
scas
loopne
dec
adc
bnd
xor
dec
incb
push
jp
mov
or
and
sub
push
xor
push
push
aad
mov
or
mov
or
hlt
push
ljmp
mov
fsubs
sub
aam
sbb
cmp
lock
add
inc
pop
movsb
push
nop
lods
jno
stos
ret
adcb
push
mov
arpl
sbb
jp
pop
pop
enter
mov
loopne
add
das
xlat
outsl
mov
arpl
scas
enter
push
scas
dec
push
cmp
test
clc
adc
sbb
xlat
ret
sbb
fs
xor
jge
bound
xor
mov
cmp
push
mov
cltd
addb
cmp
xor
add
dec
ljmp
sahf
sub
or
jnp
jp
xchg
pushf
ljmp
ret
jo
pop
add
arpl
jmp
ror
sbb
sbb
jg
mov
adc
dec
int3
cmp
les
ret
sbb
addr16
sbb
jp
push
sub
js
and
cli
testl
ds
leave
push
aaa
push
in
inc
mov
adc
push
clc
push
dec
cltd
mov
sbb
or
push
test
or
inc
in
jmp
sbb
int3
gs
sbb
enter
mov
lcall
pop
call
sub
mov
cmp
mov
lods
sbb
sbb
dec
mov
test
fwait
lock
bound
inc
sahf
aam
adc
ss
cwtl
adc
add
adc
push
xchg
jp
sbb
mov
xchg
xchg
lods
orl
or
std
sahf
mov
xor
outsl
loop
aas
or
fwait
lahf
mov
mov
mov
cmp
js
jecxz
ljmp
addl
cmp
cmp
inc
sti
adc
push
add
pusha
sub
or
add
mov
pop
pop
sub
add
sbb
adc
shlb
js
inc
mov
jmp
and
fsubl
inc
lods
or
bound
incl
push
dec
sbb
je
or
test
inc
rolb
xchg
in
mov
or
push
cmp
pop
js
sarb
mov
jno
push
dec
repnz
add
fst
loope
sbb
cmp
into
cmp
adc
mov
aam
ret
imulb
sub
adc
lock
push
push
das
lsl
popa
xchg
push
or
leave
sbbb
xor
loope
call
dec
cmp
pop
popa
or
fdivrl
sbb
jbe
cmpl
xor
mov
psubsb
int3
or
ljmp
stc
rsm
push
pushf
nop
sbb
movsl
push
ljmp
dec
xchg
mov
fmull
mov
sbb
inc
mov
dec
xchg
dec
out
xor
adc
fsubl
jge
add
mov
rclb
xchg
lock
add
adc
icebp
sub
lret
or
inc
cmp
mov
xchg
test
jnp
mov
xor
aam
dec
inc
or
push
jne
push
hlt
mov
mov
rorb
pop
outsb
sbb
imul
icebp
xor
mov
pop
mov
and
dec
add
outsl
bound
push
insb
mov
adc
mov
jnp
mov
push
outsl
add
mov
ret
push
dec
fnsave
jo
add
call
add
adc
pushf
or
pop
or
adc
jmp
xchg
xchg
cmp
xchg
inc
add
pusha
jns
xor
popa
pusha
lcall
stos
add
xchg
push
push
pop
pop
lret
fsubrs
aam
add
call
inc
es
es
add
adc
fs
clc
test
push
sub
out
adc
inc
and
inc
jecxz
push
div
xor
testb
mov
or
jno
je,pn
inc
add
ret
inc
jge
adc
roll
xchg
adc
inc
pop
xlat
movsl
push
popa
outsl
int3
lods
int
lea
sbb
add
adc
or
dec
addl
shlb
mov
fidivl
push
pop
adcb
popf
or
sub
outsl
je
pop
jb
push
movsl
dec
push
xchg
mov
imul
push
dec
dec
shl
and
rclb
bound
cmp
pusha
mov
mov
bnd
cmp
jp
pusha
push
or
stc
mov
pop
dec
sub
dec
mov
scas
dec
lea
pop
fimuls
dec
lods
push
cmp
cmc
mov
arpl
enter
adc
xchg
loopne
adc
pushf
repnz
xchg
fs
pop
adc
outsb
pop
popf
jbe
lock
lea
mov
cmpl
ljmp
add
cmp
add
sbb
loopne
test
and
sub
sbb
dec
pop
push
dec
lahf
mov
inc
add
add
jp
movsb
cmpb
pop
in
cmp
mov
mov
or
mov
shrb
adc
sbb
sub
cmp
call
sbb
sbb
mov
or
or
shll
push
js
push
sub
jmp
adc
pop
lods
push
inc
pop
nop
ret
clc
sbb
movsb
jnp
mov
jo
js
push
and
and
push
ret
daa
movsl
adc
into
dec
sar
jnp
es
adc
sarb
in
sbb
mov
inc
pushf
pop
push
fsubrs
sub
ret
sbb
push
jb
lcall
xor
adc
cwtl
or
outsb
imul
ret
mov
lods
enter
shlb
mov
add
adc
rcl
dec
push
jmp
faddp
push
cmp
ror
xor
xor
hlt
and
or
js
lock
xchg
add
or
mov
sets
pop
es
cld
mov
push
add
ljmp
std
adc
sub
and
xchg
enter
sar
add
cmp
dec
sbb
call
sbb
pop
pop
ret
sub
add
xchg
int
leave
and
cmpsb
cmp
aam
or
xor
pop
xor
testb
cwtl
or
inc
mov
push
and
cmp
sbb
testb
sbb
pop
sbb
adc
negl
pushf
xchg
inc
inc
pop
cli
call
dec
cmp
adcb
adc
ljmp
loope
mov
inc
cwtl
and
mov
dec
fadds
adcl
out
imul
lcall
xchg
push
out
mov
xor
loopne
call
jl
dec
or
sbb
mov
cmp
push
jp
adc
movsl
pop
xchg
out
pop
dec
xchg
mov
outsb
leave
mov
pop
fimull
adc
mov
in
inc
dec
adcl
arpl
scas
xchg
xchg
loopne
add
ds
mov
adc
dec
shrb
nop
loopne
fidivrl
fidivrs
push
sbb
sub
dec
sub
push
xchg
sub
adc
add
mov
xchg
or
pop
jae
inc
push
pop
jge
enter
or
sub
xchg
bound
mov
push
movsl
loopne
movsl
sbb
lret
sbb
and
add
in
xor
add
add
out
enter
ret
pop
push
push
and
je
sbb
jle
stc
or
jno
pusha
add
inc
shll
xchg
pop
jl
add
add
mov
in
loope
imul
push
clc
pop
fadds
js
push
dec
cmpsl
pop
xchg
js
lret
push
test
jp
mov
cmp
scas
sbb
out
inc
push
repz
icebp
push
add
cmp
sbb
xchg
xor
jecxz
and
cwtl
sbb
push
sub
sbb
sti
jne
push
mov
popa
pop
mov
es
pop
sbb
dec
push
popa
rolb
push
notb
xchg
xor
into
leave
add
and
mov
ror
or
cmp
js
mov
orb
adcl
push
dec
dec
sbb
xchg
pop
and
rcrb
inc
or
push
xor
das
sbb
out
push
mov
leave
imul
ret
jo
dec
mov
js
and
js
shll
sub
pop
push
jno
rol
rorb
daa
loopne
inc
ret
orl
insb
mov
adc
cmovs
aaa
sub
cmp
test
rcrb
fsubrl
add
push
push
mov
or
or
lock
pushf
or
popa
mov
ret
movb
enter
pusha
ljmp
enter
adc
jo
cmp
loope
mov
out
mov
add
adc
push
fsub
je
rolb
hlt
fld
movsl
sbb
mov
lods
popf
add
or
push
xchg
testb
push
mov
mov
lods
nop
and
add
dec
cmp
jmp
sbb
dec
dec
call
js
xor
sub
mov
icebp
mov
aam
es
dec
insb
fnstenv
or
add
push
dec
js
cmpb
andl
xchg
cmpsb
cltd
mov
cwtl
subl
lods
mov
dec
xchg
xor
popa
or
push
jmp
aam
andl
dec
mov
push
push
sbb
mov
test
xchg
xchg
nop
enter
mov
ret
cmpsb
sbb
test
push
cmpsb
inc
pop
loop
inc
push
cmp
dec
mov
push
sti
je
jo
fisubrs
sub
je
add
jno
out
aam
mov
mov
mov
mov
push
cmp
cmp
xor
push
scas
mov
push
rclb
xor
xor
addb
enter
test
xorl
xchg
test
jb
mov
xchg
into
jle
xchg
js
hlt
bound
and
push
or
imul
jle
cmp
adc
xor
ret
imul
mov
xorl
mov
cmp
shll
xlat
nop
js
jo
aam
cmp
pop
adc
mov
or
jae
adc
sub
cmovb
pushf
pop
ret
adc
jo
and
push
packsswb
dec
repnz
push
sbb
add
icebp
and
push
push
adc
and
nop
mov
cmp
daa
xchg
dec
xor
enter
sbb
and
add
or
jp
orb
push
mov
xchg
mov
ss
lods
jmp
adc
mov
pop
adc
pop
pop
nop
stos
jge
repnz
xchg
les
pop
sarb
xchg
fimull
jl
or
xchg
pop
sbb
jo
arpl
pusha
mov
push
or
xchg
lea
sub
jno
pusha
add
je
test
adc
packsswb
out
pop
ret
adc
xlat
lcall
cmp
push
add
nop
mov
cli
sbb
inc
sbb
mov
test
and
pop
mov
repz
sub
sbb
sub
or
mov
dec
mov
cmp
add
outsb
arpl
fcom
push
sub
pop
mov
cmp
add
shl
stc
imul
mov
adc
or
xor
xchg
movsb
xchg
ljmp
lret
je
jle
add
or
adc
add
adc
pop
cmp
scas
xlat
sbb
repnz
sbb
push
xorb
mov
mov
pop
inc
adcl
or
jp
dec
sbb
cmc
adc
negl
sbb
jge
and
ret
sub
add
pop
jbe
lock
mov
roll
jo
or
es
sub
or
pop
shrl
mov
add
add
adc
add
and
pop
adc
cs
iret
jle
mov
mov
jne
mov
add
cmpl
ss
and
cwtl
mov
mov
xor
lock
dec
lret
or
inc
lods
dec
lods
add
sub
pusha
adc
dec
sbb
ds
imul
mov
mov
or
dec
or
addl
jno
mov
jne
xor
shll
scas
pop
add
fadd
add
cli
ror
test
sbb
xorl
cmp
pusha
and
loopne
sub
pusha
je
mov
loopne
shl
popa
neg
sbb
sbb
xor
int
and
hlt
xor
push
pop
cmp
leave
rol
test
out
movsb
sub
xor
push
xchg
inc
stos
mov
push
lock
inc
push
cmpsb
jmp
adc
ret
sub
mov
mov
dec
into
jl
dec
inc
xor
push
pop
dec
and
mov
shlb
push
add
push
shr
mov
dec
jno
cmpsl
xor
shlb
add
shrl
jge
out
movsl
inc
and
testl
ret
add
loop
mov
sbb
and
jle
adc
mov
lds
or
pop
dec
mov
inc
cwtl
adc
lea
pop
sarb
adc
add
pop
sbb
push
adc
cmp
or
and
popf
clc
ror
rcl
popa
cwtl
rorb
push
sar
dec
xor
mov
push
dec
sbb
fs
and
cli
push
xor
or
add
push
sbb
jo
pop
data16
dec
xor
xchg
test
mov
addl
lods
int
adc
add
incb
movsl
and
dec
pop
or
aaa
mov
mov
fcomps
sbb
sbb
inc
pop
rcrl
xlat
add
ret
or
adc
sub
out
dec
sub
dec
push
addl
orb
les
cmp
xlat
cmp
adc
mov
repnz
xchg
add
lea
dec
adc
sbb
push
sets
das
cmp
jb
cwtl
jno
scas
movsb
xchg
fwait
movb
inc
cmp
pop
and
nop
aaa
jbe
mov
je
aam
xchg
and
adc
xor
inc
xchg
ds
shr
je
hlt
xor
push
je
and
dec
push
adc
pop
data16
arpl
sbb
adc
fisubs
out
mov
iret
into
enter
add
in
inc
mov
nop
or
cmp
xor
fwait
les
sbb
movb
jmp
clc
jle
in
push
inc
sarb
mov
or
aam
aad
jecxz
loope
and
out
or
and
shl
pop
andb
adc
data16
pop
dec
pop
add
leave
fmull
dec
ret
out
or
jp
jmp
inc
lods
add
jae
cmp
and
jne
cmp
sbb
lret
mov
mov
cmpl
lds
cmp
jmp
adc
test
int
fnsave
les
sti
xor
adc
mov
cmp
jb
jmp
mov
adc
pop
sbb
pusha
sub
cltd
jmp
loopne
dec
adc
jo
or
sbb
xor
jo
sbb
sub
cli
add
bound
push
adc
jb
js
mov
scas
pop
add
je
roll
xor
fadds
icebp
push
push
pop
loop
ja
sahf
into
mov
stos
pop
dec
or
cmp
cmp
lock
xor
test
test
add
add
or
sbb
orps
add
ret
test
cmpb
or
lods
adc
adc
mov
test
clc
lods
add
outsl
xchg
pop
xchg
inc
cmp
push
mov
sub
push
push
push
subb
cwtl
enter
inc
clc
dec
test
pop
icebp
fnstcw
lahf
push
dec
call
stc
pop
jo
xchg
lock
fstpl
fstpl
and
adc
dec
and
cmpsl
jne
js
pop
add
or
ljmp
push
mov
sbb
aam
pop
and
xchg
xchg
add
push
ret
test
lret
sub
adcb
movsb
sub
movsl
pop
xor
mov
add
xchg
or
pop
add
add
xor
shrb
insl
into
in
ds
add
arpl
jecxz
mov
xor
mov
xor
test
inc
orb
xor
test
xlat
stos
xor
mov
push
xchg
orl
push
xchg
add
or
xchg
lods
mov
into
mov
movsl
in
loope
inc
cmpsl
or
fnstenv
sbb
dec
sub
rolb
xchg
sbbb
call
pusha
nop
fs
cli
or
mov
cwtl
adc
xchg
xchg
add
add
test
cltd
es
popa
fnstcw
sub
lods
and
push
mov
sbb
pop
fwait
adc
pop
je
in
movsb
mov
dec
inc
and
sbb
lret
sbb
push
or
movsb
clc
add
adc
jns
and
cmp
js
jle
sub
pop
ljmp
pop
sub
sub
movsb
jo
lods
push
push
dec
jl
adc
pop
push
mov
popa
xchg
stos
jno
xchg
lock
jo
and
test
and
xor
dec
popl
push
test
adc
sbb
push
inc
pop
or
add
add
jl
xlat
inc
nop
cmpsl
xor
pushf
movsb
cltd
stos
push
xchg
repnz
outsb
shrl
sub
test
jmp
xor
sbb
cmp
sub
int
lods
push
call
sar
jecxz
fdiv
adc
ljmp
pop
test
add
adc
ret
ret
adc
push
add
add
xchg
test
pushf
sbb
ret
pop
or
ret
jns
inc
clc
or
pop
or
mov
dec
ficoms
lods
jne
mov
and
inc
jge
inc
sbb
xchg
xor
adc
add
xor
sbb
cmp
push
pusha
xor
sbb
xlat
add
or
cmp
into
xor
adc
or
add
stc
sbb
ror
pop
sbbb
push
pop
imul
adc
sub
pop
xlat
add
js
dec
in
or
js
ljmp
lods
inc
call
iret
mov
sub
insl
rcrb
push
pop
lods
and
mov
movsl
add
xchg
push
xor
sbb
or
jmp
cltd
mov
sahf
xchg
push
outsb
mov
sbb
or
inc
add
imul
cmpsb
fistps
das
lds
das
or
mov
inc
add
rcl
cs
dec
or
inc
mov
je
add
add
aam
loopne
add
test
or
dec
rolb
xor
shlb
sub
inc
aam
sarb
lahf
lock
popa
lea
sub
cmc
dec
push
add
inc
pop
mov
or
roll
jp
das
push
xor
mov
mov
adc
rcl
xchg
cmpsl
in
inc
aad
stos
add
pop
loop
leave
sbb
mov
push
jne
sbb
jecxz
mov
add
jo
pop
rorb
cli
pop
inc
ret
jecxz
nop
xor
add
in
dec
in
and
enter
mov
pop
jnp
movsb
push
sbb
push
repz
cmp
mov
adcl
sbb
push
and
adc
push
outsb
imul
push
sbb
lods
loopne
cmp
pop
stos
xchg
leave
push
sbb
xor
enter
lods
scas
sub
loope
xor
orl
or
adc
xchg
sub
mov
jo
icebp
data16
mov
pop
sbb
lret
dec
dec
push
icebp
inc
adc
mov
repnz
mov
xchg
push
jnp
adc
movsl
lahf
adc
orl
fsubs
and
cmpsl
repnz
hlt
shrl
adc
out
mov
add
je
sub
adc
pop
js
add
fadds
fsubrl
add
bound
adc
cmp
clc
or
cli
mov
and
add
xchg
ror
sbbb
xchg
add
adc
sbb
push
divb
lods
cmpb
repnz
fsubl
xor
sub
mov
sub
dec
sbb
xchg
lock
stc
or
push
pop
cltd
cmp
arpl
inc
xchg
dec
jno
xor
inc
sbb
cmp
pop
scas
sub
in
push
cs
dec
mov
push
mov
nop
push
push
sub
pop
lods
std
cmp
scas
int3
lea
inc
mov
inc
dec
cmp
js
stc
adc
sub
mov
mov
fwait
xor
adc
sbb
inc
ret
lock
mov
jl
and
xor
sarb
pop
push
xchg
lods
jne
test
mov
scas
out
add
imul
xchg
mov
mov
jo
mov
mov
sbb
clc
add
insb
add
cmp
mov
imul
add
sub
xor
imul
jp
shll
lock
fidivl
jg
and
sahf
aam
adc
fisttpll
mov
test
jbe
add
xchg
aad
xor
pop
add
xor
arpl
add
push
movsb
mov
sbb
adc
sub
sbb
addr16
or
ficoml
lret
lock
jecxz
adc
add
sub
call
cli
or
mov
xchg
and
or
in
enter
and
or
jl
inc
pop
psubd
or
push
add
je
add
repnz
cli
mov
out
or
xchg
push
push
pop
sbb
cmpsb
sbb
fs
fcompl
jle
lcall
jb
daa
cmp
push
les
movsl
add
sbb
ret
and
cwtl
arpl
mov
sbb
jo
mov
push
cmp
xor
pop
sbb
call
or
push
cmp
sbb
inc
xor
push
jmp
xor
sahf
or
pusha
scas
pop
sbb
stc
out
sbb
incb
push
xchg
andb
or
je
mov
out
stos
bound
and
je
inc
push
jp
mov
xchg
xchg
push
out
jne
inc
mov
enter
push
out
test
cmp
pusha
jb
or
mov
fisttpl
xchg
and
sub
push
xchg
adc
mov
jne
or
inc
mov
call
adc
jbe
jp
adc
lea
sub
dec
dec
inc
adc
sbb
add
cmp
ljmp
mov
xchg
out
jne
cwtl
pop
mov
mov
rcrl
xor
movsb
inc
mov
fcomps
and
rcrb
cmp
fisttpll
xor
sbb
adc
sbb
jle
mov
pop
and
out
lods
xor
adc
sahf
rolb
pop
mov
into
and
fsubp
xor
and
push
sbb
fs
cs
pop
rorl
stos
sbb
popaw
daa
jb
iret
ss
dec
sub
or
or
loope
mov
adc
mov
push
adc
push
jmp
sbb
adc
adc
sub
xor
or
xor
les
and
adc
sahf
fnstenv
lea
inc
dec
add
ljmp
push
les
and
jbe
xor
inc
cmp
cmp
cmpsb
dec
loop
adc
pop
dec
xor
and
and
test
inc
adc
xchg
mov
jp
loopne
rolb
dec
orl
pusha
iret
xchg
dec
push
punpckhwd
sbb
jb
xlat
jp
lods
sub
clc
int
inc
je
jp
add
cmpb
push
test
cmpb
inc
cli
pop
call
mov
xchg
and
mov
rorl
xchg
inc
push
sbb
inc
mov
dec
sub
popa
pushf
and
pusha
mov
lea
lret
pop
and
adc
jo
mov
scas
nop
xor
cmp
mov
pop
push
pop
and
lods
lods
or
sub
das
dec
pop
pushf
add
test
adc
loopne
int3
out
scas
inc
dec
cmp
shlb
push
xor
mov
mov
mov
mov
bound
sbb
mov
rolb
setnp
add
int3
lock
insb
pop
mov
ret
mov
sete
hlt
movsb
jno
into
cmc
test
sbb
test
out
enter
enter
mov
sbb
daa
xchg
js
scas
pop
ja
rorl
sub
filds
sub
or
or
test
xchg
das
jecxz
push
inc
ss
sbb
lea
xchg
dec
movb
push
sub
ret
loopne
add
lret
sbb
jb
sub
pop
and
xchg
push
into
ds
mov
xchg
mov
loope
xchg
scas
pop
lahf
and
repnz
pop
outsl
stc
sub
movl
mov
or
mov
add
dec
movsl
leave
mov
pop
xorb
xor
mov
arpl
test
jo
sbb
pop
add
push
inc
add
sub
or
test
mov
dec
js
sbb
lock
faddl
add
push
js
adc
jo
push
lock
ret
iret
out
stos
pop
push
stos
std
mov
out
adc
cmp
adc
push
clc
shlb
jge
sbb
cmp
sbb
clc
fisubrl
shrl
xchg
adc
cmp
inc
cwtl
testb
or
mov
shlb
bound
dec
and
jge
sarb
push
sbb
xchg
mov
dec
mov
nop
sarb
aam
or
shll
sub
adc
lods
xorb
pop
test
sbb
push
rol
or
enter
orl
mov
or
dec
mov
pop
imul
rcll
xchg
test
adc
cwtl
ficomps
sbb
lods
mov
jns
rorl
and
inc
or
daa
or
xchg
lea
lret
adc
outsl
hlt
lret
test
jo
sbb
adc
mov
jo
or
ret
inc
fs
pop
add
xor
xchg
dec
mov
movb
pop
cmpsl
sub
and
leave
mov
rcr
cmp
mov
fbstp
call
inc
push
ljmp
adc
daa
lods
push
out
jp
adc
stos
mov
mov
sub
or
fs
pop
out
pavgb
and
test
fildll
punpckhdq
cmp
dec
insb
cmc
mov
inc
ffree
dec
dec
cwtl
shlb
and
xchg
cmpsb
sub
das
push
push
xor
gs
jbe
imul
adc
fdivl
clc
pop
sbb
push
sub
loop
sbb
ret
fs
xlat
add
and
inc
or
pushf
cwtl
iret
test
or
testb
bound
in
je
push
or
cmpsl
xchg
sub
hlt
inc
pop
jecxz
push
es
mov
and
push
mov
popa
sub
enter
loopne
inc
add
mov
rcl
xor
xchg
aam
add
mov
jecxz
add
outsb
push
insl
xchg
and
add
add
aas
cmpsl
jmp
or
lret
xor
cli
or
xor
cmp
mov
or
movsb
xor
pop
inc
cmpsl
push
cmp
dec
insl
sub
mov
mov
mov
or
addl
xchg
adc
lret
or
xor
lret
shrb
gs
dec
nop
adcb
sbb
jp
fcomip
jae
mov
rcr
bound
and
inc
popa
xor
mov
add
shrb
mov
je
cmp
sub
je
mov
in
jno
pop
jecxz
stos
jne
and
inc
cmp
daa
and
cmc
js
lods
xlat
inc
pop
xchg
js
insb
dec
push
mov
test
mov
js
push
jae
testb
dec
push
rorb
fs
lods
push
adc
mov
enter
insb
push
pushf
mov
movsb
pop
xor
or
clc
ret
ret
add
xor
add
add
inc
xor
push
sahf
push
sbb
insl
sbb
sub
cli
inc
pop
mov
mov
mov
inc
lea
or
adc
mov
xor
ljmp
adc
ret
mov
cwtl
adcl
mov
mov
pop
test
dec
hlt
es
or
push
add
inc
or
ret
sub
cmp
mov
and
cltd
cld
pusha
push
fsubrl
or
pop
jge
mov
int
jno
mov
pop
pop
cmp
xorb
jo
or
lock
pop
dec
lret
and
push
push
outsl
inc
add
cmp
add
repz
inc
and
lcall
adc
mov
arpl
push
push
add
test
or
movl
aam
adc
mov
cmpb
xchg
add
xor
and
rol
ret
sbb
mov
enter
push
aam
dec
add
dec
inc
lods
or
adc
xchg
pop
and
loopne
iret
mov
loopne
add
outsl
inc
mov
fmull
mov
fdivs
adc
mov
xchg
pop
loopne
insb
test
out
sbb
ss
jno
shlb
insb
loopne
mov
shl
les
or
leave
in
adc
test
les
jmp
xlat
and
mov
mov
mov
shrb
daa
popa
jbe
xchg
push
xchg
or
testl
sbb
adc
ret
jbe
push
ljmp
and
mov
arpl
or
pop
xorl
orl
mov
sbb
pop
ret
cmp
pop
push
and
or
ljmp
jg
push
xchg
cmp
cwtl
stos
jnp
aaa
mov
sahf
sbb
addb
sbb
push
dec
aaa
rorb
mov
orl
or
faddl
leave
mov
push
pusha
in
iret
push
loope
and
imull
lods
sub
push
rclb
cmp
adc
adc
sti
enter
push
inc
pop
add
inc
mov
mov
scas
or
and
ret
lret
dec
pop
sahf
nop
push
es
mov
or
pop
test
adc
push
lret
pop
mov
aam
pop
test
inc
add
mov
gs
stos
pusha
cli
sbb
popa
push
push
add
add
push
nop
ficoms
mov
int
shll
rclb
push
sub
mov
jne
aad
inc
add
sub
les
xor
cmpsb
pop
rolb
lahf
mov
or
lret
pop
enter
mov
std
nop
pop
or
mov
jle
inc
popa
xor
hlt
xor
roll
mov
or
imul
push
cltd
cmp
ret
loope
sbb
xchg
out
sbb
rorb
mov
adc
mov
jp
push
add
push
mov
cmpsb
or
pop
js
pop
dec
push
daa
add
icebp
lods
das
dec
add
xor
adc
enter
sarb
cmp
push
movsl
rcrb
mov
xchg
xchg
push
sub
mov
lret
shlb
js
in
inc
push
jge
sbb
sbb
adc
pop
outsb
fldt
pop
mov
insb
shlb
mov
orl
or
into
sbb
lea
dec
and
jmp
mov
or
sbb
test
add
xor
orl
mov
xor
cs
adc
push
movb
push
push
les
mov
leave
add
xchg
and
pop
add
push
dec
loope
ret
lret
mov
push
or
dec
sub
xor
jne
push
push
pop
inc
movsb
xchg
pop
xchg
sarb
andl
scas
test
inc
adc
add
cmp
cmp
adc
dec
or
nop
loop
jp
in
imul
enter
pushf
out
or
mov
or
push
add
xchg
inc
fs
xchg
loopne
push
pop
inc
sub
sub
mov
loop
cmp
adc
pop
mov
add
loope
mov
and
xor
adc
mov
mov
rclb
xchg
aaa
aad
or
les
int
insb
or
es
add
and
rcrb
or
movaps
jl
xor
mov
cmp
addl
dec
ret
xchg
lret
sbb
xchg
sub
scas
outsb
aas
cmc
xchg
mov
sbb
cltd
rclb
scas
push
or
orl
lahf
rorb
or
and
cmp
pop
hlt
add
adc
mov
jmp
xor
mov
fst
rcr
xor
and
cmp
pop
adc
xchg
mov
jmp
loop
sub
mov
inc
dec
add
out
push
pop
pop
inc
sub
leave
or
or
rcr
pop
cmp
jmp
push
sub
pop
ljmp
push
sbb
or
enter
aam
xor
add
inc
xchg
cli
xor
mov
or
aam
sub
lock
leave
mov
and
repz
orb
pop
xor
movsl
enter
jb
jb
inc
cmp
fs
push
repnz
clc
or
mov
ljmp
xor
or
mov
leave
mov
push
cmp
add
lret
icebp
aam
or
lods
push
stos
packssdw
add
cmp
xchg
flds
mov
cmp
dec
and
jns
stc
pop
adc
sub
daa
adc
push
sti
icebp
inc
xchg
pop
test
dec
sbb
mov
sbb
loop
xor
jp
xor
faddl
pop
xor
mov
dec
add
and
cs
test
nop
jmp
rorb
add
adc
ret
test
pop
int3
pop
sbbl
sbb
xchg
movups
lcall
add
ficoms
js
xchg
das
pop
pop
call
cli
add
or
loope
jo
fs
in
repz
mov
movsl
sbbl
or
sub
orb
mov
inc
sbb
in
and
jp
adc
xor
nop
pop
and
and
fadds
dec
cmp
ss
adc
inc
inc
roll
test
icebp
out
cmp
cwtl
xor
nop
iret
dec
push
xlat
movsl
popa
inc
pop
jl
aaa
es
movsl
or
xor
lock
push
pop
push
sbb
fs
aam
inc
push
aaa
adc
imul
mov
and
mov
xorl
dec
mov
push
loopne
lods
pop
divl
loopne
jnp
and
push
pop
or
aam
mov
lcall
inc
loop
adc
push
fadds
into
add
pop
adc
sbb
ret
adc
jo
or
pop
xor
inc
stos
adc
cwtl
clc
jo
adc
rorb
enter
popa
or
mov
into
sub
dec
or
jo
in
les
inc
ret
mov
sub
sbbl
and
pusha
inc
repnz
or
mov
xchg
fs
xor
inc
ret
test
andb
sbb
loop
push
mov
dec
adc
insb
jo
ror
test
inc
adc
adc
adc
xchg
sbb
sbb
rcll
jne
sbb
or
xchg
aam
or
shrb
hlt
test
or
in
or
and
inc
and
jp
fwait
sbb
test
push
mov
pusha
and
pop
push
xor
sbb
scas
sub
ss
and
sbb
ljmp
xchg
daa
loope
daa
xchg
ret
mov
or
or
mov
shlb
pusha
int3
adc
test
mov
or
jp
popa
push
rclb
xchg
jge
xor
push
push
push
sbb
pop
mov
dec
sbb
xor
fadds
inc
jle
push
das
push
push
outsl
mov
movb
adcl
pop
lods
test
xor
ja
popa
and
mov
adcl
mov
ljmp
cmpsb
orb
xorb
add
or
mov
xchg
arpl
inc
push
sub
lahf
jp
rclb
mov
push
push
cmpb
adc
lcall
out
faddl
push
test
sbb
faddl
push
je
popf
movsl
push
xchg
or
jb
movsl
xchg
mov
mov
lods
and
ret
xchg
and
sbb
pop
adc
dec
and
push
push
xchg
sbb
push
sub
das
sbb
shrb
mov
sub
lret
scas
add
fisubrl
shl
inc
repnz
rorb
cld
sbb
jle
dec
addr16
or
std
sub
xor
or
hlt
mov
sub
jb
test
xchg
scas
rcrl
add
or
add
icebp
addr16
push
push
das
adcl
add
sbb
mov
add
lret
scas
add
push
sub
imul
ja
jo
loop
aad
push
frstor
roll
cmp
mov
jle
pop
cmpb
jno
enter
orb
add
nop
iret
in
mov
shrl
ret
mov
jp
icebp
or
sbb
push
sbb
push
loopne
loop
jg
clc
mov
hlt
fmuls
cmpsl
and
mov
mov
shr
call
loopne
es
stc
mov
fists
scas
popa
or
loop
push
dec
inc
bound
mov
jo
aad
push
dec
sbb
adc
xchg
cmp
cmp
adc
inc
push
out
and
xchg
cmp
cmp
push
xchg
lods
mov
adcb
dec
sbb
hlt
clc
or
xor
icebp
stos
or
adc
pop
sbb
sbb
sbb
sbb
ds
push
push
mov
test
dec
sbb
xor
cmp
je
enter
in
adc
rclb
xchg
cmp
adc
jo
stos
add
and
dec
and
dec
xor
xorl
loope
adc
adc
or
fs
mov
adc
rcrb
or
pusha
sbb
fsubr
jmp
or
ret
aad
lods
fwait
push
ljmp
jg
je
je
int
sub
insb
or
push
jo
or
push
das
sbb
cmpsl
mov
adc
and
and
into
and
ja
adc
adcl
xchg
lods
or
icebp
sub
or
dec
rolb
rorb
cld
xchg
push
mov
cwtl
out
lret
xchg
fisttpll
leave
leave
sahf
in
mov
push
aas
cmpsl
loope
je
cmp
or
lea
int3
leave
mov
sub
mov
jg
dec
push
or
insb
fwait
nop
cmp
cwtl
mov
push
iret
pop
push
xchg
add
daa
roll
jno
aad
cwtl
add
adc
test
dec
sub
xchg
adc
ficompl
push
cltd
lds
jb
jmp
addr16
and
add
pop
jp
jb
jmp
and
roll
push
clc
and
mov
mov
je
lret
mov
cmp
adc
mov
scas
pusha
loop
pusha
js
push
and
in
push
lds
enter
sbb
adc
push
mov
xchg
rcrl
out
test
or
nop
and
je
lret
lock
push
pusha
rolb
xchg
or
pop
add
popa
sbb
sub
cmp
stos
xchg
mov
add
pop
or
ret
out
mov
jmp
sbb
push
outsl
add
lock
xchg
pop
sahf
daa
jno
sbb
pop
push
add
bound
sbb
out
add
leave
mov
cli
enter
clc
mov
sub
xor
jno
add
and
jno
lret
sbb
or
adc
mov
and
or
mov
add
dec
push
lods
inc
aad
call
lret
or
mov
ret
add
or
xor
add
push
sbb
jmp
enter
lret
shr
or
sub
pop
cwtl
add
js
loopne
pusha
out
sub
cmpl
aam
shll
out
push
jo
push
sahf
mov
mov
xor
or
stc
or
rclb
push
cmpsb
out
sbb
jmp
out
mov
shll
mov
or
mov
xchg
sbb
in
ja
or
aam
mov
loop
mov
jp
mov
fwait
jmp
inc
inc
sbb
fsts
mov
je
pusha
ds
jge
xchg
mov
shlb
add
xchg
das
call
pop
loop
push
aam
sub
mov
xchg
insl
jge
cmp
cltd
inc
rcrl
push
into
adc
or
cmp
jmp
in
loop
or
xor
int3
inc
mov
push
dec
mov
test
lods
sbb
adc
xchg
inc
ret
sbb
jno
mov
xchg
int3
sahf
push
or
out
xor
movsb
jns
add
mov
out
pusha
call
sub
idivl
dec
loopne
pop
mov
sbb
xchg
shrl
xchg
cmp
dec
push
fwait
jb
mov
add
gs
loopne
leave
dec
pusha
mov
xchg
mov
push
sbb
shrb
jb
cld
dec
inc
mov
dec
xchg
adc
mov
pop
aam
lcall
or
xchg
pop
nop
pop
pop
dec
loope
xchg
or
js
inc
sbb
adc
pop
push
xchg
aam
les
imul
fldpi
push
cmp
sbb
cltd
sarb
pusha
or
push
or
mov
push
test
or
add
jno
mov
mov
or
sbb
cwtl
fs
data16
call
shrb
rorb
inc
inc
jl
xchg
xor
mov
ret
jno
push
cmpsl
xchg
inc
and
add
out
or
xorb
and
out
push
es
loop
cmpsb
je
lock
ret
in
pop
fsubr
pop
sub
popf
sbb
mov
or
sbbb
sbb
mov
and
inc
sub
pusha
mov
ror
xchg
ljmp
cld
push
add
aad
adc
dec
popa
and
dec
dec
and
icebp
mov
mov
push
icebp
inc
adc
cmp
mov
outsb
popf
inc
push
icebp
pop
pop
mov
call
and
mov
nop
cwtl
cmp
dec
fimull
or
xor
call
jg
fistpll
ror
push
mov
adc
or
sub
andb
sub
push
loop
lret
dec
cltd
movb
push
arpl
lods
sbb
js
inc
js
nop
loopne
pop
rcrl
fisubl
nop
xor
popa
lods
test
cmp
ja
nop
add
loopne
push
jmp
add
imul
add
sbb
outsb
rorb
loopne
dec
sbb
sub
and
lcall
mov
sahf
push
inc
pop
adc
push
pop
repnz
adc
loopne
mov
and
dec
or
jnp
xor
aam
or
push
xor
or
mov
push
outsl
add
inc
pop
sub
loop
mov
push
cmc
sub
call
dec
mov
lods
xchg
into
mov
lock
mov
lea
lock
and
sbbb
xchg
lds
adc
cmp
cmp
insb
cmp
add
dec
imul
mov
lcall
pusha
out
out
rcrb
jp
jecxz
mov
inc
in
dec
ficomps
sbbb
xchg
mov
xchg
test
pop
sbb
cmpsl
hlt
or
mov
repnz
cmp
mov
jle
xor
push
push
dec
js
mov
cmpsb
mov
adc
je
ss
sub
dec
sub
into
jb
xchg
and
ds
jo
and
pop
test
mov
pop
dec
inc
or
push
mov
hlt
shrb
or
xchg
push
add
push
lds
jo
dec
or
loopne
lea
sbb
repz
test
out
xor
pusha
loop
mov
add
adc
xchg
je
leave
enter
mov
repnz
sbb
pop
jbe
in
inc
movsb
push
dec
jmp
js
lds
daa
invd
push
lret
adc
cmp
xlat
es
call
mov
loopne
fxch
jmp
dec
jns
or
cmp
push
mov
sub
ret
pop
mov
ss
icebp
cld
les
and
xor
daa
movb
and
stos
pop
sbb
inc
loopne
push
sub
movsb
pop
rorb
fdiv
mov
jecxz
cmp
dec
movsl
ret
jno
ret
nop
dec
mov
and
mov
push
sahf
cmpsb
dec
xorb
popf
pop
push
xchg
add
sbb
insb
inc
sbb
mov
loope
ret
ret
xchg
jb
out
push
or
jmp
cli
rorb
xchg
xchg
repnz
push
test
adc
pusha
js
dec
pop
mov
sbb
and
push
lret
pop
call
popa
cmp
pop
or
dec
loop
dec
xchg
call
aam
mov
popf
imul
jbe
jno
orb
pslld
xor
test
enter
cmp
xor
orl
loop
outsl
bound
xchg
repnz
ret
xor
sti
adc
mov
pop
inc
add
fs
adc
pop
add
push
push
add
out
inc
push
stc
add
or
and
movsl
or
or
dec
push
aaa
push
jle
or
rclb
arpl
mov
test
sahf
push
push
inc
mov
out
xchg
or
dec
jb
mov
das
ret
jmp
sbb
mov
mov
add
lret
xchg
and
cmp
inc
sbb
je
push
pop
inc
ljmp
rcrb
jecxz
popf
in
inc
mov
test
dec
repnz
add
pop
js
adc
arpl
lahf
sub
push
shr
push
cmp
add
mov
sbb
mov
notl
jb
dec
xor
test
jne
add
and
jno
xchg
push
xchg
cmpb
jp
mov
xchg
and
and
mov
push
andb
into
aam
cmp
repnz
cmp
push
pop
add
mov
into
push
loope
sbb
pop
out
mov
and
sarl
add
jbe
push
test
ds
cmp
add
xor
pop
dec
inc
pop
lods
mov
xchg
mov
mov
pop
rcrb
inc
inc
popa
insb
or
fwait
ret
dec
sti
jo
leave
mov
call
and
dec
cmc
sub
shl
ljmp
add
xchg
adc
push
out
jp
loope
nop
sahf
adc
jecxz
lret
xlat
cmpsb
call
mov
push
test
pop
das
push
push
shrb
inc
adc
movb
xor
lret
pop
into
jae
dec
daa
and
dec
sahf
push
cmp
pop
inc
add
add
sbb
mov
adc
push
daa
ljmp
mov
mov
in
inc
lret
push
mov
and
and
roll
addl
adc
or
ja
bswap
jecxz
sub
or
mov
jmp
sbb
stos
push
push
arpl
test
mov
test
add
or
cmp
out
sbb
mov
push
ret
fnstcw
xor
push
movsl
push
shr
dec
xchg
and
or
cld
cmc
sub
lret
mov
adc
lea
leave
sbb
add
push
ret
or
movb
add
sbb
es
mov
cmc
roll
push
lods
mov
sbb
jmp
xlat
jo
xor
test
mov
sub
sbb
add
loopne
pop
ja
add
js
aam
mov
xchg
mov
push
sub
sbb
ds
mov
dec
jmp
push
pusha
movsb
jmp
cs
or
adc
into
xchg
pop
and
adc
sub
xchg
xor
rorb
sub
mov
push
push
cmp
dec
sbb
daa
xor
cmpsl
pop
sbb
jge
lods
cli
add
adc
xorb
push
push
dec
and
subl
stc
add
add
rorb
sbb
push
sbb
pusha
divb
cld
pop
lods
dec
addl
addr16
push
xchg
adc
sub
fcmovnbe
into
roll
or
js
cmpsl
dec
sub
sti
loopne
cs
xor
mov
xchg
ds
xchg
and
add
lret
fmull
sbb
xchg
icebp
and
dec
mov
push
sbb
push
rcl
call
inc
or
xchg
adc
imul
mov
std
add
inc
lahf
inc
aas
and
and
fcmovbe
push
or
rclb
adc
je
int
enter
test
cli
test
dec
inc
adc
and
mov
cmp
pop
sub
and
sbb
cmp
push
andb
shlb
sub
shr
jno
jmp
imulb
sbb
ret
leave
decb
mov
loope
dec
mov
xor
aad
sbb
push
leave
mov
mov
cmc
xor
test
dec
sub
add
sub
lds
rol
mov
cmp
js
add
movsl
cs
xor
test
pop
movsl
test
and
les
add
or
push
adc
inc
sbb
adc
push
xor
les
and
cmp
daa
mov
popa
and
ror
popa
and
fnstsw
xor
movsb
push
icebp
jo
clc
mov
and
aam
idivl
mov
fsubrs
cli
jl
ss
or
jmp
shlb
andl
out
stc
int3
sarb
pushf
inc
pop
push
pusha
rcrb
jge
sbb
shlb
or
or
cs
idiv
mov
and
lret
lods
fsubrl
adc
or
inc
das
sbb
cmp
ret
dec
mov
sbb
out
sbb
stos
xchg
jo
or
and
je
pop
mov
cmp
xchg
stc
test
push
imul
outsl
add
insb
sti
cmp
lcall
leave
sbb
hlt
pusha
cmp
mov
jb
mov
nop
cmc
mov
mov
mov
fnstcw
or
fucomp
mov
jne
sbb
inc
and
xchg
mov
sahf
xchg
call
cwtl
jp
xchg
or
lret
push
fcomip
push
ja
adc
add
mov
lahf
divl
and
xchg
cmp
mov
or
sbb
pop
and
pushf
lds
push
or
pop
cmpsb
sbb
adc
mov
push
sub
cmp
enter
outsb
xor
rcr
in
lret
stos
or
sbb
push
adc
mov
sahf
push
or
jmp
aam
and
mov
and
push
ss
icebp
push
and
sub
cmp
cltd
ret
or
sub
call
out
mov
sbb
inc
cmpsb
outsl
xchg
lds
push
and
rolb
inc
sub
or
push
insb
stc
add
jle
push
hlt
pusha
xchg
cmp
shlb
mov
fadd
enter
or
test
push
xor
add
hlt
mov
inc
add
sti
add
out
icebp
xor
negb
add
dec
push
add
insb
popa
data16
sbb
dec
imul
sbb
les
pushf
or
add
dec
rolb
cltd
shlb
movsl
adc
xor
add
outsl
mov
test
xchg
daa
movsb
sub
les
lock
sub
add
adc
pop
ja
int3
imul
pop
ljmp
fwait
movsb
in
pusha
add
xor
add
sub
add
sub
addr16
mov
inc
in
lods
stc
push
mov
js
jp
dec
inc
mov
dec
test
das
adc
pop
outsb
mov
pushf
das
or
xchg
jne
pop
xor
lods
and
int3
test
insl
ljmp
dec
call
pop
daa
in
inc
outsb
mov
xchg
add
mov
jo
xor
rolb
in
sbb
or
loop
gs
push
nop
mov
daa
cli
call
aaa
sbb
and
add
lods
out
roll
imulb
or
push
daa
mov
cmpsl
data16
jns
or
mov
sub
and
inc
adc
xchg
mov
adcl
sbb
shlb
aad
orl
inc
mov
hlt
test
orb
pop
add
add
repnz
pop
cmpsb
and
test
adc
pusha
xchg
and
dec
dec
sbb
xor
mov
and
jne
mov
or
aad
ficoms
or
rolb
scas
cwtl
push
push
pop
jo
mov
and
mov
push
pop
lock
mov
jp
and
test
xor
add
flds
inc
outsb
mov
pop
cmp
icebp
jecxz
or
arpl
mov
cltd
xchg
adc
adc
cmp
test
add
jp
xor
pop
xchg
dec
cmp
loop
lret
inc
xchg
xchg
or
aam
test
rorl
loop
test
dec
popa
pop
push
movsl
mov
mov
inc
das
sbb
cmc
or
xchg
data16
pop
adc
cmp
nop
sbb
cmpsb
cld
pop
movb
imul
jae
or
xor
xchg
inc
pavgb
adc
push
loop
loopne
push
ss
aad
jb
and
das
or
sbb
or
jno
mov
loope
push
icebp
mov
and
lock
pop
sbb
jo
je
cmp
loopne
and
ret
outsl
call
add
nop
sbb
js
out
add
cvttps2pi
mov
jp
push
shll
lds
cli
inc
nop
hlt
cli
inc
mov
or
enter
aaa
dec
pop
or
add
mov
inc
movsl
xchg
fwait
insl
adc
and
shrb
inc
enter
js
hlt
or
ffreep
or
sub
sub
xor
lcall
push
sub
adc
xchg
test
pop
test
mulb
insb
or
outsb
movsb
mov
adc
bsf
and
int
push
push
shlb
in
leave
sbb
pop
mov
pop
cmp
xchg
hlt
xor
xor
movsb
pop
idivb
adc
jp
dec
sar
push
jp
sub
xchg
cmpsl
mov
inc
push
jle
and
xor
push
pop
mov
icebp
out
test
mov
mov
enter
adc
mov
sbb
add
or
push
push
and
add
jp
movsb
out
push
das
push
dec
xchg
mov
mov
lret
mov
cmp
sbb
nop
dec
shrb
sbb
lds
leave
lods
lret
mov
and
pop
push
push
daa
push
or
pop
dec
mov
movsb
jp
xchg
cld
push
out
das
push
add
scas
mov
add
stos
dec
fs
xchg
push
sub
add
pop
enter
add
mov
test
jl
in
cmc
push
adc
out
ret
and
push
push
or
or
dec
fcmove
push
iret
fcoms
mov
push
ret
inc
jle
test
adc
xor
mov
loope
push
cmp
into
test
loop
fs
js
inc
mov
addr16
ret
rolb
xor
fidivrs
sub
mov
xchg
adc
and
jo
xor
lret
mov
icebp
lock
cmp
fadd
sbb
cmpsb
mov
sbb
inc
lret
xor
jecxz
adc
jl
mov
xchg
push
sysret
add
add
aam
mov
jo
xor
xor
xchg
lea
or
mov
mov
xchg
test
mov
aam
es
lret
jecxz
fs
fstps
adc
shrb
add
sbb
and
dec
std
out
mov
cwtl
push
shll
cmp
jp
rclb
and
loopne
xchg
pop
dec
mov
hlt
movsb
jne
sbb
jo
jno
dec
jmp
mov
xchg
add
rorl
jno
inc
into
pop
push
xchg
adc
xchg
inc
inc
popa
jno
sbb
sbb
sbbb
jmp
imul
in
ret
test
jmp
cs
and
or
mov
inc
jo
pop
cmp
and
sbb
orb
push
push
push
cmp
das
shll
inc
add
scas
roll
mov
into
inc
dec
je
sub
adc
aad
mov
push
and
pop
js
inc
adc
sub
je
rcrl
movsl
push
adc
cmp
or
ficompl
dec
sbb
sub
xchg
lea
jbe
push
adc
stos
pop
outsl
and
aam
daa
pop
mov
ds
andb
add
movsl
dec
xchg
mov
je
into
es
addr16
add
inc
mov
mov
mov
adc
add
adc
mov
xorl
shl
xchg
rol
push
shlb
bound
out
popa
bound
pop
dec
mov
inc
cmp
dec
jmp
sub
push
jp
test
ret
sub
ss
mov
xchg
test
fcmovu
mov
inc
push
daa
addr16
mov
sbb
jns
xchg
repnz
jno
pushf
and
js
xchg
sbb
mov
mov
add
aam
xorb
sarl
out
and
int
xchg
sbb
dec
xchg
test
jbe
loope
add
lret
add
test
jl
loop
or
addl
outsl
inc
and
lock
sub
xlat
out
mov
sub
pop
shl
lret
or
inc
loopne
lock
je
add
sbb
and
push
cmp
cld
es
pusha
das
dec
clc
sbb
or
inc
sbb
das
mov
and
xchg
test
std
mov
or
loope
xchg
sub
leave
bound
adc
rcrl
clc
adcb
dec
cmp
sbb
pop
and
or
cmp
xor
pop
mov
popa
lods
ja
rorl
add
mov
or
jge
push
inc
mov
push
push
decb
push
sar
or
xchg
or
inc
sbb
cmp
pop
insb
dec
add
sbb
test
adc
xor
adc
insl
ret
sbb
xor
add
rorl
add
orb
aam
and
lods
dec
sub
push
ljmp
clc
inc
pop
in
jne
ljmp
sub
ret
xchg
cwtl
aad
sub
call
mov
xor
clc
xchg
sbb
inc
push
xchg
int3
cs
pop
ret
fs
and
addb
push
add
or
add
or
enter
aam
jmp
mov
ljmp
orb
popf
and
mov
arpl
sub
pop
aas
movsb
sub
mov
das
push
pop
aad
adc
clc
js
push
cltd
and
xor
push
push
pop
mov
repz
fs
pushf
ficoml
add
cltd
push
rol
pop
add
add
cmpsl
sahf
rcrb
out
rorb
xchg
push
xor
nop
je
inc
jge
push
cmc
or
adc
aas
gs
add
pusha
add
cmp
nop
adc
lock
cmp
xor
das
pop
push
sbb
and
lret
add
ret
push
mov
mov
scas
and
loopne
lock
pop
xlat
mov
sbb
or
fs
mov
fsubr
enter
pushf
pushf
pop
push
add
test
and
xor
inc
nop
and
nop
xor
cmp
xor
nop
mov
xchg
and
stc
scas
sbb
orb
add
mov
lcall
fcomps
adc
loop
pusha
pop
or
stos
mov
fsubrl
mov
or
pushf
lcall
inc
add
test
jle
dec
lods
dec
and
and
sbb
enter
pop
sbb
lret
mov
xchg
les
dec
dec
inc
bndldx
push
addr16
push
add
jo
xor
loop
mov
lods
sub
hlt
mov
add
rolb
jb
lcall
mov
imul
xchg
fdivrs
fs
dec
jmp
pop
or
sbb
cmp
push
test
arpl
sbb
clc
cmpsb
add
cltd
testb
test
add
negl
stos
bound
mov
mov
inc
rolb
enter
lret
or
xor
pushf
adc
or
jnp
mov
push
mov
les
dec
dec
shll
arpl
inc
pop
push
mov
xor
mov
cmpsl
in
xor
sub
int3
adc
add
mov
dec
mov
repnz
rolb
jns
in
add
sbb
dec
mov
movsl
orb
push
ret
cmp
pop
pop
sub
dec
das
add
cmpsb
mov
sbb
gs
inc
mov
cmpsl
xchg
outsl
pop
subl
cmp
insb
ret
cmp
mov
adc
jle
insb
mov
xchg
ds
aam
mov
or
or
pop
and
push
push
push
or
jbe
jl
inc
cmp
inc
adc
lock
rcrb
test
dec
outsl
xchg
test
scas
loop
xchg
dec
or
xchg
add
ljmp
loope
mov
js
sbb
inc
into
imul
xor
ret
pop
jo
push
pop
dec
or
sbb
pop
adc
add
mov
xor
andl
push
movsl
rol
gs
lods
inc
adc
adc
xchg
xor
bound
sbb
lret
test
push
dec
dec
xor
sbb
dec
sbb
inc
cmp
sub
ret
jmp
push
sub
or
das
sbb
fmul
ljmp
adc
nop
dec
pop
mov
insb
pusha
in
enter
pop
mov
das
or
jle
add
and
lret
xor
jp
daa
mov
sub
and
or
sbbb
popa
fmul
mov
sub
add
adc
lods
cmpsl
sub
xlat
inc
push
inc
das
cmp
lock
mov
dec
mov
cmp
in
mov
dec
add
xor
xor
inc
sbb
xchg
mov
mov
test
jo
xor
jle
pop
xorl
stos
push
dec
ret
sbb
inc
jp
dec
in
test
add
rclb
loopne
or
sbb
lret
mov
adc
xor
sbb
sub
inc
and
xor
aam
sub
jo
cltd
or
pusha
dec
push
mov
dec
and
insl
loope
in
sarb
and
adc
insb
push
mov
ror
sub
mov
adc
xchg
cmp
cmp
cli
mov
or
or
xor
lret
test
jns
aam
mov
jle
int3
and
push
loopne
push
and
aas
and
test
dec
add
xchg
nop
cld
adc
movb
xchg
addr16
add
jns
clc
push
mov
or
jmp
es
and
mov
xchg
add
push
dec
or
push
hlt
out
add
movsb
sahf
inc
pop
mov
movsb
push
push
adc
das
adc
add
cmpb
mov
mov
test
pop
inc
je
enter
cmpsl
andl
mov
dec
out
sbb
add
pop
mov
inc
shlb
lock
rol
xchg
mov
xchg
fs
cmp
cmp
inc
rorb
cld
mov
and
lds
mov
push
stos
pop
adc
in
rolb
sbbl
pop
mov
cmpb
sar
sbb
adc
xchg
inc
inc
cmp
ds
call
xchg
xor
shrl
loopne
pop
in
clc
rorl
adc
clc
xchg
dec
lret
dec
jmp
lahf
jl
pop
pop
xchg
xchg
mov
mov
cmpsb
mov
jmp
sbb
jp
lods
loopne
fdiv
lret
xor
popa
les
sti
sbbb
jne
push
or
mov
int
stos
mov
add
pop
mov
jge
lds
subb
xchg
mov
loopne
dec
pushf
push
mov
pushf
mov
rcll
sbb
add
jmp
sbb
rolb
add
ret
imul
fcomps
rolb
adc
imul
rcr
mov
arpl
pop
xchg
test
xchg
cmp
loop
nop
jbe
push
pop
dec
ljmp
mov
push
add
idiv
gs
xor
cltd
mov
and
mov
into
rolb
testl
lock
adc
add
inc
jmp
jl
mov
sub
jo
sub
dec
js
and
inc
popa
loope
inc
shlb
cli
nop
adc
mov
ret
jno
js
int3
pop
mov
out
lret
loopne
push
push
das
adc
push
pop
rcrb
rcrl
jge
mov
sub
cld
ss
iret
jmp
scas
fs
sub
xchg
xchg
pop
stc
mov
mov
xchg
dec
sub
sahf
inc
movsb
inc
jmp
xchg
je
lds
cltd
xor
mov
pushf
dec
xor
sbb
jl
add
sub
sub
and
clc
and
daa
jle
filds
sbb
sbb
es
daa
inc
mov
dec
jno
cmp
xorb
mov
xchg
jg
inc
pop
pop
lret
movsl
lock
cmpsb
jge
int
or
xchg
insl
out
rol
lea
cwtl
sbb
fdivrs
ret
adc
cmp
pop
add
xchg
sbb
inc
dec
sub
adc
cld
push
fisubrs
cmpsb
pop
test
gs
fimull
mov
sbb
shlb
int3
ljmp
int
shlb
sbb
push
lds
pop
adc
sbb
and
roll
push
gs
xor
sbb
cmp
adc
xor
push
push
icebp
inc
rol
test
rclb
gs
pusha
sub
rorl
insl
pop
daa
cmovp
push
inc
lcall
add
jecxz
inc
movsl
fcompl
rcrb
jno
loope
mov
add
or
pop
je
jne
mov
ret
push
xacquire
push
pop
or
adc
punpcklwd
ret
insl
sbb
jb
ds
inc
loop
or
dec
sub
xchg
dec
and
test
jae
rorl
pop
enter
inc
add
adc
push
fidivs
lods
pop
dec
or
orb
mov
out
outsl
add
pop
sbb
sbb
ds
jecxz
pop
sbb
mov
dec
push
cmp
add
shrb
or
and
loop
push
or
mov
xorb
aaa
icebp
sar
xor
sbb
jmp
or
adc
mov
push
roll
mov
imul
adc
inc
enter
adc
shrb
push
and
leave
push
dec
add
loope
jnp
in
dec
popf
popa
insb
inc
mov
clc
adc
mov
ljmp
jno
pusha
lock
jge
xchg
xor
sbb
push
add
mov
inc
ret
dec
jo
inc
xchg
xor
pushf
and
dec
mov
test
and
xchg
mov
or
ds
jo
int3
adc
addb
dec
loop
inc
and
nop
dec
pop
lods
in
cmp
insb
jne
imul
lds
call
stc
fsubs
or
lret
xor
and
dec
add
pop
rclb
mov
stos
aam
test
adc
and
mov
into
pop
hlt
and
lret
mov
push
rorl
push
cmpsl
into
fdivs
xchg
mov
xor
add
enter
ret
stos
aad
and
push
pop
ja
dec
sbb
imul
movb
push
cmp
mov
movhps
sbb
inc
xchg
pop
adc
arpl
push
cmp
lods
xchg
es
cmp
mov
test
test
inc
imul
sub
imul
or
add
and
pop
sbb
push
dec
lods
add
xchg
mov
loop
imul
mov
dec
mov
adc
test
pop
dec
mov
cmpb
xor
adc
ret
mov
test
mov
pop
orl
dec
loopne
sbb
mov
lea
rclb
shll
dec
xchg
sarb
rorl
rorl
dec
cmp
jle
and
test
lret
cmp
sbb
lea
push
dec
push
cmp
add
mov
dec
loope
or
les
mov
ret
scas
and
incb
adc
rolb
sbb
push
add
ljmp
ret
imul
mov
add
out
aas
add
adc
rcll
je
clc
adc
ret
mov
and
jns
test
adc
pop
mov
rol
cltd
add
or
adc
sahf
popa
pop
mov
dec
xor
push
js
inc
sbbb
add
add
ror
sbb
rorb
orl
jnp
xchg
ret
mov
mov
sub
pop
movl
mov
adc
and
bound
mov
in
and
and
and
push
add
or
test
adc
jns
cmp
jecxz
mov
adc
cmp
movsb
popa
nop
mov
ret
sarb
mov
sub
dec
inc
mov
mov
lock
ret
xor
gs
scas
bound
push
out
dec
and
addb
stos
inc
push
jl
pop
enter
mov
int
xchg
js
add
aad
pop
push
inc
popf
push
add
xor
rcrl
cmp
add
sub
sbb
push
adc
or
add
mov
gs
mov
sahf
in
iret
add
loopne
mov
addb
adc
icebp
mov
cltd
add
imul
daa
push
add
es
sbb
fs
pop
push
lock
inc
dec
repnz
pop
mov
push
js
nopl
push
or
push
adc
cmp
popa
stos
mov
xor
pusha
call
mov
fucom
shlb
pop
or
adc
fistl
adc
mov
xchg
add
add
fbstp
lods
jns
add
cwtl
or
and
testb
bound
or
es
ss
icebp
push
mov
jl
call
test
push
sub
repz
cmc
inc
and
push
dec
jp
xchg
dec
testb
sbb
add
inc
inc
out
ficoms
push
add
or
or
gs
mov
test
cmpsl
inc
mov
mov
mov
es
push
mov
and
dec
pop
jbe
lret
lret
push
sub
mov
add
mov
movsl
and
xlat
cmpl
ljmp
pusha
dec
addl
and
push
push
dec
rorb
cmp
loopne
scas
mov
filds
add
dec
rcrb
lret
ret
cmpsl
sub
adc
or
push
lock
adc
clc
and
ret
sbb
stos
dec
in
push
sbb
xor
rol
xor
shr
sub
add
ds
cld
push
stos
es
inc
mov
test
push
pop
cmp
xor
pop
sub
loop
inc
and
rcrb
ret
sbb
dec
ffreep
inc
push
dec
push
adc
dec
popf
div
fs
cvtps2pi
mov
cs
arpl
xchg
jne
mov
or
mov
xlat
dec
lock
add
xchg
xchg
addb
mov
loop
cmc
xchg
jne
ret
mov
mov
movsb
push
sub
xchg
adc
leave
int3
and
gs
pop
int3
adc
mov
jl
jbe
adc
dec
movsb
xchg
push
push
add
cmp
daa
insl
sub
ljmp
sub
xchg
adc
mov
rorb
or
test
push
pop
jbe
xchg
sbb
or
dec
cmp
inc
push
dec
rclb
sub
push
nop
sub
ret
mov
inc
and
jg
pop
push
fdivl
ja
or
ror
add
jl
sbb
enter
les
xchg
cmp
mov
sbbl
lcall
enter
fs
dec
sub
loopne
xor
xchg
push
xor
adc
fsubs
add
cmp
mov
cmp
adc
add
adc
xor
push
jecxz
or
sbb
push
outsl
imul
arpl
test
pop
jp
jp
pop
repz
sub
pop
into
and
sub
pop
add
and
sbb
mov
adc
rorb
stos
push
incb
mov
mov
ljmp
pop
pop
mov
inc
sub
or
jae
add
rcrb
das
xchg
and
add
mov
data16
arpl
add
shll
syscall
in
xor
dec
loop
in
mov
cmp
mov
icebp
movsb
sub
loopne
fcmovb
and
xchg
add
xchg
mov
mov
popa
add
addb
jmp
ret
aad
add
jl
adc
push
imul
sti
ss
hlt
add
in
adc
xchg
push
jmp
je
je
adc
mov
fs
ljmp
add
inc
test
dec
xchg
loopne
sar
shlb
add
test
xchg
movsb
fwait
adc
adc
pop
and
sbb
fdivr
dec
fcompl
jp
data16
test
lret
ss
fs
jp
cltd
repnz
xchg
js
scas
rcll
loope
mov
and
inc
mov
mov
mull
add
dec
js
test
sbbl
adc
add
add
and
push
push
inc
lret
add
shll
and
mov
adc
inc
cli
mov
dec
pop
clc
sbb
sub
jno
fisttps
cmp
cs
orl
and
inc
add
je
sub
add
pop
ja
push
xchg
mov
dec
xor
push
cmp
jno
lret
and
lock
lods
aad
xchg
clc
dec
xchg
push
aad
pop
sub
movsb
mov
cmp
pop
push
sbb
aam
je
rcrb
in
mov
icebp
rcrl
test
imul
pop
mov
sub
xorl
xchg
push
inc
shll
mov
add
sub
adc
inc
adc
jmp
test
mov
pop
xchg
cmpsb
scas
xchg
cmp
lods
push
sub
pop
sbb
rclb
dec
scas
ss
ffree
aaa
sub
mov
and
andl
dec
push
fdivrl
adc
or
insb
and
ds
and
shrl
test
enter
mov
mov
jo
xor
je
or
mov
push
add
mov
les
push
cmp
adc
sbb
mov
xchg
cs
push
nop
cld
mov
adc
push
xchg
xchg
cmpsl
add
mov
into
inc
jmp
add
jo
add
lcall
add
and
add
or
int3
push
xchg
repz
or
adc
cmp
loope
inc
lds
daa
dec
dec
rol
and
or
mov
shlb
inc
xchg
loope
data16
roll
inc
test
adc
enter
mov
cmp
push
or
or
shlb
push
jp
push
jmp
fsts
fistpl
or
push
repnz
pushf
inc
arpl
jmp
bound
int3
xchg
inc
dec
inc
pop
pop
or
jae
aaa
xor
inc
push
rclb
dec
imul
rolb
pop
xor
mov
fchs
pop
cmovb
xchg
inc
push
test
nop
gs
mov
cmpl
sub
mov
xor
inc
dec
mov
mov
andb
sbb
leave
lods
sbb
sub
inc
sub
add
out
sbb
enter
test
cs
cwtl
inc
rcr
jno
push
jecxz
gs
shll
push
stos
out
xchg
mov
test
sarb
rcr
sub
push
jp
ret
xor
inc
lea
bound
dec
xor
test
add
push
pop
daa
dec
rcl
ret
out
ret
mov
mov
cmpsb
pop
lret
js
sub
inc
rclb
xchg
jecxz
xchg
lods
dec
push
adc
sbb
dec
push
rcr
or
dec
fadd
push
push
cs
and
adc
adc
ret
je
dec
add
arpl
and
adc
out
sbb
push
sub
push
data16
pop
rcll
loope
xchg
dec
imul
enter
test
mov
loopne
pop
xchg
mov
inc
xor
shr
push
lret
sub
pop
inc
lahf
pop
push
fldcw
jno
js
add
rol
movsl
add
pop
stos
shr
mov
or
sub
cld
dec
imul
sub
faddl
daa
mov
push
mov
push
popa
test
cli
sub
hlt
lds
jmp
daa
xor
lock
mov
fwait
mov
xchg
pop
ss
xor
jmp
mov
ss
or
dec
pop
or
sbb
pop
aad
imul
push
or
adc
sub
adc
nop
push
dec
test
xor
sub
imul
adc
dec
sbb
adc
clc
jnp
sub
inc
mov
imul
sub
out
fimuls
sbb
adcl
pop
dec
loopne
sahf
sbb
adc
xrelease
sbb
sbb
ret
sub
adc
hlt
adc
mov
cld
je
cld
or
sbb
push
insb
in
xor
sbb
jno
mov
gs
sbb
sahf
lock
test
adcb
into
nop
push
dec
sbb
sbb
add
rcll
mov
sbb
push
lcall
loope
xchg
fsubs
test
jo
add
lods
fadds
pop
push
cmp
sbb
das
inc
or
mov
in
sbb
add
clc
add
dec
lahf
and
repnz
fs
jo
push
inc
push
loopne
popa
clc
and
loope
jmp
xorl
jbe
out
js
shlb
imul
repnz
fiadds
xor
lock
jmp
xchg
inc
nop
cmp
subl
mov
cmp
xchg
dec
dec
insl
push
and
andl
cmp
mov
bound
and
frstor
add
xchg
mulb
push
loop
mov
and
je
sahf
or
inc
arpl
jle
cmp
pop
fisubrs
xor
sbb
ds
addl
xchg
sti
in
adc
dec
dec
lret
js
dec
sbb
mov
dec
out
adc
and
push
rclb
and
mov
rolb
xor
xchg
pop
movsb
scas
insb
js
cmp
orl
dec
loop
push
adc
sub
push
jns
popfw
loopne
in
rolb
movsb
mov
mov
ss
fstl
insb
pusha
jge
mov
or
cltd
shrb
fs
pop
cmp
mov
xchg
sbb
mov
mov
dec
shll
cli
push
sub
push
inc
sbb
cmp
mov
call
push
test
test
and
pop
outsl
inc
pop
xlat
mov
sbb
dec
add
inc
lods
insb
or
and
aam
cmp
pusha
add
sbb
jp
jmp
shll
loopne
rcll
add
popa
or
add
les
pop
pop
push
rcr
shlb
mov
mov
nop
push
or
and
into
repz
dec
adc
xchg
sbb
ret
jle
out
fs
rol
adc
or
inc
push
or
loopne
cmc
or
xchg
xchg
cld
test
push
inc
jno
push
dec
push
inc
ret
movaps
sbb
xchg
inc
arpl
bound
rcl
xor
sbb
mov
dec
iret
mov
or
dec
or
push
mov
or
shrb
or
popa
addl
jbe
push
data16
mov
rcrb
mov
xor
and
jge
or
out
je
movsb
out
or
mov
cli
sarl
ds
cmpsb
into
and
or
push
add
cmp
push
jle
les
xchg
sar
rcrb
icebp
mov
add
call
push
jnp
pop
dec
push
fisttpll
popa
imul
bound
cmp
testb
psrad
cmpsb
mov
xchg
push
jmp
push
dec
push
adc
xchg
mov
dec
push
or
test
fld
mov
subb
lock
movl
sbb
test
aam
les
push
outsb
dec
mov
call
fidivl
mov
inc
enter
mov
loop
ljmp
add
fs
sub
xchg
push
sarb
pusha
inc
call
adc
or
xor
lret
inc
inc
xchg
testb
cmp
cmp
ret
fdivl
pop
es
rorb
mov
add
imul
pinsrw
rcrb
push
pop
lds
jae
or
cmp
mov
sbb
lods
test
and
js
in
xchg
imul
outsb
xchg
or
cmpsl
mov
bndstx
mov
and
push
test
iret
mov
loopne
aas
add
mov
lods
dec
rolb
push
sbb
aad
cmp
push
push
inc
cmp
cmp
adc
dec
mov
pop
sbb
dec
sbb
fwait
xchg
call
push
aad
push
xchg
and
mov
test
test
jae
cmp
nop
scas
xor
add
xor
movsl
cmp
pop
add
sbb
xchg
push
mov
sahf
bnd
scas
repnz
or
mov
dec
mov
sub
test
shlb
xor
xchg
arpl
sbb
jecxz
leave
add
lea
psrad
push
fucomip
call
mov
cmpsb
ds
xchg
adc
bound
push
push
pop
adc
daa
ss
mov
test
xchg
loopne
cmp
inc
pop
xor
adc
adc
push
das
sub
ds
stc
sbb
xorl
movsb
xchg
mov
jmp
daa
pushf
xchg
and
adc
or
inc
ljmp
es
push
pop
mov
mov
dec
fmull
hlt
jl
push
mov
xchg
lods
lret
mov
test
mov
les
adc
adc
sbb
arpl
sub
add
jmp
push
cmp
in
push
add
pushf
push
add
and
inc
push
out
sbb
pop
stos
sbb
cmc
mov
jle
and
ret
jle
mov
add
and
push
bound
pop
xor
sub
and
rcrb
out
mov
pushf
push
inc
pusha
mov
pop
and
adc
sub
sub
or
inc
ret
mov
push
lret
push
fdivrs
add
add
pushf
insl
lea
sti
test
add
outsb
add
and
push
and
adc
mov
movsb
or
iret
or
cld
add
pop
jle
adc
in
pusha
jmp
andb
adc
cmp
in
fdivs
jle
dec
mov
inc
or
ret
jmp
sub
or
xor
imul
jae
or
or
mov
xchg
dec
cli
in
mov
pushf
int
xor
mov
inc
add
xor
enter
push
gs
jbe
push
jnp
or
pusha
push
pop
pop
jo
test
inc
ds
jecxz
addl
sbb
sahf
test
fcompl
prefetcht0
pusha
sbb
popa
leave
mov
popa
sub
movsb
xchg
push
ret
adcb
mov
imul
inc
jecxz
loopne
leave
icebp
lods
dec
lods
test
jge
or
inc
enter
dec
gs
xchg
pop
pop
sbb
ds
stos
sub
or
mov
push
push
rorl
mov
or
pusha
ss
push
xchg
sub
mov
lret
or
movsb
inc
stos
lea
dec
sub
cmp
lock
mov
cmpsl
jno
out
pushf
xchg
fidivs
sbb
cmp
mov
add
xchg
cs
jb
lods
inc
or
out
adc
loopne
scas
outsb
lea
xchg
popa
movsb
repz
test
and
add
dec
push
std
out
jbe
xor
jecxz
mov
out
sbb
int3
loop
xchg
pusha
jmp
call
lods
add
nop
inc
push
push
push
xchg
enter
inc
pop
xchg
cmp
push
mov
pop
sbbb
dec
rol
xchg
and
or
imul
jnp
xchg
jno
jmp
or
xchg
repnz
and
sub
test
pop
push
mov
lods
mov
jmp
add
cmpsb
push
or
jnp
idiv
pop
pop
aad
sub
push
mov
les
les
fsub
insb
pusha
pusha
fsubp
not
jecxz
daa
pop
jo
and
mov
mov
daa
pop
rol
mov
or
test
mov
fisubrl
xchg
je
inc
pop
mov
mov
popf
add
pop
jb
sub
out
push
or
or
and
add
mov
add
test
jecxz
xor
cmpsl
leave
cmc
mov
push
das
arpl
dec
test
sub
cvtps2pi
or
cmpsb
and
dec
jo
xchg
movsl
and
add
call
rorb
add
xor
xor
ds
add
pop
add
pusha
stos
je
aad
ljmp
shll
loopne
insb
jbe
sbb
arpl
mov
push
pop
xor
push
and
jmp
repnz
sbb
or
push
rorl
or
sbbl
jnp
cltd
movsl
pop
lock
cmpsl
pop
push
push
pop
rolb
push
sub
pop
cmc
int
xchg
adc
mov
ficoms
aas
sbb
aaa
pop
dec
lods
or
stos
sahf
inc
dec
pop
icebp
ss
lods
lret
inc
push
xor
adc
lret
dec
cmp
int
inc
add
je
popa
sub
jmp
push
cmp
cs
sbb
jge
movq
add
inc
add
xchg
cmpsl
into
repnz
inc
adc
pop
and
pop
xchg
dec
es
test
xor
mov
xchg
fstps
aam
push
or
fsts
dec
cli
xchg
cltd
test
and
xchg
add
sub
push
imulb
jmp
sub
aam
pop
add
scas
push
pop
faddl
push
in
loopne
imul
outsb
inc
push
lock
mov
test
adc
pushf
ficoml
pop
cmpsl
pop
mov
add
add
js
add
dec
cmp
mov
shrl
dec
adc
add
xchg
insl
jbe
or
xchg
sbb
mov
js
xchg
xchg
test
push
pop
push
adc
pop
sub
xor
sbb
outsb
enter
clc
mov
sub
sbb
cwtl
test
jbe
dec
adc
xor
in
mov
xor
mov
aam
add
push
rorb
ret
pop
mov
jl
mov
pop
movsb
mov
add
xchg
push
mov
jge
daa
or
bound
cwtl
stos
dec
pop
mov
push
pop
jp
shll
arpl
mov
dec
rcll
cmp
jmp
pop
cmp
dec
adc
adc
js,pn
cmp
pop
mov
orb
dec
or
shlb
rorl
add
mov
inc
adc
out
or
pop
add
roll
adcb
dec
data16
mov
lods
inc
test
pop
xchg
mov
xor
xor
push
dec
or
movsl
add
paddq
adc
jno
mov
inc
movlps
ss
mov
adc
out
add
movsb
call
es
icebp
push
push
sbb
add
jno
cli
rorl
test
push
shlb
sub
repnz
or
aam
test
cmp
jb
jl
or
xchg
cmp
xor
mov
adc
es
push
cmpsl
xor
push
sbb
push
mov
xor
push
aam
arpl
push
sub
jnp
jnp
cmpsb
cmp
rclb
cmp
movsb
jb
sbb
pop
add
sbb
pop
add
xchg
cmp
shlb
add
pop
push
sbb
inc
mov
vpbroadcastw
in
add
jo
sbb
pop
sbb
ficoml
fnstenv
lret
push
movb
nop
xor
js
and
or
insb
imul
xorb
sbb
lock
push
xchg
adcb
lds
mull
cmp
mov
orl
sbb
daa
jno
ds
push
add
ljmp
rolb
sbb
xchg
in
jg
inc
add
xor
repnz
or
out
sub
xchg
sub
inc
jne
adc
lret
cmp
loopne
and
cmp
jbe
xor
int
pop
dec
pop
xchg
mov
dec
fildll
and
inc
stc
sbb
jl
outsl
dec
and
cmpsl
mov
adc
or
push
ds
in
xor
xor
stc
adc
mov
stos
lea
inc
jne
jl
adc
mov
push
and
add
icebp
inc
add
insb
inc
fbld
add
hlt
or
dec
or
add
js
icebp
xchg
jp
rclb
jle
add
jmp
mov
sbb
mov
push
aam
dec
cmp
lea
aam
cmc
ret
add
pop
and
hlt
xor
adc
xchg
jo
inc
add
push
ret
pop
repz
ret
imul
rcrb
push
into
xor
cmp
lock
push
lea
insl
rclb
sbbl
and
add
addr16
mov
inc
nop
sub
mov
repnz
pop
adc
mov
sahf
pop
xchg
loop
rolb
repnz
inc
les
inc
std
call
clc
add
nop
dec
testb
mov
sub
mov
xchg
orb
jmp
mov
cli
mov
xchg
sbb
push
push
xor
loopne
test
sbb
sub
hlt
xchg
cmp
fsubrl
pop
push
inc
jmp
inc
jp
adc
add
and
push
pop
popl
pop
lds
subl
loope
push
nop
adc
ljmp
inc
imul
push
sbb
and
push
xchg
xor
fdivrl
test
xor
es
add
sar
lods
xchg
sbb
outsl
push
pushw
bound
mov
sbbb
or
xor
add
lock
inc
mov
dec
sub
mov
shll
add
aas
lea
into
adc
xchg
lcall
xor
insl
mov
or
cmp
jg
dec
jl
push
push
xor
sbb
cmp
ss
popa
call
imulb
addr16
ret
jno
dec
xchg
mov
flds
jo
negl
xchg
inc
in
jo
xorl
sbbl
jno
or
hlt
cmp
mov
or
prefetcht1
or
mov
fdivr
mov
push
ljmp
inc
daa
add
jp
nop
inc
dec
adc
mov
sub
sbb
or
pop
clc
lea
jp
es
mov
and
xor
mov
ja
xchg
push
add
pop
push
rcrl
lock
add
jmp
adc
iret
dec
rcrl
stc
cmc
adc
ret
xchg
leave
and
or
mov
xchg
in
dec
xchg
ret
rorl
adc
arpl
jge
sbb
pushf
iret
test
push
pop
sbb
dec
mov
outsl
cmp
adc
adc
sbb
mov
sub
aad
cld
adc
cli
gs
mov
mov
fldl
sub
pop
and
and
pop
test
bound
push
sub
jecxz
xchg
test
pop
push
ret
jno
jo
ror
xchg
add
lret
or
jl
into
leave
mov
test
mov
jo
xor
mov
mov
insb
sahf
inc
pushf
dec
inc
iret
lret
adc
sub
sub
adc
loope
jmp
sub
and
push
int3
cwtl
cli
add
add
push
xchg
mov
js
scas
fnsave
fiadds
sbb
iret
or
or
and
or
pop
dec
mov
sub
ret
sub
test
sbb
adc
mov
mov
xlat
jmp
cmp
pop
sub
out
add
dec
cmp
jo
push
lret
aaa
lods
dec
dec
push
inc
cli
push
mov
insl
add
mov
imul
test
push
daa
push
das
dec
pop
rol
xor
push
push
adc
mov
mov
push
adc
add
nop
push
ficoms
or
push
adc
mov
or
xchg
inc
pop
sbb
mov
sbb
testb
iret
test
mov
rcrl
jecxz
das
call
scas
pop
or
mov
loopne
mov
addr16
aam
sbb
leave
adc
shrb
dec
pop
adc
inc
mov
into
mov
push
and
add
sub
push
cmpsb
dec
into
ds
add
lcall
inc
jge
lea
loopne
dec
dec
sub
pop
pop
ret
xor
mov
add
ficoml
push
les
pop
ret
inc
rcrb
pop
xchg
imulb
aaa
xor
pusha
add
mov
lret
mov
inc
repnz
cmp
pop
icebp
cli
rorb
sbb
jmp
mov
xchg
cwtl
mov
lock
psllw
mov
fs
or
or
mov
decb
and
push
ljmp
mov
mov
push
or
shr
add
or
adc
cs
adcl
call
jno
decl
js
push
iret
lcall
outsb
adc
adcb
cld
jbe
jno
jl
pop
push
add
mov
shlb
mov
inc
xor
std
push
cmp
and
movsb
notb
test
sub
push
jbe
inc
push
push
sbb
inc
mov
dec
aam
or
popf
mov
lods
add
push
jmp
or
inc
push
bound
and
adc
filds
mov
call
repnz
lock
sbbb
add
imul
in
cmp
pusha
xchg
and
inc
sbb
pop
shrb
push
mov
lret
rolb
add
std
or
sub
or
sbb
add
sbb
push
addl
lock
imul
pusha
or
dec
mov
pop
fisttpll
mov
arpl
add
dec
sbb
adc
dec
inc
push
sbb
push
push
sbbl
ja
pop
mov
arpl
out
mov
cwtl
movsb
adc
push
mov
add
aad
or
arpl
pusha
pop
mov
rclb
shl
or
xchg
movsl
xlat
mov
loopne
sbb
add
sbb
scas
mov
andb
sub
mov
je
sub
xor
dec
or
loope
inc
dec
push
push
pop
ret
arpl
add
push
enter
stc
movsl
mov
inc
add
add
xor
pusha
xor
pop
pop
js
dec
jno
jmp
add
lock
lods
ret
mov
adc
dec
pop
dec
sbbb
shrb
into
push
mov
and
icebp
in
jle
test
push
or
fxch
adc
add
push
lods
jp
rcrb
daa
test
dec
push
mov
xchg
dec
push
rolb
nop
lea
xchg
les
dec
popf
lock
add
and
push
bound
ss
xor
or
call
sbb
arpl
cmpsb
shlb
mov
add
or
adc
add
mov
cltd
clc
ss
mov
jmp
push
inc
mov
inc
mov
sub
xchg
xor
and
sar
add
pop
shrl
stos
pop
pop
ret
cmpsl
push
push
dec
mov
sbb
cmp
pop
push
rcrb
enter
jo
cmp
and
out
sbb
push
add
jo
or
add
jae
lock
dec
cmp
lret
pop
mov
aad
das
rorb
into
add
ss
adc
adc
dec
imul
mov
push
ljmp
iret
testb
pop
inc
and
stc
add
pop
orl
jp
and
test
fldl
push
out
adc
sub
js
loope
add
cmc
or
ror
xchg
sub
fdivs
push
les
push
rol
mov
inc
rcrb
sbb
std
mov
or
js
jecxz
ficomps
sub
push
mov
adc
les
cwtl
xorl
in
or
xorl
mov
arpl
sbb
sub
loopne
roll
pop
or
test
or
add
lret
sbb
jl
test
pushf
data16
or
inc
call
mov
sub
lahf
rorb
fcmovb
mov
sbb
pop
test
sub
je
pop
or
rclb
or
sub
or
jne
lock
movsl
outsb
sbb
sbb
adc
adc
inc
pop
into
imul
rolb
jl
pusha
lods
pop
xor
ret
adc
push
cli
sub
jo
xchg
jecxz
and
outsb
pushf
fldcw
or
pop
pop
inc
in
push
push
xchg
push
ljmp
pop
cmp
into
inc
push
pop
or
nop
dec
pop
push
fidivrl
add
test
mov
sbb
or
xor
push
inc
popf
jo
jmp
cmc
fisubl
jo
pop
daa
addr16
cmp
sbb
push
jne
and
add
adc
clc
xchg
ljmp
scas
out
xor
lret
pop
adc
push
push
data16
sub
sub
mov
jns
mov
std
arpl
or
test
or
push
pop
or
inc
xchg
jae
js
inc
sub
dec
loope
js
adc
leavew
inc
nop
inc
sub
popf
sbb
sbb
loopne
add
lods
inc
sub
xchg
sub
pop
lret
push
call
test
mov
adc
pop
pop
sub
rcrb
es
lcall
xchg
and
ljmp
and
pop
cmp
adc
je
loopne
sub
cmc
sbb
add
scas
int3
and
rclb
jmp
cmp
rorb
je
sbb
sbb
mov
enter
add
imul
add
xor
xor
xorb
je
popa
popa
pop
ja
dec
add
out
add
outsb
call
or
xor
adcb
push
add
cmc
lods
pop
xorl
or
push
push
inc
dec
pop
adc
movsl
insb
sbb
xchg
ret
leave
add
shl
xor
in
das
xor
call
pop
iret
sub
cmp
and
cmp
pop
pop
or
mov
jns,pn
jb
in
push
xlat
cmpb
push
lods
adc
adc
hlt
pop
les
mov
sbb
add
movsb
or
xor
loope
rorl
cmc
or
cli
roll
mov
or
add
out
mov
nop
or
adc
gs
cld
adc
lcall
mov
pop
inc
arpl
iret
mov
adc
cmp
cltd
test
je
adc
mov
iret
or
adc
cltd
xorb
and
sbb
cmp
add
mov
push
or
dec
sbb
xchg
and
jp
test
ret
clc
es
add
lea
lds
or
lock
mov
lret
test
scas
pop
pop
sub
pop
movlps
mov
push
jae
or
jno
in
mov
hlt
pop
loopne
je
daa
sbb
movb
add
push
dec
mov
sbb
hlt
adc
test
les
inc
pop
jb
sub
in
sbb
jmp
sub
adc
cmp
cmpsb
gs
jo
cmp
mov
mov
push
and
pop
xchg
mov
mov
adcl
add
test
test
or
idivb
or
and
cs
sub
mov
jno
push
call
ds
or
xlat
ret
pop
mov
nop
icebp
ret
push
ret
mov
hlt
sub
sbb
adc
sub
ror
inc
mov
xor
ja
inc
movsb
add
cwtl
ret
pop
mov
and
out
pop
pop
mov
mov
push
xor
adc
test
xor
xor
sbb
popf
cmc
inc
pop
sbb
pop
movsl
lock
movb
std
cli
lahf
rcrb
fimuls
mov
pop
mov
or
int
or
push
inc
xor
gs
lods
push
jmp
cmp
pop
fidivrs
push
dec
sbb
popf
or
dec
add
and
or
adc
outsb
imul
xchg
xchg
add
rcll
ret
mov
les
addb
mov
xchg
cmp
sub
int3
lret
ljmp
insl
mov
mov
and
int
ficoms
inc
sbb
sub
outsb
cs
add
lods
sbb
adc
bound
and
and
test
dec
xchg
cmpsl
mov
fdivrl
xchg
push
mov
les
pop
nop
adc
xor
add
dec
js
push
add
pop
mov
mov
lret
shrl
loopne
jns
xlat
popa
sub
ss
lea
cwtl
inc
and
add
push
adc
into
xor
or
loop
sbb
add
or
jnp
jo
xlat
adc
nop
mov
adc
mov
xor
jne
das
leave
sbb
les
dec
xor
orb
mov
push
xor
jne
or
ret
mov
sub
enter
or
xor
fbstp
lahf
push
ror
adc
and
xchg
adc
add
xor
push
bnd
cmc
dec
movsb
push
rclb
leave
sbb
call
sbb
inc
and
push
or
dec
fnsave
call
or
repz
mov
jno
adc
imul
ljmp
outsb
inc
push
adc
mov
shll
xor
jne
shlb
in
fists
ds
and
les
cld
mov
mov
test
dec
imul
push
or
sbb
es
cmp
lods
and
cmpsb
or
sub
push
mov
add
sbb
cmp
or
mov
cld
jae
push
xor
or
ret
add
test
cmp
xchg
or
imul
ss
push
dec
fdiv
out
add
pop
xchg
or
repz
push
cmpsl
adc
or
add
jno
mov
popa
stos
in
popa
cmpb
and
js
xorl
lds
dec
and
cmp
xchg
pop
lea
sbb
ds
popa
imul
mov
mov
sbb
mov
hlt
adc
push
sbb
adc
sbb
push
sbb
inc
mulb
inc
dec
sbb
scas
push
cmp
mov
cmp
mov
adc
test
dec
push
fisubl
push
les
inc
aad
inc
mov
push
adc
jg
mov
icebp
adc
enter
and
mov
lret
cmp
dec
adc
pop
mov
jecxz
pop
sbb
jl
das
je
xchg
loopne
push
xor
cmp
xorb
fbld
pop
or
pop
out
pushf
sbb
mov
scas
cmp
or
inc
stos
leave
mov
add
adc
and
pop
sti
push
cltd
and
ret
dec
loopne
test
movsb
lock
or
push
or
in
arpl
mov
gs
xor
les
popa
dec
test
fcmovnb
rorl
aaa
data16
pop
xor
pop
sub
adc
test
xchg
jno
mov
mov
and
and
imul
sarb
sub
pop
pop
adc
mov
or
ror
rclb
sti
movsb
outsl
arpl
xor
lds
dec
popa
call
shrb
jno
lods
or
mov
nop
xor
roll
daa
ss
sbb
lock
mov
es
add
or
mov
shll
xor
add
dec
call
and
jno
or
push
std
push
lea
pop
aaa
sbb
pop
adc
inc
xchg
push
rolb
into
hlt
fiaddl
add
test
or
out
adc
lret
push
add
ret
pop
xchg
push
hlt
test
push
rolb
and
push
dec
shlb
adc
xchg
icebp
lods
inc
xchg
jecxz
adc
mov
mov
xchg
mov
mov
dec
pusha
insb
ret
sub
jl
xor
push
jmp
push
adc
enter
push
push
push
and
fwait
or
inc
stos
xor
add
loope
or
push
add
sbb
shrb
xor
ss
xchg
dec
or
add
adc
mov
sbb
adc
fdivrp
nop
add
add
loopne
rorl
sbb
ret
sbb
iret
jo
leave
shll
mov
js
and
mov
test
xchg
or
or
ret
mov
and
jg
cmp
xlat
xor
add
or
pop
add
inc
loopne
aas
leave
dec
pop
mov
sbb
test
inc
adc
call
jnp
inc
cmp
cmpsl
sub
mov
mov
cmp
cs
cmpsb
push
dec
enter
lds
arpl
pop
movsl
xor
adc
scas
add
test
xor
push
jo
shl
or
movsb
sbb
add
adc
and
mov
push
mov
in
ljmp
call
mov
lods
add
add
ret
adc
mov
pop
rolb
or
xor
outsl
clc
rcll
xchg
xor
push
imul
add
push
mov
pop
adc
add
or
inc
shlb
jp
dec
pop
adc
pop
inc
jmp
or
imull
insl
leave
xchg
movsl
sahf
js
or
pop
pushf
insb
sbb
lret
jp
fimuls
inc
or
dec
lret
adc
inc
add
ljmp
and
xor
sub
or
lret
shll
xchg
into
cmpsb
and
outsl
lret
rorb
sbb
xor
cmp
and
pusha
scas
add
sub
dec
add
pusha
and
leave
sub
iret
mov
adc
sahf
mov
sbb
repnz
or
lds
xor
xacquire
movsb
je
fcmovbe
sbb
mov
cmp
lods
bnd
mov
jge
rolb
mov
dec
add
repnz
xor
cwtl
sub
mov
movsb
mov
xor
shl
sbb
mov
and
addr16
enter
in
cli
or
inc
cli
sub
dec
push
sub
psubd
xor
mov
add
adc
pusha
add
push
sti
ss
shll
out
loope
adc
enter
aad
ljmp
mov
call
adc
nop
xor
xorb
xor
dec
outsl
or
xor
jo
cwtl
rolb
mov
fs
inc
and
mov
dec
mov
sahf
or
lcall
sahf
push
cmp
and
pop
inc
pop
lock
daa
arpl
les
push
lods
test
addr16
loope
subl
call
scas
call
cmp
dec
rclb
out
je
sub
subb
jge
addr16
pushf
lea
push
fmul
cmpsl
stos
mov
xchg
rcrl
add
inc
jmp
mov
mov
add
xor
test
mov
mov
adc
in
pop
sub
rclb
cmp
push
scas
stos
ficoms
xor
jl
sbb
push
sbb
pop
movsb
adc
jg
sub
cmp
ret
xchg
push
sbb
adc
dec
ljmp
insl
test
push
stos
cmpsb
mov
lahf
sbb
jo
fs
cmpsl
push
arpl
push
insb
push
pop
dec
lea
cmp
mov
inc
sbb
andb
add
jecxz
sub
jge
sbbb
push
enter
js
out
adc
incb
sbb
ljmp
shrb
rorl
sarl
adc
mov
or
push
dec
hlt
leave
pop
mov
jb
sbb
xchg
cld
ficompl
loop
enter
aaa
push
and
cmp
adc
dec
xchg
xor
fwait
pop
adc
add
add
cwtl
adc
loope
add
movsl
ret
add
jmp
pop
push
lret
adc
js
pushf
xchg
mov
sub
jmp
inc
or
les
add
adc
push
negb
push
inc
mov
sbb
fistpl
js
push
les
add
popf
jg
or
and
push
xchg
dec
cmpb
and
mov
sbb
cmp
add
mov
ljmp
sub
dec
adc
jecxz
testb
and
mov
xchg
scas
insl
pop
add
add
loop
inc
shll
roll
pop
dec
loop
xchg
push
insb
leave
xor
mov
dec
xchg
pushf
or
lock
xchg
or
rcrl
ret
loope
and
jb
sbb
rolb
sbb
mov
mov
js
cmp
out
xor
rclb
or
and
push
inc
aas
arpl
loope
les
das
or
add
mov
add
mov
sub
mov
mov
test
mov
or
jge
in
lea
test
dec
jb
inc
sahf
adc
push
pop
adc
sbb
add
insl
imul
mov
pop
das
add
roll
outsl
leave
xlat
sti
in
jge
and
sub
push
add
sbb
flds
das
add
pusha
fisubs
dec
test
jb
lock
enter
icebp
inc
cmovo
push
inc
jmp
add
mov
pop
ljmp
dec
or
les
push
vpunpckldq
or
xchg
mov
mov
rcrb
shlb
ret
push
jecxz
push
add
or
xor
movsl
cmp
daa
mov
adc
movsb
push
movsl
shl
data16
daa
adc
mov
or
pop
cmp
mov
push
xor
add
int3
push
mov
push
test
cmp
add
mov
push
imul
add
ljmp
push
adcb
xor
in
test
or
xchg
xchg
push
stc
push
mov
xor
mov
fiadds
ret
lock
testb
ljmp
or
pop
sbb
lods
orl
xor
push
cli
dec
movsb
xchg
add
outsb
inc
outsl
ret
mov
jle
popl
mov
push
pop
into
cmp
push
in
sbb
es
out
inc
rorl
push
cmp
adc
aam
test
shr
sub
adc
stos
ljmp
inc
test
pop
xorb
mov
mov
cmp
sbb
cmova
pop
mov
jp
sbb
stos
fbstp
dec
add
or
adcl
cmp
cmp
dec
adc
sbb
subb
dec
imul
sbb
xchg
aam
ljmp
and
push
inc
ljmp
ja
xor
aad
push
in
xor
call
sub
cli
sub
andb
mov
dec
or
mov
inc
divb
jecxz
adc
sbb
xlat
pop
inc
xchg
xchg
addb
dec
xor
fisubrs
lcall
je
push
xor
lds
inc
cs
aas
cmp
pop
cltd
push
fdivl
mov
mov
sbb
adc
aad
mov
jp
stc
ficompl
shrb
xchg
or
test
jnp
cmp
rclb
idiv
push
sbb
pop
fs
sub
andb
pusha
mov
enter
aad
and
mov
adc
jge
pop
movb
cmc
xchg
push
cli
orb
dec
and
test
and
jmp
sarl
or
popa
pop
mov
rcl
fsubrp
push
sbb
int3
ja
into
jo
aaa
or
xor
inc
mov
cmp
lods
sub
and
enter
add
inc
push
and
pop
dec
mov
fistpl
or
shlb
sub
stos
mov
add
call
pushf
push
pop
clc
or
sub
int
add
add
arpl
xor
xor
aam
out
ret
cld
xor
test
push
push
xchg
add
pushf
mov
xorb
insl
cld
add
enter
sbb
jae
cld
xchg
mov
ffreep
adc
popa
lret
mov
dec
push
pop
loope
mov
jg
adc
or
pop
repz
cs
mov
adcl
and
cmpsl
xchg
jp
aad
inc
fcomps
or
inc
or
push
imul
jmp
jo
add
pop
mov
cwtl
add
adc
adc
dec
jp
js
fistps
sbb
test
mov
adcb
insl
xor
lcall
push
jno
pop
cli
mov
movsl
jo
add
adcb
je
push
int3
adc
scas
clc
xchg
mov
rolb
lret
jl
pop
inc
jp
loop
push
in
sti
enter
adc
shr
mov
inc
lea
fadd
sbb
mov
sbb
jmp
int3
call
add
push
push
sub
push
aad
add
add
stc
dec
xor
pop
or
jmp
rorb
xchg
push
add
mov
cmp
lahf
mov
add
ret
ret
xchg
test
add
jmp
adc
mov
outsl
mov
add
xchg
mov
sbb
pop
push
and
shll
and
in
add
add
mov
pop
pop
cltd
jo
insl
mov
std
sub
sbb
xor
pop
es
imul
mov
sub
mov
cmp
lcall
or
pop
inc
test
fwait
adc
cmp
xchg
pop
sub
push
js
push
sbb
mov
or
bound
daa
arpl
mov
in
insb
pop
arpl
cli
fsubs
cmp
sbb
mov
push
ds
and
mov
adc
shlb
xor
clc
pusha
pop
dec
jo
popf
dec
or
sub
dec
jl
dec
sub
inc
jmp
lock
inc
dec
inc
push
mov
or
rcrb
ret
out
add
fs
mov
repnz
aad
jbe
push
ja
sbb
cmp
add
pop
push
loop
xchg
push
dec
and
ljmp
clc
push
push
cmp
dec
sbb
lret
pop
sbb
imul
add
add
js
pop
or
js
dec
dec
add
nop
fldl
xor
ljmp
push
push
add
sbb
push
je
and
add
mov
push
sub
sub
pusha
xor
out
icebp
js
sahf
add
lcall
xchg
add
pop
xchg
sbbb
inc
arpl
pop
je
push
mov
aam
adc
add
in
dec
inc
das
pop
popf
enter
inc
test
push
xor
test
or
xor
mov
ljmp
mov
or
enter
adc
add
add
or
or
hlt
rolb
and
jle
clc
fcmovne
arpl
pop
mov
movsb
and
pop
sbb
xchg
lret
jecxz
rorl
rclb
adc
or
out
pop
shl
rclb
dec
pushf
popf
sbb
pop
scas
xor
xchg
loope
into
dec
rorb
add
scas
push
ret
dec
les
test
push
bound
imul
or
sub
sub
shll
ret
pop
in
jno
lcall
pusha
cwtl
sub
fcomps
sbb
ret
adc
cmpsl
mov
xor
adc
inc
mov
lods
or
jmp
popa
jo
shl
adc
mov
inc
cwtl
aam
into
nop
and
or
adcb
cmp
in
xlat
jp
push
sbb
push
and
sbb
xchg
es
xorl
mov
push
adc
mov
fst
mov
or
inc
das
mov
adc
mov
add
mov
nop
push
sub
mov
test
inc
jp
testl
or
pop
repnz
mov
out
or
lock
dec
push
push
xchg
mov
inc
and
dec
pushf
mov
sub
icebp
sub
sub
ret
sbb
dec
ljmp
lret
pusha
pop
cmpsb
xchg
adc
sbb
lock
or
shlb
push
popa
cmp
or
and
lods
mov
jb
je
addb
xor
xchg
into
roll
enter
addr16
jecxz
sub
xor
inc
xor
cli
or
add
mov
sbbb
or
or
andb
pusha
cbtw
mov
pop
setl
cld
iret
lret
add
mov
or
adc
adc
adc
popf
sbbb
mov
lret
adcl
sub
jno
lret
xchg
xchg
push
les
lds
loop
and
push
call
push
mov
orb
enter
movb
pop
add
cmp
add
mov
mov
or
cwtl
cwtl
adc
pop
pop
enter
cmp
sub
imul
and
leave
leave
into
cmpb
loope
adc
ret
adc
and
mov
ret
adc
dec
xchg
outsb
fiadds
pop
rorl
lock
sti
lock
mov
xchg
sub
fcomps
add
add
xchg
pop
lcall
inc
sbb
stos
dec
jg
jp
sbb
out
adcb
inc
xchg
mov
movsl
lds
push
adc
or
lods
jnp
or
xor
imul
mov
rol
cmpsl
add
xchg
lcall
scas
inc
push
adc
es
das
jp
xor
mov
fcomip
aam
test
insl
or
mov
xchg
sbb
shlb
test
fdivrs
dec
out
sub
xchg
ret
dec
movsb
xor
or
cli
sub
add
out
pop
bswap
sbb
cmp
jle
cs
adcb
mov
rol
or
addb
sbb
rol
mov
and
in
sbb
inc
adc
mov
ret
test
xchg
sbbl
pop
push
jmp
mov
mov
inc
pop
call
loope
pop
nop
inc
mov
in
sub
sub
add
inc
in
and
mov
test
pop
cmp
sub
nop
cltd
cmc
sbb
pop
lret
roll
adc
add
call
dec
jp
js
push
nop
ds
rol
cmpsb
cs
popf
lods
outsl
jmp
data16
push
sub
ret
call
xchg
dec
xchg
mov
push
sub
data16
pop
inc
insl
and
rorl
mov
orl
mov
stos
jo
adc
pop
dec
mov
add
sbb
sbb
sahf
add
mov
shrl
cmp
dec
pop
lods
lret
test
lods
aad
adc
push
sarb
add
mov
mov
inc
repnz
mov
add
jbe
mov
pushf
xchg
mov
out
or
ror
scas
sbb
dec
ror
test
pushf
and
add
dec
add
mov
enter
setne
sbb
or
xchg
fwait
aam
add
mov
xchg
fiaddl
or
enter
xorb
movsl
inc
repz
leave
aam
mov
fdivrs
ds
jno
add
je
sub
push
push
cmc
sbb
add
lret
nop
movsl
mov
mov
jne
fldcw
lods
mov
rcr
push
mov
loopne
lods
push
popa
cmp
rorb
lods
leave
test
push
fiadds
lahf
mov
mov
xlat
cmp
jp
jle
and
test
loop
loop
arpl
or
mov
and
out
jb
aad
ss
fs
dec
dec
inc
sbb
mov
outsl
jno
cmp
add
add
push
adc
mov
cmp
dec
and
dec
adc
pop
faddl
ficoms
enter
jne
fs
test
mov
arpl
in
lock
jo
sbb
sub
jo
icebp
inc
jne
lds
ljmp
daa
pop
shlb
pop
in
sub
add
cmp
nop
enter
inc
popa
push
xor
unpcklps
mov
shrl
mov
adc
or
or
movsl
loope
lock
mov
dec
cmp
popa
xchg
mov
cmp
inc
mov
mov
sbb
pop
inc
inc
test
test
aaa
add
sbb
add
addb
into
adc
lret
rorl
add
sbbb
lcall
ret
dec
rcrl
mov
addb
mov
mov
add
cmp
dec
leave
push
push
xchg
xchg
sbb
je
imul
push
and
ror
ljmp
fistpl
add
clc
push
mov
push
flds
int3
nop
or
push
adc
shll
aam
adc
inc
shl
sbb
gs
add
out
cmc
gs
jne
xor
and
and
shrb
jmp
icebp
jnp
inc
adc
mov
andl
jno
add
mov
mov
or
call
roll
scas
mov
jle
mov
gs
rcrb
xor
mov
or
inc
daa
out
xor
adc
push
inc
push
shr
sbb
dec
or
cmp
push
adc
adc
cmp
jo
loope
adc
sti
jmp
ret
mov
aam
xchg
dec
mov
cmp
andb
push
inc
sbb
jae
pop
jne
inc
push
sahf
insb
lods
mov
icebp
mov
xchg
cmp
adcb
lock
xorb
mov
or
push
addl
das
or
ret
shlb
popa
rolb
roll
pop
and
mov
into
and
inc
push
push
addr16
into
add
xchg
lods
pusha
sbb
xchg
sbb
mov
rcrl
hlt
mov
xor
push
xor
mov
rcll
pop
ret
sbb
inc
and
enter
add
daa
aam
imul
jb
xchg
mov
ss
add
into
sbb
mov
add
pushf
imul
adc
mov
inc
add
movsl
cmpsb
lds
inc
dec
or
call
fucompp
add
jne
outsb
or
push
add
js
sbb
dec
xor
pop
dec
call
adc
fcoms
cs
nop
mov
lock
xchg
xor
and
sbb
adc
lods
jb,pn
pop
test
imul
jns
and
xchg
sub
sbb
inc
mov
inc
lret
xor
test
sbb
emms
test
add
fsubr
inc
int3
add
shlb
sub
mov
cmp
pushf
sub
push
xor
sub
xchg
pusha
inc
or
fwait
dec
mov
cmpb
jbe
pop
pushf
je
add
cmp
add
aad
sbb
push
mov
cmp
aas
or
sbb
sub
xor
cmpsl
inc
sub
cmc
inc
cmp
push
mov
cs
add
push
ret
movsb
dec
inc
loopne
mov
pop
sbb
push
cmpb
xchg
add
adc
rorl
shlb
push
and
or
lahf
leave
mov
pusha
jge
mov
imull
jl
xorl
dec
and
push
rol
arpl
sti
mov
adcl
and
or
add
pop
sbb
popa
shll
mov
loopne
inc
or
adc
mov
loopne
into
pop
adc
xor
icebp
xchg
cli
xor
push
in
lds
enter
xchg
int3
push
imul
jge
arpl
dec
dec
lds
addb
pop
jo
rorb
lret
sub
pop
xchg
orl
daa
or
mov
dec
xlat
roll
rorl
loope
xor
rorb
orl
jbe
inc
sub
das
sbb
rolb
rcrb
jmp
pushf
test
xchg
repnz
jno
ljmp
clc
xchg
add
adc
push
dec
inc
ss
cmp
xchg
mov
push
adc
outsb
movsl
lods
xchg
movsb
push
adc
clc
rcrb
and
xchg
dec
loopne
cmp
das
cmc
dec
sub
push
jg
nop
or
adc
out
pop
aam
pop
push
daa
pop
fs
ret
lret
bnd
or
push
xchg
push
push
xorb
push
and
pop
jp
lock
push
loopne
das
dec
adc
push
xor
sub
or
addr16
mov
push
or
mov
adc
outsl
arpl
lock
mov
imul
in
pop
inc
lea
push
pop
push
shrl
idivb
pop
adc
pop
xchg
add
imul
arpl
test
inc
and
add
je
arpl
sbb
adc
add
inc
arpl
cmpsb
and
test
xor
pop
pop
fcomps
orl
or
sbb
and
mov
push
cmpsb
push
or
test
sbb
packuswb
add
in
jge
lock
dec
or
push
xchg
stos
adcl
add
cmc
sbb
rcrb
xchg
negl
imul
mov
inc
lock
jne
pusha
mov
inc
inc
loopne
add
adc
ja
cmc
xor
cmp
pop
lods
daa
add
push
cmpsb
lcall
adc
or
pop
or
lret
mov
adc
es
stos
pop
movb
test
xchg
pusha
jae
or
dec
pop
push
xchg
push
pop
push
imul
pop
enter
push
aas
mov
sub
rol
add
add
push
inc
fdivs
hlt
or
xchg
leave
rolb
lods
inc
mov
sarl
xor
dec
imul
or
shl
push
nop
xor
xchg
mov
push
dec
xchg
lods
add
push
imul
push
mov
movsb
imul
xor
cld
call
in
adc
js
and
mov
cli
xchg
mov
cmp
add
mov
mov
or
add
shl
pop
push
movsl
call
ret
cli
sbbb
shl
mov
mov
in
jno
loopne
cmp
adc
fcomps
xor
jle
adc
pop
lcall
sahf
mov
jmp
test
loopne
mov
fs
popa
sbb
and
pushf
push
adc
insl
cs
or
push
pop
adc
cmc
xorb
or
add
pop
dec
add
inc
add
dec
lods
mov
les
js
pop
mov
inc
outsl
or
mov
sub
mov
ret
jne
lret
jmp
add
je
enter
cmp
enter
mov
fcoml
cwtl
and
dec
sar
xchg
inc
pop
inc
mov
jl
adc
inc
push
ds
das
call
enter
mov
faddl
pop
jl
inc
push
cmp
sub
mov
pushl
bound
mov
sub
adc
mov
xadd
push
test
aaa
ret
sub
mov
mov
hlt
js
arpl
aad
or
dec
inc
mov
mov
xchg
cmp
or
into
sbb
arpl
loopne,pt
mov
loope
sbb
mov
add
push
push
jl
mov
cmp
sbb
sbb
ret
mov
outsl
stos
mov
inc
dec
mov
movsb
pop
icebp
adc
mov
int3
jp
dec
jle
rcll
mov
mov
xchg
push
pop
enter
cmp
jl
ss
das
pusha
subb
xor
iret
mov
xor
call
mov
imul
hlt
mov
out
out
js
xor
das
sbbb
add
sbb
pop
leave
std
enter
popa
mov
mov
sub
pop
mov
rcrb
xor
sbbl
shr
push
vminps
sub
xorl
and
xor
popa
hlt
sbb
sbb
pop
lret
add
jp
add
mov
lock
push
xor
ja
shlb
and
push
rorb
test
cwtl
es
fmul
adcl
jp
call
subl
movsb
xor
mov
inc
mov
add
sbb
push
imul
shlb
sbb
sbb
arpl
mov
sbb
popa
bound
mov
icebp
pop
sbb
or
adc
mov
xchg
je
add
sub
jl
ficoms
dec
adc
movsl
sbb
sbb
sub
lret
rclb
popf
and
into
add
adc
adc
mov
or
jo,pt
adc
movsb
add
sub
scas
cs
or
xchg
shlb
out
jg
ficoml
fdivrs
jne
pop
jo
sub
push
and
mov
icebp
cmp
insl
mov
add
dec
jns
add
pusha
dec
and
mov
mov
neg
or
sub
ret
add
sbb
push
mov
call
push
pusha
adc
hlt
mov
mov
jp
dec
mov
or
icebp
insb
ret
dec
xchg
xor
aam
push
loopne
lods
push
pop
push
mov
mov
mov
mov
or
addb
add
xchg
hlt
cmc
out
add
push
push
ja
rclb
push
out
pusha
fdivrs
ljmp
shlb
add
jo
adc
or
pop
pop
cmpb
mov
das
inc
or
outsb
sbb
addl
or
cmp
nop
andl
mov
insb
sbb
ret
test
mov
xchg
mov
adc
or
sbb
sbb
mov
test
cmp
lret
pop
cmp
bound
shlb
cmpl
jecxz
sbb
insb
mov
xchg
pop
mov
movsl
andb
and
adc
xchg
cli
add
movsb
test
adcl
enter
dec
push
cmp
jl
adc
dec
mov
sbb
andb
xor
ljmp
insb
test
aam
inc
stc
push
arpl
repnz
pop
pop
sbb
jl
add
mov
scas
sub
push
push
in
jl
sbb
or
cs
push
inc
call
inc
outsl
sarb
sahf
dec
and
test
lods
xor
add
jbe
popa
xor
dec
xor
mov
gs
push
adc
pusha
xchg
test
push
cli
push
ret
jmp
pop
scas
test
inc
call
xor
loopne
or
jo
dec
inc
ret
fs
jne
mov
ret
lods
jo
sbb
dec
add
mov
inc
and
rclb
or
xor
loopne
add
push
scas
add
ret
mov
push
fnstcw
cmp
inc
push
inc
icebp
or
pop
or
lret
jns
mov
jge
cwtl
jo
ret
add
shlb
pusha
test
inc
sub
push
sbb
sahf
pusha
lret
bound
inc
lret
shll
xor
popa
pusha
or
add
and
sbb
or
in
cwtl
sbb
das
push
mov
dec
and
sbb
mov
adc
adc
adc
loopne
pop
add
add
movsb
imul
pusha
js
popa
push
mov
insl
rorb
adcb
sub
or
mov
lods
and
or
jge
fistpll
sub
add
jo
xchg
mov
mov
scas
test
cmp
and
pop
pop
push
les
loope
xchg
mov
ret
jne
sbb
dec
push
or
pusha
shlb
mov
xor
cmpsl
xor
xor
mov
lock
add
loope
mov
sbb
or
or
xor
movsb
sahf
fisttps
loop
mov
call
test
adc
shrl
push
add
shll
adc
mov
add
adc
and
add
or
jno
dec
jmp
shlb
mov
sahf
push
ret
sbb
stos
lea
rolb
adc
cmp
pop
pop
mov
mov
lock
push
cvtps2pi
es
adc
sbb
and
add
jno
xorl
inc
sbb
fs
rsm
shl
and
cltd
sbb
pop
inc
je
outsb
test
or
shlb
mov
rorl
add
pop
loop
adcl
lods
gs
mov
jbe
add
dec
mov
ds
sub
xor
rol
loope
pusha
adc
or
adc
pusha
into
xchg
add
and
cld
lds
pop
lock
push
lods
test
push
pop
dec
sbb
sub
cmpl
add
push
ret
sbbl
and
es
or
sbb
dec
adc
les
sub
or
rorb
insb
hlt
mov
cwtl
jp
stc
or
xchg
push
cli
or
inc
adc
mov
push
cmp
add
mov
sarb
jge
cmp
push
xor
add
loope
insl
mov
insl
nop
nop
jp
nop
push
test
cmp
mov
ret
leave
mov
iret
movsl
mov
arpl
push
dec
lods
popa
sbb
dec
mov
add
inc
sarb
xchg
icebp
mov
sub
arpl
xor
loope
ja
sub
add
mov
movsb
test
enter
and
ds
pop
movsb
scas
or
mov
arpl
adc
xchg
int
or
push
adc
mov
add
pop
pushf
sub
pop
push
lods
adc
out
ror
or
repz
out
cld
dec
xchg
shl
push
out
lods
xor
and
push
add
lock
lods
sub
shrb
fcoms
push
xchg
fcoml
jo
lock
imulb
and
mov
and
add
scas
jne
dec
sub
jo
cld
push
sbb
add
imul
pop
fsub
pop
fmuls
or
sub
mov
sbb
cli
sbb
add
inc
andb
rol
mov
mov
xchg
call
mov
sti
lcall
sub
movl
add
push
sti
loope
stos
stos
test
jnp
xchg
push
pop
xor
pop
adc
repz
push
inc
cmp
mov
rorb
cmp
sub
popf
dec
loop
fimull
mov
leave
cmpl
mov
mov
xchg
push
jne
ljmp
pop
and
adc
lahf
xchg
aam
pop
xchg
iret
xchg
push
pop
jns
xor
cmp
test
xchg
jns
fisttpll
xchg
adcb
out
in
clc
mov
pop
in
jle
imul
in
ja
inc
in
xchg
inc
pop
lea
fildll
xorps
icebp
ds
adc
lods
pop
push
pop
jns
push
js
mov
inc
movsb
popf
cli
imul
popf
pop
mov
mov
fldcw
in
push
xchg
cltd
jl
cmc
pop
mov
cmp
xchg
push
pop
ret
sti
lahf
je
lock
xchg
push
pop
jns
xchg
fs
fisubrs
pop
xor
out
push
pop
jns
popa
mov
loope
out
sub
js
pop
mov
in
sbb
cmpsl
lock
in
xchg
push
sub
inc
loope
push
or
inc
mov
pop
jns
mov
loop
cwtl
pop
popf
scas
imul
jmp
mov
call
fidivrs
mov
aad
xchg
sbb
push
call
jp
das
xchg
mov
push
cmp
mov
div
lret
js
cmp
lret
jg
imul
pop
xchg
push
fidivrs
cmp
jg
insl
mov
mov
jge
mul
inc
es
sub
dec
mov
das
push
fdivrp
pop
mov
mov
aad
pop
add
fists
inc
pop
ret
mov
cmp
pop
movsb
ret
out
xchg
inc
mov
repnz
mov
jo
scas
mov
lret
mov
js
xor
out
sub
out
jle
repnz
sbb
mov
leave
nop
push
iret
pusha
add
lret
daa
add
jne
mov
mov
sub
dec
mov
popa
ror
sub
ret
or
add
repz
movsl
ss
loop
imul
mov
mov
mov
pop
xlat
out
lcall
cmpsl
jbe
xchg
fdivl
inc
test
out
mov
daa
jb
lods
mov
scas
mov
popa
enter
and
pop
sub
repnz
lret
stc
pop
cmp
cmp
and
aaa
jno
lret
inc
adc
rolb
clc
jle
sub
push
bound
dec
in
or
mov
mov
fs
sub
mov
cmp
mov
cmpsl
clc
jl
jge
cltd
fnstsw
sub
ror
cltd
xchg
aaa
lds
in
lret
mov
das
aad
dec
and
bnd
les
or
sbb
aaa
inc
fsubl
fistpll
xchg
ja
or
sub
add
push
fidivrs
mov
jg
cmp
enter
in
cwtl
xor
daa
lret
dec
sidtl
cmp
mov
aas
mov
xchg
dec
mov
xchg
push
pop
cmp
lahf
insb
mov
out
xchg
mov
aaa
adc
repnz
xor
test
lods
out
cld
adc
xor
lret
mov
inc
mov
dec
imulb
scas
mov
mov
xchg
inc
mov
repnz
and
jg
xlat
scas
roll
mov
jmp
popa
in
dec
lds
repnz
add
scas
sbb
pop
test
sub
iret
fcomip
rcrl
pop
lahf
adc
sahf
xchg
cmpsb
mov
jg
lds
sti
mov
lret
popa
push
lock
jne
mov
repnz
push
sbb
jle
mov
sbb
lret
mov
in
cwtl
sub
out
adc
sbb
scas
mov
lds
movsl
ss
cmp
scas
mov
cmp
test
mov
pop
mov
mov
jmp
xor
sbb
repnz
jmp
shll
push
and
mov
xchg
add
jb
imul
repnz
aam
lds
and
ss
push
pop
jns
sub
mov
mov
sub
xchg
push
mov
test
movsl
mov
pop
js
iret
imul
repnz
scas
orl
and
mov
sti
mull
push
add
adc
insl
or
repnz
bsf
cli
icebp
fnstsw
dec
and
repnz
add
mov
mov
or
scas
mov
or
pop
cmp
scas
mov
mov
es
mov
and
sbb
mov
jbe
out
in
imul
xchg
in
push
mov
and
sub
cld
test
add
les
scas
mov
adc
add
add
in
addl
lret
pop
or
push
mov
push
repnz
repnz
lret
sub
fadds
dec
xor
sub
mov
push
cmpsb
fbstp
xchg
out
xchg
out
xor
jmp
out
test
ljmp
add
out
mov
cwtl
mov
into
sti
outsl
cmp
jge
in
popf
das
sub
adc
stos
sbb
fisubrl
lret
hlt
jno
aas
xchg
push
das
xchg
lea
mov
daa
pusha
mulb
jne
in
fwait
xor
lret
insb
cmpb
data16
xchg
sub
sub
imul
scas
mov
mov
mov
mov
in
sub
xchg
dec
cmpsb
bound
sub
mov
lcall
repnz
xor
sub
jns
xchg
das
mov
add
push
xor
in
push
pop
inc
shlb
dec
adc
push
xchg
fnstcw
stos
sub
adc
xchg
add
sti
repnz
mov
xor
scas
inc
pushf
fptan
lret
sub
jno
jno
sbb
lret
mov
sub
outsb
add
aas
adc
scas
mov
das
dec
sbb
adc
jns
div
lret
pop
xor
mov
out
xchg
push
emms
ja
xchg
mov
aaa
scas
push
dec
adc
inc
xor
fists
insl
mov
lods
jnp
adc
enter
lret
fisttpll
ret
pop
jecxz
push
stc
cmp
scas
arpl
dec
pop
dec
mov
fidivrs
lea
jns
pop
lock
sti
xchg
out
out
pop
jns
xchg
jns
push
push
pop
add
shrl
inc
idivl
xchg
push
ljmp
test
leave
nop
adc
sub
stos
push
jnp
mov
stc
and
gs
pop
ds
adc
mov
lret
pop
or
cmp
cmp
fs
push
mov
imul
scas
inc
inc
adc
inc
inc
std
ss
js
or
test
ret
mov
es
push
pop
arpl
ds
stc
dec
hlt
push
lret
jns
adc
xchg
push
sub
popf
sub
mov
cmp
sbb
and
popf
loop
lret
jge
mov
push
dec
movaps
jns
inc
ret
jns
ljmp
enter
xchg
cmc
mov
mov
mov
push
stos
scas
lods
mov
pop
and
aaa
lret
xchg
push
pop
cwtl
xor
pushf
leave
repnz
mull
dec
pop
jnp
sbb
push
inc
ret
lods
pop
jns
xchg
pop
cmp
and
xchg
loope
inc
in
das
push
in
or
dec
fiadds
push
xchg
push
pop
jns
scas
push
sbb
cwtl
out
cmp
and
in
sahf
mov
shl
pop
lods
jns
xchg
push
xchg
cld
sahf
pop
jg
cli
loopne
cmp
pop
push
loop
xchg
push
dec
call
sub
lret
xor
das
mov
enter
cld
jb
and
or
cs
cld
stc
repz
lods
pop
xor
pop
or
jg
xor
fnstsw
das
xchg
mov
loopne
fldt
jecxz
ljmp
shll
sti
jle
push
xchg
mov
movsl
cmpsb
jno
ret
xor
inc
fbld
mov
jns
xchg
or
out
cmp
jp
jns
xchg
das
ja
std
sbb
scas
hlt
push
sub
xchg
jns
dec
dec
insl
adc
out
mov
mov
adc
push
dec
popl
jp
mov
sub
scas
pop
xor
mov
scas
arpl
mov
sbb
sub
pop
sbb
popa
push
sub
int3
cwtl
jno
scas
test
mov
decb
jne
scas
mov
jp
add
sub
mov
inc
repnz
lret
sub
jnp
pop
aas
xchg
mov
lret
mov
pusha
lret
xlat
fmul
lock
mov
push
mov
hlt
lock
repnz
or
sub
lret
cmp
lods
adc
add
sub
mov
pop
jmp
stos
sub
mov
pop
inc
cwtl
cmpsl
push
subl
fimull
stc
and
addr16
std
mov
mov
int3
sbb
pop
push
aad
xor
scas
xor
test
test
sbb
mov
mov
add
adc
mul
cmp
or
cmpsl
xchg
in
push
pop
add
fnsave
push
pop
jns
fildl
imul
and
lods
pop
jns
xchg
loope
aaa
popa
sub
ret
mov
pop
jns
xchg
push
mov
imul
xchg
push
pop
adc
dec
test
jo
add
sub
pop
jns
sbb
mov
mov
push
fidivrs
out
mov
nop
outsl
xchg
aam
rol
stc
jns
mov
ret
adc
mov
in
push
pop
movsb
cmp
out
jecxz
gs
ss
push
pop
jns
cwtl
icebp
clc
js
pop
xor
in
xor
push
pop
jns
mov
or
ret
xor
jns
xchg
jmp
pop
mov
in
mov
in
mov
cmp
push
shrb
xchg
jg
aad
ret
xchg
push
pop
jns
imul
iret
push
pop
jns
jbe
ss
rcrl
mov
call
sub
add
sub
push
aad
fildll
xchg
push
jle
jle
adc
xor
ja
pop
shl
insl
or
js
sub
dec
push
pop
jns
scas
mov
mov
fdivr
imul
jns
xchg
adc
lock
dec
int
jbe
jae,pt
in
push
fdivs
adc
pop
scas
dec
jo
int
and
push
pop
xchg
idiv
js
out
pop
or
pop
jns
lret
push
sbb
lds
jns
cmp
into
out
lds
or
cs
jns
xchg
xchg
inc
into
mov
xor
pop
pop
out
add
daa
mov
stos
fwait
es
sahf
out
jb
out
jle
push
ljmp
sbb
mov
mov
mov
lret
mov
and
push
cmp
jle
repnz
movl
lcall
sbb
inc
aas
jg
cld
cmp
sub
sbbl
out
in
lahf
adc
or
jl
and
repnz
mov
inc
sbb
add
lret
sub
gs
xchg
xlat
jl
lret
sub
pop
mov
jns
or
repnz
sahf
sbb
pop
xor
cli
mov
mov
lret
out
lahf
arpl
mov
outsl
pop
dec
icebp
lahf
sub
push
push
aam
dec
add
stos
test
mov
cwtl
jl
inc
mov
mov
cmp
outsl
insb
push
mov
cltd
movsl
negl
clc
mov
and
aas
mov
adc
lret
pop
in
adc
ret
mov
scas
mov
and
scas
notl
mov
sbb
ret
inc
mov
pop
fnsave
mov
push
ds
cld
mov
sub
mov
mov
lahf
or
test
bsf
in
lea
ja
ja
pusha
pop
fs
repnz
das
and
and
idivb
les
mov
cmpsl
out
fs
dec
inc
out
idivb
push
lret
ljmp
sub
in
sub
imul
sub
in
xchg
push
pop
jns
dec
outsb
das
aam
aam
ficomps
inc
jmp
std
jb
sbb
lret
popf
cmc
jbe
xchg
pop
or
xchg
push
mov
inc
mov
shr
mov
rclb
cmp
clc
fisttpl
mov
push
push
pop
jns
mov
mov
pop
aaa
sbb
pop
scas
dec
out
dec
pop
jns
xchg
lahf
int
adc
or
jle
mov
lret
xchg
push
mov
mov
jae
enter
outsl
cld
jb
pop
dec
clc
xlat
sbb
imul
and
cld
stc
mov
jg
fists
andb
iret
lahf
aas
fdivrl
add
inc
fbstp
sar
cld
stc
repz
ljmp
cmpl
jno
lahf
aas
jg
add
pop
or
inc
fdivrs
cmc
in
cmp
cmp
imul
in
or
xchg
aas
dec
dec
pop
adc
sub
and
dec
mov
js
mov
ss
xchg
cltd
add
and
push
idivb
fcoml
pop
fs
xchg
sub
push
mov
xchg
xchg
push
pop
jns
inc
fucom
fnstsw
sub
pop
mov
pop
jns
jmp
mov
push
push
adc
movsb
mov
jns
xchg
sbb
hlt
xchg
hlt
push
mov
xchg
push
mov
repz
sub
scas
mulb
repnz
and
jle
into
gs
scas
sub
mov
sub
enter
mov
mov
or
inc
movsl
ja
out
aas
movsb
paddd
mov
xor
repnz
mov
int
mov
mov
jecxz
sub
mov
pushf
imul
imul
dec
mov
lods
cld
xchg
cld
jne
repnz
adc
adc
mov
loopne
mov
xlat
mov
mov
mov
into
add
rcrl
pop
inc
shl
pop
xor
mov
fsub
add
lret
jnp
ret
inc
xor
shlb
repnz
dec
or
cld
stc
add
icebp
pop
bound
jnp
and
iret
lahf
aas
jg
ss
sti
arpl
dec
insl
cmp
arpl
pop
aaa
gs
shlb
fcomps
xor
xchg
repnz
mov
in
iret
dec
fwait
sbb
lods
pop
cmc
cld
sti
jb
and
mov
inc
fnstenv
lret
sbb
movsb
faddl
loopne
subps
sbb
scas
pop
jg
jne
cmp
scas
rcl
jmp
fistps
popf
fdivrl
pop
aas
pop
loopne
je
das
pop
dec
pop
xchg
mov
xlat
pop
mov
setl
aas
jmp
iret
pop
out
mov
ret
pop
out
pop
pushf
pop
jg
pop
mov
pop
cmp
fs
iret
pop
pushf
mov
pop
pop
leave
add
sbb
xlat
pop
scas
pop
inc
subps
cmp
cmpsl
stos
xchg
pop
out
pop
out
pop
loopne
je
jg
das
pop
dec
pop
cmp
pop
mov
sahf
outsl
pop
lcall
dec
push
pop
pop
pop
dec
pop
cmpsl
orl
xchg
and
shr
pop
subps
pop
iret
pop
vpavgb
pop
pop
dec
call
aas
pop
je
jmp
daa
inc
popf
mov
pop
das
pop
jb
leave
or
outsl
arpl
pop
je
jp
pop
mov
pop
loope
iret
pop
scas
inc
popf
mov
iret
pop
das
add
daa
pop
pop
pop
lahf
pushf
pushf
adc
add
pop
das
pop
outsl
fs
rcrl
rol
jmp
das
pop
leave
or
mov
aas
pop
scas
cmp
filds
pop
pop
cmp
jecxz
scas
pop
aas
pop
pushf
lods
jno
mov
cld
cmp
dec
mov
jmp
popl
lahf
pop
out
ret
leave
adc
jmp
mov
pop
scas
pop
jmp
lcall
iret
pop
dec
push
cmp
outsl
pop
iret
pop
daa
das
pushf
lcall
pushf
cs
push
pop
das
pop
jo
cmp
pop
pop
daa
setge
leave
pop
mov
cmpsl
ja
pop
pop
aas
cmp
jb
pop
aas
pop
jg
in
sahf
pop
es
pushf
sahf
dec
dec
lahf
pop
pop
leave
or
jg
jb
pop
iret
pop
lcall
dec
inc
subps
leave
sbb
je
xor
pop
pop
pop
mov
pop
aas
pop
jo
ror
pop
iret
pop
daa
add
pop
popf
mov
mov
pop
cmp
in
xchg
adc
aas
into
cmp
pop
jg
jg
xchg
pop
dec
pop
pop
pop
daa
and
pop
push
cmp
pop
js
jg
add
mul
das
pop
int
pop
jo
leave
mov
mov
cmp
sbb
pop
out
pop
pavgusb
ror
daa
pop
lcall
hlt
adc
pushf
fsubrp
jg
mov
cli
cmp
pop
mov
pop
pop
pop
jmp
pop
pop
pop
in
rcl
pop
fistps
cmp
pop
pop
pop
adc
leave
aas
pop
lcall
iret
hlt
fistps
scas
push
cmp
lahf
xchg
add
pop
pop
out
cs
pop
cmpsl
pop
lahf
pop
decl
sub
ror
pop
lcall
out
in
pop
dec
pop
dec
cmp
pop
lcall
xchg
pop
dec
pop
mov
fistps
repnz
lcall
call
pop
lahf
ds
push
cmp
mov
pop
dec
pop
outsl
or
fcoml
out
in
pop
scas
adc
pop
daa
setl
jg
xchg
adc
pop
pop
popf
aas
cmc
in
pop
pop
jg
sbb
jo
cmp
outsl
rcl
jmp
aas
pop
jmp
pop
pop
cmpsl
mov
rcrl
pop
xchg
pop
dec
push
subps
sbb
popf
ficomps
dec
pop
pushf
fmulp
dec
dec
pop
fistps
daa
or
jg
je
rcrb
or
or
ror
lcall
cmp
in
pop
scas
pop
xchg
xor
out
pop
outsl
pop
jmp
pop
mov
dec
pop
mov
xchg
adc
pop
daa
daa
popf
scas
dec
pop
lcall
leave
sbb
aas
pop
dec
pop
cmpsl
fistps
je
xor
aas
pop
mov
pop
lahf
pop
scas
jge
mov
out
pop
daa
dec
cmp
fcomip
in
xchg
pop
pop
mov
fidivrs
leave
mov
add
jg
lahf
pop
cmpsl
stos
xchg
pop
iret
pop
pushf
cs
pop
outsl
pop
vmread
daa
pop
lcall
pop
ljmp
cmpsl
cmpsl
sarl
pop
outsl
pop
mov
or
pushf
jno
iret
pop
pop
and
daa
pop
jg
iret
loopne
adcl
pop
fistps
xchg
pop
mov
jmp
das
pop
sbb
pop
outsl
push
dec
inc
cmp
mov
pop
pop
pop
push
push
adc
adc
sbb
jmp
test
jmp
dec
test
lahf
pop
fisubrs
push
dec
jl
in
in
fistpll
mov
push
jns
push
jmp
pop
rclb
adc
mov
adc
pop
jns
bound
les
add
fmuls
mov
mov
cmpl
xchg
push
sarl
push
xchg
pusha
imul
push
scas
jge
out
inc
push
pop
jns
lock
push
inc
ja
shl
pop
pop
rclb
pop
jns
xchg
jae
cmp
sbb
shl
fistps
pop
xor
xchg
push
cmc
push
pop
cwtl
iret
mov
mov
pop
cmp
insl
stos
or
jne
popf
ret
sbb
add
faddl
mov
inc
out
lahf
pop
push
fisttpl
sub
jmp
push
repz
pushf
aaa
jmp
xchg
cmp
xchg
aaa
push
test
jg
iret
sub
stos
inc
dec
push
test
cs
inc
xchg
aam
scas
stos
xor
lods
pop
stos
jg
cld
stc
test
cmpb
xchg
stos
pop
sarl
ss
push
out
lahf
aas
inc
movl
stc
repz
cmp
jl
out
test
imul
push
jns
sbb
aas
mov
leave
into
adc
mov
cmp
pop
jns
and
mov
sbb
mulb
in
les
adc
jg
inc
xor
test
and
sahf
sti
or
incb
jns
stc
mov
cmc
push
cmpsl
adc
pop
jle
imul
push
clc
mov
in
dec
cmp
sbb
bound
and
jb
xchg
push
or
rcr
mov
and
or
mov
or
cpuid
push
xor
jg
sub
push
outsl
test
add
jmp
xor
or
cld
stc
repz
mov
xor
xchg
cmp
testl
xchg
mov
lahf
gs
jg
das
sbb
jg
push
fsubp
flds
out
and
in
popa
popa
mov
lahf
and
push
add
lahf
xchg
push
fdivrp
mov
jno
pop
xor
jge
stos
jmp
mov
in
scas
pop
mov
cmp
inc
xchg
sub
pop
jns
xchg
das
outsb
cmp
mov
cmp
jmp
sbb
in
push
repz
pushf
clc
pop
cmpb
push
es
push
fidivrs
and
iret
jp
roll
inc
mov
cmp
dec
out
add
mov
pop
lcall
out
add
test
jecxz
lahf
aas
jg
je
jl
mov
jns
adc
stc
repz
add
dec
movsb
push
adc
push
ficoms
std
fnstenv
mov
add
jne
repnz
rclb
ljmp
push
pop
jns
lret
cmp
mov
in
mov
stc
aas
out
fdivr
insl
iret
adc
mov
mov
popf
icebp
jae
aad
ja
inc
iret
jns
sahf
lret
arpl
add
sbb
and
mov
in
jge
jl
push
out
scas
or
pop
xchg
std
out
jns
push
and
pop
mov
iret
scas
mov
jb
adc
cld
stc
repz
stos
decl
int
mov
jle
outsb
idivb
and
aaa
or
sub
mov
ret
or
sub
fneni(8087
pop
jmp
sahf
add
xlat
scas
mov
cmp
sahf
das
and
movsb
jecxz
nop
sarb
push
roll
push
pop
and
xlat
mov
mov
cmp
cmp
out
mov
iret
mov
pusha
adcb
stc
adc
jne
or
or
in
loop
push
ss
iret
lahf
aas
push
xchg
cmp
pop
dec
mov
movsl
push
js
leave
in
lret
jle
cli
std
xchg
call
and
lret
sub
jp
cwtl
and
mov
fidivl
xor
repnz
dec
pop
cmpsl
inc
xor
jg
push
dec
in
mov
dec
and
or
push
pop
jns
sub
dec
sbb
in
test
push
pop
jns
lret
out
lret
sub
cmp
pop
jns
xchg
xor
shl
aas
insb
mov
jne
shl
push
push
cld
pop
sbb
lahf
lret
cmp
repnz
sbb
mov
push
out
xchg
sub
xlat
test
jg
scas
mov
jle
or
pusha
mov
lret
xchg
pop
js
shlw
and
ljmp
mov
sbb
dec
mov
sub
and
repnz
pop
sbb
dec
push
pop
inc
imul
sub
add
push
aas
sbb
test
shlb
scas
and
xchg
dec
lods
push
addr16
pop
push
jbe
out
jnp
fwait
cmpsb
sub
lret
cmova
daa
dec
mov
and
mov
mov
mov
scas
leave
cmp
push
fcmove
sarl
xchg
jo
xchg
mov
mov
mov
out
out
into
sbb
jle
xacquire
popa
ret
jo
dec
push
pop
cwtl
repnz
xchg
sub
les
cmp
xor
add
push
sbb
cs
out
mov
add
jmp
scas
cld
add
repnz
push
lock
inc
push
cmp
mov
out
push
call
popa
out
lahf
aas
cmp
sub
test
repnz
dec
and
add
lods
sbb
add
aad
cld
add
and
mov
dec
es
out
lahf
aas
shr
imulb
scas
or
in
std
repnz
repz
inc
clc
sbb
sbb
xchg
cld
stc
push
fdivrp
add
cli
lods
scas
iret
inc
lret
inc
cwtl
pop
jns
xchg
mov
xor
mov
dec
pop
cli
jns
xchg
push
je
popl
sbb
pop
pop
push
in
push
pop
loope
cmp
fdivrl
mov
push
pop
jns
xchg
loop,pt
rcrl
push
pop
jns
lea
xor
jge
iret
lahf
pop
sbb
push
add
imul
loop
xchg
mov
ljmp
das
cli
mov
repz
lea
push
add
xor
mov
mov
adc
insl
push
les
xchg
and
sbb
std
std
loop
cmp
punpckhwd
sub
sub
fstp
xchg
ljmp
orb
pop
and
push
pop
jns
cmp
cmp
xlat
shrl
jns
mov
stos
cmp
jmp
aad
mov
xchg
into
pushf
pushl
iret
xor
jns
in
push
pop
cwtl
pop
dec
nop
lods
in
insb
mov
jb
adc
inc
inc
fstl
sbb
pop
jns
xchg
cmp
add
pop
dec
sub
push
mov
inc
mov
in
push
pop
loop
out
xor
sub
adc
sbb
das
push
pop
jns
xchg
and
xchg
adc
ja
mov
mov
jp
out
movsl
pop
jl
out
xchg
pop
dec
jb
lcall
jg
in
or
xor
xlat
mov
sahf
push
cld
cmp
jmp
push
loopne
in
xchg
mov
inc
pop
iret
lahf
aas
jg
push
sub
fstpt
js
stc
repz
cmp
cmc
dec
jmp
into
and
adc
out
inc
xor
push
and
es
stc
repz
mov
test
pop
xrelease
jg,pt
cld
xor
xchg
pusha
mov
cmp
cmp
out
fdivrs
mov
and
push
mov
stc
repz
dec
jbe
into
xchg
jmp
sbb
sbb
lahf
aas
jg
js
shlb
xor
gs
repnz
fstl
shl
loopne
bound
hlt
test
jp
iret
in
idiv
jae
sub
dec
out
push
add
bnd
add
lods
in
push
std
iret
iret
scas
mov
add
push
dec
pushl
ror
and
lret
dec
test
repz
inc
dec
xor
int3
mov
cmpsb
jnp
outsl
outsl
xchg
cmp
mov
dec
ss
mov
enter
lret
mov
jge
pushf
loope
pop
inc
dec
xchg
sub
addr16
mov
jnp
test
push
pop
pop
fdivrp
jmp
aas
cld
stc
xchg
icebp
test
sbb
push
lahf
aas
jg
and
jp
pop
je
add
stc
repz
arpl
push
arpl
arpl
or
or
mov
outsb
xlat
das
sarl
inc
cli
fmull
pop
popa
jg
lret
sbb
aas
fxch
push
add
mov
push
std
stc
mov
sub
enter
call
iret
inc
inc
inc
loop
lret
lods
xor
in
xchg
clc
and
stc
pop
ja
sti
xor
insb
fistpl
ficompl
mov
dec
lods
jle
pop
jns
adc
add
jg
adc
sub
ja
adc
push
iret
inc
adc
out
jmp
push
and
mov
mov
xchg
push
pop
jns
or
mov
mov
jns
pop
xor
xor
xor
pop
in
jg
mov
aam
mov
fistps
in
jge
inc
mov
and
insl
jns
xchg
push
push
adc
frstor
subl
push
pop
mov
aad
cs
out
xchg
pop
test
pop
pop
jns
jbe
cmp
jne
lahf
pushf
outsl
aas
pop
jns
xchg
sbb
fs
push
push
imul
push
inc
inc
push
jae
test
and
push
pop
in
jmp
scas
repz
out
lahf
hlt
cs
scas
loopne
sbb
out
imul
xor
mov
jbe
lds
pop
add
iret
lahf
aas
push
ffree
ret
js
fs
mov
xor
mov
cltd
jl
jle,pt
cld
stc
mov
mov
shll
mov
adc
xchg
ja
add
pusha
dec
sar
insl
into
sub
sbb
lret
cmp
aad
mov
lahf
lods
cmc
pop
scas
in
push
pop
xchg
cmp
iret
cmpsb
sahf
lea
add
jns
and
adc
push
fidivrs
jmp
push
or
pop
jns
xchg
inc
push
sbbb
or
xchg
push
pop
cli
mov
mov
pop
scas
into
lret
xchg
push
pop
fadd
test
movsl
hlt
bound
cld
and
ljmp
popa
mov
or
pop
sbb
mov
jno
dec
vshufps
mov
nop
mov
shlb
imul
out
lret
lahf
adc
scas
mov
les
jb
into
cmp
sahf
lret
loopne
aaa
jg
std
adc
add
cmc
bnd
pop
fs
xchg
pop
repnz
out
push
mov
xchg
loope
mov
push
out
insl
pop
stc
push
les
adc
fists
scas
mov
pop
jmp
orl
das
scas
mov
insb
mov
lock
sbb
cltd
add
pop
pop
lret
sub
or
mov
mov
sti
hlt
cmp
dec
mov
lret
sub
testb
sub
sbb
mov
aas
xchg
pop
test
xor
xchg
push
pop
jg
lds
and
mov
popf
dec
cmpsb
xchg
push
pop
jns
cmp
jns
enter
in
into
bound
scas
mov
adc
adc
shr
lcall
and
pop
pop
lds
or
push
dec
scas
xchg
dec
mov
pushl
jge
sbb
inc
lods
ds
jl
cmpsl
out
lahf
aas
cmc
sbb
xor
jl
idiv
cld
stc
repz
js
push
icebp
dec
sub
dec
cmc
push
iret
lahf
aas
jg
mov
inc
xor
in
in
cmp
lret
out
das
bound
out
adc
pop
scas
mov
mov
xor
xchg
enter
repnz
push
mov
pop
or
enter
sub
jbe
outsb
xchg
jb
xor
adc
sbb
fisttps
adc
iret
das
test
mov
mov
rorl
jbe
bound
pop
insb
and
test
iret
lahf
aas
jg
out
int3
sub
loope
sarb
inc
or
stc
repz
ret
fs
and
lahf
in
stc
push
insl
and
pop
jns
out
js
jg
sbb
inc
aas
test
add
in
ja
mov
aam
lcall
pop
jns
jb
mov
add
pushf
cmpl
mov
iret
iret
testl
add
add
adc
in
sub
push
xchg
scas
ja
nop
inc
addr16
xor
xorb
in
and
lea
cld
les
mov
mov
push
push
cmpsl
sahf
sbbb
push
jne
add
jno,pn
scas
mov
iret
lahf
aas
inc
out
lahf
push
test
pushf
mov
push
pop
jecxz
mov
mov
inc
repz
aas
into
cmc
xlat
stc
les
add
rcl
mov
stc
fs
xchg
jns
xor
inc
js
daa
sub
pop
pop
xchg
cmp
in
push
lret
daa
cmpl
iret
lahf
aas
jg
out
pop
fiaddl
das
jne
cs
imul
repz
mov
mov
in
mov
jo
es
outsl
cld
stc
add
stos
jge
pop
pop
jg,pt
outsl
int3
testl
repz
cld
xchg
popl
leave
dec
and
cld
stc
jle
pop
xor
mov
mov
ja
popf
out
lahf
aas
fidivs
rolb
and
jnp
jbe
mov
test
movsl
mov
sbb
xchg
push
fisubrs
imul
and
out
cs
daa
xchg
mov
ror
sub
dec
aas
jg
cld
and
mov
hlt
pop
ret
mov
dec
jg
mov
mov
jns
sbb
shrb
inc
pop
roll
shlb
mov
leave
inc
jbe
dec
push
mov
inc
inc
out
xchg
sub
nop
push
jle
loopne
ljmp
lods
sub
aaa
fistpl
add
enter
sub
fisubs
insl
lret
scas
jmp
mov
sbb
das
ljmp
scas
mov
sbb
mov
pusha
scas
mov
fcomps
mov
fsubrl
mov
mov
lahf
add
cli
in
ret
or
adc
mov
jg
cld
mov
xor
pop
imul
cmpl
out
lahf
adc
nop
xor
sbb
cmc
jg,pn
mov
repnz
push
sarb
fisttps
cmp
lods
mov
iretw
mov
in
push
bound
insl
xchg
push
scas
ja
pop
jns
push
vfrczpd
mov
inc
cli
aas
cmp
xchg
jnp
mov
mov
xor
inc
stc
repz
std
out
jmp
int3
sahf
inc
loope
xchg
push
and
mov
sti
repnz
scas
pop
dec
movsb
jecxz
call
loopne
push
inc
in
xchg
sub
push
ljmp
add
out
mov
push
mov
sarb
imul
jl
cld
es
and
adc
cmp
mov
std
repnz
jmp
lahf
outsb
cs
push
push
mov
fbstp
stc
pop
rcr
dec
adc
stos
fidivs
in
ja
adc
rorl
jl
stos
mov
pop
jns
lods
xchg
jp
jp
push
jmp
push
pop
jns
cli
icebp
add
mov
sub
sti
ror
stos
xor
sbb
or
in
push
call
inc
sbb
mov
push
lret
sub
mov
mov
pop
xchg
push
fsubp
add
xor
sbb
dec
inc
mov
jns
mov
mov
xchg
mov
cmp
pop
cmp
or
mov
xor
cld
add
push
pop
repz
cs
push
push
pop
jle
stos
inc
xchg
push
fadds
pop
scas
mov
int
lahf
hlt
or
add
das
push
fisubrs
inc
bound
sbb
add
das
dec
in
xchg
and
fistps
add
lds
pop
in
ja
xor
jne
outsl
gs
lock
pop
ja
push
pop
jns
mov
cld
pop
and
or
jbe
std
jb
lcall
iret
stos
addr16
repnz
repz
adc
cmp
xchg
cmp
pop
popl
sbb
dec
pop
push
stc
cld
or
sbb
cs
push
icebp
xchg
out
out
ss
jl
insl
cmp
lret
dec
ljmp
sub
idivb
xor
sub
loope
leave
ss
icebp
pop
add
xchg
ja
jg
dec
mov
call
ja
into
push
pop
jns
aam
decb
inc
jnp
imul
outsl
push
mov
and
push
add
aaa
lret
xchg
push
fidivrs
push
jle
cmp
or
out
cmc
cmp
jb
jg
dec
mov
add
add
pop
pushf
jle
and
repnz
jg
add
adc
mov
and
lret
sbbl
dec
call
cmp
mov
xchg
cltd
daa
cmp
cli
mov
mov
push
ja
cwtl
mov
adc
mov
and
mov
pop
repz
ret
pop
jne
fldt
pop
dec
and
pop
lock
test
push
out
call
stc
adc
cs
lahf
aas
jg
pop
roll
mov
aas
cmp
lret
test
inc
jb
push
inc
into
cli
pop
fiadds
out
mov
inc
std
and
xchg
jnp
mov
lds
pusha
jge
jl
add
pushf
dec
sbb
mov
shrb
cld
stc
or
loope
mulb
or
sub
mul
iret
lahf
aas
es
jl
push
jmp
mov
cld
stc
repz
lret
xor
sub
iret
lahf
aas
jg
dec
stos
jg
dec
test
jbe
xchg
mov
sti
jp
lcall
cld
cld
stc
pushf
and
leave
outsl
iret
aaa
jo
mov
jp
mov
cmp
xchg
cld
stc
repz
push
mov
push
leave
jne
fistl
jle
mov
mov
mov
sbbl
xlat
sti
fidivrs
mov
in
push
pop
inc
cmp
xchg
push
sarl
stc
notl
dec
pop
or
pop
aad
pop
cld
pop
sahf
popf
filds
test
repz
pushf
cld
stc
pop
mov
addr16
aad
adc
iret
lahf
aas
jg
sarb
mov
les
dec
and
in
out
xchg
dec
daa
popf
js
jb
mov
lret
cmovle
mov
fdivr
stos
jecxz
hlt
arpl
inc
call
outsl
cld
sub
dec
mov
jmp
iret
lahf
aas
jg
lods
pop
data16
sbb
sub
mov
cli
in
out
je
popa
push
xlat
out
ja
outsl
push
jg
cld
pop
into
pop
je
daa
test
lcall
jbe
popf
adcl
dec
and
xchg
iret
inc
mov
cmp
imul
lret
mov
cs
iret
inc
dec
iret
iret
jae
fmul
sub
sahf
sub
adc
mov
repnz
sub
loop
clc
repz
push
scas
mov
shlb
mov
inc
mov
out
mov
int3
or
repnz
xor
pop
push
cmpsb
mov
out
mov
jp
pop
jmp
add
mov
sbb
fs
or
wbinvd
mov
sub
add
notl
das
movsl
das
scas
fs
cmp
mov
xchg
pop
sti
outsb
stc
repz
fcoml
vmovlhps
adc
outsl
jecxz
jl
cld
jl
jmp
testb
dec
xor
ja
in
lahf
or
pop
repz
fdivr
ficomps
sti
out
cmp
dec
test
mov
stc
notb
push
int3
mov
lock
aas
repnz
xchg
lds
mov
pop
or
testb
iret
lahf
movsb
sbb
leave
pop
jle
out
cwtl
ljmp
push
fsubrl
das
popa
push
pop
loope
movsb
das
pusha
sbb
test
cld
repnz
repz
das
sub
adc
cli
test
pop
jle
jle
pop
and
pushf
out
adc
out
mov
mov
iret
lahf
aas
mov
pushf
mov
test
mov
loop
cld
stc
repz
sub
push
add
xchg
shll
aas
jg
pop
add
and
bound
sar
rcrb
push
push
mov
into
test
aam
bound
push
fdivrp
sbb
jg
mov
fildll
and
js
repnz
repz
scas
in
add
cld
clc
in
jg
and
xor
scas
jne
mov
and
aas
cmp
cmp
xchg
push
decb
xchg
in
pop
push
inc
push
jne
rorl
stc
jae
subl
rcll
pop
daa
dec
adc
mov
or
pop
and
or
push
jg,pt
cld
stc
scas
cmpsb
pop
int
lahf
ficomps
lock
pushf
out
lahf
aas
aad
adc
add
cli
dec
cltd
jbe
imul
jae
inc
scas
outsl
aaa
inc
scas
or
jle
pop
std
and
lret
sub
pop
repz
lahf
push
repnz
inc
test
rorl
push
repnz
jp
xor
push
add
das
push
fdivrp
push
pusha
ficompl
aaa
push
shlb
inc
jae
sub
dec
sti
mov
rclb
xchg
fisttpll
scas
mov
mov
inc
dec
add
hlt
xchg
jp
repnz
pop
mov
out
dec
or
push
pop
lret
mov
push
scas
lods
sbb
sub
int3
pop
mov
cs
pop
mov
add
xchg
cltd
insb
lea
sbb
lea
cld
stc
xor
dec
push
jbe
xor
shll
aas
jg
inc
dec
call
jae
aam
sub
out
sti
imul
mov
add
lcall
adc
data16
xor
lret
iret
lahf
mull
jns
sbb
add
or
repz
mov
mov
fidivs
xchg
push
push
lahf
aas
mov
xor
pusha
jmp
lods
inc
or
popf
nop
pop
jns
nopl
mov
push
xor
jne
lret
xchg
push
mov
lods
or
add
scas
jns
pop
adc
loop
pop
imul
sub
pop
pop
mov
cld
stc
aaa
push
xchg
aas
ficoms
adc
xor
inc
pop
jle
xchg
std
mov
out
xor
sub
jle
iret
xor
xor
rcr
hlt
mov
insb
subb
sahf
sbbb
aas
aas
nop
out
xor
pusha
mov
out
xchg
iret
in
lret
nop
mov
pop
ja
fisttpll
out
cmc
cmp
lahf
loop
xor
mov
aas
call
pop
jns
scas
mov
mov
jnp
inc
or
cwtl
enter
fbstp
int3
jns
xchg
in
cmp
fsubr
push
test
mov
and
and
and
lret
mov
int
hlt
cmp
scas
mov
ss
outsb
stc
cmovl
cmp
mov
in
cmpl
jg
cld
stc
les
sbb
mov
xchg
jmp
iret
lahf
aas
pop
cmp
insl
inc
adcl
pop
sbbb
xchg
out
lret
iret
pop
into
mov
cmpsl
jbe
lret
cmpsl
js
repnz
ss
cld
pushl
pop
jns
jge
loop
hlt
dec
out
xchg
dec
fildll
mov
pop
lea
add
cld
stc
repz
push
ficoml
mov
into
rclb
jg
mov
lds
mov
pop
das
pop
adcl
adc
xchg
cmp
mov
popa
fstp
das
lahf
es
push
dec
mov
dec
lahf
fwait
push
sub
jmp
std
jb
pop
xchg
shll
loopne
mov
jns
xchg
push
popf
xor
das
aaa
xor
test
loop
dec
pop
pop
nop
jno
cwtl
enter
scas
mov
into
roll
and
loopne
sub
inc
hlt
xchg
pop
insb
sti
es
adc
xchg
mov
xchg
repz
leave
cld
scas
lret
cltd
and
pop
jle
cld
sub
inc
mov
push
sub
xchg
ja
ljmp
sub
stc
mov
in
push
mov
das
push
ficomps
call
aas
test
leave
fcmovbe
push
dec
sbb
das
xchg
push
clc
ja
mov
xchg
ja
dec
fistpll
dec
lock
lahf
lods
mov
and
pop
loope
sbb
lock
xchg
ja
fmuls
mov
repz
pop
mov
push
jg
icebp
ss
xchg
sbb
stc
sti
mov
call
mov
pop
jo
iret
lahf
aas
xor
andl
sti
in
sub
pop
scas
sub
imul
sub
fwait
add
popa
adc
scas
mov
ret
mov
popa
enter
mov
movsl
jp
cmc
orl
out
dec
sub
mov
in
sub
insl
push
add
inc
call
repnz
inc
sti
fsub
add
jnp
mov
inc
clc
mov
mov
sbbb
jne
and
lret
mov
lret
and
in
aaa
clc
mov
push
sub
lret
or
dec
mov
jns
jp
cmp
movsl
lret
test
in
xor
pop
adc
in
gs
lea
insb
mov
cmp
push
xchg
mov
repnz
lahf
pop
push
push
adcl
push
mov
cld
stc
repz
xchg
ss
popf
rcrl
js
out
jle
cs
into
das
es
pop
inc
les
iret
out
lahf
or
and
scas
xlat
stos
dec
push
iret
sub
push
mov
xor
mov
mov
repnz
lret
dec
pop
cmp
or
xchg
jnp
repnz
ljmp
sbb
loopne
lret
sub
fnstcw
xchg
stos
nop
and
ljmp
test
faddl
cmp
push
pop
jns
inc
cmpsb
push
mov
andb
sbb
aam
iret
int
fdivr
repz
dec
cmp
pushf
fwait
jae,pt
or
jg
cld
dec
mov
jbe
roll
cltd
cltd
lcall
push
call
in
data16
cli
bound
cld
stc
pop
mov
adc
push
lcall
cs
pop
dec
in
out
lahf
pop
cs
fdivr
call
mov
xor
pop
jns
lret
pop
pop
lret
and
test
std
mov
lret
xchg
push
xlat
sub
cmpsb
pop
or
jne
xchg
sub
jp
fdivl
clc
in
out
pop
or
mov
push
daa
scas
lock
xchg
ja
jns
subb
movsl
into
add
xor
mov
outsl
push
push
cli
pop
jns
xchg
xchg
mov
mov
xlat
push
notb
lret
xchg
jb
xchg
push
js
inc
rorl
into
ret
fdivrp
mov
mov
sub
in
scas
insl
inc
inc
in
sub
pop
ror
adc
mov
pop
cwtl
outsl
lret
jl
movsb
push
mov
scas
outsl
jge
mov
imul
outsb
jae
xchg
scas
ret
insb
scas
lret
add
popf
jg
into
incl
rorb
daa
ret
mov
mov
and
push
jge
mov
pop
out
out
mov
mov
adc
mov
lahf
pop
jmp
aas
movsl
test
stos
inc
in
iret
std
jb
frstor
btr
das
and
mov
cmp
xchg
push
ficomps
jl
inc
outsl
push
inc
pop
out
xchg
push
pop
jns
xchg
out
or
xlat
outsb
cld
dec
repnz
js
adc
aas
pop
and
out
lahf
aas
stc
mov
jecxz
push
fildl
stc
stc
repz
mov
cmpsl
cli
inc
insb
lea
adc
loopne
outsl
mov
fistps
xchg
aas
mov
fmuls
pop
scas
mov
mov
lock
pop
jle
jp
pusha
cli
adc
lret
popa
repz
and
stos
and
sub
movsb
add
push
xchg
cli
repnz
into
in
push
das
push
or
dec
cmp
cld
into
hlt
sbb
xchg
sahf
mov
pusha
ja
scas
lret
mov
test
add
push
fdivrp
jb
pop
cs
loopne
mov
lcall
pop
pop
jb
xchg
push
adc
inc
es
dec
mov
fdivrp
fistps
sbb
decb
imul
imul
xchg
arpl
mov
popa
sbb
clc
or
sub
xchg
sub
and
sti
repnz
mov
es
xor
add
pop
and
icebp
ds
dec
scas
xchg
and
push
mov
jne
mov
movsb
imul
jb
fstpt
push
fadd
mov
xor
std
push
clc
mov
inc
das
dec
xor
pop
inc
cmc
or
adc
ljmp
xor
pop
fdivrp
xchg
sbb
xor
fwait
ja
push
mov
lahf
pop
out
mov
lea
and
repnz
repz
jl
ret
jae
loopne
mov
sub
in
xchg
nop
adc
jns
xchg
in
iret
lahf
fcoml
insb
cmc
sahf
fmul
rclb
outsb
pop
iret
xchg
inc
int
adc
icebp
mov
nop
scas
pop
push
je
arpl
fimuls
fcmovne
push
int
push
cltd
repnz
jbe
mov
cmpsb
shlb
in
sti
cmp
test
loopne
mov
mov
fldl
and
jne
int
jle
mov
pop
push
mov
out
lahf
aas
pop
aam
shlb
push
js
cld
stc
repz
imul
sti
fwait
inc
xchg
add
lret
adc
lahf
aas
jg
push
fnsave
jns
pop
mov
jge
adc
repnz
add
mov
cmpsl
mov
lret
mov
jg
or
mov
in
cmp
xchg
punpckhwd
pop
repnz
lahf
xchg
mov
push
push
sahf
xchg
test
xchg
ja
cmc
cmp
mov
sub
push
pop
jns
mov
pop
stos
adc
sbb
test
in
xchg
sbb
nop
adc
fwait
stc
repz
mov
fadds
mov
and
mov
jg
cld
stc
or
add
adc
popl
in
lahf
aas
pop
push
insb
xchg
mov
xchg
push
fsubrp
test
xchg
lods
xchg
outsb
push
in
pop
jns
jl
aaa
push
stos
pop
push
in
push
in
inc
push
divps
xchg
fisttpll
test
call
jns
xchg
push
jne
loopne
adc
sub
sbb
xor
loopne
and
lahf
aas
dec
xchg
or
cmpsb
adc
cmovg
jns
popa
mov
cld
pop
rcll
xchg
add
lret
xchg
enter
push
inc
cmp
sub
sub
negb
adc
mov
shl
stos
adc
sbb
js
mov
xor
inc
pop
out
jmp
sub
mov
lret
in
jns
je
adc
xor
and
and
in
das
lahf
pushf
pop
jg
xchg
xchg
jge
xor
mov
jns
mov
adc
cld
fdivrl
mov
jns
fstl
lahf
dec
xor
leave
lds
imul
les
mov
aam
test
cld
mov
sbb
mov
add
or
mov
jns
sbb
mov
out
xor
insl
lret
ucomiss
xchg
pop
mov
out
cmp
pushf
pop
out
lahf
aas
es
pushf
and
or
push
push
mov
js
sbb
or
cmp
mov
lahf
aas
jg
xor
mov
xor
fidivl
jns
repnz
in
aam
jbe
sub
iret
add
mov
sbb
lcall
lahf
aas
jg
xchg
mov
test
test
dec
pop
cmp
icebp
in
iret
sub
je
stos
cmpsb
pop
js
sti
repnz
mov
cwtl
les
stc
lcall
push
fdivrp
push
and
dec
pop
pop
push
jg
dec
xor
aas
movb
mov
lahf
push
bound
repz
test
lods
dec
or
dec
jae
cld
xchg
cli
notl
sarb
fisttps
inc
add
in
aad
dec
fstpt
addr16
push
lock
repnz
arpl
int
or
out
push
cld
stc
xchg
mov
jmp
into
xchg
inc
in
jl
push
test
jg
xchg
repnz
fmull
xor
jmp
in
iret
aas
mov
pop
hlt
test
shr
add
jns
xchg
aas
andb
mov
loope
scas
mov
lret
push
dec
pop
cmp
mulb
xor
lahf
mov
cmpsl
lds
cmp
push
mov
mul
add
faddl
mov
fistpll
pop
ret
pop
dec
inc
mov
scas
insb
mov
arpl
xlat
das
scas
mov
and
das
add
push
icebp
ret
aas
jg
subb
sub
fildll
push
adc
repz
lahf
ret
dec
push
movsb
pop
jmp
std
xchg
aaa
js
sbb
es
es
in
mov
sub
dec
push
mov
mov
mov
jg
cld
stc
les
in
mov
xor
out
lahf
aas
insl
cmc
aam
add
icebp
sub
mov
rol
add
push
movsb
pushf
ss
enter
push
cmp
mov
lret
mov
mov
call
sub
scas
mov
xchg
xor
push
add
lret
lret
add
scas
decb
repnz
mov
addr16
or
pushl
jle
pop
aad
scas
loopne
iret
js,pn
rorl
iret
xchg
aas
sub
add
mov
and
ja
adc
outsb
iret
inc
pminub
fptan
lret
sbb
inc
inc
jg
xor
lods
mov
mov
sbb
mov
jbe
mov
cs
and
sarl
mov
repz
xchg
mov
xchg
sbb
adc
das
jg
cld
icebp
or
mov
cmpsb
movsl
jle
repnz
jg
cltd
jbe
pop
xor
scas
lock
out
jb
icebp
es
mov
lret
mov
add
out
loopw,pn
mov
scas
mov
adc
sti
cld
cmp
repnz
mov
xor
mov
rcrl
shll
xchg
sbb
sub
cmp
out
popf
imul
imul
pusha
test
mov
add
sbb
scas
mov
xor
gs
aaa
and
aad
nop
iret
push
mov
scas
pop
push
mov
scas
jecxz
xchg
jae
icebp
lcall
arpl
cwtl
aas
movsl
clc
adc
lock
in
pop
xchg
int
jp
out
mov
add
ss
and
adc
out
lahf
aas
mov
xor
push
xor
insb
pop
js
repz
xchg
add
inc
scas
cld
mov
in
mov
xor
push
pop
add
out
jl
mov
outsl
std
lcall
mov
lcall
stc
repz
lods
xchg
mov
sarb
daa
fs
mov
pop
jle
shlb
fidivrs
mov
pop
jns
xchg
out
js
jg
adc
adc
in
push
jecxz
sahf
jp
sbb
sti
pop
and
cmp
dec
lock
ds
push
lret
lock
lahf
aas
inc
sarl
sbb
xchg
cmpb
stc
repz
mov
sbb
pop
or
pop
pop
mov
mov
xchg
fpatan
out
lahf
ds
cmpsb
push
in
adc
mov
cld
stc
je
mov
test
in
jnp
jle
fbstp
lahf
aas
jb
jo
and
inc
rclb
cld
stc
repz
xchg
sbb
fiadds
das
aas
jg
mov
mov
adc
xchg
push
pop
jns
or
loop
inc
dec
xchg
hlt
sub
mov
in
adc
std
call
loop
cld
sbb
mov
out
push
int
push
fsubrs
pop
mov
iret
lahf
aas
jg
and
cmp
mov
push
cmp
cld
stc
repz
fiadds
test
in
xor
inc
das
mov
mov
adc
cmp
popa
push
aaa
pop
jns
xchg
insb
gs
push
or
cmp
in
and
push
fdivrp
sti
int3
xor
pop
stc
pop
stc
cli
adc
mov
addb
out
movsb
or
jb
dec
stc
pop
pop
rclb
jge
or
pop
jns
lret
out
hlt
in
mov
movq
push
je
das
push
pop
jns
in
mov
subb
xchg
outsl
icebp
scas
push
fdivs
jmp
cld
stc
test
jl
and
sbb
push
scas
sbb
mov
int3
jne
jmp
sbb
in
push
pop
xchg
lcall
add
push
pop
jns
sarl
and
scas
cmp
lret
lret
jg
mov
mov
mov
xlat
loop
fsubrl
cmovl
push
mov
mov
sahf
adc
pop
inc
rol
sbb
xchg
ret
scas
mov
mov
and
pop
mov
fdivr
out
shlb
or
lock
add
adc
push
or
jae
inc
jl
fdivrp
pop
lock
pop
pop
fwait
insb
aas
out
dec
aaa
fstp
das
push
push
fstpl
rcl
cmp
stc
and
lret
pop
negl
clc
lds
decb
cmp
fistps
ljmp
in
roll
outsl
sbb
push
loopne
lret
cmp
sub
in
or
call
jno
sbb
test
jns
xchg
push
lea
or
sbb
pop
test
sti
ss
pop
pop
sub
jns
aam
mov
xchg
jl
sbbb
inc
xor
aaa
icebp
lret
cmp
and
push
xlat
push
mov
aas
jg
cld
mov
cmp
fs
aas
ljmp
out
lahf
mov
repnz
mov
cld
stc
mov
sbb
mov
insb
or
stc
cmpsl
lahf
loope
cmpsb
mov
mov
xchg
push
fidivrs
lea
dec
outsl
or
movsl
mov
mov
in
pushf
iret
sub
and
iret
popf
pusha
lds
jns
xchg
push
mov
aas
rorl
in
test
in
push
pop
cld
xchg
mov
jle
mov
pop
jns
lcall
or
sbb
push
pop
jns
test
pop
pop
pop
in
scas
sub
xor
repnz
xorb
pushf
addr16
jns
sbb
pusha
outsl
or
xchg
jae
pop
imul
adc
out
mov
inc
cltd
dec
out
cmp
repz
nop
scas
adc
insl
sarb
aas
jg
cld
pop
lret
data16
inc
jno
movsb
loop
pop
test
repz
lahf
or
insl
add
xchg
test
mov
incb
mov
pop
repnz
aas
movsb
jl
jp
mov
sahf
rcrb
jle
jb
lds
cld
in
mov
stc
loop
repnz
cmovs
repnz
stos
inc
jae
ror
ds
jle
sbbb
adc
jl
mov
push
cmp
out
mov
pushf
mov
sub
stc
sub
mov
push
mov
xchg
gs
je
out
lds
lret
sub
cltd
xchg
in
mov
mul
dec
ds
push
dec
or
sbb
sahf
ret
push
das
xor
pop
cld
stc
repz
xor
fdiv
sbb
iret
lahf
aas
jg
or
jl
dec
pop
push
aas
mov
hlt
in
sbbb
mov
data16
stc
cld
popa
andb
adc
mov
pop
cmc
jno
mov
arpl
or
mov
sub
pop
sbb
inc
icebp
sti
adc
in
xlat
push
or
ljmp
shrl
xor
cld
ljmp
mov
mov
mull
mov
jecxz
repnz
stos
je
pushf
leave
scas
lahf
pop
loopne
ret
clc
repnz
sbb
dec
push
out
mov
xchg
je
dec
pop
jns
comiss
lcall
dec
movd
dec
cmc
jg
xor
inc
pop
sbb
adc
stos
mov
xchg
add
stc
cld
stc
repz
fdivrl
xlat
cwtl
rcll
add
xchg
lret
pop
out
jge
lret
push
mov
mov
pavgb
insb
push
inc
push
pop
fimull
movsl
das
scas
jp
int3
enter
fisubrs
xchg
aas
jg
sti
push
push
loopne
pop
pop
test
outsl
dec
ljmp
jns
sbb
das
adc
cld
stc
mov
xor
dec
mov
and
inc
dec
jo
mov
stc
aam
out
popa
adc
ja
mov
dec
xchg
mov
mov
mov
adc
ljmp
add
cld
dec
pop
mov
push
cmp
sbb
push
adc
jb
cli
inc
inc
cmc
sarb
push
cld
stc
repz
push
lds
repnz
test
push
daa
aas
jg
es
and
cmp
dec
inc
mov
cld
adc
fistps
push
push
mov
repnz
iret
aam
out
jmp
iret
movsb
xor
sbb
sti
dec
pop
dec
cmp
daa
cld
repnz
into
mov
cmpsb
or
repnz
mov
mov
dec
and
jg
jle
adc
jnp
push
inc
cmp
in
cmp
imul
cld
add
imulb
and
ror
lahf
aas
outsl
cmp
inc
sub
xor
mul
out
out
jmp
adc
cmp
incb
jb
cmpsb
pop
ds
push
aad
mov
das
adc
mov
test
cmp
pop
pop
pop
cwtl
setg
lods
pop
cmpsb
in
lret
sub
pop
fists
pop
int
sbb
testl
iret
fdivrs
lahf
aas
jg
push
inc
push
push
push
popl
movsl
mov
loopne
in
iret
pop
pushf
adcl
out
xor
repnz
mov
dec
lock
stc
lcall
push
pop
jns
adcb
sbb
in
mov
mov
cwtl
push
in
push
inc
aam
ljmp
lahf
pop
push
mov
gs
repz
leave
push
jb
xor
cmp
sub
mov
fcom
call
hlt
clc
in
mov
or
cmp
iret
sub
repnz
sbb
iret
push
xchg
sub
sbb
adc
lret
mov
xchg
xchg
jno
mov
in
dec
in
xchg
push
shrb
and
push
jo
cmp
and
lea
into
mov
jle
dec
roll
imul
in
sub
pop
pop
test
rcll
sbb
add
pop
clc
popf
leave
push
mov
stc
and
mov
nop
pushf
lds
sub
aas
jno
sti
icebp
jl
test
fdivrl
scas
mov
xor
or
cmpl
nop
fldenv
cltd
jnp
dec
jle
std
push
orl
lret
mov
xor
jle
cld
out
sarl
out
sub
subb
repnz
das
adc
mov
fisubs
sub
aaa
aad
fcomps
scas
mov
sbb
mov
cmp
fs
loop
aaa
mov
or
cld
stc
xor
out
add
int3
cwtl
xchg
nop
rclb
aad
lahf
aas
lret
loopne
mov
pop
lods
inc
scas
mov
insb
inc
push
cmp
and
out
das
sahf
iret
cmp
or
or
int
or
daa
jl
stc
fistpl
arpl
xor
ds
cld
stc
repz
cmpsb
jmp
push
addr16
ss
lahf
sub
out
insl
pop
cmc
xor
repz
sbb
repnz
jnp
adcb
test
or
loope
mov
movsb
outsl
fs
scas
jg
fmull
cld
stc
test
inc
xchg
sub
sti
xor
sti
out
lahf
aas
das
stos
cmpsl
sbb
aad
nop
and
cltd
into
clc
repnz
repz
mov
into
decl
mov
or
sub
sbb
pop
jns
xchg
loop
lcall
xchg
repnz
jns
xchg
push
sub
adc
sahf
and
inc
pop
mov
movsl
fcomps
sbb
jns
leave
scas
repz
lcall
fsts
pop
insl
lds
pop
pusha
ficoms
xchg
dec
sub
mov
insl
add
push
fistpll
insb
fildll
and
xchg
bound
mov
lret
push
and
lret
xchg
push
ret
xor
mov
lahf
ror
xchg
push
pop
cmpsl
pop
popa
cmp
sub
adc
sti
in
sub
iret
fisubs
repnz
leave
inc
cmc
cltd
out
lahf
mov
lret
arpl
imul
shrb
test
sbb
jle
inc
pop
push
xchg
inc
xchg
movsl
test
xchg
ja
lret
dec
stos
jns
and
inc
repz
lahf
mov
jno
push
inc
jle
push
jg
cld
stc
fdivs
xchg
dec
sbb
xchg
xor
push
iret
iret
lahf
aas
sahf
lock
repz
ret
stos
adc
div
in
es
call
out
mov
cmpl
cmp
repz
ret
ds
ss
xchg
leave
and
stc
fmulp
cmp
mov
push
jbe
sub
in
sub
dec
iret
lods
push
jns
mov
clc
xor
and
xchg
scas
jp
in
push
fimuls
or
inc
es
sarl
pop
pop
jns
pop
hlt
sbb
out
inc
in
lahf
pop
ds
pop
aad
xlat
push
jmp
iret
push
cmp
repnz
out
sub
pop
push
push
jge
aad
push
push
mov
idiv
cmpl
jecxz
mov
imul
lahf
bound
loopne
sbb
mov
jmp
outsl
fdivrl
sar
aad
xor
cmp
lds
cmp
pop
ds
sbb
push
jno
xchg
sahf
cmp
test
lahf
cs
lods
in
lods
nop
fildll
arpl
jle
sbb
or
scas
mov
sti
lods
out
aas
icebp
in
addb
sub
xor
test
push
mov
pop
jns
xchg
pop
jns
sub
cmc
pop
mov
int3
mov
xchg
jg
mov
into
xor
iret
lahf
cmpb
dec
test
or
por
pop
test
cld
stc
repz
push
mov
icebp
cmp
mov
or
xchg
aas
jg
js
cmp
cmc
adcb
lret
sbb
iret
sahf
dec
inc
das
lahf
aas
mov
jl
lock
cmp
repz
ret
scas
call
xchg
test
in
lcall
stc
insl
xorl
imul
repz
push
into
lret
in
xchg
mov
imul
lods
orl
xlat
dec
out
lahf
aas
mov
test
xor
jns
enter
sarb
lcall
in
push
pop
jl
inc
movsb
sbb
int
jns
xlat
out
inc
push
pop
fistpll
fisttpl
push
fisubrs
fdivrl
push
mov
das
push
pop
jns
adc
or
mov
mov
rclb
dec
andb
mov
mov
push
dec
push
sahf
xchg
jp
rep
int3
xor
jnp
or
jg
cld
push
push
negl
icebp
dec
leave
pop
repnz
lahf
leave
adc
iret
mov
outsl
lea
lret
cmc
aas
popf
iret
test
loopne
ljmp
repnz
mov
add
lret
fnsave
scas
mov
stc
repnz
inc
add
jle
ja
xchg
sub
cld
neg
xor
jnp
lahf
pop
jns
xchg
aas
lea
xchg
and
in
popa
jns
xchg
push
or
dec
aas
mov
enter
push
pop
lcall
mov
push
fidivrs
fidivrl
gs
xchg
cli
mov
lahf
icebp
in
xchg
sbb
add
push
stos
shr
test
loopne
in
stos
add
in
iret
popa
nop
mov
icebp
ret
dec
lock
andl
mov
iret
lahf
aas
ret
sub
push
xor
repz
dec
xor
push
test
lock
pushf
lahf
aas
jg
add
je
or
outsb
mov
popl
jmp
mov
push
in
sub
repz
lahf
ret
xchg
out
arpl
cmp
xor
push
cmp
lock
mov
out
scas
push
test
dec
cli
mov
add
adc
jmp
add
jecxz
in
repz
fnstcw
sub
jnp
cmp
xchg
in
jle
std
movsb
cli
cld
aaa
mov
and
das
gs
outsl
pop
xchg
lret
mov
xchg
push
pop
jns
inc
ds
andb
test
and
push
pop
push
pop
jns
push
mov
jl
or
lods
mov
aaa
cmc
in
adc
cmp
enter
xor
push
insl
jle
cmp
in
dec
pop
loope
push
adc
lods
xchg
mov
xchg
fs
andb
lret
lock
dec
outsl
xor
es
mov
adc
inc
push
shrb
jns
inc
faddp
cwtl
gs
jbe
sub
inc
bnd
nop
push
divl
rcll
xor
cmp
jns
mov
and
stos
jne
movsl
mov
das
lock
lock
test
lret
or
sub
mov
cltd
jno
jbe
jb
xchg
push
dec
fistpll
adc
mov
cmp
add
sbb
xchg
xchg
push
repnz
movsb
jae
outsl
hlt
pop
fbstp
ljmp
lds
ja
fimull
or
dec
push
inc
or
in
das
mov
imul
and
call
gs
dec
xchg
dec
adc
ret
pop
outsb
les
aas
sbb
std
lahf
out
test
lret
xchg
ja
push
rcr
cmp
icebp
pop
cmovnp
jns
fldl
pop
xchg
mov
dec
mov
xlat
mov
fisttps
adc
xor
mov
fstpl
inc
fidivrl
jg
add
inc
outsl
repz
mov
push
iret
xchg
pop
lods
lahf
aas
jg
dec
imul
fisubl
add
stc
repz
test
mov
jge
push
int3
sub
xor
jg
cld
pushf
ljmp
ja
inc
testl
iret
lahf
scas
stos
lcall
jmp
in
mov
stc
mov
inc
stc
xchg
repz
in
in
push
lea
insl
in
or
bound
push
pop
jns
push
mov
in
mov
dec
mov
jns
gs
jmp
lret
or
in
imul
sbb
pop
jns
xchg
fstl
push
adc
and
mov
imul
dec
inc
int3
cmp
dec
push
push
out
lahf
aas
imul
pop
xor
or
inc
cmpsl
and
in
dec
adc
rcr
pusha
mov
add
lret
inc
ds
mov
stc
repz
push
jg
mov
ret
mov
push
mov
fidivs
data16
iret
mov
repnz
add
nop
mov
xor
lret
pop
mov
push
or
mov
loope
xor
outsl
mov
inc
mov
cld
stc
xchg
mov
sub
add
lret
dec
cmp
movsb
and
jne
out
repz
rcll
mov
stos
mov
test
mov
push
fnstenv
sbb
mov
mov
pushl
lea
scas
mov
pop
mov
jnp
fcomp
test
mov
xor
mov
aas
adcb
lret
dec
in
popf
imul
fwait
xor
sbb
mov
xor
addb
scas
mov
hlt
mov
or
repnz
lret
cmp
in
or
das
mull
clc
scas
insb
lret
cmp
das
adc
jg
mov
jge
or
das
cmp
jno
scas
inc
mov
sub
jmp
ja
ja
push
fidivs
subb
scas
mov
jns
out
pop
clc
dec
add
ds
mov
mov
pop
cmpsl
jg
shll
sbb
mov
loope
fildll
mov
cld
cmpl
repz
fcmovne
lahf
aas
jg
add
fmulp
iret
cmp
jmp
mov
repz
shl
xor
sub
and
mov
push
fidivrs
sbb
in
int
jo
sub
jns
daa
fidivrl
mov
addr16
lea
pop
mov
hlt
in
arpl
les
mov
ja
scas
mov
stos
mov
lcall
cwtl
xchg
mov
repnz
or
or
jl
jg
cld
mov
loop
cmp
andb
outsb
or
scas
jb
repnz
jg
mov
and
aad
test
lret
sub
std
sub
jp
pop
ret
push
scas
dec
outsl
js
add
das
scas
mov
adc
mov
repnz
iret
mov
dec
mov
imull
xor
jg
mov
add
addr16
in
lret
lahf
push
xor
dec
cmp
mov
data16
jns
mov
cmp
jl
in
fistl
jns
fistl
mov
and
fiadds
cmpsb
add
or
addr16
es
xchg
int
or
jne
inc
ffreep
pop
shl
movsbl
xor
and
or
fisubs
mov
jns
xor
push
xchg
mov
dec
jmp
xor
addr16
leave
sahf
jg
cld
stc
or
shlb
mov
mov
dec
inc
cmpsb
xchg
in
lahf
aas
and
cwtl
jae
inc
lods
jo
xchg
add
pop
aam
pop
push
shl
jmp
mov
sub
aas
aas
xor
sub
mov
jle
cld
andb
test
inc
xchg
push
iret
lahf
aas
jg
inc
sub
adc
cld
or
jns
lret
out
cwtl
sahf
fisttpl
ud2
mov
lahf
mov
pop
movsb
test
sbb
daa
adc
jns
loope
add
ret
mov
cmp
xchg
inc
pop
addl
das
aas
jg
mov
inc
pop
mov
xor
pushf
pop
jns
jg
call
push
jmp
out
xchg
inc
or
push
push
adc
icebp
pushf
fiaddl
xchg
aas
jg
or
and
xor
stc
xchg
cmc
adc
pop
std
cmp
mov
jg
cld
test
pop
test
xchg
cmp
in
ja
imul
xchg
mov
cmp
cmp
and
jg
repz
mov
add
loope
push
xor
dec
add
pop
fbstp
dec
mov
cmp
cld
stc
movsb
sub
sub
mov
fistpl
push
sarl
adc
xchg
jecxz
push
jge
in
push
pop
jne
jns
orb
lret
cmc
test
push
pop
jns
mov
push
xchg
cwtl
shr
push
pop
jns
sbb
outsb
stos
mov
sbb
int
jb
in
ds
mov
cmp
loop
cli
mov
xchg
jbe
cld
stc
repz
pop
mov
xlat
das
ret
cld
inc
pop
jns
jae
iret
add
insl
faddp
mov
out
lods
mov
je
cmp
pop
aas
push
rcl
lret
iret
pusha
rolb
xchg
inc
push
sbb
in
lret
aas
jg
cld
fs
mov
jbe
mov
push
jns
cld
repz
lahf
stc
je
aaa
in
xchg
pop
inc
sbb
cld
cld
stc
ljmp
mov
push
and
jle
into
push
data16
xchg
insb
aaa
pop
jns
xchg
aas
pop
sbb
mov
adc
adc
enter
xchg
push
cmpsb
fsubrs
pop
dec
out
iret
andb
inc
mov
mov
inc
fdivrl
rclb
lret
jmp
ficoml
in
out
dec
in
stc
sbb
jne
mov
clc
sub
test
aas
jo
repz
lods
movsb
bound
sbb
lea
aas
jg
cld
cmp
jnp
rorl
mov
in
lret
lahf
jbe
fs
bswap
add
cmp
push
pop
jns
push
lea
dec
dec
and
enter
pop
jns
mov
jmp
push
pop
mov
add
das
jg
imulb
pop
dec
rclb
add
xchg
push
pop
jns
xchg
mov
mov
popa
bound
in
xchg
or
subl
mov
in
push
daa
nop
ds
pop
mov
mov
mov
pushf
or
outsl
scas
adc
imul
movsl
xor
xchg
ja
jg
sbb
das
sub
sub
and
jns
ret
movsb
jecxz
cwtl
and
and
adc
in
shrb
mov
idiv
fwait
pop
ja
in
push
xchg
mov
adc
fcoms
mov
pop
pop
hlt
mov
pop
lods
cmpl
iret
mov
lret
out
lahf
adc
inc
push
xor
mov
jp
xchg
sub
lock
mov
xorl
sub
mov
add
pop
jae
lret
call
cld
pop
xor
loopne
inc
lret
pop
dec
jmp
mov
mov
mov
pop
jns
jle
push
clc
inc
dec
inc
xchg
in
insb
jb
fstp
lcall
scas
push
push
jecxz
cld
ret
arpl
lcall
fiadds
cld
outsb
jo
xchg
mov
call
mov
out
mov
dec
mov
pop
jns
pushf
insb
pushf
lahf
fstpl
pop
sbb
js
inc
cmc
out
in
mov
cli
sbb
xchg
je
cld
stc
aaa
into
or
jp
int3
std
push
add
lods
pop
cmp
das
in
push
jecxz
iret
out
cli
jno
in
pop
xchg
mov
push
cld
stc
repz
mov
clc
push
mov
jg
jl
mov
lock
lret
orb
lret
inc
xchg
push
mov
test
sub
sarb
cmp
clc
repnz
mov
sub
daa
mov
outsb
scas
daa
hlt
lret
out
shlb
sbb
jge
mov
test
fnsave
ja
jle
push
sbb
gs
adc
xchg
insl
pop
sub
mov
int3
or
lahf
rcrb
push
sarb
int3
in
push
fmulp
fbld
mov
xchg
push
pop
jns
insl
sub
mov
add
xor
jns
popf
mov
int
xchg
sub
jae
repz
out
push
sub
scas
cmp
ja
loopne
mov
lds
adc
rcr
pop
repz
lahf
loop
push
add
movsb
idivb
repnz
mov
int
sahf
out
iret
lahf
hlt
lret
sub
aad
das
jp
fs
dec
mov
repnz
xchg
stos
mov
stc
ret
fnstcw
push
stos
pop
pop
pop
fdivs
aas
jg
jle
pop
in
add
in
adc
mov
out
xor
insl
and
mov
xchg
sub
push
mov
repz
pop
scas
mov
add
fs
and
xor
inc
test
pop
xchg
jg
aas
jg
mul
inc
jg
sti
mov
push
mov
lods
and
out
xchg
mov
mov
add
mov
aas
sub
mov
xchg
push
xchg
fcmovnu
or
mov
jg
cld
stc
loope
inc
in
in
xorl
imul
and
cmp
mov
jg
xchg
outsb
pop
xor
imul
iret
push
jle
sub
jp
pop
lret
mov
jmp
xlat
mov
xchg
cld
jb
mov
in
or
outsb
xchg
dec
mov
push
mov
loop
mov
ja
mov
sub
iret
das
loop
dec
pop
mov
je
mov
dec
jg
push
nop
mov
cmc
push
stc
repz
push
sub
fs
fs
mov
mov
sub
pop
sub
daa
ja
mov
xchg
xchg
inc
mov
hlt
sahf
in
lods
pop
scas
push
hlt
sbb
cmpsb
mov
out
mov
push
lock
pop
adc
pushf
sub
insl
iret
lahf
jg
ds
setp
or
xchg
jg
in
out
call
out
imul
cld
or
mov
mov
sbb
jg
sti
loopne
stc
pop
cmc
iret
imul
movsb
inc
mov
and
notl
movsb
fdivr
add
shrl
push
pop
jns
lds
popa
cmp
adc
push
pop
jns
or
sbbl
push
movsb
pop
jns
xchg
add
sbb
push
sbb
call
lret
xchg
push
lock
mov
outsb
or
aas
iret
inc
cmp
inc
test
lret
xchg
outsl
int
push
outsl
pop
xor
ja
lret
pop
inc
aad
sub
outsb
dec
adc
push
out
mov
xorb
mov
lahf
mov
adc
insb
cwtl
mov
nop
xchg
hlt
lods
push
lock
shlb
sub
xor
mov
jp
inc
arpl
shr
and
and
mov
mov
jno
mov
dec
rolb
sbbb
dec
fcompl
jmp
cmpsb
xchg
lahf
aas
jg
cli
dec
adcb
pop
pop
mov
fnsave
pop
mov
les
lret
jge
mov
aam
iret
mov
sub
and
mov
jp
or
or
fisttpll
jg
cld
ret
in
mov
hlt
mov
or
rcrl
out
lahf
or
jl
arpl
mov
aas
icebp
testl
push
adc
inc
or
insl
xchg
std
cmpsb
out
push
or
mov
push
mov
push
add
fsubp
punpckhbw
mov
add
stc
repz
je
movl
xchg
push
iret
mov
pop
or
sub
stc
repz
call
into
mov
shll
lahf
aas
jg
dec
sbb
mov
mov
test
jno
repz
ds
jb
xchg
je
pop
push
test
aaa
mov
stc
mov
adc
mov
test
test
mov
ss
cmpsb
dec
aad
loop
out
lahf
aas
outsb
loopne
mov
fisubrs
aas
cld
stc
repz
xchg
or
push
scas
into
cli
dec
mov
pop
xor
lahf
aas
jg
and
or
mov
repz
es
rcrl
sti
pop
data16
or
pop
xchg
aas
jg
adc
adc
mov
push
pushl
jae
repz
pop
mov
jns
jle
fstpl
pop
jl
stc
repz
cmpsl
push
cltd
xor
pop
enter
mov
repz
inc
and
lahf
bound
aam
jns
xchg
imul
jle
and
fcoms
pop
or
jnp
cltd
and
repnz
sbb
xchg
scas
dec
icebp
add
lret
push
sbb
jl
cld
sahf
jp
shl
inc
dec
mov
sbb
outsl
xchg
mov
dec
inc
mov
nop
sub
daa
jne
pop
xor
push
xor
jg
cld
stc
inc
inc
mov
sub
shl
jle
and
stos
lret
iret
lahf
aas
xchg
stos
mov
insb
lret
lret
repnz
jle
stos
lahf
mov
inc
adc
mov
repnz
and
xchg
adc
das
sub
jmp
call
inc
adc
dec
loope
sarb
mov
arpl
das
int3
sahf
cmp
ljmp
cmpsl
lds
iret
lahf
aas
fs
shll
xchg
adc
cld
stc
repz
sub
add
sahf
pusha
pop
pop
push
pop
jle
pop
mov
or
iret
lahf
jg
mov
outsb
cli
clc
stc
stc
mov
sahf
dec
push
iret
call
gs
addr16
dec
stos
dec
aad
rcrb
pop
popa
mov
loop
pusha
mov
aam
fmul
ja
pop
jns
push
test
mov
outsl
ror
pop
jns
xchg
add
dec
pop
sub
jnp
dec
or
sbbb
lret
jg
repnz
cmc
sbb
das
das
shrl
in
inc
push
and
cmp
push
adc
call
inc
jmp
sub
xchg
in
or
jg
stc
xor
repnz
stos
jg
incb
jle
into
mov
push
ficomps
pop
es
lret
push
sahf
pop
jns
xchg
adc
xor
xchg
push
mov
jle
lods
mov
lret
mov
addl
aas
decl
mov
mov
in
jne
xor
cltd
outsl
out
lahf
aas
sub
cld
stc
repz
jbe
cltd
dec
lahf
adc
sbb
adc
sub
jg
sub
and
inc
scas
fidivrl
mov
jecxz
fistpll
mov
mov
dec
lcall
xchg
iret
lahf
aas
fcoms
mov
jb
and
aas
xchg
push
push
ljmp
repz
jo
mov
sub
imul
sbb
or
xlat
sub
iret
mov
or
mov
dec
scas
mov
adc
mov
sbbb
jge
cmpb
lret
pop
add
mov
adc
mov
dec
pop
cmp
xor
in
xor
nop
pop
pop
out
notb
lahf
aas
pop
pop
dec
stc
leave
mov
es
repz
shlb
loop
gs
idivl
cld
stc
in
mov
mov
roll
jbe
mov
rol
das
lahf
aas
jge
jne
sub
inc
cmpsb
and
in
pop
into
jle
add
fnstcw
mov
lret
jb
or
push
adc
pop
out
xchg
ljmp
mov
sub
inc
pop
jge
lahf
aas
aas
scas
mov
lret
fdivl
cwtl
sub
repz
loope
mov
lret
ret
jg
cld
stc
ljmp
jl
sub
cli
pop
jg
fistpl
add
movsb
lcall
vmread
loop
iret
lahf
inc
int3
fbstp
leave
test
mov
jg
inc
jle
cmp
pop
dec
aad
lret
xchg
out
lahf
sbb
rcrl
cmovge
ja
shr
inc
std
mov
or
in
adc
jo
cwtl
sbb
push
xor
add
xchg
ja
out
andb
sub
xchg
jle
jge
dec
mov
pop
stc
add
xchg
cmp
lahf
aas
jg
ljmp
adc
mov
sbb
hlt
lret
out
sub
and
jno
jnp
pop
mov
scas
inc
out
and
fisubrs
les
stos
lcall
push
or
das
inc
xchg
insb
xchg
in
push
pop
mov
fstpt
arpl
into
popf
inc
xor
popf
or
cmp
rolb
dec
and
or
pop
adc
ljmp
mov
insl
mov
aas
sbb
cmp
jp
xlat
lret
stc
dec
cld
push
cli
in
jnp
fiadds
add
push
lds
ficoml
icebp
add
movsl
pop
jle
mov
sbb
repnz
incl
shrl
xor
jns
popf
loop
repnz
repz
xchg
push
pop
and
out
out
daa
aam
add
das
push
pop
jns
push
sarb
dec
push
lahf
ret
movsl
outsb
pop
ja
out
inc
pop
cmc
icebp
in
cmp
scas
das
or
jmp
lret
mov
lock
jl
mov
repnz
jl
mov
outsb
leave
insl
jle
sub
and
shrb
and
repnz
les
adc
mov
mov
mov
rclb
stc
punpckhbw
pushf
sbb
or
subb
enter
jle
and
mov
xlat
dec
mov
movsb
mov
in
sub
fs
or
fbld
push
clc
cmpsl
lea
into
jno
push
in
xchg
lahf
dec
cwtl
jge
scas
inc
aas
mov
stos
add
pop
inc
pop
add
mov
aam
cmp
pop
pop
jns
loope
mov
push
push
xchg
cmp
out
cmp
clc
add
xor
jg
jle
enter
adc
mov
pop
jle
das
stos
mov
daa
sti
in
mov
lods
xor
xchg
les
inc
pop
iret
lret
sub
push
stos
dec
lret
xor
scas
scas
mov
and
cmp
je
outsb
jg
and
cmp
repnz
sbb
ds
jo
push
pushl
stc
mov
cld
daa
cli
dec
out
xchg
iret
lahf
ror
mov
mov
inc
cmpsb
inc
idivl
loopne
in
jge
in
pop
mov
xor
scas
mov
xchg
stos
push
pop
pop
xchg
jno
sbb
lret
and
pusha
mov
mov
in
add
push
mov
lret
inc
jl
repnz
int3
push
scas
out
aam
cs
ret
jge
mov
inc
iret
sub
out
ret
scas
sarb
into
pop
jg
cld
stc
cmp
pop
mov
pop
xchg
shrl
outsl
mov
pop
jle
clc
scas
movsb
xchg
aas
sub
mov
repz
inc
jo
mov
mov
das
cltd
aaa
ffreep
jg
in
or
mov
repnz
xchg
ds
cwtl
sbb
adc
xchg
pushf
lret
mov
out
pop
in
inc
cmp
das
scas
mov
fstpt
and
loopne
cmc
cli
in
mov
daa
cmc
inc
lods
cmp
jge
lcall
xor
push
pusha
stc
jle
ret
jl
rclb
jg
sub
pop
outsl
test
in
jg
outsl
mov
dec
sbb
mov
stc
pop
je
jl
push
fs
pop
mov
and
adc
rorb
mov
jge
fbld
stc
aas
jg
cld
cmp
aad
shrb
xor
adc
lret
out
lahf
xchg
adc
dec
xorl
sub
mov
sti
int
scas
or
push
cs
sub
pop
scas
add
xchg
lret
mov
cmpsb
mov
imul
dec
xchg
mov
in
in
mov
lahf
push
mov
popa
push
pop
jns
sub
mov
inc
jbe
fwait
push
in
rcr
dec
xor
out
mov
loop
cmovg
push
loope
cmp
adc
les
lods
adc
mov
repz
outsl
pop
jns
mov
mov
inc
pusha
lock
inc
jo
incl
repnz
bnd
cmp
imul
mov
scas
out
sbb
ret
jle
push
ljmp
xor
xlat
divl
stc
repz
lods
dec
shrb
xchg
xor
aas
jg
outsl
lds
pop
scas
dec
inc
in
xor
addl
jge
stc
shll
or
inc
lahf
aas
jg
into
sbb
stc
shlb
jecxz
inc
dec
out
xchg
out
mov
cld
stc
repz
leave
cmp
sub
inc
mov
mov
out
dec
adc
nop
inc
xor
dec
fistpl
icebp
jg
lahf
aas
jg
inc
idivl
xor
push
cli
ds
dec
aas
ret
repz
or
push
xor
mov
xchg
jg,pt
cld
aad
push
sbb
mov
jmp
sbb
mov
and
arpl
pop
inc
xor
iret
cvtps2pi
dec
pop
push
or
sub
mov
clc
enter
xchg
inc
out
push
pop
scas
mov
stos
fbstp
in
movsb
movsl
lahf
push
pop
jns
out
orb
cmp
loopne
fidivl
das
shrb
mov
das
mov
and
pop
test
push
adc
inc
cmp
psrad
scas
inc
inc
inc
pushl
adc
and
lds
sub
stc
fpatan
push
adc
stc
jp
mov
pop
mov
push
dec
fsubp
sahf
loop
sarb
lret
xchg
push
xchg
dec
xchg
dec
andl
mov
dec
sub
fistpll
movsl
getsec
pop
sti
and
pop
out
sahf
rclb
lret
lret
push
aad
push
sub
mov
in
das
scas
mov
cwtl
xor
mov
mov
loopne
repnz
mov
jb
int
xchg
mov
jecxz
sub
int
data16
cld
jo
cli
in
imul
sub
scas
sbb
xchg
jg
cld
sarl
adc
push
shlb
hlt
lea
aas
es
outsl
scas
dec
jp
sub
dec
ja
fdivr
jbe
or
sti
pop
xor
cld
adc
fsub
bsf
pop
loope
xor
sub
jle
mov
jmp
push
xchg
and
mov
xor
or
inc
das
mov
mov
sub
fucompp
enter
inc
loope
mov
dec
xchg
or
insb
iret
push
lahf
pop
or
cmc
in
sahf
sahf
cmpsb
cmpl
rclb
outsb
xchg
inc
std
pop
sub
icebp
repnz
out
pop
xchg
ret
rorb
ljmp
sub
pop
inc
mov
jns
ljmp
aam
fistl
in
and
jns
pop
enter
mov
xor
lea
xchg
push
pop
cmpsb
scas
mov
mov
ja
dec
jg
xchg
test
pop
into
xor
inc
inc
cld
shlb
aam
sbb
jg
ljmp
pop
inc
or
repnz
out
adc
mov
dec
cld
add
jbe
xchg
pushf
in
sahf
jg
cld
stc
imul
scas
push
fmull
and
mov
push
mov
call
cmp
sbb
dec
push
sar
repz
cwtl
popa
mov
outsl
xchg
mov
int3
push
mov
inc
mov
cli
or
jg,pt
cld
stc
sub
mov
and
mov
leave
les
xchg
lahf
aas
flds
adc
sub
sub
das
movsb
pop
ucomiss
xor
add
inc
pop
or
mov
pop
inc
cld
stc
repz
pop
xchg
shlb
sub
lahf
aas
jg
movsl
scas
popf
movb
cmp
jecxz
iret
mov
push
cmc
idivl
outsb
dec
mov
in
lahf
xchg
not
cmp
cmpsl
mov
or
stos
and
scas
insl
cld
repnz
daa
aam
mov
lret
lcall
jle
and
jb
popf
mov
xchg
cmp
in
ja
xor
ja
in
fs
cmp
xchg
push
pop
loopne
lds
push
int
adc
push
pop
jns
loopne
mov
mov
js
push
pop
jns
dec
push
roll
imulb
sbb
xchg
jae
sahf
cli
jb
xchg
pusha
loope
sub
mov
jno
imul
cmp
fstpt
mul
iret
lahf
aas
jg
lds
jge
sbb
repz
loop
adc
ljmp
jmp
loopne
mov
movsb
out
lcall
mov
es
and
repz
std
iret
loop
fcmovu
arpl
orb
cld
cld
frstpm(287
frstor
pop
mov
jg
fildll
subl
roll
xchg
push
test
dec
ret
push
mov
repnz
repz
data16
ja
jns
jnp
lret
cld
sti
int3
js
iret
jmp
pop
cmp
sarb
jg
insl
ds
jecxz
movsb
xor
call
pop
addr16
test
pushf
push
cmp
hlt
jbe
inc
push
mov
sub
dec
xchg
or
xchg
iret
lahf
aas
mov
mov
das
iret
lahf
jg
or
xchg
stos
sub
inc
cwtl
cld
stc
repz
jge
mov
in
imul
dec
mov
push
sub
lea
sbb
mov
adc
hlt
and
hlt
cmp
scas
mov
push
mov
dec
mov
jmp
lret
dec
popf
cs
cld
stc
add
fimuls
adc
movsl
rcll
lock
jo
sub
in
lahf
in
mov
mov
pop
sub
pop
jns
into
scas
shll
adc
std
mov
or
pop
mov
fistpll
mov
dec
jg
mov
sbb
mov
das
mov
push
sub
aas
mov
or
js
hlt
and
ds
cld
stc
repz
nop
inc
fwait
add
out
sub
aas
jg
push
lds
mov
mov
je
pop
test
mov
movsl
inc
into
bound
push
sub
andb
iret
lahf
aas
sbb
outsb
dec
js
loopne
std
repnz
repz
lds
xchg
push
ficomps
popa
aad
pop
adc
in
lahf
mov
adc
xchg
sub
adc
dec
mov
cmp
xchg
pop
lock
xchg
mov
stc
repz
dec
jbe
hlt
incb
aas
jg
inc
out
add
pop
jl
or
inc
in
iret
lahf
and
gs
addb
lret
icebp
jle
push
jg
shlb
lods
scas
jne
aaa
add
mov
mov
dec
out
xchg
mov
aas
mov
loopne
shrl
test
dec
repnz
int3
arpl
jnp
sub
test
lock
andb
scas
mov
inc
into
xor
ret
add
mov
sub
push
imul
outsl
sub
les
imul
out
adc
out
jmp
dec
add
jae
call
dec
pop
or
mov
jns
mov
movntps
jge
das
iret
and
repnz
lret
sub
mov
fadds
mov
inc
cmp
mov
out
pop
incb
inc
mov
stc
xchg
cmc
mov
dec
enter
test
aas
jg
jp
je
jns
inc
push
into
dec
aas
jge
add
or
mov
repz
dec
sub
cmpb
pushf
aas
aas
cmpb
aas
push
dec
xchg
fistpl
lret
out
lahf
out
insl
inc
xchg
adc
jns
pop
jns
jecxz
js
pop
xchg
push
xor
xchg
or
sarb
or
jb
xchg
loopne
sub
xchg
repz
jnp
mov
mov
jg
or
and
jnp
fs
lahf
aas
sbb
mov
je
jl
stc
repz
loop
in
adc
nop
sbb
mov
testb
stc
mov
sbb
push
pop
jns
xchg
push
and
loope
fadd
das
lock
xchg
xchg
inc
cmp
mov
nop
push
mov
out
xchg
push
cwtl
cmp
ficoml
add
pop
cld
rorl
xchg
jae
lcall
je
repnz
sub
adc
enter
jge
lret
jle
or
xchg
aas
sbb
lahf
mov
sub
jge
call
mov
scas
mov
inc
lods
sub
pushf
movsb
outsb
out
repnz
shrb
negb
jg
jle
mov
orb
sub
cmp
in
out
lret
jns
and
daa
fbstp
outsb
cld
cld
jno
cmpsb
cmp
pop
dec
movsb
or
xchg
ja
jl
sbb
xor
cmc
jnp
push
and
inc
sub
data16
dec
xchg
fnsave
mov
test
inc
dec
xchg
push
pop
jns
sahf
shlb
jne
sbb
orb
xchg
ds
lret
pop
subl
add
xchg
push
faddl
hlt
push
or
in
mov
mov
jo,pn
adc
push
mov
lret
mov
pop
jp
inc
mov
sub
dec
das
scas
mov
add
mov
rcrb
cltd
pop
out
mov
or
mov
movsb
shrb
call
xor
lret
xchg
cmp
sub
cmp
ds
divl
ja
int
and
add
test
mov
jle
mov
push
mov
inc
je
sbb
out
push
xchg
dec
lods
test
scas
mov
lahf
ret
sub
inc
add
pop
mov
out
dec
jecxz
mov
out
xchg
lret
iret
dec
mov
stos
inc
out
xchg
insl
adc
scas
mov
cmp
movsb
mov
push
mov
sub
popl
mov
lret
out
pop
mov
iret
sti
fmulp
dec
cld
adc
repnz
stos
ss
fcomps
jg
ficomps
inc
jns
push
test
and
das
mov
push
push
cmpsb
out
ror
jmp
lea
repz
ret
pop
icebp
ljmp
and
cmp
stc
enter
lahf
xor
xor
scas
mov
mov
mov
xchg
fwait
jns
push
mov
lret
cmc
or
je
push
push
mov
dec
pop
push
xchg
insb
enter
push
jle
repnz
push
adc
cltd
inc
and
das
aas
es
xor
sub
iret
lahf
pop
adc
adc
mov
dec
jecxz
inc
sub
cmp
jg
cld
stc
mov
aam
lods
in
neg
jne
mov
pop
jo
jg
push
mov
loopne
jb
in
xor
and
mov
mov
lock
pop
ds
dec
cmp
inc
outsb
enter
out
sub
lea
jg
cld
stc
repnz
mov
aaa
or
mov
aas
test
cmc
repnz
pop
clc
jge
stc
idiv
repnz
pop
cltd
imul
cli
jmp
pop
es
sti
iret
scas
aaa
inc
lret
push
iret
lahf
aas
aas
mov
fsubs
adc
out
enter
jp
dec
jno
push
sub
mov
in
push
aaa
mov
dec
mov
shlb
jecxz
idivl
cld
stc
repz
enter
add
push
lods
mov
lret
cmp
mov
out
mov
inc
fists
jno
pop
cld
cld
stc
repz
repnz
cltd
les
dec
ret
mov
clc
mov
dec
mov
lahf
aas
mov
stos
jecxz
cmpsl
jne
mov
repz
sub
test
xchg
out
fisubs
fs
jg
cld
sub
sbb
mov
cmpsl
movsb
lods
fwait
jno
repz
lahf
gs
xor
cwtl
and
adc
cld
stc
incl
lahf
cmpsl
xor
push
pop
inc
jge
das
aas
adc
ds
pop
ljmp
cmpb
repnz
push
imul
push
cmc
adc
lret
sub
nop
dec
in
addb
scas
scas
mov
mov
xchg
pop
jg
cld
ret
mov
or
std
dec
jecxz
je
nop
repnz
ds
xchg
mov
push
and
and
sti
pop
fisubs
jg
mov
cld
sti
jb
rorl
scas
xchg
je
out
imul
jle
cs
mov
pop
jge
iret
pop
movsl
pop
mov
cmc
mov
jle
add
repz
jne
cmpsl
xchg
sub
sub
sbb
lea
sbb
mov
xor
lds
pop
dec
repz
pop
push
movswl
aaa
lahf
ret
cs
iret
out
fildll
mov
push
pusha
insb
loop
inc
lahf
push
pop
jns
push
mov
pop
ljmp
in
pop
jnp
sub
lods
jnp
roll
cmp
fstl
es
jae
call
scas
pop
push
pop
jns
outsl
add
std
orb
nop
outsb
and
in
sub
dec
scas
sbb
xchg
xor
in
push
jmp
fsubs
push
stc
rorb
ds
cld
stc
mov
sub
mulb
fs
ja
jg
mov
xor
insb
mov
das
std
jb
jo
adc
orl
testl
mov
jae
push
pop
pop
js
das
lahf
aas
jg
repz
jns
fnstsw
mov
mov
addr16
xchg
das
push
pop
daa
xchg
in
jl
repz
nop
fsts
mov
cs
or
jle
push
mov
jg
cld
mov
aam
xor
stos
inc
dec
mov
cmpss
nop
inc
bound
mov
ds
lods
adc
or
and
and
stos
dec
outsl
aaa
std
and
mov
nop
cwtl
and
scas
mov
or
jl
xchg
iret
lahf
jg
rorb
push
clc
popa
cmp
adc
stc
repz
cltd
div
jne
xor
push
sub
push
adc
sbb
cwtl
sub
lret
push
cmpl
iret
lahf
jg
aaa
imul
out
rorb
mov
xchg
cld
mov
inc
mov
bound
movsl
pop
jg,pt
aaa
xchg
insb
adc
in
das
mov
hlt
push
out
loopne
cld
stc
rep
dec
inc
stc
mov
xor
mov
comiss
jp
into
dec
movswl
xor
xchg
sbb
xor
and
jg
cld
stc
inc
cmc
lock
adcb
lcall
iret
lahf
aas
xchg
lret
cs
pusha
pusha
dec
jae
dec
in
imul
and
scas
mov
mov
jg
mov
sub
int3
data16
push
std
insl
mov
sahf
pop
inc
orl
mov
push
push
lret
popa
movsb
idivb
out
lahf
aas
sbb
push
scas
mov
pop
jns
lret
jae
add
mov
les
fists
mov
mov
pop
insl
std
fwait
movups
pop
gs
sub
push
cmpsb
jle
repnz
or
gs
xor
inc
adc
lahf
aas
jg
outsb
jecxz
imul
pop
in
xchg
repz
and
jge
repz
mov
jle
and
jne
ds
cld
sbb
inc
dec
daa
dec
fwait
xor
iret
lahf
aas
jg
xor
das
sub
scas
int3
xor
stc
repz
mov
jle
jnp
mov
jns
test
jmp
inc
or
pop
mov
mov
inc
sarb
pop
jns
lret
out
push
das
test
inc
sbb
xor
jns
xchg
push
int3
push
jb
hlt
hlt
mov
shrb
pop
js
mov
stos
cltd
sub
dec
xchg
repnz
or
stc
xor
xchg
popf
mov
scas
mov
sbb
push
jge
adc
sar
and
mov
and
jle
outsl
cld
aas
jg
jle
andb
mov
mov
packsswb
lock
gs
push
jbe
sub
enter
jle
sub
sub
pop
or
sbb
loopne
push
mov
mov
xor
mov
es
negl
in
out
dec
xor
lea
bnd
or
in
push
movsl
mov
in
loopne
faddl
xchg
push
pop
and
mov
mov
mov
jns
rorl
or
xor
addr16
adc
out
lahf
xor
adc
jne
mov
add
cld
stc
and
repz
scas
test
out
lahf
aas
loop
scas
jge
jno
xor
cld
stc
repz
inc
call
bound
int3
mov
stc
inc
das
jg
ret
mov
sbb
jl
add
mov
mov
xchg
ja
dec
push
push
jg
add
sub
shl
xchg
push
pop
jns
and
pop
cld
ljmp
fs
pop
jns
ss
fsubrl
cs
fwait
mov
loop
in
jg
dec
pop
aas
out
outsl
sub
mov
jl
cld
push
addr16
ret
scas
arpl
stos
sub
fbld
stos
ds
std
adc
rcrb
adc
inc
sub
push
and
repnz
fsts
inc
push
ss
repnz
lahf
mov
lds
scas
loope
mov
scas
mov
pop
in
jmp
or
scas
mov
int
cmp
xchg
sub
or
scas
mov
pop
xor
sbb
xor
sub
lock
cmc
sub
jb
xor
push
pushf
repnz
scas
mov
imul
lret
scas
mov
dec
jg
bound
int3
jmp
test
test
movsl
mov
das
xchg
push
pop
jns
sub
subl
mov
jns
insb
or
shlb
xor
ss
fstl
pop
pop
jp
xor
jmp
jg
dec
cld
lods
loopne
sahf
sbb
xchg
jp
sbb
das
lahf
aas
adc
bound
jge
pop
in
xchg
xlat
into
stc
stos
pop
mov
xor
sti
nop
sti
push
in
or
stc
test
jle
fdivrs
or
aas
jg
cld
outsl
es
cmpsb
inc
xchg
or
repz
lahf
mov
xchg
outsl
mov
fldcw
std
repnz
lods
call
mov
dec
in
in
ja
push
mov
mov
daa
push
lds
lahf
cmpsl
scas
xchg
push
pop
jns
xchg
and
mov
sbb
pop
jns
or
adc
ret
stos
stos
push
sbb
pop
jns
xchg
or
and
sbb
insl
xchg
aad
jns
xchg
push
scas
loopne
and
push
dec
cmovo
ljmp
push
inc
lret
push
mov
rolb
sub
in
jecxz
mov
repz
cmp
rcr
fwait
movsb
cltd
dec
stc
aas
jg
cld
in
jnp
sub
enter
dec
jb
out
lahf
jp
dec
jbe
pop
or
mov
outsl
loop
lods
jge
xor
cmp
sub
inc
push
aas
out
dec
nop
cmp
repz
jecxz
inc
inc
mov
test
mov
hlt
dec
mov
rcr
jl
lahf
aas
jg
adc
mov
or
fidivl
xchg
add
jmp
jae
cld
fisttpl
dec
xor
xor
mov
es
inc
les
pop
ds
icebp
and
adc
adc
cli
adc
outsl
lahf
pop
push
adc
jl
push
dec
movsb
int
mov
in
jno
repz
int
loope
xchg
scas
jp
repz
fildll
ret
jge
fdiv
jae
or
jns
xchg
ja
mov
loop
pop
and
add
jg
insl
jo
scas
es
jo
inc
jns
fstl
das
dec
cmpsl
sti
jmp
ja
fidivrs
nop
leave
jg
lcall
mov
in
xchg
mov
in
seta
lods
adc
pop
popf
in
ja
stc
imul
cmpl
imul
cli
mov
jg
sub
mov
aas
jmp
in
xchg
aas
or
or
or
sbb
nop
scas
mov
add
sbb
jmp
pushf
inc
aaa
int
jb
ljmp
nop
adc
out
lahf
push
ja
es
shl
mov
fidivrs
inc
dec
loopne
jo
push
insb
lahf
mov
in
push
mov
xchg
push
sbb
and
pop
jns
and
outsl
ja
pop
cmpl
sbb
mov
pop
jns
nop
fiadds
andb
out
ja
inc
pop
js
jb
xchg
int3
inc
fdivr
fucom
mov
mov
into
pop
fimuls
push
jmp
stos
mov
fdivr
movsb
xchg
pop
mov
scas
push
dec
sub
in
ja
outsl
push
cs
and
test
sbb
push
cmp
scas
cmpsl
cmc
call
mov
xchg
fsts
sahf
sahf
in
call
rep
call
jb
dec
stos
out
mov
cmpsb
jecxz
lret
andl
int
mov
aam
insb
stc
stc
repz
push
sbb
sbb
xchg
push
ficomps
dec
stc
loop
cmp
jae
push
pop
jns
adc
fld
xlat
mull
jb
xchg
adc
dec
ret
rep
popa
shl
lret
pusha
movsl
imul
xchg
lea
dec
pushl
xchg
ja
lahf
sbbl
pop
testl
xor
sbb
mov
or
cmp
jne
ljmp
cli
in
repnz
cmp
xor
dec
jge
repz
dec
pop
fstl
cmp
mov
add
iret
mov
sti
negl
add
ja
pusha
jnp
gs
mov
mov
movsb
test
sub
adc
xchg
mov
out
loop
fsubrs
lret
adcl
cwtl
fwait
in
mov
inc
sub
scas
in
add
call
mov
fstps
mov
dec
mov
lahf
aas
push
push
mov
adc
repz
jp
mov
dec
iret
fs
jmp
xchg
push
fidivrs
inc
xchg
setle
fucom
jae
clc
push
fldt
out
lock
jmp
pop
push
inc
inc
nop
jp,pn
repnz
xchg
xchg
test
mov
pop
sub
cmp
imul
xchg
inc
pop
pop
jns
cmp
add
repz
lahf
ljmp
inc
or
out
lea
scas
mov
mov
stc
repz
push
jecxz
pop
movsl
lea
add
jg
cld
fidivl
arpl
mov
add
fcoml
jg
das
lahf
mov
mov
mov
out
lahf
aas
dec
mov
or
and
emms
mov
add
xchg
xor
jecxz
sub
xor
js
stc
repz
das
mov
sub
mov
mov
aas
jg
jmp
in
cmp
mov
adc
aam
and
cltd
mov
jge
cld
stc
repz
lret
push
out
cwtl
dec
jmp
or
iret
lahf
aas
jg
ja
mov
sbb
repnz
lret
sbb
into
rcrl
out
lret
sub
fnsave
and
sub
xchg
push
inc
sub
repnz
lcall
dec
fbstp
dec
fdiv
out
xchg
sub
stos
or
pop
scas
popf
fidivs
push
xor
mov
test
cwtl
repz
loope
mov
sub
jg
ja
test
test
and
sbb
mull
repnz
xchg
iret
add
std
sbbl
inc
enter
mov
popf
jg
jg
in
out
pop
movsb
or
add
mov
cli
sti
repnz
jp
les
mov
jg
cld
ficompl
js
lods
or
movsb
mov
aas
cli
pop
adc
je
addb
test
sbb
ret
pop
jae
dec
bnd
xchg
push
push
mov
int
aas
inc
jp
lret
xchg
push
pop
pop
bound
test
adc
lea
jbe
sahf
inc
xchg
ljmp
or
adc
ss
mov
shl
iret
lahf
aas
loopne
jge
rorl
roll
sbb
mov
xchg
pop
push
les
lock
sub
jb
sub
dec
jbe
das
test
jle
repnz
stos
inc
shrl
lahf
aas
jmp
sub
pop
adc
out
movsb
or
arpl
lret
iret
push
pop
and
lret
push
aas
repnz
jl
outsb
mov
call
pop
clc
sar
ds
jle
leave
push
add
scas
stos
cltd
aaa
or
pop
pop
dec
in
idivl
jmp
xchg
iret
or
mov
or
dec
test
xchg
lahf
aas
fisubrs
or
jne
lret
dec
sbb
fmull
add
push
setg
sub
dec
lds
notb
scas
mov
ss
fdivrs
mov
loope
xchg
mov
out
add
stos
les
and
xlat
xor
lret
lods
sbbb
test
in
lret
mov
lret
movsl
push
rcll
mov
or
fstps
xchg
insb
outsb
ljmp
lds
push
pop
cmp
add
aas
outsb
sub
add
in
std
hlt
enter
lret
fcmovnb
faddl
mov
jae
iret
add
sti
jecxz
pop
jle
push
sub
mov
out
jns
sub
in
mov
dec
xchg
or
cwtl
icebp
fneni(8087
jns
xchg
push
daa
int
xor
fstpt
in
push
pop
sub
stos
lret
dec
dec
aas
andl
dec
fnsave
mov
mov
aas
jg
dec
scas
mov
lret
lret
mov
lret
iret
lahf
jg
jb
iret
das
jg
aas
pop
out
in
push
fidivrs
mov
sub
out
xchg
cmp
pop
mov
rol
test
stos
sbb
mov
pop
insb
mov
push
mov
push
mov
lret
mov
test
jg
cld
dec
scas
xchg
adc
push
ja
xor
cwtl
iret
aas
mov
jl
out
lock
repnz
xchg
and
mov
adc
xchg
subl
or
sbb
mov
out
cmpsb
xchg
mov
movsb
lret
insl
pop
and
sub
stos
adc
movups
lret
mov
dec
sbb
or
call
shll
loop
call
mov
stc
stos
mov
pop
jns
xchg
dec
lret
sub
push
mov
xchg
divb
xchg
push
ljmp
mov
jle
pop
pop
jecxz
or
lock
pop
push
jg,pt
adc
pop
and
lret
lahf
pop
or
lods
push
scas
ror
sub
pop
repnz
dec
cmp
xor
xchg
and
ficompl
mov
add
xchg
ja
sub
ret
cmp
sti
ficoml
xchg
push
pop
jns
js
in
outsb
testb
loope
pop
jns
jle
clc
pop
sbb
pop
sbb
xor
pop
pop
rorl
pop
std
cwtl
lahf
xchg
sbb
insl
iret
pop
movsb
bound
adc
jg
das
sti
repz
je
mov
mov
lret
scas
xlat
lods
or
rcrl
push
jle
repnz
rolb
push
adc
dec
repz
repz
fisubrs
outsl
inc
add
fs
ja
mov
fidivs
out
in
add
mov
in
fisttps
or
cmc
loopne
inc
cmpsl
jns
xchg
push
fistps
pop
mov
lds
subb
pop
jno
sbb
xchg
clc
push
outsl
xor
push
add
adc
mov
or
scas
cld
cld
stc
repz
das
pop
lcall
adc
and
cmp
mov
sub
adc
mov
pop
push
pop
cltd
rcl
das
lret
mov
adc
das
mov
sbb
sub
out
sbb
dec
or
sub
sar
lret
or
cmp
jg
cld
mov
xor
ljmp
repnz
sbb
inc
pop
fsubrl
jge
push
xor
mov
sub
fucomi
out
int3
fidivrs
xchg
in
lahf
sahf
ret
test
in
inc
imul
lret
fstl
sbb
mov
inc
aas
mov
fwait
mov
test
sbb
sahf
imul
rcr
add
sti
push
decl
push
xchg
pop
xchg
popf
out
push
and
test
movsb
das
scas
pop
add
popa
sbb
and
jle
repnz
dec
jl
popf
hlt
rsm
mov
lret
jo
xor
jle
dec
sub
jmp
cli
popf
mov
dec
sbb
pop
iret
pop
inc
cld
add
out
push
icebp
ja
shlb
out
enter
push
pop
fcoms
sahf
add
sub
dec
add
mov
mov
cmp
pop
stos
jg
lahf
pop
or
jne
jno
addr16
repz
inc
mov
and
pop
sbb
adc
push
xchg
lahf
pop
push
sub
push
loop
adc
xadd
pop
insb
cmp
cs
jmp
jge
stc
repz
jbe
pop
add
inc
pop
out
mov
inc
outsb
sub
pop
xchg
xor
sbb
repz
add
push
out
xchg
xchg
gs
test
push
add
testl
cmp
xor
sahf
sub
mov
sub
mov
cmpsl
adc
and
sub
mov
shlb
shll
gs
stc
pop
mov
incb
int
adc
fnstenv
add
cld
out
jnp
xor
sbb
iret
es
orb
push
repnz
in
and
int
pop
call
lret
mov
clc
or
loopne
scas
mov
push
jbe
mov
jo
insl
push
jmp
inc
jns
pushf
xchg
addr16
inc
xlat
xchg
cld
mov
das
pop
into
sub
imul
mov
mov
sti
repnz
lret
insl
inc
ret
mov
dec
fildl
sub
sar
outsb
leave
out
pop
arpl
popa
cmp
or
outsl
pop
dec
xor
xlat
lret
movd
test
and
add
adc
nop
xor
push
test
cmc
or
mov
mov
inc
sahf
lcall
sbb
fsubrl
adc
pop
jecxz
cmp
jbe
inc
pop
leave
repnz
cmc
js
jl
pop
xlat
repnz
loop
cld
dec
cli
mov
pop
pop
aam
mov
jmp
inc
mov
pop
inc
pop
outsl
xor
out
adc
sub
stos
sub
sub
cltd
arpl
dec
mov
dec
xchg
sarl
xchg
aas
insl
or
mov
out
aad
outsl
fdivrs
pop
inc
pop
outsl
frstor
lcall
repz
lahf
fwait
jle
nop
insb
fs
or
mov
loop
jg
cld
stc
pop
pop
daa
xchg
adc
push
bound
add
lahf
lret
pop
fmuls
and
lcall
cld
fxch
pop
pop
mov
imul
xchg
pop
mov
pop
ds
fidivl
mov
sbbl
and
and
xor
cmpsl
push
push
lock
rorl
sbb
xchg
xchg
sti
repnz
imul
decl
mov
jle
out
add
adc
or
mov
imul
pop
clc
add
outsl
outsb
add
xlat
jg
cld
stc
pop
lds
stc
mov
adc
jb
mov
mov
fbld
repnz
lret
or
cmpl
jno
push
mov
fldl
lahf
dec
call
and
in
pop
push
lds
and
in
pop
lods
xchg
push
arpl
jmp
sub
iret
pop
lods
dec
mov
mov
aas
inc
inc
xchg
lods
push
push
sahf
and
pop
repz
lahf
and
aad
xchg
push
jbe
xchg
sti
adc
repnz
out
sbb
scas
mov
mov
pop
jbe
sti
xchg
repnz
mov
das
mov
push
scas
lret
mov
in
mov
stc
out
jle
repnz
pop
int
bound
js
mov
add
sub
inc
inc
mov
cld
stc
repz
pop
cmc
aaa
stc
cmp
subb
sub
lahf
aas
jg
testl
loope
xchg
aam
cmpsl
outsb
mov
call
iret
lahf
jg
leave
sbb
sbb
cltd
xor
mov
es
push
idiv
pusha
lret
ja
das
lods
and
out
adc
sub
mov
sub
lock
out
clc
fs
outsb
mov
in
pop
mov
cld
stc
fimull
jae
xor
pop
sbb
dec
add
cmp
jmp
adc
in
push
push
jg
cld
stc
icebp
lds
data16
jle
jns
xchg
aas
cmp
scas
xor
push
pop
add
daa
adc
pop
lcall
fisubs
cmpsl
sbb
sub
iret
scas
movsl
cli
into
pop
notb
or
repnz
mov
int3
pop
sti
xchg
aas
jg
cld
jle
mov
rclb
inc
mov
xchg
stos
outsl
loope
iret
lahf
cwtl
xor
inc
jbe
lret
hlt
push
push
jle
lock
push
xor
fs
inc
stc
repz
negb
jp
subl
adc
push
rorl
loope
jns
popa
mov
dec
cltd
cs
and
out
lret
iret
lahf
popa
or
dec
dec
stos
outsl
push
ds
cmp
repnz
fstpt
ret
data16
leave
mov
mov
out
mov
cltd
jp
pop
sbb
mov
mov
scas
mov
in
add
rcrl
mov
lods
pop
dec
out
push
ss
sub
in
sub
xor
pop
mov
mov
sar
push
dec
pop
jl
xchg
push
pop
jns
xchg
fcompl
sub
arpl
inc
sbb
inc
mov
into
dec
inc
push
sbb
mov
xlat
or
enter
ret
pop
cld
mov
pusha
mov
fwait
sahf
sbb
test
pop
mov
cmp
cmc
ljmp
clc
lret
push
stc
repz
mov
pop
jmp
inc
sti
push
and
inc
mov
or
jl
mul
add
cmp
arpl
mov
xchg
sbb
imul
sahf
push
fsubp
fists
outsl
movsb
fistpll
add
xchg
jp
mov
cld
stc
repz
je
xchg
mov
int3
lcall
jbe
pop
mov
jle
std
cmpb
jns
fsub
shlb
gs
out
ja
dec
cs
mov
push
jnp
fs
movl
inc
cld
subl
repz
into
outsb
repz
or
outsl
ljmp
dec
ss
xor
and
ss
sahf
outsb
subb
lahf
pop
sbb
flds
cwtl
dec
in
loope
shl
out
cwtl
inc
fnstcw
js
fbld
jae
repnz
test
std
cmpsl
outsl
mov
inc
arpl
mov
in
lods
pop
sbb
lods
jo
in
lahf
sub
lock
mov
push
pop
ss
jecxz
push
push
mov
pop
std
lock
cld
sub
leave
or
cmp
ljmp
mov
gs
data16
push
loope
and
push
adc
sbb
rolb
int3
repnz
ja
push
test
shll
sub
mov
cmc
cmc
mov
aas
adc
xor
push
scas
mov
push
pop
inc
mov
add
inc
xchg
jecxz
sti
repnz
loopne
xchg
fwait
stos
shlb
and
lahf
lret
mov
push
dec
aam
cltd
cs
pop
jecxz
lret
xorb
adcb
xchg
ficoms
fsubrp
push
dec
enter
lds
push
pop
jns
cs
out
mov
or
add
push
lock
loop
push
inc
mov
sub
jle
jl
fildll
sbb
pop
scas
mov
lea
push
enter
jnp
or
mov
lret
mov
mov
pushf
mov
sub
in
push
addps
xchg
mov
fstl
and
pop
sub
scas
pusha
and
cltd
sub
cmc
lret
outsl
cli
addr16
into
add
lret
mov
mov
jb
inc
adc
mov
dec
mov
mov
add
jle
cmpl
cs
xchg
lahf
aas
add
push
adc
and
lret
out
out
push
sub
add
pop
jns
jmp
dec
mov
leave
test
cmp
push
adc
into
data16
aam
out
mov
sub
xchg
cli
or
iret
lahf
aas
jg
and
stc
lahf
push
leave
and
sbb
repnz
lret
stos
int3
adc
xor
xchg
sub
cld
les
insb
out
dec
das
ja
lods
test
inc
in
cli
js
jns
or
dec
push
movsb
push
fcmovnu
pop
push
pop
jns
fnstenv
ret
xchg
sub
out
sub
cmp
lret
xchg
ljmp
inc
sbb
out
push
sahf
dec
inc
movsl
pop
pushf
lret
cmp
dec
cld
stc
repz
mov
vdivpd
ljmp
jg
add
das
or
or
cmove
std
jb
xchg
pop
aaa
push
or
fiadds
in
push
fimuls
and
out
mov
loope
call
sbb
jno
pop
mov
push
pop
jns
jmp
lahf
jge
cmpb
lock
frstor
out
jg
cld
stc
jge
lcall
nop
adc
dec
mov
fwait
lods
and
loope
repz
negb
dec
pop
aas
jg
pop
rcl
adcl
bound
xor
repz
lahf
add
fs
sbb
shrl
xchg
jg
cld
stc
push
push
push
dec
xchg
incb
sub
iret
lahf
aas
mov
movb
cmp
sysexit
repnz
js
repz
pop
or
stc
repz
add
outsb
lds
stos
push
repnz
fidivs
cmp
inc
push
in
aaa
cli
add
jg
nop
and
or
rcll
lea
out
stos
xchg
scas
push
call
aas
xchg
add
cmpb
cmp
cmp
cmp
mov
in
sub
cmp
mov
push
out
push
lahf
aas
mov
call
test
sbb
xchg
inc
add
int3
or
outsb
pushf
lahf
aas
jg
sahf
jmp
xor
notl
mov
repnz
orl
jecxz
fmul
cld
stc
repz
push
add
sti
xchg
mov
sub
stc
adc
sbbl
in
cmpsb
cld
fstpl
lret
iret
or
or
sbb
inc
sahf
imul
jns
or
jb
sbb
jg,pt
push
adc
mov
mov
jbe
sahf
das
jns
pushf
stos
in
stc
repz
mov
and
test
push
ljmp
rorb
pop
lahf
and
lret
in
ja
xchg
mov
call
push
pop
jnp
in
add
sub
lret
fcoms
jns
lods
loope
sbb
dec
scas
scas
mov
mov
in
mov
push
lret
add
jbe
push
addr16
xchg
push
stc
icebp
mov
les
cmp
add
scas
lods
jle
adc
mov
or
nop
notl
sbb
repnz
jl
ror
xchg
aas
fwait
mov
jg
jne
daa
aas
inc
clc
in
pop
je
push
and
scas
and
ss
lahf
aam
fimuls
movsb
test
testl
aas
mov
das
mov
fdivr
repz
mov
jp
mov
mov
jg
cld
mov
fs
xchg
pop
or
nop
iret
xlat
loop
nop
in
int
div
out
xor
dec
insb
lea
adc
xchg
push
pop
push
mov
rorl
loope
clc
jb
pop
lods
adc
mov
stc
stc
repz
jle
ret
sbb
pop
fsubrp
sahf
sbb
lret
addr16
mov
cs
xchg
clc
and
xchg
push
pop
jns
mov
cmpsl
arpl
xchg
push
fisubrs
es
sub
mov
movsb
pop
pop
jns
xchg
or
arpl
adc
test
xchg
push
js
inc
movsb
andb
hlt
dec
mov
pop
jns
test
jne
jl
jns
dec
xor
jg
icebp
in
fisttpl
out
mov
and
cs
aas
mov
mov
lock
cld
stc
and
mov
dec
stc
test
lahf
aas
jg
fucompp
or
cmp
cld
stc
repz
sbb
cs
dec
movsb
aam
dec
cmc
xchg
lods
mov
adc
or
push
scas
lret
sub
aas
jg
cld
push
pop
jge
cmp
sbb
dec
dec
mov
outsl
pop
jl
fadds
movhps
mov
inc
shr
test
pop
in
mov
fisubrs
sub
xor
push
pop
fldcw
stc
repz
pop
or
mov
repnz
sub
jl
dec
popa
and
ret
mov
imul
decb
ret
adc
xchg
xchg
aaa
ror
sub
test
into
push
pop
jns
mov
mov
adc
xchg
push
sbb
jns
xchg
xchg
pop
hlt
mov
rcll
cli
xchg
out
jp
gs
pop
dec
fs
jb
out
sti
dec
fsts
subps
or
jg
sub
jle
leave
dec
pop
pop
pusha
loop
shrb
pop
popa
into
lods
jg
add
xchg
push
pop
jns
lcall
ja
inc
mov
push
pop
jns
push
les
and
out
jbe
das
loope
sbbl
sti
in
sub
pop
inc
xchg
ds
mov
mov
addr16
shl
clc
add
das
js
mov
das
sub
or
repz
mov
pop
test
push
nop
jmp
outsl
and
mov
pop
jns
fisttpll
aas
jl
imul
cmpb
xchg
push
fcomps
popf
add
lods
jo
pop
mov
xchg
push
pop
mov
push
in
aad
popa
jp
push
pop
jns
cmc
rorl
shll
ds
pop
jns
add
imul
cmp
lret
pusha
std
lods
sbb
in
les
pop
adc
jnp
insl
or
jns
xchg
push
inc
js
push
fwait
push
dec
sub
xchg
push
pop
shll
test
sbb
repnz
sub
cmc
add
imulb
ror
movsb
icebp
push
insl
out
rolb
mov
mov
jns
test
lahf
pop
nop
in
adc
inc
mov
cld
mov
cmp
pop
cwtl
xchg
cs
aas
std
jg
push
mov
lret
lret
jmp
mov
scas
repz
outsl
pop
add
ret
enter
dec
sub
fistpl
fsincos
and
scas
mov
jns
xor
inc
sub
lret
sub
jbe
aad
mov
lahf
pop
pop
out
sub
jmp
jge
in
or
cmp
jecxz
enter
sbb
xchg
push
ficomps
push
aaa
lahf
addr16
push
ret
push
pop
jns
or
in
and
add
aaa
cmp
mov
out
pop
push
repz
in
mov
in
mov
add
out
xchg
sub
je
jmp
out
das
scas
mov
gs
ficomps
and
dec
jmp
adc
test
call
stc
repz
mov
repnz
xchg
loopne
clc
fisubrl
pop
push
out
mov
lods
jg
adc
adc
xchg
sub
pop
aas
inc
shll
sarl
or
lret
aas
in
cmp
mov
xor
adc
ret
or
bound
jno
clc
repnz
jg
adc
outsb
push
sub
cmp
cld
mov
lods
jne
dec
push
and
cmpsb
lret
lahf
aas
xchg
jle
test
inc
mov
pop
iret
mulb
xchg
cmc
pop
out
dec
pop
ljmp
pushf
adc
pop
fcmove
jg
jns
imul
jecxz
push
call
xor
pushl
or
popf
jl
cs
add
cmpsb
push
adc
in
push
iret
daa
xor
mov
repz
xchg
push
pop
mov
xor
fnstenv
shll
das
iret
ds
aas
sub
outsb
icebp
cld
xchg
xor
ficomps
jne
and
xor
es
pop
jns
sub
inc
in
mov
mov
aas
cmp
fstl
fisttps
mov
push
pop
fdivrp
test
xchg
pop
xchg
imul
aas
jg
cld
scas
inc
xchg
inc
jge
out
mov
push
jg
repz
lahf
in
sub
das
call
sbb
push
jg
cld
stc
mov
fcmovnu
adc
adc
sub
inc
mov
xor
sahf
inc
mov
out
lret
iret
out
mov
sub
xchg
mov
mov
xchg
cmpsl
dec
lods
idivl
inc
pop
scas
mov
mov
or
cli
in
mov
xchg
adc
imul
repnz
jle
xchg
cmp
sbb
aas
mov
add
sahf
pop
cs
repnz
lahf
jb
sbb
or
add
std
push
pop
rclb
cmp
popf
lahf
sub
xor
cmc
jmp
sahf
jp
lock
push
cld
test
addr16
test
xchg
push
pop
jns
mov
popl
notb
adc
push
pop
jns
xchg
subl
call
aam
lret
test
adcb
in
push
ficomps
mov
cwtl
mov
notl
sbb
mov
add
cs
icebp
in
aas
adc
scas
xchg
fwait
jns
sub
stc
or
iret
mov
cld
and
jns
psubusb
and
xlat
imul
sbb
dec
mov
in
xchg
das
push
jo
dec
inc
inc
inc
out
enter
in
push
mov
mov
or
cltd
in
push
pop
int3
push
aas
push
adc
icebp
call
pop
pop
jns
cltd
sub
push
leave
fiadds
repnz
int
push
jecxz
push
mov
dec
cmc
out
lret
xchg
jg
out
adc
stc
sub
push
stc
xor
jbe
addr16
mov
push
fdivrp
ror
push
xor
stos
icebp
out
push
xchg
dec
dec
out
sub
mov
add
fmull
incl
sarl
add
cmp
sbb
pop
fistl
jae
icebp
repnz
filds
mov
out
adc
push
das
imul
add
cld
fidivrl
mov
std
dec
xchg
mov
sub
pop
inc
add
movsl
jge
leave
inc
rolb
les
lahf
add
jbe
pop
fwait
loope
jl
adc
jns
inc
popf
addb
repnz
lret
jle
adc
xchg
jne
mov
insl
sub
daa
jmp
mov
daa
mov
scas
mov
lock
je
popa
adc
sub
dec
sbb
iret
lahf
pop
scas
sub
shlb
and
fists
cld
stc
repz
sahf
popf
add
shrb
jp
cli
push
test
aas
jg
pop
dec
fwait
enter
sub
push
mov
stc
repz
rcrl
jo
sbb
lds
sub
dec
ret
into
jae
push
sti
xor
insl
xor
iret
lahf
aas
push
popa
pop
cmp
pop
ljmp
xor
bnd
sti
cwtl
adc
nop
dec
inc
mov
pushf
movsl
cmpsl
lods
repnz
xor
fucomip
shr
sbb
daa
lret
mov
lea
stc
xchg
fcompl
repnz
aas
imul
scas
mov
movsb
add
imul
push
out
lret
sub
adc
push
rcrl
scas
mov
push
arpl
mov
cld
cltd
cli
repnz
fwait
xchg
fwait
rcrl
mov
mul
or
or
mov
jns
stc
stc
in
push
sbb
pusha
inc
inc
dec
scas
iret
lahf
cmc
in
out
inc
push
mov
arpl
stc
repz
jp
jl
xor
cmpsb
cs
push
aas
jg
lcall
jae
xor
repnz
bound
subb
ret
sbb
cmpsb
scas
lret
mov
sti
cld
jb
xchg
lret
jae
mov
test
lret
das
mov
mov
jle
cld
stc
dec
fadds
jp
mov
adc
out
lahf
aas
std
mov
insb
mov
stc
repz
fadds
imul
jg
inc
mov
inc
das
mov
aaa
inc
call
lret
out
sub
sti
nop
in
dec
pop
out
push
pop
jns
push
dec
mov
push
ret
dec
call
in
js
sbbb
sub
ja
pop
dec
fstpt
popf
inc
cwtl
notrack
in
ja
cld
imul
jns
xchg
push
push
pop
in
in
test
in
push
pop
daa
sar
shrl
mov
out
out
xchg
pop
jo
fsubrs
adc
inc
test
iret
inc
push
mov
jle
stc
cwtl
cmp
dec
sub
adc
pusha
imul
out
mov
or
lahf
and
not
inc
in
pop
test
je
xchg
das
stc
repz
xor
out
jns
xor
adc
fstp
pop
pop
das
cwtl
pop
mov
sbb
in
push
pop
adc
mov
and
jmp
mov
dec
insb
inc
mov
popf
out
movsb
pop
ss
out
aas
test
sarb
cs
cmp
pop
cltd
fstps
xor
mov
cld
stc
sub
mov
int3
inc
cmp
lahf
aas
jg
sbbl
fistpl
stc
or
idiv
stc
repz
push
mov
rcll
lahf
aas
jg
bound
sarb
movl
mov
repnz
or
test
std
in
pop
aaa
call
sub
mov
scas
loop
adc
addr16
adc
mov
pop
pop
repnz
pshufw
xor
lret
cmp
dec
push
push
xor
iret
push
testl
adc
iret
mov
mov
pop
jns
call
scas
mov
push
pop
inc
test
mov
fdiv
mov
push
sub
pop
mov
and
push
cmp
mov
mov
popf
push
into
dec
inc
sar
lret
daa
iret
int3
ds
popa
or
sub
push
out
dec
jmp
and
or
leave
fdivp
leave
ret
lahf
aas
les
push
push
in
lea
lahf
mov
push
add
cld
stc
repz
stc
cli
sbb
cmp
xchg
outsl
shll
xchg
ja
jg
xchg
sub
das
cmc
pop
mov
out
les
dec
ds
lahf
cli
and
pop
hlt
idivl
setbe
dec
enter
and
adc
lea
aas
mov
out
cli
dec
sahf
frstor
mov
ja
mov
outsl
repz
ret
mov
xor
ret
cld
stc
or
and
rorl
adcl
xchg
jo
ja
jne
repnz
out
lahf
cwtl
jl
add
mov
sti
arpl
out
cmpsb
mov
inc
sbb
repnz
pop
mov
sti
mov
lret
sub
add
jle
sti
and
lods
or
mov
cmp
or
mov
cs
sub
das
addb
cs
loope
cmp
pusha
cmpsl
pop
jns
pop
iret
jnp
jnp
repz
arpl
leave
dec
cmp
push
in
call
ret
std
repnz
repz
sub
cmpl
dec
and
test
mov
fisttps
or
iret
cmpsb
sub
lret
pop
test
jbe
out
lret
xchg
shll
clc
in
popa
xor
fwait
adc
out
aam
xchg
les
leave
mov
push
and
jne
cmp
movsb
mov
pop
pop
ss
test
iret
lahf
aas
or
fidivrs
jbe
xor
out
daa
ret
aam
cmp
mov
stos
xchg
loopne
out
add
aas
loopne
fbstp
dec
call
in
scas
fsubl
aas
pop
cmc
jb
and
mov
popa
push
push
push
fdivrp
adc
cli
lahf
imul
cmp
or
ds
int3
adc
in
or
xchg
push
clc
cmp
mov
and
pop
add
out
gs
icebp
and
mov
jns
pop
push
lret
lods
cmp
mov
aam
or
in
scas
jno
push
mov
pop
dec
push
adcl
test
fisttpl
adc
jns
sub
repnz
repz
sbb
hlt
push
movsl
insl
fcmovu
jg
or
adc
in
mov
iret
lahf
aas
clc
sub
sbb
mov
push
pusha
fdivrp
cld
stc
repz
xchg
fstpl
mov
xchg
xchg
cltd
pop
iret
lahf
aas
jg
hlt
repnz
sbb
add
stc
repz
aas
test
loopne
push
and
adc
aas
lret
leave
sbb
decb
lret
or
jle
mov
jmp
pop
notl
push
and
push
xor
pop
inc
xchg
xchg
out
lcall
lret
lret
mov
dec
roll
movsl
sub
adc
mov
pushaw
or
and
jecxz
mov
stos
in
mov
sarl
xchg
add
jle
pop
loope
les
add
lods
dec
mov
iret
lahf
aas
push
pop
idivb
pop
movsb
cli
lods
fbstp
cld
stc
repz
inc
sahf
ljmp
mov
movsl
cmp
or
jg
mov
rcrl
das
fisubs
jo
jo
decl
jae
jmp
jb
xchg
xchg
idivl
popf
mov
repz
ja
pop
jns
fldl
push
add
mov
lret
xchg
lcall
pop
lret
and
pop
cmc
xor
insb
jno
add
xchg
push
pop
jns
ja
fisttpll
or
push
les
jns
out
rcrl
cltd
int
insb
daa
jmp
lock
xchg
mov
xchg
or
addr16
push
scas
mov
lret
push
daa
mov
popl
sub
das
imul
pop
les
arpl
sahf
divb
cld
stc
mov
xorl
mov
aas
sbb
jle
adc
sub
ja
repz
sbb
pop
mov
mov
jl
cld
leave
jo
cmp
mov
flds
filds
adc
enter
inc
in
push
pop
cmpsl
and
mov
mov
dec
ja
pop
jns
seta
inc
inc
fdivr
and
mov
push
lahf
hlt
push
outsl
das
jl
sbb
icebp
mov
push
pop
jns
addr16
cmp
cmp
mov
sub
adc
xchg
mov
jae
xor
scas
repnz
shlb
cwtl
mov
or
fistps
sbb
jae
xor
into
xor
hlt
testl
xchg
adc
iret
in
push
jo
aas
lret
iret
sub
push
push
je
sbb
repz
loop
sti
cmc
push
jo
mov
adc
repnz
fildl
jb
jge
inc
lret
and
out
jg
out
rcl
ljmp
add
call
inc
dec
pop
int3
push
pop
jns
xchg
sub
fbstp
jbe
data16
sbb
fidivrl
sub
push
std
push
xor
addl
fidivl
call
mov
mov
aas
jg
ds
iret
jno
xchg
test
notb
push
cmc
and
and
adc
inc
ret
push
dec
cli
in
jnp
cs
mov
cld
push
rcl
sub
add
jecxz
cli
out
in
out
sub
lret
iret
lahf
jl
stc
pop
hlt
cmc
in
mov
jg
ds
mov
jo
insb
stos
lahf
aas
jg
sahf
push
adc
orl
test
fsubrp
in
dec
pusha
das
push
das
mov
rclb
mov
jnp
repz
iret
testb
xor
das
scas
mov
into
mov
mov
push
cltd
sbb
cmp
bswap
sub
adc
mov
scas
mov
pop
enter
inc
sarl
dec
inc
cli
cli
repnz
sub
and
sarb
xor
mov
push
shlb
mov
in
repnz
jmp
and
cmc
xor
push
push
lret
cmpsb
pop
out
cmpsb
outsl
scas
xchg
das
aam
scas
mov
stos
sub
jnp
ljmp
mov
lcall
xor
aaa
hlt
pop
iret
into
mov
cmp
out
clc
xor
xchg
arpl
push
mov
xchg
sub
add
add
xchg
insl
scas
mov
xor
dec
pop
push
shr
xchg
lods
pop
or
ljmp
nop
jno
das
jl
push
das
enter
adc
xor
pop
pop
jle
sub
push
jl
dec
push
inc
das
mov
xchg
sbb
dec
pop
fimuls
pop
movsb
icebp
outsb
scas
dec
bound
sbb
dec
out
iret
mov
ja
dec
mov
sbb
aas
dec
mov
jb
pop
shl
setno
das
rcrl
lahf
lods
push
movsb
add
mov
shlb
hlt
lods
add
mov
jno
push
test
xchg
jbe
scas
mov
xchg
js
orl
lds
stc
xor
ds
xchg
push
std
fmuls
and
cli
pop
pop
fsubrp
inc
scas
insb
pop
lods
jle
jmp
dec
fiadds
pop
mov
sahf
sti
adc
iret
lahf
aas
pop
outsb
ret
sub
test
repnz
fisubrs
cld
pop
cli
sub
ljmp
ds
pop
iret
lahf
aas
jg
mov
adc
dec
das
jg
stc
repz
dec
sbbb
jne
pop
lods
addl
jg
jge
mov
aaa
inc
push
iret
test
call
out
sbb
dec
dec
lret
dec
arpl
aas
test
outsb
loope
iret
lahf
aas
in
loop
int
cmp
push
mov
sub
in
mov
mov
das
popa
jl
add
icebp
inc
push
rorb
aad
fnstcw
add
sbb
gs
fs
mov
xchg
pop
and
popa
sub
inc
xor
push
pop
mov
pop
loopne
scas
push
fwait
rcl
cmpsl
lret
jle
mov
repnz
inc
sub
mov
xor
lret
mov
pop
imul
lods
pop
out
neg
mov
aaa
stc
dec
clc
leave
jle
jecxz
adc
mov
adc
fwait
addl
mov
push
in
xchg
ja
fwait
mov
pop
aas
mov
xchg
test
fists
adc
cwtl
sub
pop
test
jns
pop
sti
sbb
or
jl
out
pop
jns
xchg
ret
movsb
pop
test
rclb
push
jge
aam
in
push
inc
push
pop
notb
loope
fisubs
inc
loop
iret
pop
into
hlt
pop
ds
lcall
test
mov
repz
mov
push
fidivrs
shr
iret
das
or
mov
pop
push
pop
jns
sahf
or
inc
lods
imul
cmpsb
pop
jns
xchg
add
mov
out
push
add
stos
xchg
push
loop
xchg
sbb
adc
and
jb
ss
xchg
jns
and
in
inc
shll
lods
mov
pop
mov
outsl
mov
cld
and
mov
mov
cltd
mov
mov
ds
and
cmp
add
das
inc
push
pop
jns
leave
shrb
cs
cmp
inc
cmp
sbb
xchg
inc
scas
out
aam
in
push
scas
adc
clc
mov
arpl
mov
xchg
push
fidivrs
sarb
xchg
lret
insb
xlat
inc
push
push
pop
jns
cli
xor
das
jecxz
jge
jge
add
sbb
outsl
jl
mov
or
mov
clc
and
shl
out
lahf
cmp
pop
outsl
or
pop
cmc
or
jo,pn
fists
pop
jns
mov
or
jb
jg
das
adc
sub
push
xchg
lret
sub
loope
adc
dec
out
mov
repnz
and
loopne
lods
ror
mov
stc
push
shrb
leave
sahf
mov
int
fs
pusha
in
push
lea
lret
or
xchg
test
jg
ret
pop
mov
js
cmp
stos
arpl
inc
mov
push
js
adc
pop
decl
push
or
dec
cld
stc
xor
jb
mov
int
xchg
lods
mov
pop
jle
push
sbb
into
fucomip
imul
dec
mov
insb
jb
jno
fs
push
mov
fwait
subb
push
fidivrs
dec
scas
outsl
lock
mov
clc
pop
push
pop
jns
fnstsw
insl
lea
jb
sahf
mov
jns
xchg
push
repz
pushf
mov
hlt
insb
xchg
mov
das
push
pop
popf
mov
insb
rclb
mov
pop
pop
movsb
and
aas
xchg
rcrl
xor
mov
mov
sub
ds
inc
push
pop
inc
and
dec
rcl
mov
test
es
cmpsl
rolb
xchg
lret
mov
lods
bswap
lret
lock
out
cli
xor
pop
test
out
cld
adc
bound
jle
xchg
jecxz
pusha
and
pop
pop
pop
jg,pt
ljmp
das
push
pop
fdivrp
mov
sbb
in
notl
mov
scas
mov
mov
push
push
mov
sbb
and
jae
mov
mov
sahf
mov
lods
dec
movsb
mov
pop
scas
xor
pop
pushf
pop
or
cld
stc
daa
orl
fstl
stc
in
pop
mov
movsb
pop
pop
adc
adc
push
pop
jns
aad
add
add
cmpl
fsubl
xchg
jb
gs
mov
xchg
jo
xchg
sbb
rol
repnz
scas
clc
and
pop
jns
pop
or
jmp
jg
push
cmc
mov
mov
into
push
cltd
or
out
stc
repz
mov
int3
cwtl
push
push
push
xchg
jns
aas
jg
cld
add
fwait
xor
std
inc
mov
sub
xchg
lahf
jle
out
or
jmp
pop
jns
shrl
insb
outsl
jne
push
out
mov
seta
in
xor
push
cltd
push
dec
fsts
repz
and
dec
clc
pop
dec
mov
mov
pop
faddl
js
mov
enter
cli
icebp
push
iret
leave
lock
aad
xchg
rcl
test
cmp
sbb
jg
cld
aad
maxps
jmp
int
xchg
jns
xchg
ja
jo
mov
push
xlat
inc
stos
mov
push
pop
sbb
rclb
hlt
sub
aam
xchg
push
pop
jns
les
push
inc
fwait
ss
enter
jb
jbe
mov
pop
or
in
call
sti
repnz
mov
push
outsb
cmp
mov
mov
pop
fdivl
sub
das
fiadds
enter
movsb
pop
mov
stc
cld
stc
addb
cmpsl
pop
jno
mov
repnz
pushl
add
xchg
add
das
scas
mov
stos
sbb
pop
fwait
out
in
xchg
mov
in
cmp
idivl
decl
das
scas
mov
cmpsl
lahf
test
inc
add
inc
push
aad
aam
mov
push
movsb
mov
out
out
or
xchg
into
sub
jae
mov
daa
push
cmpsb
stos
or
mov
cmp
out
jle
mov
jl
jae
in
sub
sbb
xchg
mov
lret
mov
xchg
es
xchg
adc
jle
cli
bnd
push
out
adc
mov
or
pop
sahf
fstps
pop
lret
adc
mov
pop
mov
xchg
pop
mov
mov
jl
cld
or
jl
or
stos
in
xchg
ja
ror
jp
or
out
insb
or
sarb
jl
sbb
and
out
and
daa
push
cmc
enter
pushf
pop
push
pop
mov
cld
stc
adc
popl
imul
mov
lcall
stc
loop
shll
pop
stos
stc
xor
fiadds
pusha
xor
aas
jg
cld
mov
arpl
pop
xlat
jecxz
repz
lahf
push
add
mov
add
cld
stc
adc
mov
adc
push
mov
cmp
pop
adc
pop
sbb
fildll
push
mov
pop
dec
or
inc
add
out
or
test
jns
mov
xchg
pop
imul
fimull
out
shl
out
lahf
lods
into
stc
adc
les
repnz
std
mov
incb
lret
xchg
ja
sbb
aaa
iret
xchg
test
sub
fdivrl
test
repnz
fwait
add
cmpsb
inc
pop
sub
pushf
leave
arpl
push
subb
cli
in
sti
subl
xor
imul
fbld
sbb
inc
scas
pop
pop
aad
iret
mov
push
xor
clc
repnz
outsb
outsb
popf
scas
push
and
pop
cld
lea
repz
out
pop
iret
test
lahf
aas
mov
xchg
ds
movsb
sahf
sub
aas
call
lret
in
mov
jp
and
mov
xor
mov
clc
aas
aas
mov
aas
cltd
jb
outsl
les
stc
xchg
mov
ja
ja
push
fidivrs
inc
xchg
ret
pop
pusha
pop
andps
xchg
sub
maskmovq
testl
push
out
xchg
rclb
pop
and
out
out
clc
in
xchg
cmpsl
daa
inc
mov
scas
push
ret
stc
cld
stc
rep
imul
outsb
or
es
repnz
jl
outsb
inc
jns
fidivrs
in
mov
dec
dec
or
call
mov
and
outsl
adc
push
out
mov
outsb
repnz
div
cmpb
xor
sub
lea
xchg
push
and
push
adc
mov
dec
lret
xchg
push
pop
mov
jge
mov
stc
pop
cmc
inc
inc
fucomip
outsb
xor
fstpt
fidivrs
in
inc
incl
sbb
bound
xor
lret
ja
movsl
jecxz
cmpsb
pop
cmp
cmp
mov
jmp
xor
cld
stc
scas
loop
dec
repnz
xor
and
repnz
mov
mov
add
lods
dec
mov
add
add
add
repnz
xor
dec
xchg
fistps
loop
fisubl
scas
mov
xchg
dec
mov
mov
lret
inc
jno
pop
inc
cmp
shll
adc
cli
popf
lods
pop
jg
in
sbb
outsl
das
push
pop
jns
adc
out
push
sub
push
in
aas
jg
pop
and
push
mov
ss
test
pop
mov
jnp
in
sar
out
pop
dec
js
or
cmp
and
decb
cld
ret
les
test
mov
xchg
sub
pop
sub
outsl
pop
inc
popa
sub
dec
and
jg
aas
ljmp
push
popf
mov
repz
lahf
mov
and
pop
push
mov
jle
cld
stc
dec
dec
aam
test
xor
push
dec
das
mov
pop
push
push
hlt
lret
iret
lahf
pop
dec
out
clc
and
loope
dec
dec
and
repz
loope
mov
pop
or
jnp
dec
xor
testb
sub
repnz
pop
mov
add
das
lea
mov
dec
iret
push
les
movsl
das
out
mov
pop
cmp
stc
add
cld
push
pushl
hlt
adc
fstl
in
into
mov
test
out
test
sub
pushf
pop
into
adc
call
daa
lds
cld
movsl
popf
mov
das
pusha
lock
cmp
fstps
jae
add
mov
test
mov
rol
inc
mov
test
pop
rcrb
sbb
repnz
pop
add
add
pusha
xlat
das
dec
and
scas
mov
cmp
mov
out
int3
lret
mov
dec
fdivrp
lret
sahf
xor
xchg
lods
push
lahf
jecxz
lcall
scas
mov
xchg
jg
fs
std
and
fwait
mov
lcall
xor
jle
mov
cld
lcall
push
cmpsb
aas
mov
jns
and
repnz
lahf
xchg
jge
and
gs
divb
sub
stos
jp
or
std
dec
xchg
push
xor
xchg
loopw
pop
mov
cld
stc
repz
dec
stos
add
xlat
leave
sbb
or
cmp
int3
push
cmpsl
ljmp
lret
pop
les
fimuls
mov
sbb
scas
mov
push
mov
mov
mov
clc
in
xor
out
ds
arpl
aas
jg
jae
rorb
or
push
mov
in
out
xchg
repnz
stos
xchg
repnz
sti
out
inc
out
and
mov
int
sbb
jg
mov
pop
leave
adcl
mov
jcxz
cmpsl
pop
jmp
outsl
imul
fadd
dec
je
mov
sahf
push
jb
lahf
aas
jg
or
xor
cmp
repnz
stc
repz
adc
adc
sbb
jg
dec
jge
mov
clc
mov
rcr
mov
das
pusha
fstpt
imul
enter
xchg
and
sub
stc
xchg
outsb
xor
and
jmp
popf
mov
lret
xchg
push
fidivrs
ss
sahf
cmp
cmc
jmp
sti
and
aaa
subb
ret
repz
jle
mulb
xor
insl
push
and
pop
add
jg
and
push
lods
jb
sub
not
dec
xchg
jecxz
iret
lahf
fimull
pop
lret
xorb
mov
in
add
pop
jecxz
mov
lcall
imulb
jnp
daa
jl
cmpsl
push
pop
jns
cmp
and
mov
push
mov
in
cmp
aad
mov
push
mov
jecxz
loop
pop
cmp
jle
js
jle
das
lahf
scas
mov
ss
out
xchg
sub
jg
or
cltd
pop
xchg
xchg
aas
scas
mov
int
scas
sbb
mov
adc
sbb
add
lret
sub
xchg
mov
mov
loopne
adc
xchg
das
ja
mov
pop
inc
rorb
aad
data16
mov
xor
fnstcw
fisubrl
dec
and
testl
pop
jbe
jb
mov
andl
repnz
test
adc
lock
dec
scas
push
add
mov
mov
and
and
das
jg
stos
mov
aaa
mov
out
jle
lods
sahf
mov
mov
mov
pusha
and
sbb
shll
stc
mov
dec
subb
repz
int
xchg
pop
popa
xchg
mov
shl
ret
das
dec
jl
decl
inc
dec
jmp
mov
iret
stc
xor
stc
pop
insl
imul
add
push
mov
pop
and
sar
cld
push
aas
imul
xor
mov
lahf
aas
jg
xor
out
mov
stc
repz
ret
out
push
adc
mov
and
test
mov
call
add
negl
lcall
inc
xchg
push
pushf
loop
mov
dec
sbb
paddb
repz
jg
dec
pop
jbe
ds
inc
in
sub
mov
push
popf
xchg
inc
or
enter
out
inc
xor
xor
sbb
adc
mov
mov
add
iret
push
pop
jns
xor
and
jne
neg
scas
push
pop
jns
xchg
add
mov
out
loopne
repnz
cmp
in
push
and
shrl
lret
and
testb
or
scas
mov
adc
xchg
push
sarb
mov
xlat
dec
fs
or
jecxz
xchg
push
pop
jae
scas
jno
out
test
inc
push
pop
jns
xchg
js
daa
pop
jecxz
adc
and
jnp
dec
aad
sbb
pop
jle
negb
xchg
sbb
xchg
push
enter
mov
or
push
lret
xchg
push
pop
adc
mov
push
pop
jns
leave
into
push
movq
mov
gs
dec
dec
es
jns
xchg
xor
add
mov
ja
int
inc
pop
scas
push
xchg
dec
jnp
clc
mov
idiv
std
ljmp
and
sub
repz
fnstsw
lret
xchg
xor
insb
nop
mov
jl
xchg
push
pop
xor
mov
adc
lahf
push
pop
jns
shrl
xor
jmp
sbb
dec
mov
jecxz
jns
xchg
shl
push
and
shrb
pop
cli
xchg
dec
out
sbb
stc
repz
ja
jns
mull
out
push
adc
mov
ds
cli
out
repnz
sbb
lret
int3
mov
jp
jg
cld
dec
in
xchg
mov
push
pusha
rolb
std
add
lahf
cmp
sbb
aaa
cs
cld
stc
repz
push
test
out
or
aaa
jge,pt
push
sbb
lahf
aas
jg
jge
mov
aam
lock
push
stc
repz
popa
jbe
out
jecxz
mov
in
inc
pop
jle
cld
sub
pusha
incl
sbb
out
lret
xchg
ja
adc
sub
mov
fists
jns
pushf
and
pop
dec
sahf
and
dec
aas
lds
jns
xchg
jb
sub
ljmp
pop
push
pop
jle
into
out
dec
test
iret
movb
bswap
stc
lahf
inc
push
aaa
xchg
repnz
xchg
jl
shlb
cmp
sub
scas
mov
mov
sbbl
mov
jo
stc
inc
mov
jns
push
outsl
jl
test
or
bound
in
lret
out
lea
mov
fsubr
and
cld
inc
inc
je
fildll
adc
cli
mul
outsl
dec
lret
aas
daa
push
fsubs
jg
cld
scas
ret
test
pushf
or
mov
in
lahf
push
jmp
adc
add
push
clc
repnz
aas
scas
fdivl
push
movsb
popf
iret
xor
lahf
pop
mov
inc
lock
sbb
stc
mov
mov
mov
sub
jle
xor
push
cmp
pop
call
sti
xor
negb
andl
in
or
bound
lret
lahf
pop
jle
insb
int
pop
rcr
in
testb
repz
aam
ds
scas
mov
jae
cmc
mov
stc
imul
daa
mov
adc
xchg
out
aas
fs
sbb
add
repnz
mov
aam
aam
pop
sarl
lret
iret
scas
outsb
stc
adc
sti
add
movsb
pop
cld
stc
repz
mov
pop
lcall
loopne
push
jle
subb
mov
jmp
negb
stc
repz
pop
sub
push
outsb
orps
rclb
jg
cld
cmp
sbb
xchg
imull
ds
lods
repz
lahf
cmp
les
push
loopne
mov
cld
stc
dec
outsb
push
std
movsb
push
pop
cmpb
mov
push
addr16
mov
stc
push
popa
test
cmp
cmp
adc
mov
mov
fdivrp
std
cmp
sbb
bound
cmpsb
dec
repz
jo
in
xchg
out
movsl
jg
cld
stc
into
pop
adc
dec
inc
and
divl
mov
and
arpl
push
repz
ret
outsb
mov
aaa
pop
jl
cld
stc
inc
cmpsl
mov
pop
sarb
mov
lahf
pop
adc
pop
mov
mov
in
cmp
xchg
cld
stc
repz
mov
fstl
test
dec
xchg
imul
aas
jg
adc
jge
inc
fcmove
and
in
mov
loopne
lock
ljmp
hlt
jb
je
divl
mov
cld
mov
sbb
ja
ja
mov
lret
push
mov
mov
inc
iret
cmc
fcomps
test
sub
and
add
sub
divl
xchg
fs
insb
push
cmc
inc
mov
scas
mov
cmpb
pop
cmp
cli
add
repnz
popf
icebp
xchg
sub
push
adc
and
mov
in
mov
xchg
push
iret
movsl
outsl
pop
std
repnz
pop
dec
lock
mov
mov
movl
add
dec
out
lahf
aas
sbb
push
outsl
stc
and
stc
cmpsl
xor
lret
ja
mov
aas
jg
cld
mov
pop
and
mov
adc
lret
pop
pop
pop
jecxz
repz
lahf
imul
dec
mov
push
mov
lea
stc
insb
js
lock
fwait
ss
jle
xor
data16
mov
cld
stc
repz
fcmove
jns
push
je
out
sahf
jl
mov
dec
xor
mov
and
push
rcrb
in
push
pop
scas
pop
pop
and
pushf
aas
push
mov
iret
hlt
cli
push
push
ds
push
loopne
pop
pushf
sub
inc
subps
jg
stos
cmpsb
bound
sbb
scas
mov
pmaddwd
push
scas
lock
fists
lret
lock
xor
xor
shl
lret
adc
setg
mov
out
cli
hlt
insl
or
inc
clc
incb
jg
cld
stc
and
dec
pop
mov
pop
xor
aad
iret
lahf
aas
pop
sbb
mov
jbe
pop
mov
push
daa
push
xchg
stos
mov
sub
lcall
ja
xchg
push
pop
adc
testl
cld
mov
jb
xchg
xchg
add
fildll
repz
jbe
gs
jns
ja
imul
sub
push
stc
int
cmp
repz
out
lret
mov
test
repz
push
fidivrs
dec
call
popf
cli
out
or
and
lret
xchg
sub
rol
xor
mov
lahf
aas
jg
test
adc
push
repz
pusha
ja
pop
cmpsl
insb
sti
pop
je
adc
punpcklbw
fadds
stc
jle
arpl
cld
scas
mov
lret
xchg
incl
xor
add
das
aam
xchg
xor
pop
fsubl
in
das
faddl
repnz
cli
in
pmulhrw
movsb
in
cld
pop
clc
mov
fwait
sub
jb
inc
iret
iret
lahf
aas
jg
iret
pop
or
ror
cmp
sub
outsl
jecxz
rol
enter
ds
in
das
lock
cmpsb
sahf
out
mov
gs
xchg
dec
fnstsw
sub
push
out
repnz
jns
or
mov
pop
lea
inc
cmp
xlat
jl
jl
push
pop
jns
xchg
xor
mov
and
mov
in
mov
lods
jp
les
pop
sarb
ss
push
jae
cld
pop
les
dec
mov
test
lcall
jg
jb
mov
add
jg
cld
add
cmp
jo
cmp
ret
sub
mov
jmp
shl
subb
out
in
out
or
cli
pop
cmp
sub
cld
pop
clc
jno
dec
ds
mov
xchg
pop
push
adc
or
push
in
dec
push
out
lahf
xor
hlt
fisubs
mov
orb
cld
stc
adc
loope
mov
push
es
call
imul
lahf
aas
xor
fsub
mov
repz
scas
popa
fistps
mov
pusha
jp
das
cmp
jle
cld
imul
xor
call
arpl
jg
sub
or
sub
stc
repz
out
and
lahf
aas
jg
add
jmp
add
inc
xor
repz
push
inc
xchg
int
xchg
xchg
xor
into
daa
das
jg
cld
xor
or
stos
mov
lahf
pop
push
outsb
xchg
mov
stos
out
lock
stos
scas
mov
hlt
or
dec
adc
daa
dec
push
cld
stc
repz
aaa
arpl
mov
dec
ss
iret
lahf
aas
jg
dec
xchg
xchg
adc
push
sub
in
sub
imul
fs
sub
notl
shrl
push
mov
pop
out
sahf
out
sahf
out
stos
xlat
mov
xchg
in
out
out
push
sbb
cmpsb
cld
cld
stc
movsl
outsb
lock
dec
mov
test
sub
sub
push
mov
mov
enter
mov
jno
pushf
iret
lea
pop
xor
repnz
ljmp
add
scas
les
iret
xor
pop
sub
or
mov
das
scas
mov
jp
inc
sub
xchg
or
stc
mov
dec
mov
xor
js
lahf
aas
jg
fstpt
push
cmpsb
mov
dec
scas
mov
test
add
repnz
stos
cmp
or
pushf
adc
or
pushf
lea
mov
adc
jl
xchg
jecxz
es
push
in
dec
fsubr
jle
mov
test
in
mov
sti
mov
inc
xor
scas
cld
jb
sarb
repnz
stos
lds
cld
jno
aas
addr16
popa
pop
jns
xchg
push
loope
pop
bswap
movsb
mov
pop
jns
in
push
scas
adc
pop
mov
and
push
or
dec
push
push
fnstsw
cmp
push
pop
test
mov
cli
cmp
pop
jns
pop
adc
rcr
das
lahf
sbb
lret
sarb
jns
xchg
xchg
test
jecxz
adc
adc
sbb
mov
je
in
in
adc
in
lahf
push
dec
mov
adc
test
cmp
incb
insl
std
mov
jmp
repnz
das
cmp
push
das
cmp
pop
sahf
loopne
sub
sub
lock
ds
in
pushf
jns
ss
daa
test
popa
sti
cli
pop
jo
push
fisubs
jle
xchg
adc
lret
outsl
hlt
in
mov
mov
movl
and
mov
cld
stc
repz
test
sub
aad
push
sub
pop
jle
sbb
inc
jecxz
movsb
push
pop
jns
add
out
mov
loop
insl
inc
cmp
in
sub
int3
lret
movsb
clc
test
stos
push
ja
aas
jg
dec
mov
test
lcall
xchg
add
lret
scas
sti
repnz
imul
lahf
scas
sbbl
aas
lret
mov
xor
add
push
xor
scas
mov
cmp
push
mov
sub
lret
fisttpl
arpl
xor
lret
bound
xor
xchg
repnz
lods
aam
and
inc
sbb
ret
mov
cmp
in
popl
add
test
fistpll
mov
test
popl
add
repnz
iret
lds
scas
clc
adc
mov
or
or
sbbl
mov
jl
fs
js
int3
pop
cmc
add
pop
fidivl
pushf
jl
push
shll
scas
imul
aas
outsb
push
adc
pop
fwait
sub
in
push
dec
or
xor
and
das
push
pop
sarl
inc
and
fistpll
fucomi
push
pop
jle
jbe
lahf
movsb
iret
xchg
fdivrl
sub
cmpl
mov
xchg
pusha
or
mov
gs
test
pop
cmpsl
mov
comiss
aas
in
scas
mov
ds
xor
and
xor
mov
test
and
stos
clc
sahf
fwait
xchg
aaa
call
sahf
orl
iret
lahf
aas
lods
pusha
inc
addl
adc
stc
repz
add
movsl
mov
xchg
ja
jg
sub
xchg
aas
pop
divl
loope
daa
loope
lret
jg
jno
fimull
and
lock
pushf
mov
cld
fstpt
test
xor
ret
add
mov
out
mov
imul
ret
mov
in
test
jge
incl
pop
and
lods
pop
out
jmp
out
push
cmc
aam
inc
mov
lret
out
inc
ljmp
jg
sti
cmc
jb
sbb
gs
outsl
daa
pop
inc
call
lods
test
jg
cld
stc
int3
jo
mov
outsl
jb
js
mov
das
aas
pop
push
nop
inc
lret
jnp
shll
fucom
xchg
push
pop
shrb
cld
xchg
ja
xchg
push
pop
jns
mov
dec
lcall
loope
push
pop
jns
cmp
insb
stos
loopnew
fmuls
xchg
inc
cmp
adc
in
cmp
xchg
xchg
fld1
cli
stc
dec
jns
xchg
push
ja
xchg
push
inc
jne
sub
lcall
push
pop
mov
and
mov
out
mov
outsl
arpl
stos
roll
cld
stc
mov
nop
or
test
fstpl
lahf
aas
jg
loopne
pop
push
scas
dec
sub
mov
scas
jns
lret
out
mov
cmp
xchg
hlt
mov
jo
pop
cld
push
pop
push
inc
lcall
pop
fbld
dec
xor
and
sbb
fiaddl
je
stc
test
pop
jns
iret
ret
outsb
jno
es
pop
rol
aas
xor
in
lods
push
add
in
negb
stos
popl
push
jg
push
pop
pop
xchg
push
pop
jns
jnp
dec
mov
mov
fidivs
and
into
insb
sbb
aas
jg
cld
push
icebp
sub
push
push
loope
leave
arpl
dec
pop
shl
out
lahf
or
push
add
xchg
sbb
fcoms
std
jbe
hlt
jecxz
jge
sarb
xorb
cs
or
enter
jmp
iret
loopne
sub
fbstp
cld
stc
repz
repz
popa
dec
shlb
or
iret
lahf
aas
jg
lahf
pop
jo
shr
dec
insb
jecxz
jge
cld
stc
repz
and
rorb
cmpsb
push
xchg
or
xchg
xchg
sub
mov
std
xchg
mov
xor
mov
add
jo
inc
xor
push
mov
repnz
xor
add
fstpl
aas
lret
scas
cmp
mov
cmp
cmc
idivl
dec
lock
lahf
incb
push
mov
inc
or
pop
pop
or
adc
pop
in
push
sub
and
jg
cld
ds
xchg
inc
dec
sub
iret
lahf
pop
adc
test
inc
aaa
rcll
loope
stc
repz
out
or
rol
leave
adc
lods
mov
jl
jne
scas
mov
ljmp
stos
lahf
das
lock
pop
out
add
xchg
mov
stc
repz
push
mov
jae
aam
aam
rolb
xor
jg
cld
xchg
arpl
dec
js
pop
cmp
push
in
iret
lahf
add
mov
jp,pn
push
scas
stc
stc
pop
lock
lock
mov
xchg
sbb
mov
mov
repz
aam
mov
sbb
xchg
and
mov
or
repnz
push
aas
mov
repnz
dec
fcomps
dec
push
out
cmc
xchg
repz
mov
or
inc
loop
call
sub
push
sahf
sbb
add
scas
mov
lea
mov
lret
fs
fiadds
repnz
gs
cld
adc
iret
mov
add
push
dec
sbb
jecxz
push
das
jg
inc
scas
dec
pop
es
fiadds
setg
inc
mov
ja
cld
cld
into
daa
js
cmp
test
inc
lods
jecxz
jg
fimull
lock
rcrb
addb
sahf
mov
sti
repnz
arpl
sub
adc
mov
dec
stc
stc
repz
dec
rcrb
outsb
aam
dec
inc
lcall
lods
test
mov
mov
in
jne
sbbb
lahf
outsb
jo
adc
into
cmp
mov
stc
cld
stc
rcr
mov
mov
jb
cmp
aad
in
lahf
aas
pushl
jo
jle
aas
add
pushf
movsb
jnp,pn
mov
cld
add
push
mov
sahf
push
xchg
or
pop
xchg
mov
lea
jmp
lret
fsubp
mov
ret
clts
divl
iret
lahf
pop
scas
push
push
push
pop
push
repnz
jl
fbstp
mov
js
sti
in
sub
push
mov
ror
movsb
lahf
das
lret
mov
jp
push
cli
cwtl
pop
test
out
mov
in
adc
jmp
or
test
mov
cmpsb
adc
mov
imul
pushf
or
pop
ljmp
xor
xlat
xchg
jle
bnd
cmc
cltd
pusha
xchg
adc
mov
xchg
int
cmp
add
out
mov
push
push
aad
movb
jle
ljmp
and
mov
cld
stc
repz
lods
add
rcrl
push
inc
test
jnp
lret
fdivr
pop
fsubrs
in
testl
mov
mov
pop
push
jmp
lds
les
adc
xor
icebp
lds
cmp
fisubl
sub
test
mov
loopne
cs
add
xor
jg
sar
in
enter
dec
lods
pop
int3
mov
or
ds
fstps
adc
mov
push
js
sti
mov
andl
in
outsl
std
mov
in
popl
push
fldenv
aad
add
out
jmp
jecxz
lret
jg
out
mov
ss
icebp
insl
jle
pop
scas
mov
outsl
fists
push
stc
loopne
iret
aas
inc
es
stc
add
xchg
out
fdivl
pushf
xchg
scas
pop
movsl
inc
cmp
in
ja
dec
lods
test
outsb
rcl
cs
inc
orb
cli
inc
in
push
mov
in
pop
sahf
lods
sti
dec
push
and
mov
cld
stc
pop
out
popa
and
cmp
dec
lock
or
jg
enter
cmp
ffree
pop
out
jle
repnz
pop
mov
pop
mov
repnz
lret
sub
fmull
outsl
mov
sbb
cmp
dec
outsb
pop
xor
jp
fdivrp
inc
dec
mov
xchg
lods
stos
cmpsb
dec
or
pop
das
add
cmp
adc
repnz
aaa
popa
lret
scas
imul
jg
xor
movsl
fnstenv
push
lea
mov
mov
cli
jp
xlat
jnp
push
mov
jle
dec
push
das
out
into
lcall
xchg
pop
add
ljmp
iret
mov
test
lret
ret
adc
popa
jg
cld
stc
dec
aad
add
rcll
push
cmp
iret
lahf
aas
push
test
popf
loop
js
repz
ss
hlt
jno
loopne
jne
cs
dec
mov
sub
jae
pop
lret
inc
out
into
lahf
aas
jg
cltd
insb
jecxz
inc
sub
cmpsl
daa
pop
cmc
dec
mov
in
iret
xchg
jge
aaa
or
and
iret
pop
pop
out
jns
lods
lahf
out
push
add
cld
cld
stc
sbb
jecxz
loope
jbe
icebp
sub
out
cmpsb
outsb
cmc
mov
imul
es
je
scas
shr
jo
pop
pop
jns
xchg
lahf
fisttps
sahf
xor
loopne
ffreep
das
ja
mov
mov
scas
mov
out
and
adc
out
cmpb
dec
jg
pop
push
pop
jns
daa
cltd
ja
lahf
push
sub
mov
xlat
test
xchg
loope
lret
mov
lcall
bound
test
addb
leave
cli
sub
cmovp
mov
jmp
sub
in
mov
out
shrl
movsb
clc
in
out
fisubrl
test
jae
add
out
outsb
push
loop
dec
stos
mov
add
cld
and
or
inc
mov
mov
rcrb
dec
jb
add
gs
mov
xchg
cmpsl
sbb
jnp
add
xchg
and
lahf
add
in
aas
push
clc
aas
das
mov
xchg
lahf
pop
outsb
jae
xor
scas
pop
pop
stc
repz
aas
mov
jb
js
aam
aas
jg
cld
mov
xchg
in
inc
por
xchg
or
jl
call
int3
cwtl
dec
pop
into
fildll
sbb
cld
stc
repz
jge
std
test
subb
mov
aas
dec
push
inc
and
cmp
repnz
mov
mov
lock
sarl
mov
sub
std
xor
xlat
or
test
stos
cmp
andb
out
js
and
sub
pop
or
scas
mov
mov
decl
repz
cmp
pop
loopne
mov
das
pop
lar
mov
cmp
mov
xor
xchg
lahf
push
mov
test
adc
push
pop
adc
pop
scas
mov
and
xchg
aad
jg
jle
daa
mov
push
int3
repz
aas
jmp
mov
jns
fsubrs
mov
sahf
mov
cld
stc
repz
pop
jae
fstp
aaa
xor
outsb
hlt
mov
and
adc
dec
xchg
inc
jp
loope
xchg
add
inc
call
js
fisubrl
lret
pop
pop
mov
fsubs
leave
sbb
pop
lret
mov
adc
adc
sub
in
fstp
cwtl
lret
push
cli
repnz
xchg
aad
popf
add
mov
stc
repz
outsb
sub
pminsw
adc
dec
xchg
xor
loope
cld
repnz
pushf
insl
dec
xchg
and
sub
dec
daa
dec
inc
sub
jg
cld
stc
repnz
xor
add
stos
jo
mov
jne
push
push
pop
jns
pop
and
xor
mov
jns
xchg
mov
push
and
movntq
out
scas
lcall
push
mov
dec
xlat
dec
in
cltd
xchg
push
fdivrp
pop
frstor
das
xlat
shrl
fsubrl
pop
fs
pop
cmc
lret
cmp
add
call
out
and
cs
xchg
pop
cmc
dec
ficomps
rcrb
push
xchg
scas
hlt
jecxz
jbe
stc
repz
repz
stos
call
push
push
ror
lahf
aas
jg
mov
sbb
shlb
cld
stc
repz
mov
push
gs
ret
lahf
aas
jg
dec
fcoms
es
aad
movsl
stc
repz
inc
cmp
mov
push
int3
inc
dec
sbb
cld
orl
xor
out
mov
test
fisubrl
jo
cld
stc
add
dec
and
test
jb
and
fsubrl
ja
jle
pop
ds
arpl
sahf
xchg
icebp
in
out
rclb
fidivrl
add
das
test
sub
scas
shl
cmp
stc
movsl
sahf
inc
out
add
mov
cld
ret
dec
loope
cltd
test
pop
mov
dec
push
pop
jns
mov
lret
or
in
push
addr16
push
add
out
inc
test
stc
and
xor
xor
push
mov
imul
add
rcrb
not
adc
aas
sub
fstpt
jle
lock
daa
mov
repnz
cmp
pop
cmp
push
sahf
cmc
dec
fsub
lret
sub
jb
cmp
pop
inc
xchg
push
pop
jns
push
add
mov
fidivrs
in
adc
ss
jg
icebp
divl
in
in
xchg
das
push
into
cmp
test
repnz
lret
pop
rcl
sub
sbbb
hlt
push
cmp
leave
clc
mov
jbe
lds
aas
add
roll
push
fcoms
out
lret
iret
cmp
test
pop
pop
lods
movsb
out
pop
xchg
sub
inc
dec
out
std
imul
test
loopne
out
ds
push
outsl
les
repz
fs
repnz
repz
int3
mov
ret
mov
jg
add
sub
mov
out
lahf
aas
clc
jo
pop
push
stos
loop
popa
data16
clc
in
add
nop
xlat
mov
outsb
je
push
xor
cld
mov
dec
ror
ds
iret
lahf
aas
ljmp
repz
mov
inc
ret
daa
cli
repnz
in
stc
adc
loope
lcall
jg
cld
cltd
xor
add
and
stc
sbb
das
lahf
aas
in
add
mov
adc
lahf
aas
aas
mov
inc
sbb
add
dec
popf
dec
inc
cmp
out
shlb
daa
push
inc
pushf
mov
out
jg
cld
stc
pop
cld
push
adc
daa
call
ja
cs
cmp
and
mov
push
pop
jns
addl
push
pop
iret
sti
jecxz
xchg
jge
in
or
cmpsl
leave
mov
jmp
dec
scas
dec
je
mov
and
fisubs
xchg
xchg
xchg
ret
add
jnp
aas
pop
ffreep
cmp
pop
cli
repnz
cmovg
orl
pushf
jb
xchg
testl
fiadds
outsl
imul
add
sbb
cld
stc
push
cli
shrb
das
jge
adc
xor
repnz
iret
in
das
xchg
jp
inc
xchg
sbbl
push
mov
enter
mov
lret
mov
add
jmp
mov
sti
mov
and
pushl
repz
inc
loopne
cs
es
xchg
pop
outsl
inc
or
pop
lds
ret
jne
cmp
dec
sarl
lds
repz
pop
and
jmp
jno
dec
iret
test
je
mov
sbb
or
nop
dec
les
xchg
inc
repnz
mov
inc
jmp
pusha
sub
pop
lret
mov
mov
mov
loop
scas
mov
cmp
mov
push
lret
mov
add
scas
pop
aas
add
pop
out
jle
repnz
dec
arpl
rol
scas
out
iret
push
sbb
das
mov
or
and
mov
repz
ss
imul
jb
xchg
ja
repnz
in
insl
cmp
push
mov
cld
cmp
push
fisubl
cld
stc
and
scas
aad
movsb
inc
adc
and
jg
pop
sbb
mov
lahf
outsb
lock
lea
notl
into
gs
loopne
sbb
daa
loope
push
inc
push
addr16
cld
cwtl
leave
cmpl
rorl
je
out
lahf
adc
in
test
js
jle
jg
cld
stc
sub
sub
and
pop
jl
sti
loopne
std
mov
adc
shrb
mov
fbstp
inc
std
add
cwtl
cld
stc
repz
hlt
push
xchg
inc
cmp
mov
pop
jle
lods
pop
jo
pop
mov
pusha
fs
mov
movsl
test
dec
sub
or
cmp
in
inc
mov
jg,pt
lret
lret
or
jg
xchg
adc
clc
sahf
dec
fbstp
cld
push
and
add
xchg
mov
push
lea
stc
repz
in
mov
xchg
repz
push
jb
icebp
dec
cld
repnz
fs
sbb
jl
inc
clc
repnz
push
cmp
ljmp
repnz
iret
adc
out
das
outsb
mov
xchg
sub
bound
cld
stc
push
imul
cmp
mov
or
lahf
aas
lods
imul
cmp
or
iret
dec
pop
loopne
mov
mov
pop
fnstcw
adc
jae
mov
sbb
ret
inc
in
das
lahf
and
cld
divl
and
imul
push
pop
jns
xchg
loop
add
pop
cmp
adc
mov
fnstsw
mov
cltd
dec
cs
inc
inc
std
jnp
ja
sbb
lret
push
jle
aas
jg
loope,pn
mov
pop
inc
popf
jp
insb
mov
jmp
fadds
aam
test
fwait
mov
lahf
mov
push
adc
stc
out
lahf
aas
jne
mov
jl,pn
stc
repz
dec
dec
in
adc
sub
jg,pt
and
test
dec
and
mov
icebp
popa
imul
shlb
repz
mov
ja
das
or
fidivrs
pop
xchg
rcr
push
int
adc
in
push
jae
into
or
pushf
popf
nop
adc
dec
pusha
lret
xchg
push
pop
in
cmp
fs
mov
incl
out
cmp
jg
jle
mov
mov
iret
lahf
aas
fisubs
scas
pop
adcb
aas
add
arpl
xchg
xchg
lahf
imul
mov
out
cmp
dec
pop
cmp
scas
push
or
jg
sub
clc
stos
dec
scas
xchg
out
call
jg
or
shlb
addl
jmp
ror
scas
cmpsl
mov
mov
rcrb
push
in
dec
jmp
mov
pop
inc
cli
psubsw
or
aas
jg
cld
out
and
add
add
pushf
out
sbb
xchg
repz
lahf
inc
adc
das
lcall
mov
add
mov
xor
xchg
iret
lahf
aas
mov
mov
fdivl
push
sbb
add
lahf
std
jb
mov
iret
jp
sub
adc
mov
jg
sub
scas
adc
push
inc
test
int3
pop
inc
jg
fbld
daa
fucomp
mov
out
lahf
or
cmp
xor
shll
cs
cmpsl
mov
jg
cld
stc
xor
ds
das
shll
das
aas
jg
aas
rcl
insb
sub
out
icebp
pushf
sub
mov
cs
outsl
test
sub
jle
imul
or
in
dec
sub
cmp
push
jecxz
les
ljmp
lret
mov
das
out
movsbl
ljmp
aaa
shl
movsl
or
sahf
aas
ret
inc
lcall
idiv
dec
jmp
sbb
mov
jb
inc
adc
dec
mov
cld
stc
repz
ret
cmp
push
movsb
prefetch
or
mov
inc
aaa
push
iret
lahf
pop
mov
lds
enter
repz
jmp
aas
xchg
in
push
or
iret
lods
cmpsb
jne
daa
and
jno
repz
push
sbb
inc
dec
adc
push
and
mov
xlat
fidivrs
std
jg
decl
add
jns
xchg
push
pop
and
cltd
arpl
mov
push
pop
out
add
push
iret
in
in
xor
jns
bound
xchg
mov
xchg
test
fstps
push
mov
push
pop
jns
jns
cmp
aam
fnsave
pop
pop
jns
out
add
jns
cmp
ja
dec
out
cmp
push
xor
fucomp
cmc
pop
cmc
jb
das
mov
in
mov
std
rcl
clc
rcr
rol
and
xchg
push
pop
jns
mov
daa
dec
cltd
mov
add
sub
pop
jns
loope
rclb
test
dec
ret
pop
jns
xchg
repz
jns
shrl
pusha
mov
pop
test
xchg
push
xlat
jns
sahf
loopne
es
mov
xchg
mov
cwtl
ror
sub
mov
inc
sbb
mov
mov
loopne
incb
ja
cmc
inc
xchg
jp
jmp
mov
pop
call
sub
adc
lret
sub
jle
xchg
jl
mov
push
pop
sub
mov
mov
dec
xchg
call
sti
or
out
xchg
sub
repz
aas
scas
mov
or
in
inc
push
mov
xchg
aas
fiadds
lret
sub
pop
inc
out
fwait
mov
test
push
push
xchg
nop
les
movsl
frndint
stc
repz
test
jge
rorb
je
inc
das
jg
mov
lds
das
lahf
pop
out
or
sbb
push
ret
ret
out
mov
pop
arpl
xchg
push
pop
jns
push
pop
dec
mov
push
je
sub
lret
hlt
xchg
sbb
scas
jns
pusha
bound
adc
cmpsl
mov
cmp
outsl
enter
add
enter
sub
inc
data16
xchg
lret
mov
scas
mov
mov
in
xlat
in
rcll
mov
add
cld
stc
adc
dec
xor
push
add
sbb
jbe
sbb
mov
xor
pop
add
ss
paddsw
dec
pop
jns
xchg
pop
push
mov
dec
out
cmp
imul
mov
cld
stc
repz
and
xor
test
test
mov
fcompl
repnz
lock
or
xchg
scas
mov
inc
cmp
dec
out
fs
xchg
lahf
jg
insb
cmp
mov
jle
insl
out
iret
sub
jecxz
iret
lahf
std
and
add
add
mov
jg
pusha
push
decb
adc
push
inc
xor
movsb
stos
xchg
lahf
xchg
iret
lahf
aas
jg
icebp
mov
aaa
mov
or
int3
inc
cli
in
out
fcmovne
push
lods
inc
xor
adc
out
out
pop
cld
mov
mov
xor
arpl
repz
xor
adc
je
sub
mov
stc
mov
popf
shll
fwait
das
ucomiss
mov
or
lock
xor
adc
cmp
add
repnz
inc
out
pop
fistpl
subl
scas
sbb
aad
scas
test
mov
lcall
sbb
iret
cld
lahf
mov
adc
xchg
mov
xchg
ja
mov
cmp
jg
and
push
mov
hlt
sahf
or
sti
push
loopne
fwait
hlt
pop
jle
cld
aad
push
push
cmp
jb
xchg
ja
test
jne
pop
cmp
std
leave
clc
sti
nop
incb
scas
pop
jg
or
in
push
fmulp
mov
add
gs
jns
pop
into
mov
add
rcr
inc
shrl
dec
call
xchg
sbb
or
cwtl
push
inc
and
mov
jle
push
sub
sbb
lahf
aas
je
jg
repz
mov
push
aaa
jnp
or
out
lea
in
push
pop
add
stos
pop
addr16
in
inc
push
pop
jns
into
push
push
dec
xchg
push
in
bound
mov
mov
mov
popl
std
idivl
out
out
dec
test
jg
sub
leave
pop
and
ljmp
das
out
nop
mov
and
inc
jmp
push
xchg
mov
stc
out
xchg
stc
inc
idivl
push
or
stc
out
lahf
aas
lods
int3
cmp
xor
add
pminsw
cld
stc
repz
sub
dec
cmp
jbe
ja
mov
out
pop
push
out
je
sahf
xchg
sbb
cli
xacquire
rolb
int3
jb
inc
das
jg
mov
jae
fs
fucom
iret
lahf
pop
mov
mov
mov
xchg
icebp
dec
loop
xor
dec
shl
aas
mov
fwait
cld
stc
adc
insb
and
cld
sub
nop
int
mov
jg
xor
jp
cwtl
add
sarl
inc
pop
imul
inc
mov
mov
sti
arpl
mov
mov
push
sub
out
cmp
mov
inc
lret
fsubp
mov
jg
nop
aam
inc
jae
aas
outsb
push
cld
out
mov
dec
xchg
lock
xchg
lcall
repnz
lret
nop
and
sub
int3
repnz
mov
mov
or
ret
jne
lret
mov
xor
pushf
xor
mov
aaa
push
mov
loope
fdivs
out
cli
pop
jns
fst
mov
cld
cli
or
out
test
jns
xchg
push
mov
insl
test
pop
das
push
pop
popa
cmp
rcrb
in
out
inc
jb
aas
aas
xor
loopne
lret
mov
repnz
mov
movsb
adc
and
je
repnz
inc
lea
xor
popf
aas
out
les
jg
mov
mov
xchg
rorl
mov
das
aas
daa
bound
inc
ret
mov
sub
or
dec
jmp
xor
mov
mov
inc
inc
pop
xor
mov
popf
jbe
lret
inc
lcall
andb
enter
mov
dec
push
pop
jns
lcall
cs
or
cltd
jno
scas
pop
jns
xchg
jmp
cmc
adc
jl
push
ret
mov
xor
lahf
pop
add
lea
lcall
out
pop
aad
push
pop
adc
call
or
mov
push
xor
aas
jnp
out
cmp
rorb
jg
adc
and
pop
jns
pop
pop
lcall
fdivl
repnz
lds
xor
pop
ss
fsubrp
xchg
popf
shrb
js
rorl
out
jns
xchg
add
es
push
xlat
mov
dec
and
xchg
push
sub
shlb
or
xchg
mov
aaa
leave
insl
fwait
outsb
cld
stc
repz
out
cmpsb
pop
pop
mov
js
pop
test
cs
aas
jg
shl
push
mov
sbb
lret
jl
out
push
add
pop
adc
scas
outsl
ret
repz
jge
sbb
jg
cld
enter
mov
mov
out
lahf
aas
add
cmpsl
add
stc
repz
mov
xchg
popf
mov
int3
jae
push
jl
lahf
movsl
ret
pop
adc
cwtl
inc
fisttpl
cld
stc
loopne
push
popf
std
out
fistl
sub
lret
sub
xchg
lods
xor
fcomps
scas
mov
sbb
jae
in
icebp
jae
std
jb
lds
gs
mov
push
inc
xchg
pop
jle
outsb
es
nop
jae
in
cmp
iret
ds
mov
mov
les
incl
push
cmpsl
jno
mov
jo
lahf
pop
dec
dec
rorw
push
push
out
movb
out
xchg
in
lret
pop
je
pop
ja
outsl
jg
cld
mov
fstpl
push
cmp
aas
cltd
xor
xchg
iret
lahf
xchg
mov
divl
mov
jg
sub
aad
mov
mov
out
lahf
aas
jge
aam
and
filds
daa
mov
iret
stos
push
pop
jns
pusha
iret
jecxz
ret
lods
std
out
jmp
outsb
cmp
pop
jns
xchg
sbbb
jnp
cwtl
cmp
push
in
push
leave
psubsw
mov
cltd
mov
push
fdivrp
fucomp
push
xchg
filds
fcoml
mov
jns
xor
fstpt
add
std
jb
xchg
aaa
pop
xchg
mov
add
test
iret
pcmpgtw
jmp
sbb
call
sbb
mov
cld
insb
push
inc
cmp
lahf
aas
jg
jo
xchg
and
adc
movsl
das
jg
fisttps
call
mov
stc
repz
push
fs
pop
stc
adc
inc
pop
xor
inc
incb
stc
cmp
mov
xchg
sub
jg
sbb
jecxz
data16
xor
or
push
push
scas
cmpsl
scas
test
sub
repnz
fidivrs
repnz
scas
mov
inc
mov
sbb
scas
mov
xor
popa
inc
scas
movsb
out
lret
mov
cmp
cltd
adcl
and
mov
jne
or
imul
mulb
mov
xorb
out
inc
shrl
pop
inc
hlt
add
cltd
push
mov
cmpsb
mov
pop
adc
adcb
jg
stos
mov
imul
or
in
out
aas
pushf
or
jnp
fiaddl
mov
sub
dec
out
mov
adc
xchg
xchg
jge
sahf
in
mov
jg
push
inc
adc
fsubs
adc
sbb
jg
pop
pop
push
sbb
in
mov
iret
mov
cli
push
xor
jno
fstl
fnsave
sub
das
add
nop
jnp
mov
push
sub
sub
std
pop
cmp
mov
mov
pushl
scas
mov
lock
inc
pop
and
in
push
dec
pushf
mov
repnz
sub
sub
dec
jmp
je
sbbl
in
pop
inc
mov
mov
div
out
dec
les
pushf
mov
aam
aas
xchg
push
pop
jns
sub
jmp
int
cmpsl
inc
out
pop
std
jb
cmpb
sub
adc
sub
xchg
lret
enter
xchg
dec
xchg
loope
ret
sub
and
push
or
jae
in
xchg
or
jl
dec
xchg
push
fsubrp
jbe
scas
test
imul
dec
cltd
imul
xchg
pop
dec
pop
inc
int
out
sahf
fdiv
repnz
dec
js
out
xchg
lods
mov
mov
or
data16
mov
ror
lods
dec
lret
mov
dec
inc
aad
out
mov
add
sbb
scas
insl
cmp
jge
xchg
push
jns
test
pop
popa
push
dec
mov
in
push
pop
inc
xor
ret
pop
imul
xchg
push
pop
jns
jecxz
bnd
push
lods
dec
pop
pop
pop
jns
xchg
inc
and
out
test
fisttpl
cld
push
push
out
out
cmpl
inc
cmp
call
aas
stos
xor
cmc
jl
dec
add
jne
inc
adc
jg
test
aad
pop
jns
xchg
push
fs
sahf
push
aam
jns
xchg
push
mov
mov
test
or
out
adc
push
jo
scas
pop
jmp
cli
sbb
jecxz
cld
stc
repz
int3
fnsave
xor
pop
sbb
das
aas
jg
jno
lods
mov
mov
pop
out
xor
mov
int3
sub
scas
sarl
pushf
mov
repnz
rorl
or
and
in
adc
jnp
push
fcmovnbe
xchg
lahf
pop
sahf
or
nop
jge
mov
mov
clc
xor
add
icebp
movsl
mov
ficomps
dec
stos
sbb
movsl
lea
mov
jecxz
cli
mov
ljmp
repnz
shlb
cmpsl
xchg
hlt
mov
add
sub
das
ljmp
xlat
jne
mov
cld
sar
in
jb
mov
xor
enter
fidivrs
and
jecxz
xchg
fisttpll
stos
outsl
inc
mov
mov
adc
jno,pt
jns
xchg
push
mov
and
mov
test
mov
in
push
pop
sub
aam
in
rcrb
pop
jns
out
icebp
sbb
movsl
in
ja
mov
fists
pop
fsts
iret
pop
loope
xchg
roll
mov
push
mov
xor
bswap
xchg
pop
jns
xchg
dec
out
mov
lahf
sarb
cmc
inc
sub
dec
jns
xchg
push
inc
fcoml
in
loopne
adcl
push
pop
fsubrs
clc
enter
inc
rclb
cmp
std
jb
inc
daa
inc
cwtl
pop
jnp
cmp
pop
mov
xchg
adc
adc
mov
cmp
adc
dec
mov
cmp
pusha
insl
xor
ds
adc
pop
add
outsb
mov
repnz
pop
mov
mov
add
lret
sub
ljmp
jns
in
insl
lock
nop
sub
lret
pop
pop
dec
mov
and
repnz
out
xor
xor
das
ja
out
dec
or
inc
fistpll
bound
mov
xor
adc
aas
hlt
out
cmc
stos
out
inc
ljmp
xchg
jge
in
dec
repz
and
dec
xchg
adc
fidivrl
jg
or
int3
and
roll
fwait
scas
dec
xchg
lahf
mov
ds
push
test
bound
jno
insb
cmp
jns
xchg
sub
inc
fidivrs
aam
xor
push
mov
cmc
rorl
jnp
loope
xchg
push
pop
and
mov
xchg
iret
sbb
icebp
cli
xchg
sub
pop
lret
push
daa
ret
loop
mov
loopne
scas
mov
fmuls
xchg
ljmp
sub
pop
sub
pop
outsl
ret
mov
jp
stc
out
aaa
negb
outsl
dec
pop
cmc
jmp
movsl
popf
pop
dec
jle
pushfw
dec
push
jo
cmc
push
lea
lahf
je
test
lds
lahf
out
mov
pop
movsl
in
mov
out
ds
lahf
mov
frstor
jp,pt
dec
js
cld
stc
repz
outsl
pop
fcoml
aam
je
pop
fbld
jg
sub
fidivrl
sbb
lods
in
das
out
and
add
mov
mov
sbb
xchg
mov
test
and
test
push
loope
bndstx
pop
scas
iret
mov
enter
in
out
add
pop
pop
mov
dec
add
mov
sub
pop
adc
scas
jo
in
push
mov
mov
jg
add
negb
mov
jle
orl
ss
lret
test
mov
out
cli
in
mov
scas
stos
push
loope
add
in
shll
mov
out
jns
in
sahf
les
int
test
or
lea
movsb
dec
cs
adc
jns
in
jbe
jo
jb
xchg
sub
in
push
dec
fstpl
lcall
fcmovnbe
das
push
pop
sbb
lods
sahf
jne
pop
inc
ror
and
push
cmp
aam
outsl
test
cmp
stc
pop
jle
and
sahf
cmp
out
xor
aas
mov
push
and
xchg
out
mov
cmpsb
dec
int3
cmp
int
push
sarb
cld
stc
mov
inc
cs
inc
out
rolb
or
lahf
aas
in
jae
out
inc
dec
test
mov
stos
pop
call
sub
pop
out
clc
cmp
scas
std
js
iret
lahf
aas
int3
fsub
movsl
sbb
imul
repz
iret
dec
or
js
mov
aaa
aas
jg
mov
sub
ja
out
lahf
into
or
sbb
push
insb
cmp
sub
cld
repnz
cwtl
lods
scas
mov
xchg
out
inc
jl
sahf
jb
fwait
cmpsl
dec
jl
pop
ljmp
scas
mov
inc
cmp
jbe
dec
mov
lds
mov
xchg
dec
insl
mov
loopne
xor
out
out
mov
int3
jae
adc
test
mov
push
pop
pop
sarb
xor
lret
idivl
xor
lahf
inc
jg
pop
stc
testl
lcall
jle
adc
fbstp
mov
stc
stc
and
xchg
mov
mov
ja
lds
ja
jecxz
xchg
ret
mov
adcb
loopnew
out
movsl
in
or
jmp
stc
mov
or
mov
dec
clc
stc
mov
cld
imul
int3
test
cld
aam
adc
jg
movsb
pop
ds
out
push
std
jno
or
aad
in
aas
jg
into
in
dec
cwtl
add
mov
mov
cmp
in
insb
mov
or
stc
pop
sub
das
loop
iret
jle
fwait
xchg
lock
outsb
mov
xor
cltd
xchg
cmp
mov
adc
stc
repz
into
pop
jmp
add
sarl
add
and
dec
movsl
jg
mov
mov
repz
int
outsl
js
xchg
sbb
daa
pop
push
fidivrs
mov
xchg
dec
inc
xchg
sahf
in
pop
jns
xchg
cli
and
in
insb
and
in
push
mov
rcrb
inc
adc
cld
stc
cmpsl
jle
jmp
mov
push
lret
lret
mov
or
cld
inc
jb
lcall
bound
sti
into
ret
and
mov
pop
lahf
aas
jg
into
imul
pushf
jle
clc
imul
jecxz
cs
out
ror
out
or
inc
out
push
cld
stc
repz
lea
or
fsts
ret
add
outsl
or
out
lahf
xor
mov
or
mov
or
shll
sub
inc
std
dec
jmp
jnp
sbb
sbb
cld
stc
repz
enter
ss
mov
sbb
sbb
pop
pop
iret
lahf
aas
jg
cmpb
pushf
and
repz
loope
fsubr
je
xor
pop
jne
in
jg
cld
stc
mov
aaa
pop
out
movsl
cwtl
inc
adcl
adc
jmp
mov
call
scas
lods
mov
pop
or
inc
iret
lahf
pop
add
adc
in
ret
daa
mov
out
les
push
mov
xchg
push
pop
add
dec
sub
pop
jns
outsl
mov
int
mov
pop
jns
xchg
jmp
sbb
loopne
ret
push
inc
jo
lret
xchg
push
jne
iret
xchg
sbb
jns
fstpl
pop
shll
in
decb
call
insl
out
dec
xchg
lahf
aas
jg
fwait
sub
enter
inc
push
mov
push
scas
jge
sub
divb
and
arpl
xchg
iret
aaa
ss
das
loopne
repz
cld
stc
repz
mov
fildll
adc
scas
or
mov
jo
cmp
pop
and
repnz
fadd
in
fisubrs
cmp
fwait
pop
jns
lock
lcall
pop
ds
das
push
shl
lahf
cmpsl
dec
sbb
clc
repnz
movsl
lods
sub
push
push
jg
cld
ret
lock
testb
xor
xchg
lahf
aas
dec
adc
sub
stc
repz
dec
xlat
es
add
and
sbb
je
push
fidivrs
subl
push
jno
das
adc
jg
xor
inc
out
cmc
lret
xchg
shll
add
aaa
stos
fbstp
mov
sub
outsb
mul
sbb
dec
lock
lea
dec
test
jns
dec
scas
mov
stos
iret
dec
jo
sub
enter
lret
bound
mov
aas
push
jle
in
jg
fidivs
loopne
mov
and
out
pop
test
scas
insb
or
jnp
repz
dec
or
enter
lret
mov
es
inc
xor
mov
lret
dec
jo
scas
outsl
dec
inc
adc
mov
mov
imul
lret
push
stos
push
nop
mov
ljmp
mov
ds
pop
fstps
lret
negb
jno
es
xor
lret
inc
adc
stos
andl
mov
jg
sub
push
mov
aad
imul
movsb
jbe
out
jae
mov
mov
stc
and
jbe,pt
fbstp
mov
cmp
jno
jmp
mov
mov
adc
hlt
lahf
stos
or
sub
cmp
sbbl
cld
mov
mov
sbb
dec
mull
jecxz
push
jl
lahf
aas
call
cs
mov
jmp
pop
jecxz
iret
mov
iret
pusha
scas
into
xchg
lock
repnz
and
mov
pushf
adc
scas
mov
mov
cmp
jecxz
out
sub
jecxz
iret
pop
sahf
enter
push
adc
sbb
in
push
fmulp
mov
mov
xchg
sbb
imul
ja
repnz
push
mov
fnstenv
out
rcrb
pop
mov
push
mov
xchg
push
fsubp
sub
xchg
cli
inc
dec
add
mov
inc
iret
jo
movsl
adc
rcrb
leave
pop
out
jns
lret
out
jmp
repnz
push
jl
out
lahf
fwait
xor
je
xchg
push
pop
pop
leave
scas
out
jmp
les
subb
mov
jmp
dec
mov
mov
jnp
ja
inc
cmp
adc
xchg
ja
xchg
hlt
xchg
jbe
mov
or
popa
cld
and
mov
cld
stc
repz
mov
inc
xor
inc
lahf
mov
hlt
mov
fbstp
jb
repnz
cmp
gs
mov
leave
add
pop
xchg
das
scas
int3
jnp
dec
xchg
mov
push
add
stc
repz
xor
in
imul
cmp
jge
push
test
mov
out
lahf
aas
stos
mov
dec
or
xchg
jg
cmpsl
fistpll
scas
push
adc
in
das
push
mov
sub
cmpsb
adc
repnz
lods
jno
or
roll
cld
dec
fadd
rcrl
cmp
aas
les
movsb
lret
rclb
mov
out
call
sarl
enter
xchg
jnp
scas
mov
inc
gs
int
jge
pop
jo
test
xchg
sub
xor
mov
jle
aas
pop
loopne
jmp
iret
or
mov
xchg
pushw
repnz
sahf
dec
and
and
push
cmpsl
ljmp
ja
es
cmp
scas
out
mov
mov
adc
push
push
xor
repnz
xchg
cli
mov
pusha
outsl
lcall
add
nop
test
mov
pop
lret
clc
repnz
aaa
jmp
cmpsl
sbb
xchg
out
lahf
repnz
push
sahf
cmp
in
sbbb
jb
push
pop
loopne
decl
cmp
fdivrp
aas
inc
adc
lea
leave
in
cmpsl
ja
pop
jns
fldl
jl
pop
fs
sbb
mov
data16
pop
in
fsubs
fstp
fildll
decl
push
aam
mov
mov
stc
xchg
das
movsb
das
pop
inc
inc
ficoms
jno
rcll
das
cs
mov
repz
out
fsubrl
arpl
test
test
push
inc
pop
or
mov
mov
ljmp
mov
je
xchg
jg
mov
inc
cmp
push
stc
add
push
push
jecxz
add
inc
clc
jnp
jae
sbb
adc
stc
add
bound
lods
mov
inc
push
out
mov
push
mov
jb
lret
loopne
jle
or
leave
repz
adc
in
push
jnp
mov
mov
das
mov
mov
mov
and
jmp
stc
repz
clc
pop
or
push
mov
cmp
mov
repnz
pop
and
jno
repnz
scas
mov
mov
repz
out
cmpb
jp
sbb
xor
sbb
movsl
or
jge
sbb
mov
roll
in
lret
mov
pop
into
mov
rol
sub
or
and
sub
outsb
sbb
scas
mov
sub
and
scas
jmp
and
xor
imul
and
fmull
outsl
ds
ss
cli
fimull
inc
hlt
scas
push
jmp
cld
stc
hlt
outsl
jp
cli
pop
mov
icebp
adc
das
xchg
lahf
aas
mov
sarb
jge
pop
push
das
lcall
mov
mov
out
lahf
sbb
xchg
cmpsl
dec
add
cld
stc
test
sbb
push
pop
dec
aad
mov
aas
dec
jne
in
stos
xor
repz
arpl
fisubrs
mov
xchg
adc
cld
cltd
cli
mov
jno
ds
jge
inc
pop
dec
pop
jle
loope
fdivrl
scas
or
pop
sbb
mov
fwait
and
repnz
lret
inc
cmpl
bound
lret
scas
sbb
mov
rcrl
outsl
mov
scas
mov
mov
test
pusha
js
xchg
xchg
sar
in
dec
mov
push
shll
add
out
icebp
test
vaddsubps
inc
iret
mov
mov
mov
popf
pop
mov
fstps
push
pop
lahf
aas
jg
fmulp
cmp
fisubrs
adcb
add
scas
int
pop
cld
push
sbb
mov
das
xchg
adc
out
iret
adcb
iret
dec
xor
xor
mov
mov
sti
das
ret
jg
jnp
add
add
mov
out
jg
add
mov
dec
in
in
dec
in
fstps
fidivrs
in
add
imul
out
out
mov
or
or
shl
lahf
lea
cs
xor
insb
add
xor
cld
stc
repz
test
cmpsl
dec
mov
rcl
sbb
lahf
aas
jg
popa
xorb
pop
xorb
pop
pop
ret
mov
sub
or
addb
outsl
bound
loop
xchg
jmp
mov
test
xchg
jg
jmp
jbe
jb
xchg
push
and
and
inc
sti
cs
pop
and
xor
mov
push
mov
repnz
jmp
mov
lods
xchg
les
cltd
and
das
sub
mov
fisttpll
pushf
shr
mov
dec
mov
dec
pop
fdivrp
add
inc
jl
xlat
daa
fs
pop
jns
out
sub
jecxz
pop
scas
mov
jb
inc
and
hlt
in
popa
in
sub
das
aas
lea
into
jl
sahf
inc
aas
movsb
lret
fildll
mov
lret
repnz
clc
loopne
mov
push
pop
pop
fstpl
scas
mov
testl
adc
mov
lret
scas
cmp
nop
in
add
clc
iret
es
mov
adc
pushf
std
dec
dec
mov
mov
aas
push
jmp
mov
test
repnz
cs
mov
push
out
adc
pop
push
outsb
cs
stc
cld
stc
repz
jge
scas
mov
mov
mov
sahf
jl
sbb
mov
movsb
repz
lret
push
dec
sbb
push
push
in
hlt
jg
cld
stc
mov
jg
dec
or
sbb
xchg
lea
sbb
test
lret
lahf
aas
inc
inc
xlat
aad
lahf
repnz
mov
mov
data16
bound
and
into
add
std
in
out
mov
dec
jb,pt
jmp
inc
adc
stc
push
cmp
in
rcr
jp
fidivrs
lea
mov
adc
in
inc
rol
push
jge
stos
xchg
jg
in
push
aam
jns
push
push
sbb
mov
mov
js
add
inc
or
sub
jecxz
jl
scas
dec
adc
iret
lahf
jg
ljmp
xchg
and
cld
stc
repz
xchg
gs
xor
and
out
lahf
aas
jg
jle
xor
in
mov
fst
jb
cmpsb
scas
rcrb
mov
jmp
cs
cmp
inc
adc
je
lea
fisttpl
and
cmp
mov
iret
jl
cld
stc
adc
test
movsl
pop
es
mov
mov
ja
or
adcb
into
mov
in
aad
push
pop
outsl
adc
in
daa
pop
inc
imul
mov
jl
adc
out
pop
in
cmp
mov
jp
xor
lods
jo
repz
scas
jle
sti
xor
sbb
jbe
iret
popf
aas
jg
cld
sahf
sub
mov
push
inc
mov
lahf
push
sbb
cld
mov
clc
xchg
clc
sti
in
bnd
inc
ud0
subb
cld
ret
clc
jle
and
out
into
sub
decb
xchg
inc
inc
fisttps
loopne
mov
sub
mov
jp
cmpsl
out
fdivrp
mov
cmp
testl
lret
sub
push
push
sbb
inc
jg
dec
mov
mov
jg
cld
stc
mov
lods
push
stos
mov
cmp
adc
pop
inc
incb
pop
cltd
out
outsb
pop
jne
xlat
xchg
ja
jle
sbb
aaa
sbbl
xor
mul
or
outsl
add
jnp
xchg
ja
ficomps
mov
mov
lea
push
pop
jns
addr16
mov
mov
sbb
dec
and
lret
xchg
push
mov
test
push
pop
jns
cld
aam
dec
cmp
dec
xchg
enter
xchg
jne
lcall
repnz
loop
add
bound
cmp
cmp
ret
int
data16
inc
call
inc
jns
lret
xchg
and
inc
out
and
sub
jno
fisttpll
inc
out
out
lahf
aas
jle
ret
jge
popa
int3
cmpsl
pop
push
cld
stc
repz
lds
pop
mov
call
test
aas
jg
push
cli
lods
lcall
iret
push
or
cmpsb
rcll
mov
stc
repz
ds
jle
xchg
repnz
xor
mov
cmp
les
clc
jns
aaa
test
add
std
lret
xchg
push
pop
mov
lods
pop
or
jne
call
cmc
inc
pop
mov
lock
sub
lahf
mov
sub
jb
mov
cld
stc
jo
mov
xor
mov
push
pushf
cwtl
xchg
iret
lahf
aas
loop
shll
pop
push
dec
or
iret
lahf
aas
jmp
mov
mov
and
lret
jnp
adc
dec
dec
ret
out
inc
movsb
aaa
shlb
and
pop
xor
jg
cld
lea
add
sbb
push
and
iret
mov
mov
pop
cltd
add
pop
jg
outsl
and
and
sub
test
jmp
les
rcll
xchg
cmp
clc
in
xchg
cmp
repnz
jns
mov
fbstp
scas
push
fsubrp
push
push
sbb
cli
and
aaa
cmpsl
dec
lods
sahf
jl
mov
cwtl
aad
dec
adc
stc
out
dec
aas
xor
mov
cmp
iret
lahf
aas
push
outsb
mov
pop
dec
popf
repz
jmp
or
mov
jle
cld
stc
push
and
adc
lcall
out
xchg
ja
pop
outsb
xlat
inc
iret
dec
out
outsl
mov
pop
sub
jecxz
rcr
das
lahf
adcb
loop
fsubp
test
jge
in
sub
jp
mov
cltd
fdivr
xchg
mov
bound
arpl
das
lahf
aas
pop
inc
shll
or
lret
out
cs
sbb
cmpsl
or
mov
xchg
sbbb
cld
pop
push
mov
pop
test
jg
lcall
cld
push
pop
push
aad
inc
lahf
jge
jno
push
pop
jns
pop
out
or
add
dec
test
xchg
push
xor
xchg
js
aam
jmp
sbb
lahf
jmp
in
das
jle
jns
repnz
xchg
mov
sbb
outsl
stos
push
xchg
jmp
xchg
push
pop
cmp
int
rep
daa
das
push
pop
jns
mov
pop
push
cmp
dec
mov
aam
shl
rcr
ljmp
dec
paddd
stc
xrelease
mov
imul
lahf
aas
jg
mov
inc
mov
in
loope
aad
xor
inc
call
out
adc
std
repnz
pop
insl
dec
pushf
cmpb
mov
iret
pop
push
mov
jb
cmp
push
int
sub
cld
stc
inc
ljmp
sub
and
lahf
cmp
aas
in
nop
xchg
jns
jns
shlb
repz
adc
or
jg
cmpsb
push
stc
cld
adc
jl
sub
repnz
mov
hlt
sub
leave
jg
lret
sub
sub
dec
add
jne
mov
out
dec
pop
mov
aam
shrl
cs
addb
aad
stc
stc
repz
test
test
jno
fs
stc
repz
mov
testl
lahf
aas
jg
ds
sub
pop
cmp
sbb
adc
div
out
sub
dec
pop
out
es
pop
fdivrp
jb
push
mov
or
dec
xchg
fwait
aad
jne
lahf
pop
sbb
and
cltd
add
loope
xchg
xchg
mov
repnz
repz
sub
dec
xor
mov
lock
in
push
ficomps
lea
mov
in
out
xchg
push
pop
jns
ss
sbb
jns
test
les
std
scas
push
mov
jmp
cld
stc
repz
xor
lods
out
dec
jnp
fs
sbb
das
aas
push
pop
mov
enter
jmp
mov
pop
cmpsl
cmp
aas
scas
fxch
mov
in
mov
and
insl
jg
lods
cld
sub
jle
jle
ret
outsl
xchg
sar
iret
lahf
orb
add
and
repz
in
jp
mov
fdivs
bound
or
pop
jle
test
lahf
adc
cmpb
jae
push
fdivrl
scas
enter
repnz
adc
or
mov
insl
jg
lret
sub
and
mov
pop
repnz
das
jmp
out
pop
and
mov
fsubrl
lret
xchg
fisttps
pop
jns
in
push
std
std
test
pop
sbb
pop
mov
add
out
add
sbb
scas
jae
mov
mov
pop
inc
fistps
mov
mov
lret
iret
lahf
xchg
clc
xchg
iret
int3
add
jg
scas
mov
sbb
add
test
mov
imul
aas
pop
cmp
lret
jae
jb
or
or
add
repz
into
lods
subl
mov
hlt
loope
inc
sbb
aas
jg
cld
ds
mov
in
xchg
andl
out
lret
iret
lahf
mov
test
out
aas
scas
mov
hlt
sbb
fistpl
sbb
jp
cmp
lret
xchg
ljmp
js
cld
lret
repnz
popa
lret
add
dec
fcomip
pop
mov
cld
jle
pushf
mov
pop
mov
mov
xor
or
les
inc
cmpsb
inc
inc
sti
repnz
push
lock
leave
inc
in
pop
mov
mov
or
loope
push
pop
jns
mov
push
push
dec
ret
out
or
pop
iret
or
pop
dec
mov
or
repnz
jbe
push
clc
cmc
adc
out
lahf
pop
out
dec
push
arpl
mov
pop
cmpsb
in
in
jae
jno
ficomps
insb
inc
jmp
pusha
xor
stc
repz
cld
mov
aad
push
sub
stos
or
jo
lcall
fdivrl
dec
mov
sbb
aam
into
pop
mov
cmp
out
jecxz
sub
mov
push
daa
mov
jle
outsb
and
xchg
rol
mov
popf
dec
lret
lahf
movsl
push
pop
fcoms
jns
jne
outsb
mov
mov
cld
sub
incl
loope
mov
lahf
aas
aas
jbe
ja
dec
insb
mov
notl
cld
stc
repz
xor
and
jge
or
mov
aas
jg
add
lret
cmp
rcll
clc
bnd
mov
jns
aam
xchg
std
les
push
dec
fistpll
fisubs
xchg
jle
imul
pop
dec
imull
in
inc
in
in
and
sbb
stc
repz
xchg
bswap
push
sti
and
call
mov
iret
das
push
adc
inc
hlt
xchg
push
pop
jns
lret
jl
dec
stos
or
in
push
pop
jns
fldl
pop
mov
clc
inc
jnp
lods
mov
jns
xchg
push
pushf
mov
lret
and
int
ja
pop
sbb
in
fistps
jb
adc
jns
xorb
dec
mov
inc
test
pop
jns
xchg
outsb
fldcw
inc
pushl
push
pusha
xchg
ja
pop
push
mov
mov
mov
fidivrs
in
jae
std
leave
dec
or
jp
pop
sub
mov
dec
inc
cs
cwtl
scas
pop
mov
ss
xchg
mov
push
lret
xchg
sub
andl
mov
outsl
adc
mov
lea
or
sahf
lfs
and
test
loopne
inc
std
std
repnz
inc
mov
rorb
xor
pop
jl
jg
loope
imul
adc
jmp
call
ficomps
xchg
jae
mov
jno
leave
pop
data16
jns
xchg
pushl
add
mov
pop
das
sub
movsl
pusha
imul
cmpb
mov
cld
adc
das
add
mov
shll
cmp
inc
jecxz
adc
cmp
jns
repnz
outsl
push
xchg
or
xchg
mov
fs
addr16
and
inc
inc
aas
or
sub
lcall
dec
push
scas
mov
inc
popa
in
push
in
dec
xor
add
repnz
mov
add
push
out
xchg
sub
xchg
mov
adc
loope
das
add
mov
mov
fsubrp
or
sbb
xor
pop
jns
xchg
jp
dec
cmpsl
fidivrl
mov
mov
mov
push
repnz
sub
push
int
faddl
fisubrs
out
mov
cmovae
pop
loopne
jl
and
lahf
aas
jecxz
cmp
mov
in
add
xor
das
stc
repz
xor
mov
pop
sub
cld
lcall
jmp
mov
iret
lahf
pop
add
ljmp
lret
out
out
xor
adc
pop
jns
leave
iret
dec
imul
movsb
push
mov
pop
jns
xchg
sbb
popa
cltd
adc
shl
xchg
push
mov
mov
fs
xor
xchg
lretw
lds
dec
lods
test
mov
mov
out
xor
cs
pop
rcl
lret
repnz
out
mov
ds
pop
cmp
js
add
mov
inc
lret
in
sub
pop
and
fidivrs
sbbl
scas
out
cmp
lret
clc
aas
movsl
das
aas
outsl
jo
inc
mov
mov
lcall
mov
push
fs
sub
cld
mov
mov
mov
pop
popf
jne
out
pop
xchg
jb
les
pop
lret
mov
cmp
push
neg
cmpsb
mov
inc
repnz
mov
aas
loop
out
call
stc
icebp
out
xchg
popa
out
lahf
test
sahf
add
cbtw
test
and
lret
sbb
sub
repnz
in
and
inc
pop
mov
xchg
sub
call
xor
jbe
scas
mov
inc
rcll
insb
cltd
popf
xchg
jge
inc
sar
lret
iret
ficoml
lea
stc
js
repnz
cld
fisubrl
out
fisubs
pop
mov
ljmp
fistpll
mov
dec
jl
inc
out
jl
pop
fidivrs
insl
stc
testl
cmp
clc
enter
push
lds
cld
cs
es
cld
xchg
xor
mov
aaa
fisttps
scas
mov
sbb
into
inc
inc
ljmp
sbb
mov
fs
ss
ficomps
sub
lret
iret
lahf
aas
fdivrs
outsl
scas
loope
in
loopw
bound
sub
testl
sub
movsl
push
cmpsl
mov
adc
mov
in
es
xlat
and
sub
jns
or
movswl
stos
adc
scas
les
fistpll
das
scas
mov
popf
pushf
sub
out
scas
outsb
dec
shlb
mov
jns
js
mov
stos
push
add
xlat
mov
aas
jg
add
icebp
adc
cld
iret
pushf
and
repnz
xor
jge
add
xchg
ficoml
fstpl
pop
incl
dec
stos
fstl
aas
scas
mov
lret
bnd
xchg
mov
repz
xchg
sub
jo
inc
add
sbb
mov
cmp
inc
jo
bound
scas
mov
and
iret
cmp
jmp
sub
mov
xor
jmp
pop
stc
xchg
jne,pt
fbstp
and
cld
les
dec
mov
mov
lahf
pop
pop
dec
and
repz
push
fsubrp
lret
ja
pop
mov
and
in
popf
fidivl
xchg
in
cvtpi2ps
cmpsl
cmc
cmpsl
inc
mov
jae
movsb
das
out
pop
jo
jl
cwtl
nop
lea
out
push
into
dec
jp
ret
and
and
es
cld
jne
ljmp
and
repz
jle
inc
fdivr
andl
cld
clc
lahf
loopne
pop
sahf
jl
popa
mov
adc
mov
sahf
pop
arpl
push
or
repnz
repz
add
and
stos
jge
loopne
lea
xchg
push
fdivrp
jl
mov
iret
sub
cmp
mov
and
in
xchg
cmp
xchg
xchg
paddb
das
xor
mov
shlb
clc
repnz
hlt
gs
cmp
dec
in
test
mov
xor
mov
mov
inc
loop
out
in
jbe
insl
ja
ja
sbb
int3
dec
adc
mov
scas
mov
clc
imul
mov
cwtl
mov
jecxz
in
cmpsb
sbb
xor
mov
fs
mov
pop
fists
imul
mov
mov
lcall
and
repnz
or
sbb
adc
dec
iret
mov
mov
lahf
adc
mov
scas
jmp
ret
push
and
scas
mov
dec
push
cwtl
inc
out
mov
repnz
xchg
sarb
sub
add
bound
mov
mov
lods
push
rcr
inc
mov
jnp
cmpsl
cmp
into
mov
jg
pop
jle
mov
scas
imul
lock
sahf
cmpb
decl
and
shlb
ljmp
push
adcb
inc
add
dec
jo
repnz
sub
popa
inc
push
mov
shrb
ret
push
mov
sub
pop
push
pushf
cld
or
stos
scas
jbe
cld
repnz
out
lret
ret
stos
std
jae
outsl
fsubr
mov
and
loopne
mov
cmp
je
jmp
cli
dec
testl
repnz
loope
cli
mov
xchg
and
sahf
std
pop
push
dec
pop
loope
push
jge
jg
in
adc
jnp
sub
movups
iret
lahf
aas
dec
push
dec
and
fidivrl
loop
and
mov
scas
aam
jo
cs
aas
jg
mov
pop
cmc
dec
out
sub
dec
push
loopne
popa
jb
negb
scas
mov
movsl
mov
imul
mov
out
jmp
out
lret
sub
jnp
jg
push
inc
lret
mov
jg
lahf
dec
dec
ss
xor
mov
pop
xchg
clc
sti
aas
cld
stc
daa
in
mov
popl
add
sbbl
add
jle
add
pop
ror
test
call
call
sub
fnstcw
mov
push
gs
add
mull
push
mov
add
mov
repz
les
popa
add
mov
cmpsl
ja
pop
jle
fsubrp
repnz
into
push
push
fistpl
jb
xchg
mov
mov
xchg
cmovo
xor
test
pop
repnz
movsb
stos
sub
xor
mov
cmp
cmpsb
pop
icebp
out
mov
adc
out
scas
lods
mov
cwtl
and
ljmp
pop
add
xchg
or
fidivs
movsl
pop
jle
mov
xor
cld
stc
sahf
fdivp
mov
aam
int
icebp
pop
lahf
aas
incl
scas
push
scas
mov
repz
in
push
mov
jmp
out
mov
icebp
adc
into
push
dec
pop
inc
icebp
jle
cld
pusha
iret
mov
cmpsb
repz
lahf
aas
jg
iret
test
mov
call
mul
out
mov
xchg
scas
or
testb
xchg
push
pop
mov
xchg
cs
pushl
inc
cmp
adc
call
lahf
es
xor
xlat
mov
scas
daa
faddl
std
insl
mov
mov
mov
rol
cmp
push
mov
and
fbstp
ret
xchg
jg
sub
shl
movsb
jmp
xor
loopne
inc
inc
xor
xlat
retw
pop
add
inc
test
stos
imul
push
mov
aas
jg
cld
test
and
cmc
push
fwait
hlt
aad
xor
pop
das
lahf
out
fsubr
jmp
jmp
paddb
repz
repz
pop
jmp
sti
ljmp
negl
or
mov
hlt
lret
out
xor
lahf
into
stos
cmp
jns
jno
cld
stc
and
add
sub
in
iret
lahf
aas
jg
call
or
sub
adc
repnz
in
adc
shrl
xlat
jns
lea
stos
mov
pop
fsub
xchg
push
pop
outsb
rcrl
adc
mov
fcmove
fidivrl
divb
arpl
push
adc
sbb
mov
and
cld
stc
repz
andb
or
outsb
test
aas
jg
mov
cwtl
sub
ret
add
test
mov
xadd
pop
shr
cmp
rolb
dec
lret
out
push
loop
shl
push
fmul
dec
adc
imul
pop
repz
lahf
jb
sub
or
mov
stc
mov
add
mov
leave
xchg
dec
pop
scas
mov
add
xchg
add
cld
stc
daa
mov
ret
xchg
dec
jg
aas
jg
cmpsb
pop
push
js
dec
and
bound
imul
sti
js
mov
cmp
jecxz
das
outsl
rcl
add
in
adc
pop
mov
jg,pt
cld
jle
daa
push
jae
in
div
lret
pushf
pop
repnz
call
lods
jmp
cmpsl
mov
jnp
gs
jg
adc
pop
jle
das
out
outsb
mov
das
movsb
jg
inc
ret
push
int
fiadds
cld
stc
repz
inc
arpl
adc
add
out
aas
jg
scas
cmp
or
cmpsl
mov
bound
inc
stc
repz
add
mov
xchg
int
inc
or
loop
pop
lock
or
repnz
mov
repz
enter
jne
push
lods
mov
xchg
pop
sbb
outsb
or
add
adc
jl
jecxz
push
outsl
das
scas
mov
outsb
in
data16
pop
and
mov
ret
arpl
daa
loop
iret
fbstp
mov
outsb
adc
in
cmp
sbb
int
add
cld
push
ficoml
and
gs
out
les
mov
rcl
push
cmpsb
lods
js
lahf
aas
jg
dec
sbb
rclb
mov
repz
movsl
stc
and
and
fidivrs
insl
add
enter
jge
adc
das
mov
cmp
sti
enter
cmp
movsb
arpl
jecxz
adc
xchg
sub
lock
push
mov
pop
scas
mov
dec
call
outsb
mov
mov
mov
fadd
std
pop
pop
push
dec
xor
scas
mov
or
shrb
sub
cmp
sbb
dec
mov
in
lds
inc
cmp
aas
jg
cld
scas
fimull
aad
jge
imul
cld
test
jne
add
lea
jmp
xor
mov
pop
ljmp
sahf
mov
mov
mov
aas
jg
sbb
mov
pushf
test
loope
mov
stc
repz
sbb
out
sub
stos
cld
mov
cld
pushf
jae
inc
fwait
rolb
adc
iret
inc
sbb
dec
aas
ss
inc
out
mov
fsubs
adc
outsl
or
lret
daa
lcall
push
stos
and
insb
cwtl
sub
jge
push
pop
jns
push
test
decb
jb
pushf
in
dec
in
lahf
lret
jo
or
dec
and
adc
das
and
jp
jmp
push
pop
jns
mov
ss
std
jb
xor
adc
pop
inc
cmp
push
xchg
mov
punpckhbw
sub
mov
out
iret
lahf
pop
sbb
popa
mov
mov
cld
stc
repz
adc
adc
andb
aad
mov
aas
jg
xchg
inc
and
fistpl
in
pop
fwait
xchg
lret
sbb
cld
stc
rep
ds
cwtl
xor
rclb
fmul
lahf
aas
jg
out
inc
out
lods
mov
popa
ret
xor
repz
call
imul
xchg
aaa
js
es
inc
flds
pushl
pop
jns
pop
fidivrs
dec
add
cmp
push
fstps
in
ja
mov
push
mov
roll
mov
lret
arpl
mov
out
and
mov
sub
scas
jae
mov
sub
add
aad
mov
shl
into
rclb
sub
test
enter
gs
in
outsb
xorl
or
xchg
ds
fwait
lahf
mov
or
dec
inc
mov
lds
ds
cld
stc
repz
inc
cmpsl
popf
lea
test
mov
btc
jg
pushf
jecxz
js
and
pop
daa
mov
aam
push
dec
iret
fcoms
int
cmp
scas
int3
inc
pop
push
repnz
sub
fbstp
cmp
repz
jmp
xor
xor
fcomi
iret
sub
repnz
jne
push
stos
fnstcw
sub
pop
rorb
mov
jns
sbb
xchg
cwtl
push
mov
lahf
pop
sbb
and
dec
pop
xlat
jmp
mov
push
call
fstp
loop
xor
das
xlat
out
xchg
mov
decl
mov
repnz
xor
jle
lret
cld
stc
cmp
mov
pop
mov
test
jg
movq
sahf
sub
cmp
repz
loopne
pop
hlt
push
mov
mov
jbe
pop
into
pop
mov
fisubrs
je
aas
mov
pop
dec
add
and
out
lret
iret
push
adc
mov
and
test
js
sti
imull
vmread
cmp
sbb
xchg
fstpt
push
xchg
pusha
pop
push
lahf
jg
das
mov
dec
adc
jp
repz
cmc
ds
xchg
shrb
mov
cmp
jg
cld
and
in
dec
cmc
into
xchg
mov
out
lahf
adc
sahf
mov
push
inc
xchg
stc
and
aas
push
push
jno
iret
jmp
stc
push
loopne
cmp
push
scas
data16
mov
xchg
scas
mov
mov
mov
shlb
cld
xor
and
jae
pop
in
push
ficomps
fists
and
addr16
pop
mov
inc
xchg
push
pop
jns
cmp
pop
or
cmp
mov
mov
jmp
xor
jl
stc
xchg
icebp
popf
jns
mov
mov
jg
sti
mov
shrb
fcompl
jno
xchg
repz
fwait
das
in
inc
mov
cmp
lds
jg
cld
jb
daa
sbb
inc
test
mov
dec
scas
mov
test
scas
mov
push
aas
popl
lahf
push
cmp
xor
lret
inc
push
iret
in
sbb
mov
jns
pop
scas
mov
jge
lahf
dec
and
sbb
push
pop
mov
cmp
stc
fisubl
mov
mov
sarl
jecxz
out
rclb
incb
jns
lret
test
test
fs
pusha
popa
cmpb
sub
movsl
mov
sub
fisttpl
fstps
scas
mov
sub
test
push
dec
ljmp
lret
dec
xchg
push
or
lret
scas
shlb
je
jo
inc
mov
fcmove
sub
dec
popf
inc
leave
femms
sahf
inc
repz
cld
sbb
sub
mov
in
push
jno
cli
in
inc
adcl
loopne
ficompl
cld
ficoms
mov
xor
aas
incl
in
scas
outsb
dec
loopne
push
sbb
add
sbb
pop
mov
xorl
rcll
push
lds
jle
inc
loop
iret
psllq
fsubrl
mov
in
dec
dec
cmp
out
dec
lret
inc
inc
pop
cltd
or
aad
ljmp
iret
rcrb
push
pop
jns
jno
pushf
aaa
cmpsb
mov
push
maxps
mov
add
fsts
outsb
dec
movsb
repnz
cld
stc
repz
imul
aaa
test
dec
jg
das
jg
inc
pop
js
loope
add
xchg
pop
mov
ss
das
fidivs
lock
and
push
popa
push
pop
push
pop
or
stc
adc
insl
pop
fwait
cs
into
jo
fidivrs
xchg
aas
jg
sbb
cwtl
xchg
test
adc
sbb
jb
out
movsl
lahf
or
dec
cld
stc
repz
mov
pop
fdivrs
out
gs
movb
jg
mov
scas
jae
ljmp
das
lahf
pop
dec
out
dec
adc
pushf
xchg
pop
jns
xchg
punpcklbw
pusha
or
or
jne
jl
loope
and
and
jo
inc
in
push
fidivrs
das
gs
push
pop
jns
loopne
test
pop
inc
sub
mov
adc
clc
lahf
pop
inc
mov
into
cmp
test
ret
icebp
sahf
pop
out
sbb
push
pop
jns
ret
ss
cwtl
imul
add
jns
in
cmp
mov
call
cmpsl
pop
sarl
stos
sbb
fstl
pop
std
push
subl
push
pop
jns
dec
mov
xor
stc
lods
jae
pop
jns
sub
data16
push
out
shrb
sub
mov
or
adc
repnz
mov
out
aas
jg
cld
fiadds
jo
shlb
push
inc
cmpsl
aaa
mov
out
lahf
popa
test
das
dec
in
inc
dec
cld
arpl
pop
mov
ss
loope
cli
pop
aad
push
lret
fucomip
sti
push
in
add
arpl
sti
lcall
pop
int3
add
stos
scas
mov
mov
inc
cmpsl
pop
test
js
xor
in
in
or
mov
repnz
xchg
outsb
jge
loop
jle
cld
push
mov
inc
jbe
test
add
pusha
fs
xchg
jnp
in
stc
repz
sarl
popf
mov
push
jne
std
mov
into
xchg
mov
push
and
mov
das
pop
inc
into
sub
push
cwtl
out
sbb
setle
sarb
mov
lahf
aas
pushl
push
aam
test
cmp
in
out
add
into
fs
lret
enter
scas
mov
sub
mov
lock
ja
cmp
aas
test
xor
jl
jl
mov
sub
out
popa
xchg
adc
push
xor
lret
les
xor
test
das
es
sub
cmpsl
push
std
xchg
xchg
jo
in
loope
sub
cs
call
cld
stc
xorb
sub
imul
lret
lds
xchg
aas
and
insb
sbb
ret
ret
xor
xchg
mov
mov
ja
fsubrl
int3
fnstsw
ja
std
jb
mov
mov
scas
xchg
pop
mov
pop
mov
gs
xor
sbb
aas
push
adc
jge
ret
dec
jno
loopne
in
out
mov
and
scas
das
xchg
or
icebp
cmp
jge
push
push
lahf
fs
xorb
lock
jl
pop
das
hlt
xchg
xchg
ds
stc
repz
mov
xor
pop
jno
rorl
pop
iret
lahf
aas
jg
mull
lcall
outsb
push
repz
jmp
fwait
mov
push
cld
stc
js
inc
rcrb
push
lods
mov
repz
lahf
aas
out
js
inc
mov
sbb
mov
push
ljmp
pop
into
or
jle
out
fildl
sub
lret
hlt
xchg
dec
sbb
lcall
outsl
out
popf
rclb
lods
insb
popa
ret
enter
sub
or
push
adc
adc
fdivrp
cld
mov
cld
int
add
cmpsb
in
push
hlt
mov
lret
iret
lahf
pop
add
les
test
out
lahf
aas
out
inc
push
mov
mov
xorl
cld
nop
je
mov
xchg
aad
mov
das
lahf
aas
jg
pop
inc
pop
enter
jmp
mov
scas
mov
cld
push
pop
sti
pop
jl
push
out
lret
test
jp
cmp
iret
in
cli
mov
call
sbb
mov
sbb
out
fisubs
sbb
adc
mov
push
inc
pop
cmp
mull
mov
ljmp
scas
xor
jnp
xchg
xchg
push
fisubrs
fldenv
add
mov
mov
jns
mov
ss
xor
out
enter
pushf
pop
jns
xchg
subb
inc
arpl
mov
in
push
frstor
jb
stc
lcall
pushf
mov
fimuls
dec
aam
sub
cmpsl
fstl
aad
sbb
std
mov
push
pop
insl
test
lods
lods
fcmovu
cmp
pop
scas
es
cli
xlat
fisttps
lcall
xchg
movsl
xor
push
out
mov
sbb
pop
pop
outsb
dec
push
inc
cli
repnz
add
cmp
and
dec
push
xor
adc
iret
lahf
aas
jg
inc
and
mov
rorb
fdivrp
repnz
xchg
jae
or
lahf
scas
dec
push
mov
scas
mov
out
or
fcmovne
stc
repz
mov
pop
scas
stc
and
push
fidivrs
icebp
lock
fcmove
dec
repz
pop
jns
xchg
add
adc
scas
inc
cmpsb
lahf
pop
adc
notl
roll
div
out
mov
cmpb
and
testl
and
insb
jg
inc
std
and
fucomi
insl
cmp
scas
call
andl
adc
imul
lret
std
mov
xchg
mov
int3
fsubs
add
idivb
out
in
xchg
ja,pn
idivl
push
adc
xchg
mov
ja
outsb
or
aam
es
cltd
mov
inc
xchg
lahf
aas
xchg
and
sub
rcrl
pop
cltd
lock
xor
ss
lock
repz
sub
add
jo
insb
push
sbb
fildl
cld
xchg
dec
insl
fs
iret
lahf
pop
or
sub
clc
stos
out
inc
adc
out
push
mov
std
das
lret
clc
jb
popa
flds
dec
cmp
repnz
pop
and
int3
push
dec
mov
scas
mov
jmp
dec
outsl
movsb
lret
repnz
bswap
inc
loopne
dec
pop
inc
ret
lcall
iret
and
sbb
cmc
ret
cld
fnstcw
mov
jle
mov
repnz
das
push
enter
fldt
stos
sbb
sbb
jo
leave
and
adc
inc
sbb
cmp
mov
out
pushf
fisubrs
stc
repz
lret
test
pop
mov
or
xor
mov
lret
popf
mov
fildll
or
pop
dec
in
movsb
jne
sub
lret
mov
cwtl
loopne
xchg
ret
and
fsubrs
scas
mov
mov
scas
and
mov
dec
test
repnz
loope
jns
data16
repnz
jecxz
stc
mov
jae
lret
sub
and
push
sahf
mov
lret
sub
sbb
stc
push
cld
loop
or
push
mov
fwait
clc
in
test
pushf
repz
cld
adc
push
or
test
mov
movsl
and
or
xchg
lahf
aas
jmp
mov
pushl
jg
cld
mov
dec
movsl
fs
nop
insl
pop
rcrb
lahf
aas
fwait
push
xor
insl
popa
lea
cld
push
fwait
mov
outsl
add
cmc
movsb
pop
jg,pt
jno
iret
movsb
sub
dec
cwtl
ficomps
je
dec
cli
stc
xchg
jecxz
stos
mov
aas
sbb
lret
scas
mov
xor
mov
repnz
cmp
rclb
outsb
add
pop
lcall
xlat
xchg
lahf
pop
ljmp
je
int3
pop
jns
fst
adc
shll
sarl
pop
loopne
fucomip
mov
js
xor
mov
add
mull
ljmp
mov
jp
cmp
repz
lahf
cmp
xlat
adc
fcmovu
cmpsb
ret
clc
jg
cld
stc
jb
adcb
sbb
push
ret
iret
lahf
aas
outsl
loope
divps
call
mov
outsb
inc
cmpsb
jmp
sbb
pusha
sub
jg
pop
cmp
inc
mov
lahf
pop
pop
mov
jmp
cmp
xchg
pop
loop
ret
pop
orl
inc
adc
xchg
jae
data16
in
push
cli
jg
pop
jle
mov
bnd
dec
aam
fsubp
fstl
stc
cmc
pop
xor
ret
xchg
sub
push
clc
stos
add
movb
lea
add
jecxz
iret
push
mov
sahf
jo
das
ficoms
sbb
lret
iret
lahf
add
xor
imul
xchg
data16
pop
xor
xchg
out
js
cs
ja
lods
cs
add
lret
jp
cld
cld
stc
aaa
ficomps
dec
and
push
pop
scas
dec
insl
sub
jg
dec
ja
cmp
xchg
sar
ror
push
sbb
decb
mov
sub
adc
stc
mov
jle
adc
or
cld
ret
mov
sahf
xchg
sahf
push
loop
ds
and
add
sub
orl
daa
test
mov
arpl
cwtl
add
and
int
pop
movl
sbb
test
lahf
aas
jg
loope
push
je
inc
xlat
mov
inc
pop
aas
inc
jo
and
loopne
push
xchg
stc
stc
cld
lret
les
mov
mov
push
pop
xchg
pop
into
stos
sub
rcrb
in
ja
dec
push
adc
or
icebp
xchg
ja
pop
mov
sahf
imul
sarb
out
inc
cli
add
xchg
fdivrp
jb
loop
das
mull
pop
mov
mov
dec
clc
cld
mov
sbb
fistps
iret
aas
and
jmp
mov
and
stc
pause
fmuls
sub
orl
iret
imul
pop
and
lret
and
std
out
dec
into
int
xor
repz
sub
lea
push
adc
sbb
jmp
cmp
sbb
xchg
ja
sti
sbb
lock
popa
xor
jle
xchg
push
pop
pop
hlt
mov
push
mov
add
imul
xor
pop
push
sub
aas
sahf
scas
adc
pop
addl
mov
aaa
cltd
sbb
xchg
dec
jle
push
or
or
push
jae
xchg
aas
jg
outsb
daa
xchg
jbe
cmp
jne
mov
lods
dec
jl
inc
cld
sbb
push
mov
push
jne
or
sbbl
mov
ds
and
fstl
sti
jle
out
or
aam
fisttpl
int3
stos
out
inc
cld
cs
loope
and
iret
dec
iret
testl
mov
lahf
std
or
xchg
jo
push
sarb
pop
outsb
lock
daa
jmp
sbb
stc
repz
pop
dec
scas
dec
or
mov
mov
aaa
aad
push
outsb
mov
ror
push
test
mov
mov
leave
call
mov
popf
jg
cld
stc
xchg
push
jb
adc
test
insl
cmp
mov
cmp
dec
dec
out
shr
xlat
and
mov
repnz
in
loope
xchg
sarl
cs
das
mov
ss
or
adc
loopne
out
adc
cs
adc
adc
inc
jle
jbe
mov
daa
das
mov
dec
scas
mov
call
into
scas
push
in
loopne
mov
insl
lock
adc
mov
lcall
leave
xchg
ja
sub
sahf
cli
xchg
je
rorl
sub
dec
sbb
stc
adc
cmp
out
jbe
sub
fidivl
roll
jo
pop
jl
ret
into
or
je
cmp
subb
pop
aad
xor
addl
sbb
jae
add
jl
pushf
into
and
iret
pusha
cmp
cld
into
add
js
fldl
sub
adc
ljmp
lahf
aas
mov
mov
push
mov
xchg
in
and
adc
fcomip
adc
test
mov
mov
pop
rcrl
adc
jnp
repz
cltd
divl
test
add
enter
ds
daa
cmp
sahf
ja
cmc
test
push
ss
insl
aad
repz
lahf
sahf
out
cli
dec
sbb
scas
cmp
loop
cld
stc
jle
xlat
xor
stos
mov
jecxz
filds
into
push
popf
mov
dec
mov
iret
xchg
or
pop
add
rcll
in
faddp
les
mov
leave
lahf
aas
jg
mov
fsubs
mov
scas
lret
jle
xchg
nop
orl
cwtl
mov
test
xchg
sub
mov
inc
or
sbb
or
std
xchg
into
or
iret
daa
ja
jle
mov
aad
mov
lahf
ret
les
leave
les
sbb
dec
incb
xchg
adc
fists
sbb
hlt
adc
pop
das
stc
cmpsl
cmc
lret
dec
or
in
ss
popf
mov
lcall
mov
jo
repz
adc
jp
xor
addr16
jnp
jg
cld
stc
js
imul
dec
out
sti
inc
adc
cmc
cld
xor
xchg
jb
out
ror
leave
iret
cmovge
sarl
jns
fstp
jecxz
pop
fadds
mov
mov
push
pop
xchg
test
in
or
cli
xchg
push
pop
jns
ret
xchg
ret
push
movsl
cmpsb
and
out
icebp
in
orb
xchg
scas
test
mov
xchg
or
pop
xchg
rcr
jbe
jg
adc
jo
stc
cld
stc
sub
out
sub
lahf
mov
mov
dec
sbb
lret
sub
mov
and
lahf
mov
repnz
push
mov
jnp
stos
ljmp
pusha
subb
mov
add
xchg
aad
std
pop
and
pop
xor
enter
xor
cmpb
push
push
cmp
popa
sub
mov
movsb
lret
ljmp
add
lahf
test
adc
fidivrs
cld
stc
mov
and
mov
mov
dec
sbb
pop
rol
jg
scas
dec
add
es
outsl
in
insl
mov
js
xchg
movsb
xor
shlb
lahf
pop
dec
push
push
mov
js
into
lret
iret
scas
subl
xor
ljmp
adc
or
and
mov
lahf
aas
jg
add
and
adcb
rol
xchg
push
add
lahf
adc
scas
mov
repz
mov
lcall
jle
cld
push
sbb
xchg
dec
cmp
cld
or
dec
inc
inc
jnp
les
pop
nop
add
push
pop
dec
lock
daa
loop
mov
in
nopl
cld
jns
mov
mov
repz
test
aas
aas
scas
jmp
mov
clc
push
add
pop
adc
jbe
lahf
jmp
push
add
cmp
out
test
cs
test
push
mov
leave
push
enter
jg
cld
mov
jb
or
sar
and
sbb
add
xchg
clc
fxam
rorb
in
mov
out
divb
aam
push
aas
or
jle
adc
iret
ror
add
pop
das
jle
repz
fwait
pop
ljmp
cmp
in
mov
pop
outsl
idivl
adc
andl
add
ret
jmp
jg
sub
cmovns
fiaddl
fistpl
adcl
adc
test
out
pop
sbb
mov
inc
jg
mov
sub
pcmpgtw
popf
push
add
jp
seta
xchg
push
fdivrp
scas
movsl
mov
jg
push
stc
mov
fwait
and
jg
roll
mov
out
lahf
aas
push
popaw
sub
dec
sar
mov
outsl
inc
fmuls
jle
dec
daa
jg
mov
jle
xchg
jns
xchg
ja
pop
dec
dec
cld
inc
mov
icebp
in
push
pop
imul
out
adcl
stos
dec
je
out
sub
adc
out
lods
dec
rorl
cmovo
cmp
mov
out
mov
in
lods
push
in
icebp
cld
decl
inc
dec
shrb
lret
data16
call
pop
push
and
ja
out
adc
mov
push
jg
cmovp
xchg
iret
das
es
scas
mov
pop
repnz
push
ja
in
and
sub
xchg
aad
mov
call
xchg
xchg
dec
popa
xor
mov
jecxz
data16
inc
add
push
adc
pop
xchg
cld
xchg
clc
in
enter
mov
mov
imul
push
mov
repnz
cmp
xlat
shlb
test
jb
movsl
or
sbb
jle
mov
and
out
push
fimuls
call
dec
iret
ret
jne
push
pop
pop
jns
movsl
daa
lods
push
add
add
xchg
pop
push
push
lock
or
mov
out
stos
pop
in
repz
and
push
and
loopne
dec
jp
lods
adc
mov
enter
push
sti
mov
icebp
mov
repz
dec
xlat
outsl
mov
out
sbb
add
stc
cld
stc
inc
paddsw
dec
or
adc
sbb
and
out
xor
imul
stc
repz
or
lods
aam
repnz
aas
jg
cld
jbe
jbe
aas
mov
shlb
mov
lahf
pop
dec
lods
lret
push
mov
fs
sub
iret
lahf
pop
adc
fsubs
inc
gs
mov
repz
mov
jg,pt
sbb
fcomp
mov
xchg
ja
adc
data16
pusha
movntq
mov
iret
lahf
pop
fimuls
test
jb
inc
push
mov
and
sub
adc
dec
loop
jmp
lahf
sub
arpl
in
cs
push
std
gs
enter
mov
dec
leave
dec
lahf
aas
cwtl
rcrb
mov
popa
adcl
cmp
mov
and
jp
and
jae
dec
xchg
ljmp
imul
clc
sub
in
mov
outsb
das
aam
daa
and
sbb
rclb
ss
cli
sub
iret
fstps
ds
push
cmp
xchg
pop
addr16
cmp
sbb
xchg
lcall
and
mov
js
nop
popf
sub
in
das
scas
pusha
jae
bound
das
mov
sbb
inc
into
add
xlat
shrb
xor
sbb
push
or
mov
stc
repz
jle
and
xchg
stos
int
scas
out
loop
imul
out
or
pop
dec
cmpsl
push
sbb
xchg
iret
inc
mov
decb
outsl
in
sti
data16
dec
and
dec
rcll
adc
call
adc
cld
push
stc
repz
repnz
in
pop
push
sbb
pushf
call
sub
dec
sbb
pop
jle
ficoms
scas
daa
push
daa
jp
sub
das
pusha
pop
out
ljmp
ret
and
xor
or
mov
loop
clc
inc
lret
inc
or
loop
insl
sahf
jl
lahf
scas
mov
xchg
stc
int3
jl
psubsb
lret
sub
lret
sub
cmpsb
or
dec
xchg
test
in
lahf
mov
push
aam
mov
insb
cld
stc
repz
push
push
mov
cltd
mov
xlat
fimull
sarl
jmp
jmp
cs
aas
sub
enter
in
js
mov
or
das
scas
mov
paddsw
pop
or
and
sbb
pop
mov
daa
mov
in
pop
inc
jle
iret
lahf
hlt
aam
push
loope
sub
mov
loopne
aaa
outsl
es
jle
xchg
call
fsubrs
lods
in
ds
mov
test
adc
aas
loopne
inc
jnp
in
ret
lahf
addl
inc
adc
test
xchg
pop
adc
and
inc
fs
leave
je
or
lock
lcall
in
je
adc
lret
sbb
pop
jle
lret
sbb
or
or
or
fistpll
pop
cld
cltd
xchg
dec
sbb
mov
dec
int
std
push
mov
ror
paddd
into
repz
lret
out
sarl
divl
setb
cmp
ret
and
cwtl
shrb
mov
xchg
cld
mov
mov
mov
lods
push
dec
xchg
jp
xor
and
or
inc
iret
lret
cltd
cs
mov
sub
jb
jno
loopne
aam
dec
sbb
test
aas
jg
sub
and
xor
subl
jno
mov
adc
mov
and
mov
jg
lahf
aas
incl
add
mov
or
enter
pop
lahf
jge
rolb
lahf
das
das
add
outsb
movsl
sbb
jle
std
movsb
dec
insl
push
out
roll
cmp
dec
and
ss
xchg
fs
xor
ja,pn
xchg
pusha
clc
sti
mov
nop
lock
cmp
sub
mov
mov
mov
xchg
lcall
add
lahf
jg
adc
sub
test
pop
mov
icebp
jae
imul
sahf
lea
mov
sbb
pop
fmuls
cmp
lds
imul
test
adc
jg
cld
add
pusha
std
lods
xchg
push
or
xchg
sub
inc
inc
lahf
aas
mov
mov
scas
pop
mov
orl
shlb
lret
stc
push
data16
nop
js
rcl
or
pop
jp
popa
sub
insb
hlt
out
adc
lret
jo
push
mov
fisubs
add
sbb
nop
negl
fs
adc
enter
scas
fisubs
pop
aad
bound
into
dec
push
push
pslld
xchg
aas
sub
pop
adc
inc
push
cli
jnp
in
mov
icebp
add
xchg
pop
loope
sbb
adc
int
cmc
pop
fdivl
leave
mov
popf
aad
jle
and
lock
xchg
pop
ret
pop
add
mulb
out
xor
aas
jg
pop
adc
pushf
into
mov
push
xor
lods
push
incl
or
data16
enter
dec
mov
sub
mov
xchg
jmp
xor
outsl
cmp
scas
dec
dec
aad
loopne
ret
sti
arpl
or
mov
xor
fs
ljmp
cmp
mov
push
jle
jg
insb
lahf
pushf
jle
push
popa
mov
data16
xor
incl
dec
mov
xor
add
pop
add
out
pop
imul
lods
xchg
test
outsl
ret
push
pop
fimuls
mov
das
mov
mov
repz
inc
jg
cld
popa
mov
mov
ljmp
sahf
jp
jg
enter
or
out
or
cmp
add
repz
ss
mov
rol
or
xchg
cli
cmp
stc
or
sub
jg
mov
jg
mov
xor
pushl
pop
jle
dec
sub
scas
shlb
clc
mov
hlt
pop
repnz
cmp
rcr
and
mov
out
scas
decb
push
mov
adc
xchg
aas
jg
out
sbb
lods
inc
pusha
ja
cltd
dec
jp
icebp
iret
xlat
scas
and
add
fsubrp
lret
push
int3
adc
pushf
add
xor
push
xchg
push
nop
sbb
and
leave
int3
dec
lret
jae
repnz
dec
shll
push
mov
ss
mov
xchg
mov
insl
aad
push
inc
push
and
iret
scas
and
loopne
jae
xchg
sub
test
sbb
in
adcb
les
push
pop
rclb
insb
mov
ds
sbb
sahf
lods
pop
test
ficomps
jg
hlt
jo
jl
popf
int
mov
dec
in
xchg
sbb
mov
cmp
mov
scas
lock
icebp
scas
xlat
ja
ljmp
mov
push
mov
outsl
cmc
in
and
or
push
iret
aam
test
sub
sub
mov
jecxz
psraw
xchg
dec
or
inc
sarb
repz
cld
mov
pop
or
cld
dec
cli
das
adc
mov
mov
js
mov
hlt
negl
push
hlt
dec
popa
mov
sbb
lods
push
scas
inc
shl
and
aas
jg
add
stos
aaa
data16
xchg
repz
lahf
dec
jne
or
jo
testb
xchg
cmp
and
cmp
test
negb
lret
outsl
call
popf
push
or
jnp
cld
stc
jge
test
mov
adc
bound
iret
lahf
aas
fisttpl
stos
dec
addl
repz
dec
faddl
repnz
adc
jg
add
call
in
mov
stos
fmul
out
lahf
lods
xor
xchg
aaa
cmp
fnstcw
pop
or
jb
aad
inc
sti
lahf
sub
cmp
mov
xchg
unpckhps
mov
ret
aam
sub
sbb
or
das
inc
out
sbb
scas
ret
clc
or
lcall
mov
mov
cld
inc
push
out
mov
mov
mov
dec
lods
mov
dec
out
pop
pop
lret
mov
out
pop
aas
pop
pop
jl
adc
fadd
jge
stc
repz
xchg
shrl
das
mov
dec
scas
xor
ja
fmulp
sbb
fdivrs
scas
rol
and
jns
in
cltd
sub
mov
jbe
lahf
jg
cld
adc
push
dec
das
pop
sbb
movsl
popf
add
lods
inc
ds
addr16
inc
scas
mov
jg
lret
iret
addr16
scas
call
int
jmp
out
lahf
and
inc
cmp
or
fsubl
jg
cld
stc
cmp
test
mov
fmuls
mov
arpl
add
cld
mov
cld
iret
lahf
aas
jg
jne
cmp
lret
sbb
push
inc
pop
aas
mov
xor
scas
pop
std
pop
sbb
cli
in
lret
push
test
mov
pop
mov
femms
pop
or
jns
outsb
mov
loopne
mov
shll
cmp
xor
sbb
mov
daa
les
lret
inc
andb
sub
pop
jmp
mov
fmull
lahf
add
mov
jo
mov
push
fnstcw
fadds
xchg
push
fimuls
lret
add
add
cwtl
mov
filds
pop
pop
mov
aad
mov
loop
inc
cmpsl
cld
stc
repz
dec
pushf
sub
aad
loope
pop
int
xchg
aas
jg
fxrstor
out
jmp
ficoml
mov
pop
sbb
add
fnstsw
sub
pop
and
lret
xchg
loop
mov
icebp
in
jns
pop
rcrb
imul
loop
nop
jecxz
movsl
sbbb
inc
sahf
test
pop
jle
dec
mov
push
push
stos
jo
and
btc
add
xor
aas
mov
aas
mov
repnz
mov
cld
stc
repz
and
inc
xchg
scas
xchg
clc
aas
dec
mov
or
lahf
aas
jg
test
fs
mov
outsb
aas
sub
fisubrs
lret
das
and
movsb
cltd
pop
popf
mov
mov
inc
cwtl
inc
pop
das
pop
add
in
stos
iret
dec
inc
cmpsb
mov
fsubp
and
mov
hlt
outsl
pop
lahf
jnp
jns
xchg
push
or
or
lea
sub
jle
ss
sbb
lahf
popaw
mov
in
push
pop
xor
sub
push
popa
push
jns
fidivl
add
pushf
repnz
cmp
movsb
mov
ds
mov
iret
loope
jg
cld
or
mov
outsl
xchg
fidivl
mov
out
lahf
push
cmp
jb
jns
xchg
push
fidivs
insb
pop
addr16
jnp
aas
adc
lret
sub
das
cmc
in
scas
pop
scas
fildll
neg
repz
mov
or
repnz
xlat
push
pop
xchg
xchg
adc
sub
jne
dec
cmpsl
test
jle
bound
stc
cld
cmpb
xchg
scas
or
aas
mov
cmc
xchg
sub
jle
jo
outsl
xchg
push
cld
loopne
sti
repnz
out
scas
dec
out
iret
hlt
cmc
pcmpgtw
pop
call
mov
pop
shr
mov
lods
inc
scas
mov
jne
adc
adc
lods
cmp
pop
lea
pop
or
mov
inc
sti
repnz
dec
xor
mov
mov
sbb
sti
pop
iret
xchg
sub
arpl
xchg
mov
mov
adc
psubd
stos
aas
aas
scas
adc
jne
test
pop
add
jns
shlb
lods
adc
pop
shrb
in
add
daa
push
mov
in
push
pop
addr16
jecxz
bound
test
jns
push
fwait
lahf
out
decl
push
cmpsb
dec
mov
not
mov
adc
rclb
sahf
sahf
sbb
dec
in
fisttps
mov
jge
and
ret
cmp
cld
stc
stos
inc
enter
mov
repnz
jg
dec
sahf
cmp
int
jmp
iret
lahf
jo
mov
gs
shll
inc
jg
cld
stc
fstl
fs
mov
jo
jge
xchg
aas
push
popa
stos
fistl
pop
push
mov
into
fsubrs
sbbl
iret
lahf
mov
jae
push
fisubl
mov
cld
stc
dec
addr16
and
cmp
sub
bound
out
lahf
aas
mov
imul
popa
loope
mov
out
repnz
decl
jg
cld
stc
mov
repz
mov
cli
sub
ja
in
sbb
sbb
and
aaa
push
pop
jns
sub
stos
outsl
cmp
adc
fstps
pop
jns
xchg
and
sub
hlt
jge
loop
cld
lahf
shrb
push
out
cmp
ret
into
cli
in
out
es
enter
in
dec
xor
movsb
repnz
xchg
xchg
fisubrs
or
jns
dec
sub
adc
popa
mov
mov
sbb
jg,pt
scas
xor
adc
enter
scas
cmp
int
fcomp
jo
pop
test
out
mov
fs
xchg
push
xchg
cld
stc
xchg
into
sbb
test
das
test
iret
xchg
aas
jg
les
rorb
mov
in
out
clc
xchg
push
push
xor
mov
sub
jle
xchg
outsl
insb
ret
jp
scas
mov
push
ja
mov
push
in
sub
jge
stos
and
loop
repnz
imul
dec
addb
enter
cs
lea
cld
aas
mov
mov
pop
inc
rcll
out
or
aam
sub
push
sbb
xbegin
cwtl
pop
push
lods
xchg
mov
cld
stc
repz
xor
jecxz
push
xor
dec
pop
jbe
lahf
aas
jg
mov
lods
lahf
and
cli
push
out
xchg
iret
xor
movl
repz
imul
xchg
stos
daa
mov
mov
push
mov
cmp
cld
leave
clc
in
jp
rcrb
pop
popf
into
sub
lahf
aas
jg
stos
sub
in
jg
jmp
push
stc
xchg
popa
xchg
sbb
jnp
jg
cld
jmp
shrl
cmpsl
mov
jg
cld
or
or
std
sbb
std
lahf
sahf
lret
aas
fs
sub
aam
int
push
fidivrs
movsb
xchg
mov
shrb
in
xor
xor
mov
jle
add
int
mov
mov
aas
jg
jne
pop
push
mov
xchg
dec
out
mov
mov
stc
repz
in
dec
fsubl
loope
pushf
pop
xorl
cld
sbb
leave
inc
outsb
xchg
shld
sub
repz
ror
mov
pop
mov
lea
cld
stc
add
lret
pop
popf
stos
aas
aad
out
lahf
aas
xor
insl
dec
shl
lds
jg
outsb
in
sbb
stc
repz
push
data16
sbb
aas
jg
sub
mov
pop
mov
cmpsl
jle
insl
pop
mov
pop
mov
add
dec
jle
mov
cmp
cld
adc
xchg
xor
lcall
or
mov
lahf
aas
jg
xor
fcoml
push
add
in
iret
outsl
xchg
push
ja
mov
and
mov
pop
jns
mov
sbb
fwait
and
pop
mov
in
or
push
mov
repz
rcll
decb
and
insb
inc
iret
aas
aas
inc
sarl
mov
lret
out
xchg
iret
lahf
mov
push
sbb
addb
insl
push
add
xchg
mov
mov
xchg
cmpl
fstp
das
das
sbb
or
daa
aas
js
or
popf
push
pop
jns
adc
rorb
xor
in
ret
sub
outsb
pop
jnp
movsl
scas
std
repz
xchg
push
fdivrp
mov
dec
mov
popa
mov
insl
loope
or
jb
mov
dec
push
and
jbe
out
lahf
aas
jg
faddp
cs
testl
loop
xor
iret
aas
ja
mov
into
dec
sbb
out
mov
add
int
adc
in
pop
stos
and
jns
xchg
pop
jge
or
iret
jb
movsl
push
sub
movsb
in
push
pop
gs
dec
jle
out
fimull
lods
xor
add
add
cmc
lahf
xchg
pop
imul
inc
push
adc
push
jno
and
repz
incl
jecxz
or
xor
rclb
fstl
or
bound
cld
adc
mov
mov
sbb
jbe
mov
xchg
dec
sbb
stc
repz
shl
xchg
fwait
insl
jbe
les
jp
lahf
aas
jg
mov
ret
cld
movsl
cmpl
fnsave
stc
fs
add
xor
das
push
pop
push
mov
sub
out
ds
jmp
cld
dec
mov
mov
repnz
or
test
inc
cmpb
ljmp
sbb
imul
mov
movl
sub
xor
sarb
lds
or
scas
lahf
icebp
or
cmpb
imull
mov
lahf
aas
or
out
call
push
cltd
pop
iret
mov
std
and
mov
and
outsl
lock
mov
or
mov
ljmp
mov
fcoml
daa
cmpsb
mov
xor
sub
fs
ja
mov
mov
daa
push
cmp
mov
cltd
dec
push
push
mov
lock
cltd
mov
fs
sub
push
mov
and
popf
mov
mov
repnz
lods
xchg
dec
jg
cmpsb
daa
fdivl
loopne
xor
flds
xor
sub
xor
lcall
aas
jg
mov
gs
xlat
pop
jns
repnz
xchg
iret
repnz
sbb
sbb
mov
sub
inc
dec
jmp
stc
repz
notl
dec
outsl
sub
lcall
fidivl
and
jb
repz
xor
std
rclb
test
cmp
push
sbb
mov
jmp
sub
cli
xor
sub
scas
andl
jg
xlat
sub
and
pop
insb
icebp
add
push
mov
cmp
in
mov
pop
xchg
iret
inc
jmp
inc
push
cmp
sbbl
push
xor
or
mov
push
mov
cmpsb
int3
or
mov
xor
mov
jle
repnz
call
into
fiaddl
xchg
push
loope
mov
lahf
or
ljmp
jg
cld
xchg
imull
imul
sbb
sbb
movsl
mov
lahf
pop
mov
jg
cld
stc
inc
add
inc
je
lods
pop
hlt
leave
repnz
mov
pop
jl
mov
sub
in
dec
jo
popf
fisttps
mov
sti
jbe
enter
jo
add
jae
clc
xor
cld
stc
repz
xchg
cmp
cmp
cmp
cmp
jl
adcl
mov
repz
push
lcall
testb
sub
push
in
test
sbb
pop
mov
jmp
clc
dec
jno
jb
pop
add
imul
mov
subb
adc
out
lahf
lock
dec
es
iret
cld
mov
add
hlt
fwait
sub
in
in
sub
mov
das
mov
jo
sti
repnz
pop
mov
addb
sub
repnz
repz
hlt
dec
pop
scas
mov
movsl
adc
jmp
cmp
and
mov
pop
fnstsw
ret
push
outsl
push
pop
out
aas
sub
repnz
lahf
fisubrl
das
in
das
cmp
repnz
cmp
jle
push
sub
push
lahf
aas
push
insl
add
add
or
jp
test
in
outsb
sub
sahf
jg
or
pop
sbb
lock
in
jle
ljmp
jb
xchg
push
cmp
lret
sub
push
into
leave
icebp
or
daa
lock
pop
mov
popa
mov
jg
add
pop
push
cmp
daa
cmc
push
out
insb
mov
adc
pusha
xchg
pusha
and
roll
cmp
in
xchg
push
pop
jns
loop
pop
movsl
in
aaa
pop
or
inc
push
pop
jns
inc
std
push
std
pop
ds
adc
out
and
divl
in
outsl
mov
pop
jecxz
aas
arpl
mov
xchg
cld
stc
add
mov
and
out
pusha
inc
paddb
nop
lods
scas
inc
xor
outsb
sbb
iret
lahf
aas
inc
and
enter
and
test
mov
add
push
push
inc
lret
add
pop
cmp
xor
push
push
into
in
ja
jg
dec
push
aas
adc
cs
arpl
mov
push
inc
out
and
std
stos
repnz
push
sub
cmp
adc
ficomps
sub
or
addb
loop
js
repnz
mov
mov
mov
dec
dec
daa
mov
rcrl
aaa
sbb
mov
xor
mov
push
cs
cld
stc
fdivs
fstps
xor
test
bound
fs
mov
popa
xchg
in
lret
aaa
pushf
adc
xchg
and
mov
add
dec
lods
dec
iret
ljmp
jl
cld
arpl
lcall
jg
ds
or
and
roll
out
push
pop
jns
mov
mov
ret
js
fadds
dec
pusha
in
xor
scas
adc
and
adc
pop
mov
jle
push
mov
pop
push
pop
clc
jge
sahf
and
mov
jp
add
test
pop
xchg
pusha
pop
fcmovne
fwait
jns
scas
or
jae
pop
add
arpl
mov
std
mov
sub
push
mov
gs
sbb
inc
mov
jae
add
mov
sub
jg
xor
into
jmp
add
clts
jo
jo
cli
xchg
mov
pushl
jo
or
addl
addb
outsb
and
pop
dec
xor
outsb
xchg
and
inc
pop
daa
shr
xchg
xor
scas
jo
add
jo
add
xor
inc
pop
aas
aas
or
add
hlt
lahf
jo
mov
scas
jo
jno
sbb
jo
add
call
cmp
sub
dec
scas
pop
sub
xchg
adc
popl
add
pop
push
jne
pop
push
pop
mov
push
jo
mov
mov
jo
jo
push
cmp
xchg
lahf
lds
hlt
je
out
sub
jmp
add
sbb
loopne
in
push
outsl
cmp
rorb
and
sbb
sarb
jo
subl
cmp
add
mov
adc
out
add
mov
scas
jo
inc
xchg
push
out
mov
in
bound
je
pop
iret
dec
xchg
pop
or
mov
je,pt
idivb
xchg
and
mov
das
mov
push
and
fbld
std
cmp
xchg
rsm
add
daa
and
mov
fistps
mov
sbb
leave
fimuls
les
lahf
jg
iret
xchg
jge
xchg
ljmp
mov
sbb
cld
stc
repz
mov
pop
mov
std
scas
test
pop
pop
das
jg
mov
xchg
cmpl
mov
sti
jns
mov
std
scas
scas
jbe
jl
aas
shlb
cmp
loope
repnz
xor
test
std
movsl
inc
scas
out
jecxz
push
mov
mov
popa
lret
idivl
pop
sbb
xchg
into
sub
mov
lret
lahf
sbb
pusha
jg
and
in
outsb
sahf
xlat
inc
push
push
inc
das
jg
cld
faddp
and
es
cmp
sbb
lahf
pop
push
fdivrp
jge
aaa
test
jg
cli
stc
stc
repz
sbb
and
ss
sbb
dec
xchg
jp
jge
aaa
or
cmp
and
into
fiadds
push
mov
adc
xchg
dec
imul
dec
in
jmp
cltd
xchg
mov
rorl
push
inc
out
lahf
aas
pop
icebp
and
xor
movsb
push
fldl
enter
rep
mov
xchg
fsub
clc
dec
ret
movsb
mov
movd
mov
dec
or
sbb
jnp
pop
mov
mov
mov
mov
or
loop
push
xchg
jp
pop
and
jl
decb
mov
out
cltd
sbb
or
into
ds
aas
inc
in
lcall
aas
xchg
push
or
dec
sbb
mov
enter
popa
pop
iret
repnz
in
in
das
and
inc
lods
pop
hlt
mov
and
xchg
push
pop
jmp
and
cmp
loope
pop
shrb
cld
stc
and
mov
fnsave
xchg
push
fidivrs
lret
les
sarb
pop
jns
data16
rclb
rol
ficompl
in
int3
ret
xchg
cmc
lret
lcall
cli
xchg
insl
in
mov
xchg
push
pop
mov
add
inc
mov
mov
movsl
dec
lods
sar
xchg
shrb
ja
mov
mov
int
jp
push
scas
mov
test
sub
aas
jg
in
aas
mov
or
addb
stc
repz
in
mov
rolb
cli
stos
pop
pop
int
jl
cld
jl
iret
hlt
lods
jns
fstpl
fwait
fs
mov
scas
mov
rorb
lret
out
lahf
aas
push
loopne
cmpsl
cltd
pop
fsubrl
icebp
and
cld
stc
repz
mov
inc
xchg
xchg
ja
jle
andl
add
push
pop
jns
adc
jbe
rorl
loope
mov
test
xchg
xchg
jns
push
mov
sarb
inc
sbb
push
test
cmpsl
in
adc
cld
into
mov
jns
xor
sub
fldcw
adc
push
pop
str
clc
int3
pop
jns
rcrb
in
aaa
adc
cmp
mov
dec
dec
movb
call
jg
aas
notb
push
lods
push
fisubl
mov
popa
push
fs
insl
xor
out
lahf
cli
mull
xor
xchg
stc
stc
pop
cmc
push
pop
insl
xchg
pop
push
xchg
mov
xchg
push
fidivrs
fisttpll
add
cmp
cmp
jns
rcr
dec
outsb
sbb
aad
jno
pop
mov
pop
pop
sahf
xchg
inc
jnp
mov
lahf
rolb
ret
ret
xchg
iret
mov
jge
idivl
jecxz
or
push
jbe
mov
inc
cld
pop
and
dec
sahf
adc
mov
mov
cld
mov
shl
cltd
movsl
sub
xchg
out
xchg
iret
lahf
mov
mov
inc
mov
pop
mov
scas
hlt
popf
lahf
ss
iret
sbb
pop
adcb
std
psrlw
pop
mov
lahf
pop
jmp
add
lea
xor
and
repnz
adc
mov
gs
mov
cld
stc
jmp
dec
inc
popa
cmp
es
ja
leave
in
lahf
aas
pop
stc
stos
bnd
add
mov
xor
dec
mov
jns
or
mov
outsl
cmc
mov
push
pop
fbld
insb
and
mov
ja
dec
rcll
add
sbb
pop
jns
pushf
int3
jg
xchg
xchg
in
xlat
lea
push
ficomps
cmpl
aas
inc
mov
bsf
lret
aam
enter
sub
and
das
scas
cmp
xor
outsl
fidivrl
mov
pop
in
xchg
push
and
sub
orb
sahf
push
test
xchg
ja
jo
aas
xor
fists
imul
jge
in
push
mov
xchg
fists
subb
dec
lcall
mov
push
pop
scas
mov
or
push
lcall
jns
mov
aas
testl
lea
dec
pop
lahf
pop
pop
jg
sbb
fisubs
adc
jns
fstl
scas
jmp
cli
fnsave
fisubrs
push
sti
pop
out
push
shl
mov
pop
mov
jb
lret
arpl
aas
mov
pop
pmulhw
xor
xorb
dec
into
xchg
push
pop
jns
sbb
inc
popa
cmp
cmp
push
pop
jns
in
loopne
rorl
lea
dec
add
mov
outsl
hlt
in
or
inc
xchg
and
movsb
inc
aas
lret
mov
aas
mov
outsl
mov
sbb
adc
xchg
in
xchg
lret
test
inc
hlt
lret
xchg
push
fimuls
sub
pop
xchg
mov
ds
ljmp
inc
lahf
aas
jg
arpl
push
mov
sti
call
cmp
iret
sub
cmp
cltd
jnp
and
xor
adc
pop
stos
jge
sahf
jg
cld
stc
jne
out
lahf
sub
pop
xchg
mov
mov
sub
lods
orl
xor
imulb
scas
mov
int
push
das
out
mov
rorb
cwtl
sbbb
lret
subl
shlb
shl
stc
repz
cmp
repz
test
cld
cmp
adc
or
scas
mov
jecxz
lret
loop
arpl
jl
scas
mov
jle
inc
mov
stos
lods
or
cli
mov
stos
lahf
cli
repnz
lock
jle
movsl
xchg
pop
cld
adc
addr16
outsb
sbb
jae
xchg
outsl
out
xchg
push
loop
divb
sub
scas
out
xchg
pop
push
std
sbb
mov
pop
inc
mov
popa
jbe
lods
inc
mov
mov
fwait
or
lods
mov
xor
iret
or
das
aas
mov
fs
inc
pop
xor
iret
lahf
jg
cmpsb
push
stos
dec
int
cs
and
repnz
cwtl
das
icebp
aam
out
insl
mov
lds
out
lahf
pop
into
outsl
pop
xor
pop
test
cld
stc
repz
pop
movsl
ficoms
stos
xor
andl
iret
lahf
aas
jg
insb
movsl
pop
push
lret
in
stos
das
and
sub
jno
cmc
adc
pop
dec
stc
cld
adc
out
cmpsl
push
xor
sub
adc
xlat
and
in
jecxz
mov
xchg
sbb
sbb
dec
inc
jns
inc
or
mov
enter
xchg
push
push
aas
jg
sub
cmp
xchg
enter
iret
lahf
xor
adc
and
jnp
fidivrs
cmp
pxor
and
mov
xchg
xchg
subb
push
inc
sbbb
adc
push
orb
jl
xchg
rolb
adcb
jmp
cmp
cli
out
subb
cmp
sbbb
adc
push
pop
std
popa
jl
clc
flds
das
out
xchg
jle
add
call
xchg
cs
jne
incl
cli
inc
xchg
faddl
jle
sti
dec
std
js
inc
mov
int3
dec
aam
in
and
and
arpl
mov
pop
jns
and
dec
pop
aad
cld
push
sahf
push
push
shrb
xchg
add
lret
lahf
aas
cmp
into
lea
outsl
xor
loopne
lret
cvtps2pi
rol
or
lcall
imul
and
imul
lret
push
mov
jnp
pop
out
decb
cmp
aas
xchg
jmp
adc
in
aas
movsl
jg
inc
and
daa
and
test
leave
out
sub
pushf
rorl
dec
dec
stc
adc
fisubs
push
xor
nop
js
call
mov
jns
xchg
mov
dec
in
repnz
roll
or
int
sti
popa
repnz
add
inc
call
mov
dec
inc
fistpll
jl
in
mov
lahf
push
into
cmp
pop
and
lahf
lret
imul
and
test
cli
loop
into
por
pmaxsw
jns
xchg
aas
jle
jnp
sbb
cs
push
pop
ja
mov
cs
aam
stc
and
cmp
imul
loope
or
js
sbb
daa
mov
xchg
cmpsb
jecxz
scas
repnz
jb
or
sar
pop
scas
mov
andb
xchg
shl
mov
iret
in
inc
sbbl
cmc
adc
xchg
out
das
fdivr
cld
stc
and
xor
cltd
xor
stc
pusha
pop
mov
test
fistpll
int
out
xor
cmp
mov
fs
push
add
inc
sub
aas
jg
or
stos
sbb
xchg
jp
mov
adc
mov
outsb
lods
outsl
clc
push
mov
jne
adc
xchg
aas
inc
or
loope
sti
cmp
mov
sub
xor
inc
lods
nop
das
ja
sbb
push
iret
sub
jbe
ret
out
das
test
jno
adc
sbb
push
into
sub
mov
mov
jo
dec
add
jmp
pop
test
scas
pop
pusha
xchg
stc
inc
mov
push
fldcw
jl
xor
and
out
outsl
addr16
mov
adc
sbb
or
cwtl
aas
das
or
lret
sub
pop
flds
push
out
mov
and
sti
sbb
stc
repz
movsl
push
xchg
lea
das
loopne
aas
fwait
leave
mov
fwait
add
enter
xcrypt-ecb
cmpsl
iret
inc
loope
mov
movsb
cmp
sbb
enter
cs
sbb
pop
mov
push
push
mov
out
aaa
aad
rcrb
and
aas
and
pop
mov
orl
lahf
jg
repnz
aam
push
dec
out
jne
out
add
xlat
rol
mov
scas
addr16
xchg
fisubs
iret
rorb
sbb
dec
cli
jnp
add
sub
cmc
jo
out
out
in
je
lock
add
mov
into
pushf
je
outsl
insb
dec
sub
leave
cli
push
movsl
xor
mov
sti
xchg
or
stos
pusha
bound
incb
bnd
cltd
mov
xchg
ja
jg
pop
cmp
dec
cmpsb
and
pop
ret
sbb
mov
xor
popa
xor
mov
jle
into
divb
adc
pop
out
jns
mov
add
mov
cs
jl
mov
cmp
xchg
insl
pop
scas
lea
mov
dec
adc
push
jg
mov
es
pop
jg
add
and
jb
sbb
xor
sarl
fstpl
fildll
mov
push
daa
add
xchg
sub
pop
aas
daa
or
lret
inc
sahf
pop
jns
in
ss
inc
mov
bound
inc
mov
test
sti
cmpl
jecxz
mov
xor
jmp
lea
mov
jg
movsl
pxor
mov
aam
mov
aas
ja
or
shlb
inc
pop
or
call
test
inc
movsl
cwtl
xor
aam
aas
sbb
sahf
jg
inc
pop
mov
and
das
insb
jp
push
stos
cmpsb
jmp
cld
cld
sar
fildll
pop
outsb
pushl
mov
mov
into
or
cld
rorb
cmp
iret
lock
sahf
cmp
int
xchg
mov
ljmp
add
scas
and
push
mov
add
stos
test
ljmp
scas
cli
stos
outsl
cwtl
imul
into
jmp
test
in
inc
test
inc
frstor
rcrl
sbb
test
outsl
push
outsb
sub
sahf
pop
inc
inc
nop
mov
mov
add
inc
cmpb
aad
mov
jg
cld
or
jne
rorb
lahf
cld
add
aam
cli
push
dec
add
jnp
btc
repz
jne
xchg
mov
sbb
jns
cld
inc
in
int3
test
das
xor
arpl
pop
std
adc
popf
sub
sbb
inc
out
rclb
xor
jle
jge
repnz
adc
enter
jle
push
dec
dec
add
pop
out
jbe
faddl
lgs
dec
pop
cmpsb
fwait
cwtl
imulb
mov
mov
sbb
mov
stos
pushl
gs
popa
dec
je
sahf
out
in
sbb
test
pop
inc
pop
xlat
imul
out
mov
or
push
insl
sbb
hlt
push
adc
faddp
fdivrp
in
sub
xchg
repnz
pop
sbb
jecxz
cmp
lahf
xchg
rcrb
jg
das
ja
fsubrl
movlps
mov
in
sbb
icebp
fimuls
les
std
stos
xchg
jp
push
fdivr
nop
dec
out
stc
cld
cwtl
push
dec
clc
adc
fnstenv
xchg
jo
cmp
ja
jmp
aas
dec
sbbl
xchg
push
pop
scas
daa
xor
cmp
pop
push
add
or
sub
mov
fdivrl
insb
sbb
lock
lret
dec
loopne
inc
jne
ja
into
xor
outsl
repnz
add
inc
mov
mov
cmp
sub
pop
ds
sti
test
mov
mov
adc
iret
das
add
mov
mov
pop
jns
xchg
repnz
addl
jbe
into
push
push
icebp
in
push
imul
sbb
arpl
xor
stc
and
fisubrl
test
adc
clc
iret
sbb
jg
or
and
jecxz
jns
xchg
aaa
scas
mov
aam
pushf
ss
pop
pop
sbb
test
cmc
repnz
cs
in
rolb
mov
ficompl
mov
cltd
repnz
mov
mov
mov
nop
mov
mov
inc
or
pop
jle
jp
mov
shlb
repz
lahf
xchg
cmp
push
mov
cld
stc
fdivrl
push
jmp
fld
or
adc
add
aas
pop
das
adc
mov
out
jle
data16
cld
pop
and
ja
call
imul
jmp
in
loop
jns
push
jge
mov
out
lahf
mov
lock
lods
jg
adc
jge
addr16
pop
sahf
xor
test
decl
lds
loopne
lret
out
sahf
push
dec
xchg
cmpsb
cmp
xchg
fisubrs
jb
xlat
xor
stos
das
out
pop
je
filds
push
cld
sarl
test
iret
jle
sbb
mov
ffreep
dec
das
jg
pop
cmp
fwait
out
sbb
inc
jle
mov
pusha
mov
loope
iret
lahf
adc
imul
out
iret
lahf
add
dec
insl
sbb
stc
rep
jmp
mov
into
sub
and
sbb
cld
cld
dec
js
inc
fisubs
pop
add
scas
hlt
cmp
cld
add
lods
and
mov
adc
jle
outsb
fucom
rcrl
pop
push
mov
dec
lret
lahf
rorl
aam
fistpll
mov
push
add
mov
in
iret
or
xor
add
das
movsl
pop
cmpsl
scas
dec
jne
sbb
mov
add
inc
jp
pop
cli
in
pop
test
lods
jno
repz
ds
das
insb
loopne
int3
ljmp
adcb
leave
pop
incb
xor
mov
les
cltd
and
aas
jg
in
in
mov
dec
in
icebp
les
xor
in
aaa
clc
imul
add
push
rcrl
addr16
mov
pop
mov
push
mov
xlat
mov
mov
pop
add
hlt
setg
mov
sub
subb
jmp
imul
mov
insl
cld
sbb
into
sub
rcll
cs
lahf
aas
jg
bound
mov
sub
pop
fistps
faddl
jmp
or
sub
jle
test
repz
push
loopne
je
sub
dec
fs
loope
ljmp
repnz
pusha
fmuls
lret
ss
fistpl
lcall
mov
lea
mov
jl
pop
aas
out
maxps
xor
testb
lahf
arpl
mov
pop
jns
in
cmp
mov
es
fisubrl
xchg
push
iret
fs
or
jbe
push
rol
mov
pop
mov
sub
in
iret
les
repnz
imul
ja
movsb
cwtl
in
leave
pop
ficomps
jne
push
pop
jns
movsb
daa
pop
scas
call
rol
xor
std
jb
xchg
test
mov
dec
sbb
dec
push
sti
add
aas
jg
inc
fidivs
fidivs
mov
clc
inc
xchg
lahf
fidivs
add
outsb
outsb
adc
pop
cmp
outsl
stc
sub
mov
or
or
out
lds
mov
mov
push
sbb
in
push
out
pop
mov
incl
push
pop
cmp
push
sbbl
pop
jns
xor
aaa
xchg
cmpsb
cmp
pushf
movsb
out
lahf
aas
mov
sbbb
cmp
sub
repz
sub
out
data16
mov
repz
push
fwait
lods
ss
aas
mov
xchg
inc
pop
loopne
das
lods
fistps
mov
xor
repnz
in
fdivp
xor
ljmp
xchg
lret
mov
je
and
jp
repz
je
loope
pop
mov
cmp
stc
rcrl
lret
jecxz
movsl
jmp
cmpsl
pop
imul
ss
lea
fidivs
call
adc
sahf
in
mov
clc
mov
gs
adc
scas
pop
clc
ds
movsb
test
cs
into
je
std
mov
inc
arpl
xchg
mov
out
das
pop
jae
outsl
push
sbb
or
mov
mov
data16
or
loopne
pop
jns
mov
into
xchg
cmp
pop
scas
out
aad
xor
mov
mov
scas
jo
iret
lahf
aas
jg
aad
mov
lret
bound
movsb
icebp
mov
das
loope
xor
movsl
mov
movsl
or
or
inc
lahf
jae
sahf
inc
das
aas
jg
inc
leave
cli
int
mov
inc
cmpsl
xchg
mov
and
out
sbb
mov
dec
ret
pop
mov
pop
cmp
xchg
jns
lahf
lret
jb
jo
in
cs
lret
dec
push
fdivrp
std
addr16
pop
mov
add
icebp
mov
jmp
sbb
mov
and
cmp
leave
ud2
sub
repnz
shrd
push
xchg
sbb
popf
add
mov
das
andb
sub
repnz
xchg
push
test
cmp
inc
mulb
call
cmc
dec
sbb
arpl
jg
sahf
xchg
dec
aas
mov
mov
cli
jno
out
xor
cmp
shr
cli
sti
repnz
push
adc
pop
dec
loopne
mov
mov
divb
andl
repnz
sbb
cld
jne
push
mov
outsl
popa
iret
fidivl
push
pop
jns
cmc
sar
push
data16
push
sbb
jns
xchg
movl
mov
add
into
push
lret
aas
sti
or
scas
pop
dec
jns
pop
scas
mov
cwtl
xor
jne
xchg
mov
shrl
test
jecxz,pn
daa
ficompl
iret
scas
mov
ljmp
iret
mov
sub
into
push
adc
pop
popa
pop
scas
aas
fldl
add
out
fcompl
in
iret
lahf
mov
loop
out
sub
shll
xchg
out
daa
and
in
das
and
xor
fyl2xp1
mov
adc
loopne
add
movsb
and
ret
sub
lahf
aas
mov
cmp
and
fdivrl
movsb
xor
iret
jo
fimuls
or
or
out
cmpsl
imul
sbb
push
nop
jg
sub
clc
pop
popa
mov
jge
and
out
test
pop
repnz
int
jne
shll
lahf
aas
jg
lods
mov
mov
mov
mov
std
loope
insl
add
loopne
iret
das
outsb
push
iret
cmp
sti
mov
int3
lahf
test
fisttps
sub
fwait
jle
loopne
aas
pop
jae
mov
iret
lahf
aas
jg
stos
cs
insb
cmp
mov
cld
stc
repz
mov
jmp
xchg
pop
aaa
cwtl
stc
dec
inc
pop
jns
or
lahf
cwtl
outsl
pop
adc
aas
jg
cld
loop,pn
stos
mov
insl
mov
push
mov
lahf
sbb
in
add
pushf
cmc
pop
mov
pop
ds
push
lcall
es
mov
mov
rcrl
mov
jl
pushf
movsb
add
mov
sbb
icebp
inc
push
pop
test
lret
sub
xor
adc
cmc
jbe
cmc
in
mov
xor
jns
sarl
fwait
or
orb
loopne
repz
ds
mulb
mov
fsts
repnz
jns
pop
in
icebp
and
insb
repz
aas
jno
pop
xchg
mov
adc
scas
mov
loopne
cmpb
daa
dec
lret
repnz
pop
fidivl
adc
inc
cmp
mov
std
lret
mov
pusha
mov
or
cwtl
push
pop
jns
sbb
jo
xor
jecxz
sbb
push
je
or
lret
xchg
sbb
fs
pop
mov
xchg
push
pop
arpl
data16
xchg
push
cmp
pop
jns
std
mov
out
cmp
int3
adc
pop
jns
and
vpmuludq
jp
cmp
cmc
lock
fistpl
xor
sahf
pop
xlat
iret
iret
and
inc
outsb
pop
push
ret
sti
repnz
in
pusha
sub
jmp
add
iret
jg
mov
inc
lcall
dec
out
lahf
aas
mov
std
imul
dec
lods
inc
les
xor
lods
xchg
and
sub
pop
stos
sub
mov
shlb
arpl
div
add
das
push
pop
dec
nop
scas
jno
aam
xadd
pop
or
pop
pop
cmpsb
jmp
repz
lahf
aas
orl
adc
stos
cmp
cld
stc
call
dec
andl
out
push
js
and
iret
lahf
aas
mov
cltd
xchg
jmp
push
inc
in
repnz
fmul
add
inc
push
test
mov
imul
pop
jno
ss
repz
lahf
rorl
repz
adc
mov
cld
stc
mov
rorl
add
xchg
or
rorl
aas
mov
decl
daa
clc
xchg
icebp
test
pop
dec
mov
iret
mov
enter
outsl
std
push
pusha
lret
test
aam
ror
std
in
jmp
lret
mov
daa
mov
das
and
jo
scas
mov
xchg
pop
jl
notl
shll
jne
mov
push
scas
repnz
repz
bound
sar
cmc
lret
clc
pop
add
or
aas
jg
cld
mov
jg
sbb
mov
lahf
cmp
inc
sahf
cmp
cld
and
sub
cmc
lret
ret
aas
mov
out
lahf
sbb
dec
scas
mov
lea
je
out
adc
cmp
shrb
leave
dec
push
cmp
mov
add
out
mov
lahf
aas
aas
and
rcll
test
sub
jns
jbe
addr16
lahf
jb
jp
mov
das
mov
sub
mov
out
aas
dec
outsl
repz
aam
cld
adc
call
fdivl
push
cmp
std
cltd
jle
ja
jle
sti
mov
dec
shlb
or
outsl
pop
nop
repz
mov
hlt
push
pusha
test
stc
repz
ds
test
sbb
addr16
imul
fisttpl
inc
pop
push
jo
in
push
ficomps
push
or
pusha
rol
and
push
fdivrp
jb
nop
mov
ss
xor
mov
fwait
enter
out
das
xchg
mov
jne
lock
jns
bnd
jno
mov
mov
or
xchg
das
push
or
jle
js
repz
roll
aad
js
mov
lcall
jmp
clc
lret
push
adc
call
xchg
and
out
das
enter
sbb
ja
jle
push
xchg
mov
mov
mov
clc
push
jg
mov
pop
jns
xchg
test
sahf
pop
adc
iret
lahf
and
lock
push
gs
pop
dec
and
nop
pop
shrb
cs
cmp
inc
iret
fiadds
movsb
pop
and
adc
xlat
adcb
ljmp
jg
lds
xchg
push
xchg
enter
jo
int3
xor
xchg
ja
mov
sub
rdmsr
pop
mov
inc
add
jle
adc
lahf
pop
cwtl
rorb
xchg
popf
fwait
in
out
adc
es
fwait
jns
shrb
sahf
cltd
aam
mov
int3
cltd
mov
inc
push
xchg
xchg
aaa
rorb
daa
lahf
icebp
pop
push
aam
ljmp
jp
push
pop
andps
orl
test
aas
sbb
lret
fbld
or
lahf
mov
in
jo
mov
jno
dec
ja
jg
das
or
daa
repnz
xchg
iret
shrl
push
or
lret
mov
hlt
jbe
inc
mov
mov
pop
fnstsw
mov
cmpl
in
push
pop
repz
sub
iret
lahf
aas
adc
dec
loopne
insl
cmc
aam
or
jns
repnz
cmpsl
out
pop
ss
mov
adc
push
pop
out
int
pop
mov
mov
jp
sub
ror
lahf
aas
rcrb
adc
lahf
ds
adc
add
lahf
mov
cltd
movsb
inc
mov
push
scas
push
cmpsb
push
sbb
cld
jb
cmpsb
inc
mov
push
adc
rcl
jmp
adc
sub
adc
adc
sub
dec
mov
iret
mov
xlat
xchg
jb
or
test
pop
jns
add
gs
bound
push
adc
jb
and
fisubs
dec
cmc
scas
pop
pop
addr16
xor
push
mov
push
daa
pop
std
into
rorb
sub
popa
sub
lahf
pop
sbb
push
inc
inc
adc
jne
mov
xchg
aam
or
leave
push
dec
inc
push
in
leave
scas
pusha
mov
sub
mov
mov
push
js
and
dec
and
pushf
xchg
jae
sarb
aas
add
lahf
sbb
xchg
fs
or
cli
push
rcrb
sub
pusha
ds
iret
sahf
sbb
cmpsb
sahf
icebp
xchg
mov
fsub
xlat
dec
jecxz
jecxz
imul
pop
mov
jg
out
lods
cmp
insl
lret
outsb
in
mov
dec
icebp
lahf
jle
or
jle
addl
mov
addl
pop
add
jb
mov
dec
or
divl
inc
add
xchg
sbb
cmpsl
inc
lea
iret
lahf
aas
mov
pop
or
insb
mov
cld
stc
repz
je
or
cmc
insl
add
sbb
xor
lea
jg
pop
or
push
into
mov
iret
dec
imul
sub
sbb
ds
loopne
mov
fidivrl
mov
sbb
inc
pop
xchg
jbe
and
cmp
cld
cld
stc
movsl
sahf
xchg
cmp
call
enter
popf
fistps
pop
mov
pusha
sarb
adc
or
aas
bound
stos
mov
xchg
insb
push
lock
mov
jge
adc
and
and
fdivs
or
in
sub
call
sar
repz
jle
push
addl
sub
pop
nopl
mov
repnz
xchg
inc
enter
mov
es
cmp
div
lret
fbld
inc
mov
bound
mov
xchg
adc
js
mov
gs
push
rcrl
mov
jle
adc
das
cmp
mov
scas
mov
sub
hlt
cmp
sub
das
jg
leave
xchg
mov
aas
fnstsw
xchg
lock
or
inc
push
push
jg
pop
ljmp
scas
mov
out
test
xor
mov
es
das
pop
js
pop
jle
dec
cli
lret
cld
stc
mov
xor
dec
test
and
cs
or
insb
icebp
push
js
out
das
fisttpl
roll
xchg
lcall
mov
or
iret
lahf
into
mov
sub
mov
addr16
push
mov
cld
stc
mov
xor
cwtl
pop
cwtl
dec
jl
iret
test
fidivrs
js
int
lahf
sbb
das
ja
sub
out
das
rcrl
push
sub
sbb
cli
in
mov
popf
or
dec
subb
imul
xchg
push
in
popa
bound
out
adc
les
popa
jns
orb
sbb
ficomps
pop
or
xchg
js
gs
mov
add
cmc
sahf
leave
cmp
lret
sub
inc
adc
push
xor
bound
repnz
shlb
loop
mov
inc
mov
fstl
imul
fwait
insb
jnp
mov
fidivrs
repz
insb
push
adc
lock
pusha
lret
mov
cmc
out
adc
inc
dec
rclb
lret
clc
test
sbb
or
shll
or
sbb
aam
insl
xor
test
mov
pop
pusha
loop
mov
in
jle
pop
aaa
jg
mov
push
lods
inc
scas
sub
loopne
test
in
pop
lods
aas
cmc
pop
dec
icebp
lahf
xor
mov
sub
subl
out
inc
lret
out
ret
dec
loope
xchg
add
pop
outsb
inc
int3
lahf
jb
jg
outsl
xchg
push
gs
out
adc
jle
cld
dec
insb
mov
xchg
adc
jg
or
into
insl
add
sbb
shlb
inc
into
or
iret
xchg
aas
jg
push
dec
imul
int3
icebp
sbb
out
pop
lea
mov
add
pushl
lock
xor
test
inc
add
mov
lahf
aas
xor
mov
in
lret
mov
and
dec
aas
pop
xor
icebp
out
int3
jnp
inc
out
push
negl
cld
cld
mov
ja
aas
jl
test
xor
out
mov
push
dec
aas
and
scas
pop
call
add
pop
jne
mov
xchg
out
ljmp
sub
mov
push
inc
jl
lret
lahf
test
or
es
push
add
loope
sahf
cmp
mov
mov
sbb
jg
inc
jle
mov
and
inc
ja
out
lahf
dec
pop
les
out
xchg
pop
cli
sar
in
addr16
push
cmpsl
cmc
or
pop
adc
inc
movsb
jmp
scas
and
lea
out
cld
stc
repz
outsl
mov
cmpsl
and
iret
pop
popa
cmp
jle
or
cld
cwtl
ficoml
dec
sarl
jl
fs
sbb
fsub
in
adc
or
sub
sub
outsl
fnsave
int3
sahf
sbb
addr16
cmpsl
xchg
test
fninit
mov
inc
dec
or
lahf
test
push
inc
jnp
repnz
xchg
jp
aas
test
mov
das
or
lods
cmc
add
test
mov
in
inc
xchg
jbe
pusha
jae
add
xchg
lock
pop
sarl
in
inc
dec
inc
xchg
mov
fimuls
aas
cmp
pop
stos
xchg
call
add
pop
cmpsb
push
sahf
cld
movsl
push
das
mov
lahf
add
lock
push
jecxz
das
inc
mov
sahf
mov
adc
in
out
xchg
push
movsl
inc
cmpl
xchg
push
pop
jns
arpl
pop
repnz
sbb
cld
ret
aam
mov
fildl
push
xor
popf
push
sub
lods
mov
pop
adc
pop
loope
dec
jae
notb
sub
inc
call
sub
mov
test
fcom
pop
mov
adcl
lahf
mov
es
mov
dec
mov
dec
push
jg
test
sub
test
push
pop
jle
push
out
aas
mov
and
mov
pop
scas
sbb
pop
mov
repz
mov
outsb
outsb
push
fnstsw
movsb
mov
paddb
cmpsb
jb
cmpsl
adc
hlt
inc
or
lret
pop
cmp
cltd
sahf
popf
add
mov
fsub
jmp
cmp
or
inc
fnsave
pushf
call
inc
mov
or
push
js
mov
in
add
jo
bnd
inc
loope
jecxz
pushf
clc
enter
fbstp
mov
jg
or
inc
loope
pushf
filds
addl
xchg
mov
aas
cs
repz
mov
mov
push
xchg
loop
ljmp
cmp
repz
inc
push
in
cld
daa
pop
mov
and
call
aas
icebp
repnz
outsb
sbb
jae
xor
mov
stos
test
fnsave
lret
mov
pushf
lock
sbb
dec
adc
cld
sarb
aas
xchg
push
fisubrs
fistl
movsl
cld
js
or
adc
dec
fisttps
push
dec
dec
js
dec
push
dec
fisttps
push
dec
dec
je
dec
dec
test
pop
push
adc
pusha
sub
pmaxub
sub
xchg
nopl
or
aam
iret
outsl
sbb
add
dec
aad
outsl
and
test
dec
scas
repnz
stos
dec
ss
imul
shr
pusha
loop
mov
xchg
rorl
faddl
mov
mov
push
cmp
mov
dec
push
iret
xchg
or
push
adc
sub
dec
adc
test
sbb
push
dec
aad
fcoms
scas
cmp
mov
lret
shr
adc
aas
add
arpl
je
pop
clc
and
sahf
iret
xchg
test
mov
cmpsb
packsswb
pop
dec
nop
mov
repnz
stos
jl
sbb
nop
xchg
cld
repnz
scas
stos
cmp
and
adc
pushf
ja
adc
mov
stmxcsr
push
sbb
pop
sub
data16
int
sbbl
test
aas
fidivrs
repnz
shll
jmp
push
sarl
sbb
lahf
aas
aas
or
xchg
test
sti
arpl
inc
loop
iret
jb
jbe
or
or
cld
stc
repz
ljmp
or
aas
jg
outsb
data16
jle
jg
lahf
pushf
jle
orb
pop
xchg
out
cld
nop
inc
adc
xor
jne
and
mov
cmc
cmpsl
movsb
jne
nop
pand
pop
lahf
aas
call
xchg
test
lahf
cltd
adc
lcall
das
lret
jns
xchg
ja
sub
mov
pusha
mov
fwait
cld
fdivr
movsl
jne
pminsw
imul
jl
jle
cld
stc
repz
pop
testb
cs
add
mov
lahf
aas
jg
rol
or
xchg
or
jns
inc
xchg
fsubrl
fcoml
adc
mov
xor
and
mov
sti
mov
out
cmc
dec
xor
mov
lock
jnp
sbb
xchg
pop
lods
pop
jae
bound
jg
pop
lods
std
push
enter
repnz
jbe
ficompl
sub
imul
mov
popf
lret
lods
movsl
jg
cmp
dec
imul
pop
clc
push
mov
mov
cli
sbb
divl
lret
ds
sbb
scas
ja
xor
mov
fwait
add
push
in
cmc
lret
pushf
lahf
pop
push
outsb
mov
sbb
push
ret
pushf
mov
jg
xlat
in
pop
or
sub
fs
mov
add
cwtl
pop
call
repz
pop
or
test
push
and
int3
mov
cld
add
jns
adc
out
push
movsl
and
icebp
cmp
xchg
inc
jmp
add
data16
cld
adc
dec
cmp
push
lahf
aas
jg
hlt
cmpsb
pop
push
insb
xor
or
inc
or
iret
jg
aad
jbe
xchg
jg
push
sub
jge
mov
lods
xchg
sub
stc
xor
xchg
aas
pop
out
mov
and
lret
iret
mov
subl
lcall
roll
scas
lods
push
in
mov
insb
iret
mov
test
lds
jg
inc
pop
lcall
add
jo
mov
inc
fcmovbe
negb
xchg
movsl
mov
pop
xor
repz
sbb
jns
dec
jo
int
adcb
mov
pop
cmp
inc
push
push
pop
fdivrp
sbb
inc
add
insb
adc
cld
ret
out
loope
push
mov
cmp
mull
das
lahf
aas
fldenv
fwait
jp
pop
mov
add
and
dec
ds
mov
mov
sub
add
scas
stc
cmpsl
rorl
mov
jl,pt
sub
inc
test
cltd
inc
idivl
hlt
pop
mov
icebp
mov
xor
stc
push
or
dec
jb
or
pop
dec
adc
jg
cld
into
out
inc
daa
ljmp
xchg
add
cltd
mov
adcl
test
mov
repz
mov
mov
and
cmp
enter
popa
add
scas
lods
fistps
psubb
fistpl
dec
out
aam
mov
cmc
loopne
and
popa
sahf
in
xor
pop
add
mov
outsb
test
adc
incb
adc
jo
insb
outsl
add
inc
pusha
adc
movsb
fwait
pusha
push
dec
cmp
stc
mov
mov
ds
aad
repnz
and
dec
adc
or
fwait
aam
cs
mov
outsl
push
fisttps
cld
fucomip
cli
sarb
pop
adc
or
dec
std
repnz
dec
xlat
pop
mov
push
clc
shld
sub
xor
and
push
jle
mov
or
rorb
cli
jne
cwtl
scas
cli
aas
outsl
in
jmp
dec
dec
clc
sbbb
lahf
popf
sbb
mov
adcb
lcall
outsl
testl
ja
inc
ficoml
lret
adc
sub
push
and
out
push
cld
movsl
inc
aaa
sub
movsb
xor
aas
push
push
or
or
pop
scas
call
push
adc
repz
sub
stc
pop
clc
repnz
pop
out
or
lods
adc
jg
pop
aaa
addb
mov
loopne
ds
mov
cld
jmp
push
sbb
jg
push
mov
xchg
fmulp
dec
or
lock
dec
sub
adc
or
jg
aas
xchg
or
and
mov
xor
sarb
aas
scas
lods
jle
dec
pop
ds
daa
mov
pop
mov
lea
incb
dec
rcrb
xchg
add
nop
iret
fldcw
inc
repz
cmpsb
jle
iret
xchg
lret
testl
and
repnz
mov
xchg
inc
jmp
mov
outsl
xchg
fcomip
aas
out
lahf
movsb
fisttpl
mov
push
hlt
cmpsb
xor
dec
inc
or
pop
fidivrs
aad
jbe
xchg
jg
mov
adc
sbb
enter
in
sub
sahf
adc
js
adc
mov
xor
xor
sbb
pop
lahf
xor
enter
xor
mov
add
mov
orb
fbstp
icebp
and
xor
nop
das
dec
xor
pop
xor
add
xor
repnz
mov
dec
mov
call
xor
jae
das
cld
in
aas
adc
pop
push
orl
pop
add
ss
jl
add
dec
fwait
sub
jle
je
loopne
sahf
stc
adc
pop
pop
sub
inc
out
sub
jmp
lahf
rorb
cwtl
outsl
aas
dec
mov
cmpsb
lcall
cs
rclb
paddsw
in
test
jge
mov
sub
cmpsb
cmpsb
jmp
iret
scas
add
xchg
test
das
loope
es
xchg
mov
and
cmp
loopne
loopne
mov
mov
and
pavgb
add
adc
loopne
and
xor
es
pop
push
and
add
pop
mov
loop
loopne
sbbb
jg
cwtl
jo
loopne
push
inc
push
add
mov
mov
cmp
cmp
sarl
stc
or
push
pop
jns
prefetcht2
and
iret
ret
repnz
jne
push
movsl
daa
decl
inc
inc
repnz
lret
sub
les
lahf
xchg
mov
pusha
lret
mov
je
sub
pop
dec
clc
in
mov
adc
push
mov
iret
jo
pop
adc
incl
jmp
xchg
out
shlb
mov
push
and
repz
cmp
jns
mov
xchg
ja
fldl
pushf
mov
out
ret
stc
xor
in
repz
js
cmpl
pop
xor
xor
hlt
adc
fisubl
inc
aas
jg
inc
out
mov
inc
pop
push
aas
nop
xchg
lahf
out
inc
movsb
ret
sbb
repnz
inc
adc
sbb
push
xlat
clc
daa
out
and
imul
repz
push
mov
fwait
das
push
xchg
inc
aas
jg
cld
add
push
popf
pop
jo
adc
adcb
outsl
mov
das
pop
jmp
outsl
out
fiadds
pop
incb
faddl
cld
stc
xor
push
cmp
std
xor
lret
in
pop
pop
mov
sub
loopne
adc
mov
scas
jl
cmp
fldl
or
lock
pop
unpcklps
repnz
stc
add
xchg
popa
adcb
xor
sbb
mov
adc
scas
push
lcall
jl
cld
rcr
mov
lcall
mov
pop
jle
rclb
mov
int3
bound
push
sbb
add
mov
inc
ret
iret
insl
out
lahf
aas
dec
mov
mov
pop
pop
pop
stc
repz
adc
push
mov
cmp
inc
jg,pt
cmpsb
xchg
push
dec
sarb
in
jle
pop
inc
jg
cs
add
pop
sub
jle
jo
cmp
add
pusha
scas
sub
sbb
movsb
pop
or
lahf
jg
jge
inc
insb
in
iret
lahf
jmp
mov
push
xor
in
jnp
pop
nop
jmp
cmp
jp,pn
fistps
push
stc
imul
stc
repz
cs
push
dec
mov
popa
int
mov
pop
flds
lahf
xor
dec
out
in
rorb
xchg
pop
clc
daa
jg
cmpsb
cmp
les
cltd
fcomps
icebp
and
nop
dec
cmp
lods
pop
outsb
minps
loop
push
inc
inc
pop
cs
xchg
mov
insl
push
int
cmp
adc
shr
mov
fiadds
adc
and
out
xorb
jg
pop
pop
mov
sub
push
loope
or
iret
out
or
icebp
mov
mov
xor
mov
stos
aas
loope
adc
add
cmc
in
enter
xchg
cmp
js
pop
repnz
stc
xchg
pop
pop
int
enter
push
cmpsb
lret
push
push
jmp
or
dec
xlat
add
jecxz
dec
out
in
add
pop
bswap
sub
out
pop
mov
in
lods
sub
mov
xchg
or
sbb
jle
repnz
leave
lcall
mov
mov
mov
mov
sarb
push
xchg
push
pop
mov
push
incl
lret
inc
inc
push
xchg
push
pop
jns
xchg
lret
sub
mov
loope
in
jp
iret
fwait
jae
or
sbb
lahf
hlt
repnz
and
mov
lds
xor
jle
or
aaa
rorl
in
mov
dec
sbb
inc
add
rorb
mov
loope
mov
in
arpl
js
or
rclb
push
xchg
jo
out
out
or
jbe
jae
adc
and
jg
into
push
mov
adc
push
mov
fmull
pusha
das
fbstp
js
daa
ds
mov
mov
dec
cs
inc
adc
inc
cmpsl
pop
pop
push
add
pop
sar
xlat
and
movsl
sub
sbb
lcall
repnz
stc
push
inc
or
lahf
cld
stc
test
shll
and
push
aaa
shl
dec
sbb
mov
jge
std
xchg
pop
mov
or
add
aas
mov
push
pop
aas
mov
iret
lahf
aas
fwait
push
insb
cmp
cmp
scas
test
and
sub
fisubs
movsb
in
je
sahf
jbe
cli
in
dec
sub
cld
sbb
test
cmp
mov
out
les
cmp
popf
stc
xchg
hlt
in
idiv
push
cli
push
sahf
jmp
jg
cld
iret
popf
lcall
mov
cmpl
jns
daa
movsl
push
outsl
insl
call
bound
outsl
int3
in
mov
fimuls
pusha
and
mov
add
out
rolb
mov
sub
cld
stc
mov
push
add
dec
pop
xor
pop
or
pop
stc
xchg
lock
mov
into
adc
push
int3
fwait
pushf
dec
call
lods
push
cs
test
ja
lahf
pop
out
push
inc
jp
in
aaa
pop
sete
add
jg
fisttps
test
out
imul
imul
xchg
pop
or
sbb
pop
pop
or
inc
lahf
add
out
das
add
or
cld
stc
repz
mov
roll
inc
inc
adc
jle
sub
xchg
cmp
cld
stc
repz
int3
hlt
pop
fisttpll
or
shrb
aas
jg
xor
ja
sbb
inc
and
pushf
outsl
iret
das
test
pushf
inc
mov
in
xchg
and
lea
imul
push
cld
stc
add
mov
leave
fwait
rol
add
jns
jl
fistpll
sub
into
pop
mov
jmp
push
aaa
pushf
das
scas
mov
or
mov
js
or
ret
mov
push
rcl
push
mov
out
pop
sti
jle
das
inc
das
test
outsb
aas
add
dec
mov
or
dec
push
outsb
add
aas
jg
ds
inc
movsb
in
jmp
inc
push
pop
jge
add
enter
pop
repnz
imul
and
lahf
lock
sti
sbb
pop
add
decl
dec
inc
jge
in
add
iret
ds
cmpsl
incb
fmulp
sbb
popa
scas
daa
aas
aas
mov
pop
fimull
push
fsubrp
decb
pop
fnstcw
or
push
pop
daa
or
lahf
ss
pop
cmp
jg
mov
jo
fists
out
lea
repnz
push
xchg
xchg
hlt
jb
inc
add
jle
push
int
es
add
insb
shlb
mov
cld
stc
pop
outsb
inc
inc
sub
adc
jg
outsl
sub
lods
pop
pop
mov
aas
add
pop
pop
push
xchg
push
jl
iret
mov
scas
in
icebp
adc
out
sarl
mov
mov
jle
inc
pop
stos
loop
inc
and
cs
out
push
pop
cmp
lcall
int
xchg
lahf
aas
mov
jns
cmpsb
fildll
shl
out
push
jmp
outsb
xlat
loopne
mov
pop
xor
in
adc
in
xchg
push
fidivrs
pop
scas
jge
out
pop
mov
adc
add
add
mov
and
clc
jno
orl
sub
leave
cmpsl
or
cmpsl
repnz
scas
pop
sbb
jno
aas
insl
out
scas
sub
mov
sub
mov
mov
rolb
ret
sarb
lahf
pop
sbb
cltd
dec
push
push
out
aas
cmp
push
daa
mov
inc
repnz
out
rorb
repz
mov
sti
add
ds
popa
pop
adc
or
xchg
add
femms
jo
xchg
or
enter
loop
pop
cs
mov
decb
xor
sti
in
xchg
clc
mov
push
shl
pop
adc
dec
jnp
ret
xor
test
jno
pop
out
jne
stc
popa
cmp
push
mov
sub
xor
adc
and
push
mov
mov
adc
lds
jb
fiadds
aas
jl
leave
push
bound
push
dec
pop
es
xor
lods
pop
lods
movsb
lcall
add
inc
push
mov
es
movsb
lods
out
lods
jp
leave
adc
lods
lahf
pusha
xchg
add
fs
mov
mov
lcall
add
and
ja
dec
out
cld
stc
pop
into
add
repz
test
jmp
dec
iret
mov
pop
pop
cmp
repz
imulb
jg
or
cmpsb
jmp
bound
gs
push
movsb
lret
js
imul
std
or
xor
mov
fsub
push
fstl
cli
orl
addr16
adc
enter
ficomps
or
hlt
ja
push
mov
mov
adc
jmp
sub
ds
pop
or
sbb
push
mov
add
aas
call
in
pop
mov
sub
out
arpl
arpl
in
add
getsec
add
adc
je
mov
cld
stc
ja
ja
pop
fs
das
and
mul
xchg
das
cmpsl
out
andb
pop
xchg
stos
dec
sub
mov
sbb
jg
mov
aam
loopne
jo
in
sahf
add
out
xchg
pop
stos
inc
int3
add
addb
push
jae
push
cli
push
pop
push
das
jo
and
pop
jl
push
sbb
mov
adc
or
adc
repz
repnz
xlat
jl
cli
dec
sbb
add
adc
xchg
xchg
ret
jl
dec
outsb
lar
aas
lods
xor
pop
into
xchg
je
push
ss
repz
lahf
mov
lcall
call
jns
aaa
push
fbld
dec
rep
fdivp
lret
or
loopne
fcomp
movsl
cmc
ja
sub
mov
mov
xchg
add
cmp
stc
xchg
fiaddl
mov
fs
iret
loopne
pop
cld
or
test
insb
and
and
lock
xor
lods
mov
push
lock
mov
mov
sbb
sbb
sub
add
sub
sarb
aas
jg
std
fcompl
flds
mov
add
shll
or
mov
inc
add
enter
xor
dec
int3
repz
xchg
fs
gs
sbb
stc
xchg
dec
jae
imulb
cmpsl
mov
cmc
enter
rol
adcb
mov
stos
mov
cmpb
stos
shll
jg
pop
add
jns
incb
out
adc
int
dec
dec
test
daa
push
repnz
stc
and
lahf
push
out
adc
push
push
pop
xchg
dec
ret
pop
mov
xchg
rcll
popf
int
cmp
xchg
fsts
inc
popa
jb
xchg
cmp
or
push
imul
push
aaa
and
pop
in
push
mov
pop
mov
or
test
cld
stc
repz
test
std
pop
popf
mov
cld
add
pop
mov
mov
cld
mov
mov
test
es
adcl
adc
cld
stc
mov
lea
sub
pop
hlt
and
dec
push
jns
mov
jbe
and
jbe
inc
add
and
out
inc
pop
fld
mov
ja
push
jb
add
iret
lahf
outsl
not
mov
push
mov
fsts
out
sahf
aad
rcll
comiss
jmp
mov
movaps
cmp
nop
jb
mov
mov
xchg
aaa
dec
enter
rcrb
stc
mov
xchg
scas
out
ja
xor
push
adc
mov
adc
aas
mov
nop
cli
icebp
pop
push
aam
push
inc
adc
orl
shll
jp
push
xor
xor
out
aas
fadds
dec
mov
push
adc
cmp
inc
bound
dec
ja
mov
mov
xor
rcll
or
and
aad
dec
jbe
fldl
andb
ret
ret
dec
pop
fnstsw
mov
jg
and
mov
incl
adc
lock
ja
dec
loopne
insl
cmc
aam
or
aas
lret
mov
cmpsl
out
shr
das
insb
cltd
test
mov
xor
out
adc
ja
inc
add
sub
sarb
das
gs
adc
push
lahf
movb
jle
cs
xchg
fcomps
inc
mov
cld
or
cmpsb
push
sbb
fistps
jl
mov
pop
or
jg
pop
mov
das
dec
clc
adc
adc
repnz
repz
fisubrs
iret
dec
hlt
mov
jp
jmp
and
add
xchg
iret
push
or
bound
in
call
pop
jno
aas
mov
dec
lahf
out
dec
jbe
mov
xor
rorl
jae
push
outsb
rorb
filds
fadd
sarb
outsl
pusha
stc
pop
outsb
sarb
add
mov
push
inc
push
dec
pushf
cmp
in
add
sub
push
js
lahf
aas
jg
std
lds
and
jae
push
cld
mov
jnp
sbb
iret
add
push
sbb
mov
sub
fldt
pop
call
push
out
cmpsb
sahf
icebp
xchg
add
cld
stc
mov
lods
dec
inc
sub
cmp
cmc
adcb
dec
cmp
int
jo
lahf
aas
cmp
jb
incb
jbe
push
ror
out
cmp
loope
push
enter
fists
leave
out
mov
lahf
ja
push
add
daa
mov
cmpb
jp
sbb
aas
sbb
jle
sub
push
cs
fimuls
std
scas
xor
stc
fildl
push
cmp
sub
pop
mov
sbb
inc
dec
aam
add
in
jne
adc
inc
lods
stos
xor
push
pop
mov
scas
or
sti
pop
movsb
gs
and
xor
lahf
aas
push
fisubs
mov
xchg
fs
add
pop
add
in
lret
aas
pop
mov
gs
sub
ret
lods
inc
outsb
icebp
inc
fbld
aas
mov
adc
lahf
sbb
shld
jb
aaa
pop
mov
outsl
or
mov
roll
insb
mov
sbb
les
mov
fdivr
adc
mov
sub
scas
les
push
adc
sahf
xchg
fdivs
mov
mov
mov
fcomps
lea
stc
pop
jae
mov
fsubp
mov
clc
pop
mov
mov
dec
insb
sbb
mov
sbb
adc
adcb
ljmp
pop
jns
frstor
jo
jge
pop
sbb
into
xor
hlt
lret
xchg
push
imul
xchg
test
outsl
jg
cmp
and
xchg
stc
stc
repz
iret
ja
lods
jp,pn
out
mov
cmpsb
movntps
add
inc
push
pop
scas
dec
mov
mov
xor
jnp
push
es
mov
iret
sub
jl
or
or
stos
lds
out
lahf
pop
push
mov
inc
mov
push
loop
pop
and
ds
shl
sub
inc
xchg
ja
and
shr
outsl
cmpsb
mov
mov
in
xor
fistps
jg
incl
fcompl
push
arpl
sahf
fistpll
test
fucom
jns
push
je
aam
cs
inc
xlat
loop
repnz
stos
add
out
xchg
sbbb
jge
jge
das
pop
jns
push
mov
js
aas
jg
cli
jmp
mov
mov
iret
stos
sub
sbb
sub
dec
and
icebp
mov
mov
sahf
imul
inc
js
out
cli
in
sub
add
xchg
adc
adc
jae
lahf
cmpsb
fmulp
ficomps
add
mov
jecxz
clc
in
sub
lahf
cmp
mov
insb
push
jmp
jmp
fsubrs
cmp
sub
xorl
stc
and
pop
mov
cld
cld
and
adc
std
dec
fcmovnbe
push
pop
jle
sub
lea
push
jnp
stc
pop
out
push
in
dec
sbb
xchg
push
iret
maxps
std
lret
sbb
sbb
popa
xor
jle
shrb
mov
scas
mov
add
push
lcall
stc
or
ds
mov
jb
popf
setge
pop
mov
aaa
mov
jl
lcall
pop
les
fdivs
dec
adc
ja
mov
jbe
cmp
les
sahf
les
movl
jne
xchg
lock
mov
mov
and
dec
mov
sub
stc
xchg
dec
or
or
outsb
shrl
popl
shl
iret
daa
and
mov
dec
paddw
ja
test
lahf
push
pop
repz
pop
mov
cwtl
jp
and
mov
pop
adc
sbb
pop
ret
mov
mov
mov
and
mov
aad
lret
dec
sub
test
daa
stos
cmpsl
mov
scas
mov
pop
out
push
push
mov
inc
dec
pop
pop
mov
fbld
add
xor
dec
xor
shlb
push
sbb
repz
loop
xchg
xor
mov
or
xor
inc
push
xchg
icebp
enter
xor
dec
nop
pop
div
add
inc
push
jmp
sub
inc
xchg
pushf
notl
add
icebp
mov
dec
mov
rclb
push
inc
mov
ja
inc
insb
stc
adc
mov
pop
mov
test
add
xchg
clc
jmp
insl
sbb
insl
movb
movsb
xchg
add
stc
pop
repnz
pop
leave
fcoms
shl
sub
or
add
repnz
mov
mov
pushf
mov
mov
imul
sbb
cmpsb
fwait
xor
add
xor
sbb
or
out
push
pop
cmc
inc
add
xor
push
and
ret
or
jecxz
push
repz
cwtl
movsl
jl
mov
or
sbb
add
test
movsl
rcll
sub
push
insl
fadds
add
push
xchg
fwait
sbb
addb
pusha
rol
nop
jg
adc
sahf
out
pop
test
adc
push
push
xor
cltd
cmp
jo
mov
addr16
adc
mov
mov
cmp
enter
insl
pop
cwtl
pop
push
ljmp
inc
leave
mov
add
shll
sub
sbb
push
in
insl
enter
notb
or
test
cmp
enter
ds
repnz
clc
or
sbb
sbb
loop
shlb
or
in
sub
enter
dec
mov
mov
add
arpl
push
test
jo
mov
roll
jmp
test
adc
ljmp
add
pop
xor
nop
add
dec
add
mov
fcmovb
push
or
enter
add
sbb
mov
pushf
sbb
lea
outsl
ljmp
dec
cli
and
xor
idivb
mov
add
and
adc
in
stc
cmp
das
cltd
xchg
adc
shll
sbb
mov
pop
xor
inc
push
cmpsb
jmp
test
push
scas
lcall
mov
push
xchg
xor
call
cs
sbb
or
adc
dec
xchg
adc
stos
shrl
into
dec
mov
sub
mov
orb
sbb
add
movsb
jbe
pop
ret
push
or
jo
sbb
and
gs
jle
push
aam
pop
sub
add
movsl
mov
js
insb
lock
mov
xorb
push
xorb
push
out
dec
xor
pushf
stc
add
inc
jmp
insl
out
or
adc
lea
fisubrs
sahf
ret
ds
jnp
xchg
mov
xor
cli
push
push
lods
push
and
add
cmovae
scas
push
or
inc
inc
div
jne
test
cmp
out
dec
pop
or
in
mov
inc
cli
sub
adc
xor
sbb
dec
aas
xor
mov
inc
push
push
push
xor
out
and
inc
fstpt
leave
pop
mov
dec
rclb
add
jge
dec
sub
and
imul
jmp
pushf
imul
ret
mov
shll
dec
sub
mov
xchg
push
mov
das
lret
js
ud0
aaa
cmp
and
mov
mov
adc
rorl
sbb
push
mov
mov
mov
addl
inc
adc
pop
xor
xchg
lds
jbe
mov
xor
add
pop
dec
pop
js
into
pop
ret
xchg
and
jb
xchg
mov
loopne
dec
sub
fadds
nop
adc
and
mov
dec
adc
adc
movsb
movsb
add
and
and
sub
add
mov
mov
add
fadd
es
adc
call
dec
mov
pop
dec
and
test
add
bound
inc
lds
dec
mov
add
stc
adc
mov
or
jno
or
lahf
add
repnz
mov
pop
pop
jmp
mov
dec
insl
arpl
sbb
xor
les
ret
nop
add
sub
cmpsl
paddb
into
mov
or
sub
or
sarl
xchg
lds
loope
xchg
xor
cmp
and
dec
rorl
sbb
cwtl
add
addb
xchg
and
lahf
rclb
scas
nop
xchg
clc
and
xchg
push
roll
ret
es
mov
push
pop
call
push
bound
scas
mov
cmp
sbb
into
and
icebp
vrcpss
xchg
inc
xor
lock
mov
bound
sub
adc
add
cmp
jp
loopne
add
xchg
or
xchg
sub
leave
cwtl
sub
add
fisubl
in
movsb
movsl
imul
leave
xchg
fidivl
inc
mov
leave
add
nop
fwait
mov
jl
dec
jo
mov
ljmp
testb
ja
or
leave
test
inc
sbb
adc
sub
and
shlb
adc
das
aas
movsl
fdivr
adc
loopne
into
inc
sarb
out
or
es
gs
stos
add
jecxz
sbb
add
cs
sbbb
dec
cmpsl
ret
add
sbb
nop
cmpsb
pop
mov
into
sbb
pop
mov
pmaddwd
sbb
add
mov
call
sub
enter
aad
add
cli
adc
inc
sbb
or
mov
push
xchg
mov
xchg
inc
in
pushf
pop
cmp
outsb
pusha
or
dec
pushf
cmp
cli
or
or
call
sbb
sub
sbb
rolb
xchg
xchg
inc
pop
adc
and
jecxz
shll
mov
iret
pusha
adc
jg
jo
xchg
or
aam
sbb
outsl
andl
movsb
or
sub
mov
dec
test
cs
push
sbb
push
mov
cmp
dec
xor
setno
xor
or
ret
insb
cli
push
xor
sub
sub
push
into
lock
mov
jnp
add
mov
add
pop
mov
sbb
dec
jmp
adc
adc
xchg
jo
adc
xchg
adc
sbb
sub
pop
mov
dec
iret
sbb
call
adc
dec
or
and
pop
rolb
outsl
neg
leave
mov
add
mov
out
adc
mov
stos
xchg
or
test
xchg
pand
sub
pop
mov
push
or
sub
out
add
inc
jmp
dec
leave
es
cmp
inc
xchg
leave
pop
int3
adc
call
adc
pop
inc
push
inc
mov
rclb
cli
jno
mov
mov
and
or
les
push
and
xor
leave
not
jo
adc
mov
add
insl
xchg
and
xor
push
outsl
dec
les
mov
aad
and
sub
pop
dec
ret
dec
lods
shrb
flds
xor
loop
mov
adc
jo
xor
sub
mov
pop
gs
mov
shr
cmp
outsb
jo
push
or
ljmp
repnz
or
inc
jp
push
cmpsb
fimuls
lock
les
xchg
adc
or
sbb
popf
sbb
inc
xor
pop
push
mov
int3
xor
ss
aam
daa
test
fdivs
rcr
push
mov
rorb
mov
cmpsb
mov
add
add
icebp
or
mov
or
das
addl
icebp
inc
idivb
xor
call
loope
insl
push
mov
mov
sar
adc
dec
js
push
dec
call
jb
inc
rclb
sub
push
mov
ret
inc
repnz
roll
icebp
hlt
jns
daa
inc
xor
sbb
pop
js
or
enter
mov
mov
and
adc
call
inc
push
cmp
xchg
add
rorl
cli
rclb
inc
mov
mov
nop
dec
sbb
je
popf
xchg
or
popf
mov
ret
clc
js
rorl
inc
sbb
cmpsb
imul
shrl
push
rclb
mov
cmpsl
mov
mov
mov
inc
push
mov
adc
xor
dec
mov
xchg
add
or
inc
fs
xor
sub
push
repnz
and
repnz
and
cmp
push
mov
movsb
sarl
dec
adc
lods
pop
xchg
dec
leave
adc
mov
ss
sbb
xchg
dec
adc
xchg
mov
xor
pop
jl
int3
cs
imull
adcb
and
mov
leave
ja
and
icebp
sub
adc
les
shl
das
or
fs
pop
adc
es
es
pusha
test
inc
movsl
and
nop
ficoms
mov
xor
movsl
leave
lds
mov
add
sarb
jge
adc
or
aad
adc
push
adc
clc
or
ret
adc
sbb
adc
movsb
add
pop
test
mov
fdivp
sar
repnz
lds
xor
jne,pn
pop
push
xchg
or
and
ljmp
sbb
jnp
int3
cmp
mov
push
daa
push
test
jae
clc
rclb
ljmp
lcall
lods
insl
test
xchg
test
inc
inc
jp
pop
push
es
movsb
and
push
inc
add
cmp
xlat
data16
adc
dec
pushf
jmp
sbb
or
or
test
cmpsl
movsl
adc
mov
in
out
mov
jb
rorl
out
dec
dec
ret
clc
orb
push
add
scas
push
mov
mov
mov
xchg
push
or
hlt
dec
jp
jns
popa
sbb
mov
imul
sbb
in
jp
sbb
cmp
xchg
inc
pop
ror
loop
mov
cmc
mov
js
and
lret
test
ret
dec
mov
test
loope
repnz
pop
cltd
mov
dec
nop
and
and
rcrl
sbb
or
ljmp
push
int
adc
and
or
push
dec
mov
addb
xchg
push
shll
int3
jno
jno
popa
jb
sar
dec
ret
adc
pop
dec
push
lret
iret
nop
loope
add
inc
xor
pop
cmpsl
jo
mov
xorl
popa
xor
loopne
adc
dec
lret
pop
es
lret
pop
cs
push
cmp
inc
sbb
roll
rcl
loopne
lods
xchg
fs
and
shlb
int
xor
pop
fcoms
dec
jmp
xchg
jp
jno
test
bound
sbb
adc
das
cltd
mov
add
inc
stc
mov
and
cmpb
mov
rcrb
xor
je
mov
pop
je
ds
xchg
je
cmp
mov
mov
dec
test
jo
jo
xor
rolb
pop
pop
lret
push
jmp
mov
loopne
decb
test
and
xchg
and
push
in
cmpsl
enter
js
sbb
push
xchg
mov
nop
fdivr
movsl
sbb
pop
jmp
adc
rcrl
enter
pop
andb
shr
or
jo
or
aad
dec
pop
add
leave
or
mov
sub
sbb
icebp
movsl
leave
aad
outsl
lret
pop
shlb
sbb
or
jl
loopne
popf
jo
sbb
call
sbb
pop
cmp
pop
les
add
xor
cli
and
or
pop
repnz
and
leave
jle
sub
or
or
stos
dec
je
ret
fsubr
call
dec
mov
das
mov
imul
testb
movsl
mov
push
mov
stos
jne
ret
sbb
out
or
dec
lea
test
push
push
sbb
int3
pop
sti
cmpsl
test
les
push
pusha
push
push
pop
lds
mov
jp
dec
rol
lsl
ret
js
out
push
sbbb
sub
arpl
mov
rorb
push
cmp
aad
or
cli
mov
or
test
inc
sub
xchg
adcb
mov
sbb
sarl
jmp
inc
adc
lret
fwait
hlt
hlt
pop
pop
push
sbb
mov
fsts
call
test
sbb
push
ds
xchg
dec
ss
add
inc
adc
or
and
sbb
test
mov
or
cltd
fs
mov
pop
imul
in
jmp
sbb
or
mov
xchg
inc
cmp
lods
dec
punpcklwd
xchg
push
shrb
mov
push
in
cwtl
and
rolb
sbb
ja
mov
popf
scas
popa
call
adc
add
fwait
adc
dec
icebp
inc
sbb
inc
popl
shrb
mov
xchg
lfs
pop
js
dec
dec
xlat
cli
adc
xor
iret
leave
lods
pop
into
orb
dec
sbb
js
daa
mov
pop
lods
fdivp
jl
add
sub
xor
es
cmp
dec
adc
adc
push
fsubs
lcall
icebp
je
adc
pop
sbb
push
or
xlat
jns
lods
int3
das
loopne
push
or
test
test
mov
pushf
ret
jo
pop
or
jge
adc
inc
or
clc
push
add
xchg
clc
adc
shrb
nop
ss
mov
inc
cmp
or
pop
int3
test
dec
andl
push
sahf
adc
or
sbb
jbe
push
or
cwtl
sub
sub
stos
sbb
cld
xorb
push
sbb
xchg
inc
ret
addb
lea
push
mov
ret
mov
mov
mov
xchg
xchg
shlb
shr
loop
and
ret
fwait
in
and
adc
push
sbb
xchg
adc
sub
in
pop
mov
imul
add
scas
iret
lock
rol
add
or
pop
cltd
add
mov
push
aad
call
cmp
dec
outsb
sbb
fdivs
or
subb
ret
dec
popf
mov
fs
fbstp
data16
push
fwait
dec
xor
pop
add
es
jp
mov
push
fists
mov
push
jle
repnz
in
pop
and
jecxz
mov
ud2
push
add
inc
mov
dec
xchg
mov
test
shlb
cmp
sub
pusha
mov
sbb
push
sub
pop
xchg
leave
sbbl
addl
push
mov
xchg
xlat
push
pop
and
lods
out
sbb
mov
push
mov
push
xchg
jb
jg
cmp
push
stos
enter
sbb
xchg
xchg
jns
in
adc
in
push
es
lret
pop
pop
inc
sbb
int3
push
lock
adc
mov
clc
cmp
and
rorb
mov
rorl
bswap
dec
mov
ret
imul
add
adc
dec
ret
and
clc
adcb
or
push
pop
popf
shlb
xor
mov
popf
pusha
inc
push
pop
shrb
xor
pop
jp
add
gs
xor
xchg
add
sarb
mov
iret
jp
dec
inc
pusha
xchg
fdivp
inc
inc
mov
mov
nop
lcall
cmp
in
cmpsb
aaa
inc
cmc
rolb
pop
dec
add
les
outsb
or
imul
dec
fisubs
push
test
inc
jnp
mov
adc
mov
jge
dec
and
or
or
adc
add
daa
lcall
dec
je
popa
push
or
cmp
jp
ret
pop
xchg
jbe
adc
adc
add
lret
xchg
pusha
adc
das
loopne
dec
xchg
sbb
dec
inc
cmp
test
jb
sbb
push
arpl
ljmp
fs
pop
dec
leave
xchg
adc
nop
addps
push
adc
or
sub
xor
or
push
es
sbb
lock
pop
mov
sub
push
push
lock
imul
inc
add
aam
xor
mov
dec
imul
pushf
orb
shlb
adc
notb
cwtl
cmp
cmp
or
shll
popf
les
pop
inc
cmp
nop
and
push
sub
xor
mov
jecxz
push
les
mov
add
incb
add
aad
dec
test
dec
add
inc
mov
sbb
sbb
xchg
sbb
add
xorb
mov
stos
je
lock
push
add
or
dec
xor
add
out
into
dec
add
pop
fisttpll
pop
scas
sub
shlb
pop
js
adc
insb
rcr
sbb
rclb
lock
or
xor
mov
xchg
xor
es
sbbb
rcll
or
mov
and
xor
fdivs
sbb
addl
xchg
jb
sbb
pop
or
fiadds
adc
xchg
insb
push
sbb
lods
hlt
add
stos
adc
xor
cmpsl
sahf
cmc
inc
setle
movsb
fdivrs
xor
loope
mov
movb
mov
ror
adc
push
lcall
fisttpll
xchg
jo
xorl
lds
and
sar
fs
imul
and
cmp
mov
shlb
js
sub
adc
adc
mov
rorb
pushf
pusha
call
mov
push
jb
mov
sbb
sqrtps
pusha
cltd
jmp
sahf
sbb
repz
movsb
push
xor
push
lock
pop
dec
push
sbb
or
push
cmpsb
repnz
mov
jnp
xorb
jg
and
mov
imul
push
hlt
mov
out
pop
adc
add
add
ljmp
addb
push
add
cld
jbe
jecxz
rdpmc
enter
test
dec
int
shl
test
push
movsb
push
cs
sbb
or
pop
and
cltd
loope
or
or
adc
ret
inc
and
loopne
lcall
cwtl
and
sbb
sub
xchg
push
test
cmpsb
pop
lret
dec
lcall
sbbl
xor
orb
lods
push
stos
adc
push
je
dec
dec
inc
lcall
mov
popf
xlat
subl
das
fwait
cmp
mov
arpl
adc
xchg
shlb
or
xchg
pop
call
sbb
push
enter
jo
int3
shll
pop
xlat
and
mov
leave
push
push
pop
add
loope
or
loope
ljmp
adc
dec
or
cs
roll
and
push
pop
addb
cli
or
jb
leave
xchg
nop
sar
or
sbb
ljmp
dec
repnz
push
sbb
mov
out
adc
pop
inc
push
pop
inc
pop
lods
or
push
and
es
daa
imul
sbb
out
mov
aad
mov
rclb
int3
or
xor
mov
lock
xor
or
and
mov
sahf
enter
dec
rolb
mov
push
xchg
addr16
repnz
imul
inc
subl
pop
dec
jp
fdivl
pop
add
nop
cs
cmp
inc
xor
or
sbb
sbb
sbb
pop
adc
mov
push
fldl
iret
push
and
cli
or
xlat
addb
js
mov
shlb
or
fisttpll
in
rorl
loope
and
xlat
lock
xchg
add
imul
cltd
daa
xchg
pop
add
fsub
lret
imul
sbb
push
adc
mov
jle
mov
ret
cli
into
arpl
xor
ds
push
push
pop
jmp
and
mov
je
inc
pop
adc
jp
lea
or
push
sbb
or
dec
xor
and
and
cmp
cmc
inc
and
mov
or
or
sbb
mov
or
loopne
adc
or
enter
ljmp
sub
or
loope
pop
fdivp
scas
xor
shrb
add
subb
or
arpl
outsb
scas
push
xor
insl
fs
sarb
fs
push
jno
xchg
fldt
or
rclb
fs
jge
rolb
jb
xor
add
sbb
cmp
pop
ret
xor
out
sbb
icebp
push
jne
movsb
xor
and
and
addl
sub
and
fildl
rol
sbb
enter
and
call
lock
shlb
adc
push
inc
aaa
or
mov
inc
bound
insb
loope
dec
pop
xchg
das
ss
ljmp
push
xor
sbb
adc
or
jp
mov
out
out
loopne
mov
ret
into
push
out
and
leave
push
jb
and
push
ret
add
jmp
cmp
pusha
js
sub
ss
shll
lods
pushf
icebp
mov
jecxz
add
or
mov
ret
cmpl
scas
pusha
test
adc
mov
mov
or
sbb
cld
sbb
mov
imul
sbb
jno
push
push
mov
cmpl
sub
dec
outsb
sub
test
mov
daa
pop
lret
bound
and
bnd
xor
cmp
jbe
jo
or
xor
push
outsl
sbb
ficoml
and
jne
adc
push
add
jo
push
mov
call
bt
adc
je
push
ret
cmp
sbb
mov
inc
cwtl
or
icebp
ret
cmpsb
cmp
sbb
ss
cwtl
jmp
mov
scas
inc
push
adc
loopne
lock
sub
iret
shl
jo
test
les
push
or
mov
shrb
mov
xchg
push
in
and
gs
push
cmp
push
mov
push
xorb
add
fstpt
inc
shlb
dec
mov
shlb
sub
aam
loop
arpl
cld
xor
ds
mov
ret
push
addr16
leave
inc
and
icebp
and
adcb
inc
movsb
or
push
sub
sbb
ret
sbb
leave
shlb
push
xchg
push
imul
sbb
in
lahf
push
adc
or
dec
xchg
jecxz
jb
sbbl
jo
fld
push
mov
divb
inc
sbb
mov
pop
daa
fwait
mov
xor
adc
movsb
addl
cs
xor
movsb
aad
loop
add
mov
inc
pop
repnz
mov
xchg
mov
pushw
cmpb
ficompl
sub
pop
cltd
aam
ljmp
mov
mov
aam
loope
sbb
shr
mov
adc
xorl
jl
mov
sbb
orl
xchg
scas
add
push
dec
inc
xor
jl
add
inc
sub
and
test
xchg
call
mov
add
ds
inc
add
sbb
jb
mov
fistl
push
daa
mov
fisubrs
push
xchg
imul
call
les
push
lahf
movsb
arpl
test
sbb
popa
inc
data16
cmp
xchg
leave
rolb
and
push
adc
rclb
enter
ret
loope
adc
xchg
dec
xor
nop
mov
mov
and
stos
jne
or
jmp
jo
and
bnd
jne
add
mov
push
sub
ds
mov
mov
xchg
mov
fwait
xor
cmpsl
cs
leave
mov
adc
loopne
mov
test
pop
inc
push
sbb
adcb
pop
or
lods
clc
sbb
jb
push
push
insb
pop
pop
insb
pusha
sub
push
xchg
cmpb
adc
daa
inc
sbb
enter
and
add
pop
pop
cltd
add
dec
je
add
add
sub
ror
shrb
jmp
sub
add
mov
in
cmp
mov
pop
xchg
push
mov
jo
mov
cltd
mov
addb
adc
dec
movsl
test
xor
hlt
push
xchg
repnz
jns
movsl
cmpsb
cmp
push
pop
repnz
and
mov
push
cmp
pop
or
inc
inc
rcrb
icebp
mov
cmpb
add
and
mov
adc
or
xchg
in
lods
int
pusha
lods
andb
dec
pop
mov
inc
and
cmpl
mov
and
cli
sub
inc
mov
ljmp
std
mov
dec
pop
sbb
or
sub
fcoms
dec
xchg
mov
lea
sub
xor
loope
sbb
jecxz
xchg
and
xor
sub
in
and
push
inc
lods
inc
ljmp
mov
imul
sbb
push
push
pop
add
and
call
add
xchg
rolb
xchg
push
jmp
inc
nop
mov
cli
das
adc
cmpsb
or
or
and
sbb
dec
outsb
and
dec
push
stos
and
enter
add
xor
sbb
cmp
mov
sub
mov
push
ss
pop
dec
or
mov
sbb
or
inc
movsb
xchg
sub
addb
adc
and
cli
add
jmp
sbb
dec
dec
cmpsb
adc
sbb
xor
addr16
rol
sbb
and
sbb
mov
dec
scas
movsb
add
add
dec
loopne
ret
push
mov
loop
es
push
and
je
xchg
xor
or
mov
xor
or
ret
out
push
movsb
rcl
popa
inc
stos
cvtps2pi
mov
maxps
adc
js
in
or
add
shld
lahf
les
loop
ss
mov
mov
sbb
sbb
sub
inc
je
adc
movsb
test
inc
xor
sbb
lods
jo
popf
adc
fistps
pusha
and
push
int3
dec
out
add
or
pop
enter
xor
xchg
cltd
cmc
push
shr
push
sbb
and
sbb
xchg
and
push
stos
add
push
data16
movsb
mov
push
xchg
pop
push
xchg
movsb
xchg
js
shll
rolb
inc
mov
lock
push
inc
dec
cmovbe
leave
enter
add
or
sbb
add
push
sub
xchg
repnz
mov
rorl
push
xor
roll
add
sbb
sahf
test
push
jp
lea
lret
cwtl
fisubs
push
inc
dec
jp
jmp
mov
lock
pusha
mov
cmp
rcrl
dec
loopne
sbb
pop
xor
test
nop
fildl
add
and
or
mov
shll
pusha
arpl
xchg
xchg
les
sub
mov
fisttpll
cmp
inc
and
clc
test
xor
shrb
inc
push
call
cmc
adc
mov
test
add
outsb
jno
mov
rorl
pop
jo
pop
jmp
and
les
stos
pop
push
cmp
sub
add
adc
into
mov
movl
jnp
sbb
imul
jl
and
mov
pusha
add
mov
inc
dec
fwait
adc
cmp
popa
cmp
ret
jne
dec
jbe
cmp
dec
inc
lock
pop
ljmp
inc
adc
lret
and
popf
daa
test
pavgb
push
adc
je
shl
mov
out
aaa
inc
add
mov
out
xchg
xchg
dec
das
push
nop
and
jbe
jmp
addb
fs
loop
push
push
or
lods
or
sbb
dec
sub
xor
xor
fldl
imul
std
cmp
call
jecxz
test
inc
fiadds
les
pop
popf
or
mov
and
and
orb
add
insl
jecxz
mov
mov
dec
and
pop
sbb
mov
cmpsb
mov
out
mov
jle
shlb
jb
or
rolb
stos
icebp
xor
and
add
cmp
inc
inc
adc
push
push
pop
rcrb
outsb
cs
push
sub
jbe
adc
add
xor
icebp
or
clts
cmp
adc
pop
push
gs
adc
inc
push
sub
inc
in
xchg
lock
movsb
pop
fsubs
pushf
mov
lds
icebp
sub
scas
add
push
xchg
mov
in
aad
xchg
adc
pop
jnp
push
mov
mov
icebp
push
dec
sarl
addr16
lock
and
stos
insb
in
fsub
in
add
inc
enter
je
call
inc
mov
inc
lods
lret
dec
popf
sbb
add
cmp
and
fstpl
insl
cmpsl
jmp
pop
pop
dec
movsb
adc
pusha
pop
add
loopne
push
addr16
inc
mov
push
pop
jno
jo
sbb
or
mov
jecxz
daa
add
pop
xor
mov
rolb
mov
fldt
push
xchg
ficomps
sub
inc
jecxz
ret
icebp
add
lods
rol
adc
cmp
aad
mov
ret
and
mov
push
lcall
mov
addb
or
inc
mov
leave
arpl
faddp
sbb
pop
in
add
and
push
loope
mov
inc
push
sti
mov
aad
and
add
adc
add
push
dec
xorl
adc
lahf
mull
fdivs
mov
push
daa
jo
inc
filds
mov
movsl
shlb
inc
addr16
or
pop
jp
test
sub
sbb
add
insl
call
and
test
test
into
in
push
add
mov
out
sub
jecxz
sub
mov
sub
jp
xchg
sbb
jle
mov
subb
clc
lods
movsl
pop
jo
xchg
mov
jmp
jo
enter
adcb
rcrl
repnz
stos
cmc
push
push
jmp
cmp
push
adc
jo
cli
add
adc
push
sub
shl
mov
push
cltd
inc
daa
cmpsb
xchg
loope
or
cli
clc
dec
sbb
insb
sub
or
mov
sbb
andb
mov
test
fs
mov
xor
sbb
mov
jmp
pop
xor
jo
pop
enter
or
sub
movsb
sbb
cmp
or
adc
mov
and
ljmp
call
dec
ret
lret
std
sub
daa
dec
stc
mov
jle
or
and
js
add
fstpt
or
xchg
or
loop
es
jl
cmc
or
aam
js
adcb
mov
add
and
sbb
pop
jle
push
mov
add
arpl
cmp
dec
mov
mov
mov
test
ljmp
sbb
sarb
mov
or
adc
cmp
adc
xchg
mov
mov
and
sahf
fildl
test
pop
cmpxchg
mov
xor
add
mov
enter
les
lea
shll
ljmp
or
js
shrb
sub
push
and
add
ret
or
rcrl
and
in
into
or
adc
cmp
fs
xchg
push
nop
dec
add
mov
fdivrs
pop
add
mov
jae
addr16
dec
sub
sbb
push
daa
loopne
or
dec
fisttpll
inc
stos
jbe
inc
or
adc
mov
sub
pushf
sub
inc
xorl
stos
mov
int3
add
inc
add
scas
cli
lods
mov
bound
jo
xor
icebp
mov
or
lahf
sub
stc
out
adc
jge
adc
and
popf
push
scas
into
add
loop
test
in
int3
imul
sub
loopne
mov
or
out
push
out
jb
lret
push
aam
loope
dec
or
cmpsb
xchg
mov
sub
dec
cmc
call
sub
jp
push
sbb
sub
add
mov
inc
sub
out
lods
adc
dec
push
pop
dec
pop
inc
shl
js
loop
pop
cltd
mov
mov
cltd
mov
push
pushf
xor
test
mov
push
mov
xchg
inc
mov
dec
mov
add
movb
ret
add
dec
gs
cmp
sbb
fcomps
lods
pop
popa
fcmovb
xchg
sbb
in
sahf
push
mov
xor
sbb
or
ljmp
dec
rolb
xorl
push
sbb
xchg
adc
je
adc
push
sub
ljmp
jo
inc
or
nop
jne
mov
clc
clc
xor
leave
movsl
rolb
test
jle
pop
or
sbb
jcxz
or
xchg
rol
and
sbb
stc
cs
dec
in
add
inc
outsb
or
in
cmp
and
or
pop
dec
sbb
test
add
add
sti
jp
xor
mov
sbb
es
push
jle
add
rol
shl
push
fs
mov
or
insl
pop
adc
sub
push
lods
ljmp
adc
sbb
test
adc
mov
nop
dec
sbb
push
into
test
lcall
adc
inc
sub
pop
out
jb
cmp
sbb
into
xor
push
add
mov
push
or
popf
cmp
or
gs
outsb
lock
scas
mov
out
and
sbb
push
lea
or
bswap
lods
or
outsl
sub
rcll
pop
xchg
sub
lahf
subb
sbb
push
stc
add
loope
outsb
ja
dec
push
pushf
mov
xor
push
ret
jae
push
rclb
lods
outsl
sbb
add
jnp
and
mov
ss
lods
xor
test
sub
lea
cmp
fs
in
leave
test
mov
lret
into
cwtl
lret
or
adc
mov
call
inc
lret
std
inc
dec
pop
xor
les
and
and
add
jo
xchg
xor
shr
push
push
outsl
xchg
je
mov
and
sbb
lret
rolb
mov
mov
push
add
mov
repz
test
movb
or
lret
xchg
data16
test
js
pop
je
outsl
or
pop
sub
xor
rol
test
sysexit
js
nop
sahf
testb
mov
push
mov
psubusw
ljmp
push
incb
and
cltd
xchg
xor
fwait
mov
js
dec
sbb
sbb
mov
add
mov
cmp
jecxz
lcall
out
add
rolb
cmp
test
adc
dec
dec
stos
scas
adc
jb
cmp
sbb
and
pusha
orb
lret
xchg
push
mov
out
lock
dec
xor
add
add
cmp
jnp
mov
or
mov
mov
int
push
inc
test
adc
jge
add
call
push
fld
or
ljmp
jo
pusha
jbe
roll
lods
sub
adc
in
test
subl
inc
pop
mov
inc
cmpsl
inc
add
add
dec
ds
adc
idivb
loopne
jge
shrb
lahf
ljmp
cwtl
mov
add
and
cwtl
mov
mov
insl
hlt
test
sbb
inc
push
rcrl
cwtl
insl
and
and
pop
into
jo
and
test
test
add
daa
fsubrl
xor
ror
lods
lea
ds
sub
sarl
mov
movsb
or
or
add
ljmp
sbb
sub
and
inc
mov
jo
adc
sub
sbb
push
and
mov
or
push
shlb
test
and
sbb
jb
add
fs
push
inc
push
push
fstpl
pusha
and
push
jmp
mov
mov
test
fcmovb
xlat
adcl
enter
cmp
dec
dec
push
mov
push
inc
js
and
jp
int3
lea
fsubs
lret
data16
adc
leave
lret
adc
or
mov
andb
es
mov
add
pop
pusha
jecxz
xchg
sbb
pop
mov
or
aam
aad
push
mov
sub
xor
xor
jmp
dec
imul
mov
inc
cmp
shrl
pop
cmp
sbb
and
sbb
ret
popa
outsl
test
lahf
insb
pop
push
sbb
add
xor
xor
popa
into
mov
push
xor
mov
and
sub
sbb
cltd
mov
js
adc
mov
push
pop
or
xchg
and
hlt
xchg
cld
cs
mov
out
test
push
mov
dec
call
dec
dec
inc
inc
inc
xchg
sub
mov
jle
mov
hlt
ret
icebp
mov
dec
push
adc
jmp
movb
sbb
sbb
add
pop
lods
sbbl
jmp
cmp
mov
clts
pop
or
lock
push
cmc
push
test
pop
adc
xor
sbb
jle
sbb
arpl
pop
nop
pop
mov
lahf
cmp
cwtl
jle
or
je
sbb
mov
xchg
orl
jnp
cmp
and
inc
nopl
push
jp
adc
sbb
sbb
arpl
cmpb
mov
adc
ja
ret
js
mov
xchg
or
lods
or
xor
lahf
nop
icebp
and
stc
movsl
or
push
ja
je
scas
add
sub
cmp
and
push
into
xor
and
adc
sbb
mov
pusha
mov
mov
or
pusha
test
aas
je
fs
sbb
les
hlt
jno
ljmp
mov
xor
add
leave
orps
into
xor
inc
xchg
data16
jo
lret
sub
and
cltd
imul
mov
sub
movsb
push
or
or
pop
inc
mov
xchg
in
xchg
and
inc
rcll
mov
ljmp
mov
outsl
inc
sub
in
push
rcrl
arpl
pop
lcall
add
dec
icebp
rolb
pop
pusha
xchg
mov
mov
xor
hlt
ljmp
iret
inc
sbb
inc
into
rorl
imul
pusha
mov
aaa
pop
jno
inc
movsl
xchg
mov
or
and
push
cmp
idivb
loop
ret
mov
rcrb
lock
sbb
mov
adc
jb
and
subb
jmp
lret
mov
test
ss
enter
pop
sbb
sbb
adc
loopne
inc
int
xchg
pop
movb
test
btc
jo
or
ret
sub
mov
sbb
sbb
add
adc
test
leave
and
sbbl
sub
push
lds
out
inc
cli
nop
add
push
xor
out
cmp
xchg
pushf
add
push
jb
mov
and
cmp
rclb
jb
lea
pop
das
icebp
fisttps
dec
add
mov
sub
shlb
pop
movsb
fnsave
mov
push
lret
outsb
add
in
fildll
jmp
pop
mov
daa
inc
sub
sbb
scas
or
xchg
pop
inc
push
and
mov
cmp
jns
cmpsb
out
movsb
lock
daa
imul
fmull
cmp
xchg
js
sbb
adc
pop
dec
cmp
xor
and
mov
sahf
fstl
xchg
icebp
sbb
and
and
add
jne
cmpsb
xchg
adc
adc
add
jae
shlb
cmp
cmp
dec
dec
inc
add
cmp
outsl
and
sahf
cwtl
fnstenv
cmc
mov
push
push
ljmp
test
ret
mov
pop
sbb
aad
xchg
movb
fcoml
sub
repnz
xor
popf
cmp
xchg
pop
push
ds
xor
imulb
test
dec
mov
stos
ds
gs
or
div
mov
pop
xchg
call
ror
mov
inc
les
dec
imul
inc
mov
jp
rclb
rcrl
xchg
push
gs
add
cmp
js
sbb
dec
xchg
mov
ret
and
adc
add
pop
ret
hlt
lret
add
or
sbb
add
lret
movsb
ret
xchg
scas
movl
roll
mov
ss
shll
pop
add
ljmp
nop
fiaddl
lea
push
push
addl
lock
xchg
jmp
sbb
adcl
inc
and
dec
sar
adc
inc
cmc
xchg
and
stc
out
mov
mov
dec
jbe
inc
xor
mov
mov
inc
mov
pop
pop
ljmp
cltd
test
ret
and
dec
pop
xor
add
mov
xchg
sarl
xchg
add
mov
mov
shll
pop
pop
dec
rolb
pop
adcb
adc
adc
pop
lods
mov
scas
sbb
mov
mov
sbb
repnz
inc
push
jg
movsb
into
push
lds
jo
jnp
mov
aad
xchg
push
mov
mov
push
rcrl
xchg
push
inc
enter
adc
pop
test
and
fnstcw
test
mov
aas
sub
inc
add
leave
dec
push
sbb
mov
xorl
mov
dec
sub
orl
mov
adc
cmp
and
pop
rclb
add
decb
adc
dec
cmp
hlt
push
push
add
pop
adc
add
fs
xor
push
xor
dec
push
push
nop
adc
out
test
test
sbb
and
call
fisubrs
outsl
fsts
xchg
ror
cmp
push
mov
dec
jmp
popf
or
mov
mov
push
lods
lret
and
cld
jmp
das
pusha
or
rcrb
dec
push
movsl
xor
xchg
xchg
or
sub
add
mov
loope
lret
or
sbb
xchg
leave
xor
or
or
mov
jg
cmc
je
imul
jp
cmp
repnz
inc
pop
shrl
and
rolb
les
jno
inc
into
shlb
jnp
add
pop
psubusb
mov
psubd
dec
cmp
lock
add
cmpsl
incl
shl
mov
mov
and
sub
inc
and
pop
pop
mov
dec
movsb
push
jl
push
or
jge
cmp
xor
sbb
clc
mov
sub
dec
adcb
adc
adc
loop
add
sub
sbb
push
pop
jmp
adc
dec
xlat
dec
inc
ss
jo
push
sub
pusha
mov
and
xchg
inc
push
pop
outsb
lret
rolb
and
inc
cmp
sbbb
mov
add
sbb
cmpb
xchg
addb
push
mov
jne
xor
pop
cmp
cli
rclb
push
stc
dec
jne
cltd
stos
lods
add
add
sbb
js
insb
inc
pop
lods
dec
mov
mov
inc
fxch
xchg
pushf
je
jb
mov
out
and
fs
ret
rorb
adc
mov
cmp
adc
jl
xchg
lock
addr16
cmovb
xchg
sbb
jb
adc
mov
stc
push
adc
inc
pop
sub
push
ret
add
mov
shlb
cmp
pushf
jbe
mov
lods
push
xchg
jmp
roll
push
pop
mov
sub
add
push
xor
les
outsb
lret
sub
std
or
rcrb
cmp
pop
sub
adc
ljmp
push
ret
mov
fdiv
and
adc
mov
jno
sub
jmp
in
mov
pop
mov
pop
cmp
mov
sbb
xchg
push
dec
movsl
fidivrs
pop
fisttpl
in
and
or
fnstenv
xor
sub
mov
push
or
jo
test
sbb
mov
leave
or
mov
inc
inc
cmpsl
sub
xor
test
dec
repnz
jmp
aaa
int3
inc
adc
jmp
sub
xchg
inc
xchg
jle
xchg
jmp
rol
jl
or
js
sub
data16
pop
aam
xor
stos
movsb
sbb
push
mov
cmp
add
scas
sbb
jne
mov
inc
pop
out
outsl
or
cs
insl
push
out
or
and
adc
shl
or
inc
lock
ret
mov
sub
adc
cli
ret
es
mov
xor
mov
gs
lods
mov
adcb
enter
mov
or
js
xchg
subb
jmp
nop
dec
mov
adc
or
popa
clc
les
push
inc
ljmp
pop
adc
xor
adc
push
sbb
aam
mov
jl
adc
cs
pop
ret
pop
nop
mov
xorb
add
leave
add
movsb
pop
clc
xor
ret
or
cs
mov
xchg
rclb
pop
dec
loop
pop
inc
xor
jl
cmp
jecxz
adc
xchg
aam
add
call
arpl
outsb
fs
push
test
xchg
lock
sub
divl
add
in
and
sbb
aam
or
push
lock
push
add
adc
dec
dec
pop
ss
mov
test
test
and
sbb
enter
cli
mov
jp
mov
das
add
cmpsl
mulb
test
gs
pusha
or
repnz
dec
mov
mov
jo
clc
xorb
les
mov
movsl
std
adc
or
xchg
sbb
push
push
xchg
push
test
je
xchg
stos
jge
sub
stos
push
js
clc
stc
fdivp
mov
out
xchg
movsl
sub
or
fld
enter
jno
inc
dec
push
daa
xchg
adc
arpl
jmp
add
mov
adcb
mov
lods
or
cmp
xor
push
cmp
rclb
sub
syscall
ds
xchg
mov
sbb
adc
mov
cmp
xchg
push
and
jecxz
icebp
icebp
lret
mov
mov
popa
call
mov
or
dec
push
dec
lods
xchg
adc
ret
xorl
adc
add
push
dec
push
mov
cli
cmpxchg
dec
adc
sbb
xorb
test
shlb
adc
adc
inc
inc
xchg
add
push
loopne
mov
into
scas
dec
mov
sub
sub
push
movsl
imul
push
pop
insb
pop
sub
jno
lret
push
jp
test
mov
enter
add
int3
fcoml
pushf
pop
cmc
shl
ret
andb
adc
dec
in
push
out
cmp
and
mov
nop
ret
rcrl
mov
lods
out
mov
mov
lretw
add
jbe
sub
or
daa
inc
jcxz
inc
add
test
push
dec
sbb
addl
pusha
ja
popa
repnz
aam
vpmacsdd
in
pop
xor
mov
pop
sahf
lret
sub
add
lods
stc
daa
add
xchg
add
jg
aam
js
sbb
mov
push
mov
push
pop
xchg
xor
lar
sub
mov
mov
sub
scas
pop
or
ljmp
xchg
push
xchg
fsubrs
dec
sbb
movb
mov
nop
cmp
fisttpl
inc
rcll
jns
inc
jl
cli
ret
test
inc
in
ret
pop
jo
leave
adc
xchg
mov
int3
and
loop
mov
xor
jno
xchg
mov
sub
push
pop
fcompl
mov
sar
or
dec
add
flds
les
add
xor
js
mov
push
test
mov
arpl
outsb
enter
hlt
cmp
push
sarl
mov
movsb
xchg
jecxz
cmp
mov
jp
xor
jno
sub
adc
mov
mov
add
mov
or
pop
jp
jle
sub
clc
nop
test
outsb
sbb
mov
test
nop
mov
or
arpl
dec
lcall
mov
movsl
xchg
adc
jge
lods
popa
xchg
mov
pushf
or
xchg
xchg
push
insb
fmul
ljmp
test
and
ss
sti
xor
sub
sbb
sbb
les
adc
jge
bswap
sahf
or
push
repz
adc
mov
std
ret
xor
xor
pop
loope
or
cmp
mov
mov
sbb
fcomps
push
sub
push
or
sub
or
push
adc
stc
sbb
dec
lods
je
pusha
lock
popa
lret
xor
add
xacquire
sub
sbb
addb
mov
jmp
rorb
dec
shlb
adc
xor
mov
movsl
and
push
and
xchg
outsl
push
aam
dec
outsl
adc
xor
dec
adc
cmp
sub
cmp
or
xor
add
sub
test
or
xor
cmp
rcrb
rolb
and
test
sub
inc
bound
sub
and
or
add
or
xchg
daa
or
adc
sbb
sarl
or
test
ljmp
aam
mov
dec
pop
and
mov
loop
and
cmp
aam
inc
aam
jno
fwait
dec
aas
adc
inc
pop
cmpsl
paddq
enter
sbbb
push
mov
movsb
popf
add
ljmpw
call
jnp
adc
mov
ljmp
call
hlt
lock
sbb
popf
negb
adc
or
inc
ljmp
push
pop
adc
dec
imul
xchg
sub
ret
js
loopne
dec
movsb
xchg
xor
into
sarl
push
mov
cmp
adc
mov
add
cs
sbb
mov
fs
stos
push
fbld
addb
cmp
movsb
int
add
xchg
sub
inc
rclb
add
sbb
sbb
mov
push
or
mov
xchg
push
push
aad
gs
sbb
pop
cmp
sub
pop
xchg
test
add
aam
add
push
add
mov
push
inc
mov
xlat
xor
push
sbb
scas
test
test
inc
pop
add
bound
adc
gs
or
jo
pop
lds
xor
mov
xor
cmc
push
mov
sahf
cmp
mov
cmp
sarb
pop
add
push
movsl
push
icebp
and
push
inc
ret
or
jl
or
adc
and
or
ret
mov
lcall
mov
xchg
xor
sub
shlb
add
mov
scas
les
out
cmp
mov
and
xor
icebp
cwtl
testb
jb
les
daa
sub
pop
mov
jne
rolb
mov
inc
lock
cmpb
jns
xchg
or
hlt
sbb
dec
stc
dec
jnp
sub
hlt
mov
xor
dec
and
inc
loop
clc
jb
orb
push
decl
addb
sbb
sub
andb
fmull
je
cmp
ljmp
pop
and
mov
ret
and
and
pop
pushf
mov
inc
mov
sub
pop
add
push
or
fs
shl
sub
xor
and
add
shrb
sbb
mov
push
ret
adc
and
adc
push
xchg
mov
bndldx
mov
movsb
insb
push
mov
sub
xlat
sbb
jge
dec
cmpsb
dec
xor
orl
inc
xorl
mov
pop
push
out
and
jo
cmpsb
rolb
xor
mov
popf
xchg
ds
mov
xchg
rorl
ret
test
sti
icebp
pop
sarl
adc
test
js
sbb
or
pusha
mov
inc
cmpsb
loopne,pn
mov
add
jb
ret
sub
mov
addl
nop
and
test
sbb
push
xorl
dec
aam
loope
mov
xchg
clc
push
mov
cmpsl
mov
imul
cltd
nop
sbb
add
lret
or
add
jecxz,pt
lods
lock
roll
arpl
push
inc
cwtl
bound
jo
adc
add
and
xlat
cmp
mov
xorl
mov
mov
cmp
popa
jns
lods
add
push
movb
lcall
movsb
dec
xchg
jno
das
push
rcl
inc
push
adc
jecxz
and
cmp
rorb
invd
pop
sbb
xlat
clc
sbb
push
out
or
mov
cmp
insb
pop
clc
fdivl
xor
and
repnz
adc
or
fsubs
inc
mov
and
push
into
mov
push
data16
rorl
xchg
mov
xchg
lcall
into
leave
or
aam
push
xor
aam
xorb
lock
orb
sbb
mov
test
ljmp
dec
mov
cmp
lea
out
add
cmp
and
or
inc
jmp
inc
cmp
adc
xchg
add
mov
and
mov
jmp
fdivrl
icebp
sub
inc
out
testb
sbb
int3
or
rcrl
or
aam
nop
hlt
and
lock
in
mov
xchg
adc
inc
test
es
out
adc
and
fs
movsb
outsb
or
popa
aam
sbb
mov
dec
orl
dec
add
test
scas
add
adc
sub
cmp
pop
leave
or
cmp
rclb
out
ljmp
pop
push
js
inc
fwait
and
aam
nop
push
fld
shlb
test
cltd
rorb
lcall
sub
sbb
fldl
sub
add
pop
nop
xchg
push
je
cmp
jo
insl
addb
loop
and
out
and
daa
mov
xchg
ljmp
xchg
pusha
jl
inc
xchg
mov
xor
push
or
jmp
xor
pop
ret
pop
add
xor
out
xchg
jmp
mov
dec
aam
dec
scas
or
dec
adc
inc
imul
or
lods
andl
xchg
or
int
adc
sbb
enter
stos
lock
incb
sbb
push
pusha
arpl
cmp
pusha
inc
fldenv
cmovg
jne
aaa
push
and
adc
sbb
add
pop
sbb
cwtl
or
jo
push
daa
shrb
push
mov
push
cmp
xchg
push
push
lret
aaa
push
je
sub
or
mov
test
dec
rcll
lret
insl
push
icebp
lock
shll
adc
push
je
lret
sbb
add
mov
jns
pop
cmp
out
les
leave
inc
out
sbb
pop
mov
sbb
or
sub
or
inc
stos
arpl
in
and
adc
and
lret
mov
xor
jp
jmp
or
adc
loopne
push
out
sbb
xlat
and
fmull
pop
adc
test
xchg
push
add
push
into
xchg
stos
sbb
sbb
loopne
cs
shlb
xchg
cmp
loope
or
gs
ret
test
test
ret
xchg
pop
mov
or
outsb
or
sub
jl
and
xchg
sub
ja
xchg
push
pop
dec
adc
adc
addr16
rcrb
pop
and
pop
addb
mov
inc
pop
push
xor
aaa
lcall
fs
clc
sbb
lret
sbb
lock
movsb
and
jb
pop
sbb
pop
push
mov
test
movb
push
dec
and
sbb
add
add
pop
push
xchg
mov
loopne
lret
movsb
xor
shll
pop
loopne
js
mov
dec
xor
and
dec
and
inc
or
mov
jno
out
xlat
cmp
sub
repnz
movsb
ds
lods
mov
lods
and
adc
cmp
ss
rclb
jmp
sbb
outsb
adcb
add
cli
shrl
lock
jno
mov
xchg
xor
data16
pop
dec
arpl
dec
pop
popl
bound
pusha
add
mov
ret
popa
push
fbld
adc
shrb
mov
movsl
shrb
jo
sbb
ret
mov
pop
ljmp
lea
call
inc
outsb
shlb
mov
sbb
lods
mov
rcl
ds
mov
popf
out
sahf
pop
cltd
pop
mov
add
pop
xchg
cltd
adc
mov
or
xor
xor
xor
pop
mov
and
nopl
movsl
xor
ret
push
adc
in
and
ret
mov
xlat
and
faddl
adc
sub
sbb
mov
test
dec
inc
sbb
cmp
xchg
dec
call
mov
adc
js
sub
ret
add
icebp
pop
icebp
lods
add
cmp
jne
adc
out
and
arpl
inc
shrl
add
in
cld
shlb
xchg
mov
lahf
es
ret
cwtl
test
daa
fmull
mov
xchg
add
shlb
lods
inc
sub
in
add
shr
ret
and
jo
mov
push
and
sub
xchg
add
sbb
jecxz
inc
sbb
mov
xchg
dec
add
add
or
dec
adc
roll
outsl
pop
ljmpw
mov
mov
or
ror
rolb
push
dec
lea
test
icebp
xchg
add
rclb
call
or
xchg
sub
lret
jne
pushf
loopne
lods
popa
dec
mov
rclb
out
adc
xchg
movsl
psubsb
adc
xor
addl
dec
sub
mov
add
mov
inc
jge
cmp
lock
aad
sub
and
cwtl
xchg
sbb
in
leave
add
xlat
andb
adc
sbb
mov
lret
pop
push
enter
adc
movsb
lcall
adc
sub
icebp
push
and
push
add
cmp
inc
or
and
lods
repnz
add
push
pop
data16
rcr
xchg
inc
xor
sub
cs
inc
inc
jge
jns
lods
push
das
addl
sbb
adc
mov
sbb
movsb
xlat
shll
cmp
loopne
outsb
data16
push
jbe
data16
xchg
add
adc
sub
lods
mov
orb
das
mov
sub
outsl
lret
test
dec
xor
adc
cmp
push
scas
dec
jecxz
rolb
pop
sub
or
icebp
stos
addr16
push
cmc
push
arpl
dec
in
jmp
dec
adcl
stc
or
cmp
hlt
jge
or
lock
adc
cli
pop
cmp
sbb
push
adc
and
push
enter
cmovnp
sbb
leave
in
pop
or
push
aaa
mov
jge
fnstenv
cs
inc
lret
add
mov
daa
leave
adc
and
jnp
push
sbb
jp
shrb
xchg
pop
xchg
sub
sub
test
insl
imul
sbb
dec
sub
test
push
sbb
loope
dec
mov
push
fmull
sub
pop
push
gs
mov
sahf
addr16
lret
loopne
inc
pop
test
sti
pop
mov
loope
jno
jo
jbe
lods
insb
ljmp
js
enter
daa
sbb
imul
andb
cmpsl
xor
add
jl
sbb
loope
mov
push
or
ret
and
shll
add
loopne
push
xchg
rcll
dec
pusha
sbb
inc
adc
lods
or
add
jo
or
push
das
jo
cmp
inc
cmpsl
bound
or
add
mov
push
inc
ret
je
into
pop
dec
cmp
aam
dec
sbb
fistpl
clc
adc
es
daa
pop
sbb
push
dec
and
push
sub
or
shl
icebp
add
or
subb
xor
and
add
filds
sub
fs
hlt
test
adc
daa
mov
out
fwait
jb
movsb
lods
xchg
inc
daa
add
cmp
leave
fwait
cltd
lock
call
or
shlb
test
add
lea
rclb
rorl
loopne
movsl
mov
mov
div
mov
enter
and
cmpsb
or
sub
ljmp
cmp
adc
push
cli
aas
ret
inc
das
pop
sbb
sbb
in
adc
xchg
jo
es
and
inc
sbb
adc
pop
aam
loopne
xor
divl
in
insl
cwtl
mov
fiadds
xor
ljmp
mov
inc
ret
hlt
rolb
dec
cmp
jge
gs
rcrl
sbb
xor
aad
fwait
mov
jns
and
or
and
mov
cmp
pushf
xchg
push
mov
rorb
test
cwtl
adc
or
xchg
push
iret
js
data16
in
jl
xchg
test
jo
pop
or
xchg
and
fbld
cmp
pop
add
add
movsl
push
ror
xchg
xchg
sbb
mov
xor
xor
add
push
xchg
add
jns
ljmp
dec
lret
push
ret
mov
loope
or
sar
mov
or
adc
xor
ror
mov
in
and
test
movsl
xlat
and
adc
fisttpll
jecxz
sub
outsb
nop
daa
xchg
push
mov
addb
pop
sub
pushf
inc
jge
mov
vmwrite
cwtl
in
jae
cmp
push
shlb
add
jb
sub
leave
sahf
sbb
or
scas
rcl
add
aam
test
pop
adc
cmp
mov
adc
sub
or
je
ror
adc
cmp
shl
adc
rcrb
inc
add
mov
adc
xor
test
rolb
jb
adc
and
mov
xchg
push
into
jbe
add
lods
ret
xor
fisubs
sbb
test
sbb
mov
adc
push
push
adcl
xchg
in
mov
add
push
add
or
or
lods
pop
mov
out
adc
or
lea
popa
adc
adc
negb
cmp
outsl
sbb
loop
inc
sub
outsb
in
leave
les
push
es
aam
mov
cmp
and
xchg
push
xchg
xchg
ss
xor
and
fdiv
mov
and
jmp
leave
lret
nop
mov
adc
jno
arpl
mov
out
jne
mov
sahf
pop
cmpsb
cmp
sub
jle
inc
loopne
mov
ret
lret
fadds
add
jge
aas
sahf
loope
push
iret
mov
lock
fdivs
shrb
jnp
rclb
lock
movsb
ss
mov
loopne
fisubs
rolb
mov
into
push
xchg
clc
mov
sbb
add
xchg
pop
ret
pusha
xor
sbb
mov
mov
mov
lods
lods
loope
or
mov
fsts
dec
pop
push
push
mov
in
sub
add
in
and
shll
inc
mov
and
aam
cmc
and
dec
fadd
add
int3
push
adc
and
adc
rorb
mov
push
dec
pop
xchg
add
sahf
out
js
mov
add
add
and
mov
sbb
inc
or
rorb
pop
ss
leave
outsl
sbb
mov
dec
jecxz
push
cwtl
adc
pop
or
imul
dec
fstpl
clc
pop
cs
cmp
les
push
insb
mov
pop
or
rorb
pop
add
push
mov
nop
push
xchg
xchg
insb
xchg
lret
dec
add
jno
mov
in
shlb
add
cli
nop
lea
mov
mov
or
adc
push
sbb
jge
lock
cmc
and
xor
inc
lea
push
pop
add
xchg
fsubs
fidivrs
mov
push
imul
inc
push
movsb
cmpsl
mov
jno
lcall
mov
fwait
and
mov
cmp
cli
mov
fistpl
loopne
xor
into
mov
fcmovb
push
mov
aas
lret
lret
xor
sub
push
sub
rcll
push
pop
fsub
sbb
enter
bound
add
cmp
rolb
push
pop
shrb
lret
mov
and
adc
notb
inc
sbb
ss
push
in
jge
push
add
add
ror
imul
add
jo
adc
pop
popa
aad
add
fadds
ret
dec
cmp
mov
fisubl
add
mov
bound
bound
dec
or
adc
mov
std
jns
nop
imul
andb
dec
mov
adc
mov
mov
add
inc
and
sub
xchg
pop
dec
cmc
or
xchg
push
out
aam
rclb
add
daa
xchg
jle
ljmp
mov
fucom
ljmp
in
pop
sub
fmuls
cmp
shlb
mov
js
imul
sarb
xor
adc
lock
lcall
dec
mov
and
cs
mov
inc
loope
mov
cli
adc
xor
xchg
gs
sbb
mov
pop
sub
jns
inc
push
ljmp
inc
imul
and
add
imul
adc
or
push
and
lcall
ret
or
jp
les
test
xor
push
sbb
dec
push
adc
adc
adc
sbb
push
pusha
icebp
xchg
and
push
outsl
cmc
loope
jns
or
popa
popa
dec
int
xlat
enter
or
xor
mov
jp
mov
xor
test
sbb
enter
jge
push
int3
jmp
lcall
lods
adc
pop
xchg
mov
and
push
pusha
andb
std
shl
mov
dec
std
mov
xchg
fidivs
lock
mov
aad
xchg
je
imul
jo
in
shlb
test
sarb
push
sub
cmp
movsb
aam
jne
push
jecxz
je
ss
cmpb
loope
xor
lock
fisubl
push
aas
dec
push
scas
xor
push
push
adc
pop
xchg
dec
outsb
ret
jmp
ljmp
add
jnp
jge
ret
lods
or
popf
shlb
xor
pop
aam
dec
cmp
cmp
mov
xor
lahf
cmpsb
or
jo
jmp
add
test
mov
adc
mov
inc
push
leave
lods
adcl
xor
test
jmp
int3
add
push
or
js
pop
dec
lods
push
or
adc
pop
int
movsl
sub
xor
rolb
notb
jo
mov
imul
sub
lea
or
shlb
and
cmpsb
push
xchg
hlt
gs
push
ret
and
dec
pusha
dec
and
mov
adc
aas
mov
and
add
inc
and
sbb
inc
sbb
xor
leave
loop
dec
mov
andl
inc
roll
ret
sbb
sbb
lret
adc
scas
xchg
jp
xchg
add
imul
rolb
push
imul
xchg
lock
jl
nop
les
pop
xlat
mov
push
stos
jb
xchg
pusha
fldl
jno
aam
js
inc
add
sub
sub
negl
and
mov
das
arpl
sub
push
sbb
push
and
inc
xchg
ljmp
mov
adc
inc
inc
pop
js
ljmp
lds
cmp
stos
addr16
cwtl
adc
sbb
mov
cmc
popa
xchg
sub
rcl
lret
inc
cmp
ret
mov
push
scas
xor
lods
inc
iret
in
mov
sbb
push
gs
rcl
clc
int
or
jp
mov
iret
add
daa
arpl
push
rclb
nop
xor
adc
lcall
js
pop
insb
adc
xor
jne
push
rcrl
enter
js
rolb
sub
adc
sub
dec
mov
imul
icebp
push
orb
les
insb
dec
sub
mov
pop
or
daa
or
js
test
sbb
cmp
test
gs
add
push
shufps
rorb
lock
int3
testb
arpl
imul
push
fstps
roll
hlt
shrl
dec
test
cmp
add
sbb
out
sbb
jmp
adc
inc
mov
sbb
stc
adc
mov
clc
push
sub
push
add
shlb
les
xchg
mov
adc
cmpsb
sub
lock
mov
mov
mov
or
add
adc
fimuls
filds
pusha
leave
pop
fdivrl
sbb
mov
cmp
stc
xchg
dec
shlb
adc
push
adc
pop
inc
data16
scas
sub
cld
insl
sbb
add
xchg
push
shlb
pusha
inc
lea
add
outsb
sub
or
dec
hlt
add
jo
pop
test
scas
addr16
rcll
sub
movaps
push
or
xor
pop
iret
call
inc
pop
add
adc
xchg
jae
loopne
aam
xor
add
insb
or
adcl
dec
push
lods
dec
push
add
add
sbb
or
dec
pusha
mov
xchg
push
push
and
lock
inc
daa
dec
scas
add
dec
inc
xchg
pop
inc
dec
add
and
push
loopne
jmp
fs
rcrb
xor
push
add
adc
add
in
mov
cwtl
out
cld
jmp
loopne
push
inc
jecxz
xchg
dec
push
leave
add
subl
push
sub
sbb
mov
sbb
stc
mov
push
jp
aam
mov
adc
ret
xor
inc
sub
or
add
sub
sbb
ret
jae
sahf
and
dec
cmp
lds
dec
js
nop
sbb
into
or
and
jle
push
inc
sub
xchg
je
adc
mov
add
push
shlb
orb
js
out
sbb
popf
int3
mov
adc
sub
add
imul
jge
aam
jmp
ds
and
out
mov
dec
std
ljmp
subb
pop
test
push
testl
scas
xchg
xchg
xchg
scas
loop
or
loope
add
or
and
aad
rorb
jne
bound
adc
enter
cmpsl
scas
mov
jp
repnz
stos
add
jg
out
rclb
aaa
inc
sbb
mov
sub
xchg
outsb
jle
and
and
inc
inc
inc
cltd
or
out
cs
sbb
mov
imul
orb
push
lods
aad
push
call
jmp
iret
or
outsl
pop
lret
ret
inc
outsl
push
inc
imul
xor
add
fldenvs
jl
or
jo
pop
lods
iret
sub
in
push
pop
mov
sbb
add
push
lret
add
inc
mov
xchg
mov
fcompl
add
pop
test
push
addb
cs
cwtl
mov
push
repnz
and
and
loopne
xchg
sbb
data16
lret
ret
lods
pusha
xor
or
roll
or
push
lods
lea
cmpsb
sbb
cmpsb
xchg
adc
cld
adc
inc
shrl
pop
js
ja
adc
pusha
leave
lret
mov
imul
flds
iret
test
ret
push
int3
adc
movsb
and
loop
es
sbb
movsb
sbb
lea
add
inc
das
sbb
out
loop
adc
mov
sbb
rclb
rcrb
sarb
lcall
lock
bound
dec
popa
icebp
shl
repnz
popa
mov
adcl
sub
lock
dec
sti
fdivrl
js
into
negb
cmpsb
mov
pop
scas
lods
inc
ret
enter
rcr
mov
dec
sub
sub
test
inc
sahf
fs
xor
ret
enter
js
lret
sbb
mov
movsl
dec
das
imul
xchg
mov
js
movsl
cmp
je
stos
cld
mov
js
rclb
push
xchg
das
shrb
add
mov
data16
mov
rcrl
mov
loopne
cmp
fidivs
shrl
stc
rcl
roll
or
movntps
fstps
inc
add
pusha
sbb
dec
mov
pop
jecxz
pop
add
insb
jbe
repnz
pusha
xor
pushf
lret
add
sahf
cli
push
add
or
xlat
push
jmp
daa
or
sbb
dec
insb
rclb
sub
dec
mov
sub
jecxz
cs
add
mov
pop
les
jne
sbb
loop
test
xchg
or
jb
ja
cmpsl
sahf
push
inc
and
dec
or
cmpsl
stos
subl
push
pop
mov
add
mov
and
adc
and
mov
cmp
orl
inc
test
add
loop
sub
pop
test
out
and
or
pop
fists
push
add
or
fsubrs
sbb
dec
loope
inc
loopne
out
push
ret
dec
add
call
push
pop
pop
lock
movsb
stos
idivl
leave
ret
arpl
es
and
jg
xchg
ret
mov
jae
shl
and
inc
push
dec
fstl
adc
add
cmp
rol
add
add
mov
rclb
leave
lcall
sbb
pop
mov
inc
leave
mov
clc
invd
pop
ficoml
bound
adc
inc
clc
leave
enter
and
pop
cmp
in
mov
and
add
pop
inc
xor
rcl
xor
add
dec
mov
test
icebp
cwtl
daa
loop
test
push
fistps
pop
fdivrs
dec
ss
pop
fdivrs
jae
rorb
test
pop
ja
ds
jb
xor
mov
sbb
xchg
shlb
mov
sbb
push
sbb
xchg
or
jbe
test
jae
insl
out
sub
test
push
sbb
rcrl
lret
push
pop
cmpb
subl
imul
mov
sub
adc
lret
gs
push
dec
ret
add
adc
sbb
repnz
addb
push
pop
push
fcoms
inc
cld
clc
aam
ret
call
push
sahf
bound
mov
mov
inc
popa
and
push
sarl
or
mov
xor
mov
push
sub
pusha
mov
icebp
inc
push
pop
or
addr16
push
sbb
sub
add
sub
test
xchg
mov
sub
divl
push
inc
and
shlb
dec
lret
mov
int3
imul
mov
rorl
adc
jge
pop
xchg
icebp
push
mov
sahf
xchg
mov
out
lret
mov
and
popf
mov
enter
je
xor
or
inc
mov
push
xchg
inc
ret
xchg
add
mov
pop
lea
push
or
jp
movsl
add
push
mov
mov
mov
inc
inc
xor
mov
cmp
sbb
sbb
mov
cmpsb
mov
les
xchg
add
or
mov
or
sbb
mov
or
leave
imulb
inc
daa
mov
sub
scas
aad
lret
push
sub
sbb
pop
or
jmp
inc
inc
adc
cmpsb
sub
fdiv
stc
ljmp
popa
or
shrl
outsb
loop
dec
push
push
and
testl
outsb
cmp
dec
dec
lods
xor
and
push
xchg
je
push
lret
push
std
lea
sub
push
scas
jecxz
pop
add
push
dec
ret
xchg
inc
pop
jmp
cmp
jmp
cmp
adc
xor
add
shlb
inc
or
mov
add
insb
jmp
cmp
inc
inc
push
test
insb
call
les
or
adc
imul
push
push
into
mov
js
cmpsb
sub
sbb
jbe
push
dec
push
push
xchg
add
xor
jp
rorb
psrld
dec
sub
inc
xorl
jae
push
jp
jae
inc
add
xchg
xor
aam
jb
mov
adc
mov
addb
xlat
jno
adc
aam
push
or
clc
adc
mov
fcmovbe
jae
into
cmp
sahf
dec
pop
cli
xor
hlt
fs
pop
hlt
fs
mov
xchg
movsl
into
pop
xchg
cmc
test
inc
mov
push
push
loopew
jno
loope
sbb
pop
sub
xchg
in
addr16
loope
stos
mov
popa
add
push
add
pop
aas
outsb
xor
mov
add
ss
adc
inc
pusha
and
adc
push
push
add
js
dec
cmp
sub
cld
add
shll
aam
mov
inc
test
sbb
insb
loopne
inc
mov
sarb
int
jl
pop
inc
pop
mov
mov
out
mov
xchg
ljmp
dec
mov
push
in
call
hlt
jb
lock
jmp
or
mov
mov
pop
or
jo
mov
inc
mov
sub
ljmp
dec
or
sub
dec
out
xchg
loope
jo
js
push
push
xlat
testb
add
inc
rcrb
adc
mov
sbb
lock
xchg
pusha
es
in
jb
dec
test
dec
nop
mov
mov
lcall
push
iret
jne
push
dec
mov
mov
repz
jp
mov
dec
mov
mov
mov
stos
shlb
xor
mov
test
addps
int3
test
lods
pop
xor
or
push
lea
imul
cmp
xor
imul
pop
adc
inc
lret
mov
lock
push
subl
inc
add
lock
inc
pop
cmpsb
push
sub
jmp
ds
xchg
scas
les
cmp
lods
lods
mov
popa
xorl
lods
enter
push
xchg
pop
and
repnz
sub
sub
cmp
loope
jp
sbb
xor
xchg
mov
and
sub
inc
xchg
jno
inc
inc
jo
push
xor
arpl
add
pop
cmpsb
nop
xchg
pop
mov
cmp
pop
mov
fisubrl
data16
push
inc
inc
or
adc
pop
lahf
or
xor
mov
fwait
sahf
lock
fwait
cld
adc
mov
popa
aam
outsb
movsl
jns
jmp
dec
add
cmp
mov
pop
or
cli
mov
jecxz
xchg
fs
xchg
jle
push
adc
bound
js
int
dec
xchg
jge
and
notb
cld
mov
jl
dec
addl
sbb
dec
dec
clc
push
repnz
pop
adcb
stos
xchg
pop
dec
jmp
push
or
pusha
ljmp
mov
repnz
dec
inc
loop
pop
push
rcrb
adc
fisubrs
xorl
xchg
pop
test
mov
push
js
pushf
popa
fmuls
rolb
or
jmp
jo
sub
mov
add
ss
movl
mov
xor
out
xor
dec
mov
sub
ret
adc
pop
outsb
mov
add
adc
aam
xchg
push
out
imul
repz
mov
ret
aam
and
xorl
lods
mov
mov
or
daa
test
add
hlt
orb
add
popf
hlt
rcrb
pop
push
mov
je
ret
or
xchg
xor
add
loop
test
sbb
and
adc
ret
ret
dec
or
ret
pop
stos
inc
push
xchg
sbb
xor
in
rol
jo
dec
aam
adc
leave
lock
loope
mov
pushf
add
xor
stos
or
pop
aaa
cmc
add
adc
sub
lods
inc
hlt
ja
loope
mov
cmp
and
aam
inc
clc
mov
jecxz
dec
fwait
push
ret
sar
test
out
and
push
ret
pop
call
rclb
pusha
cltd
sarb
int
fs
inc
add
add
ret
xchg
adc
push
js
loop
call
or
and
pop
adc
mov
inc
sub
push
ss
mov
lock
pushf
xchg
lcall
dec
cwtl
jb
inc
dec
repnz
mov
xchg
lods
clc
push
push
pop
sbb
sbb
incb
push
js
xchg
push
adc
add
inc
or
in
fadd
lods
push
push
sbb
add
jbe
call
je
or
xchg
aad
or
push
das
int
adc
and
inc
xlat
loopne
xor
push
push
lcall
loopne
daa
je
inc
or
bnd
jmp
dec
and
int3
rcrb
add
or
mov
add
aam
iret
mov
pop
and
push
sbb
xchg
roll
sbb
cmp
nop
pop
stos
aam
test
dec
cmp
xor
push
notb
add
sbb
mov
repnz
pushf
xchg
iret
and
in
xchg
movsl
or
lahf
sub
sbb
lock
jno
or
stc
or
lcall
sub
push
das
inc
popa
inc
fadds
dec
dec
jl
mov
inc
push
mov
leave
popa
in
arpl
rolb
jmp
adc
lods
pop
pop
inc
lods
adc
arpl
cmp
or
jne
xchg
dec
loop
xchg
add
idivl
cmc
jl
adc
or
loop
cmp
fs
inc
mov
and
pop
pop
adc
popa
xchg
dec
mov
xlat
mov
pop
scas
xchg
in
jbe
adcl
push
adc
out
outsb
lock
jo
mov
lret
and
dec
sub
mov
sbb
sub
push
rclb
inc
mov
scas
mov
sbb
adc
xor
cmp
insb
sub
rol
add
ret
jne
push
lcall
rcl
pusha
pusha
xchg
sbb
cmpsl
clc
pushf
mov
pop
xlat
dec
push
and
int
pop
adc
xchg
popa
push
lret
pusha
bound
adc
fisubrs
and
xchg
adc
bound
sbb
and
div
loop
test
add
ret
xchg
ffree
add
or
push
enter
pop
jno
adc
or
push
push
push
mov
inc
ret
xor
sbb
stos
add
incb
pop
cwtl
add
push
and
mov
push
and
es
clc
jge
sbb
daa
lods
push
test
mov
sub
push
dec
dec
cli
inc
sub
lret
test
add
imulb
imul
repnz
int
daa
loop
js
js
mov
rolb
test
js
and
push
ds
cwtl
mov
pop
mov
xchg
inc
and
adc
adc
cmc
add
rol
adc
imul
nop
js
push
jbe
push
fistpll
xor
or
sbb
scas
out
and
shlb
push
sti
cmc
adc
dec
into
push
adc
loop
mov
mov
jp
xorb
shl
fdivrs
add
repnz
mov
punpcklbw
js
and
enter
lods
jbe
repz
shlb
aam
data16
mov
adc
cmp
pop
mov
xchg
push
and
das
ret
jp
mov
mov
inc
stos
xor
movsl
push
outsb
and
add
or
in
lock
shr
lods
dec
xchg
or
pop
push
push
sub
or
inc
and
rorb
mov
dec
scas
jne
push
test
or
dec
addr16
push
sbb
test
xchg
dec
cli
inc
adc
dec
push
mov
call
ficoms
rolb
inc
setbe
xchg
sbb
inc
cmp
shlb
sub
or
adcb
out
sbb
test
xor
pop
pop
rclb
mov
out
enter
mov
aam
adcb
repz
dec
test
mov
bswap
jg
sub
das
in
and
daa
cmp
sub
xor
sbb
xchg
mov
je
mov
ret
push
and
adc
inc
addl
or
fs
dec
sbb
pop
add
dec
rcrl
cmp
xor
test
add
les
pusha
ljmp
jo
cwtl
dec
rol
rcll
pop
sbb
sub
aaa
add
mov
jle
push
movsb
pop
stos
scas
or
adc
mov
test
add
cli
adc
mov
into
adc
out
inc
insl
jmp
lock
dec
add
xor
fstpl
inc
dec
jo
lods
pop
ss
mov
or
mov
test
add
push
adc
movsb
outsl
pop
mov
sub
test
lock
hlt
lock
adc
inc
andb
dec
lock
stos
cli
inc
cmp
nop
loopne
test
loopne
rol
fiaddl
sbb
adc
and
loopne
cmovle
push
push
jp
rcrb
clc
fadds
shrb
in
adcb
roll
add
ljmp
jo
clc
pop
je
test
xor
jecxz
mov
into
add
ret
lods
inc
imul
aam
adc
movsb
ret
push
sub
adc
sub
push
mov
ret
loopne
rolb
add
out
inc
loopne
mov
dec
addr16
push
xlat
mov
mov
inc
sub
loope
loope
xor
movsb
xor
push
ffree
ljmp
add
mov
pop
xorb
jp
xchg
lods
std
out
loop
por
jbe
add
pop
or
pop
rolb
mov
add
loopne
dec
push
das
push
loopne
jb
loop
sbb
cmovbe
push
loope
mov
data16
iret
hlt
or
and
push
xchg
dec
adc
lcall
xchg
adc
jge
mov
push
or
jmp
sub
adc
add
jl,pn
movsl
cmp
mov
xor
jno
sbb
aas
mov
adc
xlat
xchg
add
add
dec
mov
pop
push
fs
bound
das
sbbl
into
mov
in
aam
mov
push
cmp
shrb
loopne
arpl
stos
loopne
bound
imul
cmp
pop
jns
and
pop
push
push
push
xchg
adc
mov
jno
movsl
inc
push
adc
inc
dec
push
and
jno
add
or
shl
and
mov
rorl
movsb
xchg
pop
test
and
inc
and
xchg
hlt
xchg
popa
xor
or
mov
daa
jmp
shlb
aas
sbb
push
inc
pop
les
lock
mov
inc
add
dec
inc
arpl
insb
dec
movsl
adcl
test
fdivl
out
ret
pop
jo
and
test
mov
or
adc
shlb
mov
rorb
mov
or
xchg
sub
mov
xchg
ljmp
sub
mov
push
add
lock
movsb
add
sahf
and
or
cli
pop
pop
push
push
in
sub
sbb
xor
push
cwtl
mov
aam
or
faddl
adc
xor
loopne
sbb
adc
test
pusha
and
or
pop
xor
cmp
and
dec
dec
pushf
fs
push
sbb
icebp
push
cs
push
test
and
shrb
xor
mov
into
stos
nop
inc
sbb
push
sub
adc
xor
scas
adc
mov
mov
ficoms
lock
jae
push
bound
jb
dec
ret
inc
bound
insl
push
das
or
mov
push
das
mov
push
dec
jl
xchg
add
sub
test
xlat
enter
inc
or
lock
sub
enter
or
rcrl
in
and
mov
je
jecxz
repnz
decb
inc
aam
movsb
inc
shrb
pop
call
push
into
lret
sub
push
or
dec
xchg
daa
and
cmp
inc
or
adc
mov
insl
or
decb
jmp
dec
jge
push
lret
push
xor
and
lea
mov
cmp
and
mov
jnp
mov
or
aad
repnz
jo
popa
adc
sbb
jmp
fidivs
les
mov
xchg
shl
mov
add
inc
or
jo
push
push
ljmp
xchg
mov
shlb
or
je
enter
dec
movsb
and
adc
popa
cmovae
sbb
dec
test
icebp
insl
mov
mov
xor
cmc
xchg
pop
scas
insb
mov
mov
lea
ficoml
xchg
inc
mov
inc
shr
rorl
pop
and
into
sti
cmp
jl
les
push
lret
push
fisubs
sbb
mov
in
test
fs
pop
scas
xchg
mov
jb
ljmp
fs
and
or
call
and
dec
addr16
push
faddp
subl
and
rcrb
scas
push
das
cmpl
push
add
pop
push
fwait
dec
fwait
sbb
or
adc
jmp
add
and
dec
pop
sbb
cmp
pop
les
fstpt
lret
repnz
rdmsr
roll
inc
add
data16
pusha
dec
or
les
lahf
jge
test
mov
add
or
in
and
adc
outsl
adc
cwtl
icebp
sub
mov
pop
pop
cmp
in
ret
push
add
and
dec
pop
add
negb
movsb
pop
adc
sahf
or
sarb
sub
push
mov
adc
or
push
adc
sbb
clc
mov
mov
or
daa
push
xchg
sbb
int3
sub
ljmp
outsl
inc
dec
lcall
js
rorl
jecxz
add
inc
lret
andb
xor
add
cmp
addl
roll
inc
pop
fmuls
sbb
sub
sub
or
insl
add
or
test
adc
das
pop
add
mov
fcompl
push
mov
stc
lock
aad
adc
push
adc
add
cmp
pop
jg
sahf
sbb
adc
pop
shrb
mov
shlb
sub
and
pop
enter
xchg
add
push
pop
jo
add
push
xlat
xchg
add
shl
inc
sbb
and
inc
add
push
pop
loope
push
pop
jmp
sub
sub
adc
movb
rorl
hlt
push
adc
and
inc
std
hlt
xor
test
pop
xchg
or
or
movsb
sti
lock
loopne
and
xor
push
cmpl
xor
jb
nop
sbb
movsb
mov
loope
loop
cld
test
ljmp
sarb
loope
or
jne
shrb
rol
push
sbb
aad
test
xor
fistpl
xchg
and
rcll
leave
mov
mov
addr16
andl
xchg
inc
adc
mov
pop
or
sbb
movsb
pop
adc
lock
pop
sahf
int
sbb
pushf
lods
iret
imul
add
mov
mov
out
ljmp
jne
sbb
or
movb
mov
cmp
popa
and
dec
or
fs
add
mov
dec
xchg
cmp
adc
pop
negl
aas
ret
xchg
and
arpl
push
mov
mov
mov
or
add
pop
or
lcall
pop
mov
or
pushf
aad
js
ret
mov
mov
xchg
and
pushf
pop
mov
test
add
cmp
push
add
sub
or
xor
test
xor
sbbb
js
adc
cmpsb
sbb
out
or
fmull
divb
and
push
xchg
sbb
or
sbb
sub
or
push
jge
and
shrb
pcmpeqb
mov
clc
and
sub
scas
push
rorl
inc
adc
xor
mov
mov
lret
dec
or
out
test
push
mov
dec
scas
push
mov
stc
adc
push
cwtl
ret
leave
or
inc
jge
xorb
pop
push
ret
xor
sbb
push
fstps
mov
xchg
xchg
sbb
fs
sbb
cwtl
ret
adc
xchg
xor
sub
imul
pusha
sub
das
test
movb
dec
sub
inc
imul
rclb
shrb
addl
dec
shlb
fistpl
sar
mov
or
int
xchg
ljmp
mov
mov
push
inc
lods
js
push
aad
mov
dec
loop
and
inc
mov
cld
mov
stos
inc
mov
dec
xor
dec
and
pusha
pop
or
mov
insb
adc
cmp
shlb
adc
adc
jge
lods
daa
sahf
sbb
mov
or
insl
xor
mov
jno
sub
ljmp
jp
aam
or
adc
movsb
fisttpll
das
add
mov
out
add
mov
dec
dec
add
dec
andb
ja
inc
test
sbb
adc
lods
orb
mov
add
movsl
adcb
movsb
into
js
inc
pop
add
xor
jle
dec
lcall
xchg
or
jo
loop
xor
inc
into
shrl
adc
push
inc
repnz
fsts
aad
and
push
rorl
scas
dec
cmc
cmc
shrl
fiadds
fs
loop
mov
ss
add
xor
inc
sbb
add
inc
inc
jmp
repnz
pop
out
cmp
push
repnz
push
pop
loope
shr
rolb
jp
mov
pop
or
fists
xor
adc
cmc
js
testb
movsl
je
cmpsl
mov
hlt
adc
je
push
push
sbb
lcall
fldcw
push
sbb
stc
xchg
adc
sub
cmp
add
xchg
mov
pop
mov
add
add
mov
and
nop
and
push
enter
mov
enter
sub
aas
or
sbb
js
pop
push
adc
xor
ret
push
push
ja
mov
enter
inc
xchg
mov
loopne
sbb
inc
add
rorl
insl
or
mov
shlb
gs
push
lret
push
and
pushf
xlat
pop
orb
dec
repnz
mov
nop
cmp
adc
sub
call
rclb
fs
or
or
xor
adc
lea
jmp
push
cwtl
xor
mov
fsubrl
or
cmp
cmp
ljmp
add
enter
xchg
and
pop
sub
add
adc
adc
jns
clc
or
dec
mov
xchg
cmc
or
xor
cmpsb
push
call
add
cmpl
pop
xchg
push
inc
and
sub
dec
xchg
rorb
rcll
test
lret
dec
push
cmp
fmuls
xor
or
cmp
mov
add
cmpb
addb
cmp
or
dec
push
ljmp
in
mov
stos
lock
inc
pop
xchg
sahf
adc
pusha
loopne
jne
dec
mov
adc
push
push
fimuls
push
push
adc
add
mov
popa
icebp
xor
push
lods
jg
ret
mov
cli
loopne
push
mov
fs
loopne
xchg
scas
sub
or
add
xchg
jb
pop
cmpsb
mov
out
das
lock
or
add
and
clc
and
jo
or
fwait
insb
rcrb
and
jb
rcl
int
and
add
mov
cli
adc
notl
outsb
imul
xor
test
loope
mov
inc
push
and
popf
adc
pop
ja
mov
xor
inc
adc
mov
loope
or
pop
mov
pop
das
dec
push
or
scas
add
in
add
nop
xor
push
mov
stc
jbe
jecxz
pop
mov
push
push
rcrl
jp
sbb
add
arpl
sbb
pop
xchg
push
cmp
adc
add
xchg
or
xchg
movsl
push
and
pop
setno
cmpsb
add
stc
rcll
xchg
in
call
add
insb
mov
cmp
xor
and
in
loop
xor
out
mov
jne
push
test
mov
out
mov
xor
aaa
cmpsb
mov
movsb
push
mov
lea
dec
xor
iret
test
sbb
lret
add
aam
xor
pop
mov
push
aas
xchg
call
push
outsb
inc
test
les
mov
inc
mov
adc
fiaddl
shll
or
fcom
stos
sub
jns
fs
xchg
adc
or
push
test
imul
iret
pop
pop
loop
adc
lds
add
shlb
cmp
popa
adc
aam
pop
fdivrs
shlb
jne
pop
lods
hlt
enter
test
aaa
out
adc
mov
sbb
push
cmp
push
adc
das
mov
pop
xor
sbb
leave
xor
xor
cmpb
xor
mov
push
shlb
cmp
femms
push
cltd
shll
lock
mov
xor
test
cmc
aam
addb
jo
mov
ret
dec
sbb
out
incb
mov
inc
rolb
popf
dec
mov
push
popa
push
cwtl
add
movsb
aaa
push
fsubrl
cli
sahf
rcll
jmp
cli
outsl
gs
loope
inc
pop
and
lods
int3
xor
or
pusha
ret
cmp
stc
lods
jno
loop
jbe
inc
aad
sub
movsl
out
sbb
fldcw
or
rcll
add
les
push
ret
push
test
test
dec
jle
jmp
push
xchg
add
lds
in
sbb
mov
daa
adc
stos
cld
js
imull
lea
or
push
adc
call
data16
rolb
mov
js
add
xchg
sarb
daa
fisubrs
jg
xchg
push
pop
sahf
and
in
cmp
sub
push
lret
mov
and
lods
mov
sbb
es
call
and
out
add
jecxz
call
or
lock
sbb
imul
jl
xchg
xchg
jno
dec
test
fildll
mov
mov
in
adc
push
dec
inc
pushf
sbb
pop
cmp
adc
pop
push
xchg
loopne
and
in
sub
and
es
and
inc
inc
fmuls
sub
js
lock
adc
jmp
addr16
push
sub
adc
movl
into
stos
mov
sub
add
pusha
rolb
jle
inc
add
jns
ret
insb
mov
lods
sub
ret
insb
xor
adc
popf
xor
rorb
jmp
add
dec
push
jle
sbbb
inc
add
and
inc
mov
dec
push
orl
icebp
loopne
cld
fldl
popf
hlt
adc
add
mov
sbb
sub
xor
shll
mov
ljmp
and
int3
adc
icebp
daa
das
cmp
add
adc
movsb
mov
xor
mov
and
or
shlb
lret
js
push
adc
mov
cmp
mov
pusha
lea
arpl
sbb
adc
add
and
cmpsl
data16
das
add
or
adc
xor
rcl
xor
lods
cmpsl
or
jle
ljmp
mov
cmpsb
mov
bnd
mov
xchg
dec
out
and
push
scas
adc
int3
sbb
xchg
pop
or
pop
addr16
pusha
mov
fcoml
stc
scas
addr16
sbb
dec
pop
out
push
jno
or
xor
push
enter
pop
and
jge
mov
decb
xor
pusha
imul
in
aaa
insb
and
and
pop
mov
nop
fidivrl
int3
mov
pop
cwtl
in
mov
pop
mov
jle
mov
shrl
out
xchg
pusha
call
aam
fists
and
add
pop
imul
or
cmp
sub
mov
popa
adc
push
leave
jg
imul
or
or
dec
cmp
xor
pop
jns
xor
das
pop
cmp
jp
int3
or
jno
and
xor
shrl
push
fmuls
push
push
cwtl
mov
jbe
inc
pop
sbb
fsubl
add
in
outsb
or
inc
pop
add
ljmp
mov
imul
and
mov
aaa
sbb
cli
gs
aad
push
and
push
iret
inc
mov
movb
dec
sub
stos
xchg
push
clc
insl
xor
icebp
cmp
imul
test
dec
dec
xchg
dec
mov
mov
xchg
in
and
orb
dec
pop
jbe
lods
mov
sub
push
mov
mov
adc
loop
repnz
and
mov
push
xchg
push
add
movsb
or
out
shll
stos
insb
pop
dec
xchg
or
or
xor
cmpsb
ret
imul
rcll
push
ret
test
cmp
add
add
sbb
scas
push
call
repnz
mov
or
pop
pop
mov
or
jp
pop
lea
es
xchg
sbb
cli
orb
shrl
add
pop
add
sub
mov
sbb
call
les
stos
mov
adc
add
or
adc
xor
sub
adc
imul
xchg
or
roll
xor
arpl
add
repz
inc
lret
movsb
hlt
add
or
in
push
lods
movsb
insb
mov
mov
nop
aaa
jb
nop
and
hlt
cmp
pop
mov
popa
xlat
xchg
sbb
sub
inc
call
inc
call
mov
push
dec
repnz
repnz
or
rcrb
stc
nop
mov
push
outsl
sub
xchg
add
mov
jecxz
dec
or
sahf
cmp
adc
lret
inc
shr
adc
adc
stos
arpl
inc
test
mov
fistl
sarb
sbb
push
rorl
rol
ds
movsb
add
pop
or
sbb
ss
lods
test
pop
bound
xor
or
lret
cwtl
xchg
ret
inc
repnz
mov
hlt
cmp
lods
xchg
push
jge
sub
and
dec
cmp
xor
xchg
pop
sub
movsl
fs
and
mov
cmp
add
jo
int3
xor
les
push
lock
rorl
or
push
pop
mov
test
arpl
outsl
rolb
and
add
movsb
jp
loop
imul
daa
das
lret
adcl
sbbb
sbb
adc
ret
and
dec
xlat
subb
lea
or
cmp
ret
xor
jecxz
mov
add
push
dec
sub
or
push
outsl
push
xchg
push
xor
in
test
mov
movsb
sbb
dec
sbb
ret
cmp
cmpb
jne
add
int3
dec
js
push
movsb
dec
and
pop
pop
xlat
pop
push
mov
push
lcall
inc
sarl
adc
pop
sbb
mov
rcr
icebp
hlt
clc
or
sub
into
push
jnp
pop
and
es
pusha
mov
inc
cvtdq2ps
sub
orb
roll
lretw
js
pop
fisttps
sub
adc
dec
mov
enter
pop
pop
mov
push
and
inc
inc
inc
enter
xchg
shlb
test
sub
jge
pop
pop
loop
popa
adcb
sub
fsts
arpl
cmpsb
fs
scas
or
xchg
adc
lock
adc
clc
lock
or
pusha
enter
push
mov
shll
lret
push
repnz
jo
inc
xor
addr16
adc
xor
mov
push
das
adc
jle
cmp
aam
je
cld
xchg
jne
and
cmc
sbb
in
mov
les
and
jecxz
fstpt
lock
push
push
jl
imul
push
repnz
test
mov
scas
arpl
cmp
mov
mov
push
jp
sub
or
xor
xchg
jne
cmpxchg
cli
inc
gs
mov
xchg
inc
mov
or
popf
mov
sub
push
pop
cmp
test
shlb
jmp
ret
into
nop
mov
jmp
lock
push
and
xchg
xchg
ret
lcall
ret
sub
enter
aas
hlt
add
pop
nop
ja
mov
push
xor
pusha
fsubrs
sub
in
and
pop
jmp
or
jge
ffree
mov
pop
les
pop
ljmp
sbb
mov
adc
movb
les
imul
ljmp
and
xor
adc
jl
push
xchg
dec
push
dec
mov
mov
push
pop
pop
dec
push
adc
loop
jl
adc
mov
jno
hlt
pop
sbb
mov
lods
insb
sub
cmp
jmp
push
add
int
hlt
cli
out
push
pop
loopne
xor
aad
imul
or
xchg
and
cmp
push
sbb
adc
inc
in
add
cmp
shr
or
jbe
pop
fimuls
in
and
push
in
cmp
or
pushf
push
loop
rol
inc
mov
xchg
adc
xchg
adc
pop
enter
or
mov
clc
scas
outsb
cmp
xor
adc
xor
test
mov
loopne
mov
or
data16
lods
adc
stc
sub
xchg
pop
add
push
ret
cmp
dec
or
sbb
rcr
mov
fldcw
push
mov
inc
mov
nop
sti
xchg
jecxz
sbb
adc
dec
or
in
shlb
iret
andb
or
or
andl
pop
ret
inc
mov
or
sbb
push
fdivr
or
push
push
fidivs
pop
mov
pop
cmp
xor
xor
sahf
or
mov
adc
jnp
insb
adc
mov
hlt
sub
movsb
ja
das
pop
or
mov
jl
mov
sbb
loope
jp
imul
push
sub
ds
int3
and
cmpsl
sub
sub
or
pop
sbb
sbb
jp
cmp
cs
or
mov
sub
jp
add
hlt
faddl
scas
push
fsts
sahf
and
dec
outsl
inc
and
cmp
hlt
adc
lret
xor
pop
scas
cmpsb
lods
and
testb
mov
jo
or
xchg
add
pop
subl
add
shlb
sbb
movsb
or
imul
cs
push
jmp
adc
imul
push
cmp
add
inc
mov
pushf
cwtl
sbb
orb
js
xchg
adc
sbb
jp
rolb
inc
stos
mov
or
add
out
addb
sbb
shl
sbb
enter
loopne
paddq
mov
sub
mov
adc
notl
dec
xchg
ret
xor
or
inc
lret
adc
add
sub
loopne
and
movsb
or
fldt
mov
es
add
mov
inc
loop
fsubr
mov
gs
mov
lret
mov
insb
dec
ja
mov
in
mov
popa
mov
or
nop
add
mov
push
leave
sbbb
or
dec
imul
inc
or
sub
add
rcrl
cmp
lea
enter
pop
adc
dec
out
lods
xor
push
inc
aam
repnz
insl
lret
icebp
adc
lret
adc
cltd
xor
addl
lret
loope
nop
mov
add
xlat
jecxz
andb
bnd
cltd
test
into
dec
jge
mov
sub
jecxz
jmp
arpl
add
xor
fisubrl
insb
inc
inc
push
lret
and
add
andb
xor
loopne
pop
xor
fs
add
xchg
loop
xorl
lret
nop
les
xlat
cmp
cmpsb
enter
sub
add
xor
ret
push
fistpl
or
lods
jno
std
add
je
push
cli
ljmp
arpl
cli
in
ret
lock
pushf
inc
addl
lea
dec
cmp
inc
adc
test
movsb
xchg
xor
and
outsl
pop
leave
dec
enter
mov
test
rorb
cli
pop
mov
jmp
push
jecxz
jp
sbb
bound
mov
adc
push
xchg
dec
rcll
cltd
lret
cmp
andb
push
stos
ror
subb
pop
sub
rcr
xchg
adc
movsl
mov
sahf
sbb
xor
sarl
or
add
popl
add
xor
leave
ret
push
icebp
addr16
jp
mov
push
add
mov
add
pop
push
push
push
mov
call
rorb
or
adc
mov
fisttps
loope
adc
cmpsb
ficoms
mov
sub
fisttpll
ret
or
and
idiv
enter
mov
adc
mov
clc
jne
xlat
jge
jo
xchg
insl
imul
mov
lea
push
push
sbb
testb
je
movzwl
out
jnp
jmp
push
pop
cmp
push
push
inc
adc
inc
add
mov
push
jge
mov
mov
or
imul
pop
ret
mov
cmpl
push
imull
je
add
and
arpl
in
jbe
mov
pop
dec
pop
dec
inc
pop
jo
mov
hlt
lret
fldenv
or
sbbl
adc
pop
add
ja
xchg
or
push
push
outsl
sub
sahf
loope
ja
int3
jne
cmp
aad
adc
fistps
mov
mov
mov
adc
and
lea
cmp
jb
mov
cmp
pop
add
xor
dec
mov
sbb
sbb
and
daa
xchg
and
pop
js
ret
subb
add
int3
in
fistpl
pop
adc
push
mov
jge
sarl
jae
loope
add
aam
pop
xchg
pop
adc
call
bound
push
insb
fstps
test
inc
lahf
jbe
mov
pop
or
add
mov
loope
pusha
or
pop
jmp
dec
loop
add
mov
cld
mov
mov
mov
fisubl
mov
mov
dec
mov
and
daa
lea
dec
cld
jle
movsl
jge
push
mov
inc
cmp
movsl
inc
cld
sarl
loop
cs
and
nop
dec
or
inc
pop
sbbl
pop
cmp
cmp
xchg
test
cmp
lret
push
sbbb
popl
push
cmp
jbe
push
xor
pop
mov
pop
pop
jmp
rcll
pop
std
inc
ret
jg
mov
or
jmp
inc
or
sub
pop
leave
aas
cmp
adc
push
lods
mov
ret
cmp
xchg
inc
sti
scas
push
divb
cmp
add
add
adc
cld
jae
cmp
jne
fisubs
or
cmpsb
sbb
shrl
xor
pop
pop
ja
call
jnp
cmpl
and
mov
inc
push
mov
adc
mov
pop
js
sbb
out
jmp
fldt
jecxz
ds
or
jbe
inc
sbb
ja
push
filds
jmp
xor
cmp
push
mov
mov
xor
dec
cmp
je
cmp
je
inc
pop
jg
pop
fistpll
pop
lea
call
leave
pop
fstpl
pop
cmp
mov
xor
mov
pop
cmp
push
push
jae
call
pop
inc
cmpb
and
cmp
pop
push
pop
js
arpl
push
pushl
icebp
in
pop
les
std
outsb
jne
pop
lcall
jbe
cmp
sub
mov
or
add
push
in
pop
adc
push
fstl
push
jb
inc
push
push
loope
je
out
xor
cmp
push
outsl
or
clc
push
push
cld
push
push
push
aas
or
mov
outsb
mov
mov
test
je
lods
inc
or
in
addr16
pop
dec
dec
xchg
imul
mov
dec
mov
cmp
mov
xor
andl
push
scas
pop
and
jge
movl
xchg
leave
xor
cli
aaa
add
mov
inc
out
decb
ss
mov
inc
cmp
sub
jecxz
shl
orb
add
mov
fdivrl
filds
pop
aad
into
sbb
add
mov
jmp
cmp
sub
std
sub
inc
lret
or
adc
push
aas
ror
jne
jne
dec
bound
jne
stos
ficompl
add
add
dec
add
sbb
decb
mov
hlt
push
jg
jne
inc
inc
jmp
and
sub
sbb
cmpb
fimull
cmp
jmp
outsb
or
xor
xor
sete
mov
jmp
rorl
es
inc
adc
push
pop
inc
fs
pop
bound
repz
cmpl
imul
cmp
mov
mov
push
aas
push
mov
addl
pop
je
loope
test
mov
andl
add
insb
pop
negb
xchg
lds
pop
dec
mov
push
jbe
fs
shlb
testb
push
xchg
cmp
xchg
divl
jmp
mov
mov
sti
cs
mov
mov
xchg
dec
add
cmp
sbb
adc
jne
or
loop
pushf
cmp
clc
sbb
add
push
dec
rcrl
xor
xlat
push
jmp
xor
mov
shlb
and
push
push
andb
xlat
outsb
jp
sbb
sbb
dec
pop
adc
or
push
pop
jne
fwait
push
roll
arpl
mov
stos
mov
divb
cmp
sti
or
sub
xor
push
popf
sub
add
imul
or
loopne
ret
push
jnp
je
lock
or
pop
pop
pop
xchg
lret
dec
sbb
pop
mov
jns
scas
jbe
cmp
sbb
mov
mov
and
jae
fiadds
andl
inc
add
and
or
add
mov
adc
in
shrl
cmp
mov
in
test
ja
add
mov
into
jge
inc
or
push
mov
cmp
stc
pop
mov
mov
pusha
push
push
inc
mov
cmp
mov
add
fwait
jl
jmp
mov
and
loopne
push
jl
or
cmp
test
jne
xor
rorl
push
push
inc
and
ds
rcrl
or
mov
rolb
enter
icebp
aaa
repz
inc
inc
cmp
jl
shlb
mov
cmpl
lea
jne
test
sbb
pop
pop
jo
jne
negb
and
dec
neg
sbb
cmc
sbb
clc
cmp
pop
push
loope
sub
xchg
leave
push
orb
jle
and
adc
jne
or
add
addb
add
dec
jo
jl
xchg
test
pop
xor
xor
mov
enter
jmp
insb
jp
mov
mov
and
ja
loope
insb
sub
xor
pop
sbb
mov
and
jmp
test
outsb
cmpsb
pop
pop
ret
sub
mov
add
jae
scas
mov
push
or
dec
int3
push
xchg
insb
les
dec
xchg
and
fidivrl
fldenv
adc
aam
mov
mov
xchg
fs
sbb
pop
sti
push
cmp
int3
mov
and
stos
rclb
fstl
clflush
push
movnti
enter
and
int3
add
jno
nop
mov
je
mov
mov
pop
mov
add
dec
dec
testl
push
je
mov
nop
adc
sbb
push
push
adcl
xor
and
adc
jp
cmp
lods
adc
fidivl
mov
dec
adc
jl
es
mov
out
ficompl
mov
jne
call
ret
popl
pop
add
shlb
push
fisttpll
jns
shll
push
or
push
or
push
fcoms
sbb
push
add
xor
out
adc
ret
inc
add
imul
cli
pop
fcomps
insb
ficoms
xor
pop
inc
xor
orl
cmc
xor
or
testl
jb
stos
and
dec
test
inc
adc
hlt
jl
jae
or
pusha
jnp
andl
jbe
je
push
push
scas
js
loopne
imul
push
pop
pop
orb
xor
testl
je
data16
push
sbb
insb
loopne
cmc
out
pop
jnp
add
stos
or
or
mov
jmp
jbe
cmp
lcall
push
mov
sub
mov
je
mov
push
push
sbb
ret
pop
xorl
lock
insb
mov
add
mov
sbb
mov
rcr
pop
pop
or
push
or
leave
mov
jl
cmp
je
mov
mov
jl
push
insb
xlat
loopne
mov
shl
cmp
in
bound
xlat
ss
jae
push
cli
jmp
icebp
std
test
and
jl
xor
outsb
pusha
adc
sbb
in
or
pop
and
jae
cwtl
cmp
sub
push
test
add
push
add
and
xor
mov
sub
mov
pusha
inc
and
cld
mov
mov
cmp
and
mov
sbb
sub
add
and
and
cwtl
mov
loopne
sbb
mov
pop
jmp
es
loopne
inc
xchg
mov
ss
adc
mov
test
pop
rorb
ja
xchg
mov
call
paddusb
mov
add
cmp
shr
xor
jne
push
push
inc
mov
pushl
adc
decl
loopne
pusha
cmpl
adc
fldl
mov
cmp
lahf
and
test
sar
sub
push
js
mov
mov
dec
and
mov
cmpb
push
movzwl
repnz
scas
mov
push
outsb
add
pusha
scas
or
push
and
subl
xchg
sarb
mov
pop
adc
xor
jmp
adc
xor
cwtl
iret
out
mov
je
xor
pusha
xchg
in
xor
stos
call
pop
clc
shll
ret
inc
andl
add
in
mov
call
mov
jbe
out
mov
test
mov
rcrb
scas
in
mov
lcall
jo
jbe
xchg
pop
cltd
xchg
gs
lods
lahf
lea
lods
add
lea
mov
addb
mov
std
outsb
cli
negb
add
cmp
ja
sub
mov
movb
popl
jbe
inc
inc
cmpb
aam
or
cmp
add
ror
sbb
mov
pop
push
mov
loopne
cmp
mov
movsl
movsl
pop
mov
daa
clc
icebp
cmc
cmpb
inc
lret
inc
or
mov
stos
cmp
jno
xchg
pop
ret
sbb
push
push
add
stos
popf
add
insl
add
push
loope
inc
sub
rol
lds
je
cld
fdivrs
or
sub
fimuls
inc
mov
in
inc
subl
push
inc
ljmp
jnp
and
mov
cld
jne
mov
fisubrl
xchg
sub
add
pop
pop
je
pop
jbe
and
sub
xor
adc
or
push
xchg
cmpl
or
ja
xor
push
in
push
push
inc
push
cmp
lods
push
jg
push
inc
sarb
adc
jb
sub
std
hlt
mov
movb
push
lea
inc
push
add
or
ja
out
outsl
and
mov
shr
inc
add
loope
adc
mov
inc
ljmp
rcrb
push
in
cli
call
sbb
or
adc
flds
cmp
stc
mov
cmp
mov
imul
nop
inc
dec
cld
mov
xchg
lea
test
je
fcmovne
out
jae
adc
nop
shr
xor
je
jmp
mov
mov
cmp
inc
mov
mov
xor
jb
pop
fs
inc
fisttpl
enter
mov
mov
push
popf
cmp
and
loopne
or
mov
idiv
adc
test
fnstsw
aaa
mov
aad
out
incb
jl
daa
sbb
or
jp
mov
pop
push
add
pop
addr16
je
int3
add
jmp
lea
pop
ficoms
jno
sub
cmp
jne
mov
mov
cmp
pushl
incb
add
cld
dec
and
add
int3
bound
jae
fcomi
add
int
shr
or
jmp
std
jmp
pop
jne
pop
cld
rorb
pop
inc
int3
mov
in
sub
mov
add
fsub
cmp
loope
xor
test
mov
rcll
pmullw
jo
jno
je
andb
inc
ficompl
arpl
fdivrs
js
outsl
pop
jmp
mov
sub
add
ja
and
jle
xchg
jne
mov
out
nop
and
mov
xor
add
inc
sbb
sbb
or
mov
jo
add
mov
pop
enter
add
xor
and
inc
stc
out
xor
dec
xor
inc
and
rol
std
subb
push
stos
lahf
mov
std
jne
mov
mov
rorl
xorb
jb
sbb
mov
loop
dec
jb
rep
jmp
roll
or
loopne
int
dec
cld
test
jns
out
sarl
int3
nop
or
mov
and
mov
mov
data16
or
lods
pop
repnz
mov
dec
sarl
dec
add
add
fsubrp
nop
cmpsb
nop
inc
inc
inc
inc
jg
cmp
jnp
or
push
sbb
or
mov
cld
hlt
push
in
mov
mov
repz
repz
iret
repz
lock
hlt
clc
clc
cld
or
scas
xor
scas
jmp
push
stos
inc
js
push
pop
jo
pop
pop
xchg
fildl
pop
repz
xor
push
inc
sbb
dec
outsb
mov
into
jl
cld
jmp
fwait
pop
rorl
shl
fxch
enter
addl
sbb
rclb
push
xor
add
mov
je
add
dec
lods
mov
push
adc
aas
inc
out
add
add
lods
pop
rclb
nop
dec
dec
push
call
add
mov
mov
or
push
mov
pushf
movsb
lods
mov
sahf
out
cs
sbb
adc
sahf
out
adc
adc
and
out
or
ss
jnp
aas
or
push
call
dec
inc
sbb
sub
mov
aam
mov
fisttps
inc
mov
fidivs
xchg
clc
push
push
aad
ljmp
ja
push
pop
leave
pop
mov
push
jne
loope
inc
mov
and
push
add
js
push
std
mov
mov
push
adcb
je
pop
das
cld
inc
daa
jmp
push
push
dec
stc
mov
dec
and
or
pop
cmp
mov
mov
ja
or
sete
sti
push
push
ds
or
cli
inc
dec
jb
ds
dec
loop
call
movsb
xchg
push
or
inc
push
movsb
jg
sahf
jno
pop
cld
add
push
shr
fldl
leave
add
dec
mov
mov
inc
sti
cmpsb
cmpsb
pop
xor
or
test
adc
insb
das
jp
jne
sarl
dec
pop
push
or
fnstsw
add
add
push
or
adc
fwait
xchg
mov
jae
mov
pusha
shr
lea
not
and
decb
push
ljmp
sti
jbe
shl
pop
inc
mov
push
jl
lods
jns
mov
add
jg
decb
add
sbb
sbb
loop
orl
pop
cmp
xor
in
jne
rcrl
cmovae
cmp
dec
jbe
push
mov
xorb
cmpb
jbe
xchg
sub
je
pop
sub
jl
mov
mov
outsb
mov
xchg
adc
js
or
movsl
jle
rorb
dec
pop
add
and
jge
push
or
mov
mov
lea
pop
sub
int
dec
mov
or
cs
std
sti
or
add
and
mov
jae
cmpb
jge
mov
push
mov
jmp
or
sbb
add
sub
lea
xor
rolb
test
add
jmp
clc
test
lock
mov
iret
ljmp
fisttps
jnp
cmp
jo
inc
inc
pop
insl
je
or
subb
or
sarb
gs
std
in
jge
push
or
movsb
mov
scas
sti
ret
iret
jle
decb
adc
inc
andl
and
jle
hlt
cmpl
insb
push
pushl
mov
sbb
mov
in
andb
push
stos
dec
inc
push
dec
adc
push
lea
push
push
shrl
decl
jbe
jbe
or
sub
jmp
mov
pop
mov
imul
cmp
pop
ds
sbb
in
lock
scas
mov
push
pop
shr
sbb
mov
add
xor
shr
sbb
shlb
sbb
fistps
mov
mov
ret
push
and
or
jne
add
cmp
sar
divl
jb
push
jne
mov
cmp
dec
adc
ds
xor
dec
jae
cmpl
or
outsb
jmp
es
repz
out
mov
mov
xorb
or
cld
pop
mov
push
sub
mov
cmp
mov
push
adc
mov
xchg
mov
add
xchg
inc
adc
mov
ret
inc
add
mov
cmpsl
rcrb
js
pop
mov
sarb
and
or
je
cld
jo
pop
add
mov
mov
into
jne
int
and
pop
test
jl
shl
inc
jmp
mov
cmc
mov
inc
push
stc
xchg
sub
icebp
test
add
andl
jle
pop
cmp
ss
hlt
jmp
and
std
jle
push
cmp
shl
in
and
mov
decb
jne
fisubs
aam
push
and
jmp
das
fisttpl
inc
and
push
pextrw
cmpsb
cmp
or
jns
adc
jp
clc
add
xorl
adc
xchg
push
stos
lret
jl
test
inc
test
push
decb
jge
mov
fstps
or
mov
les
insl
roll
jl
jmp
push
push
lea
or
arpl
sub
out
or
aam
cli
sbb
mov
cld
fs
in
lcall
cld
mov
fidivrs
jns
jne,pt
mov
cmp
cmp
mov
inc
xchg
jmp
adc
mov
stos
hlt
jne
stos
aas
je
mov
xchg
push
das
ret
mov
adc
cmpsl
mov
cmpl
or
popa
bound
mov
adc
and
fs
xor
jbe
leave
pop
dec
es
data16
dec
dec
adc
mov
incl
imul
scas
and
mov
push
mov
inc
or
fisttpl
sahf
loopne
ret
outsb
imul
inc
add
inc
or
lock
ret
add
dec
cmp
adc
adc
roll
adc
add
add
imul
cli
ja
not
stos
fimull
orl
cld
or
insb
xchg
movl
decl
add
test
fldl
lods
pop
adc
jbe
sbb
add
mov
add
mov
dec
or
push
inc
mov
sahf
inc
test
enter
in
push
test
hlt
mov
cmpl
mov
cld
push
cmp
push
fwait
mov
mov
ss
inc
ljmp
into
stos
addr16
mov
pop
cmpsl
sti
pop
ret
inc
je
and
sbb
testl
or
mov
add
jnp
push
and
mov
mov
pop
mov
and
out
lcall
ds
push
jp,pn
push
mov
ljmp
scas
add
jne
jmp
jbe
mov
mov
inc
dec
je
and
aas
jne
pop
or
push
and
je
inc
cmp
lahf
icebp
daa
inc
mov
ret
mov
imul
or
and
nop
mov
insb
xor
jno
inc
push
das
scas
xor
in
add
sub
or
sub
pop
jne
jb
sbb
push
lcall
shlb
js
fisttpl
mov
mov
test
nop
aaa
or
test
aam
jo
inc
push
rclb
push
push
pop
push
popa
cmp
pop
popa
inc
pop
mov
sub
inc
jmp
loope
cltd
and
aaa
lods
dec
and
outsl
test
sub
cmp
jle
pushl
inc
aas
ljmp
rcrb
jo
sbb
aas
aaa
adc
jmp
test
and
jae
mov
out
add
add
in
cmp
push
outsb
and
mov
or
and
and
xchg
in
add
bsf
stos
jmp
data16
sbb
mov
dec
and
mov
fdivl
cwtl
fadd
inc
scas
call
in
call
mov
lock
cmp
je
inc
xor
inc
or
sbb
cmpb
push
push
mov
nop
and
adc
pop
gs
xchg
push
decb
nop
xorb
pop
loopne
dec
inc
adc
cli
fbstp
enter
pushf
push
fcoms
insb
or
add
jmp
sbb
and
add
mov
stos
cmp
je
clts
shlb
es
pop
test
test
push
lcall
fdiv
push
mov
repz
add
sbb
pop
add
mov
sbb
pop
loopne
jecxz
cli
lea
push
mov
adc
add
sbb
jae,pn
push
mov
rol
pop
and
sbb
and
cmp
push
xor
repnz
sbb
inc
push
sbb
push
insb
sub
arpl
pop
cmp
cwtl
sbb
hlt
faddl
push
push
jmp
pop
insb
imul
mulb
mov
cmp
pop
cmp
daa
mov
js
mov
cmovb
ds
dec
lods
jl
pop
int3
add
or
dec
je
mov
mov
sub
ret
push
sub
into
dec
mov
enter
or
testl
or
stos
je
sbb
mov
fsts
jg
clc
mov
adc
or
dec
inc
test
jg
clc
outsl
cmpl
out
push
int3
les
dec
cmp
jg
sahf
loopne
xchg
clc
loopne
adc
push
push
ljmp
test
inc
xchg
cwtl
inc
nop
nop
push
push
xchg
jp
test
enter
inc
enter
xchg
nop
repz
mov
dec
push
pop
sub
cmp
fs
je
jg
sahf
ret
add
or
push
iret
mov
loop
aas
push
cmp
pop
sahf
jb
sub
add
jae
scas
and
add
mov
cli
inc
add
cs
dec
shlb
or
mov
push
cs
lret
hlt
lock
in
in
mov
adc
fadds
add
add
push
adc
jg
je
insl
and
jb
jb
or
mov
dec
dec
push
push
and
inc
in
cmpsl
fstps
inc
dec
dec
inc
and
push
xor
cmp
sub
and
outsl
and
imul
out
gs
jo
dec
aaa
outsb
outsl
je
or
not
addr16
arpl
imulb
imul
insl
outsl
outsb
outsl
ss
fs
lret
jo
jb
jbe
jb
jne
jnp
push
pusha
dec
arpl
arpl
insb
push
mov
xor
push
gs
das
mov
data16
mov
jge
cmp
gs
jae
push
fs
fnsave
out
push
cmp
nop
outsl
or
aaa
leave
fwait
insl
mov
ljmp
arpl
xchg
bound
das
imul
pop
add
inc
jb
add
xchg
andb
insl
inc
xchg
insl
insb
pop
sbb
cmp
push
xchg
pop
push
cmp
mov
addr16
jae
push
xor
lahf
mov
addr16
or
cwtl
xor
decl
shl
outsb
or
imul
push
popa
xlat
mov
inc
dec
imul
pop
sub
inc
sbb
cmp
add
sarb
fstp
dec
pop
imul
outsb
ds
gs
popa
fs
int3
fimuls
push
pop
jne
daa
pop
push
cld
jg
adc
gs
popa
addr16
outsl
js
add
and
mov
dec
xor
cs
jg
mov
inc
cwtl
lea
push
stos
add
popf
pop
push
fiaddl
add
adc
add
sbb
cmp
add
fwait
sti
ja
lods
insl
imul
push
add
cmp
sbb
dec
cmp
mov
nop
xchg
xchg
xchg
or
mov
js
or
add
inc
adc
xchg
ja
repnz
add
repnz
inc
or
or
and
sbb
adc
sbb
jb
enter
call
sbb
mov
push
js
jns
jp
cld
ror
and
or
mov
mov
add
clc
cmpb
add
decb
jp
mov
jns
and
cmpsb
lret
pop
movsl
sbbl
fildll
mov
cmovo
pusha
daa
mov
inc
mov
test
mov
sbb
in
call
adc
in
notl
push
ficompl
mov
xor
mov
fsubp
stc
jb
jle
add
mov
pop
ljmp
and
adc
adc
add
add
ja
add
and
add
inc
push
xchg
adc
mov
mov
dec
cltd
decl
popa
jo
insb
insb
outsl
arpl
dec
outsl
fs
sbb
dec
popa
outsb
or
push
je
data16
pusha
jge
dec
outsb
outsw
and
jb
pop
push
inc
stos
fwait
jb
adc
arpl
sbb
and
inc
jne
jb
outsb
dec
push
outsb
push
pop
int
and
inc
imul
and
popa
insl
stc
inc
jbe
push
rcrl
inc
loope
jb
cmp
insb
jae
push
push
imul
les
outsl
dec
fs
jns
mov
pop
mov
pop
sub
sbb
add
gs
jo
ret
jge
ret
sbb
fs
insb
jae
incb
sbb
cmc
in
dec
inc
lcall
je
inc
gs
dec
jns
loopne
push
pop
fidivl
sub
xchg
push
je
mov
add
pop
push
jnp
arpl
fldcw
sub
adc
rorl
push
dec
outsb
les
dec
mov
aam
movsl
push
xlat
adc
addr16
cmovg
adc
movsl
push
jmp
gs
xchg
enter
fs
dec
movsb
bound
inc
pop
pusha
sbb
in
or
dec
sub
mov
mov
sbb
pop
roll
adc
cmp
insl
sub
js
push
inc
adc
mov
movsb
sub
dec
enter
inc
cli
push
push
je
push
cli
roll
jb
jmp
mov
cli
xlat
push
sahf
mov
and
adc
pop
lret
shl
mov
jge
mov
xlat
loopne
int3
xchg
inc
jb
push
sar
fsubrl
sbb
push
jo
inc
jecxz
jne
mov
outsb
arpl
jns
fstl
dec
sub
push
jo
jb
add
push
incl
lock
add
inc
dec
aas
lock
pusha
jb
dec
lock
push
outsl
incl
lock
add
xchg
mov
add
pop
mov
jb
sub
xor
popa
sbbb
add
inc
popl
f2xm1
pop
add
xor
fadds
ds
fmulp
mov
testl
inc
add
cmp
roll
add
xor
add
les
xchg
mov
incl
dec
imul
mov
js
lock
inc
fsubrs
mov
xor
imul
ja
cmp
lock
mov
cmp
mov
js
dec
pop
cs
loopne
inc
pushf
inc
mov
sub
inc
dec
add
mov
add
mov
or
lock
add
add
jno
cmp
sarb
js
sti
mov
xchg
add
lock
xchg
aaa
roll
jle
add
cmp
cmp
in
lods
jge
add
push
push
and
lahf
add
cld
fildl
and
pop
aas
jge
scas
inc
inc
fidivs
inc
lock
jg
xchg
cmp
inc
cmp
rolb
xlat
out
addl
or
cmp
inc
dec
mov
nop
ds
inc
sub
add
orl
inc
aas
jnp
push
hlt
push
add
test
roll
sar
incl
gs
add
imul
add
add
lock
outsl
fstpt
test
ss
aad
cmp
jbe
adc
jge
inc
mov
sub
decl
lret
stc
add
add
inc
ja
aaa
inc
fidivs
inc
scas
cmp
mov
ficoml
cld
add
sub
add
push
ret
jg
pop
mov
jae
stos
add
jp
dec
mov
mov
mov
mov
into
das
jle
jl
lret
xor
xchg
lock
cmp
xchg
aad
xor
sbbb
xchg
inc
push
cmp
inc
ret
icebp
sub
cmp
xchg
lea
add
sar
xchg
cmp
add
pop
inc
xlat
lock
add
push
mov
in
jbe
pushl
imul
mov
jmp
stc
movq
mov
cmp
inc
or
adc
iret
cmp
cmp
cmpsb
fdiv
js
xchg
add
call
inc
jg
es
fs
inc
mov
jne
aad
movsb
xor
unpckhps
aas
in
insl
mov
pop
xchg
cmp
cli
add
fwait
sbb
ljmp
lock
push
sbb
xor
dec
xchg
scas
cmp
pop
insb
outsl
and
add
push
test
into
dec
add
add
cld
jg
add
bound
inc
lea
add
inc
sahf
das
push
adc
push
aaa
xor
add
cs
dec
out
xchg
sbbb
jo
add
mov
xchg
cmp
jle
dec
mov
ss
addb
fdivrs
ret
mov
cli
loope
fcomip
inc
dec
mov
add
mov
out
add
mov
push
cmp
xor
add
dec
hlt
fwait
mov
cmp
outsl
mov
add
jmp
lock
hlt
pop
jg
sub
jae
insl
xor
lods
mov
lods
cmp
lea
imulb
jmp
call
shlb
xor
add
icebp
inc
xchg
pusha
lock
inc
inc
xor
or
xorb
inc
fimull
push
out
js
cmp
ljmp
ds
xchg
dec
in
add
pop
cmp
aas
pop
test
mov
pop
je
nop
add
jp
adc
jno
inc
fdivs
addb
in
inc
ds
inc
mov
add
pop
jge
ds
cltd
or
movsl
add
dec
inc
xchg
jae
jne
test
mov
enter
dec
addb
mov
or
dec
ss
sti
jle
xor
mov
aaa
jg
dec
dec
mov
inc
jnp
mov
cmp
aas
xor
addr16
hlt
pop
and
cld
add
test
inc
cwtl
push
push
jbe
jge
pop
sbb
mov
jo
cmpsb
jl
insl
loopne
inc
repnz
xchg
push
std
push
xchg
xchg
jns
xchg
add
adc
inc
aas
dec
adc
jle
dec
inc
add
in
dec
jnp
cmp
dec
stos
int3
iret
inc
xorl
jb
inc
jg
cmp
jg
jb
add
inc
lahf
lds
mov
outsl
mov
push
andb
nop
push
cmp
jg
into
inc
inc
into
and
dec
js
aad
add
ds
push
aas
xor
jb
dec
xor
fists
inc
sahf
inc
pop
inc
mov
nop
lods
inc
dec
lea
dec
sahf
fs
jge
adc
out
lea
outsl
mov
pop
clc
daa
add
xchg
cmp
lock
ret
lock
out
dec
nop
add
das
pop
insb
sub
mov
aaa
lahf
dec
jl
ljmp
imul
cmp
push
lds
and
cmp
aad
inc
jle
inc
enter
mov
fldt
rol
cmp
test
cwtl
inc
xchg
jno
repnz
push
add
in
push
mov
lock
cmp
mov
dec
jae
push
and
cmp
mov
cmp
ret
dec
jle
dec
mov
jp
lock
add
mov
inc
mov
adcl
rol
shlb
repz
stos
fisubrs
cmp
jns
test
stos
aas
rcl
mov
jnp
imul
mov
dec
jno
lock
cld
in
push
cmp
enter
les
decb
outsl
jg
jne
add
mov
mov
movsb
aaa
pushl
ret
bound
rolb
push
lods
clc
jns
jge
shlb
adc
lock
cli
cmpsb
cmp
xor
cmp
fs
into
inc
roll
jl
push
xor
inc
lcall
add
ss
pop
cmp
outsl
pop
scas
jb
xchg
cmp
mov
in
les
cmp
imul
or
or
mov
sbb
sbb
or
adc
pushl
or
push
push
push
test
cmovl
xor
inc
or
jg
sub
adc
or
jecxz
xor
xor
push
adc
xor
pop
adc
and
push
xor
adc
push
sbb
shrb
sbb
sbb
int3
mov
sbb
lock
add
adc
or
inc
adc
or
adc
add
or
xor
xor
mov
and
adc
adc
or
push
inc
xor
decb
pop
jo
push
outsl
sbb
adc
or
push
movups
fstps
das
cld
inc
cmp
ret
sbb
pop
add
sub
sbb
add
aas
nop
dec
push
or
sbb
sub
sub
jb
push
or
sub
data16
les
push
cmp
add
adc
or
mov
mov
and
in
add
push
push
push
addr16
fdivl
adc
sbb
jp
jbe
roll
mov
sbb
add
mov
push
sbb
xor
jo
adc
lods
adc
inc
lock
and
sbb
aaa
xchg
neg
call
add
jl
add
cmp
add
add
lods
or
or
rcr
and
adc
add
dec
and
inc
popa
inc
add
je
mov
stos
leave
adc
mov
aam
sahf
imull
jns
adc
mov
and
sbb
jnp
cmpsb
lcall
push
cmpsl
push
js
in
fs
sub
out
add
add
add
imul
cmp
loop
je
scas
mov
add
andb
jo
lea
mov
mov
lcall
iret
mov
cld
or
push
movsb
sahf
xlat
mov
jb
inc
aas
rcrb
icebp
dec
jb
fimull
adc
xchg
cmp
loopne
mov
or
fdivl
popf
cld
add
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
