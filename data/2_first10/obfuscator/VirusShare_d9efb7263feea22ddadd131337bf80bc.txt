push
call
ret
ret
mov
je
cmp
add
mov
dec
push
jg
movsb
add
adc
and
into
ljmp
fdivrl
add
int3
fstpl
movsl
xor
sub
mov
pop
dec
xchg
scas
jne
sti
mov
jge
sub
or
sub
inc
push
fidivs
jl
mov
int
pushf
sbb
xchg
and
or
xchg
push
mov
es
dec
fcmovnbe
jo
loope
xchg
cmpsb
jg
ljmp
inc
nop
shrb
pop
xchg
jo
dec
mov
and
dec
jecxz
push
xchg
or
pop
jg
xor
movsl
mov
sbb
fldl
rol
lret
pusha
dec
call
in
iret
or
cli
sub
aad
add
pop
fiadds
cmp
dec
jge
loopne
aas
daa
inc
ficomps
sbb
cs
pop
mov
or
xchg
ja
cmp
dec
adc
jmp
or
add
inc
jmp
ss
xchg
inc
adc
or
jae
push
lds
push
dec
dec
out
dec
pop
xchg
cwtl
pop
fisttpll
push
mov
test
sbb
jno
mov
sbb
jns
sbb
adc
or
pop
lret
popf
xchg
or
cmpsb
je
dec
fs
dec
xorb
add
push
inc
aam
fs
pop
push
movsb
xchg
add
ljmp
xchg
xor
push
roll
ret
jb
push
mov
cmpsl
mov
sbb
test
jmp
icebp
imul
shlb
jge
dec
xchg
mov
jmp
inc
fidivrs
sub
imul
fcmovbe
sbb
mov
imul
push
push
test
cmc
adc
pusha
inc
lcall
mov
ja
lahf
sbb
xchg
xchg
xchg
mov
outsl
cmp
lret
std
repnz
dec
add
and
and
push
dec
cli
fmul
mov
inc
sbb
xor
ror
stc
insb
arpl
insl
sarl
push
and
pop
iret
daa
mov
add
sub
pop
addr16
ljmp
in
push
mov
outsl
jmp
jle
sub
das
inc
add
inc
test
push
xchg
push
sahf
add
out
sub
push
sbb
cmpsl
jno
scas
jecxz
or
negl
fdivrl
mov
xor
jno
push
call
inc
add
into
stos
push
cwtl
sub
xor
shrl
push
ss
and
ret
ficoml
inc
sti
and
sti
mov
push
jg
jnp
xor
adc
aas
in
mov
shl
int
nop
xor
lods
stc
pop
test
rcrl
pop
xor
lea
dec
insb
fcomip
jg
jg
cmp
xchg
fadds
mov
arpl
add
mov
insl
jle
sbb
mov
cmc
in
and
xchg
outsb
stos
cltd
pushf
bound
rcll
xor
and
inc
push
and
sub
rorl
insb
pop
push
sub
in
out
addb
sub
icebp
ficomps
fdivrs
test
inc
test
and
dec
dec
decb
mov
mov
mov
arpl
cwtl
or
scas
push
sbbb
dec
mov
inc
mov
insb
gs
add
lret
sbb
cmp
stc
mov
mov
pusha
lods
add
fwait
mov
insb
cs
clc
icebp
addr16
jnp
je,pt
icebp
sahf
add
or
lret
loope
inc
in
mov
mov
adc
loop
fs
mov
sub
mov
push
lret
jecxz
popa
insl
push
mov
in
push
js
loope
adc
fcoms
rcrb
sub
notb
cld
les
lcall
xchg
out
lods
sti
int
push
int3
or
out
inc
enter
mov
and
leave
movsb
stos
mov
and
lret
xor
lods
movsb
dec
js
xor
fimuls
xlat
sub
pop
pushf
or
mov
add
cmp
mov
popl
ret
jno
and
repz
mov
cwtl
mov
iret
pop
mov
lcall
adc
gs
arpl
ljmp
call
int
jg
cs
sbbb
mov
jp
mov
inc
stos
add
call
add
mov
push
es
mov
pop
push
jg
dec
jae
stos
sub
cmp
shlb
adc
dec
lret
fldt
into
push
adc
ret
inc
jecxz
and
adc
push
pop
rorl
sbb
iret
dec
mov
clc
lods
shlb
in
xchg
xor
out
sarb
jno
ret
enter
sub
je
rcrl
xchg
sahf
adc
cmp
mov
imul
mov
test
sbb
sub
out
push
jne
nop
arpl
out
pushf
cs
call
nop
gs
jecxz
rcr
jmp
mov
incl
je
pop
rcrl
out
add
xchg
cld
xchg
repz
cbtw
mov
add
movsl
loope
mov
cmc
adc
stc
stc
jae
cld
or
in
jno
cmovns
roll
mov
mov
aaa
xchg
mov
aam
pop
mov
xchg
imul
lds
or
push
jmp
fadd
adc
and
sbb
bound
inc
addr16
cmp
cwtl
pushf
outsl
jnp
loopne
imul
xchg
push
or
stc
arpl
push
sbb
sbb
mov
test
outsb
ja
jg
js
fsubl
jp
call
ljmp
fs
adc
mov
xchg
xor
adc
and
in
xchg
insl
outsl
adc
das
cvtps2pd
cmp
aaa
imul
add
cwtl
xlat
add
pop
mov
jns
mov
fstpl
and
xor
fs
movsl
xabort
and
jmp
push
testb
js
aaa
xor
pop
and
push
or
fidivl
sbb
ret
jb
ja
int
jne
movaps
decl
ja
ficomps
pop
add
ljmp
mov
fsubrl
sahf
out
inc
rcr
hlt
mov
mov
xchg
imul
xchg
or
addb
xchg
js
cs
and
mov
test
aaa
faddp
popf
cmp
out
push
pop
cli
je
mov
inc
jmp
ret
cmp
dec
bound
dec
in
or
in
jae
mov
into
fldcw
inc
call
je
xor
ja
and
push
fistpll
dec
cmpsb
in
push
mov
std
jbe
test
adc
add
push
push
mov
add
and
ja
sti
maxps
js
push
jmp
aaa
out
dec
repnz
dec
icebp
dec
cmpsl
jae
jae
xlat
inc
ss
mov
sbb
push
es
add
fcompl
sub
xchg
lahf
ss
fbld
add
mov
lret
clc
in
sbb
subb
sub
hlt
dec
pop
mov
test
and
mov
pop
sbb
inc
mov
mov
repz
push
icebp
lds
pop
add
push
cmp
in
or
test
add
pop
insb
push
push
mov
xchg
add
stos
addl
stos
aad
lock
insb
stos
cmpsl
in
cmp
sub
stc
xchg
sbb
clc
jle
incb
xchg
jl
mov
xchg
in
lock
dec
add
jo
lret
and
je
popf
ret
fcmovu
aam
pop
push
lahf
add
lea
push
inc
dec
xchg
ret
cwtl
xchg
mov
mov
mov
push
insb
and
enter
pop
cld
or
movups
xor
in
aaa
jbe
push
add
int3
das
call
faddp
mov
fucom
roll
sahf
xlat
xor
inc
not
cs
aas
mov
ret
test
call
shll
aad
jae
add
aam
sti
inc
pop
jge
fstpt
rclb
int
dec
inc
ds
mov
lds
mov
rorl
and
mov
data16
gs
insb
adc
adc
inc
xor
stos
cmc
enter
pop
mov
pop
aam
jb
dec
inc
push
cwtl
pop
and
dec
dec
mov
mov
cmp
mov
adc
jns
mov
mov
and
das
xor
dec
retw
sub
dec
jl
das
cmp
roll
fmull
push
rcr
or
xor
push
movsl
pop
into
adc
push
or
xchg
mov
xchg
cmp
xorl
push
lahf
jmp
iret
loop
in
add
mov
aad
aaa
inc
test
sbb
mov
push
jl
leave
mov
orl
mov
cmp
mov
lods
push
fisttpll
jo
shrb
xor
ficomps
pusha
arpl
icebp
out
jecxz
xchg
data16
hlt
adc
mov
ljmp
jnp
sub
and
imull
jnp
mov
rcrb
cmp
pop
int3
scas
pop
jg
aad
sub
sub
dec
cmp
stc
rcrl
setl
inc
pushf
inc
sar
mov
mov
pushf
scas
cmp
adc
mul
push
stc
addr16
dec
push
loopne
adc
pop
jg
popf
jl
daa
lods
nop
or
cmp
sbb
stc
into
dec
xchg
and
sub
lret
jmp
js
insl
mov
fabs
xor
fsubrp
test
scas
or
pop
in
push
js
and
pop
out
mov
cmpsb
mov
stc
popf
push
xchg
sub
push
and
xlat
aad
ret
jge
jo
test
xor
mov
pop
xor
mov
sbb
push
pop
mov
pop
rcrl
adc
mov
imul
sub
add
insb
cmp
or
cmc
addr16
push
clc
sub
fimuls
cmpsb
sub
push
insl
xor
ficoml
mov
cmp
pop
out
add
pop
stos
rorl
or
and
jbe
add
test
fidivrl
into
punpckhwd
dec
xchg
inc
dec
inc
push
insl
and
insl
jle
popa
cmp
fwait
push
adcl
and
fwait
xor
jne
or
in
nop
dec
inc
mov
ret
mov
or
fldcw
into
aad
popa
dec
pop
push
push
ja
pcmpeqb
mov
push
int3
sbb
xor
jge
sbb
pusha
mov
and
ja
inc
loope
pushf
cli
cli
lods
and
cmp
xor
pop
dec
push
mov
push
ljmp
ljmp
dec
or
sub
out
dec
xchg
into
cmpsb
jl
jg
lods
or
pop
fisttps
mov
pop
xchg
aam
and
sub
push
out
insb
push
fwait
fwait
push
aam
incl
getsec
lahf
push
in
mov
xchg
xlat
push
pop
rcrb
inc
mov
sub
push
js
and
aad
mov
jns
adc
js
mov
jle
push
and
call
dec
aas
stos
test
jl
imul
fstl
adc
jno
stos
push
cmp
sbb
add
inc
adc
xchg
pushf
inc
mov
cld
push
pop
and
mov
sbb
mov
dec
push
loop
sbb
movsb
jmp
mov
insb
loope
daa
imul
ds
add
popf
test
jge
jge
popa
sbb
cli
and
mov
and
cmp
push
cmp
dec
push
mov
xchg
xchg
cmp
adc
pop
nop
mov
cwtl
mov
jecxz
test
mov
jns
pop
push
pushf
xor
adc
jecxz
scas
in
mov
call
mov
idivb
dec
pop
push
push
jae
loopne
push
push
out
push
sub
hlt
in
repz
jb
std
pop
push
jnp
push
fnsave
inc
xchg
cmpsb
jecxz
jno
mov
jo
dec
scas
push
sti
push
stc
test
xchg
xor
jno
test
test
xchg
fwait
aas
dec
es
int
iret
push
repnz
leave
es
jecxz
add
mov
pop
mov
jb
sbbl
jb
mov
or
jl
jns
adcl
mov
or
or
nop
xorb
popf
lods
icebp
and
inc
ficomps
jg
out
and
nop
or
mov
mov
subb
adc
cmp
sbb
pop
cmp
adcb
add
repnz
pop
pop
fwait
xchg
pop
in
cmpsb
dec
mov
adc
and
mov
les
dec
shrb
lds
xor
inc
or
xchg
xchg
gs
and
and
movzbl
or
mov
mov
pop
and
fiadds
sbb
xchg
or
inc
test
and
mov
or
mov
lods
leave
and
ret
mov
pop
mov
adc
fisttps
ficomps
std
cld
pusha
push
sar
test
mov
fmuls
ds
repz
add
push
xor
push
jo
cld
ret
out
push
je
bound
sbb
ret
leave
and
dec
and
add
sbb
cmpsb
loope
sub
sbb
jmp
pop
pop
pop
inc
je
push
imul
push
or
push
icebp
lret
in
sub
adc
push
xor
xchg
cmp
imul
inc
test
fisttps
mov
pop
pop
aas
mov
and
pop
into
sbb
mov
jmp
push
aas
shrl
cmc
imul
adc
aas
sub
nop
fdivrl
cmp
push
mov
pop
outsl
cltd
push
adcl
out
fs
dec
mov
insb
sahf
mov
pop
mov
inc
dec
pop
addb
ja
xchg
or
push
push
dec
inc
pushf
lock
stos
push
pop
sbb
xchg
mov
push
push
add
mov
mov
cmp
sbbl
mov
mov
push
movsb
pop
push
fdivrs
add
in
mov
jmp
add
imul
inc
fwait
push
icebp
jg
cmpb
imul
sbb
aam
jne
jg
scas
popf
push
sbb
loope
out
mov
xchg
out
mov
ret
xor
pop
sub
xchg
mov
shl
loopne
in
mov
push
pop
cmp
ljmp
sbb
inc
inc
sbb
fildll
sbb
mov
cltd
fistps
mov
dec
incl
add
movsl
pop
imul
sahf
test
movlps
xchg
xchg
adc
ljmp
sub
in
stc
jb
iret
mov
outsl
cld
push
adcl
es
sub
call
pusha
xor
pop
xchg
popf
mov
and
jp
xorb
jle
test
mov
pop
lods
inc
repnz
outsb
pop
ss
arpl
loopne
push
arpl
scas
sbb
mov
push
sti
push
shlb
jb
add
int
out
adc
push
or
jns
test
nop
mov
pop
adc
stos
push
pop
lahf
mov
jp
sbb
fwait
xor
sbb
aas
xchg
cli
push
mov
mov
jge
mov
hlt
inc
pusha
sbb
sub
jbe
rcl
jle
mov
pop
lods
fistpl
xor
xchg
mov
push
es
push
es
mov
jne
xor
jecxz
xor
mov
adc
sbb
in
out
inc
adc
adc
cmp
cmp
pop
jnp
pop
icebp
add
push
ret
jb
sbb
add
pop
mov
movb
rolb
aam
jb
xchg
addr16
cmpsb
fwait
add
xor
and
cmp
sbb
dec
sbb
mov
std
xchg
icebp
mov
std
in
shrl
pushf
mov
ss
sub
cld
dec
xchg
outsl
test
add
jo
cwtl
and
in
imul
outsl
fs
cmp
aad
mov
setl
in
sbb
lea
pushf
pop
pusha
push
and
add
sbb
cmp
les
sarl
sub
popf
je
loopne
inc
pop
mov
daa
adc
js
notb
mov
jbe
rcll
pop
adc
movsb
xchg
push
add
outsl
or
shll
jp
cs
jge
sub
rcl
add
movsl
shlb
xor
addr16
mov
cmc
fiaddl
and
xor
lret
jo
iret
xlat
push
loopne
roll
popa
outsl
pop
iret
jmp
sub
test
adc
xchg
cmp
jl
add
into
cmpsb
enter
push
hlt
pop
cmp
call
mov
xor
pop
inc
jg
push
pop
sbb
insl
pop
sbb
in
jp
jbe
es
inc
jb
aaa
or
in
movsb
icebp
xchg
lcall
int3
out
lea
jecxz
dec
push
aas
pushl
dec
jmp
adc
int
mov
add
jl
push
pop
insl
jae
xchg
imul
mov
data16
outsl
test
xchg
push
in
rcrb
add
and
mov
mull
push
gs
mov
and
pop
xor
adc
push
loope
cs
xchg
mov
adc
popf
push
sub
fcoms
ljmp
gs
loopne
push
mov
int3
hlt
push
ret
loope
out
mov
movsl
cmp
loopne
add
int
mov
cltd
xchg
jmp
idiv
addb
cs
leave
sub
sbb
xor
jne
mov
dec
mov
popa
xchg
mov
mov
jge
xor
fbld
stos
fiaddl
test
cmpsl
dec
xchg
dec
push
cmp
push
jno
not
jne
inc
push
sbb
inc
xor
les
mov
add
xor
jecxz
int
jbe
outsb
mov
or
jl
pop
movsl
cmp
shll
cmpsl
lods
xchg
dec
mov
mov
nop
out
popf
mov
lock
pusha
add
push
mov
or
js
cld
testl
pop
jnp
mov
xchg
mov
cmp
and
jnp
fdivl
fwait
sub
add
jo
in
mov
push
stc
push
adc
jne
out
push
dec
dec
mov
dec
mov
mov
fnstsw
or
movsl
dec
jae
mov
dec
jns
mov
sbb
fidivrl
adc
push
xchg
add
rcrb
iret
sub
cs
or
insb
jns
jae
scas
jg
cwtl
popf
js
cmp
imul
popf
sbb
scas
dec
jnp
sub
popf
xchg
insb
adcl
cltd
mov
out
mov
and
xlat
sti
inc
push
mov
dec
push
mov
jge
jae
jae
js
mov
push
pop
imul
mov
loop
dec
xor
loop
add
adc
or
lds
lods
sbb
adc
ja
cltd
mov
mov
loop
add
cmpsl
cmpsw
test
sub
je
push
inc
cmp
jo
cwtl
test
cmc
push
insl
mov
pop
or
testl
mov
data16
and
test
in
push
dec
or
mov
adc
rcr
shll
cmp
test
pop
sub
repz
mov
test
out
xchg
inc
insb
or
insb
jnp
xor
loopne
xor
stc
mov
or
popl
into
stos
inc
ja
add
shl
pop
xor
or
dec
adc
push
ljmp
fwait
xor
xchg
shl
mov
xchg
xchg
or
mov
and
push
push
add
jecxz
mov
in
sbb
jne
icebp
outsl
adc
mov
and
adc
inc
cmp
sub
pop
adc
in
or
pop
pop
shl
or
fs
fimuls
pop
imul
ja
mov
xchg
jbe
pop
fwait
lcall
stos
cwtl
lcall
jo
and
pop
cbtw
repz
lea
adc
loope
aaa
push
adc
mov
cmp
inc
jae
jae
mov
lcall
cmc
outsl
mov
shlb
xchg
or
mov
ret
arpl
adc
icebp
sub
mov
pop
inc
fbld
cmp
call
add
sbb
imul
jp
mov
adc
pop
ror
loopne
inc
fsubrl
mov
iret
xchg
jne
inc
inc
in
movsb
pop
mov
stos
xor
aam
pop
mov
cmc
sbb
cmp
mov
sub
repnz
jmp
cmc
adc
pop
mov
sbb
pop
and
sub
icebp
jle
lret
dec
xchg
add
mov
mov
mov
inc
jno
and
enter
popa
xchg
sub
ss
jge
add
xor
sub
dec
or
jnp
xchg
xchg
mov
movsb
xchg
fs
das
xor
pop
js
push
inc
push
testb
jle
outsb
shl
mov
icebp
pop
add
cmpb
cmp
mov
mov
enter
inc
fwait
movsb
lcall
les
repnz
call
nop
and
loope
cmc
clc
or
jno
out
sbb
roll
mov
xchg
ljmp
data16
sub
xor
xor
or
das
xor
push
loopne
shrb
sub
and
lcall
enter
inc
jae
sbb
xchg
push
xchg
stos
in
xchg
jno
addr16
sub
jno
lods
pop
lcall
iret
push
dec
push
divl
or
pop
je
cmp
pop
arpl
sbb
outsl
adc
xor
pop
dec
dec
pop
je
adc
push
jge
dec
mov
xchg
sbb
sbb
mov
mov
jmp
jmp
xchg
sbb
enter
leave
icebp
mov
fstl
icebp
jno
sbb
pop
test
sbb
arpl
or
xchg
and
stc
nop
pop
rclb
aad
sbb
aad
lock
lock
cmp
xchg
jmp
mov
dec
sbb
dec
aam
mov
cmp
sbb
add
lds
push
adc
mov
lock
out
iret
push
push
fidivrs
leave
mov
pop
pop
aas
fstpt
or
push
add
mov
xchg
xchg
lret
cmpsl
sub
lahf
lock
dec
push
rolb
imul
call
fs
sub
out
cmp
inc
aas
pop
or
lcall
and
lea
in
pushf
adc
mov
mov
mov
cmp
adc
ret
sub
pop
mov
xchg
stc
pop
ret
insl
lea
xchg
in
xor
rcrl
cmp
cmp
iret
ss
adc
jge
les
aam
movsb
and
cwtl
ficompl
repz
test
ficomps
movsb
lea
pop
out
inc
test
sarb
and
xor
and
mov
push
sub
mov
loope
movsl
or
jp
ss
sbb
dec
sub
jle
call
adc
or
and
pop
mov
or
mov
pop
jl
sti
rol
inc
jge
cmp
adc
pop
outsl
push
push
ret
test
or
lahf
cmpsb
mov
lods
push
jl
jmp
lcall
fwait
int
stos
sbb
sarl
repnz
lcall
scas
loope
mov
test
hlt
loopne
sub
ja
xchg
ret
mov
ret
cmp
aaa
xor
pop
xchg
and
mov
jae
mov
push
outsb
jb
inc
clc
jge
cwtl
lcall
mul
dec
shrl
mov
cwtl
ret
mov
repz
add
incl
shr
fcompl
jb
sti
fdivrl
outsl
jl
push
addr16
and
jp
pop
mov
es
aad
mov
jnp
imulb
push
inc
mov
mov
cwtl
cltd
stos
cs
mov
fldl
push
insl
pop
cltd
mov
bound
jecxz
inc
imul
in
sahf
pop
les
inc
and
xchg
pushf
xchg
push
adc
out
inc
pushl
test
movsl
daa
lahf
pop
add
je
xchg
xor
ss
test
bound
dec
cwtl
cmp
mov
sbb
push
mov
out
icebp
and
push
out
fcmovbe
sub
outsl
dec
pusha
in
add
sub
test
inc
repz
mov
jnp
lds
sub
stos
outsb
enter
out
add
jne
mov
cmp
enter
call
lods
xchg
xchg
xlat
fcmovne
mov
or
lods
push
mull
cmp
out
pop
or
fnstsw
jecxz
cmp
leave
push
insb
addr16
dec
js
or
push
jecxz
imul
movsb
orl
inc
push
les
and
pop
mov
xor
testb
push
js
sbb
bound
fimuls
fsubrl
icebp
sub
jp
push
xchg
subl
ja
push
push
mov
xchg
cmp
loope
fcmovb
jo
mov
adc
cltd
pop
inc
das
pop
mov
jmp
mov
stc
jl
push
mov
and
test
movb
scas
in
xor
test
adc
xchg
inc
xlat
push
xchg
repnz
mov
fwait
out
push
xchg
shrb
sbb
adc
xacquire
adc
sub
lahf
rorl
shlb
pop
mov
test
or
sti
xor
mov
push
or
mov
jne
rcll
mov
shlb
mov
add
add
pop
ja
mov
xor
mov
inc
in
xor
lds
mov
and
cmp
push
data16
fildll
dec
xlat
ja
mov
cmp
dec
stos
mov
add
mov
movsl
and
lahf
or
xchg
or
xchg
xor
std
cmp
mov
pop
rcrb
adc
fucom
enter
roll
adc
decl
int3
scas
jbe
jle
scas
cmpsl
jbe
out
add
mov
fiaddl
out
pop
or
imul
filds
in
int
inc
adcl
and
add
push
adc
imul
and
out
mov
lea
lock
mov
mov
push
pushf
movsb
test
leave
icebp
shll
pop
xchg
sbb
loopne
dec
or
in
bound
cs
scas
pop
test
mov
sub
mov
adc
cld
and
insl
pop
jp
jl
mov
stos
add
inc
sahf
out
cmp
inc
iret
sub
loope
sbb
cltd
cmpsb
loop
test
pop
add
popf
cmc
call
mov
pop
cmp
push
xor
adc
bound
sub
xchg
lds
cltd
pop
xchg
cvttps2pi
test
or
or
popa
sbb
fcmovnu
inc
dec
sbb
imul
cmpsb
mov
push
insb
xchg
out
push
xlat
loope
aad
mov
dec
clc
cli
inc
dec
cmp
mov
dec
add
cmp
jge
mov
call
jbe
adc
push
dec
jp
push
pushf
mov
popf
pop
jbe
shlb
jno
mov
imul
mov
dec
cmp
bound
fsubrl
sbb
pop
stc
popa
add
cmpsl
sub
xchg
les
xchg
outsl
out
push
out
mull
dec
shrb
hlt
stc
mov
rorl
push
mov
mov
pop
jno
int3
popf
fldl
cmp
mov
cmpsl
jbe
cmpsl
imul
xchg
arpl
push
push
lods
mov
test
stos
add
arpl
pop
ficomps
ljmp
xchg
shr
adc
pop
mov
fsubrl
add
cwtl
das
add
jl
lock
mov
lcall
inc
xchg
add
loopne
sbb
test
sti
das
jae
mulb
out
xor
pop
mov
dec
insb
mov
es
popa
cmc
lahf
fstpt
mov
scas
stos
sub
leave
add
leave
adc
push
inc
xchg
fldl
shlb
xchg
cmp
cli
mov
fcmovnb
jns
mov
cmpsl
test
adc
push
xchg
shlb
mov
lods
jne
mov
mov
call
out
ljmp
xlat
bound
test
rcrl
mov
pop
sub
lcall
push
jb
ret
orb
leave
aas
test
pop
inc
out
dec
scas
push
cmpsb
mov
aad
inc
lods
adc
cmp
fistl
out
testb
mov
pop
adc
data16
dec
fwait
xchg
shrb
gs
testb
int
fwait
xchg
cmp
push
aad
dec
add
pop
les
pop
into
ss
insb
inc
dec
test
mov
andl
add
pop
je
pushf
fstl
xchg
and
fists
mov
lds
dec
jmp
cmp
pop
test
pop
shrl
in
sbb
cmp
enter
or
push
push
and
sub
sarb
dec
data16
mov
out
lahf
lea
enter
pop
rep
aaa
and
shl
push
mov
adc
leave
sbb
adc
adc
stc
pop
and
xlat
int3
push
mov
aaa
decl
daa
divl
cmc
rcll
rclb
jl
xor
scas
push
mov
je
mov
int3
push
inc
cld
adc
xchg
jo
loop
sbb
pop
rorb
je
mov
mov
in
jno
cmovbe
pop
xchg
test
test
pop
mov
jecxz
outsl
into
lahf
movsb
jmp
inc
fisttpl
pop
push
and
mov
ja
in
insb
mov
loop
sub
call
and
push
dec
and
fists
test
je
sub
cmpsb
add
loopne
fistpl
and
inc
lret
loopne
jne
shll
out
lods
lods
cltd
fisttpl
scas
std
jp
decl
mov
xor
popf
orb
jmp
jl
adc
push
adc
in
test
xchg
insl
movsl
pop
leave
cmpsb
aas
fstps
mov
scas
sub
xor
in
or
dec
and
fwait
xchg
sub
pop
mov
sbb
aam
into
mov
out
lods
xchg
pusha
pop
mov
movsb
popf
add
out
mov
cs
add
add
test
arpl
lds
push
xchg
adcb
dec
fisttps
xlat
add
adc
cmp
push
mov
mov
insl
fldt
ds
aad
inc
nop
add
orb
inc
pop
js
inc
and
cmpsb
adc
pop
add
add
xor
sbb
sbb
fimull
inc
shlb
inc
aas
stos
jmp
mov
in
jo
repnz
call
mov
aas
cmp
xchg
cld
stos
cmc
lcall
imul
lcall
sbb
repnz
mov
scas
dec
and
lds
cld
jo
mov
flds
out
ja
xlat
mov
sub
cmp
adc
ljmp
or
inc
loop
psubusb
sahf
sub
cld
lahf
pop
test
leave
pop
loop
push
sub
into
mov
mov
mov
enter
iret
jmp
dec
pop
test
ja
mov
add
stos
ret
stc
repz
addl
fnstenv
pop
cli
packssdw
std
bound
fwait
jg
stos
xor
out
jmp
popa
mov
orl
loopne
cmpb
divl
dec
dec
repnz
sbb
pop
or
adc
xchg
bnd
push
mov
pop
fpatan
pop
push
add
sub
mov
test
call
dec
add
pop
xor
inc
pop
aas
aam
xchg
mov
add
push
jle
sbb
cmc
stos
mov
lcall
fdivrp
pop
shr
lods
ficompl
adc
sbb
js
push
pop
push
movsl
cmp
push
es
stos
xchg
inc
jmp
sbb
jle
repz
add
stos
inc
mov
fistpl
mov
jl
arpl
cli
je
ljmp
leave
repz
fidivl
jle
add
cmp
rcr
xlat
lods
out
inc
pop
fwait
jg,pn
add
fbld
popa
loope
cltd
or
nop
or
mov
stc
mov
leave
mov
adc
lahf
testl
push
in
cmp
clc
lea
movsl
or
cltd
xchg
sbb
and
dec
jb
ret
sbb
pop
push
hlt
jle
or
inc
imul
int3
push
xchg
loope
pop
push
repz
dec
or
jg
shlb
sub
test
push
es
mov
mov
pusha
jecxz
das
leave
cmp
xchg
std
xor
enter
adc
out
faddp
add
jg
add
push
fcomps
fbld
push
incb
mov
outsb
pop
jp
fldenv
inc
imul
dec
lods
lods
jo
ret
jne
fsubr
pop
enter
cmp
sub
scas
lahf
mov
xchg
mov
cmp
push
dec
or
mov
ja,pn
xchg
jbe
cli
sub
push
push
push
mov
iret
push
push
addr16
lahf
dec
jl
and
mov
mov
arpl
flds
push
lock
fldenv
push
and
in
adcb
mov
lret
cs
sbb
in
testl
jg
cmpsl
inc
pop
and
xor
addb
ficompl
jmp
lea
or
je
lret
inc
push
push
sti
dec
inc
movsl
sub
imul
or
fsubr
inc
pushf
mov
xlat
shrl
stc
mov
pushf
movsb
cld
xor
arpl
cmp
cmp
cli
push
fmuls
or
ficompl
in
push
push
das
cld
jae
aaa
pop
jo
fdivl
add
xchg
push
outsb
out
jge
mov
testl
push
leave
sub
inc
jmp
cwtl
movsl
insb
fcoms
or
cmp
ret
imul
push
lret
xor
test
in
push
jl
test
out
lcall
jg
or
mov
push
jae
aam
inc
sub
or
dec
test
sub
dec
in
add
fcmovu
lret
push
rcr
dec
mov
dec
sti
xchg
cs
or
mov
xchg
gs
xchg
mov
hlt
lds
xchg
mov
lock
mov
mov
in
cwtl
and
mov
pop
rorb
out
sub
aam
rcr
outsl
mov
mov
dec
or
sbb
inc
sbb
popa
out
es
mov
enter
cmp
loope
shlb
popf
mov
or
pop
das
daa
cmpb
gs
pop
js
clc
inc
mov
jmp
adc
fidivrs
sub
fisubs
loopne
dec
shrb
and
bswap
adc
cltd
pop
ret
ljmp
push
xlat
adcb
mov
loopne
and
arpl
out
sub
xor
outsl
mov
nop
xlat
add
push
stc
mov
inc
jl
pop
test
popa
fistpll
in
inc
jo
mov
jg
inc
mov
and
sbb
test
add
push
inc
repnz
cs
cmpsb
lret
mov
outsb
xor
cld
setbe
ja
or
jnp
mov
pop
sub
xor
xchg
dec
pop
ffree
xchg
cmpsb
shl
xchg
adc
gs
call
dec
imulb
inc
cmpsb
lods
outsl
cld
sbb
sbb
xchg
fidivrs
add
imul
ljmp
or
adc
xorl
mov
cmpsb
clc
or
int3
jle
ret
cmp
lahf
lods
mov
sub
jnp
sub
or
imul
or
shld
gs
add
xor
subl
enter
aad
icebp
negl
pop
test
push
repz
popa
xchg
mov
addl
repnz
xchg
rorb
outsl
jge
mov
adc
cmp
cmc
add
shrl
inc
les
xor
xor
dec
or
jae
cmp
filds
decl
pop
test
addl
mov
jl
cmp
xor
mov
push
test
aad
pop
push
adc
dec
cmp
std
mov
push
cwtl
ljmp
stos
fwait
mov
jl
mov
push
sarl
jbe
ljmp
and
pop
inc
push
xchg
jl
inc
jmp
pop
push
mov
int3
dec
mov
xchg
mov
sub
push
cltd
sbb
sub
sbb
mov
ljmp
loopne
fisubrl
fiadds
lahf
out
dec
mov
lcall
fimuls
pop
jmp
mov
iret
call
pop
loopne
test
inc
mov
daa
push
fsubs
xchg
adc
sub
fisubl
inc
xchg
inc
insl
mov
test
fisttpll
call
cs
adc
inc
imulb
push
jae
lock
shll
mov
mov
leave
sbb
std
add
mov
fcmovb
push
jge
jb
test
aad
ja
sub
and
inc
xor
mov
fnsave
enter
pop
xor
adc
inc
mov
add
push
popa
jb
or
mov
dec
imul
sub
inc
test
bound
test
shl
bound
sub
mov
ds
push
mov
mov
test
inc
dec
and
movsb
push
std
mov
mov
in
das
sbb
push
pop
jle
sarb
xchg
dec
xchg
xchg
mov
lret
sbb
aam
pop
and
sub
inc
inc
cmc
shll
xchg
pop
fst
xor
dec
sbb
scas
pop
sbb
loope
clc
out
adc
daa
mov
or
inc
cmp
xchg
pop
lds
ret
xor
into
repnz
insb
push
inc
dec
pop
pop
jmp
jp
mov
sub
stc
xchg
xor
out
pusha
dec
popa
loop
fs
add
shlb
loopne
popa
inc
in
pushl
stos
xor
ret
ret
dec
and
fstpl
and
ja
mov
mov
xor
arpl
iret
jne
scas
push
rcrb
ret
xor
or
adc
xchg
hlt
cmp
jnp
and
jnp
mov
aas
ljmp
jnp
sbb
addr16
push
andps
insl
cmp
jns
xlat
insb
pop
mov
push
jno
incl
insl
adc
aas
mov
jge
push
sbb
push
mov
mov
inc
sub
mov
idiv
push
mov
sti
faddp
jmp
pop
and
jo
lock
in
in
xor
mov
add
enter
dec
pop
sti
stc
testl
lock
lret
daa
clc
push
mov
dec
xor
mov
push
dec
scas
xor
push
pop
mov
jecxz
leave
push
push
push
in
mov
sbb
cwtl
jl
jo
xchg
nop
je
jns
sbb
or
pop
add
adc
enter
xchg
mov
sub
cmp
stos
scas
push
cmp
cmpsl
xor
jl
stc
fprem
sbb
test
std
aam
push
inc
sbbl
cmc
pop
push
clc
dec
or
mov
test
stc
rorl
pushf
arpl
mov
xor
mov
and
scas
bound
xor
xor
ret
insl
cmp
cmp
mov
xchg
nop
sbb
mov
in
mov
jns
mov
sbb
mov
adc
in
xor
insl
addr16
test
sbb
lret
xchg
inc
rorl
xor
ss
pop
mov
adc
lock
push
inc
out
repnz
clc
lret
mov
add
xchg
leave
js
cmp
push
xchg
push
fsts
pop
jecxz
and
xchg
jge
fwait
add
mov
jb
xchg
orb
xchg
and
popf
test
xchg
jge
mov
movsl
mov
ffree
mov
pop
jp
mov
aad
add
pushf
push
test
pop
popf
pop
add
cld
dec
xor
add
loope
popl
into
xlat
rolb
xchg
mov
fucom
aas
lods
iret
lods
repnz
movsl
or
shlb
mov
sahf
dec
inc
sub
cltd
lock
adcb
mov
test
mov
adc
hlt
jle
and
inc
scas
dec
cmc
pop
fcomp
das
xor
lds
int
bnd
jecxz
imul
pop
or
sbb
jnp
and
outsb
ja
pop
cmp
push
adc
clc
bound
pop
pop
clc
mov
cmp
xchg
fsubrl
fiaddl
jp
inc
jbe
movsl
mov
jnp
aas
adc
xor
popa
aas
or
stos
mov
ret
mov
test
test
mov
fwait
push
outsl
push
xor
add
fidivrs
xor
inc
xor
popf
xchg
pop
fsubs
mov
js
rorl
xchg
pop
jnp
dec
ljmp
outsb
push
mov
sbb
mov
sub
jp
xor
cs
jg
sbb
push
push
jl
outsl
cmc
pause
leave
insl
fimull
sub
xor
push
mov
cltd
inc
fnsave
fldt
addr16
xor
mov
jecxz
inc
push
dec
sti
je
add
adc
mov
jns
push
inc
xchg
fisttps
sbb
mov
mov
enter
mov
add
xchg
in
sub
add
dec
aam
mov
sahf
mov
je
gs
xchg
dec
aad
fcomip
out
cmp
stc
inc
mov
xor
mov
cs
movsl
xor
roll
testb
inc
out
shlb
jae
mov
imull
mov
lods
out
bnd
movsl
xchg
inc
inc
add
xrelease
add
mul
mov
xchg
dec
sbb
jp
cwtl
pop
jne
fbstp
cltd
xor
xchg
inc
aaa
cmp
inc
andb
xchg
cli
jmp
mov
jo
adc
jg
pop
xchg
test
lea
sbb
push
xor
lahf
lea
es
cmp
int3
mov
mov
sbb
xor
les
adc
mov
adc
pminub
push
gs
icebp
aaa
dec
sbb
push
cmc
es
test
jns
fisttpl
pop
or
fldcw
frndint
push
push
popa
jb
jo
fwait
cmc
pop
shlb
pop
cmc
jge
sub
dec
jns
lcall
jmp
bound
ret
jl
pop
ret
adc
dec
push
sub
push
jnp
sbb
mov
rolb
clc
mov
mov
ret
subl
out
xchg
sub
into
sub
pop
fsubs
ud2
ret
push
lret
ljmp
xor
lahf
xchg
rcrl
ds
fsubrl
scas
jno
jp
add
cwtl
jg
jb
xchg
rclb
shrb
and
mov
mov
aaa
sub
or
jae
adc
fiadds
cmp
push
dec
jmp
xor
dec
cmpsl
call
mov
into
fisttps
ds
mov
je
cmp
and
fidivrs
sub
movsl
icebp
sahf
rolb
rorb
mov
lods
hlt
iret
clc
cwtl
fs
add
fldenv
call
lock
mov
imul
cltd
mov
ja
xchg
mov
inc
rorb
enter
fsubl
or
dec
and
dec
out
pop
shlb
ja
jo
mov
fcoms
mov
imul
xchg
pop
test
push
sbb
sub
fidivrs
test
mov
adc
mov
cmp
lea
xchg
jl
pop
movsb
imul
jns
or
mov
sub
lahf
shlb
ss
jg
testl
dec
pop
sub
orb
or
xchg
mov
std
inc
dec
in
sub
faddl
inc
push
in
and
pop
int3
or
mov
mov
inc
jg
jbe
or
push
movhps
int
std
enter
dec
outsb
aam
addr16
movsl
dec
xchg
call
ss
cmp
fsubrs
aad
add
xor
xor
push
addb
mov
mov
mov
and
out
mov
stos
mull
mov
roll
add
fisubrs
stc
cmpsl
push
movsl
mov
mov
fldt
insb
mov
push
in
xor
out
jecxz
ret
dec
fcoms
sub
xchg
movsl
push
xor
stos
fs
sub
out
and
push
outsb
lret
push
lea
jl
or
das
stos
popa
mov
out
les
jnp
loope
cmc
sub
lods
addr16
xor
cmp
xor
pop
push
push
shlb
jae
push
xor
lret
mov
mov
xchg
nop
dec
lock
jb
mov
and
lods
lret
iret
xchg
jno
sbb
pop
mov
xor
repz
and
into
jle
xchg
pop
imul
mov
inc
mov
pusha
shlb
int3
sbb
or
in
fsubrl
or
jb
jg
shrl
sub
in
pop
push
inc
cmpsb
cmp
test
xlat
daa
int3
adc
pop
rclb
movsb
sarl
sub
cmp
adcb
jecxz
mov
cmp
xor
or
dec
cs
pop
mov
mov
sbb
stos
xchg
jae
jno
xchg
shr
mov
mov
lret
loope
mov
mov
push
xchg
movsl
call
jl
mov
mov
pusha
stc
mov
and
jo
jl
cmpsl
jl
inc
jge
xor
cmp
jae
enter
int
cld
std
dec
cli
and
lock
bound
adcl
pop
loopne
repz
fldl
adc
mov
rorl
dec
xchg
outsl
xor
add
cmpsb
or
pushf
push
jp
stos
and
cltd
dec
mov
ljmp
push
cmp
adc
inc
subb
pop
test
test
fildll
and
xchg
push
inc
into
outsl
imull
rcl
push
mov
dec
xor
push
fidivrs
insb
test
movsb
xor
jp
push
ror
add
je
adc
ljmp
dec
mov
adc
adc
sub
enter
fldt
push
add
push
xchg
outsl
adc
pop
xchg
cwtl
aam
aaa
jae
sub
aaa
jae
addr16
sbb
repz
stc
fs
test
rolb
ret
mov
or
sub
pop
popf
sub
lahf
sbb
mov
xor
lods
jmp
fmulp
adc
imul
mov
push
cmp
cmp
out
cmp
pop
loop
inc
add
decb
mov
shlb
push
inc
and
insb
pop
inc
in
cmpsl
std
stos
push
test
jl
and
add
mov
fstl
mov
movsl
xchg
orb
jecxz
cmpsl
mov
jae
incl
aas
xchg
cltd
loope
cmp
std
pop
filds
aam
subb
aas
je
incb
das
push
clc
cmc
shll
popf
pusha
in
mov
pop
mov
push
pop
ds
jns
or
packssdw
add
test
push
xchg
jecxz
aad
dec
sub
mov
repnz
scas
shlb
or
inc
ret
lock
test
or
and
sub
push
mov
hlt
outsb
inc
pushf
daa
xchg
sti
gs
loope
add
mov
jnp
pop
add
les
and
jne
add
fstpt
scas
stos
or
shlb
pop
sub
pushf
jp
addl
rclb
ret
sub
jb
mov
jge
fcmovnb
aam
clc
iret
repz
push
mov
aas
cmpl
out
aam
inc
das
fwait
sti
cmc
daa
cs
pop
not
pop
loope
add
les
mov
fidivrs
or
xchg
jne
push
mov
stos
aad
aad
and
jbe
addb
mov
clc
out
jbe
mov
sub
pop
xor
push
clc
push
xor
sbb
dec
fs
pop
scas
adc
mov
mov
xor
inc
push
mov
leave
movsb
fsubrs
jp
xlat
fmuls
loop
sub
dec
xor
dec
arpl
loopne
adc
fidivs
sar
mov
pop
dec
mov
repnz
movsb
pop
lods
adc
add
into
or
jg
aam
dec
lds
inc
test
push
shrb
stc
fsubr
in
aad
aas
scas
jno
mov
mov
or
mov
dec
mov
or
inc
dec
call
ds
or
test
mov
cli
int3
pop
cmp
popa
sbb
add
and
in
mov
or
cld
fidivrl
mov
inc
xchg
xor
and
sub
dec
push
xchg
ljmp
sub
push
inc
cld
fmuls
gs
push
sbbl
es
mov
jnp
dec
pusha
stos
jle
lods
es
mov
popfw
lret
loope
xchg
nop
mov
pop
dec
jmp
divps
mov
push
out
xchg
je
lods
stos
xor
sbb
mov
and
xor
mov
imul
gs
rsm
mov
push
dec
xor
fcompl
fstl
mov
inc
push
or
mov
xlat
hlt
xor
mov
imul
xchg
stc
arpl
bound
cmp
adc
out
or
inc
cmpsl
fnsave
das
enter
sbb
arpl
sub
jg
lret
mov
push
sbb
sbb
inc
adc
sub
sbb
inc
cwtl
mov
std
and
and
push
mov
pop
nop
add
and
and
popa
push
fcomi
cmc
adc
xchg
daa
jecxz
les
sbb
push
mov
sbb
inc
inc
cld
daa
fwait
xor
mov
push
ja
jp
dec
mov
mov
cli
xchg
jb
ss
push
out
leave
fildl
lret
push
stc
cmp
and
decb
dec
dec
xor
push
inc
mov
and
add
cwtl
mov
pop
shll
jb
aas
test
imul
xchg
shll
int
sahf
fsubs
mov
dec
or
sarb
das
aaa
add
push
movsl
sbb
jl
cld
jle
xchg
inc
pop
jle
mov
dec
jle
push
pop
jecxz
mov
jg
sub
call
mov
mov
in
out
add
scas
jmp
pop
sbb
movsb
adc
xor
or
jg
rorl
mov
jl
pop
in
dec
mov
xor
and
cmp
int3
xor
xchg
xchg
dec
into
or
sbb
fistpll
idivb
out
nop
addr16
enter
add
mov
stos
inc
fbld
sti
mov
xchg
mov
sub
icebp
scas
mov
pop
sub
mov
push
outsl
fidivrs
jmp
test
ret
out
dec
push
dec
inc
jg
mov
notl
xchg
in
xor
shll
mov
sar
lods
stos
enter
mov
dec
add
lret
stc
icebp
clc
push
mov
mov
cmpsl
mov
xchg
out
sbb
repz
and
out
pop
popa
std
fistpll
jae
pop
pop
stc
adc
jb
dec
sub
cmpb
xchg
enter
data16
xor
mov
movl
shlb
inc
lods
dec
ret
mov
decl
fstp
movsl
mov
cmp
jmp
mov
inc
mov
pop
cs
insb
stc
push
or
and
and
les
cmc
dec
dec
loop
add
test
bound
and
mov
mov
enter
dec
or
adc
aas
popa
inc
lret
xrelease
pop
adc
rcr
mov
jmp
stc
fcoml
loopne
shlb
rol
pop
je
inc
push
mov
lds
push
cmc
adc
push
jnp
std
inc
hlt
or
xchg
inc
daa
fwait
add
icebp
sub
mov
aad
fs
push
lock
sub
jmp
ret
or
lock
jo
das
push
dec
and
inc
mov
test
xor
push
inc
mov
mov
jmp
dec
test
repz
pop
xchg
jnp
mov
cmp
pop
xor
imul
jge
popa
out
cmp
outsb
adc
jmp
cmpl
add
orb
imul
cwtl
mov
addr16
cwtl
outsb
shlb
fbstp
sti
push
mov
xor
rclb
add
clc
push
das
inc
inc
mov
adc
pop
or
cmp
mov
cltd
sub
push
xor
adc
xchg
pop
push
mov
push
shll
inc
jno,pt
stos
cmpsl
jnp
push
inc
std
cmp
pop
scas
xchg
repz
int
mov
mov
shrl
dec
movsl
imul
add
xchg
mov
ss
push
add
aad
lds
or
loopne
add
pop
lea
mov
cmc
push
xchg
in
jno
xchg
pop
xorl
jecxz
out
int
iret
push
jmp
mov
cltd
push
repnz
gs
mov
jl
loopne
in
pop
dec
push
mov
lods
scas
lahf
fdivp
and
xor
pop
dec
repz
ljmp
pop
and
sub
pop
int3
fdivl
fwait
and
int3
dec
push
add
stos
movsb
cli
pop
xor
aaa
xchg
xchg
loope
clc
int
je
mov
mov
aas
fdivr
cmp
daa
fistpll
div
or
repz
cld
push
arpl
xchg
leave
dec
xor
stos
cld
out
testl
ds
mov
jno
fs
and
push
sbb
dec
outsb
pop
scas
lds
or
inc
aam
cmp
pop
or
push
push
mov
outsb
loop
es
inc
fists
xchg
jmp
push
sbb
loopne
sbb
xor
out
jmp
ret
add
scas
cmp
push
fisubrl
gs
loop
sub
push
test
mov
je
sub
and
mov
test
mov
adc
jecxz
jmp
xor
mov
inc
sub
push
adc
iret
mov
ljmp
push
nop
test
arpl
add
mov
in
inc
mov
xchg
mov
movb
adc
jb
push
mov
xor
xchg
jae
je
mov
fdivs
sub
les
xor
jl
sti
fildl
test
or
scas
lods
repz
and
dec
fsincos
scas
fcompl
aad
lock
lods
std
mov
loope
sub
xchg
sub
push
or
repz
push
sub
ja
xorb
mov
jne
fs
sbb
jno
add
pop
cmp
mov
sbb
pop
mov
filds
das
mov
pop
add
aas
sti
lods
jmp
test
pop
stos
dec
aas
call
loopne
stc
ljmp
sbb
int
out
jmp
sub
inc
in
fwait
inc
rolb
subb
lea
mov
sbb
fucom
lea
or
xor
add
les
sub
xchg
jae
aas
xchg
lods
mov
pusha
stc
ss
pop
pop
cs
or
shll
rcrl
sti
mov
in
mov
adc
jno
push
dec
mov
xchg
push
fstpt
ds
mov
std
call
sbb
imul
push
jns
adc
test
jbe
cltd
mov
mov
test
or
push
mov
hlt
push
ds
adc
mov
xor
aam
mov
int
jge
adc
out
cmpsb
fistpl
mov
call
movsl
adc
popa
mov
dec
or
ss
ja
in
fbstp
push
lods
cltd
inc
jbe
ja
cs
pop
and
ljmp
sbb
mov
rcll
jo
mov
push
aam
mov
dec
cmpsl
add
push
sub
and
dec
ficomps
int
mov
call
xor
and
and
into
cmp
loopne
lock
push
inc
imul
scas
daa
dec
insl
and
ljmp
daa
mov
je
cli
jmp
movsl
fstpl
push
fsubs
fscale
fidivl
jno
mov
in
cmp
pop
negl
lret
rclb
sti
lcall
aad
inc
sbb
call
push
adc
cmp
cmp
pop
xor
imul
adc
xchg
ret
lods
cmp
mov
dec
dec
adc
cld
imul
or
cmp
fs
and
loopne
jmp
sbb
leave
call
pop
repz
movsb
or
pop
and
mov
jge
cmp
inc
or
jmp
dec
cmpsl
test
xorl
lods
bound
cwtl
pop
incl
mov
test
sbb
mov
add
icebp
aad
push
or
cltd
inc
mov
lret
enter
in
testb
ds
sbb
xor
scas
popf
pop
sbb
mov
test
adc
mov
jl
or
inc
pusha
sbb
scas
popf
cli
scas
shr
and
pop
dec
cmovge
jmp
daa
sub
mov
nop
and
pop
int
fmulp
and
sbb
cmp
ret
mov
and
jae
dec
andl
dec
sub
imul
jmp
or
int3
fnstenv
imul
aam
xchg
nop
insl
inc
sub
and
adc
jle
jo
dec
lods
adc
pop
add
movsb
aam
je
push
test
mov
inc
nop
fwait
lods
mov
xor
pop
aad
pop
jp
sub
xor
xor
pop
fs
sahf
mov
mov
into
insl
jge
cld
inc
or
lret
fs
cmp
xor
cmpsl
cmp
sbb
and
xor
mov
dec
cmc
hlt
js
add
mov
cmp
cmpsb
dec
test
inc
jmp
jle
jl
sub
loope
sti
jbe
cmc
ret
je
push
shll
xchg
insb
pop
lea
stos
imul
mov
leave
lcall
sbb
mov
pop
jecxz
mov
mov
insl
push
push
pop
jno
stos
call
jb
jp
lods
sbb
cmp
jbe
dec
popf
test
ljmp
fcoms
ret
xlat
loopne,pn
fdivs
or
int
mov
js
test
stos
aam
cs
and
mov
add
cwtl
mov
adcl
inc
popf
cmp
insb
loop
xchg
dec
push
test
mov
cmp
fnstenv
xchg
push
push
ret
push
sbb
mov
test
or
in
in
lds
lcall
inc
sar
imul
mov
cli
or
mov
hlt
loopne
inc
inc
out
inc
testb
or
sub
test
add
lret
mov
lods
das
inc
push
ret
mov
jle
nop
ja
fmul
jle
fldenv
out
sbb
test
adc
mov
adc
int3
inc
shll
sbb
xor
jbe
pop
hlt
fisttps
notb
callw
mov
fsubs
mov
mov
lret
int
fldt
cli
xor
int
xor
sub
shll
outsb
add
sahf
pop
es
and
adc
mov
in
dec
sub
in
or
or
jns
push
mov
aas
loop
inc
and
lret
or
negb
mov
lcall
dec
imul
lret
cli
push
sub
cmp
lock
aam
push
sub
and
data16
test
stc
data16
sbb
sbb
mov
xchg
in
pop
out
pop
push
add
aad
out
call
jne
mov
inc
dec
and
notl
cmp
enter
mov
jp
ljmp
xor
jno
lea
outsl
arpl
cmp
loop
dec
jle
stos
xchg
sub
int
adc
or
push
sbb
pop
mov
mov
sysenter
xchg
bound
pop
sub
and
xor
xchg
int
stos
add
xchg
lretw
shlb
cmp
add
pop
or
pop
imulb
dec
xchg
mov
push
dec
lods
mov
sbbl
inc
jbe
clc
shl
jmp
std
sahf
clc
add
mov
xchg
cmpsl
sub
or
mov
xor
bound
jle
dec
fimuls
mov
test
push
mov
dec
test
dec
leave
mov
inc
or
jbe
jns
xchg
fs
and
cmp
mov
std
jp
addr16
push
push
outsl
dec
sti
xor
syscall
mov
enter
jp
and
mov
and
sbb
mov
pop
lods
cmpl
test
idivb
adc
lea
pop
push
mov
jne
push
xchg
fildll
inc
and
push
daa
fists
and
stc
and
dec
push
pop
xchg
xchg
test
sahf
clc
ret
sub
and
inc
mov
pop
push
ret
insl
ja
push
add
or
js
jno
mov
jl
dec
xchg
mov
shl
ret
adc
xchg
jle
dec
inc
pop
inc
xor
mov
imul
arpl
mov
dec
xchg
cmpsb
sbb
pop
out
adc
mov
add
adc
leave
jne
addr16
popf
add
into
add
int3
or
out
bound
add
shrb
sahf
int3
cld
movsl
adc
ljmp
cmp
xor
add
aaa
jno
xor
mov
jo
clc
fcmovnbe
lahf
xchg
mov
scas
lcall
pop
icebp
push
scas
jg
sbb
leavew
sti
adc
xor
xorb
cli
or
fmull
cmp
mov
popa
jnp
negl
mov
and
sahf
sub
lock
mov
ret
test
ss
inc
jl
shll
or
mov
jle
mov
jbe
scas
mov
leave
mov
adc
add
fstl
mov
leave
shlb
aad
repz
out
push
cmp
jmp
sub
mov
dec
jno
sub
cmp
and
mov
add
cmp
mov
adc
pop
sbb
icebp
pop
push
sbb
lock
test
mov
fwait
inc
cmp
in
sbb
adc
jne
xlat
test
mov
ret
iret
test
or
push
and
lea
xchg
inc
or
mov
dec
sbb
je
out
je
push
orl
or
js
adc
sahf
pop
gs
out
loop
gs
shl
sub
mov
lcall
and
adc
mov
movsl
push
fiadds
stos
iret
push
rclb
popf
sar
push
and
mov
mov
xlat
sub
mov
add
call
jb
cmp
push
fsubrl
mov
addr16
out
mov
popa
cmpsl
lret
mov
movsb
sbb
inc
push
lea
push
pcmpeqb
subb
cmp
inc
sbb
xor
ds
pop
xchg
test
dec
jb
and
fcompl
pop
mov
dec
sub
mov
jae
mov
shl
sarl
inc
ljmp
outsl
cmp
outsl
and
fdivp
test
pop
ficomps
std
mov
cmpsl
in
retw
xchg
dec
insb
imul
movsb
sub
pop
pop
dec
std
rorb
jbe
scas
push
loope
sbb
cmp
out
in
inc
lret
dec
jmp
add
push
pop
ret
mov
pop
lcall
adc
mov
lret
mov
loope
jmp
pop
enter
pusha
es
cmp
inc
pop
push
cmpsl
push
dec
xchg
aad
subb
jmp
inc
jge
insb
xchg
jnp
outsb
jb
inc
xchg
es
icebp
out
dec
es
mov
out
push
adc
or
fdivrl
pop
loopne
daa
push
out
fisttps
dec
jmp
push
xchg
sbb
mov
ret
mov
mov
fwait
inc
push
daa
push
xor
stos
xor
push
push
shll
sahf
scas
fisttpll
movsb
dec
popa
add
pop
lock
imul
sarb
add
mov
and
inc
rcll
dec
shrb
cltd
sbbl
scas
mov
inc
inc
xchg
cmp
lods
add
dec
xchg
inc
push
ss
pop
rorb
push
fildl
pop
shll
in
ficompl
stos
ljmp
cmp
in
fnstcw
and
push
cld
push
out
xchg
js
repnz
mov
pushf
xchg
and
pop
rclb
mov
pop
and
shll
test
fildl
dec
or
mov
or
xor
in
mov
cmp
rcrb
in
pop
pop
inc
ror
lahf
push
mov
sbb
ja
push
push
jmp
and
lcall
push
xor
jmp
loope
mov
rorl
jae
je
aad
mov
pop
ret
lret
pop
add
mov
cwtl
dec
sbb
sub
xor
push
pop
pop
xchg
cli
or
push
mov
adc
push
dec
and
lret
or
and
and
inc
xchg
pop
mov
daa
mov
cmp
test
mov
pop
or
cmpsl
jo
lret
xlat
das
movhps
mov
sub
test
cmc
and
push
pop
stos
adc
jl
scas
mov
push
push
cld
adc
push
adc
and
push
jmp
stos
fisubrl
inc
push
sahf
add
jl
flds
outsl
sti
mov
fwait
cmpsb
out
sub
ljmp
xor
add
rol
cmp
fs
lret
sub
lret
aas
rcrl
add
inc
add
fisubl
jecxz
int3
xor
push
push
out
push
les
pusha
push
fmull
shlb
ljmp
mov
and
stos
sbb
mov
dec
fistpl
sub
gs
dec
jne
inc
dec
addr16
jns
hlt
jne
lock
imul
adc
sub
sbb
in
mov
out
xchg
hlt
cmp
loop
ret
push
fistl
mov
es
sahf
call
cmpsb
mov
mov
pop
and
das
xor
imul
jne
mulb
xchg
xor
mov
jbe
scas
mov
loop
es
mov
aam
cltd
out
loopne
pop
cmp
add
adc
xchg
adc
mov
push
mov
enter
cmp
jge
xchg
push
sarl
mov
push
mov
add
and
insl
leave
mov
adc
cwtl
out
mov
scas
test
or
pop
std
leave
sti
insb
shrl
inc
xor
xchg
fucomp
jo
aas
outsl
scas
cmpsl
fildll
mov
inc
lea
xchg
lret
xchg
fistl
mov
test
aas
outsb
xchg
pop
fidivl
cli
mov
int3
iret
insb
pop
sti
movsl
and
mov
xchg
addl
jbe
pop
fnstsw
cmpb
dec
mov
jno
ljmp
add
push
ret
fistpl
and
loopne
mov
jle
dec
and
out
cmpsb
xor
push
fs
push
into
es
fists
out
lahf
loop
cmc
xchg
and
cmp
mov
mov
cltd
sub
push
std
lret
jbe
pop
sti
push
push
mov
lret
cwtl
xchg
jl
scas
mov
aas
movsl
sub
cli
cmpsl
mov
or
into
adc
sti
scas
push
xor
test
popf
mov
sub
jge
js
jno
xor
scas
pop
dec
sbbl
xor
sbb
cmpsb
inc
jb
jbe
icebp
and
outsb
xchg
jge
adc
lods
mov
push
ja
xchg
testb
sti
jae
mov
jp
push
ret
add
or
leave
repz
jge
jg
cmp
push
scas
adcb
rorb
frstor
int3
pop
mov
jecxz
mov
scas
adc
loope
fsubrs
outsb
repnz
and
pop
sub
sbb
mov
iret
int3
mov
jle
mov
js
adc
mov
je
mov
sahf
jecxz
cmp
lcall
test
adc
xor
and
adc
sbb
and
gs
nop
mov
popa
mov
mov
testl
or
mov
and
fcomi
or
mov
mov
dec
testb
mov
repz
pop
push
test
jbe
mov
xor
xchg
ja
sbb
hlt
roll
inc
pop
mov
lea
mov
mov
js
imul
mov
test
xor
stos
mov
mov
jp
dec
sub
pop
sub
or
push
mov
push
daa
add
ret
mov
pop
cmp
mov
popa
xor
xchg
mov
jmp
enter
andb
into
mov
scas
push
jb
mov
xchg
xor
pop
mov
inc
outsb
mov
and
sub
scas
scas
in
lret
fmuls
add
jmp
bound
enter
sahf
sub
lahf
int
hlt
xor
insb
pop
fiadds
push
mov
jge
xchg
or
push
repz
mov
outsl
popf
outsb
sahf
xor
adc
insl
jb
jbe
jle
fldenv
and
popf
fnstenv
movsb
in
movsb
and
or
mov
cmp
cs
inc
mov
mov
ss
pop
inc
sbb
ficomps
stc
roll
xchg
inc
push
mov
xchg
mov
push
dec
jns
dec
cmpsl
jl
ds
xor
movsb
gs
sbb
mov
mov
dec
push
dec
clc
mov
mov
ficoms
std
int3
mov
mov
dec
imul
hlt
jle,pn
addr16
loopne
pop
mov
push
push
mov
mov
inc
cmp
or
call
pop
mov
fisubrs
or
push
push
imul
xchg
mov
test
push
lcall
xor
or
in
lock
inc
lret
add
fwait
and
ret
add
mov
push
add
jle
jmp
adc
mov
mov
cmp
lods
and
inc
cld
push
cltd
bound
xchg
and
dec
imul
aad
insb
sbb
orw
push
xchg
popa
std
adc
cli
jbe
cs
jne
imul
mov
inc
xchg
cmp
dec
inc
ss
arpl
ds
jecxz
jbe
arpl
movsb
mov
leave
ljmp
xchg
pop
jge
mov
dec
fimuls
test
xchg
xor
decb
and
pop
call
decb
push
mov
dec
pop
inc
mov
and
xchg
add
push
lret
xor
xor
cltd
into
adc
ss
icebp
mov
xchg
jp
mov
addr16
and
mov
xor
sahf
and
fs
jle
stos
orl
mov
dec
ret
cmp
mov
ds
sarl
fstpl
mov
cwtl
inc
outsl
int
and
jbe
add
push
int
mov
repnz
add
dec
into
mov
inc
lds
cmp
scas
xchg
ss
add
pusha
mov
mov
out
add
cli
ja
mov
scas
fildl
mov
lds
and
pop
cmp
imulb
test
or
scas
call
fstps
jl
sub
mov
test
or
xchg
enter
inc
inc
rorl
xchg
fists
mov
mov
movsl
jb
fidivrl
out
dec
xchg
jge
cmp
xlat
jmp
call
lahf
xchg
pushf
xlat
lahf
or
shlb
mov
inc
fiadds
cmp
mov
popf
jmp
sbb
or
pop
shrl
fdivrs
ja
adc
pop
or
push
test
arpl
pop
and
cmp
pushf
testb
mov
and
ret
xor
cld
jo
mov
popf
stc
mov
sbb
mov
adc
ja
testl
xchg
push
test
fs
nop
and
cmpsl
pusha
mov
pop
mov
mov
sar
push
dec
and
jmp
xchg
mov
jb
sub
lret
jo
inc
movsb
cmpsl
xor
jmp
cmpsb
ret
jge
arpl
jns
out
pop
mov
cli
seta
mov
xlat
mov
jp
push
mov
roll
stc
inc
lds
pop
stos
xchg
xor
xchg
jg
mov
sbb
das
jl
mov
xchg
jns
test
insl
push
nop
mov
xchg
es
dec
dec
mov
aaa
aas
pop
mov
aaa
lea
cwtl
and
aam
pusha
adc
adc
push
and
notb
push
xlat
test
addb
cmpsb
sti
dec
jb,pn
sub
subb
or
add
pusha
sub
xchg
pop
push
add
inc
jp
pop
adc
daa
bound
insl
mov
mov
push
jnp
inc
jl
mov
arpl
lret
wbinvd
mov
pop
pop
ret
mov
fimull
and
loop
push
mov
pop
mov
sub
movd
xchg
cmp
push
jae,pn
hlt
inc
dec
out
lcall
sar
nop
out
loope
mov
cmp
push
push
gs
push
dec
mov
andb
adc
cltd
push
std
int
push
pop
xor
xchg
jbe
js
jo
arpl
pop
jle
and
fxch
and
test
push
sub
mov
ret
testb
lcall
int
mov
pop
cmp
mov
pop
jge
jmp
daa
mov
dec
std
imul
push
loop
jns
leave
sub
aaa
clc
scas
or
inc
sub
mov
daa
inc
lods
fidivrs
fwait
jb
fs
es
mov
cmp
push
ljmp
imul
cltd
cmp
cltd
mov
push
addl
and
ja
cmp
and
aas
insl
adc
mov
rol
ss
mov
dec
js
mov
inc
lcall
fs
ss
jmp
pop
push
dec
add
cmpsl
lods
js
sbb
pop
or
fldl
out
insl
sbb
sbb
and
jecxz
sub
es
jmp
cli
mov
mov
in
ljmp
or
nop
ret
pop
mov
inc
cwtl
push
lcall
lret
jl
xchg
mov
lods
movsl
xchg
fwait
clc
test
push
xor
gs
sarb
mov
lahf
jmp
and
outsb
shll
add
out
cli
imulb
mov
add
inc
cmpsb
jmp
jp
inc
loope
pop
mov
add
pop
ljmp
add
cld
cmp
add
aas
xor
push
xor
fucomp
push
mov
mov
xor
mov
push
mov
jo
xor
jle
fmull
inc
test
and
icebp
leave
mov
out
stos
jb
pushf
add
je
pop
mov
jl
je
mov
sbb
dec
das
jb
lods
pusha
test
insl
mov
dec
pushf
sbb
xchg
xchg
or
push
stos
gs
inc
mov
adc
cmp
bound
scas
in
pop
inc
jge
xor
push
jmp
call
inc
mov
scas
into
cmp
xchg
test
jmp
jp
idiv
stos
mov
xor
loop
imul
fistpl
imul
mov
cmc
outsb
pop
es
shr
cli
aaa
jne
std
mov
push
dec
rol
push
je
aad
movsb
hlt
into
fsubs
pop
cmp
loop
cwtl
mov
andb
insb
pop
add
add
test
loopne
xor
and
loopne
lods
insb
xor
xchg
push
or
jg
push
rcll
sub
jne
or
rol
mov
lds
nop
pop
mov
fadd
int
pop
push
pop
insb
shrb
lock
xchg
xor
push
aas
add
lods
jge
jb
adcb
jle
pop
out
xor
fs
push
jno
movsb
arpl
int
pop
lcall
mov
dec
and
cs
sarb
mov
mov
xor
enter
inc
push
jge
sbb
dec
or
cmp
mov
push
into
or
stos
fwait
outsl
out
push
sub
fisubrl
sahf
insb
mov
subl
add
ror
test
insb
dec
xchg
lods
and
mov
loope
add
adc
popf
mov
inc
in
sbb
ss
xor
outsb
adc
jbe
ja
dec
xchg
test
push
into
mov
mov
or
xchg
pop
sub
jnp
push
inc
insl
test
xchg
iret
sarl
add
push
sub
mov
xor
inc
pop
int
push
and
dec
ja
mov
pop
adc
cmp
jge
xchg
xor
subl
mov
jbe
xor
adc
in
xchg
test
jns
daa
mov
fcomi
shll
xchg
dec
stos
rorb
stc
push
xor
mov
xchg
movsb
push
dec
jae
ficompl
jbe
and
mov
sbb
lods
mov
daa
mov
scas
in
push
push
jg
nopl
pop
sub
lahf
dec
xor
push
fidivrl
into
lcall
into
sub
mov
lcall
xchg
dec
lret
xor
xchg
insl
cmpsb
rsqrtps
cmp
pop
xor
arpl
mov
ficompl
std
adc
cli
call
outsl
and
hlt
sub
xchg
negb
fiadds
das
sbb
xor
ja
jl
jo
jp
std
loop
xchg
sub
or
into
cmpsl
xchg
pushf
jp
inc
lea
jmp
add
inc
fs
mov
xchg
inc
dec
xchg
adc
addl
push
mov
insl
paddusw
jecxz
mov
gs
popf
adc
lds
sub
mov
negb
fwait
insl
fimuls
roll
sub
jl
lock
fmuls
mov
loopne
clc
xor
in
sarb
jae
sbb
sub
sub
xchg
je
adc
adc
inc
and
pop
adc
lea
mov
fcmovnu
je
cmp
ret
and
add
jecxz
and
add
std
stos
je
in
jne,pt
sbb
and
mov
lret
add
push
jl
cmp
push
or
js
push
sub
jne
mov
adcb
das
sbb
cmp
or
shl
cmp
jae
inc
fistps
sub
push
in
mov
scas
or
ret
add
cmp
add
add
std
pop
mov
cmp
shl
les
out
dec
xor
jl
mov
int3
out
shll
xor
inc
arpl
mov
pop
sldt
sub
fisttpl
push
adc
mov
fwait
mov
sub
push
or
mov
enter
xchg
dec
out
mov
stos
mulb
add
mov
xchg
aaa
cli
sub
pusha
faddl
rcl
test
pop
insl
xchg
lahf
icebp
movhlps
scas
bound
add
sahf
push
shll
or
push
xor
imul
push
dec
push
scas
fiaddl
cmp
jae
jge
lahf
jo
into
out
xchg
adc
cmp
pop
jecxz
icebp
jae
in
push
imul
aad
mov
aam
push
ret
popf
imul
xlat
int
sub
pop
push
mov
sti
fisubs
add
cs
sub
mov
dec
cmp
and
mov
push
pop
lds
sub
mov
xor
dec
pop
inc
xlat
in
dec
mov
sub
pushf
inc
pop
scas
stos
xlat
loope
adc
fldenv
roll
xchg
lahf
pusha
leave
fs
push
mov
stos
sub
not
mov
into
or
cld
or
enter
addr16
push
add
jl
push
mov
test
or
pop
arpl
faddp
push
stc
push
jbe
inc
push
add
xchg
mov
ljmp
push
shrl
jns
in
mov
xor
test
aam
mov
mov
std
in
cmpsb
nopl
xor
stos
sub
movsb
stc
cltd
jp
xor
pop
cld
aam
and
pop
mov
sbb
jecxz
push
daa
xchg
pop
icebp
ss
daa
adc
add
mov
std
lret
add
idiv
mov
add
mov
push
insl
xor
adc
pop
jge
nop
ljmp
fwait
mov
lret
pop
ljmp
stc
fucomi
sbb
pop
pop
jns
inc
push
or
and
push
sub
outsb
add
je
pop
loope
loope
addps
repz
sbb
sbb
push
es
sub
pop
lahf
mov
push
sbb
inc
pop
ja
and
cmp
mov
imull
or
insl
pop
in
int
push
cld
pop
jo
push
popf
ficomps
mov
dec
out
shlb
mov
adc
sbb
sbb
in
push
push
adc
mov
or
xchg
pushw
fnsave
pop
test
cmp
xchg
pop
cmpsl
xor
dec
push
mov
dec
or
cmp
add
fdivrl
or
stos
fcompp
repnz
xor
sub
jmp
mov
ja
fdivrl
stos
add
xchg
mov
int
mov
push
faddl
mov
cli
lret
enter
out
inc
cmpsb
jo
shll
mov
addr16
lods
test
in
and
test
addr16
cmc
sub
mov
jns
out
inc
inc
cmpsb
rclb
mov
pop
aas
mov
stos
repz
mov
pop
push
arpl
and
aaa
lds
movsb
ss
xchg
dec
ret
cltd
fisttpll
aaa
push
lret
xlat
sub
push
mov
loopne
adc
ret
mov
xchg
mov
mov
in
add
scas
inc
cmp
mov
ljmp
xchg
jg
imul
dec
lods
imul
mov
int
xchg
cmp
iret
int3
nop
mov
mov
jg
push
mov
aaa
shlb
cli
fucom
jbe
into
sbb
lret
push
push
in
repnz
sbb
cmp
cmp
cmp
lret
popf
cltd
rcrl
dec
xchg
jae
in
pushf
dec
fisttpl
cmc
mov
std
psllw
sbb
movsb
xor
or
aas
cmpsl
fcmovbe
push
fbld
mov
clc
dec
mov
push
pop
add
fmul
in
mov
lea
lods
xor
lods
enter
ds
popa
out
mov
cltd
dec
add
in
dec
or
sahf
and
adc
and
and
jle
mov
dec
cmp
xor
mov
data16
mov
xchg
iret
sub
scas
mov
dec
push
adc
add
mov
sti
and
or
mov
push
andb
pop
jnp
pop
pop
mov
xor
aaa
std
mov
ja
movsb
mov
sbb
jo
inc
leave
jo
mov
cld
cmp
movsb
pop
std
xor
in
addr16
aam
fstpl
ds
fwait
push
rep
les
pop
lods
dec
mov
pop
pop
push
ljmp
jp
daa
push
addr16
fistl
sub
popa
scas
cli
pusha
aaa
xor
imulb
jecxz
add
cmpsb
mov
jns
addr16
pusha
scas
inc
mov
mov
inc
jmp
ja
sub
cwtl
cmpsl
clc
fcmovu
mov
add
scas
jecxz
pop
pop
cmp
fdivl
mov
cmpsl
xchg
imul
inc
push
sti
mov
addr16
sbb
xor
add
std
mov
dec
pushl
pop
inc
jns
cmc
add
addr16
pop
lret
pop
xlat
in
enter
mov
cmpsl
and
cld
mov
idivl
cli
and
dec
notl
push
lods
xor
push
fidivl
jb
bound
lea
mov
loope
movsl
xchg
dec
sub
inc
icebp
stos
push
push
jmp
pop
and
lcall
push
jae
jmp
mov
ficoms
push
cs
lods
push
es
xlat
xchg
inc
loope
insl
add
ficompl
xchg
int
xchg
mov
scas
sub
jae
or
pop
shrl
cmp
out
inc
cli
or
call
dec
in
test
dec
push
add
mov
lret
jbe
loope
pushf
mov
mov
mov
dec
aam
dec
ret
std
pop
cmpl
sub
movl
inc
shl
icebp
popf
inc
or
inc
fsubl
out
inc
mov
mov
pop
testl
inc
ja
stos
outsb
inc
sbb
xchg
push
mov
dec
jb
in
test
ffree
sbb
cmp
mov
popf
inc
inc
jle
repz
gs
inc
add
mov
mov
adc
jecxz
jg
mov
popa
mov
cmp
mov
jg
out
dec
pop
mov
xchg
sbb
std
pop
orl
cli
das
movsb
rolb
test
inc
outsl
mov
in
dec
xchg
sahf
pushf
jmp
ljmp
lret
jp
out
fidivrl
pushf
xchg
push
dec
mov
push
pop
imul
sbb
sbb
sete
adc
stc
push
int3
mov
mov
iret
mov
clc
icebp
popa
insb
int3
lret
add
lret
mov
mov
mov
fucomi
or
inc
in
or
sarb
int
ret
test
repz
lret
jae
xchg
xchg
mov
xor
push
inc
adc
nop
mov
inc
fisubrs
sahf
adc
push
in
gs
inc
mov
mov
pop
and
mov
loop
jno
pop
xlat
cmpsb
xchg
jae
les
and
cltd
cmc
jp
add
data16
push
lea
ret
push
xchg
stos
mov
dec
pusha
jb
mov
mov
sbb
jne
test
xchg
mov
or
mov
push
mov
xchg
xchg
ret
popa
jns
int3
into
push
sub
imul
jnp
mov
imul
jl
aas
lds
push
sbb
inc
cltd
insl
mov
inc
js
add
xchg
fimuls
dec
xor
movsl
icebp
stos
gs
in
xor
stos
add
push
sub
cmp
ja
insb
mov
adc
xchg
adc
dec
fsubl
stos
es
test
into
sbb
cwtl
add
aaa
push
das
inc
sub
mov
xor
dec
icebp
or
test
cltd
inc
push
dec
push
aas
pusha
ljmp
idivl
pop
int
xor
nop
out
aad
pop
imul
je
enter
jo
push
shlb
scas
inc
popf
cli
imul
push
sti
jg
push
adc
xchg
sbbb
out
adc
sub
stos
pushf
leave
adcb
jle
jg
or
test
in
bound
sarl
dec
aas
fcos
inc
icebp
in
mov
mov
push
xchg
nop
mov
dec
out
xor
in
xchg
lock
mov
mov
inc
out
jns
daa
push
mov
xlat
aas
jns
aaa
dec
xor
push
jnp
jae
cmp
pop
sub
xor
andb
pushf
fcoml
xor
adc
mov
push
and
push
arpl
cmp
inc
in
and
in
mov
mov
jle
out
add
es
popf
mov
xorb
fcmovnbe
sbb
leave
xchg
mov
adcb
negl
pop
push
pusha
cs
inc
mov
jne
out
lods
lods
sbb
jmp
ss
test
adc
scas
test
pop
outsb
negb
sbb
jnp
jge
leave
mov
stos
sub
mov
bnd
xchg
outsb
sbb
test
cmc
arpl
sub
add
pop
stc
cmp
in
xor
fsubs
std
scas
adc
sahf
mov
fs
jnp
inc
mov
ss
dec
dec
mov
jp
test
lods
pusha
testl
popa
push
enter
pop
xlat
leave
loope
inc
in
fimuls
cmp
push
mov
sbb
xor
jns
mov
fsubrp
or
xor
jl
gs
cmp
xlat
xchg
cwtl
sbb
sub
mov
mov
nop
xchg
dec
and
and
sbb
sbb
mov
mov
pop
stos
or
loopnew
cld
pop
test
cmp
pushf
sbb
xor
jmp
cmp
imul
ja
lock
push
mov
pop
jae
or
xchg
mov
xor
enter
sbb
fisttps
mov
jle
inc
push
sub
push
aas
addr16
xor
into
aaa
adc
mov
aaa
sub
push
dec
cli
adc
test
aad
adc
call
in
or
popf
gs
mov
aam
lret
dec
jmp
pusha
pop
push
dec
pop
sub
mulb
mov
imul
faddp
xchg
xor
imul
or
loopne
sbb
cmp
jp
les
mov
xchg
sbb
mov
push
push
inc
push
lahf
push
or
push
popa
gs
mov
stos
bound
xor
out
or
jp
iret
mov
mov
cli
rcl
into
inc
lret
mov
dec
xchg
insb
inc
aaa
es
or
ret
lea
or
mov
outsb
jmp
je,pt
cmp
sub
or
test
sub
inc
pop
dec
movb
mov
fdivrl
fs
popf
sahf
jge
lcall
fnstcw
mov
insb
adc
ja
mov
sub
subl
cmp
imul
jae
cmp
and
shr
pusha
sub
adc
call
add
jno
divb
jno
fbld
xchg
sbb
jg
cmp
wbinvd
insl
ja
jo
insl
dec
dec
movsb
inc
mov
aam
jp
das
out
cmp
xor
xorl
js
outsl
cmpsb
cwtl
pop
push
pop
or
mov
mov
incb
test
xlat
mov
dec
or
sbb
movsl
mov
lods
movsb
mov
ret
in
push
adc
fisubs
fdiv
mov
jg
xlat
pop
outsl
dec
aad
inc
add
loop
loope
inc
mov
shlb
data16
push
fsubrs
inc
sub
xor
out
scas
shll
xor
lcall
push
clc
aam
xchg
dec
adc
jo
mov
mov
aad
popa
pop
outsb
outsl
jp
mov
pop
ljmp
or
fs
ud2
mov
inc
int
ret
hlt
adc
push
adc
sahf
scas
cmp
das
mov
push
mov
add
pop
lea
notb
push
adcl
mov
loope
add
adc
pop
cmp
fwait
sub
xchg
loop
inc
fsts
js
push
aaa
inc
sahf
pop
dec
xor
dec
mov
and
dec
pop
gs
push
xchg
sbb
mov
sbb
jne
sti
mov
mov
in
incl
push
pushf
mov
add
rcll
shrl
sbb
outsb
cmpl
call
ss
call
inc
xlat
pop
inc
and
push
insl
rep
or
and
xor
das
push
inc
adc
mov
imul
movsb
pop
mov
outsl
fistl
xor
push
das
clc
negl
sbb
adc
jns
and
mov
xchg
jne
cmp
inc
aam
push
xor
xrelease
js
push
in
imul
lahf
cmc
xor
lods
add
jecxz
js
ret
add
aam
mov
jae
sbb
sbb
inc
jno
jne
fwait
int3
imul
nop
cmpsl
mov
and
add
pop
dec
inc
add
dec
dec
xchg
mov
pop
fstl
fs
sbb
aaa
outsb
pop
push
cmp
std
cmp
jmp
test
sub
leave
out
adc
inc
mov
movb
ret
sbb
jle
movl
add
outsl
cmp
and
xchg
outsb
inc
push
push
sub
jbe
pop
stos
push
push
jge
sub
push
xor
std
sbb
mov
sbb
cmp
pop
ds
test
sub
cmc
mov
jns
arpl
or
or
and
jo
incb
stos
push
push
mov
in
lret
test
add
ror
gs
sbb
mov
das
outsb
mov
and
cltd
jmp
or
sti
cmp
stos
xchg
rcll
inc
mov
sbbl
nop
push
jnp
stc
sub
lea
out
sub
lods
test
rcll
sub
faddl
cli
add
dec
rclb
inc
cmpsl
dec
popa
imul
jle
out
lret
adcb
loopne
imul
js
or
add
mov
stc
je
xchg
fcompl
mov
ja
dec
jns
adc
daa
lds
pop
dec
in
jmp
or
and
test
mov
fidivrl
push
adc
dec
fadds
or
fcmovne
sub
call
insb
popf
and
insl
gs
mov
addr16
jle
in
notb
dec
dec
push
mov
les
rcrb
push
cmpsb
sub
sub
push
mov
sub
adc
int
push
loop
fmuls
jmp
ljmp
stc
push
mov
out
add
rcr
xor
lea
mov
mov
add
das
ja
into
movsl
das
shll
fstps
aam
imul
stos
push
or
fisttps
add
and
mov
mov
push
mov
jbe
sbb
xor
lcall
add
inc
or
adc
js
fs
enter
js
cmp
fidivrl
and
inc
mov
cmpsl
std
mov
lods
inc
sub
outsb
pop
out
gs
mov
jecxz
negl
bound
xchg
ret
inc
pop
xchg
arpl
std
ficoml
jge
fcmovnbe
lret
push
iret
xchg
mov
xchg
dec
add
test
jne
shl
test
jp
push
mov
ret
and
pop
aas
iret
lret
lds
cld
shrl
stos
dec
bound
cwtl
insb
adc
xor
lds
mov
fucomip
xor
lea
out
stc
daa
ss
test
call
push
lcall
dec
in
incb
fcomps
jp
dec
adc
lds
notb
out
test
cli
xor
add
mov
fs
mov
mov
mov
fs
push
arpl
mov
stc
out
adc
jo
adc
imul
jo
sarb
cwtl
jmp
outsl
push
dec
adc
andb
fxrstor
test
mov
in
add
in
and
mov
cmp
insb
imul
fldt
dec
aam
push
imul
cmpb
lahf
decb
jecxz
insl
and
push
lods
adcb
les
hlt
jbe
stos
pop
ret
pop
cmp
adc
xchg
fildl
xchg
lods
cmp
lock
addr16
xchg
mov
das
movsb
and
jae
loopne
out
mov
clc
add
pop
mov
pusha
js
sbb
jmp
mov
lods
test
xchg
fldenv
scas
addl
ja
fsubrp
aaa
add
mov
imul
ficompl
xor
bound
and
or
mov
insl
push
push
out
and
xorb
shrl
add
mov
pop
and
or
dec
clc
outsb
mov
mov
roll
xorl
sub
out
jecxz
les
add
cmp
adc
int
xor
mov
xchg
jbe
cmpsb
dec
and
pop
insl
pushw
into
xor
popa
stos
push
mov
inc
fidivrl
shll
pop
imull
je
hlt
cmpsb
push
jge
add
in
sub
fbld
aaa
mov
pop
fcom
fcmovb
push
daa
dec
enter
lcall
pop
mov
adc
in
lret
and
add
mov
pusha
xchg
mov
gs
mov
cwtl
inc
iret
inc
lods
ret
or
test
cwtl
outsb
addr16
std
sbb
jmp
sub
sbb
xlat
or
inc
and
fldenv
sbb
lods
roll
push
into
dec
test
pop
inc
leave
push
lods
jmp
popa
arpl
fneni(8087
inc
jo
jp
daa
into
insb
cmp
push
cld
jnp
addr16
adc
xorl
mov
sub
pusha
push
push
add
mov
push
mov
aaa
mov
mov
xchg
inc
inc
mov
sbb
or
inc
xchg
or
inc
and
jns
call
ss
adc
or
das
mov
push
outsb
imul
fldenv
inc
jae
pop
cmp
std
aas
iret
ret
dec
repnz
shl
jle
je,pn
mov
bound
or
in
rcrl
je
mov
in
xor
cmc
sbbb
mov
clc
lea
jg
mov
sbb
sub
jb
inc
hlt
xchg
cmp
call
in
lahf
mov
inc
aad
lahf
xchg
into
cmp
lods
pop
lret
lcall
gs
mov
mov
in
xchg
push
push
mov
push
xlat
ja
mov
loope
push
lret
leave
pop
imul
pushf
insb
aam
pop
loope
jnp
int3
dec
aaa
xchg
jb
movsl
aas
fcoms
jno
cld
enter
je,pn
test
ds
cs
mov
sbb
aaa
sub
out
adc
fs
icebp
and
std
xchg
cs
stos
mov
mov
mov
inc
test
es
sbb
mov
push
sbb
sarb
adcl
aam
mov
and
mov
adc
push
icebp
es
mov
cmp
outsl
xchg
shll
or
daa
out
loope
xchg
add
sub
addb
sub
adc
scas
clc
jae
cltd
and
cmpsb
stc
pushf
add
stc
xchg
pushf
jb
aaa
rorb
daa
rcll
add
enter
xchg
or
pop
mov
imul
stos
pop
sarl
mov
adc
mov
negl
adc
sub
in
mov
cmp
xor
push
add
cmpsl
cli
test
iret
sub
pop
mov
lcall
push
cmp
popa
add
mov
in
xchg
imul
sub
add
rcll
test
test
push
cli
lahf
cmp
sbb
mov
pushf
insb
sub
lret
cmp
aad
push
cmp
ret
or
test
pop
sbbb
fnstcw
or
mov
xchg
sbb
das
stc
addr16
or
mov
int
jns
divb
daa
ficomps
sub
sti
fldl
push
dec
js
mov
sub
sbbb
es
rcl
mov
imul
sbb
ljmp
cmp
pop
je
aas
stos
aad
jno
cmc
in
fbld
sub
xchg
pushf
cmp
inc
jge
enter
mov
xchg
inc
inc
mov
xchg
loope
movsl
js
push
push
mov
cmp
pushf
sahf
sbb
cwtl
hlt
cmpsb
xor
cmc
out
loopne
lds
push
arpl
xorl
or
mov
xor
sub
xchg
dec
or
add
std
lods
cli
dec
hlt
mov
or
lret
xor
sub
mov
cmp
mov
aaa
jecxz
ret
loope
dec
pusha
fdivrp
std
xor
cld
push
enter
popa
call
adc
dec
arpl
mov
loopne
es
push
jo
mov
push
dec
pop
lock
cld
mov
fnsetpm(287
jne
aam
in
in
int
or
mov
cld
jmp
add
inc
adc
iret
sub
jecxz
jae
iret
mov
das
sub
xchg
or
push
sahf
pop
ret
mov
stc
imul
xchg
add
daa
xchg
sarb
std
fldenv
xor
loope
sbb
enter
std
scas
addr16
mov
xor
jb
sub
adc
or
dec
fs
mov
mov
fcmovb
clc
dec
jae
sar
xchg
jbe
sbb
sbb
mov
rcl
xchg
cmpsb
ss
jp
mov
sbb
rolb
jmp
or
pop
lret
imul
icebp
cmp
repnz
loope
and
ljmp
jg
push
or
daa
push
cmp
popf
orb
jb
cmc
fsubrs
fstpl
cwtl
dec
add
adc
cli
jmp
jnp
jmp
ret
cli
adc
push
int3
push
push
sahf
xchg
and
repnz
testl
lods
xor
out
lret
aam
into
enter
mov
xor
and
cmp
pop
lcall
xor
scas
pop
or
fldenv
mov
outsl
aaa
or
mov
pop
mov
lret
outsb
jecxz
out
aam
sub
dec
call
inc
ss
inc
mov
ljmp
int3
into
aad
stos
scas
scas
jae
jb
or
sub
lds
push
icebp
data16
scas
push
cmp
inc
xor
sbb
dec
inc
sar
in
lret
lahf
add
mov
pop
cld
xor
mov
in
out
dec
movsl
mov
mov
add
fildl
mov
mov
loope
cli
scas
sub
pushf
push
add
jg
test
enter
lock
cmp
dec
inc
and
punpcklwd
test
cmp
test
je
enter
repnz
les
pop
loop
sar
mov
push
push
adc
jb
push
into
in
sbb
lods
jno
leave
in
pop
sub
ret
popa
ret
cltd
in
cld
aad
std
pusha
divl
addb
fdivrs
sbb
fmuls
out
jge
into
dec
lods
jle
outsb
inc
adc
sti
test
push
xchg
rorl
cmp
jmp
outsl
jg
xor
inc
dec
sub
sbb
imul
icebp
lock
fists
xlat
cli
rcrl
push
xor
push
jne
das
jp
inc
xor
push
mov
mov
inc
jnp
pop
sahf
add
push
jne
hlt
adc
stos
cmpsl
add
xchg
inc
push
push
adc
or
outsl
or
cmpsl
mov
jae
outsb
push
and
ret
cltd
ficompl
lret
mov
insb
aam
mov
mov
test
mov
icebp
stos
cmp
adc
stos
cld
push
idivb
les
call
mov
testl
or
pusha
cmpsb
shl
fwait
insb
mov
push
xchg
add
inc
arpl
movl
insb
cmp
fiadds
pusha
inc
cmp
mov
out
aas
test
push
es
cli
lods
pop
xor
ficomps
cmp
icebp
mov
loopne
xchg
outsb
mov
push
pop
loope
add
cmp
fadd
cmp
mov
stc
fidivrs
mov
dec
mov
pop
fadds
adc
add
adc
xor
cmpsb
jg
cli
icebp
xor
lock
mov
push
pop
xchg
mov
imul
xchg
add
push
xchg
or
lahf
xchg
sbb
in
xor
les
lcall
cmp
jmp
out
int
shlb
push
stc
fimuls
stc
push
loope
dec
mov
push
mov
in
lock
or
loope
adc
addr16
jmp
xor
mov
fs
dec
inc
std
popa
dec
mov
mov
test
dec
lock
lcall
lcall
fdivrl
ffree
fldz
nop
cmc
out
or
sbb
test
in
cld
subb
pop
cmpsl
jb
jnp
repnz
mov
inc
fisttpl
loop
stos
fldl
or
cmp
enter
popf
js
sub
out
jns
insb
out
inc
fwait
loope
mov
push
inc
xchg
adc
in
and
outsb
push
enter
in
inc
mov
mov
mov
push
adc
dec
cmp
sbb
mov
repnz
push
pop
sub
adc
push
mov
jmp
je
mov
or
push
xchg
in
push
stos
loope
xor
int3
enter
aas
rcrb
pop
hlt
and
insl
sbb
push
rol
fldt
mov
lahf
cmp
std
loope
test
sbb
pop
or
nop
push
mov
add
sbb
cmp
mov
lock
aas
mov
jp
mov
std
pop
call
aaa
mov
sbb
movb
inc
adc
cmp
xchg
add
mov
xchg
jbe
jge
stc
push
fsubrl
mov
xchg
popa
pop
aaa
dec
xlat
loopne
iret
sbb
loope
mov
std
or
popf
test
mov
std
lcall
add
or
xchg
inc
pushw
mov
scas
mov
adc
psrlw
das
jg
mov
outsl
loopne
mov
cmp
es
lds
and
push
loopne
repnz
push
mov
mov
add
cmpl
loopne
push
subb
stos
es
scas
sti
xor
sub
adc
outsl
inc
insl
pop
mov
cld
cli
icebp
lret
cmpsb
hlt
in
rcrl
aaa
mov
shll
sub
pop
inc
repz
add
jne
xor
loop
mov
fldl2t
leave
dec
push
shll
pop
push
push
inc
in
fsubrs
in
cmp
shl
xlat
mov
pop
lret
dec
jb
adc
mov
xrelease
mov
dec
mov
lods
xor
shrl
faddp
and
xor
ror
or
js
movsl
lea
loope
shll
sbb
arpl
xchg
xor
mov
sbb
in
adc
cmp
movsl
scas
aaa
xor
jno
lods
and
inc
movsb
in
pop
xor
xchg
jecxz
iret
xchg
mov
lds
enter
mov
mov
les
mov
inc
enter
fnsave
orb
mov
js
inc
push
lret
out
andl
push
jmp
adc
sub
xlat
addr16
jl
mov
ficomps
dec
hlt
out
pop
sbb
push
pop
and
roll
jl
fimull
xchg
mov
out
aam
rclb
fwait
aad
add
cwtl
xchg
sub
inc
test
and
jmp
mov
mov
call
icebp
or
sarl
adc
adc
and
and
fdivrs
mov
js
xchg
add
cmp
addr16
fsubs
jecxz
mov
jnp
nop
inc
and
pop
out
and
pop
lea
pop
pop
scas
das
sbb
sub
aad
stos
fs
inc
sbb
ret
adc
adc
dec
xor
mov
pop
scas
xlat
fdiv
mov
lret
std
in
jg
jnp
mov
clc
test
cmp
sti
loope
loop
sub
fdivrp
lahf
add
adc
sub
insb
repnz
mov
mov
mov
mov
movb
inc
inc
inc
jmp
data16
mov
fwait
push
jmp
ret
int
subb
cld
mulb
or
mov
mov
pop
add
rcrl
mov
js
jb
test
mov
pop
loope
jge
ljmp
jp
shrb
hlt
fs
lock
xchg
inc
cmp
movsl
fs
or
xchg
imul
int3
push
xor
mov
inc
idivl
jne
pop
mov
out
cmp
sbb
insl
dec
aas
jae
sti
aam
repz
mov
add
cltd
adc
dec
pop
jecxz
data16
fidivs
xor
mov
cmpsl
lahf
and
mov
xchg
pop
and
adc
xor
mov
or
xchg
push
jle
mov
lcall
jae
shll
mov
or
and
out
pop
xchg
sub
clc
rcrb
popa
outsl
inc
cld
sub
adc
cmpb
push
xchg
sub
lcall
pop
push
loop
fdivrp
mov
mov
pop
sahf
fildll
fsub
xor
in
xor
mov
or
mov
jo
jp
loopne
push
dec
les
inc
jle
mov
imul
test
enter
fstpt
clc
loop
mov
pop
jb
lea
adc
loope
mov
mov
xchg
cmp
and
and
sub
out
ret
mov
sub
out
out
mov
js
loopne
iret
test
shl
dec
inc
es
xchg
outsl
xchg
inc
leave
xlat
sbb
cmc
ljmp
outsb
and
dec
mov
xchg
sub
mov
cmp
mov
call
dec
add
shll
xchg
cmpsb
pop
inc
jge
or
push
cmp
push
scas
adc
xchg
and
add
mov
hlt
dec
sub
jg
adc
leave
lcall
jecxz
dec
int3
out
movsb
int3
pop
rcl
out
dec
mov
int3
mov
dec
xchg
clc
int3
adc
xor
dec
lea
mov
ss
fmuls
subb
movswl
std
insb
in
jb
int
stos
xchg
push
je
lret
negl
fs
sub
mov
cmp
xchg
sub
jne
inc
dec
rcr
fildll
fdivp
mov
pop
add
loop
lock
insl
jne
arpl
lods
jl
test
mov
mov
cld
cmc
fsts
call
mov
popf
mov
adcb
fcomps
pop
adc
sub
lods
fs
aas
and
rcrl
mov
mov
mov
popf
outsb
loopne
data16
push
or
shlb
sbb
add
mov
inc
sbb
or
icebp
aaa
cmp
sbb
mov
push
jns
pop
inc
push
hlt
flds
xchg
jno,pn
aas
iret
inc
jge
sbb
les
out
pushf
js
mov
es
icebp
idivl
shl
xchg
push
mov
mov
or
inc
int3
push
pop
mov
repnz
mov
ret
push
movsb
loop
in
shrb
jo
cli
and
xchg
xchg
jecxz
test
movsb
cltd
dec
js
adc
pop
in
hlt
mov
addb
mov
cmp
jmp
inc
xchg
mov
shl
std
pusha
jl
bnd
arpl
mov
mov
add
cmp
ret
rcll
or
xor
push
inc
push
nop
inc
fistpl
scas
inc
cmp
add
cmp
outsb
inc
sbb
test
xchg
xchg
inc
aaa
in
loop
dec
jnp
in
js
add
sahf
mov
into
jl
movsl
jp
sti
call
push
repnz
lahf
mov
push
ficomps
ljmp
pop
or
dec
mov
ss
cs
popa
xchg
push
stos
cli
pop
jge
xchg
xchg
shll
insb
aas
cltd
icebp
lea
leave
mov
std
jp
mov
and
mov
pushf
and
mov
push
insl
mov
sahf
je
rcll
mov
daa
ret
sub
sub
push
sbb
mull
push
ljmp
dec
outsb
aas
lods
xor
or
es
lea
into
popf
mov
and
fwait
or
fcompp
cli
push
fadd
mov
adc
es
sbb
mov
out
in
cmpsl
sub
fdivrp
add
xchg
inc
pop
hlt
jae
mov
je
or
out
push
loop
rcr
push
rorb
ja
test
pop
cli
or
loop
pop
ja
mov
mov
sbb
lods
dec
daa
adc
sub
cmpsl
jne
test
cmc
inc
inc
xor
cwtl
clc
mov
and
std
jb
rcrl
lds
mov
adc
mov
pusha
ja
scas
testb
movl
scas
adc
mov
test
adc
lea
mov
sbb
or
inc
imul
or
out
push
pop
mov
push
jge
push
and
mov
pop
outsl
mov
mov
aaa
ficoms
xlat
jns
movsb
xor
mov
mov
int
test
sub
loopne
cwtl
testl
or
adc
in
fisttpl
nop
nop
in
xchg
pop
jo
dec
lahf
stc
jge
lret
jecxz
add
fstpt
not
jge
fiadds
lcall
fs
cmp
in
fs
lahf
test
testb
in
ds
aad
mov
mov
mov
jo
xchg
popf
inc
sti
loope
push
mov
sti
mov
je
outsl
lea
cmp
dec
fs
xchg
stc
dec
int
dec
mov
dec
dec
inc
xlat
push
adc
inc
xor
pop
jmp
mov
mov
mov
mov
push
add
adcl
or
sub
stos
inc
push
neg
or
mov
pop
pop
xor
mov
xchg
xchg
mov
shlb
push
sbb
pushf
fldenv
jmp
nop
mov
pop
scas
shlb
frstor
or
je
fmull
dec
cmp
sahf
aaa
icebp
decb
jns
cld
lods
lret
sub
jmp
fcoms
in
imull
hlt
cmp
out
sar
jbe
push
adc
push
lods
les
mov
mov
inc
dec
mov
mov
mov
pop
adcb
aam
mov
xor
daa
or
fadd
bound
lret
push
test
repnz
fsubrl
pop
mov
loopne
mov
ds
outsl
rorl
sahf
cmpsl
stos
jo
ret
push
int3
add
dec
push
test
jns,pn
lahf
lret
mov
cs
ss
mov
scas
add
fbld
lcall
test
mov
loopne
ror
push
jne
ja
or
pop
arpl
mov
mov
cmp
mov
int
fldenv
sub
mov
jo
adc
lods
or
dec
popf
enter
xor
add
repz
cmp
or
out
push
popf
mov
push
loope
jns
push
sahf
add
movsb
mov
mov
inc
lds
jge
rcrl
inc
sub
lahf
mov
sbb
sbb
xor
std
sub
loopne
leave
test
adc
int
xchg
outsl
xchg
xchg
push
mov
xchg
push
mov
or
cmp
addr16
imul
movsb
dec
in
push
lock
jp
mov
sub
cmp
cwtl
dec
scas
jl
imul
movsb
xchg
dec
icebp
cmp
inc
fstpt
or
je
test
mov
push
lret
pop
repnz
outsl
xor
jo
pop
and
xchg
out
inc
lret
adc
aad
cmp
cli
mov
stos
ja
imul
sub
dec
sti
add
test
out
pop
test
mov
addr16
add
jns
ret
push
mov
ds
lock
cmp
push
add
cld
add
cmpsb
inc
push
leave
add
cmpsl
or
movsb
fsubrs
testb
and
mov
dec
mov
mov
xor
pushf
mov
icebp
jge
mov
shrw
shll
daa
push
lods
aas
imul
mov
rol
nop
adc
mov
xor
int
mov
jp
lahf
push
or
in
push
es
sti
xchg
cmpsl
adc
stos
sbb
mov
addl
mov
into
push
sbb
out
lret
push
rolb
and
inc
sbb
fstps
cwtl
popa
push
xchg
jmp
xor
int
js
stos
jle
ds
rorl
pusha
outsb
stos
es
pop
jg
push
xlat
mov
lock
inc
fsubr
out
xchg
arpl
and
jl
ja
dec
cmpsl
push
gs
and
push
call
mov
inc
push
mov
dec
mov
mov
fcomip
pusha
and
sahf
bound
jle
insl
ret
and
fsubrl
out
aaa
pop
push
xchg
pushf
fistl
add
loope
aas
mov
xchg
das
mov
or
int
sub
pop
mov
and
pop
jecxz
and
pop
add
pop
jbe
adc
jne
divl
fistps
or
jbe
cmp
pusha
insb
js
pop
xchg
into
and
popa
push
xchg
lcall
lret
xchg
nop
mov
ja
filds
movsb
mov
sbb
add
or
ljmp
dec
jl
sub
mov
add
pushf
stc
push
or
push
dec
jo
mov
xchg
add
cld
mov
mov
mov
enter
in
push
push
add
cmp
xlat
xlat
mov
xor
mov
fwait
jb
mov
movsb
pop
pop
and
rcll
inc
lahf
inc
inc
out
lock
dec
icebp
push
lret
mov
mov
divl
cmp
xor
push
sbb
dec
loope
movsl
jmp
mov
or
movsb
inc
scas
inc
popf
and
cmp
add
sub
repz
js
sub
sbb
psrlw
xor
aaa
bound
movsb
add
dec
cs
push
sbb
sbb
push
dec
cmp
jp
fisubs
mov
sub
mov
shr
sub
add
sbb
jo
rclb
bound
testw
fcmovu
in
push
in
fcmovnu
dec
arpl
lods
fcomps
mov
jno
add
jecxz
and
jnp
push
xorl
imul
add
std
jo
push
and
adcb
nop
xchg
pop
sub
mov
cli
out
movsl
xchg
inc
scas
dec
das
subl
sub
xchg
xor
xchg
mov
int
inc
clc
lock
test
xor
and
js
es
mov
pop
xchg
xchg
and
rcrb
push
mov
adc
inc
lret
in
xchg
pop
sahf
lea
pop
ret
adc
inc
imul
push
mov
shrb
fwait
and
lret
push
daa
push
push
sahf
enter
outsl
stos
mov
cmp
jno
gs
add
and
lock
test
mov
pop
pop
xor
inc
dec
and
push
out
pop
jno
mull
sarl
mov
adc
cli
mov
push
sub
mov
jb
or
and
clc
sbb
test
out
testl
push
pop
lahf
mov
or
inc
mov
jbe
repnz
lds
sarb
scas
fistpll
sub
jg
ja
cmp
push
or
adc
push
pop
mov
or
sub
data16
enter
inc
xor
dec
adc
popf
add
jg
pop
xor
fwait
and
pop
icebp
mov
gs
jb
aam
shrb
bound
cmp
stc
xor
push
outsb
pop
xor
je
sub
or
mov
mov
cli
aaa
int3
fcomps
lcall
popf
push
adc
stos
mov
and
mov
and
aas
notb
mov
popf
cmp
mov
adc
inc
jbe
dec
jl
push
sbb
inc
in
ja
and
sahf
add
mov
bound
jp
insl
lea
dec
int
ss
xchg
je
cmp
int
xchg
outsb
sbbl
aam
nop
inc
imul
mov
jp
or
xlat
mov
sbb
cwtl
adc
arpl
movsl
loop
inc
lock
pop
lds
mov
mov
leave
adc
ficompl
add
add
push
data16
inc
mov
inc
into
mov
aas
loop
repnz
jmp
push
cmc
or
movl
repz
in
lds
cltd
sbb
mov
in
inc
xor
inc
adc
mov
dec
pop
push
popf
cmp
popa
cmp
mov
and
xchg
clc
ljmp
and
adc
xor
outsb
add
daa
xchg
jmp
mov
jmp
sahf
xor
mov
jns
out
shl
or
xor
stc
call
inc
mov
and
push
lret
adc
jp
stos
push
push
js
push
adc
cli
xchg
int3
add
dec
dec
icebp
mov
js
enter
adc
aam
sbb
jecxz
push
xchg
int3
bound
xor
mov
dec
adc
cltd
mov
xor
mov
push
jae
mov
sbb
lods
fwait
in
clc
lret
pop
dec
xchg
and
in
mov
mov
dec
aad
xor
cmp
pop
xor
or
testl
or
inc
cmp
nop
pushf
hlt
imul
mov
push
cmp
adc
add
cmp
inc
xchg
repz
imul
movl
loope
lods
insb
lret
sbb
jno
sub
jnp
call
movsb
xor
xchg
push
out
aas
repnz
mov
out
add
pusha
stc
ja
push
mov
inc
push
push
test
xchg
sub
cmp
mov
mov
xor
cmp
loope
xchg
call
into
push
mov
and
idivb
add
jo
shl
cltd
push
sub
cmp
ficoms
ffree
pusha
jnp
add
sbb
dec
push
hlt
nop
xchg
ljmp
fnsave
sub
clc
cmp
cmpsl
mov
shlb
mov
and
cs
jmp
mov
mov
add
push
in
sahf
add
int
icebp
sarb
in
ficoms
or
aaa
mov
in
push
xchg
bound
dec
jns
das
nop
adc
sub
sub
xchg
js
rclb
cmp
adc
xchg
test
popa
cmp
push
fsubrs
or
aam
cli
ret
jmp
notl
push
aas
into
jge
inc
or
jb
loopne
or
dec
jmp
cs
inc
xchg
shrl
shll
ljmp
mov
sub
inc
xor
inc
xor
rcr
into
sbb
and
enter
push
stc
xchg
std
mov
fisttpl
jbe
es
cs
mov
inc
cmp
lods
jg
aaa
mov
cmc
push
xor
das
jbe
dec
and
lock
fimull
xchg
out
fs
sahf
push
ret
fildll
xchg
or
repz
mov
xchg
je
lahf
mov
fistpll
leave
sbb
lods
pop
pop
insl
and
pop
inc
mov
aas
xchg
aad
adc
mov
aaa
leave
adc
xlat
lret
cmpsl
jbe
push
push
dec
mov
stos
pop
mov
mov
imul
add
fsubrs
push
push
test
test
cs
movsb
inc
mov
mov
in
dec
cmp
xchg
push
rcll
sub
xchg
push
jne
aas
push
nop
push
ret
push
xchg
cmp
sbb
out
jns
xor
insb
nop
repz
add
imul
fsts
loop
sbb
bound
out
int
push
lahf
mov
lds
push
adcb
mov
pushf
push
sbbb
arpl
lds
cmp
xor
pushf
test
lods
dec
mov
sbb
aaa
ret
pushf
mov
aad
subl
add
addr16
jecxz
fcoml
mov
mov
nop
aad
jle
mov
fdivrs
repnz
pop
dec
sub
pushl
xchg
into
pop
test
out
jno
mov
sbb
jg
pop
sub
or
divl
jb
mov
movb
popf
jno
push
shll
and
aas
stos
pop
fildll
repz
dec
daa
mov
aas
ljmp
ret
push
sub
jb
cmp
in
in
lods
test
lcall
dec
jb
in
add
std
cmpb
push
mov
test
test
outsb
pop
lods
fistpll
mov
popl
repnz
and
addb
mov
and
mov
pop
orb
push
jb
das
adc
dec
ljmp
in
in
pop
or
pop
shlb
add
push
int
jecxz
mov
ja
inc
adc
jmp
push
cmpl
sti
pop
mov
aas
lds
lods
imul
iret
or
dec
add
sub
inc
xchg
lods
out
clc
cli
dec
aad
jbe
out
mov
push
outsl
or
movsb
sbb
stos
mov
in
push
mov
xchg
pop
jmp
test
and
and
aad
icebp
int
and
jno
ficompl
fcoms
mov
iret
sbb
cmp
lds
popf
add
pop
xchg
xchg
movsl
sub
lods
xchg
cmc
loop
int3
ret
out
movsl
mov
and
inc
loope
rol
sbb
cltd
stos
mov
mov
or
mov
or
adc
xchg
leave
ret
aad
roll
sti
xchg
packsswb
mov
jno
adc
mov
push
push
push
dec
push
subb
test
xchg
sbb
or
repz
lds
mov
rclb
mov
or
fistpll
pop
scas
clc
cmp
les
or
repz
inc
lds
call
sub
or
mov
in
int
addl
lods
jg
je
and
push
xchg
rep
icebp
bound
test
dec
add
add
cmp
in
jbe
pop
out
push
loope
xor
push
xchg
ljmp
mov
test
mov
pop
movsb
mov
pop
clc
or
push
mov
mov
es
dec
cltd
aam
mov
sbb
outsl
ss
xor
adc
inc
popa
pop
nop
dec
inc
jmp
mov
mov
addr16
inc
pop
out
pop
cmpsb
and
stos
cmpsb
rcr
xchg
std
or
es
cli
inc
insl
jl
test
sbb
into
inc
xchg
stos
mov
or
js
popf
movsb
xchg
push
push
adc
cld
je
outsl
xor
push
jbe
inc
imul
pop
mov
dec
xlat
in
pop
dec
sub
jmp
movsb
fstpt
xorl
mov
cltd
xchg
jo,pt
into
mov
xchg
jmp
mov
mov
cmpsl
mov
or
sti
out
or
adc
xor
mov
movsb
push
xchg
in
xlat
sub
xchg
scas
xchg
mov
vmovsldup
or
add
mov
test
xor
cmp
adc
test
pop
jae
dec
jns
cmpsl
mov
jno
mov
mov
or
stos
cmp
std
mov
inc
out
sahf
cwtl
jb
setns
mov
iret
dec
sub
mull
sti
in
add
lds
notl
scas
jg
pop
lret
loope
fwait
test
xor
sub
push
gs
arpl
cmp
mov
jns
call
mov
js
test
cmp
imul
or
sub
daa
inc
leave
jecxz
xchg
adc
jecxz
fildl
mov
fst
sbb
cmpsb
test
cmp
and
fsts
push
test
icebp
jmp
cmpsl
test
xor
cmp
mov
inc
ret
cwtl
mov
pop
mov
std
imul
jb
je
loope
or
jb
dec
loopne
mov
dec
and
mov
xor
jo
cs
pop
push
clc
push
daa
sub
mov
xlat
gs
andb
incb
xchg
fs
add
in
cld
ja
or
and
xchg
mov
mov
pop
cmp
jl
scas
push
fwait
movsl
loop
xchg
hlt
dec
scas
xlat
in
dec
push
xlat
add
pop
sti
pop
sub
pusha
push
mov
fwait
stc
aaa
pop
sub
pop
pop
mov
je
iret
fldl
dec
or
mov
and
repnz
popf
dec
xor
repnz
gs
test
les
lds
inc
sarl
ret
movsl
mov
inc
loop
mov
ret
push
ret
push
das
aam
cmpl
cmpsb
push
xchg
inc
adc
push
sti
add
pop
loope
xor
push
mov
movsb
fbstp
add
shrl
push
xor
filds
or
and
lea
push
movsl
xchg
adc
mov
cmpsl
loope
jg
xor
loop
pop
in
lods
ljmp
js
pop
jnp
jp
dec
cmp
push
push
ret
repnz
cmp
inc
jne
leave
sub
push
sbb
sbb
dec
add
jl
pusha
push
cmp
andb
jecxz
sub
jmp
loop
add
inc
nop
mov
roll
mov
fnstsw
cwtl
pushf
pop
pop
mov
popf
movsb
mov
push
sbb
stos
shll
arpl
lods
jne
out
mov
pop
cmpsl
adc
sub
iret
into
aam
cmc
fistl
jno
pop
xchg
or
ljmp
nop
insb
daa
pop
ret
int3
add
pop
mov
xchg
mov
jle
stc
xor
xchg
loopne
lret
push
imulb
jl
aas
ljmp
cmp
cmpl
xor
out
pop
inc
jmp
ficomps
push
push
lea
sub
outsl
push
fisubrs
cwtl
xor
dec
sbb
add
or
push
mov
push
push
sbb
mov
and
cli
ss
pop
sbb
fdivrl
fsubr
mov
dec
mov
dec
loopne
push
adc
adc
outsl
jbe
mov
adc
sbb
pop
push
test
subl
add
test
jno
in
inc
rolb
adc
aad
call
arpl
addr16
xchg
or
rcr
mov
dec
mov
lahf
je
and
sub
addr16
scas
daa
xchg
pusha
or
cmp
inc
jnp
push
sub
cmpl
push
mov
mov
pop
inc
pop
sahf
mov
cmpsb
daa
dec
lea
xor
mov
inc
mov
imul
rolb
dec
sbb
out
outsb
cld
mov
lahf
js,pn
dec
push
iret
xlat
out
and
and
sbbl
mov
in
aad
out
mov
jle
cmp
out
jl
mov
aam
out
pop
ds
popa
xor
lret
xor
mov
cmp
push
test
es
mov
popf
mov
inc
xchg
fldcw
imul
aam
sti
mov
fimuls
mov
jne
pop
std
stos
out
arpl
dec
inc
xchg
push
testl
jl
paddusw
aad
lods
dec
sbb
sbb
in
loope
jecxz
hlt
mov
add
adc
or
mov
jno
xchg
sti
sbb
cltd
mov
inc
cmc
fwait
outsb
repnz
test
lods
dec
push
int3
sub
stc
xchg
pushf
cmpsl
pop
loopne
mov
xchg
out
ljmp
sahf
lcall
or
repz
movsl
cld
lret
leave
pop
push
daa
arpl
mov
jge
dec
rcrb
mov
pushf
and
mov
sub
lock
and
xchg
lcall
xor
jno
mov
jecxz
fldenv
mov
adc
pop
sub
jge
mov
cmpl
inc
jne
dec
cmc
movsl
jns
psubusw
sbb
sub
jo
mov
divl
movsb
pop
roll
mov
jge
mov
insl
dec
or
test
clc
mov
sbb
jae
rclb
pop
lcall
push
insl
fisttps
push
imul
jne
lods
aad
inc
jp
adc
mov
out
mov
jns
aad
pushf
mov
scas
imul
cmpsb
lret
jne
lods
jle
fsubrs
fimull
call
rcll
cli
sbb
call
aas
mov
add
xor
test
rclb
and
fstp
sub
push
arpl
mov
loope
cmp
fiaddl
and
mov
jo
jmp
sti
outsl
ss
ljmp
dec
adc
jl
ja
push
or
mov
in
inc
repnz
xchg
clc
mov
negl
push
inc
adc
sbb
mov
dec
pop
sub
mov
cmpsl
jb
mov
jl
pop
pop
add
push
sub
add
cmp
push
mov
mov
lock
ss
sbb
push
enter
je
ljmp
enter
or
jecxz
jge
cmp
sbb
xlat
aam
int
loop
push
insb
shlb
out
cli
push
or
cmpsl
dec
in
in
jg
mov
push
dec
mov
lahf
sub
cmc
mov
push
push
push
jecxz
pop
jle
adc
cmp
shll
push
mov
mov
int
xor
jmp
mov
inc
rorl
out
sub
bound
js
std
aad
inc
scas
jle
and
or
mov
scas
pop
jns
sub
js
cmp
sbb
jne
jmp
mov
push
les
fwait
addb
hlt
dec
mov
dec
jl
sub
lcall
xor
jo
aas
mov
int3
lods
xor
aas
sub
push
lock
fs
repnz
ss
movsb
daa
lds
lods
repnz
pop
and
add
test
push
ret
push
movsb
cmpl
cmp
ss
inc
stc
in
js
out
test
ret
lods
inc
lock
or
sarl
fadds
leave
in
xchg
mov
jg
std
pop
inc
sti
in
ja
sub
push
add
push
mov
lock
push
cmp
xchg
scas
decb
and
jns
pop
loopne
das
mov
dec
out
jbe
cmc
xchg
dec
dec
cs
add
xchg
jb
fwait
xchg
mov
adc
inc
and
push
push
jecxz
insl
daa
fdiv
ljmp
or
sub
loopne
adc
fldt
inc
sub
test
add
jnp
pop
dec
subl
insb
jo
mov
sub
jb
push
xchg
pop
iret
dec
mov
inc
inc
sahf
adc
dec
lds
push
mov
mov
or
ret
sub
data16
xchg
push
lcall
push
xchg
pop
stos
arpl
frstor
test
shll
int3
jg
inc
xor
lods
dec
out
insl
push
jns
popf
jg
fldpi
iret
adc
jns
jb
xchg
xor
add
addr16
push
jo
bound
mov
push
int3
mov
hlt
or
xor
ljmp
aam
pop
push
bound
jl
lods
hlt
mov
addl
dec
add
rcl
pop
iret
loope
dec
mov
popf
sub
enter
dec
cmp
or
pop
shl
pushf
test
scas
scas
je
popa
mov
push
popf
cmp
jnp
lods
movaps
mov
mov
repnz
cwtl
outsb
outsb
aad
into
loopne
push
mov
sbb
idiv
xchg
stos
xchg
sub
add
out
sub
adc
push
jp
mov
sbb
cmp
stc
push
inc
sub
gs
sub
xchg
jo
loopne
jbe
sbb
xor
mov
iret
mov
mov
movnti
enter
mov
cmp
dec
sahf
inc
xor
sub
cltd
lcall
in
mov
push
stc
cmp
call
adc
ss
les
ret
sahf
shlb
or
lea
cmp
pop
stos
loopne
sti
test
out
lds
mov
sbb
movsb
inc
fstl
fistpll
push
enter
cmp
std
add
lahf
subb
sub
scas
mov
lahf
loop
mov
imul
mov
inc
mov
das
or
into
push
stos
mov
lock
clc
or
out
lock
ja
aam
inc
int
loop
lret
aad
push
fstps
mov
pop
out
add
pop
sbb
pop
mov
fcomps
icebp
lods
jno
pop
pop
add
cld
mov
xchg
sti
xor
movsb
out
inc
sub
dec
or
sbb
xchg
cmc
cs
movsb
rorl
into
les
mov
dec
and
rol
cmpsb
xlat
mov
mov
mov
or
cmp
mov
insl
repnz
lock
cmpsb
sahf
out
adc
in
cmp
jmp
int3
in
sbb
outsb
cmp
and
insl
lcall
insb
mov
lret
jns
xor
clc
outsl
sub
loope
setp
inc
push
mov
pop
setns
pop
lods
shl
testl
imul
lahf
std
xchg
add
pop
sub
adc
ljmp
mov
or
cmp
xor
bound
inc
out
ret
sub
test
pop
add
loop
adc
test
jmp
iret
bswap
sbb
xchg
movsb
aaa
jmp
int
loopne
insb
pcmpeqd
push
adc
iret
sbb
into
incl
adc
add
or
cmp
ret
stc
daa
aas
xchg
ja
enter
mov
or
push
cmpsl
pop
mov
stc
xlat
push
jecxz
inc
sub
dec
or
mov
cwtl
sbb
push
pop
enter
bound
mov
and
jmp
aad
cmp
xchg
insl
adc
jb
stos
loopne
push
pop
mov
bound
pop
js
repz
or
rcll
jecxz
mov
mov
ficoml
sbb
jmp
sbbl
sub
dec
xor
pop
shll
mov
jp
adc
scas
mov
or
and
fbstp
orb
and
cld
imul
lods
inc
push
mov
mov
fists
ffreep
js
inc
movsl
cld
sbb
popf
xchg
xchg
lods
outsb
ja
xchg
fldlg2
rcll
enter
mov
cmp
sbb
andl
mov
arpl
test
xchg
idivb
addl
subl
ja
jns
cmp
enter
inc
sarb
xchg
lock
adc
cmpl
clc
add
push
js
loope
loop
ret
div
add
or
pop
xlat
adc
imul
cwtl
imul
xor
fsubr
jns
push
testb
mov
mov
imul
xchg
js
mov
test
push
mov
cmc
ret
pusha
sbb
insb
fdivs
movsb
mov
jns
pmaxsw
jno
lock
lahf
ss
xchg
pop
pusha
stos
inc
andb
hlt
test
dec
pop
mov
xor
mov
mov
lock
xchg
sbb
jbe
mov
mov
testb
repz
fstpl
and
pop
add
out
push
xchg
pop
cmp
dec
lcall
xchg
mov
xchg
jle
movsl
and
std
mov
inc
mov
pusha
mov
stc
mov
movb
mov
pop
mov
pop
sub
mov
lea
lcall
push
adc
xor
std
or
loopne
sti
je
jge
inc
pushf
les
clc
cli
mov
ja
js
adc
test
mov
mov
xchg
out
pop
xor
adc
test
xchg
adc
sahf
out
aas
ret
xchg
mov
jne
ss
in
pushf
movsb
cmp
mov
push
addl
sti
inc
decb
xor
cmp
popf
xor
adc
mov
and
sbb
mov
cltd
or
movb
nop
mov
inc
xlat
cmp
xchg
loopne
pop
int
sub
inc
push
jge
rorl
or
or
aad
imull
adc
aam
xchg
ret
loop
or
dec
xchg
out
stos
cs
imul
jbe
lea
dec
out
pop
in
lcall
fsubl
xor
and
xchg
xchg
aam
xchg
push
and
xchg
bound
ret
in
pop
mov
stos
xor
aas
push
dec
sbb
add
hlt
inc
push
or
pop
repnz
stos
mov
test
cmpsb
test
fcoms
daa
jge
inc
std
jns
add
jno
mov
out
cmp
push
mov
fsub
mov
ss
out
sbb
test
inc
arpl
xchg
push
mov
dec
xor
jp
mov
fwait
lods
dec
xchg
movb
out
sbb
int
add
ss
out
dec
pop
jnp
mov
xchg
sub
gs
popa
les
xlat
cmp
and
fcompl
ret
out
frstor
jo
sarl
cmp
dec
ftst
pushf
cmpsl
xchg
enter
add
jmp
int3
imul
ljmp
enter
inc
ret
push
loopne
add
outsb
lods
shr
dec
and
std
mov
jge
inc
mov
out
push
nop
shlb
inc
xlat
mov
adc
stos
or
jp
pop
mov
pop
or
lea
push
xlat
push
cltd
cmp
push
leave
xor
test
add
add
cld
push
movsl
adc
shll
pop
test
lea
jmp
jl
cmp
sti
pop
hlt
sbb
jg
xchg
in
and
fs
mov
outsl
and
or
test
cmp
push
into
shll
popf
in
pop
lea
mov
add
js
dec
ss
xchg
or
push
jb
xchg
pop
lds
lds
hlt
and
sti
sub
lret
mov
into
out
rorl
push
or
fidivs
sahf
ret
scas
popf
adc
pop
lock
fisubs
lock
outsb
ja
or
insb
xor
adc
xlat
popf
mov
mov
outsb
jl
mov
sti
sbb
out
repnz
dec
adc
cmp
enter
decb
out
mov
or
inc
push
or
pop
sbb
pop
aam
call
mov
fisttps
ja
je
lods
mov
movsb
dec
push
fmull
sub
adc
lcall
test
loop
pusha
inc
pop
xor
push
or
ja
daa
xchg
and
fsubrl
xor
fistpl
mov
rcrl
or
insb
push
pop
jbe
xchg
jns
or
loop
into
jmp
push
loop
daa
hlt
mov
fistps
and
sub
and
pusha
dec
popf
pusha
jns
leave
imul
dec
add
inc
fs
push
inc
out
xchg
repz
mov
cmp
xchg
add
jo
jb
dec
cmp
pop
cmp
jl
and
jge
addr16
iret
fsts
nop
sub
adc
or
mov
adc
mov
bound
jne
mov
clc
and
push
cmp
leave
stos
push
movsb
enter
mov
cmp
add
cmp
sub
cltd
pushl
push
loope
xchg
out
cld
xchg
shrl
push
in
xchg
test
lock
mov
lret
fwait
lcall
sub
movsl
and
shll
rorl
mov
scas
inc
ds
aas
roll
and
or
adc
dec
ds
cmp
mov
and
bound
in
test
stos
lahf
xchg
test
inc
rcrb
leave
mov
dec
out
call
mov
and
xchg
sti
mov
daa
mov
mov
cmp
mov
adc
maskmovq
testl
xor
int3
lea
pop
in
ss
bound
arpl
ret
mov
inc
xchg
or
mov
movsl
mov
xor
or
rcrl
sub
sbb
push
sbbl
cld
pop
dec
push
sbb
mov
and
push
jne
or
lea
adc
push
aam
ljmp
push
data16
jbe
shrl
or
lods
jae
add
nop
dec
cli
aaa
push
xlat
push
cmc
mov
mov
mov
das
pop
add
add
push
sub
adc
dec
pop
sbb
mov
loope
fmull
fwait
dec
and
inc
cltd
pop
sub
cli
cld
push
stos
mov
imul
sahf
and
loope
movl
cmp
mov
lock
cltd
push
mov
aaa
clc
xor
imul
push
mov
fdivrs
cmpsl
or
out
inc
mov
mov
sub
call
ja
xchg
cmp
lret
nop
lret
push
mov
std
dec
shll
dec
xchg
ja
inc
and
push
outsb
call
xchg
ds
mov
mov
sub
jno
xor
pop
les
push
lea
jo
pushf
adc
cmc
stc
or
cmp
jo
stc
mov
pop
cmp
lret
add
in
test
sub
mov
push
cld
ja
dec
lret
dec
es
clc
cmp
pop
inc
or
inc
xchg
loopne
mov
cmp
dec
sub
inc
sbb
out
dec
mov
adc
test
sbb
iret
dec
and
jne
jge
sahf
stos
testb
xchg
call
test
pop
sbbb
loope
pusha
xchg
or
popf
pop
test
cmp
push
and
mov
lahf
out
jae
cltd
adcb
test
fadd
xchg
andl
push
outsb
cltd
aad
cmp
push
arpl
pop
dec
mov
dec
insb
adc
jae
mov
pop
pop
stos
mov
popa
repnz
jns
outsl
mov
ljmp
adc
push
xchg
adc
mov
sbb
pop
mov
adc
jge
mov
dec
jg
in
lret
ret
jne
push
fs
arpl
popa
sbb
aas
stc
lock
mov
fwait
das
lret
in
fs
cld
and
add
xchg
inc
push
out
in
std
pop
push
cmp
sub
sub
int3
mov
mov
mov
leave
push
pop
jl
cs
insl
dec
aaa
in
xor
sub
in
dec
and
cmp
mov
jns
js
cmpsl
cmp
mov
cs
cwtl
mov
cmpsl
rcl
popf
cmp
jmp
jge
lods
fldenv
mov
mov
lods
mov
insb
inc
lock
call
adc
js
adc
out
stos
es
xchg
insl
in
fsubrs
in
cs
mov
icebp
or
mov
fistl
mull
add
push
mov
mov
decb
mov
cwtl
mov
fwait
dec
loop
in
imul
imul
jle
cmp
fstpl
or
call
aad
xor
or
jnp
cmp
and
xchg
cld
fadds
rolb
sti
leave
sarb
mov
inc
lret
cmp
addr16
pop
popf
je
jnp
cmp
mov
je
jecxz
loope
lahf
ss
out
imul
push
jb
jae
jns
jg,pn
hlt
lret
dec
push
jl
mul
adc
xor
and
gs
andl
ret
aad
and
add
into
mov
sub
fiaddl
xor
pop
mov
inc
es
mov
push
in
xorb
shr
mov
ja
dec
fsubrp
and
or
push
lcall
aaa
mov
and
shrb
mov
rolb
aas
adc
in
pop
inc
in
xchg
xlat
imul
aad
enter
mov
jmp
cli
sbb
insb
es
hlt
jecxz
data16
bound
pop
lea
lret
sbb
jne
mov
ds
adc
inc
stos
sub
out
cmp
fmul
jmp
xchg
leave
mov
jmp
jmp
mov
arpl
loop
xor
xor
cmc
ja
xor
mov
test
push
jb
ret
mov
mov
or
or
addr16
sbb
push
nop
mov
fadds
xchg
in
mov
insb
leave
pusha
add
in
out
push
and
cmp
stos
push
ljmp
mov
mov
decl
add
dec
lods
shrb
sub
sbb
sub
jge
lret
lahf
in
push
push
outsb
mov
xor
mov
call
jecxz
das
cld
mov
fstpl
fmull
jns
pop
or
mov
add
cld
inc
jmp
sub
out
aam
ret
inc
arpl
int
and
mov
leave
cmpsl
xor
and
data16
inc
or
bnd
loopne
ja
mov
test
pusha
dec
fwait
movsl
testl
mov
cmp
mov
stos
inc
fiaddl
addr16
mov
lahf
jo
xor
fnstcw
ds
repz
push
out
lret
dec
aaa
sbb
or
imul
jecxz
sub
adc
inc
data16
mov
dec
or
inc
sahf
adc
loope
dec
lcall
ss
mov
ds
jl
inc
sti
jle
loop
cmp
lret
inc
cmp
mov
and
and
iret
nop
mov
jns
test
jne
mov
sub
sbb
inc
or
lret
or
out
shrb
sub
or
jae
pusha
adc
xchg
lret
add
movsb
pop
idivb
je
jl
js
xchg
aaa
push
lret
pop
lea
mov
add
loopne
leave
add
xchg
das
or
push
and
mov
mov
int
add
and
sub
rorb
or
sub
arpl
jno
dec
js
ljmp
push
loope
mov
sbb
jnp
lahf
inc
insb
inc
test
push
int3
mov
loope
sbb
into
mov
jno
add
ret
jecxz
mov
popa
mov
jb
fistpl
rolb
lea
mov
cli
inc
ljmp
insb
dec
and
and
mov
push
sbb
stos
mov
fldenv
ljmp
xor
cmp
mov
in
mov
pop
mov
jg
test
pop
lret
stos
in
and
dec
mov
dec
fxch
loop
lret
lret
inc
xor
mov
js
dec
out
icebp
js
pop
jnp
rcrb
sar
outsb
roll
push
pop
call
mov
mov
mov
xchg
aad
ficoml
fidivl
fimull
jne
or
insl
sbbb
loopne
xlat
inc
adc
mov
adc
xor
fnstcw
sub
push
movsb
mov
jmp
fldl
sti
and
and
lock
mov
sahf
push
mov
push
in
mov
in
mov
in
mov
xrelease
mov
in
add
jnp
mov
adc
aaa
shll
lods
ud1
cmp
push
xchg
pop
mov
cmp
jo
pop
inc
jg
ja
dec
push
sub
data16
cmp
mov
outsb
mov
cmp
mov
lahf
xchg
data16
add
stos
cmp
fwait
mov
in
pop
or
testb
and
movd
jecxz
fwait
mov
sub
fcmovbe
jle
xchg
cmp
jae
imul
and
into
sti
daa
xchg
jmp
xor
stc
cmp
es
add
cmp
cmpsl
dec
inc
mov
mov
or
or
jae
sbb
pop
xor
lret
push
ljmp
jmp
pop
enter
lahf
xor
sbb
mov
xor
add
cmpsb
sbb
mov
xlat
je
push
inc
cmp
or
adc
ret
xchg
inc
lea
mov
mov
test
test
jo
and
jg
mov
push
insb
std
jnp
mov
sbb
ret
xorl
mov
mov
or
add
cld
cli
inc
sbb
add
dec
or
cs
push
mov
push
xor
add
sbb
insb
xlat
enter
data16
and
rorb
shr
rorl
push
lods
mov
pushf
xlat
push
mov
ret
cmp
push
cmpsl
dec
in
push
repz
cmpsb
loopne
adc
stos
xchg
pop
cwtl
cmp
pop
adc
lcall
mov
jo
fisttps
int
outsl
jb
dec
add
test
jbe
fcomip
jl
jmp
push
ja
call
rorl
cmp
lea
arpl
inc
lods
inc
aam
outsb
sbb
ret
cmp
mov
jo
push
insl
pusha
push
fs
andl
push
jae
xor
lods
cmp
sbb
add
push
add
mov
loop
xor
ret
dec
jo
test
xor
mov
pop
daa
add
jg
cmc
leave
push
cmpsb
shr
std
mov
adc
inc
add
ffreep
fs
and
jmp
test
leave
scas
add
mov
cmpsl
mov
into
fs
inc
cmc
ljmp
and
push
fmuls
decb
add
sbb
mov
test
jne
dec
mov
test
push
mov
cmp
sub
scas
and
add
outsb
ljmp
push
lods
or
xor
ja
inc
add
xchg
fcomip
xchg
jnp
pop
sub
pushf
pop
add
mov
daa
ss
fistps
loop
pop
jecxz
loop
adc
in
outsl
sub
or
mov
xchg
jb
jp
scas
dec
cld
xor
shlb
fdivl
inc
and
or
insl
cs
sub
xlat
xchg
dec
daa
mov
repz
xor
addr16
mov
push
jo
mov
inc
push
xchg
mov
dec
pop
and
cmp
jbe
mov
lcall
sub
dec
adc
loope
mov
jo
and
mov
lea
cwtl
cmp
push
shl
in
loop
aaa
clc
fwait
jno
int
cltd
in
xor
in
cmp
cmp
inc
xlat
xchg
or
cmp
and
jo
jge
jecxz
les
ja
mov
xchg
sbb
and
adc
inc
sbb
jg
in
les
shll
sbb
test
push
aad
call
mov
in
push
sahf
in
mov
rorl
stc
dec
push
push
cs
ret
push
mov
pop
ljmp
cmp
js
lahf
sbb
or
mov
ret
mov
aam
call
ret
clc
mov
xor
in
daa
cli
mov
testl
ss
inc
xor
cld
out
cwtl
mov
cltd
loopne
das
mov
jecxz
push
cwtl
xor
sbb
loop
aas
imul
popf
out
outsb
sbb
add
cmp
fmuls
jae
push
xor
dec
add
lock
sbb
aam
test
adc
nop
mov
mov
sbb
pop
sti
loope
sub
dec
jb
shlb
adc
push
loop
aas
mov
sti
mov
nop
lret
mov
and
loop
xchg
dec
mov
cmp
xchg
mov
inc
fcoml
sbb
jp
lock
cld
dec
leave
xchg
sub
dec
jle
jno
mov
push
and
push
nop
inc
inc
in
adc
push
push
int3
cmp
push
xchg
sbb
fisttpl
jg
jmp
fiadds
add
xor
inc
decb
adcb
fwait
clc
add
jmp
pop
std
popf
movsb
lods
xchg
mov
daa
loope
pop
or
pop
mov
out
mov
icebp
enter
mov
lods
pop
mov
xor
outsb
mov
sub
cmp
loope
sahf
mov
xchg
xchg
or
shrb
xor
fwait
lods
inc
push
in
retw
lods
cmpsl
out
or
andb
push
dec
sbbl
subl
inc
mov
into
loop
xchg
sbb
push
fs
fldt
cmp
jle
add
setbe
cmpsb
sti
ljmp
sub
rolb
dec
shr
mov
hlt
fcmovnb
shrl
test
sahf
outsb
dec
test
and
xor
cmp
jl
fnclex
lods
ret
lds
lret
pusha
sub
jbe
cwtl
ja
repz
mov
push
mov
mov
add
dec
push
dec
adc
and
fistpll
inc
je
mov
in
mov
movsl
insl
das
movsl
mov
push
adcb
mov
xchg
pop
adc
mov
or
loopne
out
add
dec
or
cmp
jae
fnstenv
xor
dec
add
inc
inc
fsts
in
fmul
jl
adc
icebp
sub
xchg
into
lods
xor
cli
data16
sahf
add
mov
add
addr16
mov
bound
notb
jmp
in
scas
int
ret
divb
or
popf
stos
or
jp
mov
std
jmp
inc
popa
mov
fnstcw
mov
push
cmpsl
addr16
sbbl
rorl
out
inc
cmp
std
andb
pop
lahf
adc
cwtl
fnstcw
js
jl
js
add
lret
mov
jae
insb
lock
xchg
add
cli
fs
test
mov
std
hlt
int3
pop
mov
loopne
or
lds
add
dec
mov
push
inc
mov
jns
fsubrs
cmp
mul
adc
aad
mov
pop
test
addr16
dec
fisubrl
iret
pop
sti
out
and
out
mov
push
fxch
outsl
dec
mov
repnz
push
setne
stos
inc
cmp
repnz
insb
adc
cltd
jl
add
and
cmp
je
loopne
iret
incb
test
adc
lret
hlt
fcoml
add
lock
into
loopne
stos
testl
je
std
iret
cwtl
fistpl
dec
adc
jne
jmp
adc
jg
loop
jns
jge
arpl
pop
pop
sahf
push
and
jl
stos
jg
or
insb
adc
enter
lret
pushf
xchg
xchg
sbbl
ja
ret
pop
cmp
imul
xor
push
inc
aad
jo
push
ffree
push
lods
loopne
std
scas
hlt
jge
pushw
mov
ja
sbb
fs
aaa
push
xor
push
movsl
mov
mov
jae
negl
movsb
aam
cwtl
cld
shl
xchg
jp
and
sbb
inc
cmp
dec
dec
rorl
cmpsl
cmp
dec
jns
cmc
add
imul
mov
loop
popf
jbe
shll
std
inc
in
xor
xchg
sahf
test
inc
sub
adc
aam
mov
mov
ss
adc
pop
sub
lods
add
getsec
xor
lcall
out
dec
out
jo
mov
xor
cmpsl
jbe
and
sbb
dec
out
push
cmp
cltd
fiadds
sbb
xchg
faddl
inc
push
mov
and
rcl
in
fldt
test
cmc
inc
hlt
xorb
shll
xor
addr16
rep
mov
push
push
xlat
dec
pop
insb
pop
imul
push
sub
lret
movsb
fidivrs
aas
adc
insb
mov
cld
pop
mov
int3
cwtl
movsb
lret
mov
and
adc
mov
xor
movsl
ret
das
mov
xchg
fiaddl
jecxz
icebp
out
jecxz
cmp
outsl
cmp
arpl
aaa
nop
adc
cmpsb
les
mov
outsl
mov
mov
mov
sbb
js
sbb
inc
or
jnp
or
loopne
add
inc
cld
frstor
out
push
jp
inc
cltd
test
add
or
je
out
cmp
xchg
outsb
mov
mull
ss
imul
testl
subl
dec
into
popa
loope
or
xchg
std
cs
aas
sbb
jge
movsl
lea
call
and
sbb
sub
into
cwtl
xchg
xchg
lods
pop
pop
dec
sub
hlt
pusha
pop
sub
std
lods
out
ds
mov
dec
pop
cld
mov
adc
cmpsb
scas
push
and
cmp
mov
sbb
jp
sbb
bound
test
xchg
cltd
or
jo
mov
pusha
sub
popf
adc
dec
and
lods
dec
lahf
pop
daa
inc
mov
or
enter
or
fsubs
jecxz
xchg
add
mov
adc
imul
xchg
and
pop
pushf
daa
daa
fdivl
loop
sub
rclb
nop
or
sub
imul
adc
and
jno
popf
dec
mov
push
pop
jnp
and
inc
in
or
cmp
imul
jb
icebp
push
mov
jb
outsl
das
sbb
inc
sub
cmp
jnp
inc
mov
scas
push
mov
mov
sahf
dec
mov
emms
test
lret
dec
js
xchg
jo
lahf
add
push
lret
jb
jnp
mov
arpl
and
adc
popf
lea
ret
test
pushf
mov
fwait
mov
adc
cld
rorl
loope
cmc
or
xorl
leave
mov
shl
rorl
lret
sub
or
xor
xchg
dec
cs
stos
ja
movsb
xor
adc
popf
pop
cmp
mov
mov
add
adc
or
popa
jns
cmpl
out
test
mov
dec
xchg
lds
pop
sbb
out
add
jno
icebp
cmp
mov
divb
imul
pop
ficoml
cld
jl
xchg
pop
jmp
jmp
call
push
mov
xchg
stc
jne
insb
ret
mov
enter
xor
rorl
dec
or
sub
test
dec
push
mov
bound
fwait
or
mov
cmc
xchg
jb
pop
out
or
shr
ds
scas
mov
dec
and
mov
xor
xor
adc
and
sbbb
ret
das
shll
sub
fmull
and
imul
lret
jnp
push
xchg
ret
inc
rcrb
mov
mov
loop
lods
test
fwait
clc
cmpl
ds
inc
ret
mov
test
or
mov
enter
lock
dec
add
gs
adcb
xor
das
mov
inc
xchg
fiadds
mulb
pop
lcall
sub
mov
push
xchg
push
mov
scas
jo
xor
pop
es
or
mov
bound
int3
daa
das
cmp
pop
pop
repnz
add
inc
or
xor
fcompl
and
pushl
aam
xor
and
add
arpl
loope
cmpsb
sahf
sar
inc
bound
lock
jae
adc
out
cmpsl
fdiv
mov
or
adcb
outsb
inc
cli
and
mov
cmp
push
ljmp
arpl
add
and
adc
sbb
adc
mov
xchg
outsl
mov
gs
shr
mov
mov
add
pop
adc
xor
jbe
sbb
push
pushf
mov
jle
mov
in
or
add
out
xchg
and
or
call
add
repz
fisubrs
gs
test
stos
sub
iret
jmp
stc
movl
sbb
mov
xchg
ds
jle
std
and
test
push
add
fisubs
xor
mov
jl
hlt
and
pop
stos
push
rorl
dec
leave
in
dec
xor
xor
jnp
ret
mov
aad
and
andb
mov
xor
call
call
cmp
mov
loop
push
xor
mov
stos
int
lds
jnp
fisubs
ret
mov
ja
xor
add
into
adc
int
fnstcw
jae
aam
loope
scas
xor
insb
xchg
ret
cld
test
out
movsb
and
cli
jge
repnz
add
test
inc
lods
aam
mov
cltd
xchg
xor
push
xor
xor
lds
xchg
xor
mov
cmp
lods
jmp
lret
mul
popf
jns
mov
shr
or
shrl
cmp
push
jge
adc
loop
stc
push
mov
add
sbb
cmp
shrl
jb
rolb
xor
movsl
dec
cmpsb
fwait
fwait
push
rolb
or
cld
xor
in
test
in
xor
push
cmp
and
pmaxub
jmp
push
xor
adc
test
sub
mov
adc
test
xor
xchg
mov
stos
xor
int
xchg
stc
jnp
lret
xchg
xchg
and
and
in
in
faddp
out
aaa
push
pop
and
jecxz
dec
mov
lahf
repz
clc
sub
adc
loope
sbb
out
cmp
pop
sub
enter
push
push
inc
adc
mov
popf
idivb
push
mov
adc
cld
adc
jo
cmpsb
imull
adc
test
mov
dec
shrb
lock
cmp
je
cs
mov
pop
and
lahf
notb
cmp
push
aad
in
add
jecxz
arpl
dec
mov
ljmp
xchg
cmp
sbb
jmp
inc
rolb
adc
mov
ret
scas
push
xor
dec
cmp
out
push
xor
pushf
enter
aad
and
aam
or
cli
pop
push
mov
fsub
fucomp
jne
aam
pusha
mov
arpl
mov
loop
jae
loop
dec
xchg
pop
adc
mov
inc
stos
iret
push
lock
cli
addb
cmp
and
les
test
mov
mov
and
outsl
xchg
cmp
xor
paddusw
lahf
mov
inc
pop
ja
out
inc
out
jmp
or
sub
test
outsl
jecxz
jmp
test
sub
pop
mov
nop
imulb
or
mov
xchg
sahf
xor
xor
das
cmc
add
pop
xor
imul
inc
shlb
mov
push
popa
cmp
inc
or
xor
imul
or
sti
pop
adc
mov
pop
push
out
movsb
int3
mov
addr16
lahf
inc
stos
nop
mov
movsb
pusha
ficompl
ja
das
push
jge
ds
aad
xchg
adc
dec
add
leave
call
imul
sti
clc
push
xchg
push
add
sbb
js
xchg
in
inc
js
jl
mov
jae
or
sbb
xlat
std
clc
jmp
push
push
into
push
sub
out
data16
xchg
xor
stos
sub
and
lods
loope
insb
into
xlat
mov
inc
jno
mov
and
dec
push
in
push
idivb
mov
vpmaddwd
arpl
ss
fldenv
inc
sub
in
inc
movsl
rolb
sub
jecxz
sbb
rcrb
cmpsl
adc
hlt
xor
cld
das
dec
in
subl
mov
ror
mov
mov
adc
dec
push
jecxz
push
pop
inc
loopne
adc
inc
push
mov
adc
adc
push
jnp
dec
adc
xchg
xor
ljmp
gs
xorb
xchg
adc
ss
loopne
xor
das
test
sbb
negb
mov
lret
mov
mov
rcll
test
idivb
mov
mov
push
inc
out
leave
sub
add
jecxz
mov
ror
mov
arpl
add
stc
jg
arpl
cmp
insb
mov
outsl
mov
in
fdivl
xchg
push
xor
lea
aaa
and
aaa
mov
or
pop
minps
jge
mov
cmovno
pop
fwait
add
test
std
jp
addr16
mov
jle
loope
cmpsb
data16
push
dec
inc
push
icebp
inc
mov
dec
mov
or
aaa
mov
push
sbb
push
in
sti
cmc
stos
lods
add
jne
fxch
push
into
adcb
pop
dec
pop
cmp
fimuls
ja
mov
stos
pop
xor
ljmp
and
add
adc
aaa
enter
push
cltd
xor
sti
and
fnstcw
out
inc
arpl
or
jmp
pusha
push
mov
jg
inc
lea
imul
xchg
sub
mov
mov
imul
aaa
mov
mov
fisubl
movsb
mov
aam
in
out
iret
xlat
jne
jne
dec
mov
push
in
sub
pop
bnd
std
add
push
fists
mov
fdiv
cwtl
dec
lcall
sbb
push
loope
mov
add
leave
mov
push
sub
test
not
stc
dec
xchg
sbb
jae
dec
xchg
cs
jp
pop
xlat
sbb
frstor
mov
lret
xchg
mov
into
and
dec
dec
jb
pusha
pop
jne
or
jg
rolb
dec
mov
jno
stos
jbe
shlb
fistpl
and
imull
add
fisubrl
jo
pop
sarb
push
mov
scas
imul
push
mov
leave
adc
sbb
dec
sub
test
mov
fimull
jp
cs
lock
cmp
popa
fisubrl
jnp
jge
sahf
ret
jl
adc
jnp
fisttpll
jecxz
and
jge
dec
out
jle
cltd
adc
int3
add
mov
pushf
inc
fdivl
loope
stos
out
pop
sbb
aad
imul
pop
mov
out
inc
stc
dec
jae
out
repnz
or
aam
sti
shrl
adc
sbb
xchg
test
test
int
insl
insb
lahf
xor
bound
jbe
faddl
outsl
xor
es
arpl
push
mov
or
jge
mov
inc
out
mov
repnz
mov
fcomps
pop
cld
mov
fdivrs
out
sbb
xchg
jl
stos
xor
cmpsl
arpl
ret
or
mul
paddd
fists
pop
daa
sbb
arpl
int
in
push
loope
adc
es
pop
clc
test
mov
mov
dec
xchg
xchg
fsubs
mov
andb
inc
das
enter
xchg
fdivrl
push
or
ret
imul
pop
inc
loop
cmp
fisttpl
insl
into
mov
push
ds
repnz
out
pop
jle
insl
sub
mov
pop
std
xor
push
xchg
mov
into
xchg
jo
popa
and
push
adc
sub
fxch
ja
fwait
out
jno
bound
add
int
andb
test
mov
xchg
and
push
xchg
fcoml
push
cmp
addr16
sub
sbb
and
je
push
inc
loope
fcompl
bound
cmp
je
mov
sub
mov
jbe
roll
test
cs
repz
push
lea
xchg
xchg
mov
mov
mov
or
cli
mov
aaa
movsb
movsb
or
inc
sarl
stos
movsl
cmpsb
ja
jb,pn
adc
shl
jae
fcoms
pop
mov
fnsave
mov
hlt
fmul
push
mov
in
push
lods
pop
shrl
in
inc
mov
popa
aad
jo
adc
push
popa
int
add
jl
cltd
lcall
cltd
mov
cltd
dec
fimuls
pop
nop
movsb
push
or
sbb
cmp
mov
mov
and
sahf
sbb
jecxz
adc
pop
push
sub
cmpsb
inc
enter
sub
push
mov
sub
imul
xor
in
push
xchg
sarl
test
jns
pop
ret
insl
cmp
btc
mov
gs
jo
out
out
stos
pop
add
jp
lea
push
idiv
ficomps
ret
loopne
mov
ljmp
pop
ja
enter
cli
lahf
and
adc
adc
push
jns
imul
xchg
push
and
mov
lds
mov
add
in
je
push
xor
and
mov
imul
add
and
subb
ljmp
jmp
lea
mov
lret
push
lock
sarl
push
and
push
mov
and
inc
ficoml
pop
lcall
test
aaa
xor
clc
pusha
fstl
sbb
pop
es
fsub
cmpsl
mov
shlb
dec
cmc
shll
int
fstps
cmp
mov
fsubl
lods
add
fmul
divb
rclb
test
xor
sbb
sti
sahf
xor
aam
lock
imul
hlt
mov
push
or
fcmovnbe
enter
call
sub
jae
out
inc
loop
inc
mov
cld
mov
insl
and
fldcw
enter
insb
mov
adc
adc
push
test
sub
dec
xor
dec
adc
sub
push
jne
loope
lods
adc
xor
and
mov
imul
sub
stos
sbb
mov
sahf
push
adc
addl
cld
cld
popf
lock
or
mov
pop
xor
dec
mov
pusha
cmc
xor
ja
jge
stos
arpl
stc
adc
pop
mov
inc
es
scas
xor
imul
lock
pop
xor
fisttps
lods
lahf
jp
adc
sarb
scas
mov
inc
leave
ficompl
icebp
pop
cmp
jae
jmp
push
test
ds
adc
inc
cltd
ljmp
mov
stc
in
out
and
fwait
mov
fmuls
jecxz
addl
mov
dec
mov
dec
lahf
fcoml
scas
push
xchg
dec
jnp
adc
adc
cmp
pop
add
push
inc
lock
jg
and
pop
push
push
cmp
push
push
pop
xchg
xchg
cmp
leave
and
mov
xchg
mov
mov
test
int3
nop
outsl
jnp
std
dec
add
add
arpl
movsl
pop
je
pushf
push
lods
push
imul
in
enter
mov
fwait
mov
mov
mov
in
push
cwtl
pop
sbb
stc
lcall
loope
jo
pusha
call
pop
cmp
inc
mov
lods
mov
movsb
xchg
dec
cmpsb
sbb
push
dec
mov
ret
and
adc
xchg
cld
fisttps
pop
test
pop
inc
scas
ja
jno
das
orl
pop
call
or
out
sbb
sub
mov
and
dec
mov
inc
ds
xor
pop
pop
and
movsl
pop
adc
cmp
imul
dec
test
ror
dec
xchg
fildl
ret
stos
sbb
inc
sbb
xor
or
orb
fidivs
xchg
push
mov
add
push
out
or
ret
mov
xor
pop
and
scas
push
fsubp
inc
add
xchg
rcrl
push
jno
mov
xchg
dec
popf
dec
leave
sub
pop
icebp
addr16
hlt
push
mov
enter
fwait
adc
popf
push
pushf
out
inc
xchg
mov
aam
xor
pusha
xchg
adc
mov
cmpb
mov
sbb
jge
mov
iret
ffreep
mov
mov
inc
mov
cmpsb
mov
stos
mov
push
xor
mov
xchg
movb
push
dec
fdivs
push
jp
gs
sbb
ja
leave
or
fists
sbb
test
aad
add
jl
mov
rolb
jb
test
jns,pt
enter
mov
das
dec
jmp
lahf
sub
mov
cltd
add
test
or
icebp
push
je
and
pop
dec
ss
jecxz
pop
jns
jae
pop
in
mov
dec
cwtl
mov
loopne
aas
push
jp
push
push
test
gs
sbb
and
add
lds
loop
bound
cwtl
adc
outsb
lods
ljmp
in
in
or
stos
fdiv
lods
mov
sub
dec
scas
in
icebp
mov
dec
xchg
mov
test
lcall
push
xchg
inc
test
insl
add
add
push
dec
add
jge
mov
jae
sub
mov
pop
lahf
or
ret
in
dec
cli
push
aad
outsb
cwtl
and
mov
stos
ja
outsb
into
push
fs
int3
cltd
dec
testl
pop
test
ret
jbe
jl
mov
in
out
xor
or
imul
fwait
and
or
stos
dec
fdivr
add
sbb
loop
repz
bound
xor
lods
and
cmpsw
inc
into
add
mov
pushf
inc
insl
fistpll
cmp
popa
push
out
or
sub
hlt
cld
imul
stc
out
jmp
ss
inc
in
inc
inc
jge
adc
sbb
sbb
push
int3
leave
xchg
repz
xor
in
repz
out
add
jae
mov
pop
pushf
or
out
pop
cmp
lds
push
test
xchg
sahf
add
mov
lds
push
inc
mov
push
cli
xor
xchg
jl
lret
movsb
xchg
and
stos
adc
pusha
cmpsl
sub
adc
or
pop
fdivrs
xor
jb
repnz
cld
je
rcrb
iret
cltd
jp
sub
cmpsb
xchg
mov
xchg
ja
outsl
dec
mov
stc
and
or
cld
push
and
sub
cs
jg
std
push
dec
mov
ret
int
dec
mov
pop
hlt
test
sbb
or
mov
imull
stc
scas
push
sub
sub
rcr
push
mov
and
cmp
fnsave
test
inc
cmp
push
fbld
push
scas
aaa
es
daa
outsb
int
pop
xchg
xor
and
lods
push
imul
ljmp
cmp
lea
lods
mov
std
icebp
aad
lea
adc
add
ffree
lods
shr
xchg
jmp
xlat
stc
mov
mov
xchg
push
sub
cwtl
push
mov
mov
movsl
fsubrs
repnz
enter
add
pop
gs
enter
mov
ss
stc
cmp
add
dec
xchg
ljmp
mov
inc
clc
data16
cmp
daa
lcall
push
mov
rorl
cmp
xor
shrl
cmp
jmp
xor
mov
adc
rcrb
xlat
scas
roll
and
dec
xchg
mov
fwait
stos
push
pop
in
clc
int3
ss
outsl
iret
test
inc
pop
ret
aam
lcall
push
cmp
ljmp
push
mov
repz
dec
cld
push
xchg
inc
pop
add
popf
inc
jmp
pop
xchg
arpl
andb
cmp
inc
sub
sbb
mov
pop
xchg
cmp
jg
xor
loop
in
xor
mov
test
stos
push
and
fstpl
out
dec
jns
popf
push
pop
mov
mov
pop
sbb
out
push
cmp
popa
shll
loop
addr16
xor
arpl
pop
mov
repz
mov
and
lods
rorb
pop
xor
inc
ja
lea
cmpsb
mov
add
test
xchg
sbb
xchg
xchg
addb
in
push
xchg
sbb
sbb
xor
and
or
xchg
and
jno,pt
cmpsb
sbb
or
in
cli
ljmp
lcall
push
ljmp
pop
add
fdivl
scas
mov
fdiv
roll
fwait
stos
mov
cmp
dec
mov
dec
and
jg
lahf
movsl
scas
xchg
and
aad
roll
out
xor
push
cmpb
popl
xor
cmpb
movsb
pushf
and
inc
fisttpll
enter
insb
jle
enter
insl
push
fcmovnb
and
cmpsl
push
pop
mov
mov
jge
inc
push
nop
mov
repnz
push
pop
or
xchg
loopne
inc
gs
js,pt
dec
add
loop
in
jmp
pop
mov
jge
mov
cmpsb
repnz
push
xor
dec
mov
cs
imul
push
mov
cmp
sbbb
std
cmpsl
in
orps
dec
sti
pop
out
push
lret
test
inc
stos
sbb
inc
dec
adc
push
jmp
mov
add
fwait
popf
lods
movsl
jecxz
pop
mov
push
loop
push
popa
xor
dec
mov
dec
divb
scas
xchg
decl
mov
ljmp
mov
fwait
lret
hlt
mov
inc
jl
and
ds
dec
add
roll
fadd
dec
xchg
scas
sarb
in
jne
mov
adc
rclb
mov
hlt
cld
fnstenv
pop
jb
cmp
data16
and
jno
aam
and
ret
sahf
imul
pop
bound
xchg
mov
mov
xlat
push
xchg
daa
insb
mov
scas
rep
mov
mov
jg
jle
push
mov
scas
pop
dec
push
stos
xor
or
cmpsl
out
subl
mov
dec
xlat
lock
xor
jp
jbe
rolb
test
add
stos
inc
cmp
nop
sbb
das
mov
or
jmp
pop
dec
out
clc
mov
push
aad
add
loopne
add
adc
push
jge
adc
mov
add
pop
mov
adc
jg
enter
jne
test
loopne
jae
cld
ret
inc
sahf
hlt
or
flds
mov
mov
xchg
xchg
pushf
shll
mov
pop
dec
fisubl
cli
mov
stos
mov
mov
or
adc
pop
push
jno
lret
push
movsl
push
outsl
jmp
xchg
into
adc
jo
push
in
gs
mov
dec
add
shll
daa
popa
jns
dec
mov
insl
cmp
push
fcoml
xlat
outsb
push
rcrl
mov
das
xchg
mov
xor
mov
xchg
les
cli
cmp
insl
sahf
add
push
arpl
subb
fisubrs
jmp
fs
repz
sub
mov
adc
pop
mov
roll
fcoms
sbb
jecxz
mov
in
add
mov
inc
sbb
add
imul
sbb
adc
cmp
ljmp
das
and
push
les
pop
pushf
mov
jbe
adc
sub
jge
adc
sub
imul
int3
or
sbb
lods
inc
push
sbb
sub
cmpsb
pop
insl
pop
lret
fstpl
inc
xchg
icebp
out
jne
mov
dec
adc
shlb
mov
sub
mov
inc
dec
lahf
or
mov
and
adc
inc
fbstp
cltd
xchg
testl
fsts
push
xchg
imul
in
mov
mov
or
xchg
je
add
mov
sahf
loopne
dec
push
cmp
jo,pt
dec
hlt
inc
aaa
sub
pop
dec
dec
lcall
push
dec
fst
and
add
mov
dec
into
addr16
imul
mov
push
shlb
mov
cmp
add
sbb
movsl
daa
jno
pop
aad
insl
pop
and
mov
cmp
and
stos
gs
outsb
insl
lcall
pop
sbb
in
insl
and
or
pop
fisubs
xchg
fwait
mov
mov
sbb
sahf
cmp
cs
pop
imul
inc
sub
dec
pop
movsl
pop
imul
pop
popf
xchg
xchg
xchg
pop
sub
pop
clc
mov
jle
or
outsb
repz
xor
mov
imul
insl
or
mov
push
pop
in
mov
mov
cmp
fadds
pop
pop
jg
sti
lods
adc
into
push
pop
sbb
inc
mov
or
and
arpl
mov
rcl
xor
mov
and
or
jbe
xchg
fisubs
inc
sbb
inc
dec
cmpsl
jbe
pop
adc
jmp
mov
cld
sub
stos
mov
inc
hlt
popf
mov
inc
push
inc
shrb
das
daa
pop
cmp
adc
out
daa
enter
loopne
push
push
dec
hlt
cmp
rcll
mov
lret
sbb
and
addb
je
fidivrs
mov
push
or
mov
clc
push
mov
push
sar
or
xchg
sbb
mov
sub
int3
jbe
xchg
cmpl
in
out
or
jle
test
jns
daa
mov
sahf
out
sbb
mov
adc
xchg
mov
mov
xchg
pop
adc
pop
push
out
mov
push
sbb
addr16
enter
lret
sbb
lret
mov
in
inc
or
xchg
enter
pop
arpl
mov
mov
sub
incb
inc
fcoml
outsb
lahf
adcl
into
cmp
jl
sbb
push
sbb
dec
sbb
pop
dec
push
hlt
pop
lea
data16
nop
add
aas
loopne
orl
add
mov
ret
push
adc
ret
cmpsb
jl
test
mov
icebp
push
inc
jae
jecxz,pn
addb
lahf
dec
sbb
fdivp
mov
loope
pop
pop
push
stos
mov
hlt
pop
dec
popf
in
inc
testl
call
jp
cmpsb
pop
adc
xor
push
dec
andb
adc
pop
mov
rcll
xor
jno
es
pushfw
xchg
push
scas
adc
sub
stos
mov
ret
mov
ret
sub
into
outsb
rolb
dec
pop
frstor
xor
inc
scas
je
adc
mov
aad
ljmp
push
pop
movsl
filds
mov
jge
inc
mov
repz
push
aas
mov
mov
jbe
in
fbstp
leave
clc
mov
int
mov
push
pop
ja
js
adc
sti
jne
dec
pop
sbb
mov
dec
nop
mov
push
ret
xchg
test
ss
sub
or
mov
inc
push
mov
dec
and
pop
xchg
pop
mov
imul
jbe
insb
cmp
add
rorb
test
sub
sbb
lcall
xchg
push
sbb
stos
jmp
inc
mov
or
sub
pop
add
fadds
inc
inc
ret
add
std
push
fists
test
out
lcall
xchg
mov
sbb
push
mov
mov
pop
mov
idivb
xchg
xor
adc
cwtl
mov
or
push
mov
adc
repz
lret
sub
mov
cmp
pushf
jge
dec
jne
add
mov
cmpsl
push
in
imul
inc
scas
testl
adc
adc
xlat
rcr
jmp
hlt
stos
popa
xchg
cmp
push
or
pop
sub
lret
jge
xchg
mov
lcall
mov
sub
dec
push
sbb
adc
mov
faddl
ss
mov
ds
lock
or
out
mov
push
pop
and
adcl
fistpl
loopne
cmpsb
test
or
sub
fists
bound
push
iret
cmp
dec
rcrl
add
or
xchg
clc
adc
cmc
mov
pop
jle
testl
push
xchg
cmpsl
push
outsb
cmp
je
inc
test
bound
pusha
int
dec
js
mov
xor
adc
sub
int3
dec
fs
testb
and
add
mov
jns
stc
sub
mov
mull
mov
jmp
inc
lock
ljmp
push
push
outsl
adc
cmp
xchg
or
jle
sub
sub
push
mov
push
andl
daa
in
inc
lret
mov
gs
sub
imul
scas
pop
leave
mov
out
in
adc
jb
sbb
mov
sub
mov
jge
cmpsl
pop
jnp
loopne
dec
std
test
fwait
or
mov
loopne
jecxz
lret
mov
aam
cmp
lock
push
sbb
cmp
aas
xlat
data16
jns
and
es
or
sub
pop
rol
mov
xor
fwait
icebp
stos
adc
pop
lret
test
aad
gs
leave
pop
int3
in
cmpsb
je
cs
inc
cmc
aam
adc
or
shl
mov
ficomps
iret
cmp
repz
mov
pop
inc
mov
pop
dec
stc
hlt
push
gs
xor
movsb
lock
adc
fidivs
pushf
mov
jp
pop
jle
cltd
push
xor
pop
adc
mov
fs
or
dec
mov
out
cmp
subl
pop
cltd
pop
cld
inc
movsb
mov
stc
mov
es
rorl
inc
dec
lcall
mov
in
jo
daa
rorb
sub
push
mov
ret
les
cwtl
mov
dec
clc
push
mov
cmp
adc
mov
test
xchg
jp
cs
cmp
sbb
in
or
or
iret
cmp
dec
orl
dec
popf
inc
jnp
cli
sub
into
fsubrl
int3
rorl
sub
pop
in
push
adc
out
shrl
dec
jae
lods
push
incb
movswl
push
bound
loop
cs
push
sub
data16
cmp
pop
pop
divl
repnz
inc
outsb
outsb
aas
dec
js
sbb
adc
pop
lahf
push
js
add
iret
arpl
gs
push
lods
push
aad
jl
fs
pop
pop
loop
mov
pop
lret
add
or
and
imul
cli
insl
cmp
adc
orl
pop
pop
int
aad
pushf
cli
enter
outsb
and
sub
inc
mov
inc
fwait
cmp
xchg
jl
pop
xor
clc
repz
dec
fiaddl
dec
loope
push
test
mov
xchg
sbb
in
rcrb
aas
mov
xchg
shl
sbbl
lcall
dec
enter
push
mov
ss
jp
in
cld
or
push
and
sbb
loope
into
cld
sub
jmp
js
jns
add
cld
dec
xor
fsubr
cmpsl
les
add
ret
icebp
daa
and
daa
dec
fcmovu
pushf
or
cmc
push
dec
xchg
hlt
add
outsl
or
insl
aad
cmp
ja
sbb
push
es
test
leave
push
ret
icebp
xor
sub
fwait
add
sbbl
push
cltd
sbb
push
int3
xor
mov
sarl
or
daa
xchg
cmc
xor
cs
xor
or
movsl
sub
repz
jl
fs
xchg
sub
xchg
dec
enter
add
mov
mov
in
pushf
call
inc
fst
sbb
jb
or
bound
mov
push
jmp
test
push
imul
inc
test
addr16
cmp
ret
rolb
pop
aas
pop
xchg
das
in
mov
repnz
repnz
dec
aad
mov
mulb
clc
inc
fdivs
push
pop
adc
push
stc
sti
sti
mov
jnp
pop
or
push
or
sbb
popa
outsb
popa
xchg
mov
lcall
pushf
jg
pusha
sbb
mov
cmpsl
fcoml
adc
mul
push
test
popa
nop
test
pusha
lret
cmp
pushf
sub
cmp
mov
adc
and
and
es
mov
movsl
das
dec
dec
ror
mov
filds
jmp
jns
cmc
test
mov
jp
scas
divb
mov
jae
cmp
and
cld
sub
es
mov
loope
adc
xor
jge
push
inc
insb
cwtl
sub
xor
stc
xchg
inc
pop
and
sub
lahf
jo
lods
loopne
dec
fistpll
pop
ljmp
loopne
test
sarb
cmp
aaa
icebp
push
pop
xor
sub
inc
and
xchg
mov
xchg
test
mov
daa
or
cmpsb
mov
test
idivb
mov
out
pop
int3
push
xor
mov
xchg
xor
jo
jp
cmp
push
je
mov
data16
nop
lret
arpl
push
inc
lret
pop
addr16
mov
jo
jno
js
or
inc
xchg
lds
rcll
sub
insl
test
cmp
dec
pop
loope
movsl
mov
add
or
cmp
stc
adc
mov
add
jecxz
and
sbb
xchg
scas
mov
mov
movsl
shrl
pushf
xor
inc
scas
movsb
addr16
xchg
das
sahf
add
pushf
in
rorb
mov
test
sbb
daa
sbb
stos
in
xlat
sbb
ss
xchg
jnp
mov
xchg
xor
xchg
clc
or
jecxz
push
cltd
js
lods
mov
std
jp
popf
sbb
adc
ljmp
ret
mov
jp
in
sub
mov
sub
je
lret
mov
inc
lret
xor
mov
adc
cmpb
loop
sub
adc
jmp
ds
add
mov
sbb
push
mov
mov
cli
data16
inc
call
push
mov
jne
dec
outsb
cltd
jg
sub
mov
ds
pop
test
int3
out
or
mov
cmp
pop
cmp
stc
ljmp
mov
aas
rorb
inc
sub
aam
mov
imul
pop
test
ljmp
lahf
dec
es
inc
mov
cmp
push
bound
js
dec
scas
lea
sahf
rolb
test
pop
in
into
adc
int3
push
adc
ljmp
or
hlt
jae
jl
add
pop
xor
dec
mov
pop
into
test
push
sti
push
in
in
adc
adc
xor
xor
pop
nop
adc
xchg
sbb
sbb
lret
fcmovb
push
pop
sbb
hlt
cmp
cld
pop
clc
mov
aad
xchg
mov
jno
imul
sbb
addr16
pop
mov
out
add
xor
daa
fcoml
push
sub
pop
sbb
adc
fcoml
clc
imul
call
mov
jno
cli
out
jg
push
sbb
jl
mov
mov
cwtl
popf
jmp
std
xchg
sbb
scas
popf
in
decl
xchg
xor
fdivrs
sub
mov
xchg
xchg
aaa
outsb
stos
cmp
jecxz
jne
mov
mov
test
sub
sub
fwait
mov
push
adc
insl
xchg
adc
push
jmp
add
jns
sub
mov
push
push
jecxz
cmpsl
enter
jp
jb
mov
inc
das
mov
imul
repz
sub
popa
roll
lahf
mov
iret
cmpl
ret
add
call
add
fists
repnz
fnclex
out
inc
push
out
xchg
bound
xchg
repz
test
test
loop
dec
test
push
cwtl
xchg
in
mov
dec
cmp
cltd
xchg
push
addl
sub
ret
push
dec
movsl
mov
das
out
testb
xchg
jg
adc
imul
lcall
in
hlt
add
data16
mov
mov
pop
or
aaa
in
mov
push
sub
addps
adc
movsl
adc
jnp
dec
outsb
mov
sarb
iret
jnp
pop
pop
iret
and
in
jecxz
mov
ret
sbb
std
cmc
push
and
sbb
jge
xor
pushf
xor
shrl
mov
out
lcall
hlt
fwait
jb
cwtl
dec
or
xchg
push
scas
pop
mov
decl
int3
cld
inc
push
dec
mov
xor
ljmp
inc
into
dec
inc
mov
rcrl
pop
jp
loope
dec
push
addr16
inc
shlb
fmull
lcall
jp
pushl
dec
out
lahf
iret
sub
push
mov
xor
add
into
mov
pop
mov
lods
cmp
mov
loopne
mov
adc
xor
out
pop
test
push
push
and
or
dec
into
xchg
or
xchg
mov
arpl
xchg
sub
mov
in
notl
ljmp
or
mov
adc
fbld
pop
pop
sub
or
daa
mov
mov
adc
mov
sub
aaa
jge
mov
imul
lret
nop
outsb
loope
daa
adc
outsl
push
xor
outsb
add
xchg
mov
outsb
test
pop
out
pop
xlat
mov
inc
push
or
cmp
loop
clc
sub
daa
imul
loopne
sub
xor
aaa
in
push
data16
cmc
fwait
mov
add
out
out
mov
sub
mov
jg
insb
xor
movsl
cmp
loope
adc
std
xchg
sarb
pop
jb
addr16
push
icebp
xlat
dec
aad
lds
call
add
or
imul
int
adc
enter
pop
xchg
icebp
sub
test
mov
rol
adc
xor
in
cmpsl
sub
cli
xor
adc
push
xchg
push
les
cmpsl
insl
pop
dec
jp
and
negb
hlt
jmp
scas
dec
mov
inc
push
xchg
dec
les
sbb
inc
adc
or
loop
rorl
out
mov
xchg
mov
insb
mov
je
cmp
pop
fwait
xor
sbb
lods
es
sbb
sahf
jp
xor
push
jp
test
pop
inc
mov
lahf
push
rclb
daa
mov
fs
jecxz
aad
mov
call
pushf
dec
scas
inc
lock
cmpsb
add
push
mov
cwtl
adc
add
pop
inc
add
xor
jecxz
pop
in
push
or
pop
xchg
enter
pop
aas
sbb
insl
andl
sub
add
pop
icebp
std
andl
movsl
cmp
sbb
nop
je
ja
out
add
xor
cwtl
lods
js
mov
pop
mov
lcall
gs
mov
and
rcll
test
cmp
nop
push
pop
jbe
sbb
lods
or
lahf
shrl
mov
fsts
test
inc
push
outsb
ja
test
pop
mov
in
jge
sbb
inc
adc
mov
cmp
enter
mov
les
cmp
js
sub
mov
ret
mov
add
jmp
cmp
cli
loop
inc
dec
fmulp
lret
and
repz
jl
cmc
add
xor
fs
out
pop
dec
cmp
adc
das
push
mov
jae
jo
test
outsb
pop
pop
ljmp
jo
push
es
ljmp
cmc
popf
pop
fucomp
js
sbb
lea
cs
dec
lret
pushf
xchg
ja
lret
xor
mov
int
int3
mov
idivb
jg
testl
sub
cmp
addr16
inc
call
inc
dec
cmp
cmp
inc
jmp
and
loope
adc
adc
insl
cmp
aad
xchg
mov
mov
sub
sar
mov
daa
push
xor
aam
mov
xchg
or
hlt
jns
ss
into
mov
rorl
mov
into
xchg
ret
add
sbb
push
xchg
mull
mov
lret
jne
popa
mov
and
cmp
notl
test
cmp
orb
xlat
movsb
repz
loop
addr16
add
outsl
push
adc
aad
push
mov
in
mov
mov
mov
push
in
and
pause
and
fsubl
xor
daa
ss
iret
add
je
daa
aaa
add
dec
dec
and
out
mov
movsl
call
hlt
je
sarb
fs
jmp
shr
arpl
jge
push
cs
insl
add
mov
outsb
movsl
mov
iret
pop
lahf
dec
push
dec
push
mov
hlt
lods
mov
mov
mov
push
ljmp
jg
lret
inc
insb
mov
xchg
or
push
mov
fistl
push
sub
js
jg
cmpsb
pop
add
fldcw
cmc
aam
mov
fnstenv
popf
rorb
ds
mov
lods
pop
or
imul
cwtl
inc
sub
insl
sbb
fistl
sbb
push
stos
push
enter
mov
and
xchg
push
xchg
sbb
testl
push
sbb
and
mov
andl
cmp
mov
lock
push
push
adc
push
push
mov
cmc
sbb
xchg
mov
clc
gs
pop
sub
aam
js
or
xchg
insb
lret
das
bound
das
pop
and
dec
sti
mov
bound
das
sbb
repz
xor
jecxz
divl
mov
in
dec
mov
jmp
out
xchg
es
mov
mov
push
jge
push
jns
rclb
pop
jl
sbb
mov
cld
rclb
rorl
pop
inc
or
mov
cltd
ret
rorl
lods
xchg
loopne
sub
push
mov
push
jp
push
xlat
cld
pop
jno
xor
sti
push
fistl
testb
test
mov
inc
push
mov
idivl
xchg
cld
adc
into
xchg
ret
insl
inc
xorl
or
int3
pop
fdivl
insb
adc
sbb
xchg
and
cltd
mov
in
mov
sub
cmp
dec
ds
shlb
inc
sub
dec
ret
lods
cmp
push
fiadds
test
sahf
cmp
mov
and
repz
enter
add
sub
fidivrl
cmp
outsb
push
mov
or
xchg
cmpsl
dec
cwtl
iret
adc
mov
sbb
push
je
jp
xchg
scas
cmp
call
decl
sub
push
jo
fcomi
mov
int3
hlt
lret
orl
daa
js
int
fstl
sbb
je
popa
push
mov
mov
loop
fwait
incl
mov
mov
fimuls
xchg
lcall
inc
ret
daa
sub
and
sahf
in
fidivl
addb
jmp
int
scas
into
test
adc
stc
fwait
cmpsl
pusha
mov
inc
and
dec
inc
add
dec
test
mov
mov
xor
das
sub
mov
pop
lcall
inc
shlb
test
sub
nop
inc
push
aas
jge
or
or
dec
xchg
in
mov
test
enter
push
jb
cmp
inc
sbb
cmp
mov
mov
test
in
mov
cwtl
mov
add
mov
jns
adc
adc
aas
xchg
xchg
and
xchg
or
negl
xchg
push
lcall
jle
push
add
push
mov
pop
jae
in
stos
push
loope
push
inc
cmp
js
stos
ljmp
mov
test
jp
cmp
jg
sahf
inc
ja
test
pop
fidivl
out
repz
pop
add
shrb
lds
addr16
lret
je
xor
out
jmp
cmp
mov
scas
std
cmp
stos
cmp
loopne
cmp
or
mov
xchg
sub
add
ljmp
idivl
and
mov
sarb
lret
out
cmp
filds
cmpsl
outsb
push
jae
sbb
push
cmpl
mul
loopne
xor
xchg
jbe
and
mov
push
lret
lock
lcall
enter
testb
sbb
fwait
cmp
inc
lahf
cmp
pop
cwtl
fxch
jle
pop
loope
addb
out
xor
test
aam
pop
adc
push
enter
jge
or
jecxz
sarl
sub
mov
mov
or
xchg
add
mov
into
lods
insl
dec
inc
mov
or
jne
jg
popf
mov
jno
pop
loopne
addl
push
movsb
pop
fs
dec
jg
mov
ret
sub
insl
mov
inc
jno
cmp
inc
call
xchg
pop
xorl
in
lahf
rcr
jg
mov
or
vminss
gs
pop
loop
bound
repz
fistpll
adc
ret
xchg
jle
mov
cltd
mov
nop
mov
xchg
jno
pop
jle
mov
cmpl
cmp
mov
fistpll
or
out
push
xchg
mov
fisubrl
or
out
adc
xchg
and
and
sub
jp
push
jle
cli
mov
sub
or
out
loopne
xchg
inc
dec
add
lret
xchg
push
mov
mov
cmp
inc
mov
and
lea
pop
dec
mov
lret
pop
lds
jecxz
in
mov
test
fsubs
inc
sbb
and
gs
mov
in
fwait
xchg
inc
out
xchg
test
outsb
test
insl
jge
cmp
cli
push
inc
xchg
icebp
mov
test
pop
push
dec
les
pop
sbb
ret
mov
xor
mov
add
std
sub
sub
in
popa
mov
cmp
jo
add
fidivs
lds
and
jg
adc
pop
cmp
cwtl
dec
mov
adc
dec
subb
cmp
pop
sub
jp
dec
and
cmp
push
lcall
pop
jge
stc
popa
inc
xor
lods
push
jne
repnz
jns
push
pop
leave
xchg
mov
jg
cld
mov
movsl
jge
stos
adc
fnsave
jnp
mov
sbb
aam
scas
fidivl
cmp
xor
bound
add
je
xchg
inc
push
mov
and
xor
adc
lret
cmp
xor
push
jmp
sbb
shrl
pop
pop
lock
cltd
xor
cmpsl
mov
stos
mov
pusha
xchg
arpl
jg
enter
std
inc
push
daa
cmp
xchg
insb
loop
hlt
mov
sbb
inc
mov
add
test
push
push
lock
cmpsb
push
push
pop
or
arpl
mov
out
push
mov
adc
add
mov
jmp
and
insl
std
scas
cmc
jmp
outsb
cwtl
and
cmp
flds
xlat
cmp
ret
mov
sbb
icebp
adc
out
sbb
push
cld
out
negb
dec
int3
mov
or
imul
shl
repz
aas
xchg
xchg
js
add
push
bound
daa
jg
dec
sub
lcall
mov
lods
sub
fisttps
mov
adc
jno
ljmp
or
in
ret
dec
or
and
mov
jp
andps
hlt
in
clc
pop
test
jmp
jns
sbb
mov
daa
jno
btc
dec
sub
inc
out
aas
lods
fnstcw
mov
jl
push
cwtl
std
jno
mov
test
aas
daa
xchg
loope
aaa
add
in
lds
dec
sub
cmpsb
push
push
pop
cld
out
fcmovnu
xchg
pop
lret
sbb
daa
adc
cwtl
dec
xchg
subl
adc
inc
rorb
jb
pusha
cmp
sbbl
insb
jecxz
pop
xor
inc
repnz
mov
and
dec
dec
aad
jb
punpckldq
mov
imull
xchg
push
dec
xor
call
pop
cs
mov
jns
ss
inc
cs
mov
sbb
ret
imul
push
imul
data16
adc
xchg
fs
sub
js
mov
and
in
xchg
addb
inc
bound
iret
int3
jmp
or
fstl
pop
sub
shl
inc
ja
rcrb
mov
jno
pop
cmp
pop
scas
sbb
push
pop
xlat
pop
loop
fsubl
mov
sahf
pop
mov
rol
aas
rcll
pop
xlat
stc
push
enter
xor
es
xor
movsb
lcall
stos
cmp
push
jb
mov
idiv
xchg
mov
negb
ficoml
lret
loope
cmp
insb
loopne
add
xchg
push
int3
sbb
sbb
loop
push
imul
data16
lret
clc
xlat
and
jb
ret
addr16
jbe
pop
push
pushf
adc
loopne
ss
cltd
mov
loope
ljmp
or
inc
push
aaa
xor
jbe
lock
lds
lods
push
adc
stos
mov
sbb
jne
out
jb
mov
xor
btcl
mulps
insl
cmp
cmpsb
jno
adc
xlat
notl
sti
cli
add
xorb
mov
or
subl
mov
popf
outsl
sub
push
mov
mov
cmpsl
pusha
jecxz
dec
icebp
loope
in
pop
lea
dec
adc
cwtl
mov
cmp
jmp
ret
aas
std
pop
pop
inc
ljmp
jne
jmp
xchg
pop
icebp
setge
xchg
je
cld
mov
pop
icebp
adcb
out
jns
pop
cwtl
nop
push
std
pop
push
xchg
out
fstpl
das
jg
int3
xor
ret
sahf
fdiv
ficompl
cmp
out
clc
ljmp
and
fisttpll
and
jne
outsb
mov
adc
call
imul
js
psadbw
pop
add
lods
add
mov
mov
pushf
test
or
nop
cmp
xor
jo
push
push
mov
js
mov
iret
mov
nop
sbb
add
pop
mov
xor
pop
pop
cmpb
aam
mov
dec
mov
pop
mov
lods
mov
inc
cmc
jge
subl
pop
insb
std
sbb
pop
add
or
dec
mov
add
sar
mov
into
jbe
test
xchg
mov
in
inc
mov
jl
mov
scas
out
xor
add
dec
push
inc
xor
mov
mov
xor
mul
sahf
jl
jnp
cmp
mov
sbb
pop
mov
jbe
repnz
sbb
adc
fildll
and
shrl
pop
in
scas
rcrb
stos
or
xor
daa
iret
test
stos
pop
lahf
and
loope
lret
lock
ret
jp
shr
jno
adc
lahf
stc
jno
inc
outsl
jg
out
addb
inc
mov
or
scas
cmc
mov
out
in
or
sahf
stos
jno
mov
and
pop
aad
push
out
aas
push
xchg
arpl
xchg
lds
aaa
lret
dec
or
add
push
andb
xor
dec
dec
int3
aad
pop
out
sbb
push
mov
xchg
ljmp
movsb
xchg
xchg
daa
lods
scas
jns
and
lret
inc
xor
sub
xor
pusha
jle
loope
test
stos
stos
in
add
imul
inc
add
iret
jmp
ss
mov
xchg
pop
das
arpl
jge
mov
outsl
push
jmp
popa
pusha
icebp
aaa
lock
cmc
fadds
mov
pop
imul
test
jae
icebp
pop
or
mov
dec
push
sbb
cs
push
outsl
cld
mov
jns
xor
fwait
push
testl
mov
sbb
lret
int
call
andl
cmp
ljmp
scas
mov
and
sbb
cmp
and
aad
inc
mov
or
and
pop
dec
adc
jno
sarb
cltd
xchg
mov
bound
dec
int
insl
jo
lock
bound
sub
test
rorb
or
dec
call
dec
xchg
adc
cmp
sbb
movsb
jle
pop
mov
add
roll
fisttpl
lcall
jecxz
xchg
cmc
push
jb
inc
stc
in
mov
and
ljmp
les
xor
sub
mov
mov
jle
nop
adc
adc
std
stos
loopne
jmp
test
dec
adcb
add
xchg
insl
mov
mov
push
jno
dec
mov
xor
adc
sub
or
mov
push
cwtl
push
rorb
rorl
mov
pop
and
pop
xor
test
sub
cs
in
lret
mov
cmp
imul
repnz
mov
aas
mov
pop
hlt
bound
aas
sub
incb
jecxz
rol
xchg
ss
add
mov
mov
mov
pushf
jo
pop
mov
or
adc
aad
pop
mov
sti
mov
js
xor
in
add
add
repz
loop
repnz
leave
add
mov
cld
mov
inc
mov
cmp
idivb
mov
fidivrs
pop
fsts
sub
ja
data16
adc
mov
shll
out
ljmp
jle
xchg
push
mov
jle
xchg
inc
jns
add
aad
test
mov
inc
mov
adc
call
lea
xchg
out
mov
push
mov
jae
sbbl
fldl
cld
clc
mov
and
mov
fsubrs
jnp
and
std
mov
xchg
loop
loop
push
fisttpll
imul
xor
sub
sub
xor
sub
pop
gs
imul
add
pop
fcomip
jl
inc
mov
int
outsb
add
jle
dec
sbb
xorl
dec
lahf
aam
insb
mov
adcb
aam
mov
enter
mov
mov
movsl
movsb
and
in
stos
cltd
adcl
adc
aas
jo
xor
adc
xor
aas
sub
mov
std
and
fstps
lret
or
and
add
adc
insb
adc
mov
xor
pop
lods
sub
sarb
icebp
push
jecxz
push
xchg
sbb
mov
xor
xor
add
mov
add
mov
mull
lods
in
jecxz
mov
shl
lret
out
and
cmpsb
test
std
cli
jle
xlat
fwait
mov
dec
push
jle
xchg
ljmp
mov
imul
mov
mov
xchg
sti
inc
pusha
out
inc
pusha
ret
push
sub
mov
push
sub
xor
ret
push
dec
mov
cmp
jb
lahf
mov
dec
xor
movsl
aad
test
fidivrs
cli
push
ss
xor
ficoml
cmc
enter
inc
cmp
sbbl
shrb
sub
dec
push
jb
jae
lcall
xlat
sti
or
push
pop
dec
call
sahf
dec
popf
in
dec
pop
and
iret
mov
mov
mov
mov
push
jecxz,pn
mov
mov
cmpb
jge
xchg
fdivrl
sbb
not
mov
hlt
inc
out
push
insb
aaa
out
xor
out
sub
lcall
push
ss
sub
clc
test
xchg
test
popf
enter
add
cmp
lahf
cld
ljmp
enter
xor
xor
idivl
and
pop
jns
cs
outsl
inc
cltd
inc
mov
jne
in
lcall
add
jae
scas
xchg
inc
xchg
adc
fwait
pop
test
scas
pop
xlat
mov
subl
mov
mov
sbb
pop
cmp
call
push
ljmp
addr16
fsubrs
dec
sbb
loopne
cmp
add
push
clc
fwait
jp
inc
mov
pop
fsubrl
inc
and
xor
dec
cld
or
mov
xor
data16
jle
push
inc
cmp
in
leave
xchg
aaa
sub
push
mov
cs
jge
outsb
cltd
call
dec
push
xlat
adc
adc
pop
fsts
mov
add
sbb
xor
shll
xor
popa
es
ljmp
and
in
push
push
lret
cmp
call
fcomp
sub
cmp
and
jge
imull
addr16
shrb
lods
lcall
mov
ljmp
ljmp
dec
roll
jno
dec
dec
pop
lea
and
push
dec
stc
mov
test
push
mov
jp
inc
mov
push
into
jp
inc
dec
or
inc
add
mov
mov
sbb
jae
imul
outsl
jno
sbb
cld
test
add
xchg
sti
int3
jns
into
std
pop
cmp
adc
sbb
pop
pop
jns
in
ljmp
mov
out
dec
xor
push
repz
push
or
bound
lds
xor
inc
sub
hlt
push
inc
adc
sub
and
mov
aad
sti
dec
sar
sbb
or
xchg
pushl
popa
aas
and
xor
mov
push
adc
push
sti
in
jp
clc
and
ja
ret
data16
stos
movsl
sbb
mov
out
dec
iret
lahf
adc
mov
shr
sbb
mov
and
dec
ret
repnz
mov
sbb
dec
mov
push
aad
cmp
popl
inc
xchg
addr16
das
rclb
push
xlat
sbb
adc
push
or
loope
jp
adc
mov
pop
xor
push
nop
neg
movsl
imul
jg
pop
mov
test
push
sub
pop
and
cmp
sbb
xor
loope
cmp
test
insb
mov
and
outsb
and
or
ja
or
xchg
cmc
adc
mov
fabs
push
mov
pop
sub
movsl
repz
jg,pt
cmp
inc
out
aaa
mov
sahf
sub
repz
push
dec
add
in
inc
aam
sub
lret
dec
dec
js
test
sub
sbbb
int3
out
jp
pop
mov
push
int3
xor
aad
negb
xchg
push
inc
mov
jp
jo
loopne
mov
jnp
into
jecxz
das
mov
scas
and
dec
call
jno
stos
cmp
and
jmp
push
dec
push
push
outsb
lds
pop
jmp
out
fs
sahf
cmpsl
jo
das
push
xchg
inc
pushf
inc
mov
gs
clc
pushl
rorb
xchg
pop
bound
push
cld
out
or
xchg
mov
jnp
call
repnz
or
inc
hlt
pop
push
out
cs
int3
fsub
jns
jmp
inc
movsl
imul
sub
add
out
sub
jnp
and
shll
fsubl
cwtl
inc
cmp
xor
aas
xor
sbb
stos
push
sbb
jbe
cli
ret
pop
cmp
fadds
out
or
aam
rclb
mov
pop
pusha
sbb
sbb
enter
lock
cltd
aad
xchg
negl
inc
mov
inc
dec
int
jno
iret
jno
adc
or
mov
push
mov
repz
adc
aam
mov
fsqrt
out
jl
stc
xlat
cld
sbbl
mov
sbb
stc
loopne
or
shl
pop
lock
fucom
mov
add
sub
out
jns
jp
and
sbbl
add
test
inc
push
add
pop
ja
ds
scas
les
cmp
sbb
dec
call
sahf
aas
or
push
mov
in
daa
xchg
mov
dec
dec
in
jo
ljmp
xor
mov
push
rcl
ds
dec
pop
rol
stc
fadd
cli
adc
ss
jne
sti
xor
mov
and
xchg
daa
xchg
clc
mov
cmp
add
xchg
xor
sub
dec
test
fisubrs
enter
mov
push
loop
mov
cmp
divl
mov
mov
or
lods
xor
test
ror
adc
dec
sbb
je
mov
aad
inc
inc
fbld
dec
aam
jmp
jnp
imul
ficomps
xchg
jecxz
mov
aad
loopne
aam
push
push
lret
mov
inc
dec
xchg
jae
fbld
jl
pop
push
or
lds
fcmove
rcrb
add
sub
jge
dec
jle
mov
xchg
test
imul
sbb
dec
cmp
sbbl
lods
jmp
cmc
push
add
xor
dec
scas
js
adc
in
sahf
mov
and
push
jno
ja
and
xor
jg
pop
pop
outsl
movsl
mov
mulb
inc
sbb
jl
jle
je
xchg
outsl
or
xchg
int3
and
xchg
cmp
mov
push
daa
adc
mov
addr16
push
lahf
insb
mov
fisubl
dec
adc
roll
jb
or
push
jo
mov
xchg
das
lahf
jae
jo
addr16
in
dec
aad
out
in
or
xchg
in
jns
pop
add
test
gs
repnz
pop
jge
lret
aaa
push
xchg
mov
or
cmp
jo
xlat
insl
jecxz
in
jmp
in
fildll
or
aaa
aam
pop
push
jmp
jl
add
pop
movsl
mov
stos
ss
movsb
lods
bound
cmp
push
sbb
cld
fucomp
in
mov
rorb
xor
rcr
shll
mov
shll
pop
push
xlat
outsl
add
jb
pop
jae
clc
shrl
repz
dec
jne
or
in
inc
mov
mov
jg
cmc
xchg
dec
and
call
mov
addr16
in
ja
aad
mov
pop
sub
sub
xchg
lret
data16
or
push
or
push
adc
rcrl
insb
cmp
pushf
mov
push
jge
into
pop
sub
add
in
test
adc
out
dec
add
or
outsb
inc
or
jnp
test
in
cmp
bound
imul
push
or
inc
xchg
insb
lahf
insl
daa
cmp
je
lods
and
movsb
subl
adc
loopne
sub
cs
imul
ret
stos
out
fistpl
xlat
sbb
sub
ret
movsl
inc
sub
jno
mov
fs
outsl
mov
and
inc
mov
repz
fildl
cmp
aad
jl,pt
mov
sub
push
cmp
shr
and
out
stos
adc
fwait
in
push
aad
sub
into
iret
cli
cmpl
jg
cmp
gs
adc
mov
pop
je
stos
outsb
cmp
cmp
pop
test
roll
mov
in
jb
jno
jae
inc
dec
mov
stc
inc
or
sub
pop
or
adc
cmp
push
ss
xchg
jns
idivl
mov
adc
fists
xchg
cli
loop
and
cmp
cmpb
and
xor
cltd
pop
dec
lods
jle
sbb
popf
add
adc
les
and
mov
punpckhdq
adc
js
push
or
hlt
adc
and
mov
out
dec
mov
xchg
out
sti
aas
arpl
pop
cmp
mov
push
xchg
lret
xchg
shlb
out
sub
xchg
push
mov
das
jl
insl
sub
dec
mov
and
in
inc
jl
mov
test
pop
test
nop
jmp
and
adc
mov
jo
data16
ss
orb
adc
or
retw
lret
cmp
xchg
repnz
push
repz
xchg
adc
fcoml
inc
and
push
cmc
jae
shl
into
popl
adc
lods
pop
jge
vpcmpgtw
jbe
pop
sbb
push
in
jmp
xchg
bound
mov
int
sub
imul
loop
add
mov
pop
lods
leave
adc
shlb
add
push
in
daa
mov
xchg
stc
sbb
mov
add
cmp
adc
add
jmp
nop
fsubs
ljmp
sbb
dec
in
xor
and
xor
mov
stos
shll
dec
adc
nop
shlb
mov
mov
mov
out
sbb
arpl
js
mov
cmc
dec
push
pop
js
jne
jnp
lcall
xor
scas
shll
jmp
adc
ss
andb
or
cmpsb
xchg
jp,pt
nop
mov
xor
adc
ss
pusha
lahf
and
arpl
orl
frstor
loop
fs
scas
mov
pop
xor
jle
or
add
aaa
inc
loop
inc
in
mov
sahf
shlb
inc
in
ret
jle
je
lret
xor
stc
fs
in
add
aad
in
ficoms
mov
loop
or
loope
add
sbb
fstpl
mulb
cmc
pop
sahf
mov
push
xchg
lret
lret
negl
fisttps
cmp
int
mov
and
push
jle
pop
add
cli
in
adcb
in
xlat
inc
jns
mov
add
mov
repnz
dec
outsl
aam
push
mov
mov
outsl
cmp
lock
fwait
xor
jge
lods
sti
lods
inc
pop
or
push
cmc
stos
call
hlt
repnz
sbb
mov
insl
in
jp
mov
lret
std
in
es
inc
xlat
lods
or
xor
jg
adc
stos
enter
cmp
push
mov
inc
dec
adc
push
hlt
push
sbb
popa
and
jp
jl
sub
rcl
int
in
ja
ds
out
notl
cmp
fdivrs
pushf
jl
dec
fisttpll
in
or
ljmp
cmp
cmpl
cmp
arpl
push
or
add
sbb
pop
lods
xorb
fdivrs
dec
jmp
jp
dec
aad
test
cld
and
gs
mov
dec
mov
rcll
es
mov
aas
jecxz
stos
cmpsl
arpl
jnp
mov
leave
je
iret
cmp
mov
push
inc
orb
clc
iret
loop
mov
div
push
adc
jle,pn
ret
adc
and
jnp
mov
fsubrs
test
dec
rorl
hlt
scas
popf
push
xor
shll
xchg
inc
or
repz
in
dec
push
outsb
std
imul
lods
xchg
jp
movsl
movsl
add
lds
or
mov
add
inc
add
jmp
ja
ret
test
dec
mov
rolb
mov
or
aad
jae
cmpsb
insl
or
mov
xchg
or
xor
xchg
xchg
mov
pop
das
movsb
addr16
push
mov
adc
pop
push
loopne
xchg
or
cmp
push
sbb
xlat
pop
popa
aad
mov
cmp
mov
pusha
add
nop
push
inc
movsb
sbb
pop
cmp
scas
roll
lret
sbb
mov
xchg
pusha
sahf
pop
dec
and
je
xlat
and
imul
cmp
lock
iret
xchg
xor
jle
nop
jecxz
mov
push
repz
imul
xchg
sub
mov
push
or
mov
repz
std
sub
dec
insl
repnz
and
pop
fdivr
loope
ret
push
int3
fsts
sub
mov
cwtl
filds
xor
pop
orl
fst
lods
jae
inc
add
xchg
push
test
mov
jmp
pop
or
icebp
lods
insl
shll
adc
inc
xor
xchg
je
inc
or
cmp
rcll
mov
fidivs
rclb
xor
in
sti
cmp
outsl
out
shlb
xchg
and
mov
pop
out
shrl
jns
dec
and
out
inc
addr16
bound
mov
lahf
and
shll
lea
daa
mov
mov
cwtl
into
out
lods
adc
jno
jp
jno
jg
scas
insb
and
lahf
movl
movsb
out
push
mov
jno
adc
sarl
scas
orb
dec
push
xchg
add
fs
jo
xchg
outsb
xchg
xchg
lcall
iret
mov
sub
and
or
push
push
lea
cmp
sarb
maxps
mov
cmp
push
jp
dec
fwait
mov
lret
pop
add
ret
cbtw
cmp
je
mov
jne
mov
pop
ret
ja
push
lcall
mov
jae
pop
jge
xchg
inc
sub
out
popa
mov
movsb
pop
fimull
sti
dec
dec
mov
mov
mov
push
fs
ficoms
sbb
nop
lea
xlat
mov
jp
adc
add
rorb
je
test
daa
mov
mov
scas
pop
jmp
mov
cmpsl
add
into
or
dec
push
and
fisttpl
mov
cmc
and
xor
xor
inc
fiaddl
ljmp
addb
sti
cmpsb
xor
pop
push
adc
sbb
jmp
cmp
jecxz
fninit
mov
mov
pushf
and
jg
stos
dec
push
not
mov
mov
lods
cmp
adc
adc
pop
ljmp
mov
mov
push
xor
lds
xchg
cmp
ficomps
out
ret
adc
popa
or
shlb
into
pusha
sbb
lret
ret
adc
dec
push
pop
sbb
shlb
xchg
cli
dec
test
arpl
loopne
push
shl
cmpl
sbbl
xchg
pop
in
dec
out
push
mov
xor
icebp
xchg
cmp
cli
adc
decb
nop
das
jb
repz
xor
adc
pusha
shl
fisubs
cmp
adc
xchg
push
clc
sbb
push
loopne
pop
lock
dec
pusha
mov
inc
shr
ljmp
stos
fadds
rcrl
les
and
xchg
in
lods
jae
out
xlat
imul
arpl
lock
lods
push
pop
fwait
add
ficompl
adc
les
rcl
fimull
je
cmpb
fadds
mov
jne
data16
mov
cmp
shrl
adc
ret
hlt
lahf
fldcw
jmp
adc
mov
mov
dec
sbb
mov
pop
jbe
xchg
jmp
enter
adc
into
sub
nop
jp
pushf
shll
sbb
daa
and
adcl
push
or
sub
or
push
cmp
dec
xchg
jmp
bound
shll
int
ss
push
sbbb
std
and
cmp
pusha
mov
shlb
ljmp
jl
in
int
aam
mov
add
imul
gs
lods
outsl
inc
mov
or
push
mov
mov
jle
mov
lods
cmp
cmp
mov
sub
jbe
rcr
leave
jl
mov
and
mov
and
daa
xor
insb
testl
stos
add
sbb
int
mov
js
mov
dec
lret
mov
ret
idivb
loope
mov
xchg
cli
cmp
repz
test
les
lods
es
pop
pop
inc
xor
test
sbb
stc
sti
in
inc
clc
mov
mov
xlat
imul
dec
pop
hlt
shr
or
sbb
lea
or
push
insl
pop
cmp
xchg
mov
sahf
imul
popf
push
xor
in
push
xor
data16
rolb
ret
lret
push
stos
scas
pushf
movsl
and
inc
xlat
in
sbb
outsl
adc
push
push
mov
lret
add
or
push
inc
daa
movsb
and
dec
ret
daa
dec
pop
jb
mov
shll
xor
mov
add
rolw
pop
add
cmp
pop
pusha
out
popa
pop
std
xchg
sub
scas
pusha
ja
aam
push
subb
gs
mov
out
pop
cli
rclb
in
jmp
mov
xchg
jp
inc
lcall
xor
pop
add
rclb
mov
bound
ret
dec
push
testl
mov
hlt
cmp
jno
enter
adc
nop
push
pop
jmp
push
dec
mov
mov
pusha
aas
mov
push
or
inc
mov
dec
mov
push
je
pop
jp
push
xchg
push
sbb
lret
enter
mov
jge
cmp
stos
arpl
cmpb
fmull
in
jno
repnz
test
iret
pop
lods
ret
jg
xchg
je
fs
xchg
clc
sub
dec
sub
outsb
lret
adc
and
jecxz
jge
xchg
cmpsl
sbb
pusha
arpl
adc
rolb
aad
push
pop
sub
dec
aam
hlt
adc
and
cmp
adc
mov
inc
inc
dec
aad
ret
out
push
scas
dec
mov
popa
movsl
jns
je
cltd
cmp
cmp
lcall
jp
popa
testb
jno
cli
adc
popf
xor
pop
sbb
rcll
mov
ret
test
add
in
fsubp
scas
iret
fldenv
shrb
mov
jne
lret
mov
fists
push
les
dec
fsubrs
les
or
outsb
xor
or
insl
ja
aad
daa
adc
mov
test
pop
xlat
xor
push
dec
add
ja
sub
out
inc
xor
xchg
aam
cmpsb
xor
clc
xor
inc
neg
jle
dec
cmpsb
cli
testl
cltd
xor
imul
inc
mov
push
mov
push
call
pop
test
enter
pop
add
sub
aas
into
and
inc
mov
gs
mov
in
push
lret
adc
aaa
mov
push
test
sub
loope
int
pop
in
daa
inc
mov
mov
sbb
mov
push
cs
decl
aas
repnz
popa
aad
or
loop
mov
ja
xor
into
adc
sbb
xor
aad
cmpsb
sub
scas
sbb
dec
test
divb
mov
loop
ja
pusha
imul
mov
sahf
jo
test
stc
mov
jl
outsl
pop
xchg
call
imul
mov
cld
add
pop
pop
push
out
add
jbe
sti
sub
test
lret
mov
sbb
sub
push
mov
pop
push
xchg
jg
outsl
jecxz
daa
jne
xchg
mov
call
inc
inc
mov
cmpb
pop
leave
fs
pop
push
out
sub
lods
adc
rcrb
add
rcrl
lret
add
add
sub
cmp
or
inc
jp
outsl
cs
jl
popf
dec
push
dec
gs
add
int
xor
jmp
add
enter
fsubl
cmpl
shrl
push
shrl
xchg
mov
inc
das
daa
pop
out
js
incl
inc
xor
ja
xchg
jp
inc
jg
lcall
inc
dec
jecxz
push
insb
insb
cmp
lea
and
xchg
repz
in
mov
jo
jno
adc
das
dec
idiv
loopne
hlt
lea
ljmp
push
cmpl
adc
inc
sub
les
rorb
pop
or
dec
jge
je
dec
out
pop
fwait
shlb
popf
ror
insb
insl
ja
or
test
aam
push
ljmp
dec
or
ja
sub
jne
cmp
scas
or
mov
and
inc
cmpsb
scas
fsubrs
adc
lret
loopne
mov
mov
out
and
addl
negb
sbbb
xor
div
shrb
pop
xor
sbb
popf
push
xorb
rolb
xor
mov
mov
jl
notl
inc
adc
dec
and
mull
insb
in
xchg
js
mov
mov
ret
stos
jge
cli
jbe
icebp
xchg
mov
and
cmp
mov
cmp
cwtl
std
fidivs
push
push
lret
in
mov
in
jns
mov
mov
and
jbe
loop
ljmp
imul
cmc
out
fistpl
orb
sub
ficoml
and
push
test
adc
lock
sbb
add
fildl
xchg
inc
sbb
xchg
lcall
pop
xchg
test
call
arpl
imul
rclb
lret
cmp
xchg
and
aas
in
inc
inc
lds
inc
test
jo
in
xlat
insl
aad
movsb
mov
inc
xor
out
icebp
insb
mov
js
or
cmpsb
sbb
in
jmp
dec
repz
push
jbe
out
imul
adc
sub
in
js
loop
lret
and
jo,pt
cli
mov
xchg
loopne
out
test
cwtl
pop
inc
repz
imul
inc
cwtl
sub
leave
or
or
and
push
or
loop
or
out
push
xor
sbb
lret
dec
add
jns
push
rorb
sbb
sbb
into
xchg
shrl
inc
adc
mov
mov
rcrl
xor
lds
or
adc
call
mov
xor
dec
sbb
in
mov
push
inc
nop
lcall
ljmp
and
add
ss
mov
xor
sti
push
xchg
test
dec
mov
lcall
test
or
cmp
inc
test
cmp
lahf
sti
push
les
test
mov
jmp
push
movsl
dec
stc
push
xchg
call
mov
sub
movsl
push
popf
outsb
cmpsb
mov
mov
mulb
pop
mov
pop
in
mov
jmp
or
bound
mov
icebp
xlat
sub
xchg
imul
jbe
inc
push
lock
into
jne
pop
mov
jae
and
mov
psubb
repz
push
or
mov
mov
fildll
into
insl
push
enter
cmpsl
cmp
sub
lret
pop
cwtl
inc
sub
push
fsubr
orl
gs
and
imul
stc
cmp
sbb
clc
scas
movsb
imul
sub
sub
sti
jne
fldcw
jnp
arpl
popf
das
mov
inc
cmp
call
jne
xchg
popf
jnp
int
call
mov
fcoms
cltd
cmp
fwait
cmp
fidivl
push
jns
pop
mov
add
adc
fcompl
insl
mov
push
sahf
in
mov
leave
jo
fcmovb
jecxz
sub
lea
sbbb
cmp
inc
jmp
push
ret
inc
push
loop
mov
xor
cmp
lcall
cs
mov
popa
in
faddl
jmp
and
fdivrp
or
mov
pusha
sbb
insl
pop
test
and
cmp
mov
vmovaps
iret
push
and
adc
add
mov
jns
fs
cli
push
idivb
add
mov
cmp
jle
xor
sahf
cmp
cli
les
push
adcb
sub
xor
sbb
push
and
adc
mov
ljmp
xorl
pop
shlb
dec
pop
jle
shr
xlat
in
icebp
mov
jmp
outsl
movsl
hlt
sub
or
sub
sub
popf
js
mov
stos
or
push
jns
dec
sub
lcall
add
cmpsl
lock
aad
sub
aam
shll
sbb
jg
negl
shlb
int
or
sub
xchg
mov
scas
insb
int
out
repnz
or
out
add
bound
mov
mov
sbb
popf
dec
fisubs
and
sarl
sbb
and
inc
call
shrb
sbb
push
push
inc
sarl
xchg
je
push
cmp
add
hlt
popf
jl
dec
aaa
and
adc
push
movsl
mov
mov
js
sub
iret
or
aam
jae
js
mov
in
sub
adc
cmp
mov
or
scas
fs
stc
push
mov
aam
pavgb
loop
jge
loopne
mov
adc
mov
xchg
ljmp
xchg
or
movsb
fwait
ss
cld
sbb
xor
push
pop
imul
push
xor
mov
insb
adc
add
sar
cmp
mov
mov
in
sbb
adc
xorb
jmp
pop
dec
xchg
and
arpl
outsb
idivl
mov
fstps
fcoml
in
rorl
adc
cmp
inc
or
mov
push
inc
add
lret
push
cs
pop
shll
aas
data16
cmpsl
mov
mov
insl
sti
dec
xchg
jmp
inc
push
ret
mov
fmuls
das
mov
imul
pop
aad
es
sub
stc
ljmp
xchg
mov
andb
jle
mov
movsb
mov
hlt
jmp
lahf
mov
mov
imul
cmp
xchg
xor
mov
jl
mov
lcall
mov
or
cs
popa
pop
fsubrl
and
inc
rcl
push
insl
push
aas
push
push
add
mov
pop
into
outsl
inc
shrl
pop
test
and
mov
fistps
sbb
jp
cmp
jmp
mov
push
push
xor
jg
inc
fildll
outsl
and
jns
pusha
adcb
sbb
jp
adc
mov
inc
mov
test
imul
jae
mov
mov
sub
in
xchg
jl
xchg
sbb
xor
imul
push
mov
stos
push
mov
cltd
sbb
nop
and
js
xchg
fucomip
pop
sti
int
sarb
lock
lcall
cmp
xchg
hlt
mov
push
add
push
nop
add
mov
lods
mov
dec
cli
or
mov
pop
scas
sub
ret
jae
enter
movsl
clc
popf
addl
push
imul
fbstp
cld
je
notb
lret
mulb
jge
subl
dec
sub
and
dec
ret
mov
mov
jmp
xor
stos
xchg
pop
repz
jns
and
xor
xor
int3
pusha
flds
enter
adc
jp
sbb
fistpll
inc
push
xchg
xchg
les
mov
mov
repnz
fs
mov
pop
imul
out
add
scas
pop
fldcw
sbb
fmuls
push
xor
clc
stos
ds
add
cmovl
pop
add
test
stc
test
pop
and
stos
pushf
sub
bound
xor
fldcw
icebp
test
stos
aaa
push
sti
mov
pop
add
rcl
xor
mov
mov
notb
add
pop
icebp
mov
in
mov
mov
push
aaa
sub
inc
lods
out
lods
cmp
mov
xchg
push
shlb
mov
stc
int
mov
ret
push
cmp
push
adc
jno
pop
gs
jo
pop
sahf
xor
mov
daa
jge
add
inc
push
add
cmpsl
stc
mov
dec
add
xor
adc
sbb
ljmp
std
inc
pop
mov
or
jo
sti
bound
gs
and
push
and
add
popl
mov
out
inc
mov
cmc
fdivs
mov
loope
jle
jle
xchg
gs
fildl
lea
call
test
pop
xor
repz
push
lcall
imul
popa
xor
mov
sub
sbb
mov
dec
scas
lahf
mov
cltd
mov
pop
fidivl
mov
mov
xor
mov
lods
out
mov
lock
js
mov
xor
iret
imul
pop
mov
test
mov
pop
dec
fs
lahf
adc
insb
inc
mov
insb
push
xchg
mov
push
xchg
jne
pop
pop
adc
dec
jno
aaa
pop
or
push
nop
ret
adc
daa
cli
sarb
retw
sti
aam
inc
adc
popa
xchg
cmpsl
sahf
push
cli
push
test
xchg
xchg
ret
xorl
and
faddl
aas
jg
add
jg
test
stos
incl
or
insl
and
add
mov
xor
add
daa
movntq
in
push
in
incb
jecxz
rolb
mov
loope
or
adc
test
mov
adc
insb
inc
shrl
icebp
sub
sbb
add
repz
lods
into
out
push
add
das
pusha
test
mov
sarl
rcrl
aas
push
mov
pusha
dec
popa
cli
and
jae
and
fdivs
and
sub
cmp
mov
nop
test
xchg
cmp
mov
push
mull
or
inc
cmp
inc
push
sti
hlt
pop
xchg
decb
into
mov
jnp
adc
stos
ret
dec
sub
xor
vmwrite
xchg
mov
mov
clc
inc
out
sub
imul
test
inc
loope
loop
js
ds
sti
jg
ds
xlat
push
leave
add
out
xlat
jmp
les
adc
pop
test
add
mov
xchg
jnp
dec
mov
mov
clc
push
xor
push
pop
push
mov
stos
cmc
hlt
sti
pop
add
leave
xor
ja
fcmovnbe
mov
xor
adc
adc
xchg
or
jno
stos
popl
sub
xchg
mov
jmp
sub
into
imul
inc
push
cmpsb
and
mov
mov
cltd
sahf
call
arpl
xor
aad
mul
pop
cmp
add
inc
test
or
or
out
stc
push
sahf
test
cmp
sub
adc
jae
lods
repnz
jmp
push
push
lahf
mov
fdivrl
cmc
outsl
cmp
sbbb
out
xor
enter
scas
cs
dec
daa
ja
cmp
es
adc
or
lock
dec
xor
dec
pop
fiaddl
fwait
push
fs
enter
xchg
in
mov
push
or
stos
cmpsl
mov
dec
jg
mov
incb
stc
cmpl
dec
or
fldenv
mov
lcall
mov
push
dec
cmpsl
cld
push
and
enter
adc
test
xchg
cmpsb
pop
pusha
xchg
adcb
sub
rcrb
xor
pop
and
loopne
pop
inc
mov
pop
lods
lcall
rcl
xor
lret
fs
adc
loop
ja
les
cli
dec
cmp
or
aad
imul
push
inc
iret
push
pop
data16
push
out
mov
das
cld
orb
loop
inc
ds
sub
es
jmp
stc
stc
adc
int3
push
pop
jno
pop
mov
loopne
push
sbb
add
ret
push
aas
xor
add
mov
add
icebp
jle
dec
repnz
and
mov
icebp
dec
ds
cwtl
jecxz
loop
mov
xor
push
cmpsl
js
cmpsl
lcall
pusha
lret
test
lret
mov
cmp
fists
jle
loopne
stc
push
test
push
jmp
aaa
mov
test
sbb
fldz
and
stc
not
mov
add
mov
pop
add
inc
es
ja
add
xchg
lock
les
bound
jno
lods
lret
dec
inc
mov
lcall
and
sahf
pushf
out
data16
std
or
mov
cmpsb
xchg
adc
in
inc
or
push
hlt
cwtl
call
jp
stc
pop
mov
ficomps
jge
fdivrl
into
jb
mov
in
test
jo
push
push
pop
lods
add
mov
sbb
lcall
in
pop
xor
mov
shrb
jecxz
addb
fmuls
push
mov
sub
mov
dec
leave
sar
je
push
pop
fwait
mov
xchg
scas
int
and
pushf
push
movsb
pop
rorl
sar
mov
imul
inc
sti
dec
bound
mov
shl
mov
scas
mov
or
xlat
or
dec
test
out
inc
inc
pushf
mov
mov
mov
adc
and
sub
or
sbb
push
mov
loopne
call
mov
scas
cmpsl
or
lcall
inc
lock
testb
cld
xlat
stc
scas
xchg
fs
call
mov
add
inc
xchg
test
aaa
in
out
or
adc
notb
and
xchg
scas
push
std
sbb
adcb
xor
movsl
sbb
mov
incb
mov
jb
ret
xor
sbb
ret
aas
cmpsb
xor
clc
fildll
add
mov
pop
adc
dec
mov
xchg
push
test
adc
stos
nop
pop
xchg
scas
sahf
insl
fimuls
andl
call
or
inc
stos
jp
das
js
testb
es
cmp
adc
mov
jle
rorl
flds
push
pop
lahf
sub
aaa
jmp
adc
lret
loopne
push
jne
lea
xor
test
and
pop
inc
jo
sub
pop
loop
inc
addb
mov
mov
lods
pop
push
jge
sbb
js
int
loopne
xor
movsb
pop
adc
fadds
xor
ds
pop
and
adc
and
add
ljmp
aaa
les
xor
adc
fnstcw
mov
fdivs
mov
push
push
insb
test
rorb
dec
push
push
push
xor
mov
inc
aas
dec
popf
int3
mov
sub
hlt
fidivrs
cmp
add
cmp
sbb
scas
out
outsl
int
xor
inc
add
popf
xor
shll
mov
mov
loopne
mov
sbb
cwtl
pushf
lcall
mov
sub
ret
push
mulb
sbb
push
fcomps
cmp
push
sbb
loop
scas
lcall
sarb
int3
inc
daa
leave
mov
imull
leave
int
add
out
insb
cmpsb
clc
pusha
mov
rcrb
shlb
lods
in
sub
jg
dec
sti
shlb
divl
mov
pop
or
mov
fdivl
mov
inc
in
sub
outsb
and
in
push
jae
xchg
dec
sub
and
sbb
arpl
sub
mov
daa
inc
out
fsubl
mov
shlb
mull
sbb
mov
rolb
imul
nop
ja
outsb
lahf
ficomps
or
ds
sub
loopne
shr
ret
dec
shl
xchg
xor
aad
sbb
dec
sarb
push
mov
ffreep
cwtl
mov
pop
jmp
mov
imul
push
and
pop
loope
pop
push
faddl
mov
fadds
and
and
lret
lods
or
ja
std
xchg
adc
push
or
mov
mov
adc
das
lock
sbb
push
jg
or
data16
inc
adc
and
repz
xchg
roll
leave
stos
repnz
test
cs
cmpsl
dec
xor
add
hlt
mov
in
iret
cmp
mov
jle
faddl
xor
shll
adc
xor
fisttps
rorl
shl
jns
jecxz
sub
loop
adc
jle
mov
sbb
mov
andb
data16
adcb
setne
xor
dec
fcompl
pusha
test
loop
pop
enter
js
pop
mov
pop
cs
shrl
dec
sbb
sub
inc
mov
cmpsb
sub
lock
cli
mov
push
xor
ja
pop
jb
enter
repz
adc
push
jge
in
pop
dec
mov
xacquire
rorb
aaa
stos
adc
test
sbbl
xor
jle
xor
jecxz
or
xor
mov
jae
clc
mov
mov
lods
insb
inc
mov
xchg
or
int
cmpsb
mov
imul
cmp
fxch
push
add
cmc
sbb
pushf
rorl
sbb
imul
jl
jae
ss
fimuls
sub
mov
push
or
xchg
ds
daa
mov
lret
cmpsl
ss
std
repnz
gs
add
int
cwtl
mov
jbe
jbe
cmpsl
sbb
fwait
mov
pop
stos
in
cld
jmp
shll
mov
xchg
dec
sbb
les
into
imul
jb
jae
addr16
and
jno
mov
mov
flds
mov
dec
adc
fs
mov
and
mov
notl
dec
loopne
outsb
mov
in
jne
pop
xchg
scas
adc
sub
fwait
call
test
fldl2e
inc
and
xor
xor
mov
movsb
jnp
and
add
gs
js
mov
movsb
mov
mov
cmp
mov
add
xor
xor
iret
lahf
lret
rolb
repz
jp
mov
and
xchg
push
mov
xchg
adc
stos
rorb
adc
inc
pop
bound
icebp
outsb
fwait
push
orl
mul
push
xlat
insl
call
ds
negl
or
movsb
xchg
daa
stc
pop
roll
jae
imul
div
lods
int
adc
mov
shlb
sub
dec
inc
mov
push
pop
push
je
cmpsb
adc
fcmove
push
bound
push
fldt
xchg
dec
cbtw
and
push
pop
mov
daa
mov
or
push
jmp
push
pop
data16
cmp
aam
cs
iretw
jno
loope
dec
pusha
shlb
loopne
imul
stc
sbb
cli
pop
add
push
je
push
mov
adc
test
sbb
test
stc
inc
cmp
jmp
or
mov
cmp
aas
sahf
mov
cmc
adc
pop
test
push
lahf
js
sbb
in
int
fbld
add
or
pop
mov
and
test
scas
mov
mov
in
lods
push
xchg
fcoms
push
xchg
fs
out
inc
xchg
gs
lcall
pop
mov
mov
pop
pop
adc
inc
and
sbb
push
inc
mov
pop
mov
add
or
push
ja
add
bnd
dec
adc
add
clc
dec
cmpsl
xchg
pop
insb
test
popa
jnp
jg
xor
jmp
add
cmpsl
loopne
fwait
add
inc
dec
lcall
mov
mov
popa
test
xor
aad
sbb
mov
loop
sbbl
dec
cltd
xor
in
jns
js
cwtl
xchg
int3
mov
mov
inc
mov
adc
mov
adc
xor
nop
pop
ljmp
sub
adc
out
add
mov
outsb
notb
push
adc
into
xchg
shrl
add
mov
in
adc
push
adc
jmp
cmpsb
pop
call
popf
push
inc
xchg
dec
int
add
loope
add
addr16
pop
movsb
pop
push
enter
les
rcrl
insl
fmul
in
dec
mov
mov
lock
fbstp
or
ret
xor
scas
mov
icebp
jo
add
notl
lea
test
push
int
bound
jp
push
mov
and
test
mov
sub
inc
mov
mov
addr16
cmpsl
imul
pop
inc
sbb
adc
inc
outsl
lcall
pop
pushf
xchg
loopne
rcll
out
mov
pop
mov
popf
jmp
bound
sbb
fimull
dec
mov
iret
movsl
inc
jb
ja
mov
pop
push
in
or
or
sub
xor
jns
sbb
pop
ljmp
or
mov
fs
sbb
xor
pop
and
cmpsl
in
bound
and
addr16
dec
or
jmp
call
pusha
mov
in
pop
mov
cmp
ds
ret
jg
in
mov
call
imul
pop
pop
in
mov
jge
subb
xor
add
loope
in
jb
in
cmp
mov
push
aad
mov
xchg
jb
jmp
dec
xor
ficoms
jp
xchg
out
mov
or
inc
lods
dec
xor
xchg
pop
pusha
lods
xlat
sub
addb
out
imul
insl
add
push
mov
mov
add
imul
lcall
cwtl
push
into
add
test
pushf
fiaddl
inc
adc
mov
mov
cmp
jg
cmp
sub
cli
sahf
cmpsb
stos
xchg
inc
inc
add
push
ret
inc
jge
xlat
das
in
imul
mov
mov
xor
aam
aaa
pop
or
adc
ljmp
addr16
xor
sub
repz
sub
sbb
lea
js
imul
mov
mov
add
ljmp
ficoms
mov
out
nop
xor
jmp
pop
mov
push
jbe
icebp
jg,pn
enter
negl
imull
push
sub
mov
xor
out
jbe
int
add
test
mov
ds
mov
xchg
shl
inc
es
sub
mov
sbb
mov
jne
pop
or
out
icebp
sarl
mov
adc
mov
push
mov
fcoms
dec
xor
enter
xchg
cmp
pop
aas
sbb
inc
scas
or
sbbb
lods
pop
mov
dec
cmp
cld
mov
push
mov
push
jno
lea
clc
leave
adc
movsb
mov
jb
sbb
push
addr16
fldt
jo
mov
pop
rcl
sub
popa
pop
test
mov
sub
add
aas
jae
mov
stc
dec
pushf
nop
xor
dec
cmp
aas
insb
adc
xchg
rolb
nop
enter
loop
in
loop
cld
xor
jno
mov
dec
or
jle
jno
mov
pop
rcrl
jns
in
dec
addl
pop
mov
push
mov
sub
sbb
push
mov
movsb
divb
dec
or
jne
icebp
push
cmp
inc
scas
xchg
lea
pop
mov
add
out
rcrb
jge
jg
mov
mov
daa
lret
pusha
and
push
out
nop
bound
jecxz
clc
shrb
cmp
repz
fwait
adc
pop
pop
dec
in
mov
xor
sub
push
ljmp
aas
filds
cmpxchg
pop
je
xchg
fcmovbe
lret
adc
adc
out
xor
mov
mov
dec
inc
or
fisttps
popf
cmp
or
mov
xor
xchg
xor
in
pop
mov
fistps
outsb
mov
shrl
cmc
inc
mov
ds
mov
pop
mov
mov
leave
scas
mov
jmp
mov
push
inc
cmp
cli
or
add
adc
add
inc
imul
mov
mov
and
jmp
fisubrs
xor
imul
jle
and
lods
inc
pop
cmp
dec
out
push
push
scas
aam
aam
bound
xor
popa
lock
and
cmc
jmp
jns
cmpsb
mov
xor
jmp
loopne
mov
pushf
rolb
push
movsl
adc
push
push
inc
in
dec
jmp
inc
in
aad
inc
subl
adc
stos
cmp
pusha
aad
mov
mov
mov
ds
and
std
push
inc
sti
cmc
mov
mov
in
adc
repz
push
ja
add
adc
dec
add
or
movsb
pusha
cmp
cli
hlt
and
jno
inc
xchg
adc
out
test
mov
mov
sub
pop
fbld
dec
mov
jae
fiadds
xlat
inc
adcl
inc
jae
inc
daa
jne
mov
and
int
repnz
mov
in
mov
cmpl
mov
mov
jmp
jg
sbb
lahf
dec
xchg
ret
fisubs
mov
mov
repnz
mov
push
pop
mov
testl
imul
incb
popa
int3
and
dec
pop
push
mov
adc
mov
jge
mov
sbb
stos
jb
out
mov
adcb
xor
nop
test
and
pop
cli
in
pop
cmc
movsl
xlat
addr16
sbb
jge
cmpsb
pusha
rorb
loope
inc
dec
mov
pop
adc
pop
scas
ja
cld
mov
inc
inc
jb
mov
add
je
push
pop
and
mov
or
add
mov
mov
or
loopne
adc
loop
and
xchg
neg
sahf
push
push
sub
dec
inc
inc
insb
pusha
sub
cwtl
cmpsb
push
inc
xor
mov
rcr
or
jns
inc
lds
lret
sbbb
fcom
push
sub
adc
sarb
aaa
repz
xlat
lahf
arpl
pop
inc
pop
pop
repz
and
scas
push
cmp
fwait
stos
fisubl
aad
jmp
push
popa
fdivrs
xor
jb
ficomps
cltd
push
lea
mov
adc
push
lret
jle
mov
xchg
push
aad
jno
mov
jmp
das
ret
adc
and
mov
sub
aaa
ret
sbb
aam
push
sub
add
cmp
ds
mov
insl
jmp
aas
xor
dec
jno
xchg
lods
hlt
pop
addr16
and
vmovdqa
jecxz
mov
inc
push
je
cld
in
aaa
mov
lods
sub
popf
stos
adc
ljmp
dec
fdivr
mov
jne
mov
cmp
lock
cld
pop
mov
xor
cwtl
fildll
add
mov
loope
negb
mov
dec
pop
fsubrl
dec
shlb
data16
cmpsb
jl
and
fsubrs
jns
push
add
add
jno
cmp
sarb
sub
iret
aas
pop
fcmovne
lds
fsubp
je
push
movsb
jmp
imul
arpl
mov
scas
pop
lods
mov
sti
imul
push
call
andl
cmp
pop
test
adc
stos
not
leave
mov
jecxz
js
mov
adc
imul
arpl
xchg
and
push
nop
pop
jne
fistpl
xor
daa
xchg
and
imul
pop
mov
scas
clc
inc
pop
addb
sbb
popa
xor
xor
dec
insl
and
mov
nop
xor
fwait
clc
jmp
ret
inc
mov
cli
dec
xor
enter
dec
sub
mov
sub
adc
ret
jmp
fnstsw
mov
js
insb
xchg
int
fstpt
test
int3
mov
dec
inc
add
cmp
or
roll
mov
pop
dec
adc
pop
mov
addr16
or
jge
stc
and
xor
enter
pushf
cmp
xor
adc
pop
xlat
bound
ret
scas
push
add
mov
xor
xchg
sbb
imul
mov
mov
dec
jmp
or
dec
stos
push
enter
dec
stos
and
jns
leave
jne
xor
sbbb
js
push
addr16
icebp
sub
icebp
push
fiaddl
push
ss
test
subl
roll
out
pushw
jge
rcrl
jl
xor
pop
insb
sbb
jns
pop
sub
cmp
pop
add
xchg
cwtl
push
mov
call
cli
cmpsl
push
jo
jp
pop
mov
popf
ds
lea
cmpsl
push
jno
ss
lds
repz
jp
call
fs
pop
cltd
mov
adc
jg
push
arpl
jb
mov
pop
imulb
in
aas
mov
cmp
xor
sub
dec
sti
aam
dec
enter
inc
sub
cmp
inc
adc
xor
cld
insb
je
neg
lds
insb
inc
ret
rcrl
cmpsl
xchg
lcall
fcompl
data16
imul
xchg
add
xchg
in
clc
xchg
std
filds
jle
aaa
pop
std
inc
addr16
int3
bound
jmp
mov
dec
xor
jl
pop
mov
jns
or
arpl
pop
lret
or
mov
imul
notl
in
data16
fbstp
std
pop
cmp
mov
mov
mov
loopne
ret
aam
movsl
inc
daa
xor
cmpsl
jl
cmpsl
loopne
shrl
pushf
xor
adc
cmc
pop
icebp
loop
and
jns
fiaddl
aas
mov
push
movsb
xor
idivl
cmp
into
dec
xchg
repz
push
mov
sbb
mov
sbb
cwtl
lret
jno
es
cmp
add
mov
and
add
rorl
xchg
into
dec
inc
pushf
shl
insl
add
addr16
sub
or
cmc
mov
sarb
fstpt
lds
dec
and
aad
stos
dec
lods
inc
jmp
inc
sarl
movsb
pop
or
push
xor
or
and
in
adc
hlt
dec
xor
add
imul
add
jno
nop
mov
daa
or
mov
sub
sbb
call
pusha
mov
inc
fdivrs
push
pop
leave
in
loopne
in
ja
das
fsts
mov
mov
add
adc
fcomps
imull
jl
outsl
xor
jnp
xor
mov
jbe
in
inc
mov
cwtl
int3
mov
stos
cmc
mov
call
cmp
adc
cld
add
or
xchg
mov
bound
or
sub
jg
pop
and
mov
pop
sbb
cmp
lcall
xchg
shrl
in
xchg
mov
bound
negl
push
mov
cmp
xchg
icebp
iret
dec
pop
in
insl
dec
cld
jne
ljmp
or
outsl
fcmove
js
and
or
mov
inc
dec
sbb
mov
filds
cmp
test
stos
pop
pop
fadds
mov
lods
or
lcall
push
not
adc
push
pop
fs
sbb
in
addl
mov
out
aas
lock
arpl
jbe
jnp
mov
add
das
jl
dec
imul
sarl
jo
mov
cmpsl
and
adc
mov
jae
mov
or
pop
ja
cmp
mov
jne
in
inc
add
add
sub
sahf
nop
pop
xlat
xchg
xchg
out
jecxz
jp
sub
negl
int3
std
inc
stos
cmp
fs
fimuls
test
jg
fisttpll
push
in
lock
stos
pop
inc
or
orb
test
jnp
arpl
adc
dec
push
push
popf
and
pop
jno
lock
sbb
fidivs
cmpsb
in
out
push
xorb
and
or
fisttps
inc
mov
fcoml
xor
enter
js
mov
or
pop
mov
mov
and
int
test
xor
cmpb
mov
dec
ret
enter
sub
and
icebp
in
push
mov
hlt
or
shrb
addr16
and
out
decb
xchg
jg
pushf
mov
xor
nop
mov
lds
xchg
jecxz
mov
adc
push
push
mov
lret
cltd
out
aad
inc
imul
test
adc
sub
mov
xchg
aam
xlat
mov
jecxz
mov
push
push
cmp
inc
insb
push
xchg
inc
pop
inc
mov
xor
pop
mov
daa
rol
jnp
inc
pusha
mov
mov
add
pop
add
mov
insl
sbb
inc
add
aaa
cmp
je
and
loopne
mov
push
and
pop
aad
mov
int
add
lcall
mov
push
mov
lcall
stos
and
push
loopne
mov
shlb
fwait
repz
cmp
pop
inc
push
mov
in
adc
sti
dec
outsb
inc
out
imul
or
mov
ficoml
lock
pop
ss
divb
nop
pop
sub
xchg
xor
pop
mov
cs
xor
fidivs
pop
or
popf
adc
or
es
mov
mov
jge
cwtl
mov
xchg
mov
adc
mov
sbb
pop
lods
adc
mov
fcomps
or
pop
mul
call
mov
fisubs
lods
outsl
imul
mov
jecxz
xchg
pop
ds
and
xor
add
sbb
hlt
ss
cmc
popa
repnz
xor
imul
cmc
test
out
pop
jl
in
in
neg
outsl
mov
cmp
mov
insl
adc
daa
push
xor
adc
adc
outsl
xchg
mov
popa
mov
sub
inc
push
pop
push
pusha
push
test
imul
inc
push
and
mov
sbb
add
decb
push
xor
push
pop
and
iret
or
jnp
movsb
repz
adc
dec
cmp
add
xchg
jl
sub
mov
cli
cmp
add
jb
fwait
jle
in
out
inc
sti
nop
shlb
ficoms
dec
in
push
aam
sbb
cltd
push
js
and
adc
jb
push
fisubl
xchg
hlt
mov
fdivr
pop
jae
jp
aam
adc
sahf
push
mov
jl
push
sub
push
lock
fcmove
pop
daa
pushf
call
std
in
in
in
js
cmp
add
sub
repz
pop
ljmp
pop
fidivrs
inc
int3
bound
push
loopne
push
lea
insl
xor
cmove
jle
inc
sub
stc
cwtl
sub
mov
push
push
outsb
add
das
test
push
inc
ret
les
lods
add
inc
lcall
repz
jge
sub
aam
shlb
clc
and
fadds
sbbb
sahf
cld
xchg
outsb
aas
cmp
mov
outsb
mov
fs
popa
and
lods
mov
pop
aas
ljmp
cmp
mov
jmp
mov
push
mov
jne
arpl
adc
sub
cmp
mov
test
xchg
fildl
repz
into
clc
icebp
sub
shrb
push
test
xor
les
push
adc
adc
or
jb
pop
mov
push
push
stos
das
add
in
rclb
and
mov
push
fdivs
cmp
jecxz
jp
pop
jb
insb
andb
jmp
pop
mov
inc
xchg
lods
sahf
pop
adc
inc
xchg
pop
stc
testb
push
pop
int3
pop
dec
je
jae
xor
xchg
sub
jns,pn
mov
push
push
lods
mov
pushf
xlat
in
pop
jecxz
xchg
in
cs
add
jg
int
sub
and
push
jno
xchg
out
push
or
rcll
idivb
mov
mov
add
std
xchg
push
jmp
shll
lret
push
daa
or
imul
and
pop
ds
leave
jmp
pop
and
js
mov
stc
leave
push
sbb
pop
adc
adc
cmp
aas
cmp
jb
std
and
inc
ror
enter
movsb
sub
test
or
or
roll
cli
sbb
les
jb
stc
gs
call
in
mov
int3
xchg
fldcw
adcb
cwtl
and
notl
xchg
jmp
mov
adc
mov
outsb
xchg
xchg
test
jp
mov
cmpsl
ret
shrb
jp
test
mov
mov
pop
out
inc
lcall
int
mov
in
mov
pop
sub
jp
xorb
mov
cwtl
xchg
sub
mov
dec
stos
add
out
test
jbe
hlt
insl
loop
pop
push
int
insb
inc
lret
pop
cmpsb
cmp
std
pusha
ret
pop
or
cmpsb
jae
ds
dec
mov
add
cli
inc
sahf
sub
xor
cld
adc
add
xor
imul
rorb
mov
iret
jge
adc
pop
cld
and
mov
ds
pusha
les
push
je
std
jne
rcrb
mov
mov
push
pop
mov
lcall
or
icebp
int
lods
loope
push
pusha
mov
pushf
cs
jmp
repz
dec
call
pop
lea
push
leave
push
lret
sbb
in
xchg
sarl
rorl
pop
and
nop
add
xor
dec
inc
addr16
or
mov
jle
flds
cmpsb
outsl
adc
adc
insb
ret
lea
ljmp
movl
inc
xor
mov
sbb
cmpsb
xor
addr16
push
clc
adc
jl
sbb
and
sub
cli
add
test
mov
aad
mov
push
inc
pop
jmp
pop
adc
jo
ds
js
popa
add
adcl
in
mov
push
lret
mov
cmp
es
dec
nop
cli
sti
stos
insb
cmp
rol
or
cmp
js
lods
jp
iret
loop
or
data16
testl
adc
pop
push
adcl
fwait
dec
xchg
fstl
jmp
aas
js
push
add
in
cmc
mov
lcall
add
mov
jb
sbb
mov
lds
mov
int
pop
rcll
or
push
rcll
pop
test
mov
mov
pop
cmpsb
lcall
ss
sub
lahf
out
jmp
andl
pop
stos
in
xchg
adcl
stos
sub
add
lret
adc
adc
mov
mov
pushf
fstpt
test
push
inc
mov
xor
test
jb
and
mov
jmp
xor
insl
mov
cltd
out
fiaddl
jo
mov
cmp
ljmp
ljmp
push
xor
sbb
mov
fsave
in
push
test
es
arpl
clc
or
fnsave
cmp
lds
iret
sub
jae
test
ss
push
jle
dec
dec
pop
std
xor
push
cmpsl
pusha
and
shlb
icebp
sbb
outsl
jb
sbb
rcrl
xchg
andb
fimuls
adc
shrb
inc
or
mov
mov
cltd
pop
xchg
cld
into
lds
mov
xchg
aad
lcall
inc
lods
or
outsb
dec
xor
mov
fdivs
fsts
pop
or
sub
loop
fadd
sub
inc
call
push
jno
push
icebp
in
pop
sbb
mov
pop
sti
dec
jecxz
mov
ret
cmpsb
inc
and
in
rclb
test
adc
outsb
rcr
jo
int
jmp
scas
mov
jle
leave
sti
mov
inc
mov
test
jl
xor
ret
dec
pop
and
clc
test
nopl
insl
jae
nop
lods
xchg
insb
ss
and
lds
pop
aam
mov
cld
imul
push
enter
scas
push
es
mov
xchg
xchg
mov
xchg
push
cld
loope
inc
addr16
sbb
in
mov
cmpsb
clc
ljmp
and
add
test
push
enter
loop
cmp
jo
movb
jnp
dec
mov
dec
and
inc
and
mov
pop
dec
cmp
mov
into
imul
iret
mov
daa
xchg
pop
pushf
add
icebp
imul
cli
adc
int3
or
ret
ljmp
mov
fwait
pop
hlt
add
icebp
fcomi
jne
jnp
add
dec
aaa
jl
fadd
mov
bound
cmpsl
jb
inc
xor
adc
aad
cmp
cli
sti
xlat
xchg
jecxz
test
sarb
not
jno,pn
lods
iret
cmpsb
jecxz,pt
shlb
cmp
mov
into
sar
push
mov
xchg
insl
jle
pop
inc
js
push
pop
mov
mov
pop
bound
xchg
les
arpl
mov
lea
and
mov
dec
in
cld
cmp
jp
hlt
jnp
gs
test
xor
mov
cmpb
mov
jle
pop
lea
inc
mov
insl
add
mov
repz
push
insl
and
xor
jns
icebp
mov
adc
jne
xor
aaa
mov
xchg
in
das
inc
xor
popf
testl
mov
movsl
xor
out
cld
in
inc
nop
push
outsl
push
xor
aaa
shll
mov
ja
das
push
adc
cmp
cltd
xchg
push
rcll
rclb
lds
inc
out
fdivl
adc
popf
mov
inc
inc
data16
add
pop
inc
cmpsb
mov
fisubrl
inc
movsl
mov
insb
dec
nop
stos
ljmp
add
mov
sub
sti
sbb
cs
push
mov
sub
and
cwtl
mov
fcompl
and
fucom
mov
mov
rcr
pop
lods
ja
roll
sahf
sub
data16
mov
mov
test
loop
jnp
xor
ljmp
ret
and
mov
inc
sbb
mov
aas
cmp
shl
mov
sbb
mov
mov
gs
push
or
xchg
push
sbb
loopne
jmp
sub
sub
jg
adc
sub
scas
sbb
jecxz
lea
pop
ljmp
lods
sub
xchg
mov
xchg
mov
push
int3
inc
mov
jne
int
xor
ja
push
push
cmp
scas
xchg
cld
push
dec
iret
and
pop
imul
bound
imul
cmp
xor
pop
cmpsb
mov
mov
clc
and
mov
sbb
cmp
push
or
into
mov
dec
dec
shll
out
mov
push
cltd
and
pop
outsb
lret
and
out
shrl
sub
inc
jle
jmpw
iret
xor
dec
push
out
push
add
movsb
sbb
daa
adc
fildl
adc
or
push
ljmp
jne
inc
push
aam
fisttpll
scas
jbe
sub
ret
es
stos
xchg
imul
adc
aas
mov
mov
mov
jb
or
movsl
into
mov
push
rcll
pop
imul
rorb
jo
nop
cmp
mov
adcb
movsl
dec
and
jae
and
add
mov
outsl
out
lods
stos
and
ds
and
scas
pusha
jns
cmpsb
sub
adc
aaa
pusha
cmp
mov
mov
ror
popf
push
dec
sub
add
outsl
and
movsb
cli
and
aam
sub
cs
jmp
inc
jne
stc
out
cmpsb
mov
push
and
or
pop
jmp
sub
sbb
push
outsl
xor
daa
out
sub
ret
aam
cmc
xor
cmp
sahf
fdivl
jae
push
mov
lahf
mov
enter
sub
inc
xchg
insb
mov
inc
sbb
das
push
mov
lods
cmc
xlat
lret
dec
insl
xchg
je
aaa
fnsave
bound
data16
ror
cmpsl
sub
daa
adc
jns
sbb
sti
icebp
mov
jl
cmpb
add
loope
jbe
shrl
fwait
jae
enter
popf
stos
inc
sub
cmp
sti
aam
or
mov
push
cmp
cmp
cmp
cmc
push
pusha
xchg
mov
sti
in
xchg
dec
scas
fstpt
jns
push
stos
mov
aaa
repz
ljmp
cli
pusha
adc
mov
dec
pop
or
push
lahf
pop
jl
jmp
das
jbe
adc
lcall
push
std
xchg
sub
mov
pushl
ljmp
in
sub
add
inc
or
dec
jg
xlat
imul
xchg
cmp
jl
dec
xorl
les
add
mov
adc
je
mov
clc
rolb
xor
pusha
dec
pop
adc
and
push
dec
les
xchg
jmp
nop
adc
push
xor
jnp
std
das
sarl
xchg
faddl
test
ds
xor
dec
or
pushf
aas
loopne
out
sub
lods
aad
sbbb
mov
sbb
aaa
xlat
setg
fsts
jmp
int3
pop
adc
lea
add
or
or
in
dec
push
jmp
mov
nop
fsubrl
cmpsl
dec
xor
insl
mov
stos
mov
mov
movsl
flds
test
lods
push
popf
jmp
jmp
cmp
arpl
hlt
jg
lahf
jnp
fwait
sti
popa
adc
cmp
mov
enter
decb
imul
sbb
into
jns
push
jnp
push
mov
sub
and
into
fistpl
mov
js
adc
popa
dec
fs
rol
ret
mov
push
or
pop
mov
push
cmp
aam
xor
dec
inc
lds
out
adc
iret
in
pop
aas
fists
pop
inc
pop
sbb
jnp
mov
divb
jge
pop
add
repnz
push
addr16
xor
mov
pop
cmp
jae
dec
xchg
jbe
cltd
dec
arpl
jle
popf
jbe
xchg
mov
pop
rol
sub
leave
xchg
mov
sbb
jp,pt
fstps
inc
inc
fs
das
bound
pop
push
adc
mov
je,pn
ljmp
dec
jne
inc
xor
sbb
scas
sbb
aas
je
ljmp
lds
pop
push
add
and
aaa
sbb
add
imul
mov
push
ds
adc
loope
data16
pop
adc
sbb
xchg
push
data16
jae
das
stc
jle
hlt
pop
pushw
mov
mov
popa
mov
sbb
mov
cmp
outsb
hlt
sub
or
xchg
adc
js
pop
insl
loopne
xor
cmp
xor
loopne
dec
xchg
lea
sbb
mov
pop
jbe
or
nop
inc
cmpsb
xchg
pop
mov
in
push
xchg
add
sub
test
sub
lcall
fdivrl
mov
in
or
jmp
out
fsubl
sub
cli
enter
arpl
inc
repnz
xor
sbb
dec
adc
cmp
sbb
xor
clc
adc
xor
outsl
adc
popf
mov
gs
divl
mov
movsb
mov
les
lcall
xchg
das
and
in
mov
mov
xchg
jg
cmpsb
stc
cmpsl
lods
inc
pop
mov
jmp
cmpsb
test
mov
incb
data16
hlt
call
fdivl
int
mov
loopne
ja
push
shlb
pop
mov
pop
mov
aas
push
xchg
cmc
ss
mov
in
cwtl
xor
xor
jae
in
xor
andl
xchg
cmp
adc
insb
xor
je
jp
adc
pop
call
pop
fisubrl
sbb
leave
lods
mov
je
xor
orb
sti
std
stos
jmp
dec
in
cwtl
push
cmp
cmpsb
icebp
scas
notl
pop
addr16
mov
std
ss
mov
mov
or
pop
hlt
sub
cmc
aas
cwtl
mov
xchg
sbb
imul
inc
nop
jmp
test
clc
jo
sub
add
ret
icebp
sahf
and
mov
out
jmp
xorl
jp
lds
les
dec
adc
shll
sbb
xor
movsb
in
pop
dec
insl
call
mov
inc
or
push
pop
mov
mov
loop
jbe
jne
loopne
int
adc
das
mov
push
call
shlb
les
mov
lahf
std
push
je
cmp
movsl
push
xor
or
mov
in
fiadds
mov
push
insb
jle
sub
xchg
dec
ss
movsb
mov
or
inc
add
inc
test
or
fmull
mov
fwait
mov
andb
cmp
rclb
or
int
sbb
pop
shll
adc
and
jb
sbb
aas
pusha
pop
push
sbb
lahf
fdivrl
pop
push
daa
das
hlt
imul
ret
sarb
scas
inc
xor
pop
call
fdivr
cmp
mov
xor
ds
popf
cltd
lahf
mov
insb
leave
mov
es
mov
lret
adc
pop
outsb
sbb
and
xchg
ja
fdivrl
cwtl
jmp
fcmovne
pop
sbb
addr16
popf
fisubrs
jae
cwtl
push
js
icebp
das
inc
add
insb
push
clc
inc
sub
cmp
adc
xchg
pop
ret
cmp
mov
jp
hlt
cmpsl
imul
add
push
mov
xor
xlat
mov
aas
mov
push
adc
jae
popf
in
jmp
mov
mov
je
in
push
in
pop
sti
imul
mov
mov
rcrb
push
shll
xchg
pushf
xchg
or
in
pop
sbb
xchg
jge
loop
cmpsl
and
inc
xor
test
out
adc
stc
add
jno
mov
or
push
aas
pusha
gs
ds
jmp
pop
sbb
add
mov
scas
scas
inc
jl
push
pop
sti
ret
dec
movb
dec
stc
jl
cmp
pop
std
adc
ret
roll
scas
add
push
pop
shr
movsb
shl
xchg
dec
push
sub
test
and
mov
mov
flds
jge
fstp
jle
sahf
outsb
sub
jge
xchg
loopne
mov
daa
mov
inc
bound
xchg
mov
ror
insb
outsl
mov
xlat
pop
mov
gs
idivl
mov
pop
mov
loopne
pop
cmpsl
loop
das
icebp
xchg
inc
xor
shr
in
in
jbe
ja
jmp
mov
inc
icebp
scas
add
fdivl
aaa
shlb
xchg
pushf
adc
in
jl
jno
or
adc
outsl
pushw
cmc
mov
adc
xchg
sub
je
jne
mov
mov
aaa
cltd
rcll
lock
into
inc
stos
adcl
mov
jmp
idivl
jae
mov
mov
xchg
xchg
inc
shlb
orb
or
xchg
cmpsl
or
add
sbb
jmp
fcmovb
mov
adc
xchg
adc
sbb
enter
dec
lcall
mov
movsl
jecxz
add
adc
xchg
mov
add
aas
push
xchg
push
and
push
mov
inc
pop
data16
mov
stos
and
add
cmp
popa
xchg
in
push
dec
and
push
push
push
sahf
dec
mov
mov
jnp
ljmp
mov
out
cmc
jns
or
nop
mov
push
pusha
mov
cmp
int3
adc
pop
xchg
fcoml
test
mov
fildl
jae
hlt
xorb
pop
enter
ja
mov
out
xchg
mov
push
lock
dec
xlat
mov
xor
jle
fisubrl
ds
std
push
loope
lcall
jne
subb
and
add
lds
xor
pop
sarl
push
jae
and
cmp
or
das
jg
in
dec
xor
push
insb
outsb
mov
sub
insl
dec
add
shrb
je
cmp
loope
cmp
mov
out
dec
add
xor
cmc
aas
loopne
pop
fiadds
subl
in
xchg
inc
mov
pop
mov
and
sub
pop
outsl
fsubrl
sbb
push
adc
xchg
outsb
mov
js
jmp
push
add
pop
sarl
cmpsl
jns
jnp
pushf
mov
fadds
mov
add
jb
jmp
ficoml
push
aaa
cmp
nop
push
movsl
ret
test
xor
and
dec
jg
in
xchg
dec
sbb
outsl
sub
inc
mov
loop
mov
push
pop
jl
dec
sbb
xchg
nop
mov
dec
add
cli
pop
push
lods
xor
xchg
testb
mov
mov
push
mov
mov
sub
stos
int3
jmp
jae
rcrl
sbb
shr
jo
repz
out
rcl
jo
add
and
insb
sti
loope
xchg
movsb
aas
push
dec
dec
cmp
fisttpl
fiadds
push
xchg
mov
aam
fwait
imul
add
loop
cmp
inc
lahf
ret
dec
mov
mov
sub
scas
jl
push
std
test
sbb
aas
rclb
mov
pop
xchg
mov
rcll
lahf
shll
ja
leave
cli
or
sub
jp
mov
stos
movsl
mov
cmc
inc
out
or
pop
dec
fdivp
inc
and
adc
push
loopne
xchg
push
loop
sarl
xor
dec
xchg
add
ja
dec
xchg
and
bound
test
mov
mov
mov
enter
std
sbb
test
fiaddl
les
xor
xchg
mov
mov
insl
divb
addl
sub
rcrb
adc
adc
cmp
adc
scas
lahf
lret
mov
jg
aaa
hlt
jle
mov
ljmp
lret
scas
cmpsl
pop
lea
xchg
lcall
loopne
in
push
lea
sub
rclb
aam
iret
out
popl
mov
pop
jae
mov
ja
repz
dec
fsub
stc
add
mov
fsubrp
xor
mov
dec
push
adc
push
hlt
jge
jle
jl
mov
sub
mov
stc
mov
fdivrs
and
or
cmp
jg
ja
loop
pop
subb
sub
pusha
incl
jne
xchg
mov
arpl
lahf
cmp
cli
scas
adc
filds
or
shl
add
sub
jl
bound
jge
fcompl
icebp
outsl
cs
sahf
scas
dec
add
adc
aas
pop
and
mov
xchg
jns
xchg
fs
sbb
sub
inc
outsb
mov
dec
jne
cmp
inc
jecxz
push
test
xor
fs
push
inc
inc
test
js
in
sbb
push
jle
in
xchg
or
faddp
scas
push
jbe
or
adc
out
fstl
out
pushf
pop
shlb
dec
in
test
iret
cmp
ja
dec
push
scas
jge
ficoms
in
outsb
or
push
shlb
addr16
js
xor
jnp
insl
jo
pop
fsubrs
and
pop
lds
int3
int3
add
dec
sub
xor
add
push
aam
pop
xchg
iret
push
clc
inc
push
lret
je
xchg
test
and
and
mov
test
xor
mov
push
hlt
sub
pop
dec
cld
or
or
pop
sub
xor
adc
or
pop
mov
das
stc
sub
out
pop
sbb
sbbl
subl
mov
dec
or
pop
or
adc
pop
xchg
in
cmp
jg
mov
xchg
fildl
xor
pop
jno
lea
aam
push
and
aam
xchg
jp
dec
mov
xor
ja
sub
mov
adc
scas
mov
push
pop
xchg
add
mov
inc
rclb
add
ja
out
adc
je
test
mov
fwait
push
in
xchg
lds
inc
cmp
in
push
je
push
shlb
pusha
popa
mov
jecxz
fs
pop
cmpsb
clc
jmp
jnp
xchg
test
mov
scas
or
lods
jmp
jp
outsl
bound
mov
lcall
sbb
insl
lea
adc
jge
jno
std
shll
pop
pop
jmp
movsl
mov
ret
mov
lahf
shll
mov
or
into
dec
fdivrl
mov
fbstp
imul
mov
andb
push
shrl
cmp
pop
addr16
pop
test
push
loope
and
scas
push
call
adc
sbb
jne
js
jl
inc
int
push
xor
cmp
cmpsb
test
mov
inc
pusha
mov
iret
pop
mov
lcall
lret
addl
iret
sbb
scas
inc
sbb
rol
dec
arpl
js
jno
out
sub
mov
outsl
mov
enter
mov
fsubrp
faddl
hlt
sub
pushf
adc
inc
enter
mov
lret
call
inc
pop
jnp
sahf
jl
jle
sarl
push
mov
mov
lds
pusha
sbb
mov
pushf
iret
mov
std
cmp
lret
mov
xchg
jge
jl
xor
int3
shlb
repnz
sbb
fdivrs
scas
sbb
ret
call
mov
dec
push
ljmp
mov
push
add
addr16
out
push
sbb
cmpsb
imul
divb
adc
pop
out
add
push
sbbb
adc
imulb
sub
add
mov
or
movsl
lahf
mov
scas
or
jb
call
subl
add
scas
push
pop
loope
push
jne
jle
incl
inc
jo
out
jae
nop
test
rclb
dec
mov
clc
push
incl
xor
test
fisubrl
inc
shrb
inc
sub
dec
add
pushl
xchg
pushf
subb
or
test
movsl
xor
xchg
xchg
push
mov
xor
push
adc
stc
cmc
xor
push
cwtl
fistpll
shlb
and
call
dec
ret
pop
adc
or
ljmp
scas
aad
out
mull
xchg
fcoms
inc
enter
das
inc
xchg
push
push
popf
lret
add
pop
lds
roll
aaa
fsubr
pop
add
shlb
dec
test
add
ret
mov
pop
outsb
push
rorb
mov
bswap
push
inc
mov
or
daa
dec
jb
xor
adc
sarl
pop
ret
and
cmp
int3
shll
fs
outsl
aad
aam
lock
xlat
out
mov
pop
aad
out
or
fisubrl
push
xchg
cmp
pop
mov
in
jb
fsubl
sbb
sbb
push
sbb
cld
push
addr16
sbb
mov
add
jae
mov
sub
mov
jecxz
imul
ds
lret
rcrl
add
xor
dec
out
loop
pop
jnp
jl
xchg
jne
push
mov
mov
cmp
mov
pop
mov
add
pop
add
shr
es
test
xchg
sbb
mov
sbb
add
out
dec
cmc
cmp
imul
mov
std
mov
adc
add
push
hlt
xchg
dec
xchg
clc
push
subl
jae
jbe
jl
rcrb
add
pusha
test
xor
shlb
jp
xchg
je
popf
ds
iret
hlt
mov
mov
and
inc
lods
jmp
fmull
cmp
out
mov
or
pop
ljmp
sti
mov
xchg
inc
fldt
cmp
mov
pusha
test
imul
mov
outsb
movsl
in
loop
cld
pop
mov
daa
aaa
outsl
xorl
mov
int3
jecxz
pop
call
mov
test
shl
mov
xor
cltd
cld
push
sti
jo
pop
dec
int3
aaa
push
adcb
push
out
test
mov
add
lds
iret
enter
push
incl
mov
inc
hlt
bound
insb
or
pusha
cmp
cmp
dec
jmp
mov
jnp
stc
imul
aam
fwait
pop
dec
push
cld
aad
sbb
mov
fcomps
fstpl
add
cmp
push
addb
lretw
lcall
sub
or
aam
cs
loope
adc
xchg
sti
cld
arpl
sub
pop
pop
push
jbe
inc
adc
test
inc
push
call
or
push
add
lods
or
inc
in
cmp
mov
stc
cmp
outsl
negl
adc
cmp
lds
inc
cmp
in
pop
mov
fiadds
and
aam
xor
int3
pop
push
test
push
add
dec
ret
test
jle
hlt
push
mov
add
pop
outsb
enter
lods
in
lea
adc
mov
xchg
in
push
push
nop
jo
jo
sub
mov
adc
sbbl
add
add
jne
mov
rcrl
sahf
stos
inc
pushf
int
mov
jmp
inc
and
jb
mov
mov
out
dec
dec
cwtl
sti
jo
cmc
jle
push
add
sub
add
nop
dec
in
inc
je
lcall
fdivr
lret
mov
pop
mov
fisubrl
sti
je
imul
shr
adcb
mov
outsb
xchg
adc
lds
adc
cwtl
mov
and
cli
dec
mov
stos
mov
roll
sbb
jg
arpl
dec
loope
stos
cmpsb
dec
jecxz
test
icebp
fmuls
mov
pusha
mov
lcall
push
es
pushl
mov
mov
inc
inc
cmp
outsl
xor
orl
sbb
inc
xor
addr16
mov
adc
mov
jp
mov
jp
xchg
or
test
dec
loop
imul
sbb
mov
pop
sub
aad
push
aas
fsubs
inc
mov
adc
sbb
jb
inc
dec
dec
jmp
xor
xor
test
test
test
push
in
push
aad
mov
jno
xchg
inc
pop
cmpsl
lahf
icebp
nop
in
jno
cmpb
adc
and
and
insb
ret
jne
test
cli
push
dec
xor
xor
fidivrl
insl
cmp
repz
pop
or
add
mov
fistl
mov
sbb
fwait
mov
add
sub
mov
add
sub
sub
or
add
dec
mov
jae
or
mov
xchg
test
shlb
fildl
cltd
insl
jmp
imul
aam
push
mov
or
stos
ljmp
repnz
mov
inc
popl
mov
shll
sub
adc
loopne
mov
fstpl
divl
jmp
popf
test
jp
std
sbb
fimull
inc
mov
imul
push
push
jge
sti
movsb
xchg
cmp
int3
xorb
mov
popf
or
xchg
test
inc
fcomps
jmp
pop
hlt
and
add
jo
cwtl
jge
push
test
mov
sub
sub
dec
sti
push
repz
push
out
adcb
cmp
adc
mov
test
adc
xchg
pop
pop
mov
shlb
add
aaa
xchg
or
sarb
cs
outsb
repnz
push
jmp
rclb
shl
add
cmp
fdivs
fptan
add
fstl
jl
sub
jo
pop
adc
es
sbb
mov
adc
rcrb
repz
jle
jge
scas
leave
enter
stos
loopne
cmp
and
pop
sbb
xchg
daa
das
std
sub
ret
ret
movsl
adc
push
aaa
pop
pop
lods
jo
movsl
shufps
mov
or
xor
int
pop
xor
sub
push
rolb
xor
jbe
pushf
xchg
ja
mov
and
mov
or
std
xor
int3
pop
popf
lock
mov
add
mov
insb
and
cmp
mov
sbb
leave
mov
out
scas
push
push
pop
or
adc
cmp
pop
adcb
gs
sbb
push
mov
add
lea
mov
lret
int
mov
int3
std
jmp
das
push
push
mov
add
xor
addr16
lahf
pushf
leave
pop
out
cmp
insb
and
xorl
ret
push
inc
imul
lret
outsb
rol
sbb
sarl
roll
das
adc
cmpsb
aaa
sbb
cmc
ret
rorl
enter
mov
pop
subb
es
test
std
iret
mov
xchg
das
push
cli
or
xor
mov
pop
repz
mov
mov
pop
add
xchg
idivb
cmp
cli
add
clc
loopne
mov
mov
clc
dec
loope
inc
pop
nop
lea
insl
inc
rcr
jp
mov
jl
push
loopne
daa
lcall
mov
jns
inc
lret
daa
sbb
jne
int3
or
loopne
pop
cmc
dec
sub
daa
adcl
pop
mul
popa
cld
imull
inc
mov
in
aaa
mov
add
cmp
sbb
cmp
sub
jno
inc
fwait
dec
test
mov
out
gs
sarb
ss
stc
push
fwait
mov
fldt
andl
pop
mov
and
out
jg
cltd
dec
mov
pop
jb
mov
push
adc
sbb
clc
adc
jmp
push
xor
push
inc
xchg
stos
ja
cld
out
sbb
call
xorl
mov
addl
lds
cli
aad
inc
push
sarb
inc
lods
sub
fwait
dec
cli
dec
bound
sbb
inc
mov
inc
mov
push
ljmp
xor
and
in
inc
jp
in
aad
sbb
out
jl
mov
cmc
pop
and
mov
push
mov
dec
xor
mov
call
inc
xor
dec
cmp
and
cmc
test
in
orb
mov
or
adc
pop
scas
cmp
pop
cmp
bound
xor
push
out
out
pop
mov
mov
imull
jmp
mov
mov
push
cmc
stc
ficoms
fiaddl
iret
imul
mov
insb
inc
xchg
mov
add
out
mov
xor
cmc
fdivrp
lret
jmp
lahf
ret
hlt
popa
and
test
cs
pop
xchg
mov
add
int
and
sbb
cmp
or
xchg
lods
popf
shll
cmpsl
cmp
sub
ret
stc
test
cmc
mov
xor
push
mov
adc
xchg
xchg
push
jno
adc
jecxz
in
mov
and
inc
jo
pop
xchg
inc
stos
xor
xchg
and
in
fistpll
imul
dec
in
xor
fnstenv
xchg
loope
mov
adc
or
sarl
out
cmp
dec
sti
xor
push
pop
xchg
stos
rcrl
push
push
test
push
mov
sahf
test
xor
dec
lahf
mov
mov
shl
mov
in
call
jl
lods
mov
sub
icebp
inc
mov
jns
push
test
ljmp
out
jmp
lret
cltd
unpckhps
inc
fwait
mov
sbb
hlt
mov
push
call
insl
jo
call
cmc
outsb
dec
dec
mov
in
in
mov
dec
xchg
adc
cmpsb
xchg
jbe
cmp
fiadds
add
inc
dec
pop
int3
loope
lods
pushf
call
insl
mov
or
mov
pop
pop
outsl
add
or
xor
xor
dec
and
lea
inc
leave
xor
jno
sbb
push
shl
lahf
dec
rclb
in
loope
ds
sbb
cmpb
adc
and
inc
fadds
not
repz
rcrb
adc
mov
add
xor
je
mov
adc
mov
outsb
fsubrl
into
jmp
in
and
pop
in
jg
sbb
add
cmp
fidivl
xchg
nop
xor
mov
fsts
js
xchg
xchg
dec
movsb
fdivs
das
cs
ljmp
mov
xchg
mov
stos
mov
sub
pushf
enter
lahf
shlb
pop
pop
pop
cmp
xchg
sub
mov
add
sbb
stos
mov
pusha
pop
cmc
adc
stos
shll
push
sub
sub
adc
cmpsb
arpl
or
stos
xchg
pop
mov
mov
shrb
mov
push
xor
jg
pop
inc
mov
out
dec
adc
addr16
dec
icebp
sub
sub
cli
adc
rorb
or
cs
das
clc
push
add
push
sbb
jg
mov
mov
and
jnp
adcb
adc
into
cmp
jns
pop
lds
inc
add
add
sub
mov
outsb
out
add
pop
adc
popf
sub
int
and
mov
inc
mov
xchg
or
fisttpll
add
outsb
pushf
cmp
xor
in
jns
fcoms
sti
das
popa
or
fcomps
pop
add
mov
mov
shll
dec
rol
add
push
mov
add
jnp
rcrb
sub
lock
lock
jno
roll
mov
jg
cmp
enter
jnp
push
mov
mov
hlt
dec
inc
jp
in
psraw
jle
inc
sbbb
mov
xchg
aas
push
jo
je
imul
shll
cld
fucomp
push
lock
fidivrl
adc
jge
in
jmp
lea
or
sub
inc
cmp
jg
and
sub
mov
mov
cltd
cld
cmp
push
mov
andl
push
cld
hlt
sbb
mov
sbb
and
stos
cmp
xchg
fnstenv
shll
clc
adc
mov
xchg
cld
mov
in
jle
fildll
shlb
inc
dec
xor
sub
ja
daa
repnz
and
outsb
xor
shll
movaps
mov
xchg
dec
pusha
arpl
shl
movsl
jle
push
mov
rol
mov
jo
test
xchg
inc
or
cmp
aam
pop
into
movsb
mov
in
stos
loop
ret
dec
jae
arpl
scas
dec
mov
or
fwait
add
adc
mov
mov
xchg
iret
insl
xor
sub
into
dec
or
inc
lret
pop
pop
mov
xchg
adc
lods
ja
jo
aaa
mov
jbe
jmp
adc
pminsw
xchg
mov
hlt
insl
mov
mov
int3
inc
and
addr16
or
cld
mov
xor
arpl
or
mov
dec
fldcw
mov
aas
mov
fstps
fidivs
mov
frstor
dec
inc
xchg
add
adc
push
xchg
jb
adc
ret
dec
aam
pop
mov
dec
add
sub
sub
lcall
add
lcall
mov
inc
mov
pop
xor
mov
rcr
add
xchg
push
jge
leave
jle
lock
jp
mov
mov
add
jne
inc
dec
mov
adcb
fwait
sub
mov
mov
xor
mov
jno
sub
ret
pop
repz
push
pusha
int
jl
cmpb
xor
inc
xchg
pushf
or
push
push
sbb
sbb
divb
lock
adc
inc
loop
push
xchg
int
subl
ss
pop
mov
loope
mov
hlt
fnsave
adc
outsb
lcall
pop
js
mov
fisttpll
mov
xchg
outsb
sbb
incb
aaa
adc
sub
sub
dec
repz
mov
imul
outsb
idivl
ss
xor
or
enter
xlat
xor
out
pop
addb
dec
jle
mov
adc
push
adcb
loope
xchg
cli
jecxz
adc
sahf
ret
pop
cmp
pushf
jl
jge
xchg
enter
lea
daa
xor
sbb
pushf
jge
mov
fmull
mov
add
xor
mov
aas
and
test
pop
aad
out
int
loop
mov
xchg
mov
inc
and
mov
sub
push
mov
es
insl
fsub
inc
mov
addb
jns
dec
loopne
xor
enter
leave
inc
ds
sti
das
xchg
adc
loop
or
jne
ret
jae
repnz
mov
mov
dec
jne
roll
jbe
cld
mov
cmpsl
sub
daa
xchg
fisttpll
inc
mov
scas
shl
stos
mov
mov
pop
pushf
daa
das
ret
enter
imul
mov
shlb
jae
cmpsb
mov
lret
fldenv
xor
push
jmp
jecxz
adc
mov
inc
adc
jnp
insl
push
dec
aam
mov
adc
pop
xchg
jmp
cmp
push
call
add
or
mov
sbb
or
movsl
add
shrl
repz
inc
mov
cmpsl
fcompp
stos
cmp
ljmp
sub
insb
lahf
sbb
shl
fwait
sarb
das
in
pop
mov
mov
push
int3
mov
inc
jae
or
dec
push
pop
push
jmp
lcall
add
mov
pop
mov
das
cmp
mov
pop
hlt
outsl
fisubs
mov
add
or
and
xor
idivb
faddl
or
push
xchg
out
sub
mov
jge
add
sub
inc
pop
fs
aad
mov
inc
mov
jge
int
nop
popa
lods
pop
push
sbb
push
and
dec
mov
loopne
popf
mov
mov
repnz
sub
jae
repz
sti
repz
fcoml
mov
push
jmp
push
popa
es
xor
call
xchg
cmp
inc
mov
out
add
pop
in
mov
adc
test
das
iret
repnz
jae
cmpsb
das
push
xchg
or
inc
dec
mov
add
and
das
push
nop
mov
xchg
mov
cmpsl
test
fisubs
ret
movsl
loopne
add
push
test
pop
shl
nop
inc
cmp
mov
sbb
test
pop
aaa
out
mov
mov
cltd
mov
sti
negl
stc
add
aas
sahf
mov
aad
xchg
jae
add
pop
add
cmc
jns
aaa
push
cmp
je
or
shrb
adc
mov
daa
inc
daa
push
or
dec
sti
je
mov
cmp
mov
inc
inc
mov
jnp
sub
add
sub
sbb
jge
out
cmc
cmpsl
pop
cs
sar
and
pop
cmc
sbb
in
push
hlt
dec
mov
pop
sub
lods
jecxz
outsl
jl
and
or
popf
inc
cmc
es
mov
add
push
inc
mov
cmpl
popa
pop
mov
pop
pop
loope
lds
cltd
push
add
jo
loop
mov
lods
outsb
test
out
lods
into
shrb
push
loopne
push
lret
xor
sub
fldt
les
sbb
jb
das
daa
sbb
rcrl
imul
orb
pusha
add
call
push
add
xor
adc
icebp
pop
ja,pn
cwtl
mov
jp
fs
push
in
in
push
arpl
or
cmpsl
clc
xchg
xor
inc
out
fdecstp
test
jnp
lahf
adc
stc
cmp
test
pop
in
pop
xorl
iret
pop
xchg
ljmp
push
icebp
pushf
popa
ds
pop
test
or
mov
cltd
xchg
out
mov
fs
mov
shll
int3
xchg
jne
sub
cmp
push
and
adc
pop
mov
rcr
cld
test
jmp
sub
call
lock
popa
rorb
xchg
adc
cmp
jg
mov
inc
cmpsl
sub
lahf
lret
in
cld
xchg
sub
cvtdq2ps
dec
hlt
lret
sbb
addr16
shl
jecxz
fstp
push
aam
repz
mov
popa
and
cltd
pop
in
icebp
aad
lock
sbb
push
push
cmp
push
and
push
mov
or
pushf
mov
fimull
aas
lahf
gs
test
cmp
pop
inc
je
das
add
subb
inc
fucomip
out
sbb
mov
inc
into
out
and
inc
mov
test
push
sti
mov
xchg
sub
xor
sti
cltd
out
roll
shl
sub
dec
jle
mov
jns
test
jg
sub
iret
add
fbld
cmpsl
sub
fildl
dec
sbb
xlat
insb
inc
outsl
mov
cmpsb
inc
into
cltd
jle
xchg
sub
pop
adc
in
jge
out
dec
inc
aad
add
and
jmp
inc
adc
div
cs
adc
add
xor
sbbb
push
loope
in
rclb
cmp
movaps
add
push
pop
and
stos
test
aad
sbb
mov
out
dec
loop
sub
dec
and
mov
and
sbb
mov
add
or
mov
sbb
out
jecxz
aam
test
adc
sbb
pop
push
pushf
add
xor
lret
lcall
pop
xchg
test
inc
and
leave
mov
pop
sti
aam
icebp
cld
into
mov
idivb
icebp
mov
frstor
clc
divb
xor
or
push
push
movb
arpl
sbb
je
imul
xor
mov
or
iret
arpl
and
iret
cmpsb
push
push
mov
or
leave
xor
cmpsl
jmp
inc
icebp
mov
pop
adc
lods
mov
jno
movsb
call
inc
push
jecxz
adc
xlat
dec
mov
adc
adc
lcall
add
push
sbb
xor
arpl
xor
or
add
push
iret
push
pusha
in
add
or
xchg
sbb
push
clc
cmpsl
xchg
jp
pop
js
jp
pop
mov
xor
push
jmp
mov
dec
lods
add
cmp
mov
inc
lea
push
clc
rcl
adc
mov
movsl
dec
nop
data16
pop
adc
test
in
and
push
es
xor
testb
inc
mov
ja
lods
test
cmp
pop
adc
adc
adc
dec
mov
iret
lods
sbb
arpl
mov
push
inc
and
push
sub
adc
jnp
dec
push
inc
mov
mov
xchg
hlt
movsl
xor
cld
mov
outsb
outsb
sbb
negb
int
inc
xor
fcmovne
hlt
ret
adc
in
inc
or
push
add
lahf
fs
xor
jno
int
add
lret
cmpsb
std
push
inc
jno
icebp
mov
mov
or
sarl
cmpl
push
hlt
leave
sub
movsl
xor
sub
jge
andps
add
shr
push
adc
repnz
dec
ja
xchg
adc
xchg
xchg
sbb
dec
addl
std
inc
mov
test
fwait
ljmp
xor
mov
mov
cmp
adc
add
mov
sub
mov
dec
inc
aam
fdivr
adc
jl
cmp
rcrb
icebp
pop
jge
cmp
fdivl
movsb
push
inc
mov
jmp
pop
sahf
sub
fmulp
and
jmp
es
loope
and
mov
mov
jns
repz
popf
in
xchg
repnz
pop
imul
jmp
sub
add
out
pop
sub
lcall
mov
push
scas
xchg
ss
subl
dec
xor
les
stc
push
push
xchg
dec
add
cmp
pop
push
enter
mov
outsl
sub
fnstenv
push
stos
roll
dec
movsb
sarl
popa
call
push
push
dec
sub
dec
adc
jge
mov
mov
cmp
jbe
adc
or
lcall
ret
repz
mov
cmp
inc
ret
dec
pop
es
lods
mov
and
mov
jge
test
out
nop
mov
adc
mov
pop
push
push
fisttpll
jmp
or
jno
xor
jg
adc
rcr
repnz
add
aam
sbb
outsl
add
dec
inc
loope
imul
mov
jmp
subl
stc
dec
xchg
into
xor
leave
inc
sub
sbb
sbb
stos
lods
mov
fnstsw
sbb
or
xor
adc
xchg
mov
mov
enter
xor
mov
add
sti
test
xor
pop
xor
xlat
or
cmpsl
inc
fbstp
pop
test
fsubr
add
mov
outsb
aaa
mov
sbb
cmpsb
mov
sub
rorl
push
loope
push
pmaddwd
arpl
jnp
sub
rcrl
jbe
js
xor
leave
mov
dec
adc
sub
cs
lret
xor
adc
sub
in
jge
mov
hlt
or
fidivrs
inc
add
and
pop
dec
jmp
dec
daa
xchg
sub
inc
mov
icebp
jp
not
es
test
iret
sahf
push
xchg
mov
mov
arpl
jge
mov
leave
outsb
lret
mov
xchg
movsl
and
jmp
shr
data16
mov
aas
xor
popf
mov
mov
fnstcw
xchg
jns
aas
shl
bound
je
inc
add
mov
movsl
data16
ljmp
push
std
dec
stos
call
inc
add
xchg
xor
rol
lahf
pop
mov
aas
into
lods
sbbb
push
pop
cmc
cli
cmc
xor
add
push
or
dec
stos
fsubrs
lret
cwtl
gs
sti
int
adc
pop
jecxz
adc
or
das
or
mov
loop
adc
ja
and
int
stos
jno
scas
push
data16
test
cmp
out
adc
lds
fsubrs
fnstsw
push
jmp
je
test
insb
jns
shl
lock
outsl
xchg
push
jecxz
stos
ret
les
xchg
add
iret
add
lods
mov
jl
xchg
das
xor
imul
pop
popa
jbe
mov
pop
loop
xchg
fsts
inc
xorl
lret
aaa
pop
cmp
ret
dec
sub
or
shll
movsb
inc
sbb
and
adc
mov
ja,pn
jecxz
ja
dec
je
arpl
fisttpll
push
shll
loope
lods
or
cmp
imul
stos
pop
mov
sub
int3
fimull
lea
xchg
and
cmp
lahf
push
xchg
daa
stos
bound
clc
jg
aad
sbb
aad
pop
xchg
fs
add
mov
push
scas
and
jno
mov
and
jbe
daa
xchg
mov
mov
add
push
lret
inc
aaa
sbb
xchg
imul
mov
fs
outsb
add
movsl
movsl
push
outsb
mov
lods
jbe
pop
cmp
sbb
dec
pop
lea
lret
fstp
dec
mov
adc
sbb
xor
sub
stc
dec
push
xor
xchg
iret
fisubs
arpl
rol
dec
int3
sahf
mulb
dec
inc
aam
scas
dec
add
stos
sarl
inc
inc
test
inc
mov
jl
push
sbb
in
lock
stos
mov
bound
sub
ret
push
mov
dec
lock
in
shlb
das
push
push
lcall
xor
rcrl
jne
push
push
push
roll
lods
sbb
mov
loop,pn
xchg
inc
pusha
das
dec
and
push
das
mov
mov
inc
jne
loopne
sbb
push
push
mov
stos
push
cli
pop
out
into
cmp
jg
add
mov
jae
pop
lea
sbb
sub
mov
js
lds
mov
xlat
mov
out
cltd
jnp
mov
dec
shl
ret
jnp
mov
cmp
das
or
mov
sub
adc
mov
mov
jbe
pop
std
mov
sub
leave
or
mov
cmp
shll
and
mov
jo
jecxz
and
subb
popa
xor
xchg
adc
sahf
dec
fdiv
aas
enter
shlb
stos
mov
scas
xlat
pop
outsb
mov
push
fiaddl
pop
inc
addr16
sarl
je
ljmp
aad
mov
adc
add
shrl
scas
mov
and
sub
sbb
pop
iret
leave
xor
dec
xchg
xor
push
out
jmp
lcall
dec
cmp
lock
rorl
mov
xor
ljmp
jg
mov
pop
sbb
xchg
je
or
jne
jl
loopne
sub
and
mov
aaa
scas
jp
cmp
dec
push
aas
jns
or
inc
push
mov
or
testl
xchg
and
out
jo
lods
test
mov
mov
add
sbb
jg
enter
dec
mov
cltd
adc
and
pop
sub
outsb
addr16
xor
popa
pop
sti
mov
mov
sti
andb
mov
imul
imull
imul
je
adcl
ss
fistl
int
lret
jo
sub
and
cmp
lret
test
aad
test
adc
sub
test
mov
dec
xor
dec
neg
cwtl
cmp
notl
adc
cld
inc
sbb
cwtl
xchg
js
loop
stc
xchg
movl
inc
adc
sub
or
mov
push
push
mov
pop
mov
cmp
cmc
std
mov
xchg
loope
imul
cmp
scas
fwait
xorb
pop
lds
popa
fldcw
int
and
aam
hlt
outsb
jge
lret
shll
stc
jmp
repz
adc
sub
ret
or
jle
lds
lret
or
or
mov
repnz
xor
lret
push
jae
sar
mov
shr
test
imul
and
gs
lods
int3
fisubrl
std
push
sub
je
inc
cs
jmp
lock
xchg
push
mov
das
ss
int3
repz
test
ds
push
mov
dec
jb
aam
es
rcll
loopne,pn
ds
lret
ja,pt
movsb
sub
pop
sbb
adc
adc
mov
pop
push
cmp
cmc
int3
push
jmp
rcrl
insb
and
clc
pushf
movsb
adc
cmp
jne
std
or
cmc
cltd
clc
fdivrs
int
push
clc
mov
cmp
jb
pop
cmp
pop
pop
push
arpl
push
scas
mov
lds
cmovg
mov
adc
mov
testl
cmp
mov
sbb
inc
and
insl
pusha
fs
pop
das
mov
xor
test
xor
repnz
arpl
out
push
push
stc
rolb
cmp
int
shlb
lds
dec
push
mov
inc
and
jno
inc
pop
mov
mov
fwait
mov
fnstenv
enter
movsl
mov
jae
inc
mov
int
mov
xchg
or
jae
inc
dec
loope
int
ficoml
xlat
and
inc
cmp
pop
sbb
orl
mov
sub
pop
cmpsb
push
xchg
mov
or
rorb
rcll
movsl
xchg
clc
push
push
xchg
aas
cmp
and
cli
stos
xchg
fs
sub
fistpl
adc
shrl
pop
stc
out
pop
xchg
test
inc
sbbl
cwtl
aaa
mov
and
jmp
in
jns
mov
lds
pop
pop
dec
or
or
cmpb
cmpsl
adc
sub
mov
xor
and
add
bound
cmpsb
and
mov
icebp
xchg
pop
push
mov
shll
shr
jne
int
loopne
repz
jae
cmc
call
scas
scas
mov
jle
mov
sub
out
push
push
and
stos
mov
mov
push
movhps
push
call
sar
pop
xor
out
xor
sub
lods
in
int
stc
xchg
movsl
popa
lret
mov
mov
or
dec
inc
ror
rclb
dec
scas
pop
jmp
stc
xorl
or
sbb
add
mov
loope
cmpsb
sbb
and
cmp
loop
pop
data16
stc
mov
jl
xor
lcall
add
jb
sbb
mov
cmp
push
jge
in
and
add
pop
sub
shr
xchg
cmpsb
div
icebp
adc
scas
push
xor
lret
je
sarl
jne
inc
push
xor
fldl
mov
push
popa
and
xchg
out
cmc
mov
pop
sahf
pop
mov
push
pop
sbb
pop
adc
inc
push
and
lcall
xchg
or
lcall
addr16
je
dec
aas
add
adc
fldl
jne
adc
mov
ret
ret
xor
out
mov
dec
shrb
in
out
adc
testb
xchg
pop
adc
fs
adcb
push
add
xorl
or
cli
aam
or
loopne,pt
adc
lock
out
ljmp
mov
cltd
loopne
inc
imul
xor
sub
and
out
pushf
push
xorb
xor
lock
push
shll
mov
lds
fdivs
xor
iret
jno
call
dec
in
out
fildll
ror
sbb
outsl
dec
clc
cmp
and
adcb
jb
movsb
and
fisttpll
or
adc
fstp
xchg
pop
gs
aas
lcall
lds
cltd
jmp
inc
cmpsb
test
cmpsl
cmc
push
scas
sbb
jle
aaa
out
jno
pcmpeqd
rolb
xchg
jb,pn
imull
aas
push
mov
and
incb
adc
pop
shll
mov
fwait
imul
or
movsb
mov
cmc
jp
lret
inc
add
mov
xrelease
rcrl
fldl
orl
jns
enter
lods
cltd
test
sti
sbb
cmp
fimuls
fistl
cld
es
iret
pop
mov
in
pusha
xor
cli
xchg
pop
call
fbstp
xchg
add
addl
imul
mov
push
push
ja
test
sbb
inc
mov
ja
or
jle
lods
mov
in
xor
pop
nop
push
sub
sbb
or
push
nop
jbe
testb
xchg
or
hlt
shr
in
mov
and
mov
shlb
fucomip
xchg
push
fs
mov
push
nop
pop
mov
dec
fidivs
loop
nop
cmp
and
je
adc
xchg
inc
inc
or
push
hlt
es
push
xchg
adc
arpl
pop
fimull
js
jmp
and
inc
mov
and
push
and
into
addr16
xor
outsb
cmp
jmp
lds
inc
pop
mov
xor
pushf
cmpl
add
adc
push
sbb
stc
cmp
push
loop
out
inc
mov
jmp
pop
fiaddl
outsb
addr16
push
and
pushf
scas
add
out
stos
mov
or
inc
pop
mov
in
incb
pop
enter
push
adc
loop
les
sbb
xchg
pop
jmp
repnz
ja
dec
xor
into
leave
push
roll
stos
dec
inc
or
or
jo
call
mov
mov
cli
or
mov
xor
sub
xor
xchg
dec
les
out
icebp
jns
inc
loopne
add
je
jle
inc
mov
lds
fidivrs
in
xlat
jae
test
cmpsb
xchg
stos
lcall
jp,pt
fdivs
xlat
xchg
icebp
dec
sub
into
test
es
mov
xlat
inc
scas
rcrl
shrl
js
inc
je
pop
or
fdivs
into
push
pop
pop
xor
push
dec
data16
inc
iret
lret
sbb
or
outsl
and
and
dec
mov
rcrl
and
and
inc
xchg
push
sbb
mov
mov
stos
dec
xor
mov
push
mov
in
push
sahf
pop
add
test
test
outsb
adc
fwait
mov
mov
pop
adc
shlb
ja
out
jnp
push
leave
in
loope
push
sbb
or
in
adc
cmp
dec
ror
mov
mov
mov
cld
inc
inc
lock
mov
out
inc
add
adc
sub
inc
leave
into
outsb
push
and
repnz
leave
mov
movsl
dec
and
js
jle
orb
sub
rcll
aad
mov
sqrtps
mov
sbb
jo
ljmp
bound
push
mov
insb
mov
ret
lret
cmp
in
cmp
xchg
ljmp
cmpsl
xor
inc
bound
rcl
cmp
jns
pop
mov
cmp
ljmp
popf
add
mov
orb
arpl
scas
shrb
or
xor
adc
add
dec
in
fld
jle
sub
pusha
cmpsl
pop
or
dec
add
mov
cmc
sti
fxsave
pop
andl
into
mov
in
add
test
test
pop
cmp
mov
loope
cmp
cli
and
pop
sub
inc
cmp
sbbl
imul
in
in
mov
mov
cmp
bnd
sti
lods
push
lahf
xor
fs
jo
push
jecxz
jle
loope
xchg
movsl
mov
dec
cld
add
les
lret
and
pusha
xor
pop
push
test
cmp
in
cmp
clc
xor
sub
shl
out
xor
pop
dec
inc
pop
cmp
jle
xchg
jp
es
jb
std
fdivr
lods
sub
cwtl
mov
and
scas
aaa
pop
das
pop
dec
std
xchg
adc
sbb
push
nopl
pop
ds
popaw
inc
xchg
rorl
ljmp
pop
call
mov
mov
or
xchg
js
call
xchg
stos
push
inc
testl
jns
add
inc
dec
and
or
xor
mov
cltd
jmp
sbb
or
sub
stos
inc
aaa
or
xchg
mov
mov
fdivp
cmpsl
sbb
dec
movl
push
mov
push
cmp
daa
scas
es
fsts
sbb
in
adc
cmp
lods
xchg
push
jns
adc
xchg
ds
sahf
jecxz
sbb
mov
fs
inc
xor
rcrl
arpl
je
adc
push
jle
mov
adc
sahf
mov
sbb
loop
sbb
movsl
jae
imul
sbb
aam
jmp
outsb
ljmp
mov
push
mov
mov
mov
ja
push
sub
jp
and
and
addb
call
insb
adc
pusha
daa
fidivrl
xlat
out
adc
mov
loopne
dec
mov
lods
cmc
adc
push
xchg
inc
jl,pn
push
popf
pushf
imul
and
movsl
xor
or
mov
pop
cltd
scas
sbb
loop
cmp
and
xor
push
pop
sub
sbb
sub
push
lock
andl
pusha
jge
daa
xor
aam
push
lods
inc
lds
push
js
in
imul
cmp
sbb
fdivrl
popl
mov
std
sub
xchg
into
pop
ret
or
lret
or
flds
mov
mov
data16
xchg
leave
icebp
lret
ret
test
pop
sub
sbb
xchg
bound
mov
rcrl
mov
jns
add
and
scas
ret
mov
push
adc
iret
inc
mov
xor
cmpsl
jecxz
aam
jle
xchg
aas
jecxz
sub
lcall
or
scas
jae
enter
mov
mov
pop
idivl
dec
inc
sbb
arpl
jb
xchg
jp
inc
fsubl
popf
lods
add
rclb
popf
fmull
sbb
add
pop
dec
push
and
inc
sub
add
fstpl
dec
fs
push
jne
clc
cmpsl
or
sub
add
outsb
aaa
jp
inc
arpl
out
andl
test
xchg
jmp
lods
test
mov
mov
sbb
xchg
mov
ss
sbb
test
sub
rorb
inc
ret
outsl
push
inc
inc
imul
enter
clc
popa
mov
aam
mov
movsl
adc
adc
jp
mov
stos
stc
aas
adc
dec
cwtl
push
mov
ds
rorb
aam
mov
adc
lods
mov
dec
xchg
xchg
pop
cmpsb
adc
outsb
rcr
fwait
sbb
sti
and
mov
sbb
cmpl
mov
test
mov
adc
clc
jno
mov
popf
push
out
xchg
lock
js
mov
es
sbb
in
pusha
cmp
aad
cmc
clc
xchg
xchg
pusha
sbb
or
xchg
aad
sub
loopne
cmp
mov
not
inc
jbe
aas
mov
adc
insl
hlt
sub
add
adc
or
stc
sbbl
enter
nop
andl
lds
sbbl
inc
xor
mov
cmpsl
stos
inc
xchg
sub
jae
jns
push
in
pop
and
outsb
std
sub
adc
pop
loopne
or
int3
and
rorl
and
enter
xor
pop
dec
adc
lds
aas
jae
and
cmp
cli
pop
push
ficompl
jno
popl
sbb
stos
addr16
inc
fildl
adc
scas
shl
stos
cmp
rcrl
push
sub
adc
xchg
dec
fiadds
cs
lcall
nop
in
ret
stos
int3
lret
dec
pop
and
mov
dec
ja
mov
cmc
add
insl
imul
out
mov
das
pop
sti
aas
rolb
push
adc
test
xor
fs
mov
rol
push
mov
notl
fmull
sub
test
add
fs
sbb
mov
repz
dec
add
cs
mov
icebp
mov
jmp
sbb
pop
scas
or
aad
inc
fcoml
mov
adc
lcall
mov
ret
dec
jae
mov
adc
fstpl
ss
js
mov
and
aad
push
lea
add
pop
imul
addr16
pop
xor
and
sbb
xchg
loope
push
hlt
lahf
mov
dec
sbb
mov
out
fadds
mull
mov
mov
clc
xor
loope
and
in
cwtl
mov
mov
lds
inc
gs
pop
dec
mov
pop
sub
rcrb
adc
cmpsb
outsl
mov
notb
mov
ljmp
sbb
xor
dec
or
sub
negl
xor
add
hlt
sbb
mov
sub
sub
and
pop
fsin
mov
iret
push
xchg
jne
ja
xlat
dec
insb
mov
push
mov
imul
push
push
pop
cmp
xor
lcall
mov
mov
clc
mov
xchg
and
add
xchg
dec
imul
out
aas
ljmp
rolb
cmpsl
int
es
mov
pop
pop
and
fsts
pop
fldt
leave
fsubl
mov
jge
mov
test
pop
fcmovnb
shll
adc
xor
ficoml
dec
loope
mov
or
or
inc
dec
mov
call
fdivrl
filds
lods
stos
xor
bnd
xchg
mov
cld
adc
push
cmp
sbb
pop
mov
pop
test
adc
sub
and
into
push
sbb
sub
jb
sarl
push
stc
test
imul
xchg
scas
push
jge
xchg
mov
insb
mov
not
repnz
jmp
ficompl
mov
push
das
or
xor
sub
inc
xlat
mov
adc
movsb
xchg
jbe
dec
lock
shl
dec
ficomps
or
fists
push
stos
icebp
push
sbb
xor
mov
cmp
andb
pusha
mov
negb
and
mov
imul
and
rolb
popa
inc
into
cwtl
pushf
mov
or
aaa
ret
sbb
icebp
add
fsts
push
push
rcrl
xor
dec
add
outsl
add
movsl
push
test
sub
add
lods
mov
or
push
sbb
sbb
movsl
push
popf
movsb
mov
fcmovnb
idiv
jg
mov
stos
das
pop
sbb
ss
mov
add
jmp
cmpsb
dec
mov
out
stc
fnstcw
push
sti
cmp
icebp
and
inc
push
fs
push
movsl
lahf
sti
fwait
test
aas
enter
mov
push
xchg
jne
sub
xchg
jno
bswap
and
int3
adc
pop
pushf
iret
fsubs
lret
cmp
imul
pop
movsb
jecxz
imul
dec
cmp
aas
push
adc
out
not
sub
dec
jo
pop
mov
mov
push
inc
xchg
mov
scas
xchg
push
test
jl
pop
call
jns
mov
cmp
ds
iret
pop
out
push
nop
ret
in
sbb
sub
mov
out
cli
lock
cmpsb
push
mov
inc
dec
inc
clc
in
fsubl
enter
popa
jg
and
aas
mov
test
mov
je
sub
xchg
push
mov
mov
mov
cmpl
or
pop
bound
sbb
mov
mov
add
pop
xchg
sub
inc
pusha
repz
nop
rcrl
xchg
in
clc
push
insl
mov
aaa
adc
addl
ljmp
dec
mov
sbb
js
or
cltd
sbb
outsl
adc
mov
mov
pop
mov
cwtl
jle
adc
mov
dec
push
xchg
mov
scas
jmp
xchg
adc
mov
push
or
mov
mov
cmp
add
stc
or
dec
int3
jo
mov
push
sbb
pop
pop
lret
add
scas
mov
shrl
popf
shrb
or
sub
adc
sahf
pop
push
sbb
mov
jp
mov
bnd
sbb
in
mov
jg
pop
adc
mov
xor
sti
pop
add
mov
aam
dec
adc
pop
inc
jp
push
popa
jo
mov
nop
xchg
jle
popw
neg
push
sub
pop
iret
mov
mov
out
loop
scas
push
pop
push
popf
cmpsl
aad
add
fistps
mov
jnp
ss
add
aad
jge
or
inc
movsb
scas
mov
pop
cli
popf
icebp
mov
xchg
mov
xchg
pop
cmp
sub
dec
loopne
inc
cltd
outsb
push
test
xor
mov
push
mov
addr16
ret
outsb
xchg
sahf
push
cmp
aad
imul
cmp
and
pop
mov
pop
cwtl
aad
stc
push
cli
sbb
jbe
xchg
cwtl
dec
pop
outsl
fnsave
js
push
lock
mov
lds
out
icebp
gs
dec
popf
cmpsb
aas
mov
sub
mov
dec
mov
fisttpll
stc
call
cmp
push
xchg
pop
icebp
dec
cmpsl
popa
mov
xchg
xchg
cmp
dec
cmp
inc
inc
jo
jge
lods
xchg
add
scas
xor
cs
jmp
cmp
mov
jle
pop
mov
nop
es
jge
outsb
pusha
nop
xor
adc
push
sti
adc
clc
imul
sub
push
xor
add
sub
mov
cltd
add
adc
nop
call
push
shrb
sahf
lret
gs
lcall
into
mov
cmp
or
in
in
lret
jg
xchg
lahf
mov
scas
enter
inc
mov
clc
xchg
xchg
jl
xchg
add
es
jno
rcl
inc
cli
pop
sub
cmp
pop
stos
sahf
jge
jo
adcb
mov
jae
shlb
pop
loopne
and
ds
dec
into
inc
mov
or
bound
jecxz
and
ret
push
pop
pop
jg
out
and
jle
or
pop
and
ret
lahf
mov
jns
or
cmpsl
iret
imul
pushf
mov
dec
stc
lcall
cmp
ficompl
mov
mov
jno
push
rclb
push
adc
in
pop
popa
mov
pop
cmp
stc
pop
xchg
cmpb
xchg
pop
ja
in
test
cltd
or
xchg
lods
sti
gs
inc
mov
out
dec
ljmp
lret
fnstcw
mov
stos
loope
push
sbb
sbb
clc
es
popa
mov
mov
ljmp
popf
and
pop
xchg
sti
dec
stc
jne
or
or
pop
sub
call
sbb
or
insl
xchg
popf
inc
jge
cmp
clc
jle
inc
jno
sub
pop
jecxz
jae
adc
xchg
ja
jge
pop
xor
mov
add
bound
in
adc
shll
imul
daa
ret
in
lea
ljmp
sarl
mov
sbb
test
mov
shl
imul
nop
cmp
clc
mov
and
sarb
dec
jecxz
aaa
xchg
inc
xchg
and
adc
and
push
add
or
mov
fisubl
pop
scas
lret
daa
fcoml
mov
inc
ljmp
fisubrl
and
out
push
dec
fsubr
fs
mov
xchg
xchg
fsubp
sbb
dec
xchg
sbb
daa
push
out
jo
in
sbb
hlt
or
add
ret
push
xchg
divl
mov
lock
inc
push
sbb
fsts
sub
cmp
jno
int
or
sub
in
mov
aas
cmp
or
fistpll
mov
pop
stos
bound
dec
loop
popa
jmp
leave
mov
ljmp
xchg
aaa
aam
adc
inc
leave
jne
sub
jle
int
mov
push
pop
addr16
jnp
std
mov
std
and
xor
dec
push
popf
roll
jno
shlb
stc
cwtl
fwait
jmp
jno
add
and
je
cltd
mov
iret
ljmp
shlb
cs
loopne
sub
test
pusha
sbb
jmp
sti
enter
xor
jns
dec
loop
scas
push
jmp
lahf
aad
sbb
es
mov
and
and
fadds
rsm
aaa
loop
lock
in
push
inc
psubd
cmp
pop
dec
or
fldt
std
lcall
in
adc
xchg
push
mov
jne
jecxz
cmp
in
test
insb
sub
imul
out
nop
cmpsb
mov
scas
repnz
addl
mov
push
loope
dec
mov
stc
cltd
mov
mov
xchg
ljmp
testb
fs
aas
cmpsl
lahf
xchg
out
mov
adc
pop
sbb
inc
and
stos
rclb
loope
mov
out
cli
repnz
cs
push
ja
jns
push
cmp
icebp
lea
mov
or
mov
stos
inc
lret
lea
push
test
or
pop
je
loop
movsb
and
adc
scas
push
arpl
xor
or
and
dec
jbe
jno
sti
sub
mov
push
sbb
mov
addr16
rcl
in
push
adc
sar
in
jl
sbbl
test
cmp
pop
xchg
fs
insb
mov
loope
xor
movsb
faddp
adc
adc
jns
pop
shrl
mov
mov
rorb
inc
lds
mov
stc
or
xor
push
and
enter
negl
sti
sbb
ljmp
add
sub
test
mov
sbb
xchg
std
movsl
lahf
movsl
cli
fidivl
nop
inc
call
in
mov
sbb
sahf
fimull
mov
adc
lock
mov
mov
push
push
add
jl
add
jne
arpl
pusha
imul
push
aas
sbb
int
ret
cmp
dec
xchg
clc
fidivrl
loopne
lds
insb
testl
dec
sbb
cltd
inc
pop
outsb
test
fs
pop
leave
insl
push
into
fildl
orb
add
lahf
adc
dec
add
clc
xchg
dec
mov
jo
cwtl
in
cmc
rclb
clc
mov
das
add
mov
pop
lods
in
sbb
mov
test
pop
xchg
pinsrw
loope
repz
mov
je
inc
xor
push
dec
stos
imul
lods
ja
ret
xor
xchg
dec
icebp
pop
pop
fistpl
xor
mov
sbb
pop
lock
xchg
icebp
ss
in
ds
ret
sub
fst
adc
jnp
sub
cmc
enter
fdivrs
fwait
sbb
pop
pop
sub
mov
sbb
adc
movsb
inc
insb
lock
fldl
jge
adc
pop
push
dec
mov
push
or
call
mov
mov
adc
cmpsb
jmp
xchg
jmp
notl
outsl
arpl
mov
cltd
popf
jo
test
jl
aas
xor
loope
inc
xor
or
sbb
cmp
std
jg
dec
add
xor
sahf
and
push
mov
mov
jae
cltd
ret
pop
fidivs
mov
std
fsts
not
push
or
jo
sti
cmpsl
mov
add
and
sbb
xchg
mov
into
cltd
es
add
xchg
and
bound
scas
in
lea
mov
xchg
shrb
dec
pusha
subb
out
xchg
push
xchg
fidivrs
dec
pop
les
xor
arpl
pop
cmp
and
mov
push
mov
xchg
fiaddl
stc
jmp
xchg
sbb
dec
sbb
dec
add
pop
fwait
mov
lret
mov
in
jg
dec
fcoml
mov
notl
inc
mov
jo
popf
sub
dec
je
clc
pop
outsb
data16
icebp
cs
or
jae
mov
mov
mov
rcrb
dec
mov
loop
fidivrs
stos
and
shrb
shrb
mov
mov
xor
mov
mov
xchg
inc
imul
ret
and
sub
push
nop
mov
pop
rcll
sub
fcmovne
adc
es
add
push
mov
push
sbb
jns
test
jnp
clc
in
out
arpl
outsl
pop
xchg
outsb
mov
adc
pop
jo
mov
sub
cltd
cs
call
test
cmp
cltd
cwtl
cltd
shr
enter
mov
loop
sahf
jl
cwtl
xchg
ljmp
add
xchg
inc
cmpsb
mov
mov
sarb
push
and
push
stos
shrl
cmp
sbb
addr16
lds
icebp
mov
inc
inc
cmpb
out
hlt
mov
pop
aam
add
add
xchg
into
subw
dec
push
pushf
mov
imul
sahf
pop
add
fs
jo
cmc
pop
pop
jmp
test
in
adc
rol
xchg
push
fs
mov
xor
mov
cmc
push
fistpll
jne
add
sub
xor
lods
insb
je
call
push
fcomps
and
sbb
pop
push
pusha
frstor
mov
inc
insl
ret
je
and
xor
movsl
fcoms
mov
xor
add
jecxz
or
imul
imul
in
fwait
mov
out
gs
mov
jbe
cmpsb
mov
and
cmp
cwtl
sbb
bound
inc
jnp
pop
dec
mov
call
dec
lcall
xor
popa
xacquire
int
mov
cmp
test
out
cmp
push
sahf
lcall
loope
inc
cmc
fnstcw
jge
mov
icebp
stos
inc
sbb
out
pop
scas
push
iret
sub
jp
mov
pusha
inc
sar
sbb
ret
mov
add
xchg
repnz
and
fisubs
arpl
and
imul
and
xor
popa
xor
and
jo
lods
inc
sbb
or
xor
add
pop
push
push
js
adc
dec
and
xor
into
mov
inc
push
dec
inc
test
push
mov
sahf
and
xor
ja
dec
jl
insb
jmp
mov
sub
fldenv
sahf
test
pop
ret
xchg
sub
mov
mov
dec
aas
and
push
fcoms
jno
out
icebp
sub
mov
mov
jb
insb
add
pusha
or
int3
fldt
addr16
dec
dec
call
mov
loopne
cmp
or
and
movsb
sahf
dec
mov
stos
stc
pop
sbb
mov
push
pop
mov
test
arpl
mov
or
jno
push
adc
pop
xchg
mov
sub
arpl
pop
adc
mov
fsts
sbb
mov
jns
xchg
popw
dec
or
dec
fwait
mov
push
xor
lds
push
and
jg
pop
lods
pop
adc
sbb
push
popa
cmpsb
and
xchg
inc
pushf
shll
imul
pop
les
repz
mov
sub
sub
andl
mov
loopne
mov
repz
arpl
jo
shll
push
mov
jne
movsb
scas
mov
and
and
inc
cli
jns
mov
pop
pop
pop
xor
push
mov
in
xor
cmpsb
push
xchg
loopne
cmp
dec
mov
and
sbb
hlt
sti
int
pop
pop
pop
call
sub
mov
dec
rorl
cwtl
loop
hlt
loope
mov
insb
or
imulb
dec
dec
cltd
lret
outsb
les
pop
shll
mov
jo
pop
push
xchg
xor
in
iret
mov
mov
adc
popa
and
lahf
or
pusha
cmpsb
push
push
pushf
and
inc
shl
in
mov
insb
and
push
pop
add
movsb
ljmp
dec
push
mov
dec
movsb
mov
daa
pop
xor
or
mov
inc
call
add
iret
cmp
es
or
jge
bound
repnz
or
and
push
xchg
adc
dec
pusha
insl
cltd
adc
xlat
aad
iret
fincstp
popa
loop
dec
negl
outsl
in
or
imul
call
xchg
xchg
gs
xor
dec
push
popf
push
into
xchg
push
daa
ror
test
xlat
and
adcb
dec
int
enter
jp
pop
in
or
aad
ss
bound
jmp
mull
cmpsl
push
cmc
inc
xor
scas
mov
pop
adc
jae
sub
out
xchg
sbb
pushf
xchg
repz
addr16
incb
pop
push
xor
test
stos
jb
xorb
lahf
cmp
fisttpll
sub
jns
jne
js
sbb
jnp
sti
adc
push
shlb
aad
fstp
xchg
push
push
mov
insb
out
jne
mov
pop
out
mov
icebp
add
mov
nop
into
out
jle
fs
mov
dec
in
fcompl
ret
jno
in
pusha
into
aaa
xchg
lea
pop
lods
jnp
loope
and
pop
in
loope
js
test
aas
push
test
push
inc
jb
loopne
addb
popf
out
dec
or
sbb
outsl
std
repz
repnz
cmp
xchg
cmp
adc
add
gs
pop
mov
lahf
mov
xchg
es
aad
push
and
mov
popa
in
scas
repz
mov
in
jge
push
in
mov
loopne
idivb
mulb
shl
jmp
xor
inc
sub
mov
or
jb
popf
in
shll
cwtl
cmc
pop
fcmove
adcb
stc
push
lea
mov
divl
cmp
dec
jns
test
xchg
loope
mov
sbb
out
mov
or
cmp
test
dec
xor
dec
and
dec
insl
ret
aam
push
pop
mov
xchg
xor
mov
or
or
lock
outsb
or
dec
add
cwtl
dec
and
jle
adc
fwait
aad
fwait
hlt
inc
iret
loope
lcall
ret
inc
cmp
jl
repz
and
adc
xchg
jnp
iret
xor
popf
cmpsb
or
mov
mov
iret
sub
inc
xor
imulb
mov
shlb
jmp
loope
push
and
xor
movsl
mov
pop
cmp
push
decl
sbb
xor
mov
loope
je
sti
inc
enter
dec
adc
xor
or
mov
stos
loopne
mov
jp
or
jo
sbb
cltd
mov
lock
lahf
pop
cmpsb
dec
adc
test
push
xchg
cmp
mov
mov
and
cmp
xchg
mov
inc
cmp
cld
jno
dec
daa
jb
sbb
push
lock
dec
stos
frstor
adc
or
gs
pushf
sbbb
popf
mov
cmc
xor
sub
adc
xchg
adc
sti
push
lods
into
imul
movsl
jg
mov
loope
pop
call
ds
decb
lds
jb
cmp
add
push
jp
inc
jge
jle
mov
dec
xchg
sbb
es
jl
cltd
ret
cmp
adc
mov
jl
jb
cmc
cmpl
loop
fs
subl
dec
push
cmp
out
ljmp
outsb
xor
loope
arpl
xchg
out
sub
rcll
cmpsb
ss
fstps
and
mov
jns
test
int
inc
adc
dec
ffreep
lods
aam
mov
rorb
xor
push
push
lods
frstor
adc
inc
or
inc
xchg
inc
lret
mov
dec
cmp
pushf
out
aaa
mov
stos
jg
adc
dec
xor
push
lea
jnp
lahf
jne
dec
push
bound
mov
pop
sub
cwtl
dec
and
shrl
gs
cmc
out
imul
mov
add
test
adc
lods
fs
add
or
data16
aas
out
jg
pop
pop
lods
mov
out
adc
insb
faddl
push
in
lods
mov
insb
xchg
dec
cltd
xor
add
xlat
lret
outsb
arpl
in
stos
adc
cmp
mov
xorb
jl
gs
push
test
dec
imul
loope
hlt
sbb
scas
adc
pop
pop
cmp
jp
or
adc
lds
addr16
sahf
pop
jl
pop
outsb
mov
rclb
mov
mov
out
ss
sbb
in
in
xchg
arpl
movsb
mov
scas
inc
push
pop
add
and
jecxz
cmp
jge
int
daa
jecxz
jp
ficoml
jno
fimull
test
js
xchg
stc
cli
xchg
fwait
in
jbe
outsb
lea
addr16
xchg
and
lods
add
stc
jmp
pop
ljmp
sub
mov
mov
mov
mov
int3
mov
test
jg
push
or
shll
add
pop
mov
aad
xchg
mov
enter
mov
adc
cmp
jp
inc
in
enter
xchg
popa
mov
mov
clc
xchg
pop
mov
mov
aam
bnd
pop
daa
and
add
insb
jle
push
int3
jbe
push
dec
xor
js
mov
mov
and
push
pop
mov
mov
or
sub
inc
adc
lahf
bound
shlb
push
xchg
mov
mov
jae
pop
call
mov
xchg
xchg
aam
testl
icebp
ljmp
and
int
lret
pop
jo
fwait
push
xor
call
mov
xlat
iret
push
stos
mov
std
mov
cmp
je
popa
push
mov
cs
sub
idiv
mov
mov
out
jne
cltd
xor
adc
mov
addr16
insl
ret
mov
fsubs
idivb
addr16
adc
jb
and
adc
mov
out
xchg
pop
mov
repnz
iret
mov
mov
push
or
jae
push
xchg
cmp
hlt
test
add
inc
push
push
mov
pushf
mov
and
insb
mov
into
xchg
adc
mov
gs
loope
push
repz
outsl
stos
rclb
loopne
mov
mov
push
sti
jns
dec
andnps
mov
sbb
nop
xchg
mov
or
add
mov
or
pop
add
mov
daa
mov
out
push
shrl
mov
out
mov
jbe
rcl
jb
data16
sbb
jnp
xor
push
aam
nop
mov
push
ja
cmp
loop
mov
rcrb
clc
mov
xor
xchg
adc
lahf
mov
ja
js
sbb
pop
and
mov
mov
and
nop
lret
and
inc
test
clc
jne
fs
aad
lods
mov
movb
jno
inc
ficomps
cli
ret
dec
adc
enter
add
push
hlt
xlat
push
out
stc
or
icebp
bswap
enter
jns
out
adc
leave
mov
cmc
jle
dec
add
stos
pop
mov
adc
jmp
test
adc
mov
jbe
dec
jge
add
iret
imull
mov
pusha
xchg
decl
dec
inc
rorl
dec
hlt
push
adc
pop
or
mov
and
mov
adc
jg
pop
out
inc
mov
cwtl
and
fdivrs
xor
jnp
cmp
test
test
shll
push
dec
out
pop
mov
and
sub
cmpb
cmp
cli
mov
pop
fdivrp
imull
lahf
xlat
icebp
fmull
pop
rcrb
inc
cmpsl
push
loopne,pn
loop
xor
jecxz
mov
stos
and
sub
cs
and
mov
xchg
dec
stos
lods
wbinvd
nop
call
fmull
fst
push
mov
pop
sub
loop
jecxz
jmp
and
mov
cltd
std
dec
loopne
push
cs
add
mov
inc
sub
push
jno
jb
dec
mov
out
jo
jle
int3
mov
jnp
cs
sbb
push
adc
sbb
addb
or
out
add
xchg
fmulp
xchg
loope
xchg
shlb
ret
mov
pop
push
clc
in
cmp
push
xchg
out
aas
test
adc
push
xor
push
lea
sub
sub
mov
lock
sbb
rcll
lods
cld
mov
inc
jecxz
mov
imul
xor
popa
lahf
aam
inc
imul
push
mov
mov
jo
pop
fcoms
or
les
xor
icebp
pop
bound
pop
fldt
cmp
inc
push
mov
jl
gs
jmp
mov
cltd
xchg
push
es
sbb
jecxz
mov
repz
dec
shrl
and
cmpsl
sti
adc
push
mov
ljmp
cmp
push
stos
xchg
andl
gs
fnstsw
rcrl
outsl
stos
pop
mov
mov
mov
les
mov
add
and
call
cltd
fisttpl
scas
sbb
or
xor
ljmp
test
push
mov
les
mov
add
into
push
sbb
out
adcb
ret
inc
fdivrs
aas
jae
test
add
enter
jl
pop
add
js
push
sub
popa
loope
lahf
pop
lret
add
pop
pop
prefetchwt1
sbb
outsb
rcl
loop
xor
and
negl
xchg
lea
mov
js
cmpsl
mov
dec
push
cltd
in
into
ficoms
and
sub
pushf
mov
ljmp
outsl
inc
pop
icebp
leave
cwtl
and
gs
xor
lods
mov
push
lock
jmp
lahf
scas
sub
filds
sbb
sub
imul
mov
cmc
lret
jae
sahf
or
add
fldt
jo
adc
addr16
lods
loop
fwait
push
test
dec
faddl
out
mov
flds
sbb
fsubr
movsl
sbb
insl
adc
and
stos
out
pop
and
enter
lret
leave
mov
shll
mov
dec
xchg
mov
ljmp
iret
or
ds
pop
xchg
ljmp
lret
xlat
mov
lcall
push
cs
push
xchg
stos
imul
sti
inc
shll
mov
jb
sbb
out
daa
add
mov
ret
fwait
pop
cmpsl
and
dec
sahf
rcl
icebp
shll
arpl
pop
imul
dec
push
adc
stc
mov
mov
and
test
jnp
flds
cwtl
push
push
jge
neg
xchg
clc
mov
outsl
cmp
in
inc
pop
push
cmpsl
or
inc
notl
sbb
mov
in
loopne
mov
es
jbe
xor
jne
lods
jecxz
pop
jns
cmp
mov
cld
xor
ljmp
ficomps
or
stos
adc
mov
and
mov
insb
je
test
or
inc
int3
sbb
xchg
push
xor
scas
leave
jle
inc
stos
or
jae
jns
imul
jmp
inc
pop
sub
xchg
jecxz
xchg
xlat
pop
test
rcll
iret
mov
cmp
add
jne
push
sub
xchg
fdivrl
out
test
adc
ret
mov
add
and
inc
cmp
dec
adc
push
sub
xor
mov
push
shll
sbb
orl
sarb
adc
stos
cmc
pop
shrb
fwait
pop
ja
or
inc
bound
pop
add
fistl
xor
pop
add
adc
pop
loope
dec
repnz
xchg
pop
xlat
enter
adc
add
ss
pop
pusha
hlt
xchg
or
mov
xor
enter
jle
lahf
inc
aas
and
xor
pop
xor
imul
dec
daa
gs
pusha
or
add
jae
lret
mov
call
mov
pop
xchg
or
in
lods
jne
and
in
sub
cltd
scas
mov
mov
push
imul
push
or
ret
icebp
testl
testb
sub
call
jl
mov
or
adc
mov
mov
stos
ret
push
xchg
jl
add
jae
cltd
ja
pushl
inc
push
xor
insl
in
dec
inc
jle
sbb
xor
mov
pop
int
xchg
push
sbb
xchg
out
rorb
hlt
pushf
jmp
insb
mov
and
jbe
sbb
mov
push
jp
out
call
pop
fimull
jecxz
inc
cmp
dec
inc
xchg
sub
in
push
sahf
fstl
xchg
enter
rol
ss
loope
mov
stc
ss
mov
mov
push
inc
mov
out
scas
mov
jbe
jmp
dec
clc
sub
mov
ret
mov
sub
lahf
in
jl
outsb
in
add
and
sbb
imul
inc
cmpl
adc
xor
cmc
xchg
das
das
in
negl
sub
jmp
subl
add
repz
adc
inc
add
inc
mov
or
mov
mov
mov
mov
mov
negl
xor
cmp
out
test
adc
adc
sbb
movsb
cld
inc
mov
xlat
bound
bound
push
dec
and
int
inc
sahf
js
outsl
adc
repnz
andl
arpl
xor
js
data16
iret
pop
jmp
loope
pop
int
mov
sti
xlat
xor
dec
outsb
xchg
loope
inc
xorb
sti
mov
jns
scas
jno
popa
jne
cld
clc
das
adc
sar
mov
lea
adc
lds
in
cmc
clc
lahf
in
sbb
cmp
cmp
push
pushf
push
insl
and
cli
shr
rorl
loopne
sub
shl
daa
jae
call
outsb
sub
into
les
aas
dec
icebp
xor
into
mov
ret
dec
and
shl
aad
jae
xor
in
dec
mov
out
and
aam
sbb
mov
dec
jmp
mov
inc
cmpsb
aaa
ds
xorb
stos
jnp
dec
daa
mov
xor
mov
cld
outsl
xchg
fidivs
xor
mov
mov
sub
popa
pop
cmpsb
cwtl
mov
mov
mov
push
mov
xor
mov
subl
xor
sub
pop
dec
loop
sahf
stos
mov
pop
in
loop
lahf
shlb
pop
sub
inc
mov
jb
xchg
inc
pop
inc
stos
jnp
cwtl
je
rol
xor
bnd
cmp
ss
push
sbb
sub
syscall
js
xchg
xor
add
mov
loop
pop
mov
out
ja
aaa
pusha
roll
push
pop
lock
roll
int
xchg
and
ja
mov
xor
mov
xchg
lcall
lds
loopne
movsb
xor
aaa
rcl
shll
sbb
jne
test
fmuls
xchg
mov
icebp
sbb
popa
inc
sarl
enter
adc
push
jg
pop
scas
out
jg
add
dec
mov
negb
adc
add
push
sbb
xor
or
mov
fcmovnbe
aam
aaa
enter
mov
jmp
cmp
xor
outsb
adc
jne
add
test
xor
cmp
icebp
int3
in
leave
xor
loopne
inc
mov
pusha
dec
xor
sarb
lods
jnp
jmp
push
orl
xchg
and
sahf
mov
leave
mov
dec
dec
dec
pop
int3
adc
adc
pusha
cmp
push
xlat
cmp
hlt
xor
aaa
int3
push
data16
sbb
ret
adc
sub
dec
negl
push
decb
dec
insb
dec
outsb
lds
lret
mov
lcall
xor
call
dec
sub
cmp
fsubl
enter
das
scas
outsb
cli
data16
push
dec
mov
xchg
cmp
and
lret
sub
jg
mov
and
sahf
pop
lret
lods
clc
ret
jns
and
mov
mov
test
orl
sub
jecxz
xchg
and
mov
dec
fs
add
lea
les
test
popa
ss
aad
enter
mov
sub
popf
and
sbb
sub
cli
cmpsl
jnp
cld
stos
stos
fldcw
cmp
insl
mov
jmp
sbb
inc
pop
push
jle
cmpl
xchg
push
jmp
jp
subl
stos
aam
out
clc
pop
lds
adc
jg
addb
mov
jmp
stc
adc
inc
cld
add
js
cwtl
pusha
aad
hlt
mov
pop
fisubs
in
repz
aas
or
das
test
hlt
ret
jge
les
inc
out
rorl
jecxz
push
mov
hlt
outsb
pop
loop
xchg
dec
add
cld
mov
iret
scas
mov
test
push
in
cmp
mov
sbbb
adc
dec
int
in
lds
jmp
push
dec
xchg
mov
adc
movsb
psllw
jbe
mov
bound
ficoml
stc
pop
cs
pop
mov
xchg
test
mov
pop
mov
cmp
cmpsb
push
xor
dec
jo
pop
or
pop
leave
hlt
add
inc
repz
imul
call
inc
jns
lock
fsts
cltd
mov
mov
rorb
int3
popl
cld
push
jbe
shlb
xchg
int3
out
nop
sahf
sahf
dec
inc
sbb
xchg
sub
stc
movsb
cld
or
mov
inc
mov
icebp
push
in
inc
clc
ja
adc
push
sub
or
out
ds
out
mov
jmp
aam
cmp
xchg
xor
jl
loopne
fistl
pop
dec
or
in
push
pop
les
inc
ds
and
popf
out
pop
sbb
cli
addr16
push
es
pop
outsl
xacquire
movsb
sbb
test
int
aaa
loop
leave
pop
scas
jne
mov
jns
add
shr
cltd
clc
hlt
dec
adc
je
push
mov
inc
and
cmc
push
jl
xchg
les
in
push
inc
std
jbe
jp
addr16
pop
lock
sbb
sub
push
jmp
mov
mov
jae
mov
inc
mov
mov
scas
and
dec
sub
jb
jmp
xchg
insb
jbe
cmp
loop
mulb
inc
clc
scas
in
stc
ja
pop
movsb
and
push
mulb
xchg
and
aaa
out
fdivl
scas
xorb
nop
xchg
pop
pushf
xor
loope
push
dec
dec
fucomp
lret
pop
inc
lds
pop
cmp
inc
adc
aas
data16
sub
mov
sbb
popf
xchg
pop
push
sbb
cmc
cmc
adc
adc
mov
and
pop
xor
push
and
and
call
fsubl
xchg
aam
xor
daa
dec
add
and
out
mov
mov
mov
cmp
out
xchg
in
mov
mov
sub
dec
sti
pop
inc
cmpsl
lret
xacquire
inc
adc
jae
sbb
add
jge
mov
mov
sub
cmp
lods
add
xchg
sbb
xor
fcmovnbe
popf
orl
in
lock
dec
dec
inc
addl
cld
pop
ja
mov
mov
xchg
lds
iret
mov
and
mov
rcrb
jl
fbstp
dec
outsl
sbb
nop
jmp
inc
mov
xor
mov
jno
xchg
jo
mov
ret
lea
cmc
imul
add
mov
pop
mov
mov
cmpsl
mov
xor
call
jmp
cmp
push
jns
mov
lds
or
inc
es
or
in
push
or
or
mov
cmp
pop
pusha
test
int3
mov
mov
xor
inc
iret
pop
dec
sbb
adc
imul
aam
orb
sbb
add
fisubl
xorl
mov
scas
loop
lock
mov
push
enter
xor
lock
shll
rolb
sub
mov
notb
daa
mov
or
lcall
scas
icebp
imul
adc
clc
lods
cmpb
xor
je
mov
add
adc
in
jae
std
push
ret
sti
cmc
gs
mov
xor
ja
cmpsb
notrack
int3
leave
sbb
scas
cmp
push
and
jmp
in
push
mov
sbb
add
cmp
and
repz
loopne
or
js
leave
xchg
test
mov
push
mov
mov
mulb
sbb
xlat
add
mov
cmp
call
clc
icebp
sub
or
icebp
scas
aaa
push
ljmp
mov
inc
dec
imul
add
adc
xchg
jge
adc
leave
mov
push
push
js
mov
sbb
xchg
inc
mov
nop
jge
outsl
add
sbb
outsl
pop
mov
sti
leave
jnp
sbb
ret
js
xor
sbbb
xor
pop
push
jae
out
ss
testb
push
jp
pop
jg
xchg
dec
dec
inc
mov
sub
cmp
movsl
xchg
adc
sub
cmp
lea
int
jo
mov
or
ja
clc
push
jle
sbb
pop
mov
jnp
sbb
pop
adc
sbb
xchg
adc
push
imul
sub
mov
xchg
lods
push
mov
adc
jo
lods
sbb
jae
push
movsl
iret
popa
cmp
js
ret
dec
add
ljmp
jp
xchg
sub
outsl
sbb
jno
push
mov
inc
mov
jno
mov
sbb
jae
in
or
dec
add
arpl
addr16
nop
in
sub
xchg
jb
sub
ret
and
jnp
mov
ret
pop
jg
cmpsb
es
cmp
loope
sbb
fidivrs
scas
ss
cli
or
fdivl
mov
pusha
fadds
inc
out
xor
call
dec
push
cmp
mov
movsl
nop
or
push
fs
arpl
lret
test
test
pop
aam
inc
out
inc
dec
lcall
ljmp
shlb
jge
dec
jl
test
stc
add
cmp
add
sbb
out
mov
jmp
cli
movsb
insb
hlt
jnp
xchg
ljmp
push
dec
out
adc
int3
mov
imul
push
in
aas
andl
enter
xor
stc
mov
mov
test
cmp
dec
xchg
push
cmc
test
bound
mov
jecxz
adc
ret
push
and
sbb
push
xchg
add
cwtl
and
or
orb
inc
mov
sub
or
js
push
pushl
adc
pop
pop
out
push
sub
push
gs
xchg
cwtl
sub
cmpsb
call
pop
out
shll
aas
xchg
test
sub
cli
in
sarb
xchg
popa
sub
jae
int
or
cltd
xchg
inc
std
mov
shlb
insb
sbb
shll
sbb
orb
dec
and
mov
or
mov
pop
mov
das
loopne
clc
or
es
jp
stos
or
inc
int
mov
into
and
or
cmpsb
push
stos
dec
out
xor
or
dec
sbb
loopne
xor
in
enter
push
or
mov
std
pop
dec
sbbl
adc
sbb
add
add
dec
incl
fcomp
fcoms
fidivs
cmpsb
xchg
dec
fldl
and
ss
mov
stos
sti
inc
push
jmp
shlb
ja
mov
sub
test
inc
push
sbb
jl
dec
inc
push
in
in
sub
push
xchg
push
test
nop
insb
bound
or
jno
push
add
and
iret
arpl
dec
mov
fwait
dec
pusha
add
jge
pop
loopne
arpl
push
sbbl
outsb
jecxz
stos
inc
adc
push
es
sub
faddl
jp
and
or
inc
test
push
xchg
fisubl
rorl
cmp
add
mov
bsf
sub
mul
xor
ficoml
js
xorl
adc
mov
cmp
out
mov
popf
loopne
jno
fs
cmp
cmp
into
sbb
mov
mov
clc
repnz
sub
dec
in
out
mov
and
jp
sbb
inc
cmp
sbb
add
xor
or
aam
mov
ret
jno
push
cmpsb
hlt
push
mov
rcll
inc
pop
pop
xchg
outsl
les
enter
jmp
and
cli
mov
inc
lds
or
jo
cmp
cmp
aas
mov
jmp
mov
jecxz
mov
pop
cmp
mov
and
push
cmp
stos
insb
in
sbb
notl
pusha
jb
popf
test
adc
inc
xchg
clc
pusha
push
js
hlt
imul
pop
and
cltd
mov
fbld
fs
xor
les
adc
dec
daa
inc
sub
loop
lret
and
sbb
sub
cld
movsl
push
in
shll
push
mov
jo
push
adc
mov
jle
pop
aaa
addl
ds
test
jp
push
rol
ja
add
sbb
mov
cmc
adc
xchg
movsl
xchg
pushl
imulb
daa
xchg
adc
adc
lea
dec
out
das
sub
xchg
mov
inc
mov
call
das
cmp
loop
iret
inc
ljmp
lret
and
add
inc
mov
dec
jno
pop
mov
and
sbb
aad
pop
out
pop
fstps
movsl
mov
push
jno
or
nop
adc
decl
std
cmpsb
pop
test
inc
jae
sbb
xchg
xlat
iret
mov
dec
scas
push
mov
into
inc
mov
clc
pop
xor
hlt
shrl
dec
scas
xor
adc
cmpsl
or
mov
dec
mov
lahf
jbe
js
les
dec
iret
push
mov
hlt
jnp
dec
or
and
mov
jge
pop
nop
sbb
je
jp
fsubrl
icebp
cmp
addr16
les
call
das
call
jmp
sar
div
mov
mov
imul
push
fcmove
jb
fiaddl
out
bound
dec
add
push
jp
mov
cmpsl
fwait
test
xor
mov
pop
and
jne
dec
jmp
push
daa
pop
daa
adcb
push
lods
movsb
sub
arpl
mov
push
repz
cs
rcrb
repz
adc
cmpsb
and
out
stc
push
xchg
in
pusha
inc
sbb
adc
pusha
pop
push
jecxz
outsl
jge
inc
std
xchg
cmp
jno
sbbl
xor
and
loop
and
jno
jmp
shlb
fstl
mov
mov
out
mov
adcb
push
adc
notb
push
mov
mov
xor
sbb
adc
add
cmp
pusha
jb
in
dec
mov
mov
xor
cmp
stos
add
sahf
into
dec
adc
inc
jbe
dec
inc
lock
fistpll
enter
mov
cmp
xor
mov
outsb
sub
mov
out
test
xor
fistl
adc
sbb
movsd
xor
rcrb
leave
lret
xchg
lret
popa
lret
out
jmp
test
adc
mov
insb
fnstenv
outsl
xchg
arpl
mov
jnp
jecxz
rcl
call
fldenv
cmpsb
pusha
lods
lea
push
mov
mov
test
into
xor
xor
dec
mov
mov
adc
xchg
xchg
test
das
fisubs
xor
pop
lea
mov
inc
lock
add
iret
push
mov
enter
mov
push
sub
sub
int
mov
mov
into
insb
and
imul
fidivs
mov
sbb
inc
push
sbb
pusha
jb
fwait
mov
popf
sti
je
push
ss
pop
add
lahf
sbb
dec
sti
push
pop
xor
jle
cmpsb
inc
scas
and
shl
pop
or
stos
dec
fistpl
and
dec
arpl
jb
lret
rcrb
mov
mov
stos
addl
outsl
orl
mov
pop
xchg
xchg
cmc
jne
shll
adc
cli
inc
rclb
pop
and
jge
ret
into
out
xorl
ja
imull
lock
jp
inc
inc
xchg
or
cltd
push
es
movsl
xor
mov
inc
fldl
push
ret
enter
xor
cs
sti
sbb
adc
dec
sahf
add
sbb
test
mov
xchg
mov
inc
dec
jns
xchg
fists
sub
or
imul
testl
push
mov
dec
pop
mov
lea
and
pop
fnstcw
cmp
jl
cmp
and
mov
adc
jbe
lret
mov
daa
or
adc
scas
cmp
sbbb
icebp
add
mov
nop
mov
cmpsl
fidivs
push
mov
adc
push
inc
shrb
push
xor
inc
stos
push
dec
shufps
jo
push
sbb
ljmp
push
xor
adc
sbb
push
inc
push
aaa
or
dec
daa
andl
rorb
jle
xchg
lret
scas
test
jae
imul
es
repnz
andl
ljmp
jl
and
ret
outsl
push
xor
out
xor
inc
repz
cld
cmpsl
mov
mov
std
popf
fiaddl
jns
mov
cmpsl
popf
stc
sbb
cmp
cli
push
mov
jne
arpl
in
add
add
test
subb
push
or
dec
gs
mov
mov
jo
add
rcll
ret
dec
dec
lret
repnz
dec
ljmp
leave
cs
stc
fiaddl
inc
or
pop
mov
cmp
cmp
mov
ljmp
adc
jle
xorb
mov
js,pt
xor
dec
xlat
int3
addr16
popf
lahf
mov
iret
iret
cmpsl
or
aad
scas
fsts
cmp
pop
repnz
cltd
aas
ror
pop
imul
mov
mov
push
xor
fyl2xp1
or
xor
popa
xchg
sub
aas
fstp
xchg
push
pusha
iret
mov
lcall
in
out
mov
mov
mov
pushf
es
push
adc
cmp
jbe
call
inc
ss
gs
lods
inc
adc
cmp
push
lea
in
push
scas
mov
pop
test
dec
inc
add
movsl
xchg
enter
movsb
mov
or
icebp
rolb
int
mov
sub
lahf
mov
mov
adc
outsl
xchg
dec
fisttps
adc
mov
aas
pusha
jnp
adc
jnp
or
inc
and
pop
js
sub
lret
lock
fstpt
sahf
jno
jmp
push
xor
les
cmp
adc
cmp
mov
movsb
dec
adc
test
adc
cltd
aam
and
sbb
inc
xchg
aam
scas
dec
inc
int3
inc
xchg
aad
jle
int3
lahf
xor
xchg
inc
mov
and
adcb
sub
dec
jbe
sbbl
icebp
cwtl
cmp
or
dec
xchg
inc
test
pop
imulb
adc
fimull
movsb
adc
loop
mov
insb
jb
xchg
js
mov
insb
cmp
fistpl
fisubs
iret
mov
lds
clc
pop
push
imul
dec
xlat
cld
sbb
out
test
mov
inc
repnz
add
xlat
ds
push
mov
iret
std
ficompl
pop
cmp
mov
cmpsb
and
jno
leave
in
push
mov
ret
and
add
push
orb
stos
ret
mov
or
xlat
mov
sbb
jp
jge
mov
cmp
imul
das
mov
add
and
pop
and
lret
jae
aad
inc
das
in
fcoml
sub
inc
sub
decb
adc
test
pusha
jne
adc
out
and
cmp
imul
stos
mov
pop
fdiv
iret
sahf
sarb
leave
inc
fsubl
jmp
mov
sbbb
imul
dec
lcall
andb
mov
sub
iret
cmp
imul
bound
pop
js
stos
sbb
sub
and
pop
iret
ljmp
hlt
js
pop
iret
or
xor
cmp
inc
pop
in
push
ss
jb
push
call
sub
xor
dec
les
xchg
insl
xlat
repz
pop
bound
or
jp
aaa
outsl
push
in
cmpl
cmp
inc
arpl
jle
mov
orl
pop
mov
dec
push
imulb
out
das
mov
jnp
mov
nop
dec
xor
sahf
xor
frstor
mov
movsl
out
test
mov
sub
sub
push
lahf
add
add
xchg
inc
cmp
mov
stos
push
jmp
jecxz
xchg
cmp
stos
mov
mov
imul
push
jb
int3
pop
data16
into
rorb
mov
inc
push
mov
mov
lods
mov
lret
lret
lods
cmp
inc
push
or
punpcklbw
and
leave
or
in
push
xor
popa
ja
nop
popa
sbb
fcomps
lcall
in
cwtl
xor
lret
and
jl
cltd
fsubrl
xchg
pop
or
inc
jne
push
xchg
orb
mov
push
testl
cmp
bound
pop
or
xchg
adc
dec
jo
and
fisttpl
jle
dec
sar
mov
jge
add
ljmp
xor
push
adc
aam
add
dec
int3
repnz
lcall
xor
iret
sahf
negl
mov
sbb
and
sub
jnp
lret
add
test
scas
push
aad
cmp
jp
out
std
jmp
xchg
lahf
out
jp
push
sahf
loopne
sbb
cs
das
push
push
and
sub
jl
ss
jne
mov
rorl
pop
repnz
cli
xchg
inc
mov
and
or
xchg
mov
jmp
push
and
xorb
stos
test
sbb
jbe
fisttpl
les
mov
pop
daa
sub
inc
mov
inc
add
sbb
and
call
push
xchg
repnz
xor
jnp
into
mov
mov
sub
sub
cmp
dec
mov
pop
out
sarl
mov
mov
xor
imul
mov
rcrl
add
aaa
fwait
add
cmpsl
mov
sbb
inc
mov
notl
lods
mov
or
cmp
outsb
inc
fwait
sbb
mov
or
leave
mov
mov
mov
icebp
jecxz
jmp
xchg
ja
mov
mov
ss
cmp
mov
push
fs
jle
mov
ljmp
insl
mov
rclb
mov
mov
cld
jl
mov
imulb
aaa
fsts
and
in
cmp
out
inc
shll
aad
xchg
pop
arpl
aaa
mov
pusha
jbe
sbb
movsb
adc
cmpsl
cltd
inc
pop
mov
sahf
lcall
testl
inc
test
push
push
adc
dec
fdivrp
mov
scas
lea
test
in
pop
mov
sbb
cld
pop
dec
popf
sti
pop
lods
shr
jo
lcall
outsl
test
mov
testl
xchg
in
mov
ss
push
mov
iret
nop
std
mov
les
mov
push
loope
adc
or
out
and
insl
mov
push
adc
fs
mov
dec
cmp
xchg
and
cmp
sbb
sub
lock
adc
push
ja
pop
popf
mov
cmp
nop
imul
int3
dec
push
add
and
add
adc
dec
daa
lods
push
mov
call
clc
ljmp
or
data16
movsl
jbe
test
pop
mov
sbb
repz
call
pop
jge
in
fadds
xor
nop
lock
hlt
dec
ucomiss
jae
fnstsw
ficoms
fnstsw
test
lahf
sti
test
aaa
cmpsb
push
push
push
out
es
jne
adc
add
jb
or
inc
and
dec
cld
mov
lea
push
dec
pop
cmc
sti
shlb
cmp
js
adc
pushf
xor
pusha
sub
mov
inc
push
or
sbb
lcall
mov
jl
mov
jns
rcrl
mov
rorb
inc
sahf
mov
pop
pusha
adc
push
cltd
bound
and
mov
mov
stos
dec
sti
cmpsb
out
out
idivl
dec
add
stos
push
xlat
out
sbb
sbb
jbe
dec
push
imull
lods
xor
scas
clc
in
jle
inc
ja
hlt
outsb
pop
faddl
fstpt
int3
es
add
js
loope
and
adcb
pop
popf
cmpsl
aas
jne
push
ss
cltd
xor
mov
mov
push
rcrl
pop
xchg
dec
adc
jae
add
mov
xor
nop
adc
scas
mov
and
in
lods
lcall
add
push
sbb
in
pop
push
mov
int
pop
cmpsl
xor
scas
testb
jbe
ss
xor
xor
js
jno
stos
stc
cmp
subl
cmpsb
in
and
mov
lea
fcompl
pushl
popa
push
insb
aad
movsb
xacquire
inc
aas
cmc
test
lret
cmp
icebp
stc
sub
mov
mov
xor
cli
xchg
in
xchg
adc
mov
mov
negl
insl
in
int3
add
shll
iret
sub
mov
or
jbe
add
sub
fs
and
idiv
out
sub
pusha
lea
cmp
adc
test
in
add
fwait
jl
aas
cmp
lret
mov
push
mov
inc
sbb
scas
dec
sbb
pop
sub
loope
stos
pusha
and
dec
push
xchg
in
cmpsl
bsf
and
test
dec
push
push
adc
and
xor
pop
sti
xchg
cmp
cmp
das
xor
insl
and
lret
in
fs
fucomip
pop
leave
out
cmc
scas
mov
cwtl
cmp
scas
push
rorl
mov
hlt
jns
shrl
xchg
mov
decb
dec
and
fisubrs
cmp
xchg
js
sbb
cs
dec
xchg
insb
bnd
test
in
mov
mov
xchg
fnstcw
pop
mov
dec
repz
lahf
adc
xchg
test
dec
je
stos
ss
cmp
push
add
sahf
jp
aas
ljmp
clc
lods
imul
xchg
xchg
jo
adc
jbe
mov
pop
stos
and
sbb
mov
jns
mov
xor
nop
loopne
xchg
rcl
cmp
mov
je
loope
jnp
bound
add
jecxz
enter
popa
adc
dec
jae
dec
hlt
push
jno
inc
mov
scas
inc
mov
jbe
lds
iret
mov
popa
pop
cmp
inc
cmp
flds
pop
jle
cmp
push
jmp
xchg
iret
lods
lret
or
xchg
lcall
fwait
adc
aas
xor
inc
test
clc
cmp
test
mov
cld
mov
dec
das
call
sub
xchg
shrb
dec
sbb
popf
jp
adc
movsb
sbb
add
ror
mov
xchg
divb
pop
in
int
cmp
inc
dec
adc
push
rcll
pusha
or
mov
out
mov
xor
or
cwtl
scas
add
xor
sub
xchg
jg
fists
aad
mov
fwait
and
popf
push
dec
sub
sahf
adc
inc
ja
mov
ljmp
pop
mov
pop
inc
push
ss
std
mov
adc
test
mov
jbe
push
movsb
sbbb
movsl
divps
sbb
add
rcrb
lods
lods
xchg
fwait
adc
psubsb
jl
push
je
and
repz
push
jo
dec
sub
sbb
jnp
popf
pop
adc
or
aaa
ret
jp
mov
mov
jge
mov
insb
std
cli
adc
int3
adc
dec
std
or
outsb
lcall
iret
bound
scas
inc
jle
mov
sub
movsb
mov
mov
repz
outsb
jl
pushf
dec
jg
jnp
dec
call
add
pop
in
loop
mov
mov
mov
mov
push
out
push
sbb
iret
cmpsb
loop
xor
sub
push
lods
push
sub
test
test
push
pop
imul
dec
insl
sbbb
dec
sub
dec
adc
insb
add
cmc
mov
call
or
movl
add
jae
push
lret
mov
adc
sbb
mov
int3
inc
ljmp
ljmp
sub
call
andl
sub
cmp
push
sbb
mov
xor
sbb
jge
bound
es
out
std
mov
pop
mov
pop
push
or
sub
test
mov
or
leave
mov
mov
pushf
mov
adc
or
das
dec
jle
cmpsb
popf
xchg
or
sbb
es
pop
pop
cltd
xor
mov
pop
or
test
test
xchg
push
iret
addr16
sub
dec
dec
sbb
pop
adc
int3
and
mov
pop
xor
stos
pop
xchg
sub
dec
sub
mov
cmp
cmp
cmp
adc
add
jl
iret
xor
subb
gs
outsl
adc
popf
xchg
fsubrl
ds
dec
daa
sub
rolb
inc
mov
lcall
xor
sti
add
jmp
into
stc
lahf
dec
fisttps
mov
mov
or
xor
xchg
jmp
sbb
push
adc
repz
idivl
and
inc
pop
loope
xchg
dec
mov
fsts
aad
aaa
xchg
push
test
bound
aas
push
call
gs
repnz
sbb
inc
idivb
adc
js
mov
leave
add
idivb
orl
lea
mov
or
into
das
and
xchg
cli
into
dec
mov
push
cli
xchg
iret
cmp
push
inc
inc
sub
movsl
push
es
mov
sti
pop
stos
xchg
mov
jne
dec
xor
mov
adc
shrb
and
mov
cli
stc
pusha
pushw
cmp
sar
xor
adc
loopne
lds
xchg
fcoml
adc
inc
add
adc
lock
push
pushf
cmc
adc
or
pusha
repz
hlt
int
daa
push
mov
jnp
pushf
loopne
ljmp
enter
mov
shr
sti
dec
inc
or
mov
int3
mov
push
lea
xchg
outsb
pop
add
cmp
pop
aas
shl
add
ret
xchg
mov
int
addr16
aam
iret
rolb
xor
stos
sbb
push
xor
mov
add
add
xchg
test
cmp
push
and
pop
lahf
int3
aad
jle,pn
push
xchg
stc
insb
insb
movsl
in
rcrl
adc
xchg
scas
push
xchg
loopne
inc
insl
xchg
out
loop
daa
daa
fst
rol
inc
add
pop
int
orl
icebp
dec
cwtl
out
xor
test
cmp
mov
adc
mov
xchg
movsl
sbb
push
cmp
adcl
mov
ss
sub
into
clc
push
lea
inc
dec
shlb
pop
into
or
pop
inc
je
dec
mov
pop
pop
push
add
addl
leave
adc
mov
in
jl
and
jmp
mov
xchg
test
incb
out
dec
jae
add
jo
js
out
dec
inc
call
mov
xor
jl
jno
leavew
mov
aaa
fwait
lcall
cmp
xchg
mov
dec
cmp
pminub
push
adc
mov
outsb
cmp
outsb
pop
sbb
rcrl
cmp
or
subl
dec
ret
push
mov
stc
pop
inc
push
jo
fs
into
sahf
lock
xchg
movsb
sub
mov
jns
pop
hlt
sub
mov
enter
push
pop
inc
enter
cmp
mov
or
push
dec
repnz
jle
push
push
jg
mov
sbb
pop
inc
dec
push
sbb
ljmp
cmp
jno
jo
mov
divl
sub
xchg
movsl
mov
cmpsl
js
insl
xor
xor
insl
dec
sub
fiadds
dec
and
xor
mov
mov
popf
mov
push
push
push
sahf
jno
enter
jb
rcrb
inc
mov
inc
dec
pop
scas
jo
pop
push
mov
push
mov
enter
mov
subb
out
dec
dec
mov
add
mov
mov
mov
shll
jmp
inc
lock
mov
cmp
and
sub
addr16
mov
xchg
inc
lret
inc
push
push
mov
pop
cltd
lds
gs
fldcw
add
xor
mov
inc
cld
outsb
jnp
lret
dec
rol
push
xor
int3
icebp
sarl
movsl
ds
mov
dec
das
inc
sub
rcll
inc
add
sbb
push
cli
imul
iret
add
and
pop
add
fdivl
xor
fstl
insl
jb
das
inc
popf
xchg
adc
mov
push
xor
test
into
loope
test
movsl
daa
mov
dec
jecxz
dec
push
fcmovnbe
pop
lcall
inc
pop
dec
adc
pop
rcr
test
and
push
gs
rcrl
ds
popf
aam
xor
jbe
mov
mov
test
jg
fwait
loopne
cmpsb
scas
sbb
enter
addr16
mov
mov
inc
xchg
fidivrl
dec
mov
mov
cmp
inc
mov
mov
ss
push
cmpsb
pop
out
nop
cld
lds
popa
pushf
jecxz
aam
scas
pusha
imul
lret
mov
shlb
push
cmp
dec
adc
pop
xchg
icebp
and
sub
dec
xchg
jl
pop
jmp
adc
das
jbe
loop
xor
pop
cltd
cmp
test
stc
sti
shrl
dec
cmp
pop
xchg
or
aad
stos
pop
or
jae
bound
int
xchg
enter
mov
sub
cmp
adc
pop
mov
scas
or
xlat
inc
sarb
xor
ja
xchg
xor
sahf
nop
loopne
mov
lea
lret
and
xor
int3
popf
mov
jnp
dec
jle
icebp
mov
in
sahf
inc
js
enter
repnz
es
divb
lods
pop
or
sahf
and
movsl
adcl
mov
jecxz
and
pop
jnp
xor
mov
fsubs
dec
in
cs
push
aaa
sub
mov
repnz
or
es
fcomps
stos
aaa
arpl
lods
sbb
ret
fstp
sbb
adc
push
add
lock
insl
dec
pop
into
xchg
push
mov
inc
jbe
xorl
dec
gs
outsl
inc
mov
negb
idiv
fistl
int3
ja
xchg
push
clc
imul
adc
outsl
ret
test
out
or
insb
mov
jne
jo
faddp
pop
sub
push
inc
pop
xor
xor
jecxz
xchg
sub
pop
shlb
outsl
arpl
mov
call
test
xor
xor
jp
add
add
data16
sub
and
xchg
neg
pop
sbb
or
adc
stc
cmp
dec
xor
int
xor
xlat
scas
inc
testb
inc
jne
insl
xor
or
adc
stc
cli
sub
in
aad
and
and
xor
xor
sub
inc
lods
mov
mov
lods
ja
sbb
jp
pushf
cld
out
clc
popa
outsl
stos
push
daa
nop
dec
jo
inc
aad
je
sub
jae
imul
movsb
fsubrs
push
cs
ret
or
loopne
mov
or
and
in
rcr
push
push
mov
loope
cmp
mov
mov
popf
mov
mov
add
stc
icebp
mov
lret
pcmpgtb
sahf
imul
int3
jmp
addr16
jno
daa
test
movsb
push
and
inc
xorb
out
xchg
movsb
dec
push
and
das
out
fistpll
jnp
stos
out
pusha
mov
jb
cmpsl
mov
js
mov
push
jg
or
aas
pop
dec
pop
adc
sbb
call
lea
inc
repnz
mov
fcompl
sbb
cmp
mov
subl
out
push
xchg
lea
jg
rcll
inc
or
aaa
jle
cmp
cmc
mov
dec
sbb
fidivs
mov
hlt
sbb
dec
test
xchg
ret
pop
mov
sbb
stc
xchg
adc
lret
sub
hlt
in
mov
push
jg
or
in
inc
icebp
fucomp
add
pop
ds
jecxz
lret
lods
ret
test
jb
sub
lret
daa
jecxz
cmpsb
sub
push
mov
popa
mov
pop
jmp
cwtl
pop
hlt
icebp
jl
jmp
push
mov
jnp
pop
divl
out
jne
js
push
xchg
push
or
pop
sbb
ja
cmpsl
stos
mov
testb
dec
mov
fistpll
mov
cmp
out
flds
mov
lea
out
int3
add
sarb
dec
mov
in
out
add
clc
jle
cwtl
mov
js
scas
frstor
jae
jmp
fstp
or
lahf
je
mov
pop
inc
xor
mov
pop
addr16
movsl
sbb
jno
jl
xchg
push
fildl
xchg
mov
daa
mov
arpl
dec
shlb
out
add
xchg
xchg
xor
xchg
mov
dec
push
int3
outsb
lret
movsb
ja
bound
je
push
scas
ficomps
xor
clc
outsl
jnp
test
lss
shll
push
push
pop
mov
pop
mov
push
dec
dec
dec
loop
push
testb
mov
add
adc
cmp
popa
std
cld
out
adc
lcall
xchg
leave
push
lds
scas
cmp
jle
fwait
fwait
add
mov
mov
dec
add
sbb
std
dec
xchg
out
add
es
test
dec
jns
mov
sbb
cmpb
popa
mov
adc
imul
lcall
jae
ja
push
push
push
dec
repz
movsl
in
xchg
fistpll
cmc
xchg
push
adc
inc
repnz
sbb
add
aam
insb
into
ja
or
popf
andl
sbb
aam
jno
ret
dec
cmp
mov
xchg
cltd
incb
jecxz
cmp
adc
icebp
out
mov
sub
jp
imul
out
sbb
sbbb
pushf
dec
cld
jle
adc
aam
mov
popa
in
mov
mov
rcl
sbb
mov
sti
jmp
jae
or
imul
int3
push
rorl
cli
push
jmp
dec
mov
pushf
in
mov
scas
pop
enter
lret
jmp
push
mov
dec
sbb
mov
xor
cld
xchg
jb
jp
ret
mov
xchg
pop
inc
sbb
push
ss
es
sub
or
pop
or
push
cltd
mov
sbb
es
pop
bound
inc
push
sub
jecxz
es
pusha
pop
cmc
adc
dec
adc
cltd
test
insb
jecxz
out
xorl
and
pushf
mov
mov
negl
sbb
filds
addb
dec
push
jns
inc
ret
fwait
adc
sarb
push
xor
scas
pop
faddl
push
lock
jp
mov
aas
outsb
push
xchg
inc
add
add
fs
mov
arpl
shlb
adc
in
or
notl
incl
mov
imul
push
sbb
jp
inc
jne
mov
sbb
outsl
push
push
mov
int
lahf
push
out
jl
add
lret
insl
pop
xor
mov
lcall
mov
pop
cmp
repz
fadd
push
push
repnz
sbb
imul
and
mov
mov
and
pop
add
push
cmpsl
pushf
loop
sar
stc
xor
push
cmc
dec
cmp
dec
jnp
sbb
sub
push
into
vcvtss2sd
cmp
xor
ljmp
lea
ret
imul
or
sbb
jnp
repnz
and
ljmp
adc
in
add
nop
cmc
jmp
pusha
ja
andb
loope
frstor
std
je
sub
xor
xchg
mov
add
lds
cltd
mov
cmpb
mov
pop
push
hlt
sbb
js
aas
xor
subl
xor
mov
cmp
jns
add
pop
pop
mov
cmp
out
push
add
mov
ret
das
movsb
mov
out
call
cmpsl
scas
adc
push
repnz
scas
into
xchg
test
mov
fdivrl
repnz
lcall
cmp
loop
pop
pusha
mov
push
sub
mull
pop
shll
ficoml
and
adc
mov
cld
sub
cltd
fcmovnu
addr16
in
lods
lret
inc
pusha
out
cli
pop
outsb
sti
cmp
nop
movb
aas
pop
mov
add
daa
je
stc
push
in
or
and
sub
imul
pop
js
dec
repz
cmpsl
add
push
jge
pop
xchg
lret
mov
aam
xchg
movsl
loopne
pop
out
imul
mov
xchg
or
jns
ret
popf
or
in
inc
xchg
fs
mov
loopne
popa
xchg
add
test
test
mov
inc
mov
adc
in
outsl
jns
lea
sub
add
xorb
adc
mov
sub
out
jmp
arpl
jge
sbb
xchg
xchg
mov
out
aad
in
push
mov
mov
into
leave
iret
and
mov
mov
adc
sub
push
ja
sub
and
lock
jno
inc
mov
adc
xor
mov
call
mov
cmp
jne
je
or
add
mov
testl
pop
divb
pop
push
fldenv
cmpsl
add
dec
push
add
push
mov
sahf
sub
sbb
jnp
pushf
aam
push
imul
fisttps
cli
xorb
push
and
insb
mov
cld
loopne
mull
sub
and
sub
mov
and
test
js
mov
sahf
and
aad
fs
ret
fsubrl
popf
inc
mov
adc
insb
cmp
mov
sub
insb
notl
cs
add
popa
js
notb
or
mov
int3
fs
lock
fdivrs
leave
cmp
out
mov
popf
nop
test
aas
ja
roll
add
shll
sbb
ret
pop
out
push
jnp
adc
mov
pop
inc
xor
cwtl
dec
leave
mov
aas
lock
jne
push
addb
fwait
std
jae
push
mov
out
dec
iret
jge
stos
fmulp
insb
leave
movsl
fsubs
or
cli
je
iret
test
cmpsl
out
add
inc
insl
in
add
mov
jmp
lret
mov
adc
mov
pop
sbb
sub
sbb
xchg
outsb
push
or
mov
inc
dec
xchg
ljmp
sub
movsl
mov
adc
mov
lods
adc
out
imul
dec
add
mov
adc
push
push
nop
xchg
pop
scas
push
pop
inc
inc
sbb
imul
xorl
push
mov
movsb
inc
ret
divl
outsb
adc
into
jnp
jmp
sub
sub
jl
fsubrp
jg
mov
clc
jne
dec
sbb
inc
sub
mov
daa
mov
nop
xor
xchg
add
add
nop
push
sarl
rclb
push
cmp
adc
or
mov
and
and
adc
mov
and
loopne
xor
ss
popf
dec
in
arpl
scas
mov
shrl
imulb
sub
xor
inc
orl
mov
xor
stos
call
sub
jbe
adc
loop
enter
push
push
insl
test
push
arpl
cmc
xchg
mov
push
and
or
fdivrp
jno
mov
lds
cmp
stc
lcall
xchg
shlb
in
ss
xor
repz
xchg
and
in
arpl
and
fwait
arpl
add
lret
or
inc
cltd
ret
subl
pushf
int3
xor
jnp
push
rcl
loopne
mov
ss
fsubl
test
sbb
mov
or
leave
mov
sbb
or
sarl
std
repz
sbb
imul
daa
mov
in
xor
inc
gs
jle
lods
mov
add
je
cmp
mov
imul
mov
mov
fistpll
push
int3
mov
pop
cmp
addr16
ds
inc
je
push
dec
cmpb
scas
inc
aad
xchg
push
stc
loopne
pop
imul
sbb
daa
push
xchg
push
enter
in
aaa
pop
mov
shr
les
jle
cmp
call
push
insl
mov
aad
cs
lods
pop
lods
mov
fistl
and
adc
sbb
push
dec
xlat
and
xchg
pushf
inc
sbb
mov
stos
ficompl
cwtl
orb
cmp
lea
cmp
lahf
stos
adc
jle
inc
addr16
ljmp
arpl
es
jnp
add
mov
push
xchg
xlat
dec
lcall
dec
dec
das
mov
dec
out
push
clc
dec
xor
mov
sarb
xchg
dec
jae
jp
test
or
daa
ds
push
mov
sbb
in
mov
jb
outsb
popf
jo
cmp
ds
push
xchg
push
mov
movsb
xor
testl
icebp
add
inc
jmp
mov
push
dec
mov
dec
xlat
repnz
inc
mov
divb
lret
std
inc
mov
inc
and
adc
setg
lds
rolb
movsl
jb
inc
fldt
mov
inc
xchg
pop
sub
jp
pushl
ret
or
lret
xor
cmp
or
aam
adc
loope
cld
or
or
xchg
cs
lods
aaa
ficoml
imul
mov
dec
outsl
out
idivb
adc
mov
lods
push
movsb
push
int3
sbb
push
pop
mov
dec
stos
and
gs
sub
adc
es
stos
subl
xor
inc
sbb
adc
clc
jmp
push
fsubr
mov
idivl
lahf
inc
sub
pop
iret
adc
adc
adc
xchg
loopne
rcrb
daa
mov
push
shlb
xor
pop
sti
and
ficomps
leave
cmp
mov
andb
out
xor
inc
push
pop
pop
mov
dec
sub
shll
inc
imul
add
add
and
and
jb
sbb
cs
test
test
and
in
sbb
jmp
in
push
clc
pusha
push
pop
lcall
int
rcll
jle
idivb
pop
in
mov
bound
cmpl
pop
adc
jmp
adc
or
lret
arpl
ss
jo
lds
ss
test
cmp
mov
bound
test
add
arpl
pop
icebp
icebp
and
pop
daa
pop
stos
dec
pop
pusha
out
xor
jmp
scas
shlb
push
and
cmp
pop
inc
hlt
mov
sbb
daa
sub
fisubrs
cli
pop
add
cmp
add
shlb
repnz
or
push
cmp
dec
dec
and
scas
and
stc
pop
push
fisubrl
and
jle
fimull
fwait
xor
leave
repnz
aas
mov
or
mov
or
xchg
mov
pop
cmpsl
xor
adc
std
pop
mov
inc
je
adc
cmp
push
scas
mov
aam
dec
cmpsb
push
mov
mov
mov
les
jo
gs
jmp
stos
cmovle
sub
sub
sarb
dec
dec
pop
jge
sub
notl
push
and
ficompl
mov
fistpl
lods
fbstp
and
add
add
out
push
dec
and
push
daa
fisubrl
fisubl
inc
mov
cmpsb
lock
addr16
push
or
lret
out
scas
out
jmp
loop
ds
popf
idivl
out
sub
test
std
or
stos
xchg
xchg
adcl
out
je
cltd
cmp
add
imul
mov
xor
jae
mov
movsb
stos
push
in
nop
and
jo
mov
mov
sub
pop
dec
mov
lret
and
icebp
adc
xchg
aas
and
mov
push
inc
or
jnp
shrb
jnp
cmp
add
insw
or
and
dec
lods
xor
leave
test
std
pushf
repnz
loop
es
inc
aas
lahf
xor
enter
wbinvd
inc
push
shl
ja
rcr
sahf
loop
inc
shl
or
in
sbb
stos
mov
orb
das
mov
pop
pop
test
outsl
mov
sub
das
in
mov
fwait
xor
mov
add
jo
shrb
lds
pusha
jecxz
data16
cmovae
jg
push
cs
je
fmull
and
pop
sahf
data16
jns
fidivrl
cmp
xor
cmp
fnstcw
rcrb
push
sti
push
mov
and
mov
jnp
aas
icebp
loopne
dec
jecxz
dec
shlb
in
outsl
mov
leave
push
cmpsl
inc
out
popf
add
mov
lahf
and
rorb
jg
pop
lods
decb
xchg
pop
cmc
outsl
icebp
and
ret
out
js
cmp
repnz
xchg
out
cmp
ficomps
xor
dec
xor
pop
add
aad
cmp
or
iret
fwait
and
mov
sbb
outsb
movsl
mov
mov
mov
stos
dec
cmp
das
sti
cli
mov
vmovsd
test
jl
pop
pop
ret
ds
add
bound
mulb
rol
jno
lahf
pop
negb
andl
rcrb
lret
cmpsl
stc
xchg
repnz
or
mov
pushf
xchg
loope
lret
mov
pushf
mov
loope
and
push
mov
lods
in
bound
push
mov
incb
stos
cld
or
fucomi
jno
lahf
jae
cmpsb
mov
mov
aad
movsl
cwtl
fldenv
lcall
sbb
inc
add
adc
in
lds
arpl
jo
mov
sub
pop
and
fsts
scas
push
fdivrs
xor
or
push
xor
addb
jnp
xchg
loope
fwait
lcall
je
aam
aas
pop
sub
in
or
into
push
jg
imul
pushf
hlt
aad
shrb
mov
pop
inc
add
es
jae
dec
and
ret
push
jmp
sub
cmpsb
mov
push
mov
loopne
or
pop
das
mov
dec
adc
mov
rcrb
cld
mov
ja
pop
in
sbb
pop
sub
in
loop
scas
push
shl
push
cmp
addb
addr16
adc
mov
jo
sub
pop
jle
cmp
subl
scas
scas
mov
jge
es
inc
into
ret
data16
gs
inc
mov
fdivrs
mov
jns
iret
repnz
add
loop
dec
mov
mov
lods
fidivrs
mov
lahf
jg
push
nop
dec
ja
scas
add
mov
adc
ljmp
xor
dec
data16
xchg
cmpl
sbb
jmp
add
fs
xor
cli
in
jno
imul
sbb
mov
mov
push
std
push
sbb
and
sbb
push
loope
fdivs
icebp
inc
fdivs
mov
gs
adc
in
rcrb
adc
repnz
jmp
pop
into
add
mov
cmp
out
jnp
adc
xlat
jno
mov
cmp
stos
lock
stos
xlat
mov
dec
mov
inc
lods
dec
pushf
in
call
xchg
pop
inc
aad
xchg
dec
test
push
popf
mov
roll
push
mov
add
aaa
mov
call
cmp
mov
int3
lret
std
sub
mov
xlat
rcll
cmpsb
and
push
ficoms
lods
push
jne
insl
andb
cmp
mov
in
lcall
dec
dec
cmpsb
or
mov
movsb
dec
ljmp
sbb
gs
and
iret
pop
data16
sub
repz
sub
out
dec
dec
popa
insb
lods
decl
ret
int
popa
sbb
ret
fmull
addl
pop
sbb
cmp
lock
jne
lods
das
in
push
lods
ss
dec
lods
inc
or
cli
or
mov
sahf
push
popf
lods
sub
sub
shlb
mov
in
mov
jge
pop
xchg
mov
pop
cmpsb
fs
adc
dec
mov
aam
cmp
lea
adc
jecxz
pop
adc
in
je
adc
adc
jg
mov
cld
lret
pop
ret
movsb
enter
gs
push
or
testb
jo
add
mov
pushf
cmp
outsb
cmpsb
or
out
mov
fs
sbb
sbb
jg
loopne
mov
push
inc
pusha
inc
pop
out
mov
in
sbb
dec
or
lret
int
fisubrs
xor
mov
fsub
jge
outsl
sub
gs
adc
jl
xchg
dec
mov
leave
sti
push
push
lea
mov
outsb
pop
cmp
sub
ljmp
out
sarl
dec
mov
mov
or
or
clc
outsb
sub
scas
cli
out
mov
jo
mov
jnp
stc
mulb
xchg
cli
inc
shrl
adc
xchg
and
lock
sub
push
mov
push
push
jnp
inc
imul
inc
adc
pop
cmc
mov
jno
mov
movsb
pop
std
xor
pop
idivl
ret
ljmp
dec
push
test
std
jmp
bound
pop
out
outsb
jbe
jle
cmp
popf
adc
imul
inc
lods
gs
iret
mov
fwait
dec
sti
xor
pop
faddl
mov
in
mov
jmp
sub
clc
mov
sub
js
imul
jnp
test
xchg
mov
test
int3
push
adc
add
setle
fiaddl
cmp
xor
xchg
and
bound
adc
lcall
insb
inc
loopne
sub
js
loopne
testl
dec
in
cmp
sbb
roll
jmp
aaa
in
pop
dec
popa
or
lret
jno
cs
sub
dec
loop
je
cwtl
mov
pop
or
out
out
jp
es
dec
pop
lods
mov
cmp
popf
cmc
jo
lods
dec
xchg
sbb
insl
cmp
les
mov
imul
sub
cltd
pop
or
jg
sbb
lret
gs
xchg
mov
aas
fcmovu
cmpsb
push
icebp
stos
fsts
repz
or
sar
mov
pop
je
cmp
mov
lods
xchg
insb
repnz
mov
rorb
sti
cmp
mov
add
ficoms
stos
xchg
fistpll
mov
repz
push
aaa
push
dec
adc
inc
loope
shl
insb
xchg
mov
add
out
ljmp
dec
outsl
stos
fistpl
dec
out
or
lods
testb
in
pop
xor
pop
mov
pop
idivb
rcl
adc
jl
and
in
sahf
pmuludq
cmp
pusha
mov
push
outsb
jnp
nop
pop
outsl
mov
push
xlat
cmpsl
jp
pop
pop
repnz
push
aad
loop
sub
scas
and
imul
or
stc
cmp
push
pop
cmp
loopne,pn
cmp
cmp
sub
or
push
cmpsl
dec
pop
ljmp
adc
nop
aam
xor
mov
jnp
and
test
data16
inc
jecxz
and
mov
ret
sbb
in
lds
xchg
sub
cld
sub
lahf
stos
call
cmpsl
push
mov
sub
dec
jecxz
push
xor
cwtl
out
setne
lods
sub
icebp
adc
subl
std
add
fwait
lods
cltd
mov
xchg
adc
pop
pushf
loopne
xorw
cmp
or
sub
and
sbb
mov
adcl
pusha
pop
call
jge
mov
fisttpll
sbb
loop
dec
xchg
cli
incl
adc
jge
push
push
mov
rcll
push
dec
pop
imul
push
sub
daa
sahf
xor
arpl
rcrl
push
stos
cmpsl
mov
fists
mov
bound
into
les
notl
sbb
jb
fwait
mov
pop
push
addr16
les
lock
mov
push
sub
mov
into
xchg
push
rcrb
sub
sub
xor
jp
or
in
cs
push
add
mov
ja
out
hlt
mov
mov
sbb
xor
mov
test
push
ret
lret
into
add
jno
lods
test
ja
daa
inc
pushf
scas
jge
mov
mov
cltd
xor
leave
dec
xor
in
push
sbb
addr16
lret
mov
test
add
daa
and
xchg
xchg
cmpsb
addr16
gs
add
mov
add
lret
add
shr
xchg
mov
jmp
imulb
in
adc
or
push
inc
jg
incl
or
mov
inc
imul
int3
mov
pop
mov
cmpsl
sti
cmp
in
sbbl
icebp
loop
add
push
nop
call
jmp
mov
sbb
sub
lret
ret
test
mov
fcmovnu
mov
enter
push
jns
mov
pop
mov
sub
repz
loope
not
dec
inc
imul
xchg
mov
dec
push
fstpt
and
cli
or
fs
mov
cld
stos
pop
mov
cmc
inc
int3
push
or
and
inc
xor
pop
mov
xor
into
in
sbb
pop
xchg
pop
ret
dec
outsb
cmp
sub
dec
jg
repnz
push
dec
in
fwait
pop
mov
jno
jle
das
lock
push
mov
out
call
jg
jbe
cmp
mov
adc
xchg
mov
or
test
xor
jns
mov
imul
cmpsl
rolb
loopne
sub
xor
cmp
jl
mov
sub
repz
and
and
lahf
daa
loop
adc
mov
popf
sti
mov
loop
shrl
mov
sbb
arpl
ljmp
push
std
adc
cmc
fidivs
xor
aas
cmp
push
shlb
movups
and
xchg
pop
or
xchg
negb
cltd
fwait
mov
call
daa
test
clc
out
jecxz
dec
cld
adc
outsb
xor
adc
push
orl
loop
jecxz
xlat
mov
nop
shlb
mov
add
dec
lahf
cmp
cmp
push
adc
push
pcmpgtb
add
inc
mov
aad
inc
sub
rep
xchg
cmc
and
repz
popl
jle
cmp
cli
aad
push
jp
sbbl
mov
inc
sub
or
ret
mov
push
test
pop
mov
loop
push
ljmp
pop
mov
stos
mov
std
ror
lods
pop
sbb
push
sub
pushf
mov
xchg
clc
xorb
cmp
mov
lods
sub
xlat
cltd
add
daa
dec
cmpl
popa
adc
sahf
push
fidivrs
filds
and
mov
and
sub
divb
xor
xor
add
insl
push
cmp
cmp
cmp
sbb
cmp
daa
mov
lret
xlat
inc
mov
cmp
imul
mov
les
mov
test
daa
or
lods
xchg
loop
sbb
push
mov
xchg
sbb
jno
jp
popf
lahf
sbbb
in
pusha
inc
pop
mov
add
andb
cmp
or
jg
loopne
mov
cmp
test
insl
int3
xchg
jae
addr16
xchg
in
test
pusha
and
and
shll
bound
and
or
push
jmp
jbe
dec
lea
mov
mov
cmp
jecxz
xorl
mov
push
in
mov
jle
adc
xor
adc
push
fdivr
dec
stos
test
sub
push
subb
data16
stc
or
fs
push
scas
outsl
xor
out
or
iret
sbb
cmpsl
jo,pt
mov
nop
xor
push
mov
test
movsb
xchg
add
fwait
mov
fcomi
mov
xchg
sub
jno
je
and
das
add
es
and
popa
aaa
test
xorb
into
lock
pop
inc
mov
mov
ss
bound
jae
fsubp
addb
and
cld
mov
insl
stc
push
xorl
adc
insl
movsl
push
lcall
lahf
in
inc
push
xor
lock
cmp
mov
fildll
mov
in
or
jp
mov
mov
jae
push
inc
stos
jmp
dec
xor
fcoms
sub
push
mov
or
insl
cmp
arpl
addr16
jp
cli
cld
pop
jae
jl
jecxz
test
loopne
fsubrs
lret
and
inc
into
sbb
push
sub
fsub
dec
xchg
cli
fnstcw
fnstenv
xlat
add
pop
add
in
lret
leave
ds
push
mov
mov
ret
mov
sbb
mov
cmpsb
cwtl
add
ds
adcb
mov
shlb
scas
decb
sub
xchg
pop
jns
push
sub
lea
cmc
cmp
cmpsb
jno
andl
out
je
sub
jle
push
push
cli
mov
mov
pop
xchg
ds
and
jns
pop
ss
test
popa
mov
das
dec
xor
adc
or
cmp
loop
pop
aad
clc
mov
call
popa
push
mov
rorb
shrl
or
notb
outsb
int
sahf
aaa
cmp
scas
cli
hlt
out
outsb
adc
or
insl
mov
testl
iret
or
push
push
add
inc
push
mov
sub
and
jno
std
cmpsl
shll
loopne
add
jae
dec
sub
jo
pushf
and
shrb
pushf
mov
rolb
cld
dec
sub
pop
lret
xchg
mov
adc
mov
sub
sarb
and
adc
stos
fimuls
rcrl
in
mov
roll
cli
data16
imul
sub
xchg
lfs
xor
lds
lea
bound
jle
rol
fsubrs
in
or
in
divb
sbb
inc
xchg
icebp
jb
mov
pushf
js
and
jae
or
jnp
sahf
or
cli
push
aam
sbb
loopne
xor
sbb
sub
xchg
mov
int
fistl
push
cmpsl
adc
dec
mov
jecxz
pop
aaa
arpl
cs
mov
and
mov
xor
addl
and
jge
sahf
jg
ss
repz
inc
icebp
cld
insl
stc
test
add
add
push
fcmovnbe
dec
rclb
xor
xor
cmp
mov
adc
mov
adc
pop
and
mov
xlat
int3
repz
adc
cmpsl
cmp
adc
movsl
pushf
inc
xchg
or
in
xorl
xor
mov
mov
pop
outsb
iret
ss
movzwl
add
xchg
mov
jae
lock
lret
lods
push
scas
dec
push
push
pop
sub
or
rorb
dec
xor
es
test
sahf
out
inc
xchg
out
ficoms
mov
cmc
or
orb
outsb
insb
xlat
cmp
sub
jbe
push
arpl
jo
pop
jbe
and
mov
fsubl
lret
jnp
jmp
in
mov
js
das
out
pop
pop
inc
mov
mov
mov
inc
fmull
cmpsb
out
fnstsw
or
adc
inc
xlat
push
rorb
pop
mov
add
sbb
adc
addr16
popf
fs
mov
add
or
inc
divl
sahf
inc
int3
dec
inc
movl
push
lods
or
testl
inc
jp
dec
mulb
stos
icebp
out
sub
sub
out
xchg
addl
cmp
cmp
push
cmc
jl,pn
and
insl
lea
mov
daa
ds
lret
mov
cmp
and
aad
cmp
adc
jne
imulb
inc
cld
loope
aam
ss
mov
or
jnp
ret
ja
test
cmpsl
jecxz
in
push
fnsave
jmp
adc
sub
dec
inc
das
aas
addr16
scas
shr
rcrl
mov
test
pushf
jne
sbb
aaa
std
xchg
cmpsb
xor
jecxz
jmp
aam
scas
mov
pusha
adc
adc
push
sahf
testl
in
or
and
ss
adc
repnz
xchg
lds
lock
testl
adc
mov
shll
push
int
and
popa
es
stos
or
fdivrs
sahf
pop
adc
fnstcw
lea
fistpll
or
cmp
pop
dec
insl
in
js
lret
rcrb
cmp
out
pop
les
dec
negl
cltd
cmc
dec
mov
push
or
stos
pop
ljmp
fwait
js
ret
repz
jb
sbb
ss
pop
popf
add
gs
mov
add
ret
imul
fwait
jle
mov
mov
xor
repnz
popf
mov
dec
into
add
cltd
cltd
push
sub
in
ljmp
dec
mov
ss
sti
xchg
add
add
scas
cmp
push
inc
inc
popa
jno
push
add
ret
ret
fwait
les
mov
cmp
leave
cmp
aas
or
dec
add
pop
mov
out
mov
mov
mov
popa
rcr
imul
addr16
popf
cli
aad
fdivr
ja
and
cld
pop
dec
out
cli
sbb
mov
inc
in
mov
and
jle
nop
add
jge
lsl
test
je
mov
push
es
fnstcw
loope
xchg
out
pop
add
mov
pop
test
mov
aas
mov
cmp
std
mov
std
dec
jle
cmc
cltd
and
adc
je
push
sti
cmpsl
mov
push
int
lcall
push
jmp
repnz
dec
outsl
imul
imul
pop
imul
into
pop
add
insl
and
push
pop
es
fistpll
lret
xor
add
push
or
outsl
pop
pop
dec
sbb
lcall
movsb
cmpsb
jns
aas
sub
pop
dec
push
sub
jmp
adc
shl
icebp
ret
shl
lods
cs
push
testl
dec
mov
add
jbe
cmpsl
jae
and
stc
push
and
cs
popf
data16
pop
pop
pushw
fsubl
push
pop
dec
inc
repz
loope
sbb
aam
aaa
mov
aaa
and
insb
or
dec
jg
ja
lahf
push
test
repnz
mov
inc
std
lods
aad
movb
fstpl
mov
sub
fimull
dec
push
jp
ljmp
xchg
daa
cltd
pop
push
mov
pop
mov
xchg
mov
jbe
jnp
sbb
popf
es
iret
sbb
cltd
jae
addl
repz
push
push
adc
xor
xchg
aad
or
enter
insb
hlt
jne
xchg
dec
mov
sarb
dec
cmp
ss
push
inc
jp
pop
jnp
ret
jo
xchg
ljmp
test
push
dec
aad
cmc
xchg
std
xor
lret
mov
lahf
mov
cmp
jge
lret
sub
div
push
lods
pop
xor
lds
dec
sub
stos
and
and
mov
lea
jmp
int
jmp
mov
xor
lock
xchg
pop
cmp
fcmovnbe
sub
in
rolb
fsts
sbb
mov
pop
mov
and
mov
mov
xor
iret
test
out
cmp
repnz
jl
out
std
scas
mov
or
popa
xor
sub
lcall
jge
cld
xlat
push
loop
dec
gs
dec
test
insl
sub
mov
fistpl
pop
iret
bound
xchg
dec
pop
jecxz
ja
pusha
sti
lods
shl
rcrl
xchg
and
je
push
fstpt
iret
fsts
insl
dec
shll
push
sbb
loope
mov
imul
push
sbb
or
loopne
inc
xchg
xlat
pop
fcoms
adc
loopne
insl
xor
cmpsb
cmp
mov
loopne
int
mov
pop
pop
lock
xlat
and
outsl
inc
and
cwtl
movsl
lret
out
loopne
pop
adc
push
sbb
add
aad
xor
cmp
jle
lds
push
repnz
mov
das
lcall
leave
pop
jl
push
sbb
mov
iret
jne
in
adc
mov
xor
lods
inc
mov
mov
icebp
and
and
cmp
sub
adc
imul
xlat
push
arpl
sarl
cli
ja
stos
mov
inc
add
and
cmp
jne
push
icebp
out
sbb
out
mov
popf
das
test
movhps
push
adc
sub
out
dec
jmp
mov
sbb
pop
push
jno
xchg
or
mov
mov
add
ficoms
shrl
mov
lods
cmpsb
imul
ds
xchg
mov
lds
xor
jno
stos
mov
add
out
xchg
sti
push
fwait
push
pop
pop
xor
js
push
pop
loope
mov
or
inc
and
ret
popf
xor
aaa
pop
and
inc
pop
subb
sbb
mov
lods
insb
sub
dec
clc
fbstp
into
sub
xchg
mov
nop
adc
addr16
adc
movb
insl
sbb
mov
cmp
add
mov
and
cmp
sbb
cmc
sub
out
mul
repz
fs
movsb
push
sub
imul
bound
or
lahf
mov
imul
bound
fisttpl
pop
cmpl
enter
jge
iret
ja
clc
scas
jecxz
push
mov
stos
lcall
cld
pop
in
pushl
mull
fnsave
mov
xchg
out
pushf
and
and
xchg
mov
loop
mov
mov
adc
icebp
and
push
dec
adc
mov
aad
pop
and
loope
adcb
loop
mov
inc
cmp
div
jnp
pop
push
outsl
add
push
imul
fstpl
loopne
ss
movsl
into
mov
call
fistl
mov
pop
rcr
sbb
sbb
test
or
adc
cmp
push
sarl
adc
subb
jnp
daa
sbb
nop
rcr
testl
ret
outsl
dec
fcomp
sub
adc
out
imul
es
xor
mov
sbb
xchg
and
sbb
pop
sub
jmp
add
cmp
fsubl
sarl
clc
and
mov
push
xor
lea
test
dec
movsb
hlt
in
sbb
or
ss
pop
fs
sarb
xchg
mov
das
fidivrs
xlat
fldt
cmp
aas
in
outsb
lcall
dec
xor
pushf
pop
mov
mov
sub
jae
mov
out
mov
mov
iret
fldt
xchg
xchg
mov
out
lock
push
xor
mov
jno
add
and
dec
sub
scas
out
or
dec
in
or
add
enter
dec
test
js
push
pop
nop
in
and
push
xchg
out
faddl
xchg
lret
jp
xchg
push
add
aaa
and
xorb
dec
and
xchg
je
inc
xchg
mov
ret
repnz
add
mov
in
repz
scas
xor
push
and
xor
add
ss
xor
and
jns
fsub
lcall
das
testl
jnp
adc
jno
add
xor
cmp
fcmovne
sti
fldt
shl
inc
mov
pop
mov
lahf
int3
das
push
adc
lcall
push
cmp
cmc
pop
and
dec
fwait
inc
fiaddl
pop
ret
mov
mov
iret
add
inc
or
or
mov
std
fs
ret
mov
push
inc
xchg
ret
pop
dec
ja
rdmsr
shll
hlt
not
push
out
inc
out
or
imul
xor
into
xchg
aas
mov
sti
in
jmp
lret
xor
pop
xor
shl
fs
dec
sub
rcrb
hlt
sbb
xchg
mov
sub
sub
mov
xor
repnz
lret
std
inc
ja
xchg
inc
mov
rcrb
push
jmp
add
xor
mov
clc
add
in
cmp
test
lds
sti
dec
icebp
add
mov
mov
push
int
adc
push
cmp
add
std
add
ret
cmp
scas
mov
jns
pushf
jg
ds
xchg
sti
add
out
jle
pop
mov
lret
pop
mov
mov
jno
aaa
jnp
mov
je
insl
xchg
into
mov
test
or
mov
xchg
stc
push
int3
xor
ss
stc
pop
jecxz
stos
jne
movsl
mov
dec
jle
xchg
cld
dec
push
out
pop
mov
inc
jae
jmp
movsl
int3
fwait
mov
mov
xor
fistl
or
ret
xor
testb
inc
xchg
idivb
pop
or
xchg
xchg
cld
aas
jae
pop
insb
xor
push
jl
jecxz
inc
std
cld
cmp
scas
fwait
jne
fcmovb
dec
push
jno
mov
inc
sub
pop
sub
popf
push
inc
sti
lea
xchg
add
xor
cs
popa
arpl
ja
test
sub
repz
push
cli
dec
and
mov
add
and
data16
pop
xchg
mov
cwtl
jl
mov
lahf
jb
ss
ret
sub
ret
sub
adc
mov
cltd
cmp
rcrb
add
push
dec
adc
push
fmull
icebp
stos
lods
or
mov
push
jg
sub
xchg
add
out
pop
mov
into
cli
ljmp
ljmp
mov
inc
push
pop
iret
ss
popf
xchg
sarb
test
clc
pop
iret
jmp
lahf
pop
les
xor
inc
je
fdiv
sbb
orb
xorl
insb
xor
inc
cld
ret
dec
movsb
sub
dec
mov
and
adc
mov
pop
movsb
push
test
scas
mov
sbb
out
aam
mov
js
sub
push
js
stos
mov
mulb
fsts
jmp
xchg
lea
pop
addb
lcall
jae
xchg
fidivs
popf
popf
out
cmpsl
out
push
xchg
or
push
fsubrl
sbb
pop
push
xchg
pushw
rdmsr
adc
xor
clc
lea
ss
int3
fbld
lods
dec
fadd
cmpsb
pop
les
cmp
adc
insl
mov
lock
loopne
repnz
push
jle
xchg
push
ljmp
jge
lea
bound
lret
out
outsl
insb
mov
inc
mov
xchg
aaa
test
mov
push
adc
pop
aas
out
xchg
out
mov
fimull
xor
xor
cld
add
dec
sbb
jbe
jl
dec
adc
cltd
xor
push
push
outsb
inc
or
mov
test
sti
push
adc
test
ficoml
int
and
sub
sti
iret
sub
in
in
and
mov
es
push
xor
fdivs
or
sbb
mov
lahf
fucom
leave
in
add
inc
repnz
push
std
stos
mov
sti
or
leave
push
out
push
fldcw
data16
dec
mov
scas
imul
sbb
and
mov
cmp
xchg
push
dec
xor
shl
xchg
scas
arpl
mov
lret
push
mov
frstor
adc
cmp
cmpsl
sub
mov
call
pop
mov
and
push
movsb
or
mov
cmp
dec
push
mov
sbb
or
mov
xor
sub
pop
mov
into
mov
cwtl
push
mov
int3
js
xchg
dec
lret
arpl
sbb
int3
out
cmpsl
jmp
xor
or
cmpsl
xorl
xor
cmpsl
iret
push
adc
mov
add
pop
fdivrs
test
xchg
inc
fisttpll
ret
xor
mov
jp
sbb
arpl
sub
push
sbbl
clc
push
sub
xor
sti
cs
inc
jmp
pusha
sub
subl
stos
jmp
cmp
loop,pt
js
xor
out
fwait
xchg
cmp
call
mov
loopne
mov
les
lret
add
push
xor
sbb
and
cmp
loopne
pop
mov
push
cltd
or
cmp
fs
out
push
inc
and
loope
jmp
icebp
outsl
das
inc
mov
push
push
push
add
or
mov
cltd
mov
adcb
dec
inc
xchg
sub
fstps
or
dec
lods
xor
push
ret
xchg
cmpsb
subl
sub
test
movsb
pop
adc
dec
xchg
pop
rorl
xchg
jb
pop
movsl
xor
inc
flds
insl
scas
push
jge
push
dec
adcb
dec
inc
shrb
ss
cmpsl
out
stos
fmuls
cld
lret
daa
inc
in
or
setno
xor
stos
pop
dec
mov
and
in
rcll
stos
scas
dec
movsl
mov
jp
jle
xchg
sub
mov
loopne
lret
cmp
jle
pop
lea
shlb
mov
or
and
push
sbb
scas
inc
mov
xchg
mov
add
sarl
jae
adc
xchg
sbb
jg
lea
aas
jns
cld
or
jecxz
stc
jl
addr16
leave
and
push
or
dec
sub
inc
xchg
sub
fcom
dec
mov
or
jg
subb
jp
aas
es
mov
push
ret
out
sahf
es
adc
jmp
ja
lds
mov
scas
hlt
cmp
mov
movsl
leave
pop
inc
push
shll
xchg
add
clc
data16
pusha
out
add
out
out
xor
dec
stc
mov
mov
xlat
push
cmpsl
ds
xchg
les
and
xchg
repnz
popf
out
int
push
jge
inc
lods
jae
jmp
xchg
xor
jo
jmp
orb
fxch
test
jg
fmulp
mov
jecxz
jnp
es
or
popa
cmpsl
or
mov
out
frstor
mov
fdiv
inc
adc
cmp
cmp
add
mov
cmpsl
pushf
aaa
mov
dec
test
in
das
xor
jne
sbb
pop
bound
xor
es
mull
out
and
and
inc
and
shlb
jmp
sarl
jmp
aaa
jb
clc
sub
lret
xor
loopne
fistpll
dec
fnstenv
pop
rcrl
rcrl
lods
out
adc
stc
cmp
lret
or
outsl
sahf
push
cwtl
movsl
mov
add
mov
js
test
out
and
mov
pusha
dec
popf
in
pop
fidivrl
pop
xor
popf
mull
cmp
sbb
loopne
outsb
pusha
stc
xchg
arpl
sub
mov
or
xor
or
mov
divb
sub
xchg
fdivrs
cmpsl
inc
xchg
jmp
gs
jle
out
pop
jge
flds
dec
sbb
movsb
pop
rcll
mov
or
test
and
repnz
push
inc
and
add
insl
test
jne
inc
xor
push
adc
into
or
sarb
jb
mov
pop
lret
lret
mov
stos
mov
fidivrs
jl
inc
repz
cld
push
iret
sbb
or
pusha
filds
call
xchg
inc
loopne
push
idivl
xchg
addl
dec
inc
mov
mov
stos
cmp
push
loope
add
mov
out
ljmp
adc
test
popa
flds
insb
inc
pop
in
ret
ss
mov
cwtl
push
jg
pop
jne
fwait
jbe
pop
ds
sub
jae
jl
data16
xchg
pop
lahf
xlat
sahf
mov
mov
and
xor
dec
mov
aas
ret
jb
iret
lret
cmp
leave
popa
push
das
xchg
ret
cmc
xor
cmp
repz
xor
nop
push
out
inc
rorl
push
dec
pusha
pop
jp
or
cmp
pusha
cmp
and
mov
pop
add
aad
jb
dec
imul
pop
sub
neg
aad
mov
aam
or
xchg
inc
sub
jle
and
pop
outsb
mov
lds
mov
lods
mov
xchg
int3
adc
in
arpl
dec
bswap
call
nop
xor
dec
je
or
mov
dec
repz
mov
mov
add
and
lret
aaa
pop
mov
idivl
xchg
and
xchg
daa
sarl
call
pop
setp
aas
or
clc
xor
sub
aaa
add
cmp
jmp
mov
rcrb
add
imul
syscall
lret
out
imul
fldt
mov
mov
in
xlat
mov
mov
addr16
xchg
sbb
and
add
mov
pop
cs
push
xchg
cwtl
cltd
jns
imul
mov
inc
push
cmp
mov
cmc
adcb
out
sti
les
mov
mov
or
adc
lock
jb
mov
lods
pushf
inc
jbe
add
inc
ds
sbb
mov
aaa
inc
std
testb
subb
xor
xor
ss
sub
fwait
nop
sbb
mov
loope
stos
or
cmp
rcl
out
pushf
lret
sbb
cmp
mov
mov
pop
cld
dec
sbb
sub
in
dec
cltd
xor
jns
adc
ret
mov
mov
lret
repnz
scas
outsl
push
std
leave
mov
jae
inc
lea
sbb
sti
bnd
data16
mov
or
icebp
orb
adc
cli
insb
add
stos
push
aaa
or
mov
push
or
cmpsb
jge
mov
pop
pop
push
and
fldl
lahf
or
inc
or
jb
pop
push
sbb
stc
pop
mov
jle
sarb
pop
insb
scas
test
xor
testb
repnz
or
sahf
mov
imul
push
pop
fistpl
psubd
push
jbe
rol
adc
movb
pop
adc
std
push
and
sarl
neg
xchg
lods
jo
jno
push
test
mov
test
addr16
std
and
ss
loop
shl
mov
ja
rcrl
jg
xor
xor
lahf
mov
push
xor
in
fcoms
add
sub
decb
test
xchg
ret
jnp
mov
mov
in
loope
ficomps
push
sub
xor
das
rolb
aaa
and
fiadds
jns
das
xchg
ds
dec
mov
xchg
test
and
xchg
pop
mov
add
enter
add
xchg
sub
dec
xor
ljmp
aam
cs
loopne
aaa
sub
jno
add
fcmovbe
mov
pusha
sbb
aad
sub
arpl
push
pop
push
mov
outsb
shlb
xchg
push
orb
int3
fistl
aas
cmp
sub
xor
push
jle
dec
jp
mov
int
iret
into
sub
pop
int3
pushf
nop
bound
roll
or
int
jno
lods
loop
fstps
pop
lcall
std
popf
cs
lcall
sarl
dec
pushf
imul
pop
push
jp
fcmovb
xchg
push
mov
sub
das
add
xchg
inc
xchg
ds
addr16
cmpsl
mov
mov
mov
mov
cld
mov
xchg
fwait
sbb
pop
pop
jb
jo
sbb
and
fwait
jne
xchg
stos
mov
imul
mov
jnp
push
jl
sub
cmp
imul
mov
fdivs
pop
inc
or
cs
test
repz
mov
or
xchg
xchg
imul
and
mov
subl
xor
ljmp
pusha
ds
jmp
sbb
inc
push
inc
pushl
enter
sti
or
jl
jle
adc
out
mov
adc
fisttps
xor
mov
add
cld
inc
xchg
xchg
mov
enter
lods
xor
jbe
fisubs
or
or
sbb
jb
jb
dec
out
movl
cmp
dec
adc
sbbl
aam
lea
mov
cs
mov
pop
inc
push
cmp
js
mov
imul
add
repnz
mov
aad
imul
test
test
gs
loop
aaa
fs
nop
xchg
dec
mov
imul
fsubrs
rcrl
shlb
xor
xor
in
jb
aas
mov
xor
sub
jne
out
dec
or
or
jo
adc
out
hlt
fildl
inc
mov
xlat
sub
out
rcrb
insb
rcrb
mov
mov
hlt
xor
cltd
push
cltd
test
mov
mov
out
mov
cmp
push
repz
femms
in
sarl
pop
dec
dec
sub
sti
and
pop
push
push
in
fstl
fisttpl
es
xlat
push
lods
loopne
push
and
pop
enter
push
xchg
jmp
lahf
mov
mov
cwtl
insb
decl
imul
jmp
movsl
sbb
add
jp
add
adc
loopne
les
mov
push
mov
mov
data16
mov
es
mov
ret
cmp
lret
hlt
icebp
pop
dec
cmpb
ret
sbb
scas
xor
xor
jl
xchg
cmp
test
pop
aam
push
fwait
mov
lods
icebp
cli
das
mov
cmpsb
sub
fldenv
call
aas
push
sti
or
adc
ret
or
mov
adc
jecxz
aam
mov
pushf
test
xchg
ficomps
lods
mov
movsl
xor
push
add
jbe
adc
shlb
fcmovbe
repz
mov
jnp
push
jbe
sub
pop
push
aaa
lcall
dec
mov
add
xchg
fwait
push
xor
mov
push
arpl
or
or
push
stos
xor
loop
cmp
dec
xchg
pushf
std
arpl
repz
ds
cltd
jno
and
pop
xchg
lods
adc
add
out
pop
or
bound
sti
fstpl
adc
test
hlt
adcb
cmpsl
out
test
adc
and
sbb
mov
jae
in
aaa
test
adc
fisubl
add
pop
insb
bnd
sahf
pop
ret
pop
ja
add
jg
ja
xor
push
icebp
add
xchg
add
fists
sti
xchg
rcrb
out
test
inc
dec
sub
cwtl
lds
mov
sbb
inc
pop
cmc
mov
push
adc
dec
lahf
lock
inc
arpl
mov
xchg
push
dec
movsl
or
jle
test
push
and
xchg
mov
lods
add
scas
dec
sbbl
fwait
mov
or
mov
mov
and
mov
js
cmpsl
cmp
mov
adc
add
and
xor
sahf
adc
dec
mov
loopne
pop
call
mov
sbb
adc
lcall
jbe
leave
es
xchg
cmp
nop
pop
cmp
dec
cmpsb
lods
push
daa
mov
aam
dec
dec
dec
jo
rorl
sbb
pop
sub
mov
movsb
aad
push
insb
mov
in
outsl
mov
inc
cld
movsl
cld
aaa
andl
gs
or
mov
push
lret
add
cmp
sub
hlt
xlat
leave
nop
xchg
pop
and
inc
mov
push
es
lea
or
sbb
xchg
popa
lret
aas
pop
mov
xor
inc
push
cmp
mov
mov
sti
pop
ror
sub
xlat
lock
or
mov
mov
add
xchg
cmp
mov
pop
rcrb
jnp
xchg
or
pusha
xchg
aas
xchg
loopne
jo
inc
mov
pcmpeqb
push
xor
imul
arpl
sbb
repnz
xlat
cmp
fbld
out
inc
mov
sbb
arpl
fstps
cmp
jl
andb
inc
popf
xor
int
inc
aaa
ljmp
hlt
stc
jmp
insb
movsb
jg
out
insb
jecxz
fisubrs
repz
popf
popf
popf
mov
roll
pop
icebp
js
sub
clc
push
cltd
push
mov
gs
icebp
or
mov
rorl
in
in
sub
cmp
pop
lods
fwait
mov
add
xchg
enter
shrl
push
pop
cltd
leave
mov
loop
push
test
sbb
arpl
ss
fisttpl
sarl
int
adc
dec
push
jmp
fcomps
shrl
or
in
jg
loop
aam
jnp
int
decl
icebp
and
and
xchg
mov
fwait
push
rclb
jbe
ds
lods
dec
out
push
lods
lret
xor
add
adc
aaa
addb
mov
sub
je
fisubrs
sbb
mov
gs
pusha
push
leave
mov
jmp
fucomp
adc
or
popf
xchg
cmp
and
cmpsl
data16
stos
in
pop
pop
scas
sarb
cmp
or
sbb
sbb
lahf
hlt
es
mov
pop
push
aad
pop
cmp
sub
in
or
js
outsb
inc
ds
or
and
cs
fstps
and
jo
fwait
cmpsl
push
xorb
mov
push
cmp
mov
dec
ss
mov
icebp
sub
jle
xor
mov
repz
mov
lods
stc
test
and
jo
dec
jp
pop
dec
xor
lcall
fsubs
and
rcl
mov
int
xor
repz
and
add
xor
xchg
mov
or
clc
lock
adc
adc
inc
aaa
in
test
arpl
loop
and
and
lods
lea
and
cmp
push
mov
imul
dec
sbb
out
sbb
add
mov
ret
or
rolb
xlat
dec
push
aam
add
mov
adc
mov
ss
adc
xor
push
pop
mov
inc
js
enter
notl
sbb
addr16
mov
cwtl
out
outsl
nop
dec
mov
scas
push
xor
mov
dec
icebp
outsl
loopne
sbb
inc
adc
lock
xor
xchg
fnstsw
mov
xlat
scas
xor
sarl
jecxz
jp
out
pop
arpl
xor
rclb
mov
jno
ja
nop
lods
push
popl
mov
push
leave
mov
mov
into
in
scas
push
or
out
xchg
xor
or
lcall
or
and
dec
mov
jnp
xchg
push
enter
jnp
iret
mov
popf
js
xor
mov
xchg
clc
shl
mov
inc
int3
sbb
imul
ret
sbb
test
or
data16
inc
ds
xor
cli
sahf
addr16
lods
inc
int3
pop
xor
adc
call
pop
clc
jge
mov
push
cltd
inc
lcall
insb
sub
cmp
rcl
cs
and
shll
ds
mov
dec
nop
imul
popf
and
adcb
pop
inc
adc
dec
popa
mov
js
sbb
pop
jne
bnd
jecxz
rolb
xchg
into
add
mov
mov
lahf
stc
cmp
mov
push
pop
or
sub
jmp
cwtl
mov
idivb
in
iret
ss
out
jle
outsb
xchg
out
pop
es
addl
cmp
movl
test
shll
dec
pop
xor
test
push
pop
mov
jb
sbb
packuswb
xchg
insl
push
outsl
loopne
aas
xor
nop
insl
sub
lret
lcall
testl
pop
sub
cmp
cmpsl
jl
test
xchg
lods
in
das
mov
pop
std
and
test
pop
enter
inc
and
lret
add
adc
dec
out
mov
push
inc
add
xchg
mov
push
and
add
lahf
into
xor
xchg
jb
imul
sbb
mov
xor
pop
sub
js
insl
movsb
subl
cld
divl
out
adc
xchg
repnz
pop
fsubr
push
push
inc
inc
lcall
fwait
pop
xchg
jg
lcall
cmp
inc
mov
insl
jge
jle
gs
inc
mov
nop
into
push
jae
pushf
scas
fildll
mov
sbb
into
xchg
mov
adcl
mov
int
dec
daa
setns
mov
jne
sqrtps
cmpsl
push
and
pop
mov
cmp
outsb
cmovnp
push
rcrb
repnz
cmc
lret
jns
and
jo
push
mov
or
or
mov
push
lods
imull
ficomps
in
andb
sbb
mov
mov
lcall
in
ret
jnp
out
pop
xlat
mov
imul
inc
jnp
pop
cmc
icebp
fadd
sbb
xor
shrl
jne
fisubs
fadds
repnz
mov
mov
stos
aas
mov
jb
mov
sti
imul
lahf
jge
out
xor
xor
stos
out
push
ds
fwait
daa
ficompl
jb
ljmp
jno
hlt
fs
sub
lcall
adc
dec
lds
shl
mov
orb
jecxz
fnstsw
jo
jo
jb
sarl
bound
stos
ja
orb
push
pop
inc
xchg
push
inc
pop
xchg
sub
sub
lods
sub
adc
xchg
sbbb
addr16
fildll
into
not
in
cwtl
aaa
and
imull
cmc
and
test
test
lea
sub
add
aaa
push
dec
fsubr
mov
cmp
xchg
cmp
xchg
icebp
arpl
sar
cmpl
mov
add
dec
sub
pop
ret
mov
stos
lods
int
addr16
xlat
dec
daa
pop
xor
cmp
aad
sub
xchg
loope
jmp
lods
hlt
mov
andl
shrb
mov
mov
xor
icebp
inc
fildl
dec
lea
push
push
adc
cmpsb
in
out
sbb
iret
push
call
mov
add
pop
add
dec
roll
imul
inc
lods
repnz
incl
adc
hlt
dec
cmp
daa
outsb
in
leave
jnp
dec
in
divb
adc
aad
and
fs
push
fidivrs
cltd
shlb
aaa
lods
xchg
dec
adc
cmp
cli
pop
pop
fsubs
mov
mov
out
rcr
mov
or
outsl
push
sti
and
mov
mov
lcall
repnz
inc
jae
inc
sbb
push
pusha
push
ds
mov
mov
jle
mov
js
add
add
movsb
add
sub
jae
scas
mov
push
sub
jmp
mov
in
out
mov
in
dec
in
pop
mov
sub
scas
cmc
rcr
cmpsb
rcl
or
adc
mov
sub
xor
pop
mov
mov
dec
mov
xor
xchg
int3
clc
test
scas
push
dec
iret
scas
jp
add
adc
mov
shrb
in
movsb
imul
nop
push
call
xor
lret
mov
mov
cs
sarl
dec
dec
ret
jle
pop
cmp
xor
mov
js
fwait
ss
and
add
fsubrl
adc
jecxz
sbb
push
ja
and
andl
adc
jg
insl
mov
mov
mov
shlb
add
xlat
imul
adc
cmp
push
xchg
jp
jle
.byte
inc
loope
.byte
adc
mov
add
xchg
jno
add
adc
mov
dec
imul
sub
inc
xor
adc
arpl
xchg
mov
xchg
cltd
scas
imul
loop
stos
push
and
add
lahf
cmp
imul
ljmp
cmpsl
pop
outsb
sbb
sbb
roll
push
xorl
aam
ljmp
mov
dec
sub
lahf
or
out
addr16
add
mov
cltd
push
push
les
lcall
inc
imul
clc
add
inc
stc
add
iret
push
rcrb
loop
ret
jae
clc
jp
mov
xchg
daa
push
addr16
daa
mov
cmc
push
cmpsl
fcompl
into
dec
sarb
cmpsl
and
cmp
push
imul
test
enter
addr16
aas
dec
mov
jbe
aas
stc
mov
sbbb
or
cltd
jl
xlat
pop
jb
or
sahf
pop
and
add
fistpll
add
dec
sub
push
xlat
ja
xchg
cmp
sub
and
xchg
add
jmp
mov
test
mov
popa
mov
xchg
popf
dec
xchg
mov
adc
ljmp
cli
pop
mov
cmp
cmpsb
push
push
mov
int3
ret
jno
out
movsb
sub
inc
repnz
mov
xchg
lahf
push
arpl
push
sub
fwait
inc
ja
or
mov
pop
sbb
int3
std
repz
sbb
dec
ret
push
aaa
stc
or
aad
sub
mov
add
mov
int
shll
cwtl
mov
je
insl
int3
mov
pop
gs
mov
adc
xor
lcall
add
mov
jecxz
cli
dec
jmp
rcrl
mov
fcoms
repz
lcall
loope
adc
mov
sbb
in
les
notb
roll
test
lea
mov
sub
cmp
xor
cmpsb
xor
test
pop
imul
hlt
push
daa
sbb
fcompl
cmp
test
mov
int3
push
jle
ret
idivl
xor
cmp
ljmp
dec
adc
mov
jge
jno
fstp
scas
jl
cld
lahf
xchg
pop
repnz
imul
in
iret
cltd
dec
jb
faddp
fs
cs
xchg
inc
hlt
nop
cmp
test
dec
push
xchg
push
jecxz
sbb
inc
push
imull
mov
adcb
xor
and
fidivrl
mov
adc
fisubs
fisttpl
into
lea
ret
out
inc
ja
stos
fimuls
es
sbb
insl
push
push
push
out
hlt
jle
jno
movsb
xchg
lods
pushf
xlat
es
add
scas
dec
dec
in
cwtl
push
insb
pop
loope
dec
dec
xchg
dec
es
shrl
hlt
mov
cld
xchg
stos
or
pop
aam
aad
cwtl
sbb
fcoms
enter
movsb
or
add
ret
or
in
movsb
add
ret
sub
mov
inc
sbb
lds
adc
xchg
dec
dec
add
add
sarb
pop
stc
push
mov
add
ljmp
int
js
or
loopne
adc
sub
std
add
xor
or
int
stc
mov
addl
push
sbb
jbe
inc
pop
mov
sbb
xor
jmp
fimuls
or
inc
out
shrl
pop
int3
sub
dec
pop
test
jnp
addr16
cmp
das
iret
adc
imul
orl
mov
mov
lcall
xor
lret
rcrb
push
xor
push
xlat
ret
add
jo
pop
outsb
stos
jp
ja
outsb
dec
bound
mov
call
sbb
and
pop
sbb
cwtl
adc
outsb
aam
fdivl
cs
fsubs
lock
sub
fdivr
lret
adc
jae
jne
or
scas
xchg
ds
mov
dec
lock
je
outsb
je
scas
lcall
inc
cmc
inc
jecxz
xchg
ret
lahf
push
or
jne
push
bound
and
push
aas
mov
fisttps
cmp
int
cmp
inc
push
fsubl
or
in
call
adc
cmp
xor
rorb
inc
or
nop
mov
mov
or
xlat
shl
pop
fs
data16
add
add
jae
scas
icebp
and
push
rcrl
adc
outsb
jno
mov
sbb
loop
ja
xrelease
mov
add
adc
sbb
test
gs
popf
pop
sahf
sbbb
out
or
clc
inc
push
sbb
mov
add
outsb
mov
fidivrs
or
stc
movsb
enter
out
shrb
or
dec
cmp
std
xchg
mov
pop
hlt
std
pushf
cs
popa
pop
into
mov
add
loopne
mov
and
out
xchg
aaa
mov
mov
fadd
xlat
xor
mov
or
push
jbe
aad
rcll
cmp
bound
push
lods
das
dec
xor
pop
cli
cmp
xchg
sbb
dec
lcall
je
loop
push
jae
mov
mov
mov
xor
mov
insb
jg
mov
fnstenv
cmp
bound
push
jmp
cltd
and
cmpsl
push
cmp
mul
fdivs
inc
cli
and
scas
jo
insl
aaa
sub
flds
inc
jo
leave
pop
scas
arpl
imul
mov
cmp
js
test
xor
mov
enter
sbb
jbe
int
cld
sub
test
clc
mov
lods
ljmp
sub
pop
fstpl
and
or
or
test
and
insb
sbb
xor
inc
sub
or
stc
inc
jb
call
mulb
jae
or
cld
pop
mov
inc
int
je
inc
mov
lods
fmull
sub
outsl
std
cmpsl
ss
outsl
mov
sbb
loope
into
repz
pop
lret
add
inc
imul
cltd
push
cmpsb
adcb
in
xor
lret
sub
ss
lock
shl
or
fisttpll
imul
shr
push
shlb
pop
cltd
push
in
jno
stos
std
xchg
or
inc
xor
insl
jo
fisubl
loope
sbb
xlat
jg
dec
bsr
in
xor
jno
sbb
add
jmp
popa
pop
ret
xor
and
jo
ds
adc
sahf
je
iret
adc
xchg
jecxz
jo
fnstcw
pop
ja
scas
cmc
jge
je
jecxz
mov
sbb
cld
div
jbe
sub
femms
inc
gs
leave
cmp
adc
int
push
add
jecxz
pop
mov
lods
or
sub
loop
movsl
push
fildl
push
pop
inc
adc
sub
negl
addr16
ret
lds
add
ds
or
movsb
and
iret
pop
lahf
dec
dec
insb
mov
nop
out
std
inc
call
mov
cmp
test
dec
jnp
fbld
clc
jge
.byte
and
ret
adcl
jns
add
dec
repz
pop
rorl
fwait
test
out
add
pusha
lahf
add
push
or
int
js
loope
jns
push
mov
dec
mov
arpl
ret
cs
mov
fistpll
fistps
popf
sub
cld
out
out
mov
sbb
push
stos
icebp
push
mov
imull
stc
ret
repnz
mov
and
inc
sbb
sti
stc
incb
xchg
inc
and
jg
push
mov
sbb
mov
dec
or
pop
adcb
push
mov
mul
xor
pop
int
dec
pop
call
jbe
xor
out
mov
insb
dec
addl
pop
mov
or
adc
mov
scas
repz
shrb
jmp
aam
adc
pop
les
std
lret
aaa
cmpsb
push
inc
push
inc
pop
add
mov
cmc
aad
pop
dec
xlat
ljmp
fwait
sbb
fbstp
push
lds
sbb
fwait
repnz
sarb
pop
iret
push
or
mov
imul
repz
mov
xchg
hlt
xchg
pop
jns
pop
pop
inc
adc
in
and
jecxz
inc
arpl
lock
jecxz
aas
lds
lcall
and
mov
lods
test
cmp
xlat
adc
sti
sbb
lods
nop
xchg
repz
pop
add
inc
pusha
test
nop
mov
jmp
mov
stc
cmp
jb
ja
sbb
test
inc
aad
lret
sbb
push
lahf
andb
test
xchg
pop
or
jle
cmpsb
rclb
jo
sbb
outsb
imul
iret
cmp
imul
or
mov
xchg
in
mov
cmp
sti
dec
shl
and
pusha
sti
xor
lods
jge
test
aam
xchg
insb
xchg
adc
out
xor
int
jne
negb
pop
mov
mov
loop
mov
jb
push
inc
mov
cli
enter
adcl
or
popf
sbb
or
push
jg
int
jno
pop
push
add
int
mov
mov
push
lods
adc
fcomp
adc
test
mov
jg
push
sbb
mov
add
jl
mov
mov
lea
push
xchg
fwait
call
movsb
fs
stos
enter
fidivrs
imul
lds
es
test
mov
pop
cmp
xor
jp
sbb
or
adc
lcall
mov
pop
jae
jp
sub
mov
jmp
cmpsl
aam
xor
xchg
fbld
sbb
aad
push
int3
xchg
fbstp
xor
inc
cmpsl
rorl
adc
or
in
divb
mull
xorb
out
inc
dec
fs
mov
fmuls
jecxz
je
ds
pusha
push
xchg
adc
pop
mov
mov
imulb
insl
pop
cmpsl
jg
and
iret
pop
mov
vmulpd
lret
and
pop
in
clc
aaa
inc
add
pop
add
jecxz
js
fdivs
pop
lods
push
push
sarl
nop
sbb
shrb
stos
inc
sahf
loop
jns
ret
push
and
mov
out
maxps
int
xor
jge
loope
adc
divl
je
add
pop
jle
lods
mov
or
mov
fsubr
push
mov
fsubrp
jo
dec
mov
das
sub
mov
cmp
mov
pop
adc
adcl
repnz
add
daa
out
inc
clc
shll
gs
mov
adc
sub
dec
push
cli
adc
lret
es
fdivrl
addl
xor
es
rcll
jo
add
cmpsb
mov
pop
pop
add
mov
pop
jo
ret
movsb
mov
iret
das
lds
mov
xchg
outsb
lods
xorl
das
dec
pop
ja
fiaddl
mov
add
xchg
pop
gs
jnp
and
inc
jb
xor
out
ljmp
repnz
push
xor
jo
jg
push
lods
or
dec
pop
shl
cwtl
int
into
mov
test
lds
fmul
test
stos
iret
sbb
fldt
xchg
or
dec
mov
in
aam
pushl
mov
add
cmpsl
fiadds
ss
icebp
lods
mov
mov
aas
and
mov
ja
push
sub
test
or
inc
out
mov
jo
cs
xor
or
push
ret
insl
in
mov
push
xchg
fdivl
imul
push
jl
stos
stos
sub
xchg
add
mov
out
popf
cmpsl
in
stos
adc
sub
movsl
pusha
ja
sbb
stc
lcall
cmp
ret
data16
pop
ret
mov
rorb
lret
dec
pop
xchg
mov
fistps
bswap
aam
mov
xchg
and
ds
or
and
js
aad
mov
cltd
outsl
je
mov
mov
push
xor
lods
into
dec
jge
in
lahf
jo
roll
jno
xchg
lret
inc
xchg
test
mov
xor
out
not
sahf
mov
test
or
fdivl
les
mov
lods
sub
pop
and
int3
xchg
dec
popf
sub
notl
xchg
xorb
dec
std
pop
xchg
incb
ja
mov
repnz
fs
outsb
popf
xor
mov
push
lahf
mov
cmp
jge
sbb
inc
in
jne
jmp
mov
mov
rcll
jno
sbb
mov
outsb
mov
out
test
lds
fisubs
lea
xor
fstpl
push
outsb
mov
mov
mov
mov
mov
popa
repz
mov
cltd
jge
rcrl
cli
fidivrs
or
cmp
mov
sub
insb
and
cwtl
xchg
mov
jecxz
pushf
pop
jmp
outsb
aas
imul
into
fwait
cmpsl
sbb
sub
xchg
int
mov
out
cli
cli
mov
loopne
or
imul
movd
jmp
shll
mov
pop
imul
pop
mov
ds
push
insl
mov
mov
mov
das
jno
sbb
repnz
outsb
stos
icebp
into
inc
mov
jb
xchg
out
mov
cmp
xor
adc
sub
shlb
addr16
shrl
sbb
daa
push
jp
adc
mov
outsb
movsl
dec
lea
lcall
fwait
or
ret
in
arpl
push
mov
popf
mov
pop
adc
dec
sub
sbb
cld
ficoms
xchg
mov
mov
xchg
mov
inc
clc
jle
negl
dec
xor
push
imul
rorb
and
outsb
jp
popa
pop
xchg
mov
jno
ret
dec
pop
jg
out
das
mov
mov
sub
sub
into
jge
clc
mov
cwtl
mov
xchg
dec
jbe
mov
jb
mov
cli
and
cmp
adcb
sub
jp
into
cli
data16
scas
jmp
movsb
mov
scas
popf
pusha
sbb
and
xor
test
dec
mov
xchg
loope
loopne
mov
aad
out
sub
mov
cmp
jecxz
repz
mov
mov
cltd
xchg
stc
cwtl
pop
push
cmp
xchg
cld
int
mov
sbb
xlat
call
int3
and
pop
cmp
imul
jb
push
and
into
fdivp
adc
je
das
mov
call
mov
pusha
sub
mov
andl
mov
ret
sub
push
and
insb
out
cmpsl
inc
aam
inc
repnz
scas
je
daa
leave
movsb
int
jp
sbb
pop
pop
cmp
jp
out
mov
jg
pop
lcall
fs
jo
stos
stos
cli
cmpsb
mov
ds
and
fdivrl
add
dec
cld
ret
xor
leave
add
insl
ret
adc
jnp
clc
stos
xor
push
push
cltd
jnp
inc
xor
fdivl
sbb
lret
pop
mov
or
outsb
shl
mov
pushl
sub
outsb
enter
sbb
pop
std
jne
cld
test
xchg
sbb
shrl
jne
stos
icebp
xchg
mov
adc
fs
sub
test
push
js
dec
enter
and
imul
andb
or
repz
xlat
dec
and
in
dec
push
mov
dec
mov
or
xchg
gs
mov
dec
bound
dec
movsl
stc
jbe
fsubl
mov
xchg
or
es
lds
add
lcall
pop
mov
lcall
push
cmpsl
push
pop
fbstp
lods
dec
inc
jae
xor
sbb
pop
jmp
add
cmp
out
sub
test
push
fidivrl
lods
js
aaa
mov
cld
mov
cs
les
jno
dec
jo
iret
xchg
jno
mov
sahf
sarb
mov
dec
test
pop
push
mov
movsb
lret
ret
les
adc
dec
mov
sbb
das
cmpsl
iret
enter
cmp
js
push
gs
jecxz
fwait
leave
push
loope
pop
push
jle
push
ret
repnz
ret
mov
cmp
sahf
sbb
enter
cld
iret
gs
cmp
mov
inc
repnz
cltd
dec
inc
test
add
fs
fidivrl
mov
push
adc
pop
pop
mov
sbb
cmp
mov
and
sub
mull
adc
dec
out
adc
cmp
stos
sti
cmp
loopne
push
xchg
cwtl
enter
push
sub
pop
xchg
sti
sub
add
mov
inc
outsl
cmp
jne
in
mov
fwait
mov
push
out
stc
mov
mov
pusha
mov
push
bound
ljmp
das
mov
movsb
dec
mov
mov
xchg
testb
pop
jp
mov
insb
adc
pop
pop
sarb
mov
das
inc
adc
mov
and
xchg
mov
mov
mov
jnp
loop
pop
inc
mov
addb
and
int
cmp
addb
dec
jns
jno
or
and
arpl
pop
decl
push
dec
aaa
xchg
cli
pushf
ret
dec
pop
dec
sbb
les
jl
imul
xchg
into
xor
rolb
jne
clc
inc
daa
or
jle
mov
loop
and
dec
out
frstor
lahf
cmpsb
inc
aas
pop
lea
sub
xchg
or
mov
mov
cmp
jge
ja
out
out
mov
adc
pushf
inc
dec
roll
enter
push
in
pop
popf
sbb
xchg
cmp
and
cmp
mov
pop
mov
mov
mov
movsl
daa
add
out
jb
stos
xorl
das
push
mov
cmpsl
pop
jl
mov
loopne
xor
rcrl
push
mov
cld
pop
lods
les
xor
mov
mov
test
or
sub
or
movsl
xchg
add
lock
scas
add
addb
aam
ss
push
shrl
mov
sbb
les
cmc
inc
adc
sub
test
mov
cltd
and
xchg
int
push
push
stc
dec
xchg
adc
xor
and
pop
cld
cli
sbb
mov
mov
cwtl
pop
add
mov
xchg
dec
mov
push
adc
or
ret
or
xor
popa
add
pop
push
and
in
add
mov
ss
testb
fs
pushf
aas
lock
or
ret
inc
jb
ljmp
adc
sub
fcomps
push
xor
enter
or
les
fstl
cmp
or
push
lods
fs
pop
cld
cmp
sub
jmp
pop
cmp
gs
xchg
adc
rol
fninit
add
and
les
pusha
mov
mov
mov
xchg
popa
xchg
pop
mov
jno
or
mov
stc
fbstp
fcoml
sbb
aad
mov
dec
jbe
cmp
jmp
jb
or
mov
outsl
leave
movsl
jns
inc
pushf
sub
mov
cld
sbb
push
cmp
popfw
sub
mov
jl
mov
add
test
rorl
push
mov
lahf
sbb
sub
out
mov
das
cmp
jg
stos
jecxz
fistl
inc
movsl
jge
lret
xchg
dec
pusha
mov
cmp
and
ffree
jp
pop
push
in
hlt
cmp
inc
inc
xchg
rol
pop
outsl
push
mov
dec
in
jnp
or
movsb
push
sub
mov
push
repz
iret
add
add
adc
out
fmull
gs
into
dec
jns
addr16
pusha
loope
cltd
ss
cmp
mov
int
xor
xor
sbb
jbe
mov
ret
cmp
jmp
inc
mov
cmp
ljmp
dec
aad
and
in
mov
sbbl
adc
jge
movsl
jle
xor
xchg
loope
jns
inc
das
and
jno
cmp
decb
jle
xchg
test
insb
fimull
imul
xchg
movsb
sbb
pop
loop
je
hlt
jl
pop
mov
loope
cs
inc
pop
add
imul
insl
orb
aaa
das
push
push
jae
jb
sub
and
sbb
sbb
push
push
fsubrl
cmp
imul
push
jnp
push
xor
addl
sub
sti
out
jg
cmpl
xchg
inc
xor
ret
test
ss
and
shlb
mov
imul
pop
bound
imul
pop
and
or
pop
xchg
mov
or
inc
or
inc
out
mov
push
icebp
je
jl
int3
adcl
outsb
and
mov
shrl
fxch
xchg
insb
xchg
xchg
std
sbb
pop
mov
inc
pop
jle
xchg
or
xchg
loopne
aad
sti
xchg
push
adc
xor
les
aad
fistpll
out
int
adcb
icebp
add
mov
clc
and
adc
cs
add
cs
inc
lods
shlb
push
inc
pushf
sbb
cmc
inc
xchg
fwait
mov
out
jmp
sub
xor
iret
xor
aas
and
ret
fs
data16
add
mov
pop
int
cmp
aad
popa
lcall
xorl
mov
cltd
xchg
loopne
push
adc
cmp
cli
push
fidivrl
add
rcl
pop
dec
neg
cmp
mull
xchg
push
mov
inc
mov
mov
mov
pop
add
xchg
fistpl
sbb
iret
mov
jne
psrld
sbb
int3
inc
mov
notw
ficompl
fisttpl
movsb
sub
loopne
xor
test
xor
pop
mov
push
cmc
pushf
adc
lret
out
jge
pop
mov
mov
pop
call
mov
dec
sub
inc
adc
push
ja
pop
mov
sahf
mov
cld
roll
pop
fdivrl
cmp
inc
pop
xchg
sub
sub
jmp
xor
jnp
sbb
stos
loop
decb
xlat
sbb
cmp
dec
mov
mov
add
cmp
xchg
cwtl
xchg
cli
push
fcmove
push
mov
shrl
push
jbe
adc
jae
dec
sub
scas
mull
push
xchg
push
icebp
sub
mov
sub
push
add
pop
dec
pushf
hlt
jmp
aad
in
sbb
daa
loopne
scas
xor
mull
aam
pop
fs
dec
repz
push
rcrb
push
push
in
fwait
jmp
lods
and
sub
and
scas
and
insb
jns
mov
ror
or
pop
and
movsl
jl
mov
mov
pop
je
push
sbb
fstl
aam
xchg
mov
in
xor
mov
in
add
inc
repnz
push
inc
int3
cvtps2pi
lahf
lock
scas
stc
fbstp
sarl
sti
cmp
and
std
and
lcall
push
imul
lahf
xchg
pop
sbb
lret
pop
mov
fisttps
out
leave
or
add
dec
and
rcl
in
lods
xchg
leave
push
gs
popf
movsb
cwtl
adc
jno
pop
jae
test
das
ss
ja
lahf
popa
jmp
cmp
or
in
push
lret
dec
ljmp
and
jl
push
mov
and
aas
nop
cli
pushf
push
loopne
aad
xlat
adc
je
lahf
pop
call
dec
scas
push
adc
adc
pop
push
push
push
jae
sub
xlat
ret
jo
cli
mov
sbb
fidivrs
mov
xlat
fs
outsb
adc
sbb
pop
js
out
sti
and
push
lahf
sub
push
repnz
shlb
sub
iret
les
faddl
ret
aad
push
xchg
mov
mov
fiadds
mov
jo
cmp
arpl
dec
dec
lret
and
inc
test
push
push
icebp
ja
ret
jl
loope
stc
xchg
mov
cmc
fldenv
cwtl
push
push
loopne
xor
and
icebp
sahf
out
and
sbbb
fldenv
scas
mov
int3
mov
les
outsl
nop
popf
cmc
inc
ror
in
sbb
mov
sub
in
inc
mov
popa
lret
ret
push
sbb
test
adc
sbb
ss
xor
inc
repnz
inc
enter
mov
cmp
stos
in
add
in
pop
int3
in
mov
inc
pop
dec
addr16
scas
ds
lods
sbb
data16
fwait
cmp
push
mov
shll
push
scas
push
fwait
sbb
stos
iret
rcrb
out
sub
pop
add
fs
fcoml
dec
addr16
pop
shll
dec
inc
mov
jno
jns
in
mov
lock
jmp
fists
addl
bound
add
cltd
add
lea
inc
repz
ror
cmp
lods
sub
inc
mov
push
mov
popa
pop
sbb
and
add
cwtl
mov
dec
rorl
insb
cmp
and
pop
stos
add
or
mov
pop
sbb
lahf
shlb
out
shr
dec
outsl
jno
sub
jb
mov
in
xchg
xchg
out
and
call
add
jnp
xchg
adc
push
cmp
idivb
pusha
cmp
sub
sbb
stos
mov
ja
std
xchg
inc
scas
xor
cmp
cmp
dec
dec
es
daa
std
xchg
push
adc
je
leave
jnp
push
jp
test
lcall
push
gs
xchg
pushf
jecxz
pop
test
sbb
popf
mov
mov
jns
adc
add
jb
arpl
jne
push
imul
cmp
push
push
jl
inc
pop
mov
jno
lds
iret
fistl
xchg
sti
cwtl
repnz
test
push
push
mov
js
cmp
jg
popf
test
and
xor
and
mov
mov
data16
aaa
cs
and
pop
dec
mov
inc
arpl
cmp
push
sbb
jne
aaa
loope
xchg
mov
mov
out
das
adc
loopne
mov
inc
dec
insb
dec
sub
cvtpi2ps
sbb
mov
sbb
sub
sub
subb
lea
lea
mov
adc
daa
push
shlb
jne
push
lea
mov
mov
scas
icebp
fs
dec
in
jle
and
add
idivb
roll
push
aaa
movl
mov
aaa
stos
add
ja
push
inc
and
test
pop
push
sbb
dec
popa
std
jbe
adc
adc
mov
sub
stc
aam
push
mov
lock
clc
call
or
inc
arpl
insl
inc
jmp
sahf
pusha
ret
mov
jle
cli
pop
mov
mov
pusha
fcmovnb
loopne
add
rcl
sqrtps
cltd
iret
js
out
inc
or
mov
mov
fimull
fsubl
sub
adc
bound
fdivrs
xlat
mov
pop
or
cmpsl
ljmp
psubusw
popa
jae
pop
les
push
ljmp
ud0
mov
sub
mov
js
xor
ja
outsl
inc
ret
pop
mov
jns
imul
pop
daa
outsb
xchg
lds
setle
jle
lods
jns
test
jg
pusha
adc
data16
pop
cmp
xlat
int
aas
movsb
jp
mov
dec
fisttpl
push
push
xchg
adc
sbb
popf
xchg
addr16
ficoms
cmpsb
jmp
push
loopne
xchg
push
cli
dec
push
dec
push
scas
push
stos
sub
xor
sub
mov
cwtl
subb
test
mov
inc
addr16
in
imul
mov
mov
jo
xor
into
popa
push
stos
push
cmp
cmp
inc
rorb
sub
fcomp
pusha
sub
popf
and
cltd
pop
pop
or
in
inc
pop
xchg
aaa
cli
in
ds
push
loop
out
das
call
fstpt
sarb
scas
fisubrs
repnz
cmc
addb
sbb
popa
xor
out
ret
xor
dec
push
pop
cmp
call
int
lret
insl
push
add
sub
mov
in
pop
aaa
hlt
cmp
das
mov
add
xor
sub
and
in
lret
xor
int
add
inc
mov
mov
or
outsl
mov
cld
sarl
ret
movsl
pop
fdivs
daa
push
pop
sahf
add
fbstp
gs
cs
sarl
inc
xchg
inc
xor
mov
dec
or
leave
push
lret
enter
addr16
mov
mov
inc
mov
fcmovb
jo
cmp
in
es
pusha
fisubl
adc
jo
fstp
mov
pop
lret
mov
add
and
pop
lahf
xor
das
mov
add
push
idivl
imul
cmp
sub
je
sahf
add
inc
pop
push
mov
inc
rcl
jmp
sub
sar
pusha
stc
sbb
xchg
pop
insl
dec
add
sub
sbb
cmp
cmp
adc
mov
sub
bound
popf
jmp
in
lahf
imul
out
and
xchg
rorl
test
and
setle
mov
pop
js
fwait
stc
repz
dec
and
cmp
mov
xchg
adc
scas
fs
dec
movsl
xor
pop
cmp
xor
or
jne
cld
sbb
out
jne
mov
movsl
scas
sub
inc
movsl
ss
mov
mov
sub
inc
and
pop
push
jl
nop
ss
jp
hlt
pop
pop
imul
rcr
adc
mov
xor
sub
ret
nop
out
into
out
loop
cltd
and
push
aam
xor
test
movsl
xchg
out
call
leave
mov
cmp
pop
mov
into
push
in
sbb
jmp
xchg
mov
sti
cs
imul
cmp
shrl
out
xchg
mov
jo
fildll
test
and
pop
add
pop
and
and
dec
into
test
sahf
mov
rol
std
jae
out
sbb
adc
ret
cmp
stc
cmc
shll
inc
push
and
or
nop
jb
js
test
mov
ss
insb
test
add
pop
dec
lret
js
sbb
bswap
or
xor
dec
fs
inc
rorl
mov
xchg
icebp
icebp
out
out
aam
dec
insb
ljmp
xchg
cs
push
xchg
cmpsl
leave
icebp
cmp
xor
stos
jp
stos
ja
fs
sbb
mov
jbe
mov
sub
mov
jns
outsb
std
out
in
hlt
or
mov
fistpl
mov
xchg
sar
scas
arpl
jmp
and
jno
push
in
push
or
xor
outsb
pop
lods
dec
push
lds
repz
incb
xchg
mov
jne
push
lods
cmovp
push
or
icebp
inc
jns
push
push
or
and
mov
shrl
mov
icebp
sub
sub
cmc
test
inc
int3
add
xor
cltd
adc
push
outsl
pop
mov
push
ss
mov
inc
push
rcr
in
ss
xor
in
fwait
push
int
jae
popf
mov
bswap
or
scas
imul
movsl
shlb
ja
stos
and
test
inc
lea
insl
xchg
mov
bound
add
add
frstpm(287
jecxz
or
mov
xor
das
frstor
or
mov
rorb
inc
scas
movsb
shll
add
mov
pop
jge
push
sub
jns
fisttps
jo
daa
mov
movsl
movsb
mov
jmp
stos
popa
fisubl
mov
mov
push
leave
xor
push
js
sub
in
mov
mov
gs
jl
fidivs
sub
nop
inc
sbb
ljmp
sub
outsl
jmp
inc
sub
movsb
lods
insb
sub
dec
insb
ficomps
mov
push
gs
jae
das
pop
fdivp
adc
gs
fimull
jbe
xchg
dec
cmc
mov
and
aas
movsb
xlat
mov
or
adc
push
push
xorl
jl
pop
or
mov
ficomps
mov
push
dec
addl
sbb
lcall
jae
in
sub
arpl
mov
xchg
jg
xor
js
in
pusha
fwait
dec
xor
lods
xor
ja
push
jmp
popa
lret
clc
clc
xor
mov
and
stc
in
.byte
into
sbb
add
inc
add
xor
pushf
loopne
add
inc
inc
add
add
mov
add
add
add
add
add
add
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
rolb
orb
add
add
orb
add
xor
add
mov
add
add
add
add
add
add
add
pusha
add
addb
add
js
add
nop
add
addb
add
rolb
addb
add
fadds
add
mov
add
add
add
add
add
xorb
add
and
add
cmp
add
push
add
sub
add
decb
add
or
add
adc
add
and
add
or
and
add
mov
add
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
sldt
sub
xor
add
inc
add
xor
add
pop
add
xor
add
jo
add
mov
xor
add
mov
sldt
mov
sldt
rolb
cmp
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
mov
add
add
add
add
add
outsb
or
add
add
fadds
add
mov
add
add
add
add
jg
add
add
add
or
add
and
add
cmp
add
push
push
add
push
jg
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
rolb
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
or
add
add
add
mov
add
adc
add
inc
mov
add
js
add
add
add
loopne
add
add
add
add
les
add
movb
cwtl
enter
add
add
add
add
int3
add
add
into
add
add
iret
add
add
add
add
add
add
add
add
pop
push
add
add
add
flds
add
add
add
add
add
xchg
faddl
add
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
add
add
lock
add
add
add
repz
add
hlt
add
add
clc
add
add
cld
add
add
incb
add
incb
add
add
add
add
add
cwtl
add
add
add
lods
add
add
add
rolb
add
add
aam
push
add
add
call
add
add
add
add
add
cld
push
push
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
sbb
mov
add
sub
mov
pushf
ffree
mov
jne
ljmp
enter
xchg
orb
add
lods
aad
inc
add
rorl
and
pxor
lods
imul
test
push
in
nop
and
xchg
mov
movsl
sub
add
rorb
and
enter
dec
or
xchg
lods
jle
push
lret
xchg
mov
xlat
push
div
loop
mov
jmp
adc
je
mov
cmpsl
and
shlb
push
loope
xchg
add
rcrb
fwait
daa
imul
xor
arpl
fcmovnb
xchg
in
fists
ret
push
push
fdivrl
sbb
adc
int3
sub
sub
popf
shll
cmpsb
jnp
into
shll
inc
imul
adc
test
iret
xchg
and
shr
push
mov
lcall
aad
insb
sub
adc
sub
sub
or
das
or
loop
mov
fcoms
jns
pop
movsb
sub
sbb
cmp
lcall
std
insb
cli
sub
rcll
lods
daa
test
loope
daa
jmp
xchg
es
inc
mov
sbb
sub
pop
add
or
sahf
xchg
inc
lods
dec
cmc
jp
adc
idivl
cli
daa
mov
push
push
inc
ja
stc
sbb
jl
xchg
sbb
dec
in
movsl
mov
repz
pop
mov
xor
pushf
mov
add
and
mov
aam
shrl
mov
xor
pop
xchg
sbb
pop
into
aam
add
ficompl
sub
mov
jge
dec
daa
xchg
or
fnsave
xor
lea
scas
inc
jmp
pop
and
js
bound
cld
push
repnz
cmpsb
fisubs
daa
mov
cmpl
jne
xor
mov
repnz
je
aam
sub
in
into
jnp
int3
leave
leave
ds
mov
jle
fbld
push
notb
mov
xchg
mov
add
mov
movsl
sbb
es
sahf
sbb
cs
loope
pop
mov
mov
inc
loope
mov
imul
sbb
rorl
lcall
loop
inc
push
xor
loopne
stc
jle
sub
in
movsb
cmc
sahf
pop
out
or
cld
out
aad
fwait
inc
inc
icebp
jo
popa
shrl
inc
xlat
nop
inc
incb
rcrb
cmpsl
data16
lods
aas
aad
pop
movb
adc
inc
or
ss
repz
les
inc
and
loop
xor
add
push
stc
inc
mov
loope
out
mulps
scas
andnps
adc
pusha
jle
mov
sub
jge
inc
aam
fdivl
out
jl
xor
pop
dec
insb
adc
loop
and
and
or
xor
icebp
out
rcr
jg
cmp
and
and
push
std
jp
dec
jge
fstps
jl
ficomps
push
mov
push
inc
mov
lret
imul
jmp
mov
fcmovbe
cmp
cmp
lods
push
xchg
jno
outsl
xchg
or
sub
adc
or
jb
adc
inc
out
idivl
dec
leave
ja
mov
adc
jno
and
mov
mov
movsl
or
rcr
sbb
movsl
adc
inc
out
cld
push
or
into
addl
pop
xorb
andl
xchg
mov
xor
fcmovnbe
jge
or
jnp
cli
push
fbld
addr16
xorb
std
stos
clc
mulb
adc
add
out
mov
and
inc
push
mov
inc
push
scas
bound
aad
test
mov
leave
arpl
mulb
icebp
in
push
not
xchg
lret
cmp
sti
inc
gs
icebp
aad
pop
push
sub
push
imul
mov
xor
adc
sub
test
notb
mov
cwtl
insl
pop
lahf
divl
hlt
pop
daa
iret
mov
mov
das
mov
data16
jb
cmp
adc
jp
lcall
js
or
xorb
push
arpl
inc
push
rorb
xor
incb
fisubl
add
outsl
repz
add
jae
add
je
sub
or
out
jg
jae
and
dec
fucom
pop
fildll
push
sbb
out
xchg
loopne
ffreep
daa
push
and
clc
cmpsb
insl
sbb
adc
jl
inc
mov
pop
mov
mov
mov
push
cmp
jnp
icebp
adc
xor
and
cwtl
jecxz
add
add
insl
dec
fwait
jmp
test
lcall
push
push
je
pop
orb
mov
and
cmpsb
in
pop
xchg
or
mov
out
and
xor
scas
pop
dec
ficomps
inc
int
repz
rorl
pop
mov
ja
dec
lods
in
negl
scas
jne
mov
int
lret
sbbb
jl
cmp
dec
mov
popa
in
ljmp
mov
lock
scas
add
insb
call
dec
xchg
push
sbb
int3
inc
notb
xchg
in
and
movsb
lahf
xor
outsb
fldenv
je
outsl
jg
jp
mov
jge
and
aas
cmpsl
fbld
and
sub
insb
mov
rsm
push
test
std
stc
ficompl
sarb
das
xchg
hlt
inc
xchg
cmp
mov
adc
sbbb
xor
jo
sub
insb
pop
mov
mov
jmp
sbb
ret
cs
pop
hlt
les
sbb
inc
mov
push
rcr
and
mov
or
or
push
dec
stos
mov
shll
and
adc
xchg
pop
pop
adcb
lret
xlat
cmp
aam
cmpsl
pop
inc
inc
cld
bound
add
pop
cs
icebp
inc
test
mov
dec
outsb
lret
push
xlat
mov
test
push
loope
adc
imul
ds
inc
dec
inc
loop
imul
mov
inc
inc
adc
jno
mov
stos
cmp
pop
xchg
call
add
dec
mov
hlt
icebp
int3
and
sbb
dec
mov
cmc
test
and
mov
push
sahf
shr
out
xchg
pop
repz
rclb
sarl
loope
lret
or
pop
into
mov
mov
xchg
cmp
fcoms
fucom
ss
push
test
stos
in
jo
daa
mov
mov
ds
cmc
fcmovnu
mov
jb
jg
fwait
divl
js
mov
outsl
ljmp
aaa
mov
aas
arpl
scas
mov
pop
stc
pusha
shrl
and
out
push
xchg
push
inc
adc
sbb
fwait
out
add
and
xchg
xchg
ljmp
xchg
cmc
nop
adc
xchg
jnp
push
sbb
rclb
ljmp
repnz
fistl
mov
and
or
cmpsl
adcl
mov
in
adc
add
fstpt
adc
out
xorl
add
mov
out
iret
fs
lahf
xchg
loopne
int3
inc
inc
xchg
or
mov
aaa
leave
and
adc
lods
dec
mov
mov
or
dec
dec
pushf
test
les
rorl
xor
sahf
test
add
mov
pop
mov
sub
cmc
fdivp
xchg
out
adc
jnp
int
dec
idivb
cmpsb
cmp
jno
leave
lock
test
xchg
inc
movsb
ja
add
ljmp
jmp
popf
dec
stos
jecxz
mov
dec
and
in
push
xchg
outsl
sub
nop
jecxz
pop
pop
lea
mov
cmp
dec
mov
gs
mov
hlt
sarb
in
add
xchg
pop
ficompl
rol
leave
xchg
popf
cmp
mov
fists
adc
dec
sahf
inc
das
enter
add
dec
jl
adc
outsl
or
jo
aad
inc
xchg
cmp
cli
fwait
jge
push
pop
int3
lret
cmp
push
xchg
mov
dec
pop
pop
inc
adc
movsb
cs
sbb
sub
jbe
sar
lods
jb
adc
dec
sub
movsb
lcall
mov
in
gs
repz
and
mov
sbb
cmp
push
adc
mov
push
sub
push
cltd
cwtl
imul
xor
ja
xchg
mov
pop
das
cmp
lock
insl
lods
repnz
cmp
imul
add
inc
es
jns
out
xor
add
scas
loop
cs
push
movsl
or
es
jb
xchg
aad
cli
mov
test
xor
test
movsl
jmp
push
ficomps
and
mov
dec
xor
stc
and
pop
dec
adc
xchg
test
push
add
xlat
loopne
fstps
and
arpl
jo
lods
lea
std
inc
or
test
fidivs
lcall
cmpsl
jge
push
cmpsl
or
sbb
add
dec
test
mov
in
rcr
pop
add
xor
pop
push
scas
mov
and
jg
imul
rcll
and
mov
lock
in
mov
jp
sub
mov
cwtl
fs
sbb
xor
sub
es
mov
cmp
sub
cmp
jb
enter
roll
xchg
or
je
ss
push
adc
xchg
inc
fstl
push
adc
add
aam
rorl
imul
mov
lcall
fldcw
out
mov
jo
enter
xor
sub
adc
std
pop
in
add
je
xor
inc
mov
dec
pusha
fldcw
jp
pop
sahf
popf
jge
fs
cmp
sbb
rorb
mov
mov
aam
sub
cltd
inc
dec
cmpsb
loope
mov
fistpll
iret
or
mov
dec
insl
js
loopne
jl
in
je
mov
sub
xchg
and
lret
sub
es
inc
fs
pop
fidivl
lret
movsl
ss
xchg
mov
in
push
ja
jbe
movsb
mov
jg
mov
stc
int3
cmpsl
stos
rcl
loop
pop
outsb
add
dec
mov
inc
jge
push
pop
or
jle
jnp
imul
and
push
push
loope
mov
insb
addb
outsl
cltd
movsb
cwtl
or
add
jmp
jbe
dec
int3
mov
xor
mov
jmp
ja
or
rclb
in
jg
xor
cmpsl
imul
mov
inc
stos
sub
xchg
call
orb
insb
pop
repnz
mov
sbb
int
imul
ds
call
pop
sbb
dec
sbb
add
icebp
or
leave
inc
and
movsb
sti
out
and
add
js
mov
pop
cltd
ret
pop
dec
xchg
addr16
iret
ja
fisubs
lods
call
cmp
das
pop
push
int
insb
movsb
cmp
icebp
lea
mov
mov
js
fnstenv
mov
mov
jnp
js
bound
and
hlt
xor
push
cltd
sarb
pop
cltd
das
lea
aad
add
daa
lahf
jmp
in
test
mov
and
daa
imul
mov
mov
sbb
imul
es
add
mov
lret
cs
or
mov
enter
lods
cmp
out
mov
jecxz
repz
push
mov
and
mov
pop
mov
clc
aas
jmp
jg
sub
fcmovnbe
int3
repnz
and
shrb
jbe,pt
clc
cmp
imul
cmp
shr
arpl
or
sbb
pop
inc
out
sub
jbe
std
loop
mov
movsl
pop
nop
clc
or
dec
jne
in
hlt
sbb
mov
loope
jg
insl
shrl
adc
iret
jecxz
nop
mov
xor
push
inc
push
pop
xchg
test
lods
add
fldcw
mov
leave
add
jmp
test
mov
mov
movsl
mov
pop
mov
cmc
scas
ret
daa
mov
mov
fcoms
loopne
mov
icebp
loope
inc
loop
outsb
sbb
add
call
or
testl
add
cld
and
sub
inc
enter
cwtl
jl
popf
in
cmc
inc
in
movsb
push
in
push
ret
mov
mov
mov
jle
adc
insb
jg
mov
test
flds
mov
dec
push
js,pt
and
pusha
push
xor
lock
inc
cli
cld
iret
subb
mov
xchg
cs
pop
movsb
dec
scas
rorb
cs
inc
ja
test
nop
das
bound
mov
or
mov
add
sub
dec
mov
leave
lea
or
sbb
sub
les
push
push
in
dec
xchg
add
and
cld
gs
es
pop
fcom
leave
sahf
xchg
shr
mov
inc
mov
pop
pop
pop
insl
es
addr16
xor
ss
mov
call
mov
test
pop
pushf
rorl
sub
mov
jae
cmpsl
sahf
sub
jmp
cmp
ds
repnz
lea
pop
imull
lahf
fiaddl
in
or
mov
es
into
cmpb
leave
lahf
xchg
aam
in
xor
mov
mov
mov
sub
pop
and
mov
and
gs
out
xlat
stc
call
idivb
maskmovq
notl
je
movsb
mov
inc
sub
adc
fsubrs
test
lods
outsb
gs
jne
inc
xor
mov
cmp
daa
or
stc
add
enter
sbb
imul
cmp
cltd
rcll
ret
das
xchg
or
and
mov
pop
int
cmp
fwait
in
popa
rcr
inc
xor
sbb
mov
fs
fs
orl
in
cltd
popa
mov
mov
shll
lods
outsl
push
insb
pop
fcom
adc
es
sbb
roll
inc
pop
add
inc
out
mov
test
cmp
rorb
xlat
pop
mov
xor
fwait
shrl
cli
addr16
in
jno
dec
xchg
std
inc
push
mov
jbe
jl
push
mov
nop
es
int3
jb
push
out
and
push
jge
mov
push
popf
repnz
push
cld
mov
mov
jg
jns
lcall
mov
push
push
pushf
lahf
inc
dec
repnz
int
call
fmul
out
mull
and
inc
aaa
out
mov
sbb
bnd
out
xor
fimull
adc
ss
jg
shl
iret
mov
mov
cs
daa
enter
mov
xchg
pushf
push
sub
sarb
js
stos
pop
scas
call
in
sbbl
mov
pop
ljmp
cmp
cmpsb
xchg
loop
jnp
or
fsts
testb
xchg
movsb
xchg
lods
sarb
sti
mov
notl
or
cmp
xor
ret
sub
sbb
aad
pop
push
pop
std
stos
adc
adc
xor
test
pop
jl
add
xchg
adc
daa
pushl
add
cwtl
outsl
leave
pop
cmc
jo
iret
xchg
dec
sahf
clc
xorb
mov
es
dec
cmp
and
and
jbe
fsubrl
loopne
mov
adc
xchg
lret
add
jne
jp
jbe
push
stc
or
jecxz
mov
hlt
add
jle
pop
cmpsb
mov
stos
cmc
xchg
dec
pusha
in
or
xor
or
hlt
mov
cmp
or
cmp
das
inc
out
adc
sub
ja
add
sub
imulb
add
pushf
mov
push
push
mov
pop
imul
adc
repz
inc
faddp
push
jns
std
sbb
int3
into
fstpl
test
movsl
mov
iret
rcl
ss
lock
std
pusha
movl
xchg
mov
adc
or
pusha
add
ss
popf
sub
mov
mov
adc
test
xchg
jecxz
repz
aam
sbb
add
and
imul
andl
push
cmpsl
inc
dec
add
mul
inc
sub
fwait
ja
ja
ja
fwait
sub
dec
shl
pop
test
adc
push
inc
and
adcb
shlb
faddl
test
ljmp
js
pop
cmc
in
dec
hlt
pop
shll
push
push
sbb
aaa
std
xchg
in
test
cmp
jmp
aas
test
sub
pop
inc
lods
mov
lods
sti
cli
test
cmp
or
and
ss
sub
mov
mov
mov
imul
push
out
mov
idivb
js
je
lods
imul
lret
add
and
mov
xor
add
lret
inc
mov
lret
int3
outsb
mov
fists
leave
or
insb
shl
fwait
mov
shr
scas
jnp
mov
enter
or
jae
xor
fdivrl
loop
xor
mov
lods
jne
jmp
pop
cmp
iret
pop
aas
das
jmp
xlat
xor
or
test
shrb
iret
mov
shrl
jmp
lret
mov
inc
sub
cmp
push
addl
lcall
cmp
mov
push
jo
out
cmp
mov
xor
nop
sbb
jne
outsb
pushf
or
push
mov
clc
or
imul
into
xor
pop
repz
and
cmpsb
dec
das
pushf
ret
mov
lods
pop
pop
jl
idivl
lret
pushf
inc
iret
sub
pop
icebp
gs
push
outsl
dec
mov
rcl
add
adc
jmp
outsb
ret
cmp
clc
rolb
mov
pop
push
iret
push
mov
dec
add
les
push
pop
pop
rclb
lea
mov
and
xchg
aam
mov
push
je
aaa
xchg
adc
shll
and
dec
subb
pop
fisubs
nop
outsl
jecxz
xor
mov
cli
cmp
popa
lret
test
cmp
pop
repz
mov
sbb
mov
lret
or
outsb
cmp
dec
imul
jo
repz
mov
jmp
scas
cmp
je
aaa
sbb
fs
push
cmp
fistl
aam
push
mov
sbb
dec
out
negb
mov
gs
pop
xchg
xor
lahf
and
push
adc
dec
je
.byte
sub
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
add
pop
movswl
add
xor
sub
mov
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
fbld
movswl
pop
sub
mov
add
jmp
out
cld
test
or
add
addl
jle
sub
mov
mov
mov
sub
mov
cmp
jne
push
sub
pop
popf
mov
add
movsb
stc
inc
pop
loopne
fidivs
sarl
lahf
cwtl
fstl
mov
jmp
sti
and
push
mov
adc
and
in
sarb
pop
test
adc
mov
cmpsl
arpl
dec
adc
jae
lret
pop
xorb
add
lods
into
repz
lahf
lahf
add
mov
jg
fisubl
mov
aam
adc
adc
or
and
add
popa
flds
mov
mov
sub
dec
mov
js
jo
adc
pop
pop
lds
lret
pop
adc
pop
sbb
xchg
dec
mov
cmp
lcall
mov
or
mov
lods
xchg
cmp
lods
mov
pop
loopne
push
sbb
cltd
xor
cld
rcrl
aam
xchg
push
xor
and
lods
sub
stc
or
mov
adc
cmp
shll
mov
rcll
aam
clc
fcomps
ja
stos
sbb
cmp
loop
loop
rol
mov
lcall
jae
je
in
das
pop
int3
mul
pushf
xchg
popf
mov
push
mov
stos
jbe
push
push
or
fidivs
xchg
push
pop
sbb
xor
push
cltd
and
mov
popa
out
aas
sbb
dec
popa
divb
rcrb
cli
sti
popf
inc
repz
hlt
or
sbb
cmp
and
popf
mov
sub
loope
sbb
or
je
aas
sbb
pusha
xor
cmc
or
and
dec
cmp
jo
xchg
cmp
insl
xchg
inc
mov
inc
mov
add
lds
push
es
mov
inc
add
dec
or
or
sbb
inc
lock
or
aas
sbb
fmuls
pusha
ljmp
add
mov
cltd
jle
jl
ret
sarb
arpl
out
sub
stos
mov
push
cmp
xchg
xchg
jo
aam
jp
outsl
mov
adc
pop
push
cwtl
cmp
jb
push
ja
push
or
push
aad
jb
sbb
imul
in
jp
cmpsb
rorb
cmp
popf
xchg
outsl
pop
imull
push
pop
gs
bound
jno
cli
and
push
popa
pop
mulps
rorb
enter
hlt
jge
push
adc
dec
cmc
mov
jo
out
test
xchg
addr16
dec
pop
out
cmp
cmp
bound
push
push
ret
jnp
mov
insl
or
test
pushf
xchg
in
cli
outsb
pushf
xchg
jb
pop
imul
xor
repnz
push
cwtl
addl
lods
add
cmpsb
aad
mov
pop
in
out
push
inc
mov
orl
pop
jmp
inc
outsl
je
jp
xlat
test
add
fldenv
dec
repnz
add
jl
ret
xchg
testl
lret
sub
fisubl
dec
dec
xlat
mov
jl
ret
mov
push
jl
lret
sub
pop
hlt
push
jnp
push
jnp
push
fisubs
jge
and
inc
pop
jl
jae
jl
fiaddl
jl
in
pop
mov
hlt
jge
push
push
jmp
dec
jnp
stos
jl
or
out
or
mov
push
sar
mov
add
out
push
jnp
std
sub
out
push
movsb
and
jl
arpl
pop
out
push
push
in
jl
ds
jl
mov
push
xchg
dec
xchg
push
cmc
push
in
insb
pop
out
push
movsb
enter
xor
pushf
jnp
pop
jmp
clc
fwait
aam
movsb
enter
gs
mull
lods
push
jnp
add
add
lret
in
jnp
pop
mov
push
out
push
add
jl
shlb
arpl
ja
icebp
push
lea
push
mov
inc
pop
mov
or
out
push
aad
xchg
outsl
push
cs
jge
repnz
cs
push
mull
add
jl
fs
outsl
leave
fs
push
out
push
push
fs
jecxz
out
push
fimuls
pop
dec
push
repnz
test
jmp
clc
fwait
aam
movsb
xchg
jo
jnp
lods
jo
jae
push
jnp
push
jp
add
jae
push
jg
clc
ljmp
bound
outsl
jnp
bound
push
jp
push
jnp
push
cs
cs
add
push
jle
nop
ja
jp
shrb
and
lods
dec
mov
loope
mov
imul
cmpsb
sbb
imul
call
push
mov
imul
cs
push
aad
or
jle
aas
mov
gs
cmp
sbb
lods
dec
mov
sub
mov
roll
mov
dec
inc
pop
push
gs
cmp
sbb
lods
dec
mov
call
and
imull
jnp
inc
pop
push
gs
lds
sbb
lods
dec
mov
call
aam
dec
fdiv
xor
cs
add
push
lods
negl
outsl
jl
out
jo
aad
or
jle
aas
mov
inc
pop
push
gs
out
out
jae
jnp
cwtl
popa
jnp
push
shr
scas
mov
shll
dec
jmp
in
xlat
repz
int3
xor
sbb
imul
imul
adc
das
in
inc
sub
in
add
pop
imul
imul
and
mov
add
out
push
jnp
stos
or
jb
jl
fsubrs
jnp
push
jnp
outsl
jl
js
mov
inc
negb
lret
clc
outsb
jnp
add
mov
bnd
outsl
jnp
add
mov
adc
outsb
jnp
add
outsl
jnp
loop
jnp
push
mov
out
fwait
out
mov
testb
jl
arpl
sbb
and
call
repz
nop
fwait
imul
and
outsl
mov
into
outsb
outsl
cmp
insl
testb
clc
movsb
es
fimull
xor
pop
outsl
jl
in
jns
out
and
lock
xor
std
fsubrs
ret
ds
mov
lcall
in
mov
out
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
jo
arpl
jo
jnp
imul
jl
out
push
jnp
dec
test
inc
mov
in
cli
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
sahf
cli
jb
inc
mov
jge
hlt
pop
clc
inc
add
out
int
cmp
sbb
cmpsb
pop
outsb
and
stos
stos
inc
add
nopl
imul
sbb
js
adc
in
mov
pop
xor
imul
inc
cmc
cmp
mov
out
out
inc
js
ret
ret
mov
mov
xchg
mov
nop
or
pop
cmpl
push
repnz
inc
pop
sti
mov
or
inc
fwait
shr
test
push
cmpsb
inc
idivl
sub
jno
mov
les
lods
or
test
push
xchg
je
jl
inc
iret
aas
jge
dec
jnp
cmp
xlat
in
or
fwait
inc
sbb
jno
stc
das
cwtl
mov
pop
cmc
and
dec
scas
and
add
push
lock
std
jnp
in
out
ret
enter
adc
movl
mov
cmpsb
or
sub
xlat
fiadds
mov
jno
dec
hlt
ret
and
mov
ljmp
jno
inc
pop
fcmove
xchg
dec
sbb
je
jp
xor
sbb
add
mov
loopne
adc
mov
nop
hlt
adc
nop
inc
mov
inc
adc
stos
sbb
xchg
add
dec
mov
cmp
dec
addr16
adc
fldt
mov
rolb
in
insb
push
add
xchg
adc
pushf
imul
cmp
add
and
xchg
jo
or
subl
jle
mov
ja
shll
cs
xchg
add
jl
mov
xchg
adc
cmp
mov
xchg
cwtl
stc
fwait
jge
cmpsb
es
push
fsubrl
mov
cmpsl
xchg
jle
pop
mov
mov
lods
push
push
into
jae
stos
arpl
out
dec
push
xchg
mov
xor
outsl
jmp
sarl
inc
add
repnz
lock
mov
dec
add
stos
pop
in
pushf
mov
dec
mov
add
pop
in
int3
addl
pop
xchg
loope
sub
aaa
cmp
push
fdivrs
inc
int3
fwait
sbb
outsb
push
ficomps
xchg
adcl
sbb
adc
jl
mov
in
push
pop
outsb
push
subps
jmp
push
xchg
cmp
sbb
ss
or
js
cmpsb
sbb
sbb
sbb
mov
std
cmp
add
pop
jns
out
cli
mov
push
outsl
divb
and
pushf
lds
pop
popf
and
setl
repz
loope
cld
cmp
and
das
out
adc
mov
inc
mov
test
mov
imul
in
andb
add
add
or
add
add
inc
add
xor
pushf
loopne
add
inc
inc
add
sbb
add
sbb
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
add
sbb
add
push
sbb
push
add
add
sbb
add
jno
push
add
sbb
add
jle
push
add
sbb
add
mov
push
add
push
add
push
push
add
push
add
push
push
add
sbb
push
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
push
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
cmpsb
push
push
add
add
add
add
aam
push
add
add
add
push
push
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
gs
popa
insb
jne
inc
js
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
and
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
js
mov
mov
add
jg
incl
incl
incl
incl
incl
incl
push
add
decl
incl
push
lock
incl
ud0
push
push
inc
add
add
incl
cld
int3
ror
add
add
jg
cld
cld
cld
ror
mov
add
add
cld
push
or
mov
add
add
stc
cltd
nop
add
mov
add
add
stc
stc
stc
nop
adc
add
ud0
stc
push
cltd
add
and
incl
push
add
cltd
nop
and
ud0
push
lock
nop
and
ud0
push
push
add
addb
add
incl
add
add
incl
incl
add
incl
incl
incl
incl
push
add
add
add
jg
push
incl
jg
push
clc
jo
add
add
push
xchg
add
add
jg
push
jo
add
add
jg
push
add
add
add
ja
ja
ja
ja
ja
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
add
pop
lock
aas
lock
jg
add
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
call
mov
sbb
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
ret
fbld
cmp
mov
sbb
gs
pusha
mov
cmp
into
loope
push
call
mov
lcall
dec
add
cmp
sbb
and
dec
sbb
jl
jo
sbb
dec
rolb
sahf
insl
mov
dec
fbstp
cmp
faddl
xchg
sub
inc
xchg
loop
mov
outsb
push
xor
divl
add
and
call
imul
std
mov
push
and
sub
mov
add
test
mov
repnz
test
xchg
jbe
sbb
out
int3
imul
mov
sbb
jmp
out
jo
xor
push
and
ja
outsl
sbb
and
shlb
stc
jp
sub
and
mov
and
xchg
out
loopne
cmp
mov
repz
movsb
cmpsl
loope
adc
and
icebp
pop
sub
cvtps2pd
shlb
dec
jl
add
into
mov
fcmovnbe
jecxz
and
pop
sbb
btc
mov
popf
icebp
orb
aad
lret
cmp
mov
mov
loopne
int3
cwtl
sub
int3
in
jp
add
iret
imul
inc
xchg
jne
test
mov
gs
sub
add
and
stos
lcall
mov
hlt
in
das
orb
push
stc
in
jp
repz
pop
arpl
adc
adc
rcrl
dec
jmp
add
pop
push
jg
xor
sbb
push
xor
add
int3
jmp
call
pusha
push
movsl
nop
fcompl
mov
out
test
xchg
add
and
lahf
add
mov
push
fiadds
shll
loop
mov
xchg
cmpsb
clc
push
xor
push
add
push
popl
xchg
lret
daa
testl
in
shll
into
test
dec
or
rolb
cwtl
fcoml
mov
adc
add
dec
adc
clc
mov
lret
int3
hlt
mov
int
sub
aaa
mov
inc
mov
jecxz
mov
cmove
add
pop
sarb
out
das
aam
andl
jg
dec
cmpsb
dec
jnp
or
int3
and
icebp
daa
cwtl
xor
imul
add
stos
adc
pop
pop
dec
adcl
push
pop
mov
cltd
add
lret
lret
stos
sbb
popaw
lds
out
and
sub
push
mov
xor
fnstcw
dec
mov
aad
pop
sbb
je
movsl
aam
scas
iret
call
pop
jp
sub
into
mov
fnstsw
jnp
outsl
pop
mov
pop
outsl
xchg
cmp
jb
out
jnp
xor
fadd
sbb
rcr
insl
iret
pop
into
add
sti
and
imul
cmp
sub
cld
lds
pop
test
sbb
push
add
idivl
mov
pushf
jl
or
adc
xchg
je
mov
roll
cmc
cmp
inc
dec
jg
fs
inc
lret
std
test
popa
rcll
jns
sahf
jg
shlb
outsl
leave
mov
xchg
or
mov
rcrl
lret
xchg
fwait
jmp
cmp
push
cmp
fbstp
xchg
pop
fsqrt
mov
cmp
sub
repz
adc
mov
pop
stos
mov
cmc
inc
lret
insl
push
mov
adc
push
out
imul
mov
jne
lds
xor
cmp
xchg
mov
xlat
dec
mov
out
cmp
subl
fiaddl
jo
xchg
cmp
push
inc
leave
mov
hlt
sbbb
dec
sbb
js
sbbb
flds
test
call
mov
mov
cmp
adc
adc
gs
jb
int3
xor
iret
js
and
gs
mov
outsb
jmp
lahf
pop
in
in
mov
popa
cmp
mov
jbe
repnz
aas
loop
stc
inc
lcall
iret
sahf
cmp
push
ja
js
push
jae
mov
in
aam
sub
mov
lret
or
xor
popf
in
pop
xor
lahf
mov
rcll
in
jo
and
dec
bound
in
inc
lods
xor
push
xchg
sbb
ret
neg
insl
inc
cmc
push
push
sbb
jae
shll
adc
std
inc
adc
jle
lcall
or
or
aas
out
jnp
mov
inc
fsub
and
mov
lods
sbbb
cmpsl
sbb
jg
push
push
inc
mov
fisttpl
lahf
inc
std
mov
and
dec
nop
xor
push
inc
inc
popa
loop
out
xchg
push
leave
dec
in
sahf
clc
mov
sarb
lcall
pusha
loope
sbb
enter
lds
adc
je
push
xchg
int
push
rclb
call
dec
inc
and
inc
and
outsl
jl
roll
sahf
or
rcpps
push
jno
jle
ja
gs
or
xchg
inc
in
aaa
mov
inc
mov
add
aad
fmull
leave
out
push
fwait
in
stc
movsb
ds
outsl
xchg
rclb
mov
inc
xchg
mov
pop
mov
je
push
xchg
js
mov
sub
aam
lds
gs
mov
stos
cltd
push
cmpsb
xorl
sbb
in
or
sbbl
add
push
mov
arpl
cmp
xchg
jb
mov
or
in
sub
mov
inc
orb
shll
lea
loopne
cmp
lcall
add
movsb
jmp
add
add
fildl
out
js
adc
mov
xchg
hlt
jbe
cmp
push
add
outsb
sub
das
push
sbb
jno
fadd
add
push
mov
rorb
lret
jge
mull
stos
adc
pop
stos
scas
mov
int
repnz
sub
adc
xlat
testl
lds
lahf
mov
inc
stc
ss
jne
int3
dec
dec
add
or
out
out
ljmp
shlb
xchg
mov
lcall
fistps
xchg
ror
mov
jae
inc
jle
mov
and
mov
add
sarb
clc
push
nop
cmpb
movsl
fnstenv
aas
movsb
pop
mov
push
into
dec
clc
jnp
xchg
sub
loope
mov
inc
or
ljmp
sbb
xchg
jno
pusha
cmpsl
inc
hlt
mov
iret
lds
mov
jecxz
and
push
push
sub
dec
sbb
cld
mov
outsl
lret
add
dec
xchg
rcrl
fnstsw
ficoms
push
ret
and
xor
push
xchg
xor
clc
out
mov
stos
pushf
dec
add
aam
int
inc
loopne
and
repz
adc
and
mov
int3
outsl
pop
jne
push
sub
sbb
cmp
dec
mov
in
cmp
sbbl
sbb
mov
pop
mov
arpl
cmc
pop
cmpsb
sub
mov
and
jp
xchg
sub
cmp
stos
test
sbb
and
pusha
add
xor
add
ss
or
iret
xchg
push
lahf
inc
gs
pop
movsl
cmp
lods
and
adc
pop
cs
movsb
push
rcrb
clc
imul
lret
xchg
inc
sets
popf
mov
std
inc
lods
mov
mov
shr
ret
mov
outsb
outsb
and
out
pop
out
add
jecxz
inc
sbb
out
lret
shll
lods
or
fcmovu
sub
cwtl
and
lahf
push
sub
add
sub
lds
mov
out
call
jle
mov
inc
fidivrl
sub
and
mov
popf
and
fidivrs
test
icebp
aad
xchg
aam
jg
cmp
push
push
adc
jno
xor
inc
inc
in
outsb
les
fwait
xor
inc
jle
push
pop
or
push
ret
js
pop
sbb
repnz
fnsave
rcll
sbb
adc
jnp
out
dec
sti
test
lret
pusha
push
mov
and
pop
adcl
icebp
movsb
rorl
outsl
lock
mov
nop
jmp
arpl
add
pop
mov
cmpsl
adc
ds
arpl
xor
mov
fstl
mov
jecxz
push
imul
sbb
data16
sub
stos
push
cmp
mov
push
loopne
ljmp
dec
xchg
xor
xchg
fsub
ljmp
pop
pop
mov
pop
fldenv
into
xchg
andb
test
stc
rcr
stc
into
test
push
and
mov
je
and
fstpl
inc
sahf
lock
jnp
mov
je
decb
mov
mov
aad
jb
out
or
jge
nop
pop
jb
sbb
push
int
imul
pop
xlat
mov
xchg
scas
fistpl
aad
in
or
iret
pop
pop
mov
push
je
repz
mov
loopne
ficompl
xor
jle
xlat
sti
lahf
aaa
sub
cld
adc
sbb
insl
out
adc
popa
mov
lret
pop
movsb
int3
dec
pop
mov
faddl
scas
xlat
inc
dec
xchg
popa
xchg
gs
iret
cmc
lock
cld
jne
dec
hlt
mov
push
mov
js
cmp
xor
test
cmp
cld
dec
adc
test
pop
xor
pop
gs
fcoml
ret
sbb
add
xor
adc
or
sti
push
pushf
and
loop
nop
push
repz
arpl
lods
jmp
add
add
and
ret
bound
pop
add
lods
adc
insl
stos
mov
lea
and
and
inc
mov
sub
cmp
xlat
pop
adc
lret
push
fwait
hlt
pop
jb
xor
out
and
inc
mov
movsb
mov
js
push
push
mov
push
inc
mov
aas
jae
pop
push
icebp
ret
xchg
test
pop
mov
lahf
jb
xor
fs
jecxz
ds
push
les
out
in
ret
add
jecxz
jae
shll
inc
inc
or
jecxz
sbb
sbb
sub
insb
loopne
xchg
lahf
cs
fnstcw
xchg
xchg
add
stc
dec
insl
push
movsl
jl
lds
pop
cwtl
push
lcall
add
add
lret
push
fcoms
loopne
and
ficoms
lock
xchg
jg
pop
pop
or
loopne
dec
push
xor
dec
pop
xor
and
add
jae
shll
pop
fdivrl
mov
inc
daa
in
je
or
rolb
lret
xchg
mov
xchg
repnz
xor
cmp
fwait
mov
and
jnp
jp
push
cld
jb
sub
jbe
and
inc
and
test
ret
sar
out
pop
inc
push
aam
imul
mov
mov
adc
add
jns
pop
xor
nop
ss
add
jg
fisubl
loope
sahf
idivl
cs
pop
das
lods
in
js
out
dec
cmpsl
xor
push
dec
mov
jae
negl
sub
adc
enter
cmp
sbb
jne
repnz
test
jle
or
pop
cmpsb
std
xor
and
cmp
out
sahf
inc
inc
sub
jae
daa
push
pop
sbb
nop
pop
xchg
fldcw
jg
push
or
movb
popa
lret
fistpl
in
jl
cmpsl
xchg
pusha
mov
cmp
jmp
lods
fsubrl
outsl
dec
jnp
icebp
mov
lret
inc
and
cmp
mov
xchg
mov
ret
jp
fs
dec
test
mov
push
inc
sub
inc
sti
xchg
jecxz
jno
lock
inc
cli
push
xor
mov
mov
int
jg
pop
daa
outsb
icebp
xchg
inc
xor
lea
stos
push
jmp
jmp
in
std
into
lock
inc
out
cmpsb
jmp
stos
repnz
stos
mov
and
outsb
pop
divl
xchg
push
sub
addb
xchg
fisubl
sub
bound
popa
and
push
rclb
xchg
std
pop
fisttpl
mov
dec
in
cwtl
mov
adc
sbb
push
or
mov
sub
shlb
sbb
imul
push
pushf
outsb
ljmp
sub
inc
nop
shll
ficompl
pop
cmp
mov
shlb
jb
testl
xchg
fsts
jo
lock
daa
fsubr
or
pop
add
pop
adc
dec
loope
lcall
pop
out
push
inc
divb
jmp
mov
pusha
dec
cmc
jge
sahf
push
mov
cwtl
jae
roll
pop
push
xchg
out
inc
imul
movsl
dec
lods
cmp
mov
lret
push
xchg
pop
mov
cmp
jnp
add
cmpsd
mov
cs
sti
movb
xor
xchg
xchg
inc
mov
inc
pop
mov
pop
mov
fistpll
imul
jl
stos
lds
pop
rcll
jns
pop
lock
outsl
das
ss
out
shl
jmpw
mov
dec
or
pop
dec
cmp
cld
rorb
xor
xchg
in
fucomip
cmc
mov
jnp
das
jo
loop
mov
popa
sub
cmp
dec
inc
sbb
mov
mov
mov
push
xor
test
inc
mov
and
movsl
addr16
or
xchg
mov
add
out
cld
fcomp
and
ljmp
mov
pop
sub
mov
push
lret
stos
inc
sbb
lods
jbe
enter
mov
test
mov
jbe
shl
das
mov
sub
inc
mov
daa
gs
ss
aad
push
dec
pop
xchg
ljmp
lea
int3
mov
dec
push
out
insl
aas
outsl
dec
cmp
xor
mov
in
sub
insl
jmp
cli
out
dec
movsb
sub
scas
jge
dec
out
arpl
aas
sbb
adc
adc
pop
rcrb
lods
fstpl
mov
out
mov
lret
out
out
or
xor
adcb
push
cmp
cmp
jge
leave
loope
loope
repnz
inc
jl
mov
outsb
and
out
mov
addb
mov
jmp
xor
das
stos
and
add
fistpll
cmp
jbe
scas
push
jmp
push
es
adc
dec
mull
add
popf
inc
sbb
sbb
mov
push
or
jl
int
or
cmpsl
repz
sbb
push
push
add
out
xlat
mov
inc
sub
xor
in
xchg
pop
outsl
mov
inc
pushf
leave
and
cld
xchg
mov
jns
aaa
arpl
aaa
cs
adc
jno
pop
nopl
push
inc
jp
orl
cltd
xor
bound
and
pop
inc
xchg
shlb
cmpb
mov
inc
mov
inc
or
xlat
test
mov
or
xchg
sbb
stos
mov
adc
sahf
outsl
xor
fisubs
fildl
mov
stos
mov
sti
xchg
jecxz
inc
mov
mov
fwait
int3
repz
int
inc
and
mov
loopne
imul
dec
sbb
lret
fidivrs
pop
dec
les
jae
pusha
sub
or
cmp
addr16
push
pop
cmp
mull
ljmp
mov
push
jo
imul
imul
imul
mov
xor
aaa
test
xchg
jb
dec
cs
inc
add
shl
mov
adc
test
xchg
xor
ja
mov
stos
lret
pop
inc
rcl
out
xchg
pop
iret
pop
insl
pop
sub
dec
imul
hlt
cli
cmp
out
icebp
enter
mov
mov
fildl
xchg
push
adc
xchg
mov
es
imulb
jbe
xor
cmpsb
xchg
int
ljmp
cmp
aad
xor
pop
in
mov
cmp
cmc
pop
or
push
push
sbb
mov
or
pop
mov
addb
test
lsl
mov
ss
push
push
fsubl
jno
rcr
mov
into
mov
mov
jns
add
repz
mov
into
daa
mov
mov
jo
xchg
pushf
lret
mov
jb
cmp
das
aam
xchg
mov
pop
add
outsl
lret
aad
lds
into
inc
into
test
fs
out
std
inc
inc
mov
out
repnz
test
cmc
repz
xor
cwtl
jae
test
pop
ret
xchg
pushf
cltd
imul
xor
jnp
ja
mov
gs
jmp
inc
dec
jae
pop
pop
jl
cmp
movsb
int3
stos
cmp
movzwl
bound
test
jl
cmp
jge
jmp
cli
notl
icebp
flds
aas
cmp
inc
sub
add
add
jge
ds
das
cld
lock
lret
adc
xchg
gs
sub
cltd
xor
inc
mov
jno
mov
out
xor
lret
into
mov
sbb
lret
js
lret
pop
push
jp
jp
adc
mov
test
xor
jae
int
insl
stc
mov
stc
sti
ss
loop
mov
je
pop
stos
and
test
adc
jp
cmp
add
or
pop
adc
das
mov
jp
in
dec
xor
dec
pop
lcall
les
ljmp
mov
inc
ljmp
sub
not
mov
pushl
ja
popf
pop
push
pop
and
icebp
add
push
push
dec
mov
les
adc
mov
push
dec
rcrl
or
je
xchg
jno
ss
mov
adc
test
pop
enter
movsl
jne
mov
push
test
movb
inc
pop
inc
pop
movsb
or
pmullw
add
mov
pop
sub
push
cmc
shrb
mov
in
loope
rorl
mov
adc
andl
cmp
ret
xor
sub
push
frstor
int
jmp
in
lret
adc
std
xor
sbb
xlat
adc
cmp
lcall
decb
jmp
add
out
or
rclb
rcrl
mov
lea
push
daa
mov
sbb
stos
test
in
sbb
sub
cs
insl
dec
push
ja
xor
sub
arpl
mov
mov
pop
lock
mov
xchg
pusha
mov
inc
shlb
lds
push
out
pusha
dec
repnz
inc
in
dec
stos
mov
sbb
rclb
imul
ret
dec
pop
scas
lahf
orl
roll
daa
popf
popa
sbb
loope
and
mov
fdivrp
jge
stc
mov
xchg
sarb
aaa
int
jnp
into
dec
scas
ficoms
repz
cmp
pop
xor
jo
loopne
jo
add
add
int
mov
pop
cmpsb
push
pop
cwtl
pop
push
inc
sbb
pop
mov
mov
fistl
mov
pop
sub
xchg
imul
push
inc
xchg
cmc
inc
mov
and
xchg
iret
dec
int3
dec
xor
xchg
ret
scas
sub
push
mov
cltd
scas
inc
mov
xchg
gs
out
jno
jmp
sahf
sbbb
lret
sub
lea
fmull
push
jecxz
clc
ss
cmc
hlt
sbb
ror
push
dec
cwtl
movsb
mov
or
dec
imul
repz
ds
dec
sbb
cmp
jnp
inc
pop
insl
or
add
cs
movsl
loop
pusha
cltd
pushf
mov
clc
push
lret
daa
subb
jae
arpl
adc
add
pop
outsl
sub
shll
push
jmp
arpl
jle
dec
inc
add
mov
andl
clc
lcall
mov
pop
leave
ds
scas
inc
pop
clc
xorl
and
push
xlat
mov
xor
push
in
xor
fnstsw
lds
insb
fucom
aam
or
sahf
pushf
in
addr16
and
xchg
pop
or
rorb
xor
fucomp
push
and
xchg
mov
push
and
adc
out
gs
xor
mov
insb
inc
call
push
incl
mov
cli
lock
addb
xchg
cmp
scas
mov
add
push
pop
mov
mov
jns
jecxz
cwtl
mov
dec
divb
xchg
pop
xchg
xchg
rol
mov
daa
pop
ss
loop
lret
shlb
out
aam
mov
mov
jae
pop
adc
enter
insl
out
sub
ja
mov
in
mov
and
adc
push
pop
cmp
lea
jo
sbb
mov
sti
movsb
cs
or
bound
mov
ja
js
mov
orb
enter
dec
sub
test
cmp
cs
sti
mov
in
std
mov
jle
dec
icebp
es
add
xor
push
push
ss
lock
xor
data16
shlb
sahf
adc
mov
pop
pop
mov
in
test
adc
sbb
or
pop
dec
sub
or
outsb
outsl
and
mov
jae
cmp
lret
add
jle
pop
and
cmp
test
xchg
and
out
mov
leave
cmp
cmp
push
fs
push
enter
add
xchg
inc
cli
in
popf
imul
rcrl
jle
sti
shll
cli
insb
fbld
inc
dec
jge
movsl
mov
cmp
jae
shl
repz
sbb
mov
inc
fucomp
pop
push
push
stos
adcl
inc
test
loop
mov
sub
jmp
dec
test
mov
fldcw
add
out
cmp
fidivs
push
jp
push
jno
lahf
and
shr
jl
xor
xchg
mov
xchg
push
and
repz
cmpsl
mov
fbstp
jle
int3
jb
xor
pop
mov
mov
jecxz
movsl
into
aas
stc
enter
jecxz
dec
or
add
rclb
sbb
mov
leave
jnp
cmp
jle
dec
xor
cmpsb
scas
cld
rcll
test
push
pop
xlat
adc
xchg
scas
pop
fdivl
les
dec
push
push
movsb
cli
test
das
inc
sub
add
outsb
pop
push
pop
cmp
and
push
add
insb
xorb
fbstp
cs
jl
mov
out
xlat
cs
sbb
or
shrl
loop
push
or
or
adc
jmp
adc
lods
popl
xchg
and
adc
out
lret
adc
mov
inc
stc
push
mov
shl
daa
and
dec
outsl
in
and
adc
push
outsl
add
test
clc
mov
sbb
dec
sub
lret
bound
nop
fisubrs
cltd
xchg
push
jnp
dec
jp
lret
scas
ljmp
into
xor
imul
xchg
movsb
pop
mov
jg
pop
in
jl
rolb
adc
cmp
jecxz
ja
push
sbb
xchg
xchg
outsb
mov
jle
dec
xchg
arpl
jl
lods
roll
fsub
cmp
sub
xchg
loop
loop
stos
mov
das
mov
jns
out
fmuls
das
pop
in
mov
adc
add
out
shl
repz
sub
aas
sub
dec
xlat
int3
dec
mov
xor
jp
popf
push
ret
stos
js
sub
sub
ss
push
gs
fcmovnu
mov
incl
ret
sub
xor
adc
sbb
out
sub
mov
lret
dec
adc
ret
pop
mov
cmpsb
push
xchg
inc
testl
arpl
insb
loopne
je
jae
xchg
popa
ret
call
addr16
std
xchg
in
mov
movsl
xorl
and
push
insl
enter
or
jmp
ror
dec
pop
shrb
in
das
lret
xchg
mov
xchg
xor
mov
or
fucomi
xchg
movl
stos
push
lret
add
jo
mov
scas
ss
or
mov
sbb
adc
pushf
push
inc
mov
jg
pop
stos
jns
pop
lods
push
xchg
mov
push
or
pop
adc
pop
lret
sub
sahf
les
negl
inc
ljmp
xchg
push
xchg
ljmp
inc
jns
mov
imul
add
cli
or
pop
xchg
jo
sahf
mov
insl
cmp
mov
sbb
sub
and
fnstenv
cmc
movsb
std
mov
lahf
addr16
fnstcw
cwtl
push
or
jg
imul
fs
add
std
cmpsb
pop
popa
add
jns
sbb
cs
scas
cmc
mov
neg
jecxz
pop
and
sarb
and
sahf
ret
sub
or
mov
and
lea
mov
dec
cmp
repz
vpunpcklbw
jae
jnp
ljmp
jl
pop
sbb
ret
ds
xor
or
fs
jns
or
push
mov
xor
in
adc
sbbl
push
inc
jo
cltd
int3
loope
xor
idiv
jge
sbb
fisubl
mov
jmp
out
xchg
mov
add
jb
add
fisubs
xor
iret
push
cmpsl
iret
orl
lods
pop
and
or
test
sbb
nop
subl
jb
stos
pop
insb
jp
pop
aam
push
mov
pop
mov
jmp
lea
out
and
popa
mov
inc
out
cmp
sub
rorl
pop
pop
mov
js
push
bound
fcmovnu
mov
mov
fbld
sahf
dec
clc
mov
aas
push
mov
out
ffree
out
dec
aas
fucomp
popf
arpl
xchg
hlt
and
sahf
sub
popa
mov
pop
mov
jge
jle,pt
xchg
jno
xor
sbb
cmp
ret
or
cli
je
push
arpl
insl
in
sti
mov
fwait
ds
cmp
scas
inc
mov
add
add
cmp
cmp
inc
add
push
lea
cwtl
in
jo
jne
stc
cwtl
add
mov
sub
daa
popf
adc
push
inc
mov
mov
cmp
pop
lret
push
int3
les
data16
adc
push
ljmp
add
sarl
cmc
movl
fcmovnbe
push
fsubrs
cmpsl
pop
push
repnz
cmp
jo
pushf
adc
jmp
cmp
add
lods
ret
not
std
mov
adcl
cmp
mov
orb
add
lock
popf
dec
test
mov
lods
xor
aaa
cltd
mov
xor
sbb
mov
cmpl
bound
iret
test
pushw
lock
pop
pusha
mov
in
cltd
cmp
pop
pop
fcmovnbe
js
arpl
lahf
jbe
or
sub
ss
or
data16
and
movsl
xor
popl
je
adc
push
test
enter
movsb
fdivrl
jle
cmp
aaa
adc
cli
jle
in
cmp
icebp
pusha
notl
or
push
jl
jne
pop
mov
aam
pusha
or
push
mov
push
cmp
sti
and
cltd
dec
mov
shl
mov
dec
add
cmp
mov
fwait
bound
cmp
test
out
test
jo
ret
imul
iret
mov
pusha
sbb
lock
or
push
push
pop
sbb
sbb
lods
fdivrs
sub
cmp
push
and
fildll
mov
and
imul
outsb
sbb
sti
cmpsb
jecxz
xchg
repnz
push
out
divl
test
outsb
test
pop
add
lahf
adc
xchg
adc
cmp
dec
imul
jmp
mov
rolb
xchg
in
mov
lea
dec
pushf
popa
aaa
sbbb
dec
adc
data16
in
sbb
mov
sarb
cmp
sub
mov
or
popf
ja
push
mov
cmp
add
leave
mov
test
dec
pop
in
xchg
cmp
cmp
int3
cmp
push
mov
mov
sti
inc
mov
fiadds
je
sbbl
mov
inc
ds
data16
inc
mov
mov
test
ds
add
mov
leave
mov
sub
add
add
pop
insl
sbb
pop
insl
aaa
inc
sub
das
scas
outsl
sub
sahf
pop
dec
mov
lea
loopne
cmpsl
or
out
sahf
leave
js
mov
movsl
pop
push
inc
das
push
das
cltd
daa
popa
aaa
cld
je
pop
push
mov
dec
xchg
or
xor
mov
inc
mov
pop
ja
xor
movsb
push
mov
cmp
mov
lea
stos
sbb
push
pusha
mov
cmpsl
pusha
popf
dec
push
fldcw
imul
nop
ljmp
popf
jo
iret
xchg
mov
vmwrite
mov
xor
imul
sbb
jb
pop
mov
lds
clc
repnz
and
mov
inc
cld
aaa
pop
inc
je
test
adc
add
or
mov
push
int
test
pushf
shrl
fstpt
mov
inc
mov
mov
inc
or
aas
loop
hlt
mov
adc
lods
jb
test
add
cmp
mov
xor
and
lret
pop
fcom
stc
rorl
scas
xchg
jmp
imul
jno
inc
lahf
push
xor
lea
fimuls
xchg
mov
movsl
mov
inc
test
pop
xlat
movl
jae
icebp
xorl
jae
fs
mov
insb
mov
adc
xchg
lcall
sub
movsb
out
xor
sub
xchg
aam
push
clc
aad
addl
fcmovne
sbb
add
shl
int3
into
dec
les
movsl
mov
mov
pusha
xchg
xor
idivb
stos
xor
sub
repz
cmp
fucomi
lock
jg
dec
lds
mov
lret
sub
movl
cltd
sarl
adc
xor
aaa
xor
or
clc
lret
mov
lahf
cwtl
pop
xor
cmp
cli
adc
sub
les
out
mov
std
daa
je
inc
jge
or
adc
fmuls
outsb
sbb
gs
inc
in
mov
inc
call
fldenv
test
pop
fcoml
mov
cmc
cs
hlt
adc
push
cmpsl
cmpsl
lahf
jg
es
ret
mov
adc
and
inc
movsl
add
negl
or
aad
jg
push
cmp
testl
ret
jb
cmp
inc
in
or
mov
lahf
fldcw
cmp
lret
cmpsl
xchg
add
sbb
dec
pop
xor
adc
cmp
pop
andl
push
adc
rcrl
ret
pop
cs
push
xchg
fbstp
sub
pop
test
mov
inc
push
popf
call
or
add
scas
cli
pop
gs
ficomps
repnz
sub
sbb
data16
das
mov
lock
sbb
pusha
pushf
std
testl
lret
mov
push
loop
inc
mov
cmp
xchg
pop
mov
adc
or
sbbb
add
test
fcoms
mov
xor
sarb
outsb
fucomp
sub
and
inc
rorl
or
negb
pop
mov
addr16
and
stos
rorl
mov
pop
aad
pop
sti
mov
pusha
subb
ljmp
jmp
mov
xchg
ja
inc
fwait
lock
sahf
ja
ss
add
dec
dec
movsl
push
xor
xchg
xor
adc
xchg
daa
inc
push
xor
dec
icebp
xchg
jle
pop
mov
stc
jle
mov
sahf
sbbl
mov
jo
inc
lcall
movsb
mov
dec
add
push
fisttps
pop
push
sbb
xor
cs
gs
push
xor
ja
or
ret
fisttpll
adc
push
rcrl
xlat
fidivrl
arpl
fstps
fmul
negl
sub
push
jo
in
mov
es
push
popf
dec
gs
or
mov
push
dec
ljmp
mov
dec
xchg
mov
insb
cmp
lds
push
push
jg
nop
push
sbb
or
hlt
xchg
mov
ds
addb
call
or
and
jae
data16
mov
test
daa
xchg
addr16
and
cld
mov
test
in
outsb
mov
sbb
jno
sub
push
daa
xor
push
inc
das
roll
mov
ss
fcoml
pop
insb
sub
pop
vmwrite
dec
jecxz
add
jmp
jl
jbe
into
adc
xchg
cltd
jns
outsb
rorl
and
std
cmp
pop
adc
jge
xchg
lods
scas
ror
sbb
sbb
xchg
in
add
adc
mov
leave
std
jp
nop
xchg
adc
daa
fmuls
pop
insb
ret
pop
jo
adc
cmp
jbe
jbe
pusha
push
dec
les
or
ret
and
or
add
mov
addr16
ret
sbb
js
icebp
xchg
xchg
mov
roll
jne
inc
and
shlb
fcmovnu
xor
pop
sbb
cwtl
fidivs
cld
imul
cmp
in
clc
jecxz
and
sub
cmpsl
jb
ljmp
in
mov
and
lods
mov
mov
stc
add
test
jmp
scas
cwtl
pop
jl
add
push
xchg
mov
es
and
or
pop
in
mov
xor
mov
pop
pop
in
mov
cmpsb
xor
in
faddl
cmpsl
cmp
cld
mov
pop
mov
jns
jne
lods
push
pushf
orl
mov
cli
scas
nop
pop
dec
pop
sbb
pop
pop
outsb
jle
jo
les
fs
mov
ret
mov
pop
into
pusha
lock
sub
dec
sahf
dec
mov
add
repnz
jne
dec
popa
push
xchg
sahf
pop
adc
sub
mov
gs
push
ljmp
aad
push
int
cmpsb
jl
sub
push
add
add
jbe
cs
cmp
pushf
push
pop
lock
bound
mov
int3
xchg
test
or
sbb
push
test
data16
xchg
lods
cmpsb
popl
fcomps
mov
lcall
dec
cmc
in
cmpsl
jnp
es
insb
in
mov
inc
in
popf
cmpsl
sub
cmp
jo
test
pop
inc
xchg
adc
out
aam
enter
je
cmp
lcall
xor
dec
clc
aad
sub
and
fmull
xor
enter
enter
inc
sbb
cmpl
sub
fistpl
add
aas
ret
xor
cmp
dec
clc
jge
aam
popf
fs
dec
sahf
dec
jle
sbb
or
cmp
mov
test
cmc
test
cld
pushf
cmpsl
mov
mov
pop
jne
stc
jle
add
in
aam
push
jmp
out
mov
rclb
xchg
inc
push
xchg
fs
rorb
test
enter
rorb
test
sbb
nop
mov
loope
dec
mov
lock
mov
xor
pop
rolb
dec
cli
cmpsb
and
loopne
lods
push
xchg
xchg
sahf
jo
pop
call
cmp
mull
push
push
bound
int3
xor
pop
or
testb
jne
sub
inc
mov
arpl
out
or
les
xor
add
xchg
inc
inc
aas
ret
cmpsl
mov
push
jle
fadds
inc
xor
movl
imul
mov
mov
ljmp
outsl
test
lcall
or
cmpsb
sbb
jmp
sub
fucomip
xor
in
jb
pusha
js
je
stos
mov
mov
xchg
push
aam
jmp
popa
leave
sub
inc
out
pop
cmpsb
movsl
xor
shrl
push
pushf
sbb
sub
jp
add
mov
in
mov
pop
hlt
and
call
and
sbb
mov
jae
pop
out
sbb
and
inc
mov
dec
dec
xchg
xor
add
cmp
out
inc
mov
xchg
aam
cli
push
imul
or
fcoml
ljmp
mov
and
xchg
add
jne
sub
mov
push
add
dec
fwait
add
int
and
sahf
lds
ds
xchg
in
cli
jmp
cmp
popa
orl
xchg
lea
aad
dec
push
addb
jmp
xchg
cmpsb
aad
data16
dec
pop
mov
nop
call
jo
loop
or
imul
lods
lcall
xor
pop
and
leave
cmp
test
dec
and
cmp
pop
mov
push
test
mov
lcall
xchg
repz
repnz
cmpsb
std
pusha
ja
jp
and
outsb
adc
int
xchg
das
sti
sbb
and
into
movsl
adcl
lcall
js
mov
and
mov
dec
mov
dec
add
lods
sti
inc
popf
sbb
push
xchg
or
inc
mov
ljmp
cwtl
xchg
sbb
push
sub
popa
add
push
xor
mov
dec
rcl
pop
mov
mov
mov
fcomps
mov
mov
add
push
jnp
ss
inc
adc
mov
adc
cmp
sub
mov
std
dec
test
xchg
jp
jp
int
je
xor
push
iret
jl
std
in
dec
fiadds
xor
iret
inc
mov
pop
nop
cmp
or
hlt
adc
inc
sbb
in
data16
inc
ds
sahf
decb
pop
cmpsb
outsl
mov
sub
rclb
jnp
sbb
das
repz
mov
leave
sub
loopne
mov
mov
scas
xchg
enter
xchg
addb
jge
or
loopne
sbb
lods
scas
jbe,pn
adc
ret
and
jnp
jb
mov
sbb
fstps
mov
cmp
js
mov
outsl
adc
pop
out
mov
and
sbb
mov
fldt
rcll
lock
push
lods
add
inc
mov
sar
pop
cmp
sti
pushf
sbb
xchg
mov
lahf
sahf
ficompl
imul
inc
rcrl
jo
lock
push
add
sub
subb
inc
lea
xchg
addb
int
mov
fstpl
dec
imul
mov
subps
mov
arpl
xchg
jp
lahf
scas
mov
arpl
pop
add
mov
aam
push
into
cwtl
adc
push
jp
ficoml
xor
jae
in
jo
dec
cmp
cs
out
xor
mov
pop
imul
out
jbe
in
and
adc
call
xchg
loop
push
xor
rcl
push
push
or
gs
mov
pop
or
xor
sub
dec
repz
mov
dec
mov
adc
mov
notb
or
or
dec
int3
idivb
mov
xor
popf
stos
push
out
pop
cmp
or
mov
jecxz
xor
cs
js
inc
ror
cmp
jecxz
cli
lahf
push
lds
mov
int
nop
cs
stos
pop
inc
or
and
fidivs
fidivrs
out
jle
jl
addr16
mov
fcomps
es
and
out
ss
cmp
sub
test
mov
push
mov
push
lods
outsb
lcall
mov
pushf
xchg
mov
inc
xchg
call
push
lea
dec
popf
outsl
leave
dec
inc
jecxz
mov
es
outsb
js
push
lods
icebp
cwtl
dec
rolb
mov
jnp
inc
jne
xchg
xchg
and
push
jmp
aam
lcall
dec
movb
loope
das
mov
scas
or
sub
mov
cltd
setns
orl
sti
ljmp
es
sub
pop
jmp
pop
daa
lods
jmp
scas
xor
test
pop
dec
loop
jp
xor
mov
scas
xchg
cmp
cmp
xchg
mov
and
inc
dec
popf
adc
fxch
jno
mov
and
shrl
dec
hlt
test
test
dec
mov
cld
stc
fsin
loope
adc
xor
cmp
dec
add
fwait
pop
fimull
pop
add
repz
inc
movsl
roll
dec
xchg
pop
sub
mov
mov
shlb
insb
and
adc
push
mov
push
push
mov
and
testl
pop
mov
outsl
inc
lcall
addr16
imul
push
outsl
mov
cmc
jne
inc
fistpl
adc
movsl
sub
push
icebp
stos
scas
movsb
inc
int
pop
xchg
cmp
sbb
lret
andl
push
xchg
sbb
mov
loope
test
pushf
xchg
aad
fstps
ja
inc
lds
adc
popf
push
packsswb
ror
jbe
push
ret
lea
addr16
xchg
push
xchg
clc
mov
cmp
mov
add
cmpsl
mov
push
sub
xchg
iret
mov
cltd
xchg
mov
sub
stos
xchg
les
ret
and
pop
xor
daa
sbb
mov
inc
jle
jno
adc
stos
inc
xchg
insb
cmp
xor
inc
out
or
mov
lock
inc
jg
aas
pop
and
and
add
scas
insb
xor
outsl
movsl
xchg
loop
pop
scas
cmp
adc
clc
pop
sbb
cmp
in
xchg
in
rcrl
lret
pop
xor
iret
andl
outsl
sub
or
test
xorb
xchg
sbb
and
pop
sub
insb
loop
xor
sub
push
jo
imul
sbb
movsb
jg
push
jne
ret
xchg
cmp
lea
scas
das
ss
jecxz
int3
mov
fwait
mov
mov
or
pop
pop
push
inc
test
popa
xrelease
lret
int3
cmp
test
add
xor
test
sarb
sub
push
lds
frstor
in
mov
add
mov
mov
imul
inc
cmp
mov
xor
test
dec
xchg
inc
adc
inc
adc
andl
jae
into
pop
test
jge
add
jle
add
sbb
mov
mov
lcall
lahf
xchg
mov
xchg
push
xchg
mov
popf
pop
mov
mov
xlat
push
cs
outsb
stc
mov
inc
out
dec
inc
aas
xchg
push
mov
fbstp
mov
mov
push
and
shlb
pop
cs
pop
inc
pop
sbb
mov
fisubrs
and
add
and
lods
mov
sub
insl
sahf
pop
gs
fstl
dec
jbe
push
pop
xchg
xchg
jge
dec
push
leave
push
and
testb
outsb
xchg
and
sub
cmp
mov
or
push
mov
xchg
cmc
push
jnp
or
mov
mov
cwtl
xchg
jg
daa
punpckhbw
lods
rorl
jl
mov
cwtl
xchg
idiv
ljmp
inc
add
jb
xchg
push
fs
or
push
mov
test
ds
xorb
dec
xchg
popa
cwtl
test
or
test
mov
push
add
lock
imull
lock
out
and
dec
rep
pop
xchg
inc
out
out
clc
xlat
jge
cmc
mov
repz
xchg
mov
xlat
lret
mov
push
in
aam
ficoml
dec
push
mov
and
negb
jmp
cmp
loopne
adc
cmpsl
std
pop
jle
or
pushf
ja
lods
icebp
out
cwtl
aad
cmp
push
pushf
jae
fisttpll
ret
fs
mov
insl
push
jmp
xchg
loope
ss
outsl
jle
sbb
jne
sbb
inc
lock
sbb
mov
imul
sbb
insb
dec
inc
sub
rcrl
fistpll
jmp
xchg
fsubrl
in
lret
clc
and
sub
enter
dec
adc
in
xchg
insl
sbb
daa
cld
add
pop
sarb
outsl
dec
xchg
push
loopne
out
push
clc
lret
and
sbb
filds
xchg
lock
cli
lods
aam
and
stos
call
loop
aaa
icebp
inc
sub
enter
adc
je
call
cmp
jae
or
and
add
push
not
dec
push
xor
test
pop
add
fidivrs
mov
lret
add
dec
test
aam
mov
imul
xchg
je
repz
and
iret
jbe
fsubrp
inc
mov
stos
mov
aas
negl
and
inc
jp
dec
bound
jl
push
shrl
popf
pop
lods
sbb
and
push
cmp
incb
push
xchg
mov
cli
mov
and
add
push
or
inc
mov
xchg
adc
arpl
jns
mov
ja
mov
shr
mov
sub
stos
pop
or
cmpsb
mov
mov
xor
sbb
sti
jg
jecxz
test
jae
mov
leave
push
xchg
inc
popf
je
data16
xchg
sti
pop
orl
cld
cmp
mov
inc
and
test
jmp
jne
push
push
xlat
in
lcall
or
mov
adc
adc
xlat
repz
and
fimull
loop
nop
out
lock
sahf
sahf
ljmp
imul
xor
hlt
and
sub
fsubrs
jbe
aaa
test
dec
jl
adc
out
leave
add
ret
cmp
inc
lods
push
pop
mov
sub
xchg
stos
daa
les
push
inc
mov
imul
mov
add
outsb
nop
xchg
sub
mov
sbb
cmp
jg,pn
test
xchg
mov
jle
divl
inc
pop
pushf
jecxz
sub
xor
dec
ja
jne
xchg
xchg
add
fcmovu
or
jp
or
pushf
cmpsb
popf
push
cmp
scas
sub
outsl
xor
push
lods
adc
sbb
fidivs
jbe
negb
jnp
imul
sub
push
insb
cltd
push
dec
outsl
dec
xchg
or
shlb
mov
icebp
stc
jae
ljmp
xlat
pop
mov
xchg
movsb
lods
or
sbb
push
in
or
mov
cmp
les
inc
sti
lahf
jg
stos
inc
inc
in
sbb
lret
popa
and
movsb
divb
xlat
or
mov
ja
mov
adc
xor
sahf
sbb
mov
in
in
loop
test
lret
mov
loope
jb
in
fscale
xor
es
negl
enter
and
mov
jae
mul
movsb
xor
mov
sbb
push
aam
in
orb
int
mov
jle
jle
repnz
rorl
mov
jl
imul
inc
and
jbe
dec
mov
jne
xor
aaa
lahf
sbb
je
cmp
sub
fs
or
cwtl
cltd
das
js
cli
adc
and
js
inc
sbb
ret
and
mov
xor
jecxz
insb
repnz
enter
sbb
and
inc
mov
and
je
sbb
das
pop
std
cmovs
outsl
cmp
dec
stos
fldt
sbb
cmpb
js
js
std
mov
jns
data16
int3
xchg
push
jl
inc
in
and
in
rcrb
add
xor
or
jp
sub
dec
push
arpl
loope
dec
sbb
fwait
in
aam
dec
lods
add
cmpsb
jecxz
js
and
movsl
add
jae
js
jmp
int
repz
dec
push
movsb
mov
fmull
cmp
std
outsl
push
in
pop
mulb
addr16
mov
dec
lds
cmp
into
pop
cld
sub
push
sub
int
shll
mov
dec
mov
emms
xor
fmulp
pop
shll
arpl
pop
push
test
pop
mov
insl
xor
das
test
jmp
test
mov
fnstsw
insb
pop
mov
sarl
adc
mov
cmp
lods
psubq
ss
sbb
jp
push
mov
cltd
popf
ds
arpl
add
shlb
inc
add
out
mov
pop
test
pusha
es
call
test
call
xor
and
aam
in
mov
out
cmpl
inc
je
xchg
iret
nop
push
xor
les
and
rcr
mov
adc
sbb
pop
mov
push
cmpl
sub
insl
loopne
jle
pop
push
sub
jl
lahf
push
sbbl
xchg
pusha
cmp
popf
nop
repnz
and
out
scas
mov
jbe
jmp
test
xorb
sub
mov
scas
mov
or
std
in
cmc
xor
das
outsl
cmc
cltd
decl
clc
dec
daa
fistps
gs
mov
mov
mov
int3
nop
ja
push
hlt
sbb
dec
xor
lds
sarl
xor
sub
xchg
js
xor
xchg
mov
ficoms
pop
rorb
ret
mov
mov
jge
mov
mov
cmc
popf
xor
mov
fistps
imul
or
out
xchg
lcall
outsl
adc
add
sti
sub
push
and
mov
jg
sbb
loopne
jp
mov
jl
sti
les
push
push
push
pop
sub
hlt
mov
addr16
mov
pop
jae
xor
ljmp
repnz
addl
mov
fs
lods
hlt
and
aad
lcall
incb
mov
mov
pusha
rorb
outsl
nop
add
or
shlb
jb
loopne
fisttpl
cmpsl
and
insb
popa
add
cmp
xor
cmp
mov
add
scas
sub
push
xor
repnz
fsubr
arpl
inc
in
push
xor
popf
test
ja
scas
push
jle
enter
adc
pop
mov
cs
xchg
push
add
jg
push
sbb
jns
in
outsb
mov
iret
cld
outsl
jp
inc
lds
cmpsb
fwait
dec
inc
adcb
xchg
mov
shrl
clc
sub
pushf
mov
in
mov
gs
cmp
jo
jecxz
xor
frstor
push
cs
xchg
aaa
push
fidivrs
sub
lea
inc
jp
jl
nop
insl
mov
testb
jge
bound
pushf
sbb
mov
dec
cs
sub
cld
pop
gs
pop
xchg
outsl
fsubl
lock
sbb
sub
xor
or
mov
out
xchg
insl
mov
jbe
push
repnz
adc
arpl
loope
fsubl
mov
mov
cmpsb
mov
lcall
adc
and
lea
mov
bound
xorl
out
ret
cmc
xorb
mov
and
aas
out
xor
push
leave
ds
cmp
lds
js
mov
fdivrs
hlt
imul
stc
imul
not
jle
dec
jno
sti
add
sbb
mov
or
inc
inc
popa
jae
std
or
xchg
and
sbb
mov
xor
scas
mov
jb
mov
mov
loopne
lahf
adc
lods
orl
int
mov
repnz
inc
cmp
xchg
negl
mov
push
outsb
imul
inc
or
push
imul
sbb
inc
jmp
rcr
jp
push
lahf
lret
pop
jns
adc
mov
inc
pop
faddl
popl
and
stos
insl
je
out
dec
fxam
cltd
out
aam
repz
or
inc
arpl
mov
add
cmp
pushf
notb
loop
into
mov
mov
lods
xchg
dec
fidivrl
fisttpll
mov
fisubrs
test
in
mov
adc
gs
jmp
mov
mov
push
cmp
movsb
mov
xor
push
call
mov
aad
out
pusha
mov
dec
sub
xchg
stos
sarl
jp
inc
fcompl
sar
mov
add
sbb
push
addr16
ja
into
popf
push
stos
jle
mov
fstpl
mov
repz
mov
ds
mov
or
pop
enter
sbb
dec
fadd
subb
pop
popf
mov
iret
pop
sbb
sti
pop
popa
adc
insl
xchg
pop
shrl
insl
inc
shlb
out
and
out
adc
dec
mov
imulb
xchg
add
rorl
lods
cmp
int
lods
out
daa
inc
lret
test
pop
push
rcrb
adc
lret
adc
push
out
add
or
and
mov
nop
cltd
ret
mov
pop
pop
fstps
stos
jnp
daa
sub
push
mov
cmpsl
push
movsb
pop
push
js
mov
and
aam
mov
add
lret
cmc
and
push
cmp
nop
loop
repz
cli
not
xor
es
jmp
xchg
bound
sbb
mov
or
test
subl
add
leave
inc
filds
aas
push
loopne
lds
mov
mov
xor
add
icebp
and
mov
fcoms
or
cmp
stc
outsb
inc
cltd
enter
sub
cmc
aad
mov
jg
jnp
loope
inc
dec
sub
fstps
adc
aaa
xor
jns
sti
push
inc
sbb
in
sub
jbe
jle
pop
fs
bound
push
pop
dec
jnp
cmpb
cltd
mov
lcall
lret
pop
in
xchg
rcrb
mul
push
jp
inc
push
aas
es
cli
sbb
push
int3
pushw
ljmp
sub
ftst
mov
sahf
push
jle
mov
mov
xchg
jns
or
jb
mov
sbb
hlt
pushl
cmp
push
mov
cltd
push
adc
scas
pop
adc
clc
mov
je
mov
xor
loop
xlat
negl
out
pop
mov
jge
jbe,pn
lahf
gs
jbe
cmc
scas
push
adc
fisttpll
lds
gs
inc
sarl
mov
test
lds
push
mov
mov
fidivs
pop
xchg
es
jp
je
ds
and
xor
ja
js
mov
adc
dec
sbb
jg
sbb
lea
int
mov
stc
push
aas
addr16
dec
lret
jmp
in
jg
sar
jp
incl
adc
scas
pushf
and
lods
shlb
mov
push
shrl
mov
in
imul
stc
addr16
dec
aad
jg
adc
mov
dec
out
dec
stos
push
or
aas
cmp
cmpsb
push
cmp
jns
nop
adc
dec
add
fidivrs
and
adc
std
jl
jns
xchg
repz
adc
inc
mov
xor
push
adc
mov
inc
les
xchg
and
jle
pop
and
push
leave
inc
mov
mov
loop
xor
inc
iret
push
xchg
movsb
push
dec
cli
int
andb
mov
mov
pop
popa
add
pop
jnp
icebp
fsubs
js
jb
sbbl
lds
or
xchg
push
dec
adc
insl
mov
push
gs
into
inc
dec
cwtl
aas
dec
mov
les
jge
rorb
shrl
push
pop
aad
je
adc
popf
pop
push
fsts
push
popa
jp
dec
aas
imul
test
jg
push
jae
mov
cmp
push
call
sbb
pop
andb
insl
shlb
gs
int3
jns
inc
pop
out
xor
push
mov
push
faddl
cld
adc
or
mov
xchg
enter
xor
mov
xchg
dec
hlt
in
jl
fimull
mov
inc
xchg
popa
mov
clc
cmpsl
sub
inc
sbb
das
out
ljmp
fildll
decl
mov
mov
sub
test
test
je
and
sub
push
test
mov
or
jae
sbb
jbe
jmp
dec
loop
movsb
mov
lea
push
and
jle
imul
shll
add
cmpsb
aas
adcl
xchg
cmpl
push
ljmp
sahf
pushl
xchg
jle
jnp
xor
call
push
fnstsw
dec
jnp
outsb
ret
and
sub
adc
mov
xor
lret
mov
lcall
dec
inc
adc
and
pushf
and
ret
xor
mov
repnz
btsl
pop
xchg
sub
xor
test
inc
test
call
imul
sub
ds
fs
jg
rol
or
adc
jnp
jmp
mov
test
mov
mov
cmpsb
push
or
dec
idiv
imulb
mov
dec
cmpsl
or
sub
xor
imulb
mov
fxam
sbb
or
dec
mov
lods
and
fcmove
mov
add
ljmp
rcrl
fldcw
push
mov
and
fwait
ljmp
xor
xchg
jecxz,pt
bound
test
mov
or
nop
popa
pop
lret
out
adc
mov
orb
pop
mov
fcompl
xchg
pop
lcall
mov
push
cmp
xor
dec
pop
das
adc
mov
aad
jecxz
inc
mov
out
adc
cwtl
pop
into
mov
add
fcmovu
mov
stc
lods
movsl
push
pop
clts
iret
push
jbe
sbb
dec
aad
sub
lcall
mov
push
lds
insb
mov
ret
sahf
imul
and
xor
into
push
stos
popf
or
push
call
imul
dec
dec
fldcw
or
mov
cli
ljmp
inc
lods
adc
xor
movsl
mov
or
jmp
dec
loop
enter
aas
dec
in
xchg
mov
and
push
dec
and
cmp
jle
push
int
stos
or
sbb
mov
popf
lret
repz
andl
push
das
push
inc
add
lods
jns
mov
add
dec
sbb
cmp
out
out
hlt
pop
aaa
lock
sub
sbb
mov
or
aad
mov
lods
idiv
xor
mov
mov
js
shl
cmc
add
fsubrs
push
sub
hlt
push
mov
xchg
aas
icebp
psubsb
mov
in
push
into
nop
inc
in
inc
dec
aam
pop
mov
add
dec
xchg
popa
inc
jecxz
pusha
sbb
and
xor
outsl
and
and
or
adc
or
mov
push
xchg
push
or
xor
inc
jno
es
pop
jl
xchg
call
push
xchg
push
xor
mov
xchg
inc
dec
into
jne
ds
repnz
fmul
inc
div
adc
add
adc
or
pop
je
and
cmp
pushf
sbb
sbb
adc
lods
cs
push
mov
xchg
in
xor
es
sub
jmp
imul
cmp
test
push
mov
pusha
or
sarl
rorb
jle
xchg
lret
shll
mov
or
scas
lret
cmovl
sarb
cld
xchg
repz
cmp
iret
xor
jns
pop
js
ja
mov
stc
pop
lods
inc
pop
xchg
dec
mov
lock
sub
pop
cld
fmuls
mov
add
or
sahf
test
jle
call
popf
hlt
dec
jmp
add
lea
ja
cwtl
ja
test
cwtl
test
lret
cmp
mov
mov
xor
cmpsb
pop
mov
add
pop
nop
aas
roll
outsl
sub
pusha
sub
popa
and
mov
dec
fsts
sahf
dec
or
sbb
outsb
add
push
jo
icebp
dec
aaa
testb
inc
sbb
adc
push
fnsave
cld
stos
mov
les
xchg
dec
incl
roll
rolb
xchg
aaa
push
stos
pop
lcall
push
dec
inc
sbb
sub
mov
aad
mov
outsl
stos
jmp
test
pop
push
or
in
lret
inc
push
sub
in
inc
fninit
push
inc
inc
mov
push
out
bound
mov
mov
in
add
mov
ljmp
adc
js
insl
jl
call
jae
fwait
adc
fsubrl
mov
add
pop
xchg
dec
rolb
popf
icebp
mov
filds
push
fisttpl
mov
inc
xchg
dec
ljmp
jmp
pop
adc
sbb
push
data16
iret
in
test
lret
xor
xor
pop
cmp
cwtl
fcoml
dec
popf
int3
pop
int3
sarb
jl
add
and
adc
inc
aad
or
jge
mov
add
lcall
sub
dec
inc
ljmp
dec
jp
inc
int
scas
lahf
data16
aam
sub
lret
mov
sub
sub
in
mov
dec
sbb
cld
add
pop
in
mov
push
jp
mov
repnz
mov
aas
jae
rolb
jg
testb
or
lods
enter
cmpb
arpl
scas
jne
arpl
call
pop
pxor
mov
pop
andl
lods
pusha
fnstcw
adc
gs
sbb
and
xchg
addb
data16
call
sbb
jnp
std
push
inc
cmp
in
push
insb
mov
add
out
xlat
adcl
out
clc
adc
outsb
enter
dec
sbb
negb
popa
popf
fnstcw
or
add
das
xchg
lock
mov
pop
push
pushw
and
or
and
movb
cmpb
test
ja
adc
sub
int
lea
jns
mov
cltd
pop
jo
testb
xor
sbb
pop
jns
cmp
or
shrl
and
mov
scas
call
and
add
xchg
sub
scas
adc
jnp
pushf
push
mov
outsb
xchg
cmove
inc
fstps
int3
dec
cmp
and
fwait
pop
sbb
lret
iret
std
aad
push
add
imul
push
fwait
lea
js
xchg
adc
mov
in
test
adc
pusha
pop
loop
sbb
sub
xchg
add
push
cmc
in
push
lahf
rol
inc
add
pop
stc
lods
daa
in
es
ljmp
pop
xchg
and
xchg
mov
and
mov
or
in
shrb
lret
add
sbb
or
sti
mov
cld
flds
mov
ret
xor
xchg
push
jne
divb
vshufps
gs
mov
mov
sbb
or
cmp
cmp
or
mov
dec
repz
inc
xchg
jnp
dec
cmp
cmc
xchg
and
cli
add
sbb
ret
in
xlat
add
cmp
pop
add
rcr
cmp
data16
scas
pop
mov
outsb
mov
das
cmpsl
hlt
repnz
dec
xchg
cmp
sbb
out
addb
pop
inc
xchg
pop
push
push
cmp
cltd
orl
add
nop
sub
je
loopne
push
cli
mov
mov
flds
pushf
jp
pop
mov
or
xchg
cmp
xor
sahf
and
outsl
call
and
add
sbb
popf
jle
or
fwait
dec
js
pop
mov
popf
jp
sub
adc
mov
add
out
mov
mov
pop
adc
addr16
sbb
dec
dec
je
das
leave
orb
sbb
dec
fdivl
adc
repnz
xor
ret
sti
fdecstp
add
shlb
push
notl
push
jnp
adc
mov
push
pop
dec
fiadds
mov
lods
sub
dec
jmp
mov
mov
cs
fcmovne
sub
jb
leave
jle
int3
or
add
insb
dec
int
jge
dec
clc
dec
dec
sub
xor
mov
mov
lret
xchg
mov
int
jp
pop
pop
pop
pusha
ljmp
outsb
cmp
cwtl
shlb
fcomps
mov
repnz
mov
cmpsb
aas
test
push
push
mov
sbb
push
push
add
adc
mov
lods
push
cmp
dec
xor
jp
stc
adc
dec
xchg
subl
clc
sbb
dec
cmp
mov
repnz
xchg
fstl
ds
jno
loopne
or
call
xorl
and
in
gs
ljmp
push
fildl
rcll
jo
mov
mov
jbe
lods
inc
sub
das
aam
test
stos
inc
dec
pop
pop
mov
and
jmp
sub
fstps
stos
ja
ja
cld
adc
xor
movsl
dec
fistps
data16
std
xchg
pop
aad
in
fdivrp
mov
cld
sbb
in
sub
cmc
popa
lods
inc
dec
add
in
inc
jb
test
outsb
sub
test
jnp
lahf
sub
cld
lock
pushf
jno
repz
pop
femms
test
sbbl
scas
les
xlat
cmpsb
xchg
xor
aas
or
inc
out
testb
pop
andnps
sub
outsl
cmp
xchg
in
sbb
or
jg
jg
inc
inc
mov
repnz
loop
movsl
jae
or
arpl
mov
cmpsb
cld
ds
pop
lahf
pop
adc
imul
sbb
add
xchg
outsb
or
ja
cmc
outsl
mov
fwait
lock
jg
fimuls
jae
in
clc
jno
jp
shll
js
cmp
mov
inc
xchg
les
aaa
mov
fldl
repnz
jecxz
jae
pop
mov
jno
dec
int3
pop
pop
aam
data16
flds
in
jno
cld
dec
push
sub
adc
fucomp
ss
jno
and
movb
adc
inc
push
test
imul
cli
adc
clc
push
dec
xchg
mov
or
mov
sbb
jae
or
sbb
or
fisubl
popf
mov
sbb
push
mov
shlb
jg
or
add
addr16
les
dec
js
sub
dec
aas
cmp
or
mov
fidivl
dec
cmp
rolb
push
dec
xor
xchg
int
subb
add
fnsave
lret
data16
mov
icebp
shld
test
jmp
test
into
ja
push
xchg
jnp
fsubrs
ljmp
test
pushf
test
out
sti
xor
ret
push
lods
inc
push
xchg
and
scas
mov
xor
sub
inc
push
pop
and
les
fldt
sbb
lret
inc
ss
bound
sti
test
ds
and
shl
inc
lret
adc
push
notl
ja
arpl
stos
xchg
in
fildll
cmovno
cmpl
sbb
xor
dec
test
dec
popf
cmp
xor
fistpll
es
xor
pop
mov
pushf
scas
pop
mov
xor
decl
daa
mov
xchg
outsb
mov
add
pushf
xchg
or
mov
fs
popf
push
pop
mov
mov
xor
or
dec
fsubrs
in
add
insb
je
add
notl
sub
xchg
add
int
inc
mov
push
xchg
daa
rol
inc
dec
aas
dec
sbb
adc
andl
out
xchg
sbb
add
xor
mov
pop
sbb
inc
movsb
fisubs
sub
mov
gs
test
testb
punpcklbw
lahf
cwtl
jae
inc
mull
lods
int3
and
sub
out
enter
in
pop
outsb
enter
stos
mov
insb
hlt
in
in
mov
arpl
dec
inc
cmpl
jp
sbb
jmp
out
cwtl
adcl
inc
adc
mulb
stos
mov
cmp
pusha
shlb
loopne
jg
lea
pop
mov
lods
push
idivl
xor
cwtl
adc
dec
scas
shll
test
push
jg
dec
subps
in
or
jp
int
and
ret
daa
lds
pop
dec
insb
xor
add
test
pop
insb
aam
dec
add
adc
dec
add
or
xor
movsl
jbe
cmp
inc
cmp
pop
outsb
mov
clc
push
mov
dec
cmp
pop
mov
xchg
xchg
inc
jl
insl
mov
repnz
xchg
movsl
ja
push
sub
in
xchg
sub
sbb
jecxz
adc
inc
lea
sub
clc
pop
in
push
push
bound
push
push
cmp
cmp
jnp
jp
scas
mov
rcrb
icebp
ficompl
cwtl
std
cmpl
sub
loope
shll
jge
mov
cmp
xor
nop
lret
inc
outsb
out
dec
loope
fnstcw
fldl
lret
pop
in
jbe
cmp
test
push
incb
or
imul
inc
es
mov
cwtl
in
sbb
sub
cmp
outsl
inc
loope
add
dec
mov
fstps
pop
jns
jno
enter
or
xchg
pop
dec
add
jnp
fwait
sbb
dec
and
mov
add
mov
es
jle
jns
cmpsb
jae
inc
sbb
fldt
fistl
lcall
jno
jne
mov
mov
inc
pop
xchg
out
and
push
push
inc
lahf
jl
add
sbb
pushf
or
and
loop
mov
leave
mov
sbb
in
xchg
leave
repnz
hlt
nop
call
subl
xor
into
int
shlb
arpl
shlb
mov
sti
jne
dec
adc
out
xor
dec
mov
lds
addr16
fcomps
aad
push
loop
adc
cmp
and
es
lds
pop
dec
sbb
cmc
mov
into
mov
jg
inc
pop
gs
adc
inc
adc
dec
dec
pop
xchg
aad
adc
xorb
push
cli
pop
dec
adcb
insl
fistps
sub
mov
push
in
loop
lock
xor
dec
jecxz
popf
xchg
sbb
scas
loope,pt
movsl
lods
xchg
int3
stos
push
in
lea
lret
out
jg
jb
mov
sub
mov
inc
jp
jle
push
or
adc
stos
push
push
in
adc
repnz
dec
xchg
push
xor
or
pop
lods
jae
adc
or
push
nop
mov
pop
add
push
xor
sbb
popa
xor
mov
inc
jnp
sbb
xorl
bound
insb
jnp
lcall
scas
or
loopne
and
jmp
mov
ja
je
cltd
xlat
lret
mov
jnp
mov
and
xor
ja
sub
push
shrl
fsubrl
sti
pop
cli
arpl
mov
xorb
sub
imul
popa
repz
insl
or
jg
out
insl
mov
inc
or
push
inc
adc
dec
cltd
fwait
addl
jae
push
int3
fwait
fwait
mov
xor
in
mov
and
xor
xchg
push
mov
pushf
ret
lds
repnz
leave
testb
or
in
es
out
mov
add
sub
mov
inc
xor
pop
leave
fwait
ljmp
sbb
aas
scas
decb
cld
out
mov
dec
xchg
pop
pop
push
lods
cmp
mov
nop
push
fists
push
xor
cmpsb
xchg
xchg
lret
lret
sub
pop
cli
sbb
scas
jmp
mov
mov
add
jo
flds
es
aaa
lret
clc
xlat
adc
mov
mov
cmpsb
sub
push
sbb
das
xchg
outsl
mov
aam
xchg
sarl
sbb
out
jecxz
add
xor
push
push
mov
dec
test
inc
dec
int
nop
clc
fdivrl
cmp
test
js
rcrb
sub
fcmovbe
sarl
sbb
rclb
test
cs
les
int
out
nop
sbbb
xor
fsts
fwait
repnz
add
mov
mov
and
add
aad
arpl
loop
xchg
add
mov
int
aaa
std
lods
xor
mov
push
ljmp
icebp
jge
cltd
repz
sbb
add
and
jmp
popa
outsb
pop
fs
cmp
dec
xchg
or
add
sub
xchg
push
jl
sbb
sbb
sub
jmp
and
shr
fstpl
push
std
pop
xchg
ficoms
mov
ret
mov
dec
lret
pusha
mov
jo
and
call
push
fdivl
mov
add
in
outsb
loop
int3
pop
arpl
and
ljmp
in
mov
js
popa
pop
aad
xchg
sub
test
mov
cltd
dec
loopne
jae
xchg
or
scas
cmp
jae
sub
and
ljmp
test
xor
dec
inc
or
or
icebp
push
sub
cmpsl
aaa
aas
scas
adc
out
mov
out
mov
aam
adc
mov
mov
jle
xchg
mov
pushf
bound
xchg
ljmp
int
out
inc
jl
inc
cmpl
and
xchg
cmp
adc
ficompl
xchg
inc
lahf
jmp
jmp
imull
frstor
push
pop
test
outsb
sub
mov
lret
push
into
xor
push
inc
xchg
lods
mov
shl
xchg
lret
push
mov
scas
cwtl
ljmp
mov
aas
dec
mov
loope
xchg
sub
imul
divl
imul
pop
lods
out
xchg
jle
pop
sub
mov
das
dec
nop
test
xchg
leave
loopne
faddp
fld
xlat
adc
sqrtps
std
in
fwait
mov
fwait
in
mov
sbb
adc
sbb
repnz
xchg
int
jg
data16
ret
pop
imul
shl
mov
daa
mov
and
lret
xor
stos
aas
ja
andl
xor
xor
xchg
mov
nop
cmpsl
mov
popf
ss
inc
loope
popw
out
orb
jp
push
cmp
pushf
loopne
dec
and
jbe
gs
aaa
mov
popf
pop
sbb
sahf
pop
dec
stos
xor
shrl
lahf
pop
inc
mov
lret
cmp
and
fmul
mov
pop
sub
and
xor
push
push
jg
stos
inc
lock
jl
push
test
outsl
xor
js
or
jecxz
shll
jno
pop
divb
test
push
enter
mov
push
and
push
cld
xchg
dec
or
mov
test
repz
dec
aam
adc
push
fs
into
lea
adc
loop
scas
sbb
leave
cltd
jecxz
shll
dec
stc
loope
leave
cmp
inc
push
jmp
fdivrs
iret
stos
inc
xchg
shrb
jg
or
push
shll
or
lock
daa
decl
inc
sub
popf
ss
cmpsl
repnz
and
sbb
movsb
mov
cltd
pop
jge
popf
sbb
mov
imul
mov
and
add
fsubrs
icebp
imul
sub
das
add
imul
sbb
adc
and
cwtl
addr16
aaa
faddl
fildl
xchg
vaddps
fs
icebp
fnstsw
xchg
adc
and
xchg
ja
push
ja
lds
dec
pop
adc
push
dec
insl
inc
out
lcall
popa
jnp
add
in
cld
mov
stos
jae
enter
scas
or
popf
pop
jae
js
addr16
in
ja
out
faddp
jbe
call
lods
jne
outsl
and
xor
or
and
stos
stos
sub
shl
pop
xor
imul
insl
add
jp
xor
mov
sahf
add
popa
aad
stos
mov
cli
outsl
push
ljmp
lahf
loopne
popf
pop
fldl
scas
call
in
add
imul
pop
stos
mov
lods
jmp
or
scas
les
in
out
repz
push
mov
adc
mov
sti
lods
enter
mov
or
hlt
mov
imul
and
xchg
jnp
clc
or
repnz
mov
xor
and
sub
fistpl
cmc
xchg
std
adc
push
ret
add
insb
mov
sarb
sbb
cmc
iret
imul
cli
mov
out
pop
xor
mov
xchg
pop
sbb
arpl
loope
das
jle
std
add
xor
mov
add
test
stc
push
pop
mov
das
leave
rorb
pop
or
popf
pop
fdivr
xor
inc
adcb
push
pop
sarl
mov
loop
repz
or
mov
das
js
adc
adc
test
cmpsb
js
add
out
outsl
inc
adc
jg
mov
sbb
add
outsb
fcoms
lcall
jns
dec
adc
add
mov
lods
sub
mov
aad
lcall
push
mov
inc
mov
lods
xor
cmp
sbb
fwait
adc
addr16
popa
cmp
mov
or
stos
ret
push
inc
cmp
sub
js
cmpsb
push
mov
lahf
pusha
mov
popa
sbb
dec
add
pop
xchg
cli
or
setbe
pop
lods
out
fwait
das
repnz
mov
testb
popf
and
lahf
lcall
sbb
gs
mov
xor
shrb
imul
jle
inc
ljmp
sbb
ljmp
jne
inc
stc
iret
jae
dec
rcll
adc
inc
cwtl
aam
pop
mov
cwtl
add
inc
mov
dec
lahf
xor
sar
lock
rorl
or
aas
mov
enter
test
push
scas
or
pop
pop
sbb
xchg
sbb
pop
dec
mov
push
push
lds
pop
sub
mov
mov
hlt
cmp
add
mov
repnz
aas
push
in
loop
shl
dec
movsb
pop
xor
stc
and
push
mov
or
jecxz
mov
aam
popa
fsub
mov
xchg
dec
mov
add
icebp
cmp
in
mov
repnz
out
aad
call
and
ret
jecxz
mov
sbb
dec
scas
add
testl
outsl
jnp
dec
and
stos
cmp
sub
cmp
mov
insl
and
insb
cmp
or
sbb
pop
aam
xor
push
sub
pusha
or
aad
mov
xor
outsl
jb
add
negl
fs
push
cld
mov
test
loopne
and
push
fmull
dec
mov
call
repnz
fstpl
mov
pop
jno
notl
cltd
hlt
popf
gs
jo
lahf
ret
repz
dec
and
stos
aas
jnp
xor
sarb
jg
adc
or
cmp
push
adc
aaa
nop
or
mov
or
cmpsb
xchg
insb
pop
push
or
jbe
mov
pusha
scas
cwtl
xchg
push
imulb
cmpsl
cmp
leave
ja
xor
mov
popf
in
xchg
call
test
jns
les
hlt
mov
movb
mov
jns
jne
movsb
fsubp
cmp
cmp
sbb
inc
pop
fldl
jns
sub
mov
jo
cmp
xchg
arpl
sub
mov
fcomps
jae
pop
pop
cltd
cmp
add
xchg
mov
push
movsb
sbb
scas
xchg
inc
cld
sbb
rorl
jmp
cmp
out
add
in
lcall
out
into
pop
add
mov
xlat
roll
jne
call
sub
add
inc
js
enter
xor
dec
data16
xlat
xchg
push
in
lahf
clc
pop
sbb
sbb
add
arpl
imul
out
and
pop
outsl
cmc
out
jp
test
cmpsb
xchg
sub
sub
es
mov
pop
jno
outsb
push
pop
jle
push
fs
sbb
mov
dec
outsb
push
jae
enter
xchg
sub
xchg
stc
movb
and
fsubrl
or
pop
fwait
cmp
mov
aas
sarl
jmp
jp
adc
imul
or
mov
mov
jno
mov
pop
arpl
mov
addb
sar
repz
call
mov
imul
sub
jp
cli
js
ds
xor
sbb
mov
cmp
push
cmp
sbb
cmp
popf
shrb
jl
sub
sti
cmp
bound
dec
loop
ds
push
mov
rcrl
enter
mov
scas
xlat
mov
cmp
das
jns
jo
or
jl
incb
push
sbb
push
test
arpl
inc
in
orl
int3
mov
mov
imul
ss
sub
mov
addr16
jp
inc
sub
xchg
loop
rorb
arpl
mov
adcb
test
cmpsl
dec
mov
dec
aam
lcall
outsb
orps
adc
gs
inc
insl
fcmovne
js
sbb
inc
out
push
stos
add
or
enter
in
es
mov
mov
iret
mov
test
inc
fs
rol
sub
popa
lds
push
cltd
pop
push
test
test
bound
adc
jnp
fistps
push
push
pop
rorl
cli
nop
decl
inc
xchg
inc
sbb
fisubrl
rcll
cmpsl
fbld
sbbb
shlb
cmp
lahf
addr16
mov
mov
fdivrs
in
ret
dec
dec
sbb
xchg
mov
out
rolb
mov
data16
aam
mov
jmp
xchg
lahf
fsts
inc
repnz
lret
dec
xlat
sub
in
pop
arpl
sbb
cltd
jg
sbb
lret
push
cmp
pop
pop
aam
push
push
sarl
jnp
fidivrs
push
mov
sbb
xchg
inc
mov
push
xor
push
jge
and
pop
cli
gs
mov
insb
nop
icebp
scas
pushf
jmp
xchg
sbb
xor
pop
adc
mov
sub
jb
cli
inc
insb
jg
js
mov
mov
xor
arpl
sbb
add
xor
jnp
mov
jle
dec
mov
sbb
mov
adc
mov
rorb
lds
lock
orl
jne
push
fiadds
repz
dec
fdivp
ficomps
pop
or
std
adc
push
jecxz
or
cs
smsw
ss
call
cmp
dec
aaa
mov
aas
outsl
addb
xchg
pop
subb
cmpsl
mov
ret
gs
cli
add
mov
mov
or
sbb
in
mov
jne
scas
stos
and
pop
cmp
bound
pop
jo
add
pusha
jb
pop
xchg
pop
or
bnd
jmp
movsl
hlt
in
enter
and
imul
dec
es
mov
popa
inc
mov
jl
add
jno
cmc
nop
cmc
es
pop
fwait
jle
repnz
ljmp
sub
pop
movsb
sbb
and
pop
dec
dec
je
insb
lret
sub
scas
repnz
mov
jno
in
cmpb
adcb
js
cmp
movsb
cmpl
scas
shrb
add
in
xchg
dec
cld
sub
mul
mov
aaa
in
loop
cmc
repnz
inc
mov
and
sbb
sarl
sbb
cltd
sbb
push
push
and
mov
stos
call
mov
movsb
jnp
mov
fcomps
lahf
dec
mov
movsb
dec
pop
inc
or
or
mov
shlb
sahf
pop
ljmp
lock
ss
sbb
cs
popl
out
call
mov
xor
xchg
jne
call
adc
xor
lcall
fdiv
mov
xchg
hlt
cmp
popa
mul
mov
mov
and
les
sub
test
lret
dec
or
and
hlt
xchg
shll
jns
inc
rcll
pop
add
xor
mov
push
call
adc
lahf
stc
jns
cmc
rolb
mull
ss
and
mov
or
imul
aam
push
sub
mov
sbb
scas
xchg
inc
push
sub
fcomps
out
pop
lds
ja
sub
jg
or
inc
mov
mov
loopne
mov
pop
daa
adc
jae
lea
xchg
out
pop
orb
add
mov
mov
jbe
mov
mov
push
mov
xchg
dec
out
and
inc
and
out
dec
leave
cmp
lret
stos
mov
aam
inc
jns
xchg
push
loope
or
jmp
out
cs
add
lret
cs
cmpb
mov
or
ja
out
dec
mov
xchg
push
xor
mov
pop
insb
mov
fsubr
mov
jle
pop
fdivr
inc
aas
icebp
add
inc
js
stc
or
test
cmpsl
mov
ret
dec
imul
push
ss
mov
ljmp
or
cmp
insl
int3
adc
mov
repnz
je
fiadds
daa
bound
stos
shl
fwait
cmp
xor
sbb
adc
sar
aas
fcomps
lret
insb
sub
jno
or
outsl
aad
daa
lea
out
add
adc
sbb
cmp
pop
push
mov
mov
cmp
test
sub
out
lcall
loopne
xor
.byte
